
2fbc7a015f940e583400eb9ff3b7641ae07675eb576685cf691cfa3698d63af1.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xb4
  401009:	or     DWORD PTR ds:0x42b01c,0x3e2a
  401013:	mov    eax,DWORD PTR [ebp+0x8]
  401016:	add    DWORD PTR ds:0x42b01c,edi
  40101c:	push   ebx
  40101d:	mov    DWORD PTR ds:0x42c000,0x10
  401027:	cmp    DWORD PTR ds:0x42c000,0x0
  40102e:	je     0x401068
  401034:	cmp    DWORD PTR ds:0x42c000,0x1d
  40103b:	jb     0x401068
  401041:	jmp    0x401056
  401046:	push   0x42a000
  40104b:	push   0x42f107
  401050:	call   DWORD PTR ds:0x43000b
  401056:	mov    ecx,DWORD PTR ds:0x42c000
  40105c:	dec    ecx
  40105d:	mov    DWORD PTR ds:0x42c000,ecx
  401063:	jmp    0x401027
  401068:	push   esi
  401069:	and    esi,DWORD PTR ds:0x42d004
  40106f:	push   edi
  401070:	and    ecx,edi
  401072:	mov    esi,0x75108a4
  401077:	sub    DWORD PTR ds:0x42c008,0x273e
  401081:	xor    eax,esi
  401083:	xor    edi,edi
  401085:	xor    edi,DWORD PTR ds:0x424ab2
  40108b:	mov    ecx,DWORD PTR ds:0x424a9e
  401091:	sub    ecx,edi
  401093:	or     edi,DWORD PTR [edi+ecx*1]
  401096:	mov    edi,0x3272ec
  40109b:	mov    DWORD PTR ds:0x42900c,0x18d1
  4010a5:	add    eax,edi
  4010a7:	mov    DWORD PTR [ebp-0x40],eax
  4010aa:	and    DWORD PTR ds:0x42d01c,0x0
  4010b4:	xor    ecx,ecx
  4010b6:	add    ecx,DWORD PTR ds:0x42d01c
  4010bc:	inc    ecx
  4010bd:	mov    DWORD PTR ds:0x42d01c,ecx
  4010c3:	cmp    DWORD PTR ds:0x42d01c,0x21
  4010ca:	jle    0x4010f0
  4010d0:	jmp    0x4010e3
  4010d5:	push   0x42b000
  4010da:	push   DWORD PTR [ebp-0x10]
  4010dd:	call   DWORD PTR ds:0x43000f
  4010e3:	cmp    DWORD PTR ds:0x42d01c,0x16
  4010ea:	jb     0x4010b4
  4010f0:	mov    eax,ds:0x42f1eb
  4010f5:	sbb    ecx,DWORD PTR ds:0x42b014
  4010fb:	mov    eax,DWORD PTR [eax]
  4010fd:	and    DWORD PTR ds:0x42d00c,ecx
  401103:	mov    DWORD PTR [ebp-0x3c],eax
  401106:	or     eax,eax
  401108:	mov    eax,ds:0x42f3f3
  40110d:	mov    eax,DWORD PTR [eax]
  40110f:	mov    DWORD PTR [ebp-0x1c],eax
  401112:	adc    ecx,0x40bd
  401118:	mov    DWORD PTR [ebp-0x34],0xf89c87b0
  40111f:	and    DWORD PTR ds:0x42a018,0x0
  401129:	mov    ecx,DWORD PTR ds:0x42a018
  40112f:	inc    ecx
  401130:	mov    DWORD PTR ds:0x42a018,ecx
  401136:	cmp    DWORD PTR ds:0x42a018,0x1a
  40113d:	jg     0x40115b
  401143:	jmp    0x40114e
  401148:	call   DWORD PTR ds:0x430013
  40114e:	cmp    DWORD PTR ds:0x42a018,0x12
  401155:	jb     0x401129
  40115b:	mov    eax,DWORD PTR [ebp-0x34]
  40115e:	xor    eax,esi
  401160:	and    DWORD PTR ds:0x42a014,0x0
  40116a:	jmp    0x40117c
  40116f:	mov    ecx,DWORD PTR ds:0x42a014
  401175:	inc    ecx
  401176:	mov    DWORD PTR ds:0x42a014,ecx
  40117c:	cmp    DWORD PTR ds:0x42a014,0x17
  401183:	jae    0x4011cd
  401189:	cmp    DWORD PTR ds:0x42a014,0x9
  401190:	jbe    0x4011cd
  401196:	jmp    0x4011ae
  40119b:	push   0x42f19b
  4011a0:	push   DWORD PTR [ebp-0x10]
  4011a3:	push   0x271c
  4011a8:	call   DWORD PTR ds:0x430017
  4011ae:	cmp    DWORD PTR ds:0x42a014,0x8
  4011b5:	jne    0x4011c8
  4011bb:	mov    ecx,DWORD PTR ds:0x42a014
  4011c1:	inc    ecx
  4011c2:	mov    DWORD PTR ds:0x42a014,ecx
  4011c8:	jmp    0x40116f
  4011cd:	add    eax,edi
  4011cf:	mov    DWORD PTR [ebp-0x40],eax
  4011d2:	and    DWORD PTR ds:0x42a01c,0x0
  4011dc:	mov    ecx,DWORD PTR ds:0x42a01c
  4011e2:	inc    ecx
  4011e3:	mov    DWORD PTR ds:0x42a01c,ecx
  4011e9:	cmp    DWORD PTR ds:0x42a01c,0x19
  4011f0:	jge    0x40122b
  4011f6:	jmp    0x40121e
  4011fb:	push   DWORD PTR [ebp-0x24]
  4011fe:	push   DWORD PTR [ebp-0x18]
  401201:	push   0x42d008
  401206:	push   0x305c
  40120b:	push   0x63b3
  401210:	push   DWORD PTR [ebp-0x10]
  401213:	push   0x1042
  401218:	call   DWORD PTR ds:0x43001b
  40121e:	cmp    DWORD PTR ds:0x42a01c,0x12
  401225:	jb     0x4011dc
  40122b:	mov    eax,ds:0x42f36b
  401230:	movzx  ecx,BYTE PTR ds:0x42c01c
  401237:	and    DWORD PTR ds:0x42d010,ecx
  40123d:	mov    DWORD PTR [ebp-0x40],eax
  401240:	not    eax
  401242:	mov    eax,DWORD PTR [ebp-0x3c]
  401245:	sub    DWORD PTR ds:0x42d018,0x42c018
  40124f:	mov    DWORD PTR [ebp-0x14],eax
  401252:	mov    DWORD PTR ds:0x42c014,0x1c
  40125c:	cmp    DWORD PTR ds:0x42c014,0x0
  401263:	je     0x401299
  401269:	cmp    DWORD PTR ds:0x42c014,0x28
  401270:	jbe    0x401299
  401276:	jmp    0x401289
  40127b:	push   DWORD PTR [ebp-0x1c]
  40127e:	push   0x72ae
  401283:	call   DWORD PTR ds:0x430027
  401289:	mov    eax,ds:0x42c014
  40128e:	dec    eax
  40128f:	mov    ds:0x42c014,eax
  401294:	jmp    0x40125c
  401299:	mov    eax,DWORD PTR [ebp-0x14]
  40129c:	mov    ecx,DWORD PTR ds:0x42d014
  4012a2:	sub    DWORD PTR ds:0x42d004,ecx
  4012a8:	push   0x4
  4012aa:	or     DWORD PTR ds:0x42c004,0xf09
  4012b4:	pop    ecx
  4012b5:	sub    ecx,eax
  4012b7:	mov    eax,ds:0x424af8
  4012bc:	mov    eax,DWORD PTR [eax]
  4012be:	sbb    DWORD PTR ds:0x42c000,eax
  4012c4:	add    ecx,DWORD PTR [ebp-0x1c]
  4012c7:	sub    eax,0x251f
  4012cc:	mov    DWORD PTR [ebp-0x2c],0xf89c85f0
  4012d3:	jmp    0x40362f
  4012d8:	sbb    al,0x11
  4012da:	ja     0x4012ad
  4012dc:	imul   ecx,DWORD PTR [ebx+0x45619388],0xc
  4012e3:	push   esi
  4012e4:	mov    ch,0xcd
  4012e6:	push   es
  4012e7:	stos   BYTE PTR es:[edi],al
  4012e8:	jp     0x401364
  4012ea:	jp     0x401366
  4012ec:	cmp    ebx,DWORD PTR [edi+0x7a]
  4012ef:	jp     0x401316
  4012f1:	sub    al,0x27
  4012f3:	xor    DWORD PTR [ecx],ebx
  4012f5:	xor    eax,0x3a752f1b
  4012fa:	imul   esi,DWORD PTR [esi-0x1d],0x6d6a6a74
  401301:	inc    edx
  401302:	aad    0xdc
  401304:	icebp  
  401305:	pusha  
  401306:	dec    eax
  401307:	imul   esi,DWORD PTR [ecx+0x5b],0xffffffa0
  40130b:	jo     0x40137a
  40130d:	pop    ecx
  40130e:	iret   
  40130f:	pop    ebp
  401310:	dec    edx
  401311:	xor    BYTE PTR [edx+edi*8+0x4d678697],cl
  401318:	jg     0x401361
  40131a:	xor    BYTE PTR [esi+0x3bb2b07f],0x2c
  401321:	push   DWORD PTR [esi-0x24]
  401324:	cli    
  401325:	arpl   WORD PTR [edi+0x1e],di
  401328:	in     eax,dx
  401329:	cmp    ebp,ecx
  40132b:	mov    edx,0xde2397ed
  401330:	mov    ebp,DWORD PTR [ecx]
  401332:	mulps  xmm5,XMMWORD PTR [ebx+0x6d07d48a]
  401339:	fst    QWORD PTR [esp+eiz*8]
  40133c:	push   cs
  40133d:	cli    
  40133e:	sbb    BYTE PTR ss:[eax+0xc],cl
  401342:	imul   ebp,DWORD PTR ss:[eax-0x47],0xffffffaf
  401347:	and    edx,DWORD PTR [ecx+0x15]
  40134a:	mov    dh,0xff
  40134c:	jmp    0x42c43e9a
  401351:	enter  0xf95b,0x1a
  401355:	cli    
  401356:	js     0x401309
  401358:	jae    0x401337
  40135a:	cwde   
  40135b:	pop    edi
  40135c:	mov    esi,DWORD PTR [ecx+0x41922417]
  401362:	add    ebx,DWORD PTR [esi+0xb83823c]
  401368:	fisubr DWORD PTR ds:0x43448d62
  40136e:	fs repz iret 
  401371:	mov    ch,BYTE PTR [ecx]
  401373:	mov    eax,eax
  401375:	(bad)  
  401376:	int3   
  401377:	mov    BYTE PTR [ecx-0xc],ah
  40137a:	push   ebp
  40137b:	bound  ecx,QWORD PTR [esp+ecx*1+0x3e]
  40137f:	add    eax,DWORD PTR [esi+0x13]
  401382:	lods   eax,DWORD PTR ds:[esi]
  401383:	dec    ebx
  401384:	retf   0x40b7
  401387:	rcl    BYTE PTR [esi+eiz*2],1
  40138a:	std    
  40138b:	bound  esp,QWORD PTR [esi-0x4b]
  40138e:	stc    
  40138f:	push   0x1052f8bf
  401394:	mov    esi,0xfb10211f
  401399:	scas   eax,DWORD PTR es:[edi]
  40139a:	inc    ebp
  40139b:	leave  
  40139c:	call   0x522c:0x4edfb0f
  4013a3:	in     eax,0xac
  4013a5:	adc    al,0xda
  4013a7:	jb     0x4013ad
  4013a9:	jno    0x401340
  4013ab:	xor    ebx,DWORD PTR [ebx-0x16e72c0f]
  4013b1:	les    eax,FWORD PTR [edx+0xc]
  4013b4:	not    DWORD PTR [esi-0x3cf598b2]
  4013ba:	out    dx,eax
  4013bb:	mov    WORD PTR [edx+0x3e242151],ds
  4013c1:	xlat   BYTE PTR ds:[ebx]
  4013c2:	or     eax,DWORD PTR [edx+ecx*2+0x20]
  4013c6:	xchg   BYTE PTR [ebp-0x4c],ah
  4013c9:	(bad)  
  4013ca:	xor    al,ch
  4013cc:	inc    esp
  4013cd:	ss aam 0xee
  4013d0:	jo     0x401448
  4013d2:	jmp    DWORD PTR [eax]
  4013d4:	sub    bh,BYTE PTR [ebp-0x5]
  4013d7:	int3   
  4013d8:	add    edi,DWORD PTR [edx]
  4013da:	and    ch,0xca
  4013dd:	call   0x7031:0xdae978f5
  4013e4:	cmp    bl,BYTE PTR [eax+0x2e7f8258]
  4013ea:	(bad)  
  4013eb:	cli    
  4013ec:	and    BYTE PTR [ecx],al
  4013ee:	aas    
  4013ef:	mov    esi,DWORD PTR [ebx+0x17842e78]
  4013f5:	jo     0x401411
  4013f7:	into   
  4013f8:	or     cl,dh
  4013fa:	mov    ebp,0xb6aa0b0d
  4013ff:	sbb    al,0x97
  401401:	mov    eax,DWORD PTR [edi+ebp*8-0x51d510c9]
  401408:	(bad)  
  401409:	aam    0x3
  40140b:	scas   eax,DWORD PTR es:[edi]
  40140c:	lods   al,BYTE PTR ds:[esi]
  40140d:	pop    ebx
  40140e:	test   al,0xb7
  401410:	pusha  
  401411:	in     al,0xf2
  401413:	mov    dh,BYTE PTR [edx-0x3d]
  401416:	mov    bl,0x78
  401418:	fld    QWORD PTR [ecx+0x1d]
  40141b:	mov    bh,0x24
  40141d:	nop
  40141e:	dec    esp
  40141f:	and    ch,BYTE PTR [ebp+ebp*4+0x7]
  401423:	mov    dh,0x89
  401425:	js     0x4013de
  401427:	fabs   
  401429:	setnp  BYTE PTR [esp+ebp*2+0x2f]
  40142e:	in     eax,dx
  40142f:	loop   0x4013e3
  401431:	mov    eax,0xb0bcf52c
  401436:	or     ebp,edx
  401438:	idiv   ch
  40143a:	shr    DWORD PTR [ebx],0xf6
  40143d:	je     0x4014b4
  40143f:	mov    dl,0x33
  401441:	pop    ebx
  401442:	pop    ecx
  401443:	stos   DWORD PTR es:[edi],eax
  401444:	fucomp st(1)
  401446:	mov    bl,0x62
  401448:	inc    esp
  401449:	jbe    0x4013f0
  40144b:	mov    ds:0xeecbed1f,al
  401450:	jmp    0x4014d0
  401452:	mov    fs,WORD PTR [ecx+0x13]
  401455:	xor    DWORD PTR [esi],ecx
  401457:	xchg   ebp,eax
  401458:	ss sti 
  40145a:	pop    eax
  40145b:	fist   DWORD PTR [edx-0x2f]
  40145e:	jle    0x401423
  401460:	cs pop edx
  401462:	add    DWORD PTR [ecx+0x1f9758ab],edi
  401468:	popf   
  401469:	and    esp,DWORD PTR [ebp-0x5daab6f6]
  40146f:	cmp    esi,ebp
  401471:	mov    al,0x2d
  401473:	push   ss
  401474:	stos   BYTE PTR es:[edi],al
  401475:	add    al,0x7e
  401477:	retf   0x1d
  40147a:	es leave 
  40147c:	and    DWORD PTR [ecx-0x2b],0xb19172ec
  401483:	add    DWORD PTR [ebx+0x7bdb1d64],edi
  401489:	inc    edi
  40148a:	mov    edi,0x4c96f1ca
  40148f:	xchg   edx,eax
  401490:	cmp    eax,DWORD PTR [esi+0x326b1197]
  401496:	pop    ecx
  401497:	jle    0x40145f
  401499:	scas   eax,DWORD PTR es:[edi]
  40149a:	dec    ebx
  40149b:	cmp    ch,BYTE PTR [ecx+0x6e]
  40149e:	(bad)  
  40149f:	lea    esp,[ecx]
  4014a1:	and    DWORD PTR ds:[esi+0x4a],esi
  4014a5:	(bad)  
  4014a6:	ja     0x40149c
  4014a8:	sub    eax,0x93c55063
  4014ad:	add    DWORD PTR [ebx-0x79],eax
  4014b0:	sub    ecx,ebp
  4014b2:	or     al,0x14
  4014b4:	and    BYTE PTR [esi+edi*8],ah
  4014b7:	cli    
  4014b8:	xor    eax,0xd88ce71f
  4014bd:	fadd   QWORD PTR [edx]
  4014bf:	jne    0x40153e
  4014c1:	adc    ecx,DWORD PTR [eax]
  4014c3:	sbb    al,bl
  4014c5:	lods   ax,WORD PTR ds:[esi]
  4014c7:	mov    bl,0xa
  4014c9:	test   esp,ebp
  4014cb:	pushf  
  4014cc:	xor    BYTE PTR [edx+0x5c65239d],bl
  4014d2:	das    
  4014d3:	lods   eax,DWORD PTR ds:[esi]
  4014d4:	lea    edi,[edx-0x51]
  4014d7:	and    al,BYTE PTR [eax+0x15]
  4014da:	mov    bl,BYTE PTR [edx+0x528d571d]
  4014e0:	xchg   edi,eax
  4014e1:	mov    ebx,0x3bffe128
  4014e6:	add    DWORD PTR [esi],ebp
  4014e8:	add    eax,0xb4fd97d1
  4014ed:	jo     0x4014bd
  4014ef:	rcr    BYTE PTR [edi+0x1c0cab17],1
  4014f5:	sar    bh,1
  4014f7:	(bad)  
  4014f8:	fsubr  QWORD PTR [ebp+0x332cdb79]
  4014fe:	loope  0x4014bb
  401500:	rcr    DWORD PTR [eax],1
  401502:	jmp    0x49914414
  401507:	call   0x2e08:0x39a7f2ab
  40150e:	pop    es
  40150f:	(bad)  
  401510:	call   0x59c0:0x618ae069
  401517:	icebp  
  401518:	sub    DWORD PTR [esi+0x3],0xeded501d
  40151f:	cmp    eax,0x5c6bc209
  401524:	aad    0xba
  401526:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401527:	fdivr  st,st(2)
  401529:	(bad)  
  40152a:	and    al,0x3e
  40152c:	mov    bl,0xb5
  40152e:	loopne 0x401539
  401530:	lahf   
  401531:	adc    eax,0x1bfae428
  401536:	pop    ecx
  401537:	jle    0x4015b0
  401539:	mov    ds:0x2469974c,eax
  40153e:	mov    ds,WORD PTR [eax-0x28]
  401541:	std    
  401542:	sbb    DWORD PTR [ebx+0x17533aef],ebp
  401548:	jno    0x40159d
  40154a:	xor    dh,BYTE PTR [esi+ecx*2+0x76]
  40154e:	jle    0x401560
  401550:	adc    DWORD PTR [edx+0x22],ecx
  401553:	iret   
  401554:	sbb    edi,edi
  401556:	loope  0x401542
  401558:	adc    bl,cl
  40155a:	fild   QWORD PTR [ecx]
  40155c:	neg    DWORD PTR [ebx+0x70]
  40155f:	cmp    dh,dh
  401561:	leave  
  401562:	adc    bl,BYTE PTR [edi-0x7a]
  401565:	lods   eax,DWORD PTR ds:[esi]
  401566:	xor    edx,ebp
  401568:	test   eax,0xa673dfe1
  40156d:	aaa    
  40156e:	out    dx,eax
  40156f:	mov    al,0xc5
  401571:	pop    esi
  401572:	shl    BYTE PTR [ebx+eax*1+0x1ab2e0ab],0xcb
  40157a:	fwait
  40157b:	prefetchwt1 BYTE PTR [edx+0x26]
  40157f:	xlat   BYTE PTR ds:[ebx]
  401580:	aas    
  401581:	pop    edi
  401582:	add    esi,eax
  401584:	bound  ebp,QWORD PTR [edi+0xa]
  401587:	(bad)  
  401588:	out    0x7c,al
  40158a:	mov    eax,0x86745a19
  40158f:	stc    
  401590:	add    esi,DWORD PTR [esi+0x1f]
  401593:	dec    ebx
  401594:	and    BYTE PTR [edi+0x46],ch
  401597:	push   esp
  401598:	dec    edx
  401599:	jp     0x401544
  40159b:	in     eax,0xb2
  40159d:	mov    eax,ds:0x806dd57f
  4015a2:	add    DWORD PTR [edx],ebx
  4015a4:	cmp    al,0xc9
  4015a6:	mov    ecx,0x8bbde790
  4015ab:	imul   ecx,DWORD PTR [edi-0x14cc5378],0x6484e128
  4015b5:	pushf  
  4015b6:	pop    esp
  4015b7:	pop    eax
  4015b8:	mov    ch,0x76
  4015ba:	pusha  
  4015bb:	into   
  4015bc:	sub    DWORD PTR [ebx-0x68],edi
  4015bf:	pop    edi
  4015c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4015c1:	aaa    
  4015c2:	mov    ebp,0xe3ed92f5
  4015c7:	outs   dx,BYTE PTR ds:[esi]
  4015c8:	test   DWORD PTR [eax+0x2c],0xba5551e2
  4015cf:	lods   al,BYTE PTR ds:[esi]
  4015d0:	fisttp WORD PTR [ebp-0x52]
  4015d3:	fidiv  WORD PTR [edi-0x32]
  4015d6:	xchg   edx,eax
  4015d7:	mov    ebp,0x3a201741
  4015dc:	popa   
  4015dd:	call   0x87481865
  4015e2:	pop    eax
  4015e3:	out    dx,al
  4015e4:	or     ah,bl
  4015e6:	mov    cl,0xfc
  4015e8:	inc    ebp
  4015e9:	xchg   edx,eax
  4015ea:	pop    esp
  4015eb:	les    edi,FWORD PTR [edi-0x80]
  4015ee:	ins    BYTE PTR es:[edi],dx
  4015ef:	pop    eax
  4015f0:	sub    DWORD PTR [edi],edi
  4015f2:	dec    edi
  4015f3:	or     ebp,DWORD PTR [edi]
  4015f5:	jo     0x4015ed
  4015f7:	repz lds esi,FWORD PTR [esi+eax*2-0x3b7efa8b]
  4015ff:	adc    bl,BYTE PTR [esi+0xb]
  401602:	(bad)  
  401604:	sbb    DWORD PTR [esp+eiz*4+0x3d],ebx
  401608:	shl    BYTE PTR [esi],cl
  40160a:	mov    eax,ebx
  40160c:	out    0xed,eax
  40160e:	adc    bl,BYTE PTR [edi-0x4a2e272c]
  401614:	out    0x63,eax
  401616:	rol    BYTE PTR [edi+0x3bf0dc46],cl
  40161c:	push   es
  40161d:	jne    0x401676
  40161f:	cmp    al,0x3c
  401621:	mov    dl,0xa8
  401623:	pop    edx
  401624:	mov    eax,ds:0x8249303f
  401629:	push   ebp
  40162a:	and    bl,BYTE PTR [edi]
  40162c:	xlat   BYTE PTR ds:[ebx]
  40162d:	mov    eax,DWORD PTR [esi]
  40162f:	mov    cl,0xfd
  401631:	push   0x6d
  401633:	jl     0x401626
  401635:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401636:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401637:	inc    edx
  401638:	dec    esp
  401639:	shl    BYTE PTR [edx-0x30],0xe7
  40163d:	popa   
  40163e:	lods   al,BYTE PTR ds:[esi]
  40163f:	jbe    0x401647
  401641:	mov    ecx,0x71bfa504
  401646:	pop    ecx
  401647:	lods   al,BYTE PTR ds:[esi]
  401648:	xlat   BYTE PTR ds:[ebx]
  401649:	xor    ecx,ebp
  40164b:	inc    esi
  40164c:	mov    ebx,0x58f0f3ff
  401651:	jp     0x401643
  401653:	in     al,dx
  401654:	sub    ecx,DWORD PTR [edx]
  401656:	stos   BYTE PTR es:[edi],al
  401657:	lods   al,BYTE PTR ds:[esi]
  401658:	sbb    al,0x9d
  40165a:	icebp  
  40165b:	mov    dl,BYTE PTR [ebp+0x1215a891]
  401661:	sub    edi,DWORD PTR [ecx+0x49]
  401664:	jecxz  0x401615
  401666:	sbb    ah,bl
  401668:	dec    ecx
  401669:	into   
  40166a:	cli    
  40166b:	imul   ecx,ebp,0xffffffde
  40166e:	out    0x97,al
  401670:	pop    esi
  401671:	pop    ecx
  401672:	mov    cl,0x69
  401674:	pop    edx
  401675:	pop    esi
  401676:	pop    eax
  401677:	inc    ecx
  401678:	cli    
  401679:	jmp    DWORD PTR [edi]
  40167b:	inc    edi
  40167c:	jg     0x40162b
  40167e:	push   0x73
  401680:	dec    ebx
  401681:	data16 or al,0x3b
  401684:	out    dx,al
  401685:	push   ds
  401686:	fdivrp st(1),st
  401688:	inc    edx
  401689:	sub    eax,0x8efdbfb9
  40168e:	push   cs
  40168f:	mov    cl,0xe4
  401691:	stos   DWORD PTR es:[edi],eax
  401692:	loopne 0x4016a9
  401694:	mov    ds,WORD PTR [ecx+ebx*2+0x1e]
  401698:	fild   DWORD PTR [esi+0x6988cdc6]
  40169e:	test   DWORD PTR [eax+ebp*8-0x6],ecx
  4016a2:	mul    BYTE PTR [eax]
  4016a4:	call   0x9601:0xb072f34
  4016ab:	stos   BYTE PTR es:[edi],al
  4016ac:	push   eax
  4016ad:	test   eax,0xc2e89eb9
  4016b2:	jg     0x401666
  4016b4:	out    dx,al
  4016b5:	mov    al,0x1a
  4016b7:	xchg   ebp,eax
  4016b8:	mov    ds:0x264deec4,eax
  4016bd:	mov    ecx,0x600484f8
  4016c2:	pusha  
  4016c3:	mov    WORD PTR [edi+0x14f8ccbc],es
  4016c9:	add    DWORD PTR [edi-0x12],edx
  4016cc:	loope  0x40165d
  4016ce:	push   es
  4016cf:	sbb    al,0x6b
  4016d1:	dec    ecx
  4016d2:	push   esp
  4016d3:	mov    esp,0xb7d5133b
  4016d8:	lods   eax,DWORD PTR ds:[esi]
  4016d9:	stc    
  4016da:	or     bh,BYTE PTR [edi-0x73]
  4016dd:	shl    BYTE PTR [ebx],cl
  4016df:	push   esp
  4016e0:	sub    DWORD PTR [ecx-0x2a282627],esi
  4016e6:	inc    edi
  4016e7:	adc    BYTE PTR [eax-0x6d],cl
  4016ea:	and    al,0x9
  4016ec:	push   ss
  4016ed:	arpl   WORD PTR [ecx+eiz*2-0x1bd25d9],sp
  4016f4:	test   BYTE PTR [ebx-0x55],ah
  4016f7:	lds    ebx,FWORD PTR [ecx-0x7d5681fc]
  4016fd:	mov    ds:0xa2eef862,al
  401702:	xchg   ecx,eax
  401703:	sbb    bh,BYTE PTR ds:0x8459f403
  401709:	adc    ah,BYTE PTR ds:0xbad9debc
  40170f:	inc    ebp
  401710:	fmul   DWORD PTR [ebp-0x3f]
  401713:	sub    dl,BYTE PTR [edx+0x39]
  401716:	daa    
  401717:	sbb    eax,0x731695e0
  40171c:	fmul   DWORD PTR [ebx]
  40171e:	lahf   
  40171f:	jmp    FWORD PTR [ebp-0x1b42f937]
  401725:	ror    BYTE PTR [ebx-0x66],cl
  401728:	imul   eax,esp,0x3909f2bf
  40172e:	out    dx,eax
  40172f:	push   ds
  401730:	xor    BYTE PTR [ebp-0x3b520e9a],al
  401736:	cmp    edi,ebx
  401738:	ret    
  401739:	mov    ebp,0xafecfefc
  40173e:	loope  0x4017aa
  401740:	(bad)  
  401741:	adc    ebx,DWORD PTR [ebp-0xea4967b]
  401747:	cmp    DWORD PTR [ebp-0x21],esp
  40174a:	sbb    DWORD PTR [ebp-0x4a8a7f6],edx
  401750:	shl    DWORD PTR [edi+0x28],0xc0
  401754:	jns    0x4017b5
  401756:	adc    DWORD PTR [ebp-0x5d],edx
  401759:	dec    edi
  40175a:	push   esi
  40175b:	sahf   
  40175c:	jl     0x4017d4
  40175e:	pop    ebx
  40175f:	cs sub al,ah
  401762:	aaa    
  401763:	or     DWORD PTR [eax*8+0x58e0f414],0x5f
  40176b:	repnz fsubrp st(2),st
  40176e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40176f:	sub    DWORD PTR [ecx+0x4a9a7c21],edi
  401775:	popf   
  401776:	xor    al,0x19
  401778:	sub    eax,0x25224ea2
  40177d:	bound  eax,QWORD PTR [ebx-0x2e62cd01]
  401783:	mov    esp,0xfc9486c4
  401788:	sub    edx,DWORD PTR ds:0x4be4eee8
  40178e:	hlt    
  40178f:	lock ja 0x4017f9
  401792:	loope  0x40180c
  401794:	jne    0x401794
  401796:	inc    ecx
  401797:	sti    
  401798:	stc    
  401799:	sbb    BYTE PTR ds:[eax],cl
  40179c:	jae    0x40181d
  40179e:	dec    ecx
  40179f:	(bad)  
  4017a0:	adc    DWORD PTR [ebp+ebx*2-0x65],ebp
  4017a4:	or     DWORD PTR [ebp-0x6aada04d],ebp
  4017aa:	sub    al,0x30
  4017ac:	std    
  4017ad:	sub    eax,0x281b02ce
  4017b2:	jne    0x401750
  4017b4:	(bad)  
  4017b5:	repz jle 0x401777
  4017b8:	or     eax,0x8f537989
  4017bd:	push   edx
  4017be:	into   
  4017bf:	pushf  
  4017c0:	push   edx
  4017c1:	jb     0x401748
  4017c3:	(bad)  
  4017c4:	fisttp WORD PTR [edi-0x31]
  4017c7:	ret    
  4017c8:	shr    BYTE PTR [edi+0x763c05fa],cl
  4017ce:	fsubr  DWORD PTR [edi+0x6]
  4017d1:	loopne 0x4017a0
  4017d3:	stc    
  4017d4:	mov    bh,0xf9
  4017d6:	cmp    esi,DWORD PTR [ecx]
  4017d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4017d9:	stc    
  4017da:	mov    edx,0x68553e14
  4017df:	inc    edi
  4017e0:	push   esp
  4017e1:	pushf  
  4017e2:	outs   dx,BYTE PTR ds:[esi]
  4017e3:	repz cmp BYTE PTR [edi+esi*2-0x7b],0xce
  4017e9:	jno    0x4017d4
  4017eb:	dec    eax
  4017ec:	retf   0xe4e9
  4017ef:	retf   0x346e
  4017f2:	rcl    BYTE PTR [ecx-0x4d],cl
  4017f5:	popf   
  4017f6:	sbb    ecx,DWORD PTR ds:0x47800a20
  4017fc:	xchg   esi,eax
  4017fd:	jno    0x40178a
  4017ff:	sub    DWORD PTR [ebp-0x49ee28ce],ebx
  401805:	retf   0x40cd
  401808:	fcmovnu st,st(5)
  40180a:	ds xchg edi,eax
  40180c:	jmp    0xd907bbf2
  401811:	ret    
  401812:	loope  0x40179d
  401814:	push   0x2acd43d4
  401819:	cmp    al,0x3b
  40181b:	xchg   ecx,ebx
  40181d:	xor    DWORD PTR [edx+0x67fe6468],eax
  401823:	icebp  
  401824:	sbb    al,0x81
  401826:	ror    DWORD PTR [edi+0x6aad8ca7],cl
  40182c:	bound  edx,QWORD PTR [edi-0x3a]
  40182f:	xchg   al,ah
  401831:	mov    dl,0x2e
  401833:	pop    edx
  401834:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401835:	test   BYTE PTR [edi-0x53],0xbc
  401839:	add    BYTE PTR [ecx+edx*4-0x1f979ed4],dh
  401840:	push   DWORD PTR [esi-0x6706ea9d]
  401846:	shr    DWORD PTR [ebp-0x10],1
  401849:	adc    eax,0xc93c6530
  40184e:	outs   dx,DWORD PTR ds:[esi]
  40184f:	jle    0x4017f7
  401851:	rol    DWORD PTR [eax-0x79519148],0x91
  401858:	es mov edi,0x8daf41bf
  40185e:	push   es
  40185f:	adc    esi,DWORD PTR [ebx+0x52e0e744]
  401865:	mov    edx,ebp
  401867:	cmp    edx,DWORD PTR es:[eax+edi*4-0x63116fbf]
  40186f:	pop    ebx
  401870:	mov    BYTE PTR [ebx],ch
  401872:	mov    ch,0x1b
  401874:	daa    
  401875:	fdivr  st,st(6)
  401877:	mov    ch,0x46
  401879:	pop    esi
  40187a:	cs pop eax
  40187c:	cld    
  40187d:	pop    edi
  40187e:	inc    ebx
  40187f:	jge    0x4018b3
  401881:	add    BYTE PTR [edi+0x52aa8ff5],0x6
  401888:	xor    dh,BYTE PTR ds:0xfad3b742
  40188e:	add    bh,BYTE PTR [edi-0x2e]
  401891:	ja     0x4018fe
  401893:	push   0xffffffd5
  401895:	adc    al,0x47
  401897:	(bad)  
  401898:	pop    esi
  401899:	ret    
  40189a:	std    
  40189b:	loop   0x4018b4
  40189d:	add    cl,BYTE PTR [edx-0x33552edf]
  4018a3:	rcl    BYTE PTR [edx-0x48],1
  4018a6:	aas    
  4018a7:	xchg   esi,eax
  4018a8:	add    dh,ch
  4018aa:	mov    dl,0x56
  4018ac:	dec    esp
  4018ad:	and    BYTE PTR [ebx-0x1d],bl
  4018b0:	es popf 
  4018b2:	or     esi,eax
  4018b4:	mov    dl,0xbe
  4018b6:	and    cl,BYTE PTR [ebx-0x5aa03931]
  4018bc:	or     DWORD PTR [eax+ebx*4+0x1d4acf2b],ecx
  4018c3:	pop    esp
  4018c4:	adc    dl,BYTE PTR [ebx-0x20281381]
  4018ca:	scas   al,BYTE PTR es:[edi]
  4018cb:	fbstp  TBYTE PTR [ebx+ecx*1-0x19]
  4018cf:	mov    ch,0x61
  4018d1:	loope  0x4018b1
  4018d3:	sub    edi,DWORD PTR [ecx]
  4018d5:	and    edx,DWORD PTR [ecx]
  4018d7:	repz cmp edx,DWORD PTR [ebx]
  4018da:	and    BYTE PTR [eax],cl
  4018dc:	pop    esp
  4018dd:	cmc    
  4018de:	pop    ecx
  4018df:	hlt    
  4018e0:	dec    eax
  4018e1:	int3   
  4018e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4018e3:	push   ss
  4018e4:	imul   edi,DWORD PTR [edi-0x7ddd82a6],0xffffffe2
  4018eb:	(bad)  
  4018ec:	lock jge 0x401923
  4018ef:	jmp    0x4018fc
  4018f1:	mov    ch,0xc4
  4018f3:	(bad)  
  4018f4:	jo     0x40193b
  4018f6:	sub    bl,BYTE PTR [edi+0x82010d7]
  4018fc:	retf   0xdda3
  4018ff:	inc    esp
  401900:	xchg   ebx,eax
  401901:	jne    0x401904
  401903:	in     eax,0x70
  401905:	(bad)  
  401908:	shl    DWORD PTR [ebp+0x2c],0x93
  40190c:	xchg   ebx,eax
  40190d:	shl    BYTE PTR [ebp+0x2652ba6],cl
  401913:	sbb    eax,0x1a000ebb
  401918:	js     0x4018a8
  40191a:	mov    bh,0x32
  40191c:	xchg   BYTE PTR [eax+0x56],ah
  40191f:	xchg   ebp,eax
  401920:	pusha  
  401921:	push   0x3b
  401923:	outs   dx,DWORD PTR ds:[esi]
  401924:	inc    ebx
  401925:	sbb    al,0xf2
  401927:	adc    BYTE PTR [ebp-0x6f],ah
  40192a:	dec    edi
  40192b:	push   esi
  40192c:	imul   edi,DWORD PTR [edi-0x6d],0x62b2bfbc
  401933:	jp     0x4018b9
  401935:	in     al,0x86
  401937:	adc    ah,cl
  401939:	imul   ebp,ecx,0xffffffde
  40193c:	test   al,0xa9
  40193e:	inc    ebx
  40193f:	mov    eax,0xe85bc134
  401944:	repz rol DWORD PTR [ecx-0x57],1
  401948:	in     eax,0x35
  40194a:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40194c:	(bad)  
  40194d:	imul   bl
  40194f:	jmp    0x7e670096
  401954:	xchg   edx,eax
  401955:	xchg   ebp,eax
  401956:	mov    ds:0xf09f687,eax
  40195b:	cs mov edx,0xeafcc66f
  401961:	shl    DWORD PTR [esi+0x38475f36],cl
  401967:	cmp    eax,0xd06312b1
  40196c:	imul   edx,DWORD PTR ds:0xa1493105,0x870a3491
  401976:	loopne 0x401969
  401978:	cwde   
  401979:	mov    dh,0x91
  40197b:	cmp    al,0x70
  40197d:	out    dx,eax
  40197e:	pop    esp
  40197f:	out    dx,al
  401980:	(bad)  
  401981:	fisubr WORD PTR [eax-0x44f88af6]
  401987:	enter  0x3f4b,0x85
  40198b:	pop    ds
  40198c:	pop    ds
  40198d:	push   esp
  40198e:	stos   DWORD PTR es:[edi],eax
  40198f:	push   ebx
  401990:	outs   dx,BYTE PTR ds:[esi]
  401991:	cmp    DWORD PTR [esi+0x1c5c9f53],ebx
  401997:	inc    eax
  401998:	push   es
  401999:	test   BYTE PTR [ebp-0x34],al
  40199c:	sub    BYTE PTR [esi],al
  40199e:	stos   BYTE PTR es:[edi],al
  40199f:	pushf  
  4019a0:	jnp    0x401940
  4019a2:	jmp    0x4b24d206
  4019a7:	sahf   
  4019a8:	in     eax,dx
  4019a9:	pop    ds
  4019aa:	jb     0x4019e7
  4019ac:	outs   dx,BYTE PTR ds:[esi]
  4019ad:	jmp    0x7fc5259c
  4019b2:	sub    eax,0x67426e1f
  4019b7:	jns    0x401a15
  4019b9:	dec    edi
  4019ba:	lods   al,BYTE PTR ds:[esi]
  4019bb:	pop    esi
  4019bc:	fs jnp 0x4019f7
  4019bf:	or     DWORD PTR [edi-0x2142cb61],ebx
  4019c5:	ret    
  4019c6:	jl     0x40199b
  4019c8:	add    ebp,DWORD PTR [ebx-0x736bf936]
  4019ce:	(bad)  
  4019cf:	out    dx,al
  4019d0:	pop    DWORD PTR [esi]
  4019d2:	and    eax,0xa1668d6c
  4019d7:	cwde   
  4019d8:	ja     0x401a0d
  4019da:	adc    esi,DWORD PTR [ecx-0x7]
  4019dd:	ret    0x1b89
  4019e0:	pop    es
  4019e1:	imul   ecx
  4019e3:	pusha  
  4019e4:	pop    es
  4019e5:	jae    0x40199f
  4019e7:	cli    
  4019e8:	adc    DWORD PTR [bx+si-0x1c6c],ebp
  4019ed:	pop    eax
  4019ee:	cmp    BYTE PTR [esi*2+0x1ef52057],ah
  4019f5:	pop    ebx
  4019f6:	int    0x35
  4019f8:	test   DWORD PTR [ecx+0x76],edi
  4019fb:	mov    dl,0x35
  4019fd:	dec    ebx
  4019fe:	fsub   QWORD PTR [eax+edi*2-0x4f]
  401a02:	clc    
  401a03:	mov    ebp,?
  401a05:	mov    al,0x6
  401a07:	in     eax,dx
  401a08:	cmp    edi,DWORD PTR [esi]
  401a0a:	jnp    0x401a45
  401a0c:	mov    ds:0x30b801ce,al
  401a11:	in     eax,0xfb
  401a13:	ins    BYTE PTR es:[edi],dx
  401a14:	fisubr WORD PTR [edx-0x63fee0ec]
  401a1a:	mov    ebp,0xea77a053
  401a1f:	push   ebx
  401a20:	xor    cl,ah
  401a22:	xchg   DWORD PTR [edi-0x5a],ebx
  401a25:	dec    ebp
  401a26:	cli    
  401a27:	daa    
  401a28:	retf   
  401a29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401a2a:	mov    bl,0xce
  401a2c:	lock ins BYTE PTR es:[edi],dx
  401a2e:	call   0x117897e1
  401a33:	cdq    
  401a34:	inc    edx
  401a35:	or     al,0x22
  401a37:	push   es
  401a38:	dec    esp
  401a39:	pop    esp
  401a3a:	sub    esp,0x1346f9e2
  401a40:	iret   
  401a41:	mov    WORD PTR [edx+0x5a],gs
  401a44:	pop    ds
  401a45:	jmp    0x401a88
  401a47:	adc    ebp,esi
  401a49:	xchg   edx,eax
  401a4a:	and    edi,ebx
  401a4c:	inc    cl
  401a4e:	cmp    al,0x24
  401a50:	add    eax,0x2e8ea4a1
  401a55:	push   es
  401a56:	fidiv  DWORD PTR [esi-0x7654ce7b]
  401a5c:	mov    ecx,0x2f0dd614
  401a61:	(bad)  [eax+0x39]
  401a64:	cmc    
  401a65:	add    ecx,ebx
  401a67:	jb     0x401a74
  401a69:	push   edx
  401a6a:	(bad)  [edx-0x5c]
  401a6d:	push   esp
  401a6e:	sbb    eax,0x6738413b
  401a73:	cmp    BYTE PTR [edi],dl
  401a75:	daa    
  401a76:	xor    BYTE PTR [ebx-0x65f4cfab],dl
  401a7c:	add    edx,DWORD PTR ds:0xf4c1f3c4
  401a82:	cmp    al,0xad
  401a84:	xchg   ebp,eax
  401a85:	loopne 0x401ac7
  401a87:	sub    al,BYTE PTR [eax]
  401a89:	fisubr WORD PTR [edx]
  401a8b:	push   ebx
  401a8c:	ins    DWORD PTR es:[edi],dx
  401a8d:	in     al,dx
  401a8e:	js     0x401a33
  401a90:	push   cs
  401a91:	aad    0xbf
  401a93:	stos   DWORD PTR es:[edi],eax
  401a94:	arpl   WORD PTR [eax],ax
  401a96:	xchg   DWORD PTR [ebp+ebx*1+0x41c3df77],ecx
  401a9d:	jmp    0xa6ca848a
  401aa2:	push   ss
  401aa3:	xor    eax,0x9fb72a81
  401aa8:	add    BYTE PTR [edx+0x602081ef],dl
  401aae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401aaf:	xor    eax,0xf1f93c7d
  401ab4:	ss jbe 0x401b33
  401ab7:	add    al,0xe5
  401ab9:	loop   0x401a89
  401abb:	adc    eax,0x31992f9c
  401ac0:	jp     0x401aa9
  401ac2:	jecxz  0x401ad5
  401ac4:	push   esi
  401ac5:	sub    esp,DWORD PTR [esi+0x3a]
  401ac8:	int3   
  401ac9:	adc    BYTE PTR [ebx-0x47],dh
  401acc:	mov    ebp,0xb3ee6784
  401ad1:	or     ah,BYTE PTR [eax+ecx*4+0x7c3a122b]
  401ad8:	or     bl,BYTE PTR [edi+ecx*8]
  401adb:	iret   
  401adc:	stos   BYTE PTR es:[edi],al
  401add:	daa    
  401ade:	lahf   
  401adf:	mov    ebx,fs
  401ae1:	mov    esi,0x2e3a278c
  401ae6:	(bad)  
  401ae7:	fwait
  401ae8:	sti    
  401ae9:	pop    esp
  401aea:	jmp    0xe0ae:0xa01eb5c4
  401af1:	mov    esi,0xeb703816
  401af6:	test   DWORD PTR [edi],ecx
  401af8:	popf   
  401af9:	je     0x401b06
  401afb:	repz stc 
  401afd:	sub    ch,BYTE PTR [edx+0x1d]
  401b00:	sub    ch,dl
  401b02:	xor    ebx,edi
  401b04:	xlat   BYTE PTR ds:[ebx]
  401b05:	pop    edx
  401b06:	cwde   
  401b07:	mov    edi,0xf202931e
  401b0c:	sahf   
  401b0d:	outs   dx,BYTE PTR ds:[esi]
  401b0e:	push   esp
  401b0f:	and    ch,BYTE PTR [edx-0xa28c560]
  401b15:	jle    0x401b08
  401b17:	and    eax,0x968dfe26
  401b1c:	and    dh,BYTE PTR [esi-0x3271a698]
  401b22:	ret    0x4b4d
  401b25:	xchg   ebp,eax
  401b26:	jmp    0xa410:0xa69af4f9
  401b2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401b2e:	imul   esp,ebp,0xcbecb504
  401b34:	aaa    
  401b35:	lods   al,BYTE PTR ds:[esi]
  401b36:	addr16 into 
  401b38:	and    ah,dh
  401b3a:	pop    edi
  401b3b:	ins    DWORD PTR es:[edi],dx
  401b3c:	das    
  401b3d:	mov    BYTE PTR [bx-0x15d1],al
  401b42:	ficomp DWORD PTR [eax]
  401b44:	jnp    0x401ad4
  401b46:	adc    al,0x99
  401b48:	test   al,0xc3
  401b4a:	jp     0x401b3b
  401b4c:	cmp    ah,ch
  401b4e:	or     eax,0x8ffe481d
  401b53:	push   es
  401b54:	sti    
  401b55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401b56:	stc    
  401b57:	xchg   edx,eax
  401b58:	clc    
  401b59:	test   DWORD PTR [esp+ebx*2],0x8a9b38ad
  401b60:	call   0x5e9baa1b
  401b65:	xor    al,0xae
  401b67:	test   BYTE PTR [esi],0x59
  401b6a:	fwait
  401b6b:	in     eax,dx
  401b6c:	push   ebx
  401b6d:	push   esi
  401b6e:	stos   DWORD PTR es:[edi],eax
  401b6f:	cmc    
  401b70:	jae    0x401afe
  401b72:	ror    BYTE PTR [edx+0x5f],0x1d
  401b76:	sbb    ecx,DWORD PTR [eax-0x5579e57b]
  401b7c:	fdiv   QWORD PTR [eax]
  401b7e:	sbb    DWORD PTR [edi-0x70b64f6c],ebp
  401b84:	jl     0x401c04
  401b86:	mov    bh,ah
  401b88:	sub    dl,dh
  401b8a:	fcmovb st,st(1)
  401b8c:	mov    cl,0xe4
  401b8e:	out    0x21,al
  401b90:	aaa    
  401b91:	inc    edi
  401b92:	ss jp  0x401b5b
  401b95:	repnz xchg ebx,eax
  401b97:	fdiv   st(0),st
  401b99:	cmp    dl,ch
  401b9b:	adc    al,0x0
  401b9d:	arpl   dx,dx
  401b9f:	arpl   WORD PTR [edi],bx
  401ba1:	leave  
  401ba2:	cs popa 
  401ba4:	adc    eax,0x83a58077
  401ba9:	fcmovu st,st(2)
  401bab:	mov    ah,BYTE PTR [ecx]
  401bad:	das    
  401bae:	rcl    ch,cl
  401bb0:	rcr    BYTE PTR [eax-0x44],0xc4
  401bb4:	xchg   edi,eax
  401bb5:	xchg   edx,eax
  401bb6:	mov    ebx,0x2e332022
  401bbb:	ins    DWORD PTR es:[edi],dx
  401bbc:	xchg   ecx,eax
  401bbd:	dec    ebp
  401bbe:	es neg dh
  401bc1:	sbb    BYTE PTR [edi+eiz*4+0x6],0xea
  401bc6:	push   edi
  401bc7:	xchg   BYTE PTR [edx],ch
  401bc9:	out    0xd,eax
  401bcb:	mov    ebp,0x7af2a225
  401bd0:	sti    
  401bd1:	xchg   edi,eax
  401bd2:	push   ds
  401bd3:	sbb    al,0x6e
  401bd5:	test   al,0xc6
  401bd7:	and    BYTE PTR [ebx+0x30508e99],0x29
  401bde:	repz es sar dh,0x35
  401be3:	ret    0x8db2
  401be6:	mov    bh,0x7d
  401be8:	add    al,BYTE PTR [ebp+0x77]
  401beb:	inc    eax
  401bec:	mov    edi,ss
  401bee:	xchg   ebp,eax
  401bef:	outs   dx,DWORD PTR ds:[esi]
  401bf0:	sti    
  401bf1:	scas   eax,DWORD PTR es:[edi]
  401bf2:	push   ebp
  401bf3:	or     al,0x8c
  401bf5:	add    ecx,DWORD PTR [esi+0x4c29ad2f]
  401bfb:	ret    
  401bfc:	and    DWORD PTR [esi-0x51375b7d],esp
  401c02:	xor    al,0x8f
  401c04:	mov    gs,WORD PTR [edi]
  401c06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c07:	and    eax,0x52c1c6b3
  401c0c:	jns    0x401be8
  401c0e:	mov    bh,dl
  401c10:	adc    eax,0xedbab2ec
  401c15:	cld    
  401c16:	fstp   TBYTE PTR [edi]
  401c18:	stc    
  401c19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401c1a:	xor    eax,0x2294cee0
  401c1f:	neg    DWORD PTR [ecx-0x66016496]
  401c25:	dec    edi
  401c26:	push   0x75
  401c28:	mov    al,ds:0x43ade68c
  401c2d:	dec    esp
  401c2e:	daa    
  401c2f:	mov    edi,0xf7167e42
  401c34:	inc    ecx
  401c35:	mov    WORD PTR [edx+edx*1+0x107a5092],cs
  401c3c:	nop
  401c3d:	and    edx,DWORD PTR [edi]
  401c3f:	sub    eax,0x9e24b1f8
  401c44:	popf   
  401c45:	sahf   
  401c46:	and    edi,DWORD PTR [ebx-0x739a80ca]
  401c4c:	cwde   
  401c4d:	jp     0x401c07
  401c4f:	mov    esp,0xe7f845cb
  401c54:	or     eax,0xb18b1ea4
  401c59:	je     0x401c06
  401c5b:	jmp    0x2646727b
  401c60:	(bad)  
  401c61:	mov    edi,0xf929adea
  401c66:	(bad)  
  401c67:	leave  
  401c68:	(bad)  
  401c69:	cli    
  401c6a:	mov    ds:0x9eb68bc,al
  401c6f:	bts    WORD PTR [esi-0x569ea2cd],bp
  401c77:	shl    DWORD PTR [edi],1
  401c79:	inc    esp
  401c7a:	ins    BYTE PTR es:[edi],dx
  401c7b:	ds imul esi,ebp,0x41
  401c7f:	push   ebp
  401c80:	and    cl,BYTE PTR [edi]
  401c82:	push   ebp
  401c83:	mov    eax,0x6a154a91
  401c88:	scas   al,BYTE PTR es:[edi]
  401c89:	xlat   BYTE PTR ds:[ebx]
  401c8a:	imul   ecx,DWORD PTR [ecx],0xcdfc4d58
  401c90:	push   edx
  401c91:	xchg   BYTE PTR [edi+eax*2],dh
  401c94:	sbb    eax,0x4e45917d
  401c99:	push   0xffffff9f
  401c9b:	sub    bh,BYTE PTR [eax+0x435b9242]
  401ca1:	xchg   ecx,eax
  401ca2:	es xor ah,dh
  401ca5:	mov    fs,WORD PTR [esi+ecx*2+0x7f]
  401ca9:	test   al,0x81
  401cab:	sub    BYTE PTR [eax-0x78324816],dh
  401cb1:	rcr    ebx,1
  401cb3:	add    BYTE PTR [edi],dl
  401cb5:	pop    edx
  401cb6:	mov    DWORD PTR ds:[esi],edi
  401cb9:	push   ds
  401cba:	pushf  
  401cbb:	mov    ah,0xaf
  401cbd:	addr16 dec ebp
  401cbf:	mov    esi,0xb021647f
  401cc4:	sbb    dl,BYTE PTR [edx]
  401cc6:	(bad)  
  401cc7:	hlt    
  401cc8:	adc    DWORD PTR [ebx-0x5060c2ff],edi
  401cce:	xor    BYTE PTR [ecx],al
  401cd0:	push   ds
  401cd1:	xchg   esp,eax
  401cd2:	push   cs
  401cd3:	add    al,0x78
  401cd5:	out    dx,eax
  401cd6:	rol    DWORD PTR [ebp-0x77],1
  401cd9:	es fld1 
  401cdc:	js     0x401d49
  401cde:	cmp    edi,DWORD PTR [eax]
  401ce0:	or     DWORD PTR [edx+ebx*8+0xa],edi
  401ce4:	mov    dl,0x72
  401ce6:	in     al,0x6f
  401ce8:	loopne 0x401d1c
  401cea:	mov    ebp,0x28e91e4c
  401cef:	call   0x4637:0xe485a238
  401cf6:	jne    0x401c9d
  401cf8:	shl    ecx,1
  401cfa:	mov    ecx,0x90480749
  401cff:	add    BYTE PTR [eax+0x6a],bh
  401d02:	outs   dx,BYTE PTR ds:[esi]
  401d03:	test   eax,0x5b159daa
  401d08:	and    al,0x75
  401d0a:	lea    esi,[edx]
  401d0c:	mov    ebp,0x53e155a6
  401d11:	xor    DWORD PTR [edx-0x5f],0xffffffcb
  401d15:	mov    edi,0x2dab0681
  401d1a:	ss mov bh,0x19
  401d1d:	dec    ecx
  401d1e:	push   esi
  401d1f:	add    DWORD PTR ds:0x95194892,ebx
  401d25:	push   ds
  401d26:	inc    ebp
  401d27:	mov    edx,0x57b4dadf
  401d2c:	aas    
  401d2d:	sahf   
  401d2e:	jns    0x401d7a
  401d30:	je     0x401d99
  401d32:	inc    DWORD PTR [ecx+0x6d601d69]
  401d38:	hlt    
  401d39:	daa    
  401d3a:	daa    
  401d3b:	jmp    0x401ce5
  401d3d:	or     cl,BYTE PTR [eax+0x61]
  401d40:	pop    ss
  401d41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d42:	sub    DWORD PTR [edx+0x498e40ac],edx
  401d48:	les    edi,FWORD PTR gs:[ecx+0x1938f397]
  401d4f:	rcr    DWORD PTR [esi],1
  401d51:	sbb    DWORD PTR [eax+0x43127e3b],esp
  401d57:	pop    eax
  401d58:	fisub  WORD PTR [edi]
  401d5a:	(bad)
  401d5d:	push   cs
  401d5e:	xor    bl,BYTE PTR [edi]
  401d60:	dec    esi
  401d61:	push   0x53fa66d8
  401d66:	dec    eax
  401d67:	dec    esp
  401d68:	or     bh,0xf2
  401d6b:	sub    al,0x41
  401d6d:	mov    ds:0xfba28bb4,eax
  401d72:	mov    eax,0xbe8c1da
  401d77:	sbb    eax,0xd4436dd3
  401d7c:	mov    ?,WORD PTR [edi]
  401d7e:	dec    BYTE PTR [eax]
  401d80:	push   ebx
  401d81:	jmp    0x3544:0xd38cba1d
  401d88:	sub    ecx,DWORD PTR [ecx+0x46b9195f]
  401d8e:	pop    ebx
  401d8f:	xchg   ebx,eax
  401d90:	and    dh,BYTE PTR [eax+0x1af9750]
  401d96:	inc    esi
  401d97:	add    al,0xb3
  401d99:	test   DWORD PTR [ecx+0x50c002f9],edx
  401d9f:	add    BYTE PTR [edi+0x71cb875c],dh
  401da5:	enter  0x3d01,0x7f
  401da9:	inc    edi
  401daa:	fs mov bl,0x28
  401dad:	sub    al,0x63
  401daf:	mov    dh,bl
  401db1:	xor    eax,0xce7aa336
  401db6:	jo     0x401d6e
  401db8:	js     0x401d94
  401dba:	add    dh,BYTE PTR [ebp+edi*2+0x502c3f86]
  401dc1:	mov    esi,0x738a9c5b
  401dc6:	jecxz  0x401dd5
  401dc8:	pop    es
  401dc9:	je     0x401d54
  401dcb:	pop    ebp
  401dcc:	inc    esp
  401dcd:	rcr    esp,0xc3
  401dd0:	aas    
  401dd1:	in     eax,0xce
  401dd3:	sahf   
  401dd4:	adc    edx,DWORD PTR [eax-0x5d]
  401dd7:	in     al,0xea
  401dd9:	push   eax
  401dda:	loopne 0x401d87
  401ddc:	and    al,0x12
  401dde:	ja     0x401d68
  401de0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401de1:	pop    ebx
  401de2:	mov    ds:0x2e42a56,eax
  401de7:	fs add cl,al
  401dea:	icebp  
  401deb:	xchg   esi,eax
  401dec:	pop    ecx
  401ded:	or     eax,0x8414aeea
  401df2:	(bad)  
  401df3:	(bad)  
  401df4:	jp     0x401e42
  401df6:	pop    ebx
  401df7:	and    al,0x41
  401df9:	jle    0x401e33
  401dfb:	add    DWORD PTR [esi-0x50b3240f],esp
  401e01:	sahf   
  401e02:	mov    al,0xcb
  401e04:	xchg   BYTE PTR [edi],ah
  401e06:	stc    
  401e07:	test   BYTE PTR [esi+eiz*2+0x11],dl
  401e0b:	mov    edx,0x78942ffd
  401e10:	xchg   esp,ecx
  401e12:	pop    ebp
  401e13:	lods   al,BYTE PTR ds:[esi]
  401e14:	fwait
  401e15:	xchg   edi,eax
  401e16:	or     ax,0xce70
  401e1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e1b:	push   esi
  401e1c:	scas   al,BYTE PTR es:[edi]
  401e1d:	repz and al,0x77
  401e20:	(bad)  
  401e21:	adc    al,0x1d
  401e23:	or     ecx,edx
  401e25:	sub    BYTE PTR [eax],cl
  401e27:	add    DWORD PTR [eax],0xd7f6ead5
  401e2d:	jl     0x401e86
  401e2f:	aam    0xda
  401e31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e32:	or     ecx,edi
  401e34:	sbb    BYTE PTR [eax+0x59],ch
  401e37:	push   cs
  401e38:	lods   al,BYTE PTR ds:[esi]
  401e39:	cmp    eax,0x940d3697
  401e3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e3f:	ret    0x182a
  401e42:	je     0x401e28
  401e44:	ror    DWORD PTR [ecx-0x40f8e184],0xc5
  401e4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e4c:	inc    eax
  401e4d:	scas   eax,DWORD PTR es:[edi]
  401e4e:	pop    ds
  401e4f:	(bad)  
  401e50:	jbe    0x401e65
  401e52:	enter  0x5f8d,0x1a
  401e56:	inc    ecx
  401e57:	xchg   BYTE PTR ds:0xedab45b5,cl
  401e5d:	xor    BYTE PTR [esi+0x29],bl
  401e60:	daa    
  401e61:	dec    esp
  401e62:	shl    DWORD PTR [esi+0x7d1bb835],0x1c
  401e69:	cwde   
  401e6a:	fldenv [edx]
  401e6c:	out    0x94,al
  401e6e:	es xchg esp,eax
  401e70:	jb     0x401e92
  401e72:	push   cs
  401e73:	sti    
  401e74:	inc    edx
  401e75:	mov    ch,BYTE PTR [ebx]
  401e77:	push   ds
  401e78:	scas   eax,DWORD PTR es:[edi]
  401e79:	in     eax,dx
  401e7a:	sbb    eax,0x37143bdb
  401e7f:	mov    al,ds:0x5566df75
  401e84:	rol    DWORD PTR [edi+0x11],cl
  401e87:	xor    al,0x16
  401e89:	xor    eax,0x67cb11be
  401e8e:	stos   BYTE PTR es:[edi],al
  401e8f:	dec    esp
  401e90:	mov    ch,0x8f
  401e92:	xchg   ebp,eax
  401e93:	(bad)  
  401e94:	(bad)  [esi-0x63]
  401e97:	pop    eax
  401e98:	(bad)  
  401e99:	aad    0x63
  401e9b:	repnz aaa 
  401e9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e9e:	fs in  al,0xe1
  401ea1:	sub    eax,DWORD PTR [edx+0x453d4529]
  401ea7:	jb     0x401e65
  401ea9:	dec    edi
  401eaa:	inc    eax
  401eab:	std    
  401eac:	mov    bl,0xd1
  401eae:	mov    ds:0xa6a12110,al
  401eb3:	mov    ebp,0x6c09f5fb
  401eb8:	mov    edi,0x95105862
  401ebd:	jo     0x401e81
  401ebf:	dec    esi
  401ec0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401ec1:	pop    es
  401ec2:	(bad)  
  401ec3:	mov    gs,WORD PTR [edi-0xa]
  401ec6:	xor    BYTE PTR [esi-0x472484e2],dh
  401ecc:	call   0x4d7bf82d
  401ed1:	and    ebp,eax
  401ed3:	pushf  
  401ed4:	mov    ebx,0xebf0078a
  401ed9:	mov    edx,0xaa511573
  401ede:	cmp    DWORD PTR [eax+ecx*1-0x1853d0a2],edx
  401ee5:	cmp    al,0x66
  401ee7:	mov    WORD PTR [esi+0x51],?
  401eea:	scas   eax,DWORD PTR es:[edi]
  401eeb:	or     BYTE PTR [edi+edi*8+0x2d],al
  401eef:	aam    0x8f
  401ef1:	int3   
  401ef2:	repnz push edi
  401ef4:	int    0x80
  401ef6:	arpl   WORD PTR [esi-0x488c3210],si
  401efc:	loop   0x401e99
  401efe:	or     BYTE PTR [edi-0x54],bl
  401f01:	push   eax
  401f02:	lea    esp,[edx+0x1ddc1ec6]
  401f08:	bound  esp,QWORD PTR [edx+0x4b12e045]
  401f0e:	pusha  
  401f0f:	arpl   cx,si
  401f11:	gs cs mov ebx,0x966e933
  401f18:	lods   eax,DWORD PTR ds:[esi]
  401f19:	bound  eax,QWORD PTR [edi]
  401f1b:	imul   ecx,DWORD PTR cs:[ecx-0x13592cc9],0xffffff91
  401f23:	popf   
  401f24:	idiv   edx
  401f26:	jo     0x401f0a
  401f28:	adc    ah,bh
  401f2a:	ret    
  401f2b:	sub    BYTE PTR [eax],0x66
  401f2e:	popf   
  401f2f:	xor    al,cl
  401f31:	mov    dh,0xe1
  401f33:	pop    eax
  401f34:	xor    DWORD PTR [ecx],0xffffffa4
  401f37:	fmul   QWORD PTR [edx+esi*8]
  401f3a:	(bad)  [edx]
  401f3c:	push   esp
  401f3d:	inc    ebx
  401f3e:	in     al,0xcf
  401f40:	mov    dl,0x3d
  401f42:	call   0xdc5ae505
  401f47:	lock popf 
  401f49:	arpl   cx,di
  401f4b:	stc    
  401f4c:	xchg   esp,eax
  401f4d:	fnstsw WORD PTR [esi-0x30abe58c]
  401f53:	sbb    BYTE PTR [ebp-0xf93fb05],ch
  401f59:	push   edx
  401f5a:	lea    eax,[esi]
  401f5c:	mov    ebx,0x90796561
  401f61:	aad    0x99
  401f63:	je     0x401fa5
  401f65:	(bad)  
  401f66:	cwde   
  401f67:	js     0x401f71
  401f69:	mov    eax,ds:0x805e5eee
  401f6e:	aas    
  401f6f:	sbb    eax,0x5186847a
  401f74:	mov    bl,0xba
  401f76:	or     ecx,esi
  401f78:	dec    esp
  401f79:	ja     0x401fbc
  401f7b:	xor    esi,DWORD PTR [eax+0x69]
  401f7e:	je     0x401f58
  401f80:	push   esp
  401f81:	and    DWORD PTR [ebx+edi*4],ebp
  401f84:	hlt    
  401f85:	je     0x401fe1
  401f87:	pop    es
  401f88:	push   esp
  401f89:	mov    WORD PTR [ecx+0x2c06b088],gs
  401f8f:	jmp    0x401f86
  401f91:	not    ebp
  401f93:	data16 fwait
  401f95:	mov    al,ds:0x2e3e37ea
  401f9a:	push   eax
  401f9b:	sti    
  401f9c:	sti    
  401f9d:	dec    ebp
  401f9f:	mov    al,ds:0x4fcdebb5
  401fa4:	out    dx,al
  401fa5:	jge    0x402015
  401fa7:	adc    esi,DWORD PTR [eax-0x2a]
  401faa:	sbb    edx,ecx
  401fac:	adc    edx,esp
  401fae:	daa    
  401faf:	arpl   dx,bx
  401fb1:	call   0xac68:0x17a4babc
  401fb8:	mov    DWORD PTR [ebp-0x576e96fa],edx
  401fbe:	sbb    eax,0xbff546fe
  401fc3:	mov    dl,0x66
  401fc5:	in     al,dx
  401fc6:	rol    BYTE PTR [esp+ecx*2],cl
  401fc9:	sbb    BYTE PTR [ebp-0x6c],dh
  401fcc:	icebp  
  401fcd:	fsub   DWORD PTR [ecx-0x5a]
  401fd0:	sbb    eax,0x1197b08f
  401fd5:	xor    al,0x1f
  401fd7:	push   ss
  401fd8:	in     al,0xdf
  401fda:	js     0x40205a
  401fdc:	in     al,dx
  401fdd:	sub    eax,DWORD PTR [ebx+0x64aff90a]
  401fe3:	ins    BYTE PTR es:[edi],dx
  401fe4:	push   cs
  401fe5:	(bad)  
  401fe6:	rol    BYTE PTR ds:0xd1717cf4,1
  401fec:	sub    dh,BYTE PTR [ebp+0xd2380a1]
  401ff2:	inc    ecx
  401ff3:	adc    DWORD PTR [ecx+edx*8+0x61],ecx
  401ff7:	stos   DWORD PTR es:[edi],eax
  401ff8:	(bad)  
  401ff9:	jp     0xd5800609
  401fff:	pop    eax
  402000:	or     DWORD PTR [edi-0x27f80ec2],esp
  402006:	push   0x5336c03b
  40200b:	in     eax,0x7c
  40200d:	in     al,dx
  40200e:	push   ds
  40200f:	or     eax,0xffffff8d
  402012:	aas    
  402013:	jae    0x402081
  402015:	or     cl,dl
  402017:	cmc    
  402018:	ret    
  402019:	push   0x14d4c59b
  40201e:	sar    ebx,1
  402020:	mov    esp,0x1d4b2153
  402025:	sub    BYTE PTR [eax+0x6b],ah
  402028:	inc    esp
  402029:	mov    bh,0x47
  40202b:	mov    ch,0xad
  40202d:	pop    edi
  40202e:	and    edx,edi
  402030:	push   cs
  402031:	sbb    bh,dh
  402033:	and    cl,BYTE PTR [ebx+0x78fe1023]
  402039:	unpckhps xmm2,XMMWORD PTR [ebx-0x1d]
  40203d:	leave  
  40203e:	push   cs
  40203f:	sbb    bl,ch
  402041:	dec    esp
  402042:	xchg   BYTE PTR [eax+0x7d],bl
  402045:	or     eax,0xe87f75c9
  40204a:	sbb    DWORD PTR [ecx],esp
  40204c:	and    DWORD PTR [ebx-0x76],0x408574c5
  402053:	mov    bl,0xe0
  402055:	(bad)  
  402056:	in     eax,dx
  402057:	out    dx,eax
  402058:	xchg   esi,eax
  402059:	icebp  
  40205a:	jmp    0xecb:0xe935e2a1
  402061:	out    dx,eax
  402062:	stos   DWORD PTR es:[edi],eax
  402063:	repnz add BYTE PTR [esi+eax*8+0x28a7a70e],ah
  40206b:	fiadd  DWORD PTR [edi]
  40206d:	mov    edx,0x496a24a
  402072:	inc    edx
  402073:	rcl    BYTE PTR [ecx+0x2],1
  402076:	call   0x2a6a:0xd9638971
  40207d:	(bad)  
  40207e:	call   0x1ad26aa5
  402083:	jle    0x40200f
  402085:	pop    ebx
  402086:	sub    edx,DWORD PTR [ecx+ecx*1-0x6c]
  40208a:	cli    
  40208b:	mov    cs,WORD PTR [ecx+0x3b972f0a]
  402091:	repnz cld 
  402093:	jecxz  0x4020db
  402095:	out    dx,al
  402096:	sub    ebx,esi
  402098:	xor    eax,0xae59884c
  40209d:	and    eax,DWORD PTR [eax]
  40209f:	mov    esp,0xa5f0ebb6
  4020a4:	ret    
  4020a5:	push   ds
  4020a6:	inc    edx
  4020a7:	les    ecx,FWORD PTR [bx+0x57]
  4020ab:	mov    al,BYTE PTR [esi]
  4020ad:	loope  0x4020d0
  4020af:	std    
  4020b0:	sbb    esi,esp
  4020b2:	loopne 0x402035
  4020b4:	mov    esi,0x5c84d452
  4020b9:	(bad)  
  4020ba:	xor    bh,bh
  4020bc:	sar    BYTE PTR [eax-0x6b321efe],cl
  4020c2:	stos   BYTE PTR es:[edi],al
  4020c3:	lock mov al,ds:0xebdfa16
  4020c9:	mov    ds:0xe8e8f9cc,eax
  4020ce:	xchg   esi,eax
  4020cf:	leave  
  4020d0:	scas   al,BYTE PTR es:[edi]
  4020d1:	enter  0x2d03,0xf
  4020d5:	mov    ds:0xc377177,eax
  4020da:	mov    bh,0xb8
  4020dc:	fcomp  QWORD PTR [edi-0x2b01224b]
  4020e2:	mov    ecx,0xd289fa0f
  4020e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4020e8:	sub    ch,BYTE PTR [esp+ebp*4-0x1d]
  4020ec:	out    0xdb,ax
  4020ef:	mov    dh,0x2e
  4020f1:	jbe    0x402148
  4020f3:	pop    ecx
  4020f4:	xchg   edi,eax
  4020f5:	sbb    eax,DWORD PTR [eax-0x68]
  4020f8:	mov    WORD PTR [ebx],ds
  4020fa:	dec    edi
  4020fb:	sbb    al,0x2
  4020fd:	out    0x2a,eax
  4020ff:	cmp    ebx,DWORD PTR ds:0xdb29e636
  402105:	jno    0x402132
  402107:	mov    ds:0xbe86c440,al
  40210c:	(bad)  
  40210d:	mov    edi,0x672f71fa
  402112:	test   al,0x56
  402114:	fsubr  QWORD PTR [ecx]
  402116:	arpl   dx,sp
  402118:	leave  
  402119:	xchg   BYTE PTR [edi],bl
  40211b:	adc    ecx,DWORD PTR [eax]
  40211d:	sub    DWORD PTR [edx],ebp
  40211f:	int    0x55
  402121:	test   DWORD PTR [eax],0xd047aa71
  402127:	sbb    al,0xe3
  402129:	xchg   edx,eax
  40212a:	push   cs
  40212b:	xchg   DWORD PTR [ebx-0x7392c5a9],esi
  402131:	xchg   esp,eax
  402132:	inc    ecx
  402133:	fst    DWORD PTR [ecx+0x28]
  402136:	sar    DWORD PTR [eax+0x7c2923b5],1
  40213c:	repnz and BYTE PTR [esi+0x67],al
  402140:	cmp    BYTE PTR [eax],bl
  402142:	cmp    dh,BYTE PTR [edx-0x63cc8048]
  402148:	aad    0x6e
  40214a:	inc    esp
  40214b:	mov    al,0x38
  40214d:	mov    bl,0x24
  40214f:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402151:	jmp    0xc670:0x5332151c
  402158:	icebp  
  402159:	dec    edx
  40215a:	test   eax,0xcec18ead
  40215f:	scas   al,BYTE PTR es:[edi]
  402160:	sbb    eax,0x4b68336
  402165:	addr16 cmp al,0xfd
  402168:	add    BYTE PTR [ecx],bh
  40216a:	xchg   esi,eax
  40216b:	sbb    al,0xb1
  40216d:	fcom   DWORD PTR [ebp-0x54]
  402170:	scas   al,BYTE PTR es:[edi]
  402171:	les    edx,FWORD PTR [edi]
  402173:	js     0x4021b9
  402175:	jle    0x40219c
  402177:	lds    esp,FWORD PTR [ecx]
  402179:	popa   
  40217a:	arpl   WORD PTR [eax],cx
  40217c:	jmp    0xad7725de
  402181:	ret    
  402182:	clc    
  402183:	jnp    0x402162
  402185:	clc    
  402186:	(bad)  
  402187:	xor    BYTE PTR [ecx+0x5aa9c33a],cl
  40218d:	mov    esp,0x37d77d80
  402192:	mov    al,ds:0x400674af
  402197:	push   cs
  402198:	ss adc al,0xa8
  40219b:	mov    ss,WORD PTR [esi+0x64cd1d9e]
  4021a1:	fidivr WORD PTR [esi+edi*4]
  4021a4:	mov    dl,0xb1
  4021a6:	xchg   edi,eax
  4021a7:	and    al,0x5e
  4021a9:	lock hlt 
  4021ab:	int3   
  4021ac:	lock dec ebp
  4021ae:	popa   
  4021af:	sub    dl,BYTE PTR [ecx-0x69]
  4021b2:	jae    0x402167
  4021b4:	or     al,0x80
  4021b6:	repnz stos BYTE PTR es:[edi],al
  4021b8:	fisubr DWORD PTR [ebp-0x585c08a0]
  4021be:	adc    cl,ch
  4021c0:	add    ebp,DWORD PTR [ebp+0x7e4b4f4]
  4021c6:	shr    BYTE PTR [esi],1
  4021c8:	jns    0x402239
  4021ca:	push   ss
  4021cb:	jmp    0x40215c
  4021cd:	adc    eax,0x4b2db24b
  4021d2:	pop    ebx
  4021d3:	xor    eax,0x38960142
  4021d8:	xor    al,0x33
  4021da:	xor    DWORD PTR [edx],esi
  4021dc:	aam    0xae
  4021de:	xchg   BYTE PTR [ebp+0x52fddfc5],ch
  4021e4:	mov    esi,ss
  4021e6:	jbe    0x4021af
  4021e8:	jmp    0x4021a3
  4021ea:	inc    ecx
  4021eb:	ins    DWORD PTR es:[edi],dx
  4021ec:	(bad)  
  4021ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4021ee:	sbb    eax,0x7fbe38f5
  4021f3:	inc    ecx
  4021f4:	jo     0x4021b9
  4021f6:	mov    eax,ds:0xb28a7c6e
  4021fb:	fdiv   QWORD PTR ds:0x2faa1c45
  402201:	inc    edx
  402202:	xchg   edi,eax
  402203:	fmul   DWORD PTR [ebp+0x19]
  402206:	sbb    DWORD PTR [ebx-0x7740fede],esp
  40220c:	xor    DWORD PTR [edi+0x1bb4b78a],ebp
  402212:	in     al,0x8f
  402214:	aad    0x79
  402216:	int    0x27
  402218:	add    DWORD PTR [edi],eax
  40221a:	dec    edx
  40221b:	int    0xb6
  40221d:	retf   
  40221e:	sbb    edx,DWORD PTR [esi-0x12]
  402221:	or     edx,DWORD PTR [eax+eiz*2-0x62a1433e]
  402228:	movups xmm7,xmm1
  40222b:	data16 ja 0x4021d0
  40222e:	cmp    eax,0xf7edec24
  402233:	push   edx
  402234:	and    eax,0xf8c0ccdd
  402239:	fcmovne st,st(7)
  40223b:	outs   dx,DWORD PTR ds:[esi]
  40223c:	sbb    al,BYTE PTR [esi]
  40223e:	adc    BYTE PTR [edi+0x62ae87ce],ah
  402244:	out    0x3c,al
  402246:	aad    0xd
  402248:	arpl   bp,ax
  40224a:	sub    edx,esp
  40224c:	or     eax,esp
  40224e:	push   ebx
  40224f:	loopne 0x4022cd
  402251:	sahf   
  402252:	cmp    BYTE PTR [esi+0x1437f580],ah
  402258:	stc    
  402259:	mov    ?,WORD PTR [eax]
  40225b:	xchg   ebp,eax
  40225c:	cmp    ebp,ecx
  40225e:	inc    esp
  40225f:	imul   edi,DWORD PTR [esi+ebx*1+0x58299219],0xffffffc1
  402267:	ins    BYTE PTR es:[edi],dx
  402268:	leave  
  402269:	mov    cl,0xeb
  40226b:	out    0x71,eax
  40226d:	fnstcw WORD PTR [edx-0x54281be5]
  402273:	xchg   edx,eax
  402274:	call   DWORD PTR [ebx-0x4d65ed4c]
  40227a:	rol    esp,cl
  40227c:	mov    ebx,0x8e3e0032
  402281:	call   0x8e6834ed
  402286:	cs or  eax,0xba42a581
  40228c:	inc    edi
  40228d:	pop    ds
  40228e:	adc    al,0xe2
  402290:	loope  0x4022df
  402292:	xor    al,0x78
  402294:	or     eax,0x623a5a67
  402299:	inc    DWORD PTR [ecx]
  40229b:	fwait
  40229c:	inc    ebx
  40229d:	and    eax,0x4f2928e0
  4022a2:	dec    eax
  4022a3:	xchg   BYTE PTR [bx+si+0x65d2],bl
  4022a8:	dec    ebp
  4022a9:	call   0x5804:0xa1089240
  4022b0:	repnz dec ebp
  4022b2:	test   eax,0x4d2b2fe7
  4022b7:	mov    dh,0x91
  4022b9:	and    eax,0xadc2ca7d
  4022be:	hlt    
  4022bf:	cli    
  4022c0:	or     al,0xf4
  4022c2:	sbb    esp,DWORD PTR [eax]
  4022c4:	mov    esp,edi
  4022c6:	push   edx
  4022c7:	cmp    BYTE PTR [ebx-0x1e223fdf],0xf3
  4022ce:	or     bl,bh
  4022d0:	and    BYTE PTR [ecx],bl
  4022d2:	hlt    
  4022d3:	xchg   bx,ax
  4022d5:	add    ah,bl
  4022d7:	stos   BYTE PTR es:[edi],al
  4022d8:	xor    ebx,DWORD PTR [eax]
  4022da:	xchg   ebx,eax
  4022db:	push   esi
  4022dc:	retf   0x96d5
  4022df:	xchg   BYTE PTR [eax-0x2c3dbfd9],al
  4022e5:	push   eax
  4022e6:	aad    0xe1
  4022e8:	mov    esp,DWORD PTR [ecx]
  4022ea:	clc    
  4022eb:	neg    BYTE PTR ds:0xf72270a6
  4022f1:	pop    edi
  4022f2:	ss push esi
  4022f4:	push   edi
  4022f5:	fcmovnb st,st(3)
  4022f7:	cmp    esi,DWORD PTR [ecx-0x4479f8c1]
  4022fd:	mov    eax,ds:0x4c5cda5c
  402302:	loopne 0x402353
  402304:	nop
  402305:	stos   BYTE PTR es:[edi],al
  402306:	loop   0x4022be
  402308:	rcr    DWORD PTR [eax-0x2],1
  40230b:	aaa    
  40230c:	mov    edi,eax
  40230e:	dec    esi
  40230f:	call   0xe4eb07b9
  402314:	xor    al,0x5a
  402316:	cmp    eax,0xe04c5def
  40231b:	sub    bh,BYTE PTR [ebx]
  40231d:	test   DWORD PTR [edi],ebx
  40231f:	xchg   esp,eax
  402320:	(bad)  
  402321:	loopne 0x402331
  402323:	and    BYTE PTR [ecx+0x8eb4a30],bh
  402329:	sbb    eax,0x59c206e0
  40232e:	retf   0xf9c0
  402331:	fwait
  402332:	and    ah,BYTE PTR [ebp-0x61]
  402335:	rcr    BYTE PTR [ebx+edx*2],cl
  402338:	test   BYTE PTR [ebx-0x9fcb008],bl
  40233e:	mov    ds:0xa61174e4,al
  402343:	xchg   esi,eax
  402344:	push   ebx
  402345:	sub    eax,0x7814b344
  40234a:	jmp    0x603a:0x9a43e411
  402351:	jge    0x402320
  402353:	jnp    0x4023c4
  402355:	enter  0x245d,0x5e
  402359:	ffree  st(1)
  40235b:	mov    edi,0x95e780cf
  402360:	xor    DWORD PTR [ebx],0x36
  402363:	pop    ds
  402364:	call   0xf8be320a
  402369:	sub    dl,al
  40236b:	inc    ebp
  40236c:	jbe    0x402359
  40236e:	sub    BYTE PTR [ecx-0x5e],dh
  402371:	mov    ss,WORD PTR [esi-0x2c]
  402374:	scas   al,BYTE PTR es:[edi]
  402375:	mov    fs,esi
  402377:	xchg   edi,eax
  402378:	push   ds
  402379:	outs   dx,DWORD PTR ds:[esi]
  40237a:	adc    ebx,DWORD PTR [ecx+ecx*4-0x7eb30fbc]
  402381:	add    DWORD PTR [ebp-0x3b1d698e],edi
  402387:	bound  esp,QWORD PTR [edi]
  402389:	adc    bh,BYTE PTR [ebx+0x37e89fa2]
  40238f:	xchg   esi,eax
  402390:	push   es
  402391:	xor    al,0x80
  402393:	dec    eax
  402394:	cmp    ah,bl
  402396:	enter  0xe693,0xd8
  40239a:	out    0x99,eax
  40239c:	outs   dx,BYTE PTR ds:[esi]
  40239d:	cmc    
  40239e:	push   cs
  40239f:	xor    DWORD PTR [ecx],0x18
  4023a2:	repnz rcr ah,0xcf
  4023a6:	in     al,0x82
  4023a8:	ins    BYTE PTR es:[edi],dx
  4023a9:	pop    ecx
  4023aa:	les    esp,FWORD PTR [ebp+0x57]
  4023ad:	aad    0x75
  4023af:	inc    edx
  4023b0:	sub    al,0x19
  4023b2:	shl    BYTE PTR [esi],1
  4023b4:	or     eax,0xcf382a01
  4023b9:	inc    esp
  4023ba:	push   DWORD PTR [ebx-0x1]
  4023bd:	mov    dh,0x2d
  4023bf:	into   
  4023c0:	and    eax,0x9d962b2f
  4023c5:	jbe    0x402424
  4023c7:	mov    ss,WORD PTR [eax+0x4b077e58]
  4023cd:	into   
  4023ce:	push   0x9e593b1e
  4023d3:	femms  
  4023d5:	sub    BYTE PTR [edi+0x5838fdb2],ch
  4023db:	out    0xde,al
  4023dd:	add    edi,DWORD PTR [eax+0x2b]
  4023e0:	xchg   BYTE PTR [esp+edi*2-0x62],cl
  4023e4:	imul   ebp,DWORD PTR [ecx+0x4a],0x6d911260
  4023eb:	xor    esi,DWORD PTR [edx+0x62]
  4023ee:	mov    DWORD PTR [esi],esi
  4023f0:	xchg   ecx,eax
  4023f1:	xchg   BYTE PTR [edx],bh
  4023f3:	inc    edx
  4023f4:	lea    ebx,[edi+0x73]
  4023f7:	sbb    bh,BYTE PTR [edi]
  4023f9:	imul   edx,DWORD PTR [edx],0x936620bf
  4023ff:	ins    DWORD PTR es:[edi],dx
  402400:	out    0xbc,eax
  402402:	mov    bl,0x7d
  402404:	sbb    ch,cl
  402406:	jns    0x4023bb
  402408:	mov    ebp,0x82195fd
  40240d:	pushw  0x7a
  402410:	adc    DWORD PTR [eax],0x20
  402413:	pop    ebx
  402414:	inc    edi
  402415:	inc    ebx
  402416:	clc    
  402417:	mov    dh,0x15
  402419:	add    BYTE PTR [ebx],dh
  40241b:	imul   ebx,edi,0x62c22dc6
  402421:	mov    ecx,0x1e382480
  402426:	in     al,0x3e
  402428:	push   ebp
  402429:	psubd  mm5,QWORD PTR [si]
  40242d:	and    DWORD PTR [ebp+esi*1+0x716d3cfc],esp
  402434:	and    DWORD PTR [eax],ebp
  402436:	int    0x38
  402438:	fnstenv [edx-0x64282521]
  40243e:	in     al,0x2c
  402440:	aad    0xae
  402442:	dec    ebp
  402443:	icebp  
  402444:	mov    edx,0x4d54413b
  402449:	or     dl,dh
  40244b:	adc    eax,0xab41ef13
  402450:	aam    0x8a
  402452:	je     0x4023d4
  402454:	std    
  402455:	cwde   
  402456:	cmp    DWORD PTR [ebx],ebx
  402458:	fst    DWORD PTR [esi+0x60592388]
  40245e:	xlat   BYTE PTR ds:[ebx]
  40245f:	inc    esi
  402460:	or     ecx,ebp
  402462:	mov    eax,ds:0x6da1bcf7
  402467:	jne    0x402445
  402469:	cmp    DWORD PTR [edi-0x10],eax
  40246c:	imul   edi,DWORD PTR [edx+0x7a],0xe8ddc9e4
  402473:	in     al,0xc2
  402475:	repz or cl,BYTE PTR [ebp-0x2c9a621b]
  40247c:	fadd   DWORD PTR [edx]
  40247e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40247f:	and    BYTE PTR [ebp-0x310110ce],bh
  402485:	and    al,0x17
  402487:	sub    eax,0xd1593040
  40248c:	adc    eax,0xa37ab30e
  402491:	sub    BYTE PTR [edi],0x14
  402494:	lahf   
  402495:	call   0x304d:0xad2ece1
  40249c:	jle    0x4024ab
  40249e:	lds    edi,FWORD PTR [eax+0x21b386f3]
  4024a4:	add    al,0x7a
  4024a6:	fnsave [ebp-0x2c]
  4024a9:	es mov ch,0xa6
  4024ac:	pop    esi
  4024ad:	mov    eax,0x4a4cda5c
  4024b2:	aam    0x39
  4024b4:	imul   esp,DWORD PTR [edx+0x6cfedc5e],0x67
  4024bb:	mov    al,BYTE PTR [edx]
  4024bd:	nop
  4024be:	jg     0x402482
  4024c0:	loop   0x402474
  4024c2:	xor    BYTE PTR [ebx-0x11b1711a],al
  4024c8:	sub    bh,BYTE PTR [ebp-0x59]
  4024cb:	xor    DWORD PTR [ecx-0x70],ecx
  4024ce:	cli    
  4024cf:	popa   
  4024d0:	pop    ecx
  4024d1:	xchg   esp,eax
  4024d2:	test   eax,0xc097153f
  4024d7:	cmp    edi,DWORD PTR [ecx-0x7e]
  4024da:	mov    ah,0xc4
  4024dc:	idiv   BYTE PTR [edi]
  4024de:	into   
  4024df:	cmp    bh,BYTE PTR [esi+0x32]
  4024e2:	pop    edx
  4024e3:	push   esp
  4024e4:	cs mov bh,0x6
  4024e7:	xchg   esp,eax
  4024e8:	xchg   ebx,eax
  4024e9:	mov    eax,0x521b7a3
  4024ee:	inc    ebx
  4024ef:	(bad)  
  4024f0:	mov    al,ds:0xff076155
  4024f5:	xor    edx,ebp
  4024f7:	mov    ebp,esp
  4024f9:	push   edi
  4024fa:	push   0x7c556c8c
  4024ff:	inc    eax
  402500:	sub    BYTE PTR [ebp-0x2868d2b7],ah
  402506:	mov    bl,0x9f
  402508:	leave  
  402509:	pop    ebp
  40250a:	jg     0x40250f
  40250c:	lahf   
  40250d:	retf   
  40250e:	test   eax,0x7b5fec5d
  402513:	cs loop 0x40254f
  402516:	xchg   DWORD PTR [eax+0x6a],esi
  402519:	jmp    0xd4d5:0x373dadf6
  402520:	ret    0xc23e
  402523:	sbb    ah,BYTE PTR [ecx]
  402525:	xlat   BYTE PTR ds:[ebx]
  402526:	push   esp
  402527:	push   ebp
  402528:	mov    esi,0x4bc1f0ed
  40252d:	sub    al,0x4c
  40252f:	ins    DWORD PTR es:[edi],dx
  402530:	test   DWORD PTR [esi-0x29],eax
  402533:	mov    ch,0x8d
  402535:	fsubr  QWORD PTR [esi+0x3e75cac6]
  40253b:	into   
  40253c:	jle    0x402560
  40253e:	jb     0x402586
  402540:	xor    ebx,ebx
  402542:	cmp    ebp,DWORD PTR [ebx]
  402544:	mov    ebx,ebp
  402546:	adc    ebp,DWORD PTR [edx+0x4d]
  402549:	jae    0x402578
  40254b:	test   BYTE PTR [esp+edi*4-0x6e],0x7e
  402550:	lahf   
  402551:	push   ss
  402552:	out    0xcf,al
  402554:	pop    ebp
  402555:	jns    0x402571
  402557:	push   edi
  402558:	sahf   
  402559:	popa   
  40255a:	js     0x402570
  40255c:	imul   esi,DWORD PTR [ebp+0x55],0xc0bf9eae
  402563:	dec    esi
  402564:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402565:	and    ebp,esi
  402567:	ret    
  402568:	jge    0x4025dd
  40256a:	mov    edx,0x6818f1e9
  40256f:	add    dh,BYTE PTR [ecx+0x39]
  402572:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402573:	repnz cwde 
  402575:	fstp   QWORD PTR [ecx]
  402577:	sbb    eax,0x88c72803
  40257c:	add    BYTE PTR [edi+edi*1+0x55],bl
  402580:	call   0xe305191b
  402585:	xchg   BYTE PTR [ecx],bh
  402587:	mov    WORD PTR [edi],?
  402589:	pop    DWORD PTR [edx-0x80]
  40258c:	inc    esp
  40258d:	mov    ebp,0x4c6da2f8
  402592:	jp     0x4025c4
  402594:	add    BYTE PTR [edx+0x46c3e99b],dh
  40259a:	dec    ecx
  40259b:	dec    ecx
  40259c:	jnp    0x4025c8
  40259e:	mov    ecx,0xce4db782
  4025a3:	sub    BYTE PTR [ecx+eax*8],0xb
  4025a7:	outs   dx,BYTE PTR ds:[esi]
  4025a8:	shr    DWORD PTR [ebx],1
  4025aa:	js     0x40260f
  4025ac:	ins    BYTE PTR es:[edi],dx
  4025ad:	scas   eax,DWORD PTR es:[edi]
  4025ae:	jl     0x40262d
  4025b0:	inc    ebp
  4025b2:	cs or  al,0x96
  4025b5:	jl     0x402593
  4025b7:	je     0x402560
  4025b9:	xchg   edx,eax
  4025ba:	mov    ds:0xc36eb86,al
  4025bf:	and    DWORD PTR [esi+edi*8-0x10f11e8c],esi
  4025c6:	lock addr16 clc 
  4025c9:	dec    eax
  4025ca:	adc    BYTE PTR [ebx+0x18d901d1],bl
  4025d0:	pusha  
  4025d1:	imul   ebp,DWORD PTR [edi],0x2f
  4025d4:	repz out 0xcb,eax
  4025d7:	cmc    
  4025d8:	ret    0x5573
  4025db:	repz mov ecx,0xd0aa64bb
  4025e1:	pop    es
  4025e2:	inc    eax
  4025e3:	loop   0x402643
  4025e5:	push   0x54f0c863
  4025ea:	or     cl,ah
  4025ec:	fidivr DWORD PTR [ecx-0x52]
  4025ef:	imul   eax,DWORD PTR [edx-0x1b],0x7a
  4025f3:	mov    al,0x7f
  4025f5:	out    0x4f,eax
  4025f7:	cwde   
  4025f8:	(bad)  
  4025f9:	and    eax,ebx
  4025fb:	and    dh,BYTE PTR [edx-0x25]
  4025fe:	cmc    
  4025ff:	mov    ch,0x69
  402601:	sub    eax,DWORD PTR [edx]
  402603:	xor    ebx,DWORD PTR [ecx-0x75b9bdf5]
  402609:	loope  0x402655
  40260b:	lock ret 0x3ba6
  40260f:	outs   dx,DWORD PTR ds:[esi]
  402610:	cmp    DWORD PTR [esi],esp
  402612:	ins    DWORD PTR es:[edi],dx
  402613:	dec    edx
  402614:	mov    eax,ds:0x72bfb505
  402619:	les    edi,FWORD PTR [ebp-0x11f8e22f]
  40261f:	dec    ecx
  402620:	mov    ebp,0xcb0c3090
  402625:	aaa    
  402626:	xchg   esp,eax
  402627:	xchg   edx,eax
  402628:	push   ebx
  402629:	dec    ecx
  40262a:	mov    ds:0xd5b35e64,eax
  40262f:	in     eax,0x2
  402631:	ret    0x9d43
  402634:	mov    ch,0xd4
  402636:	jb     0x4026a7
  402638:	push   esp
  402639:	(bad)  
  40263a:	into   
  40263b:	retf   0x33
  40263e:	in     eax,0x9f
  402640:	mov    bl,0x55
  402642:	jo     0x4025e5
  402644:	test   DWORD PTR ss:[eax+0x48],eax
  402648:	xor    esp,ebx
  40264a:	stos   DWORD PTR es:[edi],eax
  40264b:	fstp   QWORD PTR [ecx+eiz*1-0x29dbd4b6]
  402652:	inc    edi
  402653:	shl    esi,cl
  402655:	mov    DWORD PTR [ebx-0x26],ebp
  402658:	sub    DWORD PTR [edx],ebx
  40265a:	mov    bh,BYTE PTR [eax]
  40265c:	jmp    0xedfc:0xa7ce3895
  402663:	mov    ah,0x28
  402665:	sub    BYTE PTR [ebx],dh
  402667:	nop
  402668:	push   eax
  402669:	push   es
  40266a:	mov    al,ds:0xe2a51196
  40266f:	add    eax,0x15ad2b77
  402674:	inc    ecx
  402675:	xchg   esp,eax
  402676:	dec    edx
  402677:	repz mov cs,WORD PTR [edx+0x5356c165]
  40267e:	dec    edi
  40267f:	test   BYTE PTR [esp+eax*4+0x4f59ec07],al
  402686:	retf   0xfaff
  402689:	and    eax,0xd7a1eaab
  40268e:	cwde   
  40268f:	test   BYTE PTR [esp+ecx*1+0x1a],dh
  402693:	mov    ecx,0x4756ea9c
  402698:	shl    DWORD PTR ds:0x9ad2fb2a,cl
  40269e:	stc    
  40269f:	leave  
  4026a0:	jns    0x402645
  4026a2:	dec    edx
  4026a3:	push   0x1176a9e2
  4026a8:	add    DWORD PTR [edi],0x60
  4026ab:	out    0x92,al
  4026ad:	push   es
  4026ae:	fistp  DWORD PTR [ecx+0x38]
  4026b1:	cmp    DWORD PTR [edx],esi
  4026b3:	shl    ebx,1
  4026b5:	sbb    dh,cl
  4026b7:	mov    ebp,0xab1b70b4
  4026bc:	mov    ebx,0xfd2df51
  4026c1:	ror    edi,1
  4026c3:	cmp    ebp,DWORD PTR [ebp-0x16]
  4026c6:	xchg   esp,eax
  4026c7:	inc    edi
  4026c8:	int    0x35
  4026ca:	inc    ebp
  4026cb:	pop    edx
  4026cc:	and    ebx,DWORD PTR [edi+0x60]
  4026cf:	inc    eax
  4026d0:	push   es
  4026d1:	push   esp
  4026d2:	outs   dx,BYTE PTR ds:[esi]
  4026d3:	mov    DWORD PTR [ecx-0x3b],ebx
  4026d6:	(bad)  
  4026d7:	cli    
  4026d8:	adc    ah,dl
  4026da:	inc    eax
  4026db:	stc    
  4026dc:	add    al,0x7
  4026de:	adc    DWORD PTR [edi+ebp*1+0x54d9c913],edx
  4026e5:	lahf   
  4026e6:	retf   
  4026e7:	lock rcr BYTE PTR [ebx],0xfb
  4026eb:	addr16 cmp eax,0xbe1b3df7
  4026f1:	inc    ebp
  4026f2:	mov    edi,DWORD PTR [edx-0x6f]
  4026f5:	mov    ebp,0x1749abe7
  4026fa:	xor    DWORD PTR [ebx+0x3b2ae195],ebx
  402700:	dec    eax
  402701:	cld    
  402702:	pop    ss
  402703:	mov    dh,BYTE PTR [ecx]
  402705:	mov    eax,0x160acd90
  40270a:	jb     0x40269a
  40270c:	imul   ecx,DWORD PTR [edx],0x10a64b25
  402712:	pop    ss
  402713:	in     al,0xce
  402715:	sub    DWORD PTR [edi],0xffffffb4
  402718:	xchg   edi,eax
  402719:	mov    bl,0x14
  40271b:	sbb    eax,0x3681e77b
  402720:	and    esp,DWORD PTR [esi]
  402722:	mov    dh,0xa6
  402724:	(bad)  
  402725:	cmp    al,0xd0
  402727:	enter  0x7dab,0x76
  40272b:	jbe    0x40275a
  40272d:	cs std 
  40272f:	or     eax,DWORD PTR [ebx]
  402731:	fimul  WORD PTR [esp+ebx*1-0x10fa5d8f]
  402738:	aad    0x24
  40273a:	mov    bh,BYTE PTR [edx-0x2d0f71f9]
  402740:	mov    esi,0x6dd36ea8
  402745:	nop
  402746:	pop    ds
  402747:	jmp    0x4026de
  402749:	adc    DWORD PTR [edx-0x65421377],0xf18c81e5
  402753:	push   0x16d47f59
  402758:	and    BYTE PTR ds:0x8b88c386,ch
  40275e:	dec    ebx
  40275f:	imul   ecx,eax,0x0
  402762:	fild   QWORD PTR [eax-0x1a]
  402765:	out    dx,eax
  402766:	jb     0x4026f9
  402768:	mov    cs,esi
  40276a:	sahf   
  40276b:	fs inc esp
  40276d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40276e:	pop    ds
  40276f:	adc    DWORD PTR [esp+eiz*8-0x5861d7da],0x1b
  402777:	inc    ebp
  402778:	pop    ebx
  402779:	cmp    al,0x35
  40277b:	mov    dh,0x4a
  40277d:	call   0x8018:0xc764fcc6
  402784:	jle    0x402711
  402786:	xor    BYTE PTR [edx],0x51
  402789:	jecxz  0x4027a9
  40278b:	popf   
  40278c:	mov    bl,0x83
  40278e:	test   esi,0xdce021db
  402794:	pop    ds
  402795:	std    
  402796:	mov    ?,WORD PTR [ebx]
  402798:	pushf  
  402799:	mov    esi,0x357c8ac4
  40279e:	fistp  WORD PTR [ebx-0x5b1bfa6a]
  4027a4:	out    0xba,eax
  4027a6:	fs push ebp
  4027a8:	fst    DWORD PTR [ecx-0x5bc0fe3a]
  4027ae:	cmp    bh,cl
  4027b0:	(bad)  
  4027b1:	xlat   BYTE PTR ds:[ebx]
  4027b2:	aaa    
  4027b3:	xchg   edi,eax
  4027b4:	mov    ds:0x9b8ec344,al
  4027b9:	test   al,0x18
  4027bb:	lods   eax,DWORD PTR ds:[esi]
  4027bc:	push   es
  4027bd:	pop    eax
  4027be:	in     eax,0xef
  4027c0:	fbstp  TBYTE PTR [eax+0x2097d23b]
  4027c6:	call   0x18430af3
  4027cb:	outs   dx,BYTE PTR ds:[esi]
  4027cc:	inc    edi
  4027cd:	pop    ebp
  4027ce:	rcl    DWORD PTR [esi],0x9b
  4027d1:	and    DWORD PTR [esi-0x26e55759],esp
  4027d7:	sar    BYTE PTR [ebp+0x50],0xfa
  4027db:	sub    eax,0x2544d6da
  4027e0:	sbb    ebx,ebx
  4027e2:	cmp    bh,BYTE PTR [ebp+ebp*2+0x12]
  4027e6:	cmp    esi,DWORD PTR [ecx+0x14]
  4027e9:	in     eax,0x26
  4027eb:	call   DWORD PTR [ebp+0x5c]
  4027ee:	and    ebp,ebx
  4027f0:	test   al,0x29
  4027f2:	inc    eax
  4027f3:	aas    
  4027f4:	mov    ecx,0xb40d45cd
  4027f9:	dec    eax
  4027fa:	fwait
  4027fb:	add    BYTE PTR [edx-0x6b1b8385],dl
  402801:	into   
  402802:	repz shl DWORD PTR es:[ecx],1
  402806:	clc    
  402807:	dec    ebx
  402808:	mov    ss,WORD PTR [ecx+0xc]
  40280b:	stos   DWORD PTR es:[edi],eax
  40280c:	imul   edx,DWORD PTR [edx-0x347ff2f5],0x2188f922
  402816:	fld    TBYTE PTR [edi-0x22]
  402819:	outs   dx,DWORD PTR ds:[esi]
  40281a:	repz dec esi
  40281c:	jg     0x4027ca
  40281e:	sub    BYTE PTR [edi],ch
  402820:	(bad)  
  402821:	mov    ebx,ecx
  402823:	and    ch,BYTE PTR ds:0xece899f7
  402829:	(bad)  
  40282a:	out    0x16,al
  40282c:	xor    edx,DWORD PTR [edx+0xd]
  40282f:	test   bl,cl
  402831:	dec    eax
  402832:	xor    bl,bl
  402834:	cld    
  402835:	test   al,0x33
  402837:	fs div edi
  40283a:	and    eax,0xcc64cca7
  40283f:	mov    ecx,0x4f9e2bb8
  402844:	loopne 0x40286f
  402846:	xchg   BYTE PTR [ebx+0x2d],bh
  402849:	mov    bh,0x77
  40284b:	dec    ebp
  40284c:	xchg   edi,eax
  40284d:	sub    BYTE PTR [eax],al
  40284f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402850:	mov    dh,0xe5
  402852:	inc    edx
  402853:	dec    ebp
  402854:	xchg   ebx,eax
  402855:	call   0xf8ab:0xfc5f3ad7
  40285c:	mov    ebx,0xc25a6446
  402861:	mov    al,0x6
  402863:	xchg   ebx,eax
  402865:	sar    BYTE PTR [edx],0xe1
  402868:	mov    DWORD PTR [edi+0x330c9abe],0xdd586f15
  402872:	pusha  
  402873:	inc    esi
  402874:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402875:	mov    dh,0x9e
  402877:	lea    ebx,[esi-0x77188692]
  40287d:	(bad)  
  40287e:	outs   dx,BYTE PTR ds:[esi]
  40287f:	outs   dx,BYTE PTR ds:[esi]
  402880:	add    al,0xcb
  402882:	cmp    ebx,edi
  402884:	inc    ebp
  402885:	adc    al,0xe3
  402887:	test   eax,0x897c03c9
  40288c:	pop    edx
  40288d:	sti    
  40288e:	(bad)  
  40288f:	(bad)  
  402890:	mov    esi,0x7fd4cd11
  402895:	test   eax,0x6495007a
  40289a:	mov    ch,0xe1
  40289c:	jne    0x402915
  40289e:	mov    bl,BYTE PTR [eax+0x0]
  4028a1:	iret   
  4028a2:	pop    gs
  4028a4:	repz inc edx
  4028a6:	push   ecx
  4028a7:	out    dx,al
  4028a8:	jns    0x402908
  4028aa:	xchg   edx,eax
  4028ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4028ac:	mov    ebp,0xaa44de9c
  4028b1:	lock add al,0x70
  4028b4:	jnp    0x40292a
  4028b6:	xor    BYTE PTR [edx-0x6f062bac],ch
  4028bc:	mov    dl,0xdc
  4028be:	cmova  ebp,eax
  4028c1:	loopne 0x4028b7
  4028c3:	iret   
  4028c4:	(bad)  
  4028c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4028c6:	iret   
  4028c7:	retf   0x106b
  4028ca:	pushf  
  4028cb:	fs push es
  4028cd:	add    dl,dh
  4028cf:	loop   0x402871
  4028d1:	std    
  4028d2:	sahf   
  4028d3:	push   edx
  4028d4:	test   BYTE PTR [edi+edi*2+0x1cba9615],0x44
  4028dc:	jmp    0x402885
  4028de:	push   cs
  4028df:	pop    ebx
  4028e0:	fsubr  QWORD PTR [ebx+0x50a2de3f]
  4028e6:	and    al,0x41
  4028e8:	stos   DWORD PTR es:[edi],eax
  4028e9:	push   ecx
  4028ea:	idiv   BYTE PTR [ecx+0x3e]
  4028ed:	or     eax,0xa919813c
  4028f2:	inc    esi
  4028f3:	outs   dx,DWORD PTR ds:[esi]
  4028f4:	and    eax,DWORD PTR [edi+0x2479dd3c]
  4028fa:	out    dx,eax
  4028fb:	mov    al,ds:0x4d725b3
  402900:	inc    esp
  402901:	xor    eax,0xa4745e74
  402906:	cmp    eax,0x6e99e51
  40290b:	nop
  40290c:	sub    eax,DWORD PTR [ebp-0x6df93f67]
  402912:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402913:	xchg   esp,eax
  402914:	push   ebx
  402915:	and    BYTE PTR [eiz*8+0x59ad3128],ah
  40291c:	pop    edi
  40291d:	xlat   BYTE PTR ds:[ebx]
  40291e:	mov    edi,0xbd87f045
  402923:	jno    0x4028b1
  402925:	add    BYTE PTR [edx+ebx*4-0x3a],bl
  402929:	jge    0x402972
  40292b:	cwde   
  40292c:	adc    al,dh
  40292e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40292f:	mov    ds:0x1238e8ae,al
  402934:	(bad)
  402938:	xor    BYTE PTR [ecx+0x7fbad10c],bl
  40293e:	inc    esi
  40293f:	push   ds
  402940:	leave  
  402941:	pop    esi
  402942:	inc    eax
  402943:	adc    edx,DWORD PTR [ebp-0x25131868]
  402949:	add    dh,bh
  40294b:	lods   eax,DWORD PTR ds:[esi]
  40294c:	pop    esp
  40294d:	sahf   
  40294e:	inc    eax
  40294f:	mov    es,WORD PTR [ebp-0x4f]
  402952:	loopne 0x4028dd
  402954:	(bad)  
  402955:	out    0x23,al
  402957:	xchg   DWORD PTR [ecx+ebx*4-0x4a],ecx
  40295b:	outs   dx,DWORD PTR ds:[esi]
  40295c:	add    edx,edi
  40295e:	jle    0x402937
  402960:	mov    ebp,ecx
  402962:	push   es
  402963:	sbb    BYTE PTR [esp+ebp*4+0x56eb127f],bl
  40296a:	std    
  40296b:	fdiv   QWORD PTR [esi-0x780b5801]
  402971:	adc    dl,BYTE PTR [edi-0x3c8035ad]
  402977:	push   cs
  402978:	nop    DWORD PTR ds:0x575177ae
  40297f:	xor    DWORD PTR [esp+esi*1+0x3d],ecx
  402983:	(bad)  
  402985:	mov    DWORD PTR [ebp-0x700d14bc],edi
  40298b:	cdq    
  40298c:	push   ecx
  40298d:	ins    DWORD PTR es:[edi],dx
  40298e:	sub    eax,0x1391b809
  402993:	pop    ecx
  402994:	and    al,0xf2
  402996:	inc    edi
  402997:	lahf   
  402998:	cmp    BYTE PTR [esi-0x37987cf2],0xbe
  40299f:	mov    ds:0x2d3938c,al
  4029a4:	mov    ah,0xfb
  4029a6:	in     eax,dx
  4029a7:	test   eax,0xf0ad1ae3
  4029ac:	sbb    cl,BYTE PTR [eax+0x15]
  4029af:	add    al,0x65
  4029b1:	dec    esp
  4029b2:	mov    DWORD PTR [edi],ebp
  4029b4:	repnz add ebx,DWORD PTR [ebp-0x17]
  4029b8:	xchg   esi,eax
  4029b9:	(bad)  
  4029ba:	scas   al,BYTE PTR es:[edi]
  4029bb:	iret   
  4029bc:	and    BYTE PTR [edx],bh
  4029be:	arpl   bx,bx
  4029c0:	xchg   DWORD PTR [edi],ecx
  4029c2:	jmp    0x30b4:0x17f72219
  4029c9:	lods   eax,DWORD PTR ds:[esi]
  4029ca:	cdq    
  4029cb:	in     al,0xc9
  4029cd:	and    DWORD PTR [esi+0x78f03c7a],0xffffffc6
  4029d4:	sub    eax,0xc7267a34
  4029d9:	or     esi,DWORD PTR [ebx+eiz*8]
  4029dc:	nop
  4029dd:	pop    ss
  4029de:	loope  0x402965
  4029e0:	mov    ds:0xc5efbd06,eax
  4029e5:	mov    bl,0xa8
  4029e7:	push   ss
  4029e8:	pop    esi
  4029e9:	add    BYTE PTR [edx+eax*8],al
  4029ec:	mov    eax,0xf2ab3e07
  4029f1:	sub    BYTE PTR [edx+0x3d1391fd],cl
  4029f7:	mov    ah,0x8e
  4029f9:	mov    al,0x43
  4029fc:	and    dh,BYTE PTR [eax+edi*1-0x45]
  402a00:	scas   eax,DWORD PTR es:[edi]
  402a01:	mov    ebp,0x44abf690
  402a06:	push   eax
  402a07:	sbb    ch,BYTE PTR [ebx-0x73]
  402a0a:	dec    edx
  402a0b:	and    ecx,DWORD PTR [edi+0x465a6181]
  402a11:	sbb    DWORD PTR [edx+0x5551abb],edi
  402a17:	jl     0x402a25
  402a19:	repnz out dx,eax
  402a1b:	inc    esp
  402a1c:	inc    edx
  402a1d:	cmp    DWORD PTR [ebp+edx*1-0x27],ecx
  402a21:	ja     0x402a37
  402a23:	mov    bl,BYTE PTR [edx-0x68]
  402a26:	das    
  402a27:	pop    ecx
  402a28:	daa    
  402a29:	fcomp  DWORD PTR [edi-0x45]
  402a2c:	dec    edi
  402a2d:	mov    ds,WORD PTR [edx-0x68f9917c]
  402a33:	cmp    eax,0x2e21326f
  402a38:	pusha  
  402a39:	and    eax,esi
  402a3b:	sub    al,0xe9
  402a3d:	cmp    esp,DWORD PTR [edi-0x7b]
  402a40:	mov    DWORD PTR [ecx-0xf],ebp
  402a43:	cmc    
  402a44:	push   es
  402a45:	adc    ebp,DWORD PTR [edi-0x49]
  402a48:	inc    ecx
  402a49:	xor    al,0x25
  402a4b:	mov    ds:0x11e646b3,eax
  402a50:	dec    eax
  402a51:	sub    al,0xcc
  402a53:	inc    ebp
  402a54:	add    al,0x5b
  402a56:	and    ah,BYTE PTR [edx]
  402a58:	or     ecx,DWORD PTR [ebx+0x29]
  402a5b:	ins    DWORD PTR es:[edi],dx
  402a5c:	pusha  
  402a5d:	arpl   WORD PTR [esi+ebx*1],bp
  402a60:	lock mov bh,0xa1
  402a63:	gs int 0xcd
  402a66:	(bad)  
  402a67:	mov    eax,0x2be6b92c
  402a6c:	fidiv  DWORD PTR [edx+edx*2-0x19938107]
  402a73:	(bad)  
  402a74:	outs   dx,BYTE PTR ds:[esi]
  402a75:	aaa    
  402a76:	mov    dh,0xb9
  402a78:	data16 adc BYTE PTR [ebx],ch
  402a7b:	cmp    cl,BYTE PTR [edx+ecx*4-0x15ae6276]
  402a82:	out    dx,al
  402a83:	push   es
  402a84:	add    eax,0xc9b8f316
  402a89:	out    dx,al
  402a8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402a8b:	repz es mov bl,0x45
  402a8f:	push   edi
  402a90:	mov    eax,ds:0x346ba088
  402a95:	xor    ah,bh
  402a97:	mov    DWORD PTR [ebx+0x800f206],eax
  402a9d:	das    
  402a9e:	jle    0x402acd
  402aa0:	mov    al,ds:0x916af694
  402aa5:	outs   dx,BYTE PTR ds:[esi]
  402aa6:	hlt    
  402aa7:	mov    ds:0x2b0a8ca9,al
  402aac:	ret    
  402aad:	add    ebx,eax
  402aaf:	push   0x16
  402ab1:	nop
  402ab2:	sub    DWORD PTR [eax-0xe],esi
  402ab5:	adc    al,0xc5
  402ab7:	jl     0x402aee
  402ab9:	inc    ebx
  402aba:	popf   
  402abb:	mov    gs,WORD PTR fs:[edx+0x5ab75cfd]
  402ac2:	dec    edx
  402ac3:	(bad)  
  402ac4:	repnz inc DWORD PTR [ebx+0x3c]
  402ac8:	dec    esi
  402ac9:	out    0x98,eax
  402acb:	mov    al,0xcd
  402acd:	test   esp,esi
  402acf:	mov    edx,0x188c5bd6
  402ad4:	cwde   
  402ad5:	push   ebx
  402ad6:	jb     0x402b46
  402ad8:	jmp    0x7576076f
  402add:	cmc    
  402ade:	je     0x402ae8
  402ae0:	inc    ecx
  402ae1:	add    al,0xd1
  402ae3:	div    DWORD PTR [ecx]
  402ae5:	rcl    edi,0x7d
  402ae8:	in     al,0xbe
  402aea:	pop    ds
  402aeb:	add    BYTE PTR ds:0x838c5729,bl
  402af1:	sbb    DWORD PTR [ebx-0x10cd39f7],ebp
  402af7:	mov    ds:0xd8f8800e,al
  402afc:	hlt    
  402afd:	xchg   esp,eax
  402afe:	sub    eax,0x805a0083
  402b03:	out    dx,eax
  402b04:	cmp    al,0xbf
  402b06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b07:	sub    eax,0xdcffdbda
  402b0c:	mov    DWORD PTR [eax+0x5c],eax
  402b0f:	push   ebp
  402b10:	sub    bh,ah
  402b12:	ss leave 
  402b14:	or     BYTE PTR [ebx+0x36b3ddda],ch
  402b1a:	sbb    ebp,edi
  402b1c:	imul   ebx,DWORD PTR [ebx+0x4e],0xffffffc4
  402b20:	ret    0xf577
  402b23:	arpl   WORD PTR [edx],bp
  402b25:	cwde   
  402b26:	add    bh,ah
  402b28:	daa    
  402b29:	sbb    al,0xde
  402b2b:	jmp    FWORD PTR [ebx]
  402b2d:	dec    esp
  402b2e:	mov    cl,0x51
  402b30:	ins    DWORD PTR es:[di],dx
  402b32:	sub    bh,BYTE PTR [esi-0x322b56be]
  402b38:	fcom   DWORD PTR [edx]
  402b3a:	fxtract 
  402b3c:	pop    esp
  402b3d:	or     BYTE PTR [edi+0x2e989f6b],bh
  402b43:	fiadd  WORD PTR [esi+0xbc63765]
  402b49:	mul    al
  402b4b:	in     al,0xd2
  402b4d:	pop    edx
  402b4e:	sbb    eax,0xc5df72d2
  402b53:	and    DWORD PTR [esi+0x56387f5],0x7a2e2d2f
  402b5d:	inc    eax
  402b5e:	(bad)  
  402b5f:	aam    0xd0
  402b61:	mov    eax,ds:0xe238b7a0
  402b66:	retf   
  402b67:	inc    eax
  402b68:	jge    0x402b1f
  402b6a:	inc    esp
  402b6b:	test   eax,0x9cca4e2
  402b70:	out    0xc9,eax
  402b72:	cmp    BYTE PTR [ecx],al
  402b74:	cmp    DWORD PTR [ecx+0x58],esp
  402b77:	das    
  402b78:	or     BYTE PTR [edi],ah
  402b7a:	sti    
  402b7b:	fs sbb al,0xf6
  402b7e:	fs aad 0xac
  402b81:	outs   dx,BYTE PTR ds:[esi]
  402b82:	sub    BYTE PTR [edx-0x153ecd34],0x9c
  402b89:	outs   dx,DWORD PTR ds:[esi]
  402b8a:	xor    ebx,DWORD PTR ds:0xf4ecf0c8
  402b90:	imul   esi,eax,0xffffff8d
  402b93:	mov    dl,0x79
  402b95:	push   ebx
  402b96:	dec    edx
  402b97:	sub    bl,dl
  402b99:	push   ebx
  402b9a:	xchg   edi,eax
  402b9b:	call   FWORD PTR [ebp+ebx*1+0x7b6f4712]
  402ba2:	loope  0x402b7a
  402ba4:	call   FWORD PTR [ebx]
  402ba6:	lahf   
  402ba7:	xor    al,0x2e
  402ba9:	sahf   
  402baa:	mov    ch,ah
  402bac:	cmp    al,0x1c
  402bae:	data16 icebp 
  402bb0:	lea    eax,[ebx+0x7e]
  402bb3:	xchg   edi,eax
  402bb4:	fcomp  QWORD PTR [edi]
  402bb6:	mul    DWORD PTR [ebp+0x28422fad]
  402bbc:	not    BYTE PTR [esi]
  402bbe:	sbb    eax,0xd0b664cc
  402bc3:	jne    0x402c3d
  402bc5:	cmp    al,0x80
  402bc7:	xchg   ebp,eax
  402bc8:	aad    0x32
  402bca:	into   
  402bcb:	les    edx,FWORD PTR [edx-0x20]
  402bce:	mov    ecx,0xa854401
  402bd3:	out    0x6c,al
  402bd5:	pushf  
  402bd6:	cli    
  402bd7:	leave  
  402bd8:	stos   BYTE PTR es:[edi],al
  402bd9:	bound  edx,QWORD PTR [eax+0x36]
  402bdc:	jmp    0x700ac8a7
  402be1:	jo     0x402c07
  402be3:	fiadd  WORD PTR [esi-0x3]
  402be6:	dec    ebx
  402be7:	scas   al,BYTE PTR es:[edi]
  402be8:	mul    DWORD PTR [eax]
  402bea:	hlt    
  402beb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402bec:	jmp    0x402ba9
  402bee:	adc    al,0x79
  402bf0:	gs std 
  402bf2:	jp     0x402bca
  402bf4:	mov    al,0x34
  402bf6:	gs popf 
  402bf8:	ins    DWORD PTR es:[edi],dx
  402bf9:	xchg   esi,eax
  402bfa:	xor    eax,0x21d4f543
  402bff:	icebp  
  402c00:	and    cl,BYTE PTR [ebx+0x1fd5579c]
  402c06:	call   0x9a4:0x4d2a75e5
  402c0d:	fdivr  DWORD PTR [esi]
  402c0f:	in     eax,dx
  402c10:	jp     0x402c62
  402c12:	or     DWORD PTR [ebx],edx
  402c14:	sbb    DWORD PTR [edi+eax*1-0x46],ebp
  402c18:	aad    0x3e
  402c1a:	les    edi,FWORD PTR [ecx+0x7807b348]
  402c20:	mov    edx,0x7e7be15c
  402c25:	pop    ds
  402c26:	pop    ebx
  402c27:	pop    esi
  402c28:	pushf  
  402c29:	pop    ds
  402c2a:	dec    ecx
  402c2b:	push   eax
  402c2c:	pop    esi
  402c2d:	mov    al,al
  402c2f:	push   cs
  402c30:	cmp    eax,DWORD PTR [ebx]
  402c32:	mov    edi,0x4f9c5a0f
  402c37:	pushf  
  402c38:	push   eax
  402c39:	mov    dh,0xc4
  402c3b:	inc    edi
  402c3c:	lahf   
  402c3d:	data16 mov al,ds:0xbca47f27
  402c43:	loop   0x402bd7
  402c45:	out    0xdd,al
  402c47:	mov    esi,0xca941ff3
  402c4c:	out    0xb9,eax
  402c4e:	push   0x9c294a61
  402c53:	fwait
  402c54:	add    eax,0x6acbd62c
  402c59:	dec    ebx
  402c5a:	jecxz  0x402c80
  402c5c:	fist   WORD PTR [edx-0xe]
  402c5f:	gs mov dh,0x79
  402c62:	test   ah,0x37
  402c65:	test   al,0x3c
  402c67:	inc    eax
  402c68:	scas   al,BYTE PTR es:[edi]
  402c69:	jns    0x402c78
  402c6b:	dec    ebx
  402c6c:	ins    DWORD PTR es:[edi],dx
  402c6d:	jmp    0x699d7d05
  402c72:	pusha  
  402c73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c74:	push   esp
  402c75:	mov    ch,0x2
  402c77:	mov    ah,BYTE PTR [esi-0x34]
  402c7a:	jmp    0x402c9c
  402c7c:	jmp    0x8d0cfe79
  402c81:	pop    eax
  402c82:	ror    DWORD PTR [ebp+0xfb54c48],0x6c
  402c89:	cmp    eax,0x35072957
  402c8e:	fcom   DWORD PTR [eax+0x57531d17]
  402c94:	stos   DWORD PTR es:[edi],eax
  402c95:	sub    ch,al
  402c97:	push   edx
  402c98:	cmp    eax,0xdf088e33
  402c9d:	jmp    0xe2059689
  402ca2:	pop    es
  402ca3:	out    dx,al
  402ca4:	xchg   esp,eax
  402ca5:	(bad)  
  402ca6:	es test eax,0x85eba268
  402cac:	mov    bl,0xf5
  402cae:	jmp    0x402d26
  402cb0:	xchg   ecx,eax
  402cb1:	(bad)  
  402cb2:	(bad)  
  402cb3:	ins    BYTE PTR es:[edi],dx
  402cb4:	cdq    
  402cb5:	mov    al,0x44
  402cb7:	xor    DWORD PTR [edi+0x584ea043],eax
  402cbd:	(bad)  
  402cbe:	ds cmp al,0xe0
  402cc1:	push   esp
  402cc2:	xchg   BYTE PTR [ebp+0x56c6622b],ch
  402cc8:	mov    edx,0x8db10b58
  402ccd:	push   ecx
  402cce:	lahf   
  402ccf:	add    BYTE PTR [ecx],ah
  402cd1:	test   DWORD PTR [edx+0x3d],eax
  402cd4:	push   ebp
  402cd5:	ds (bad) 
  402cd7:	shr    BYTE PTR [ecx-0x39c29688],0x2b
  402cde:	add    cl,ch
  402ce0:	out    0xee,al
  402ce2:	iret   
  402ce3:	mov    esp,0x530543b
  402ce8:	or     ecx,ebp
  402cea:	cmp    edi,DWORD PTR [edi-0x38]
  402ced:	cs sbb edx,ebx
  402cf0:	addr16 sub eax,0x27fc6e0e
  402cf6:	int    0xfd
  402cf8:	inc    edx
  402cf9:	push   ds
  402cfa:	cdq    
  402cfb:	imul   edx,DWORD PTR [ebx+0x35dce5d6],0x8a5885eb
  402d05:	out    0xc4,al
  402d07:	mov    ebx,0xf57e8326
  402d0c:	and    eax,0xc6267c2
  402d11:	lea    esp,[esi+0x2b]
  402d14:	sbb    BYTE PTR fs:[ecx+0x611bfda5],0x5c
  402d1c:	jno    0x402d11
  402d1e:	push   esp
  402d1f:	sbb    ebp,0x9c67d884
  402d25:	jae    0x402cfd
  402d27:	push   cs
  402d28:	pop    ss
  402d29:	ret    0x8d42
  402d2c:	cwde   
  402d2d:	pusha  
  402d2e:	sti    
  402d2f:	fs aad 0x96
  402d32:	(bad)  
  402d33:	push   ss
  402d34:	inc    ebp
  402d35:	pop    esi
  402d36:	mov    edx,0xe513aa5
  402d3b:	int3   
  402d3c:	mov    edx,0x9b26d162
  402d41:	bound  esp,QWORD PTR [esi+0x79]
  402d44:	adc    cl,bl
  402d46:	cmp    eax,0xeca72268
  402d4b:	(bad)  
  402d4c:	aad    0x84
  402d4e:	fidiv  WORD PTR [ebp-0x7f]
  402d51:	maskmovq mm1,(bad)
  402d52:	test   DWORD PTR [ecx-0x6599704b],0x448e5ee4
  402d5c:	ja     0x402ce5
  402d5e:	test   al,0x5b
  402d60:	in     al,dx
  402d61:	push   edx
  402d62:	xor    DWORD PTR [edi+0x6ea8f1c],ebx
  402d68:	shl    DWORD PTR [esi-0x72],cl
  402d6b:	out    dx,eax
  402d6c:	gs in  eax,0x71
  402d6f:	fsub   st,st(2)
  402d71:	push   esi
  402d72:	mov    ecx,0xbcda44e4
  402d77:	mov    bl,0xf3
  402d79:	pop    ebp
  402d7a:	sti    
  402d7b:	xchg   ecx,eax
  402d7c:	xchg   ebx,ebx
  402d7e:	rcr    BYTE PTR [ecx-0x67],cl
  402d81:	adc    BYTE PTR [ebx+0x2e],bh
  402d84:	out    dx,al
  402d85:	or     esp,0xffffffa1
  402d88:	call   0x3623:0xc8c84fb9
  402d8f:	sahf   
  402d90:	test   al,0x16
  402d92:	mov    esp,0x24f43502
  402d97:	push   ds
  402d98:	xchg   ecx,eax
  402d99:	sar    esi,0xb8
  402d9c:	pop    esp
  402d9d:	out    0x7f,al
  402d9f:	jge    0x402d96
  402da1:	stc    
  402da2:	cs cmp eax,0x1b7ce64f
  402da8:	xor    ebp,edi
  402daa:	push   ebp
  402dab:	jae    0x402dd2
  402dad:	int    0x13
  402daf:	add    cl,bl
  402db1:	repz pop ecx
  402db3:	or     ecx,DWORD PTR [ebx-0x2027556f]
  402db9:	mov    al,0x88
  402dbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402dbc:	daa    
  402dbd:	push   esi
  402dbe:	sti    
  402dbf:	sub    eax,0x580a1c1
  402dc4:	aaa    
  402dc5:	(bad)  
  402dc6:	adc    eax,0x966c562d
  402dcb:	mov    ah,0x6b
  402dcd:	rol    BYTE PTR [edi+0x42],cl
  402dd0:	cmp    eax,DWORD PTR [esi-0x78]
  402dd3:	mov    eax,0x2f8e39f
  402dd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402dd9:	out    0x7f,al
  402ddb:	ja     0x402e01
  402ddd:	enter  0xca7f,0x18
  402de1:	dec    esi
  402de2:	stc    
  402de3:	dec    edx
  402de4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402de5:	sar    BYTE PTR [ebx-0x3d],0x6
  402de9:	cmp    ecx,ebp
  402deb:	idiv   bl
  402ded:	pop    esi
  402dee:	icebp  
  402def:	cmc    
  402df0:	xchg   edi,eax
  402df1:	lods   eax,DWORD PTR ds:[esi]
  402df2:	mov    eax,ds:0x2aa615ec
  402df7:	(bad)  
  402df8:	imul   eax,DWORD PTR [edx],0x8dc425ca
  402dfe:	push   ds
  402dff:	add    ebp,DWORD PTR [esi-0x35a39ac5]
  402e05:	and    ebx,DWORD PTR [edx]
  402e07:	sbb    bh,BYTE PTR ds:[eax-0x79]
  402e0b:	fidiv  DWORD PTR [ebp+0x3208b667]
  402e11:	mov    ds:0xc222f3bf,al
  402e16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e17:	add    al,BYTE PTR [ebx-0x60]
  402e1a:	add    BYTE PTR [ebx+0x1d439341],bh
  402e20:	loopne 0x402dd8
  402e22:	(bad)  
  402e23:	out    dx,eax
  402e24:	std    
  402e25:	aas    
  402e26:	mov    eax,ds:0x9648831e
  402e2b:	xlat   BYTE PTR ds:[ebx]
  402e2c:	dec    ebp
  402e2d:	cmp    dl,BYTE PTR [esi+esi*2-0x5665d1c0]
  402e34:	cmp    ebp,DWORD PTR [eax-0x43]
  402e37:	xor    esp,DWORD PTR [edx+0x37]
  402e3a:	scas   eax,DWORD PTR es:[edi]
  402e3b:	add    esi,edx
  402e3d:	jmp    0x3fedebbd
  402e42:	fs (bad) 
  402e44:	pop    ebx
  402e45:	fadd   DWORD PTR [esp+eax*4]
  402e48:	test   esp,esp
  402e4a:	inc    esi
  402e4b:	pop    ebp
  402e4c:	dec    edx
  402e4d:	push   ebx
  402e4e:	xchg   BYTE PTR [ebp+0x106366ba],bh
  402e54:	jl     0x402ddb
  402e56:	and    al,BYTE PTR [ebp+0x3454892d]
  402e5c:	scas   eax,DWORD PTR es:[edi]
  402e5d:	sbb    edx,DWORD PTR [esi]
  402e5f:	adc    al,0x97
  402e61:	mov    ch,0x84
  402e63:	cmp    BYTE PTR [edx-0x6128b0f9],0x36
  402e6a:	call   0xd8d:0xc52ccf9a
  402e71:	test   al,0xd4
  402e73:	out    dx,al
  402e74:	repz imul edi,eax,0xffffffee
  402e78:	retf   
  402e79:	sub    BYTE PTR [edi-0x1e],dh
  402e7c:	dec    eax
  402e7d:	mov    ecx,0x43170a70
  402e82:	std    
  402e83:	cmp    al,0xd8
  402e85:	or     eax,0xdae823ea
  402e8a:	and    cl,dh
  402e8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e8d:	idiv   DWORD PTR [edi+esi*1]
  402e90:	xchg   edi,eax
  402e91:	pop    es
  402e92:	fnstenv [edx+0x33]
  402e95:	test   BYTE PTR [ebx-0x77f2155c],ah
  402e9b:	je     0x402efa
  402e9d:	xor    esp,DWORD PTR [eax+0x4e]
  402ea0:	call   0x7125:0xc49dd63e
  402ea7:	sbb    edx,ebx
  402ea9:	stos   BYTE PTR es:[edi],al
  402eaa:	ds enter 0x5575,0x2
  402eaf:	xchg   ebx,eax
  402eb0:	push   eax
  402eb1:	add    BYTE PTR [ebx],ah
  402eb3:	imul   ebx,DWORD PTR [edi-0x5e],0xffffffb6
  402eb7:	mov    ebx,0x1ff1d482
  402ebc:	in     al,dx
  402ebd:	jmp    FWORD PTR ds:0x1fcf60f3
  402ec3:	sub    BYTE PTR [edx+0x1f],0xbe
  402ec7:	push   edi
  402ec8:	mov    edx,0x9a1768ed
  402ecd:	int3   
  402ece:	mov    WORD PTR [esp+edx*2],ds
  402ed1:	mov    edi,0x5c01ce97
  402ed6:	sbb    bl,BYTE PTR [edi]
  402ed8:	cdq    
  402ed9:	pop    ds
  402eda:	xchg   edi,eax
  402edb:	ins    BYTE PTR es:[edi],dx
  402edc:	les    ebx,FWORD PTR [esi+ebx*2]
  402edf:	stos   DWORD PTR es:[edi],eax
  402ee0:	push   cs
  402ee1:	(bad)  
  402ee2:	cmp    DWORD PTR [eax-0xb],ecx
  402ee5:	xchg   edi,eax
  402ee6:	mov    eax,0xc0314ba7
  402eeb:	jnp    0x402ed4
  402eed:	xchg   esp,eax
  402eee:	pop    edx
  402eef:	ins    DWORD PTR es:[edi],dx
  402ef0:	mov    ds:0xca53c2c4,al
  402ef5:	loop   0x402ebf
  402ef7:	stc    
  402ef8:	sbb    DWORD PTR [ecx-0x62],0x38
  402efc:	or     ebp,DWORD PTR [ecx+edx*1+0x4c]
  402f00:	pop    ecx
  402f01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f02:	adc    eax,DWORD PTR [esi+0x607e6a3c]
  402f08:	xchg   edx,eax
  402f09:	xchg   edi,ebp
  402f0b:	xchg   BYTE PTR [ecx+ebp*2],ah
  402f0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f0f:	and    eax,0x9a5bd241
  402f14:	jmp    0x402eb1
  402f16:	sub    edx,esp
  402f18:	clc    
  402f19:	or     al,0x19
  402f1b:	leave  
  402f1c:	mov    esp,0x57166ac5
  402f21:	int    0x15
  402f23:	xor    edi,DWORD PTR [esi+0x42200b3d]
  402f29:	mov    cl,0x9a
  402f2b:	ret    
  402f2c:	iret   
  402f2d:	fist   DWORD PTR [ecx]
  402f2f:	ins    DWORD PTR es:[edi],dx
  402f30:	ds cdq 
  402f32:	cs jno 0x402f94
  402f35:	in     al,dx
  402f36:	sbb    ax,0x770c
  402f3a:	sar    DWORD PTR [esi],1
  402f3c:	and    DWORD PTR [edi-0x26740dca],eax
  402f42:	mov    bl,0xb3
  402f44:	and    DWORD PTR [edi],0xd04c852e
  402f4a:	pop    edi
  402f4b:	cmp    al,0xc3
  402f4d:	sbb    eax,0x309334fd
  402f52:	jl     0x402fca
  402f54:	cli    
  402f55:	mov    DWORD PTR [edi],eax
  402f57:	(bad)  
  402f58:	push   0xffffffc1
  402f5a:	fadd   DWORD PTR [esi+edi*2+0x50]
  402f5e:	cmp    esi,DWORD PTR [esp+ebp*2+0x36]
  402f62:	mov    esp,0xe10f45de
  402f67:	push   edx
  402f68:	inc    ebx
  402f69:	(bad)  
  402f6a:	fidivr WORD PTR [ecx+eiz*8+0x2b422e79]
  402f71:	fbstp  TBYTE PTR [esi+0x34]
  402f74:	or     DWORD PTR [esi],edi
  402f76:	dec    edi
  402f77:	gs cmp al,0x55
  402f7a:	sub    BYTE PTR [ecx+ecx*2+0xa26d800],cl
  402f81:	das    
  402f82:	sub    DWORD PTR [eax-0x5a71361],ecx
  402f88:	mov    bh,0x13
  402f8a:	sbb    edx,esi
  402f8c:	aad    0x3a
  402f8e:	dec    eax
  402f8f:	clc    
  402f90:	loop   0x402f3c
  402f92:	cli    
  402f93:	dec    edi
  402f94:	(bad)  
  402f95:	pop    esp
  402f96:	adc    edx,DWORD PTR [edx+0x42]
  402f99:	mov    DWORD PTR es:0x7ea9a84,esp
  402fa0:	in     al,0xf
  402fa2:	pop    es
  402fa3:	jno    0x402f65
  402fa5:	push   ebp
  402fa6:	lock jb 0x402f59
  402fa9:	mov    fs,WORD PTR [edx-0x54]
  402fac:	fiadd  DWORD PTR [eax]
  402fae:	pushf  
  402faf:	(bad)  
  402fb0:	aas    
  402fb1:	jb     0x402f86
  402fb3:	dec    eax
  402fb4:	mov    cl,0x26
  402fb6:	pop    edx
  402fb7:	xchg   esi,eax
  402fb8:	or     ecx,DWORD PTR [eax-0xca979cc]
  402fbe:	pop    edi
  402fbf:	in     al,0xcc
  402fc1:	(bad)  
  402fc2:	je     0x402f5b
  402fc4:	leave  
  402fc5:	xor    al,0x83
  402fc7:	jae    0x402f74
  402fc9:	push   ds
  402fca:	mov    ch,0x1c
  402fcc:	inc    edi
  402fcd:	mov    ds,WORD PTR [ebx+0x70]
  402fd0:	adc    DWORD PTR ds:0x50f04ddf,ecx
  402fd6:	mov    esi,0xd709b4d1
  402fdb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402fdc:	cmc    
  402fdd:	and    ah,BYTE PTR [ebp+0x4e]
  402fe0:	adc    eax,0x53a4a2c0
  402fe5:	xor    al,0x99
  402fe7:	pusha  
  402fe8:	std    
  402fe9:	aaa    
  402fea:	mov    ch,0xdf
  402fec:	stos   DWORD PTR es:[edi],eax
  402fed:	popf   
  402fee:	lods   eax,DWORD PTR ds:[esi]
  402fef:	sar    edi,1
  402ff1:	vaddsd xmm5,xmm7,QWORD PTR [eax+0x73065501]
  402ff9:	sbb    edx,eax
  402ffb:	add    eax,0x122fe1b
  403000:	fwait
  403001:	(bad)  
  403002:	xchg   ebp,eax
  403003:	call   0xf134:0x4b546b28
  40300a:	int3   
  40300b:	(bad)  
  40300c:	enter  0x5b1f,0x6f
  403010:	add    dl,BYTE PTR [esi-0x21]
  403013:	ins    BYTE PTR es:[edi],dx
  403014:	mov    al,0x71
  403016:	(bad)  
  403017:	ins    BYTE PTR es:[edi],dx
  403018:	mov    cl,0x82
  40301a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40301b:	(bad)  
  40301c:	pop    ebp
  40301d:	pop    ebp
  40301e:	mov    ebx,DWORD PTR [ebx+0x37e06094]
  403024:	sub    ebp,DWORD PTR [edx-0x5cd72e99]
  40302a:	mov    cl,0xd9
  40302c:	mov    ah,0x9c
  40302e:	xchg   ecx,eax
  40302f:	lods   al,BYTE PTR ds:[esi]
  403030:	mov    edx,edx
  403032:	nop
  403033:	sub    eax,ebx
  403035:	stc    
  403036:	sar    DWORD PTR [ebp+0x4d],0x3c
  40303a:	(bad)  [ebx+ebp*4+0x28]
  40303e:	sti    
  40303f:	mov    edi,0xb830ecd5
  403044:	jmp    0xcf103f52
  403049:	fld    DWORD PTR [esi]
  40304b:	lahf   
  40304c:	cmp    al,0x7b
  40304e:	shr    BYTE PTR [ebp+0x33b63efc],cl
  403054:	and    bl,dl
  403056:	or     ebp,edi
  403058:	dec    ebx
  403059:	push   edx
  40305a:	ja     0x40306f
  40305c:	xchg   ecx,eax
  40305d:	pop    eax
  40305e:	mov    dl,0xa3
  403060:	sub    esi,DWORD PTR [edi+0x713f3f93]
  403066:	mov    ebp,0x313e5269
  40306b:	add    BYTE PTR [ebx-0x6f],bl
  40306e:	rol    ebp,0xd0
  403071:	call   0xdb8ee1ef
  403076:	dec    ecx
  403077:	enter  0xe5ee,0xfd
  40307b:	bswap  ebp
  40307d:	adc    BYTE PTR [ebx-0x1dd07d0d],0x6c
  403084:	cld    
  403085:	stc    
  403086:	mul    bl
  403088:	xchg   edx,eax
  403089:	mov    ah,0xe5
  40308b:	cs aas 
  40308d:	jo     0x40309c
  40308f:	mov    ds:0x2bb5777d,al
  403094:	dec    eax
  403095:	sbb    eax,0x3b225d0f
  40309a:	ins    DWORD PTR es:[edi],dx
  40309b:	cmp    al,0xac
  40309d:	add    BYTE PTR [ebx],bh
  40309f:	sub    ch,0x31
  4030a2:	pushf  
  4030a3:	mov    ds:0x18ebd782,eax
  4030a8:	retf   0x3b6f
  4030ab:	and    al,0x7b
  4030ad:	inc    edi
  4030ae:	cmp    esi,DWORD PTR [ebp-0x4db3fc2b]
  4030b4:	test   BYTE PTR [edi+0x7242d592],bl
  4030ba:	ja     0x403072
  4030bc:	pop    esi
  4030bd:	pusha  
  4030be:	sbb    bh,BYTE PTR [ebx+0x2d]
  4030c1:	cld    
  4030c2:	xor    edx,DWORD PTR [edx-0x46]
  4030c5:	inc    ecx
  4030c6:	cld    
  4030c7:	sti    
  4030c8:	gs mov al,0x2c
  4030cb:	lock fldln2 
  4030ce:	push   0xffffff93
  4030d0:	ret    
  4030d1:	mov    ch,0xa0
  4030d3:	out    dx,eax
  4030d4:	pop    ecx
  4030d5:	mov    ds:0x5187ab0f,eax
  4030da:	or     ebp,DWORD PTR [ebx-0x1c]
  4030dd:	mov    eax,ds:0x5ac80d3e
  4030e2:	int    0xf2
  4030e4:	jno    0x4030a8
  4030e6:	dec    ebx
  4030e7:	inc    ebp
  4030e8:	scas   eax,DWORD PTR es:[edi]
  4030e9:	mov    ebp,0x2f22f305
  4030ee:	lahf   
  4030ef:	add    BYTE PTR [eax+0x6],bl
  4030f2:	adc    DWORD PTR [ebp-0x5ccdc8b8],0xffffff9a
  4030f9:	ret    
  4030fa:	das    
  4030fb:	inc    ebp
  4030fc:	jo     0x40309d
  4030fe:	push   es
  4030ff:	loopne 0x403132
  403101:	mov    ebp,0xd45301b7
  403106:	xor    eax,0xfe802312
  40310b:	dec    ebp
  40310c:	push   ebp
  40310d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40310e:	sbb    al,0xfe
  403110:	jb     0x4030da
  403112:	mov    ds:0xf4a065da,al
  403117:	fmulp  st(5),st
  403119:	xor    bl,ch
  40311b:	add    eax,0xa0a023d
  403120:	mov    ah,dh
  403122:	hlt    
  403123:	fbstp  TBYTE PTR [ebp+0x4f]
  403126:	dec    esi
  403127:	xchg   ebp,eax
  403128:	int3   
  403129:	daa    
  40312a:	adc    BYTE PTR [eax+eax*4-0x39d769e4],dl
  403131:	gs out 0x35,al
  403134:	mov    bh,0xab
  403136:	icebp  
  403137:	cdq    
  403138:	dec    ebp
  403139:	pop    ss
  40313a:	in     al,0x7d
  40313c:	(bad)  
  40313d:	mov    bh,0x34
  40313f:	cmp    ah,BYTE PTR [ebp+0x41]
  403142:	mov    BYTE PTR [ebx+0x281c3f82],dl
  403148:	retf   0xcd85
  40314b:	push   edx
  40314c:	(bad)  [ebx-0x79be9a02]
  403152:	das    
  403153:	mov    ecx,0xbc168442
  403158:	or     al,0xfe
  40315a:	add    al,0x6f
  40315c:	dec    edi
  40315d:	add    al,dl
  40315f:	jo     0x403182
  403161:	xor    BYTE PTR [ebp-0x11c3cbc],dh
  403167:	jnp    0x403176
  403169:	aam    0xca
  40316b:	mov    dh,BYTE PTR [ecx]
  40316d:	pop    ebx
  40316e:	imul   esi,DWORD PTR [ebx],0xfffffffa
  403171:	dec    edx
  403172:	mov    bl,0xcb
  403174:	das    
  403175:	xchg   BYTE PTR [ecx+edx*2+0x40],bh
  403179:	jle    0x403120
  40317b:	push   0xffffffa1
  40317d:	mov    BYTE PTR [ecx],ah
  40317f:	jmp    0xda0e027d
  403184:	push   es
  403185:	push   es
  403186:	retf   0x9718
  403189:	pop    es
  40318a:	inc    eax
  40318b:	jno    0x403209
  40318d:	fimul  WORD PTR [edi+0x5a]
  403190:	pusha  
  403191:	inc    ebp
  403192:	std    
  403193:	outs   dx,DWORD PTR ds:[esi]
  403194:	sbb    al,0x7d
  403196:	sbb    al,0x8d
  403198:	dec    edx
  403199:	iret   
  40319a:	jle    0x40320d
  40319c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40319d:	test   BYTE PTR [ebp+0x3f250e82],bh
  4031a3:	aas    
  4031a4:	jb     0x4031a4
  4031a6:	jp     0x403221
  4031a8:	pop    esp
  4031a9:	sub    al,0x3e
  4031ab:	icebp  
  4031ac:	jg     0x40315e
  4031ae:	sbb    DWORD PTR [eax],ebp
  4031b0:	xchg   edi,eax
  4031b1:	pop    edx
  4031b2:	adc    al,0xa3
  4031b4:	or     bh,ah
  4031b6:	scas   al,BYTE PTR es:[edi]
  4031b7:	mov    eax,0xad00d91a
  4031bc:	bound  ecx,QWORD PTR [eax+eiz*8+0x6d8a2321]
  4031c3:	jge    0x403237
  4031c5:	push   0x1a
  4031c7:	xchg   DWORD PTR [esi-0x4a],eax
  4031ca:	ror    DWORD PTR [ebx-0x2b],0x3d
  4031ce:	cs sbb eax,0x6596802
  4031d4:	jmp    0x40322f
  4031d6:	pop    ebx
  4031d7:	ror    edx,0x7f
  4031da:	fcomp  st(4)
  4031dc:	test   eax,ebx
  4031de:	lock inc edx
  4031e0:	inc    eax
  4031e1:	imul   eax,esp,0x4
  4031e4:	dec    edi
  4031e5:	or     eax,0xc23ba109
  4031ea:	repz pop DWORD PTR [edx-0x3aba6f08]
  4031f1:	ins    DWORD PTR es:[edi],dx
  4031f2:	test   al,0xa6
  4031f4:	and    BYTE PTR [edx+edx*8-0x12],ah
  4031f8:	xor    edx,DWORD PTR [edx]
  4031fa:	mov    ds:0x3a515786,eax
  4031ff:	leave  
  403200:	xor    BYTE PTR [esi],ch
  403202:	int    0xb6
  403204:	lods   eax,DWORD PTR ds:[esi]
  403205:	xchg   edx,eax
  403206:	push   0xcd55859a
  40320b:	test   BYTE PTR [ecx],ah
  40320d:	jno    0x4031f1
  40320f:	pop    ebp
  403210:	inc    ebp
  403211:	nop
  403212:	xchg   BYTE PTR [ebp+0x52],cl
  403215:	ins    BYTE PTR es:[edi],dx
  403216:	mov    ds:0xf9097721,eax
  40321b:	mov    ch,BYTE PTR ds:0x819f83b6
  403221:	xchg   DWORD PTR [edi+eax*8-0x73],ebx
  403225:	stos   DWORD PTR es:[edi],eax
  403226:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403227:	mov    ch,ch
  403229:	cmp    ecx,DWORD PTR [bp-0x46]
  40322d:	sbb    eax,DWORD PTR [esi]
  40322f:	aam    0xac
  403231:	(bad)  
  403232:	lods   eax,DWORD PTR ds:[esi]
  403233:	mov    bl,0x8e
  403235:	(bad)  
  403236:	in     eax,dx
  403237:	mov    bl,0x6b
  403239:	outs   dx,BYTE PTR ds:[esi]
  40323a:	out    dx,eax
  40323b:	jecxz  0x4031ee
  40323d:	cmp    ecx,DWORD PTR [edi+ebx*8-0x379839f0]
  403244:	inc    ebx
  403245:	xor    ch,bl
  403247:	push   ss
  403248:	(bad)  
  403249:	push   cs
  40324a:	retf   0x2eec
  40324d:	popf   
  40324e:	and    DWORD PTR [esp-0x7a],eax
  403252:	idiv   BYTE PTR [ecx+0x79]
  403255:	jae    0x403285
  403257:	mov    al,ds:0xa0b05d6a
  40325c:	fist   DWORD PTR [ebp+0x78c16370]
  403262:	(bad)  
  403263:	test   DWORD PTR [esi-0x9375848],0x38a69a48
  40326d:	sbb    eax,0xfd4d1a67
  403272:	xchg   ecx,eax
  403273:	push   ecx
  403274:	lea    edi,[eax+edx*2+0x6ce0396b]
  40327b:	out    dx,eax
  40327c:	push   es
  40327d:	in     al,dx
  40327e:	addr16 jb 0x4032c0
  403281:	scas   al,BYTE PTR es:[edi]
  403282:	ffree  st(7)
  403284:	getsec 
  403286:	icebp  
  403287:	inc    edi
  403288:	int    0x64
  40328a:	leave  
  40328b:	push   edx
  40328c:	mov    ecx,0x658d1eba
  403291:	pop    ebx
  403292:	(bad)  
  403293:	cs cmp eax,0x70c3b612
  403299:	shl    ebp,1
  40329b:	fwait
  40329c:	dec    edi
  40329d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40329e:	push   edi
  40329f:	call   0x6047084a
  4032a4:	jmp    0x569d:0xe883c451
  4032ab:	cmp    ch,bh
  4032ad:	int    0x47
  4032af:	nop
  4032b0:	jmp    0x5848:0x750bc88b
  4032b7:	fsubr  QWORD PTR [esi-0x6ea76846]
  4032bd:	scas   eax,DWORD PTR es:[edi]
  4032be:	cmp    al,0x41
  4032c0:	sub    al,BYTE PTR [edx+0x53]
  4032c3:	adc    DWORD PTR [esi+0x6be62c73],edi
  4032c9:	in     eax,0x22
  4032cb:	sbb    BYTE PTR [ebx-0x5aba1f22],0x28
  4032d2:	fadd   DWORD PTR [ecx+0x7485a25c]
  4032d8:	xor    BYTE PTR [eax],ah
  4032da:	(bad)  
  4032db:	and    esp,DWORD PTR [ebp+0x251236ab]
  4032e1:	sub    ebp,DWORD PTR [esi+0x75]
  4032e4:	mov    ah,0x34
  4032e6:	ror    ebp,cl
  4032e8:	xchg   edi,eax
  4032e9:	mov    edx,0xbe5ab898
  4032ee:	sub    cl,BYTE PTR [edi+ebx*1-0x5fb1c377]
  4032f5:	mov    WORD PTR [edx-0x43e65def],ss
  4032fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4032fc:	ins    DWORD PTR es:[edi],dx
  4032fd:	inc    ebp
  4032fe:	repz xchg edx,eax
  403300:	push   ebx
  403301:	sbb    BYTE PTR [edi-0x58b6d2c],cl
  403307:	ja     0x403351
  403309:	xchg   BYTE PTR [ebp-0x64d301d6],ch
  40330f:	cmp    DWORD PTR [ebx+0x2f57826b],ebp
  403315:	jle    0x40336c
  403317:	test   DWORD PTR [eax],eax
  403319:	loop   0x40333c
  40331b:	retf   0x5e19
  40331e:	(bad)  
  40331f:	loope  0x4032fd
  403321:	mov    al,0xc2
  403323:	fild   WORD PTR [edx-0x63ce959b]
  403329:	repz inc edx
  40332b:	xchg   edx,eax
  40332c:	popa   
  40332d:	jl     0x40334c
  40332f:	je     0x4032f3
  403331:	loop   0x403378
  403333:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403334:	outs   dx,DWORD PTR ds:[esi]
  403335:	adc    edi,eax
  403337:	cmp    al,0x9
  403339:	pop    edi
  40333a:	jecxz  0x4032e8
  40333c:	stos   DWORD PTR es:[edi],eax
  40333d:	mov    ebx,0x4143ffba
  403342:	cmp    DWORD PTR [ebx-0x20],ebp
  403345:	fiadd  DWORD PTR [ebx+0x4ab1249c]
  40334b:	pop    esi
  40334c:	or     cl,BYTE PTR [ecx]
  40334e:	mov    edx,0x9188bd68
  403353:	mov    ch,bl
  403355:	popa   
  403356:	pop    es
  403357:	popf   
  403358:	xchg   ebp,eax
  403359:	mov    bh,0x36
  40335b:	rcr    BYTE PTR [edx-0x37],cl
  40335e:	nop
  40335f:	mov    eax,0xf0116ca6
  403364:	mov    edx,0x5480fe3
  403369:	arpl   WORD PTR [ebx+edi*2+0x30],si
  40336d:	xchg   esi,eax
  40336e:	xchg   ecx,eax
  40336f:	add    bh,BYTE PTR [ebp+0x1e]
  403372:	push   cs
  403373:	aam    0x7a
  403375:	pop    ss
  403376:	(bad)  [esi+ecx*1]
  403379:	inc    edi
  40337a:	iret   
  40337b:	ja     0x40338c
  40337d:	ins    BYTE PTR es:[edi],dx
  40337e:	cmp    ah,dh
  403380:	shl    DWORD PTR [edx-0x2e687f85],1
  403386:	dec    ebp
  403387:	outs   dx,BYTE PTR ds:[esi]
  403388:	mov    ds:0x98930746,al
  40338d:	pop    edi
  40338e:	push   0x7c
  403390:	pop    esp
  403391:	in     al,0x3b
  403393:	or     DWORD PTR [eax+eax*1],0xffffffc5
  403397:	stc    
  403398:	push   edi
  403399:	retf   0xfeb8
  40339c:	enter  0x3845,0xe2
  4033a0:	retf   0x5fca
  4033a3:	in     eax,0x40
  4033a5:	in     eax,dx
  4033a6:	jne    0x403388
  4033a8:	ja     0x403419
  4033aa:	(bad)  
  4033ab:	push   eax
  4033ac:	daa    
  4033ad:	rol    esi,cl
  4033af:	add    esi,DWORD PTR [esi+0xc]
  4033b2:	leave  
  4033b3:	mov    edi,0xae45560c
  4033b8:	test   BYTE PTR [edx+0x44],dl
  4033bb:	mov    DWORD PTR [eax],edi
  4033bd:	cmp    bh,BYTE PTR [edx+0x3e]
  4033c0:	popf   
  4033c1:	mov    WORD PTR [eax+ecx*1],?
  4033c4:	mov    eax,ds:0x803ea42f
  4033c9:	jne    0x403424
  4033cb:	stc    
  4033cc:	cmovb  eax,ecx
  4033cf:	or     al,0x45
  4033d1:	xchg   edi,eax
  4033d2:	dec    esp
  4033d3:	clc    
  4033d4:	or     dl,dl
  4033d6:	pop    eax
  4033d7:	fcomip st,st(7)
  4033d9:	push   ecx
  4033da:	jp     0x4033b9
  4033dc:	pushf  
  4033dd:	out    0x86,eax
  4033df:	jle    0x4033dd
  4033e1:	gs clc 
  4033e3:	push   ebx
  4033e4:	pop    ds
  4033e5:	xchg   edx,eax
  4033e6:	and    eax,esi
  4033e8:	in     al,dx
  4033e9:	fild   QWORD PTR [edx-0x554963ac]
  4033ef:	adc    DWORD PTR [ecx+eiz*2+0x0],eax
  4033f3:	inc    esp
  4033f4:	mov    edi,DWORD PTR [edi+0x70]
  4033f7:	sbb    BYTE PTR [ecx-0x26],dh
  4033fa:	jb     0x403391
  4033fc:	dec    eax
  4033fd:	push   0x2ca5d5aa
  403402:	add    BYTE PTR [edi-0x305d3f76],0x2a
  403409:	pop    edi
  40340a:	mov    ds:0x1d8b29a3,eax
  40340f:	aad    0xb4
  403411:	push   ds
  403412:	push   ecx
  403413:	dec    edx
  403414:	scas   al,BYTE PTR es:[di]
  403416:	and    al,0x2a
  403418:	daa    
  403419:	shr    BYTE PTR [ecx],0xfe
  40341c:	mov    al,0x61
  40341e:	in     eax,dx
  40341f:	fldcw  WORD PTR [edx-0x46abe074]
  403425:	aad    0x96
  403427:	arpl   bx,bp
  403429:	or     DWORD PTR [ebx+ebx*8],ecx
  40342c:	dec    esi
  40342d:	dec    esi
  40342e:	mov    ds:0xbb202484,eax
  403433:	jecxz  0x4033f4
  403435:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403436:	pop    edi
  403437:	push   ss
  403438:	(bad)  
  403439:	mov    edi,DWORD PTR [ecx+0x7d]
  40343c:	jno    0x4034b4
  40343e:	inc    esp
  40343f:	shl    edi,0xc7
  403442:	mov    al,ds:0x34dcabe1
  403447:	popf   
  403448:	ins    DWORD PTR es:[edi],dx
  403449:	xor    al,0x7
  40344b:	inc    ecx
  40344c:	sub    BYTE PTR [eax-0x65],0x70
  403450:	dec    esp
  403451:	shl    ch,1
  403453:	jae    0x4034a6
  403455:	sub    al,0xb4
  403457:	fnstcw WORD PTR [ecx]
  403459:	push   ss
  40345a:	push   0xb3c06666
  40345f:	popa   
  403460:	call   0xe1cb:0x8e7d85d9
  403467:	(bad)  
  403468:	in     eax,0xa0
  40346a:	mov    ebp,0x4891e0b9
  40346f:	adc    DWORD PTR [ebx-0x2359beda],eax
  403475:	pop    ds
  403476:	sbb    BYTE PTR [eax],cl
  403478:	je     0x40340b
  40347a:	bound  esp,QWORD PTR [ebx]
  40347c:	push   esp
  40347d:	repz xor ch,bh
  403480:	cmp    ebx,esi
  403482:	mov    al,0x19
  403484:	(bad)  
  403485:	push   edi
  403486:	push   es
  403487:	and    eax,0xb88197f3
  40348c:	outs   dx,DWORD PTR ds:[esi]
  40348d:	gs xchg ebx,eax
  40348f:	stos   DWORD PTR es:[edi],eax
  403490:	push   es
  403491:	jnp    0x403449
  403493:	std    
  403494:	(bad)  [ebx+0x16da1895]
  40349a:	push   edx
  40349b:	fmul   DWORD PTR [eax-0x70]
  40349e:	mov    esp,0x2e4b65bd
  4034a3:	push   eax
  4034a4:	mov    esp,0x6fea57ca
  4034a9:	js     0x40349a
  4034ab:	jb     0x4034de
  4034ad:	sbb    cl,BYTE PTR [esi-0x59]
  4034b0:	enter  0xc11,0x78
  4034b4:	and    ah,BYTE PTR [esi-0x20]
  4034b7:	(bad)  
  4034b8:	fcomp  QWORD PTR [ebx]
  4034ba:	pusha  
  4034bb:	adc    ebx,DWORD PTR [edi]
  4034bd:	add    dh,BYTE PTR [esp+eax*1]
  4034c0:	push   ebp
  4034c1:	xchg   ax,ax
  4034c3:	aam    0x1c
  4034c5:	(bad)  
  4034c6:	xchg   edx,eax
  4034c7:	fnstcw WORD PTR [edi+0x58]
  4034ca:	test   al,0x38
  4034cc:	push   0x74
  4034ce:	push   0xffffffbf
  4034d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4034d1:	cmp    eax,0xd9cbf6e6
  4034d6:	jns    0x4034a8
  4034d8:	mov    ebx,0xc5d50e6e
  4034dd:	repz dec edi
  4034df:	stos   DWORD PTR es:[edi],eax
  4034e0:	jnp    0x403520
  4034e2:	cmp    cl,BYTE PTR [edx]
  4034e4:	inc    ebp
  4034e5:	xchg   ecx,eax
  4034e6:	push   0xffffffed
  4034e8:	jge    0x4034e1
  4034ea:	arpl   WORD PTR [edx+0x67],dx
  4034ed:	arpl   WORD PTR [edx-0x33],dx
  4034f0:	rol    BYTE PTR [ecx-0x5d01aaa9],cl
  4034f6:	jecxz  0x403501
  4034f8:	xor    eax,0x727b3ddc
  4034fd:	pusha  
  4034fe:	jae    0x403492
  403500:	jo     0x4034e1
  403502:	pop    ebp
  403503:	pop    ds
  403504:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403505:	sbb    cl,0x55
  403508:	or     eax,0x1bdecee
  40350d:	lods   eax,DWORD PTR ds:[esi]
  40350e:	aam    0x2c
  403510:	push   ebx
  403511:	dec    edi
  403512:	mov    ds:0xbaa1ad21,al
  403517:	icebp  
  403518:	push   ds
  403519:	loop   0x403575
  40351b:	adc    BYTE PTR [edx+0x24ee7d0a],0x88
  403522:	mov    eax,ds:0x4b8f9525
  403527:	(bad)  [ebx+0x54]
  40352a:	mov    bl,0xd4
  40352c:	fisttp WORD PTR [eax+edx*1+0x4e]
  403530:	imul   DWORD PTR [edx-0x1a46ee7e]
  403536:	fist   DWORD PTR [esi-0x56]
  403539:	push   0x2c
  40353b:	mov    ah,0x62
  40353d:	pop    ecx
  40353e:	ja     0x40355e
  403540:	push   es
  403541:	and    BYTE PTR [esi+0x60],ch
  403544:	ret    
  403545:	inc    edx
  403546:	dec    ecx
  403547:	sub    BYTE PTR [ebp+ebp*1-0x1fb5c415],al
  40354e:	iret   
  40354f:	pop    edx
  403550:	(bad)  
  403551:	xchg   ebp,eax
  403552:	adc    eax,0x49841069
  403557:	fdiv   DWORD PTR [esi-0x6ea967fc]
  40355d:	adc    BYTE PTR [ebx],dl
  40355f:	mov    cl,BYTE PTR ds:[esi-0x72]
  403563:	pop    ebp
  403564:	push   ebp
  403565:	fist   WORD PTR [esi+0x4e3a7396]
  40356b:	jbe    0x403584
  40356d:	mov    ecx,0x5588a955
  403572:	retf   0x19ca
  403575:	mov    esp,0xcc965ec7
  40357a:	push   ds
  40357b:	mov    ebx,DWORD PTR [esi+0xc]
  40357e:	or     al,0x2a
  403580:	mov    cl,0x40
  403582:	mov    eax,ds:0xae8e6514
  403587:	clc    
  403588:	add    edi,ebp
  40358a:	xor    edi,DWORD PTR [edi]
  40358c:	mov    esi,0x170d130a
  403591:	enter  0x135b,0x19
  403595:	faddp  st(3),st
  403597:	mov    ecx,0xad07ca1a
  40359c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40359d:	sub    dh,BYTE PTR [eax-0x3a]
  4035a0:	fcomp  QWORD PTR [ecx-0x976775f]
  4035a6:	mov    ebx,0x8cca0761
  4035ab:	xchg   esp,ebp
  4035ad:	mov    ds:0x5c8ccb7b,al
  4035b2:	push   0x16
  4035b4:	dec    ebx
  4035b5:	lock sub BYTE PTR [ecx],0x55
  4035b9:	inc    esi
  4035ba:	xchg   edi,eax
  4035bb:	pop    ebp
  4035bc:	jmp    0xb75fa7f9
  4035c1:	xchg   edi,eax
  4035c2:	sub    BYTE PTR [eax-0x5a],dh
  4035c5:	jbe    0x403590
  4035c7:	add    eax,0x4d8d6c11
  4035cc:	(bad)  
  4035cd:	fdivp  st(4),st
  4035cf:	outs   dx,DWORD PTR ds:[esi]
  4035d0:	idiv   BYTE PTR [esi+0x6c1257c1]
  4035d6:	mov    bl,0xd4
  4035d8:	and    BYTE PTR [ebx+ebx*8-0x2f5f026],dl
  4035df:	pop    edi
  4035e0:	pop    es
  4035e1:	xor    DWORD PTR [ebp-0x49ed1400],edx
  4035e7:	jmp    0xe3380f4f
  4035ec:	test   BYTE PTR [ebx-0x7c16078f],bl
  4035f2:	lds    esp,FWORD PTR [edx+0x1a5a15da]
  4035f8:	je     0x4035ec
  4035fa:	hlt    
  4035fb:	cmp    ebx,DWORD PTR [esi-0x702d92f]
  403601:	mov    dh,0xe5
  403603:	mov    esi,0x94b65a6e
  403608:	in     eax,0xf0
  40360a:	sbb    al,0xb2
  40360c:	mov    BYTE PTR [eax+0x1d],ch
  40360f:	sbb    DWORD PTR [edx+0x64],edi
  403612:	mov    edi,0x9f7f5390
  403617:	or     eax,0xcf3a277f
  40361c:	out    dx,eax
  40361d:	push   edi
  40361e:	mov    eax,DWORD PTR ds:0x5e6a2550
  403624:	(bad)  [eax+ebp*2]
  403627:	push   ss
  403628:	mov    eax,ds:0xb2985cf5
  40362d:	ins    DWORD PTR es:[edi],dx
  40362e:	stos   BYTE PTR es:[edi],al
  40362f:	mov    DWORD PTR [ebp-0x18],ecx
  403632:	mov    DWORD PTR [ebp-0xa0],0xf89c85bc
  40363c:	mov    eax,ds:0x429024
  403641:	add    DWORD PTR ds:0x42a014,eax
  403647:	mov    eax,DWORD PTR [ebp-0x14]
  40364a:	mov    DWORD PTR [ebp-0x9c],eax
  403650:	adc    eax,0x5b9f
  403655:	mov    eax,DWORD PTR [ebp-0x18]
  403658:	sbb    DWORD PTR ds:0x42d004,0x42c01c
  403662:	mov    DWORD PTR [ebp-0x98],eax
  403668:	mov    eax,DWORD PTR [ebp-0x2c]
  40366b:	sub    DWORD PTR ds:0x429004,0x429014
  403675:	xor    eax,esi
  403677:	sub    DWORD PTR ds:0x429000,0x42c014
  403681:	add    eax,edi
  403683:	mov    DWORD PTR [ebp-0x94],eax
  403689:	lea    eax,[ebp-0x48]
  40368c:	mov    DWORD PTR [ebp-0x90],eax
  403692:	mov    eax,DWORD PTR [ebp-0xa0]
  403698:	xor    eax,esi
  40369a:	sbb    DWORD PTR ds:0x42a014,0x429000
  4036a4:	add    eax,edi
  4036a6:	sbb    DWORD PTR ds:0x42d010,0x42c00c
  4036b0:	mov    DWORD PTR [ebp-0xa0],eax
  4036b6:	xor    DWORD PTR ds:0x42a010,0x42901c
  4036c0:	lea    eax,[ebp-0xa0]
  4036c6:	push   eax
  4036c7:	sub    DWORD PTR ds:0x42d008,ebx
  4036cd:	mov    eax,DWORD PTR [ebp+0xc]
  4036d0:	or     DWORD PTR ds:0x42d01c,0x42a01c
  4036da:	xor    eax,esi
  4036dc:	xor    DWORD PTR ds:0x429000,0x42c018
  4036e6:	add    eax,edi
  4036e8:	xor    DWORD PTR ds:0x42a008,0x7741
  4036f2:	push   eax
  4036f3:	xor    eax,eax
  4036f5:	or     eax,DWORD PTR ds:0x42901c
  4036fb:	adc    DWORD PTR ds:0x42a00c,eax
  403701:	mov    eax,ds:0x42f38b
  403706:	push   0x42f2e1
  40370b:	add    DWORD PTR ds:0x429004,0x6a27
  403715:	push   DWORD PTR [eax]
  403717:	sub    DWORD PTR ds:0x429004,0x42d008
  403721:	call   0x40cc14
  403726:	and    ecx,0x7055
  40372c:	mov    ebx,DWORD PTR [ebp-0x14]
  40372f:	mov    DWORD PTR ds:0x42b008,0x1f
  403739:	cmp    DWORD PTR ds:0x42b008,0x0
  403740:	je     0x403790
  403746:	cmp    DWORD PTR ds:0x42b008,0x10
  40374d:	jbe    0x403790
  403753:	jmp    0x403764
  403758:	push   DWORD PTR [ebp-0x18]
  40375b:	push   DWORD PTR [ebp-0xc]
  40375e:	call   DWORD PTR ds:0x43002b
  403764:	cmp    DWORD PTR ds:0x42b008,0x11
  40376b:	jne    0x40377e
  403771:	mov    ecx,DWORD PTR ds:0x42b008
  403777:	dec    ecx
  403778:	mov    DWORD PTR ds:0x42b008,ecx
  40377e:	mov    ecx,DWORD PTR ds:0x42b008
  403784:	dec    ecx
  403785:	mov    DWORD PTR ds:0x42b008,ecx
  40378b:	jmp    0x403739
  403790:	mov    eax,DWORD PTR [ebp-0x18]
  403793:	mov    DWORD PTR [ebp-0x58],eax
  403796:	mov    DWORD PTR [ebp-0x34],0xf89c8533
  40379d:	mov    ecx,0xf89c85b1
  4037a2:	mov    edx,DWORD PTR ds:0x424a72
  4037a8:	mov    edx,DWORD PTR [edx]
  4037aa:	sbb    DWORD PTR ds:0x42c00c,edx
  4037b0:	mov    DWORD PTR [ebp-0x1c],ecx
  4037b3:	lea    eax,[ecx-0x1]
  4037b6:	or     DWORD PTR ds:0x42d014,ebx
  4037bc:	mov    DWORD PTR [ebp-0x28],eax
  4037bf:	movzx  edx,WORD PTR ds:0x42a000
  4037c6:	sub    DWORD PTR ds:0x42b018,edx
  4037cc:	mov    DWORD PTR [ebp-0x10],ecx
  4037cf:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  4037d6:	add    DWORD PTR ds:0x42c014,0x7fdd
  4037e0:	mov    ecx,DWORD PTR [ebp-0x10]
  4037e3:	xor    ecx,esi
  4037e5:	mov    edx,0xffcd8d94
  4037ea:	sub    edx,ecx
  4037ec:	mov    ecx,0x1367
  4037f1:	mov    DWORD PTR [ebp-0xc],edx
  4037f4:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  4037fb:	mov    ecx,DWORD PTR [ebp-0x8]
  4037fe:	mov    DWORD PTR [ebp-0x3c],ebx
  403801:	cmp    ecx,eax
  403803:	je     0x405f34
  403809:	mov    eax,DWORD PTR [ebp-0x10]
  40380c:	xor    DWORD PTR ds:0x42901c,edi
  403812:	mov    ecx,DWORD PTR [ebp-0x10]
  403815:	xor    eax,esi
  403817:	add    DWORD PTR ds:0x42b014,0x42901c
  403821:	xor    ecx,esi
  403823:	add    DWORD PTR ds:0x429000,0x42c010
  40382d:	lea    ecx,[eax+ecx*1+0x64e5d8]
  403834:	mov    eax,DWORD PTR [ebp-0xc]
  403837:	dec    DWORD PTR ds:0x42c004
  40383d:	xor    edx,edx
  40383f:	sub    DWORD PTR ds:0x429008,0x6755
  403849:	div    ecx
  40384b:	dec    ecx
  40384c:	mov    eax,DWORD PTR [ebp-0x8]
  40384f:	add    DWORD PTR ds:0x429018,ecx
  403855:	mov    ecx,DWORD PTR [ebp-0x10]
  403858:	xor    eax,esi
  40385a:	adc    DWORD PTR ds:0x42d000,0x42a010
  403864:	xor    ecx,esi
  403866:	add    DWORD PTR ds:0x42900c,0x1115
  403870:	sub    eax,ecx
  403872:	mov    DWORD PTR ds:0x429020,0x13e
  40387c:	cmp    edx,eax
  40387e:	jne    0x405e79
  403884:	add    DWORD PTR ds:0x42b000,0x4efc
  40388e:	mov    eax,DWORD PTR [ebp-0xc]
  403891:	and    DWORD PTR ds:0x42b004,0x0
  40389b:	mov    ecx,DWORD PTR ds:0x42b004
  4038a1:	inc    ecx
  4038a2:	mov    DWORD PTR ds:0x42b004,ecx
  4038a8:	cmp    DWORD PTR ds:0x42b004,0x8
  4038af:	jle    0x4038f6
  4038b5:	jmp    0x4038cf
  4038ba:	push   0x1152
  4038bf:	push   0x42c014
  4038c4:	push   0x42f035
  4038c9:	call   DWORD PTR ds:0x430033
  4038cf:	cmp    DWORD PTR ds:0x42b004,0x7
  4038d6:	jne    0x4038e9
  4038dc:	mov    ecx,DWORD PTR ds:0x42b004
  4038e2:	inc    ecx
  4038e3:	mov    DWORD PTR ds:0x42b004,ecx
  4038e9:	cmp    DWORD PTR ds:0x42b004,0x16
  4038f0:	jb     0x40389b
  4038f6:	mov    dl,BYTE PTR [eax+ebx*1+0x800]
  4038fd:	movzx  eax,WORD PTR ds:0x42a010
  403904:	adc    eax,DWORD PTR ds:0x42a000
  40390a:	mov    ds:0x42a010,eax
  40390f:	mov    eax,DWORD PTR [ebp-0x28]
  403912:	mov    DWORD PTR ds:0x42a01c,0x1c
  40391c:	cmp    DWORD PTR ds:0x42a01c,0x0
  403923:	je     0x403973
  403929:	cmp    DWORD PTR ds:0x42a01c,0xa
  403930:	jg     0x403973
  403936:	jmp    0x403947
  40393b:	push   DWORD PTR [ebp-0x18]
  40393e:	push   DWORD PTR [ebp-0x24]
  403941:	call   DWORD PTR ds:0x430037
  403947:	cmp    DWORD PTR ds:0x42a01c,0xb
  40394e:	jne    0x403961
  403954:	mov    ecx,DWORD PTR ds:0x42a01c
  40395a:	dec    ecx
  40395b:	mov    DWORD PTR ds:0x42a01c,ecx
  403961:	mov    ecx,DWORD PTR ds:0x42a01c
  403967:	dec    ecx
  403968:	mov    DWORD PTR ds:0x42a01c,ecx
  40396e:	jmp    0x40391c
  403973:	mov    ecx,DWORD PTR [ebp-0x18]
  403976:	xor    eax,esi
  403978:	xor    ecx,esi
  40397a:	add    eax,edi
  40397c:	sbb    DWORD PTR ds:0x42b018,0x7aac
  403986:	add    ecx,edi
  403988:	mov    BYTE PTR [ebp-0x21],dl
  40398b:	cmp    eax,ecx
  40398d:	jae    0x405e2d
  403993:	and    edx,DWORD PTR ds:0x42b010
  403999:	lea    ecx,[eax-0x3272ec]
  40399f:	xor    edx,0x10ed
  4039a5:	jmp    0x405d01
  4039aa:	sub    DWORD PTR [esi+0x66],ebp
  4039ad:	std    
  4039ae:	sbb    ebp,esi
  4039b0:	cdq    
  4039b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4039b2:	cld    
  4039b3:	ss scas al,BYTE PTR es:[edi]
  4039b5:	sub    eax,DWORD PTR [esi+0x3b39d403]
  4039bb:	pop    edi
  4039bc:	jp     0x403a38
  4039be:	cmp    ebx,DWORD PTR [edi+0x7a]
  4039c1:	jp     0x40399d
  4039c3:	fisub  DWORD PTR [esi-0x71bf7013]
  4039c9:	sbb    DWORD PTR [esp+esi*4-0x3b69cc8d],esi
  4039d0:	arpl   WORD PTR [eax],bx
  4039d2:	int3   
  4039d3:	mov    al,0x93
  4039d5:	or     ecx,eax
  4039d7:	jns    0x403a51
  4039d9:	lea    esp,[ecx+0x7e]
  4039dc:	and    al,BYTE PTR [ebp+ebp*8-0x4]
  4039e0:	gs cmc 
  4039e2:	fisttp QWORD PTR [ecx+0x11]
  4039e5:	shl    BYTE PTR [esi-0x7d],cl
  4039e8:	in     al,dx
  4039e9:	mov    gs,ebx
  4039eb:	mov    fs,WORD PTR [esp+ecx*2+0xceca9a3]
  4039f2:	xchg   edx,eax
  4039f3:	inc    esi
  4039f4:	sbb    DWORD PTR ds:0xd0085df3,esi
  4039fa:	inc    esi
  4039fb:	out    dx,eax
  4039fc:	dec    eax
  4039fd:	add    dh,BYTE PTR [eax-0x14]
  403a00:	ss sbb eax,0xcb0862e5
  403a06:	push   es
  403a07:	sbb    ecx,DWORD PTR [eax-0x6e]
  403a0a:	pop    edx
  403a0b:	fmul   st(4),st
  403a0d:	loopne 0x4039f3
  403a0f:	cli    
  403a10:	add    BYTE PTR [ecx+0x47a92961],cl
  403a16:	xor    eax,0x1351154e
  403a1b:	cmp    eax,0xbd5c00a2
  403a20:	pop    esi
  403a21:	pop    ds
  403a22:	mov    dl,0xbc
  403a24:	scas   eax,DWORD PTR es:[edi]
  403a25:	ret    
  403a26:	jmp    0xf600:0xb79ef47b
  403a2d:	or     BYTE PTR [ecx],dh
  403a2f:	shl    BYTE PTR [ecx-0x19],cl
  403a32:	js     0x403a10
  403a34:	rcr    DWORD PTR [ecx],1
  403a36:	shr    BYTE PTR [eax-0x32],0xc7
  403a3a:	mov    edx,0xb1e9385e
  403a3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a40:	pop    esp
  403a41:	mov    dh,0x39
  403a43:	jle    0x403aa6
  403a45:	retf   
  403a46:	xor    eax,0x5b4bb6c9
  403a4b:	mov    eax,ds:0xc54cd21b
  403a50:	test   DWORD PTR [eax],esi
  403a52:	add    bh,BYTE PTR [eax+0x1]
  403a55:	mov    ?,esi
  403a57:	cdq    
  403a58:	sbb    eax,0x9481b3f1
  403a5d:	pop    ecx
  403a5e:	mov    DWORD PTR [eax],edi
  403a60:	ret    0xa6ce
  403a63:	cdq    
  403a64:	xchg   ebx,eax
  403a65:	rol    BYTE PTR [ebp-0x40],cl
  403a68:	pop    esi
  403a69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403a6a:	loope  0x4039fc
  403a6c:	push   ebx
  403a6d:	arpl   dx,sp
  403a6f:	jo     0x403a09
  403a71:	cmp    BYTE PTR es:[ecx+0x1c8b7697],ah
  403a78:	outs   dx,BYTE PTR ds:[esi]
  403a79:	mov    ah,0x4
  403a7b:	rcr    DWORD PTR [ebp+0x2c],1
  403a7e:	adc    DWORD PTR [esi],edx
  403a80:	adc    edi,ebx
  403a82:	inc    edx
  403a83:	sbb    ah,BYTE PTR ds:0x73722508
  403a89:	ret    0xfbbe
  403a8c:	cmc    
  403a8d:	mov    ecx,0xf92e320f
  403a92:	mov    cl,BYTE PTR [esi]
  403a94:	std    
  403a95:	call   ebp
  403a97:	shr    BYTE PTR [esi+esi*1-0x2a],0xa5
  403a9c:	dec    eax
  403a9d:	gs call 0x88c499eb
  403aa3:	rol    BYTE PTR [edi+0x21ba1670],0x4
  403aaa:	mov    ebp,0x66e9a93c
  403aaf:	sbb    ebp,DWORD PTR [ecx+0x6a]
  403ab2:	pop    esi
  403ab3:	sbb    eax,0xc3b2b7c2
  403ab8:	xchg   BYTE PTR [ebp-0x5a3bf71f],dh
  403abe:	push   edi
  403abf:	pop    ebx
  403ac0:	or     ah,dl
  403ac2:	ja     0x403a8b
  403ac4:	aaa    
  403ac5:	sub    DWORD PTR [ecx-0x5823d005],ecx
  403acb:	ins    DWORD PTR es:[edi],dx
  403acc:	fldcw  WORD PTR [ecx-0x42828220]
  403ad2:	sub    BYTE PTR [eax],al
  403ad4:	pop    edx
  403ad5:	mov    eax,ds:0xf52b05e0
  403ada:	xchg   ecx,eax
  403adb:	mov    ebx,0x600a0ffa
  403ae0:	(bad)  
  403ae1:	ficomp WORD PTR [esp+ebp*4+0x11]
  403ae5:	ja     0x403b64
  403ae7:	push   edi
  403ae8:	xor    eax,0x7f63336b
  403aed:	int3   
  403aee:	bound  ebx,QWORD PTR [ebp-0x5d]
  403af1:	push   ds
  403af2:	ds mov bl,0xab
  403af5:	adc    esi,edx
  403af7:	jo     0x403b05
  403af9:	mov    al,0x84
  403afb:	ror    DWORD PTR [ebx+0x71],1
  403afe:	mov    DWORD PTR [ecx-0x1d69cc0a],ebx
  403b04:	test   al,0xeb
  403b06:	push   0x22
  403b08:	sbb    ecx,DWORD PTR [eax-0x5bde6787]
  403b0e:	lahf   
  403b0f:	add    al,0x25
  403b11:	enter  0xf8f1,0xb2
  403b15:	rol    BYTE PTR [ebx+edi*8+0x37cea16b],1
  403b1c:	mov    BYTE PTR [edx+0x5f],0xe5
  403b20:	leave  
  403b21:	fnsave [eax]
  403b23:	fist   WORD PTR [esi]
  403b25:	(bad)  
  403b26:	cmp    BYTE PTR ds:0xfb352903,ah
  403b2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b2d:	and    ebp,DWORD PTR [ecx]
  403b2f:	jl     0x403ae8
  403b31:	loopne 0x403add
  403b33:	cwde   
  403b34:	cmp    al,0xf
  403b36:	and    BYTE PTR [edx-0x53],bl
  403b39:	fdiv   st(6),st
  403b3b:	ds inc esi
  403b3d:	adc    eax,0x63dcd445
  403b42:	in     al,0xbb
  403b44:	dec    edi
  403b45:	int3   
  403b46:	outs   dx,DWORD PTR ds:[esi]
  403b47:	outs   dx,DWORD PTR ds:[esi]
  403b48:	xchg   ecx,eax
  403b49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b4a:	cmc    
  403b4b:	gs out dx,eax
  403b4d:	nop
  403b4e:	lods   eax,DWORD PTR ds:[esi]
  403b4f:	push   es
  403b50:	adc    bh,ch
  403b52:	push   ecx
  403b53:	push   ecx
  403b54:	cmp    al,0x7f
  403b56:	rcr    BYTE PTR [ebx-0xa],0xc3
  403b5a:	out    0xf7,al
  403b5c:	imul   esi,DWORD PTR [edx-0x6cdf06a6],0x63
  403b63:	jnp    0x403b0e
  403b65:	cmp    ebp,DWORD PTR [eax]
  403b67:	sub    DWORD PTR [edx-0x37],ebx
  403b6a:	fist   WORD PTR [ebx-0x57]
  403b6d:	cmp    eax,0xa0081c9e
  403b72:	out    dx,al
  403b73:	mov    ds:0x253494f8,al
  403b78:	cmp    ecx,esp
  403b7a:	cli    
  403b7b:	add    eax,ecx
  403b7d:	sbb    dl,cl
  403b7f:	mov    edx,0x21941ceb
  403b84:	fldcw  WORD PTR [eax-0x66a3b396]
  403b8a:	retf   
  403b8b:	jno    0x403b1c
  403b8d:	aaa    
  403b8e:	rcr    DWORD PTR [ebx-0x33d17c35],cl
  403b94:	sub    BYTE PTR [ebx-0x65],ah
  403b97:	aad    0x9f
  403b99:	outs   dx,BYTE PTR ds:[esi]
  403b9a:	push   0x6fbfd9e9
  403b9f:	pop    es
  403ba0:	sbb    eax,edx
  403ba2:	or     BYTE PTR ds:0xb4047193,dh
  403ba8:	sahf   
  403ba9:	xor    al,0x65
  403bab:	jmp    0x73e9:0x337e0039
  403bb2:	push   DWORD PTR [esp+eiz*2+0x46]
  403bb6:	adc    esi,ebx
  403bb8:	sub    esi,DWORD PTR [eax]
  403bba:	dec    ecx
  403bbb:	adc    cl,BYTE PTR [di]
  403bbe:	sub    ch,BYTE PTR [edx+0x4b]
  403bc1:	enter  0x529c,0x8a
  403bc5:	fs pop es
  403bc7:	jmp    0x403c2c
  403bc9:	sbb    eax,0xc65e9ea1
  403bce:	push   cs
  403bcf:	cld    
  403bd0:	push   edi
  403bd1:	mov    esi,0xfb210fb2
  403bd6:	sbb    dl,BYTE PTR [esi-0x7f439b64]
  403bdc:	rol    DWORD PTR [ebp+0x2abc3162],0x2b
  403be3:	adc    bl,BYTE PTR [esi]
  403be5:	or     cl,BYTE PTR [ecx+0x5d]
  403be8:	sub    al,0x28
  403bea:	push   ebx
  403beb:	push   esi
  403bec:	push   esp
  403bed:	push   ecx
  403bee:	mov    WORD PTR [edi+edi*8],?
  403bf1:	pop    ecx
  403bf2:	out    dx,eax
  403bf3:	pop    edx
  403bf4:	sbb    dl,dl
  403bf6:	cmp    eax,0x2fb3465e
  403bfb:	jb     0x403c6a
  403bfd:	(bad)  [ebp+0x49]
  403c00:	adc    al,BYTE PTR [ecx]
  403c02:	sub    ebx,DWORD PTR [ebp+0xd]
  403c05:	int    0x10
  403c07:	out    0x3a,al
  403c09:	sbb    al,0x72
  403c0b:	inc    ecx
  403c0c:	cli    
  403c0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c0e:	jmp    0xe796680b
  403c13:	ret    0xb8a2
  403c16:	xchg   ebx,eax
  403c17:	or     eax,0xc21cad83
  403c1c:	or     bh,BYTE PTR [ebp+0x47]
  403c1f:	jne    0x403c84
  403c21:	adc    al,0x1a
  403c23:	xchg   DWORD PTR [edx-0x441e8c48],edx
  403c29:	(bad)  
  403c2b:	pop    ebp
  403c2c:	inc    edx
  403c2d:	inc    eax
  403c2e:	pop    eax
  403c2f:	adc    esi,edi
  403c31:	les    esp,FWORD PTR [esi-0x28]
  403c34:	in     eax,0xf6
  403c36:	enter  0x5ce5,0x2f
  403c3a:	sbb    esi,DWORD PTR [esi+0x4f]
  403c3d:	int3   
  403c3e:	sub    eax,0x12d5e5ca
  403c43:	adc    esp,DWORD PTR [ecx+0x2ce9823c]
  403c49:	xor    dh,bh
  403c4b:	aas    
  403c4c:	jo     0x403c5e
  403c4e:	repz dec ebp
  403c50:	sub    BYTE PTR [edx+0x14d81584],cl
  403c56:	or     eax,0x66dd3b6f
  403c5b:	push   esi
  403c5c:	fcomp  QWORD PTR [edi+ecx*2+0x5509f1e7]
  403c63:	mov    dl,0x8d
  403c65:	adc    esp,DWORD PTR [esi-0x3b]
  403c68:	jae    0x403c74
  403c6a:	(bad)  
  403c6b:	xchg   BYTE PTR [edi],bh
  403c6d:	les    eax,FWORD PTR [esp+eiz*4]
  403c70:	xchg   DWORD PTR [esi+0x1aba21df],eax
  403c76:	fsubrp st(3),st
  403c78:	retf   
  403c79:	fmul   QWORD PTR [edx]
  403c7b:	(bad)  
  403c7c:	leave  
  403c7d:	cmp    BYTE PTR [ecx+0xf],cl
  403c80:	aaa    
  403c81:	cmp    BYTE PTR [edx-0x6005d7cf],dl
  403c87:	xor    esi,DWORD PTR [edx]
  403c89:	pushf  
  403c8a:	cld    
  403c8b:	cmp    DWORD PTR [edx-0x78],eax
  403c8e:	dec    eax
  403c8f:	(bad)  
  403c90:	(bad)  
  403c91:	adc    dh,ch
  403c93:	pop    ds
  403c94:	sbb    bh,BYTE PTR [edx-0x20]
  403c97:	sub    ecx,esi
  403c99:	enter  0xa9a7,0x85
  403c9d:	adc    DWORD PTR [edi+0x11864ea2],ebp
  403ca3:	mov    eax,0xd45f6b79
  403ca8:	or     dl,BYTE PTR [esi-0x33]
  403cab:	sar    DWORD PTR [edi],cl
  403cad:	popf   
  403cae:	fs jns 0x403cb0
  403cb1:	loop   0x403c62
  403cb3:	mov    bh,0x2d
  403cb5:	int    0x57
  403cb7:	xchg   esp,eax
  403cb8:	adc    edx,DWORD PTR [esp+esi*1]
  403cbb:	or     DWORD PTR [ebp+0x1d68369],ecx
  403cc1:	pushf  
  403cc2:	fucomp st(5)
  403cc4:	fsubr  QWORD PTR [esi-0x6b6dec21]
  403cca:	mov    ch,0xcf
  403ccc:	dec    ecx
  403ccd:	jp     0x403d1a
  403ccf:	add    al,0xfd
  403cd1:	cmp    eax,0x163d5de2
  403cd6:	sbb    DWORD PTR [ecx+0x25],ecx
  403cd9:	push   edx
  403cda:	in     eax,dx
  403cdb:	aas    
  403cdc:	ja     0x403c82
  403cde:	rcr    BYTE PTR [edx-0x5d],cl
  403ce1:	jno    0x403c82
  403ce3:	or     al,0xfe
  403ce5:	cld    
  403ce6:	or     dh,bh
  403ce8:	push   ecx
  403ce9:	dec    edi
  403cea:	cmp    eax,0x4ec1b514
  403cef:	mov    bh,0xa2
  403cf1:	iret   
  403cf2:	enter  0xf432,0x46
  403cf6:	xchg   edx,eax
  403cf7:	pop    ss
  403cf8:	sub    eax,0x5f54f0dc
  403cfd:	es pop esi
  403cff:	mov    ebx,0x9f067897
  403d04:	xchg   BYTE PTR [esi+ecx*8],ch
  403d07:	clc    
  403d08:	xchg   ch,al
  403d0a:	sar    DWORD PTR [edi+0x6dee5534],1
  403d10:	sub    DWORD PTR [eax],esp
  403d12:	jo     0x403d80
  403d14:	int    0xd9
  403d16:	pop    esp
  403d17:	push   edi
  403d18:	(bad)  
  403d19:	jmp    0xcfc3:0x2dae7366
  403d20:	fnstsw WORD PTR [edi-0x4aa398f4]
  403d26:	push   ebp
  403d27:	lea    ebp,[esi]
  403d29:	cs mov edx,0xe88f4aff
  403d2f:	js     0x403d90
  403d31:	jns    0x403d61
  403d33:	mov    esp,0xb22d0411
  403d38:	jnp    0x403d68
  403d3a:	(bad)  
  403d3b:	and    eax,0xe2665
  403d40:	jp     0x403d6e
  403d42:	ja     0x403d44
  403d44:	icebp  
  403d45:	mov    ebp,0x5a802186
  403d4a:	jnp    0x403cd4
  403d4c:	arpl   WORD PTR [eax-0x7588b5b1],di
  403d52:	(bad)  
  403d53:	fidivr WORD PTR [ecx+0x5cc8ac54]
  403d59:	sbb    ecx,DWORD PTR [ebp-0x4df0cd09]
  403d5f:	mov    ah,0x86
  403d61:	(bad)  
  403d62:	jg     0x403da5
  403d64:	loope  0x403dcb
  403d66:	out    dx,al
  403d67:	mov    bh,0x8a
  403d69:	xor    al,0xd7
  403d6b:	or     edx,edi
  403d6d:	xchg   ebx,eax
  403d6e:	pop    ebx
  403d6f:	sub    ah,BYTE PTR [esi]
  403d71:	cmc    
  403d72:	sub    ebp,DWORD PTR [edx+0x62]
  403d75:	mul    bl
  403d77:	(bad)  
  403d78:	mov    esp,0x6af5da69
  403d7d:	mov    DWORD PTR [edi+esi*2],edi
  403d80:	mov    edi,0x7d915064
  403d85:	imul   ecx,ebp,0x50
  403d88:	pop    edx
  403d89:	aas    
  403d8a:	jns    0x403df9
  403d8c:	adc    cl,BYTE PTR [edx]
  403d8e:	lds    ecx,FWORD PTR [edi+0x3430233f]
  403d94:	aas    
  403d95:	dec    ebp
  403d96:	xor    esi,DWORD PTR [edx*4-0x223ea4b5]
  403d9d:	xchg   DWORD PTR [edi+edi*2-0xf],edx
  403da1:	enter  0xe373,0x5b
  403da5:	mov    bl,0xa
  403da7:	mov    ds:0x897de96b,al
  403dac:	(bad)  
  403dae:	test   BYTE PTR [ebp+0x57],dl
  403db1:	in     al,0xda
  403db3:	leave  
  403db4:	fcom   DWORD PTR [edx+eiz*4-0x24]
  403db8:	add    eax,0x3d890b2b
  403dbd:	cli    
  403dbe:	stos   BYTE PTR es:[edi],al
  403dbf:	dec    esi
  403dc0:	push   ecx
  403dc1:	cmc    
  403dc2:	mov    BYTE PTR [ebx-0x12],al
  403dc5:	pop    ebx
  403dc6:	dec    ebp
  403dc7:	and    eax,0x9f815043
  403dcc:	inc    ebp
  403dcd:	nop
  403dce:	cdq    
  403dcf:	adc    edi,DWORD PTR [esi+0x25]
  403dd2:	not    DWORD PTR [eax-0x67]
  403dd5:	shl    BYTE PTR [edx+0x5dfee028],1
  403ddb:	adc    bh,al
  403ddd:	fldenv [ecx]
  403ddf:	dec    esi
  403de0:	sbb    DWORD PTR [esi+0x7f],esi
  403de3:	cmp    dl,BYTE PTR fs:[ebx-0x41dadb1a]
  403dea:	pop    ecx
  403deb:	pop    ebx
  403dec:	psadbw mm6,QWORD PTR [ecx]
  403def:	fsub   QWORD PTR [edi+0x68a884a3]
  403df5:	bound  ecx,QWORD PTR [esp+ebp*8-0xf176c6d]
  403dfc:	xor    BYTE PTR [eax+0x66],dl
  403dff:	rcl    esi,0xde
  403e02:	xor    eax,0xb6acb6f9
  403e07:	mov    ds:0x44ee1f9b,al
  403e0c:	out    dx,al
  403e0d:	jne    0x403e3a
  403e0f:	sbb    BYTE PTR [ebp-0x67e0a9c5],cl
  403e15:	fnsave [edi+eiz*1+0x27679077]
  403e1c:	mov    ds:0xf9bd47c0,al
  403e21:	je     0x403e06
  403e23:	xchg   esi,eax
  403e24:	lds    eax,FWORD PTR [ecx-0x502a5993]
  403e2a:	sbb    ch,BYTE PTR [edx+edi*1+0x8]
  403e2e:	inc    esp
  403e2f:	and    BYTE PTR [ebx+0x77],dh
  403e32:	mov    ch,0x0
  403e34:	(bad)  
  403e35:	(bad)  
  403e36:	nop
  403e37:	scas   eax,DWORD PTR es:[edi]
  403e38:	mov    esp,0x5dbe2768
  403e3d:	and    al,0x74
  403e3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e40:	cmp    eax,0x119c2fea
  403e45:	pop    edx
  403e46:	clc    
  403e47:	out    dx,al
  403e48:	icebp  
  403e49:	cmc    
  403e4a:	into   
  403e4b:	test   bl,0xce
  403e4e:	dec    edi
  403e4f:	retf   0xcdaf
  403e52:	push   ss
  403e53:	jnp    0x403e47
  403e55:	scas   eax,DWORD PTR es:[edi]
  403e56:	das    
  403e57:	cmp    dh,dl
  403e59:	sbb    eax,0x7a2715b7
  403e5e:	push   ds
  403e5f:	aad    0xfd
  403e61:	jb     0x403e47
  403e63:	mov    dl,0x2f
  403e65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e66:	and    al,0x6e
  403e68:	retf   
  403e69:	push   esi
  403e6a:	inc    ebp
  403e6b:	jg     0x403e2a
  403e6d:	mov    esp,0xfad230f8
  403e72:	mov    ds:0x315e99db,eax
  403e77:	sbb    bl,BYTE PTR [ebx-0x304b8bc2]
  403e7d:	xchg   edi,eax
  403e7e:	or     al,0x88
  403e80:	nop
  403e81:	or     ebx,DWORD PTR [eax]
  403e83:	cmp    dl,0x39
  403e86:	or     eax,0xe11910d7
  403e8b:	pusha  
  403e8c:	xor    DWORD PTR [edi+0x402f263c],ebp
  403e92:	mul    ecx
  403e94:	adc    BYTE PTR [ebx],bl
  403e96:	sbb    eax,DWORD PTR [esp+edx*1]
  403e99:	xchg   DWORD PTR ds:0xbb07e140,edx
  403e9f:	sti    
  403ea0:	cmp    al,0x13
  403ea2:	mov    bl,0xdc
  403ea4:	es cwde 
  403ea6:	sbb    DWORD PTR [edx+0x7c2949fb],ebp
  403eac:	jmp    0xa4c36780
  403eb1:	or     ah,BYTE PTR [ebx-0x5b]
  403eb4:	(bad)  
  403eb5:	shl    DWORD PTR [esi-0x1a],1
  403eb8:	xchg   BYTE PTR [edx],dl
  403eba:	nop
  403ebb:	push   ecx
  403ebc:	loop   0x403e7e
  403ebe:	loop   0x403e6e
  403ec0:	das    
  403ec1:	xchg   ebp,eax
  403ec2:	jmp    0xbe3d1f54
  403ec7:	jb     0x403efa
  403ec9:	imul   eax,edx,0xb7369b02
  403ecf:	pusha  
  403ed0:	inc    ebp
  403ed1:	push   ecx
  403ed2:	pop    esi
  403ed3:	pushf  
  403ed4:	ret    
  403ed5:	jecxz  0x403ef2
  403ed7:	retf   
  403ed8:	jne    0x403ea5
  403eda:	fcom   DWORD PTR [edx]
  403edc:	jecxz  0x403ee5
  403ede:	imul   esi,DWORD PTR [ebx],0x9f2b60d0
  403ee4:	enter  0xd419,0xd5
  403ee8:	pop    ds
  403ee9:	dec    esi
  403eea:	push   edi
  403eeb:	inc    edi
  403eec:	jecxz  0x403f52
  403eee:	push   eax
  403eef:	shl    dh,cl
  403ef1:	add    BYTE PTR [eax+eax*1],ah
  403ef4:	cmp    BYTE PTR [esi-0x73],dl
  403ef7:	mov    ch,0xfb
  403ef9:	in     eax,0xbd
  403efb:	mov    eax,ds:0x82e8539
  403f00:	mov    dl,0x0
  403f02:	sbb    eax,0x70d94b59
  403f07:	jle    0x403f37
  403f09:	call   0xb2eec851
  403f0e:	xor    BYTE PTR [eax],ch
  403f10:	mov    ah,BYTE PTR [edi+0x2d2d0f98]
  403f16:	(bad)  
  403f17:	or     DWORD PTR [ebx],eax
  403f19:	cmp    eax,0x89f50e16
  403f1e:	call   0x84a3:0xb87b4e50
  403f25:	retf   0x305d
  403f28:	sbb    al,0xa0
  403f2a:	(bad)  
  403f2b:	leave  
  403f2c:	mov    bl,0x94
  403f2e:	mov    bh,0x27
  403f30:	mov    eax,0xaf8d2411
  403f35:	adc    al,0x12
  403f37:	xchg   ecx,eax
  403f38:	fstp   DWORD PTR [ebp+0x75]
  403f3b:	mov    ah,0xd0
  403f3d:	add    ecx,esi
  403f3f:	ss sub ch,0xff
  403f43:	lahf   
  403f44:	ins    BYTE PTR es:[edi],dx
  403f45:	inc    ebx
  403f46:	xchg   edi,eax
  403f47:	cs pop edx
  403f49:	mov    ecx,0x101407d4
  403f4e:	cld    
  403f4f:	cld    
  403f50:	mov    esi,0xa6f60e89
  403f55:	sbb    BYTE PTR [ecx-0x7d],0x52
  403f59:	mov    bl,0xc6
  403f5b:	jmp    0x19e:0x610f81d6
  403f62:	pop    edx
  403f63:	sbb    DWORD PTR [ecx+ecx*8-0x634b89ba],esi
  403f6a:	stc    
  403f6b:	in     eax,0xf9
  403f6d:	test   DWORD PTR [ebx],esp
  403f6f:	outs   dx,BYTE PTR ds:[esi]
  403f70:	adc    al,0x2e
  403f72:	dec    esp
  403f73:	in     al,dx
  403f74:	cmp    DWORD PTR [esi],esi
  403f76:	mov    esp,0xb3f254f0
  403f7b:	lods   al,BYTE PTR ds:[esi]
  403f7c:	call   0x9e9b07e2
  403f81:	push   esp
  403f82:	or     ah,BYTE PTR [ebp+0x16]
  403f85:	jne    0x403fad
  403f87:	int    0xd6
  403f89:	mov    ebp,0xb3167b2a
  403f8e:	jbe    0x403f24
  403f90:	mov    esp,0xd3a7ecee
  403f95:	hlt    
  403f96:	(bad)  [eax-0x4504bc62]
  403f9c:	out    0x5d,al
  403f9e:	jne    0x403fbd
  403fa0:	ret    
  403fa1:	xchg   edx,eax
  403fa2:	mov    ebx,0x4b615d2a
  403fa7:	cmp    ebp,DWORD PTR [edi]
  403fa9:	loop   0x403f7e
  403fab:	les    ebx,FWORD PTR [esi-0x518be705]
  403fb1:	push   ebx
  403fb2:	xor    edi,esi
  403fb4:	stos   BYTE PTR es:[edi],al
  403fb5:	out    0x33,al
  403fb7:	addr16 fwait
  403fb9:	popa   
  403fba:	test   eax,0x4d5ee325
  403fc0:	pop    edx
  403fc1:	fwait
  403fc2:	xor    DWORD PTR [ecx-0x61],edi
  403fc5:	mov    ds:0xc979900b,al
  403fca:	dec    edx
  403fcb:	adc    BYTE PTR [edx+edi*2],bl
  403fce:	lea    ebp,[esi]
  403fd0:	ja     0x403f87
  403fd2:	ja     0x403ff2
  403fd4:	pop    esi
  403fd5:	nop
  403fd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403fd7:	fs xchg edx,eax
  403fd9:	or     eax,0x83decfe0
  403fde:	xchg   ebp,eax
  403fdf:	xchg   ebx,eax
  403fe0:	jno    0x403fdc
  403fe2:	mov    al,ds:0x67c833e7
  403fe7:	xor    DWORD PTR [esi],ebx
  403fe9:	rcl    DWORD PTR [eax-0x2fd7e78b],cl
  403fef:	add    BYTE PTR [ebx-0x33e79e7e],ah
  403ff5:	jb     0x40406d
  403ff7:	scas   al,BYTE PTR es:[edi]
  403ff8:	pop    ebp
  403ff9:	mov    dl,BYTE PTR [eax+ecx*4-0x3c691e3d]
  404000:	out    0x0,eax
  404002:	jmp    0xf758:0xaab96296
  404009:	xchg   edi,eax
  40400a:	fbstp  TBYTE PTR [edx]
  40400c:	mov    ebp,ecx
  40400e:	xchg   ebp,eax
  40400f:	jae    0x40408f
  404011:	sub    ecx,DWORD PTR [edi]
  404013:	add    eax,DWORD PTR [ebx-0x72]
  404016:	sub    ah,BYTE PTR [edi+eiz*4+0x4bd3e782]
  40401d:	imul   esi,ebp,0xffffffb5
  404020:	(bad)  
  404021:	mov    BYTE PTR [eax+esi*2-0x66],ch
  404025:	or     ah,BYTE PTR [esi]
  404027:	popa   
  404028:	test   eax,0x4d0298ea
  40402d:	loope  0x403ffc
  40402f:	jns    0x403fc9
  404031:	inc    esp
  404032:	sbb    al,cl
  404034:	ret    0xe1b8
  404037:	out    dx,al
  404038:	inc    ebp
  404039:	loop   0x404045
  40403b:	dec    ecx
  40403c:	iret   
  40403d:	outs   dx,BYTE PTR ds:[esi]
  40403e:	sbb    al,0xcc
  404040:	adc    dl,BYTE PTR [ebp+esi*1+0x7]
  404044:	les    edi,FWORD PTR [ecx]
  404046:	inc    ebx
  404047:	test   DWORD PTR [edi+ebx*4-0xb],edi
  40404b:	jmp    0xe78627b6
  404050:	inc    esp
  404051:	repz out 0xbb,al
  404054:	pop    ebx
  404055:	and    DWORD PTR [esi],ecx
  404057:	jne    0x404017
  404059:	retf   0x6faf
  40405c:	scas   eax,DWORD PTR es:[edi]
  40405d:	pop    edi
  40405e:	test   eax,0xdd423915
  404063:	ss lahf 
  404065:	pop    edi
  404066:	aam    0xc7
  404068:	(bad)  
  404069:	jecxz  0x4040a1
  40406b:	stc    
  40406c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40406d:	les    ecx,FWORD PTR [esi+ebx*4-0x2c1ed304]
  404074:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  404076:	enter  0x9cc0,0xa8
  40407a:	imul   eax,DWORD PTR [edi],0xa
  40407d:	aad    0xf
  40407f:	das    
  404080:	(bad)
  404084:	add    esp,ecx
  404086:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404087:	js     0x40406f
  404089:	cwde   
  40408a:	lds    ebp,FWORD PTR [esi-0x3d1624e3]
  404090:	stc    
  404091:	pop    bx
  404093:	(bad)  
  404094:	cmp    eax,0x5919da14
  404099:	rol    BYTE PTR [esi],1
  40409b:	xchg   BYTE PTR [edi+0x2276558d],al
  4040a1:	pop    edi
  4040a2:	mov    ?,eax
  4040a4:	dec    DWORD PTR [esi]
  4040a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4040a7:	mov    ch,0x6a
  4040a9:	pop    esi
  4040aa:	mov    dl,0x8f
  4040ac:	xchg   esp,eax
  4040ad:	ret    0x177a
  4040b0:	adc    BYTE PTR [ebx+0x3b09c56e],al
  4040b6:	sbb    DWORD PTR [ebp+0x75],0xffffffd1
  4040ba:	out    dx,eax
  4040bb:	jns    0x404042
  4040bd:	in     al,dx
  4040be:	inc    edi
  4040bf:	jbe    0x4040a6
  4040c1:	xor    al,0x1e
  4040c3:	sbb    ah,BYTE PTR [eax+0x5ffdbc8d]
  4040c9:	(bad)  
  4040ca:	into   
  4040cb:	mov    edx,0x284f5089
  4040d0:	stos   DWORD PTR es:[di],eax
  4040d2:	jg     0x404121
  4040d4:	sbb    BYTE PTR [eax-0x28],cl
  4040d7:	xchg   DWORD PTR [edi+0x10],edi
  4040da:	jne    0x404083
  4040dc:	dec    edx
  4040dd:	push   edx
  4040de:	lds    esp,FWORD PTR [ebx+0x2a]
  4040e1:	ss aad 0x11
  4040e4:	scas   al,BYTE PTR es:[edi]
  4040e5:	xchg   ebx,eax
  4040e6:	and    DWORD PTR [ebx],ebx
  4040e8:	or     ch,0x16
  4040eb:	mov    bh,BYTE PTR [esi+0x7d]
  4040ee:	in     al,0xed
  4040f0:	cmp    esi,DWORD PTR [edi-0xe]
  4040f3:	mov    edi,0xd08aec15
  4040f8:	pop    ecx
  4040f9:	shl    DWORD PTR [ebx+0x3f],cl
  4040fc:	enter  0x51a,0xa8
  404100:	or     eax,0x23fe8912
  404105:	in     eax,0xab
  404107:	mov    ah,0x9e
  404109:	mov    ch,0xe9
  40410b:	repz leave 
  40410d:	sub    dl,BYTE PTR [esi+0x322d69c0]
  404113:	test   DWORD PTR [edx-0x1e362ca9],0x1285db14
  40411d:	iret   
  40411e:	mov    dh,BYTE PTR es:[ebp-0x34]
  404122:	(bad)
  404126:	cdq    
  404127:	adc    BYTE PTR [ebx],bh
  404129:	scas   al,BYTE PTR es:[edi]
  40412a:	mov    eax,0xd1591719
  40412f:	sti    
  404130:	stc    
  404131:	call   0x84420b7f
  404136:	out    dx,eax
  404137:	push   ebx
  404138:	mov    al,ds:0xde5cc2c2
  40413d:	dec    esi
  40413e:	aaa    
  40413f:	stos   DWORD PTR es:[edi],eax
  404140:	mov    cl,0x8e
  404142:	xor    eax,0x86053587
  404147:	ffree  st(5)
  404149:	daa    
  40414a:	stos   DWORD PTR es:[edi],eax
  40414b:	test   al,0xb8
  40414d:	push   ebx
  40414e:	jmp    0xa4a8df0e
  404153:	test   cl,ah
  404155:	retf   
  404156:	push   edi
  404157:	pop    ebp
  404158:	push   esp
  404159:	mov    dl,0xaa
  40415b:	jp     0x404103
  40415d:	call   0x463bd71d
  404162:	(bad)  
  404163:	imul   DWORD PTR [eax]
  404165:	hlt    
  404166:	inc    edi
  404167:	gs out 0x4d,al
  40416a:	add    ebp,DWORD PTR [ebp-0x7f]
  40416d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40416e:	fisub  DWORD PTR [esp+ebx*1+0x33f7a0b6]
  404175:	sahf   
  404176:	jl     0x40414b
  404178:	rcr    edi,0x3e
  40417b:	fstp   QWORD PTR [edx+0x62adf36a]
  404181:	retf   0xdb1f
  404184:	jp     0x4041f8
  404186:	jg     0x40419a
  404188:	int3   
  404189:	xchg   edx,eax
  40418a:	inc    ebp
  40418b:	dec    edx
  40418c:	ds sbb al,0x6e
  40418f:	js     0x404155
  404191:	push   0xbd349c48
  404196:	pop    ecx
  404197:	(bad)
  40419a:	mov    esp,0x651be4dd
  40419f:	mov    al,ds:0xf288e849
  4041a4:	mov    esp,0x6c968847
  4041a9:	mov    ah,0x46
  4041ab:	shr    BYTE PTR [ebp-0x69],1
  4041ae:	sbb    DWORD PTR [eax+0x3eb61c3b],eax
  4041b4:	mov    ebx,0x1025f23f
  4041b9:	xor    edi,DWORD PTR [esp+ebp*2+0x34a985c4]
  4041c0:	ins    DWORD PTR es:[edi],dx
  4041c1:	sub    al,0x25
  4041c3:	test   DWORD PTR [ebx+0x771047b2],ebp
  4041c9:	cmp    DWORD PTR [edi+0x60],eax
  4041cc:	jle    0x40416e
  4041ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041cf:	data16 fbld TBYTE PTR [eax]
  4041d2:	add    al,0xf2
  4041d4:	mov    edx,0x843a6744
  4041d9:	sti    
  4041da:	or     ecx,ebp
  4041dc:	icebp  
  4041dd:	push   eax
  4041de:	push   ss
  4041df:	loope  0x40418c
  4041e1:	je     0x404226
  4041e3:	add    ebx,eax
  4041e5:	imul   edx,DWORD PTR [edx],0x2d9f6ed2
  4041eb:	ins    DWORD PTR es:[edi],dx
  4041ec:	scas   al,BYTE PTR es:[edi]
  4041ed:	jle    0x4041da
  4041ef:	js     0x404220
  4041f1:	cmp    ebx,edi
  4041f3:	(bad)  
  4041f4:	in     al,dx
  4041f5:	stos   DWORD PTR es:[edi],eax
  4041f6:	pop    ebp
  4041f7:	in     al,0xd8
  4041f9:	push   ecx
  4041fa:	ss inc ebp
  4041fc:	std    
  4041fd:	in     eax,0x36
  4041ff:	out    0x8c,al
  404201:	leave  
  404202:	sbb    eax,0xdcf5953a
  404207:	mov    ds:0xe485a912,eax
  40420c:	dec    ebx
  40420d:	add    BYTE PTR [ebp+0x72c63335],dl
  404213:	mov    ecx,0x787abfa7
  404218:	inc    ebx
  404219:	jb     0x404291
  40421b:	or     eax,0xa2d0e396
  404220:	addr16 fwait
  404222:	mov    cl,0x78
  404224:	xchg   esi,esi
  404226:	out    0x1e,eax
  404228:	and    BYTE PTR [edi],dh
  40422a:	dec    ecx
  40422b:	in     eax,dx
  40422c:	pop    eax
  40422d:	pop    ss
  40422e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40422f:	and    ch,BYTE PTR [eax]
  404231:	and    ebx,DWORD PTR [eax-0x62fbc2b8]
  404237:	sub    al,0x72
  404239:	push   0x4f6cb4e4
  40423e:	mov    dl,0x5
  404240:	shr    BYTE PTR [edi],1
  404242:	dec    ecx
  404243:	das    
  404244:	out    0xbb,eax
  404246:	inc    edx
  404247:	call   0x96a5da2b
  40424c:	scas   eax,DWORD PTR es:[edi]
  40424d:	sub    dl,BYTE PTR [ecx-0x6aa2dfad]
  404253:	lahf   
  404254:	push   es
  404255:	out    dx,eax
  404256:	clc    
  404257:	add    esi,DWORD PTR [esi+edx*8-0x214c8881]
  40425e:	je     0x40423f
  404260:	fdivr  st(0),st
  404262:	leave  
  404263:	pop    edi
  404264:	rol    BYTE PTR [esi-0x479f951c],0xb6
  40426b:	je     0x404219
  40426d:	add    eax,0x31b93e5d
  404272:	aas    
  404273:	popf   
  404274:	scas   eax,DWORD PTR es:[edi]
  404275:	ror    dh,0x59
  404278:	mov    ebp,0xd043cbfa
  40427d:	sbb    al,BYTE PTR [edi-0x7e324927]
  404283:	rol    bl,0xe7
  404286:	mov    ah,0x14
  404288:	push   ecx
  404289:	lea    edi,[eax-0x4c62fc2]
  40428f:	imul   esi,ecx,0x75
  404292:	inc    ebx
  404293:	mov    ds:0x502257bc,al
  404298:	dec    ebx
  404299:	cld    
  40429a:	mov    cl,0x24
  40429c:	sahf   
  40429d:	inc    ecx
  40429e:	rol    DWORD PTR [ecx-0x77],0x3e
  4042a2:	cmp    bh,BYTE PTR [esi]
  4042a4:	cmp    BYTE PTR [edi],0xd1
  4042a7:	adc    al,BYTE PTR [ebx+esi*8-0x1d086556]
  4042ae:	fild   WORD PTR [edi]
  4042b0:	xchg   esp,eax
  4042b1:	pushf  
  4042b2:	push   esi
  4042b3:	rol    ch,cl
  4042b5:	ds dec edi
  4042b7:	pushf  
  4042b8:	jle    0x404321
  4042ba:	out    dx,eax
  4042bb:	pop    esi
  4042bc:	jle    0x4042b9
  4042be:	inc    ebx
  4042bf:	mov    ds:0xb55a5f78,eax
  4042c4:	cli    
  4042c5:	out    0xa8,al
  4042c7:	pop    ds
  4042c8:	mov    cl,0xe6
  4042ca:	mov    esp,0x3c39ee22
  4042cf:	jg     0x40432f
  4042d1:	dec    ebx
  4042d2:	pop    ds
  4042d3:	inc    esi
  4042d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4042d5:	dec    ebx
  4042d6:	nop
  4042d7:	mov    esi,DWORD PTR [esp+esi*4]
  4042da:	imul   ecx,DWORD PTR [edi+0x5387eea5],0xffffffb5
  4042e1:	dec    ecx
  4042e2:	jg     0x4042bb
  4042e4:	hlt    
  4042e5:	leave  
  4042e6:	cld    
  4042e7:	or     al,0x70
  4042e9:	add    eax,0x9868e3d2
  4042ee:	(bad)  
  4042ef:	fwait
  4042f0:	sub    eax,0x56adbb2b
  4042f5:	lds    eax,FWORD PTR [esi+0x5af6b9cb]
  4042fb:	fs retf 
  4042fd:	sbb    ecx,ecx
  4042ff:	push   cs
  404300:	or     BYTE PTR [ecx-0x2b9b2f34],0x7e
  404307:	xor    ah,BYTE PTR [ecx+0x716d4bd1]
  40430d:	cli    
  40430e:	iret   
  40430f:	cmp    eax,0x64da3a90
  404314:	xor    BYTE PTR [ebx+0x50],ch
  404317:	ins    BYTE PTR es:[edi],dx
  404318:	mov    ?,WORD PTR [ecx]
  40431a:	and    BYTE PTR [edx],al
  40431c:	es dec esi
  40431e:	xchg   BYTE PTR [edi+0x17],dh
  404321:	sub    ch,ah
  404323:	dec    esp
  404324:	pop    ecx
  404325:	int3   
  404326:	ret    0x7bf
  404329:	(bad)  
  40432a:	jmp    0xf243:0x3caacebe
  404331:	jle    0x40432c
  404333:	repnz xchg ecx,eax
  404335:	js     0x4043b5
  404337:	es add eax,0x348c83
  40433d:	leave  
  40433e:	jl     0x4043a9
  404340:	call   0x9968941c
  404345:	std    
  404346:	daa    
  404347:	popa   
  404348:	dec    esi
  404349:	inc    edx
  40434a:	rcl    BYTE PTR [esi+esi*2-0x46f6be9c],cl
  404351:	push   edx
  404352:	ins    DWORD PTR es:[edi],dx
  404353:	mov    ds:0xffa12087,al
  404358:	sbb    al,0x95
  40435a:	or     bp,di
  40435d:	std    
  40435e:	and    BYTE PTR [eax+0x6af43f7b],bh
  404364:	fdivr  QWORD PTR [esi+0x25]
  404367:	stos   BYTE PTR es:[edi],al
  404368:	sbb    esi,DWORD PTR [edx+eiz*1-0x57cb483f]
  40436f:	push   edi
  404370:	cld    
  404371:	pusha  
  404372:	shl    BYTE PTR [esi+0x4f],cl
  404375:	adc    DWORD PTR [esi+0x3f],edi
  404378:	pop    ebp
  404379:	(bad)  
  40437a:	jns    0x404367
  40437c:	ror    al,cl
  40437e:	sbb    DWORD PTR [esi-0x2a],ebp
  404381:	ret    
  404382:	gs dec esi
  404384:	imul   esi,DWORD PTR [edx-0x30],0xffffff9f
  404388:	lahf   
  404389:	xor    eax,0xe6ec3f39
  40438f:	sbb    dh,bh
  404391:	in     eax,0x1f
  404393:	iret   
  404394:	test   ecx,ebx
  404396:	les    edx,FWORD PTR gs:[ecx-0x20]
  40439a:	mov    DWORD PTR [edx+0xd455796],ebp
  4043a0:	xchg   ebx,eax
  4043a1:	fucomip st,st(2)
  4043a3:	and    DWORD PTR [edx],esp
  4043a5:	fisttp DWORD PTR [ecx+0x5aac1f56]
  4043ab:	jl     0x4043f6
  4043ad:	mov    DWORD PTR [edx+0x568ee5f5],ebp
  4043b3:	sub    al,0x1b
  4043b5:	cli    
  4043b6:	dec    ecx
  4043b7:	xchg   ecx,eax
  4043b8:	pop    es
  4043b9:	add    al,0xc0
  4043bb:	dec    edx
  4043bc:	(bad)  
  4043bd:	test   al,0xc9
  4043bf:	data16 sub BYTE PTR [ebx],ah
  4043c2:	addr16 (bad) 
  4043c4:	ins    BYTE PTR es:[edi],dx
  4043c5:	cmp    al,0xb3
  4043c7:	cmp    edx,DWORD PTR [edi]
  4043c9:	jp     0x40439f
  4043cb:	adc    esp,DWORD PTR [eax]
  4043cd:	or     ah,BYTE PTR [esi+0x4789f25a]
  4043d3:	add    eax,0xba85d0a5
  4043d8:	pop    ebx
  4043d9:	aas    
  4043da:	mov    dl,0xdd
  4043dc:	or     DWORD PTR [eax-0x3],ecx
  4043df:	out    dx,eax
  4043e0:	xchg   edx,eax
  4043e1:	or     edx,DWORD PTR [edx+0xf]
  4043e4:	(bad)  
  4043e5:	ins    DWORD PTR es:[edi],dx
  4043e6:	push   es
  4043e7:	arpl   WORD PTR [ebx-0x37],bx
  4043ea:	xchg   ebp,eax
  4043eb:	xchg   ebx,eax
  4043ec:	stc    
  4043ed:	or     al,0x4d
  4043ef:	call   0xe9ba:0xabfbbc49
  4043f6:	jne    0x404399
  4043f8:	fsqrt  
  4043fa:	mov    DWORD PTR ss:[ecx],edx
  4043fd:	scas   al,BYTE PTR es:[edi]
  4043fe:	out    0x30,al
  404400:	adc    DWORD PTR es:[edi+0x1404ada6],esi
  404407:	jbe    0x4043ed
  404409:	inc    ebx
  40440a:	cld    
  40440b:	cmp    ch,BYTE PTR [esi+0x9]
  40440e:	jne    0x404413
  404410:	shl    DWORD PTR [ebp+0x46],cl
  404413:	out    0x69,eax
  404415:	(bad)  
  404416:	out    0x31,eax
  404418:	sahf   
  404419:	lock mov edi,0x7480b4a5
  40441f:	mov    edi,cs
  404421:	sub    ebx,DWORD PTR [edi-0x5d]
  404424:	dec    eax
  404425:	mov    dl,0x6e
  404427:	icebp  
  404428:	and    ah,al
  40442a:	adc    edx,edx
  40442c:	jecxz  0x40440b
  40442e:	and    al,bl
  404430:	and    eax,0x4d58561b
  404435:	add    ah,BYTE PTR ds:0x5b6f3e09
  40443b:	add    dh,BYTE PTR [ebx]
  40443d:	test   BYTE PTR [esi+0x24],ah
  404440:	cld    
  404441:	enter  0xac99,0x12
  404445:	xlat   BYTE PTR ds:[ebx]
  404446:	pop    edi
  404447:	lods   al,BYTE PTR ds:[esi]
  404448:	inc    edx
  404449:	in     eax,dx
  40444a:	push   es
  40444b:	sbb    ebp,DWORD PTR [ebx]
  40444d:	cmp    eax,edx
  40444f:	adc    BYTE PTR [ebx],dl
  404451:	test   BYTE PTR [ebx],dh
  404453:	idiv   edi
  404455:	in     eax,0xb2
  404457:	test   DWORD PTR [esi+0x588b1c33],esi
  40445d:	sbb    al,0xf6
  40445f:	and    al,0xb2
  404461:	rcl    DWORD PTR [ecx],0x20
  404464:	sub    DWORD PTR [edi-0x135043c2],ebp
  40446a:	jge    0x4044af
  40446c:	mov    ch,0x3a
  40446e:	xchg   esi,eax
  40446f:	sbb    al,0x10
  404471:	and    BYTE PTR [eax+0x51fc651d],bh
  404477:	je     0x40446f
  404479:	fstp   TBYTE PTR [ecx-0x61]
  40447c:	or     BYTE PTR [ebx],0xdf
  40447f:	shr    DWORD PTR [ecx-0x3a],cl
  404482:	mov    esi,0xc8a01529
  404487:	xchg   esp,eax
  404488:	inc    ebp
  404489:	(bad)  
  40448a:	fdivr  DWORD PTR [edi+edi*8-0x8]
  40448e:	shl    ch,cl
  404490:	js     0x404436
  404492:	xchg   ebp,eax
  404493:	sub    DWORD PTR [esi],ebx
  404495:	repz sti 
  404497:	sbb    BYTE PTR [edi+0x2ab8b11],al
  40449d:	mov    esi,0xa4ed6195
  4044a2:	sahf   
  4044a3:	call   0x8d48:0xbbf1a934
  4044aa:	(bad)  
  4044ab:	xchg   ebx,eax
  4044ac:	mov    eax,ds:0xf62d983f
  4044b1:	ja     0x4044ec
  4044b3:	xchg   ah,ch
  4044b5:	sub    esp,edx
  4044b7:	jmp    0xfb5eab17
  4044bc:	xor    BYTE PTR [ebp+0x167d2b67],ah
  4044c2:	xor    ecx,DWORD PTR [edx+esi*8+0x1e]
  4044c6:	sbb    eax,0x805172d6
  4044cb:	inc    edx
  4044cc:	inc    ebx
  4044cd:	das    
  4044ce:	or     BYTE PTR [ecx+0x35],0xaa
  4044d2:	push   eax
  4044d3:	pusha  
  4044d4:	outs   dx,DWORD PTR ds:[esi]
  4044d5:	ds mov ah,0x7d
  4044d8:	mov    bh,0x7d
  4044da:	dec    ebx
  4044db:	(bad)  
  4044dc:	jmp    0x4044ae
  4044de:	pop    eax
  4044df:	mov    ebx,0xea0063ea
  4044e4:	fmul   DWORD PTR [edx]
  4044e6:	outs   dx,BYTE PTR ds:[esi]
  4044e7:	xchg   edi,eax
  4044e8:	sbb    al,0xba
  4044ea:	lods   al,BYTE PTR ds:[esi]
  4044eb:	aad    0xaf
  4044ed:	sbb    DWORD PTR [esi+0xb],edx
  4044f0:	mov    ecx,0x256fa68e
  4044f5:	nop
  4044f6:	(bad)  
  4044f7:	(bad)  
  4044f9:	es inc ecx
  4044fb:	dec    ebx
  4044fc:	mov    DWORD PTR [esi],ebx
  4044fe:	sub    eax,DWORD PTR [edx-0x1df11a41]
  404504:	mov    eax,cs:0xe609bf73
  40450a:	jmp    0x40453f
  40450c:	mov    ebx,0x1415b591
  404511:	xchg   ecx,eax
  404512:	xor    BYTE PTR [eax-0x742af3a2],dl
  404518:	je     0x404573
  40451a:	adc    DWORD PTR [edi-0x68],ebx
  40451d:	cld    
  40451e:	xchg   ecx,eax
  40451f:	jbe    0x4044d1
  404521:	fbstp  TBYTE PTR [ebx+0x3]
  404524:	mov    esi,0x3d47c579
  404529:	jle    0x404502
  40452b:	addr16 pop ebp
  40452d:	xor    BYTE PTR [edx],ch
  40452f:	xor    ah,BYTE PTR [ebp+0x60515f3e]
  404535:	sub    ch,cl
  404537:	xchg   ebx,eax
  404538:	jle    0x40459a
  40453a:	add    DWORD PTR [esp+esi*1-0x4a],ebx
  40453e:	push   ebx
  40453f:	(bad)  
  404540:	repnz cmc 
  404542:	inc    edi
  404543:	mov    ebx,0x37c1fbfc
  404548:	loop   0x4044fe
  40454a:	push   esi
  40454b:	jge    0x4044dc
  40454d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40454e:	outs   dx,BYTE PTR ds:[esi]
  40454f:	outs   dx,BYTE PTR ds:[esi]
  404550:	int    0xce
  404552:	jmp    0x40455b
  404554:	jecxz  0x40456e
  404556:	mov    ah,0xa8
  404558:	sbb    DWORD PTR [edi-0x45],eax
  40455b:	iret   
  40455c:	pop    eax
  40455d:	inc    eax
  40455e:	mov    bh,0xf6
  404560:	das    
  404561:	add    eax,0xbd4fd6e3
  404566:	add    esp,esi
  404568:	adc    DWORD PTR [ebp+eax*1+0x2eacb92d],edx
  40456f:	ss jmp 0x3055:0x875a700a
  404577:	test   eax,0xf7bb06ed
  40457c:	fucomp st(6)
  40457e:	push   ds
  40457f:	outs   dx,BYTE PTR ds:[esi]
  404580:	mov    es,WORD PTR [ecx]
  404582:	dec    ecx
  404583:	pusha  
  404584:	mov    ch,0x41
  404586:	pop    edi
  404587:	sbb    dh,dh
  404589:	mov    cl,0x5a
  40458b:	xor    DWORD PTR [edi+0x33],0xd9a764ac
  404592:	inc    esi
  404593:	addr16 push cs
  404595:	inc    edx
  404596:	ret    0xc026
  404599:	add    esp,DWORD PTR [si-0x6923]
  40459e:	mov    BYTE PTR [eax+0x5f],cl
  4045a1:	mov    ebp,0x6e2b14ef
  4045a6:	fcmovb st,st(7)
  4045a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045a9:	add    cl,BYTE PTR [edi-0x7f]
  4045ac:	xchg   ebx,eax
  4045ad:	and    BYTE PTR [edx-0x5],bl
  4045b0:	out    dx,eax
  4045b1:	inc    eax
  4045b2:	xor    DWORD PTR [edx],esp
  4045b4:	xchg   ecx,eax
  4045b5:	out    dx,eax
  4045b6:	jmp    0x322a:0x60a00146
  4045bd:	push   ss
  4045be:	sbb    ebx,DWORD PTR [ebp+ebx*2+0x7e]
  4045c2:	js     0x4045b9
  4045c4:	add    ebx,DWORD PTR [ebx]
  4045c6:	outs   dx,DWORD PTR ds:[esi]
  4045c7:	mul    BYTE PTR [edx-0x51]
  4045ca:	outs   dx,BYTE PTR ds:[esi]
  4045cb:	jp     0x4045eb
  4045cd:	sbb    eax,0xee1be5e2
  4045d2:	inc    eax
  4045d3:	add    BYTE PTR [ebx+eax*4-0x3605f83b],bh
  4045da:	ret    
  4045db:	xchg   ebx,eax
  4045dc:	lods   al,BYTE PTR ds:[esi]
  4045dd:	xchg   cl,al
  4045df:	stos   BYTE PTR es:[edi],al
  4045e0:	sbb    al,0x30
  4045e2:	out    0xa9,al
  4045e4:	hlt    
  4045e5:	xor    BYTE PTR [ecx+ebp*1-0x30],dl
  4045e9:	push   edi
  4045ea:	mov    esp,DWORD PTR [ebp+0x40f4a81d]
  4045f0:	push   esi
  4045f1:	dec    edi
  4045f2:	dec    edi
  4045f3:	lds    ebp,FWORD PTR [ebp+0x60d25115]
  4045f9:	out    dx,eax
  4045fa:	(bad)  
  4045fb:	es pop eax
  4045fd:	inc    esi
  4045fe:	shl    DWORD PTR [ebx*2-0x7183bd29],1
  404605:	rol    DWORD PTR [esi-0x1f],1
  404608:	dec    ebx
  404609:	dec    ebx
  40460a:	pop    esi
  40460b:	div    DWORD PTR [edi-0x1f]
  40460e:	popa   
  40460f:	lahf   
  404610:	jae    0x4045ba
  404612:	push   ss
  404613:	js     0x4045d5
  404615:	je     0x4045dd
  404617:	add    al,0x92
  404619:	jo     0x4045a0
  40461b:	aad    0x80
  40461d:	and    al,BYTE PTR [eax-0x67]
  404620:	adc    ah,BYTE PTR [edi+0x32]
  404623:	enter  0xc3df,0x63
  404627:	adc    esp,eax
  404629:	jecxz  0x404630
  40462b:	ss mov edi,0xa5738dbf
  404631:	mov    eax,ds:0x81bfae9f
  404636:	in     eax,0xd6
  404638:	mov    edx,0xf0ae968e
  40463d:	aas    
  40463e:	and    eax,0x1397b01b
  404643:	push   ss
  404644:	js     0x4046ab
  404646:	jo     0x40462a
  404648:	xor    ecx,DWORD PTR [eax-0x42]
  40464b:	sub    edx,ebx
  40464d:	and    cl,BYTE PTR [esp+ebp*2-0x60]
  404651:	xor    BYTE PTR ds:0x4788a56a,ah
  404657:	pop    edi
  404658:	or     eax,0xfd8df606
  40465d:	and    ch,bh
  40465f:	pop    ebp
  404660:	sbb    BYTE PTR [edx+0x14303c87],0x4a
  404667:	jecxz  0x404653
  404669:	mov    ah,0x23
  40466b:	fst    QWORD PTR [ebp+0x38d329fe]
  404671:	xor    al,BYTE PTR ds:0xa9b55b05
  404677:	add    bl,BYTE PTR [eax+0x72d896f5]
  40467d:	cmp    al,0x2
  40467f:	popa   
  404680:	out    0x5e,al
  404682:	cmc    
  404683:	push   ebx
  404684:	mov    al,0xfc
  404686:	mov    ch,0x6d
  404688:	xor    ebp,DWORD PTR [ebp+edi*2-0xd1254d7]
  40468f:	pop    eax
  404690:	mov    ecx,0x576a4e3d
  404695:	add    DWORD PTR [ecx-0x4a],esi
  404698:	xor    DWORD PTR [ebx-0x4f4fcc94],esi
  40469e:	test   esi,esp
  4046a0:	or     ah,BYTE PTR [ebx-0x4ca7d19f]
  4046a6:	pop    ebx
  4046a7:	mov    eax,ds:0x8b04ee72
  4046ac:	(bad)  
  4046ad:	and    DWORD PTR [ebx+0x69],edx
  4046b0:	lahf   
  4046b1:	xchg   ebx,eax
  4046b2:	outs   dx,DWORD PTR ds:[esi]
  4046b3:	repnz ror BYTE PTR [edx-0x299dc77c],cl
  4046ba:	xor    al,0x2
  4046bc:	sub    eax,0x302fa64b
  4046c1:	sbb    eax,0xdabb70e4
  4046c6:	xor    al,0xb6
  4046c8:	sbb    DWORD PTR [ecx+0x7bd6eb23],0x2b
  4046cf:	dec    edx
  4046d0:	div    DWORD PTR [ebp+0x14]
  4046d3:	sbb    DWORD PTR [ecx],edi
  4046d5:	and    cl,BYTE PTR [ebx+0x6c087fdc]
  4046db:	sbb    BYTE PTR [ebp-0x7034df35],0x7e
  4046e2:	ret    0x69c6
  4046e5:	sub    cl,dl
  4046e7:	lods   eax,DWORD PTR ds:[esi]
  4046e8:	das    
  4046e9:	push   ss
  4046ea:	hlt    
  4046eb:	jl     0x40469b
  4046ed:	fs aas 
  4046ef:	mov    esp,0x5fdd7a01
  4046f4:	test   al,0x6b
  4046f6:	sub    dl,bl
  4046f8:	mov    cl,0xcc
  4046fa:	and    bh,BYTE PTR [edx+0x251965e1]
  404700:	xchg   esi,eax
  404701:	(bad)  
  404702:	mov    al,0xb0
  404704:	scas   eax,DWORD PTR es:[edi]
  404705:	adc    DWORD PTR [ebp-0x35],ebp
  404708:	xchg   edi,eax
  404709:	cld    
  40470a:	or     eax,0xd3924d15
  40470f:	lock fdivr st,st(1)
  404712:	fsubr  QWORD PTR [esi+edx*2-0x5b3cf9be]
  404719:	outs   dx,DWORD PTR ds:[esi]
  40471a:	adc    DWORD PTR [eax+ebp*2],ebx
  40471d:	mov    edx,0xac4587
  404722:	dec    esi
  404723:	sub    esi,eax
  404725:	lea    ecx,[ebp-0x3c]
  404728:	in     al,dx
  404729:	sbb    eax,esp
  40472b:	mov    eax,ds:0x5a06017d
  404730:	gs retf 0xdc79
  404734:	add    al,0xa8
  404736:	pop    ss
  404737:	sbb    bl,BYTE PTR [edi]
  404739:	dec    ecx
  40473a:	das    
  40473b:	dec    ecx
  40473c:	(bad)  
  40473d:	mov    ecx,0xe1d23efe
  404742:	mov    edi,0x4f914945
  404747:	and    bh,al
  404749:	scas   eax,DWORD PTR es:[edi]
  40474a:	in     al,0x97
  40474c:	test   BYTE PTR gs:[eax*2+0x6cf1ab5a],cl
  404754:	mov    esp,0x7a0b9a30
  404759:	nop
  40475a:	xor    esi,ecx
  40475c:	add    eax,0x32a26798
  404761:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404762:	dec    ecx
  404763:	jns    0x4047e2
  404765:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404766:	test   eax,0x93ac93f1
  40476b:	hlt    
  40476c:	xchg   esp,eax
  40476d:	dec    esp
  40476e:	(bad)  [edi+esi*2]
  404771:	aad    0xe6
  404773:	(bad)  
  404774:	dec    ebp
  404775:	(bad)  [eax]
  404777:	shl    BYTE PTR [edx],1
  404779:	cmp    DWORD PTR [edi],edx
  40477b:	aaa    
  40477c:	fnstcw WORD PTR [edi]
  40477e:	xchg   ebx,eax
  40477f:	mov    ebx,0xb3f21a39
  404784:	adc    eax,0x49a85ac9
  404789:	xor    DWORD PTR [ebx-0x391c7075],ebx
  40478f:	sub    edi,DWORD PTR [ebp+0x241035cc]
  404795:	shl    DWORD PTR ds:0x9d551c23,1
  40479b:	cmp    ch,0x85
  40479e:	cwde   
  40479f:	(bad)  
  4047a1:	cs ret 0x8fc8
  4047a5:	dec    eax
  4047a6:	stc    
  4047a7:	mov    cl,0xe0
  4047a9:	outs   dx,DWORD PTR ds:[esi]
  4047aa:	fistp  WORD PTR [esi+0x38bc5344]
  4047b0:	ss ins DWORD PTR es:[edi],dx
  4047b2:	push   0x9874531a
  4047b7:	sahf   
  4047b8:	push   edi
  4047b9:	mov    ecx,0xc2481284
  4047be:	sar    BYTE PTR [ecx+ebx*8],cl
  4047c1:	cli    
  4047c2:	aam    0xf9
  4047c4:	dec    ebp
  4047c5:	sub    cl,BYTE PTR [ebp+0x61262cb9]
  4047cb:	out    0x9e,eax
  4047cd:	xor    cl,BYTE PTR [edx-0x23]
  4047d0:	loope  0x404851
  4047d2:	jmp    0x12e:0x1c9234be
  4047d9:	outs   dx,DWORD PTR ss:[esi]
  4047db:	push   esp
  4047dc:	int    0xa8
  4047de:	mov    ebp,DWORD PTR [ebx-0x56]
  4047e1:	shl    DWORD PTR [eax-0x1aa8c2f1],1
  4047e7:	mov    edi,0xf226fdcf
  4047ec:	push   ebp
  4047ed:	or     esi,esp
  4047ef:	inc    esi
  4047f0:	cwde   
  4047f1:	mov    ebp,0xad6803ee
  4047f6:	iret   
  4047f7:	nop
  4047f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4047f9:	(bad)  
  4047fa:	fisubr WORD PTR [ebx+0x300f274c]
  404800:	push   0x64766dea
  404805:	jle    0x404826
  404807:	inc    edi
  404808:	ins    BYTE PTR es:[edi],dx
  404809:	dec    ebp
  40480a:	jmp    0x4047b6
  40480c:	jmp    0xa8dc:0xae2896f6
  404813:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404814:	or     DWORD PTR [edi-0x3ed45c29],esi
  40481a:	stos   BYTE PTR es:[edi],al
  40481b:	push   es
  40481c:	inc    eax
  40481d:	xchg   BYTE PTR [esi-0x3d],al
  404820:	pop    ebp
  404821:	pop    edx
  404822:	mul    DWORD PTR [edx+0x1df60cea]
  404828:	sub    cl,BYTE PTR ds:0x55e67b88
  40482e:	lahf   
  40482f:	pop    ebp
  404830:	daa    
  404831:	jle    0x404812
  404833:	je     0x404852
  404835:	aam    0xb1
  404837:	mov    bh,0x85
  404839:	sub    DWORD PTR [esi+0x7c],0x10
  40483d:	add    dl,0xbd
  404840:	jb     0x404899
  404842:	push   ss
  404843:	sub    BYTE PTR [ebx],dl
  404845:	stc    
  404846:	imul   ecx,DWORD PTR [edx-0x39],0xd5bb161f
  40484d:	sahf   
  40484e:	pop    esp
  40484f:	push   edx
  404850:	mov    cl,0xf3
  404852:	xor    al,0x48
  404854:	(bad)  
  404855:	cmp    al,0xb2
  404857:	inc    esi
  404858:	pop    ecx
  404859:	jnp    0x4048ad
  40485b:	loope  0x40487b
  40485d:	fs int3 
  40485f:	cmp    BYTE PTR [ecx],dh
  404861:	outs   dx,BYTE PTR ds:[esi]
  404862:	out    dx,eax
  404863:	jmp    0x404898
  404865:	test   al,0xd0
  404867:	adc    eax,0x138255fb
  40486c:	fdivr  st,st(2)
  40486e:	xchg   esp,eax
  40486f:	fidivr WORD PTR [eax-0x42]
  404872:	jmp    0x4047fb
  404874:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404875:	cwde   
  404876:	aaa    
  404877:	popa   
  404878:	sbb    ebp,ecx
  40487a:	lds    ecx,FWORD PTR [edi-0x23ad12a1]
  404880:	xor    ebx,edx
  404882:	jb     0x4048fe
  404884:	mov    eax,0xee35d98d
  404889:	jb     0x4048ae
  40488b:	mov    esi,0x6c8ed5a0
  404890:	pop    es
  404891:	pop    eax
  404892:	xchg   ecx,eax
  404893:	xchg   esi,eax
  404894:	jl     0x404843
  404896:	push   ss
  404897:	dec    esi
  404898:	push   0x69
  40489a:	aad    0xca
  40489c:	cmp    BYTE PTR [ebp+0x1f],cl
  40489f:	iret   
  4048a0:	dec    ebp
  4048a1:	mov    edx,0xd153482d
  4048a6:	into   
  4048a7:	retf   0x63f3
  4048aa:	setb   BYTE PTR [edx+0x695097da]
  4048b1:	out    0x55,eax
  4048b3:	and    ecx,esp
  4048b5:	in     al,0x37
  4048b7:	inc    ecx
  4048b8:	nop
  4048b9:	pop    ss
  4048ba:	inc    ecx
  4048bb:	sub    cl,BYTE PTR [eax+0x7bdf9985]
  4048c1:	mov    esp,0x92e315cc
  4048c6:	and    BYTE PTR [edi+0x1f66f35e],al
  4048cc:	aas    
  4048cd:	je     0x40485c
  4048cf:	inc    ecx
  4048d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4048d1:	adc    eax,0xe3b63de1
  4048d6:	in     eax,0x51
  4048d8:	dec    ecx
  4048d9:	shl    dh,cl
  4048db:	(bad)  [esp+ebx*1]
  4048de:	ins    BYTE PTR es:[edi],dx
  4048df:	imul   ebx,DWORD PTR [edi],0x23
  4048e2:	sbb    eax,0xeb420355
  4048e7:	mov    ebx,0x88126a06
  4048ec:	cld    
  4048ed:	jecxz  0x40488f
  4048ef:	pop    ss
  4048f0:	xchg   edi,eax
  4048f1:	je     0x4048e5
  4048f3:	clc    
  4048f4:	ja     0x4048ed
  4048f6:	sub    eax,0x42607e37
  4048fb:	push   0xffffffc3
  4048fd:	pop    edi
  4048fe:	adc    DWORD PTR [ecx],0x57
  404901:	mov    bl,BYTE PTR [ebx+eax*2-0x4e]
  404905:	sbb    ebx,DWORD PTR [edi-0x53b2b6d3]
  40490b:	into   
  40490c:	or     eax,0x17d07fd4
  404911:	shl    BYTE PTR [esi+0x39],1
  404914:	xor    al,0x55
  404916:	mov    ebx,0x9415aa20
  40491b:	dec    edx
  40491c:	dec    edi
  40491d:	ss daa 
  40491f:	pop    esi
  404920:	(bad)  
  404921:	fisttp DWORD PTR [ebx]
  404923:	pushaw 
  404925:	ss push ebx
  404927:	je     0x40498d
  404929:	push   cs
  40492a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40492b:	pop    edx
  40492c:	test   al,0xb4
  40492e:	xchg   ebx,eax
  40492f:	test   eax,0x6c28eafe
  404934:	sbb    al,0x1c
  404936:	test   bl,dl
  404938:	adc    al,0x1f
  40493a:	mov    esp,0x7f49db93
  40493f:	in     al,dx
  404940:	xlat   BYTE PTR ds:[ebx]
  404941:	or     bl,BYTE PTR [eax+0x48d1448e]
  404947:	pop    esp
  404948:	mov    dh,0x2c
  40494a:	jmp    0xff0eb738
  40494f:	inc    esp
  404950:	adc    BYTE PTR [edi-0x2e],dl
  404953:	test   al,0x89
  404955:	inc    ebp
  404956:	(bad)  
  404957:	(bad)  
  404958:	(bad)  [ebx+0x30]
  40495b:	sahf   
  40495c:	test   eax,0xbb3d3ece
  404961:	(bad)  
  404962:	sub    al,0x46
  404964:	jmp    0x87dc0bc
  404969:	mov    esp,0xd7bfb509
  40496e:	inc    esp
  40496f:	gs jecxz 0x4049af
  404972:	ins    DWORD PTR es:[edi],dx
  404973:	and    ch,BYTE PTR [ecx-0x69]
  404976:	mov    ds:0xd37be2eb,al
  40497b:	sbb    BYTE PTR [edx+0x62],ch
  40497e:	leave  
  40497f:	call   DWORD PTR [ebp-0x2ce8bce1]
  404985:	jbe    0x404950
  404987:	fisubr DWORD PTR [ecx-0x296379b7]
  40498d:	inc    ecx
  40498e:	pmuludq mm3,QWORD PTR [ecx+0x57]
  404992:	pop    edx
  404993:	sbb    DWORD PTR [edx+ecx*1+0x5f],eax
  404997:	les    ebx,FWORD PTR [edi-0x4bf3c8b3]
  40499d:	retf   0x859b
  4049a0:	jmp    0x4049e3
  4049a2:	jns    0x4049af
  4049a4:	pop    ecx
  4049a5:	or     al,0x67
  4049a7:	adc    DWORD PTR [eax],esp
  4049a9:	mov    ebx,0xc671f45f
  4049ae:	mov    esp,DWORD PTR [ecx-0x52]
  4049b1:	stos   DWORD PTR es:[edi],eax
  4049b2:	repnz fldcw WORD PTR [ebp-0x21]
  4049b6:	in     al,0xda
  4049b8:	ret    
  4049b9:	sub    esi,DWORD PTR [edi+0x5]
  4049bc:	inc    ebx
  4049bd:	push   ds
  4049be:	push   ss
  4049bf:	in     al,dx
  4049c0:	mov    bl,0x4d
  4049c2:	js     0x404a04
  4049c4:	dec    eax
  4049c5:	iret   
  4049c6:	or     bl,dl
  4049c8:	mov    ch,0x92
  4049ca:	dec    edi
  4049cb:	inc    edi
  4049cc:	or     BYTE PTR [esi],dl
  4049ce:	or     al,BYTE PTR [edi-0x1afa2597]
  4049d4:	(bad)  
  4049d5:	test   eax,0x41b9adc8
  4049da:	ret    0x2ab3
  4049dd:	pop    edx
  4049de:	cmp    eax,0x26996d1a
  4049e3:	loope  0x404a35
  4049e5:	gs clc 
  4049e7:	jl     0x404a58
  4049e9:	push   es
  4049ea:	out    dx,al
  4049eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4049ec:	imul   ebx,DWORD PTR [edx+0x45],0x19
  4049f0:	sub    eax,DWORD PTR [esi-0x54fbdb1b]
  4049f6:	dec    ebp
  4049f7:	loopne 0x404a6c
  4049f9:	inc    esp
  4049fa:	xchg   ebx,eax
  4049fb:	xchg   ecx,eax
  4049fc:	lea    eax,[ebp-0x5917bd40]
  404a02:	fst    DWORD PTR [edx]
  404a04:	jg     0x404a78
  404a06:	add    BYTE PTR [edx-0x5f],ah
  404a09:	push   0xffffffd6
  404a0b:	les    edx,FWORD PTR [edi+eiz*8+0x74]
  404a0f:	dec    esi
  404a10:	jg     0x4049a4
  404a12:	xchg   ebx,eax
  404a13:	pop    eax
  404a14:	outs   dx,BYTE PTR ds:[esi]
  404a15:	nop
  404a16:	jnp    0x4049f3
  404a18:	inc    eax
  404a19:	jae    0x404a39
  404a1b:	adc    eax,0x9867ddc2
  404a20:	sbb    BYTE PTR [ebx+edx*8],al
  404a23:	into   
  404a24:	fwait
  404a25:	and    al,0x76
  404a27:	in     eax,0x6
  404a29:	inc    ebp
  404a2a:	xchg   ebx,eax
  404a2b:	and    eax,0x48e7575a
  404a30:	inc    edx
  404a31:	call   0x3d8f:0x30063d7b
  404a38:	mov    ds:0xda114c51,eax
  404a3d:	jge    0x404a11
  404a3f:	loope  0x404a5a
  404a41:	xor    al,0xfb
  404a43:	ds add al,0xba
  404a46:	or     edx,DWORD PTR [edi-0x35febc4b]
  404a4c:	mov    ds:0xcb024b17,eax
  404a51:	push   ebp
  404a52:	xor    edx,DWORD PTR [edi-0x1beb9cd2]
  404a58:	das    
  404a59:	rcr    ebx,1
  404a5b:	test   DWORD PTR [ebx],ecx
  404a5d:	mov    ds:0xd4734b24,al
  404a62:	jmp    0xdb5ae7f9
  404a67:	std    
  404a68:	repz in al,dx
  404a6a:	mov    DWORD PTR [esi+0x5e],edx
  404a6d:	jo     0x4049ff
  404a6f:	mov    al,0xef
  404a71:	jle    0x404af2
  404a73:	test   al,0xdb
  404a75:	adc    BYTE PTR [eax],cl
  404a77:	popf   
  404a78:	test   al,0xc3
  404a7a:	sub    eax,0x37ce918a
  404a7f:	add    cl,BYTE PTR [edi-0x4b6732af]
  404a85:	xor    BYTE PTR [esi+eax*8-0x318f89f8],al
  404a8c:	sub    DWORD PTR [ebp-0x4f5bbd0f],esi
  404a92:	xor    eax,0xd1ae30d0
  404a97:	std    
  404a98:	repnz cld 
  404a9a:	je     0x404a4d
  404a9c:	stc    
  404a9d:	nop
  404a9e:	lock push cs
  404aa0:	xor    eax,0x245ac008
  404aa5:	int    0x27
  404aa7:	repnz add ebp,DWORD PTR [edi+0x33]
  404aab:	inc    esi
  404aac:	xchg   edx,eax
  404aad:	enter  0x8c2d,0xeb
  404ab1:	enter  0x6c42,0xbe
  404ab5:	pop    edi
  404ab6:	add    bl,ah
  404ab8:	push   0x38
  404aba:	pop    ds
  404abb:	push   ebx
  404abc:	fmul   st(2),st
  404abe:	mov    ecx,0xa9abab8f
  404ac3:	sahf   
  404ac4:	pop    edi
  404ac5:	sub    BYTE PTR [ecx+ebp*8-0x4149cb38],bl
  404acc:	aam    0xeb
  404ace:	test   DWORD PTR [esi],edx
  404ad0:	test   dh,cl
  404ad2:	jno    0x404b39
  404ad4:	js     0x404a6f
  404ad6:	xchg   esi,eax
  404ad7:	mov    ecx,0xd902f923
  404adc:	mov    BYTE PTR [ebx],cl
  404ade:	sub    DWORD PTR [ecx-0x30],edx
  404ae1:	xchg   esp,eax
  404ae2:	jg     0x404a68
  404ae4:	(bad)  
  404ae5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ae6:	(bad)  
  404ae7:	push   ds
  404ae8:	(bad)  
  404ae9:	out    dx,al
  404aea:	je     0x404ad7
  404aec:	xchg   eax,eax
  404aee:	adc    dl,bh
  404af0:	jmp    0x493b:0x1d50bca2
  404af7:	and    al,0x1a
  404af9:	xor    BYTE PTR [ebp-0x2bbac486],bl
  404aff:	rol    BYTE PTR [eax+0x52cf6d2a],0xf6
  404b06:	lock xor DWORD PTR [eax-0x28f9f837],esp
  404b0d:	(bad)  [esi]
  404b0f:	xchg   BYTE PTR [edx-0x53],bl
  404b12:	div    BYTE PTR [ecx]
  404b14:	nop
  404b15:	dec    edi
  404b16:	aam    0x4f
  404b18:	cmp    DWORD PTR [ebx+0x4fe312d2],esp
  404b1e:	daa    
  404b1f:	xchg   DWORD PTR [edx-0x2],ebx
  404b22:	mov    BYTE PTR [ecx+0x39],ah
  404b25:	sub    edx,DWORD PTR [ecx]
  404b27:	outs   dx,BYTE PTR ds:[esi]
  404b28:	popa   
  404b29:	clc    
  404b2a:	fstp   TBYTE PTR [eax+0x14]
  404b2d:	fbld   TBYTE PTR [edx-0x71580342]
  404b33:	call   FWORD PTR [ecx]
  404b35:	ja     0x404b27
  404b37:	imul   ecx,DWORD PTR ds:0x1fb5564f,0x80fbe494
  404b41:	lods   eax,DWORD PTR ds:[esi]
  404b42:	fsubr  st,st(4)
  404b44:	sbb    dh,BYTE PTR [edx-0x13a3c537]
  404b4a:	test   al,0x5
  404b4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b4d:	shr    BYTE PTR [esi+0x7],cl
  404b50:	sbb    eax,0x81e673ae
  404b55:	xchg   BYTE PTR [edi-0x12ecbf2f],dl
  404b5b:	test   DWORD PTR [esi],0xdd969b06
  404b61:	or     al,0xab
  404b63:	mov    ds:0xead7a214,al
  404b68:	js     0x404b15
  404b6a:	xchg   esp,eax
  404b6b:	cmc    
  404b6c:	stos   DWORD PTR es:[edi],eax
  404b6d:	out    0x73,eax
  404b6f:	call   0x8e5ff55c
  404b74:	pop    ss
  404b75:	sub    BYTE PTR [edx-0x72],bl
  404b78:	adc    DWORD PTR [esi-0xc8f2342],esp
  404b7e:	fs popa 
  404b80:	fcmovnu st,st(1)
  404b82:	aad    0x1a
  404b84:	or     eax,0xa81b93c4
  404b89:	pop    ebx
  404b8a:	cmp    ah,dh
  404b8c:	jmp    FWORD PTR [edi+0x44]
  404b8f:	scas   eax,DWORD PTR es:[edi]
  404b90:	sti    
  404b91:	test   DWORD PTR [ecx],ecx
  404b93:	mov    ch,0xb6
  404b95:	and    eax,0xbc4a6a6c
  404b9a:	pop    ebp
  404b9b:	ins    DWORD PTR es:[edi],dx
  404b9c:	jmp    0x2ced:0x8688d84
  404ba3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ba4:	cmp    eax,0x3ab17377
  404ba9:	or     edi,esp
  404bab:	or     al,0x24
  404bad:	je     0x404b84
  404baf:	cmp    dl,BYTE PTR [esi]
  404bb1:	fwait
  404bb2:	inc    esi
  404bb3:	mov    esp,0xbd2f309
  404bb8:	jl     0x404b8c
  404bba:	xlat   BYTE PTR ds:[ebx]
  404bbb:	in     eax,0xf7
  404bbd:	(bad)  
  404bbe:	imul   edi,DWORD PTR [edx],0xffffffe2
  404bc1:	pop    edi
  404bc2:	or     DWORD PTR [esi+0x3a42638c],0xffffffaf
  404bc9:	hlt    
  404bca:	hlt    
  404bcb:	pop    ss
  404bcc:	xchg   esp,eax
  404bcd:	es pop es
  404bcf:	and    eax,0x7a4e15e1
  404bd4:	out    0x71,eax
  404bd6:	repnz std 
  404bd8:	inc    eax
  404bd9:	jb     0x404b80
  404bdb:	xor    cl,BYTE PTR [ecx-0x30]
  404bde:	(bad)  
  404bdf:	push   edi
  404be0:	mov    bl,0xe0
  404be2:	push   0x322e66c7
  404be7:	mov    ecx,0xcdc973b7
  404bec:	ds mov esp,0x689c2400
  404bf2:	push   esi
  404bf3:	mov    BYTE PTR [ebp+0x31],dl
  404bf6:	(bad)  
  404bf7:	xor    al,0xf3
  404bf9:	adc    al,0xdb
  404bfb:	mov    edi,0x2e1c70c5
  404c00:	popf   
  404c01:	in     al,dx
  404c02:	shr    BYTE PTR [edi-0x77],0xd5
  404c06:	xchg   BYTE PTR [edi+0x7b3c1fbd],dl
  404c0c:	or     eax,0xff6da3c3
  404c11:	in     eax,dx
  404c12:	sbb    DWORD PTR [edx-0x48ddfc48],ebp
  404c18:	int    0xb3
  404c1a:	out    0x19,eax
  404c1c:	enter  0x672b,0x51
  404c20:	cmp    DWORD PTR [edx+0x3e],0x53c587f1
  404c27:	test   al,0x66
  404c29:	aad    0x23
  404c2b:	jnp    0x404bc5
  404c2d:	cmp    BYTE PTR [esi*2-0x4e5ff245],cl
  404c34:	fst    st(6)
  404c36:	push   esp
  404c37:	xchg   DWORD PTR [edx],ecx
  404c39:	inc    ebp
  404c3a:	pop    edi
  404c3b:	jmp    0x2da8:0x4bb15b57
  404c42:	outs   dx,DWORD PTR ds:[esi]
  404c43:	push   es
  404c44:	xor    DWORD PTR [esi+0x3009da92],0x6f
  404c4b:	jb     0x404bd2
  404c4d:	ins    BYTE PTR es:[edi],dx
  404c4e:	sahf   
  404c4f:	jle    0x404c93
  404c51:	mov    ebp,0xfd6dce
  404c56:	xchg   edi,eax
  404c57:	inc    edx
  404c58:	xor    al,0x40
  404c5a:	cmp    eax,0x36b7c18a
  404c5f:	cmp    edi,DWORD PTR [edx]
  404c61:	imul   edx,DWORD PTR [esi+0x7259225c],0x3d1e719a
  404c6b:	fs cs pop eax
  404c6e:	addr16 sub eax,0xe1afe455
  404c74:	mov    al,0x54
  404c76:	sbb    edi,DWORD PTR [ebx+0x40]
  404c79:	push   ebp
  404c7a:	dec    ebx
  404c7b:	bound  esp,QWORD PTR cs:[ebp+edi*2-0x4e5af223]
  404c83:	les    edi,FWORD PTR [ecx-0x52]
  404c86:	retf   0x6406
  404c89:	cmp    esi,DWORD PTR [esi-0x5c7058a0]
  404c8f:	sbb    eax,0xd03e4b9d
  404c94:	dec    esi
  404c95:	mov    eax,ecx
  404c97:	inc    eax
  404c98:	push   0x53
  404c9a:	daa    
  404c9b:	or     al,0xb5
  404c9d:	sub    ecx,esp
  404c9f:	inc    ebx
  404ca0:	sbb    eax,0x26baff30
  404ca5:	mov    edi,0x156f5048
  404caa:	test   DWORD PTR [edi-0x433d62b7],esi
  404cb0:	rcr    DWORD PTR [ecx+0x73],1
  404cb3:	(bad)  
  404cb4:	xlat   BYTE PTR ds:[ebx]
  404cb5:	leave  
  404cb6:	pop    ebx
  404cb7:	in     al,0x62
  404cb9:	sbb    esp,DWORD PTR [ecx+0x61]
  404cbc:	jns    0x404c9a
  404cbe:	add    al,0x1d
  404cc0:	add    al,BYTE PTR [ebp+0xd]
  404cc3:	in     al,0xe2
  404cc5:	mov    eax,0x391bc896
  404cca:	fbstp  TBYTE PTR [ebx]
  404ccc:	pop    ebp
  404ccd:	icebp  
  404cce:	push   es
  404ccf:	mov    edx,DWORD PTR [ebp+0x2dce2e3a]
  404cd5:	mov    edi,0x2d6e4a5d
  404cda:	push   0x1ddf5dcb
  404cdf:	ror    ah,1
  404ce1:	sub    eax,0xf15377e2
  404ce6:	sub    dh,BYTE PTR [edx+0x65]
  404ce9:	les    esp,FWORD PTR [esi]
  404ceb:	push   cs
  404cec:	mov    esi,0x32a272f9
  404cf1:	push   ds
  404cf2:	ret    
  404cf3:	fdivr  QWORD PTR [ebx+0x6ac03cd1]
  404cf9:	sbb    BYTE PTR [ebx+0x6e07317c],cl
  404cff:	mov    ecx,0xb5809122
  404d04:	mov    bl,0xf6
  404d06:	das    
  404d07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d08:	cmp    al,bh
  404d0a:	dec    ecx
  404d0b:	nop
  404d0c:	xchg   ebx,eax
  404d0d:	mov    WORD PTR [ecx-0x3b397a5d],cs
  404d13:	(bad)  
  404d14:	jmp    0xb18dc289
  404d19:	inc    edx
  404d1a:	push   edi
  404d1b:	cmc    
  404d1c:	mov    ds:0xfeeeec48,eax
  404d21:	cmp    BYTE PTR [edx],bh
  404d23:	cmp    edx,DWORD PTR [ebp-0x4dd9aa02]
  404d29:	aaa    
  404d2a:	mov    cl,0xc9
  404d2c:	icebp  
  404d2d:	popf   
  404d2e:	xchg   ebx,eax
  404d2f:	cmp    al,BYTE PTR [edi-0x5a]
  404d32:	mov    ebp,ebp
  404d34:	fcomip st,st(6)
  404d36:	rcl    bh,1
  404d38:	imul   esp,DWORD PTR ss:[ebp+0x5e],0x44
  404d3d:	iret   
  404d3e:	in     eax,0x32
  404d40:	sub    BYTE PTR [ebp-0x3e46040],bl
  404d46:	int3   
  404d47:	xchg   ebp,eax
  404d48:	dec    esp
  404d49:	arpl   WORD PTR [ecx-0x610d8bfc],sp
  404d4f:	jo     0x404d84
  404d51:	mov    ds:0x8e3b950e,al
  404d56:	cmp    DWORD PTR [edi],eax
  404d58:	adc    ch,0xde
  404d5b:	jmp    0x404d76
  404d5d:	dec    esi
  404d5e:	cld    
  404d5f:	jbe    0x404dca
  404d61:	mov    eax,ds:0x98a3b47b
  404d66:	lahf   
  404d67:	int3   
  404d68:	rcl    ecx,1
  404d6a:	xchg   ecx,eax
  404d6b:	addr16 mov al,0xeb
  404d6e:	loopne 0x404d30
  404d70:	pop    esi
  404d71:	add    ebp,DWORD PTR [eax-0x19]
  404d74:	pusha  
  404d75:	cli    
  404d76:	out    0x2b,eax
  404d78:	inc    edx
  404d79:	cs in  al,0xd2
  404d7c:	push   edi
  404d7d:	daa    
  404d7e:	adc    DWORD PTR [edx+eax*8-0x5a],ecx
  404d82:	stos   DWORD PTR es:[edi],eax
  404d83:	cmp    eax,0xb0688b9d
  404d88:	pop    ebp
  404d89:	cli    
  404d8a:	test   cl,bh
  404d8c:	aas    
  404d8d:	clc    
  404d8e:	mov    ?,WORD PTR [eax+0x27]
  404d91:	or     eax,0xd4c1860e
  404d96:	jns    0x404d9d
  404d98:	sbb    esi,ebp
  404d9a:	adc    BYTE PTR [ebp-0x70aeba6],dl
  404da0:	into   
  404da1:	mov    ah,0x8c
  404da3:	mov    esi,0xb76b682
  404da8:	stos   DWORD PTR es:[edi],eax
  404da9:	retf   
  404daa:	inc    ebp
  404dab:	xor    eax,DWORD PTR [esi+0x3150129c]
  404db1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404db2:	not    BYTE PTR [ebx]
  404db4:	and    al,0xc
  404db6:	add    eax,0x2bfaf140
  404dbb:	jg     0x404db3
  404dbd:	loopne 0x404d57
  404dbf:	push   cs
  404dc0:	in     al,0xdd
  404dc2:	dec    ecx
  404dc3:	(bad)  
  404dc4:	mov    bl,0x63
  404dc6:	sar    BYTE PTR [edi-0x50ca35c9],cl
  404dcc:	ror    BYTE PTR [edi-0x3d],1
  404dcf:	xchg   edx,eax
  404dd0:	pop    es
  404dd1:	push   cx
  404dd3:	mov    ?,WORD PTR [ebx+0x3e79fc91]
  404dd9:	add    dh,BYTE PTR [esi]
  404ddb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ddc:	and    eax,0x76938596
  404de1:	jb     0x404dc0
  404de3:	in     al,0x33
  404de5:	push   0x48
  404de7:	mov    dl,0xd5
  404de9:	lea    ecx,[ebp-0x6fa84154]
  404def:	test   eax,0x749cfdf1
  404df4:	sub    esp,DWORD PTR [ecx-0x33ccad82]
  404dfa:	push   cs
  404dfb:	mov    ebx,0xe11d3911
  404e00:	mov    dh,ch
  404e02:	dec    ecx
  404e03:	adc    BYTE PTR [esi],bl
  404e05:	add    bl,BYTE PTR [edi]
  404e07:	cmc    
  404e08:	inc    esi
  404e09:	push   ss
  404e0a:	loop   0x404e69
  404e0c:	dec    ebp
  404e0d:	aas    
  404e0e:	push   edx
  404e0f:	or     DWORD PTR [esi-0x6a],ebp
  404e12:	mov    WORD PTR [ecx-0x32b53f49],ds
  404e18:	fstp   QWORD PTR [eax]
  404e1a:	or     ecx,0xfffffff7
  404e1d:	xchg   esi,eax
  404e1e:	and    BYTE PTR [eax],bh
  404e20:	push   esp
  404e21:	outs   dx,DWORD PTR ds:[esi]
  404e22:	cmp    ebx,ebp
  404e24:	adc    DWORD PTR [esp+ecx*1+0x2d],edi
  404e28:	into   
  404e29:	es jecxz 0x404e0a
  404e2c:	mov    edi,DWORD PTR [eax+esi*4]
  404e2f:	xor    ebp,DWORD PTR [esi]
  404e31:	dec    edi
  404e32:	push   eax
  404e33:	test   eax,0xcd1584b0
  404e38:	add    eax,0xac1773c0
  404e3d:	popa   
  404e3e:	(bad)  
  404e3f:	loope  0x404e77
  404e41:	mov    al,ds:0x4c0f7c9a
  404e46:	daa    
  404e47:	push   eax
  404e48:	sub    cl,BYTE PTR [edx-0x45523e69]
  404e4e:	std    
  404e4f:	or     esi,eax
  404e51:	aam    0xf9
  404e53:	ficom  DWORD PTR [ebx-0x6a204214]
  404e59:	adc    DWORD PTR [ebp+0x22],ebp
  404e5c:	xor    esi,eax
  404e5e:	(bad)  
  404e5f:	mov    ebx,0x621edbcb
  404e64:	push   edx
  404e65:	repz sbb al,0xff
  404e68:	lods   eax,DWORD PTR ds:[esi]
  404e69:	mov    ebx,0xf3355437
  404e6e:	pop    esi
  404e6f:	xchg   esp,esi
  404e71:	test   al,0x79
  404e73:	test   eax,0x3f731eae
  404e78:	xor    BYTE PTR [edi+eiz*1+0x17d0cd54],bl
  404e7f:	cmp    edx,DWORD PTR [ebx+ebp*2+0x6b87716c]
  404e86:	adc    cl,BYTE PTR [ecx]
  404e88:	pop    esp
  404e89:	or     eax,0xc87dbf5d
  404e8e:	or     cl,bl
  404e90:	cmc    
  404e91:	call   0x5e6881b8
  404e96:	ret    
  404e97:	(bad)  
  404e98:	popa   
  404e99:	pop    esi
  404e9a:	test   eax,0x60a80271
  404e9f:	fnstsw WORD PTR [eax+0x5b]
  404ea2:	xchg   ecx,eax
  404ea3:	rcl    BYTE PTR [edx],cl
  404ea5:	popa   
  404ea6:	xor    ebp,DWORD PTR [ebx-0x77]
  404ea9:	mov    eax,DWORD PTR [edi+eax*1]
  404eac:	xchg   edi,eax
  404ead:	fdiv   st,st(1)
  404eaf:	push   ebp
  404eb0:	scas   al,BYTE PTR es:[edi]
  404eb1:	push   edx
  404eb2:	sbb    BYTE PTR [esi+0x5e],0xbe
  404eb6:	adc    esi,DWORD PTR [edi+0x6b]
  404eb9:	inc    edi
  404eba:	xor    BYTE PTR [eax],bl
  404ebc:	out    dx,eax
  404ebd:	adc    ch,dh
  404ebf:	push   esi
  404ec0:	mov    ebp,0xd98b90b7
  404ec5:	jmp    0x404e65
  404ec7:	sbb    edi,DWORD PTR [ebx-0x2c651503]
  404ecd:	xchg   ecx,eax
  404ece:	cmp    eax,0x9355821b
  404ed3:	scas   eax,DWORD PTR es:[edi]
  404ed4:	mov    ebp,0x5d990a7
  404ed9:	mov    esp,0xbe99318c
  404ede:	test   al,0xcf
  404ee0:	or     DWORD PTR [edi],edi
  404ee2:	ret    0x7202
  404ee5:	push   ss
  404ee6:	xchg   dh,cl
  404ee8:	jb     0x404ee4
  404eea:	ds int3 
  404eec:	mov    edx,ebx
  404eee:	(bad)  
  404eef:	rep stos DWORD PTR es:[edi],eax
  404ef1:	push   ds
  404ef2:	stos   DWORD PTR es:[edi],eax
  404ef3:	mov    bl,ch
  404ef5:	bndldx bnd2,[ebx+eax*8+0x676dffda]
  404efd:	data16 mov ch,BYTE PTR [ebp+0x6b]
  404f01:	jle    0x404e91
  404f03:	cmc    
  404f04:	jle    0x404ec3
  404f06:	dec    ecx
  404f07:	aam    0xd1
  404f09:	(bad)  
  404f0b:	retf   0xc0d0
  404f0e:	cmp    edi,DWORD PTR [edx+ecx*8-0x5a97be2c]
  404f15:	sbb    al,0xe3
  404f17:	jge    0x404f40
  404f19:	cmp    BYTE PTR [edx-0x24d53509],ch
  404f1f:	xor    ebx,esi
  404f21:	and    eax,DWORD PTR [ebp-0x7b809d0c]
  404f27:	mov    ch,BYTE PTR [edi]
  404f29:	pmaddwd mm1,QWORD PTR [ecx+0x1]
  404f2d:	out    0xd9,eax
  404f2f:	xchg   esi,eax
  404f30:	out    0xf9,al
  404f32:	test   DWORD PTR [esi+0x59],ecx
  404f35:	adc    DWORD PTR ss:0x2615e72c,ebp
  404f3c:	out    0x72,al
  404f3e:	aaa    
  404f3f:	scas   eax,DWORD PTR es:[edi]
  404f40:	js     0x404f36
  404f42:	mov    ds:0xfb494690,eax
  404f47:	and    esp,DWORD PTR [edx+ebx*4]
  404f4a:	les    ebx,FWORD PTR [ebx-0x44]
  404f4d:	jns    0x404faa
  404f4f:	sahf   
  404f50:	addr16 pop ecx
  404f52:	mov    ds:0x9607de82,al
  404f57:	dec    BYTE PTR [eax]
  404f59:	pop    ebx
  404f5a:	sbb    al,BYTE PTR [edi+0x7f3f916d]
  404f60:	push   es
  404f61:	data16 cmc 
  404f63:	sbb    al,0x91
  404f65:	cs push es
  404f67:	push   edx
  404f68:	imul   ebp,DWORD PTR [ebp-0x1e],0x67
  404f6c:	mov    esp,0x1ba26e0a
  404f71:	loopne 0x404fcd
  404f73:	inc    eax
  404f74:	fdiv   st(6),st
  404f76:	sbb    cl,BYTE PTR [edi-0x67]
  404f79:	adc    edx,DWORD PTR [eax+0x47f26217]
  404f7f:	inc    ecx
  404f80:	cmp    ebp,eax
  404f82:	inc    edx
  404f83:	aam    0x7a
  404f85:	jecxz  0x404fdf
  404f87:	cmp    ecx,DWORD PTR [esi]
  404f89:	popa   
  404f8a:	sub    dh,cl
  404f8c:	cmp    edi,ebx
  404f8e:	ficom  WORD PTR [eax-0x385003b2]
  404f94:	in     eax,dx
  404f95:	in     eax,dx
  404f96:	adc    eax,0x9fdf49ba
  404f9b:	pop    ebp
  404f9c:	mov    bh,0x56
  404f9e:	xlat   BYTE PTR ds:[ebx]
  404f9f:	sbb    eax,0x66f2bbdf
  404fa4:	sub    edi,ebx
  404fa6:	shr    BYTE PTR [edi+eiz*2+0x605ff764],0xdb
  404fae:	sbb    BYTE PTR [esi-0x59cccb09],cl
  404fb4:	or     DWORD PTR [edx-0x4cbf4343],ebx
  404fba:	(bad)  
  404fbb:	nop
  404fbc:	push   es
  404fbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404fbe:	(bad)
  404fc1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404fc2:	inc    esi
  404fc3:	sar    DWORD PTR ds:0x5704a066,cl
  404fc9:	sub    al,0xb0
  404fcb:	lods   eax,DWORD PTR ds:[esi]
  404fcc:	ja     0x404fb4
  404fce:	iret   
  404fcf:	adc    al,0x4
  404fd1:	xlat   BYTE PTR ds:[ebx]
  404fd2:	arpl   ax,cx
  404fd4:	cmp    DWORD PTR [eax+0x37],ebp
  404fd7:	dec    edi
  404fd8:	test   BYTE PTR [ecx-0x75],ch
  404fdb:	iret   
  404fdc:	and    al,0xd1
  404fde:	pop    ebx
  404fdf:	jle    0x404fb6
  404fe1:	mov    BYTE PTR [edi+0x71],0x71
  404fe5:	sub    esi,DWORD PTR [ebx+0x1a2c4a2e]
  404feb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404fec:	lds    edx,FWORD PTR [eax]
  404fee:	neg    DWORD PTR [ebx-0x51]
  404ff1:	bndstx [edx+ebp*8-0x346c9c94],(bad)
  404ff9:	call   DWORD PTR [eax+0x185c6493]
  404fff:	pop    es
  405000:	mov    al,ch
  405002:	jne    0x404f8f
  405004:	lea    edi,[ebp+0x13]
  405007:	mov    esp,0x3b1f2e87
  40500c:	lahf   
  40500d:	add    al,0x42
  40500f:	cmp    BYTE PTR [ecx+0x1f],0xcf
  405013:	pop    ebx
  405014:	and    esi,ebx
  405016:	sub    bh,BYTE PTR [ebx-0x32115ea7]
  40501c:	xor    edi,edx
  40501e:	dec    ebp
  40501f:	enter  0xcf07,0xe3
  405023:	add    al,0x84
  405025:	dec    ebx
  405026:	(bad)  
  405027:	cld    
  405028:	adc    dl,0x74
  40502b:	fidiv  WORD PTR ds:0xdbf0b104
  405031:	pop    DWORD PTR [esi+0x5cd64b31]
  405037:	or     esp,DWORD PTR [esi-0x47]
  40503a:	sub    eax,0x6769f3ce
  40503f:	nop
  405040:	cwde   
  405041:	mov    DWORD PTR [ecx-0x67cdb887],ecx
  405047:	and    BYTE PTR [edi+0xb],cl
  40504a:	out    dx,al
  40504b:	jns    0x40501e
  40504d:	shl    DWORD PTR ds:[ebp+ecx*8+0x44],cl
  405052:	shr    edx,1
  405054:	lea    edi,[ebp-0x6e]
  405057:	cld    
  405058:	idiv   DWORD PTR [edx-0x20]
  40505b:	cmp    dh,BYTE PTR [eax-0x27db613a]
  405061:	sbb    al,0xc9
  405063:	xor    al,0xe9
  405065:	rcr    DWORD PTR [edi],1
  405067:	cmp    ah,BYTE PTR ds:0x1ad90d85
  40506d:	pusha  
  40506e:	rcl    DWORD PTR ss:[edx],cl
  405071:	test   al,0x58
  405073:	(bad)
  405076:	js     0x405066
  405078:	mov    ds:0xbad5ae28,eax
  40507d:	sub    BYTE PTR [edi-0x2f],ah
  405080:	add    eax,0xbb5c5331
  405085:	test   DWORD PTR [edi-0x79e47646],esi
  40508b:	nop
  40508c:	mov    esi,0xd720024c
  405091:	xor    DWORD PTR [edx],esp
  405093:	add    DWORD PTR [ecx+0x275ded7b],ebx
  405099:	adc    eax,0x55be3cba
  40509e:	push   esp
  40509f:	aaa    
  4050a0:	js     0x4050ae
  4050a2:	inc    ecx
  4050a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4050a4:	jmp    0xda1ca6f9
  4050a9:	iret   
  4050aa:	into   
  4050ab:	outs   dx,DWORD PTR ds:[esi]
  4050ac:	(bad)  
  4050ad:	cmp    al,0xb6
  4050af:	ds or  al,dh
  4050b2:	mov    ebp,0xd6080bd0
  4050b7:	shl    BYTE PTR [edx-0x3c],cl
  4050ba:	fnstsw WORD PTR [edx-0x59921bc1]
  4050c0:	mov    DWORD PTR ds:0x711ca15b,edx
  4050c6:	dec    edx
  4050c7:	xchg   ebx,esi
  4050c9:	push   0x55
  4050cb:	mov    ecx,0x7ec43b5
  4050d0:	jp     0x40510d
  4050d2:	mov    es,ecx
  4050d4:	mov    ds:0xf1f3757,eax
  4050d9:	jge    0x40511d
  4050db:	xchg   esi,eax
  4050dc:	mov    eax,0xcb4ef55c
  4050e1:	aam    0xa2
  4050e3:	ins    DWORD PTR es:[edi],dx
  4050e4:	xchg   ebx,eax
  4050e5:	dec    esp
  4050e6:	lahf   
  4050e7:	clc    
  4050e8:	mov    dh,0xdf
  4050ea:	(bad)  
  4050eb:	xchg   edx,eax
  4050ec:	int    0x2b
  4050ee:	mov    ebp,0x4a358cb3
  4050f3:	ins    DWORD PTR es:[edi],dx
  4050f4:	push   ecx
  4050f5:	pop    edi
  4050f6:	push   0xbcf940
  4050fb:	cmovb  esp,DWORD PTR [edx]
  4050fe:	mov    dl,0xa7
  405100:	ud0    esi,DWORD PTR [edx+0x7b]
  405104:	jnp    0x40514a
  405106:	mov    ecx,0x323d4d6
  40510b:	mov    dh,0x51
  40510d:	mov    esp,ebx
  40510f:	ret    
  405110:	dec    ebp
  405111:	lock pop edi
  405113:	hlt    
  405114:	add    dh,BYTE PTR [esi+0x4e]
  405117:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405118:	xchg   edx,eax
  405119:	pop    ebp
  40511a:	(bad)  
  40511b:	jne    0x4050af
  40511d:	and    DWORD PTR [eax+0x5],ecx
  405120:	(bad)  
  405121:	pop    ebx
  405122:	xor    eax,0xf59d990a
  405127:	(bad)  
  405128:	stos   BYTE PTR es:[edi],al
  405129:	adc    esp,DWORD PTR [edi-0x26]
  40512c:	inc    ebx
  40512d:	xchg   esi,eax
  40512e:	mov    edx,0xa1c1c7df
  405133:	lea    sp,ds:0x1c58d4ba
  40513a:	aad    0x42
  40513c:	add    dh,BYTE PTR [ecx]
  40513e:	or     eax,0x773a6638
  405143:	cmp    dh,BYTE PTR [edx+0x7fd961c5]
  405149:	xor    eax,0xaf02e6d3
  40514e:	cmc    
  40514f:	mov    edi,0xd1c8dfb5
  405154:	push   ebx
  405155:	arpl   WORD PTR [ebp+0x1d],si
  405158:	jg     0x40516d
  40515a:	setno  bh
  40515d:	lds    eax,FWORD PTR [ebx]
  40515f:	pop    ecx
  405160:	cs hlt 
  405162:	sub    BYTE PTR [esp+esi*4],dh
  405165:	and    bl,BYTE PTR [eax-0x31]
  405168:	or     BYTE PTR [edi+0x1721bf9],al
  40516e:	mov    eax,0x4be8252
  405173:	repz xchg edi,eax
  405175:	jecxz  0x405128
  405177:	adc    DWORD PTR [eax],edx
  405179:	aaa    
  40517a:	add    edx,DWORD PTR [ecx-0x66]
  40517d:	shl    BYTE PTR [edi+0x1de4fd0e],cl
  405183:	jl     0x4051fa
  405185:	cwde   
  405186:	loopne 0x40512a
  405188:	in     al,0xc7
  40518a:	loop   0x405146
  40518c:	aaa    
  40518d:	xchg   edi,eax
  40518e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40518f:	idiv   BYTE PTR [ecx+0x7]
  405192:	jnp    0x4051b0
  405194:	mov    bl,0x81
  405196:	dec    eax
  405197:	sub    ecx,DWORD PTR [edi]
  405199:	dec    esp
  40519a:	xchg   esp,eax
  40519b:	add    edx,DWORD PTR [edi-0x4f9503ed]
  4051a1:	cmc    
  4051a2:	(bad)  
  4051a3:	fsubrp st(4),st
  4051a5:	cmp    DWORD PTR [ecx-0xc],ebp
  4051a8:	lock gs test al,0xff
  4051ac:	add    BYTE PTR [eax-0x1c],0x25
  4051b0:	fs or  eax,0xbcffd898
  4051b6:	inc    BYTE PTR [esi]
  4051b8:	adc    al,0x5a
  4051ba:	out    dx,eax
  4051bb:	popf   
  4051bc:	sbb    al,0xa7
  4051be:	(bad)  [edx]
  4051c0:	out    0x68,al
  4051c2:	fadd   DWORD PTR [edi-0x28]
  4051c5:	xor    cl,BYTE PTR [eax]
  4051c7:	sbb    ecx,0xc6aa3281
  4051cd:	or     DWORD PTR [esi-0x6263b61e],ecx
  4051d3:	imul   ebp,DWORD PTR [esi],0x46e697d0
  4051d9:	ja     0x405251
  4051db:	scas   eax,DWORD PTR es:[edi]
  4051dc:	shr    BYTE PTR [esi-0x57],cl
  4051df:	xchg   ebx,eax
  4051e0:	imul   DWORD PTR [ebx+0xd567fe]
  4051e6:	adc    BYTE PTR [ecx],bl
  4051e8:	push   ebx
  4051e9:	daa    
  4051ea:	jmp    0xf7b65398
  4051ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4051f0:	inc    ecx
  4051f1:	call   0x68f656b7
  4051f6:	mov    cl,0xb7
  4051f8:	and    DWORD PTR [edx+0x6fa2dbbb],esi
  4051fe:	faddp  st(6),st
  405200:	or     DWORD PTR [ebx],ebp
  405202:	xlat   BYTE PTR ds:[ebx]
  405203:	sub    DWORD PTR [edi+0x499501b],esp
  405209:	mov    ch,0xce
  40520b:	hlt    
  40520c:	push   cs
  40520d:	mov    ch,0x5f
  40520f:	jb     0x4051b7
  405211:	lods   al,BYTE PTR ds:[esi]
  405212:	test   dh,0x42
  405215:	mov    bl,0xdf
  405217:	jecxz  0x405213
  405219:	jl     0x405262
  40521b:	rcl    DWORD PTR [esi+0x3697328e],0x11
  405222:	in     eax,0x90
  405224:	jecxz  0x405296
  405226:	mov    ebp,0xe3fcf819
  40522b:	fadd   DWORD PTR [ebx+0x6]
  40522e:	sub    eax,0xbc48b316
  405233:	push   esi
  405234:	xor    ebx,DWORD PTR [ebx+ebx*8-0x3bb1498b]
  40523b:	pop    edx
  40523c:	retf   0x5fc6
  40523f:	sahf   
  405240:	dec    eax
  405241:	push   ds
  405242:	call   0xf19d:0x4c1aa4a6
  405249:	or     bh,BYTE PTR [esi]
  40524b:	nop
  40524c:	adc    eax,0xb0b0e8f
  405251:	cmp    al,0x13
  405253:	mov    bh,0x10
  405255:	iret   
  405256:	inc    ecx
  405257:	jg     0x4051f4
  405259:	mov    BYTE PTR [ebp-0x61],bl
  40525c:	xchg   ebx,eax
  40525d:	push   cs
  40525e:	das    
  40525f:	xlat   BYTE PTR ds:[ebx]
  405260:	pop    edi
  405261:	lods   al,BYTE PTR ds:[esi]
  405262:	xchg   ebp,eax
  405263:	mov    ebp,0x9901cb93
  405268:	mov    edi,0xf673c048
  40526d:	retf   0x7bb2
  405270:	fld    TBYTE PTR ds:0x3bf632b4
  405276:	int    0x73
  405278:	or     ecx,DWORD PTR [esi+esi*1+0x6567fde1]
  40527f:	sub    BYTE PTR [ebp-0x1],al
  405282:	and    DWORD PTR [edi-0x4c],ebx
  405285:	ds in  al,dx
  405287:	mov    BYTE PTR [edx],bl
  405289:	in     eax,dx
  40528a:	jne    0x4052b7
  40528c:	inc    edi
  40528d:	or     bl,ah
  40528f:	sbb    DWORD PTR [esi],esi
  405291:	arpl   dx,dx
  405293:	aas    
  405294:	mov    ecx,0xa4c145eb
  405299:	ss stos DWORD PTR es:[edi],eax
  40529b:	test   DWORD PTR [esi-0x5c426676],esp
  4052a1:	hlt    
  4052a2:	lods   eax,DWORD PTR ds:[esi]
  4052a3:	loop   0x4052a7
  4052a5:	pop    edi
  4052a6:	dec    ebp
  4052a7:	cmp    cl,dh
  4052a9:	xor    ch,BYTE PTR [eax+0x43]
  4052ac:	ret    0xfbc7
  4052af:	cmp    al,0xef
  4052b1:	mov    ecx,DWORD PTR [ecx]
  4052b3:	int    0x2f
  4052b5:	lock jecxz 0x4052d8
  4052b8:	add    al,0x17
  4052ba:	enter  0x6ceb,0xd4
  4052be:	dec    esi
  4052bf:	mov    dl,0x59
  4052c1:	aam    0x69
  4052c3:	push   bp
  4052c5:	sbb    edx,DWORD PTR [esi+0x5d]
  4052c8:	mov    ecx,0xd451d89d
  4052cd:	mov    edi,0x744e55c6
  4052d2:	rol    BYTE PTR [ecx+ebp*4],cl
  4052d5:	fs inc esi
  4052d7:	add    eax,0x6cebdcfe
  4052dc:	lods   al,BYTE PTR ds:[esi]
  4052dd:	and    ebp,DWORD PTR [ecx]
  4052df:	adc    al,BYTE PTR [ebx]
  4052e1:	jmp    0x6d8:0x4589c86e
  4052e8:	jp     0x4052ac
  4052ea:	mov    ebp,0x4f781775
  4052ef:	inc    eax
  4052f0:	jmp    0x4052f4
  4052f2:	or     DWORD PTR [ecx],edi
  4052f4:	adc    al,0x96
  4052f6:	call   0x1568:0x80265598
  4052fd:	sbb    al,0x73
  4052ff:	daa    
  405300:	push   ebp
  405301:	cmp    ch,BYTE PTR [edi-0x3ca12bf6]
  405307:	and    al,0x20
  405309:	xor    BYTE PTR [ebx],0xcf
  40530c:	in     al,dx
  40530d:	fs leave 
  40530f:	mov    BYTE PTR [edx-0x44],ch
  405312:	out    0x35,al
  405314:	mov    edi,0x24942f11
  405319:	sti    
  40531a:	push   eax
  40531b:	pusha  
  40531c:	add    DWORD PTR [edx+ebx*2],ebx
  40531f:	mov    ds:0x2d0fffda,al
  405324:	cwde   
  405325:	div    DWORD PTR [esi-0x4ba2f328]
  40532b:	jbe    0x405395
  40532d:	hlt    
  40532e:	xchg   BYTE PTR [esi],dl
  405330:	sti    
  405331:	ror    DWORD PTR [ecx],cl
  405333:	add    BYTE PTR [eax+0x2c],al
  405336:	mov    ecx,0x2d114423
  40533b:	in     al,0x8a
  40533d:	xchg   ebx,eax
  40533e:	push   edi
  40533f:	lods   eax,DWORD PTR ds:[esi]
  405340:	out    0xde,al
  405342:	int    0xba
  405344:	ror    BYTE PTR [eax],0x74
  405347:	cmp    BYTE PTR [eax],dl
  405349:	jmp    0x405340
  40534b:	xchg   ebp,eax
  40534c:	xchg   ecx,eax
  40534d:	shl    DWORD PTR [ecx-0x48f299a6],0x42
  405354:	cmp    eax,0xf6557ce4
  405359:	cmovp  edi,DWORD PTR [ecx]
  40535c:	bt     DWORD PTR [ebx],edx
  40535f:	push   edi
  405360:	mov    es,WORD PTR [esi+0x5e]
  405363:	sbb    ebp,DWORD PTR [edi-0x39539ada]
  405369:	sbb    BYTE PTR [ebx-0x1c7313ee],ah
  40536f:	cdq    
  405370:	and    eax,0x98065f83
  405375:	retf   
  405376:	push   cs
  405377:	int    0x5a
  405379:	and    DWORD PTR [ecx+ecx*8-0x66707e9d],0x71bee7b3
  405384:	push   0x23
  405386:	mov    ds:0xd47ecaf5,al
  40538b:	pop    es
  40538c:	mov    ds:0x597dc2f8,eax
  405391:	iret   
  405392:	jns    0x40540e
  405394:	adc    eax,0x74ead6f0
  405399:	(bad)  
  40539a:	repnz les edx,FWORD PTR [eax]
  40539d:	and    BYTE PTR ds:0xcd31dd43,dh
  4053a3:	fwait
  4053a4:	sub    bh,dh
  4053a6:	ins    BYTE PTR es:[edi],dx
  4053a7:	out    dx,eax
  4053a8:	aam    0x34
  4053aa:	clc    
  4053ab:	or     DWORD PTR [ecx-0x37],ebp
  4053ae:	jecxz  0x4053e3
  4053b0:	repnz add ebp,edi
  4053b3:	gs cmp eax,0x1ae697ab
  4053b9:	add    edi,DWORD PTR [ecx*4+0x438843ca]
  4053c0:	cmp    ch,BYTE PTR [ebx+0x5]
  4053c3:	cwde   
  4053c4:	push   ebp
  4053c5:	in     eax,dx
  4053c6:	mov    ah,0xc9
  4053c8:	mov    ebp,0x15e32e4a
  4053cd:	push   esi
  4053ce:	data16 or bh,BYTE PTR ds:0x5c9f451c
  4053d5:	inc    edx
  4053d6:	push   ss
  4053d7:	rcl    BYTE PTR [ecx],cl
  4053d9:	add    bh,ch
  4053db:	mov    DWORD PTR [ecx+0x32],edi
  4053de:	push   esp
  4053df:	(bad)  
  4053e0:	outs   dx,DWORD PTR ds:[esi]
  4053e1:	pusha  
  4053e2:	or     BYTE PTR [eax-0x4146299e],0xe6
  4053e9:	out    0x51,al
  4053eb:	ins    BYTE PTR es:[edi],dx
  4053ec:	mov    dh,dl
  4053ee:	or     edx,DWORD PTR [esi+0x7c1b7325]
  4053f4:	fnstsw WORD PTR [ebx+0x2d235fba]
  4053fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4053fb:	dec    edx
  4053fc:	mov    DWORD PTR [ecx+0x7a86411b],esi
  405402:	aas    
  405403:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405404:	hlt    
  405405:	ja     0x4053f1
  405407:	mov    dh,0xdb
  405409:	cmp    BYTE PTR [ebp-0x5d],bl
  40540c:	hlt    
  40540d:	(bad)  
  40540e:	repnz rol BYTE PTR [ebp-0xd4928d1],cl
  405415:	cmp    bh,BYTE PTR [ebx]
  405417:	or     BYTE PTR [ecx-0x5d],bl
  40541a:	mov    esi,0x10b8f8a
  40541f:	loope  0x40542c
  405421:	cld    
  405422:	xor    eax,0xee63e06e
  405427:	outs   dx,DWORD PTR ds:[esi]
  405428:	add    al,0xa4
  40542a:	shr    BYTE PTR [ebp+0x10e48e09],cl
  405430:	cmp    al,dl
  405432:	and    al,0x4c
  405434:	pop    ecx
  405435:	(bad)  
  405436:	mov    eax,ds:0x93921786
  40543b:	ss mov esi,0x7fc0ac00
  405441:	(bad)  
  405442:	push   esi
  405443:	or     cl,bh
  405445:	(bad)  
  405446:	out    0x59,al
  405448:	aas    
  405449:	sbb    cl,BYTE PTR [esi+0x75]
  40544c:	(bad)  
  40544d:	mov    al,0x5d
  40544f:	in     al,0xf9
  405451:	inc    esp
  405452:	fs pop ecx
  405454:	loope  0x40540d
  405456:	adc    ah,BYTE PTR [ecx-0x2d]
  405459:	jbe    0x405487
  40545b:	call   0x44e4:0x44f82d99
  405462:	lods   al,BYTE PTR ds:[esi]
  405463:	xchg   ebx,eax
  405464:	out    0xda,al
  405466:	js     0x40546b
  405468:	pusha  
  405469:	inc    ebp
  40546a:	jle    0x4054d1
  40546c:	int3   
  40546d:	lock inc esp
  40546f:	test   al,0x40
  405471:	and    eax,0xf18231ad
  405476:	out    0x7a,eax
  405478:	inc    esp
  405479:	leave  
  40547a:	push   esp
  40547b:	mov    edx,DWORD PTR [esi+ecx*8]
  40547e:	cmc    
  40547f:	fisubr DWORD PTR [eax-0xd10fb5b]
  405485:	sub    al,0x50
  405487:	jecxz  0x405482
  405489:	leave  
  40548a:	idiv   DWORD PTR [edx-0x76]
  40548d:	into   
  40548e:	xor    eax,0x5ce3b38d
  405493:	xchg   BYTE PTR [edi+eax*8+0x5a],bl
  405497:	(bad)  
  405498:	leave  
  405499:	out    dx,al
  40549a:	adc    BYTE PTR [ecx],ch
  40549c:	pushf  
  40549d:	popa   
  40549e:	jle    0x4054a3
  4054a0:	jne    0x405510
  4054a2:	cmp    BYTE PTR [edx+0x61],ah
  4054a5:	pop    edi
  4054a6:	in     eax,dx
  4054a7:	push   edi
  4054a8:	push   edi
  4054a9:	lock xor BYTE PTR [edi],cl
  4054ac:	sub    al,0xf4
  4054ae:	leave  
  4054af:	aam    0xe6
  4054b1:	iret   
  4054b2:	push   edx
  4054b3:	mov    ebp,fs
  4054b5:	popf   
  4054b6:	enter  0xc56f,0xc6
  4054ba:	mov    ebp,DWORD PTR [edx+eiz*4+0x4e]
  4054be:	push   eax
  4054bf:	cmp    edx,DWORD PTR [edi+0x1e]
  4054c2:	lods   eax,DWORD PTR ds:[esi]
  4054c3:	rep stos BYTE PTR es:[edi],al
  4054c5:	inc    edi
  4054c6:	test   eax,0xf7f017d0
  4054cb:	xchg   esp,eax
  4054cc:	ins    BYTE PTR es:[edi],dx
  4054cd:	xchg   edi,eax
  4054ce:	into   
  4054cf:	mov    ebp,0xdc7792b6
  4054d4:	in     eax,dx
  4054d5:	mov    ebx,0x12b5cdec
  4054da:	and    BYTE PTR [edx-0x7dcf005],dl
  4054e0:	mov    edx,0x32809af4
  4054e5:	add    BYTE PTR [ebx+0x42],ah
  4054e8:	pop    es
  4054e9:	lock mov cl,0x7a
  4054ec:	mov    ss,WORD PTR [esi+0x5e]
  4054ef:	hlt    
  4054f0:	loope  0x40553e
  4054f2:	xchg   esi,eax
  4054f3:	sbb    BYTE PTR [ebx],bl
  4054f5:	test   BYTE PTR [ebx],bl
  4054f7:	out    dx,al
  4054f8:	icebp  
  4054f9:	stc    
  4054fa:	test   DWORD PTR [esi+esi*4-0x79],ecx
  4054fe:	cmp    al,0xcb
  405500:	inc    ecx
  405501:	out    dx,eax
  405502:	and    BYTE PTR [ecx+0x3efc86b3],cl
  405508:	popf   
  405509:	dec    ebp
  40550a:	push   0xecf33aa8
  40550f:	jecxz  0x405580
  405511:	int3   
  405512:	scas   eax,DWORD PTR es:[edi]
  405513:	mov    eax,ds:0x5ad80391
  405518:	push   edi
  405519:	in     al,dx
  40551a:	add    eax,0x42a31415
  40551f:	xor    eax,0x848da7cd
  405524:	ins    BYTE PTR es:[edi],dx
  405525:	mov    ebp,0x47a4abe9
  40552a:	hlt    
  40552b:	js     0x4054ef
  40552d:	je     0x405519
  40552f:	inc    ecx
  405530:	jno    0x40552e
  405532:	repz out 0x29,eax
  405535:	mov    ecx,DWORD PTR [esi-0x6c14f64e]
  40553b:	pop    edx
  40553c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40553d:	mov    al,0x78
  40553f:	stos   DWORD PTR es:[edi],eax
  405540:	ror    cl,cl
  405542:	hlt    
  405543:	adc    BYTE PTR [eax+0x6a7548ad],bl
  405549:	out    0xd5,al
  40554b:	xlat   BYTE PTR ds:[ebx]
  40554c:	and    BYTE PTR [edi-0xcbbbc18],bl
  405552:	jmp    0xb7d4:0xc046c619
  405559:	push   es
  40555a:	xor    esi,DWORD PTR [ecx]
  40555c:	dec    ecx
  40555d:	fs add al,0xf2
  405560:	jae    0x4055d7
  405562:	out    0xf2,eax
  405564:	adc    bh,bh
  405566:	fcom   QWORD PTR [edx]
  405568:	out    dx,al
  405569:	icebp  
  40556a:	xor    esi,DWORD PTR [esi-0x4eff2737]
  405570:	cld    
  405571:	enter  0x75,0xc
  405575:	push   esi
  405576:	(bad)  
  405577:	jae    0x4055df
  405579:	jae    0xf524752
  40557f:	cmp    DWORD PTR [edi-0x46],ebx
  405582:	mov    bh,0x91
  405584:	dec    ebp
  405585:	xor    DWORD PTR [ecx+eiz*4+0xfd47ad7],ebx
  40558c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40558d:	cmp    eax,0x1cb172bd
  405592:	popa   
  405593:	test   eax,0xc3f055a2
  405598:	push   ss
  405599:	aas    
  40559a:	mov    DWORD PTR [eax],0x33169465
  4055a0:	sub    cl,bh
  4055a2:	fwait
  4055a3:	cmp    al,0x5e
  4055a5:	pop    esi
  4055a6:	jns    0x4055a9
  4055a8:	pop    edx
  4055a9:	test   al,0x4f
  4055ab:	jl     0x4055aa
  4055ad:	push   edi
  4055ae:	or     al,0x40
  4055b0:	repnz cmc 
  4055b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4055b3:	add    BYTE PTR ds:0x4a4f023,bh
  4055b9:	xchg   BYTE PTR ds:0x39d154c7,ah
  4055bf:	xchg   edi,eax
  4055c0:	iret   
  4055c1:	mov    ecx,0xcfd38516
  4055c6:	rcr    BYTE PTR [edi-0x1256c257],1
  4055cc:	sbb    bl,ah
  4055ce:	pop    edx
  4055cf:	cwde   
  4055d0:	iret   
  4055d1:	fwait
  4055d2:	sub    esi,DWORD PTR [edx]
  4055d4:	outs   dx,BYTE PTR ds:[esi]
  4055d5:	push   ebp
  4055d6:	dec    esi
  4055d7:	loope  0x405625
  4055d9:	inc    edi
  4055da:	dec    ecx
  4055db:	xchg   dl,al
  4055dd:	(bad)  
  4055de:	mov    ah,0x27
  4055e0:	xor    ch,BYTE PTR [edi]
  4055e2:	pop    esp
  4055e3:	nop
  4055e4:	inc    ebp
  4055e5:	dec    edi
  4055e6:	fistp  WORD PTR [edx-0x1f116ccb]
  4055ec:	jns    0x405657
  4055ee:	mov    WORD PTR [ebx],ds
  4055f0:	add    edi,DWORD PTR [esi]
  4055f2:	add    BYTE PTR [esi+0x54],bl
  4055f5:	mov    esp,0xf6340f18
  4055fa:	retf   0xd49
  4055fd:	add    DWORD PTR [ecx-0x411a045e],eax
  405603:	xor    al,0x99
  405605:	jb     0x405645
  405607:	inc    esi
  405608:	loop   0x405600
  40560a:	rcr    ch,0xa5
  40560d:	jb     0x40564a
  40560f:	mov    bh,0xc0
  405611:	scas   eax,DWORD PTR es:[edi]
  405612:	aam    0x41
  405614:	push   ebp
  405615:	aam    0xad
  405617:	jnp    0x4055a8
  405619:	test   DWORD PTR [ebx+0x78fdef87],0x33c97d86
  405623:	scas   eax,DWORD PTR es:[edi]
  405624:	rcl    DWORD PTR [esi+0x1],1
  405627:	add    dl,BYTE PTR [eax+ebx*8+0x7f55a405]
  40562e:	jae    0x405601
  405630:	lahf   
  405631:	sar    BYTE PTR [esi+0x3b],1
  405634:	fisub  DWORD PTR [esi-0x68]
  405637:	mov    bh,0x3a
  40563a:	xor    dl,BYTE PTR [esi-0x7a]
  40563d:	loope  0x405603
  40563f:	jbe    0x40562e
  405641:	in     al,0xa2
  405643:	push   edi
  405644:	stc    
  405645:	data16 xor bh,bh
  405648:	in     eax,0x47
  40564a:	cmp    dh,0x5e
  40564d:	repz fcom QWORD PTR [ebx+0x9]
  405651:	in     al,dx
  405652:	dec    ecx
  405653:	fsubr  QWORD PTR [esi-0x3771b4c3]
  405659:	adc    ah,BYTE PTR [ebx+0x44812ec4]
  40565f:	mov    eax,ds:0x4af391b4
  405664:	adc    edx,ebx
  405666:	std    
  405667:	fwait
  405668:	jne    0x405603
  40566a:	outs   dx,DWORD PTR ds:[esi]
  40566b:	and    BYTE PTR [esi+0x7166cf3d],ch
  405671:	dec    edx
  405672:	xor    al,0xab
  405674:	mov    eax,ds:0xbcd7828d
  405679:	int    0xeb
  40567b:	push   ebx
  40567c:	test   eax,0xbbda2e1b
  405681:	in     eax,0xdb
  405683:	cmp    eax,0x9cd5761a
  405688:	lock sub ebp,DWORD PTR [ecx-0x7132011b]
  40568f:	in     al,0x64
  405691:	add    bh,BYTE PTR [esi+0x45]
  405694:	jp     0x4056d3
  405696:	jae    0x405704
  405698:	adc    ecx,DWORD PTR cs:[bx+di-0x634c]
  40569e:	sbb    ah,al
  4056a0:	and    ah,BYTE PTR [ebp+0x689cb188]
  4056a6:	(bad)
  4056a9:	icebp  
  4056aa:	fcmovnu st,st(7)
  4056ac:	fcmove st,st(0)
  4056ae:	pop    eax
  4056af:	jns    0x4056ea
  4056b1:	jns    0x405701
  4056b3:	and    BYTE PTR [ecx],bl
  4056b5:	cwde   
  4056b6:	xor    edx,0xcfaf0a3d
  4056bc:	mov    dl,0x6e
  4056be:	test   dl,al
  4056c0:	adc    DWORD PTR [ecx+eax*2],esp
  4056c3:	jno    0xe12b13e
  4056c9:	(bad)  
  4056ca:	cmp    ebp,DWORD PTR [eax-0x7e]
  4056cd:	cmp    eax,0xb28156b0
  4056d2:	sar    DWORD PTR [edi-0x532fc367],0x2c
  4056d9:	jo     0x405675
  4056db:	sbb    DWORD PTR ds:0x36d9c185,ebp
  4056e1:	bound  esi,QWORD PTR [eax-0x8]
  4056e4:	lods   eax,DWORD PTR ds:[esi]
  4056e5:	jbe    0x40570c
  4056e7:	xor    esi,esi
  4056e9:	outs   dx,BYTE PTR ds:[esi]
  4056ea:	jle    0x4056f9
  4056ec:	pop    ebx
  4056ed:	pop    esp
  4056ee:	cmp    eax,0xa7c72f63
  4056f3:	(bad)  
  4056f4:	pop    eax
  4056f5:	mov    esp,0xd9e07e9d
  4056fa:	adc    al,0xc4
  4056fc:	inc    esp
  4056fd:	stos   DWORD PTR es:[edi],eax
  4056fe:	mov    dl,0xb9
  405700:	add    al,dl
  405702:	pop    eax
  405703:	inc    edi
  405704:	(bad)  
  405705:	sbb    DWORD PTR [eax+0x61],edx
  405708:	push   ecx
  40570a:	adc    eax,0xc2d1121a
  40570f:	mov    cl,0x65
  405711:	mov    esi,0x8761b31d
  405716:	push   0x1151cd69
  40571b:	(bad)  
  40571c:	int3   
  40571d:	out    0xec,eax
  40571f:	push   0xffffff83
  405721:	das    
  405722:	loopne 0x4056c3
  405724:	push   cs
  405725:	push   ecx
  405726:	mov    cl,0xe
  405728:	cmp    eax,0x733bc638
  40572d:	xchg   ebp,eax
  40572e:	or     eax,0x8dc445bf
  405733:	lea    edx,[edx+0x37]
  405736:	ins    BYTE PTR es:[edi],dx
  405737:	aad    0x81
  405739:	dec    edi
  40573a:	aaa    
  40573b:	into   
  40573c:	push   cs
  40573d:	pop    ss
  40573e:	mov    ah,0x91
  405740:	in     eax,0xca
  405742:	mov    edi,0x3db99daa
  405747:	in     al,dx
  405748:	fnstcw WORD PTR [eax]
  40574a:	or     al,0x37
  40574c:	jo     0x4057ae
  40574e:	fwait
  40574f:	dec    edi
  405750:	mov    ebx,0xef593a71
  405755:	sbb    eax,0x8f4d397
  40575a:	push   ss
  40575b:	pop    ss
  40575c:	and    BYTE PTR ds:[esi-0x15],0x8e
  405761:	retf   
  405762:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405763:	mov    ds:0x760ff188,eax
  405768:	in     eax,dx
  405769:	fdiv   st(6),st
  40576b:	mov    dh,0x82
  40576d:	inc    ecx
  40576e:	sbb    ebx,DWORD PTR [edi]
  405770:	mov    edi,esi
  405772:	and    DWORD PTR [edx],edx
  405774:	fcmovbe st,st(2)
  405776:	and    al,0x4f
  405778:	fwait
  405779:	into   
  40577a:	jmp    0x9d63:0xd72f7515
  405781:	or     ecx,DWORD PTR [esi+0x15]
  405784:	out    dx,al
  405785:	inc    edi
  405786:	push   0x46b0bdb8
  40578b:	in     al,dx
  40578c:	out    0x8c,eax
  40578e:	sub    DWORD PTR [edx+0x5a],0x1d3cd6fa
  405795:	(bad)  
  405796:	(bad)  
  405798:	je     0x405810
  40579a:	sbb    dl,BYTE PTR [ebx-0x78]
  40579d:	add    cl,BYTE PTR [esi+0x6]
  4057a0:	mov    eax,ds:0x91b1f925
  4057a5:	retf   0x1dab
  4057a8:	push   esi
  4057a9:	sbb    eax,0xc2ab33de
  4057ae:	cmp    al,0x77
  4057b0:	push   ebp
  4057b1:	ss scas al,BYTE PTR es:[edi]
  4057b3:	push   ds
  4057b4:	cmc    
  4057b5:	sub    BYTE PTR [edx+edi*2-0x2675ddea],cl
  4057bc:	adc    BYTE PTR [ecx],ch
  4057be:	push   ebp
  4057bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4057c0:	stos   BYTE PTR es:[edi],al
  4057c1:	scas   al,BYTE PTR es:[edi]
  4057c2:	in     al,dx
  4057c3:	rol    DWORD PTR [ebx+0x73cd4259],0xb8
  4057ca:	mov    bl,0xdd
  4057cc:	sub    al,0xba
  4057ce:	fsub   QWORD PTR [eax+0x16]
  4057d1:	cmp    dh,BYTE PTR [esi]
  4057d3:	lahf   
  4057d4:	xchg   esi,eax
  4057d5:	ficom  DWORD PTR [ebp+0xfbf879b]
  4057db:	(bad)  
  4057dc:	mov    es,WORD PTR [edi-0x78fcd815]
  4057e2:	xchg   al,ch
  4057e4:	ret    0x3a84
  4057e7:	js     0x4057fa
  4057e9:	add    DWORD PTR [ebp+0x2dc2b50c],esp
  4057ef:	imul   esi,edi,0x2b
  4057f2:	xor    dh,BYTE PTR [ecx-0x22380f91]
  4057f8:	jmp    0xbba89562
  4057fd:	jge    0x4057c7
  4057ff:	dec    esi
  405800:	test   DWORD PTR [eax-0x61830e9d],ebp
  405806:	mov    ecx,0xee3aad20
  40580b:	mov    al,ds:0xb432e83f
  405810:	push   eax
  405811:	lds    eax,FWORD PTR [esi+0x33e79d1b]
  405817:	dec    esi
  405818:	adc    ch,al
  40581a:	mov    ecx,0xf3196fd6
  40581f:	add    eax,0x21debf3b
  405824:	imul   eax,DWORD PTR [ebp-0x7e],0xf45e92ec
  40582b:	clc    
  40582c:	add    bl,BYTE PTR [edx]
  40582e:	xchg   esi,eax
  40582f:	pop    esp
  405830:	jp     0x40586c
  405832:	mov    ah,0x86
  405834:	pop    es
  405835:	je     0x405849
  405837:	ret    
  405838:	loope  0x405889
  40583a:	jb     0x405827
  40583c:	xchg   ebp,eax
  40583d:	fcom   DWORD PTR [ebp+0x22a195bf]
  405843:	mov    WORD PTR [ecx-0x764a8ab0],fs
  405849:	push   ss
  40584a:	dec    esp
  40584b:	lods   al,BYTE PTR ds:[esi]
  40584c:	and    eax,edx
  40584e:	sbb    eax,0x8d061913
  405853:	ins    BYTE PTR es:[edi],dx
  405854:	pop    ebx
  405855:	dec    ebp
  405856:	lods   al,BYTE PTR ds:[esi]
  405857:	push   ebp
  405858:	lods   al,BYTE PTR ds:[esi]
  405859:	lods   eax,DWORD PTR ds:[esi]
  40585a:	aas    
  40585b:	ja     0x4058cf
  40585d:	push   ss
  40585e:	retf   0x275f
  405861:	js     0x405854
  405863:	jno    0x4058c7
  405865:	push   cs
  405866:	and    al,BYTE PTR [eax]
  405868:	cdq    
  405869:	ins    BYTE PTR es:[edi],dx
  40586a:	or     al,0xe8
  40586c:	jp     0x405856
  40586e:	sbb    eax,0x70e70185
  405873:	in     al,0x70
  405875:	fbld   TBYTE PTR [edx-0x18]
  405878:	mov    ebp,0x5413994d
  40587d:	test   al,0x28
  40587f:	fistp  QWORD PTR [esi]
  405881:	xlat   BYTE PTR ds:[ebx]
  405882:	icebp  
  405883:	add    DWORD PTR [ecx-0x56],ebx
  405886:	int3   
  405887:	sbb    DWORD PTR [ebp-0x40],0xdaafb79a
  40588e:	push   eax
  40588f:	(bad)  
  405890:	xor    BYTE PTR ds:0x22d509fa,dh
  405896:	fwait
  405897:	jo     0x4058e4
  405899:	ss jb  0x4058c8
  40589c:	mov    edi,eax
  40589e:	scas   al,BYTE PTR es:[edi]
  40589f:	retf   0x6dcc
  4058a2:	mov    eax,0x1e55e3c9
  4058a7:	mov    ah,0xdb
  4058a9:	fcmovnbe st,st(0)
  4058ab:	jno    0x405918
  4058ad:	sbb    al,0x8a
  4058af:	fisub  DWORD PTR [edx-0x7a]
  4058b2:	jle    0x405870
  4058b4:	ins    BYTE PTR es:[edi],dx
  4058b5:	sub    eax,0x5d26f26
  4058ba:	push   edx
  4058bb:	jl     0x40591e
  4058bd:	add    dh,BYTE PTR [ecx-0xd97eb05]
  4058c3:	repz lock mov ch,0x93
  4058c7:	push   edx
  4058c8:	cmp    bh,BYTE PTR [edi]
  4058ca:	cmp    DWORD PTR [esi+0x74],eax
  4058cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058ce:	push   0xcc3b2853
  4058d3:	pop    es
  4058d4:	call   0x5176:0xb90d890e
  4058db:	add    BYTE PTR [eax+ebp*4],bh
  4058de:	mov    esp,0x99c9dc9f
  4058e3:	mov    edi,es
  4058e5:	sbb    eax,0x57292886
  4058ea:	inc    esi
  4058eb:	out    dx,al
  4058ec:	pusha  
  4058ed:	inc    edi
  4058ee:	lock and ecx,DWORD PTR [ecx-0x59af2b61]
  4058f5:	jmp    0x40589d
  4058f7:	xchg   DWORD PTR [ebp+0x253a2e13],eax
  4058fd:	dec    edi
  4058fe:	mov    eax,0x12acf7be
  405903:	xchg   ebp,eax
  405904:	xor    BYTE PTR [ecx-0x5d],dh
  405907:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405908:	xor    BYTE PTR [ecx-0x4b],al
  40590b:	dec    eax
  40590c:	cmp    eax,0xe7403d64
  405911:	jbe    0x40596c
  405913:	and    BYTE PTR [ebx-0x36],ch
  405916:	xor    eax,0xb42637bc
  40591b:	dec    esp
  40591c:	xor    eax,eax
  40591e:	mov    eax,0xf0ba6105
  405923:	js     0x40590d
  405925:	push   0x3b5c9dd6
  40592a:	xchg   bx,ax
  40592c:	sub    BYTE PTR [esi-0x1c6124c2],0xae
  405933:	pop    eax
  405934:	into   
  405935:	iret   
  405936:	int3   
  405937:	push   ecx
  405938:	sbb    ebp,DWORD PTR [esp+edx*8]
  40593b:	xchg   edi,eax
  40593c:	sbb    eax,0x592cd79a
  405941:	pop    ds
  405942:	fwait
  405943:	xchg   ecx,eax
  405944:	fistp  DWORD PTR [edx+0x3e]
  405947:	mov    WORD PTR [bx+si+0xbfa],ss
  40594c:	push   ebp
  40594d:	aas    
  40594e:	mov    esp,0x36b15052
  405953:	fdiv   st(3),st
  405955:	sti    
  405956:	enter  0x60a9,0xf5
  40595a:	inc    esi
  40595b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40595c:	shr    DWORD PTR [esi-0xb5c7acb],0x4a
  405963:	mov    ecx,DWORD PTR [eax-0x3f70baeb]
  405969:	xor    DWORD PTR [edx*1+0x591ee7a1],ebp
  405970:	jge    0x4058fe
  405972:	in     al,0x67
  405974:	or     eax,0xba916b43
  405979:	aad    0x52
  40597b:	mov    al,ds:0xc01ea822
  405980:	retf   
  405981:	inc    ebx
  405982:	add    al,0x84
  405984:	mov    dh,0x56
  405986:	push   0x23
  405988:	sub    DWORD PTR [edx],0xffffffd0
  40598b:	sbb    ch,BYTE PTR [ebp-0x44]
  40598e:	mov    ecx,0x55fa500d
  405993:	imul   edx,esp,0x136b083c
  405999:	pop    esi
  40599a:	sahf   
  40599b:	inc    esi
  40599c:	mov    al,0x9d
  40599e:	adc    al,0x1
  4059a0:	push   ss
  4059a1:	mov    BYTE PTR [ecx],bh
  4059a3:	out    0xc2,al
  4059a5:	and    BYTE PTR [eax],cl
  4059a7:	fldenv [eax+0x43bd0106]
  4059ad:	push   ebx
  4059ae:	fsub   st(6),st
  4059b0:	mov    cl,BYTE PTR [eax-0x24]
  4059b3:	dec    edx
  4059b4:	(bad)  
  4059b6:	inc    ebx
  4059b7:	(bad)
  4059bc:	dec    eax
  4059bd:	into   
  4059be:	loopne 0x4059e6
  4059c0:	push   0x882b1822
  4059c5:	call   0xc9ecfde9
  4059ca:	imul   esi,DWORD PTR [edi-0x3a56ca68],0x7d
  4059d1:	lods   al,BYTE PTR ds:[esi]
  4059d2:	fs rcr esi,1
  4059d5:	loop   0x40595b
  4059d7:	inc    esi
  4059d8:	mov    ah,0x23
  4059da:	aam    0x20
  4059dc:	aam    0x9
  4059de:	inc    esi
  4059df:	outs   dx,DWORD PTR ds:[esi]
  4059e0:	jp     0x405a0b
  4059e2:	dec    ecx
  4059e3:	out    dx,al
  4059e4:	fld    QWORD PTR [esi]
  4059e6:	sbb    al,0x77
  4059e8:	inc    ebp
  4059e9:	sub    eax,0x2505657c
  4059ee:	push   ecx
  4059ef:	pop    ds
  4059f0:	jnp    0x4059af
  4059f2:	mov    dh,BYTE PTR [ecx+0x5e]
  4059f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059f6:	repz pop esp
  4059f8:	pop    edi
  4059f9:	scas   eax,DWORD PTR es:[edi]
  4059fa:	adc    al,0xfe
  4059fc:	leave  
  4059fd:	jecxz  0x40598b
  4059ff:	(bad)  
  405a00:	sub    esi,DWORD PTR [edi+0x37]
  405a03:	sbb    al,0x66
  405a05:	leave  
  405a06:	(bad)  
  405a08:	fld    TBYTE PTR [ecx]
  405a0a:	ss ins DWORD PTR es:[edi],dx
  405a0c:	icebp  
  405a0d:	jecxz  0x40598f
  405a0f:	cmp    DWORD PTR ds:0x2997a4d5,ebx
  405a15:	lods   eax,DWORD PTR ds:[esi]
  405a16:	inc    esp
  405a17:	adc    eax,ebp
  405a19:	out    0x0,eax
  405a1b:	xor    al,0x68
  405a1d:	sbb    ecx,DWORD PTR [ebp-0x57]
  405a20:	sub    BYTE PTR [esi*4-0x35981e75],dl
  405a27:	add    ebp,edi
  405a29:	adc    DWORD PTR ds:0x56f3614a,ebx
  405a2f:	push   esi
  405a30:	mov    eax,0xae3b9a8a
  405a35:	push   ebx
  405a36:	stos   DWORD PTR es:[edi],eax
  405a37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a38:	xchg   ecx,eax
  405a39:	repnz (bad) 
  405a3b:	ror    ecx,1
  405a3d:	or     al,0xd3
  405a3f:	fld    QWORD PTR ds:0x53027f0d
  405a45:	stc    
  405a46:	and    ah,cl
  405a48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a49:	dec    eax
  405a4a:	push   ecx
  405a4b:	sar    BYTE PTR [ebp-0x3b122eec],0xed
  405a52:	cmc    
  405a53:	xor    BYTE PTR [ebx],ch
  405a55:	retf   0x7db5
  405a58:	(bad)  
  405a59:	sti    
  405a5a:	inc    ebp
  405a5b:	arpl   WORD PTR [eax+ebx*4-0x53a24bc1],cx
  405a62:	mov    ?,WORD PTR [ecx+eiz*2+0x6fac7e66]
  405a69:	xchg   ebp,eax
  405a6a:	mov    edx,0x90def86f
  405a6f:	inc    ecx
  405a70:	or     DWORD PTR [ecx],edx
  405a72:	add    ah,BYTE PTR [edx+0x1001d473]
  405a78:	xchg   ecx,eax
  405a79:	ja     0x405a03
  405a7b:	repz clc 
  405a7d:	test   DWORD PTR [ebx-0x24],0x2c0fde55
  405a84:	sub    al,0x91
  405a86:	fidiv  WORD PTR [esi+0x26]
  405a89:	bound  esp,QWORD PTR [ebp+ecx*4+0xf31d06c]
  405a90:	xor    al,0xa0
  405a92:	retf   0xd98d
  405a95:	cmp    al,0x3f
  405a97:	test   DWORD PTR es:[ebp+0x1e],0xced8bca5
  405a9f:	cmp    al,0xe9
  405aa1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405aa2:	sbb    esp,DWORD PTR [edi+0x2c48cee4]
  405aa8:	call   0x3833838b
  405aad:	mov    ah,0xed
  405aaf:	cmp    BYTE PTR [esi+ecx*4],bh
  405ab2:	cmp    al,0x82
  405ab4:	pop    ss
  405ab5:	(bad)  
  405ab7:	xor    al,0x4e
  405ab9:	sub    dh,BYTE PTR gs:[ebx-0x40]
  405abd:	mov    ah,0xa0
  405abf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ac0:	xor    DWORD PTR [edi],edx
  405ac2:	mov    bh,ah
  405ac4:	inc    ebp
  405ac5:	xchg   ebx,eax
  405ac6:	xchg   ecx,eax
  405ac7:	pop    es
  405ac8:	mov    ebx,0xebbf2e4d
  405acd:	dec    esi
  405ace:	or     DWORD PTR [ebx+0x29],eax
  405ad1:	pushf  
  405ad2:	jmp    0x405b4f
  405ad4:	aaa    
  405ad5:	cmp    DWORD PTR [esi+eax*2-0x2560544e],edi
  405adc:	cmp    cl,bl
  405ade:	in     eax,dx
  405adf:	jo     0x405a6f
  405ae1:	aaa    
  405ae2:	sbb    eax,0xb1a2ff12
  405ae7:	jo     0x405a9d
  405ae9:	lods   eax,DWORD PTR ds:[esi]
  405aea:	lea    ebp,[esi-0x2]
  405aed:	mov    dh,0x95
  405aef:	in     eax,dx
  405af0:	jmp    0x41ea:0xc04ea281
  405af7:	hlt    
  405af8:	mov    ah,0xc6
  405afa:	(bad)  
  405afb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405afc:	shr    DWORD PTR [ebx],cl
  405afe:	mov    WORD PTR [ebx+edi*8],fs
  405b01:	in     eax,dx
  405b02:	sub    dl,BYTE PTR ds:0xadb2f5fa
  405b08:	js     0x405b2e
  405b0a:	movntps XMMWORD PTR [edx+0x53f14303],xmm7
  405b11:	cs hlt 
  405b13:	mov    dh,0xc1
  405b15:	aad    0x2e
  405b17:	cmp    ah,BYTE PTR [ecx-0x26]
  405b1a:	je     0x405b14
  405b1c:	mov    WORD PTR [ecx-0x437d67ce],es
  405b22:	das    
  405b23:	add    ebp,DWORD PTR [edi-0x3]
  405b26:	sbb    al,0x96
  405b28:	mov    cs,esp
  405b2a:	mov    edx,0x328c52c3
  405b2f:	or     DWORD PTR [ebx],0x7c
  405b32:	pushf  
  405b33:	xchg   esp,eax
  405b34:	dec    ebp
  405b35:	jg     0x405b73
  405b37:	(bad)  
  405b38:	fidivr DWORD PTR [edi+ebp*4]
  405b3b:	add    eax,0x63e7f28a
  405b40:	je     0x405ba7
  405b42:	imul   eax,DWORD PTR ds:0x36dbc34e,0xb8eae982
  405b4c:	or     ebp,ecx
  405b4e:	pop    edx
  405b4f:	jne    0x405b18
  405b51:	jno    0x405ad9
  405b53:	lds    ecx,FWORD PTR [eax+eiz*1]
  405b56:	je     0x405b23
  405b58:	mov    bh,0xb0
  405b5a:	mov    es,ebp
  405b5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b5d:	shl    DWORD PTR [eax],1
  405b5f:	bound  eax,QWORD PTR [bx-0x7a]
  405b63:	mov    ebp,esi
  405b65:	mov    dl,0x82
  405b67:	push   cs
  405b68:	add    edx,DWORD PTR ds:0xc537db73
  405b6e:	push   0xe9ac4db7
  405b73:	push   cs
  405b74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b75:	ins    DWORD PTR es:[edi],dx
  405b76:	(bad)  
  405b77:	in     eax,0xe9
  405b79:	push   ebx
  405b7a:	ret    
  405b7b:	dec    eax
  405b7c:	std    
  405b7d:	(bad)  
  405b7e:	cmp    edx,ebx
  405b80:	ror    DWORD PTR [ebx],cl
  405b82:	or     dh,bl
  405b84:	mov    al,BYTE PTR es:[esi+eax*2+0x7bb93f02]
  405b8c:	jnp    0x405b2e
  405b8e:	pop    edi
  405b8f:	fst    QWORD PTR [ebx+0x33]
  405b92:	fdivrp st(2),st
  405b94:	dec    esp
  405b95:	iret   
  405b96:	pop    es
  405b97:	jbe    0x405c00
  405b99:	or     esp,DWORD PTR [esi+0x60]
  405b9c:	adc    dh,0x1
  405b9f:	jns    0x405bf8
  405ba1:	xchg   edi,eax
  405ba2:	lds    edi,FWORD PTR [edx+eiz*1-0x4a0a2477]
  405ba9:	mul    DWORD PTR ds:0xfe8d8bdb
  405baf:	sub    BYTE PTR [ebx+0x48ce3609],bl
  405bb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405bb6:	xor    al,0x5a
  405bb8:	call   0x548a:0xe966c46f
  405bbf:	cmc    
  405bc0:	lahf   
  405bc1:	ins    DWORD PTR es:[edi],dx
  405bc2:	mov    dl,ch
  405bc4:	jne    0x405bdc
  405bc6:	lds    eax,FWORD PTR [esi+0x343ca630]
  405bcc:	mov    ecx,0x33357d3d
  405bd1:	xchg   ebp,eax
  405bd2:	mov    al,ds:0xd7ed0d8f
  405bd7:	fcmovnbe st,st(1)
  405bd9:	cmp    eax,0x2894c514
  405bde:	xchg   esp,eax
  405bdf:	push   es
  405be0:	leave  
  405be1:	jo     0x405bae
  405be3:	sbb    eax,0x9961673a
  405be8:	pop    ebp
  405be9:	into   
  405bea:	mov    eax,ds:0xbf0ec451
  405bef:	pop    eax
  405bf0:	sar    DWORD PTR [esi-0x5f],0x7
  405bf4:	gs pop eax
  405bf6:	pop    es
  405bf7:	stos   BYTE PTR es:[edi],al
  405bf8:	inc    ecx
  405bf9:	add    BYTE PTR [esi-0x1accac44],dh
  405bff:	mov    ds:0x5dd33ef9,eax
  405c04:	stos   DWORD PTR es:[edi],eax
  405c05:	push   es
  405c06:	jge    0x405c07
  405c08:	or     al,BYTE PTR [edx+0x41]
  405c0b:	dec    esp
  405c0c:	test   DWORD PTR [ecx+0x48],edx
  405c0f:	mov    DWORD PTR [ebx],esi
  405c11:	cmc    
  405c12:	in     eax,0xe8
  405c14:	pop    edi
  405c15:	push   esi
  405c16:	repnz sub bh,bh
  405c19:	push   eax
  405c1a:	dec    ebp
  405c1b:	xor    eax,0x1e1948a6
  405c20:	lock lea esp,[ecx+0xbed103a]
  405c27:	mov    BYTE PTR [ecx],ah
  405c29:	ins    DWORD PTR es:[edi],dx
  405c2a:	out    0xc4,al
  405c2c:	pop    edi
  405c2d:	mov    dh,0x29
  405c2f:	(bad)  
  405c30:	mov    al,ds:0xa6c1614a
  405c35:	xor    eax,0xbec38f99
  405c3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c3b:	in     eax,dx
  405c3c:	loop   0x405c39
  405c3e:	shl    DWORD PTR [ebp+ecx*8+0xa],cl
  405c42:	in     al,0xf8
  405c44:	dec    edx
  405c45:	ret    0xcf7d
  405c48:	(bad)  
  405c49:	fidiv  DWORD PTR [eax]
  405c4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c4c:	jecxz  0x405c48
  405c4e:	bound  edi,QWORD PTR gs:[eax-0x28]
  405c52:	sbb    DWORD PTR [eax+0x36],edi
  405c55:	rcl    BYTE PTR [ebx+0x5aab9bd7],0xc2
  405c5c:	dec    eax
  405c5d:	lahf   
  405c5e:	xchg   DWORD PTR [edi-0x67],ebx
  405c61:	mov    ecx,0xeff04914
  405c66:	inc    ebx
  405c67:	imul   edx,DWORD PTR [edi],0x2e5928c8
  405c6d:	xchg   DWORD PTR [ebx+0x2a],eax
  405c70:	enter  0xaa8b,0x1d
  405c74:	cld    
  405c75:	mov    edx,0xe70a4be2
  405c7a:	retf   0x87b
  405c7d:	dec    edi
  405c7e:	pop    ebp
  405c7f:	mov    ecx,0xeee6f90b
  405c84:	xchg   ecx,eax
  405c85:	mov    ecx,0x1bee5648
  405c8a:	inc    edx
  405c8b:	sbb    BYTE PTR [edi+0xf],bl
  405c8e:	jns    0x405cb2
  405c90:	rol    ebp,1
  405c92:	adc    eax,0xbe62b775
  405c97:	stc    
  405c98:	inc    eax
  405c99:	pop    ebx
  405c9a:	mov    edi,DWORD PTR [edi+0x39]
  405c9d:	outs   dx,BYTE PTR ds:[esi]
  405c9e:	ror    DWORD PTR [edi],1
  405ca0:	or     cl,0xb9
  405ca3:	mov    dh,0x51
  405ca5:	fwait
  405ca6:	xor    cl,0xe8
  405ca9:	pop    esi
  405caa:	sahf   
  405cab:	test   eax,0x95cab0aa
  405cb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405cb1:	gs mov esi,0xd6d34f46
  405cb7:	jle    0x405ce8
  405cb9:	rcr    DWORD PTR [ebp+0x6c5e1350],1
  405cbf:	xor    bh,bh
  405cc1:	test   eax,0x6ec10e0
  405cc6:	inc    edi
  405cc7:	or     al,0xcb
  405cc9:	outs   dx,BYTE PTR ds:[esi]
  405cca:	jge    0x405cbc
  405ccc:	hlt    
  405ccd:	add    cl,cl
  405ccf:	outs   dx,DWORD PTR ds:[esi]
  405cd0:	jae    0x405cba
  405cd2:	jmp    0x10e3:0x27c52908
  405cd9:	jle    0x405ccc
  405cdb:	fucomip st,st(5)
  405cdd:	(bad)  
  405cde:	cmp    BYTE PTR [ebx],0x93
  405ce1:	fwait
  405ce2:	mov    esi,DWORD PTR [edx]
  405ce4:	inc    eax
  405ce5:	(bad)  
  405ce6:	jmp    0x405cf2
  405ce8:	call   0xf4b3:0xfcb5c54f
  405cef:	aaa    
  405cf0:	pop    eax
  405cf1:	sub    al,0xcc
  405cf3:	jb     0x405d74
  405cf5:	cmp    ch,bh
  405cf7:	les    edi,FWORD PTR [ecx-0x17]
  405cfa:	sbb    esp,ecx
  405cfc:	sbb    ch,dh
  405cfe:	jmp    0x405d29
  405d00:	push   ecx
  405d01:	mov    DWORD PTR [ebp-0x14],ecx
  405d04:	mov    edx,DWORD PTR [ebp-0x14]
  405d07:	xor    edx,esi
  405d09:	add    DWORD PTR ds:0x42d01c,0x429028
  405d13:	add    edx,0x7f55d8f2
  405d19:	mov    DWORD PTR ds:0x42a004,0x7cae
  405d23:	lea    ecx,[ebp+eax*4-0xb4]
  405d2a:	mov    DWORD PTR [ecx],edx
  405d2c:	mov    DWORD PTR ds:0x42d018,0x76cd
  405d36:	mov    edx,DWORD PTR [ecx]
  405d38:	mov    DWORD PTR ds:0x429024,0x63
  405d42:	cmp    edx,0x244ecb93
  405d48:	mov    DWORD PTR ds:0x42c01c,0x464d
  405d52:	jbe    0x405d6d
  405d58:	sub    DWORD PTR ds:0x42a000,0x42d004
  405d62:	add    DWORD PTR [ecx],0x405fcdc
  405d68:	jmp    0x405d7d
  405d6d:	or     DWORD PTR ds:0x42b014,0x429010
  405d77:	add    DWORD PTR [ecx],0xfdaf4324
  405d7d:	sbb    ecx,DWORD PTR ds:0x42a000
  405d83:	mov    ecx,DWORD PTR [ebp-0x18]
  405d86:	sbb    DWORD PTR ds:0x42d010,0x42c010
  405d90:	xor    ecx,esi
  405d92:	sbb    DWORD PTR ds:0x42a004,0x42d018
  405d9c:	inc    eax
  405d9d:	inc    DWORD PTR [ebp-0x14]
  405da0:	add    ecx,edi
  405da2:	mov    DWORD PTR ds:0x42d01c,0x794d
  405dac:	cmp    eax,ecx
  405dae:	mov    DWORD PTR ds:0x42b004,0x68cc
  405db8:	jb     0x405d04
  405dbe:	and    DWORD PTR ds:0x42b010,0x0
  405dc8:	jmp    0x405ddb
  405dcd:	xor    eax,eax
  405dcf:	or     eax,DWORD PTR ds:0x42b010
  405dd5:	inc    eax
  405dd6:	mov    ds:0x42b010,eax
  405ddb:	cmp    DWORD PTR ds:0x42b010,0x10
  405de2:	jae    0x405e2a
  405de8:	cmp    DWORD PTR ds:0x42b010,0xa
  405def:	jbe    0x405e2a
  405df5:	jmp    0x405e0d
  405dfa:	push   0x42f19b
  405dff:	push   DWORD PTR [ebp-0x28]
  405e02:	push   0x6b57
  405e07:	call   DWORD PTR ds:0x43003b
  405e0d:	cmp    DWORD PTR ds:0x42b010,0x9
  405e14:	jne    0x405e25
  405e1a:	mov    eax,ds:0x42b010
  405e1f:	inc    eax
  405e20:	mov    ds:0x42b010,eax
  405e25:	jmp    0x405dcd
  405e2a:	mov    dl,BYTE PTR [ebp-0x21]
  405e2d:	mov    eax,DWORD PTR [ebp-0x34]
  405e30:	xor    al,0xa4
  405e32:	or     DWORD PTR ds:0x429020,0x7a52
  405e3c:	mov    cl,0x14
  405e3e:	and    DWORD PTR ds:0x42c004,0x42a008
  405e48:	sub    cl,al
  405e4a:	add    dl,cl
  405e4c:	mov    ecx,DWORD PTR [ebp-0x1c]
  405e4f:	xor    cl,0xa4
  405e52:	neg    DWORD PTR ds:0x42d008
  405e58:	sub    cl,0x14
  405e5b:	xor    DWORD PTR ds:0x429014,0x42b01c
  405e65:	ror    dl,cl
  405e67:	xor    eax,eax
  405e69:	mov    eax,DWORD PTR [ebp-0xc]
  405e6c:	add    DWORD PTR ds:0x42c00c,edx
  405e72:	mov    BYTE PTR [eax+ebx*1+0x800],dl
  405e79:	and    DWORD PTR ds:0x42b000,0x0
  405e83:	jmp    0x405e96
  405e88:	xor    eax,eax
  405e8a:	add    eax,DWORD PTR ds:0x42b000
  405e90:	inc    eax
  405e91:	mov    ds:0x42b000,eax
  405e96:	cmp    DWORD PTR ds:0x42b000,0x10
  405e9d:	jae    0x405ede
  405ea3:	cmp    DWORD PTR ds:0x42b000,0x7
  405eaa:	jbe    0x405ede
  405eb0:	jmp    0x405ebe
  405eb5:	push   DWORD PTR [ebp-0x14]
  405eb8:	call   DWORD PTR ds:0x43003f
  405ebe:	cmp    DWORD PTR ds:0x42b000,0x6
  405ec5:	jne    0x405ed9
  405ecb:	xor    eax,eax
  405ecd:	xor    eax,DWORD PTR ds:0x42b000
  405ed3:	inc    eax
  405ed4:	mov    ds:0x42b000,eax
  405ed9:	jmp    0x405e88
  405ede:	mov    eax,DWORD PTR [ebp-0xc]
  405ee1:	mov    ecx,DWORD PTR [ebp-0x28]
  405ee4:	sub    eax,edi
  405ee6:	xor    eax,esi
  405ee8:	cmp    eax,ecx
  405eea:	jne    0x405f14
  405ef0:	mov    eax,DWORD PTR [ebp-0x8]
  405ef3:	mov    ecx,DWORD PTR [ebp-0x10]
  405ef6:	xor    eax,esi
  405ef8:	xor    ecx,esi
  405efa:	sub    eax,ecx
  405efc:	sub    eax,edi
  405efe:	xor    eax,esi
  405f00:	mov    DWORD PTR [ebp-0x8],eax
  405f03:	mov    eax,DWORD PTR [ebp-0x10]
  405f06:	xor    eax,esi
  405f08:	mov    ecx,0xffcd8d94
  405f0d:	sub    ecx,eax
  405f0f:	jmp    0x405f23
  405f14:	mov    eax,DWORD PTR [ebp-0x10]
  405f17:	xor    eax,esi
  405f19:	mov    ecx,0xffcd8d14
  405f1e:	sub    ecx,eax
  405f20:	add    ecx,DWORD PTR [ebp-0xc]
  405f23:	mov    DWORD PTR [ebp-0xc],ecx
  405f26:	mov    eax,DWORD PTR [ebp-0x8]
  405f29:	cmp    eax,0xf89c85b0
  405f2e:	jne    0x403809
  405f34:	mov    DWORD PTR [ebp-0x34],0x9
  405f3b:	mov    ecx,DWORD PTR [ebp+0x8]
  405f3e:	xor    ecx,esi
  405f40:	add    ecx,edi
  405f42:	jmp    0x40cbb6
  405f47:	lea    eax,[ecx+ebx*1]
  405f4a:	mov    DWORD PTR [ebp-0x2c],eax
  405f4d:	mov    eax,DWORD PTR [ebp-0x58]
  405f50:	sub    eax,ecx
  405f52:	mov    DWORD PTR [ebp-0x1c],eax
  405f55:	mov    eax,DWORD PTR [ebp-0x1c]
  405f58:	mov    DWORD PTR [ebp-0x14],eax
  405f5b:	mov    eax,DWORD PTR [ebp-0x2c]
  405f5e:	mov    DWORD PTR [ebp-0x38],0xf89c85b0
  405f65:	mov    DWORD PTR [ebp-0x54],eax
  405f68:	mov    DWORD PTR [ebp-0x20],0xf89c85b1
  405f6f:	mov    eax,DWORD PTR [ebp-0x38]
  405f72:	xor    eax,esi
  405f74:	add    eax,edi
  405f76:	mov    DWORD PTR [ebp-0x10],eax
  405f79:	jmp    0x4082d5
  405f7e:	lds    ebp,FWORD PTR [ecx]
  405f80:	lea    esi,[esi-0x7f]
  405f83:	(bad)  
  405f84:	jns    0x405fff
  405f86:	jbe    0x405ffc
  405f88:	retf   
  405f89:	mov    BYTE PTR [edx],bh
  405f8b:	add    eax,0x30f80aa5
  405f90:	jp     0x40600c
  405f92:	cmp    ebx,DWORD PTR [edi+0x7a]
  405f95:	jp     0x405f28
  405f97:	in     al,0xdf
  405f99:	push   ebp
  405f9a:	cs sbb eax,0x150d7962
  405fa0:	adc    eax,0x84dc28bf
  405fa5:	sbb    esp,DWORD PTR [ebp+0x65]
  405fa8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405fa9:	stos   DWORD PTR es:[edi],eax
  405faa:	std    
  405fab:	std    
  405fac:	fbstp  TBYTE PTR [esi+esi*2+0x2f209f20]
  405fb3:	fsubr  DWORD PTR [bx+si-0x73]
  405fb7:	push   cs
  405fb8:	sub    BYTE PTR [esi-0x51d23e1b],ch
  405fbe:	inc    esi
  405fbf:	das    
  405fc0:	mov    edx,0x50e08ed0
  405fc5:	or     BYTE PTR [ebp-0x7a],cl
  405fc8:	dec    ecx
  405fc9:	cwde   
  405fca:	imul   esp,DWORD PTR [ebx-0x2f],0xe339284f
  405fd1:	pushf  
  405fd2:	push   0xbed6acf7
  405fd7:	adc    al,0x90
  405fd9:	bound  edx,QWORD PTR [ecx-0x32]
  405fdc:	mov    bl,0xba
  405fde:	imul   DWORD PTR [esi+0x4b637cbe]
  405fe4:	mov    ch,0xed
  405fe6:	inc    eax
  405fe7:	jns    0x405f99
  405fe9:	dec    ebx
  405fea:	in     eax,dx
  405feb:	aas    
  405fec:	aaa    
  405fed:	push   ds
  405fee:	mov    cl,0xc7
  405ff0:	jno    0x405fb0
  405ff2:	add    al,0xaa
  405ff4:	and    esp,esp
  405ff6:	add    al,0x95
  405ff8:	jns    0x406030
  405ffa:	and    BYTE PTR [ebx+eax*4-0x57],0xc0
  405fff:	fstp   TBYTE PTR [edx+eiz*1]
  406002:	test   al,al
  406004:	sub    esi,eax
  406006:	out    0xac,eax
  406008:	bound  ecx,QWORD PTR [edi-0x1e]
  40600b:	adc    bl,BYTE PTR [ebx+eax*8-0x5a7472ad]
  406012:	sub    eax,0x73eb7142
  406017:	gs sub al,0x63
  40601a:	rol    DWORD PTR [ecx-0x4d],1
  40601d:	les    ebx,FWORD PTR [edx]
  40601f:	arpl   WORD PTR [eax],si
  406021:	loope  0x405ff4
  406023:	gs inc ebp
  406025:	mov    edi,DWORD PTR [eax-0x536ac924]
  40602b:	out    dx,al
  40602c:	mov    eax,ebp
  40602e:	or     DWORD PTR [ecx-0x3a33fe5c],eax
  406034:	push   ss
  406035:	xor    edx,DWORD PTR [edi+0x19e8b812]
  40603b:	xchg   ebp,eax
  40603c:	or     eax,0x95ffb43a
  406041:	clc    
  406042:	(bad)
  406045:	push   0xffffff87
  406047:	inc    ebp
  406048:	(bad)  
  406049:	jbe    0x406074
  40604b:	test   al,0xf5
  40604d:	jg     0x406082
  40604f:	push   esp
  406050:	into   
  406051:	jnp    0x40601b
  406053:	jo     0x4060c7
  406055:	outs   dx,DWORD PTR ds:[esi]
  406056:	mov    ah,0x53
  406058:	push   esi
  406059:	out    0xd9,al
  40605b:	fimul  WORD PTR [edi+0x11]
  40605e:	sar    BYTE PTR [esi-0x379066e9],cl
  406064:	out    dx,eax
  406065:	rol    BYTE PTR [eax-0x7a602cda],1
  40606b:	mov    ecx,0x914371c2
  406070:	shl    BYTE PTR [edx],0x16
  406073:	ror    DWORD PTR [edx-0x35141de0],cl
  406079:	pop    eax
  40607a:	stc    
  40607b:	xor    eax,0xc0a08aa3
  406080:	mov    ebp,0xf2e0ad41
  406085:	pop    ebp
  406086:	out    0xf5,al
  406088:	jb     0x4060cd
  40608a:	dec    ebx
  40608b:	test   DWORD PTR [edi],edi
  40608d:	push   edi
  40608e:	and    eax,0x7e5c5de2
  406093:	into   
  406094:	pop    esp
  406095:	inc    edx
  406096:	add    al,0x33
  406098:	in     eax,0xa5
  40609a:	push   es
  40609b:	mov    edi,0xac40b277
  4060a0:	loop   0x40605c
  4060a2:	add    DWORD PTR [edi+0x21bc33bc],ebp
  4060a8:	mov    cl,0x95
  4060aa:	add    eax,0xfaac201a
  4060af:	sar    DWORD PTR [esi+0x275dbd2c],1
  4060b5:	push   ds
  4060b6:	mov    al,ds:0xb58b733c
  4060bb:	cmp    eax,DWORD PTR [edx+0x3554dacc]
  4060c1:	xor    BYTE PTR [bp-0x345d],ch
  4060c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4060c7:	jae    0x40608c
  4060c9:	out    dx,al
  4060ca:	int3   
  4060cb:	lea    edx,[esi+0x216fa5c0]
  4060d1:	cmp    DWORD PTR gs:[edi+0x863fad5],eax
  4060d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4060d9:	mov    es,WORD PTR [edi+eiz*8-0x21ae13dc]
  4060e0:	js     0x406103
  4060e2:	repnz sti 
  4060e4:	jnp    0x406143
  4060e6:	xchg   esi,eax
  4060e7:	(bad)  [ebp+0x64]
  4060ea:	push   DWORD PTR [ecx]
  4060ec:	sbb    esi,DWORD PTR [ebx-0x7]
  4060ef:	push   edx
  4060f0:	dec    esi
  4060f1:	add    edi,DWORD PTR [ecx-0x4c]
  4060f4:	sub    DWORD PTR [eax+0x521cf260],0x985d22a0
  4060fe:	je     0x406174
  406100:	iret   
  406101:	jmp    0xc3d8:0xa8c704db
  406108:	mov    ch,0x69
  40610a:	scas   al,BYTE PTR es:[edi]
  40610b:	inc    esi
  40610c:	push   es
  40610d:	mov    dl,BYTE PTR [edi+0x66]
  406110:	xor    esi,DWORD PTR [ecx+0x40c89d3c]
  406116:	retf   0xce3b
  406119:	or     edi,DWORD PTR fs:[esi-0x11]
  40611d:	push   edi
  40611e:	mov    DWORD PTR [esi+esi*2-0x12],edx
  406122:	out    dx,eax
  406123:	clc    
  406124:	cmp    al,0x7a
  406126:	mov    BYTE PTR [ecx-0x71186a4f],al
  40612c:	or     DWORD PTR [edi-0x1d],eax
  40612f:	push   esp
  406130:	xor    bh,BYTE PTR [edi]
  406132:	dec    ebp
  406133:	popa   
  406134:	and    edx,DWORD PTR ss:[esi+eax*1]
  406138:	into   
  406139:	(bad)  
  40613a:	fild   WORD PTR [esi-0x35]
  40613d:	xchg   BYTE PTR [edx-0x4b4d5e06],dl
  406143:	mov    ecx,0xe25fca3b
  406148:	sahf   
  406149:	ficomp WORD PTR [edi+0x75e95ffc]
  40614f:	stos   BYTE PTR es:[edi],al
  406150:	cmp    DWORD PTR [ebp+0x41],0xfffffff0
  406154:	cwde   
  406155:	xor    al,0xc5
  406157:	sbb    al,0xa
  406159:	xchg   BYTE PTR [ecx+0xf],bh
  40615c:	outs   dx,DWORD PTR ds:[esi]
  40615d:	ret    0x6260
  406160:	or     edx,esp
  406162:	pusha  
  406163:	std    
  406164:	bound  edi,QWORD PTR [edx]
  406166:	adc    ah,al
  406168:	push   esp
  406169:	mov    edi,0x7640b943
  40616e:	in     eax,dx
  40616f:	lahf   
  406170:	das    
  406171:	jp     0x4061c8
  406173:	or     ah,dl
  406175:	or     ecx,DWORD PTR [edi+0x67]
  406178:	scas   eax,DWORD PTR es:[edi]
  406179:	cmp    BYTE PTR [edx-0x7f],dh
  40617c:	call   0xe85a:0x803e093f
  406183:	push   edi
  406184:	push   eax
  406185:	mov    ebp,0x4be19e17
  40618a:	adc    DWORD PTR [ebp-0x74e97c5c],eax
  406190:	aas    
  406191:	int3   
  406192:	xchg   esi,eax
  406193:	js     0x40616d
  406195:	mov    ch,0x98
  406197:	mov    esp,0x90c37991
  40619c:	nop
  40619d:	daa    
  40619e:	loop   0x406187
  4061a0:	jl     0x4061c0
  4061a2:	mov    bl,0xa8
  4061a4:	out    dx,al
  4061a5:	fbstp  TBYTE PTR [ebx-0x3543bbb7]
  4061ab:	xlat   BYTE PTR ds:[ebx]
  4061ac:	xchg   ecx,eax
  4061ad:	adc    ebp,DWORD PTR [ecx-0x5dd5237a]
  4061b3:	or     BYTE PTR [esi+eax*8-0x7],0xcf
  4061b8:	test   BYTE PTR [ecx-0x4bde2372],ch
  4061be:	or     dh,BYTE PTR [ebp-0x265e2015]
  4061c4:	add    DWORD PTR [ebx+0x71],edi
  4061c7:	pop    eax
  4061c8:	loope  0x40623d
  4061ca:	cmc    
  4061cb:	adc    eax,0x6f99d035
  4061d0:	pop    ecx
  4061d1:	dec    ebx
  4061d2:	mov    edi,0x85eb5a24
  4061d7:	pop    esi
  4061d8:	scas   al,BYTE PTR es:[edi]
  4061d9:	test   eax,0xf1371f2a
  4061de:	jmp    0x4061a8
  4061e0:	add    BYTE PTR [esi+0x1ff85726],al
  4061e6:	ss or  al,0xc1
  4061e9:	xchg   esi,eax
  4061ea:	push   ss
  4061eb:	push   cs
  4061ec:	mov    al,ds:0xdd10dde5
  4061f1:	jne    0x40626b
  4061f3:	(bad)  
  4061f4:	mov    ebp,DWORD PTR [esi+0x35]
  4061f7:	sbb    al,0xa6
  4061f9:	mov    dh,bh
  4061fb:	push   0x35d4782
  406200:	add    DWORD PTR [ebx],eax
  406202:	es inc si
  406205:	dec    ebx
  406206:	popf   
  406207:	adc    ch,ch
  406209:	mov    eax,ds:0x45e78c84
  40620e:	add    bl,bl
  406210:	xchg   ecx,eax
  406211:	inc    edx
  406212:	add    BYTE PTR [ecx+0x47889628],0xc9
  406219:	dec    eax
  40621a:	out    dx,eax
  40621b:	in     al,dx
  40621c:	pushf  
  40621d:	scas   al,BYTE PTR es:[edi]
  40621e:	pop    es
  40621f:	mov    bh,0x3d
  406221:	mov    eax,cs
  406223:	and    bh,bl
  406225:	adc    al,BYTE PTR [esi+0x4]
  406228:	mov    ebp,0x65530fee
  40622d:	shr    DWORD PTR [edi-0x6f36dc01],1
  406233:	pop    esp
  406234:	push   ss
  406235:	test   BYTE PTR [esi+0x3ca438bf],ah
  40623b:	xor    DWORD PTR [edx-0x2a],esp
  40623e:	mov    ch,0x5f
  406240:	sbb    DWORD PTR [ebp+edi*8-0x3e483be1],ebp
  406247:	push   edi
  406248:	stos   DWORD PTR es:[edi],eax
  406249:	and    eax,0xd431db97
  40624e:	ins    BYTE PTR es:[edi],dx
  40624f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406250:	sbb    DWORD PTR [esi-0x1e],0x26
  406254:	shl    DWORD PTR [edx+esi*4-0x1e3f0230],cl
  40625b:	mov    BYTE PTR [ebx+0x26768e65],bl
  406261:	leave  
  406262:	lds    ecx,FWORD PTR [esi-0x292ced1b]
  406268:	or     al,0xe5
  40626a:	sbb    dh,BYTE PTR [eax-0x70ee6c7b]
  406270:	jmp    0x503a2240
  406275:	inc    ah
  406277:	sub    eax,0x880e1e55
  40627c:	outs   dx,DWORD PTR ds:[esi]
  40627d:	xor    BYTE PTR [edx-0x79],dh
  406280:	xchg   edx,eax
  406281:	lea    ebx,[edi-0x2546fa03]
  406287:	nop
  406288:	adc    eax,0xdee134f
  40628d:	pop    ss
  40628e:	jmp    0x8674:0x4b8eedcd
  406295:	mov    esi,0x2bd51b80
  40629a:	dec    eax
  40629b:	in     al,dx
  40629c:	(bad)  
  40629e:	ret    
  40629f:	imul   eax,DWORD PTR [edi+0x42],0x2d
  4062a3:	inc    ebp
  4062a4:	je     0x40622e
  4062a6:	test   BYTE PTR [edx+0x3666b68c],0xe8
  4062ad:	xlat   BYTE PTR ds:[ebx]
  4062ae:	adc    BYTE PTR [eax],bh
  4062b0:	dec    ecx
  4062b1:	and    al,0x13
  4062b3:	cmp    al,0x34
  4062b5:	repz inc esp
  4062b7:	test   DWORD PTR [edi+0x26],eax
  4062ba:	mov    ds:0x25a75479,al
  4062bf:	push   0xffffff93
  4062c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4062c2:	jmp    0x6b4cfb6e
  4062c7:	push   ebx
  4062c8:	mov    al,0x47
  4062ca:	and    bh,BYTE PTR [edx-0x6f5348ee]
  4062d0:	ror    BYTE PTR [eax-0x2033b3d5],cl
  4062d6:	rcl    DWORD PTR [ecx-0x239d2d46],1
  4062dc:	sti    
  4062dd:	xchg   ax,ax
  4062df:	adc    eax,0x4c906f40
  4062e4:	scas   al,BYTE PTR es:[edi]
  4062e5:	enter  0xe88a,0xf3
  4062e9:	cs cs jecxz 0x406309
  4062ed:	mov    ecx,0x7986534f
  4062f2:	pop    esp
  4062f3:	pop    ds
  4062f4:	mov    bh,0x8e
  4062f6:	es (bad) 
  4062f8:	cmp    edx,ecx
  4062fa:	xchg   esi,eax
  4062fb:	or     BYTE PTR [edi-0x71047e8c],0xb4
  406302:	lods   eax,DWORD PTR ds:[esi]
  406303:	scas   eax,DWORD PTR es:[edi]
  406304:	mov    WORD PTR [edx+0x75f1419],?
  40630a:	jns    0x40636d
  40630c:	shl    BYTE PTR [eax+0x2e],0x1d
  406310:	mov    ecx,0x1ba9327d
  406315:	fwait
  406316:	mov    eax,DWORD PTR [ebp-0x69]
  406319:	jl     0x4062de
  40631b:	ficom  DWORD PTR [ecx+0x296d2d88]
  406321:	push   0xffffffa5
  406323:	js     0x406394
  406325:	inc    eax
  406326:	cmp    eax,0x9f6cb7d9
  40632b:	mov    dh,0x6a
  40632d:	push   ss
  40632e:	leave  
  40632f:	retf   
  406330:	(bad)  fs:[edi]
  406333:	pop    es
  406334:	(bad)  [edi+0x5ccda94f]
  40633a:	ins    DWORD PTR es:[edi],dx
  40633b:	mov    fs,esi
  40633d:	pop    edx
  40633e:	jno    0x4062d5
  406340:	loopne 0x4062ef
  406342:	mov    eax,ds:0x9f303d4c
  406347:	scas   eax,DWORD PTR es:[edi]
  406348:	dec    edi
  406349:	inc    ebx
  40634a:	icebp  
  40634b:	sbb    edx,DWORD PTR [eax]
  40634d:	inc    esp
  40634e:	addr16 mov bh,0xdb
  406351:	pop    edx
  406352:	aas    
  406353:	inc    edi
  406354:	mov    esi,0x9e144ab0
  406359:	xchg   ebp,eax
  40635a:	ret    
  40635b:	pop    ebx
  40635c:	mov    ds:0x7961c827,eax
  406361:	or     al,0xa0
  406363:	addr16 dec edx
  406365:	dec    ebp
  406366:	mov    esi,0x7fffc50e
  40636b:	shl    DWORD PTR ds:0x7929a21a,0xfe
  406372:	jnp    0x406331
  406374:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406375:	cs cs and BYTE PTR cs:[esi-0x6a5046f2],0xfd
  40637f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406380:	inc    ebx
  406381:	out    dx,eax
  406382:	loop   0x406351
  406384:	adc    eax,0xcb39e514
  406389:	popf   
  40638a:	add    edx,DWORD PTR [eax+eiz*2]
  40638d:	jge    0x406400
  40638f:	leave  
  406390:	sti    
  406391:	and    eax,0xcea19e01
  406396:	sbb    DWORD PTR [eax],esi
  406398:	sub    eax,0x40c8b033
  40639d:	dec    edx
  40639e:	arpl   si,si
  4063a0:	push   ss
  4063a1:	sbb    cl,dl
  4063a3:	pop    ecx
  4063a4:	adc    ah,BYTE PTR [edi]
  4063a6:	(bad)  
  4063a7:	sbb    ebp,esp
  4063a9:	and    al,0xa2
  4063ab:	popf   
  4063ac:	fld    DWORD PTR [ecx+0xae8ea8c]
  4063b2:	sub    esp,DWORD PTR [ebx-0x2b]
  4063b5:	mov    esi,0x360dc5ee
  4063ba:	push   ss
  4063bb:	mov    es:0xed0aafe9,al
  4063c1:	add    ecx,esi
  4063c3:	loope  0x4063f1
  4063c5:	sub    BYTE PTR [ebx],bl
  4063c7:	inc    esp
  4063c8:	push   0x682a5485
  4063cd:	fld    DWORD PTR [ecx]
  4063cf:	inc    edx
  4063d0:	into   
  4063d1:	hlt    
  4063d2:	xchg   esi,eax
  4063d3:	(bad)  
  4063d4:	(bad)  
  4063d6:	sub    ebx,DWORD PTR [eax-0x66f08599]
  4063dc:	sbb    BYTE PTR [ebx],0x63
  4063df:	repz inc esi
  4063e1:	adc    bh,BYTE PTR [ebx+0x6f8ea580]
  4063e7:	sub    dh,cl
  4063e9:	sub    BYTE PTR [edi],bh
  4063eb:	in     al,dx
  4063ec:	or     edi,DWORD PTR [ecx]
  4063ee:	lods   al,BYTE PTR ds:[esi]
  4063ef:	mov    ds:0xcbb83336,eax
  4063f4:	div    BYTE PTR [ebp-0x55]
  4063f7:	ja     0x406478
  4063f9:	dec    eax
  4063fa:	aaa    
  4063fb:	scas   al,BYTE PTR es:[edi]
  4063fc:	adc    eax,0x207f53c7
  406401:	mov    edi,0xf860eb2b
  406406:	out    dx,al
  406407:	enter  0x3a9c,0x3a
  40640b:	push   esi
  40640c:	dec    esp
  40640d:	loopne 0x406457
  40640f:	cmp    esp,esi
  406411:	jmp    0x33abaa0b
  406416:	imul   edi,DWORD PTR [edi],0xd086c367
  40641c:	cs loopne 0x406448
  40641f:	dec    edi
  406420:	dec    ebp
  406421:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406422:	das    
  406423:	mov    ebp,0x6a059e52
  406428:	xlat   BYTE PTR ds:[ebx]
  406429:	lods   al,BYTE PTR ds:[esi]
  40642a:	dec    eax
  40642b:	outs   dx,DWORD PTR ds:[esi]
  40642c:	push   es
  40642d:	sub    ah,bh
  40642f:	pop    esi
  406430:	mov    ah,0x23
  406432:	mov    cs,WORD PTR [eax]
  406434:	test   al,0xf3
  406436:	and    BYTE PTR [ebp-0x6b0ba74c],ah
  40643c:	js     0x4064b1
  40643e:	sbb    bl,bh
  406440:	mov    esi,0x3a664362
  406445:	enter  0xeafa,0xda
  406449:	push   eax
  40644a:	and    DWORD PTR [edx-0x1dbe7271],ebx
  406450:	or     al,BYTE PTR [edx]
  406452:	loop   0x406470
  406454:	test   al,0xb2
  406456:	xchg   esp,eax
  406457:	shr    esp,1
  406459:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40645a:	mov    eax,0x520da752
  40645f:	push   ecx
  406460:	gs aaa 
  406462:	mov    bh,0xe2
  406464:	test   BYTE PTR [ebp+0x21],0x46
  406468:	(bad)  
  40646a:	jne    0x40640d
  40646c:	mov    dh,dl
  40646e:	rol    BYTE PTR [ecx+0x68],cl
  406471:	pop    ds
  406472:	xchg   edx,eax
  406473:	enter  0x12b,0x5a
  406477:	xor    dl,ah
  406479:	loope  0x40649a
  40647b:	jbe    0x4064a7
  40647d:	test   al,0x45
  40647f:	dec    esp
  406480:	jno    0x40640e
  406482:	nop
  406483:	aas    
  406484:	jmp    0x77f179db
  406489:	sbb    DWORD PTR [ecx],0xffffffed
  40648c:	scas   eax,DWORD PTR es:[edi]
  40648d:	pop    esi
  40648e:	xor    esp,DWORD PTR [eax-0x7b8dc68a]
  406494:	adc    cl,BYTE PTR [ecx]
  406496:	sahf   
  406497:	inc    ebp
  406498:	sbb    eax,0x7844bf07
  40649d:	mov    esi,DWORD PTR [ecx]
  40649f:	or     DWORD PTR [ecx+ebx*1+0x2b68d105],ebp
  4064a6:	hlt    
  4064a7:	cld    
  4064a8:	bound  esi,QWORD PTR [edx]
  4064aa:	gs lock call 0x4855:0x559e111f
  4064b3:	repnz ins DWORD PTR es:[edi],dx
  4064b5:	fild   DWORD PTR [eax+0x59289653]
  4064bb:	add    al,0x55
  4064bd:	inc    edi
  4064be:	cld    
  4064bf:	mov    ?,edi
  4064c1:	xchg   ebp,eax
  4064c2:	and    ch,BYTE PTR [edx]
  4064c4:	or     BYTE PTR [ebp+ebx*1-0x139f63d9],ah
  4064cb:	ins    BYTE PTR es:[edi],dx
  4064cc:	retf   
  4064cd:	mov    al,0x76
  4064cf:	jae    0x406546
  4064d1:	ds mov ch,0xa8
  4064d4:	ret    
  4064d5:	xchg   BYTE PTR [edx],bl
  4064d7:	data16 icebp 
  4064d9:	push   esi
  4064da:	lock ins BYTE PTR es:[edi],dx
  4064dc:	push   ss
  4064dd:	cdq    
  4064de:	ja     0x40646c
  4064e0:	and    eax,0xcacc401d
  4064e5:	arpl   WORD PTR [eax],bp
  4064e7:	xor    al,0xf9
  4064e9:	xor    DWORD PTR [edi],eax
  4064eb:	imul   edx,DWORD PTR [esi+0x38],0xffffffdd
  4064ef:	pop    ebx
  4064f0:	cmp    al,0xa2
  4064f2:	xchg   edi,eax
  4064f3:	mov    WORD PTR [eax+0x295eebe0],gs
  4064f9:	in     eax,0x1f
  4064fb:	int    0x47
  4064fd:	shl    ecx,cl
  4064ff:	dec    edx
  406500:	jmp    0x406543
  406502:	dec    esp
  406503:	xchg   edx,eax
  406504:	inc    edx
  406505:	test   al,0xc1
  406507:	xchg   ebp,eax
  406508:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406509:	sbb    al,0xd6
  40650b:	push   cs
  40650c:	les    edi,FWORD PTR [esi+edi*1-0x29]
  406510:	sub    ch,BYTE PTR [ebx-0xa]
  406513:	push   0x1a347f9d
  406518:	nop
  406519:	rcr    BYTE PTR [esi-0x1976fa79],cl
  40651f:	add    esi,0x39
  406522:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406523:	arpl   WORD PTR [ebx-0x1d9539af],bx
  406529:	sbb    DWORD PTR [esi+0x77da28d9],esi
  40652f:	push   ss
  406530:	dec    DWORD PTR [esp+ebx*2]
  406533:	stos   BYTE PTR es:[edi],al
  406534:	sub    eax,0x5b22112e
  406539:	out    0xf9,al
  40653b:	pop    eax
  40653c:	repnz push ebx
  40653e:	jg     0x4064ec
  406540:	daa    
  406541:	nop
  406542:	adc    al,0xf2
  406544:	ins    DWORD PTR es:[edi],dx
  406545:	test   eax,0xfe6cd161
  40654a:	pop    esp
  40654b:	int3   
  40654c:	mov    esp,esp
  40654e:	jmp    0x1afc:0x770dd15a
  406555:	cmp    BYTE PTR [ecx+0x4a],bl
  406558:	xchg   ebx,eax
  406559:	in     al,dx
  40655a:	fs mov ch,0xe0
  40655d:	and    esp,DWORD PTR [ebx+0x7c0a7ba6]
  406563:	pop    ebx
  406564:	push   0xea5733b5
  406569:	sbb    DWORD PTR ds:0xd1fdad17,ebp
  40656f:	in     al,dx
  406570:	stos   DWORD PTR es:[edi],eax
  406571:	retf   
  406572:	mov    dl,0xf
  406574:	std    
  406575:	xchg   edi,eax
  406576:	dec    esp
  406577:	mov    cl,0xa4
  406579:	xchg   esi,eax
  40657a:	ins    DWORD PTR es:[edi],dx
  40657b:	mov    al,ds:0xb54b744b
  406580:	sbb    bl,0xfe
  406583:	push   esi
  406584:	inc    esi
  406585:	ja     0x4065d1
  406587:	and    eax,esi
  406589:	cld    
  40658a:	push   edx
  40658b:	fst    DWORD PTR [esi+0x6b2caf40]
  406591:	mov    edx,0x39de7fb7
  406596:	xchg   ebp,eax
  406597:	sbb    edx,DWORD PTR [edx+0x26]
  40659a:	inc    ebx
  40659b:	mov    esi,0x2a6e584c
  4065a0:	dec    eax
  4065a1:	dec    edi
  4065a2:	stos   BYTE PTR es:[edi],al
  4065a3:	icebp  
  4065a4:	xchg   edx,eax
  4065a5:	pusha  
  4065a6:	jl     0x40661f
  4065a8:	xchg   ecx,eax
  4065a9:	inc    esi
  4065aa:	push   edx
  4065ab:	mov    bh,0x7d
  4065ad:	xlat   BYTE PTR ds:[ebx]
  4065ae:	xlat   BYTE PTR ds:[ebx]
  4065af:	sub    bl,BYTE PTR [edx-0xd580eaf]
  4065b5:	sub    esp,edx
  4065b7:	jmp    0x2aa9:0xad1098f8
  4065be:	jl     0x406606
  4065c0:	push   0xc8cbe7b
  4065c5:	xor    ebx,edi
  4065c7:	(bad)  
  4065c9:	mov    ds:0x24007584,eax
  4065ce:	retf   0x3c49
  4065d1:	fld    DWORD PTR [ecx]
  4065d3:	push   cs
  4065d4:	or     BYTE PTR [ebp+0x79dacfa5],ch
  4065da:	mov    ecx,0xa6067d81
  4065df:	loope  0x406574
  4065e1:	lock add eax,0xbbf0da63
  4065e7:	mov    ebx,0x4ad5fc24
  4065ec:	pop    esp
  4065ed:	mov    WORD PTR [ecx-0xd],cs
  4065f0:	out    0x51,al
  4065f2:	sub    eax,0x2fb2c1fd
  4065f7:	pusha  
  4065f8:	aaa    
  4065f9:	xor    ch,BYTE PTR [esi+ecx*2]
  4065fc:	push   ebp
  4065fd:	jg     0x406597
  4065ff:	mov    al,ds:0x55197abc
  406604:	out    0xd2,al
  406606:	lock dec ebp
  406608:	sbb    dx,0x4
  40660c:	(bad)  
  40660e:	mov    ebp,0xf9585b2b
  406613:	sbb    al,0x3b
  406615:	mov    ch,0x44
  406617:	in     eax,0x1e
  406619:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40661a:	jp     0x406656
  40661c:	sub    DWORD PTR [edx],esp
  40661e:	cmp    DWORD PTR [edi+0x6f791525],0x1fcb1aab
  406628:	push   es
  406629:	cmp    al,0x7c
  40662b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40662c:	cwde   
  40662d:	in     eax,0x29
  40662f:	jp     0x4065b5
  406631:	sub    al,0xac
  406633:	xlat   BYTE PTR ds:[ebx]
  406634:	imul   DWORD PTR [ebp-0x26]
  406637:	push   edi
  406638:	jne    0x4066b3
  40663a:	sti    
  40663b:	xchg   BYTE PTR [eax-0x1f55e0c7],cl
  406641:	mul    BYTE PTR [esp+eiz*4-0x2e]
  406645:	gs hlt 
  406647:	out    dx,eax
  406648:	mov    esp,0x8b5615c2
  40664d:	fnop   
  40664f:	dec    ebx
  406650:	rcl    DWORD PTR [eax-0x769e7741],0xa4
  406657:	jnp    0x406635
  406659:	fmulp  st(3),st
  40665b:	add    eax,0x1e31176c
  406660:	mov    ecx,0xc9dc5435
  406665:	retf   
  406666:	and    al,ah
  406668:	fistp  DWORD PTR [eax]
  40666a:	fdivr  DWORD PTR [edi+0x16]
  40666d:	daa    
  40666e:	jecxz  0x40661c
  406670:	mov    edx,gs
  406672:	or     ch,ah
  406674:	data16 adc al,0xb6
  406677:	mov    ebx,0x815b475f
  40667c:	pop    esi
  40667d:	popf   
  40667e:	xchg   DWORD PTR [edx-0x6f197fbf],ebp
  406684:	ret    
  406685:	adc    eax,edi
  406687:	fadd   DWORD PTR cs:[ebx+0x2e]
  40668b:	out    dx,eax
  40668c:	fldl2t 
  40668e:	or     bh,BYTE PTR [ebx-0x105b3b3c]
  406694:	retf   
  406695:	adc    esi,edi
  406697:	cmp    edx,DWORD PTR [esi]
  406699:	pop    ss
  40669a:	shr    BYTE PTR [edx-0x64],cl
  40669d:	in     eax,dx
  40669e:	and    bl,BYTE PTR [esi]
  4066a0:	jge    0x4066eb
  4066a2:	call   0xfcf9e3fa
  4066a7:	inc    ebp
  4066a8:	dec    edi
  4066a9:	jno    0x406708
  4066ab:	test   eax,0x17a2cfca
  4066b0:	xchg   esp,eax
  4066b1:	mov    bl,0x89
  4066b3:	mov    al,ds:0xe66885c6
  4066b8:	push   esi
  4066b9:	or     eax,0xe2acfa45
  4066be:	mov    ecx,0xd4c25c94
  4066c3:	adc    ebp,DWORD PTR [ebp+0x1875ad3f]
  4066c9:	and    DWORD PTR [eax+0x54],edx
  4066cc:	pop    edi
  4066cd:	and    cl,BYTE PTR [eax+0x6e]
  4066d0:	test   al,0x2c
  4066d2:	in     al,0x55
  4066d4:	js     0x4066a4
  4066d6:	lods   al,BYTE PTR ds:[esi]
  4066d7:	rcr    DWORD PTR [ebx],1
  4066d9:	xor    eax,0xd203e60e
  4066de:	pop    ds
  4066df:	or     eax,0xe9ea397a
  4066e4:	adc    cl,BYTE PTR [ecx+esi*1-0x6b]
  4066e8:	xor    al,0x4b
  4066ea:	loope  0x4066df
  4066ec:	lods   eax,DWORD PTR ds:[esi]
  4066ed:	jb     0x40669c
  4066ef:	xor    eax,0x4f43ba98
  4066f4:	pop    edi
  4066f5:	(bad)  
  4066f7:	test   BYTE PTR [ebx+edi*1],0x36
  4066fb:	(bad)  
  4066fc:	mov    eax,ds:0xfd72efd3
  406701:	inc    ebx
  406702:	js     0x4066cc
  406704:	outs   dx,DWORD PTR ds:[esi]
  406705:	leave  
  406706:	push   ss
  406707:	in     al,0x79
  406709:	cmp    al,0x36
  40670b:	mov    dh,0x21
  40670d:	adc    al,0xc6
  40670f:	retf   
  406710:	push   edi
  406711:	xchg   ecx,eax
  406712:	add    esi,eax
  406714:	pop    ss
  406715:	mov    fs,WORD PTR [ecx]
  406717:	fnsave [esi+0x4f]
  40671a:	pop    ss
  40671b:	cmp    eax,0xb0737e0e
  406720:	fdiv   QWORD PTR [edx]
  406722:	mov    ebp,0x2c9d10d9
  406727:	pop    ebx
  406728:	out    0x66,eax
  40672a:	fadd   DWORD PTR [ebx-0xf20233a]
  406730:	imul   esp,DWORD PTR [esi+0xdb07dba],0x6326868b
  40673a:	stos   DWORD PTR es:[edi],eax
  40673b:	sbb    BYTE PTR [ebp-0x516e3b90],ch
  406741:	int3   
  406742:	mov    ah,0x5
  406744:	outs   dx,DWORD PTR ds:[esi]
  406745:	lock push esp
  406747:	push   ebp
  406748:	mov    dh,0x8c
  40674a:	cdq    
  40674b:	cmc    
  40674c:	mov    ds:0x7d71bcc7,eax
  406751:	sbb    eax,0xb8cee6f7
  406756:	cmp    BYTE PTR [edi],ch
  406758:	mov    bl,0xb0
  40675a:	dec    esi
  40675b:	mov    BYTE PTR [edi],cl
  40675d:	std    
  40675e:	lods   al,BYTE PTR ds:[esi]
  40675f:	push   ds
  406760:	dec    ecx
  406761:	fnstenv [edx+0x66]
  406764:	ret    0x68d
  406767:	jmp    0xabae:0x653b08ea
  40676e:	mov    edi,0xb991d560
  406773:	arpl   WORD PTR es:[eax-0x25],bp
  406777:	push   edi
  406778:	push   ss
  406779:	mov    BYTE PTR [edx+0x34],dh
  40677c:	popf   
  40677d:	test   al,0x1f
  40677f:	jl     0x4067bc
  406781:	pop    ebx
  406782:	or     al,0x36
  406784:	shr    DWORD PTR [ebx+0x58],1
  406787:	adc    eax,0xd5f2aced
  40678c:	iret   
  40678d:	xchg   edi,eax
  40678e:	or     ebp,DWORD PTR [edx]
  406790:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406791:	or     BYTE PTR [edx-0x3f],dl
  406794:	xchg   ecx,eax
  406795:	(bad)  
  406796:	ja     0x406785
  406798:	imul   esi,esi,0x11dc70a
  40679e:	jo     0x4067b8
  4067a0:	xchg   BYTE PTR [edx+edi*1],bh
  4067a3:	call   DWORD PTR [ecx-0x7ab548c]
  4067a9:	pushf  
  4067aa:	into   
  4067ab:	fnstsw WORD PTR [ebp+ecx*8+0x3]
  4067af:	mov    edi,esp
  4067b1:	cmp    eax,0x4f840718
  4067b6:	ds jg  0x4067dc
  4067b9:	xchg   ebx,eax
  4067ba:	es push ebp
  4067bc:	dec    edx
  4067bd:	mov    WORD PTR [edi-0x64e61fb6],cs
  4067c3:	jns    0x4067aa
  4067c5:	out    dx,eax
  4067c6:	pop    esi
  4067c7:	mov    cl,0xb2
  4067c9:	pusha  
  4067ca:	jg     0x406819
  4067cc:	das    
  4067cd:	dec    esp
  4067ce:	jmp    0x134e:0xdc15e55e
  4067d5:	adc    al,0xc4
  4067d7:	mov    eax,0x1c9f6864
  4067dc:	jo     0x4067d6
  4067de:	cmc    
  4067df:	aam    0x3c
  4067e1:	int    0xd9
  4067e3:	(bad)  
  4067e5:	int3   
  4067e6:	lods   eax,DWORD PTR ds:[esi]
  4067e7:	dec    edx
  4067e8:	jae    0x4067cf
  4067ea:	cdq    
  4067eb:	sub    dl,dl
  4067ed:	or     al,0x36
  4067ef:	mov    ah,0x37
  4067f1:	lds    ebx,FWORD PTR [ebp-0x51]
  4067f4:	pop    esp
  4067f5:	mov    eax,ds:0x854b54aa
  4067fa:	mov    edx,0xea01055b
  4067ff:	addr16 sbb eax,0x34266646
  406805:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406806:	inc    esp
  406807:	xor    ah,BYTE PTR [edi-0x57]
  40680a:	test   BYTE PTR [eax+0xa],dl
  40680d:	loope  0x406866
  40680f:	adc    eax,0x5bd06080
  406814:	mov    eax,ds:0x714cfdf4
  406819:	dec    edx
  40681a:	in     al,dx
  40681b:	xor    ax,0x7a0f
  40681f:	jecxz  0x40683f
  406821:	pop    esp
  406822:	aam    0xb4
  406824:	xor    al,BYTE PTR [ebx+0x54]
  406827:	xchg   DWORD PTR [edi+0x645633c],ebx
  40682d:	into   
  40682e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40682f:	mov    BYTE PTR [edx-0x2e],dl
  406832:	and    BYTE PTR [edx],bh
  406834:	push   edx
  406835:	pop    esi
  406836:	lods   al,BYTE PTR ds:[esi]
  406837:	inc    ebp
  406838:	mov    edx,0x26e5efa0
  40683d:	add    al,0x7c
  40683f:	in     al,0x5f
  406841:	sti    
  406842:	gs lahf 
  406844:	push   edx
  406845:	bound  esp,QWORD PTR [esi]
  406847:	sbb    BYTE PTR [edx+0x7a],al
  40684a:	out    dx,al
  40684b:	in     eax,dx
  40684c:	mov    ah,0x69
  40684e:	retf   0x41a4
  406851:	std    
  406852:	mov    al,0x55
  406854:	mov    esp,0xca1f9fe1
  406859:	mov    dh,0x5c
  40685b:	fsubrp st(3),st
  40685d:	and    al,BYTE PTR [esi-0x1a]
  406860:	adc    BYTE PTR [ebx-0x7fa99663],dl
  406866:	inc    ebp
  406867:	xchg   DWORD PTR [edi+0x2f],eax
  40686a:	dec    esp
  40686b:	mov    dh,0x59
  40686d:	aam    0xe6
  40686f:	mov    ds:0xd1ff9ba6,al
  406874:	xchg   ebp,eax
  406875:	ja     0x40686c
  406877:	test   DWORD PTR [edx],0x77c92f87
  40687d:	fsub   QWORD PTR ds:0x96daab0c
  406883:	adc    bh,BYTE PTR [edx]
  406885:	cmc    
  406886:	cmp    ah,BYTE PTR [ecx+0x3cf8aa4d]
  40688c:	add    al,0x84
  40688e:	add    DWORD PTR es:[eax+0x199090d],ebx
  406895:	push   es
  406896:	mov    cl,0x65
  406898:	stos   BYTE PTR es:[edi],al
  406899:	pushf  
  40689a:	cmp    ah,bl
  40689c:	je     0x4068c3
  40689e:	sbb    dh,BYTE PTR [edi+0x1955ee]
  4068a4:	jne    0x4068d0
  4068a6:	jnp    0x4068e5
  4068a8:	push   ds
  4068a9:	ds mov dh,0x82
  4068ac:	or     eax,0xef0cf1d3
  4068b1:	imul   ebx,DWORD PTR ds:0xc1e96ffc,0xc89254a2
  4068bb:	(bad)  
  4068bc:	mov    bh,0xfd
  4068be:	sub    edi,DWORD PTR [edx+0x7c33686c]
  4068c4:	mov    ?,eax
  4068c6:	pushf  
  4068c7:	scas   al,BYTE PTR es:[edi]
  4068c8:	sub    esp,edx
  4068ca:	ds enter 0x27f5,0xb4
  4068cf:	arpl   WORD PTR [ebx-0x44],si
  4068d2:	cld    
  4068d3:	and    BYTE PTR [ebx],al
  4068d5:	cs sbb al,0x3e
  4068d8:	scas   al,BYTE PTR es:[edi]
  4068d9:	jmp    0xc81f009d
  4068de:	ja     0x40688a
  4068e0:	ins    DWORD PTR es:[edi],dx
  4068e1:	rep lods eax,DWORD PTR ds:[esi]
  4068e3:	jno    0x4068ba
  4068e5:	mov    eax,0x13ac37f7
  4068ea:	cmp    edx,ebp
  4068ec:	add    bl,BYTE PTR [eax+eiz*2]
  4068ef:	add    BYTE PTR [ebp+0x18],dl
  4068f2:	sbb    esi,edi
  4068f4:	cli    
  4068f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4068f6:	fcomi  st,st(6)
  4068f8:	aaa    
  4068f9:	mov    dl,0x56
  4068fb:	pop    esp
  4068fc:	mov    ch,0xb5
  4068fe:	scas   al,BYTE PTR es:[edi]
  4068ff:	jmp    0x5a9d:0x6a88f963
  406906:	fdiv   DWORD PTR [ebp+0x6ddb0597]
  40690c:	adc    ecx,0x22627c6e
  406912:	mov    dh,0x33
  406914:	push   ss
  406915:	cmp    esi,ecx
  406917:	sub    eax,edi
  406919:	repnz cld 
  40691b:	fmul   DWORD PTR [esi+0x5c]
  40691e:	pushf  
  40691f:	fdiv   QWORD PTR [esi]
  406921:	dec    ecx
  406922:	pusha  
  406923:	es add cl,al
  406926:	out    dx,eax
  406927:	leave  
  406928:	retf   0xb7e9
  40692b:	xor    al,ch
  40692d:	jnp    0x4068af
  40692f:	(bad)  
  406931:	jecxz  0x406991
  406933:	jg     0x406953
  406935:	jns    0x4068de
  406937:	mov    edi,0x35f275aa
  40693c:	mov    ch,BYTE PTR ds:0x484f6834
  406942:	add    BYTE PTR [eax],ch
  406944:	outs   dx,BYTE PTR ds:[esi]
  406945:	xchg   edi,eax
  406946:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406947:	cmp    ebx,ecx
  406949:	lods   eax,DWORD PTR ds:[esi]
  40694a:	repz pop ss
  40694c:	xchg   DWORD PTR [ebx],ebp
  40694e:	pop    ecx
  40694f:	or     ch,BYTE PTR [esi+ebp*8+0x6a240997]
  406956:	xor    bh,BYTE PTR [esi-0x7fe51f5d]
  40695c:	xor    DWORD PTR [eax],edx
  40695e:	push   ebx
  40695f:	mov    ?,edi
  406961:	or     esp,esi
  406963:	fs xor BYTE PTR es:[ebx],dh
  406967:	inc    BYTE PTR [ecx+eiz*8-0x25af67c6]
  40696e:	imul   ebx,DWORD PTR [edi-0x11],0x12e3d999
  406975:	popa   
  406976:	les    ecx,FWORD PTR [eax-0xe64efde]
  40697c:	addr16 inc esi
  40697e:	mov    ch,0xe5
  406980:	(bad)  
  406981:	pop    ds
  406982:	push   ss
  406983:	ss scas al,BYTE PTR es:[edi]
  406985:	pop    esp
  406986:	cmc    
  406987:	test   al,0x38
  406989:	(bad)  
  40698a:	adc    edx,edi
  40698c:	xor    al,0x17
  40698e:	push   edi
  40698f:	loope  0x406922
  406991:	or     BYTE PTR [ecx+edx*1+0x36],ch
  406995:	into   
  406996:	pop    edx
  406997:	push   ds
  406998:	xor    esi,esp
  40699a:	arpl   WORD PTR [ecx],cx
  40699c:	pushf  
  40699d:	push   0x6e
  40699f:	daa    
  4069a0:	idiv   edi
  4069a2:	mov    dl,0xef
  4069a4:	push   ds
  4069a5:	lods   al,BYTE PTR ds:[esi]
  4069a6:	repz out 0xa7,eax
  4069a9:	mov    ecx,0xac0d38a2
  4069ae:	in     al,dx
  4069af:	xor    al,0x5d
  4069b1:	int3   
  4069b2:	jmp    0xdafa30e0
  4069b7:	(bad)  
  4069b8:	ror    BYTE PTR [edx],0x74
  4069bb:	cs inc esi
  4069bd:	mov    ecx,0x75bf4791
  4069c2:	xor    DWORD PTR [edx],0xc3b7d9e
  4069c8:	mov    edi,0xee7e4832
  4069cd:	mov    cl,0x1
  4069cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4069d0:	push   ebp
  4069d1:	and    BYTE PTR [ebp*4+0x404b834c],ah
  4069d8:	pop    esi
  4069d9:	sbb    bh,BYTE PTR [edx-0x10a9a8d8]
  4069df:	mov    ah,0xe2
  4069e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4069e2:	dec    edx
  4069e3:	lods   eax,DWORD PTR ds:[esi]
  4069e4:	popf   
  4069e5:	aas    
  4069e6:	or     dh,al
  4069e8:	xor    BYTE PTR [eiz*1+0x525151f5],dh
  4069ef:	jecxz  0x40697a
  4069f1:	mov    dl,0x54
  4069f3:	call   0x6877:0x42d0fe9c
  4069fa:	cli    
  4069fb:	mov    BYTE PTR [esi],al
  4069fd:	or     eax,0xaf26a5d2
  406a02:	ret    
  406a03:	sub    DWORD PTR [esi],esp
  406a05:	xor    edi,DWORD PTR [ecx+0x5d]
  406a08:	lock (bad) 
  406a0a:	inc    edx
  406a0b:	dec    eax
  406a0c:	mov    ds:0x29011f45,al
  406a11:	inc    ebp
  406a12:	iret   
  406a13:	test   al,0xb9
  406a15:	add    BYTE PTR [ebx+ebx*4-0x7c],bh
  406a19:	scas   al,BYTE PTR es:[edi]
  406a1a:	out    dx,eax
  406a1b:	sbb    BYTE PTR [ecx-0x44],dl
  406a1e:	into   
  406a1f:	dec    edi
  406a20:	ins    BYTE PTR es:[edi],dx
  406a21:	pop    es
  406a22:	addr16 std 
  406a24:	rol    DWORD PTR [ecx+0x3a],0xc1
  406a28:	loope  0x4069ab
  406a2a:	je     0x4069cd
  406a2c:	sahf   
  406a2d:	xchg   DWORD PTR [edx+0x4c45afca],edi
  406a33:	sub    bl,BYTE PTR [edx-0x4e7a7edd]
  406a39:	or     al,0x6c
  406a3b:	fcom   QWORD PTR [esi+0x57]
  406a3e:	add    BYTE PTR [ebx+0x173a63c7],cl
  406a44:	repnz push 0x51fff01c
  406a4a:	nop
  406a4b:	and    ebx,edx
  406a4d:	mov    ebp,0xf4ba702d
  406a52:	jmp    0xdf0944e6
  406a57:	pushf  
  406a58:	pop    edi
  406a59:	jne    0x406a07
  406a5b:	inc    eax
  406a5c:	xor    bl,BYTE PTR [edi-0x45ccfddf]
  406a62:	and    DWORD PTR [ecx+0xf9c22d8],edi
  406a68:	scas   eax,DWORD PTR es:[edi]
  406a69:	or     ch,dl
  406a6b:	cmp    DWORD PTR [esi-0x4f574a77],edi
  406a71:	mov    eax,0x2141739f
  406a76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a77:	sub    DWORD PTR ds:0xc216e5cf,esp
  406a7d:	jecxz  0x406ae7
  406a7f:	aad    0x7d
  406a81:	hlt    
  406a82:	jne    0x406a42
  406a84:	inc    esp
  406a85:	imul   edi,DWORD PTR [edi-0x66],0xbc38b158
  406a8c:	enter  0xb61a,0x42
  406a90:	mov    dl,0xbd
  406a92:	int    0x37
  406a94:	mov    edx,0xb0053e05
  406a99:	mov    BYTE PTR [ecx+0x0],ch
  406a9c:	loop   0x406a58
  406a9e:	(bad)
  406aa2:	addr16 xchg edx,eax
  406aa4:	adc    eax,0xf8f49f84
  406aa9:	lds    esi,FWORD PTR ds:0x4d575e81
  406aaf:	cmp    al,BYTE PTR [edi-0x2ad5ec91]
  406ab5:	int    0x54
  406ab7:	test   bl,ch
  406ab9:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406abb:	neg    DWORD PTR [ecx]
  406abd:	hlt    
  406abe:	push   cs
  406abf:	mov    eax,DWORD PTR [ecx+0x5e0d1604]
  406ac5:	(bad)  
  406ac6:	push   ss
  406ac7:	stos   BYTE PTR es:[edi],al
  406ac8:	add    DWORD PTR [edx+ecx*8-0x69],ecx
  406acc:	call   0xe1086d15
  406ad1:	js     0x406a65
  406ad3:	repz mov dl,0xd7
  406ad6:	xchg   edi,eax
  406ad7:	jmp    0x406a90
  406ad9:	and    bl,BYTE PTR [ecx]
  406adb:	call   0xef905e10
  406ae0:	retf   
  406ae1:	pmuludq mm6,QWORD PTR [esi]
  406ae4:	sub    edi,esi
  406ae6:	retf   0xacdd
  406ae9:	mov    dh,0xcf
  406aeb:	mov    ah,BYTE PTR [edi]
  406aed:	cmp    DWORD PTR [esi],ecx
  406aef:	clc    
  406af0:	fst    st(1)
  406af2:	fild   DWORD PTR [eax+0x3d98b799]
  406af8:	inc    edi
  406af9:	sub    ebx,DWORD PTR [ebx]
  406afb:	xchg   edi,eax
  406afc:	int    0xfc
  406afe:	and    BYTE PTR [esi-0x374cde8e],dh
  406b04:	mov    ds:0x7750b6c1,al
  406b09:	fild   DWORD PTR [ecx]
  406b0b:	fidivr DWORD PTR [edx+edx*1]
  406b0e:	iret   
  406b0f:	jb     0x406b2f
  406b11:	lahf   
  406b12:	shl    esi,1
  406b14:	(bad)  
  406b15:	inc    DWORD PTR [eax-0x52]
  406b18:	mov    BYTE PTR [ecx+0x67],cl
  406b1b:	addr16 popf 
  406b1d:	mov    esi,0xaed9aa7a
  406b22:	xor    eax,0xaf78ceac
  406b27:	js     0x406b7a
  406b29:	mov    al,0x8a
  406b2b:	cmp    eax,0x36686963
  406b30:	mov    eax,0xc295998e
  406b35:	add    al,0xa4
  406b37:	(bad)  
  406b38:	in     eax,0xf1
  406b3a:	ret    0xcaff
  406b3d:	lea    eax,[ebx]
  406b3f:	dec    esp
  406b40:	jbe    0x406b62
  406b42:	mov    ds:0xdf892249,eax
  406b47:	stos   DWORD PTR es:[edi],eax
  406b48:	(bad)  
  406b49:	iret   
  406b4a:	lods   al,BYTE PTR ds:[esi]
  406b4b:	sub    edx,0x8bc8a5eb
  406b51:	inc    eax
  406b52:	push   ebx
  406b53:	cdq    
  406b54:	pop    ecx
  406b56:	inc    edx
  406b57:	adc    ch,BYTE PTR [esi+0x27581ba]
  406b5d:	rcr    DWORD PTR [edi-0x5dfd1125],0x91
  406b64:	mov    ecx,0xf13f06b2
  406b69:	inc    ebx
  406b6a:	dec    edx
  406b6b:	push   ebp
  406b6c:	pusha  
  406b6d:	lods   eax,DWORD PTR ds:[esi]
  406b6e:	call   0xea62:0x54b536f
  406b75:	out    0x56,eax
  406b77:	xchg   esp,eax
  406b78:	sbb    dh,al
  406b7a:	pop    edx
  406b7b:	in     eax,0xaf
  406b7d:	mov    ah,0xb4
  406b7f:	je     0x406ba1
  406b81:	dec    eax
  406b82:	dec    esp
  406b83:	imul   eax,DWORD PTR [eax],0x7faabc08
  406b89:	inc    ebx
  406b8a:	cmp    BYTE PTR [ecx],0x1a
  406b8d:	xchg   esi,eax
  406b8e:	xchg   BYTE PTR [ebx],ah
  406b90:	dec    ecx
  406b91:	push   edx
  406b92:	stos   DWORD PTR es:[edi],eax
  406b93:	mov    ds:0xcdd51e66,al
  406b98:	(bad)  
  406b9a:	fdivr  QWORD PTR [eax-0x44]
  406b9d:	jae    0x406bcd
  406b9f:	mov    cs,WORD PTR [esi]
  406ba1:	mov    esi,ss
  406ba3:	ror    BYTE PTR [edx+0x73],1
  406ba6:	loope  0x406b60
  406ba8:	mov    edx,0x94953247
  406bad:	in     eax,dx
  406bae:	lods   eax,DWORD PTR ds:[esi]
  406baf:	scas   al,BYTE PTR es:[edi]
  406bb0:	jne    0x406be6
  406bb2:	jp     0x406b6d
  406bb4:	popa   
  406bb5:	test   eax,0xb4958456
  406bba:	mov    al,ds:0x90aee4c8
  406bbf:	aad    0x13
  406bc1:	ret    
  406bc2:	(bad)
  406bc5:	sub    al,0xae
  406bc7:	repnz rcr BYTE PTR [ebx+0x7fef2f2c],0x9c
  406bcf:	and    eax,0xb2523a63
  406bd4:	dec    ebp
  406bd5:	inc    esi
  406bd6:	inc    esp
  406bd7:	push   cs
  406bd8:	dec    ebp
  406bd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406bda:	push   ecx
  406bdb:	adc    bl,0x33
  406bde:	or     eax,0xdae3483b
  406be3:	xchg   edx,eax
  406be4:	adc    BYTE PTR [esi+0x76],cl
  406be7:	cdq    
  406be8:	pop    ebp
  406be9:	inc    ecx
  406bea:	stos   DWORD PTR es:[edi],eax
  406beb:	inc    ebx
  406bec:	xor    BYTE PTR [eax-0x43],0xaa
  406bf0:	call   0x3e11:0x1f1a6753
  406bf7:	jno    0x406bb6
  406bf9:	call   0x2926b65a
  406bfe:	push   eax
  406bff:	imul   edi,DWORD PTR [ecx+0x5ef28c0a],0x45
  406c06:	stos   DWORD PTR es:[edi],eax
  406c07:	call   0x3488:0xb76b8a4d
  406c0e:	mov    eax,0x4d4650e4
  406c13:	sbb    eax,0xab91c709
  406c18:	loope  0x406c50
  406c1a:	sub    eax,0x3a959f16
  406c1f:	sub    DWORD PTR [ebx+0x115c0b11],edx
  406c25:	sbb    BYTE PTR [eax],ch
  406c27:	xchg   BYTE PTR [ebp-0x5b],dh
  406c2a:	cdq    
  406c2b:	cli    
  406c2c:	cmp    cl,BYTE PTR [esp+esi*8+0x31bcdaa6]
  406c33:	pop    eax
  406c34:	mul    BYTE PTR [edx]
  406c36:	shl    bl,0x1a
  406c39:	imul   eax,edx,0x70c2a954
  406c3f:	adc    bh,BYTE PTR [ecx-0x5f07aa09]
  406c45:	jo     0x406c02
  406c47:	sbb    al,0xe2
  406c49:	jl     0x406c52
  406c4b:	mov    esi,0x3112c6fa
  406c50:	jmp    0x4d22:0x89c31c56
  406c57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c58:	enter  0xb83a,0x40
  406c5c:	and    eax,0xb087616e
  406c61:	mov    esp,0xac987f79
  406c66:	sahf   
  406c67:	gs mov ah,0x5e
  406c6a:	push   0xffffffa5
  406c6c:	mov    WORD PTR [edx],cs
  406c6e:	fsubr  DWORD PTR [edx-0x26]
  406c71:	aaa    
  406c72:	sti    
  406c73:	data16 fistp DWORD PTR [ebp+edi*2-0x458ad5ab]
  406c7b:	das    
  406c7c:	(bad)  
  406c7d:	ja     0x406c7b
  406c7f:	adc    DWORD PTR [esi],esi
  406c81:	cmp    al,0x75
  406c83:	scas   eax,DWORD PTR es:[edi]
  406c84:	inc    ebx
  406c85:	imul   ecx,DWORD PTR [edx-0x43],0xffffffe6
  406c89:	(bad)  
  406c8a:	int3   
  406c8b:	imul   edi,DWORD PTR [ebp+ebp*4-0x7d],0xba1832c
  406c93:	lea    ebp,[esi+0x77b9a228]
  406c99:	xchg   esi,eax
  406c9a:	xor    DWORD PTR [ebp-0x5c],ebp
  406c9d:	inc    eax
  406c9e:	add    DWORD PTR [ebp+0x51],edx
  406ca1:	aas    
  406ca2:	data16 mov dl,0x9
  406ca5:	sub    BYTE PTR [ecx],ah
  406ca7:	mov    edx,DWORD PTR [ecx]
  406ca9:	adc    eax,0xccb3b13c
  406cae:	mov    ch,0xa3
  406cb0:	les    esi,FWORD PTR [ebx]
  406cb2:	xchg   ebx,eax
  406cb3:	and    DWORD PTR [edx-0x19],edi
  406cb6:	add    eax,0xc7165ed
  406cbb:	out    dx,eax
  406cbc:	es jmp 0x406caf
  406cbf:	push   esi
  406cc0:	pushf  
  406cc1:	stos   DWORD PTR es:[edi],eax
  406cc2:	push   ss
  406cc3:	jl     0x406c5d
  406cc5:	mov    ebx,0x44cb3baf
  406cca:	popa   
  406ccb:	call   0xdc87302
  406cd0:	adc    eax,0x32d28ffe
  406cd5:	fstp   DWORD PTR [ebx+0x161b88bd]
  406cdb:	xchg   esi,eax
  406cdc:	aam    0xa
  406cde:	enter  0x8d3f,0x5f
  406ce2:	mov    WORD PTR [edi],?
  406ce4:	jo     0x406cd6
  406ce6:	fisub  DWORD PTR [eax+0x7612a7ef]
  406cec:	bound  edx,QWORD PTR [ecx]
  406cee:	fiadd  WORD PTR [esi+ebp*2]
  406cf1:	mov    WORD PTR [esi],ds
  406cf3:	push   ebx
  406cf4:	cwde   
  406cf5:	loope  0x406d39
  406cf7:	outs   dx,BYTE PTR ds:[esi]
  406cf8:	icebp  
  406cf9:	jecxz  0x406ce9
  406cfb:	xchg   ebp,eax
  406cfc:	loopne 0x406d0c
  406cfe:	je     0x406c9e
  406d00:	xchg   edi,eax
  406d01:	xchg   esp,eax
  406d02:	loop   0x406c87
  406d04:	jns    0x406d7d
  406d06:	pop    ds
  406d07:	ret    
  406d08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d09:	adc    dh,cl
  406d0b:	dec    eax
  406d0d:	in     al,dx
  406d0e:	xchg   edx,eax
  406d0f:	rcl    DWORD PTR [edx],1
  406d11:	add    eax,0x67141afe
  406d16:	pop    ds
  406d17:	cmp    edi,esi
  406d19:	xchg   edi,eax
  406d1a:	push   cs
  406d1b:	mov    dh,BYTE PTR [edi]
  406d1d:	inc    edi
  406d1e:	add    eax,0x7a485124
  406d23:	xor    BYTE PTR [edx],dh
  406d25:	arpl   WORD PTR [esi-0x1d],bp
  406d28:	(bad)  
  406d29:	out    0xcd,al
  406d2b:	xchg   esp,eax
  406d2c:	dec    edx
  406d2d:	nop
  406d2e:	neg    bl
  406d30:	rcr    DWORD PTR [eax+0x53],cl
  406d33:	push   esp
  406d34:	into   
  406d35:	xor    cl,BYTE PTR [ecx]
  406d37:	dec    edi
  406d38:	inc    ecx
  406d39:	xlat   BYTE PTR ds:[ebx]
  406d3a:	ret    0xbf42
  406d3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d3e:	test   DWORD PTR [eax],ecx
  406d40:	inc    eax
  406d41:	xchg   edi,eax
  406d42:	js     0x406d50
  406d44:	fistp  WORD PTR [edi]
  406d46:	(bad)  
  406d47:	int    0x42
  406d49:	adc    BYTE PTR [ebx],ah
  406d4b:	jg     0x406d05
  406d4d:	jmp    0x86a49675
  406d52:	cmp    al,0xb9
  406d54:	(bad)  
  406d55:	out    dx,al
  406d56:	retf   
  406d57:	cmp    BYTE PTR [edx+0x4a913b86],al
  406d5d:	int3   
  406d5e:	fsubrp st(3),st
  406d60:	mov    dh,0x5d
  406d62:	(bad)  
  406d63:	inc    ebp
  406d64:	ja     0x406d71
  406d66:	and    BYTE PTR [edx-0x45375200],dh
  406d6c:	dec    edi
  406d6d:	and    ebx,esi
  406d6f:	xchg   edi,eax
  406d70:	jne    0x406d9b
  406d72:	sbb    eax,0x19722ecf
  406d77:	inc    ecx
  406d78:	push   esp
  406d79:	aam    0x13
  406d7b:	test   DWORD PTR [eax+ecx*4+0x18b81a69],ebp
  406d82:	inc    eax
  406d83:	cli    
  406d84:	mov    ecx,0x863a5fb9
  406d89:	(bad)  
  406d8a:	jg     0x406dbb
  406d8c:	scas   al,BYTE PTR es:[edi]
  406d8d:	push   edi
  406d8e:	adc    eax,0xb5ff9644
  406d93:	xchg   ebp,eax
  406d94:	dec    ebx
  406d95:	int3   
  406d96:	and    al,bh
  406d98:	std    
  406d99:	add    ecx,ecx
  406d9b:	cs daa 
  406d9d:	pop    edx
  406d9e:	add    al,0xba
  406da0:	mov    ecx,0xb23be45f
  406da5:	pop    ecx
  406da6:	pop    eax
  406da7:	jp     0x406dc7
  406da9:	fwait
  406daa:	push   eax
  406dab:	data16 jo 0x406d51
  406dae:	imul   esp,DWORD PTR [eax],0xe1d8bed8
  406db4:	add    bh,BYTE PTR [ecx-0xd1c8586]
  406dba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406dbb:	hlt    
  406dbc:	dec    eax
  406dbd:	lods   al,BYTE PTR ds:[esi]
  406dbe:	(bad)  
  406dbf:	iret   
  406dc0:	jmp    0xeb74:0x6fc2d9ac
  406dc7:	imul   ebx
  406dc9:	int    0xed
  406dcb:	mov    BYTE PTR [ecx-0x57],cl
  406dce:	xchg   ecx,eax
  406dcf:	mov    fs,WORD PTR [esp+esi*2]
  406dd2:	pop    es
  406dd3:	les    esi,FWORD PTR [edi-0x1ed3d799]
  406dd9:	aas    
  406dda:	retf   
  406ddb:	inc    ebp
  406ddc:	pop    edx
  406ddd:	fcomp  QWORD PTR [esi]
  406ddf:	cmc    
  406de0:	out    0x44,eax
  406de2:	int    0xd2
  406de4:	sbb    al,0xca
  406de6:	aas    
  406de7:	push   edi
  406de8:	jmp    0x4ede6984
  406ded:	jl     0x406e10
  406def:	fist   WORD PTR [esi]
  406df1:	aam    0x14
  406df3:	rol    DWORD PTR [ebx+0x5542aed4],cl
  406df9:	xor    BYTE PTR [ebp+ebp*2+0xd],0x99
  406dfe:	pop    edx
  406dff:	xchg   BYTE PTR [esi+ecx*4-0x28],ah
  406e03:	and    esp,ebx
  406e05:	mov    esp,0x977996f1
  406e0a:	adc    dh,BYTE PTR [ebp-0x36]
  406e0d:	adc    esi,DWORD PTR [ebx+0x2f3e6cf3]
  406e13:	push   ss
  406e14:	ret    
  406e15:	in     al,dx
  406e16:	fsqrt  
  406e18:	rol    DWORD PTR [eax],1
  406e1a:	out    0x61,eax
  406e1c:	xor    ebx,edx
  406e1e:	inc    esp
  406e1f:	xor    ah,BYTE PTR [edi+esi*1+0x6e0f9b41]
  406e26:	scas   eax,DWORD PTR es:[edi]
  406e27:	push   ebx
  406e28:	push   0x7
  406e2a:	push   eax
  406e2b:	add    edi,DWORD PTR [ebx+0x41]
  406e2e:	or     edx,ebp
  406e30:	stc    
  406e31:	jnp    0x406e37
  406e33:	test   eax,edx
  406e35:	out    dx,eax
  406e36:	pop    ecx
  406e37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e38:	push   edi
  406e39:	jge    0x406eb9
  406e3b:	mov    esp,0x227f02e1
  406e40:	add    ch,BYTE PTR [edx+0x4]
  406e43:	jno    0x406e26
  406e45:	inc    edi
  406e46:	cwde   
  406e47:	add    DWORD PTR [eax+0x19120b44],esp
  406e4d:	and    al,0xd9
  406e4f:	sbb    eax,0x64c79948
  406e54:	pop    ss
  406e55:	test   eax,esp
  406e57:	mov    dl,BYTE PTR [edi-0x2871b748]
  406e5d:	add    BYTE PTR [ecx],al
  406e5f:	std    
  406e60:	push   eax
  406e61:	and    eax,0xf9cfcb68
  406e66:	inc    BYTE PTR [ebp-0x571e9e12]
  406e6c:	jae    0x406e7a
  406e6e:	and    eax,0xc23c6de7
  406e73:	mov    edi,DWORD PTR [ecx+0x3]
  406e76:	fistp  QWORD PTR [edx+0x6d3469f6]
  406e7c:	and    al,0x57
  406e7e:	adc    bl,BYTE PTR [esi+0x1e4c26ff]
  406e84:	js     0x406efc
  406e86:	xchg   edx,eax
  406e87:	scas   eax,DWORD PTR es:[edi]
  406e88:	push   esp
  406e89:	or     BYTE PTR [ebx-0x64],cl
  406e8c:	outs   dx,DWORD PTR ds:[esi]
  406e8d:	dec    edi
  406e8e:	pop    esi
  406e8f:	inc    eax
  406e90:	lahf   
  406e91:	cmp    bl,al
  406e93:	cdq    
  406e94:	mov    eax,0x3d463450
  406e99:	inc    eax
  406e9a:	scas   eax,DWORD PTR es:[edi]
  406e9b:	in     al,0x6f
  406e9d:	jns    0x406ec0
  406e9f:	and    ch,dh
  406ea1:	and    al,0xb8
  406ea3:	hlt    
  406ea4:	ins    DWORD PTR es:[edi],dx
  406ea5:	sbb    BYTE PTR [edi+0x3f2137fc],cl
  406eab:	cmp    BYTE PTR [edx+0x2d84516b],0xcd
  406eb2:	inc    eax
  406eb4:	or     al,BYTE PTR [eax]
  406eb6:	dec    edx
  406eb7:	and    ah,BYTE PTR [edx-0x7d]
  406eba:	or     BYTE PTR [edi+ebx*1-0x21],bh
  406ebe:	mov    eax,0xe9ec7c33
  406ec3:	sbb    al,0x8a
  406ec5:	(bad)  [ecx+ecx*1-0x41]
  406ec9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406eca:	push   ebp
  406ecb:	jae    0x406f32
  406ecd:	and    al,BYTE PTR ss:[esi]
  406ed0:	xor    eax,0x59757eb7
  406ed5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ed6:	or     DWORD PTR [edx],esi
  406ed8:	retf   
  406ed9:	test   al,0x2d
  406edb:	cdq    
  406edc:	xor    ebx,DWORD PTR [edi-0x60]
  406edf:	and    al,0x6d
  406ee1:	ss dec ecx
  406ee3:	or     eax,DWORD PTR [esi+0x47f78a2f]
  406ee9:	sub    ah,ah
  406eeb:	pop    edi
  406eec:	mov    ebp,DWORD PTR [ebx+eiz*4-0x108dc4c6]
  406ef3:	je     0x406f3c
  406ef5:	adc    DWORD PTR [ecx-0x69],ebp
  406ef8:	push   ebp
  406ef9:	push   ds
  406efa:	xlat   BYTE PTR ds:[ebx]
  406efb:	push   ds
  406efc:	mov    ebx,0xbeda7aa
  406f01:	jb     0x406f45
  406f03:	stos   BYTE PTR es:[edi],al
  406f04:	mov    edx,0xeb0f0b58
  406f09:	sub    dh,BYTE PTR [esi]
  406f0b:	ds clc 
  406f0d:	fist   DWORD PTR [esi+0x66]
  406f10:	call   0x1363ebda
  406f15:	aaa    
  406f16:	jb     0x406ed5
  406f18:	popf   
  406f19:	scas   al,BYTE PTR es:[edi]
  406f1a:	retf   
  406f1b:	lea    esi,[ebx]
  406f1d:	add    al,0xbf
  406f1f:	mov    BYTE PTR [ebp+0x3b803ae],dh
  406f25:	mov    al,BYTE PTR [eax+0x47cb43fe]
  406f2b:	and    al,BYTE PTR [edx+edx*8]
  406f2e:	repnz sub dh,BYTE PTR [eax-0x13]
  406f32:	mov    eax,ds:0xa1a0b7b2
  406f37:	and    cl,BYTE PTR [edi-0x29c7195b]
  406f3d:	pop    ebx
  406f3e:	sbb    BYTE PTR [ebp-0x3e],bh
  406f41:	and    DWORD PTR ds:0xa577f2ac,eax
  406f47:	push   es
  406f48:	sub    ebx,DWORD PTR [esi-0x216587dc]
  406f4e:	adc    eax,0x2764c4cd
  406f53:	std    
  406f54:	inc    edi
  406f55:	cmp    esp,DWORD PTR ds:0x4da9936e
  406f5b:	sbb    al,0xc2
  406f5d:	gs push edi
  406f5f:	jle    0x406f45
  406f61:	jmp    0xb420:0xcb4ae300
  406f68:	mov    ds:0x4fb5eb93,al
  406f6d:	mov    dh,0x9
  406f6f:	out    dx,al
  406f70:	fst    st(4)
  406f72:	push   0xffffff94
  406f74:	push   ebx
  406f75:	bound  ecx,QWORD PTR [edi]
  406f77:	mov    BYTE PTR [edi],dh
  406f79:	fsubrp st(7),st
  406f7b:	sar    DWORD PTR ds:0x6a73aba9,0x0
  406f82:	shl    BYTE PTR [edx+0x33e811ff],cl
  406f88:	rcl    ebx,0x51
  406f8b:	push   0x52e6f22f
  406f90:	fild   QWORD PTR [ecx]
  406f92:	popa   
  406f93:	stos   DWORD PTR es:[edi],eax
  406f94:	imul   eax,DWORD PTR [esp+eax*2-0x6e755bf1],0x76
  406f9c:	dec    esi
  406f9d:	jmp    0x98ddf23e
  406fa2:	xlat   BYTE PTR ds:[ebx]
  406fa3:	es in  al,dx
  406fa5:	rcl    BYTE PTR [eax+0x28],cl
  406fa8:	ins    BYTE PTR es:[edi],dx
  406fa9:	add    ecx,ebx
  406fab:	popf   
  406fac:	jmp    0x406faa
  406fae:	xor    esp,DWORD PTR [esp+edi*8-0x54173fab]
  406fb5:	adc    BYTE PTR [ecx],ah
  406fb7:	mov    dh,0xd0
  406fb9:	dec    edi
  406fba:	test   al,ah
  406fbc:	repz ror BYTE PTR [esi+0x43ea34f5],0x61
  406fc4:	and    al,bh
  406fc6:	pop    esi
  406fc7:	gs sbb dl,bh
  406fca:	push   ebx
  406fcb:	inc    edx
  406fcc:	in     eax,0x0
  406fce:	sbb    eax,0x8c1774e0
  406fd3:	imul   ebp,DWORD PTR [ebp+0x76],0x2625c321
  406fda:	lods   eax,DWORD PTR ds:[esi]
  406fdb:	mov    dh,0x3a
  406fdd:	add    al,0xc0
  406fdf:	mov    ds,WORD PTR [ecx]
  406fe1:	pop    ebp
  406fe2:	pop    edi
  406fe3:	dec    esi
  406fe4:	scas   al,BYTE PTR es:[edi]
  406fe5:	dec    eax
  406fe6:	out    0x5d,eax
  406fe8:	jmp    0xfef06048
  406fed:	adc    eax,0x3aa21bee
  406ff2:	and    BYTE PTR [ecx],dh
  406ff4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ff5:	sbb    eax,0x562882cd
  406ffa:	push   cs
  406ffb:	mul    DWORD PTR [esi]
  406ffd:	pop    ebp
  406ffe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406fff:	jl     0x407034
  407001:	mov    cl,al
  407003:	pop    esp
  407004:	and    DWORD PTR [esi-0x484fd7b3],ebp
  40700a:	sub    ecx,ebp
  40700c:	das    
  40700d:	dec    edx
  40700e:	pop    ss
  40700f:	out    0x77,al
  407011:	das    
  407012:	inc    ecx
  407013:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407014:	arpl   WORD PTR [ebx+esi*8+0x55777f6e],ax
  40701b:	fld    TBYTE PTR [esi+ecx*1-0x7e0d3d48]
  407022:	xchg   esp,eax
  407023:	jmp    0x20ac:0x9db3ce7c
  40702a:	push   0x8cb96eb4
  40702f:	es dec esp
  407031:	stos   BYTE PTR es:[edi],al
  407032:	mov    ebp,0xd2275097
  407037:	lock int3 
  407039:	xchg   esi,eax
  40703a:	xchg   ebp,eax
  40703b:	add    bl,BYTE PTR [eax]
  40703d:	dec    esi
  40703e:	mov    al,0xf6
  407040:	push   0xac62068a
  407045:	xchg   ecx,eax
  407046:	dec    ecx
  407047:	mov    ds:0x55b4cef9,al
  40704c:	mov    eax,0x707eab4d
  407051:	mov    es,WORD PTR [edi-0x64abfbf]
  407057:	ins    BYTE PTR es:[edi],dx
  407058:	mov    esi,0x4fe3b4e8
  40705d:	clc    
  40705e:	ret    0x5ad1
  407061:	jnp    0x407035
  407063:	cmp    BYTE PTR [esi],bh
  407065:	and    eax,0x21179a3b
  40706a:	retf   
  40706b:	mov    eax,ds:0xfe4b0b8a
  407070:	in     al,0xc4
  407072:	hlt    
  407073:	cli    
  407074:	outs   dx,BYTE PTR ds:[esi]
  407075:	and    bh,bl
  407077:	inc    ebx
  407078:	or     ch,BYTE PTR [ebx+0x6f]
  40707b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40707c:	clc    
  40707d:	and    DWORD PTR [edi+0x4],esi
  407080:	xchg   ebp,eax
  407081:	or     BYTE PTR [edx-0x2e],dl
  407084:	das    
  407085:	mov    cl,0x23
  407087:	inc    ebx
  407088:	jecxz  0x407038
  40708a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40708b:	jge    0x407021
  40708d:	mov    cl,0x24
  40708f:	add    esp,DWORD PTR [ecx-0x1a]
  407092:	sub    al,0xb3
  407094:	ss jmp 0x407032
  407097:	fs (bad) 
  407099:	fiadd  DWORD PTR [eax+eax*2-0x8]
  40709d:	dec    ebp
  40709e:	add    edi,DWORD PTR [edx-0x5a9d2318]
  4070a4:	outs   dx,DWORD PTR ds:[esi]
  4070a5:	lods   eax,DWORD PTR ds:[esi]
  4070a6:	or     DWORD PTR [ebx+0x32],ecx
  4070a9:	xchg   edi,eax
  4070aa:	inc    edx
  4070ab:	in     eax,0x23
  4070ad:	sbb    ah,dl
  4070af:	and    eax,0xf05ffb0f
  4070b4:	sub    DWORD PTR [edx],ecx
  4070b6:	push   es
  4070b7:	xchg   edi,eax
  4070b8:	gs mov dh,0x23
  4070bb:	out    0xc7,eax
  4070bd:	mov    ds,ebx
  4070bf:	sub    dl,0x3f
  4070c2:	lea    edi,[eax-0x4e]
  4070c5:	add    BYTE PTR [edx-0x69],ch
  4070c8:	shl    DWORD PTR [edi+ebx*4+0x4a8fa704],cl
  4070cf:	shr    BYTE PTR [eax-0x36],0xb5
  4070d3:	retf   0xbde2
  4070d6:	popf   
  4070d7:	adc    al,0x12
  4070d9:	dec    ebp
  4070da:	mov    DWORD PTR [edx],edx
  4070dc:	adc    BYTE PTR [esi+0x4],cl
  4070df:	xor    BYTE PTR [esi+0x3b2aeccf],dh
  4070e5:	dec    esp
  4070e6:	lods   al,BYTE PTR ds:[esi]
  4070e7:	ret    0x2b68
  4070ea:	add    al,0x32
  4070ec:	mov    bl,0xb
  4070ee:	mov    ah,0xb6
  4070f0:	adc    cl,BYTE PTR [edi+edi*2-0x24451c99]
  4070f7:	or     al,0x2a
  4070f9:	jmp    DWORD PTR [edi]
  4070fb:	push   ecx
  4070fc:	mov    ecx,0xb51cad49
  407101:	mov    ebx,0xc7013a73
  407106:	int3   
  407107:	jmp    0x301d:0x542a3f92
  40710e:	and    bl,BYTE PTR [esi+0xb]
  407111:	fisttp DWORD PTR [esi]
  407113:	sub    eax,0xf23473a9
  407118:	(bad)  
  407119:	iret   
  40711a:	scas   eax,DWORD PTR es:[edi]
  40711b:	xchg   ebx,eax
  40711c:	dec    edx
  40711d:	imul   edx,edx,0x7
  407120:	mov    ds:0x1785eb75,al
  407125:	stos   DWORD PTR es:[edi],eax
  407126:	adc    DWORD PTR [esi+0x6a],eax
  407129:	pushf  
  40712a:	fsubr  QWORD PTR ds:[edx]
  40712d:	jecxz  0x40719c
  40712f:	and    eax,DWORD PTR [edi+edx*1-0x35]
  407133:	pop    ebp
  407134:	retf   
  407135:	lea    edx,[edx+0x2]
  407138:	std    
  407139:	int    0xa2
  40713b:	lahf   
  40713c:	aad    0x4
  40713e:	test   ebx,esi
  407140:	add    DWORD PTR [edx+0x60],ebx
  407143:	loop   0x4070fc
  407145:	dec    edi
  407146:	jecxz  0x4071b8
  407148:	cmp    eax,0xdf234471
  40714d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40714e:	test   ecx,edx
  407150:	cmp    BYTE PTR [ebx],ah
  407152:	sti    
  407153:	or     eax,0x56147061
  407158:	mov    bl,0xd7
  40715a:	cmp    BYTE PTR [esi-0x47dbb07b],0xcb
  407161:	jnp    0x4071ab
  407163:	dec    edx
  407164:	imul   ebx,DWORD PTR [eax],0xffffffe5
  407167:	out    dx,eax
  407168:	sbb    BYTE PTR [eax-0x52],0x3d
  40716c:	sbb    BYTE PTR es:[edx],bl
  40716f:	sbb    al,0x32
  407171:	push   edx
  407172:	push   0x6ba5849b
  407177:	leave  
  407178:	mov    dh,0xda
  40717a:	xor    al,ah
  40717c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40717d:	and    bl,ch
  40717f:	push   cs
  407180:	cmc    
  407181:	pop    eax
  407182:	lahf   
  407183:	outs   dx,BYTE PTR ds:[esi]
  407184:	ret    
  407185:	sub    BYTE PTR [ecx+0x0],ch
  407188:	dec    eax
  407189:	cli    
  40718a:	int3   
  40718b:	xchg   edx,eax
  40718c:	mov    WORD PTR [eax+0xd68c817],?
  407192:	and    al,BYTE PTR [ecx+edx*1]
  407195:	into   
  407196:	fisub  WORD PTR [eax+edx*1]
  407199:	jne    0x4071ce
  40719b:	xor    ah,BYTE PTR [esi]
  40719d:	ret    0x96d6
  4071a0:	or     al,0xe0
  4071a2:	fldenv [ebp+0x5a06fb13]
  4071a8:	inc    ebx
  4071a9:	mov    ch,0x24
  4071ab:	adc    DWORD PTR [ecx],edi
  4071ad:	xchg   edx,eax
  4071ae:	mov    dl,0x3e
  4071b0:	xchg   DWORD PTR [edi+0x21f2ddf0],esp
  4071b6:	hlt    
  4071b7:	mov    ds:0x6b2684f8,al
  4071bc:	xor    eax,0xddce534d
  4071c1:	dec    edi
  4071c2:	mov    cl,0xd0
  4071c4:	gs dec esp
  4071c6:	fwait
  4071c7:	sbb    al,0xa3
  4071c9:	or     ebx,DWORD PTR [esi-0x6d]
  4071cc:	imul   ecx,ebx,0x30
  4071cf:	(bad)  
  4071d0:	xlat   BYTE PTR ds:[ebx]
  4071d1:	arpl   WORD PTR [edi],bp
  4071d3:	sahf   
  4071d4:	push   esp
  4071d5:	pop    ds
  4071d6:	jecxz  0x4071dc
  4071d8:	jmp    0x65d482cb
  4071dd:	leave  
  4071de:	push   esp
  4071df:	in     al,0x44
  4071e1:	adc    eax,0xad52ad90
  4071e6:	test   DWORD PTR [ebx],eax
  4071e8:	mov    gs,WORD PTR [eax]
  4071ea:	(bad)  
  4071eb:	mov    edx,0xd0f2a93a
  4071f0:	inc    eax
  4071f1:	loopne 0x407250
  4071f3:	loop   0x4071bd
  4071f5:	test   eax,0xc05784c2
  4071fb:	inc    eax
  4071fc:	mov    dh,0xa4
  4071fe:	ss in  al,dx
  407200:	xchg   esi,eax
  407201:	inc    edx
  407202:	pusha  
  407203:	mov    al,ds:0xd7571143
  407208:	test   BYTE PTR [eax-0x70],ah
  40720b:	imul   edi,DWORD PTR [ebx+eax*4-0x50],0xffffffe2
  407210:	lods   eax,DWORD PTR ds:[esi]
  407211:	cmp    bh,BYTE PTR [esp+edx*8]
  407214:	inc    ecx
  407215:	sub    al,BYTE PTR [edi-0x77]
  407218:	jbe    0x407238
  40721a:	inc    ecx
  40721b:	out    dx,al
  40721c:	mov    dl,BYTE PTR [esi+0x27f1a6df]
  407222:	and    BYTE PTR [ecx+eiz*8],dh
  407225:	mov    edx,0x17da4428
  40722a:	lds    eax,FWORD PTR [ebx+0x69]
  40722d:	lahf   
  40722e:	or     BYTE PTR [ebx],ch
  407230:	sbb    ch,BYTE PTR [bx+di]
  407233:	lock jb 0x4071fc
  407236:	xchg   DWORD PTR [ecx+0x28],edx
  407239:	aam    0xb3
  40723b:	inc    edi
  40723c:	enter  0xd46b,0x97
  407240:	dec    esi
  407241:	gs aad 0x6e
  407244:	ret    
  407245:	dec    ebx
  407246:	and    esi,DWORD PTR [esi+0x1d0a0b25]
  40724c:	sahf   
  40724d:	fbstp  TBYTE PTR [eax-0x50]
  407250:	xchg   ecx,eax
  407251:	sbb    BYTE PTR fs:[ecx+0x7a],0xf3
  407256:	push   es
  407257:	fst    DWORD PTR [ebp-0x5]
  40725a:	pop    eax
  40725b:	add    DWORD PTR [eax],esi
  40725d:	cmp    esi,DWORD PTR [eax]
  40725f:	dec    edx
  407260:	and    eax,0x2694d63d
  407265:	stc    
  407266:	add    esp,DWORD PTR [ebp+0x3bf83d80]
  40726c:	and    esp,DWORD PTR [esi+0xf]
  40726f:	xor    al,BYTE PTR [edx-0x20264b80]
  407275:	outs   dx,DWORD PTR ds:[esi]
  407276:	or     eax,0xfa956a46
  40727b:	jne    0x407236
  40727d:	pusha  
  40727e:	test   BYTE PTR [edi+edx*1+0x6b],ah
  407282:	mov    ds:0xedb819d6,eax
  407287:	lods   al,BYTE PTR ds:[esi]
  407288:	stos   DWORD PTR es:[edi],eax
  407289:	adc    ecx,esp
  40728b:	mov    ebx,edi
  40728d:	sbb    edi,eax
  40728f:	xchg   bx,ax
  407291:	ja     0x40724c
  407293:	adc    esp,eax
  407295:	mov    edx,0xbc9b9ef0
  40729a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40729b:	ss out dx,eax
  40729d:	xor    BYTE PTR [edi-0x6ba26f89],cl
  4072a3:	push   ebx
  4072a4:	pop    edi
  4072a5:	out    0x43,al
  4072a7:	daa    
  4072a8:	loope  0x4072d1
  4072aa:	dec    ebp
  4072ab:	(bad)  
  4072ac:	jbe    0x4072ea
  4072ae:	shr    DWORD PTR [ebp+ebx*2+0x2ddf2929],cl
  4072b5:	sub    eax,0x62ea692e
  4072ba:	inc    ebp
  4072bb:	ret    
  4072bc:	in     al,dx
  4072bd:	xchg   ebp,eax
  4072be:	jcxz   0x40731a
  4072c1:	mov    bl,0x37
  4072c3:	popa   
  4072c4:	or     eax,0x97788d9
  4072c9:	pop    edi
  4072ca:	pusha  
  4072cb:	outs   dx,BYTE PTR ds:[esi]
  4072cc:	addr16 or ebx,ebp
  4072cf:	iret   
  4072d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4072d1:	(bad)  
  4072d2:	stc    
  4072d3:	(bad)  
  4072d4:	or     DWORD PTR [ebx],edx
  4072d6:	push   cs
  4072d7:	(bad)  
  4072d8:	and    dh,BYTE PTR [edx+esi*1-0x22]
  4072dc:	sbb    ebx,DWORD PTR [ecx]
  4072de:	mov    es,WORD PTR [eax-0x9]
  4072e1:	lods   al,BYTE PTR ds:[esi]
  4072e2:	or     BYTE PTR [edx+0x601e6ffc],0x46
  4072e9:	xchg   DWORD PTR [ebp-0x55],edx
  4072ec:	or     cl,dh
  4072ee:	mov    edi,0x9ca40c40
  4072f3:	clc    
  4072f4:	adc    dl,0x4
  4072f7:	and    al,0xd5
  4072f9:	sar    BYTE PTR [ebx+0x74c20612],1
  4072ff:	inc    esp
  407300:	xor    BYTE PTR [edx*4-0x9d82bda],0xc1
  407308:	dec    edi
  407309:	es adc eax,0x4e0e87e9
  40730f:	loope  0x40732a
  407311:	adc    DWORD PTR [edi],0x6b387935
  407317:	cmp    DWORD PTR [ebp-0x5],edx
  40731a:	loope  0x40739b
  40731c:	jmp    0xb5a3d7b4
  407321:	dec    edx
  407322:	sub    ch,BYTE PTR [esi-0x61cd07e1]
  407328:	les    esp,FWORD PTR [ebp+0x67]
  40732b:	jle    0x407356
  40732d:	(bad)  
  40732e:	mov    ds:0x75660f16,eax
  407333:	mov    edi,0x2dc0541e
  407338:	adc    BYTE PTR [ebx+0x20cbaf16],0x9c
  40733f:	scas   al,BYTE PTR es:[edi]
  407340:	push   cs
  407341:	out    0x9,eax
  407343:	jp     0x40732b
  407345:	mov    eax,0xb1c556e9
  40734a:	(bad)  
  40734b:	in     eax,0xb8
  40734d:	imul   eax,DWORD PTR [ebx-0x3e54a005],0xe697df83
  407357:	cmp    BYTE PTR [eax+esi*4-0x63603eee],0x80
  40735f:	stos   DWORD PTR es:[edi],eax
  407360:	inc    ebx
  407361:	mov    eax,0xe053ae48
  407366:	xchg   ebp,eax
  407367:	call   0x2036:0x6d933468
  40736e:	repz fidivr WORD PTR [ecx-0x7b25ef2d]
  407375:	aas    
  407376:	ins    DWORD PTR es:[edi],dx
  407377:	jno    0x4073bb
  407379:	test   bh,cl
  40737b:	pop    ecx
  40737c:	sbb    edi,DWORD PTR [eax]
  40737e:	imul   ebp,DWORD PTR [ebx-0x31],0x32
  407382:	push   edx
  407383:	or     DWORD PTR [ebx],ecx
  407385:	jge    0x40731f
  407387:	mov    WORD PTR [ebx+0x265ae3f1],?
  40738d:	(bad)  
  40738e:	ins    DWORD PTR es:[edi],dx
  40738f:	sbb    dh,BYTE PTR [esi]
  407391:	cmc    
  407392:	mov    esp,0xb59b110b
  407397:	add    ch,bh
  407399:	ror    DWORD PTR [ecx],1
  40739b:	pop    ds
  40739c:	in     al,dx
  40739d:	rcl    DWORD PTR [ebx],cl
  40739f:	outs   dx,DWORD PTR ds:[esi]
  4073a0:	cld    
  4073a1:	icebp  
  4073a2:	mov    gs,ebx
  4073a4:	dec    edx
  4073a5:	push   cs
  4073a6:	jmp    0x2aec8d7a
  4073ab:	or     ch,dl
  4073ad:	lock fisubr DWORD PTR [ebp-0x19]
  4073b1:	dec    edx
  4073b2:	xor    BYTE PTR [ecx-0x2b06e196],0xef
  4073b9:	retf   0x4c24
  4073bc:	jno    0x4073ab
  4073be:	test   DWORD PTR [ecx],esp
  4073c0:	cmp    BYTE PTR [ebp+0x164461e2],bl
  4073c6:	pop    ss
  4073c7:	inc    esp
  4073c8:	jae    0x407437
  4073ca:	cmc    
  4073cb:	cs in  eax,0x60
  4073ce:	adc    DWORD PTR [ebp-0x4ab7656c],ebx
  4073d4:	dec    esi
  4073d5:	mov    eax,ds:0x89588528
  4073da:	shl    DWORD PTR [edi],cl
  4073dc:	out    dx,al
  4073dd:	inc    edi
  4073de:	dec    esi
  4073df:	and    eax,0x72caf32f
  4073e4:	add    eax,0x9a9556f5
  4073e9:	push   ecx
  4073ea:	xchg   esi,eax
  4073eb:	mov    ch,0x36
  4073ed:	cmp    BYTE PTR [edx-0x6a1bd2db],0xb8
  4073f4:	sub    BYTE PTR [edx-0x3c],ah
  4073f7:	test   al,0xb7
  4073f9:	xchg   esp,eax
  4073fa:	ss sahf 
  4073fc:	je     0x407471
  4073fe:	enter  0x5084,0xe8
  407402:	dec    ebx
  407403:	stos   BYTE PTR es:[edi],al
  407404:	xor    bh,BYTE PTR [ebx-0x5e990f4b]
  40740a:	cmp    eax,DWORD PTR [eax+0xf]
  40740d:	add    BYTE PTR [eax+0x6c],ah
  407410:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407411:	push   esp
  407412:	pusha  
  407413:	push   esi
  407414:	arpl   WORD PTR [ecx+0x2e2606ae],ax
  40741a:	push   ecx
  40741b:	fist   WORD PTR [edx-0x69]
  40741e:	jbe    0x40747b
  407420:	inc    ebx
  407421:	mov    es,WORD PTR [edx+0x3bdc3931]
  407427:	mov    WORD PTR [ebx],?
  407429:	ret    
  40742a:	xor    eax,0x8b2ddbe4
  40742f:	sbb    bh,BYTE PTR [ebx]
  407431:	add    edi,DWORD PTR [ebx-0xd]
  407434:	push   esp
  407435:	icebp  
  407436:	mov    cl,0xcd
  407438:	cmp    eax,0xeb863d99
  40743d:	push   es
  40743e:	fld    QWORD PTR [ebx]
  407440:	test   al,0x89
  407442:	and    al,0x73
  407444:	aaa    
  407445:	pop    esi
  407446:	(bad)  
  407447:	jns    0x40746d
  407449:	popf   
  40744a:	add    ebp,ecx
  40744c:	push   esp
  40744d:	daa    
  40744e:	dec    BYTE PTR [eax+esi*2]
  407451:	outs   dx,DWORD PTR ds:[esi]
  407452:	mov    cl,0x98
  407454:	mov    ebp,DWORD PTR [ebx-0x4a31b079]
  40745a:	into   
  40745b:	fstp   QWORD PTR [ecx+edx*8+0x34f43dea]
  407462:	add    eax,0xa9239c3
  407467:	xchg   ebx,eax
  407468:	add    bl,al
  40746a:	pop    ds
  40746b:	or     al,0x5c
  40746d:	rcr    DWORD PTR [edx+0x48],cl
  407470:	adc    al,0x1
  407472:	jmp    0x4074a8
  407474:	dec    edx
  407475:	push   di
  407477:	adc    ecx,edx
  407479:	pop    edi
  40747a:	adc    esi,ebx
  40747c:	or     ebx,ebp
  40747e:	sub    al,0xca
  407480:	cmp    edi,ebx
  407482:	cmp    DWORD PTR [eax+0x7c],0xffffffc9
  407486:	fdiv   DWORD PTR [edx+edi*4-0x53]
  40748a:	push   ss
  40748b:	xchg   ecx,eax
  40748c:	fisttp QWORD PTR [ecx+0x43]
  40748f:	mov    eax,ds:0x73411e6f
  407494:	add    BYTE PTR [esi+0x4d9693be],0x79
  40749b:	pop    es
  40749c:	outs   dx,DWORD PTR ds:[esi]
  40749d:	push   es
  40749e:	repnz (bad) 
  4074a0:	aam    0x41
  4074a2:	sbb    BYTE PTR ds:0x2f6d1af0,bl
  4074a8:	xchg   esi,eax
  4074a9:	and    BYTE PTR [edx],al
  4074ab:	into   
  4074ac:	les    ebx,FWORD PTR [eax]
  4074ae:	retf   
  4074af:	push   edx
  4074b0:	xchg   edx,eax
  4074b1:	jo     0x407480
  4074b3:	mov    dh,0xe6
  4074b5:	push   ds
  4074b6:	sbb    DWORD PTR [eax-0x24],ecx
  4074b9:	mov    DWORD PTR [ebx+edi*4+0xa],esp
  4074bd:	push   0xffffffc5
  4074bf:	call   0xc7d4e892
  4074c4:	mov    ebp,0x4d9157d0
  4074c9:	pop    eax
  4074ca:	loopne 0x4074d2
  4074cc:	sub    ebx,ebx
  4074ce:	dec    ebp
  4074cf:	dec    ebp
  4074d0:	xor    BYTE PTR [eax+0x43d3efad],0x96
  4074d7:	adc    BYTE PTR [edx+0x6805dec3],dh
  4074dd:	pop    esi
  4074de:	retf   
  4074df:	inc    ecx
  4074e0:	aam    0x3c
  4074e2:	into   
  4074e3:	pop    ss
  4074e4:	pusha  
  4074e5:	leave  
  4074e6:	xchg   ecx,eax
  4074e7:	jbe    0x407555
  4074e9:	jmp    0x407478
  4074eb:	cld    
  4074ec:	pusha  
  4074ed:	hlt    
  4074ee:	push   0x65
  4074f0:	imul   BYTE PTR [ebx+0x1d5a4cd5]
  4074f6:	bound  ebx,QWORD PTR [edi-0x46e4fca]
  4074fc:	and    eax,0x5a49874b
  407501:	and    ah,BYTE PTR [ebx]
  407503:	ins    BYTE PTR es:[edi],dx
  407504:	adc    edx,DWORD PTR [edx-0xc14f905]
  40750a:	std    
  40750b:	inc    esp
  40750c:	xchg   ecx,eax
  40750d:	arpl   dx,di
  40750f:	add    ebp,DWORD PTR [edi+0x36]
  407512:	xor    eax,0x9e05c8bc
  407517:	xor    ch,BYTE PTR [eax]
  407519:	and    eax,0xd0313aef
  40751e:	push   esi
  40751f:	stos   DWORD PTR es:[edi],eax
  407520:	mov    ds:0x13aaca90,eax
  407525:	push   ds
  407526:	adc    dh,BYTE PTR [ecx-0x2f62de29]
  40752c:	adc    DWORD PTR [ecx+0x485e7f9a],edx
  407532:	xchg   ebp,eax
  407533:	imul   eax,DWORD PTR [edx+0x7c471576],0x4516e40a
  40753d:	ret    0x3b75
  407540:	xor    ch,BYTE PTR [edi+0x13]
  407543:	popf   
  407544:	dec    esp
  407545:	cdq    
  407546:	out    dx,eax
  407547:	fucom  st(0)
  407549:	in     al,0x39
  40754b:	int3   
  40754c:	pop    edi
  40754d:	stos   DWORD PTR es:[edi],eax
  40754e:	mov    dh,0x2d
  407550:	stos   DWORD PTR es:[edi],eax
  407551:	sbb    al,0xdf
  407553:	icebp  
  407554:	mov    esi,0xd01cc732
  407559:	(bad)  
  40755a:	leave  
  40755b:	mov    ah,0x3b
  40755d:	aad    0x4e
  40755f:	inc    edx
  407560:	scas   al,BYTE PTR es:[edi]
  407561:	(bad)  
  407562:	int3   
  407563:	lahf   
  407564:	scas   al,BYTE PTR es:[edi]
  407565:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407566:	xor    bl,BYTE PTR [ebp+0x159f29db]
  40756c:	add    edi,eax
  40756e:	xor    DWORD PTR [ebp-0x36],esi
  407571:	int    0xea
  407573:	xchg   edi,eax
  407574:	shl    bl,1
  407576:	xchg   ecx,eax
  407577:	adc    BYTE PTR [ecx],dh
  407579:	sar    DWORD PTR [esi-0xa463c89],0xf6
  407580:	js     0x4075e1
  407582:	ret    0x34fc
  407585:	sub    eax,0xfcda0c0a
  40758a:	and    BYTE PTR [eax],dh
  40758c:	clc    
  40758d:	dec    edi
  40758e:	ret    0x15b0
  407591:	pop    edi
  407592:	or     al,0x39
  407594:	lods   eax,DWORD PTR ds:[esi]
  407595:	and    eax,0x95323c8e
  40759a:	out    dx,al
  40759b:	or     BYTE PTR [ecx+0x61],dl
  40759e:	push   ebp
  40759f:	sbb    DWORD PTR [edi],0xffffff8e
  4075a2:	sahf   
  4075a3:	lahf   
  4075a4:	adc    al,0xd8
  4075a6:	test   DWORD PTR [edi+0x62ee929f],eax
  4075ac:	mov    dh,0x94
  4075ae:	sbb    eax,0xbd61c916
  4075b3:	addr16 pop esp
  4075b5:	scas   al,BYTE PTR es:[edi]
  4075b6:	jl     0x4075ec
  4075b8:	inc    edx
  4075b9:	adc    ah,dh
  4075bb:	push   ss
  4075bc:	push   cs
  4075bd:	add    BYTE PTR [edx-0x1c],0x53
  4075c1:	push   0xffffffd9
  4075c3:	inc    esp
  4075c4:	add    eax,0x81eaea5f
  4075c9:	imul   ebp,DWORD PTR [edi+0x5e],0x37
  4075cd:	pop    ds
  4075ce:	inc    ebp
  4075cf:	sti    
  4075d0:	mov    esi,0xb9c87a49
  4075d5:	sbb    dl,dh
  4075d7:	addr16 push ebx
  4075d9:	inc    esp
  4075da:	adc    dh,BYTE PTR [ebx-0x5]
  4075dd:	add    eax,0x4247e155
  4075e2:	jb     0x407641
  4075e4:	push   ss
  4075e5:	ds pop es
  4075e7:	pop    ss
  4075e8:	mov    edi,0x415e6143
  4075ed:	icebp  
  4075ee:	adc    al,0xef
  4075f0:	inc    ebp
  4075f1:	popf   
  4075f2:	jmp    0x407655
  4075f4:	jl     0x40765c
  4075f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4075f7:	adc    esp,DWORD PTR [edi-0x5c87a2b1]
  4075fd:	dec    ebp
  4075fe:	pop    ecx
  4075ff:	adc    eax,0xfba4aefc
  407604:	mov    ch,0x4
  407606:	scas   al,BYTE PTR es:[edi]
  407607:	xor    esi,DWORD PTR [ebx+0x54e11f08]
  40760d:	cmp    DWORD PTR [edi],esi
  40760f:	jo     0x40761a
  407611:	stos   BYTE PTR es:[edi],al
  407612:	pop    esp
  407613:	mov    BYTE PTR [eax],dh
  407615:	or     DWORD PTR [eax+0x34533386],edi
  40761b:	stos   BYTE PTR es:[edi],al
  40761c:	ficom  DWORD PTR [ebx-0x33834ea1]
  407622:	test   DWORD PTR [eax-0x635e6b13],edi
  407628:	fs scas al,BYTE PTR es:[edi]
  40762a:	ret    
  40762b:	mov    ebx,0x958dbd6f
  407630:	dec    ecx
  407631:	cdq    
  407632:	jp     0x4076a6
  407634:	out    0x24,eax
  407636:	sub    DWORD PTR fs:[edi-0x50],edx
  40763a:	fstp   DWORD PTR [ebx]
  40763c:	sbb    al,BYTE PTR [ebx+eax*1]
  40763f:	mov    bh,0x11
  407641:	push   eax
  407642:	mov    al,0x5c
  407644:	sbb    eax,0xa01592a2
  407649:	mov    edx,0x91f06ac5
  40764e:	js     0x407674
  407650:	fidivr WORD PTR [ebx-0xc0c9f7c]
  407656:	nop
  407657:	lea    ecx,[edi-0x4ad11061]
  40765d:	jnp    0x407665
  40765f:	(bad)  
  407660:	sbb    cl,BYTE PTR [ebp-0x4b]
  407663:	retf   0xaa64
  407666:	imul   edi,DWORD PTR [ebx+0x39],0x34085314
  40766d:	ss jns 0x40769f
  407670:	popf   
  407671:	stos   DWORD PTR es:[edi],eax
  407672:	or     cl,BYTE PTR [eax+0x72]
  407675:	mov    ecx,0xeb1e479e
  40767a:	fdiv   DWORD PTR [eax-0x5ba4d226]
  407680:	or     eax,0xd7896267
  407685:	out    0xd,eax
  407687:	pop    eax
  407688:	mov    ss,WORD PTR [eax+eax*8-0x4d]
  40768c:	stos   BYTE PTR es:[edi],al
  40768d:	popf   
  40768e:	shr    DWORD PTR [esi+0x5d0b92a0],1
  407694:	repz mul DWORD PTR [eax+0x50]
  407698:	mov    edx,0x2ea39f19
  40769d:	cmp    DWORD PTR [ebp+0x28],ebp
  4076a0:	fchs   
  4076a2:	(bad)  
  4076a3:	push   cs
  4076a4:	or     ebx,DWORD PTR [ecx+ecx*2-0x59fa8d3c]
  4076ab:	sbb    ah,ah
  4076ad:	adc    eax,0x38b76a8e
  4076b2:	mov    cl,0x46
  4076b4:	adc    DWORD PTR [eax+0x1a],0x99f79b2b
  4076bb:	repz and dl,BYTE PTR ss:[esi-0x4e23b0b6]
  4076c3:	jl     0x4076f2
  4076c5:	int    0x99
  4076c7:	sbb    al,0x78
  4076c9:	dec    ecx
  4076ca:	add    eax,0xa118e3d8
  4076cf:	xchg   edi,eax
  4076d0:	mov    cl,0x4d
  4076d2:	xchg   esp,eax
  4076d3:	mov    dl,0xdd
  4076d5:	cdq    
  4076d6:	inc    edx
  4076d7:	inc    edi
  4076d8:	or     BYTE PTR [ebp-0x16eda9d4],cl
  4076de:	mov    eax,0x7e3e68b4
  4076e3:	xor    al,0x70
  4076e5:	pop    edi
  4076e6:	or     eax,0xe366876b
  4076eb:	or     ah,cl
  4076ed:	(bad)  
  4076ee:	fcomip st,st(1)
  4076f0:	cmp    DWORD PTR [eax-0x59],ecx
  4076f3:	jmp    0x407700
  4076f5:	lds    esp,FWORD PTR [esi+edi*8+0x4a49552f]
  4076fc:	fiadd  WORD PTR [esi]
  4076fe:	sub    dl,ah
  407700:	mov    ch,0xea
  407702:	stos   DWORD PTR es:[edi],eax
  407703:	test   bl,cl
  407705:	mov    edx,esi
  407707:	xchg   ebp,eax
  407708:	icebp  
  407709:	push   edi
  40770a:	jmp    FWORD PTR [ebp-0x36a0f6c0]
  407710:	popa   
  407711:	cmp    DWORD PTR [edi+0x7a],ecx
  407714:	xchg   DWORD PTR [ecx+edx*4+0x526d4670],ecx
  40771b:	je     0x4076a5
  40771d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40771e:	sbb    dl,0x6f
  407721:	ss out 0xed,al
  407724:	mov    edx,0xf5046cc9
  407729:	cdq    
  40772a:	rol    BYTE PTR [edi+edx*8-0x12f1bf0],1
  407731:	pop    ebx
  407732:	lock xchg edx,eax
  407734:	push   ds
  407735:	mov    dl,BYTE PTR [eax]
  407737:	rcr    dh,0x6b
  40773a:	sub    al,0xf7
  40773c:	pop    es
  40773d:	out    0xa1,al
  40773f:	nop
  407740:	mov    BYTE PTR [edx+0x4e],ah
  407743:	xchg   ebp,eax
  407744:	mov    ebx,0xabcc29d7
  407749:	ins    DWORD PTR es:[edi],dx
  40774a:	xor    DWORD PTR [ecx+0x174fdf47],ebx
  407750:	fiadd  DWORD PTR ds:0xd3398c82
  407756:	add    al,0xc6
  407758:	(bad)  
  407759:	loop   0x4077b8
  40775b:	lock or cl,BYTE PTR [ebx+0x6e]
  40775f:	fwait
  407760:	xchg   esi,eax
  407761:	addr16 jnp 0x40772a
  407764:	lahf   
  407765:	and    al,0x6b
  407767:	jno    0x4077da
  407769:	add    eax,0xf08b0668
  40776e:	lahf   
  40776f:	mov    WORD PTR ds:0xa30b3fd9,ss
  407775:	mov    dl,BYTE PTR [ecx+eiz*1-0x74e9ca91]
  40777c:	jno    0x4077e0
  40777e:	xchg   esi,eax
  40777f:	pushf  
  407780:	sbb    al,cl
  407782:	or     DWORD PTR [esp+ecx*1],edi
  407785:	xchg   edx,eax
  407786:	aaa    
  407787:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407788:	mov    bh,BYTE PTR ds:0xd8ada2be
  40778e:	std    
  40778f:	test   ch,ch
  407791:	jp     0x40778e
  407793:	ret    
  407794:	outs   dx,DWORD PTR ds:[esi]
  407795:	repz arpl WORD PTR [eax],sp
  407798:	ucomiss xmm2,DWORD PTR [ecx+eiz*4]
  40779c:	and    eax,0xb61592e6
  4077a1:	push   ds
  4077a2:	aaa    
  4077a3:	fs fwait
  4077a5:	cdq    
  4077a6:	fld    TBYTE PTR [edi-0x987e73]
  4077ac:	xor    eax,0xc548de6d
  4077b1:	push   esp
  4077b2:	out    dx,al
  4077b3:	inc    edi
  4077b4:	mov    ebx,0x5d384ac1
  4077b9:	call   0x390c:0x241d69bc
  4077c0:	mov    ecx,0x44382078
  4077c5:	or     ah,BYTE PTR [edi-0x6b]
  4077c8:	mov    ebx,0x487bb860
  4077cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4077ce:	in     eax,dx
  4077cf:	add    dl,BYTE PTR [ecx-0x62]
  4077d2:	jmp    0x70b33056
  4077d7:	arpl   WORD PTR [eax],di
  4077d9:	sub    eax,0x7d03fb95
  4077de:	adc    eax,0x416cd56c
  4077e3:	test   al,0xb
  4077e5:	cli    
  4077e6:	jmp    0x407808
  4077e8:	sbb    BYTE PTR [eax+0x32],0xde
  4077ec:	fadd   QWORD PTR [esp+ebp*8]
  4077ef:	stc    
  4077f0:	shl    ebx,1
  4077f2:	scas   al,BYTE PTR es:[edi]
  4077f3:	aaa    
  4077f4:	xchg   dh,cl
  4077f6:	sub    DWORD PTR [edx+0x4d3739f6],esi
  4077fc:	retf   0xcf33
  4077ff:	jg     0x407848
  407801:	fdiv   DWORD PTR [edi+0x26]
  407804:	add    BYTE PTR [ebx+0x4f],al
  407807:	out    dx,al
  407808:	jnp    0x407814
  40780a:	popa   
  40780b:	xchg   esp,eax
  40780c:	sub    al,BYTE PTR [ecx]
  40780e:	inc    esp
  40780f:	sbb    al,0x41
  407811:	(bad)  
  407812:	xor    ebp,DWORD PTR [esi+0x67f7c989]
  407818:	xor    cl,BYTE PTR [esi]
  40781a:	in     eax,0x56
  40781c:	mov    DWORD PTR [esi],esp
  40781e:	aas    
  40781f:	call   0x76a52ee8
  407824:	jmp    0x50c6b3cb
  407829:	inc    ecx
  40782a:	aas    
  40782b:	mov    ch,0x93
  40782d:	pop    ds
  40782e:	dec    edi
  40782f:	ja     0x4077bd
  407831:	enter  0x826f,0x5d
  407835:	add    DWORD PTR [ebp+0x3320613b],esi
  40783b:	mov    BYTE PTR [edi],cl
  40783d:	jge    0x40782a
  40783f:	lods   eax,DWORD PTR ds:[esi]
  407840:	xchg   edx,eax
  407841:	adc    cl,BYTE PTR [edi]
  407843:	mov    ds:0x6f730bae,eax
  407848:	ret    
  407849:	mov    ecx,0xc2e6e5d9
  40784e:	pop    es
  40784f:	xchg   ebp,eax
  407850:	(bad)  
  407851:	cli    
  407852:	pop    edx
  407853:	iret   
  407854:	sbb    dh,BYTE PTR [eiz*1+0x78579a92]
  40785b:	jbe    0x407871
  40785d:	adc    BYTE PTR [edi-0x4b8dc54f],ah
  407863:	sbb    ebx,ecx
  407865:	lahf   
  407866:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407867:	fisubr DWORD PTR [esi]
  407869:	mov    edx,0x6da941b2
  40786e:	jl     0x407853
  407870:	push   ecx
  407871:	cmp    eax,ebx
  407873:	and    DWORD PTR [ecx],edi
  407875:	std    
  407876:	mov    ah,0x8b
  407878:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407879:	div    BYTE PTR fs:[esi]
  40787c:	ja     0x40787e
  40787e:	jb     0x4078ed
  407880:	out    0x10,eax
  407882:	fwait
  407883:	xchg   BYTE PTR [edi],bl
  407885:	icebp  
  407886:	mov    edx,0x5cf6102
  40788b:	adc    eax,0x46de9db4
  407890:	jl     0x4078f8
  407892:	sbb    eax,DWORD PTR [edx+0x71]
  407895:	imul   edx,DWORD PTR [eax+0x47b28fd1],0xd5a09270
  40789f:	pushf  
  4078a0:	adc    DWORD PTR [ebp+0x5dc7b134],edx
  4078a6:	jns    0x40789d
  4078a8:	out    dx,al
  4078a9:	out    0x4e,eax
  4078ab:	fsubr  QWORD PTR [esi-0x5]
  4078ae:	pop    ecx
  4078af:	xor    eax,ebx
  4078b1:	je     0x407922
  4078b3:	mov    esi,0xa53064ea
  4078b8:	icebp  
  4078b9:	loope  0x4078c6
  4078bb:	fldenv [edi]
  4078bd:	cmc    
  4078be:	xchg   BYTE PTR [edi+ebx*2+0x34],dl
  4078c2:	shl    BYTE PTR ds:0x891176be,0xa2
  4078c9:	push   esp
  4078ca:	add    DWORD PTR [ebx-0x27],esi
  4078cd:	lock pop es
  4078cf:	cs mov ds,ebp
  4078d2:	sbb    cl,cl
  4078d4:	push   ds
  4078d5:	in     eax,dx
  4078d6:	sub    BYTE PTR [esi-0x782988fe],0x45
  4078dd:	sbb    eax,esp
  4078df:	test   DWORD PTR gs:[esi+0x5d],edi
  4078e3:	pop    esp
  4078e4:	nop
  4078e5:	push   ebx
  4078e6:	repz inc edx
  4078e8:	xor    ah,BYTE PTR [ebx]
  4078ea:	add    BYTE PTR [edx+0x45ea8331],ah
  4078f0:	jbe    0x4078a5
  4078f2:	les    ebx,FWORD PTR [eax+0x19fa469a]
  4078f8:	test   BYTE PTR [ebp+0x47b147a2],ch
  4078fe:	push   ecx
  4078ff:	push   edi
  407900:	fbstp  TBYTE PTR [edx-0x2039a25e]
  407906:	xor    ah,ah
  407908:	in     eax,0x5d
  40790a:	push   ecx
  40790b:	in     al,0xa
  40790d:	mov    WORD PTR [ebp+0x3f],fs
  407910:	add    al,ah
  407912:	lahf   
  407913:	repnz mov ebp,0xcb7efb26
  407919:	cdq    
  40791a:	mov    esi,0x190fbf09
  40791f:	and    al,0x28
  407921:	sub    edx,DWORD PTR [edx+edx*8+0x67]
  407925:	mov    eax,ds:0xee821ffc
  40792a:	push   ebx
  40792b:	xor    al,0xb7
  40792d:	retf   0x842b
  407930:	cmp    BYTE PTR [ecx],ch
  407932:	ret    0x2e25
  407935:	pop    es
  407936:	push   esi
  407937:	jle    0x407912
  407939:	mov    dh,0xe9
  40793b:	push   esp
  40793c:	push   0x51e33074
  407941:	adc    ebx,ebp
  407943:	ins    DWORD PTR es:[edi],dx
  407944:	not    DWORD PTR [edi-0x69]
  407947:	inc    eax
  407948:	in     eax,0xb2
  40794a:	and    eax,0x6994cde8
  40794f:	push   ecx
  407950:	dec    esi
  407951:	inc    eax
  407952:	push   ss
  407953:	cmp    bh,ch
  407955:	jp     0x407983
  407957:	mov    bl,0x51
  407959:	jae    0x4079aa
  40795b:	stos   DWORD PTR es:[edi],eax
  40795c:	dec    ebp
  40795d:	and    BYTE PTR [edi-0x64ab5fca],ch
  407963:	xchg   ecx,eax
  407964:	jo     0x407905
  407966:	repnz inc eax
  407968:	adc    eax,0xb163cf84
  40796d:	ret    
  40796e:	adc    BYTE PTR [edx],dh
  407970:	adc    DWORD PTR ds:0xa80a2304,ecx
  407976:	sbb    DWORD PTR [ebp+0x5d],0x2b
  40797a:	fdivp  st(7),st
  40797c:	pop    esi
  40797d:	jns    0x407916
  40797f:	rcl    DWORD PTR [eax],cl
  407981:	pop    ecx
  407982:	(bad)  
  407983:	pop    ss
  407984:	add    DWORD PTR [esi],esp
  407986:	xor    cl,al
  407988:	and    DWORD PTR [ecx-0xb],esi
  40798b:	pop    esi
  40798c:	inc    eax
  40798d:	fisttp QWORD PTR [ecx+0x7ac252d1]
  407993:	leave  
  407994:	icebp  
  407995:	aaa    
  407996:	push   0xbbcf8903
  40799b:	mov    eax,0x5db44a1e
  4079a0:	jmp    0xf77a:0x5ea9fa0
  4079a7:	fadd   st(0),st
  4079a9:	inc    esp
  4079aa:	push   ebx
  4079ab:	cmp    cl,BYTE PTR [esi-0x2e]
  4079ae:	mov    DWORD PTR [edx],ebx
  4079b0:	add    DWORD PTR es:[edx],0x5d0e3008
  4079b7:	or     bh,BYTE PTR [ecx+0x7a]
  4079ba:	jmp    0x6ba20e48
  4079bf:	push   0x8b651113
  4079c4:	pop    edx
  4079c5:	sbb    bh,BYTE PTR [eax+0x3]
  4079c8:	jg     0x40799d
  4079ca:	stos   BYTE PTR es:[edi],al
  4079cb:	pop    esi
  4079cc:	sahf   
  4079cd:	out    0xdf,al
  4079cf:	test   esi,esi
  4079d1:	mov    ds:0x76b5f51,eax
  4079d6:	xchg   BYTE PTR [ebx-0x1c],dl
  4079d9:	cmp    BYTE PTR [edi+0x50],dl
  4079dc:	dec    ebp
  4079dd:	shl    DWORD PTR [ecx+0x2a30f7a3],1
  4079e3:	mov    ah,ch
  4079e5:	mov    edx,0x4aa3d1e2
  4079ea:	mov    dh,0xec
  4079ec:	mov    ebp,0xe2c8c083
  4079f1:	cmp    DWORD PTR ds:0x9ea340e0,esp
  4079f7:	fidiv  DWORD PTR fs:[ebp+0x52]
  4079fb:	mov    ecx,ecx
  4079fd:	pusha  
  4079fe:	sub    edx,ecx
  407a00:	loope  0x407a3d
  407a02:	push   ecx
  407a03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a04:	scas   eax,DWORD PTR es:[edi]
  407a05:	popa   
  407a06:	xchg   esi,eax
  407a07:	jae    0x407a2b
  407a09:	pop    esp
  407a0a:	test   BYTE PTR [ecx],ch
  407a0c:	or     ch,bl
  407a0e:	jns    0x4079f3
  407a10:	sti    
  407a11:	mov    ds:0x3511b94c,al
  407a16:	xor    BYTE PTR fs:[edx-0x4d3814c],0xd2
  407a1e:	sar    BYTE PTR [ebx],1
  407a20:	je     0x407a06
  407a22:	sbb    BYTE PTR [edi-0x65],dl
  407a25:	xchg   edx,eax
  407a26:	loopne 0x4079fb
  407a28:	xlat   BYTE PTR ds:[ebx]
  407a29:	pop    ecx
  407a2a:	dec    ebx
  407a2b:	jecxz  0x407a8a
  407a2d:	ret    
  407a2e:	pushf  
  407a2f:	jnp    0x4079ef
  407a31:	je     0x4079d3
  407a33:	mov    esi,0x79b029e1
  407a38:	add    al,0xc1
  407a3a:	(bad)  
  407a3b:	enter  0x2a23,0xc9
  407a3f:	fsubr  QWORD PTR [ecx+esi*8+0x6c]
  407a43:	fisub  DWORD PTR [ebx-0x1e984801]
  407a49:	add    bh,BYTE PTR es:[edi-0x3f56d27e]
  407a50:	jg     0x4079df
  407a52:	dec    eax
  407a53:	xor    bh,BYTE PTR [edx+0xc]
  407a56:	call   0xe8c42bb6
  407a5b:	into   
  407a5c:	cmc    
  407a5d:	inc    esp
  407a5e:	scas   al,BYTE PTR es:[edi]
  407a5f:	int3   
  407a60:	aam    0xfe
  407a62:	mov    al,ds:0x7c789b51
  407a67:	inc    eax
  407a68:	adc    edi,0x43
  407a6b:	pushf  
  407a6c:	enter  0x544d,0xce
  407a70:	stos   BYTE PTR es:[edi],al
  407a71:	dec    edi
  407a72:	lods   al,BYTE PTR ds:[esi]
  407a73:	and    eax,0xec99fb88
  407a78:	xor    ah,cl
  407a7a:	xchg   edx,eax
  407a7b:	push   ebx
  407a7c:	cmp    eax,0xcbcc8910
  407a81:	or     DWORD PTR [ecx+0x3abc19d0],edx
  407a87:	mov    bh,0x30
  407a89:	fild   DWORD PTR [edi-0x46110331]
  407a8f:	div    esi
  407a91:	das    
  407a92:	and    eax,0xf0da31d6
  407a97:	and    dl,0x20
  407a9a:	enter  0xf101,0xf5
  407a9e:	shr    BYTE PTR [eax+0x2cfd73c2],cl
  407aa4:	push   esp
  407aa5:	push   cs
  407aa6:	push   ebp
  407aa7:	cdq    
  407aa8:	gs mov dl,0xbe
  407aab:	inc    edx
  407aac:	js     0x407adc
  407aae:	sbb    ecx,DWORD PTR [ecx]
  407ab0:	mov    bl,0xc9
  407ab2:	in     eax,0x9a
  407ab4:	dec    ecx
  407ab5:	lea    ebp,[esp]
  407ab8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ab9:	sub    al,0x76
  407abb:	xchg   edx,eax
  407abc:	call   0x6e06:0x7ff16c23
  407ac3:	fcomp  QWORD PTR [ecx+0x23]
  407ac6:	pop    ecx
  407ac7:	(bad)  
  407ac8:	ins    BYTE PTR es:[edi],dx
  407ac9:	das    
  407aca:	jb     0x407ae9
  407acc:	lahf   
  407acd:	shl    DWORD PTR [ecx+esi*8],cl
  407ad0:	(bad)  
  407ad1:	test   al,0x1b
  407ad3:	(bad)  
  407ad4:	pusha  
  407ad5:	outs   dx,BYTE PTR ds:[esi]
  407ad6:	or     al,0xb4
  407ad8:	jns    0x407ac9
  407ada:	fwait
  407adb:	(bad)  
  407adc:	lea    ecx,[edi]
  407ade:	gs and esi,0x61dc14fe
  407ae5:	add    bh,0xd7
  407ae8:	test   DWORD PTR [eax],ebx
  407aea:	scas   al,BYTE PTR es:[edi]
  407aeb:	xchg   cl,bh
  407aed:	sub    dh,BYTE PTR [ebp-0x33]
  407af0:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  407af2:	pop    ds
  407af3:	mov    es,WORD PTR [ebx-0x3fe86bae]
  407af9:	ret    0x4887
  407afc:	fadd   DWORD PTR [ecx+0x3fe945bc]
  407b02:	and    al,0xbd
  407b04:	xor    ecx,DWORD PTR ds:0x738a91ea
  407b0a:	jbe    0x407b4c
  407b0c:	dec    eax
  407b0d:	xchg   ebp,eax
  407b0e:	xchg   ah,ch
  407b10:	aad    0xe1
  407b12:	and    eax,0x31b239d8
  407b17:	xor    esi,DWORD PTR [ebx-0x67f082d4]
  407b1d:	cmp    bl,dl
  407b1f:	popa   
  407b20:	call   0xf00e03ed
  407b25:	loop   0x407adb
  407b27:	add    eax,0x52e92b22
  407b2c:	xor    ebx,edi
  407b2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b2f:	adc    BYTE PTR [edi-0x7],cl
  407b32:	lods   eax,DWORD PTR ds:[esi]
  407b33:	or     dh,BYTE PTR [edi+eax*8+0x31030e91]
  407b3a:	and    DWORD PTR [esp+edx*8-0x60],0x4c
  407b3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b40:	cli    
  407b41:	xchg   ebp,eax
  407b42:	test   eax,0xaafeeca
  407b47:	aam    0xb0
  407b49:	lea    ebp,[edx]
  407b4b:	popf   
  407b4c:	dec    ebp
  407b4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b4e:	out    dx,eax
  407b4f:	fldl2e 
  407b51:	and    dl,ch
  407b53:	cld    
  407b54:	push   0x30bffad1
  407b59:	jo     0x407b7f
  407b5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b5c:	into   
  407b5d:	lods   eax,DWORD PTR ds:[esi]
  407b5e:	dec    esp
  407b5f:	pop    ecx
  407b60:	popf   
  407b61:	in     eax,dx
  407b62:	jno    0x407b4e
  407b64:	inc    esp
  407b65:	sbb    edi,ebx
  407b67:	push   ss
  407b68:	push   ebp
  407b69:	aas    
  407b6a:	push   edx
  407b6b:	xchg   ecx,eax
  407b6c:	in     al,dx
  407b6d:	in     al,dx
  407b6e:	sbb    ch,BYTE PTR [esi]
  407b70:	inc    esi
  407b71:	daa    
  407b72:	aaa    
  407b73:	lods   eax,DWORD PTR cs:[esi]
  407b75:	fistp  QWORD PTR [edi+0x18]
  407b78:	cmc    
  407b79:	xor    ebp,DWORD PTR ds:0xb1b9961a
  407b7f:	jns    0x407bf4
  407b81:	xor    DWORD PTR [esi+0x6f],0xad39b869
  407b88:	mov    WORD PTR [ebx],cs
  407b8a:	pop    ecx
  407b8c:	stc    
  407b8d:	xchg   DWORD PTR [ecx],esp
  407b8f:	in     al,0xa6
  407b91:	imul   ebx,DWORD PTR [ebp-0x36],0xbe16df
  407b98:	dec    esi
  407b99:	inc    ebx
  407b9a:	pop    esi
  407b9b:	cmp    ebx,DWORD PTR [bp+di-0x62]
  407b9f:	add    cl,0xa2
  407ba2:	jg     0x407b7f
  407ba4:	or     ebx,0x17602cf8
  407baa:	mov    edi,DWORD PTR [esi]
  407bac:	dec    edi
  407bad:	xchg   esi,eax
  407bae:	icebp  
  407baf:	push   ecx
  407bb0:	shld   DWORD PTR [ecx],esi,0x34
  407bb4:	inc    edi
  407bb5:	jmp    0x41248c05
  407bba:	and    al,0xde
  407bbc:	push   cs
  407bbd:	rcr    BYTE PTR [edi+0x61a837d],0x36
  407bc4:	(bad)  
  407bc5:	ins    DWORD PTR es:[edi],dx
  407bc6:	sub    ecx,edi
  407bc8:	push   ecx
  407bc9:	jg     0x407bd8
  407bcb:	xor    DWORD PTR [ecx],0xcab80dac
  407bd1:	adc    eax,0x7d2fe2bd
  407bd6:	push   edx
  407bd7:	push   ds
  407bd8:	fldcw  WORD PTR [edx-0x21fadf9f]
  407bde:	mov    ch,0x45
  407be0:	jnp    0x407c56
  407be2:	and    DWORD PTR [eax-0x36],esi
  407be5:	add    edx,ecx
  407be7:	and    al,0x4
  407be9:	and    ecx,esi
  407beb:	call   edx
  407bed:	mov    cl,0x1f
  407bef:	adc    dl,BYTE PTR [esi+0xd]
  407bf2:	mov    al,ds:0xc97c1328
  407bf7:	or     eax,0x8c8e1e41
  407bfc:	lods   eax,DWORD PTR ds:[esi]
  407bfd:	pusha  
  407bfe:	outs   dx,DWORD PTR ds:[esi]
  407bff:	jmp    0x407c1e
  407c01:	mov    bl,0x7d
  407c03:	mov    esi,0xb0ef0a64
  407c08:	mov    edi,0x277e1652
  407c0d:	xchg   DWORD PTR [ebp+0x36],ecx
  407c10:	mov    esi,0xba275ec2
  407c15:	cld    
  407c16:	(bad)  
  407c18:	adc    DWORD PTR [edx+edx*1],esp
  407c1b:	push   0xaeb22b13
  407c20:	push   esp
  407c21:	ins    BYTE PTR es:[edi],dx
  407c22:	mov    cl,0xb6
  407c24:	cmp    eax,0xb41f640a
  407c29:	add    ch,BYTE PTR [ecx+0x57ea53f9]
  407c2f:	sbb    eax,DWORD PTR [ecx+0x7d]
  407c32:	mov    esp,ss
  407c34:	or     esp,DWORD PTR [ebp+0x6904ec68]
  407c3a:	inc    eax
  407c3b:	sahf   
  407c3c:	mov    WORD PTR [eax-0x5d9bc0ee],es
  407c42:	push   cs
  407c43:	clc    
  407c44:	sub    al,0x9c
  407c46:	pop    edx
  407c47:	push   ss
  407c48:	xchg   esi,eax
  407c49:	xchg   BYTE PTR [edi-0x272ad785],bl
  407c4f:	pop    ss
  407c50:	dec    BYTE PTR [edi-0x74]
  407c53:	mov    ch,0xeb
  407c55:	(bad)  
  407c56:	les    esp,FWORD PTR [ebx+0x7c]
  407c59:	xor    bh,BYTE PTR [ecx]
  407c5b:	call   0x94fd5611
  407c60:	test   DWORD PTR [esi],edx
  407c62:	jns    0x407cb6
  407c64:	or     al,0x10
  407c66:	mov    esi,0x951b65b5
  407c6b:	xchg   DWORD PTR [edx+0x43a6bfef],esp
  407c71:	push   0xac716494
  407c76:	push   ecx
  407c77:	lods   eax,DWORD PTR ds:[esi]
  407c78:	fistp  QWORD PTR [ebx]
  407c7a:	inc    edx
  407c7b:	add    al,0x48
  407c7d:	cwde   
  407c7e:	fldenv [eax-0x2f]
  407c81:	mov    esp,DWORD PTR [ecx+0x16]
  407c84:	pop    esi
  407c85:	mov    WORD PTR [ebp+0x62],es
  407c88:	in     al,dx
  407c89:	xchg   esp,eax
  407c8a:	mov    ds:0xb6e1f9b6,eax
  407c8f:	pop    ss
  407c90:	jae    0x407cef
  407c92:	dec    ebx
  407c93:	cmp    cl,BYTE PTR [esi+0x4b90bd96]
  407c99:	icebp  
  407c9a:	xchg   dh,bl
  407c9c:	inc    edx
  407c9d:	je     0x407c27
  407c9f:	repz das 
  407ca1:	lods   eax,DWORD PTR ds:[esi]
  407ca2:	mov    bh,BYTE PTR [eax+0x20]
  407ca5:	and    eax,0x49ebd925
  407caa:	inc    ebp
  407cab:	pop    ebp
  407cac:	rol    bl,1
  407cae:	mov    WORD PTR [ebp-0x289de2f4],ss
  407cb4:	lods   al,BYTE PTR ss:[esi]
  407cb6:	mov    esp,0x5ae14eff
  407cbc:	int3   
  407cbd:	test   eax,0x761f9835
  407cc2:	mov    cl,0x67
  407cc4:	(bad)  
  407cc5:	jne    0x407c66
  407cc7:	adc    al,0xe9
  407cc9:	jmp    0x8e9d34c2
  407cce:	push   eax
  407ccf:	rcr    DWORD PTR [edi-0x42a2da01],1
  407cd5:	jmp    0x407cdc
  407cd7:	iret   
  407cd8:	int3   
  407cd9:	(bad)  
  407cdb:	inc    edx
  407cdc:	cdq    
  407cdd:	inc    ebp
  407cde:	arpl   WORD PTR [ecx],cx
  407ce0:	setnp  BYTE PTR [ecx]
  407ce3:	ss out 0x56,eax
  407ce6:	sahf   
  407ce7:	outs   dx,BYTE PTR ds:[esi]
  407ce8:	push   ecx
  407ce9:	jmp    0x407d22
  407ceb:	xchg   ebp,eax
  407cec:	mov    DWORD PTR [esi],esp
  407cee:	add    ah,al
  407cf0:	bound  esp,QWORD PTR [edi-0x6d]
  407cf3:	mov    al,ds:0x6d352aff
  407cf8:	and    bh,al
  407cfa:	clc    
  407cfb:	mov    ch,0xad
  407cfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407cfe:	jb     0x407d3c
  407d00:	std    
  407d01:	xchg   ecx,eax
  407d02:	inc    ecx
  407d03:	lahf   
  407d04:	mov    dl,0x3f
  407d06:	les    edi,FWORD PTR [ebp-0x53]
  407d09:	push   ss
  407d0a:	push   edi
  407d0b:	aad    0x79
  407d0d:	inc    di
  407d0f:	add    ah,cl
  407d11:	sahf   
  407d12:	sbb    al,0xab
  407d14:	sub    BYTE PTR [ecx-0x5c],0xb2
  407d18:	gs dec bl
  407d1b:	lahf   
  407d1c:	addr16 pop edi
  407d1e:	leave  
  407d1f:	xchg   DWORD PTR [esi],ecx
  407d21:	enter  0xa3ae,0xd2
  407d25:	cli    
  407d26:	adc    cl,BYTE PTR [eax+0x5b1f0f69]
  407d2c:	adc    bh,BYTE PTR [esi+0x29ab8cb8]
  407d32:	fld    QWORD PTR [esi]
  407d34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d35:	clc    
  407d36:	cwde   
  407d37:	push   0xffb76cb0
  407d3c:	jb     0x407cd4
  407d3e:	jecxz  0x407cdd
  407d40:	iret   
  407d41:	sub    dh,BYTE PTR [esi]
  407d43:	lahf   
  407d44:	xor    al,bl
  407d46:	adc    dh,0xba
  407d49:	popa   
  407d4a:	and    eax,0xf35510c9
  407d4f:	aam    0x8b
  407d51:	xchg   dh,bl
  407d53:	in     al,dx
  407d54:	pop    ds
  407d55:	inc    ebp
  407d56:	retf   
  407d57:	cmp    dl,BYTE PTR [ebx-0x6bb00f04]
  407d5d:	inc    edi
  407d5e:	xor    DWORD PTR [eax-0x379dcd99],ebp
  407d64:	jmp    0x407ce7
  407d66:	xlat   BYTE PTR ds:[ebx]
  407d67:	es push ebp
  407d69:	cwde   
  407d6a:	daa    
  407d6b:	hlt    
  407d6c:	push   0xa0569ee1
  407d71:	popa   
  407d72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d73:	shl    BYTE PTR [ebp-0x1d3ca552],1
  407d79:	mov    al,ds:0xd3504735
  407d7e:	gs jo  0x407d62
  407d81:	pop    ds
  407d82:	cmp    ch,BYTE PTR [ecx-0xf519469]
  407d88:	push   es
  407d89:	or     DWORD PTR [eax+0x7af839cb],ebp
  407d8f:	aas    
  407d90:	jae    0x407de9
  407d92:	xchg   DWORD PTR [ebx+eax*8-0x4a7d5809],esp
  407d99:	sub    ebp,esi
  407d9b:	cs jns 0x407d72
  407d9e:	dec    ecx
  407d9f:	xchg   DWORD PTR [eax+0x2506af62],esi
  407da5:	leave  
  407da6:	int    0x53
  407da8:	xor    BYTE PTR [ebx+0x58ba852b],dh
  407dae:	in     eax,dx
  407daf:	or     BYTE PTR [ebx-0x5fa8c703],cl
  407db5:	test   al,0xf4
  407db7:	inc    esi
  407db8:	inc    esi
  407db9:	dec    ecx
  407dba:	fwait
  407dbb:	adc    BYTE PTR [esi+ecx*4+0x57d17379],0x99
  407dc3:	pop    esp
  407dc4:	jnp    0x407e2d
  407dc6:	fcom   st(5)
  407dc8:	(bad)  
  407dc9:	test   DWORD PTR [ebp+0x11],0x4d8d0849
  407dd0:	xor    DWORD PTR [eax],eax
  407dd2:	and    eax,0xbd810fd5
  407dd7:	mul    DWORD PTR [edi-0x63]
  407dda:	adc    eax,0xdf93dbbd
  407ddf:	inc    eax
  407de0:	ficom  DWORD PTR [ecx+0x52]
  407de3:	sbb    eax,0xb4624434
  407de8:	test   BYTE PTR [eax],ah
  407dea:	cdq    
  407deb:	xlat   BYTE PTR ds:[ebx]
  407dec:	push   ebp
  407ded:	les    esi,FWORD PTR [edx-0x7ac4443e]
  407df3:	shl    DWORD PTR [esi-0x2a69bdab],1
  407df9:	jo     0x407d99
  407dfb:	adc    BYTE PTR [ebp+0x5a3055ac],ch
  407e01:	retf   0xaab2
  407e04:	mov    dh,0xa0
  407e06:	xchg   BYTE PTR [eax-0x4cf0380b],dl
  407e0c:	mov    edx,0x188e4f02
  407e11:	pop    ss
  407e12:	bound  ebx,QWORD PTR gs:[ecx]
  407e15:	sub    al,0x52
  407e17:	ret    0x6023
  407e1a:	xor    eax,ecx
  407e1c:	pop    esi
  407e1d:	xor    al,0xba
  407e1f:	push   eax
  407e20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e21:	cmp    ax,0x1e41
  407e25:	call   0xd8e6:0xe22a3dcd
  407e2c:	pop    es
  407e2d:	sub    bl,BYTE PTR [edi+0x5f]
  407e30:	call   0x13a0b012
  407e35:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e37:	stos   DWORD PTR es:[edi],eax
  407e38:	dec    esi
  407e39:	jbe    0x407e9d
  407e3b:	inc    eax
  407e3c:	jmp    0x407e77
  407e3e:	out    dx,eax
  407e3f:	ror    DWORD PTR [ebx-0x4c],1
  407e42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e43:	inc    edi
  407e44:	cmp    BYTE PTR [ebp+0x60d67880],al
  407e4a:	pop    eax
  407e4b:	adc    eax,0x24c9c6b4
  407e50:	ja     0x407dff
  407e52:	ret    
  407e53:	add    eax,esi
  407e55:	jmp    0x41339887
  407e5a:	push   edi
  407e5b:	fnstenv [esi]
  407e5d:	xor    ebx,DWORD PTR [ebp-0x4e2e8c9e]
  407e63:	adc    eax,0x3786b0a9
  407e68:	int3   
  407e69:	popf   
  407e6a:	mov    ds:0xc46738de,al
  407e6f:	ss pop ss
  407e71:	call   0x8baf:0x998d939c
  407e78:	sbb    eax,0x7ffa87f4
  407e7d:	or     al,0xe
  407e7f:	push   eax
  407e80:	nop
  407e81:	add    BYTE PTR [eax+0x63],0x6d
  407e85:	jl     0x407e67
  407e87:	jg     0x407ead
  407e89:	jne    0x407e65
  407e8b:	mov    bh,0x5d
  407e8d:	inc    edi
  407e8e:	test   al,0x0
  407e90:	lahf   
  407e91:	sbb    ecx,DWORD PTR [ecx-0x47]
  407e94:	xor    eax,0x677e01f1
  407e99:	mov    al,0x8
  407e9b:	xchg   ebp,eax
  407e9c:	and    eax,0x8d1c8bb5
  407ea1:	dec    esp
  407ea2:	pusha  
  407ea3:	(bad)  
  407ea4:	dec    eax
  407ea5:	xchg   ecx,eax
  407ea6:	xchg   DWORD PTR [esp+edi*4+0x6552f17d],edi
  407ead:	add    DWORD PTR [eax-0x52],esi
  407eb0:	in     al,0x54
  407eb2:	push   eax
  407eb3:	retf   
  407eb4:	ficom  DWORD PTR [ebx+0x717cb8cf]
  407eba:	push   0xab4b2091
  407ebf:	xchg   edx,eax
  407ec0:	dec    edi
  407ec1:	(bad)  
  407ec2:	and    BYTE PTR [ebx-0x153f8db1],al
  407ec8:	addr16 fmul st(4),st
  407ecb:	xchg   ebp,eax
  407ecc:	imul   esi,DWORD PTR [ecx],0xffffffa8
  407ecf:	jbe    0x407ede
  407ed1:	add    al,0x3
  407ed3:	xchg   ebx,eax
  407ed4:	cmp    al,BYTE PTR [bp-0x6eac]
  407ed9:	add    ebx,0x77
  407edc:	mov    esp,DWORD PTR [eax-0x5211c203]
  407ee2:	mov    DWORD PTR [esi-0x59],edi
  407ee5:	outs   dx,BYTE PTR ds:[esi]
  407ee6:	pop    es
  407ee7:	pop    ebx
  407ee8:	pop    edx
  407ee9:	push   edx
  407eea:	fmul   QWORD PTR [esi+0x4a]
  407eed:	xor    BYTE PTR [esp+eax*8-0x75],al
  407ef1:	sbb    edx,ebx
  407ef3:	out    dx,al
  407ef4:	test   DWORD PTR [edi],ecx
  407ef6:	mov    ah,0x9
  407ef8:	cmc    
  407ef9:	pop    ebx
  407efa:	adc    BYTE PTR [ecx],dh
  407efc:	add    eax,0x85354d53
  407f01:	scas   eax,DWORD PTR es:[edi]
  407f02:	lods   eax,DWORD PTR ds:[esi]
  407f03:	mov    dl,0x11
  407f05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f06:	add    al,bl
  407f08:	add    BYTE PTR [ecx-0x34],0x85
  407f0c:	or     cl,ch
  407f0e:	(bad)  
  407f0f:	pop    ecx
  407f10:	lods   eax,DWORD PTR ds:[esi]
  407f11:	cmp    eax,0xedec810b
  407f16:	and    bl,BYTE PTR [eax]
  407f18:	es or  dh,dh
  407f1b:	fucom  st(4)
  407f1d:	mov    WORD PTR [edx+eiz*1],cs
  407f20:	fwait
  407f21:	sti    
  407f22:	test   eax,0xca5893d5
  407f27:	jb     0x407f8e
  407f29:	int    0x26
  407f2b:	test   al,0xef
  407f2d:	add    BYTE PTR [ebx-0x57],cl
  407f30:	inc    edx
  407f31:	pop    ebx
  407f32:	ins    DWORD PTR es:[edi],dx
  407f33:	pop    eax
  407f34:	or     esi,eax
  407f36:	adc    al,0x87
  407f38:	push   0x5c
  407f3a:	retf   0xf4ae
  407f3d:	aas    
  407f3e:	arpl   WORD PTR [edi],bx
  407f40:	jl     0x407ef7
  407f42:	fisttp WORD PTR [ebp-0xe]
  407f45:	not    cl
  407f47:	jmp    0x407f2e
  407f49:	dec    esi
  407f4a:	fisubr DWORD PTR [eax+0x74]
  407f4d:	(bad)  
  407f4e:	lock push edx
  407f50:	dec    edi
  407f51:	inc    ecx
  407f52:	jp     0x407f81
  407f54:	fstp   TBYTE PTR [eax]
  407f56:	(bad)  
  407f57:	cwde   
  407f58:	scas   al,BYTE PTR es:[edi]
  407f59:	cmp    cl,BYTE PTR [edx]
  407f5b:	push   ebp
  407f5c:	and    BYTE PTR [ecx-0x5f419835],bl
  407f62:	mov    BYTE PTR [eax+0x1c],dl
  407f65:	in     al,dx
  407f66:	inc    esi
  407f67:	nop
  407f68:	xchg   ecx,eax
  407f69:	and    cl,0x5c
  407f6c:	push   ecx
  407f6d:	jge    0x407f46
  407f6f:	sub    ah,BYTE PTR [eax]
  407f71:	sub    al,0x4
  407f73:	pop    ebx
  407f75:	xchg   esi,eax
  407f76:	mov    ds:0x19ada8e8,al
  407f7b:	loop   0x407f0d
  407f7d:	ins    DWORD PTR es:[edi],dx
  407f7e:	daa    
  407f7f:	data16 sahf 
  407f81:	inc    eax
  407f82:	or     DWORD PTR [edi-0xbeb6530],ebp
  407f88:	nop
  407f89:	scas   al,BYTE PTR es:[edi]
  407f8a:	push   ecx
  407f8b:	jg     0x407fa6
  407f8d:	outs   dx,DWORD PTR ds:[esi]
  407f8e:	or     al,0x17
  407f90:	dec    esp
  407f91:	mov    bl,0xbe
  407f93:	sub    ecx,edx
  407f95:	test   al,0x52
  407f97:	jne    0x407fde
  407f99:	mov    cl,0x62
  407f9b:	(bad)  
  407f9c:	jge    0x407f6d
  407f9e:	dec    edx
  407f9f:	adc    al,0xa7
  407fa1:	mov    al,0x96
  407fa3:	rcl    DWORD PTR [ecx],cl
  407fa5:	mov    ecx,?
  407fa7:	jg     0x408000
  407fa9:	lods   al,BYTE PTR ds:[esi]
  407faa:	mov    al,ds:0x47285e03
  407faf:	cwde   
  407fb0:	ror    DWORD PTR [eax+eiz*1-0x3a],cl
  407fb4:	xchg   ebx,eax
  407fb5:	dec    edi
  407fb6:	aaa    
  407fb7:	mov    cs,WORD PTR [esp+ebp*4+0x34]
  407fbb:	inc    ebp
  407fbc:	adc    dh,al
  407fbe:	or     edx,DWORD PTR [ebx+esi*2+0x54912c0f]
  407fc5:	mov    ebp,0x2311bb3f
  407fca:	adc    eax,0x32318156
  407fcf:	push   ss
  407fd0:	loop   0x40804b
  407fd2:	pop    ebx
  407fd3:	ds popa 
  407fd5:	cmp    ch,al
  407fd7:	push   edx
  407fd8:	jnp    0x40804c
  407fda:	sbb    eax,edx
  407fdc:	mov    esp,0xc21e412c
  407fe1:	fistp  DWORD PTR [esi]
  407fe3:	mov    dl,0xef
  407fe5:	and    BYTE PTR [edx+0x54],0x20
  407fe9:	pop    ecx
  407fea:	jb     0x407f73
  407fec:	cdq    
  407fed:	push   ebp
  407fee:	cwde   
  407fef:	push   es
  407ff0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ff1:	fmul   DWORD PTR [ebp*4+0xa0b7240]
  407ff8:	xchg   esi,eax
  407ff9:	lea    edx,[eax]
  407ffb:	push   esp
  407ffc:	mov    bh,0xdb
  407ffe:	int    0x7f
  408000:	(bad)  
  408001:	(bad)  
  408002:	dec    esp
  408003:	frstor [esi+0x21]
  408006:	imul   eax,DWORD PTR [edx],0x5de67487
  40800c:	mov    ds:0xc1c45e4,eax
  408011:	shr    DWORD PTR [esi],0x77
  408014:	test   BYTE PTR [ebx+0x389e075c],cl
  40801a:	push   ebp
  40801b:	nop
  40801c:	lock xor ecx,eax
  40801f:	gs popa 
  408021:	sbb    eax,0xef63c74b
  408026:	xchg   ecx,edx
  408028:	or     edx,DWORD PTR [ebp-0x31e4ec13]
  40802e:	sahf   
  40802f:	fwait
  408030:	cwde   
  408031:	and    esp,DWORD PTR [edi-0x8]
  408034:	mov    eax,0x173bcd1a
  408039:	fs pop edi
  40803b:	and    al,BYTE PTR [edi+eiz*4-0x736dbfbc]
  408042:	dec    esi
  408043:	sbb    eax,0xa11b886a
  408048:	popf   
  408049:	mov    ah,bl
  40804b:	pop    ss
  40804c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40804d:	sbb    al,0xe5
  40804f:	dec    ecx
  408050:	mov    edi,0xdeaace29
  408055:	cmp    esi,DWORD PTR [ecx+0x70688ef6]
  40805b:	shl    BYTE PTR [edi],0xbe
  40805e:	out    0x13,eax
  408060:	clc    
  408061:	out    dx,al
  408062:	and    ah,bh
  408064:	addr16 xor al,0x29
  408067:	sbb    dl,dl
  408069:	xor    al,ah
  40806b:	out    dx,al
  40806c:	mov    edx,0x9fbd0c40
  408071:	mov    edx,0x18b57ecb
  408076:	jg     0x4080ee
  408078:	das    
  408079:	mov    bl,0x63
  40807b:	not    DWORD PTR [eax]
  40807d:	fs dec esi
  40807f:	and    edx,DWORD PTR ds:0x46cb0f4d
  408085:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408086:	jmp    0x13acfe55
  40808b:	or     eax,0x20511161
  408090:	jl     0x4080ae
  408092:	xor    DWORD PTR [esi+0x14cdf3fb],esp
  408098:	jmp    0x4080ad
  40809a:	enter  0x15c2,0x24
  40809e:	xor    ebx,DWORD PTR [eax+0xf]
  4080a1:	jmp    0x40806b
  4080a3:	call   0x7b09d210
  4080a8:	push   cs
  4080a9:	cmp    edi,DWORD PTR [ebx+0x35]
  4080ac:	push   0x9475c2c9
  4080b1:	aad    0xd1
  4080b3:	and    al,0xac
  4080b5:	lahf   
  4080b6:	idiv   DWORD PTR ds:0x2de56c6b
  4080bc:	nop
  4080bd:	loop   0x408136
  4080bf:	mov    dl,0x51
  4080c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4080c2:	push   edi
  4080c3:	mov    eax,ds:0xc50d8ca8
  4080c8:	icebp  
  4080c9:	adc    al,0x3c
  4080cb:	ret    
  4080cc:	mov    ebx,0x9fa29105
  4080d1:	push   ds
  4080d2:	inc    edx
  4080d3:	or     DWORD PTR [ebx-0x7],edx
  4080d6:	icebp  
  4080d7:	out    0x6,eax
  4080d9:	mov    edi,0x17ca48d9
  4080de:	shr    BYTE PTR [edi+0x47],0xee
  4080e2:	loop   0x408068
  4080e4:	jo     0x4080cc
  4080e6:	fs aaa 
  4080e8:	aad    0x1f
  4080ea:	jmp    0x4080cd
  4080ec:	mov    al,0xb8
  4080ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4080ef:	jo     0x408081
  4080f1:	outs   dx,DWORD PTR ds:[esi]
  4080f2:	inc    ecx
  4080f3:	stos   DWORD PTR es:[edi],eax
  4080f4:	mov    al,ds:0xc116922e
  4080f9:	push   eax
  4080fa:	cmp    ch,bh
  4080fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4080fd:	(bad)  
  4080fe:	loope  0x4080a3
  408100:	fwait
  408101:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408102:	jnp    0x40811a
  408104:	pushf  
  408105:	lea    edi,[edi+0x4d]
  408108:	or     BYTE PTR [edi+0x4ada327a],al
  40810e:	xor    BYTE PTR [esi-0x60e33],0xbf
  408115:	ret    0x98a2
  408118:	cmp    edi,esp
  40811a:	dec    ebx
  40811b:	(bad)  
  40811c:	aam    0xb4
  40811e:	dec    ecx
  40811f:	ss mov esi,0x55cd3fc7
  408125:	or     dh,BYTE PTR [ecx-0x37]
  408128:	pushf  
  408129:	and    DWORD PTR [edi-0x3f],ecx
  40812c:	iret   
  40812d:	cmp    bh,BYTE PTR [edi-0x6b]
  408130:	push   ds
  408131:	jno    0x408199
  408133:	pop    ecx
  408134:	fidivr DWORD PTR [ecx+0x9e3ec6a]
  40813a:	lds    edx,FWORD PTR [ebx+0x6a1fc6f4]
  408140:	dec    ebp
  408141:	and    BYTE PTR [ecx+0x3888d143],0xd8
  408148:	cmp    eax,0xe096c4e2
  40814d:	and    edx,ebp
  40814f:	pop    esi
  408150:	dec    esp
  408151:	into   
  408152:	lods   eax,DWORD PTR ds:[esi]
  408153:	sub    BYTE PTR [edx+edi*4-0x345e205e],cl
  40815a:	outs   dx,BYTE PTR ds:[esi]
  40815b:	and    eax,0x1b49ac41
  408160:	xchg   esi,eax
  408161:	push   0x8ebf7eae
  408166:	xor    esi,ebp
  408168:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408169:	xor    ah,BYTE PTR [esi+0x308656ed]
  40816f:	push   ss
  408170:	(bad)  
  408171:	jns    0x408170
  408173:	fucom  st(5)
  408175:	cwde   
  408176:	pushf  
  408177:	dec    edi
  408178:	dec    ebx
  408179:	hlt    
  40817a:	push   0x7f
  40817c:	jmp    0x408167
  40817e:	add    DWORD PTR [ecx+0x2b],esi
  408181:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408182:	or     al,0x62
  408184:	jle    0x4081ff
  408186:	ja     0x408196
  408188:	inc    ebx
  408189:	lds    ebp,FWORD PTR [esi-0x1d]
  40818c:	repz push 0xffffffff
  40818f:	(bad)  
  408190:	and    eax,0xe222695d
  408195:	cmp    al,0xc5
  408197:	xor    ah,BYTE PTR [eax+0x1a7d8282]
  40819d:	mov    fs,WORD PTR [edx-0x8a8bea4]
  4081a3:	(bad)  
  4081a4:	mov    dh,0x59
  4081a6:	mov    ebx,edx
  4081a8:	dec    ebp
  4081a9:	xchg   BYTE PTR [edx-0x546bc507],dl
  4081af:	cmp    BYTE PTR [edx-0x5c],bh
  4081b2:	dec    ecx
  4081b3:	xor    DWORD PTR [ebx-0x2c],0x58f6753b
  4081ba:	pop    edi
  4081bb:	dec    edx
  4081bc:	mov    cl,cl
  4081be:	call   0x7a492bf2
  4081c3:	leave  
  4081c4:	ficom  WORD PTR [ebx-0x4cbc41a3]
  4081ca:	daa    
  4081cb:	mov    al,BYTE PTR [esi]
  4081cd:	pop    edx
  4081ce:	mov    al,ds:0x508e229b
  4081d3:	dec    ebp
  4081d4:	cld    
  4081d5:	cdq    
  4081d6:	jns    0x408206
  4081d8:	inc    edi
  4081d9:	cmc    
  4081da:	or     ebx,esi
  4081dc:	mov    al,ds:0x3e29fdb2
  4081e1:	mov    ah,0xb9
  4081e3:	add    ch,bl
  4081e5:	loop   0x4081cb
  4081e7:	and    al,0x32
  4081e9:	and    BYTE PTR [edi-0x72e8d104],0x79
  4081f0:	add    DWORD PTR [edi+0x659c8214],ebx
  4081f6:	lods   al,BYTE PTR ds:[esi]
  4081f7:	mov    ds:0x6118deb1,eax
  4081fc:	dec    ecx
  4081fd:	sub    esp,DWORD PTR [edi-0x8]
  408200:	pop    ds
  408201:	pop    DWORD PTR [eax+eiz*2]
  408204:	leave  
  408205:	cwde   
  408206:	xor    DWORD PTR [edx-0x5335771c],edx
  40820c:	xlat   BYTE PTR ds:[ebx]
  40820d:	sahf   
  40820e:	loope  0x408274
  408210:	mov    ah,0xd0
  408212:	and    dh,dl
  408214:	cmp    DWORD PTR ds:0x34d1b7bf,ebp
  40821a:	mov    dh,BYTE PTR [ebp+0x5c]
  40821d:	cmp    BYTE PTR [edi-0x8],bh
  408220:	add    BYTE PTR [ebp-0x7241d1ca],cl
  408226:	pusha  
  408227:	ja     0x4081d8
  408229:	neg    DWORD PTR [ecx+0x4d]
  40822c:	(bad)  [edi-0x1d]
  40822f:	fidivr WORD PTR [edx]
  408231:	adc    DWORD PTR [edi],esp
  408233:	dec    DWORD PTR [esi]
  408235:	and    BYTE PTR [esi],0xf1
  408238:	lds    di,DWORD PTR [esi-0x40]
  40823c:	inc    edx
  40823d:	inc    edx
  40823e:	push   edx
  40823f:	sbb    ch,BYTE PTR [edi-0x2e1c598b]
  408245:	(bad)  
  408246:	cli    
  408247:	jecxz  0x408292
  408249:	daa    
  40824a:	mov    ebp,0xf2604869
  40824f:	push   ecx
  408250:	sti    
  408251:	dec    edx
  408252:	mov    dl,0x5d
  408254:	fisttp WORD PTR [eax+0x7f831305]
  40825a:	js     0x4081f5
  40825c:	test   al,0xe0
  40825e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40825f:	(bad)  
  408260:	xchg   edi,eax
  408261:	and    dl,0x1d
  408264:	cmp    dl,BYTE PTR [eax+0x1e]
  408267:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408268:	bound  ebx,QWORD PTR [edi]
  40826a:	sub    eax,0xa53936d0
  40826f:	retf   0xc453
  408272:	test   DWORD PTR [eax-0x62],ecx
  408275:	shl    DWORD PTR [edi+0x5d78d617],1
  40827b:	dec    ecx
  40827c:	int3   
  40827d:	stc    
  40827e:	inc    edi
  40827f:	in     al,0x15
  408281:	pushf  
  408282:	add    al,al
  408284:	pop    esi
  408285:	retf   0xdb47
  408288:	fisub  DWORD PTR [ecx+0x720b3e01]
  40828e:	adc    al,al
  408290:	sub    ah,BYTE PTR [edx]
  408292:	shl    BYTE PTR [ebp+esi*2-0x44bfdd5e],0x79
  40829a:	test   ebp,esi
  40829c:	in     eax,0x21
  40829e:	mov    edi,0xe00f2452
  4082a3:	mov    BYTE PTR [edi],ch
  4082a5:	dec    ebp
  4082a6:	xchg   esi,eax
  4082a7:	aam    0xfa
  4082a9:	and    esi,ebp
  4082ab:	inc    esi
  4082ac:	xlat   BYTE PTR ds:[ebx]
  4082ad:	gs aad 0x8e
  4082b0:	dec    edi
  4082b1:	fadd   QWORD PTR [ebp+0x6eab9055]
  4082b7:	stos   DWORD PTR es:[edi],eax
  4082b8:	repz inc ebp
  4082ba:	and    ebp,DWORD PTR [edx]
  4082bc:	xchg   DWORD PTR [ecx-0x4],ecx
  4082bf:	sbb    al,0xea
  4082c1:	fcomp  QWORD PTR ds:0xab9b7ac
  4082c7:	outs   dx,BYTE PTR ds:[esi]
  4082c8:	rcr    cl,cl
  4082ca:	leave  
  4082cb:	xchg   ebx,eax
  4082cc:	mov    ebx,0x2b7d8b35
  4082d1:	enter  0xe4b3,0x7b
  4082d5:	mov    eax,DWORD PTR [ebp-0x38]
  4082d8:	xor    eax,esi
  4082da:	add    eax,edi
  4082dc:	mov    DWORD PTR [ebp-0x8],eax
  4082df:	mov    DWORD PTR [ebp-0x2c],0xf89c8590
  4082e6:	mov    DWORD PTR [ebp-0x44],0xf89c85bf
  4082ed:	mov    eax,DWORD PTR [ebp-0x38]
  4082f0:	mov    edx,DWORD PTR [ebp-0x14]
  4082f3:	xor    eax,esi
  4082f5:	add    eax,edi
  4082f7:	cmp    edx,eax
  4082f9:	je     0x40cbaa
  4082ff:	mov    eax,DWORD PTR [ebp-0x20]
  408302:	xor    eax,esi
  408304:	mov    edx,0xffcd8d14
  408309:	sub    edx,eax
  40830b:	add    edx,DWORD PTR [ebp-0x14]
  40830e:	mov    eax,DWORD PTR [ebp-0x20]
  408311:	mov    ebx,DWORD PTR [ebp-0x10]
  408314:	xor    eax,esi
  408316:	add    eax,edi
  408318:	imul   eax,ebx
  40831b:	cmp    eax,edx
  40831d:	ja     0x40cba7
  408323:	jmp    0x40a67f
  408328:	iret   
  408329:	xor    ecx,DWORD PTR [esi-0x3c7071c1]
  40832f:	add    DWORD PTR [ebx],0xfffffff7
  408332:	adc    edx,ebx
  408334:	mov    ds:0xb9b659a5,eax
  408339:	adc    eax,0x5f3b7a7a
  40833e:	jp     0x4083ba
  408340:	sub    al,0x59
  408342:	pushf  
  408343:	mov    ss,WORD PTR [ebx-0x79d60dfb]
  408349:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40834a:	cmp    BYTE PTR [eax],0x59
  40834d:	hlt    
  40834e:	dec    ecx
  40834f:	repnz and eax,0xa5fa925d
  408355:	int3   
  408356:	or     ebx,eax
  408358:	pop    eax
  408359:	loop   0x4083c9
  40835b:	dec    eax
  40835c:	fsubr  DWORD PTR [si]
  40835f:	lods   eax,DWORD PTR ds:[esi]
  408360:	jmp    0x7ad2eab9
  408365:	or     al,0xe5
  408367:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408368:	in     al,0x40
  40836a:	mov    edx,DWORD PTR [ecx]
  40836c:	or     eax,0xa81a525e
  408371:	je     0x4083c3
  408373:	stc    
  408374:	cmp    ebp,DWORD PTR [ebp+0x73]
  408377:	call   0xf78b4bf2
  40837c:	sbb    edx,ebp
  40837e:	in     eax,0x7c
  408380:	or     esp,eax
  408382:	repnz sbb al,0xad
  408385:	ins    DWORD PTR es:[edi],dx
  408386:	fnstenv [esi-0xabce216]
  40838c:	cmp    bh,ch
  40838e:	cdq    
  40838f:	sti    
  408390:	jo     0x408407
  408392:	ss jmp 0x408354
  408395:	and    DWORD PTR [ebp-0x6b],esp
  408398:	invd   
  40839a:	js     0x40841b
  40839c:	lods   al,BYTE PTR ds:[esi]
  40839d:	out    dx,al
  40839e:	jp     0x408372
  4083a0:	or     eax,0xbabb866e
  4083a5:	lds    edx,FWORD PTR [eax-0x68]
  4083a8:	scas   eax,DWORD PTR es:[edi]
  4083a9:	adc    ch,BYTE PTR ds:0xb89ea05c
  4083af:	jns    0x408423
  4083b1:	jg     0x40839a
  4083b3:	mov    ch,0xb0
  4083b5:	icebp  
  4083b6:	shr    esp,0xf6
  4083b9:	std    
  4083ba:	jmp    0x408416
  4083bc:	add    DWORD PTR [ebp-0x5ec9d9b7],0x361909e6
  4083c6:	je     0x4083f4
  4083c8:	jo     0x40834f
  4083ca:	xor    al,BYTE PTR [esi+0x22]
  4083cd:	sbb    DWORD PTR ds:0xea688ec5,0x30c5e829
  4083d7:	add    ax,dx
  4083da:	lea    ebp,[eax-0x62]
  4083dd:	cli    
  4083de:	out    dx,eax
  4083df:	ror    al,0xaa
  4083e2:	hlt    
  4083e3:	xchg   ecx,eax
  4083e4:	sbb    ch,BYTE PTR [edx]
  4083e6:	pop    ds
  4083e7:	int3   
  4083e8:	dec    ebx
  4083e9:	pop    ebp
  4083ea:	addr16 push 0x970c26c0
  4083f0:	pusha  
  4083f1:	push   edx
  4083f2:	std    
  4083f3:	cmp    al,0x41
  4083f5:	or     eax,0xca3650c0
  4083fa:	add    DWORD PTR [ebp+0x76],esp
  4083fd:	das    
  4083fe:	mov    es,WORD PTR [edi+0x69]
  408401:	mov    ch,0x2a
  408403:	shl    BYTE PTR es:[esi],cl
  408406:	add    eax,0xcd5856a3
  40840b:	jae    0x4083fc
  40840d:	repz fstp QWORD PTR ds:0x24ad07c7
  408414:	mov    cl,0x3e
  408416:	mov    ebp,0xb4dee186
  40841b:	xor    DWORD PTR [eiz*1-0x6ddc1bd1],ebp
  408422:	imul   ecx,ebx,0x8ce04983
  408428:	jno    0x408486
  40842a:	add    al,0xb0
  40842c:	xchg   ebp,eax
  40842d:	dec    ebx
  40842e:	push   edi
  40842f:	ja     0x408407
  408431:	hlt    
  408432:	mov    WORD PTR [ebp+0x5b],ss
  408435:	les    esp,FWORD PTR [ecx+0x28]
  408438:	imul   edi,DWORD PTR [esi],0xffffffda
  40843b:	mov    BYTE PTR [esi+ebp*1+0x4536d5a0],dl
  408442:	sbb    DWORD PTR [esi-0x1f222bce],ebx
  408448:	bound  esi,QWORD PTR [ebx]
  40844a:	jo     0x40841c
  40844c:	cli    
  40844d:	pop    ecx
  40844e:	adc    al,0x4a
  408450:	mov    cl,BYTE PTR [ebp-0x17]
  408453:	mov    ah,0xe4
  408455:	xchg   edx,eax
  408456:	sub    BYTE PTR [ebx+0x3a27bc4d],0x6d
  40845d:	fsubr  QWORD PTR fs:0xee168a8b
  408464:	adc    BYTE PTR [esi+ecx*2-0x679105a4],dl
  40846b:	test   BYTE PTR [edx],ah
  40846d:	or     dh,BYTE PTR [edx-0x6f]
  408470:	loop   0x40845b
  408472:	adc    eax,0x7680ce28
  408477:	inc    eax
  408478:	(bad)  
  408479:	pop    eax
  40847a:	not    DWORD PTR [ecx+0x54629ac4]
  408480:	mov    esp,0xa3435052
  408485:	sahf   
  408486:	mov    ah,0xae
  408488:	mov    BYTE PTR [ecx-0x24],ah
  40848b:	jp     0x408467
  40848d:	add    BYTE PTR [ebx],dh
  40848f:	sub    DWORD PTR [edi+0x11],0x847e677b
  408496:	cwde   
  408497:	div    DWORD PTR [esi]
  408499:	jle    0x40849f
  40849b:	inc    ecx
  40849c:	xchg   edx,eax
  40849d:	cmpxchg dh,cl
  4084a0:	xchg   ebp,eax
  4084a1:	jmp    0x408493
  4084a3:	or     ebp,edx
  4084a5:	jl     0x4084b2
  4084a7:	xchg   esp,eax
  4084a8:	push   ds
  4084a9:	int3   
  4084aa:	lock pop esi
  4084ac:	(bad)  
  4084ad:	mov    al,ds:0x101e39f
  4084b2:	outs   dx,DWORD PTR ds:[esi]
  4084b3:	cli    
  4084b4:	jno    0x4084d2
  4084b6:	pop    ecx
  4084b7:	xchg   ebx,eax
  4084b8:	xchg   esp,eax
  4084b9:	cwde   
  4084ba:	sbb    eax,0xbf3c4465
  4084bf:	leave  
  4084c0:	mov    WORD PTR [edi-0x24],ss
  4084c3:	sub    ebp,DWORD PTR [esi+0x45eaea10]
  4084c9:	jbe    0x40848e
  4084cb:	push   ebx
  4084cc:	push   ecx
  4084cd:	or     BYTE PTR [esi-0x3b],ch
  4084d0:	stc    
  4084d1:	in     al,0x17
  4084d3:	cwde   
  4084d4:	pop    ebp
  4084d5:	ins    BYTE PTR es:[edi],dx
  4084d6:	daa    
  4084d7:	dec    eax
  4084d8:	inc    eax
  4084d9:	scas   eax,DWORD PTR es:[edi]
  4084da:	call   0xcb4d:0x349a0b39
  4084e1:	shr    DWORD PTR [ecx+0x1d9e717b],1
  4084e7:	cwde   
  4084e8:	pusha  
  4084e9:	jecxz  0x40852f
  4084eb:	(bad)  
  4084ed:	adc    eax,0x7275e
  4084f2:	jnp    0x408519
  4084f4:	push   ebp
  4084f5:	jns    0x4084d9
  4084f7:	loopne 0x40853d
  4084f9:	pop    ss
  4084fa:	(bad)  [ecx+0x21a679b7]
  408500:	jns    0x408499
  408502:	rcr    ch,0x8d
  408505:	leave  
  408506:	int    0xd9
  408508:	sbb    DWORD PTR [ecx+0x9],ecx
  40850b:	pusha  
  40850c:	imul   ebp,edi,0x7da51a7f
  408512:	xor    ch,BYTE PTR [eax]
  408514:	aaa    
  408515:	sbb    DWORD PTR [eax],0x6ef48aa4
  40851b:	iret   
  40851c:	je     0x408574
  40851e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40851f:	int    0x54
  408521:	mov    WORD PTR gs:[esi],?
  408524:	les    edi,FWORD PTR [ecx]
  408526:	mov    bh,0x69
  408528:	add    bl,BYTE PTR [edx]
  40852a:	jecxz  0x4084c8
  40852c:	sbb    bl,al
  40852e:	dec    edx
  40852f:	cmp    al,0xac
  408531:	scas   al,BYTE PTR es:[edi]
  408532:	adc    eax,0xa8c19fea
  408537:	cmp    al,0xf9
  408539:	adc    al,0x87
  40853b:	mov    bh,0xf2
  40853d:	imul   edx,DWORD PTR [ecx+0x36],0xffffffda
  408541:	inc    edx
  408542:	push   ss
  408543:	pop    ebp
  408544:	push   0x1aa90267
  408549:	mov    ?,WORD PTR [esi]
  40854b:	addr16 adc eax,0x33734d
  408551:	mov    ecx,0xd338f0fe
  408556:	cmp    edx,DWORD PTR [edx+0x127300d6]
  40855c:	xor    BYTE PTR [ecx-0x2bf2a058],dh
  408562:	dec    esi
  408563:	push   ecx
  408564:	inc    ebx
  408565:	lods   al,BYTE PTR ds:[esi]
  408566:	aad    0x1b
  408568:	out    0xff,eax
  40856a:	lods   eax,DWORD PTR ds:[esi]
  40856b:	arpl   WORD PTR [esi+0x1669ebca],si
  408571:	lea    esp,[edi+0x8]
  408574:	or     esp,DWORD PTR [eax-0x75aeb506]
  40857a:	fst    QWORD PTR [edx+0x4ef0bca3]
  408580:	in     eax,0xa2
  408582:	dec    edx
  408583:	sahf   
  408584:	std    
  408585:	pop    esp
  408586:	add    ecx,ecx
  408588:	cli    
  408589:	and    al,0x74
  40858b:	mov    ecx,0xf9e4677e
  408590:	inc    ebx
  408591:	or     bh,dh
  408593:	mov    edi,ebp
  408595:	fwait
  408596:	stc    
  408597:	ins    BYTE PTR es:[edi],dx
  408598:	sbb    ecx,eax
  40859a:	inc    ebx
  40859b:	bound  edi,QWORD PTR [eax-0x786e05e5]
  4085a1:	pop    ecx
  4085a2:	jl     0x408527
  4085a4:	mov    ds:0x91f3233a,al
  4085a9:	mov    ds:0x33751856,al
  4085ae:	ret    
  4085af:	test   dh,dl
  4085b1:	sbb    BYTE PTR [edx+0x55],0x73
  4085b5:	or     esp,esi
  4085b7:	push   esp
  4085b8:	jge    0x408598
  4085ba:	xchg   eax,edx
  4085bc:	icebp  
  4085bd:	and    esi,edi
  4085bf:	cld    
  4085c0:	test   al,0x9a
  4085c2:	add    ebx,DWORD PTR [eax+0x7c]
  4085c5:	sbb    edi,DWORD PTR [esi]
  4085c7:	pop    eax
  4085c8:	add    eax,0x1bdbddb
  4085cd:	dec    eax
  4085ce:	mov    dh,0xb0
  4085d0:	add    DWORD PTR [eax],ecx
  4085d2:	adc    BYTE PTR [esi],bh
  4085d4:	push   ds
  4085d5:	ds jns 0x4085b6
  4085d8:	cmc    
  4085d9:	ret    
  4085da:	xchg   DWORD PTR [ecx+0x2f17b69f],ebx
  4085e0:	sar    edx,1
  4085e2:	and    ebx,edi
  4085e4:	int    0xdb
  4085e6:	jmp    0x4085bd
  4085e8:	sub    eax,0x9ef8c7a6
  4085ed:	mov    ebx,0x6a72d9af
  4085f2:	dec    eax
  4085f3:	inc    edi
  4085f4:	or     DWORD PTR [eax],esp
  4085f6:	cdq    
  4085f7:	xor    BYTE PTR [edi+0x46],al
  4085fa:	outs   dx,DWORD PTR ds:[esi]
  4085fb:	sahf   
  4085fc:	sbb    bl,0x57
  4085ff:	ret    0x2d8
  408602:	gs inc esp
  408604:	xchg   edx,eax
  408605:	mov    bh,0xb7
  408607:	push   0x1b
  408609:	xor    BYTE PTR [esi-0x25ca4af0],ch
  40860f:	push   cs
  408610:	jbe    0x408593
  408612:	jae    0x4085d9
  408614:	jo     0x40860c
  408616:	jl     0x4085e6
  408618:	dec    edi
  408619:	mov    ebx,0x14e22051
  40861e:	mov    ebp,0x8de849c7
  408623:	int    0xec
  408625:	cdq    
  408626:	sub    BYTE PTR [ecx-0x58],bl
  408629:	cmp    ecx,eax
  40862b:	leave  
  40862c:	fwait
  40862d:	cmp    DWORD PTR [edx+eax*2+0x7b],esp
  408631:	ins    BYTE PTR es:[edi],dx
  408632:	clc    
  408633:	and    DWORD PTR [ecx],0xef2cf8e3
  408639:	and    ebp,DWORD PTR [esi]
  40863b:	out    0x83,al
  40863d:	cmc    
  40863e:	dec    esi
  40863f:	ror    BYTE PTR [ebx+0x5c],cl
  408642:	and    al,0xfb
  408644:	sub    al,0x52
  408646:	jge    0x408656
  408648:	int    0xc5
  40864a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40864b:	add    esp,DWORD PTR [ecx+0x36]
  40864e:	ins    DWORD PTR es:[edi],dx
  40864f:	mov    ch,BYTE PTR [ecx+0x64]
  408652:	add    cl,al
  408654:	mov    es:0x427299ad,al
  40865a:	xlat   BYTE PTR ds:[ebx]
  40865b:	lds    esp,FWORD PTR [edx+0x63edfa32]
  408661:	jle    0x408638
  408663:	jnp    0x4086a6
  408665:	xchg   ebx,eax
  408666:	xchg   ebp,eax
  408667:	out    0xc6,al
  408669:	aad    0x98
  40866b:	xchg   DWORD PTR [ecx],esp
  40866d:	scas   al,BYTE PTR es:[edi]
  40866e:	fild   DWORD PTR [eax]
  408670:	pop    ss
  408671:	loopne 0x40861b
  408673:	adc    ch,bl
  408675:	xor    ebp,DWORD PTR [ebp+0x4c]
  408678:	push   ss
  408679:	mov    edx,0xd549049d
  40867e:	xor    al,0x21
  408680:	call   0x5cf60087
  408685:	cli    
  408686:	mov    bh,0xde
  408688:	stos   DWORD PTR es:[edi],eax
  408689:	sub    dh,BYTE PTR [edx]
  40868b:	dec    ebx
  40868c:	cmp    DWORD PTR [eax+0x43],0xffffffff
  408690:	dec    ebp
  408691:	lods   eax,DWORD PTR ds:[esi]
  408692:	data16 aad 0x73
  408695:	or     edi,esi
  408697:	jl     0x408636
  408699:	jge    0x408639
  40869b:	inc    edi
  40869c:	cld    
  40869d:	inc    ebx
  40869e:	in     al,0x62
  4086a0:	mov    ecx,esi
  4086a2:	xor    eax,0x4e813e19
  4086a7:	mov    al,ds:0xa00dcee4
  4086ac:	cwde   
  4086ad:	jnp    0x4086fb
  4086af:	in     eax,0x58
  4086b1:	outs   dx,BYTE PTR ds:[esi]
  4086b2:	mov    cl,0x3a
  4086b4:	test   al,0xd6
  4086b6:	mov    BYTE PTR [edi+0x4b1a71fa],0xc6
  4086bd:	pop    edi
  4086be:	push   ecx
  4086bf:	push   0x97ea574d
  4086c4:	mov    al,BYTE PTR [eiz*2-0x3a22c492]
  4086cb:	fs enter 0x1829,0x29
  4086d0:	cmp    esi,DWORD PTR [edi-0x64745dd3]
  4086d6:	mov    ch,0x5d
  4086d8:	inc    esp
  4086d9:	rcr    eax,1
  4086db:	pop    ebx
  4086dc:	cmc    
  4086dd:	mov    dh,0xdd
  4086df:	out    0xd2,eax
  4086e1:	xlat   BYTE PTR ds:[ebx]
  4086e2:	scas   al,BYTE PTR es:[edi]
  4086e3:	mov    ebx,0x958a92af
  4086e8:	shl    DWORD PTR [ebx],0xa7
  4086eb:	xor    DWORD PTR [eax-0x12],eax
  4086ee:	or     edx,DWORD PTR [edx+ebx*1+0x77]
  4086f2:	inc    ebx
  4086f3:	scas   eax,DWORD PTR es:[edi]
  4086f4:	in     eax,0x7
  4086f6:	sbb    DWORD PTR [ecx-0x6fbe31ae],ebp
  4086fc:	sub    cl,BYTE PTR [edi]
  4086fe:	sbb    eax,DWORD PTR [ebx+0x3eceeaf3]
  408704:	adc    al,0x9e
  408707:	shl    ebx,1
  408709:	mov    esi,0x9629c714
  40870e:	inc    ecx
  40870f:	inc    ecx
  408710:	jg     0x40869d
  408712:	jnp    0x40873e
  408714:	fchs   
  408716:	mov    ebx,0x91e32581
  40871b:	adc    ebp,DWORD PTR [ebp+0x4604209f]
  408721:	inc    ecx
  408722:	mov    al,ds:0x25df53d
  408727:	das    
  408728:	xor    ebp,ebx
  40872a:	mov    eax,0xab654e07
  40872f:	and    eax,DWORD PTR [esi]
  408731:	xlat   BYTE PTR ds:[ebx]
  408732:	mov    ds:0xc0166c32,al
  408737:	adc    dl,al
  408739:	mov    edi,DWORD PTR [ebx]
  40873b:	data16 and bh,BYTE PTR [ebx]
  40873e:	adc    edi,DWORD PTR [ebx+0x617a4afe]
  408744:	add    al,0x8f
  408746:	bnd jno 0x40879c
  408749:	adc    al,0xaa
  40874b:	or     al,BYTE PTR [edx]
  40874d:	and    DWORD PTR [ebx],0x37
  408750:	cmc    
  408751:	adc    cl,BYTE PTR [eax+eax*1+0x18fd4e93]
  408758:	mov    ah,0x49
  40875a:	or     eax,0x3e71317b
  40875f:	addr16 mov ebx,0xd5d48b37
  408765:	mov    ds:0xd2f07ead,al
  40876a:	xchg   bp,ax
  40876c:	pop    ds
  40876d:	cmp    BYTE PTR [ebx-0x37],bh
  408770:	inc    eax
  408771:	jge    0x4087b3
  408773:	dec    ecx
  408774:	cmp    al,0x65
  408776:	lods   eax,DWORD PTR ds:[esi]
  408777:	stos   DWORD PTR es:[edi],eax
  408778:	adc    DWORD PTR [ebp+0x77],ebp
  40877b:	cmp    BYTE PTR [ebx+0x72],ah
  40877e:	gs (bad) 
  408780:	sbb    ecx,esp
  408782:	nop
  408783:	fcom   DWORD PTR [ebx+ebp*1+0x22]
  408787:	scas   al,BYTE PTR es:[edi]
  408788:	mov    dh,cl
  40878a:	push   0x1c63bf81
  40878f:	jne    0x4087fe
  408791:	and    cl,BYTE PTR [ebp+0x367942cd]
  408797:	sbb    al,al
  408799:	push   esp
  40879a:	fidivr WORD PTR [ebp+0x278ad3b7]
  4087a0:	xchg   edx,eax
  4087a1:	scas   eax,DWORD PTR es:[edi]
  4087a2:	lds    ebp,FWORD PTR [edx-0x360d4954]
  4087a8:	jae    0x408738
  4087aa:	stos   DWORD PTR es:[edi],eax
  4087ab:	or     bl,dl
  4087ad:	mov    ecx,0x6bdeea43
  4087b2:	call   0x3578:0x5cfad4a4
  4087b9:	sub    ch,ah
  4087bb:	not    al
  4087bd:	jnp    0x4087b5
  4087bf:	pcmpgtw mm3,QWORD PTR [ebp-0x28]
  4087c3:	or     BYTE PTR [edx-0x6d],cl
  4087c6:	aaa    
  4087c7:	fst    DWORD PTR [edx-0x4]
  4087ca:	push   ecx
  4087cb:	jo     0x408788
  4087cd:	dec    esi
  4087ce:	sub    ebx,esi
  4087d0:	jb     0x4087f1
  4087d2:	xor    al,0x5a
  4087d4:	mov    ebp,0x2586cfff
  4087d9:	push   edx
  4087da:	push   0xffffffe7
  4087dc:	xchg   edi,eax
  4087dd:	mov    ecx,0x5360ba53
  4087e2:	mov    edi,DWORD PTR [edi+ebp*4]
  4087e5:	aad    0x86
  4087e7:	inc    esp
  4087e8:	out    dx,al
  4087e9:	fwait
  4087ea:	mov    bh,0x67
  4087ec:	pop    ecx
  4087ed:	dec    edx
  4087ee:	xchg   DWORD PTR [eax-0x18],ebx
  4087f1:	in     eax,dx
  4087f2:	sbb    ebx,edx
  4087f4:	mov    bh,0xef
  4087f6:	jne    0x408811
  4087f8:	iret   
  4087f9:	lahf   
  4087fa:	add    BYTE PTR [edx+ebp*4-0x62a1675c],cl
  408801:	cmp    bl,BYTE PTR [ebx+0x223a7886]
  408807:	jne    0x408805
  408809:	jl     0x408878
  40880b:	es je  0x40885d
  40880e:	xor    al,0xab
  408810:	add    eax,0xc30b3e3d
  408815:	fcomp  DWORD PTR [esp+ebp*1-0x4f]
  408819:	pusha  
  40881a:	popa   
  40881b:	mov    esi,0x2856255a
  408820:	jo     0x4087b4
  408822:	(bad)  
  408823:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408824:	jo     0x408822
  408826:	lods   al,BYTE PTR ds:[esi]
  408827:	cdq    
  408828:	sub    esp,DWORD PTR [ebp-0x3a]
  40882b:	out    0xbe,eax
  40882d:	jle    0x408855
  40882f:	xchg   edi,eax
  408830:	imul   esi,DWORD PTR [esi+ebx*2],0xffffffeb
  408834:	cmc    
  408835:	jbe    0x408849
  408837:	ret    0x1b53
  40883a:	fldenv ds:0x7f828e3b
  408840:	or     eax,0x4c01ad43
  408845:	sbb    eax,0xf5b01045
  40884a:	ret    0x97f5
  40884d:	addr16 sub al,0x5f
  408850:	jecxz  0x408888
  408852:	loopne 0x40881d
  408854:	or     al,0x3b
  408856:	xchg   BYTE PTR [ebx-0x16],dh
  408859:	fisub  DWORD PTR [ebx-0x75]
  40885c:	and    edi,DWORD PTR [esi+0xb]
  40885f:	leave  
  408860:	cmc    
  408861:	call   0xb3c2e889
  408866:	mov    al,ds:0x7cb464dd
  40886b:	mov    esi,0x270cbfbe
  408870:	pop    ecx
  408871:	imul   ebp,DWORD PTR [edx-0x4b97d44c],0xffffffda
  408878:	imul   DWORD PTR ds:0xc73f8099
  40887e:	std    
  40887f:	nop
  408880:	in     eax,0xb8
  408882:	sahf   
  408883:	std    
  408884:	jge    0x4088ef
  408886:	loope  0x40883e
  408888:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408889:	iret   
  40888a:	lock loope 0x40880d
  40888d:	jmp    0x4088c6
  40888f:	mov    DWORD PTR [ebp+0x75],edx
  408892:	mov    ch,0x74
  408894:	scas   eax,DWORD PTR es:[edi]
  408895:	mov    dh,0xf1
  408897:	nop
  408898:	xchg   DWORD PTR ds:0xc35d5d9d,eax
  40889e:	jnp    0x408890
  4088a0:	retf   
  4088a1:	test   DWORD PTR [edi-0x10132587],edx
  4088a7:	popa   
  4088a8:	scas   al,BYTE PTR es:[edi]
  4088a9:	mov    ecx,0xb2dea327
  4088ae:	mov    BYTE PTR [ecx+esi*1],ah
  4088b1:	pop    es
  4088b2:	xor    eax,0x599c6f87
  4088b7:	mov    cs,edi
  4088b9:	or     eax,DWORD PTR [esp+ecx*1]
  4088bc:	sub    al,BYTE PTR [eax]
  4088be:	(bad)  
  4088bf:	jmp    0x408920
  4088c1:	fstp   QWORD PTR [ebx+0x29]
  4088c4:	pop    ebp
  4088c5:	mov    ds:0x77141611,al
  4088ca:	xchg   BYTE PTR [ebx+0x7cbc359],dh
  4088d0:	mov    esp,0x838922d1
  4088d5:	push   ss
  4088d6:	les    esi,FWORD PTR [eax-0x3c]
  4088d9:	push   esp
  4088da:	xchg   BYTE PTR [ebp-0x6d],bl
  4088dd:	xor    DWORD PTR ds:0xc1a86851,ecx
  4088e3:	jnp    0x4088d1
  4088e5:	stos   DWORD PTR es:[edi],eax
  4088e6:	scas   al,BYTE PTR es:[edi]
  4088e7:	adc    esp,DWORD PTR [esi]
  4088e9:	mov    dl,0xb7
  4088eb:	loope  0x408876
  4088ed:	retf   0x43a1
  4088f0:	mov    dh,0xe3
  4088f2:	adc    edi,DWORD PTR [ecx]
  4088f4:	dec    ebp
  4088f5:	sti    
  4088f6:	stc    
  4088f7:	mov    al,ds:0x8adf4179
  4088fc:	inc    ebp
  4088fd:	mov    esp,0x22dabbe9
  408902:	pop    es
  408903:	mov    cl,0xb8
  408905:	xchg   esp,eax
  408906:	or     eax,0xb5097118
  40890b:	pop    ecx
  40890c:	push   esi
  40890d:	dec    edx
  40890e:	bound  edi,QWORD PTR [ebx+0x60ab81d]
  408914:	out    dx,al
  408915:	mov    al,ds:0x936f144a
  40891a:	outs   dx,BYTE PTR ds:[esi]
  40891b:	(bad)  
  40891c:	mov    eax,ds:0xdd94c42b
  408921:	xchg   BYTE PTR [edx-0x3da9e424],bh
  408927:	pop    esp
  408928:	or     bl,BYTE PTR [ebx+0x1cf1e7e1]
  40892e:	xor    ecx,ebx
  408930:	push   ss
  408931:	ins    BYTE PTR es:[edi],dx
  408932:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408933:	cmp    al,0x36
  408935:	pminub mm2,QWORD PTR [edi-0x3752001]
  40893c:	sub    DWORD PTR [ebx-0x68fba1b5],0xffffffa1
  408943:	jl     0x4089c1
  408945:	mov    dh,0x20
  408947:	cmp    al,0x54
  408949:	in     al,dx
  40894a:	test   DWORD PTR [bp+di-0x73],ecx
  40894e:	mov    ?,WORD PTR [edx-0x45d29727]
  408954:	mov    cl,0xdc
  408956:	xchg   ecx,eax
  408957:	sbb    esi,DWORD PTR [edx+ebx*2+0x20854eeb]
  40895e:	sub    bl,BYTE PTR [ebp-0x49214985]
  408964:	xchg   ebp,eax
  408965:	aad    0x12
  408967:	push   0xddf0444a
  40896c:	xor    cl,ah
  40896e:	xchg   bl,ch
  408970:	outs   dx,DWORD PTR ds:[esi]
  408971:	out    0xd6,al
  408973:	cwde   
  408974:	test   BYTE PTR [ebx],dh
  408976:	mov    edx,0x11f51d22
  40897b:	xchg   esi,eax
  40897c:	ds dec edx
  40897e:	arpl   WORD PTR [ebx+0xc],cx
  408981:	addr16 daa 
  408983:	test   BYTE PTR [ebx],cl
  408985:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408987:	in     eax,dx
  408988:	in     eax,0xa2
  40898a:	mov    ch,dh
  40898c:	in     al,0x8e
  40898e:	bound  esp,QWORD PTR [ebp+0x3867d4d9]
  408994:	call   0xdfa2760b
  408999:	loope  0x40899f
  40899b:	repz xchg edx,eax
  40899d:	mov    ch,0xf4
  40899f:	lds    edi,FWORD PTR [edi+0x69]
  4089a2:	enter  0xe4e4,0x6a
  4089a6:	xchg   BYTE PTR [ecx-0x41],ah
  4089a9:	(bad)  
  4089aa:	jns    0x408985
  4089ac:	test   BYTE PTR [esi+0x1f],ch
  4089af:	jl     0x4089d2
  4089b1:	loop   0x40899c
  4089b3:	outs   dx,DWORD PTR ds:[esi]
  4089b4:	dec    ecx
  4089b5:	gs test bl,0x1e
  4089b9:	arpl   WORD PTR [ecx+0x38],si
  4089bc:	loop   0x4089b9
  4089be:	pop    ds
  4089bf:	adc    cl,BYTE PTR [esi-0x47]
  4089c2:	test   DWORD PTR [ecx-0x1b],0xb17ca67a
  4089c9:	push   edx
  4089ca:	push   ss
  4089cb:	jmp    0x8b09:0xedcbc408
  4089d2:	ins    DWORD PTR es:[edi],dx
  4089d3:	adc    eax,0x755e7343
  4089d8:	push   eax
  4089d9:	sub    BYTE PTR [edi],0x5c
  4089dc:	pop    ss
  4089dd:	cmp    eax,0x8f9171d4
  4089e2:	call   0x5eed:0xff5b1a9e
  4089e9:	stc    
  4089ea:	jg     0x408a50
  4089ec:	pop    ss
  4089ed:	pop    es
  4089ee:	mov    ebp,0xcbfd2e8
  4089f3:	xor    BYTE PTR [eax-0xdffa85c],bl
  4089f9:	(bad)
  4089fd:	mov    BYTE PTR [edx+edx*4],dh
  408a00:	inc    esp
  408a01:	imul   edi,DWORD PTR ds:0x4a389a70,0x956fb507
  408a0b:	not    DWORD PTR [ebp+0x37]
  408a0e:	mov    ebx,DWORD PTR [ebx]
  408a10:	btc    DWORD PTR [ebp+0x27c12b3e],ebp
  408a17:	imul   esi,DWORD PTR [edx],0x97bd1779
  408a1d:	loopne 0x4089eb
  408a1f:	or     ah,BYTE PTR ds:0xa2471f3
  408a25:	in     al,0x35
  408a27:	or     DWORD PTR [edi],eax
  408a29:	jo     0x408a69
  408a2b:	ss fldz 
  408a2e:	gs in  al,0x93
  408a31:	dec    ecx
  408a32:	pop    esi
  408a33:	fldcw  WORD PTR [edi+eax*8+0x1b0288ca]
  408a3a:	pop    ss
  408a3b:	xor    eax,0x22cfcbaf
  408a40:	sub    DWORD PTR [eax-0x62],ebx
  408a43:	mov    dl,0xfe
  408a45:	adc    DWORD PTR [edi-0xb4759d0],edx
  408a4b:	and    DWORD PTR [ecx+0x7b63c93e],0x4e
  408a52:	pop    ebx
  408a53:	add    al,0xa3
  408a55:	xchg   DWORD PTR [eax],esi
  408a57:	xchg   BYTE PTR [edi+0x666d9e89],ch
  408a5d:	ss int 0xdb
  408a60:	std    
  408a61:	pop    ebp
  408a62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a63:	adc    eax,0xf49bd372
  408a68:	mov    ebp,0x2baa7ad8
  408a6d:	jecxz  0x408ac0
  408a6f:	popf   
  408a70:	ret    0xe1a1
  408a73:	pop    ecx
  408a74:	ret    
  408a75:	push   esp
  408a76:	push   es
  408a77:	in     al,dx
  408a78:	mov    ds:0x64a61c28,al
  408a7d:	dec    eax
  408a7e:	lea    eax,[eax]
  408a80:	add    ah,BYTE PTR [ebx]
  408a82:	outs   dx,DWORD PTR ds:[esi]
  408a83:	push   cs
  408a84:	push   ebp
  408a85:	mov    ebp,0x5c62f273
  408a8a:	and    al,0xe
  408a8c:	lods   eax,DWORD PTR ds:[esi]
  408a8d:	pop    es
  408a8e:	hlt    
  408a8f:	adc    ebx,DWORD PTR [esi+0x6f661460]
  408a95:	pop    ebp
  408a96:	shr    DWORD PTR [ebp-0x6f],cl
  408a99:	neg    BYTE PTR es:[edx+0x2b4ef046]
  408aa0:	ror    bh,1
  408aa2:	or     cl,0x1c
  408aa5:	xchg   esi,eax
  408aa6:	outs   dx,DWORD PTR ds:[esi]
  408aa7:	cmp    BYTE PTR [edi-0x5e43ce6b],bl
  408aad:	cwde   
  408aae:	jle    0x408a53
  408ab0:	imul   ebp
  408ab2:	pop    ebp
  408ab3:	sar    DWORD PTR [eax-0x2837f2f0],0x95
  408aba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408abb:	mov    edx,ebp
  408abd:	xchg   edx,eax
  408abe:	in     al,dx
  408abf:	push   esp
  408ac0:	cmp    ecx,DWORD PTR [esi+ebp*1-0x576c5a4b]
  408ac7:	je     0x408b1d
  408ac9:	pop    ebp
  408aca:	in     eax,0x59
  408acc:	rcl    DWORD PTR [ecx],cl
  408ace:	pop    es
  408acf:	scas   eax,DWORD PTR es:[edi]
  408ad0:	repz mov bh,0x87
  408ad3:	dec    edi
  408ad4:	pop    ds
  408ad5:	(bad)
  408ad9:	sti    
  408ada:	dec    edi
  408adb:	mov    edx,0x59d3c067
  408ae0:	push   ss
  408ae1:	jno    0x408a72
  408ae3:	bound  ecx,QWORD PTR [eax+edx*8-0x9c0645b]
  408aea:	xor    al,BYTE PTR [ebx-0x2d]
  408aed:	cmp    ebp,DWORD PTR [esi+0x124c6a39]
  408af3:	ins    DWORD PTR es:[edi],dx
  408af4:	idiv   BYTE PTR [eax-0x45]
  408af7:	loop   0x408ae8
  408af9:	or     al,0xbd
  408afb:	and    al,0x63
  408afd:	mov    al,ds:0x33e921e6
  408b02:	add    ebx,edi
  408b04:	jno    0x408acd
  408b06:	vmread DWORD PTR [ecx+ebp*2-0x25],eax
  408b0b:	pop    ebp
  408b0c:	jns    0x408a8f
  408b0e:	mov    bh,0xed
  408b10:	xchg   edx,eax
  408b11:	jl     0x408b47
  408b13:	add    DWORD PTR [esi],0xbba0f063
  408b19:	pushf  
  408b1a:	dec    ebp
  408b1b:	fmul   QWORD PTR [ebx+0x3cd1a990]
  408b21:	(bad)  
  408b22:	and    eax,0xd30a97f1
  408b27:	mov    al,ds:0xd0e80abd
  408b2c:	aam    0x6b
  408b2e:	sub    DWORD PTR [ebp-0x4a947038],esp
  408b34:	jo     0x408b95
  408b36:	sbb    ebp,ebx
  408b38:	mov    ch,0x72
  408b3a:	cmp    bl,0x8f
  408b3d:	jbe    0x408b71
  408b3f:	jb     0x408ac8
  408b41:	inc    ebx
  408b42:	shr    DWORD PTR [eax+0x4c],0xe5
  408b46:	jge    0x408b91
  408b48:	mov    es,edi
  408b4a:	mov    eax,0x2ce111e7
  408b4f:	(bad)  
  408b50:	fidiv  DWORD PTR [eax]
  408b52:	hlt    
  408b53:	add    DWORD PTR [edx],edx
  408b55:	xor    ecx,DWORD PTR [edi+0x28]
  408b58:	in     al,dx
  408b59:	xchg   ebx,eax
  408b5a:	sbb    DWORD PTR [ebx-0x71],ecx
  408b5d:	cmp    BYTE PTR [esi+edi*1],dh
  408b60:	cmp    bl,BYTE PTR [eax-0x173cee80]
  408b66:	(bad)  
  408b67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b68:	mov    dh,0x4
  408b6a:	fsubr  st(2),st
  408b6c:	pop    esp
  408b6d:	sbb    dl,bh
  408b6f:	push   esi
  408b70:	push   0x8474c1b3
  408b75:	arpl   WORD PTR [ebp+esi*2-0x1ef127e6],bx
  408b7c:	nop
  408b7d:	pop    ebx
  408b7e:	push   eax
  408b7f:	add    al,0x17
  408b81:	inc    ecx
  408b82:	popa   
  408b83:	call   DWORD PTR [ebx]
  408b85:	jp     0x408b24
  408b87:	jg     0x408baa
  408b89:	ins    BYTE PTR es:[edi],dx
  408b8a:	div    BYTE PTR [ebp+0x64a5dcc2]
  408b90:	mov    cl,0xbb
  408b92:	jge    0x408b25
  408b94:	cld    
  408b95:	push   cs
  408b96:	and    bl,BYTE PTR [ebx+0x1d]
  408b99:	(bad)  
  408b9a:	pop    ebx
  408b9b:	cmovno edx,esp
  408b9e:	xor    ah,BYTE PTR [ecx+0x65]
  408ba1:	adc    ebp,DWORD PTR [eax+0x63]
  408ba4:	or     edx,DWORD PTR [ecx]
  408ba6:	(bad)  
  408ba7:	gs (bad) 
  408ba9:	ja     0x408baf
  408bab:	outs   dx,DWORD PTR ds:[esi]
  408bac:	jecxz  0x408c03
  408bae:	loop   0x408ba7
  408bb0:	(bad)  
  408bb1:	or     al,0x9a
  408bb3:	inc    esi
  408bb4:	cmc    
  408bb5:	shl    ah,1
  408bb7:	jb     0x408b4a
  408bb9:	nop
  408bba:	ja     0x408b74
  408bbc:	(bad)  
  408bbd:	push   edi
  408bbe:	push   ebp
  408bbf:	xchg   cl,bl
  408bc1:	inc    eax
  408bc2:	jmp    0xd30a4bee
  408bc7:	nop
  408bc8:	leave  
  408bc9:	and    BYTE PTR [ebp-0x64a49b98],dl
  408bcf:	push   edx
  408bd0:	push   es
  408bd1:	xor    al,0x45
  408bd3:	pop    esi
  408bd4:	cmp    dl,BYTE PTR [esi+0x7c36d393]
  408bda:	test   DWORD PTR [edx-0x5d],ebp
  408bdd:	test   ebx,edx
  408bdf:	pop    edi
  408be0:	adc    DWORD PTR [ecx+0x5b581e5f],0x357e0895
  408bea:	scas   eax,DWORD PTR es:[edi]
  408beb:	cdq    
  408bec:	dec    eax
  408bed:	lods   al,BYTE PTR ds:[esi]
  408bee:	inc    esp
  408bef:	push   ds
  408bf0:	dec    esp
  408bf1:	sbb    eax,0x638fe66
  408bf6:	xchg   esp,eax
  408bf7:	add    edi,ebx
  408bf9:	(bad)  
  408bfa:	test   al,0x84
  408bfc:	and    ecx,DWORD PTR ds:0xb69791e
  408c02:	popa   
  408c03:	push   es
  408c04:	sbb    eax,0x69ecaf37
  408c09:	gs dec edi
  408c0b:	lea    eax,[ecx]
  408c0d:	(bad)  
  408c0e:	sti    
  408c0f:	or     al,0x7d
  408c11:	push   0x2f4ebe19
  408c16:	sub    BYTE PTR [ecx],ch
  408c18:	mov    al,0xdb
  408c1a:	and    al,0xe7
  408c1c:	test   bl,0x48
  408c1f:	xor    eax,0x220f0c73
  408c24:	cmp    DWORD PTR [edx],eax
  408c26:	mov    edx,0xb3df329b
  408c2b:	jp     0x408bc7
  408c2d:	add    eax,0x71d99184
  408c32:	add    eax,0x1ce0a6d6
  408c37:	jmp    0x408c5a
  408c39:	xor    BYTE PTR [eax-0x56c1c043],ch
  408c3f:	repz ror DWORD PTR [ebx-0x396182d3],cl
  408c46:	pushf  
  408c47:	(bad)  
  408c48:	cmc    
  408c49:	lds    eax,FWORD PTR [eax]
  408c4b:	pop    edx
  408c4c:	push   edi
  408c4d:	call   0x6209:0x874567f4
  408c54:	and    al,0x38
  408c56:	cwde   
  408c57:	repz jp 0x408c51
  408c5a:	ret    0x7772
  408c5d:	inc    ecx
  408c5e:	xor    al,0xe
  408c60:	pop    edx
  408c61:	fldenv [edx-0x7e]
  408c64:	add    esi,ebx
  408c66:	popf   
  408c67:	jno    0x408c27
  408c69:	fcmovnbe st,st(6)
  408c6b:	dec    ecx
  408c6c:	mov    bh,0x51
  408c6e:	mov    WORD PTR [esi+0x39],es
  408c71:	mov    ch,0x57
  408c73:	sub    BYTE PTR [edi+0x79],dl
  408c76:	xor    ebx,DWORD PTR [ebp+esi*4+0x308052d3]
  408c7d:	mov    cl,0x6e
  408c7f:	lds    ebx,FWORD PTR [eax]
  408c81:	push   es
  408c82:	ins    BYTE PTR es:[edi],dx
  408c83:	sbb    bh,BYTE PTR [ecx+0x39]
  408c86:	jg     0x408c5c
  408c88:	cmp    eax,edi
  408c8a:	mov    DWORD PTR [eax+0x35],ebp
  408c8d:	adc    al,0xae
  408c8f:	inc    edi
  408c90:	je     0x408cee
  408c92:	sub    bl,BYTE PTR [eax]
  408c94:	adc    BYTE PTR [edx-0xb86b24f],bl
  408c9a:	cmp    edi,DWORD PTR [edx]
  408c9c:	in     al,0xac
  408c9e:	or     al,BYTE PTR [esi]
  408ca0:	xor    eax,0xfa02eb9b
  408ca5:	sbb    al,0x92
  408ca7:	leave  
  408ca8:	xchg   DWORD PTR [ebx-0x63577c0],edi
  408cae:	jmp    0x408cc4
  408cb0:	and    dh,BYTE PTR [esp+esi*2-0x4d1c8a11]
  408cb7:	fldenv [ecx]
  408cb9:	jg     0x408c59
  408cbb:	inc    BYTE PTR [eax-0x2d0457a1]
  408cc1:	xchg   esp,eax
  408cc2:	cdq    
  408cc3:	into   
  408cc4:	cmp    al,0x4e
  408cc6:	aas    
  408cc7:	pop    ss
  408cc8:	pop    ebp
  408cc9:	mov    ds:0x21bfbce0,eax
  408cce:	push   es
  408ccf:	and    bl,ah
  408cd1:	and    BYTE PTR [edx-0x6702e802],bl
  408cd7:	xor    bl,BYTE PTR [edi]
  408cd9:	jg     0x408d37
  408cdb:	push   es
  408cdc:	bound  ecx,QWORD PTR [ebx]
  408cde:	repnz mov bl,BYTE PTR [eax+ecx*8-0x24]
  408ce3:	add    esi,0xac77e4df
  408ce9:	cmp    BYTE PTR [esi],ah
  408ceb:	push   esp
  408cec:	or     DWORD PTR [edi-0x43],ebx
  408cef:	sbb    esp,DWORD PTR [edx-0xbbbe965]
  408cf5:	add    DWORD PTR [eax],0xa5028b68
  408cfb:	mov    ecx,ds
  408cfd:	push   esp
  408cfe:	pop    ebp
  408cff:	mov    esp,0xd4c33032
  408d04:	int    0x5c
  408d06:	cli    
  408d07:	mov    ebp,0x985dabfc
  408d0c:	and    eax,0x3e06cb86
  408d11:	(bad)  
  408d12:	fild   QWORD PTR [esi-0x41]
  408d15:	ss adc eax,0xe059ade1
  408d1b:	mov    ds:0x425cde09,eax
  408d20:	adc    al,0xa
  408d22:	fsubr  QWORD PTR [ebp-0x7c0e42c3]
  408d28:	and    dl,BYTE PTR [eax-0x1e]
  408d2b:	mov    bl,ah
  408d2d:	mov    dh,0x9f
  408d2f:	lods   eax,DWORD PTR ds:[esi]
  408d30:	retf   
  408d31:	ret    0x5dee
  408d34:	sub    esi,DWORD PTR [esi]
  408d36:	push   cs
  408d37:	xchg   edx,eax
  408d38:	(bad)  
  408d3a:	cmp    eax,0xcb57464b
  408d3f:	jo     0x408d06
  408d41:	mov    ebx,DWORD PTR [ebx]
  408d43:	cdq    
  408d44:	jb     0x408d8a
  408d46:	jmp    0x2d2987c
  408d4b:	std    
  408d4c:	cmp    eax,0xe74ecae2
  408d51:	push   esi
  408d52:	jmp    0x408d05
  408d54:	pop    ebx
  408d55:	dec    ebp
  408d56:	daa    
  408d57:	rcr    DWORD PTR [esi],cl
  408d59:	data16 jbe 0x408dd9
  408d5c:	push   edx
  408d5d:	(bad)
  408d60:	lods   al,BYTE PTR ds:[esi]
  408d61:	lods   eax,DWORD PTR ds:[esi]
  408d62:	ss leave 
  408d64:	fwait
  408d65:	xchg   ebp,eax
  408d66:	cmc    
  408d67:	stos   DWORD PTR es:[edi],eax
  408d68:	sub    al,0x37
  408d6a:	cmovle edx,DWORD PTR [edx-0x6571e455]
  408d71:	inc    esi
  408d72:	nop
  408d73:	pop    es
  408d74:	push   0xffffffc9
  408d76:	sbb    ecx,esi
  408d78:	cmp    BYTE PTR [edi-0x20cf8a96],0xb9
  408d7f:	sub    ebp,edx
  408d81:	push   cs
  408d82:	das    
  408d83:	popa   
  408d84:	pop    edi
  408d85:	pop    ebx
  408d86:	mov    es,esp
  408d88:	mov    dh,0xef
  408d8a:	das    
  408d8b:	lds    edi,FWORD PTR [ebx-0x6e31676c]
  408d91:	inc    cx
  408d93:	icebp  
  408d94:	(bad)
  408d98:	ja     0x408dc5
  408d9a:	(bad)  
  408d9b:	inc    eax
  408d9c:	aaa    
  408d9d:	in     al,0x67
  408d9f:	push   es
  408da0:	mov    cl,0x23
  408da2:	sub    bl,BYTE PTR [ecx-0xf]
  408da5:	or     DWORD PTR [ebx-0x7f2cb7ef],ebx
  408dab:	push   ds
  408dac:	gs stc 
  408dae:	gs test eax,0x6624f36
  408db4:	int    0xce
  408db6:	ret    
  408db7:	mov    edx,0x6f23eaf
  408dbc:	mov    eax,0x3eebfeff
  408dc1:	in     eax,dx
  408dc2:	adc    eax,0xc72fd3f
  408dc7:	push   cs
  408dc8:	xor    DWORD PTR [ebp*2+0x1be6804e],esp
  408dcf:	lods   eax,DWORD PTR ds:[esi]
  408dd0:	repnz dec ebx
  408dd2:	jb     0x408e25
  408dd4:	adc    ebp,DWORD PTR [eax]
  408dd6:	retf   
  408dd7:	hlt    
  408dd8:	cmp    cl,cl
  408dda:	div    al
  408ddc:	and    BYTE PTR [edi-0x5c],0x67
  408de0:	cmc    
  408de1:	xor    DWORD PTR [esi+0x3b4dd47e],edi
  408de7:	retf   
  408de8:	cmp    cl,BYTE PTR [edx]
  408dea:	cs cwde 
  408dec:	and    eax,0xe14d0193
  408df1:	lods   al,BYTE PTR ds:[esi]
  408df2:	jo     0x408e41
  408df4:	aas    
  408df5:	sbb    BYTE PTR [ebx],dl
  408df7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408df8:	inc    esi
  408df9:	xchg   BYTE PTR [ebp+0x44],bl
  408dfc:	xor    BYTE PTR [ebx-0x7f0c029d],cl
  408e02:	retf   
  408e03:	xchg   ebx,eax
  408e04:	js     0x408e61
  408e06:	mov    cl,0x17
  408e08:	popa   
  408e09:	inc    ebp
  408e0a:	je     0x408e1d
  408e0c:	jge    0x408e0e
  408e0e:	test   al,0x13
  408e10:	(bad)  
  408e11:	xor    dl,BYTE PTR [esi]
  408e13:	push   es
  408e14:	inc    edi
  408e15:	mov    ebp,0xbfaca054
  408e1a:	jno    0x408dc3
  408e1c:	sub    DWORD PTR [esi],ecx
  408e1e:	cmp    BYTE PTR gs:[esi-0x2a],al
  408e22:	cwde   
  408e23:	xchg   ebx,eax
  408e24:	in     al,0x32
  408e26:	sbb    DWORD PTR [eax-0x1c],esp
  408e29:	lahf   
  408e2a:	lods   eax,DWORD PTR ds:[esi]
  408e2b:	call   0xc2374a91
  408e30:	sahf   
  408e31:	and    al,0xf
  408e33:	and    DWORD PTR [ebp+0x66],0xc99706a4
  408e3a:	aad    0x2d
  408e3c:	or     al,0xb0
  408e3e:	push   ds
  408e3f:	repz sub DWORD PTR ds:0x88e82be9,eax
  408e46:	fs in  eax,dx
  408e48:	jno    0x408e75
  408e4a:	jp     0x408e2a
  408e4c:	shl    BYTE PTR [ecx+0x9],cl
  408e4f:	and    dl,cl
  408e51:	ins    DWORD PTR es:[edi],dx
  408e52:	(bad)  
  408e53:	cld    
  408e54:	mov    ebp,0xcb35c91
  408e59:	dec    esp
  408e5a:	push   ebx
  408e5b:	sar    DWORD PTR [ecx-0xf23c793],1
  408e61:	div    BYTE PTR [edx+0x4cb0ba8b]
  408e67:	fstp   QWORD PTR [eax+0x7b1cd4e9]
  408e6d:	jmp    0x408e19
  408e6f:	pop    ebp
  408e70:	dec    ecx
  408e71:	mov    esp,0xc9bae738
  408e76:	lods   al,BYTE PTR ds:[esi]
  408e77:	mov    esi,0x6fc2db43
  408e7c:	sti    
  408e7d:	lahf   
  408e7e:	lods   eax,DWORD PTR ds:[esi]
  408e7f:	(bad)  
  408e80:	gs jg  0x408e24
  408e83:	popf   
  408e84:	daa    
  408e85:	je     0x408e8f
  408e87:	sub    al,BYTE PTR [edi-0x48]
  408e8a:	ja     0x408ef1
  408e8c:	jo     0x408e69
  408e8e:	(bad)  [ebx+ebx*1]
  408e91:	ret    
  408e92:	repz inc ebx
  408e94:	sbb    eax,0x28f1e1f9
  408e99:	in     eax,dx
  408e9a:	inc    edi
  408e9b:	sbb    al,0xde
  408e9d:	cmp    al,cl
  408e9f:	adc    eax,0xa143964b
  408ea4:	adc    dl,BYTE PTR [ebp+edx*8+0x3a]
  408ea8:	add    eax,0xecdbba00
  408ead:	cmp    ah,BYTE PTR [ecx-0x4]
  408eb0:	dec    edi
  408eb1:	inc    ebx
  408eb2:	lds    ebx,FWORD PTR [edx+edi*4-0x7]
  408eb6:	pop    ss
  408eb7:	inc    edi
  408eb8:	sahf   
  408eb9:	aam    0xed
  408ebb:	xor    BYTE PTR [esi],bh
  408ebd:	cmp    al,0xf1
  408ebf:	ins    BYTE PTR es:[edi],dx
  408ec0:	xor    DWORD PTR [ecx-0x2d],0xffffffe3
  408ec4:	mov    dh,0xbf
  408ec6:	aam    0x8c
  408ec8:	sbb    cl,cl
  408eca:	(bad)  
  408ecc:	sbb    al,0x77
  408ece:	call   0xc9ca:0xba6d90b8
  408ed5:	sub    eax,0x98727b42
  408eda:	retf   0xade
  408edd:	ss and eax,0x593e4097
  408ee3:	pop    eax
  408ee4:	push   0x95152822
  408ee9:	enter  0x58b5,0x78
  408eed:	fcmovbe st,st(0)
  408eef:	icebp  
  408ef0:	sbb    BYTE PTR [edi],ah
  408ef2:	lea    ebx,[ebp+0x18]
  408ef5:	xor    eax,0xb5bd5341
  408efa:	dec    ecx
  408efb:	out    dx,al
  408efc:	enter  0xa383,0xd4
  408f00:	test   DWORD PTR [eax+eiz*1],ecx
  408f03:	add    eax,0x185fc203
  408f08:	inc    esi
  408f09:	push   es
  408f0a:	(bad)  
  408f0b:	jae    0x408f57
  408f0d:	scas   eax,DWORD PTR es:[edi]
  408f0e:	push   esp
  408f0f:	sbb    al,0x4a
  408f11:	js     0x408f77
  408f13:	icebp  
  408f14:	mov    ds:0xf29c8fc4,eax
  408f19:	(bad)  
  408f1a:	and    ebp,edi
  408f1c:	repnz fs retf 0x6d4e
  408f21:	mov    al,BYTE PTR [esp+ecx*4-0x17]
  408f25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f26:	mov    bh,0x80
  408f28:	pop    DWORD PTR [ebx]
  408f2a:	lods   al,BYTE PTR ds:[esi]
  408f2b:	push   0x9d4b3d28
  408f30:	cmp    edx,ebp
  408f32:	dec    esp
  408f33:	and    eax,0xdbaee772
  408f38:	fimul  WORD PTR [edi+0x720311ed]
  408f3e:	or     al,0x51
  408f40:	xchg   esi,eax
  408f41:	and    eax,0x9cacb276
  408f47:	xchg   edi,eax
  408f48:	in     eax,dx
  408f49:	mov    ch,0xd7
  408f4b:	xchg   ebp,eax
  408f4c:	xor    edx,DWORD PTR [eax+0x4b14c35f]
  408f52:	retf   0x66bb
  408f55:	loopne 0x408f03
  408f57:	jmp    0x71b71965
  408f5c:	and    DWORD PTR [edx+ebp*4-0x2b],ebx
  408f60:	jmp    DWORD PTR [ebp+0x26]
  408f63:	fild   DWORD PTR [esi]
  408f65:	int3   
  408f66:	frstor [ecx-0x7de603cc]
  408f6c:	dec    esp
  408f6d:	jne    0x408f07
  408f6f:	xor    eax,0x2e0d2a82
  408f74:	mov    edx,0x4e916d05
  408f79:	sub    ecx,ecx
  408f7b:	fild   QWORD PTR [esi]
  408f7d:	pop    eax
  408f7e:	add    DWORD PTR [eax+0x533db70e],esp
  408f84:	sbb    esp,DWORD PTR [ecx-0x6c963567]
  408f8a:	push   ss
  408f8b:	xor    BYTE PTR [edx],bl
  408f8d:	jbe    0x408f99
  408f8f:	and    al,dl
  408f91:	div    BYTE PTR [ebx*2+0x55676131]
  408f98:	in     eax,dx
  408f99:	xor    edx,DWORD PTR [ebp-0x7e29a754]
  408f9f:	rcr    BYTE PTR [edi+ecx*4+0x50],1
  408fa3:	stos   DWORD PTR es:[edi],eax
  408fa4:	in     al,0x18
  408fa6:	hlt    
  408fa7:	js     0x408fee
  408fa9:	push   ds
  408faa:	lock sub eax,0x17af353b
  408fb0:	lods   eax,DWORD PTR ds:[esi]
  408fb1:	mov    eax,fs:0x75b8ac81
  408fb7:	and    BYTE PTR [ebx-0x5360976f],cl
  408fbd:	repz (bad) 
  408fbf:	dec    esi
  408fc0:	and    ch,al
  408fc2:	inc    eax
  408fc3:	or     BYTE PTR es:[ecx-0x72],dl
  408fc7:	fmul   st,st(1)
  408fc9:	sbb    DWORD PTR [ebx+0x41],esi
  408fcc:	sahf   
  408fcd:	sub    BYTE PTR [ebp+0x1ce315af],bh
  408fd3:	ret    0x8c72
  408fd6:	aas    
  408fd7:	add    esi,DWORD PTR ds:0x1aaddbbb
  408fdd:	ror    DWORD PTR ds:0xb968f52e,1
  408fe3:	imul   ecx,DWORD PTR [esi],0x6e723054
  408fe9:	sub    cl,BYTE PTR [edx+ecx*1]
  408fec:	call   0x4faaf2c9
  408ff1:	(bad)  [edx-0x4b240e31]
  408ff7:	je     0x408ff1
  408ff9:	cmp    eax,0x535c0276
  408ffe:	inc    edi
  408fff:	call   0xf655:0xa0b22a9f
  409006:	push   cs
  409007:	mov    DWORD PTR ds:0xd514ef29,edi
  40900d:	adc    edx,ebx
  40900f:	dec    ecx
  409010:	dec    ecx
  409011:	add    DWORD PTR [esi-0x1e],esi
  409014:	gs mov ebx,0x649473f4
  40901a:	loope  0x409098
  40901c:	sbb    al,0x38
  40901e:	cmc    
  40901f:	test   eax,0xe82a9eae
  409024:	ror    BYTE PTR [esi-0xd],1
  409027:	push   esp
  409028:	jle    0x409093
  40902a:	add    eax,0xb26c9747
  40902f:	out    0x5,al
  409031:	mov    eax,0xb526b0cf
  409036:	call   0xfe8ce119
  40903b:	ins    DWORD PTR es:[edi],dx
  40903c:	mov    ebp,0x5c389be7
  409041:	icebp  
  409042:	aad    0xc8
  409044:	ror    DWORD PTR [esi-0x1049944e],1
  40904a:	clc    
  40904b:	repz mov dl,0x67
  40904e:	addr16 lahf 
  409050:	daa    
  409051:	add    al,0x8f
  409053:	pop    esi
  409054:	jo     0x40907b
  409056:	lock mov edi,0xab9efcc0
  40905c:	jl     0x40901a
  40905e:	jns    0x4090bf
  409060:	sub    al,0xa0
  409062:	adc    al,0xff
  409064:	sbb    BYTE PTR [edi+0x33],ah
  409067:	aas    
  409068:	aas    
  409069:	pop    edi
  40906a:	adc    al,0x7c
  40906c:	sub    BYTE PTR [ecx+0x74],0xa0
  409070:	add    al,0xca
  409072:	rep stos BYTE PTR es:[edi],al
  409074:	jae    0x40905d
  409076:	mov    DWORD PTR [edx],0xbbb0ac45
  40907c:	adc    BYTE PTR [edx],ch
  40907e:	cmp    DWORD PTR [ecx],edi
  409080:	cmp    eax,0x745ff0d1
  409085:	es out 0x2f,eax
  409088:	imul   ebp,DWORD PTR [edi-0x625aba47],0x7e
  40908f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409090:	or     dh,BYTE PTR [edx-0x5]
  409093:	test   al,0xeb
  409095:	mov    edi,0xe4e9179a
  40909a:	mov    WORD PTR [edi],?
  40909c:	lock mov dl,0xfa
  40909f:	or     cl,BYTE PTR [ecx+edi*8+0x4fabdb7]
  4090a6:	mov    esi,0x5b8bf2f7
  4090ab:	inc    ebp
  4090ac:	addr16 (bad) 
  4090ae:	dec    DWORD PTR [eax-0x7a]
  4090b1:	js     0x40904c
  4090b3:	ret    0x2ab2
  4090b6:	mov    ?,eax
  4090b8:	mov    edi,0xaa214bb9
  4090bd:	sbb    esp,DWORD PTR [esi+0x5e]
  4090c0:	adc    BYTE PTR [ebx+ebx*4+0x48e0172c],dh
  4090c7:	mov    ds:0xd62cc531,eax
  4090cc:	push   cs
  4090cd:	popf   
  4090ce:	jno    0x409127
  4090d0:	fmulp  st(3),st
  4090d2:	or     cl,al
  4090d4:	(bad)  
  4090d5:	push   ebx
  4090d6:	pop    es
  4090d7:	call   DWORD PTR [edi]
  4090d9:	arpl   WORD PTR [eax],ax
  4090db:	hlt    
  4090dc:	xor    BYTE PTR [ebx-0x29],al
  4090df:	or     al,0x35
  4090e1:	push   edi
  4090e2:	dec    edx
  4090e3:	jecxz  0x409117
  4090e5:	pushf  
  4090e6:	imul   ecx,DWORD PTR [eax],0x707b4d14
  4090ec:	adc    BYTE PTR [ebx],cl
  4090ee:	push   eax
  4090ef:	mov    bl,0x3a
  4090f1:	in     eax,dx
  4090f2:	mov    BYTE PTR [edi-0x70ee3838],ch
  4090f8:	dec    esi
  4090f9:	pop    es
  4090fa:	(bad)  
  4090fb:	(bad)  
  4090fc:	mov    eax,0x9b9b8aec
  409101:	cwde   
  409102:	jbe    0x40915d
  409104:	or     al,bl
  409106:	out    0x43,al
  409108:	ss out 0x90,al
  40910b:	dec    ecx
  40910c:	xchg   esi,eax
  40910d:	dec    ebx
  40910e:	mov    ebx,DWORD PTR [esi]
  409110:	pop    esi
  409111:	les    edi,FWORD PTR [ebx+0x54ee32de]
  409117:	enter  0x7a57,0xce
  40911b:	out    0x79,eax
  40911d:	dec    edx
  40911e:	mov    DWORD PTR [ebx+ebx*4+0x6d5dd861],ebp
  409125:	aad    0xd1
  409127:	cmp    eax,0x27832748
  40912c:	mov    al,BYTE PTR [ecx+0x263a5575]
  409132:	sub    eax,0xe6b09e29
  409137:	jge    0x40910c
  409139:	adc    al,0x40
  40913b:	(bad)  
  40913d:	pop    ebx
  40913e:	and    BYTE PTR ds:0x194756ed,0xa2
  409145:	cld    
  409146:	push   esp
  409147:	mov    eax,ds:0x45a53f9f
  40914c:	test   DWORD PTR [edi-0x61],esp
  40914f:	mov    ecx,0xe755d02f
  409154:	ins    BYTE PTR es:[edi],dx
  409155:	enter  0x8157,0xdc
  409159:	and    edi,DWORD PTR [ebx+edi*8+0x58347d1]
  409160:	mov    ds:0x73cbc133,eax
  409165:	outs   dx,BYTE PTR ds:[esi]
  409166:	push   eax
  409167:	scas   eax,DWORD PTR es:[edi]
  409168:	xor    cl,BYTE PTR [ecx+0x60540942]
  40916e:	cmp    eax,0x7eca60f8
  409173:	mov    dh,0xf0
  409175:	ds and eax,0xe681d8f2
  40917b:	popf   
  40917c:	push   0x28a852b
  409181:	xchg   edi,eax
  409182:	lods   al,BYTE PTR ds:[esi]
  409183:	pop    esi
  409184:	pop    es
  409185:	mov    eax,0x151535b9
  40918a:	and    eax,0x32793c43
  40918f:	mov    edi,0xe5ca5cd9
  409194:	shl    DWORD PTR [ebx+0x29],0x47
  409198:	enter  0xc40f,0x7e
  40919c:	mov    dh,BYTE PTR [ebx+0x77a1bbe]
  4091a2:	add    edi,ebx
  4091a4:	sbb    esi,DWORD PTR ds:0x9bed7ef2
  4091aa:	es shr ecx,1
  4091ad:	jnp    0x4091ef
  4091af:	mov    esp,0xc66e8315
  4091b4:	sbb    BYTE PTR [edx-0x22],0x13
  4091b8:	jp     0x40913a
  4091ba:	fcomp  QWORD PTR [ecx+0x21]
  4091bd:	push   edi
  4091be:	cmp    ch,BYTE PTR [esi]
  4091c0:	push   es
  4091c1:	cmp    ebx,DWORD PTR ds:0x684af84b
  4091c7:	mov    al,0xb4
  4091c9:	fnstsw WORD PTR [edx+ebx*4]
  4091cc:	sbb    edi,DWORD PTR [esi+0x73]
  4091cf:	adc    eax,0xc4fe96e5
  4091d4:	lock inc eax
  4091d6:	jmp    0x40923c
  4091d8:	fmul   QWORD PTR [edi+0x6f]
  4091db:	sbb    ecx,DWORD PTR [edi]
  4091dd:	jl     0x4091d4
  4091df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4091e0:	sbb    eax,0xe30aecea
  4091e5:	dec    edi
  4091e6:	mov    dl,0x3d
  4091e8:	in     eax,dx
  4091e9:	push   edi
  4091ea:	es dec edx
  4091ec:	repnz fistp QWORD PTR [esi-0x31]
  4091f0:	lods   eax,DWORD PTR ds:[esi]
  4091f1:	dec    esi
  4091f2:	sub    BYTE PTR ds:0x8a782501,ch
  4091f8:	jno    0x40918c
  4091fa:	or     al,BYTE PTR [esi+0xe049d1c]
  409200:	dec    ebx
  409201:	push   ebp
  409202:	in     al,0x4
  409204:	(bad)  [eax+ecx*1]
  409207:	out    0x98,eax
  409209:	repz pop ds
  40920b:	int3   
  40920c:	outs   dx,DWORD PTR ds:[esi]
  40920d:	pop    ecx
  40920e:	ret    
  40920f:	loopne 0x409287
  409211:	mov    eax,0x4512f7a5
  409216:	ror    ebp,0x8f
  409219:	iret   
  40921a:	or     eax,0xe85146ad
  40921f:	cmp    eax,0xaba435e
  409224:	cmp    dl,BYTE PTR [edi-0x4]
  409227:	mov    ebx,0x224fe30f
  40922c:	push   ebp
  40922d:	pop    ecx
  40922e:	xchg   edx,eax
  40922f:	js     0x409213
  409231:	imul   edx,DWORD PTR [edx+eiz*4],0xee28f836
  409238:	call   0x5a5b6725
  40923d:	mov    dl,0x42
  40923f:	xchg   esp,eax
  409240:	dec    ebx
  409241:	mov    al,ds:0xf48635e8
  409246:	and    ebp,ecx
  409248:	(bad)  
  409249:	retf   
  40924a:	loop   0x409291
  40924c:	or     BYTE PTR [ebp-0x5c],0xb5
  409250:	cmp    eax,DWORD PTR [edx]
  409252:	data16 loope 0x4091fc
  409255:	mov    ds:0x438fdfb9,eax
  40925a:	sub    ecx,DWORD PTR [ebx]
  40925c:	clc    
  40925d:	push   es
  40925e:	adc    eax,0xb876a8fd
  409263:	dec    esp
  409264:	popa   
  409265:	lds    edi,FWORD PTR [ebx]
  409267:	inc    esp
  409268:	or     BYTE PTR [edx-0x1],cl
  40926b:	sti    
  40926c:	mov    al,ds:0xeb37724c
  409271:	es adc dh,0xc7
  409275:	push   esi
  409276:	xor    al,0xe4
  409278:	lahf   
  409279:	ret    0xf53b
  40927c:	mov    ds:0x23519a6d,al
  409281:	not    esi
  409283:	pop    eax
  409284:	sar    BYTE PTR [esi+esi*1],1
  409287:	int    0xe8
  409289:	inc    edi
  40928a:	dec    esp
  40928b:	jmp    FWORD PTR [edi]
  40928d:	mov    dh,0x2e
  40928f:	push   cs
  409290:	jno    0x409219
  409292:	dec    BYTE PTR [ebp-0x3a7f673e]
  409298:	loop   0x4092a1
  40929a:	cld    
  40929b:	ds in  eax,0x88
  40929e:	loop   0x4092cf
  4092a0:	imul   ecx,ebp,0x1f77054c
  4092a6:	aad    0xcb
  4092a8:	out    0x30,al
  4092aa:	or     ah,BYTE PTR [ebx]
  4092ac:	adc    edx,eax
  4092ae:	stc    
  4092af:	dec    ecx
  4092b0:	cmc    
  4092b1:	je     0x409332
  4092b3:	les    ebx,FWORD PTR [ecx]
  4092b5:	jecxz  0x40923f
  4092b7:	retf   
  4092b8:	push   es
  4092b9:	xor    ah,BYTE PTR [ecx-0x38]
  4092bc:	int    0xbe
  4092be:	pop    edx
  4092bf:	mov    cl,0x79
  4092c1:	das    
  4092c2:	retf   
  4092c3:	out    dx,al
  4092c4:	dec    eax
  4092c5:	pop    edi
  4092c6:	fnstenv [edx+0x6060ea72]
  4092cc:	jl     0x409258
  4092ce:	mov    ah,0x8b
  4092d0:	repz mov edx,0x8ae06329
  4092d6:	cmc    
  4092d7:	push   ebx
  4092d8:	jae    0x4092ec
  4092da:	fidivr DWORD PTR [eax-0x6c1497f]
  4092e0:	dec    ecx
  4092e1:	inc    edx
  4092e2:	es je  0x4092b4
  4092e5:	mov    esi,0x5a6582c0
  4092ea:	in     eax,dx
  4092eb:	add    bl,BYTE PTR [edx+eiz*2]
  4092ee:	scas   eax,DWORD PTR es:[edi]
  4092ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4092f0:	je     0x409291
  4092f2:	stos   DWORD PTR es:[edi],eax
  4092f3:	jecxz  0x4092ff
  4092f5:	adc    al,al
  4092f7:	rol    BYTE PTR [edi+0x75],0xea
  4092fb:	add    al,0x29
  4092fd:	inc    eax
  4092fe:	inc    ebx
  4092ff:	push   edx
  409300:	or     BYTE PTR [esi],dl
  409302:	xchg   ecx,eax
  409303:	and    cl,0x96
  409306:	mov    esi,fs
  409308:	sbb    DWORD PTR [edx],eax
  40930a:	push   ebx
  40930b:	push   eax
  40930c:	daa    
  40930d:	sahf   
  40930e:	mov    ds:0xd82d884d,al
  409313:	ja     0x409306
  409315:	dec    esi
  409316:	inc    eax
  409317:	push   ecx
  409318:	mov    cs,WORD PTR [edx+0x31b59a81]
  40931e:	mov    ebp,0x8dcf5065
  409323:	add    dl,BYTE PTR [ebx+0x16cc294f]
  409329:	pushf  
  40932a:	pop    ebx
  40932b:	push   DWORD PTR [eax+ebp*4-0x6e]
  40932f:	cli    
  409330:	add    eax,0xd7585750
  409335:	jle    0x4092dd
  409337:	out    dx,al
  409338:	adc    DWORD PTR [esi+edi*8-0x491d4f82],ecx
  40933f:	cwde   
  409340:	add    DWORD PTR [eax-0x11],eax
  409343:	push   edi
  409344:	xor    al,0xd2
  409346:	jae    0x40932f
  409348:	or     cl,BYTE PTR [ebx-0x52b9ee65]
  40934e:	push   0xffffff93
  409350:	int3   
  409351:	call   FWORD PTR [edx+edx*1]
  409354:	mov    ch,0x1d
  409356:	xchg   edx,eax
  409357:	out    dx,al
  409358:	shl    BYTE PTR [ecx-0x6e4adb36],cl
  40935e:	cmp    eax,0x51c50b3a
  409363:	popf   
  409364:	imul   ecx,DWORD PTR [edx-0x489518bc],0x32c536bb
  40936e:	mov    esp,DWORD PTR [ebx+0xd1fe047]
  409374:	push   0x5efe79ef
  409379:	inc    edx
  40937a:	lahf   
  40937b:	mov    ds:0x42025df7,al
  409380:	test   DWORD PTR [esi],ebp
  409382:	out    dx,eax
  409383:	cs jl  0x409365
  409386:	xchg   ecx,eax
  409387:	daa    
  409388:	cdq    
  409389:	xchg   esp,eax
  40938a:	addr16 call 0x6b4606c1
  409390:	cld    
  409391:	mov    ah,0xf2
  409393:	(bad)  
  409394:	loopne 0x409327
  409396:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409397:	(bad)  
  409398:	daa    
  409399:	and    DWORD PTR [edi-0x6d54cae9],esi
  40939f:	or     esi,esp
  4093a1:	mov    edx,0xf5dce3cf
  4093a6:	rcl    BYTE PTR [ebp-0x40],0x58
  4093aa:	popf   
  4093ab:	fisub  DWORD PTR [edi+0x653c9a4a]
  4093b1:	outs   dx,BYTE PTR ds:[esi]
  4093b2:	xor    eax,0x6c2c5661
  4093b7:	int    0x1e
  4093b9:	xchg   ebp,eax
  4093ba:	inc    edi
  4093bb:	xor    ebp,DWORD PTR [eax]
  4093bd:	cwde   
  4093be:	xchg   esi,eax
  4093bf:	arpl   WORD PTR [eax-0x56f475b1],dx
  4093c5:	fsub   QWORD PTR [esi+edi*2]
  4093c8:	loopne 0x4093a2
  4093ca:	cli    
  4093cb:	jne    0x4093fa
  4093cd:	cmp    al,BYTE PTR [edx-0x39]
  4093d0:	adc    al,0x34
  4093d2:	push   ecx
  4093d3:	je     0x4093f6
  4093d5:	mov    esp,0x75d92362
  4093da:	ins    DWORD PTR es:[edi],dx
  4093db:	stc    
  4093dc:	mov    ecx,0x8ee7b0b5
  4093e1:	clc    
  4093e2:	push   esp
  4093e3:	data16 icebp 
  4093e5:	in     eax,dx
  4093e6:	outs   dx,DWORD PTR ds:[esi]
  4093e7:	dec    edi
  4093e8:	das    
  4093e9:	fmul   DWORD PTR [ebx+0x1b]
  4093ec:	cmp    bh,BYTE PTR [esi]
  4093ee:	jmp    0x40938c
  4093f0:	push   esp
  4093f1:	mov    dh,BYTE PTR [edx]
  4093f3:	jne    0x4093b4
  4093f5:	xor    BYTE PTR [edx],dl
  4093f7:	xchg   BYTE PTR [edx],cl
  4093f9:	xchg   ebx,eax
  4093fa:	xor    al,0x84
  4093fc:	mov    ch,0xd0
  4093fe:	jbe    0x4093f7
  409400:	fwait
  409401:	pop    es
  409402:	scas   eax,DWORD PTR es:[edi]
  409403:	or     bh,BYTE PTR [ebp-0x6d]
  409406:	mov    fs,WORD PTR [edx+0xd]
  409409:	mov    DWORD PTR [ebx+0x6f],0xbf0e02bc
  409410:	in     eax,dx
  409411:	ins    DWORD PTR es:[edi],dx
  409412:	push   edx
  409413:	ins    BYTE PTR es:[edi],dx
  409414:	xchg   edi,eax
  409415:	jnp    0x4093bb
  409417:	sbb    edx,esi
  409419:	pop    ebp
  40941a:	bnd jae 0x40941a
  40941d:	lods   al,BYTE PTR ds:[esi]
  40941e:	sub    ch,dl
  409420:	sbb    esp,ebx
  409422:	test   al,0xab
  409424:	push   ss
  409425:	push   eax
  409426:	jne    0x409452
  409428:	push   0x4de8c298
  40942d:	(bad)  
  40942e:	aam    0x2e
  409430:	mov    ebp,DWORD PTR [ecx-0x2]
  409433:	popf   
  409434:	jp     0x409424
  409436:	leave  
  409437:	xor    cl,BYTE PTR [eax]
  409439:	fnstenv [edx]
  40943b:	mov    al,ds:0x239cd34d
  409440:	mov    dl,0x82
  409442:	aam    0xd2
  409444:	pop    eax
  409445:	jle    0x409428
  409447:	adc    DWORD PTR [ebp-0x50],esi
  40944a:	les    ecx,FWORD PTR [edi+0x23]
  40944d:	aam    0x21
  40944f:	mov    al,ds:0xa9cfa3ad
  409454:	(bad)  
  409456:	in     al,0x8b
  409458:	fcom   st(7)
  40945a:	dec    ebx
  40945b:	in     eax,0x46
  40945d:	mov    bl,ah
  40945f:	sbb    BYTE PTR [eax+0x29],dh
  409462:	pop    ds
  409463:	dec    ebp
  409464:	test   eax,0xdda73af0
  409469:	in     al,dx
  40946a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40946b:	xor    ebp,DWORD PTR ds:0xffa60e8a
  409471:	icebp  
  409472:	(bad)  
  409473:	xchg   edx,eax
  409474:	fdivr  QWORD PTR [eax]
  409476:	push   cs
  409477:	lea    esp,[esi+0x2a]
  40947a:	mov    ebx,0xe54d8e4
  40947f:	mov    bh,0xe9
  409481:	lea    edi,[edi+0x70]
  409484:	retf   0x2162
  409487:	or     DWORD PTR [ebx+0x25c6a176],edi
  40948d:	mov    ds:0xd2d77fee,al
  409492:	jmp    0x4094e9
  409494:	dec    esi
  409495:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409496:	adc    dh,BYTE PTR ds:0xcd6465d0
  40949c:	sar    DWORD PTR [ecx+0x51d3e2c4],cl
  4094a2:	das    
  4094a3:	(bad)  
  4094a4:	jmp    0xa111:0x47b57437
  4094ab:	push   ebp
  4094ac:	or     al,0x1
  4094ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4094af:	retw   
  4094b1:	dec    edx
  4094b2:	sahf   
  4094b3:	sub    al,0x3f
  4094b5:	mov    ecx,0x72b92da2
  4094ba:	sbb    esp,ebp
  4094bc:	pop    edx
  4094bd:	mov    dh,0xf9
  4094bf:	pop    ecx
  4094c0:	je     0x409533
  4094c2:	loope  0x409468
  4094c4:	(bad)
  4094c7:	and    eax,0x413eeb93
  4094cc:	mov    DWORD PTR [ebx-0x1a],eax
  4094cf:	outs   dx,BYTE PTR ds:[esi]
  4094d0:	jb     0x409491
  4094d2:	mov    DWORD PTR [eax],ecx
  4094d4:	addr16 mov ah,0x50
  4094d7:	test   BYTE PTR [eax+0x5f],bh
  4094da:	jne    0x409463
  4094dc:	mul    eax
  4094de:	int3   
  4094df:	jae    0x409523
  4094e1:	jl     0x409519
  4094e3:	mov    esi,gs
  4094e5:	inc    edx
  4094e6:	das    
  4094e7:	pop    ds
  4094e8:	icebp  
  4094e9:	xchg   edi,eax
  4094ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4094eb:	add    ebp,esi
  4094ed:	xchg   ecx,eax
  4094ee:	cmp    al,0xe9
  4094f0:	iret   
  4094f1:	jns    0x4094fe
  4094f3:	mov    bl,0x9d
  4094f5:	jb     0x409486
  4094f7:	cdq    
  4094f8:	icebp  
  4094f9:	stos   BYTE PTR es:[edi],al
  4094fa:	out    dx,al
  4094fb:	ja     0x4094f0
  4094fd:	xchg   ebx,eax
  4094fe:	aas    
  4094ff:	push   ss
  409500:	cld    
  409501:	data16 test al,0x5f
  409504:	bound  esp,QWORD PTR [esi+0x4abfa0d3]
  40950a:	in     al,dx
  40950b:	xchg   ebx,eax
  40950c:	xor    ebp,DWORD PTR [edi]
  40950e:	sbb    al,0xc2
  409510:	out    0x9b,al
  409512:	outs   dx,DWORD PTR ds:[esi]
  409513:	adc    eax,0x594c6055
  409518:	leave  
  409519:	dec    edi
  40951a:	lahf   
  40951b:	imul   edx,DWORD PTR [ecx-0x70],0xcdda1ab6
  409522:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409523:	ds cs mov cl,0xda
  409527:	mov    dl,0x78
  409529:	inc    ebx
  40952a:	rol    DWORD PTR [ebp-0x28b8987a],1
  409530:	mov    DWORD PTR [eax-0x60],ebx
  409533:	(bad)  
  409534:	xchg   edx,eax
  409535:	jne    0x409547
  409537:	push   edx
  409538:	out    0xb7,al
  40953a:	sahf   
  40953b:	mov    bl,0xdc
  40953d:	xor    esi,ebp
  40953f:	cli    
  409540:	call   FWORD PTR [ecx+0x419f811]
  409546:	bound  esi,QWORD PTR gs:[eax-0x5aa5b633]
  40954d:	or     DWORD PTR [esi],esi
  40954f:	lock pop esp
  409551:	scas   eax,DWORD PTR es:[edi]
  409552:	sbb    DWORD PTR [ebp-0x3e4164aa],esi
  409558:	(bad)  
  409559:	fnstenv [ebx-0x7d]
  40955c:	adc    eax,0x293a95d9
  409561:	mov    ebp,DWORD PTR [ebx+0x7496a1df]
  409567:	fwait
  409568:	pop    ss
  409569:	pop    edx
  40956a:	in     eax,0xb6
  40956c:	(bad)  
  40956d:	mov    dh,0xee
  40956f:	outs   dx,BYTE PTR ds:[esi]
  409570:	push   edi
  409571:	lods   eax,DWORD PTR ds:[esi]
  409572:	mov    bl,0x60
  409574:	iret   
  409575:	ret    0x9bfc
  409578:	push   edi
  409579:	sub    al,0x64
  40957b:	arpl   WORD PTR [ebp+0x3f],si
  40957e:	push   ebx
  40957f:	je     0x4095a6
  409581:	rcr    BYTE PTR [edi],0x2e
  409584:	push   ecx
  409585:	cmp    BYTE PTR [ecx+0x4f],ah
  409588:	cli    
  409589:	or     DWORD PTR [eax+eiz*2],ebx
  40958c:	ficomp WORD PTR [eax]
  40958e:	or     BYTE PTR [edi+0x20699fcb],ah
  409594:	mov    BYTE PTR [edi],ah
  409596:	xchg   DWORD PTR [eax+0x16],edi
  409599:	xlat   BYTE PTR ds:[ebx]
  40959a:	sbb    DWORD PTR [eax-0x8],ebp
  40959d:	or     esi,DWORD PTR ds:0x9a3786a2
  4095a3:	out    dx,eax
  4095a4:	pop    ebp
  4095a5:	sbb    eax,0xe6c326ab
  4095aa:	int3   
  4095ab:	or     eax,0xea4c6df2
  4095b0:	mov    edi,0xe1c67b74
  4095b5:	shr    ch,1
  4095b7:	ds mov bh,0x94
  4095ba:	repz aas 
  4095bc:	addr16 das 
  4095be:	repz push eax
  4095c0:	push   edi
  4095c1:	ss xchg ebx,eax
  4095c3:	sbb    al,0x76
  4095c5:	jmp    0x409581
  4095c7:	push   cs
  4095c8:	sub    eax,0x73095ff3
  4095cd:	xchg   esp,eax
  4095ce:	dec    ebx
  4095cf:	aas    
  4095d0:	xlat   BYTE PTR ds:[ebx]
  4095d1:	sar    BYTE PTR [edx+0x48002716],0x73
  4095d8:	and    cl,0x7c
  4095db:	cwde   
  4095dc:	xchg   edx,eax
  4095dd:	fmul   DWORD PTR [edi]
  4095df:	dec    esp
  4095e0:	imul   edx,DWORD PTR [edi+0x76bd2f08],0x15bbbc1f
  4095ea:	les    ebx,FWORD PTR [ebx]
  4095ec:	sub    edx,ebx
  4095ee:	rcl    BYTE PTR [eax+ecx*1+0x76450da6],0xa7
  4095f6:	js     0x409579
  4095f8:	loope  0x409582
  4095fa:	add    ah,ah
  4095fc:	sbb    bl,BYTE PTR [ecx+0x273f8fc3]
  409602:	xor    bh,BYTE PTR [esi+0xd568b8b]
  409608:	les    eax,FWORD PTR [esi-0x3a]
  40960b:	inc    esp
  40960c:	jp     0x40967e
  40960e:	ficom  DWORD PTR [ecx]
  409610:	dec    ebp
  409611:	jns    0x4095c9
  409613:	call   0xd3012142
  409618:	adc    BYTE PTR [ebp+0x1f51bdf5],dl
  40961e:	sub    al,0x4d
  409620:	aad    0x6f
  409622:	or     al,0xee
  409624:	sbb    eax,0x271f9d8a
  409629:	sti    
  40962a:	stos   DWORD PTR es:[edi],eax
  40962b:	push   cs
  40962c:	ja     0x40960b
  40962e:	lds    ebp,FWORD PTR [ebx+0x1d]
  409631:	lock cli 
  409633:	daa    
  409634:	popf   
  409635:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409636:	(bad)  
  409637:	sahf   
  409638:	lock aaa 
  40963a:	stos   DWORD PTR es:[edi],eax
  40963b:	push   esi
  40963c:	pop    ds
  40963d:	xlat   BYTE PTR ds:[ebx]
  40963e:	test   al,0xea
  409640:	mov    ch,0x77
  409642:	jbe    0x40967f
  409644:	divps  xmm7,xmm3
  409647:	aam    0xc5
  409649:	retf   
  40964a:	jae    0x40960c
  40964c:	xor    eax,0xdae6c95
  409651:	pop    es
  409652:	push   edx
  409653:	and    al,0xce
  409655:	xor    edi,DWORD PTR ds:0x8618f4f7
  40965b:	iret   
  40965c:	mov    ch,0x4
  40965e:	sar    DWORD PTR [edx+0x5c7da5c],cl
  409664:	xor    eax,0xdab5e6af
  409669:	into   
  40966a:	add    ebx,ecx
  40966c:	and    eax,0xed1fcc4a
  409671:	int    0xf1
  409673:	adc    eax,0x96aa5f32
  409678:	jecxz  0x409650
  40967a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40967b:	jb     0x4096e7
  40967d:	addps  xmm3,XMMWORD PTR [ebx-0x6f]
  409681:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409682:	adc    eax,0xe4ceff6d
  409687:	aaa    
  409688:	popf   
  409689:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40968a:	add    DWORD PTR [ecx],esi
  40968c:	push   ecx
  40968d:	test   BYTE PTR [edx+0x271d04af],dh
  409693:	xlat   BYTE PTR ds:[ebx]
  409694:	mov    al,ds:0xa6487524
  409699:	mov    dl,0x2
  40969b:	push   ss
  40969c:	sbb    DWORD PTR [edx+eax*2+0x26],edx
  4096a0:	mov    dl,0xa
  4096a2:	cmp    esp,edx
  4096a4:	mov    ebp,esp
  4096a6:	mov    edx,0xfaee2437
  4096ab:	out    0x13,eax
  4096ad:	push   cs
  4096ae:	out    0xc0,al
  4096b0:	cwde   
  4096b1:	mov    al,ds:0x6b1b12cd
  4096b6:	jns    0x4096d4
  4096b8:	popa   
  4096b9:	into   
  4096ba:	push   0xc15a0ddb
  4096bf:	mov    DWORD PTR [edx-0x7d826eb0],ecx
  4096c5:	fimul  DWORD PTR [ebp-0xf]
  4096c8:	mul    BYTE PTR [ebx]
  4096ca:	in     al,0x18
  4096cc:	das    
  4096cd:	mov    eax,0x6f423434
  4096d2:	add    cl,dh
  4096d4:	test   eax,edi
  4096d6:	inc    ebx
  4096d7:	mov    cl,0x3e
  4096d9:	jnp    0x409723
  4096db:	sub    esi,ebp
  4096dd:	ret    0xbed9
  4096e0:	int    0x82
  4096e2:	or     BYTE PTR [ecx-0x44],ah
  4096e5:	cmc    
  4096e6:	sbb    BYTE PTR ds:0xb80c47f7,cl
  4096ec:	in     eax,dx
  4096ed:	pop    ecx
  4096ee:	sti    
  4096ef:	sbb    ch,al
  4096f1:	dec    ecx
  4096f2:	inc    esi
  4096f3:	(bad)  
  4096f5:	(bad)  
  4096f6:	ror    BYTE PTR [ebx],0x62
  4096f9:	fistp  QWORD PTR [ecx+0x3a]
  4096fc:	mov    esp,0xf854201c
  409701:	ret    0xd3de
  409704:	cs enter 0x2ade,0x2c
  409709:	out    dx,eax
  40970a:	sbb    DWORD PTR [ebx],ebx
  40970c:	lods   al,BYTE PTR ds:[esi]
  40970d:	mov    ebp,0xd38ea51
  409712:	mov    al,ds:0xcccd94cf
  409717:	inc    eax
  409718:	mov    esp,0xca6c38e0
  40971d:	pop    esi
  40971e:	xchg   BYTE PTR [ecx],dh
  409720:	push   esi
  409721:	jb     0x409783
  409723:	jle    0x40979a
  409725:	pop    ebx
  409726:	or     ebx,DWORD PTR [esi]
  409728:	outs   dx,DWORD PTR ds:[esi]
  409729:	jne    0x40970d
  40972b:	hlt    
  40972c:	xchg   edx,eax
  40972d:	mov    ch,dl
  40972f:	popa   
  409730:	or     eax,0x204a7301
  409735:	push   ebp
  409736:	pop    eax
  409737:	fnstenv [ecx+0x426be33f]
  40973d:	inc    eax
  40973e:	mov    DWORD PTR [edx],ebp
  409740:	test   eax,0xbcee5131
  409745:	jp     0x40976e
  409747:	jb     0x409782
  409749:	mov    ecx,0x59bae6e1
  40974e:	pop    ebp
  40974f:	mov    DWORD PTR [ecx+0x7a3ee5d3],ebp
  409755:	xor    eax,0xaf3e2a8d
  40975a:	xor    esi,edi
  40975c:	ret    
  40975d:	loop   0x40975c
  40975f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409760:	js     0x4097ac
  409762:	mov    ecx,0x8398fdb8
  409767:	jo     0x40975c
  409769:	cmp    DWORD PTR ds:0xee5b0396,esi
  40976f:	sbb    eax,DWORD PTR [eax+esi*4]
  409772:	mov    ebx,0x6c7bb4cc
  409777:	retf   
  409778:	(bad)  
  409779:	pop    ebx
  40977a:	loope  0x409759
  40977c:	xor    DWORD PTR [ecx+0x75],esp
  40977f:	psllq  mm7,QWORD PTR [edx]
  409782:	xchg   DWORD PTR [ecx+0x774f2186],ecx
  409788:	and    al,0x10
  40978a:	in     al,0x43
  40978c:	leave  
  40978d:	xor    BYTE PTR [ecx-0x48890c79],bl
  409793:	shl    BYTE PTR [edx+0x2c],cl
  409796:	clc    
  409797:	jno    0x4097e3
  409799:	inc    ebp
  40979a:	mov    edi,0xfe5e3385
  40979f:	cli    
  4097a0:	xor    al,0xbf
  4097a2:	jnp    0x409793
  4097a4:	adc    bl,dl
  4097a6:	or     al,0x45
  4097a8:	and    ebx,DWORD PTR [ebp+0x64ea2cc2]
  4097ae:	cdq    
  4097af:	fadd   st(1),st
  4097b1:	mov    dh,0x9f
  4097b3:	ret    0x5f72
  4097b6:	les    esp,FWORD PTR [edi+0x2e171f29]
  4097bc:	pushf  
  4097bd:	or     al,BYTE PTR [ecx]
  4097bf:	dec    eax
  4097c0:	pushf  
  4097c1:	push   ebp
  4097c2:	retf   
  4097c3:	int    0xeb
  4097c5:	push   ebx
  4097c6:	xor    al,0xf7
  4097c8:	add    al,0x5e
  4097ca:	mov    ds:0xe798405,eax
  4097cf:	hlt    
  4097d0:	int3   
  4097d1:	hlt    
  4097d2:	add    DWORD PTR [ebp-0x25],esi
  4097d5:	sbb    eax,0xbf627d38
  4097da:	mov    al,ds:0x36ccfb
  4097df:	and    dl,dl
  4097e1:	jne    0x40979a
  4097e3:	mov    ds:0x79b0a2d6,al
  4097e8:	mov    ch,0xcb
  4097ea:	cld    
  4097eb:	fucom  st(1)
  4097ed:	dec    ebx
  4097ee:	fwait
  4097ef:	push   edx
  4097f0:	les    ebx,FWORD PTR [ebp-0x3b]
  4097f3:	mov    ds:0x6c3f06bc,eax
  4097f8:	dec    edi
  4097f9:	push   cs
  4097fa:	cli    
  4097fb:	xor    DWORD PTR [eax+0x30],esp
  4097fe:	sbb    eax,ebx
  409800:	xor    BYTE PTR [ecx],0x4
  409803:	mov    dh,0x30
  409805:	enter  0x39c3,0x9a
  409809:	sub    esp,DWORD PTR [eax]
  40980b:	sub    ch,BYTE PTR [eax-0x2c]
  40980e:	xlat   BYTE PTR ds:[ebx]
  40980f:	je     0x40983f
  409811:	jne    0x409795
  409813:	repnz mov eax,ds:0x7ecfc32c
  409819:	(bad)  
  40981a:	mov    ebp,DWORD PTR [ebx]
  40981c:	inc    esp
  40981d:	(bad)  [edx+0x16]
  409820:	xor    BYTE PTR [edx-0xe],bh
  409823:	test   BYTE PTR [edi-0x8],bh
  409826:	pop    ebx
  409827:	pextrw ebx,(bad),0xc5
  409829:	sbb    eax,0x1a819b6c
  40982e:	xchg   ecx,eax
  40982f:	push   0xd89bf464
  409834:	inc    esp
  409835:	xor    al,0x80
  409837:	jp     0x409891
  409839:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40983a:	int3   
  40983b:	jns    0x409808
  40983d:	jmp    0x231b8d5c
  409842:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409843:	minps  xmm0,XMMWORD PTR [ebp+0x58df2fd6]
  40984a:	cwde   
  40984b:	jle    0x40987d
  40984d:	cmp    BYTE PTR [ecx+ebp*4+0x7c442fa0],bl
  409854:	outs   dx,BYTE PTR ds:[esi]
  409855:	dec    ebp
  409856:	cmp    edx,DWORD PTR [ecx]
  409858:	mov    cl,bl
  40985a:	enter  0x25af,0xb8
  40985e:	cs test eax,0x60dc35f0
  409864:	cld    
  409865:	sahf   
  409866:	(bad)  
  409867:	dec    ebx
  409868:	sub    al,0x6b
  40986a:	add    al,0x14
  40986c:	mov    bl,0xd8
  40986e:	and    BYTE PTR [ebx*8+0x609e8d4],al
  409875:	inc    esi
  409876:	cmp    DWORD PTR [edi+eax*1],edx
  409879:	ss xchg esi,eax
  40987b:	or     al,0xff
  40987d:	test   eax,0xa984f38f
  409882:	cs cmp eax,0xaed53d84
  409888:	scas   eax,DWORD PTR es:[edi]
  409889:	inc    ebx
  40988a:	jl     0x409830
  40988c:	dec    eax
  40988d:	xor    eax,0x8855db5c
  409892:	jb     0x409835
  409894:	and    al,0xe8
  409896:	ficomp DWORD PTR [ebx]
  409898:	jae    0x409915
  40989a:	push   ebp
  40989b:	push   ecx
  40989c:	aaa    
  40989d:	in     al,0x45
  40989f:	xor    esi,DWORD PTR [ebx]
  4098a1:	pop    ss
  4098a2:	add    ah,ah
  4098a4:	inc    esi
  4098a5:	inc    ecx
  4098a6:	mov    bh,0xd
  4098a8:	dec    edx
  4098a9:	sbb    eax,0x202fbd89
  4098ae:	dec    ecx
  4098af:	add    esp,DWORD PTR [eax-0x6bcd8ca8]
  4098b5:	scas   eax,DWORD PTR es:[edi]
  4098b6:	shr    BYTE PTR [esi],0x79
  4098b9:	cmp    BYTE PTR [edx-0x34d86bb6],0x93
  4098c0:	mov    cl,0xee
  4098c2:	jg     0x40988e
  4098c4:	dec    ebx
  4098c5:	mov    cl,0x4e
  4098c7:	ret    
  4098c8:	push   0xffffff99
  4098ca:	sub    eax,0x651e6b9f
  4098cf:	outs   dx,DWORD PTR ds:[esi]
  4098d0:	scas   eax,DWORD PTR es:[edi]
  4098d1:	pusha  
  4098d2:	jl     0x40987a
  4098d4:	sar    esi,1
  4098d6:	mov    BYTE PTR [eax+0x54],0x94
  4098da:	mov    esi,0xf9292479
  4098df:	or     BYTE PTR [eax+esi*1],dl
  4098e2:	ins    BYTE PTR es:[edi],dx
  4098e3:	jb     0x4098e4
  4098e5:	sbb    DWORD PTR [ebp+0x7d],esi
  4098e8:	xchg   ecx,eax
  4098e9:	enter  0xadf3,0xc7
  4098ed:	pop    DWORD PTR ds:0xcb5bce2a
  4098f3:	icebp  
  4098f4:	xor    cl,BYTE PTR [ebp-0x3ceae4ba]
  4098fa:	mov    dh,0x8c
  4098fc:	test   DWORD PTR [ebx],ebx
  4098fe:	outs   dx,BYTE PTR ds:[esi]
  4098ff:	fs mov ecx,0xd88f9c84
  409905:	shl    ah,0xa3
  409908:	jmp    0x46e685ca
  40990d:	rcl    BYTE PTR [edx+ebx*4],1
  409910:	neg    BYTE PTR [ebp+0x19]
  409913:	loope  0x4098e1
  409915:	xchg   edx,eax
  409916:	xchg   ebx,eax
  409917:	adc    al,0xad
  409919:	lds    eax,FWORD PTR [ebx-0x14]
  40991c:	(bad)  
  40991e:	or     ah,BYTE PTR [ecx+esi*8-0x1a]
  409922:	inc    eax
  409923:	shr    DWORD PTR [eax-0x6ff7b412],0xf1
  40992a:	scas   eax,DWORD PTR es:[edi]
  40992b:	aam    0x31
  40992d:	jno    0x409903
  40992f:	fcom   QWORD PTR [ecx+edx*2]
  409932:	push   edi
  409933:	jl     0x4098d6
  409935:	mov    al,ds:0xa9869ec5
  40993a:	ins    DWORD PTR es:[edi],dx
  40993b:	and    eax,0x9bc7f010
  409940:	inc    esp
  409941:	(bad)  
  409942:	mov    eax,ds:0xb1345611
  409947:	clc    
  409948:	adc    BYTE PTR [edi],0xec
  40994b:	and    BYTE PTR [edi-0x1],ch
  40994e:	syscall 
  409950:	(bad)  
  409951:	mov    edi,0x551e3160
  409956:	inc    esi
  409957:	sbb    edx,esp
  409959:	pop    esp
  40995a:	cmp    eax,ebx
  40995c:	lds    esi,FWORD PTR [ebp-0xbbfa8fd]
  409962:	popa   
  409963:	mov    esp,0x607baa6b
  409968:	sub    eax,0x6aecfa7e
  40996d:	add    al,0xa6
  40996f:	jge    0x409902
  409971:	idiv   DWORD PTR [ecx-0x6c985c5e]
  409977:	inc    ebp
  409978:	repz arpl WORD PTR [esp+edi*8],dx
  40997c:	xlat   BYTE PTR ds:[ebx]
  40997d:	fistp  DWORD PTR [edx+0xa7da433]
  409983:	mov    dl,0x47
  409985:	fwait
  409986:	and    eax,0xddf27c2c
  40998b:	xchg   edx,eax
  40998c:	cmpxchg esp,eax
  40998f:	mov    dh,0x42
  409991:	hlt    
  409992:	and    eax,0xc605879f
  409997:	pop    ebx
  409998:	jns    0x40993b
  40999a:	mov    dl,0x0
  40999c:	inc    ecx
  40999d:	imul   edx,DWORD PTR [edi+edx*1-0x5968ab34],0xffffffc0
  4099a5:	call   0x2595:0x5a6bdcdc
  4099ac:	xchg   ecx,eax
  4099ad:	les    ebp,FWORD PTR [ebx+0x78]
  4099b0:	aaa    
  4099b1:	mov    bl,BYTE PTR [ebx]
  4099b3:	xor    BYTE PTR [edx-0x2],bh
  4099b6:	out    dx,eax
  4099b7:	fimul  DWORD PTR [eax+0x36894aaf]
  4099bd:	jns    0x40997d
  4099bf:	fwait
  4099c0:	rcr    BYTE PTR [edx],0x26
  4099c3:	mov    bh,0x80
  4099c5:	mov    ch,0x97
  4099c7:	jle    0x4099db
  4099c9:	mov    ecx,0x6a769735
  4099ce:	mov    dh,0xe
  4099d0:	ja     0x409963
  4099d2:	sahf   
  4099d3:	xor    bh,bl
  4099d5:	inc    eax
  4099d6:	adc    dh,BYTE PTR [edi+eiz*8-0x2d4642e6]
  4099dd:	dec    eax
  4099de:	push   ss
  4099df:	pusha  
  4099e0:	outs   dx,BYTE PTR ds:[esi]
  4099e1:	push   ebp
  4099e2:	aas    
  4099e3:	and    bh,BYTE PTR [eax+ecx*4+0x16a53006]
  4099ea:	jmp    0x409a2e
  4099ec:	mov    ah,0x7f
  4099ee:	int3   
  4099ef:	lea    eax,[ebx-0x63]
  4099f2:	jmp    0x930f7299
  4099f7:	mov    ebp,?
  4099f9:	pop    esi
  4099fa:	jmp    0xff8a1ad7
  4099ff:	fbstp  TBYTE PTR [edi+0x21]
  409a02:	add    ecx,eax
  409a04:	sub    bl,BYTE PTR [edi-0x17]
  409a07:	xor    BYTE PTR [edi-0x5bb86564],ch
  409a0d:	sub    ebp,DWORD PTR [esi-0x2a6174b5]
  409a13:	xor    al,0x3f
  409a15:	sub    BYTE PTR [ebp+0x3942c036],ch
  409a1b:	sbb    dl,bh
  409a1d:	not    BYTE PTR [ebx+0x15]
  409a20:	or     eax,0xffffffb2
  409a23:	mov    cl,0xd
  409a25:	xchg   ecx,eax
  409a26:	out    dx,eax
  409a27:	jecxz  0x409a41
  409a29:	inc    esi
  409a2a:	sub    eax,0xcb7d3846
  409a2f:	inc    ebp
  409a30:	pushf  
  409a31:	jns    0x4099e7
  409a33:	ins    BYTE PTR es:[edi],dx
  409a34:	out    0x90,eax
  409a36:	or     esi,DWORD PTR [esi+ecx*8+0x69622319]
  409a3d:	(bad)  
  409a3e:	sbb    eax,0x4d9d4273
  409a43:	aad    0x88
  409a45:	cs repnz sub eax,0xafbed35b
  409a4d:	mov    ebp,0x567e27a9
  409a52:	push   ds
  409a53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a54:	bound  eax,QWORD PTR [ebp*1-0x739d9182]
  409a5b:	mov    BYTE PTR [ebx],cl
  409a5d:	and    al,BYTE PTR [edi-0x5e]
  409a60:	int    0x89
  409a62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a63:	or     eax,0x169dbd24
  409a68:	(bad)  
  409a69:	or     BYTE PTR [ebx-0x5e],cl
  409a6c:	xchg   edx,eax
  409a6d:	mov    ds:0xc495f609,eax
  409a72:	adc    DWORD PTR [eax+0x7092a0d9],edi
  409a78:	aam    0x29
  409a7a:	push   esi
  409a7b:	pop    esp
  409a7c:	mov    dh,BYTE PTR [ebx-0x3e]
  409a7f:	and    DWORD PTR [edx-0x7c],ecx
  409a82:	sub    esp,DWORD PTR [eax]
  409a84:	push   ebx
  409a85:	xlat   BYTE PTR ds:[ebx]
  409a86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a87:	loope  0x409a50
  409a89:	pop    esp
  409a8a:	push   eax
  409a8b:	jge    0x409a3d
  409a8d:	ins    BYTE PTR es:[edi],dx
  409a8e:	push   0x92f27620
  409a93:	jne    0x409a45
  409a95:	xchg   edx,eax
  409a96:	in     eax,dx
  409a97:	aam    0x7f
  409a99:	pop    ss
  409a9a:	mov    DWORD PTR [esi],esp
  409a9c:	loope  0x409a93
  409a9e:	leave  
  409a9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409aa0:	rol    BYTE PTR [edi],cl
  409aa2:	lods   eax,DWORD PTR ds:[esi]
  409aa3:	or     bh,BYTE PTR es:[edx-0x36]
  409aa7:	pusha  
  409aa8:	mov    dl,BYTE PTR [ebx+0x6909fc0e]
  409aae:	inc    esi
  409aaf:	dec    edx
  409ab0:	rcr    DWORD PTR [edi+0x67b91acf],1
  409ab6:	lods   eax,DWORD PTR ds:[esi]
  409ab7:	xor    BYTE PTR [esi+0x53173aa3],0x4a
  409abe:	mov    dh,BYTE PTR [ecx-0x7d]
  409ac1:	stos   BYTE PTR es:[edi],al
  409ac2:	imul   edi,DWORD PTR [esi-0x1e932eed],0x37
  409ac9:	idiv   ch
  409acb:	and    eax,0xaa8bbaff
  409ad0:	out    0x5e,al
  409ad2:	sbb    eax,0xca8ae3a3
  409ad7:	xchg   ecx,eax
  409ad8:	pop    ss
  409ad9:	loop   0x409abe
  409adb:	xor    al,0xc3
  409add:	cli    
  409ade:	ss add bh,bh
  409ae1:	clc    
  409ae2:	xor    cl,dh
  409ae4:	push   ecx
  409ae5:	jge    0x409af5
  409ae7:	jnp    0x409adf
  409ae9:	ss addr16 cs stc 
  409aed:	inc    edx
  409aee:	sahf   
  409aef:	and    cl,BYTE PTR [eax]
  409af1:	mov    eax,ss
  409af3:	jmp    0xb339a4a6
  409af8:	jp     0x409ab1
  409afa:	jmp    0x76ee:0x478a885b
  409b01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b02:	push   edi
  409b03:	xor    DWORD PTR [edi],0x9088acc4
  409b09:	xor    al,0xa9
  409b0b:	jmp    0x9824:0x94c6f978
  409b12:	leave  
  409b13:	and    DWORD PTR ds:0xdc13dfd4,edi
  409b19:	sbb    al,0xbe
  409b1b:	in     eax,0x33
  409b1d:	(bad)  
  409b1e:	leave  
  409b1f:	(bad)  
  409b20:	push   DWORD PTR [ecx]
  409b22:	dec    ebx
  409b23:	push   edi
  409b24:	arpl   WORD PTR [ebp+0x7de59ac3],ax
  409b2a:	xchg   edi,eax
  409b2b:	push   eax
  409b2c:	jae    0x409b8e
  409b2e:	pop    ecx
  409b2f:	push   ebp
  409b30:	sub    DWORD PTR [edx+0x16],0xffffffdf
  409b34:	(bad)  
  409b35:	dec    ebp
  409b36:	add    al,BYTE PTR [ebp+0x8a52a24]
  409b3c:	in     eax,0x97
  409b3e:	lods   al,BYTE PTR ds:[esi]
  409b3f:	add    dl,ch
  409b41:	in     al,dx
  409b42:	cmovns edi,DWORD PTR [ebx]
  409b45:	sbb    edi,ebx
  409b47:	mov    DWORD PTR [ebx],edi
  409b49:	fwait
  409b4a:	mov    cl,0x99
  409b4c:	rcl    DWORD PTR [ecx-0x5623bc1],cl
  409b52:	test   BYTE PTR [ebp+0x43],ah
  409b55:	mov    al,BYTE PTR [edi-0x5420233b]
  409b5b:	inc    eax
  409b5c:	fimul  WORD PTR [eax-0x30]
  409b5f:	test   DWORD PTR [ecx-0x6f],0xc5b52cba
  409b66:	pop    edx
  409b67:	xlat   BYTE PTR ds:[ebx]
  409b68:	jbe    0x409be7
  409b6a:	int3   
  409b6b:	cmp    BYTE PTR [edi+esi*1],ch
  409b6e:	xchg   cl,ah
  409b70:	outs   dx,DWORD PTR cs:[esi]
  409b72:	shr    edx,0x13
  409b75:	pop    ecx
  409b76:	xchg   edi,eax
  409b77:	jmp    0xf05:0xf2fc7197
  409b7e:	sbb    BYTE PTR [esi-0x39a65a32],cl
  409b84:	je     0x409bff
  409b86:	cwde   
  409b87:	mov    dh,0xb0
  409b89:	sub    eax,0x989ed4e4
  409b8e:	ins    BYTE PTR es:[edi],dx
  409b8f:	xor    ebp,esp
  409b91:	repz fild DWORD PTR [ecx]
  409b94:	or     dl,BYTE PTR [ebx-0x5203145f]
  409b9a:	add    esi,esp
  409b9c:	sar    DWORD PTR [ebp-0x36bc7886],1
  409ba2:	or     al,0x77
  409ba4:	dec    esi
  409ba5:	mov    dl,0xa7
  409ba7:	fistp  QWORD PTR [edi-0x45]
  409baa:	gs dec esi
  409bac:	icebp  
  409bad:	scas   al,BYTE PTR es:[edi]
  409bae:	dec    esi
  409baf:	dec    ecx
  409bb0:	push   edi
  409bb1:	mov    al,ds:0x859a263d
  409bb6:	fild   DWORD PTR [ebx-0x51]
  409bb9:	cmc    
  409bba:	(bad)  
  409bbb:	jp     0x409b43
  409bbd:	jmp    0xf0797a8
  409bc2:	rcr    cl,cl
  409bc4:	xlat   BYTE PTR ds:[ebx]
  409bc5:	pop    esp
  409bc6:	ret    
  409bc7:	add    ebx,DWORD PTR [eax+0x16]
  409bca:	dec    edi
  409bcb:	popf   
  409bcc:	sub    BYTE PTR [ebx],0x8c
  409bcf:	repnz dec ebp
  409bd2:	pop    ecx
  409bd3:	pop    es
  409bd4:	inc    ebp
  409bd5:	push   es
  409bd6:	xchg   ebp,eax
  409bd7:	std    
  409bd8:	stc    
  409bd9:	imul   esi,DWORD PTR [edi+edi*4-0xe],0x71b165e5
  409be1:	mov    ecx,0x5d28361c
  409be6:	retf   0xd1c7
  409be9:	cmc    
  409bea:	or     al,BYTE PTR [eax]
  409bec:	jnp    0x409b7c
  409bee:	lock adc al,0xef
  409bf1:	imul   esp,DWORD PTR [ecx+eax*2],0xffffff9e
  409bf5:	lods   eax,DWORD PTR ds:[esi]
  409bf6:	mov    bl,0x5a
  409bf8:	mov    esi,0x7edd0a4e
  409bfd:	scas   al,BYTE PTR es:[edi]
  409bfe:	pop    ecx
  409bff:	sbb    edx,DWORD PTR [edx]
  409c01:	inc    ecx
  409c02:	mov    dl,0x32
  409c04:	jp     0x409bb5
  409c06:	in     al,0xe2
  409c08:	pusha  
  409c09:	push   esi
  409c0a:	bsf    eax,edx
  409c0d:	cmp    al,0x9d
  409c0f:	sbb    eax,0x3b5e63fa
  409c14:	mov    ch,0x4c
  409c16:	je     0x409beb
  409c18:	push   eax
  409c19:	popa   
  409c1a:	int3   
  409c1b:	test   al,0xc9
  409c1d:	pop    es
  409c1e:	inc    esi
  409c1f:	sbb    al,0x34
  409c21:	sbb    ecx,DWORD PTR [ecx]
  409c23:	mov    ds:0x7bcb1f24,al
  409c28:	scas   al,BYTE PTR es:[edi]
  409c29:	xor    al,0xb4
  409c2b:	inc    ebx
  409c2c:	outs   dx,DWORD PTR ds:[esi]
  409c2d:	xor    DWORD PTR [esi],esi
  409c2f:	loope  0x409c00
  409c31:	ret    
  409c32:	gs hlt 
  409c34:	call   0x3c37:0x5a228c41
  409c3b:	sub    edi,DWORD PTR [edi-0x14593dbc]
  409c41:	mov    esi,0x943fc00e
  409c46:	mov    esi,0x56c38ce
  409c4b:	hlt    
  409c4c:	mov    dl,0xa3
  409c4e:	pusha  
  409c4f:	cs pusha 
  409c51:	sub    bh,BYTE PTR [eax-0x17]
  409c54:	stc    
  409c55:	pop    ds
  409c56:	cld    
  409c57:	(bad)  
  409c58:	daa    
  409c59:	sahf   
  409c5a:	xchg   BYTE PTR [edi-0x49],ah
  409c5d:	jne    0x409c95
  409c5f:	mov    edi,DWORD PTR [ecx-0x12]
  409c62:	stos   BYTE PTR es:[edi],al
  409c63:	call   0xe500df47
  409c68:	aas    
  409c69:	dec    ebx
  409c6a:	push   0xb3cfc690
  409c6f:	and    bl,BYTE PTR [esi-0x378ce4ad]
  409c75:	aam    0xca
  409c77:	sub    BYTE PTR [ebx],ah
  409c79:	xor    ecx,DWORD PTR [ecx-0x7e7152bf]
  409c7f:	cwde   
  409c80:	pop    ecx
  409c81:	(bad)  
  409c82:	nop
  409c83:	repz out dx,al
  409c85:	data16 in al,0x50
  409c88:	mov    eax,0x6cfc7d24
  409c8d:	and    eax,0xf1d61d13
  409c92:	call   DWORD PTR cs:[ebp+0x611fc6f2]
  409c99:	lds    ebx,FWORD PTR [eax+0x68e3359e]
  409c9f:	mov    eax,0x5db56776
  409ca4:	fst    QWORD PTR [eax+0x23add3f5]
  409caa:	fbstp  TBYTE PTR [esi+0x3743c421]
  409cb0:	push   ds
  409cb1:	stos   DWORD PTR es:[edi],eax
  409cb2:	sti    
  409cb3:	sbb    ah,ch
  409cb5:	lods   al,BYTE PTR ds:[esi]
  409cb6:	lea    edx,[eax-0xf53b61e]
  409cbc:	xchg   ebp,eax
  409cbd:	lahf   
  409cbe:	retf   
  409cbf:	imul   ebx,DWORD PTR [edx-0x3a],0x55048f07
  409cc6:	sti    
  409cc7:	mov    ?,edi
  409cc9:	and    eax,0xf35a7785
  409cce:	xor    al,0xad
  409cd0:	mov    ch,0x56
  409cd2:	leave  
  409cd3:	mov    bl,0x47
  409cd5:	inc    edx
  409cd6:	and    al,0xa5
  409cd8:	(bad)  
  409cd9:	and    BYTE PTR [edx],dl
  409cdb:	mov    dl,0x46
  409cdd:	lea    sp,[esp+edi*2]
  409ce1:	cmc    
  409ce2:	xor    ch,BYTE PTR [edi+0x5b]
  409ce5:	loope  0x409d1d
  409ce7:	fstp   QWORD PTR [edx+0x6a]
  409cea:	or     DWORD PTR [edx+0x16],esi
  409ced:	test   cl,dh
  409cef:	aam    0x18
  409cf1:	cmp    eax,0x9c656077
  409cf6:	(bad)  
  409cf7:	or     esi,DWORD PTR [ecx-0x20c2b270]
  409cfd:	mov    ch,0xf1
  409cff:	sbb    esp,DWORD PTR [esi-0x5c8f41e0]
  409d05:	xchg   DWORD PTR [ecx-0x7ef3dbc5],ebx
  409d0b:	retf   0x7322
  409d0e:	jl     0x409d5d
  409d10:	outs   dx,DWORD PTR ds:[esi]
  409d11:	mov    bh,0xbd
  409d13:	xlat   BYTE PTR ds:[ebx]
  409d14:	pop    ecx
  409d15:	test   al,0x5b
  409d17:	inc    DWORD PTR [esi-0x55]
  409d1a:	jg     0x409c9c
  409d1c:	in     eax,dx
  409d1d:	test   BYTE PTR [ebp+ecx*1-0x1cd8b043],cl
  409d24:	jmp    0xc5ec:0x459c87d8
  409d2b:	bound  ebx,QWORD PTR [ebx+ebp*1]
  409d2e:	xchg   ebp,eax
  409d2f:	repz or BYTE PTR [ebx+esi*1+0x56dbde06],cl
  409d37:	dec    eax
  409d38:	out    dx,eax
  409d39:	(bad)  
  409d3a:	jecxz  0x409d14
  409d3c:	cs jo  0x409ccc
  409d3f:	ja     0x409d65
  409d41:	mov    WORD PTR [edi+0x7b8c89ba],fs
  409d47:	fwait
  409d48:	xor    esi,ebp
  409d4a:	xchg   edx,eax
  409d4b:	ror    BYTE PTR [ebp+edi*2-0x7db9b556],0x3d
  409d53:	(bad)  
  409d54:	aaa    
  409d55:	push   ebp
  409d56:	jb     0x409da0
  409d58:	add    eax,0x61002485
  409d5d:	imul   eax,DWORD PTR [eax+0x545de47a],0x5e
  409d64:	xchg   ebp,eax
  409d65:	into   
  409d66:	scas   eax,DWORD PTR es:[edi]
  409d67:	cld    
  409d68:	cmp    DWORD PTR [ebx-0x72],eax
  409d6b:	pop    edi
  409d6c:	push   ss
  409d6d:	dec    BYTE PTR [edi+0x1bb1a693]
  409d73:	xbegin 0xdc2dcc8b
  409d79:	popf   
  409d7a:	sub    ch,dh
  409d7c:	adc    esp,DWORD PTR [eax+0x21641249]
  409d82:	and    edx,DWORD PTR [ebp+0x594e47f4]
  409d88:	pop    es
  409d89:	dec    edi
  409d8a:	sbb    DWORD PTR [ebp+0x7fa43299],edx
  409d90:	popa   
  409d91:	ds jne 0x409d3a
  409d94:	scas   al,BYTE PTR es:[edi]
  409d95:	cmp    al,0xf2
  409d97:	or     eax,eax
  409d99:	adc    ecx,DWORD PTR [edi+edi*4]
  409d9c:	dec    ebp
  409d9d:	fwait
  409d9e:	sub    eax,0x10504d7
  409da3:	rcr    esp,cl
  409da5:	lds    esp,FWORD PTR [edx+eax*4-0x5b]
  409da9:	inc    edx
  409daa:	mov    esp,0x717b9e8c
  409daf:	or     BYTE PTR ds:0xa6edda0,cl
  409db5:	and    dl,BYTE PTR [ebx+0x5a]
  409db8:	cmp    BYTE PTR [edx-0x48],bh
  409dbb:	or     BYTE PTR [edi],ch
  409dbd:	sti    
  409dbe:	sahf   
  409dbf:	clc    
  409dc0:	mov    eax,0x2f7ac5b6
  409dc5:	cli    
  409dc6:	lods   al,BYTE PTR ds:[esi]
  409dc7:	test   BYTE PTR cs:[ebx],0x31
  409dcb:	xchg   DWORD PTR ds:[ebx+0x5e],esp
  409dcf:	sti    
  409dd0:	mov    eax,0x27024796
  409dd5:	jl     0x409e48
  409dd7:	or     dh,BYTE PTR [edi+0x16]
  409dda:	xor    BYTE PTR [ebx+0x3d362b12],dh
  409de0:	nop    esp
  409de3:	and    eax,0xf221838e
  409de8:	cwde   
  409de9:	pop    ecx
  409dea:	mov    edx,0xb757d590
  409def:	je     0x409db2
  409df1:	sti    
  409df2:	aam    0x8d
  409df4:	shl    DWORD PTR [edx+edi*2+0x71f20251],cl
  409dfb:	push   ss
  409dfc:	rol    DWORD PTR [esp+edx*2-0xb],cl
  409e00:	int    0xcb
  409e02:	mov    bh,0xb9
  409e04:	arpl   si,cx
  409e06:	adc    BYTE PTR [eax-0x49],bl
  409e09:	sub    DWORD PTR [ebp-0x6c],esi
  409e0c:	enter  0x7cdf,0xbe
  409e10:	out    dx,eax
  409e11:	inc    ebx
  409e12:	sub    eax,0x33a3eccf
  409e17:	xchg   ecx,eax
  409e18:	outs   dx,BYTE PTR ds:[esi]
  409e19:	int    0x44
  409e1b:	repnz movs BYTE PTR es:[edi],BYTE PTR cs:[esi]
  409e1e:	or     al,0xdb
  409e20:	sbb    al,0x94
  409e22:	xlat   BYTE PTR ds:[ebx]
  409e23:	sbb    ebp,DWORD PTR [esi]
  409e25:	inc    esp
  409e26:	aam    0xe9
  409e28:	jecxz  0x409dd4
  409e2a:	lods   eax,DWORD PTR ds:[esi]
  409e2b:	sub    edi,DWORD PTR [ebx-0x22]
  409e2e:	or     ch,BYTE PTR [eax]
  409e30:	inc    DWORD PTR [ecx]
  409e32:	cli    
  409e33:	and    DWORD PTR [edi],esi
  409e35:	enter  0xed07,0x73
  409e39:	add    dl,BYTE PTR [edx+0x34950ee7]
  409e3f:	dec    esp
  409e40:	shl    BYTE PTR [eax],1
  409e42:	ins    DWORD PTR es:[edi],dx
  409e43:	mov    edi,DWORD PTR [edi-0x44af3cb4]
  409e49:	push   esi
  409e4a:	inc    ecx
  409e4b:	enter  0xbb1d,0x59
  409e4f:	je     0x409e04
  409e51:	gs retf 0x88ea
  409e55:	sub    ecx,DWORD PTR [esi+edi*4-0x35]
  409e59:	scas   al,BYTE PTR es:[edi]
  409e5a:	enter  0x96d9,0xa2
  409e5e:	stos   DWORD PTR es:[edi],eax
  409e5f:	es xchg edi,eax
  409e61:	sbb    esp,eax
  409e63:	leave  
  409e64:	inc    edx
  409e65:	addr16 and al,al
  409e68:	iret   
  409e69:	push   cs
  409e6a:	stc    
  409e6b:	or     DWORD PTR [eax+0xafe972b],ebx
  409e71:	jae    0x409e26
  409e73:	lds    esp,FWORD PTR [esi+0x5eff61d]
  409e79:	adc    ebp,eax
  409e7b:	inc    ebp
  409e7c:	daa    
  409e7d:	scas   eax,DWORD PTR es:[edi]
  409e7e:	int    0xd6
  409e80:	cmp    eax,0xa5619343
  409e85:	mov    edi,0xa2353708
  409e8a:	push   es
  409e8b:	push   0xde17a8b1
  409e90:	mov    ecx,ebp
  409e92:	nop
  409e93:	dec    eax
  409e94:	aaa    
  409e95:	std    
  409e96:	xor    BYTE PTR [esi],dh
  409e98:	push   edx
  409e99:	mov    ds:0xaff47edb,eax
  409e9e:	mov    ch,0x71
  409ea0:	mov    bh,0x86
  409ea2:	pop    ds
  409ea3:	aam    0x52
  409ea5:	outs   dx,BYTE PTR ds:[esi]
  409ea6:	ficom  DWORD PTR [edi-0x2f]
  409ea9:	pop    eax
  409eaa:	pop    ebp
  409eab:	xchg   esi,eax
  409eac:	xor    cl,BYTE PTR [ecx]
  409eae:	repz (bad) 
  409eb0:	lock call 0x8ec2:0xf60e5b8
  409eb8:	sti    
  409eb9:	pop    edx
  409eba:	push   ecx
  409ebb:	out    0x5,al
  409ebd:	test   DWORD PTR [eax-0x1767ffcc],ebp
  409ec3:	loopne 0x409eea
  409ec5:	add    esi,DWORD PTR [ebx+0x2b]
  409ec8:	mov    esp,0x43f23d7b
  409ecd:	retf   
  409ece:	test   al,0x56
  409ed0:	or     al,0x25
  409ed2:	sub    BYTE PTR [eax+0x40f3c069],bh
  409ed8:	retf   0xb1f7
  409edb:	fisubr DWORD PTR [ecx-0x6d50b90]
  409ee1:	push   edx
  409ee2:	daa    
  409ee3:	mov    ah,0xe0
  409ee5:	jl     0x409e81
  409ee7:	out    0x93,al
  409ee9:	mov    bl,0x6e
  409eeb:	inc    edi
  409eec:	gs mov edi,0xc82ab5e6
  409ef2:	shr    ecx,cl
  409ef4:	lds    eax,FWORD PTR [ecx-0x3d8a6f65]
  409efa:	cmp    DWORD PTR [esi],edx
  409efc:	aas    
  409efd:	fsubr  DWORD PTR [ebx+edi*1+0x16]
  409f01:	pop    edi
  409f02:	(bad)  
  409f03:	mov    esi,0x4e18198f
  409f08:	jns    0x409eb0
  409f0a:	outs   dx,DWORD PTR ds:[esi]
  409f0b:	fs xchg ebx,eax
  409f0d:	fadd   DWORD PTR ds:0x83560fee
  409f13:	inc    ebp
  409f14:	jecxz  0x409f73
  409f16:	mov    WORD PTR [edi+edx*4-0x6938b770],es
  409f1d:	ret    0x549
  409f20:	mov    al,ds:0x2bd1f00e
  409f25:	scas   eax,DWORD PTR es:[edi]
  409f26:	add    ecx,esp
  409f28:	mov    esp,0xc2f3dbe4
  409f2d:	popa   
  409f2e:	mov    esi,0x6cb00244
  409f33:	and    esp,DWORD PTR [eax]
  409f35:	mov    ss,WORD PTR [ecx+0x2d9706b3]
  409f3b:	cdq    
  409f3c:	(bad)  
  409f3d:	xchg   ecx,eax
  409f3e:	out    0x1,al
  409f40:	shl    BYTE PTR [ebx],1
  409f42:	scas   eax,DWORD PTR es:[edi]
  409f43:	and    ch,cl
  409f45:	aaa    
  409f46:	or     eax,0xbc5e50a2
  409f4b:	fwait
  409f4c:	add    esp,DWORD PTR [edi-0x4a]
  409f4f:	sbb    BYTE PTR [edi+0x17],al
  409f52:	cmp    eax,0xb5d04732
  409f57:	push   ss
  409f58:	in     al,0xbc
  409f5a:	icebp  
  409f5b:	pop    ds
  409f5c:	inc    esp
  409f5d:	push   eax
  409f5e:	lods   eax,DWORD PTR ds:[esi]
  409f5f:	das    
  409f60:	mov    ?,edi
  409f62:	leave  
  409f63:	inc    ebp
  409f64:	ret    
  409f65:	popf   
  409f66:	jg     0x409f00
  409f68:	cdq    
  409f69:	clc    
  409f6a:	aam    0x9
  409f6c:	sub    ebp,eax
  409f6e:	sbb    DWORD PTR [edi+0x591d8040],esi
  409f74:	mov    edi,0xe3eebfaa
  409f79:	in     eax,0x80
  409f7b:	rcr    ah,0xd
  409f7e:	test   al,0xa0
  409f80:	cmp    ah,BYTE PTR [edx+0x58]
  409f83:	cmp    dl,BYTE PTR [esp+ecx*8]
  409f86:	retf   0xdbe3
  409f89:	fnstenv [edx]
  409f8b:	in     eax,0x50
  409f8d:	mov    ebp,0x74eeeaa3
  409f92:	loope  0x409ffd
  409f94:	retf   
  409f95:	adc    BYTE PTR [ebx-0x3b],ch
  409f98:	sbb    edi,DWORD PTR [edx]
  409f9a:	pop    esp
  409f9b:	xor    al,0xaf
  409f9d:	jo     0x409fad
  409f9f:	mov    dl,0x2e
  409fa1:	pushf  
  409fa2:	push   edx
  409fa3:	or     al,0x0
  409fa5:	(bad)  
  409fa6:	fdivr  DWORD PTR [edx]
  409fa8:	push   edx
  409fa9:	popf   
  409faa:	mov    edx,0x369cf38b
  409faf:	and    esi,DWORD PTR [edi-0x63e1b5d7]
  409fb5:	add    al,0x61
  409fb7:	and    eax,0xe53a5b11
  409fbc:	ret    
  409fbd:	fisttp WORD PTR [esi-0x9]
  409fc0:	ffree  st(4)
  409fc2:	pop    ss
  409fc3:	fwait
  409fc4:	xor    eax,esi
  409fc6:	sbb    ecx,DWORD PTR [edi]
  409fc8:	je     0x40a034
  409fca:	jp     0x409f4e
  409fcc:	out    dx,eax
  409fcd:	mov    esp,DWORD PTR [ebp-0x51]
  409fd0:	dec    ecx
  409fd1:	sbb    eax,0xddb60872
  409fd6:	sbb    al,0xc
  409fd8:	cmc    
  409fd9:	inc    edi
  409fda:	fdivr  st,st(0)
  409fdc:	fwait
  409fdd:	cmp    al,0x94
  409fdf:	and    ch,BYTE PTR [ecx+eax*8]
  409fe2:	dec    ebx
  409fe3:	jl     0x40a03d
  409fe5:	dec    ebp
  409fe6:	scas   eax,DWORD PTR es:[edi]
  409fe7:	out    0x1e,eax
  409fe9:	and    bh,BYTE PTR [ecx+0x7ac22165]
  409fef:	mov    ds:0xacf395ad,eax
  409ff4:	jg     0x409faa
  409ff6:	xchg   esp,eax
  409ff7:	test   al,0x19
  409ff9:	push   esp
  409ffa:	pop    esp
  409ffb:	rcl    DWORD PTR [ebx+0x40],cl
  409ffe:	and    esp,DWORD PTR [edx]
  40a000:	call   0x1fef4dee
  40a005:	pop    ss
  40a006:	repnz pop ecx
  40a008:	in     al,0x4
  40a00a:	adc    bh,BYTE PTR [edx+0x7b]
  40a00d:	call   0x36e2:0xc2d8204f
  40a014:	lea    eax,[ebx+edx*8+0x6c]
  40a018:	cld    
  40a019:	test   eax,0x8b2a462e
  40a01e:	pop    ds
  40a01f:	mov    ah,BYTE PTR [esi+0x2577fb03]
  40a025:	enter  0x470e,0xbf
  40a029:	xchg   esi,eax
  40a02a:	mov    bh,0x9a
  40a02c:	fdivr  QWORD PTR [edi-0x38bd5b18]
  40a032:	inc    ecx
  40a033:	retw   0xfec0
  40a037:	inc    ebp
  40a038:	repnz ins BYTE PTR es:[edi],dx
  40a03a:	xchg   ebp,eax
  40a03b:	into   
  40a03c:	(bad)  
  40a03d:	jae    0x40a04d
  40a03f:	outs   dx,BYTE PTR ds:[esi]
  40a040:	mov    dh,0x7a
  40a042:	mov    dl,ch
  40a044:	mov    ds:0xab066b20,al
  40a049:	push   eax
  40a04a:	dec    esi
  40a04b:	xchg   BYTE PTR [ebx-0x49],bh
  40a04e:	push   ds
  40a04f:	aad    0xc7
  40a051:	out    0x13,al
  40a053:	add    dh,al
  40a055:	das    
  40a056:	cmp    dl,BYTE PTR [ecx-0x22]
  40a059:	test   eax,0x31f9ce61
  40a05e:	mov    dl,0xcc
  40a060:	(bad)  [edx+ebp*8-0x354c1ad6]
  40a067:	jecxz  0x40a00e
  40a069:	les    esi,FWORD PTR [esi-0x10]
  40a06c:	jns    0x40a06c
  40a06e:	inc    esp
  40a06f:	ss inc edx
  40a071:	addr16 daa 
  40a073:	sub    al,0x44
  40a075:	aad    0x20
  40a077:	ficom  WORD PTR [ebp+ebp*4-0x4b]
  40a07b:	jmp    0x40a03b
  40a07d:	frstor [ebx*4-0x2de68e93]
  40a084:	sub    DWORD PTR [ecx+0x20],0x4
  40a088:	xor    cl,bh
  40a08a:	jle    0x40a060
  40a08c:	xchg   esi,eax
  40a08d:	pop    eax
  40a08e:	ins    BYTE PTR es:[edi],dx
  40a08f:	scas   al,BYTE PTR es:[edi]
  40a090:	sub    al,0x30
  40a092:	aas    
  40a093:	jae    0x40a0a9
  40a095:	mov    ecx,0x5c75ed9a
  40a09a:	sub    esi,DWORD PTR [edx+0x39]
  40a09d:	in     eax,dx
  40a09e:	(bad)  
  40a09f:	mov    WORD PTR [esi-0x31053e01],fs
  40a0a5:	cld    
  40a0a6:	in     eax,0x2b
  40a0a8:	jbe    0x40a11f
  40a0aa:	popa   
  40a0ab:	mov    ecx,0x94c27912
  40a0b0:	fistp  WORD PTR ds:0x997e696d
  40a0b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a0b7:	push   ds
  40a0b8:	inc    ecx
  40a0b9:	jno    0x40a05c
  40a0bb:	stc    
  40a0bc:	mov    ch,0x50
  40a0be:	sar    DWORD PTR gs:[esi],1
  40a0c1:	mov    ebp,0x392ec78d
  40a0c6:	fstp   TBYTE PTR [edi]
  40a0c8:	inc    ecx
  40a0c9:	fwait
  40a0ca:	mov    DWORD PTR [esi+0x78],ebp
  40a0cd:	in     al,0x38
  40a0cf:	out    0x7d,al
  40a0d1:	xchg   ecx,eax
  40a0d2:	out    0xc2,al
  40a0d4:	ficom  WORD PTR [ebp-0x3dbd1732]
  40a0da:	test   edi,esi
  40a0dc:	adc    ebp,eax
  40a0de:	cmp    dl,dh
  40a0e0:	loope  0x40a155
  40a0e2:	fucomi st,st(2)
  40a0e4:	cli    
  40a0e5:	je     0x40a0d2
  40a0e7:	or     bl,BYTE PTR [esi]
  40a0e9:	in     eax,0x49
  40a0eb:	test   eax,0x8e85a7d1
  40a0f0:	inc    edx
  40a0f1:	mov    edi,0xb5f541e0
  40a0f6:	std    
  40a0f7:	push   eax
  40a0f8:	jae    0x40a0e8
  40a0fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a0fb:	arpl   WORD PTR ds:0x70f2fd23,bx
  40a101:	and    eax,0x6c3e8228
  40a106:	xor    eax,0x95b84341
  40a10b:	loope  0x40a0ca
  40a10d:	adc    esp,DWORD PTR [edi-0x19f2429c]
  40a113:	scas   al,BYTE PTR es:[edi]
  40a114:	sub    bh,cl
  40a116:	daa    
  40a117:	retf   0x7642
  40a11a:	inc    eax
  40a11b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a11c:	test   BYTE PTR [esi+0x52],ah
  40a11f:	iret   
  40a120:	push   esi
  40a121:	mov    cl,BYTE PTR [ebx+0x1b]
  40a124:	sub    ecx,esp
  40a126:	imul   esi,DWORD PTR [ebp+0x1ede6106],0xc356520f
  40a130:	xor    eax,0xb50c9867
  40a135:	imul   edx,DWORD PTR [esi+0x73],0xc7a0b5a9
  40a13c:	or     dl,BYTE PTR [edx]
  40a13e:	sub    DWORD PTR [eax+0x56],ebp
  40a141:	shl    BYTE PTR [ebp-0x72],1
  40a144:	inc    eax
  40a145:	fisubr WORD PTR [eax+0x6]
  40a148:	out    dx,al
  40a149:	jl     0x40a14c
  40a14b:	mov    ecx,0xebb597ca
  40a150:	stc    
  40a151:	js     0x40a1c7
  40a153:	xchg   ebp,eax
  40a154:	imul   BYTE PTR [esi+0x7c]
  40a157:	adc    BYTE PTR [edx+ebp*1-0x51],0x7b
  40a15c:	push   0x75
  40a15e:	push   cs
  40a15f:	imul   edi,DWORD PTR [ebx+esi*2-0xf],0xcb3057
  40a167:	adc    al,0xb
  40a169:	cld    
  40a16a:	loope  0x40a15d
  40a16c:	xchg   esp,eax
  40a16d:	outs   dx,BYTE PTR ds:[esi]
  40a16e:	fadd   DWORD PTR [edi-0x53]
  40a171:	sub    al,0xa0
  40a173:	adc    BYTE PTR [esi+eiz*2],al
  40a176:	lock popa 
  40a178:	das    
  40a179:	js     0x40a0fe
  40a17b:	into   
  40a17c:	fidivr WORD PTR [edi+0x78]
  40a17f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a180:	lahf   
  40a181:	enter  0x477e,0x9
  40a185:	cmp    DWORD PTR [ebp+ebp*8+0x41ca6855],esp
  40a18c:	sahf   
  40a18d:	rcl    BYTE PTR [eax+0x75],1
  40a190:	repz mov ch,0xb7
  40a193:	jp     0x40a1ac
  40a195:	test   eax,0xe10e04c9
  40a19a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a19b:	mov    edi,0x5c613342
  40a1a0:	mov    bh,0xe8
  40a1a2:	leave  
  40a1a3:	mov    ebp,0xafa0cd35
  40a1a8:	cmp    eax,0x3d1f061f
  40a1ad:	stos   BYTE PTR es:[edi],al
  40a1ae:	ret    
  40a1af:	jae    0x40a144
  40a1b1:	stos   DWORD PTR es:[edi],eax
  40a1b2:	lahf   
  40a1b3:	es push es
  40a1b5:	mov    al,bh
  40a1b7:	sbb    BYTE PTR ds:0x35eb185b,dl
  40a1bd:	outs   dx,BYTE PTR ds:[esi]
  40a1be:	inc    esi
  40a1bf:	dec    edx
  40a1c0:	pushf  
  40a1c1:	mov    bh,0xde
  40a1c3:	mov    al,0xe3
  40a1c5:	jmp    0x40a16a
  40a1c7:	xchg   DWORD PTR [edx],eax
  40a1c9:	and    eax,esi
  40a1cb:	js     0x40a227
  40a1cd:	stos   BYTE PTR es:[edi],al
  40a1ce:	jb     0x40a21d
  40a1d0:	mov    cl,0x70
  40a1d2:	push   eax
  40a1d3:	stos   BYTE PTR es:[edi],al
  40a1d4:	es sbb al,0xad
  40a1d7:	push   ebx
  40a1d8:	ins    DWORD PTR es:[edi],dx
  40a1d9:	bound  edi,QWORD PTR [ecx]
  40a1db:	cmp    DWORD PTR [esi-0x7a],esp
  40a1de:	test   DWORD PTR [edi+0x53],0x3508c39d
  40a1e5:	retf   0x93da
  40a1e8:	xchg   edx,eax
  40a1e9:	dec    eax
  40a1ea:	sbb    BYTE PTR ds:0xd22007ef,0x3a
  40a1f1:	mov    dl,0xfc
  40a1f3:	leave  
  40a1f4:	jle    0x40a22e
  40a1f6:	nop
  40a1f7:	cli    
  40a1f8:	push   esp
  40a1f9:	nop
  40a1fa:	pop    es
  40a1fb:	pop    ecx
  40a1fc:	or     al,0x7b
  40a1fe:	cmp    DWORD PTR [eax+edi*8],eax
  40a201:	repnz dec esp
  40a203:	and    DWORD PTR [edx],ebx
  40a205:	pop    ebx
  40a206:	les    eax,FWORD PTR cs:[eax+0x69]
  40a20a:	rcl    BYTE PTR [edx-0x4e45e3a6],1
  40a210:	xor    esi,ebp
  40a212:	dec    esp
  40a213:	dec    edi
  40a214:	loopne 0x40a203
  40a216:	dec    ebx
  40a217:	sub    ah,BYTE PTR [ebp-0x5d]
  40a21a:	mov    ds:0x1056774f,al
  40a21f:	inc    ebp
  40a220:	xchg   edx,eax
  40a221:	sub    BYTE PTR [edx+0x30f83486],ah
  40a227:	mov    al,0x59
  40a229:	or     al,0x21
  40a22b:	lods   eax,DWORD PTR ds:[esi]
  40a22c:	push   esi
  40a22d:	jmp    0x40a1c1
  40a22f:	xor    eax,0x95c85dd1
  40a234:	sub    BYTE PTR [eax],0xdb
  40a237:	loope  0x40a278
  40a239:	or     dl,dh
  40a23b:	push   ds
  40a23c:	(bad)  
  40a23d:	or     al,dh
  40a23f:	int3   
  40a240:	outs   dx,BYTE PTR ds:[esi]
  40a241:	pop    esi
  40a242:	adc    eax,0x1217f7bc
  40a247:	out    dx,al
  40a248:	pushf  
  40a249:	push   ebx
  40a24a:	je     0x40a214
  40a24c:	fcomp  QWORD PTR [edx+0x29624ff6]
  40a252:	mov    eax,0x2161498e
  40a257:	sub    eax,0x372d54d6
  40a25c:	mov    BYTE PTR [eax],bh
  40a25e:	pop    ecx
  40a25f:	jle    0x40a263
  40a261:	fsub   DWORD PTR [edx-0x43]
  40a264:	ret    
  40a265:	gs pop ecx
  40a267:	push   edx
  40a268:	mov    esp,0x9c622434
  40a26d:	repnz cmp BYTE PTR [edx+0x7b],ch
  40a271:	mov    ch,dh
  40a273:	loope  0x40a2ba
  40a275:	mov    BYTE PTR ds:[ebp+0x3d9df0f7],dh
  40a27c:	ror    dh,1
  40a27e:	inc    eax
  40a27f:	fdiv   QWORD PTR [edi]
  40a281:	aam    0x86
  40a283:	jb     0x40a27e
  40a285:	mov    esi,0x1868d606
  40a28a:	cmp    eax,0x67943d6e
  40a28f:	dec    ebp
  40a290:	add    BYTE PTR [eax+0x60],0x79
  40a294:	pop    ebx
  40a295:	jno    0x40a23a
  40a297:	mov    eax,0x6ea26ae2
  40a29c:	(bad)  
  40a29d:	xchg   edi,eax
  40a29e:	adc    BYTE PTR [ebp-0x6d],al
  40a2a1:	popa   
  40a2a2:	sbb    DWORD PTR [edx+0x45],eax
  40a2a5:	jmp    0x76cf80cc
  40a2aa:	pop    ebp
  40a2ab:	inc    ebx
  40a2ac:	push   ds
  40a2ad:	and    DWORD PTR [eax-0x65],edx
  40a2b0:	and    eax,0x467f00c0
  40a2b5:	aad    0x44
  40a2b7:	xor    edx,DWORD PTR [edx-0x5]
  40a2ba:	inc    esi
  40a2bb:	pop    edi
  40a2bc:	push   esp
  40a2bd:	mov    ecx,0x343e86b8
  40a2c2:	push   cs
  40a2c3:	push   esp
  40a2c4:	mov    ah,0x41
  40a2c6:	mov    DWORD PTR [ecx+0x618685bb],0xd9e1603a
  40a2d0:	call   0x369d:0x19e7bec0
  40a2d7:	inc    edi
  40a2d8:	xchg   ecx,eax
  40a2d9:	jmp    0x245188e6
  40a2de:	loopne 0x40a2e1
  40a2e0:	xor    ebx,ebp
  40a2e2:	popa   
  40a2e3:	(bad)  
  40a2e4:	lock mov eax,0xf20202ff
  40a2ea:	lods   al,BYTE PTR ds:[esi]
  40a2eb:	dec    ecx
  40a2ec:	fwait
  40a2ed:	int    0xb6
  40a2ef:	sbb    cl,BYTE PTR [eax+ecx*1+0x727e0573]
  40a2f6:	lods   eax,DWORD PTR ds:[esi]
  40a2f7:	cmc    
  40a2f8:	sub    BYTE PTR [edi-0x9],0x67
  40a2fc:	inc    edx
  40a2fd:	mov    ds:0xf4c4c620,al
  40a302:	imul   ebp,DWORD PTR [ecx+0x3d],0xc061f0f9
  40a309:	(bad)  
  40a30a:	jno    0x40a388
  40a30c:	lock jmp FWORD PTR [ecx-0x11cb28d5]
  40a313:	lea    esp,[ebx+0x72ce07b9]
  40a319:	push   cs
  40a31a:	cmp    DWORD PTR [edx-0x34],esi
  40a31d:	(bad)  
  40a31e:	adc    BYTE PTR [ebp-0x29ce6269],cl
  40a324:	jae    0x40a2ff
  40a326:	sbb    bh,BYTE PTR [edx-0x10]
  40a329:	orps   xmm4,XMMWORD PTR [esi]
  40a32c:	jmp    0x25e1:0x5dfce198
  40a333:	sub    cl,al
  40a335:	repz fadd DWORD PTR [ebp+0x2a444f04]
  40a33c:	pop    ss
  40a33d:	push   0xd8db98e2
  40a342:	inc    esp
  40a343:	jl     0x40a32f
  40a345:	popa   
  40a346:	shr    BYTE PTR [edx-0x8c9dad7],1
  40a34c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a34d:	jmp    0x40a327
  40a34f:	and    BYTE PTR [edx-0x536a3f7e],cl
  40a355:	cmp    edi,DWORD PTR [edx]
  40a357:	or     BYTE PTR ds:0x193f5318,ch
  40a35d:	sar    DWORD PTR [ecx-0x5c],cl
  40a360:	lahf   
  40a361:	in     al,dx
  40a362:	mov    WORD PTR [eax-0x4c6bafc],?
  40a368:	jb     0x40a384
  40a36a:	push   0xaedf92b8
  40a36f:	inc    esi
  40a370:	pop    ecx
  40a371:	pop    eax
  40a372:	jmp    0x40a304
  40a374:	xor    DWORD PTR [ebp+0x4],edx
  40a377:	mov    eax,DWORD PTR [edx-0x15]
  40a37a:	stos   DWORD PTR es:[edi],eax
  40a37b:	xor    al,0xa8
  40a37d:	pop    ebx
  40a37e:	dec    esp
  40a37f:	je     0x40a392
  40a381:	or     ebp,ecx
  40a383:	test   eax,0x62439f0d
  40a388:	xchg   esi,eax
  40a389:	push   edx
  40a38a:	daa    
  40a38b:	mov    eax,ds:0xcb773400
  40a390:	inc    ebx
  40a391:	xchg   ebx,eax
  40a392:	mov    ah,0x42
  40a394:	jmp    0x1fcb4172
  40a399:	into   
  40a39a:	or     DWORD PTR [eax+0x2],esi
  40a39d:	ins    DWORD PTR es:[edi],dx
  40a39e:	dec    edi
  40a39f:	rol    DWORD PTR [ecx-0x7ecdc402],1
  40a3a5:	mov    BYTE PTR fs:[esp+ecx*1],ch
  40a3a9:	icebp  
  40a3aa:	xor    edi,edi
  40a3ac:	shl    DWORD PTR [edi+0x23],cl
  40a3af:	fcmovbe st,st(4)
  40a3b1:	push   ebx
  40a3b2:	repnz sub eax,0xb78b8da1
  40a3b8:	sub    al,0x77
  40a3ba:	xor    ch,dl
  40a3bc:	lock dec ebx
  40a3be:	loopne 0x40a3f7
  40a3c0:	lock shr BYTE PTR [ebp+ebp*2-0x28],cl
  40a3c5:	loope  0x40a37c
  40a3c7:	jle    0x40a396
  40a3c9:	mov    ds,WORD PTR [edi]
  40a3cb:	rol    DWORD PTR [ecx+edi*2-0x2d8b6c30],1
  40a3d2:	adc    BYTE PTR [edi],dh
  40a3d4:	add    ecx,DWORD PTR [edx+0x6c]
  40a3d7:	aam    0x52
  40a3d9:	push   ecx
  40a3da:	add    al,0xcd
  40a3dc:	call   FWORD PTR [esi+ecx*8]
  40a3df:	add    edi,DWORD PTR [ebx-0x3d7051c2]
  40a3e5:	into   
  40a3e6:	add    al,0xc5
  40a3e8:	js     0x40a432
  40a3ea:	pop    ebp
  40a3eb:	dec    ecx
  40a3ec:	pandn  mm6,QWORD PTR [ebp-0x66]
  40a3f0:	iret   
  40a3f1:	jns    0x40a432
  40a3f3:	lea    eax,[edx+0x5d1da746]
  40a3f9:	inc    ecx
  40a3fa:	hlt    
  40a3fb:	imul   si,di,0xbba2
  40a400:	inc    esi
  40a401:	add    BYTE PTR [edx-0x43a867fc],0x51
  40a408:	call   0x3bd5:0x5e1204cd
  40a40f:	inc    ecx
  40a410:	xor    eax,DWORD PTR [esi]
  40a412:	sub    DWORD PTR [edi],esi
  40a414:	push   0xe73f2790
  40a419:	push   0xb8893b2
  40a41e:	std    
  40a41f:	inc    ecx
  40a420:	stos   BYTE PTR es:[edi],al
  40a421:	in     al,dx
  40a422:	mov    ecx,0xa1c8c8ab
  40a427:	aam    0xb6
  40a429:	out    dx,al
  40a42a:	and    al,0xe3
  40a42c:	xor    DWORD PTR [edx],0x3383e7ee
  40a432:	add    al,0x36
  40a434:	dec    edi
  40a435:	aam    0x6b
  40a437:	mov    bh,0x1d
  40a439:	lods   al,BYTE PTR ds:[esi]
  40a43a:	push   es
  40a43b:	cmp    DWORD PTR [edx],esp
  40a43d:	js     0x40a44b
  40a43f:	loope  0x40a46a
  40a441:	xor    cl,BYTE PTR ss:[ebx]
  40a444:	cld    
  40a445:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a446:	call   0x8719c91e
  40a44b:	cs inc edi
  40a44d:	dec    BYTE PTR [edx+0x13]
  40a450:	pop    eax
  40a451:	outs   dx,BYTE PTR ds:[esi]
  40a452:	mov    ebx,0x64c3d21b
  40a457:	mov    ebp,0x7bec21be
  40a45c:	mov    cl,0x7c
  40a45e:	je     0x40a4b3
  40a460:	test   eax,0x16ca025c
  40a465:	ins    DWORD PTR es:[edi],dx
  40a466:	popa   
  40a467:	imul   esp,DWORD PTR cs:[edx],0x266e2fd5
  40a46e:	push   0x6f887857
  40a473:	jge    0x40a473
  40a475:	ficom  DWORD PTR [eax+0xdb0172d]
  40a47b:	test   DWORD PTR [esi+edi*4-0x35e0274],edi
  40a482:	idiv   BYTE PTR [esi]
  40a484:	mov    ecx,0xdd92adba
  40a489:	jl     0x40a452
  40a48b:	test   BYTE PTR [edi+0x1addfcee],dh
  40a491:	loop   0x40a502
  40a493:	ins    DWORD PTR es:[edi],dx
  40a494:	out    dx,eax
  40a495:	inc    ebx
  40a496:	mov    ebx,0x18e4c1cb
  40a49b:	cmp    BYTE PTR [esi+0x75786257],bh
  40a4a1:	loope  0x40a4a2
  40a4a3:	add    al,0xbe
  40a4a5:	lods   al,BYTE PTR ds:[esi]
  40a4a6:	shr    DWORD PTR [ecx+esi*1],0xf3
  40a4aa:	inc    esp
  40a4ab:	jg     0x40a430
  40a4ad:	idiv   BYTE PTR [ecx]
  40a4af:	cwde   
  40a4b0:	pop    ebp
  40a4b1:	jne    0x40a52b
  40a4b3:	pop    ebp
  40a4b4:	cs ja  0x40a4f1
  40a4b7:	nop
  40a4b8:	push   ebp
  40a4b9:	loopne 0x40a4ae
  40a4bb:	sub    eax,0x6446b810
  40a4c0:	jle    0x40a46a
  40a4c2:	loope  0x40a473
  40a4c4:	and    DWORD PTR [ebp-0x48dbea0c],esp
  40a4ca:	sbb    eax,0x62942922
  40a4cf:	idiv   DWORD PTR [ebp+0x1b]
  40a4d2:	cmp    eax,0x89489df
  40a4d7:	clc    
  40a4d8:	or     DWORD PTR [esi],edx
  40a4da:	adc    bl,BYTE PTR [ebp-0x9acbf76]
  40a4e0:	and    DWORD PTR [edi+0x39],ebx
  40a4e3:	xchg   BYTE PTR [ebx+ebp*8],dh
  40a4e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a4e7:	push   edi
  40a4e8:	aas    
  40a4e9:	mov    al,ds:0xe9c3de39
  40a4ee:	mov    esi,0x1402621a
  40a4f3:	inc    edi
  40a4f4:	push   ecx
  40a4f5:	jp     0x40a52e
  40a4f7:	mov    al,ds:0xdfb412a8
  40a4fc:	mov    al,ds:0x3de76ff6
  40a501:	scas   eax,DWORD PTR es:[edi]
  40a502:	or     eax,0x8488719a
  40a507:	lods   eax,DWORD PTR ds:[esi]
  40a508:	mov    BYTE PTR [eax-0x38],0xdd
  40a50c:	int3   
  40a50d:	xchg   edi,eax
  40a50e:	mov    esi,0x2b20584
  40a513:	arpl   WORD PTR [ecx],ax
  40a515:	clc    
  40a516:	push   edi
  40a517:	mov    WORD PTR [esi+0x7370220d],cs
  40a51d:	pop    ss
  40a51e:	in     al,dx
  40a51f:	outs   dx,DWORD PTR ds:[esi]
  40a520:	xor    dh,BYTE PTR [ebp+0x79]
  40a523:	lea    edx,[edi]
  40a525:	out    dx,eax
  40a526:	cmp    eax,0xb2a9ad10
  40a52b:	std    
  40a52c:	(bad)  
  40a52d:	in     al,0x41
  40a52f:	add    dh,bh
  40a531:	jmp    0xa725:0x71d4b028
  40a538:	hlt    
  40a539:	ins    DWORD PTR es:[edi],dx
  40a53a:	inc    ecx
  40a53b:	inc    eax
  40a53c:	(bad)  
  40a53e:	mov    fs,edi
  40a540:	and    esp,DWORD PTR [ecx]
  40a542:	adc    BYTE PTR [edx+0x7b],dl
  40a545:	pop    esp
  40a546:	and    al,0x76
  40a548:	push   ebx
  40a549:	stos   BYTE PTR es:[edi],al
  40a54a:	leave  
  40a54b:	xor    DWORD PTR [edx-0x5e4610ae],esi
  40a551:	cmp    cl,ch
  40a553:	lock jp 0x40a508
  40a556:	pop    esi
  40a557:	xchg   ebp,eax
  40a558:	pop    eax
  40a559:	push   eax
  40a55a:	and    DWORD PTR [edx],ebx
  40a55c:	mov    ebx,0x88845eee
  40a561:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a562:	lods   eax,DWORD PTR ds:[esi]
  40a563:	jb     0x40a506
  40a565:	mov    di,0xf8c7
  40a569:	mov    ds:0x13ef77b4,eax
  40a56e:	xor    eax,edx
  40a570:	(bad)  
  40a571:	daa    
  40a572:	cmp    esi,DWORD PTR [edx-0x747e5e88]
  40a578:	clc    
  40a579:	mov    esi,0xe2b61ed
  40a57e:	lahf   
  40a57f:	pop    DWORD PTR [edx+0x6c]
  40a582:	jns    0x40a599
  40a584:	rcr    edi,cl
  40a586:	pop    ebx
  40a587:	mov    esp,0x2d7ea128
  40a58c:	in     al,dx
  40a58d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a58e:	or     DWORD PTR [esi+0x19],esi
  40a591:	pop    esp
  40a592:	xlat   BYTE PTR ds:[ebx]
  40a593:	sbb    al,0x84
  40a595:	xchg   edx,eax
  40a596:	cmp    DWORD PTR [esi+0x14203151],ebp
  40a59c:	jg     0x40a535
  40a59e:	rol    BYTE PTR [edx+eax*8],cl
  40a5a1:	fnstenv [ecx-0x72b910a5]
  40a5a7:	test   al,0xb2
  40a5a9:	cwde   
  40a5aa:	bound  edx,QWORD PTR es:[esp+ebp*2-0x75]
  40a5af:	xchg   edi,eax
  40a5b0:	test   al,0x81
  40a5b2:	inc    ebp
  40a5b3:	shr    BYTE PTR [eax],cl
  40a5b5:	aaa    
  40a5b6:	cmp    BYTE PTR [esi+0x48],al
  40a5b9:	inc    ebx
  40a5ba:	adc    BYTE PTR [esp+edx*8-0x11],0xee
  40a5bf:	jp     0x40a5b0
  40a5c1:	cmp    ebp,DWORD PTR [ebp+ebp*1+0x526281fe]
  40a5c8:	push   es
  40a5c9:	out    0xe5,eax
  40a5cb:	test   eax,0x9492d9ea
  40a5d0:	data16 int3 
  40a5d2:	mov    ebp,0xe9ef5eb9
  40a5d7:	(bad)
  40a5da:	fst    DWORD PTR [eax]
  40a5dc:	xchg   edx,eax
  40a5dd:	or     ah,BYTE PTR [ecx+ebp*1]
  40a5e0:	fild   DWORD PTR [ebx]
  40a5e2:	aas    
  40a5e3:	mov    al,0x92
  40a5e5:	jne    0x40a5f4
  40a5e7:	pushf  
  40a5e8:	sbb    ecx,edx
  40a5ea:	add    cl,dh
  40a5ec:	sahf   
  40a5ed:	cld    
  40a5ee:	push   cs
  40a5ef:	loop   0x40a64b
  40a5f1:	ret    0x7ada
  40a5f4:	scas   al,BYTE PTR es:[edi]
  40a5f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a5f6:	pop    ecx
  40a5f7:	rcl    BYTE PTR [edx-0x602b09d6],0xd3
  40a5fe:	shl    DWORD PTR [edi+0x71],cl
  40a601:	pop    edx
  40a602:	fisttp WORD PTR [eax-0x39]
  40a605:	xor    BYTE PTR ds:0x9eec5e72,0x3d
  40a60c:	stos   BYTE PTR es:[edi],al
  40a60d:	sbb    DWORD PTR [eax-0x2a20910f],edx
  40a613:	pop    edx
  40a614:	stc    
  40a615:	sub    bh,bh
  40a617:	jo     0x40a653
  40a619:	stc    
  40a61a:	push   ebx
  40a61b:	sar    cl,1
  40a61d:	xchg   edx,eax
  40a61e:	test   BYTE PTR [eax-0x24],dl
  40a621:	lods   al,BYTE PTR ds:[esi]
  40a622:	push   ss
  40a623:	daa    
  40a624:	outs   dx,BYTE PTR ss:[esi]
  40a626:	mov    ebx,0x896a7684
  40a62b:	dec    esp
  40a62c:	xor    ecx,esi
  40a62e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a62f:	ss int 0x93
  40a632:	enter  0x7543,0x50
  40a636:	xchg   ebp,eax
  40a637:	mov    edx,DWORD PTR [edx+eax*8-0x63]
  40a63b:	sub    DWORD PTR [edx*4-0x17392e2a],ebp
  40a642:	jnp    0x9e371f1
  40a648:	nop
  40a649:	or     cl,cl
  40a64b:	sub    DWORD PTR [eax+ecx*2+0x3d],edi
  40a64f:	cs and eax,0x842db71e
  40a655:	stos   BYTE PTR es:[edi],al
  40a656:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a657:	xlat   BYTE PTR ds:[ebx]
  40a658:	push   eax
  40a659:	add    al,0xac
  40a65b:	div    ah
  40a65d:	int3   
  40a65e:	stos   DWORD PTR es:[edi],eax
  40a65f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a660:	add    DWORD PTR [esi+ecx*2],edx
  40a663:	test   eax,0xbdc47667
  40a668:	xchg   ebx,eax
  40a669:	jmp    0x40a625
  40a66b:	hlt    
  40a66c:	xor    ch,BYTE PTR [ebp+edx*2+0x65e2832a]
  40a673:	aaa    
  40a674:	push   es
  40a675:	idiv   ecx
  40a677:	inc    edx
  40a678:	fsubr  DWORD PTR ds:[eax-0x11ada39c]
  40a67f:	mov    edx,DWORD PTR [ebp-0x10]
  40a682:	mov    eax,DWORD PTR [ebp-0x14]
  40a685:	mov    ebx,DWORD PTR [ebp-0x2c]
  40a688:	sub    eax,edx
  40a68a:	xor    ebx,esi
  40a68c:	xor    edx,edx
  40a68e:	add    ebx,edi
  40a690:	div    ebx
  40a692:	mov    DWORD PTR [ebp-0x8],eax
  40a695:	mov    eax,DWORD PTR [ebp-0x44]
  40a698:	mov    edx,DWORD PTR [ebp-0x8]
  40a69b:	xor    eax,esi
  40a69d:	add    eax,edi
  40a69f:	cmp    edx,eax
  40a6a1:	jbe    0x40a6b1
  40a6a7:	mov    eax,DWORD PTR [ebp-0x44]
  40a6aa:	xor    eax,esi
  40a6ac:	add    eax,edi
  40a6ae:	mov    DWORD PTR [ebp-0x8],eax
  40a6b1:	mov    eax,DWORD PTR [ebp-0x2c]
  40a6b4:	mov    edx,DWORD PTR [ebp-0x8]
  40a6b7:	xor    eax,esi
  40a6b9:	add    eax,edi
  40a6bb:	imul   eax,edx
  40a6be:	mov    DWORD PTR [ebp-0x8],eax
  40a6c1:	mov    eax,DWORD PTR [ebp-0x38]
  40a6c4:	mov    edx,DWORD PTR [ebp-0x8]
  40a6c7:	jmp    0x40ca23
  40a6cc:	pop    esi
  40a6cd:	inc    esi
  40a6ce:	mov    bl,BYTE PTR [edx+eax*4]
  40a6d1:	mov    al,al
  40a6d3:	clc    
  40a6d4:	jge    0x40a746
  40a6d6:	sub    edx,DWORD PTR [ebp+0x699e0fcf]
  40a6dc:	xchg   dh,dh
  40a6de:	jp     0x40a75a
  40a6e0:	cmp    ebx,DWORD PTR [edi+0x7a]
  40a6e3:	jp     0x40a706
  40a6e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a6e6:	mov    fs,WORD PTR [ebx+0x11]
  40a6e9:	idiv   DWORD PTR [edi-0x5d4724fd]
  40a6ef:	add    eax,0x25cc2c29
  40a6f4:	jno    0x40a719
  40a6f6:	xchg   ebx,eax
  40a6f7:	xchg   esp,eax
  40a6f8:	or     eax,0x9c04c6c1
  40a6fd:	cmp    ah,BYTE PTR [edx-0x1a7677f]
  40a703:	mov    edi,0xdbf8932e
  40a708:	push   ecx
  40a709:	pop    DWORD PTR [ebx+0x5b]
  40a70c:	mov    esp,0xc2c8bac1
  40a711:	call   DWORD PTR [ecx-0x3ac336a4]
  40a717:	push   ebp
  40a718:	and    eax,0xffef0429
  40a71d:	sub    eax,0x3973ffae
  40a722:	sub    eax,0x5a49c501
  40a727:	mov    dl,0x9b
  40a729:	mov    edi,0xcffc9127
  40a72e:	shl    cl,1
  40a730:	add    DWORD PTR [ecx+ecx*4-0x7b9e9c6b],0xdbe2cbc1
  40a73b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a73c:	pop    ds
  40a73d:	ret    0xc07c
  40a740:	fcmovbe st,st(2)
  40a742:	(bad)  
  40a743:	out    0xe1,al
  40a745:	enter  0x1c52,0xac
  40a749:	push   ebx
  40a74a:	jb     0x40a71d
  40a74c:	or     edi,DWORD PTR [edx-0x1bfbd00c]
  40a752:	sub    edx,ecx
  40a754:	imul   di,di,0x64
  40a758:	retf   0xc1b3
  40a75b:	popf   
  40a75c:	xchg   BYTE PTR [edx],bl
  40a75e:	jmp    0xfda3:0xefea07cb
  40a765:	fsubr  st(7),st
  40a767:	and    edi,esp
  40a769:	shr    DWORD PTR [ebx+ecx*1+0x69],cl
  40a76d:	enter  0x42d8,0x10
  40a771:	lea    esi,[esi-0x80]
  40a774:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a775:	sbb    edi,ecx
  40a777:	sbb    al,BYTE PTR [ecx]
  40a779:	and    ch,ah
  40a77b:	add    al,0xaf
  40a77d:	xchg   edi,eax
  40a77e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a77f:	sbb    DWORD PTR [esi+edx*2],esp
  40a782:	pop    eax
  40a783:	cmp    BYTE PTR gs:[edx+0x54c88d41],dl
  40a78a:	jmp    0x40a79d
  40a78c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a78d:	pop    ebx
  40a78e:	mov    bh,0x47
  40a790:	dec    esp
  40a791:	imul   edi,DWORD PTR [si-0x42aa],0x65
  40a797:	mov    DWORD PTR [ecx],esp
  40a799:	fstp   DWORD PTR [edi+ecx*8]
  40a79c:	sub    eax,0x84f814cc
  40a7a1:	add    eax,0xa3d978c
  40a7a6:	cwde   
  40a7a7:	add    BYTE PTR [edi],bh
  40a7a9:	(bad)  
  40a7aa:	inc    DWORD PTR [edx]
  40a7ac:	inc    ebp
  40a7ad:	sbb    eax,0xb006bb7e
  40a7b2:	xor    al,0xe4
  40a7b4:	jle    0x40a786
  40a7b6:	adc    eax,0x1da41c3d
  40a7bb:	xor    ah,BYTE PTR [ebp+0x33]
  40a7be:	mov    WORD PTR [eax-0x9],?
  40a7c1:	or     eax,0xb7809c79
  40a7c6:	sub    esi,DWORD PTR [eax+esi*2]
  40a7c9:	fisubr WORD PTR [ecx+0x2a83ad43]
  40a7cf:	js     0x40a816
  40a7d1:	add    eax,0x7c81dd16
  40a7d6:	jnp    0x40a78b
  40a7d8:	inc    ecx
  40a7d9:	sub    esi,DWORD PTR ds:0xebb972b9
  40a7df:	(bad)  
  40a7e0:	cmp    esi,DWORD PTR [esi+edi*1]
  40a7e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a7e4:	clc    
  40a7e5:	je     0x40a76d
  40a7e7:	gs cld 
  40a7e9:	push   ds
  40a7ea:	add    dh,BYTE PTR [edx+ebp*8-0x3a]
  40a7ee:	pop    eax
  40a7ef:	xor    DWORD PTR [edi],ebx
  40a7f1:	icebp  
  40a7f2:	jbe    0x40a81d
  40a7f4:	xchg   BYTE PTR [ecx+0x567f4b45],ch
  40a7fa:	cmc    
  40a7fb:	dec    ebx
  40a7fc:	jae    0x40a7d0
  40a7fe:	sar    DWORD PTR [eax+0x5d],1
  40a801:	push   ds
  40a802:	inc    ebx
  40a803:	sbb    ebp,esi
  40a805:	mov    edx,0xe770e408
  40a80a:	iret   
  40a80b:	pop    ebx
  40a80c:	out    0xaa,al
  40a80e:	lea    ebp,[edi]
  40a810:	cmc    
  40a811:	push   ebx
  40a812:	clc    
  40a813:	xchg   edi,eax
  40a814:	sub    ebx,DWORD PTR [edx-0x4f]
  40a817:	mov    eax,DWORD PTR [eax]
  40a819:	push   edx
  40a81a:	fstp   TBYTE PTR [edi]
  40a81c:	inc    ecx
  40a81d:	xchg   ebp,eax
  40a81e:	cmp    al,0x96
  40a820:	push   0x74
  40a822:	add    bl,bl
  40a824:	push   0x34
  40a826:	cmp    bl,BYTE PTR [ebx-0x2b]
  40a829:	dec    esp
  40a82a:	and    DWORD PTR [eax],ebp
  40a82c:	push   edi
  40a82d:	dec    eax
  40a82e:	mov    eax,ds:0x77e373fe
  40a833:	sbb    WORD PTR [ebx],dx
  40a836:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a837:	idiv   DWORD PTR [esi+0x12]
  40a83a:	test   BYTE PTR fs:[eax+0x142b3a91],dl
  40a841:	mov    ebx,0xe8084416
  40a846:	jo     0x40a876
  40a848:	push   esi
  40a849:	fmulp  st(7),st
  40a84b:	jb     0x40a83b
  40a84d:	xchg   ecx,eax
  40a84e:	xor    bh,BYTE PTR [ebx-0x42dfd254]
  40a854:	xor    eax,0x527da5aa
  40a859:	cmc    
  40a85a:	mov    ss,ebx
  40a85c:	loope  0x40a867
  40a85e:	arpl   ax,bp
  40a860:	int3   
  40a861:	jmp    0x40a8a5
  40a863:	loope  0x40a896
  40a865:	aas    
  40a866:	ret    
  40a867:	xor    eax,0x2a1682a5
  40a86c:	aad    0x43
  40a86e:	pop    esi
  40a86f:	ins    DWORD PTR es:[edi],dx
  40a870:	ja     0x40a861
  40a872:	inc    eax
  40a873:	ficom  DWORD PTR [esi]
  40a875:	cmc    
  40a876:	xchg   esi,eax
  40a877:	xchg   BYTE PTR [eax+0x2fad1678],bh
  40a87d:	inc    eax
  40a87e:	rcr    cl,cl
  40a880:	mov    ebp,ecx
  40a882:	xchg   ebx,eax
  40a883:	mov    edx,0xc7abf7fc
  40a888:	xchg   DWORD PTR [ebx],eax
  40a88a:	xchg   BYTE PTR [ebp+edx*1-0x3b448296],dh
  40a891:	sub    al,0x3
  40a893:	dec    esp
  40a894:	dec    esp
  40a895:	iret   
  40a896:	pop    esi
  40a897:	aam    0x60
  40a899:	(bad)  
  40a89a:	mov    ch,BYTE PTR [ecx-0x73d7fe8a]
  40a8a0:	xor    eax,DWORD PTR [eax+eax*8]
  40a8a3:	sub    eax,0x6ca2d93
  40a8a8:	mov    dl,0x7d
  40a8aa:	rol    bl,0xda
  40a8ad:	test   edx,esi
  40a8af:	pop    eax
  40a8b0:	xor    ah,BYTE PTR [esi]
  40a8b2:	or     DWORD PTR [eax+eiz*8],edi
  40a8b5:	(bad)  
  40a8b6:	repz aas 
  40a8b8:	pop    ds
  40a8b9:	inc    edi
  40a8ba:	(bad)  
  40a8bb:	mov    dl,0x61
  40a8bd:	loopne 0x40a8ab
  40a8bf:	fild   QWORD PTR [ecx+0x3f]
  40a8c2:	pop    edi
  40a8c3:	mov    bl,0x4e
  40a8c5:	imul   ebx,DWORD PTR [ebp+0x652f0174],0x6bbd2c8e
  40a8cf:	and    dl,BYTE PTR ds:0xb1476222
  40a8d5:	inc    edi
  40a8d6:	pop    edi
  40a8d7:	ins    DWORD PTR es:[edi],dx
  40a8d8:	in     al,0xe5
  40a8da:	lahf   
  40a8db:	mov    ecx,0x6eefe67f
  40a8e0:	mov    dl,0xd2
  40a8e2:	pop    es
  40a8e3:	fcmovbe st,st(5)
  40a8e5:	rol    DWORD PTR ds:0x2dfa3576,1
  40a8eb:	cmp    BYTE PTR [edx-0x53f83aec],ch
  40a8f1:	pop    ds
  40a8f2:	fcom   QWORD PTR [ebp-0x29]
  40a8f5:	jo     0x40a8ba
  40a8f7:	(bad)  
  40a8f8:	mov    cl,0x85
  40a8fa:	outs   dx,BYTE PTR ds:[esi]
  40a8fb:	or     al,0x8c
  40a8fd:	push   eax
  40a8fe:	mov    ch,0xf0
  40a900:	xchg   BYTE PTR [edi+0x33],al
  40a903:	cs call 0x6f03e778
  40a909:	pop    ds
  40a90a:	xchg   ebx,eax
  40a90b:	inc    ebx
  40a90c:	cmp    al,BYTE PTR [ebx+0x18e7db0b]
  40a912:	dec    ebp
  40a913:	bsf    eax,DWORD PTR [ebx]
  40a916:	gs mov dh,0x1c
  40a919:	stos   DWORD PTR es:[edi],eax
  40a91a:	adc    al,0x87
  40a91c:	sbb    edx,ebp
  40a91e:	pop    esp
  40a91f:	ret    
  40a920:	test   al,0xf5
  40a922:	enter  0x2cd0,0xd8
  40a926:	inc    eax
  40a927:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a928:	scas   eax,DWORD PTR es:[edi]
  40a929:	mov    esp,0x9a150869
  40a92e:	xor    eax,0xada5b27c
  40a933:	dec    edi
  40a934:	ins    DWORD PTR es:[edi],dx
  40a935:	out    0x83,al
  40a937:	fist   WORD PTR [edx+0x652ffbd4]
  40a93d:	mov    al,ds:0xcffa4fc5
  40a942:	je     0x40a8ee
  40a944:	mov    al,0xd
  40a946:	das    
  40a947:	pop    edi
  40a948:	enter  0xffa0,0xef
  40a94c:	jae    0x40a919
  40a94e:	out    0xee,al
  40a950:	mov    edx,DWORD PTR [esi+0x57e6d8af]
  40a956:	out    dx,al
  40a957:	jl     0x40a91c
  40a959:	test   DWORD PTR [esi],esp
  40a95b:	out    0xd1,eax
  40a95d:	repz mov dh,0x92
  40a960:	cli    
  40a961:	adc    eax,0x818f25d7
  40a966:	cmp    BYTE PTR [esp+ebp*2+0xb],ah
  40a96a:	mov    ecx,0x12b07210
  40a96f:	neg    DWORD PTR ds:0x34530bf1
  40a976:	test   DWORD PTR [eax-0x2b102de9],0x6ad45321
  40a980:	imul   ebp,DWORD PTR [edi-0x3dd3aa05],0x4842f5a1
  40a98a:	inc    eax
  40a98b:	mov    al,ds:0x8a05fc01
  40a990:	pop    edi
  40a991:	lock xchg BYTE PTR [eax+eax*1+0x44],ch
  40a996:	and    ebx,0xffffff81
  40a999:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a99a:	jmp    0xd1c1:0x266b503c
  40a9a1:	sub    ecx,DWORD PTR [esi]
  40a9a3:	lahf   
  40a9a4:	in     eax,dx
  40a9a5:	test   ebp,ebx
  40a9a7:	fwait
  40a9a8:	mov    edx,DWORD PTR [eax-0x15245b6b]
  40a9ae:	je     0x40aa16
  40a9b0:	pushf  
  40a9b1:	outs   dx,DWORD PTR ds:[esi]
  40a9b2:	push   ecx
  40a9b3:	sub    BYTE PTR [esi],bl
  40a9b5:	dec    edi
  40a9b6:	retf   
  40a9b7:	or     al,0x7e
  40a9b9:	xchg   edi,eax
  40a9ba:	sub    ebx,edi
  40a9bc:	add    BYTE PTR [ebx+0x72],bh
  40a9bf:	repnz icebp 
  40a9c1:	popa   
  40a9c2:	aaa    
  40a9c3:	sbb    eax,0xa2bb501d
  40a9c8:	dec    ebx
  40a9c9:	test   ebp,0x7d56ee14
  40a9cf:	adc    ch,BYTE PTR [ebp+0x73f6df5d]
  40a9d5:	cld    
  40a9d6:	push   edi
  40a9d7:	imul   edi,DWORD PTR [ebx-0x327564b2],0x48
  40a9de:	xchg   ebx,eax
  40a9df:	xor    ch,dl
  40a9e1:	mov    WORD PTR [edx],ss
  40a9e3:	(bad)  
  40a9e4:	jle    0x40a9b6
  40a9e6:	mov    al,BYTE PTR [eax+0x79]
  40a9e9:	test   al,0x39
  40a9eb:	ret    
  40a9ec:	adc    eax,0x4b7a529b
  40a9f1:	enter  0x67ec,0x7e
  40a9f5:	push   edi
  40a9f6:	add    ebp,DWORD PTR [esi]
  40a9f8:	push   cs
  40a9f9:	daa    
  40a9fa:	aaa    
  40a9fb:	test   ecx,esi
  40a9fd:	mov    edi,0x5781063d
  40aa02:	pop    esp
  40aa03:	mov    esp,esp
  40aa05:	or     eax,DWORD PTR [esi-0x4f37ae9c]
  40aa0b:	loop   0x40aa0f
  40aa0d:	das    
  40aa0e:	adc    BYTE PTR [esi-0xe],al
  40aa11:	in     al,0x4
  40aa13:	cmc    
  40aa14:	(bad)  
  40aa15:	call   0xfd61ac21
  40aa1a:	adc    cl,ch
  40aa1c:	iret   
  40aa1d:	les    eax,FWORD PTR [eax]
  40aa1f:	cmp    BYTE PTR [ebp-0xb],bh
  40aa22:	inc    ebp
  40aa23:	push   esi
  40aa24:	and    ebp,eax
  40aa26:	sub    esp,DWORD PTR [ecx+0x516a5579]
  40aa2c:	push   edi
  40aa2d:	sub    eax,edx
  40aa2f:	addr16 imul edx
  40aa32:	pop    es
  40aa33:	jno    0x40aaa3
  40aa35:	cli    
  40aa36:	push   cs
  40aa37:	push   ecx
  40aa38:	cld    
  40aa39:	or     eax,edi
  40aa3b:	adc    al,ah
  40aa3d:	es in  eax,0xb4
  40aa40:	fisubr WORD PTR [edi+0x2a]
  40aa43:	sar    esp,cl
  40aa45:	and    DWORD PTR [esi-0x5f],0x5f
  40aa49:	enter  0x41f1,0xd5
  40aa4d:	(bad)  [eax]
  40aa4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa50:	mov    bl,0xb7
  40aa52:	or     dl,BYTE PTR [edi]
  40aa54:	pop    ebp
  40aa55:	shr    DWORD PTR [ebx-0x4c9690e1],0x13
  40aa5c:	jb     0x40aab2
  40aa5e:	inc    esi
  40aa5f:	mov    ecx,0xdd173de3
  40aa64:	or     DWORD PTR [ebx-0x62072ac1],ebp
  40aa6a:	sub    BYTE PTR [ecx-0x12],dh
  40aa6d:	retf   0x85e0
  40aa70:	push   ds
  40aa71:	rcr    bl,cl
  40aa73:	push   ecx
  40aa74:	inc    esp
  40aa75:	mov    edi,0x2fee405
  40aa7a:	jg     0x40aa33
  40aa7c:	repnz mov al,dh
  40aa7f:	sbb    eax,0x40b8fcd9
  40aa84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa85:	pop    edx
  40aa86:	dec    esp
  40aa87:	push   esp
  40aa88:	mov    esp,0xe437839d
  40aa8d:	xor    BYTE PTR [eax+0xe],dl
  40aa90:	out    dx,al
  40aa91:	dec    edi
  40aa92:	sbb    BYTE PTR [edi],bl
  40aa94:	lock ffree st(6)
  40aa97:	xchg   ebx,eax
  40aa98:	adc    eax,0xfe8c408
  40aa9d:	jno    0x40aa5d
  40aa9f:	pushf  
  40aaa0:	jae    0x40aadd
  40aaa2:	arpl   cx,ax
  40aaa4:	clc    
  40aaa5:	add    al,0x38
  40aaa7:	leave  
  40aaa8:	lea    eax,[ebp-0x2344656c]
  40aaae:	add    ch,BYTE PTR [edx+0x2d]
  40aab1:	(bad)  
  40aab2:	(bad)  
  40aab3:	in     al,dx
  40aab4:	jge    0x40aaef
  40aab6:	ret    
  40aab7:	and    eax,0x128e501e
  40aabc:	adc    al,0x9c
  40aabe:	ret    
  40aabf:	mov    sp,0xe176
  40aac3:	dec    esp
  40aac4:	mov    edi,0x72399657
  40aac9:	sub    eax,0x3193a4c7
  40aace:	adc    al,0x1d
  40aad0:	fwait
  40aad1:	push   esi
  40aad2:	shl    BYTE PTR [edx+0xb],1
  40aad5:	pop    es
  40aad6:	leave  
  40aad7:	pop    esp
  40aad8:	call   0x33117b40
  40aadd:	push   ebp
  40aade:	pop    edi
  40aadf:	jo     0x40aad1
  40aae1:	xchg   esi,eax
  40aae2:	pop    esi
  40aae3:	jbe    0x40aadd
  40aae5:	xor    BYTE PTR [ebp-0x71],dh
  40aae8:	or     DWORD PTR [esi],edi
  40aaea:	and    eax,0xcbb139c1
  40aaef:	pop    eax
  40aaf0:	push   0xa47c2414
  40aaf5:	(bad)  
  40aaf6:	or     al,0x3c
  40aaf8:	shl    DWORD PTR [edi-0x57],1
  40aafb:	mov    al,ds:0xd69aa29d
  40ab00:	fcom   DWORD PTR [edi+ebx*4-0x3f9eabb7]
  40ab07:	sub    esp,DWORD PTR [eax+0x44]
  40ab0a:	mov    ch,0x5e
  40ab0c:	idiv   BYTE PTR [edx+0x70]
  40ab0f:	mov    dh,0x45
  40ab11:	ins    BYTE PTR es:[edi],dx
  40ab12:	test   DWORD PTR [esi],0x29b1d5a8
  40ab18:	call   0x912a:0xfcbe15d3
  40ab1f:	adc    BYTE PTR [ebp-0x34],dh
  40ab22:	call   0x8748:0x79589ccc
  40ab29:	sub    DWORD PTR [ebp+0x22],0x6e
  40ab2d:	mov    ebp,0xe29499c4
  40ab32:	add    eax,DWORD PTR [ebx+0x66332667]
  40ab38:	int3   
  40ab39:	push   es
  40ab3a:	clc    
  40ab3b:	lahf   
  40ab3c:	test   eax,0x54971ef3
  40ab41:	jae    0x40ab4b
  40ab43:	or     BYTE PTR [edx+ecx*4+0x3ad49ff3],dl
  40ab4a:	fldenv [edx+0x4a]
  40ab4d:	fwait
  40ab4e:	(bad)  
  40ab4f:	out    dx,al
  40ab50:	ins    BYTE PTR es:[edi],dx
  40ab51:	mov    ebx,0x3a37c4dc
  40ab56:	daa    
  40ab57:	cmp    al,0xbe
  40ab59:	scas   al,BYTE PTR es:[edi]
  40ab5a:	add    edx,DWORD PTR [esi-0x27]
  40ab5d:	adc    eax,0x524e1650
  40ab62:	(bad)  [esi+0x4c72a93f]
  40ab68:	in     eax,dx
  40ab69:	pop    eax
  40ab6a:	in     al,0xe9
  40ab6c:	inc    esi
  40ab6d:	fwait
  40ab6e:	and    ecx,DWORD PTR [ebx-0x46]
  40ab71:	std    
  40ab72:	inc    edx
  40ab73:	jae    0x40ab30
  40ab75:	adc    al,0xcd
  40ab77:	dec    ebp
  40ab78:	mov    esi,0xb7d718cc
  40ab7d:	scas   eax,DWORD PTR es:[edi]
  40ab7e:	mov    ch,0x6b
  40ab80:	or     edx,DWORD PTR [edi]
  40ab82:	iret   
  40ab83:	outs   dx,BYTE PTR ds:[esi]
  40ab84:	mov    al,ds:0x935dd9d9
  40ab89:	fmul   st,st(0)
  40ab8b:	nop
  40ab8c:	dec    ebp
  40ab8d:	mov    cl,0x75
  40ab8f:	sub    DWORD PTR [edi],edi
  40ab91:	and    ecx,DWORD PTR [edi-0x44]
  40ab94:	retf   0x5ce0
  40ab97:	cwde   
  40ab98:	xlat   BYTE PTR ds:[ebx]
  40ab99:	add    al,0x9a
  40ab9b:	call   0x1b766379
  40aba0:	nop
  40aba1:	mov    edx,0x6546a23c
  40aba6:	inc    esp
  40aba7:	jnp    0x40abaf
  40aba9:	mov    al,0xbe
  40abab:	add    DWORD PTR [ebp+ebx*2-0x5a],edx
  40abaf:	xchg   esp,eax
  40abb0:	cvtpi2ps xmm7,QWORD PTR [edx+0x4e]
  40abb4:	lock inc esi
  40abb6:	adc    eax,0x2862926b
  40abbb:	mov    ecx,0x20845dd6
  40abc0:	fxch   st(2)
  40abc2:	or     eax,0x515e476b
  40abc7:	les    ebp,FWORD PTR [esp+edi*4+0x5af3d517]
  40abce:	fbld   TBYTE PTR [esp+edx*1+0x354d4efb]
  40abd5:	ss dec eax
  40abd7:	or     al,0xed
  40abd9:	add    DWORD PTR [esi+edx*2+0x65ba1021],ebx
  40abe0:	fwait
  40abe1:	mov    al,ds:0x83d4bca4
  40abe6:	loope  0x40abd5
  40abe8:	leave  
  40abe9:	pop    ebp
  40abea:	inc    ebx
  40abeb:	lea    ebp,[edi]
  40abed:	jl     0x40abe5
  40abef:	cwde   
  40abf0:	jecxz  0x40abbd
  40abf2:	loope  0x40ab88
  40abf4:	pop    esp
  40abf5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40abf6:	mov    ebp,0x9380d8d1
  40abfb:	dec    edx
  40abfc:	fs lock gs pusha 
  40ac00:	push   ecx
  40ac01:	cmp    ecx,ecx
  40ac03:	inc    eax
  40ac04:	inc    edi
  40ac05:	clc    
  40ac06:	mov    eax,0xa8c89bc6
  40ac0b:	popa   
  40ac0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac0d:	xchg   BYTE PTR [eax+edx*8+0x13],bl
  40ac11:	pop    edi
  40ac12:	jne    0x40abb5
  40ac14:	pop    edi
  40ac15:	jmp    0xf87d9315
  40ac1a:	bound  ebx,QWORD PTR ds:0xf8b23d9e
  40ac20:	mov    ebp,0x9644dc80
  40ac25:	xchg   BYTE PTR ds:0x1f809cd9,cl
  40ac2b:	loopne 0x40ac8c
  40ac2d:	shr    DWORD PTR [ecx-0x15b92b7e],cl
  40ac33:	mov    dh,0x9a
  40ac35:	std    
  40ac36:	pop    ebx
  40ac37:	adc    BYTE PTR [esi],bh
  40ac39:	push   ds
  40ac3a:	out    dx,eax
  40ac3b:	jl     0x40ac94
  40ac3d:	int    0x9
  40ac3f:	push   esi
  40ac40:	fisttp DWORD PTR [esi+0x1b]
  40ac43:	bound  edi,QWORD PTR [edx*2-0x43b3dbda]
  40ac4a:	xchg   esp,eax
  40ac4b:	dec    ebp
  40ac4c:	scas   eax,DWORD PTR es:[edi]
  40ac4d:	je     0x40ac81
  40ac4f:	rcl    BYTE PTR [esp+ebx*1+0x61d7260a],1
  40ac56:	mov    al,0x7f
  40ac58:	jp     0x40ac46
  40ac5a:	inc    esp
  40ac5b:	frstor gs:[edi-0x6d]
  40ac5f:	ror    BYTE PTR [ecx+eiz*4+0x3b9dd7e5],0x79
  40ac67:	vandps ymm1,ymm1,YMMWORD PTR [edx-0x6f934a06]
  40ac6f:	dec    esp
  40ac70:	fcomp  QWORD PTR ds:0xd84c7dec
  40ac76:	cld    
  40ac77:	test   esp,0xb65d7264
  40ac7d:	shl    ebx,1
  40ac7f:	mov    ds:0x126df601,eax
  40ac84:	jo     0x40ace8
  40ac86:	xchg   BYTE PTR [ecx+esi*8-0x4501fd0f],ah
  40ac8d:	adc    DWORD PTR [esi],edx
  40ac8f:	and    al,0xbf
  40ac91:	test   al,0x16
  40ac93:	mov    bh,0xf
  40ac95:	push   ebp
  40ac96:	mov    bh,0x5c
  40ac98:	xor    DWORD PTR [edx+0x39b4584a],0xf1d17883
  40aca2:	(bad)  
  40aca3:	mov    DWORD PTR [edx-0x15b5d481],ebx
  40aca9:	(bad)  [edi+0x2848e9d1]
  40acaf:	push   0x25fa3a79
  40acb4:	push   es
  40acb5:	mov    dh,0xf7
  40acb7:	dec    edi
  40acb8:	xor    dl,BYTE PTR [ecx+0x70282191]
  40acbe:	and    DWORD PTR [esi+0x25704d96],ebx
  40acc4:	push   esp
  40acc5:	imul   ebp,DWORD PTR [ebx-0x26055b57],0x14
  40accc:	pusha  
  40accd:	mov    dh,0x1d
  40accf:	mov    bl,0xea
  40acd1:	(bad)  
  40acd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40acd3:	xor    BYTE PTR [esi-0x6d057137],bl
  40acd9:	adc    DWORD PTR [ebx+edx*8-0x7a],esp
  40acdd:	sub    DWORD PTR [edi+0x2f0900e0],esi
  40ace3:	or     DWORD PTR [edi+eax*1+0x7762aeb9],esi
  40acea:	outs   dx,DWORD PTR ds:[esi]
  40aceb:	lods   al,BYTE PTR ds:[esi]
  40acec:	sub    al,0x8c
  40acee:	stos   BYTE PTR es:[edi],al
  40acef:	jns    0x40ad00
  40acf1:	dec    ebp
  40acf2:	gs mov bl,0xfb
  40acf5:	or     al,0x3c
  40acf7:	mov    dl,0x3d
  40acf9:	mov    esi,0x5b26462f
  40acfe:	leave  
  40acff:	or     eax,DWORD PTR [ecx+0x7c]
  40ad02:	mov    BYTE PTR [edx+edi*8-0x383ac415],dh
  40ad09:	or     ch,BYTE PTR [ebx-0x1a7f2efe]
  40ad0f:	out    dx,eax
  40ad10:	sub    esi,DWORD PTR [esi+eiz*2+0x15c31d6a]
  40ad17:	mov    ebp,DWORD PTR [ebp+0x46b88e5e]
  40ad1d:	ins    DWORD PTR es:[edi],dx
  40ad1e:	sub    DWORD PTR [edx],0x236c7e85
  40ad24:	cmp    DWORD PTR [ebp-0x5287997f],ebp
  40ad2a:	dec    edi
  40ad2b:	js     0x40ace4
  40ad2d:	gs dec ecx
  40ad2f:	stc    
  40ad30:	popf   
  40ad31:	dec    ebx
  40ad32:	call   0x9c04:0xa80ac89c
  40ad39:	mov    bh,0x58
  40ad3b:	jge    0x40ad81
  40ad3d:	shl    BYTE PTR [edx+ecx*1-0x72d71105],1
  40ad44:	int3   
  40ad45:	outs   dx,BYTE PTR ds:[esi]
  40ad46:	neg    esi
  40ad48:	mov    ah,0x1c
  40ad4a:	cmp    al,0x43
  40ad4c:	(bad)  
  40ad4d:	jno    0x40ad92
  40ad4f:	adc    al,0x92
  40ad51:	lods   eax,DWORD PTR ds:[esi]
  40ad52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad53:	cmp    al,0x62
  40ad55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad56:	xlat   BYTE PTR ds:[ebx]
  40ad57:	adc    BYTE PTR [edx],0xf3
  40ad5a:	fmul   DWORD PTR [edx-0x362e6b09]
  40ad60:	mov    dl,0x72
  40ad62:	adc    eax,0x7ea77f05
  40ad67:	cmp    al,0x1c
  40ad69:	adc    al,0x70
  40ad6b:	shr    BYTE PTR [edx+0x63],0xec
  40ad6f:	je     0x40ad1d
  40ad71:	nop
  40ad72:	(bad)  
  40ad73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad74:	fcmovu st,st(7)
  40ad76:	lahf   
  40ad77:	dec    ebx
  40ad78:	and    DWORD PTR [eax+0x79],esi
  40ad7b:	lahf   
  40ad7c:	push   ds
  40ad7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad7e:	arpl   di,di
  40ad80:	int    0x75
  40ad82:	or     edi,DWORD PTR [ebp-0x249e4f31]
  40ad88:	test   BYTE PTR [eax-0x21],ch
  40ad8b:	push   ebp
  40ad8c:	adc    eax,ebp
  40ad8e:	cli    
  40ad8f:	xchg   ecx,eax
  40ad90:	clc    
  40ad91:	jmp    0x40ad37
  40ad93:	call   0xc72edddb
  40ad98:	add    eax,0x55e07e3b
  40ad9d:	sub    DWORD PTR [esi-0x356b58cb],ebp
  40ada3:	retf   0x35d8
  40ada6:	push   esp
  40ada7:	pop    ebx
  40ada8:	jge    0x40ad2f
  40adaa:	push   edx
  40adab:	pop    ds
  40adac:	cdq    
  40adad:	sahf   
  40adae:	(bad)  
  40adaf:	js     0x40ad60
  40adb1:	outs   dx,BYTE PTR ds:[esi]
  40adb2:	add    BYTE PTR ds:0x7fe4011c,0x8a
  40adb9:	push   ebx
  40adba:	inc    edi
  40adbb:	mov    cl,0xe1
  40adbd:	enter  0xc56a,0x7
  40adc1:	and    al,0xf4
  40adc3:	ret    
  40adc4:	mov    ah,0x3b
  40adc6:	pop    es
  40adc7:	sbb    al,0x35
  40adc9:	nop
  40adca:	jnp    0x40ae3f
  40adcc:	pusha  
  40adcd:	int    0xa2
  40adcf:	test   eax,0x36aaabf4
  40add4:	dec    ebp
  40add5:	add    al,0x97
  40add7:	fcom   st(3)
  40add9:	cmp    al,ah
  40addb:	adc    DWORD PTR [eax],0xeb946848
  40ade1:	aam    0x6
  40ade3:	push   esp
  40ade4:	add    eax,0x2aab4287
  40ade9:	pop    esp
  40adea:	arpl   WORD PTR [edx+0x68],sp
  40aded:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40adee:	push   ecx
  40adef:	neg    al
  40adf1:	repnz imul ebp,DWORD PTR [eax-0x4befebc9],0xb3b0a074
  40adfc:	dec    ecx
  40adfd:	mov    ds:0x313c0998,al
  40ae02:	and    al,0x19
  40ae04:	int3   
  40ae05:	mov    edi,0x92bfaaef
  40ae0a:	test   BYTE PTR [eax+0x5537d239],al
  40ae10:	pop    edx
  40ae11:	pop    edx
  40ae12:	out    0x48,al
  40ae14:	pop    es
  40ae15:	push   edi
  40ae16:	dec    eax
  40ae17:	sbb    BYTE PTR [esi-0x3ce29e2d],0x8
  40ae1e:	int3   
  40ae1f:	dec    esp
  40ae20:	popa   
  40ae21:	icebp  
  40ae22:	mov    ebx,0x8aab6502
  40ae27:	mov    ?,WORD PTR [eax+0x7d73ccb6]
  40ae2d:	fild   DWORD PTR ds:0xc73bb7b7
  40ae33:	jno    0x40ae51
  40ae35:	sti    
  40ae36:	fnstcw WORD PTR [edx+0x5b535065]
  40ae3c:	out    0xd,eax
  40ae3e:	dec    ebp
  40ae3f:	das    
  40ae40:	jne    0x40ae72
  40ae42:	sub    BYTE PTR [edx+0x38],ch
  40ae45:	and    ebx,DWORD PTR [esp+ecx*4-0x62]
  40ae49:	das    
  40ae4a:	inc    edi
  40ae4b:	xor    dh,ah
  40ae4d:	mov    ah,0xec
  40ae4f:	mov    al,ds:0x25d95367
  40ae54:	jg     0xe4619728
  40ae5a:	cmp    edx,DWORD PTR [esp+eax*1+0x19]
  40ae5e:	fucom  st(3)
  40ae60:	js     0x40adeb
  40ae62:	ja     0x40ade6
  40ae64:	sbb    eax,0xdccdad92
  40ae69:	scas   al,BYTE PTR es:[edi]
  40ae6a:	cmp    dl,dh
  40ae6c:	ret    
  40ae6d:	pop    ss
  40ae6e:	xor    al,0xa1
  40ae70:	pop    edi
  40ae71:	jp     0x40aede
  40ae73:	gs in  eax,dx
  40ae75:	xor    DWORD PTR [ebx+0x59],edx
  40ae78:	cwde   
  40ae79:	push   ebp
  40ae7a:	pop    ebp
  40ae7b:	int    0xe6
  40ae7d:	inc    ebx
  40ae7e:	mov    eax,0xe9d0f680
  40ae83:	sbb    eax,0x6a5957bb
  40ae88:	(bad)  
  40ae89:	shl    BYTE PTR ds:0x9f4fa84,cl
  40ae8f:	int    0xbd
  40ae91:	sbb    al,0xe
  40ae93:	fdivr  QWORD PTR [ebp-0x75]
  40ae96:	inc    DWORD PTR [edx+0x35c625ef]
  40ae9c:	and    al,0x79
  40ae9e:	(bad)  
  40ae9f:	cmp    cl,BYTE PTR [edx+0x2b33008a]
  40aea5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aea6:	sub    BYTE PTR [eax-0x27f452ba],0xc9
  40aead:	add    edx,esp
  40aeaf:	xchg   edx,ecx
  40aeb1:	lods   eax,DWORD PTR ds:[esi]
  40aeb2:	enter  0xac0a,0x91
  40aeb6:	cmp    DWORD PTR [edx+0x43],esi
  40aeb9:	cmc    
  40aeba:	sub    BYTE PTR ds:0x701d8a82,0xac
  40aec1:	adc    DWORD PTR [ebx+0x1ea9b162],edi
  40aec7:	push   es
  40aec8:	push   ecx
  40aec9:	sub    BYTE PTR [ebp-0x55],bl
  40aecc:	push   0xa09cb06e
  40aed1:	cs pop ss
  40aed3:	xor    al,0x24
  40aed5:	mov    eax,DWORD PTR [ebx+0x54f526b]
  40aedb:	cli    
  40aedc:	adc    BYTE PTR [esi],ch
  40aede:	(bad)  
  40aedf:	jns    0x40ae88
  40aee1:	(bad)  
  40aee2:	jns    0x40af19
  40aee4:	push   0xdc9753f2
  40aee9:	cmp    al,0xc2
  40aeeb:	addr16 push ebp
  40aeed:	imul   dh
  40aeef:	inc    edi
  40aef0:	mov    eax,ss
  40aef2:	das    
  40aef3:	js     0x40ae86
  40aef5:	(bad)  [eax-0x52753958]
  40aefb:	jmp    0x40aefa
  40aefd:	fbld   TBYTE PTR [esi-0x23]
  40af00:	mov    ds:0x1c0b5ee4,al
  40af05:	repnz add bl,BYTE PTR ds:0x181badf5
  40af0c:	lock imul ebp,eax,0x7f
  40af10:	jo     0x40af2c
  40af12:	mov    bl,BYTE PTR [ebx-0xc1903ea]
  40af18:	lds    eax,FWORD PTR [ebx]
  40af1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af1b:	scas   al,BYTE PTR es:[edi]
  40af1c:	pop    edi
  40af1d:	popa   
  40af1e:	jp     0x40af05
  40af20:	test   al,0x6c
  40af22:	push   ecx
  40af23:	sub    eax,0x7ff37995
  40af28:	sub    DWORD PTR [edx],esi
  40af2a:	call   0x7045:0xecb1fdf7
  40af31:	cli    
  40af32:	xor    al,0x5a
  40af34:	adc    edi,esp
  40af36:	mov    ebx,0x1d536047
  40af3b:	out    dx,al
  40af3c:	leave  
  40af3d:	ss cmp eax,0xc6187777
  40af43:	mov    bl,0x11
  40af45:	push   es
  40af46:	adc    dl,BYTE PTR [ebx+0x7c]
  40af49:	xchg   ebx,eax
  40af4a:	rcl    BYTE PTR ss:[ebp-0x71],cl
  40af4e:	push   es
  40af4f:	sub    DWORD PTR [edx-0x7f],ebx
  40af52:	retf   0x18c9
  40af55:	mov    ebp,0x236b68df
  40af5a:	cmp    DWORD PTR [edi],ecx
  40af5c:	in     eax,dx
  40af5d:	(bad)  
  40af5e:	mov    edi,0xb38032f5
  40af63:	ins    BYTE PTR es:[edi],dx
  40af64:	push   ebp
  40af65:	rcr    DWORD PTR [ebp-0x37],cl
  40af68:	int3   
  40af69:	std    
  40af6a:	lahf   
  40af6b:	pop    ebx
  40af6c:	push   eax
  40af6d:	mov    esi,0xef55ac2a
  40af72:	sti    
  40af73:	jmp    0x45af:0x1aa2c05c
  40af7a:	fwait
  40af7b:	xor    cl,BYTE PTR [eax+0x28]
  40af7e:	fs sub eax,0x9fed16df
  40af84:	loope  0x40afc6
  40af86:	imul   ebx,edx,0x7
  40af89:	inc    edi
  40af8a:	inc    eax
  40af8b:	jo     0x40af54
  40af8d:	shr    DWORD PTR [ebx+0xb],0xe1
  40af91:	stc    
  40af92:	aas    
  40af93:	fisttp QWORD PTR [edx-0x69]
  40af96:	enter  0xb13d,0x8b
  40af9a:	mov    dl,0x1e
  40af9c:	xlat   BYTE PTR ds:[ebx]
  40af9d:	jl     0x40afc3
  40af9f:	add    bl,BYTE PTR [esi+0x39]
  40afa2:	xor    dl,BYTE PTR [ebp+0x2f955bf8]
  40afa8:	or     al,0x69
  40afaa:	sbb    edx,DWORD PTR [edi+0x1afba528]
  40afb0:	aad    0x3c
  40afb2:	dec    edx
  40afb3:	pop    ebx
  40afb4:	fwait
  40afb5:	mov    esi,0x3729b8b2
  40afba:	jne    0x40af73
  40afbc:	push   ecx
  40afbd:	cmp    BYTE PTR [ebx+0xe17f70],bh
  40afc3:	jae    0x40afd5
  40afc5:	dec    edi
  40afc6:	xor    eax,0x6bdcb428
  40afcb:	sub    BYTE PTR [ebp-0x9f00272],bh
  40afd1:	sahf   
  40afd2:	inc    ebx
  40afd3:	rol    BYTE PTR [ebx+0xa],1
  40afd6:	jns    0x40b008
  40afd8:	pop    ds
  40afd9:	push   ebx
  40afda:	jne    0x40afad
  40afdc:	mov    ah,0xfe
  40afde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40afdf:	nop
  40afe0:	ins    BYTE PTR es:[edi],dx
  40afe1:	in     al,0x58
  40afe3:	nop
  40afe4:	lock test BYTE PTR [esi-0xe],0x1d
  40afe9:	add    al,0x1a
  40afeb:	xor    dl,cl
  40afed:	dec    esi
  40afee:	ja     0x40afc7
  40aff0:	(bad)  
  40aff1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aff2:	lods   al,BYTE PTR ds:[esi]
  40aff3:	leave  
  40aff4:	(bad)  
  40aff5:	cli    
  40aff6:	adc    DWORD PTR [ecx+0x5eabd06d],eax
  40affc:	push   edi
  40affd:	call   0x5232564c
  40b002:	gs icebp 
  40b004:	das    
  40b005:	pop    edx
  40b006:	test   BYTE PTR [edi+0x2a],bh
  40b009:	xlat   BYTE PTR ds:[ebx]
  40b00a:	mov    DWORD PTR [esi+eiz*1],edi
  40b00d:	mov    ecx,0x8b9c0ede
  40b012:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b013:	dec    edx
  40b014:	fstp   st(0)
  40b016:	sub    BYTE PTR [esi],bl
  40b018:	xor    esp,DWORD PTR [edx]
  40b01a:	fdiv   DWORD PTR [ebp+0x25e1f6f6]
  40b020:	dec    edx
  40b021:	test   eax,0xab7f4432
  40b026:	jmp    0xc4f3:0x78d99cc4
  40b02d:	xchg   ecx,eax
  40b02e:	loopne 0x40b022
  40b030:	mov    dh,0xcf
  40b032:	jle    0x40b05d
  40b034:	out    dx,eax
  40b035:	je     0x40afd5
  40b037:	loope  0x40afcb
  40b039:	pop    esp
  40b03a:	and    eax,0xa032a612
  40b03f:	xchg   esi,eax
  40b040:	icebp  
  40b041:	fistp  DWORD PTR ds:0x5aa4060b
  40b047:	push   edx
  40b048:	hlt    
  40b049:	jecxz  0x40b031
  40b04b:	jbe    0x40b0bf
  40b04d:	add    DWORD PTR [edx+0x76],esi
  40b050:	icebp  
  40b051:	addr16 ret 
  40b053:	outs   dx,DWORD PTR ds:[esi]
  40b054:	ror    DWORD PTR [edi+0x65f363d2],cl
  40b05a:	dec    ebp
  40b05b:	(bad)  
  40b05c:	sbb    al,ch
  40b05e:	push   ds
  40b05f:	jp     0x40b0da
  40b061:	inc    ebp
  40b062:	scas   al,BYTE PTR es:[edi]
  40b063:	inc    eax
  40b064:	jbe    0x40b029
  40b066:	mov    ds:0xb7cff150,eax
  40b06b:	pop    ebx
  40b06c:	adc    cl,BYTE PTR [edx+edi*1]
  40b06f:	(bad)
  40b072:	repz mov cl,0x1c
  40b075:	mov    dh,0x47
  40b077:	imul   edx,DWORD PTR [ecx],0x35
  40b07a:	dec    ecx
  40b07b:	and    eax,0xc7bfce0d
  40b080:	pop    edi
  40b081:	and    eax,0x73b21ed5
  40b086:	fstp   DWORD PTR [esi+0x41]
  40b089:	loop   0x40b068
  40b08b:	xchg   ebx,ebx
  40b08d:	or     ebx,ebx
  40b08f:	mov    al,ds:0x2885dbda
  40b094:	push   esp
  40b095:	xchg   edx,eax
  40b096:	(bad)  
  40b097:	dec    ebx
  40b098:	int3   
  40b099:	neg    DWORD PTR [eax+ebp*1+0x73]
  40b09d:	lds    esi,FWORD PTR cs:[ecx+ebx*8-0x9c72730]
  40b0a5:	jno    0x40b10d
  40b0a7:	ja     0x40b0eb
  40b0a9:	dec    esi
  40b0aa:	xchg   esp,eax
  40b0ab:	pushf  
  40b0ac:	(bad)  
  40b0ad:	xchg   BYTE PTR [esi-0x42075faa],bh
  40b0b3:	dec    ebx
  40b0b4:	test   DWORD PTR cs:[ecx-0xbe5bc02],ebx
  40b0bb:	cs clc 
  40b0bd:	test   BYTE PTR ds:0xd63db086,bl
  40b0c3:	jmp    0x4fb4:0x5d223912
  40b0ca:	inc    ebx
  40b0cb:	lea    ebp,[esi-0x51]
  40b0ce:	pop    ds
  40b0cf:	out    0x63,eax
  40b0d1:	enter  0x24,0x9d
  40b0d5:	(bad)  
  40b0d6:	cmp    edx,DWORD PTR [edi-0x2b75feb7]
  40b0dc:	jno    0x40b08e
  40b0de:	pusha  
  40b0df:	pop    eax
  40b0e0:	scas   al,BYTE PTR es:[edi]
  40b0e1:	in     al,0x9b
  40b0e3:	scas   al,BYTE PTR es:[edi]
  40b0e4:	jecxz  0x40b06a
  40b0e6:	mov    ch,BYTE PTR [ebp+0x6b068fd3]
  40b0ec:	call   0x24d0181a
  40b0f1:	jae    0x40b07d
  40b0f3:	inc    ebx
  40b0f4:	(bad)  
  40b0f5:	test   al,0x70
  40b0f7:	into   
  40b0f8:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  40b0fa:	mov    edi,DWORD PTR [esi+ebx*2+0x5fe68774]
  40b101:	das    
  40b102:	dec    ecx
  40b103:	je     0x40b129
  40b105:	push   edx
  40b106:	sub    eax,0xe7672123
  40b10b:	jne    0x40b143
  40b10d:	sbb    eax,0x7797830
  40b112:	dec    esi
  40b113:	jge    0x40b124
  40b115:	dec    ecx
  40b116:	xor    eax,0xd438a917
  40b11b:	pop    eax
  40b11c:	scas   eax,DWORD PTR es:[edi]
  40b11d:	dec    ebx
  40b11e:	or     al,0xc2
  40b120:	popa   
  40b121:	pop    edx
  40b122:	stos   BYTE PTR es:[edi],al
  40b123:	dec    ebx
  40b124:	sbb    al,0xaf
  40b126:	popf   
  40b127:	shl    DWORD PTR [ebp+eiz*2+0x6b],cl
  40b12b:	sub    al,0x5b
  40b12d:	push   ebp
  40b12e:	fwait
  40b12f:	push   ebx
  40b130:	test   DWORD PTR ds:0x76155701,eax
  40b136:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b137:	inc    ecx
  40b138:	scas   al,BYTE PTR es:[edi]
  40b139:	and    cl,bh
  40b13b:	adc    dl,BYTE PTR [eax+0xacccf57]
  40b141:	mov    DWORD PTR [edx+0x5db6e8de],0x56cc87a1
  40b14b:	in     al,dx
  40b14c:	das    
  40b14d:	mov    BYTE PTR [ebp-0x25e545e],bl
  40b153:	leave  
  40b154:	cmp    BYTE PTR [ecx+0x6f1dbdaf],ah
  40b15a:	mov    BYTE PTR [edi],dl
  40b15c:	nop
  40b15d:	push   eax
  40b15e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b15f:	sar    ah,cl
  40b161:	inc    esp
  40b162:	ins    BYTE PTR es:[edi],dx
  40b163:	in     al,0xdf
  40b165:	pop    edx
  40b166:	pop    ebp
  40b167:	test   al,0x22
  40b169:	mov    bh,0xbc
  40b16b:	xchg   ecx,eax
  40b16c:	(bad)  
  40b16e:	pop    ebx
  40b16f:	mov    dh,0x47
  40b171:	mov    edx,0x1a3a77c7
  40b176:	inc    ebx
  40b177:	mov    esi,DWORD PTR ds:0xa01368a2
  40b17d:	jecxz  0x40b17e
  40b17f:	jge    0x40b177
  40b181:	int    0xf7
  40b183:	and    BYTE PTR [eax],ah
  40b185:	je     0x40b159
  40b187:	(bad)  
  40b188:	mov    edx,0xf26637b
  40b18d:	adc    al,0x9f
  40b18f:	dec    edx
  40b190:	jl     0x40b146
  40b192:	loopne 0x40b163
  40b194:	das    
  40b195:	xchg   esi,eax
  40b196:	and    BYTE PTR [ebp-0xe],ch
  40b199:	ret    0xd9b0
  40b19c:	test   DWORD PTR [eax-0x52],edi
  40b19f:	pop    ds
  40b1a0:	add    bl,BYTE PTR ds:0x45964f83
  40b1a6:	adc    DWORD PTR [esp+edx*8-0x1],ecx
  40b1aa:	fild   WORD PTR [eax-0x61004ce8]
  40b1b0:	in     eax,dx
  40b1b1:	xor    bh,BYTE PTR es:[esi+edx*8]
  40b1b5:	cdq    
  40b1b6:	sbb    DWORD PTR ds:0x4a14d89e,ebx
  40b1bc:	xor    eax,0xf59913b8
  40b1c1:	stc    
  40b1c2:	enter  0x2eaa,0x66
  40b1c6:	mov    ecx,0x48d00087
  40b1cb:	jae    0x40b1e0
  40b1cd:	xchg   ecx,eax
  40b1ce:	mov    BYTE PTR [eax-0x38e0a526],ch
  40b1d4:	jo     0x40b189
  40b1d6:	lods   eax,DWORD PTR ds:[esi]
  40b1d7:	aas    
  40b1d8:	xor    DWORD PTR [edi],0x68
  40b1db:	xchg   BYTE PTR [ebp-0x74],dl
  40b1de:	and    edx,edi
  40b1e0:	sub    DWORD PTR [eax+0x53a8b065],0x2364634d
  40b1ea:	int3   
  40b1eb:	test   DWORD PTR [edi+0xf34a7fb],ebp
  40b1f1:	fild   DWORD PTR [eax-0x17]
  40b1f4:	jmp    0x55a9:0x7d7c22e
  40b1fb:	jl     0x40b1bc
  40b1fd:	fdivr  DWORD PTR [edi+0x71]
  40b200:	jo     0x40b1ec
  40b202:	ja     0x40b260
  40b204:	(bad)  
  40b205:	jmp    0x3085:0x874cf096
  40b20c:	push   edx
  40b20d:	ss (bad) 
  40b20f:	xchg   edx,eax
  40b210:	(bad)  
  40b212:	mov    bh,0x1e
  40b214:	jbe    0x40b265
  40b216:	jae    0x40b208
  40b218:	stos   DWORD PTR es:[edi],eax
  40b219:	or     eax,0x97677782
  40b21e:	xor    dh,BYTE PTR [esi]
  40b220:	(bad)  
  40b221:	call   0xb58761f5
  40b226:	push   ecx
  40b227:	push   edx
  40b228:	mov    eax,ds:0x5d6192dd
  40b22d:	pusha  
  40b22e:	retf   0xc525
  40b231:	inc    ebx
  40b232:	xchg   BYTE PTR [edi+0x7aa72326],bh
  40b238:	sub    eax,DWORD PTR [eax+0x1e5ab71f]
  40b23e:	dec    ebx
  40b23f:	mov    cl,cl
  40b241:	push   edi
  40b242:	mov    al,0xf1
  40b245:	mov    ?,WORD PTR [edi+0x65]
  40b248:	mov    al,0x70
  40b24a:	mov    ebx,0x85d32174
  40b24f:	xor    DWORD PTR [ebp-0x68ba3f4d],ebp
  40b255:	in     eax,0xba
  40b257:	pop    es
  40b258:	xor    DWORD PTR [eax-0x68],esp
  40b25b:	in     al,0x52
  40b25d:	lock cdq 
  40b25f:	test   BYTE PTR [edx-0x2c],dh
  40b262:	addr16 jmp 0x40b206
  40b265:	cs iret 
  40b267:	sbb    ch,cl
  40b269:	add    DWORD PTR [ecx],ebx
  40b26b:	jg     0x40b286
  40b26d:	int    0x1c
  40b26f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b270:	lds    esp,FWORD PTR [esi-0x1c]
  40b273:	mov    eax,0x8c773a95
  40b278:	push   esp
  40b279:	xor    DWORD PTR [ebx+0x34641225],edi
  40b27f:	xchg   edx,eax
  40b280:	mov    eax,ds:0x78e764b3
  40b285:	adc    al,0x7a
  40b287:	pusha  
  40b288:	inc    ecx
  40b289:	in     eax,0xba
  40b28b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b28c:	mov    eax,esp
  40b28e:	push   ss
  40b28f:	xchg   ebp,eax
  40b290:	cmp    eax,0x211b887d
  40b295:	mov    dh,0xa1
  40b297:	dec    eax
  40b298:	inc    esi
  40b299:	dec    eax
  40b29a:	push   0x66
  40b29c:	inc    ebp
  40b29d:	cmp    esi,DWORD PTR [esi]
  40b29f:	xchg   ebx,eax
  40b2a0:	pop    esp
  40b2a1:	sahf   
  40b2a2:	and    DWORD PTR ds:0xb606f62d,esp
  40b2a8:	cdq    
  40b2a9:	into   
  40b2aa:	mov    bl,0xe1
  40b2ac:	sbb    DWORD PTR [esi-0x13976d23],edx
  40b2b2:	or     DWORD PTR [esi-0x70],ebx
  40b2b5:	adc    ecx,0x4a
  40b2b8:	test   bh,cl
  40b2ba:	stos   DWORD PTR es:[edi],eax
  40b2bb:	fisubr WORD PTR [edx]
  40b2bd:	out    dx,al
  40b2be:	sti    
  40b2bf:	loopne 0x40b264
  40b2c1:	fisttp WORD PTR [edx-0x40]
  40b2c4:	and    al,0x18
  40b2c6:	sub    ecx,DWORD PTR [esi-0x1f7955c]
  40b2cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b2cd:	mov    ah,BYTE PTR [ebx]
  40b2cf:	jge    0x40b2a1
  40b2d1:	retf   
  40b2d2:	dec    esp
  40b2d3:	in     eax,dx
  40b2d4:	lds    esp,FWORD PTR [ebp-0x56]
  40b2d7:	es test al,0xa5
  40b2da:	xchg   BYTE PTR [edx+0x7f],bh
  40b2dd:	adc    esi,DWORD PTR [esi]
  40b2df:	mov    cl,BYTE PTR [edx+0x51]
  40b2e2:	(bad)  
  40b2e4:	dec    esp
  40b2e6:	shl    esi,cl
  40b2e8:	jno    0x40b304
  40b2ea:	mov    al,0x8c
  40b2ec:	ficom  DWORD PTR [esi]
  40b2ee:	adc    edx,DWORD PTR [ebp-0x4d137c44]
  40b2f4:	data16 ins BYTE PTR es:[edi],dx
  40b2f6:	sub    ch,0x1e
  40b2f9:	inc    ebp
  40b2fa:	(bad)  
  40b2fb:	xlat   BYTE PTR ds:[ebx]
  40b2fc:	retf   0x51c0
  40b2ff:	push   eax
  40b300:	int3   
  40b301:	mov    edi,ecx
  40b303:	jmp    0x40b293
  40b305:	hlt    
  40b306:	dec    ebx
  40b307:	fmul   DWORD PTR [edx+0x27]
  40b30a:	or     BYTE PTR [ecx-0x6f65ff2c],al
  40b310:	fst    QWORD PTR [edi-0x5f]
  40b313:	xor    al,0xc
  40b315:	fbstp  TBYTE PTR [esi+ecx*1+0x2f]
  40b31a:	dec    edi
  40b31b:	push   es
  40b31c:	bound  esp,QWORD PTR ds:0x6d3fe0c4
  40b322:	xchg   ebx,eax
  40b323:	(bad)  
  40b324:	dec    esi
  40b325:	not    BYTE PTR [ebp-0x3d]
  40b328:	pop    ecx
  40b329:	enter  0xa25c,0x14
  40b32d:	and    edx,DWORD PTR [eax-0x39]
  40b330:	scas   al,BYTE PTR es:[edi]
  40b331:	inc    edi
  40b332:	add    DWORD PTR ds:0x969b1cfb,ebp
  40b338:	xchg   BYTE PTR [esi],ch
  40b33a:	mov    eax,0x27703612
  40b33f:	outs   dx,BYTE PTR ds:[esi]
  40b340:	std    
  40b341:	int    0x39
  40b343:	out    dx,eax
  40b344:	lea    esi,[esi-0x7525c121]
  40b34a:	ins    BYTE PTR es:[edi],dx
  40b34b:	or     al,0x22
  40b34d:	sbb    BYTE PTR [eax+0x39ab57d3],bl
  40b353:	and    DWORD PTR [ebx+0x5dc5c88a],esp
  40b359:	shl    DWORD PTR [ebx+0x54],cl
  40b35c:	ss jp  0x40b31a
  40b35f:	in     eax,dx
  40b360:	jne    0x40b3cc
  40b362:	jo     0x40b381
  40b364:	mov    dh,0xd7
  40b366:	cmp    DWORD PTR [ebp+0x68f6afd1],eax
  40b36c:	sar    DWORD PTR [ecx-0x5b],cl
  40b36f:	mov    edx,0xd9d48718
  40b374:	lods   eax,DWORD PTR ds:[esi]
  40b375:	clc    
  40b376:	jb     0x40b3bd
  40b378:	aad    0x6d
  40b37a:	clc    
  40b37b:	iret   
  40b37c:	pop    ecx
  40b37d:	loopne 0x40b339
  40b37f:	cmp    al,0xe2
  40b381:	inc    eax
  40b382:	mov    al,ds:0x330c1fbb
  40b387:	pop    edi
  40b388:	loopne 0x40b358
  40b38a:	mov    bh,0xe7
  40b38c:	pop    esi
  40b38d:	retf   
  40b38e:	test   eax,0x6a5b6eee
  40b393:	hlt    
  40b394:	adc    DWORD PTR [edi-0xff0bac9],ecx
  40b39a:	push   esp
  40b39b:	jno    0x40b33c
  40b39d:	mov    ch,0x60
  40b39f:	cmp    al,0x29
  40b3a1:	xor    eax,0x7549a29f
  40b3a6:	iret   
  40b3a7:	xor    dl,BYTE PTR [edx]
  40b3a9:	clc    
  40b3aa:	or     eax,0xcfdfc6ee
  40b3af:	cld    
  40b3b0:	mov    ch,0x1
  40b3b2:	inc    eax
  40b3b3:	call   0xab918335
  40b3b8:	adc    BYTE PTR [ecx+0xad8c966],dl
  40b3be:	sub    bh,bh
  40b3c0:	and    ebx,DWORD PTR [edx]
  40b3c2:	aas    
  40b3c3:	in     al,dx
  40b3c4:	mov    edx,0x48a40516
  40b3c9:	xor    eax,0xf0db5acb
  40b3ce:	test   al,0xc7
  40b3d0:	pop    ebp
  40b3d1:	call   0xa62e:0xc6958cfe
  40b3d8:	dec    esp
  40b3d9:	pop    ss
  40b3da:	pop    ss
  40b3db:	jmp    0x40b43e
  40b3dd:	(bad)  
  40b3de:	lods   al,BYTE PTR ds:[esi]
  40b3df:	add    edi,DWORD PTR [eax-0x7f]
  40b3e2:	call   0x6d0078f7
  40b3e7:	(bad)  
  40b3e8:	dec    ecx
  40b3e9:	stos   BYTE PTR es:[edi],al
  40b3ea:	shr    BYTE PTR [esi-0x55],1
  40b3ed:	mov    al,ds:0xa67a6cc4
  40b3f2:	inc    edi
  40b3f3:	lds    esp,FWORD PTR [esi+0x2ff35956]
  40b3f9:	add    ah,BYTE PTR [edi]
  40b3fb:	(bad)  
  40b3fc:	sahf   
  40b3fd:	pop    esp
  40b3fe:	xchg   esp,eax
  40b3ff:	das    
  40b400:	dec    edi
  40b401:	popf   
  40b402:	xor    ah,BYTE PTR [esi*4+0x2d563804]
  40b409:	and    bl,bl
  40b40b:	fnstenv [ebp+0x61122fb9]
  40b411:	fisubr WORD PTR [ebx-0x33eac16f]
  40b417:	push   ds
  40b418:	dec    esp
  40b419:	lods   eax,DWORD PTR ds:[esi]
  40b41a:	addr16 enter 0xbbe7,0x9f
  40b41f:	cmc    
  40b420:	loop   0x40b3fd
  40b422:	pop    edx
  40b423:	jp     0x40b3f1
  40b425:	sti    
  40b426:	loop   0x40b436
  40b428:	push   0xffffff91
  40b42a:	or     esi,DWORD PTR ds:0xa53506a5
  40b430:	pop    esp
  40b431:	jae    0x40b495
  40b433:	sbb    DWORD PTR [edx+0x1c],esp
  40b436:	outs   dx,BYTE PTR ds:[esi]
  40b437:	pop    ecx
  40b438:	dec    ebx
  40b439:	pop    ds
  40b43a:	nop
  40b43b:	mov    WORD PTR [ecx-0x5a9b7c9a],ds
  40b441:	je     0x40b3f6
  40b443:	es push ebp
  40b445:	mov    ecx,0x8bc34e87
  40b44a:	or     BYTE PTR [eax+ecx*1+0x62b2bc5e],0x2
  40b452:	adc    al,0x5e
  40b454:	aaa    
  40b455:	fwait
  40b456:	mov    esi,0xd20c3819
  40b45b:	fidivr DWORD PTR es:[ebx]
  40b45e:	adc    ch,ch
  40b460:	aad    0xb2
  40b462:	outs   dx,DWORD PTR ds:[esi]
  40b463:	dec    edx
  40b464:	sbb    eax,DWORD PTR [esi]
  40b466:	stos   BYTE PTR es:[edi],al
  40b467:	(bad)  
  40b468:	dec    ebp
  40b469:	inc    edi
  40b46a:	xchg   ebp,eax
  40b46b:	inc    ebx
  40b46c:	int3   
  40b46d:	nop
  40b46e:	lea    eax,[esi+0x56]
  40b471:	call   0x4821:0x1d91e8a1
  40b478:	outs   dx,DWORD PTR ds:[esi]
  40b479:	push   edx
  40b47a:	nop
  40b47b:	pop    ds
  40b47c:	lods   al,BYTE PTR ds:[esi]
  40b47d:	sbb    eax,0xf727a890
  40b482:	bound  edx,QWORD PTR [ebp-0x19]
  40b485:	xor    al,dl
  40b487:	repnz mov ds:0xa5d23cf8,al
  40b48d:	popf   
  40b48e:	mov    ch,0xf4
  40b490:	in     eax,dx
  40b491:	out    0x81,al
  40b493:	cdq    
  40b494:	jns    0x40b41d
  40b496:	inc    esp
  40b497:	dec    eax
  40b498:	add    al,0x45
  40b49a:	jo     0x40b4a7
  40b49c:	repnz call 0x8884:0xc6f3307c
  40b4a4:	(bad)  
  40b4a5:	jecxz  0x40b4d4
  40b4a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b4a8:	(bad)  
  40b4a9:	ficom  DWORD PTR [ebx-0x67cad5fe]
  40b4af:	shl    BYTE PTR [eax],cl
  40b4b1:	dec    edi
  40b4b2:	cmp    DWORD PTR cs:[edi],edx
  40b4b5:	adc    al,BYTE PTR [edx]
  40b4b7:	jbe    0x40b459
  40b4b9:	or     DWORD PTR ds:0xa99c10d5,0x46b372b2
  40b4c3:	dec    eax
  40b4c4:	xchg   esp,eax
  40b4c5:	and    bl,ch
  40b4c7:	push   es
  40b4c8:	xchg   ebp,eax
  40b4c9:	xor    BYTE PTR [edi+0x20],dl
  40b4cc:	adc    dh,BYTE PTR [ebx+0x2797ad26]
  40b4d2:	retf   0x1d7c
  40b4d5:	retf   0x4a8b
  40b4d8:	push   ebp
  40b4d9:	cmp    eax,DWORD PTR [edi]
  40b4db:	mov    WORD PTR [eax],?
  40b4dd:	lock pop ebx
  40b4df:	xor    esp,DWORD PTR [ebp-0x47]
  40b4e2:	adc    eax,0x5c494cd8
  40b4e7:	and    al,0xd5
  40b4e9:	dec    esi
  40b4ea:	cld    
  40b4eb:	xor    BYTE PTR [edi-0x6ea26fa],dl
  40b4f1:	jb     0x40b51f
  40b4f3:	dec    edi
  40b4f4:	test   al,0xc7
  40b4f6:	outs   dx,DWORD PTR gs:[esi]
  40b4f8:	xchg   ebx,eax
  40b4f9:	daa    
  40b4fa:	popa   
  40b4fb:	add    edx,DWORD PTR ds:0xf427422
  40b501:	mov    ah,BYTE PTR [esi-0x696f695c]
  40b507:	fs and al,0xfd
  40b50a:	jp     0x1af1d2c6
  40b510:	xchg   DWORD PTR [esi-0x1a07852a],eax
  40b516:	push   edx
  40b517:	or     esi,ebx
  40b519:	push   edx
  40b51a:	pop    edx
  40b51b:	lock adc eax,0xbaca44aa
  40b521:	fdivr  st,st(6)
  40b523:	(bad)  
  40b524:	adc    DWORD PTR [ebp-0x368d3d86],edx
  40b52a:	ss jp  0x40b4fa
  40b52d:	into   
  40b52e:	pop    edx
  40b52f:	jno    0x40b563
  40b531:	push   ss
  40b532:	fs jge 0x40b4bb
  40b535:	arpl   si,sp
  40b537:	mov    esp,0xfafee68a
  40b53c:	test   DWORD PTR ds:0x6b69794a,ebx
  40b542:	(bad)  [eax]
  40b544:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b545:	sbb    al,0x73
  40b547:	in     ax,dx
  40b549:	jne    0x40b513
  40b54b:	or     al,0xe5
  40b54d:	cmp    ecx,DWORD PTR [ecx-0x16]
  40b550:	lods   al,BYTE PTR ds:[esi]
  40b551:	jmp    0xd019dcc
  40b556:	pop    eax
  40b557:	div    BYTE PTR [esi*2-0x7eb0a3a5]
  40b55e:	sub    eax,0x99f2cc98
  40b563:	sbb    BYTE PTR [edx],dl
  40b565:	sbb    ebx,ecx
  40b567:	daa    
  40b568:	xor    BYTE PTR [edx+0x587408bd],bl
  40b56e:	xchg   BYTE PTR [ecx+0x468928b9],dl
  40b574:	mov    eax,0xa5d8f34b
  40b579:	mov    dl,bl
  40b57b:	lods   al,BYTE PTR cs:[esi]
  40b57d:	jp     0x40b5a0
  40b57f:	sbb    DWORD PTR [edi-0x49],ecx
  40b582:	ja     0x40b547
  40b584:	cld    
  40b585:	(bad)  
  40b587:	ror    edx,cl
  40b589:	sahf   
  40b58a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b58b:	aas    
  40b58c:	mov    edi,eax
  40b58e:	les    eax,FWORD PTR [eax]
  40b590:	push   es
  40b591:	lahf   
  40b592:	mov    al,ds:0x6bf9c99a
  40b597:	(bad)  
  40b599:	xor    DWORD PTR [edi+0x7a],esp
  40b59c:	int    0xa4
  40b59e:	mov    al,0xf5
  40b5a0:	in     eax,dx
  40b5a1:	jge    0x40b527
  40b5a3:	mov    cl,0x3a
  40b5a5:	mov    dh,BYTE PTR [esi+eiz*1+0x16]
  40b5a9:	ds int 0x48
  40b5ac:	(bad)  
  40b5ad:	leave  
  40b5ae:	scas   eax,DWORD PTR es:[edi]
  40b5af:	and    eax,0xba97afab
  40b5b4:	jo     0x40b5b8
  40b5b6:	mov    esi,0xfece7777
  40b5bb:	cmp    bh,BYTE PTR [esi+ebx*2]
  40b5be:	inc    edx
  40b5bf:	xor    eax,0xd290a025
  40b5c4:	mov    edx,0xa87dc084
  40b5c9:	cmp    eax,DWORD PTR [ecx+edx*2]
  40b5cc:	test   DWORD PTR [edx+edi*8],edi
  40b5cf:	pusha  
  40b5d0:	stc    
  40b5d1:	mov    edi,0x68b912d
  40b5d6:	pop    ss
  40b5d7:	xor    eax,esi
  40b5d9:	add    eax,0x96e7d2cd
  40b5de:	and    al,0x7
  40b5e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b5e1:	or     DWORD PTR [esi],edi
  40b5e3:	shl    ah,0xf9
  40b5e6:	ror    eax,cl
  40b5e8:	jns    0x40b570
  40b5ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b5eb:	xchg   ecx,eax
  40b5ec:	xchg   ecx,eax
  40b5ed:	arpl   ax,sp
  40b5ef:	mov    ebp,0xdde9b675
  40b5f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b5f5:	std    
  40b5f6:	inc    edi
  40b5f7:	mov    ebp,0x35e1149c
  40b5fc:	xchg   esi,eax
  40b5fd:	and    DWORD PTR [esi],ebx
  40b5ff:	or     edi,DWORD PTR [esi+0x66810606]
  40b605:	xchg   edi,eax
  40b606:	xchg   ecx,eax
  40b607:	and    ecx,esi
  40b609:	cmp    ecx,ecx
  40b60b:	or     al,0x4a
  40b60d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b60e:	push   0xedf9746c
  40b613:	jb     0x40b669
  40b615:	and    eax,ebx
  40b617:	jmp    0x13232e5f
  40b61c:	sub    eax,0x43bf223c
  40b621:	inc    ecx
  40b622:	push   cs
  40b623:	imul   ebx,DWORD PTR [edx-0x32],0x74
  40b627:	in     al,dx
  40b628:	imul   ecx,DWORD PTR [eax],0xffffffa1
  40b62b:	(bad)  
  40b62c:	lods   al,BYTE PTR ds:[esi]
  40b62d:	stos   BYTE PTR es:[edi],al
  40b62e:	dec    ebx
  40b62f:	stos   DWORD PTR es:[edi],eax
  40b630:	inc    edx
  40b631:	or     eax,0x259c2d04
  40b636:	ss xor eax,0xf60a5b46
  40b63c:	mov    ss,WORD PTR [eax-0x372d1558]
  40b642:	mov    esi,0x6872c8e9
  40b647:	mov    al,0xc9
  40b649:	std    
  40b64a:	mov    edx,0x9e0e6ccd
  40b64f:	shr    BYTE PTR ds:0x22cf7ef5,cl
  40b655:	lds    eax,FWORD PTR [ebp+0x2f499684]
  40b65b:	jbe    0x40b601
  40b65d:	ss ret 
  40b65f:	sbb    eax,0x8163d260
  40b664:	scas   al,BYTE PTR es:[edi]
  40b665:	adc    al,0x5a
  40b667:	(bad)  
  40b668:	in     al,dx
  40b669:	pop    esi
  40b66a:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  40b66c:	push   cs
  40b66d:	aad    0xa6
  40b66f:	sub    eax,0xd282f382
  40b674:	stc    
  40b675:	fsubr  DWORD PTR [ebx+0xd]
  40b678:	adc    DWORD PTR [eax+esi*4+0x1f],ecx
  40b67c:	adc    eax,0x5706d
  40b681:	mov    cl,0x70
  40b683:	and    al,0x5f
  40b685:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b687:	xor    ebx,DWORD PTR [edi+0x3c]
  40b68a:	jb     0x40b614
  40b68c:	add    DWORD PTR [eax+0x75a0905d],ebp
  40b692:	jnp    0x40b6d2
  40b694:	and    esp,DWORD PTR [eax]
  40b696:	in     al,0x54
  40b698:	pop    esi
  40b699:	or     cl,BYTE PTR [di-0x11e6]
  40b69e:	std    
  40b69f:	icebp  
  40b6a0:	push   ss
  40b6a1:	aaa    
  40b6a2:	jmp    edi
  40b6a4:	sbb    eax,0x6c0fbaa5
  40b6a9:	dec    esi
  40b6aa:	sub    ecx,esi
  40b6ac:	fcomi  st,st(7)
  40b6ae:	cmp    esp,ebx
  40b6b0:	cwde   
  40b6b1:	jnp    0x40b711
  40b6b3:	dec    ebx
  40b6b4:	sub    eax,0xf6038a68
  40b6b9:	add    BYTE PTR [ecx+ecx*2+0x1b],bl
  40b6bd:	xchg   ebp,eax
  40b6be:	xchg   BYTE PTR [ebx+ebx*2],ch
  40b6c1:	cmp    edi,DWORD PTR [eax+esi*1+0x4]
  40b6c5:	jmp    0x40b6f9
  40b6c7:	xchg   ebp,eax
  40b6c8:	push   es
  40b6c9:	cwde   
  40b6ca:	popa   
  40b6cb:	test   eax,0x48242446
  40b6d0:	push   es
  40b6d1:	fdiv   st(6),st
  40b6d3:	pop    ebx
  40b6d4:	ins    DWORD PTR es:[edi],dx
  40b6d5:	mov    eax,0xcec4e482
  40b6da:	mov    al,0xaf
  40b6dc:	or     DWORD PTR [ebx+0x3f],ecx
  40b6df:	jmp    0xf1dd:0x2fedc781
  40b6e6:	fisub  WORD PTR ds:0xec0c11c
  40b6ec:	retf   0xb75e
  40b6ef:	add    bl,BYTE PTR [edi+0x6f]
  40b6f2:	push   eax
  40b6f3:	outs   dx,BYTE PTR ds:[esi]
  40b6f4:	mov    esi,0xf0e8a4bd
  40b6f9:	sub    eax,0x9c878fd9
  40b6fe:	icebp  
  40b6ff:	pop    ebp
  40b700:	and    cl,BYTE PTR [edi]
  40b702:	jecxz  0x40b705
  40b704:	push   ss
  40b705:	out    dx,eax
  40b706:	dec    edx
  40b707:	inc    edx
  40b708:	fsubrp st(0),st
  40b70a:	or     DWORD PTR fs:[ebx+0x6b1f7f34],ebx
  40b711:	pop    esi
  40b712:	dec    ebp
  40b713:	pop    ss
  40b714:	push   edi
  40b715:	push   ebp
  40b716:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b717:	cmp    al,0x3
  40b719:	fld    DWORD PTR [ebp-0x63]
  40b71c:	stc    
  40b71d:	fld    TBYTE PTR [edi+ecx*4]
  40b720:	nop
  40b721:	rol    DWORD PTR [edi+ebp*4-0x1ae6baa1],0x96
  40b729:	(bad)  
  40b72a:	(bad)  
  40b72b:	dec    ebx
  40b72c:	xchg   ecx,eax
  40b72d:	xor    BYTE PTR [ebx+0x3389cc6d],ah
  40b733:	clc    
  40b734:	addr16 cli 
  40b736:	jnp    0x40b6fa
  40b738:	xchg   esp,eax
  40b739:	js     0x40b762
  40b73b:	or     DWORD PTR [edx],edx
  40b73d:	iret   
  40b73e:	les    eax,FWORD PTR ds:0xa31c480c
  40b744:	jmp    0x7895:0xc0203654
  40b74b:	cmp    eax,ecx
  40b74d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b74e:	fnstsw WORD PTR [ebx-0xf4305db]
  40b754:	jg     0x40b7bc
  40b756:	xchg   ebp,eax
  40b757:	sub    al,0x37
  40b759:	push   es
  40b75a:	scas   eax,DWORD PTR es:[edi]
  40b75b:	cld    
  40b75c:	lock jl 0x40b7db
  40b75f:	mov    esi,0x960b0030
  40b764:	jl     0x40b753
  40b766:	in     al,0x2
  40b768:	hlt    
  40b769:	int3   
  40b76a:	clc    
  40b76b:	jp     0x40b6fd
  40b76d:	adc    DWORD PTR [ebp-0x32],esi
  40b770:	imul   edi,DWORD PTR [esi],0xd
  40b773:	cdq    
  40b774:	lods   al,BYTE PTR ds:[esi]
  40b775:	mov    ah,0x23
  40b777:	adc    ebx,esp
  40b779:	scas   eax,DWORD PTR es:[edi]
  40b77a:	mov    ds:0xdb310b67,al
  40b77f:	js     0x40b78a
  40b781:	test   al,0x25
  40b783:	jno    0x40b783
  40b785:	jmp    0x8d66:0xb722c30d
  40b78c:	pop    ds
  40b78d:	add    edi,ebp
  40b78f:	pop    esi
  40b790:	enter  0x2873,0xd8
  40b794:	sbb    DWORD PTR [ebp-0x5e],esp
  40b797:	aas    
  40b798:	iret   
  40b799:	pop    ecx
  40b79a:	dec    esi
  40b79b:	outs   dx,DWORD PTR ds:[esi]
  40b79c:	call   0x2963b773
  40b7a1:	mov    ecx,0xc51bd72c
  40b7a6:	jp     0x40b7f0
  40b7a8:	jl     0x40b7cb
  40b7aa:	xchg   esp,eax
  40b7ab:	lea    eax,[esi-0x5625fb80]
  40b7b1:	mov    ah,0x89
  40b7b3:	sbb    BYTE PTR [edi-0x80],bl
  40b7b6:	or     bh,dl
  40b7b8:	je     0x40b7a1
  40b7ba:	add    ecx,DWORD PTR [edx]
  40b7bc:	mov    bl,0x10
  40b7be:	imul   ebx,edi,0x5a5864b9
  40b7c4:	bswap  ebp
  40b7c6:	and    esi,edi
  40b7c8:	xchg   edi,eax
  40b7c9:	mov    edi,0xd82f63a6
  40b7ce:	or     DWORD PTR [esp+esi*1+0x69],edx
  40b7d2:	xchg   edx,esp
  40b7d4:	xor    al,BYTE PTR [ecx-0x5139aa96]
  40b7da:	ret    0xc497
  40b7dd:	ins    BYTE PTR es:[edi],dx
  40b7de:	jl     0x40b853
  40b7e0:	es xchg ax,ax
  40b7e3:	mov    dh,0x23
  40b7e5:	out    dx,al
  40b7e6:	fs fcmovu st,st(3)
  40b7e9:	jmp    0x40b867
  40b7eb:	pop    esp
  40b7ec:	ret    
  40b7ed:	xlat   BYTE PTR ds:[ebx]
  40b7ee:	fmul   st,st(6)
  40b7f0:	inc    ecx
  40b7f1:	imul   ebp,edi,0x11
  40b7f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b7f5:	mov    eax,ds:0xf2b3076e
  40b7fa:	xor    esp,DWORD PTR [ebp+0x1f4fb74a]
  40b800:	add    ecx,esi
  40b802:	aam    0x56
  40b804:	mov    ecx,0xfa7c1a80
  40b809:	pop    ebp
  40b80a:	dec    ebp
  40b80b:	inc    edx
  40b80c:	dec    esp
  40b80d:	add    eax,0xcb5a676a
  40b812:	mov    al,ds:0x548a2ad2
  40b817:	shr    bh,1
  40b819:	fimul  WORD PTR [esp+ebx*8]
  40b81c:	out    dx,al
  40b81d:	mov    al,ds:0x90120c05
  40b822:	(bad)  
  40b823:	or     al,0x7a
  40b825:	xor    BYTE PTR [edx-0x79b70bc0],0x60
  40b82c:	xchg   edx,eax
  40b82d:	dec    ecx
  40b82e:	(bad)  
  40b82f:	mov    edi,0xc830e5ad
  40b834:	je     0x40b888
  40b836:	and    al,0x21
  40b838:	xor    eax,0x7b41cfa1
  40b83d:	mov    esp,0x13862898
  40b842:	mov    esp,0x58758f82
  40b847:	xchg   edx,eax
  40b848:	push   ds
  40b849:	or     BYTE PTR ds:0xe7cd51a5,bl
  40b84f:	out    dx,eax
  40b850:	loop   0x40b889
  40b852:	adc    eax,0x2ea56a21
  40b857:	adc    esi,DWORD PTR [edi]
  40b859:	adc    DWORD PTR [eax-0x2e8abed2],eax
  40b85f:	or     eax,0x776e07d2
  40b864:	pop    esi
  40b865:	daa    
  40b866:	sbb    edi,DWORD PTR [eax]
  40b868:	add    eax,0x142183b8
  40b86d:	shl    DWORD PTR [eax],1
  40b86f:	inc    esp
  40b870:	xchg   edi,eax
  40b871:	mov    WORD PTR [edi-0x6f],cs
  40b874:	sub    ebp,DWORD PTR [ecx-0x4f]
  40b877:	or     BYTE PTR [esi-0x5b],dl
  40b87a:	fld    TBYTE PTR [ecx+esi*4-0x55d34895]
  40b881:	push   eax
  40b882:	xchg   esp,eax
  40b883:	inc    edi
  40b884:	lods   al,BYTE PTR ds:[esi]
  40b885:	bound  edi,QWORD PTR [eax+0x2c]
  40b888:	mov    esi,edx
  40b88a:	test   ah,ah
  40b88c:	inc    ebx
  40b88d:	mov    eax,0x873131e8
  40b892:	(bad)  
  40b893:	fcmovu st,st(0)
  40b895:	push   ds
  40b896:	push   esi
  40b897:	jb     0x40b8c2
  40b899:	fld    TBYTE PTR [ebp+0x7c]
  40b89c:	gs ss xchg edx,eax
  40b89f:	(bad)  
  40b8a0:	mov    es,esp
  40b8a2:	dec    BYTE PTR [edi+0x55]
  40b8a5:	push   ebx
  40b8a6:	lods   eax,DWORD PTR ds:[esi]
  40b8a7:	dec    edi
  40b8a8:	bound  esp,QWORD PTR [edx+0xaa1ee8b]
  40b8ae:	mov    esi,0xad3f7b59
  40b8b3:	add    al,0x94
  40b8b5:	and    edi,edi
  40b8b7:	stos   DWORD PTR es:[edi],eax
  40b8b8:	test   BYTE PTR [eax],bl
  40b8ba:	enter  0x839b,0x3e
  40b8be:	fdivr  DWORD PTR [edi]
  40b8c0:	fbstp  TBYTE PTR [edi]
  40b8c2:	push   ebx
  40b8c3:	inc    esi
  40b8c4:	mov    ah,0x49
  40b8c6:	xor    esi,esi
  40b8c8:	ror    bl,cl
  40b8ca:	jnp    0x40b897
  40b8cc:	mov    ah,0x69
  40b8ce:	sbb    eax,0xb52ab884
  40b8d3:	and    al,0x2c
  40b8d5:	(bad)  
  40b8d7:	sub    dh,cl
  40b8d9:	mov    ah,0xe1
  40b8db:	xor    BYTE PTR [edi],bh
  40b8dd:	pop    esp
  40b8de:	lods   eax,DWORD PTR ds:[esi]
  40b8df:	dec    edi
  40b8e0:	jmp    0x40b93f
  40b8e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b8e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b8e4:	cld    
  40b8e5:	(bad)
  40b8e8:	xchg   edx,eax
  40b8e9:	push   ds
  40b8ea:	gs je  0x40b8fc
  40b8ed:	lods   eax,DWORD PTR ds:[esi]
  40b8ee:	xchg   edx,eax
  40b8ef:	mov    ch,0xd2
  40b8f1:	pop    esp
  40b8f2:	inc    ebp
  40b8f3:	dec    ecx
  40b8f4:	mov    DWORD PTR [ebp+ebx*8-0x22bb6208],edx
  40b8fb:	mov    al,ds:0x1af784bc
  40b900:	out    dx,al
  40b901:	push   edi
  40b902:	jmp    0xd825:0xedcc76a5
  40b909:	es stc 
  40b90b:	xchg   bl,ch
  40b90d:	(bad)  
  40b90e:	clc    
  40b90f:	hlt    
  40b910:	icebp  
  40b911:	cmp    ecx,DWORD PTR [ebx+0x45]
  40b914:	push   eax
  40b915:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b916:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b917:	sub    esi,DWORD PTR [esi+ecx*8-0x23]
  40b91b:	adc    al,0xb
  40b91d:	and    ebp,edi
  40b91f:	dec    eax
  40b920:	aam    0x27
  40b922:	scas   eax,DWORD PTR es:[edi]
  40b923:	push   esi
  40b924:	and    eax,0x8fe825b2
  40b929:	jmp    0x735066e1
  40b92e:	jl     0x40b96d
  40b930:	popf   
  40b931:	dec    eax
  40b932:	add    al,0x47
  40b934:	rcr    BYTE PTR [eax-0x20],cl
  40b937:	(bad)  
  40b938:	sbb    ch,BYTE PTR [edi]
  40b93a:	add    BYTE PTR [eax+0x26aa09],0x76
  40b941:	cwde   
  40b942:	je     0x40b91b
  40b944:	leave  
  40b945:	ins    BYTE PTR es:[edi],dx
  40b946:	xchg   ebp,eax
  40b947:	mov    ?,WORD PTR [esi-0x2d2b6e72]
  40b94d:	mov    ch,0x3b
  40b94f:	dec    BYTE PTR [eax+0x551ac4c4]
  40b955:	call   DWORD PTR [ebx+0x59]
  40b958:	or     dl,al
  40b95a:	xchg   ebx,eax
  40b95b:	stos   BYTE PTR es:[edi],al
  40b95c:	adc    al,0x1a
  40b95e:	jmp    0x42ae2072
  40b963:	and    al,0xac
  40b965:	pop    eax
  40b966:	sbb    ebp,DWORD PTR [ecx]
  40b968:	adc    eax,0x55aad475
  40b96d:	into   
  40b96e:	fadd   st,st(6)
  40b970:	mov    al,ds:0x354929ef
  40b975:	jmp    0x2e2e:0x3e4b2720
  40b97c:	dec    ecx
  40b97d:	imul   ecx,DWORD PTR [edi],0x6f
  40b980:	test   al,0xb8
  40b982:	ret    
  40b983:	or     al,0xdd
  40b985:	popf   
  40b986:	dec    ebx
  40b987:	pusha  
  40b988:	mov    bh,0x18
  40b98a:	daa    
  40b98b:	stos   BYTE PTR es:[edi],al
  40b98c:	mov    esp,DWORD PTR [eax-0x5e33e2c8]
  40b992:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b993:	push   0xffffffda
  40b995:	inc    eax
  40b996:	xchg   DWORD PTR ds:0x1eef2006,edi
  40b99c:	jle    0x40b986
  40b99e:	jne    0x40b9f3
  40b9a0:	out    0xdb,al
  40b9a2:	out    dx,al
  40b9a3:	sbb    ah,dl
  40b9a5:	push   edi
  40b9a6:	add    cl,BYTE PTR [ebx]
  40b9a8:	mov    ds:0x18d0eefc,eax
  40b9ad:	enter  0x3be1,0xc3
  40b9b1:	ins    BYTE PTR es:[edi],dx
  40b9b2:	ror    ch,cl
  40b9b4:	sbb    eax,0x886b52f6
  40b9b9:	add    DWORD PTR [ecx-0xe9ff70c],esp
  40b9bf:	push   0x5caf85a7
  40b9c4:	cmp    edi,edx
  40b9c6:	or     DWORD PTR [edx+0x7c44d961],ebx
  40b9cc:	mov    bl,0xcd
  40b9ce:	gs xchg ebx,edx
  40b9d1:	test   DWORD PTR [ebp+0x55],esi
  40b9d4:	outs   dx,DWORD PTR ds:[esi]
  40b9d5:	mov    esi,0x766509a6
  40b9da:	loope  0x40b99b
  40b9dc:	int    0xd7
  40b9de:	jp     0x40b988
  40b9e0:	cmc    
  40b9e1:	ja     0x40b993
  40b9e3:	and    eax,0x3ca0476a
  40b9e8:	out    dx,al
  40b9e9:	add    BYTE PTR [esi-0x46e177be],ch
  40b9ef:	in     al,0xbb
  40b9f1:	retf   
  40b9f2:	cmp    eax,ebx
  40b9f4:	loope  0x40ba5f
  40b9f6:	ins    DWORD PTR es:[edi],dx
  40b9f7:	sub    DWORD PTR ds:0xa9e06e32,esi
  40b9fd:	or     dl,BYTE PTR [edx]
  40b9ff:	xchg   esi,eax
  40ba00:	sub    eax,0xe38e5f87
  40ba05:	add    edi,edx
  40ba07:	push   0x21077cab
  40ba0c:	cmp    al,0xa6
  40ba0e:	or     eax,0x84e3ca29
  40ba13:	sub    BYTE PTR [ebp+0x785ad57a],ah
  40ba19:	cmp    DWORD PTR ds:0xf48380c3,esp
  40ba1f:	push   eax
  40ba20:	int3   
  40ba21:	sub    DWORD PTR ds:0x25bd370c,0xf26a548e
  40ba2b:	mov    ds:0x499043b8,al
  40ba30:	add    esp,eax
  40ba32:	cmp    DWORD PTR [esi+esi*4],ecx
  40ba35:	push   esi
  40ba36:	sbb    eax,DWORD PTR [eax+0x17]
  40ba39:	in     al,0xb
  40ba3b:	inc    ebp
  40ba3c:	push   es
  40ba3d:	push   ds
  40ba3e:	mov    ?,WORD PTR [esi-0x7c]
  40ba41:	cmp    ecx,ebx
  40ba43:	inc    esp
  40ba44:	retf   
  40ba45:	mov    BYTE PTR [edi-0x67e1716a],bl
  40ba4b:	neg    bl
  40ba4d:	xchg   edx,eax
  40ba4e:	mov    ds:0x17a9a4fa,al
  40ba53:	bound  ecx,QWORD PTR [eax+0x24]
  40ba56:	push   ds
  40ba57:	js     0x40ba8a
  40ba59:	dec    edx
  40ba5a:	pop    ebx
  40ba5b:	lods   eax,DWORD PTR ds:[esi]
  40ba5c:	call   0xec23:0x33f6e0d5
  40ba63:	inc    esi
  40ba64:	mov    WORD PTR [edx+esi*8],gs
  40ba67:	pop    esi
  40ba68:	pop    ecx
  40ba69:	out    dx,al
  40ba6a:	sub    BYTE PTR [ebx+ebx*4+0xa],dh
  40ba6e:	outs   dx,BYTE PTR ds:[esi]
  40ba6f:	fisttp QWORD PTR [edx-0x27c4e4c3]
  40ba75:	std    
  40ba76:	jo     0x40bad6
  40ba78:	mov    cl,0x1f
  40ba7a:	stos   BYTE PTR es:[edi],al
  40ba7b:	jae    0x40ba62
  40ba7d:	ins    DWORD PTR es:[edi],dx
  40ba7e:	cmp    bh,bh
  40ba80:	sbb    ebp,DWORD PTR [eax+0x61]
  40ba83:	out    0x50,al
  40ba85:	int    0x7b
  40ba87:	(bad)  
  40ba88:	aaa    
  40ba89:	ins    BYTE PTR es:[edi],dx
  40ba8a:	pop    es
  40ba8b:	aam    0xb4
  40ba8d:	das    
  40ba8e:	nop
  40ba8f:	push   edx
  40ba90:	popf   
  40ba91:	scas   al,BYTE PTR es:[edi]
  40ba92:	xor    DWORD PTR [ebx-0x75],ebx
  40ba95:	xor    esp,DWORD PTR [esi-0x5aba0047]
  40ba9b:	push   cs
  40ba9c:	mov    ebx,0xa46bdee9
  40baa1:	nop
  40baa2:	push   esi
  40baa3:	mov    BYTE PTR [ebx-0x2b],dl
  40baa6:	in     eax,0x5a
  40baa8:	sub    eax,0x6fe37b46
  40baad:	test   eax,0xbf92ba45
  40bab2:	clc    
  40bab3:	cwde   
  40bab4:	int    0xa0
  40bab6:	das    
  40bab7:	(bad)  
  40bab8:	mov    eax,ds:0xfe123581
  40babd:	stos   DWORD PTR es:[edi],eax
  40babe:	dec    edi
  40babf:	mov    ebp,0xf4d904e2
  40bac4:	sub    al,0xbf
  40bac6:	into   
  40bac7:	mov    WORD PTR [edx-0x1903deb9],cs
  40bacd:	dec    esp
  40bace:	bnd jne 0x40bb25
  40bad1:	fisub  WORD PTR ds:0x5dd266b6
  40bad7:	sbb    BYTE PTR [edx-0x3201167],ah
  40badd:	xchg   esp,eax
  40bade:	fdivr  st(6),st
  40bae0:	in     eax,0xa6
  40bae2:	shl    DWORD PTR [ecx],1
  40bae4:	or     edx,ebx
  40bae6:	inc    edx
  40bae7:	mov    dl,0xcf
  40bae9:	aad    0x4e
  40baeb:	jl     0x40bb3f
  40baed:	(bad)  
  40baee:	into   
  40baef:	jge    0x40bac9
  40baf1:	or     esp,DWORD PTR [eax+0x1ac10724]
  40baf7:	dec    edi
  40baf8:	push   esi
  40baf9:	jl     0x40bb76
  40bafb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bafc:	push   esp
  40bafd:	mov    ds:0x558ec788,al
  40bb02:	lods   al,BYTE PTR ds:[esi]
  40bb03:	add    al,0x82
  40bb05:	adc    ecx,DWORD PTR [ecx+0x1a]
  40bb08:	mov    edi,0xf220204
  40bb0d:	dec    edi
  40bb0e:	(bad)  
  40bb0f:	fsub   QWORD PTR [ebp+0x6b]
  40bb12:	aad    0x62
  40bb14:	mov    ebx,0xebed5b7e
  40bb19:	in     al,dx
  40bb1a:	pop    es
  40bb1b:	(bad)  
  40bb1c:	ds inc edx
  40bb1e:	xchg   esi,eax
  40bb1f:	pop    esi
  40bb20:	es icebp 
  40bb22:	mov    dl,0x4e
  40bb24:	mov    dl,0x69
  40bb26:	movq   mm3,QWORD PTR [ebp+0x2d3bba92]
  40bb2d:	pusha  
  40bb2e:	in     eax,dx
  40bb2f:	adc    DWORD PTR [eax+ecx*4],ebp
  40bb32:	in     al,dx
  40bb33:	lea    esi,[edi]
  40bb35:	(bad)  
  40bb37:	idiv   BYTE PTR [eax]
  40bb39:	mov    ebp,0x26c1ee10
  40bb3e:	stos   DWORD PTR es:[edi],eax
  40bb3f:	pop    esi
  40bb40:	xchg   esi,eax
  40bb41:	fwait
  40bb42:	or     eax,0x9f812d2d
  40bb47:	repnz addr16 mov dl,0xc
  40bb4b:	jp     0x40bb6d
  40bb4d:	pop    ebx
  40bb4e:	mov    cl,0x56
  40bb50:	xor    ecx,edi
  40bb52:	cmp    DWORD PTR [eax-0x77abf81a],edi
  40bb58:	idiv   BYTE PTR ds:0xbc45c0f4
  40bb5e:	loop   0x40bb79
  40bb60:	add    ebx,edi
  40bb62:	sbb    al,0xad
  40bb64:	pop    ss
  40bb65:	shl    DWORD PTR ds:[esi],cl
  40bb68:	mov    dl,0x21
  40bb6a:	sub    ecx,DWORD PTR [esi+0x744e0f1e]
  40bb70:	fmul   DWORD PTR [edi-0x29]
  40bb73:	fstp   DWORD PTR [ebx]
  40bb75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb76:	stos   DWORD PTR es:[edi],eax
  40bb77:	inc    edi
  40bb78:	xor    esi,DWORD PTR [esp+edx*2-0x6]
  40bb7c:	pop    ebp
  40bb7d:	xor    DWORD PTR [eax+0x78ed4ac1],ecx
  40bb83:	mov    eax,0x3c6bb396
  40bb88:	pop    ss
  40bb89:	inc    ebp
  40bb8a:	mov    edi,0xa30b5754
  40bb8f:	sub    eax,0xb872f962
  40bb94:	test   eax,0x51274df4
  40bb99:	and    cl,ch
  40bb9b:	xor    ah,BYTE PTR [ecx+0x36]
  40bb9e:	outs   dx,DWORD PTR ds:[esi]
  40bb9f:	jl     0x40bb6a
  40bba1:	inc    ebp
  40bba2:	mov    ah,0xa7
  40bba4:	ret    0xb231
  40bba7:	outs   dx,DWORD PTR ds:[esi]
  40bba8:	sbb    dh,BYTE PTR [ecx-0x80]
  40bbab:	dec    ebx
  40bbac:	lea    ecx,[eax-0x44]
  40bbaf:	cmp    DWORD PTR [ebx-0x17],0xc
  40bbb3:	jo     0x40bb51
  40bbb5:	ins    BYTE PTR es:[edi],dx
  40bbb6:	lahf   
  40bbb7:	xor    BYTE PTR [ebp-0x35],bh
  40bbba:	mov    ecx,0x416d8a4d
  40bbbf:	add    al,0xa5
  40bbc1:	test   eax,0x1feb0b71
  40bbc6:	scas   eax,DWORD PTR es:[edi]
  40bbc7:	xchg   edi,eax
  40bbc8:	inc    esp
  40bbc9:	test   DWORD PTR [esi],ebp
  40bbcb:	mov    ch,0x6
  40bbcd:	test   al,0x4c
  40bbcf:	adc    BYTE PTR [ecx-0x28528176],bh
  40bbd5:	adc    DWORD PTR [esi],ecx
  40bbd7:	sbb    al,0xaa
  40bbd9:	imul   esi,DWORD PTR [edx+0x20ad6ba1],0xfffffffd
  40bbe0:	jge    0x40bc32
  40bbe2:	jnp    0x40bbd3
  40bbe4:	or     al,0xf2
  40bbe6:	jb     0x40bbc2
  40bbe8:	jns    0x40bc59
  40bbea:	das    
  40bbeb:	aas    
  40bbec:	push   esp
  40bbed:	cdq    
  40bbee:	call   0xcac17e4a
  40bbf3:	mov    dh,0xdb
  40bbf5:	rcr    BYTE PTR [ebx],1
  40bbf7:	std    
  40bbf8:	sahf   
  40bbf9:	(bad)  
  40bbfa:	fistp  DWORD PTR [ebx]
  40bbfc:	mov    dh,BYTE PTR [ebx]
  40bbfe:	mov    ebp,0x5be97a4f
  40bc03:	dec    DWORD PTR [ecx+0x4ea6d024]
  40bc09:	sbb    DWORD PTR [edx+0x8],ecx
  40bc0c:	fsub   QWORD PTR [esi-0x691b9d30]
  40bc12:	lea    esi,[ebx]
  40bc14:	push   ds
  40bc15:	les    esi,FWORD PTR [eax-0x47ce2d27]
  40bc1b:	xlat   BYTE PTR fs:[ebx]
  40bc1d:	sbb    DWORD PTR [eax+edx*1],ebp
  40bc20:	imul   edi,esi,0xffffffb2
  40bc23:	fisubr DWORD PTR [ecx-0x6a328020]
  40bc29:	xor    cl,BYTE PTR [ecx+0x6e0ba1ef]
  40bc2f:	enter  0xc12e,0xc2
  40bc33:	inc    ebp
  40bc34:	imul   esi,DWORD PTR [eax],0xfffffff8
  40bc37:	enter  0xa3b5,0x33
  40bc3b:	icebp  
  40bc3c:	jmp    0xe7f1:0x4be05fc1
  40bc43:	sbb    DWORD PTR [ebp-0x4a],edi
  40bc46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc47:	mov    esi,0x1439df9a
  40bc4c:	cli    
  40bc4d:	fwait
  40bc4e:	jle    0x40bbf4
  40bc50:	or     al,0xc4
  40bc52:	push   cs
  40bc53:	std    
  40bc54:	mov    bh,0xf3
  40bc56:	jmp    0x7aa1c420
  40bc5b:	imul   ecx,DWORD PTR [ebx],0x63
  40bc5e:	fwait
  40bc5f:	int    0xf4
  40bc61:	fst    DWORD PTR [ebp+0x77]
  40bc64:	into   
  40bc65:	add    dh,BYTE PTR [edi+0x79]
  40bc68:	sbb    ebx,edi
  40bc6a:	adc    ecx,DWORD PTR [esi-0x6]
  40bc6d:	mov    eax,ds:0x8a2e8c3a
  40bc72:	aam    0xeb
  40bc74:	jmp    0x40bc33
  40bc76:	daa    
  40bc77:	jp     0x40bcf5
  40bc79:	pop    eax
  40bc7a:	xchg   DWORD PTR ds:0x8f30e57d,ecx
  40bc80:	or     eax,0xcc3cfd23
  40bc85:	cmp    ch,BYTE PTR [edi]
  40bc87:	das    
  40bc88:	out    0x55,eax
  40bc8a:	fs aas 
  40bc8c:	mov    al,ds:0x6a1de9b7
  40bc91:	fiadd  DWORD PTR [ebx]
  40bc93:	jmp    0x51463159
  40bc98:	clc    
  40bc99:	jg     0x40bc61
  40bc9b:	adc    BYTE PTR [edi-0x7],ah
  40bc9e:	cmp    ebx,DWORD PTR [ebx+0x7e8738e2]
  40bca4:	push   ebx
  40bca5:	faddp  st(7),st
  40bca7:	bound  esi,QWORD PTR [edx]
  40bca9:	jmp    0xa01c:0xda15ef61
  40bcb0:	mov    ebx,0x781b9fdc
  40bcb5:	push   es
  40bcb6:	adc    eax,0xf1678dc0
  40bcbb:	ret    
  40bcbc:	xchg   DWORD PTR [esi],eax
  40bcbe:	inc    ebp
  40bcbf:	pushf  
  40bcc0:	sbb    DWORD PTR [ebx-0x7f],esi
  40bcc3:	test   al,0x34
  40bcc5:	push   ecx
  40bcc6:	daa    
  40bcc7:	cmp    BYTE PTR [edx+ebp*2],cl
  40bcca:	cwde   
  40bccb:	rcr    DWORD PTR [edx-0xcd0a2f4],1
  40bcd1:	and    eax,0xc9705b3e
  40bcd6:	(bad)  
  40bcd7:	push   eax
  40bcd8:	test   DWORD PTR [edi],edx
  40bcda:	mov    cl,0x40
  40bcdc:	push   cs
  40bcdd:	mov    esp,DWORD PTR [ebp+0x7e]
  40bce0:	adc    DWORD PTR [edi],esp
  40bce2:	hlt    
  40bce3:	(bad)  
  40bce4:	idiv   DWORD PTR [ebx]
  40bce6:	repz jl 0x40bcdc
  40bce9:	and    eax,0x44f10b3e
  40bcee:	out    dx,al
  40bcef:	lahf   
  40bcf0:	push   es
  40bcf1:	dec    edi
  40bcf2:	mov    ?,WORD PTR [ebx]
  40bcf4:	xlat   BYTE PTR ds:[ebx]
  40bcf5:	cli    
  40bcf6:	jne    0x40bca8
  40bcf8:	dec    esi
  40bcf9:	fadd   DWORD PTR [eax]
  40bcfb:	lea    ecx,[edx]
  40bcfd:	pop    edx
  40bcfe:	push   ebx
  40bcff:	test   DWORD PTR [esi-0x2a],0x3bb0517d
  40bd06:	mov    eax,0x45f739a6
  40bd0b:	and    dl,BYTE PTR [esi-0x31]
  40bd0e:	enter  0xc,0x16
  40bd12:	arpl   WORD PTR [ebp-0x3b5bf5c9],bx
  40bd18:	popa   
  40bd19:	int3   
  40bd1a:	mov    dh,0x78
  40bd1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd1d:	outs   dx,BYTE PTR ds:[esi]
  40bd1e:	and    dh,cl
  40bd20:	jno    0x40bd5a
  40bd22:	jne    0x40bca6
  40bd24:	call   0x748d:0x67341bd0
  40bd2b:	jns    0x40bda7
  40bd2d:	ins    BYTE PTR es:[edi],dx
  40bd2e:	ds jle 0x40bd99
  40bd31:	xlat   BYTE PTR ds:[ebx]
  40bd32:	hlt    
  40bd33:	sub    esi,esp
  40bd35:	ds jmp 0x40bd0a
  40bd38:	inc    edi
  40bd39:	(bad)  
  40bd3b:	fwait
  40bd3c:	popa   
  40bd3d:	or     eax,0x55a83588
  40bd42:	lahf   
  40bd43:	inc    edi
  40bd44:	fimul  DWORD PTR [eax-0x63]
  40bd47:	es mov bh,0xcc
  40bd4a:	int    0x99
  40bd4c:	push   cs
  40bd4d:	push   eax
  40bd4e:	in     al,0xb0
  40bd50:	mov    al,ds:0x6e400d4a
  40bd55:	fidiv  DWORD PTR [ebx+0x1f]
  40bd58:	retf   0x4371
  40bd5b:	loope  0x40bd41
  40bd5d:	scas   al,BYTE PTR es:[edi]
  40bd5e:	adc    al,0x7f
  40bd61:	or     eax,eax
  40bd63:	cld    
  40bd64:	jle    0x40bd7b
  40bd66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd67:	mov    ch,0x5b
  40bd69:	pop    ds
  40bd6a:	or     eax,eax
  40bd6c:	in     eax,0xd9
  40bd6e:	test   BYTE PTR [ebp+eax*4-0x19c19a15],bl
  40bd75:	jge    0x40bdc6
  40bd77:	xchg   esp,eax
  40bd78:	adc    esi,ecx
  40bd7a:	call   FWORD PTR [esi]
  40bd7c:	jb     0x40bd1b
  40bd7e:	mov    bh,0x94
  40bd80:	pop    ss
  40bd81:	jo     0x40bd7d
  40bd83:	push   esi
  40bd84:	fidiv  WORD PTR [eax-0x25]
  40bd87:	into   
  40bd88:	fs inc edx
  40bd8a:	in     al,0x7b
  40bd8c:	and    al,cl
  40bd8e:	lea    esp,[esi+0x603f4c68]
  40bd94:	pshufw mm7,QWORD PTR [ebp-0x45],0x76
  40bd99:	adc    dh,BYTE PTR [ebp-0x25917bb9]
  40bd9f:	xchg   ebp,eax
  40bda0:	popa   
  40bda1:	ins    BYTE PTR es:[edi],dx
  40bda2:	dec    DWORD PTR [edx-0x2d]
  40bda5:	test   eax,0x75e3d7ac
  40bdaa:	push   edi
  40bdab:	daa    
  40bdac:	and    DWORD PTR [esi+0xf],0xc
  40bdb0:	stc    
  40bdb1:	mov    dl,0x82
  40bdb3:	lds    ecx,FWORD PTR [esi-0x558450e0]
  40bdb9:	jne    0x40bd75
  40bdbb:	push   cs
  40bdbc:	jbe    0x40be3d
  40bdbe:	ss inc edx
  40bdc0:	aam    0x1e
  40bdc2:	mov    edx,0xd895aa9d
  40bdc7:	sbb    ebx,DWORD PTR [ebx+0x65]
  40bdca:	pop    ebx
  40bdcb:	rol    BYTE PTR [esi-0x6f],cl
  40bdce:	inc    esp
  40bdcf:	xor    BYTE PTR [esi+ebp*4],ah
  40bdd2:	mov    al,0x98
  40bdd4:	inc    ebp
  40bdd5:	mov    eax,edi
  40bdd7:	rcr    BYTE PTR [ebp+0x68],0x18
  40bddb:	mov    al,ds:0x2d525e0
  40bde0:	mov    esi,0xe1562b42
  40bde5:	repz inc eax
  40bde7:	je     0x40bd7e
  40bde9:	(bad)  
  40bdea:	(bad)  
  40bdeb:	test   eax,0x5b4f8b8
  40bdf0:	mov    ebp,0x55661162
  40bdf5:	popa   
  40bdf6:	jmp    0x1d8d7c91
  40bdfb:	gs jbe 0x40bdd5
  40bdfe:	mov    WORD PTR [edx+ecx*1],ds
  40be01:	dec    edx
  40be02:	add    BYTE PTR [ebx+0x34a540],cl
  40be08:	imul   ecx,edx,0x3ec2b9f6
  40be0e:	ret    
  40be0f:	das    
  40be10:	popf   
  40be11:	icebp  
  40be12:	xor    BYTE PTR [esi+0x12ddfcf0],cl
  40be18:	(bad)  
  40be19:	cli    
  40be1a:	cmp    al,0x4f
  40be1c:	push   ecx
  40be1d:	jbe    0x40be4d
  40be1f:	pop    esi
  40be20:	test   ch,dl
  40be22:	icebp  
  40be23:	aam    0x95
  40be25:	mov    ecx,0x8eea68bf
  40be2a:	(bad)  
  40be2b:	repnz mov ds:0x30ba5d37,al
  40be31:	pop    ebx
  40be32:	pop    esp
  40be33:	mov    cl,0x68
  40be35:	aaa    
  40be36:	push   esi
  40be37:	mov    fs,ecx
  40be39:	pop    edx
  40be3a:	sbb    ah,BYTE PTR [edx+0x6bb9a279]
  40be40:	imul   BYTE PTR gs:[eax+0x1243c950]
  40be47:	stc    
  40be48:	xchg   ebx,eax
  40be49:	push   0xffffffc1
  40be4b:	inc    ecx
  40be4c:	mov    al,ds:0x76889331
  40be51:	stc    
  40be52:	pop    es
  40be53:	mov    eax,ds:0x301c086b
  40be58:	js     0x40bece
  40be5a:	data16 fild WORD PTR [esi-0x31869373]
  40be61:	mov    eax,0xe20698fc
  40be66:	jmp    0x6c30:0x21c95695
  40be6d:	jo     0x40be27
  40be6f:	inc    eax
  40be70:	aam    0xb4
  40be72:	popf   
  40be73:	stos   BYTE PTR es:[edi],al
  40be74:	in     eax,dx
  40be75:	push   esp
  40be76:	adc    dl,BYTE PTR [ecx-0x72]
  40be79:	xlat   BYTE PTR ds:[ebx]
  40be7a:	sub    al,0xa3
  40be7c:	sub    al,0x59
  40be7e:	xchg   ecx,eax
  40be7f:	jae    0x40be8e
  40be81:	and    al,0x38
  40be83:	pop    ds
  40be84:	loope  0x40be31
  40be86:	pop    esp
  40be87:	(bad)  [ebp+0x48b8c614]
  40be8d:	shr    DWORD PTR [edx+0x2f0796bb],cl
  40be93:	cmp    dl,BYTE PTR [edx]
  40be95:	and    BYTE PTR [ebx+0x5d16ed83],bl
  40be9b:	xchg   esp,eax
  40be9c:	push   ebp
  40be9d:	adc    al,0x3c
  40be9f:	fimul  DWORD PTR [edx+0x741215e6]
  40bea5:	sbb    eax,0x81bbc81c
  40beaa:	mov    ecx,0x80f658cf
  40beaf:	call   0x8b45:0x7d066ce4
  40beb6:	lds    esp,FWORD PTR [ebp-0x3a]
  40beb9:	cmp    bl,BYTE PTR [ebx+ecx*4]
  40bebc:	es call 0xd588fbc2
  40bec2:	jecxz  0x40becf
  40bec4:	jbe    0x40be7a
  40bec6:	ins    BYTE PTR es:[edi],dx
  40bec7:	(bad)  
  40bec8:	fdivr  QWORD PTR [ecx-0x35]
  40becb:	sub    bl,BYTE PTR [ecx+edx*1-0x1546e5b1]
  40bed2:	ss sbb eax,0xdeae601e
  40bed8:	push   cs
  40bed9:	mov    bh,0xe3
  40bedb:	mov    al,ds:0xf4ea42dc
  40bee0:	fidivr DWORD PTR [eax+edi*8-0x80]
  40bee4:	jecxz  0x40bf31
  40bee6:	mov    WORD PTR [edx+eiz*2+0x1b],fs
  40beea:	inc    esp
  40beeb:	mov    edx,0x7bb55bdf
  40bef0:	rol    BYTE PTR [ebx+0x79],1
  40bef3:	inc    edi
  40bef4:	xchg   esp,eax
  40bef5:	add    eax,0x9921104f
  40befa:	push   eax
  40befb:	fdivp  st(7),st
  40befd:	cld    
  40befe:	std    
  40beff:	jo     0x40bf71
  40bf01:	gs (bad) 
  40bf04:	xchg   BYTE PTR [ebx],bl
  40bf06:	dec    eax
  40bf07:	gs loopne 0x40bebb
  40bf0a:	mov    WORD PTR [edi-0x6ed5cdf],?
  40bf10:	or     dh,BYTE PTR [edx]
  40bf12:	sub    BYTE PTR [esi-0x71315e14],cl
  40bf18:	mov    bh,0xac
  40bf1a:	cwde   
  40bf1b:	std    
  40bf1c:	jp     0x40bf15
  40bf1e:	(bad)  
  40bf1f:	aaa    
  40bf20:	pop    eax
  40bf21:	cmp    cl,dl
  40bf23:	(bad)  
  40bf24:	push   ds
  40bf25:	stos   BYTE PTR es:[edi],al
  40bf26:	out    0x9,eax
  40bf28:	inc    ebp
  40bf29:	cmp    al,0xa7
  40bf2b:	fs loopne 0x40bed5
  40bf2e:	popf   
  40bf2f:	inc    ebx
  40bf30:	jmp    0x299d:0x6d5b038c
  40bf37:	xchg   bh,dh
  40bf39:	cmp    ebx,DWORD PTR [edx]
  40bf3b:	xor    eax,0xd040efa0
  40bf40:	push   ss
  40bf41:	rcr    DWORD PTR [edi+0x10],0x5a
  40bf45:	out    0x1a,al
  40bf47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf48:	xchg   ecx,eax
  40bf49:	outs   dx,DWORD PTR ds:[esi]
  40bf4a:	add    ebx,DWORD PTR [edi]
  40bf4c:	add    eax,0x51fe1845
  40bf51:	add    DWORD PTR [eax-0x6eda8da2],ebx
  40bf57:	jo     0x40bf86
  40bf59:	or     ebx,DWORD PTR [eax-0x4c399f7]
  40bf5f:	call   0x908ac7ac
  40bf64:	or     DWORD PTR [esi],0x38
  40bf67:	mov    ebp,0xbf75de32
  40bf6c:	ret    
  40bf6d:	sbb    edi,DWORD PTR [edx+0x166d36b4]
  40bf73:	mov    ah,0x2c
  40bf75:	push   esp
  40bf76:	test   dl,dl
  40bf78:	loop   0x40bfcc
  40bf7a:	es in  eax,dx
  40bf7c:	sti    
  40bf7d:	(bad)  
  40bf7e:	jbe    0x40bfd1
  40bf80:	push   ebp
  40bf81:	sbb    DWORD PTR [edx+eiz*1+0x1a],eax
  40bf85:	in     al,dx
  40bf86:	into   
  40bf87:	mov    ecx,0xe99cc8dd
  40bf8c:	xor    DWORD PTR [esi+0xaaac57a],ecx
  40bf92:	fisttp WORD PTR [edi+eax*8-0x38]
  40bf96:	inc    ebp
  40bf97:	or     edx,DWORD PTR [edx]
  40bf99:	and    ebx,DWORD PTR [edi-0x49]
  40bf9c:	inc    ecx
  40bf9d:	jae    0x40c004
  40bf9f:	call   0xfd5f3d45
  40bfa4:	adc    al,0x86
  40bfa6:	daa    
  40bfa7:	pop    edx
  40bfa8:	xchg   esi,eax
  40bfa9:	retf   0xbe89
  40bfac:	outs   dx,DWORD PTR ds:[esi]
  40bfad:	xor    DWORD PTR [esi-0x199264ae],0xffffffec
  40bfb4:	mov    ebp,0xc2a9647b
  40bfb9:	mov    bl,0xde
  40bfbb:	loope  0x40c01b
  40bfbd:	clc    
  40bfbe:	dec    esi
  40bfbf:	or     DWORD PTR [ebx+0x7c],esi
  40bfc2:	jl     0x40bf5d
  40bfc4:	inc    esp
  40bfc5:	jno    0x40c018
  40bfc7:	inc    eax
  40bfc8:	mov    esp,0xf9b864c3
  40bfcd:	in     al,dx
  40bfce:	cmp    ecx,DWORD PTR [ebx+0x2e]
  40bfd1:	pop    esp
  40bfd2:	mov    dl,0xa7
  40bfd4:	loopne 0x40bf9c
  40bfd6:	mov    ebp,0xed0b2e97
  40bfdb:	stc    
  40bfdc:	ror    DWORD PTR [eax],cl
  40bfde:	pop    ecx
  40bfe0:	sbb    BYTE PTR [ebp+0x40],dl
  40bfe3:	aas    
  40bfe4:	sbb    DWORD PTR [ebx+0x37536fb5],ecx
  40bfea:	sub    cl,BYTE PTR [eax+0x33]
  40bfed:	clc    
  40bfee:	clc    
  40bfef:	repnz sbb esp,DWORD PTR [edi+0x5d78bf2a]
  40bff6:	sub    BYTE PTR [edx+0x7],dh
  40bff9:	(bad)  
  40bffa:	xchg   edi,eax
  40bffb:	icebp  
  40bffc:	mov    ebx,0x40b934c0
  40c001:	xchg   ebp,eax
  40c002:	mov    edx,0xe26a06d2
  40c007:	sbb    ch,BYTE PTR [eax]
  40c009:	mov    DWORD PTR [edx],edx
  40c00b:	mov    edx,0x6c255a9c
  40c010:	jle    0x40c01b
  40c012:	xor    al,0x77
  40c014:	mov    al,ds:0xee0d546
  40c019:	stos   BYTE PTR es:[edi],al
  40c01a:	nop
  40c01b:	push   edi
  40c01c:	and    BYTE PTR [esi-0x58],al
  40c01f:	mov    bh,0xb0
  40c021:	mov    edx,0x58a84240
  40c026:	jo     0x40bff7
  40c028:	add    DWORD PTR [ebx],esi
  40c02a:	fistp  DWORD PTR ds:0x59620366
  40c030:	popf   
  40c031:	dec    esi
  40c032:	mov    dl,0x5a
  40c034:	bound  eax,QWORD PTR [ecx-0xb]
  40c037:	in     eax,dx
  40c038:	jne    0x40c032
  40c03a:	push   edi
  40c03b:	test   al,0x23
  40c03d:	repz push es
  40c03f:	inc    edi
  40c040:	or     BYTE PTR [edx-0x9],bh
  40c043:	es add al,BYTE PTR gs:[esi+0x5d7668d8]
  40c04b:	test   ebp,ebp
  40c04d:	mov    dh,0x91
  40c04f:	dec    edx
  40c050:	dec    edx
  40c051:	cwde   
  40c052:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c053:	ins    DWORD PTR es:[edi],dx
  40c054:	test   DWORD PTR [edx],ebp
  40c056:	mov    db2,esp
  40c059:	enter  0x4ea2,0xe2
  40c05d:	adc    ecx,ecx
  40c05f:	fs pop es
  40c061:	cmp    eax,0x366a949e
  40c066:	cs ins DWORD PTR es:[edi],dx
  40c068:	shl    DWORD PTR ds:0x53cafe6b,0x56
  40c06f:	cli    
  40c070:	dec    ebx
  40c071:	or     DWORD PTR [esi-0x22d054ce],esi
  40c077:	push   ecx
  40c078:	call   0x6c84cff1
  40c07d:	or     al,0x9a
  40c07f:	adc    dh,dl
  40c081:	in     al,dx
  40c082:	or     DWORD PTR [ecx+0x78],edx
  40c085:	test   DWORD PTR [ecx],eax
  40c087:	cmp    eax,edx
  40c089:	stos   DWORD PTR es:[edi],eax
  40c08a:	mov    ecx,0xdec2a90f
  40c08f:	out    0x23,al
  40c091:	bound  esi,QWORD PTR [ebp-0x5f]
  40c094:	add    bh,dl
  40c096:	cvttps2pi mm6,QWORD PTR [ebx-0x1aa9e005]
  40c09d:	in     eax,0x85
  40c09f:	inc    esp
  40c0a0:	push   ebx
  40c0a1:	scas   al,BYTE PTR es:[edi]
  40c0a2:	jnp    0x40c0e0
  40c0a4:	sbb    al,0x7d
  40c0a6:	mov    al,0x9e
  40c0a8:	ss stc 
  40c0aa:	test   DWORD PTR [ecx],0xc9cc7c53
  40c0b0:	retf   0xf0ad
  40c0b3:	shl    DWORD PTR [esi-0x22],cl
  40c0b6:	sub    esi,esp
  40c0b8:	dec    ebp
  40c0b9:	loopne 0x40c12b
  40c0bb:	arpl   WORD PTR [ebp+0x7e1abf6b],bp
  40c0c1:	stos   DWORD PTR es:[edi],eax
  40c0c2:	cmc    
  40c0c3:	jl     0x40c0fb
  40c0c5:	sub    edx,DWORD PTR ds:0x379c3f59
  40c0cb:	out    dx,eax
  40c0cc:	xor    edi,DWORD PTR [eax]
  40c0ce:	aad    0xaf
  40c0d0:	xor    dh,bl
  40c0d2:	or     DWORD PTR [esi],0xffffffe5
  40c0d5:	and    bl,BYTE PTR [ebx+0xf]
  40c0d8:	and    eax,0xfe481453
  40c0dd:	jo     0x40c0ee
  40c0df:	(bad)  
  40c0e1:	rol    BYTE PTR [ebp-0x46],0x19
  40c0e5:	sub    ebp,DWORD PTR [esi+ebx*8+0x53281545]
  40c0ec:	aad    0x65
  40c0ee:	mov    esi,0xfd72c670
  40c0f3:	or     al,0x70
  40c0f5:	pop    ebx
  40c0f6:	aaa    
  40c0f7:	pusha  
  40c0f8:	jg     0x40c123
  40c0fa:	div    BYTE PTR [edx+0x382e3225]
  40c100:	in     al,0x9a
  40c102:	pop    edi
  40c103:	mov    es,WORD PTR [esi+0xb0767df]
  40c109:	push   0xffffffd8
  40c10b:	das    
  40c10c:	in     al,dx
  40c10d:	bound  ecx,QWORD PTR [edi-0x4f32d9a3]
  40c113:	pop    edx
  40c114:	inc    ecx
  40c115:	push   ebx
  40c116:	jne    0x40c11d
  40c118:	pop    esp
  40c119:	sbb    ecx,edi
  40c11b:	and    bl,BYTE PTR [eax-0xe]
  40c11e:	out    dx,al
  40c11f:	out    0xfe,al
  40c121:	xor    ebp,eax
  40c123:	add    ebx,edx
  40c125:	push   edi
  40c126:	pop    ss
  40c127:	jae    0x40c154
  40c129:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c12a:	leave  
  40c12b:	stos   DWORD PTR es:[edi],eax
  40c12c:	pop    ebx
  40c12d:	jne    0x40c11f
  40c12f:	(bad)  [edi]
  40c131:	jnp    0x40c1ab
  40c133:	fdiv   QWORD PTR [ecx-0x2d1aef01]
  40c139:	daa    
  40c13a:	shl    esi,0xce
  40c13d:	jmp    0x2089:0xf080ce45
  40c144:	mov    ecx,ecx
  40c146:	stc    
  40c147:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c148:	inc    edi
  40c149:	cmp    eax,DWORD PTR [edi]
  40c14b:	fcom   DWORD PTR [ebp+0xc63a93e]
  40c151:	push   edx
  40c152:	hlt    
  40c153:	dec    edi
  40c154:	sbb    al,0xde
  40c156:	outs   dx,BYTE PTR ds:[esi]
  40c157:	fmul   st(0),st
  40c159:	add    dh,BYTE PTR [edi]
  40c15b:	mov    eax,0x9feaecb3
  40c160:	mov    ds:0x2b2daee6,eax
  40c165:	cmp    eax,0xb7a2c622
  40c16a:	cmc    
  40c16b:	(bad)  
  40c16c:	adc    eax,0x6ceca616
  40c171:	mov    ch,0x2
  40c173:	sub    dl,BYTE PTR [ecx+0x4d3f4a36]
  40c179:	inc    edi
  40c17a:	call   0x92e9:0xcbcf3045
  40c181:	and    BYTE PTR [eax+eax*2],dh
  40c184:	cli    
  40c185:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c186:	idiv   ch
  40c188:	fwait
  40c189:	pop    eax
  40c18a:	xchg   ebx,eax
  40c18b:	(bad)  
  40c18c:	out    dx,al
  40c18d:	sub    bl,cl
  40c18f:	aaa    
  40c190:	or     DWORD PTR [ecx],edx
  40c192:	add    al,0x9b
  40c194:	add    edx,DWORD PTR [ebx+0x8]
  40c197:	adc    DWORD PTR [edi+0x1d3280f5],edi
  40c19d:	std    
  40c19e:	or     DWORD PTR [edi-0x656cdba7],ecx
  40c1a4:	or     bh,bl
  40c1a6:	int3   
  40c1a7:	sub    dh,BYTE PTR [ebx+0x1d]
  40c1aa:	dec    edi
  40c1ab:	imul   esi,esp,0x67
  40c1ae:	cli    
  40c1af:	fs push ss
  40c1b1:	or     ebp,esp
  40c1b3:	pop    esp
  40c1b4:	mov    cl,BYTE PTR [edx]
  40c1b6:	mov    ah,ah
  40c1b8:	or     DWORD PTR [edi+0x3b],esp
  40c1bb:	or     al,0xa5
  40c1bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1be:	aaa    
  40c1bf:	push   esi
  40c1c0:	add    dh,cl
  40c1c2:	mov    cs,WORD PTR [edi-0x28]
  40c1c5:	cli    
  40c1c6:	clc    
  40c1c7:	mov    bh,BYTE PTR [edx+0x3e33fc0a]
  40c1cd:	not    BYTE PTR [ecx]
  40c1cf:	nop
  40c1d0:	dec    edi
  40c1d1:	test   DWORD PTR [ebx],ebp
  40c1d3:	add    bl,al
  40c1d5:	adc    esi,edx
  40c1d7:	jbe    0x40c19d
  40c1d9:	cdq    
  40c1da:	out    0x74,al
  40c1dc:	fild   WORD PTR [edx]
  40c1de:	js     0x40c23a
  40c1e0:	push   ss
  40c1e1:	fidiv  DWORD PTR [edx-0x1a]
  40c1e4:	ja     0x40c22d
  40c1e6:	xor    edx,DWORD PTR [esi]
  40c1e8:	(bad)  
  40c1e9:	xor    BYTE PTR [ecx],cl
  40c1eb:	aas    
  40c1ec:	dec    edx
  40c1ed:	das    
  40c1ee:	stos   DWORD PTR es:[edi],eax
  40c1ef:	cs stc 
  40c1f1:	xchg   esi,eax
  40c1f2:	adc    al,0x52
  40c1f4:	into   
  40c1f5:	outs   dx,DWORD PTR ds:[esi]
  40c1f6:	mov    WORD PTR gs:[ecx],fs
  40c1f9:	out    dx,al
  40c1fa:	jp     0x40c1ce
  40c1fc:	(bad)  
  40c1fe:	push   edx
  40c1ff:	jle    0x40c1cc
  40c201:	xchg   edx,eax
  40c202:	in     al,dx
  40c203:	jmp    0x40c19d
  40c205:	je     0x40c1b2
  40c207:	aas    
  40c208:	cmp    DWORD PTR [edi+0x5af9d1fe],edi
  40c20e:	test   eax,0x882770cf
  40c213:	push   cs
  40c214:	fcom   DWORD PTR [edi-0x6f7a2003]
  40c21a:	pop    edi
  40c21b:	retf   0xf7cf
  40c21e:	scas   eax,DWORD PTR es:[edi]
  40c21f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c220:	in     al,dx
  40c221:	cmp    DWORD PTR [eax-0x57bbdd88],esi
  40c227:	push   ds
  40c228:	push   esp
  40c229:	adc    dl,bh
  40c22b:	cdq    
  40c22c:	or     BYTE PTR [eax-0x3d],dh
  40c22f:	xchg   edx,eax
  40c230:	adc    DWORD PTR [edx],esp
  40c232:	pushf  
  40c233:	pop    esi
  40c234:	mov    ds:0x943df8e6,eax
  40c239:	cdq    
  40c23a:	nop
  40c23b:	fstp   DWORD PTR [eax+0x59]
  40c23e:	push   ebp
  40c23f:	pop    ds
  40c240:	call   0xf3f1:0xed120e1d
  40c247:	loop   0x40c2b4
  40c249:	fwait
  40c24a:	push   ebx
  40c24b:	sub    BYTE PTR [ecx-0x5f644214],ch
  40c251:	rcr    BYTE PTR [eax+0x2c352768],cl
  40c257:	inc    edi
  40c258:	xor    eax,0x8555b575
  40c25d:	ins    BYTE PTR es:[edi],dx
  40c25e:	dec    eax
  40c25f:	sti    
  40c260:	or     DWORD PTR [esi-0x4d663667],ebx
  40c266:	fadd   QWORD PTR [eax-0x5]
  40c269:	ret    
  40c26a:	sub    ebx,DWORD PTR [ebp+0x10]
  40c26d:	or     BYTE PTR [ecx+0x53],ah
  40c270:	or     al,BYTE PTR [edx]
  40c272:	iret   
  40c273:	mov    ah,0xaf
  40c275:	jecxz  0x40c260
  40c277:	sbb    ebx,DWORD PTR ds:0x61a351e3
  40c27d:	jp     0x40c23c
  40c27f:	dec    eax
  40c280:	stos   BYTE PTR es:[edi],al
  40c281:	xchg   esp,eax
  40c282:	inc    ebp
  40c283:	iret   
  40c284:	mov    DWORD PTR [edx-0x35],ecx
  40c287:	fidiv  WORD PTR [ecx]
  40c289:	mov    al,0xc0
  40c28b:	inc    edx
  40c28c:	cmp    ch,0x46
  40c28f:	in     al,0x1f
  40c291:	test   eax,0x5b8dd9b8
  40c296:	xor    DWORD PTR [ecx-0x5f986446],eax
  40c29c:	sbb    edi,DWORD PTR [esi+0x3d9c6ff6]
  40c2a2:	or     DWORD PTR [ebx],edi
  40c2a4:	(bad)  
  40c2a5:	jno    0x40c259
  40c2a7:	and    DWORD PTR [ebx-0x5af0d3e2],ebp
  40c2ad:	sub    al,0x2c
  40c2af:	bound  edi,QWORD PTR [ebx]
  40c2b1:	xchg   ebp,eax
  40c2b2:	mov    cl,0x99
  40c2b4:	pop    eax
  40c2b5:	dec    ecx
  40c2b6:	sbb    BYTE PTR [edx+0x78],cl
  40c2b9:	test   DWORD PTR [ecx+edi*1],ebx
  40c2bc:	fcmove st,st(7)
  40c2be:	mov    al,ds:0xea26b0d
  40c2c3:	loopne 0x40c2e1
  40c2c5:	xchg   esi,eax
  40c2c6:	jmp    0x40c33d
  40c2c8:	adc    DWORD PTR [edx-0x2c],edx
  40c2cb:	push   edi
  40c2cc:	(bad)  
  40c2cd:	retf   
  40c2ce:	addr16 retf 
  40c2d0:	add    ebp,0xffffffaa
  40c2d3:	ficomp DWORD PTR [edi-0x1da6f790]
  40c2d9:	mov    ds:0x7517eca1,al
  40c2de:	ins    BYTE PTR es:[edi],dx
  40c2df:	mov    ch,0x91
  40c2e1:	fdiv   DWORD PTR [esi]
  40c2e3:	std    
  40c2e4:	adc    ecx,DWORD PTR [eax]
  40c2e6:	daa    
  40c2e7:	(bad)  
  40c2e8:	addr16 repnz push esp
  40c2eb:	push   es
  40c2ec:	xchg   edi,eax
  40c2ed:	mov    edx,0x7e72de1b
  40c2f2:	jecxz  0x40c30a
  40c2f4:	xchg   ecx,eax
  40c2f5:	push   ds
  40c2f6:	cld    
  40c2f7:	push   eax
  40c2f8:	into   
  40c2f9:	nop
  40c2fa:	add    eax,0xe75bab7b
  40c2ff:	cmp    ebp,edi
  40c301:	loopne 0x40c33e
  40c303:	cli    
  40c304:	mov    esi,0xb22253a3
  40c309:	inc    ebx
  40c30a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c30b:	pop    edi
  40c30c:	inc    edi
  40c30d:	test   eax,0x5ca7ae38
  40c313:	mov    DWORD PTR [ecx],esi
  40c315:	cs in  al,dx
  40c317:	es push 0x3df3abd8
  40c31d:	inc    ebp
  40c31e:	rcl    BYTE PTR [eax],1
  40c320:	psubusb mm7,QWORD PTR [edx]
  40c323:	or     DWORD PTR [ecx],ecx
  40c325:	and    al,0x2
  40c327:	xchg   edx,eax
  40c328:	mov    gs,WORD PTR [ebx+edi*8+0x73]
  40c32c:	adc    cl,bl
  40c32e:	outs   dx,DWORD PTR ds:[esi]
  40c32f:	sbb    ebx,ebp
  40c331:	(bad)  
  40c332:	retf   0xdef2
  40c335:	ror    DWORD PTR [eax],0x18
  40c338:	push   0xdffca635
  40c33d:	fldcw  WORD PTR [edi-0x262311e4]
  40c343:	sbb    DWORD PTR [ebp+0x45],ecx
  40c346:	imul   edi,eax,0xffffffa1
  40c349:	sbb    ebp,edi
  40c34b:	push   edx
  40c34c:	dec    esi
  40c34d:	repz sahf 
  40c34f:	inc    esi
  40c350:	or     dh,BYTE PTR [eax+ecx*8]
  40c353:	scas   eax,DWORD PTR es:[edi]
  40c354:	add    BYTE PTR [ecx+0x55700e05],0x1c
  40c35b:	lock and BYTE PTR [ebp-0x1e1456d9],bl
  40c362:	lock jl 0x40c38a
  40c365:	in     eax,dx
  40c366:	sbb    DWORD PTR [ebp-0x1794fdd1],edi
  40c36c:	inc    eax
  40c36d:	mov    gs,WORD PTR [edx+0x603f8a87]
  40c373:	cmp    ebx,DWORD PTR [ebp-0x46]
  40c376:	dec    esp
  40c377:	or     BYTE PTR [eax+edi*4],ch
  40c37a:	xor    eax,0x104c89d7
  40c37f:	ret    
  40c380:	sub    bl,ch
  40c382:	cwde   
  40c383:	add    al,0x85
  40c385:	out    dx,eax
  40c386:	imul   esp,DWORD PTR [esi+0x5],0x45
  40c38a:	cmp    dl,ch
  40c38c:	jb     0x40c3c2
  40c38e:	xor    eax,0x7cb420b8
  40c393:	js     0x40c353
  40c395:	xchg   ebp,eax
  40c396:	push   0x7b
  40c398:	mov    al,ds:0x69718839
  40c39d:	int    0x40
  40c39f:	jnp    0x40c366
  40c3a1:	sub    eax,0x5c966d90
  40c3a6:	dec    ebp
  40c3a7:	xchg   ebp,eax
  40c3a8:	jae    0x40c344
  40c3aa:	pop    esp
  40c3ab:	lods   al,BYTE PTR ds:[esi]
  40c3ac:	enter  0xf4fa,0x49
  40c3b0:	mov    ds:0x4d4158ab,al
  40c3b5:	adc    BYTE PTR [ecx*1-0x5fe25e15],0x6c
  40c3bd:	pusha  
  40c3be:	mov    esp,DWORD PTR [ecx]
  40c3c0:	fwait
  40c3c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c3c2:	out    dx,eax
  40c3c3:	or     ah,BYTE PTR [edi+edi*2+0x45714c75]
  40c3ca:	sub    DWORD PTR [eax+0x327a0cf2],ebx
  40c3d0:	rol    DWORD PTR [ecx-0x1b39f516],1
  40c3d6:	fdivr  DWORD PTR [esi-0x2bfb6a14]
  40c3dc:	imul   esp,DWORD PTR [edi-0x7c],0xf
  40c3e0:	in     al,0x2c
  40c3e2:	pushf  
  40c3e3:	dec    ebp
  40c3e4:	sub    al,0x26
  40c3e6:	call   0x17a5c800
  40c3eb:	push   0xe67ff966
  40c3f0:	nop
  40c3f1:	push   0x14
  40c3f3:	pop    esp
  40c3f4:	ins    DWORD PTR es:[edi],dx
  40c3f5:	inc    edi
  40c3f6:	faddp  st(5),st
  40c3f8:	(bad)  
  40c3f9:	retf   0xbb27
  40c3fc:	imul   eax,DWORD PTR [ebx+0x35],0xffffffd5
  40c400:	test   eax,0xd0634621
  40c405:	jl     0x40c449
  40c407:	sbb    ebp,DWORD PTR [eax+0x5e]
  40c40a:	fdivr  DWORD PTR [ebx]
  40c40c:	enter  0x93d3,0xe2
  40c410:	syscall 
  40c412:	push   0xdc7c26e9
  40c417:	xchg   edx,eax
  40c418:	jo     0x40c3f9
  40c41a:	jne    0x40c440
  40c41c:	jmp    0x23c73749
  40c421:	jo     0x40c463
  40c423:	jb     0x40c48c
  40c425:	inc    ecx
  40c426:	imul   ebx,edi,0x4e325ed6
  40c42c:	jo     0x40c486
  40c42e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c42f:	stc    
  40c430:	lock mov edi,0xddd923e4
  40c436:	jle    0x40c467
  40c438:	pop    edx
  40c439:	pop    ebx
  40c43a:	mov    cl,BYTE PTR [edx+0x30b7173a]
  40c440:	stc    
  40c441:	push   es
  40c442:	xchg   ecx,eax
  40c443:	mov    cl,0xb3
  40c445:	jmp    0x40c4b7
  40c447:	stc    
  40c448:	add    BYTE PTR [ebx],dl
  40c44a:	rcl    BYTE PTR [edx+eax*2-0x4e],cl
  40c44e:	jo     0x40c44a
  40c450:	xchg   esp,eax
  40c451:	mov    ds:0x90291a59,al
  40c456:	xor    ah,BYTE PTR [edx+0x4931908c]
  40c45c:	lea    eax,es:[ebp+0x3f]
  40c460:	add    eax,0xc98d7ded
  40c465:	push   ss
  40c466:	mov    esp,0x692a9f18
  40c46b:	outs   dx,DWORD PTR ds:[esi]
  40c46c:	ins    BYTE PTR es:[edi],dx
  40c46d:	loop   0x40c3f6
  40c46f:	xchg   ebx,eax
  40c470:	fidiv  DWORD PTR [eax-0x43cbc373]
  40c476:	aam    0xcb
  40c478:	or     al,0x39
  40c47a:	iret   
  40c47b:	xchg   esp,eax
  40c47c:	hlt    
  40c47d:	fisubr DWORD PTR [ebx-0x47]
  40c480:	in     eax,0xdb
  40c482:	jle    0x40c428
  40c484:	es xor al,0x9c
  40c487:	mov    bl,0xff
  40c489:	(bad)
  40c48c:	jecxz  0x40c422
  40c48e:	fdiv   QWORD PTR [ecx+0x3df8627f]
  40c494:	in     al,0xbb
  40c496:	loope  0x40c428
  40c498:	adc    al,dl
  40c49a:	fst    st(1)
  40c49c:	mov    ah,0x6d
  40c49e:	arpl   bx,bx
  40c4a0:	or     DWORD PTR ds:0x46e0ceb8,ecx
  40c4a6:	jmp    0x55e8:0x6959f97
  40c4ad:	bound  edx,QWORD PTR [ebx+0x466f9b09]
  40c4b3:	mov    al,cl
  40c4b5:	int3   
  40c4b6:	aam    0x36
  40c4b8:	inc    ecx
  40c4b9:	pop    edx
  40c4ba:	test   al,dh
  40c4bc:	xchg   ecx,eax
  40c4bd:	xchg   esp,eax
  40c4be:	jl     0x40c53b
  40c4c0:	mov    ah,0xaf
  40c4c2:	cmp    al,BYTE PTR [ebx-0x51a9c863]
  40c4c8:	hlt    
  40c4c9:	cld    
  40c4ca:	aam    0x4a
  40c4cc:	pop    ss
  40c4cd:	addr16 icebp 
  40c4cf:	mov    edi,0x11738d7a
  40c4d4:	dec    esp
  40c4d5:	pop    edi
  40c4d6:	pop    ecx
  40c4d7:	rcr    eax,1
  40c4d9:	sub    BYTE PTR [ecx+0x6f206249],bh
  40c4df:	stos   DWORD PTR es:[edi],eax
  40c4e0:	xor    al,0xcd
  40c4e2:	inc    si
  40c4e4:	sub    BYTE PTR [edx+0x62],cl
  40c4e7:	mov    ?,WORD PTR [esi-0x67]
  40c4ea:	sti    
  40c4eb:	(bad)  
  40c4ec:	in     eax,0xc0
  40c4ee:	jge    0x40c528
  40c4f0:	inc    ebp
  40c4f1:	adc    DWORD PTR ds:0x1585f832,eax
  40c4f7:	hlt    
  40c4f8:	push   ecx
  40c4f9:	(bad)  
  40c4fa:	mov    eax,0xf5ca8854
  40c4ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c500:	in     eax,dx
  40c501:	test   eax,0x1cedaf99
  40c506:	ins    DWORD PTR es:[edi],dx
  40c507:	mov    edi,0x4deee17c
  40c50c:	out    0xd9,eax
  40c50e:	mov    ds:0x79209c5,al
  40c513:	popa   
  40c514:	clc    
  40c515:	mov    ebx,0x3338f5db
  40c51a:	leave  
  40c51b:	jmp    FWORD PTR [ebx-0x1e]
  40c51e:	pop    ebp
  40c51f:	test   eax,0xdf01fef4
  40c524:	pop    es
  40c525:	sbb    DWORD PTR [ebp+0x27],ebp
  40c528:	paddb  mm0,QWORD PTR [edx]
  40c52b:	scas   al,BYTE PTR es:[edi]
  40c52c:	push   ss
  40c52d:	jbe    0x40c51f
  40c52f:	dec    ebp
  40c530:	xor    BYTE PTR [edx+0xc],al
  40c533:	(bad)  [ecx+0x6bf6df73]
  40c539:	inc    ebx
  40c53a:	scas   eax,DWORD PTR es:[edi]
  40c53b:	adc    eax,0x57d5dd24
  40c540:	(bad)  
  40c541:	xchg   esi,eax
  40c542:	shr    dh,0x17
  40c545:	add    bl,BYTE PTR [ebp-0x6ad4cada]
  40c54b:	ret    
  40c54c:	call   0x4f8c:0x82f99f37
  40c553:	inc    ebx
  40c554:	mov    al,0x24
  40c556:	xchg   ebp,eax
  40c557:	out    0xa5,al
  40c559:	cmp    dl,BYTE PTR [edi]
  40c55b:	and    DWORD PTR [edx+0x601a2c28],eax
  40c561:	mov    esi,DWORD PTR [edx+0x1a]
  40c564:	retf   0x5df6
  40c567:	mov    dh,0x45
  40c569:	sti    
  40c56a:	push   edx
  40c56b:	cmc    
  40c56c:	popa   
  40c56d:	add    DWORD PTR [ebx+eax*2],eax
  40c570:	imul   edi,DWORD PTR [ecx+0x79503ad0],0xe2687852
  40c57a:	pop    esp
  40c57b:	add    BYTE PTR [ebp+0x6c38f348],al
  40c581:	jne    0x40c518
  40c583:	leave  
  40c584:	cmp    esi,DWORD PTR [ebx-0x148e3615]
  40c58a:	push   ebx
  40c58b:	test   eax,0xc13ba445
  40c590:	inc    ebx
  40c591:	(bad)  
  40c593:	inc    edx
  40c594:	add    al,0xd3
  40c596:	shr    BYTE PTR [esi+0x66],1
  40c599:	mov    ch,0xbe
  40c59b:	(bad)  
  40c59c:	stc    
  40c59d:	mov    al,0xb2
  40c59f:	shr    BYTE PTR [eax+0x1f48a7c3],0x89
  40c5a6:	jmp    0xc71d:0x14cc05b4
  40c5ad:	or     cl,BYTE PTR [edi+eax*4+0x48f23384]
  40c5b4:	rcl    al,0x6e
  40c5b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c5b8:	ins    DWORD PTR es:[edi],dx
  40c5b9:	scas   eax,DWORD PTR es:[edi]
  40c5ba:	push   ds
  40c5bb:	inc    esi
  40c5bc:	loop   0x40c62b
  40c5be:	movsx  edi,WORD PTR [ecx+0x28bc79a6]
  40c5c5:	push   eax
  40c5c6:	fnstsw WORD PTR [edx+0x77]
  40c5c9:	outs   dx,DWORD PTR ds:[esi]
  40c5ca:	and    eax,0x24d40c0d
  40c5cf:	cmp    edi,eax
  40c5d1:	pop    esp
  40c5d2:	xor    edx,edx
  40c5d4:	cmp    BYTE PTR [edx],0xfa
  40c5d7:	push   edx
  40c5d8:	pop    edx
  40c5d9:	push   ecx
  40c5da:	cli    
  40c5db:	cmp    ecx,edi
  40c5dd:	jne    0x40c59d
  40c5df:	lods   eax,DWORD PTR ds:[esi]
  40c5e0:	lods   al,BYTE PTR ds:[esi]
  40c5e1:	fbstp  TBYTE PTR [esp+esi*1-0x3475ba5a]
  40c5e8:	ds push esp
  40c5ea:	sub    esp,DWORD PTR [edx-0x38]
  40c5ed:	cmp    al,0xf2
  40c5ef:	retf   
  40c5f0:	stos   BYTE PTR es:[edi],al
  40c5f1:	arpl   WORD PTR [eax+0x6b],di
  40c5f4:	pop    ds
  40c5f5:	adc    DWORD PTR [edx-0x6f5a5b9a],0xbe72a433
  40c5ff:	mov    dl,0xb8
  40c601:	xchg   esp,eax
  40c602:	in     eax,0x0
  40c604:	gs jmp 0x40c659
  40c607:	xor    esi,0x9bf60232
  40c60d:	aad    0x8c
  40c60f:	cmp    al,0x24
  40c611:	xor    BYTE PTR [eax],bh
  40c613:	ds push cx
  40c616:	or     BYTE PTR [edx-0x3b],dh
  40c619:	lahf   
  40c61a:	or     DWORD PTR [ebx-0x3b],0xc82337bf
  40c621:	fild   QWORD PTR [edx]
  40c623:	and    edi,DWORD PTR [esi-0x68]
  40c626:	add    al,BYTE PTR [esi+0x24d16d63]
  40c62c:	repnz mov al,0xab
  40c62f:	call   0xaadba771
  40c634:	push   ecx
  40c635:	or     DWORD PTR [edi],edi
  40c637:	shl    DWORD PTR [ebx-0x32c4465a],1
  40c63d:	and    eax,0x9993dffe
  40c642:	inc    edi
  40c643:	int3   
  40c644:	pop    eax
  40c645:	arpl   dx,bx
  40c647:	jg     0x40c651
  40c649:	cdq    
  40c64a:	dec    eax
  40c64b:	adc    al,0x22
  40c64d:	dec    eax
  40c64e:	mov    ah,0xb
  40c650:	lods   eax,DWORD PTR ds:[esi]
  40c651:	inc    si
  40c653:	sbb    BYTE PTR [ebx-0x56],ah
  40c656:	or     bh,BYTE PTR [edi+0x73]
  40c659:	jne    0x40c612
  40c65b:	add    BYTE PTR [esi-0x6026ef97],bl
  40c661:	data16 jle 0x40c6ca
  40c664:	jmp    0x820:0xae693e5b
  40c66b:	fwait
  40c66c:	rcl    cl,0xd2
  40c66f:	and    DWORD PTR [esi],0x57
  40c672:	push   ss
  40c673:	icebp  
  40c674:	mov    eax,ds:0x8383514
  40c679:	outs   dx,BYTE PTR ss:[esi]
  40c67b:	es cmp eax,0x6d1815a3
  40c681:	ds stos DWORD PTR es:[edi],eax
  40c683:	add    BYTE PTR [edi+0x68],cl
  40c686:	retf   0x8fb2
  40c689:	sti    
  40c68a:	je     0x40c6e7
  40c68c:	mov    bl,0x8c
  40c68e:	fs push edi
  40c690:	add    eax,0xedbe6afd
  40c695:	mov    dh,0x66
  40c697:	push   ebx
  40c698:	xchg   ecx,eax
  40c699:	add    dl,BYTE PTR [ebx+0x35543578]
  40c69f:	and    eax,0xf0730b1c
  40c6a4:	cmc    
  40c6a5:	addr16 add BYTE PTR [bx+di],ch
  40c6a9:	xor    al,0xc4
  40c6ab:	xchg   esp,eax
  40c6ac:	icebp  
  40c6ad:	test   DWORD PTR [edi],edx
  40c6af:	adc    eax,0x5c992d42
  40c6b4:	mov    ebp,ebx
  40c6b6:	hlt    
  40c6b7:	push   cs
  40c6b8:	aas    
  40c6b9:	jmp    0x258e3fc9
  40c6be:	and    DWORD PTR [edi+0x8],esi
  40c6c1:	sub    BYTE PTR [ebp+edi*1+0x46],dl
  40c6c5:	and    dh,0x99
  40c6c8:	out    dx,eax
  40c6c9:	mov    edx,0x8e956c1d
  40c6ce:	in     al,dx
  40c6cf:	fisttp DWORD PTR [ebx-0x6efef02d]
  40c6d5:	out    dx,eax
  40c6d6:	ret    
  40c6d7:	gs das 
  40c6d9:	sahf   
  40c6da:	stos   DWORD PTR es:[edi],eax
  40c6db:	push   ebx
  40c6dc:	aam    0xe8
  40c6de:	ins    BYTE PTR es:[edi],dx
  40c6df:	mov    al,ds:0x5fa10e0e
  40c6e4:	cmp    al,BYTE PTR [esi]
  40c6e6:	mov    ?,WORD PTR [eax+0x69]
  40c6e9:	mov    ch,dl
  40c6eb:	cmp    DWORD PTR [ebp-0xb808c94],esi
  40c6f1:	pop    esi
  40c6f2:	jmp    0x40c6e4
  40c6f4:	push   0x11
  40c6f6:	push   cs
  40c6f7:	pop    edi
  40c6f8:	div    BYTE PTR [edi]
  40c6fa:	add    eax,0x74d1c733
  40c6ff:	adc    esp,edi
  40c701:	pop    es
  40c702:	xor    DWORD PTR [ecx+ecx*8+0x26],ebp
  40c706:	lods   eax,DWORD PTR ds:[esi]
  40c707:	dec    edi
  40c708:	inc    edi
  40c709:	cmc    
  40c70a:	mov    edx,0x1d76ee48
  40c70f:	pop    ecx
  40c710:	sub    DWORD PTR [esi],0x12
  40c713:	jae    0x40c705
  40c715:	test   eax,0x106142d1
  40c71b:	pop    ebp
  40c71c:	mov    eax,0x21210eb9
  40c721:	shl    BYTE PTR [ebp+0x63623223],cl
  40c727:	mov    ecx,DWORD PTR [edx+0x1a58f4]
  40c72d:	xchg   DWORD PTR [ebx],esp
  40c72f:	adc    al,0x8c
  40c731:	push   0xffffffc6
  40c733:	and    DWORD PTR [eax],0x1f
  40c736:	jne    0x40c730
  40c738:	inc    ebx
  40c739:	shr    BYTE PTR [ebx+0x109794f],1
  40c73f:	and    ebp,DWORD PTR [esi+0x57]
  40c742:	mov    WORD PTR [esi],cs
  40c744:	sbb    eax,0x33ea35ab
  40c749:	mov    WORD PTR [ecx-0x20],cs
  40c74c:	mov    ecx,0x518fe7fa
  40c751:	ins    BYTE PTR es:[edi],dx
  40c752:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c753:	jae    0x40c6f2
  40c755:	xchg   al,al
  40c757:	pushf  
  40c758:	fwait
  40c759:	push   esp
  40c75a:	sahf   
  40c75b:	xor    ah,BYTE PTR [ebx+edx*2]
  40c75e:	les    esi,FWORD PTR [eax]
  40c760:	jecxz  0x40c73a
  40c762:	hlt    
  40c763:	or     bl,0x1d
  40c766:	pushw  0xff9f
  40c769:	xchg   esi,eax
  40c76a:	and    BYTE PTR [eax+eiz*8-0x5c],ah
  40c76e:	daa    
  40c76f:	pop    edi
  40c770:	ror    BYTE PTR [ecx-0x1198c565],0x30
  40c777:	pop    ecx
  40c778:	lock pusha 
  40c77a:	jns    0x40c765
  40c77c:	push   es
  40c77d:	sbb    DWORD PTR [edx+eax*2+0x50],ecx
  40c781:	jae    0x40c704
  40c783:	jge    0x40c79e
  40c785:	pop    ds
  40c786:	mov    bh,0xee
  40c788:	ret    
  40c789:	push   ebp
  40c78a:	or     DWORD PTR [edx+eiz*8-0x1c667390],edx
  40c791:	outs   dx,DWORD PTR ds:[esi]
  40c792:	subps  xmm6,XMMWORD PTR [esi]
  40c795:	test   al,0x4f
  40c797:	adc    BYTE PTR [edx],ah
  40c799:	mov    esp,DWORD PTR [ebp+0x1f]
  40c79c:	adc    BYTE PTR [ecx+0x54cee235],dl
  40c7a2:	clc    
  40c7a3:	sbb    edi,DWORD PTR [ebx+0x3a]
  40c7a6:	push   ebx
  40c7a7:	stos   DWORD PTR es:[edi],eax
  40c7a8:	fcomi  st,st(0)
  40c7aa:	sub    ecx,DWORD PTR [edi+0x14]
  40c7ad:	mov    ebx,0x6ab4dbf4
  40c7b2:	inc    ecx
  40c7b3:	retf   
  40c7b4:	jnp    0x40c82a
  40c7b6:	dec    BYTE PTR [edx]
  40c7b8:	jmp    0xfea75f0a
  40c7bd:	sbb    al,0xa5
  40c7bf:	push   es
  40c7c0:	aad    0xb2
  40c7c2:	bound  eax,QWORD PTR ds:0x4650049c
  40c7c8:	jecxz  0x40c7af
  40c7ca:	jl     0x40c7fa
  40c7cc:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  40c7ce:	nop
  40c7cf:	sbb    DWORD PTR [edx],edi
  40c7d1:	pop    esi
  40c7d2:	xor    cl,BYTE PTR [edx]
  40c7d4:	adc    cl,BYTE PTR fs:[esi+eax*2+0x76]
  40c7d9:	mov    eax,0x8ed5c0d9
  40c7de:	mov    ah,0xe9
  40c7e0:	push   es
  40c7e1:	and    DWORD PTR [eax-0x9],0xa66529bb
  40c7e8:	ja     0x40c83a
  40c7ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c7eb:	push   0xffffffde
  40c7ed:	xchg   esp,eax
  40c7ee:	dec    edx
  40c7ef:	in     eax,0x62
  40c7f1:	sti    
  40c7f2:	cli    
  40c7f3:	jns    0x40c82b
  40c7f5:	sbb    BYTE PTR ds:0x6bf134a1,cl
  40c7fb:	sub    DWORD PTR [eax+0x7eaf0e41],0x37
  40c802:	adc    esi,edi
  40c804:	nop
  40c805:	ret    0x8487
  40c808:	and    edi,DWORD PTR [edx]
  40c80a:	cwde   
  40c80b:	push   ecx
  40c80c:	mov    WORD PTR [eax],ss
  40c80e:	push   ecx
  40c80f:	inc    eax
  40c810:	jne    0x40c7b3
  40c812:	xor    ebp,DWORD PTR [edx-0x73]
  40c815:	xor    eax,0x2b652a1f
  40c81a:	in     al,0x7b
  40c81c:	data16 sub al,0x33
  40c81f:	push   edi
  40c820:	mov    ch,0xc4
  40c822:	mov    ?,WORD PTR [ecx]
  40c824:	(bad)  
  40c825:	pop    ds
  40c826:	and    ah,BYTE PTR [ebx]
  40c828:	inc    eax
  40c829:	cmp    BYTE PTR [ecx+0x60c40c2b],0x87
  40c830:	cmp    eax,ecx
  40c832:	ja     0x40c8b3
  40c834:	adc    cl,BYTE PTR [edi+0x2283432d]
  40c83a:	sub    eax,0x22e6d0c
  40c83f:	jp     0x40c7d5
  40c841:	mov    ah,BYTE PTR [ebx-0x34]
  40c844:	mov    WORD PTR [edi-0x38],gs
  40c847:	sub    DWORD PTR [edx],0xfffffffe
  40c84a:	mov    ds:0xbd858448,al
  40c84f:	shl    BYTE PTR [ecx-0x42],0x33
  40c853:	push   ebp
  40c854:	dec    esp
  40c855:	loop   0x40c81f
  40c857:	lock jl 0x40c896
  40c85a:	fidivr WORD PTR [ebx+0x4a]
  40c85d:	pop    ds
  40c85e:	test   al,0x10
  40c860:	mov    ah,0x27
  40c862:	or     ebx,DWORD PTR [eax+0x6a]
  40c865:	lds    esp,FWORD PTR [eax-0x85742b9]
  40c86b:	arpl   WORD PTR [bx+di+0xad4],bx
  40c870:	jns    0x40c859
  40c872:	(bad)  
  40c873:	ins    DWORD PTR es:[edi],dx
  40c874:	fwait
  40c875:	inc    eax
  40c876:	stos   DWORD PTR es:[edi],eax
  40c877:	pop    ebx
  40c878:	mov    ah,0xac
  40c87a:	(bad)  
  40c87b:	xchg   ebp,eax
  40c87c:	scas   al,BYTE PTR es:[edi]
  40c87d:	jne    0x40c844
  40c87f:	jmp    0x5e4d:0x68d8ef1f
  40c886:	shl    DWORD PTR [esi],1
  40c888:	aas    
  40c889:	jge    0x40c896
  40c88b:	add    DWORD PTR [ecx-0x36],eax
  40c88e:	add    BYTE PTR [esi-0x6d],0x8e
  40c892:	call   DWORD PTR [edx]
  40c894:	scas   al,BYTE PTR es:[edi]
  40c895:	or     esp,edx
  40c897:	call   0x1930:0x958e0d8d
  40c89e:	mov    dl,BYTE PTR [ecx-0x1d]
  40c8a1:	dec    esi
  40c8a2:	pop    es
  40c8a3:	xor    edx,DWORD PTR [edx]
  40c8a5:	call   0xd546:0x80f83558
  40c8ac:	ss xchg esi,eax
  40c8ae:	mov    edi,ebp
  40c8b0:	ficom  WORD PTR [ebx-0x2b4c5209]
  40c8b6:	cmp    bh,al
  40c8b8:	inc    esi
  40c8b9:	sbb    eax,0xd7c90612
  40c8be:	or     al,0x59
  40c8c0:	adc    BYTE PTR [esi+0x961687d],bh
  40c8c6:	loop   0x40c8c9
  40c8c8:	cmp    al,0xe1
  40c8ca:	mov    ah,0x15
  40c8cc:	ins    DWORD PTR es:[edi],dx
  40c8cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c8ce:	gs dec ecx
  40c8d0:	stos   DWORD PTR es:[edi],eax
  40c8d1:	sub    eax,0x5672389c
  40c8d6:	xor    DWORD PTR [eax-0x53],ebp
  40c8d9:	pop    es
  40c8da:	push   esi
  40c8db:	mov    ebx,0x78015a36
  40c8e0:	stc    
  40c8e1:	cmp    al,0x63
  40c8e3:	mov    al,cs:0xc9565f90
  40c8e9:	mov    ebx,0x722a3064
  40c8ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c8ef:	push   edx
  40c8f0:	es icebp 
  40c8f2:	push   cs
  40c8f3:	jp     0x40c880
  40c8f5:	sar    DWORD PTR [eax+ecx*2],1
  40c8f8:	arpl   WORD PTR [ebp-0x7],sp
  40c8fb:	jp     0x40c8bf
  40c8fd:	cmp    BYTE PTR [ebx-0x17],al
  40c900:	and    cl,BYTE PTR [esi-0x3e80b5c8]
  40c906:	dec    ebx
  40c907:	inc    edi
  40c908:	push   esp
  40c909:	mov    dh,0x30
  40c90b:	daa    
  40c90c:	in     eax,dx
  40c90d:	sub    ecx,DWORD PTR [ebx]
  40c90f:	pop    edi
  40c910:	xor    BYTE PTR [esp+ebx*2],ah
  40c913:	das    
  40c914:	fdiv   QWORD PTR [esi+0x36c5ce6c]
  40c91a:	addr16 popa 
  40c91c:	jbe    0x40c91f
  40c91e:	ficom  DWORD PTR [ebx+0x3d]
  40c921:	mov    ah,0xa5
  40c923:	call   0x3fe:0x389779
  40c92a:	shl    BYTE PTR [eax-0x73],cl
  40c92d:	int3   
  40c92e:	ja     0x40c98b
  40c930:	adc    ch,bh
  40c932:	(bad)  
  40c934:	outs   dx,DWORD PTR ds:[esi]
  40c935:	push   0x43b8f7ad
  40c93a:	push   ecx
  40c93b:	in     al,0x79
  40c93d:	loop   0x40c99d
  40c93f:	mov    edi,0x970abbc1
  40c944:	and    al,0x84
  40c946:	xchg   ecx,eax
  40c947:	sbb    al,0xd2
  40c949:	dec    ecx
  40c94a:	cmc    
  40c94b:	xlat   BYTE PTR ds:[ebx]
  40c94c:	rcr    DWORD PTR [ebx+0x7b746054],0xc7
  40c953:	mov    edx,esp
  40c955:	out    dx,eax
  40c956:	test   eax,0xd7381a32
  40c95b:	jl     0x40c98f
  40c95d:	mov    bl,0xee
  40c95f:	std    
  40c960:	pop    edi
  40c961:	mov    cl,0xed
  40c963:	out    dx,al
  40c964:	fcomp  QWORD PTR [ecx+0x591ce199]
  40c96a:	in     al,0xc9
  40c96c:	push   es
  40c96d:	jne    0x40c9e9
  40c96f:	mov    al,0xec
  40c971:	int    0xba
  40c973:	pop    edx
  40c974:	jo     0x40c933
  40c976:	dec    ebx
  40c977:	in     al,dx
  40c978:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c979:	pop    ecx
  40c97a:	fld    DWORD PTR [ebx]
  40c97c:	leave  
  40c97d:	xchg   ecx,eax
  40c97f:	pop    edi
  40c980:	pop    ebx
  40c981:	jbe    0x40c977
  40c983:	mov    esi,0xd8b010df
  40c988:	xor    DWORD PTR [eax-0x516a3afe],eax
  40c98e:	or     DWORD PTR [ebx],ebp
  40c990:	sub    DWORD PTR [edx-0x2e4fcc24],edx
  40c996:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c997:	daa    
  40c998:	push   0x8a65183
  40c99d:	push   0x62d6a2bb
  40c9a2:	jmp    0x9a71:0x55650be
  40c9a9:	loopne 0x40c9a0
  40c9ab:	pop    edi
  40c9ac:	sbb    eax,0x97056b73
  40c9b1:	fcom   DWORD PTR [eax]
  40c9b3:	or     BYTE PTR ds:0x3b7aab93,cl
  40c9b9:	pop    ecx
  40c9ba:	mov    ds:0xa90c5f62,eax
  40c9bf:	xlat   BYTE PTR ds:[ebx]
  40c9c0:	test   dh,bh
  40c9c2:	out    0x66,al
  40c9c4:	xor    ch,BYTE PTR [esi+0x63c00e3e]
  40c9ca:	repz xchg esi,eax
  40c9cc:	jnp    0x40c9aa
  40c9ce:	inc    esi
  40c9cf:	mov    ch,0x91
  40c9d1:	sub    al,0x38
  40c9d3:	add    bl,dh
  40c9d5:	xchg   BYTE PTR [ebx],ch
  40c9d7:	adc    edi,DWORD PTR [esp+edx*8]
  40c9da:	mov    ah,0x61
  40c9dc:	jle    0x40c962
  40c9de:	lds    esp,FWORD PTR [esi+0x18]
  40c9e1:	les    ebx,FWORD PTR ds:[ecx-0xe27c18b]
  40c9e8:	retf   0xbd2b
  40c9eb:	push   ebp
  40c9ec:	pop    ss
  40c9ed:	pop    esp
  40c9ee:	pop    eax
  40c9ef:	xchg   esp,eax
  40c9f0:	mov    bl,0x63
  40c9f2:	mov    edi,0x5899fead
  40c9f7:	push   esi
  40c9f8:	lahf   
  40c9f9:	aam    0x78
  40c9fb:	xor    eax,0xaeb04af1
  40ca00:	aam    0xea
  40ca02:	lea    ecx,[esi+0x7a]
  40ca05:	dec    eax
  40ca06:	popa   
  40ca07:	push   esp
  40ca08:	cmp    al,0xa
  40ca0a:	out    dx,eax
  40ca0b:	cmp    ebp,DWORD PTR [edx-0x44652667]
  40ca11:	mov    edi,0x7a92e254
  40ca16:	mov    edi,DWORD PTR [edi+0x61845005]
  40ca1c:	mov    ebp,0xe9786617
  40ca21:	stc    
  40ca22:	pop    ecx
  40ca23:	xor    eax,esi
  40ca25:	add    eax,edi
  40ca27:	cmp    edx,eax
  40ca29:	je     0x40cb90
  40ca2f:	mov    eax,DWORD PTR [ebp-0x8]
  40ca32:	mov    DWORD PTR [ebp-0x18],eax
  40ca35:	mov    eax,DWORD PTR [ebp-0x10]
  40ca38:	add    eax,DWORD PTR [ebp-0x54]
  40ca3b:	mov    DWORD PTR [ebp-0x1c],0xf89c85b0
  40ca42:	mov    DWORD PTR [ebp-0x8],eax
  40ca45:	mov    eax,0xf89c85b1
  40ca4a:	mov    DWORD PTR [ebp-0x28],eax
  40ca4d:	mov    DWORD PTR [ebp-0x5c],0xf89c85b2
  40ca54:	mov    DWORD PTR [ebp-0x40],0xf89c85b3
  40ca5b:	mov    DWORD PTR [ebp-0x30],eax
  40ca5e:	mov    eax,DWORD PTR [ebp-0x1c]
  40ca61:	xor    eax,esi
  40ca63:	add    eax,edi
  40ca65:	jmp    0x40cb4c
  40ca6a:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  40ca71:	mov    DWORD PTR [ebp-0x50],0xf89c858e
  40ca78:	mov    eax,DWORD PTR [ebp-0x30]
  40ca7b:	mov    edx,DWORD PTR [ebp-0xc]
  40ca7e:	xor    eax,esi
  40ca80:	add    eax,edi
  40ca82:	imul   eax,edx
  40ca85:	mov    edx,DWORD PTR [ebp-0x8]
  40ca88:	mov    al,BYTE PTR [eax+edx*1]
  40ca8b:	mov    BYTE PTR [ebp-0x1],al
  40ca8e:	mov    eax,DWORD PTR [ebp-0x30]
  40ca91:	mov    edx,DWORD PTR [ebp-0xc]
  40ca94:	xor    eax,esi
  40ca96:	add    eax,edi
  40ca98:	imul   eax,edx
  40ca9b:	mov    edx,DWORD PTR [ebp-0x5c]
  40ca9e:	xor    edx,esi
  40caa0:	add    eax,edx
  40caa2:	mov    edx,DWORD PTR [ebp-0x8]
  40caa5:	movzx  eax,BYTE PTR [eax+edx*1+0x3272ec]
  40caad:	mov    edx,DWORD PTR [ebp-0x4c]
  40cab0:	xor    edx,esi
  40cab2:	lea    eax,[edx+eax*1+0x3272ec]
  40cab9:	movzx  edx,BYTE PTR [ebp-0x1]
  40cabd:	xor    edx,eax
  40cabf:	mov    BYTE PTR [ebp-0x1],dl
  40cac2:	mov    al,BYTE PTR [ebp-0x1]
  40cac5:	mov    edx,DWORD PTR [ebp-0x30]
  40cac8:	mov    ebx,DWORD PTR [ebp-0xc]
  40cacb:	xor    edx,esi
  40cacd:	add    edx,edi
  40cacf:	imul   edx,ebx
  40cad2:	mov    ebx,DWORD PTR [ebp-0x8]
  40cad5:	mov    BYTE PTR [edx+ebx*1],al
  40cad8:	mov    eax,DWORD PTR [ebp-0x30]
  40cadb:	mov    edx,DWORD PTR [ebp-0xc]
  40cade:	xor    eax,esi
  40cae0:	add    eax,edi
  40cae2:	imul   eax,edx
  40cae5:	mov    edx,DWORD PTR [ebp-0x8]
  40cae8:	mov    al,BYTE PTR [eax+edx*1]
  40caeb:	mov    BYTE PTR [ebp-0x1],al
  40caee:	mov    eax,DWORD PTR [ebp-0x30]
  40caf1:	mov    edx,DWORD PTR [ebp-0xc]
  40caf4:	xor    eax,esi
  40caf6:	add    eax,edi
  40caf8:	imul   eax,edx
  40cafb:	mov    edx,DWORD PTR [ebp-0x28]
  40cafe:	xor    edx,esi
  40cb00:	add    eax,edx
  40cb02:	mov    edx,DWORD PTR [ebp-0x8]
  40cb05:	movzx  eax,BYTE PTR [eax+edx*1+0x3272ec]
  40cb0d:	mov    edx,DWORD PTR [ebp-0x50]
  40cb10:	xor    edx,esi
  40cb12:	lea    eax,[edx+eax*1+0x3272ec]
  40cb19:	movzx  edx,BYTE PTR [ebp-0x1]
  40cb1d:	xor    edx,eax
  40cb1f:	mov    BYTE PTR [ebp-0x1],dl
  40cb22:	mov    al,BYTE PTR [ebp-0x1]
  40cb25:	mov    edx,DWORD PTR [ebp-0x30]
  40cb28:	mov    ebx,DWORD PTR [ebp-0xc]
  40cb2b:	xor    edx,esi
  40cb2d:	add    edx,edi
  40cb2f:	imul   edx,ebx
  40cb32:	mov    ebx,DWORD PTR [ebp-0x8]
  40cb35:	mov    BYTE PTR [edx+ebx*1],al
  40cb38:	mov    eax,DWORD PTR [ebp-0x40]
  40cb3b:	mov    edx,DWORD PTR [ebp-0x28]
  40cb3e:	xor    eax,esi
  40cb40:	xor    edx,esi
  40cb42:	add    eax,edi
  40cb44:	add    edx,edi
  40cb46:	imul   eax,edx
  40cb49:	add    eax,DWORD PTR [ebp-0xc]
  40cb4c:	mov    DWORD PTR [ebp-0xc],eax
  40cb4f:	mov    eax,DWORD PTR [ebp-0xc]
  40cb52:	mov    edx,DWORD PTR [ebp-0x18]
  40cb55:	cmp    edx,eax
  40cb57:	jb     0x40ca6a
  40cb5d:	mov    eax,DWORD PTR [ebp-0x28]
  40cb60:	mov    edx,DWORD PTR [ebp-0x18]
  40cb63:	xor    eax,esi
  40cb65:	add    eax,edi
  40cb67:	imul   eax,edx
  40cb6a:	mov    edx,DWORD PTR [ebp-0x1c]
  40cb6d:	xor    edx,esi
  40cb6f:	add    edx,edi
  40cb71:	or     eax,edx
  40cb73:	mov    edx,DWORD PTR [ebp-0x20]
  40cb76:	xor    edx,esi
  40cb78:	add    eax,edx
  40cb7a:	mov    edx,DWORD PTR [ebp-0x20]
  40cb7d:	xor    edx,esi
  40cb7f:	add    eax,edx
  40cb81:	mov    edx,DWORD PTR [ebp-0x10]
  40cb84:	lea    eax,[eax+edx*1+0x64e5d8]
  40cb8b:	jmp    0x40cb9f
  40cb90:	mov    eax,DWORD PTR [ebp-0x20]
  40cb93:	mov    edx,DWORD PTR [ebp-0x10]
  40cb96:	xor    eax,esi
  40cb98:	lea    eax,[eax+edx*1+0x3272ec]
  40cb9f:	mov    DWORD PTR [ebp-0x10],eax
  40cba2:	jmp    0x4082ff
  40cba7:	mov    ebx,DWORD PTR [ebp-0x3c]
  40cbaa:	mov    eax,DWORD PTR [ebp+0xc]
  40cbad:	xor    eax,esi
  40cbaf:	lea    ecx,[ecx+eax*1+0x3272ec]
  40cbb6:	lea    eax,[ecx-0x3272ec]
  40cbbc:	xor    eax,esi
  40cbbe:	cmp    eax,0xf89c95b0
  40cbc3:	jne    0x405f47
  40cbc9:	dec    DWORD PTR [ebp-0x34]
  40cbcc:	jne    0x405f3b
  40cbd2:	mov    eax,DWORD PTR [ebp+0x8]
  40cbd5:	mov    ecx,DWORD PTR [ebp+0xc]
  40cbd8:	mov    edx,DWORD PTR [ebp+0x8]
  40cbdb:	xor    ecx,esi
  40cbdd:	mov    cl,BYTE PTR [ecx+ebx*1+0x3272ec]
  40cbe4:	xor    eax,esi
  40cbe6:	mov    al,BYTE PTR [eax+ebx*1+0x3272ec]
  40cbed:	xor    edx,esi
  40cbef:	mov    BYTE PTR [edx+ebx*1+0x3272ec],cl
  40cbf6:	mov    ecx,DWORD PTR [ebp+0xc]
  40cbf9:	xor    ecx,esi
  40cbfb:	mov    BYTE PTR [ecx+ebx*1+0x3272ec],al
  40cc02:	mov    eax,DWORD PTR [ebp+0xc]
  40cc05:	xor    eax,esi
  40cc07:	add    eax,edi
  40cc09:	pop    edi
  40cc0a:	pop    esi
  40cc0b:	pop    ebx
  40cc0c:	leave  
  40cc0d:	ret    0x8
  40cc10:	xor    eax,eax
  40cc12:	inc    eax
  40cc13:	ret    
  40cc14:	push   ebp
  40cc15:	mov    ebp,esp
  40cc17:	sub    esp,0x38
  40cc1a:	mov    eax,ds:0x42d01c
  40cc1f:	sbb    DWORD PTR ds:0x42c014,eax
  40cc25:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  40cc2c:	add    eax,DWORD PTR ds:0x429018
  40cc32:	push   ebx
  40cc33:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  40cc3a:	xor    DWORD PTR ds:0x42a014,ebx
  40cc40:	mov    eax,DWORD PTR [ebp-0x4]
  40cc43:	push   esi
  40cc44:	mov    esi,DWORD PTR ds:0x429020
  40cc4a:	or     esi,DWORD PTR ds:0x42d01c
  40cc50:	mov    DWORD PTR ds:0x429020,esi
  40cc56:	mov    esi,0x75108a4
  40cc5b:	xor    DWORD PTR ds:0x42a01c,0x42b018
  40cc65:	xor    eax,esi
  40cc67:	and    DWORD PTR ds:0x429014,0x42c01c
  40cc71:	push   edi
  40cc72:	mov    edi,0x3272ec
  40cc77:	add    eax,edi
  40cc79:	or     DWORD PTR ds:0x42b014,0x42a008
  40cc83:	mov    DWORD PTR [ebp-0x1c],eax
  40cc86:	sub    eax,DWORD PTR ds:0x42900c
  40cc8c:	mov    eax,DWORD PTR [ebp+0x14]
  40cc8f:	sbb    DWORD PTR ds:0x42c010,0x42d01c
  40cc99:	test   eax,eax
  40cc9b:	mov    DWORD PTR ds:0x42d018,0x202a
  40cca5:	je     0x40ccb9
  40ccab:	mov    eax,DWORD PTR [ebp+0x14]
  40ccae:	adc    ebx,0xa49
  40ccb4:	mov    eax,DWORD PTR [eax]
  40ccb6:	mov    DWORD PTR [ebp-0x1c],eax
  40ccb9:	mov    eax,DWORD PTR [ebp-0x4]
  40ccbc:	sub    ebx,0x2794
  40ccc2:	xor    eax,esi
  40ccc4:	mov    DWORD PTR ds:0x42c008,0x10
  40ccce:	cmp    DWORD PTR ds:0x42c008,0x0
  40ccd5:	je     0x40cd41
  40ccdb:	cmp    DWORD PTR ds:0x42c008,0x9
  40cce2:	jl     0x40cd41
  40cce8:	jmp    0x40cd13
  40cced:	push   0x3f9f
  40ccf2:	push   DWORD PTR [ebp-0x20]
  40ccf5:	push   DWORD PTR [ebp-0x24]
  40ccf8:	push   0x35ef
  40ccfd:	push   DWORD PTR [ebp-0x1c]
  40cd00:	push   DWORD PTR [ebp-0x14]
  40cd03:	push   0x24ee
  40cd08:	push   0x42f016
  40cd0d:	call   DWORD PTR ds:0x430047
  40cd13:	cmp    DWORD PTR ds:0x42c008,0xa
  40cd1a:	jne    0x40cd2f
  40cd20:	xor    ebx,ebx
  40cd22:	add    ebx,DWORD PTR ds:0x42c008
  40cd28:	dec    ebx
  40cd29:	mov    DWORD PTR ds:0x42c008,ebx
  40cd2f:	mov    ebx,DWORD PTR ds:0x42c008
  40cd35:	dec    ebx
  40cd36:	mov    DWORD PTR ds:0x42c008,ebx
  40cd3c:	jmp    0x40ccce
  40cd41:	add    eax,edi
  40cd43:	adc    ebx,0x57bc
  40cd49:	mov    DWORD PTR [ebp-0x8],eax
  40cd4c:	add    DWORD PTR ds:0x42a018,edi
  40cd52:	mov    eax,DWORD PTR [ebp-0xc]
  40cd55:	xor    eax,esi
  40cd57:	add    DWORD PTR ds:0x42c008,ebx
  40cd5d:	add    eax,edi
  40cd5f:	mov    DWORD PTR [ebp-0x24],eax
  40cd62:	mov    eax,ds:0x42a018
  40cd67:	add    DWORD PTR ds:0x42c000,eax
  40cd6d:	mov    eax,DWORD PTR [ebp-0x4]
  40cd70:	xor    DWORD PTR ds:0x429020,edi
  40cd76:	xor    eax,esi
  40cd78:	add    eax,edi
  40cd7a:	or     DWORD PTR ds:0x42b010,edx
  40cd80:	mov    DWORD PTR [ebp-0x30],eax
  40cd83:	mov    ebx,DWORD PTR [ebp-0x4]
  40cd86:	add    DWORD PTR ds:0x429018,0xc83
  40cd90:	jmp    0x40f126
  40cd95:	inc    edx
  40cd96:	mov    cl,dl
  40cd98:	rol    DWORD PTR [edx+0x31793981],0x8f
  40cd9f:	sti    
  40cda0:	jne    0x40cdd3
  40cda2:	ds jecxz 0x40ce14
  40cda5:	inc    edi
  40cda6:	retf   0x7a7a
  40cda9:	add    eax,0x727a7a5f
  40cdae:	mov    cl,0x49
  40cdb0:	(bad)
  40cdb4:	and    BYTE PTR [ebp+0x2],bl
  40cdb7:	mov    dh,0x47
  40cdb9:	pop    edi
  40cdba:	daa    
  40cdbb:	sbb    al,0xa9
  40cdbd:	sbb    esp,0x16
  40cdc0:	mov    ch,0xfe
  40cdc2:	popf   
  40cdc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cdc4:	int3   
  40cdc5:	mov    ds:0xa5697770,al
  40cdca:	mov    eax,ds:0x73cc5e4c
  40cdcf:	les    edi,FWORD PTR [ecx-0x6752f477]
  40cdd5:	pop    ebp
  40cdd6:	outs   dx,BYTE PTR ds:[esi]
  40cdd7:	push   0xa73a05ae
  40cddc:	out    0xad,eax
  40cdde:	call   0x8bdc:0x25b82b81
  40cde5:	and    bh,0x4
  40cde8:	or     ebp,DWORD PTR [ebx-0x58f41fad]
  40cdee:	push   0xaed5cdef
  40cdf3:	dec    edi
  40cdf4:	push   esi
  40cdf5:	mov    cl,0x4f
  40cdf7:	inc    edi
  40cdf8:	inc    eax
  40cdf9:	jmp    0x40cd7d
  40cdfb:	push   ebp
  40cdfc:	jmp    0x40cd85
  40cdfe:	hlt    
  40cdff:	test   BYTE PTR [ebp-0xb],dh
  40ce02:	outs   dx,DWORD PTR ds:[si]
  40ce04:	and    eax,0xe5e74d8f
  40ce09:	rcr    DWORD PTR [edi+0x3c392e62],cl
  40ce0f:	mov    BYTE PTR [edi-0x75b5a929],ch
  40ce15:	test   BYTE PTR [ebx-0x650b462],bh
  40ce1b:	ret    0xda79
  40ce1e:	mov    dh,0x5d
  40ce20:	xor    eax,0x68c993c4
  40ce25:	and    eax,0x393767c8
  40ce2a:	jno    0x40cdf2
  40ce2c:	int3   
  40ce2d:	ja     0x40ce52
  40ce2f:	xchg   edi,eax
  40ce31:	adc    cl,BYTE PTR [esi-0x52]
  40ce34:	aam    0x9
  40ce36:	stos   DWORD PTR es:[edi],eax
  40ce37:	aam    0x8e
  40ce39:	popa   
  40ce3a:	(bad)  [esi+ebx*1-0x31]
  40ce3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce3f:	in     eax,dx
  40ce40:	cmp    edi,DWORD PTR [edx+esi*8-0x533c3612]
  40ce47:	or     eax,0x68f99465
  40ce4c:	rcl    BYTE PTR [ebx+0x4033a944],0xaa
  40ce53:	inc    cx
  40ce55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce56:	push   edi
  40ce57:	addr16 (bad) 
  40ce5a:	push   es
  40ce5b:	sbb    dl,BYTE PTR ds:0x93e3e0b7
  40ce61:	aad    0x95
  40ce63:	mov    cl,bh
  40ce65:	dec    edi
  40ce66:	popa   
  40ce67:	ret    0xfdf1
  40ce6a:	mov    dl,0xe4
  40ce6c:	sahf   
  40ce6d:	mov    eax,0x64a92920
  40ce72:	faddp  st(1),st
  40ce74:	adc    eax,0x2969645e
  40ce79:	mov    ebp,0x367f61be
  40ce7e:	popf   
  40ce7f:	icebp  
  40ce80:	xor    al,0xd7
  40ce82:	outs   dx,DWORD PTR ds:[esi]
  40ce83:	cmp    BYTE PTR [edi-0x9],cl
  40ce86:	arpl   sp,di
  40ce88:	xor    ch,BYTE PTR [ebp+edx*4+0x41]
  40ce8c:	pusha  
  40ce8d:	pop    es
  40ce8e:	ret    0x6941
  40ce91:	addr16 mov bl,cl
  40ce94:	push   esi
  40ce95:	xor    BYTE PTR [ebp-0x19],dl
  40ce98:	add    bl,ah
  40ce9a:	push   es
  40ce9b:	sar    BYTE PTR [ebx+0x40],cl
  40ce9e:	jmp    0x22300d48
  40cea3:	inc    ebx
  40cea4:	loop   0x40ce77
  40cea6:	inc    ebp
  40cea7:	sbb    edi,DWORD PTR [eax]
  40cea9:	sahf   
  40ceaa:	push   esi
  40ceab:	(bad)  
  40ceac:	or     esi,ebx
  40ceae:	(bad)  
  40ceaf:	pop    ds
  40ceb0:	(bad)
  40ceb4:	push   0xe6fcf350
  40ceb9:	test   eax,0x82909ad6
  40cebe:	cli    
  40cebf:	outs   dx,DWORD PTR ds:[esi]
  40cec0:	pop    eax
  40cec1:	and    bh,0x87
  40cec4:	pushf  
  40cec5:	adc    DWORD PTR ds:[eax],esi
  40cec8:	sub    DWORD PTR [edi+0x3c1cc6c2],0xc7ddc19
  40ced2:	ret    0x735b
  40ced5:	mov    bl,0x33
  40ced7:	mov    esi,0x2a41ed27
  40cedc:	(bad)
  40cee0:	push   ds
  40cee1:	cdq    
  40cee2:	ficomp WORD PTR [esi+0x36]
  40cee5:	push   ebp
  40cee6:	pop    esp
  40cee7:	arpl   WORD PTR [edx+0x18],bp
  40ceea:	call   0xe015:0x6ae0f4d3
  40cef1:	fdiv   QWORD PTR [esi+eax*1+0x74]
  40cef5:	xor    edi,DWORD PTR [ebp-0x1829ee3f]
  40cefb:	push   eax
  40cefc:	push   cs
  40cefd:	mov    dl,0x7b
  40ceff:	test   ch,0xc0
  40cf02:	cmp    ecx,DWORD PTR [ebx-0x162af5e2]
  40cf08:	js     0x40cf65
  40cf0a:	popa   
  40cf0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf0c:	test   al,0x41
  40cf0e:	pop    ebx
  40cf0f:	mov    ebx,0x8eba7c91
  40cf15:	icebp  
  40cf16:	mov    eax,ds:0x68cc2126
  40cf1b:	mov    ?,ebp
  40cf1d:	sbb    DWORD PTR [esi+0x7a84317e],eax
  40cf23:	out    dx,eax
  40cf24:	leave  
  40cf25:	and    eax,0x16fd575d
  40cf2a:	mov    esi,0x7150ffb1
  40cf2f:	and    BYTE PTR [ebx-0x14],0x3f
  40cf33:	lahf   
  40cf34:	and    cl,al
  40cf36:	inc    edx
  40cf37:	jns    0x40cf88
  40cf39:	repz xor eax,0x72da39e4
  40cf3f:	loopne 0x40cefb
  40cf41:	fcomp  QWORD PTR [edx+0x9]
  40cf44:	mov    WORD PTR [edx+0x54ce1893],fs
  40cf4a:	js     0x40cf44
  40cf4c:	mov    DWORD PTR [esp+eax*4],ecx
  40cf4f:	and    eax,DWORD PTR [esp+eax*8]
  40cf52:	call   0x59243280
  40cf57:	dec    edi
  40cf58:	mov    bh,0x3b
  40cf5a:	inc    edi
  40cf5b:	psrlq  mm3,QWORD PTR [edi]
  40cf5e:	(bad)  
  40cf5f:	mov    dh,0x60
  40cf61:	test   DWORD PTR [ecx+0x7],ecx
  40cf64:	push   esi
  40cf65:	sub    DWORD PTR [esi-0x4e347aac],ecx
  40cf6b:	test   BYTE PTR [edi],0x4f
  40cf6e:	aaa    
  40cf6f:	sbb    ah,bh
  40cf71:	push   ss
  40cf72:	mov    ds:0x3cc726e,eax
  40cf77:	test   DWORD PTR [edi],eax
  40cf79:	sub    BYTE PTR [ebx+0x67ab0081],bh
  40cf7f:	aad    0xb8
  40cf81:	scas   al,BYTE PTR es:[edi]
  40cf82:	dec    esp
  40cf83:	jo     0x40cf66
  40cf85:	mov    ch,0x87
  40cf87:	adc    BYTE PTR [edi+ecx*8],0x3c
  40cf8b:	sbb    BYTE PTR [ebp-0x1c],0xac
  40cf8f:	sbb    eax,0x45792bb
  40cf94:	push   cs
  40cf95:	(bad)  
  40cf96:	xchg   ecx,eax
  40cf97:	sub    BYTE PTR ds:0x8da7c37b,bl
  40cf9d:	cmp    al,0x29
  40cf9f:	shr    dh,1
  40cfa1:	iret   
  40cfa2:	jmp    0x182a980b
  40cfa7:	xlat   BYTE PTR ds:[ebx]
  40cfa8:	inc    ecx
  40cfa9:	jp     0x40cfff
  40cfab:	sub    DWORD PTR [esi],esp
  40cfad:	ret    
  40cfae:	stos   DWORD PTR es:[edi],eax
  40cfaf:	pop    ecx
  40cfb0:	dec    ecx
  40cfb1:	xchg   ecx,eax
  40cfb2:	(bad)  
  40cfb3:	repnz cmp eax,0x48e4d492
  40cfb9:	(bad)
  40cfbd:	in     al,dx
  40cfbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cfbf:	mov    dh,dh
  40cfc1:	add    dl,BYTE PTR [ebx+0x801eef1]
  40cfc7:	das    
  40cfc8:	mov    al,ds:0xae7d3b37
  40cfcd:	retf   0x2479
  40cfd0:	dec    esi
  40cfd1:	popa   
  40cfd2:	mov    edi,DWORD PTR [esi+eiz*4+0x3f11d65b]
  40cfd9:	ins    DWORD PTR es:[edi],dx
  40cfda:	lahf   
  40cfdb:	call   0xcabc:0x141c3b6c
  40cfe2:	ror    BYTE PTR [ebx+0x43],0x79
  40cfe6:	sub    dh,bh
  40cfe8:	int    0x60
  40cfea:	jae    0x40cfe0
  40cfec:	std    
  40cfed:	push   DWORD PTR [ebp+0x548a1481]
  40cff3:	cmp    al,0x17
  40cff5:	in     eax,0x75
  40cff7:	mov    esp,0x34f219e7
  40cffc:	addr16 mov ds:0xa57,eax
  40d000:	jecxz  0x40d07e
  40d002:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d003:	pop    esi
  40d004:	retf   0x894a
  40d007:	lea    ebp,[edx-0x208647ee]
  40d00d:	sub    ecx,eax
  40d00f:	dec    edi
  40d010:	aas    
  40d011:	int3   
  40d012:	push   0xc957a1cc
  40d017:	xlat   BYTE PTR ds:[ebx]
  40d018:	dec    ebx
  40d019:	fcmovne st,st(7)
  40d01b:	ret    
  40d01c:	cmp    esi,DWORD PTR [ecx-0x8dca127]
  40d022:	fwait
  40d023:	pop    es
  40d024:	mov    BYTE PTR [edx+edi*1],ch
  40d027:	xchg   ebp,eax
  40d028:	mov    esi,0x62be4ff2
  40d02d:	mov    edi,0x1b77b47d
  40d032:	outs   dx,DWORD PTR ds:[esi]
  40d033:	jo     0x40d012
  40d035:	ja     0x40cfbe
  40d037:	push   ds
  40d038:	xchg   ecx,eax
  40d039:	pop    esp
  40d03a:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  40d03c:	out    0xa5,eax
  40d03e:	(bad)  
  40d03f:	rol    ah,1
  40d041:	and    al,0x1d
  40d043:	out    0xda,al
  40d045:	mov    dh,0x5
  40d047:	arpl   WORD PTR [eax-0x7051629e],bx
  40d04d:	xor    DWORD PTR gs:[edx-0x13],edx
  40d051:	retf   
  40d052:	aam    0x13
  40d054:	enter  0x81e3,0xb
  40d058:	inc    edi
  40d059:	xlat   BYTE PTR ds:[ebx]
  40d05a:	jbe    0x40d01f
  40d05c:	call   0x73e4:0xb75fc5c
  40d063:	xchg   esi,eax
  40d064:	loope  0x40cffc
  40d066:	and    DWORD PTR ds:[edi+0x707067cb],ebp
  40d06d:	push   edx
  40d06e:	dec    eax
  40d06f:	into   
  40d070:	xchg   DWORD PTR [edx],ebp
  40d072:	push   ecx
  40d073:	push   ebp
  40d074:	nop
  40d075:	cmp    ecx,DWORD PTR [edi+0x54395257]
  40d07b:	addr16 int3 
  40d07d:	jmp    0x9b0a:0xceb786b6
  40d084:	es in  eax,dx
  40d086:	outs   dx,DWORD PTR ds:[esi]
  40d087:	adc    BYTE PTR [ebx+0x59],ch
  40d08a:	dec    edx
  40d08b:	test   BYTE PTR [ebx+edi*2-0x7f],ah
  40d08f:	and    dl,al
  40d091:	aam    0x2b
  40d093:	mov    eax,0x8862b60d
  40d098:	fwait
  40d099:	loopne 0x40d0e4
  40d09b:	inc    ebp
  40d09c:	jns    0x40d0ea
  40d09e:	jg     0x40d0ad
  40d0a0:	and    dl,cl
  40d0a2:	xchg   esi,eax
  40d0a3:	lods   al,BYTE PTR ds:[esi]
  40d0a4:	jno    0x40d0ba
  40d0a6:	stos   BYTE PTR es:[edi],al
  40d0a7:	cld    
  40d0a8:	inc    esi
  40d0a9:	out    dx,eax
  40d0aa:	(bad)  
  40d0ab:	cwde   
  40d0ac:	or     ecx,ebp
  40d0ae:	ror    dl,1
  40d0b0:	mov    al,cl
  40d0b2:	jns    0x40d09f
  40d0b4:	mov    edx,0x30c8db7d
  40d0b9:	aad    0x65
  40d0bb:	cld    
  40d0bc:	nop
  40d0bd:	jp     0x40d0f8
  40d0bf:	das    
  40d0c0:	xchg   edi,eax
  40d0c1:	inc    eax
  40d0c2:	sbb    esi,DWORD PTR es:[edx+0x7c]
  40d0c6:	shr    edx,0x9e
  40d0c9:	push   cs
  40d0ca:	adc    BYTE PTR [eax-0x69],bh
  40d0cd:	repz fwait
  40d0cf:	fs dec ecx
  40d0d1:	rcr    DWORD PTR [edx],1
  40d0d3:	(bad)  
  40d0d4:	fadd   st(5),st
  40d0d6:	out    dx,eax
  40d0d7:	(bad)  
  40d0d8:	mov    bl,0xaa
  40d0da:	mov    ecx,0x84f65c3c
  40d0df:	imul   ecx,DWORD PTR [ebx+0x38a21d4f],0x4894ac44
  40d0e9:	fldenv [edi]
  40d0eb:	mov    BYTE PTR ds:0x6b92550c,cl
  40d0f1:	sub    al,0x81
  40d0f3:	pop    ebx
  40d0f4:	xchg   DWORD PTR [edi],ecx
  40d0f6:	cli    
  40d0f7:	sar    bh,1
  40d0f9:	es mov ch,0xf7
  40d0fc:	sbb    al,0x86
  40d0fe:	lods   al,BYTE PTR ds:[esi]
  40d0ff:	pop    ecx
  40d100:	out    0xd0,al
  40d102:	jne    0x40d0bc
  40d104:	in     eax,dx
  40d105:	arpl   WORD PTR [edx+0x38],si
  40d108:	pop    edi
  40d109:	and    BYTE PTR [esi],cl
  40d10b:	inc    edi
  40d10c:	mov    edi,0xdb75a6a4
  40d111:	in     al,0xc1
  40d113:	gs gs cli 
  40d116:	push   ebp
  40d117:	mov    bh,0x2e
  40d119:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d11b:	loope  0x40d132
  40d11d:	push   edi
  40d11e:	pushf  
  40d11f:	sub    bh,BYTE PTR [esi-0x4b]
  40d122:	or     cl,BYTE PTR [edi+0x14]
  40d125:	jmp    0xf311:0xadd11f98
  40d12c:	dec    edi
  40d12d:	or     ebp,edx
  40d12f:	dec    eax
  40d130:	mov    al,ds:0x50159aec
  40d135:	fld    st(1)
  40d137:	retf   
  40d138:	cdq    
  40d139:	and    eax,0x43ead743
  40d13e:	in     al,dx
  40d13f:	pop    ecx
  40d140:	jmp    0x8883:0x361a58f5
  40d147:	xchg   ebp,eax
  40d148:	cmp    eax,eax
  40d14a:	jecxz  0x40d1b4
  40d14c:	and    esp,DWORD PTR [ecx]
  40d14e:	xor    edx,DWORD PTR [edi+ebp*4+0x6bec29b6]
  40d155:	leave  
  40d156:	sahf   
  40d157:	xor    al,BYTE PTR [ebx-0x34]
  40d15a:	inc    ecx
  40d15b:	xchg   ch,cl
  40d15d:	cmp    cl,ch
  40d15f:	xchg   esp,eax
  40d160:	call   0x70a5:0x13945826
  40d167:	mov    BYTE PTR [ecx-0x72fb1979],bh
  40d16d:	iret   
  40d16e:	xlat   BYTE PTR fs:[ebx]
  40d170:	outs   dx,DWORD PTR ds:[esi]
  40d171:	jnp    0x40d10a
  40d173:	mov    cl,BYTE PTR [ebp+0x16b209ef]
  40d179:	xor    BYTE PTR [edx-0x74],bh
  40d17c:	scas   al,BYTE PTR es:[edi]
  40d17d:	push   es
  40d17e:	pop    esi
  40d17f:	cmp    bl,BYTE PTR [ebx+0x53109167]
  40d185:	and    BYTE PTR [esi],dh
  40d187:	or     edi,ebx
  40d189:	jne    0x40d10c
  40d18b:	jecxz  0x40d1c5
  40d18d:	add    DWORD PTR [edx+0x69f598d5],ebp
  40d193:	push   ds
  40d194:	inc    bp
  40d196:	jae    0x40d14d
  40d198:	xor    eax,0x28703966
  40d19d:	out    0xae,eax
  40d19f:	jnp    0x40d1a8
  40d1a1:	push   cs
  40d1a2:	iret   
  40d1a3:	(bad)  
  40d1a5:	nop
  40d1a6:	(bad)  
  40d1a8:	test   eax,0xdb67e8f5
  40d1ad:	rcl    bl,cl
  40d1af:	mov    ebp,0x91a1d082
  40d1b4:	jo     0x40d216
  40d1b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d1b7:	retf   0x84c8
  40d1ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d1bb:	ds add al,0x3a
  40d1be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d1bf:	pop    edx
  40d1c0:	xor    al,0x9d
  40d1c2:	(bad)  
  40d1c3:	mov    eax,0x49c02599
  40d1c8:	push   ebp
  40d1c9:	dec    ebx
  40d1ca:	push   eax
  40d1cb:	jp     0x40d21a
  40d1cd:	sub    ebp,DWORD PTR [edx+ebp*1-0x38]
  40d1d1:	add    edx,DWORD PTR [eax+0x5a]
  40d1d4:	leave  
  40d1d5:	inc    edi
  40d1d6:	cwde   
  40d1d7:	and    DWORD PTR [eiz*2-0x798ac833],0xb100eb76
  40d1e2:	test   ebp,ecx
  40d1e4:	ror    BYTE PTR [eax],cl
  40d1e6:	in     al,0xb4
  40d1e8:	gs nop
  40d1ea:	scas   al,BYTE PTR es:[edi]
  40d1eb:	enter  0xa1d6,0x16
  40d1ef:	arpl   WORD PTR [ebp+0x61669498],bx
  40d1f5:	xchg   esi,eax
  40d1f6:	cld    
  40d1f7:	mov    BYTE PTR [eax],0xd
  40d1fa:	or     DWORD PTR [esi-0x56ce607e],ebx
  40d200:	outs   dx,BYTE PTR ds:[esi]
  40d201:	push   ss
  40d202:	addr16 xchg edx,edx
  40d205:	jge    0x40d251
  40d207:	(bad)  
  40d209:	into   
  40d20a:	in     eax,dx
  40d20b:	cmp    DWORD PTR [eax-0x1ee51c0c],ebx
  40d211:	cmp    edi,DWORD PTR [ebx]
  40d213:	daa    
  40d214:	sbb    eax,0x3c72b40
  40d219:	ds int 0x23
  40d21c:	outs   dx,BYTE PTR ds:[esi]
  40d21d:	repz aas 
  40d21f:	pushf  
  40d220:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d221:	sbb    eax,0x90291ef0
  40d226:	xor    DWORD PTR [esi],edi
  40d228:	scas   al,BYTE PTR es:[edi]
  40d229:	(bad)  
  40d22a:	mov    ds:0x466356a1,eax
  40d22f:	inc    esp
  40d230:	fisttp DWORD PTR [edx+ebx*8+0x49]
  40d234:	add    BYTE PTR [edi+0x5e],al
  40d237:	adc    BYTE PTR [ebp+0x17],ch
  40d23a:	and    BYTE PTR [ebx+0x35296499],dh
  40d240:	(bad)  
  40d241:	push   ebp
  40d242:	sbb    eax,0x32b0bf32
  40d247:	inc    esi
  40d248:	outs   dx,BYTE PTR ds:[esi]
  40d249:	shl    DWORD PTR [esi-0x16],1
  40d24c:	ins    BYTE PTR es:[edi],dx
  40d24d:	sar    ecx,cl
  40d24f:	pop    DWORD PTR [esi]
  40d251:	in     eax,0x7b
  40d253:	rol    DWORD PTR [ebx],0x95
  40d256:	cmp    eax,0xc9ebf72b
  40d25b:	push   edx
  40d25c:	mov    ds:0x49802c58,eax
  40d261:	test   BYTE PTR [edi],ch
  40d263:	jnp    0x40d21b
  40d265:	sahf   
  40d266:	jmp    0x6649:0xf6a114eb
  40d26d:	jle    0x40d236
  40d26f:	push   0xffffffc3
  40d271:	add    BYTE PTR [edi],cl
  40d273:	sar    ebx,1
  40d275:	xchg   ecx,eax
  40d276:	minps  xmm6,XMMWORD PTR [esi]
  40d279:	in     eax,0x5e
  40d27b:	faddp  st(5),st
  40d27d:	push   ss
  40d27e:	repnz out dx,al
  40d280:	(bad)  
  40d281:	cmc    
  40d282:	push   ss
  40d283:	push   0x86cd5dd6
  40d288:	xchg   esp,eax
  40d289:	push   ecx
  40d28a:	shl    eax,0xad
  40d28d:	mov    ch,BYTE PTR [edi+0x297e376d]
  40d293:	pop    ebx
  40d294:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d295:	jae    0x40d262
  40d297:	aad    0x27
  40d299:	inc    eax
  40d29a:	and    eax,0x18d7c6d9
  40d29f:	xchg   ebx,eax
  40d2a0:	mov    ds:0xfe4067a,al
  40d2a5:	pop    es
  40d2a6:	loope  0x40d2d3
  40d2a8:	adc    bh,BYTE PTR [ebx+0x3a64f271]
  40d2ae:	and    eax,edi
  40d2b0:	inc    ecx
  40d2b1:	inc    esp
  40d2b2:	repnz mov edi,0x43073f80
  40d2b8:	dec    edi
  40d2b9:	add    eax,0x2159acc6
  40d2be:	add    ebp,DWORD PTR [esi]
  40d2c0:	and    al,0xe9
  40d2c2:	mov    BYTE PTR [eax-0x222f4470],ah
  40d2c8:	dec    ebp
  40d2c9:	jg     0x40d2e1
  40d2cb:	dec    edi
  40d2cc:	loopne 0x40d2ef
  40d2ce:	test   cl,ah
  40d2d0:	stos   DWORD PTR es:[edi],eax
  40d2d1:	fwait
  40d2d2:	mov    ebp,0x3c345994
  40d2d7:	xor    ah,ch
  40d2d9:	mov    ds,WORD PTR [esi]
  40d2db:	mov    ecx,0xdf89fc6d
  40d2e0:	mov    al,0x5c
  40d2e2:	lods   eax,DWORD PTR ds:[esi]
  40d2e3:	hlt    
  40d2e4:	lods   eax,DWORD PTR ds:[esi]
  40d2e5:	lock or al,0xc0
  40d2e8:	loope  0x40d34c
  40d2ea:	mov    ds:0x3e6098bb,al
  40d2ef:	pop    ecx
  40d2f0:	int    0x2f
  40d2f2:	mov    dh,0xf3
  40d2f4:	gs aam 0xf4
  40d2f7:	push   edx
  40d2f8:	(bad)  
  40d2f9:	aam    0xfd
  40d2fb:	icebp  
  40d2fc:	out    dx,eax
  40d2fd:	jnp    0x40d288
  40d2ff:	adc    BYTE PTR gs:[ecx+0x10b1b56d],0xd9
  40d307:	neg    BYTE PTR [eax]
  40d309:	(bad)  ds:0xba3ac74f
  40d30f:	iret   
  40d310:	sbb    edx,DWORD PTR [edx-0x30e6a00d]
  40d316:	mov    edx,DWORD PTR [esi]
  40d318:	xor    al,0xc0
  40d31a:	inc    esi
  40d31b:	aas    
  40d31c:	push   edi
  40d31d:	ret    
  40d31e:	out    dx,eax
  40d31f:	jno    0x40d37c
  40d321:	and    eax,DWORD PTR [ecx+0x58]
  40d324:	jno    0x40d379
  40d326:	jg     0x40d379
  40d328:	mov    ah,0x6e
  40d32a:	push   ebp
  40d32b:	sub    al,0x9d
  40d32d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d32e:	mov    eax,DWORD PTR [edx+eiz*1+0x77a7cd68]
  40d335:	out    dx,al
  40d336:	test   eax,0x2bb3874c
  40d33b:	repz cld 
  40d33d:	shl    BYTE PTR [eax+0xa],0xea
  40d341:	jge    0x40d2ef
  40d343:	and    al,0x9d
  40d345:	pop    edi
  40d346:	iret   
  40d347:	pop    ebx
  40d348:	ins    BYTE PTR es:[edi],dx
  40d349:	ret    0x43dc
  40d34c:	inc    edx
  40d34d:	cdq    
  40d34e:	imul   eax,DWORD PTR [edi],0x603907f0
  40d354:	(bad)  
  40d355:	shl    BYTE PTR ds:[edx],cl
  40d358:	cwde   
  40d359:	cmp    eax,ecx
  40d35b:	imul   edi,DWORD PTR [ebp-0x74],0xbc70e173
  40d362:	cwde   
  40d363:	jmp    0xf20e5658
  40d368:	popf   
  40d369:	cdq    
  40d36a:	push   ds
  40d36b:	cdq    
  40d36c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d36d:	into   
  40d36e:	hlt    
  40d36f:	mov    ds:0xd00f891d,al
  40d374:	adc    al,0x40
  40d376:	pusha  
  40d377:	or     al,0x5b
  40d379:	retf   
  40d37a:	sbb    eax,0x65e67a3a
  40d37f:	in     al,dx
  40d380:	inc    edi
  40d381:	pop    ebx
  40d382:	or     esp,edi
  40d384:	jp     0x40d3a2
  40d386:	pop    ds
  40d387:	or     eax,0x4f4ba2b6
  40d38c:	jg     0x40d339
  40d38e:	test   eax,0xf7caa3a1
  40d393:	dec    ebx
  40d394:	int3   
  40d395:	push   ebp
  40d396:	lods   eax,DWORD PTR ds:[esi]
  40d397:	mov    ecx,0x8a2bb927
  40d39c:	stos   DWORD PTR es:[edi],eax
  40d39d:	int    0x57
  40d39f:	jne    0x40d357
  40d3a1:	mov    al,0xd5
  40d3a3:	(bad)  
  40d3a4:	dec    ecx
  40d3a5:	push   esp
  40d3a6:	out    0xe9,al
  40d3a8:	retf   
  40d3a9:	stc    
  40d3aa:	adc    BYTE PTR [edi-0x4e483264],cl
  40d3b0:	sub    al,0xde
  40d3b2:	aam    0xcc
  40d3b4:	add    ebx,DWORD PTR ds:0x7db11fb2
  40d3ba:	mov    ebx,0x41a5df2b
  40d3bf:	mov    ecx,0xf4447782
  40d3c4:	inc    esi
  40d3c5:	and    ebp,DWORD PTR [eax-0x1169dbf4]
  40d3cb:	mov    edi,0x5a24957d
  40d3d0:	cdq    
  40d3d1:	jp     0x40d3df
  40d3d3:	pop    ebp
  40d3d4:	jp     0x40d424
  40d3d6:	push   eax
  40d3d7:	ror    BYTE PTR [ebp+0x5a8430c1],0xf9
  40d3de:	or     bl,dh
  40d3e0:	aaa    
  40d3e1:	and    bh,BYTE PTR [esi+0x6f]
  40d3e4:	inc    edx
  40d3e5:	push   ss
  40d3e6:	mov    ds:0xdcc19b7a,eax
  40d3eb:	inc    ebp
  40d3ec:	stos   DWORD PTR es:[edi],eax
  40d3ed:	push   0x2a5dc7a9
  40d3f2:	jns    0x40d43a
  40d3f4:	enter  0x4e9c,0x4c
  40d3f8:	ror    edx,1
  40d3fa:	xor    BYTE PTR [ebx+0x601364fa],dl
  40d400:	cwde   
  40d401:	inc    ebx
  40d402:	sar    bh,1
  40d404:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d405:	ret    
  40d406:	add    al,0xca
  40d408:	repnz cli 
  40d40a:	call   0xbd4:0x970e0de4
  40d411:	daa    
  40d412:	push   edi
  40d413:	or     DWORD PTR [ecx+0x6e],edx
  40d416:	icebp  
  40d417:	and    DWORD PTR [esi],ebp
  40d419:	js     0x40d418
  40d41b:	adc    eax,0xd419d081
  40d420:	pop    ebp
  40d421:	stc    
  40d422:	adc    al,0x1f
  40d424:	sbb    al,0xb1
  40d426:	sbb    BYTE PTR [esi-0x2d],dl
  40d429:	(bad)  
  40d42a:	(bad)  
  40d42b:	push   esi
  40d42c:	cmp    BYTE PTR [ebx+0x79],al
  40d42f:	(bad)  
  40d431:	add    DWORD PTR [edx-0x21],ebx
  40d434:	xchg   BYTE PTR [edi+0x63],dh
  40d437:	sub    BYTE PTR [eax+0x72d4ee6e],ch
  40d43d:	jo     0x40d46c
  40d43f:	scas   eax,DWORD PTR es:[edi]
  40d440:	and    ecx,DWORD PTR [edi]
  40d442:	adc    edx,DWORD PTR ds:0x73ff7eae
  40d448:	(bad)  
  40d449:	push   esp
  40d44a:	icebp  
  40d44b:	and    BYTE PTR [edi+0x3fd8c8ad],cl
  40d451:	lods   eax,DWORD PTR ds:[esi]
  40d452:	xchg   esp,eax
  40d453:	xchg   bl,cl
  40d455:	mov    bl,0x53
  40d457:	in     eax,dx
  40d458:	mov    eax,0x76d4df45
  40d45d:	and    DWORD PTR [esi-0x49],esp
  40d460:	mov    cl,0x66
  40d462:	mov    esp,0xed679938
  40d467:	jns    0x40d486
  40d469:	add    bh,BYTE PTR [edi-0x9d282d1]
  40d46f:	repz icebp 
  40d471:	hlt    
  40d472:	shl    esp,cl
  40d474:	pop    eax
  40d475:	scas   eax,DWORD PTR es:[edi]
  40d476:	xor    al,0xda
  40d478:	jnp    0x40d4b9
  40d47a:	into   
  40d47b:	nop
  40d47c:	and    DWORD PTR [ecx],edi
  40d47e:	jb     0x40d4f6
  40d480:	mov    ah,0xf2
  40d482:	test   DWORD PTR [edi+ecx*1+0x7b],esp
  40d486:	repz lahf 
  40d488:	jg     0x40d4ee
  40d48a:	mov    bh,0x5a
  40d48c:	add    DWORD PTR [ebp+ebx*1-0x64a10821],edi
  40d493:	aad    0x42
  40d495:	jecxz  0x40d4f1
  40d497:	dec    esp
  40d498:	cmp    ch,BYTE PTR ds:0x124f16a3
  40d49e:	push   esi
  40d49f:	pushf  
  40d4a0:	fsubr  DWORD PTR [edi-0x49f55669]
  40d4a6:	mov    WORD PTR [eax],ds
  40d4a8:	adc    dh,BYTE PTR [ebx+0x7b8cd7b4]
  40d4ae:	or     ebx,DWORD PTR ds:0xad364be9
  40d4b4:	sbb    BYTE PTR [ecx+0x45],dl
  40d4b7:	lahf   
  40d4b8:	or     cl,cl
  40d4ba:	add    ebx,ebp
  40d4bc:	ror    BYTE PTR [esi],cl
  40d4be:	outs   dx,BYTE PTR ds:[esi]
  40d4bf:	mov    edx,0xddfdbbe8
  40d4c4:	fsubrp st(3),st
  40d4c6:	push   eax
  40d4c7:	jns    0x40d4ff
  40d4c9:	adc    ebp,DWORD PTR [esi]
  40d4cb:	push   cs
  40d4cc:	jp     0x40d4b0
  40d4ce:	addr16 sti 
  40d4d0:	ror    BYTE PTR [edx+0x13eee955],0xe6
  40d4d7:	daa    
  40d4d8:	dec    edx
  40d4d9:	cmc    
  40d4da:	pop    ebx
  40d4db:	inc    esp
  40d4dc:	sub    ch,cl
  40d4de:	mov    ecx,0xb8710de8
  40d4e3:	aaa    
  40d4e4:	mov    edx,0x7e50712a
  40d4e9:	mov    esp,0xe07a7003
  40d4ee:	or     dl,BYTE PTR [ecx]
  40d4f0:	or     eax,0xec4e9cbe
  40d4f5:	jmp    0x2f9b:0x59c014a3
  40d4fc:	test   al,0x2e
  40d4fe:	adc    al,0x27
  40d500:	mov    ds:0x588ad602,eax
  40d505:	lock test DWORD PTR [edx],0x6f7644ea
  40d50c:	pop    ebx
  40d50d:	jge    0x40d49c
  40d50f:	mov    ebp,DWORD PTR [ebx+0x62bf8d03]
  40d515:	dec    ebp
  40d516:	out    dx,al
  40d517:	lods   eax,DWORD PTR ds:[esi]
  40d518:	cld    
  40d519:	loop   0x40d4bb
  40d51b:	xor    al,cl
  40d51d:	push   ds
  40d51e:	sbb    al,0x40
  40d520:	push   es
  40d521:	push   ebx
  40d522:	jb     0x40d4dc
  40d524:	aad    0x88
  40d526:	in     eax,dx
  40d527:	cmp    edi,ecx
  40d529:	sbb    ch,0x6c
  40d52c:	pop    es
  40d52d:	stos   DWORD PTR es:[edi],eax
  40d52e:	ret    
  40d52f:	mov    ch,0xc7
  40d531:	in     al,0xee
  40d533:	mov    bl,0x3f
  40d535:	jp     0x40d525
  40d537:	mov    ecx,0xbfa20225
  40d53c:	aaa    
  40d53d:	xor    esp,esi
  40d53f:	pop    ds
  40d540:	mov    bh,0x52
  40d542:	mov    ds:0xb34f3d3,al
  40d547:	sub    bh,al
  40d549:	hlt    
  40d54a:	xchg   edx,eax
  40d54b:	cmp    eax,0xb8eeaaf1
  40d550:	int    0x4
  40d552:	jb     0x40d52d
  40d554:	add    al,0x1
  40d556:	cmp    al,BYTE PTR [edi]
  40d558:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d559:	dec    eax
  40d55a:	fcomp  QWORD PTR [ecx-0x600715d4]
  40d560:	test   cl,ah
  40d562:	xchg   DWORD PTR [ecx],edi
  40d564:	xchg   ebp,eax
  40d565:	and    eax,0x197c2c93
  40d56a:	or     ch,bl
  40d56c:	stos   DWORD PTR es:[edi],eax
  40d56d:	fcomp  DWORD PTR [esi-0x5fe6b422]
  40d573:	mov    ds:0x1acbd902,eax
  40d578:	fdivr  DWORD PTR [eax]
  40d57a:	sub    eax,0x5c332876
  40d57f:	test   DWORD PTR [eax-0x2577d806],0xb213e62d
  40d589:	mov    bl,0xd2
  40d58b:	add    dl,dl
  40d58d:	sbb    DWORD PTR [esi],eax
  40d58f:	push   edx
  40d590:	sbb    eax,0xf7acebd2
  40d595:	adc    DWORD PTR [edx+0x6b7f297c],esp
  40d59b:	mov    al,ds:0x68bf07ce
  40d5a0:	cmp    ebp,DWORD PTR [esi]
  40d5a2:	jmp    0x40d5f3
  40d5a4:	xor    al,0x3
  40d5a6:	shr    DWORD PTR ds:0xbf96,0xd2
  40d5ac:	arpl   WORD PTR [eax+0x9],di
  40d5af:	jne    0x40d5a4
  40d5b1:	int    0x86
  40d5b3:	push   0xffffffa7
  40d5b5:	mov    ebx,0x71cb3228
  40d5ba:	loope  0x40d59a
  40d5bc:	out    dx,eax
  40d5bd:	mov    ch,0xa5
  40d5bf:	mov    bl,0x9b
  40d5c1:	aam    0x82
  40d5c3:	ret    0x9776
  40d5c6:	jmp    0xaa46:0x9eee9d11
  40d5cd:	imul   ebp,DWORD PTR ds:0xa883bd98,0x826990c0
  40d5d7:	test   al,0x75
  40d5d9:	mov    DWORD PTR [esi],ebx
  40d5db:	push   edi
  40d5dc:	(bad)  
  40d5dd:	pop    eax
  40d5de:	pushf  
  40d5df:	sbb    DWORD PTR [esi+eiz*8-0x3f64ced1],0xad93ac3c
  40d5ea:	jns    0x40d60a
  40d5ec:	js     0x40d633
  40d5ee:	inc    ebp
  40d5ef:	iret   
  40d5f0:	cmp    DWORD PTR [ecx],ebp
  40d5f2:	outs   dx,DWORD PTR ds:[esi]
  40d5f3:	xor    edi,DWORD PTR [ebp+0x37f801aa]
  40d5f9:	hlt    
  40d5fa:	pop    cx
  40d5fc:	mov    ch,BYTE PTR [bp+si]
  40d5ff:	(bad)  
  40d600:	xor    BYTE PTR [esi-0x1c],al
  40d603:	es mov bh,0x29
  40d606:	cli    
  40d607:	fs imul esi,eax,0x75
  40d60b:	rol    DWORD PTR [ebx],cl
  40d60d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d60e:	pop    esp
  40d60f:	dec    ebx
  40d610:	xor    bh,dl
  40d612:	es xchg ecx,ebp
  40d615:	fwait
  40d616:	repnz pop edi
  40d618:	fistp  WORD PTR [edx+0x4388b4ff]
  40d61e:	jne    0x40d5bf
  40d620:	sub    BYTE PTR [ebx+0x1e],bh
  40d623:	or     al,BYTE PTR [ecx]
  40d625:	je     0x40d615
  40d627:	or     BYTE PTR [edx+0x14],dl
  40d62a:	xor    DWORD PTR [ebx],esi
  40d62c:	stos   BYTE PTR es:[edi],al
  40d62d:	cmp    edx,DWORD PTR [esi+0x3f73e708]
  40d633:	sbb    DWORD PTR ds:0x65b13d49,esp
  40d639:	xlat   BYTE PTR ds:[ebx]
  40d63a:	cmp    bl,BYTE PTR ds:0x280f492e
  40d640:	or     esi,0xffffffae
  40d643:	xlat   BYTE PTR ds:[ebx]
  40d644:	adc    edx,edi
  40d646:	loop   0x40d67e
  40d648:	sbb    eax,0x409c05f
  40d64d:	add    eax,DWORD PTR [edx+0x61]
  40d650:	mov    BYTE PTR [ebp-0x25485843],cl
  40d656:	scas   al,BYTE PTR es:[edi]
  40d657:	push   ebx
  40d658:	jns    0x40d601
  40d65a:	sar    BYTE PTR [ebx-0x4ce8ac93],cl
  40d660:	or     ebp,eax
  40d662:	inc    ebp
  40d663:	or     al,0xdb
  40d665:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d666:	stos   DWORD PTR es:[edi],eax
  40d667:	in     al,dx
  40d668:	fcomp  DWORD PTR [ebp+0x3c]
  40d66b:	out    dx,eax
  40d66c:	mov    al,0xec
  40d66e:	pop    eax
  40d66f:	popf   
  40d670:	maskmovq mm6,(bad)
  40d671:	div    DWORD PTR [ebp-0x1360a473]
  40d677:	jmp    0x40d6f1
  40d679:	shl    DWORD PTR [ecx],0xed
  40d67c:	icebp  
  40d67d:	dec    edi
  40d67e:	pop    esi
  40d67f:	test   al,0xf1
  40d681:	in     eax,0x98
  40d683:	push   esp
  40d684:	pop    esp
  40d685:	pop    ds
  40d686:	mov    ah,0x94
  40d688:	push   esi
  40d689:	das    
  40d68a:	jnp    0x40d689
  40d68c:	jl     0x40d62a
  40d68e:	popf   
  40d68f:	inc    eax
  40d690:	push   cs
  40d691:	or     DWORD PTR [edx-0x29],ebx
  40d694:	sbb    ch,al
  40d696:	jmp    0x3c19d3c
  40d69b:	rol    BYTE PTR [edi+edx*4+0x26],1
  40d69f:	stos   BYTE PTR es:[edi],al
  40d6a0:	mov    ch,0x16
  40d6a2:	lods   eax,DWORD PTR ds:[esi]
  40d6a3:	sub    dl,BYTE PTR [esi-0x62]
  40d6a6:	cs pop ds
  40d6a8:	xchg   DWORD PTR [eax+esi*1],esp
  40d6ab:	mov    ch,0x73
  40d6ad:	outs   dx,BYTE PTR ds:[esi]
  40d6ae:	mov    dh,0x4
  40d6b0:	mov    ds:0x36a95ef5,al
  40d6b5:	(bad)  
  40d6b6:	(bad)  
  40d6b7:	repz into 
  40d6b9:	push   0xffffffb5
  40d6bb:	xor    al,0x75
  40d6bd:	xchg   ecx,eax
  40d6be:	lea    eax,[edi]
  40d6c0:	or     DWORD PTR [ebx+0x40ae6590],eax
  40d6c6:	jecxz  0x40d6f2
  40d6c8:	sub    DWORD PTR [edx+0x799b34c6],edi
  40d6ce:	je     0x40d748
  40d6d0:	shl    BYTE PTR [ecx+0x29b631e1],1
  40d6d6:	cli    
  40d6d7:	push   ds
  40d6d8:	and    al,0x8b
  40d6da:	mov    BYTE PTR [eax],ch
  40d6dc:	call   0x1c0b2f69
  40d6e1:	and    bh,BYTE PTR [ecx+0x3b0e9111]
  40d6e7:	aaa    
  40d6e8:	sahf   
  40d6e9:	xchg   ebx,eax
  40d6ea:	lods   al,BYTE PTR ds:[esi]
  40d6eb:	and    BYTE PTR [ecx+eiz*1-0x64],dl
  40d6ef:	pusha  
  40d6f0:	shl    BYTE PTR [ecx+0x57d6461b],1
  40d6f6:	loope  0x40d743
  40d6f8:	scas   eax,DWORD PTR es:[edi]
  40d6f9:	mov    al,0xcb
  40d6fb:	test   al,0x21
  40d6fd:	ficom  WORD PTR [edi]
  40d6ff:	pop    esi
  40d700:	push   ds
  40d701:	fs jnp 0x40d6a3
  40d704:	xor    eax,0xde4b3f13
  40d709:	ret    
  40d70a:	and    DWORD PTR ds:0x83a8956f,0xffffffdb
  40d711:	sbb    edi,esp
  40d713:	pop    esi
  40d714:	lds    edx,FWORD PTR [eax-0x4063b811]
  40d71a:	or     al,0xa3
  40d71c:	cmp    eax,esp
  40d71e:	fiadd  WORD PTR [ecx]
  40d720:	test   BYTE PTR [eax],0x56
  40d723:	(bad)  [ecx]
  40d725:	sub    DWORD PTR [eax-0x5570b3e9],ecx
  40d72b:	sub    DWORD PTR [edi],ebx
  40d72d:	lods   eax,DWORD PTR ds:[esi]
  40d72e:	aam    0xbc
  40d730:	jne    0x40d775
  40d732:	fimul  WORD PTR [ebp+edi*1+0x2]
  40d736:	push   ecx
  40d737:	adc    eax,0xc2f59cdd
  40d73c:	and    al,al
  40d73e:	inc    ebx
  40d73f:	mov    esp,0x6599bcea
  40d744:	adc    edi,DWORD PTR [ebp-0x3c]
  40d747:	mov    ds:0xe88c1303,eax
  40d74c:	out    dx,eax
  40d74d:	add    al,0x2c
  40d74f:	pop    esi
  40d750:	jmp    0xf7f3f542
  40d755:	sub    bh,dh
  40d757:	sub    al,0xfd
  40d759:	dec    eax
  40d75a:	in     eax,dx
  40d75b:	cmp    dl,BYTE PTR ds:0x967cadb6
  40d761:	stc    
  40d762:	sub    al,0x5e
  40d764:	js     0x40d6fc
  40d766:	mov    eax,0xf50b3764
  40d76b:	shl    DWORD PTR [ebx+0x67b42e6f],cl
  40d771:	aaa    
  40d772:	(bad)  
  40d773:	adc    BYTE PTR [ebp-0xbe43bca],ch
  40d779:	(bad)  
  40d77a:	leave  
  40d77b:	sub    BYTE PTR [eax+0x5565aaae],al
  40d781:	shl    dl,0x35
  40d784:	call   esi
  40d786:	imul   ecx,DWORD PTR [ecx-0x3e],0xb6977d44
  40d78d:	lock fwait
  40d78f:	xchg   esp,eax
  40d790:	dec    edi
  40d791:	mov    DWORD PTR [eax-0x55e6f390],edi
  40d797:	mov    esp,0x67f0367d
  40d79c:	sahf   
  40d79d:	int    0xe6
  40d79f:	or     DWORD PTR [eax+edx*4-0x39f937e4],edx
  40d7a6:	sbb    eax,0xd46eeca7
  40d7ab:	repnz inc ebx
  40d7ad:	adc    bh,BYTE PTR [ebx+0x37a9512]
  40d7b3:	cs aas 
  40d7b5:	(bad)  [ebx-0x7804572d]
  40d7bb:	js     0x40d7c1
  40d7bd:	mov    eax,ds:0x1e78f368
  40d7c2:	enter  0x9209,0xb1
  40d7c6:	cmc    
  40d7c7:	mov    esi,0xb1d5e6bb
  40d7cc:	sub    ch,BYTE PTR [eax]
  40d7ce:	pop    edi
  40d7cf:	rcr    DWORD PTR [ebp+0x31c62045],0xe4
  40d7d6:	iret   
  40d7d7:	fimul  DWORD PTR [esi+0x3237a6ec]
  40d7dd:	test   al,0x88
  40d7df:	push   ebx
  40d7e0:	shl    bl,0xb4
  40d7e3:	sbb    eax,DWORD PTR [ebp-0x4]
  40d7e6:	add    ebx,DWORD PTR [eax]
  40d7e8:	(bad)  
  40d7e9:	jb     0x40d7f9
  40d7eb:	std    
  40d7ec:	aas    
  40d7ed:	xchg   BYTE PTR [edx+0x62df89e2],cl
  40d7f3:	jle    0x40d840
  40d7f5:	shl    eax,cl
  40d7f7:	xor    ebx,ebp
  40d7f9:	push   cs
  40d7fa:	xor    BYTE PTR ds:0xc9d21a72,cl
  40d800:	stos   DWORD PTR es:[edi],eax
  40d801:	xor    al,ah
  40d803:	cmc    
  40d804:	int    0xf6
  40d806:	scas   al,BYTE PTR es:[edi]
  40d807:	das    
  40d808:	or     BYTE PTR [esi+edi*4-0x44],0x3c
  40d80d:	xchg   edi,eax
  40d80e:	rol    BYTE PTR [edi-0x70],cl
  40d811:	sbb    al,0x8c
  40d813:	or     BYTE PTR [ecx+0x3],al
  40d816:	sub    DWORD PTR [ebp-0x4dc92c88],0xcce2c4fb
  40d820:	inc    ecx
  40d821:	hlt    
  40d822:	sar    DWORD PTR [eax+0x4c],cl
  40d825:	pop    ebx
  40d826:	push   ss
  40d827:	and    BYTE PTR [edx+eax*1+0x18],dl
  40d82b:	daa    
  40d82c:	data16 (bad) 
  40d82e:	out    0x68,eax
  40d830:	cmp    esp,0x6668feb2
  40d836:	or     dl,dl
  40d838:	add    eax,0x5c6c87ed
  40d83d:	or     eax,0xb7263922
  40d842:	dec    ebx
  40d843:	std    
  40d844:	iret   
  40d845:	lods   al,BYTE PTR ds:[esi]
  40d846:	aaa    
  40d847:	dec    edx
  40d848:	cli    
  40d849:	mov    ch,BYTE PTR [edi]
  40d84b:	mov    ecx,0x21c36eeb
  40d850:	sub    eax,0x8304de62
  40d855:	mov    dl,0x16
  40d857:	xor    BYTE PTR [edi],dl
  40d859:	ror    bl,1
  40d85b:	add    cl,cl
  40d85d:	fiadd  WORD PTR [eax]
  40d85f:	repnz add dh,cl
  40d862:	pushf  
  40d863:	adc    DWORD PTR [ebx],edi
  40d865:	pop    ebx
  40d866:	gs cwde 
  40d868:	push   eax
  40d869:	dec    ebx
  40d86a:	cmc    
  40d86b:	fistp  QWORD PTR [edi+0x1f]
  40d86e:	adc    eax,0x9b7302f8
  40d873:	add    dh,BYTE PTR gs:[eax-0x7]
  40d877:	lods   al,BYTE PTR ds:[esi]
  40d878:	xor    BYTE PTR [edx+0x2a8f372e],al
  40d87e:	cmp    ah,BYTE PTR [ecx+0x46dcdb12]
  40d884:	sti    
  40d885:	daa    
  40d886:	in     al,0xdc
  40d888:	icebp  
  40d889:	fidivr WORD PTR [edx-0x12335f15]
  40d88f:	enter  0x98d2,0x2
  40d893:	into   
  40d894:	pusha  
  40d895:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d896:	add    DWORD PTR ds:0x376b8819,esp
  40d89c:	outs   dx,DWORD PTR ds:[esi]
  40d89d:	not    DWORD PTR [esi]
  40d89f:	sub    eax,0x5d0b5e6a
  40d8a4:	mov    WORD PTR [edx-0x55],fs
  40d8a7:	inc    ebx
  40d8a8:	push   edi
  40d8a9:	pop    edi
  40d8aa:	imul   eax,DWORD PTR [edi],0xffffff8b
  40d8ad:	mov    ebp,0xcc966a10
  40d8b2:	repnz sub BYTE PTR ds:0x6e85a49c,bl
  40d8b9:	in     eax,0xd3
  40d8bb:	(bad)  
  40d8bc:	idiv   DWORD PTR [eax+0x51d6e890]
  40d8c2:	inc    edi
  40d8c3:	repnz hlt 
  40d8c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d8c6:	inc    edi
  40d8c7:	ror    DWORD PTR [eax+ecx*8],0x6a
  40d8cb:	retf   0x1d0a
  40d8ce:	adc    eax,0x3b0c3e83
  40d8d3:	push   0x1f74a17c
  40d8d8:	ror    DWORD PTR ds:0x4f494823,cl
  40d8de:	(bad)  
  40d8df:	(bad)  
  40d8e0:	loope  0x40d8e8
  40d8e2:	int    0xbb
  40d8e4:	push   0x58cc68e6
  40d8e9:	js     0x40d891
  40d8eb:	(bad)  
  40d8ed:	sbb    dl,BYTE PTR [edx]
  40d8ef:	add    DWORD PTR [edx],esi
  40d8f1:	loopne 0x40d93e
  40d8f3:	mov    fs,WORD PTR [ebp+edx*2-0x11]
  40d8f7:	mov    bh,0xea
  40d8f9:	(bad)  
  40d8fa:	pushf  
  40d8fb:	ds mov ecx,esi
  40d8fe:	lahf   
  40d8ff:	and    al,0x1e
  40d901:	mov    dh,0xf8
  40d903:	xchg   BYTE PTR [eax],ch
  40d905:	sub    DWORD PTR [esi],edx
  40d907:	sbb    al,0x58
  40d909:	dec    eax
  40d90a:	dec    ebp
  40d90b:	fcom   QWORD PTR [ecx+0x36]
  40d90e:	lea    ecx,[edi-0x2ab31412]
  40d914:	xchg   edi,eax
  40d915:	and    DWORD PTR [ecx+edi*8+0x13],ebx
  40d919:	xchg   ebx,eax
  40d91a:	popa   
  40d91b:	sbb    BYTE PTR [edi+0x7f],al
  40d91e:	loopne 0x40d996
  40d920:	inc    edx
  40d921:	div    edi
  40d923:	in     eax,dx
  40d924:	(bad)  [edx]
  40d926:	rcl    BYTE PTR [ecx],1
  40d928:	test   eax,0xa68a6409
  40d92d:	mov    ch,0x48
  40d92f:	cmp    edi,ebx
  40d931:	cld    
  40d932:	arpl   bp,ax
  40d934:	or     esi,DWORD PTR [eax]
  40d936:	lahf   
  40d937:	fwait
  40d938:	bnd ja 0x40d96a
  40d93b:	rcr    BYTE PTR [ebx-0x1610bc23],cl
  40d941:	push   0xd06d7e11
  40d946:	push   ds
  40d947:	sub    ecx,DWORD PTR [ebp+0x72]
  40d94a:	pop    ecx
  40d94b:	xchg   edx,eax
  40d94c:	sbb    al,0xe2
  40d94e:	mov    eax,ds:0x7d9ce972
  40d953:	rcr    DWORD PTR [edx-0x3af84593],cl
  40d959:	bound  ecx,QWORD PTR [esi+0x3b89053f]
  40d95f:	hlt    
  40d960:	sbb    eax,0x6c2ff117
  40d965:	xor    al,0x1a
  40d967:	ret    
  40d968:	and    BYTE PTR [ecx-0x7fcd0e11],0x74
  40d96f:	jbe    0x40d977
  40d971:	xchg   edx,eax
  40d972:	icebp  
  40d973:	add    bl,BYTE PTR [ecx+0x2d]
  40d976:	mov    cs,WORD PTR [eax+edi*4-0x27427dc]
  40d97d:	dec    esi
  40d97e:	ret    0x173d
  40d981:	mov    dl,0x8b
  40d983:	adc    DWORD PTR [eax+0x3d],esi
  40d986:	mov    ds:0x9468ef86,al
  40d98b:	retf   0xe98d
  40d98e:	adc    al,0x9c
  40d990:	out    0xf9,al
  40d992:	pop    ds
  40d993:	xchg   esi,eax
  40d994:	in     al,0x43
  40d996:	lds    eax,FWORD PTR [eax]
  40d998:	fmul   QWORD PTR [edx+0x7fbb3839]
  40d99e:	xchg   ebp,eax
  40d99f:	and    ebp,ecx
  40d9a1:	mov    esi,0xb4bf3eb6
  40d9a6:	and    al,0x4d
  40d9a8:	pop    ebp
  40d9a9:	xchg   ebp,eax
  40d9aa:	and    DWORD PTR [esi+ecx*1-0x6ac601da],eax
  40d9b1:	rcr    esi,1
  40d9b3:	add    ch,BYTE PTR [eax+0x7c]
  40d9b6:	test   al,0x7f
  40d9b8:	sbb    BYTE PTR [ebx+ebx*1-0x29],0xfa
  40d9bd:	imul   DWORD PTR [esi-0x17]
  40d9c0:	retf   
  40d9c1:	sti    
  40d9c2:	ds push ss
  40d9c4:	or     al,0x2b
  40d9c6:	loop   0x40d992
  40d9c8:	repz jae 0x40d976
  40d9cb:	mov    bh,0x95
  40d9cd:	xor    ebp,edx
  40d9cf:	ins    BYTE PTR es:[edi],dx
  40d9d0:	inc    esp
  40d9d1:	in     eax,dx
  40d9d2:	pop    edi
  40d9d3:	bound  eax,QWORD PTR [ebx]
  40d9d5:	fdivr  DWORD PTR [eax]
  40d9d7:	in     eax,dx
  40d9d8:	icebp  
  40d9d9:	and    al,0x47
  40d9db:	dec    edi
  40d9dc:	pop    ds
  40d9dd:	pushf  
  40d9de:	jnp    0x40d980
  40d9e0:	je     0x40d972
  40d9e2:	xchg   ebp,eax
  40d9e3:	(bad)
  40d9e6:	jbe    0x40da15
  40d9e8:	adc    edx,DWORD PTR [edi-0xa]
  40d9eb:	idiv   BYTE PTR [edx-0x22]
  40d9ee:	jge    0x40d987
  40d9f0:	mov    dh,0xee
  40d9f2:	test   al,0xbb
  40d9f4:	icebp  
  40d9f5:	(bad)  
  40d9f6:	pop    ecx
  40d9f7:	pop    ds
  40d9f8:	rcl    BYTE PTR [esi+0x29],1
  40d9fb:	xchg   esp,eax
  40d9fc:	cmp    eax,DWORD PTR [esi+ebx*2]
  40d9ff:	cwde   
  40da00:	dec    ebp
  40da01:	dec    ebx
  40da02:	mov    bh,0x86
  40da04:	dec    edx
  40da05:	out    0x3a,eax
  40da07:	jb     0x40da22
  40da09:	or     al,BYTE PTR [edx-0x2c]
  40da0c:	sbb    eax,0x49f97d96
  40da11:	sti    
  40da12:	jmp    0xaf902e25
  40da17:	inc    ebp
  40da18:	sub    DWORD PTR [edx+0x70],ebp
  40da1b:	test   BYTE PTR [ebx+0x6125527c],bh
  40da21:	sti    
  40da22:	iret   
  40da23:	and    ch,ah
  40da25:	adc    eax,0xb4ccb47d
  40da2a:	or     al,0x2e
  40da2c:	loopne 0x40da2c
  40da2e:	in     eax,dx
  40da2f:	dec    edi
  40da30:	xchg   BYTE PTR [edi+0x29a63470],bl
  40da36:	mov    ch,0xf1
  40da38:	loop   0x40da60
  40da3a:	fwait
  40da3b:	xchg   esp,eax
  40da3c:	je     0x40dabb
  40da3e:	mov    cl,0x20
  40da40:	hlt    
  40da41:	in     al,0xa8
  40da43:	xor    eax,0xc8e9a4ef
  40da48:	xchg   DWORD PTR [edi],esp
  40da4a:	lods   eax,DWORD PTR ds:[esi]
  40da4b:	push   ebp
  40da4c:	imul   edx,DWORD PTR [esi+0x6a97c1ce],0x48
  40da53:	std    
  40da54:	inc    esi
  40da55:	dec    esp
  40da56:	mov    ch,0x9b
  40da58:	jmp    0x40da4f
  40da5a:	lds    edx,FWORD PTR [edx-0x5d3e1183]
  40da60:	mov    ah,al
  40da62:	sbb    al,0xad
  40da64:	imul   ebx,DWORD PTR [edi+0x3],0xe00bae9f
  40da6b:	jne    0x40daa9
  40da6d:	push   0x142e1a
  40da72:	mov    ds:0x32ab7dd7,al
  40da77:	dec    edi
  40da78:	(bad)  
  40da79:	xchg   ebx,eax
  40da7a:	rcl    DWORD PTR [esi+0xb],1
  40da7d:	push   esi
  40da7e:	jne    0x40da92
  40da80:	xor    DWORD PTR [ebp+0x24],esp
  40da83:	lods   eax,DWORD PTR ds:[esi]
  40da84:	pop    ds
  40da85:	adc    al,al
  40da87:	shr    DWORD PTR [esi+0x24],0xf9
  40da8b:	xchg   esp,eax
  40da8c:	fcmovnu st,st(6)
  40da8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da8f:	xchg   ebp,eax
  40da90:	shr    esi,1
  40da92:	fiadd  WORD PTR ds:0x38964154
  40da98:	jg     0x40dac2
  40da9a:	adc    al,0x96
  40da9c:	push   eax
  40da9d:	and    eax,0xac8a1dcb
  40daa2:	shl    DWORD PTR cs:[ebx],1
  40daa5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40daa6:	sahf   
  40daa7:	fwait
  40daa8:	push   ebx
  40daa9:	mov    esp,0x22cb5e8a
  40daae:	hlt    
  40daaf:	pop    edi
  40dab0:	mov    al,0x39
  40dab2:	dec    esi
  40dab3:	loop   0x40da88
  40dab5:	retf   
  40dab6:	cld    
  40dab7:	jmp    0x40db2a
  40dab9:	xchg   edi,eax
  40daba:	dec    ebp
  40dabb:	and    BYTE PTR [eax+0x2c69b66e],dh
  40dac1:	daa    
  40dac2:	lods   eax,DWORD PTR ds:[esi]
  40dac3:	test   eax,0x3d1b1588
  40dac8:	out    dx,eax
  40dac9:	pop    ebx
  40daca:	cld    
  40dacb:	add    bl,dh
  40dacd:	xchg   esi,eax
  40dace:	sub    edx,esi
  40dad0:	inc    dx
  40dad2:	mov    bl,0x94
  40dad4:	out    dx,eax
  40dad5:	jge    0x40db0a
  40dad7:	fbstp  TBYTE PTR [ecx-0x4]
  40dada:	push   DWORD PTR [edx+0x275ec675]
  40dae0:	pop    edx
  40dae1:	retf   0x7111
  40dae4:	repz push edi
  40dae6:	ja     0x40db65
  40dae8:	mov    ch,0x97
  40daea:	jg     0x40db29
  40daec:	mov    esp,0x8687dc89
  40daf1:	dec    BYTE PTR [ecx-0x1d5bc199]
  40daf7:	lods   eax,DWORD PTR ds:[esi]
  40daf8:	jl     0x40db46
  40dafa:	or     al,0xc8
  40dafc:	fadd   QWORD PTR [edx-0x3f791dc9]
  40db02:	mov    edx,0x4ff3537b
  40db07:	popa   
  40db08:	mov    eax,0x3d0d3875
  40db0d:	or     eax,0xfbf8aac7
  40db12:	xor    BYTE PTR [ebx-0x17b86519],bl
  40db18:	imul   eax,DWORD PTR [ebp-0x7],0x78
  40db1c:	in     al,dx
  40db1d:	inc    ebx
  40db1e:	pop    ds
  40db1f:	mov    edi,?
  40db21:	(bad)  
  40db22:	mov    bl,0x7e
  40db24:	mov    dh,0xbd
  40db26:	out    dx,al
  40db27:	pop    eax
  40db28:	ins    BYTE PTR es:[edi],dx
  40db29:	xor    DWORD PTR ds:0xc628ca03,ebx
  40db2f:	xor    edi,DWORD PTR [ecx-0x70]
  40db32:	adc    eax,0xea43e62
  40db37:	cmp    DWORD PTR [ebp-0x7f85b0a],eax
  40db3d:	imul   esp,DWORD PTR [esi+edx*2-0x1f],0x7920daeb
  40db45:	ja     0x40daf1
  40db47:	mov    ebx,0xd0b5af0e
  40db4c:	push   es
  40db4d:	push   0x2
  40db4f:	mov    ss,WORD PTR [ecx-0x370cbcab]
  40db55:	add    esi,DWORD PTR [esp+ecx*8-0x28f018ae]
  40db5c:	add    eax,0xffffffcc
  40db5f:	mov    al,ds:0x884183a3
  40db64:	aaa    
  40db65:	pop    ecx
  40db66:	call   0x9f39846e
  40db6b:	cmp    edi,edx
  40db6d:	mov    WORD PTR [ecx+esi*2+0x5a28b377],fs
  40db74:	sub    BYTE PTR [esi-0x63],0xba
  40db78:	adc    eax,0x3958f9b6
  40db7d:	cmp    BYTE PTR [ebx],bl
  40db7f:	jge    0x40db5b
  40db81:	mov    al,ds:0x7c7155d6
  40db86:	in     eax,dx
  40db87:	mov    edi,0x4665276f
  40db8c:	shl    BYTE PTR [esi],1
  40db8e:	retf   
  40db8f:	push   eax
  40db90:	push   es
  40db91:	jo     0x40db84
  40db93:	into   
  40db94:	mov    ds:0x888dbb1b,eax
  40db99:	sub    bh,dl
  40db9b:	jge    0x40dbc9
  40db9d:	xlat   BYTE PTR ds:[ebx]
  40db9e:	stos   DWORD PTR es:[edi],eax
  40db9f:	xchg   edx,eax
  40dba0:	adc    dh,BYTE PTR [ebp-0x24c77c86]
  40dba6:	sub    eax,0x348790da
  40dbab:	cmp    al,0x4b
  40dbad:	jp     0x40dc2a
  40dbaf:	sub    al,0xc6
  40dbb1:	jge    0x40dc16
  40dbb3:	mov    edx,DWORD PTR [eax+0x13d15e02]
  40dbb9:	push   es
  40dbba:	mov    ebp,0xf884df39
  40dbbf:	into   
  40dbc0:	shl    BYTE PTR [eax+0xc],1
  40dbc3:	retf   0x75d
  40dbc6:	push   esi
  40dbc7:	mov    WORD PTR [ebx+0x3a376837],es
  40dbcd:	outs   dx,DWORD PTR ds:[esi]
  40dbce:	cld    
  40dbcf:	fdiv   QWORD PTR [eax+ebp*4+0x19]
  40dbd3:	cmp    eax,0x2915af92
  40dbd8:	repz ret 
  40dbda:	aad    0xf5
  40dbdc:	(bad)  
  40dbdd:	ins    BYTE PTR es:[edi],dx
  40dbde:	and    edx,edi
  40dbe0:	aad    0xda
  40dbe2:	adc    BYTE PTR [edx+0x4c09a65],ah
  40dbe8:	jbe    0x40dc55
  40dbea:	das    
  40dbeb:	popf   
  40dbec:	dec    ecx
  40dbed:	ret    
  40dbee:	popf   
  40dbef:	repz adc BYTE PTR [edi-0x3d],bl
  40dbf3:	xchg   ebx,eax
  40dbf4:	push   ss
  40dbf5:	mov    ch,0x6a
  40dbf7:	(bad)  
  40dbf9:	sub    al,0x4c
  40dbfb:	out    dx,al
  40dbfc:	nop
  40dbfd:	(bad)  
  40dbff:	fsub   QWORD PTR [eax]
  40dc01:	cmc    
  40dc02:	jmp    0xbe7a:0xf1261e53
  40dc09:	call   0x6d19:0xf1cb1a44
  40dc10:	mov    dl,0xa5
  40dc12:	lods   al,BYTE PTR ds:[esi]
  40dc13:	jmp    0x2fde4e39
  40dc18:	mov    eax,ds:0xf76a44f1
  40dc1d:	add    dh,0x47
  40dc20:	(bad)  
  40dc21:	call   edx
  40dc23:	cld    
  40dc24:	icebp  
  40dc25:	jp     0x40dc4f
  40dc27:	adc    al,0xaf
  40dc29:	out    0x8,al
  40dc2b:	xchg   ebx,eax
  40dc2c:	mov    eax,ds:0xa1412ed4
  40dc31:	fcom   QWORD PTR [ebx]
  40dc33:	xchg   ebp,eax
  40dc34:	cmp    DWORD PTR [ebx+0x20],0x16550258
  40dc3b:	adc    BYTE PTR [edx],0x7c
  40dc3e:	js     0x40dc75
  40dc40:	rcr    ah,cl
  40dc42:	(bad)  
  40dc43:	in     eax,dx
  40dc44:	das    
  40dc45:	daa    
  40dc46:	(bad)  
  40dc47:	shl    DWORD PTR [ebx+0x1a],cl
  40dc4a:	push   es
  40dc4b:	jae    0x40dc4f
  40dc4d:	jo     0x40dc51
  40dc4f:	inc    ecx
  40dc50:	adc    eax,0x254fef98
  40dc55:	(bad)  
  40dc56:	lock mov al,0xce
  40dc59:	outs   dx,DWORD PTR ds:[esi]
  40dc5a:	daa    
  40dc5b:	inc    ebp
  40dc5c:	js     0x40dc4c
  40dc5e:	push   esp
  40dc5f:	popf   
  40dc60:	and    bh,ch
  40dc62:	dec    ebx
  40dc63:	adc    DWORD PTR [ecx+0x4495a57b],esi
  40dc69:	sti    
  40dc6a:	outs   dx,DWORD PTR ds:[esi]
  40dc6b:	lahf   
  40dc6c:	or     al,0xb5
  40dc6e:	out    dx,eax
  40dc6f:	mov    ch,0x3f
  40dc71:	dec    edx
  40dc72:	lahf   
  40dc73:	mov    gs,WORD PTR [edx+0x4df191e1]
  40dc79:	push   edi
  40dc7a:	sbb    eax,0xb8f77ab3
  40dc7f:	ss sbb eax,0x7c511ebd
  40dc85:	cli    
  40dc86:	jnp    0x40dc3f
  40dc88:	sub    esp,eax
  40dc8a:	adc    bl,BYTE PTR [edi]
  40dc8c:	push   ss
  40dc8d:	sbb    eax,0xebeeae80
  40dc92:	cmp    DWORD PTR [ebx-0x6b5ab2ca],0x154f3d36
  40dc9c:	popf   
  40dc9d:	mov    esi,DWORD PTR [edx+0x64956e35]
  40dca3:	enter  0x19f9,0x63
  40dca7:	xchg   esi,eax
  40dca8:	(bad)  
  40dca9:	dec    edx
  40dcaa:	lds    eax,FWORD PTR [ecx-0x53]
  40dcad:	mov    fs,WORD PTR [ebx+edx*1-0x49c1921a]
  40dcb4:	push   ss
  40dcb5:	test   DWORD PTR [edx+0x613372c3],0x60c5f5b3
  40dcbf:	xchg   ecx,eax
  40dcc0:	inc    esi
  40dcc1:	lea    eax,[esi-0x3e]
  40dcc4:	mov    ebx,0xc5a9190
  40dcc9:	adc    eax,0xaf26c854
  40dcce:	ja     0x40dd48
  40dcd0:	sub    DWORD PTR [edx],eax
  40dcd2:	dec    ebx
  40dcd3:	lds    edi,FWORD PTR [ebp-0x29]
  40dcd6:	add    BYTE PTR [ebx],0x16
  40dcd9:	rcl    DWORD PTR [esi],cl
  40dcdb:	int3   
  40dcdc:	sub    edx,DWORD PTR [esi]
  40dcde:	sub    BYTE PTR [eax+0x3d],bh
  40dce1:	dec    ebx
  40dce2:	jge    0x40dc98
  40dce4:	mov    BYTE PTR [eax],bh
  40dce6:	mov    cl,0x95
  40dce8:	push   ds
  40dce9:	push   esi
  40dcea:	call   0xe1945c7b
  40dcef:	cmp    dh,BYTE PTR [edi+0x73]
  40dcf2:	jle    0x40dd02
  40dcf4:	push   esp
  40dcf5:	ud0    eax,eax
  40dcf8:	or     eax,0x159270d5
  40dcfd:	xlat   BYTE PTR ds:[ebx]
  40dcfe:	lea    eax,[ebx]
  40dd00:	sub    al,0x92
  40dd02:	cmp    eax,0x8f3969e
  40dd07:	mov    edi,0x875bce90
  40dd0c:	inc    edi
  40dd0d:	pop    edx
  40dd0e:	jl     0x40dcec
  40dd10:	aaa    
  40dd11:	add    BYTE PTR [edx+edx*2-0x70e2cd7c],0x69
  40dd19:	jns    0x40dcd5
  40dd1b:	mov    al,ds:0x7483f780
  40dd20:	cmp    bl,BYTE PTR [ecx]
  40dd22:	pushf  
  40dd23:	daa    
  40dd24:	out    0x57,al
  40dd26:	add    DWORD PTR [ecx*2-0x10158737],0x14
  40dd2e:	addr16 mov ah,0x6b
  40dd31:	and    esp,esp
  40dd33:	cdq    
  40dd34:	mov    ds:0xca8b8dfa,eax
  40dd39:	dec    ebp
  40dd3a:	and    BYTE PTR [edx-0x9e633f8],ch
  40dd40:	or     dh,BYTE PTR [esi+0x34b026e6]
  40dd46:	pop    eax
  40dd47:	and    esi,DWORD PTR [eax-0x24b5cf0c]
  40dd4d:	int3   
  40dd4e:	pop    eax
  40dd4f:	mov    ds:0x58f0a7d8,eax
  40dd54:	pop    edx
  40dd55:	pop    ecx
  40dd56:	and    eax,0xc7fdb4db
  40dd5b:	loopne 0x40ddc9
  40dd5d:	mov    al,ds:0x98d5bb8c
  40dd62:	jo     0x40dda9
  40dd64:	dec    edx
  40dd65:	test   al,0xb6
  40dd67:	mov    DWORD PTR [eax+0x45],edx
  40dd6a:	je     0x40dd19
  40dd6c:	or     BYTE PTR [ebx-0x3],0xda
  40dd70:	adc    DWORD PTR [edx],edx
  40dd72:	jg     0x40dde4
  40dd74:	data16 scas al,BYTE PTR es:[edi]
  40dd76:	int3   
  40dd77:	xor    DWORD PTR [edi-0x5f],0x4f
  40dd7b:	dec    ecx
  40dd7c:	sbb    al,ch
  40dd7e:	sti    
  40dd7f:	nop
  40dd80:	or     eax,0xc8393f71
  40dd85:	mov    ah,0x4d
  40dd87:	pushf  
  40dd88:	mov    bh,dl
  40dd8a:	push   ds
  40dd8b:	arpl   si,bx
  40dd8d:	lods   al,BYTE PTR ds:[esi]
  40dd8e:	cs (bad) 
  40dd90:	xor    DWORD PTR [ecx],esp
  40dd92:	je     0x40dd75
  40dd94:	xlat   BYTE PTR ds:[ebx]
  40dd95:	and    ebp,esp
  40dd97:	or     ah,BYTE PTR [edi-0x324c6d4f]
  40dd9d:	jmp    0x40ddad
  40dd9f:	call   0x8f32af93
  40dda4:	sbb    BYTE PTR [esi],0x6c
  40dda7:	cmp    al,0xb6
  40dda9:	dec    esp
  40ddaa:	sti    
  40ddab:	mov    edi,0xc00007e3
  40ddb0:	in     al,0x8c
  40ddb2:	in     eax,dx
  40ddb3:	cmp    DWORD PTR [ecx],ebp
  40ddb5:	mov    bl,0x6c
  40ddb7:	xor    DWORD PTR [esi-0x24ff489d],ebp
  40ddbd:	xchg   ebx,eax
  40ddbe:	and    eax,0x8e0e269f
  40ddc3:	mov    bh,bh
  40ddc5:	mov    edx,0x1260802
  40ddca:	cdq    
  40ddcb:	mov    bl,BYTE PTR [edx-0x42]
  40ddce:	ja     0x40ddaf
  40ddd0:	cmp    eax,0x4603a20d
  40ddd5:	jns    0x40ddce
  40ddd7:	ja     0x40de18
  40ddd9:	inc    esp
  40ddda:	inc    eax
  40dddb:	mov    ebp,0xc8a28bf9
  40dde0:	shr    DWORD PTR [esp+ecx*8],1
  40dde3:	pop    es
  40dde4:	dec    eax
  40dde5:	jns    0x40de23
  40dde7:	add    al,0x7f
  40dde9:	pop    es
  40ddea:	jmp    0xe8fb:0x4ba82555
  40ddf1:	cld    
  40ddf2:	int3   
  40ddf3:	sbb    eax,0x69baf48e
  40ddf8:	scas   al,BYTE PTR es:[edi]
  40ddf9:	in     eax,0x2f
  40ddfb:	dec    esi
  40ddfc:	call   0x58630ede
  40de01:	rol    BYTE PTR [edx],0x14
  40de04:	jns    0x40de3c
  40de06:	ret    
  40de07:	mov    al,ds:0xe31ffe82
  40de0c:	and    BYTE PTR [esi+0x2a],ch
  40de0f:	or     bl,BYTE PTR [eax-0x5d]
  40de12:	outs   dx,BYTE PTR ds:[esi]
  40de13:	gs loop 0x40ddf9
  40de16:	mov    eax,0x4a7a2070
  40de1b:	lahf   
  40de1c:	or     edi,eax
  40de1e:	pop    esp
  40de1f:	push   esp
  40de20:	mov    ds:0x9b836989,eax
  40de25:	jp     0x40ddb7
  40de27:	lds    ecx,FWORD PTR [ebp-0x4b1b938c]
  40de2d:	js     0x40de42
  40de2f:	lahf   
  40de30:	lea    esi,[edi+ebp*2-0x3d]
  40de34:	sub    eax,0x842316ab
  40de39:	jmp    0x40de4e
  40de3b:	lds    ecx,FWORD PTR [edx]
  40de3d:	mov    ah,0x8b
  40de3f:	stos   BYTE PTR es:[edi],al
  40de40:	cmp    cl,bh
  40de42:	mov    esp,0x3667f541
  40de47:	(bad)  
  40de48:	jo     0x40de0a
  40de4a:	adc    cl,BYTE PTR [eax]
  40de4c:	push   cs
  40de4d:	xchg   esi,eax
  40de4e:	xchg   ecx,eax
  40de4f:	into   
  40de50:	scas   eax,DWORD PTR es:[edi]
  40de51:	aam    0x14
  40de53:	pop    ss
  40de54:	lock in al,0x82
  40de57:	out    0xe0,eax
  40de59:	arpl   sp,dx
  40de5b:	std    
  40de5c:	add    DWORD PTR [edx+0x614f5db5],eax
  40de62:	xor    BYTE PTR [ecx],al
  40de64:	xor    dh,cl
  40de66:	dec    edi
  40de67:	sti    
  40de68:	push   0xffffffd3
  40de6a:	retf   0x89d9
  40de6d:	and    DWORD PTR [edi-0x587b1ae4],eax
  40de73:	push   esi
  40de74:	pop    edx
  40de75:	aad    0xb8
  40de77:	scas   al,BYTE PTR es:[edi]
  40de78:	push   0xcf5eb55a
  40de7d:	pop    ecx
  40de7e:	cmp    cl,bl
  40de80:	mov    ch,0xe4
  40de82:	stos   BYTE PTR es:[edi],al
  40de83:	(bad)  ds:0xbf6036f7
  40de89:	xchg   esp,eax
  40de8a:	mov    esp,0xc0229523
  40de8f:	hlt    
  40de90:	mov    dl,0x37
  40de92:	adc    BYTE PTR [eax+0x1b7248a2],0x7e
  40de99:	cmc    
  40de9a:	cdq    
  40de9b:	scas   al,BYTE PTR es:[edi]
  40de9c:	(bad)  
  40de9d:	xor    eax,0xaa55acbe
  40dea2:	cmp    BYTE PTR [eax-0x12616dda],0xe6
  40dea9:	pop    ecx
  40deaa:	pop    esp
  40deab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40deac:	pop    es
  40dead:	xor    al,0x90
  40deaf:	test   DWORD PTR [edi+0x6a38cc50],edi
  40deb5:	cs jo  0x40de62
  40deb8:	nop
  40deb9:	gs adc esi,esp
  40debc:	sbb    eax,0xd27bfeb7
  40dec1:	jge    0x40defd
  40dec3:	dec    esp
  40dec4:	xchg   edi,eax
  40dec5:	call   0x478:0xa3db2422
  40decc:	stos   DWORD PTR es:[edi],eax
  40decd:	cmp    al,BYTE PTR [eax-0x5e]
  40ded0:	das    
  40ded1:	jnp    0x40df48
  40ded3:	repnz bound eax,QWORD PTR [esp+edi*1+0x4d9f7102]
  40dedb:	inc    ebx
  40dedc:	ror    DWORD PTR [eax-0x460e83f7],cl
  40dee2:	or     eax,0xac4d1322
  40dee7:	cmp    bl,dl
  40dee9:	pop    ds
  40deea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40deeb:	mov    esp,0x5bbe860d
  40def0:	inc    ebp
  40def1:	test   al,0xd1
  40def3:	sub    DWORD PTR [ebx],0xffffffc6
  40def6:	push   cs
  40def7:	jp     0x40df1c
  40def9:	adc    DWORD PTR [ebx-0x6d],0x63bd2b4e
  40df00:	cmc    
  40df01:	(bad)  
  40df02:	cmp    ah,ah
  40df04:	lahf   
  40df05:	in     eax,0xf7
  40df07:	pop    esi
  40df08:	retf   
  40df09:	repnz xchg ebp,eax
  40df0b:	in     al,0xb
  40df0d:	loope  0x40dea1
  40df0f:	ror    DWORD PTR ds:0xe8fec115,1
  40df15:	or     bl,BYTE PTR [ecx]
  40df17:	xor    BYTE PTR [ecx-0x1becffca],al
  40df1d:	xor    ebp,DWORD PTR [esp+0x2cb8b4ca]
  40df24:	repnz xchg edi,eax
  40df26:	dec    esi
  40df27:	in     al,0x62
  40df29:	mov    ebx,0x5d80b1c3
  40df2e:	std    
  40df2f:	neg    BYTE PTR [ecx-0x80]
  40df32:	push   eax
  40df33:	push   ecx
  40df34:	pop    ss
  40df35:	aaa    
  40df36:	jnp    0x40debd
  40df38:	and    esp,DWORD PTR ss:[esi]
  40df3b:	test   BYTE PTR [eax+0x1c],dl
  40df3e:	cmp    ebp,ecx
  40df40:	ins    BYTE PTR es:[edi],dx
  40df41:	test   dh,dh
  40df43:	ror    esi,1
  40df45:	and    al,0xc2
  40df47:	int    0x36
  40df49:	cmp    eax,0x69e7b22d
  40df4e:	sub    al,0xfb
  40df50:	gs adc eax,0x9f5341cd
  40df56:	or     al,0x8d
  40df58:	call   0xefe0:0x61fd4688
  40df5f:	int3   
  40df60:	std    
  40df61:	imul   ebx,esi,0x38
  40df64:	cmp    DWORD PTR [edx+0x26],ebx
  40df67:	scas   al,BYTE PTR es:[edi]
  40df68:	sbb    BYTE PTR [esi-0x320b381e],ch
  40df6e:	mov    bh,0xd3
  40df70:	pop    eax
  40df71:	(bad)  
  40df72:	addr16 ss mov dl,cl
  40df76:	push   edx
  40df77:	fdivr  DWORD PTR ds:0xebc35dfb
  40df7d:	sbb    al,0x12
  40df7f:	sbb    BYTE PTR [eax],ch
  40df81:	ret    0x2b59
  40df84:	sbb    DWORD PTR [ecx+0xc655196],ebx
  40df8a:	sar    BYTE PTR [eax-0x2a],cl
  40df8d:	lods   eax,DWORD PTR ds:[esi]
  40df8e:	cmc    
  40df8f:	pop    esp
  40df90:	xor    BYTE PTR [ecx],0xd9
  40df93:	sbb    esi,edi
  40df95:	test   DWORD PTR [eax+0x17565a2d],eax
  40df9b:	std    
  40df9c:	cdq    
  40df9d:	push   0xffffffaa
  40df9f:	lahf   
  40dfa0:	jl     0x40df40
  40dfa2:	lds    esp,FWORD PTR [eax-0x20009337]
  40dfa8:	test   eax,esi
  40dfaa:	mov    bl,0x70
  40dfac:	fwait
  40dfad:	push   edi
  40dfae:	add    DWORD PTR [ecx],eax
  40dfb0:	js     0x40dfc2
  40dfb2:	or     edx,DWORD PTR [ebx]
  40dfb4:	jno    0x40dff6
  40dfb6:	sbb    dl,BYTE PTR [esi]
  40dfb8:	push   ebx
  40dfb9:	lods   al,BYTE PTR ds:[esi]
  40dfba:	and    dh,dl
  40dfbc:	ret    
  40dfbd:	sahf   
  40dfbe:	inc    ecx
  40dfbf:	retf   0x8cf2
  40dfc2:	ins    DWORD PTR es:[edi],dx
  40dfc3:	mov    ebp,0x81f95b0c
  40dfc8:	jp     0x40e01e
  40dfca:	sbb    DWORD PTR [ebx+0x547c97f9],ecx
  40dfd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dfd1:	dec    eax
  40dfd2:	ret    0xe91e
  40dfd5:	cli    
  40dfd6:	sbb    al,BYTE PTR [ebx-0x73eec520]
  40dfdc:	jb     0x40e043
  40dfde:	(bad)  
  40dfdf:	shl    DWORD PTR [ebx-0x73],1
  40dfe2:	push   edi
  40dfe3:	(bad)  
  40dfe4:	cli    
  40dfe5:	cmp    BYTE PTR [eax-0x78ebb3ca],cl
  40dfeb:	jo     0x40df6e
  40dfed:	pop    esi
  40dfee:	mov    BYTE PTR [esi+eiz*4],dh
  40dff1:	inc    ebx
  40dff2:	sub    BYTE PTR [eax],dh
  40dff4:	xchg   ebp,eax
  40dff5:	repz test eax,0xa3cce0f9
  40dffb:	mov    dh,0xe5
  40dffd:	or     BYTE PTR [ecx+0x24ea82ad],ch
  40e003:	retf   
  40e004:	out    0xe5,al
  40e006:	fbld   TBYTE PTR [edx+ebp*8]
  40e009:	dec    esi
  40e00a:	cmp    BYTE PTR ds:0x12f380fc,dl
  40e010:	xlat   BYTE PTR ds:[ebx]
  40e011:	mov    dl,0xb6
  40e013:	push   eax
  40e014:	ins    DWORD PTR es:[edi],dx
  40e015:	popf   
  40e016:	retf   
  40e017:	jns    0x40dfe3
  40e019:	adc    eax,0xa67c46d6
  40e01e:	or     DWORD PTR [ebp+0x15],0x1c6bc237
  40e025:	or     dh,BYTE PTR [ecx]
  40e027:	dec    ecx
  40e028:	push   0x54c8b810
  40e02d:	or     al,0xd7
  40e02f:	jno    0x40dfcd
  40e031:	mov    edx,0x66136f8c
  40e036:	call   0x67f39678
  40e03b:	scas   eax,DWORD PTR es:[edi]
  40e03c:	mov    eax,ds:0x59f3917b
  40e041:	das    
  40e042:	mov    eax,ds:0xc9b239f7
  40e047:	jmp    0x9c85:0xbb14570
  40e04e:	xchg   esp,eax
  40e04f:	fld    TBYTE PTR ds:0xf60a77de
  40e055:	fwait
  40e056:	outs   dx,BYTE PTR ds:[esi]
  40e057:	(bad)  
  40e058:	dec    ebx
  40e059:	push   0x54
  40e05b:	inc    esp
  40e05c:	sbb    eax,0xaa2eb095
  40e061:	out    0x35,al
  40e063:	adc    al,0x3e
  40e065:	cld    
  40e066:	test   ecx,edx
  40e068:	adc    BYTE PTR [edx],bl
  40e06a:	jno    0x40dffc
  40e06c:	add    dl,BYTE PTR [ecx-0x5e]
  40e06f:	jae    0x40e026
  40e071:	(bad)  
  40e072:	mov    al,0xb8
  40e074:	inc    ecx
  40e075:	fadd   QWORD PTR [eax]
  40e077:	out    0xa2,al
  40e079:	repz (bad) 
  40e07b:	into   
  40e07c:	shl    eax,1
  40e07e:	cmp    eax,0x2a067c89
  40e083:	pop    ebx
  40e084:	sbb    eax,0x3426b563
  40e089:	outs   dx,BYTE PTR ds:[esi]
  40e08a:	aad    0xfc
  40e08c:	iret   
  40e08d:	loop   0x40e0ec
  40e08f:	jge    0x40e057
  40e091:	pop    eax
  40e092:	pop    ecx
  40e093:	xchg   DWORD PTR [edx+0x67],eax
  40e096:	xor    al,0x86
  40e098:	or     ch,BYTE PTR [ecx]
  40e09a:	clc    
  40e09b:	outs   dx,BYTE PTR ds:[esi]
  40e09c:	mov    ah,0x22
  40e09e:	pop    ebx
  40e09f:	jns    0x40e08e
  40e0a1:	push   ss
  40e0a2:	xor    esi,eax
  40e0a4:	retf   0x93e4
  40e0a7:	sub    dl,BYTE PTR [ebx+ecx*8]
  40e0aa:	(bad)  
  40e0ab:	ins    BYTE PTR es:[edi],dx
  40e0ac:	adc    eax,0x3371b612
  40e0b1:	adc    DWORD PTR fs:[edi+0x27],ebx
  40e0b5:	mov    edi,0x92fc2c4b
  40e0ba:	inc    BYTE PTR [eax+0x3]
  40e0bd:	iret   
  40e0be:	xor    al,0x1d
  40e0c0:	call   0xb308a356
  40e0c5:	(bad)
  40e0c8:	xchg   esi,eax
  40e0c9:	mov    eax,DWORD PTR [eax+ecx*8-0x31508080]
  40e0d0:	mov    ds,edi
  40e0d2:	xor    ecx,DWORD PTR [ecx-0x4b]
  40e0d5:	and    edi,DWORD PTR [ebp-0x5e6c8517]
  40e0db:	je     0x40e123
  40e0dd:	fs pop ds
  40e0df:	shl    DWORD PTR [ebx],1
  40e0e1:	cli    
  40e0e2:	mov    ch,0x2f
  40e0e4:	repnz mov esp,0x3f849589
  40e0ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e0eb:	mov    ebx,0x9ab1c2f4
  40e0f0:	inc    esp
  40e0f1:	dec    esi
  40e0f2:	inc    ebp
  40e0f3:	test   BYTE PTR [eax+0x28fcced4],bl
  40e0f9:	pop    ss
  40e0fa:	xchg   esp,eax
  40e0fb:	fs or  ch,ch
  40e0fe:	cli    
  40e0ff:	out    0xa1,al
  40e101:	mov    dl,0xff
  40e103:	adc    esp,eax
  40e105:	jg     0x40e0de
  40e107:	ror    DWORD PTR [ebp+0x3636dfef],0xdc
  40e10e:	mov    ebx,0xaf08239a
  40e113:	inc    eax
  40e114:	dec    eax
  40e115:	pop    esi
  40e116:	mov    dh,0x67
  40e118:	pusha  
  40e119:	add    cl,dl
  40e11b:	xchg   ecx,eax
  40e11c:	and    BYTE PTR [esi+0x7c39be4c],0xc3
  40e123:	mov    esi,0xaa0ab979
  40e128:	cdq    
  40e129:	or     ah,BYTE PTR [eax+0x7c9f2058]
  40e12f:	repz ja 0x40e0b3
  40e132:	aas    
  40e133:	sub    al,0x9f
  40e135:	lahf   
  40e136:	push   edx
  40e137:	aam    0xf8
  40e139:	test   DWORD PTR [edx],0x6d99cc75
  40e13f:	fsub   DWORD PTR [ebp-0x37]
  40e142:	pop    ecx
  40e143:	jno    0x40e0c8
  40e145:	cmp    BYTE PTR [edx+0x11],0x1
  40e149:	cmp    DWORD PTR [ebp-0x7],ebp
  40e14c:	fdivr  QWORD PTR [edi]
  40e14e:	push   edi
  40e14f:	sbb    edi,edi
  40e151:	fcomp  QWORD PTR [ecx-0xf]
  40e154:	sub    DWORD PTR [eax+ebx*1],0xffffff94
  40e158:	data16 int 0xf9
  40e15b:	in     eax,dx
  40e15c:	mov    bh,0x2
  40e15e:	xchg   DWORD PTR [eax-0x1e5e82],esi
  40e164:	dec    ebx
  40e165:	and    eax,0x1302df23
  40e16a:	sbb    BYTE PTR [esi-0xba1d781],bh
  40e170:	dec    eax
  40e171:	les    ebx,FWORD PTR [edx]
  40e173:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e174:	sub    al,0xe3
  40e176:	stc    
  40e177:	ret    
  40e178:	sbb    bl,ah
  40e17a:	fiadd  DWORD PTR [edi]
  40e17c:	dec    eax
  40e17d:	mov    ah,0x80
  40e17f:	dec    edi
  40e180:	int    0x74
  40e182:	xor    eax,0x95bb0e71
  40e187:	or     al,0x3d
  40e189:	or     dh,BYTE PTR [edi+0x379bbabb]
  40e18f:	in     al,dx
  40e190:	push   ecx
  40e191:	adc    eax,0x8edd5d75
  40e196:	vpcmpgtb xmm7,xmm5,xmm0
  40e19a:	mov    ch,0x41
  40e19c:	push   ebx
  40e19d:	inc    edx
  40e19e:	jmp    0x20cd:0x46a265a6
  40e1a5:	mov    WORD PTR [edi-0x46],ss
  40e1a8:	retf   0xf1c6
  40e1ab:	das    
  40e1ac:	scas   eax,DWORD PTR es:[edi]
  40e1ad:	call   0xb44f:0x154280e6
  40e1b4:	mov    ds:0x6d7c25f6,al
  40e1b9:	js     0x40e15e
  40e1bb:	scas   eax,DWORD PTR es:[edi]
  40e1bc:	cmp    DWORD PTR [ecx],eax
  40e1be:	xor    esi,ebp
  40e1c0:	dec    edi
  40e1c1:	adc    dx,WORD PTR [ebp+0x64ae71b2]
  40e1c8:	jno    0x40e1bd
  40e1ca:	inc    ecx
  40e1cb:	test   BYTE PTR [edx],0x6
  40e1ce:	cld    
  40e1cf:	adc    ebp,edi
  40e1d1:	inc    edx
  40e1d2:	enter  0x1b9f,0xdd
  40e1d6:	fwait
  40e1d7:	sub    eax,0xa40ef876
  40e1dc:	loopne 0x40e22a
  40e1de:	dec    edx
  40e1df:	jmp    0x1074:0x2382c6aa
  40e1e6:	aas    
  40e1e7:	add    DWORD PTR [ebx+eax*1],0xa41bb4fd
  40e1ee:	inc    esp
  40e1ef:	call   0x4723:0xa06082ea
  40e1f6:	mov    bh,BYTE PTR [esi+0x2a33008b]
  40e1fc:	das    
  40e1fd:	mov    dl,0x66
  40e1ff:	inc    ebp
  40e200:	in     al,0x60
  40e202:	rcr    DWORD PTR [eax-0x1daf05c3],cl
  40e208:	mov    bh,0x3f
  40e20a:	hlt    
  40e20b:	loopne 0x40e252
  40e20d:	mov    ebp,0x9c18852e
  40e212:	cmp    DWORD PTR [eax+edi*2-0x22],edx
  40e216:	in     eax,0xf1
  40e218:	ret    
  40e219:	dec    eax
  40e21a:	in     eax,0xf1
  40e21c:	pushf  
  40e21d:	sub    DWORD PTR [ebx+0x17],edx
  40e220:	or     BYTE PTR [ebp+0x6a],dl
  40e223:	mov    ch,0x80
  40e225:	xor    dh,BYTE PTR [ecx+eax*1-0x3fb6e53c]
  40e22c:	scas   eax,DWORD PTR es:[edi]
  40e22d:	scas   eax,DWORD PTR es:[edi]
  40e22e:	test   BYTE PTR [edx],ch
  40e230:	scas   al,BYTE PTR es:[edi]
  40e231:	scas   al,BYTE PTR es:[edi]
  40e232:	dec    eax
  40e233:	mov    ch,0xb2
  40e235:	mov    WORD PTR [edx-0xb827664],cs
  40e23b:	mov    DWORD PTR [ecx+0x47],eax
  40e23e:	rol    BYTE PTR [ebx+0x66ee61e1],1
  40e244:	mov    cl,0x3c
  40e246:	add    eax,0xe4258dc7
  40e24b:	es dec ecx
  40e24d:	vfnmsubpd ymm2,ymm1,ymm2,ymm3
  40e253:	push   0xc255df63
  40e258:	jno    0x40e1f2
  40e25a:	mov    eax,ss
  40e25c:	inc    edi
  40e25d:	(bad)  
  40e25e:	retf   
  40e25f:	into   
  40e260:	dec    esp
  40e261:	ja     0x40e22e
  40e263:	clc    
  40e264:	shr    DWORD PTR [esi-0x24],0x2f
  40e268:	pop    eax
  40e269:	ins    BYTE PTR es:[edi],dx
  40e26a:	into   
  40e26b:	push   cs
  40e26c:	or     eax,DWORD PTR [eax]
  40e26e:	(bad)  [edi-0x75]
  40e271:	xchg   esi,eax
  40e272:	push   0xffffffa8
  40e274:	or     ebp,DWORD PTR [edi+0x16]
  40e277:	pop    ebp
  40e278:	dec    ecx
  40e279:	push   edi
  40e27a:	xchg   esp,eax
  40e27b:	idiv   DWORD PTR [ecx]
  40e27d:	popa   
  40e27e:	add    al,BYTE PTR ds:0x1f7af5ca
  40e284:	dec    esi
  40e285:	dec    ecx
  40e286:	test   al,0xb1
  40e288:	out    0xdb,eax
  40e28a:	sbb    al,0x39
  40e28c:	fwait
  40e28d:	aam    0x2b
  40e28f:	cwde   
  40e290:	icebp  
  40e291:	xor    bh,cl
  40e293:	pop    esi
  40e294:	fadd   DWORD PTR ss:[eax]
  40e297:	sbb    DWORD PTR [ebx+0x0],eax
  40e29a:	out    dx,eax
  40e29b:	repnz fnstenv [esi-0x2757757]
  40e2a2:	ins    DWORD PTR es:[edi],dx
  40e2a3:	push   cs
  40e2a4:	pop    ebx
  40e2a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e2a6:	push   es
  40e2a7:	sub    edi,esp
  40e2a9:	not    DWORD PTR [edx+0x1c]
  40e2ac:	ret    
  40e2ad:	push   cs
  40e2ae:	mov    dh,0x19
  40e2b0:	jns    0x40e2a6
  40e2b2:	push   ss
  40e2b3:	in     eax,0xe2
  40e2b5:	nop
  40e2b6:	cmc    
  40e2b7:	dec    edi
  40e2b8:	int    0xc1
  40e2ba:	xchg   edi,eax
  40e2bb:	mov    esi,0xd5738264
  40e2c0:	sub    DWORD PTR [esi+0x53],ebp
  40e2c3:	xchg   edx,eax
  40e2c4:	(bad)  
  40e2c5:	(bad)  
  40e2c6:	iret   
  40e2c7:	repz pop edi
  40e2c9:	clc    
  40e2ca:	mov    ch,0xd4
  40e2cc:	shl    DWORD PTR [ecx],1
  40e2ce:	sbb    BYTE PTR [edi-0x79],0xe2
  40e2d2:	mov    al,0xea
  40e2d4:	hlt    
  40e2d5:	and    DWORD PTR [esi+0x46394a30],ebx
  40e2db:	xlat   BYTE PTR ds:[ebx]
  40e2dc:	adc    al,0x4c
  40e2de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e2df:	cdq    
  40e2e0:	psrld  mm5,QWORD PTR [ecx+0x45]
  40e2e4:	jge    0x40e355
  40e2e6:	hlt    
  40e2e7:	push   esi
  40e2e8:	xchg   edx,eax
  40e2e9:	mov    ebx,0xa6df2120
  40e2ee:	mov    bh,0x2c
  40e2f0:	inc    edx
  40e2f1:	mov    eax,ds:0x4d833886
  40e2f6:	jb     0x40e2d3
  40e2f8:	mov    edx,0x670c1057
  40e2fd:	retf   
  40e2fe:	xor    ebx,ebx
  40e300:	dec    esi
  40e301:	pop    eax
  40e302:	mov    eax,ds:0xcc67cf0e
  40e307:	push   ecx
  40e308:	mov    ch,0x0
  40e30a:	and    eax,0x2f4bccb9
  40e30f:	add    BYTE PTR [esi-0x78],bh
  40e312:	jnp    0x40e345
  40e314:	div    ebx
  40e316:	fidivr WORD PTR [edx-0x7e]
  40e319:	imul   ebx,ecx,0xffffffca
  40e31c:	stc    
  40e31d:	in     al,0x20
  40e31f:	retf   0xa8fb
  40e322:	mov    ds:0xa6789d75,eax
  40e327:	sub    al,0x5
  40e329:	adc    DWORD PTR ss:[edi+0x1f],esi
  40e32d:	xor    BYTE PTR [eax+0x5ee27b67],bh
  40e333:	movq   mm5,mm6
  40e336:	inc    esi
  40e337:	cs push es
  40e339:	out    0x7,al
  40e33b:	jle    0x40e310
  40e33d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e33e:	loope  0x40e36e
  40e340:	pop    ss
  40e341:	ja     0x40e3a2
  40e343:	iret   
  40e344:	or     al,0x94
  40e346:	add    BYTE PTR [esi+0x53],cl
  40e349:	shl    BYTE PTR [ebp+0x36602f05],0xd1
  40e350:	sub    eax,0x720724b
  40e355:	stc    
  40e356:	pop    edx
  40e357:	xchg   edi,eax
  40e358:	(bad)  
  40e359:	je     0x40e38b
  40e35b:	xor    dl,BYTE PTR ds:0xaf1b060c
  40e361:	xor    edi,0x67
  40e364:	sub    esp,DWORD PTR [eax-0x34d42997]
  40e36a:	inc    ecx
  40e36b:	cmp    bl,BYTE PTR [edi]
  40e36d:	sub    cl,cl
  40e36f:	or     al,BYTE PTR [esi+ecx*8+0x1a]
  40e373:	les    ebp,FWORD PTR [edx]
  40e375:	ror    edx,1
  40e377:	xchg   edx,eax
  40e378:	enter  0xc3c6,0xe4
  40e37c:	scas   al,BYTE PTR es:[edi]
  40e37d:	push   0xc06b561e
  40e382:	aad    0x9d
  40e384:	mov    cl,0x75
  40e386:	cld    
  40e387:	add    dl,BYTE PTR [edx+edi*8]
  40e38a:	cmc    
  40e38b:	ins    DWORD PTR es:[edi],dx
  40e38c:	shr    DWORD PTR [edi-0x46],cl
  40e38f:	js     0x40e3d8
  40e391:	jmp    0x40e3b2
  40e393:	fmul   QWORD PTR [ecx-0x96cfca]
  40e399:	cmp    al,0xc7
  40e39b:	sar    ch,0x96
  40e39e:	in     eax,0x72
  40e3a0:	xchg   esp,eax
  40e3a1:	push   ebp
  40e3a2:	mov    edx,0x3254804e
  40e3a7:	out    dx,al
  40e3a8:	shl    ah,0x42
  40e3ab:	pusha  
  40e3ac:	aas    
  40e3ad:	fst    DWORD PTR [ebp+0x6e45aa39]
  40e3b3:	in     al,0x76
  40e3b5:	lods   eax,DWORD PTR ds:[esi]
  40e3b6:	and    eax,0xe06b61cd
  40e3bb:	(bad)  
  40e3bc:	dec    ebx
  40e3bd:	push   0x26ebdaad
  40e3c2:	mov    eax,DWORD PTR [edx+eiz*2]
  40e3c5:	clc    
  40e3c6:	sti    
  40e3c7:	or     DWORD PTR [ebx],esp
  40e3c9:	sub    eax,0xecf6bb48
  40e3ce:	pusha  
  40e3cf:	cld    
  40e3d0:	int    0x6f
  40e3d2:	hlt    
  40e3d3:	mov    eax,0x6dc6ae24
  40e3d8:	mov    BYTE PTR [ebx],ch
  40e3da:	mov    dl,0x89
  40e3dc:	or     BYTE PTR [esi],0xca
  40e3df:	sbb    dh,BYTE PTR [ecx-0x5e]
  40e3e2:	and    bh,cl
  40e3e4:	jp     0x40e3a1
  40e3e6:	xchg   ecx,eax
  40e3e7:	push   DWORD PTR [edi+edi*2+0x68]
  40e3eb:	jae    0x40e446
  40e3ed:	or     esp,DWORD PTR [eax-0x60e63b5d]
  40e3f3:	sub    DWORD PTR [eax+0x5268a077],edi
  40e3f9:	jnp    0x40e3d9
  40e3fb:	loop   0x40e385
  40e3fd:	call   0x31613608
  40e402:	xchg   ebp,eax
  40e403:	fnsave [ebx]
  40e405:	cmp    bl,BYTE PTR [edx-0x1516af1f]
  40e40b:	mov    ebp,0x40d7b0bc
  40e410:	sar    bh,1
  40e412:	in     al,dx
  40e413:	jle    0x40e404
  40e415:	mov    al,0xa9
  40e417:	lods   al,BYTE PTR ds:[esi]
  40e418:	inc    edx
  40e419:	call   0x69a14807
  40e41e:	sbb    BYTE PTR [ecx+0x6083d944],ch
  40e424:	sbb    eax,0xff4f9dd6
  40e429:	jl     0x40e49e
  40e42b:	mov    eax,ds:0xe7c80159
  40e430:	jbe    0x40e44f
  40e432:	sbb    BYTE PTR [eax-0x3463ddde],0xfa
  40e439:	and    al,0x4a
  40e43b:	mov    ds:0xad9dfea2,eax
  40e440:	sbb    esp,DWORD PTR [edi+0xb]
  40e443:	and    eax,0xc8767f77
  40e448:	fistp  DWORD PTR [ebp+0x7b]
  40e44b:	int    0xe8
  40e44d:	nop
  40e44e:	xor    bl,ah
  40e450:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e451:	mov    dl,0xef
  40e453:	inc    esp
  40e454:	pop    ebx
  40e455:	xor    esp,DWORD PTR [edi+0x71f09b13]
  40e45b:	cli    
  40e45c:	adc    al,0x39
  40e45e:	pop    esp
  40e45f:	lea    eax,[ebx]
  40e461:	mov    ebp,esi
  40e463:	(bad)  
  40e464:	mov    ah,0xb0
  40e466:	out    0x31,al
  40e468:	call   0xa585:0xcc881503
  40e46f:	test   esp,esp
  40e471:	sub    eax,0xa79cbaab
  40e476:	dec    edi
  40e477:	mov    ah,0xc
  40e479:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e47a:	mov    ds:0x8fa60bbb,al
  40e47f:	or     BYTE PTR cs:[edx+edx*1+0x1d],cl
  40e484:	mov    bl,0x1
  40e486:	xrelease xchg BYTE PTR [edx+0x1919fc72],bl
  40e48d:	sbb    esi,DWORD PTR [edi+0x66]
  40e490:	sbb    BYTE PTR ds:0x2451a21d,ah
  40e496:	mov    DWORD PTR [eax+0x41],ebp
  40e499:	(bad)  
  40e49b:	jg     0x40e45c
  40e49d:	cdq    
  40e49e:	rol    BYTE PTR [edi+0x5b4e2d58],cl
  40e4a4:	push   ss
  40e4a5:	mov    al,0xb8
  40e4a7:	fbld   TBYTE PTR [edx-0x51]
  40e4aa:	add    eax,0xba84bf5a
  40e4af:	mov    ecx,0xdd3540ce
  40e4b4:	lods   al,BYTE PTR ds:[esi]
  40e4b5:	ror    esp,1
  40e4b7:	mov    ah,0x29
  40e4b9:	test   al,0x96
  40e4bb:	fnstcw WORD PTR [eax+edx*1-0x31]
  40e4bf:	ss jno 0x40e513
  40e4c2:	ins    BYTE PTR es:[edi],dx
  40e4c3:	out    dx,eax
  40e4c4:	push   ebp
  40e4c5:	jp     0x40e4ba
  40e4c7:	mov    edi,0x9f884117
  40e4cc:	sbb    BYTE PTR [edi],ch
  40e4ce:	js     0x40e543
  40e4d0:	sar    DWORD PTR [esi+0x7809de4b],1
  40e4d6:	dec    ebx
  40e4d7:	rcr    DWORD PTR [eax-0x5c],cl
  40e4da:	jl     0x40e519
  40e4dc:	(bad)  
  40e4dd:	jmp    0x40e4de
  40e4df:	les    ebp,FWORD PTR [ebx]
  40e4e1:	add    bl,ah
  40e4e3:	call   0x6aed:0xdc46616a
  40e4ea:	fcom   QWORD PTR [ebx+0x5b]
  40e4ed:	inc    ecx
  40e4ee:	adc    DWORD PTR [ecx-0x62cb8890],ecx
  40e4f4:	mov    dh,0xf9
  40e4f6:	xor    al,0xf6
  40e4f8:	dec    ebx
  40e4f9:	mov    al,0xb7
  40e4fb:	mov    ah,0xab
  40e4fd:	jbe    0x40e49a
  40e4ff:	adc    ebp,ecx
  40e501:	sbb    eax,DWORD PTR [edi]
  40e503:	xchg   esi,eax
  40e504:	std    
  40e505:	mov    cl,0x93
  40e507:	dec    eax
  40e508:	xor    DWORD PTR [ebp-0x1a],eax
  40e50b:	sbb    eax,ebp
  40e50d:	dec    esp
  40e50e:	cwde   
  40e50f:	push   ss
  40e510:	(bad)  
  40e511:	sbb    al,0xfb
  40e513:	(bad)  
  40e515:	push   ds
  40e516:	pop    es
  40e517:	shl    BYTE PTR [edx],1
  40e519:	rol    dh,0xe4
  40e51c:	xlat   BYTE PTR ds:[ebx]
  40e51d:	sub    ah,0x4a
  40e520:	xor    al,0xee
  40e522:	push   ebp
  40e523:	and    eax,0x56c4ea1
  40e528:	mov    dl,0xb0
  40e52a:	pop    es
  40e52b:	(bad)  
  40e52c:	rol    BYTE PTR [ecx],1
  40e52e:	aaa    
  40e52f:	jo     0x40e511
  40e531:	jne    0x40e4ba
  40e533:	dec    esi
  40e534:	cmp    eax,0xce13664d
  40e539:	inc    ecx
  40e53a:	ss pop edi
  40e53c:	pop    esi
  40e53d:	add    dh,bh
  40e53f:	cmp    bl,BYTE PTR [edx+ecx*2]
  40e542:	popf   
  40e543:	(bad)  
  40e544:	xor    BYTE PTR [esi+esi*1+0x42],bl
  40e548:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e549:	pop    ecx
  40e54a:	sub    esi,DWORD PTR [edx-0x40]
  40e54d:	dec    edi
  40e54e:	fdivr  st,st(3)
  40e551:	lea    esp,[esp+ebx*8]
  40e554:	jg     0x40e5a2
  40e556:	int3   
  40e557:	push   ss
  40e558:	punpckldq mm5,DWORD PTR [edx-0x7b2c57af]
  40e55f:	call   0x7f3c:0xc3ff2c1b
  40e566:	mov    ebx,0x174c1510
  40e56b:	cmp    BYTE PTR [ecx+0x5dd07dcc],ah
  40e571:	inc    ebp
  40e572:	lea    ebp,[esi]
  40e574:	mov    ebx,edx
  40e576:	dec    ebx
  40e577:	sub    ah,BYTE PTR [ebp-0x5e]
  40e57a:	mov    ebp,0xcb78b772
  40e57f:	jge    0x40e542
  40e581:	hlt    
  40e582:	les    ecx,FWORD PTR [esi+0x8]
  40e585:	pop    ebp
  40e586:	cmp    BYTE PTR ss:[edx+0x4a],dl
  40e58a:	lea    ebp,[eax]
  40e58c:	push   edx
  40e58d:	xchg   BYTE PTR [ebp-0x4fcccc14],al
  40e593:	out    dx,al
  40e594:	and    DWORD PTR [edx+edx*8-0x219e8517],0xe65cce12
  40e59f:	xlat   BYTE PTR ds:[ebx]
  40e5a0:	outs   dx,BYTE PTR ds:[esi]
  40e5a1:	and    dl,cl
  40e5a3:	mov    eax,0x10844cb3
  40e5a8:	mov    DWORD PTR [ecx],ecx
  40e5aa:	pop    edi
  40e5ab:	inc    ebx
  40e5ac:	push   ecx
  40e5ad:	data16 into 
  40e5af:	pusha  
  40e5b0:	mov    eax,ds:0x8d87b646
  40e5b5:	add    esi,ebx
  40e5b7:	dec    edx
  40e5b8:	jne    0x40e5ab
  40e5ba:	pop    esi
  40e5bb:	and    eax,0xe9551ad9
  40e5c0:	loopne 0x40e549
  40e5c2:	ja     0x40e58d
  40e5c4:	dec    edi
  40e5c5:	mov    eax,ds:0x2344e975
  40e5ca:	jmp    0x40e645
  40e5cc:	icebp  
  40e5cd:	push   edi
  40e5ce:	mov    cl,0xe8
  40e5d0:	lahf   
  40e5d1:	pusha  
  40e5d2:	xchg   esi,eax
  40e5d3:	and    ah,BYTE PTR [ebp-0x1ff615f]
  40e5d9:	adc    BYTE PTR [eax+0x56089277],bh
  40e5df:	(bad)  
  40e5e0:	or     eax,0xe2230cdc
  40e5e5:	pop    DWORD PTR [ecx+0x458bf67a]
  40e5eb:	leave  
  40e5ec:	add    BYTE PTR [edx],ah
  40e5ee:	mov    eax,0x7f6cd9e9
  40e5f3:	dec    esp
  40e5f4:	jb     0x40e61e
  40e5f6:	scas   al,BYTE PTR es:[edi]
  40e5f7:	mov    ah,0x8b
  40e5f9:	out    0x80,al
  40e5fb:	mov    edx,0xc8cb4a52
  40e600:	out    0xfe,al
  40e602:	adc    BYTE PTR [edi+eiz*1],ah
  40e605:	and    al,0x2f
  40e607:	std    
  40e608:	in     al,dx
  40e609:	dec    edx
  40e60a:	aas    
  40e60b:	jnp    0x40e645
  40e60d:	jno    0x40e676
  40e60f:	gs sub eax,0x1a2faab4
  40e615:	lock (bad) 
  40e617:	out    dx,eax
  40e618:	ret    
  40e619:	ds sub eax,0x9ec48522
  40e61f:	jle    0x40e678
  40e621:	xchg   ebp,eax
  40e622:	stos   DWORD PTR es:[edi],eax
  40e623:	pop    es
  40e624:	pop    esp
  40e625:	cs (bad) 
  40e627:	aaa    
  40e628:	or     al,0x79
  40e62a:	sub    bl,BYTE PTR [edx]
  40e62c:	out    0xac,al
  40e62e:	xchg   edi,eax
  40e62f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e630:	cmp    eax,0xa55636b9
  40e635:	retf   
  40e636:	xor    edx,DWORD PTR [ebx]
  40e638:	(bad)  
  40e639:	icebp  
  40e63a:	and    bl,BYTE PTR [esi]
  40e63c:	lahf   
  40e63d:	ja     0x40e5f3
  40e63f:	xchg   edi,eax
  40e640:	mov    ebx,0x43d418a1
  40e645:	and    dl,BYTE PTR [edi+0x2f]
  40e648:	or     edi,eax
  40e64a:	sub    edi,DWORD PTR [edx+0x4a26acf3]
  40e650:	int3   
  40e651:	out    0xd5,al
  40e653:	mov    DWORD PTR [edi+0x71],esi
  40e656:	xor    BYTE PTR [esi],bh
  40e658:	adc    dl,BYTE PTR [ecx]
  40e65a:	xchg   edi,eax
  40e65b:	(bad)  
  40e65c:	push   DWORD PTR [esi+0x6c]
  40e65f:	loopne 0x40e6a2
  40e661:	jbe    0x40e600
  40e663:	rcl    DWORD PTR ds:0xb7c6f28a,1
  40e669:	test   al,0x96
  40e66c:	push   eax
  40e66d:	lods   al,BYTE PTR ds:[esi]
  40e66e:	ret    0xeb4e
  40e671:	sahf   
  40e672:	sbb    al,0x3e
  40e674:	and    dh,BYTE PTR [ecx]
  40e676:	test   cl,dl
  40e678:	aaa    
  40e679:	mov    esp,0x2993505
  40e67e:	stos   DWORD PTR es:[edi],eax
  40e67f:	stos   BYTE PTR es:[edi],al
  40e680:	mov    esp,0xf56a7f8d
  40e685:	hlt    
  40e686:	test   eax,0x723c1937
  40e68b:	jo     0x40e707
  40e68d:	cmp    BYTE PTR [eax+ebx*2-0x6f],bl
  40e691:	jmp    0x40e702
  40e693:	into   
  40e694:	and    esi,esi
  40e696:	mov    esp,0xc9ef04fc
  40e69b:	int3   
  40e69c:	stos   BYTE PTR es:[edi],al
  40e69d:	into   
  40e69e:	mov    bh,0xa1
  40e6a0:	out    0x91,al
  40e6a2:	push   ebp
  40e6a3:	pop    ebp
  40e6a4:	sbb    eax,edx
  40e6a6:	retf   0x6419
  40e6a9:	jae    0x40e676
  40e6ab:	pop    ebp
  40e6ac:	cli    
  40e6ad:	mov    ebx,0xdab89974
  40e6b2:	ret    
  40e6b3:	push   ebx
  40e6b4:	cmp    DWORD PTR [eax+0x23c2f74a],ebx
  40e6ba:	mov    ah,0xa
  40e6bc:	push   0xffffffc1
  40e6be:	(bad)  
  40e6bf:	sbb    BYTE PTR [esi-0x12],dh
  40e6c2:	mov    cl,0xf3
  40e6c4:	retf   0x50a5
  40e6c7:	shl    BYTE PTR [eax-0x6f75b8b2],0x1e
  40e6ce:	retf   0x286e
  40e6d1:	or     BYTE PTR [ebx+0x13],ch
  40e6d4:	pop    esp
  40e6d5:	push   ebp
  40e6d6:	fwait
  40e6d7:	pop    ebx
  40e6d8:	es sbb eax,0xbc1b91cf
  40e6de:	mov    edi,0xeb903158
  40e6e3:	mov    ebx,0x90d70b48
  40e6e8:	mov    ds:0x10db244c,al
  40e6ed:	cmp    edx,ebx
  40e6ef:	icebp  
  40e6f0:	ret    
  40e6f1:	inc    eax
  40e6f2:	mov    esp,0xa46f85b5
  40e6f7:	iret   
  40e6f8:	scas   eax,DWORD PTR es:[edi]
  40e6f9:	mov    WORD PTR [ecx-0x5d44c1e9],?
  40e6ff:	test   al,0xf9
  40e701:	popa   
  40e702:	pop    ds
  40e703:	aaa    
  40e704:	not    esi
  40e706:	push   eax
  40e707:	jo     0x40e75d
  40e709:	fcomp  DWORD PTR [esi+0x515116eb]
  40e70f:	jecxz  0x40e723
  40e711:	pop    eax
  40e712:	iret   
  40e713:	mov    ebp,0xa93a3076
  40e718:	mov    esi,DWORD PTR [edi+ebp*2+0x1e4bb4be]
  40e71f:	in     al,dx
  40e720:	mov    ah,0xe6
  40e722:	les    ecx,FWORD PTR [eax]
  40e724:	fwait
  40e725:	jecxz  0x40e74a
  40e727:	mov    eax,ds:0xeca14b26
  40e72c:	scas   eax,DWORD PTR es:[edi]
  40e72d:	push   0x8edeb84
  40e732:	mov    bh,0x5e
  40e734:	or     al,0x86
  40e736:	mov    esi,0x36a040f4
  40e73b:	ret    0xa0fb
  40e73e:	push   0x41af2982
  40e743:	or     dh,ah
  40e745:	stos   BYTE PTR es:[edi],al
  40e746:	mov    dl,0xe
  40e748:	(bad)  
  40e749:	rcl    BYTE PTR [edx],1
  40e74b:	mov    dh,0xf9
  40e74d:	sub    DWORD PTR [edx+edi*2],esi
  40e750:	pusha  
  40e751:	out    0x34,al
  40e753:	mov    ebp,0x520c5939
  40e758:	cwde   
  40e759:	loop   0x40e74c
  40e75b:	pushf  
  40e75c:	icebp  
  40e75d:	push   ds
  40e75e:	mov    ebp,0xdbaee1fb
  40e763:	jne    0x40e79b
  40e765:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e766:	retf   0x88b
  40e769:	adc    edx,esi
  40e76b:	jmp    0xb18:0x84f88435
  40e772:	xor    ecx,DWORD PTR [edi+0x151cd01d]
  40e778:	rcl    BYTE PTR [edi+0x616ea5d4],1
  40e77e:	push   ds
  40e77f:	sbb    al,0x84
  40e781:	add    BYTE PTR ds:0xb62ce231,dl
  40e787:	cmp    ebx,edx
  40e789:	popf   
  40e78a:	das    
  40e78b:	cmp    cl,BYTE PTR ds:0xb580ddae
  40e791:	popf   
  40e792:	or     edi,DWORD PTR [eax-0x12]
  40e795:	mov    cl,0x1d
  40e797:	push   ds
  40e798:	shl    BYTE PTR [ebx-0x3f],cl
  40e79b:	stc    
  40e79c:	mov    edx,0xc92335a9
  40e7a1:	cs lock and eax,0xe563995
  40e7a8:	push   0x7b847f69
  40e7ad:	aad    0x6b
  40e7af:	fwait
  40e7b0:	mov    esp,0x90484b32
  40e7b5:	(bad)  
  40e7b6:	retf   0x9dd3
  40e7b9:	xchg   edi,eax
  40e7ba:	stos   DWORD PTR es:[edi],eax
  40e7bb:	jge    0x40e7a3
  40e7bd:	dec    ecx
  40e7be:	ss push 0x97cf61a0
  40e7c4:	inc    esp
  40e7c5:	and    eax,DWORD PTR [edi+0x73]
  40e7c8:	test   BYTE PTR [eax],ah
  40e7ca:	add    al,0x6a
  40e7cc:	mov    ch,0x1a
  40e7ce:	sbb    BYTE PTR [edi],bl
  40e7d0:	shr    BYTE PTR [ebp+0x2e],0xd8
  40e7d4:	aaa    
  40e7d5:	push   edi
  40e7d6:	xchg   ebx,eax
  40e7d7:	leave  
  40e7d8:	inc    esi
  40e7d9:	sub    al,0x55
  40e7db:	in     eax,dx
  40e7dc:	syscall 
  40e7de:	leave  
  40e7df:	stc    
  40e7e0:	aas    
  40e7e1:	xchg   esp,eax
  40e7e2:	mov    ecx,0xf906e954
  40e7e7:	repz cmp si,WORD PTR [ebx+0x36670f26]
  40e7ef:	sbb    BYTE PTR [edx+0x54],ch
  40e7f2:	fcom   DWORD PTR [ebx-0x42748f20]
  40e7f8:	imul   BYTE PTR [edx+0x162b3893]
  40e7fe:	(bad)  
  40e7ff:	int3   
  40e800:	or     eax,0xbb76106f
  40e805:	in     eax,0xc4
  40e807:	retf   0x85df
  40e80a:	fcmovnbe st,st(2)
  40e80c:	outs   dx,DWORD PTR ds:[esi]
  40e80d:	fsubr  DWORD PTR [ebp+0x6b]
  40e810:	std    
  40e811:	cld    
  40e812:	fwait
  40e813:	test   eax,0x6e032712
  40e818:	imul   edi,ebx,0xac236936
  40e81e:	fst    QWORD PTR [esi-0x1b09e36a]
  40e824:	enter  0x37e6,0x51
  40e828:	lods   eax,DWORD PTR ds:[esi]
  40e829:	dec    ebx
  40e82a:	les    ecx,FWORD PTR [edx]
  40e82c:	int3   
  40e82d:	mov    ds:0xdf5cfe92,al
  40e832:	fs test eax,0xb9d9d2fd
  40e838:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e839:	je     0x40e7bc
  40e83b:	fdivr  st(3),st
  40e83d:	repnz test al,0xa2
  40e840:	jle    0x40e853
  40e842:	adc    BYTE PTR [edi],ch
  40e844:	(bad)  
  40e846:	push   ebx
  40e847:	(bad)  
  40e849:	inc    ebp
  40e84a:	pop    es
  40e84b:	add    eax,0xd44c5805
  40e850:	(bad)  
  40e851:	neg    BYTE PTR [edi+edx*1+0xba58046]
  40e858:	inc    esi
  40e859:	push   esp
  40e85a:	jo     0x40e8b7
  40e85c:	retf   
  40e85d:	and    edx,DWORD PTR [esi+0x6ed41490]
  40e863:	outs   dx,DWORD PTR ds:[esi]
  40e864:	dec    ebp
  40e865:	shr    BYTE PTR [eax+0x2425e753],cl
  40e86b:	sub    eax,DWORD PTR [eax+0x1e]
  40e86e:	cmp    esi,0x3
  40e871:	cmp    ch,BYTE PTR [esi]
  40e873:	xlat   BYTE PTR ds:[ebx]
  40e874:	xchg   DWORD PTR [esi-0x6cb81137],ebp
  40e87a:	call   FWORD PTR [ecx-0x23]
  40e87d:	sbb    DWORD PTR [esi-0x37],esi
  40e880:	(bad)  
  40e881:	neg    dh
  40e883:	xchg   esi,eax
  40e884:	xor    ecx,esp
  40e886:	je     0x40e810
  40e888:	nop
  40e889:	xchg   ecx,ecx
  40e88b:	je     0x40e8fb
  40e88d:	loopne 0x40e837
  40e88f:	push   ecx
  40e890:	(bad)  
  40e891:	out    dx,al
  40e892:	sbb    al,BYTE PTR [edx]
  40e894:	dec    esp
  40e895:	and    al,dl
  40e897:	test   esi,edi
  40e899:	push   0xdb644c7
  40e89e:	jmp    0xc13e120b
  40e8a3:	out    dx,al
  40e8a4:	sar    BYTE PTR [edx+0x506486ab],cl
  40e8aa:	cmp    edi,DWORD PTR [edx-0x1259a9b9]
  40e8b0:	add    ecx,edx
  40e8b2:	fmul   DWORD PTR [ecx+0x629b3fe]
  40e8b8:	aaa    
  40e8b9:	jno    0x40e84b
  40e8bb:	sbb    BYTE PTR [eax],cl
  40e8bd:	mov    edx,0xed5faf88
  40e8c2:	loope  0x40e8bb
  40e8c4:	mov    eax,DWORD PTR [ebp-0x7cd7484]
  40e8ca:	in     eax,0x2d
  40e8cc:	nop
  40e8cd:	leave  
  40e8ce:	or     eax,0x247508da
  40e8d3:	loope  0x40e91e
  40e8d5:	stc    
  40e8d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e8d7:	aaa    
  40e8d8:	push   esp
  40e8d9:	xchg   ebx,eax
  40e8da:	in     eax,dx
  40e8db:	pop    ebp
  40e8dc:	(bad)  
  40e8de:	lea    edx,cs:[ebx-0x7ddeda8a]
  40e8e5:	outs   dx,BYTE PTR ds:[esi]
  40e8e6:	aad    0x90
  40e8e8:	sbb    ebx,DWORD PTR [ecx+0x309d0779]
  40e8ee:	stos   DWORD PTR es:[edi],eax
  40e8ef:	addr16 mov esi,0x751efb6
  40e8f5:	adc    BYTE PTR [edx+0x49],bh
  40e8f8:	les    esp,FWORD PTR [esi+0x14]
  40e8fb:	int    0x86
  40e8fd:	aas    
  40e8fe:	dec    eax
  40e8ff:	dec    esi
  40e900:	lods   al,BYTE PTR ds:[esi]
  40e901:	cmp    eax,0xbc0f213e
  40e906:	pop    edx
  40e907:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e908:	rol    BYTE PTR [ecx],1
  40e90a:	scas   al,BYTE PTR es:[edi]
  40e90b:	push   ebp
  40e90c:	sbb    esi,ecx
  40e90e:	push   esp
  40e90f:	pop    ebp
  40e910:	mov    dh,0x74
  40e912:	sub    eax,0xd35d53f5
  40e917:	enter  0x65fe,0x8d
  40e91b:	or     esp,DWORD PTR [edx+0xa]
  40e91e:	les    esp,FWORD PTR [edi+0x64632e27]
  40e924:	test   ebp,0x5d045b3e
  40e92a:	test   al,0x9a
  40e92c:	rcl    DWORD PTR [ebx],0x11
  40e92f:	sbb    DWORD PTR [bp+si],edx
  40e932:	pushf  
  40e933:	pop    DWORD PTR [eax]
  40e935:	sbb    bh,al
  40e937:	stc    
  40e938:	push   esi
  40e939:	jp     0x40e9af
  40e93b:	xchg   BYTE PTR [ebp-0x60],dh
  40e93e:	dec    eax
  40e93f:	push   edi
  40e940:	sub    al,0x6e
  40e942:	inc    ebx
  40e943:	jecxz  0x40e8d0
  40e945:	stc    
  40e946:	push   edi
  40e947:	xlat   BYTE PTR ds:[ebx]
  40e948:	xchg   ecx,eax
  40e949:	mov    DWORD PTR [edx+0x49],edi
  40e94c:	jne    0x40e8ff
  40e94e:	push   0xffffffae
  40e950:	mov    ecx,edi
  40e952:	jbe    0x40e9ca
  40e954:	or     al,0x93
  40e956:	repz push cs
  40e958:	inc    esi
  40e959:	xchg   edi,eax
  40e95a:	push   ss
  40e95b:	push   0x60
  40e95d:	or     al,0x15
  40e95f:	dec    ebp
  40e960:	mov    ds:0xad9733a5,al
  40e965:	inc    ebp
  40e966:	and    DWORD PTR fs:[edi+0x4ab97063],ecx
  40e96d:	mov    esi,0xd7ca1f18
  40e972:	jae    0x40e9ed
  40e974:	mov    cl,0xf7
  40e976:	add    BYTE PTR [eax-0x39],0x89
  40e97a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e97b:	popa   
  40e97c:	or     al,0x64
  40e97e:	outs   dx,BYTE PTR ds:[esi]
  40e97f:	adc    eax,esp
  40e981:	pop    ss
  40e982:	mov    WORD PTR [edx],ss
  40e984:	(bad)  
  40e985:	mov    edi,0xb6c4ea2c
  40e98a:	sahf   
  40e98b:	push   ebx
  40e98c:	adc    eax,ebx
  40e98e:	push   0xdef05dad
  40e993:	out    0x70,eax
  40e995:	cmp    al,0x22
  40e997:	das    
  40e998:	cmp    al,0x14
  40e99a:	xchg   esp,eax
  40e99b:	sub    eax,0x5dfb41fe
  40e9a0:	adc    BYTE PTR [ebx+0x7386c5f9],0x2b
  40e9a7:	int3   
  40e9a8:	inc    edi
  40e9a9:	add    DWORD PTR [edx-0x9],edx
  40e9ac:	xchg   ebp,eax
  40e9ad:	jmp    0x38b2c6d5
  40e9b2:	sbb    DWORD PTR [eax-0x35],0x249b5764
  40e9b9:	fist   WORD PTR [ecx-0x7f]
  40e9bc:	cli    
  40e9bd:	sub    dl,cl
  40e9bf:	dec    edx
  40e9c0:	inc    ebx
  40e9c1:	jl     0x40e947
  40e9c3:	fwait
  40e9c4:	(bad)  
  40e9c5:	inc    ebp
  40e9c6:	call   0xd75bb4bd
  40e9cb:	cdq    
  40e9cc:	or     BYTE PTR [ecx-0x6565565f],0x1a
  40e9d3:	popa   
  40e9d4:	add    BYTE PTR [esi+0x5b1cd54a],ch
  40e9da:	mov    bl,0x10
  40e9dc:	jmp    0x42a3fccf
  40e9e1:	pop    edi
  40e9e2:	pop    eax
  40e9e3:	jg     0x40e98a
  40e9e5:	fdivrp st(4),st
  40e9e7:	or     esp,DWORD PTR [edi-0x3]
  40e9ea:	dec    edx
  40e9eb:	jne    0x40e970
  40e9ed:	cmp    eax,esp
  40e9ef:	inc    DWORD PTR [edx-0x14]
  40e9f2:	xor    eax,DWORD PTR [ecx+ebx*2]
  40e9f5:	pop    esi
  40e9f6:	push   edi
  40e9f7:	jp     0x40ea3f
  40e9f9:	sahf   
  40e9fa:	jmp    0x9eb6:0xa45a5ff2
  40ea01:	ret    0xdfd
  40ea04:	or     ah,BYTE PTR ds:0xda6f5bd0
  40ea0a:	fwait
  40ea0b:	div    al
  40ea0d:	enter  0xec39,0x4
  40ea11:	adc    dl,BYTE PTR [edi-0x332b8adf]
  40ea17:	push   cs
  40ea18:	loop   0x40e9d8
  40ea1a:	(bad)  
  40ea1b:	stos   BYTE PTR es:[edi],al
  40ea1c:	inc    eax
  40ea1d:	fdivr  QWORD PTR [ebx]
  40ea1f:	aaa    
  40ea20:	sti    
  40ea21:	xor    esi,DWORD PTR [eax]
  40ea23:	ret    0xe4d2
  40ea26:	xlat   BYTE PTR ds:[ebx]
  40ea27:	aad    0xcd
  40ea29:	jmp    0x40ea49
  40ea2b:	lock pop edi
  40ea2d:	lds    esp,FWORD PTR [esi-0x77a8d218]
  40ea33:	cmp    DWORD PTR [ebx],edi
  40ea35:	push   0xb4ad7440
  40ea3a:	add    al,0x2
  40ea3c:	adc    esi,DWORD PTR [eax-0x10]
  40ea3f:	aam    0xb2
  40ea41:	or     eax,0xdc02aec1
  40ea46:	dec    eax
  40ea47:	or     bl,BYTE PTR [ebp+edx*2-0x3]
  40ea4b:	je     0x40eac1
  40ea4d:	adc    BYTE PTR [eax],ah
  40ea4f:	outs   dx,BYTE PTR ds:[esi]
  40ea50:	test   ebx,edi
  40ea52:	out    dx,al
  40ea53:	aad    0x72
  40ea55:	in     eax,dx
  40ea56:	ja     0x40eab2
  40ea58:	in     eax,0x1d
  40ea5a:	outs   dx,DWORD PTR ds:[esi]
  40ea5b:	daa    
  40ea5c:	cmp    al,bh
  40ea5e:	push   cs
  40ea5f:	xlat   BYTE PTR ds:[ebx]
  40ea60:	xchg   BYTE PTR [edi+0x30433e75],dh
  40ea66:	dec    ebx
  40ea67:	pop    ebx
  40ea68:	xchg   esp,eax
  40ea69:	loop   0x40ea7d
  40ea6b:	xchg   edi,eax
  40ea6c:	cs inc ebp
  40ea6e:	and    edx,DWORD PTR [ebx]
  40ea70:	addr16 sbb ecx,esp
  40ea73:	adc    bh,dl
  40ea75:	xchg   edi,eax
  40ea76:	cdq    
  40ea77:	or     edi,edi
  40ea79:	adc    edx,DWORD PTR [edx-0x35]
  40ea7c:	cmc    
  40ea7d:	xchg   esi,eax
  40ea7e:	dec    esi
  40ea7f:	lock (bad) 
  40ea81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea82:	adc    dl,BYTE PTR [ecx-0x79]
  40ea85:	idiv   DWORD PTR ds:0x98328e15
  40ea8b:	jp     0x40ea60
  40ea8d:	jle    0x40ea9c
  40ea8f:	jne    0x40eab6
  40ea91:	mov    edx,0x1a56fb5e
  40ea96:	adc    esi,edx
  40ea98:	inc    edx
  40ea99:	xchg   edx,eax
  40ea9a:	mov    esp,es
  40ea9c:	push   esp
  40ea9d:	xor    esi,esp
  40ea9f:	mov    ds:0xcd16077c,eax
  40eaa4:	mov    ds:0x5a8f65d4,eax
  40eaa9:	shl    BYTE PTR [edx+0x7b],0x71
  40eaad:	jp     0x40eb10
  40eaaf:	aaa    
  40eab0:	and    ch,BYTE PTR [eax+0x517ed03f]
  40eab6:	or     ebp,DWORD PTR [edi-0x39]
  40eab9:	jnp    0x40ea62
  40eabb:	outs   dx,DWORD PTR ds:[esi]
  40eabc:	mov    ch,0x51
  40eabe:	mov    ds:0xcdd52e4,eax
  40eac3:	or     BYTE PTR ds:0x4e0162b0,cl
  40eac9:	cs mov dl,0x85
  40eacc:	inc    ecx
  40eacd:	cmp    bh,BYTE PTR [ebx-0x54aacf2a]
  40ead3:	test   bl,bh
  40ead5:	mov    cs,WORD PTR [edi-0x6d]
  40ead8:	inc    edx
  40ead9:	mov    dh,0x9d
  40eadb:	lds    ecx,FWORD PTR [ecx]
  40eadd:	adc    DWORD PTR [ecx+0x24],esi
  40eae0:	in     al,dx
  40eae1:	les    ecx,FWORD PTR [edx]
  40eae3:	popa   
  40eae4:	lds    esp,FWORD PTR [ebp+0x1e]
  40eae7:	jo     0x40eb5d
  40eae9:	or     al,BYTE PTR [esp+edi*2]
  40eaec:	in     al,dx
  40eaed:	daa    
  40eaee:	or     ecx,eax
  40eaf0:	push   ecx
  40eaf1:	xor    eax,0x92deaeb2
  40eaf6:	or     DWORD PTR [edx],ecx
  40eaf8:	lds    ebp,FWORD PTR [edi]
  40eafa:	jnp    0x40eab2
  40eafc:	mov    al,ds:0xab6855a
  40eb01:	sysexit 
  40eb03:	sub    eax,0xbcc492e3
  40eb08:	scas   al,BYTE PTR es:[edi]
  40eb09:	data16 mov dh,0xf1
  40eb0c:	dec    edx
  40eb0d:	mov    esp,ebp
  40eb0f:	and    eax,0xfaccd4fe
  40eb14:	mov    ebx,?
  40eb16:	and    BYTE PTR [ecx+0x178f651f],bl
  40eb1c:	sub    al,0x8f
  40eb1e:	sahf   
  40eb1f:	std    
  40eb20:	and    ch,BYTE PTR [ebx+0x1361575f]
  40eb26:	jge    0x40eae0
  40eb28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb29:	mov    edx,0x2101df8e
  40eb2e:	loope  0x40eafa
  40eb30:	popa   
  40eb31:	out    dx,al
  40eb32:	add    DWORD PTR [edx+edx*8],edi
  40eb35:	sbb    al,0x82
  40eb37:	ds inc ebx
  40eb39:	ins    BYTE PTR es:[edi],dx
  40eb3a:	and    al,0xb1
  40eb3c:	stos   DWORD PTR es:[edi],eax
  40eb3d:	mov    bh,0x32
  40eb3f:	inc    eax
  40eb40:	dec    esp
  40eb41:	fild   DWORD PTR [esi-0x28]
  40eb44:	cmp    eax,0x24198956
  40eb49:	mov    esp,0xb313ae93
  40eb4e:	in     eax,dx
  40eb4f:	mul    esp
  40eb51:	stos   DWORD PTR es:[edi],eax
  40eb52:	sbb    esp,DWORD PTR [ecx]
  40eb54:	mov    al,ss:0xcd91b9e3
  40eb5a:	jno    0x40eb3b
  40eb5c:	jnp    0x40eb46
  40eb5e:	cmp    ah,al
  40eb60:	mov    bl,0x82
  40eb62:	stos   DWORD PTR es:[edi],eax
  40eb63:	push   ebx
  40eb64:	popa   
  40eb65:	(bad)  
  40eb66:	pop    esp
  40eb67:	push   ebx
  40eb68:	sub    eax,DWORD PTR [edi-0x100b69]
  40eb6e:	xchg   DWORD PTR [ecx-0x701f9691],edx
  40eb74:	bnd jge 0x40eb7b
  40eb77:	enter  0x2ac0,0xba
  40eb7b:	xor    ch,bl
  40eb7d:	(bad)  
  40eb7e:	out    dx,eax
  40eb7f:	mov    DWORD PTR [edx-0x6ab711b6],esp
  40eb85:	adc    al,0x67
  40eb87:	xchg   ebp,eax
  40eb88:	add    BYTE PTR [esi+ebp*1+0x55e89e90],bh
  40eb8f:	xchg   ebp,eax
  40eb90:	and    al,0xb5
  40eb92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb93:	pop    ebp
  40eb94:	push   es
  40eb95:	inc    edx
  40eb96:	jmp    0x40eb9b
  40eb98:	cs pop ecx
  40eb9a:	enter  0x1e67,0x9c
  40eb9e:	inc    ebp
  40eb9f:	or     BYTE PTR [eax+0x45],0x55
  40eba3:	fcompp 
  40eba5:	mov    dl,0xf1
  40eba7:	mov    ds:0x610f56b,eax
  40ebac:	jmp    0x69005534
  40ebb1:	mov    esi,0xae465229
  40ebb6:	xor    ecx,DWORD PTR [eax-0x1dc77f3f]
  40ebbc:	aad    0x63
  40ebbe:	scas   eax,DWORD PTR es:[edi]
  40ebbf:	xchg   esi,eax
  40ebc0:	jp     0x40ec10
  40ebc2:	pop    es
  40ebc3:	call   0xb935:0x83763259
  40ebca:	inc    eax
  40ebcb:	out    0x6d,al
  40ebcd:	push   0x12
  40ebcf:	inc    ebp
  40ebd0:	cmp    eax,0x7984fcfd
  40ebd5:	imul   ecx,eax,0xa6f8b590
  40ebdb:	jmp    0x40ec26
  40ebdd:	or     esp,DWORD PTR [edi+0x13566f50]
  40ebe3:	cmc    
  40ebe4:	data16 xchg BYTE PTR [ecx],dl
  40ebe7:	fadd   QWORD PTR [ebp-0x7a]
  40ebea:	push   es
  40ebeb:	xlat   BYTE PTR ds:[ebx]
  40ebec:	push   esi
  40ebed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ebee:	mov    edx,0x37dbd110
  40ebf3:	in     eax,dx
  40ebf4:	push   ebp
  40ebf5:	(bad)  
  40ebf6:	jno    0x40ebdf
  40ebf8:	inc    esi
  40ebf9:	or     eax,0x4635ff03
  40ebfe:	addr16 call 0xb5f4:0x17549a24
  40ec06:	add    ebp,esp
  40ec08:	adc    dl,ah
  40ec0a:	add    DWORD PTR ds:0x74e6e64c,0xffffffa8
  40ec11:	sub    BYTE PTR [edi+0x694a2b70],dl
  40ec17:	ins    DWORD PTR es:[edi],dx
  40ec18:	ja     0x40ec74
  40ec1a:	inc    ebx
  40ec1b:	in     eax,dx
  40ec1c:	stc    
  40ec1d:	mov    dl,0x4
  40ec1f:	fnstsw WORD PTR [edx+0x45]
  40ec22:	pop    esi
  40ec23:	pushf  
  40ec24:	add    bh,cl
  40ec26:	cmp    DWORD PTR [ebx-0x13],ebx
  40ec29:	cld    
  40ec2a:	and    DWORD PTR [esi-0x339617e9],edx
  40ec30:	es stos BYTE PTR es:[edi],al
  40ec32:	dec    edx
  40ec33:	dec    ecx
  40ec34:	fisub  DWORD PTR [esp+ebx*4]
  40ec37:	int    0x62
  40ec39:	outs   dx,DWORD PTR ds:[esi]
  40ec3a:	sub    dh,ch
  40ec3c:	mov    WORD PTR [ebx-0x80],es
  40ec3f:	or     al,0x8
  40ec41:	frstor [ecx+0x8]
  40ec44:	cmp    esi,edx
  40ec46:	mov    eax,0xc9ae4890
  40ec4b:	scas   eax,DWORD PTR es:[edi]
  40ec4c:	push   cs
  40ec4d:	dec    eax
  40ec4e:	jmp    0xac53:0xea30b031
  40ec55:	xchg   bl,bl
  40ec57:	mov    esp,DWORD PTR [edx+0x67ed8338]
  40ec5d:	aam    0xf1
  40ec5f:	and    al,0x5f
  40ec61:	lods   eax,DWORD PTR ds:[esi]
  40ec62:	in     eax,0x89
  40ec64:	jl     0x40ecbb
  40ec66:	fistp  DWORD PTR [edi+0x17]
  40ec69:	aas    
  40ec6a:	leave  
  40ec6b:	xor    al,0xfd
  40ec6d:	push   esi
  40ec6e:	cmp    DWORD PTR [ebx-0x6d02bc07],edi
  40ec74:	xchg   esp,eax
  40ec75:	xchg   esp,eax
  40ec76:	jne    0x40ec75
  40ec78:	jp     0x40ec5a
  40ec7a:	cmp    al,0xf1
  40ec7c:	push   edi
  40ec7d:	adc    ah,BYTE PTR [ebx+0x660be867]
  40ec83:	in     eax,0x97
  40ec85:	jb     0x40ecc5
  40ec87:	je     0x40ec44
  40ec89:	inc    esi
  40ec8a:	cdq    
  40ec8b:	mov    ecx,DWORD PTR [ecx-0x2f]
  40ec8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec8f:	inc    eax
  40ec90:	pop    ebp
  40ec91:	jbe    0x40ed11
  40ec93:	jecxz  0x40ec92
  40ec95:	mov    al,ds:0x229d6555
  40ec9a:	pop    esp
  40ec9b:	adc    BYTE PTR [edi+0x8cc1aa5],ah
  40eca1:	mov    esi,0xb087ca66
  40eca6:	xlat   BYTE PTR ds:[ebx]
  40eca7:	lahf   
  40eca8:	add    ch,BYTE PTR [esi+0x3e826c3f]
  40ecae:	pop    es
  40ecaf:	(bad)  
  40ecb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ecb1:	push   ds
  40ecb2:	mov    al,0x6
  40ecb4:	retf   0xa7e8
  40ecb7:	cmc    
  40ecb8:	(bad)  
  40ecb9:	leave  
  40ecba:	gs and al,0x42
  40ecbd:	mov    ch,0x2a
  40ecbf:	inc    ebx
  40ecc0:	data16 fist WORD PTR cs:[esi+0xa3722a5]
  40ecc8:	lds    ebx,FWORD PTR [ebp+0x76d43daa]
  40ecce:	pop    ebx
  40eccf:	mov    cl,0xc0
  40ecd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ecd2:	cwde   
  40ecd3:	mov    al,0xdd
  40ecd5:	mov    DWORD PTR [esi],ebx
  40ecd7:	push   ecx
  40ecd8:	jno    0x40ec9e
  40ecda:	fs out 0x1b,al
  40ecdd:	cli    
  40ecde:	repz fcmove st,st(5)
  40ece1:	pcmpgtd mm4,QWORD PTR ds:0x9544804c
  40ece8:	loop   0x40ecfb
  40ecea:	add    al,0xb4
  40ecec:	xchg   ebx,eax
  40eced:	mov    ds,WORD PTR [edx]
  40ecef:	jae    0x40ecbc
  40ecf1:	push   0xfffffff6
  40ecf3:	dec    edi
  40ecf4:	fs popf 
  40ecf6:	jmp    0xe16f:0xd7e8cd2c
  40ecfd:	mov    edi,0xa1464948
  40ed02:	(bad)  
  40ed03:	(bad)  
  40ed04:	mov    edi,0x95bb1071
  40ed09:	repz and ch,BYTE PTR gs:[ebp+0x30c6ff7c]
  40ed11:	enter  0xaa8d,0x7e
  40ed15:	loopne 0x40ecd6
  40ed17:	test   al,0x52
  40ed19:	(bad)  
  40ed1a:	lods   al,BYTE PTR ds:[esi]
  40ed1b:	out    dx,al
  40ed1c:	adc    al,0x69
  40ed1e:	adc    eax,0x7efe062d
  40ed23:	push   es
  40ed24:	shr    BYTE PTR [esi+0x74],cl
  40ed27:	ret    
  40ed28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed2a:	fsubp  st(2),st
  40ed2c:	mov    edi,0x17f3cd39
  40ed31:	adc    bl,dl
  40ed33:	cmp    eax,0xe4a905be
  40ed38:	scas   eax,DWORD PTR es:[edi]
  40ed39:	fwait
  40ed3a:	ss pop ss
  40ed3c:	(bad)  
  40ed3d:	das    
  40ed3e:	jae    0x40ecf7
  40ed40:	fstp   TBYTE PTR [esi-0x64371c63]
  40ed46:	dec    eax
  40ed47:	jmp    0xc9d27f5f
  40ed4c:	add    eax,esp
  40ed4e:	(bad)
  40ed51:	or     al,0xbb
  40ed53:	fimul  DWORD PTR [eax]
  40ed55:	sbb    al,0xf4
  40ed57:	shr    al,0xec
  40ed5a:	test   al,0xbf
  40ed5c:	pop    ss
  40ed5d:	cmp    bh,cl
  40ed5f:	mov    eax,edx
  40ed61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed62:	sbb    DWORD PTR [esi],ebp
  40ed64:	out    0xca,eax
  40ed66:	jno    0x40edb6
  40ed68:	retf   
  40ed69:	dec    esp
  40ed6a:	in     al,dx
  40ed6b:	rol    BYTE PTR [ebx-0x4e],1
  40ed6e:	out    dx,al
  40ed6f:	imul   eax,DWORD PTR [bx+si-0x599a]
  40ed75:	sbb    bh,BYTE PTR [esi+eax*4]
  40ed78:	push   esp
  40ed79:	dec    edx
  40ed7a:	mov    dl,0x29
  40ed7c:	clc    
  40ed7d:	add    bh,BYTE PTR [edi+0x9]
  40ed80:	fstp   QWORD PTR [ecx-0x4b]
  40ed83:	(bad)
  40ed86:	sbb    eax,0x3a43d303
  40ed8b:	std    
  40ed8c:	lahf   
  40ed8d:	xchg   edx,eax
  40ed8e:	(bad)  
  40ed8f:	mov    bl,0x25
  40ed91:	cwde   
  40ed92:	add    DWORD PTR [esi+0x5f9e93fb],edx
  40ed98:	xchg   cl,dh
  40ed9a:	bound  edx,QWORD PTR [ecx]
  40ed9c:	inc    edi
  40ed9d:	pop    ecx
  40ed9e:	fwait
  40ed9f:	jne    0x40edcb
  40eda1:	and    al,0x6a
  40eda3:	mov    bh,BYTE PTR [ecx+eax*2+0x75]
  40eda7:	push   ds
  40eda8:	xchg   ebp,eax
  40eda9:	push   cs
  40edaa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40edab:	xor    ch,bl
  40edad:	out    0x4a,eax
  40edaf:	adc    BYTE PTR [ebp+0x1c573f3b],dh
  40edb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40edb6:	dec    edi
  40edb7:	jecxz  0x40ed80
  40edb9:	push   ebp
  40edba:	or     dl,dh
  40edbc:	and    esi,ecx
  40edbe:	stos   BYTE PTR es:[edi],al
  40edbf:	or     al,0x90
  40edc1:	pop    es
  40edc2:	mov    ecx,0x99410fad
  40edc7:	fcom   QWORD PTR [edx+eax*4+0x42d9afed]
  40edce:	clc    
  40edcf:	xlat   BYTE PTR ds:[ebx]
  40edd0:	sbb    bh,BYTE PTR [ebp+0x72]
  40edd3:	pop    ecx
  40edd4:	mov    bl,0x3a
  40edd6:	in     al,dx
  40edd7:	hlt    
  40edd8:	sahf   
  40edd9:	sub    al,0xde
  40eddb:	mov    ebp,0x21b230b7
  40ede0:	dec    edi
  40ede1:	sti    
  40ede2:	call   eax
  40ede4:	cs inc edi
  40ede6:	popf   
  40ede7:	and    DWORD PTR [eax],0xfffffff6
  40edea:	jg     0x40ed83
  40edec:	rcl    DWORD PTR [edx+0x2d],cl
  40edef:	jo     0x40ee14
  40edf1:	pop    edi
  40edf2:	mov    al,gs:0x6f9f78c9
  40edf8:	ss inc esi
  40edfa:	enter  0xefdb,0x8f
  40edfe:	cmp    edi,edx
  40ee00:	popa   
  40ee01:	out    0x26,eax
  40ee03:	jmp    0x65b3:0x72eadd2c
  40ee0a:	dec    edx
  40ee0b:	lods   al,BYTE PTR ds:[esi]
  40ee0c:	scas   eax,DWORD PTR es:[edi]
  40ee0d:	cli    
  40ee0e:	sub    eax,0x48104c9b
  40ee13:	cmp    al,0xd2
  40ee15:	lahf   
  40ee16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee17:	outs   dx,BYTE PTR ds:[esi]
  40ee18:	aaa    
  40ee19:	cmp    DWORD PTR [ecx],edi
  40ee1b:	es mov edx,0x8dc89dde
  40ee21:	adc    BYTE PTR [edi-0x5c555d8a],0x47
  40ee28:	fsubr  DWORD PTR ds:0xed562f89
  40ee2e:	lahf   
  40ee2f:	jo     0x40ee3c
  40ee31:	fistp  QWORD PTR [eax+0x45137180]
  40ee37:	push   ebx
  40ee38:	les    edx,FWORD PTR [ebp-0x24]
  40ee3b:	in     eax,0x3e
  40ee3d:	jmp    0x40ee1a
  40ee3f:	or     eax,0x40ea89c6
  40ee44:	test   BYTE PTR [esi+0x37],bh
  40ee47:	retf   
  40ee48:	push   ss
  40ee49:	adc    BYTE PTR [ebx],cl
  40ee4b:	sub    DWORD PTR [eax+edi*1-0x5f96a5a],esp
  40ee52:	inc    edi
  40ee53:	(bad)  
  40ee54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee55:	xchg   esi,eax
  40ee56:	xor    BYTE PTR [esi+0x22c0d00f],ch
  40ee5c:	pop    ds
  40ee5d:	sub    DWORD PTR [ebp+0x18],esp
  40ee60:	std    
  40ee61:	in     al,dx
  40ee62:	pop    eax
  40ee63:	xchg   DWORD PTR ds:[edi+0x540a4b13],esp
  40ee6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee6b:	imul   ecx,DWORD PTR [ebx],0x27da80f3
  40ee71:	mov    WORD PTR [ebx+0x22],cs
  40ee74:	dec    edx
  40ee75:	shl    DWORD PTR [eax],0xa9
  40ee78:	enter  0xb549,0x88
  40ee7c:	add    eax,DWORD PTR [ebp-0x59]
  40ee7f:	sub    al,0xcc
  40ee81:	jo     0x40ee17
  40ee83:	dec    esp
  40ee84:	jns    0x40eeb2
  40ee86:	cmp    cl,dh
  40ee88:	rol    BYTE PTR [ebp-0x78],1
  40ee8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee8c:	xchg   edi,eax
  40ee8d:	cld    
  40ee8e:	(bad)  
  40ee8f:	fdivr  st,st(6)
  40ee91:	icebp  
  40ee92:	inc    edi
  40ee93:	hlt    
  40ee94:	in     eax,dx
  40ee95:	sub    BYTE PTR [esi-0x22ec7995],bh
  40ee9b:	shl    edi,cl
  40ee9d:	xlat   BYTE PTR ds:[ebx]
  40ee9e:	jo     0x40ee48
  40eea0:	bound  edi,QWORD PTR ds:0xa4a734c7
  40eea6:	mov    al,0xcf
  40eea8:	cmp    eax,0x1091d386
  40eead:	mov    bl,0x3b
  40eeaf:	add    edi,DWORD PTR [ebp+edi*2-0x445431e0]
  40eeb6:	repnz lahf 
  40eeb8:	ins    BYTE PTR es:[edi],dx
  40eeb9:	fisubr DWORD PTR [esi-0x3]
  40eebc:	icebp  
  40eebd:	and    dl,BYTE PTR [ecx]
  40eebf:	cmp    BYTE PTR [edi+0xb],dl
  40eec2:	jge    0x40ef35
  40eec4:	xchg   edx,eax
  40eec5:	aas    
  40eec6:	jno    0x40ef1b
  40eec8:	gs inc ecx
  40eeca:	fdivr  st,st(0)
  40eecc:	sub    al,0x22
  40eece:	fs inc esp
  40eed0:	mov    ?,WORD PTR [ecx+0x4e]
  40eed3:	cmp    ebp,DWORD PTR [ecx-0xa44fcc2]
  40eed9:	xadd   BYTE PTR [eax+0x5b94513f],dh
  40eee0:	cmp    al,0xed
  40eee2:	out    dx,eax
  40eee3:	loope  0x40ee84
  40eee5:	sbb    BYTE PTR [ebx],ch
  40eee7:	popf   
  40eee8:	jmp    0x2ac1:0x3202f960
  40eeef:	(bad)  
  40eef0:	dec    eax
  40eef1:	add    ecx,DWORD PTR [edi-0xc]
  40eef4:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  40eef6:	rcl    al,0x83
  40eef9:	int    0x64
  40eefb:	mov    cl,0xf6
  40eefd:	shl    ch,cl
  40eeff:	mov    ebx,0x6112d19
  40ef04:	pop    es
  40ef05:	mov    edx,DWORD PTR [eax-0x61]
  40ef08:	lock icebp 
  40ef0a:	dec    edi
  40ef0b:	out    0x2e,eax
  40ef0d:	ficom  WORD PTR [eax-0x6d54cb3]
  40ef13:	ss out 0xa2,al
  40ef16:	jmp    0x40ef22
  40ef18:	scas   al,BYTE PTR es:[edi]
  40ef19:	fwait
  40ef1a:	ret    
  40ef1b:	scas   eax,DWORD PTR es:[edi]
  40ef1c:	mov    ebp,0xe59b90a4
  40ef21:	inc    ebx
  40ef22:	cmp    BYTE PTR [eax-0x25],dh
  40ef25:	and    eax,0x1f4d229d
  40ef2a:	sbb    al,BYTE PTR [eax]
  40ef2c:	dec    edi
  40ef2d:	ins    DWORD PTR es:[edi],dx
  40ef2e:	lahf   
  40ef2f:	jne    0x40ef55
  40ef31:	sub    DWORD PTR [edx],esp
  40ef33:	icebp  
  40ef34:	push   ds
  40ef35:	fnstenv [ecx]
  40ef37:	push   0x61
  40ef39:	ds add eax,0x56557005
  40ef3f:	xor    DWORD PTR [esp+ecx*2+0x2b],esp
  40ef43:	pushf  
  40ef44:	push   ecx
  40ef45:	dec    ecx
  40ef46:	mul    BYTE PTR ds:0xe6d27e19
  40ef4c:	push   ebx
  40ef4d:	push   eax
  40ef4e:	js     0x40efb4
  40ef50:	std    
  40ef51:	mov    dh,0x97
  40ef53:	dec    edi
  40ef54:	retf   
  40ef55:	adc    DWORD PTR [edi+0x57],esi
  40ef58:	push   ebx
  40ef59:	mov    ah,0x16
  40ef5b:	jg     0x40efc4
  40ef5d:	push   ss
  40ef5e:	aad    0x7d
  40ef60:	mov    bl,0x38
  40ef62:	push   eax
  40ef63:	mov    ch,0xda
  40ef65:	pop    edi
  40ef66:	pop    edx
  40ef67:	daa    
  40ef68:	in     al,dx
  40ef69:	inc    ebp
  40ef6a:	xchg   esi,eax
  40ef6b:	test   al,0xd7
  40ef6d:	lds    ecx,FWORD PTR [ecx]
  40ef6f:	push   edi
  40ef70:	mov    edi,0x810874ef
  40ef75:	mov    bl,0xbc
  40ef77:	pushf  
  40ef78:	mov    eax,0xc81521a0
  40ef7d:	cmp    BYTE PTR cs:[esi+0x13df4a93],0xef
  40ef85:	(bad)  
  40ef86:	inc    ebp
  40ef87:	fld    TBYTE PTR ss:[ebx+0x329ba3bc]
  40ef8e:	adc    al,0x63
  40ef90:	dec    edx
  40ef91:	jno    0x40ef6c
  40ef93:	inc    BYTE PTR [ebx+ecx*8+0x6]
  40ef97:	jmp    0xc865:0x8f17e6d7
  40ef9e:	sar    BYTE PTR [ecx+0x4fef34b2],1
  40efa4:	(bad)
  40efa7:	mov    cl,0x72
  40efa9:	mov    al,ds:0xea529ad6
  40efae:	sbb    eax,0xe53ab50b
  40efb3:	not    ebx
  40efb5:	in     al,0x88
  40efb7:	ds call 0xfc0b:0x8e6261c7
  40efbf:	cmp    ebx,DWORD PTR cs:[edi]
  40efc2:	in     al,0x45
  40efc4:	push   ebp
  40efc5:	sti    
  40efc6:	jnp    0x40efaa
  40efc8:	gs cs jns 0x40ef5e
  40efcc:	loop   0x40ef5d
  40efce:	inc    ebx
  40efcf:	xor    al,0x80
  40efd1:	lods   al,BYTE PTR ds:[esi]
  40efd2:	pop    ds
  40efd3:	cld    
  40efd4:	fwait
  40efd5:	cld    
  40efd6:	mov    ch,0x7f
  40efd8:	adc    ecx,0xcc19b70a
  40efde:	or     al,0x6c
  40efe0:	sub    al,0x99
  40efe2:	cmp    eax,DWORD PTR [edx+0x48]
  40efe5:	rcl    DWORD PTR ds:0xa53a1ee2,1
  40efeb:	mov    esi,DWORD PTR [ecx+eax*2]
  40efee:	test   eax,0xb71578f8
  40eff3:	jecxz  0x40efaf
  40eff5:	cmp    cl,dl
  40eff7:	sub    BYTE PTR [ecx],bl
  40eff9:	(bad)  
  40effa:	xchg   ebx,eax
  40effb:	or     dh,BYTE PTR [ebx]
  40effd:	mov    eax,DWORD PTR [eax]
  40efff:	test   DWORD PTR [bp+si+0x6bfd],eax
  40f004:	in     al,dx
  40f005:	push   ecx
  40f006:	push   ebp
  40f007:	xchg   edx,eax
  40f008:	lds    eax,FWORD PTR [edi-0x6e419551]
  40f00e:	add    edx,DWORD PTR ds:0xf7fc9de2
  40f014:	lods   al,BYTE PTR ds:[esi]
  40f015:	out    dx,eax
  40f016:	mov    esp,0xdb0ba241
  40f01b:	shl    ebx,cl
  40f01d:	dec    ebp
  40f01e:	mov    ecx,0xb00a9b8b
  40f023:	mov    ebx,DWORD PTR [edi+0x3d48902b]
  40f029:	aaa    
  40f02a:	(bad)  [edx]
  40f02c:	jmp    0xdedbd0d9
  40f031:	mov    ah,0x35
  40f033:	lahf   
  40f034:	shl    BYTE PTR [ebp+0x1d5a601f],cl
  40f03a:	xchg   ecx,eax
  40f03b:	mov    dh,0xa
  40f03d:	add    BYTE PTR [esi],bl
  40f03f:	dec    edx
  40f040:	les    ebp,FWORD PTR [esi]
  40f042:	mov    DWORD PTR [ebx+0x10],ebx
  40f045:	add    edi,DWORD PTR [eax-0x4ecc11af]
  40f04b:	imul   ecx,DWORD PTR [ebx],0xb633771b
  40f051:	push   ebp
  40f052:	gs sahf 
  40f054:	stc    
  40f055:	dec    ebx
  40f056:	and    al,0x39
  40f058:	pushf  
  40f059:	push   ecx
  40f05a:	sub    DWORD PTR [ebp-0x4e929c34],ebx
  40f060:	into   
  40f061:	stos   DWORD PTR es:[edi],eax
  40f062:	sub    edx,DWORD PTR [ebx]
  40f064:	cmc    
  40f065:	xor    ecx,ebp
  40f067:	cmp    esi,eax
  40f069:	mov    ds:0xec65625c,eax
  40f06e:	mov    edx,0xff59a6fe
  40f073:	call   0xaa4b:0xedbc15ba
  40f07a:	jge    0x40f096
  40f07c:	pop    edi
  40f07d:	into   
  40f07e:	mov    ds:0x29d9473d,al
  40f083:	sti    
  40f084:	mov    ebx,0xe940f2c1
  40f089:	in     al,dx
  40f08a:	dec    esp
  40f08b:	adc    al,0x32
  40f08d:	sub    esp,edi
  40f08f:	icebp  
  40f090:	gs jae 0x40f0cc
  40f093:	ss inc eax
  40f095:	mov    ah,0x40
  40f097:	test   eax,0x218ade24
  40f09c:	sbb    BYTE PTR [edi+esi*2-0x7e120c9a],al
  40f0a3:	cmp    eax,0xae2019ec
  40f0a8:	dec    DWORD PTR [edi+esi*4-0x6a569ebf]
  40f0af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f0b0:	(bad)  
  40f0b1:	adc    ebx,DWORD PTR [edi-0x3947d988]
  40f0b7:	xor    DWORD PTR [edi],ebp
  40f0b9:	js     0x40f072
  40f0bb:	popf   
  40f0bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f0bd:	sbb    BYTE PTR [eax],bl
  40f0bf:	push   cs
  40f0c0:	cmp    DWORD PTR [eax+0x7f2c7767],edx
  40f0c6:	pop    ebx
  40f0c7:	mov    al,bl
  40f0c9:	test   al,0x40
  40f0cb:	lea    edi,[ecx+eax*1-0x29d1cca6]
  40f0d2:	mov    dh,0x90
  40f0d4:	fwait
  40f0d5:	push   esi
  40f0d6:	jmp    0x9d68c02f
  40f0db:	or     DWORD PTR [edi],ebx
  40f0dd:	mov    ebp,0xd1d608df
  40f0e2:	jg     0x40f07f
  40f0e4:	hlt    
  40f0e5:	adc    dh,BYTE PTR [edi-0x48]
  40f0e8:	mov    DWORD PTR [eax],ebx
  40f0ea:	push   esi
  40f0eb:	in     al,dx
  40f0ec:	pop    edi
  40f0ed:	jne    0x40f07f
  40f0ef:	inc    esp
  40f0f0:	push   ebx
  40f0f1:	jbe    0x40f140
  40f0f3:	out    0x13,al
  40f0f5:	xchg   cl,al
  40f0f7:	dec    esi
  40f0f8:	ret    0x47c
  40f0fb:	fs push ecx
  40f0fd:	sbb    cl,al
  40f0ff:	jmp    0x40f140
  40f101:	fs push ebp
  40f103:	xchg   esp,eax
  40f104:	(bad)  [esi]
  40f106:	call   0x7361f9ca
  40f10b:	mov    WORD PTR [edx+0x6],?
  40f10e:	add    al,0x87
  40f110:	(bad)
  40f113:	and    al,0xe0
  40f115:	xor    al,0x71
  40f117:	(bad)  
  40f119:	retf   0xfeab
  40f11c:	mov    ecx,0x56773e65
  40f121:	lea    edi,[ebx-0x20]
  40f124:	push   ss
  40f125:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f126:	xor    ebx,esi
  40f128:	add    DWORD PTR ds:0x42a010,0x42d018
  40f132:	add    ebx,edi
  40f134:	and    DWORD PTR ds:0x42c008,0x0
  40f13e:	mov    eax,ds:0x42c008
  40f143:	inc    eax
  40f144:	mov    ds:0x42c008,eax
  40f149:	cmp    DWORD PTR ds:0x42c008,0xe
  40f150:	ja     0x40f191
  40f156:	jmp    0x40f16c
  40f15b:	push   DWORD PTR [ebp-0x28]
  40f15e:	push   0x7f19
  40f163:	push   DWORD PTR [ebp-0x28]
  40f166:	call   DWORD PTR ds:0x43004b
  40f16c:	cmp    DWORD PTR ds:0x42c008,0xd
  40f173:	jne    0x40f184
  40f179:	mov    eax,ds:0x42c008
  40f17e:	inc    eax
  40f17f:	mov    ds:0x42c008,eax
  40f184:	cmp    DWORD PTR ds:0x42c008,0x1b
  40f18b:	jb     0x40f13e
  40f191:	mov    eax,DWORD PTR [ebp-0x24]
  40f194:	sub    eax,edi
  40f196:	lea    ecx,[ebx-0x3272ec]
  40f19c:	mov    DWORD PTR ds:0x42d000,0x77e
  40f1a6:	xor    eax,esi
  40f1a8:	or     DWORD PTR ds:0x42b004,0x429020
  40f1b2:	xor    ecx,esi
  40f1b4:	mov    DWORD PTR ds:0x42c008,0x6bd4
  40f1be:	cmp    ecx,eax
  40f1c0:	mov    DWORD PTR ds:0x42901c,0x68e9
  40f1ca:	je     0x411851
  40f1d0:	and    DWORD PTR ds:0x42a01c,0x0
  40f1da:	xor    eax,eax
  40f1dc:	add    eax,DWORD PTR ds:0x42a01c
  40f1e2:	inc    eax
  40f1e3:	mov    ds:0x42a01c,eax
  40f1e8:	cmp    DWORD PTR ds:0x42a01c,0x13
  40f1ef:	jg     0x40f217
  40f1f5:	jmp    0x40f20a
  40f1fa:	push   0x42c004
  40f1ff:	push   0x42f169
  40f204:	call   DWORD PTR ds:0x43000b
  40f20a:	cmp    DWORD PTR ds:0x42a01c,0x12
  40f211:	jb     0x40f1da
  40f217:	mov    eax,DWORD PTR [ebp-0x4]
  40f21a:	xor    eax,esi
  40f21c:	sub    DWORD PTR ds:0x42d00c,0x11b5
  40f226:	add    eax,edi
  40f228:	cmp    ebx,eax
  40f22a:	jne    0x40f40e
  40f230:	push   DWORD PTR [ebp+0x8]
  40f233:	call   0x4247ed
  40f238:	mov    DWORD PTR [ebp-0x14],eax
  40f23b:	or     DWORD PTR ds:0x42c018,0xd46
  40f245:	mov    eax,DWORD PTR [ebp-0x4]
  40f248:	or     DWORD PTR ds:0x42d00c,ebx
  40f24e:	mov    ecx,DWORD PTR [ebp-0x14]
  40f251:	adc    DWORD PTR ds:0x429008,0x4a78
  40f25b:	xor    eax,esi
  40f25d:	xor    DWORD PTR ds:0x42b018,0x54c5
  40f267:	add    eax,edi
  40f269:	mov    DWORD PTR ds:0x42c00c,0x1824
  40f273:	cmp    ecx,eax
  40f275:	je     0x4118bc
  40f27b:	push   DWORD PTR [ebp-0x14]
  40f27e:	or     DWORD PTR ds:0x42b008,0x429004
  40f288:	push   DWORD PTR [ebp+0x8]
  40f28b:	and    DWORD PTR ds:0x42c008,0x42a014
  40f295:	call   0x4248bf
  40f29a:	dec    ecx
  40f29b:	mov    DWORD PTR [ebp-0x14],eax
  40f29e:	xor    DWORD PTR ds:0x42c004,ecx
  40f2a4:	mov    eax,DWORD PTR [ebp-0x4]
  40f2a7:	adc    DWORD PTR ds:0x42a008,edx
  40f2ad:	mov    ecx,DWORD PTR [ebp-0x14]
  40f2b0:	sub    DWORD PTR ds:0x42a010,0x429020
  40f2ba:	xor    eax,esi
  40f2bc:	adc    DWORD PTR ds:0x42a010,0x42901c
  40f2c6:	add    eax,edi
  40f2c8:	mov    DWORD PTR ds:0x42b008,0x358c
  40f2d2:	cmp    ecx,eax
  40f2d4:	mov    DWORD PTR ds:0x42a018,0x235e
  40f2de:	je     0x4118bc
  40f2e4:	xor    eax,ecx
  40f2e6:	mov    eax,DWORD PTR [ebp-0x14]
  40f2e9:	mov    eax,DWORD PTR [eax+0x18]
  40f2ec:	mov    DWORD PTR [ebp-0x24],eax
  40f2ef:	sub    DWORD PTR ds:0x42b000,0x5870
  40f2f9:	mov    eax,DWORD PTR [ebp-0x14]
  40f2fc:	movzx  ecx,WORD PTR ds:0x42a010
  40f303:	sbb    DWORD PTR ds:0x42c004,ecx
  40f309:	mov    ecx,DWORD PTR [ebp+0x8]
  40f30c:	add    ecx,DWORD PTR [eax+0x20]
  40f30f:	and    DWORD PTR ds:0x42b010,0x0
  40f319:	jmp    0x40f329
  40f31e:	mov    eax,ds:0x42b010
  40f323:	inc    eax
  40f324:	mov    ds:0x42b010,eax
  40f329:	cmp    DWORD PTR ds:0x42b010,0x15
  40f330:	jae    0x40f35d
  40f336:	cmp    DWORD PTR ds:0x42b010,0x1a
  40f33d:	jb     0x40f35d
  40f343:	jmp    0x40f358
  40f348:	push   0x42b01c
  40f34d:	push   0x6b11
  40f352:	call   DWORD PTR ds:0x43000f
  40f358:	jmp    0x40f31e
  40f35d:	mov    DWORD PTR [ebp-0x2c],ecx
  40f360:	xor    DWORD PTR ds:0x42a014,edi
  40f366:	mov    eax,DWORD PTR [ebp-0x14]
  40f369:	mov    DWORD PTR ds:0x42c014,0x19
  40f373:	cmp    DWORD PTR ds:0x42c014,0x0
  40f37a:	je     0x40f3c4
  40f380:	cmp    DWORD PTR ds:0x42c014,0x5
  40f387:	jbe    0x40f3c4
  40f38d:	jmp    0x40f398
  40f392:	call   DWORD PTR ds:0x430013
  40f398:	cmp    DWORD PTR ds:0x42c014,0x6
  40f39f:	jne    0x40f3b2
  40f3a5:	mov    ecx,DWORD PTR ds:0x42c014
  40f3ab:	dec    ecx
  40f3ac:	mov    DWORD PTR ds:0x42c014,ecx
  40f3b2:	mov    ecx,DWORD PTR ds:0x42c014
  40f3b8:	dec    ecx
  40f3b9:	mov    DWORD PTR ds:0x42c014,ecx
  40f3bf:	jmp    0x40f373
  40f3c4:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3c7:	inc    DWORD PTR ds:0x42a014
  40f3cd:	add    ecx,DWORD PTR [eax+0x24]
  40f3d0:	sbb    DWORD PTR ds:0x42d000,0x42b014
  40f3da:	mov    DWORD PTR [ebp-0x34],ecx
  40f3dd:	mov    eax,DWORD PTR [ebp-0x14]
  40f3e0:	mov    ecx,DWORD PTR ds:0x42c00c
  40f3e6:	sub    DWORD PTR ds:0x42a018,ecx
  40f3ec:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3ef:	sub    DWORD PTR ds:0x42c008,0x42b004
  40f3f9:	add    ecx,DWORD PTR [eax+0x1c]
  40f3fc:	mov    DWORD PTR [ebp-0x14],ecx
  40f3ff:	mov    DWORD PTR ds:0x42c01c,0x38b0
  40f409:	jmp    0x411884
  40f40e:	sub    DWORD PTR ds:0x42a000,ebx
  40f414:	mov    eax,DWORD PTR [ebp-0x2c]
  40f417:	mov    ecx,DWORD PTR ds:0x42e010
  40f41d:	mov    ecx,DWORD PTR [ecx]
  40f41f:	adc    DWORD PTR ds:0x42d014,ecx
  40f425:	mov    ecx,DWORD PTR [ebp+0x8]
  40f428:	and    DWORD PTR ds:0x42a000,0x732c
  40f432:	add    ecx,DWORD PTR [eax+ebx*4]
  40f435:	add    DWORD PTR ds:0x429018,ebx
  40f43b:	mov    DWORD PTR [ebp-0x28],ecx
  40f43e:	xor    DWORD PTR ds:0x42d00c,ecx
  40f444:	mov    eax,DWORD PTR [ebp-0x4]
  40f447:	and    DWORD PTR ds:0x42a010,0x0
  40f451:	jmp    0x40f463
  40f456:	mov    ecx,DWORD PTR ds:0x42a010
  40f45c:	inc    ecx
  40f45d:	mov    DWORD PTR ds:0x42a010,ecx
  40f463:	cmp    DWORD PTR ds:0x42a010,0x13
  40f46a:	jae    0x40f497
  40f470:	cmp    DWORD PTR ds:0x42a010,0x1c
  40f477:	jle    0x40f497
  40f47d:	jmp    0x40f492
  40f482:	push   0x42f181
  40f487:	push   0x0
  40f489:	push   DWORD PTR [ebp-0x18]
  40f48c:	call   DWORD PTR ds:0x430017
  40f492:	jmp    0x40f456
  40f497:	mov    ecx,DWORD PTR [ebp-0x28]
  40f49a:	and    DWORD PTR ds:0x42b000,0x42d018
  40f4a4:	xor    eax,esi
  40f4a6:	inc    DWORD PTR ds:0x42c000
  40f4ac:	add    eax,edi
  40f4ae:	cmp    ecx,eax
  40f4b0:	jmp    0x411846
  40f4b5:	push   esp
  40f4b6:	push   edx
  40f4b7:	or     eax,0x17250f6a
  40f4bc:	inc    esp
  40f4bd:	xor    ch,dh
  40f4bf:	xor    ebx,edi
  40f4c1:	mov    edi,0xce0efb4e
  40f4c6:	scas   eax,DWORD PTR es:[edi]
  40f4c7:	jp     0x40f543
  40f4c9:	add    eax,0xc57a7a5f
  40f4ce:	(bad)  [edi]
  40f4d0:	and    al,dl
  40f4d2:	mov    ?,esp
  40f4d4:	mov    edx,0x784af2a3
  40f4d9:	jmp    0x82e26673
  40f4de:	add    edx,esi
  40f4e0:	mov    dh,0x42
  40f4e2:	pop    edx
  40f4e3:	mov    esi,0x44219e03
  40f4e8:	xor    al,0xb
  40f4ea:	sti    
  40f4eb:	mov    edx,0x53e05666
  40f4f0:	mov    edi,0xf295c92a
  40f4f5:	jge    0x40f4a6
  40f4f7:	aaa    
  40f4f8:	xchg   DWORD PTR [ebp+eax*1+0x44],ebp
  40f4fc:	cs into 
  40f4fe:	test   DWORD PTR [edx+ecx*8-0x10158ea8],edi
  40f505:	(bad)  
  40f507:	pusha  
  40f508:	fisttp QWORD PTR [edi+0x5caeae68]
  40f50e:	jo     0x40f56f
  40f510:	adc    DWORD PTR [edi-0x5fabaa34],ebx
  40f516:	sti    
  40f517:	gs out dx,al
  40f519:	out    dx,al
  40f51a:	sti    
  40f51b:	rol    cl,1
  40f51d:	jl     0x40f4fe
  40f51f:	loop   0x40f4b1
  40f521:	mov    DWORD PTR [eax+edx*4+0x19],ecx
  40f525:	pop    eax
  40f527:	xor    edi,DWORD PTR [ebp+0x58]
  40f52a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f52b:	and    edi,esp
  40f52d:	fimul  DWORD PTR [edx-0x7f115e9f]
  40f533:	xchg   ebx,eax
  40f534:	cdq    
  40f535:	call   0x542235f1
  40f53a:	xchg   ebx,eax
  40f53b:	xor    eax,DWORD PTR [esi]
  40f53d:	in     al,0xd2
  40f53f:	jnp    0x40f56f
  40f541:	mov    bh,0xd2
  40f543:	pop    esi
  40f544:	cmp    eax,0x5ee64f4e
  40f549:	mov    bh,0x2a
  40f54b:	lds    edx,FWORD PTR [eax]
  40f54d:	inc    ecx
  40f54e:	inc    eax
  40f54f:	mov    esi,0xf73a561a
  40f554:	sbb    BYTE PTR [edi],ch
  40f556:	sub    ah,ah
  40f558:	xchg   edx,eax
  40f559:	or     eax,esi
  40f55b:	xor    ebp,DWORD PTR [esi+0x30]
  40f55e:	in     eax,0xfc
  40f560:	xor    BYTE PTR [edi],cl
  40f562:	push   0x65
  40f564:	mov    esp,DWORD PTR [ebx+0x79]
  40f567:	loopne 0x40f5b1
  40f569:	lods   al,BYTE PTR ds:[esi]
  40f56a:	pop    edi
  40f56b:	shr    bh,1
  40f56d:	inc    edi
  40f56e:	ret    0x7111
  40f571:	xchg   edi,eax
  40f572:	in     al,dx
  40f573:	pop    esp
  40f574:	mov    WORD PTR ds:0xfb068760,?
  40f57a:	xchg   BYTE PTR [esi+edx*1+0x19069ee],dl
  40f581:	mov    esp,DWORD PTR [edx+edx*8]
  40f584:	add    BYTE PTR [ebx+0x393a6b85],bl
  40f58a:	or     eax,DWORD PTR [edi+0x751b4b7c]
  40f590:	cld    
  40f591:	in     al,0xe7
  40f593:	jmp    FWORD PTR [ecx+0x48]
  40f596:	push   0x4f
  40f598:	mov    ah,0x79
  40f59a:	or     BYTE PTR [eax+0x78],cl
  40f59d:	mov    eax,ds:0x6d0c3378
  40f5a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f5a3:	adc    edx,DWORD PTR [edi+ebx*8]
  40f5a6:	xchg   ebx,eax
  40f5a7:	test   al,0x17
  40f5a9:	(bad)  
  40f5aa:	push   eax
  40f5ab:	dec    ebx
  40f5ac:	push   ebx
  40f5ad:	out    0x99,al
  40f5af:	jae    0x40f5a4
  40f5b1:	rcl    bh,1
  40f5b3:	xlat   BYTE PTR ds:[ebx]
  40f5b4:	pop    ebp
  40f5b6:	enter  0x22ac,0x5c
  40f5ba:	dec    ebx
  40f5bb:	pop    es
  40f5bc:	ja     0x40f546
  40f5be:	xchg   ecx,eax
  40f5bf:	scas   al,BYTE PTR es:[edi]
  40f5c0:	test   dh,ah
  40f5c2:	inc    esp
  40f5c3:	outs   dx,DWORD PTR ds:[esi]
  40f5c4:	pop    ebp
  40f5c5:	sbb    ecx,DWORD PTR [ecx+0x9]
  40f5c8:	mov    edi,0x2afcdccf
  40f5cd:	sbb    DWORD PTR [esp+edi*8+0x5b131233],eax
  40f5d4:	(bad)  
  40f5d5:	in     al,dx
  40f5d6:	call   0xbfb4f45b
  40f5db:	add    bl,BYTE PTR [esi+0x7d9f9c34]
  40f5e1:	jnp    0x40f585
  40f5e3:	daa    
  40f5e4:	gs pop ebx
  40f5e6:	mov    ah,0x52
  40f5e8:	mov    dh,0x36
  40f5ea:	aaa    
  40f5eb:	and    DWORD PTR [ecx-0x3],ecx
  40f5ee:	push   edi
  40f5ef:	pop    edi
  40f5f0:	bound  eax,QWORD PTR ds:0x5c53ee55
  40f5f6:	or     ah,BYTE PTR [esp+ecx*1-0x60]
  40f5fa:	shl    DWORD PTR [ebx+0x76],cl
  40f5fd:	call   FWORD PTR [eax+0x22d6e5c7]
  40f603:	dec    ebp
  40f604:	xor    BYTE PTR [eax],ah
  40f606:	(bad)  
  40f607:	or     eax,0x6df30793
  40f60c:	pop    ebp
  40f60d:	push   ebx
  40f60e:	aaa    
  40f60f:	das    
  40f610:	loopne 0x40f62d
  40f612:	test   al,0x6c
  40f614:	gs dec edi
  40f616:	pop    ss
  40f617:	adc    BYTE PTR [ebp+0x116d064],0xbb
  40f61e:	sti    
  40f61f:	xchg   DWORD PTR ds:0x852bcf52,edi
  40f625:	push   ebx
  40f626:	jbe    0x40f60c
  40f628:	bound  eax,QWORD PTR [eax]
  40f62a:	pop    ds
  40f62b:	(bad)  [edi]
  40f62d:	or     edi,esi
  40f62f:	fdiv   DWORD PTR [ecx-0x425e6858]
  40f635:	add    al,0x79
  40f637:	popa   
  40f638:	push   es
  40f639:	loop   0x40f5fd
  40f63b:	jae    0x40f6bc
  40f63d:	imul   edx,DWORD PTR [esi-0x1f41a3ca],0x2aa1c731
  40f647:	mov    esp,0xfe866161
  40f64c:	sti    
  40f64d:	xchg   esi,eax
  40f64e:	and    eax,0xb298de88
  40f653:	sbb    BYTE PTR ds:0x11111fb7,dh
  40f659:	idiv   DWORD PTR [edx+eiz*8+0x65]
  40f65d:	pop    ss
  40f65e:	adc    eax,0x9944efd5
  40f663:	sar    DWORD PTR [eax],1
  40f665:	add    DWORD PTR [ebp-0x7d],ecx
  40f668:	pop    esp
  40f669:	ds jmp 0x40f6ba
  40f66c:	or     al,0x40
  40f66e:	xor    al,0x94
  40f670:	out    dx,al
  40f671:	cmp    ebx,ebp
  40f673:	sub    al,0x5d
  40f675:	mov    edi,0xccd9e2df
  40f67a:	sti    
  40f67b:	mov    esi,DWORD PTR [esi-0x28557c45]
  40f681:	retf   
  40f682:	mov    ?,WORD PTR [esp+ecx*4+0x4bf7549]
  40f689:	hlt    
  40f68a:	std    
  40f68b:	jb     0x40f690
  40f68d:	push   0xdbc63ad8
  40f692:	or     eax,0x85d6dcfb
  40f697:	xchg   ebp,eax
  40f698:	push   esi
  40f699:	lods   eax,DWORD PTR ds:[esi]
  40f69a:	adc    BYTE PTR [edi-0x6a],cl
  40f69d:	sahf   
  40f69e:	and    edi,esi
  40f6a0:	mov    ecx,0x4508fda5
  40f6a5:	retf   0x3367
  40f6a8:	sti    
  40f6a9:	jecxz  0x40f6b7
  40f6ab:	arpl   WORD PTR [esi+ecx*8+0x302aa14a],sp
  40f6b2:	mov    WORD PTR [ebx-0x49],gs
  40f6b5:	jmp    0x40f680
  40f6b7:	mov    ch,0xcd
  40f6b9:	pop    esp
  40f6ba:	push   ss
  40f6bb:	mov    WORD PTR [edi+0x42799337],?
  40f6c1:	push   eax
  40f6c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f6c3:	data16 jmp 0x40f64a
  40f6c6:	mov    edi,0xc7dc1efd
  40f6cb:	and    DWORD PTR [esp+edi*2+0x1d],0xfffffffe
  40f6d0:	inc    ecx
  40f6d1:	inc    eax
  40f6d2:	xchg   edi,eax
  40f6d3:	mov    ebp,0xeb1b85ed
  40f6d8:	dec    eax
  40f6d9:	lea    edi,[eax]
  40f6db:	jg     0x40f722
  40f6dd:	ret    
  40f6de:	aas    
  40f6df:	aam    0x1b
  40f6e1:	dec    edi
  40f6e2:	cmp    ch,BYTE PTR [ecx]
  40f6e4:	jmp    0xca154f3b
  40f6e9:	jl     0x40f681
  40f6eb:	cmp    DWORD PTR [edi-0x3],ecx
  40f6ee:	mov    cl,0x2a
  40f6f0:	js     0x40f6d4
  40f6f2:	test   eax,0x2accb516
  40f6f7:	jne    0x40f73c
  40f6f9:	out    dx,eax
  40f6fa:	pop    edi
  40f6fb:	ror    DWORD PTR [edx+eax*2+0x7],1
  40f6ff:	inc    esp
  40f700:	out    0x71,eax
  40f702:	pop    ebp
  40f703:	mov    esi,0x5284fc4
  40f708:	fisubr WORD PTR [esi+esi*1-0x34ffc927]
  40f70f:	add    al,0x19
  40f711:	mov    BYTE PTR gs:[eax],cl
  40f714:	mov    ebx,0x7199398b
  40f719:	rcl    BYTE PTR [edx-0x62],cl
  40f71c:	ds ins DWORD PTR es:[edi],dx
  40f71e:	test   al,0xa7
  40f720:	ret    0x72e0
  40f723:	add    BYTE PTR [eax],cl
  40f725:	push   es
  40f726:	cmp    DWORD PTR [ecx-0x44],edx
  40f729:	popa   
  40f72a:	movhps QWORD PTR [ecx+0x77],xmm6
  40f72e:	das    
  40f72f:	cli    
  40f730:	add    al,0xab
  40f732:	sub    al,0xa0
  40f734:	inc    edx
  40f735:	push   esp
  40f736:	dec    ecx
  40f737:	sbb    eax,0xd34afa0e
  40f73c:	ret    0xf9da
  40f73f:	mov    dh,0x53
  40f741:	push   es
  40f742:	adc    DWORD PTR [edx+0x64],edx
  40f745:	xor    BYTE PTR [edx-0x11],bh
  40f748:	xchg   ebp,eax
  40f749:	jmp    0x40f72c
  40f74b:	adc    BYTE PTR [edx],ah
  40f74d:	xor    al,BYTE PTR [ecx-0x20]
  40f750:	jp     0x40f794
  40f752:	cwde   
  40f753:	loop   0x40f76b
  40f755:	sbb    BYTE PTR ds:0x90c1aaab,ah
  40f75b:	xchg   esp,eax
  40f75c:	cwde   
  40f75d:	or     cl,BYTE PTR [esi]
  40f75f:	retf   0xf919
  40f762:	frstor [edi-0x274741f3]
  40f768:	cli    
  40f769:	cs mov dl,bl
  40f76c:	popa   
  40f76d:	push   0xfffffff8
  40f76f:	pop    ebp
  40f770:	pop    eax
  40f771:	jno    0x40f7ed
  40f773:	(bad)  
  40f774:	(bad)  [edx+eax*4-0x39]
  40f778:	jae    0x40f7c3
  40f77a:	outs   dx,DWORD PTR ds:[esi]
  40f77b:	jl     0x40f731
  40f77d:	xor    esp,DWORD PTR [eax-0xf]
  40f780:	cmc    
  40f781:	sbb    bh,BYTE PTR [ecx-0x498e2601]
  40f787:	adc    bl,BYTE PTR [edx]
  40f789:	mov    edi,0x37eae088
  40f78e:	sub    BYTE PTR [ebp-0x23],bl
  40f791:	adc    eax,0x69d7e2ad
  40f796:	mov    ds:0x40ba7b75,al
  40f79b:	das    
  40f79c:	out    0x13,al
  40f79e:	push   es
  40f79f:	push   cs
  40f7a0:	mov    cl,0xc
  40f7a2:	scas   eax,DWORD PTR es:[edi]
  40f7a3:	mov    bl,0x6
  40f7a5:	sub    BYTE PTR [ecx+0x5c0821b8],bl
  40f7ab:	test   DWORD PTR [edx],edx
  40f7ad:	sbb    BYTE PTR [esi-0x4d296163],ah
  40f7b3:	push   ds
  40f7b4:	bound  esp,QWORD PTR [edi-0x38286378]
  40f7ba:	iret   
  40f7bb:	in     al,dx
  40f7bc:	pop    ds
  40f7bd:	leave  
  40f7be:	mov    cl,0x2a
  40f7c0:	bound  ebx,QWORD PTR [edi-0x941e5ef]
  40f7c6:	outs   dx,BYTE PTR ds:[esi]
  40f7c7:	into   
  40f7c8:	in     eax,0x3f
  40f7ca:	gs xchg edi,eax
  40f7cc:	loope  0x40f799
  40f7ce:	mov    ebx,0xde29d79f
  40f7d3:	or     bl,BYTE PTR [esi+0x7b138e38]
  40f7d9:	adc    BYTE PTR [edi],bh
  40f7db:	pop    es
  40f7dc:	push   es
  40f7dd:	lea    eax,[ebp-0xacdff1e]
  40f7e3:	test   DWORD PTR [eax],edx
  40f7e5:	mov    cl,0x39
  40f7e7:	cwde   
  40f7e8:	xchg   edi,eax
  40f7e9:	adc    al,0x78
  40f7eb:	(bad)  
  40f7ec:	frstor [ebx]
  40f7ee:	push   es
  40f7ef:	xor    eax,0xf5865ff3
  40f7f4:	fisub  WORD PTR [esi+eax*8-0x554ed574]
  40f7fb:	sub    BYTE PTR [edi],dh
  40f7fd:	sub    BYTE PTR [ebx],dl
  40f7ff:	fsub   DWORD PTR [eax-0x6c]
  40f802:	retf   
  40f803:	jne    0x40f874
  40f805:	mov    cl,0x4e
  40f807:	pop    es
  40f808:	gs cmp al,bh
  40f80b:	cs sub eax,0x2291e026
  40f811:	aaa    
  40f812:	pop    eax
  40f813:	pop    edx
  40f814:	mov    ecx,0xf085271
  40f819:	pop    ecx
  40f81a:	push   cs
  40f81b:	ss and al,0x13
  40f81e:	ins    DWORD PTR es:[edi],dx
  40f81f:	sub    edi,esi
  40f821:	jl     0x40f86c
  40f823:	adc    BYTE PTR [ecx+0x3156b8e9],bl
  40f829:	ds inc ecx
  40f82b:	jo     0x40f86a
  40f82d:	jno    0x40f7bb
  40f82f:	mov    ch,0x6
  40f831:	ficomp WORD PTR [ebx]
  40f833:	add    eax,DWORD PTR ds:0x165db713
  40f839:	sbb    al,0x49
  40f83b:	and    dl,BYTE PTR [ebp+0x1d]
  40f83e:	or     ch,BYTE PTR [ecx-0x7c2cad32]
  40f844:	xchg   esi,eax
  40f845:	sub    DWORD PTR [ecx],eax
  40f847:	mov    ah,0x36
  40f849:	pop    esi
  40f84a:	push   ecx
  40f84b:	inc    esp
  40f84c:	pop    es
  40f84d:	mov    edi,0x1820bedd
  40f852:	push   ss
  40f853:	je     0x40f84c
  40f855:	mov    ds:0xe357a27e,al
  40f85a:	jl     0x40f8d9
  40f85c:	ret    
  40f85d:	je     0x40f804
  40f85f:	popa   
  40f860:	mov    edi,0x5a648a31
  40f865:	test   esp,ebp
  40f867:	jo     0x40f869
  40f869:	push   edx
  40f86a:	bound  ebp,QWORD PTR [edx+0x7f]
  40f86d:	mov    bl,0xe1
  40f86f:	or     esp,DWORD PTR [edx-0x28]
  40f872:	std    
  40f873:	pop    edx
  40f874:	fs dec ebp
  40f876:	shl    ebx,1
  40f878:	mov    dl,bh
  40f87a:	data16 or bl,BYTE PTR [eax+0x11ea3d9c]
  40f881:	ss pop esi
  40f883:	outs   dx,DWORD PTR ds:[esi]
  40f884:	push   ss
  40f885:	daa    
  40f886:	cmp    ebp,DWORD PTR [ebx-0x42cfb4d4]
  40f88c:	xchg   ebx,eax
  40f88d:	and    BYTE PTR [esi+ebx*2+0x2ebb02a8],ch
  40f894:	inc    esp
  40f895:	and    al,0x9a
  40f897:	pop    esp
  40f898:	add    DWORD PTR ss:[esi-0x508208a1],edi
  40f89f:	cmovl  esp,ebp
  40f8a2:	sahf   
  40f8a3:	icebp  
  40f8a4:	mov    bl,0xd3
  40f8a6:	dec    esp
  40f8a7:	jmp    0xe7d:0x81f24856
  40f8ae:	bound  ebx,QWORD PTR [eax]
  40f8b0:	lock jecxz 0x40f8fd
  40f8b3:	mov    ss,edi
  40f8b5:	sar    DWORD PTR [ecx-0x9],cl
  40f8b8:	into   
  40f8b9:	imul   ah
  40f8bb:	mov    ss,WORD PTR [ebx+esi*1-0xdfdad33]
  40f8c2:	shl    DWORD PTR [edx],cl
  40f8c4:	xor    BYTE PTR [esi+0x5a],dh
  40f8c7:	mov    gs,eax
  40f8c9:	(bad)  
  40f8ca:	dec    esi
  40f8cb:	aaa    
  40f8cc:	outs   dx,BYTE PTR ds:[esi]
  40f8cd:	pop    ds
  40f8ce:	or     DWORD PTR [ebp+0xa17ba6f],0xffffffbf
  40f8d5:	mov    DWORD PTR [ecx+ebx*1],esp
  40f8d8:	mov    ebp,0xa8b06a55
  40f8dd:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  40f8df:	nop
  40f8e0:	(bad)  
  40f8e1:	push   ds
  40f8e2:	jmp    0x82c0d3d
  40f8e7:	pusha  
  40f8e8:	std    
  40f8e9:	jnp    0x40f89b
  40f8eb:	xchg   edx,eax
  40f8ec:	lea    ebx,[edx-0x61]
  40f8ef:	int    0x92
  40f8f1:	stos   BYTE PTR es:[edi],al
  40f8f2:	fmul   DWORD PTR [eax-0x3e]
  40f8f5:	fild   DWORD PTR [ecx+0x7c329a0e]
  40f8fb:	jbe    0x40f95d
  40f8fd:	test   DWORD PTR [edi],eax
  40f8ff:	push   esp
  40f900:	dec    edx
  40f901:	mov    eax,0x3ac43c
  40f906:	xor    DWORD PTR [edx],eax
  40f908:	ja     0x40f8ff
  40f90a:	jecxz  0x40f978
  40f90c:	push   es
  40f90d:	(bad)  
  40f90e:	mov    eax,DWORD PTR [ebp+eax*1-0x53b349d2]
  40f915:	daa    
  40f916:	jns    0x40f8ad
  40f918:	or     ecx,DWORD PTR [eax+0x2763a2f2]
  40f91e:	push   edi
  40f91f:	add    al,BYTE PTR [ecx+0x3]
  40f922:	fwait
  40f923:	cld    
  40f924:	out    dx,eax
  40f925:	and    ch,BYTE PTR [esi-0x5fef5710]
  40f92b:	call   0xf20ab6dc
  40f930:	adc    bh,BYTE PTR [ecx-0x35]
  40f933:	cdq    
  40f934:	in     eax,0x68
  40f936:	xchg   ebp,eax
  40f937:	rcr    esi,cl
  40f939:	jge    0x40f991
  40f93b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f93c:	cmp    al,0xb3
  40f93e:	mov    al,0x3e
  40f940:	aam    0x1
  40f942:	xchg   ebp,eax
  40f943:	mov    ah,0x2a
  40f945:	ja     0x40f91b
  40f947:	test   eax,0x3d856745
  40f94c:	jl     0x40f8de
  40f94e:	fsin   
  40f950:	jne    0x40f930
  40f952:	and    dh,BYTE PTR [eax+0x3f067a9f]
  40f958:	rcr    dh,0x51
  40f95b:	xchg   DWORD PTR [ebp+0x5],eax
  40f95e:	push   ebp
  40f95f:	inc    ecx
  40f960:	fidivr DWORD PTR [edx+0x4473b0b3]
  40f966:	or     BYTE PTR [eax+0x3b],0x57
  40f96a:	aam    0x1b
  40f96c:	rcr    edi,0x27
  40f96f:	inc    eax
  40f970:	pop    eax
  40f971:	ss pop eax
  40f973:	mov    ds:0x3a9e415d,al
  40f978:	or     al,0xe0
  40f97a:	repz sub BYTE PTR ds:[edi-0x16efc1a9],0x75
  40f983:	xchg   esi,eax
  40f984:	bound  eax,QWORD PTR [eax]
  40f986:	mov    esi,0xf8edfe07
  40f98b:	jge    0x40f9e1
  40f98d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f98e:	hlt    
  40f98f:	adc    DWORD PTR ds:0x3edd149a,eax
  40f995:	lods   al,BYTE PTR ds:[esi]
  40f996:	or     esp,edi
  40f998:	outs   dx,BYTE PTR ds:[esi]
  40f999:	jo     0x40f9e0
  40f99b:	and    bl,BYTE PTR [ecx+0x749f2939]
  40f9a1:	imul   esi,DWORD PTR [esp+edx*2+0x55d184a7],0xa9cff6d6
  40f9ac:	(bad)  
  40f9ad:	xchg   ebp,eax
  40f9ae:	cmp    eax,0xb7d7d2d
  40f9b3:	popf   
  40f9b4:	pop    ecx
  40f9b5:	xor    al,BYTE PTR [eax]
  40f9b7:	pop    ds
  40f9b8:	sbb    ebp,DWORD PTR [ebx-0x112daa95]
  40f9be:	pusha  
  40f9bf:	pop    edx
  40f9c0:	repz adc DWORD PTR es:[eax+0x4d73469],ebx
  40f9c8:	aam    0x50
  40f9ca:	jmp    0xa4b9:0xc3cedd16
  40f9d1:	mov    eax,0x5a1b9880
  40f9d6:	aad    0x69
  40f9d8:	jae    0x40f98a
  40f9da:	jmp    0x40f9ef
  40f9dc:	cmp    al,0xb0
  40f9de:	add    al,0x70
  40f9e0:	xor    DWORD PTR [eax+0x14],0xffffff81
  40f9e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f9e5:	mov    esi,0x2cddb525
  40f9ea:	arpl   bp,cx
  40f9ec:	mov    esi,0x6fb6911a
  40f9f1:	es (bad) 
  40f9f3:	cli    
  40f9f4:	aas    
  40f9f5:	cwde   
  40f9f6:	mov    ebx,DWORD PTR [edi]
  40f9f8:	call   0x247b:0xb8bc7ecd
  40f9ff:	out    dx,al
  40fa00:	sbb    edx,DWORD PTR [ecx-0xd]
  40fa03:	pusha  
  40fa04:	dec    ebx
  40fa05:	mov    ah,0x8e
  40fa07:	jns    0x40f9d1
  40fa09:	xchg   esp,eax
  40fa0a:	cld    
  40fa0b:	shl    BYTE PTR [esi],0x90
  40fa0e:	outs   dx,DWORD PTR ds:[esi]
  40fa0f:	add    eax,DWORD PTR [ebx-0x76]
  40fa12:	stc    
  40fa13:	jge    0x40f9ba
  40fa15:	push   ebx
  40fa16:	js     0x40fa03
  40fa18:	out    0xbe,eax
  40fa1a:	pop    ebx
  40fa1b:	hlt    
  40fa1c:	jecxz  0x40f9e7
  40fa1e:	mov    ebx,cs
  40fa20:	retf   
  40fa21:	xor    bl,BYTE PTR [esi-0x46]
  40fa24:	sbb    edx,esp
  40fa26:	jmp    0x40fa72
  40fa28:	mov    edi,0xdc8adb4d
  40fa2d:	out    0x35,eax
  40fa2f:	pop    esp
  40fa30:	push   eax
  40fa31:	cmp    bl,BYTE PTR [ebx-0xc213a70]
  40fa37:	jne    0x40fa5c
  40fa39:	popw   ss
  40fa3b:	add    al,0x19
  40fa3d:	mov    al,0xcc
  40fa3f:	adc    ch,BYTE PTR [edx+0x73]
  40fa42:	js     0x40faa2
  40fa44:	pushf  
  40fa45:	pop    eax
  40fa46:	call   0x8af5:0x24f55916
  40fa4d:	push   ebp
  40fa4e:	sub    esp,esp
  40fa50:	lds    esi,FWORD PTR [ebx]
  40fa52:	push   edx
  40fa53:	test   DWORD PTR [ecx+0x3b],ecx
  40fa56:	add    eax,0xb5f1f7e8
  40fa5b:	push   ecx
  40fa5c:	enter  0x5894,0x68
  40fa60:	out    dx,al
  40fa61:	loop   0x40fadf
  40fa63:	and    DWORD PTR [ebx-0x68],edi
  40fa66:	or     eax,0x277875f1
  40fa6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa6c:	rol    BYTE PTR gs:[esi-0x3e],cl
  40fa70:	call   0xd47f2a98
  40fa75:	mov    eax,0x9d8695e7
  40fa7a:	enter  0x3d49,0x8e
  40fa7e:	lahf   
  40fa7f:	mov    gs,WORD PTR [ebx]
  40fa81:	daa    
  40fa82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa83:	sar    BYTE PTR [eax+0x332a8ac],1
  40fa89:	jno    0x40fa1e
  40fa8b:	aam    0xe4
  40fa8d:	jne    0x40fa3e
  40fa8f:	test   al,0x9
  40fa91:	and    al,0xc5
  40fa93:	and    ebp,ebp
  40fa95:	pop    esi
  40fa96:	pusha  
  40fa97:	or     DWORD PTR [eax+0x45fd6ee6],esp
  40fa9d:	xchg   edx,eax
  40fa9e:	push   ebx
  40fa9f:	test   al,0x26
  40faa1:	inc    ecx
  40faa2:	scas   al,BYTE PTR es:[edi]
  40faa3:	inc    eax
  40faa4:	loope  0x40fa8f
  40faa6:	jo     0x40fafe
  40faa8:	int    0x39
  40faaa:	or     DWORD PTR [edi+edi*4+0x73b3c688],edx
  40fab1:	mov    cl,0x22
  40fab3:	retf   0x6a63
  40fab6:	lds    ebx,FWORD PTR [edx+0x5c]
  40fab9:	hlt    
  40faba:	lds    esi,FWORD PTR [ecx+0x6d]
  40fabd:	mov    WORD PTR [edx+0x47],ss
  40fac0:	sbb    bl,BYTE PTR [edx+0x4f]
  40fac3:	mov    ecx,0x72e6c29d
  40fac8:	add    bh,BYTE PTR [eax-0x11]
  40facb:	inc    eax
  40facc:	imul   eax,DWORD PTR [edx],0x26b4d4f
  40fad2:	scas   eax,DWORD PTR es:[edi]
  40fad3:	jmp    0x6367:0xabb26560
  40fada:	pop    DWORD PTR [ebx-0x49]
  40fadd:	mov    ch,0x3f
  40fadf:	(bad)
  40fae2:	out    0xe1,eax
  40fae4:	push   edi
  40fae5:	dec    ebx
  40fae6:	jmp    0x4d1e:0xacfbec4d
  40faed:	cmp    al,BYTE PTR [ebx-0x15aa071]
  40faf3:	or     BYTE PTR [edx+0x71725433],0x56
  40fafa:	push   es
  40fafb:	loope  0x40fb0a
  40fafd:	push   0xb6137055
  40fb02:	(bad)  
  40fb03:	test   DWORD PTR [ebx-0x4fb219ae],0xf530b42c
  40fb0d:	dec    edx
  40fb0e:	in     al,dx
  40fb0f:	mov    BYTE PTR [ecx],ch
  40fb11:	mov    esp,0x7d048821
  40fb16:	jl     0x40fab9
  40fb18:	or     edx,eax
  40fb1a:	popa   
  40fb1b:	jge    0x40fb47
  40fb1d:	or     ebp,DWORD PTR [ecx-0x374b7d58]
  40fb23:	xchg   ebp,eax
  40fb24:	nop
  40fb25:	or     ecx,DWORD PTR [eax+0x7c781309]
  40fb2b:	xor    BYTE PTR [edi+ebx*2-0x1c],ch
  40fb2f:	mov    bl,0x1e
  40fb31:	pop    esp
  40fb32:	cmp    edx,esi
  40fb34:	or     BYTE PTR [ebx],bl
  40fb36:	stos   BYTE PTR es:[edi],al
  40fb37:	cwde   
  40fb38:	test   al,0x1f
  40fb3a:	(bad)  
  40fb3b:	(bad)  
  40fb3c:	push   ecx
  40fb3d:	inc    eax
  40fb3e:	clc    
  40fb3f:	dec    edi
  40fb40:	out    dx,al
  40fb41:	cmc    
  40fb42:	dec    esp
  40fb43:	pop    es
  40fb44:	sub    DWORD PTR [ecx],ebp
  40fb46:	sbb    bh,BYTE PTR [esi-0x66404b7e]
  40fb4c:	shr    DWORD PTR [ecx+eiz*4+0x36],cl
  40fb50:	dec    eax
  40fb51:	add    al,BYTE PTR [eax+edx*1+0x46]
  40fb55:	ja     0x40fae9
  40fb57:	fbld   TBYTE PTR [esi+0x116a3a29]
  40fb5d:	push   edi
  40fb5e:	push   0x7dc78277
  40fb63:	ss inc esi
  40fb65:	(bad)  
  40fb66:	loope  0x40fb1b
  40fb68:	mov    eax,0x1dfe92d7
  40fb6d:	int    0x24
  40fb6f:	or     dh,bh
  40fb71:	es out dx,al
  40fb73:	mov    ds:0xb27314d0,eax
  40fb78:	lahf   
  40fb79:	add    al,0x5b
  40fb7b:	shr    DWORD PTR [esp+eax*8-0x4b],0x77
  40fb80:	retf   0xfe9
  40fb83:	add    cl,bh
  40fb85:	jg     0x40fb37
  40fb87:	inc    ebp
  40fb88:	dec    ebx
  40fb89:	enter  0x3f12,0x7f
  40fb8d:	push   ecx
  40fb8e:	add    al,0x28
  40fb90:	pop    edx
  40fb91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb92:	mov    cl,0xb7
  40fb94:	out    0xbf,al
  40fb96:	sbb    eax,0x10c21827
  40fb9b:	sbb    eax,0x93626b0f
  40fba0:	add    DWORD PTR [ebx+0x198198a7],ecx
  40fba6:	dec    ebp
  40fba7:	xor    eax,0x642eacf5
  40fbac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fbad:	repnz in eax,dx
  40fbaf:	sahf   
  40fbb0:	fwait
  40fbb1:	das    
  40fbb2:	stc    
  40fbb3:	adc    al,0x81
  40fbb5:	sub    bh,BYTE PTR [eax+0x7b0f2168]
  40fbbb:	sbb    al,BYTE PTR [edx-0x46]
  40fbbe:	mov    esi,0xa6867a57
  40fbc3:	std    
  40fbc4:	add    BYTE PTR [esi+0x41],ah
  40fbc7:	(bad)  
  40fbc8:	int    0x43
  40fbca:	inc    edi
  40fbcb:	out    0xa7,al
  40fbcd:	leave  
  40fbce:	pop    eax
  40fbcf:	lods   eax,DWORD PTR ds:[esi]
  40fbd0:	ja     0x40fbd4
  40fbd2:	mov    ebx,0x1d27f66a
  40fbd7:	cmp    al,0x11
  40fbd9:	jne    0x40fbbb
  40fbdb:	jmp    0xb81ae4b8
  40fbe0:	mov    ebx,0xcd80838b
  40fbe5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fbe6:	(bad)  
  40fbe7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fbe8:	pusha  
  40fbe9:	cld    
  40fbea:	ins    DWORD PTR es:[edi],dx
  40fbeb:	dec    ebx
  40fbec:	mov    ch,0x4d
  40fbee:	or     DWORD PTR [eax-0x4ce8fa77],eax
  40fbf4:	inc    edi
  40fbf5:	ror    esp,cl
  40fbf7:	mov    ebx,0xd1b87bc2
  40fbfc:	call   FWORD PTR [ecx+ebp*8-0x6b0308e5]
  40fc03:	pop    eax
  40fc04:	retf   0x9d46
  40fc07:	cmp    al,0x36
  40fc09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc0a:	in     eax,0x33
  40fc0c:	std    
  40fc0d:	sbb    DWORD PTR [ebp+ebp*8+0x7b158865],0xffffffe6
  40fc15:	pop    edi
  40fc16:	cmp    ecx,DWORD PTR [eax-0x2bdc02c8]
  40fc1c:	test   ch,0xa8
  40fc1f:	push   esp
  40fc20:	test   BYTE PTR [esi-0x38],bh
  40fc23:	call   0x974b:0xdb25ce43
  40fc2a:	out    0xed,eax
  40fc2c:	dec    eax
  40fc2d:	fwait
  40fc2e:	jno    0x40fc5a
  40fc30:	icebp  
  40fc31:	int3   
  40fc32:	mov    ebp,ss
  40fc34:	(bad)  
  40fc35:	retf   0xd8a4
  40fc38:	jmp    0x457f:0x20a1646c
  40fc3f:	mov    ah,0xb0
  40fc41:	(bad)  
  40fc43:	dec    ebx
  40fc44:	(bad)  
  40fc45:	std    
  40fc46:	mov    ch,dl
  40fc48:	push   0x2dfbd9c9
  40fc4d:	jne    0x40fc5b
  40fc4f:	xor    al,0x5b
  40fc51:	lea    esp,[edx-0x1cbd9d3]
  40fc57:	or     eax,0xd00b0a04
  40fc5c:	les    ebx,FWORD PTR [edx]
  40fc5e:	fidiv  DWORD PTR gs:[ebx+0x43782848]
  40fc65:	sbb    DWORD PTR [ebp+0xf],esi
  40fc68:	enter  0x94d3,0xee
  40fc6c:	aad    0xd9
  40fc6e:	pop    ebx
  40fc6f:	dec    edx
  40fc70:	cmp    ebx,DWORD PTR [ebp-0x79c5410]
  40fc76:	cwde   
  40fc77:	mov    cl,0x2d
  40fc79:	dec    ecx
  40fc7a:	daa    
  40fc7b:	dec    esp
  40fc7c:	in     al,0x1
  40fc7e:	dec    ebx
  40fc7f:	adc    bl,dh
  40fc81:	call   0xf3ab66d7
  40fc86:	loopne 0x40fc98
  40fc88:	or     BYTE PTR [ecx+0x73a4106c],dl
  40fc8e:	push   0x2d7e81d4
  40fc93:	imul   cx,WORD PTR [ebx+0x31],0x8f4e
  40fc99:	and    eax,0xf4309603
  40fc9e:	sbb    BYTE PTR [edx],ah
  40fca0:	retf   0x828
  40fca3:	xor    DWORD PTR [eax-0x1440b3f],0xd6b4585c
  40fcad:	loopne 0x40fc6b
  40fcaf:	add    DWORD PTR [edi],ebx
  40fcb1:	nop/reserved BYTE PTR [eax]
  40fcb4:	(bad)  
  40fcb6:	cdq    
  40fcb7:	sbb    esi,esp
  40fcb9:	xchg   ebp,eax
  40fcba:	stc    
  40fcbb:	fwait
  40fcbc:	pop    ebp
  40fcbd:	ret    0x18b9
  40fcc0:	test   BYTE PTR [eax],ch
  40fcc2:	pop    edi
  40fcc3:	test   eax,0x106dd85b
  40fcc8:	xchg   ecx,eax
  40fcc9:	mov    BYTE PTR [edx],dl
  40fccb:	in     al,dx
  40fccc:	xor    DWORD PTR [ebx-0x3e],edi
  40fccf:	pop    esi
  40fcd0:	push   esp
  40fcd1:	int3   
  40fcd2:	inc    ebp
  40fcd3:	out    0xc8,eax
  40fcd5:	(bad)  [eax+ebx*2]
  40fcd8:	shr    DWORD PTR [esi+0x11c79254],cl
  40fcde:	frstor [edi+eiz*4+0x18]
  40fce2:	aam    0x6d
  40fce4:	jbe    0x40fcf2
  40fce6:	jae    0x40fd4f
  40fce8:	mov    al,0x8
  40fcea:	inc    esi
  40fceb:	pop    ecx
  40fcec:	and    al,0x5e
  40fcee:	dec    esp
  40fcef:	test   al,0x9f
  40fcf1:	enter  0x5c6d,0xa8
  40fcf5:	mov    eax,0x9ef65f98
  40fcfa:	std    
  40fcfb:	mov    eax,ds:0x450a6772
  40fd00:	in     eax,0x23
  40fd02:	adc    eax,0x29e77039
  40fd07:	cdq    
  40fd08:	pop    DWORD PTR [edx]
  40fd0a:	and    DWORD PTR [ecx-0x83130f5],esp
  40fd10:	outs   dx,BYTE PTR ds:[esi]
  40fd11:	push   ecx
  40fd12:	outs   dx,BYTE PTR ds:[esi]
  40fd13:	xchg   ecx,eax
  40fd14:	shl    BYTE PTR [ebx-0x30811e9d],cl
  40fd1a:	ins    BYTE PTR es:[edi],dx
  40fd1b:	sbb    bl,BYTE PTR [edx]
  40fd1d:	shl    BYTE PTR [esi+0x79],cl
  40fd20:	es sbb eax,0xa6027510
  40fd26:	xchg   edx,eax
  40fd27:	xchg   edx,eax
  40fd28:	adc    eax,0x2c79e789
  40fd2d:	fidiv  WORD PTR [edi+0x1a725064]
  40fd33:	hlt    
  40fd34:	mov    ecx,0x1a7df403
  40fd39:	retf   
  40fd3a:	mov    dh,0x51
  40fd3c:	add    al,0x90
  40fd3e:	das    
  40fd3f:	jl     0x40fd4e
  40fd41:	push   ss
  40fd42:	xchg   esp,eax
  40fd43:	(bad)  
  40fd44:	sbb    al,0xf0
  40fd46:	in     eax,0x55
  40fd48:	arpl   WORD PTR [ebx-0x18],bx
  40fd4b:	in     al,0x86
  40fd4d:	mov    ecx,0xdcd5df73
  40fd52:	mov    eax,0xce46cefa
  40fd57:	sub    ecx,DWORD PTR [eax]
  40fd59:	dec    esi
  40fd5a:	sbb    ch,BYTE PTR [ecx+0x5d019990]
  40fd60:	hlt    
  40fd61:	imul   ebx,DWORD PTR [eax+esi*8+0x34b3c20c],0x39a752fd
  40fd6c:	push   0xb007fa55
  40fd71:	cmp    eax,0xd21c6d4e
  40fd76:	add    esi,DWORD PTR [eax+0x7292d5e6]
  40fd7c:	stos   BYTE PTR es:[edi],al
  40fd7d:	cmp    al,0x6f
  40fd7f:	(bad)  
  40fd80:	mov    fs,WORD PTR [ecx]
  40fd82:	sub    edx,DWORD PTR ds:0xe699e2e7
  40fd88:	mov    al,0x7d
  40fd8a:	push   0xa52f6926
  40fd8f:	retf   0x357e
  40fd92:	jmp    0x40fd5b
  40fd94:	xlat   BYTE PTR cs:[ebx]
  40fd96:	inc    ebx
  40fd97:	sahf   
  40fd98:	jo     0x40fda8
  40fd9a:	jl     0x40fdc5
  40fd9c:	xchg   esp,eax
  40fd9d:	cmp    eax,0x586f9a48
  40fda2:	jg     0x40fe1b
  40fda4:	ins    BYTE PTR es:[edi],dx
  40fda5:	pop    esp
  40fda6:	fbld   TBYTE PTR [esi]
  40fda8:	xchg   edi,eax
  40fda9:	adc    esp,esi
  40fdab:	aam    0x7a
  40fdad:	adc    al,0xac
  40fdaf:	inc    esp
  40fdb0:	and    eax,0x64fc4cb0
  40fdb5:	retf   0x41b8
  40fdb8:	and    edx,DWORD PTR [edi+0x45]
  40fdbb:	jmp    0x40fdfb
  40fdbd:	das    
  40fdbe:	ret    0x44be
  40fdc1:	adc    esi,ebx
  40fdc3:	call   0x8d53:0x533ba3fe
  40fdca:	(bad)  
  40fdcc:	mov    esi,0x52d036f0
  40fdd1:	jg     0x40fde6
  40fdd3:	pop    esp
  40fdd4:	(bad)  
  40fdd5:	jnp    0x40fd83
  40fdd7:	ret    
  40fdd8:	in     al,dx
  40fdd9:	test   al,0xa2
  40fddb:	inc    BYTE PTR [ecx-0x6c]
  40fdde:	rcr    DWORD PTR ds:0x522be28e,1
  40fde4:	cwde   
  40fde5:	inc    ebx
  40fde6:	fxch   st(1)
  40fde8:	mov    DWORD PTR [ebx+0x3b],esi
  40fdeb:	xchg   ebx,eax
  40fdec:	jecxz  0x40fdd6
  40fdee:	or     al,dl
  40fdf0:	sub    al,0x9
  40fdf2:	cli    
  40fdf3:	std    
  40fdf4:	stos   BYTE PTR es:[edi],al
  40fdf5:	adc    DWORD PTR [edi+ecx*2+0x2e0d5165],edx
  40fdfc:	push   edx
  40fdfd:	jbe    0x40fd97
  40fdff:	push   edx
  40fe00:	out    dx,al
  40fe01:	sub    BYTE PTR [edx],bh
  40fe03:	or     DWORD PTR [eax],edx
  40fe05:	pop    edi
  40fe06:	sti    
  40fe07:	inc    esi
  40fe08:	lea    esp,ds:0xbb42c36c
  40fe0e:	mov    BYTE PTR [edi-0x1cc7a160],bh
  40fe14:	or     eax,0xa6e74a05
  40fe19:	push   cs
  40fe1a:	call   0xa591:0x34c0f476
  40fe21:	into   
  40fe22:	dec    ebx
  40fe23:	ds out dx,eax
  40fe25:	mov    esi,0xa60cf74c
  40fe2a:	stos   DWORD PTR es:[edi],eax
  40fe2b:	mov    eax,0xdacad899
  40fe30:	stc    
  40fe31:	out    dx,eax
  40fe32:	mov    ds:0xfc1d2ee3,al
  40fe37:	dec    esp
  40fe38:	(bad)  [edx+0x39]
  40fe3b:	inc    edx
  40fe3c:	xlat   BYTE PTR ds:[ebx]
  40fe3d:	mov    cl,0x5d
  40fe3f:	cmp    eax,0x727364e6
  40fe45:	or     DWORD PTR [ecx-0x14],eax
  40fe48:	or     DWORD PTR [edi+0x690ad137],eax
  40fe4e:	and    bh,BYTE PTR [eax-0x57]
  40fe51:	or     al,0x5e
  40fe53:	xchg   esp,eax
  40fe54:	cdq    
  40fe55:	mov    bl,0x3e
  40fe57:	(bad)  
  40fe58:	cmp    al,0x1d
  40fe5a:	mov    bl,0xc6
  40fe5c:	outs   dx,BYTE PTR ds:[esi]
  40fe5d:	loop   0x40fe83
  40fe5f:	push   es
  40fe60:	cwde   
  40fe61:	mov    cl,0x16
  40fe63:	rsqrtps xmm7,XMMWORD PTR [ecx+0x78c26ee7]
  40fe6a:	push   ds
  40fe6b:	push   0xa02b5a6e
  40fe70:	and    BYTE PTR [eax+0x6d],ch
  40fe73:	xchg   esp,eax
  40fe74:	sti    
  40fe75:	xor    DWORD PTR [ebp+0x45],esi
  40fe78:	ins    DWORD PTR es:[edi],dx
  40fe79:	sbb    eax,0xce61a61e
  40fe7e:	out    0x41,al
  40fe80:	push   cs
  40fe81:	rcl    BYTE PTR [ebp+0x66b11e02],1
  40fe87:	mov    ah,0xf2
  40fe89:	in     eax,dx
  40fe8a:	jns    0x40fe0e
  40fe8c:	dec    ah
  40fe8e:	ret    0x3c44
  40fe91:	int3   
  40fe92:	cs xchg esp,eax
  40fe94:	dec    esp
  40fe95:	mov    BYTE PTR [bx+si+0x7736],cl
  40fe9a:	adc    BYTE PTR [eax-0x1a],bl
  40fe9d:	(bad)  
  40fe9e:	mov    WORD PTR [edi],ss
  40fea0:	jge    0x40fece
  40fea2:	outs   dx,DWORD PTR ds:[esi]
  40fea3:	daa    
  40fea4:	scas   al,BYTE PTR es:[edi]
  40fea5:	ins    BYTE PTR es:[edi],dx
  40fea6:	repnz retf 
  40fea8:	dec    ecx
  40fea9:	pop    edx
  40feaa:	mov    eax,ds:0x9231d561
  40feaf:	sub    ah,BYTE PTR ds:0x591c347a
  40feb5:	les    ebx,FWORD PTR [ebx+edi*4+0x7]
  40feb9:	neg    BYTE PTR ds:0x38774e45
  40febf:	ins    BYTE PTR es:[edi],dx
  40fec0:	xchg   ebp,eax
  40fec1:	add    DWORD PTR [ebx+0x5a],0xffffff83
  40fec5:	fnstsw WORD PTR [edx]
  40fec7:	shr    DWORD PTR [edx+0x51],cl
  40feca:	data16 adc al,0x3e
  40fecd:	and    BYTE PTR [edi+0x10],dh
  40fed0:	scas   al,BYTE PTR es:[edi]
  40fed1:	or     DWORD PTR ss:[edx-0x16],edi
  40fed5:	aam    0x4a
  40fed7:	dec    edx
  40fed8:	(bad)
  40fedb:	adc    BYTE PTR [eax+ebp*2],bl
  40fede:	mov    al,0xb8
  40fee0:	call   DWORD PTR [ebp+0x6147a24a]
  40fee6:	and    al,0xe6
  40fee8:	nop
  40fee9:	push   eax
  40feea:	sbb    edi,esp
  40feec:	or     bh,bl
  40feee:	clc    
  40feef:	fnstenv [edi+0x79]
  40fef2:	lods   al,BYTE PTR ds:[esi]
  40fef3:	mov    ebp,0x9b6c1b11
  40fef8:	imul   edi,DWORD PTR [edi+ebx*2+0x49],0x7b
  40fefd:	jne    0x40ff27
  40feff:	cwde   
  40ff00:	pusha  
  40ff01:	push   0xffffffae
  40ff03:	mov    fs,WORD PTR [eax+0x51]
  40ff06:	jb     0x40fee3
  40ff08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff09:	jae    0x40feb5
  40ff0b:	xor    ch,dl
  40ff0d:	sbb    ecx,esp
  40ff0f:	and    BYTE PTR [ebx-0x3d],0xcb
  40ff13:	inc    eax
  40ff14:	cmp    dh,ah
  40ff16:	into   
  40ff17:	cmp    cl,BYTE PTR [ebx]
  40ff19:	clc    
  40ff1a:	jnp    0x40fef1
  40ff1c:	pop    ebp
  40ff1d:	mov    ?,WORD PTR [edi-0x167a15f0]
  40ff23:	out    dx,al
  40ff24:	mov    ecx,0xe0746f99
  40ff29:	outs   dx,BYTE PTR ds:[esi]
  40ff2a:	rol    BYTE PTR [edx],1
  40ff2c:	daa    
  40ff2d:	lds    edx,FWORD PTR [ebp+0x4c]
  40ff30:	cmp    al,BYTE PTR [ecx+0x6a3f3d2f]
  40ff36:	sbb    al,0x9d
  40ff38:	mov    bh,0xf5
  40ff3a:	rol    DWORD PTR [ebx-0x3b],cl
  40ff3d:	enter  0x8d57,0x2a
  40ff41:	mov    dl,0x74
  40ff43:	mov    al,0x36
  40ff45:	fnstsw WORD PTR [ebx-0x6e65a99e]
  40ff4b:	fidivr DWORD PTR [ebx+0x67]
  40ff4e:	push   cs
  40ff4f:	imul   edx,esp,0xffffff91
  40ff52:	loop   0x40fed7
  40ff54:	push   0xffffffd1
  40ff56:	int    0x62
  40ff58:	pushf  
  40ff59:	and    BYTE PTR [eax-0x16a10bc6],ch
  40ff5f:	push   edx
  40ff60:	add    ch,BYTE PTR [edi]
  40ff62:	push   edi
  40ff63:	pop    es
  40ff64:	xor    DWORD PTR [ebx-0xe17004b],0xf21ba84f
  40ff6e:	mov    eax,ds:0xd36dabe9
  40ff73:	sub    DWORD PTR [edx],esi
  40ff75:	mov    ch,0x66
  40ff77:	pop    ecx
  40ff78:	xlat   BYTE PTR ds:[ebx]
  40ff79:	dec    edi
  40ff7a:	(bad)  
  40ff7b:	push   ss
  40ff7c:	rol    BYTE PTR [ebx],cl
  40ff7e:	pop    esi
  40ff7f:	repnz imul ebx,DWORD PTR [edx],0x8bfec565
  40ff86:	imul   esi,DWORD PTR ds:0xc501987,0xc980b384
  40ff90:	in     al,dx
  40ff91:	fnstenv ds:0xfc8e298c
  40ff97:	add    esi,DWORD PTR [ecx-0x7]
  40ff9a:	in     eax,dx
  40ff9b:	dec    eax
  40ff9c:	mov    edx,0x1d8c7cd0
  40ffa1:	(bad)  
  40ffa2:	jle    0x40ffd7
  40ffa4:	add    edi,DWORD PTR [eax]
  40ffa6:	mov    ebp,0x35d5e789
  40ffab:	cld    
  40ffac:	gs repnz dec edx
  40ffaf:	sbb    ch,cl
  40ffb1:	mov    bl,0x4c
  40ffb3:	add    BYTE PTR [ecx],bh
  40ffb5:	jg     0x40ffe4
  40ffb7:	mov    esi,0xb7c31a54
  40ffbc:	sbb    ebp,DWORD PTR [ebp+ecx*4+0x3d9e3785]
  40ffc3:	in     eax,dx
  40ffc4:	in     al,dx
  40ffc5:	adc    eax,0x841d463c
  40ffca:	stc    
  40ffcb:	pushf  
  40ffcc:	fsubr  DWORD PTR [ebp+0x337fea8b]
  40ffd2:	push   eax
  40ffd3:	in     eax,0x89
  40ffd5:	rol    DWORD PTR [ebp-0xc],1
  40ffd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ffd9:	repnz sbb ecx,eax
  40ffdc:	scas   eax,DWORD PTR es:[edi]
  40ffdd:	mov    ecx,0x19f5169d
  40ffe2:	xchg   bh,bh
  40ffe4:	jmp    0x4cbc:0xa0188029
  40ffeb:	jnp    0x41004a
  40ffed:	ret    0xf1ae
  40fff0:	outs   dx,DWORD PTR ds:[esi]
  40fff1:	sbb    eax,0x3d1e3b0a
  40fff6:	not    BYTE PTR [eax]
  40fff8:	repnz aam 0x61
  40fffb:	fnstenv [esi+0x1981d04]
  410001:	sub    ah,BYTE PTR [ebx]
  410003:	add    esi,DWORD PTR [ecx+0x452e8728]
  410009:	push   0x3600f092
  41000e:	mov    esp,0x194d75f0
  410013:	aaa    
  410014:	popf   
  410015:	scas   eax,DWORD PTR es:[edi]
  410016:	push   0xffffff8c
  410018:	or     ah,cl
  41001a:	repz jbe 0x41003d
  41001d:	dec    eax
  41001e:	jg     0x410073
  410020:	mov    ebx,0xe142372b
  410025:	gs aam 0xf1
  410028:	jbe    0x410095
  41002a:	xor    dl,BYTE PTR [eax+edi*1+0x31]
  41002e:	sti    
  41002f:	sub    esi,DWORD PTR [edx+0x25f4b04b]
  410035:	into   
  410036:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410037:	dec    eax
  410038:	daa    
  410039:	fcomp  QWORD PTR [esi]
  41003b:	adc    al,0x77
  41003d:	xchg   BYTE PTR [di-0xc50],dl
  410042:	(bad)  
  410043:	push   0xcf6a4e52
  410048:	jmp    0x2e11:0xfeeb5a24
  41004f:	xchg   edi,eax
  410050:	add    al,0x30
  410052:	imul   DWORD PTR [esi+0x2db81583]
  410058:	cmp    eax,0xbb56dacd
  41005d:	mov    edx,0x7eb58d87
  410062:	jb     0x410002
  410064:	mov    DWORD PTR [eax+0x4dbf0158],0xebab0e12
  41006e:	mov    ebx,0x2e3f9094
  410073:	cdq    
  410074:	and    BYTE PTR [ecx-0x62],0xff
  410078:	and    al,bl
  41007a:	repnz dec esi
  41007c:	jnp    0x41009f
  41007e:	pop    esi
  41007f:	out    dx,al
  410080:	sub    DWORD PTR [edi-0x6e],ebx
  410083:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410084:	mov    BYTE PTR [ecx+ebp*4],al
  410087:	mov    bl,0x8b
  410089:	jno    0x4100b2
  41008b:	jb     0x41008b
  41008d:	sbb    eax,0x521e43fd
  410092:	rcl    BYTE PTR [ebx+0x5196d3f3],1
  410098:	das    
  410099:	push   esi
  41009a:	or     DWORD PTR [eax+0xb],edi
  41009d:	sbb    ah,BYTE PTR [eax+0x58febacf]
  4100a3:	add    al,dh
  4100a5:	inc    esi
  4100a6:	mov    ebx,DWORD PTR [ebx-0x4455b221]
  4100ac:	retf   
  4100ad:	xchg   dh,bh
  4100af:	pop    ebx
  4100b0:	inc    ecx
  4100b1:	fwait
  4100b2:	mov    DWORD PTR [ecx],ebx
  4100b4:	xor    eax,DWORD PTR [edi]
  4100b6:	addr16 xor al,0xb7
  4100b9:	pop    esp
  4100ba:	pop    esi
  4100bb:	xor    DWORD PTR [eax],eax
  4100bd:	aas    
  4100be:	cmp    al,BYTE PTR [esi+0x45]
  4100c1:	in     al,0x6b
  4100c3:	addr16 repz jno 0x410138
  4100c7:	add    BYTE PTR [ecx],0xbb
  4100ca:	add    edx,ecx
  4100cc:	xor    ah,ah
  4100ce:	pop    edx
  4100cf:	xor    al,0x7
  4100d1:	and    eax,DWORD PTR [ecx+esi*4]
  4100d4:	inc    ecx
  4100d5:	mov    edi,DWORD PTR [esi]
  4100d7:	add    edi,DWORD PTR [ebx]
  4100d9:	add    ebp,DWORD PTR [edi-0x5a999571]
  4100df:	das    
  4100e0:	and    BYTE PTR [ecx+ecx*8+0x30],bh
  4100e4:	sar    DWORD PTR [ecx-0x64],cl
  4100e7:	fst    DWORD PTR [eax+0x221683a9]
  4100ed:	in     al,dx
  4100ee:	pusha  
  4100ef:	or     esi,DWORD PTR [esi+0x2d6fc04a]
  4100f5:	enter  0x648,0x74
  4100f9:	gs jae 0x4100af
  4100fc:	outs   dx,DWORD PTR ds:[esi]
  4100fd:	cmp    cl,BYTE PTR [ecx+0x64]
  410100:	jnp    0x4100a9
  410102:	push   ebp
  410103:	idiv   BYTE PTR [ebp-0x342cb424]
  410109:	dec    esi
  41010a:	and    ah,BYTE PTR [esi+edx*4-0x66beecbb]
  410111:	int3   
  410112:	push   ecx
  410113:	iret   
  410114:	rcl    dh,0xb9
  410117:	(bad)  
  410118:	les    edx,FWORD PTR [esi+esi*4]
  41011b:	fstp   TBYTE PTR [edx+esi*4-0x7135015b]
  410122:	pop    ecx
  410123:	mov    DWORD PTR [ebx],ebx
  410125:	sub    ecx,DWORD PTR [edi+0x1a]
  410128:	sbb    DWORD PTR [eax],edi
  41012a:	popf   
  41012b:	xor    BYTE PTR [eax+ebx*1+0x20],dl
  41012f:	or     al,0x92
  410131:	mov    bh,0x51
  410133:	adc    BYTE PTR [ecx-0x1f],cl
  410136:	sbb    eax,0xbf190a49
  41013b:	mov    dl,0x48
  41013d:	xor    eax,0xf41c18d2
  410142:	jg     0x41015d
  410144:	dec    esp
  410145:	lahf   
  410146:	xlat   BYTE PTR ds:[ebx]
  410147:	(bad)  
  410148:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410149:	scas   al,BYTE PTR es:[edi]
  41014a:	sub    eax,ecx
  41014c:	in     al,0x33
  41014e:	xchg   ecx,eax
  41014f:	nop
  410150:	out    0x3a,al
  410152:	in     al,dx
  410153:	test   eax,0xb3b32899
  410158:	or     al,0xa
  41015a:	aad    0xa1
  41015c:	jbe    0x4100f8
  41015e:	lock dec esi
  410160:	ret    0x2df8
  410163:	sbb    DWORD PTR [ecx+0x76fe4a89],ebp
  410169:	jg     0x410124
  41016b:	retf   
  41016c:	adc    cl,BYTE PTR [eax]
  41016e:	shl    dh,cl
  410170:	cmp    ebx,ecx
  410172:	aas    
  410173:	sbb    al,0xe5
  410175:	pop    edi
  410176:	lahf   
  410177:	enter  0xffbc,0x8a
  41017b:	cmp    BYTE PTR [ecx-0x52207b5f],bh
  410181:	lods   al,BYTE PTR ds:[esi]
  410182:	adc    BYTE PTR [esi+0x6e],dl
  410185:	(bad)  
  410186:	and    DWORD PTR [eax],ebp
  410188:	ficomp DWORD PTR [edx-0x46186782]
  41018e:	(bad)  
  41018f:	data16 sbb al,0x3e
  410192:	and    dh,BYTE PTR [ebx]
  410194:	emms   
  410196:	scas   al,BYTE PTR es:[edi]
  410197:	pop    ecx
  410198:	nop
  410199:	lahf   
  41019a:	hlt    
  41019b:	into   
  41019c:	or     al,0xc
  41019e:	or     dl,BYTE PTR [ebx+0x12bc2e8a]
  4101a4:	or     al,0x9a
  4101a6:	cmp    DWORD PTR [edx+0x3be2a4ec],eax
  4101ac:	jle    0x41021f
  4101ae:	fild   DWORD PTR [edi*2+0x148b75a1]
  4101b5:	sbb    BYTE PTR [ebx],cl
  4101b7:	test   al,0xc8
  4101b9:	jge    0x410175
  4101bb:	push   edi
  4101bc:	daa    
  4101bd:	pop    es
  4101be:	das    
  4101bf:	jg     0x41020a
  4101c1:	cwde   
  4101c2:	fwait
  4101c3:	lods   al,BYTE PTR ds:[esi]
  4101c4:	sbb    DWORD PTR [edx-0x554e27a5],ebx
  4101ca:	repz mov es,edx
  4101cd:	jno    0x410239
  4101cf:	mov    cl,dl
  4101d1:	mov    al,ds:0xaf71aed1
  4101d6:	mov    ch,0xd8
  4101d8:	mov    bl,0x2b
  4101da:	pushf  
  4101db:	pop    edi
  4101dc:	repnz mov dh,0xbb
  4101df:	cmp    al,0xa7
  4101e1:	jmp    0x9f5b:0x1e3a7fe3
  4101e8:	pop    edx
  4101e9:	loopne 0x410175
  4101eb:	xchg   ebp,eax
  4101ec:	xor    eax,0x6fb2d56e
  4101f1:	jg     0x4101c5
  4101f3:	(bad)  
  4101f4:	fsubr  st,st(2)
  4101f6:	sub    ecx,0x50
  4101f9:	ds add al,0x39
  4101fc:	sbb    ecx,ebx
  4101fe:	mov    ?,WORD PTR ds:0xd5179256
  410204:	iret   
  410205:	jnp    0x410215
  410207:	and    DWORD PTR ds:0xf9b6e32d,eax
  41020d:	sbb    esi,DWORD PTR [ebp-0x24]
  410210:	and    bl,BYTE PTR [edx+edi*8-0x282cd9e6]
  410217:	mov    ebx,0x483c5dab
  41021c:	or     DWORD PTR [eax+0x42606d38],eax
  410222:	jae    0x4101c0
  410224:	add    edx,ebp
  410226:	push   es
  410227:	push   ss
  410228:	mov    eax,ds:0xd2007f7e
  41022d:	sub    bl,dl
  41022f:	lock fld TBYTE PTR [bx+si]
  410233:	outs   dx,DWORD PTR ds:[esi]
  410234:	dec    ecx
  410235:	hlt    
  410236:	lahf   
  410237:	out    0xb4,eax
  410239:	push   ebp
  41023a:	xchg   esp,eax
  41023b:	mov    bh,0x2a
  41023d:	inc    ecx
  41023e:	add    eax,0x68d2ca8
  410243:	or     BYTE PTR [esi+eiz*8+0x187ced76],dl
  41024a:	ret    0x10a1
  41024d:	pop    ecx
  41024e:	sahf   
  41024f:	push   es
  410250:	push   eax
  410251:	sbb    bl,BYTE PTR [ebx]
  410253:	mov    cl,0x18
  410255:	inc    esi
  410256:	mov    dl,0xcf
  410258:	mov    dl,0xe6
  41025a:	sub    BYTE PTR [eax+0x57],0x8a
  41025e:	and    eax,0x3e004e0a
  410263:	dec    ebx
  410264:	test   edx,eax
  410266:	adc    ecx,DWORD PTR [eax]
  410268:	jle    0x4102a8
  41026a:	lds    eax,FWORD PTR [ecx+edi*1]
  41026d:	and    al,0x8c
  41026f:	fcomp  DWORD PTR [ebx+0x2e987294]
  410275:	fst    DWORD PTR ds:0x31423458
  41027b:	add    eax,0x8c327a9a
  410280:	gs jnp 0x410286
  410283:	inc    eax
  410284:	xor    al,0xf0
  410286:	fnstenv [edi+0x350d47ef]
  41028c:	push   ss
  41028d:	mov    ebp,0xbd86b7e1
  410292:	fsubr  QWORD PTR [ebx+ebp*1+0x43]
  410296:	dec    eax
  410297:	mov    ds,WORD PTR [ebx]
  410299:	stos   DWORD PTR es:[edi],eax
  41029a:	idiv   BYTE PTR [eax-0x23]
  41029d:	mov    esp,0xe587df7b
  4102a2:	jo     0x410262
  4102a4:	popa   
  4102a5:	or     eax,0xaddbde63
  4102aa:	dec    ecx
  4102ab:	adc    eax,0x749fba7c
  4102b0:	push   edi
  4102b1:	aam    0xd8
  4102b3:	jle    0x41031f
  4102b5:	je     0x41028a
  4102b7:	xor    edi,ecx
  4102b9:	inc    edi
  4102ba:	jbe    0x41025a
  4102bc:	sub    BYTE PTR [edi-0x675893fe],al
  4102c2:	out    0xb5,al
  4102c4:	aam    0xab
  4102c6:	mov    esp,0x72802c5a
  4102cb:	je     0x41030f
  4102cd:	xor    esi,DWORD PTR [ebp+0x45]
  4102d0:	cmp    al,0x7d
  4102d2:	push   ebx
  4102d3:	jne    0x41025b
  4102d5:	push   edi
  4102d6:	adc    edx,DWORD PTR [esi]
  4102d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4102d9:	xor    ah,bh
  4102db:	or     ebx,DWORD PTR [ebx+0x52]
  4102de:	inc    eax
  4102df:	stos   DWORD PTR es:[edi],eax
  4102e0:	loop   0x410361
  4102e2:	push   ss
  4102e3:	sbb    edx,edx
  4102e5:	es sbb dh,dh
  4102e8:	and    bh,BYTE PTR [esi-0x71]
  4102eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4102ec:	cmp    BYTE PTR [ecx-0x1f],dh
  4102ef:	(bad)  
  4102f0:	dec    ebp
  4102f1:	push   ebp
  4102f2:	stos   DWORD PTR es:[edi],eax
  4102f3:	stos   DWORD PTR es:[edi],eax
  4102f4:	add    ebx,DWORD PTR [eax-0x4c]
  4102f7:	aam    0xc
  4102f9:	xchg   edi,eax
  4102fa:	or     DWORD PTR ds:0xad9871e6,ebx
  410300:	ds push ss
  410302:	hlt    
  410303:	add    edi,DWORD PTR [edx]
  410305:	mov    eax,ecx
  410307:	or     bl,BYTE PTR [esi]
  410309:	ja     0x410356
  41030b:	out    0x36,eax
  41030d:	jbe    0x410324
  41030f:	fdiv   st,st(6)
  410311:	mov    DWORD PTR [edi-0x4747479d],edi
  410317:	cmc    
  410318:	push   edx
  410319:	mov    BYTE PTR [ecx-0x11248576],0x29
  410320:	mov    esp,0x7728ce24
  410325:	and    ebx,DWORD PTR [eax-0x598c8b35]
  41032b:	adc    ah,BYTE PTR [esi]
  41032d:	outs   dx,DWORD PTR ds:[esi]
  41032e:	fisubr WORD PTR [edx]
  410330:	cdq    
  410331:	sub    BYTE PTR [esi],al
  410333:	(bad)  
  410334:	(bad)  
  410336:	mov    ds:0x7a8dbda2,eax
  41033b:	inc    ebp
  41033c:	shl    cl,0x73
  41033f:	xor    eax,0x1da5e319
  410344:	push   ebx
  410345:	cmp    dh,BYTE PTR [ebp+0x70580142]
  41034b:	mov    ah,0x17
  41034d:	dec    DWORD PTR [ecx+0x6d706c02]
  410353:	mov    dl,0x25
  410355:	into   
  410356:	dec    ebp
  410357:	xchg   esp,eax
  410358:	adc    eax,0xef67b4be
  41035d:	loopne 0x41037e
  41035f:	ret    
  410360:	fcom   DWORD PTR [ecx+ebp*8-0x12]
  410364:	xlat   BYTE PTR ds:[ebx]
  410365:	sub    BYTE PTR [edx+0x6b],al
  410368:	pop    es
  410369:	icebp  
  41036a:	pushf  
  41036b:	(bad)  
  41036c:	into   
  41036d:	mov    ds:0xcd024591,eax
  410372:	xor    BYTE PTR [ebp-0x48],dl
  410375:	fidivr WORD PTR [ecx]
  410377:	cwde   
  410378:	loope  0x4103af
  41037a:	(bad)  
  41037c:	sbb    ah,BYTE PTR [esi+ecx*8]
  41037f:	xchg   ebx,eax
  410380:	jle    0x4103cf
  410382:	sub    edi,DWORD PTR [ebx]
  410384:	pusha  
  410385:	aaa    
  410386:	jne    0x410352
  410388:	loopne 0x4103ed
  41038a:	mov    dh,0x4c
  41038c:	sub    BYTE PTR [eax],bh
  41038e:	mov    edi,edi
  410390:	jo     0x4103c6
  410392:	stos   BYTE PTR es:[edi],al
  410393:	jb     0x4103a8
  410395:	push   esp
  410396:	mov    bl,0x1c
  410398:	jmp    0x41039f
  41039a:	popa   
  41039b:	jno    0x4103ed
  41039d:	out    dx,al
  41039e:	cmp    edx,edi
  4103a0:	ror    dh,cl
  4103a2:	xchg   esi,eax
  4103a3:	cli    
  4103a4:	stos   DWORD PTR es:[edi],eax
  4103a5:	mov    bl,0x0
  4103a7:	jl     0x410338
  4103a9:	fldenv ds:[esi+0x1d]
  4103ad:	pop    es
  4103ae:	fcomp  DWORD PTR [edi+edx*8]
  4103b1:	fsub   st(3),st
  4103b3:	push   cs
  4103b4:	xor    al,0x66
  4103b6:	xor    BYTE PTR [edx],0xa9
  4103b9:	adc    al,ah
  4103bb:	cdq    
  4103bc:	aad    0x18
  4103be:	or     eax,0xcce165c7
  4103c3:	fild   QWORD PTR [ebx-0x3e1f228b]
  4103c9:	dec    esp
  4103ca:	repnz iret 
  4103cc:	xchg   edi,eax
  4103cd:	jbe    0x41041c
  4103cf:	loop   0x41035c
  4103d1:	or     BYTE PTR [edx],bl
  4103d3:	sahf   
  4103d4:	(bad)
  4103d7:	sar    ebx,1
  4103d9:	mov    ds,WORD PTR [esi-0x42]
  4103dc:	xor    BYTE PTR [ecx-0xa],dl
  4103df:	mov    esi,0xf0e1bafa
  4103e4:	jnp    0x410382
  4103e6:	sub    BYTE PTR [ecx-0x47],ah
  4103e9:	or     edi,esp
  4103eb:	and    al,0x45
  4103ed:	sti    
  4103ee:	sbb    al,0xbb
  4103f0:	sub    BYTE PTR [ecx-0x15],dh
  4103f3:	jmp    0x4103a9
  4103f5:	pushf  
  4103f6:	cwde   
  4103f7:	sub    BYTE PTR [edx],bl
  4103f9:	cmp    DWORD PTR [eax-0x636e2f83],eax
  4103ff:	sbb    al,0x45
  410401:	sub    DWORD PTR [ebx],edi
  410403:	push   0xffffffb0
  410405:	add    esi,DWORD PTR [ecx+0x77b0d3d4]
  41040b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41040c:	jno    0x41043d
  41040e:	jnp    0x410468
  410410:	das    
  410411:	sbb    al,0xd
  410413:	in     eax,0x73
  410415:	pushf  
  410416:	retf   0xe541
  410419:	in     eax,dx
  41041a:	jns    0x410410
  41041c:	ja     0x4103fd
  41041e:	dec    esp
  41041f:	add    eax,0x3dd9b1f6
  410424:	xor    edi,DWORD PTR [edx+0x39]
  410427:	cld    
  410428:	add    BYTE PTR [edx],ch
  41042a:	mov    ds:0xdd257d0d,al
  41042f:	imul   edx,DWORD PTR [esp+edi*1],0x58fe0f40
  410436:	xchg   BYTE PTR [ecx],al
  410438:	adc    esp,ebp
  41043a:	jmp    0x5239:0x614b14c8
  410441:	icebp  
  410442:	outs   dx,BYTE PTR ds:[esi]
  410443:	inc    edx
  410444:	out    0xbb,eax
  410446:	sub    eax,0xe48cc101
  41044b:	mov    dl,0x4
  41044d:	out    0x79,al
  41044f:	adc    DWORD PTR [eax],ebp
  410451:	sub    BYTE PTR [ecx+0x52662164],ch
  410457:	call   0x2814bec2
  41045c:	mov    cl,ch
  41045e:	cmp    al,0x4
  410460:	(bad)  
  410462:	stos   BYTE PTR es:[edi],al
  410463:	int    0x8b
  410465:	jg     0x410477
  410467:	fidivr WORD PTR [edx]
  410469:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41046a:	cdq    
  41046b:	popf   
  41046c:	add    cl,BYTE PTR [edx+0x25]
  41046f:	arpl   WORD PTR [edi+0x5d0292a9],sp
  410475:	mov    ebp,0x5d4029ad
  41047a:	mov    edi,0xe15ef78
  41047f:	retf   
  410480:	cmp    bh,BYTE PTR [ecx]
  410482:	sbb    DWORD PTR [ebx-0x6d],ecx
  410485:	ins    BYTE PTR es:[edi],dx
  410486:	mov    al,0xd1
  410488:	jl     0x41048b
  41048a:	push   edi
  41048b:	push   ecx
  41048c:	jle    0x4104c8
  41048e:	mov    ebp,0x2252349f
  410493:	or     BYTE PTR [ebp-0x54d640c5],bl
  410499:	int3   
  41049a:	in     eax,0xb2
  41049c:	pop    ds
  41049d:	cmp    al,0xec
  41049f:	mov    esp,0xfe400c64
  4104a4:	dec    edi
  4104a5:	xor    ch,BYTE PTR [edi+0xb4ce7ae]
  4104ab:	lea    ecx,[eax+0x5c5cc680]
  4104b1:	or     eax,0x74cbaf5c
  4104b6:	add    BYTE PTR [edi+edi*8],cl
  4104b9:	stc    
  4104ba:	nop
  4104bb:	fidiv  DWORD PTR [edx+0x0]
  4104be:	sbb    edi,DWORD PTR [edx+eiz*4+0x17]
  4104c2:	pcmpgtb mm1,mm2
  4104c5:	push   ds
  4104c6:	xor    DWORD PTR [ebx],ecx
  4104c8:	loop   0x410464
  4104ca:	jae    0x4104ef
  4104cc:	xchg   ebp,eax
  4104cd:	sti    
  4104ce:	jae    0x4104f4
  4104d0:	daa    
  4104d1:	cmp    BYTE PTR [edx+0x674c12db],bh
  4104d7:	xchg   dl,ch
  4104d9:	xor    BYTE PTR ds:0x199bda1c,ah
  4104df:	xchg   BYTE PTR [eax+0x71],ah
  4104e2:	aam    0x2c
  4104e4:	adc    esp,DWORD PTR [ebx]
  4104e6:	push   ebx
  4104e7:	cmp    DWORD PTR [esi-0x5f],0xffffffbf
  4104eb:	pop    ecx
  4104ec:	sbb    DWORD PTR [edi],ecx
  4104ee:	sbb    DWORD PTR fs:[ebx+0x37],ebp
  4104f2:	mov    dh,0xd9
  4104f4:	sub    al,0x47
  4104f6:	cmp    edi,edi
  4104f8:	aas    
  4104f9:	adc    ch,al
  4104fb:	xchg   edi,eax
  4104fc:	sbb    ebp,DWORD PTR [ebp-0x6]
  4104ff:	cmp    eax,0x643ebd6e
  410504:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410505:	(bad)  
  410506:	xchg   ebp,eax
  410507:	outs   dx,BYTE PTR ds:[esi]
  410508:	loopne 0x41052b
  41050a:	add    al,0x4
  41050c:	imul   ebx,DWORD PTR [ebx+0x2b60adbc],0x2877b2ba
  410516:	dec    edx
  410517:	pop    edi
  410518:	call   0x4366:0xf84308ae
  41051f:	sbb    BYTE PTR [esi],dh
  410521:	mov    dl,0x2b
  410523:	stos   BYTE PTR es:[edi],al
  410524:	add    esi,ecx
  410526:	fwait
  410527:	push   edi
  410528:	or     ebx,0x44fe94e5
  41052e:	sbb    bl,BYTE PTR [edi+0x1b]
  410531:	scas   eax,DWORD PTR es:[edi]
  410532:	(bad)
  410535:	jl     0x4104ed
  410537:	in     eax,0x35
  410539:	adc    DWORD PTR [ebx-0x47ce83a1],eax
  41053f:	sti    
  410540:	push   edi
  410541:	xor    ch,dl
  410543:	pop    ebp
  410544:	push   cs
  410545:	pusha  
  410546:	gs ret 0x1831
  41054a:	pop    edx
  41054b:	mov    ah,0x45
  41054d:	adc    DWORD PTR [ebx+0x78c1bc83],ebp
  410553:	xchg   ebp,eax
  410554:	jb     0x4105a5
  410556:	xchg   BYTE PTR [esp+esi*2-0x389e5cf8],cl
  41055d:	push   es
  41055e:	lods   al,BYTE PTR ds:[esi]
  41055f:	or     DWORD PTR [ebx-0x4f84c951],0x5d
  410566:	std    
  410567:	xchg   ecx,eax
  410568:	inc    BYTE PTR [ecx]
  41056a:	aas    
  41056b:	push   0xffffffd8
  41056d:	sti    
  41056e:	cmp    esp,0xa25cce54
  410574:	mov    ebp,0x5ba6a30
  410579:	fidiv  WORD PTR [eax]
  41057b:	mov    DWORD PTR cs:[esi-0x5b62c426],edx
  410582:	mov    eax,0x187228bc
  410587:	shr    DWORD PTR [edi],cl
  410589:	(bad)  
  41058b:	sub    BYTE PTR [esi],ah
  41058d:	jo     0x410571
  41058f:	xor    eax,edx
  410591:	mov    bl,0xe6
  410593:	aas    
  410594:	lods   al,BYTE PTR ds:[esi]
  410595:	aam    0x1a
  410597:	dec    edi
  410598:	or     bh,BYTE PTR [ebx-0x1a]
  41059b:	pop    ecx
  41059c:	cld    
  41059d:	push   edx
  41059e:	xor    al,0xcf
  4105a0:	ret    
  4105a1:	sbb    BYTE PTR [edx-0x3c],dh
  4105a4:	mov    cr4,edx
  4105a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4105a8:	pop    es
  4105a9:	xchg   ebp,eax
  4105aa:	inc    ebx
  4105ab:	pop    ebp
  4105ac:	fs dec eax
  4105ae:	sbb    edx,DWORD PTR ds:0xba815157
  4105b4:	fwait
  4105b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4105b6:	jo     0x4105cd
  4105b8:	push   cs
  4105b9:	push   ds
  4105ba:	les    ebp,FWORD PTR [ebx-0x6bd0c394]
  4105c0:	repz sub edi,DWORD PTR [ecx-0x62]
  4105c4:	push   esi
  4105c5:	cmp    BYTE PTR [eax],cl
  4105c7:	sub    BYTE PTR [esi+0x5e],bh
  4105ca:	mov    al,0xc
  4105cc:	hlt    
  4105cd:	lods   al,BYTE PTR ds:[esi]
  4105ce:	inc    ecx
  4105cf:	sub    ebp,DWORD PTR [esi+0x245ee8dc]
  4105d5:	aad    0x8
  4105d7:	fld    QWORD PTR [ecx-0x4c494666]
  4105dd:	sub    DWORD PTR [eax-0x76f0c635],ecx
  4105e3:	pop    ebp
  4105e4:	mov    ebp,0xd8d407e5
  4105e9:	sbb    BYTE PTR [ebp+ecx*8+0x1d],bl
  4105ed:	stos   BYTE PTR es:[edi],al
  4105ee:	iret   
  4105ef:	sub    esp,ebx
  4105f1:	pop    eax
  4105f2:	fld    DWORD PTR [ebp-0x36]
  4105f5:	add    eax,0xb849792c
  4105fa:	enter  0xe011,0x50
  4105fe:	and    BYTE PTR [edx],0xe9
  410601:	test   al,0x9c
  410603:	aam    0xb0
  410605:	jb     0x410651
  410607:	retf   0x11e0
  41060a:	or     DWORD PTR [ecx+0x3c],0x2d
  41060e:	mov    eax,ds:0x9e6bb147
  410613:	fidiv  WORD PTR [ebx]
  410615:	jns    0x4105ec
  410617:	in     al,dx
  410618:	(bad)  
  410619:	mov    al,0x19
  41061b:	rcl    esp,0x6e
  41061e:	repz ja 0x41060b
  410621:	mov    ch,al
  410623:	push   ecx
  410624:	leave  
  410625:	popf   
  410626:	ret    0x1d39
  410629:	call   DWORD PTR [ebp-0x30]
  41062c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41062d:	mov    esp,0xcec334d8
  410632:	pop    eax
  410633:	mov    dh,0x75
  410635:	xlat   BYTE PTR ds:[ebx]
  410636:	ds dec esp
  410638:	jp     0x4105e6
  41063a:	andnps xmm1,XMMWORD PTR [ecx+0x6e]
  41063e:	out    dx,eax
  41063f:	pusha  
  410640:	stos   BYTE PTR es:[edi],al
  410641:	lods   eax,DWORD PTR ds:[esi]
  410642:	push   ebx
  410643:	push   ebx
  410644:	adc    esp,DWORD PTR [edx+edi*1+0x7993bf24]
  41064b:	shl    bh,1
  41064d:	dec    esi
  41064e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41064f:	imul   esi,ecx,0x739a60a
  410655:	adc    eax,0xbd988b27
  41065a:	pop    ebx
  41065b:	xchg   eax,ebp
  41065d:	mov    al,0x2
  41065f:	jb     0x4106be
  410661:	jo     0x4106db
  410663:	add    dh,BYTE PTR [edx]
  410665:	test   BYTE PTR [edi+edi*1+0x5ce04e11],0x7a
  41066d:	lods   al,BYTE PTR gs:[esi]
  41066f:	div    bl
  410671:	lahf   
  410672:	jae    0x410603
  410674:	and    al,0x12
  410676:	push   0x2dec2f9e
  41067b:	xchg   edx,eax
  41067c:	xor    eax,0x214763e7
  410681:	daa    
  410682:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410683:	(bad)  
  410684:	fsubrp st(7),st
  410686:	stc    
  410687:	inc    ebp
  410688:	xchg   edi,eax
  410689:	pop    ebx
  41068a:	push   esp
  41068b:	(bad)  
  41068c:	ss jb  0x410696
  41068f:	mov    DWORD PTR [ebp+0x3e9bbcb1],0x2d40b12e
  410699:	pop    edi
  41069a:	inc    eax
  41069b:	arpl   WORD PTR [ebx],si
  41069d:	and    dh,0x3e
  4106a0:	mov    eax,ds:0xbc259ffd
  4106a5:	lahf   
  4106a6:	out    dx,al
  4106a7:	jno    0x410683
  4106a9:	cwde   
  4106aa:	dec    eax
  4106ab:	lahf   
  4106ac:	dec    edx
  4106ad:	lods   eax,DWORD PTR ds:[esi]
  4106ae:	ins    BYTE PTR es:[edi],dx
  4106af:	jmp    0x9192:0xe360
  4106b5:	idiv   ah
  4106b7:	sbb    bh,BYTE PTR [ebp+ebp*2+0x626e18e7]
  4106be:	imul   edx,DWORD PTR [eax+ecx*8+0x154d3fb2],0xffffffab
  4106c6:	cld    
  4106c7:	sub    BYTE PTR [ebx+0x4c026271],0x7b
  4106ce:	fwait
  4106cf:	fs popf 
  4106d1:	xor    al,0x5b
  4106d3:	sub    esp,DWORD PTR [edi]
  4106d5:	cmc    
  4106d6:	test   DWORD PTR [edi+0x45],edi
  4106d9:	mov    al,0xf3
  4106db:	das    
  4106dc:	sub    BYTE PTR [esi-0x49cae510],bh
  4106e2:	add    DWORD PTR fs:[ebx],eax
  4106e5:	dec    esi
  4106e6:	inc    esp
  4106e7:	cmovl  eax,DWORD PTR [ebp-0x29b571d]
  4106ee:	dec    ecx
  4106ef:	fs mov ecx,0xaa8fffe7
  4106f5:	and    al,0x83
  4106f7:	aaa    
  4106f8:	xor    ah,BYTE PTR [esi]
  4106fa:	xchg   ecx,eax
  4106fb:	into   
  4106fc:	out    0x53,eax
  4106fe:	scas   al,BYTE PTR es:[edi]
  4106ff:	bound  edi,QWORD PTR [eax+0x4a4cb8bc]
  410705:	loope  0x41072f
  410707:	mov    al,ds:0xa39abc31
  41070c:	add    BYTE PTR [ecx],ch
  41070e:	jmp    0xdcdb:0xab9ac35
  410715:	dec    eax
  410716:	push   ds
  410717:	fcomp  QWORD PTR [ebp-0x41]
  41071a:	inc    eax
  41071b:	inc    edi
  41071c:	shl    bl,cl
  41071e:	sub    eax,0x30cf1fb2
  410723:	dec    ecx
  410724:	test   ah,ch
  410726:	cld    
  410727:	aas    
  410728:	xchg   esi,eax
  410729:	stos   DWORD PTR es:[edi],eax
  41072a:	push   ss
  41072b:	xor    dl,al
  41072d:	sbb    esi,DWORD PTR [edi]
  41072f:	xchg   ebx,eax
  410730:	repnz sub esp,esi
  410733:	dec    edi
  410734:	cmove  esp,DWORD PTR [edi-0xb0779b7]
  41073b:	arpl   cx,ax
  41073d:	dec    esi
  41073e:	popf   
  41073f:	sub    DWORD PTR [edx-0x1f],0xb8620d9e
  410746:	pop    ebx
  410747:	mov    ah,0x6b
  410749:	lea    ebx,[edi]
  41074b:	inc    esp
  41074c:	mov    ecx,0x6750c7c4
  410751:	pop    ebp
  410752:	mov    ecx,0xe31ffa5c
  410757:	cld    
  410758:	push   ds
  410759:	xor    dl,BYTE PTR [esi]
  41075b:	and    eax,DWORD PTR [eax]
  41075d:	push   DWORD PTR [edx-0x636b297c]
  410763:	jge    0x410725
  410765:	stos   BYTE PTR es:[edi],al
  410766:	dec    edx
  410767:	int3   
  410768:	hlt    
  410769:	bound  edx,QWORD PTR [ebx+eax*4-0x46e58fdc]
  410770:	xchg   edx,eax
  410771:	(bad)  
  410772:	int3   
  410773:	gs inc ebx
  410775:	inc    edi
  410776:	pop    edi
  410777:	or     BYTE PTR [ebx+0x5cb15db1],0x52
  41077e:	mov    eax,0x717465a
  410783:	dec    ebx
  410784:	jmp    0x7f49fd0b
  410789:	stos   BYTE PTR es:[edi],al
  41078a:	mov    esp,0x213d9d68
  41078f:	mov    al,ds:0x958c9f13
  410794:	push   ds
  410795:	ficom  WORD PTR [eax]
  410797:	pushw  ds
  410799:	(bad)
  41079c:	(bad)  
  41079d:	pushf  
  41079e:	aaa    
  41079f:	out    dx,eax
  4107a0:	repz adc edi,edx
  4107a3:	cmp    ah,0x4f
  4107a6:	rol    BYTE PTR [edx-0x25],0x88
  4107aa:	mov    ecx,0x80171ad9
  4107af:	mov    BYTE PTR [edi+0x7b6edd37],ah
  4107b5:	mov    al,ds:0x3a033dc6
  4107ba:	dec    edx
  4107bb:	fistp  DWORD PTR [eax+0x12]
  4107be:	pop    esp
  4107bf:	cmp    ch,bl
  4107c1:	fwait
  4107c2:	pop    ecx
  4107c3:	add    dh,BYTE PTR [eax+eiz*1]
  4107c6:	push   0x7b930962
  4107cb:	(bad)  
  4107cd:	fsub   DWORD PTR [ebx-0x2d356ead]
  4107d4:	dec    ebx
  4107d5:	xchg   ecx,eax
  4107d6:	in     al,0x4f
  4107d8:	lahf   
  4107d9:	or     al,0xb1
  4107db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107dc:	or     dh,BYTE PTR [edx-0x43]
  4107df:	ret    
  4107e0:	mov    ebp,0x737d7287
  4107e5:	and    BYTE PTR [ecx+0x14],dl
  4107e8:	loop   0x4107d4
  4107ea:	push   0xdf8fa84c
  4107ef:	sahf   
  4107f0:	test   al,0xb
  4107f2:	sbb    ecx,DWORD PTR [eax-0x3]
  4107f5:	inc    edx
  4107f6:	jns    0x4107cb
  4107f8:	out    0x71,al
  4107fa:	(bad)  
  4107fc:	mov    ebx,0xe82248d4
  410801:	ret    0x8bb6
  410804:	js     0x41087e
  410806:	adc    eax,0x45d3ac80
  41080b:	repnz cmp eax,0x38dee0c6
  410811:	jmp    0x69fa6f85
  410816:	adc    DWORD PTR [ecx-0x29],eax
  410819:	ret    
  41081a:	ins    BYTE PTR es:[edi],dx
  41081b:	push   edi
  41081c:	mov    esi,0xbc84cc1a
  410821:	mov    DWORD PTR [ebx+0x633afb06],esp
  410827:	xchg   ecx,eax
  410828:	lods   al,BYTE PTR ds:[esi]
  410829:	ret    0x8ee0
  41082c:	es jbe 0x4107ea
  41082f:	dec    ebp
  410830:	popf   
  410831:	mov    al,0x78
  410833:	out    dx,al
  410834:	repnz sbb dl,bh
  410837:	sti    
  410838:	sbb    edx,DWORD PTR [eax+0x45c3b6ba]
  41083e:	jl     0x4107d4
  410840:	test   esp,esi
  410842:	mov    dl,0x90
  410844:	pop    edi
  410845:	jns    0x4107f6
  410847:	cmp    DWORD PTR [ebp-0x770bb5b5],esi
  41084d:	popf   
  41084e:	mov    edx,DWORD PTR [ebp+0x7f0b8505]
  410854:	sub    eax,0xdbf0b59
  410859:	xchg   esi,eax
  41085a:	loopne 0x4107e1
  41085c:	sub    DWORD PTR [edi],0xffffffa6
  41085f:	add    DWORD PTR [esi-0x2f823c7e],ecx
  410865:	leave  
  410866:	fsub   DWORD PTR [edx]
  410868:	mov    al,0xed
  41086a:	sub    eax,0x16f841d8
  41086f:	popa   
  410870:	adc    al,0x9
  410872:	push   ss
  410873:	xchg   edi,eax
  410874:	inc    esp
  410875:	sbb    DWORD PTR [ecx],ebx
  410877:	scas   eax,DWORD PTR es:[edi]
  410878:	xor    dh,bl
  41087a:	adc    DWORD PTR [eax],ebx
  41087c:	shl    DWORD PTR [ebx+0x44],1
  41087f:	scas   al,BYTE PTR es:[edi]
  410880:	in     eax,0x31
  410882:	aam    0xce
  410884:	xchg   esp,eax
  410885:	cdq    
  410886:	sti    
  410887:	das    
  410888:	repz mov dl,BYTE PTR [esi-0x6006bb4e]
  41088f:	in     eax,0x8b
  410891:	retf   
  410892:	in     al,dx
  410893:	fld    TBYTE PTR [edx+0x2c]
  410896:	dec    edi
  410897:	xor    DWORD PTR fs:[ecx-0x517fe23a],0x72
  41089f:	iret   
  4108a0:	gs aaa 
  4108a2:	pop    ds
  4108a3:	cmc    
  4108a4:	inc    edi
  4108a5:	ja     0x410858
  4108a7:	nop
  4108a8:	jnp    0x4108d7
  4108aa:	ins    BYTE PTR es:[edi],dx
  4108ab:	retf   0x86d
  4108ae:	pusha  
  4108af:	fst    QWORD PTR [edx+0x2f]
  4108b2:	pushf  
  4108b3:	and    bl,bh
  4108b5:	add    DWORD PTR [esp+esi*1+0x795c4f59],esp
  4108bc:	add    al,0x7b
  4108be:	or     ebp,DWORD PTR [ebp+0x6b90ff4d]
  4108c4:	cmp    edi,0xbe94a714
  4108ca:	in     al,dx
  4108cb:	ffreep st(7)
  4108cd:	add    eax,0x93c671a0
  4108d2:	jmp    0x33852f48
  4108d7:	inc    esp
  4108d8:	loop   0x4108c4
  4108da:	or     ecx,DWORD PTR [ebx-0x6de698dd]
  4108e0:	ret    
  4108e1:	aaa    
  4108e2:	jb     0x410912
  4108e4:	pop    eax
  4108e5:	ds mov bl,0xc4
  4108e8:	mov    esp,0x1271ae1d
  4108ed:	pop    ss
  4108ee:	ret    
  4108ef:	mov    dh,cl
  4108f1:	inc    esi
  4108f2:	xchg   ecx,eax
  4108f3:	and    edi,esi
  4108f5:	cli    
  4108f6:	pushf  
  4108f7:	aad    0x87
  4108f9:	in     al,0xd0
  4108fb:	jp     0x410917
  4108fd:	cmp    BYTE PTR [esi+0x40ec194e],cl
  410903:	aaa    
  410904:	arpl   WORD PTR [ebx],bp
  410906:	fild   QWORD PTR [esi]
  410908:	mov    ds:0x13d3cef6,al
  41090d:	and    ebx,eax
  41090f:	out    dx,al
  410910:	xchg   edx,eax
  410911:	loop   0x410900
  410913:	int3   
  410914:	aam    0x20
  410916:	lods   al,BYTE PTR ds:[esi]
  410917:	daa    
  410918:	xor    al,0x4a
  41091a:	or     DWORD PTR [edx+0x62af1162],0xf
  410921:	shl    DWORD PTR [esi-0x9],0xd8
  410925:	dec    ebx
  410926:	pop    edx
  410927:	jb     0x41093f
  410929:	pop    ss
  41092a:	xchg   edx,eax
  41092b:	push   0x46d1c937
  410930:	push   eax
  410931:	fbld   TBYTE PTR [eax]
  410933:	dec    ecx
  410934:	out    dx,al
  410935:	in     eax,dx
  410936:	push   es
  410937:	inc    DWORD PTR [eax]
  410939:	and    al,0xae
  41093b:	or     al,0xf5
  41093d:	push   es
  41093e:	or     ah,BYTE PTR [esi+0x45]
  410941:	add    esi,DWORD PTR [ebp-0x12]
  410944:	cmp    bl,ch
  410946:	xchg   ebx,eax
  410947:	sub    edi,DWORD PTR [esi]
  410949:	je     0x4109ad
  41094b:	adc    al,0x4c
  41094d:	jl     0x41096f
  41094f:	add    ch,BYTE PTR [esi+0x4ebbbebc]
  410955:	imul   ebp,esp,0x60c30280
  41095b:	retf   0x3238
  41095e:	in     al,0xb7
  410960:	xchg   ebx,eax
  410961:	imul   esp,DWORD PTR [ebp+0x291c96f0],0xbf37a829
  41096b:	pushf  
  41096c:	imul   esi,DWORD PTR [ecx+esi*4+0x37],0x4ff1d23c
  410974:	aas    
  410975:	inc    ebx
  410976:	ds nop
  410978:	xor    DWORD PTR [edx],esi
  41097a:	aam    0x83
  41097c:	push   esi
  41097d:	retf   
  41097e:	test   al,0x55
  410980:	outs   dx,DWORD PTR ds:[esi]
  410981:	ins    DWORD PTR es:[edi],dx
  410982:	inc    ebx
  410983:	jmp    0x87a6:0xa2f68b34
  41098a:	dec    eax
  41098b:	out    0xaa,eax
  41098d:	outs   dx,DWORD PTR ds:[esi]
  41098e:	lahf   
  41098f:	mov    ebx,0xefced4e4
  410994:	push   ecx
  410995:	div    bl
  410997:	lahf   
  410998:	cmp    cl,BYTE PTR [esi]
  41099a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41099b:	out    dx,al
  41099c:	sub    esp,DWORD PTR [ecx+ebx*8]
  41099f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4109a0:	jbe    0x4109e2
  4109a2:	imul   ebp,DWORD PTR [ebx+0x26de91c9],0xc8d2ddb1
  4109ac:	fwait
  4109ad:	dec    esi
  4109ae:	mov    eax,ds:0x5db5eb1
  4109b3:	fbld   TBYTE PTR [ebx-0x62]
  4109b6:	or     DWORD PTR [eax],edx
  4109b8:	loop   0x410979
  4109ba:	fwait
  4109bb:	cdq    
  4109bc:	fcomp  DWORD PTR [ecx]
  4109be:	call   0xf50f:0x19cd865f
  4109c5:	pop    edx
  4109c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4109c7:	retf   0xd77a
  4109ca:	bound  edx,QWORD PTR [eax]
  4109cc:	cmp    DWORD PTR [eax+0x36798367],esp
  4109d2:	xor    cl,BYTE PTR [ebp+0x6b]
  4109d5:	dec    esp
  4109d6:	repz cs pop ebp
  4109d9:	stc    
  4109da:	mov    al,ds:0x4dbe6e95
  4109df:	test   eax,0x9d0ba6c0
  4109e4:	or     eax,0x375ea76d
  4109e9:	retf   
  4109ea:	xor    DWORD PTR [edi+0x68],edx
  4109ed:	cld    
  4109ee:	fild   WORD PTR [edx+0xb]
  4109f1:	cdq    
  4109f2:	sar    edx,1
  4109f4:	ror    BYTE PTR [edi+eax*8],0x5b
  4109f8:	add    DWORD PTR [edx],esp
  4109fa:	jle    0x410a42
  4109fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4109fd:	mov    dl,BYTE PTR [eax]
  4109ff:	ret    0x3b8c
  410a02:	shl    DWORD PTR [edi+esi*8+0x6b2ca74b],cl
  410a09:	push   0xfa5a10f7
  410a0e:	and    bh,BYTE PTR [ecx-0x1]
  410a11:	rep outs dx,DWORD PTR ds:[esi]
  410a13:	repz and DWORD PTR [esi],esi
  410a16:	sbb    dh,dl
  410a18:	xchg   esp,eax
  410a19:	and    ecx,DWORD PTR ds:0xec107f81
  410a1f:	mov    ch,0xdb
  410a21:	inc    edx
  410a22:	je     0x4109ff
  410a24:	fs dec ebp
  410a26:	enter  0x8771,0x4b
  410a2a:	dec    edx
  410a2b:	test   al,0x84
  410a2d:	jp     0x410a68
  410a2f:	sti    
  410a30:	sub    DWORD PTR [ecx+edi*2-0x5b],0x61
  410a35:	mov    al,ds:0x8695de80
  410a3a:	aas    
  410a3b:	(bad)  
  410a3c:	cmp    BYTE PTR [ebx],ch
  410a3e:	mov    dl,0x9e
  410a40:	bound  ebp,QWORD PTR [esi]
  410a42:	mov    ebp,0x14190893
  410a47:	js     0x4109c9
  410a49:	aad    0xf6
  410a4b:	mov    ebp,0x316f2ffa
  410a50:	test   cl,cl
  410a52:	mov    edx,0xcb1eacd8
  410a57:	stc    
  410a58:	sti    
  410a59:	or     eax,0x4568f29a
  410a5e:	loopne 0x410ab5
  410a60:	xchg   ecx,eax
  410a61:	lods   eax,DWORD PTR ds:[esi]
  410a62:	(bad)  
  410a63:	cwde   
  410a64:	or     DWORD PTR [edx+0x7f],eax
  410a67:	jge    0x410a2d
  410a69:	push   esp
  410a6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a6b:	or     cl,ch
  410a6d:	enter  0xbc2,0x8a
  410a71:	jg     0x410a2f
  410a73:	xor    dl,BYTE PTR [esi]
  410a75:	sub    eax,0x40ccc13d
  410a7a:	dec    ebx
  410a7b:	out    0x22,al
  410a7d:	push   ebx
  410a7e:	sbb    dh,BYTE PTR [esi+0x70ea98f6]
  410a84:	mov    bh,BYTE PTR [ebx+0x16]
  410a87:	cmp    DWORD PTR [edi],ebx
  410a89:	xchg   edx,eax
  410a8a:	imul   edi,DWORD PTR ss:[ebx],0x58
  410a8e:	mul    DWORD PTR [eax]
  410a90:	dec    edx
  410a91:	jecxz  0x410abf
  410a93:	imul   ebx,DWORD PTR [edi],0x86954933
  410a99:	mov    ecx,0x9e0f9bf3
  410a9e:	sub    cl,BYTE PTR [eax+ebx*4+0x7f28a310]
  410aa5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410aa6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410aa7:	mov    dl,0xf8
  410aa9:	sub    eax,0x37d00c3a
  410aae:	xchg   ebp,eax
  410aaf:	in     al,0x2b
  410ab1:	inc    ecx
  410ab2:	faddp  st(4),st
  410ab4:	dec    DWORD PTR [edx+edi*8+0x23]
  410ab8:	xor    dh,BYTE PTR [ecx+0x202a65c3]
  410abe:	bound  esi,QWORD PTR [ebx+0x43]
  410ac1:	gs in  eax,dx
  410ac3:	in     al,0x64
  410ac5:	sbb    BYTE PTR [ecx+0x8b27d6e],ah
  410acb:	inc    eax
  410acc:	dec    ebx
  410acd:	outs   dx,BYTE PTR ds:[esi]
  410ace:	add    DWORD PTR [ebp-0x38],esp
  410ad1:	test   al,0x82
  410ad3:	dec    ebp
  410ad4:	push   es
  410ad5:	(bad)  
  410ad6:	stos   BYTE PTR es:[edi],al
  410ad7:	mov    bl,0x4e
  410ad9:	add    eax,0xdded2dbe
  410ade:	shl    DWORD PTR [ecx+0x6],0x3b
  410ae2:	adc    BYTE PTR cs:[edi+ebx*1],al
  410ae6:	aas    
  410ae7:	cmp    DWORD PTR [ecx],edx
  410ae9:	add    ebx,DWORD PTR ds:0xfd7dc4bf
  410aef:	and    al,0x3a
  410af1:	in     eax,dx
  410af2:	inc    edx
  410af3:	lock push edi
  410af5:	ret    
  410af6:	pop    ss
  410af7:	(bad)  
  410af8:	ss pushf 
  410afa:	inc    ecx
  410afb:	dec    esi
  410afc:	std    
  410afd:	leavew 
  410aff:	enter  0x41bf,0xdf
  410b03:	test   eax,0xd3034fa2
  410b08:	adc    eax,0x2ed7f522
  410b0d:	popa   
  410b0e:	mov    bh,BYTE PTR [edi-0x1c]
  410b11:	cs stos DWORD PTR es:[edi],eax
  410b13:	sbb    BYTE PTR [ebx-0x5],0xd7
  410b17:	ja     0x410aaa
  410b19:	repz jg 0x410b0b
  410b1c:	adc    bl,BYTE PTR ds:0x8403be7f
  410b22:	xchg   esp,eax
  410b23:	sbb    eax,0x13f4cca4
  410b28:	push   0xf41b08ab
  410b2d:	cs fcmovnbe st,st(3)
  410b30:	push   ds
  410b31:	es mov edx,0x76bfceee
  410b37:	sar    ebx,cl
  410b39:	arpl   WORD PTR [ebx-0x16],si
  410b3c:	push   es
  410b3d:	and    esp,DWORD PTR [esi+ebp*4+0x66]
  410b41:	sti    
  410b42:	loopne 0x410b7e
  410b44:	push   0x7167fb4a
  410b49:	sar    esi,cl
  410b4b:	(bad)  
  410b4c:	ror    DWORD PTR [edi+0xb],cl
  410b4f:	add    dh,bh
  410b51:	fisub  WORD PTR [esi-0x76b35a56]
  410b57:	push   es
  410b58:	iret   
  410b59:	in     al,dx
  410b5a:	push   ebx
  410b5b:	icebp  
  410b5c:	mov    ch,0xb
  410b5e:	cmp    edi,0xffffffb4
  410b61:	int3   
  410b62:	mov    esi,0xecc0cdd8
  410b67:	ins    BYTE PTR es:[edi],dx
  410b68:	addr16 push 0xc2117c6
  410b6e:	add    eax,0x436628d4
  410b73:	xchg   edx,eax
  410b74:	sbb    BYTE PTR [edi-0x653e2c9a],0x95
  410b7b:	jbe    0x410b82
  410b7d:	fcmovnbe st,st(7)
  410b7f:	jnp    0x410bbb
  410b81:	cld    
  410b82:	call   0xcb86:0x82d41f62
  410b89:	mov    bh,0xe0
  410b8b:	outs   dx,BYTE PTR ds:[si]
  410b8d:	inc    ecx
  410b8e:	out    dx,eax
  410b8f:	rcl    edx,cl
  410b91:	mov    eax,ds:0xc92a6d6b
  410b96:	push   edx
  410b97:	jge    0x410bc0
  410b99:	mov    ebx,0xf2531f72
  410b9e:	call   0x8cef:0xdcf3a3d0
  410ba5:	cmp    bl,BYTE PTR [eax]
  410ba7:	pop    ebp
  410ba8:	inc    esp
  410ba9:	aas    
  410baa:	das    
  410bab:	cs aam 0xf6
  410bae:	xchg   edi,eax
  410baf:	out    dx,eax
  410bb0:	mov    ebx,ebp
  410bb2:	push   eax
  410bb3:	mov    esi,0x9d20de0c
  410bb8:	out    dx,eax
  410bb9:	jmp    0xdd07a95c
  410bbe:	adc    DWORD PTR ds:[ecx+edx*1+0x44],ebx
  410bc3:	in     eax,0xa1
  410bc5:	pushf  
  410bc6:	xchg   DWORD PTR [ebp-0x369d39f0],esp
  410bcc:	jp     0x410c41
  410bce:	add    ch,BYTE PTR [ecx+0x4b]
  410bd1:	sbb    eax,0x841952b2
  410bd6:	pop    es
  410bd7:	push   ds
  410bd8:	push   esp
  410bd9:	mov    edi,0xf99d5d1a
  410bde:	mov    ah,0xf9
  410be0:	pop    ebp
  410be1:	cli    
  410be2:	ins    BYTE PTR es:[di],dx
  410be4:	ret    0x502
  410be7:	aas    
  410be8:	sbb    esi,DWORD PTR [esi-0x4500d602]
  410bee:	and    BYTE PTR [edi-0xfd0575d],al
  410bf4:	jg     0x410b88
  410bf6:	(bad)  
  410bf9:	jne    0x410bbc
  410bfb:	jb     0x410b9b
  410bfd:	in     al,dx
  410bfe:	xor    BYTE PTR [ecx-0x7b1131d],ch
  410c04:	(bad)  
  410c05:	pushf  
  410c06:	retf   0x2907
  410c09:	or     DWORD PTR [ecx-0xb094123],ebp
  410c0f:	adc    eax,0xfd277359
  410c14:	ins    DWORD PTR es:[edi],dx
  410c15:	hlt    
  410c16:	adc    al,0x5e
  410c18:	xchg   esi,eax
  410c19:	inc    esp
  410c1a:	rcl    DWORD PTR [edx-0x8],0x65
  410c1e:	aam    0x69
  410c20:	pop    ss
  410c21:	pop    edx
  410c22:	jo     0x410bf8
  410c24:	push   ss
  410c25:	xor    DWORD PTR [esi],edx
  410c27:	test   BYTE PTR [ecx+0x7e],0xc8
  410c2b:	shr    DWORD PTR [ebp+0x44034db3],cl
  410c31:	xor    BYTE PTR [eax-0x3a4b9120],ah
  410c37:	jp     0x410beb
  410c39:	and    BYTE PTR [ecx],cl
  410c3b:	fcmovbe st,st(3)
  410c3d:	aam    0x13
  410c3f:	rol    BYTE PTR [edx+edx*1],1
  410c42:	pop    ss
  410c43:	(bad)  
  410c44:	into   
  410c45:	shr    DWORD PTR [ecx-0x1ebbd528],1
  410c4b:	mov    ah,0x4
  410c4d:	pop    ebp
  410c4e:	adc    dl,BYTE PTR [ecx+0x39ad98bd]
  410c54:	pop    edx
  410c55:	(bad)  
  410c56:	cwde   
  410c57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c58:	outs   dx,BYTE PTR ds:[esi]
  410c59:	dec    esi
  410c5a:	mov    ds:0x7c820db7,eax
  410c5f:	jnp    0x410c34
  410c61:	jmp    0x410c82
  410c63:	(bad)  
  410c65:	xchg   ecx,eax
  410c66:	aas    
  410c67:	into   
  410c68:	sub    eax,0xb92eb5ee
  410c6d:	xchg   ebx,eax
  410c6e:	pop    edx
  410c6f:	jle    0x410c6d
  410c71:	push   eax
  410c72:	imul   esp,DWORD PTR [ecx+edi*4],0xffffffcc
  410c76:	push   0x2f
  410c78:	lods   eax,DWORD PTR ds:[esi]
  410c79:	ror    esp,cl
  410c7b:	sub    ax,0x9a5f
  410c7f:	mov    edx,0x4510b873
  410c84:	iret   
  410c85:	hlt    
  410c86:	mov    bl,0x39
  410c88:	jae    0x410c2e
  410c8a:	add    eax,0xda9222b8
  410c8f:	retf   0x5a5c
  410c92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c93:	in     al,dx
  410c94:	push   0xfffffffa
  410c96:	fidivr DWORD PTR [edx]
  410c98:	add    BYTE PTR [ebx],al
  410c9a:	cli    
  410c9b:	and    al,0xb0
  410c9d:	pop    ss
  410c9e:	cs lock jo 0x410ca2
  410ca2:	in     eax,0xc4
  410ca4:	lods   al,BYTE PTR ds:[esi]
  410ca5:	xor    BYTE PTR [ebp+0x6c1125ce],0x36
  410cac:	mov    ebp,0x4ce9856e
  410cb1:	cmp    DWORD PTR [ebx+0x63],ecx
  410cb4:	daa    
  410cb5:	add    edi,DWORD PTR [edi]
  410cb7:	int    0x8b
  410cb9:	aas    
  410cba:	sub    eax,0x4ac5a0e1
  410cbf:	adc    DWORD PTR [ebp+0x63],ecx
  410cc2:	je     0x410cb7
  410cc4:	jmp    0x2c3e:0xfa8f0716
  410ccb:	ror    ebx,1
  410ccd:	clc    
  410cce:	imul   esi,DWORD PTR [eax],0xa432cf41
  410cd4:	adc    ah,BYTE PTR [edi+0x45]
  410cd7:	xor    DWORD PTR [ecx-0x4b],edx
  410cda:	and    eax,0x7365b613
  410cdf:	call   0x6e2fd377
  410ce4:	test   BYTE PTR [edi+ebp*8+0x307d7ffd],dh
  410ceb:	or     esp,eax
  410ced:	dec    esp
  410cee:	retf   0xdffb
  410cf1:	sub    DWORD PTR [ebp-0x41],ebx
  410cf4:	mov    edi,ecx
  410cf6:	shr    BYTE PTR [edi-0x34],cl
  410cf9:	inc    edi
  410cfa:	xor    eax,0xd426763f
  410cff:	fisubr WORD PTR [esi+ebx*8+0x1b32369f]
  410d06:	push   esp
  410d07:	mov    ecx,0xa3fc453d
  410d0c:	fs push es
  410d0e:	ror    DWORD PTR [ecx-0x33],cl
  410d11:	test   BYTE PTR [edi],ch
  410d13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d14:	shr    esp,0xcf
  410d17:	add    ecx,DWORD PTR [edx+0x4b]
  410d1a:	xor    DWORD PTR [edx],esi
  410d1c:	arpl   WORD PTR [esi+0x3cc0ed45],si
  410d22:	gs mov ebx,0x3291ce08
  410d28:	or     eax,0x6293bfbb
  410d2d:	shr    BYTE PTR [edx+0x74],1
  410d30:	and    al,0xed
  410d32:	jecxz  0x410da8
  410d34:	or     cl,ah
  410d36:	cwde   
  410d37:	jle    0x410d3a
  410d39:	movsx  ecx,WORD PTR [edi]
  410d3c:	xor    eax,0x832caae6
  410d41:	aaa    
  410d42:	imul   ebp,DWORD PTR [ecx],0xae54078d
  410d48:	cmp    esi,DWORD PTR ds:[edi]
  410d4b:	jge    0x410d99
  410d4d:	arpl   WORD PTR [edx+edi*8-0x48],bx
  410d51:	out    dx,al
  410d52:	sbb    BYTE PTR [esi+edi*4+0x51],0xe6
  410d57:	sub    edx,DWORD PTR [edi+0xe]
  410d5a:	mov    ecx,0x4c4ce6ac
  410d60:	lds    ecx,FWORD PTR [eax+0x34]
  410d63:	leave  
  410d64:	in     eax,0xe
  410d66:	retf   0x6192
  410d69:	jmp    0x8a3b909a
  410d6e:	push   edi
  410d6f:	aad    0x46
  410d71:	and    DWORD PTR [ebx+ebx*1-0x451b2443],0x33
  410d79:	out    dx,eax
  410d7a:	aas    
  410d7b:	dec    esp
  410d7c:	push   0xffffffe1
  410d7e:	pop    ebp
  410d7f:	pop    ebp
  410d80:	hlt    
  410d81:	ins    BYTE PTR es:[edi],dx
  410d82:	(bad)  
  410d83:	mov    cl,0x5e
  410d85:	fist   WORD PTR [edi+0x4c59f164]
  410d8b:	fisub  WORD PTR [eax+esi*8]
  410d8e:	test   BYTE PTR [eax+0x6d],al
  410d91:	pop    ss
  410d92:	call   0x41117134
  410d97:	mov    BYTE PTR [ebp+esi*8-0x2b37954c],al
  410d9e:	loop   0x410df7
  410da0:	inc    edx
  410da1:	clc    
  410da2:	rol    DWORD PTR [edi+0x73],0xc2
  410da6:	add    DWORD PTR [edi+0x6ac7ef8d],esp
  410dac:	add    DWORD PTR [ebx],ecx
  410dae:	pop    eax
  410daf:	mov    ah,0x79
  410db1:	pop    esi
  410db2:	adc    DWORD PTR [edx+0x1ef254],edx
  410db8:	nop
  410db9:	cmp    al,0x2a
  410dbb:	sub    al,0x43
  410dbd:	lods   al,BYTE PTR ds:[esi]
  410dbe:	lods   eax,DWORD PTR ds:[esi]
  410dbf:	sub    eax,0x446543af
  410dc4:	jmp    0x410d5e
  410dc6:	or     al,0x1
  410dc8:	loop   0x410df3
  410dca:	pop    eax
  410dcb:	iret   
  410dcc:	popa   
  410dcd:	mov    dh,0xc4
  410dcf:	outs   dx,DWORD PTR ds:[esi]
  410dd0:	xchg   BYTE PTR [edi-0x1dca49c4],al
  410dd6:	out    dx,al
  410dd7:	std    
  410dd8:	std    
  410dd9:	ins    DWORD PTR es:[edi],dx
  410dda:	ret    0xc56c
  410ddd:	fcomp  DWORD PTR [esi]
  410ddf:	mov    dl,0xcb
  410de1:	clc    
  410de2:	(bad)  
  410de3:	jnp    0x410dbd
  410de5:	inc    ebx
  410de6:	mov    dh,BYTE PTR [eax+0x433a8bbe]
  410dec:	xor    al,0xd2
  410dee:	jmp    0x410dee
  410df0:	sbb    bh,BYTE PTR [esi-0x7b]
  410df3:	fs mov esi,0x32622615
  410df9:	jbe    0x410da4
  410dfb:	mov    ebp,0x29a1204f
  410e00:	adc    ebx,DWORD PTR [eax+0xa2925d0]
  410e06:	and    ch,BYTE PTR [ebx-0x7049b21f]
  410e0c:	or     BYTE PTR [ebx],cl
  410e0e:	sti    
  410e0f:	xchg   esi,eax
  410e10:	adc    ecx,0x6d
  410e13:	dec    ecx
  410e14:	add    cl,BYTE PTR [ebx+edi*4+0x1942eeeb]
  410e1b:	sahf   
  410e1c:	pop    ecx
  410e1d:	mov    bh,0xf2
  410e1f:	test   bl,0xe8
  410e22:	mov    ds:0x7a7dd7f2,eax
  410e27:	jp     0x410e62
  410e29:	inc    ebp
  410e2a:	ret    0x8b27
  410e2d:	(bad)  
  410e2e:	nop
  410e2f:	mov    eax,ds:0x8b5bb288
  410e34:	call   0x7880:0xc7ba06b0
  410e3b:	rol    DWORD PTR [edi],0x1a
  410e3e:	xchg   edi,eax
  410e3f:	add    BYTE PTR [esi+eiz*1],0x32
  410e43:	dec    esi
  410e44:	mov    DWORD PTR [esp+eiz*4-0x43],ebp
  410e48:	xor    ah,cl
  410e4a:	ins    DWORD PTR es:[edi],dx
  410e4b:	adc    BYTE PTR [ecx+0x34],bh
  410e4e:	pop    eax
  410e4f:	stos   DWORD PTR es:[edi],eax
  410e50:	add    bl,BYTE PTR [ebx]
  410e52:	push   0x14f30dec
  410e57:	inc    esp
  410e58:	xchg   ebx,eax
  410e59:	ficom  WORD PTR [esp+edx*2]
  410e5c:	cmc    
  410e5d:	mov    DWORD PTR [eax+ebp*4+0x3e],edi
  410e61:	push   ss
  410e62:	adc    al,0xf
  410e64:	add    DWORD PTR [edi],0x3a
  410e67:	cmp    DWORD PTR [edi-0x4b],ebp
  410e6a:	add    eax,0x8cf0c5a4
  410e6f:	fs push edi
  410e71:	bound  ebp,QWORD PTR [eax-0x3f]
  410e74:	lea    ebx,[esi+0x107f5928]
  410e7a:	int3   
  410e7b:	mov    ebp,edx
  410e7d:	adc    eax,0xcddbd429
  410e82:	mov    ds:0x257e8480,al
  410e87:	fadd   st(6),st
  410e89:	dec    esp
  410e8a:	xchg   ebp,eax
  410e8b:	xor    DWORD PTR [esi+edi*2+0x7710fe56],edi
  410e92:	pop    ds
  410e93:	pop    ebx
  410e94:	jae    0x410eca
  410e96:	or     ah,bl
  410e98:	daa    
  410e99:	sub    BYTE PTR [edx-0x50],cl
  410e9c:	daa    
  410e9d:	jle    0x410ef0
  410e9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ea0:	adc    eax,0x96bfed9
  410ea5:	push   0x9eebe674
  410eaa:	ins    DWORD PTR es:[edi],dx
  410eab:	mov    edx,0x8f18de70
  410eb0:	repnz rol DWORD PTR [ecx-0x59be5d04],0x2a
  410eb8:	addr16 and eax,0xb32ef4a8
  410ebe:	ret    
  410ebf:	mov    edi,eax
  410ec1:	fimul  WORD PTR [esp+ebx*1-0x4f]
  410ec5:	into   
  410ec6:	pop    ds
  410ec7:	and    cl,bl
  410ec9:	push   0x28c47399
  410ece:	xchg   ecx,eax
  410ecf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ed0:	sbb    al,0x85
  410ed2:	inc    ebp
  410ed3:	sub    al,0xfa
  410ed5:	pop    edx
  410ed6:	adc    ch,dh
  410ed8:	mov    dl,0x77
  410eda:	das    
  410edb:	hlt    
  410edc:	fisub  DWORD PTR es:[ebp+0x51397a0d]
  410ee3:	xchg   ecx,eax
  410ee4:	ins    BYTE PTR es:[edi],dx
  410ee5:	fcmovne st,st(7)
  410ee7:	adc    eax,0x904e5c08
  410eec:	out    0x7e,eax
  410eee:	int3   
  410eef:	mov    DWORD PTR [eax+0x6c785071],eax
  410ef5:	push   esi
  410ef6:	dec    ebp
  410ef7:	sbb    eax,0xc082e2b1
  410efc:	push   edx
  410efd:	mov    esi,0x293e08c3
  410f02:	jbe    0x410f3f
  410f04:	pushf  
  410f05:	push   ebp
  410f06:	sbb    eax,0xc1db729f
  410f0b:	mov    BYTE PTR [ebx-0x2e],bl
  410f0e:	jo     0x410eb4
  410f10:	pop    ebx
  410f11:	and    BYTE PTR [esi-0x3d],bh
  410f14:	dec    esi
  410f15:	outs   dx,DWORD PTR ds:[esi]
  410f16:	or     DWORD PTR [ebx],esp
  410f18:	cmc    
  410f19:	pop    edx
  410f1a:	imul   ebx,DWORD PTR [edi],0x44502d9f
  410f20:	lock jae 0x410f9a
  410f23:	sbb    dh,BYTE PTR [edx]
  410f25:	iret   
  410f26:	fldenv [edi+0x679a3b87]
  410f2c:	jns    0x410f84
  410f2e:	mov    ebp,0xadb1837a
  410f33:	mov    ch,0x47
  410f35:	jmp    0x5078ba35
  410f3a:	xor    esi,ebx
  410f3c:	and    BYTE PTR [edx],dh
  410f3e:	pop    edx
  410f3f:	imul   ecx,DWORD PTR [ebx],0xfffffff6
  410f42:	cdq    
  410f43:	inc    ebp
  410f44:	clc    
  410f45:	add    eax,0xdeca945a
  410f4a:	popa   
  410f4b:	mov    ecx,0xa9e4f8f2
  410f50:	sub    ch,BYTE PTR [eax]
  410f52:	je     0x410f2e
  410f54:	xor    BYTE PTR [edi-0x630b705c],dl
  410f5a:	adc    eax,0x62b41d15
  410f5f:	pushf  
  410f60:	sbb    al,cl
  410f62:	test   BYTE PTR [esi-0x65a61227],ch
  410f68:	xchg   ebp,eax
  410f69:	sar    DWORD PTR [ebx-0x4],0xf2
  410f6d:	(bad)  
  410f6e:	jge    0x410f66
  410f70:	pop    ds
  410f71:	cmp    DWORD PTR [eax],esp
  410f73:	push   ebx
  410f74:	in     al,dx
  410f75:	or     bh,BYTE PTR [esi-0x2350a0c5]
  410f7b:	and    eax,0x3d69a704
  410f80:	gs push ebx
  410f82:	dec    esp
  410f83:	scas   eax,DWORD PTR es:[edi]
  410f84:	xchg   BYTE PTR [eax+eax*4],dh
  410f87:	popa   
  410f88:	into   
  410f89:	dec    ecx
  410f8a:	adc    eax,0x434d5d6
  410f8f:	mov    ecx,0xf7466158
  410f94:	(bad)  
  410f95:	add    bh,al
  410f97:	dec    BYTE PTR [esi-0x6bf45a1b]
  410f9d:	xor    esp,DWORD PTR ds:0x8ca430cc
  410fa3:	jl     0x410fb8
  410fa5:	mov    ebp,DWORD PTR [esi+0x57]
  410fa8:	stos   BYTE PTR es:[edi],al
  410fa9:	enter  0x6a7b,0xb3
  410fad:	test   al,0xeb
  410faf:	mov    ebp,esp
  410fb1:	pop    ebp
  410fb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410fb3:	push   0x90e2e388
  410fb8:	xor    eax,DWORD PTR [edx-0x5f88faac]
  410fbe:	and    ebx,DWORD PTR [ebx+0x47606fe5]
  410fc4:	stos   BYTE PTR es:[edi],al
  410fc5:	nop
  410fc6:	cli    
  410fc7:	rol    al,0x1
  410fca:	retf   0xe248
  410fcd:	mov    eax,ebx
  410fcf:	outs   dx,DWORD PTR ds:[esi]
  410fd0:	dec    ebx
  410fd1:	test   eax,0x8ad428d9
  410fd6:	(bad)  
  410fd8:	or     dl,cl
  410fda:	(bad)  
  410fdb:	xlat   BYTE PTR ds:[ebx]
  410fdc:	in     al,dx
  410fdd:	sbb    bh,dl
  410fdf:	add    BYTE PTR [edx+0x22ceae23],0xa
  410fe6:	cmc    
  410fe7:	js     0x411031
  410fe9:	lahf   
  410fea:	hlt    
  410feb:	push   ebx
  410fec:	js     0x411015
  410fee:	push   0x3bcf428a
  410ff3:	xor    ecx,DWORD PTR [ecx+0x4]
  410ff6:	call   0xd7c7:0xa2a36a8a
  410ffd:	stc    
  410ffe:	cmc    
  410fff:	mov    ch,0x9d
  411001:	imul   ebp,DWORD PTR [edi+0x5b],0xffffffcb
  411005:	mov    eax,0x25896808
  41100a:	lea    ecx,[ebx]
  41100c:	inc    edi
  41100d:	bound  ebp,QWORD PTR [edx+0x6b]
  411010:	pop    esp
  411011:	inc    ebx
  411012:	cld    
  411013:	adc    eax,DWORD PTR [ebx-0x67a41317]
  411019:	mov    ds:0xa9c1b726,eax
  41101e:	jns    0x41102c
  411020:	mov    bh,0xde
  411022:	imul   esi,DWORD PTR [ecx],0xafeff8b5
  411028:	test   al,0xf5
  41102a:	jecxz  0x411058
  41102c:	pop    ds
  41102d:	lods   al,BYTE PTR ds:[esi]
  41102e:	and    dl,dh
  411030:	inc    eax
  411031:	ja     0x411080
  411033:	(bad)  
  411034:	shl    DWORD PTR [eax],0x7d
  411037:	push   ss
  411038:	jmp    0x816:0xd23dd9a5
  41103f:	sbb    DWORD PTR [edi],esp
  411041:	loop   0x4110a9
  411043:	retf   
  411044:	and    eax,0x827691b7
  411049:	loop   0x410fdf
  41104b:	mov    ch,0x1a
  41104d:	or     esi,ebx
  41104f:	ret    0xb6f7
  411052:	cmp    ch,dh
  411054:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411055:	mov    al,ds:0xefdb7220
  41105a:	jle    0x410feb
  41105c:	in     eax,dx
  41105d:	adc    eax,0x7ce7a332
  411062:	pop    ebp
  411063:	mov    cl,0x6
  411065:	mov    bh,0xc4
  411067:	mov    esi,0x3cd0c086
  41106c:	jl     0x4110a5
  41106e:	scas   eax,DWORD PTR es:[edi]
  41106f:	pop    ebp
  411070:	int    0xfa
  411072:	sub    BYTE PTR [edx-0x47],ah
  411075:	dec    esp
  411076:	push   cs
  411077:	das    
  411078:	(bad)  
  411079:	out    0x22,eax
  41107b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41107c:	icebp  
  41107d:	mov    dl,0x2b
  41107f:	pop    ecx
  411080:	adc    ecx,ebx
  411082:	pop    ebp
  411083:	sub    DWORD PTR [edx-0x11],eax
  411086:	xor    eax,0xd5184d56
  41108b:	jo     0x41104a
  41108d:	push   edi
  41108e:	fsubr  QWORD PTR [esi+0x1c272fd8]
  411094:	mov    ?,WORD PTR es:[edi]
  411097:	add    eax,0x7fa64e85
  41109c:	rol    BYTE PTR [edi+edi*4-0x51],1
  4110a0:	pop    ss
  4110a1:	in     eax,0xd4
  4110a3:	sub    BYTE PTR [edx-0x22ab51f6],bh
  4110a9:	enter  0x6a9f,0xda
  4110ad:	xor    BYTE PTR [esi+0x26abd5e6],dh
  4110b3:	sahf   
  4110b4:	cmc    
  4110b5:	das    
  4110b6:	bound  edi,QWORD PTR [ecx+ecx*4+0x72]
  4110ba:	inc    esp
  4110bb:	push   edx
  4110bc:	gs cmp eax,0x47df97f1
  4110c2:	js     0x411102
  4110c4:	(bad)  
  4110c5:	pop    esi
  4110c6:	xchg   ecx,eax
  4110c7:	jb     0x411091
  4110c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110ca:	loopne 0x4110e7
  4110cc:	mov    dl,0x86
  4110ce:	jb     0x4110dc
  4110d0:	jl     0x41111b
  4110d2:	sub    esp,DWORD PTR [eax]
  4110d4:	mov    ebx,0xce45870d
  4110d9:	lea    esp,ds:0xb1410dfc
  4110df:	xchg   edi,eax
  4110e0:	(bad)  
  4110e1:	std    
  4110e2:	call   0xdcdb0914
  4110e7:	in     al,dx
  4110e8:	(bad)  
  4110e9:	adc    DWORD PTR [eax-0x4d],ebp
  4110ec:	fld    QWORD PTR [edi]
  4110ee:	sub    dl,BYTE PTR [edi-0xa]
  4110f1:	arpl   WORD PTR [ebx],ax
  4110f3:	dec    edi
  4110f4:	mov    eax,ss
  4110f6:	iret   
  4110f7:	or     eax,DWORD PTR [edi]
  4110f9:	add    ebx,DWORD PTR [ebp-0x5045bbd9]
  4110ff:	mov    eax,ds:0x9b2a65e1
  411104:	sub    ebx,DWORD PTR [esi-0x59]
  411107:	outs   dx,BYTE PTR ds:[esi]
  411108:	xor    DWORD PTR [ebx-0xb65550a],0xffffffc3
  41110f:	cdq    
  411110:	jecxz  0x411182
  411112:	jge    0x4110e7
  411114:	mov    dl,0x18
  411116:	fdiv   st(7),st
  411118:	pop    esp
  411119:	lock inc esi
  41111b:	stc    
  41111c:	sbb    al,al
  41111e:	(bad)  
  411120:	inc    edx
  411121:	ds mov bh,0x7d
  411124:	xor    BYTE PTR [eax+0x355715cb],al
  41112a:	call   0xd018448b
  41112f:	add    esp,DWORD PTR ds:0x9995360c
  411135:	jnp    0x41112d
  411137:	inc    esp
  411138:	scas   al,BYTE PTR es:[edi]
  411139:	stos   BYTE PTR es:[edi],al
  41113a:	pop    esi
  41113b:	arpl   WORD PTR ss:[edx-0x19978f13],di
  411142:	jl     0x4110d3
  411144:	push   edi
  411145:	mov    ecx,0x28fbe80f
  41114a:	aaa    
  41114b:	mov    ds:0xc15ad3f3,eax
  411150:	icebp  
  411151:	les    eax,FWORD PTR [edx-0x1]
  411154:	pop    esp
  411155:	stos   DWORD PTR es:[edi],eax
  411156:	adc    DWORD PTR [edi],ecx
  411158:	movd   DWORD PTR [ebx-0x2e],mm6
  41115c:	sub    DWORD PTR [esi],edx
  41115e:	jge    0x4111b9
  411160:	dec    edx
  411161:	push   eax
  411162:	push   ebx
  411163:	or     eax,0x8b56ffb8
  411168:	pop    es
  411169:	add    al,0x80
  41116b:	loop   0x41113e
  41116d:	mov    edx,0x345da160
  411172:	mov    ecx,0xa8f45983
  411177:	xchg   esi,eax
  411178:	adc    al,0x86
  41117a:	aas    
  41117b:	or     BYTE PTR [eax+0x45],0x2f
  41117f:	pop    ss
  411180:	cmp    ch,BYTE PTR ds:0x36968081
  411186:	call   0xb8ba:0xbecbc2f9
  41118d:	adc    esp,DWORD PTR [ebx+0x42775ff6]
  411193:	xor    eax,0xe3ee4af3
  411198:	bound  edi,QWORD PTR ds:0xd7ea948f
  41119e:	cs aam 0xd
  4111a1:	ins    DWORD PTR es:[edi],dx
  4111a2:	jmp    0x411129
  4111a4:	imul   BYTE PTR [ebp-0x3f]
  4111a7:	cmp    ah,0x65
  4111aa:	cmp    eax,0x6470ecd6
  4111af:	jle    0x411205
  4111b1:	adc    eax,0x3759a4f1
  4111b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4111b7:	test   al,0xbe
  4111b9:	out    0x98,al
  4111bb:	mov    al,0x33
  4111bd:	pop    ss
  4111be:	cmp    DWORD PTR [eax+0x364d2aeb],0x4e
  4111c5:	int3   
  4111c6:	adc    eax,0x751176ab
  4111cb:	xchg   ecx,eax
  4111cc:	pop    eax
  4111cd:	pop    edx
  4111ce:	cmp    bl,0x4
  4111d1:	jl     0x41124e
  4111d3:	cmp    eax,0x5d44ab60
  4111d8:	std    
  4111d9:	and    DWORD PTR ss:[ecx-0x5e],esp
  4111dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111de:	lock add eax,0xcc6ecf8
  4111e4:	ret    
  4111e5:	mov    cl,0xb
  4111e7:	push   edi
  4111e8:	fisttp DWORD PTR [ebx+0x251743ad]
  4111ee:	shr    DWORD PTR [bx+di+0x1a],cl
  4111f2:	jp     0x411208
  4111f4:	fistp  QWORD PTR [esi-0x6319a93]
  4111fa:	jbe    0x41120f
  4111fc:	sbb    al,0x85
  4111fe:	sbb    eax,0x989bf6ae
  411203:	dec    ebp
  411204:	pop    edi
  411205:	stos   BYTE PTR es:[edi],al
  411206:	imul   di,bp,0xb6a6
  41120b:	inc    eax
  41120c:	sbb    BYTE PTR [eax],bh
  41120e:	mov    al,ds:0x9c7f12d0
  411213:	and    DWORD PTR [eax+0x56],esp
  411216:	xchg   ebp,eax
  411217:	xchg   sp,ax
  411219:	and    esi,DWORD PTR [edi]
  41121b:	or     eax,0xff60f4c
  411220:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411221:	ror    DWORD PTR [ecx+0x165adafd],cl
  411227:	ror    ebx,0xbd
  41122a:	std    
  41122b:	aad    0x1c
  41122d:	sub    eax,0xca09d946
  411232:	xchg   edi,eax
  411233:	dec    ecx
  411234:	xor    ecx,edi
  411236:	mov    esi,DWORD PTR [ecx]
  411238:	pop    ebp
  411239:	sub    dh,bh
  41123b:	lock jge 0x411266
  41123e:	xchg   edi,eax
  41123f:	sub    edx,edi
  411241:	bound  edi,QWORD PTR [edx]
  411243:	aam    0xf0
  411245:	aam    0x55
  411247:	clc    
  411248:	cmp    eax,0xbfc6001f
  41124d:	xor    BYTE PTR [ecx],dl
  41124f:	popf   
  411250:	out    dx,eax
  411251:	(bad)  
  411252:	cmp    DWORD PTR [esi+0x56],esi
  411255:	repz data16 fld QWORD PTR [ecx]
  411259:	imul   ebp,esi,0xda456fe
  41125f:	out    0x48,al
  411261:	fidivr DWORD PTR [ebp+0x1edd38e4]
  411267:	pop    ds
  411268:	cmc    
  411269:	mov    ah,0x31
  41126b:	dec    esi
  41126c:	fcmovne st,st(7)
  41126e:	popf   
  41126f:	jo     0x411262
  411271:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411272:	pusha  
  411273:	sbb    bl,cl
  411275:	dec    DWORD PTR [edx]
  411277:	lods   eax,DWORD PTR ds:[esi]
  411278:	lahf   
  411279:	mov    bh,0x11
  41127b:	shl    BYTE PTR [ecx-0x6a],1
  41127e:	inc    edx
  41127f:	ret    0x61b4
  411282:	aam    0xfc
  411284:	dec    esi
  411285:	fdivr  DWORD PTR [ebx-0x2487794b]
  41128b:	mov    esi,0xb8840d90
  411290:	out    dx,eax
  411291:	pop    edx
  411292:	dec    esp
  411293:	mov    ah,0xa2
  411295:	push   esi
  411296:	(bad)  
  411298:	mov    ?,esi
  41129a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41129b:	ds retw 
  41129e:	mov    esp,0x86c752dc
  4112a3:	mov    dh,0x62
  4112a5:	gs int 0xe8
  4112a8:	rcl    esp,0x0
  4112ab:	idiv   BYTE PTR [edi]
  4112ad:	mov    bl,0x45
  4112af:	inc    BYTE PTR [edx+0x20e478d0]
  4112b5:	inc    ebx
  4112b6:	or     ebp,edx
  4112b8:	mov    cl,0xf0
  4112ba:	pop    ebx
  4112bb:	sbb    edx,DWORD PTR [ecx+0x7f10d782]
  4112c1:	adc    eax,DWORD PTR [edi-0x24]
  4112c4:	leave  
  4112c5:	jle    0x411295
  4112c7:	repz test BYTE PTR [esi-0x5ef6710d],0x9
  4112cf:	mov    cl,0x68
  4112d1:	cmp    cl,BYTE PTR [eax]
  4112d3:	jg     0x4112ad
  4112d5:	dec    ecx
  4112d6:	mov    al,0xe
  4112d8:	xchg   edi,eax
  4112d9:	cmp    BYTE PTR [ebp+0x4],0x92
  4112dd:	pop    es
  4112de:	or     BYTE PTR [ecx-0x36],ah
  4112e1:	jno    0x411305
  4112e3:	mov    al,ds:0x96bafa05
  4112e8:	and    BYTE PTR [esi+0x4a],0xc3
  4112ec:	sub    DWORD PTR ds:0xcf5a1ee,esi
  4112f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4112f3:	(bad)  
  4112f5:	mov    ds,WORD PTR fs:[esi-0x56cc4ef6]
  4112fc:	sbb    edx,DWORD PTR [ecx]
  4112fe:	jns    0x411352
  411300:	ins    DWORD PTR es:[edi],dx
  411301:	add    eax,0x825d9d95
  411306:	mov    edi,0x2c3b70eb
  41130b:	adc    al,0xda
  41130d:	repnz clc 
  41130f:	mov    WORD PTR [eax+eiz*2-0x27],ss
  411313:	call   0x3748:0xee828d0
  41131a:	pop    eax
  41131b:	dec    ebx
  41131c:	pop    ebx
  41131d:	aad    0xc7
  41131f:	jg     0x4112e3
  411321:	xchg   edi,eax
  411322:	scas   al,BYTE PTR es:[edi]
  411323:	xor    BYTE PTR [eax],bl
  411325:	fs push ss
  411327:	xchg   DWORD PTR ds:0xacc75b53,ebp
  41132d:	pop    esp
  41132e:	xor    BYTE PTR [edi-0x4954ec50],0xa
  411335:	xor    al,0xb8
  411337:	les    ebx,FWORD PTR [edi]
  411339:	dec    ebx
  41133a:	add    al,0x1a
  41133c:	int3   
  41133d:	sahf   
  41133e:	pop    edi
  41133f:	xchg   esi,eax
  411340:	retf   
  411341:	pop    esi
  411342:	mov    ebx,0x43d8b826
  411347:	adc    dl,BYTE PTR [ebp+0x7ed4f646]
  41134d:	stos   DWORD PTR es:[edi],eax
  41134e:	mov    dh,0x57
  411350:	jl     0x411315
  411352:	mov    DWORD PTR [edx-0x6e3839a7],esp
  411358:	aas    
  411359:	fbstp  TBYTE PTR ds:0x658b0e81
  41135f:	aas    
  411360:	call   0x6ca8d54c
  411365:	je     0x411360
  411367:	mov    dh,0x8c
  411369:	jbe    0x41138a
  41136b:	mov    bl,0x17
  41136d:	shl    BYTE PTR [ebx+eiz*1-0x6a619c32],0xa8
  411375:	cli    
  411376:	test   al,0x2a
  411378:	(bad)  
  411379:	xchg   esi,eax
  41137a:	js     0x41136e
  41137c:	in     eax,dx
  41137d:	iret   
  41137e:	lds    eax,FWORD PTR [esi-0x16]
  411381:	ret    0xb3a0
  411384:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411385:	pop    ebp
  411386:	sbb    bh,cl
  411388:	sbb    al,0x97
  41138a:	sub    esp,eax
  41138c:	sahf   
  41138d:	(bad)  
  41138e:	push   cs
  41138f:	ss daa 
  411391:	les    ebp,FWORD PTR [ebp-0xafe4bfe]
  411397:	dec    ebx
  411398:	cld    
  411399:	int    0xb3
  41139b:	add    dl,BYTE PTR [ecx]
  41139d:	stc    
  41139e:	pop    ecx
  41139f:	and    eax,0x916b87b5
  4113a4:	push   0x5f494433
  4113a9:	retf   0x6c56
  4113ac:	sbb    ch,BYTE PTR [ebp+0x1f6b6f69]
  4113b2:	fadd   QWORD PTR [ecx+esi*8]
  4113b5:	retf   
  4113b6:	dec    eax
  4113b7:	or     ch,0xcb
  4113ba:	sti    
  4113bb:	(bad)  
  4113bd:	out    0x11,eax
  4113bf:	daa    
  4113c0:	lods   al,BYTE PTR ds:[esi]
  4113c1:	cmp    edi,DWORD PTR ss:[ecx+0x5e]
  4113c5:	or     eax,0x865f42f0
  4113ca:	jno    0x411438
  4113cc:	call   0xeeb4:0xf370ba26
  4113d3:	in     eax,0x5e
  4113d5:	aaa    
  4113d6:	fild   QWORD PTR [edi-0x7b686589]
  4113dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4113dd:	call   FWORD PTR [ecx-0x6cf77ba0]
  4113e3:	les    ecx,FWORD PTR [ecx]
  4113e5:	push   esp
  4113e6:	jg     0x4113c8
  4113e8:	(bad)  
  4113e9:	mov    esp,0x4f12ea50
  4113ee:	sub    eax,0x93e7146a
  4113f3:	xor    al,0xf4
  4113f5:	pop    ecx
  4113f6:	mov    esp,0xf9ec2c9
  4113fb:	je     0x4113b6
  4113fd:	cs pop esi
  4113ff:	adc    al,0x89
  411401:	and    ah,BYTE PTR [edi-0x7e]
  411404:	ret    
  411405:	cmp    eax,0x4f397d3b
  41140a:	ret    
  41140b:	xchg   ecx,eax
  41140c:	jne    0x4113cf
  41140e:	cdq    
  41140f:	push   ss
  411410:	shr    DWORD PTR [edx+0x23a9df71],cl
  411416:	cwde   
  411417:	xor    BYTE PTR [edi+0x857456a],ah
  41141d:	pop    ds
  41141e:	cli    
  41141f:	and    al,0x82
  411421:	sbb    BYTE PTR [esi],ch
  411423:	adc    al,0xba
  411425:	dec    esp
  411426:	fdivr  DWORD PTR [eax+edi*1-0x68b4ae43]
  41142d:	pop    esp
  41142e:	ret    0xaf02
  411431:	cmp    eax,0xf985934f
  411436:	sub    ebx,DWORD PTR [esi]
  411438:	cdq    
  411439:	sbb    al,0x83
  41143b:	dec    ebp
  41143c:	mov    ds:0x37f6cea7,al
  411441:	or     ah,BYTE PTR [esi+ecx*4]
  411444:	push   edi
  411445:	ins    DWORD PTR es:[edi],dx
  411446:	cdq    
  411447:	mov    DWORD PTR [ebp+0x78],ecx
  41144a:	stos   DWORD PTR es:[edi],eax
  41144b:	(bad)  
  41144d:	mov    WORD PTR [ebp+ebp*1+0x26],gs
  411451:	push   0x1fe2d853
  411456:	and    edx,DWORD PTR [edi]
  411458:	mov    ds:0xf9ba1aec,al
  41145d:	cld    
  41145e:	pop    eax
  41145f:	cmp    eax,0x92082a06
  411464:	push   0xc08d67c8
  411469:	pop    ebp
  41146a:	xchg   BYTE PTR gs:[eax-0x28],al
  41146e:	jns    0x411427
  411470:	aam    0x86
  411472:	and    eax,0x8b90bea6
  411477:	push   ds
  411478:	ds adc bl,bh
  41147b:	mov    bl,0x37
  41147d:	outs   dx,BYTE PTR ds:[esi]
  41147e:	test   al,0x9d
  411480:	jns    0x41142a
  411482:	out    0xeb,al
  411484:	adc    esp,DWORD PTR [edi]
  411486:	pop    esp
  411487:	inc    BYTE PTR [eax]
  411489:	pop    es
  41148a:	cmp    BYTE PTR [edx],dl
  41148c:	mov    ecx,0x1e820bcc
  411491:	in     eax,dx
  411492:	adc    al,0xe7
  411494:	jo     0x411472
  411496:	inc    esp
  411497:	loopne 0x41143c
  411499:	inc    edx
  41149a:	mov    ds:0x93684ef7,al
  41149f:	hlt    
  4114a0:	daa    
  4114a1:	jmp    0x9e71b121
  4114a6:	arpl   WORD PTR [edi+0xa],bx
  4114a9:	lods   al,BYTE PTR ds:[esi]
  4114aa:	cmp    BYTE PTR ss:[esi],ah
  4114ad:	cmp    BYTE PTR ds:0xbe5fa321,cl
  4114b3:	int3   
  4114b4:	sub    BYTE PTR ds:0x8bcc6b84,0xc
  4114bb:	fcomi  st,st(5)
  4114bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4114be:	nop
  4114bf:	adc    ebp,DWORD PTR [ebp-0x7bb37884]
  4114c5:	jo     0x411542
  4114c7:	adc    eax,0x769381ab
  4114cc:	std    
  4114cd:	or     al,0x1b
  4114cf:	in     eax,dx
  4114d0:	popa   
  4114d1:	cwde   
  4114d2:	daa    
  4114d3:	and    DWORD PTR [esi+0x2d562ae4],edx
  4114d9:	add    eax,0x82cb0259
  4114de:	adc    BYTE PTR fs:[esi],ah
  4114e1:	xchg   ebp,eax
  4114e2:	mov    WORD PTR [esp+eax*8-0x68],cs
  4114e6:	jae    0x4114cd
  4114e8:	jl     0x4114f1
  4114ea:	sub    eax,0xade712a7
  4114ef:	push   0xf1ebc4b7
  4114f4:	mov    WORD PTR [eax+edx*4+0x31a975d1],fs
  4114fb:	mov    WORD PTR [edi-0x18b3fe8],fs
  411501:	(bad)  
  411502:	call   0x26a8c912
  411507:	retf   
  411508:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411509:	mov    ch,0xa1
  41150b:	jmp    0xe61c965b
  411510:	fisub  WORD PTR [eax]
  411512:	cmp    eax,0xab0ff200
  411517:	lds    ebx,FWORD PTR [eax-0xac8fdee]
  41151d:	stc    
  41151e:	fistp  DWORD PTR [eax]
  411520:	push   ebx
  411521:	shr    DWORD PTR [esi+0x55dd7c01],cl
  411527:	addr16 pop ds
  411529:	cmp    BYTE PTR [ecx-0x50],dh
  41152c:	cmp    al,0x77
  41152e:	sub    eax,DWORD PTR [edi-0x2a]
  411531:	dec    esp
  411532:	(bad)  
  411533:	fst    DWORD PTR [ebx+0x906c46b]
  411539:	aaa    
  41153a:	adc    al,0x2d
  41153c:	jnp    0x411523
  41153e:	test   al,0x18
  411540:	push   ebx
  411541:	adc    dh,BYTE PTR [ebx]
  411543:	mov    ebp,0x9a751064
  411548:	add    eax,0xc6d412cf
  41154d:	cmp    bh,ah
  41154f:	xor    edi,DWORD PTR [ebp+0xb]
  411552:	sub    DWORD PTR [ebx],0x3
  411555:	pop    edx
  411556:	cmp    ah,BYTE PTR [esi+ebp*1+0x56]
  41155a:	sbb    al,ch
  41155c:	xor    esi,DWORD PTR [ecx]
  41155e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41155f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411560:	ja     0x411534
  411562:	test   al,0xd
  411564:	ins    DWORD PTR es:[edi],dx
  411565:	xor    al,0xa2
  411567:	mul    DWORD PTR ds:0xd6d78a7d
  41156d:	pop    esp
  41156e:	adc    BYTE PTR [eax],0xe6
  411571:	push   0x39
  411573:	int3   
  411574:	imul   ebp,DWORD PTR ds:0x4c0ac0d3,0x30
  41157b:	pop    esi
  41157c:	enter  0x12bb,0xc9
  411580:	ins    DWORD PTR es:[edi],dx
  411581:	test   al,0x6c
  411583:	sub    dl,BYTE PTR [ebx]
  411585:	xor    ch,BYTE PTR [esi]
  411587:	mov    ds:0xb31b804c,eax
  41158c:	sbb    al,0xb5
  41158e:	daa    
  41158f:	icebp  
  411590:	ja     0x411604
  411592:	xchg   DWORD PTR [edi+eax*2+0x2d],ecx
  411596:	jg     0x41157b
  411598:	mov    eax,0x26095c30
  41159d:	and    ebp,ebp
  41159f:	inc    esi
  4115a0:	xor    al,0x73
  4115a2:	popa   
  4115a3:	(bad)  
  4115a5:	stc    
  4115a6:	lods   eax,DWORD PTR fs:[esi]
  4115a8:	jl     0x411560
  4115aa:	cmp    DWORD PTR [ebp-0xe26dbe4],esp
  4115b0:	add    al,0xa4
  4115b2:	sub    al,0x93
  4115b4:	push   edx
  4115b5:	das    
  4115b6:	cmp    esi,DWORD PTR [ecx+esi*8]
  4115b9:	ss push ebx
  4115bb:	mov    dl,0xc7
  4115bd:	loopne 0x411577
  4115bf:	bnd ja 0x411551
  4115c2:	push   0x638a2286
  4115c7:	mov    ebp,DWORD PTR [eax]
  4115c9:	adc    al,0xd
  4115cb:	out    0x90,al
  4115cd:	pop    edi
  4115ce:	in     al,dx
  4115cf:	fisttp QWORD PTR ds:0xffc1b5ce
  4115d6:	fmul   DWORD PTR [esi+0x18feee2]
  4115dc:	push   ebp
  4115dd:	lds    edx,FWORD PTR ds:0x4ace845c
  4115e3:	jl     0x41160e
  4115e5:	dec    edx
  4115e6:	and    al,0xc9
  4115e8:	cld    
  4115e9:	sub    BYTE PTR [ecx+0x641b2bdb],al
  4115ef:	into   
  4115f0:	jne    0x4115fb
  4115f2:	adc    al,0x29
  4115f4:	aas    
  4115f5:	push   ecx
  4115f6:	lods   al,BYTE PTR ds:[esi]
  4115f7:	dec    edx
  4115f8:	dec    eax
  4115f9:	rcr    BYTE PTR [ebp+edi*8+0x3b021af0],0xfc
  411601:	mov    eax,0xa786b47
  411606:	data16 mov ds:0xd02f20eb,al
  41160c:	mov    ds:0x257344f9,al
  411611:	pop    edi
  411612:	push   ebx
  411613:	test   eax,0x1a7929ef
  411618:	shl    dh,cl
  41161a:	xchg   ecx,eax
  41161b:	das    
  41161c:	mov    esi,0x3c68f42d
  411621:	dec    esi
  411622:	arpl   WORD PTR [ebx+0x22],si
  411625:	xchg   esp,eax
  411626:	and    ebx,0xffffffcd
  411629:	fcom   DWORD PTR [eax+0x4291e629]
  41162f:	sub    bh,BYTE PTR [ecx]
  411631:	jp     0x4115c3
  411633:	push   edx
  411634:	addr16 imul esp,ebp,0x8eb03c5
  41163b:	cmp    al,BYTE PTR [edi-0x660fabc5]
  411641:	jmp    0x41165a
  411643:	push   esp
  411644:	icebp  
  411645:	jne    0x4116b0
  411647:	mov    WORD PTR [ebx+0x37db6b95],gs
  41164d:	sub    DWORD PTR [ebx+0x70332aa0],esp
  411653:	push   edi
  411654:	and    DWORD PTR [edi+0x3d6f29eb],edx
  41165a:	fisttp QWORD PTR [ecx]
  41165c:	mov    dl,0xc3
  41165e:	add    eax,0xcdf823c2
  411663:	fcomp  QWORD PTR [esi-0x6d]
  411666:	cmp    esp,DWORD PTR [ebx]
  411668:	inc    esp
  411669:	stos   DWORD PTR es:[edi],eax
  41166a:	xor    eax,0x26b6cdc8
  41166f:	push   0x35776b2
  411674:	xor    DWORD PTR ds:0xacb020f1,edi
  41167a:	push   ds
  41167b:	xor    al,0xf
  41167d:	jne    0x4116e6
  41167f:	clc    
  411680:	mov    ds:0xbbcc5e6d,al
  411685:	pop    esi
  411686:	pop    esp
  411687:	mov    ebp,0xd37d4f81
  41168c:	cli    
  41168d:	cmp    ch,BYTE PTR es:[eax+0x7de1f3f4]
  411694:	fcom   st(3)
  411696:	hlt    
  411697:	ret    0xa218
  41169a:	mov    al,0x75
  41169c:	loope  0x41165e
  41169e:	xor    bh,BYTE PTR [ecx-0x12ae5be]
  4116a4:	mov    ds:0x2e8cfbf,eax
  4116a9:	pop    ss
  4116aa:	cmp    cl,BYTE PTR [ebx+0x1d]
  4116ad:	hlt    
  4116ae:	call   0xc68f57fb
  4116b3:	inc    edi
  4116b4:	aaa    
  4116b5:	pusha  
  4116b6:	pusha  
  4116b7:	inc    edx
  4116b8:	jmp    0x7f88:0xb943a103
  4116bf:	pushf  
  4116c0:	stos   DWORD PTR es:[edi],eax
  4116c1:	shr    cl,0x7
  4116c4:	ins    DWORD PTR es:[edi],dx
  4116c5:	xchg   esp,eax
  4116c6:	ds inc esp
  4116c8:	mov    bl,0x79
  4116ca:	retf   
  4116cb:	(bad)  
  4116cd:	mov    ds,WORD PTR [eax+0x38042387]
  4116d3:	(bad)  [ecx+0x46]
  4116d6:	mov    cs,WORD PTR [esi+0x471c9875]
  4116dc:	dec    ebx
  4116dd:	add    al,0xf1
  4116df:	cmp    BYTE PTR [eax-0xe5cbaf],cl
  4116e5:	repnz or al,0x3d
  4116e8:	adc    ch,ch
  4116ea:	cli    
  4116eb:	adc    BYTE PTR [esi-0xb7abff1],bh
  4116f1:	add    DWORD PTR [eax+ebx*1-0x1fd710e2],esp
  4116f8:	jmp    0xb249111f
  4116fd:	mov    ebp,0xa59dd8e9
  411702:	sbb    BYTE PTR [edx+0x9],dl
  411705:	lods   al,BYTE PTR ds:[esi]
  411706:	mov    esi,0xd863ea26
  41170b:	fadd   DWORD PTR [edi+0x61]
  41170e:	jno    0x4116c9
  411710:	mov    al,0x97
  411712:	shl    DWORD PTR [esi+0xc4dde8e],cl
  411718:	ret    0xbac9
  41171b:	dec    ebx
  41171c:	mov    dh,0x63
  41171e:	mov    ebx,0x61e48a5
  411723:	dec    ecx
  411724:	scas   al,BYTE PTR es:[edi]
  411725:	jmp    0xb1e8:0x49e38bba
  41172c:	mov    eax,ds:0x3041b276
  411731:	cdq    
  411732:	push   ebp
  411733:	push   cs
  411734:	ins    BYTE PTR es:[edi],dx
  411735:	and    BYTE PTR [eax+0x62],bl
  411738:	sahf   
  411739:	push   ss
  41173a:	(bad)  
  41173b:	xor    DWORD PTR [edx+0x17],esp
  41173e:	mov    edx,0x1459bdd8
  411743:	jb     0x4117aa
  411745:	scas   eax,DWORD PTR es:[edi]
  411746:	ror    DWORD PTR [eax+0x37],cl
  411749:	shl    DWORD PTR [edi+0x62],1
  41174c:	rol    BYTE PTR [ebp-0x3a127e2f],1
  411752:	add    eax,0x4a8ed6cc
  411757:	aad    0x23
  411759:	mov    cs,ebp
  41175b:	loop   0x41178c
  41175d:	loope  0x41171e
  41175f:	xchg   ecx,eax
  411760:	bound  eax,QWORD PTR ds:0x817c4e6e
  411766:	ss gs imul esp
  41176a:	sub    al,0xff
  41176c:	scas   al,BYTE PTR es:[edi]
  41176d:	shr    cl,0xd8
  411770:	add    al,0x2c
  411772:	ins    BYTE PTR es:[edi],dx
  411773:	lods   eax,DWORD PTR ds:[esi]
  411774:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411775:	jg     0x411785
  411777:	cli    
  411778:	pop    esp
  411779:	xchg   edi,eax
  41177a:	dec    esp
  41177b:	lods   eax,DWORD PTR ds:[esi]
  41177c:	call   0xe7f9:0xd70b7b36
  411783:	pop    es
  411784:	xchg   esi,eax
  411785:	mov    DWORD PTR ds:0x7fe2b88f,ecx
  41178b:	jb     0x41179e
  41178d:	stos   DWORD PTR es:[edi],eax
  41178e:	icebp  
  41178f:	mov    ebx,0xf7206e82
  411794:	xor    eax,0x3368c1e8
  411799:	push   ss
  41179a:	es adc al,0x98
  41179d:	add    al,0xbe
  41179f:	(bad)
  4117a2:	mov    esp,0x73664199
  4117a7:	sbb    DWORD PTR [ebx+eiz*2-0x6f98ba11],ebp
  4117ae:	retf   0xbbd8
  4117b1:	jo     0x4117d8
  4117b3:	xor    edi,DWORD PTR [edi]
  4117b5:	mov    al,cs:0xd7245e01
  4117bb:	inc    esp
  4117bc:	(bad)  [edx+0x3e348585]
  4117c2:	cmp    al,0xd6
  4117c4:	stos   BYTE PTR es:[edi],al
  4117c5:	jg     0x411811
  4117c7:	(bad)  
  4117c8:	mov    dh,BYTE PTR [esi]
  4117ca:	xchg   esp,eax
  4117cb:	xor    BYTE PTR [edx+0x6f5c7e20],dl
  4117d1:	jge    0x41182e
  4117d3:	and    al,0x19
  4117d5:	icebp  
  4117d6:	jns    0x41180d
  4117d8:	es mov ah,0xab
  4117db:	adc    edi,esi
  4117dd:	addr16 jbe 0x4117ab
  4117e0:	add    eax,0x81e2339
  4117e5:	sahf   
  4117e6:	and    dl,BYTE PTR [edi-0x36]
  4117e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117ea:	push   ds
  4117eb:	sbb    DWORD PTR [esi+0x5b],edi
  4117ee:	das    
  4117ef:	test   eax,0x9172eb59
  4117f4:	out    dx,al
  4117f5:	sub    edx,DWORD PTR [ecx+ecx*1+0x6b]
  4117f9:	dec    esi
  4117fa:	and    dl,BYTE PTR [edi+0x7c0189ea]
  411800:	arpl   WORD PTR [ebp-0x21],bx
  411803:	push   ecx
  411804:	or     BYTE PTR [esi],dh
  411806:	adc    eax,0x4dacf27d
  41180b:	addr16 xor eax,esi
  41180e:	dec    edx
  41180f:	fwait
  411810:	in     eax,0xad
  411812:	mov    edx,0x867206a3
  411817:	out    dx,al
  411818:	xchg   edx,eax
  411819:	ss das 
  41181b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41181c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41181d:	xchg   BYTE PTR [edx-0xb],dl
  411820:	emms   
  411822:	xchg   esi,eax
  411823:	push   esp
  411824:	push   0xb25b30ff
  411829:	fist   WORD PTR [eax+0x1a3cca71]
  41182f:	ror    ah,cl
  411831:	fst    DWORD PTR [eax-0x15]
  411834:	retf   
  411835:	xchg   BYTE PTR [edi],bh
  411837:	and    BYTE PTR [esi+0x2a],0x44
  41183b:	aaa    
  41183c:	push   edx
  41183d:	(bad)  
  41183f:	ds adc eax,0xc1a459cb
  411845:	lahf   
  411846:	je     0x411884
  41184c:	jmp    0x411875
  411851:	mov    eax,DWORD PTR [ebp-0x4]
  411854:	mov    ecx,DWORD PTR [ebp-0x8]
  411857:	xor    eax,esi
  411859:	add    eax,edi
  41185b:	cmp    ecx,eax
  41185d:	mov    eax,DWORD PTR [ebp-0x4]
  411860:	je     0x4118bf
  411866:	mov    ecx,DWORD PTR [ebp-0x30]
  411869:	xor    eax,esi
  41186b:	add    eax,edi
  41186d:	cmp    ecx,eax
  41186f:	je     0x4118c8
  411875:	lea    eax,[ebp-0x8]
  411878:	push   eax
  411879:	push   DWORD PTR [ebp-0x28]
  41187c:	push   DWORD PTR [ebp+0xc]
  41187f:	call   0x416204
  411884:	mov    eax,DWORD PTR [ebp-0x4]
  411887:	mov    ecx,DWORD PTR [ebp-0x8]
  41188a:	xor    eax,esi
  41188c:	add    eax,edi
  41188e:	cmp    ecx,eax
  411890:	je     0x4118ab
  411896:	mov    eax,DWORD PTR [ebp-0x34]
  411899:	movzx  eax,WORD PTR [eax+ebx*2]
  41189d:	mov    ecx,DWORD PTR [ebp-0x14]
  4118a0:	mov    eax,DWORD PTR [ecx+eax*4]
  4118a3:	mov    DWORD PTR [ebp-0x38],eax
  4118a6:	jmp    0x411851
  4118ab:	mov    eax,DWORD PTR [ebp-0xc]
  4118ae:	xor    eax,esi
  4118b0:	lea    ebx,[ebx+eax*1+0x3272ec]
  4118b7:	jmp    0x40f134
  4118bc:	mov    eax,DWORD PTR [ebp-0x4]
  4118bf:	xor    eax,esi
  4118c1:	add    eax,edi
  4118c3:	jmp    0x416111
  4118c8:	mov    eax,DWORD PTR [ebp-0x38]
  4118cb:	add    eax,DWORD PTR [ebp+0x8]
  4118ce:	mov    DWORD PTR [ebp-0x18],eax
  4118d1:	mov    eax,DWORD PTR [ebp-0x1c]
  4118d4:	test   eax,eax
  4118d6:	jmp    0x413c6c
  4118db:	js     0x411873
  4118dd:	jno    0x411933
  4118df:	arpl   WORD PTR [edi+0x68fe867b],dx
  4118e5:	test   DWORD PTR [ebp+0xfe7a891],ebx
  4118eb:	dec    ecx
  4118ec:	cmp    DWORD PTR [edx+0x7a],0x5
  4118f0:	pop    edi
  4118f1:	jp     0x41196d
  4118f3:	test   esi,ecx
  4118f5:	fbld   TBYTE PTR [ecx]
  4118f7:	inc    edx
  4118f8:	dec    edi
  4118f9:	jnp    0x411934
  4118fb:	cmp    ch,BYTE PTR [edx-0x34]
  4118fe:	jns    0x4118cb
  411900:	pop    ss
  411901:	xlat   BYTE PTR ds:[ebx]
  411902:	jecxz  0x4118af
  411904:	dec    edx
  411905:	js     0x4118ae
  411907:	lds    esi,FWORD PTR [edi+0x1463885d]
  41190d:	pop    edi
  41190e:	call   0xed:0x4c2a8300
  411915:	adc    eax,DWORD PTR [edx]
  411917:	push   0xffffffaf
  411919:	nop
  41191a:	sti    
  41191b:	jae    0x4118f0
  41191d:	inc    edx
  41191e:	and    eax,0xeece5c62
  411923:	mov    eax,0xc3e7b551
  411928:	lds    edx,FWORD PTR [ecx+0x75591419]
  41192e:	pop    edx
  41192f:	xor    dl,bh
  411931:	jbe    0x41190a
  411933:	or     eax,0x8a29a7ed
  411938:	cmp    eax,0x3d3a40c4
  41193d:	ret    
  41193e:	push   ss
  41193f:	scas   eax,DWORD PTR es:[edi]
  411940:	push   ecx
  411941:	inc    edx
  411942:	into   
  411943:	add    BYTE PTR [esi],bh
  411945:	mov    ebp,0x30e6057
  41194a:	cdq    
  41194b:	call   0xf583:0x76461f56
  411952:	sbb    DWORD PTR [ebp-0x4c4e024f],edx
  411958:	cdq    
  411959:	jmp    0x347c:0x7384687d
  411960:	and    cl,ah
  411962:	rep outs dx,DWORD PTR ds:[esi]
  411964:	mov    dl,0x3f
  411966:	mov    ecx,0xa10bf907
  41196b:	fs in  eax,0x8c
  41196e:	cmc    
  41196f:	aaa    
  411970:	pop    edi
  411971:	div    BYTE PTR [ecx+ecx*4-0x24f950]
  411978:	sbb    ah,BYTE PTR [ebp+0x428071a7]
  41197e:	test   al,0x99
  411980:	enter  0x2054,0x67
  411984:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411985:	or     al,0xec
  411987:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411988:	dec    ebx
  411989:	pop    ebx
  41198a:	or     al,0xd8
  41198c:	jl     0x411a0b
  41198e:	lea    ebx,[esi+ecx*2+0x78]
  411992:	sti    
  411993:	mov    dh,0xf7
  411995:	(bad)  
  411996:	fidivr WORD PTR [edi]
  411998:	sti    
  411999:	lahf   
  41199a:	js     0x4119c3
  41199c:	fsubr  QWORD PTR [ebx-0x652dce98]
  4119a2:	rcr    ah,0xb
  4119a5:	scas   al,BYTE PTR es:[edi]
  4119a6:	mov    ebx,0x4950cdf4
  4119ab:	sbb    DWORD PTR [ecx+edx*4-0x32],esi
  4119af:	ds jae 0x4119d0
  4119b2:	sti    
  4119b3:	mov    ebx,0x357165ce
  4119b8:	pop    edi
  4119b9:	shl    DWORD PTR [eax-0x337f1a5a],0xab
  4119c0:	add    al,0xa
  4119c2:	jne    0x41197e
  4119c4:	gs in  eax,dx
  4119c6:	sub    esi,DWORD PTR [eax+esi*8+0x2628cb5d]
  4119cd:	jae    0x4119c4
  4119cf:	jecxz  0x4119cf
  4119d1:	ror    esp,1
  4119d3:	and    BYTE PTR [esi-0x13051600],dh
  4119d9:	mov    ecx,0x79ef43a9
  4119de:	rcl    BYTE PTR [ecx],1
  4119e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4119e1:	pop    ecx
  4119e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119e3:	xchg   DWORD PTR [ebp-0x45],ebp
  4119e6:	addr16 pop ebx
  4119e8:	sub    bh,BYTE PTR [ecx+0x38]
  4119eb:	imul   edi,DWORD PTR [ebp+0xadf28b2],0x3ba85298
  4119f5:	push   ecx
  4119f6:	daa    
  4119f7:	dec    edi
  4119f8:	sbb    DWORD PTR [ecx-0xe],edi
  4119fb:	outs   dx,BYTE PTR ds:[esi]
  4119fc:	fidivr WORD PTR [ecx]
  4119fe:	or     eax,0xe753a78d
  411a03:	jmp    0xb88c:0xcd38231
  411a0a:	out    0xa2,al
  411a0c:	ret    0x7e6b
  411a0f:	not    BYTE PTR [ebx+edx*2-0x72]
  411a13:	mov    edx,eax
  411a15:	(bad)  
  411a16:	(bad)  
  411a18:	push   ds
  411a19:	in     eax,dx
  411a1a:	inc    esi
  411a1b:	jns    0x411a12
  411a1d:	loopne 0x411a90
  411a1f:	push   ds
  411a20:	pop    esi
  411a21:	and    eax,0x4a891e60
  411a26:	mov    al,0x6a
  411a28:	inc    esp
  411a29:	in     al,dx
  411a2a:	xchg   ecx,eax
  411a2b:	rcr    DWORD PTR [ecx+eax*1+0x1fa760e8],1
  411a32:	and    al,0xc1
  411a34:	jo     0x4119ee
  411a36:	and    DWORD PTR [eax+0x14],edx
  411a39:	test   BYTE PTR [ecx-0xefe1f5c],bh
  411a3f:	sbb    eax,0xc661c3f1
  411a44:	inc    ebp
  411a45:	push   ebp
  411a46:	pusha  
  411a47:	arpl   WORD PTR [edx-0x2f],di
  411a4a:	pop    ecx
  411a4b:	loop   0x411a45
  411a4d:	hlt    
  411a4e:	mov    ds:0x24851338,al
  411a53:	mov    cl,0xe4
  411a55:	ret    0x397c
  411a58:	jne    0x4119e6
  411a5a:	push   ss
  411a5b:	bound  esi,QWORD PTR [ecx]
  411a5d:	stos   DWORD PTR es:[edi],eax
  411a5e:	addr16 and eax,0xb1b3546a
  411a64:	fnsave [ebx-0x44]
  411a67:	jecxz  0x411ab9
  411a69:	dec    eax
  411a6a:	mov    bl,0x2d
  411a6c:	mov    ch,0x24
  411a6e:	pop    ebx
  411a6f:	pop    edx
  411a70:	lahf   
  411a71:	ret    
  411a72:	xchg   ebx,eax
  411a73:	shr    BYTE PTR [ecx-0x1e86cbcc],1
  411a79:	add    DWORD PTR [ebx+0x49],0x763b10a6
  411a80:	sbb    BYTE PTR ds:[edi],0x75
  411a84:	je     0x411a7e
  411a86:	dec    ecx
  411a87:	jns    0x411a10
  411a89:	in     al,0x5b
  411a8b:	xchg   esi,eax
  411a8c:	xchg   BYTE PTR [edi+0x510e28c0],bl
  411a92:	les    esp,FWORD PTR [ebp+0x3881e9e1]
  411a98:	out    dx,al
  411a99:	inc    edi
  411a9a:	dec    esp
  411a9b:	or     BYTE PTR [ecx-0x665ac1a5],al
  411aa1:	add    al,0xb0
  411aa3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411aa4:	je     0x411a96
  411aa6:	mov    bl,0x1b
  411aa8:	jmp    0x4be0:0xf8a5a39d
  411aaf:	cmc    
  411ab0:	jae    0x411a76
  411ab2:	jle    0x411b2b
  411ab4:	imul   eax,esi,0x622f1913
  411aba:	pop    esi
  411abb:	or     eax,0x2c2dc4bc
  411ac0:	test   al,0x15
  411ac2:	sub    dl,bh
  411ac4:	jmp    0x9bb27fc4
  411ac9:	shl    esp,cl
  411acb:	imul   edx,DWORD PTR [ebx-0x36],0xffffffb6
  411acf:	daa    
  411ad0:	fmul   QWORD PTR [esi-0x80]
  411ad3:	out    dx,eax
  411ad4:	dec    esi
  411ad5:	fbstp  TBYTE PTR [ebp+0x18]
  411ad8:	pop    ebp
  411ad9:	adc    al,0x2d
  411adb:	jge    0x411b4e
  411add:	add    eax,0x4d1da3c7
  411ae2:	fdivrp st(7),st
  411ae4:	test   eax,0xf15bdf43
  411ae9:	daa    
  411aea:	ret    
  411aeb:	mov    dh,0xdb
  411aed:	fcomp  QWORD PTR [esp+ecx*8]
  411af0:	(bad)  
  411af2:	mov    ebx,0x29eb724a
  411af7:	jnp    0x411b26
  411af9:	cmp    eax,0x28139e16
  411aff:	or     DWORD PTR [ebx-0x6e],edx
  411b02:	mov    bl,BYTE PTR [eax-0x21]
  411b05:	fcom   QWORD PTR [ecx]
  411b07:	call   0xb4a0:0xccb4d024
  411b0e:	popf   
  411b0f:	cmp    eax,0xf285973
  411b14:	dec    ebx
  411b15:	test   DWORD PTR [esi-0x69],ebp
  411b18:	jae    0x411b1f
  411b1a:	in     al,dx
  411b1b:	inc    esp
  411b1c:	adc    eax,esi
  411b1e:	jne    0x411b0f
  411b20:	xchg   ecx,eax
  411b21:	mov    ecx,DWORD PTR [esi-0x3dfe93ba]
  411b27:	add    ebx,eax
  411b29:	outs   dx,DWORD PTR ds:[esi]
  411b2a:	aam    0x26
  411b2c:	adc    al,0xc7
  411b2e:	out    0xe1,eax
  411b30:	cmp    al,0xd5
  411b32:	(bad)  
  411b33:	dec    ebp
  411b34:	sbb    ebx,DWORD PTR [eax+0x1987ca14]
  411b3a:	xor    al,BYTE PTR [ebp+ecx*8+0x2e]
  411b3e:	pusha  
  411b3f:	mov    bl,0x86
  411b41:	inc    edx
  411b42:	in     al,0x3
  411b44:	ret    0x33a9
  411b47:	clc    
  411b48:	adc    bh,BYTE PTR es:[edi]
  411b4b:	xor    bl,BYTE PTR [ebx+0x35]
  411b4e:	stos   DWORD PTR es:[edi],eax
  411b4f:	stc    
  411b50:	mov    ch,0xa9
  411b52:	add    eax,DWORD PTR [edx+edi*1+0x6336a31b]
  411b59:	shl    DWORD PTR [esp+eiz*4],0xc2
  411b5d:	inc    esp
  411b5e:	push   ecx
  411b5f:	pop    edx
  411b60:	push   eax
  411b61:	jbe    0x411bc0
  411b63:	shl    bh,cl
  411b65:	imul   edi,DWORD PTR [edx+0x43],0xdfb28a25
  411b6c:	loop   0x411b7b
  411b6e:	push   es
  411b6f:	int    0xb2
  411b71:	and    edi,DWORD PTR [ebp-0x6c]
  411b74:	or     al,0xef
  411b76:	jecxz  0x411bcd
  411b78:	jl     0x411b61
  411b7a:	or     BYTE PTR [ecx-0x46],0x80
  411b7e:	mov    dh,0x6f
  411b80:	mov    ebx,0x8e1c3365
  411b85:	inc    ebp
  411b86:	sub    DWORD PTR [ebx-0x7d],0x5ae7d45e
  411b8d:	jl     0x411bf1
  411b8f:	cmp    BYTE PTR [ebx+0x73],dh
  411b92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b93:	lods   eax,DWORD PTR ds:[esi]
  411b94:	sub    ah,BYTE PTR [ebp+0x2af83d09]
  411b9a:	mov    dh,0x38
  411b9c:	mov    WORD PTR [esi+0x36],gs
  411b9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ba0:	pusha  
  411ba1:	inc    ecx
  411ba2:	and    BYTE PTR [ecx+0x66],bh
  411ba5:	(bad)  
  411ba6:	idiv   BYTE PTR [ecx-0x79]
  411ba9:	add    esi,DWORD PTR [esi]
  411bab:	cld    
  411bac:	outs   dx,BYTE PTR ds:[esi]
  411bad:	not    BYTE PTR [ebp+0x44]
  411bb0:	pop    ds
  411bb1:	fadd   DWORD PTR [edi-0x1c]
  411bb4:	fist   DWORD PTR [eax]
  411bb6:	inc    edi
  411bb7:	sbb    DWORD PTR [ecx+0x39],eax
  411bba:	popa   
  411bbb:	add    bh,al
  411bbd:	mov    al,0xea
  411bbf:	jle    0x411bcf
  411bc1:	and    al,0xb6
  411bc3:	and    ebp,DWORD PTR [ebp-0x436c099b]
  411bc9:	and    eax,0xe62709df
  411bce:	add    BYTE PTR [ebx+0xf],bl
  411bd1:	sub    DWORD PTR [esi-0x5c],ebp
  411bd4:	test   DWORD PTR [ecx+0x4007cda5],ebp
  411bda:	psubw  mm5,QWORD PTR [ebp+esi*8-0x681114e6]
  411be2:	int    0xa4
  411be4:	aad    0x62
  411be6:	aaa    
  411be7:	push   edi
  411be8:	xchg   ebx,eax
  411bea:	mov    esp,0xc13f99e9
  411bef:	cmp    dh,BYTE PTR [ecx+0x7bae83b6]
  411bf5:	stos   BYTE PTR es:[edi],al
  411bf6:	mov    esp,0xfb857cbe
  411bfb:	fiadd  WORD PTR [ecx-0x28bc04e0]
  411c01:	fwait
  411c02:	test   al,0x10
  411c04:	outs   dx,DWORD PTR ds:[esi]
  411c05:	mov    bh,0x8b
  411c07:	xchg   esi,ebp
  411c09:	push   ecx
  411c0a:	icebp  
  411c0b:	test   eax,0x4a735985
  411c10:	or     DWORD PTR [edi-0x79],esp
  411c13:	rcr    DWORD PTR [ebx+0x1b],0xd5
  411c17:	jg     0x411be6
  411c19:	xor    ebx,DWORD PTR [edi-0x44835566]
  411c1f:	or     al,0x24
  411c21:	adc    al,0xbe
  411c23:	loopne 0x411bdd
  411c25:	cmp    eax,0xe4fbb305
  411c2a:	stc    
  411c2b:	mov    al,0x94
  411c2d:	pushf  
  411c2e:	push   ss
  411c2f:	std    
  411c30:	jno    0x411c81
  411c32:	sbb    al,0x17
  411c34:	fnstcw WORD PTR [ebx+0x8bfa386]
  411c3a:	jmp    0x411bdf
  411c3c:	mov    dh,0xe
  411c3e:	dec    ecx
  411c3f:	jl     0x411c22
  411c41:	jb     0x411c02
  411c43:	dec    edi
  411c44:	mov    al,ds:0x47010524
  411c49:	int    0xd2
  411c4b:	sahf   
  411c4c:	and    ebx,ecx
  411c4e:	cld    
  411c4f:	mov    edi,ebx
  411c51:	out    0xe0,al
  411c53:	ret    
  411c54:	(bad)  
  411c55:	(bad)  
  411c56:	jecxz  0x411cc6
  411c58:	fist   DWORD PTR [ebp-0x35]
  411c5b:	(bad)  
  411c5c:	adc    dh,al
  411c5e:	cmp    al,0xde
  411c60:	jae    0x411ce0
  411c62:	lock aad 0xd6
  411c65:	pop    es
  411c66:	inc    ebp
  411c67:	jo     0x411c47
  411c69:	mov    al,ds:0x35fc081
  411c6e:	sub    al,BYTE PTR [edx+0x3c]
  411c71:	adc    eax,0xcafda03a
  411c76:	shl    DWORD PTR [eax],0x31
  411c79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c7a:	aas    
  411c7b:	adc    eax,0x71b2c311
  411c80:	xchg   ecx,eax
  411c81:	std    
  411c82:	je     0x411c5b
  411c84:	xchg   edi,eax
  411c85:	cmp    al,BYTE PTR [edx]
  411c87:	icebp  
  411c88:	pop    edx
  411c89:	mov    bh,BYTE PTR [esi+0x2b]
  411c8c:	ret    0xa1cd
  411c8f:	ja     0x411d05
  411c91:	inc    edi
  411c92:	hlt    
  411c93:	push   ss
  411c94:	mov    ch,0x75
  411c96:	imul   edi,DWORD PTR [ebx-0x40],0x42886441
  411c9d:	out    0x5a,eax
  411c9f:	push   edi
  411ca0:	in     eax,dx
  411ca1:	push   edi
  411ca2:	lock jecxz 0x411cd6
  411ca5:	inc    ecx
  411ca6:	repz or al,0x98
  411ca9:	mov    ds:0xf5dd85a9,al
  411cae:	add    DWORD PTR [ebx-0x5095811c],0x36
  411cb5:	push   esp
  411cb6:	aas    
  411cb7:	jbe    0x411d18
  411cb9:	int    0xa3
  411cbb:	les    edi,FWORD PTR [esi+0x69808d52]
  411cc1:	je     0x411d24
  411cc3:	add    eax,0xc3bbe219
  411cc8:	xchg   cx,ax
  411cca:	mov    al,0x71
  411ccc:	dec    eax
  411ccd:	pop    ebp
  411cce:	jne    0x411d3b
  411cd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411cd1:	cmp    ah,BYTE PTR ds:0xe5d37c05
  411cd7:	sub    BYTE PTR [ebx-0x1],cl
  411cda:	call   0x38912dd9
  411cdf:	mov    dh,0x12
  411ce1:	and    DWORD PTR [ebx-0xaf796c9],ebp
  411ce7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ce8:	je     0x411d19
  411cea:	hlt    
  411ceb:	xchg   ecx,eax
  411cec:	(bad)  
  411ced:	idiv   BYTE PTR [esi-0x79f63d65]
  411cf3:	fcmovnb st,st(1)
  411cf5:	js     0x411c98
  411cf7:	push   edx
  411cf8:	mov    bh,0x69
  411cfa:	mov    al,0xbc
  411cfc:	rol    BYTE PTR [ebp+edx*1+0x777fa136],cl
  411d03:	leave  
  411d04:	adc    DWORD PTR [ebx+0x67bac6a5],0xffffffa8
  411d0b:	das    
  411d0c:	add    bl,bl
  411d0e:	scas   eax,DWORD PTR es:[edi]
  411d0f:	or     al,0x32
  411d11:	int    0xd9
  411d13:	and    eax,0x5a961da
  411d18:	mov    dh,0x7
  411d1a:	sub    bh,bh
  411d1c:	shr    DWORD PTR [ecx],1
  411d1e:	sti    
  411d1f:	les    ebx,FWORD PTR [esp+edi*8+0x7e]
  411d23:	push   cs
  411d24:	cwde   
  411d25:	push   0xfca19181
  411d2a:	bound  ecx,QWORD PTR [edi+0x7c3f6d16]
  411d30:	push   cs
  411d31:	in     eax,0x83
  411d33:	adc    dh,bh
  411d35:	jge    0x411d4a
  411d37:	sbb    eax,0x54395cbe
  411d3c:	push   edx
  411d3d:	xor    dh,BYTE PTR [eax+0x58379983]
  411d43:	jg     0x411d85
  411d45:	rcl    DWORD PTR [ebp+0x44],0x48
  411d49:	or     esi,DWORD PTR [esi-0x5c7af8a9]
  411d4f:	sbb    ch,BYTE PTR [eax-0x6ea27d45]
  411d55:	fwait
  411d56:	xchg   esi,eax
  411d57:	adc    eax,0xbea4ba5d
  411d5c:	adc    dh,BYTE PTR [edx+0x45]
  411d5f:	sub    BYTE PTR [eax],dh
  411d61:	out    0xe4,eax
  411d63:	outs   dx,BYTE PTR ds:[esi]
  411d64:	ins    BYTE PTR es:[edi],dx
  411d65:	inc    esp
  411d66:	sub    al,0xb6
  411d68:	outs   dx,BYTE PTR ds:[esi]
  411d69:	pop    edi
  411d6a:	cmp    eax,0xe9d62009
  411d6f:	push   ebx
  411d70:	cld    
  411d71:	mov    bl,0x86
  411d73:	aad    0x98
  411d75:	and    dh,BYTE PTR [ebx+0x167736fb]
  411d7b:	pop    ecx
  411d7c:	xchg   edi,eax
  411d7d:	xor    eax,0xc0f43ef5
  411d82:	lods   al,BYTE PTR ds:[esi]
  411d83:	(bad)  
  411d84:	div    ebp
  411d86:	xchg   ebx,eax
  411d87:	mov    dh,0x18
  411d89:	cld    
  411d8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d8b:	(bad)  
  411d8c:	fsubrp st(4),st
  411d8e:	test   BYTE PTR [ebx+0xac9240f],dl
  411d94:	rcr    bh,0x7f
  411d97:	rcl    BYTE PTR [esi],cl
  411d99:	scas   eax,DWORD PTR es:[edi]
  411d9a:	shl    BYTE PTR [esi-0x122a802c],0x39
  411da1:	mov    bl,0x60
  411da3:	pop    edx
  411da4:	stc    
  411da5:	pop    esi
  411da6:	xchg   esp,ebp
  411da8:	clc    
  411da9:	mov    ecx,0xc722f4b9
  411dae:	rol    BYTE PTR [ebp+0x70],1
  411db1:	add    bh,ah
  411db3:	popf   
  411db4:	jge    0x411e27
  411db6:	xchg   BYTE PTR [edi-0x47],ah
  411db9:	dec    ebx
  411dba:	pusha  
  411dbb:	in     al,0xc0
  411dbd:	std    
  411dbe:	cmc    
  411dbf:	repz es pop edx
  411dc2:	mov    ebx,0x77981fb4
  411dc7:	add    ch,BYTE PTR [edi]
  411dc9:	addr16 std 
  411dcb:	jle    0x411df7
  411dcd:	dec    ebp
  411dce:	rcl    DWORD PTR [ebp-0x1a],1
  411dd1:	cmp    ebx,ebx
  411dd3:	fcom   QWORD PTR [ecx-0x1b3aa69d]
  411dd9:	mov    ecx,0x3afc5fcf
  411dde:	mov    ecx,0x4adae3eb
  411de3:	xor    bl,BYTE PTR [edi-0x1e]
  411de6:	call   0x5f246933
  411deb:	iret   
  411dec:	(bad)  
  411ded:	idiv   BYTE PTR [edi-0x758e3cde]
  411df3:	push   ds
  411df4:	pop    ebp
  411df5:	mov    bh,0x8b
  411df7:	pop    ebp
  411df8:	sub    BYTE PTR [esi],dh
  411dfa:	fucomi st,st(2)
  411dfc:	lods   eax,DWORD PTR ds:[esi]
  411dfd:	ret    0x1c0d
  411e00:	mov    edi,0x427145c4
  411e05:	mov    edi,DWORD PTR [ebx-0x48aef7ad]
  411e0b:	push   ss
  411e0c:	mov    eax,ds:0x95733c6d
  411e11:	inc    edi
  411e12:	lds    esp,FWORD PTR [ebp-0x51]
  411e15:	inc    esi
  411e16:	aas    
  411e17:	aad    0x24
  411e19:	add    BYTE PTR [esi+0x2f0ea394],ah
  411e1f:	dec    esi
  411e20:	add    eax,0x2b3847de
  411e25:	and    DWORD PTR es:[ebx],esi
  411e28:	mov    eax,fs:0xd6b8ce25
  411e2e:	add    eax,0x98ba6ff4
  411e33:	dec    eax
  411e34:	int3   
  411e35:	mov    ch,0xd0
  411e37:	retf   
  411e38:	or     al,0xec
  411e3a:	(bad)  
  411e3b:	pushf  
  411e3c:	mov    ds:0xe4d05439,al
  411e41:	test   eax,0x96b81c14
  411e46:	leave  
  411e47:	mov    BYTE PTR [esi+esi*4],ch
  411e4a:	clc    
  411e4b:	leave  
  411e4c:	out    dx,eax
  411e4d:	hlt    
  411e4e:	ins    DWORD PTR es:[edi],dx
  411e4f:	jae    0x411e83
  411e51:	push   esi
  411e52:	and    eax,0x91ca657
  411e57:	out    0x3d,al
  411e59:	sub    ax,0xd8e9
  411e5d:	mov    al,0xa2
  411e5f:	mov    ch,0x20
  411e61:	call   0x9164b004
  411e66:	sbb    al,0xa6
  411e68:	cs popa 
  411e6a:	rol    DWORD PTR [ecx-0x32becce],0x5
  411e71:	rcl    ecx,1
  411e73:	enter  0x6d24,0x26
  411e77:	push   ebx
  411e78:	xchg   dl,bh
  411e7a:	aad    0xbe
  411e7c:	shr    DWORD PTR [ebp+0x3e],1
  411e7f:	add    BYTE PTR [edi+0x12f6f796],bl
  411e85:	and    eax,0x8a7aafcd
  411e8a:	xchg   ebx,eax
  411e8b:	pop    ecx
  411e8c:	pop    edi
  411e8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e8e:	ret    0x8dd3
  411e91:	(bad)  
  411e92:	jns    0x411eaa
  411e94:	in     al,0xb2
  411e96:	xlat   BYTE PTR ds:[ebx]
  411e97:	lahf   
  411e98:	ror    BYTE PTR [edi],0x1f
  411e9b:	cmc    
  411e9c:	inc    ebx
  411e9d:	inc    esp
  411e9e:	inc    esp
  411e9f:	sub    ah,al
  411ea1:	(bad)  
  411ea2:	lods   al,BYTE PTR ds:[esi]
  411ea3:	xor    eax,0x75907874
  411ea8:	aad    0x99
  411eaa:	cmp    ah,ah
  411eac:	push   0x5b7a1485
  411eb1:	push   ebx
  411eb2:	(bad)  
  411eb3:	repnz sbb DWORD PTR [eax+0x3d79d98],esi
  411eba:	pop    ebp
  411ebb:	out    dx,eax
  411ebc:	xlat   BYTE PTR ds:[ebx]
  411ebd:	jmp    0xefeb:0xcb39a98e
  411ec4:	push   ebp
  411ec5:	mov    ?,WORD PTR [ecx-0x6f756071]
  411ecb:	ss mov bh,0x7a
  411ece:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ecf:	scas   eax,DWORD PTR es:[edi]
  411ed0:	or     DWORD PTR [ebx+esi*4-0x73],edi
  411ed4:	sub    al,0x6d
  411ed6:	scas   al,BYTE PTR es:[edi]
  411ed7:	fsub   DWORD PTR [ebx]
  411ed9:	and    al,0x2c
  411edb:	retf   0x595a
  411ede:	les    ecx,FWORD PTR [edi]
  411ee0:	icebp  
  411ee1:	mov    edi,0xfe453331
  411ee6:	div    ebx
  411ee8:	inc    ebp
  411ee9:	mov    esp,0x3863be46
  411eee:	pop    edx
  411eef:	sub    al,dh
  411ef1:	ror    DWORD PTR [esi-0x7c465cd6],0x2a
  411ef8:	jp     0x411ea1
  411efa:	sub    ah,bh
  411efc:	xor    al,0xd5
  411efe:	stc    
  411eff:	jbe    0x411ea9
  411f01:	xchg   esp,eax
  411f02:	lahf   
  411f03:	mov    edi,0x87b7d372
  411f08:	jecxz  0x411f1d
  411f0a:	or     bl,ch
  411f0c:	xchg   bl,ah
  411f0e:	mov    al,BYTE PTR [edx-0x12]
  411f11:	iret   
  411f12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f13:	sub    al,BYTE PTR [eax+ecx*1-0x15]
  411f17:	pop    edx
  411f18:	cwde   
  411f19:	mov    ch,0x84
  411f1b:	out    dx,al
  411f1c:	jne    0x411f06
  411f1e:	enter  0x2985,0x11
  411f22:	push   eax
  411f23:	hlt    
  411f24:	hlt    
  411f25:	push   ecx
  411f26:	pop    edi
  411f27:	gs (bad) 
  411f29:	adc    edi,DWORD PTR [esp+eax*4+0x5]
  411f2d:	mov    esi,0x920a945a
  411f32:	(bad)  
  411f34:	(bad)  
  411f35:	push   ss
  411f36:	(bad)  
  411f37:	cmp    al,0xd2
  411f39:	repz or al,0xc7
  411f3c:	push   eax
  411f3d:	sub    eax,0xc5120396
  411f42:	or     DWORD PTR [eax-0x35689856],ebx
  411f48:	(bad)  
  411f49:	icebp  
  411f4a:	jl     0x411ef3
  411f4c:	mov    WORD PTR [edx*4-0x9c1dce7],fs
  411f53:	mov    bl,0xa6
  411f55:	imul   ebx,DWORD PTR [esp+ebp*2-0x12bad6b4],0x72644807
  411f60:	mov    ds:0x4311593a,eax
  411f65:	push   ds
  411f66:	fisttp WORD PTR [ebx+0x5d]
  411f69:	(bad)  
  411f6a:	xchg   edi,eax
  411f6b:	lahf   
  411f6c:	test   eax,0x32e1e9a7
  411f71:	cmp    bl,cl
  411f73:	inc    esp
  411f74:	int3   
  411f75:	outs   dx,BYTE PTR ds:[esi]
  411f76:	mov    eax,0xd5638ab4
  411f7b:	call   0xa0ab:0x4b31d3c2
  411f82:	enter  0x68db,0x95
  411f86:	js     0x411f26
  411f88:	js     0x411f9f
  411f8a:	mov    eax,ds:0x260bfaf4
  411f8f:	pop    ecx
  411f90:	adc    DWORD PTR [esi+0x2bddef3a],ecx
  411f96:	cmp    dh,ch
  411f98:	arpl   sp,si
  411f9a:	inc    esp
  411f9b:	dec    esp
  411f9c:	sub    DWORD PTR [eax],edi
  411f9e:	xchg   ebp,eax
  411f9f:	call   0x6ceb:0x92f54ca4
  411fa6:	cs mov esi,0x80dd9321
  411fac:	lock je 0x411f6d
  411faf:	daa    
  411fb0:	sbb    BYTE PTR ds:0xf9ada2a,bl
  411fb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411fb7:	js     0x411f77
  411fb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411fba:	addr16 xor eax,0xb1eef70b
  411fc0:	stos   BYTE PTR es:[edi],al
  411fc1:	mov    WORD PTR [esi+0x5642a5ac],ss
  411fc7:	or     ecx,eax
  411fc9:	mov    ds:0x87617e07,eax
  411fce:	or     ch,BYTE PTR [edi-0x59]
  411fd1:	dec    esi
  411fd2:	inc    esp
  411fd3:	fcmovnbe st,st(5)
  411fd5:	xchg   ebp,eax
  411fd6:	mov    esi,0xb9ade0e1
  411fdb:	mov    ah,0x98
  411fdd:	adc    edi,DWORD PTR [ebx+0x41375546]
  411fe3:	push   cs
  411fe4:	mov    esi,0xef2519b7
  411fe9:	dec    eax
  411fea:	stos   BYTE PTR es:[edi],al
  411feb:	push   eax
  411fec:	mov    ecx,es
  411fee:	in     al,0x80
  411ff0:	jno    0x411fd8
  411ff2:	add    DWORD PTR [esi-0x29],esp
  411ff5:	push   es
  411ff6:	es mov ebx,esp
  411ff9:	adc    eax,0x12925cc4
  411ffe:	xchg   ebx,eax
  411fff:	outs   dx,DWORD PTR ds:[esi]
  412000:	(bad)
  412003:	cwde   
  412004:	cwde   
  412005:	dec    ebp
  412006:	test   eax,0xe4a44c63
  41200b:	imul   eax,DWORD PTR [ebx],0xa19e19b0
  412011:	mov    esi,0x45eb791c
  412016:	mov    WORD PTR [eax],cs
  412018:	mov    eax,ds:0xf4cd66e
  41201d:	aad    0xa8
  41201f:	jl     0x41201b
  412021:	test   BYTE PTR ds:0xb5a2e157,dl
  412027:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412028:	cmc    
  412029:	mov    esp,DWORD PTR [edx+edx*1]
  41202c:	les    edx,FWORD PTR [ebx+ebp*2-0x23e23305]
  412033:	jb     0x412063
  412035:	rcr    BYTE PTR [ebx-0x73],cl
  412038:	add    eax,0xd7ec9611
  41203d:	mov    WORD PTR [ecx-0x62562f4b],gs
  412043:	push   0x51811667
  412048:	jns    0x411fef
  41204a:	test   al,0x6c
  41204c:	int3   
  41204d:	loopne 0x411fe7
  41204f:	daa    
  412050:	mov    esp,0x4166fe21
  412055:	push   ebp
  412056:	aaa    
  412057:	out    dx,eax
  412058:	scas   al,BYTE PTR es:[edi]
  412059:	call   0xb484e625
  41205e:	adc    edi,DWORD PTR [ebx-0x60afdd3c]
  412064:	mov    cl,0x3d
  412066:	leave  
  412067:	js     0x411ffc
  412069:	inc    ebx
  41206a:	(bad)  
  41206c:	xor    bl,0x55
  41206f:	lahf   
  412070:	out    0xc5,al
  412072:	inc    ebx
  412073:	jns    0x4120b0
  412075:	and    al,0x6
  412077:	cmc    
  412078:	xchg   edx,eax
  412079:	push   0x18ba7600
  41207e:	xchg   esi,eax
  41207f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412080:	(bad)  
  412081:	pop    ebp
  412083:	mov    ?,WORD PTR [esi+esi*4-0x6f]
  412087:	mov    dh,0x98
  412089:	cmp    al,0xb8
  41208b:	xlat   BYTE PTR ds:[ebx]
  41208c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41208d:	mov    edx,0xa6dd3141
  412092:	cdq    
  412093:	or     bl,BYTE PTR [ebp+0x74d3e50c]
  412099:	pop    ds
  41209a:	pop    ebx
  41209b:	fsub   QWORD PTR ds:0xd272c861
  4120a1:	cmp    esp,DWORD PTR [ebx-0xb9bf176]
  4120a7:	sbb    edx,DWORD PTR [edx-0x43]
  4120aa:	or     al,0xbb
  4120ac:	das    
  4120ad:	sar    DWORD PTR [ecx-0x7],cl
  4120b0:	and    eax,0xdaece717
  4120b5:	pop    edi
  4120b6:	inc    esi
  4120b7:	sbb    al,0x58
  4120b9:	call   0x24c:0xc94cfecf
  4120c0:	ds ins BYTE PTR es:[edi],dx
  4120c2:	add    al,0xc3
  4120c4:	fild   DWORD PTR [esi-0x5e02c920]
  4120ca:	fadd   DWORD PTR [ebx]
  4120cc:	jecxz  0x4120a3
  4120ce:	or     DWORD PTR [eax],edx
  4120d0:	popf   
  4120d1:	(bad)  
  4120d2:	(bad)  
  4120d3:	test   al,0xf6
  4120d5:	arpl   bp,dx
  4120d7:	nop
  4120d8:	mov    ebx,0x226d70eb
  4120dd:	mov    DWORD PTR [eax+0x27],0xb0f1dd28
  4120e4:	sbb    ebx,esp
  4120e6:	cmc    
  4120e7:	push   ebx
  4120e8:	outs   dx,BYTE PTR ds:[esi]
  4120e9:	mov    ecx,0x8b2c702e
  4120ee:	push   ebp
  4120ef:	xor    eax,0x287ce254
  4120f4:	inc    ecx
  4120f5:	jmp    0xd108:0x8b0e0720
  4120fc:	mov    ds:0x7a05aac5,eax
  412101:	mov    cl,0x4
  412103:	or     ebx,DWORD PTR [edx-0x727481e7]
  412109:	sub    DWORD PTR [eax],ebx
  41210b:	es dec ebp
  41210d:	or     DWORD PTR [eax+0x64952d86],esi
  412113:	scas   al,BYTE PTR es:[edi]
  412114:	(bad)  
  412115:	inc    ebp
  412116:	call   0x17bd:0x1b36c569
  41211d:	imul   esi
  41211f:	sub    ax,0xf6ea
  412123:	popa   
  412124:	cmp    dh,0xfc
  412127:	fisubr WORD PTR [edi-0x10]
  41212a:	scas   al,BYTE PTR es:[edi]
  41212b:	and    DWORD PTR [edx+0x2c],ecx
  41212e:	(bad)  
  41212f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412130:	mov    ebx,0x6329517b
  412135:	in     eax,dx
  412136:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412137:	repz jnp 0x412199
  41213a:	fadd   st(7),st
  41213c:	push   edi
  41213d:	cmp    BYTE PTR [ecx+0x13],0x71
  412141:	int    0xde
  412143:	lahf   
  412144:	add    BYTE PTR [ebx],al
  412146:	(bad)  
  412148:	mov    WORD PTR [esi],cs
  41214a:	in     al,0x95
  41214c:	jne    0x4120e4
  41214e:	sbb    al,0xa0
  412150:	es cmp eax,0x3d5db001
  412156:	jb     0x4120f6
  412158:	das    
  412159:	loope  0x41210f
  41215b:	nop
  41215c:	adc    BYTE PTR [edx+0x57],dh
  41215f:	js     0x412105
  412161:	loop   0x412126
  412163:	ja     0x41216d
  412165:	jbe    0x412123
  412167:	jmp    0x5ae46dd8
  41216c:	in     al,0x85
  41216e:	or     bh,bh
  412170:	and    bl,BYTE PTR [ecx]
  412172:	adc    ebp,DWORD PTR [esi]
  412174:	sbb    BYTE PTR [esp+ebx*2+0x74],0xed
  412179:	push   cs
  41217a:	cdq    
  41217b:	xor    ah,dh
  41217d:	or     al,0xf6
  41217f:	dec    esp
  412180:	jno    0x41216e
  412182:	sub    BYTE PTR [edi+esi*8],cl
  412185:	xor    edx,DWORD PTR ds:0x28961a34
  41218b:	into   
  41218c:	gs mov dl,0x30
  41218f:	mov    DWORD PTR [esi-0x2d],eax
  412192:	mov    esp,fs
  412194:	mov    ah,0x63
  412196:	adc    DWORD PTR [esi-0x55],esp
  412199:	pop    edx
  41219a:	fst    st(7)
  41219c:	stc    
  41219d:	cmp    eax,0x956554fa
  4121a2:	cld    
  4121a3:	mov    edx,0x6ebec5db
  4121a8:	jne    0x4121b0
  4121aa:	jle    0x4121b5
  4121ac:	retf   0xf670
  4121af:	dec    esp
  4121b0:	add    dh,BYTE PTR [ebx]
  4121b2:	mov    al,ds:0xa71305a0
  4121b7:	or     al,0xb1
  4121b9:	int    0x50
  4121bb:	or     al,0x18
  4121bd:	icebp  
  4121be:	aaa    
  4121bf:	mov    al,0x6a
  4121c1:	in     al,0x57
  4121c3:	scas   eax,DWORD PTR es:[edi]
  4121c4:	ret    
  4121c5:	sbb    al,0x6
  4121c7:	push   0xa6e4d42d
  4121cc:	cmp    al,0x1
  4121ce:	lahf   
  4121cf:	pop    ebx
  4121d0:	mov    esi,0xc5c251dd
  4121d5:	mov    ah,0xc2
  4121d7:	mov    ebx,0x910fc4ad
  4121dc:	mov    dh,0x45
  4121df:	call   ecx
  4121e1:	cs and eax,0x1cadc217
  4121e7:	mov    ebx,ss
  4121e9:	cwde   
  4121ea:	jg     0x412242
  4121ec:	jnp    0x412174
  4121ee:	mov    eax,0xe18c2254
  4121f3:	repz jmp 0x630a1558
  4121f9:	loop   0x412269
  4121fb:	pop    es
  4121fc:	adc    edi,ebx
  4121fe:	sbb    eax,DWORD PTR [ebx+0x38]
  412201:	and    bh,BYTE PTR [eax]
  412203:	icebp  
  412204:	les    edx,FWORD PTR [ecx-0x2e]
  412207:	stos   BYTE PTR es:[edi],al
  412208:	aas    
  412209:	jmp    0x4121b0
  41220b:	push   ebp
  41220c:	mov    edi,0x6a1d2c94
  412211:	mov    bh,0x22
  412213:	aam    0xc9
  412215:	popa   
  412216:	data16 std 
  412218:	aam    0xbb
  41221a:	or     dh,BYTE PTR [ecx-0xc]
  41221d:	rcl    ebp,0x94
  412220:	bound  edx,QWORD PTR ds:0x407ba2e6
  412226:	scas   eax,DWORD PTR es:[edi]
  412227:	gs pop ss
  412229:	inc    edx
  41222a:	aad    0x79
  41222c:	xchg   ebx,eax
  41222d:	mov    ds:0xb0e0cbae,eax
  412232:	cmp    al,0x48
  412234:	mov    BYTE PTR [ecx+0x10],ah
  412237:	jg     0x41225d
  412239:	(bad)  
  41223a:	and    esp,ebp
  41223c:	pop    ds
  41223d:	outs   dx,BYTE PTR ds:[esi]
  41223e:	dec    esp
  41223f:	nop
  412240:	outs   dx,BYTE PTR ds:[esi]
  412241:	nop
  412242:	adc    DWORD PTR [eax+0x3ffab6fc],eax
  412248:	xchg   esp,eax
  412249:	js     0x41224d
  41224b:	jge    0x412290
  41224d:	jne    0x4122cc
  41224f:	scas   al,BYTE PTR es:[edi]
  412250:	shl    DWORD PTR [edx+edx*8+0x4c],0x67
  412255:	inc    esp
  412256:	fwait
  412257:	les    esp,FWORD PTR [ebp+0x3c]
  41225a:	call   0x4c20:0x7e590ee0
  412261:	jns    0x412289
  412263:	mov    edx,0x65fe179d
  412268:	dec    edx
  412269:	pushf  
  41226a:	fdiv   DWORD PTR [esi+0x6d25c07c]
  412270:	call   0xb58403d8
  412275:	xor    al,0xc
  412277:	or     al,0x9c
  412279:	iret   
  41227a:	push   esi
  41227b:	imul   edx,DWORD PTR [ecx-0x3e],0x33
  41227f:	mov    BYTE PTR [edi+0x38],cl
  412282:	aaa    
  412283:	(bad)  
  412285:	sahf   
  412286:	ds push ebp
  412288:	mov    ah,0xaa
  41228a:	inc    edi
  41228b:	inc    ebx
  41228c:	and    BYTE PTR [edx-0x7bc7065f],dh
  412292:	addr16 xchg ebx,eax
  412294:	(bad)  
  412295:	ret    0xfa3e
  412298:	inc    esi
  412299:	dec    edi
  41229a:	xor    edi,DWORD PTR [eax+0x6fd7887f]
  4122a0:	(bad)  [esi-0x4cb5c0d2]
  4122a6:	or     eax,0xbbd5bc8
  4122ab:	hlt    
  4122ac:	sub    al,0xbd
  4122ae:	sti    
  4122af:	and    bh,ch
  4122b1:	sub    eax,DWORD PTR [edi-0x39]
  4122b4:	pop    es
  4122b5:	xlat   BYTE PTR ds:[ebx]
  4122b6:	pop    es
  4122b7:	dec    esi
  4122b8:	dec    eax
  4122b9:	fimul  WORD PTR [esi+0x5aad1b78]
  4122bf:	clc    
  4122c0:	and    ecx,DWORD PTR [ebp+0x57]
  4122c3:	fild   QWORD PTR [esi+0x5b]
  4122c6:	imul   ebp,DWORD PTR [esi],0xa0b9bc9d
  4122cc:	push   esi
  4122cd:	mul    DWORD PTR [bx+si+0x38]
  4122d1:	call   0x9f07:0xd5d1080e
  4122d8:	ret    
  4122d9:	xchg   esp,eax
  4122da:	push   edi
  4122db:	jmp    0xf0e3958d
  4122e0:	sbb    BYTE PTR [esp+eax*4+0x4a],0xae
  4122e5:	inc    ebp
  4122e6:	adc    BYTE PTR [eax-0x2d5eec42],bh
  4122ec:	mov    bl,BYTE PTR [ebx+ecx*1-0x5a]
  4122f0:	xor    al,0x2
  4122f2:	push   eax
  4122f3:	in     al,dx
  4122f4:	or     DWORD PTR [edx+0x5b],eax
  4122f7:	jmp    0x5fa62d40
  4122fc:	psubw  mm5,mm6
  4122ff:	jno    0x4122a2
  412301:	sub    al,0x33
  412303:	cmp    BYTE PTR [edx],cl
  412305:	imul   ebx,DWORD PTR [esi+0x4],0x12
  412309:	(bad)  
  41230a:	fisttp QWORD PTR [edi]
  41230c:	lods   al,BYTE PTR ds:[esi]
  41230d:	test   BYTE PTR [ebp+0x9],bh
  412310:	nop
  412311:	push   ds
  412312:	test   eax,0x778a9b33
  412317:	(bad)  
  412319:	fild   WORD PTR [edi]
  41231b:	add    BYTE PTR [ecx-0x49],ah
  41231e:	jmp    0x3f0208ce
  412323:	and    dh,dh
  412325:	push   ss
  412326:	icebp  
  412327:	test   DWORD PTR [ecx],eax
  412329:	mov    edx,0xcd1f8bde
  41232e:	fdiv   DWORD PTR [ebp+0x661ba2be]
  412334:	sub    eax,0x22acb95e
  412339:	ds sbb al,0x82
  41233c:	div    DWORD PTR ds:0xdb90221c
  412342:	hlt    
  412343:	jg     0x412357
  412345:	mov    bh,BYTE PTR [edi]
  412347:	inc    esi
  412348:	ja     0x41231f
  41234a:	adc    bh,bl
  41234c:	push   esp
  41234d:	ficom  WORD PTR [ebx]
  41234f:	inc    esp
  412350:	inc    ecx
  412351:	loop   0x412369
  412353:	addr16 repnz pushf 
  412356:	ja     0x412340
  412358:	outs   dx,BYTE PTR ds:[esi]
  412359:	lods   eax,DWORD PTR ds:[esi]
  41235a:	xchg   esi,eax
  41235b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41235c:	dec    edx
  41235d:	jmp    esi
  41235f:	mov    ah,0xa2
  412361:	and    eax,0xd5632a79
  412366:	push   edx
  412367:	xchg   esi,eax
  412368:	scas   eax,DWORD PTR es:[edi]
  412369:	mov    eax,ds:0x4253ede
  41236e:	sbb    DWORD PTR [esi+0xe],esp
  412371:	inc    edi
  412372:	out    0xcb,eax
  412374:	fs (bad) 
  412377:	sbb    BYTE PTR [esi+0x50],ah
  41237a:	add    al,0x37
  41237c:	cmp    edi,DWORD PTR [esi]
  41237e:	sbb    DWORD PTR [ecx-0x3abec11b],0xd644ad4f
  412388:	mov    db2,ebx
  41238b:	pop    ebx
  41238c:	das    
  41238d:	sub    DWORD PTR [edi-0x307a586b],ecx
  412393:	dec    ebp
  412394:	mov    edx,0xdcfaba1b
  412399:	jae    0x4123ac
  41239b:	nop
  41239c:	pop    edx
  41239d:	push   esp
  41239e:	sbb    al,0x7d
  4123a0:	jg     0x4123ec
  4123a2:	xor    BYTE PTR [esi+edx*1],ch
  4123a5:	int    0x61
  4123a7:	loop   0x4123dc
  4123a9:	push   0x4c7178f
  4123ae:	xchg   ebx,eax
  4123af:	call   0x6536e39c
  4123b4:	inc    eax
  4123b5:	mov    ch,0x10
  4123b7:	loop   0x412388
  4123b9:	ror    DWORD PTR [ebx-0x13],0xbb
  4123bd:	sbb    DWORD PTR [edx+0x2],edx
  4123c0:	jg     0x41242e
  4123c2:	and    eax,0xfdf8f92d
  4123c7:	add    eax,0xe909dcbf
  4123cc:	ret    0x1297
  4123cf:	cdq    
  4123d0:	jl     0x412418
  4123d2:	jne    0x4123d6
  4123d4:	inc    esp
  4123d5:	test   eax,0x33fa0feb
  4123da:	rol    DWORD PTR [ebx+eiz*1],1
  4123dd:	xor    BYTE PTR [eax+0x16825dbc],bh
  4123e3:	cmp    ch,BYTE PTR [esi-0x3a]
  4123e6:	and    BYTE PTR [esi+0x56],bh
  4123e9:	fdivr  st(0),st
  4123eb:	jl     0x412452
  4123ed:	mov    dl,0xb4
  4123ef:	jns    0x41245b
  4123f1:	xchg   esp,eax
  4123f2:	and    esi,DWORD PTR [edi-0xf]
  4123f5:	in     eax,0xe8
  4123f7:	lock xlat BYTE PTR ds:[ebx]
  4123f9:	nop
  4123fa:	inc    ecx
  4123fb:	lea    ebp,ds:0x2c30e0bb
  412401:	fwait
  412402:	push   es
  412403:	test   eax,0xcde91d9f
  412408:	in     eax,dx
  412409:	adc    eax,0xf8c8e250
  41240e:	push   esi
  41240f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412410:	(bad)  
  412411:	sbb    dl,BYTE PTR [eax+0x58666fdb]
  412417:	mov    cl,0x21
  412419:	pop    esp
  41241a:	scas   al,BYTE PTR es:[edi]
  41241b:	jno    0x41243e
  41241d:	out    0xcd,eax
  41241f:	fld    TBYTE PTR [edx-0x52fe51cb]
  412425:	retf   
  412426:	pop    edi
  412427:	pop    esp
  412428:	xchg   edi,eax
  412429:	inc    edx
  41242a:	push   0x53b267ff
  41242f:	ss fs dec edi
  412432:	scas   eax,DWORD PTR es:[edi]
  412433:	push   es
  412434:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412435:	sbb    BYTE PTR [ebx+0x2c],cl
  412438:	rcl    DWORD PTR [eax+0xb],1
  41243b:	ss aad 0xb7
  41243e:	addr16 mov al,0x7a
  412441:	xchg   edi,eax
  412442:	or     al,0xf8
  412444:	sub    eax,0xccf5a259
  412449:	ret    
  41244a:	imul   ecx,DWORD PTR [eax-0x7d],0x394912ad
  412451:	xchg   esi,eax
  412452:	(bad)  
  412453:	(bad)  
  412454:	inc    ebp
  412455:	xor    eax,0x8356a502
  41245a:	pop    esp
  41245b:	xchg   DWORD PTR [ebp+ebp*2-0x1e],edi
  41245f:	push   esp
  412460:	aam    0xc2
  412462:	mov    ebp,0x57c7d20f
  412467:	or     DWORD PTR [ebx],ebx
  412469:	mov    ebx,0xebe08de9
  41246e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41246f:	es popa 
  412471:	fidiv  DWORD PTR [ebx+0x28a609bd]
  412477:	mov    ds:0x7584463c,eax
  41247c:	mov    bl,0xe8
  41247e:	sub    al,0x5d
  412480:	fist   WORD PTR [edx]
  412482:	ins    DWORD PTR es:[edi],dx
  412483:	loop   0x412491
  412485:	push   eax
  412486:	pushf  
  412487:	scas   eax,DWORD PTR es:[edi]
  412488:	push   ecx
  412489:	xor    al,0xd8
  41248b:	push   esp
  41248c:	ficomp DWORD PTR [esi-0x7]
  41248f:	call   0x9fb9:0x68a4a2e8
  412496:	jbe    0x412488
  412498:	iret   
  412499:	outs   dx,BYTE PTR ds:[esi]
  41249a:	cmp    edx,ebx
  41249c:	sub    al,0xb4
  41249e:	loopne 0x4124bc
  4124a0:	aaa    
  4124a1:	lds    edx,FWORD PTR [edx-0x19]
  4124a4:	jge    0x412514
  4124a6:	mov    edx,0xf0ecda3d
  4124ab:	pop    ecx
  4124ac:	ds adc ch,bh
  4124af:	mov    eax,0xaa1a7236
  4124b4:	xchg   ebp,eax
  4124b5:	sti    
  4124b6:	pop    esp
  4124b7:	mov    cx,0xb827
  4124bb:	loop   0x412469
  4124bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4124be:	cli    
  4124bf:	and    DWORD PTR [ecx],edi
  4124c1:	retf   
  4124c2:	nop
  4124c3:	xchg   BYTE PTR ds:0x81427e06,bh
  4124c9:	pop    esi
  4124ca:	and    edx,DWORD PTR [edi]
  4124cc:	mov    ds:0xc3fa85a3,al
  4124d1:	fsubr  DWORD PTR [edi]
  4124d3:	push   esp
  4124d4:	in     al,dx
  4124d5:	pushf  
  4124d6:	dec    edx
  4124d7:	sbb    ah,BYTE PTR [eax+0x31]
  4124da:	jmp    0x2555:0xf2ac7997
  4124e1:	rol    BYTE PTR [ecx+ecx*8-0x6125ad46],1
  4124e8:	repz test al,0xf4
  4124eb:	sbb    ebp,ebp
  4124ed:	fstp   QWORD PTR [edi+0x15]
  4124f0:	dec    eax
  4124f1:	jmp    0x8758e3cf
  4124f6:	ins    BYTE PTR es:[edi],dx
  4124f7:	mov    esi,0xa611bfba
  4124fc:	shr    edx,cl
  4124fe:	in     eax,0x28
  412500:	loop   0x4124e7
  412502:	into   
  412503:	mov    dh,0x0
  412505:	retf   0x600f
  412508:	inc    ebp
  412509:	(bad)  
  41250a:	(bad)  
  41250c:	sahf   
  41250d:	pop    esp
  41250e:	pop    ebx
  41250f:	aas    
  412510:	mov    cl,0x9f
  412512:	mov    esi,ecx
  412514:	add    al,ah
  412516:	jne    0x4124dd
  412518:	dec    edi
  412519:	xchg   edi,eax
  41251a:	stc    
  41251b:	mov    ds:0xc74a434,al
  412520:	adc    DWORD PTR [esi],0x19795dcc
  412526:	mov    ds:0xe14475a5,al
  41252b:	sub    al,0x8e
  41252d:	mov    al,0x76
  41252f:	out    0x6e,eax
  412531:	inc    esi
  412532:	mov    ch,0xf9
  412534:	cs cs scas al,BYTE PTR es:[edi]
  412537:	mov    ecx,0x1697b961
  41253c:	sbb    DWORD PTR [edi+0x4e5e2adf],ecx
  412542:	(bad)  
  412544:	inc    ebp
  412545:	scas   eax,DWORD PTR es:[edi]
  412546:	jg     0x412593
  412548:	xchg   ecx,eax
  412549:	jg     0x4124e7
  41254b:	repz push eax
  41254d:	xchg   esi,eax
  41254e:	jmp    0x8ef5:0xecea0111
  412555:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412556:	xchg   edx,eax
  412557:	test   eax,0x375ad87f
  41255c:	jmp    0xe2ea:0xdb9ba4ea
  412563:	pop    esi
  412564:	loopne 0x4125b9
  412566:	fsubrp st(2),st
  412568:	mov    ds:0x237bc2a7,al
  41256d:	ret    0x4ff9
  412570:	xchg   edi,eax
  412571:	push   es
  412572:	push   esp
  412573:	pop    esp
  412574:	push   ebx
  412575:	lock mul BYTE PTR [edx]
  412578:	and    DWORD PTR [ecx-0x8],0x8
  41257c:	fistp  QWORD PTR [eax+ecx*4]
  41257f:	sbb    eax,0xf1c4bf1b
  412584:	push   edi
  412585:	addr16 out dx,eax
  412587:	ret    0x3637
  41258a:	test   DWORD PTR [ebx-0x4],esi
  41258d:	test   ah,ch
  41258f:	sbb    eax,DWORD PTR [ecx+0x48]
  412592:	sbb    ch,BYTE PTR [edx-0xf]
  412595:	int    0xe9
  412597:	xor    esi,DWORD PTR [esp+eax*2-0x4c]
  41259b:	add    eax,0xfe60c2f8
  4125a0:	push   edi
  4125a1:	push   ebp
  4125a2:	sub    cl,BYTE PTR [esi-0x1c]
  4125a5:	jns    0x41252f
  4125a7:	ficomp DWORD PTR [ebx-0x381a6d52]
  4125ad:	jle    0x4125f3
  4125af:	pushf  
  4125b0:	mov    bh,0xa1
  4125b2:	sbb    eax,0x78fa475b
  4125b7:	(bad)  
  4125b8:	mov    WORD PTR [si],cs
  4125bb:	int3   
  4125bc:	add    esi,ebx
  4125be:	mov    edx,0x69499967
  4125c3:	stos   DWORD PTR es:[edi],eax
  4125c4:	enter  0x735,0xb1
  4125c8:	mov    DWORD PTR [edx+0x28cd9984],edi
  4125ce:	xor    ebp,DWORD PTR [ebx]
  4125d0:	repz add ch,bl
  4125d3:	lods   al,BYTE PTR ds:[esi]
  4125d4:	in     al,dx
  4125d5:	cmc    
  4125d6:	mov    ah,0x6e
  4125d8:	shl    DWORD PTR [ebp-0x2af42b43],1
  4125de:	and    edi,DWORD PTR [edi+0x7fd23514]
  4125e4:	xchg   esp,eax
  4125e5:	sti    
  4125e6:	(bad)  
  4125e7:	rcl    esp,cl
  4125e9:	leave  
  4125ea:	sub    bh,dh
  4125ec:	(bad)  
  4125ed:	xor    BYTE PTR [edi],bh
  4125ef:	rol    BYTE PTR [esi],0x8b
  4125f2:	mov    al,0x90
  4125f4:	stc    
  4125f5:	stos   BYTE PTR es:[edi],al
  4125f6:	or     al,0x19
  4125f8:	and    DWORD PTR [ebx+0x68],esp
  4125fb:	push   ds
  4125fc:	pop    eax
  4125fd:	xchg   edi,eax
  4125fe:	retf   
  4125ff:	or     eax,DWORD PTR [ebx+ebx*1]
  412602:	cdq    
  412603:	mov    ecx,DWORD PTR [eax+0x7d]
  412606:	js     0x41260a
  412608:	std    
  412609:	dec    esp
  41260a:	cmp    eax,0x41840afe
  41260f:	test   DWORD PTR [esi+0x27832fbe],esp
  412615:	jmp    0x41267e
  412617:	pop    eax
  412618:	test   eax,0x5fef4200
  41261d:	ds ret 0x9eb
  412621:	dec    esi
  412622:	lods   al,BYTE PTR ds:[esi]
  412623:	lods   al,BYTE PTR ds:[esi]
  412624:	inc    edx
  412625:	pop    ebx
  412626:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412627:	inc    ebp
  412628:	imul   ecx,DWORD PTR [edi+0x33],0xee2c6026
  41262f:	in     al,0xb1
  412631:	pop    ebx
  412632:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412633:	pop    ebx
  412634:	mov    BYTE PTR [ebp+0x61522382],0x9b
  41263b:	cli    
  41263c:	push   0x17
  41263e:	dec    ebp
  41263f:	neg    BYTE PTR [ecx+edx*4]
  412642:	push   es
  412643:	and    al,0x4d
  412645:	mov    esi,0x22280468
  41264a:	sub    edi,DWORD PTR [eax-0x1c9fa73c]
  412650:	adc    DWORD PTR [edi+0x16],0x8c96f7d
  412657:	adc    esp,DWORD PTR [ebp+0x6]
  41265a:	test   eax,0x73852d88
  41265f:	in     eax,dx
  412660:	push   esi
  412661:	aam    0x7
  412663:	repz fbstp TBYTE PTR gs:[eax]
  412667:	adc    DWORD PTR [eax-0x7b],esi
  41266a:	push   edi
  41266b:	aas    
  41266c:	mov    cs,ecx
  41266e:	jb     0x41263d
  412670:	(bad)  [ecx-0x12716cb8]
  412676:	mov    dl,0xa5
  412678:	ror    DWORD PTR [eax],cl
  41267a:	sti    
  41267b:	add    BYTE PTR [ecx-0x7a],0x24
  41267f:	jbe    0x4126a6
  412681:	cld    
  412682:	(bad)  
  412685:	repnz xor BYTE PTR es:[edx],dh
  412689:	pop    edi
  41268a:	das    
  41268b:	dec    esp
  41268c:	loope  0x412625
  41268e:	mov    esp,0xebd94438
  412693:	or     ebx,ebp
  412695:	add    cl,al
  412697:	mov    WORD PTR [esi-0x3a337194],ss
  41269d:	adc    al,0x95
  41269f:	dec    esp
  4126a0:	mov    eax,ds:0xa73b60f
  4126a5:	daa    
  4126a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126a7:	cdq    
  4126a8:	mov    al,ds:0x470dcb05
  4126ad:	aas    
  4126ae:	pop    eax
  4126af:	push   esi
  4126b0:	xor    DWORD PTR [edx+0x49e6d554],ebx
  4126b6:	push   edi
  4126b7:	jg     0x412691
  4126b9:	pop    edx
  4126ba:	stos   DWORD PTR es:[edi],eax
  4126bb:	adc    esp,DWORD PTR ds:0x458be58c
  4126c1:	add    esi,DWORD PTR [edi]
  4126c3:	xlat   BYTE PTR ds:[ebx]
  4126c4:	sbb    eax,0x63ca02d9
  4126c9:	mov    ebx,0x69e3caed
  4126ce:	mov    esi,0x336cee79
  4126d3:	jbe    0x412705
  4126d5:	shl    dl,0xf1
  4126d8:	or     esp,ecx
  4126da:	sbb    DWORD PTR [ebp+0x63],ecx
  4126dd:	lea    ebp,[edi]
  4126df:	lahf   
  4126e0:	push   ecx
  4126e1:	push   0x9fbe7f57
  4126e6:	ret    
  4126e7:	push   eax
  4126e8:	(bad)  
  4126e9:	mov    bl,0x1f
  4126eb:	je     0x4126f0
  4126ed:	and    BYTE PTR [ebp+0x16c11abb],0xbd
  4126f4:	dec    esp
  4126f5:	pop    edi
  4126f6:	pop    eax
  4126f7:	pop    ss
  4126f8:	mov    WORD PTR [edx-0x46ac99bc],?
  4126fe:	add    al,0x27
  412700:	stos   BYTE PTR es:[edi],al
  412701:	mov    edi,0xab88bd5d
  412706:	cdq    
  412707:	(bad)  
  412708:	and    DWORD PTR [ecx],edi
  41270a:	sti    
  41270b:	repnz div ebp
  41270e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41270f:	pop    es
  412710:	push   esp
  412711:	xor    DWORD PTR [edi-0x31],esi
  412714:	and    ecx,edi
  412716:	adc    eax,0x8e7e6df7
  41271b:	aas    
  41271c:	xor    ebp,DWORD PTR [ebx+0x6d]
  41271f:	sbb    ebx,DWORD PTR ss:[ecx-0x1e]
  412723:	sub    al,0x8c
  412725:	sub    bl,BYTE PTR [eax+ecx*2-0x17]
  412729:	xchg   ebp,eax
  41272a:	mov    eax,0xb0a9d52
  41272f:	(bad)  
  412730:	fimul  DWORD PTR [ecx]
  412732:	cmp    DWORD PTR cs:[ecx-0x66ca9d54],0x6f1f8909
  41273d:	sbb    al,al
  41273f:	dec    esp
  412740:	xchg   esp,eax
  412741:	data16 sahf 
  412743:	add    BYTE PTR [eax+0x5c3080d9],al
  412749:	dec    edx
  41274a:	push   edi
  41274b:	out    dx,eax
  41274c:	jbe    0x41276e
  41274e:	or     DWORD PTR [edi-0x3e6d8f89],edi
  412754:	push   0x11
  412756:	xchg   edx,eax
  412757:	push   es
  412758:	jae    0x412711
  41275a:	pop    es
  41275b:	cmp    DWORD PTR [eax-0x4f],0x41
  41275f:	scas   al,BYTE PTR es:[edi]
  412760:	sbb    al,0xc8
  412762:	pop    ds
  412763:	daa    
  412764:	mov    ch,0x1b
  412766:	rcr    BYTE PTR [ecx],1
  412768:	and    ah,dl
  41276a:	mov    DWORD PTR [edi-0x24],edx
  41276d:	cmc    
  41276e:	cmp    al,BYTE PTR [edx+edi*4]
  412771:	pop    edi
  412772:	mov    al,0x82
  412774:	jg     0x4127b3
  412776:	fidivr WORD PTR [ebx]
  412778:	(bad)  ds:0x70f16a35
  41277e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41277f:	xchg   esp,eax
  412780:	and    dl,BYTE PTR [ecx-0x26]
  412783:	mov    ebx,0xd151fee4
  412788:	retf   0x2418
  41278b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41278c:	scas   eax,DWORD PTR es:[edi]
  41278d:	inc    ebp
  41278e:	xor    al,0xea
  412790:	popa   
  412791:	jge    0x41274c
  412793:	rcl    DWORD PTR [ebx-0x1f],0xf6
  412797:	xlat   BYTE PTR ds:[ebx]
  412798:	mov    ebp,0x2ed61242
  41279d:	jmp    0xf8d7:0xf48b6449
  4127a4:	ret    0x6fed
  4127a7:	push   ebx
  4127a8:	lods   al,BYTE PTR ds:[esi]
  4127a9:	mov    al,ds:0x613fc75f
  4127ae:	mov    dl,0xd2
  4127b0:	xor    BYTE PTR [esi+esi*4],al
  4127b3:	outs   dx,DWORD PTR ds:[esi]
  4127b4:	ret    0x11d5
  4127b7:	hlt    
  4127b8:	pop    esp
  4127b9:	cmovae edx,DWORD PTR [ebp-0x7f08d448]
  4127c0:	rcr    edi,cl
  4127c2:	lods   eax,DWORD PTR ds:[esi]
  4127c3:	mov    ebx,0x85e76ea1
  4127c8:	jl     0x41281a
  4127ca:	push   edi
  4127cb:	mov    gs,ecx
  4127cd:	std    
  4127ce:	lods   eax,DWORD PTR ds:[esi]
  4127cf:	out    0x4c,eax
  4127d1:	cwde   
  4127d2:	sbb    BYTE PTR [ecx-0x2b],dh
  4127d5:	add    ebx,DWORD PTR [esi-0x19c3788d]
  4127db:	jl     0x4127bb
  4127dd:	(bad)  
  4127de:	fbstp  TBYTE PTR [eax+0x31872c78]
  4127e4:	stc    
  4127e5:	sbb    BYTE PTR [edx],0x37
  4127e8:	nop
  4127e9:	dec    ebp
  4127ea:	aas    
  4127eb:	mov    edx,0x9a91c8b9
  4127f0:	add    dh,BYTE PTR [ebp+0x58956721]
  4127f6:	add    eax,0x6b39faa0
  4127fb:	cmp    al,0x9
  4127fd:	sbb    esi,ecx
  4127ff:	mov    ds:0x77658138,eax
  412804:	mov    bh,0x19
  412806:	xor    esi,esp
  412808:	sahf   
  412809:	cdq    
  41280a:	mov    ch,0x93
  41280c:	mov    bl,0x6a
  41280e:	dec    ecx
  41280f:	adc    BYTE PTR [edi],al
  412811:	add    esi,ebx
  412813:	push   edi
  412814:	ds ja  0x412865
  412817:	add    al,BYTE PTR [edi+eiz*1-0x573a5b95]
  41281e:	(bad)  
  41281f:	pop    esp
  412820:	cmp    ecx,edi
  412822:	add    eax,0x888c9911
  412827:	push   esp
  412828:	xchg   edi,eax
  412829:	xor    eax,0x32979f3f
  41282e:	pusha  
  41282f:	mov    al,bl
  412831:	push   DWORD PTR [ebx+0x12b2e4fe]
  412837:	sti    
  412838:	call   0x6999:0x55e19779
  41283f:	sub    DWORD PTR [edi-0x7b3abb22],esp
  412845:	iret   
  412846:	jo     0x4128b1
  412848:	rcr    BYTE PTR [ebp*1+0x528df393],0x2c
  412850:	outs   dx,BYTE PTR ds:[esi]
  412851:	(bad)
  412856:	sbb    ecx,DWORD PTR [esi]
  412858:	outs   dx,DWORD PTR ds:[esi]
  412859:	arpl   WORD PTR [ecx+0x4f65b227],si
  41285f:	enter  0x3d24,0x17
  412863:	dec    BYTE PTR [ecx+edx*1+0x4cf7a3a5]
  41286a:	test   al,0x3
  41286c:	mov    cl,0x43
  41286e:	test   BYTE PTR [ebx],al
  412870:	sub    BYTE PTR [eax],0x30
  412873:	inc    esp
  412874:	outs   dx,BYTE PTR ds:[esi]
  412875:	inc    ecx
  412876:	test   al,0xe0
  412878:	adc    al,0xa7
  41287a:	sar    BYTE PTR [ebx-0x2c216aa],1
  412880:	(bad)  
  412881:	scas   eax,DWORD PTR es:[edi]
  412882:	call   0x3f3e:0xbb2d38cc
  412889:	push   es
  41288a:	and    ah,ch
  41288c:	adc    eax,0x9a57bea7
  412891:	jne    0x412888
  412893:	mov    ds:0xfca923e6,al
  412898:	dec    esi
  412899:	je     0x412822
  41289b:	xchg   DWORD PTR [ebp-0x49],esi
  41289e:	mov    bl,0xf
  4128a0:	shl    BYTE PTR [eax-0x4],0x36
  4128a4:	outs   dx,BYTE PTR ds:[esi]
  4128a5:	int3   
  4128a6:	aaa    
  4128a7:	mov    ebx,0x6e2bd069
  4128ac:	add    eax,0x2f25ee85
  4128b1:	add    al,0xe1
  4128b3:	(bad)  
  4128b4:	push   esp
  4128b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4128b6:	mov    eax,0xca652d37
  4128bb:	cmc    
  4128bc:	ds test al,0x35
  4128bf:	pop    ss
  4128c0:	push   edi
  4128c1:	adc    bl,ch
  4128c3:	push   ss
  4128c4:	adc    eax,0xac6ebf7e
  4128c9:	or     bh,BYTE PTR [esi]
  4128cb:	xchg   esp,eax
  4128cc:	jmp    FWORD PTR [edi-0x5e]
  4128cf:	shl    BYTE PTR [eax-0x22],1
  4128d2:	jp     0x412905
  4128d4:	inc    esi
  4128d5:	rcl    BYTE PTR [edi+0x7c],cl
  4128d8:	cmp    al,0xdc
  4128da:	push   eax
  4128db:	icebp  
  4128dc:	fsubr  QWORD PTR [edx+0x3bac6168]
  4128e2:	fucomp st(2)
  4128e4:	test   BYTE PTR [ebp+0x40],cl
  4128e7:	xor    al,0xfc
  4128e9:	mov    edi,0x8afedf81
  4128ee:	dec    eax
  4128ef:	out    0x53,al
  4128f1:	mov    esi,DWORD PTR es:[ebp+eax*2+0x1d4518b8]
  4128f9:	xchg   ebp,eax
  4128fa:	stos   BYTE PTR es:[edi],al
  4128fb:	inc    ebp
  4128fc:	cwde   
  4128fd:	pop    edx
  4128fe:	dec    eax
  4128ff:	or     BYTE PTR [ebp+0x2a],ch
  412902:	lds    ecx,FWORD PTR [edi-0x4d381d18]
  412908:	scas   eax,DWORD PTR es:[edi]
  412909:	push   eax
  41290a:	(bad)  
  41290b:	push   edi
  41290c:	idiv   BYTE PTR [edi]
  41290e:	sub    dl,ah
  412910:	(bad)  [eax]
  412912:	jl     0x4128cd
  412914:	lods   eax,DWORD PTR ds:[esi]
  412915:	jmp    0x9e93:0xb612830e
  41291c:	or     bh,bl
  41291e:	jb     0x41293b
  412920:	dec    edx
  412921:	mov    gs,WORD PTR [eax-0x69fabb66]
  412927:	test   BYTE PTR [esi+ecx*2+0x23e88099],ah
  41292e:	lods   eax,DWORD PTR ds:[esi]
  41292f:	je     0x412991
  412931:	arpl   WORD PTR [esi-0x4c7871c9],sp
  412937:	xchg   edx,eax
  412938:	or     dl,BYTE PTR ds:0xd31b3806
  41293e:	cli    
  41293f:	pushf  
  412940:	stos   DWORD PTR es:[edi],eax
  412941:	(bad)  
  412942:	in     al,0x8b
  412944:	fmul   st(2),st
  412946:	les    esp,FWORD PTR [ecx+0x22]
  412949:	lods   al,BYTE PTR ds:[esi]
  41294a:	jb     0x4128ed
  41294c:	cmp    eax,0xbf5cf5e9
  412951:	test   eax,0x4c3c041e
  412956:	sbb    eax,0x3bdfba96
  41295b:	mov    bl,0x77
  41295d:	add    ebx,DWORD PTR [ecx-0x4e]
  412960:	xchg   esi,eax
  412961:	pop    ebx
  412962:	dec    eax
  412963:	jnp    0x412949
  412965:	mov    bl,0x39
  412967:	adc    al,0x61
  412969:	out    0x46,eax
  41296b:	sbb    esi,DWORD PTR [esi+0x12]
  41296e:	xor    ah,BYTE PTR [esi-0x2f]
  412971:	jmp    0x412909
  412973:	cli    
  412974:	repz pop ebp
  412976:	mov    cl,0x15
  412978:	sbb    dh,bl
  41297a:	jle    0x412941
  41297c:	popf   
  41297d:	mov    cl,0x99
  41297f:	mov    WORD PTR [ebp-0x23a6a52b],cs
  412985:	cs test al,0x32
  412988:	xor    DWORD PTR [ebx],esi
  41298a:	xor    esi,edi
  41298c:	pop    eax
  41298d:	lods   eax,DWORD PTR ds:[esi]
  41298e:	mov    edx,DWORD PTR [ebp-0x8]
  412991:	bound  ecx,QWORD PTR [esi]
  412993:	stc    
  412994:	and    BYTE PTR [ebp+0x5c35afc],cl
  41299a:	test   eax,0xc8dca797
  41299f:	das    
  4129a0:	mov    dh,0xc
  4129a2:	loop   0x41299e
  4129a4:	cdq    
  4129a5:	retf   
  4129a6:	into   
  4129a7:	cmp    bl,BYTE PTR es:[edi+0x39a36cd2]
  4129ae:	ins    DWORD PTR es:[edi],dx
  4129af:	push   ebp
  4129b0:	mov    ds:0x9dcd1b25,al
  4129b6:	dec    ebx
  4129b7:	neg    DWORD PTR [ebx+0x3]
  4129ba:	cdq    
  4129bb:	jle    0x4129b6
  4129bd:	push   0xffffffb6
  4129bf:	test   BYTE PTR [edx+0x68],dh
  4129c2:	mov    edx,0x55ab1831
  4129c7:	xchg   BYTE PTR [ebx-0x291d0065],dl
  4129cd:	jmp    0x95cf:0x2a4793f4
  4129d4:	sub    bh,BYTE PTR [ebp+0x12f9dae1]
  4129da:	popf   
  4129db:	dec    esi
  4129dc:	movmskps eax,xmm1
  4129df:	iret   
  4129e0:	ins    BYTE PTR es:[edi],dx
  4129e1:	(bad)  
  4129e2:	aas    
  4129e3:	jb     0x412a02
  4129e5:	xchg   edx,eax
  4129e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129e7:	int3   
  4129e8:	xlat   BYTE PTR ds:[ebx]
  4129e9:	and    esi,DWORD PTR [ecx-0x7b98fcb9]
  4129ef:	(bad)  
  4129f0:	adc    esi,DWORD PTR [edi]
  4129f2:	das    
  4129f3:	mov    ebp,0xcc555535
  4129f8:	xchg   edx,eax
  4129f9:	data16 mov bl,BYTE PTR [edi]
  4129fc:	pop    es
  4129fd:	loopne 0x412a08
  4129ff:	pop    esp
  412a00:	test   eax,0x4db6feb7
  412a05:	in     eax,dx
  412a06:	xor    al,0x3a
  412a08:	gs retf 
  412a0a:	pop    edi
  412a0b:	adc    DWORD PTR [edx+0x5a483a22],eax
  412a11:	int    0x3d
  412a13:	add    BYTE PTR [edx-0xfaf6625],ch
  412a19:	adc    esi,0x99cbf223
  412a1f:	mov    al,ds:0x9a24b1eb
  412a24:	das    
  412a25:	pop    ds
  412a26:	mov    WORD PTR [eax-0x56],fs
  412a29:	popa   
  412a2a:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  412a2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a2d:	add    al,0xd8
  412a2f:	ds aam 0x54
  412a32:	js     0x4129dd
  412a34:	pop    eax
  412a35:	in     eax,0x9b
  412a37:	push   edi
  412a38:	cwde   
  412a39:	frstor [edx-0x2ac2f6d3]
  412a3f:	add    ecx,DWORD PTR [ebx]
  412a41:	popf   
  412a42:	sbb    BYTE PTR [edi+0x32806eae],al
  412a48:	rol    BYTE PTR [eax-0x78d23d61],cl
  412a4e:	mov    al,ds:0x22b2fd8d
  412a53:	lea    esi,[ebp+0x7e]
  412a56:	gs pop ecx
  412a58:	cmp    ecx,esi
  412a5a:	unpckhps xmm0,xmm3
  412a5d:	mov    edi,0x5eafcc48
  412a62:	scas   al,BYTE PTR es:[edi]
  412a63:	add    dh,BYTE PTR [edx]
  412a65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a66:	jae    0x412ac5
  412a68:	or     eax,0xa861b38b
  412a6d:	push   eax
  412a6e:	stc    
  412a6f:	fwait
  412a70:	outs   dx,BYTE PTR ds:[esi]
  412a71:	shl    DWORD PTR es:[edi],0x96
  412a75:	pop    ds
  412a76:	inc    ebp
  412a77:	loopne 0x412a84
  412a79:	outs   dx,DWORD PTR ds:[esi]
  412a7a:	(bad)  
  412a7b:	mov    esi,0x3cf766e8
  412a80:	lds    eax,FWORD PTR [ecx]
  412a82:	sbb    esp,DWORD PTR [ecx+0x72a1a3bc]
  412a88:	pop    eax
  412a89:	test   esp,ebx
  412a8b:	or     DWORD PTR ds:0x591fab25,edx
  412a91:	sbb    cl,BYTE PTR [eax+edi*1-0x2b0724ea]
  412a98:	rcl    ah,0x4c
  412a9b:	mov    esi,0x6c88002e
  412aa0:	jne    0x412a76
  412aa2:	and    eax,0x18237926
  412aa7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412aa8:	jge    0x412ad5
  412aaa:	fwait
  412aab:	cmp    ah,cl
  412aad:	test   DWORD PTR [ebp-0x17345be],ecx
  412ab3:	bound  edi,QWORD PTR [esi+0x334dc454]
  412ab9:	jnp    0x412a5a
  412abb:	inc    ebx
  412abc:	or     al,0x58
  412abe:	pop    edi
  412abf:	es out dx,al
  412ac1:	nop
  412ac2:	loop   0x412a70
  412ac4:	aas    
  412ac5:	cmc    
  412ac6:	fsubr  DWORD PTR [esi]
  412ac8:	div    al
  412aca:	loopne 0x412b1b
  412acc:	pop    es
  412acd:	xchg   DWORD PTR [ebp-0x6f],ebp
  412ad0:	rcr    BYTE PTR ds:0x9147fa25,1
  412ad6:	outs   dx,BYTE PTR ds:[esi]
  412ad7:	jmp    0xb3668b0c
  412adc:	fs push cs
  412ade:	sub    eax,0x2444b67b
  412ae4:	adc    BYTE PTR [edx],cl
  412ae6:	inc    ebx
  412ae7:	int    0xf8
  412ae9:	sub    DWORD PTR [ebp+0x13],ebp
  412aec:	hlt    
  412aed:	pop    edx
  412aee:	jb     0x412a7c
  412af0:	sbb    ch,ah
  412af2:	mov    ds:0x6c649700,eax
  412af7:	or     eax,0x13b8fa5a
  412afc:	or     edx,DWORD PTR [edx+eax*2+0x35ea3a65]
  412b03:	out    0x59,al
  412b05:	pushf  
  412b06:	push   esp
  412b07:	lock sar esp,cl
  412b0a:	out    0xbb,eax
  412b0c:	add    ebx,DWORD PTR [edi+0x41]
  412b0f:	xchg   ebp,eax
  412b10:	hlt    
  412b11:	mov    DWORD PTR [ebx+0x16e99e92],esp
  412b17:	cmp    al,0x14
  412b19:	fist   WORD PTR [ebp-0x65]
  412b1c:	adc    DWORD PTR [ecx+0x7d800776],0x5b6d0ab2
  412b26:	mov    BYTE PTR [edi-0x45cd87aa],cl
  412b2c:	aam    0x68
  412b2e:	adc    edx,DWORD PTR ds:[eax-0x537763b7]
  412b35:	dec    edx
  412b36:	dec    ecx
  412b37:	mov    ecx,0xb7c9ff1
  412b3c:	and    BYTE PTR [eax],0x40
  412b3f:	or     esi,esp
  412b41:	cmc    
  412b42:	mov    dl,0x5b
  412b44:	or     BYTE PTR [ebp-0x481876ca],al
  412b4a:	pop    ebx
  412b4b:	mov    ds:0xa5f1248b,eax
  412b50:	pop    edx
  412b51:	sub    al,0x40
  412b53:	enter  0xa7d,0x31
  412b57:	aad    0x30
  412b59:	push   ds
  412b5a:	inc    ecx
  412b5b:	xchg   edi,eax
  412b5c:	fs mov ecx,0xcd328f93
  412b62:	push   ebp
  412b63:	mov    ch,BYTE PTR [edx-0x34fee5dd]
  412b69:	push   esi
  412b6a:	xor    eax,0x7db76c08
  412b6f:	das    
  412b70:	pop    eax
  412b71:	sbb    al,0xb9
  412b73:	dec    ebp
  412b74:	sti    
  412b75:	into   
  412b76:	das    
  412b77:	sbb    al,0x6a
  412b79:	ret    
  412b7a:	mov    edx,DWORD PTR [ebx]
  412b7c:	inc    esi
  412b7d:	mov    dh,0xab
  412b7f:	cmp    edx,DWORD PTR [ebx-0x2c]
  412b82:	sahf   
  412b83:	pushf  
  412b84:	pop    esi
  412b85:	push   eax
  412b86:	outs   dx,DWORD PTR ds:[esi]
  412b87:	and    DWORD PTR [edi],0xffffffcc
  412b8a:	call   0x2f30:0x9da627cb
  412b91:	lahf   
  412b92:	lods   al,BYTE PTR ds:[esi]
  412b93:	inc    esi
  412b94:	mov    cl,0x32
  412b96:	sub    eax,0x7d41e512
  412b9b:	pushf  
  412b9c:	xor    cl,bl
  412b9e:	fwait
  412b9f:	out    dx,al
  412ba0:	mov    ebx,DWORD PTR [esi+0x23]
  412ba3:	rol    BYTE PTR [ebx-0x5d8f07b3],cl
  412ba9:	cmp    ch,BYTE PTR es:[ecx-0x7c60c7a7]
  412bb0:	outs   dx,BYTE PTR ds:[esi]
  412bb1:	mov    bl,0x6b
  412bb3:	imul   BYTE PTR [edx]
  412bb5:	loope  0x412ba0
  412bb7:	adc    ebx,DWORD PTR [esi]
  412bb9:	mov    cl,BYTE PTR [edx]
  412bbb:	jne    0x412b6e
  412bbd:	add    eax,0xfe2d51ce
  412bc2:	jle    0x412bf1
  412bc4:	mov    ebx,DWORD PTR [ebx+0x15]
  412bc7:	sbb    DWORD PTR [ecx+0x740648c4],ebp
  412bcd:	dec    edi
  412bce:	adc    eax,0x96df37f2
  412bd3:	add    BYTE PTR fs:[ecx+0x63],cl
  412bd7:	js     0x412b83
  412bd9:	lods   al,BYTE PTR ds:[esi]
  412bda:	jae    0x412b8d
  412bdc:	jp     0x412c4e
  412bde:	jne    0x412b84
  412be0:	mov    DWORD PTR [esi],esi
  412be2:	imul   eax,DWORD PTR [ebx-0x37],0xc8e0dc39
  412be9:	or     DWORD PTR [ecx-0x37],edi
  412bec:	ss addr16 and eax,0x8a1e8a0a
  412bf3:	xchg   ebp,eax
  412bf4:	movaps xmm2,XMMWORD PTR [edx]
  412bf7:	fwait
  412bf8:	adc    BYTE PTR [ebx],dl
  412bfa:	call   0x52ff:0x78966342
  412c01:	pop    esp
  412c02:	sub    al,0x74
  412c05:	(bad)  [ebp+0x67]
  412c08:	xor    DWORD PTR [edx-0x17355750],0x44ef0c42
  412c12:	mov    cl,0xaa
  412c14:	sbb    eax,0x9fdb5ca1
  412c19:	sti    
  412c1a:	mov    ebx,0x167c707d
  412c1f:	ds mov ecx,0xf180cb9f
  412c25:	adc    al,0x71
  412c27:	inc    ebp
  412c28:	ins    BYTE PTR es:[edi],dx
  412c29:	sub    al,0x3c
  412c2b:	dec    edx
  412c2c:	mov    ecx,0x96c30fb1
  412c31:	dec    esi
  412c32:	and    edi,DWORD PTR [esi]
  412c34:	or     eax,0x4a9e14c1
  412c39:	sub    al,0x8f
  412c3b:	sub    DWORD PTR [ecx],ecx
  412c3d:	mov    ebx,edi
  412c3f:	or     BYTE PTR [edx-0x45],cl
  412c42:	and    al,0x7c
  412c44:	xor    al,0x73
  412c46:	or     DWORD PTR [edi-0x75891d78],edi
  412c4c:	sbb    esp,DWORD PTR ds:0xd372cb07
  412c52:	in     eax,0xaf
  412c54:	cmp    eax,0x5c180fa7
  412c59:	xchg   ecx,eax
  412c5a:	sbb    al,0x87
  412c5c:	mov    ds:0xec174ffb,eax
  412c61:	sbb    eax,0xe9f59fcb
  412c66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c67:	jmp    0x412c55
  412c69:	adc    eax,0x74c81d2b
  412c6e:	fisttp QWORD PTR [edx-0x18]
  412c71:	jo     0x412cde
  412c73:	dec    esp
  412c74:	(bad)  
  412c76:	and    DWORD PTR [ebp+0x3d015db7],eax
  412c7c:	jno    0x412c24
  412c7e:	add    DWORD PTR [ecx-0x56],0xc0542d1
  412c85:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c87:	push   edx
  412c88:	ficomp DWORD PTR [edx+eiz*8]
  412c8b:	ror    esi,cl
  412c8d:	xchg   DWORD PTR [eax],eax
  412c8f:	clc    
  412c90:	ror    BYTE PTR [edi],cl
  412c92:	lds    edi,FWORD PTR [esi+ebp*4]
  412c95:	inc    ecx
  412c96:	jae    0x412cd1
  412c98:	pop    eax
  412c99:	inc    ebp
  412c9a:	(bad)  
  412c9b:	mov    ecx,0x958b039b
  412ca0:	ds sbb eax,0x549dce30
  412ca6:	fimul  DWORD PTR [esi+0x44]
  412ca9:	and    BYTE PTR [esi],cl
  412cab:	inc    ebx
  412cac:	repz jns 0x412c55
  412caf:	call   DWORD PTR [ecx+0x604762c7]
  412cb5:	dec    esi
  412cb6:	adc    ebx,esp
  412cb8:	add    BYTE PTR [ecx-0x73],dh
  412cbb:	mov    DWORD PTR [esi+0x42ef3d14],ecx
  412cc1:	adc    ch,BYTE PTR [ebx-0x12]
  412cc4:	fs pop ds
  412cc6:	mov    esi,0x90eef362
  412ccb:	sub    ecx,DWORD PTR [ecx+0x1bdea873]
  412cd1:	pop    ds
  412cd2:	xchg   si,ax
  412cd4:	xchg   ebx,eax
  412cd5:	pop    ds
  412cd6:	mov    esp,0x17a869ea
  412cdb:	pushf  
  412cdc:	(bad)  
  412cdd:	mov    al,ds:0xb5b5ff97
  412ce2:	jae    0x412cff
  412ce4:	icebp  
  412ce5:	lods   al,BYTE PTR ds:[esi]
  412ce6:	mov    ah,0x61
  412ce8:	cli    
  412ce9:	push   ds
  412cea:	lds    ecx,FWORD PTR [esi-0x68]
  412ced:	xor    al,0xf
  412cef:	(bad)  
  412cf0:	lock inc esp
  412cf2:	stos   BYTE PTR es:[edi],al
  412cf3:	add    DWORD PTR es:[ebp-0x41],esp
  412cf7:	lahf   
  412cf8:	xor    al,0x67
  412cfa:	jae    0x412cb1
  412cfc:	sub    eax,0x91550971
  412d01:	test   BYTE PTR [edx],bh
  412d03:	mov    ch,0x2b
  412d05:	aam    0xad
  412d07:	dec    esp
  412d08:	(bad)
  412d0b:	dec    edi
  412d0c:	add    al,0xe2
  412d0e:	into   
  412d0f:	jmp    FWORD PTR [esi+0x151f5550]
  412d15:	imul   ecx,DWORD PTR [ebx+0x4479e8a8],0x7a1e3e4f
  412d1f:	fcom   DWORD PTR [edx+0x2e]
  412d22:	cli    
  412d23:	in     eax,0xf7
  412d25:	jno    0x412cf6
  412d27:	mov    BYTE PTR [ebx+eiz*2+0x1870e766],ch
  412d2e:	inc    ecx
  412d2f:	pop    ebp
  412d30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d31:	out    0x18,al
  412d33:	(bad)  
  412d34:	adc    al,BYTE PTR [ebp+0x62]
  412d37:	mov    cl,0xf2
  412d39:	pop    eax
  412d3a:	add    cl,BYTE PTR [edx]
  412d3c:	dec    eax
  412d3d:	jmp    0xc0e0:0xe825fc0e
  412d44:	and    al,0x6b
  412d46:	mov    eax,ds:0x4c1f8b76
  412d4b:	ins    DWORD PTR es:[edi],dx
  412d4c:	in     eax,0x87
  412d4e:	push   edi
  412d4f:	mov    bh,0x29
  412d51:	gs sub edi,esi
  412d54:	mov    eax,0x6315ff79
  412d59:	and    ebx,ebp
  412d5b:	fsub   st,st(1)
  412d5d:	cmp    eax,0x6b75f963
  412d62:	nop
  412d63:	sbb    ecx,DWORD PTR [ecx+0x4a]
  412d66:	mov    edi,0x34c60f2e
  412d6b:	ss push 0xffffff88
  412d6e:	mov    cl,0xac
  412d70:	test   DWORD PTR [si-0x6c],eax
  412d74:	xor    cl,ch
  412d76:	add    al,0xf3
  412d78:	and    eax,0x5b4c9523
  412d7d:	adc    BYTE PTR [ecx+0x6c],0x41
  412d81:	ins    DWORD PTR es:[edi],dx
  412d82:	int3   
  412d83:	mov    eax,0xd9a09b08
  412d88:	xchg   ah,al
  412d8a:	jp     0x412d69
  412d8c:	pop    esp
  412d8d:	jmp    0xb131:0x63e3e922
  412d94:	sub    DWORD PTR [eax*4-0x1d0283bb],esi
  412d9b:	or     edx,esi
  412d9d:	and    ebp,DWORD PTR [ebp+0x29]
  412da0:	cmp    eax,edi
  412da2:	pop    edx
  412da3:	mov    ds:0xca2d054f,al
  412da8:	outs   dx,BYTE PTR ds:[esi]
  412da9:	fwait
  412daa:	or     BYTE PTR [eax],ah
  412dac:	ins    DWORD PTR es:[edi],dx
  412dad:	sbb    ebp,DWORD PTR [ecx+0x52]
  412db0:	sahf   
  412db1:	dec    edi
  412db2:	pop    ecx
  412db3:	mov    DWORD PTR [esi-0x71],edi
  412db6:	mov    esi,0x246ed2fe
  412dbb:	(bad)  
  412dbd:	and    al,BYTE PTR [ecx-0x5dc53bf0]
  412dc3:	xor    DWORD PTR [ebp+0x2e354507],edi
  412dc9:	test   al,0xf2
  412dcb:	jmp    0x412d61
  412dcd:	out    dx,eax
  412dce:	aam    0xac
  412dd0:	dec    esi
  412dd1:	xor    DWORD PTR [ebx+0x18],0x431403dc
  412dd8:	sub    DWORD PTR [edi],esp
  412dda:	test   al,0xab
  412ddc:	(bad)
  412ddf:	and    BYTE PTR [ebx],ch
  412de1:	or     eax,DWORD PTR [edx-0x294b1011]
  412de7:	cmp    BYTE PTR [ebp-0x47],cl
  412dea:	test   al,0x4f
  412dec:	jbe    0x412df1
  412dee:	or     al,0x18
  412df0:	clc    
  412df1:	push   0x7b
  412df3:	out    dx,al
  412df4:	lahf   
  412df5:	sub    edx,DWORD PTR [ecx-0xfe14b49]
  412dfb:	jp     0x412e61
  412dfd:	icebp  
  412dfe:	xchg   esi,eax
  412dff:	pop    ecx
  412e00:	xor    ecx,0x52c482b6
  412e06:	jnp    0x412e4b
  412e08:	and    al,0x5e
  412e0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e0b:	sub    esp,DWORD PTR [esi-0x57303ac5]
  412e11:	jbe    0x412e46
  412e13:	fwait
  412e14:	cs js  0x412dcf
  412e17:	fcmovne st,st(0)
  412e19:	xor    edi,DWORD PTR [edi+0x4e]
  412e1c:	in     eax,0xa4
  412e1e:	push   esp
  412e1f:	adc    cl,BYTE PTR [ebx-0x1b56d1da]
  412e25:	scas   eax,DWORD PTR es:[edi]
  412e26:	push   edx
  412e27:	xchg   edi,eax
  412e28:	mov    edi,0x58adc7b
  412e2d:	pop    esi
  412e2e:	and    bh,al
  412e30:	pop    edi
  412e31:	and    ebp,DWORD PTR [ecx]
  412e33:	sbb    DWORD PTR [esi-0xd2f1a07],edi
  412e39:	and    bl,BYTE PTR [esi]
  412e3b:	popa   
  412e3c:	xor    al,0x4a
  412e3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e3f:	ds (bad) 
  412e41:	das    
  412e42:	retf   0x41bd
  412e45:	inc    edi
  412e46:	sbb    al,al
  412e48:	pop    ebp
  412e49:	lds    ebp,FWORD PTR [esi-0x7effd69a]
  412e4f:	lea    ebx,[esi+0x3719bbd7]
  412e55:	(bad)  
  412e56:	dec    edi
  412e57:	(bad)  
  412e58:	mov    esi,DWORD PTR [ebx+0x61]
  412e5b:	outs   dx,DWORD PTR ds:[esi]
  412e5c:	loope  0x412e96
  412e5e:	xchg   esi,eax
  412e5f:	dec    edx
  412e60:	sub    DWORD PTR [ecx+esi*2],0x52
  412e64:	jge    0x412ee1
  412e66:	jmp    0xab06:0x66b1e153
  412e6d:	out    0x12,al
  412e6f:	cmc    
  412e70:	cmp    DWORD PTR [esi+ebp*8],edx
  412e73:	and    al,0xd2
  412e75:	xchg   BYTE PTR [edi-0x4b],ah
  412e78:	jge    0x412e03
  412e7a:	addr16 enter 0x5bd5,0xad
  412e7f:	(bad)  [edi+0x6]
  412e82:	mov    ebp,0xdaa63763
  412e87:	ret    
  412e88:	sbb    DWORD PTR [esi+0x70],ebx
  412e8b:	sbb    BYTE PTR [esi],ch
  412e8d:	fistp  WORD PTR [ebx-0x29]
  412e90:	lds    edx,FWORD PTR [eax]
  412e92:	int3   
  412e93:	push   edi
  412e94:	and    al,0x17
  412e96:	add    DWORD PTR [ebx+0x3],0xe846510a
  412e9d:	lods   eax,DWORD PTR ds:[esi]
  412e9e:	add    DWORD PTR [ebx],ebx
  412ea0:	test   DWORD PTR ds:0x434e5588,edx
  412ea6:	in     al,dx
  412ea7:	mov    ebx,0x1ffd1bcc
  412eac:	dec    edi
  412ead:	fs cwde 
  412eaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412eb0:	test   al,0xd8
  412eb2:	leave  
  412eb3:	jle    0x412ec1
  412eb5:	push   ebp
  412eb6:	popf   
  412eb7:	fist   WORD PTR [eax]
  412eb9:	fmul   DWORD PTR [edx+ebx*4]
  412ebc:	shl    BYTE PTR [edi],cl
  412ebe:	mov    DWORD PTR [edi],ebp
  412ec0:	mov    bh,0xcf
  412ec2:	jne    0x412eae
  412ec4:	call   0xf8e8e9a0
  412ec9:	push   es
  412eca:	pushf  
  412ecb:	or     dl,ch
  412ecd:	(bad)  
  412ece:	xor    ah,BYTE PTR [edx-0x54b2734c]
  412ed4:	ss mov ds:0xf089cdba,eax
  412edb:	fnstenv [edx-0x1786ff56]
  412ee1:	or     al,BYTE PTR [ecx-0x16]
  412ee4:	push   ebx
  412ee5:	inc    edi
  412ee6:	(bad)  [edi-0x77fa7a76]
  412eec:	fcom   QWORD PTR [edi-0x1bdc2ab2]
  412ef2:	shr    DWORD PTR [eax],1
  412ef4:	fsub   st(4),st
  412ef6:	sub    BYTE PTR cs:[edi],cl
  412ef9:	mov    eax,ds:0xfe1a24dd
  412efe:	scas   eax,DWORD PTR es:[edi]
  412eff:	cld    
  412f00:	test   dl,0x48
  412f03:	sbb    BYTE PTR [eax+0xcc76990],cl
  412f09:	and    DWORD PTR [edi],0x9a6d99e9
  412f0f:	xchg   ebp,eax
  412f10:	int3   
  412f11:	retf   
  412f12:	iret   
  412f13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f14:	mov    edx,0x9955d55a
  412f19:	mov    al,ds:0xff01a786
  412f1e:	rol    ch,1
  412f20:	lods   al,BYTE PTR ds:[esi]
  412f21:	xchg   esp,eax
  412f22:	sub    esp,ebx
  412f24:	mov    ch,0xa7
  412f26:	mov    cl,0xa1
  412f28:	jo     0x412fa0
  412f2a:	and    DWORD PTR [edx-0x15],edx
  412f2d:	sub    edx,DWORD PTR [edi]
  412f2f:	push   edi
  412f30:	cmc    
  412f31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f32:	dec    ebx
  412f33:	push   edx
  412f34:	or     DWORD PTR [esi*4+0x10a26dda],ecx
  412f3b:	push   eax
  412f3c:	inc    ebx
  412f3d:	das    
  412f3e:	push   eax
  412f3f:	mov    eax,0xd545e878
  412f44:	fsubrp st(1),st
  412f46:	lds    ebx,FWORD PTR ds:0xb7fa99a1
  412f4c:	and    edx,DWORD PTR [ebp+0x2e]
  412f4f:	sub    ah,al
  412f51:	pusha  
  412f52:	mov    edi,0x6fd7b706
  412f57:	pop    ebx
  412f58:	rcl    DWORD PTR [eax],cl
  412f5a:	nop
  412f5b:	fst    QWORD PTR [edx+0x5471974e]
  412f61:	cmp    ecx,ebp
  412f63:	inc    esi
  412f64:	fwait
  412f65:	push   ss
  412f66:	pusha  
  412f67:	mov    eax,0xc8536b86
  412f6c:	mov    ebp,0x2871342f
  412f71:	aas    
  412f72:	test   BYTE PTR gs:[eiz*8-0x22ef99fd],dh
  412f7a:	add    cl,BYTE PTR [edx+ebp*1-0x699b1144]
  412f81:	test   al,0x92
  412f83:	pop    es
  412f84:	pop    ss
  412f85:	add    dh,BYTE PTR [edi-0x6c]
  412f88:	xchg   edx,eax
  412f89:	dec    ecx
  412f8a:	cli    
  412f8b:	mov    ah,BYTE PTR [edx]
  412f8d:	mov    bh,0xb4
  412f8f:	sub    al,0x1d
  412f91:	jae    0x412f1b
  412f93:	dec    esp
  412f94:	stos   DWORD PTR es:[edi],eax
  412f95:	test   ecx,0xa7060a52
  412f9b:	jbe    0x412f8e
  412f9d:	enter  0x2e1f,0x9
  412fa1:	mov    eax,ds:0x3aa85c8b
  412fa6:	ins    DWORD PTR es:[edi],dx
  412fa7:	fsubr  QWORD PTR [edx]
  412fa9:	push   ds
  412faa:	xor    edx,DWORD PTR [esp+ecx*1]
  412fad:	xchg   esi,eax
  412fae:	and    eax,0x997c9850
  412fb3:	mov    eax,ds:0xede5c0e7
  412fb8:	add    edx,0xfffffffa
  412fbb:	cwde   
  412fbc:	in     al,0x71
  412fbe:	fstp   DWORD PTR [ebp-0x68fa6204]
  412fc4:	rcr    BYTE PTR [esi+0x9],1
  412fc7:	lock mov cl,BYTE PTR [esi]
  412fca:	ins    BYTE PTR es:[edi],dx
  412fcb:	push   0xd687ed73
  412fd0:	(bad)  
  412fd1:	sub    ch,BYTE PTR [esp+eax*1+0x7f]
  412fd5:	jns    0x412f79
  412fd7:	cmp    eax,DWORD PTR [edi-0x71c826f]
  412fdd:	xor    DWORD PTR [ebx-0x11],edx
  412fe0:	xchg   ebp,eax
  412fe1:	loope  0x412f92
  412fe3:	xchg   ebx,eax
  412fe4:	jmp    0xca07:0x4f51f92f
  412feb:	cmp    BYTE PTR [edx],dl
  412fed:	nop
  412fee:	loop   0x412fba
  412ff0:	or     ecx,eax
  412ff2:	xchg   edi,eax
  412ff3:	xchg   DWORD PTR [ebx],esp
  412ff5:	inc    ebx
  412ff6:	sbb    DWORD PTR [ecx+0x2dcf641d],0xcbaad5be
  413000:	fcom   QWORD PTR [eax]
  413002:	clc    
  413003:	cmp    eax,0xa5b8d408
  413008:	mov    ?,edi
  41300a:	mov    edx,DWORD PTR [ecx]
  41300c:	pop    ecx
  41300d:	mov    WORD PTR [edi+0x50],?
  413010:	pop    esi
  413011:	inc    ecx
  413012:	sub    eax,ebp
  413014:	sti    
  413015:	dec    ebx
  413016:	loope  0x413077
  413018:	stos   BYTE PTR es:[edi],al
  413019:	lahf   
  41301a:	and    eax,0x75875321
  41301f:	repnz mov eax,ebp
  413022:	sub    al,BYTE PTR [edx-0x30]
  413025:	push   ds
  413026:	pop    edx
  413027:	pusha  
  413028:	inc    esi
  413029:	mov    eax,0x669b3819
  41302e:	(bad)  
  41302f:	fsubp  st(4),st
  413031:	fs ret 0x83c0
  413035:	mov    bh,0xdd
  413037:	jle    0x413087
  413039:	mov    ebp,0x6c9655da
  41303e:	mov    ebp,0x9283aac7
  413043:	push   ss
  413044:	mul    BYTE PTR [esi]
  413046:	call   0xa8c6d81e
  41304b:	add    DWORD PTR [edi+0x1fff0ea2],0xffffff97
  413052:	xlat   BYTE PTR ds:[ebx]
  413053:	add    al,0xad
  413055:	call   0xb7aad507
  41305a:	lds    eax,FWORD PTR [eax-0x34]
  41305d:	xchg   edi,eax
  41305e:	sub    edi,DWORD PTR [eax-0x6a298cbb]
  413064:	pop    es
  413065:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413066:	fbstp  TBYTE PTR [ebp-0x50db962c]
  41306c:	repnz push ecx
  41306e:	fmul   DWORD PTR [esi-0x10391aa1]
  413074:	ss dec eax
  413076:	dec    eax
  413077:	or     ah,0x3
  41307a:	(bad)  
  41307b:	sti    
  41307c:	cdq    
  41307d:	jmp    0x782ea7e4
  413082:	adc    al,0xc7
  413084:	xchg   esp,eax
  413085:	scas   eax,DWORD PTR es:[edi]
  413086:	xlat   BYTE PTR ds:[ebx]
  413087:	ins    DWORD PTR es:[edi],dx
  413088:	ins    BYTE PTR es:[edi],dx
  413089:	sbb    ebp,0x51135de1
  41308f:	dec    ecx
  413090:	imul   edx,DWORD PTR [ebp+0x57e203d2],0xd843de0b
  41309a:	add    ebp,DWORD PTR [ebx-0xa]
  41309d:	div    esi
  41309f:	fstp   TBYTE PTR [esi+eax*1+0x41]
  4130a3:	push   cs
  4130a4:	pop    eax
  4130a5:	fidiv  DWORD PTR [ebx-0xa847295]
  4130ab:	sub    BYTE PTR [ecx-0x2de76ae3],bl
  4130b1:	mov    ecx,0x2f7571c7
  4130b6:	xchg   DWORD PTR [edi+0x59],eax
  4130b9:	push   edi
  4130ba:	xor    ch,BYTE PTR [edi]
  4130bc:	add    BYTE PTR [esi],bh
  4130be:	je     0x41308c
  4130c0:	call   0x53d9:0xa3f6ed4b
  4130c7:	fs mov edx,0xef7e8a0c
  4130cd:	mul    BYTE PTR [ebp-0x29]
  4130d0:	and    al,0x38
  4130d2:	sbb    al,0x26
  4130d4:	mov    ebx,0xfde52f9
  4130d9:	cmp    edx,DWORD PTR [edi-0x7c13f4c]
  4130df:	and    eax,0x10ee22e
  4130e4:	popf   
  4130e5:	sub    edi,DWORD PTR [edx-0x64453ab7]
  4130eb:	pop    esp
  4130ec:	(bad)  
  4130ee:	or     ebp,ebp
  4130f0:	mov    edx,DWORD PTR [ebx+0x3b]
  4130f3:	mov    DWORD PTR [ecx+0x23],esi
  4130f6:	fs add eax,0x7262fda0
  4130fc:	mov    cl,0xeb
  4130fe:	jae    0x4130d5
  413100:	add    eax,DWORD PTR [ecx]
  413102:	clc    
  413103:	pop    es
  413104:	jge    0x4130dc
  413106:	sbb    BYTE PTR [ecx-0x38],dl
  413109:	sub    al,0x4f
  41310b:	pop    es
  41310c:	pop    edi
  41310d:	mov    dh,0x4f
  41310f:	adc    BYTE PTR [ebx+0x24],bl
  413112:	push   0x4b
  413114:	or     esp,DWORD PTR [esi]
  413116:	out    dx,eax
  413117:	scas   al,BYTE PTR es:[edi]
  413118:	ds xor eax,0xfd12a3f5
  41311e:	and    DWORD PTR [esi],esp
  413120:	inc    eax
  413121:	xor    edx,DWORD PTR [eax]
  413123:	cmp    edi,DWORD PTR [ecx+esi*8-0x4d]
  413127:	in     al,0x47
  413129:	mov    bh,0x65
  41312b:	shl    DWORD PTR [ebx+0x733113cb],cl
  413131:	jg     0x413175
  413133:	inc    ecx
  413134:	jmp    0xcc7ba65a
  413139:	in     eax,0xbd
  41313b:	in     al,0xf8
  41313d:	xchg   edx,eax
  41313e:	int    0x1
  413140:	push   edx
  413141:	and    BYTE PTR [eax],bh
  413143:	arpl   WORD PTR ds:0xfdb6a14a,bp
  413149:	and    BYTE PTR [edi+ebp*4],ah
  41314c:	sar    DWORD PTR [edx-0x2d],0x30
  413150:	sub    BYTE PTR [ebp-0x41],cl
  413153:	push   ds
  413154:	dec    ebp
  413155:	jl     0x413151
  413157:	mov    al,ds:0x51232e41
  41315c:	jo     0x413130
  41315e:	push   ds
  41315f:	mov    ss,WORD PTR [ebp-0xb6c3d11]
  413165:	sub    ah,BYTE PTR [ebp+0x7f515d14]
  41316b:	inc    edx
  41316c:	lods   eax,DWORD PTR ds:[esi]
  41316d:	mov    eax,ds:0xf86f6452
  413172:	adc    DWORD PTR [ebx+0x2d80a498],ebp
  413178:	or     eax,0x273aa377
  41317d:	popf   
  41317e:	(bad)  
  41317f:	pusha  
  413180:	aam    0xfe
  413182:	test   al,0x19
  413184:	out    0x7b,eax
  413186:	xchg   esp,eax
  413187:	ds ror edx,1
  41318a:	nop
  41318b:	loope  0x41315f
  41318d:	inc    ebx
  41318e:	mov    bh,0x20
  413190:	nop
  413191:	inc    ebp
  413192:	push   0x6707edfb
  413197:	jae    0x41314e
  413199:	and    eax,0xa7ecef1e
  41319e:	mov    al,ds:0x16f24362
  4131a3:	in     eax,0x95
  4131a5:	imul   edx,DWORD PTR [ecx+0x4e],0x67
  4131a9:	stc    
  4131aa:	mov    DWORD PTR ds:0xa266f533,edx
  4131b0:	cwde   
  4131b1:	push   ecx
  4131b2:	push   ds
  4131b3:	mov    ds:0x816d873,eax
  4131b8:	add    eax,0xdbf2e3e0
  4131bd:	xchg   esi,eax
  4131be:	jne    0x4131a1
  4131c0:	xchg   DWORD PTR [ebx-0x1a],edx
  4131c3:	ror    DWORD PTR [ecx-0x51],1
  4131c6:	cwde   
  4131c7:	push   ecx
  4131c8:	sbb    dh,BYTE PTR [esi+ecx*1]
  4131cb:	xor    eax,ecx
  4131cd:	out    0x81,eax
  4131cf:	aaa    
  4131d0:	dec    ebp
  4131d1:	rol    BYTE PTR ds:0xd9d1dee8,0xd
  4131d8:	jne    0x4131a0
  4131da:	sub    ah,cl
  4131dc:	mov    cl,0x58
  4131de:	mov    dl,0xa9
  4131e0:	xlat   BYTE PTR ds:[ebx]
  4131e1:	jne    0x4131b6
  4131e3:	int    0x3f
  4131e5:	loopne 0x413190
  4131e7:	inc    esi
  4131e8:	or     esi,esp
  4131ea:	mov    ebx,0xe4ec2d17
  4131ef:	enter  0x373e,0xb2
  4131f3:	lods   al,BYTE PTR ds:[esi]
  4131f4:	mov    BYTE PTR [edi-0x28c275be],ch
  4131fa:	and    BYTE PTR [esi+0x39f7bc27],ah
  413200:	(bad)  
  413201:	sub    eax,0xb75e1133
  413206:	pop    edx
  413207:	jle    0x413232
  413209:	jo     0x413198
  41320b:	std    
  41320c:	out    dx,eax
  41320d:	ds mov ebx,?
  413210:	into   
  413211:	popa   
  413212:	jg     0x4131f4
  413214:	shl    DWORD PTR [edi-0x3ce9a55c],cl
  41321a:	push   ss
  41321b:	in     eax,0x6e
  41321d:	repz xor DWORD PTR [ebp+0x5ebdd286],ebx
  413224:	(bad)  
  413225:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413226:	lods   eax,DWORD PTR ds:[esi]
  413227:	pop    edi
  413228:	cmp    eax,0x5295e87c
  41322d:	sbb    DWORD PTR [eax+eiz*8-0x459c6dc8],ebx
  413234:	adc    esi,DWORD PTR [ebp+0x27]
  413237:	sbb    ebp,DWORD PTR [eax-0x2]
  41323a:	ror    DWORD PTR [ecx+0x7d],1
  41323d:	in     eax,0x4c
  41323f:	cmp    BYTE PTR [edi-0x70d11baf],0x87
  413246:	retf   
  413247:	jae    0x413262
  413249:	into   
  41324a:	cs ja  0x4131f0
  41324d:	xchg   ecx,eax
  41324e:	ret    
  41324f:	shr    esp,1
  413251:	mov    edi,0x70e1ba77
  413256:	or     cl,al
  413258:	int    0xfa
  41325a:	dec    ah
  41325c:	repnz sar DWORD PTR [edx],0xcd
  413260:	sub    al,0xd7
  413262:	rcl    ebp,0xce
  413265:	add    ebx,DWORD PTR [esp+eax*4-0x238b5c7b]
  41326c:	or     BYTE PTR [ecx-0x5550c652],ch
  413272:	xor    ebx,DWORD PTR [ebp+0x3660b862]
  413278:	or     eax,ecx
  41327a:	xchg   esi,eax
  41327b:	fadd   DWORD PTR [edx]
  41327d:	jl     0x413267
  41327f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413280:	sub    edi,eax
  413282:	sar    DWORD PTR [eax],cl
  413284:	or     al,0x15
  413286:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413287:	xchg   esi,eax
  413288:	mov    bl,0xa6
  41328a:	jb     0x413232
  41328c:	stos   BYTE PTR es:[edi],al
  41328d:	or     BYTE PTR [ebp-0x22],0xbe
  413291:	push   ebp
  413292:	jnp    0x4132cb
  413294:	pop    ss
  413295:	inc    esp
  413296:	mov    ah,0x10
  413298:	jg     0x413286
  41329a:	imul   esp,DWORD PTR [esi+0x3be7af18],0xffffffde
  4132a1:	rol    ebx,cl
  4132a3:	imul   ecx,ebx,0xffffffee
  4132a6:	cli    
  4132a7:	cmp    edx,DWORD PTR [ebx+0x50]
  4132aa:	sub    BYTE PTR [edi],cl
  4132ac:	out    0x7d,eax
  4132ae:	push   ebx
  4132af:	mov    al,ds:0xab0d68da
  4132b4:	push   esi
  4132b5:	inc    ebx
  4132b6:	imul   esi,DWORD PTR ds:0xfbf6fdb2,0xffffff9d
  4132bd:	inc    eax
  4132be:	jo     0x413250
  4132c0:	(bad)  
  4132c1:	xor    al,BYTE PTR [edx]
  4132c3:	jmp    0x413261
  4132c5:	int3   
  4132c6:	add    BYTE PTR [ebx],bh
  4132c8:	push   ecx
  4132c9:	mov    DWORD PTR [esi],edx
  4132cb:	jb     0x413297
  4132cd:	add    al,0xdf
  4132cf:	adc    DWORD PTR [esi],ecx
  4132d1:	addr16 cmp esi,edi
  4132d4:	outs   dx,DWORD PTR ds:[esi]
  4132d5:	in     al,dx
  4132d6:	imul   ecx,DWORD PTR [ebp-0x5],0xe84a125b
  4132dd:	xor    al,0xaa
  4132df:	xchg   ch,bl
  4132e1:	ficomp WORD PTR [ebx]
  4132e3:	fs repz (bad) 
  4132e6:	(bad)  
  4132e8:	test   DWORD PTR gs:[eax+0x2c79cd34],ecx
  4132ef:	aaa    
  4132f0:	test   al,0x47
  4132f2:	xchg   edi,eax
  4132f3:	(bad)  
  4132f4:	out    dx,al
  4132f5:	mov    ah,0xbd
  4132f7:	bound  ecx,QWORD PTR [esi]
  4132f9:	or     BYTE PTR [esi-0x4092806],bh
  4132ff:	sub    ebp,edx
  413301:	push   0x30b0dd1c
  413306:	fcomp  st(0)
  413308:	sbb    ecx,edx
  41330a:	fsub   st,st(5)
  41330c:	inc    BYTE PTR [esi]
  41330e:	mov    ebp,0x92aeabd
  413313:	addr16 dec esp
  413315:	pop    ds
  413316:	pop    es
  413317:	cmc    
  413318:	push   ss
  413319:	not    DWORD PTR ds:0x8d9c10ec
  41331f:	pop    esp
  413320:	mov    bh,0x2c
  413322:	cmp    eax,esp
  413324:	or     dh,BYTE PTR [esi-0x27]
  413327:	and    al,0xdf
  413329:	mov    WORD PTR [edx+0x48],ds
  41332c:	xchg   ebx,eax
  41332d:	pop    ebx
  41332e:	test   BYTE PTR [ebx-0x6f],cl
  413331:	inc    ebx
  413332:	adc    BYTE PTR [ebx-0x7b],dh
  413335:	sub    edi,DWORD PTR [edx+0x2a]
  413338:	jg     0x4132ed
  41333a:	push   ebx
  41333b:	jg     0x4132f2
  41333d:	dec    eax
  41333e:	fmul   DWORD PTR [edx-0x65b58edb]
  413344:	mov    dh,0xc2
  413346:	ret    0xca44
  413349:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41334a:	jo     0x413336
  41334c:	pop    esp
  41334d:	inc    esp
  41334e:	ins    BYTE PTR es:[edi],dx
  41334f:	mov    dl,0x85
  413351:	test   BYTE PTR [esi-0x18b9363f],bh
  413357:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413358:	or     eax,0xf913904b
  41335d:	mov    BYTE PTR [eax-0x70],bh
  413360:	aas    
  413361:	push   ds
  413362:	xchg   esi,eax
  413363:	fwait
  413364:	pusha  
  413365:	dec    ebx
  413366:	add    bh,BYTE PTR [edx]
  413368:	push   esp
  413369:	test   BYTE PTR [eax+0x4bb831bf],cl
  41336f:	pop    ss
  413370:	(bad)  
  413371:	push   esi
  413372:	stos   BYTE PTR es:[edi],al
  413373:	xor    DWORD PTR [ecx-0x7d],0x3b495922
  41337a:	pop    eax
  41337b:	aaa    
  41337c:	(bad)  
  41337e:	push   0xffffffc5
  413380:	push   0x6912bd52
  413385:	(bad)  
  413386:	ret    
  413387:	aam    0x97
  413389:	(bad)  
  41338a:	fst    DWORD PTR ds:0x1ecdd9f9
  413390:	ret    0x7f6f
  413393:	pop    edi
  413394:	scas   al,BYTE PTR es:[edi]
  413395:	retf   
  413396:	push   eax
  413397:	in     al,0x67
  413399:	xor    bh,BYTE PTR [ebp-0x16]
  41339c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41339d:	add    DWORD PTR [eax],eax
  41339f:	fldenv [ecx]
  4133a1:	lods   al,BYTE PTR ds:[esi]
  4133a2:	xchg   ebp,eax
  4133a3:	push   ecx
  4133a4:	jmp    0x295:0xe00e1506
  4133ab:	popf   
  4133ac:	retf   0x132
  4133af:	push   edi
  4133b0:	jne    0x413341
  4133b2:	and    DWORD PTR [edi+0x210b16f],0x54
  4133b9:	xor    BYTE PTR [ebx],ah
  4133bb:	xchg   DWORD PTR [ecx+0x59d4e0e],ebp
  4133c1:	loopne 0x413379
  4133c3:	loope  0x41340f
  4133c5:	(bad)  
  4133c6:	xchg   esp,eax
  4133c7:	mov    ebp,0xd2c057a0
  4133cc:	mov    bl,0x78
  4133ce:	pop    ss
  4133cf:	or     eax,0x864277b9
  4133d4:	dec    edx
  4133d5:	icebp  
  4133d6:	ror    BYTE PTR [esi+0x33],0xa7
  4133da:	popa   
  4133db:	test   eax,0x9314cc9d
  4133e0:	add    DWORD PTR [ebx+0x6f06ac8],ebp
  4133e6:	add    ebx,DWORD PTR [esi+0x8]
  4133e9:	cwd    
  4133eb:	popf   
  4133ec:	lahf   
  4133ed:	jnp    0x413451
  4133ef:	pusha  
  4133f0:	or     esp,DWORD PTR [eax-0x1e]
  4133f3:	std    
  4133f4:	outs   dx,DWORD PTR ds:[esi]
  4133f5:	imul   ecx,DWORD PTR [esi],0x97642983
  4133fb:	test   eax,0x47d25139
  413400:	out    dx,eax
  413401:	out    0x16,al
  413403:	(bad)  [edx]
  413405:	ins    BYTE PTR es:[edi],dx
  413406:	ror    DWORD PTR [eax],cl
  413408:	sar    al,cl
  41340a:	jmp    0x413403
  41340c:	test   BYTE PTR [ecx+0x56dc1894],cl
  413412:	scas   eax,DWORD PTR es:[edi]
  413413:	xor    edi,DWORD PTR [ecx+eax*2+0x4e]
  413417:	push   eax
  413418:	push   0xbb37f591
  41341d:	sbb    BYTE PTR [edi+0x6abea473],dl
  413423:	or     eax,0xe8643a15
  413428:	(bad)  
  413429:	imul   BYTE PTR [edx+edx*1]
  41342c:	mov    ss,ebx
  41342e:	shr    DWORD PTR [esi-0x7151b8c5],cl
  413434:	(bad)  
  413436:	test   al,0x7f
  413438:	ret    0x8e22
  41343b:	and    cl,BYTE PTR [edi+0x0]
  41343e:	mov    ah,0x36
  413440:	or     BYTE PTR ds:0xfcd1aedf,al
  413446:	scas   al,BYTE PTR es:[edi]
  413447:	shl    ebp,1
  413449:	and    eax,0x46b31273
  41344e:	xchg   DWORD PTR [edx-0x7],edi
  413451:	ss mov esp,0xc7fe9a68
  413457:	add    DWORD PTR [esi+0x40],ebx
  41345a:	cli    
  41345b:	sub    DWORD PTR [ebp+0x10],esi
  41345e:	mov    dh,0x37
  413460:	sbb    DWORD PTR [ebp+0x3a],esp
  413463:	jns    0x413438
  413465:	inc    esp
  413466:	mov    al,ds:0xde846766
  41346b:	cmc    
  41346c:	mov    edx,0x99919d9b
  413471:	jmp    0x413491
  413473:	sbb    al,bl
  413475:	nop
  413476:	sbb    BYTE PTR [edi+eax*1+0x63],dl
  41347a:	mov    dh,0xa2
  41347c:	mov    eax,ds:0x9d1f5828
  413481:	pop    ss
  413482:	enter  0xe452,0x73
  413486:	call   0x21ae1d09
  41348b:	stos   DWORD PTR es:[edi],eax
  41348c:	aam    0xf3
  41348e:	mov    esi,0x2494c41d
  413493:	lahf   
  413494:	and    bh,BYTE PTR [ebp+0x2c1b6fd6]
  41349a:	cld    
  41349b:	ja     0x41347b
  41349d:	xchg   esp,eax
  41349e:	inc    eax
  41349f:	jno    0x4134eb
  4134a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4134a2:	mov    ebx,0xf2de39d
  4134a7:	sbb    al,0x33
  4134a9:	test   DWORD PTR [ebx],ebx
  4134ab:	push   es
  4134ac:	inc    ebp
  4134ad:	out    dx,al
  4134ae:	push   edi
  4134af:	add    al,0xe2
  4134b1:	sub    eax,0x5fe757eb
  4134b6:	(bad)  
  4134b7:	(bad)  [edx+esi*1]
  4134ba:	sti    
  4134bb:	(bad)  
  4134bc:	retf   
  4134bd:	iret   
  4134be:	popa   
  4134bf:	push   es
  4134c0:	scas   al,BYTE PTR es:[edi]
  4134c1:	loop   0x41350a
  4134c3:	ret    0x6978
  4134c6:	out    dx,eax
  4134c7:	dec    edi
  4134c8:	adc    al,bl
  4134ca:	pop    ds
  4134cb:	xchg   edi,eax
  4134cc:	outs   dx,DWORD PTR ds:[esi]
  4134cd:	sbb    DWORD PTR [ebx+0x59],eax
  4134d0:	mov    bh,BYTE PTR [esi+0x9]
  4134d3:	mov    edi,0xfbf851b9
  4134d8:	mov    DWORD PTR [esi+0x7772d89c],0x389543f9
  4134e2:	xor    ecx,ecx
  4134e4:	or     DWORD PTR [edx+0x2d44ec4e],ebp
  4134ea:	dec    ebp
  4134eb:	enter  0x48c9,0x7b
  4134ef:	push   0xfffffff7
  4134f1:	jbe    0x413538
  4134f3:	inc    edi
  4134f4:	jmp    0xe27:0xbe413976
  4134fb:	mov    ebx,0xb1f9e687
  413500:	aaa    
  413501:	test   DWORD PTR [esi+0x2c],ecx
  413504:	sar    ch,cl
  413506:	sbb    eax,0x5ead975d
  41350b:	push   ebx
  41350c:	test   DWORD PTR [edi],ecx
  41350e:	js     0x41358a
  413510:	push   ebx
  413511:	aam    0x68
  413513:	test   dh,cl
  413515:	in     eax,dx
  413516:	or     ecx,ebx
  413518:	(bad)  
  413519:	mov    ch,0x45
  41351b:	outs   dx,DWORD PTR ds:[esi]
  41351c:	mov    edi,ecx
  41351e:	(bad)  
  413521:	ja     0x41354a
  413523:	popf   
  413524:	leave  
  413525:	inc    eax
  413526:	xchg   DWORD PTR [edx-0x25f1404d],ebp
  41352c:	scas   al,BYTE PTR es:[edi]
  41352d:	xchg   edx,eax
  41352e:	sbb    dl,BYTE PTR ds:0xac598324
  413534:	int3   
  413535:	inc    ecx
  413536:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413537:	in     eax,0x5
  413539:	out    dx,al
  41353a:	int3   
  41353b:	pop    edi
  41353c:	daa    
  41353d:	outs   dx,DWORD PTR ds:[esi]
  41353e:	sbb    eax,0xf66e1bb6
  413543:	mov    ds:0xd7ac9027,eax
  413548:	fs dec edi
  41354a:	mov    BYTE PTR [ebx-0x335bf15d],cl
  413550:	fstp   DWORD PTR [esi-0x64a745ac]
  413556:	inc    esp
  413557:	dec    esp
  413558:	mov    ecx,0x5b0ecc2c
  41355d:	rcl    BYTE PTR [esi],cl
  41355f:	fdivr  QWORD PTR [eax-0x68]
  413562:	paddsw mm6,mm1
  413565:	mov    eax,ds:0x21dd4b57
  41356a:	iret   
  41356b:	and    cl,BYTE PTR [ebx-0x2c3cde64]
  413571:	mov    ds:0x9662b0d8,eax
  413576:	(bad)  
  413578:	mov    al,ds:0xa9302247
  41357d:	fld    QWORD PTR [ebx+0x18050b98]
  413583:	sub    DWORD PTR [ebp+0x26f9ceac],ebp
  413589:	mov    esp,0x3ac54248
  41358e:	outs   dx,DWORD PTR ds:[esi]
  41358f:	mov    bl,0xa2
  413591:	inc    esi
  413592:	inc    edi
  413593:	mov    al,ds:0x5d96e621
  413598:	mov    gs:0x896c784e,eax
  41359e:	pop    es
  41359f:	pop    ebx
  4135a0:	add    eax,0x2b61a3c8
  4135a5:	(bad)  
  4135a6:	cmp    al,0x52
  4135a8:	push   ds
  4135a9:	out    dx,eax
  4135aa:	push   eax
  4135ab:	sub    al,0x6
  4135ad:	stos   BYTE PTR es:[edi],al
  4135ae:	adc    eax,0x247a92e3
  4135b3:	pop    esp
  4135b4:	in     eax,dx
  4135b5:	mov    dh,0x25
  4135b7:	pusha  
  4135b8:	sub    eax,0xb1e3b303
  4135bd:	or     eax,0x56a607ae
  4135c2:	mov    ah,0x9f
  4135c4:	push   edi
  4135c5:	fstp   DWORD PTR [eax+0x7c]
  4135c8:	xor    DWORD PTR [edi+0x5d],ecx
  4135cb:	or     bh,BYTE PTR ds:[ecx-0x125bc25b]
  4135d2:	clc    
  4135d3:	adc    eax,0x5696946a
  4135d8:	xor    al,0x21
  4135da:	and    eax,0x50a11b7a
  4135df:	add    DWORD PTR [ebx+0x2ec5685e],esp
  4135e5:	scas   eax,DWORD PTR es:[edi]
  4135e6:	jmp    0x4135a3
  4135e8:	mov    ds:0xdb15b55d,al
  4135ed:	gs data16 jl 0x413575
  4135f1:	push   ecx
  4135f2:	les    esp,FWORD PTR [esi-0x54]
  4135f5:	jp     0x4135b8
  4135f7:	call   0x5744c5d5
  4135fc:	leave  
  4135fd:	aas    
  4135fe:	les    edi,FWORD PTR [eax-0x44]
  413601:	inc    edi
  413602:	add    BYTE PTR [edx],ch
  413604:	jle    0x4135cc
  413606:	xchg   esi,eax
  413607:	sub    al,0x1b
  413609:	push   edi
  41360a:	xchg   edi,eax
  41360b:	push   cs
  41360c:	add    al,0xad
  41360e:	ja     0x413616
  413610:	(bad)  
  413611:	cdq    
  413612:	jb     0x4135ef
  413614:	test   DWORD PTR [ecx-0x18],0x58c97136
  41361b:	mov    eax,ds:0xe2ea3a6d
  413620:	(bad)  
  413622:	push   eax
  413623:	pop    edx
  413624:	outs   dx,DWORD PTR ds:[esi]
  413625:	pop    es
  413626:	iret   
  413627:	addr16 dec eax
  413629:	mov    al,ds:0xc455f942
  41362e:	dec    ecx
  41362f:	sbb    BYTE PTR [edi],al
  413631:	scas   al,BYTE PTR es:[di]
  413633:	add    ch,al
  413635:	xchg   esi,eax
  413636:	mov    DWORD PTR [ecx],ebx
  413638:	outs   dx,DWORD PTR ds:[esi]
  413639:	daa    
  41363a:	dec    ebp
  41363b:	(bad)  
  41363d:	dec    ecx
  41363e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41363f:	repnz or eax,0xf7ee091b
  413645:	push   es
  413646:	xchg   edx,eax
  413647:	jmp    0xd660:0x95d6dbf4
  41364e:	and    al,0xb6
  413650:	mov    WORD PTR [ebp+0x5e65ec73],cs
  413656:	sbb    BYTE PTR [edx],dh
  413658:	fs scas eax,DWORD PTR es:[edi]
  41365a:	cmp    dl,ch
  41365c:	mov    ds:0x22d2bb61,eax
  413661:	outs   dx,BYTE PTR ds:[esi]
  413662:	mov    edi,0x567176f6
  413667:	loopne 0x4135fe
  413669:	lods   al,BYTE PTR ds:[esi]
  41366a:	xchg   ebx,eax
  41366b:	pusha  
  41366c:	jo     0x4135f7
  41366e:	cwde   
  41366f:	je     0x4135ff
  413671:	iret   
  413672:	pop    edi
  413673:	repnz mov edx,0x8d0e586
  413679:	dec    edx
  41367a:	icebp  
  41367b:	(bad)  
  41367c:	xor    DWORD PTR [ebp+0x30],eax
  41367f:	popa   
  413680:	(bad)  
  413682:	add    eax,0xd94b0044
  413687:	or     ecx,ebx
  413689:	and    esp,DWORD PTR [esi+0x43]
  41368c:	fimul  WORD PTR ds:0x534f5f1a
  413692:	mov    al,ds:0x97f93ff5
  413697:	push   esp
  413698:	es mov ecx,0x459abb1e
  41369e:	mov    eax,ds:0xca0e3eee
  4136a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4136a4:	adc    DWORD PTR [esi],0xffffffbb
  4136a7:	aad    0x9f
  4136a9:	lods   eax,DWORD PTR ds:[esi]
  4136aa:	inc    esp
  4136ab:	xchg   esi,eax
  4136ac:	or     bl,BYTE PTR [edi+0x430826d7]
  4136b2:	adc    BYTE PTR [esi+0x1c],dh
  4136b5:	pushf  
  4136b6:	add    al,0x22
  4136b8:	mov    edi,0x1f945f8b
  4136bd:	adc    al,0xff
  4136bf:	inc    edx
  4136c0:	loope  0x4136d4
  4136c2:	je     0x41366d
  4136c4:	popa   
  4136c5:	xchg   edi,eax
  4136c6:	fcmovnb st,st(7)
  4136c8:	xchg   ebx,ebx
  4136ca:	ds mov cl,0xba
  4136cd:	cdq    
  4136ce:	gs sub al,0x8f
  4136d1:	mov    ds:0x5bbfeccc,eax
  4136d6:	sbb    ebp,DWORD PTR es:[esi]
  4136d9:	les    ebp,FWORD PTR [ecx+0x55]
  4136dc:	je     0x41371f
  4136de:	in     eax,dx
  4136df:	pop    esp
  4136e0:	sbb    edi,ebp
  4136e2:	jp     0x4136cf
  4136e4:	jo     0x41368f
  4136e6:	mov    ecx,0xd3c3d08d
  4136eb:	retf   0xea08
  4136ee:	stos   BYTE PTR es:[edi],al
  4136ef:	adc    eax,0x2116e8d6
  4136f4:	enter  0xc2fd,0xb2
  4136f8:	mov    eax,0xa77a198c
  4136fd:	jno    0x413714
  4136ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413700:	call   0x9cca4809
  413705:	jg     0x413775
  413707:	out    0x9a,al
  413709:	mov    ah,0x8d
  41370b:	fwait
  41370c:	adc    DWORD PTR [ecx-0x420279d9],esp
  413712:	dec    esi
  413713:	or     ah,ah
  413715:	mov    eax,ds:0x92dfa433
  41371a:	fnstsw WORD PTR [eax]
  41371c:	les    esi,FWORD PTR [ecx-0x24]
  41371f:	mul    al
  413721:	rol    ecx,0x1c
  413724:	or     BYTE PTR [ebx+0x4],dl
  413727:	fisub  WORD PTR [eax+0x6ac5388d]
  41372d:	leave  
  41372e:	xchg   edi,eax
  41372f:	inc    eax
  413730:	scas   eax,DWORD PTR es:[edi]
  413731:	retf   0x83b9
  413734:	(bad)  
  413735:	stos   DWORD PTR es:[edi],eax
  413736:	mov    eax,0x751cb8f8
  41373b:	xor    BYTE PTR [ecx],al
  41373d:	cwde   
  41373e:	or     al,0x54
  413740:	loopne 0x413712
  413742:	repz push ss
  413744:	std    
  413745:	imul   edi,DWORD PTR [ebx],0x4d
  413748:	jmp    0xc9852bcb
  41374d:	aas    
  41374e:	cmp    bl,BYTE PTR [edi]
  413750:	inc    esp
  413751:	cmp    al,0xa7
  413753:	shl    dh,1
  413755:	jnp    0x413796
  413757:	pop    ecx
  413758:	stos   BYTE PTR es:[edi],al
  413759:	repz push esi
  41375b:	jmp    0x41375f
  41375d:	mov    esp,edx
  41375f:	fstp   TBYTE PTR [esi+esi*1]
  413762:	test   DWORD PTR [eax+0x20],esi
  413765:	add    al,0xfb
  413767:	js     0x4137b3
  413769:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41376a:	adc    eax,0xe78d6eae
  41376f:	ret    0x9713
  413772:	and    DWORD PTR [esi+ebx*4+0xa63c92a],edx
  413779:	shr    BYTE PTR [eax-0x2e],1
  41377c:	add    ebp,DWORD PTR [esi+0x917fb]
  413782:	pop    ecx
  413783:	inc    esp
  413784:	jns    0x4137b6
  413786:	nop
  413787:	(bad)  
  413789:	sahf   
  41378a:	adc    BYTE PTR [edi],dh
  41378c:	xor    al,0x9a
  41378e:	and    cl,BYTE PTR [ebx-0x7f]
  413791:	sbb    al,0xa2
  413793:	pop    ecx
  413794:	pop    ds
  413795:	mov    dh,0x2d
  413797:	neg    cl
  413799:	xlat   BYTE PTR ds:[ebx]
  41379a:	push   ebp
  41379b:	je     0x413726
  41379d:	xchg   DWORD PTR [ebx],esp
  41379f:	out    0x6b,al
  4137a1:	pop    esi
  4137a2:	inc    ecx
  4137a3:	mov    dl,0xf3
  4137a5:	xchg   ebx,eax
  4137a6:	xchg   edi,eax
  4137a7:	retf   0x93e
  4137aa:	jmp    0x413741
  4137ac:	aaa    
  4137ad:	push   esp
  4137ae:	test   DWORD PTR [ebx+0x340098e1],0xededa91e
  4137b8:	push   eax
  4137b9:	mov    edi,0x663f2314
  4137be:	jno    0x413753
  4137c0:	or     al,bl
  4137c2:	das    
  4137c3:	pop    eax
  4137c4:	enter  0x6151,0x2a
  4137c8:	fs dec esi
  4137ca:	xor    BYTE PTR [edx],0x62
  4137cd:	push   WORD PTR [esi-0x3a]
  4137d1:	xor    DWORD PTR [edi-0x57],esp
  4137d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4137d5:	imul   esp,DWORD PTR ds:0x33f9a3d,0x42
  4137dc:	inc    esi
  4137dd:	or     BYTE PTR [ecx],0x4b
  4137e0:	dec    edi
  4137e1:	fild   WORD PTR [eax-0x4ed27da6]
  4137e7:	scas   eax,DWORD PTR es:[edi]
  4137e8:	ss mov bh,0xb9
  4137eb:	add    DWORD PTR [ecx],edi
  4137ed:	std    
  4137ee:	ins    DWORD PTR es:[edi],dx
  4137ef:	cdq    
  4137f0:	or     eax,0xab617e42
  4137f5:	mov    ecx,0x4da3b001
  4137fa:	dec    ebx
  4137fb:	(bad)  
  4137fc:	xchg   esp,eax
  4137fd:	shr    DWORD PTR [eax+0x31],1
  413800:	addr16 sbb al,0x65
  413803:	aaa    
  413804:	adc    ah,dh
  413806:	adc    DWORD PTR [ecx],ecx
  413808:	ja     0x413792
  41380a:	push   ebx
  41380b:	inc    ecx
  41380c:	push   eax
  41380d:	inc    BYTE PTR [ebp+0x5d]
  413810:	scas   al,BYTE PTR es:[edi]
  413811:	addr16 sub eax,0xdc24ebd0
  413817:	jp     0x4137a3
  413819:	cld    
  41381a:	xor    BYTE PTR [edi],cl
  41381c:	inc    ebx
  41381d:	cmp    eax,0x74543a82
  413822:	mov    ebx,0x47605084
  413827:	pushf  
  413828:	mov    esi,0xeafc4913
  41382d:	hlt    
  41382e:	scas   al,BYTE PTR es:[edi]
  41382f:	fnstsw WORD PTR [eax]
  413831:	leave  
  413832:	ss xchg ebx,eax
  413834:	sbb    al,0x92
  413836:	clc    
  413837:	mov    edi,edx
  413839:	inc    edi
  41383a:	jle    0x413812
  41383c:	pop    esi
  41383d:	sub    ebx,eax
  41383f:	iret   
  413840:	cmp    al,0x66
  413842:	data16 sti 
  413844:	(bad)  
  413845:	icebp  
  413846:	jl     0x413832
  413848:	mov    dh,BYTE PTR [eax+0x262042f0]
  41384e:	js     0x41387c
  413850:	dec    edx
  413851:	jb     0x413877
  413853:	mov    dl,ch
  413855:	mov    ebx,eax
  413857:	lds    ecx,FWORD PTR [eax+0x72]
  41385a:	jmp    0x94fa:0x3e3581c0
  413861:	shl    BYTE PTR [edi+eax*1-0x5b],0xcd
  413866:	rcl    BYTE PTR [esi],1
  413868:	adc    BYTE PTR [ecx],0xa8
  41386b:	test   eax,0xc4183faf
  413870:	sbb    BYTE PTR [edi-0xbeae6e1],0x36
  413877:	push   ds
  413878:	mov    ebp,0x17d949a6
  41387d:	xchg   dl,dh
  41387f:	jne    0x4138ae
  413881:	xchg   edi,eax
  413882:	ins    DWORD PTR es:[edi],dx
  413883:	(bad)  
  413884:	mov    al,ds:0xb60860d1
  413889:	xor    cl,dl
  41388b:	pop    ebp
  41388c:	or     ebp,ecx
  41388e:	shl    DWORD PTR [edi+0x50],cl
  413891:	xchg   edx,eax
  413892:	jmp    DWORD PTR [edx-0x5]
  413895:	mov    ch,0x61
  413897:	ficom  WORD PTR [ecx]
  413899:	fstp   DWORD PTR [edi+esi*8]
  41389c:	cmp    BYTE PTR [ebx-0x44],bl
  41389f:	and    BYTE PTR [edx+0x12088692],bl
  4138a5:	jp     0x413921
  4138a7:	and    eax,0x22409d3b
  4138ac:	push   esi
  4138ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4138ae:	les    esp,FWORD PTR [edx+0x26]
  4138b1:	aad    0x38
  4138b3:	and    eax,0x59c07780
  4138b8:	dec    ebx
  4138b9:	add    ecx,esp
  4138bb:	mov    cs,eax
  4138bd:	call   DWORD PTR [ebx+0x6c]
  4138c0:	xchg   DWORD PTR [edi+ebp*1+0x32a33c70],ebp
  4138c7:	into   
  4138c8:	adc    eax,0x20c1bc4a
  4138cd:	xor    al,0x5d
  4138cf:	popf   
  4138d0:	bswap  ecx
  4138d2:	jne    0x413885
  4138d4:	sbb    ebp,DWORD PTR [edi]
  4138d6:	dec    edi
  4138d7:	test   BYTE PTR [esi+0x334d1af9],bh
  4138dd:	xor    esi,0x3e
  4138e0:	imul   DWORD PTR [edi]
  4138e2:	mov    eax,ss:0x858a1708
  4138e8:	mov    ds:0x4f23837e,eax
  4138ed:	add    ebx,DWORD PTR [edi+eiz*8+0x5fcefd24]
  4138f4:	inc    ebp
  4138f5:	pop    esi
  4138f6:	mov    ds,WORD PTR [esi]
  4138f8:	bound  esi,QWORD PTR [ecx]
  4138fa:	call   0xe29af0f0
  4138ff:	out    dx,eax
  413900:	mov    al,ds:0xb0e8407e
  413905:	or     al,0xbc
  413907:	xor    al,0xce
  413909:	inc    ebp
  41390a:	scas   eax,DWORD PTR es:[edi]
  41390b:	mov    ch,0x2c
  41390d:	addr16 out dx,eax
  41390f:	into   
  413910:	aas    
  413911:	fidiv  DWORD PTR [ebp+edx*2-0x69]
  413915:	mov    ebx,0xef21c3c4
  41391a:	cmp    bl,cl
  41391c:	mov    dl,0x3f
  41391e:	test   eax,0x85a2b41a
  413923:	jae    0x41391b
  413925:	jmp    0x70ea:0x2a15fd0e
  41392c:	(bad)  
  41392d:	adc    bh,BYTE PTR [ebp+0x37]
  413930:	lods   eax,DWORD PTR ds:[esi]
  413931:	aaa    
  413932:	xor    DWORD PTR [ebx-0x51],0x11cfe10d
  413939:	adc    al,0x44
  41393b:	inc    ecx
  41393c:	and    al,0xaf
  41393e:	push   esp
  41393f:	shl    DWORD PTR [edi-0x692dd46c],cl
  413945:	jp     0x4139a3
  413947:	fld    TBYTE PTR [esi+ebp*4+0x78]
  41394b:	jne    0x413935
  41394d:	arpl   WORD PTR [ecx+0x1398af38],bx
  413953:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413954:	in     eax,dx
  413955:	imul   ebp,DWORD PTR [eax-0x75],0xffffffd3
  413959:	sahf   
  41395a:	int    0x46
  41395c:	pop    ebx
  41395d:	aas    
  41395e:	push   DWORD PTR [ebx]
  413960:	sub    al,0xb6
  413962:	dec    ebx
  413963:	cmp    BYTE PTR [ebp+0x77],ch
  413966:	dec    esp
  413967:	jmp    0xa584:0xbed9
  41396d:	cmp    esi,DWORD PTR [ebx]
  41396f:	test   BYTE PTR [ecx+0x7e4f93f2],bh
  413975:	mov    ecx,0xf36db653
  41397a:	xor    al,BYTE PTR [ecx+ebp*8-0x109b8ba6]
  413981:	hlt    
  413982:	imul   eax,ebp,0xffffffdd
  413985:	retf   
  413986:	push   eax
  413987:	fsubrp st(2),st
  413989:	into   
  41398a:	push   0xd3f848c5
  41398f:	adc    DWORD PTR [eax-0x80],esi
  413992:	add    eax,0x9985b164
  413997:	ins    BYTE PTR es:[edi],dx
  413998:	cmp    al,BYTE PTR [edi+0xb]
  41399b:	inc    edx
  41399c:	push   0x27
  41399e:	shr    DWORD PTR [eax+eiz*1],1
  4139a1:	test   BYTE PTR [ebx+0x41],ah
  4139a4:	lahf   
  4139a5:	inc    esi
  4139a6:	adc    al,0x63
  4139a8:	stos   BYTE PTR es:[edi],al
  4139a9:	xchg   edi,eax
  4139aa:	scas   al,BYTE PTR es:[edi]
  4139ab:	mov    BYTE PTR [edx-0x73c33f81],bh
  4139b1:	ja     0x413972
  4139b3:	jb     0x4139e8
  4139b5:	outs   dx,DWORD PTR ds:[esi]
  4139b6:	aad    0x93
  4139b8:	or     al,0x9
  4139ba:	xchg   edx,eax
  4139bb:	push   ebp
  4139bc:	fstp   TBYTE PTR [edx-0x1171ed4f]
  4139c2:	imul   edx,DWORD PTR [ebx+0x77],0xd95af06f
  4139c9:	retf   
  4139ca:	mov    edx,DWORD PTR [edx-0x39]
  4139cd:	sub    edi,esi
  4139cf:	adc    eax,0xf966570d
  4139d4:	or     eax,DWORD PTR [edx]
  4139d6:	ds enter 0xbdee,0x5f
  4139db:	out    dx,eax
  4139dc:	sub    BYTE PTR [edi+0x3d],0x21
  4139e0:	mov    dh,0xd3
  4139e2:	mov    ah,0x91
  4139e4:	in     eax,0x5f
  4139e6:	push   ss
  4139e7:	mov    dh,0x30
  4139e9:	gs jle 0x413a45
  4139ec:	repnz aam 0x71
  4139ef:	xor    DWORD PTR [ebx-0x5],edi
  4139f2:	cmp    al,0xed
  4139f4:	leave  
  4139f5:	xchg   DWORD PTR [esi-0x40d8a900],ebx
  4139fb:	rcl    DWORD PTR [ebp-0x11375a46],1
  413a01:	cmovl  ecx,DWORD PTR [ecx+0x7a93f8de]
  413a08:	mov    cl,0x9
  413a0a:	fild   WORD PTR [ecx]
  413a0c:	dec    edi
  413a0d:	jmp    0x413a0e
  413a0f:	iret   
  413a10:	xor    al,BYTE PTR [edx-0x41]
  413a13:	stc    
  413a14:	pop    ebx
  413a15:	inc    esp
  413a16:	mov    ebp,0x470ab0bd
  413a1b:	fild   QWORD PTR ds:0xa8089675
  413a21:	pop    ds
  413a22:	adc    DWORD PTR ds:0x8cbc3a0a,0xffffffeb
  413a29:	mov    ch,0x3
  413a2b:	data16 outs dx,BYTE PTR ds:[esi]
  413a2d:	rcl    DWORD PTR [edi+0x1abf1f94],cl
  413a33:	iret   
  413a34:	and    DWORD PTR gs:0xe3297d8c,edx
  413a3b:	not    DWORD PTR [esi+eiz*1-0x26]
  413a3f:	pop    edi
  413a40:	scas   eax,DWORD PTR es:[edi]
  413a41:	add    DWORD PTR [ecx+edi*2-0x42486cb2],ecx
  413a48:	push   esp
  413a49:	int    0x9a
  413a4b:	loope  0x413aca
  413a4d:	inc    edi
  413a4e:	popf   
  413a4f:	loopne 0x413a6f
  413a51:	repz (bad) 
  413a53:	cmp    DWORD PTR [ecx-0x2d],ecx
  413a56:	jnp    0x413aaa
  413a58:	popa   
  413a59:	or     DWORD PTR [edx+0x36f8b020],0xffffffd7
  413a60:	(bad)  
  413a61:	pop    ss
  413a62:	xor    eax,0x10623772
  413a67:	xor    dh,ch
  413a69:	adc    BYTE PTR [eax-0x2725d86],bl
  413a6f:	movsx  ebp,dx
  413a72:	loopne 0x413ad4
  413a74:	dec    esi
  413a75:	xchg   esp,eax
  413a76:	or     BYTE PTR [edi-0x48],dh
  413a79:	jmp    0x413a16
  413a7b:	sub    dh,BYTE PTR [eax+0x29]
  413a7e:	cwde   
  413a7f:	pop    ebx
  413a80:	sti    
  413a81:	push   ebp
  413a82:	push   0x9c19b03b
  413a87:	sub    DWORD PTR [edx+ebp*4],esi
  413a8a:	xchg   ebx,eax
  413a8b:	adc    DWORD PTR [eax-0x30df5b5d],eax
  413a91:	call   0xfee2:0xbab53296
  413a98:	das    
  413a99:	add    DWORD PTR ds:0x92793b72,ebp
  413a9f:	mov    BYTE PTR [eax-0x5f82f57],bl
  413aa5:	sbb    al,BYTE PTR [esi+0x630d687b]
  413aab:	jg     0x413abf
  413aad:	push   eax
  413aae:	add    BYTE PTR [esp+ebx*4+0x59],dh
  413ab2:	inc    eax
  413ab3:	or     DWORD PTR [ebx],esp
  413ab5:	dec    edx
  413ab6:	xor    eax,0x738e6557
  413abb:	in     eax,dx
  413abc:	cli    
  413abd:	lds    ebp,FWORD PTR ds:0x6a6275aa
  413ac3:	xor    DWORD PTR ds:0xa56efd43,0xffffffd8
  413aca:	(bad)  
  413acb:	rep outs dx,BYTE PTR ds:[esi]
  413acd:	xchg   cl,cl
  413acf:	adc    BYTE PTR ds:[eax],bl
  413ad2:	shl    dl,cl
  413ad4:	cli    
  413ad5:	pop    ss
  413ad6:	sbb    ah,0x7
  413ad9:	pop    esp
  413ada:	out    0xba,eax
  413adc:	xlat   BYTE PTR ds:[ebx]
  413add:	mov    ecx,0xa410c0f8
  413ae2:	mov    ah,0x36
  413ae4:	pusha  
  413ae5:	mov    edi,0xb24dacdf
  413aea:	push   es
  413aeb:	push   ebx
  413aec:	push   cs
  413aed:	jmp    0x93face74
  413af2:	adc    eax,0x9fea78b3
  413af7:	outs   dx,DWORD PTR gs:[esi]
  413af9:	sbb    ecx,DWORD PTR [eax]
  413afb:	cmp    dh,bh
  413afd:	icebp  
  413afe:	rcr    DWORD PTR [edi],cl
  413b00:	call   0x8146c84c
  413b05:	rcl    DWORD PTR [edx+0x64d613f7],cl
  413b0b:	mov    ebx,0xa17a806c
  413b10:	aas    
  413b11:	sbb    al,0x7e
  413b13:	sub    eax,0x5c889d10
  413b18:	mov    eax,0xc1fb86db
  413b1d:	nop
  413b1e:	loop   0x413b77
  413b20:	out    dx,al
  413b21:	adc    eax,0xebedcfac
  413b26:	jge    0x413ac6
  413b28:	into   
  413b29:	pop    ebx
  413b2a:	test   BYTE PTR [ebp-0x49b53362],0x8c
  413b31:	ins    DWORD PTR es:[edi],dx
  413b32:	mov    ds,WORD PTR [eax]
  413b34:	sub    eax,0x5f47862f
  413b39:	pop    esi
  413b3a:	shl    DWORD PTR [edi-0x38c95b1b],cl
  413b40:	stos   DWORD PTR es:[edi],eax
  413b41:	push   0x58980d3c
  413b46:	or     bh,ch
  413b48:	or     al,0xdf
  413b4a:	les    esi,FWORD PTR [edi+0x39]
  413b4d:	pop    eax
  413b4e:	loopne 0x413b2b
  413b50:	sbb    edx,DWORD PTR [eax-0x12d18a81]
  413b56:	lock dec ecx
  413b58:	sub    DWORD PTR [ebp-0x76],esi
  413b5b:	frstor [ebp-0x1eceb57c]
  413b61:	(bad)  
  413b62:	in     al,0x5b
  413b64:	les    ecx,FWORD PTR [ecx]
  413b66:	lods   al,BYTE PTR ds:[esi]
  413b67:	or     BYTE PTR [ecx],bh
  413b69:	mov    al,0xa0
  413b6b:	cwde   
  413b6c:	and    al,0x98
  413b6e:	(bad)  [edx+edx*8+0x50a2ecf8]
  413b75:	ja     0x413bca
  413b77:	xchg   edi,eax
  413b78:	mov    eax,ds:0xda0f6c21
  413b7d:	xchg   ebp,eax
  413b7e:	and    ebp,eax
  413b80:	imul   edi,DWORD PTR [eax-0x171fd9d8],0xffffff89
  413b87:	inc    esi
  413b88:	mov    BYTE PTR [eax],ch
  413b8a:	and    al,0x7
  413b8c:	inc    edi
  413b8d:	adc    cl,0x1f
  413b90:	sbb    al,0xa5
  413b92:	lods   al,BYTE PTR ds:[esi]
  413b93:	sub    eax,0x344a401e
  413b98:	jmp    0x7b50f233
  413b9d:	sbb    edx,ebx
  413b9f:	lock sub bl,BYTE PTR [ebx+0x7c]
  413ba3:	in     al,0x3d
  413ba5:	jg     0x413b9c
  413ba7:	lea    eax,[ecx-0x56ba5806]
  413bad:	rol    BYTE PTR [edx-0x23debbe8],cl
  413bb3:	std    
  413bb4:	dec    ecx
  413bb5:	and    cl,BYTE PTR [eax]
  413bb7:	ds pop es
  413bb9:	mov    dh,0xcf
  413bbb:	test   eax,0x20c611ab
  413bc0:	xchg   ecx,eax
  413bc1:	in     eax,dx
  413bc2:	les    eax,FWORD PTR [eax]
  413bc4:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  413bc6:	sub    eax,DWORD PTR [ebp+ebx*4+0x1]
  413bca:	jl     0x413bcb
  413bcc:	scas   eax,DWORD PTR es:[edi]
  413bcd:	dec    ecx
  413bce:	into   
  413bcf:	xchg   edx,eax
  413bd0:	and    DWORD PTR [esi+0x2b],eax
  413bd3:	call   0x6dc9:0xba718509
  413bda:	push   ebx
  413bdb:	or     al,0xd2
  413bdd:	cmp    eax,0x9b12d08b
  413be2:	popf   
  413be3:	jmp    0x413bbe
  413be5:	std    
  413be6:	cmp    al,0xf1
  413be8:	xchg   ecx,eax
  413be9:	in     eax,dx
  413bea:	in     al,0xea
  413bec:	cmp    eax,0x607b23c9
  413bf1:	(bad)  
  413bf2:	or     al,0x6e
  413bf4:	mov    dh,0x91
  413bf6:	sub    DWORD PTR es:[ecx+0x67e19281],edx
  413bfd:	in     al,0x89
  413bff:	sbb    eax,0xe27e86f1
  413c04:	push   ecx
  413c05:	sahf   
  413c06:	clc    
  413c07:	push   eax
  413c08:	fistp  QWORD PTR [esi-0x4d]
  413c0b:	lock or al,0x79
  413c0e:	cmp    eax,0x7e5e9465
  413c13:	xchg   esp,eax
  413c14:	push   0x65edfa72
  413c19:	sub    al,0x66
  413c1b:	sub    BYTE PTR [eax+0x6040f332],bh
  413c21:	mov    ch,0x1a
  413c23:	loop   0x413c3c
  413c25:	push   esp
  413c26:	push   esp
  413c27:	scas   eax,DWORD PTR es:[edi]
  413c28:	dec    eax
  413c29:	test   BYTE PTR [ecx+0xafeaf0b],0xe5
  413c30:	call   0x65129ad8
  413c35:	ror    BYTE PTR [ecx-0x57],cl
  413c38:	outs   dx,DWORD PTR ds:[esi]
  413c39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c3a:	retf   0xf23b
  413c3d:	pop    ss
  413c3e:	aaa    
  413c3f:	lods   eax,DWORD PTR ds:[esi]
  413c40:	sub    al,0x9b
  413c42:	fisttp QWORD PTR ds:0x30067074
  413c48:	sti    
  413c49:	dec    edx
  413c4a:	xchg   ecx,eax
  413c4b:	inc    edi
  413c4c:	imul   ebx,DWORD PTR [edi+0x1b],0x6e8428d3
  413c53:	sbb    eax,0x572d5714
  413c58:	inc    ecx
  413c59:	push   esi
  413c5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c5b:	cmp    DWORD PTR [ebp+ecx*2-0x7a4511ef],esi
  413c62:	aad    0xb1
  413c64:	lods   eax,DWORD PTR ds:[esi]
  413c65:	iret   
  413c66:	push   cs
  413c67:	lods   al,BYTE PTR ds:[esi]
  413c68:	into   
  413c69:	ins    BYTE PTR es:[edi],dx
  413c6a:	es adc al,0xf
  413c6d:	test   BYTE PTR [edx],ch
  413c6f:	and    al,0x0
  413c71:	add    bh,al
  413c73:	inc    ebp
  413c74:	loopne 0x413c76
  413c76:	add    BYTE PTR [eax],al
  413c78:	add    BYTE PTR [edx+0x3],ch
  413c7b:	xor    edx,edx
  413c7d:	pop    edx
  413c7e:	add    edx,0x8
  413c81:	push   edx
  413c82:	pop    ecx
  413c83:	push   0x6
  413c85:	dec    ecx
  413c86:	pop    ebx
  413c87:	dec    ebx
  413c88:	xchg   ebx,ecx
  413c8a:	sub    ebx,ecx
  413c8c:	xchg   ebx,ecx
  413c8e:	dec    ecx
  413c8f:	mov    eax,DWORD PTR [ebp-0x1c]
  413c92:	imul   eax,ecx
  413c95:	sub    esp,eax
  413c97:	mov    DWORD PTR [ebp-0x20],esp
  413c9a:	mov    eax,DWORD PTR [ebp-0x4]
  413c9d:	xor    eax,esi
  413c9f:	add    eax,edi
  413ca1:	jmp    0x416075
  413ca6:	mov    ecx,DWORD PTR [ebp-0xc]
  413ca9:	mov    eax,DWORD PTR [ebp+0x8]
  413cac:	mov    edx,DWORD PTR [ebp+0x14]
  413caf:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  413cb3:	xor    ecx,esi
  413cb5:	add    ecx,edi
  413cb7:	xor    edx,edx
  413cb9:	div    ecx
  413cbb:	mov    ecx,DWORD PTR [ebp-0x4]
  413cbe:	xor    ecx,esi
  413cc0:	lea    eax,[ecx+eax*1+0x3272ec]
  413cc7:	mov    ecx,DWORD PTR [ebp+0x8]
  413cca:	mov    edx,DWORD PTR [ebp-0x20]
  413ccd:	mov    DWORD PTR [edx+ecx*4],eax
  413cd0:	mov    eax,DWORD PTR [ebp-0xc]
  413cd3:	jmp    0x416069
  413cd8:	pop    es
  413cd9:	adc    al,0xab
  413cdb:	test   DWORD PTR [ebx+0x6a94fb79],ebx
  413ce1:	fadd   DWORD PTR [edx-0x36]
  413ce4:	push   ebp
  413ce5:	jns    0x413d45
  413ce7:	jae    0x413cb9
  413ce9:	fs jge 0x413d66
  413cec:	add    eax,0x357a7a5f
  413cf1:	lea    esi,ds:0xf7bdfe48
  413cf7:	or     dh,BYTE PTR [ebx-0x3a]
  413cfa:	jae    0x413d44
  413cfc:	es iret 
  413cfe:	mov    al,ds:0x876a7ac4
  413d03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d04:	lahf   
  413d05:	nop
  413d06:	jl     0x413d69
  413d08:	mov    ss,WORD PTR [ebp-0x2f544af7]
  413d0e:	ret    0xd37b
  413d11:	shr    BYTE PTR [esi],1
  413d13:	fnsave [bp+di]
  413d16:	ret    0x6cd0
  413d19:	mov    dh,0x2e
  413d1b:	xor    dl,BYTE PTR [edi-0x16]
  413d1e:	pop    ds
  413d1f:	ret    
  413d20:	lea    ebx,[edi+0xc3f116c]
  413d26:	je     0x413cfa
  413d28:	add    eax,0x417f916b
  413d2d:	inc    ecx
  413d2e:	xor    DWORD PTR [eax+0x4fd2b54f],ecx
  413d34:	adc    esi,DWORD PTR [ebp+ebp*8+0x63]
  413d38:	mov    al,0xa9
  413d3a:	push   ds
  413d3b:	fs aas 
  413d3d:	fnstsw WORD PTR [ecx-0x4b]
  413d40:	cmp    al,0xb
  413d42:	cmp    dh,BYTE PTR [ecx-0x24684874]
  413d48:	cli    
  413d49:	mov    edx,0x9d3197d0
  413d4e:	fadd   st,st(2)
  413d50:	gs jns 0x413d21
  413d53:	mov    ebx,gs
  413d55:	shr    BYTE PTR [esp+ebp*1],1
  413d58:	or     ebx,DWORD PTR [eax]
  413d5a:	shl    DWORD PTR cs:[eax+0x45],0x91
  413d5f:	jns    0x413d11
  413d61:	pop    esi
  413d62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d63:	fmul   DWORD PTR [edi-0x17]
  413d66:	pop    eax
  413d67:	loopne 0x413daa
  413d69:	jb     0x413d82
  413d6b:	jno    0x413d92
  413d6d:	into   
  413d6e:	nop
  413d6f:	rcr    BYTE PTR [ebx],0x30
  413d72:	sbb    al,0xb8
  413d74:	adc    al,BYTE PTR [ecx+0x2113cb91]
  413d7a:	pop    cx
  413d7c:	scas   eax,DWORD PTR es:[edi]
  413d7d:	lods   eax,DWORD PTR ds:[esi]
  413d7e:	les    ebx,FWORD PTR [edi-0x232ef008]
  413d84:	mov    bh,0x77
  413d86:	imul   esp,esi,0xffffffb5
  413d89:	dec    ebx
  413d8a:	mov    ebp,0x2cb9ed45
  413d8f:	cmp    ebp,DWORD PTR [edi+0x10]
  413d92:	sbb    eax,0x83b6fd0
  413d97:	dec    edx
  413d98:	popf   
  413d99:	inc    edx
  413d9a:	mov    ds:0xd7446bbf,al
  413d9f:	adc    al,0xce
  413da1:	sub    eax,0x493f822e
  413da6:	fs (bad) 
  413da8:	jmp    0x413d99
  413daa:	cmp    ebx,0x7151ca78
  413db0:	pop    eax
  413db1:	inc    ebp
  413db2:	jp     0x413e31
  413db4:	sub    ebx,DWORD PTR [ebp+0x33]
  413db7:	mov    ch,0xc
  413db9:	xchg   DWORD PTR [edx-0x26],ebx
  413dbc:	inc    eax
  413dbd:	cdq    
  413dbe:	sbb    BYTE PTR [ebx],ch
  413dc0:	xlat   BYTE PTR ds:[ebx]
  413dc1:	mov    ebx,0x4961eab8
  413dc6:	inc    edi
  413dc7:	into   
  413dc8:	ret    0x4e3c
  413dcb:	das    
  413dcc:	pop    ebp
  413dcd:	inc    ebx
  413dce:	fcom   DWORD PTR [ebx+0x5b]
  413dd1:	test   DWORD PTR [esi],0x821f68ec
  413dd7:	jo     0x413de0
  413dd9:	xchg   esp,eax
  413dda:	add    eax,DWORD PTR [ebp+0x35d4fb9b]
  413de0:	lea    esi,[ecx+edx*2+0x7eaa9fed]
  413de7:	mov    edx,0x68e261ec
  413dec:	fwait
  413ded:	xchg   edi,eax
  413dee:	int    0x97
  413df0:	push   eax
  413df1:	sub    DWORD PTR [ebx],esp
  413df3:	push   cs
  413df4:	das    
  413df5:	dec    esp
  413df6:	mov    ecx,0xbd7ecc0a
  413dfb:	cmp    al,0xf1
  413dfd:	xor    dl,ah
  413dff:	jns    0x413db5
  413e01:	in     al,0x64
  413e03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e04:	and    DWORD PTR [ebx],edx
  413e06:	(bad)  
  413e07:	xor    bh,cl
  413e09:	inc    eax
  413e0a:	jg     0x413e4f
  413e0c:	adc    eax,0x2d4521d7
  413e11:	pop    esi
  413e12:	mov    ebx,0xa058fa8a
  413e17:	add    ecx,DWORD PTR [edx+edx*2-0x362cd153]
  413e1e:	push   ebx
  413e1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e20:	pusha  
  413e21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e22:	cmp    eax,0xe7d0a142
  413e27:	rcl    DWORD PTR [edi-0x13],0xcd
  413e2b:	jmp    0xedc1:0x17d3de1f
  413e32:	imul   esp,DWORD PTR [eax-0x76],0x34
  413e36:	xlat   BYTE PTR ds:[ebx]
  413e37:	jp     0x413e44
  413e39:	dec    ebx
  413e3a:	ror    BYTE PTR [esi-0x567f4f58],1
  413e40:	das    
  413e41:	xor    DWORD PTR [edx-0x3f],esi
  413e44:	(bad)  
  413e45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e46:	mov    dh,0xa1
  413e48:	push   edi
  413e49:	pusha  
  413e4a:	sbb    al,0xad
  413e4c:	repnz rcr DWORD PTR [edi-0x64da103c],0x93
  413e54:	gs jb  0x413de9
  413e57:	mov    al,BYTE PTR [ecx-0x72]
  413e5a:	xchg   edi,eax
  413e5b:	dec    esp
  413e5c:	mov    ds:0xbda2c563,al
  413e61:	std    
  413e62:	jmp    0x793d:0xd8cf75c5
  413e69:	mov    ds:0xcdfa73e1,eax
  413e6e:	fmul   QWORD PTR [esi+0x61]
  413e71:	bnd jge 0x413e4d
  413e74:	sub    al,BYTE PTR [ebx+0x70]
  413e77:	or     BYTE PTR ds:0xb313a022,0x18
  413e7e:	inc    ebp
  413e7f:	arpl   WORD PTR [edx-0x40966222],sp
  413e85:	mov    ecx,DWORD PTR [ecx]
  413e87:	lds    edi,FWORD PTR [esi]
  413e89:	outs   dx,BYTE PTR ds:[esi]
  413e8a:	fdivr  QWORD PTR ds:0x4d99e05
  413e90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e91:	and    cl,dh
  413e93:	add    DWORD PTR [ebx+0x63ea4a7e],ebx
  413e99:	jg     0x413e44
  413e9b:	and    DWORD PTR ds:0xd1af90a8,0xffffff80
  413ea2:	and    DWORD PTR [edx],eax
  413ea4:	inc    esi
  413ea5:	mov    edx,0xae10b6ba
  413eaa:	in     al,0xaa
  413eac:	and    eax,0xdb48c92c
  413eb1:	cmp    DWORD PTR [edx],edi
  413eb3:	jl     0x413e95
  413eb5:	dec    edx
  413eb6:	pop    es
  413eb7:	xor    al,0x9d
  413eb9:	or     eax,DWORD PTR [ebp-0x526be3ae]
  413ebf:	fcmovbe st,st(1)
  413ec1:	in     al,0xe0
  413ec3:	inc    eax
  413ec4:	(bad)  
  413ec5:	sub    al,0xf0
  413ec7:	xchg   ecx,eax
  413ec8:	inc    esp
  413ec9:	jecxz  0x413ee7
  413ecb:	(bad)  
  413ecc:	hlt    
  413ecd:	daa    
  413ece:	fsub   DWORD PTR [ebp+0x15]
  413ed1:	sbb    BYTE PTR [esi+eax*8+0x13],cl
  413ed5:	daa    
  413ed6:	rcr    bh,0xa
  413ed9:	cdq    
  413eda:	test   al,0xe8
  413edc:	inc    ebp
  413edd:	sti    
  413ede:	push   ebx
  413edf:	sub    al,0x95
  413ee1:	sbb    dl,dl
  413ee3:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  413ee5:	inc    esi
  413ee6:	leave  
  413ee7:	hlt    
  413ee8:	jb     0x413ec1
  413eea:	test   esi,ebx
  413eec:	aaa    
  413eed:	mov    eax,ds:0xd3926cca
  413ef2:	dec    esi
  413ef3:	sahf   
  413ef4:	scas   al,BYTE PTR es:[edi]
  413ef5:	push   edi
  413ef6:	inc    ebx
  413ef7:	xor    dh,0x73
  413efa:	inc    DWORD PTR [ebx+0x79]
  413efd:	or     bl,BYTE PTR [ebx-0x51175823]
  413f03:	mov    al,0xef
  413f05:	push   esp
  413f06:	fcomp  QWORD PTR [ebx+0x7c979c85]
  413f0c:	push   cs
  413f0d:	jae    0x413eb4
  413f0f:	xlat   BYTE PTR ds:[ebx]
  413f10:	neg    ebp
  413f12:	ret    
  413f13:	lods   eax,DWORD PTR cs:[esi]
  413f15:	stc    
  413f16:	sub    esi,DWORD PTR [edx+eax*4+0x44]
  413f1a:	xor    eax,0xd130a722
  413f1f:	out    dx,eax
  413f20:	cwde   
  413f21:	add    al,dl
  413f23:	mov    eax,0xae801fa2
  413f28:	cmp    al,BYTE PTR [esi]
  413f2a:	mov    BYTE PTR [ebp-0x6c],al
  413f2d:	pop    ds
  413f2e:	mov    ebp,0x5be1060e
  413f33:	mov    ss,WORD PTR [ebp+eiz*8-0x72]
  413f37:	mov    DWORD PTR [ecx],eax
  413f39:	mov    bl,0x20
  413f3b:	push   ecx
  413f3c:	push   ebx
  413f3d:	sub    eax,0x6b9b0d3b
  413f42:	gs in  eax,dx
  413f44:	mov    ?,WORD PTR [ebp+0x4fc26091]
  413f4a:	xor    BYTE PTR [ebx-0x6c],bl
  413f4d:	push   0xb13229df
  413f52:	jg     0x413f8c
  413f54:	retf   0xb4a4
  413f57:	imul   eax,DWORD PTR [eax-0x3d],0xa9f5994d
  413f5e:	outs   dx,BYTE PTR ds:[esi]
  413f5f:	inc    esp
  413f60:	adc    DWORD PTR [edx+0x6197afd0],0xffffff94
  413f67:	and    DWORD PTR [ecx],0x59
  413f6a:	or     ch,BYTE PTR [esi]
  413f6c:	mov    ch,0x90
  413f6e:	test   eax,0xa2d5bca2
  413f73:	das    
  413f74:	xor    al,0x4c
  413f76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f77:	pop    edi
  413f78:	test   eax,0x8cbbf1d3
  413f7d:	ins    DWORD PTR es:[edi],dx
  413f7e:	mov    cl,0xb3
  413f80:	nop
  413f81:	mov    DWORD PTR [ebx+0x7a],ebx
  413f84:	xchg   ebx,eax
  413f85:	cmp    ecx,ebp
  413f87:	mov    edi,0x3c21699c
  413f8c:	(bad)  
  413f8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f8e:	jae    0x413fa4
  413f90:	ret    
  413f91:	jmp    0x413f4f
  413f93:	mov    ah,0x2c
  413f95:	and    edi,eax
  413f97:	sub    BYTE PTR [edx],cl
  413f99:	push   es
  413f9a:	inc    ecx
  413f9c:	push   0x5552e5bd
  413fa1:	adc    esp,DWORD PTR ds:0xfc1ce07c
  413fa7:	sub    ebx,DWORD PTR [eax]
  413fa9:	mov    esi,0xfdf7a2aa
  413fae:	xlat   BYTE PTR ds:[ebx]
  413faf:	push   es
  413fb0:	inc    eax
  413fb1:	cmp    al,0xd9
  413fb3:	ficomp WORD PTR [edi]
  413fb5:	sub    DWORD PTR [eax-0xa],ebp
  413fb8:	mov    al,0x8d
  413fba:	push   cs
  413fbb:	push   cs
  413fbc:	adc    BYTE PTR [ebp+0x398fb900],0x88
  413fc3:	ret    0x2fbe
  413fc6:	data16 add BYTE PTR [eax],al
  413fc9:	call   FWORD PTR [edi+0x7c]
  413fcc:	fnsave [esi]
  413fce:	xchg   BYTE PTR [ecx],al
  413fd0:	js     0x41400b
  413fd2:	pop    DWORD PTR [edx-0x3659df19]
  413fd8:	dec    esi
  413fd9:	fisubr WORD PTR [esi-0x36]
  413fdc:	dec    eax
  413fdd:	adc    al,0xb2
  413fdf:	adc    BYTE PTR [ebx+ebx*1],0x2c
  413fe3:	add    bh,BYTE PTR [eax+edx*1]
  413fe6:	xor    al,0x38
  413fe8:	daa    
  413fe9:	push   ebx
  413fea:	xor    DWORD PTR [ebp+0x67],esi
  413fed:	add    ebx,esp
  413fef:	inc    ebx
  413ff0:	xchg   ebp,eax
  413ff1:	and    BYTE PTR [eax],0xc6
  413ff4:	in     eax,dx
  413ff5:	icebp  
  413ff6:	jge    0x413fcb
  413ff8:	shr    DWORD PTR [eax+eax*4+0x5eaa9391],1
  413fff:	scas   al,BYTE PTR es:[edi]
  414000:	xchg   edi,eax
  414001:	push   es
  414002:	jb     0x413fe0
  414004:	sbb    BYTE PTR [esp+ebx*4-0x637a0dfd],dh
  41400b:	push   0x77
  41400d:	jb     0x41406b
  41400f:	push   eax
  414010:	stc    
  414011:	pop    ds
  414012:	aaa    
  414013:	push   ss
  414014:	pushf  
  414015:	jmp    0xd44d43fa
  41401a:	adc    DWORD PTR [ecx+0x338b1f82],ecx
  414020:	(bad)  
  414021:	leave  
  414022:	and    al,0xaf
  414024:	stos   DWORD PTR es:[edi],eax
  414025:	ret    0xdcdb
  414028:	dec    ecx
  414029:	jo     0x4140a3
  41402b:	xchg   ecx,eax
  41402c:	push   ebx
  41402d:	cmp    eax,0xa78edad
  414032:	mov    BYTE PTR [esi],dh
  414034:	adc    eax,0xb5fefb7b
  414039:	adc    esp,DWORD PTR [eax]
  41403b:	jl     0x413fbd
  41403d:	push   ss
  41403e:	jge    0x414031
  414040:	and    ch,cl
  414042:	ins    DWORD PTR es:[edi],dx
  414043:	cmp    bh,BYTE PTR [edi+edi*1]
  414046:	in     eax,0xc6
  414048:	jmp    0x414048
  41404a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41404b:	ret    0x67c0
  41404e:	sbb    BYTE PTR [esi],dh
  414050:	clc    
  414051:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414052:	ret    0x9df2
  414055:	pop    ecx
  414056:	fdiv   QWORD PTR [eax]
  414058:	push   ecx
  414059:	or     dl,BYTE PTR [edx]
  41405b:	outs   dx,BYTE PTR ds:[esi]
  41405c:	mov    ebx,0x6ba6fc32
  414061:	sbb    DWORD PTR [esi],edi
  414063:	sbb    edx,0xffffffe2
  414066:	adc    DWORD PTR [esi],edx
  414068:	dec    edx
  414069:	mov    esi,0x8128983b
  41406e:	pushf  
  41406f:	mov    ah,0xe2
  414071:	xor    dh,dh
  414073:	in     al,dx
  414074:	outs   dx,BYTE PTR ds:[esi]
  414075:	fsincos 
  414077:	cmc    
  414078:	popf   
  414079:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41407a:	mov    cl,0x66
  41407c:	imul   ebx,edi,0x1a
  41407f:	sbb    eax,0x8c468683
  414084:	mov    ds:0x91557756,eax
  414089:	push   es
  41408a:	adc    BYTE PTR ds:0x64feb65b,0xc7
  414091:	ins    BYTE PTR es:[edi],dx
  414092:	push   es
  414093:	scas   al,BYTE PTR es:[edi]
  414094:	dec    edi
  414095:	dec    edi
  414096:	mov    ecx,0xfdf7cbf5
  41409b:	ins    BYTE PTR es:[edi],dx
  41409c:	or     eax,0xd60f328f
  4140a1:	mov    eax,0x874b4b4c
  4140a6:	mov    BYTE PTR [ebp-0x41692ba4],al
  4140ac:	leave  
  4140ad:	xchg   ebx,eax
  4140ae:	pop    ebp
  4140af:	in     al,0x8e
  4140b1:	pusha  
  4140b2:	sub    edi,esp
  4140b4:	adc    al,0xd8
  4140b6:	xchg   edx,eax
  4140b7:	(bad)  
  4140b8:	mov    edi,0x1d5e5fbf
  4140bd:	jb     0x4140b7
  4140bf:	mov    gs,esi
  4140c1:	xchg   esp,eax
  4140c2:	push   ecx
  4140c3:	das    
  4140c4:	dec    ebx
  4140c5:	test   eax,0x74ec02e9
  4140ca:	mov    esp,DWORD PTR [eax]
  4140cc:	mov    ecx,0x82d86fd0
  4140d1:	sbb    eax,0x392de029
  4140d6:	dec    edi
  4140d7:	xor    DWORD PTR [ecx-0x6b],ebx
  4140da:	xchg   esp,eax
  4140db:	xchg   ebp,eax
  4140dc:	inc    edx
  4140dd:	mov    BYTE PTR [edi+0x2f],bh
  4140e0:	int    0xe
  4140e2:	cli    
  4140e3:	cmp    edi,DWORD PTR [edi+edi*1-0x1e]
  4140e7:	dec    esi
  4140e8:	jbe    0x41409c
  4140ea:	push   ebp
  4140eb:	mov    al,0xba
  4140ed:	out    0x1d,eax
  4140ef:	cmp    esp,ebp
  4140f1:	fisttp QWORD PTR [ebx-0x69]
  4140f4:	mov    BYTE PTR [eax],al
  4140f6:	push   ds
  4140f7:	std    
  4140f8:	out    dx,al
  4140f9:	ins    DWORD PTR es:[edi],dx
  4140fa:	leave  
  4140fb:	mov    dh,0x27
  4140fd:	mov    ah,0xb2
  4140ff:	sub    eax,0xc3f09147
  414104:	mov    ds:0x8e346095,eax
  414109:	cmp    al,0xae
  41410b:	xchg   edx,eax
  41410c:	dec    eax
  41410d:	mov    bl,0x28
  41410f:	adc    DWORD PTR [edx+ecx*2+0x53728c19],esi
  414116:	test   DWORD PTR es:[ebx+0x69],esp
  41411a:	mov    ebp,0x6fad7590
  41411f:	and    eax,0x5d99272f
  414124:	mov    ebp,0x29d267b2
  414129:	mov    ds:0x83f4798d,al
  41412e:	lock push cs
  414130:	cdq    
  414131:	fmul   DWORD PTR [ecx+0xfc2f3ea]
  414137:	loopne 0x414164
  414139:	lock dec DWORD PTR [ecx+0x19ff1023]
  414140:	icebp  
  414141:	mov    BYTE PTR [ebx+0x2abaf4c6],ch
  414147:	or     esp,DWORD PTR [eax+0x479377e7]
  41414d:	xor    BYTE PTR [ebx],ah
  41414f:	jnp    0x4141bf
  414151:	aam    0x73
  414153:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414154:	mov    ss,WORD PTR [ebx]
  414156:	push   cs
  414157:	inc    edx
  414158:	jno    0x414115
  41415a:	(bad)  
  41415b:	hlt    
  41415c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41415d:	cli    
  41415e:	das    
  41415f:	jge    0x4141cc
  414161:	push   0xcaaf0d03
  414166:	aas    
  414167:	push   ecx
  414168:	pop    ecx
  414169:	dec    esp
  41416a:	lock jmp DWORD PTR [ecx-0x1a]
  41416e:	xchg   ebp,eax
  41416f:	or     DWORD PTR [esi],eax
  414171:	dec    edi
  414172:	xchg   ecx,eax
  414173:	xchg   ecx,eax
  414174:	or     eax,0xdf5a2f8e
  414179:	adc    BYTE PTR [ecx],dl
  41417b:	sbb    ebp,esi
  41417d:	inc    edi
  41417e:	stc    
  41417f:	mov    ebx,0x16cc1bc2
  414184:	aam    0x51
  414186:	push   ebx
  414187:	rcr    BYTE PTR [ebx],1
  414189:	xchg   ecx,eax
  41418a:	xchg   ecx,eax
  41418b:	cmp    al,0x79
  41418d:	cmp    al,bh
  41418f:	leave  
  414190:	gs mov ch,0x54
  414193:	and    al,0x73
  414195:	cld    
  414196:	aam    0xd2
  414198:	inc    edx
  414199:	adc    eax,0x641c2027
  41419e:	mov    eax,0xed20d0b7
  4141a3:	mov    eax,ds:0x6f41584b
  4141a8:	inc    eax
  4141a9:	push   es
  4141aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4141ab:	dec    esi
  4141ac:	sar    ebx,cl
  4141ae:	dec    esp
  4141af:	jp     0x414226
  4141b1:	repnz push ss
  4141b3:	lahf   
  4141b4:	fs test edx,eax
  4141b7:	cmc    
  4141b8:	dec    edx
  4141b9:	or     edi,eax
  4141bb:	sbb    al,0x21
  4141bd:	stos   DWORD PTR es:[edi],eax
  4141be:	or     DWORD PTR [eax+0x52],esi
  4141c1:	jecxz  0x414195
  4141c3:	loope  0x41416a
  4141c5:	int    0x5e
  4141c7:	std    
  4141c8:	xchg   ebx,eax
  4141c9:	fadd   QWORD PTR [ecx+0x385ad1ea]
  4141cf:	pop    esp
  4141d0:	sti    
  4141d1:	jo     0x414239
  4141d3:	sub    eax,0x4f31c846
  4141d8:	and    BYTE PTR [eax+0x1b],dl
  4141db:	or     al,0x18
  4141dd:	test   BYTE PTR [edi+eax*8],ch
  4141e0:	pop    ebp
  4141e1:	push   ss
  4141e2:	jle    0x41422a
  4141e4:	lahf   
  4141e5:	cdq    
  4141e6:	mov    dh,0x5c
  4141e8:	lods   al,BYTE PTR ds:[esi]
  4141e9:	(bad)  
  4141ea:	push   esp
  4141eb:	shl    DWORD PTR ds:0xadc9ddfb,0x96
  4141f2:	out    0x89,eax
  4141f4:	test   DWORD PTR [edi-0x67],ebp
  4141f7:	mov    al,ds:0xc0beaa22
  4141fc:	std    
  4141fd:	add    dl,BYTE PTR [ebx-0x79]
  414200:	jmp    0xaedd2027
  414205:	js     0x414200
  414207:	add    al,0xf2
  414209:	and    DWORD PTR [ebx-0x40],edi
  41420c:	mov    ebx,0x21271f08
  414211:	in     al,0xcb
  414213:	lds    eax,FWORD PTR [ebx]
  414215:	jmp    0x414201
  414217:	cdq    
  414218:	add    DWORD PTR [esi],0xd97b2c35
  41421e:	(bad)  
  41421f:	or     al,0x65
  414221:	cwde   
  414222:	adc    cl,BYTE PTR [ebx]
  414224:	test   DWORD PTR [ecx],esp
  414226:	(bad)  
  414227:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414228:	and    BYTE PTR [edi],0x9d
  41422b:	pop    ebx
  41422c:	call   0x3120e869
  414231:	pop    edi
  414232:	sub    al,0x9
  414234:	(bad)  
  414236:	pop    eax
  414237:	add    BYTE PTR [ebx+0x10],ah
  41423a:	les    esp,FWORD PTR [ecx-0x6f4baae5]
  414240:	call   0x2b7786f8
  414245:	in     eax,dx
  414246:	or     dl,BYTE PTR [esi]
  414248:	loop   0x414230
  41424a:	iret   
  41424b:	jo     0x4141ee
  41424d:	or     edx,DWORD PTR [eax+0x41469136]
  414253:	fadd   DWORD PTR [esi+eiz*2-0x46d31488]
  41425a:	lds    esi,FWORD PTR [ecx+0x33]
  41425d:	dec    ebp
  41425e:	cwde   
  41425f:	call   0x1c565f54
  414264:	and    dl,ch
  414266:	ins    BYTE PTR es:[edi],dx
  414267:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414268:	hlt    
  414269:	or     eax,0x6fb7b35c
  41426e:	pusha  
  41426f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414270:	mov    edi,0x92b85100
  414275:	push   cs
  414276:	lock sub BYTE PTR [esi],ch
  414279:	sub    BYTE PTR [edx-0x48de3616],ah
  41427f:	add    eax,0x24354be2
  414284:	xlat   BYTE PTR ds:[ebx]
  414285:	xchg   edx,eax
  414286:	pop    edi
  414287:	jl     0x414293
  414289:	jp     0x41429d
  41428b:	xchg   edi,eax
  41428c:	ss repnz cmp eax,0x48f35369
  414293:	add    bh,dh
  414295:	and    BYTE PTR [edi+0x2665e5f8],ah
  41429b:	ret    
  41429c:	inc    eax
  41429d:	lods   eax,DWORD PTR ds:[esi]
  41429e:	les    edx,FWORD PTR [eax]
  4142a0:	inc    esi
  4142a1:	adc    BYTE PTR [esi-0x76],0xee
  4142a5:	mov    ch,0x64
  4142a7:	xor    BYTE PTR [edx+eax*4-0x56c4c8da],dl
  4142ae:	inc    edx
  4142af:	dec    ebx
  4142b0:	jecxz  0x414278
  4142b2:	push   cs
  4142b3:	dec    DWORD PTR [edi-0x1f]
  4142b6:	gs ja  0x414247
  4142b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142ba:	mov    ecx,0x488313a
  4142bf:	in     eax,dx
  4142c0:	repnz outs dx,DWORD PTR ds:[esi]
  4142c2:	and    esp,DWORD PTR [edi+0x55]
  4142c5:	dec    esp
  4142c6:	out    0x94,eax
  4142c8:	in     eax,dx
  4142c9:	xchg   ebp,eax
  4142ca:	mov    bh,0x92
  4142cc:	cmp    al,0x5f
  4142ce:	or     eax,0x60add2e4
  4142d3:	mov    eax,ds:0xf31b8bcf
  4142d8:	sbb    BYTE PTR [eax+esi*1],al
  4142db:	adc    BYTE PTR [ecx-0xe067d3f],dh
  4142e1:	xchg   ecx,eax
  4142e2:	push   0xfffffffa
  4142e4:	cwde   
  4142e5:	mov    al,0x60
  4142e7:	mov    bl,0xd8
  4142e9:	pop    ss
  4142ea:	data16 mov cl,0x87
  4142ed:	mov    BYTE PTR [edi],ah
  4142ef:	out    0x3b,eax
  4142f1:	fistp  DWORD PTR [edx]
  4142f3:	jmp    0xf858c58
  4142f8:	inc    eax
  4142f9:	pop    ss
  4142fa:	loop   0x4142a4
  4142fc:	inc    edi
  4142fd:	fs jo  0x4142bd
  414300:	push   ecx
  414301:	xchg   ecx,eax
  414302:	sub    eax,0xc168a7cf
  414307:	shr    BYTE PTR [ebp+0x79],1
  41430a:	sti    
  41430b:	out    0x76,eax
  41430d:	xor    ebx,edi
  41430f:	add    cl,BYTE PTR [ebp+0x69]
  414312:	jmp    0x414366
  414314:	cdq    
  414315:	xlat   BYTE PTR ds:[ebx]
  414316:	aad    0xf0
  414318:	mov    cl,0x28
  41431a:	jg     0x4142a5
  41431c:	mov    eax,0x38fb565d
  414321:	int    0xb9
  414323:	jg     0x4142ac
  414325:	inc    edi
  414326:	adc    BYTE PTR [eax],dh
  414328:	loopne 0x4142b6
  41432a:	ret    
  41432b:	int3   
  41432c:	pop    esi
  41432d:	xchg   edx,eax
  41432e:	icebp  
  41432f:	and    eax,DWORD PTR [edi-0x13e314dd]
  414335:	dec    ebp
  414336:	inc    ecx
  414337:	and    DWORD PTR [ecx+ebx*1-0x3a],edi
  41433b:	pushf  
  41433c:	das    
  41433d:	inc    esp
  41433e:	cmp    al,0x26
  414340:	add    eax,0x3a829fe3
  414345:	ds js  0x414373
  414348:	ja     0x414350
  41434a:	mov    esp,0x41e5d52b
  41434f:	xchg   esp,eax
  414350:	and    BYTE PTR [ebp-0x6e],ch
  414353:	daa    
  414354:	sub    al,0x5a
  414356:	and    BYTE PTR ds:0xc62c891f,dh
  41435c:	jne    0x414358
  41435e:	fs push ecx
  414360:	inc    esp
  414361:	push   ds
  414362:	int3   
  414363:	pop    edx
  414364:	jnp    0x41437e
  414366:	repnz mov BYTE PTR [esi+0x2c],dh
  41436a:	push   edi
  41436b:	and    eax,0x960fa5f3
  414370:	cmc    
  414371:	jmp    0x98964221
  414376:	nop
  414377:	pop    ecx
  414378:	fs mov al,0xcc
  41437b:	inc    esp
  41437c:	repnz mov cl,0xec
  41437f:	xchg   edi,eax
  414380:	es pop esi
  414382:	cwde   
  414383:	ss inc edx
  414385:	jecxz  0x4143f7
  414387:	into   
  414388:	jnp    0x414380
  41438a:	sub    edi,DWORD PTR [edx+0x70]
  41438d:	or     BYTE PTR [edx+0x45],al
  414390:	dec    ebp
  414391:	clc    
  414392:	ret    
  414393:	(bad)  
  414394:	(bad)  
  414395:	jns    0x4143fa
  414397:	clc    
  414398:	data16 jbe 0x4143ad
  41439b:	in     eax,dx
  41439c:	mov    esp,0x17566d78
  4143a1:	lock fbstp TBYTE PTR [ebx+0x6ef14f1e]
  4143a8:	das    
  4143a9:	(bad)  
  4143aa:	pop    ecx
  4143ab:	stos   BYTE PTR es:[edi],al
  4143ac:	int    0xef
  4143ae:	leave  
  4143af:	mov    ds:0xa0f763a8,eax
  4143b4:	push   esp
  4143b5:	loope  0x414352
  4143b7:	hlt    
  4143b8:	repnz dec ebx
  4143ba:	das    
  4143bb:	out    0xeb,eax
  4143bd:	push   ebp
  4143be:	mov    esp,0x22e0eab5
  4143c3:	(bad)  
  4143c4:	push   0xffffff8a
  4143c6:	push   ebx
  4143c7:	xor    edi,esi
  4143c9:	mov    ch,0x63
  4143cb:	stos   BYTE PTR es:[edi],al
  4143cc:	loop   0x4143a6
  4143ce:	dec    edx
  4143cf:	out    dx,al
  4143d0:	mov    dh,0x86
  4143d2:	dec    ebx
  4143d3:	xchg   edi,eax
  4143d4:	mov    bl,0x45
  4143d6:	out    0xdd,al
  4143d8:	sub    DWORD PTR ds:0x50763303,edi
  4143de:	push   ecx
  4143df:	pop    es
  4143e0:	(bad)  
  4143e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4143e2:	mov    bl,0x7c
  4143e4:	cmp    bh,BYTE PTR [edi]
  4143e6:	test   eax,esi
  4143e8:	jecxz  0x41442b
  4143ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4143eb:	pop    edx
  4143ec:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  4143ee:	fld    TBYTE PTR [ecx]
  4143f0:	add    DWORD PTR [esi+0xa],edx
  4143f3:	call   0x8ace:0xe3b69c08
  4143fa:	rcl    al,1
  4143fc:	pop    edi
  4143fd:	fdivr  QWORD PTR [esi+0x2]
  414400:	gs add al,0xfb
  414403:	es enter 0xa311,0x48
  414408:	cmp    ch,BYTE PTR [edi+edx*8+0x69]
  41440c:	into   
  41440d:	retf   0x108a
  414410:	or     BYTE PTR [edi-0xe],al
  414413:	jmp    0x5029472f
  414418:	jl     0x4143f9
  41441a:	mov    dh,0xf8
  41441c:	loope  0x4143e5
  41441e:	mov    eax,ds:0x29707a0e
  414423:	mov    ch,0x5a
  414425:	shl    BYTE PTR [edi-0x1],1
  414428:	fwait
  414429:	cmp    bh,ch
  41442b:	imul   BYTE PTR [edi]
  41442d:	ror    DWORD PTR [edi+0x7b],1
  414430:	pop    ebp
  414431:	xchg   esp,eax
  414432:	cmp    al,0x20
  414434:	stos   BYTE PTR es:[edi],al
  414435:	mov    eax,ds:0x258853e8
  41443a:	retf   
  41443b:	add    bl,BYTE PTR [ecx+0x16]
  41443e:	leave  
  41443f:	lahf   
  414440:	leave  
  414441:	xchg   ebp,eax
  414442:	xor    al,0x31
  414444:	loope  0x4144b4
  414446:	lea    ecx,[ebp+0x340a5f04]
  41444c:	or     eax,0x6844b5cf
  414451:	and    DWORD PTR [ebx],ecx
  414453:	test   BYTE PTR [ebx+eax*1+0x3ab6898b],bh
  41445a:	jbe    0x414495
  41445c:	or     al,0x6e
  41445e:	call   0xffb9:0xf401a622
  414465:	xchg   esp,eax
  414466:	sahf   
  414467:	jnp    0x414424
  414469:	mov    ?,ebx
  41446b:	adc    eax,0x32acb04c
  414470:	loopne 0x4144cf
  414472:	xchg   ebp,ebx
  414474:	rcl    BYTE PTR [ebx+eax*2+0x6ac3f4a9],0x49
  41447c:	pop    edx
  41447d:	(bad)  
  41447f:	jae    0x414434
  414481:	repnz test al,0x9b
  414484:	lahf   
  414485:	pop    ecx
  414486:	sbb    BYTE PTR ds:0x1bbfa5b2,al
  41448c:	cmp    DWORD PTR [ebx+0x3feba988],0x43a7d5ce
  414496:	mov    eax,ds:0x36cd00e0
  41449b:	xchg   esp,eax
  41449c:	pop    ds
  41449d:	adc    cl,0xa7
  4144a0:	(bad)  
  4144a1:	neg    DWORD PTR [ecx]
  4144a3:	pop    edi
  4144a4:	fimul  WORD PTR [ebx+0x5b38e28]
  4144aa:	push   0xfffffff7
  4144ac:	fild   DWORD PTR [edi]
  4144ae:	xchg   ebx,eax
  4144af:	add    DWORD PTR [ebp+0x14],esp
  4144b2:	jb     0x41445d
  4144b4:	cmp    eax,0xed7d8013
  4144b9:	pop    eax
  4144ba:	aad    0xc2
  4144bc:	sbb    dl,BYTE PTR [ecx-0x4c]
  4144bf:	imul   ebx,DWORD PTR [edi+0x184f6932],0xffffff88
  4144c6:	in     al,dx
  4144c7:	sbb    al,0x1a
  4144c9:	pop    ebp
  4144ca:	mov    BYTE PTR [ebp+0x70a0cbd2],al
  4144d0:	cs pop ds
  4144d2:	(bad)  
  4144d3:	add    cl,ah
  4144d5:	mov    edx,DWORD PTR [ebx-0x33]
  4144d8:	in     al,0x27
  4144da:	mov    bh,0x51
  4144dc:	fwait
  4144dd:	lahf   
  4144de:	mov    eax,0xd2dfed04
  4144e3:	ss mov dh,0x99
  4144e6:	xor    eax,0xe2d10185
  4144eb:	sbb    cl,BYTE PTR [esi+edi*2]
  4144ee:	or     al,cl
  4144f0:	xchg   edi,eax
  4144f1:	nop
  4144f2:	dec    esp
  4144f3:	add    BYTE PTR [ecx],cl
  4144f5:	add    BYTE PTR ds:0x8a1c5dba,al
  4144fb:	(bad)  
  4144fc:	in     eax,0xa6
  4144fe:	sub    eax,0xa5357fd0
  414503:	mov    edx,0x695130d6
  414508:	inc    esp
  414509:	cs cmp eax,0x4f5bb8f7
  41450f:	add    al,BYTE PTR [ecx-0x3]
  414512:	loop   0x414507
  414514:	sbb    al,BYTE PTR [eax-0x2864217f]
  41451a:	add    eax,0xe96033c6
  41451f:	mov    cl,0xaa
  414521:	test   eax,0x5a840e0
  414526:	outs   dx,DWORD PTR ds:[esi]
  414527:	lock inc ecx
  414529:	out    0x2d,al
  41452b:	sbb    cl,BYTE PTR [eax]
  41452d:	lahf   
  41452e:	dec    ecx
  41452f:	out    0x5,al
  414531:	pop    ebx
  414532:	sbb    al,0x20
  414534:	fdivr  QWORD PTR [edi]
  414536:	lea    esi,[ebp-0x665d4cd]
  41453c:	cmp    DWORD PTR [esi+0x4e9c2cec],esp
  414542:	add    eax,0x11658866
  414547:	pusha  
  414548:	in     al,0xc1
  41454a:	nop    DWORD PTR [eax+0x54]
  41454e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41454f:	mov    ch,0x49
  414551:	jmp    0xf8c4:0x8bc2ea71
  414558:	or     BYTE PTR [ebx-0x68510a56],cl
  41455e:	bound  esp,QWORD PTR [eax+0x4f0f50b0]
  414564:	daa    
  414565:	stc    
  414566:	and    dl,BYTE PTR [esi-0x18]
  414569:	add    ebx,DWORD PTR [ecx+0x7fec73e4]
  41456f:	loopne 0x414582
  414571:	adc    eax,DWORD PTR [eax+0x7]
  414574:	rcl    DWORD PTR [edi+eax*8+0x1edac9b1],0x15
  41457c:	out    0xea,al
  41457e:	inc    DWORD PTR [edi-0x4d]
  414581:	call   0xebd217ba
  414586:	div    DWORD PTR [edx+esi*8]
  414589:	pop    es
  41458a:	jp     0x414554
  41458c:	sbb    BYTE PTR [ebx+ecx*4+0x3f],ah
  414590:	aaa    
  414591:	inc    edx
  414592:	pop    esp
  414593:	mov    WORD PTR [edx],cs
  414595:	sbb    edi,DWORD PTR [ebx-0x54]
  414598:	into   
  414599:	rol    DWORD PTR [eax],0x39
  41459c:	mov    ecx,0xf1abf6af
  4145a1:	js     0x414534
  4145a3:	push   es
  4145a4:	dec    ebx
  4145a5:	iret   
  4145a6:	jne    0x41460f
  4145a8:	xor    cl,BYTE PTR [esi-0x13e21eb4]
  4145ae:	(bad)  
  4145af:	loopne 0x41460c
  4145b1:	adc    eax,0x3e915fba
  4145b6:	imul   edx,DWORD PTR [eax],0x41581703
  4145bc:	gs jbe 0x414609
  4145bf:	jg     0x41461a
  4145c1:	daa    
  4145c2:	mov    edx,0x329642dd
  4145c7:	fsub   DWORD PTR ds:0xd72a7eab
  4145cd:	add    al,0xe6
  4145cf:	int3   
  4145d0:	lgdtd  [ecx-0x7f]
  4145d4:	push   ss
  4145d5:	jne    0x4145e8
  4145d7:	sub    al,0xbb
  4145d9:	fst    QWORD PTR [eax+eax*4+0x18]
  4145dd:	call   DWORD PTR [edi]
  4145df:	popf   
  4145e0:	(bad)  
  4145e1:	mov    al,ds:0x3e35f5d0
  4145e6:	call   0xb565:0x566370b7
  4145ed:	cwde   
  4145ee:	lock out dx,al
  4145f0:	sbb    eax,0x7
  4145f3:	sbb    al,0xb6
  4145f5:	mov    ebx,0x5d54527a
  4145fa:	dec    edx
  4145fb:	add    edi,DWORD PTR ds:0xf33c33e5
  414601:	jne    0x414620
  414603:	retf   
  414604:	dec    esi
  414605:	sbb    al,cl
  414607:	push   ecx
  414608:	mov    al,0x1d
  41460a:	xor    edx,ebx
  41460c:	sub    eax,0xb2e7f3ab
  414611:	sub    BYTE PTR [ecx],ch
  414613:	xor    eax,0xb0d71d6
  414618:	xchg   esi,eax
  414619:	push   0x979dd5e
  41461e:	into   
  41461f:	mov    ebp,0x42ee62c1
  414624:	bound  edi,QWORD PTR [esi-0x3e]
  414627:	loop   0x4145af
  414629:	sub    eax,0xeeb8c4d7
  41462e:	repz sbb esp,DWORD PTR [ecx]
  414631:	mov    ds:0x7a45cc9d,eax
  414636:	imul   eax,DWORD PTR [edi+eiz*4+0x70],0xa4d9d35f
  41463e:	dec    BYTE PTR ds:0x554b0c39
  414644:	jo     0x414696
  414646:	loope  0x41469c
  414648:	mov    ah,dh
  41464a:	dec    esp
  41464b:	mov    bh,0x51
  41464d:	push   ecx
  41464e:	jle    0x414682
  414650:	leave  
  414651:	sub    esi,eax
  414653:	loop   0x414668
  414655:	mov    bl,BYTE PTR [ebx-0x5]
  414658:	push   ecx
  414659:	mov    DWORD PTR [ebp+0x2f],edx
  41465c:	xchg   esp,eax
  41465d:	mov    WORD PTR [edi+0x21],?
  414660:	jb     0x414651
  414662:	imul   ebp,DWORD PTR [esi-0x38],0xffffff92
  414666:	inc    edi
  414667:	scas   al,BYTE PTR es:[edi]
  414668:	mov    al,ds:0x581c56ea
  41466d:	jb     0x4146c1
  41466f:	out    0xc1,eax
  414671:	(bad)  
  414672:	scas   eax,DWORD PTR es:[edi]
  414673:	(bad)  
  414674:	pop    ecx
  414675:	add    al,0x34
  414677:	xchg   ecx,eax
  414678:	jmp    0x414642
  41467a:	jg     0x414686
  41467c:	fs mov ebx,0x1f8a4e27
  414682:	jne    0x414690
  414684:	lock std 
  414686:	stos   DWORD PTR es:[edi],eax
  414687:	ficom  WORD PTR [esi-0xe]
  41468a:	cmp    BYTE PTR [eax],ah
  41468c:	retf   
  41468d:	jle    0x4146c3
  41468f:	scas   eax,DWORD PTR es:[edi]
  414690:	add    BYTE PTR ds:0xfe8e36c0,ch
  414696:	mov    dh,0xd
  414698:	fisttp QWORD PTR [esi+eax*2+0x1ee643ec]
  41469f:	imul   BYTE PTR [eax+eax*4+0x34]
  4146a3:	clc    
  4146a4:	xor    BYTE PTR [esi],cl
  4146a6:	xlat   BYTE PTR ds:[ebx]
  4146a7:	fcmovb st,st(1)
  4146a9:	add    ah,BYTE PTR [ebx+esi*1]
  4146ac:	clc    
  4146ad:	call   0x9b21:0xd8f74d50
  4146b4:	mov    WORD PTR [esi+0x6cec357e],?
  4146ba:	dec    edx
  4146bb:	inc    esp
  4146bc:	and    BYTE PTR [eax],dh
  4146be:	int    0x11
  4146c0:	mov    WORD PTR [edi+0x3c],gs
  4146c3:	pop    esi
  4146c4:	loope  0x4146df
  4146c6:	ins    BYTE PTR es:[edi],dx
  4146c7:	mov    esi,0x6c71fe9d
  4146cc:	sbb    DWORD PTR [ecx],edi
  4146ce:	repz dec eax
  4146d0:	xor    DWORD PTR [edx],ebp
  4146d2:	ins    DWORD PTR es:[edi],dx
  4146d3:	mov    al,ds:0x708f4221
  4146d8:	mov    esi,eax
  4146da:	cmp    edx,DWORD PTR [ebp-0x36]
  4146dd:	lds    edi,FWORD PTR [ebp+0x71]
  4146e0:	neg    ah
  4146e2:	fdiv   st(5),st
  4146e4:	mov    DWORD PTR es:0xe563f1d6,eax
  4146eb:	add    eax,0x51e0944a
  4146f0:	push   ss
  4146f1:	push   ebx
  4146f2:	ja     0x414760
  4146f4:	retf   0x403d
  4146f7:	push   edi
  4146f8:	mov    edx,0x2247438a
  4146fd:	fild   WORD PTR [ebx]
  4146ff:	cmp    eax,ebx
  414701:	ins    DWORD PTR es:[edi],dx
  414702:	sub    al,0x4b
  414704:	sub    esp,ebx
  414706:	sbb    esi,edx
  414708:	dec    eax
  414709:	pop    ebp
  41470a:	div    esi
  41470c:	mov    ecx,0x7f8cb0d9
  414711:	ins    DWORD PTR es:[edi],dx
  414712:	mov    ecx,0xecb3f8e1
  414717:	mov    ah,0xd1
  414719:	les    ebp,FWORD PTR [esi-0x2]
  41471c:	dec    DWORD PTR [esi-0x5556f223]
  414722:	pop    eax
  414723:	mov    bl,BYTE PTR [esp+ecx*4]
  414726:	sahf   
  414727:	sub    al,0xe3
  414729:	xchg   ecx,eax
  41472a:	xor    al,0x21
  41472c:	and    al,0x5
  41472e:	mov    eax,0x3d3f716c
  414733:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414734:	ds inc edi
  414736:	mov    gs,WORD PTR [edx-0x3c242604]
  41473c:	mov    ah,BYTE PTR [edi]
  41473e:	dec    esp
  41473f:	jl     0x4147bf
  414741:	(bad)  
  414742:	jmp    0x2f9e8b0d
  414747:	(bad)  
  414748:	and    eax,edx
  41474a:	hlt    
  41474b:	nop
  41474c:	mov    bh,0x91
  41474e:	lahf   
  41474f:	dec    ebx
  414750:	test   BYTE PTR [esi-0x5a],0xb1
  414754:	gs aam 0x43
  414757:	sbb    eax,DWORD PTR [edi+0x3b]
  41475a:	nop
  41475b:	xor    al,0x41
  41475d:	inc    ecx
  41475e:	sbb    DWORD PTR [ebx+0x4ff8b0a6],esi
  414764:	jl     0x414726
  414766:	mov    al,0xca
  414768:	sub    eax,0x1497b08
  41476d:	fild   DWORD PTR [edi]
  41476f:	mov    ecx,0x34de59b7
  414774:	dec    ebx
  414775:	arpl   WORD PTR [ecx+0x33],dx
  414778:	ret    0xf011
  41477b:	repz ficomp WORD PTR [edx-0x1d]
  41477f:	leave  
  414780:	scas   eax,DWORD PTR es:[edi]
  414781:	mov    WORD PTR [edx+0x1f],es
  414784:	inc    edx
  414785:	inc    esp
  414786:	mov    bh,0x7
  414788:	xchg   BYTE PTR [edx+0x66],ah
  41478b:	adc    edx,DWORD PTR [ebx+0x73]
  41478e:	scas   eax,DWORD PTR es:[edi]
  41478f:	xchg   ecx,eax
  414790:	mov    eax,0xee808f3b
  414795:	nop
  414796:	adc    eax,DWORD PTR [ebp-0x7a9ce344]
  41479c:	sbb    esi,DWORD PTR [esi+0x66]
  41479f:	imul   DWORD PTR [edx]
  4147a1:	cmp    edi,DWORD PTR [ecx+0x36]
  4147a4:	call   0x838c:0xc3ccbaab
  4147ab:	loope  0x41480c
  4147ad:	ins    BYTE PTR es:[edi],dx
  4147ae:	mov    esp,0x5cbaa268
  4147b3:	push   0x23
  4147b5:	pop    edx
  4147b6:	shl    BYTE PTR [edx-0x66],cl
  4147b9:	inc    eax
  4147ba:	add    al,0x1a
  4147bc:	int    0x14
  4147be:	pop    esp
  4147bf:	shr    BYTE PTR [ebx+0x7],1
  4147c2:	loop   0x4147b4
  4147c4:	daa    
  4147c5:	lods   eax,DWORD PTR ds:[esi]
  4147c7:	call   0x32c2548
  4147cc:	mov    ecx,0xfc7ad22c
  4147d1:	test   al,0x48
  4147d3:	fisubr WORD PTR [ebp+eiz*4-0x2cf7d690]
  4147da:	mov    ecx,es
  4147dc:	lods   eax,DWORD PTR ds:[esi]
  4147dd:	retf   
  4147de:	jo     0x41480b
  4147e0:	inc    ebp
  4147e1:	xchg   edi,eax
  4147e2:	xor    eax,0x661a1c34
  4147e7:	mov    BYTE PTR [edx],al
  4147e9:	stos   DWORD PTR es:[edi],eax
  4147ea:	cs ss out dx,eax
  4147ed:	mov    al,0xe6
  4147ef:	call   0x1b95be61
  4147f4:	cdq    
  4147f5:	pop    eax
  4147f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4147f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4147f8:	out    dx,eax
  4147f9:	scas   al,BYTE PTR es:[edi]
  4147fa:	and    cl,BYTE PTR [ecx+0x2cd52677]
  414800:	cdq    
  414801:	sbb    al,0xb7
  414803:	dec    ecx
  414804:	inc    ebx
  414805:	cdq    
  414806:	xor    eax,0xfd0100bd
  41480b:	out    dx,eax
  41480c:	sub    dh,ah
  41480e:	retf   
  41480f:	xor    dh,BYTE PTR [eax]
  414811:	dec    ebx
  414812:	fisub  DWORD PTR [eax-0x2fa55c3f]
  414818:	test   eax,0x42b4bc4c
  41481d:	push   edx
  41481e:	pop    ecx
  41481f:	psllw  mm3,QWORD PTR [esi+0x5d]
  414823:	ret    
  414824:	clc    
  414825:	(bad)  
  414826:	gs fsubp st(0),st
  414829:	ficom  WORD PTR [ebx-0x42]
  41482c:	out    0x1a,al
  41482e:	mov    ds:0x29e91b0d,al
  414833:	in     eax,dx
  414834:	fisttp WORD PTR [ebx+eax*4]
  414837:	out    dx,eax
  414838:	inc    esp
  414839:	mov    ebp,0x27391e85
  41483e:	pop    ss
  41483f:	test   al,0x26
  414841:	mov    eax,DWORD PTR [edx+esi*8-0x1b7794dc]
  414848:	fdivr  DWORD PTR [edx]
  41484a:	loope  0x4148c8
  41484c:	mov    al,0x6e
  41484e:	adc    esi,esi
  414850:	xlat   BYTE PTR ds:[ebx]
  414851:	inc    ebp
  414852:	pushf  
  414853:	jno    0x414800
  414855:	xchg   ecx,eax
  414856:	pop    edi
  414857:	push   eax
  414858:	out    0x75,eax
  41485a:	inc    esp
  41485b:	std    
  41485c:	int3   
  41485d:	xchg   ebp,eax
  41485e:	pop    eax
  41485f:	cli    
  414860:	es daa 
  414862:	fisubr DWORD PTR [ebx]
  414864:	addr16 (bad) 
  414866:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414867:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414868:	mov    dh,0x89
  41486a:	std    
  41486b:	mov    BYTE PTR [esi+0x5ccf0c78],bh
  414871:	lods   eax,DWORD PTR ds:[esi]
  414872:	mov    dh,0x5f
  414874:	xor    DWORD PTR [ebp+0x3f31e4f1],eax
  41487a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41487b:	sub    ch,bl
  41487d:	inc    ebx
  41487e:	mov    ds:0x543c47b5,eax
  414883:	pop    ss
  414884:	inc    edi
  414885:	das    
  414886:	jecxz  0x414870
  414888:	pop    eax
  414889:	popf   
  41488a:	jnp    0x414816
  41488c:	daa    
  41488d:	push   ebp
  41488e:	gs cmp al,0xbd
  414891:	jns    0x4148bd
  414893:	shl    DWORD PTR [ecx],1
  414895:	jns    0x4148a7
  414897:	or     eax,0x9c3e33ce
  41489c:	inc    esi
  41489d:	outs   dx,BYTE PTR fs:[esi]
  41489f:	mov    ah,0x70
  4148a1:	loope  0x4148a4
  4148a3:	jo     0x41491b
  4148a5:	fsubr  st(0),st
  4148a7:	or     edx,DWORD PTR [edx+0x2c]
  4148aa:	xor    ch,dl
  4148ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4148ad:	inc    ebp
  4148ae:	call   0x947eb5f
  4148b3:	mov    esi,0xfe0d15e6
  4148b8:	inc    esp
  4148b9:	pop    esp
  4148ba:	scas   al,BYTE PTR es:[edi]
  4148bb:	pop    ds
  4148bc:	sub    al,0x4c
  4148be:	sub    DWORD PTR fs:[eax+0x75],edi
  4148c2:	and    bl,dl
  4148c4:	dec    edi
  4148c5:	or     BYTE PTR [esi+0x5d],0xb9
  4148c9:	lahf   
  4148ca:	call   0x6f4ddf4a
  4148cf:	cld    
  4148d0:	das    
  4148d1:	xor    ah,al
  4148d3:	popa   
  4148d4:	js     0x414915
  4148d6:	mov    dl,0xf5
  4148d8:	sbb    al,0xf4
  4148da:	mov    edx,gs
  4148dc:	jg     0x4148e7
  4148de:	nop
  4148df:	imul   ebx,DWORD PTR [edx-0x69d50daa],0xcde0358
  4148e9:	inc    ebp
  4148ea:	push   ss
  4148eb:	xchg   edx,eax
  4148ec:	test   si,dx
  4148ef:	int3   
  4148f0:	jbe    0x41487c
  4148f2:	add    eax,0xe2948c4d
  4148f7:	out    dx,al
  4148f8:	xor    DWORD PTR [esi+0x25a13e28],ebp
  4148fe:	gs (bad) 
  414900:	call   0x6b9db9c3
  414905:	(bad)  
  414906:	out    dx,al
  414907:	xchg   edx,eax
  414908:	mov    edx,0x53f21197
  41490d:	or     eax,0xf90904be
  414912:	and    ah,dl
  414914:	gs mov al,0xb2
  414917:	lock inc eax
  414919:	iret   
  41491a:	sbb    al,0x69
  41491c:	in     al,0x1d
  41491e:	xchg   esi,eax
  41491f:	mov    cl,0x90
  414921:	mov    esp,0x44d67dcf
  414926:	call   0x887375dd
  41492b:	int3   
  41492c:	loopne 0x4148e8
  41492e:	mov    esp,0x363dc85c
  414933:	mov    esi,DWORD PTR [edx-0x5b0fd127]
  414939:	pop    ebx
  41493a:	mov    ds:0x62cd6d0c,eax
  41493f:	xor    DWORD PTR [ebx-0x1a6d12d3],0x28
  414946:	push   cs
  414947:	neg    BYTE PTR [edx+0x54ba8f66]
  41494d:	imul   al
  41494f:	in     al,dx
  414950:	xlat   BYTE PTR ds:[ebx]
  414951:	mov    ecx,0x8dc5e5ed
  414956:	ret    
  414957:	pop    ecx
  414958:	adc    eax,0x4363ff36
  41495d:	test   eax,0x3d2c5319
  414962:	push   ds
  414963:	add    eax,0x36f10153
  414968:	pop    edx
  414969:	mov    dl,0x72
  41496b:	icebp  
  41496c:	add    al,0xbe
  41496e:	inc    ecx
  41496f:	or     DWORD PTR [esi+eax*4-0x2a],ecx
  414973:	rcl    bh,cl
  414975:	adc    eax,0x1603477d
  41497a:	sub    al,0x41
  41497c:	xor    ebx,DWORD PTR [ebp-0x7]
  41497f:	mov    ds:0xdb5ebe12,eax
  414984:	jae    0x414969
  414986:	movnti DWORD PTR [ecx],edi
  414989:	sbb    al,0x88
  41498b:	(bad)  
  41498c:	pop    ds
  41498d:	mov    cl,BYTE PTR [edx]
  41498f:	and    BYTE PTR [ebp-0x525e6985],cl
  414995:	sub    eax,0x4713421a
  41499a:	aaa    
  41499b:	push   eax
  41499c:	(bad)  
  41499d:	mov    dl,0xdc
  41499f:	sbb    eax,DWORD PTR [esi]
  4149a1:	arpl   ax,ax
  4149a3:	xor    DWORD PTR [esi],ebx
  4149a5:	into   
  4149a6:	inc    ecx
  4149a7:	out    dx,eax
  4149a8:	rcl    DWORD PTR [edi-0x40613bc3],cl
  4149ae:	jle    0x414962
  4149b0:	pop    es
  4149b1:	jmp    0xb19c9230
  4149b6:	xor    esi,edx
  4149b8:	pop    ebx
  4149b9:	mov    ecx,0xe4a60c5f
  4149be:	(bad)  
  4149bf:	mov    ah,0x57
  4149c1:	cs adc eax,0x277fabc0
  4149c7:	sub    DWORD PTR [eax+0xa],eax
  4149ca:	dec    esp
  4149cb:	sbb    al,0x9a
  4149cd:	inc    eax
  4149ce:	and    eax,0x4918afee
  4149d3:	pop    ebp
  4149d4:	mov    bl,0xff
  4149d6:	mov    bl,ch
  4149d8:	shl    DWORD PTR [edi],0xc0
  4149db:	mov    bh,BYTE PTR [edi]
  4149dd:	xchg   edx,eax
  4149de:	jmp    0x4149cd
  4149e0:	mov    cs,WORD PTR [eax+0x5d23758d]
  4149e6:	pop    ebx
  4149e7:	scas   al,BYTE PTR es:[edi]
  4149e8:	lods   eax,DWORD PTR ds:[esi]
  4149e9:	push   esi
  4149ea:	xor    eax,0xbb8286ec
  4149ef:	iret   
  4149f0:	into   
  4149f1:	lds    ebx,FWORD PTR [edi]
  4149f3:	mov    eax,0x14a23f8c
  4149f8:	pop    edi
  4149f9:	aad    0x25
  4149fb:	pop    ebp
  4149fc:	push   ds
  4149fd:	fs popa 
  4149ff:	pop    ebx
  414a00:	aad    0x8e
  414a02:	mov    ebp,0xe5a4e23f
  414a07:	ds cmp al,0xfd
  414a0a:	repz mov es,esp
  414a0d:	mov    dh,0xa1
  414a0f:	adc    ebp,ebx
  414a11:	loopne 0x4149f0
  414a13:	lock addr16 and al,0xf6
  414a17:	mov    ah,0xe8
  414a19:	iret   
  414a1a:	jmp    FWORD PTR [ebp-0x4c]
  414a1d:	sti    
  414a1e:	je     0x414a12
  414a20:	pop    esp
  414a21:	sbb    ch,bh
  414a23:	inc    ebx
  414a24:	sub    ecx,edx
  414a26:	push   esp
  414a27:	mov    bh,0x70
  414a29:	push   DWORD PTR [ebp-0x5324ecba]
  414a2f:	call   0x1511:0xc63e9873
  414a36:	std    
  414a37:	retf   0x1819
  414a3a:	mov    esi,0xa3856453
  414a3f:	ja     0x414abe
  414a41:	(bad)  [esi-0x655e18d]
  414a47:	inc    ecx
  414a48:	mov    eax,ds:0x776a065
  414a4d:	mov    al,ds:0x86830248
  414a52:	mov    bl,0x47
  414a54:	or     esp,DWORD PTR [ebp+0x51475c77]
  414a5a:	ficom  WORD PTR [ebx+0x28209851]
  414a60:	sbb    eax,0x7290d0ad
  414a66:	adc    BYTE PTR [eax-0x6bc2e029],al
  414a6c:	data16 into 
  414a6e:	xor    eax,0x15113ca3
  414a73:	sbb    eax,0x101db566
  414a78:	je     0x414aea
  414a7a:	bound  edx,QWORD PTR [ebx-0x1b]
  414a7d:	les    esp,FWORD PTR [edi]
  414a7f:	push   0x7cd4a1e8
  414a84:	fs out 0x1f,eax
  414a87:	pop    eax
  414a88:	(bad)  
  414a89:	test   BYTE PTR [edi+0x7952ad3e],0x6c
  414a90:	adc    ecx,ecx
  414a92:	out    0x47,eax
  414a94:	cmp    eax,ebp
  414a96:	es ss ins BYTE PTR es:[edi],dx
  414a99:	jbe    0x414a75
  414a9b:	sbb    BYTE PTR [esi],ch
  414a9d:	mov    ds:0x3bf03bd,al
  414aa2:	xchg   BYTE PTR [ecx+edx*8-0x44],dl
  414aa6:	jnp    0x414ad1
  414aa8:	call   0x3ad54616
  414aad:	dec    esi
  414aae:	mov    WORD PTR [eax-0x5c71532f],?
  414ab4:	adc    al,0x5d
  414ab6:	cmc    
  414ab7:	push   ss
  414ab8:	cmp    al,0x7d
  414aba:	ins    DWORD PTR es:[edi],dx
  414abb:	xchg   esi,eax
  414abc:	mov    ebx,0x6022183
  414ac1:	or     al,0xc5
  414ac3:	shl    ah,0x19
  414ac6:	adc    ecx,edi
  414ac8:	repz leave 
  414aca:	mov    ch,0x71
  414acc:	std    
  414acd:	dec    ebp
  414ace:	fsub   DWORD PTR [eax+0x2a]
  414ad1:	xor    eax,0xdcedd814
  414ad6:	int3   
  414ad7:	or     ebp,edx
  414ad9:	push   eax
  414ada:	repnz shl BYTE PTR [esi+0x17],cl
  414ade:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414adf:	mov    al,0xed
  414ae1:	sbb    DWORD PTR [ebx-0x159f4898],0xf260f37a
  414aeb:	push   ebx
  414aec:	or     eax,0x3cfad225
  414af1:	fild   WORD PTR [esi+ebp*4]
  414af4:	mov    dh,0x80
  414af6:	shl    BYTE PTR [edx-0x7a42b85c],0xa4
  414afd:	sub    al,0xae
  414aff:	rol    DWORD PTR [ebp+0x6d],1
  414b02:	dec    ecx
  414b03:	and    ecx,DWORD PTR [esp+ebp*4-0x3b]
  414b07:	or     ah,BYTE PTR [edx+0x1a3d3c83]
  414b0d:	call   0xe65f:0x80fb3d98
  414b14:	push   ebx
  414b15:	and    al,0xc5
  414b17:	mov    ch,0x59
  414b19:	dec    esp
  414b1a:	cmp    BYTE PTR [ebp+0x11],ch
  414b1d:	fwait
  414b1e:	out    0x72,al
  414b20:	imul   edx,DWORD PTR [edx+0x3f5414aa],0xcdd80009
  414b2a:	dec    edx
  414b2b:	(bad)  
  414b2c:	hlt    
  414b2d:	test   eax,0x9e6e3424
  414b32:	int3   
  414b33:	or     bl,BYTE PTR [ecx+eax*2-0x2f163fae]
  414b3a:	mov    bh,0x95
  414b3c:	xchg   DWORD PTR [esi+0x19712dd4],edx
  414b42:	push   esi
  414b43:	push   es
  414b44:	xor    eax,0x742c00d1
  414b49:	and    DWORD PTR [eax+0x40],eax
  414b4c:	ja     0x414b67
  414b4e:	push   edi
  414b4f:	mov    DWORD PTR ds:0x163e9bbb,esp
  414b55:	psrlw  mm3,QWORD PTR [esi]
  414b58:	mov    esp,0x53d02efc
  414b5d:	rcl    DWORD PTR [ebx+ecx*8+0x21],1
  414b61:	out    dx,eax
  414b62:	mov    ch,0x40
  414b64:	and    dl,BYTE PTR [esi+0x73e13ffc]
  414b6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b6b:	push   esp
  414b6c:	adc    ah,cl
  414b6e:	gs jns 0x414b21
  414b71:	sti    
  414b72:	sub    ah,BYTE PTR [edx]
  414b74:	iret   
  414b75:	xor    eax,0xb4dce27a
  414b7a:	das    
  414b7b:	out    dx,eax
  414b7c:	cdq    
  414b7d:	mov    ebx,esp
  414b7f:	pop    ebx
  414b80:	or     al,0x48
  414b82:	and    BYTE PTR [ebx-0x72],0x97
  414b86:	retf   
  414b87:	scas   al,BYTE PTR es:[edi]
  414b88:	fisubr DWORD PTR [edi+0xd]
  414b8b:	out    dx,eax
  414b8c:	jmp    0x414b13
  414b8e:	xchg   DWORD PTR ds:0x7cd2c0c5,ebx
  414b94:	cmc    
  414b95:	mov    esi,0x44dbc7f9
  414b9a:	adc    bh,BYTE PTR [edx+0x5f0ae695]
  414ba0:	es jnp 0x414bfa
  414ba3:	das    
  414ba4:	enter  0xa70a,0x3e
  414ba8:	mov    ebx,DWORD PTR [ebx]
  414baa:	dec    ebx
  414bab:	lea    esp,[ecx+0x2a4cbcf2]
  414bb1:	xchg   esi,eax
  414bb2:	mov    esp,0x1989a51c
  414bb7:	pop    edi
  414bb8:	cld    
  414bb9:	and    ecx,edx
  414bbb:	jno    0x414c2e
  414bbd:	sbb    ch,BYTE PTR [ecx]
  414bbf:	test   eax,0xd801e612
  414bc4:	mov    eax,0x76c94cb6
  414bc9:	adc    eax,0x827981ea
  414bce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414bcf:	dec    ecx
  414bd0:	xchg   DWORD PTR [ebx+ebx*4-0x7fc368b1],ebx
  414bd7:	sbb    eax,0x2deba305
  414bdc:	js     0x414c1f
  414bde:	cs push eax
  414be0:	(bad)  
  414be1:	cmp    edi,DWORD PTR [edx-0x7e]
  414be4:	jns    0x414bcc
  414be6:	inc    edi
  414be7:	adc    BYTE PTR [edx+0x59b2a0cd],ah
  414bed:	dec    edx
  414bee:	addr16 and ecx,esi
  414bf1:	into   
  414bf2:	push   esp
  414bf3:	push   0x38
  414bf5:	push   edx
  414bf6:	iret   
  414bf7:	mov    eax,ds:0x73232eff
  414bfc:	push   esi
  414bfd:	loop   0x414ba4
  414bff:	mov    ecx,DWORD PTR [esi-0x598a14c]
  414c05:	push   ds
  414c06:	test   eax,0xa37425d0
  414c0b:	mov    BYTE PTR [eax+edi*1+0x48677a26],bh
  414c12:	push   0xffffffea
  414c14:	hlt    
  414c15:	inc    ecx
  414c16:	push   edx
  414c17:	cld    
  414c18:	xchg   edx,eax
  414c19:	gs aas 
  414c1b:	jge    0x414c21
  414c1d:	(bad)  
  414c1e:	mov    dl,0xd3
  414c20:	lods   eax,DWORD PTR ds:[esi]
  414c21:	in     al,dx
  414c22:	rcl    ebx,0x83
  414c25:	dec    esi
  414c26:	pop    esp
  414c27:	mov    ebx,0xda73ae7d
  414c2c:	ret    0x96a8
  414c2f:	and    al,0xb1
  414c31:	idiv   BYTE PTR [esi+edx*2-0x45736a28]
  414c38:	push   ebx
  414c39:	sbb    edx,DWORD PTR ds:0x7e9f3b10
  414c3f:	imul   ebx,DWORD PTR [ebp-0x7224c2ec],0xffffffec
  414c46:	sub    ah,ah
  414c48:	lods   eax,DWORD PTR ds:[esi]
  414c49:	je     0x414c62
  414c4b:	jnp    0x414c4a
  414c4d:	not    BYTE PTR [edx*2-0x76d0c277]
  414c54:	lods   eax,DWORD PTR ds:[esi]
  414c55:	or     ebp,0x66
  414c58:	cli    
  414c59:	fist   DWORD PTR [ebp-0x71ea7874]
  414c5f:	adc    BYTE PTR [eax],ch
  414c61:	mov    eax,es:0x22dec9f7
  414c67:	dec    esp
  414c68:	sti    
  414c69:	push   ebp
  414c6a:	or     bl,ch
  414c6c:	mov    dl,0x76
  414c6e:	jle    0x414c72
  414c70:	lods   al,BYTE PTR ds:[esi]
  414c71:	fist   DWORD PTR ds:0xc295a25d
  414c77:	xchg   esp,eax
  414c78:	push   es
  414c79:	pop    ecx
  414c7a:	cmp    esi,eax
  414c7c:	rcr    DWORD PTR [eax+0xd203731],cl
  414c82:	repz pop ebp
  414c84:	push   esi
  414c85:	gs xchg ecx,eax
  414c87:	xchg   edx,eax
  414c88:	in     eax,0xf4
  414c8a:	fcmovnb st,st(0)
  414c8c:	je     0x414c94
  414c8e:	js     0x414d06
  414c90:	ins    DWORD PTR es:[edi],dx
  414c91:	pop    ebx
  414c92:	scas   eax,DWORD PTR es:[edi]
  414c93:	jae    0x414d05
  414c95:	jae    0x414c2b
  414c97:	imul   eax,eax,0xfffffff6
  414c9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c9b:	inc    eax
  414c9c:	mov    DWORD PTR [eax],ebx
  414c9e:	les    eax,FWORD PTR [eax-0x3c]
  414ca1:	icebp  
  414ca2:	fcomp  QWORD PTR [eax+0x737f8ddd]
  414ca8:	fldenv [edx+0x20097f7c]
  414cae:	(bad)  
  414caf:	jns    0x414cca
  414cb1:	jae    0x414c45
  414cb3:	in     al,0x1a
  414cb5:	stos   DWORD PTR es:[edi],eax
  414cb6:	shl    DWORD PTR [esi],1
  414cb8:	ss stos WORD PTR es:[edi],ax
  414cbb:	jmp    0xb43aa588
  414cc0:	mov    bl,0x34
  414cc2:	retf   0x1e35
  414cc5:	pop    edi
  414cc6:	cmc    
  414cc7:	mov    esp,0x5114aaeb
  414ccc:	ret    0x2993
  414ccf:	nop
  414cd0:	inc    eax
  414cd1:	(bad)  [ebx-0x53]
  414cd4:	cs popa 
  414cd6:	jg     0x414c8d
  414cd8:	mov    edx,0xe678654c
  414cdd:	cmp    esp,DWORD PTR [ecx-0x66]
  414ce0:	(bad)  
  414ce1:	xor    eax,0xf100cc52
  414ce6:	in     al,dx
  414ce7:	mov    bl,0x50
  414ce9:	dec    esi
  414cea:	or     eax,0x21f6774f
  414cef:	pop    esp
  414cf0:	push   eax
  414cf1:	sub    ah,BYTE PTR [esi+0x15527c8]
  414cf7:	mov    ds:0xfa79e042,eax
  414cfc:	push   cs
  414cfd:	mov    ss,edx
  414cff:	ja     0x414cfb
  414d01:	shr    esp,cl
  414d03:	in     al,0x51
  414d05:	mov    cs,WORD PTR [ecx-0x74]
  414d08:	mov    al,0x85
  414d0a:	js     0xc48dbdbe
  414d10:	xor    al,0xf6
  414d12:	cmp    BYTE PTR [ecx],al
  414d14:	adc    eax,0xafdb86a4
  414d19:	cmp    al,0xeb
  414d1b:	icebp  
  414d1c:	test   ebp,0xb6fafbab
  414d22:	push   ebx
  414d23:	fiadd  DWORD PTR [eax-0x7d]
  414d26:	jmp    0x89b15f08
  414d2b:	idiv   DWORD PTR [edi+0x77fd4b6]
  414d31:	ficom  WORD PTR [eax-0x45]
  414d34:	mov    dl,0xd5
  414d36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d37:	ja     0x414cf6
  414d39:	pusha  
  414d3a:	mov    DWORD PTR [ebx+edi*4+0x34c62aea],ebp
  414d41:	retf   
  414d42:	sub    eax,0x6ee98c94
  414d47:	mov    al,0xa
  414d49:	cli    
  414d4a:	push   esp
  414d4b:	repnz mov ebx,0x57b0c1fa
  414d51:	pop    ds
  414d52:	icebp  
  414d53:	out    dx,eax
  414d54:	hlt    
  414d55:	call   DWORD PTR [eax-0x6a]
  414d58:	dec    edi
  414d59:	mov    ?,WORD PTR [eax-0x4b0f05a]
  414d5f:	jo     0x414d8d
  414d61:	pop    ebp
  414d62:	repnz mov WORD PTR [edx+0x78],es
  414d66:	cmp    DWORD PTR [ecx],eax
  414d68:	sub    ebp,edi
  414d6a:	jae    0x414d15
  414d6c:	xor    DWORD PTR [ecx+0x71a83ff6],ecx
  414d72:	add    eax,0xd35b085d
  414d77:	inc    edx
  414d78:	pop    es
  414d79:	sar    DWORD PTR [ebx+0x7fe89147],0x1b
  414d80:	std    
  414d81:	shl    BYTE PTR ss:[ebp+0x76182560],0x9c
  414d89:	sub    ch,BYTE PTR [ebx+0x1b4ae6b1]
  414d8f:	pop    esp
  414d90:	dec    esi
  414d91:	pop    ss
  414d92:	dec    esp
  414d93:	dec    edx
  414d94:	cli    
  414d95:	nop
  414d96:	sbb    eax,DWORD PTR [edx]
  414d98:	fild   WORD PTR [eax]
  414d9a:	ror    dh,1
  414d9c:	xlat   BYTE PTR ds:[ebx]
  414d9d:	not    dl
  414d9f:	enter  0xfcc7,0x4f
  414da3:	push   DWORD PTR [ecx-0x38]
  414da6:	cmc    
  414da7:	cld    
  414da8:	pop    ds
  414da9:	xchg   ecx,eax
  414daa:	(bad)  
  414dab:	loopne 0x414d8d
  414dad:	push   DWORD PTR [ebx-0x71]
  414db0:	xchg   ecx,edi
  414db2:	cwde   
  414db3:	retf   0x8e9d
  414db6:	dec    edx
  414db7:	sub    ebp,eax
  414db9:	and    DWORD PTR [esi+0x60],esp
  414dbc:	je     0x414d9b
  414dbe:	lock or dl,BYTE PTR [ebp+0x797ecb3a]
  414dc5:	sahf   
  414dc6:	mov    dl,0x43
  414dc8:	push   eax
  414dc9:	mov    al,BYTE PTR [edx]
  414dcb:	jmp    0xa6827bd3
  414dd0:	xor    esi,edi
  414dd2:	test   eax,ebp
  414dd4:	jle    0x414d7b
  414dd6:	xor    al,0xe7
  414dd8:	push   0xdfec4979
  414ddd:	dec    edi
  414dde:	jge    0x414e5e
  414de0:	test   al,0x8f
  414de2:	outs   dx,BYTE PTR ds:[esi]
  414de3:	mov    cl,0x86
  414de5:	mov    bl,0x55
  414de7:	mov    BYTE PTR [ebp-0x3f],0x5c
  414deb:	xor    DWORD PTR [edi-0x24],0xd988f88
  414df2:	pusha  
  414df3:	cmp    DWORD PTR [esi-0x6f8309a],ebx
  414df9:	add    BYTE PTR fs:[edx-0xf12aa84],dl
  414e00:	mov    ds,ebp
  414e02:	jl     0x414e70
  414e04:	jp     0x414e31
  414e06:	pop    esp
  414e07:	inc    esp
  414e08:	dec    ebx
  414e09:	adc    al,0x25
  414e0b:	imul   BYTE PTR [ebx+0x6aaba5f6]
  414e11:	imul   DWORD PTR [ecx-0x4104b8be]
  414e17:	in     eax,dx
  414e18:	(bad)  
  414e19:	xor    ch,al
  414e1b:	ror    DWORD PTR [edi-0x5e],0x3f
  414e1f:	ds mov ebp,0x445e73c
  414e25:	xchg   esi,eax
  414e26:	jp     0x414ea6
  414e28:	je     0x414e4d
  414e2a:	mov    esp,0x3ec7be24
  414e2f:	(bad)  
  414e30:	fiadd  DWORD PTR [esp+esi*8+0x73]
  414e34:	xlat   BYTE PTR ds:[ebx]
  414e35:	add    dh,BYTE PTR [ebx+0x5e]
  414e38:	and    al,0x29
  414e3a:	jge    0x414e29
  414e3c:	fwait
  414e3d:	int3   
  414e3e:	mov    gs,WORD PTR [edx]
  414e40:	ret    
  414e41:	sub    ebx,ecx
  414e43:	in     eax,0x54
  414e45:	data16 (bad) 
  414e47:	jp     0x414e69
  414e49:	inc    esi
  414e4a:	add    ecx,eax
  414e4c:	mov    ebp,0x22867627
  414e51:	xor    cl,BYTE PTR [ebx-0x4e]
  414e54:	mov    ecx,ecx
  414e56:	(bad)  
  414e57:	in     eax,0xcf
  414e59:	dec    ecx
  414e5a:	push   eax
  414e5b:	out    dx,eax
  414e5c:	add    BYTE PTR [edi+esi*2-0x735f075b],0x87
  414e64:	js     0x414eac
  414e66:	ins    BYTE PTR es:[edi],dx
  414e67:	adc    eax,0x3dc7e7f0
  414e6c:	jbe    0x414e5a
  414e6e:	push   0xbd9d6b45
  414e73:	test   BYTE PTR [eax-0x38e8c44e],0xdb
  414e7a:	or     edi,edx
  414e7c:	or     al,0xcd
  414e7e:	xor    eax,0xe211c284
  414e83:	jle    0x414e7a
  414e85:	push   ecx
  414e86:	retf   0x867a
  414e89:	sbb    bh,bl
  414e8b:	jge    0x414ead
  414e8d:	xor    al,0xc4
  414e8f:	push   edi
  414e90:	(bad)  
  414e91:	ja     0x414e40
  414e93:	(bad)  
  414e95:	and    al,0xf
  414e97:	mov    es,WORD PTR [edx+edi*2]
  414e9a:	adc    eax,esi
  414e9c:	inc    edi
  414e9d:	test   al,0xb3
  414e9f:	into   
  414ea0:	ret    
  414ea1:	and    eax,0x3812a4cd
  414ea6:	xor    DWORD PTR [ecx-0x445143cb],0x7d
  414ead:	and    DWORD PTR [eax-0x53],0x25
  414eb1:	sub    ebp,DWORD PTR [edi-0x7d8b2900]
  414eb7:	mov    eax,0x681fec8
  414ebc:	jae    0x414ea7
  414ebe:	adc    eax,0xeca258a8
  414ec3:	xor    al,0x98
  414ec5:	mov    cl,0xac
  414ec7:	inc    eax
  414ec8:	fs test al,0xd6
  414ecb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ecc:	mov    ch,0xb6
  414ece:	jg     0x414ea3
  414ed0:	sub    al,0xa1
  414ed2:	retf   
  414ed3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ed4:	mov    bl,0x4e
  414ed6:	add    bl,dh
  414ed8:	push   es
  414ed9:	out    0x83,eax
  414edb:	(bad)  
  414edc:	std    
  414edd:	sbb    BYTE PTR ds:0x8942c0d8,0x98
  414ee4:	addr16 daa 
  414ee6:	dec    ecx
  414ee7:	div    DWORD PTR [eax+0x59]
  414eea:	and    esi,esp
  414eec:	(bad)  
  414eee:	lds    edx,FWORD PTR [edx+0x63]
  414ef1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ef2:	or     BYTE PTR [edi],0x6f
  414ef5:	inc    eax
  414ef6:	mov    esp,0x7b03caf6
  414efb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414efc:	(bad)  [edi]
  414efe:	adc    ecx,ebx
  414f00:	in     eax,dx
  414f01:	mov    eax,DWORD PTR [eax+0x20]
  414f04:	mov    al,ds:0x161679dd
  414f09:	mov    ebp,0x5c56d9df
  414f0e:	mov    ah,0xb7
  414f10:	in     eax,0x15
  414f12:	pop    eax
  414f13:	mov    ch,0xe9
  414f15:	les    esp,FWORD PTR [edi+0x5e]
  414f18:	cmp    DWORD PTR [eax-0x398bb39],eax
  414f1e:	rcr    esi,0xa1
  414f21:	dec    bl
  414f23:	inc    esp
  414f24:	cwde   
  414f25:	test   eax,0xc3769590
  414f2a:	add    dh,BYTE PTR [ecx-0xc]
  414f2d:	fldenv [esi+edi*8-0x374d9dbb]
  414f34:	loopne 0x414f0b
  414f36:	daa    
  414f37:	add    eax,0xe8045202
  414f3c:	(bad)
  414f3f:	out    0x3b,al
  414f41:	mov    BYTE PTR [ecx-0xf084aec],bl
  414f47:	retf   0x4dd2
  414f4a:	push   0x2a
  414f4c:	mov    edx,0xa7de4a29
  414f51:	ja     0x414f84
  414f53:	ror    BYTE PTR [esi],0xaf
  414f56:	sbb    esp,esi
  414f58:	pop    edi
  414f59:	nop
  414f5a:	call   0x36836749
  414f5f:	push   cs
  414f60:	mov    al,0x5d
  414f62:	mov    ch,0x52
  414f64:	pop    esi
  414f65:	mov    fs,WORD PTR ds:0x251bb8bf
  414f6b:	rcr    DWORD PTR [edx-0x63e27fc3],0x1e
  414f72:	add    al,0x57
  414f74:	fwait
  414f75:	lods   al,BYTE PTR ds:[esi]
  414f76:	and    bl,ch
  414f78:	mov    al,BYTE PTR [ebp-0x43]
  414f7b:	mov    dl,BYTE PTR [esi-0x3c84092e]
  414f81:	das    
  414f82:	(bad)  
  414f84:	jnp    0x414fc9
  414f86:	pop    ebx
  414f87:	mov    ds:0x1437ed94,eax
  414f8c:	jecxz  0x414fd7
  414f8e:	push   esi
  414f8f:	shl    BYTE PTR [edi+0x64dcf286],0xe3
  414f96:	add    DWORD PTR [eax-0x419615bd],ebp
  414f9c:	xchg   edi,eax
  414f9d:	dec    eax
  414f9e:	add    al,0x2a
  414fa0:	adc    al,0x85
  414fa2:	lods   al,BYTE PTR ds:[esi]
  414fa3:	xchg   edx,eax
  414fa4:	cwde   
  414fa5:	or     al,0x1f
  414fa7:	xchg   edi,eax
  414fa8:	not    al
  414faa:	inc    eax
  414fab:	lea    ecx,[eax+0x5f385ca0]
  414fb1:	aad    0xd4
  414fb3:	sar    DWORD PTR [esi+0x61e08221],0x3e
  414fba:	fadd   st(6),st
  414fbc:	fwait
  414fbd:	mov    eax,ds:0x1e41c94f
  414fc2:	imul   esi,DWORD PTR [edx+0x2d7ce1fa],0x35
  414fc9:	jne    0x414ffe
  414fcb:	jne    0x415003
  414fcd:	enter  0x3fbf,0x1
  414fd1:	stc    
  414fd2:	push   edx
  414fd3:	popa   
  414fd4:	push   cs
  414fd5:	jnp    0x414ff4
  414fd7:	push   cs
  414fd8:	(bad)  
  414fd9:	mov    ch,0xe7
  414fdb:	cmp    BYTE PTR [esi+0x63],bl
  414fde:	xor    BYTE PTR [ebx+esi*8-0x205d009f],ch
  414fe5:	out    dx,al
  414fe6:	enter  0x20a1,0x79
  414fea:	add    al,ch
  414fec:	add    dl,dh
  414fee:	add    ebx,DWORD PTR [ebx-0x82437f4]
  414ff4:	shl    BYTE PTR [ebx],cl
  414ff6:	push   esp
  414ff7:	ret    
  414ff8:	and    esp,DWORD PTR [ebx-0x7990a421]
  414ffe:	mov    esp,0xe50b93d1
  415003:	ror    DWORD PTR [edx+0x52],cl
  415006:	(bad)  
  415007:	lods   eax,DWORD PTR ds:[esi]
  415008:	stos   DWORD PTR es:[edi],eax
  415009:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41500a:	sbb    al,0x9f
  41500c:	mov    edi,0x3ab58a4e
  415011:	iret   
  415012:	push   ebp
  415013:	adc    DWORD PTR [esi-0x2],0x1f415787
  41501a:	cwde   
  41501b:	mov    bh,BYTE PTR [ecx+0x7a7e6ed]
  415021:	ror    BYTE PTR ds:0xfcb5dee6,cl
  415027:	xlat   BYTE PTR ds:[ebx]
  415028:	pushw  cs
  41502a:	mov    ebx,0x5310bfbc
  41502f:	mov    ds:0xb5aab541,al
  415034:	and    DWORD PTR [edx],esp
  415036:	add    BYTE PTR [ebx+0x6b],cl
  415039:	cwde   
  41503a:	ss stos BYTE PTR es:[edi],al
  41503c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41503d:	test   BYTE PTR [ebp+edx*4-0x45],0x6c
  415042:	dec    esi
  415043:	in     eax,0x42
  415045:	fdivr  st(1),st
  415047:	pop    ecx
  415048:	(bad)  
  415049:	lods   al,BYTE PTR ds:[esi]
  41504a:	(bad)  
  41504b:	dec    ebp
  41504c:	fidiv  DWORD PTR [esi]
  41504e:	ret    
  41504f:	adc    eax,0xf7c9c995
  415054:	jmp    0xbfd63e4b
  415059:	lds    edx,FWORD PTR [ecx-0x52]
  41505c:	scas   al,BYTE PTR es:[edi]
  41505d:	shr    DWORD PTR [ecx+0x3],1
  415060:	arpl   ax,di
  415062:	mov    edx,0xee677b4b
  415067:	js     0x415073
  415069:	xchg   edx,eax
  41506a:	out    0xc8,eax
  41506c:	jns    0x415072
  41506e:	jmp    0x775:0x56f04557
  415075:	test   eax,0x11a3a554
  41507a:	pop    es
  41507b:	pop    edi
  41507c:	adc    DWORD PTR [ebx+esi*4-0x43d2481b],0xfffffff0
  415084:	sub    eax,0x4773c182
  415089:	mov    dl,bl
  41508b:	into   
  41508c:	dec    ebp
  41508d:	retf   
  41508e:	(bad)  
  41508f:	dec    ebx
  415090:	repnz sbb DWORD PTR [ebx+0x47],ebx
  415094:	retf   0xf8c2
  415097:	retf   
  415098:	jg     0x41509d
  41509a:	pusha  
  41509b:	adc    ebp,ebx
  41509d:	xor    al,0xf5
  41509f:	aam    0xbd
  4150a1:	aam    0x7e
  4150a3:	push   es
  4150a4:	pop    ds
  4150a5:	test   DWORD PTR [edi-0x7a],edx
  4150a8:	or     eax,0x8daebad6
  4150ad:	and    eax,0x9f123e08
  4150b2:	jne    0x4150f1
  4150b4:	mov    eax,ds:0x5bbe28e1
  4150b9:	adc    eax,0xdf0ded6e
  4150be:	arpl   si,bp
  4150c0:	adc    DWORD PTR [eax],0x9d380c15
  4150c6:	mov    ch,BYTE PTR ss:[edx+0x491d6c46]
  4150cd:	outs   dx,DWORD PTR ds:[esi]
  4150ce:	mov    BYTE PTR [ecx],dl
  4150d0:	es (bad) 
  4150d2:	xchg   esi,eax
  4150d3:	cmp    BYTE PTR [edi],ch
  4150d5:	nop
  4150d6:	and    eax,esp
  4150d8:	ins    DWORD PTR es:[edi],dx
  4150d9:	and    BYTE PTR [eax],0x4e
  4150dc:	xchg   ebp,eax
  4150dd:	ret    
  4150de:	call   0x5011:0xdab521ef
  4150e5:	hlt    
  4150e6:	jns    0x4150ef
  4150e8:	fidivr DWORD PTR [esi+0x4402b60d]
  4150ee:	test   bl,cl
  4150f0:	les    ebx,FWORD PTR [ecx+0x14]
  4150f3:	es pop edi
  4150f5:	rcl    ah,cl
  4150f7:	fbstp  TBYTE PTR [ebp+eiz*2+0x2]
  4150fb:	add    al,0x10
  4150fd:	imul   edx,eax,0x4c
  415100:	test   al,0x2
  415102:	inc    edi
  415103:	mov    WORD PTR [eax+0x31],ds
  415106:	aas    
  415107:	inc    edi
  415108:	or     BYTE PTR [esi+0x61e4f24f],bh
  41510e:	aad    0xfe
  415110:	mov    dh,0xb6
  415112:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415113:	mov    eax,0x165da530
  415118:	sar    DWORD PTR [eax+0x3b7a5f93],cl
  41511e:	fild   QWORD PTR [eax]
  415120:	push   edi
  415121:	mov    ebx,0x8fefeed1
  415126:	sbb    BYTE PTR [edi-0x4f1433aa],ah
  41512c:	imul   edi,DWORD PTR [esi-0x53],0xecf3772e
  415133:	cmp    dh,BYTE PTR [ebx]
  415135:	mov    dl,0x2a
  415137:	jl     0x415164
  415139:	fidiv  WORD PTR [ebp-0x4f]
  41513c:	scas   al,BYTE PTR es:[edi]
  41513d:	cmp    eax,0x90ed8405
  415142:	test   BYTE PTR [esi-0x26],0xf3
  415146:	pop    ecx
  415147:	and    eax,0x958a2eef
  41514c:	xchg   ebx,eax
  41514d:	adc    esi,DWORD PTR [bx+di]
  415150:	call   0x7c43:0x56164722
  415157:	enter  0x51c2,0x2d
  41515b:	jle    0x415123
  41515d:	xor    BYTE PTR [esi-0x354e3901],dl
  415163:	mov    ecx,DWORD PTR ds:0x330add8f
  415169:	jnp    0x4151df
  41516b:	lods   al,BYTE PTR ds:[esi]
  41516c:	mov    dl,0x61
  41516e:	pop    esp
  41516f:	mov    edi,0xdf6a1e12
  415174:	loop   0x4151cb
  415176:	(bad)  
  415177:	jae    0x4151ca
  415179:	jb     0x415107
  41517b:	xchg   ebx,eax
  41517c:	(bad)  
  41517d:	out    0x7c,al
  41517f:	mov    ebx,DWORD PTR [edi+ecx*1+0x27]
  415183:	sbb    ecx,DWORD PTR [esi-0x3d58112f]
  415189:	ja     0x41517d
  41518b:	cmp    bh,BYTE PTR [edi+0x7b]
  41518e:	call   0xc81e759f
  415193:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415194:	stc    
  415195:	fiadd  DWORD PTR [eax-0x47]
  415198:	sub    esi,DWORD PTR [esi-0x5a]
  41519b:	and    dh,al
  41519d:	push   es
  41519e:	sbb    BYTE PTR [edi+0x2f],dl
  4151a1:	lods   eax,DWORD PTR ds:[esi]
  4151a2:	loop   0x415135
  4151a4:	aaa    
  4151a5:	or     al,0x85
  4151a7:	mov    esi,0x2d68ae5b
  4151ac:	mov    edi,0xd805e236
  4151b1:	inc    DWORD PTR [ebx+0x71b37ffa]
  4151b7:	lods   eax,DWORD PTR ds:[esi]
  4151b8:	xchg   BYTE PTR [ebx],al
  4151ba:	cdq    
  4151bb:	mov    ds:0x81394ad8,al
  4151c0:	add    edx,DWORD PTR [edi+0x3b86b226]
  4151c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4151c7:	es mov ecx,0xa299826c
  4151cd:	repz mov ss,WORD PTR [ecx-0x7]
  4151d1:	popf   
  4151d2:	and    ch,bh
  4151d4:	push   edi
  4151d5:	fist   DWORD PTR [ebx+eax*8+0xd]
  4151d9:	push   ebx
  4151da:	adc    al,0x3
  4151dc:	mov    ds:0xcb461d63,eax
  4151e1:	pop    es
  4151e2:	xchg   edi,eax
  4151e3:	dec    esp
  4151e4:	cmp    edi,DWORD PTR ds:0x99284fb7
  4151ea:	adc    BYTE PTR [edx+edi*1+0x15],cl
  4151ee:	(bad)  
  4151f0:	mov    ch,0xb
  4151f2:	dec    eax
  4151f3:	lods   al,BYTE PTR ds:[esi]
  4151f4:	mov    DWORD PTR [esi-0x49],edx
  4151f7:	adc    eax,DWORD PTR [edx]
  4151f9:	or     DWORD PTR [esi-0x60],0xffffffd3
  4151fd:	xchg   DWORD PTR [edi],edx
  4151ff:	ret    
  415200:	mov    ecx,0x7b299f43
  415205:	or     al,0xc
  415207:	jo     0x4151f1
  415209:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41520a:	or     BYTE PTR [edx+0x5a],0xec
  41520e:	aaa    
  41520f:	das    
  415210:	les    esi,FWORD PTR [ebx]
  415212:	leave  
  415213:	jmp    0x8a01664c
  415218:	inc    DWORD PTR [esi-0x16]
  41521b:	jae    0x41527f
  41521d:	test   DWORD PTR [esi-0x5b94135],edx
  415223:	sub    BYTE PTR [eax],bl
  415225:	sub    eax,0xef85d5e2
  41522a:	sbb    DWORD PTR [ecx],ebx
  41522c:	add    DWORD PTR [eax-0x39],ebp
  41522f:	int3   
  415230:	jo     0x4151cc
  415232:	or     al,0x76
  415234:	jbe    0x4151de
  415236:	outs   dx,BYTE PTR ds:[esi]
  415237:	mov    eax,ss
  415239:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41523a:	retf   
  41523b:	cs scas eax,DWORD PTR es:[edi]
  41523d:	aaa    
  41523e:	mov    eax,0xaefd5afc
  415243:	test   DWORD PTR [ebx-0x4dbbe530],ecx
  415249:	cmp    DWORD PTR [esi-0x46],0x4afccfe8
  415250:	(bad)  
  415251:	push   ebp
  415252:	retf   0x8a62
  415255:	imul   ebx,DWORD PTR [ebp-0x65],0x135741f9
  41525c:	mov    al,0xa7
  41525e:	loop   0x4151f6
  415260:	out    dx,al
  415261:	daa    
  415262:	mov    ch,0xa9
  415264:	push   0xffffff9c
  415266:	enter  0x204d,0x2b
  41526a:	mov    bl,0xfc
  41526c:	adc    DWORD PTR [ebp-0x75],ebx
  41526f:	mov    ah,0x28
  415271:	mov    ebp,0xf715405c
  415276:	retf   
  415277:	ret    
  415278:	pop    esp
  415279:	push   esi
  41527a:	in     al,dx
  41527b:	inc    edx
  41527c:	mov    ecx,0x2b3779b1
  415281:	outs   dx,BYTE PTR ds:[esi]
  415282:	cmp    al,0xaa
  415284:	jle    0x41520a
  415286:	inc    BYTE PTR [ebp+0x50]
  415289:	enter  0xd6d4,0x65
  41528d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41528e:	gs ret 0x601e
  415292:	retf   
  415293:	xchg   edi,eax
  415294:	jne    0x415224
  415296:	xchg   edi,eax
  415297:	and    DWORD PTR [ecx-0x6de0435],0x53ebdf6b
  4152a1:	test   DWORD PTR [esi+0x6cc91f8d],ecx
  4152a7:	test   DWORD PTR [ebx-0x71],ecx
  4152aa:	iret   
  4152ab:	sbb    al,0xd2
  4152ad:	push   ss
  4152ae:	loopne 0x4152b4
  4152b0:	and    ah,ah
  4152b2:	mov    ebp,0xe554c53f
  4152b7:	icebp  
  4152b8:	jg     0x41526b
  4152ba:	xchg   edx,eax
  4152bb:	fiadd  WORD PTR [ebp+0x4a66c807]
  4152c1:	bnd ja 0x41530b
  4152c4:	(bad)  
  4152c5:	dec    ecx
  4152c6:	push   ebp
  4152c7:	add    eax,0x91930560
  4152cc:	loope  0x415327
  4152ce:	cld    
  4152cf:	imul   eax,DWORD PTR [eiz*1+0x3c6dc0f8],0x3f
  4152d7:	push   0x23
  4152d9:	popf   
  4152da:	aaa    
  4152db:	jl     0x41530f
  4152dd:	mov    ch,cl
  4152df:	mov    esp,0x1c430d65
  4152e4:	ret    0x19ac
  4152e7:	es pop ebp
  4152e9:	ret    0x875a
  4152ec:	fiadd  WORD PTR [edi-0x34d5f29a]
  4152f2:	ds shl bh,cl
  4152f5:	pop    esi
  4152f6:	js     0x41529b
  4152f8:	lds    edi,FWORD PTR ds:0x75dd18c5
  4152fe:	xchg   edi,eax
  4152ff:	push   edi
  415300:	call   0x8793130e
  415305:	cmp    BYTE PTR [ecx],bh
  415307:	enter  0x3eea,0xab
  41530b:	pop    esi
  41530c:	loope  0x415339
  41530e:	xor    DWORD PTR [edx-0x58],0xffffffac
  415312:	or     esp,DWORD PTR [ebp-0xe]
  415315:	out    0x30,eax
  415317:	push   esi
  415318:	ss xchg ebp,eax
  41531a:	inc    esp
  41531b:	out    0x3d,al
  41531d:	jno    0x415301
  41531f:	push   ebx
  415320:	movups XMMWORD PTR [esi-0x5f7a0886],xmm6
  415327:	jmp    0x4152b9
  415329:	jl     0x415389
  41532b:	mov    ch,0x9a
  41532d:	lds    eax,FWORD PTR [edx-0x5534b980]
  415333:	imul   edx,edx,0x31
  415336:	dec    ebp
  415337:	push   ebx
  415338:	(bad)  
  415339:	frstor [ebx-0x369c7886]
  41533f:	push   esi
  415340:	mov    bh,0x29
  415342:	je     0x415329
  415344:	stos   BYTE PTR es:[edi],al
  415345:	xchg   edx,eax
  415346:	fs adc ebx,ebp
  415349:	mov    DWORD PTR [esi],eax
  41534b:	sar    BYTE PTR [edx+0x71],1
  41534e:	xor    cl,dh
  415350:	mov    esi,0x1917dc76
  415355:	sbb    eax,ebx
  415357:	or     DWORD PTR [edi],esi
  415359:	fisttp DWORD PTR [esi]
  41535b:	lock dec esi
  41535d:	mov    bh,0x2a
  41535f:	push   ds
  415360:	popa   
  415361:	aaa    
  415362:	aad    0x14
  415364:	test   BYTE PTR [edi+0x1bca7b90],bh
  41536a:	pop    es
  41536b:	out    0x3b,eax
  41536d:	out    dx,eax
  41536e:	call   0xc1e8:0xa0e4fb46
  415375:	cmp    ah,BYTE PTR [ebx-0x676914c1]
  41537b:	retf   
  41537c:	push   ebx
  41537d:	popa   
  41537e:	adc    eax,0x370bb2f5
  415383:	lock cmp DWORD PTR [esi-0x630a34ce],0x31c7e7a4
  41538e:	adc    ebp,DWORD PTR [eax+0x30]
  415391:	sub    BYTE PTR [esp+edx*2-0x7d66ba14],dl
  415398:	sbb    eax,0xaadda286
  41539d:	mov    ecx,0x9a7bbef6
  4153a2:	sbb    bh,BYTE PTR [edx]
  4153a4:	rcl    BYTE PTR [esi-0x3f],0xfd
  4153a8:	or     eax,0x5a643167
  4153ad:	inc    ebx
  4153ae:	sbb    BYTE PTR [ebp+0x72ec30aa],dh
  4153b4:	inc    edx
  4153b5:	js     0x41534a
  4153b7:	mov    BYTE PTR [eax],dh
  4153b9:	push   ebx
  4153ba:	xor    cl,BYTE PTR [edx+ebp*8+0x68f9525a]
  4153c1:	fwait
  4153c2:	push   edx
  4153c3:	inc    ebp
  4153c4:	xor    ch,bh
  4153c6:	sub    eax,0xf25bac53
  4153cb:	test   DWORD PTR [edx],0x88b62d8f
  4153d1:	and    eax,0x59c85c5d
  4153d6:	ja     0x4153b1
  4153d8:	jge    0x415451
  4153da:	inc    ecx
  4153db:	push   edi
  4153dc:	outs   dx,BYTE PTR ds:[esi]
  4153dd:	dec    esi
  4153de:	popa   
  4153df:	test   al,0x6e
  4153e1:	jne    0x4153e2
  4153e3:	outs   dx,DWORD PTR ds:[esi]
  4153e4:	adc    BYTE PTR [eax+0x62],al
  4153e7:	dec    edi
  4153e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4153e9:	mov    ecx,0x1a795a27
  4153ee:	cmp    DWORD PTR [ecx],eax
  4153f0:	mov    ah,0x99
  4153f2:	stc    
  4153f3:	leave  
  4153f4:	fld    TBYTE PTR fs:[edx-0x35]
  4153f8:	cmp    ebp,DWORD PTR ss:[eax-0x7c]
  4153fc:	add    ecx,DWORD PTR [edx-0x72]
  4153ff:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415401:	js     0x41545f
  415403:	dec    esi
  415404:	fucomi st,st(1)
  415406:	mov    esp,0xd427b0f7
  41540b:	repz pop esp
  41540d:	fnstenv [eax]
  41540f:	(bad)  
  415410:	adc    al,0x1d
  415412:	cdq    
  415413:	(bad)  
  415414:	push   edx
  415415:	adc    esp,edx
  415417:	cmp    eax,0xfd3a5175
  41541c:	aas    
  41541d:	jbe    0x415426
  41541f:	dec    ebp
  415420:	jo     0x415477
  415422:	xor    DWORD PTR [edx+0x78],0xffffff89
  415426:	jbe    0x4153c1
  415428:	mov    ebp,0x3c9af76a
  41542d:	and    DWORD PTR ds:0xaebe599a,esi
  415433:	pop    ss
  415434:	xor    DWORD PTR [ebp+0x3101ab61],eax
  41543a:	pop    esi
  41543b:	ret    0x106b
  41543e:	mov    ch,0xc
  415440:	adc    esi,ecx
  415442:	jmp    0x5329:0x2c92724e
  415449:	mov    al,ds:0x8cae356d
  41544e:	adc    al,0x68
  415450:	je     0x415425
  415452:	xor    eax,0x16e77a8a
  415457:	shl    DWORD PTR [ebx],0x7d
  41545a:	test   eax,0x25a39680
  41545f:	mov    cl,0x4
  415461:	fld1   
  415463:	cmp    BYTE PTR [eax-0x2291c370],dl
  415469:	aaa    
  41546a:	mov    ds:0x6ca196f1,al
  41546f:	jns    0x415459
  415471:	retf   0x77ab
  415474:	sar    ch,0x69
  415477:	mov    ebp,0xfcea6d1c
  41547c:	sub    eax,0xa9080e73
  415481:	aam    0xe0
  415483:	push   es
  415484:	mov    edi,0x17a8834a
  415489:	loop   0x41543a
  41548b:	dec    esi
  41548c:	push   esi
  41548d:	das    
  41548e:	xchg   ebp,eax
  41548f:	(bad)  
  415490:	push   esp
  415491:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415492:	and    al,0x9f
  415494:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415495:	or     eax,0x10350736
  41549a:	in     al,0x7e
  41549c:	lds    edi,FWORD PTR [ecx-0x4f3d704a]
  4154a2:	adc    eax,0x4ade2d0b
  4154a7:	sbb    ebx,ecx
  4154a9:	inc    eax
  4154aa:	mov    ah,0x12
  4154ac:	cwde   
  4154ad:	(bad)  
  4154ae:	btc    DWORD PTR [ebp+0x16],ecx
  4154b2:	mov    al,ds:0xde3dc84a
  4154b7:	retf   
  4154b8:	call   0x64a92de7
  4154bd:	and    si,WORD PTR [ebx-0x7038cedb]
  4154c4:	ins    BYTE PTR es:[edi],dx
  4154c5:	push   ebp
  4154c6:	jo     0x4154f1
  4154c8:	test   DWORD PTR [edx+ebp*4],0x21912d8f
  4154cf:	popa   
  4154d0:	mov    ecx,0xeca8a01e
  4154d5:	pop    ss
  4154d6:	adc    BYTE PTR [eax+0x67],bh
  4154d9:	test   BYTE PTR [esi-0x3801d7f],bh
  4154df:	cmp    ebx,DWORD PTR [ecx-0x56]
  4154e2:	xor    eax,0x3aee4c15
  4154e7:	call   0xa844d1e7
  4154ec:	test   BYTE PTR [ebx],cl
  4154ee:	addr16 sahf 
  4154f0:	jmp    0x96b49cd3
  4154f5:	or     BYTE PTR [edi+edi*1-0x33],ch
  4154f9:	hlt    
  4154fa:	push   0x29
  4154fc:	test   BYTE PTR [edi],bl
  4154fe:	(bad)  
  4154ff:	fild   WORD PTR [ebx-0x79]
  415502:	or     edi,DWORD PTR [ecx]
  415504:	push   ds
  415505:	cmp    al,0xdd
  415507:	xor    bh,BYTE PTR es:[ebp-0xa81be82]
  41550e:	jno    0x41553a
  415510:	stos   DWORD PTR es:[edi],eax
  415511:	push   cs
  415512:	add    al,0xe6
  415514:	cmc    
  415515:	jae    0x415592
  415517:	stc    
  415518:	or     bl,BYTE PTR [esi-0x65147bfc]
  41551e:	mov    esp,0xb8add20a
  415523:	mov    ebp,0xf8e77282
  415528:	mov    eax,ds:0x8db06186
  41552d:	xor    DWORD PTR [esi+eax*2-0x6e06d462],esp
  415534:	mov    bh,0x63
  415536:	pushf  
  415537:	shl    BYTE PTR [edi+0x4e],0x2f
  41553b:	push   esp
  41553c:	sub    BYTE PTR [ebx+0xf],bl
  41553f:	or     eax,0xadbb2bdc
  415544:	cmp    BYTE PTR [ebx],0x91
  415547:	popf   
  415548:	jmp    FWORD PTR [esi]
  41554a:	jae    0x4155c1
  41554c:	es retf 0xba59
  415550:	aam    0x22
  415552:	repz push ecx
  415554:	fsub   st(0),st
  415556:	mov    ecx,0xbade8310
  41555b:	mov    edx,ebx
  41555d:	mov    dh,0x13
  415560:	jb     0x415556
  415562:	call   0x92bc:0x25046912
  415569:	inc    ebx
  41556a:	or     al,BYTE PTR [ecx]
  41556c:	call   0xcd2e:0x314f640e
  415573:	sub    DWORD PTR [ebx-0x65],eax
  415576:	cmp    bh,BYTE PTR ss:[ebx]
  415579:	dec    edx
  41557a:	sbb    DWORD PTR [esi-0x65431132],ebp
  415580:	mov    dl,0x1e
  415582:	fcomi  st,st(7)
  415584:	pop    ebp
  415585:	inc    edi
  415586:	add    al,0x1
  415588:	mov    ch,0xdf
  41558a:	cmp    bh,bl
  41558c:	shl    DWORD PTR ds:0x2d0f92e7,0x5
  415593:	ins    DWORD PTR es:[edi],dx
  415594:	std    
  415595:	fsub   DWORD PTR [ebx]
  415597:	out    dx,al
  415598:	ds ret 0xcfdc
  41559c:	sub    esp,ecx
  41559e:	cdq    
  41559f:	push   edx
  4155a0:	out    0xf1,al
  4155a2:	dec    ebx
  4155a3:	sar    BYTE PTR [ebx-0x46be188c],0x9f
  4155aa:	mov    WORD PTR [eax],fs
  4155ac:	ret    0x108c
  4155af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4155b0:	pop    edx
  4155b1:	and    bh,BYTE PTR [esi+0xbd24f03]
  4155b7:	addr16 mov edi,0x829de5b3
  4155bd:	ds jmp 0xf71e:0xf758e52d
  4155c5:	aad    0x90
  4155c7:	add    eax,0x2a51bda1
  4155cc:	loopne 0x4155ca
  4155ce:	sbb    esi,eax
  4155d0:	jae    0x41557d
  4155d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155d3:	adc    bh,ch
  4155d5:	push   ds
  4155d6:	pop    ds
  4155d7:	inc    esi
  4155d8:	int3   
  4155d9:	inc    edx
  4155da:	mul    DWORD PTR [edi+edx*2+0x48055485]
  4155e1:	adc    bl,ch
  4155e3:	pop    es
  4155e4:	cmc    
  4155e5:	pop    ebx
  4155e6:	rcr    BYTE PTR [eax-0x2d6340c6],cl
  4155ec:	in     eax,0x89
  4155ee:	es dec esi
  4155f0:	(bad)  
  4155f1:	mov    esp,0x58d91449
  4155f6:	std    
  4155f7:	push   es
  4155f8:	fnsave [esi+0x541e47f3]
  4155fe:	pop    esp
  4155ff:	mov    eax,0xab74739b
  415604:	fs out dx,eax
  415606:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415607:	jae    0x4155c5
  415609:	(bad)  
  41560a:	lods   eax,DWORD PTR ds:[esi]
  41560b:	sub    DWORD PTR [edi+0x76383a81],esp
  415611:	xlat   BYTE PTR ds:[ebx]
  415612:	jnp    0x4155f4
  415614:	stos   BYTE PTR es:[edi],al
  415615:	ins    BYTE PTR es:[edi],dx
  415616:	ror    BYTE PTR [edi],1
  415618:	mov    dh,0x79
  41561a:	inc    ecx
  41561b:	pop    ss
  41561c:	pop    edi
  41561d:	lds    ecx,FWORD PTR [eax+0x6dd35053]
  415623:	dec    edx
  415624:	jg     0x96bc276f
  41562a:	adc    al,0xd0
  41562c:	repz or DWORD PTR [esi-0x45dc90f2],ebx
  415633:	ds pop ss
  415635:	adc    eax,0xf2828f3e
  41563a:	push   esp
  41563b:	cmp    DWORD PTR [edi+0x61],edi
  41563e:	jmp    0x4155f6
  415640:	arpl   WORD PTR [esi],di
  415642:	xchg   edx,eax
  415643:	aas    
  415644:	cmp    BYTE PTR [eax+0x5bbc0f69],ah
  41564a:	clc    
  41564b:	adc    BYTE PTR [ecx+0x302a60be],0xc2
  415652:	add    eax,esi
  415654:	aad    0xdf
  415656:	xchg   esi,eax
  415657:	in     al,0xa8
  415659:	or     BYTE PTR [ecx],dl
  41565b:	shl    BYTE PTR [esi-0x28bdfce2],1
  415661:	adc    BYTE PTR [ebx-0x4f3528e9],bl
  415667:	mov    edx,0xcbbadad0
  41566c:	inc    ebx
  41566d:	loop   0x4156d6
  41566f:	mov    BYTE PTR [eax],al
  415671:	jecxz  0x4156b0
  415673:	dec    eax
  415674:	leave  
  415675:	jb     0x41564c
  415677:	and    al,0xc
  415679:	mov    eax,ds:0x43c09ae
  41567e:	jle    0x415609
  415680:	leave  
  415681:	mov    ds:0xac9df147,eax
  415686:	pop    ebp
  415687:	mov    DWORD PTR [ebx+0x27228f6d],ebp
  41568d:	inc    ebp
  41568e:	int3   
  41568f:	xor    eax,0x6d
  415692:	loop   0x41568e
  415694:	cmc    
  415695:	or     DWORD PTR [ecx],0x10
  415698:	sti    
  415699:	adc    dh,BYTE PTR [edx+0x66ecede6]
  41569f:	fldenv [edi+ecx*1+0x539d6fd8]
  4156a6:	iret   
  4156a7:	inc    esi
  4156a8:	mov    esp,0x964ee828
  4156ad:	mov    esi,0x73cfc16e
  4156b2:	clc    
  4156b3:	fstp   TBYTE PTR [edx-0x4d475d2e]
  4156b9:	or     BYTE PTR [ebx],bh
  4156bb:	or     BYTE PTR [ebp+0x68],0xfc
  4156bf:	bound  esi,QWORD PTR [ecx+0x7404c4e]
  4156c5:	mov    edi,DWORD PTR [edi]
  4156c7:	sbb    cl,BYTE PTR [ebx-0x7530eda8]
  4156cd:	xor    DWORD PTR [ebx-0x3c],esi
  4156d0:	je     0x415688
  4156d2:	(bad)  
  4156d3:	cli    
  4156d4:	call   0x9e22:0xbbb2e407
  4156db:	in     al,dx
  4156dc:	mov    bl,0x80
  4156de:	add    al,0xce
  4156e0:	rcr    DWORD PTR [edi+ebx*4-0x41],1
  4156e4:	iret   
  4156e5:	dec    eax
  4156e6:	xchg   BYTE PTR [ecx+0x57],bh
  4156e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4156ea:	dec    edx
  4156eb:	add    BYTE PTR [esi],cl
  4156ed:	pop    edx
  4156ee:	out    0xd4,eax
  4156f0:	dec    eax
  4156f1:	mov    edi,0x8c6e2fd
  4156f6:	sbb    eax,0x9c954712
  4156fb:	mov    esi,0xb4f21bda
  415700:	daa    
  415701:	leave  
  415702:	jge    0x4156d4
  415704:	pusha  
  415705:	fyl2xp1 
  415707:	ficomp DWORD PTR [ebp-0x4d]
  41570a:	ja     0x41573b
  41570c:	in     al,0xf5
  41570e:	jmp    FWORD PTR [edi-0x69]
  415711:	loopne 0x415718
  415713:	sbb    DWORD PTR [edi+ebx*8+0x29c63217],eax
  41571a:	gs loop 0x415713
  41571d:	std    
  41571e:	add    BYTE PTR es:[esi-0x2b],ch
  415722:	inc    eax
  415723:	imul   esi,DWORD PTR [ecx-0x30],0xabe7ce95
  41572a:	loop   0x4157a2
  41572c:	hlt    
  41572d:	ror    dl,0x81
  415730:	jbe    0x4156d7
  415732:	retf   0xe41e
  415735:	mov    dl,0x0
  415737:	out    dx,al
  415738:	rcl    bh,cl
  41573a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41573b:	in     al,0xc3
  41573d:	(bad)  
  41573e:	aam    0x59
  415740:	sbb    al,0xda
  415743:	loopne 0x41575a
  415745:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415746:	push   cs
  415747:	test   BYTE PTR [ebp+esi*4+0x33779a4d],cl
  41574e:	loope  0x415706
  415750:	pop    eax
  415751:	hlt    
  415752:	jg     0x41570a
  415754:	adc    dl,bh
  415756:	mov    bl,BYTE PTR [ebp+0x6f]
  415759:	iret   
  41575a:	popf   
  41575b:	push   cs
  41575c:	adc    al,0xfe
  41575e:	and    al,0x24
  415760:	push   eax
  415761:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415762:	int    0xc6
  415764:	mov    esp,DWORD PTR [edx+ebx*2]
  415767:	inc    esp
  415768:	dec    esp
  415769:	std    
  41576a:	lods   eax,DWORD PTR ds:[esi]
  41576b:	lahf   
  41576c:	(bad)  
  41576d:	dec    ebx
  41576e:	mov    ebp,0x5ba75005
  415773:	lods   al,BYTE PTR ds:[esi]
  415774:	rcl    BYTE PTR [ebp+0x1603a7c9],0x17
  41577b:	sahf   
  41577c:	jno    0x4157d4
  41577e:	stos   BYTE PTR es:[edi],al
  41577f:	aam    0x1
  415781:	cmp    eax,0x42f04e36
  415786:	sti    
  415787:	daa    
  415788:	xor    al,0x2a
  41578a:	jmp    0x4157b6
  41578c:	jle    0x41579b
  41578e:	cwde   
  41578f:	bound  edi,QWORD PTR [edi]
  415791:	xchg   ecx,eax
  415792:	or     eax,0xd31aeea8
  415797:	stos   BYTE PTR es:[edi],al
  415798:	jae    0x4157b7
  41579a:	je     0x41578b
  41579c:	xchg   ebx,eax
  41579d:	pop    eax
  41579e:	fcmovu st,st(1)
  4157a0:	xchg   ecx,eax
  4157a1:	(bad)  
  4157a2:	ja     0x415784
  4157a4:	ds inc eax
  4157a6:	out    dx,eax
  4157a7:	sar    BYTE PTR [esi+0x33],cl
  4157aa:	sub    eax,0x325819a5
  4157af:	push   esp
  4157b0:	mov    bh,0xa5
  4157b2:	(bad)  
  4157b3:	sub    eax,0x4edc5074
  4157b8:	imul   ecx,DWORD PTR [eax+0x55],0xea81352a
  4157bf:	jmp    0x4157be
  4157c1:	add    dh,ch
  4157c3:	sub    BYTE PTR [ecx+0x2710b81b],0xe9
  4157ca:	jp     0x415786
  4157cc:	jl     0x415754
  4157ce:	push   esi
  4157cf:	enter  0x995e,0x48
  4157d3:	stos   DWORD PTR es:[edi],eax
  4157d4:	lods   al,BYTE PTR ds:[esi]
  4157d5:	addr16 iret 
  4157d7:	sahf   
  4157d8:	pop    ebx
  4157d9:	dec    ebx
  4157da:	mov    es,WORD PTR [esi-0x6d6beb09]
  4157e0:	out    0xee,eax
  4157e2:	iret   
  4157e3:	aad    0xc8
  4157e5:	pusha  
  4157e6:	lds    edx,FWORD PTR [edx]
  4157e8:	lds    esi,FWORD PTR [eax+0xb]
  4157eb:	add    eax,0x66b67b2a
  4157f0:	cmp    al,0xc3
  4157f2:	mov    ds:0xcdf0a091,eax
  4157f7:	sub    DWORD PTR [ebp-0x39783af],edi
  4157fd:	pop    esi
  4157fe:	lods   al,BYTE PTR ds:[esi]
  4157ff:	ss dec edi
  415801:	cmp    ch,BYTE PTR ds:0x56a995f1
  415807:	paddusb mm7,QWORD PTR ds:0x21d0af10
  41580e:	cmp    DWORD PTR [eax+0x30],esp
  415811:	push   edx
  415812:	dec    ecx
  415813:	out    0xc6,eax
  415815:	xor    BYTE PTR [ebx*8+0x4f4e59e0],al
  41581c:	inc    eax
  41581d:	dec    ebp
  41581e:	cmp    BYTE PTR [edi],bl
  415820:	mov    fs,WORD PTR [ecx+0x52]
  415823:	adc    DWORD PTR [esi-0x71],esi
  415826:	pop    es
  415827:	nop
  415828:	xor    BYTE PTR [ebp-0xf],bh
  41582b:	mov    edx,0xbf0d9a51
  415830:	icebp  
  415831:	shl    DWORD PTR [eax+0x407ef9ed],1
  415837:	mov    cl,0x5b
  415839:	clc    
  41583a:	mov    al,0xd8
  41583c:	bound  eax,QWORD PTR [ecx-0x191e8c73]
  415842:	dec    ebx
  415843:	jl     0x4158be
  415845:	lods   eax,DWORD PTR ds:[esi]
  415846:	cmp    eax,0x508340ed
  41584b:	push   edx
  41584c:	jb     0x4158a7
  41584e:	or     DWORD PTR [eax-0x5c9ed479],ebx
  415854:	mov    bl,0xb
  415856:	in     al,dx
  415857:	stos   DWORD PTR es:[edi],eax
  415858:	mov    BYTE PTR [edi-0x57],ch
  41585b:	lea    ebp,[edx+ecx*4]
  41585e:	stos   BYTE PTR es:[edi],al
  41585f:	inc    ebx
  415860:	push   ecx
  415861:	shr    DWORD PTR [ebp-0x27cfbf22],1
  415867:	ins    DWORD PTR es:[edi],dx
  415868:	xor    al,0x13
  41586a:	cli    
  41586b:	fldenv ds:0x95cc582e
  415871:	or     DWORD PTR [edi],esi
  415873:	mov    eax,ds:0xdeb5d22b
  415878:	add    BYTE PTR [ecx],bl
  41587a:	mov    ch,0xf9
  41587c:	push   eax
  41587d:	iret   
  41587e:	leave  
  41587f:	or     eax,0x8c7e493
  415884:	outs   dx,BYTE PTR ds:[esi]
  415885:	mov    BYTE PTR [ebx-0x4dd8326],ch
  41588b:	aad    0xeb
  41588d:	push   ds
  41588e:	hlt    
  41588f:	mov    bl,0x98
  415891:	jge    0x415848
  415893:	pop    ebx
  415894:	push   ss
  415895:	pop    esp
  415896:	pop    ecx
  415897:	and    esp,esp
  415899:	pop    ecx
  41589a:	stos   DWORD PTR es:[edi],eax
  41589b:	mov    dh,0x80
  41589d:	push   0x64
  41589f:	xor    DWORD PTR [eax+0x43b8d4b8],edx
  4158a5:	addr16 or eax,0x61487aaa
  4158ab:	loop   0x415900
  4158ad:	pop    ss
  4158ae:	mov    bh,0x99
  4158b0:	outs   dx,DWORD PTR ds:[esi]
  4158b1:	sub    eax,0x921a41bf
  4158b6:	cwde   
  4158b7:	adc    ebp,DWORD PTR [ecx-0x34]
  4158ba:	out    dx,eax
  4158bb:	test   al,0x52
  4158bd:	repz pusha 
  4158bf:	ret    0xff38
  4158c2:	dec    ebx
  4158c3:	mov    ah,0xd8
  4158c5:	push   ss
  4158c6:	or     BYTE PTR [esi+0x767fb861],0x33
  4158cd:	clc    
  4158ce:	sbb    DWORD PTR [ebp+0x54],esi
  4158d1:	jne    0x4158be
  4158d3:	iret   
  4158d4:	push   ecx
  4158d5:	shl    BYTE PTR [ebp+0x5a34f721],0x82
  4158dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4158dd:	inc    ebx
  4158de:	dec    esp
  4158df:	fild   WORD PTR [ebp+0x109546c4]
  4158e5:	push   ds
  4158e6:	push   cs
  4158e7:	cmp    BYTE PTR [edi],0xd4
  4158ea:	add    edx,DWORD PTR [ecx+0x6d]
  4158ed:	or     ch,BYTE PTR [edi-0x36]
  4158f0:	fistp  WORD PTR [ecx]
  4158f2:	icebp  
  4158f3:	lea    eax,[ebx+0x2ee3c2aa]
  4158f9:	lods   al,BYTE PTR ds:[esi]
  4158fa:	push   ss
  4158fb:	dec    ecx
  4158fc:	mov    cl,0x6b
  4158fe:	cmc    
  4158ff:	xlat   BYTE PTR ds:[ebx]
  415900:	mov    ebx,0x4d7377b4
  415905:	fidivr DWORD PTR [ecx]
  415907:	adc    DWORD PTR [esi+0x54cfdebf],edx
  41590d:	mov    eax,ds:0xfc0ab9bc
  415912:	lods   eax,DWORD PTR ds:[esi]
  415913:	mov    edi,0x24365a04
  415918:	cmp    BYTE PTR [edx-0x419eefeb],bl
  41591e:	inc    esp
  41591f:	sbb    ecx,DWORD PTR [esi+ebp*8]
  415922:	repz popf 
  415924:	sbb    eax,DWORD PTR [eax-0x6c]
  415927:	ds aaa 
  415929:	jmp    0x4a78:0xa7a5209b
  415930:	arpl   WORD PTR [eax-0x3b],sp
  415933:	pop    edx
  415934:	push   ebp
  415935:	inc    edi
  415936:	popa   
  415937:	mov    ecx,ecx
  415939:	imul   esp,ebx,0x6c9c2c0d
  41593f:	cdq    
  415940:	xchg   esi,eax
  415941:	jo     0x41591f
  415943:	xor    edi,DWORD PTR [edi+0x1e90ce46]
  415949:	jle    0x4159ae
  41594b:	les    edi,FWORD PTR [edx-0x26]
  41594e:	adc    BYTE PTR [esp+ebp*8],bl
  415951:	or     edi,esp
  415953:	icebp  
  415954:	and    DWORD PTR [edi-0x6f],0x81dd282e
  41595b:	jl     0x4159bb
  41595d:	leave  
  41595e:	rol    BYTE PTR [edx-0x4d],0x9f
  415962:	push   cs
  415963:	(bad)
  415966:	push   edi
  415967:	cmp    BYTE PTR [ecx],ah
  415969:	mov    eax,0xdd1e0330
  41596e:	test   DWORD PTR [edi+0x1722e7b3],edx
  415974:	int3   
  415975:	repz inc esi
  415977:	inc    ecx
  415978:	mov    edi,0x6affee04
  41597d:	addr16 push es
  41597f:	push   esi
  415980:	js     0x4159a5
  415982:	cmp    dl,cl
  415984:	out    dx,al
  415985:	jo     0x41594d
  415987:	pop    edi
  415988:	xchg   edi,eax
  415989:	data16 mov al,ds:0x4ad6b119
  41598f:	mov    es,WORD PTR [edi+0x276bfc6d]
  415995:	mov    ch,0x12
  415997:	mov    al,ds:0x520f2f22
  41599c:	cs ret 0xd5c9
  4159a0:	and    BYTE PTR es:[bx+di+0x65],ch
  4159a5:	xchg   esp,eax
  4159a6:	(bad)  
  4159a7:	mov    ecx,0x4ee86eab
  4159ac:	es jmp 0x4159fa
  4159af:	das    
  4159b0:	pushf  
  4159b1:	fwait
  4159b2:	iret   
  4159b3:	out    dx,eax
  4159b4:	ret    
  4159b5:	ins    DWORD PTR es:[edi],dx
  4159b6:	call   0xc75f:0x1d5905
  4159bd:	fdivr  QWORD PTR [eax+0x51]
  4159c0:	js     0x4159c2
  4159c2:	xlat   BYTE PTR cs:[ebx]
  4159c4:	jmp    0x9fae:0x613ec1ac
  4159cb:	add    eax,0x245ea708
  4159d0:	sahf   
  4159d1:	pop    ecx
  4159d2:	sub    eax,0x750d977b
  4159d7:	sub    al,0xbf
  4159d9:	jno    0x415a42
  4159db:	cmp    DWORD PTR [ebp+eiz*2-0x192ef79e],0xf0f44ec2
  4159e6:	xor    BYTE PTR [ebx+0x75],ah
  4159e9:	stos   DWORD PTR es:[edi],eax
  4159ea:	push   edx
  4159eb:	sbb    DWORD PTR [ebx],ebx
  4159ed:	xlat   BYTE PTR ds:[ebx]
  4159ee:	sar    BYTE PTR [ecx+esi*1+0x1f872c40],0xf4
  4159f6:	and    BYTE PTR [eax+0x27894eb2],dh
  4159fc:	jge    0x415986
  4159fe:	fisub  DWORD PTR [esi]
  415a00:	test   al,0x3
  415a02:	jmp    0xa5f7:0x58ec602d
  415a09:	mov    ebx,0x75ddccec
  415a0e:	shr    edx,0x3a
  415a11:	and    al,BYTE PTR [ebx]
  415a13:	inc    ecx
  415a14:	xor    eax,DWORD PTR [esi-0x683e63e3]
  415a1a:	and    eax,0x21b2181b
  415a1f:	icebp  
  415a20:	mov    ebp,DWORD PTR [edi-0x38]
  415a23:	jae    0x4159d5
  415a25:	fcomi  st,st(1)
  415a27:	push   esi
  415a28:	sahf   
  415a29:	sub    bl,bh
  415a2b:	add    DWORD PTR [edx+ebx*2],ecx
  415a2e:	and    dx,cx
  415a31:	xchg   edi,eax
  415a32:	loop   0x415a34
  415a34:	cmp    cl,dl
  415a36:	into   
  415a37:	xchg   ebx,eax
  415a38:	sub    DWORD PTR [esi],edi
  415a3a:	in     eax,dx
  415a3b:	mov    edx,?
  415a3d:	retf   0x4533
  415a40:	pop    ebp
  415a41:	pusha  
  415a42:	loope  0x415aa1
  415a44:	or     eax,0x71c5d6fd
  415a49:	test   DWORD PTR [eax+0x42],ecx
  415a4c:	call   0x60c22802
  415a51:	addr16 mov ecx,0x8220ecfc
  415a57:	pop    ecx
  415a58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a59:	mov    ds:0xf5f49dcf,al
  415a5e:	inc    ebp
  415a5f:	sub    edx,edi
  415a61:	in     al,0xd0
  415a63:	sysret 
  415a65:	push   cs
  415a66:	in     al,0x39
  415a68:	mov    ds:0x12ec48d6,al
  415a6d:	inc    ecx
  415a6e:	pop    edi
  415a6f:	mov    ds:0x9ebcacc7,al
  415a74:	push   ecx
  415a75:	(bad)  
  415a77:	mov    ss,WORD PTR [ebx+0x558734d5]
  415a7d:	pop    ebp
  415a7e:	and    DWORD PTR [edx],ebx
  415a80:	pop    ebx
  415a81:	test   eax,0x4deb3b8c
  415a86:	or     BYTE PTR [ebp-0x59],al
  415a89:	gs mov bl,0x41
  415a8c:	out    0x50,eax
  415a8e:	mov    BYTE PTR [esi+0x41],0xbc
  415a92:	faddp  st(2),st
  415a94:	pop    eax
  415a95:	xor    BYTE PTR [eax+0x11],ah
  415a98:	neg    dh
  415a9a:	add    cl,ah
  415a9c:	(bad)  
  415a9d:	jle    0x415b09
  415a9f:	lds    esp,FWORD PTR [ebx+0x6146b524]
  415aa5:	sbb    DWORD PTR [ecx],0x564460ed
  415aab:	div    BYTE PTR [ecx+eiz*4-0x62811b1a]
  415ab2:	stos   DWORD PTR es:[edi],eax
  415ab3:	stc    
  415ab4:	jns    0x415aec
  415ab6:	pop    es
  415ab7:	mov    eax,0x8c230da8
  415abc:	nop
  415abd:	jno    0x415b0d
  415abf:	mov    ch,0x53
  415ac1:	adc    eax,0xbe19f4db
  415ac6:	repnz pop edi
  415ac8:	and    eax,ecx
  415aca:	sub    BYTE PTR [eax+0x34400e],bh
  415ad0:	idiv   BYTE PTR [eax]
  415ad2:	or     DWORD PTR [edi+0xffa2991],ecx
  415ad8:	jp     0x415a76
  415ada:	into   
  415adb:	mov    edx,0xbefeabb
  415ae0:	fcomp  QWORD PTR [edx]
  415ae2:	xlat   BYTE PTR ds:[ebx]
  415ae3:	(bad)  
  415ae4:	or     cl,BYTE PTR [edx]
  415ae6:	outs   dx,BYTE PTR ds:[esi]
  415ae7:	or     BYTE PTR [ecx],dh
  415ae9:	push   edi
  415aea:	neg    ebx
  415aec:	mov    ah,0x5c
  415aee:	loope  0x415ac0
  415af0:	pushf  
  415af1:	adc    DWORD PTR [ebp+0x52],ecx
  415af4:	je     0x415adc
  415af6:	je     0x415b14
  415af8:	jle    0x415abc
  415afa:	daa    
  415afb:	lds    edx,FWORD PTR [edi+0x7e]
  415afe:	inc    edx
  415aff:	test   DWORD PTR [eax],0xf23460e7
  415b05:	inc    ebp
  415b06:	aaa    
  415b07:	sbb    eax,0xb4b408e6
  415b0c:	push   es
  415b0d:	add    eax,0x9af59b6e
  415b12:	loopne 0x415b64
  415b14:	sti    
  415b15:	cmp    cl,cl
  415b17:	or     DWORD PTR [edi-0x36],esi
  415b1a:	sub    al,0x12
  415b1c:	mov    dh,BYTE PTR [eax]
  415b1e:	stos   DWORD PTR es:[edi],eax
  415b1f:	push   ds
  415b20:	fisttp WORD PTR [ebp-0x33]
  415b23:	daa    
  415b24:	mov    ebp,0x4a6fe06f
  415b29:	xlat   BYTE PTR ds:[ebx]
  415b2a:	sbb    edi,DWORD PTR [eax]
  415b2c:	push   ds
  415b2d:	mov    gs,WORD PTR [eax]
  415b2f:	xchg   esp,eax
  415b30:	in     eax,dx
  415b31:	or     BYTE PTR [edx+0x7e],ah
  415b34:	mov    BYTE PTR fs:[ecx+eiz*2-0x25d6455b],bl
  415b3c:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  415b3e:	inc    esi
  415b3f:	sar    ebp,cl
  415b41:	clc    
  415b42:	mov    ecx,0xac96bb75
  415b47:	sbb    bl,ch
  415b49:	scas   eax,DWORD PTR es:[edi]
  415b4a:	shr    BYTE PTR [edx+0x5f248db1],cl
  415b50:	inc    esi
  415b51:	(bad)  
  415b52:	out    dx,eax
  415b53:	mov    dl,0xbe
  415b55:	jne    0x415b81
  415b57:	mov    ecx,0x79529cd4
  415b5c:	int    0xf8
  415b5e:	lods   al,BYTE PTR ds:[esi]
  415b5f:	jnp    0x415ba7
  415b61:	mov    cl,0x23
  415b63:	push   edx
  415b64:	pop    ebx
  415b65:	push   ss
  415b66:	arpl   WORD PTR gs:[ebp+esi*4+0x2c],bx
  415b6b:	hlt    
  415b6c:	add    ah,BYTE PTR [eax]
  415b6e:	jb     0x415bee
  415b70:	in     eax,0x77
  415b72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b73:	(bad)  
  415b74:	dec    ebp
  415b75:	push   ss
  415b76:	test   BYTE PTR [ecx+0x0],ch
  415b79:	mov    al,0xb6
  415b7b:	xlat   BYTE PTR ds:[ebx]
  415b7c:	hlt    
  415b7d:	loope  0x415b1a
  415b7f:	loope  0x415bee
  415b81:	out    0x21,eax
  415b83:	adc    eax,0x6cfbf4d6
  415b88:	sub    eax,0xfab38313
  415b8d:	mov    WORD PTR [eax+0x4918de9a],gs
  415b93:	jmp    0x922d189c
  415b98:	cmp    DWORD PTR [esi+0x3110061c],esp
  415b9e:	cmp    eax,0x2b54a98a
  415ba3:	out    0x63,al
  415ba5:	xor    DWORD PTR [ebx-0x71],esp
  415ba8:	xor    eax,0x300e18db
  415bad:	inc    esi
  415bae:	xchg   edx,eax
  415baf:	aaa    
  415bb0:	and    BYTE PTR [esi+0x2],0x7e
  415bb4:	and    BYTE PTR [edi],bl
  415bb6:	xchg   ebp,eax
  415bb7:	sbb    al,0x49
  415bb9:	sub    DWORD PTR [edi-0x7],ecx
  415bbc:	aad    0x9b
  415bbe:	repnz sub BYTE PTR [edx],ah
  415bc1:	add    al,0xe1
  415bc3:	add    cl,BYTE PTR [ebp-0xb65f3f4]
  415bc9:	xchg   WORD PTR [ecx+ecx*2-0xe88b3b9],sp
  415bd1:	loope  0x415c51
  415bd3:	pop    edi
  415bd4:	retf   
  415bd5:	xchg   ebp,eax
  415bd6:	push   esp
  415bd7:	jl     0x415c42
  415bd9:	mov    WORD PTR [eax],ds
  415bdb:	mov    dh,0x96
  415bdd:	xchg   BYTE PTR [bx+si],al
  415be0:	sbb    bl,ch
  415be2:	push   cs
  415be3:	sbb    esp,edx
  415be5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415be6:	in     eax,0x6
  415be8:	push   ebx
  415be9:	ja     0x415c3e
  415beb:	cwde   
  415bec:	bound  ebx,QWORD PTR [ebx+0x1b]
  415bef:	push   edi
  415bf0:	fldenv [esi-0x6de4851a]
  415bf6:	add    al,BYTE PTR [ebx-0x1ab52e1f]
  415bfc:	icebp  
  415bfd:	scas   eax,DWORD PTR es:[edi]
  415bfe:	inc    eax
  415bff:	and    eax,0x4b872f26
  415c04:	(bad)  
  415c06:	sbb    eax,0xfceb8c7b
  415c0b:	stos   DWORD PTR es:[edi],eax
  415c0c:	sbb    al,0x61
  415c0e:	jae    0x415c48
  415c10:	cwde   
  415c11:	repnz retf 
  415c13:	gs xchg ah,bh
  415c16:	xor    DWORD PTR [ebp-0x1cd81a81],eax
  415c1c:	inc    eax
  415c1d:	jecxz  0x415c12
  415c1f:	mov    ah,0xf1
  415c21:	addr16 popa 
  415c23:	jmp    0xbbb4828d
  415c28:	mov    eax,0xa841872e
  415c2d:	pushf  
  415c2e:	xchg   esi,eax
  415c2f:	inc    ebp
  415c30:	mov    ah,0x82
  415c32:	enter  0xe040,0x34
  415c36:	das    
  415c37:	and    al,0x64
  415c39:	shr    DWORD PTR [ebx-0x56],cl
  415c3c:	mov    esi,0x1d5adb2a
  415c41:	mov    edx,ebx
  415c43:	cli    
  415c44:	mov    ?,esi
  415c46:	ins    BYTE PTR es:[edi],dx
  415c47:	std    
  415c48:	add    dl,BYTE PTR [edx+0x37ec72a5]
  415c4e:	xchg   esp,eax
  415c4f:	sub    al,0x65
  415c51:	or     BYTE PTR [ecx-0x1ec0bd4f],ch
  415c57:	loope  0x415c00
  415c59:	mov    al,0x5
  415c5b:	out    dx,eax
  415c5c:	adc    ecx,esi
  415c5e:	loop   0x415c5a
  415c60:	and    DWORD PTR [edx+0x39],esi
  415c63:	loope  0x415c32
  415c65:	test   DWORD PTR [ebp-0x4b],ebp
  415c68:	clc    
  415c69:	(bad)  
  415c6a:	jg     0x415c8b
  415c6c:	(bad)  
  415c6d:	test   al,0xf9
  415c6f:	sub    esi,DWORD PTR [eax-0x3e]
  415c72:	aaa    
  415c73:	call   0xb626:0x97ad6b16
  415c7a:	fidivr DWORD PTR [eax]
  415c7c:	ret    0x1959
  415c7f:	lods   al,BYTE PTR ds:[esi]
  415c80:	adc    BYTE PTR [ebx+0x69872894],0x37
  415c87:	jae    0x415c7b
  415c89:	sbb    DWORD PTR [ebp+0xf280c8],0x16befdc0
  415c93:	in     eax,dx
  415c94:	bound  ebx,QWORD PTR [edx-0x2d]
  415c97:	nop
  415c98:	or     dl,BYTE PTR [esp+ebp*4]
  415c9b:	pop    ds
  415c9c:	push   eax
  415c9d:	or     dl,BYTE PTR [eax+0x3c3d41a]
  415ca3:	mov    cl,0x43
  415ca5:	mov    cl,0x75
  415ca7:	pop    edx
  415ca8:	and    al,0x8
  415caa:	mov    ds:0x94fbddd3,al
  415caf:	cmc    
  415cb0:	in     eax,dx
  415cb1:	sti    
  415cb2:	pop    ss
  415cb3:	push   0xfffffffd
  415cb5:	jl     0x415c9d
  415cb7:	ror    BYTE PTR [edi+0x5b],0x3b
  415cbb:	adc    al,0xf0
  415cbd:	rcl    BYTE PTR [edi+0x3e],0x75
  415cc1:	xchg   BYTE PTR [esi-0x6e5800e8],dl
  415cc7:	xchg   edi,eax
  415cc8:	(bad)  
  415cc9:	jecxz  0x415cd0
  415ccb:	aam    0x32
  415ccd:	jae    0x415cc7
  415ccf:	mov    ebp,ds
  415cd1:	sub    al,0xe3
  415cd3:	fdivr  st(5),st
  415cd5:	shl    ah,1
  415cd7:	mov    ds:0x5d38ff3a,eax
  415cdc:	fsubr  DWORD PTR [ebx+0x3e]
  415cdf:	hlt    
  415ce0:	es inc esi
  415ce2:	mov    ch,0x64
  415ce4:	fwait
  415ce5:	aas    
  415ce6:	lahf   
  415ce7:	ret    0xecba
  415cea:	fimul  DWORD PTR [esi]
  415cec:	iret   
  415ced:	pop    ds
  415cee:	test   al,0xcb
  415cf0:	mov    ch,0xc6
  415cf2:	push   eax
  415cf3:	xchg   DWORD PTR [edi+ebx*1],ebp
  415cf6:	out    dx,al
  415cf7:	and    al,0x1a
  415cf9:	push   ecx
  415cfa:	adc    ebx,DWORD PTR [edx+eiz*8-0x7f674f31]
  415d01:	outs   dx,BYTE PTR ds:[esi]
  415d02:	push   ebx
  415d03:	jmp    0x6877:0x42b9a87f
  415d0a:	xor    bl,al
  415d0c:	cmp    BYTE PTR [ebp-0x37],bh
  415d0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d10:	xchg   eax,edx
  415d12:	retf   
  415d13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d14:	dec    ecx
  415d15:	jge    0x415d5c
  415d17:	jb     0x415d5a
  415d19:	xchg   ecx,esi
  415d1b:	or     ah,BYTE PTR [ebx-0x8]
  415d1e:	dec    ebx
  415d1f:	push   0xffffffd8
  415d21:	add    bh,ch
  415d23:	les    edx,FWORD PTR [eax]
  415d25:	cmp    dl,BYTE PTR ds:0xc662b573
  415d2b:	mov    esp,0x3b2fdc8
  415d30:	xchg   BYTE PTR [edx],dl
  415d32:	leave  
  415d33:	or     eax,0x78437970
  415d38:	or     BYTE PTR [ecx+0x48591003],cl
  415d3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d3f:	xchg   esi,eax
  415d40:	add    ch,BYTE PTR [edx+0x24e805cc]
  415d46:	aam    0xa6
  415d48:	scas   eax,DWORD PTR es:[edi]
  415d49:	sub    al,0x6e
  415d4b:	fwait
  415d4c:	mov    ds,eax
  415d4e:	je     0x415cff
  415d50:	mov    eax,0xf6a262dd
  415d55:	sar    BYTE PTR [edx],cl
  415d57:	pop    esp
  415d58:	mov    bh,0x4e
  415d5a:	adc    cl,BYTE PTR [eax-0x4550a1bb]
  415d60:	mov    ecx,0x5a846cbf
  415d65:	mov    ebx,DWORD PTR [bx+di]
  415d68:	sbb    edx,DWORD PTR [edx]
  415d6a:	and    DWORD PTR [ecx],ecx
  415d6c:	mov    al,0xac
  415d6e:	stos   BYTE PTR es:[edi],al
  415d6f:	xlat   BYTE PTR ds:[ebx]
  415d70:	xchg   BYTE PTR [esp+esi*8],cl
  415d73:	mov    eax,0xac4b050f
  415d78:	dec    ebx
  415d79:	pause  
  415d7b:	add    bl,0x23
  415d7e:	loope  0x415da8
  415d80:	lods   eax,DWORD PTR ds:[esi]
  415d81:	out    0x81,al
  415d83:	arpl   WORD PTR [ebp-0x33961cc2],ax
  415d89:	mov    al,0x60
  415d8b:	outs   dx,BYTE PTR ds:[esi]
  415d8c:	mov    ecx,0x2cedf0ef
  415d91:	adc    BYTE PTR [eax+0x50048741],cl
  415d97:	mov    ds:0xecb04d1d,eax
  415d9c:	jle    0x415db1
  415d9e:	ret    
  415d9f:	push   ecx
  415da0:	adc    dl,BYTE PTR [edi]
  415da2:	cmc    
  415da3:	int    0xdf
  415da5:	push   ebx
  415da6:	pop    esp
  415da7:	push   ebx
  415da8:	push   ebx
  415da9:	test   al,0x31
  415dab:	int3   
  415dac:	push   esi
  415dad:	jmp    0x415e25
  415daf:	scas   eax,DWORD PTR es:[edi]
  415db0:	adc    BYTE PTR [edi+esi*1-0x1a],dl
  415db4:	xor    edx,edi
  415db6:	add    al,BYTE PTR [eax+edi*1+0x5df42d1f]
  415dbd:	les    ebx,FWORD PTR [ecx+0x5e83ec21]
  415dc3:	ins    DWORD PTR es:[edi],dx
  415dc4:	adc    BYTE PTR [edi+0x61bc38c3],0xd3
  415dcb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415dcc:	gs jno 0x415e43
  415dcf:	sbb    cl,ah
  415dd1:	or     BYTE PTR [esi+0x14],0x46
  415dd5:	xor    al,0x46
  415dd7:	xchg   esp,eax
  415dd8:	xchg   ebx,eax
  415dd9:	pop    ds
  415dda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ddb:	jo     0x415e41
  415ddd:	retf   
  415dde:	mov    dh,0x13
  415de0:	icebp  
  415de1:	or     edi,DWORD PTR [edi+0x6f]
  415de4:	std    
  415de5:	adc    DWORD PTR [esi],ebx
  415de7:	outs   dx,BYTE PTR ds:[esi]
  415de8:	or     al,0xc
  415dea:	xor    al,0x7f
  415ded:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415def:	rcl    DWORD PTR [ebx-0x5c],1
  415df2:	mov    ebx,0xb84e7178
  415df7:	fdivr  QWORD PTR [eax]
  415df9:	mov    BYTE PTR [edi+0x4bbdc734],ah
  415dff:	mov    ch,0xe4
  415e01:	sbb    esp,DWORD PTR [eax+0x1947c758]
  415e07:	retf   0xbdeb
  415e0a:	ss dec ebx
  415e0c:	in     eax,dx
  415e0d:	rcl    DWORD PTR [esi-0x3ff04eba],cl
  415e13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e14:	or     esi,DWORD PTR [edx-0xe7172f3]
  415e1a:	xchg   esp,eax
  415e1b:	xor    ebp,DWORD PTR [eax]
  415e1d:	mov    bl,0x8f
  415e1f:	rol    DWORD PTR [edi+edx*2-0x1f],cl
  415e23:	fwait
  415e24:	shl    dl,cl
  415e26:	hlt    
  415e27:	dec    eax
  415e28:	mov    bh,0x48
  415e2a:	pop    edx
  415e2b:	(bad)  
  415e2c:	xor    eax,0x40701e13
  415e31:	fwait
  415e32:	mov    DWORD PTR [esi-0x38],esp
  415e35:	jle    0x415e60
  415e37:	cmp    eax,0xb2269d2c
  415e3c:	cwde   
  415e3d:	mov    bh,0x6d
  415e3f:	aas    
  415e40:	pop    ss
  415e41:	ins    BYTE PTR es:[edi],dx
  415e42:	dec    eax
  415e43:	adc    BYTE PTR [edx-0x35],ah
  415e46:	(bad)  
  415e48:	mov    esp,0x57de2deb
  415e4d:	std    
  415e4e:	dec    eax
  415e4f:	adc    DWORD PTR [edi],0x513f294c
  415e55:	clc    
  415e56:	or     ebp,DWORD PTR [esi-0x1c]
  415e59:	and    al,0xbb
  415e5b:	xchg   ecx,eax
  415e5c:	mov    cl,0x57
  415e5e:	jmp    0x415ea5
  415e60:	movhps QWORD PTR [ecx+0x63],xmm4
  415e64:	jmp    0xc64c3165
  415e69:	push   ecx
  415e6a:	cmp    eax,DWORD PTR [esp+edx*1]
  415e6d:	ds cmp bl,0x50
  415e71:	std    
  415e72:	mov    cl,0xc6
  415e74:	mov    es,WORD PTR [edi+0x32]
  415e77:	mov    dh,0xc9
  415e79:	dec    edi
  415e7a:	xchg   edx,edi
  415e7c:	repnz inc ebx
  415e7e:	std    
  415e7f:	xchg   ebp,eax
  415e80:	jb     0x415e06
  415e82:	xchg   edx,eax
  415e83:	popa   
  415e84:	enter  0xa2ca,0xcd
  415e88:	cld    
  415e89:	jno    0x415edc
  415e8b:	dec    esi
  415e8c:	mov    DWORD PTR [ebx],ecx
  415e8e:	sbb    esp,edi
  415e90:	jmp    0xb9cf9be4
  415e95:	rol    DWORD PTR ds:0xcd68b36,0xfe
  415e9c:	jl     0x415ed2
  415e9e:	jnp    0x415e46
  415ea0:	sub    DWORD PTR ds:0x1c8e4de8,0xffffffc6
  415ea7:	dec    ebx
  415ea8:	and    al,0xaa
  415eaa:	(bad)  
  415eab:	cli    
  415eac:	out    0x20,eax
  415eae:	cmp    DWORD PTR [ecx-0x78116efc],0xffffffef
  415eb5:	aaa    
  415eb6:	push   ss
  415eb7:	add    al,0x84
  415eb9:	lahf   
  415eba:	in     eax,0xe9
  415ebc:	mov    edi,DWORD PTR [edi+0x6d76300d]
  415ec2:	in     eax,0x3a
  415ec4:	adc    cl,bh
  415ec6:	mov    ebx,0x5cfe06e1
  415ecb:	xchg   edi,eax
  415ecc:	sbb    DWORD PTR [eax+0x3f3ae7cb],0x76
  415ed3:	and    al,0xa4
  415ed5:	mov    ch,0x1
  415ed7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ed8:	xchg   edi,eax
  415ed9:	mov    ds:0xd9c2a7a2,eax
  415ede:	inc    ebx
  415edf:	imul   esi,DWORD PTR [edi-0x34],0xffffffda
  415ee3:	mov    BYTE PTR [eax-0x39],ah
  415ee6:	sti    
  415ee7:	arpl   WORD PTR [eax],cx
  415ee9:	lock dec edi
  415eeb:	mov    ecx,0xbeb44cd0
  415ef0:	xchg   edi,eax
  415ef1:	in     al,dx
  415ef2:	or     BYTE PTR [edx],bh
  415ef4:	cmp    ecx,ecx
  415ef6:	push   cs
  415ef7:	add    eax,0xe06fc09a
  415efc:	out    0x85,eax
  415efe:	into   
  415eff:	cli    
  415f00:	add    DWORD PTR [edx-0x75],esp
  415f03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f04:	xchg   edx,eax
  415f05:	bound  esi,QWORD PTR ds:0x183cc193
  415f0b:	mov    cl,0x24
  415f0d:	jne    0x415f30
  415f0f:	cwde   
  415f10:	scas   eax,DWORD PTR es:[edi]
  415f11:	sbb    eax,0x50519a6
  415f16:	test   eax,0xfb114d88
  415f1b:	xchg   ch,bl
  415f1d:	and    dl,BYTE PTR ds:0xb0ed0169
  415f23:	lods   eax,DWORD PTR ds:[esi]
  415f24:	in     eax,dx
  415f25:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  415f27:	push   cs
  415f28:	jnp    0x415f02
  415f2a:	adc    DWORD PTR [edx-0x7532b4b2],edi
  415f30:	sub    cl,bh
  415f32:	ja     0x415f8a
  415f34:	cmp    BYTE PTR [ebp-0x7e7c725c],cl
  415f3a:	mov    bh,0x4c
  415f3c:	push   ss
  415f3d:	adc    BYTE PTR [ebx],cl
  415f3f:	pusha  
  415f40:	mov    al,ds:0xbed23c29
  415f45:	lahf   
  415f46:	sbb    ebp,DWORD PTR [edi+edi*8+0x9]
  415f4a:	scas   al,BYTE PTR es:[edi]
  415f4b:	mov    bl,0x78
  415f4d:	retf   0x8516
  415f50:	mov    BYTE PTR [eax-0x22],ch
  415f53:	rcl    cl,cl
  415f55:	xlat   BYTE PTR ds:[ebx]
  415f56:	xchg   edi,eax
  415f57:	push   edx
  415f58:	adc    al,0x75
  415f5a:	lea    edi,[edx+0x17]
  415f5d:	dec    eax
  415f5e:	neg    BYTE PTR [edx-0x1a1c8588]
  415f64:	jns    0x415eff
  415f66:	frstor [ebx+eax*2]
  415f69:	int    0xb7
  415f6b:	jle    0x415fcd
  415f6d:	and    DWORD PTR [esp+edi*2-0x781c1f52],0xffffff8a
  415f75:	and    DWORD PTR [esi],ebp
  415f77:	jp     0x415f3d
  415f79:	stos   DWORD PTR es:[edi],eax
  415f7a:	scas   eax,DWORD PTR es:[edi]
  415f7b:	push   ss
  415f7c:	xor    eax,0xf658c9d0
  415f81:	in     eax,dx
  415f82:	mov    BYTE PTR [ecx-0x35],al
  415f85:	stos   BYTE PTR es:[edi],al
  415f86:	lahf   
  415f87:	jge    0x416002
  415f89:	inc    edx
  415f8a:	sahf   
  415f8b:	push   eax
  415f8c:	xor    eax,0x7823178b
  415f91:	and    DWORD PTR [ebx-0x4c37ea7e],edx
  415f97:	test   ah,dl
  415f99:	mov    eax,0xf47e9e88
  415f9e:	sbb    edi,esi
  415fa0:	scas   eax,DWORD PTR es:[edi]
  415fa1:	addr16 mov al,ds:0x3437
  415fa5:	fcmovne st,st(1)
  415fa7:	mov    dl,0x4d
  415fa9:	pop    ds
  415faa:	xor    BYTE PTR [esi-0x52f21b05],dl
  415fb0:	loope  0x415fc9
  415fb2:	fmul   DWORD PTR [ebx+0x6e]
  415fb5:	and    eax,0x6f62e4e8
  415fba:	push   0xfffffff6
  415fbc:	popf   
  415fbd:	sbb    ah,BYTE PTR [esi+0x7cdc7c01]
  415fc3:	xchg   ebx,eax
  415fc4:	jl     0x415f93
  415fc6:	mov    esi,0xb58638d9
  415fcb:	mov    WORD PTR [edi+0x22],es
  415fce:	scas   al,BYTE PTR es:[edi]
  415fcf:	cld    
  415fd0:	out    0xec,eax
  415fd2:	repz push edx
  415fd4:	pushf  
  415fd5:	pop    ds
  415fd6:	jno    0x415ff5
  415fd8:	pop    ebx
  415fd9:	sbb    al,BYTE PTR es:[esi-0x2a]
  415fdd:	and    cl,BYTE PTR [esi-0x68f6549e]
  415fe3:	sbb    DWORD PTR [edx+0x45],edi
  415fe6:	js     0x415f79
  415fe8:	cs nop
  415fea:	mov    dh,bl
  415fec:	xor    al,0xf5
  415fee:	adc    al,0xe9
  415ff0:	sar    BYTE PTR [esi-0x75fc5636],cl
  415ff6:	out    0x8f,al
  415ff8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ff9:	pop    esi
  415ffa:	mov    BYTE PTR ds:[edi+0x7c],bl
  415ffe:	mov    ecx,0xd81d34f7
  416003:	imul   ebp,DWORD PTR [ebx],0xffffffeb
  416006:	lahf   
  416007:	(bad)  
  416009:	rcl    al,1
  41600b:	push   edx
  41600c:	inc    edi
  41600d:	xchg   esp,eax
  41600e:	mov    cl,0x80
  416010:	cld    
  416011:	mov    ecx,0x3d475046
  416016:	push   ebx
  416017:	adc    ecx,DWORD PTR [ebx]
  416019:	les    ebp,FWORD PTR [esi-0x752a04b3]
  41601f:	cmp    bl,dl
  416021:	lds    esi,FWORD PTR [ebp-0xe68ae32]
  416027:	(bad)
  41602a:	rol    DWORD PTR [ecx+0x74],1
  41602d:	scas   eax,DWORD PTR es:[edi]
  41602e:	mov    al,0x85
  416030:	jg     0x415fe9
  416032:	sub    DWORD PTR [edx-0x39],ebx
  416035:	cdq    
  416036:	mov    dl,0xb2
  416038:	xchg   BYTE PTR [esi],cl
  41603a:	out    0xaa,al
  41603c:	push   ds
  41603d:	cmp    al,0xe6
  41603f:	jmp    0x3255:0x778568cf
  416046:	xchg   DWORD PTR [edx-0x68da11d9],edx
  41604c:	daa    
  41604d:	pop    edi
  41604e:	add    DWORD PTR [edx+0x12017584],0xffffffbc
  416055:	sar    edx,1
  416057:	iret   
  416058:	jbe    0x41605e
  41605a:	repz ret 0xa476
  41605e:	ins    DWORD PTR es:[edi],dx
  41605f:	xchg   esp,eax
  416060:	lock pop esi
  416062:	sbb    eax,0xa7a44e4e
  416067:	adc    BYTE PTR [edi+0x33084d8b],0xc6
  41606e:	lea    eax,[eax+ecx*1+0x3272ec]
  416075:	mov    DWORD PTR [ebp+0x8],eax
  416078:	mov    eax,DWORD PTR [ebp-0xc]
  41607b:	mov    ecx,DWORD PTR [ebp+0x14]
  41607e:	xor    eax,esi
  416080:	add    eax,edi
  416082:	imul   eax,DWORD PTR [ecx]
  416085:	mov    ecx,DWORD PTR [ebp-0x4]
  416088:	mov    edx,DWORD PTR [ebp+0x8]
  41608b:	xor    ecx,esi
  41608d:	lea    ecx,[ecx+edx*1+0x3272ec]
  416094:	cmp    ecx,eax
  416096:	jne    0x413ca6
  41609c:	mov    eax,DWORD PTR [ebp-0x4]
  41609f:	xor    eax,esi
  4160a1:	add    eax,edi
  4160a3:	mov    DWORD PTR [ebp-0x10],eax
  4160a6:	mov    ebx,0x65655
  4160ab:	add    ebx,0x3234
  4160b1:	xchg   ebx,esi
  4160b3:	xor    ebx,ebx
  4160b5:	push   esi
  4160b6:	mov    esi,ebx
  4160b8:	pop    ebx
  4160b9:	mov    edx,esi
  4160bb:	add    ebx,0x1002
  4160c1:	lea    eax,[ebp-0x18]
  4160c4:	add    edx,eax
  4160c6:	add    edx,0x5
  4160c9:	push   edx
  4160ca:	inc    esi
  4160cb:	pop    ecx
  4160cc:	dec    ecx
  4160cd:	xchg   ecx,eax
  4160ce:	dec    eax
  4160cf:	xchg   ecx,eax
  4160d0:	dec    ecx
  4160d1:	xchg   ecx,edx
  4160d3:	dec    edx
  4160d4:	push   edx
  4160d5:	mov    edx,ebx
  4160d7:	pop    ebx
  4160d8:	dec    ebx
  4160d9:	call   DWORD PTR [ebx]
  4160db:	cmp    DWORD PTR [ebp+0x10],esi
  4160de:	je     0x4160fd
  4160e4:	xchg   edx,eax
  4160e5:	push   0xb
  4160e7:	pop    ecx
  4160e8:	push   0x4
  4160ea:	pop    ebx
  4160eb:	inc    ebx
  4160ec:	xchg   ebx,ecx
  4160ee:	sub    ebx,ecx
  4160f0:	xchg   ebx,ecx
  4160f2:	dec    ecx
  4160f3:	dec    ecx
  4160f4:	mov    eax,DWORD PTR [ebp-0x1c]
  4160f7:	imul   eax,ecx
  4160fa:	add    esp,eax
  4160fc:	xchg   edx,eax
  4160fd:	push   eax
  4160fe:	xor    ebx,ebx
  416100:	mov    edx,esp
  416102:	dec    edx
  416103:	inc    ebx
  416104:	add    ebx,DWORD PTR [edx+ebx*1]
  416107:	dec    ebx
  416108:	xor    edx,edx
  41610a:	add    DWORD PTR [ebp-0x10],ebx
  41610d:	pop    ebx
  41610e:	mov    eax,DWORD PTR [ebp-0x10]
  416111:	pop    edi
  416112:	pop    esi
  416113:	pop    ebx
  416114:	leave  
  416115:	ret    0x10
  416118:	push   ebp
  416119:	mov    ebp,esp
  41611b:	push   ecx
  41611c:	mov    DWORD PTR [ebp-0x4],0xf89c85bc
  416123:	and    eax,0x6d5c
  416128:	mov    eax,DWORD PTR [ebp-0x4]
  41612b:	or     DWORD PTR ds:0x42d00c,edx
  416131:	mov    edx,DWORD PTR [ebp+0x10]
  416134:	dec    ecx
  416135:	mov    ecx,0x75108a4
  41613a:	xor    eax,ecx
  41613c:	add    eax,0x3272ec
  416141:	adc    DWORD PTR ds:0x42b00c,0x375
  41614b:	mov    DWORD PTR [edx],eax
  41614d:	sub    DWORD PTR ds:0x42b008,ecx
  416153:	mov    eax,DWORD PTR [ebp+0xc]
  416156:	and    DWORD PTR ds:0x42b014,0x0
  416160:	xor    edx,edx
  416162:	add    edx,DWORD PTR ds:0x42b014
  416168:	inc    edx
  416169:	mov    DWORD PTR ds:0x42b014,edx
  41616f:	cmp    DWORD PTR ds:0x42b014,0xf
  416176:	ja     0x4161cd
  41617c:	jmp    0x4161a6
  416181:	push   DWORD PTR [ebp-0x28]
  416184:	push   DWORD PTR [ebp-0x18]
  416187:	push   0x42b00c
  41618c:	push   0x1f1a
  416191:	push   0x8ba1
  416196:	push   0x2c78
  41619b:	push   0x5355
  4161a0:	call   DWORD PTR ds:0x43001b
  4161a6:	cmp    DWORD PTR ds:0x42b014,0xe
  4161ad:	jne    0x4161c0
  4161b3:	mov    edx,DWORD PTR ds:0x42b014
  4161b9:	inc    edx
  4161ba:	mov    DWORD PTR ds:0x42b014,edx
  4161c0:	cmp    DWORD PTR ds:0x42b014,0x1f
  4161c7:	jb     0x416160
  4161cd:	xor    eax,ecx
  4161cf:	push   esi
  4161d0:	mov    esi,DWORD PTR [ebp+0x10]
  4161d3:	mov    edx,0x3272ec
  4161d8:	add    eax,edx
  4161da:	mov    DWORD PTR [esi+0x4],eax
  4161dd:	mov    eax,DWORD PTR [ebp+0x14]
  4161e0:	mov    esi,DWORD PTR [ebp+0x10]
  4161e3:	mov    DWORD PTR [esi+0x8],eax
  4161e6:	mov    eax,DWORD PTR [ebp+0x18]
  4161e9:	mov    esi,DWORD PTR [ebp+0x10]
  4161ec:	mov    DWORD PTR [esi+0xc],eax
  4161ef:	mov    eax,DWORD PTR [ebp+0x1c]
  4161f2:	mov    esi,DWORD PTR [ebp+0x10]
  4161f5:	mov    DWORD PTR [esi+0x10],eax
  4161f8:	mov    eax,DWORD PTR [ebp+0x8]
  4161fb:	xor    eax,ecx
  4161fd:	add    eax,edx
  4161ff:	pop    esi
  416200:	leave  
  416201:	ret    0x18
  416204:	push   ebp
  416205:	mov    ebp,esp
  416207:	sub    esp,0x9c
  41620d:	movzx  eax,BYTE PTR ds:0x429024
  416214:	sbb    eax,DWORD PTR ds:0x429000
  41621a:	mov    ds:0x429024,eax
  41621f:	mov    ecx,DWORD PTR [ebp+0x8]
  416222:	mov    eax,0x8a94
  416227:	xor    ax,WORD PTR [ecx+0x20]
  41622b:	mov    ecx,0x3b56
  416230:	xor    DWORD PTR ds:0x429008,0x611c
  41623a:	add    ax,cx
  41623d:	movzx  eax,ax
  416240:	mov    DWORD PTR [ebp-0x10],eax
  416243:	and    DWORD PTR ds:0x429014,0xd29
  41624d:	mov    BYTE PTR [ebp-0x1],0x7d
  416251:	adc    ecx,DWORD PTR ds:0x42d004
  416257:	lea    eax,[ebp-0x1]
  41625a:	mov    DWORD PTR ds:0x42b00c,0x12
  416264:	cmp    DWORD PTR ds:0x42b00c,0x0
  41626b:	je     0x4162a3
  416271:	cmp    DWORD PTR ds:0x42b00c,0x17
  416278:	jbe    0x4162a3
  41627e:	jmp    0x416291
  416283:	push   DWORD PTR [ebp-0x28]
  416286:	push   0x84ea
  41628b:	call   DWORD PTR ds:0x430027
  416291:	mov    ecx,DWORD PTR ds:0x42b00c
  416297:	dec    ecx
  416298:	mov    DWORD PTR ds:0x42b00c,ecx
  41629e:	jmp    0x416264
  4162a3:	mov    DWORD PTR [ebp-0xc],eax
  4162a6:	mov    al,BYTE PTR [ebp-0x1]
  4162a9:	sub    DWORD PTR ds:0x42a010,0x238f
  4162b3:	mov    ecx,DWORD PTR [ebp-0xc]
  4162b6:	xor    DWORD PTR ds:0x42a01c,0x42b01c
  4162c0:	xor    al,0x79
  4162c2:	add    DWORD PTR ds:0x42c01c,0x429014
  4162cc:	sub    al,0x3
  4162ce:	add    DWORD PTR ds:0x42c01c,0x2d5e
  4162d8:	mov    BYTE PTR [ecx],al
  4162da:	and    DWORD PTR ds:0x429004,0x0
  4162e4:	xor    eax,eax
  4162e6:	xor    eax,DWORD PTR ds:0x429004
  4162ec:	inc    eax
  4162ed:	mov    ds:0x429004,eax
  4162f2:	cmp    DWORD PTR ds:0x429004,0x6
  4162f9:	jge    0x41633a
  4162ff:	jmp    0x416312
  416304:	push   DWORD PTR [ebp-0x10]
  416307:	push   0x8717
  41630c:	call   DWORD PTR ds:0x43002b
  416312:	cmp    DWORD PTR ds:0x429004,0x5
  416319:	jne    0x41632d
  41631f:	xor    eax,eax
  416321:	xor    eax,DWORD PTR ds:0x429004
  416327:	inc    eax
  416328:	mov    ds:0x429004,eax
  41632d:	cmp    DWORD PTR ds:0x429004,0x11
  416334:	jb     0x4162e4
  41633a:	mov    DWORD PTR [ebp-0x18],0xf89c85b0
  416341:	and    DWORD PTR ds:0x42d014,0x6f44
  41634b:	push   ebx
  41634c:	not    DWORD PTR ds:0x42a010
  416352:	mov    DWORD PTR [ebp-0x8],0xf89c85b1
  416359:	mov    ecx,DWORD PTR [ebp-0x18]
  41635c:	add    DWORD PTR ds:0x429010,0x796f
  416366:	push   esi
  416367:	mov    DWORD PTR ds:0x42a004,0x19
  416371:	cmp    DWORD PTR ds:0x42a004,0x0
  416378:	je     0x4163b7
  41637e:	cmp    DWORD PTR ds:0x42a004,0x28
  416385:	jl     0x4163b7
  41638b:	jmp    0x4163a5
  416390:	push   0x5678
  416395:	push   0x429018
  41639a:	push   0x42f025
  41639f:	call   DWORD PTR ds:0x430033
  4163a5:	mov    esi,DWORD PTR ds:0x42a004
  4163ab:	dec    esi
  4163ac:	mov    DWORD PTR ds:0x42a004,esi
  4163b2:	jmp    0x416371
  4163b7:	mov    eax,0x75108a4
  4163bc:	and    DWORD PTR ds:0x42b01c,0x6a8d
  4163c6:	xor    ecx,eax
  4163c8:	mov    esi,DWORD PTR ds:0x42b000
  4163ce:	xor    DWORD PTR ds:0x42a010,esi
  4163d4:	mov    esi,0x3272ec
  4163d9:	sbb    DWORD PTR ds:0x42a000,0x4a3d
  4163e3:	push   edi
  4163e4:	add    ecx,esi
  4163e6:	mov    DWORD PTR ds:0x42a018,0x89b
  4163f0:	jmp    0x41641e
  4163f5:	mov    DWORD PTR ds:0x42c010,0x3697
  4163ff:	mov    dl,BYTE PTR [ebp-0x1]
  416402:	mov    DWORD PTR ds:0x42d004,0x1aee
  41640c:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  416413:	mov    DWORD PTR ds:0x42b014,0x1f71
  41641d:	inc    ecx
  41641e:	cmp    ecx,0x40
  416421:	mov    DWORD PTR ds:0x429024,0xce6
  41642b:	jb     0x4163f5
  416431:	mov    edx,DWORD PTR [ebp-0x18]
  416434:	xor    edx,eax
  416436:	add    edx,esi
  416438:	jmp    0x4164b8
  41643d:	sub    ecx,edi
  41643f:	mov    edi,DWORD PTR [ebp+0x8]
  416442:	mov    ecx,DWORD PTR ds:0x42c018
  416448:	or     DWORD PTR ds:0x42d010,ecx
  41644e:	mov    ecx,0x8a94
  416453:	xor    cx,WORD PTR [edi+edx*4+0x2]
  416458:	mov    edi,0x3b56
  41645d:	add    DWORD PTR ds:0x42d00c,0x618e
  416467:	add    cx,di
  41646a:	adc    DWORD PTR ds:0x42a000,0x96b
  416474:	movzx  ecx,cx
  416477:	mov    DWORD PTR ds:0x42b004,0x7547
  416481:	mov    DWORD PTR [ebp-0xc],ecx
  416484:	mov    ecx,DWORD PTR [ebp+0x8]
  416487:	movzx  ecx,WORD PTR [ecx+edx*4]
  41648b:	add    DWORD PTR ds:0x42a00c,0x429020
  416495:	xor    ecx,0x8a94
  41649b:	adc    DWORD PTR ds:0x42a01c,0x473e
  4164a5:	add    ecx,edi
  4164a7:	mov    edi,0x26b3
  4164ac:	mov    edi,DWORD PTR [ebp-0xc]
  4164af:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  4164b6:	inc    ecx
  4164b7:	inc    edx
  4164b8:	mov    ecx,DWORD PTR [ebp-0x10]
  4164bb:	cmp    edx,ecx
  4164bd:	jmp    0x418820
  4164c2:	shl    al,cl
  4164c4:	inc    edi
  4164c5:	dec    ecx
  4164c6:	cmp    edi,DWORD PTR [ecx+0x7fc9f3b8]
  4164cc:	push   cs
  4164cd:	mov    eax,0xd8f67b3e
  4164d2:	pop    ebx
  4164d3:	cmp    BYTE PTR [ebp+0x7a],bh
  4164d6:	xor    BYTE PTR [edi+0x7a],bl
  4164d9:	jp     0x4164d0
  4164db:	(bad)  
  4164dc:	scas   al,BYTE PTR es:[edi]
  4164dd:	sbb    BYTE PTR [ecx-0x3b],dl
  4164e0:	fisttp QWORD PTR [edi-0x30]
  4164e3:	dec    ebx
  4164e4:	icebp  
  4164e5:	and    BYTE PTR [edi+0x57],0xd8
  4164e9:	mov    ebx,0xe197b15c
  4164ee:	xor    esi,edx
  4164f0:	scas   al,BYTE PTR es:[edi]
  4164f1:	xor    ebx,esi
  4164f3:	hlt    
  4164f4:	icebp  
  4164f5:	(bad)  
  4164f6:	push   ds
  4164f7:	inc    eax
  4164f8:	adc    BYTE PTR [edi-0x2103a4c1],ah
  4164fe:	call   0x5d2e:0xebd216d
  416505:	push   ds
  416506:	mov    ecx,0xc8787978
  41650b:	or     al,0x2d
  41650d:	gs jle 0x416504
  416510:	jge    0x416574
  416512:	dec    ecx
  416513:	sbb    DWORD PTR [ebx+ebp*2-0x58],edi
  416517:	pop    edx
  416518:	mov    eax,0xb2389204
  41651d:	cmp    BYTE PTR [ebx-0x6190e247],bh
  416523:	stos   BYTE PTR es:[edi],al
  416524:	pop    ebp
  416525:	xor    dl,dh
  416527:	mov    al,ds:0x6ba3fd05
  41652c:	test   BYTE PTR [ebp-0x1c411715],0xa3
  416533:	retf   0x2964
  416536:	mov    dl,ch
  416538:	leave  
  416539:	mov    edx,0x3874abed
  41653e:	inc    esp
  41653f:	and    eax,DWORD PTR [edi]
  416541:	mov    ecx,0x85dba7cf
  416546:	imul   edi,eax,0xffffffef
  416549:	imul   bl
  41654b:	imul   esp,DWORD PTR [ecx+0x24],0x18
  41654f:	loopne 0x41658e
  416551:	bound  ebx,QWORD PTR [ecx]
  416553:	xchg   BYTE PTR ds:0x7863c3f1,ch
  416559:	inc    esp
  41655a:	ss or  al,0x61
  41655d:	sar    DWORD PTR [edx],cl
  41655f:	inc    edx
  416560:	in     al,0x73
  416562:	mov    edx,0x1c0b5fe8
  416567:	sbb    dh,BYTE PTR [esi-0x76]
  41656a:	out    0x51,eax
  41656c:	mov    ch,0x3a
  41656e:	sbb    esi,DWORD PTR [eax+0xdb2efea]
  416574:	cmp    al,0x8a
  416576:	nop
  416577:	stc    
  416578:	(bad)  
  416579:	fs mov ch,0x81
  41657c:	repz sub DWORD PTR [edx-0x19],esi
  416580:	repnz outs dx,BYTE PTR ds:[esi]
  416582:	mov    eax,0xa41b5168
  416587:	sub    eax,0xbaa510b2
  41658c:	sub    eax,0x922aeca1
  416591:	push   edi
  416592:	ror    BYTE PTR [eax-0xebf163b],cl
  416598:	mov    esi,0xcd402af0
  41659d:	jmp    FWORD PTR [ecx]
  41659f:	clc    
  4165a0:	pop    esp
  4165a1:	lods   eax,DWORD PTR ds:[esi]
  4165a2:	add    DWORD PTR [ebx-0x64],ecx
  4165a5:	lds    ecx,FWORD PTR ds:0xb51f4e60
  4165ab:	loopne 0x416619
  4165ad:	inc    esi
  4165ae:	xchg   esp,eax
  4165af:	push   0xb382f22c
  4165b4:	sbb    BYTE PTR gs:[esi],ch
  4165b7:	and    eax,DWORD PTR [ecx-0x2d]
  4165ba:	cpuid  
  4165bc:	test   DWORD PTR [edx-0x1a7a0440],ecx
  4165c2:	sub    ecx,DWORD PTR [ebx-0x27]
  4165c5:	xlat   BYTE PTR ds:[ebx]
  4165c6:	std    
  4165c7:	(bad)  
  4165c9:	push   esp
  4165ca:	int    0xf5
  4165cc:	mov    ah,0xc7
  4165ce:	fisub  DWORD PTR [esi]
  4165d0:	pop    ds
  4165d1:	inc    ebx
  4165d2:	push   ds
  4165d3:	and    al,0x96
  4165d5:	fimul  DWORD PTR [edi+0x26]
  4165d8:	neg    DWORD PTR [edx-0x1]
  4165db:	repz cmp eax,0x38f042bd
  4165e1:	mov    ah,0xda
  4165e3:	dec    esi
  4165e4:	call   0xb558:0x562ebf9e
  4165eb:	mov    BYTE PTR [ecx+0x3e],ah
  4165ee:	mov    ds:0x96887727,eax
  4165f3:	xor    al,BYTE PTR [ecx-0xc92b737]
  4165f9:	sub    DWORD PTR [edx],ecx
  4165fb:	push   0x9013c1df
  416600:	iret   
  416601:	add    ch,cl
  416603:	inc    edi
  416604:	inc    edx
  416605:	imul   eax,DWORD PTR [ebx+0x6368c8ff],0xb9948a4b
  41660f:	cld    
  416610:	ret    0x8890
  416613:	jne    0x4165ac
  416615:	fwait
  416616:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416617:	and    al,0x16
  416619:	fs or  dl,ah
  41661c:	jge    0x4165af
  41661e:	inc    ecx
  41661f:	jle    0x416633
  416621:	into   
  416622:	xchg   BYTE PTR [esi+0x4f],ah
  416625:	mov    edi,0x53d66657
  41662a:	jae    0x4165b1
  41662c:	mov    cx,0x782b
  416630:	mov    ah,0x6b
  416632:	add    eax,0x9ed0084c
  416637:	arpl   WORD PTR [edx],si
  416639:	jl     0x4166ac
  41663b:	pushf  
  41663c:	cmp    eax,0xc631cd02
  416641:	call   0x921c:0xb2929405
  416648:	das    
  416649:	into   
  41664a:	ret    
  41664b:	mov    ch,0x54
  41664d:	push   edx
  41664e:	jecxz  0x41662b
  416650:	add    BYTE PTR [ecx+0x658a408f],cl
  416656:	push   ss
  416657:	cwde   
  416658:	mov    eax,ds:0x8435ea56
  41665d:	xor    dh,al
  41665f:	mov    ds:0xbc5cf3d3,eax
  416664:	pop    esp
  416665:	pop    ss
  416666:	fiadd  WORD PTR [edx+0x39]
  416669:	clc    
  41666a:	adc    BYTE PTR ds:0xfe3409aa,dl
  416670:	and    ebp,esi
  416672:	fistp  QWORD PTR [edx-0x4abe9651]
  416678:	mov    al,BYTE PTR [eax+0x52]
  41667b:	fidivr DWORD PTR [edx+0x35]
  41667e:	fisubr DWORD PTR [eax+eiz*2]
  416681:	sub    DWORD PTR [esi+0x50],ecx
  416684:	fldcw  WORD PTR [edx+ebx*2+0x7c]
  416688:	add    al,0x2b
  41668a:	rcr    BYTE PTR [esi+ecx*8],0x79
  41668e:	pushw  0x57
  416691:	xor    bl,BYTE PTR [ebx-0x15]
  416694:	xlat   BYTE PTR ds:[ebx]
  416695:	sbb    BYTE PTR [esi-0x7d26896c],bl
  41669b:	sub    eax,0x6b4e16bc
  4166a0:	inc    esi
  4166a1:	jg     0x4166fa
  4166a3:	and    BYTE PTR ds:0xa6e5ce8f,bl
  4166a9:	dec    esi
  4166aa:	mov    bl,0xc0
  4166ac:	or     bh,bh
  4166ae:	data16 lahf 
  4166b0:	repnz ins BYTE PTR es:[edi],dx
  4166b2:	cmp    al,0xcb
  4166b4:	lock pop edi
  4166b6:	dec    ebp
  4166b7:	ret    
  4166b8:	mov    esi,0x2f0345c1
  4166bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4166be:	xor    BYTE PTR [edx],bl
  4166c0:	in     eax,dx
  4166c1:	inc    ebx
  4166c2:	aam    0x52
  4166c4:	push   ss
  4166c5:	jae    0x416677
  4166c7:	ds in  al,dx
  4166c9:	cmc    
  4166ca:	push   ds
  4166cb:	fist   WORD PTR [eax-0x17]
  4166ce:	and    al,0x7
  4166d0:	xor    al,0x42
  4166d2:	int    0x75
  4166d4:	test   dh,bh
  4166d6:	dec    esi
  4166d7:	lock cli 
  4166d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4166da:	arpl   WORD PTR ds:0xb22df2c5,ax
  4166e0:	inc    ebp
  4166e1:	inc    esi
  4166e2:	cwde   
  4166e3:	and    al,0xb9
  4166e5:	inc    eax
  4166e6:	jnp    0x41666a
  4166e8:	mov    dl,0xce
  4166ea:	xchg   esi,eax
  4166eb:	sub    eax,ebp
  4166ed:	inc    esi
  4166ee:	popf   
  4166ef:	int3   
  4166f0:	call   0xa67b:0x821d74ed
  4166f7:	pushf  
  4166f8:	dec    eax
  4166f9:	loop   0x4166c8
  4166fb:	xor    dl,BYTE PTR [esi-0x27]
  4166fe:	stos   BYTE PTR es:[edi],al
  4166ff:	dec    esp
  416700:	jl     0x4166c2
  416702:	cdq    
  416703:	pop    ss
  416704:	cmp    DWORD PTR [edx-0x3d],ebp
  416707:	sub    ah,BYTE PTR [ebx-0x3e]
  41670a:	loop   0x4166f6
  41670c:	outs   dx,DWORD PTR ds:[esi]
  41670d:	mov    ?,WORD PTR [ebx-0x51]
  416710:	jmp    0x4166e4
  416712:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416713:	mov    ds:0x8ccc3f4d,al
  416718:	sbb    al,0x3
  41671a:	mov    BYTE PTR [esi+0x1f],0x9d
  41671e:	aad    0x1e
  416720:	in     al,0x75
  416722:	fadd   st,st(3)
  416724:	test   esp,eax
  416726:	fidiv  DWORD PTR [eax+0xa53492d]
  41672c:	mov    edi,0xf29ca4ce
  416731:	jne    0x41677b
  416733:	imul   edx,DWORD PTR [edx],0x79a2163e
  416739:	aaa    
  41673a:	scas   eax,DWORD PTR es:[edi]
  41673b:	jp     0x4166d9
  41673d:	push   es
  41673e:	jo     0x41672e
  416740:	out    dx,eax
  416741:	adc    ch,BYTE PTR [eax+0x41bb5ad7]
  416747:	in     eax,dx
  416748:	stc    
  416749:	mov    al,ds:0xe8c4baab
  41674e:	sub    ebx,0x4c89d32f
  416754:	jns    0x416761
  416756:	leave  
  416757:	in     eax,0x2c
  416759:	mov    ebp,0xea25431d
  41675e:	push   0xffffff8c
  416760:	cmp    DWORD PTR [esi+0x7d],ebp
  416763:	arpl   WORD PTR [ebp+0x3f],sp
  416766:	or     al,0xec
  416768:	adc    BYTE PTR [ecx-0x7b1ef9cf],dh
  41676e:	mov    bh,0x59
  416770:	push   eax
  416771:	daa    
  416772:	pusha  
  416773:	lock ja 0x416784
  416776:	jb     0x416761
  416778:	cmp    bh,BYTE PTR [eax]
  41677a:	imul   edi,DWORD PTR [edi],0x44cfacf
  416780:	loopne 0x41674c
  416782:	add    DWORD PTR [esi+0x4d],0xe7431439
  416789:	pop    ss
  41678a:	and    al,0x8
  41678c:	std    
  41678d:	test   BYTE PTR [edx+ecx*2],0x1a
  416791:	sub    cl,BYTE PTR [edi+0x42]
  416794:	in     eax,dx
  416795:	icebp  
  416796:	fs xchg esp,eax
  416798:	pop    es
  416799:	out    0x80,eax
  41679b:	jge    0x416808
  41679d:	fsubr  st,st(6)
  41679f:	adc    BYTE PTR [eax-0x6b],bh
  4167a2:	fmul   QWORD PTR [esi-0x25]
  4167a5:	rcr    BYTE PTR [esi],1
  4167a7:	lahf   
  4167a8:	jecxz  0x4167e0
  4167aa:	data16 scas al,BYTE PTR es:[edi]
  4167ac:	dec    edi
  4167ad:	mov    dh,0x4f
  4167af:	inc    ebp
  4167b0:	mov    ecx,0x1acefc8f
  4167b5:	pop    ecx
  4167b6:	arpl   ax,cx
  4167b8:	into   
  4167b9:	mov    ah,0x98
  4167bb:	cmp    DWORD PTR [ebp+0xf74e9bd],0x6e
  4167c2:	into   
  4167c3:	xor    edi,DWORD PTR [ecx]
  4167c5:	xchg   BYTE PTR [esi+0x2b0d2095],dh
  4167cb:	aad    0x3e
  4167cd:	dec    esp
  4167ce:	rol    DWORD PTR fs:[ebp+0x15],1
  4167d2:	mov    eax,ds:0xdee88b6b
  4167d7:	outs   dx,DWORD PTR ds:[esi]
  4167d8:	call   0xdb4b5765
  4167dd:	sub    eax,0xc4a517fa
  4167e2:	push   ebx
  4167e3:	inc    edi
  4167e4:	mov    cl,0x36
  4167e6:	add    DWORD PTR [edi],edx
  4167e8:	cld    
  4167e9:	pop    esp
  4167ea:	adc    esi,0x5fbbf82e
  4167f0:	push   esi
  4167f1:	fwait
  4167f2:	outs   dx,DWORD PTR ds:[esi]
  4167f3:	mov    edx,0xc029829d
  4167f8:	xor    BYTE PTR [esi+0x3247d39],bh
  4167fe:	adc    dl,al
  416800:	dec    ebx
  416801:	in     al,0x8a
  416803:	xor    edx,DWORD PTR [esi-0x29]
  416806:	sahf   
  416807:	hlt    
  416808:	jl     0x41680b
  41680a:	adc    eax,0xfbea963f
  41680f:	pop    ss
  416810:	pop    ds
  416811:	rol    DWORD PTR [eax],1
  416813:	jge    0x4167b1
  416815:	dec    esi
  416816:	mov    esi,DWORD PTR [esp+edx*4-0x759a32ba]
  41681d:	cwde   
  41681e:	pop    ds
  41681f:	push   esp
  416820:	xchg   ebx,eax
  416821:	arpl   WORD PTR [eax+0x2958eb22],sp
  416827:	into   
  416828:	pop    esp
  416829:	mov    WORD PTR [ebp+eiz*4-0x51],cs
  41682d:	or     cl,al
  41682f:	push   es
  416830:	inc    edx
  416831:	cmp    DWORD PTR [edi],ebx
  416833:	in     eax,dx
  416834:	aad    0xa
  416836:	sbb    BYTE PTR [ebx+0x37e092b4],0x52
  41683d:	lea    edx,[edx+0x4b768bbc]
  416843:	mov    ecx,0xd9aee231
  416848:	call   0xe577:0x58e949b1
  41684f:	pop    ss
  416850:	loope  0x4167ec
  416852:	in     eax,dx
  416853:	sahf   
  416854:	and    BYTE PTR [esi-0x2077e6a5],dh
  41685a:	add    cl,cl
  41685c:	push   es
  41685d:	mov    dh,BYTE PTR [edx-0x50e8c421]
  416863:	lea    ebx,ds:0x94488fbc
  416869:	pusha  
  41686a:	rcl    DWORD PTR [eax],0x1c
  41686d:	sbb    esi,ebx
  41686f:	inc    esp
  416870:	push   ecx
  416871:	mov    ds:0x801a8b91,al
  416876:	xor    eax,0xa9f3ad9a
  41687b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41687c:	or     DWORD PTR [edi+0x50072274],ebx
  416882:	fld    DWORD PTR [esi+0x56ae96eb]
  416888:	or     DWORD PTR [ecx+0x13],eax
  41688b:	cmp    DWORD PTR [ebp+0x640637f],edx
  416891:	call   0xa7fe6d9e
  416896:	add    eax,0xb8a842d7
  41689b:	hlt    
  41689c:	icebp  
  41689d:	and    eax,0xe81c57fb
  4168a2:	repz pop edi
  4168a4:	pop    ebx
  4168a5:	dec    edx
  4168a6:	xor    DWORD PTR [esi+edx*4-0x25],edi
  4168aa:	stc    
  4168ab:	xchg   dh,dh
  4168ad:	and    al,0x5f
  4168af:	or     ecx,DWORD PTR [esp+edi*1]
  4168b2:	sbb    bl,BYTE PTR [eax]
  4168b4:	push   cs
  4168b5:	aam    0x59
  4168b7:	add    BYTE PTR [ecx],al
  4168b9:	mov    edx,0x3ec195f0
  4168be:	lds    esp,FWORD PTR [ebx+0x6e]
  4168c1:	adc    al,0x9
  4168c3:	call   0x180cdeef
  4168c8:	mov    al,ds:0xa98a0eab
  4168cd:	clc    
  4168ce:	sbb    ebp,DWORD PTR [ebp+0x18]
  4168d1:	lock enter 0x1095,0x6f
  4168d6:	mov    ah,0x5
  4168d8:	cld    
  4168d9:	pop    esp
  4168da:	xor    al,0xff
  4168dc:	ror    BYTE PTR [esi+0x1b],cl
  4168df:	jae    0x41691b
  4168e1:	mov    ds:0x488fabbf,al
  4168e6:	mov    edx,0xb40ec518
  4168eb:	mov    dh,0xc9
  4168ed:	(bad)  [eax]
  4168ef:	mov    bh,0x7b
  4168f1:	daa    
  4168f2:	inc    ebp
  4168f3:	std    
  4168f4:	mov    ds:0xa0a4446b,eax
  4168f9:	jns    0x4168ac
  4168fb:	fldenv [eax]
  4168fd:	bnd jge 0x416939
  416900:	dec    ebx
  416901:	add    edx,ebx
  416903:	and    DWORD PTR [edx+0x4493a80],esp
  416909:	mov    ah,0x5c
  41690b:	in     eax,0x9b
  41690d:	addr16 add edx,esi
  416910:	xor    eax,DWORD PTR [ecx+0x64]
  416913:	test   BYTE PTR [esi-0x2ba22fe3],dh
  416919:	outs   dx,DWORD PTR ds:[esi]
  41691a:	stc    
  41691b:	sbb    DWORD PTR [ebp+0x48],edi
  41691e:	(bad)  
  41691f:	cmp    DWORD PTR [esi],esp
  416921:	xchg   esp,eax
  416922:	xchg   DWORD PTR [ebx-0x3],edx
  416925:	aaa    
  416926:	cmp    dl,ah
  416928:	neg    ah
  41692a:	add    BYTE PTR [ecx+edi*2+0x728e1689],dl
  416931:	addr16 cld 
  416933:	hlt    
  416934:	sub    eax,0x7c67574c
  416939:	bnd jns 0x4168cb
  41693c:	sahf   
  41693d:	stos   BYTE PTR es:[edi],al
  41693e:	or     al,0x1d
  416940:	imul   edi,DWORD PTR [ebx],0x3e
  416943:	(bad)  
  416945:	leave  
  416946:	cmp    ah,ah
  416948:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416949:	cs xchg bh,al
  41694c:	fs (bad) 
  41694e:	xrelease xchg BYTE PTR [ebx],cl
  416951:	std    
  416952:	shl    BYTE PTR [eax],cl
  416954:	enter  0x8eb4,0xfe
  416958:	xor    DWORD PTR [edx-0x16],ecx
  41695b:	jl     0x4168e7
  41695d:	sti    
  41695e:	scas   al,BYTE PTR es:[edi]
  41695f:	mov    dh,0x8b
  416961:	or     DWORD PTR [esi+edx*2],ebx
  416964:	add    ah,BYTE PTR [ebp-0x7e]
  416967:	arpl   sp,si
  416969:	adc    BYTE PTR [ecx],cl
  41696b:	retf   
  41696c:	xchg   ecx,eax
  41696d:	test   BYTE PTR [edx],0x47
  416970:	(bad)  
  416972:	mov    edi,0xa2a95226
  416977:	outs   dx,BYTE PTR ds:[esi]
  416978:	test   eax,0x78055a01
  41697d:	cwde   
  41697e:	inc    esi
  41697f:	xchg   esi,eax
  416980:	daa    
  416981:	cmc    
  416982:	fdivr  DWORD PTR [eax+0x51a59f36]
  416988:	mov    bh,0x8b
  41698a:	loopne 0x416983
  41698c:	xchg   ebp,eax
  41698d:	add    al,0x9d
  41698f:	push   DWORD PTR [ecx-0x73ce7008]
  416995:	pushf  
  416996:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416997:	sti    
  416998:	mov    eax,ds:0x4e305796
  41699d:	xor    dh,bl
  41699f:	js     0x416a06
  4169a1:	outs   dx,BYTE PTR ds:[esi]
  4169a2:	push   es
  4169a3:	mov    esp,0xeb6edd17
  4169a8:	add    BYTE PTR [esp+eax*1-0x948205d],cl
  4169af:	out    0xb6,al
  4169b1:	addr16 add esi,0x622998c0
  4169b8:	inc    eax
  4169b9:	add    al,0x6c
  4169bb:	push   ebx
  4169bc:	idiv   DWORD PTR [esi-0x1e9d193f]
  4169c2:	imul   edi,DWORD PTR [edi-0x15966397],0x61
  4169c9:	shl    BYTE PTR [esi+0x71ccf2ac],1
  4169cf:	lock or DWORD PTR [eax],ebx
  4169d2:	cli    
  4169d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4169d4:	inc    esp
  4169d5:	push   edx
  4169d6:	paddq  mm1,QWORD PTR [edx-0x66514778]
  4169dd:	mov    ch,0xb5
  4169df:	into   
  4169e0:	loop   0x416993
  4169e2:	xchg   edi,eax
  4169e3:	mov    eax,0xbc8d7dbd
  4169e8:	pop    ebx
  4169e9:	xor    bl,dl
  4169eb:	sbb    al,0x20
  4169ed:	outs   dx,BYTE PTR ds:[esi]
  4169ee:	fst    DWORD PTR [edi+edx*4-0x3d974132]
  4169f5:	mov    ecx,0xe9d18f39
  4169fa:	or     ecx,DWORD PTR [edi]
  4169fc:	cli    
  4169fd:	es xchg ebp,eax
  4169ff:	or     DWORD PTR [edi-0x1e66d905],eax
  416a05:	aaa    
  416a06:	xor    edx,DWORD PTR [edx+esi*8-0x61cd7ee6]
  416a0d:	nop
  416a0e:	xor    al,0x9e
  416a10:	mov    edi,0xbf661d05
  416a15:	out    0xcc,al
  416a17:	jmp    0x41699f
  416a19:	and    al,0x3
  416a1b:	cmp    eax,0x4beff8d8
  416a20:	dec    ecx
  416a21:	dec    ebp
  416a22:	pmaxsw mm0,QWORD PTR [eax]
  416a25:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  416a27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a28:	out    0x59,al
  416a2a:	ret    0xcb75
  416a2d:	scas   al,BYTE PTR es:[edi]
  416a2e:	jns    0x416a97
  416a30:	stc    
  416a31:	ror    BYTE PTR [ebx-0x34],cl
  416a34:	adc    eax,0x4729d86f
  416a39:	test   al,0x73
  416a3b:	and    eax,0x1880667b
  416a40:	xchg   edx,eax
  416a41:	pop    ds
  416a42:	xchg   ebp,eax
  416a43:	aas    
  416a44:	popa   
  416a45:	ins    BYTE PTR es:[edi],dx
  416a46:	mov    ds:0xebc2bdff,eax
  416a4b:	sbb    DWORD PTR [edx+0x37],0x10
  416a4f:	pop    ebp
  416a50:	nop
  416a51:	or     dl,ch
  416a53:	ds xchg esi,eax
  416a55:	xor    BYTE PTR [edi],ah
  416a57:	mov    al,0xd5
  416a59:	pusha  
  416a5a:	jo     0x416a9e
  416a5c:	fistp  QWORD PTR [eax+esi*4-0x22]
  416a60:	push   0x11e68ede
  416a65:	das    
  416a66:	cdq    
  416a67:	loope  0x416a64
  416a69:	push   eax
  416a6a:	mov    dl,0xff
  416a6c:	sahf   
  416a6d:	jo     0x416a5f
  416a6f:	gs xchg esp,eax
  416a71:	xor    cl,BYTE PTR [eax-0x33]
  416a74:	mov    ch,0x9f
  416a76:	inc    eax
  416a77:	rcl    DWORD PTR [ebx-0x4cf151a],0x86
  416a7e:	add    al,0x7d
  416a80:	mov    bh,0xc
  416a82:	les    ecx,FWORD PTR [esp+edx*1-0x29a8cfa7]
  416a89:	xchg   ecx,eax
  416a8a:	(bad)  
  416a8b:	and    al,0x3d
  416a8d:	xlat   BYTE PTR ds:[ebx]
  416a8e:	sub    BYTE PTR [ebx-0x11],0x8d
  416a92:	inc    eax
  416a93:	in     al,0xb
  416a95:	xor    BYTE PTR ds:[ebx+0x120e624e],al
  416a9c:	outs   dx,BYTE PTR ds:[esi]
  416a9d:	jno    0x416af9
  416a9f:	fisttp DWORD PTR [esi-0x2f5af1ab]
  416aa5:	mov    esp,0x904657c
  416aaa:	pop    edi
  416aab:	jbe    0x416b14
  416aad:	dec    edi
  416aae:	pop    edi
  416aaf:	mov    WORD PTR [edx*4+0x2690f847],?
  416ab6:	fisub  DWORD PTR [ebx]
  416ab8:	std    
  416ab9:	add    al,0x45
  416abb:	test   al,0x9b
  416abd:	scas   eax,DWORD PTR es:[edi]
  416abe:	fwait
  416abf:	mov    ?,WORD PTR [esi+ebp*4]
  416ac2:	call   FWORD PTR [ebp-0x72]
  416ac5:	dec    eax
  416ac6:	fnstcw WORD PTR [edx-0x43]
  416ac9:	jmp    0x81329fe3
  416ace:	xor    eax,0xcddd5541
  416ad3:	mov    dh,0xbe
  416ad5:	lahf   
  416ad6:	shl    BYTE PTR [esi+0x32],1
  416ad9:	mov    edi,DWORD PTR [ebx-0x172ae016]
  416adf:	jb     0x416b32
  416ae1:	push   DWORD PTR [esi]
  416ae3:	push   ss
  416ae4:	fmul   QWORD PTR [esp+edi*2+0x26dfb863]
  416aeb:	retf   0x9291
  416aee:	push   es
  416aef:	sub    bh,dl
  416af1:	inc    edx
  416af2:	pop    esp
  416af3:	dec    ecx
  416af4:	mov    edi,0x3da76288
  416af9:	xor    ecx,ebp
  416afb:	sub    DWORD PTR [edi-0x12],edi
  416afe:	mov    ds:0xccf8881d,al
  416b03:	sub    DWORD PTR [ebx],edi
  416b05:	leave  
  416b06:	out    0xf2,eax
  416b08:	sub    DWORD PTR [eax],eax
  416b0a:	retf   
  416b0b:	ins    BYTE PTR es:[edi],dx
  416b0c:	push   cs
  416b0d:	fbstp  TBYTE PTR [ecx-0x60]
  416b10:	push   ecx
  416b11:	xchg   edi,eax
  416b12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b13:	mov    ch,0x82
  416b15:	sbb    edx,DWORD PTR [ebp-0x19556bec]
  416b1b:	imul   esi,DWORD PTR [esi+0x31],0xc0f53d56
  416b22:	rol    DWORD PTR [edx+0x2dfa406f],0x1e
  416b29:	mov    eax,ds:0xc8bc2be6
  416b2e:	out    0x6d,al
  416b30:	or     eax,0x2e458e81
  416b35:	data16 add al,0x21
  416b38:	imul   eax,DWORD PTR [edi-0x3f],0xffffff94
  416b3c:	int3   
  416b3d:	inc    ebp
  416b3e:	inc    ecx
  416b3f:	xor    DWORD PTR [ebp-0x11],0x3d
  416b43:	sbb    al,BYTE PTR [edi]
  416b45:	(bad)  
  416b46:	dec    edi
  416b47:	cdq    
  416b48:	mov    esi,0xfe80dd32
  416b4d:	call   0xab2dc572
  416b52:	jl     0x416b31
  416b54:	dec    ebx
  416b55:	and    DWORD PTR [esi-0x80],esp
  416b58:	test   al,0xa9
  416b5a:	or     ah,al
  416b5c:	es jmp 0x6e621ac6
  416b62:	or     dl,BYTE PTR [edx+0x73d451da]
  416b68:	sub    DWORD PTR cs:[eax-0x43117c4d],ecx
  416b6f:	sbb    eax,0xa474c121
  416b74:	xor    DWORD PTR [esi],0xffffffe1
  416b77:	jl     0x416b46
  416b79:	and    bl,ah
  416b7b:	mov    ch,0xdf
  416b7d:	rcl    edx,0x2
  416b80:	dec    ebx
  416b81:	dec    ebp
  416b82:	pop    edx
  416b83:	test   DWORD PTR [ecx+0x41fc3bc2],ebx
  416b89:	icebp  
  416b8a:	(bad)  
  416b8b:	int    0x1f
  416b8d:	jne    0x416c02
  416b8f:	(bad)  
  416b90:	imul   edx,DWORD PTR [edx+0x72],0x3ac183ee
  416b97:	sbb    BYTE PTR [ebx+esi*2],bh
  416b9a:	or     bl,BYTE PTR [eax+0x2c]
  416b9d:	pop    edi
  416b9e:	aam    0xb3
  416ba0:	fstp   DWORD PTR [ecx]
  416ba2:	loope  0x416b27
  416ba4:	mov    WORD PTR [ecx+0x73553d3f],cs
  416baa:	xchg   BYTE PTR [esi+ebp*8-0x33b7a83b],bl
  416bb1:	push   0x53
  416bb3:	lahf   
  416bb4:	mov    edi,0x1b2ada3d
  416bb9:	push   esi
  416bba:	xchg   edx,eax
  416bbb:	mov    WORD PTR [edx-0x4a055f19],ss
  416bc1:	xor    bh,0xe3
  416bc4:	shl    BYTE PTR [ecx-0x415d8b05],1
  416bca:	ja     0x416b96
  416bcc:	mov    ss,WORD PTR [eax+eiz*2]
  416bcf:	mov    ah,0x18
  416bd1:	les    ecx,FWORD PTR [edx]
  416bd3:	mov    ch,0x56
  416bd5:	inc    ebp
  416bd6:	stc    
  416bd7:	test   ebx,eax
  416bd9:	jne    0x416c2d
  416bdb:	xor    BYTE PTR [ebp-0x73932151],cl
  416be1:	adc    ah,BYTE PTR [eax+0x103afdac]
  416be7:	(bad)
  416bea:	daa    
  416beb:	mov    esp,0xf6917378
  416bf0:	mov    gs:0xc9fdf5be,al
  416bf6:	(bad)  
  416bf7:	shl    dh,0x9e
  416bfa:	jbe    0x416ba7
  416bfc:	push   0xde564fa4
  416c01:	retf   0x9670
  416c04:	push   ds
  416c05:	rol    al,1
  416c07:	lods   al,BYTE PTR ds:[esi]
  416c08:	neg    DWORD PTR [ebx-0x63]
  416c0b:	inc    ebx
  416c0c:	(bad)  
  416c0d:	mov    al,ds:0xc1e769b8
  416c12:	jge    0x416c25
  416c14:	scas   eax,DWORD PTR es:[edi]
  416c15:	in     eax,dx
  416c16:	mov    dh,0xd9
  416c18:	sbb    ebx,esi
  416c1a:	add    al,BYTE PTR [ecx+0x4c]
  416c1d:	push   0x38
  416c1f:	xor    dl,bh
  416c21:	dec    ebp
  416c22:	pop    eax
  416c23:	lods   al,BYTE PTR ds:[esi]
  416c24:	xchg   edx,eax
  416c25:	test   BYTE PTR [esi],cl
  416c27:	xchg   edx,eax
  416c28:	or     BYTE PTR [esi],ch
  416c2a:	std    
  416c2b:	xchg   ebp,eax
  416c2c:	mov    ecx,0x5d8e95b7
  416c31:	test   al,0xa7
  416c33:	int    0x47
  416c35:	xor    dh,BYTE PTR [ebp+0x780289dc]
  416c3b:	mov    ebx,DWORD PTR [edi+0x64]
  416c3e:	sub    ebp,DWORD PTR [ebp+0x61]
  416c41:	sub    eax,0x5bc3b449
  416c46:	fidiv  WORD PTR [ebx+edx*2-0x64]
  416c4a:	sbb    esp,DWORD PTR [ecx-0x51]
  416c4d:	clc    
  416c4e:	dec    ebx
  416c4f:	shl    BYTE PTR [esi-0x3b],0x4c
  416c53:	mov    ds:0x9c793b49,al
  416c58:	mov    eax,0x3e2d2e7
  416c5d:	out    0xf4,eax
  416c5f:	dec    eax
  416c60:	aaa    
  416c61:	push   0xffffffe4
  416c63:	xlat   BYTE PTR ds:[ebx]
  416c64:	push   eax
  416c65:	and    BYTE PTR [ecx],0xc5
  416c68:	imul   ebp,DWORD PTR [ebx],0x85cf4eec
  416c6e:	lahf   
  416c6f:	pop    ecx
  416c70:	fsubrp st(5),st
  416c72:	push   esi
  416c73:	push   ebp
  416c74:	dec    eax
  416c75:	mov    dh,0x60
  416c77:	retf   
  416c78:	pushf  
  416c79:	lahf   
  416c7a:	sub    al,0x8c
  416c7c:	jmp    0x9707398c
  416c81:	mov    dh,0xff
  416c83:	in     eax,0x9f
  416c85:	xor    edx,ecx
  416c87:	retf   0xc722
  416c8a:	sub    DWORD PTR [edx+0x39],0x6a9260ef
  416c91:	ins    DWORD PTR es:[edi],dx
  416c92:	or     dl,al
  416c94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c95:	and    DWORD PTR [edi],ecx
  416c97:	dec    edi
  416c98:	in     eax,dx
  416c99:	jb     0x416d0d
  416c9b:	stos   BYTE PTR es:[edi],al
  416c9c:	inc    esi
  416c9d:	fimul  DWORD PTR [edi-0x3246713]
  416ca3:	rcl    DWORD PTR [edi+0x2bd8eb2c],0x5c
  416caa:	fwait
  416cab:	sub    bl,BYTE PTR [esi+ebp*4-0x3c]
  416caf:	and    ebp,ebx
  416cb1:	jbe    0x416d25
  416cb3:	fwait
  416cb4:	push   edi
  416cb5:	adc    al,0x63
  416cb7:	jo     0x416c41
  416cb9:	das    
  416cba:	pop    edx
  416cbb:	jmp    0x797abf6d
  416cc0:	jno    0x416c66
  416cc2:	xchg   ecx,eax
  416cc3:	cli    
  416cc4:	mov    ebp,0x98551e82
  416cc9:	js     0x416d20
  416ccb:	xor    al,0x3e
  416ccd:	imul   eax,esi,0x764c353f
  416cd3:	ins    DWORD PTR es:[edi],dx
  416cd4:	adc    al,0xee
  416cd6:	aad    0xdd
  416cd8:	mov    al,ds:0x9f32105b
  416cdd:	shl    DWORD PTR [eax+0x46],cl
  416ce0:	test   al,0x6
  416ce2:	xor    eax,0x67674c93
  416ce7:	push   ebx
  416ce8:	pop    edi
  416ce9:	jge    0x416ca8
  416ceb:	mov    ecx,0x934eec18
  416cf0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416cf1:	xor    BYTE PTR [ebp+0x2ee51b50],0xa5
  416cf8:	inc    edx
  416cf9:	(bad)  
  416cfa:	out    dx,eax
  416cfb:	inc    ebp
  416cfc:	inc    edx
  416cfd:	ins    BYTE PTR es:[edi],dx
  416cfe:	clc    
  416cff:	jnp    0x416ccc
  416d01:	mov    BYTE PTR [ebx-0x9354a2e],0xf2
  416d08:	adc    edx,DWORD PTR [esi]
  416d0a:	shl    BYTE PTR [ecx+0x633d1bf4],cl
  416d10:	daa    
  416d11:	pop    ss
  416d12:	adc    ebp,DWORD PTR [ecx-0x6d]
  416d15:	(bad)  
  416d17:	imul   ebx,eax,0x66f9e99e
  416d1d:	push   es
  416d1e:	sbb    eax,0x77c8e4f
  416d23:	mov    edi,0xae1a0dfe
  416d28:	push   0xffffffc8
  416d2a:	inc    edx
  416d2b:	or     eax,0xdc28490e
  416d30:	xor    al,0x7d
  416d32:	js     0x416d61
  416d34:	lahf   
  416d35:	xchg   edi,eax
  416d36:	cwde   
  416d37:	icebp  
  416d38:	cli    
  416d39:	inc    esi
  416d3a:	addr16 ja 0x416d35
  416d3d:	or     DWORD PTR [ecx+edx*4+0xc0ede64],edi
  416d44:	sbb    al,BYTE PTR [ebx-0x3040711c]
  416d4a:	mov    DWORD PTR [ebp-0x181dd936],0x3478c8b1
  416d54:	and    BYTE PTR [ebp-0x1b],cl
  416d57:	cs inc eax
  416d59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d5a:	pusha  
  416d5b:	js     0x416cee
  416d5d:	and    bl,BYTE PTR [ebp-0x286ed873]
  416d63:	cmp    al,0x8
  416d65:	mov    ds:0xdd0b2711,eax
  416d6a:	add    al,0x4f
  416d6c:	and    dh,0xf5
  416d6f:	inc    ebp
  416d70:	cdq    
  416d71:	mov    dl,0xd0
  416d73:	sbb    ah,BYTE PTR [edx+ecx*2-0xa5d4bbb]
  416d7a:	out    0x35,eax
  416d7c:	shl    al,cl
  416d7e:	xchg   esp,eax
  416d7f:	(bad)  
  416d80:	(bad)  [edi]
  416d82:	mov    cs,WORD PTR [ecx+edi*4]
  416d85:	fwait
  416d86:	shl    BYTE PTR [esi],cl
  416d88:	jge    0x416d9d
  416d8a:	jne    0x416d3b
  416d8c:	mov    ah,0x55
  416d8e:	(bad)  
  416d8f:	lock daa 
  416d91:	stc    
  416d92:	lods   eax,DWORD PTR ds:[esi]
  416d93:	mov    ecx,0xbc15ea07
  416d98:	xchg   ch,dh
  416d9a:	clc    
  416d9b:	cmp    BYTE PTR cs:[edi+ebp*8],cl
  416d9f:	in     eax,0x26
  416da1:	and    ecx,0x3cb97a3
  416da7:	xor    bl,al
  416da9:	ins    DWORD PTR es:[edi],dx
  416daa:	sub    al,0x6
  416dac:	or     DWORD PTR [ebp+0x55],0xacbaebdd
  416db3:	jnp    0x416e28
  416db5:	inc    BYTE PTR [esi+edx*2]
  416db8:	mov    esp,0x79b6314e
  416dbd:	cmc    
  416dbe:	repz (bad) 
  416dc0:	mov    bl,0x19
  416dc2:	adc    dh,BYTE PTR [ebp-0x57524b01]
  416dc8:	sar    dh,cl
  416dca:	adc    DWORD PTR [ecx-0x2f],0xc4ac0889
  416dd1:	add    DWORD PTR [ecx-0x3d001745],edx
  416dd7:	ficom  DWORD PTR [ebp+0x16cf126c]
  416ddd:	jnp    0x416e07
  416ddf:	add    al,0x27
  416de1:	mov    es,WORD PTR [edx+0x9]
  416de4:	in     al,0x3a
  416de6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416de7:	xor    al,0xe6
  416de9:	icebp  
  416dea:	pop    ecx
  416deb:	and    DWORD PTR [esi+0x6],ebp
  416dee:	pop    ds
  416def:	mov    BYTE PTR [eax-0xe592cc2],0x74
  416df6:	jo     0x416ddb
  416df8:	mov    dh,0x65
  416dfa:	out    dx,al
  416dfb:	jecxz  0x416db0
  416dfd:	sbb    al,0xb0
  416dff:	inc    esi
  416e00:	test   DWORD PTR [edx+0x52],esi
  416e03:	pop    ss
  416e04:	or     eax,0xe3df65b2
  416e09:	push   ebp
  416e0a:	sbb    BYTE PTR [ebp+0x6e0e5c2a],cl
  416e10:	lods   eax,DWORD PTR ds:[esi]
  416e11:	(bad)  
  416e12:	jmp    0x6b4fe331
  416e17:	clc    
  416e18:	gs je  0x416e7c
  416e1b:	dec    ebp
  416e1c:	mov    al,0xd0
  416e1e:	sbb    al,0x75
  416e20:	add    esp,ecx
  416e22:	mov    eax,ds:0x5f85f14f
  416e27:	(bad)  
  416e28:	mov    al,0xb
  416e2a:	push   ebp
  416e2b:	fbld   TBYTE PTR [edx+ecx*4]
  416e2e:	inc    eax
  416e2f:	xchg   edi,eax
  416e30:	pop    ecx
  416e31:	std    
  416e32:	pop    ebp
  416e33:	iret   
  416e34:	fdivr  QWORD PTR [ebp-0x25]
  416e37:	sub    al,0x82
  416e39:	adc    BYTE PTR [edx+0x1d],ah
  416e3c:	sbb    ah,BYTE PTR [edi-0x7e]
  416e3f:	dec    ebp
  416e40:	dec    ebp
  416e41:	pop    ebx
  416e42:	push   esi
  416e43:	mov    ?,WORD PTR [eax]
  416e45:	sub    ebp,0x57
  416e48:	cmp    ah,BYTE PTR [ecx]
  416e4a:	add    BYTE PTR [edx-0x4a3dc3e9],ah
  416e50:	in     al,0x52
  416e52:	sti    
  416e53:	(bad)  
  416e54:	cwde   
  416e55:	sbb    edx,ebx
  416e57:	psubsb mm2,QWORD PTR [ecx+0x3ff23267]
  416e5e:	pop    esp
  416e5f:	ds cmc 
  416e61:	jmp    0x216fdaad
  416e66:	sbb    dh,BYTE PTR [edx-0x7ea54f74]
  416e6c:	dec    ebp
  416e6d:	imul   DWORD PTR [ebp-0x43]
  416e70:	pop    ds
  416e71:	mov    bl,0x91
  416e73:	push   ss
  416e74:	and    BYTE PTR [edx-0x6ad0ea70],ch
  416e7a:	dec    edi
  416e7b:	push   esi
  416e7c:	adc    edx,DWORD PTR [esi]
  416e7e:	cmp    ecx,DWORD PTR [edx]
  416e80:	(bad)  
  416e81:	stc    
  416e82:	jne    0x416ec7
  416e84:	sbb    bh,BYTE PTR [ebx+esi*1+0x3b]
  416e88:	fidivr DWORD PTR [ebp-0x362af9a2]
  416e8e:	(bad)  
  416e90:	mov    ah,BYTE PTR [ebp+0x61]
  416e93:	mov    ecx,0x1e998b5c
  416e98:	ret    
  416e99:	jnp    0x416ebd
  416e9b:	aam    0x55
  416e9d:	xor    eax,0x30e14090
  416ea2:	jae    0x416f09
  416ea4:	mov    cl,0xa1
  416ea6:	data16 scas al,BYTE PTR es:[edi]
  416ea8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ea9:	arpl   WORD PTR [ebp+0x52],dx
  416eac:	mov    dl,bl
  416eae:	dec    ebx
  416eaf:	stos   BYTE PTR es:[edi],al
  416eb0:	mov    WORD PTR [edx-0x79b2beb9],cs
  416eb6:	push   ds
  416eb7:	nop
  416eb8:	sbb    DWORD PTR [ecx],eax
  416eba:	sbb    bh,BYTE PTR [eax]
  416ebc:	lock and ebp,DWORD PTR [eax-0x66]
  416ec0:	jecxz  0x416f07
  416ec2:	dec    esi
  416ec3:	into   
  416ec4:	retf   
  416ec5:	ret    0x3be3
  416ec8:	test   eax,0x60bda1d
  416ecd:	jp     0x416f21
  416ecf:	jp     0x416eee
  416ed1:	imul   edx,DWORD PTR [edx-0x52],0xffffffbf
  416ed5:	push   edx
  416ed6:	jno    0x416f08
  416ed8:	push   esi
  416ed9:	push   ebx
  416eda:	xchg   edi,eax
  416edb:	ins    BYTE PTR es:[edi],dx
  416edc:	in     eax,dx
  416edd:	in     al,0xcf
  416edf:	mov    ds:0xf5a82fba,al
  416ee4:	cwde   
  416ee5:	loopne 0x416f3f
  416ee7:	cmp    ah,BYTE PTR [eax-0x4cdc154f]
  416eed:	jl     0x416f47
  416eef:	sbb    DWORD PTR [ecx+0x59],0x76
  416ef3:	imul   edx,DWORD PTR [ecx+edx*2-0x58],0xa
  416ef8:	inc    ebx
  416ef9:	push   esp
  416efa:	mov    al,ds:0x9c93c226
  416eff:	loopne 0x416eed
  416f01:	push   0xc3617a35
  416f06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f07:	xchg   ecx,eax
  416f08:	cs mov ch,0x1
  416f0b:	push   ss
  416f0c:	cld    
  416f0d:	or     BYTE PTR [edi+ebp*8-0x37],dh
  416f11:	push   es
  416f12:	enter  0xf2a,0x41
  416f16:	jmp    0x46a5:0xbcd6d9e0
  416f1d:	pop    ebx
  416f1e:	or     DWORD PTR [edi],edi
  416f20:	jnp    0x416eaf
  416f22:	and    ecx,esp
  416f24:	fld    TBYTE PTR [eax]
  416f26:	xlat   BYTE PTR gs:[ebx]
  416f28:	scas   al,BYTE PTR es:[edi]
  416f29:	inc    edi
  416f2a:	iret   
  416f2b:	(bad)  
  416f2c:	mov    WORD PTR [esi+0x6d815bc7],es
  416f32:	sub    al,0x9d
  416f34:	and    ebx,DWORD PTR [edx]
  416f36:	cmp    BYTE PTR [edi+0x313426d2],ah
  416f3c:	xchg   edx,eax
  416f3d:	scas   eax,DWORD PTR es:[edi]
  416f3e:	aam    0x6
  416f40:	jge    0x416f9d
  416f42:	pop    es
  416f43:	popa   
  416f44:	in     eax,dx
  416f45:	xor    edi,DWORD PTR [edi]
  416f47:	scas   al,BYTE PTR es:[edi]
  416f48:	idiv   DWORD PTR [ecx-0x46e0bba4]
  416f4e:	cwde   
  416f4f:	lock (bad) 
  416f51:	xor    al,0x3a
  416f53:	aam    0xc0
  416f55:	push   cs
  416f56:	pavgb  mm3,QWORD PTR [ecx+0x2948f409]
  416f5d:	mov    ebp,0x20ebc0af
  416f62:	das    
  416f63:	mov    edx,0x3dc72224
  416f68:	xor    ebx,DWORD PTR [edx+esi*4]
  416f6b:	cmp    DWORD PTR [ebp+eiz*1-0x7729e247],eax
  416f72:	adc    eax,0x8331b5d6
  416f77:	or     DWORD PTR [esi],ebp
  416f79:	and    al,0xbd
  416f7b:	bndldx (bad),[eax+edi*2-0x458110d8]
  416f83:	dec    esp
  416f84:	xchg   ecx,eax
  416f85:	mov    ebx,0x8608f0e6
  416f8a:	adc    al,0x99
  416f8c:	iret   
  416f8d:	push   0xffffffb6
  416f8f:	add    eax,0xc0963300
  416f94:	fld    QWORD PTR [eax]
  416f96:	lahf   
  416f97:	push   esp
  416f98:	inc    ecx
  416f99:	shl    BYTE PTR [esi-0x71d2609e],cl
  416f9f:	in     al,dx
  416fa0:	pop    ecx
  416fa1:	cli    
  416fa2:	push   ebp
  416fa3:	push   ecx
  416fa4:	xchg   edi,eax
  416fa5:	aaa    
  416fa6:	std    
  416fa7:	push   0xffffffe3
  416fa9:	mov    ah,0xfe
  416fab:	push   ebx
  416fac:	pop    eax
  416fad:	je     0x416f60
  416faf:	(bad)  
  416fb0:	lock mov esi,0xd402526c
  416fb6:	sub    esi,DWORD PTR [edi]
  416fb8:	push   ss
  416fb9:	adc    BYTE PTR [ecx],0xf3
  416fbc:	ins    DWORD PTR es:[edi],dx
  416fbd:	shr    BYTE PTR [ebx],0xd6
  416fc0:	iret   
  416fc1:	loope  0x416f98
  416fc3:	dec    ebx
  416fc4:	enter  0xfbf1,0xe8
  416fc8:	mov    edx,0x484ee4ca
  416fcd:	sub    DWORD PTR [esi],edi
  416fcf:	ins    BYTE PTR es:[edi],dx
  416fd0:	jno    0x416f59
  416fd2:	add    al,0x2c
  416fd4:	jmp    0xac10:0x150cfc6f
  416fdb:	or     eax,0x2f4743a9
  416fe0:	sub    al,0x2
  416fe2:	jne    0x416fb2
  416fe4:	mov    edi,DWORD PTR [eax+0x53]
  416fe7:	sbb    bl,cl
  416fe9:	push   ds
  416fea:	pop    esp
  416feb:	xor    eax,0x9511bfad
  416ff0:	inc    esp
  416ff1:	mov    DWORD PTR [eax-0x76f7727d],esp
  416ff7:	cs push ss
  416ff9:	imul   esp,DWORD PTR [ecx+eax*4-0x3468f55b],0x5ed0c70b
  417004:	pop    eax
  417005:	test   DWORD PTR [esi+0x48],ebx
  417008:	jo     0x416f8f
  41700a:	mov    cl,0x1e
  41700c:	lea    ecx,ds:0x1ef18b02
  417012:	lods   al,BYTE PTR ds:[esi]
  417013:	push   esp
  417014:	sub    al,0xc8
  417016:	and    DWORD PTR [ebp+0x46],esi
  417019:	jecxz  0x41706a
  41701b:	xor    esp,DWORD PTR [eax+0x61753733]
  417021:	ss push esp
  417023:	pop    ecx
  417024:	jmp    0xc6f536b0
  417029:	popf   
  41702a:	rol    BYTE PTR [edx],cl
  41702c:	stc    
  41702d:	xor    eax,0xb60248a4
  417032:	stos   BYTE PTR es:[edi],al
  417033:	dec    esp
  417034:	mov    BYTE PTR [esi+0x25],ah
  417037:	and    DWORD PTR ds:0x7759b820,edi
  41703d:	xor    edi,ebx
  41703f:	cwde   
  417040:	mov    BYTE PTR [ebp-0x71],0x1b
  417044:	ss pop ebx
  417046:	(bad)  
  417047:	pop    ecx
  417048:	or     al,0xe7
  41704a:	push   ecx
  41704b:	inc    ebp
  41704c:	out    0xf4,al
  41704e:	pusha  
  41704f:	jo     0x41700c
  417051:	daa    
  417052:	dec    eax
  417053:	sbb    al,0xc3
  417055:	xchg   ebx,eax
  417056:	mov    cl,0x82
  417058:	out    dx,al
  417059:	inc    ecx
  41705a:	and    DWORD PTR [edx+0x3cd5529],ebx
  417060:	loope  0x4170c0
  417062:	or     DWORD PTR [ebp+0x532c3129],esp
  417068:	sahf   
  417069:	out    dx,al
  41706a:	cdq    
  41706b:	lods   al,BYTE PTR ds:[esi]
  41706c:	(bad)  
  41706d:	fsub   st(6),st
  41706f:	adc    BYTE PTR [edx-0x46],0x1a
  417073:	and    esp,DWORD PTR [edx+0x23]
  417076:	call   0xb5ed9e32
  41707b:	xor    eax,ebx
  41707d:	lods   eax,DWORD PTR ds:[esi]
  41707e:	jmp    0x362d:0xca106926
  417085:	inc    esp
  417086:	js     0x41702e
  417088:	sbb    ecx,ebx
  41708a:	xlat   BYTE PTR ds:[ebx]
  41708b:	adc    BYTE PTR [ebx-0x1f],cl
  41708e:	das    
  41708f:	mov    ebp,DWORD PTR [eax]
  417091:	jne    0x417093
  417093:	fdivr  QWORD PTR [ecx]
  417095:	lods   al,BYTE PTR ds:[esi]
  417096:	loop   0x4170b4
  417098:	jb     0x4170cb
  41709a:	or     ecx,esi
  41709c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41709d:	stos   BYTE PTR es:[edi],al
  41709e:	or     DWORD PTR [ebp-0x3],0x6e9d6ff7
  4170a5:	sub    eax,0xafd67790
  4170aa:	repnz ss in al,dx
  4170ad:	addr16 cmc 
  4170af:	aas    
  4170b0:	inc    ebp
  4170b1:	lds    edi,FWORD PTR [edx]
  4170b3:	in     eax,0x4d
  4170b5:	hlt    
  4170b6:	adc    BYTE PTR [ebp+0x34],ch
  4170b9:	dec    eax
  4170ba:	pop    ds
  4170bb:	ret    0xe949
  4170be:	push   ebx
  4170bf:	enter  0xb7cf,0xb7
  4170c3:	dec    esp
  4170c4:	ficom  DWORD PTR [esi]
  4170c6:	jo     0x41710d
  4170c8:	arpl   WORD PTR [ecx-0x16314dc3],sp
  4170ce:	dec    ebp
  4170cf:	push   ss
  4170d0:	fadd   DWORD PTR [edx+0x76]
  4170d3:	sbb    edx,DWORD PTR [ecx+0x6fe9432]
  4170d9:	jo     0x41705f
  4170db:	jmp    DWORD PTR ds:0xdb25930e
  4170e1:	add    eax,0x8cb409cd
  4170e6:	int3   
  4170e7:	mov    edx,0x531ca3e3
  4170ec:	and    al,0x2f
  4170ee:	(bad)  
  4170ef:	xchg   DWORD PTR [ecx-0x3bfd1258],ecx
  4170f5:	retf   
  4170f6:	inc    ebx
  4170f7:	push   edx
  4170f8:	or     eax,ebx
  4170fa:	mov    esi,0x470e788d
  4170ff:	jge    0x41716e
  417101:	mov    dh,0x95
  417103:	outs   dx,BYTE PTR ds:[esi]
  417104:	pop    ebx
  417105:	dec    ebx
  417106:	mov    dh,0x48
  417108:	enter  0x99d3,0x28
  41710c:	iret   
  41710d:	jp     0x417109
  41710f:	pop    ecx
  417110:	jmp    0x417161
  417112:	push   ebp
  417113:	jb     0x4170b5
  417115:	lock and dl,BYTE PTR [ecx]
  417118:	ins    DWORD PTR es:[edi],dx
  417119:	adc    DWORD PTR [esp+esi*8],edi
  41711c:	jo     0x417109
  41711e:	ins    DWORD PTR es:[edi],dx
  41711f:	and    eax,0x1a61a2dd
  417124:	test   DWORD PTR [eax+0x3a],ebp
  417127:	adc    ebp,DWORD PTR [edx-0x74]
  41712a:	sub    al,0xa2
  41712c:	(bad)  
  41712d:	sub    eax,DWORD PTR [ecx]
  41712f:	push   ecx
  417130:	mov    ebx,0x2ab0fff8
  417135:	test   al,0x5d
  417137:	add    DWORD PTR [ebp-0x5b],edi
  41713a:	push   cs
  41713b:	jmp    0x4170e5
  41713d:	pop    ecx
  41713e:	sti    
  41713f:	das    
  417140:	(bad)  
  417141:	pop    esp
  417142:	mov    ecx,0x3718a763
  417147:	pop    ebx
  417148:	ficom  DWORD PTR [esi+0x23d3791a]
  41714e:	dec    ecx
  41714f:	mov    bh,0xaf
  417151:	neg    DWORD PTR [edi+0x2f765bbb]
  417157:	neg    DWORD PTR [edi]
  417159:	fwait
  41715a:	adc    BYTE PTR [eax-0x6b5f3324],0x3d
  417161:	scas   al,BYTE PTR es:[edi]
  417162:	test   eax,0xbc588e69
  417167:	pushf  
  417168:	cmp    ch,BYTE PTR [edx]
  41716a:	cmp    bh,BYTE PTR [edx]
  41716c:	out    0xee,al
  41716e:	es cdq 
  417170:	cmc    
  417171:	std    
  417172:	loop   0x4171ec
  417174:	mov    edx,0xad6ee1f4
  417179:	test   DWORD PTR [esi-0x483d56ff],ebp
  41717f:	xor    BYTE PTR [ecx],ch
  417181:	ins    BYTE PTR es:[edi],dx
  417182:	ficom  DWORD PTR [ebp-0x4bc1e21d]
  417188:	cli    
  417189:	xchg   edi,eax
  41718a:	aaa    
  41718b:	scas   eax,DWORD PTR es:[edi]
  41718c:	xchg   esp,eax
  41718d:	sub    esp,DWORD PTR [esi+ebx*2]
  417190:	loop   0x4171c9
  417192:	jo     0x4171ff
  417194:	enter  0x96bc,0x63
  417198:	in     eax,dx
  417199:	fst    st(5)
  41719b:	sbb    bl,0x41
  41719e:	push   ebx
  41719f:	cmc    
  4171a0:	nop    DWORD PTR [ebp-0x3fc9525f]
  4171a7:	push   edx
  4171a8:	(bad)
  4171ab:	cmp    dl,BYTE PTR [edx]
  4171ad:	test   al,0xe6
  4171af:	inc    eax
  4171b0:	scas   al,BYTE PTR es:[edi]
  4171b1:	pop    ds
  4171b2:	and    eax,0xb7cf079e
  4171b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4171b8:	mov    edx,DWORD PTR [ecx-0x7f]
  4171bb:	jno    0x4171cb
  4171bd:	mov    esi,0xcaf6080d
  4171c2:	clc    
  4171c3:	fcomi  st,st(7)
  4171c5:	retf   
  4171c6:	ret    
  4171c7:	and    eax,0x217a6cf6
  4171cc:	mov    eax,0x6ed3f9ea
  4171d1:	mul    ch
  4171d3:	ret    0x7db9
  4171d6:	jp     0x4171df
  4171d8:	popf   
  4171d9:	pop    ds
  4171da:	test   al,0x87
  4171dc:	add    eax,0x98711252
  4171e1:	leave  
  4171e2:	in     eax,dx
  4171e3:	gs jno 0x417229
  4171e6:	fs pop esi
  4171e8:	inc    edx
  4171e9:	xor    ah,cl
  4171eb:	mov    bh,BYTE PTR [esi+0x5a8c2069]
  4171f1:	ret    0xd25c
  4171f4:	xor    ebx,DWORD PTR [ebp-0x22]
  4171f7:	test   DWORD PTR [esi],ebp
  4171f9:	shl    BYTE PTR [edx+ebp*4+0x271e77a],1
  417200:	gs mov cl,0x27
  417203:	mov    DWORD PTR [edx-0x3e],ecx
  417206:	pop    esi
  417207:	sbb    al,dl
  417209:	fisttp DWORD PTR [esi-0x769db9ce]
  41720f:	jp     0x4171b7
  417211:	clc    
  417212:	fnstsw WORD PTR [esi]
  417214:	push   esi
  417215:	loope  0x4171b6
  417217:	lea    ecx,[edx-0x18]
  41721a:	fcom   DWORD PTR [ebx-0x1118f8ea]
  417220:	ds aaa 
  417222:	mov    cl,0x18
  417224:	call   0x48b0f636
  417229:	jl     0x417248
  41722b:	mov    edi,eax
  41722d:	xchg   bl,dl
  41722f:	retf   
  417230:	and    eax,0xb3b8b92c
  417235:	add    DWORD PTR [esi],0xffffff9a
  417238:	jp     0x41722c
  41723a:	aaa    
  41723b:	dec    esi
  41723c:	jle    0x4172a7
  41723e:	pop    edx
  41723f:	push   0x404ccc7c
  417244:	and    al,0x7d
  417246:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417247:	cmp    DWORD PTR [esi-0x30069b28],0x26bf8287
  417251:	sub    DWORD PTR [edx],ecx
  417253:	call   0xb3634783
  417258:	add    al,0x9b
  41725a:	xchg   edi,eax
  41725b:	popa   
  41725c:	jmp    0xc2b1:0x3e4d065a
  417263:	pusha  
  417264:	jge    0x417263
  417266:	inc    eax
  417267:	push   ss
  417268:	enter  0x561,0xae
  41726c:	inc    eax
  41726d:	or     edx,DWORD PTR [edi+eax*4-0x2e333afe]
  417274:	dec    esp
  417275:	jno    0x417296
  417277:	jmp    0xc415:0x49d26be5
  41727e:	mov    al,ds:0x67719a15
  417283:	jg     0x417253
  417285:	popa   
  417286:	adc    BYTE PTR [eax+ecx*1],dl
  417289:	sub    al,0xe5
  41728b:	sbb    bh,al
  41728d:	cmp    ch,BYTE PTR [edi]
  41728f:	xchg   esp,eax
  417290:	into   
  417291:	mov    ds:0x4aec02ed,al
  417296:	mov    bh,0x74
  417298:	ret    
  417299:	scas   al,BYTE PTR es:[edi]
  41729a:	jnp    0x4172b4
  41729c:	es int 0x5b
  41729f:	scas   al,BYTE PTR es:[edi]
  4172a0:	push   0x53f58f49
  4172a5:	dec    ecx
  4172a6:	push   ebp
  4172a7:	jg     0x417296
  4172a9:	imul   esp,DWORD PTR ds:0xf7559165,0x7
  4172b0:	loopne 0x41726b
  4172b2:	or     eax,0x9ef94808
  4172b7:	mov    edx,ecx
  4172b9:	std    
  4172ba:	dec    ebx
  4172bb:	retf   0x4ec
  4172be:	ja     0x4172da
  4172c0:	gs mov bh,0x6f
  4172c3:	add    al,0xdb
  4172c5:	mov    esp,0x3b1b16eb
  4172ca:	std    
  4172cb:	cld    
  4172cc:	xor    eax,DWORD PTR [edx]
  4172ce:	scas   al,BYTE PTR es:[edi]
  4172cf:	test   al,0x21
  4172d1:	loope  0x41732a
  4172d3:	inc    eax
  4172d4:	xchg   ebp,eax
  4172d5:	add    eax,0x69750387
  4172da:	das    
  4172db:	inc    edi
  4172dc:	sbb    edx,DWORD PTR [edi]
  4172de:	lods   al,BYTE PTR ds:[esi]
  4172df:	sbb    DWORD PTR [edi+0x26de8a8d],esp
  4172e5:	inc    ebx
  4172e6:	ror    ah,0x14
  4172e9:	retf   0xa02c
  4172ec:	xor    BYTE PTR [eax-0x5d],dl
  4172ef:	ss lahf 
  4172f1:	mov    eax,ds:0xd67b4aad
  4172f6:	pop    esi
  4172f7:	dec    esp
  4172f8:	dec    edi
  4172f9:	div    DWORD PTR [ebp-0x9]
  4172fc:	pop    eax
  4172fd:	daa    
  4172fe:	sub    bl,bl
  417300:	mov    ds:0xdfb07680,eax
  417305:	fs xchg ebp,eax
  417307:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417308:	mov    esp,0xcbd7b376
  41730d:	push   cs
  41730e:	xor    al,0xb8
  417310:	out    0x8b,eax
  417312:	push   ebp
  417313:	and    BYTE PTR [eax],0xb1
  417316:	xchg   edx,eax
  417317:	xchg   esp,eax
  417318:	jne    0x417342
  41731a:	or     ecx,esp
  41731c:	add    bl,al
  41731e:	dec    eax
  41731f:	jmp    0xab00:0x752b9369
  417326:	lahf   
  417327:	xor    BYTE PTR [esp+eax*2+0x799a932d],ah
  41732e:	jmp    0xded4:0xf42a0a32
  417335:	popf   
  417336:	jo     0x41736d
  417338:	sub    DWORD PTR [esi-0x57],edi
  41733b:	adc    eax,0x990b7258
  417340:	cmp    eax,0x4883ef29
  417345:	add    DWORD PTR [eax+0x4f907515],edi
  41734b:	mov    es,WORD PTR [esi+0x1e8e341d]
  417351:	pop    eax
  417352:	and    ebx,esp
  417354:	mov    eax,ds:0xa4afcead
  417359:	or     BYTE PTR [edx-0x2b06dc0d],al
  41735f:	mov    DWORD PTR [edi+0x319ef148],ebx
  417365:	mov    al,ds:0xa3bd8cfe
  41736a:	(bad)  
  41736b:	imul   ebp,ecx,0xab6239dc
  417371:	push   esi
  417372:	and    bl,BYTE PTR [edi+ecx*8+0x3b]
  417376:	and    ah,BYTE PTR [edx]
  417378:	dec    esp
  417379:	sub    DWORD PTR [esi],esi
  41737b:	cdq    
  41737c:	adc    eax,0xd1c28896
  417381:	add    al,0xdc
  417383:	push   ebp
  417384:	mov    eax,ds:0xe82f069f
  417389:	outs   dx,BYTE PTR ds:[esi]
  41738a:	jbe    0x4173ca
  41738c:	stc    
  41738d:	push   eax
  41738e:	rol    DWORD PTR [ecx+0x11],0x80
  417392:	cmc    
  417393:	sub    ch,ch
  417395:	fwait
  417396:	add    DWORD PTR [edx-0x26],esi
  417399:	retf   0x737b
  41739c:	mov    ds:0x8bb6bf12,eax
  4173a1:	jmp    0x41739d
  4173a3:	enter  0x9793,0x2b
  4173a7:	dec    edx
  4173a8:	(bad)  
  4173aa:	jb     0x41734b
  4173ac:	push   ss
  4173ad:	add    al,0xf3
  4173af:	adc    ebp,esp
  4173b1:	inc    ebp
  4173b2:	cld    
  4173b3:	mov    ch,0x95
  4173b5:	dec    edi
  4173b6:	add    edi,DWORD PTR [ebp-0x5cdb36e9]
  4173bc:	mov    ebp,0x31f2abe9
  4173c1:	jmp    0xb2b50b2a
  4173c6:	les    ebx,FWORD PTR [ebx]
  4173c8:	(bad)  
  4173c9:	jns    0x417406
  4173cb:	push   edx
  4173cc:	dec    esp
  4173cd:	and    BYTE PTR [esp+eiz*4+0x13943bd1],dl
  4173d4:	or     al,0xec
  4173d6:	gs ja  0x417384
  4173d9:	xor    bl,BYTE PTR [ebx+ebp*4-0x2898a06a]
  4173e0:	cld    
  4173e1:	retf   0x1089
  4173e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4173e5:	(bad)  
  4173e6:	adc    al,0xb9
  4173e8:	addr16 sub eax,0x4820b0e3
  4173ee:	(bad)  [eax]
  4173f0:	rol    dh,cl
  4173f2:	in     al,dx
  4173f3:	scas   eax,DWORD PTR es:[edi]
  4173f4:	loop   0x4173d2
  4173f6:	inc    eax
  4173f7:	sub    esp,DWORD PTR [ecx-0x6]
  4173fa:	push   esp
  4173fb:	loop   0x4173ff
  4173fd:	pop    ss
  4173fe:	lahf   
  4173ff:	sar    BYTE PTR [edx+0x6c],cl
  417402:	mov    esp,0x13d720cc
  417407:	addr16 repnz dec eax
  41740a:	pop    esp
  41740b:	jo     0x417483
  41740d:	push   0x8b22b266
  417412:	ds call 0x7da5:0x95b2bcc3
  41741a:	cli    
  41741b:	pop    edx
  41741c:	dec    esp
  41741d:	scas   eax,DWORD PTR es:[edi]
  41741e:	xchg   ecx,eax
  41741f:	je     0x4173ef
  417421:	and    dh,dl
  417423:	add    esi,0xfffffff4
  417426:	sbb    al,0x54
  417428:	push   edx
  417429:	js     0x417495
  41742b:	aas    
  41742c:	loop   0x417427
  41742e:	loop   0x4173e0
  417430:	pop    edx
  417431:	inc    ebp
  417432:	mov    dh,0x50
  417434:	jp     0x417458
  417436:	mov    dl,0xa9
  417438:	xchg   ah,bl
  41743a:	out    0x7d,al
  41743c:	inc    ebx
  41743d:	jge    0x41745d
  41743f:	sub    DWORD PTR [edi-0x79],esp
  417442:	xchg   edx,eax
  417443:	mov    ecx,DWORD PTR ss:[edi-0x61d1f87b]
  41744a:	push   ebx
  41744b:	aas    
  41744c:	sbb    BYTE PTR ds:0x415c438c,ch
  417452:	xchg   edx,eax
  417453:	lock mov dh,bh
  417456:	(bad)  
  417457:	mov    esi,0x93eb72fe
  41745c:	rcr    ebx,0xff
  41745f:	(bad)  
  417460:	jnp    0x417467
  417462:	xchg   BYTE PTR [edx-0x2263c765],cl
  417468:	add    BYTE PTR [ecx+0x48fd9696],dh
  41746e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41746f:	leave  
  417470:	aam    0xd8
  417472:	cmp    BYTE PTR [eax+0x6df50344],0x54
  417479:	sahf   
  41747a:	(bad)  
  41747b:	and    BYTE PTR [esi+0x39216a6d],ch
  417481:	es retf 
  417483:	and    al,BYTE PTR [esi-0x6a6aa3f2]
  417489:	pop    ebp
  41748a:	outs   dx,DWORD PTR ds:[esi]
  41748b:	out    dx,eax
  41748c:	pop    es
  41748d:	aam    0x3a
  41748f:	sar    eax,1
  417491:	mov    gs,WORD PTR [edi-0x3f]
  417494:	or     eax,0x9a2616e6
  417499:	loope  0x417471
  41749b:	fs imul eax,esp,0x1294d863
  4174a2:	fs or  al,0x3e
  4174a5:	ds cmp al,0x2a
  4174a8:	int3   
  4174a9:	mov    ch,0x3b
  4174ab:	adc    eax,0x4ff77520
  4174b0:	stos   DWORD PTR es:[edi],eax
  4174b1:	retf   
  4174b2:	lods   eax,DWORD PTR ds:[esi]
  4174b3:	nop
  4174b4:	mov    esp,0xc259fc90
  4174b9:	sub    bl,cl
  4174bb:	xor    ch,BYTE PTR [eax+0x16]
  4174be:	xchg   ecx,eax
  4174bf:	jb     0x4174da
  4174c1:	js     0x4174d5
  4174c3:	enter  0x9308,0x93
  4174c7:	and    DWORD PTR [ebx+0x1d],esp
  4174ca:	imul   esi,DWORD PTR ds:0xe732a254,0xb36c157e
  4174d4:	jae    0x417476
  4174d6:	cld    
  4174d7:	lods   eax,DWORD PTR ds:[esi]
  4174d8:	and    eax,DWORD PTR [edx-0x753dd3a3]
  4174de:	xchg   esi,eax
  4174df:	lods   eax,DWORD PTR ds:[esi]
  4174e0:	adc    DWORD PTR [ecx-0x11297e41],esp
  4174e6:	sbb    DWORD PTR [edi],ebx
  4174e8:	mov    ebp,DWORD PTR [ebx+0x26f2d5b8]
  4174ee:	pop    ebx
  4174ef:	adc    ebx,edx
  4174f1:	test   eax,0x9e368536
  4174f6:	or     ebp,DWORD PTR [ebp+0x4a]
  4174f9:	ficom  WORD PTR [edx-0x3fcdd136]
  4174ff:	shl    DWORD PTR [edx+ebx*1+0x2d59da94],0xc2
  417507:	push   ds
  417508:	add    al,0xff
  41750a:	jne    0x4174ac
  41750c:	add    eax,0x41465ed6
  417511:	push   ds
  417512:	das    
  417513:	mov    bh,0x6c
  417515:	mov    ds:0xbf3ef567,al
  41751a:	sub    ecx,DWORD PTR ds:0xcc47541
  417520:	push   ss
  417521:	popa   
  417522:	push   ds
  417523:	ret    0xae58
  417526:	jmp    DWORD PTR [esi+0x3c]
  417529:	and    eax,0x2b195a18
  41752e:	dec    ebx
  41752f:	and    DWORD PTR [ebx-0x293e7027],esp
  417535:	sar    ah,cl
  417537:	xor    bl,BYTE PTR [ebx]
  417539:	mov    ds:0xe8b20848,al
  41753e:	idiv   BYTE PTR [eax+0x31]
  417541:	inc    edi
  417542:	das    
  417543:	mov    ebp,0x5a7b16f3
  417548:	in     eax,0x3b
  41754a:	dec    ebp
  41754b:	mov    cl,0x71
  41754d:	push   edx
  41754e:	mov    bl,0xfa
  417550:	in     eax,dx
  417551:	xchg   ecx,eax
  417552:	cmp    DWORD PTR [edi+edx*4+0x6c53855f],eax
  417559:	mov    esp,0x2a58f7ca
  41755e:	inc    ebp
  41755f:	mov    ah,0x73
  417561:	sar    DWORD PTR [edi],0x81
  417564:	cwde   
  417565:	push   edi
  417566:	inc    ecx
  417567:	std    
  417568:	push   ss
  417569:	mov    eax,ds:0x7b967812
  41756e:	(bad)  
  41756f:	push   ebx
  417570:	xchg   ebx,eax
  417571:	cmp    eax,0x39f43768
  417576:	sbb    esp,esp
  417578:	xor    eax,0x9a0e5110
  41757d:	icebp  
  41757e:	cld    
  41757f:	cmp    DWORD PTR [ebp+0x14b11431],esi
  417585:	pusha  
  417586:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417587:	(bad)  
  417588:	hlt    
  417589:	jne    0x417525
  41758b:	mov    ds:0xa8e91fdc,al
  417590:	push   ss
  417591:	(bad)  
  417592:	mov    WORD PTR ds:0x55f3f0f9,cs
  417598:	pop    ecx
  417599:	stos   WORD PTR es:[edi],ax
  41759b:	shl    dh,0x20
  41759e:	and    BYTE PTR [esi+eax*8+0x4a50f0bb],ch
  4175a5:	(bad)  
  4175a6:	sub    al,0x5a
  4175a8:	dec    edi
  4175a9:	push   ds
  4175aa:	adc    edx,esp
  4175ac:	int    0x68
  4175ae:	mov    al,0x99
  4175b0:	xor    BYTE PTR [edi],bl
  4175b2:	in     eax,dx
  4175b3:	dec    ecx
  4175b4:	(bad)  
  4175b5:	test   DWORD PTR [ebx],0x4f49340b
  4175bb:	sti    
  4175bc:	xchg   DWORD PTR [ebx-0x35],ecx
  4175bf:	cmp    BYTE PTR [ebp+0x324fcd84],dl
  4175c5:	add    edx,DWORD PTR [ebx-0x46]
  4175c8:	pop    ss
  4175c9:	int    0x4e
  4175cb:	data16 shl dh,1
  4175ce:	xchg   esp,eax
  4175cf:	mov    ds:0x6aaa1586,eax
  4175d4:	imul   esp,DWORD PTR [edx],0xa19cd507
  4175da:	inc    eax
  4175db:	ds pop ss
  4175dd:	(bad)  
  4175de:	movzx  esp,WORD PTR [eax-0x1ef5ffd4]
  4175e5:	ins    DWORD PTR es:[edi],dx
  4175e6:	cmp    BYTE PTR [eax],al
  4175e8:	pop    eax
  4175e9:	add    BYTE PTR [ebx-0x377ab9fd],ah
  4175ef:	(bad)  
  4175f0:	xchg   edx,eax
  4175f1:	push   edi
  4175f2:	and    al,0xc0
  4175f4:	and    al,0x44
  4175f6:	lea    eax,[eax-0x34497f45]
  4175fc:	push   eax
  4175fd:	adc    DWORD PTR [ecx],ebx
  4175ff:	hlt    
  417600:	push   0xffffffb0
  417602:	pop    esp
  417603:	jp     0x417632
  417605:	outs   dx,BYTE PTR ds:[esi]
  417606:	mov    ebx,0x820ac9ad
  41760b:	test   BYTE PTR [eax-0x53f7c980],bl
  417611:	lock sbb eax,DWORD PTR [edi+0x1abbd7fc]
  417618:	(bad)  
  41761a:	sbb    BYTE PTR [esi+0x40],cl
  41761d:	jmp    0x3d1b25fa
  417622:	xor    esp,ecx
  417624:	pop    ecx
  417625:	mov    ebp,0x824055f0
  41762a:	mov    eax,ds:0x8a94ea47
  41762f:	cmp    DWORD PTR [eiz*1-0x649ba7af],ebp
  417636:	add    ch,BYTE PTR [esi-0x39]
  417639:	and    al,0xca
  41763b:	and    eax,0x17418b2a
  417640:	int    0xdd
  417642:	xchg   esi,eax
  417643:	xlat   BYTE PTR ds:[ebx]
  417644:	sub    BYTE PTR [esi],bl
  417646:	in     al,0xc4
  417648:	add    ebp,DWORD PTR [eax]
  41764a:	imul   BYTE PTR cs:[edx]
  41764d:	sub    ebp,ecx
  41764f:	into   
  417650:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417651:	mov    esi,DWORD PTR [ebp-0x48584af5]
  417657:	fistp  DWORD PTR [edx]
  417659:	xor    eax,0xafc5fb26
  41765e:	jnp    0x4176ba
  417660:	bound  ebx,QWORD PTR [eax]
  417662:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417663:	cdq    
  417664:	out    0x99,al
  417666:	ret    0x284f
  417669:	enter  0x9245,0x33
  41766d:	retf   
  41766e:	add    DWORD PTR [ebp+edx*8+0x36],edx
  417672:	jmp    0x6264c691
  417677:	sbb    al,0x6f
  417679:	pop    edx
  41767a:	mul    DWORD PTR [ebx-0x31a3ad8c]
  417680:	rol    edi,1
  417682:	(bad)  
  417683:	idiv   DWORD PTR [edx-0x60b133f4]
  417689:	call   0xad70:0x4901480a
  417690:	mov    bh,0x38
  417692:	sub    cl,al
  417694:	adc    DWORD PTR [ecx+0x32836e0c],0xffffffda
  41769b:	lods   eax,DWORD PTR ds:[esi]
  41769c:	popa   
  41769d:	xchg   ebx,eax
  41769e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41769f:	sub    al,0x92
  4176a1:	test   al,0x77
  4176a3:	jmp    0x4176dd
  4176a5:	or     al,0x10
  4176a7:	retf   0xbcec
  4176aa:	cmp    ah,BYTE PTR [ecx]
  4176ac:	add    DWORD PTR [esp+ebp*4+0x71],esp
  4176b0:	xchg   DWORD PTR [esi],edx
  4176b2:	or     BYTE PTR [ebp+0x7b227e55],bl
  4176b8:	retf   
  4176b9:	xor    al,0x47
  4176bb:	xor    al,0x7
  4176bd:	jo     0x4176ea
  4176bf:	loop   0x4176eb
  4176c1:	sahf   
  4176c2:	mov    esi,ebp
  4176c4:	inc    ebp
  4176c5:	das    
  4176c6:	inc    edx
  4176c7:	mov    ebx,0xb79e8276
  4176cc:	or     DWORD PTR [eax+0x3880212c],esi
  4176d2:	dec    ebx
  4176d3:	mov    dl,0x7
  4176d5:	fwait
  4176d6:	jnp    0x41767b
  4176d8:	out    dx,eax
  4176d9:	lock jmp 0xf07c73a2
  4176df:	nop
  4176e0:	in     al,0xd8
  4176e2:	push   ds
  4176e3:	sbb    BYTE PTR [edi+0x9],0xd
  4176e7:	and    esi,DWORD PTR [eax]
  4176e9:	popf   
  4176ea:	inc    ebp
  4176eb:	push   es
  4176ec:	outs   dx,BYTE PTR ds:[esi]
  4176ed:	scas   eax,DWORD PTR es:[edi]
  4176ee:	jae    0x4176e6
  4176f0:	leave  
  4176f1:	imul   ebx,DWORD PTR [edi-0x80],0x790f8a09
  4176f8:	pop    ebp
  4176f9:	inc    ebp
  4176fa:	aas    
  4176fb:	in     eax,dx
  4176fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4176fd:	mov    al,ds:0x82fdf332
  417702:	test   eax,0xbad3762b
  417707:	jno    0x4176ca
  417709:	ret    
  41770a:	gs sub edi,ebx
  41770d:	xor    al,0xc8
  41770f:	xchg   ecx,eax
  417710:	loopne 0x417776
  417712:	in     al,0x66
  417714:	leave  
  417715:	in     eax,dx
  417716:	sub    eax,0x969ce91c
  41771b:	and    BYTE PTR [esp+edx*1-0x3706fb31],bl
  417722:	sbb    bh,bh
  417724:	adc    al,ah
  417726:	adc    eax,0xa310130e
  41772b:	push   0xcb6b6692
  417730:	fldcw  WORD PTR [esp+esi*1-0x5e1b4bcd]
  417737:	pop    edx
  417738:	mov    edx,0x16e01f80
  41773d:	in     eax,dx
  41773e:	(bad)  
  41773f:	arpl   WORD PTR [esi-0x6c19039f],bx
  417745:	jg     0x4177a2
  417747:	(bad)  
  417749:	out    0x4a,eax
  41774b:	jge    0x417757
  41774d:	cmp    BYTE PTR [edx],dh
  41774f:	lods   eax,DWORD PTR ds:[esi]
  417750:	adc    dh,BYTE PTR [esi-0x40aa6278]
  417756:	and    al,0xbc
  417758:	(bad)  
  41775a:	pop    ebx
  41775b:	scas   al,BYTE PTR es:[edi]
  41775c:	xor    ch,BYTE PTR [ebp-0x2b]
  41775f:	ret    0xd4a6
  417762:	aam    0x6d
  417764:	pop    ebp
  417765:	out    dx,eax
  417766:	(bad)  
  417767:	dec    esi
  417768:	sar    BYTE PTR [ecx-0x5d62ff40],cl
  41776e:	stos   DWORD PTR es:[edi],eax
  41776f:	call   0x77f99a80
  417774:	(bad)  
  417776:	mov    eax,0x61607611
  41777b:	fs adc al,0xe
  41777e:	xlat   BYTE PTR ds:[ebx]
  41777f:	sbb    dl,cl
  417781:	(bad)  
  417782:	in     al,0x94
  417784:	and    al,0xc5
  417786:	out    dx,al
  417787:	mov    ss,eax
  417789:	aas    
  41778a:	add    ah,BYTE PTR [ebx+0x857f8fd]
  417790:	jg     0x417754
  417792:	stc    
  417793:	sbb    al,BYTE PTR [edi-0x189f9721]
  417799:	adc    al,BYTE PTR [ecx]
  41779b:	mov    ecx,0x910206f7
  4177a0:	call   0x30:0x56b0ce66
  4177a7:	dec    ecx
  4177a8:	(bad)  
  4177a9:	jecxz  0x4177ff
  4177ab:	out    0xfc,al
  4177ad:	pop    es
  4177ae:	inc    esp
  4177af:	pop    ebp
  4177b0:	push   ecx
  4177b1:	inc    eax
  4177b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4177b3:	inc    ebx
  4177b4:	adc    al,0x9f
  4177b6:	jge    0x417815
  4177b8:	mov    cl,0x23
  4177ba:	popa   
  4177bb:	ins    DWORD PTR es:[edi],dx
  4177bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4177bd:	xchg   ebx,eax
  4177be:	adc    al,0x75
  4177c0:	out    0xdc,eax
  4177c2:	mov    dl,0x3a
  4177c4:	sub    al,0xf9
  4177c6:	mov    ecx,0x18bb67d3
  4177cb:	lods   al,BYTE PTR ds:[esi]
  4177cc:	pop    ebp
  4177cd:	sub    DWORD PTR [eax+0x24],esi
  4177d0:	shr    DWORD PTR [edx-0x3a82ec17],0x38
  4177d7:	and    ah,BYTE PTR [eax-0x5431f890]
  4177dd:	mov    cl,0x1
  4177df:	cmp    DWORD PTR [ebx+0x6f85bf52],0xab23a9c3
  4177e9:	dec    ebx
  4177ea:	mov    esi,0x2bd1530f
  4177ef:	mov    al,0xf6
  4177f1:	add    DWORD PTR [esi],ebp
  4177f3:	or     al,ch
  4177f5:	ret    
  4177f6:	xchg   BYTE PTR [ecx+0x1f],ch
  4177f9:	ins    BYTE PTR es:[edi],dx
  4177fa:	out    dx,eax
  4177fb:	push   ebx
  4177fc:	pop    ss
  4177fd:	hlt    
  4177fe:	leave  
  4177ff:	xor    al,BYTE PTR [esi+0x19feb80d]
  417805:	sub    DWORD PTR [esi],ecx
  417807:	or     al,0xdf
  417809:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41780a:	jne    0x4177c5
  41780c:	push   0xffffffd9
  41780e:	jo     0x417794
  417810:	jmp    0x1651:0xc68ad3fe
  417817:	std    
  417818:	out    0x4f,al
  41781a:	jecxz  0x417802
  41781c:	stos   BYTE PTR es:[edi],al
  41781d:	dec    ecx
  41781e:	test   BYTE PTR [eax],0x55
  417821:	cmc    
  417822:	hlt    
  417823:	jbe    0x4177b2
  417825:	ins    BYTE PTR es:[edi],dx
  417826:	pop    edi
  417827:	sbb    bl,BYTE PTR [edi+0x7ca8ee93]
  41782d:	popa   
  41782e:	ins    DWORD PTR es:[edi],dx
  41782f:	inc    eax
  417830:	cdq    
  417831:	jmp    0x4177f0
  417833:	jg     0x41783d
  417835:	push   ds
  417836:	cmp    al,0xf6
  417838:	xchg   esi,eax
  417839:	mov    ds:0x16a76211,eax
  41783e:	mov    ecx,0x7bbb9aeb
  417843:	xor    ebx,ebx
  417845:	sub    esi,DWORD PTR [ecx+eiz*4]
  417848:	outs   dx,DWORD PTR ds:[si]
  41784a:	pop    esp
  41784b:	add    al,0xba
  41784d:	rcl    ah,0xbc
  417850:	pop    edx
  417851:	mov    ds,ebx
  417853:	sbb    al,0x2
  417855:	pop    eax
  417856:	cli    
  417857:	(bad)  
  417858:	loope  0x417811
  41785a:	and    al,0x49
  41785c:	adc    BYTE PTR [ebx-0x25],bl
  41785f:	arpl   bp,sp
  417861:	sbb    cl,dl
  417863:	inc    ebp
  417864:	cmp    dh,dh
  417866:	fnsave [esi]
  417868:	xchg   esi,eax
  417869:	dec    edi
  41786a:	jge    0x417800
  41786c:	ficom  WORD PTR [edx-0x6b]
  41786f:	in     eax,0x82
  417871:	repz jle 0x417836
  417874:	std    
  417875:	fcom   QWORD PTR [ebp+0x77]
  417878:	cmp    ebx,DWORD PTR [ebp+0x4e28cc65]
  41787e:	mov    DWORD PTR [eax],edi
  417880:	rcr    esp,1
  417882:	out    dx,al
  417883:	inc    esi
  417884:	stos   BYTE PTR es:[edi],al
  417885:	scas   eax,DWORD PTR es:[edi]
  417886:	xchg   BYTE PTR [edx+0x13af1680],al
  41788c:	jbe    0x4178f1
  41788e:	fwait
  41788f:	(bad)  
  417890:	xor    DWORD PTR [ebx+ecx*4-0x4f],edi
  417894:	aam    0xb3
  417896:	mov    esp,0xaaf9d001
  41789b:	test   eax,0x19f808e0
  4178a0:	xchg   DWORD PTR [ebp+0x47fc81c8],edx
  4178a6:	mov    ch,0x62
  4178a8:	dec    esp
  4178a9:	mov    cl,0xc
  4178ab:	clc    
  4178ac:	xor    al,0xbd
  4178ae:	(bad)  
  4178af:	adc    BYTE PTR [ebx+edx*1+0x63eed077],0x22
  4178b7:	lds    ecx,FWORD PTR [edx-0x7b]
  4178ba:	ins    BYTE PTR es:[edi],dx
  4178bb:	shl    BYTE PTR [esi],0x8e
  4178be:	sti    
  4178bf:	add    al,0xe4
  4178c1:	(bad)  
  4178c2:	(bad)
  4178c5:	retf   
  4178c6:	or     edx,edx
  4178c8:	xchg   DWORD PTR [ebp+0x41a0cbfe],edx
  4178ce:	call   0x62559ebc
  4178d3:	shl    BYTE PTR [ebp-0x188f45ef],cl
  4178d9:	pop    eax
  4178da:	xor    ecx,DWORD PTR [eax]
  4178dc:	inc    edx
  4178dd:	cmc    
  4178de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4178df:	adc    ebp,DWORD PTR [eax+0x10]
  4178e2:	test   eax,0x31ec1952
  4178e7:	xchg   edi,eax
  4178e8:	in     al,0x67
  4178ea:	mov    eax,0x13da45b5
  4178ef:	sub    DWORD PTR [esp-0xf],0xffffff9e
  4178f4:	or     dh,BYTE PTR [esi]
  4178f6:	sahf   
  4178f7:	sahf   
  4178f8:	cmp    edi,ebp
  4178fa:	cld    
  4178fb:	sub    eax,DWORD PTR [edx-0x23]
  4178fe:	push   es
  4178ff:	outs   dx,DWORD PTR ds:[esi]
  417900:	and    cl,bl
  417902:	in     eax,dx
  417903:	mov    ecx,0xc47b0c85
  417908:	dec    eax
  417909:	loope  0x4178cb
  41790b:	adc    bl,BYTE PTR [ebx]
  41790d:	or     eax,0xd99cbf83
  417912:	jecxz  0x4178f7
  417914:	jmp    FWORD PTR [ebx]
  417916:	aaa    
  417917:	and    eax,0x6b6de2ad
  41791c:	mov    DWORD PTR [eax-0xc],eax
  41791f:	popa   
  417920:	(bad)  
  417921:	jmp    0x9faa:0x9626b9dd
  417928:	loop   0x417915
  41792a:	sub    eax,0xef697f1d
  41792f:	mov    WORD PTR [edi],gs
  417931:	jmp    0x417954
  417933:	inc    ebx
  417934:	sbb    edx,DWORD PTR [ebx+0x24bb7807]
  41793a:	call   0xd45ae2d9
  41793f:	aas    
  417940:	cmc    
  417941:	mov    ah,0x54
  417943:	and    eax,0xa49a1429
  417948:	adc    al,0xec
  41794a:	jno    0x417967
  41794c:	dec    eax
  41794d:	mov    BYTE PTR cs:[esi+0x6706bfe7],dh
  417954:	mov    dl,0x9a
  417956:	(bad)  
  417958:	add    eax,DWORD PTR [esi-0x7f]
  41795b:	imul   BYTE PTR [eax]
  41795d:	add    eax,0x9f9572f0
  417962:	ret    
  417963:	popa   
  417964:	adc    eax,0x6c30c25e
  417969:	xchg   esi,eax
  41796a:	(bad)
  41796e:	imul   esi,DWORD PTR [edx-0x23be679e],0x66
  417975:	sub    eax,0xec41611b
  41797a:	in     al,0x4e
  41797c:	pop    ebx
  41797d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41797e:	pop    eax
  41797f:	call   0x7ff8473a
  417984:	es test eax,0x47acd81b
  41798a:	add    al,bl
  41798c:	icebp  
  41798d:	clc    
  41798e:	pushw  cs
  417990:	pop    edi
  417991:	mov    eax,ds:0xf3732fff
  417996:	ins    DWORD PTR es:[edi],dx
  417997:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417998:	iret   
  417999:	lds    esp,FWORD PTR [esi+edi*1+0xc]
  41799d:	jg     0x417a19
  41799f:	(bad)  
  4179a0:	xchg   ebp,eax
  4179a1:	arpl   di,si
  4179a3:	out    0xd3,eax
  4179a5:	sbb    eax,0xde54de64
  4179aa:	cmp    cl,BYTE PTR [ebx-0xdc937fb]
  4179b0:	inc    ecx
  4179b1:	aad    0x85
  4179b3:	sti    
  4179b4:	lock mov bh,0x91
  4179b7:	(bad)  
  4179b8:	cld    
  4179b9:	lods   al,BYTE PTR ds:[esi]
  4179ba:	mov    edi,0xedf1af23
  4179bf:	mov    esp,0x6da00e11
  4179c4:	push   esp
  4179c5:	inc    esp
  4179c6:	sub    eax,0x22a133f9
  4179cb:	cmp    DWORD PTR [edx-0x51],ebp
  4179ce:	jp     0x4179cb
  4179d0:	pop    ss
  4179d1:	popf   
  4179d2:	test   ax,0x2ca6
  4179d6:	inc    ebp
  4179d7:	jge    0x4179ce
  4179d9:	inc    dh
  4179db:	cdq    
  4179dc:	add    bl,cl
  4179de:	fwait
  4179df:	in     eax,0x68
  4179e1:	mov    eax,0xcaa11a7c
  4179e6:	fwait
  4179e7:	mov    ds:0xffc6db00,al
  4179ec:	mov    ds:0xebcd793,al
  4179f1:	fsub   DWORD PTR [eax+0x2cd6b768]
  4179f7:	adc    eax,0x25905361
  4179fc:	and    ebp,0x9f5a1b9d
  417a02:	lahf   
  417a03:	or     eax,0xb77b2f4
  417a08:	mov    ds:0xa531f6c3,eax
  417a0d:	js     0x417a55
  417a0f:	mov    eax,0xfa4c5b35
  417a14:	and    edi,DWORD PTR [esi]
  417a16:	and    DWORD PTR [edi],ecx
  417a18:	inc    esi
  417a19:	sbb    al,0xdb
  417a1b:	add    ecx,edx
  417a1d:	loope  0x417a5b
  417a1f:	(bad)  
  417a20:	sahf   
  417a21:	ins    BYTE PTR es:[edi],dx
  417a22:	lea    ecx,[ebx-0x326f2248]
  417a28:	(bad)  
  417a29:	push   eax
  417a2a:	paddw  mm7,QWORD PTR [edi+0x37a5f327]
  417a31:	cmp    BYTE PTR [ebp+0x3],bh
  417a34:	xchg   ecx,eax
  417a35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a36:	jb     0x417a20
  417a38:	or     ah,BYTE PTR gs:[ebp-0x3f]
  417a3c:	and    eax,0xe37eb906
  417a41:	in     eax,dx
  417a42:	popf   
  417a43:	shl    esi,1
  417a45:	or     BYTE PTR [edi+0x7dd86b34],ch
  417a4b:	xor    edi,DWORD PTR [eax-0x64]
  417a4e:	pushf  
  417a4f:	inc    esp
  417a50:	xchg   edx,eax
  417a51:	repnz mov ebp,0x2a24911e
  417a57:	cmc    
  417a58:	mov    ebx,0xfa143b42
  417a5d:	call   FWORD PTR [eax+ebp*8+0x73]
  417a61:	rol    BYTE PTR [esi+0x284c784c],1
  417a67:	mov    al,ds:0xcc08978f
  417a6c:	es out dx,eax
  417a6e:	shr    dl,1
  417a70:	pop    esi
  417a71:	neg    ecx
  417a73:	add    DWORD PTR [esi+0x58],edi
  417a76:	shl    BYTE PTR [esi+eax*2],cl
  417a79:	clc    
  417a7a:	push   eax
  417a7b:	sti    
  417a7c:	jl     0x417a0a
  417a7e:	add    DWORD PTR [esi+0x2493f204],esp
  417a84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a85:	(bad)  
  417a86:	or     BYTE PTR [esi-0x72],al
  417a89:	mov    bl,0xc7
  417a8b:	popf   
  417a8c:	mov    bl,al
  417a8e:	sub    eax,0xaac76484
  417a93:	push   eax
  417a94:	shl    BYTE PTR [ebx+0x3f],1
  417a97:	call   0x4708:0xbeaa222c
  417a9e:	jl     0x417a6e
  417aa0:	scas   eax,DWORD PTR es:[edi]
  417aa1:	push   0x63
  417aa3:	jb     0x417af3
  417aa5:	fsub   QWORD PTR [edi+0x36]
  417aa8:	ins    DWORD PTR es:[edi],dx
  417aa9:	mov    BYTE PTR [ecx],al
  417aab:	cli    
  417aac:	(bad)  
  417aad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417aae:	popf   
  417aaf:	adc    BYTE PTR [esi],al
  417ab1:	xlat   BYTE PTR ds:[ebx]
  417ab2:	lds    esi,FWORD PTR [edi+0x13]
  417ab5:	sbb    DWORD PTR [ebx-0x14],edi
  417ab8:	mov    edx,0x9af8ab5a
  417abd:	push   edi
  417abe:	les    edx,FWORD PTR [ecx+0x1697882c]
  417ac4:	inc    esp
  417ac5:	ficomp WORD PTR [esi+eiz*8-0x19]
  417ac9:	das    
  417aca:	sbb    eax,0xbefca7e8
  417acf:	sbb    DWORD PTR [esi],edi
  417ad1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ad2:	pop    es
  417ad3:	fwait
  417ad4:	popf   
  417ad5:	mov    BYTE PTR [eax-0x5aa2d000],bh
  417adb:	cmp    al,BYTE PTR ds:0xa572341
  417ae1:	mov    cl,0x4f
  417ae3:	jns    0x417ac7
  417ae5:	cs push esi
  417ae7:	jae    0x417aaa
  417ae9:	or     al,0x32
  417aeb:	or     esi,DWORD PTR [ecx]
  417aed:	loop   0x417b04
  417aef:	mov    cl,0xa4
  417af1:	dec    edi
  417af2:	test   BYTE PTR [esi+ebp*2],0xee
  417af6:	mov    ds:0x392a89f2,al
  417afb:	pop    esi
  417afc:	jle    0x417adc
  417afe:	ins    DWORD PTR es:[edi],dx
  417aff:	test   DWORD PTR [ecx+0x72],edx
  417b02:	rcl    BYTE PTR [edi+ecx*8],cl
  417b05:	or     DWORD PTR [edi+0x5e],ebx
  417b08:	sub    dh,BYTE PTR [edi+0x65b98eff]
  417b0e:	cld    
  417b0f:	mov    BYTE PTR [edi+0x5b],dl
  417b12:	add    BYTE PTR [edx-0x33e59162],ah
  417b18:	dec    eax
  417b19:	push   ebx
  417b1a:	mov    ch,ch
  417b1c:	push   cs
  417b1d:	jnp    0x417ade
  417b1f:	repz mov ebp,DWORD PTR [edi]
  417b22:	cli    
  417b23:	push   esi
  417b24:	jge    0x417ad4
  417b26:	sbb    esp,DWORD PTR [ecx-0x728f8b85]
  417b2c:	jmp    0x98f5:0x5f040152
  417b33:	js     0x417b0e
  417b35:	xor    eax,0x6843b33
  417b3a:	mov    cl,0xa8
  417b3c:	sub    BYTE PTR [edx+eiz*4-0x4c7a90f2],dl
  417b43:	inc    edi
  417b44:	adc    al,0x56
  417b46:	hlt    
  417b47:	xchg   DWORD PTR [esi+0x2424c1b3],ebx
  417b4d:	push   es
  417b4e:	inc    edi
  417b4f:	xor    eax,eax
  417b51:	pinsrw mm5,WORD PTR [ecx],0x56
  417b55:	in     eax,0x3c
  417b57:	pop    edi
  417b58:	pop    edx
  417b59:	out    0xc9,eax
  417b5b:	mov    edi,ebx
  417b5d:	outs   dx,DWORD PTR ds:[esi]
  417b5e:	mov    ds:0x1d2adbc2,eax
  417b63:	inc    eax
  417b64:	rcl    dl,cl
  417b66:	xor    DWORD PTR [ecx],edi
  417b68:	inc    ebx
  417b69:	test   eax,0xbade1efb
  417b6e:	mov    eax,0x484d7005
  417b73:	jo     0x417b0f
  417b75:	arpl   WORD PTR [ecx-0x5f34052f],dx
  417b7b:	mov    BYTE PTR ds:0x33a02956,ch
  417b81:	(bad)  
  417b83:	or     al,0xe3
  417b85:	sahf   
  417b86:	xchg   DWORD PTR fs:[ebx+0x3259b63e],ebp
  417b8d:	icebp  
  417b8e:	aas    
  417b8f:	mov    DWORD PTR [ecx+eax*1],esp
  417b92:	jmp    0xa0b950f3
  417b97:	xchg   esi,eax
  417b98:	das    
  417b99:	outs   dx,DWORD PTR ds:[esi]
  417b9a:	xor    cl,dh
  417b9c:	cmc    
  417b9d:	mov    dl,0x6
  417b9f:	inc    edi
  417ba0:	inc    edx
  417ba1:	ss jno 0x417b50
  417ba4:	dec    ecx
  417ba5:	retf   
  417ba6:	daa    
  417ba7:	outs   dx,DWORD PTR ds:[esi]
  417ba8:	pop    ecx
  417ba9:	add    ebp,eax
  417bab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417bac:	dec    esi
  417bad:	aam    0x50
  417baf:	fsub   st(4),st
  417bb1:	mov    al,0x1d
  417bb3:	sub    DWORD PTR ds:0xccb00e68,ecx
  417bb9:	cdq    
  417bba:	pop    edi
  417bbb:	mov    DWORD PTR ds:0xe4b8e913,eax
  417bc1:	add    BYTE PTR [ecx],dl
  417bc3:	adc    ah,BYTE PTR [edi+ebp*1-0x4]
  417bc7:	jbe    0x417c15
  417bc9:	mov    esi,0x145d58fb
  417bce:	push   eax
  417bcf:	lds    ebp,FWORD PTR [ebx+0x15]
  417bd2:	sub    al,BYTE PTR [eax-0x2b]
  417bd5:	cli    
  417bd6:	cmp    al,0x21
  417bd8:	rcr    BYTE PTR [esi-0x24605c99],cl
  417bde:	rol    BYTE PTR [ebx],1
  417be0:	adc    al,0x94
  417be2:	adc    DWORD PTR [edi-0xf],edx
  417be5:	daa    
  417be6:	jmp    0x1e16bbd3
  417beb:	in     al,dx
  417bec:	div    BYTE PTR [ecx]
  417bee:	lds    ebp,FWORD PTR [edi]
  417bf0:	cld    
  417bf1:	mov    eax,0xf1ea99e6
  417bf6:	or     eax,0xfe9fa0f8
  417bfb:	fmulp  st(4),st
  417bfd:	pop    edx
  417bfe:	inc    ecx
  417bff:	mov    ch,0xaa
  417c01:	mov    ebx,0x7bcf136c
  417c06:	neg    BYTE PTR [edx+0x7f5c6f2]
  417c0c:	shl    DWORD PTR [ebx-0x506bdd6f],cl
  417c12:	push   0x4b
  417c14:	popf   
  417c15:	sbb    ecx,esi
  417c17:	fsub   DWORD PTR [esi+0x37]
  417c1a:	mov    ch,0x6c
  417c1c:	pop    ss
  417c1d:	or     dl,BYTE PTR [esi+0x7aa9ed93]
  417c23:	pop    ecx
  417c24:	lock cs lahf 
  417c27:	out    0xf6,eax
  417c29:	mov    ch,0xe1
  417c2b:	jmp    0x417c5d
  417c2d:	cmc    
  417c2e:	aas    
  417c2f:	mov    ecx,0xce6181bb
  417c34:	jnp    0x417c60
  417c36:	xor    ah,ah
  417c38:	mov    ds:0xd74d1067,al
  417c3d:	dec    eax
  417c3e:	in     eax,dx
  417c3f:	inc    edx
  417c40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c41:	pop    ebp
  417c42:	or     al,0x73
  417c44:	push   0x8ca5500c
  417c49:	fimul  DWORD PTR [edi]
  417c4b:	xchg   esp,eax
  417c4c:	hlt    
  417c4d:	mov    edi,0xbf7b8741
  417c52:	push   ecx
  417c53:	cli    
  417c54:	mov    DWORD PTR [esi+0x9],ecx
  417c57:	mov    ah,0xfc
  417c59:	mov    bh,0xea
  417c5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c5c:	adc    DWORD PTR [eax+0x44],0x37d1b8dd
  417c63:	in     al,0xf9
  417c65:	xchg   BYTE PTR [edi],cl
  417c67:	and    al,0x5f
  417c69:	lods   al,BYTE PTR ss:[esi]
  417c6b:	iret   
  417c6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c6d:	pop    eax
  417c6e:	and    eax,0x1c04cdee
  417c73:	test   BYTE PTR [ecx],bh
  417c75:	ins    BYTE PTR es:[edi],dx
  417c76:	cmp    dl,BYTE PTR [edx]
  417c78:	add    cl,BYTE PTR [esi+0x6708f840]
  417c7e:	gs mov edx,0x48335b69
  417c84:	cmp    BYTE PTR ds:0x9bc40c31,bl
  417c8a:	push   0x112fc612
  417c8f:	test   al,0x9e
  417c91:	xchg   esp,eax
  417c92:	out    dx,eax
  417c93:	xchg   ebp,eax
  417c94:	(bad)  [esi-0x6622961f]
  417c9a:	pushf  
  417c9b:	cmp    BYTE PTR [esi+0x33],bh
  417c9e:	test   edx,ecx
  417ca0:	jp     0x417cda
  417ca2:	and    al,0x5b
  417ca4:	xlat   BYTE PTR ds:[ebx]
  417ca5:	dec    ebp
  417ca6:	xlat   BYTE PTR ds:[ebx]
  417ca7:	jae    0x417cd7
  417ca9:	fistp  WORD PTR [ecx]
  417cab:	test   eax,0x511b1d67
  417cb0:	arpl   WORD PTR [eax+ebx*4],dx
  417cb3:	xchg   BYTE PTR [eax-0x37ac8006],ch
  417cb9:	cmp    eax,0x9dc55700
  417cbe:	stos   DWORD PTR es:[edi],eax
  417cbf:	rcl    BYTE PTR [esi+0x1f86c87f],cl
  417cc5:	xor    ah,BYTE PTR [ebx-0x30]
  417cc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417cc9:	lods   eax,DWORD PTR ds:[esi]
  417cca:	cmp    al,0x82
  417ccc:	push   ss
  417ccd:	xchg   BYTE PTR [edx+esi*4+0x24],dh
  417cd1:	pop    edi
  417cd2:	push   cs
  417cd3:	sbb    al,0x6c
  417cd5:	loope  0x417cff
  417cd7:	mov    eax,ds:0xaeb6e0bc
  417cdc:	jns    0x417cd5
  417cde:	je     0x417ca3
  417ce0:	add    ebx,0xcffac823
  417ce6:	cmp    eax,DWORD PTR [eax-0x71f46227]
  417cec:	or     al,0x46
  417cee:	iret   
  417cef:	mov    eax,ds:0x5c649f7
  417cf4:	jmp    0x417cf7
  417cf6:	es jg  0x417c98
  417cf9:	ja     0x417d5e
  417cfb:	mov    edx,0x29773b29
  417d00:	ins    DWORD PTR es:[edi],dx
  417d01:	add    esi,DWORD PTR [ecx+0x34]
  417d04:	les    ecx,FWORD PTR [edi-0x3f]
  417d07:	xor    dl,BYTE PTR [edi+0x1e]
  417d0a:	mov    ds:0xa9a00b0,al
  417d0f:	xchg   ecx,eax
  417d10:	pop    ss
  417d11:	mov    ds:0x8fb345ef,al
  417d16:	mov    dh,0x4f
  417d18:	div    DWORD PTR [eax+0x55]
  417d1b:	xchg   ebp,eax
  417d1c:	mov    bh,0xdb
  417d1e:	xor    DWORD PTR ds:0x7dc8d4c9,edi
  417d24:	sub    edx,DWORD PTR [esi-0x721ead6a]
  417d2a:	pop    eax
  417d2b:	adc    eax,0x50e19c81
  417d30:	(bad)  
  417d31:	hlt    
  417d32:	lea    edx,[esi+0x59]
  417d35:	add    BYTE PTR [eax],bl
  417d37:	inc    eax
  417d38:	loope  0x417d06
  417d3a:	popf   
  417d3b:	adc    ch,cl
  417d3d:	sbb    BYTE PTR ds:0x8e15ad42,dl
  417d43:	xor    BYTE PTR [ebp-0x3d23fea4],ch
  417d49:	mov    ecx,0xe58857d0
  417d4e:	jns    0x417d0e
  417d50:	in     al,dx
  417d51:	int3   
  417d52:	and    ebx,ebp
  417d54:	and    edx,edx
  417d56:	nop
  417d57:	pop    edx
  417d58:	adc    edx,edi
  417d5a:	xchg   ebx,eax
  417d5b:	int    0x5c
  417d5d:	lock xchg ebp,eax
  417d5f:	jle    0x417d40
  417d61:	mov    edi,edx
  417d63:	mov    ecx,0xb32e1502
  417d68:	call   0xa3f9f42f
  417d6d:	shr    ch,1
  417d6f:	out    dx,eax
  417d70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d71:	pop    eax
  417d72:	jne    0x417d83
  417d74:	pop    ecx
  417d75:	aad    0x21
  417d77:	lds    ebx,FWORD PTR [esi+esi*8]
  417d7a:	in     al,0xcd
  417d7c:	xor    al,0x76
  417d7e:	aas    
  417d7f:	sbb    DWORD PTR [ebp+0xb6ea5c5],edi
  417d85:	push   esp
  417d86:	jmp    0x417da1
  417d88:	mov    eax,0x2545ba9b
  417d8d:	dec    ebx
  417d8e:	mov    DWORD PTR fs:[ecx],edx
  417d91:	add    DWORD PTR [ecx-0x29],edx
  417d94:	push   esi
  417d95:	mov    esi,0xfa6f2183
  417d9a:	cmp    edx,edi
  417d9c:	push   ebp
  417d9d:	mov    eax,ds:0x2e931c0
  417da2:	(bad)  
  417da3:	mov    ch,0x20
  417da5:	mov    ah,BYTE PTR [ebx+0x64]
  417da8:	xchg   ebx,eax
  417da9:	sub    DWORD PTR es:[edx],ecx
  417dac:	jp     0x417df0
  417dae:	xchg   esp,eax
  417daf:	clc    
  417db0:	cli    
  417db1:	mov    bh,0xeb
  417db3:	(bad)  
  417db4:	loop   0x417def
  417db6:	pop    esi
  417db7:	loope  0x417d66
  417db9:	dec    esi
  417dba:	cmp    eax,0x6163062f
  417dbf:	mov    ecx,0x80173950
  417dc4:	mov    cl,0x54
  417dc6:	xchg   esi,eax
  417dc7:	sub    ecx,DWORD PTR [ebp-0xe]
  417dca:	repnz mov bh,0x69
  417dcd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417dce:	or     eax,0x4cbe70db
  417dd3:	call   0xa79f:0xba29853c
  417dda:	test   eax,0xe9f2256a
  417ddf:	mov    ds:0xacebede3,eax
  417de4:	dec    esi
  417de5:	jl     0x417db4
  417de7:	pop    ds
  417de8:	push   ebp
  417de9:	sub    BYTE PTR [ebx],ah
  417deb:	adc    dl,ah
  417ded:	aaa    
  417dee:	dec    eax
  417def:	div    BYTE PTR [esi-0x1f0b9179]
  417df5:	les    ebp,FWORD PTR [edx-0x1b]
  417df8:	cmp    ah,BYTE PTR [ebp+0x66b926ea]
  417dfe:	mov    eax,ds:0x8c5d15a5
  417e03:	out    0x7f,eax
  417e05:	call   0x3644aa42
  417e0a:	jnp    0x417e89
  417e0c:	add    ecx,edx
  417e0e:	fcompp 
  417e10:	test   BYTE PTR [esp+edx*2+0x53f998ef],ch
  417e17:	outs   dx,BYTE PTR ds:[esi]
  417e18:	push   ss
  417e19:	mov    edx,0x2e42283
  417e1e:	(bad)  
  417e1f:	push   ss
  417e20:	stc    
  417e21:	or     esp,DWORD PTR [edi+esi*2]
  417e24:	mov    edi,0xe4d358f1
  417e29:	mov    WORD PTR [edi-0xe8605f9],cs
  417e2f:	gs add eax,0xe7fed1ac
  417e35:	mov    esp,0x6871e1eb
  417e3a:	mov    esp,0xc5c0762f
  417e3f:	mov    esi,0x7839750b
  417e44:	imul   edi,edx,0x21
  417e47:	sub    esp,ebx
  417e49:	inc    esi
  417e4a:	imul   esp,DWORD PTR [ebx+eax*1+0x5d],0xd5b85f8a
  417e52:	out    0x8b,al
  417e54:	call   0x2936:0x9ba2e18b
  417e5b:	lods   al,BYTE PTR ds:[esi]
  417e5c:	cdq    
  417e5d:	imul   esi,DWORD PTR [edx+0x169badfc],0xfffffff2
  417e64:	adc    al,bh
  417e66:	pop    esi
  417e67:	cmp    DWORD PTR [ebx-0x2cd98064],0x4940b38f
  417e71:	test   BYTE PTR ds:0x19f3b538,bh
  417e77:	scas   al,BYTE PTR es:[edi]
  417e78:	das    
  417e79:	scas   eax,DWORD PTR es:[edi]
  417e7a:	test   al,0xff
  417e7c:	and    al,0xe2
  417e7e:	stc    
  417e7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e80:	jmp    0xfffc3d2
  417e85:	repnz sub al,0xf2
  417e88:	sar    eax,0xc3
  417e8b:	es fs iret 
  417e8e:	test   eax,0x61ad2784
  417e93:	inc    ecx
  417e94:	push   ecx
  417e95:	mov    bl,0xc5
  417e97:	mov    bl,0xee
  417e99:	inc    edi
  417e9a:	sub    al,0x8f
  417e9c:	ror    BYTE PTR [eax-0x71],cl
  417e9f:	mov    ah,0x7c
  417ea1:	ja     0x417e6b
  417ea3:	sbb    ch,bh
  417ea5:	iret   
  417ea6:	scas   al,BYTE PTR es:[edi]
  417ea7:	sbb    eax,DWORD PTR [edi-0x15c4192]
  417ead:	mov    esi,0xaf45c2d2
  417eb2:	xchg   DWORD PTR [ecx-0x6df0be71],edi
  417eb8:	dec    edi
  417eb9:	jns    0x417e44
  417ebb:	outs   dx,DWORD PTR ds:[esi]
  417ebc:	add    BYTE PTR [ebx+0x74],ah
  417ebf:	sbb    DWORD PTR [ebp-0x80],ecx
  417ec2:	lds    edi,FWORD PTR [eax]
  417ec4:	cwd    
  417ec6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ec7:	jne    0x417ec1
  417ec9:	test   al,ch
  417ecb:	adc    DWORD PTR [eax],0x13b1c759
  417ed1:	cmp    DWORD PTR [eax-0x59],ebx
  417ed4:	mov    bl,0x12
  417ed6:	sbb    al,0xea
  417ed8:	fcom   QWORD PTR [ebp+0x1f]
  417edb:	lods   eax,DWORD PTR ds:[esi]
  417edc:	mov    edi,0xd2acabda
  417ee1:	in     eax,dx
  417ee2:	xor    eax,0x4c7b8d7a
  417ee7:	mov    ecx,0xc1dd807f
  417eec:	pop    eax
  417eed:	sub    al,0x94
  417eef:	lods   al,BYTE PTR ds:[esi]
  417ef0:	xor    ebp,DWORD PTR [edx-0x63caba50]
  417ef6:	dec    edi
  417ef7:	repnz sbb al,BYTE PTR [ecx+0x3da0c06e]
  417efe:	inc    edx
  417eff:	pusha  
  417f00:	mov    DWORD PTR [ecx+0x76],eax
  417f03:	int    0x5f
  417f05:	stc    
  417f06:	scas   eax,DWORD PTR es:[edi]
  417f07:	ret    
  417f08:	(bad)  
  417f09:	cmc    
  417f0a:	iret   
  417f0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f0c:	xchg   ebx,eax
  417f0d:	cdq    
  417f0e:	test   BYTE PTR [edx+0x1e5a0966],bh
  417f14:	inc    eax
  417f15:	mov    eax,ds:0x5705cd5d
  417f1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f1b:	and    DWORD PTR cs:[ebp-0x3597ccc7],ebp
  417f22:	mov    eax,0x8662b4c7
  417f27:	sahf   
  417f28:	sbb    eax,0xc17b6b05
  417f2d:	ror    BYTE PTR ds:0x26ea7e24,cl
  417f33:	retf   
  417f34:	div    BYTE PTR [edi]
  417f36:	cld    
  417f37:	fsubr  DWORD PTR [ebx+0x17]
  417f3a:	and    ch,bh
  417f3c:	push   ss
  417f3d:	loope  0x417fa2
  417f3f:	sbb    al,0x80
  417f41:	jl     0x417f7e
  417f43:	mov    ds:0x953dded0,al
  417f48:	xchg   esp,eax
  417f49:	jg     0x417fa3
  417f4b:	lods   al,BYTE PTR ds:[esi]
  417f4c:	scas   eax,DWORD PTR es:[edi]
  417f4d:	jbe    0x417f06
  417f4f:	mov    ah,0xe7
  417f51:	mov    ecx,0x40dd1ac0
  417f56:	stc    
  417f57:	fdivr  DWORD PTR [edx]
  417f59:	xor    DWORD PTR [ecx],0xffffffa2
  417f5c:	mov    esp,0x420d82e9
  417f61:	inc    esp
  417f62:	test   BYTE PTR [esi+0x60],0xd5
  417f66:	xor    dl,BYTE PTR [edx+0xb50f218]
  417f6c:	fs xchg ebx,eax
  417f6e:	rcr    BYTE PTR [ebx-0x7245092f],cl
  417f74:	shr    esi,0xbe
  417f77:	jmp    0x417f01
  417f79:	std    
  417f7a:	cld    
  417f7b:	jne    0x417feb
  417f7d:	iret   
  417f7e:	xchg   edi,eax
  417f7f:	mov    eax,ds:0xd6d7668c
  417f84:	(bad)  
  417f85:	das    
  417f86:	cli    
  417f87:	dec    eax
  417f88:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f8a:	push   esi
  417f8b:	nop
  417f8c:	pop    eax
  417f8d:	cmp    ah,BYTE PTR [ebp-0x4ffe865f]
  417f93:	(bad)  fs:[esi+0x7f]
  417f97:	lods   al,BYTE PTR ds:[esi]
  417f98:	add    cl,BYTE PTR ss:[edi]
  417f9b:	sub    BYTE PTR [eax],bl
  417f9d:	daa    
  417f9e:	pop    esp
  417f9f:	into   
  417fa0:	pusha  
  417fa1:	iret   
  417fa2:	test   DWORD PTR [edx+0x48],esp
  417fa5:	mov    ecx,DWORD PTR [ecx]
  417fa7:	fcmovbe st,st(3)
  417fa9:	pop    eax
  417faa:	add    ebp,DWORD PTR [edi+0x14253814]
  417fb0:	inc    esi
  417fb1:	icebp  
  417fb2:	imul   esi,esp,0x8
  417fb5:	xchg   edi,eax
  417fb6:	push   esi
  417fb7:	inc    esi
  417fb8:	cdq    
  417fb9:	punpcklwd mm6,DWORD PTR [eax-0x1590ca12]
  417fc0:	jbe    0x41801f
  417fc2:	jb     0x417fb3
  417fc4:	loop   0x41802d
  417fc6:	call   DWORD PTR [ebx+edi*1+0x199857a0]
  417fcd:	add    eax,0x1c12dcb
  417fd2:	and    eax,0xa771e8fb
  417fd7:	loopne 0x41804b
  417fd9:	pop    ecx
  417fda:	cld    
  417fdb:	jo     0x41804e
  417fdd:	repz sti 
  417fdf:	out    dx,al
  417fe0:	adc    eax,0xe18b8720
  417fe5:	fwait
  417fe6:	mov    ds:0xc13de42f,al
  417feb:	adc    al,0xd5
  417fed:	fsub   st,st(2)
  417fef:	cmp    eax,0xe2d506fc
  417ff4:	stos   DWORD PTR es:[edi],eax
  417ff5:	mov    ecx,0x50349467
  417ffa:	leave  
  417ffb:	jne    0x417fd5
  417ffd:	(bad)  
  417ffe:	gs sub eax,0x15ba06a5
  418004:	mov    ebx,0x9e90524f
  418009:	repnz lds ebp,FWORD PTR [eax-0x48b9b543]
  418010:	sub    DWORD PTR cs:[ebx-0x40],ecx
  418014:	repnz in eax,0xc2
  418017:	cdq    
  418018:	mov    ecx,0xa1486fb1
  41801d:	pop    ds
  41801e:	nop
  41801f:	jb     0x41807f
  418021:	fstp   DWORD PTR [ebx+0x7a]
  418024:	inc    edx
  418025:	jp     0x418067
  418027:	push   cs
  418028:	in     al,dx
  418029:	mov    es,WORD PTR [esi+0x51]
  41802c:	or     al,0x8b
  41802e:	and    BYTE PTR [eax],dl
  418030:	add    ebp,DWORD PTR [ebp+0x5c]
  418033:	and    BYTE PTR [ecx-0x3d63d1c6],bh
  418039:	sbb    ebp,DWORD PTR [ebx]
  41803b:	lods   al,BYTE PTR ds:[esi]
  41803c:	shr    edi,cl
  41803e:	shr    BYTE PTR [esp+ecx*8],cl
  418041:	fmul   DWORD PTR [ecx-0x57]
  418044:	xchg   ebx,eax
  418045:	in     eax,dx
  418046:	call   0x69b4:0x67ed73b2
  41804d:	sbb    DWORD PTR ds:0x565ff91c,ecx
  418053:	call   0x90d37757
  418058:	imul   esi,DWORD PTR [eax+0x74],0x54df8b4f
  41805f:	cli    
  418060:	sub    DWORD PTR [ebx+eiz*8],ebp
  418063:	call   esp
  418065:	or     DWORD PTR [esi],ebx
  418067:	xchg   ecx,eax
  418068:	ins    DWORD PTR es:[edi],dx
  418069:	in     eax,dx
  41806a:	sub    eax,DWORD PTR ds:0xf65ef931
  418070:	cmp    DWORD PTR [ebx],eax
  418072:	or     ah,BYTE PTR [edi-0x18eb8f4]
  418078:	out    dx,eax
  418079:	scas   eax,DWORD PTR es:[edi]
  41807a:	es or  al,0xce
  41807d:	iret   
  41807e:	repz mov ah,BYTE PTR [eax]
  418081:	cmp    eax,0x362bafd2
  418086:	mov    ch,0x76
  418088:	add    DWORD PTR [ebp-0x6c671454],eax
  41808e:	cs test eax,0x89e7fe4c
  418094:	pop    ebp
  418095:	adc    edx,edi
  418097:	bswap  esi
  418099:	and    esp,0xffffffa7
  41809c:	cld    
  41809d:	pop    es
  41809e:	push   edi
  41809f:	les    edx,FWORD PTR [ebx+ebx*8-0x3e]
  4180a3:	inc    edx
  4180a4:	int3   
  4180a5:	push   esi
  4180a6:	dec    bh
  4180a8:	xchg   DWORD PTR [ebx],eax
  4180aa:	add    edx,ebp
  4180ac:	in     eax,dx
  4180ad:	sbb    dl,BYTE PTR [esi]
  4180af:	test   eax,0x74c467f9
  4180b4:	pop    edx
  4180b5:	inc    edi
  4180b6:	in     eax,dx
  4180b7:	ret    0x5b6d
  4180ba:	nop
  4180bb:	jb     0x418043
  4180bd:	retf   0x53d7
  4180c0:	cmc    
  4180c1:	adc    ah,BYTE PTR [eax]
  4180c3:	pop    esp
  4180c4:	adc    DWORD PTR [ebp+0x61],0xa25547cc
  4180cb:	scas   eax,DWORD PTR es:[edi]
  4180cc:	xor    ebx,DWORD PTR [ebx+0x3f]
  4180cf:	dec    esp
  4180d0:	xor    DWORD PTR [esi],eax
  4180d2:	mov    al,0x9f
  4180d4:	pop    ecx
  4180d5:	mov    al,BYTE PTR [ebx+0x54]
  4180d8:	xchg   esp,eax
  4180d9:	(bad)
  4180dc:	retf   0x9b25
  4180df:	and    DWORD PTR [ecx+0xf3d0375],esp
  4180e5:	(bad)  
  4180e6:	jne    0x4180e8
  4180e8:	mov    ah,al
  4180ea:	aaa    
  4180eb:	jecxz  0x418117
  4180ed:	pop    ss
  4180ee:	aam    0x8e
  4180f0:	in     eax,dx
  4180f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4180f2:	ret    
  4180f3:	sub    al,0x9b
  4180f5:	les    ebp,FWORD PTR [ebp-0x6951230f]
  4180fb:	adc    bl,BYTE PTR [esi+0x2]
  4180fe:	add    DWORD PTR [edi+eiz*2+0x10],0xc9c2eed9
  418106:	in     eax,dx
  418107:	pop    ebx
  418108:	xor    ah,0x72
  41810b:	(bad)  
  41810c:	and    esp,DWORD PTR [eax+0x3713242b]
  418112:	(bad)  [edi+0x78774312]
  418118:	ss mov ebp,0x11edc7de
  41811e:	push   0xffffffa8
  418120:	stos   DWORD PTR es:[edi],eax
  418121:	adc    esp,DWORD PTR [ebx]
  418123:	mov    ebp,0xab01b889
  418128:	push   ebp
  418129:	sub    ax,0x7edb
  41812d:	pop    edx
  41812e:	scas   al,BYTE PTR es:[edi]
  41812f:	js     0x4181af
  418131:	mov    WORD PTR [eax-0x7e9a3c2b],ss
  418137:	or     BYTE PTR [edx-0x15],bl
  41813a:	out    dx,al
  41813b:	sti    
  41813c:	add    BYTE PTR [edx-0x2f86dc33],bh
  418142:	int3   
  418143:	cmp    BYTE PTR [esi-0x6b2bae51],al
  418149:	stos   DWORD PTR es:[edi],eax
  41814a:	mov    ebx,0xeca2434d
  41814f:	sbb    eax,0x92776212
  418154:	xchg   BYTE PTR ds:0xa80a3076,dl
  41815a:	retf   0xd155
  41815d:	mov    dh,0xcc
  41815f:	sub    DWORD PTR [ebx+0x67],edi
  418162:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418163:	adc    DWORD PTR [eax+0x2c7c64],ebx
  418169:	mov    bl,0x7e
  41816b:	fs jb  0x418135
  41816e:	pop    edi
  41816f:	out    dx,al
  418170:	mov    ch,0x7e
  418172:	imul   ecx,DWORD PTR [eax],0x3b
  418175:	or     al,0xef
  418177:	jne    0x418174
  418179:	ss stos BYTE PTR es:[edi],al
  41817b:	cmp    dh,bl
  41817d:	mov    esi,0x905c1fe0
  418182:	mov    DWORD PTR [ebp-0x41],0x12c85936
  418189:	push   esp
  41818a:	rcr    BYTE PTR [ebx-0x30],1
  41818d:	adc    cl,cl
  41818f:	stos   BYTE PTR es:[edi],al
  418190:	dec    esp
  418191:	cmp    DWORD PTR [ebx],0x59
  418194:	test   BYTE PTR [esi],bl
  418196:	aam    0xaa
  418198:	(bad)  
  418199:	push   ds
  41819a:	inc    ecx
  41819b:	call   0xfa72:0xe0a6560d
  4181a2:	and    ah,BYTE PTR ds:0xcb1fa9f0
  4181a8:	test   al,0xe8
  4181aa:	pop    edi
  4181ab:	js     0x418200
  4181ad:	and    eax,0x6b5a9381
  4181b2:	jmp    DWORD PTR [esi-0x19]
  4181b5:	rcr    ebx,cl
  4181b7:	scas   al,BYTE PTR es:[edi]
  4181b8:	(bad)  
  4181ba:	inc    esp
  4181bb:	cmp    dl,BYTE PTR [edx-0x6]
  4181be:	inc    BYTE PTR [ecx+0x7a]
  4181c1:	int3   
  4181c2:	pop    ss
  4181c3:	ret    0x5998
  4181c6:	xchg   esp,eax
  4181c7:	inc    edi
  4181c8:	push   0xffffff96
  4181ca:	rcr    BYTE PTR [ecx+eiz*2-0x3d],1
  4181ce:	sbb    dl,BYTE PTR [edi-0x16360d2e]
  4181d4:	jb     0x418175
  4181d6:	xchg   edi,eax
  4181d7:	pop    ebx
  4181d8:	xor    BYTE PTR [esi],bh
  4181da:	fwait
  4181db:	adc    DWORD PTR [edx-0x389837ac],esi
  4181e1:	mov    esi,0xe57913fb
  4181e6:	outs   dx,BYTE PTR ds:[esi]
  4181e7:	aad    0xe0
  4181e9:	addr16 push es
  4181eb:	dec    edi
  4181ec:	jle    0x418229
  4181ee:	int3   
  4181ef:	xor    ax,0x614c
  4181f3:	or     bh,dl
  4181f5:	daa    
  4181f6:	leave  
  4181f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4181f8:	shl    DWORD PTR ds:0xb4c4e886,1
  4181fe:	add    edx,DWORD PTR [edi-0x14]
  418201:	push   0xffffffbf
  418203:	sbb    ah,cl
  418205:	or     esi,esp
  418207:	pop    ebx
  418208:	lods   al,BYTE PTR ds:[esi]
  418209:	pop    esp
  41820a:	mov    dh,0x82
  41820c:	das    
  41820d:	loope  0x418281
  41820f:	mov    eax,ds:0x39789cb1
  418214:	sub    DWORD PTR [ecx+ecx*1+0x20],esi
  418218:	das    
  418219:	(bad)  
  41821a:	mov    bl,0x4b
  41821c:	ds jns 0x4181c2
  41821f:	cld    
  418220:	fs sahf 
  418222:	mov    edi,0x1f4708f8
  418227:	outs   dx,BYTE PTR ds:[esi]
  418228:	lock mov bl,dl
  41822b:	ja     0x41825c
  41822d:	outs   dx,DWORD PTR ds:[esi]
  41822e:	(bad)  
  41822f:	gs inc edx
  418231:	xor    al,0x3a
  418233:	mov    bl,0xfd
  418235:	aas    
  418236:	in     eax,dx
  418237:	call   0xd94e:0x2929214f
  41823e:	or     eax,0xce881756
  418243:	sub    eax,0xc8e28daa
  418248:	inc    cx
  41824a:	push   edx
  41824b:	jno    0x4182a1
  41824d:	scas   eax,DWORD PTR es:[edi]
  41824e:	cld    
  41824f:	fstp   DWORD PTR [ecx]
  418251:	outs   dx,BYTE PTR ds:[esi]
  418252:	add    al,0xd
  418254:	iret   
  418255:	cmp    al,0xb
  418257:	pop    ebp
  418258:	or     esp,DWORD PTR [ecx+0x3dc22b1a]
  41825e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41825f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418260:	(bad)  
  418261:	fsubr  QWORD PTR [ebx+0x5e813cf7]
  418267:	mov    esp,0x812a4f2d
  41826c:	lds    esi,FWORD PTR [edi+esi*8+0x7b]
  418270:	lahf   
  418271:	adc    ah,ch
  418273:	jnp    0x418272
  418275:	out    0x94,al
  418277:	mov    ds,WORD PTR [esi-0x37]
  41827a:	(bad)  
  41827b:	push   ebp
  41827c:	xchg   ebp,eax
  41827d:	cs xor eax,0x94608749
  418283:	jl     0x41822c
  418285:	pop    es
  418286:	and    BYTE PTR [esi-0x3b29d1a9],ah
  41828c:	test   eax,0x44b9839b
  418291:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418292:	mov    ds:0x87bfa058,al
  418297:	lods   eax,DWORD PTR ds:[esi]
  418298:	inc    edx
  418299:	cmp    DWORD PTR [eax],edx
  41829b:	ret    0x87bf
  41829e:	retf   0x814b
  4182a1:	ins    DWORD PTR es:[edi],dx
  4182a2:	add    BYTE PTR [edi+0x78],0x7b
  4182a6:	ficom  WORD PTR [ecx-0x2a]
  4182a9:	in     al,0xa9
  4182ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4182ac:	sbb    ebx,DWORD PTR [ebx+ebx*2]
  4182af:	scas   al,BYTE PTR es:[edi]
  4182b0:	cdq    
  4182b1:	rcl    DWORD PTR [ebp-0x66],cl
  4182b4:	pop    eax
  4182b5:	push   ecx
  4182b6:	dec    ebx
  4182b7:	es dec ecx
  4182b9:	cmp    DWORD PTR [ecx+0x284b475a],eax
  4182bf:	add    BYTE PTR [edi-0x48db88ea],0xd7
  4182c6:	jecxz  0x4182f8
  4182c8:	push   esp
  4182c9:	leave  
  4182ca:	hlt    
  4182cb:	repnz out 0xb2,al
  4182ce:	sbb    ah,BYTE PTR [edi+0x4e]
  4182d1:	jbe    0x4182ce
  4182d3:	dec    eax
  4182d4:	mov    esi,0x96d99b09
  4182d9:	mov    esi,0xe9ad6638
  4182de:	jg     0x4182ce
  4182e0:	cld    
  4182e1:	mov    ecx,0x6a3efaf7
  4182e6:	data16 jecxz 0x418366
  4182e9:	mov    ch,0x87
  4182eb:	xor    eax,0xda9993e9
  4182f0:	test   DWORD PTR [edx],esi
  4182f2:	push   eax
  4182f3:	lods   eax,DWORD PTR ds:[esi]
  4182f4:	scas   al,BYTE PTR es:[edi]
  4182f5:	xchg   esp,eax
  4182f6:	fwait
  4182f7:	cmp    eax,0x1a2421a3
  4182fc:	int3   
  4182fd:	cmp    eax,0x7b96030f
  418302:	push   0x17
  418304:	sub    dh,BYTE PTR [edx-0x67]
  418307:	aad    0x2a
  418309:	or     esp,DWORD PTR [eax-0xb]
  41830c:	das    
  41830d:	mov    DWORD PTR [edx+esi*8-0x74],ebp
  418311:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418312:	test   al,0x68
  418314:	js     0x4182b1
  418316:	pop    ecx
  418317:	pop    eax
  418318:	or     ah,BYTE PTR [edi*1+0x6fb1505]
  41831f:	(bad)  
  418320:	mov    bh,BYTE PTR [edx-0x5d]
  418323:	xor    BYTE PTR [ebx+0x2d6ad225],ah
  418329:	lea    edx,[eax-0x76]
  41832c:	mov    bl,0xee
  41832e:	sub    eax,0xaa373d6d
  418333:	lock fs retf 0x5383
  418338:	shr    ecx,0x4c
  41833b:	xchg   ebp,eax
  41833c:	stc    
  41833d:	jo     0x4183ac
  41833f:	int3   
  418340:	rcl    BYTE PTR [edi],0x79
  418343:	pusha  
  418344:	pop    eax
  418345:	mov    BYTE PTR [ebx-0x6c],ah
  418348:	jg     0x418315
  41834a:	jge    0x4182f7
  41834c:	add    DWORD PTR [esi+0x651a44aa],eax
  418352:	xor    al,BYTE PTR [edi-0x47]
  418355:	addr16 push 0xfffffffd
  418358:	ja     0x418348
  41835a:	pop    ss
  41835b:	xor    DWORD PTR [eax+0x1f018a5],ecx
  418361:	arpl   WORD PTR ds:0x104c5bb5,sp
  418367:	lock les edx,FWORD PTR ds:0xfb4a07d0
  41836e:	je     0x4183d3
  418370:	cs scas eax,DWORD PTR es:[edi]
  418372:	add    esp,ebx
  418374:	pop    esi
  418375:	stc    
  418376:	cmp    eax,0x184b984a
  41837b:	mov    edi,0x967c96b2
  418380:	(bad)  
  418381:	cmp    BYTE PTR [esi-0xc],dl
  418384:	cmc    
  418385:	adc    eax,esi
  418387:	iret   
  418388:	pop    ds
  418389:	cmp    BYTE PTR [eax],ah
  41838b:	in     al,dx
  41838c:	xor    eax,0xc1288d09
  418391:	out    0x82,eax
  418393:	daa    
  418394:	in     eax,0xa6
  418396:	loopne 0x4183a8
  418398:	jbe    0x4183df
  41839a:	xor    BYTE PTR [esi+0x21ea6fc0],ch
  4183a0:	mov    ecx,0x1a3acde
  4183a5:	ss (bad) 
  4183a7:	add    al,0xc4
  4183a9:	cld    
  4183aa:	ror    ebx,1
  4183ac:	leave  
  4183ad:	dec    ebp
  4183ae:	sub    BYTE PTR [esi-0x4da7fc22],ah
  4183b4:	jmp    FWORD PTR [edx+esi*1+0x2]
  4183b8:	ret    0xca4
  4183bb:	push   esp
  4183bc:	or     BYTE PTR [ebx+ebx*8+0x2cef0e5b],ch
  4183c3:	cmc    
  4183c4:	mov    bl,0x32
  4183c6:	fnstsw WORD PTR [edi+0x41fb1aad]
  4183cc:	and    BYTE PTR [edi+0x1a],al
  4183cf:	repnz xchg ah,dh
  4183d2:	ja     0x4183ee
  4183d4:	mov    bh,cl
  4183d6:	adc    dl,BYTE PTR [edx+0x30]
  4183d9:	outs   dx,DWORD PTR ds:[esi]
  4183da:	sbb    edi,DWORD PTR [eax]
  4183dc:	mov    ebx,0x26573dfa
  4183e1:	and    al,0xee
  4183e3:	stos   BYTE PTR es:[edi],al
  4183e4:	add    DWORD PTR [edx+0x24],eax
  4183e7:	ja     0x4183a2
  4183e9:	shl    BYTE PTR [edx],1
  4183eb:	fcom   DWORD PTR [ebp+0x40]
  4183ee:	and    eax,0x74354915
  4183f3:	jle    0x41844d
  4183f5:	add    dl,BYTE PTR [ecx+0x31de89fc]
  4183fb:	nop
  4183fc:	jbe    0x4183ce
  4183fe:	cwde   
  4183ff:	mov    edx,0xa0ee2376
  418404:	pop    edx
  418405:	and    esp,ebp
  418407:	hlt    
  418408:	sahf   
  418409:	out    dx,al
  41840a:	stos   BYTE PTR es:[edi],al
  41840b:	or     ebp,DWORD PTR [esi-0x62]
  41840e:	push   ebx
  41840f:	dec    edx
  418410:	int    0xac
  418412:	arpl   WORD PTR [esi-0x31],dx
  418415:	jmp    0x41783281
  41841a:	out    0xa5,eax
  41841c:	push   esp
  41841d:	daa    
  41841e:	dec    esi
  41841f:	lea    edi,[ebp-0x663c183e]
  418425:	push   0x184e614
  41842a:	shr    BYTE PTR [ebx+0x64e12df],1
  418430:	push   ebx
  418431:	les    ecx,FWORD PTR [esi+0x2b]
  418434:	js     0x418423
  418436:	(bad)  
  418437:	iret   
  418438:	jle    0x4184b6
  41843a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41843b:	push   0x51
  41843d:	inc    ebx
  41843e:	add    edi,DWORD PTR [ebx]
  418440:	cmp    BYTE PTR [ecx],al
  418442:	cs sbb al,0x40
  418445:	scas   al,BYTE PTR es:[edi]
  418446:	or     eax,esp
  418448:	xchg   ebp,edx
  41844a:	mov    al,bl
  41844c:	(bad)  
  41844d:	jmp    0x418403
  41844f:	call   0xaa01:0x75609146
  418456:	cmp    al,BYTE PTR [ebx-0x5003914f]
  41845c:	cdq    
  41845d:	mov    edx,0x7ac512a0
  418462:	ja     0x4184a6
  418464:	stc    
  418465:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418466:	sbb    BYTE PTR [eax+0x31150f2f],0x80
  41846d:	aad    0x1f
  41846f:	gs sbb eax,0x319b8457
  418475:	ds ins BYTE PTR es:[edi],dx
  418477:	add    dl,cl
  418479:	lods   al,BYTE PTR ds:[esi]
  41847a:	adc    esi,DWORD PTR [esp+eax*1]
  41847d:	mov    ebx,0xac2836df
  418482:	jle    0x418482
  418484:	sub    DWORD PTR [ecx-0x37bd62da],edi
  41848a:	add    DWORD PTR ds:0x1f7ba5b9,edi
  418490:	or     eax,0x820d4a36
  418495:	(bad)  
  418496:	loop   0x4184c3
  418498:	pop    edx
  418499:	test   DWORD PTR [ecx+0x2a3f852e],edi
  41849f:	aam    0xc4
  4184a1:	xor    bl,0x42
  4184a4:	jo     0x41848d
  4184a6:	shl    DWORD PTR [ecx],cl
  4184a8:	fcmovb st,st(7)
  4184aa:	push   0x2
  4184ac:	retf   
  4184ad:	push   esi
  4184ae:	mov    ch,0x86
  4184b0:	mov    ah,al
  4184b2:	jle    0x4184ca
  4184b4:	add    DWORD PTR [ebp+0xa49d3e8],0x2326762e
  4184be:	stos   DWORD PTR es:[edi],eax
  4184bf:	pop    esp
  4184c0:	inc    edx
  4184c1:	add    DWORD PTR [ebp+0x6f734a7b],ebx
  4184c7:	adc    DWORD PTR [edx-0x25],ecx
  4184ca:	jg     0x4184c9
  4184cc:	loope  0x418476
  4184ce:	push   esi
  4184cf:	add    DWORD PTR [edi],esi
  4184d1:	fadd   QWORD PTR [ebx+0x44]
  4184d4:	daa    
  4184d5:	sbb    DWORD PTR [eax],edi
  4184d7:	fild   QWORD PTR [esi+0x7dfab8b0]
  4184dd:	cmp    edi,DWORD PTR [ebx+ebx*2+0x5e]
  4184e1:	outs   dx,DWORD PTR ds:[esi]
  4184e2:	iret   
  4184e3:	or     eax,0xea0947a3
  4184e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4184e9:	xchg   ecx,eax
  4184ea:	mov    dh,cl
  4184ec:	jae    0x41853b
  4184ee:	je     0x418548
  4184f0:	mov    al,0x8e
  4184f2:	push   esi
  4184f3:	mul    BYTE PTR [eax-0x5d50754a]
  4184f9:	xor    DWORD PTR [ebp-0x13208573],edx
  4184ff:	addr16 aad 0x1b
  418502:	dec    eax
  418503:	iret   
  418504:	adc    ebp,DWORD PTR [ebx]
  418506:	sbb    DWORD PTR [ebx+ebp*8],esp
  418509:	adc    bh,ah
  41850b:	jo     0x4184e9
  41850d:	inc    esp
  41850e:	push   ss
  41850f:	iret   
  418510:	sbb    eax,0x1c8aebf
  418515:	push   ebx
  418516:	call   0x7125eeb6
  41851b:	cmp    edi,esi
  41851d:	push   ecx
  41851e:	hlt    
  41851f:	dec    eax
  418520:	sub    eax,DWORD PTR [edi-0x44b6dbfd]
  418526:	(bad)  
  418527:	test   eax,0x683b513
  41852c:	popf   
  41852d:	shr    DWORD PTR [ebx+0x3851e406],cl
  418533:	fwait
  418534:	mov    dh,0x95
  418536:	rcl    edx,cl
  418538:	push   ebp
  418539:	in     eax,dx
  41853a:	mov    cl,0xa3
  41853c:	add    dl,BYTE PTR [eax]
  41853e:	(bad)  
  41853f:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418541:	les    ebp,FWORD PTR [esi+0x60ff56c4]
  418547:	(bad)  
  418549:	fwait
  41854a:	push   0x76
  41854c:	push   eax
  41854d:	in     eax,0x67
  41854f:	ficomp DWORD PTR [esi]
  418551:	fucom  st(7)
  418553:	xchg   esi,eax
  418554:	mov    dh,0x20
  418556:	fs jmp 0xad17:0x15526ff9
  41855e:	pop    ss
  41855f:	(bad)  
  418560:	sub    ebp,DWORD PTR [edx+0x52d7abb0]
  418566:	cmp    DWORD PTR [esi-0x1404ebf3],esp
  41856c:	clc    
  41856d:	sub    DWORD PTR [ecx],esp
  41856f:	fidivr WORD PTR [edx+0x4d]
  418572:	pushf  
  418573:	xchg   ecx,eax
  418574:	xchg   ebp,eax
  418575:	test   bh,0xac
  418578:	xchg   ebx,eax
  418579:	jmp    0x51e7ea37
  41857e:	imul   eax,DWORD PTR [esi+ecx*1-0x432a246b],0xffffffe1
  418586:	mov    ds:0xf486f878,al
  41858b:	(bad)  
  41858c:	or     bx,WORD PTR [edi-0xaf73a8e]
  418593:	lock outs dx,DWORD PTR ds:[esi]
  418595:	psadbw mm1,QWORD PTR [edx]
  418598:	lods   eax,DWORD PTR ds:[esi]
  418599:	dec    ecx
  41859a:	and    ebx,esi
  41859c:	mov    eax,ds:0x8d850216
  4185a1:	mov    ah,ch
  4185a3:	call   0x652c:0x72ddeba3
  4185aa:	mov    al,ds:0x2449c24d
  4185af:	pop    ecx
  4185b0:	das    
  4185b1:	mov    ds:0xfe11f311,al
  4185b6:	inc    ebp
  4185b8:	pop    edi
  4185b9:	dec    eax
  4185ba:	pop    es
  4185bb:	icebp  
  4185bc:	push   ebx
  4185bd:	ins    BYTE PTR es:[edi],dx
  4185be:	and    edi,DWORD PTR [esi+0x44]
  4185c1:	loop   0x4185c7
  4185c3:	sub    esi,DWORD PTR [esi-0x39]
  4185c6:	xchg   bl,bl
  4185c8:	cld    
  4185c9:	imul   ebx,DWORD PTR [edx+eax*2-0x4a6fb4a8],0x67d3a0f
  4185d4:	iret   
  4185d5:	or     al,0x91
  4185d7:	into   
  4185d8:	in     eax,0x20
  4185da:	mov    ebp,0x44ffd896
  4185df:	aas    
  4185e0:	icebp  
  4185e1:	pop    esp
  4185e2:	lea    eax,[edi]
  4185e4:	shl    DWORD PTR [edx+0x41f7e078],0x3e
  4185eb:	mov    BYTE PTR [edx+eiz*4],al
  4185ee:	les    edx,FWORD PTR [ebx+0x71]
  4185f1:	jae    0x418658
  4185f3:	mov    esi,0xf2d7a0b4
  4185f8:	hlt    
  4185f9:	pop    ds
  4185fa:	mov    al,ds:0x31f135cc
  4185ff:	jge    0x41861a
  418601:	out    dx,al
  418602:	mov    ds:0xbc368fde,al
  418607:	pop    esp
  418608:	nop
  418609:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41860a:	dec    esi
  41860b:	sti    
  41860c:	or     eax,0x8f8c8167
  418611:	test   al,0xea
  418613:	int3   
  418614:	ins    BYTE PTR es:[edi],dx
  418615:	push   ecx
  418616:	and    edi,edi
  418618:	retf   
  418619:	shl    BYTE PTR [ecx*2+0x4dc21b68],0x14
  418621:	adc    bh,BYTE PTR [esi]
  418623:	sub    al,0xba
  418625:	scas   eax,DWORD PTR es:[edi]
  418626:	adc    DWORD PTR [edx],esi
  418628:	stos   WORD PTR es:[edi],ax
  41862a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41862b:	cmp    al,0xa8
  41862d:	add    DWORD PTR [esi],0xffffffb6
  418630:	les    esi,FWORD PTR [edi-0x2f7fb50f]
  418636:	inc    esp
  418637:	sahf   
  418638:	les    esp,FWORD PTR [esp+eax*8]
  41863b:	adc    al,0xeb
  41863d:	imul   ebp,DWORD PTR ds:0xf0df9b8e,0x34
  418644:	lahf   
  418645:	mov    DWORD PTR [eax-0x42],esi
  418648:	and    esi,edi
  41864a:	stos   BYTE PTR es:[edi],al
  41864b:	xchg   ebp,eax
  41864c:	cmc    
  41864d:	inc    esp
  41864e:	xchg   edi,eax
  41864f:	jmp    0xf9387f35
  418654:	jmp    0xabec:0x25d3f9b7
  41865b:	add    eax,DWORD PTR [eax]
  41865d:	dec    ebx
  41865e:	ins    DWORD PTR es:[edi],dx
  41865f:	jle    0x418648
  418661:	aad    0x9e
  418663:	sti    
  418664:	scas   al,BYTE PTR es:[edi]
  418665:	jae    0x41864b
  418667:	ja     0x41867c
  418669:	add    al,0xde
  41866b:	cmp    BYTE PTR [ebp-0x12],ah
  41866e:	aam    0x6b
  418670:	xor    edi,ebp
  418672:	push   ebp
  418673:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418674:	pop    esp
  418675:	out    0x72,eax
  418677:	adc    al,0x8e
  418679:	inc    esp
  41867a:	cmp    al,BYTE PTR [esi+0x4cea18ad]
  418680:	into   
  418681:	dec    edx
  418682:	inc    esp
  418683:	loop   0x41860a
  418685:	push   ecx
  418686:	xor    ebx,DWORD PTR [edi]
  418688:	push   ebp
  418689:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41868a:	scas   al,BYTE PTR es:[edi]
  41868b:	dec    edx
  41868c:	push   eax
  41868d:	xor    cl,BYTE PTR [ecx]
  41868f:	pop    edi
  418690:	(bad)  
  418691:	ficom  WORD PTR [edi-0x1]
  418694:	mov    edi,0x84b89d89
  418699:	add    eax,0x2b05e81d
  41869e:	je     0x4186e9
  4186a0:	jg     0x41870e
  4186a2:	lds    ebp,FWORD PTR [eax+0x55ffef6a]
  4186a8:	dec    ebp
  4186a9:	adc    DWORD PTR [edi+eax*4],ebp
  4186ac:	mov    eax,ds:0xa1aea66c
  4186b1:	xchg   esp,eax
  4186b2:	jmp    0x2a0:0x77051474
  4186b9:	push   cs
  4186ba:	stos   BYTE PTR es:[edi],al
  4186bb:	inc    esi
  4186bc:	xor    ebp,DWORD PTR [edx+0x57]
  4186bf:	sbb    al,0xf0
  4186c1:	mov    ecx,0x7295bf79
  4186c6:	stos   DWORD PTR es:[edi],eax
  4186c7:	sub    eax,0xefc6cb01
  4186cc:	loope  0x41866e
  4186ce:	xchg   esi,eax
  4186cf:	or     DWORD PTR [edx+ebx*1+0x16e8888e],edx
  4186d6:	je     0x4186c0
  4186d8:	stc    
  4186d9:	icebp  
  4186da:	pop    ds
  4186db:	dec    esp
  4186dc:	cmp    dh,BYTE PTR [ebx]
  4186de:	sahf   
  4186df:	adc    BYTE PTR [ecx],cl
  4186e1:	cmp    dl,BYTE PTR [edi-0x70c63b03]
  4186e7:	jg     0x4186dc
  4186e9:	fs inc esp
  4186eb:	es cmp ecx,0x65
  4186ef:	arpl   dx,bx
  4186f1:	pop    ebx
  4186f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4186f3:	bound  eax,QWORD PTR [ebx-0x755d44a5]
  4186f9:	into   
  4186fa:	pop    ecx
  4186fb:	idiv   bl
  4186fd:	dec    edi
  4186fe:	push   ecx
  4186ff:	or     ah,ch
  418701:	inc    ecx
  418702:	js     0x4186c8
  418704:	stc    
  418705:	inc    edx
  418706:	icebp  
  418707:	shl    DWORD PTR [ebx+0x78],1
  41870a:	mov    dh,0x87
  41870c:	xor    DWORD PTR [eax-0x19],esp
  41870f:	sbb    esp,DWORD PTR [edi-0xbdc78d5]
  418715:	sub    DWORD PTR [ebp+0x14],edx
  418718:	add    eax,0xb2ddeac8
  41871d:	mov    esi,0xffe2cfcd
  418722:	sbb    al,0x12
  418724:	rol    DWORD PTR [esi+0x6e],cl
  418727:	frstor [ebp+ecx*4-0x75]
  41872b:	fsub   st,st(0)
  41872d:	lods   eax,DWORD PTR ds:[esi]
  41872e:	or     edx,edi
  418730:	jge    0x41874d
  418732:	add    BYTE PTR [eax],0x32
  418735:	push   ebx
  418736:	adc    eax,0xa5bd255b
  41873b:	pop    ss
  41873c:	jne    0x418714
  41873e:	ins    BYTE PTR es:[edi],dx
  41873f:	mov    WORD PTR [ebx],fs
  418741:	mov    edx,0xd3260410
  418746:	jmp    0xe8bfb969
  41874b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41874c:	stos   DWORD PTR es:[edi],eax
  41874d:	mov    WORD PTR [edi],ds
  41874f:	sbb    DWORD PTR [ebp-0x38],esi
  418752:	or     al,0x9e
  418754:	mov    esp,0x6bdd28d9
  418759:	mov    bh,0x44
  41875b:	retf   0x6090
  41875e:	dec    ebx
  41875f:	int    0xc
  418761:	push   ebx
  418762:	mov    es:0xc1d7713b,eax
  418768:	cmp    ah,bl
  41876a:	arpl   ax,bx
  41876c:	aad    0x7d
  41876e:	or     eax,0x5343bde6
  418773:	push   eax
  418774:	sbb    al,0xf9
  418776:	imul   DWORD PTR [edi-0x1f]
  418779:	dec    ebx
  41877a:	xchg   edx,eax
  41877b:	popf   
  41877c:	and    BYTE PTR [esi+0x139445b3],ah
  418782:	jl     0x4187ee
  418784:	int3   
  418785:	gs jmp 0x418785
  418788:	jecxz  0x418721
  41878a:	push   edi
  41878b:	push   ebx
  41878c:	jle    0x418794
  41878e:	out    0x74,al
  418790:	or     ah,BYTE PTR [eax]
  418792:	in     al,0x64
  418794:	or     bh,BYTE PTR [esi+0x684a7353]
  41879a:	push   ds
  41879b:	imul   esi,esp,0x21
  41879e:	stc    
  41879f:	dec    edx
  4187a0:	xchg   esi,eax
  4187a1:	pop    ebp
  4187a3:	push   0xee44d6dd
  4187a8:	xor    al,0x53
  4187aa:	mov    al,ds:0x6808caf6
  4187af:	add    eax,0x60ffceb6
  4187b4:	jns    0x418785
  4187b6:	(bad)  
  4187b8:	sub    DWORD PTR [esi],ecx
  4187ba:	js     0x4187e3
  4187bc:	push   eax
  4187bd:	mov    edx,0xa3b44530
  4187c2:	sub    ecx,0xffffff97
  4187c5:	mov    ch,BYTE PTR [eax+0x6c8dd99d]
  4187cb:	jge    0x418841
  4187cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4187ce:	dec    ebx
  4187cf:	call   0xddfd:0x262569c
  4187d6:	(bad)  
  4187d7:	jno    0x41877c
  4187d9:	sub    ch,cl
  4187db:	fs mov edi,0x8f700a09
  4187e1:	jecxz  0x4187b6
  4187e3:	(bad)  
  4187e4:	pop    ds
  4187e5:	jecxz  0x418818
  4187e7:	hlt    
  4187e8:	lds    esi,FWORD PTR [ebp+esi*1+0x4]
  4187ec:	cmp    cl,BYTE PTR [esi+0x7274ecd9]
  4187f2:	ret    0xff06
  4187f5:	pop    ebx
  4187f6:	bound  esi,QWORD PTR [ebx]
  4187f8:	je     0x41877c
  4187fa:	sub    ecx,esp
  4187fc:	pop    es
  4187fd:	jne    0x4187a4
  4187ff:	fwait
  418800:	inc    edi
  418801:	mov    bh,0x54
  418803:	adc    esp,DWORD PTR [ecx+0x59cf40da]
  418809:	pop    eax
  41880a:	cmp    DWORD PTR [esi+0x14],edx
  41880d:	stos   DWORD PTR es:[edi],eax
  41880e:	fwait
  41880f:	jecxz  0x418876
  418811:	sub    eax,0x174fd1d7
  418816:	shl    ch,1
  418818:	dec    esi
  418819:	(bad)  
  41881b:	call   0x850f:0x7bcc5ecf
  418822:	pop    ss
  418823:	fdiv   st(7),st
  418825:	inc    DWORD PTR [ecx+0x42b0001d]
  41882b:	add    BYTE PTR [edx],ah
  41882d:	xor    eax,DWORD PTR [eax]
  41882f:	add    BYTE PTR [ebx+0x558be84d],cl
  418835:	adc    BYTE PTR [ebx],dl
  418837:	cmp    eax,0x42a014
  41883c:	xor    ecx,eax
  41883e:	add    ecx,esi
  418840:	mov    DWORD PTR [edx],ecx
  418842:	and    DWORD PTR ds:0x42d008,0x0
  41884c:	jmp    0x41885e
  418851:	mov    ecx,DWORD PTR ds:0x42d008
  418857:	inc    ecx
  418858:	mov    DWORD PTR ds:0x42d008,ecx
  41885e:	cmp    DWORD PTR ds:0x42d008,0x1f
  418865:	jae    0x418890
  41886b:	cmp    DWORD PTR ds:0x42d008,0x2c
  418872:	ja     0x418890
  418878:	jmp    0x41888b
  41887d:	push   DWORD PTR [ebp-0x20]
  418880:	push   0x8204
  418885:	call   DWORD PTR ds:0x430037
  41888b:	jmp    0x418851
  418890:	mov    ecx,DWORD PTR [ebp-0x18]
  418893:	xor    edi,edi
  418895:	xor    edi,DWORD PTR ds:0x42a010
  41889b:	or     edi,DWORD PTR ds:0x42a008
  4188a1:	mov    DWORD PTR ds:0x42a010,edi
  4188a7:	xor    ecx,eax
  4188a9:	sub    DWORD PTR ds:0x42a008,edx
  4188af:	add    ecx,esi
  4188b1:	mov    DWORD PTR ds:0x42b010,0x12
  4188bb:	cmp    DWORD PTR ds:0x42b010,0x0
  4188c2:	je     0x41891a
  4188c8:	cmp    DWORD PTR ds:0x42b010,0x7
  4188cf:	jl     0x41891a
  4188d5:	jmp    0x4188ec
  4188da:	push   0x42f000
  4188df:	push   0x1
  4188e1:	push   0x49bf
  4188e6:	call   DWORD PTR ds:0x43003b
  4188ec:	cmp    DWORD PTR ds:0x42b010,0x8
  4188f3:	jne    0x418906
  4188f9:	mov    edi,DWORD PTR ds:0x42b010
  4188ff:	dec    edi
  418900:	mov    DWORD PTR ds:0x42b010,edi
  418906:	xor    edi,edi
  418908:	or     edi,DWORD PTR ds:0x42b010
  41890e:	dec    edi
  41890f:	mov    DWORD PTR ds:0x42b010,edi
  418915:	jmp    0x4188bb
  41891a:	mov    DWORD PTR [ebp-0xc],ecx
  41891d:	mov    DWORD PTR [ebp+0x8],0xf89c85b0
  418924:	mov    DWORD PTR [ebp-0x14],0xf89c8580
  41892b:	mov    DWORD PTR [ebp-0x10],0xf89c95b0
  418932:	xor    edi,edi
  418934:	or     edi,DWORD PTR ds:0x42a008
  41893a:	adc    DWORD PTR ds:0x429018,edi
  418940:	mov    ecx,DWORD PTR [ebp-0x14]
  418943:	mov    DWORD PTR [ebp+0x8],ecx
  418946:	add    ecx,edi
  418948:	mov    ecx,DWORD PTR [ebp+0x8]
  41894b:	xor    ecx,eax
  41894d:	adc    DWORD PTR ds:0x429024,edi
  418953:	add    ecx,esi
  418955:	not    ecx
  418957:	mov    ecx,0x242ebcc
  41895c:	mov    DWORD PTR ds:0x42b00c,0x46db
  418966:	mov    edi,0xf641bc3
  41896b:	je     0x41d78a
  418971:	mov    DWORD PTR ds:0x42a00c,0x5fae
  41897b:	mov    edx,DWORD PTR [ebp+0x8]
  41897e:	and    DWORD PTR ds:0x429020,0x0
  418988:	mov    ebx,DWORD PTR ds:0x429020
  41898e:	inc    ebx
  41898f:	mov    DWORD PTR ds:0x429020,ebx
  418995:	cmp    DWORD PTR ds:0x429020,0x18
  41899c:	ja     0x4189bf
  4189a2:	jmp    0x4189b2
  4189a7:	push   0x720f
  4189ac:	call   DWORD PTR ds:0x43003f
  4189b2:	cmp    DWORD PTR ds:0x429020,0x14
  4189b9:	jb     0x418988
  4189bf:	mov    ebx,DWORD PTR [ebp-0x8]
  4189c2:	xor    edx,eax
  4189c4:	xor    ebx,eax
  4189c6:	and    DWORD PTR ds:0x429020,0x42b014
  4189d0:	sub    edx,ebx
  4189d2:	sub    edx,esi
  4189d4:	xor    edx,eax
  4189d6:	sbb    DWORD PTR ds:0x42c018,edi
  4189dc:	mov    DWORD PTR [ebp+0x8],edx
  4189df:	xor    edx,0x13c8
  4189e5:	mov    edx,DWORD PTR [ebp+0x8]
  4189e8:	and    DWORD PTR ds:0x42a008,0x0
  4189f2:	mov    ebx,DWORD PTR ds:0x42a008
  4189f8:	inc    ebx
  4189f9:	mov    DWORD PTR ds:0x42a008,ebx
  4189ff:	cmp    DWORD PTR ds:0x42a008,0x9
  418a06:	jg     0x418a5e
  418a0c:	jmp    0x418a37
  418a11:	push   DWORD PTR [ebp-0xc]
  418a14:	push   DWORD PTR [ebp-0x18]
  418a17:	push   0x8dc5
  418a1c:	push   0x3b62
  418a21:	push   DWORD PTR [ebp-0x24]
  418a24:	push   DWORD PTR [ebp-0x24]
  418a27:	push   0x13d0
  418a2c:	push   0x42f00c
  418a31:	call   DWORD PTR ds:0x430047
  418a37:	cmp    DWORD PTR ds:0x42a008,0x8
  418a3e:	jne    0x418a51
  418a44:	mov    ebx,DWORD PTR ds:0x42a008
  418a4a:	inc    ebx
  418a4b:	mov    DWORD PTR ds:0x42a008,ebx
  418a51:	cmp    DWORD PTR ds:0x42a008,0x12
  418a58:	jb     0x4189f2
  418a5e:	mov    ebx,DWORD PTR [ebp-0x58]
  418a61:	sbb    DWORD PTR ds:0x42c008,0x503f
  418a6b:	add    edx,0x5708f1
  418a71:	sub    DWORD PTR ds:0x42c01c,0x42d00c
  418a7b:	imul   edx,ebx
  418a7e:	and    ebx,DWORD PTR ds:0x42a004
  418a84:	mov    DWORD PTR [ebp-0x58],edx
  418a87:	mov    edx,DWORD PTR [ebp+0x8]
  418a8a:	and    DWORD PTR ds:0x42b004,0x0
  418a94:	jmp    0x418aa6
  418a99:	mov    ebx,DWORD PTR ds:0x42b004
  418a9f:	inc    ebx
  418aa0:	mov    DWORD PTR ds:0x42b004,ebx
  418aa6:	cmp    DWORD PTR ds:0x42b004,0x1a
  418aad:	jae    0x418add
  418ab3:	cmp    DWORD PTR ds:0x42b004,0x1b
  418aba:	ja     0x418add
  418ac0:	jmp    0x418ad8
  418ac5:	push   0x87d9
  418aca:	push   DWORD PTR [ebp-0x10]
  418acd:	push   0x6435
  418ad2:	call   DWORD PTR ds:0x43004b
  418ad8:	jmp    0x418a99
  418add:	mov    ebx,DWORD PTR [ebp-0x54]
  418ae0:	sub    DWORD PTR ds:0x42c01c,0x42d010
  418aea:	add    edx,0x64f893
  418af0:	or     edx,ebx
  418af2:	and    ebx,DWORD PTR ds:0x429000
  418af8:	mov    DWORD PTR [ebp-0x54],edx
  418afb:	mov    edx,DWORD PTR [ebp+0x8]
  418afe:	xor    DWORD PTR ds:0x42a00c,ebx
  418b04:	mov    ebx,DWORD PTR [ebp-0x50]
  418b07:	add    DWORD PTR ds:0x42a00c,0x583e
  418b11:	add    edx,ecx
  418b13:	xor    DWORD PTR ds:0x42a000,0x5790
  418b1d:	xor    edx,ebx
  418b1f:	mov    DWORD PTR [ebp-0x50],edx
  418b22:	xor    ebx,0x79bd
  418b28:	mov    edx,DWORD PTR [ebp+0x8]
  418b2b:	adc    ebx,DWORD PTR ds:0x42d014
  418b31:	mov    ebx,DWORD PTR [ebp-0x4c]
  418b34:	adc    DWORD PTR ds:0x42d010,0xcea
  418b3e:	add    edx,edi
  418b40:	and    edx,ebx
  418b42:	mov    DWORD PTR [ebp-0x4c],edx
  418b45:	xor    edx,0x6e49
  418b4b:	mov    edx,DWORD PTR [ebp+0x8]
  418b4e:	mov    ebx,DWORD PTR [ebp-0x48]
  418b51:	xor    DWORD PTR ds:0x429008,0x656f
  418b5b:	lea    edx,[ebx+edx*1+0x241fcde]
  418b62:	mov    DWORD PTR [ebp-0x48],edx
  418b65:	and    ebx,edx
  418b67:	mov    edx,DWORD PTR [ebp+0x8]
  418b6a:	adc    DWORD PTR ds:0x42b000,edx
  418b70:	mov    ebx,0xfa5e1521
  418b75:	sub    ebx,edx
  418b77:	sub    edx,DWORD PTR ds:0x42901c
  418b7d:	add    ebx,DWORD PTR [ebp-0x44]
  418b80:	inc    DWORD PTR ds:0x42d014
  418b86:	mov    DWORD PTR [ebp-0x44],ebx
  418b89:	mov    edx,DWORD PTR [ebp+0x8]
  418b8c:	xor    edx,eax
  418b8e:	xor    DWORD PTR ds:0x429000,0x14c2
  418b98:	add    edx,esi
  418b9a:	jne    0x418971
  418ba0:	jmp    0x41d78a
  418ba5:	and    DWORD PTR ds:0x42d00c,0x0
  418baf:	xor    ebx,ebx
  418bb1:	xor    ebx,DWORD PTR ds:0x42d00c
  418bb7:	inc    ebx
  418bb8:	mov    DWORD PTR ds:0x42d00c,ebx
  418bbe:	cmp    DWORD PTR ds:0x42d00c,0x28
  418bc5:	jbe    0x418bed
  418bcb:	jmp    0x418be0
  418bd0:	push   0x42a004
  418bd5:	push   0x42f169
  418bda:	call   DWORD PTR ds:0x43000b
  418be0:	cmp    DWORD PTR ds:0x42d00c,0x18
  418be7:	jb     0x418baf
  418bed:	mov    edx,DWORD PTR [ebp-0xc]
  418bf0:	mov    ebx,DWORD PTR ds:0x429014
  418bf6:	sub    ebx,DWORD PTR ds:0x429018
  418bfc:	mov    DWORD PTR ds:0x429014,ebx
  418c02:	sub    edx,esi
  418c04:	and    DWORD PTR ds:0x42c000,0x0
  418c0e:	jmp    0x418c22
  418c13:	xor    ebx,ebx
  418c15:	add    ebx,DWORD PTR ds:0x42c000
  418c1b:	inc    ebx
  418c1c:	mov    DWORD PTR ds:0x42c000,ebx
  418c22:	cmp    DWORD PTR ds:0x42c000,0x15
  418c29:	jae    0x418c70
  418c2f:	cmp    DWORD PTR ds:0x42c000,0xc
  418c36:	jg     0x418c70
  418c3c:	jmp    0x418c51
  418c41:	push   0x42a00c
  418c46:	push   0x35fa
  418c4b:	call   DWORD PTR ds:0x43000f
  418c51:	cmp    DWORD PTR ds:0x42c000,0xb
  418c58:	jne    0x418c6b
  418c5e:	mov    ebx,DWORD PTR ds:0x42c000
  418c64:	inc    ebx
  418c65:	mov    DWORD PTR ds:0x42c000,ebx
  418c6b:	jmp    0x418c13
  418c70:	xor    edx,eax
  418c72:	dec    DWORD PTR ds:0x429028
  418c78:	mov    DWORD PTR [ebp-0x5c],edx
  418c7b:	sub    ebx,DWORD PTR ds:0x42d014
  418c81:	mov    edx,DWORD PTR [ebp-0x10]
  418c84:	or     ebx,DWORD PTR ds:0x42d004
  418c8a:	mov    ebx,DWORD PTR [ebp-0x8]
  418c8d:	xor    edx,eax
  418c8f:	xor    ebx,eax
  418c91:	sub    edx,ebx
  418c93:	xor    DWORD PTR ds:0x429008,0x42b01c
  418c9d:	sub    edx,esi
  418c9f:	and    DWORD PTR ds:0x42a010,0x70aa
  418ca9:	xor    edx,eax
  418cab:	mov    DWORD PTR ds:0x42b01c,0x72e9
  418cb5:	mov    DWORD PTR [ebp-0x10],edx
  418cb8:	mov    edx,DWORD PTR [ebp-0x14]
  418cbb:	mov    DWORD PTR [ebp+0x8],edx
  418cbe:	mov    DWORD PTR ds:0x42d00c,0x2349
  418cc8:	jmp    0x418ea8
  418ccd:	mov    edx,DWORD PTR [ebp+0x8]
  418cd0:	and    DWORD PTR ds:0x42b014,0x0
  418cda:	mov    ebx,DWORD PTR ds:0x42b014
  418ce0:	inc    ebx
  418ce1:	mov    DWORD PTR ds:0x42b014,ebx
  418ce7:	cmp    DWORD PTR ds:0x42b014,0x6
  418cee:	jle    0x418d26
  418cf4:	jmp    0x418cff
  418cf9:	call   DWORD PTR ds:0x430013
  418cff:	cmp    DWORD PTR ds:0x42b014,0x5
  418d06:	jne    0x418d19
  418d0c:	mov    ebx,DWORD PTR ds:0x42b014
  418d12:	inc    ebx
  418d13:	mov    DWORD PTR ds:0x42b014,ebx
  418d19:	cmp    DWORD PTR ds:0x42b014,0x10
  418d20:	jb     0x418cda
  418d26:	mov    ebx,DWORD PTR [ebp-0x8]
  418d29:	adc    DWORD PTR ds:0x429010,0x42d018
  418d33:	xor    edx,eax
  418d35:	and    DWORD PTR ds:0x42d00c,0x4b9
  418d3f:	xor    ebx,eax
  418d41:	and    DWORD PTR ds:0x429004,0x114f
  418d4b:	sub    edx,ebx
  418d4d:	sub    edx,esi
  418d4f:	and    DWORD PTR ds:0x42d008,0x0
  418d59:	jmp    0x418d6b
  418d5e:	mov    ebx,DWORD PTR ds:0x42d008
  418d64:	inc    ebx
  418d65:	mov    DWORD PTR ds:0x42d008,ebx
  418d6b:	cmp    DWORD PTR ds:0x42d008,0x1b
  418d72:	jae    0x418da0
  418d78:	cmp    DWORD PTR ds:0x42d008,0x22
  418d7f:	jg     0x418da0
  418d85:	jmp    0x418d9b
  418d8a:	push   0x42f107
  418d8f:	push   DWORD PTR [ebp-0x10]
  418d92:	push   DWORD PTR [ebp-0x24]
  418d95:	call   DWORD PTR ds:0x430017
  418d9b:	jmp    0x418d5e
  418da0:	xor    edx,eax
  418da2:	or     DWORD PTR ds:0x429008,ecx
  418da8:	mov    DWORD PTR [ebp+0x8],edx
  418dab:	mov    edx,DWORD PTR [ebp+0x8]
  418dae:	mov    ebx,DWORD PTR [ebp-0x58]
  418db1:	sub    DWORD PTR ds:0x429020,0x34c1
  418dbb:	add    edx,0x5708f1
  418dc1:	add    DWORD PTR ds:0x42a000,0x6667
  418dcb:	imul   edx,ebx
  418dce:	movzx  ebx,BYTE PTR ds:0x42b018
  418dd5:	or     DWORD PTR ds:0x42d004,ebx
  418ddb:	mov    DWORD PTR [ebp-0x58],edx
  418dde:	mov    edx,DWORD PTR [ebp+0x8]
  418de1:	sub    DWORD PTR ds:0x429018,0x429014
  418deb:	mov    ebx,DWORD PTR [ebp-0x54]
  418dee:	xor    DWORD PTR ds:0x42d018,0x42a00c
  418df8:	add    edx,0x64f893
  418dfe:	or     edx,ebx
  418e00:	adc    DWORD PTR ds:0x42901c,ecx
  418e06:	mov    DWORD PTR [ebp-0x54],edx
  418e09:	and    DWORD PTR ds:0x42d008,0x0
  418e13:	jmp    0x418e25
  418e18:	mov    ebx,DWORD PTR ds:0x42d008
  418e1e:	inc    ebx
  418e1f:	mov    DWORD PTR ds:0x42d008,ebx
  418e25:	cmp    DWORD PTR ds:0x42d008,0x13
  418e2c:	jae    0x418e6e
  418e32:	cmp    DWORD PTR ds:0x42d008,0x22
  418e39:	jb     0x418e6e
  418e3f:	jmp    0x418e69
  418e44:	push   0x30b6
  418e49:	push   0x7ba0
  418e4e:	push   0x429014
  418e53:	push   0x2a48
  418e58:	push   DWORD PTR [ebp-0x10]
  418e5b:	push   0x4d58
  418e60:	push   DWORD PTR [ebp-0xc]
  418e63:	call   DWORD PTR ds:0x43001b
  418e69:	jmp    0x418e18
  418e6e:	mov    edx,DWORD PTR [ebp+0x8]
  418e71:	mov    ebx,DWORD PTR [ebp-0x50]
  418e74:	add    edx,ecx
  418e76:	xor    edx,ebx
  418e78:	mov    DWORD PTR [ebp-0x50],edx
  418e7b:	mov    edx,DWORD PTR [ebp+0x8]
  418e7e:	mov    ebx,DWORD PTR [ebp-0x4c]
  418e81:	add    edx,edi
  418e83:	and    edx,ebx
  418e85:	mov    DWORD PTR [ebp-0x4c],edx
  418e88:	mov    edx,DWORD PTR [ebp+0x8]
  418e8b:	mov    ebx,DWORD PTR [ebp-0x48]
  418e8e:	lea    edx,[ebx+edx*1+0x241fcde]
  418e95:	mov    DWORD PTR [ebp-0x48],edx
  418e98:	mov    edx,DWORD PTR [ebp+0x8]
  418e9b:	mov    ebx,0xfa5e1521
  418ea0:	sub    ebx,edx
  418ea2:	add    ebx,DWORD PTR [ebp-0x44]
  418ea5:	mov    DWORD PTR [ebp-0x44],ebx
  418ea8:	mov    edx,DWORD PTR [ebp+0x8]
  418eab:	xor    edx,eax
  418ead:	add    edx,esi
  418eaf:	jne    0x418ccd
  418eb5:	mov    edx,DWORD PTR [ebp-0xc]
  418eb8:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  418ebf:	mov    bl,BYTE PTR [ebp-0x1]
  418ec2:	cmp    dl,bl
  418ec4:	je     0x41b305
  418eca:	mov    ecx,DWORD PTR [ebp-0x5c]
  418ecd:	mov    edx,DWORD PTR [ebp-0xc]
  418ed0:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  418ed7:	mov    ebx,DWORD PTR [ebp+0xc]
  418eda:	xor    ecx,eax
  418edc:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272ec]
  418ee3:	jne    0x41d79c
  418ee9:	mov    ecx,DWORD PTR [ebp-0x5c]
  418eec:	mov    edx,DWORD PTR [ebp+0xc]
  418eef:	xor    ecx,eax
  418ef1:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272ec]
  418ef9:	mov    edx,DWORD PTR [ebp-0x18]
  418efc:	xor    edx,eax
  418efe:	add    edx,esi
  418f00:	cmp    ecx,edx
  418f02:	mov    ecx,DWORD PTR [ebp-0x14]
  418f05:	mov    DWORD PTR [ebp+0x8],ecx
  418f08:	mov    ecx,DWORD PTR [ebp+0x8]
  418f0b:	je     0x421f6a
  418f11:	xor    ecx,eax
  418f13:	add    ecx,esi
  418f15:	mov    ecx,0x242ebcc
  418f1a:	je     0x41d6f0
  418f20:	mov    edx,DWORD PTR [ebp+0x8]
  418f23:	mov    ebx,DWORD PTR [ebp-0x8]
  418f26:	xor    edx,eax
  418f28:	xor    ebx,eax
  418f2a:	sub    edx,ebx
  418f2c:	sub    edx,esi
  418f2e:	xor    edx,eax
  418f30:	mov    DWORD PTR [ebp+0x8],edx
  418f33:	mov    edx,DWORD PTR [ebp+0x8]
  418f36:	mov    ebx,DWORD PTR [ebp-0x58]
  418f39:	add    edx,0x5708f1
  418f3f:	imul   edx,ebx
  418f42:	mov    DWORD PTR [ebp-0x58],edx
  418f45:	mov    edx,DWORD PTR [ebp+0x8]
  418f48:	mov    ebx,DWORD PTR [ebp-0x54]
  418f4b:	add    edx,0x64f893
  418f51:	or     edx,ebx
  418f53:	mov    DWORD PTR [ebp-0x54],edx
  418f56:	mov    edx,DWORD PTR [ebp+0x8]
  418f59:	mov    ebx,DWORD PTR [ebp-0x50]
  418f5c:	add    edx,ecx
  418f5e:	jmp    0x41b2c1
  418f63:	stos   BYTE PTR es:[edi],al
  418f64:	fsubr  QWORD PTR [ebx-0x14]
  418f67:	sti    
  418f68:	mov    ebx,0xc4df9c99
  418f6d:	add    DWORD PTR [ecx+0x5c],esi
  418f70:	call   0x1d534a45
  418f75:	jge    0x418ff1
  418f77:	xor    BYTE PTR [edi+0x7a],bl
  418f7a:	jp     0x418f2e
  418f7c:	ret    
  418f7d:	inc    edi
  418f7e:	add    eax,0x5d2ff568
  418f83:	inc    esi
  418f84:	push   esi
  418f85:	pop    es
  418f86:	bnd jb 0x418fd0
  418f89:	call   ebx
  418f8b:	mov    ebx,DWORD PTR [esi+ebx*2]
  418f8e:	jmp    0x418f76
  418f90:	inc    ecx
  418f91:	adc    dh,BYTE PTR [ebp+ebx*8+0x3363bc5a]
  418f98:	pop    eax
  418f99:	retf   
  418f9a:	inc    ecx
  418f9b:	ss ss jge 0x418ff0
  418f9f:	push   ss
  418fa0:	(bad)  
  418fa1:	lock std 
  418fa3:	ror    DWORD PTR [esp+edi*8+0x27],0x27
  418fa8:	sub    ah,BYTE PTR [edi+0x5912af29]
  418fae:	xor    esp,DWORD PTR ds:0x11d30475
  418fb4:	test   DWORD PTR [ecx+ecx*4+0x28337650],esp
  418fbb:	pop    es
  418fbc:	retf   
  418fbd:	mov    bl,0xf3
  418fbf:	sub    eax,0x4147e003
  418fc4:	add    edi,esp
  418fc6:	jns    0x418ff5
  418fc8:	pop    ss
  418fc9:	arpl   cx,dx
  418fcb:	mov    al,0x95
  418fcd:	jmp    0xd13d6b39
  418fd2:	scas   al,BYTE PTR es:[edi]
  418fd3:	push   edi
  418fd4:	xor    DWORD PTR [ebp-0x4ffbc50],edx
  418fda:	push   edi
  418fdb:	xor    dh,BYTE PTR [edx+0x29]
  418fde:	pop    ebx
  418fdf:	mov    ecx,0xb72826af
  418fe4:	fild   WORD PTR [edi+ecx*8]
  418fe7:	jle    0x419051
  418fe9:	xchg   esp,eax
  418fea:	sbb    DWORD PTR [ebx+0x66b2055d],edi
  418ff0:	loope  0x418f8b
  418ff2:	ror    BYTE PTR [edx-0x528bfb86],cl
  418ff8:	mov    WORD PTR [ecx+eax*2-0x12258bc5],?
  418fff:	je     0x419064
  419001:	cmc    
  419002:	rol    ecx,cl
  419004:	shr    ch,cl
  419006:	inc    eax
  419007:	int3   
  419008:	mov    ecx,0xbb837a03
  41900d:	loopne 0x418fde
  41900f:	ins    DWORD PTR es:[edi],dx
  419010:	add    cl,BYTE PTR [edx-0x39]
  419013:	sub    DWORD PTR [ecx-0x7a6ff95c],ebp
  419019:	lods   eax,DWORD PTR ds:[esi]
  41901a:	data16 fist WORD PTR [edi-0x6]
  41901e:	jno    0x418fe6
  419020:	sub    al,0x6f
  419022:	fwait
  419023:	xor    dh,BYTE PTR [ecx]
  419025:	fsub   st(6),st
  419027:	adc    esi,DWORD PTR [edx]
  419029:	fs add eax,0xa4a4ba03
  41902f:	sbb    al,0xff
  419031:	cmp    al,0xfa
  419033:	xlat   BYTE PTR ds:[ebx]
  419034:	fdiv   QWORD PTR [esi+0x4dcc6b7d]
  41903a:	(bad)  
  41903c:	ss fwait
  41903e:	mov    ebx,0xad0e4d55
  419043:	rol    DWORD PTR [ecx-0x7bb91708],0x3e
  41904a:	jae    0x4190a0
  41904c:	add    BYTE PTR [ecx],0xc3
  41904f:	mov    esp,0x2c2efc27
  419054:	je     0x41907c
  419056:	repnz mov dl,0x30
  419059:	mov    dl,0xa3
  41905b:	xor    eax,0x49148de3
  419060:	push   esi
  419061:	retf   0xbc96
  419064:	ror    edi,0xb6
  419067:	lods   al,BYTE PTR ds:[esi]
  419068:	(bad)  
  41906a:	aad    0x9c
  41906c:	and    al,0xa3
  41906e:	and    BYTE PTR [ecx+0x2e],0xe8
  419072:	xchg   DWORD PTR [ecx],ecx
  419074:	mov    dl,0x13
  419076:	(bad)  
  419077:	cld    
  419078:	adc    al,0x5d
  41907a:	jb     0x41908f
  41907c:	fdivr  QWORD PTR [ebx+edx*4]
  41907f:	pop    eax
  419080:	cmp    ebx,edi
  419082:	call   0xada2ba3c
  419087:	add    al,0x31
  419089:	push   ebx
  41908a:	jmp    0x2feb:0xc23b131a
  419091:	(bad)  
  419092:	lds    ecx,FWORD PTR [esi-0x33]
  419095:	scas   al,BYTE PTR es:[edi]
  419096:	mov    ebp,0xd0b11ecb
  41909b:	add    al,0xc4
  41909d:	out    dx,eax
  41909e:	fbstp  TBYTE PTR [edi+0x1a]
  4190a1:	clc    
  4190a2:	push   0x96412f7f
  4190a7:	cs cld 
  4190a9:	out    0x1d,al
  4190ab:	call   0xae57e67
  4190b0:	rsqrtps xmm1,xmm7
  4190b3:	cld    
  4190b4:	mov    dh,0x1
  4190b6:	dec    ebx
  4190b7:	(bad)
  4190ba:	sub    dl,BYTE PTR [esi]
  4190bc:	inc    ebp
  4190bd:	cmc    
  4190be:	and    esp,DWORD PTR [ebp+edx*1+0x77]
  4190c2:	test   al,0x4b
  4190c4:	lahf   
  4190c5:	push   edx
  4190c6:	fadd   DWORD PTR [ebx+esi*8+0x5b3ddbdd]
  4190cd:	mov    ebp,0x1cc06767
  4190d2:	and    DWORD PTR [edx],edx
  4190d4:	mov    ah,0x6
  4190d6:	mov    eax,ds:0xadf0a076
  4190db:	scas   eax,DWORD PTR es:[edi]
  4190dc:	fst    QWORD PTR [ecx+0x57d2bd0]
  4190e2:	xchg   ebx,eax
  4190e3:	retf   
  4190e4:	retf   
  4190e5:	sbb    WORD PTR [ebx-0x23a1b62e],0xff8c
  4190ed:	pop    ecx
  4190ee:	mov    dl,0xe3
  4190f0:	outs   dx,BYTE PTR ds:[esi]
  4190f1:	jl     0x4190b9
  4190f3:	push   ds
  4190f4:	shr    ebp,1
  4190f6:	mov    cl,0x9f
  4190f8:	arpl   WORD PTR [ebp+0x38],si
  4190fb:	sub    ecx,DWORD PTR fs:[ecx+ebp*2+0x72]
  419100:	loope  0x4190e2
  419102:	xchg   ebx,eax
  419103:	addr16 push ecx
  419105:	(bad)  
  419106:	jmp    0x2165:0x6bed7b9b
  41910d:	pusha  
  41910e:	cmc    
  41910f:	les    edx,FWORD PTR [bx+si+0x3b]
  419113:	ss scas al,BYTE PTR es:[edi]
  419115:	in     eax,dx
  419116:	jl     0x41913d
  419118:	adc    al,0xa8
  41911a:	push   cs
  41911b:	mov    esp,DWORD PTR [edi-0x79897721]
  419121:	cwde   
  419122:	xor    edi,ebp
  419124:	cmp    DWORD PTR [eax],edx
  419126:	popf   
  419127:	jmp    0x2fb4:0x207ae7f4
  41912e:	add    eax,0xd80718c9
  419133:	xchg   edx,eax
  419134:	inc    edi
  419135:	mov    eax,0x5120a90d
  41913a:	repz sub DWORD PTR [eax+eiz*8+0x14429f02],ecx
  419142:	or     bl,bh
  419144:	push   ebp
  419145:	dec    esi
  419146:	mov    esi,0x6a2044c0
  41914b:	sbb    BYTE PTR [edi+0x1c],ah
  41914e:	mov    dl,0x62
  419150:	inc    edi
  419151:	in     eax,0x2e
  419153:	adc    BYTE PTR fs:[edi-0x34],ch
  419157:	inc    ebx
  419158:	shr    BYTE PTR [esi-0x22c60174],cl
  41915e:	out    0x68,eax
  419160:	in     al,0x4d
  419162:	pop    ecx
  419163:	scas   al,BYTE PTR es:[edi]
  419164:	jl     0x419158
  419166:	mov    edi,0x7182bf84
  41916b:	mov    esi,0x6c00d857
  419170:	xchg   ebx,eax
  419171:	and    ah,BYTE PTR [edx]
  419173:	inc    ebp
  419174:	das    
  419175:	clc    
  419176:	push   ebp
  419177:	mov    ebx,0x8adbc4bf
  41917c:	loope  0x4191d0
  41917e:	lahf   
  41917f:	and    BYTE PTR [ecx],ch
  419181:	(bad)  
  419182:	mov    esi,ebx
  419184:	call   0x2e64:0xbd11de97
  41918b:	(bad)  
  41918c:	or     DWORD PTR [edx],eax
  41918e:	retf   
  41918f:	pop    ds
  419190:	sub    al,0x9b
  419192:	lods   eax,DWORD PTR ds:[esi]
  419193:	xchg   esp,eax
  419194:	pusha  
  419195:	(bad)  
  419196:	dec    edi
  419197:	mov    dh,0xc
  419199:	pusha  
  41919a:	and    eax,0x2566a1f9
  41919f:	pop    ss
  4191a0:	outs   dx,BYTE PTR ds:[esi]
  4191a1:	pusha  
  4191a2:	(bad)  
  4191a3:	and    esp,ebp
  4191a5:	repz repnz rol DWORD PTR [edx+0x324c8b16],0x82
  4191ae:	pop    ds
  4191af:	(bad)
  4191b2:	adc    BYTE PTR [eax+0x3e],0x10
  4191b6:	scas   al,BYTE PTR es:[edi]
  4191b7:	cmc    
  4191b8:	mov    edi,0x1072639
  4191bd:	xchg   edx,eax
  4191be:	(bad)  
  4191bf:	sub    al,0x44
  4191c1:	popa   
  4191c2:	cmp    al,0x33
  4191c4:	or     esp,0xffffffa1
  4191c7:	adc    BYTE PTR [ebx-0x64],0x88
  4191cb:	scas   al,BYTE PTR es:[edi]
  4191cc:	cs dec ebx
  4191ce:	int    0x12
  4191d0:	jns    0x419202
  4191d2:	mov    bh,0xae
  4191d4:	pop    edi
  4191d5:	inc    edi
  4191d6:	and    DWORD PTR [edx-0x5b0fb7ed],esp
  4191dc:	or     eax,0x1df5e4d
  4191e1:	adc    ebx,DWORD PTR [edx-0x3c]
  4191e4:	scas   al,BYTE PTR es:[edi]
  4191e5:	ss idiv bl
  4191e8:	and    al,0xb6
  4191ea:	mov    edi,0x4aa0734
  4191ef:	sub    DWORD PTR [edi],eax
  4191f1:	xor    dl,BYTE PTR [ebp-0x3f517377]
  4191f7:	add    dl,cl
  4191f9:	retf   0xaafe
  4191fc:	sti    
  4191fd:	inc    esi
  4191fe:	inc    ebp
  4191ff:	inc    ebx
  419200:	test   DWORD PTR [eax],esi
  419202:	mov    dl,0x5e
  419204:	aad    0x18
  419206:	and    al,0x7a
  419208:	rol    bl,0x32
  41920b:	mov    cl,0x74
  41920d:	test   DWORD PTR [edi+0x6ec43f64],edx
  419213:	mov    cl,0xef
  419215:	repz in al,dx
  419217:	fdiv   DWORD PTR [eax+0x20]
  41921a:	mov    ds:0xef6938ca,eax
  41921f:	cli    
  419220:	ins    BYTE PTR es:[edi],dx
  419221:	adc    DWORD PTR [edx],esp
  419223:	adc    bh,BYTE PTR [bx-0x4164]
  419228:	xor    ah,BYTE PTR [esi+0xa2a6b80]
  41922e:	push   cs
  41922f:	je     0x419279
  419231:	aad    0x3f
  419233:	leave  
  419234:	mov    ah,0x2c
  419236:	call   0xda61:0x696608d0
  41923d:	fld    TBYTE PTR [esi]
  41923f:	sar    DWORD PTR [edi-0x63],0xc6
  419243:	(bad)  [edx]
  419245:	les    ecx,FWORD PTR [edx]
  419247:	lds    ecx,FWORD PTR [eax-0x7c1094c7]
  41924d:	scas   eax,DWORD PTR es:[edi]
  41924e:	push   0x33d34251
  419253:	push   ds
  419254:	in     al,0x5f
  419256:	ds imul ecx,edi,0xc1ad30de
  41925d:	push   eax
  41925e:	or     bl,BYTE PTR [ebp-0x646761eb]
  419264:	inc    edi
  419265:	es pop ds
  419267:	sar    al,0xcc
  41926a:	out    dx,al
  41926b:	push   ss
  41926c:	mov    ebp,0x9aded83d
  419271:	test   eax,0x259c6e0b
  419276:	popf   
  419277:	pop    esp
  419278:	sub    BYTE PTR [eax-0x4a],cl
  41927b:	inc    esp
  41927c:	adc    edi,DWORD PTR [ecx+ebx*2-0x57]
  419280:	stos   BYTE PTR es:[edi],al
  419281:	and    edx,DWORD PTR [edx+0x79]
  419284:	jbe    0x419209
  419286:	dec    ecx
  419287:	mov    esi,0xb208469e
  41928c:	push   ebx
  41928d:	xchg   esp,eax
  41928e:	push   edi
  41928f:	(bad)  
  419290:	mov    ecx,0x47f1a5df
  419295:	pop    eax
  419296:	in     eax,0xf7
  419298:	push   es
  419299:	sbb    al,0x9b
  41929b:	loop   0x41930c
  41929d:	pusha  
  41929e:	test   eax,0xc9b2a331
  4192a3:	pop    ss
  4192a4:	daa    
  4192a5:	fsub   QWORD PTR [ecx+eiz*2]
  4192a8:	xor    ebx,DWORD PTR [esi]
  4192aa:	dec    ebx
  4192ab:	inc    esp
  4192ac:	nop
  4192ad:	pop    es
  4192ae:	adc    BYTE PTR [eax],bh
  4192b0:	fdivr  st,st(3)
  4192b2:	adc    dl,cl
  4192b4:	sub    al,0x10
  4192b6:	(bad)  
  4192b7:	aad    0xdf
  4192b9:	cmp    DWORD PTR [ebx],ebp
  4192bb:	inc    eax
  4192bc:	out    dx,al
  4192bd:	or     edi,DWORD PTR [eax+0x11]
  4192c0:	mov    DWORD PTR [esi],ecx
  4192c2:	jmp    0x4192ac
  4192c4:	adc    al,0xa4
  4192c6:	aaa    
  4192c7:	inc    ecx
  4192c8:	lods   eax,DWORD PTR ds:[esi]
  4192c9:	mov    DWORD PTR [esi],esp
  4192cb:	or     esp,ecx
  4192cd:	les    esp,FWORD PTR [edi-0x736f1cb5]
  4192d3:	ret    0xee31
  4192d6:	int    0x97
  4192d8:	mov    al,ds:0x17035ebe
  4192dd:	outs   dx,DWORD PTR ds:[esi]
  4192de:	push   edx
  4192df:	adc    BYTE PTR [ebx+0x73],0x96
  4192e3:	dec    esp
  4192e4:	push   eax
  4192e5:	and    al,0xd9
  4192e7:	imul   edi,DWORD PTR [ecx-0x30],0xffffffc9
  4192eb:	xchg   ebx,edi
  4192ed:	outs   dx,DWORD PTR ds:[esi]
  4192ee:	daa    
  4192ef:	ret    
  4192f0:	or     DWORD PTR [edi-0x3a],ebx
  4192f3:	stos   DWORD PTR es:[edi],eax
  4192f4:	adc    al,ch
  4192f6:	lea    ebp,[ebx+0x2c]
  4192f9:	jg     0x4192ab
  4192fb:	inc    esi
  4192fc:	mov    al,ds:0x3baddaf5
  419301:	and    ebx,DWORD PTR [bx+si-0x7e1d]
  419306:	pop    eax
  419307:	jl     0x419331
  419309:	inc    eax
  41930a:	in     al,dx
  41930b:	adc    BYTE PTR [eax-0x50250203],0x10
  419312:	adc    ecx,ebp
  419314:	in     al,dx
  419315:	jb     0x4192bf
  419317:	lock or eax,0x3b391982
  41931d:	add    BYTE PTR ds:0x351f56a4,dh
  419323:	dec    esp
  419324:	or     eax,0xf5774f50
  419329:	lock mov ebx,0x4825c6be
  41932f:	cmp    al,0xdd
  419331:	push   edx
  419332:	sahf   
  419333:	mov    DWORD PTR [edx],ecx
  419335:	gs call 0xdaaf:0x68ba1b85
  41933d:	add    DWORD PTR [edi],ebp
  41933f:	icebp  
  419340:	iret   
  419341:	int    0xed
  419343:	jns    0x419339
  419345:	push   cs
  419346:	in     eax,0x1a
  419348:	pop    edi
  419349:	pop    es
  41934a:	inc    esi
  41934b:	sar    BYTE PTR [edx-0x6c],cl
  41934e:	inc    edx
  41934f:	ror    edi,0x2c
  419352:	test   al,0xb1
  419354:	scas   al,BYTE PTR es:[edi]
  419355:	addr16 fs mov al,0x68
  419359:	es pusha 
  41935b:	add    eax,0x18311cc2
  419360:	scas   al,BYTE PTR es:[edi]
  419361:	ins    BYTE PTR es:[edi],dx
  419362:	jno    0x419342
  419364:	fs push ecx
  419366:	aam    0xba
  419368:	lds    edx,FWORD PTR ds:0x34cd602
  41936e:	adc    eax,0xd50a419e
  419373:	mov    eax,0xf6f030a9
  419378:	mov    ah,BYTE PTR [edx]
  41937a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41937b:	xchg   esi,eax
  41937c:	xchg   esi,eax
  41937d:	ret    
  41937e:	test   eax,0xe646c5d6
  419383:	pop    edi
  419384:	or     BYTE PTR [edx-0x4f16ea29],dh
  41938a:	pop    ds
  41938b:	mov    ds:0xd2d10a9d,eax
  419390:	sar    ah,0xc
  419393:	cld    
  419394:	push   edi
  419396:	xchg   edi,eax
  419397:	dec    eax
  419398:	std    
  419399:	aaa    
  41939a:	(bad)  
  41939b:	push   cs
  41939c:	sub    bh,BYTE PTR [edx]
  41939e:	mov    cl,0xc0
  4193a0:	xchg   edi,edi
  4193a2:	mov    cl,0x49
  4193a4:	retf   
  4193a5:	mov    ebp,0xd5d97c84
  4193aa:	fdivp  st(0),st
  4193ac:	cmc    
  4193ad:	jnp    0x4193b5
  4193af:	dec    esp
  4193b0:	pop    eax
  4193b1:	xchg   edx,eax
  4193b2:	cmp    esp,edi
  4193b4:	ret    
  4193b5:	out    0xd2,eax
  4193b7:	adc    ax,0x5b27
  4193bb:	test   al,0xe3
  4193bd:	jmp    0x41940c
  4193bf:	iret   
  4193c0:	sub    BYTE PTR [ecx],dl
  4193c2:	sbb    DWORD PTR [edx+0x7276f25d],edx
  4193c8:	int3   
  4193c9:	mov    edx,0x41fc4f31
  4193ce:	inc    BYTE PTR [eax+0x79f3f6a5]
  4193d4:	sbb    BYTE PTR [ebx+edx*8-0x2b7b43bf],0x1a
  4193dc:	pop    eax
  4193dd:	jno    0x419393
  4193df:	mov    eax,0x6621830b
  4193e4:	(bad)  
  4193e5:	idiv   edi
  4193e7:	push   es
  4193e8:	pop    ecx
  4193e9:	sub    BYTE PTR [eax],cl
  4193eb:	popf   
  4193ec:	leave  
  4193ed:	mov    esp,0x5c213076
  4193f2:	(bad)  
  4193f4:	je     0x4193e2
  4193f6:	mov    eax,0xc44099bd
  4193fb:	lea    ebp,[edx]
  4193fd:	mov    ch,0xed
  4193ff:	xlat   BYTE PTR ds:[ebx]
  419400:	int    0x9f
  419402:	pop    ds
  419403:	mov    eax,ds:0x57922207
  419408:	dec    eax
  419409:	xchg   edx,eax
  41940a:	clc    
  41940b:	pop    ecx
  41940c:	jle    0x41946e
  41940e:	loope  0x419402
  419410:	out    dx,al
  419411:	pop    ecx
  419412:	mov    bl,0x93
  419414:	iret   
  419415:	lahf   
  419416:	icebp  
  419417:	mov    ah,BYTE PTR [edi]
  419419:	gs retf 0x7a77
  41941d:	xchg   ebp,eax
  41941e:	push   esi
  41941f:	and    al,0xa2
  419421:	mov    BYTE PTR [ecx],bl
  419423:	call   0x7c2a:0xe47c6942
  41942a:	cwde   
  41942b:	or     BYTE PTR [edx],bh
  41942d:	adc    DWORD PTR [edi-0x14e1167f],eax
  419433:	or     ecx,DWORD PTR [esi-0x4b]
  419436:	sbb    al,0x2
  419438:	mov    DWORD PTR [eax],edx
  41943a:	enter  0x226c,0x2d
  41943e:	test   al,0x65
  419440:	ret    
  419441:	out    0xfd,eax
  419443:	lock jo 0x4194b5
  419446:	inc    ebp
  419447:	ss in  al,dx
  419449:	pop    ecx
  41944a:	add    al,0x74
  41944c:	mov    edi,0x9d42456
  419451:	ins    DWORD PTR es:[edi],dx
  419452:	(bad)  [ebx-0x5a4b61c5]
  419458:	and    al,0xf4
  41945a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41945b:	push   edx
  41945c:	(bad)  
  41945d:	jg     0x41947a
  41945f:	popa   
  419460:	pushf  
  419461:	push   ss
  419462:	inc    ebp
  419463:	ins    BYTE PTR es:[edi],dx
  419464:	in     eax,0x41
  419466:	fst    DWORD PTR [ebp+0x44]
  419469:	mov    bl,dl
  41946b:	sbb    eax,0x67485bf7
  419470:	ja     0x4194c3
  419472:	add    al,0xb6
  419474:	xor    dh,BYTE PTR fs:[edx-0xc07bfb5]
  41947b:	push   es
  41947c:	mov    ?,WORD PTR [esi]
  41947e:	sbb    al,ah
  419480:	sahf   
  419481:	nop
  419482:	jmp    0x41947f
  419484:	push   esp
  419485:	or     bh,BYTE PTR [ecx]
  419487:	xchg   ebp,eax
  419488:	inc    esp
  419489:	mov    bh,BYTE PTR [edx]
  41948b:	sbb    ebx,DWORD PTR [eax-0x634a323e]
  419491:	mov    ch,0xde
  419493:	jmp    0x1b31:0x24a279d8
  41949a:	adc    eax,0x1427daa0
  41949f:	and    esi,DWORD PTR [edx-0x276ae0e0]
  4194a5:	xchg   edx,eax
  4194a6:	pop    ecx
  4194a7:	sbb    BYTE PTR gs:[esp+eax*2-0x48832d82],0xe7
  4194b0:	pop    eax
  4194b1:	inc    eax
  4194b2:	test   BYTE PTR [ebx+0x14],bh
  4194b5:	(bad)  
  4194b6:	cmp    bl,BYTE PTR [esp+eax*1-0x3d]
  4194ba:	dec    edx
  4194bb:	add    BYTE PTR [ebx-0x230b2073],ah
  4194c1:	cli    
  4194c2:	neg    BYTE PTR [ebx+0xc]
  4194c5:	fist   DWORD PTR [eax-0x4d]
  4194c8:	dec    ecx
  4194c9:	cmp    BYTE PTR [esp+ebp*4+0x2f8d5cc7],al
  4194d0:	ror    BYTE PTR [edi],cl
  4194d2:	stos   BYTE PTR es:[edi],al
  4194d3:	inc    ebp
  4194d4:	sbb    al,0x27
  4194d6:	mov    ch,0xb1
  4194d8:	fist   WORD PTR [eax]
  4194da:	sub    DWORD PTR [ecx],edi
  4194dc:	fistp  DWORD PTR [eax+0x7d]
  4194df:	inc    esi
  4194e0:	jg     0x41954c
  4194e2:	dec    ecx
  4194e3:	hlt    
  4194e4:	sbb    al,BYTE PTR [ecx-0x763b8f46]
  4194ea:	push   ecx
  4194eb:	fcmovnbe st,st(1)
  4194ed:	loopne 0x4194ac
  4194ef:	mov    dh,0x1d
  4194f1:	jmp    0x3e72:0x6ad9c6c2
  4194f8:	fnstenv [ebp+0x3f9c5b81]
  4194fe:	mov    dh,0xcb
  419500:	or     eax,0xf1ef5592
  419505:	fsubr  DWORD PTR [ebp+0x1c90ab82]
  41950b:	lds    edi,FWORD PTR [ebx+0x4c]
  41950e:	jno    0x4194e9
  419510:	xchg   ecx,eax
  419511:	mov    ecx,0x7391dfe3
  419516:	dec    edi
  419517:	retf   
  419518:	cmp    DWORD PTR [eax+0x77aef0c6],0xaa550442
  419522:	mov    edi,0x15370709
  419527:	arpl   WORD PTR [eax+edi*4-0x48],ax
  41952b:	jae    0x4194f0
  41952d:	inc    ebx
  41952e:	push   ss
  41952f:	(bad)  
  419530:	fwait
  419531:	xchg   esi,eax
  419532:	imul   ebp,DWORD PTR ds:0x5b0b78af,0xbc0e4834
  41953c:	jmp    0x2dac:0xa25a7f5c
  419543:	ficom  WORD PTR [ecx-0x6e]
  419546:	and    eax,esi
  419548:	jae    0x419547
  41954a:	inc    edi
  41954b:	sub    ah,BYTE PTR [esi]
  41954d:	dec    esp
  41954e:	fdivr  st(6),st
  419550:	pop    ecx
  419551:	lds    eax,FWORD PTR [eax+0xf]
  419554:	mov    edx,0x6b2a8e43
  419559:	imul   eax,DWORD PTR [edi-0x4f],0xffffff89
  41955d:	sbb    eax,0xbd1e68a1
  419562:	cld    
  419563:	adc    edx,DWORD PTR [edi-0x749785d2]
  419569:	cmp    eax,0x8d9f655c
  41956e:	sub    al,0x61
  419570:	jmp    0x41955d
  419572:	or     eax,0xd6a74916
  419577:	add    DWORD PTR [ecx+0x1b],ebp
  41957a:	popa   
  41957b:	jge    0x4195d5
  41957d:	fmul   DWORD PTR es:[ebx]
  419580:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419581:	sub    BYTE PTR [edx],bh
  419583:	daa    
  419584:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419585:	or     eax,DWORD PTR [eax+eiz*8+0x47152c80]
  41958c:	ret    
  41958d:	scas   al,BYTE PTR es:[edi]
  41958e:	stc    
  41958f:	push   eax
  419590:	ins    BYTE PTR es:[edi],dx
  419591:	cli    
  419592:	test   DWORD PTR [ecx-0x3108ba85],ebx
  419598:	mov    cl,BYTE PTR [edi-0x65]
  41959b:	dec    ebx
  41959c:	sub    edx,DWORD PTR [ecx-0x4ab6f91e]
  4195a2:	xchg   DWORD PTR [ebp-0xbdff985],ebx
  4195a8:	in     al,dx
  4195a9:	aas    
  4195aa:	fsubr  DWORD PTR ds:[ebp+edx*1-0x436dbcaa]
  4195b2:	or     eax,0x87e7c6b2
  4195b7:	sbb    eax,0xdac25dc4
  4195bc:	mov    ebp,0x6b1779e5
  4195c1:	jg     0x419610
  4195c3:	sahf   
  4195c4:	stos   DWORD PTR es:[edi],eax
  4195c5:	add    ch,ah
  4195c7:	cdq    
  4195c8:	ja     0x41961c
  4195ca:	test   DWORD PTR [ecx],ecx
  4195cc:	xchg   ebx,eax
  4195cd:	sub    DWORD PTR [ebp+0x3d22dee5],esp
  4195d3:	js     0x41958e
  4195d5:	sub    al,0xba
  4195d7:	int    0x4e
  4195d9:	cmp    al,0xe6
  4195db:	imul   ebp,DWORD PTR [eax-0x70],0x3d
  4195df:	push   es
  4195e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4195e1:	sub    BYTE PTR [ebp+0x9],0xe6
  4195e5:	out    0x3f,al
  4195e7:	pop    es
  4195e8:	sbb    BYTE PTR [edi+0x5a],bl
  4195eb:	xchg   ecx,eax
  4195ec:	jb     0x4195f0
  4195ee:	adc    BYTE PTR [ecx-0x3a45d39a],dl
  4195f4:	or     eax,0x6a863626
  4195f9:	mov    ah,0x93
  4195fb:	push   ss
  4195fc:	or     DWORD PTR ss:[ebx-0x66],ebp
  419600:	jne    0x419677
  419602:	pop    esi
  419603:	nop
  419604:	push   esi
  419605:	mov    esp,0x887cc3d
  41960a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41960b:	adc    DWORD PTR [esi+0x31],0xffffffb7
  41960f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419610:	adc    DWORD PTR [edi+0x16e35100],edi
  419616:	pop    esi
  419617:	adc    DWORD PTR [esi+0x33],0x6b
  41961b:	or     cl,BYTE PTR [edi+0x79]
  41961e:	inc    eax
  41961f:	test   eax,0x505b25b1
  419624:	lahf   
  419625:	push   ebx
  419626:	pop    ebp
  419627:	cdq    
  419628:	push   es
  419629:	mul    DWORD PTR [eax]
  41962b:	sbb    eax,0x660ff444
  419630:	adc    eax,0xbc9ff3ab
  419635:	pop    esi
  419636:	mov    cl,0xb9
  419638:	hlt    
  419639:	lea    eax,[esi]
  41963b:	pop    eax
  41963c:	xchg   esi,eax
  41963d:	aam    0x3c
  41963f:	mov    cl,0x32
  419641:	ja     0x4195fd
  419643:	fisttp WORD PTR [ebx]
  419645:	and    eax,0x3449b4ed
  41964a:	fs int 0xe0
  41964d:	rcr    DWORD PTR [esi],1
  41964f:	jg     0x41963d
  419651:	out    0x45,eax
  419653:	or     al,0xcc
  419655:	dec    eax
  419656:	jne    0x419689
  419658:	or     al,0x40
  41965a:	inc    ebp
  41965b:	mov    ?,WORD PTR [edi-0xe6973ea]
  419661:	in     al,0x2c
  419663:	(bad)  
  419664:	sub    edx,esp
  419666:	pop    edx
  419667:	iret   
  419668:	mov    ah,0xab
  41966a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41966b:	pop    ds
  41966c:	es cmp eax,0xc0b8ab44
  419672:	or     eax,0x895f5193
  419677:	inc    ebp
  419678:	int3   
  419679:	loope  0x419661
  41967b:	inc    ebx
  41967c:	fst    QWORD PTR [ecx]
  41967e:	popa   
  41967f:	popa   
  419680:	cmp    esp,DWORD PTR [eax+0x2a]
  419683:	mov    al,0x85
  419685:	pushf  
  419686:	or     edx,DWORD PTR [ecx+ecx*2+0x32]
  41968a:	jecxz  0x4196d1
  41968c:	xchg   ebx,eax
  41968d:	rcl    DWORD PTR [ebp+0x6433ebc2],1
  419693:	push   eax
  419694:	je     0x4196df
  419696:	shr    DWORD PTR [esi+0x25],cl
  419699:	sbb    al,BYTE PTR [edx-0x2d6d17e5]
  41969f:	adc    eax,0xa925457d
  4196a4:	xchg   edx,eax
  4196a5:	clc    
  4196a6:	(bad)  
  4196a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4196a9:	mov    eax,ds:0xd1b1c5ed
  4196ae:	push   0xffffff94
  4196b0:	rcr    BYTE PTR [esi],cl
  4196b2:	sbb    cl,BYTE PTR [ecx-0x4c]
  4196b5:	repnz cwde 
  4196b7:	ins    BYTE PTR es:[edi],dx
  4196b8:	(bad)  
  4196b9:	jnp    0x4196ce
  4196bb:	(bad)  
  4196bd:	jb     0x4196eb
  4196bf:	sbb    DWORD PTR [ebp+0x68],0x9
  4196c3:	mov    ch,0x9c
  4196c5:	leave  
  4196c6:	std    
  4196c7:	push   0x72cd025f
  4196cc:	or     ah,BYTE PTR [edi+0x10]
  4196cf:	and    al,0x41
  4196d1:	push   0xcbf60dd9
  4196d6:	xchg   DWORD PTR [eax+0x37],eax
  4196d9:	out    0xb3,al
  4196db:	jecxz  0x419715
  4196dd:	push   ebx
  4196de:	and    al,dl
  4196e0:	push   cs
  4196e1:	sbb    al,0x85
  4196e3:	outs   dx,BYTE PTR ds:[esi]
  4196e4:	jl     0x4196b9
  4196e6:	test   BYTE PTR [edx-0x57268ed5],bl
  4196ec:	test   ecx,0xd1dab935
  4196f2:	pusha  
  4196f3:	jbe    0x41972d
  4196f5:	sub    BYTE PTR [ecx-0x39b46093],ch
  4196fb:	jp     0x4196b5
  4196fd:	mov    edi,DWORD PTR [eax-0x2b]
  419700:	into   
  419701:	jbe    0x4196bb
  419703:	mov    esp,0xc32d2dbd
  419708:	mov    bl,dh
  41970a:	std    
  41970b:	mov    al,0xc1
  41970d:	loop   0x4196e8
  41970f:	cld    
  419710:	inc    ebx
  419711:	rcl    DWORD PTR [ecx-0x593c0a64],1
  419717:	je     0x41970d
  419719:	into   
  41971a:	jle    0x4196dd
  41971c:	adc    DWORD PTR [ebp+0x1fc2e61f],0xa00d15bf
  419726:	mul    BYTE PTR [eax+edi*2-0x3b]
  41972a:	and    eax,0x7261039a
  41972f:	mov    edx,0x7f1bd3c6
  419734:	pop    es
  419735:	xor    dl,cl
  419737:	in     eax,dx
  419738:	pop    ds
  419739:	sbb    ecx,DWORD PTR [ecx+0x154285b3]
  41973f:	add    BYTE PTR [ebp-0x20],ch
  419742:	fwait
  419743:	into   
  419744:	scas   al,BYTE PTR es:[edi]
  419745:	leave  
  419746:	sub    DWORD PTR [esi-0x11],edx
  419749:	jmp    0xb8a29e91
  41974e:	and    BYTE PTR [eax+0x11817a03],bh
  419754:	sbb    al,0xe7
  419756:	xchg   bl,bl
  419758:	test   BYTE PTR [esi-0x562ee98d],ch
  41975e:	xchg   ebp,eax
  41975f:	pop    edx
  419760:	call   0xe36c:0xa5e3c8e6
  419767:	mov    edx,0x2b6b27a7
  41976c:	ss clc 
  41976e:	repz jg 0x419730
  419771:	inc    edi
  419772:	mov    BYTE PTR [ebx+0x7a26f7ec],ch
  419778:	jl     0x41970a
  41977a:	(bad)  
  41977b:	pop    eax
  41977c:	dec    ebp
  41977d:	ret    
  41977e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41977f:	fnstenv [edi+0x68]
  419782:	fidivr DWORD PTR [edi-0x5c8506f7]
  419788:	xor    al,0xb5
  41978a:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41978c:	test   eax,0x16223b69
  419791:	cli    
  419792:	add    ebx,0xffffffff
  419795:	jg     0x41976c
  419797:	or     dl,BYTE PTR [esi]
  419799:	stc    
  41979a:	dec    eax
  41979b:	ret    0xe5c6
  41979e:	aas    
  41979f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4197a0:	pop    esp
  4197a1:	cmp    al,0x1
  4197a3:	ds mov al,0xc3
  4197a6:	aam    0xa9
  4197a8:	(bad)  [edx+0x5c]
  4197ab:	jno    0x4197d4
  4197ad:	pusha  
  4197ae:	inc    edi
  4197af:	test   DWORD PTR [edx+0x9],0x9ff7a9d2
  4197b6:	inc    eax
  4197b7:	iret   
  4197b8:	pop    ebp
  4197b9:	pop    eax
  4197ba:	aaa    
  4197bb:	scas   al,BYTE PTR es:[edi]
  4197bc:	pop    esp
  4197bd:	add    eax,0x227457a7
  4197c2:	mov    DWORD PTR [edx],eax
  4197c4:	xor    esp,eax
  4197c6:	pop    edx
  4197c7:	(bad)  
  4197c8:	jo     0x41978e
  4197ca:	cmc    
  4197cb:	xor    edx,eax
  4197cd:	in     al,0xc2
  4197cf:	sbb    cl,BYTE PTR [ecx+0x26]
  4197d2:	jmp    0x419785
  4197d4:	shr    DWORD PTR [eax],1
  4197d6:	pop    es
  4197d7:	and    eax,0x329d94e
  4197dc:	pop    ebp
  4197dd:	pop    es
  4197de:	inc    eax
  4197df:	and    BYTE PTR [ebx+ebx*1+0x19],bh
  4197e3:	dec    DWORD PTR [ebx+edi*2+0x223584e9]
  4197ea:	je     0x4197bd
  4197ec:	fnstenv ds:0xc107224
  4197f2:	fist   DWORD PTR [ebp+0x7c30b95d]
  4197f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4197f9:	dec    edx
  4197fa:	add    ebp,0xfffffff8
  4197fd:	push   0x14
  4197ff:	xor    eax,0xaa3ba2b2
  419804:	mov    al,ds:0xd025ff2e
  419809:	jge    0x4197c8
  41980b:	inc    edx
  41980c:	lea    ebp,ds:0x7f9edc23
  419812:	out    dx,eax
  419813:	xchg   ebp,eax
  419814:	mov    DWORD PTR [eax-0x2c],esp
  419817:	dec    esp
  419818:	daa    
  419819:	xor    BYTE PTR fs:[ebp+0x7cf028a8],al
  419820:	add    eax,0xd2d9a72
  419825:	pop    esi
  419826:	loopne 0x419871
  419828:	sub    al,al
  41982a:	sub    bl,dl
  41982c:	jmp    0x4197f2
  41982e:	and    BYTE PTR [ecx-0x75d60fcc],bh
  419834:	fwait
  419835:	or     dh,BYTE PTR [esi]
  419837:	lahf   
  419838:	adc    BYTE PTR [eax],al
  41983a:	sbb    al,dh
  41983c:	test   DWORD PTR [ecx+0x11e2e34e],ebp
  419842:	pushf  
  419843:	stos   BYTE PTR es:[edi],al
  419844:	inc    esi
  419845:	inc    edi
  419846:	out    0x64,eax
  419848:	jmp    0x41987a
  41984a:	sub    eax,0xd232c5fc
  41984f:	mov    bh,0x2a
  419851:	ret    
  419852:	aad    0xf4
  419854:	xchg   ebx,eax
  419855:	loopne 0x4198a2
  419857:	cld    
  419858:	dec    ecx
  419859:	mov    ch,0x19
  41985b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41985c:	mov    ds:0xd6c6c2b2,eax
  419861:	push   ss
  419862:	fs repnz xchg dl,bh
  419866:	es cmp eax,0xf349eac0
  41986c:	cmp    dh,BYTE PTR [ecx]
  41986e:	cmp    eax,0xafc8bf61
  419873:	clc    
  419874:	mov    si,WORD PTR [edx+0x730362e2]
  41987b:	rcl    esi,0xb2
  41987e:	jns    0x419891
  419880:	repz call 0x9bacc884
  419886:	dec    bl
  419888:	and    esp,ebx
  41988a:	in     al,dx
  41988b:	and    eax,ebp
  41988d:	cdq    
  41988e:	jge    0x41983c
  419890:	or     ebp,DWORD PTR [eax+0x69]
  419893:	lods   al,BYTE PTR ds:[esi]
  419894:	popa   
  419895:	(bad)  
  419896:	or     bl,BYTE PTR [esp+edi*1]
  419899:	out    0x54,al
  41989b:	mov    edi,0xaae6b7a
  4198a0:	jns    0x4198d4
  4198a2:	or     BYTE PTR [edx+0x48],0x25
  4198a6:	jo     0x41987c
  4198a8:	push   DWORD PTR [edx]
  4198aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4198ab:	ss sbb al,0x9d
  4198ae:	or     bh,BYTE PTR [ebx+eiz*4]
  4198b1:	pushf  
  4198b2:	xor    eax,0xf4d2776f
  4198b7:	je     0x41989e
  4198b9:	stc    
  4198ba:	call   DWORD PTR [edi]
  4198bc:	cmp    al,0x26
  4198be:	add    al,0x94
  4198c0:	sbb    dl,BYTE PTR [ecx-0x22e367ce]
  4198c6:	mov    eax,0xa824a482
  4198cb:	xor    eax,esp
  4198cd:	dec    eax
  4198ce:	add    BYTE PTR [ebp-0x5c6ba3a5],0x37
  4198d5:	push   esp
  4198d6:	lds    ebp,FWORD PTR [ebx]
  4198d8:	ret    0xc65c
  4198db:	clc    
  4198dc:	cmc    
  4198dd:	sbb    BYTE PTR [ecx],bl
  4198df:	jle    0x4198d5
  4198e1:	push   0xffffffc4
  4198e3:	push   edx
  4198e4:	popf   
  4198e5:	mov    eax,DWORD PTR [edx]
  4198e7:	mov    esi,0xc8417f31
  4198ec:	sub    eax,0xa005c6c3
  4198f1:	cwde   
  4198f2:	sub    al,0xd1
  4198f4:	cld    
  4198f5:	and    DWORD PTR [ecx-0x6b],edi
  4198f8:	scas   eax,DWORD PTR es:[edi]
  4198f9:	jle    0x41993c
  4198fb:	add    DWORD PTR [esi+0x33b53aa9],eax
  419901:	fdiv   QWORD PTR [edi+ecx*1-0x41fec559]
  419908:	test   bh,dh
  41990a:	push   ds
  41990b:	pusha  
  41990c:	and    esi,DWORD PTR [esi+0x9d7a106]
  419912:	ins    DWORD PTR es:[edi],dx
  419913:	cmp    edi,DWORD PTR [esi]
  419915:	aaa    
  419916:	jb     0x4198ff
  419918:	push   edx
  419919:	sbb    BYTE PTR [eax-0x19],ah
  41991c:	cwde   
  41991d:	test   dh,0xe7
  419920:	test   eax,0x523727e5
  419925:	and    ebp,DWORD PTR [ebx-0x7dc642bd]
  41992b:	pushf  
  41992c:	pop    edx
  41992d:	call   0x313985c7
  419932:	call   DWORD PTR [ecx]
  419934:	mov    bl,BYTE PTR [ebx+0x61]
  419937:	(bad)  [edx+eax*8-0x3ed04bdc]
  41993e:	inc    ecx
  41993f:	pop    ebp
  419940:	test   esp,ebx
  419942:	xchg   ecx,eax
  419943:	jbe    0x41991a
  419945:	dec    esp
  419946:	sahf   
  419947:	dec    ebp
  419948:	push   cs
  419949:	outs   dx,BYTE PTR ds:[esi]
  41994a:	scas   al,BYTE PTR es:[edi]
  41994b:	shr    BYTE PTR [esi+0x7d],cl
  41994e:	ins    DWORD PTR es:[edi],dx
  41994f:	sbb    eax,0x4264a3be
  419954:	jae    0x419975
  419956:	hlt    
  419957:	or     eax,0x91535f2e
  41995c:	sbb    DWORD PTR [esi-0x10],edx
  41995f:	(bad)
  419963:	sub    al,0xb
  419965:	call   0xb688:0x2c85bd30
  41996c:	push   0x6b6fec41
  419971:	and    BYTE PTR [eax+0x5b],0x58
  419975:	jl     0x419969
  419977:	jo     0x419926
  419979:	dec    edx
  41997a:	loopne 0x4199f7
  41997c:	xor    BYTE PTR [ecx+0x390aec9f],ah
  419982:	xchg   ecx,eax
  419983:	push   cs
  419984:	sbb    eax,0xf609060e
  419989:	jnp    0x419978
  41998b:	or     DWORD PTR ds:0x54e7e772,0x20
  419992:	adc    bl,bl
  419994:	jmp    0x419a06
  419996:	mov    bh,bh
  419998:	pusha  
  419999:	clc    
  41999a:	or     DWORD PTR [ebx+0x14],edx
  41999d:	pop    esp
  41999e:	js     0x4199ce
  4199a0:	test   eax,0x9c6d2e40
  4199a5:	je     0x4199eb
  4199a7:	mov    ah,0xc6
  4199a9:	lods   eax,DWORD PTR ds:[esi]
  4199aa:	sbb    BYTE PTR [eax],ch
  4199ac:	cld    
  4199ad:	mov    dh,0x70
  4199af:	add    al,0xc
  4199b1:	xor    esp,esi
  4199b3:	ds shr dh,0x88
  4199b7:	sbb    bh,BYTE PTR [ebx-0x50dccc37]
  4199bd:	mov    dl,0x2
  4199bf:	mov    ebx,0x60b8aa96
  4199c4:	int3   
  4199c5:	mov    al,0xc8
  4199c7:	or     BYTE PTR [edi+esi*2],dh
  4199ca:	add    ebx,DWORD PTR [esi-0x5f]
  4199cd:	inc    ebx
  4199ce:	scas   eax,DWORD PTR es:[edi]
  4199cf:	test   DWORD PTR [ebp+0x19],edi
  4199d2:	jb     0x4199f4
  4199d4:	mov    WORD PTR [esi-0x7d],gs
  4199d7:	outs   dx,DWORD PTR ds:[esi]
  4199d8:	dec    edx
  4199d9:	loop   0x4199fe
  4199db:	inc    edi
  4199dc:	xchg   BYTE PTR [eax],al
  4199de:	add    eax,0x57c5e58d
  4199e3:	call   FWORD PTR [edx+0x7f]
  4199e6:	ffreep st(6)
  4199e8:	cmp    ebp,esp
  4199ea:	push   ds
  4199eb:	ficom  WORD PTR [ebx+ebp*4+0x6a]
  4199ef:	jmp    0x8f0f:0x6ea4ff63
  4199f6:	pop    ss
  4199f7:	or     eax,0x136b8585
  4199fc:	pop    edi
  4199fd:	xor    BYTE PTR [ecx+ebx*8],dl
  419a00:	xor    BYTE PTR [edx-0x5b9f16f],bl
  419a06:	push   ds
  419a07:	in     al,0xd8
  419a09:	jmp    0x7936:0x1168ba66
  419a10:	rol    al,1
  419a12:	add    bh,ah
  419a14:	sub    BYTE PTR [esi],ch
  419a16:	mov    edx,0x5dde8df5
  419a1b:	(bad)  
  419a1c:	sub    al,0x3a
  419a1e:	mov    eax,0x56d428a5
  419a23:	dec    ebx
  419a24:	(bad)  
  419a25:	popa   
  419a26:	add    BYTE PTR [ebp-0x6d2a9400],dl
  419a2c:	leave  
  419a2d:	push   ds
  419a2e:	or     bh,BYTE PTR [ecx]
  419a30:	dec    esp
  419a31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419a32:	inc    ebp
  419a33:	mov    ebx,0x9f049341
  419a38:	mov    bl,0xf2
  419a3a:	inc    ebx
  419a3b:	das    
  419a3c:	ret    0x188a
  419a3f:	xor    al,0x82
  419a41:	arpl   di,cx
  419a43:	sbb    eax,0x7921a0a0
  419a48:	inc    edi
  419a49:	and    al,0x2
  419a4b:	dec    ebx
  419a4c:	jmp    0x1fe52df9
  419a51:	pop    eax
  419a52:	aam    0x75
  419a54:	leave  
  419a55:	ret    
  419a56:	idiv   DWORD PTR [ecx+0xd4778ce]
  419a5c:	cmp    al,0x58
  419a5e:	(bad)  [ecx-0x54]
  419a61:	mov    BYTE PTR [edi],bl
  419a63:	call   0x6ca9:0x59420f6a
  419a6a:	sub    edi,ebx
  419a6c:	cmp    DWORD PTR [ecx],0x12ffef77
  419a72:	sbb    eax,0x91afbf9
  419a77:	or     DWORD PTR [eax],ecx
  419a79:	(bad)  
  419a7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419a7b:	push   ecx
  419a7c:	cld    
  419a7d:	push   cs
  419a7e:	pop    edi
  419a7f:	ins    DWORD PTR es:[edi],dx
  419a80:	enter  0xe326,0xe3
  419a84:	xchg   ebx,eax
  419a85:	imul   eax,ecx,0x4540031
  419a8b:	mov    al,0x82
  419a8d:	push   es
  419a8e:	mov    bh,al
  419a90:	pop    ds
  419a91:	(bad)  
  419a92:	adc    DWORD PTR [ebx+0x4c],edi
  419a95:	hlt    
  419a96:	dec    ebx
  419a97:	lods   eax,DWORD PTR ds:[esi]
  419a98:	into   
  419a99:	push   edx
  419a9a:	jl     0x419b0b
  419a9c:	mov    BYTE PTR [ebx],cl
  419a9e:	sbb    DWORD PTR [ecx],eax
  419aa0:	ja     0x419aae
  419aa2:	clc    
  419aa3:	jmp    DWORD PTR [edi-0x2a4dd373]
  419aa9:	sub    bl,BYTE PTR [ecx]
  419aab:	fild   QWORD PTR [ebx-0x208bb5e]
  419ab1:	and    BYTE PTR [edx+ebx*8-0x70],dh
  419ab5:	sbb    dl,ah
  419ab7:	adc    DWORD PTR [edx-0x1c81570a],esi
  419abd:	push   esi
  419abe:	and    al,0x1b
  419ac0:	mov    al,0xda
  419ac2:	sbb    edx,DWORD PTR [edi+ecx*2]
  419ac5:	jnp    0x419ac8
  419ac7:	imul   esi,DWORD PTR [eax-0x36c4eed1],0x947faa8b
  419ad1:	mov    esi,0x18e7fc3a
  419ad6:	mov    esp,0xc661d61b
  419adb:	inc    edx
  419adc:	cmp    DWORD PTR [edx],edi
  419ade:	mov    ah,dl
  419ae0:	push   cs
  419ae1:	scas   eax,DWORD PTR es:[edi]
  419ae2:	push   edi
  419ae3:	sub    BYTE PTR [ecx-0x27],ch
  419ae6:	jecxz  0x419acf
  419ae8:	mov    ebp,DWORD PTR [ebx-0x189a83c4]
  419aee:	dec    edi
  419aef:	mov    gs,WORD PTR ds:0xebac9daa
  419af5:	sar    BYTE PTR [edx+0x61135472],cl
  419afb:	sub    eax,0x19cb9926
  419b00:	mov    dl,0x0
  419b02:	scas   al,BYTE PTR es:[edi]
  419b03:	pop    ecx
  419b04:	aaa    
  419b05:	cmp    DWORD PTR [ebx],ebx
  419b07:	call   0x6b37:0x2f79d80f
  419b0e:	pop    edx
  419b0f:	pushf  
  419b10:	xor    al,BYTE PTR [edi]
  419b12:	add    al,0xd0
  419b14:	mov    eax,ds:0xeb793631
  419b19:	aad    0x12
  419b1b:	aam    0xa8
  419b1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b1e:	adc    BYTE PTR [esi],bh
  419b20:	add    ebx,edx
  419b22:	cmp    ecx,DWORD PTR [ebx+0x1f]
  419b25:	or     BYTE PTR [ecx],al
  419b27:	rcr    esp,0xca
  419b2a:	mov    eax,ds:0x4a01a71d
  419b2f:	and    DWORD PTR [eax-0x2092a422],esp
  419b35:	or     eax,0x6c5ef06
  419b3a:	fwait
  419b3b:	pop    edx
  419b3c:	mov    fs,WORD PTR [ebx+0x6f879e27]
  419b42:	xchg   ebp,eax
  419b43:	ja     0x419b5b
  419b45:	mov    ch,0x41
  419b47:	popf   
  419b48:	sub    dh,bh
  419b4a:	mov    ds:0xc8c32bfd,al
  419b4f:	mov    BYTE PTR [edx+0x40],0x4b
  419b53:	pop    ecx
  419b54:	mov    ah,0x68
  419b56:	int    0xfe
  419b58:	gs jae 0x419b8c
  419b5b:	stc    
  419b5c:	pop    edi
  419b5d:	dec    ebx
  419b5e:	jp     0x419ae4
  419b60:	and    ch,BYTE PTR [ebx+0x2e]
  419b63:	arpl   WORD PTR [edx+0x27],si
  419b66:	pop    ds
  419b67:	sahf   
  419b68:	mov    ds:0x77100d5c,eax
  419b6d:	mov    dh,dl
  419b6f:	clc    
  419b70:	in     eax,0x2a
  419b72:	neg    DWORD PTR [eax]
  419b74:	aam    0x59
  419b76:	xor    eax,0x62da7c52
  419b7b:	out    dx,eax
  419b7c:	jne    0x419b50
  419b7e:	ror    DWORD PTR ds:0xf2abfa2b,0xf1
  419b85:	and    edx,ebp
  419b87:	out    dx,al
  419b88:	sbb    ebx,edx
  419b8a:	mov    ds,WORD PTR [ebx+0x7]
  419b8d:	xchg   esi,eax
  419b8e:	shl    BYTE PTR [edx-0x80],cl
  419b91:	sar    esi,1
  419b93:	out    dx,al
  419b94:	imul   esi,DWORD PTR [ebx],0xffffffb8
  419b97:	cmp    al,0xdd
  419b99:	pop    ebp
  419b9a:	enter  0x382f,0x88
  419b9e:	and    BYTE PTR [eax+esi*4],al
  419ba1:	pop    es
  419ba2:	les    edi,FWORD PTR [ecx+0x5e9d64e7]
  419ba8:	adc    al,0x9d
  419baa:	inc    ebx
  419bab:	jne    0x419b94
  419bad:	bnd ret 0x5a2b
  419bb1:	sbb    cl,BYTE PTR [esi+eax*2-0x12]
  419bb5:	cmp    edi,DWORD PTR [esi]
  419bb7:	mov    ecx,0x4f75fb82
  419bbc:	inc    ebp
  419bbd:	jne    0x419b77
  419bbf:	add    BYTE PTR [ecx+0x591805a6],cl
  419bc5:	sbb    DWORD PTR ds:0xb4ddafdf,0x71
  419bcc:	sbb    eax,0x2ec42d4b
  419bd1:	aad    0x81
  419bd3:	cli    
  419bd4:	nop
  419bd5:	into   
  419bd6:	mov    ds:0xf270f905,al
  419bdb:	cwde   
  419bdc:	xchg   ecx,eax
  419bdd:	jle    0x419bd6
  419bdf:	stc    
  419be0:	cdq    
  419be1:	stos   BYTE PTR es:[edi],al
  419be2:	pop    ecx
  419be3:	js     0x419b9e
  419be5:	adc    BYTE PTR [edx],cl
  419be7:	neg    BYTE PTR ds:0x63912d35
  419bed:	gs enter 0xe12,0x29
  419bf2:	jnp    0x419b7a
  419bf4:	lods   al,BYTE PTR ds:[esi]
  419bf5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419bf6:	or     al,cl
  419bf8:	sub    al,0x5d
  419bfa:	mov    bl,0x3e
  419bfc:	pop    ecx
  419bfd:	out    0xc3,eax
  419bff:	inc    ecx
  419c00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c01:	dec    ebx
  419c02:	call   0x3d37:0xb6e7fbcf
  419c09:	pop    esi
  419c0a:	pop    ebp
  419c0b:	jmp    0xe3b6:0x75592965
  419c12:	aaa    
  419c13:	xchg   esp,eax
  419c14:	fadd   QWORD PTR [eax+0x72]
  419c17:	test   DWORD PTR [eax-0x7d],edi
  419c1a:	dec    ebx
  419c1b:	mov    bh,0x84
  419c1d:	push   0xffffff90
  419c1f:	and    al,0x17
  419c21:	lods   al,BYTE PTR ds:[esi]
  419c22:	push   ss
  419c23:	nop
  419c24:	loop   0x419c10
  419c26:	rcl    BYTE PTR [eax],1
  419c28:	mov    ebx,0xab3e8aa2
  419c2d:	nop
  419c2e:	mov    ah,dh
  419c30:	inc    edi
  419c31:	iret   
  419c32:	sub    al,0x13
  419c34:	mov    ch,0xf
  419c36:	loop   0x419c4c
  419c38:	call   0xcd81d490
  419c3d:	les    ecx,FWORD PTR [eax]
  419c3f:	push   0xffffffd5
  419c41:	test   DWORD PTR [edx],0x92eac6e6
  419c47:	retf   
  419c48:	hlt    
  419c49:	pop    ds
  419c4a:	rcl    DWORD PTR [ebx-0x63612a38],0x80
  419c51:	cmp    eax,DWORD PTR [ecx]
  419c53:	out    0xbb,eax
  419c55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c56:	xor    edx,esi
  419c58:	pop    ebx
  419c59:	aaa    
  419c5a:	mov    bh,0x4a
  419c5c:	and    al,cl
  419c5e:	xchg   edi,eax
  419c5f:	pusha  
  419c60:	js     0x419bf1
  419c62:	lock arpl WORD PTR [ebp+edx*2+0x399d8c73],bx
  419c6a:	xchg   ebp,eax
  419c6b:	shl    BYTE PTR [ecx+0x75],cl
  419c6e:	jmp    0x419c74
  419c70:	comiss xmm1,xmm7
  419c73:	stos   BYTE PTR es:[edi],al
  419c74:	sub    al,0x67
  419c76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c77:	jl     0x419c01
  419c79:	in     eax,0x56
  419c7b:	mov    ah,0xb4
  419c7d:	popa   
  419c7e:	xchg   esp,eax
  419c7f:	or     dl,BYTE PTR ds:0xafacf2de
  419c85:	icebp  
  419c86:	aaa    
  419c87:	dec    esp
  419c88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c89:	mov    bh,0x8f
  419c8b:	push   esp
  419c8c:	mov    bl,0x5f
  419c8e:	out    dx,al
  419c8f:	xor    DWORD PTR [ebx-0x40],0x97bd9e0e
  419c96:	sub    BYTE PTR [esi-0x1],0xe0
  419c9a:	or     BYTE PTR [ebx-0xe],bh
  419c9d:	dec    eax
  419c9e:	sbb    BYTE PTR [edx-0x4b719ff],bh
  419ca4:	mov    cl,0x99
  419ca6:	mov    gs,edx
  419ca8:	ins    BYTE PTR es:[edi],dx
  419ca9:	push   ss
  419caa:	cmp    DWORD PTR [edx+eax*2-0x76],ecx
  419cae:	call   0xa1df:0x99b7de52
  419cb5:	mov    edx,0x79325968
  419cba:	sub    BYTE PTR [edx+0x462b9904],bl
  419cc0:	dec    ecx
  419cc1:	jge    0x419ca5
  419cc3:	sub    al,0x7d
  419cc5:	xchg   esp,eax
  419cc6:	cmp    DWORD PTR [eax+0x55],ecx
  419cc9:	enter  0x4e57,0x11
  419ccd:	stc    
  419cce:	dec    esp
  419ccf:	jmp    0x419cf2
  419cd1:	fst    QWORD PTR [ebx+ebp*8+0x7d]
  419cd5:	or     esi,eax
  419cd7:	in     eax,dx
  419cd8:	cmp    DWORD PTR [ecx+0x3f],ecx
  419cdb:	shl    ecx,1
  419cdd:	xchg   ebp,eax
  419cde:	cmp    BYTE PTR [esi],ch
  419ce0:	rcr    eax,0xa2
  419ce3:	dec    ebx
  419ce4:	rcr    BYTE PTR [esi+edi*4],1
  419ce7:	xor    dl,BYTE PTR [esp+ebp*2+0x79]
  419ceb:	and    eax,0x8da061cb
  419cf0:	jo     0x419c8d
  419cf2:	or     al,0xd3
  419cf4:	pop    es
  419cf5:	gs cmp al,0xc7
  419cf8:	dec    edi
  419cf9:	inc    edx
  419cfa:	add    edx,DWORD PTR [eax+ebp*2+0x24]
  419cfe:	inc    edi
  419cff:	sar    dh,cl
  419d01:	hlt    
  419d02:	mov    ebx,0xc1f6924f
  419d07:	sbb    edi,DWORD PTR [eax+0x76]
  419d0a:	lock test al,0x5e
  419d0d:	xchg   ecx,eax
  419d0e:	cmp    al,0x50
  419d10:	sub    al,0x27
  419d12:	jp     0x419d7e
  419d14:	push   ecx
  419d15:	pop    ds
  419d16:	enter  0xd099,0x16
  419d1a:	sub    dl,cl
  419d1c:	xchg   ecx,eax
  419d1d:	cmp    BYTE PTR [eiz*4+0x4cc747a9],0x7c
  419d25:	dec    esp
  419d26:	out    0x2d,eax
  419d28:	add    ch,BYTE PTR [ebp+0x48]
  419d2b:	and    eax,0x942128cd
  419d30:	frstor [ecx-0x3387669e]
  419d36:	xchg   edi,eax
  419d37:	stos   DWORD PTR es:[edi],eax
  419d38:	(bad)  
  419d39:	fs call 0x64dbf873
  419d3f:	dec    ebp
  419d40:	gs mov esi,0x743206b1
  419d46:	and    bl,BYTE PTR [ebx-0x2e]
  419d49:	jmp    0x419d48
  419d4b:	mov    ah,BYTE PTR [ebx-0x17f6d5c0]
  419d51:	sbb    BYTE PTR [ebp+0xa9d3511],dh
  419d57:	mov    ah,0x26
  419d59:	or     ebp,ebx
  419d5b:	in     eax,0x2a
  419d5d:	fmulp  st(4),st
  419d5f:	out    dx,al
  419d60:	add    dh,dh
  419d62:	cdq    
  419d63:	xchg   esp,eax
  419d64:	fisttp QWORD PTR [esi-0x33]
  419d67:	mov    ebp,0xcfe9aa3a
  419d6c:	sbb    al,0x94
  419d6e:	pop    edx
  419d6f:	or     esp,DWORD PTR [ebp+edx*2-0x2c]
  419d73:	xor    BYTE PTR [eax+0xcb10e2d],ch
  419d79:	dec    ebx
  419d7a:	mov    ?,WORD PTR [eax]
  419d7c:	sbb    al,0xa2
  419d7e:	adc    BYTE PTR [edx+ebp*8],ah
  419d81:	das    
  419d82:	push   eax
  419d83:	push   esi
  419d84:	shr    BYTE PTR ds:0x8eaa7c78,cl
  419d8a:	inc    esi
  419d8b:	xor    BYTE PTR [edi+0x32],cl
  419d8e:	(bad)  
  419d8f:	push   0x4a
  419d91:	jb     0x419de7
  419d93:	es jle 0x419d4a
  419d96:	dec    ebx
  419d97:	cdq    
  419d98:	(bad)  
  419d9a:	inc    edx
  419d9b:	sti    
  419d9c:	adc    eax,0xe7234725
  419da1:	(bad)  
  419da3:	mov    al,0xf9
  419da5:	sbb    ecx,DWORD PTR ds:0x72ee457a
  419dab:	pop    ss
  419dac:	(bad)  
  419dad:	sub    eax,0x314984d1
  419db2:	mov    ecx,0x2c81ff6a
  419db7:	xchg   bl,dh
  419db9:	test   DWORD PTR [edi+0x1b4569ee],esi
  419dbf:	fnsave [edi-0x77]
  419dc2:	loope  0x419e35
  419dc4:	jg     0x419d51
  419dc6:	ror    BYTE PTR [edx-0x50b2798],1
  419dcc:	mov    esi,0x9a45b94b
  419dd1:	daa    
  419dd2:	cwde   
  419dd3:	enter  0x526a,0xd5
  419dd7:	push   ds
  419dd8:	mov    eax,0x978737a0
  419ddd:	cli    
  419dde:	lods   al,BYTE PTR ds:[esi]
  419ddf:	xlat   BYTE PTR ds:[ebx]
  419de0:	mov    bh,0x9b
  419de2:	dec    esp
  419de3:	cmp    DWORD PTR [esi+0x52af4b29],edi
  419de9:	xor    al,BYTE PTR [esi+edi*1-0x7e8afb97]
  419df0:	cwde   
  419df1:	push   ecx
  419df2:	sub    bh,bh
  419df4:	popa   
  419df5:	dec    edi
  419df6:	outs   dx,BYTE PTR ds:[esi]
  419df7:	(bad)  
  419df8:	xlat   BYTE PTR ds:[ebx]
  419df9:	xor    ch,BYTE PTR [ecx-0x1e]
  419dfc:	lods   eax,DWORD PTR ss:[esi]
  419dfe:	dec    ebx
  419dff:	imul   ebx,DWORD PTR [ecx+edx*4],0x5c
  419e03:	into   
  419e04:	pushaw 
  419e06:	push   eax
  419e07:	xchg   ebp,eax
  419e08:	mov    cl,cl
  419e0a:	xchg   esp,eax
  419e0b:	inc    ebp
  419e0c:	pop    edx
  419e0d:	inc    eax
  419e0e:	mov    bl,0x2f
  419e10:	sar    BYTE PTR [edx],cl
  419e12:	push   esp
  419e13:	fidiv  WORD PTR [edi]
  419e15:	sub    bh,cl
  419e17:	jnp    0x419dd4
  419e19:	outs   dx,DWORD PTR ds:[esi]
  419e1a:	(bad)  
  419e1b:	stc    
  419e1c:	mov    ecx,0x5bd458f4
  419e21:	push   edi
  419e22:	icebp  
  419e23:	inc    ecx
  419e24:	fmul   QWORD PTR [esi-0x2a]
  419e27:	or     BYTE PTR [edi],ah
  419e29:	xchg   ebx,eax
  419e2a:	(bad)  
  419e2b:	out    dx,eax
  419e2c:	imul   ebx,DWORD PTR [eax-0x497bf7b4],0x54
  419e33:	leave  
  419e34:	fndisi(8087 only) 
  419e36:	sbb    al,0xe4
  419e38:	adc    ebp,ebp
  419e3a:	jecxz  0x419e6d
  419e3c:	and    edx,DWORD PTR [edx+edi*1-0x1e347860]
  419e43:	pop    edx
  419e44:	inc    edx
  419e45:	mov    ecx,0xf46eafc7
  419e4a:	(bad)  
  419e4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e4c:	and    dl,bh
  419e4e:	int    0x13
  419e50:	repz cmp BYTE PTR [esi+0x1539067a],0xdd
  419e58:	fldenv [esi+esi*2-0x33]
  419e5c:	sub    ebp,ebp
  419e5e:	(bad)  
  419e5f:	js     0x419e19
  419e61:	out    0x75,al
  419e63:	sbb    DWORD PTR [edx+0x57],edx
  419e66:	jo     0x419eb4
  419e68:	into   
  419e69:	pop    ss
  419e6a:	mov    bh,0xf9
  419e6c:	call   0x2d682e3
  419e71:	jnp    0x419ed6
  419e73:	add    al,bh
  419e75:	cwde   
  419e76:	rcr    al,cl
  419e78:	in     al,0xc7
  419e7a:	mov    dh,0x80
  419e7c:	(bad)  [esi]
  419e7e:	xor    bh,BYTE PTR [eax]
  419e80:	ffreep st(3)
  419e82:	and    esi,DWORD PTR [edi-0x25fc3431]
  419e88:	retf   0x5125
  419e8b:	out    dx,al
  419e8c:	test   al,0x37
  419e8e:	jmp    0x419ef5
  419e90:	jmp    0x419eab
  419e92:	gs lahf 
  419e94:	push   edx
  419e95:	lods   al,BYTE PTR ds:[esi]
  419e96:	sub    eax,0xf31a869d
  419e9b:	cmp    BYTE PTR [bp+si-0x1b17],dh
  419ea0:	test   al,0xd
  419ea2:	cmp    BYTE PTR [ebp+0x6d],cl
  419ea5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ea6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ea7:	shr    DWORD PTR [esi+edx*8-0x6cd03a75],cl
  419eae:	mov    bh,0x96
  419eb0:	stos   DWORD PTR es:[edi],eax
  419eb1:	add    bl,BYTE PTR [esp+ecx*1+0x4eb1bc23]
  419eb8:	stos   BYTE PTR es:[edi],al
  419eb9:	jb     0x419f1d
  419ebb:	gs test dl,bh
  419ebe:	sub    DWORD PTR [ecx+0x4a],ebp
  419ec1:	(bad)  
  419ec2:	stos   DWORD PTR es:[edi],eax
  419ec3:	not    BYTE PTR [ebx+eax*1+0x6d5d028e]
  419eca:	sbb    ebx,DWORD PTR [edx+ecx*2-0xe]
  419ece:	imul   BYTE PTR [esi]
  419ed0:	dec    esi
  419ed1:	cmp    al,0x3a
  419ed3:	mov    DWORD PTR [eax-0x11d7f43c],edi
  419ed9:	adc    cl,BYTE PTR [ebx+ebp*1]
  419edc:	(bad)  
  419edd:	retf   0x311c
  419ee0:	lods   al,BYTE PTR ds:[esi]
  419ee1:	or     eax,DWORD PTR [ecx+ecx*2-0x61]
  419ee5:	out    dx,eax
  419ee6:	xor    DWORD PTR [eax+0x24],edx
  419ee9:	sbb    bl,dl
  419eeb:	psubd  mm0,QWORD PTR [esi-0x1b]
  419eef:	xchg   ebp,eax
  419ef0:	retf   0x315b
  419ef3:	mov    ds:0x30ba1d56,eax
  419ef8:	push   ebp
  419ef9:	jmp    0xebaa:0x48bc4193
  419f00:	push   0x93d3347c
  419f05:	icebp  
  419f06:	pop    edx
  419f07:	xchg   ebp,esp
  419f09:	(bad)  
  419f0a:	adc    al,0x31
  419f0c:	dec    eax
  419f0d:	add    al,0xd9
  419f0f:	sub    eax,0xdf853234
  419f14:	xor    BYTE PTR [edi+eiz*1],cl
  419f17:	jne    0x419f5a
  419f19:	push   edi
  419f1a:	clc    
  419f1b:	fild   WORD PTR [edx]
  419f1d:	cmp    eax,0xd311c7af
  419f22:	mov    ch,0x40
  419f24:	shl    BYTE PTR [edx+0x7ed51a98],1
  419f2a:	dec    edi
  419f2b:	and    eax,0xce60b2d6
  419f30:	pop    esp
  419f31:	popa   
  419f32:	jg     0x419f8a
  419f34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f35:	lds    edx,FWORD PTR [esi+0x163cde4]
  419f3b:	es nop
  419f3d:	(bad)  
  419f3e:	adc    esp,DWORD PTR [ebx-0x10c6af71]
  419f44:	call   0xa0911990
  419f49:	sub    al,0x17
  419f4b:	sub    BYTE PTR [esi-0x43],bh
  419f4e:	dec    esp
  419f4f:	xor    eax,0x60b09c9b
  419f54:	cs loop 0x419f77
  419f57:	pushf  
  419f58:	pop    ecx
  419f59:	ret    
  419f5a:	ja     0x419f42
  419f5c:	dec    ebp
  419f5d:	icebp  
  419f5e:	lock jmp 0x419ee9
  419f61:	daa    
  419f62:	(bad)  
  419f63:	push   esi
  419f64:	sub    edi,0x10
  419f67:	sbb    ebp,esi
  419f69:	inc    ecx
  419f6a:	loop   0x419fc9
  419f6c:	or     bl,BYTE PTR [ecx+ebp*2]
  419f6f:	adc    eax,DWORD PTR [eax-0x62]
  419f72:	mov    ebp,0x5133ffd7
  419f77:	add    eax,0x180495f5
  419f7c:	(bad)  
  419f7d:	mov    edi,0x56cdf2f1
  419f82:	mov    al,ds:0xd4d5c5ee
  419f87:	popf   
  419f88:	call   0x238c22db
  419f8d:	mov    ecx,0x37f5b9ab
  419f92:	push   cs
  419f93:	xlat   BYTE PTR ds:[ebx]
  419f94:	stos   DWORD PTR es:[edi],eax
  419f95:	sbb    DWORD PTR [eax+0x2a770482],esi
  419f9b:	nop
  419f9c:	mov    eax,0xd81074e3
  419fa1:	cmp    eax,0x64876e90
  419fa6:	sbb    esi,edx
  419fa8:	xor    eax,0xe5c8c0be
  419fad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419fae:	aaa    
  419faf:	xor    BYTE PTR [edi-0xa],bh
  419fb2:	xchg   esi,eax
  419fb3:	jecxz  0x419fbb
  419fb5:	sub    al,0x99
  419fb7:	scas   eax,DWORD PTR es:[edi]
  419fb8:	vpand  ymm7,ymm2,YMMWORD PTR [esi+0x681ca2e0]
  419fc0:	mov    al,ds:0x8af40c2b
  419fc5:	jge    0x419fe8
  419fc7:	icebp  
  419fc8:	and    al,0x94
  419fca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419fcb:	loop   0x419f98
  419fcd:	and    esi,DWORD PTR [edi-0x42]
  419fd0:	(bad)  
  419fd1:	xchg   ebx,eax
  419fd2:	scas   eax,DWORD PTR es:[edi]
  419fd3:	imul   ebx,ebp,0x7673dbf8
  419fd9:	das    
  419fda:	mov    ebx,0x5278319f
  419fdf:	aaa    
  419fe0:	dec    ebp
  419fe1:	ret    
  419fe2:	mov    WORD PTR [ebp+0x15],ss
  419fe5:	pop    ebx
  419fe6:	mov    al,BYTE PTR [eax-0x4b]
  419fe9:	sbb    al,0x4c
  419feb:	xchg   esp,eax
  419fec:	idiv   DWORD PTR [eax]
  419fee:	push   ecx
  419fef:	inc    ebx
  419ff0:	lahf   
  419ff1:	add    DWORD PTR [edi+0x49],esi
  419ff4:	or     edi,ebp
  419ff6:	div    DWORD PTR ds:[ebp+0x1]
  419ffa:	dec    esi
  419ffb:	mov    ebp,0x4d15ae2b
  41a000:	sub    edi,DWORD PTR [edi]
  41a002:	cmp    al,0x93
  41a004:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a005:	neg    BYTE PTR [esi-0x33]
  41a008:	inc    eax
  41a009:	fdivr  QWORD PTR [ebx+0xb5cb08f]
  41a00f:	and    eax,0x1b30ce04
  41a014:	mov    edi,0x52adef11
  41a019:	inc    DWORD PTR [bx-0x75]
  41a01d:	xchg   DWORD PTR [ebx+0x2d2d453f],edi
  41a023:	dec    esi
  41a024:	popa   
  41a025:	in     eax,0x20
  41a027:	js     0x41a029
  41a029:	pop    ecx
  41a02a:	adc    eax,0xb1fa2212
  41a02f:	stos   BYTE PTR es:[edi],al
  41a030:	std    
  41a031:	dec    ebp
  41a032:	clts   
  41a034:	aaa    
  41a035:	mov    DWORD PTR [esi],edi
  41a037:	(bad)  
  41a038:	push   edx
  41a039:	add    al,0x26
  41a03b:	inc    ebx
  41a03c:	sub    BYTE PTR [ecx-0x27],bl
  41a03f:	fs test al,0xdf
  41a042:	jnp    0x419fd4
  41a044:	stc    
  41a045:	lahf   
  41a046:	and    eax,0x67df1c61
  41a04b:	add    al,0xd
  41a04d:	lea    esi,[eax+0x77]
  41a050:	cs test eax,0x9930e9ec
  41a056:	adc    BYTE PTR [edi+ebx*2-0x9],bl
  41a05a:	ret    
  41a05b:	push   0x3a
  41a05d:	dec    ebp
  41a05e:	je     0x41a074
  41a060:	adc    eax,0x8ebd60e
  41a065:	jp     0x419ff0
  41a067:	mov    DWORD PTR [edx],0x6242eba6
  41a06d:	test   eax,0x8f9d9142
  41a072:	ja     0x41a0c0
  41a074:	pop    esi
  41a075:	fbstp  TBYTE PTR [edi-0x1b]
  41a078:	imul   eax,DWORD PTR [esi-0x3d],0x72
  41a07c:	fwait
  41a07d:	sar    ah,cl
  41a07f:	add    eax,0x4fe20b24
  41a084:	mov    dl,0xe2
  41a086:	cmp    DWORD PTR [edx+edx*1-0x685c315e],eax
  41a08d:	leave  
  41a08e:	call   0x4e0eca62
  41a093:	dec    eax
  41a094:	daa    
  41a095:	pop    eax
  41a096:	add    BYTE PTR [ecx-0x31],cl
  41a099:	pusha  
  41a09a:	pcmpeqb mm1,QWORD PTR [edi+edx*1+0x1bf0bf21]
  41a0a2:	push   edx
  41a0a3:	call   0xbe581921
  41a0a8:	lds    ecx,FWORD PTR [edi]
  41a0aa:	fcom   DWORD PTR [ecx*4-0x23bc1387]
  41a0b1:	inc    eax
  41a0b2:	fisttp QWORD PTR [ebx+0x2db8dc60]
  41a0b8:	(bad)  
  41a0b9:	out    0xa1,al
  41a0bb:	add    DWORD PTR [eax+edx*8-0x75],ecx
  41a0bf:	adc    eax,0xbaa5f88
  41a0c4:	retf   0xf107
  41a0c7:	shl    DWORD PTR [eax-0x3b],0x37
  41a0cb:	mov    DWORD PTR [edx-0x2729949a],0x49f0c48b
  41a0d5:	push   0x51
  41a0d7:	mov    dh,0xd9
  41a0d9:	mov    eax,0x6a5bddf1
  41a0de:	enter  0xd086,0x4e
  41a0e2:	adc    DWORD PTR [eax+esi*4+0x13],edi
  41a0e6:	or     ecx,DWORD PTR [ecx]
  41a0e8:	xchg   esi,eax
  41a0e9:	add    BYTE PTR [eax+0x69],0xfe
  41a0ed:	rol    DWORD PTR [ebp-0x5e983b72],0x2b
  41a0f4:	jl     0x41a0e3
  41a0f6:	in     eax,dx
  41a0f7:	int    0xe7
  41a0f9:	mov    bl,0x35
  41a0fb:	jne    0x41a0e8
  41a0fd:	cld    
  41a0fe:	sub    ebp,DWORD PTR [ebx-0x6f38e72e]
  41a104:	adc    ebx,DWORD PTR [ebx-0x61575e4d]
  41a10a:	push   esp
  41a10b:	adc    ch,bh
  41a10d:	test   dh,0xfa
  41a110:	adc    DWORD PTR cs:[edi+0x3b090213],edi
  41a117:	adc    cl,bh
  41a119:	dec    ebp
  41a11a:	std    
  41a11b:	int    0x9e
  41a11d:	push   ebp
  41a11e:	clc    
  41a11f:	out    dx,eax
  41a120:	xchg   edi,eax
  41a121:	jnp    0x41a105
  41a123:	or     ah,BYTE PTR [edx-0x7ad4af83]
  41a129:	cld    
  41a12a:	mov    eax,ds:0x862bf1a0
  41a12f:	xor    BYTE PTR [edx-0x690a44d5],cl
  41a135:	adc    BYTE PTR [ebp-0x1ed0a01e],ah
  41a13b:	lea    ebp,[edx]
  41a13d:	pop    ebp
  41a13e:	add    ebp,DWORD PTR [eax]
  41a140:	mov    esi,0xb1a4106d
  41a145:	push   esi
  41a146:	ins    BYTE PTR es:[edi],dx
  41a147:	inc    ebx
  41a148:	jg     0x41a189
  41a14a:	sbb    BYTE PTR [esi+0x29],ch
  41a14d:	fdecstp 
  41a14f:	jg     0x41a0f4
  41a151:	mov    ds:0x1afdf4cf,al
  41a156:	out    dx,al
  41a157:	push   ecx
  41a158:	jae    0x41a0e1
  41a15a:	xor    al,BYTE PTR [edi-0x66fdfd03]
  41a160:	mov    ch,0xed
  41a162:	dec    ecx
  41a163:	aad    0x60
  41a165:	dec    ebp
  41a166:	dec    esp
  41a168:	and    eax,0x4a34c1e8
  41a16d:	jge    0x41a15e
  41a16f:	in     al,dx
  41a170:	xor    eax,0xa0b1ee7f
  41a175:	stos   DWORD PTR es:[edi],eax
  41a176:	repnz push cs
  41a178:	(bad)  
  41a179:	fdiv   DWORD PTR [ecx-0x34]
  41a17c:	popa   
  41a17d:	outs   dx,DWORD PTR ds:[esi]
  41a17e:	std    
  41a17f:	fnstcw WORD PTR [eax]
  41a181:	xchg   ecx,eax
  41a182:	gs dec esi
  41a184:	inc    ecx
  41a185:	retf   
  41a186:	daa    
  41a187:	add    eax,0x6143a0ab
  41a18c:	out    0x7a,eax
  41a18e:	cld    
  41a18f:	into   
  41a190:	scas   al,BYTE PTR es:[edi]
  41a191:	dec    esi
  41a192:	or     DWORD PTR [edx-0x656637cb],ecx
  41a198:	test   al,0x7e
  41a19a:	and    BYTE PTR [ecx+0x2],ah
  41a19d:	aaa    
  41a19e:	mov    ebp,0x76d2a191
  41a1a3:	icebp  
  41a1a4:	jb     0x41a188
  41a1a6:	jns    0x41a177
  41a1a8:	popa   
  41a1a9:	dec    ebx
  41a1aa:	fcmovbe st,st(5)
  41a1ac:	or     eax,0x63697f
  41a1b1:	out    dx,eax
  41a1b2:	jne    0x41a165
  41a1b4:	fs cmc 
  41a1b6:	dec    edx
  41a1b7:	xor    BYTE PTR [ebx+0x703f4c6e],ah
  41a1bd:	ins    BYTE PTR es:[edi],dx
  41a1be:	mov    eax,0x96553387
  41a1c3:	mov    DWORD PTR [ebp-0x185d269e],esi
  41a1c9:	sub    al,0x21
  41a1cb:	push   ecx
  41a1cc:	push   0xffffffc4
  41a1ce:	and    cl,al
  41a1d0:	aad    0xe7
  41a1d2:	inc    ebp
  41a1d3:	(bad)  
  41a1d4:	jno    0x41a1ba
  41a1d6:	push   esi
  41a1d7:	xlat   BYTE PTR ds:[ebx]
  41a1d8:	cmc    
  41a1d9:	mov    dl,0xc
  41a1db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a1dc:	adc    eax,0x26dd9b2b
  41a1e1:	pop    edx
  41a1e2:	mov    cl,0x6f
  41a1e4:	(bad)  
  41a1e5:	in     al,0xdd
  41a1e7:	rcr    DWORD PTR ds:0x731c245a,1
  41a1ed:	xchg   DWORD PTR [edx+0x79980ce5],ecx
  41a1f3:	test   DWORD PTR [ecx-0x688ea1a7],esp
  41a1f9:	xchg   ecx,eax
  41a1fa:	retf   
  41a1fb:	mov    al,ds:0x962bfd34
  41a200:	mov    edx,0xf1f51726
  41a205:	cmc    
  41a206:	ds push edx
  41a208:	enter  0x993f,0xf6
  41a20c:	xor    esp,DWORD PTR [ecx+0x1294693f]
  41a212:	push   ds
  41a213:	dec    esp
  41a214:	fstp   st(7)
  41a216:	dec    esp
  41a217:	push   esi
  41a218:	sub    ebp,DWORD PTR [ebp+eiz*4+0x5b]
  41a21c:	dec    ebp
  41a21d:	bound  edx,QWORD PTR [ecx]
  41a21f:	sub    ebp,DWORD PTR [esi-0x38844103]
  41a225:	rcl    DWORD PTR [esi],0x29
  41a228:	pop    ebp
  41a229:	adc    eax,0xe9f8a38d
  41a22e:	outs   dx,DWORD PTR ds:[esi]
  41a22f:	lahf   
  41a230:	rcl    esi,1
  41a232:	push   edx
  41a233:	fsubp  st(2),st
  41a235:	fs cmp DWORD PTR gs:[eax],ebx
  41a239:	das    
  41a23a:	cwde   
  41a23b:	xor    esi,DWORD PTR [esi]
  41a23d:	(bad)  
  41a23f:	xchg   edi,eax
  41a240:	(bad)  
  41a241:	jb     0x41a295
  41a243:	pop    esi
  41a244:	fisttp DWORD PTR [ebp-0x1872766]
  41a24a:	popa   
  41a24b:	sub    al,dl
  41a24d:	xchg   esp,eax
  41a24e:	sbb    ebx,DWORD PTR [eax+ebp*8]
  41a251:	rcl    DWORD PTR [edx],cl
  41a253:	pop    es
  41a254:	xchg   esi,eax
  41a255:	outs   dx,DWORD PTR ds:[esi]
  41a256:	xchg   edx,eax
  41a257:	xchg   ebx,eax
  41a258:	popa   
  41a259:	sub    eax,0x6e6e23ab
  41a25e:	xor    ecx,DWORD PTR [edi]
  41a260:	push   esi
  41a261:	mov    edi,0x29205c9
  41a266:	or     edi,esp
  41a268:	adc    eax,0x5e2c55f1
  41a26d:	repnz std 
  41a26f:	scas   al,BYTE PTR es:[edi]
  41a270:	xchg   ecx,eax
  41a271:	cmp    cl,BYTE PTR [esi]
  41a273:	mov    esi,0xc9e26e76
  41a278:	push   esi
  41a279:	loope  0x41a210
  41a27b:	adc    DWORD PTR [eax-0x3f],eax
  41a27e:	sbb    al,0xa3
  41a280:	popf   
  41a281:	call   0x408cd09c
  41a286:	enter  0x2e33,0xa5
  41a28a:	inc    esi
  41a28b:	test   BYTE PTR [ebx-0x31],bl
  41a28e:	into   
  41a28f:	cdq    
  41a290:	xor    eax,0x5308973c
  41a295:	stos   DWORD PTR es:[edi],eax
  41a296:	loop   0x41a2c4
  41a298:	inc    ecx
  41a299:	scas   al,BYTE PTR es:[edi]
  41a29a:	test   BYTE PTR [ecx+0x1d],bl
  41a29d:	pop    esp
  41a29e:	xchg   esi,eax
  41a29f:	ret    
  41a2a0:	or     eax,0x8b220bd5
  41a2a5:	ss leave 
  41a2a7:	jb     0x41a27a
  41a2a9:	sub    al,0xf9
  41a2ab:	mov    ecx,0xe2267540
  41a2b0:	stc    
  41a2b1:	lahf   
  41a2b2:	sahf   
  41a2b3:	aas    
  41a2b4:	push   cs
  41a2b5:	push   esi
  41a2b6:	pusha  
  41a2b7:	and    DWORD PTR [ebx+0x163268a2],eax
  41a2bd:	fiadd  DWORD PTR [edx+0x7765ea05]
  41a2c3:	fcomp  QWORD PTR [ebx-0xe]
  41a2c6:	mov    ecx,0x7fb01a52
  41a2cb:	mov    bl,0xd
  41a2cd:	leave  
  41a2ce:	mov    dl,0x83
  41a2d0:	sub    BYTE PTR [edi],0xcd
  41a2d3:	cdq    
  41a2d4:	cli    
  41a2d5:	dec    eax
  41a2d6:	xchg   BYTE PTR [edi],dl
  41a2d8:	sub    eax,0x2c37b387
  41a2dd:	jl     0x41a33d
  41a2df:	enter  0xa710,0xd1
  41a2e3:	push   esp
  41a2e4:	xchg   ebx,eax
  41a2e5:	daa    
  41a2e6:	retf   
  41a2e7:	iret   
  41a2e8:	pop    eax
  41a2e9:	pandn  mm1,QWORD PTR [ecx]
  41a2ec:	sbb    DWORD PTR [edx+0x7dfb2e5b],ecx
  41a2f2:	in     al,0xfe
  41a2f4:	jnp    0x41a355
  41a2f6:	out    0xd3,al
  41a2f8:	jge    0x41a2fd
  41a2fa:	sub    al,cl
  41a2fc:	loop   0x41a2ef
  41a2fe:	xchg   ecx,eax
  41a2ff:	imul   DWORD PTR [esi-0x56]
  41a302:	pushw  0xff9a
  41a305:	xor    eax,0xb996be14
  41a30a:	pop    esi
  41a30b:	xchg   edx,eax
  41a30c:	or     BYTE PTR [eax+0x561f291b],al
  41a312:	dec    ebx
  41a313:	xor    al,ah
  41a315:	dec    edi
  41a316:	(bad)  
  41a318:	dec    eax
  41a319:	mov    eax,?
  41a31b:	retf   
  41a31c:	add    eax,0xc5efbfb4
  41a321:	jo     0x41a2f7
  41a323:	(bad)  
  41a324:	fisub  WORD PTR [ebp+eax*2+0x3e]
  41a328:	pop    esi
  41a329:	sahf   
  41a32a:	add    al,0xf1
  41a32c:	cmp    eax,0xee75f4ef
  41a331:	jbe    0x41a2fa
  41a333:	ja     0x41a332
  41a335:	int3   
  41a336:	mov    ecx,0x37bc9459
  41a33b:	or     eax,0xe673aa39
  41a340:	pop    ebx
  41a341:	sub    al,0xbc
  41a343:	add    al,0xad
  41a345:	pop    esi
  41a346:	sub    DWORD PTR [ebp-0x4cc8786d],ebx
  41a34c:	test   eax,ebp
  41a34e:	xchg   ebp,eax
  41a34f:	mov    al,0x59
  41a351:	fcomp  st(7)
  41a353:	add    BYTE PTR [ebx],bl
  41a355:	and    eax,0x9ced8be9
  41a35a:	rcl    BYTE PTR [ebx],1
  41a35c:	ret    
  41a35d:	pop    ebp
  41a35e:	imul   ecx,DWORD PTR [ebx],0xffffffc3
  41a361:	std    
  41a362:	ret    0xb4f7
  41a365:	aad    0x57
  41a367:	pop    eax
  41a368:	xchg   esi,eax
  41a369:	mov    dl,0xb9
  41a36b:	stc    
  41a36c:	adc    al,0x92
  41a36e:	cdq    
  41a36f:	sub    DWORD PTR [edx-0x10],esi
  41a372:	mov    dl,0x6a
  41a374:	sbb    al,0x5c
  41a376:	mov    DWORD PTR [eax-0x764c7317],esi
  41a37c:	shl    DWORD PTR [ecx+0x29583e3d],cl
  41a382:	push   es
  41a383:	(bad)  
  41a384:	enter  0xb82d,0xc0
  41a388:	xor    eax,0xd60ac815
  41a38d:	call   0xe2c0843c
  41a392:	addr16 loop 0x41a354
  41a395:	js     0x41a335
  41a397:	sbb    eax,edx
  41a399:	js     0x41a40b
  41a39b:	inc    esp
  41a39c:	adc    eax,0x6a49a1b3
  41a3a1:	sbb    BYTE PTR [edx],bl
  41a3a3:	adc    DWORD PTR [ecx],eax
  41a3a5:	jns    0x41a367
  41a3a7:	mov    esp,0x250acb6d
  41a3ac:	inc    eax
  41a3ad:	inc    edx
  41a3ae:	sub    eax,0xdd3e2d22
  41a3b3:	sbb    BYTE PTR [edx-0x72516993],bl
  41a3b9:	pop    es
  41a3ba:	mov    bl,0x90
  41a3bc:	sbb    dh,BYTE PTR gs:[eax-0x76]
  41a3c0:	inc    eax
  41a3c1:	sbb    eax,0x7a6c47f3
  41a3c6:	pop    edx
  41a3c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a3c8:	mov    edx,0x42e92160
  41a3cd:	xor    DWORD PTR [eax],eax
  41a3cf:	or     al,cl
  41a3d1:	cld    
  41a3d2:	pop    ebp
  41a3d3:	lock ins DWORD PTR es:[edi],dx
  41a3d5:	jmp    0x45a9:0x76cb6eef
  41a3dc:	mov    dl,0x1b
  41a3de:	xor    eax,ebx
  41a3e0:	je     0x41a39f
  41a3e2:	mov    WORD PTR [ebx-0x7be213e4],fs
  41a3e8:	ins    DWORD PTR es:[edi],dx
  41a3e9:	mov    ch,BYTE PTR gs:[ebp+0x51]
  41a3ed:	mov    ecx,0x6402be3a
  41a3f2:	mov    ds:0x51c33bec,al
  41a3f7:	fidivr DWORD PTR [ebx]
  41a3f9:	fnstcw WORD PTR [esi]
  41a3fb:	mov    dl,dl
  41a3fd:	mov    ss,edi
  41a3ff:	push   ecx
  41a400:	jg     0x41a3b8
  41a402:	xor    ecx,ebx
  41a404:	dec    edi
  41a405:	icebp  
  41a406:	clc    
  41a407:	sahf   
  41a408:	jge    0x41a461
  41a40a:	in     eax,dx
  41a40b:	cdq    
  41a40c:	pop    ebp
  41a40d:	icebp  
  41a40e:	in     al,0x6e
  41a410:	out    dx,eax
  41a411:	mov    cl,0x38
  41a413:	mov    esi,0x1ee34e31
  41a418:	pop    edx
  41a419:	xor    BYTE PTR [ebx+0x6f929b01],dh
  41a41f:	stc    
  41a420:	in     al,0xb5
  41a422:	push   cs
  41a423:	pop    ecx
  41a424:	pop    ss
  41a425:	clc    
  41a426:	adc    BYTE PTR [edx+0x219eed44],0xf1
  41a42d:	pop    ebp
  41a42e:	push   edi
  41a42f:	adc    BYTE PTR [eax+0x136050a8],bl
  41a435:	xchg   esi,eax
  41a436:	jl     0x41a4a7
  41a438:	adc    al,0xe0
  41a43a:	push   edx
  41a43b:	(bad)  
  41a43c:	xchg   esi,eax
  41a43d:	sbb    cl,cl
  41a43f:	sbb    edx,DWORD PTR [edi+ecx*4]
  41a442:	pop    eax
  41a443:	pop    esi
  41a444:	pop    ds
  41a445:	inc    ecx
  41a446:	fucomi st,st(7)
  41a448:	or     al,0x2a
  41a44a:	dec    esp
  41a44b:	cmp    DWORD PTR [ebp+0x2b],ebp
  41a44e:	dec    ecx
  41a44f:	ret    
  41a450:	outs   dx,BYTE PTR ds:[esi]
  41a451:	ins    DWORD PTR es:[edi],dx
  41a452:	xchg   edi,eax
  41a453:	ins    BYTE PTR es:[edi],dx
  41a454:	int3   
  41a455:	ins    DWORD PTR es:[edi],dx
  41a456:	xchg   esi,eax
  41a457:	push   esp
  41a458:	adc    al,0x21
  41a45a:	rcl    DWORD PTR [edi+0x35],1
  41a45d:	data16 or BYTE PTR ds:0x4cb94cfb,al
  41a464:	(bad)  
  41a465:	xor    dh,BYTE PTR [edx]
  41a467:	popa   
  41a468:	and    eax,0xca974ed1
  41a46d:	not    eax
  41a46f:	sbb    dl,bh
  41a471:	or     esi,DWORD PTR [ecx+0x1a895385]
  41a477:	lds    ecx,FWORD PTR [eax]
  41a479:	lea    ebx,[eax-0x58606272]
  41a47f:	(bad)  
  41a480:	dec    edi
  41a481:	jae    0x41a480
  41a483:	dec    eax
  41a484:	and    bl,ch
  41a486:	and    cl,ah
  41a488:	push   ds
  41a489:	add    BYTE PTR [ebx],0x90
  41a48c:	pop    dx
  41a48e:	push   0x46c56809
  41a493:	ds dec edi
  41a495:	inc    ebx
  41a496:	xlat   BYTE PTR ds:[ebx]
  41a497:	in     eax,0x27
  41a499:	inc    DWORD PTR [esi-0x7b609dff]
  41a49f:	lahf   
  41a4a0:	jg     0x41a4da
  41a4a2:	jne    0x41a477
  41a4a4:	lea    esi,[ebx]
  41a4a6:	rol    DWORD PTR [edi],0x52
  41a4a9:	add    edx,esi
  41a4ab:	retf   0xbc09
  41a4ae:	pop    edi
  41a4af:	mov    al,ds:0x1bdf0f4f
  41a4b4:	cs enter 0xd14f,0x79
  41a4b9:	nop
  41a4ba:	stc    
  41a4bb:	adc    eax,0xef7b180c
  41a4c0:	ins    BYTE PTR es:[edi],dx
  41a4c1:	repnz (bad)
  41a4c4:	sub    DWORD PTR [edx-0x3d66d7cc],edi
  41a4ca:	sub    BYTE PTR [esp+ebp*2-0x1d],0x5e
  41a4cf:	test   al,0x5b
  41a4d1:	pop    esp
  41a4d2:	sbb    al,0xaa
  41a4d4:	pop    ss
  41a4d5:	inc    edx
  41a4d6:	push   ebp
  41a4d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a4d8:	mov    ds:0x25cc6e,al
  41a4dd:	dec    ecx
  41a4de:	ret    
  41a4df:	jl     0x41a4df
  41a4e1:	jmp    0xfefefd0b
  41a4e6:	or     BYTE PTR [ebx-0x33cc8835],ah
  41a4ec:	and    eax,DWORD PTR [eax]
  41a4ee:	dec    eax
  41a4ef:	cld    
  41a4f0:	jg     0x41a55a
  41a4f2:	push   edx
  41a4f3:	push   eax
  41a4f4:	or     esi,ecx
  41a4f6:	add    al,0xe9
  41a4f8:	and    eax,0xc1303639
  41a4fd:	stc    
  41a4fe:	lock ja 0x41a57a
  41a501:	outs   dx,DWORD PTR ds:[esi]
  41a502:	mov    bh,0x72
  41a504:	inc    ebp
  41a505:	sub    DWORD PTR [edi+ebx*8+0x60f71d69],edi
  41a50c:	add    BYTE PTR [eax+0x31],al
  41a50f:	pop    ebx
  41a510:	mov    ds:0x819d5249,eax
  41a515:	popa   
  41a516:	pop    ss
  41a517:	push   ss
  41a518:	iret   
  41a519:	push   ebx
  41a51a:	sbb    DWORD PTR ds:0xe1394637,0xe754f1fa
  41a524:	adc    DWORD PTR [esi+0x5c9befb5],esi
  41a52a:	push   es
  41a52b:	pop    ebp
  41a52c:	or     edi,DWORD PTR [edi-0x2deafe55]
  41a532:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a533:	mov    esi,0xc728f113
  41a538:	and    DWORD PTR [edx],esp
  41a53a:	shl    DWORD PTR ds:0xfeef3d9b,1
  41a540:	mov    ebx,0xf672bd83
  41a545:	inc    ebp
  41a546:	add    al,0x6a
  41a548:	std    
  41a549:	cmp    al,0x95
  41a54b:	inc    edx
  41a54c:	jp     0x41a5b4
  41a54e:	aam    0xb2
  41a550:	out    dx,eax
  41a551:	shl    BYTE PTR [eax-0x5ba7088a],0x91
  41a558:	dec    ecx
  41a559:	lds    eax,FWORD PTR [esi-0xd]
  41a55c:	(bad)  
  41a55d:	lahf   
  41a55e:	test   DWORD PTR [ecx-0x5ea92521],ecx
  41a564:	cmp    al,0xde
  41a566:	ror    ecx,cl
  41a568:	jecxz  0x41a583
  41a56a:	jb     0x41a57c
  41a56c:	ja     0x41a548
  41a56e:	into   
  41a56f:	jge    0x41a544
  41a571:	xchg   ebp,eax
  41a572:	fadd   QWORD PTR [esi+edx*4-0x7a]
  41a576:	adc    BYTE PTR [ecx+0x44],cl
  41a579:	test   al,0xac
  41a57b:	jbe    0x41a534
  41a57d:	xor    dh,cl
  41a57f:	(bad)  
  41a580:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a581:	bound  ebx,QWORD PTR [ebx-0x34128f8b]
  41a587:	add    DWORD PTR [ecx+0x5e],edx
  41a58a:	ud1    edx,DWORD PTR [edx]
  41a58d:	shl    BYTE PTR [eax-0x6d3bf692],cl
  41a593:	jmp    0x370e805c
  41a598:	mov    ds:0xb648a456,eax
  41a59d:	inc    ecx
  41a59e:	call   0xa4bf482c
  41a5a3:	jmp    0x2402:0x1e598635
  41a5aa:	in     eax,dx
  41a5ab:	test   eax,0xee460afd
  41a5b0:	adc    eax,0xeb756eb6
  41a5b5:	mov    cl,0xb6
  41a5b7:	mov    ds:0x9ddcfd06,al
  41a5bc:	aas    
  41a5bd:	(bad)  
  41a5be:	jo     0x41a564
  41a5c0:	push   edi
  41a5c1:	xlat   BYTE PTR ds:[ebx]
  41a5c2:	lahf   
  41a5c3:	pop    eax
  41a5c4:	push   edi
  41a5c5:	add    al,0xff
  41a5c7:	int3   
  41a5c8:	enter  0xf716,0x15
  41a5cc:	mov    bl,0x6f
  41a5ce:	mov    edx,0x70661e6d
  41a5d3:	(bad)
  41a5d7:	ins    BYTE PTR es:[edi],dx
  41a5d8:	mov    ds:0x141eacf7,eax
  41a5de:	lods   eax,DWORD PTR ds:[esi]
  41a5df:	fadd   st(6),st
  41a5e1:	retfw  
  41a5e3:	xor    ebp,0x78
  41a5e6:	loop   0x41a5e2
  41a5e8:	ret    
  41a5e9:	fcomp  QWORD PTR [eax]
  41a5eb:	adc    esi,0x1a
  41a5ee:	cmp    eax,0x879c64e
  41a5f3:	pop    ebx
  41a5f4:	sbb    BYTE PTR ds:0xc59bc62f,dl
  41a5fa:	ds inc ebp
  41a5fc:	dec    edx
  41a5fd:	add    esi,DWORD PTR [ecx]
  41a5ff:	das    
  41a600:	inc    edx
  41a601:	xchg   ebx,eax
  41a602:	js     0x41a681
  41a604:	sti    
  41a605:	or     bl,BYTE PTR [edx+edi*4+0x35878356]
  41a60c:	push   0x6d
  41a60e:	enter  0x2e8e,0xf6
  41a612:	xchg   edx,eax
  41a613:	ret    
  41a614:	sahf   
  41a615:	in     al,0xb5
  41a617:	sub    ch,al
  41a619:	std    
  41a61a:	test   eax,0x7e592e28
  41a61f:	push   0x5146a067
  41a624:	sbb    DWORD PTR [edi-0x19],edx
  41a627:	add    BYTE PTR [ecx*2+0x17468d48],bh
  41a62e:	fwait
  41a62f:	out    dx,eax
  41a630:	push   0xd62a0992
  41a635:	cmp    bl,cl
  41a637:	shl    cl,0x6f
  41a63a:	or     eax,0xa92cf825
  41a63f:	and    DWORD PTR [ebp-0x1d],ebx
  41a642:	mov    WORD PTR [ebp-0x17],ss
  41a645:	xor    ah,BYTE PTR [ebp+0x29]
  41a648:	shl    BYTE PTR [esi+edx*1],cl
  41a64b:	cbw    
  41a64d:	xchg   esp,eax
  41a64e:	inc    ecx
  41a64f:	mov    ebp,0x7c592418
  41a654:	(bad)  
  41a655:	lock mov cl,0x39
  41a658:	stos   DWORD PTR es:[edi],eax
  41a659:	data16 xor dl,BYTE PTR [edi]
  41a65c:	and    BYTE PTR [edi+0x51],bh
  41a65f:	loop   0x41a69a
  41a661:	leave  
  41a662:	mov    bh,BYTE PTR [edi]
  41a664:	(bad)  
  41a665:	xor    DWORD PTR [ebx-0x6c],ecx
  41a668:	cs jp  0x41a661
  41a66b:	pop    ebx
  41a66c:	push   ss
  41a66d:	dec    esp
  41a66e:	daa    
  41a66f:	add    eax,0xf89e935a
  41a674:	xor    al,0x8a
  41a676:	pop    edi
  41a677:	xchg   ebp,eax
  41a678:	test   eax,0x4c3e3dae
  41a67d:	loopne 0x41a6a8
  41a67f:	jno    0x41a6b0
  41a681:	sub    esp,esi
  41a683:	lock cs mov esp,0x4b53c7c6
  41a68a:	leave  
  41a68b:	pop    esp
  41a68c:	mov    WORD PTR [ebp+0x484a66b9],es
  41a692:	dec    eax
  41a693:	jp     0x41a6e8
  41a695:	iret   
  41a696:	mov    ecx,0xa01bc393
  41a69b:	mov    cl,0xef
  41a69d:	fcmovnbe st,st(0)
  41a69f:	test   BYTE PTR [esi],cl
  41a6a1:	fistp  DWORD PTR [edi-0x3c]
  41a6a4:	pop    esp
  41a6a5:	outs   dx,DWORD PTR ds:[esi]
  41a6a6:	fcomp  QWORD PTR [eax-0x1c]
  41a6a9:	sub    al,0x43
  41a6ab:	cmp    eax,0x8ebcbeef
  41a6b0:	bound  esi,QWORD PTR [ebp+edx*4+0x7c086446]
  41a6b7:	test   al,0xf0
  41a6b9:	pop    ebx
  41a6ba:	in     eax,0xb9
  41a6bc:	(bad)  
  41a6be:	xchg   edi,eax
  41a6bf:	xchg   BYTE PTR [esi+0x6d29bb66],bh
  41a6c5:	ret    0xefe3
  41a6c8:	sbb    dl,BYTE PTR [edi-0xf]
  41a6cb:	jg     0x41a68b
  41a6cd:	cmp    al,0xe4
  41a6cf:	in     eax,0x98
  41a6d1:	cli    
  41a6d2:	ins    BYTE PTR es:[edi],dx
  41a6d3:	pop    ebx
  41a6d4:	fwait
  41a6d5:	mov    dh,BYTE PTR [edi+0x32]
  41a6d8:	push   DWORD PTR es:[esi]
  41a6db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a6dc:	pop    esp
  41a6dd:	pop    edi
  41a6de:	push   esp
  41a6df:	sahf   
  41a6e0:	scas   eax,DWORD PTR es:[edi]
  41a6e1:	in     eax,dx
  41a6e2:	pop    ecx
  41a6e3:	jmp    0x41415681
  41a6e8:	fadd   DWORD PTR [ecx+0x2a]
  41a6eb:	add    ebx,eax
  41a6ed:	mov    cl,0xdf
  41a6ef:	stc    
  41a6f0:	dec    edx
  41a6f2:	or     DWORD PTR [eax+0x31],edi
  41a6f5:	jmp    0x41a738
  41a6f7:	retf   
  41a6f8:	cdq    
  41a6f9:	cwde   
  41a6fa:	xchg   edx,eax
  41a6fb:	pop    eax
  41a6fc:	push   ds
  41a6fd:	shr    BYTE PTR [eax+ebx*2-0x77],1
  41a701:	sub    ecx,DWORD PTR [eax-0x54703a4d]
  41a707:	aaa    
  41a708:	popa   
  41a709:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a70a:	sbb    eax,0x24910d92
  41a70f:	inc    edi
  41a710:	inc    eax
  41a711:	xchg   BYTE PTR [esi+0x4a],ah
  41a714:	(bad)  
  41a715:	mov    eax,0x711a7aec
  41a71a:	sbb    cl,ch
  41a71c:	shr    ah,1
  41a71e:	sbb    al,0x7
  41a720:	add    DWORD PTR [eax-0x6b],eax
  41a723:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a724:	inc    esi
  41a725:	pop    ds
  41a726:	sbb    al,0x40
  41a728:	(bad)  
  41a729:	push   edx
  41a72a:	leave  
  41a72b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a72c:	sbb    eax,0xf33e2556
  41a731:	nop
  41a732:	xchg   BYTE PTR [esi-0x76],ah
  41a735:	jns    0x41a7a1
  41a737:	jnp    0x41a6d2
  41a739:	jae    0x41a706
  41a73b:	cmp    dl,bh
  41a73d:	ins    BYTE PTR es:[edi],dx
  41a73e:	movsx  edx,WORD PTR [esi+0x2b]
  41a742:	jp     0x41a6ce
  41a744:	sahf   
  41a745:	aad    0xd4
  41a747:	jne    0x41a71e
  41a749:	test   BYTE PTR [ecx],0x8a
  41a74c:	cs pusha 
  41a74e:	sbb    al,0x36
  41a750:	mov    bh,ah
  41a752:	test   al,0xd
  41a754:	xchg   esp,eax
  41a755:	test   al,0xc9
  41a757:	jbe    0x41a733
  41a759:	or     BYTE PTR [esi+0x63392338],0x15
  41a760:	or     edx,edx
  41a762:	mov    ebx,0xf9b68e1a
  41a767:	jbe    0x41a7c7
  41a769:	push   eax
  41a76a:	call   0xc338b54c
  41a76f:	aas    
  41a770:	mov    eax,0x8096fb96
  41a775:	inc    ebp
  41a776:	ja     0x41a7ed
  41a778:	inc    edx
  41a779:	sbb    dl,BYTE PTR [ecx+ebp*2]
  41a77c:	dec    ecx
  41a77d:	repz mov esi,0x5529012b
  41a783:	arpl   WORD PTR [eax-0x1365e7ca],si
  41a789:	addr16 dec esi
  41a78b:	(bad)  [ebx+0x41]
  41a78e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a78f:	std    
  41a790:	test   eax,0xd46c8b36
  41a795:	or     ebx,ebp
  41a797:	cmp    al,0x75
  41a799:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a79a:	rcl    DWORD PTR [ebx-0xb659af],cl
  41a7a0:	push   esp
  41a7a1:	sbb    DWORD PTR [edx+0x5074de62],0xffffffb8
  41a7a8:	jmp    0x3eb5:0xf30afbb1
  41a7af:	xor    eax,0x67442593
  41a7b4:	(bad)  
  41a7b6:	mov    ds:0x44cf25f4,eax
  41a7bb:	xchg   ebx,eax
  41a7bc:	pop    ss
  41a7bd:	mov    dh,BYTE PTR [ebx-0x24e96166]
  41a7c3:	retf   
  41a7c4:	mov    eax,0x3d58bfe1
  41a7c9:	test   eax,0x9dd411d9
  41a7ce:	add    DWORD PTR [eax],0x23
  41a7d1:	dec    edi
  41a7d2:	mov    ch,0xf2
  41a7d4:	aaa    
  41a7d5:	push   0x25
  41a7d7:	not    BYTE PTR [ebp+0x77f0e7cd]
  41a7dd:	scas   eax,DWORD PTR es:[edi]
  41a7de:	inc    edx
  41a7df:	jmp    0xad83:0x4f6f95ab
  41a7e6:	xor    eax,esp
  41a7e8:	ret    
  41a7e9:	fwait
  41a7ea:	pop    esp
  41a7eb:	ins    DWORD PTR es:[edi],dx
  41a7ec:	pop    ss
  41a7ed:	and    edi,DWORD PTR [ebp-0x2ad6d7f1]
  41a7f3:	cmp    edx,DWORD PTR [edi-0x21b76036]
  41a7f9:	jnp    0x41a7f4
  41a7fb:	jns    0x41a820
  41a7fd:	inc    esi
  41a7fe:	cmp    ah,BYTE PTR [edx]
  41a800:	mov    ds:0xc681a02c,al
  41a805:	jns    0x41a841
  41a807:	adc    bl,BYTE PTR [ecx+0x45]
  41a80a:	sub    ah,ah
  41a80c:	pop    edx
  41a80d:	sbb    BYTE PTR [esi+0x3e],bh
  41a810:	push   es
  41a811:	mov    BYTE PTR [esi],dl
  41a813:	push   0xffffff99
  41a815:	dec    DWORD PTR [edx+0x49fc9737]
  41a81b:	rol    DWORD PTR [ebx+0x7b],0x7a
  41a81f:	push   cs
  41a820:	adc    DWORD PTR [esi+0x2e],eax
  41a823:	aaa    
  41a824:	adc    ebp,DWORD PTR [esi+ebx*1-0x5a]
  41a828:	or     DWORD PTR [edi],0xeb83f035
  41a82e:	push   0x1c
  41a830:	leave  
  41a831:	inc    edx
  41a832:	lds    esp,FWORD PTR [edx-0x5848cf97]
  41a838:	call   0xf82c13d8
  41a83d:	mov    ds:0xde7fcb9a,al
  41a842:	aaa    
  41a843:	push   edi
  41a844:	jne    0x41a8b1
  41a846:	not    DWORD PTR [ebx-0x4f]
  41a849:	lods   eax,DWORD PTR ds:[esi]
  41a84a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a84b:	sar    DWORD PTR [edi-0x30121667],cl
  41a851:	int    0x6e
  41a853:	push   ds
  41a854:	xor    eax,0xceed9684
  41a859:	pop    eax
  41a85a:	aaa    
  41a85b:	mov    ebx,0x44009b6e
  41a860:	push   es
  41a861:	push   es
  41a862:	lock ds aad 0x13
  41a866:	or     al,0x93
  41a868:	bound  ecx,QWORD PTR [edi+0x67ae9a26]
  41a86e:	mov    ch,BYTE PTR [esi+0x1e79d9f]
  41a874:	call   FWORD PTR [ebx+0x64]
  41a877:	push   ds
  41a878:	je     0x41a8b4
  41a87a:	ja     0x41a825
  41a87c:	clc    
  41a87d:	call   0xb476466e
  41a882:	mov    eax,0xbd14f238
  41a887:	jmp    0xf26d:0x896c8d0f
  41a88e:	cmp    esp,DWORD PTR [eax+0x27]
  41a891:	lea    edi,[ebp-0x599da204]
  41a897:	xchg   esp,eax
  41a898:	dec    ecx
  41a899:	(bad)  
  41a89a:	nop
  41a89b:	ffree  st(7)
  41a89d:	or     ebx,DWORD PTR [edx+0x158a0aaf]
  41a8a3:	scas   eax,DWORD PTR es:[edi]
  41a8a4:	mov    fs,WORD PTR [eax+eax*8+0x10b6539a]
  41a8ab:	nop
  41a8ac:	mov    esp,0xfc7c6d19
  41a8b1:	rcr    DWORD PTR [eax+0x7043d7d7],0x8d
  41a8b8:	pusha  
  41a8b9:	sub    esi,esi
  41a8bb:	stc    
  41a8bc:	je     0x41a8c1
  41a8be:	popf   
  41a8bf:	sub    DWORD PTR [eax-0x2b668dbe],esi
  41a8c5:	cmp    DWORD PTR [edi+0x589e8de3],0xffffff96
  41a8cc:	ja     0x41a8c9
  41a8ce:	inc    BYTE PTR [edx]
  41a8d0:	mov    cl,0xe1
  41a8d2:	call   0xaf7:0xe9296fb5
  41a8d9:	and    BYTE PTR [ebx+0x20d4fa25],bh
  41a8df:	retf   
  41a8e0:	xchg   ebp,eax
  41a8e1:	shl    dh,1
  41a8e3:	push   ss
  41a8e4:	aad    0xac
  41a8e6:	jne    0x41a94e
  41a8e8:	add    eax,0x74cdb833
  41a8ed:	aaa    
  41a8ee:	jecxz  0x41a93f
  41a8f0:	cmp    eax,0x955c087c
  41a8f5:	pusha  
  41a8f6:	das    
  41a8f7:	or     eax,0xa97192e9
  41a8fc:	mov    cl,BYTE PTR [ebx]
  41a8fe:	out    dx,eax
  41a8ff:	jmp    0x41a89b
  41a901:	shl    DWORD PTR [esi-0x5a],cl
  41a904:	fld    QWORD PTR [ebx]
  41a906:	and    edx,DWORD PTR [esi+0x607c673f]
  41a90c:	push   esi
  41a90d:	pop    ebp
  41a90e:	mov    ebx,0x6ca9ec92
  41a913:	pop    esp
  41a914:	jnp    0x41a90d
  41a916:	xchg   BYTE PTR [ebx+0x32f442cf],dh
  41a91c:	div    bl
  41a91e:	lods   eax,DWORD PTR ds:[esi]
  41a91f:	pop    ebp
  41a920:	lock adc BYTE PTR [eax],dh
  41a923:	sahf   
  41a924:	stc    
  41a925:	nop
  41a926:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a927:	cdq    
  41a928:	stc    
  41a929:	xor    dh,BYTE PTR [edi]
  41a92b:	test   eax,0xff86a31c
  41a930:	pop    esi
  41a931:	mov    edi,0x251555d0
  41a936:	dec    ebp
  41a937:	and    eax,0xfff848f9
  41a93c:	cmp    BYTE PTR [esi+0x2],dl
  41a93f:	outs   dx,BYTE PTR ds:[esi]
  41a940:	inc    eax
  41a941:	add    al,BYTE PTR es:[ebp+0x4ffdbcc9]
  41a948:	inc    ecx
  41a949:	and    DWORD PTR [ecx-0x39],ecx
  41a94c:	mov    DWORD PTR [eax+0x6f],edi
  41a94f:	jmp    0xc8620ecb
  41a954:	mov    dl,0x5c
  41a956:	popf   
  41a957:	inc    ecx
  41a958:	push   ecx
  41a959:	mov    dh,0x9e
  41a95b:	mov    WORD PTR [edx+ebp*2],cs
  41a95e:	pusha  
  41a95f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a960:	sbb    eax,0x9a6ff78a
  41a965:	frstor [ecx-0x3dd2cd8]
  41a96b:	out    dx,eax
  41a96c:	retf   0x50f7
  41a96f:	int    0x4a
  41a971:	daa    
  41a972:	and    eax,DWORD PTR [ecx-0x415affa5]
  41a978:	sub    al,BYTE PTR [ebx-0x4e797bb0]
  41a97e:	xchg   edx,eax
  41a97f:	rcr    BYTE PTR [ebx-0x7],0x11
  41a983:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a984:	xor    eax,0xa66ef756
  41a989:	std    
  41a98a:	(bad)  
  41a98b:	sahf   
  41a98c:	push   esi
  41a98d:	in     eax,0x71
  41a98f:	fsub   st,st(4)
  41a991:	gs retf 
  41a993:	pop    edi
  41a994:	arpl   WORD PTR [ecx],cx
  41a996:	adc    al,0x91
  41a998:	mov    ch,0x8d
  41a99a:	cmp    al,0x14
  41a99c:	adc    al,0x67
  41a99e:	rcl    edi,1
  41a9a0:	mov    edx,0xc8235fcc
  41a9a5:	add    ebx,DWORD PTR [eax+0x2a0b287d]
  41a9ab:	jle    0x41a9f3
  41a9ad:	mov    esp,0x7ed092bc
  41a9b2:	fs std 
  41a9b4:	cmp    eax,0xd536b1ba
  41a9b9:	and    eax,0xb1fa5eaf
  41a9be:	xchg   esp,eax
  41a9bf:	and    DWORD PTR [esi-0x36318c6b],esi
  41a9c5:	mov    DWORD PTR [edi+0x67],esp
  41a9c8:	cmp    cl,ah
  41a9ca:	lods   al,BYTE PTR ds:[esi]
  41a9cb:	(bad)  
  41a9cc:	out    0x9a,eax
  41a9ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a9cf:	xchg   ecx,eax
  41a9d0:	out    dx,eax
  41a9d1:	popf   
  41a9d2:	and    al,BYTE PTR [ebx]
  41a9d4:	repnz mov bl,0x39
  41a9d7:	(bad)  
  41a9d9:	push   es
  41a9da:	push   esi
  41a9db:	outs   dx,DWORD PTR ds:[esi]
  41a9dc:	lea    ebx,[ecx+ecx*1]
  41a9df:	push   edi
  41a9e0:	(bad)  
  41a9e1:	lahf   
  41a9e2:	popf   
  41a9e3:	sbb    al,0xaf
  41a9e5:	lahf   
  41a9e6:	pop    es
  41a9e7:	js     0x41a971
  41a9e9:	mov    eax,ds:0x51558dbd
  41a9ee:	cld    
  41a9ef:	mov    eax,ds:0xefaf8787
  41a9f4:	rol    DWORD PTR [ebx-0x3b],0x7f
  41a9f8:	pop    ss
  41a9f9:	xor    eax,DWORD PTR [edi+eax*8]
  41a9fc:	ret    
  41a9fd:	xor    eax,0xb349c596
  41aa02:	mov    ebp,DWORD PTR [ecx+0x2f9a617b]
  41aa08:	popa   
  41aa09:	scas   al,BYTE PTR es:[edi]
  41aa0a:	fsub   st,st(0)
  41aa0c:	cmp    dh,cl
  41aa0e:	mov    BYTE PTR [edx+ebp*1+0x79],ah
  41aa12:	je     0x41aa4a
  41aa14:	nop
  41aa15:	mov    esp,0xe277da8e
  41aa1a:	cmp    dh,BYTE PTR [ecx-0x6c0c56d6]
  41aa20:	xor    BYTE PTR [esi-0x72],bl
  41aa23:	dec    ch
  41aa25:	sbb    cl,BYTE PTR [edi-0x39f6fbb7]
  41aa2b:	mov    bh,0xb8
  41aa2d:	test   eax,0x3d57e6d
  41aa32:	popa   
  41aa33:	sahf   
  41aa34:	stc    
  41aa35:	in     eax,dx
  41aa36:	aas    
  41aa37:	in     eax,0x50
  41aa39:	mov    es,WORD PTR [ebx-0x1a]
  41aa3c:	jp     0x41aa90
  41aa3e:	je     0x41aa7d
  41aa40:	sbb    DWORD PTR [ecx+0x13e80ba3],0xfffffff8
  41aa47:	scas   al,BYTE PTR es:[edi]
  41aa48:	iret   
  41aa49:	lods   eax,DWORD PTR ds:[esi]
  41aa4a:	xchg   ecx,eax
  41aa4b:	scas   al,BYTE PTR es:[edi]
  41aa4c:	lds    edx,FWORD PTR [ebp-0x55f73de5]
  41aa52:	std    
  41aa53:	dec    ebp
  41aa54:	adc    edi,ecx
  41aa56:	xor    eax,0xfdc3cfe4
  41aa5b:	push   cs
  41aa5c:	(bad)  
  41aa5d:	jp     0x41aac5
  41aa5f:	mov    edi,0x9767f321
  41aa64:	popa   
  41aa65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa66:	mov    ch,0xdc
  41aa68:	shr    BYTE PTR [eax],1
  41aa6a:	push   edx
  41aa6b:	(bad)
  41aa6e:	dec    esi
  41aa6f:	test   BYTE PTR [ebp-0x671e5595],al
  41aa75:	pop    ebx
  41aa76:	sub    DWORD PTR [edi-0x1],ebx
  41aa79:	aas    
  41aa7a:	rcr    BYTE PTR [ebx+ebp*8+0x7b],1
  41aa7e:	out    0xe1,al
  41aa80:	mov    dl,0xec
  41aa82:	and    esi,DWORD PTR [edi+0x4fa7ca2]
  41aa88:	xor    DWORD PTR [eax+ebx*8-0x50b3e826],esp
  41aa8f:	xchg   esi,eax
  41aa90:	js     0x41aa39
  41aa92:	iret   
  41aa93:	dec    ebp
  41aa94:	sub    DWORD PTR [eax],eax
  41aa96:	mov    ds:0xc9e80b4,eax
  41aa9b:	xor    al,0xe7
  41aa9d:	(bad)  
  41aa9e:	(bad)  
  41aa9f:	mov    dh,0x93
  41aaa1:	jmp    FWORD PTR [edi]
  41aaa3:	mov    ds:0x904d3557,al
  41aaa8:	pop    edx
  41aaa9:	xchg   ecx,eax
  41aaaa:	xchg   ebp,eax
  41aaab:	ret    
  41aaac:	sub    al,0x27
  41aaae:	mov    edx,edx
  41aab0:	mov    ah,0xc3
  41aab2:	out    0xf3,eax
  41aab4:	out    dx,eax
  41aab5:	xor    bh,BYTE PTR [edi-0x42a2ffc0]
  41aabb:	mov    esp,0x1d443ebb
  41aac0:	xchg   ebx,eax
  41aac1:	popf   
  41aac2:	mov    bl,0xc
  41aac4:	inc    ecx
  41aac5:	push   es
  41aac6:	dec    eax
  41aac7:	jne    0x41aa52
  41aac9:	inc    ebx
  41aaca:	mov    bl,0x49
  41aacc:	adc    cl,bh
  41aace:	nop
  41aacf:	add    eax,0xd2201de0
  41aad4:	sub    ebp,DWORD PTR [edx-0x3b]
  41aad7:	jg     0x41ab45
  41aad9:	movups XMMWORD PTR [esi+0x577fe5e2],xmm1
  41aae0:	or     al,0x95
  41aae3:	or     bl,BYTE PTR [edx]
  41aae5:	into   
  41aae6:	mov    ah,0xb6
  41aae8:	aaa    
  41aae9:	fdiv   DWORD PTR [ebx]
  41aaeb:	ins    DWORD PTR es:[edi],dx
  41aaec:	idiv   BYTE PTR [ecx]
  41aaee:	stos   BYTE PTR es:[edi],al
  41aaef:	pop    es
  41aaf0:	pop    esi
  41aaf1:	mov    ?,WORD PTR [ecx]
  41aaf3:	jp     0x41ab13
  41aaf5:	sub    DWORD PTR [edx-0x1a],ebx
  41aaf8:	pop    ebp
  41aaf9:	rcr    DWORD PTR [ebp-0x74be96c0],0xbb
  41ab00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab01:	xor    BYTE PTR [ebp+0x79],bh
  41ab04:	cwde   
  41ab05:	push   esi
  41ab06:	sti    
  41ab07:	aam    0x83
  41ab09:	in     al,0xf2
  41ab0b:	aam    0x9c
  41ab0d:	rcl    DWORD PTR [ebx-0x62],1
  41ab10:	adc    eax,0x37575ae7
  41ab15:	jo     0x41ab38
  41ab17:	xchg   esp,eax
  41ab18:	fs mov ecx,0x13d4c6d
  41ab1e:	push   esi
  41ab1f:	aas    
  41ab20:	jmp    0x4145:0xf962564a
  41ab27:	aaa    
  41ab28:	cmp    bh,BYTE PTR [edi-0x470538cb]
  41ab2e:	scas   al,BYTE PTR es:[edi]
  41ab2f:	not    ebp
  41ab31:	aam    0x46
  41ab33:	out    0x89,al
  41ab35:	xor    BYTE PTR [edx-0x10623f8a],0x88
  41ab3c:	nop
  41ab3d:	jb     0x41aad6
  41ab3f:	div    DWORD PTR [esi]
  41ab41:	lods   eax,DWORD PTR ds:[esi]
  41ab42:	mov    bh,0xa1
  41ab44:	repz and ebp,DWORD PTR [eax-0xa]
  41ab48:	push   ss
  41ab49:	adc    DWORD PTR [esi],0x7b
  41ab4c:	fsub   DWORD PTR [esi]
  41ab4e:	pusha  
  41ab4f:	sub    al,0xc1
  41ab51:	fist   DWORD PTR [esi-0x37]
  41ab54:	mov    edi,0x66e26a2
  41ab59:	push   0xcfa47e20
  41ab5e:	push   ecx
  41ab5f:	ins    BYTE PTR es:[edi],dx
  41ab60:	cdq    
  41ab61:	adc    eax,0x6f9b9f46
  41ab66:	imul   edi,esp,0xfffffff5
  41ab69:	jl     0x41aba0
  41ab6b:	jb     0x41ab0d
  41ab6d:	sbb    DWORD PTR [ebp-0x48],edx
  41ab70:	and    eax,0x5745773a
  41ab75:	xchg   dh,bl
  41ab77:	push   edi
  41ab78:	jns    0x41ab44
  41ab7a:	and    eax,0x830a5359
  41ab7f:	sbb    BYTE PTR [edi-0x791415e7],al
  41ab85:	jge    0x41ab80
  41ab87:	es jl  0x41ab87
  41ab8a:	mov    ds:0xccd6cdf0,al
  41ab8f:	aam    0x88
  41ab91:	sbb    DWORD PTR [esi+0x27],esp
  41ab94:	hlt    
  41ab95:	jge    0x41abcd
  41ab97:	js     0x41ab4c
  41ab99:	fcmovne st,st(7)
  41ab9b:	push   esi
  41ab9c:	ret    
  41ab9d:	add    al,0x78
  41ab9f:	mov    BYTE PTR [edx],0x17
  41aba2:	sub    al,0x4b
  41aba4:	push   es
  41aba5:	out    dx,eax
  41aba6:	js     0x41ab9b
  41aba8:	push   es
  41aba9:	mov    esp,0x747ecd5a
  41abae:	and    BYTE PTR [edx+0x6e],ch
  41abb1:	mov    edx,edx
  41abb3:	and    cl,BYTE PTR [ebx+0x65efbb4d]
  41abb9:	jl     0x41ac32
  41abbb:	and    DWORD PTR [edi+0x22601df2],edi
  41abc1:	jno    0x41abba
  41abc3:	ins    DWORD PTR es:[edi],dx
  41abc4:	gs pop esi
  41abc6:	jno    0x41ab5b
  41abc8:	repz jg 0x41abcf
  41abcb:	fabs   
  41abcd:	in     eax,dx
  41abce:	jno    0x41ac4e
  41abd0:	mov    DWORD PTR [eax+0x6481b89f],ebp
  41abd6:	mov    ecx,0x98064909
  41abdb:	ret    
  41abdc:	pop    ebp
  41abdd:	mov    ebp,0x529ab6f0
  41abe2:	ret    0x4d9a
  41abe5:	dec    ebx
  41abe6:	(bad)  
  41abe7:	arpl   WORD PTR [edx],di
  41abe9:	div    DWORD PTR [esp+ebx*8]
  41abec:	stos   DWORD PTR es:[edi],eax
  41abed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41abee:	xchg   ecx,eax
  41abef:	shl    DWORD PTR [edx-0x73],0x5d
  41abf3:	sbb    DWORD PTR [edi-0x4f7967d2],ecx
  41abf9:	inc    edi
  41abfa:	xchg   edi,eax
  41abfb:	pop    ss
  41abfc:	cmc    
  41abfd:	fld    TBYTE PTR ds:0x3602a4cc
  41ac03:	popf   
  41ac04:	xchg   BYTE PTR [eax-0x7e702de3],ch
  41ac0a:	inc    edx
  41ac0b:	push   0x74
  41ac0d:	out    dx,al
  41ac0e:	mov    ebx,0x36e039ff
  41ac13:	lea    edx,[ecx+0x6d]
  41ac16:	push   esi
  41ac17:	inc    esi
  41ac18:	enter  0xf862,0x46
  41ac1c:	jmp    0xdefc6d1f
  41ac21:	mov    ebp,0xf716d683
  41ac26:	mov    cl,0x3
  41ac28:	push   edx
  41ac29:	and    cl,BYTE PTR [esp+edi*1+0x758fcc2b]
  41ac30:	mov    ecx,0xcd59a967
  41ac35:	iret   
  41ac36:	outs   dx,DWORD PTR ds:[esi]
  41ac37:	pop    esi
  41ac38:	dec    esp
  41ac39:	rcl    DWORD PTR [edi+0x65],1
  41ac3c:	retf   0x4289
  41ac3f:	(bad)  
  41ac40:	jg     0x41ac28
  41ac42:	ficom  DWORD PTR [ecx]
  41ac44:	dec    ebx
  41ac45:	(bad)  
  41ac46:	jmp    0x41ac86
  41ac48:	xchg   BYTE PTR ds:0x17b1b67c,al
  41ac4e:	jl     0x41ac54
  41ac50:	inc    ebx
  41ac51:	adc    edi,DWORD PTR [ecx]
  41ac53:	call   0x8a63:0xea7c5b6b
  41ac5a:	adc    DWORD PTR [esi],edi
  41ac5c:	xchg   esp,eax
  41ac5d:	mov    BYTE PTR [ecx-0x3f],dl
  41ac60:	aad    0xb0
  41ac62:	lds    edx,FWORD PTR [eax]
  41ac64:	push   ebx
  41ac65:	jae    0x41ac5c
  41ac67:	fwait
  41ac68:	fwait
  41ac69:	mov    al,0xfd
  41ac6b:	pop    esi
  41ac6c:	loope  0x41aceb
  41ac6e:	icebp  
  41ac6f:	cwde   
  41ac70:	cmp    BYTE PTR [edi],bl
  41ac72:	das    
  41ac73:	and    ecx,DWORD PTR cs:[eax+0x39]
  41ac77:	mov    eax,ds:0xd060c5ec
  41ac7c:	outs   dx,BYTE PTR ds:[esi]
  41ac7d:	mov    ss,ebp
  41ac7f:	jecxz  0x41ac29
  41ac81:	jg     0x41ace1
  41ac83:	(bad)  
  41ac84:	mov    edi,0x164a9c7d
  41ac89:	(bad)  
  41ac8a:	into   
  41ac8b:	test   eax,0x2e035133
  41ac90:	ss sbb eax,0xccdb3a29
  41ac96:	ins    DWORD PTR es:[edi],dx
  41ac97:	cmp    esi,DWORD PTR [edi-0x5dcf4a5f]
  41ac9d:	add    DWORD PTR [ecx-0x20],0xffffffa4
  41aca1:	lock mov ah,0xed
  41aca4:	xchg   esp,eax
  41aca5:	mov    edi,0xeaf5a21c
  41acaa:	aaa    
  41acab:	pusha  
  41acac:	int3   
  41acad:	test   eax,0xb37b6eef
  41acb2:	and    DWORD PTR [edi],ebx
  41acb4:	mov    DWORD PTR cs:[ebx+0x3b],ecx
  41acb8:	std    
  41acb9:	(bad)  
  41acba:	les    esi,FWORD PTR [esi-0x13]
  41acbd:	cmp    al,0x15
  41acbf:	aad    0x2a
  41acc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41acc2:	out    dx,al
  41acc3:	rol    DWORD PTR [ebp+ebp*8+0x7a],1
  41acc7:	loope  0x41ac4c
  41acc9:	add    eax,0x4918b78b
  41acce:	(bad)  
  41accf:	pop    ecx
  41acd0:	cmc    
  41acd1:	sbb    al,0xa4
  41acd3:	mov    ds:0xd8b92fad,al
  41acd8:	xchg   esp,eax
  41acd9:	mov    ss,WORD PTR [edx+0x64be376b]
  41acdf:	mov    dh,0xb5
  41ace1:	or     DWORD PTR [di-0x5ff1],0xffffff98
  41ace7:	ss jns 0x41ac6d
  41acea:	mov    BYTE PTR [ebx+0x11f8268b],bl
  41acf0:	cdq    
  41acf1:	mov    bl,0xac
  41acf3:	pop    ecx
  41acf4:	jmp    0xeef4:0xd4384aec
  41acfb:	ja     0x41ac95
  41acfd:	rcl    BYTE PTR [edi],cl
  41acff:	jb     0x41ac8f
  41ad01:	sub    al,0x5b
  41ad03:	dec    esi
  41ad04:	call   0xf83fa6cb
  41ad09:	push   esp
  41ad0a:	popa   
  41ad0b:	pop    esi
  41ad0c:	fst    QWORD PTR [eax+edx*2+0x7c]
  41ad10:	out    0xd0,eax
  41ad12:	sbb    esi,edi
  41ad14:	fld    DWORD PTR [edi+ebp*4]
  41ad17:	mov    eax,ds:0xfa7cfd47
  41ad1c:	dec    edi
  41ad1d:	out    0xe6,al
  41ad1f:	inc    esp
  41ad20:	(bad)  
  41ad21:	lods   eax,DWORD PTR ds:[esi]
  41ad22:	test   BYTE PTR [ebp+ebp*2+0x52],ah
  41ad26:	xchg   DWORD PTR [ebp-0x108dbae1],ebp
  41ad2c:	push   ds
  41ad2d:	sbb    al,0x7a
  41ad2f:	lods   al,BYTE PTR ds:[esi]
  41ad30:	aaa    
  41ad31:	dec    edi
  41ad32:	ret    0x6e94
  41ad35:	dec    esp
  41ad36:	xchg   BYTE PTR [edx+0x4d61600d],cl
  41ad3c:	xor    DWORD PTR [ebx+0x3],0x2
  41ad40:	xchg   edx,eax
  41ad41:	(bad)  
  41ad42:	dec    edi
  41ad43:	pop    ebx
  41ad44:	and    BYTE PTR [ebp+0x68],0x17
  41ad48:	cmp    DWORD PTR [edi],esi
  41ad4a:	jmp    0x5357513b
  41ad4f:	jg     0x41ad65
  41ad51:	fild   DWORD PTR [esi-0x623c5b52]
  41ad57:	jno    0xfef43e34
  41ad5d:	mov    ?,ebx
  41ad5f:	jmp    FWORD PTR [esi+eax*1+0x5f1822a2]
  41ad66:	clc    
  41ad67:	mov    esp,0xa20bdfb3
  41ad6c:	lds    edi,FWORD PTR [ebp-0xdc29f91]
  41ad72:	data16 jns 0x41ade1
  41ad75:	dec    ecx
  41ad76:	(bad)  
  41ad77:	cmp    DWORD PTR [esp+0x3a],ebx
  41ad7b:	pop    edi
  41ad7c:	repz sbb ecx,esi
  41ad7f:	and    esi,eax
  41ad81:	inc    edx
  41ad82:	shr    DWORD PTR [edi],1
  41ad84:	clc    
  41ad85:	cmp    DWORD PTR [ebx+0x4575f5ec],eax
  41ad8b:	shl    DWORD PTR [edx+ebx*4],1
  41ad8e:	dec    ecx
  41ad8f:	cmp    ah,dh
  41ad91:	inc    edx
  41ad92:	pop    edx
  41ad93:	pop    esp
  41ad94:	mov    dh,0x2
  41ad96:	mov    ecx,0x1bef55b9
  41ad9b:	retf   0x481c
  41ad9e:	ret    
  41ad9f:	sbb    bl,dl
  41ada1:	xor    esp,ebp
  41ada3:	mov    al,ds:0x29bc0cc9
  41ada8:	and    BYTE PTR [ebx],ch
  41adaa:	jb     0x41ae14
  41adac:	pop    ds
  41adad:	sub    al,0xae
  41adaf:	idiv   DWORD PTR [edx+0x24b63942]
  41adb5:	es jne 0x41ae17
  41adb8:	rcr    ah,1
  41adba:	jmp    0xa86b:0xcc2503db
  41adc1:	inc    ebp
  41adc2:	adc    DWORD PTR [ebp+0x1c1fdd2e],0x4b
  41adc9:	lea    ebp,[edi+0x70]
  41adcc:	xchg   esi,eax
  41adcd:	jle    0x41ae30
  41adcf:	ds push es
  41add1:	cmp    DWORD PTR [ecx-0x6c],ebx
  41add4:	or     BYTE PTR [esi],dh
  41add6:	inc    edx
  41add7:	es ds dec esi
  41adda:	cmp    ah,dh
  41addc:	mov    cl,ah
  41adde:	dec    edx
  41addf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ade0:	clc    
  41ade1:	push   eax
  41ade2:	fmulp  st(3),st
  41ade4:	out    dx,al
  41ade5:	(bad)  
  41ade8:	mov    ah,0xe9
  41adea:	mov    dh,BYTE PTR [edi+0x3da79bce]
  41adf0:	fdiv   QWORD PTR [esp+ebx*1-0x5f]
  41adf4:	mov    eax,0xed41d031
  41adf9:	sbb    al,0xa0
  41adfb:	mov    edi,0xb409f881
  41ae00:	xchg   esp,eax
  41ae01:	mov    ebx,0x5bd7e678
  41ae06:	pop    edx
  41ae07:	jbe    0x41ae37
  41ae09:	(bad)  
  41ae0a:	sub    esi,DWORD PTR [esi]
  41ae0c:	imul   edi,ecx,0x8178eedc
  41ae12:	sub    DWORD PTR [edi],0xffffff85
  41ae15:	jnp    0x41ae60
  41ae17:	pop    es
  41ae18:	ss ret 0xd34b
  41ae1c:	lods   al,BYTE PTR ds:[esi]
  41ae1d:	mov    al,ds:0xc01db944
  41ae22:	leave  
  41ae23:	and    ebx,DWORD PTR [eax+edi*4+0x63345e5b]
  41ae2a:	jae    0x41adb3
  41ae2c:	stos   BYTE PTR es:[edi],al
  41ae2d:	dec    edx
  41ae2e:	dec    edi
  41ae2f:	pop    edx
  41ae30:	add    eax,0x139f0921
  41ae35:	mov    ch,0x85
  41ae37:	pusha  
  41ae38:	jb     0x41ae80
  41ae3a:	cmp    DWORD PTR [eax+0x3439a798],ecx
  41ae40:	std    
  41ae41:	add    BYTE PTR [esi],cl
  41ae43:	je     0x41ae17
  41ae45:	mov    ch,al
  41ae47:	(bad)  
  41ae4a:	pop    ss
  41ae4b:	inc    eax
  41ae4c:	jg     0x41add5
  41ae4e:	jmp    0xc8c6:0xca3010e0
  41ae55:	jno    0x41ae75
  41ae57:	jae    0x41ae92
  41ae59:	es mov eax,0x525781b8
  41ae5f:	clc    
  41ae60:	push   ss
  41ae61:	jnp    0x41aea4
  41ae63:	pop    es
  41ae64:	jl     0x41adfc
  41ae66:	ins    DWORD PTR es:[edi],dx
  41ae67:	mov    ebx,0x609c3727
  41ae6c:	jp     0x41ae5c
  41ae6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae6f:	cmp    eax,0x9bbe133b
  41ae74:	in     eax,0x96
  41ae76:	aaa    
  41ae77:	inc    edi
  41ae78:	dec    ecx
  41ae79:	(bad)  
  41ae7a:	lea    eax,[eax+0x63]
  41ae7d:	and    DWORD PTR [edx],esp
  41ae7f:	inc    esp
  41ae80:	add    al,0xb
  41ae82:	loop   0x41ae51
  41ae84:	dec    edx
  41ae85:	ja     0x41aeb5
  41ae87:	fistp  DWORD PTR [esi]
  41ae89:	ins    DWORD PTR es:[edi],dx
  41ae8a:	jns    0x41aec3
  41ae8c:	pop    es
  41ae8d:	dec    ebp
  41ae8e:	ja     0x41ae6c
  41ae90:	outs   dx,DWORD PTR ds:[esi]
  41ae91:	out    0x17,eax
  41ae93:	in     eax,dx
  41ae94:	xchg   esp,eax
  41ae95:	lahf   
  41ae96:	push   edi
  41ae97:	cmp    al,0xf8
  41ae99:	(bad)  
  41ae9a:	mov    ebp,0xeba4ce35
  41ae9f:	popa   
  41aea0:	sub    edx,DWORD PTR [eax]
  41aea2:	mov    esi,0xdaec2065
  41aea7:	shr    DWORD PTR [eax],0x9c
  41aeaa:	(bad)  
  41aeac:	sahf   
  41aead:	mov    esp,0x903d0b8b
  41aeb2:	retf   0x91fb
  41aeb5:	or     esp,DWORD PTR [ecx]
  41aeb7:	dec    eax
  41aeb8:	add    al,bl
  41aeba:	dec    eax
  41aebb:	fwait
  41aebc:	xchg   DWORD PTR ds:0xd978baf1,esp
  41aec2:	xor    esp,DWORD PTR [esi-0x18304878]
  41aec8:	fbstp  TBYTE PTR [edx-0x38]
  41aecb:	mov    al,0x52
  41aecd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aece:	imul   ecx,DWORD PTR ds:0x6f6e232b,0x35a03b32
  41aed8:	mov    BYTE PTR [eax],dl
  41aeda:	push   ss
  41aedb:	pop    edx
  41aedc:	sahf   
  41aedd:	push   ebp
  41aede:	imul   DWORD PTR [ecx-0x18]
  41aee1:	and    DWORD PTR [ebx-0x21],ecx
  41aee4:	enter  0x5940,0x75
  41aee8:	mov    ch,0x1b
  41aeea:	bound  esi,QWORD PTR [ecx]
  41aeec:	test   DWORD PTR [esi*4-0x29a26f64],edx
  41aef3:	outs   dx,DWORD PTR ds:[esi]
  41aef4:	push   edx
  41aef5:	and    DWORD PTR [edx],edi
  41aef7:	lds    edi,FWORD PTR [ebx+0x7e7a2226]
  41aefd:	(bad)  
  41aefe:	dec    edi
  41aeff:	out    dx,al
  41af00:	or     DWORD PTR [ecx-0x26],0x79
  41af04:	mov    ebx,0x74f7294
  41af09:	pop    ebx
  41af0a:	or     ebx,DWORD PTR [ebx+ebp*8+0x6fb436c8]
  41af11:	sub    eax,0x894637db
  41af16:	sub    BYTE PTR [ebx],dl
  41af18:	ret    0xd819
  41af1b:	test   al,0xa0
  41af1d:	xchg   ebx,eax
  41af1e:	inc    ecx
  41af1f:	push   ecx
  41af20:	call   0x1e46da4a
  41af25:	fsubr  DWORD PTR [edx+0x6d29178b]
  41af2b:	add    bh,ch
  41af2d:	jp     0x41af62
  41af2f:	jae    0x41af45
  41af31:	or     edx,ecx
  41af33:	arpl   WORD PTR [ecx-0x497d8e6d],di
  41af39:	clc    
  41af3a:	xor    eax,0xdb7e61f4
  41af3f:	mov    ebx,edi
  41af41:	ins    DWORD PTR es:[edi],dx
  41af42:	je     0x41af48
  41af44:	ffreep st(7)
  41af46:	dec    ebp
  41af47:	mov    ecx,0xb3d77513
  41af4c:	mov    dh,0x77
  41af4e:	or     BYTE PTR ds:0xb50d5910,cl
  41af54:	adc    al,0x29
  41af56:	in     al,0x72
  41af58:	adc    DWORD PTR [ecx+0xd7c934a],0xfffffffd
  41af5f:	inc    eax
  41af60:	adc    edi,edi
  41af62:	xchg   edx,eax
  41af63:	sbb    eax,0x1bb22381
  41af68:	mov    cl,BYTE PTR [ebx-0x14]
  41af6b:	popf   
  41af6c:	pop    ecx
  41af6d:	pop    ebp
  41af6e:	(bad)  
  41af6f:	iret   
  41af70:	stos   BYTE PTR es:[edi],al
  41af71:	mov    esp,0xb6b7374e
  41af76:	(bad)  
  41af77:	es cmp edx,ecx
  41af7a:	inc    ebx
  41af7b:	sbb    DWORD PTR [edx],edx
  41af7d:	fadd   DWORD PTR [edx+0x2349c167]
  41af83:	fwait
  41af84:	xor    eax,0x28567fa3
  41af89:	dec    ecx
  41af8a:	mov    eax,0x40deb6d8
  41af8f:	fadd   st(6),st
  41af91:	mov    ah,0x8d
  41af93:	les    ebp,FWORD PTR [edx+0x18]
  41af96:	and    DWORD PTR [eax],edi
  41af98:	cdq    
  41af99:	outs   dx,BYTE PTR ds:[esi]
  41af9a:	enter  0x2499,0x89
  41af9e:	cmp    al,0x5b
  41afa0:	or     ch,BYTE PTR [ecx+0x76]
  41afa3:	ss jnp 0x41b001
  41afa6:	adc    DWORD PTR [edx-0x38f9d132],esi
  41afac:	sbb    ecx,DWORD PTR [edi+ecx*4-0x5f]
  41afb0:	pop    esp
  41afb1:	out    0xcd,eax
  41afb3:	xchg   ebx,ebp
  41afb5:	xor    al,0x69
  41afb7:	(bad)  
  41afb8:	pop    ds
  41afb9:	out    dx,eax
  41afba:	les    ebp,FWORD PTR ds:0xb524a913
  41afc0:	sub    DWORD PTR [esi-0x253859ca],edx
  41afc6:	dec    esp
  41afc7:	popf   
  41afc8:	inc    esi
  41afc9:	and    DWORD PTR [edi+ebp*1+0x6d],esi
  41afcd:	dec    edx
  41afce:	fdiv   DWORD PTR [eax-0x26742c0]
  41afd4:	or     ebx,esi
  41afd6:	sti    
  41afd7:	in     eax,0xa8
  41afd9:	add    al,0xa8
  41afdb:	lds    ecx,FWORD PTR [ebp-0x303990b9]
  41afe1:	dec    esi
  41afe2:	das    
  41afe3:	and    DWORD PTR [ebp-0x16],esp
  41afe6:	(bad)  
  41afe7:	push   DWORD PTR [ebp-0x46dd4258]
  41afed:	scas   eax,DWORD PTR es:[edi]
  41afee:	jmp    0xd3c8:0x2ae487e3
  41aff5:	aaa    
  41aff6:	sub    BYTE PTR [ecx+0x7d5baf42],bl
  41affc:	cmp    BYTE PTR [edi+0x1694796a],cl
  41b002:	pop    eax
  41b003:	inc    esp
  41b004:	iret   
  41b005:	retf   0x1235
  41b008:	lods   al,BYTE PTR ds:[esi]
  41b009:	je     0x41b049
  41b00b:	bound  bp,DWORD PTR [ebx-0x5a7a7539]
  41b012:	jge    0x41b07c
  41b014:	popf   
  41b015:	cli    
  41b016:	push   edx
  41b017:	mov    DWORD PTR [ecx+edx*4],eax
  41b01a:	fwait
  41b01b:	pop    ds
  41b01c:	mov    bl,0xe
  41b01e:	push   esi
  41b01f:	rcr    BYTE PTR [edi],1
  41b021:	mov    al,ds:0xc2c6c36b
  41b026:	stc    
  41b027:	mov    esi,DWORD PTR [edx]
  41b029:	adc    BYTE PTR [ebx],ah
  41b02b:	scas   eax,DWORD PTR es:[edi]
  41b02c:	ins    BYTE PTR es:[edi],dx
  41b02d:	xor    DWORD PTR [esi+0x779510dd],esp
  41b033:	shl    BYTE PTR [ecx],1
  41b035:	ja     0x41b080
  41b037:	jnp    0x41b058
  41b039:	mov    ch,ch
  41b03b:	popf   
  41b03c:	daa    
  41b03d:	call   0xa59eb084
  41b042:	push   ds
  41b043:	call   0x638b:0x5225b73c
  41b04a:	push   eax
  41b04b:	das    
  41b04c:	nop
  41b04d:	and    al,0xc
  41b04f:	mov    esi,0x2e3d237d
  41b054:	dec    esi
  41b055:	outs   dx,BYTE PTR ds:[esi]
  41b056:	add    bh,al
  41b058:	arpl   WORD PTR [ecx+0x3923aea3],ax
  41b05e:	and    al,0x14
  41b060:	out    0xad,al
  41b062:	sahf   
  41b063:	xor    al,0x8b
  41b065:	in     al,0x81
  41b067:	push   es
  41b068:	mov    cs,WORD PTR [ebp+0x19]
  41b06b:	adc    ebp,DWORD PTR [ebx+0x15]
  41b06e:	fwait
  41b06f:	int3   
  41b070:	cmp    DWORD PTR [edi+0x369f7761],ecx
  41b076:	pop    ds
  41b077:	out    dx,al
  41b078:	push   ebx
  41b079:	push   ss
  41b07a:	or     edx,esi
  41b07c:	cli    
  41b07d:	push   edx
  41b07e:	xor    ebx,DWORD PTR [eax]
  41b080:	mov    cl,0xf1
  41b082:	xchg   ebp,eax
  41b083:	mov    eax,eax
  41b085:	arpl   WORD PTR [ebp+0x39],cx
  41b088:	cmp    esi,DWORD PTR [edi]
  41b08a:	call   0xcebf:0x1d85840e
  41b091:	dec    esp
  41b092:	mov    al,ds:0xca0289b6
  41b097:	int    0xd4
  41b099:	cmp    al,BYTE PTR [eax-0x41404f1b]
  41b09f:	xchg   edi,eax
  41b0a0:	imul   ebp,DWORD PTR [ecx-0x46187127],0x4c
  41b0a7:	icebp  
  41b0a8:	jge    0x41b081
  41b0aa:	ins    DWORD PTR es:[edi],dx
  41b0ab:	popf   
  41b0ac:	loope  0x41b121
  41b0ae:	mov    al,BYTE PTR [esi+0xc]
  41b0b1:	xchg   edi,eax
  41b0b2:	mov    edx,DWORD PTR [esi]
  41b0b4:	imul   esi,DWORD PTR [edi-0x545cf11e],0x46
  41b0bb:	cmp    al,0xfc
  41b0bd:	push   edx
  41b0be:	idiv   DWORD PTR [edx]
  41b0c0:	xor    edi,0xffffffe3
  41b0c3:	adc    eax,0xfc6d8446
  41b0c8:	mov    WORD PTR ds:0x458c7f1,?
  41b0ce:	out    0x52,al
  41b0d0:	inc    esp
  41b0d1:	std    
  41b0d2:	mov    al,0xc4
  41b0d4:	jle    0x41b056
  41b0d6:	fild   QWORD PTR [edx-0x2d]
  41b0d9:	xchg   edi,eax
  41b0da:	lock or BYTE PTR [ebx],cl
  41b0dd:	adc    BYTE PTR [esp+esi*2-0x6fdc6f48],0x72
  41b0e5:	pop    esi
  41b0e6:	sbb    dl,BYTE PTR [eax+0x3e]
  41b0e9:	ret    
  41b0ea:	das    
  41b0eb:	jne    0x41b12b
  41b0ed:	(bad)  
  41b0ee:	jp     0x41b0cf
  41b0f0:	xor    DWORD PTR [ebx-0x653fca45],ebx
  41b0f6:	dec    edx
  41b0f7:	cmp    al,0x1c
  41b0f9:	xor    eax,0xc1924527
  41b0fe:	je     0x41b162
  41b100:	pop    eax
  41b101:	adc    DWORD PTR [ecx+0x639a5643],esi
  41b107:	fnstenv [esi+0x50]
  41b10a:	cwde   
  41b10b:	sub    bl,BYTE PTR [eax+ebp*2]
  41b10e:	xor    esi,ecx
  41b110:	xchg   DWORD PTR [ebx+0x6a],eax
  41b113:	retf   
  41b114:	dec    eax
  41b115:	cmp    DWORD PTR [ecx],eax
  41b117:	loopne 0x41b12a
  41b119:	fdiv   DWORD PTR [edx-0x2d70879b]
  41b11f:	ret    
  41b120:	ror    BYTE PTR [edi+0x14],1
  41b123:	jecxz  0x41b13c
  41b125:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b126:	and    BYTE PTR [ebx+ebx*4],0x9d
  41b12a:	out    dx,eax
  41b12b:	hlt    
  41b12c:	xor    eax,0xad8a6332
  41b131:	cmp    edi,DWORD PTR [ecx+0x3831bef7]
  41b137:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b138:	jge    0x41b11a
  41b13a:	call   0x809d:0x23c195f0
  41b141:	push   ebx
  41b142:	xor    ch,BYTE PTR [edi-0x73]
  41b145:	jge    0x41b0f7
  41b147:	lds    esp,FWORD PTR [edx-0x217133e3]
  41b14d:	mov    ah,0x6f
  41b14f:	neg    DWORD PTR [ebp-0x47]
  41b152:	mov    esp,0x5ce3cdf4
  41b157:	add    bh,BYTE PTR es:[edi+0x6a]
  41b15b:	jns    0x41b111
  41b15d:	mov    eax,0xc7e536df
  41b162:	inc    eax
  41b163:	cmp    ah,BYTE PTR [esi+0x5b]
  41b166:	fcomp  DWORD PTR [edi-0xf]
  41b169:	out    0x2a,al
  41b16b:	xchg   ebp,eax
  41b16c:	leave  
  41b16d:	mov    cl,0xe4
  41b16f:	push   esi
  41b170:	fldenv [ebp+0x20]
  41b173:	inc    esp
  41b174:	arpl   WORD PTR [eax],bp
  41b176:	(bad)  
  41b177:	fisubr WORD PTR [edx]
  41b179:	leave  
  41b17a:	out    dx,al
  41b17b:	mov    ebp,0xa0e8f0ba
  41b180:	stos   DWORD PTR es:[edi],eax
  41b181:	pop    es
  41b182:	inc    esp
  41b183:	mov    bh,0x1b
  41b185:	or     DWORD PTR [ecx+eax*1-0xb252bb2],eax
  41b18c:	add    DWORD PTR [ebx],eax
  41b18e:	shl    DWORD PTR [edx],cl
  41b190:	cmp    eax,0xbec40351
  41b195:	int3   
  41b196:	jne    0x41b1cd
  41b198:	jmp    0x5b37:0x34424907
  41b19f:	dec    esi
  41b1a0:	mov    ss,WORD PTR [eax-0x3d]
  41b1a3:	xor    eax,0x60e28c86
  41b1a8:	jnp    0x41b1e5
  41b1aa:	test   edi,esi
  41b1ac:	in     eax,0x7d
  41b1ae:	sti    
  41b1af:	mov    BYTE PTR ds:0x84e685b4,dh
  41b1b5:	dec    eax
  41b1b6:	jae    0x41b15f
  41b1b8:	popf   
  41b1b9:	test   BYTE PTR [edx+0x309e01ef],bh
  41b1bf:	pop    ss
  41b1c0:	(bad)
  41b1c3:	sti    
  41b1c4:	ds test al,0xa1
  41b1c7:	and    ecx,DWORD PTR [ecx-0x28]
  41b1ca:	xlat   BYTE PTR ds:[ebx]
  41b1cb:	mov    eax,0x7f9c1f3d
  41b1d0:	in     eax,dx
  41b1d1:	xor    al,0x6e
  41b1d3:	out    dx,eax
  41b1d4:	pop    esp
  41b1d5:	scas   al,BYTE PTR es:[edi]
  41b1d6:	or     al,0xb6
  41b1d8:	inc    edx
  41b1d9:	cwde   
  41b1da:	arpl   dx,dx
  41b1dc:	xor    esi,0x2bed45db
  41b1e2:	mov    ah,0xbd
  41b1e4:	push   ebx
  41b1e5:	mov    ch,0x6
  41b1e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b1e8:	adc    BYTE PTR [esi+0x68b974f5],al
  41b1ee:	pop    edx
  41b1ef:	jl     0x41b228
  41b1f1:	or     edi,ebp
  41b1f3:	sbb    ebp,esp
  41b1f5:	sub    eax,0x81d03de1
  41b1fa:	out    0x53,al
  41b1fc:	sbb    BYTE PTR [ebx-0x4],bh
  41b1ff:	pop    es
  41b200:	and    eax,0x8129bcc7
  41b205:	mov    eax,0x6811cd48
  41b20a:	or     DWORD PTR [eax-0x29],ebx
  41b20d:	lods   al,BYTE PTR ds:[esi]
  41b20e:	push   ebp
  41b20f:	sub    BYTE PTR [ecx-0x12ea74a9],bl
  41b215:	push   ss
  41b216:	repz inc edi
  41b218:	adc    eax,0x8e89b40
  41b21d:	adc    ch,BYTE PTR [ebx]
  41b21f:	ret    
  41b220:	repz ficomp WORD PTR [edx-0x329d7d0b]
  41b227:	test   al,0xd9
  41b229:	rol    BYTE PTR [esi],cl
  41b22b:	std    
  41b22c:	das    
  41b22d:	mov    bl,cl
  41b22f:	jbe    0x41b1e3
  41b231:	ins    DWORD PTR es:[edi],dx
  41b232:	lea    edx,[ecx+0x1ef4c7dc]
  41b238:	gs test ebp,ebp
  41b23b:	xor    DWORD PTR [esi],edi
  41b23d:	call   0x6077:0xb7b5ee0
  41b244:	scas   al,BYTE PTR es:[edi]
  41b245:	retf   
  41b246:	add    bh,cl
  41b248:	pop    ebx
  41b249:	(bad)  
  41b24a:	call   0xf0b0:0xa7907dd7
  41b251:	sti    
  41b252:	mov    bh,0x21
  41b254:	iret   
  41b255:	mov    ah,0x8a
  41b257:	(bad)  
  41b258:	sbb    al,0x8a
  41b25a:	jl     0x41b29e
  41b25c:	sub    dh,0xa0
  41b25f:	adc    DWORD PTR [edi-0x74],esi
  41b262:	scas   eax,DWORD PTR es:[edi]
  41b263:	retf   0x7e1f
  41b266:	jns    0x41b202
  41b268:	scas   eax,DWORD PTR es:[edi]
  41b269:	mov    DWORD PTR [ebp-0x15629567],esp
  41b26f:	stos   BYTE PTR es:[edi],al
  41b270:	ds and al,0x53
  41b273:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b274:	loope  0x41b2ea
  41b276:	js     0x41b2b1
  41b278:	mov    eax,ds:0x86aec88d
  41b27d:	push   ebp
  41b27e:	jg     0x41b23e
  41b280:	mov    ah,0xea
  41b282:	(bad)  
  41b284:	pop    ebx
  41b285:	dec    eax
  41b286:	test   dl,ah
  41b288:	ror    ebx,0xa0
  41b28b:	mov    dh,bh
  41b28d:	pop    es
  41b28e:	iret   
  41b28f:	inc    eax
  41b290:	dec    edx
  41b291:	pop    esp
  41b292:	mov    edx,?
  41b294:	scas   eax,DWORD PTR es:[edi]
  41b295:	push   es
  41b296:	jecxz  0x41b2c8
  41b298:	cmp    bl,BYTE PTR [ebx]
  41b29a:	jle    0x41b229
  41b29c:	in     eax,dx
  41b29d:	ds (bad) 
  41b29f:	ror    BYTE PTR [edx],1
  41b2a1:	jbe    0x41b29b
  41b2a3:	adc    BYTE PTR [ecx+esi*2-0x14],cl
  41b2a7:	push   0x77eea878
  41b2ac:	sbb    al,0x51
  41b2ae:	adc    DWORD PTR [edi-0x2a45ddbd],eax
  41b2b4:	or     eax,0xfade34e6
  41b2b9:	jp     0x41b31e
  41b2bb:	pop    ecx
  41b2bc:	in     eax,dx
  41b2bd:	and    edx,DWORD PTR [eax+0x31]
  41b2c0:	cwde   
  41b2c1:	xor    edx,ebx
  41b2c3:	mov    DWORD PTR [ebp-0x50],edx
  41b2c6:	mov    edx,DWORD PTR [ebp+0x8]
  41b2c9:	mov    ebx,DWORD PTR [ebp-0x4c]
  41b2cc:	add    edx,edi
  41b2ce:	and    edx,ebx
  41b2d0:	mov    DWORD PTR [ebp-0x4c],edx
  41b2d3:	mov    edx,DWORD PTR [ebp+0x8]
  41b2d6:	mov    ebx,DWORD PTR [ebp-0x48]
  41b2d9:	lea    edx,[ebx+edx*1+0x241fcde]
  41b2e0:	mov    DWORD PTR [ebp-0x48],edx
  41b2e3:	mov    edx,DWORD PTR [ebp+0x8]
  41b2e6:	mov    ebx,0xfa5e1521
  41b2eb:	sub    ebx,edx
  41b2ed:	add    ebx,DWORD PTR [ebp-0x44]
  41b2f0:	mov    DWORD PTR [ebp-0x44],ebx
  41b2f3:	mov    edx,DWORD PTR [ebp+0x8]
  41b2f6:	xor    edx,eax
  41b2f8:	add    edx,esi
  41b2fa:	jne    0x418f20
  41b300:	jmp    0x41d6f0
  41b305:	mov    edx,DWORD PTR [ebp-0x14]
  41b308:	mov    DWORD PTR [ebp+0x8],edx
  41b30b:	jmp    0x41d6e3
  41b310:	mov    edx,DWORD PTR [ebp+0x8]
  41b313:	mov    ebx,DWORD PTR [ebp-0x8]
  41b316:	xor    edx,eax
  41b318:	xor    ebx,eax
  41b31a:	sub    edx,ebx
  41b31c:	sub    edx,esi
  41b31e:	xor    edx,eax
  41b320:	mov    DWORD PTR [ebp+0x8],edx
  41b323:	mov    edx,DWORD PTR [ebp+0x8]
  41b326:	mov    ebx,DWORD PTR [ebp-0x58]
  41b329:	jmp    0x41d68c
  41b32e:	popa   
  41b32f:	cmc    
  41b330:	cwde   
  41b331:	mov    eax,0xd7017b98
  41b336:	pop    ecx
  41b337:	popa   
  41b338:	mov    edx,DWORD PTR [eax]
  41b33a:	xchg   esp,eax
  41b33b:	popa   
  41b33c:	jnp    0x41b354
  41b33e:	xlat   BYTE PTR ds:[ebx]
  41b33f:	(bad)  
  41b340:	jge    0x41b3bc
  41b342:	xor    BYTE PTR [edi+0x7a],bl
  41b345:	jp     0x41b3c3
  41b347:	add    eax,0x5641efbf
  41b34c:	in     al,0xae
  41b34e:	call   0xdcd8:0x45dbd998
  41b355:	aas    
  41b356:	lar    esi,bp
  41b359:	xor    DWORD PTR [ecx-0x79],ecx
  41b35c:	cmp    ebp,0x7c
  41b35f:	or     BYTE PTR [ebx+0x5a54a181],ah
  41b365:	xchg   edi,eax
  41b366:	aad    0xa4
  41b368:	lock mov bl,0x66
  41b36b:	test   eax,0x257c8a2d
  41b370:	pop    ds
  41b371:	aas    
  41b372:	dec    esp
  41b373:	test   eax,0x6a47c387
  41b378:	sub    DWORD PTR [esi],edi
  41b37a:	pop    ecx
  41b37b:	cwde   
  41b37c:	inc    esp
  41b37d:	push   ecx
  41b37e:	cdq    
  41b37f:	xor    esp,edx
  41b381:	push   edi
  41b382:	mov    bl,0x83
  41b384:	bound  edi,QWORD PTR [eax]
  41b386:	xchg   edi,eax
  41b387:	inc    esp
  41b388:	aaa    
  41b389:	jns    0x41b37a
  41b38b:	and    eax,DWORD PTR ds:0xe8163d25
  41b391:	sti    
  41b392:	arpl   WORD PTR [edi+0x605171f],ax
  41b398:	inc    ebx
  41b399:	lahf   
  41b39a:	mov    DWORD PTR [ecx],ebx
  41b39c:	test   al,0x23
  41b39e:	in     eax,0xed
  41b3a0:	ds pop ebp
  41b3a2:	cli    
  41b3a3:	push   esi
  41b3a4:	fidiv  DWORD PTR [ebp-0x42]
  41b3a7:	je     0x41b41c
  41b3a9:	inc    edx
  41b3aa:	jp     0x41b426
  41b3ac:	push   ecx
  41b3ad:	and    bh,dl
  41b3af:	jns    0x41b380
  41b3b1:	repz in eax,0x88
  41b3b4:	ins    DWORD PTR es:[edi],dx
  41b3b5:	sbb    BYTE PTR [ebp+0x116f0e7],ch
  41b3bb:	push   edi
  41b3bc:	dec    eax
  41b3bd:	rcl    esp,0x7a
  41b3c0:	xchg   DWORD PTR [ebx-0x1e9eaeb6],esi
  41b3c6:	js     0x41b393
  41b3c8:	inc    edi
  41b3c9:	jl     0x41b3e1
  41b3cb:	mov    bl,0x3a
  41b3cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b3ce:	mov    ds:0x3c97fda9,al
  41b3d3:	dec    ebx
  41b3d4:	pop    edx
  41b3d5:	fisub  WORD PTR [edx-0x2442de40]
  41b3db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b3dc:	sahf   
  41b3dd:	addr16 das 
  41b3df:	add    DWORD PTR [edx+0x32b6e6b0],esi
  41b3e5:	cld    
  41b3e6:	or     bh,bl
  41b3e8:	aas    
  41b3e9:	out    0xbc,al
  41b3eb:	sbb    eax,0x5a053399
  41b3f0:	mov    edi,0xdb16f477
  41b3f5:	adc    bh,dl
  41b3f7:	cmp    DWORD PTR ds:0x1024440f,edx
  41b3fd:	mov    ds,WORD PTR [edi+0x72]
  41b400:	rcl    BYTE PTR [edx+0x50],cl
  41b403:	out    0xc8,eax
  41b405:	in     al,0xae
  41b407:	cmp    ecx,esi
  41b409:	sti    
  41b40a:	fld    QWORD PTR [edx-0x24316dda]
  41b410:	or     eax,0x43b0260c
  41b415:	cdq    
  41b416:	inc    ebp
  41b417:	inc    esp
  41b418:	mov    ds:0x5b187d71,eax
  41b41d:	loope  0x41b450
  41b41f:	pop    ds
  41b420:	adc    eax,0x95c419fd
  41b425:	int    0x0
  41b427:	dec    esi
  41b428:	push   es
  41b429:	fadd   QWORD PTR [ebx+0x5d]
  41b42c:	xchg   BYTE PTR [edx+ebp*8],dh
  41b42f:	or     DWORD PTR [edi-0xc],esp
  41b432:	cmp    DWORD PTR [esi+0x66],edx
  41b435:	or     dl,dh
  41b437:	dec    eax
  41b438:	cmp    eax,0xb2a42a11
  41b43d:	mov    dl,0x85
  41b43f:	(bad)  
  41b440:	lock jmp 0x41b49e
  41b443:	mov    dl,0xb4
  41b445:	mov    bh,0xc8
  41b447:	outs   dx,DWORD PTR ds:[esi]
  41b448:	dec    edx
  41b449:	push   ss
  41b44a:	lock mov ecx,0xf093ffd2
  41b450:	inc    esi
  41b451:	lea    ebp,[ebp-0x57c2043d]
  41b457:	mov    cs,ecx
  41b459:	xchg   esp,eax
  41b45a:	cmp    BYTE PTR [eax-0x3dbccf2],bl
  41b460:	leave  
  41b461:	mov    dh,0xc4
  41b463:	push   es
  41b464:	test   al,0xa7
  41b466:	outs   dx,BYTE PTR ds:[esi]
  41b467:	mov    BYTE PTR [ebx],dl
  41b469:	stos   BYTE PTR es:[edi],al
  41b46a:	lock (bad) 
  41b46c:	push   ss
  41b46d:	cmp    ebp,DWORD PTR [edi]
  41b46f:	mov    WORD PTR [ecx+0x35],es
  41b472:	add    al,0x7
  41b474:	adc    DWORD PTR [ebx+0x20fad977],0x56
  41b47b:	pop    ecx
  41b47c:	sub    DWORD PTR [edx+eiz*2-0x23],eax
  41b480:	clc    
  41b481:	mov    ah,BYTE PTR [ebp-0x79]
  41b484:	ja     0x41b43a
  41b486:	nop
  41b487:	in     eax,0xb8
  41b489:	mov    ?,ebx
  41b48b:	jb     0x41b4bf
  41b48d:	mov    cs,WORD PTR [edx]
  41b48f:	daa    
  41b490:	cmp    cl,BYTE PTR [ebx+ebx*8-0x22]
  41b494:	sub    BYTE PTR [eax+edx*4-0x1d],dl
  41b498:	jns    0x41b4b2
  41b49a:	mov    eax,ds:0x72a7518e
  41b49f:	jmp    0x41b439
  41b4a1:	cmp    ebx,DWORD PTR [ebp-0x387e167a]
  41b4a7:	jb     0x41b458
  41b4a9:	in     al,dx
  41b4aa:	push   esp
  41b4ab:	in     eax,dx
  41b4ac:	xchg   esp,eax
  41b4ad:	and    ebx,DWORD PTR [ebp+0x7d]
  41b4b0:	sbb    al,0xfc
  41b4b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b4b3:	ret    0xdde5
  41b4b6:	push   ebx
  41b4b7:	icebp  
  41b4b8:	jns    0x41b443
  41b4ba:	xlat   BYTE PTR ds:[ebx]
  41b4bb:	dec    ebx
  41b4bc:	stos   DWORD PTR es:[edi],eax
  41b4bd:	sbb    bl,BYTE PTR [edx+0x77ef520e]
  41b4c3:	add    DWORD PTR ds:0xdb812c2a,0xfeaab456
  41b4cd:	xchg   esi,eax
  41b4ce:	mov    ecx,0xd7136ad7
  41b4d3:	push   0x180e77a7
  41b4d8:	ret    0xc610
  41b4db:	or     bl,BYTE PTR [esi]
  41b4dd:	ret    
  41b4de:	mov    ds:0xa38453ed,eax
  41b4e3:	push   eax
  41b4e4:	(bad)  
  41b4e5:	jecxz  0x41b477
  41b4e7:	mov    dl,0xeb
  41b4e9:	or     eax,0x7bac99c4
  41b4ee:	ss pop edx
  41b4f0:	jg     0x41b4c0
  41b4f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b4f3:	mov    eax,0x332162e7
  41b4f8:	and    BYTE PTR [ebp+ebx*2-0x1b0a61c7],dl
  41b4ff:	and    DWORD PTR [esi],edx
  41b501:	mov    ch,0x71
  41b503:	fstp   DWORD PTR [edi]
  41b505:	pop    eax
  41b506:	ins    BYTE PTR es:[edi],dx
  41b507:	imul   edx,DWORD PTR [esi+0x7ee33936],0x6cfa7268
  41b511:	inc    ebp
  41b512:	test   BYTE PTR [esi],al
  41b514:	mov    WORD PTR [esi+0x2aab88f0],es
  41b51a:	jno    0x41b595
  41b51c:	(bad)  
  41b51d:	sbb    eax,0x8a50735
  41b522:	inc    esp
  41b523:	fbld   TBYTE PTR [ecx+0x49ce8558]
  41b529:	adc    al,0x83
  41b52b:	mov    edx,0x53b18924
  41b530:	push   ds
  41b531:	jle    0x41b587
  41b533:	repz ret 0x4f6b
  41b537:	jecxz  0x41b53c
  41b539:	sti    
  41b53a:	adc    eax,DWORD PTR [edx-0x70]
  41b53d:	dec    esi
  41b53e:	in     eax,dx
  41b53f:	jns    0x41b57f
  41b541:	inc    esp
  41b542:	test   ch,cl
  41b544:	ret    0xa85f
  41b547:	ds into 
  41b549:	xchg   ebp,eax
  41b54a:	out    0x94,al
  41b54c:	scas   al,BYTE PTR es:[edi]
  41b54d:	sbb    al,0x46
  41b54f:	(bad)  
  41b550:	ss (bad) 
  41b552:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b553:	and    DWORD PTR [edi-0x796437ff],edx
  41b559:	xor    BYTE PTR [edx+0x2676b3e1],bl
  41b55f:	add    al,0x65
  41b561:	stc    
  41b562:	sbb    DWORD PTR [edi-0x4ab9e9b7],ecx
  41b568:	sub    DWORD PTR [ebx+eiz*1+0x5acb2b3d],0x6f
  41b570:	push   cs
  41b571:	(bad)  
  41b572:	mov    edx,0x8841b9ec
  41b577:	jno    0x41b553
  41b579:	retf   0xd646
  41b57c:	cmp    dh,BYTE PTR [edi-0xd514d07]
  41b582:	loopne 0x41b5b9
  41b584:	cmp    cl,BYTE PTR [ebx-0x27509cf7]
  41b58a:	popa   
  41b58b:	dec    esi
  41b58c:	rol    BYTE PTR [esi],cl
  41b58e:	or     esi,DWORD PTR [eax-0x31]
  41b591:	iret   
  41b592:	lea    edi,[ebx+0x794a3cc4]
  41b598:	test   cl,dh
  41b59a:	mov    eax,ds:0xf3be1d9e
  41b59f:	xor    al,0x29
  41b5a1:	test   BYTE PTR [ecx+0x7e8adffb],0xda
  41b5a8:	pop    esi
  41b5a9:	push   edi
  41b5aa:	loopne 0x41b5ff
  41b5ac:	jmp    0xa72d:0x26f31f3c
  41b5b3:	xchg   edx,eax
  41b5b4:	lea    esi,[edi+ebp*2-0x3c]
  41b5b8:	ins    DWORD PTR es:[edi],dx
  41b5b9:	cmp    dl,BYTE PTR [edi]
  41b5bb:	adc    DWORD PTR ds:0xe87b3841,esi
  41b5c1:	es je  0x41b56f
  41b5c4:	xchg   edx,eax
  41b5c5:	jo     0x41b5e5
  41b5c7:	cmp    BYTE PTR [esi-0x2e],ch
  41b5ca:	xchg   esi,eax
  41b5cb:	ret    0x8746
  41b5ce:	int    0x1f
  41b5d0:	pop    esi
  41b5d1:	pushf  
  41b5d2:	lds    ebx,FWORD PTR [edi-0x1d1a933b]
  41b5d8:	outs   dx,DWORD PTR ds:[esi]
  41b5d9:	pusha  
  41b5da:	and    BYTE PTR [edi+eiz*8],al
  41b5dd:	mov    eax,0x5d0e065d
  41b5e2:	xchg   edx,eax
  41b5e3:	mov    ebp,0xa83c109f
  41b5e8:	jb     0x41b663
  41b5ea:	retf   0x6d2a
  41b5ed:	int3   
  41b5ee:	jmp    0xade9114
  41b5f3:	das    
  41b5f4:	scas   al,BYTE PTR es:[edi]
  41b5f5:	cwde   
  41b5f6:	fbld   TBYTE PTR [edx]
  41b5f8:	dec    esp
  41b5f9:	add    eax,0x254b8b01
  41b5fe:	mov    dl,0xe2
  41b600:	sub    al,0xfb
  41b602:	add    bh,BYTE PTR [edi+ebx*8]
  41b605:	ss or  edx,esi
  41b608:	loopne 0x41b610
  41b60a:	pop    ss
  41b60b:	cdq    
  41b60c:	xor    al,0x23
  41b60e:	sbb    al,0xb2
  41b610:	adc    al,0x73
  41b612:	and    eax,0x66506ddc
  41b617:	mov    edi,0x8a4d484a
  41b61c:	cmp    al,0xc9
  41b61e:	lds    ebp,FWORD PTR [ebp+0x4b]
  41b621:	xor    eax,0x1daeb12b
  41b626:	mov    esp,0xa3e6ddfa
  41b62b:	(bad)  
  41b62c:	das    
  41b62d:	in     al,0xae
  41b62f:	fst    DWORD PTR [esi]
  41b631:	cmp    dh,BYTE PTR [eax-0x45]
  41b634:	or     dl,BYTE PTR [edx]
  41b636:	popa   
  41b637:	push   0xffffff98
  41b639:	jns    0x41b5e7
  41b63b:	clc    
  41b63c:	idiv   DWORD PTR [eax-0x5]
  41b63f:	mov    cl,0x9b
  41b641:	(bad)  
  41b642:	lds    ecx,FWORD PTR [eax+0x55b5ac93]
  41b648:	jp     0x41b61a
  41b64a:	ds cmc 
  41b64c:	cwde   
  41b64d:	lock add ecx,edx
  41b650:	xchg   al,cl
  41b652:	hlt    
  41b653:	je     0x41b649
  41b655:	and    al,0xa9
  41b657:	bnd js 0x41b6aa
  41b65a:	jge    0x41b646
  41b65c:	retf   
  41b65d:	cmp    bl,dh
  41b65f:	aad    0x3f
  41b661:	(bad)  
  41b662:	or     ch,BYTE PTR [eax-0x40]
  41b665:	aas    
  41b666:	jmp    0x88715504
  41b66b:	lock mov ebx,0x3b5569f3
  41b671:	enter  0x1ae7,0xd2
  41b675:	adc    dl,dl
  41b677:	add    eax,0x8988671b
  41b67c:	mov    bl,0x72
  41b67e:	lea    esp,[ebp+edi*1+0x0]
  41b682:	adc    ebx,DWORD PTR [eax]
  41b684:	add    BYTE PTR [ecx],cl
  41b686:	cwde   
  41b687:	ja     0x41b6d0
  41b689:	rol    BYTE PTR [eax+0x1e],0x23
  41b68d:	pushf  
  41b68e:	fistp  WORD PTR [esi]
  41b690:	pop    ds
  41b691:	hlt    
  41b692:	(bad)  
  41b693:	mov    ecx,0xe23dc3b3
  41b698:	adc    DWORD PTR [ecx+ebx*2+0x368d320b],0x45626c9e
  41b6a3:	add    esp,0xffffff9e
  41b6a6:	in     eax,dx
  41b6a7:	mov    ds:0x54a87cfb,al
  41b6ac:	xchg   edi,eax
  41b6ad:	out    0x92,eax
  41b6af:	inc    ebx
  41b6b0:	jg     0x41b6e9
  41b6b2:	mov    ds:0x6225a567,eax
  41b6b7:	cdq    
  41b6b8:	pop    ebx
  41b6b9:	out    0x7a,al
  41b6bb:	(bad)  
  41b6bc:	sti    
  41b6bd:	mov    eax,ds:0x83fa1a90
  41b6c2:	mov    eax,0x6e0d321
  41b6c7:	outs   dx,DWORD PTR ds:[esi]
  41b6c8:	mov    esp,0x346c72ef
  41b6cd:	cmp    ch,dl
  41b6cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b6d0:	add    ebx,eax
  41b6d2:	sbb    BYTE PTR [esp+ebp*1],ah
  41b6d5:	scas   eax,DWORD PTR es:[edi]
  41b6d6:	pop    ds
  41b6d7:	mov    ds:0xf8addd28,al
  41b6dc:	jmp    0x61a7841c
  41b6e1:	add    bl,al
  41b6e3:	test   al,0xbb
  41b6e5:	sub    cl,dl
  41b6e7:	dec    ebp
  41b6e8:	outs   dx,BYTE PTR ds:[esi]
  41b6e9:	repnz aam 0x62
  41b6ec:	shr    DWORD PTR [ecx+0xb],1
  41b6ef:	mov    edx,0x9c8758a2
  41b6f4:	test   BYTE PTR [esi],bh
  41b6f6:	sbb    BYTE PTR [edi+0x7c8b579e],bl
  41b6fc:	jb     0x41b680
  41b6fe:	div    cl
  41b700:	mov    eax,0xde216eab
  41b705:	cld    
  41b706:	jl     0x41b6fb
  41b708:	or     DWORD PTR [edi],esp
  41b70a:	(bad)  
  41b70b:	xchg   edi,eax
  41b70c:	xchg   WORD PTR [ebx+0x1c],sp
  41b710:	xor    bl,BYTE PTR [ebx+0x15]
  41b713:	pushf  
  41b714:	pusha  
  41b715:	cmc    
  41b716:	mov    edx,0x30d7a853
  41b71b:	icebp  
  41b71c:	xor    ch,BYTE PTR [ebx]
  41b71e:	test   BYTE PTR [eax+0x1c],cl
  41b721:	aaa    
  41b722:	daa    
  41b723:	fist   DWORD PTR cs:[esi+0x1e]
  41b727:	mov    dl,0x1e
  41b729:	loope  0x41b75d
  41b72b:	xchg   esp,eax
  41b72c:	ja     0x41b771
  41b72e:	push   cs
  41b72f:	push   ss
  41b730:	inc    eax
  41b731:	sbb    eax,0x9b4f6d11
  41b736:	mov    eax,ds:0x78f64d0f
  41b73b:	or     DWORD PTR [ebx],ecx
  41b73d:	cmp    al,0x99
  41b73f:	sti    
  41b740:	ret    
  41b741:	inc    edx
  41b742:	jl     0x41b6d9
  41b744:	enter  0xdc4f,0xb9
  41b748:	push   ecx
  41b749:	cmc    
  41b74a:	jge    0x41b6ff
  41b74c:	add    bh,0xdd
  41b74f:	mov    al,ds:0xc5418c61
  41b754:	sbb    edi,DWORD PTR [edi]
  41b756:	ret    
  41b757:	(bad)  
  41b758:	xor    bl,0x7f
  41b75b:	aas    
  41b75c:	outs   dx,DWORD PTR ds:[esi]
  41b75d:	mov    ds:0x890cef56,al
  41b762:	mov    eax,0x86b2ac94
  41b767:	ficomp WORD PTR [edx+0x17840648]
  41b76d:	in     al,dx
  41b76e:	mov    eax,0x4f53ac4f
  41b773:	clc    
  41b774:	cwde   
  41b775:	(bad)  
  41b776:	xor    al,BYTE PTR [edi]
  41b778:	in     eax,0xf
  41b77a:	retf   
  41b77b:	daa    
  41b77c:	add    al,0xcb
  41b77e:	pushf  
  41b77f:	push   ebx
  41b780:	mov    eax,0x352b09c9
  41b785:	mov    dh,0x75
  41b787:	cmp    eax,0x355dbf2e
  41b78c:	mov    cl,0xfa
  41b78e:	shl    dh,1
  41b790:	fimul  DWORD PTR [edi+edi*1-0x1c]
  41b794:	or     al,0xa1
  41b796:	mov    ch,0x99
  41b798:	xor    DWORD PTR [ebx],ebx
  41b79a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b79b:	push   ss
  41b79c:	xor    ch,BYTE PTR [ecx-0x521d3aa4]
  41b7a2:	lahf   
  41b7a3:	fs inc ecx
  41b7a5:	inc    ebx
  41b7a6:	js     0x41b7fd
  41b7a8:	xor    DWORD PTR [ebp-0x417551ac],esp
  41b7ae:	into   
  41b7af:	in     al,dx
  41b7b0:	and    al,BYTE PTR [eax+edx*4+0x2d]
  41b7b4:	ja     0x41b766
  41b7b6:	(bad)  
  41b7b7:	sub    bl,bl
  41b7b9:	pop    ds
  41b7ba:	dec    BYTE PTR ds:0xd3e495ab
  41b7c0:	add    BYTE PTR [ebx-0x57],cl
  41b7c3:	ss (bad) 
  41b7c5:	(bad)  [eax]
  41b7c7:	popf   
  41b7c8:	or     DWORD PTR [ecx+0x49c0fd56],0xffffffe9
  41b7cf:	push   ebx
  41b7d0:	push   0xffffffd8
  41b7d2:	ror    BYTE PTR [ecx+0x4b2e96f3],cl
  41b7d8:	repz mov cl,0x41
  41b7db:	cdq    
  41b7dc:	jbe    0x41b794
  41b7de:	out    dx,eax
  41b7df:	and    BYTE PTR [edx-0x25],0xd5
  41b7e3:	pop    ds
  41b7e4:	xchg   esp,eax
  41b7e5:	daa    
  41b7e6:	dec    ebx
  41b7e7:	repnz shl BYTE PTR [esi],1
  41b7ea:	je     0x41b7f2
  41b7ec:	xchg   edx,eax
  41b7ed:	add    BYTE PTR [eax-0x58cdbc6e],al
  41b7f3:	sahf   
  41b7f4:	lock push es
  41b7f6:	mov    bh,BYTE PTR [edx]
  41b7f8:	add    BYTE PTR [edi],0x2b
  41b7fb:	dec    edx
  41b7fc:	inc    edi
  41b7fd:	adc    eax,0xe98651fc
  41b802:	push   eax
  41b803:	adc    DWORD PTR [ebp-0x4e],0x3c
  41b807:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b808:	mov    eax,ebp
  41b80a:	or     BYTE PTR [ecx-0x4a],dh
  41b80d:	mov    al,BYTE PTR [ebx-0x577fc148]
  41b813:	stos   BYTE PTR es:[edi],al
  41b814:	ret    
  41b815:	sbb    al,0xe8
  41b817:	push   ecx
  41b818:	adc    al,0xfe
  41b81a:	mov    ds:0x1f630d85,eax
  41b81f:	pushf  
  41b820:	cdq    
  41b821:	sbb    edx,DWORD PTR [edi+edi*4-0x147cb8b3]
  41b828:	xchg   DWORD PTR [edx+ebp*2+0x58],ebp
  41b82c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b82d:	out    0xc0,al
  41b82f:	imul   ebp,DWORD PTR [esp+esi*8-0x4a959232],0x2a88dc1e
  41b83a:	cmp    al,0x3
  41b83c:	out    0x85,al
  41b83e:	mov    edx,0xfd62244d
  41b843:	xor    al,BYTE PTR [edx+0x684d87eb]
  41b849:	mov    ch,0xdd
  41b84b:	sub    eax,0xaaf99b53
  41b850:	or     DWORD PTR [eax],ebp
  41b852:	sbb    ebp,ebp
  41b854:	mov    edx,0xec50297f
  41b859:	pop    ebx
  41b85a:	lahf   
  41b85b:	int3   
  41b85c:	xor    DWORD PTR [ebp+0x418998d4],ebp
  41b862:	sbb    eax,0x7f07b73a
  41b867:	xchg   esi,eax
  41b868:	inc    edi
  41b869:	and    al,0x80
  41b86b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b86c:	dec    BYTE PTR [edx]
  41b86e:	or     ebx,DWORD PTR [ebx+0xa373478]
  41b874:	retf   
  41b875:	xor    BYTE PTR [esp+ebx*4+0x495ccab2],al
  41b87c:	mov    ds:0x3d5ce86a,eax
  41b881:	(bad)  
  41b882:	cs in  al,dx
  41b884:	add    ch,dh
  41b886:	xchg   esp,eax
  41b887:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b888:	scas   eax,DWORD PTR es:[edi]
  41b889:	jb     0x41b8ca
  41b88b:	popf   
  41b88c:	inc    edx
  41b88d:	xlat   BYTE PTR ds:[ebx]
  41b88f:	jbe    0x41b8bb
  41b891:	loop   0x41b8cb
  41b893:	xchg   esp,eax
  41b894:	jbe    0x41b887
  41b896:	inc    ebp
  41b897:	sub    dl,BYTE PTR [ecx+0x34]
  41b89a:	push   cs
  41b89b:	jg     0x41b839
  41b89d:	inc    ebx
  41b89e:	(bad)  
  41b89f:	push   edx
  41b8a0:	mov    ds:0x5aa8ef06,al
  41b8a5:	repz mov eax,ds:0xae48b8ff
  41b8ab:	jecxz  0x41b873
  41b8ad:	and    esi,DWORD PTR [edx+0x2]
  41b8b0:	or     DWORD PTR [edi-0x22],0xa
  41b8b4:	(bad)  [esi-0x28f0ed2d]
  41b8ba:	pop    ss
  41b8bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b8bc:	dec    esp
  41b8bd:	stos   DWORD PTR es:[edi],eax
  41b8be:	push   esi
  41b8bf:	sbb    dl,BYTE PTR [edx+0x6bb4e0cb]
  41b8c5:	dec    eax
  41b8c6:	push   ss
  41b8c7:	jp     0x41b933
  41b8c9:	xchg   ebp,edx
  41b8cb:	stc    
  41b8cc:	ja     0x41b8b2
  41b8ce:	cli    
  41b8cf:	fwait
  41b8d0:	fwait
  41b8d1:	and    al,0xb7
  41b8d3:	not    eax
  41b8d5:	mov    bl,0xdc
  41b8d7:	adc    eax,0x73cedc09
  41b8dc:	inc    ecx
  41b8dd:	dec    esi
  41b8de:	ins    DWORD PTR es:[edi],dx
  41b8df:	jmp    0x5783a62c
  41b8e4:	mov    bl,0x40
  41b8e6:	pop    di
  41b8e8:	push   esi
  41b8e9:	ins    BYTE PTR es:[edi],dx
  41b8ea:	pop    ecx
  41b8eb:	xchg   edx,eax
  41b8ec:	repnz add eax,0xa617c7e5
  41b8f2:	hlt    
  41b8f3:	out    dx,al
  41b8f4:	ins    DWORD PTR es:[edi],dx
  41b8f5:	pop    esp
  41b8f6:	adc    DWORD PTR [esi-0x6be9f308],0xed7d668
  41b900:	sbb    dl,BYTE PTR [ecx]
  41b902:	int    0x53
  41b904:	enter  0xe49d,0x84
  41b908:	es jp  0x41b8c1
  41b90b:	mov    DWORD PTR [esi+ebp*4],eax
  41b90e:	xchg   edi,eax
  41b90f:	mov    ebx,0xa9b359d0
  41b914:	shl    DWORD PTR [ebp+0x8],1
  41b917:	popf   
  41b918:	mov    eax,ds:0xe4c4caa8
  41b91d:	loopne 0x41b91f
  41b91f:	pop    ecx
  41b920:	or     DWORD PTR [ebx+ebx*8-0x540357f0],esp
  41b927:	pop    ebp
  41b928:	arpl   WORD PTR [ecx+0x6a],sp
  41b92b:	fucom  st(6)
  41b92d:	xchg   edi,eax
  41b92e:	mov    esi,0x829a3a76
  41b933:	sub    al,0x86
  41b935:	mov    ds:0x84efe8d8,al
  41b93a:	sbb    ebp,DWORD PTR ds:0x66312f54
  41b940:	pusha  
  41b941:	sar    BYTE PTR [esi],1
  41b943:	mov    ah,0x44
  41b945:	push   esi
  41b946:	test   BYTE PTR [ebx+0x2b],dh
  41b949:	iret   
  41b94a:	sub    DWORD PTR [esi-0x64],esp
  41b94d:	clc    
  41b94e:	call   0xadf824cf
  41b953:	lods   eax,DWORD PTR ds:[esi]
  41b954:	jmp    0x2d17:0xb9a1763c
  41b95b:	mov    ebx,0xe3f9aa07
  41b960:	sbb    al,0x67
  41b962:	mov    dl,0x56
  41b964:	mov    eax,ds:0x1b0638d
  41b969:	cmp    al,0xcb
  41b96b:	dec    ebx
  41b96c:	sar    ah,0xc9
  41b96f:	jle    0x41b942
  41b971:	sub    DWORD PTR [eax-0x38],ebx
  41b974:	jp     0x41b948
  41b976:	push   esi
  41b977:	sti    
  41b978:	xchg   esi,edi
  41b97a:	jmp    0xb7ae:0x89b3cf35
  41b981:	and    ah,al
  41b983:	mov    dl,0x6c
  41b985:	test   eax,0x1b165d19
  41b98a:	cmp    esi,ecx
  41b98c:	hlt    
  41b98d:	outs   dx,DWORD PTR ds:[esi]
  41b98e:	xchg   ebp,eax
  41b98f:	pop    ds
  41b990:	dec    edx
  41b991:	add    esi,DWORD PTR [ecx+0x605e1e03]
  41b997:	xchg   bh,bl
  41b999:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b99a:	xchg   edi,eax
  41b99b:	jmp    0x41ba1a
  41b99d:	loope  0x41ba17
  41b99f:	dec    edi
  41b9a0:	mov    dl,0xf6
  41b9a2:	and    al,0x5c
  41b9a4:	jne    0x41ba01
  41b9a6:	int    0x40
  41b9a8:	addr16 jmp 0x41b968
  41b9ab:	add    al,0xd6
  41b9ad:	les    ebx,FWORD PTR [ecx+0x14379468]
  41b9b3:	mov    dl,BYTE PTR [eax]
  41b9b5:	stc    
  41b9b6:	add    dl,BYTE PTR [ebx]
  41b9b8:	bound  esi,QWORD PTR [edi+0x58b5ae67]
  41b9be:	cld    
  41b9bf:	shr    BYTE PTR [ecx+0x1bbc1346],1
  41b9c5:	jp     0x41ba03
  41b9c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b9c8:	nop
  41b9c9:	adc    DWORD PTR [esi-0x5f],edx
  41b9cc:	imul   DWORD PTR ds:0xd0716f90
  41b9d2:	ss nop
  41b9d4:	adc    ah,cl
  41b9d6:	cdq    
  41b9d7:	test   eax,0xac980585
  41b9dc:	push   ds
  41b9dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b9de:	(bad)  
  41b9df:	mul    esp
  41b9e1:	pop    eax
  41b9e2:	or     esi,DWORD PTR [edi]
  41b9e4:	repz (bad) [ecx+0x7]
  41b9e8:	lea    esp,[ebx]
  41b9ea:	xor    DWORD PTR [esi],edi
  41b9ec:	out    dx,eax
  41b9ed:	dec    edx
  41b9ee:	dec    esi
  41b9ef:	add    ch,0x71
  41b9f2:	lahf   
  41b9f3:	push   0xffffffa9
  41b9f5:	jle    0x41b9ea
  41b9f7:	int3   
  41b9f8:	in     al,dx
  41b9f9:	mov    edi,0xeef50db1
  41b9fe:	mov    es,WORD PTR [ecx+0x29]
  41ba01:	das    
  41ba02:	sti    
  41ba03:	jl     0x41ba28
  41ba05:	repz xchg cl,dh
  41ba08:	mov    WORD PTR [ebp-0x4d],es
  41ba0b:	lea    edi,[eax]
  41ba0d:	sub    eax,0x9954c1e
  41ba12:	jb     0x41b9f4
  41ba14:	test   eax,0x7cfaf164
  41ba19:	jmp    0xd857:0xb5c1cf1a
  41ba20:	sub    esi,0xff857ad6
  41ba26:	cdq    
  41ba27:	das    
  41ba28:	mov    cl,0x42
  41ba2a:	fnstcw WORD PTR [edx-0x7c]
  41ba2d:	sti    
  41ba2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ba2f:	lods   al,BYTE PTR ds:[esi]
  41ba30:	jp     0x41ba2e
  41ba32:	jnp    0x41b9f0
  41ba34:	(bad)  
  41ba35:	cdq    
  41ba36:	xchg   edi,eax
  41ba37:	leave  
  41ba38:	bound  ebx,QWORD PTR [esi-0x57b34b44]
  41ba3e:	add    cl,BYTE PTR [eax-0x7e]
  41ba41:	pop    edi
  41ba42:	das    
  41ba43:	fidiv  DWORD PTR [ecx]
  41ba45:	mov    cl,0xfa
  41ba47:	ficomp DWORD PTR [edx-0x4c]
  41ba4a:	pop    ebx
  41ba4b:	cld    
  41ba4c:	push   ds
  41ba4d:	inc    ecx
  41ba4e:	xchg   edi,eax
  41ba4f:	pop    ebx
  41ba50:	rcr    BYTE PTR [eax-0x54],cl
  41ba53:	mov    edi,fs
  41ba55:	or     eax,0xc8ec2039
  41ba5a:	push   edi
  41ba5b:	jnp    0x41ba0d
  41ba5d:	dec    ecx
  41ba5e:	and    eax,0xda3bf2e5
  41ba63:	push   ebp
  41ba64:	inc    ecx
  41ba65:	dec    edi
  41ba66:	push   esp
  41ba67:	adc    al,cl
  41ba69:	cs aaa 
  41ba6b:	icebp  
  41ba6c:	fadd   DWORD PTR [eax+eax*4]
  41ba6f:	retf   
  41ba70:	jae    0x41bae5
  41ba72:	or     al,0x27
  41ba74:	loop   0x41ba56
  41ba76:	mov    dh,0xe7
  41ba78:	sub    al,0x3c
  41ba7a:	call   0x9c6654ab
  41ba7f:	xchg   ecx,eax
  41ba80:	cs fs cmc 
  41ba83:	xchg   esi,eax
  41ba84:	add    eax,0x75c669c1
  41ba89:	pop    es
  41ba8a:	jg     0x41ba83
  41ba8c:	pop    esp
  41ba8d:	loope  0x41bb00
  41ba8f:	jbe    0x41ba7a
  41ba91:	pusha  
  41ba92:	jle    0x41bace
  41ba94:	xor    BYTE PTR [ebx+0x2b786984],bl
  41ba9a:	leave  
  41ba9b:	or     al,BYTE PTR [ebx+0x5b3773dc]
  41baa1:	(bad)  
  41baa3:	inc    ecx
  41baa4:	arpl   WORD PTR [edi+ebx*8+0x245119cb],si
  41baab:	bound  edx,QWORD PTR [edx]
  41baad:	mov    ds:0x80a24f42,al
  41bab2:	pushf  
  41bab3:	sub    al,0x11
  41bab5:	mov    eax,ds:0xe27cd885
  41baba:	cmp    eax,0x3bfcbefe
  41babf:	jmp    0x1ff6919a
  41bac4:	pop    edx
  41bac5:	adc    al,0x43
  41bac7:	enter  0x5829,0x71
  41bacb:	ret    
  41bacc:	dec    esi
  41bacd:	inc    edx
  41bace:	pop    ebx
  41bacf:	mov    BYTE PTR [ebx],ah
  41bad1:	out    dx,eax
  41bad2:	imul   DWORD PTR [ebp-0x80]
  41bad5:	nop
  41bad6:	and    al,ch
  41bad8:	mov    bh,0xb3
  41bada:	in     al,dx
  41badb:	or     BYTE PTR [esi],bl
  41badd:	add    BYTE PTR [esi-0x54],0xd
  41bae1:	stos   DWORD PTR es:[edi],eax
  41bae2:	rcr    al,1
  41bae4:	pushf  
  41bae5:	sub    al,0x70
  41bae7:	push   ebx
  41bae8:	enter  0x735e,0x62
  41baec:	adc    al,0xa2
  41baee:	frstor [ebx+edi*2-0x52b38a75]
  41baf5:	jne    0x41ba9e
  41baf7:	outs   dx,DWORD PTR ds:[esi]
  41baf8:	ins    DWORD PTR es:[edi],dx
  41baf9:	mov    eax,0x48f77261
  41bafe:	pop    es
  41baff:	push   esi
  41bb00:	and    ecx,esp
  41bb02:	in     al,dx
  41bb03:	jle    0x41bac3
  41bb05:	in     al,0x74
  41bb07:	jecxz  0x41bb74
  41bb09:	pop    ds
  41bb0a:	mov    esi,0x5c752bf4
  41bb0f:	mul    ebx
  41bb11:	mov    ds:0x5ccb62a,eax
  41bb16:	mov    ch,0x32
  41bb18:	pop    ebx
  41bb19:	xchg   ecx,eax
  41bb1a:	lea    edx,[ebx+edi*4+0x30]
  41bb1e:	inc    edx
  41bb1f:	jmp    0xfecb:0xb5de74f6
  41bb26:	or     dh,ch
  41bb28:	cmp    al,0x49
  41bb2a:	xchg   ecx,eax
  41bb2b:	test   dl,bl
  41bb2d:	nop
  41bb2e:	jmp    0xb019afa7
  41bb33:	sub    ebx,ebp
  41bb35:	cmp    BYTE PTR [ebx-0x54],0x31
  41bb39:	push   cs
  41bb3a:	test   ebp,esi
  41bb3c:	mov    eax,DWORD PTR [eax+eax*4]
  41bb3f:	(bad)  
  41bb40:	sub    DWORD PTR [edx+0x7adcc0bb],ebp
  41bb46:	std    
  41bb47:	test   BYTE PTR [esi],0xc0
  41bb4a:	push   ebx
  41bb4b:	cmp    DWORD PTR ds:0x443029ae,eax
  41bb51:	jecxz  0x41bb64
  41bb53:	mov    dh,0x22
  41bb55:	push   edi
  41bb56:	add    al,0xb8
  41bb58:	add    eax,0x5358c87e
  41bb5d:	pop    ss
  41bb5e:	sbb    DWORD PTR [ebx],ecx
  41bb60:	icebp  
  41bb61:	or     BYTE PTR [ebp-0xe],0x98
  41bb65:	inc    edx
  41bb66:	pop    ebp
  41bb67:	or     eax,0x53e5ad1d
  41bb6c:	pop    eax
  41bb6d:	mov    bh,0x58
  41bb6f:	sbb    dl,ch
  41bb71:	test   eax,0x61ef9e1c
  41bb76:	jae    0x41bbdf
  41bb78:	bound  edx,QWORD PTR [esi+0x50]
  41bb7b:	sbb    al,dl
  41bb7d:	push   ecx
  41bb7e:	pop    edx
  41bb7f:	jle    0x41bba4
  41bb81:	sbb    eax,0xb19f6efd
  41bb86:	outs   dx,BYTE PTR ds:[esi]
  41bb87:	dec    ebx
  41bb88:	lock inc ebx
  41bb8a:	mov    esi,0x7261b4ae
  41bb8f:	in     al,0xd3
  41bb91:	xor    al,0x28
  41bb93:	imul   cx,ax,0x39
  41bb97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bb98:	jmp    0xc1250d6
  41bb9d:	rcr    DWORD PTR [ebp+ebp*2+0x73],1
  41bba1:	dec    esp
  41bba2:	jnp    0x41bbc1
  41bba4:	mov    ecx,0x94dcb961
  41bba9:	(bad)  
  41bbaa:	scas   eax,DWORD PTR es:[edi]
  41bbab:	push   ebp
  41bbac:	test   BYTE PTR [ebp+0x23],dh
  41bbaf:	pushf  
  41bbb0:	mov    ds:0xd3dd7072,al
  41bbb5:	out    0x66,eax
  41bbb7:	inc    ebx
  41bbb8:	retf   
  41bbb9:	arpl   cx,si
  41bbbb:	lock inc eax
  41bbbd:	(bad)  
  41bbbe:	xor    cl,BYTE PTR [eax+0x28ffe79f]
  41bbc4:	bound  edi,QWORD PTR [eax-0xb]
  41bbc7:	fcmovnbe st,st(1)
  41bbc9:	addr16 test al,0x88
  41bbcc:	int    0x38
  41bbce:	ds cmp eax,0xd0d0b97b
  41bbd4:	mov    dh,0xcf
  41bbd6:	(bad)  
  41bbd7:	jecxz  0x41bc30
  41bbd9:	lock lods eax,DWORD PTR ds:[esi]
  41bbdb:	mov    bl,0x7d
  41bbdd:	repnz xor al,0x2e
  41bbe0:	push   es
  41bbe1:	dec    ecx
  41bbe2:	je     0x41bba6
  41bbe4:	adc    ebp,ebp
  41bbe6:	ret    0x550c
  41bbe9:	sbb    al,0x36
  41bbeb:	loop   0x41bc13
  41bbed:	cs push ds
  41bbef:	xor    dl,al
  41bbf1:	cmp    al,dh
  41bbf3:	mov    esi,0xb5e50eb3
  41bbf8:	je     0x41bc27
  41bbfa:	cmp    ebx,DWORD PTR [ebp+0x5c]
  41bbfd:	inc    esp
  41bbfe:	xor    al,0x98
  41bc00:	or     edi,0x7d
  41bc03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc04:	and    edi,ecx
  41bc06:	imul   esp,eax,0xffffffa0
  41bc09:	cmc    
  41bc0a:	pop    ss
  41bc0b:	jno    0x41bbc2
  41bc0d:	and    bh,0x9d
  41bc10:	std    
  41bc11:	daa    
  41bc12:	jmp    0x41bb96
  41bc14:	cli    
  41bc15:	xchg   di,ax
  41bc17:	mov    DWORD PTR [ebp-0x33e383b5],ecx
  41bc1d:	add    dl,0x96
  41bc20:	mov    eax,DWORD PTR [edx-0x1fed08a3]
  41bc26:	jmp    0x13bbea50
  41bc2b:	out    0x75,al
  41bc2d:	imul   DWORD PTR [bx]
  41bc30:	and    eax,DWORD PTR [edx]
  41bc32:	mov    dl,0xaf
  41bc34:	mov    eax,0x7bceeadf
  41bc39:	test   al,0xaa
  41bc3b:	in     eax,0x9a
  41bc3d:	push   edx
  41bc3e:	pop    ecx
  41bc3f:	and    eax,0x2172ab1b
  41bc44:	add    eax,0xb6e9fab6
  41bc49:	push   edx
  41bc4a:	imul   esp,ecx,0xffffff90
  41bc4d:	jnp    0x41bc01
  41bc4f:	lahf   
  41bc50:	sbb    ch,BYTE PTR [edx-0x13]
  41bc53:	mov    ds:0xad8d476a,al
  41bc58:	dec    esp
  41bc59:	mov    ch,0x39
  41bc5b:	sub    DWORD PTR [edi],ebp
  41bc5d:	and    ecx,DWORD PTR [ecx-0x36]
  41bc60:	sbb    ebx,esi
  41bc62:	mov    ebx,0xfcc4a4e4
  41bc67:	retf   0x73bb
  41bc6a:	dec    edi
  41bc6b:	pop    esi
  41bc6c:	push   0xd7708de3
  41bc71:	sbb    ebp,esp
  41bc73:	cmp    DWORD PTR [ecx+0x4cb741b8],edx
  41bc79:	mov    al,0x14
  41bc7b:	adc    DWORD PTR [esi-0x513497b9],edi
  41bc81:	pusha  
  41bc82:	and    esi,DWORD PTR [edx]
  41bc84:	dec    esi
  41bc85:	jo     0x41bced
  41bc87:	sahf   
  41bc88:	inc    esi
  41bc89:	lock sub al,0x52
  41bc8c:	inc    ecx
  41bc8d:	mov    dl,0xa
  41bc8f:	(bad)  
  41bc90:	xor    BYTE PTR [ecx-0x66],cl
  41bc93:	cld    
  41bc94:	mov    bl,0x83
  41bc96:	loope  0x41bd0d
  41bc98:	inc    edi
  41bc99:	push   edx
  41bc9a:	xchg   esi,eax
  41bc9b:	xchg   edi,eax
  41bc9c:	test   al,0xbc
  41bc9e:	add    al,0xb8
  41bca0:	(bad)  ds:0x7e8f6ea2
  41bca6:	stos   BYTE PTR es:[edi],al
  41bca7:	(bad)  
  41bca8:	sub    DWORD PTR [eax+0xb6f41fa],edi
  41bcae:	push   ds
  41bcaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bcb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bcb1:	shl    DWORD PTR es:[esi],cl
  41bcb4:	inc    esi
  41bcb5:	in     eax,dx
  41bcb6:	mov    bh,BYTE PTR [ebx+0x68]
  41bcb9:	lahf   
  41bcba:	pushf  
  41bcbb:	bound  ebp,QWORD PTR [edx+0x2f]
  41bcbe:	sbb    eax,0x8e6a48f7
  41bcc3:	jbe    0x41bc7a
  41bcc5:	loop   0x41bd22
  41bcc7:	jo     0x41bd29
  41bcc9:	mov    ds,WORD PTR ds:0x8abc62ae
  41bccf:	push   ebx
  41bcd0:	adc    ebx,DWORD PTR [edi-0x378f498b]
  41bcd6:	nop
  41bcd7:	mov    al,0x24
  41bcd9:	jae    0x41bd2e
  41bcdb:	mov    ebp,0xd92ad6f6
  41bce0:	(bad)
  41bce4:	bound  edi,QWORD PTR [esi+0x8]
  41bce7:	rol    DWORD PTR [edx+0x6a],cl
  41bcea:	nop
  41bceb:	pop    ds
  41bcec:	and    DWORD PTR [eax-0x3221e02d],esp
  41bcf2:	mov    al,ds:0x97420f0
  41bcf7:	bound  esi,QWORD PTR [ebx]
  41bcf9:	popf   
  41bcfa:	inc    ebp
  41bcfb:	xchg   edx,eax
  41bcfc:	(bad)  
  41bcff:	or     esi,DWORD PTR [esi+0x17b1b9a4]
  41bd05:	jnp    0x41bd3d
  41bd07:	aam    0x38
  41bd09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd0a:	mov    esp,0x6ff0940
  41bd0f:	in     eax,0x45
  41bd11:	lods   al,BYTE PTR ds:[esi]
  41bd12:	bound  ecx,QWORD PTR [esi-0x3c]
  41bd15:	cmp    edi,DWORD PTR [edi+0x5f]
  41bd18:	sbb    bl,al
  41bd1a:	push   edx
  41bd1b:	pop    esp
  41bd1c:	loopne 0x41bd35
  41bd1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd1f:	mov    eax,0xb9cd8a78
  41bd24:	stos   BYTE PTR es:[edi],al
  41bd25:	push   esi
  41bd26:	or     eax,0xa713ad4f
  41bd2b:	mov    bl,0xce
  41bd2d:	and    ch,BYTE PTR [eax+0x2f]
  41bd30:	int    0x9d
  41bd32:	pop    esi
  41bd33:	push   esi
  41bd34:	sahf   
  41bd35:	scas   al,BYTE PTR es:[edi]
  41bd36:	xor    ebx,DWORD PTR [edx+0x4d]
  41bd39:	xor    BYTE PTR [ebx+0x70],al
  41bd3c:	adc    edx,DWORD PTR [edi]
  41bd3e:	lahf   
  41bd3f:	js     0x41bda9
  41bd41:	jae    0x41bd80
  41bd43:	cmp    edi,DWORD PTR ds:0x57194266
  41bd49:	pop    ds
  41bd4a:	fcom   QWORD PTR ds:0x46e60ad8
  41bd50:	popa   
  41bd51:	jb     0x41bce2
  41bd53:	xor    DWORD PTR [ebp+0x3f25ff2f],edi
  41bd59:	fidiv  DWORD PTR [ebp-0x8]
  41bd5c:	sub    DWORD PTR [edi+0x294eacc3],0xcfab07f9
  41bd66:	add    dh,ch
  41bd68:	jnp    0x41bd1c
  41bd6a:	sub    dl,ch
  41bd6c:	mov    cl,0xfc
  41bd6e:	mov    al,BYTE PTR ss:[eax-0x2012f574]
  41bd75:	xor    ah,0x62
  41bd78:	or     eax,0xd90c8d9f
  41bd7d:	repz inc esi
  41bd7f:	stc    
  41bd80:	pushf  
  41bd81:	inc    edx
  41bd82:	jnp    0x41bd58
  41bd84:	xor    eax,0xebb3547e
  41bd89:	les    esp,FWORD PTR cs:[edi-0xd]
  41bd8d:	xchg   esp,eax
  41bd8e:	loopne 0x41bd8b
  41bd90:	mov    ds:0xf52e17ca,al
  41bd95:	cli    
  41bd96:	mov    ch,BYTE PTR [edx-0x2eccec67]
  41bd9c:	lods   eax,DWORD PTR ds:[esi]
  41bd9d:	cdq    
  41bd9e:	and    eax,0x1b73f625
  41bda3:	mov    ebp,0xffa20bbc
  41bda8:	pop    ds
  41bda9:	lahf   
  41bdaa:	sbb    eax,0x7aa567e2
  41bdaf:	fmul   QWORD PTR [edx]
  41bdb1:	das    
  41bdb2:	cld    
  41bdb3:	sbb    BYTE PTR [eax],ch
  41bdb5:	fmul   st,st(2)
  41bdb7:	mov    es,WORD PTR [ebx-0x530eb4aa]
  41bdbd:	mov    ch,0xd9
  41bdbf:	test   al,0x22
  41bdc1:	psubsw mm0,QWORD PTR [ecx-0xa]
  41bdc5:	clc    
  41bdc6:	push   esp
  41bdc7:	cs xchg ebp,eax
  41bdc9:	inc    eax
  41bdca:	je     0x41bdb5
  41bdcc:	pop    ss
  41bdcd:	sub    BYTE PTR [edx+0x59],ah
  41bdd0:	inc    ebx
  41bdd1:	xchg   DWORD PTR [edx-0x3f],ecx
  41bdd4:	sub    al,0xe5
  41bdd6:	push   ds
  41bdd7:	push   ebx
  41bdd8:	outs   dx,DWORD PTR ds:[esi]
  41bdd9:	adc    al,0x75
  41bddb:	imul   ecx,DWORD PTR [ebx+0x35],0x2e8b9efb
  41bde2:	mov    ch,0x36
  41bde4:	rcl    DWORD PTR [esi+0x7a9fceb8],0x8c
  41bdeb:	jno    0x41be2d
  41bded:	ret    0xfbad
  41bdf0:	lds    esp,FWORD PTR [edi-0x18]
  41bdf3:	sub    edx,DWORD PTR [esi-0x6b1d9d35]
  41bdf9:	sbb    ebx,ecx
  41bdfb:	jne    0x41be0e
  41bdfd:	xchg   esp,eax
  41bdfe:	(bad)  
  41bdff:	(bad)  
  41be00:	xchg   edi,eax
  41be01:	mov    edi,0xa373a7f6
  41be06:	jne    0x41bd9e
  41be08:	lods   eax,DWORD PTR ds:[esi]
  41be09:	fld    TBYTE PTR [esi+ecx*8-0x39]
  41be0d:	loopne 0x41bda9
  41be0f:	data16 sub al,BYTE PTR [eax-0x5c]
  41be13:	inc    edx
  41be14:	stos   BYTE PTR es:[edi],al
  41be15:	test   DWORD PTR [eax+0x7489fa58],ecx
  41be1b:	mov    ch,ah
  41be1d:	sbb    DWORD PTR [edi+0x48ff3e2b],edi
  41be23:	shr    BYTE PTR [esi-0x3f],cl
  41be26:	and    dl,BYTE PTR [si+0x195b]
  41be2b:	cwde   
  41be2c:	into   
  41be2d:	in     eax,0x6e
  41be2f:	test   al,0xf1
  41be31:	mov    dl,BYTE PTR [ebx+0x55775a1a]
  41be37:	xchg   esp,eax
  41be38:	inc    esp
  41be39:	rol    DWORD PTR [esi],0x63
  41be3c:	mov    ebx,0x87eefbc4
  41be41:	push   ebp
  41be42:	ret    0xa15a
  41be45:	and    eax,0xd5776d1e
  41be4a:	stc    
  41be4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be4c:	and    BYTE PTR [edx+0x640cae1c],dh
  41be52:	mov    esp,eax
  41be54:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be56:	sahf   
  41be57:	in     eax,dx
  41be58:	ds dec esp
  41be5a:	add    eax,0x2c2e5f71
  41be5f:	in     eax,0x70
  41be61:	mov    eax,ds:0x6a160a95
  41be66:	aam    0x3e
  41be68:	sbb    BYTE PTR [edi-0x1c],ch
  41be6b:	pusha  
  41be6c:	les    eax,FWORD PTR [ecx+0x55]
  41be6f:	inc    ebp
  41be70:	xchg   esi,eax
  41be71:	inc    edx
  41be72:	in     al,0x13
  41be74:	sub    eax,0x6ba7c8d2
  41be79:	fsub   QWORD PTR [ecx+edx*1+0x19]
  41be7d:	mov    ebx,0x2d80fa50
  41be82:	outs   dx,DWORD PTR ds:[esi]
  41be83:	scas   al,BYTE PTR es:[edi]
  41be84:	mov    eax,ds:0xff1c72be
  41be89:	(bad)  
  41be8a:	ins    BYTE PTR es:[edi],dx
  41be8b:	mov    eax,ds:0xbfcbe667
  41be90:	retf   0xac7f
  41be93:	fldenv [ebx-0x14]
  41be96:	mov    al,ds:0x75a70296
  41be9b:	sbb    esi,DWORD PTR [esi-0x10]
  41be9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be9f:	adc    eax,0xf67f6ca4
  41bea4:	xor    ch,BYTE PTR [eax-0x54]
  41bea7:	hlt    
  41bea8:	xchg   esp,eax
  41bea9:	(bad)  
  41beab:	and    al,0x55
  41bead:	inc    esi
  41beae:	(bad)  
  41beaf:	sub    eax,0x54ef8815
  41beb4:	sub    BYTE PTR [ebx+0x2c],0x1d
  41beb8:	jg     0x41bee6
  41beba:	xor    esi,ecx
  41bebc:	mov    BYTE PTR ds:0xfab19126,0x5b
  41bec3:	aad    0x66
  41bec5:	rcr    DWORD PTR [esi-0x53],cl
  41bec8:	add    dl,BYTE PTR [eax]
  41beca:	pop    esp
  41becb:	sbb    eax,0x5a3239b6
  41bed0:	and    eax,0xc3168a68
  41bed5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bed6:	fwait
  41bed7:	jnp    0x41be64
  41bed9:	test   DWORD PTR [eax],ebx
  41bedb:	sub    al,0xe0
  41bedd:	adc    esi,ebx
  41bedf:	cld    
  41bee0:	mov    WORD PTR [edi],gs
  41bee2:	pop    edx
  41bee3:	inc    ecx
  41bee4:	es cs cld 
  41bee7:	aam    0xb0
  41bee9:	pop    es
  41beea:	xor    DWORD PTR [edx],ebp
  41beec:	mov    ds:0xb96f6d6f,al
  41bef1:	xor    al,0x79
  41bef3:	aas    
  41bef4:	fimul  WORD PTR [ebx-0x4]
  41bef7:	push   eax
  41bef8:	imul   eax,DWORD PTR [edx-0x21e75ca0],0x19
  41beff:	in     eax,dx
  41bf00:	or     DWORD PTR [eax],esp
  41bf02:	adc    DWORD PTR [edi+0x49551332],edi
  41bf08:	mov    eax,0xf0d8cbb4
  41bf0d:	(bad)  
  41bf0e:	jbe    0x41bf27
  41bf10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf11:	xor    DWORD PTR [ebx-0x51],esi
  41bf14:	fidiv  WORD PTR [ebx]
  41bf16:	push   eax
  41bf17:	dec    edi
  41bf18:	add    ah,BYTE PTR [edx-0x6c8691da]
  41bf1e:	mov    edx,0xfcc2dd21
  41bf23:	adc    BYTE PTR [ecx],dh
  41bf25:	pop    ds
  41bf26:	addr16 xchg edx,eax
  41bf28:	adc    BYTE PTR [esi+0x2b3c4901],bh
  41bf2e:	int3   
  41bf2f:	nop
  41bf30:	mov    ecx,0x44dfddfd
  41bf35:	adc    DWORD PTR [ebx+0x19],esp
  41bf38:	push   es
  41bf39:	das    
  41bf3a:	jg     0x41bf5e
  41bf3c:	sub    eax,0x2590b70d
  41bf41:	dec    edi
  41bf42:	mov    DWORD PTR [edx+0xa],ecx
  41bf45:	cdq    
  41bf46:	cld    
  41bf47:	adc    ebp,DWORD PTR [ebx]
  41bf49:	dec    eax
  41bf4a:	push   ecx
  41bf4b:	mov    esi,ebp
  41bf4d:	mov    ebp,0xd4ec86ef
  41bf52:	dec    edx
  41bf53:	add    cl,0xd7
  41bf56:	nop
  41bf57:	int    0xd1
  41bf59:	xchg   edi,eax
  41bf5a:	ss stos DWORD PTR es:[edi],eax
  41bf5c:	sbb    DWORD PTR [eax+0x30576804],esi
  41bf62:	push   cs
  41bf63:	adc    BYTE PTR [edx+0x607aff15],0x75
  41bf6a:	adc    edx,DWORD PTR [edx+edi*4]
  41bf6d:	or     cl,ah
  41bf6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf70:	les    edi,FWORD PTR [ebx]
  41bf72:	shl    BYTE PTR [edi],1
  41bf74:	mov    bl,0x25
  41bf76:	sbb    al,0x4a
  41bf78:	icebp  
  41bf79:	repz or eax,eax
  41bf7c:	out    0x23,al
  41bf7e:	test   DWORD PTR [ebp-0x5ffb4614],ebp
  41bf84:	cwde   
  41bf85:	mov    eax,0x8aab4edb
  41bf8a:	xor    BYTE PTR [esi-0x5b],0xf0
  41bf8e:	mov    ebx,0x9a67f00
  41bf93:	add    BYTE PTR [ebx+0x2411416c],0x8b
  41bf9a:	dec    edi
  41bf9b:	je     0x41bf57
  41bf9d:	push   0x3c
  41bf9f:	ret    0xbee1
  41bfa2:	cdq    
  41bfa3:	pop    esi
  41bfa4:	sbb    DWORD PTR [eax],esi
  41bfa6:	pop    ebp
  41bfa7:	mov    bh,0x1
  41bfa9:	or     ch,BYTE PTR [esi+0x30]
  41bfac:	nop
  41bfad:	jge    0x41bf39
  41bfaf:	jg     0x41c001
  41bfb1:	scas   eax,DWORD PTR es:[edi]
  41bfb2:	retf   0x9fe4
  41bfb5:	fwait
  41bfb6:	scas   al,BYTE PTR es:[edi]
  41bfb7:	mov    ecx,0xc395462f
  41bfbc:	cs test ah,ah
  41bfbf:	adc    eax,DWORD PTR [ecx*2+0x48a422ae]
  41bfc6:	retf   
  41bfc7:	cwde   
  41bfc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bfc9:	xchg   ebp,eax
  41bfca:	(bad)
  41bfcd:	pushf  
  41bfce:	pop    esi
  41bfcf:	mov    al,ds:0x4621c930
  41bfd4:	dec    esp
  41bfd5:	lahf   
  41bfd6:	adc    bl,ah
  41bfd8:	in     al,0x21
  41bfda:	dec    eax
  41bfdb:	ins    DWORD PTR es:[edi],dx
  41bfdc:	inc    ecx
  41bfdd:	imul   BYTE PTR [eax]
  41bfdf:	das    
  41bfe0:	dec    esp
  41bfe1:	or     DWORD PTR [edi+ecx*1],ebp
  41bfe4:	shl    esi,1
  41bfe6:	adc    DWORD PTR [ebx+ecx*4-0x28],ebx
  41bfea:	rol    DWORD PTR [ecx+0x65],1
  41bfed:	cmp    ch,dh
  41bfef:	sbb    ebx,DWORD PTR [eax+0x35]
  41bff2:	xor    ecx,DWORD PTR [eax-0x28132a93]
  41bff8:	xlat   BYTE PTR ds:[ebx]
  41bff9:	adc    BYTE PTR [ecx],cl
  41bffb:	dec    esi
  41bffc:	inc    edx
  41bffd:	clc    
  41bffe:	push   edi
  41bfff:	(bad)  
  41c000:	xchg   ebp,eax
  41c001:	arpl   bp,ax
  41c003:	sub    BYTE PTR [edx-0xa],0x32
  41c007:	add    dh,BYTE PTR [esi-0x20]
  41c00a:	shr    BYTE PTR [ecx+edx*8-0x3],0xce
  41c00f:	mov    dl,BYTE PTR [ecx-0x55]
  41c012:	stc    
  41c013:	cmc    
  41c014:	neg    DWORD PTR [ecx]
  41c016:	adc    ebx,edx
  41c018:	mov    cl,0x1f
  41c01a:	clc    
  41c01b:	push   ebx
  41c01c:	push   ebp
  41c01d:	lods   al,BYTE PTR ds:[esi]
  41c01e:	adc    eax,0xf9ea1f8
  41c023:	jo     0x41c053
  41c025:	retf   
  41c026:	test   al,0xe4
  41c028:	mov    esp,0x5a59aadb
  41c02d:	stos   DWORD PTR es:[edi],eax
  41c02e:	adc    eax,DWORD PTR [ebx-0x48]
  41c031:	rcr    esi,cl
  41c033:	ror    DWORD PTR [eax+ebx*2-0x28],1
  41c037:	(bad)  
  41c038:	(bad)  
  41c039:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c03a:	loop   0x41c045
  41c03c:	xor    DWORD PTR [esi],esp
  41c03e:	pop    edi
  41c03f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c040:	nop
  41c041:	sar    dl,0x81
  41c044:	push   ecx
  41c045:	add    ebp,0x256beddd
  41c04b:	mov    eax,ds:0xc3025d09
  41c050:	xor    ecx,DWORD PTR [ebp+0x5d32b39e]
  41c056:	retf   
  41c057:	and    eax,0x122d9906
  41c05c:	add    al,0x5d
  41c05e:	dec    esp
  41c05f:	jle    0x41c0bf
  41c061:	lods   al,BYTE PTR ds:[esi]
  41c062:	stc    
  41c063:	pop    ebx
  41c064:	or     ecx,edx
  41c066:	pop    edi
  41c067:	xchg   ebx,eax
  41c068:	push   esi
  41c069:	cdq    
  41c06a:	pop    esp
  41c06b:	mov    edx,0x7b289734
  41c070:	loop   0x41c049
  41c072:	arpl   WORD PTR [esi-0x16],dx
  41c075:	ins    DWORD PTR es:[edi],dx
  41c076:	jecxz  0x41bffc
  41c078:	das    
  41c079:	mov    DWORD PTR [edx-0x64],edx
  41c07c:	xchg   esp,eax
  41c07d:	test   al,0x8d
  41c07f:	cmp    eax,0xd66096f5
  41c084:	inc    ebx
  41c085:	mov    WORD PTR [ecx+0x35],ds
  41c088:	pop    ebx
  41c089:	pop    es
  41c08a:	cmc    
  41c08b:	punpckhwd mm4,QWORD PTR [ebp-0x76]
  41c08f:	ror    eax,1
  41c091:	xor    al,BYTE PTR [esi+esi*8]
  41c094:	jge    0x41c104
  41c096:	xchg   ebx,eax
  41c097:	cmp    esp,esp
  41c099:	add    esp,edx
  41c09b:	mov    cl,dh
  41c09d:	add    al,0x4b
  41c09f:	mov    esp,0x7b433c5d
  41c0a4:	xchg   esp,eax
  41c0a5:	aad    0xf7
  41c0a7:	lahf   
  41c0a8:	popf   
  41c0a9:	or     eax,0x38d832e6
  41c0ae:	imul   esi,DWORD PTR [eax],0x5a
  41c0b1:	push   edi
  41c0b2:	xlat   BYTE PTR ds:[ebx]
  41c0b3:	push   cs
  41c0b4:	std    
  41c0b5:	xchg   BYTE PTR [edi],dh
  41c0b7:	outs   dx,DWORD PTR ds:[esi]
  41c0b8:	push   ecx
  41c0b9:	sbb    BYTE PTR [eax-0x30dda4ae],dl
  41c0bf:	lds    ebx,FWORD PTR [esi]
  41c0c1:	daa    
  41c0c2:	or     BYTE PTR [ecx-0x2c1f7eb],cl
  41c0c8:	in     al,dx
  41c0c9:	mov    eax,0xa0eae458
  41c0ce:	xor    bh,BYTE PTR [ebx+0x6f]
  41c0d1:	pop    ecx
  41c0d2:	ins    BYTE PTR es:[edi],dx
  41c0d3:	jmp    0xbfcec8e6
  41c0d8:	int3   
  41c0d9:	sti    
  41c0da:	fnsave [ebp-0x54]
  41c0dd:	push   ecx
  41c0de:	jp     0x41c0d2
  41c0e0:	jl     0x41c0a7
  41c0e2:	mov    edx,edx
  41c0e4:	fcomp  DWORD PTR [edi-0x425658b2]
  41c0ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c0eb:	or     BYTE PTR [esi+0x7cc337f],dl
  41c0f1:	mov    esi,0x568cca49
  41c0f6:	sbb    BYTE PTR [eax+0x25],ah
  41c0f9:	adc    ch,BYTE PTR [edi-0x6]
  41c0fc:	int    0xee
  41c0fe:	lods   al,BYTE PTR ds:[esi]
  41c0ff:	push   0x7ad59ca1
  41c104:	aam    0x36
  41c106:	dec    eax
  41c107:	into   
  41c108:	mov    db7,ebx
  41c10b:	adc    bl,BYTE PTR [ecx]
  41c10d:	pusha  
  41c10e:	push   ebx
  41c10f:	dec    edx
  41c110:	ins    DWORD PTR es:[edi],dx
  41c111:	pop    ecx
  41c112:	dec    eax
  41c113:	pop    ebx
  41c114:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c115:	mov    ?,WORD PTR [eax+0x14b02e88]
  41c11b:	sahf   
  41c11c:	(bad)  
  41c11e:	pop    ebp
  41c11f:	xchg   edx,eax
  41c120:	aam    0xa9
  41c122:	mov    edx,0xb35c980d
  41c127:	sbb    eax,0xaf8495e0
  41c12c:	cmp    DWORD PTR [eax],0x31
  41c12f:	int    0x91
  41c131:	imul   eax,DWORD PTR [edi-0x5],0x3c453e18
  41c138:	xchg   BYTE PTR [edi+ecx*2],ch
  41c13b:	pop    edi
  41c13c:	loope  0x41c15b
  41c13e:	jle    0x41c1ad
  41c140:	mov    BYTE PTR [eax+0x2eaf466d],al
  41c146:	outs   dx,DWORD PTR ds:[esi]
  41c147:	mov    bl,BYTE PTR [ebx-0x132b87d4]
  41c14d:	dec    eax
  41c14e:	fdiv   QWORD PTR [ebx+0x3c]
  41c151:	iret   
  41c152:	inc    ebx
  41c153:	shr    BYTE PTR [ebx-0x3f],cl
  41c156:	je     0x41c17c
  41c158:	pop    esp
  41c159:	jns    0x41c14f
  41c15b:	repz ficom DWORD PTR [ebx+0x791eff8a]
  41c162:	adc    DWORD PTR [ecx+0x51],edi
  41c165:	cmp    eax,0xa0a95061
  41c16a:	jecxz  0x41c0f8
  41c16c:	stos   DWORD PTR es:[edi],eax
  41c16d:	inc    esi
  41c16e:	(bad)  
  41c16f:	dec    ebp
  41c170:	push   esp
  41c171:	add    edx,ebp
  41c173:	xlat   BYTE PTR ds:[ebx]
  41c174:	call   0xbfb2:0x13cba22a
  41c17b:	scas   al,BYTE PTR es:[edi]
  41c17c:	jns    0x41c1d2
  41c17e:	xlat   BYTE PTR ds:[ebx]
  41c17f:	rol    DWORD PTR [edi+0x61849e40],1
  41c185:	in     eax,0x23
  41c187:	mov    esp,0xd7f42022
  41c18c:	mov    ebp,0x6ab7c974
  41c191:	sub    al,0xf2
  41c193:	add    DWORD PTR [edi+ebx*1-0x11],0xffffffff
  41c198:	js     0x41c1f0
  41c19a:	ror    DWORD PTR cs:[ecx],cl
  41c19d:	aaa    
  41c19e:	inc    esi
  41c19f:	cmp    eax,0xbf3f1539
  41c1a4:	push   ss
  41c1a5:	loope  0x41c1c1
  41c1a7:	call   0x3cd4ee3d
  41c1ac:	inc    ecx
  41c1ad:	jae    0x41c16d
  41c1af:	adc    BYTE PTR [ebp-0x5a],al
  41c1b2:	xchg   edi,eax
  41c1b3:	ror    BYTE PTR [esi],1
  41c1b5:	xchg   esp,eax
  41c1b6:	sbb    BYTE PTR [esi],bl
  41c1b8:	std    
  41c1b9:	push   0x6218c174
  41c1be:	pop    es
  41c1bf:	push   ecx
  41c1c0:	scas   eax,DWORD PTR es:[edi]
  41c1c1:	mov    ds:0x87b8bdac,eax
  41c1c6:	(bad)  
  41c1c7:	mov    esp,0x3ec4ce5b
  41c1cc:	out    0x84,al
  41c1ce:	mov    ecx,0x1f4aca3c
  41c1d3:	mov    bl,0xc
  41c1d5:	leave  
  41c1d6:	inc    edi
  41c1d7:	dec    esp
  41c1d8:	push   ebp
  41c1d9:	js     0x41c19e
  41c1db:	xchg   ecx,eax
  41c1dc:	popa   
  41c1dd:	sbb    al,bl
  41c1df:	xchg   ebx,eax
  41c1e0:	xchg   esp,eax
  41c1e1:	mov    ds:0x242ecfe9,eax
  41c1e6:	(bad)  
  41c1e7:	cmp    ecx,DWORD PTR [edi]
  41c1e9:	das    
  41c1ea:	iret   
  41c1eb:	dec    ebp
  41c1ec:	outs   dx,DWORD PTR ds:[esi]
  41c1ed:	test   al,0x8
  41c1ef:	cmp    esi,DWORD PTR [eax+0x4b]
  41c1f2:	inc    ebp
  41c1f3:	jmp    0x1bf0:0x33d41f08
  41c1fa:	push   es
  41c1fb:	icebp  
  41c1fc:	je     0x41c1ae
  41c1fe:	out    0xc9,al
  41c200:	stos   DWORD PTR es:[edi],eax
  41c201:	scas   eax,DWORD PTR es:[edi]
  41c202:	jge    0x41c1f5
  41c204:	jmp    0x41c1a2
  41c206:	jmpw   0xaf2f
  41c20a:	sbb    al,0x27
  41c20c:	repnz mov esp,0xaf65afbc
  41c212:	shl    eax,0x9e
  41c215:	jmp    0x41c1f5
  41c217:	add    al,0x58
  41c219:	outs   dx,DWORD PTR ds:[esi]
  41c21a:	or     al,0x5
  41c21c:	xor    DWORD PTR [edi+0x792521e6],esi
  41c222:	jmp    0x2a7dc91b
  41c227:	popa   
  41c228:	xor    dh,BYTE PTR [edx-0x41f2f2a4]
  41c22e:	mov    al,ds:0xdfc0248d
  41c233:	aas    
  41c234:	stc    
  41c235:	fild   DWORD PTR [ebx+0x40]
  41c238:	jmp    0x41c25f
  41c23a:	in     al,0x79
  41c23c:	pop    eax
  41c23d:	mov    esp,0x4668f0d1
  41c242:	sub    BYTE PTR [ecx+0x2d40be],bl
  41c248:	std    
  41c249:	cmp    esp,DWORD PTR ds:0x9c0b4676
  41c24f:	loop   0x41c2c6
  41c251:	popa   
  41c252:	pop    ss
  41c253:	jp     0x41c24a
  41c255:	stos   DWORD PTR es:[edi],eax
  41c256:	mov    ebx,0x9b718f8e
  41c25b:	cli    
  41c25c:	xlat   BYTE PTR ds:[ebx]
  41c25d:	push   0xffffffb5
  41c25f:	xchg   esi,eax
  41c260:	sub    DWORD PTR [eax+0x75730765],edx
  41c266:	dec    edx
  41c267:	xchg   DWORD PTR [esi-0x4b],ebp
  41c26a:	pop    eax
  41c26b:	sbb    al,0xf7
  41c26d:	shl    BYTE PTR [ecx+0x46966972],1
  41c273:	in     al,0x4
  41c275:	ror    cl,1
  41c277:	stc    
  41c278:	outs   dx,BYTE PTR ds:[esi]
  41c279:	xchg   edx,eax
  41c27a:	leave  
  41c27b:	pop    es
  41c27c:	retf   
  41c27d:	mov    dl,0x6f
  41c27f:	push   0x1f0705a5
  41c284:	ror    ebx,cl
  41c286:	pop    ds
  41c287:	add    BYTE PTR [esi],cl
  41c289:	fmul   DWORD PTR [edx]
  41c28b:	xor    DWORD PTR [esi+0x7a],ebx
  41c28e:	leave  
  41c28f:	ja     0x41c245
  41c291:	pop    ebx
  41c292:	mov    eax,0xb52caec9
  41c297:	pop    ebx
  41c298:	jno    0x41c2e7
  41c29a:	jp     0x41c319
  41c29c:	and    BYTE PTR [eax],0x55
  41c29f:	(bad)  
  41c2a0:	nop
  41c2a1:	and    DWORD PTR [edx+0x15],ebx
  41c2a4:	xchg   edx,eax
  41c2a5:	and    bh,BYTE PTR [ebx+eax*4+0x40adce7]
  41c2ac:	iret   
  41c2ad:	idiv   DWORD PTR [ecx-0x1c0687b9]
  41c2b3:	rcr    bh,0xc4
  41c2b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c2b7:	jecxz  0x41c2dd
  41c2b9:	ja     0x41c2b1
  41c2bb:	rcl    ecx,0xc4
  41c2be:	pop    ebp
  41c2bf:	fldenv [ecx+0x6d]
  41c2c2:	mov    ah,0xc7
  41c2c4:	das    
  41c2c5:	aam    0x3
  41c2c7:	mov    ds:0xdb4eff32,al
  41c2cc:	mov    ebp,0x663d1d55
  41c2d1:	sbb    ecx,DWORD PTR [esi]
  41c2d3:	jge    0x41c2b5
  41c2d5:	inc    edx
  41c2d6:	pop    es
  41c2d7:	fs and eax,0xe39de939
  41c2dd:	inc    esi
  41c2de:	inc    edx
  41c2df:	cmp    eax,0x44041b98
  41c2e4:	xor    BYTE PTR [eax+0x47],0xc5
  41c2e8:	fbld   TBYTE PTR [esi-0x32]
  41c2eb:	pop    es
  41c2ec:	retf   
  41c2ed:	ret    
  41c2ee:	cs test al,0xcd
  41c2f1:	addr16 loope 0x41c321
  41c2f4:	aaa    
  41c2f5:	inc    ebp
  41c2f6:	pop    es
  41c2f7:	and    ah,BYTE PTR [ebx-0x5c]
  41c2fa:	sbb    esi,edx
  41c2fc:	lods   eax,DWORD PTR ds:[esi]
  41c2fd:	sub    esp,ebx
  41c2ff:	jnp    0x41c2b1
  41c301:	jle    0x41c2b8
  41c303:	scas   al,BYTE PTR es:[edi]
  41c304:	mov    bl,0x39
  41c306:	loop   0x41c29c
  41c308:	jnp    0x41c2f4
  41c30a:	loope  0x41c360
  41c30c:	call   0x2314417e
  41c311:	(bad)  
  41c313:	pushf  
  41c314:	push   ebp
  41c315:	sub    al,0x2b
  41c317:	or     al,0x32
  41c319:	outs   dx,BYTE PTR ds:[esi]
  41c31a:	xchg   esp,eax
  41c31b:	and    bl,BYTE PTR [ebx]
  41c31d:	pop    DWORD PTR [edi+0x3c294486]
  41c323:	xchg   esi,ecx
  41c325:	jle    0x41c32c
  41c327:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c328:	jecxz  0x41c304
  41c32a:	inc    ebp
  41c32b:	push   DWORD PTR [esi]
  41c32d:	xchg   ecx,eax
  41c32e:	jne    0x41c399
  41c330:	cmp    BYTE PTR [ebx+0x3f],bh
  41c333:	jp     0x41c312
  41c335:	cmp    DWORD PTR [ebx-0x75],esp
  41c338:	xchg   esi,eax
  41c339:	pop    ds
  41c33a:	dec    ecx
  41c33b:	sbb    bh,ah
  41c33d:	(bad)  
  41c33e:	mov    cl,0x80
  41c340:	adc    eax,0x3b7b4d05
  41c345:	ficomp WORD PTR [edx+0x3e01e9d7]
  41c34b:	pop    esp
  41c34c:	xor    ah,BYTE PTR [edi+eiz*4]
  41c34f:	add    al,0x57
  41c351:	push   ebx
  41c352:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c353:	outs   dx,DWORD PTR ds:[esi]
  41c354:	xor    edx,esp
  41c356:	imul   ebx,DWORD PTR ds:0x53c3be40,0xffffff99
  41c35d:	mov    dl,0xb1
  41c35f:	retf   0xc297
  41c362:	pop    edi
  41c363:	(bad)  
  41c364:	and    ebp,DWORD PTR [ecx+0x0]
  41c367:	lds    edx,FWORD PTR [ecx+0xb]
  41c36a:	mov    ecx,ss
  41c36c:	add    eax,DWORD PTR [esi-0x2e8659a3]
  41c372:	pusha  
  41c373:	(bad)  
  41c374:	sub    ebp,ebp
  41c376:	ret    0xbaa7
  41c379:	and    BYTE PTR [edi+ecx*4-0x25],ch
  41c37d:	hlt    
  41c37e:	xchg   ebx,eax
  41c37f:	in     al,dx
  41c380:	push   0x8f5337bd
  41c385:	cmp    cl,bh
  41c387:	daa    
  41c388:	xchg   ecx,eax
  41c389:	and    esp,DWORD PTR [ebp+ecx*1+0x38719d88]
  41c390:	fadd   st,st(1)
  41c392:	(bad)  
  41c393:	fwait
  41c394:	rcl    cl,1
  41c396:	xor    al,0xc8
  41c398:	jmp    0x8c02ea9d
  41c39d:	cmp    bh,BYTE PTR [eax-0x12]
  41c3a0:	aas    
  41c3a1:	repnz sub BYTE PTR cs:[esi],dh
  41c3a5:	jo     0x41c415
  41c3a7:	jmp    0x3a7d019f
  41c3ac:	imul   ebp,DWORD PTR [eax+0x3f],0xffffffe5
  41c3b0:	xor    al,0x2c
  41c3b2:	ror    bl,1
  41c3b4:	mov    dl,0x79
  41c3b6:	jbe    0x41c3e3
  41c3b8:	sub    al,0xa2
  41c3ba:	inc    esp
  41c3bb:	cmp    cl,BYTE PTR [ebp+0x1c7249e4]
  41c3c1:	or     ecx,0x48
  41c3c4:	mov    al,0xfd
  41c3c6:	cwde   
  41c3c7:	(bad)  [edi-0x6]
  41c3ca:	and    BYTE PTR [esi-0x7e],ch
  41c3cd:	stc    
  41c3ce:	lahf   
  41c3cf:	fs sti 
  41c3d1:	fwait
  41c3d2:	xor    BYTE PTR [edx],0x35
  41c3d5:	dec    eax
  41c3d6:	popa   
  41c3d7:	in     eax,0x23
  41c3d9:	mov    edi,0x311ca3e3
  41c3de:	(bad)  [ebp-0x6]
  41c3e1:	arpl   WORD PTR [edi],sp
  41c3e3:	mov    BYTE PTR [esi-0x111ffe9c],ah
  41c3e9:	mov    ds:0xfa0b200c,al
  41c3ee:	mov    ds:0xf518776a,al
  41c3f3:	cmp    esp,DWORD PTR [ebx]
  41c3f5:	(bad)  
  41c3f6:	or     eax,0x61d60a08
  41c3fb:	adc    al,0x18
  41c3fd:	out    dx,eax
  41c3fe:	mov    edx,ebx
  41c400:	adc    eax,0xee26e4bd
  41c405:	jmp    0x3373:0x7b400035
  41c40c:	mov    esp,0x6ec7682c
  41c411:	call   0x747f:0x9a400f82
  41c418:	sbb    DWORD PTR [edx],eax
  41c41a:	xchg   ebp,eax
  41c41b:	jl     0x41c402
  41c41d:	or     al,BYTE PTR [ebx-0x75cf1160]
  41c423:	retf   0x459c
  41c426:	push   esi
  41c427:	jb     0x41c472
  41c429:	out    0xe2,al
  41c42b:	add    ebp,DWORD PTR [ebx-0x2f96cb28]
  41c431:	sbb    dh,ah
  41c433:	sub    al,0x2b
  41c435:	sub    ah,dh
  41c437:	popf   
  41c438:	sub    eax,0x738c3362
  41c43d:	push   0xe
  41c43f:	jb     0x41c431
  41c441:	(bad)  
  41c442:	jl     0x41c440
  41c444:	sahf   
  41c445:	fstp   QWORD PTR [edi-0x18285266]
  41c44b:	cwde   
  41c44c:	inc    esp
  41c44d:	aaa    
  41c44e:	sbb    al,0xc0
  41c450:	inc    esp
  41c451:	sti    
  41c452:	iret   
  41c453:	fwait
  41c454:	shl    BYTE PTR [edi-0x34],0x54
  41c458:	shl    BYTE PTR [edi-0x17],cl
  41c45b:	fwait
  41c45c:	jmp    0x41c406
  41c45e:	scas   eax,DWORD PTR es:[edi]
  41c45f:	add    dl,BYTE PTR [ecx-0x564069b8]
  41c465:	jb     0x41c43b
  41c467:	push   edx
  41c468:	lahf   
  41c469:	scas   al,BYTE PTR es:[edi]
  41c46a:	enter  0x967a,0xa3
  41c46e:	cmp    DWORD PTR [ebx+eiz*8+0x72],ebx
  41c472:	inc    ebx
  41c473:	mov    ds:0x4cb48c41,eax
  41c478:	popa   
  41c479:	and    al,0x17
  41c47b:	imul   ebx,DWORD PTR [esp+ecx*8+0x2b2b577b],0xffffffa8
  41c483:	jne    0x41c418
  41c485:	in     al,0x2f
  41c487:	adc    ah,bh
  41c489:	jo     0x4a6950e7
  41c48f:	jnp    0x41c4ae
  41c491:	(bad)  
  41c492:	push   ebp
  41c493:	mov    dl,bh
  41c495:	dec    ecx
  41c496:	xabort 0xa8
  41c499:	sbb    BYTE PTR [edi-0x7a],cl
  41c49c:	mov    edx,0x71a6b7e2
  41c4a1:	rcr    DWORD PTR [ebp+0x7a],0xdb
  41c4a5:	cmp    dl,0x84
  41c4a8:	add    ecx,DWORD PTR [ebx]
  41c4aa:	fneni(8087 only) 
  41c4ac:	fldenv [esi-0x78d81b65]
  41c4b2:	stos   BYTE PTR es:[edi],al
  41c4b3:	pop    esi
  41c4b4:	rcl    DWORD PTR cs:[ebp-0x222df4ae],cl
  41c4bb:	xchg   DWORD PTR [ecx+ecx*4],ecx
  41c4be:	stc    
  41c4bf:	(bad)  
  41c4c0:	scas   al,BYTE PTR es:[edi]
  41c4c1:	popf   
  41c4c2:	inc    edx
  41c4c3:	inc    esp
  41c4c4:	bound  edx,QWORD PTR [ebp+0x772995bb]
  41c4ca:	lock (bad) 
  41c4cd:	add    BYTE PTR [eax+0x7dfd86e4],bl
  41c4d3:	inc    edi
  41c4d4:	shl    ecx,0xd5
  41c4d7:	mov    BYTE PTR [esi-0x2e],al
  41c4da:	cmovp  edi,DWORD PTR [ecx-0xb27c370]
  41c4e1:	sti    
  41c4e2:	inc    edx
  41c4e3:	mov    esp,0x65d1eb01
  41c4e8:	adc    eax,0x33317707
  41c4ed:	sbb    al,0x82
  41c4ef:	dec    ebx
  41c4f0:	cs ror ebx,1
  41c4f3:	mov    BYTE PTR [ebx+0x7f],cl
  41c4f6:	push   esi
  41c4f7:	dec    esp
  41c4f8:	lea    esp,[eax]
  41c4fa:	idiv   edi
  41c4fc:	cmp    DWORD PTR [esp+esi*2-0x4f],esp
  41c500:	and    DWORD PTR [eax],esp
  41c502:	call   0x6c2b:0x12b0cfb5
  41c509:	iret   
  41c50a:	repz lock mov ecx,esi
  41c50e:	or     DWORD PTR [esp+esi*4],esp
  41c511:	imul   ecx,ebp,0xfffffff3
  41c514:	push   ds
  41c515:	xchg   DWORD PTR [edi],esi
  41c517:	sub    bl,ah
  41c519:	(bad)  
  41c51b:	mov    al,0x76
  41c51d:	mov    bh,0x73
  41c51f:	test   al,0x61
  41c521:	push   ds
  41c522:	out    0x72,eax
  41c524:	imul   esp,DWORD PTR [esi+0x37ca4c01],0xbe45ef2e
  41c52e:	dec    esp
  41c52f:	cdq    
  41c530:	push   0xb20e4f09
  41c535:	outs   dx,DWORD PTR ds:[esi]
  41c536:	inc    eax
  41c537:	or     al,0x18
  41c539:	mov    bh,0xce
  41c53b:	outs   dx,BYTE PTR ds:[esi]
  41c53c:	sub    al,BYTE PTR [ecx]
  41c53e:	ficomp DWORD PTR [ebp-0x58]
  41c541:	xor    eax,0x8c467db1
  41c546:	or     bl,cl
  41c548:	add    bh,bh
  41c54a:	pop    esi
  41c54b:	das    
  41c54c:	mov    bl,cl
  41c54e:	inc    DWORD PTR [edi]
  41c550:	fbstp  TBYTE PTR [ebp+0x48]
  41c553:	jmp    0x41c543
  41c555:	jbe    0x41c4eb
  41c557:	cmp    DWORD PTR [edi+0xe2b0687],esp
  41c55d:	inc    edx
  41c55e:	mov    dh,0xf8
  41c560:	pop    eax
  41c561:	pop    esi
  41c562:	stos   DWORD PTR es:[edi],eax
  41c563:	push   ebx
  41c564:	mov    ebp,DWORD PTR [esi-0x30eac200]
  41c56a:	pop    esi
  41c56b:	js     0x41c5b5
  41c56d:	jns    0x41c502
  41c56f:	ret    0x4c8b
  41c572:	neg    BYTE PTR [ecx+ebx*4+0x611fb701]
  41c579:	mov    fs,esi
  41c57b:	inc    esi
  41c57c:	dec    esp
  41c57d:	lahf   
  41c57e:	in     al,dx
  41c57f:	cwde   
  41c580:	add    edi,ebx
  41c582:	shl    DWORD PTR [ebx-0x27],cl
  41c585:	retf   
  41c586:	push   cs
  41c587:	sbb    eax,0xab0831bf
  41c58c:	mov    ah,0x75
  41c58e:	mov    eax,0x70f85630
  41c593:	xor    DWORD PTR [edi-0x50],edi
  41c596:	mov    edx,0xf175553b
  41c59b:	jb     0x41c534
  41c59d:	xlat   BYTE PTR ds:[ebx]
  41c59e:	out    0xd6,eax
  41c5a0:	lea    esi,[eax]
  41c5a2:	lock nop
  41c5a4:	pop    edx
  41c5a5:	cmp    bl,BYTE PTR [ecx-0x75]
  41c5a8:	and    DWORD PTR [edx+ebx*2-0x6ffc2468],0x91850935
  41c5b3:	shr    BYTE PTR [edi-0x26],0xc2
  41c5b7:	outs   dx,BYTE PTR ds:[esi]
  41c5b8:	(bad)  
  41c5b9:	aaa    
  41c5ba:	outs   dx,DWORD PTR ds:[esi]
  41c5bb:	jecxz  0x41c578
  41c5bd:	out    dx,al
  41c5be:	dec    ebx
  41c5bf:	test   DWORD PTR [ebx+0x22d9acd0],esi
  41c5c5:	loope  0x41c570
  41c5c7:	cmp    DWORD PTR [esi+edx*8-0x5f],edi
  41c5cb:	mov    al,ds:0xeeebbe6
  41c5d0:	push   ds
  41c5d1:	fwait
  41c5d2:	or     al,0xee
  41c5d4:	outs   dx,DWORD PTR ds:[esi]
  41c5d5:	sub    DWORD PTR [ebp+0x4227bdf2],esi
  41c5db:	cmc    
  41c5dc:	sbb    DWORD PTR [edx],edi
  41c5de:	jbe    0x41c582
  41c5e0:	jb     0x41c583
  41c5e2:	std    
  41c5e3:	cli    
  41c5e4:	dec    ebp
  41c5e5:	aas    
  41c5e6:	dec    esp
  41c5e7:	mov    esp,DWORD PTR [edx+0x1c]
  41c5ea:	cs inc edi
  41c5ec:	lahf   
  41c5ed:	and    al,0x9d
  41c5ef:	mov    dl,0xc
  41c5f1:	jnp    0x41c582
  41c5f3:	mov    ch,0x17
  41c5f5:	jmp    0x4784d410
  41c5fa:	stc    
  41c5fb:	mov    eax,ds:0xd63c7541
  41c600:	inc    ebx
  41c601:	mov    bh,0x5c
  41c603:	jecxz  0x41c5f9
  41c605:	mov    esp,DWORD PTR [ecx-0x60]
  41c608:	sar    BYTE PTR [ebx+0x64],1
  41c60b:	clc    
  41c60c:	xchg   esp,eax
  41c60d:	xor    DWORD PTR es:[ebx],esp
  41c610:	std    
  41c611:	xor    ah,BYTE PTR [ebp-0x2bfd6946]
  41c617:	xchg   ecx,eax
  41c618:	rcl    DWORD PTR [ebx],0xdd
  41c61b:	aam    0x17
  41c61d:	inc    edx
  41c61e:	lods   eax,DWORD PTR ds:[esi]
  41c620:	bnd jno 0x41c5cf
  41c623:	cwde   
  41c624:	xor    BYTE PTR [edx-0x3cbb1d96],ch
  41c62a:	push   ds
  41c62b:	in     al,dx
  41c62c:	pop    eax
  41c62d:	rcr    BYTE PTR ds:0x1c76355c,cl
  41c633:	popa   
  41c634:	dec    edx
  41c635:	lahf   
  41c636:	retf   0xdad
  41c639:	call   0x9aff9086
  41c63e:	pop    ebx
  41c63f:	xchg   ebp,eax
  41c640:	cli    
  41c641:	and    ah,BYTE PTR [ebx]
  41c643:	inc    ebx
  41c644:	cmp    DWORD PTR [eax+0x53],esp
  41c647:	sub    ebp,DWORD PTR [eax+edx*4-0x4d0baddd]
  41c64e:	repnz push ecx
  41c650:	mov    al,0x7b
  41c652:	call   0xa1de77dd
  41c657:	xor    esi,DWORD PTR [eax+edi*4+0x79d3f3c3]
  41c65e:	div    esp
  41c660:	and    DWORD PTR [ecx-0x42],ebp
  41c663:	pop    esp
  41c664:	test   bh,al
  41c666:	popf   
  41c667:	mov    ebp,DWORD PTR [ebp-0x76]
  41c66a:	cmp    DWORD PTR [eax],0x8a94b352
  41c670:	outs   dx,BYTE PTR ds:[esi]
  41c671:	mov    eax,DWORD PTR [esi+0x77b96e25]
  41c677:	inc    ecx
  41c678:	in     eax,dx
  41c679:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c67a:	out    dx,al
  41c67b:	push   esi
  41c67c:	xor    al,0xcc
  41c67e:	jmp    0x41c6b3
  41c680:	cmp    dl,ah
  41c682:	dec    edi
  41c683:	pop    edx
  41c684:	call   0x61326aa
  41c689:	jp     0x41c666
  41c68b:	jo     0x41c61c
  41c68d:	xchg   BYTE PTR [edi-0x1723db71],ch
  41c693:	sbb    ch,BYTE PTR [eax+0x2d]
  41c696:	call   0xba7c3047
  41c69b:	and    DWORD PTR [esi+0xf],0x62b566c9
  41c6a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c6a3:	jmp    0x41c67e
  41c6a5:	mov    ds:0x91ee46b5,al
  41c6aa:	mov    ch,0x94
  41c6ac:	data16 (bad) 
  41c6ae:	cs ins BYTE PTR es:[edi],dx
  41c6b0:	ret    0xcb77
  41c6b3:	inc    edi
  41c6b4:	das    
  41c6b5:	adc    al,0xb
  41c6b7:	push   eax
  41c6b8:	idiv   DWORD PTR [ecx]
  41c6ba:	(bad)  
  41c6bb:	loop   0x41c65d
  41c6bd:	es pop esp
  41c6bf:	inc    esi
  41c6c0:	pushf  
  41c6c1:	dec    esi
  41c6c2:	(bad)  
  41c6c3:	repnz nop
  41c6c5:	or     ebp,edi
  41c6c7:	xchg   ecx,eax
  41c6c8:	jl     0x41c6de
  41c6ca:	dec    edx
  41c6cb:	fld    DWORD PTR [ecx+0x53]
  41c6ce:	leave  
  41c6cf:	mov    esi,DWORD PTR [ebp+0x4f]
  41c6d2:	retf   
  41c6d3:	out    0x90,al
  41c6d5:	jnp    0x41c662
  41c6d7:	fldenv gs:[esi-0x20945a05]
  41c6de:	mov    esi,0x8ecc7fa1
  41c6e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c6e4:	inc    DWORD PTR [ebx-0x63]
  41c6e7:	dec    esi
  41c6e8:	lock pop ebx
  41c6ea:	bound  eax,QWORD PTR [ebx+0x1a94a7c4]
  41c6f0:	popf   
  41c6f1:	mov    ebx,0xa311789e
  41c6f6:	xchg   ebx,eax
  41c6f7:	sti    
  41c6f8:	imul   esp,DWORD PTR [ecx],0xd2b18dd2
  41c6fe:	inc    ecx
  41c6ff:	and    eax,0xf7dc33e3
  41c704:	pop    es
  41c705:	cmc    
  41c706:	shl    cl,0xad
  41c709:	jmp    0x785cc7a4
  41c70e:	cmp    DWORD PTR [eax-0x7517711b],esp
  41c714:	in     al,0x5b
  41c716:	dec    BYTE PTR [ebp+eax*2-0x6011da18]
  41c71d:	mov    ah,0xa3
  41c71f:	inc    ebp
  41c720:	mov    ds:0xbe18a10c,al
  41c725:	mov    dh,0x2c
  41c727:	leave  
  41c728:	arpl   WORD PTR [ecx+0x28],di
  41c72b:	aad    0x6a
  41c72d:	push   ebp
  41c72e:	popf   
  41c72f:	mov    al,0xea
  41c731:	and    eax,0x191b7269
  41c736:	je     0x41c70d
  41c738:	or     eax,0x740be813
  41c73d:	sahf   
  41c73e:	adc    DWORD PTR [ebp+0x529eb20b],ebp
  41c744:	out    0x74,eax
  41c746:	(bad)  
  41c747:	adc    al,0x4b
  41c749:	bound  esi,QWORD PTR ds:0xdb8da3cd
  41c74f:	mov    esp,0x1fddca6d
  41c754:	(bad)  [ebx+0x26]
  41c757:	ss add al,0x9f
  41c75a:	(bad)  
  41c75b:	lahf   
  41c75c:	jmp    0x7b3:0x6da86e2a
  41c763:	je     0x41c77f
  41c765:	mov    eax,ds:0xa0c6b83d
  41c76a:	mov    cl,0x78
  41c76c:	test   DWORD PTR [edx],edi
  41c76e:	mov    DWORD PTR [eax-0x57fdae12],edi
  41c774:	dec    ecx
  41c775:	fcomp  QWORD PTR [esi-0x80]
  41c778:	je     0x41c7da
  41c77a:	pop    ds
  41c77b:	dec    edx
  41c77c:	(bad)  
  41c77d:	cmp    al,0xc5
  41c77f:	push   0xa0b82255
  41c784:	pushf  
  41c785:	push   ebp
  41c786:	push   0xb4c11ff0
  41c78b:	sub    BYTE PTR [eax],al
  41c78d:	(bad)  
  41c78f:	mov    cs,WORD PTR [ebp+ebx*1-0x7034f13]
  41c796:	xchg   esi,eax
  41c797:	inc    edi
  41c798:	adc    al,0x46
  41c79a:	aas    
  41c79b:	push   ds
  41c79c:	ret    
  41c79d:	dec    ecx
  41c79e:	pushf  
  41c79f:	push   ebx
  41c7a0:	shl    BYTE PTR [esi-0x1b],cl
  41c7a3:	inc    BYTE PTR [edi-0x4c19078]
  41c7a9:	sbb    DWORD PTR [edx-0x6ceb85fc],0xfed042bf
  41c7b3:	sbb    bh,ah
  41c7b5:	push   ebx
  41c7b6:	push   ds
  41c7b7:	pop    ebx
  41c7b8:	inc    esi
  41c7b9:	inc    edx
  41c7ba:	lds    eax,FWORD PTR [eax]
  41c7bc:	retf   0x231
  41c7bf:	jno    0x41c797
  41c7c1:	adc    BYTE PTR [eax-0x24],cl
  41c7c4:	sbb    eax,DWORD PTR [esi+0x3c6b0dd5]
  41c7ca:	xchg   edx,eax
  41c7cb:	hlt    
  41c7cc:	sbb    esp,esp
  41c7ce:	cdq    
  41c7cf:	cmp    edx,DWORD PTR [ebx]
  41c7d1:	leave  
  41c7d2:	adc    eax,0x246a248e
  41c7d7:	call   0xebbc:0x82fa4d97
  41c7de:	js     0x41c854
  41c7e0:	add    ebx,ecx
  41c7e2:	cs dec ebx
  41c7e4:	popf   
  41c7e5:	ficom  DWORD PTR [ebx+0x57]
  41c7e8:	sub    dh,bh
  41c7ea:	test   eax,0x1273a50c
  41c7f0:	loop   0x41c7fb
  41c7f2:	test   DWORD PTR [esi+0x33],ecx
  41c7f5:	cmp    eax,0xefc1c2a
  41c7fa:	mov    edi,0x1a005d7a
  41c7ff:	pop    ecx
  41c800:	mov    eax,ds:0xf20e30c6
  41c805:	adc    al,0x4d
  41c807:	shr    DWORD PTR [esi+0x72],cl
  41c80a:	shr    BYTE PTR [esi-0x69182882],0x4e
  41c811:	nop
  41c812:	sub    ebp,DWORD PTR [ebx+0x407367b6]
  41c818:	jecxz  0x41c827
  41c81a:	imul   ecx,DWORD PTR [edi],0xffffffb3
  41c81d:	sbb    DWORD PTR [eax],0x8310b751
  41c823:	mov    ebp,0x22815028
  41c828:	fwait
  41c829:	enter  0x48fc,0xff
  41c82d:	leave  
  41c82e:	enter  0xa618,0xd5
  41c832:	or     DWORD PTR [edi-0x7607f1c1],eax
  41c838:	adc    al,0x0
  41c83a:	imul   BYTE PTR [eax-0x31]
  41c83d:	fist   WORD PTR [edi-0x2c]
  41c840:	cs std 
  41c842:	dec    ebp
  41c843:	sbb    ecx,edx
  41c845:	dec    esp
  41c846:	xchg   ebx,eax
  41c847:	push   cs
  41c848:	rcr    esi,cl
  41c84a:	jns    0x41c8ab
  41c84c:	sbb    ecx,ebp
  41c84e:	shl    DWORD PTR [edi-0x9a6c0b4],cl
  41c854:	or     DWORD PTR [ebp+eiz*8+0x59fb8acb],ebx
  41c85b:	fidiv  WORD PTR [eax-0x3c041395]
  41c861:	out    0xe6,eax
  41c863:	les    eax,FWORD PTR [edi]
  41c865:	and    bh,BYTE PTR [edi]
  41c867:	xor    eax,0xe9253b7d
  41c86c:	cmp    DWORD PTR [edx-0x6f],esi
  41c86f:	add    ecx,esp
  41c871:	outs   dx,DWORD PTR ds:[esi]
  41c872:	shl    ebx,1
  41c874:	adc    al,0x6e
  41c876:	xor    bh,BYTE PTR [ebx+0x5e9505e1]
  41c87c:	outs   dx,DWORD PTR ds:[esi]
  41c87d:	mov    bh,0xa9
  41c87f:	or     ah,BYTE PTR [esi+0x53932e3f]
  41c885:	and    eax,0xabb129eb
  41c88a:	out    dx,eax
  41c88b:	and    DWORD PTR [eax+0x1e705874],eax
  41c891:	mov    WORD PTR [ecx+ecx*8-0x6f20ae3],gs
  41c898:	mov    ds:0x47594a2d,eax
  41c89d:	ret    0x4570
  41c8a0:	push   ss
  41c8a1:	call   0x9e249146
  41c8a6:	mov    DWORD PTR ds:0x44d76549,ebx
  41c8ac:	and    al,0x78
  41c8ae:	ins    DWORD PTR es:[edi],dx
  41c8af:	sbb    DWORD PTR [ebx-0x56],ebp
  41c8b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c8b3:	jno    0x41c8ed
  41c8b5:	mov    edi,eax
  41c8b7:	cmp    DWORD PTR [ebx+esi*8+0xf],ebp
  41c8bb:	xor    eax,0xf164a575
  41c8c0:	aam    0xff
  41c8c2:	test   DWORD PTR [esi+edx*4-0x341fd5a1],eax
  41c8c9:	lds    eax,FWORD PTR [ebx+0x66e9226]
  41c8cf:	adc    al,0xae
  41c8d1:	retf   
  41c8d2:	fild   WORD PTR [ebp+0x54540665]
  41c8d8:	xchg   esp,eax
  41c8d9:	push   ebp
  41c8da:	out    dx,eax
  41c8db:	inc    edx
  41c8dc:	outs   dx,DWORD PTR ds:[esi]
  41c8dd:	mov    esi,0xd3b5fefc
  41c8e2:	test   eax,0x1068cbe5
  41c8e7:	pop    es
  41c8e8:	pop    ebp
  41c8e9:	pusha  
  41c8ea:	ds in  eax,dx
  41c8ec:	out    0x8c,eax
  41c8ee:	xor    dh,BYTE PTR [edi-0x4f]
  41c8f1:	bound  ecx,QWORD PTR [eax-0x7a]
  41c8f4:	sar    al,cl
  41c8f6:	div    DWORD PTR [eax]
  41c8f8:	push   0xffffff86
  41c8fa:	cmp    bh,cl
  41c8fc:	out    dx,al
  41c8fd:	retf   0x9e7
  41c900:	push   cs
  41c901:	and    eax,0xf5baa6cc
  41c906:	aaa    
  41c907:	mov    al,0x31
  41c909:	adc    edx,DWORD PTR [esp+ecx*8-0x60575e6b]
  41c910:	xchg   ebp,eax
  41c911:	or     eax,0xf962e9ea
  41c916:	jl     0x41c8d6
  41c918:	jmp    0x41c8da
  41c91a:	js     0x41c89f
  41c91c:	fcmovnbe st,st(7)
  41c91e:	adc    edi,DWORD PTR [ebp-0x7bcb6418]
  41c924:	xlat   BYTE PTR ds:[ebx]
  41c925:	adc    eax,0x6388559c
  41c92a:	push   ss
  41c92b:	aad    0xa2
  41c92d:	fwait
  41c92e:	shl    esp,0xc2
  41c931:	dec    esp
  41c932:	fidiv  DWORD PTR [eax-0x15f2c104]
  41c938:	in     al,0x65
  41c93a:	daa    
  41c93b:	ret    0xa2f3
  41c93e:	sub    eax,0x42be0f68
  41c943:	rcl    DWORD PTR [eax+edx*1+0x74bc7ef0],0xe6
  41c94b:	aam    0x11
  41c94d:	or     dl,BYTE PTR [ecx+0x1d]
  41c950:	adc    eax,edx
  41c952:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c953:	popa   
  41c954:	mov    eax,ds:0xa336b4d1
  41c959:	(bad)  [ebx+0x1]
  41c95c:	sti    
  41c95d:	sub    edi,ebp
  41c95f:	pop    ds
  41c960:	ins    BYTE PTR es:[edi],dx
  41c961:	mul    BYTE PTR ds:[ecx+0x65]
  41c965:	add    al,0xe0
  41c967:	mov    ch,0x3c
  41c969:	dec    ebx
  41c96a:	out    dx,eax
  41c96b:	pop    ss
  41c96c:	ins    DWORD PTR es:[edi],dx
  41c96d:	push   es
  41c96e:	mov    ebp,0x34c6742a
  41c973:	cmp    bh,BYTE PTR [ecx-0x15]
  41c976:	aad    0xe0
  41c978:	push   ds
  41c979:	daa    
  41c97a:	push   ss
  41c97b:	outs   dx,DWORD PTR ds:[esi]
  41c97c:	xor    DWORD PTR [esi+esi*1-0x5b],esp
  41c980:	in     al,dx
  41c981:	add    eax,DWORD PTR [eax+0x4b]
  41c984:	mov    esp,0x2feabddf
  41c989:	mov    DWORD PTR [ebx+0x45e37fc3],ebp
  41c98f:	pop    ecx
  41c990:	sub    al,0x87
  41c992:	add    ah,BYTE PTR [ebp-0x14]
  41c995:	ficomp WORD PTR [ebp-0x7916df03]
  41c99b:	push   esp
  41c99c:	mov    BYTE PTR [edx],ah
  41c99e:	mov    ecx,0xdc57c2c8
  41c9a3:	daa    
  41c9a4:	mov    ds:0x3efad073,al
  41c9a9:	adc    cl,BYTE PTR [edx]
  41c9ab:	in     eax,dx
  41c9ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c9ad:	pop    es
  41c9ae:	in     eax,dx
  41c9af:	sar    BYTE PTR [edx+0x73],0x23
  41c9b3:	pop    edx
  41c9b4:	retf   0x2766
  41c9b7:	aam    0x45
  41c9b9:	clc    
  41c9ba:	dec    ecx
  41c9bb:	shl    BYTE PTR [esp+ebp*1-0x6b3c14bd],0x15
  41c9c3:	xchg   ecx,eax
  41c9c4:	or     ch,BYTE PTR [edi-0x2ab26b70]
  41c9ca:	retf   
  41c9cb:	(bad)  
  41c9cc:	fs xchg edi,eax
  41c9ce:	lds    ecx,FWORD PTR [edi+0x579e55]
  41c9d4:	or     ah,0x5d
  41c9d7:	push   edx
  41c9d8:	hlt    
  41c9d9:	(bad)  
  41c9da:	push   eax
  41c9db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c9dc:	pusha  
  41c9dd:	imul   DWORD PTR [esi]
  41c9df:	mov    dh,0x6d
  41c9e1:	mov    ebp,0x11663dd1
  41c9e6:	xchg   edx,eax
  41c9e7:	xor    DWORD PTR [edx],esi
  41c9e9:	js     0x41c997
  41c9eb:	sub    ebp,esp
  41c9ed:	lods   eax,DWORD PTR ds:[esi]
  41c9ee:	cmp    eax,0xee848f6
  41c9f3:	dec    ecx
  41c9f4:	xchg   ebp,eax
  41c9f5:	int    0x16
  41c9f7:	add    DWORD PTR [eax+0x1ff91718],esi
  41c9fd:	adc    BYTE PTR [ecx+0x3af78c27],bh
  41ca03:	shl    DWORD PTR [ebx+0x68dd26dd],1
  41ca09:	or     al,0x2d
  41ca0b:	jmp    0xd199f5f
  41ca10:	outs   dx,BYTE PTR ds:[esi]
  41ca11:	add    ah,BYTE PTR [edx-0x70b3b52]
  41ca17:	pop    ecx
  41ca18:	and    al,0x9a
  41ca1a:	(bad)  
  41ca1b:	push   eax
  41ca1c:	jmp    0x34f7:0x2dfdafcc
  41ca23:	les    ebp,FWORD PTR [edi+0x36]
  41ca26:	das    
  41ca27:	push   eax
  41ca28:	ins    DWORD PTR es:[edi],dx
  41ca29:	push   ss
  41ca2a:	pop    edi
  41ca2b:	add    eax,0x67eaf5b6
  41ca30:	xor    DWORD PTR [esi-0x4f],ecx
  41ca33:	push   cs
  41ca34:	jmp    0x875:0xbdb168d7
  41ca3b:	loope  0x41ca89
  41ca3d:	test   eax,0xbd3a3187
  41ca42:	sahf   
  41ca43:	dec    edi
  41ca44:	rol    DWORD PTR [esi+ecx*4-0x588661f3],cl
  41ca4b:	inc    esp
  41ca4c:	jns    0x41ca3d
  41ca4e:	enter  0xc10,0x10
  41ca52:	into   
  41ca53:	mov    DWORD PTR [eax-0x74],0x27335ab
  41ca5a:	popa   
  41ca5b:	push   ds
  41ca5c:	fs aad 0xaf
  41ca5f:	sar    DWORD PTR ds:0x3da09a99,cl
  41ca65:	sub    al,0x6e
  41ca67:	mov    bl,0xe5
  41ca69:	jo     0x41caae
  41ca6b:	ja     0x41ca97
  41ca6d:	stc    
  41ca6e:	bound  edx,QWORD PTR [ebx+0x0]
  41ca71:	pop    eax
  41ca72:	pop    esp
  41ca73:	cmc    
  41ca74:	adc    DWORD PTR fs:[edi+0x1e99da65],ecx
  41ca7b:	xor    al,0x9a
  41ca7d:	bound  ebp,QWORD PTR [edi+0x107fc4ef]
  41ca83:	pushf  
  41ca84:	(bad)  
  41ca85:	loopne 0x41ca59
  41ca87:	mov    DWORD PTR ds:0x5040ff2d,esp
  41ca8d:	ins    BYTE PTR es:[edi],dx
  41ca8e:	adc    BYTE PTR [edi],dh
  41ca90:	cld    
  41ca91:	xor    DWORD PTR [ebx+0x41],esp
  41ca94:	mov    ah,BYTE PTR [edx]
  41ca96:	(bad)  
  41ca97:	sub    DWORD PTR [edi+0xed71b6f],0x6f
  41ca9e:	mov    cl,0xec
  41caa0:	xor    eax,0x76bdeb55
  41caa5:	and    al,0x59
  41caa7:	test   eax,0x32efbc23
  41caac:	in     al,0x39
  41caae:	(bad)  
  41caaf:	iret   
  41cab0:	sub    edx,DWORD PTR [edx-0x3e]
  41cab3:	aad    0x4e
  41cab5:	call   0x286e7396
  41caba:	pop    ebx
  41cabb:	pop    eax
  41cabc:	in     eax,0xa3
  41cabe:	test   DWORD PTR [edi+0x448d6af5],esp
  41cac4:	pop    eax
  41cac5:	sbb    ebp,ebx
  41cac7:	xor    esi,DWORD PTR [ecx+ecx*8+0x6b6b2472]
  41cace:	xlat   BYTE PTR ds:[ebx]
  41cacf:	cmp    al,0x8a
  41cad1:	ficomp WORD PTR [edi-0x27]
  41cad4:	push   es
  41cad5:	jp     0x41cac4
  41cad7:	(bad)  
  41cad8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cad9:	clc    
  41cada:	js     0x41cb15
  41cadc:	jecxz  0x41ca84
  41cade:	xor    bl,BYTE PTR [eax]
  41cae0:	xor    al,0x6
  41cae2:	pusha  
  41cae3:	mov    ch,0x2e
  41cae5:	inc    esi
  41cae6:	add    bh,al
  41cae8:	xchg   edi,eax
  41cae9:	jo     0x41caa6
  41caeb:	sar    al,0xb4
  41caee:	mov    edx,eax
  41caf0:	push   cs
  41caf1:	add    edi,DWORD PTR [eax+0x73cbc637]
  41caf7:	ret    
  41caf8:	or     bl,BYTE PTR [edi+0x2c]
  41cafb:	push   eax
  41cafc:	dec    ebp
  41cafd:	add    ebp,DWORD PTR [ecx-0x54]
  41cb00:	test   bh,ah
  41cb02:	push   0x20
  41cb04:	jecxz  0x41cb64
  41cb06:	stc    
  41cb07:	out    dx,eax
  41cb08:	jecxz  0x41cb6c
  41cb0a:	push   cs
  41cb0b:	repnz out dx,eax
  41cb0d:	fcom   QWORD PTR [edx+0x2b]
  41cb10:	js     0x41caf6
  41cb12:	lahf   
  41cb13:	call   0x278a57ac
  41cb18:	and    al,0x3e
  41cb1a:	and    al,BYTE PTR [ebp+0x57]
  41cb1d:	cld    
  41cb1e:	mov    edx,0x2f95ccf1
  41cb23:	or     BYTE PTR [ebx],cl
  41cb25:	mov    eax,DWORD PTR [ecx]
  41cb27:	test   eax,0xd728a936
  41cb2c:	lock retf 0xcab5
  41cb30:	enter  0xd85d,0x26
  41cb34:	jns    0x41cb0a
  41cb36:	jbe    0x41cb1a
  41cb38:	out    0xc2,eax
  41cb3a:	cmp    WORD PTR [eax-0x57],0xffac
  41cb3f:	repnz inc ecx
  41cb41:	jecxz  0x41cb44
  41cb43:	adc    dh,BYTE PTR [esp+edi*4]
  41cb46:	push   ecx
  41cb47:	outs   dx,BYTE PTR ds:[esi]
  41cb48:	push   0xffffffe4
  41cb4a:	adc    DWORD PTR [eax+0x72c59037],esp
  41cb50:	jge    0x41cb42
  41cb52:	fcom   st(1)
  41cb54:	pop    edx
  41cb55:	lahf   
  41cb56:	repz lock pop ds
  41cb59:	(bad)
  41cb5d:	mov    cl,0xe6
  41cb5f:	lods   eax,DWORD PTR ds:[esi]
  41cb60:	pop    eax
  41cb61:	repnz popf 
  41cb63:	rcl    BYTE PTR [esi-0x5],1
  41cb66:	pop    ss
  41cb67:	int3   
  41cb68:	jmp    0x124e:0xfaeda0de
  41cb6f:	xlat   BYTE PTR ds:[ebx]
  41cb70:	ds mov eax,0x6dae301d
  41cb76:	sub    bh,0xd0
  41cb79:	lods   eax,DWORD PTR ds:[esi]
  41cb7a:	adc    DWORD PTR [edx+eiz*2],edx
  41cb7d:	jnp    0x41cb6f
  41cb7f:	test   BYTE PTR ss:[ecx+0x3e],ah
  41cb83:	dec    esp
  41cb84:	xchg   BYTE PTR [edi-0x4a7f2e1],dh
  41cb8a:	popa   
  41cb8b:	mov    eax,0x3cf537b2
  41cb90:	push   ebx
  41cb91:	cmp    BYTE PTR [edx-0x347d7a7b],dl
  41cb97:	push   esi
  41cb98:	push   esi
  41cb99:	mov    dl,0x7d
  41cb9b:	shr    DWORD PTR [esi-0xb],0x3f
  41cb9f:	inc    esp
  41cba0:	(bad)  
  41cba1:	ins    DWORD PTR es:[edi],dx
  41cba2:	out    0x7b,eax
  41cba4:	test   eax,0x263521b1
  41cba9:	jmp    0x41cbad
  41cbab:	dec    edx
  41cbac:	pop    eax
  41cbad:	xor    al,0x2a
  41cbaf:	fbstp  TBYTE PTR [ebp-0x31214ba8]
  41cbb5:	sub    al,BYTE PTR [ebx]
  41cbb7:	les    esi,FWORD PTR [ebx]
  41cbb9:	daa    
  41cbba:	jmp    0x49ae0122
  41cbbf:	mov    ss,ebx
  41cbc1:	pop    es
  41cbc2:	push   0xf0531a40
  41cbc7:	retf   0xa221
  41cbca:	jl     0x41cb5a
  41cbcc:	fst    QWORD PTR [edx]
  41cbce:	iret   
  41cbcf:	jne    0x41cb99
  41cbd1:	out    0xcc,al
  41cbd3:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  41cbd5:	ffree  st(4)
  41cbd7:	cmp    eax,0xedd1914d
  41cbdc:	push   edx
  41cbdd:	cwde   
  41cbde:	xchg   esi,eax
  41cbdf:	mov    esp,0x7f41489a
  41cbe4:	(bad)  
  41cbe5:	shl    BYTE PTR [esi-0x683f7cc7],0x87
  41cbec:	xor    al,0x11
  41cbee:	rcl    DWORD PTR [edi],1
  41cbf0:	or     al,0xf1
  41cbf2:	hlt    
  41cbf3:	stos   DWORD PTR es:[edi],eax
  41cbf4:	inc    ebx
  41cbf5:	loope  0x41cbdd
  41cbf7:	add    DWORD PTR [edi+0x1abd99e8],edi
  41cbfd:	xchg   edi,eax
  41cbfe:	cwde   
  41cbff:	xor    DWORD PTR [edi-0x17],esp
  41cc02:	jp     0x41cbad
  41cc04:	mov    al,ds:0x8af13144
  41cc09:	ins    DWORD PTR es:[edi],dx
  41cc0a:	pop    edx
  41cc0b:	pop    es
  41cc0c:	int3   
  41cc0d:	fadd   QWORD PTR [ecx]
  41cc0f:	(bad)  
  41cc11:	lock retf 
  41cc13:	loope  0x41cc14
  41cc15:	loopne 0x41cbb0
  41cc17:	pop    ebx
  41cc18:	add    BYTE PTR [ebp+eax*2+0x18],ch
  41cc1c:	out    dx,eax
  41cc1d:	clc    
  41cc1e:	xchg   DWORD PTR [edx-0x7a],edx
  41cc21:	jmp    0x151ab647
  41cc26:	mov    eax,0x9ecd1cf3
  41cc2b:	cmp    eax,0x9921210f
  41cc30:	(bad)  
  41cc31:	jmp    0x4cfa:0x86917ba9
  41cc38:	or     DWORD PTR [edx-0x1d74ec23],ebp
  41cc3e:	sub    DWORD PTR [edx-0x77c56eaf],ebx
  41cc44:	sbb    bh,bl
  41cc46:	xor    BYTE PTR [esi*1-0x6bdb4d32],0xa3
  41cc4e:	mov    gs,WORD PTR [eax]
  41cc50:	adc    DWORD PTR [eax],edi
  41cc52:	pcmpeqw mm1,QWORD PTR [esi-0x1367116a]
  41cc59:	cmc    
  41cc5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc5b:	gs out dx,al
  41cc5d:	push   eax
  41cc5e:	and    BYTE PTR [ecx+0x20],ah
  41cc61:	sti    
  41cc62:	pop    esp
  41cc63:	mov    ds:0xb5d16a9a,al
  41cc68:	fidivr WORD PTR [edi]
  41cc6a:	push   edx
  41cc6b:	jecxz  0x41cc5c
  41cc6d:	stc    
  41cc6e:	test   ecx,eax
  41cc70:	pop    ss
  41cc71:	lds    eax,FWORD PTR [edx+0x13f738b7]
  41cc77:	or     edi,0xe112ee34
  41cc7d:	push   eax
  41cc7e:	fwait
  41cc7f:	loope  0x41cca0
  41cc81:	mov    dh,0xbe
  41cc83:	adc    al,0xbc
  41cc85:	in     al,dx
  41cc86:	jp     0x41cc64
  41cc88:	sub    eax,0x40045b18
  41cc8d:	popf   
  41cc8e:	push   ecx
  41cc8f:	(bad)  
  41cc91:	icebp  
  41cc92:	or     eax,0x2d7e0442
  41cc97:	popf   
  41cc98:	ins    DWORD PTR es:[edi],dx
  41cc99:	jle    0x41ccac
  41cc9b:	mov    bh,0xe2
  41cc9d:	dec    ebp
  41cc9e:	lea    ecx,cs:[ebx]
  41cca1:	xor    BYTE PTR [edx-0x57],cl
  41cca4:	adc    ecx,DWORD PTR [edi+0x14a2c5e1]
  41ccaa:	dec    ebp
  41ccab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ccac:	fwait
  41ccad:	pop    edi
  41ccae:	cld    
  41ccaf:	call   FWORD PTR [edi]
  41ccb1:	cmp    eax,0xf78f2489
  41ccb6:	nop
  41ccb7:	sti    
  41ccb8:	xchg   edi,eax
  41ccb9:	loopne 0x41ccbc
  41ccbb:	cld    
  41ccbc:	add    DWORD PTR [ebp+0x478fe592],0xffffffc5
  41ccc3:	push   ebx
  41ccc4:	mov    ch,0x6b
  41ccc6:	cmp    eax,0x134640dc
  41cccb:	mov    bl,0x72
  41cccd:	scas   eax,DWORD PTR es:[edi]
  41ccce:	adc    BYTE PTR [edx-0x3e41f21a],0x6e
  41ccd5:	outs   dx,BYTE PTR ds:[esi]
  41ccd6:	mov    bl,0x7
  41ccd8:	out    dx,al
  41ccd9:	stc    
  41ccda:	call   0xfcd3:0x6b72771c
  41cce1:	aad    0xc6
  41cce3:	cdq    
  41cce4:	push   es
  41cce5:	cmp    al,0xeb
  41cce7:	test   al,0x0
  41cce9:	pop    ebx
  41ccea:	xchg   ebp,eax
  41cceb:	repnz xor BYTE PTR [edi-0x5d],0xb8
  41ccf0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ccf1:	or     al,0x45
  41ccf3:	sub    eax,0x3aea2807
  41ccf8:	mov    dh,0x99
  41ccfa:	mov    eax,ds:0x3c65a82d
  41ccff:	shl    DWORD PTR [eax],cl
  41cd01:	es xor eax,0x66cd47f4
  41cd07:	sbb    esi,DWORD PTR [ebx+0x2c]
  41cd0a:	call   0xc92faa9d
  41cd0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd10:	sbb    DWORD PTR [eax+0xc6802a4],0x3d0bc969
  41cd1a:	out    dx,eax
  41cd1b:	jo     0x41cd42
  41cd1d:	xor    DWORD PTR fs:[edi],ecx
  41cd20:	mov    bl,0x29
  41cd22:	or     DWORD PTR [edx],edx
  41cd24:	and    ecx,esp
  41cd26:	or     al,0xf7
  41cd28:	sahf   
  41cd29:	ins    BYTE PTR es:[edi],dx
  41cd2a:	inc    eax
  41cd2b:	sub    al,BYTE PTR [edi+eiz*8]
  41cd2e:	jmp    0xe940:0x2ed89d9b
  41cd35:	call   DWORD PTR [ebx]
  41cd37:	stos   DWORD PTR es:[edi],eax
  41cd38:	rol    BYTE PTR [edx+0x9],0x32
  41cd3c:	mov    ebp,0x2c535c46
  41cd41:	(bad)  
  41cd42:	ror    BYTE PTR [eax+0x45011e52],1
  41cd48:	arpl   si,bx
  41cd4a:	(bad)  
  41cd4b:	xor    ah,BYTE PTR [eax-0x2a977b49]
  41cd51:	add    BYTE PTR [ecx],ch
  41cd53:	outs   dx,BYTE PTR ds:[esi]
  41cd54:	mov    esp,0xb4810fa7
  41cd59:	(bad)  
  41cd5b:	gs cli 
  41cd5d:	imul   DWORD PTR [edx+esi*4+0x4834bad6]
  41cd64:	xchg   esp,eax
  41cd65:	push   ss
  41cd66:	ret    
  41cd67:	clc    
  41cd68:	mov    edi,0xb5549a1d
  41cd6d:	idiv   esp
  41cd6f:	enter  0x84ef,0x7c
  41cd73:	push   ebx
  41cd74:	sub    DWORD PTR [ebx-0x58],esp
  41cd77:	and    dh,BYTE PTR [ecx]
  41cd79:	ins    BYTE PTR es:[edi],dx
  41cd7a:	stos   BYTE PTR es:[edi],al
  41cd7b:	in     al,0x39
  41cd7d:	adc    BYTE PTR [ecx-0x41],dl
  41cd80:	mov    cl,0x4e
  41cd82:	xor    eax,0x35769b09
  41cd87:	and    al,0x74
  41cd89:	shr    BYTE PTR [ecx],1
  41cd8b:	retf   
  41cd8c:	adc    ebx,edi
  41cd8e:	adc    eax,0xbfe9bb8
  41cd93:	in     eax,dx
  41cd94:	xchg   BYTE PTR [eax],ah
  41cd96:	xlat   BYTE PTR ds:[ebx]
  41cd97:	test   DWORD PTR [edx-0xc],eax
  41cd9a:	in     eax,0x24
  41cd9c:	test   bl,bh
  41cd9e:	popa   
  41cd9f:	sbb    BYTE PTR [ebx],al
  41cda1:	(bad)  
  41cda2:	aas    
  41cda3:	xor    al,0x3b
  41cda5:	or     BYTE PTR [ecx-0x6c541bf6],dh
  41cdab:	call   0x9529:0xf0e32613
  41cdb2:	adc    eax,0xe35351ba
  41cdb7:	mov    eax,ds:0xc7f70a24
  41cdbc:	pusha  
  41cdbd:	sbb    al,0xb8
  41cdbf:	rcr    BYTE PTR [ebx],1
  41cdc1:	test   eax,0x3cee3814
  41cdc6:	rcr    DWORD PTR [ebx+0x25],cl
  41cdc9:	popf   
  41cdca:	inc    edx
  41cdcb:	cmp    DWORD PTR [esi],ebx
  41cdcd:	xchg   edi,eax
  41cdce:	push   esi
  41cdcf:	push   ebp
  41cdd0:	(bad)  
  41cdd1:	cmc    
  41cdd2:	(bad)  
  41cdd3:	pop    ecx
  41cdd4:	mov    dh,0xcb
  41cdd6:	pop    ds
  41cdd7:	cmc    
  41cdd8:	xchg   edi,eax
  41cdd9:	nop
  41cdda:	mov    edi,0xf2c8519
  41cddf:	aad    0xe9
  41cde1:	enter  0xdf5c,0xb8
  41cde5:	nop
  41cde6:	jmp    0x2e0b69e5
  41cdeb:	inc    edi
  41cdec:	adc    BYTE PTR [esi+esi*4],bh
  41cdef:	cdq    
  41cdf0:	sub    al,0x93
  41cdf2:	add    BYTE PTR [edi+0x7df26214],ah
  41cdf8:	ins    DWORD PTR es:[edi],dx
  41cdf9:	add    DWORD PTR [edi+edx*1+0x2e78f601],edi
  41ce00:	fdiv   st,st(5)
  41ce02:	out    0xbc,eax
  41ce04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce05:	call   0x868777ef
  41ce0a:	dec    eax
  41ce0b:	jl     0x41cde3
  41ce0d:	inc    edi
  41ce0e:	cmp    al,BYTE PTR [esp+edx*1-0x6c475d25]
  41ce15:	pop    es
  41ce16:	push   cs
  41ce17:	or     al,0xa8
  41ce19:	(bad)  
  41ce1a:	push   esi
  41ce1b:	xchg   edx,eax
  41ce1c:	bound  edi,QWORD PTR [eax-0x65e8b26e]
  41ce22:	in     eax,0xe0
  41ce24:	pop    esp
  41ce25:	mul    DWORD PTR [edi]
  41ce27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce28:	shl    BYTE PTR [esp+esi*1-0x5a],1
  41ce2c:	xor    ecx,DWORD PTR [ebp-0x47849974]
  41ce32:	pop    ss
  41ce33:	xchg   esi,eax
  41ce34:	mov    ch,0x8e
  41ce36:	mov    bh,0x4e
  41ce38:	pusha  
  41ce39:	inc    ecx
  41ce3a:	outs   dx,DWORD PTR ds:[esi]
  41ce3b:	repz mov ah,0x87
  41ce3e:	(bad)  
  41ce3f:	adc    cl,BYTE PTR [esi-0x327f4185]
  41ce45:	mov    bl,0xa5
  41ce47:	mov    ebx,0xc6b51001
  41ce4c:	call   0x2b3f6d7f
  41ce51:	xor    DWORD PTR [esi],edi
  41ce53:	push   ecx
  41ce54:	adc    BYTE PTR [esi-0xc9651eb],dh
  41ce5a:	jnp    0x41ce65
  41ce5c:	aam    0x89
  41ce5e:	out    dx,eax
  41ce5f:	dec    edi
  41ce60:	cwde   
  41ce61:	sbb    DWORD PTR [esi-0x4b15a41e],ebp
  41ce67:	mov    ch,BYTE PTR [ecx+0x164378cd]
  41ce6d:	xchg   ebp,eax
  41ce6e:	pushf  
  41ce6f:	xchg   ebx,eax
  41ce70:	imul   ecx,DWORD PTR [edx-0x67],0x4c
  41ce74:	add    bh,BYTE PTR [ebp-0x7d]
  41ce77:	push   esp
  41ce78:	mov    cl,0xcb
  41ce7a:	mov    esp,0x6c14c28c
  41ce7f:	int3   
  41ce80:	int    0x34
  41ce82:	or     esi,edx
  41ce84:	daa    
  41ce85:	xor    eax,0x47d7ca3
  41ce8a:	sti    
  41ce8b:	add    DWORD PTR ds:0x71502302,ebp
  41ce91:	jbe    0x41ce40
  41ce93:	mov    ebx,0x937775e6
  41ce98:	nop
  41ce99:	pop    ecx
  41ce9a:	adc    eax,0xedadd0d5
  41ce9f:	ds out 0x7f,al
  41cea2:	dec    esi
  41cea3:	mov    esp,0x1b2dbcd6
  41cea8:	jbe    0x41ceef
  41ceaa:	push   eax
  41ceab:	imul   esi,DWORD PTR [ebx-0x1b],0x9ec2ad47
  41ceb2:	pushf  
  41ceb3:	mov    DWORD PTR [ebp-0x3c],edi
  41ceb6:	shr    DWORD PTR [edx-0x50c12862],1
  41cebc:	out    0x56,eax
  41cebe:	in     al,dx
  41cebf:	(bad)  
  41cec0:	pop    ds
  41cec1:	shr    DWORD PTR [edi+eax*4],1
  41cec4:	mov    dl,0xab
  41cec6:	sub    eax,0xb935a6d2
  41cecb:	cmp    ah,BYTE PTR [edi-0x7e]
  41cece:	xor    eax,0x50c16265
  41ced3:	mov    ebp,0x7bca75e
  41ced8:	data16 jb 0x41ceb0
  41cedb:	dec    ecx
  41cedc:	aas    
  41cedd:	stos   BYTE PTR es:[edi],al
  41cede:	mov    ebp,0xf09202d9
  41cee3:	fldenv [edi-0x7]
  41cee6:	imul   esi,DWORD PTR ds:0x376090c4,0xffffff99
  41ceed:	push   ecx
  41ceee:	lods   al,BYTE PTR ds:[esi]
  41ceef:	je     0x41cee2
  41cef1:	shl    DWORD PTR [eax],cl
  41cef3:	push   ds
  41cef4:	mov    edx,0x5c37ff9e
  41cef9:	add    BYTE PTR [edi+0x65],al
  41cefc:	dec    ecx
  41cefd:	fimul  DWORD PTR [edi+0x6e]
  41cf00:	cwde   
  41cf01:	aam    0xb2
  41cf03:	and    DWORD PTR [edx],eax
  41cf05:	cld    
  41cf06:	mov    dh,cl
  41cf08:	push   ss
  41cf09:	cli    
  41cf0a:	enter  0x5558,0xa2
  41cf0e:	out    dx,eax
  41cf0f:	pop    ss
  41cf10:	mov    es,edx
  41cf12:	xor    bh,BYTE PTR [eax+0x11]
  41cf15:	fild   WORD PTR [edi-0x2cfedd1]
  41cf1b:	jg     0x41ceda
  41cf1d:	es inc esp
  41cf1f:	rcl    esp,0xc9
  41cf22:	stos   BYTE PTR es:[edi],al
  41cf23:	lods   eax,DWORD PTR ds:[esi]
  41cf24:	jb     0x41cf52
  41cf26:	jne    0x41cf70
  41cf28:	jmp    0x9204b1ad
  41cf2d:	sub    ebp,DWORD PTR [esp+ebp*2-0x6bb25295]
  41cf34:	cmp    al,0x2c
  41cf36:	mov    ds:0xc2502469,eax
  41cf3b:	sub    esi,eax
  41cf3d:	mov    ecx,?
  41cf3f:	aam    0x88
  41cf41:	lock jnp 0x41cf13
  41cf44:	push   edi
  41cf45:	retf   0x98bc
  41cf48:	repz sub eax,0x2e863591
  41cf4e:	mov    eax,ds:0x1c1e76cf
  41cf53:	shl    ebp,1
  41cf55:	call   0xdeeeb508
  41cf5a:	es std 
  41cf5c:	fwait
  41cf5d:	mov    al,0x52
  41cf5f:	shl    DWORD PTR [edi+ecx*8+0x3251b5ad],1
  41cf66:	fdiv   QWORD PTR [ebx+0x3261d919]
  41cf6c:	mov    esp,0x1c334ab
  41cf71:	in     al,dx
  41cf72:	daa    
  41cf73:	mov    ch,BYTE PTR [edi+0x52]
  41cf76:	push   esp
  41cf77:	outs   dx,DWORD PTR ds:[esi]
  41cf78:	int3   
  41cf79:	addr16 jo 0x41cf45
  41cf7c:	aaa    
  41cf7d:	(bad)  
  41cf7e:	stos   DWORD PTR es:[edi],eax
  41cf7f:	test   DWORD PTR [ebp+0x1668bd3a],eax
  41cf85:	mov    esp,0xac742269
  41cf8a:	jns    0x41cf77
  41cf8c:	stos   DWORD PTR es:[edi],eax
  41cf8d:	into   
  41cf8e:	(bad)  
  41cf8f:	mov    eax,ds:0x50a0c5e8
  41cf94:	mov    ecx,0x2a3ab21d
  41cf99:	pop    edx
  41cf9a:	es daa 
  41cf9c:	add    BYTE PTR [esp+ebx*4],bh
  41cf9f:	das    
  41cfa0:	cwde   
  41cfa1:	mov    fs,ecx
  41cfa3:	dec    edx
  41cfa4:	inc    esp
  41cfa5:	xchg   esi,eax
  41cfa6:	dec    esi
  41cfa7:	fs scas eax,DWORD PTR es:[edi]
  41cfa9:	mov    cl,0x6e
  41cfab:	gs cmp ebx,ebx
  41cfae:	pop    ebp
  41cfaf:	mov    ecx,0x5227a705
  41cfb4:	lods   eax,DWORD PTR ds:[esi]
  41cfb5:	jl     0x41d025
  41cfb7:	push   cs
  41cfb8:	mov    sp,WORD PTR [ebp-0x17]
  41cfbc:	sub    eax,edx
  41cfbe:	dec    eax
  41cfbf:	test   eax,0x871b4c98
  41cfc4:	pop    edi
  41cfc5:	sub    BYTE PTR [esi+0x9],0x33
  41cfc9:	test   DWORD PTR [edi+eax*2+0x795b21bf],0x6e3c3477
  41cfd4:	jge    0x41cfd9
  41cfd6:	xor    DWORD PTR [edi-0x6badb7bc],ecx
  41cfdc:	and    BYTE PTR [ecx+0xa],ch
  41cfdf:	shl    DWORD PTR ds:0x548ab65e,1
  41cfe5:	xchg   ecx,eax
  41cfe6:	lods   eax,DWORD PTR ds:[esi]
  41cfe7:	jg     0x41cffd
  41cfe9:	mov    cl,0x64
  41cfeb:	add    ebp,DWORD PTR [edx+eiz*1]
  41cfee:	rcl    BYTE PTR [edi-0x77],0xc5
  41cff2:	cli    
  41cff3:	jb     0x41d043
  41cff5:	jp     0x41cf94
  41cff7:	inc    eax
  41cff8:	adc    eax,0x9905ebb0
  41cffd:	sub    eax,0xbefee610
  41d002:	test   BYTE PTR [esi-0x78d86068],bl
  41d008:	xchg   edi,eax
  41d009:	and    eax,0xabce2d36
  41d00e:	pop    esp
  41d00f:	sti    
  41d010:	repz xor al,dl
  41d013:	sub    al,0xc5
  41d015:	push   ebp
  41d016:	das    
  41d017:	xchg   ebp,eax
  41d018:	or     dh,BYTE PTR [ebp+ebx*8-0x623e4809]
  41d01f:	cwde   
  41d020:	mov    al,0x10
  41d022:	lock xchg BYTE PTR [edx-0x7de38e7a],ch
  41d029:	mov    dl,0x93
  41d02b:	jmp    0x41d094
  41d02d:	xchg   ebp,eax
  41d02e:	adc    ebx,DWORD PTR ds:0x7dd6c9fe
  41d034:	push   ebx
  41d035:	lods   al,BYTE PTR ds:[esi]
  41d036:	rcl    BYTE PTR [ecx+ecx*2+0x42],0x30
  41d03b:	jle    0x41d00e
  41d03d:	cmp    dh,dh
  41d03f:	shl    bl,cl
  41d041:	xor    dl,dh
  41d043:	mov    edi,0x377dc5f6
  41d048:	cmp    bh,ch
  41d04a:	ror    BYTE PTR [ebx-0x79573605],0x95
  41d051:	mov    ah,0x7a
  41d053:	xchg   esp,eax
  41d054:	popa   
  41d055:	out    0xb,eax
  41d057:	test   al,0x64
  41d059:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d05a:	bound  esi,QWORD PTR [ecx]
  41d05c:	push   0x4b1ee2a9
  41d061:	mov    ebx,?
  41d063:	adc    eax,0xa1ee9d3a
  41d068:	dec    ebx
  41d069:	ror    BYTE PTR [edi+0x75],cl
  41d06c:	push   eax
  41d06d:	mov    DWORD PTR [ebx-0x84ca2af],0x2fdc2f09
  41d077:	cmp    BYTE PTR [edi+0x38],0xb5
  41d07b:	jb     0x41d05d
  41d07d:	fs pop esp
  41d07f:	xor    edi,0xf1751026
  41d085:	mov    DWORD PTR [edx],ebp
  41d087:	mov    ah,0x62
  41d089:	jl     0x41d06c
  41d08b:	pop    eax
  41d08c:	not    al
  41d08e:	test   eax,0xced284f
  41d093:	in     al,dx
  41d094:	xchg   esp,eax
  41d095:	pop    esi
  41d096:	fmul   QWORD PTR [esi-0x8ef93fd]
  41d09c:	sbb    DWORD PTR [edi],edx
  41d09e:	lea    ebx,[esi+0x64b8ac21]
  41d0a4:	int    0x59
  41d0a6:	jb     0x41d057
  41d0a8:	dec    esp
  41d0a9:	or     eax,0x8a31a5c9
  41d0ae:	xchg   DWORD PTR [eax+0x4ab717b8],edi
  41d0b4:	xor    ecx,DWORD PTR [ecx+eiz*4+0x61db1df6]
  41d0bb:	and    BYTE PTR [edi-0x19cfc14a],cl
  41d0c1:	mov    dl,0xf8
  41d0c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d0c4:	cmp    al,0x3b
  41d0c6:	imul   edi,eax,0x349ff798
  41d0cc:	jns    0x41d104
  41d0ce:	sub    eax,edx
  41d0d0:	aaa    
  41d0d1:	shr    al,0x4b
  41d0d4:	(bad)  
  41d0d5:	sub    DWORD PTR [eax],edi
  41d0d7:	retf   
  41d0d8:	jge    0x41d114
  41d0da:	popa   
  41d0db:	sub    cl,BYTE PTR [ebx-0x8f856e6]
  41d0e1:	scas   al,BYTE PTR es:[edi]
  41d0e2:	ret    0xaf3a
  41d0e5:	jle    0x41d085
  41d0e7:	add    DWORD PTR [eax-0x1e],ecx
  41d0ea:	jmp    0x5388733f
  41d0ef:	in     eax,dx
  41d0f0:	mov    esp,0x382927c4
  41d0f5:	sub    ch,BYTE PTR ds:[edx-0x54]
  41d0f9:	xor    BYTE PTR [ebp+edx*4+0x13],0xf8
  41d0fe:	jl     0x41d141
  41d100:	sbb    al,0xab
  41d102:	cld    
  41d103:	pop    ebx
  41d104:	add    al,0x49
  41d106:	dec    edx
  41d107:	jne    0x41d13b
  41d109:	mov    ebp,0xe5bfe541
  41d10e:	lock popa 
  41d110:	mov    ch,0x69
  41d112:	mov    ebp,0x7a68717a
  41d117:	jle    0x41d0bf
  41d119:	add    BYTE PTR [ebp+0x7f],dh
  41d11c:	arpl   WORD PTR [ebx-0x35],di
  41d11f:	nop
  41d120:	popf   
  41d121:	pop    ebp
  41d122:	and    al,bl
  41d124:	push   cs
  41d125:	xchg   BYTE PTR [esi-0x12],ah
  41d128:	int    0xc2
  41d12a:	imul   edi,DWORD PTR [edx+0x11],0x95cf5461
  41d131:	(bad)  [ebp-0x46]
  41d134:	sar    esp,0x4e
  41d137:	xchg   BYTE PTR [eax+0x30443370],bl
  41d13d:	call   0xd8d9:0x884ba6ea
  41d144:	dec    esp
  41d145:	xchg   edi,eax
  41d146:	pop    ebx
  41d147:	push   es
  41d148:	(bad)  [ecx+0x7affecbe]
  41d14e:	or     eax,0xc4a32af5
  41d153:	in     eax,0xdb
  41d155:	cmc    
  41d156:	pop    es
  41d157:	xor    BYTE PTR [ebx+eax*1+0x40137b46],0xb4
  41d15f:	and    al,0x90
  41d161:	imul   ecx,DWORD PTR [ecx-0x64789657],0x59
  41d168:	in     eax,dx
  41d169:	xor    eax,0xda043a65
  41d16e:	fidivr DWORD PTR [ebp-0x2dd9ea3]
  41d174:	shl    ch,cl
  41d176:	push   es
  41d177:	es cli 
  41d179:	sbb    dl,BYTE PTR [esi+0x7e]
  41d17c:	jbe    0x41d134
  41d17e:	arpl   WORD PTR [edi+edx*4+0x66],bp
  41d182:	cmp    eax,0xc58d2998
  41d187:	push   ebx
  41d188:	xchg   esp,eax
  41d189:	fsubr  DWORD PTR [ebp+0x25]
  41d18c:	pop    ecx
  41d18d:	push   ebx
  41d18e:	scas   al,BYTE PTR es:[edi]
  41d18f:	sbb    BYTE PTR [ebx+0x152b4c39],0x5f
  41d196:	sub    ebp,DWORD PTR [esi-0x7a]
  41d199:	in     eax,dx
  41d19a:	lods   al,BYTE PTR ds:[esi]
  41d19b:	inc    edi
  41d19c:	inc    esi
  41d19d:	and    BYTE PTR [ebp-0x1d],ch
  41d1a0:	scas   eax,DWORD PTR es:[edi]
  41d1a1:	push   ebp
  41d1a2:	fs call 0xde5920bf
  41d1a8:	cli    
  41d1a9:	pop    ss
  41d1aa:	dec    eax
  41d1ab:	xchg   ebp,eax
  41d1ac:	cmp    dl,BYTE PTR [edx]
  41d1ae:	dec    edx
  41d1af:	loop   0x41d202
  41d1b1:	push   0x7ec16cdf
  41d1b6:	test   DWORD PTR [edi],0x1b145298
  41d1bc:	xchg   BYTE PTR [ecx+0x7f],dh
  41d1bf:	push   ds
  41d1c0:	ret    
  41d1c1:	mov    ebx,0x44df1b21
  41d1c6:	outs   dx,BYTE PTR ds:[esi]
  41d1c7:	dec    eax
  41d1c8:	mov    bh,0xc7
  41d1ca:	pop    esp
  41d1cb:	sti    
  41d1cc:	jmp    0x41d1f3
  41d1ce:	dec    esp
  41d1cf:	xor    esi,DWORD PTR [eax-0x7a5a8cf]
  41d1d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d1d6:	and    edi,ebp
  41d1d8:	cmp    ecx,DWORD PTR [eax-0x66]
  41d1db:	xor    BYTE PTR [edi+0x34f42a7f],bh
  41d1e1:	or     ebx,DWORD PTR [esi+0x6ec2745f]
  41d1e7:	mov    ds:0x464ffb6c,eax
  41d1ec:	(bad)  ds:0x482988
  41d1f2:	lods   al,BYTE PTR ds:[si]
  41d1f4:	fwait
  41d1f5:	rcr    BYTE PTR [eax],0x87
  41d1f8:	imul   edx,DWORD PTR [edi],0xdae764f2
  41d1fe:	jne    0x41d1b4
  41d200:	shl    esi,0x79
  41d203:	mov    bh,0x30
  41d205:	inc    esp
  41d206:	lock stc 
  41d208:	jne    0x41d234
  41d20a:	cwde   
  41d20b:	imul   eax,DWORD PTR [ebx+0x344c4f9b],0x54
  41d212:	fnstcw WORD PTR [edi-0x1d]
  41d215:	call   0x7261c07f
  41d21a:	push   es
  41d21b:	push   edi
  41d21c:	sub    edx,DWORD PTR [ebx+0x1ed521f5]
  41d222:	cs (bad) 
  41d224:	call   0x38e9:0x1272a07d
  41d22b:	xchg   esp,eax
  41d22c:	sahf   
  41d22d:	pop    ebp
  41d22e:	xchg   DWORD PTR [eax-0x19b39bd1],eax
  41d234:	dec    esp
  41d235:	jmp    0x41d22c
  41d237:	out    0x40,eax
  41d239:	arpl   WORD PTR [eax-0x29],sp
  41d23c:	shl    DWORD PTR [ebx-0x65],cl
  41d23f:	dec    eax
  41d240:	clc    
  41d241:	xchg   esp,eax
  41d242:	test   ch,bh
  41d244:	pop    esi
  41d245:	sbb    eax,0x2d68fe38
  41d24a:	inc    eax
  41d24b:	and    ecx,DWORD PTR [edx]
  41d24d:	dec    BYTE PTR [edi+0x9]
  41d250:	ins    DWORD PTR es:[edi],dx
  41d251:	ret    
  41d252:	cmp    DWORD PTR [edi+0x5c],0x4f897858
  41d259:	fld    DWORD PTR [eax]
  41d25b:	inc    edi
  41d25c:	and    DWORD PTR [esi],esi
  41d25e:	xor    eax,0xecbe5208
  41d263:	cmc    
  41d264:	dec    ebx
  41d265:	aam    0xe3
  41d267:	das    
  41d268:	xchg   edi,eax
  41d269:	lods   eax,DWORD PTR ds:[esi]
  41d26a:	mov    cl,0xca
  41d26c:	call   0xb74b:0xc8839710
  41d273:	sbb    bl,BYTE PTR es:[edx-0x3a]
  41d277:	popf   
  41d278:	mov    esi,0x5f0ef8b2
  41d27d:	daa    
  41d27e:	call   0x495c5323
  41d283:	add    ah,BYTE PTR [ebp-0x6261da43]
  41d289:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d28a:	mov    ds:0xf8c1dcaa,eax
  41d28f:	sub    dh,BYTE PTR [ecx]
  41d291:	fcmovne st,st(7)
  41d293:	outs   dx,DWORD PTR ds:[esi]
  41d294:	adc    eax,0x5557dfc5
  41d299:	cmp    dh,ch
  41d29b:	cmp    DWORD PTR [ebp-0x6b],edi
  41d29e:	fild   DWORD PTR [ebp+0x7]
  41d2a1:	fild   DWORD PTR [edx]
  41d2a3:	call   0x6196238b
  41d2a8:	mov    gs,eax
  41d2aa:	mov    ch,0xc0
  41d2ac:	mov    ch,0x6c
  41d2ae:	xchg   ecx,eax
  41d2af:	imul   eax,DWORD PTR [eax],0xf8ccbad5
  41d2b5:	adc    DWORD PTR [eax-0x589d8927],0x4a4dd634
  41d2bf:	xor    DWORD PTR [esi],ebx
  41d2c1:	clc    
  41d2c2:	call   0x212dc962
  41d2c7:	push   esi
  41d2c8:	arpl   WORD PTR [esi-0x50],bp
  41d2cb:	js     0x41d262
  41d2cd:	pop    esp
  41d2ce:	pusha  
  41d2cf:	icebp  
  41d2d0:	mov    ?,eax
  41d2d2:	pop    ss
  41d2d3:	push   edx
  41d2d4:	sahf   
  41d2d5:	jo     0x41d325
  41d2d7:	(bad)
  41d2db:	cmp    ebx,ebx
  41d2dd:	sbb    eax,0x887be902
  41d2e2:	test   BYTE PTR [esi+0x765a248f],al
  41d2e8:	push   esp
  41d2e9:	cmp    eax,0xce565950
  41d2ee:	fwait
  41d2ef:	ins    DWORD PTR es:[edi],dx
  41d2f0:	aas    
  41d2f1:	mov    esp,DWORD PTR [ecx-0x4c167a79]
  41d2f7:	cmp    DWORD PTR [ebp-0x614fce10],ecx
  41d2fd:	add    eax,0x26582820
  41d302:	lahf   
  41d303:	push   ds
  41d304:	xor    BYTE PTR [ebp-0x28],dh
  41d307:	(bad)  
  41d308:	lods   eax,DWORD PTR ds:[esi]
  41d309:	add    edi,DWORD PTR [edi+esi*1]
  41d30c:	sub    al,0xf4
  41d30e:	mov    bl,0xd6
  41d310:	cmp    ebp,esp
  41d312:	(bad)  
  41d313:	jno    0x41d2ad
  41d315:	pop    ecx
  41d316:	mov    BYTE PTR es:[edx+eiz*2],dl
  41d31a:	lds    edx,FWORD PTR [ebp+0x5b]
  41d31d:	adc    DWORD PTR [ebx-0x4176c7ef],edi
  41d323:	sbb    ah,BYTE PTR [ecx]
  41d325:	ja     0x41d305
  41d327:	out    dx,al
  41d328:	mov    ebp,0x315671a
  41d32d:	and    bl,cl
  41d32f:	sub    BYTE PTR [edi+0x1d],bl
  41d332:	sti    
  41d333:	ins    BYTE PTR es:[edi],dx
  41d334:	les    ecx,FWORD PTR [edi+eiz*8]
  41d337:	mov    ecx,DWORD PTR [esi+0x2]
  41d33a:	neg    BYTE PTR [ebp-0x67]
  41d33d:	inc    edx
  41d33e:	iret   
  41d33f:	sbb    ah,al
  41d341:	pop    edi
  41d342:	mov    edx,0x6439a8d9
  41d347:	mov    esi,DWORD PTR [eax]
  41d349:	mov    edi,0x777e4dc6
  41d34e:	lock xor bh,BYTE PTR [eax]
  41d351:	add    BYTE PTR [eax+0x21422256],bl
  41d357:	push   esi
  41d358:	dec    eax
  41d359:	(bad)  
  41d35b:	int    0x19
  41d35d:	mov    ds:0x9db5bb03,eax
  41d362:	in     al,0xfd
  41d364:	outs   dx,DWORD PTR ds:[esi]
  41d365:	pusha  
  41d366:	pop    edx
  41d367:	int3   
  41d368:	retf   
  41d369:	mov    esi,edx
  41d36b:	adc    ah,BYTE PTR [ecx+0x79]
  41d36e:	icebp  
  41d36f:	cld    
  41d370:	in     eax,dx
  41d371:	retf   0x6314
  41d374:	push   esi
  41d375:	fs mov edi,0xad522492
  41d37b:	jbe    0x41d385
  41d37d:	xor    edx,eax
  41d37f:	cld    
  41d380:	addr16 stc 
  41d382:	mov    esp,0x4d8ac5a9
  41d387:	in     eax,0x9a
  41d389:	inc    edx
  41d38a:	outs   dx,DWORD PTR ds:[esi]
  41d38b:	mov    edi,0x3c8602eb
  41d390:	iret   
  41d391:	icebp  
  41d392:	les    ebx,FWORD PTR [edi-0x69]
  41d395:	mov    DWORD PTR ds:0x9e1c98d7,ebp
  41d39b:	push   es
  41d39c:	sbb    DWORD PTR [edx+0x55],ebx
  41d39f:	push   ds
  41d3a0:	js     0x41d413
  41d3a2:	test   BYTE PTR [ebx+0x3b908ffe],dh
  41d3a8:	mov    ebp,0xbe229517
  41d3ad:	lods   al,BYTE PTR ds:[esi]
  41d3ae:	not    dl
  41d3b0:	aad    0xf1
  41d3b2:	add    BYTE PTR [ecx+0x31],ah
  41d3b5:	pop    ecx
  41d3b6:	mov    BYTE PTR [edi+0x58],0xe3
  41d3ba:	cmc    
  41d3bb:	jns    0x41d429
  41d3bd:	and    BYTE PTR [edi+0x68449258],ch
  41d3c3:	sub    BYTE PTR [edi-0x11],dh
  41d3c6:	xchg   edi,eax
  41d3c7:	in     al,dx
  41d3c8:	mov    esp,0x34781c20
  41d3cd:	cld    
  41d3ce:	jo     0x41d42b
  41d3d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d3d1:	(bad)  
  41d3d2:	out    dx,eax
  41d3d3:	mov    ds:0x4985671f,al
  41d3d8:	sub    bl,0xc7
  41d3db:	mov    edx,ecx
  41d3dd:	jp     0x41d448
  41d3df:	inc    ebp
  41d3e0:	sub    al,0x39
  41d3e2:	pop    ecx
  41d3e3:	adc    eax,DWORD PTR [edx]
  41d3e5:	push   edi
  41d3e6:	add    ecx,0x1a
  41d3e9:	inc    eax
  41d3ea:	aad    0x63
  41d3ec:	mov    cl,0x26
  41d3ee:	data16 (bad) 
  41d3f0:	cmp    BYTE PTR [edx+eax*1+0x36114b0e],ch
  41d3f7:	mov    bh,0x58
  41d3f9:	jmp    DWORD PTR [ecx-0x66]
  41d3fc:	mov    ecx,0x8215bf15
  41d401:	retf   0xe044
  41d404:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d405:	aas    
  41d406:	mov    ds:0xd4dc5acd,eax
  41d40b:	fcom   DWORD PTR [eax]
  41d40d:	pusha  
  41d40e:	aas    
  41d40f:	repz loop 0x41d412
  41d412:	jns    0x41d3a1
  41d414:	mov    ?,WORD PTR [edx]
  41d416:	jno    0x41d3d0
  41d418:	sahf   
  41d419:	xor    edx,DWORD PTR ds:0x72beef46
  41d41f:	xchg   DWORD PTR [ebp+0x2977ffd3],esp
  41d425:	and    edi,DWORD PTR [esi+0x5e]
  41d428:	adc    al,0x2
  41d42a:	fwait
  41d42b:	ret    
  41d42c:	mov    dh,0x47
  41d42e:	mov    eax,ds:0x86ac0dd2
  41d433:	push   cs
  41d434:	imul   ecx,DWORD PTR [edx],0x29c48c82
  41d43a:	dec    edx
  41d43b:	retf   0xc38f
  41d43e:	xchg   esi,eax
  41d43f:	mov    ds:0x5a9c6171,al
  41d444:	js     0x41d4a5
  41d446:	xor    eax,0x88b9fda2
  41d44b:	(bad)  
  41d44c:	loope  0x41d3f4
  41d44e:	push   edi
  41d44f:	xchg   ebp,esp
  41d451:	cli    
  41d452:	inc    ebx
  41d453:	xchg   BYTE PTR [esi],dh
  41d455:	in     eax,dx
  41d456:	sbb    eax,0x7b052b95
  41d45b:	add    DWORD PTR [eax+esi*8+0x5f],0x802fc5fb
  41d463:	test   BYTE PTR [ecx],dl
  41d465:	xchg   ebx,eax
  41d466:	and    eax,0xc3776a3f
  41d46b:	nop
  41d46c:	in     eax,0x33
  41d46e:	(bad)  
  41d470:	stos   BYTE PTR es:[edi],al
  41d471:	inc    esi
  41d472:	add    al,0x19
  41d474:	cmp    DWORD PTR [edi],0xffffffe8
  41d477:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d478:	call   0x43db:0xfff56c27
  41d47f:	inc    edx
  41d480:	xor    dl,BYTE PTR [edi-0x24]
  41d483:	push   esi
  41d484:	xchg   eax,esp
  41d486:	outs   dx,BYTE PTR ds:[esi]
  41d487:	mov    cl,0x24
  41d489:	fsubr  DWORD PTR [edx+edi*2+0x4a]
  41d48d:	adc    DWORD PTR [esi-0x42],ecx
  41d490:	sbb    DWORD PTR [eax],0x42
  41d493:	pop    ss
  41d494:	cmp    eax,0x760c5f4e
  41d499:	pusha  
  41d49a:	pushf  
  41d49b:	test   DWORD PTR [ecx],0x914fc1b3
  41d4a1:	idiv   ch
  41d4a3:	dec    edx
  41d4a4:	mov    ebx,0x69dbc5b2
  41d4a9:	bound  ecx,QWORD PTR ds:0xf432574
  41d4af:	dec    esi
  41d4b0:	rcr    BYTE PTR [esi+0x605d4564],cl
  41d4b6:	xor    edi,edx
  41d4b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d4b9:	scas   al,BYTE PTR es:[edi]
  41d4ba:	(bad)  
  41d4bb:	(bad)  
  41d4bd:	inc    edx
  41d4be:	loope  0x41d513
  41d4c0:	inc    ecx
  41d4c1:	mov    ch,0x42
  41d4c3:	mov    WORD PTR [esi+edx*2],ds
  41d4c6:	pop    esp
  41d4c7:	pop    ebp
  41d4c8:	mov    eax,0xb416ec73
  41d4cd:	pop    esi
  41d4ce:	in     eax,0xc8
  41d4d0:	arpl   ax,cx
  41d4d2:	aas    
  41d4d3:	pushf  
  41d4d4:	sbb    BYTE PTR [ebx+ebx*4+0xb8979e8],cl
  41d4db:	sbb    DWORD PTR [edx-0x5565feca],eax
  41d4e1:	xchg   ebx,eax
  41d4e2:	push   eax
  41d4e3:	xsavec [ebx+0x62268eb5]
  41d4ea:	(bad)  
  41d4ec:	jno    0x41d562
  41d4ee:	mov    al,0xe6
  41d4f0:	dec    ebx
  41d4f1:	mov    bl,0xe8
  41d4f3:	sbb    al,0xcd
  41d4f5:	sub    BYTE PTR [ecx+esi*2-0x51],ah
  41d4f9:	out    0x19,eax
  41d4fb:	sbb    dl,bh
  41d4fd:	jbe    0x41d575
  41d4ff:	or     BYTE PTR [esi+0x13],dl
  41d502:	xchg   DWORD PTR [ebp+0x2d4d6973],edx
  41d508:	mov    bh,0xdd
  41d50a:	adc    al,0x9e
  41d50c:	cld    
  41d50d:	push   ecx
  41d50e:	inc    ecx
  41d50f:	fwait
  41d510:	cmp    DWORD PTR [esi+0x73],esi
  41d513:	push   es
  41d514:	mov    ah,0x84
  41d516:	pop    esi
  41d517:	gs push ecx
  41d519:	jge    0x41d51b
  41d51b:	push   edx
  41d51c:	push   esp
  41d51d:	jle    0x41d53b
  41d51f:	test   al,0xd2
  41d521:	rcl    bh,0x38
  41d524:	mov    ah,0x6
  41d526:	sbb    DWORD PTR [ebp+0x6a791675],esi
  41d52c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d52d:	xchg   edx,eax
  41d52e:	sbb    al,0xe9
  41d530:	inc    eax
  41d531:	and    al,0x7e
  41d533:	sbb    ecx,DWORD PTR [ebx+eax*2]
  41d536:	fcom   QWORD PTR [edx+0x261ff75c]
  41d53c:	and    BYTE PTR [eax],ah
  41d53e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d53f:	mov    al,ds:0xffb984ef
  41d544:	push   ss
  41d545:	ret    0x175c
  41d548:	adc    al,0xe0
  41d54a:	mov    al,0x2
  41d54c:	cmp    BYTE PTR [edi+0x1680e7d0],bl
  41d552:	xlat   BYTE PTR ds:[ebx]
  41d553:	sub    bl,BYTE PTR [eax-0x3a97636e]
  41d559:	or     ah,0xd1
  41d55c:	into   
  41d55d:	lds    eax,FWORD PTR [edx+0x30]
  41d560:	mov    WORD PTR [ebx-0x2465db7e],es
  41d566:	cmp    al,0xd4
  41d568:	icebp  
  41d569:	jbe    0x41d577
  41d56b:	cmp    DWORD PTR [esp+eax*8],ebx
  41d56e:	mov    ah,0xb4
  41d570:	xchg   esp,eax
  41d571:	or     al,bl
  41d573:	and    al,0x6d
  41d575:	fcomp  DWORD PTR [esi+0x1b]
  41d578:	loop   0x41d59e
  41d57a:	pop    es
  41d57b:	jp     0x41d578
  41d57d:	arpl   WORD PTR [esi],cx
  41d57f:	popa   
  41d580:	stos   BYTE PTR es:[edi],al
  41d581:	sti    
  41d582:	push   ds
  41d583:	inc    esi
  41d584:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d585:	cmp    al,0x6f
  41d587:	push   ebx
  41d588:	and    BYTE PTR [eax],0xb0
  41d58b:	mov    ecx,0x95809b58
  41d590:	mov    eax,ds:0xefea9fa0
  41d595:	adc    al,0x17
  41d597:	loop   0x41d51d
  41d599:	pop    es
  41d59a:	jae    0x41d53b
  41d59c:	ds fwait
  41d59e:	jbe    0x41d551
  41d5a0:	pop    edi
  41d5a1:	sub    dl,BYTE PTR [edi]
  41d5a3:	and    eax,0x13e69c0e
  41d5a8:	or     BYTE PTR [ebx+0x2146ddc8],al
  41d5ae:	cdq    
  41d5af:	pop    ss
  41d5b0:	jge    0x41d55e
  41d5b2:	mov    bh,0xbd
  41d5b4:	xor    BYTE PTR [ebp+0x2b3919e4],dl
  41d5ba:	xchg   ebp,eax
  41d5bb:	je     0x41d544
  41d5bd:	jb     0x41d576
  41d5bf:	pop    ss
  41d5c0:	sahf   
  41d5c1:	cmp    al,0x3f
  41d5c3:	push   ds
  41d5c4:	inc    ebx
  41d5c5:	jb     0x41d587
  41d5c7:	fs mov bh,0x29
  41d5ca:	dec    edx
  41d5cb:	mov    ds:0xb35a9f67,eax
  41d5d0:	cmc    
  41d5d1:	add    ch,ah
  41d5d3:	out    0x8a,al
  41d5d5:	fst    DWORD PTR [edi-0x7c09efe3]
  41d5db:	inc    esp
  41d5dc:	add    ecx,edx
  41d5de:	(bad)  
  41d5e0:	xchg   BYTE PTR [ebx],cl
  41d5e2:	or     DWORD PTR [edi-0x48],esi
  41d5e5:	bound  eax,QWORD PTR [esi-0x3323bc32]
  41d5eb:	adc    ch,bl
  41d5ed:	sub    ebp,esi
  41d5ef:	lods   eax,DWORD PTR ds:[esi]
  41d5f0:	mov    ecx,0xfb1f3357
  41d5f5:	push   ds
  41d5f6:	test   al,0x54
  41d5f8:	push   edx
  41d5f9:	jp     0x41d627
  41d5fb:	shl    BYTE PTR [edx],cl
  41d5fd:	sbb    DWORD PTR [edi],ebx
  41d5ff:	jmp    0x41d59d
  41d601:	add    al,0x2f
  41d603:	push   0xa9736891
  41d608:	adc    dh,cl
  41d60a:	sbb    esp,ecx
  41d60c:	(bad)  
  41d60d:	mov    bh,0x1d
  41d60f:	ficomp DWORD PTR ds:0x5719f892
  41d615:	cmp    DWORD PTR [ebp-0x405f16a3],edi
  41d61b:	int3   
  41d61c:	out    0xb6,al
  41d61e:	xchg   edx,eax
  41d61f:	jnp    0x41d5fe
  41d621:	xchg   ch,cl
  41d623:	ja     0x41d5f6
  41d625:	or     eax,0xcb694375
  41d62a:	loopne 0x41d5f6
  41d62c:	sbb    BYTE PTR [edx-0xe4a448c],bh
  41d632:	(bad)  
  41d633:	jle    0x41d67f
  41d635:	ret    0x7df1
  41d638:	mov    esi,0x54d074a1
  41d63d:	cs sbb eax,0xb573ab21
  41d643:	inc    esp
  41d644:	add    eax,0x31e355fd
  41d649:	xchg   edi,eax
  41d64a:	cmp    DWORD PTR [esi],edi
  41d64c:	jbe    0x41d624
  41d64e:	pop    esi
  41d64f:	pop    ss
  41d650:	fild   QWORD PTR [ebx]
  41d652:	inc    esi
  41d653:	inc    ecx
  41d654:	ret    0x5ebf
  41d657:	imul   esp,DWORD PTR ds:0x6d9584e8,0xb96f10f5
  41d661:	xor    al,0x14
  41d663:	dec    edi
  41d664:	lds    eax,FWORD PTR [ebx+edx*4+0x32]
  41d668:	lods   al,BYTE PTR ds:[esi]
  41d669:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d66a:	mov    BYTE PTR [esi+ecx*1-0x5d14bebd],al
  41d671:	xchg   ebp,eax
  41d672:	cdq    
  41d673:	ss push es
  41d675:	repnz data16 cmp cl,bl
  41d679:	shl    ebp,1
  41d67b:	xor    esi,DWORD PTR [ecx]
  41d67d:	push   ebx
  41d67e:	je     0x41d682
  41d680:	push   esi
  41d681:	(bad)  
  41d682:	ss ja  0x41d636
  41d685:	aaa    
  41d686:	pop    ds
  41d687:	out    dx,al
  41d688:	mov    al,0x39
  41d68a:	jmp    0x5708:0xf1c281bf
  41d691:	add    BYTE PTR [edi],cl
  41d693:	scas   eax,DWORD PTR es:[edi]
  41d694:	ror    DWORD PTR [ecx+0x558ba855],cl
  41d69a:	or     BYTE PTR [ebx-0x3d7e53a3],cl
  41d6a0:	xchg   ebx,eax
  41d6a1:	clc    
  41d6a2:	add    BYTE PTR fs:[ebx],cl
  41d6a5:	ror    DWORD PTR [ecx+0x558bac55],cl
  41d6ab:	or     BYTE PTR [ebx-0x2efc4fa3],cl
  41d6b1:	xor    edx,ebx
  41d6b3:	mov    DWORD PTR [ebp-0x50],edx
  41d6b6:	mov    edx,DWORD PTR [ebp+0x8]
  41d6b9:	mov    ebx,DWORD PTR [ebp-0x4c]
  41d6bc:	add    edx,edi
  41d6be:	and    edx,ebx
  41d6c0:	mov    DWORD PTR [ebp-0x4c],edx
  41d6c3:	mov    edx,DWORD PTR [ebp+0x8]
  41d6c6:	mov    ebx,DWORD PTR [ebp-0x48]
  41d6c9:	lea    edx,[ebx+edx*1+0x241fcde]
  41d6d0:	mov    DWORD PTR [ebp-0x48],edx
  41d6d3:	mov    edx,DWORD PTR [ebp+0x8]
  41d6d6:	mov    ebx,0xfa5e1521
  41d6db:	sub    ebx,edx
  41d6dd:	add    ebx,DWORD PTR [ebp-0x44]
  41d6e0:	mov    DWORD PTR [ebp-0x44],ebx
  41d6e3:	mov    edx,DWORD PTR [ebp+0x8]
  41d6e6:	xor    edx,eax
  41d6e8:	add    edx,esi
  41d6ea:	jne    0x41b310
  41d6f0:	mov    edx,DWORD PTR [ebp-0x14]
  41d6f3:	mov    DWORD PTR [ebp+0x8],edx
  41d6f6:	jmp    0x41d76b
  41d6fb:	mov    edx,DWORD PTR [ebp+0x8]
  41d6fe:	mov    ebx,DWORD PTR [ebp-0x8]
  41d701:	xor    edx,eax
  41d703:	xor    ebx,eax
  41d705:	sub    edx,ebx
  41d707:	sub    edx,esi
  41d709:	xor    edx,eax
  41d70b:	mov    DWORD PTR [ebp+0x8],edx
  41d70e:	mov    edx,DWORD PTR [ebp+0x8]
  41d711:	mov    ebx,DWORD PTR [ebp-0x58]
  41d714:	add    edx,0x5708f1
  41d71a:	imul   edx,ebx
  41d71d:	mov    DWORD PTR [ebp-0x58],edx
  41d720:	mov    edx,DWORD PTR [ebp+0x8]
  41d723:	mov    ebx,DWORD PTR [ebp-0x54]
  41d726:	add    edx,0x64f893
  41d72c:	or     edx,ebx
  41d72e:	mov    DWORD PTR [ebp-0x54],edx
  41d731:	mov    edx,DWORD PTR [ebp+0x8]
  41d734:	mov    ebx,DWORD PTR [ebp-0x50]
  41d737:	add    edx,ecx
  41d739:	xor    edx,ebx
  41d73b:	mov    DWORD PTR [ebp-0x50],edx
  41d73e:	mov    edx,DWORD PTR [ebp+0x8]
  41d741:	mov    ebx,DWORD PTR [ebp-0x4c]
  41d744:	add    edx,edi
  41d746:	and    edx,ebx
  41d748:	mov    DWORD PTR [ebp-0x4c],edx
  41d74b:	mov    edx,DWORD PTR [ebp+0x8]
  41d74e:	mov    ebx,DWORD PTR [ebp-0x48]
  41d751:	lea    edx,[ebx+edx*1+0x241fcde]
  41d758:	mov    DWORD PTR [ebp-0x48],edx
  41d75b:	mov    edx,DWORD PTR [ebp+0x8]
  41d75e:	mov    ebx,0xfa5e1521
  41d763:	sub    ebx,edx
  41d765:	add    ebx,DWORD PTR [ebp-0x44]
  41d768:	mov    DWORD PTR [ebp-0x44],ebx
  41d76b:	mov    edx,DWORD PTR [ebp+0x8]
  41d76e:	xor    edx,eax
  41d770:	add    edx,esi
  41d772:	jne    0x41d6fb
  41d778:	mov    edx,DWORD PTR [ebp-0x8]
  41d77b:	mov    ebx,DWORD PTR [ebp-0xc]
  41d77e:	xor    edx,eax
  41d780:	lea    edx,[edx+ebx*1+0x3272ec]
  41d787:	mov    DWORD PTR [ebp-0xc],edx
  41d78a:	mov    edx,DWORD PTR [ebp-0x10]
  41d78d:	xor    edx,eax
  41d78f:	add    edx,esi
  41d791:	jne    0x418ba5
  41d797:	jmp    0x421f74
  41d79c:	mov    ecx,DWORD PTR [ebp-0x14]
  41d79f:	mov    DWORD PTR [ebp+0x8],ecx
  41d7a2:	jmp    0x41d81b
  41d7a7:	mov    ecx,DWORD PTR [ebp+0x8]
  41d7aa:	mov    edx,DWORD PTR [ebp-0x8]
  41d7ad:	xor    ecx,eax
  41d7af:	xor    edx,eax
  41d7b1:	sub    ecx,edx
  41d7b3:	sub    ecx,esi
  41d7b5:	xor    ecx,eax
  41d7b7:	mov    DWORD PTR [ebp+0x8],ecx
  41d7ba:	mov    ecx,DWORD PTR [ebp+0x8]
  41d7bd:	mov    edx,DWORD PTR [ebp-0x58]
  41d7c0:	add    ecx,0x5708f1
  41d7c6:	imul   ecx,edx
  41d7c9:	mov    DWORD PTR [ebp-0x58],ecx
  41d7cc:	mov    ecx,DWORD PTR [ebp+0x8]
  41d7cf:	mov    edx,DWORD PTR [ebp-0x54]
  41d7d2:	add    ecx,0x64f893
  41d7d8:	or     ecx,edx
  41d7da:	mov    DWORD PTR [ebp-0x54],ecx
  41d7dd:	mov    ecx,DWORD PTR [ebp+0x8]
  41d7e0:	mov    edx,DWORD PTR [ebp-0x50]
  41d7e3:	add    ecx,0x242ebcc
  41d7e9:	xor    ecx,edx
  41d7eb:	mov    DWORD PTR [ebp-0x50],ecx
  41d7ee:	mov    ecx,DWORD PTR [ebp+0x8]
  41d7f1:	mov    edx,DWORD PTR [ebp-0x4c]
  41d7f4:	add    ecx,edi
  41d7f6:	and    ecx,edx
  41d7f8:	mov    DWORD PTR [ebp-0x4c],ecx
  41d7fb:	mov    ecx,DWORD PTR [ebp+0x8]
  41d7fe:	mov    edx,DWORD PTR [ebp-0x48]
  41d801:	lea    ecx,[edx+ecx*1+0x241fcde]
  41d808:	mov    DWORD PTR [ebp-0x48],ecx
  41d80b:	mov    ecx,DWORD PTR [ebp+0x8]
  41d80e:	mov    edx,0xfa5e1521
  41d813:	sub    edx,ecx
  41d815:	add    edx,DWORD PTR [ebp-0x44]
  41d818:	mov    DWORD PTR [ebp-0x44],edx
  41d81b:	mov    ecx,DWORD PTR [ebp+0x8]
  41d81e:	xor    ecx,eax
  41d820:	add    ecx,esi
  41d822:	jne    0x41d7a7
  41d828:	jmp    0x421f80
  41d82d:	mov    ecx,DWORD PTR [ebp+0x8]
  41d830:	mov    edx,DWORD PTR [ebp-0x8]
  41d833:	xor    ecx,eax
  41d835:	xor    edx,eax
  41d837:	sub    ecx,edx
  41d839:	sub    ecx,esi
  41d83b:	xor    ecx,eax
  41d83d:	mov    DWORD PTR [ebp+0x8],ecx
  41d840:	mov    ecx,DWORD PTR [ebp+0x8]
  41d843:	mov    edx,DWORD PTR [ebp-0x58]
  41d846:	add    ecx,0x5708f1
  41d84c:	imul   ecx,edx
  41d84f:	mov    DWORD PTR [ebp-0x58],ecx
  41d852:	mov    ecx,DWORD PTR [ebp+0x8]
  41d855:	mov    edx,DWORD PTR [ebp-0x54]
  41d858:	jmp    0x41fbbb
  41d85d:	bound  ecx,QWORD PTR [ebp+0x70]
  41d860:	push   0x43623b4b
  41d865:	fsub   QWORD PTR [ecx]
  41d867:	xchg   BYTE PTR [edi-0x6c],ah
  41d86a:	inc    ecx
  41d86b:	pop    ebx
  41d86c:	push   edi
  41d86d:	(bad)  
  41d86e:	sar    DWORD PTR [ebp+0x7a],cl
  41d871:	xor    BYTE PTR [edi+0x7a],bl
  41d874:	jp     0x41d86e
  41d876:	push   ecx
  41d877:	jae    0x41d88a
  41d879:	mov    ebx,0x61306bf5
  41d87e:	(bad)  
  41d87f:	pop    ds
  41d880:	inc    eax
  41d881:	xor    eax,0x8f7483b8
  41d886:	mov    ebp,0x767335b4
  41d88b:	inc    ecx
  41d88c:	push   cs
  41d88d:	or     ecx,DWORD PTR [esi+0x51b55bb1]
  41d893:	scas   al,BYTE PTR es:[edi]
  41d894:	fnstcw WORD PTR [eax-0x22]
  41d897:	retf   0xf849
  41d89a:	push   ebx
  41d89b:	xchg   ebp,eax
  41d89c:	adc    eax,0x2e483155
  41d8a1:	idiv   BYTE PTR [ebp-0x54]
  41d8a4:	mov    ?,ebp
  41d8a6:	sbb    al,0x5e
  41d8a8:	pop    ecx
  41d8a9:	sub    eax,0x88188484
  41d8ae:	inc    esi
  41d8af:	in     eax,0xd0
  41d8b1:	std    
  41d8b2:	sub    esp,DWORD PTR [edi-0x70fc99d4]
  41d8b8:	stc    
  41d8b9:	fwait
  41d8ba:	inc    esi
  41d8bb:	sub    ah,BYTE PTR [ebx+0x3509d420]
  41d8c1:	mov    al,ds:0x3695b884
  41d8c6:	loop   0x41d893
  41d8c8:	arpl   WORD PTR [ecx],cx
  41d8ca:	mov    dl,0xbf
  41d8cc:	jb     0x41d91b
  41d8ce:	pop    ebp
  41d8cf:	ds push esp
  41d8d1:	jns    0x41d8e1
  41d8d3:	mov    dh,0x5f
  41d8d5:	mov    esi,0x78296941
  41d8da:	jo     0x41d8f7
  41d8dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d8dd:	push   ss
  41d8de:	mov    edx,0xdf59e35a
  41d8e3:	loope  0x41d90d
  41d8e5:	shl    DWORD PTR [edi],0x3
  41d8e8:	inc    DWORD PTR [esi+0x4a]
  41d8eb:	jbe    0x41d8e1
  41d8ed:	and    eax,0x7b346703
  41d8f2:	mov    ebp,DWORD PTR [ebp+ebp*4+0x51]
  41d8f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d8f7:	je     0x41d8a2
  41d8f9:	in     al,dx
  41d8fa:	jl     0x41d959
  41d8fc:	push   edi
  41d8fd:	call   0x29cb2d32
  41d902:	loope  0x41d97b
  41d904:	xor    eax,0xab72edd7
  41d909:	in     eax,0x4e
  41d90b:	push   ebx
  41d90c:	adc    ah,BYTE PTR [edi+0x2e6a553b]
  41d912:	sahf   
  41d913:	int    0x7e
  41d915:	mov    dh,0xdc
  41d917:	arpl   WORD PTR ds:0xd6a9b161,sp
  41d91d:	pop    esp
  41d91e:	adc    ecx,DWORD PTR [ecx+eiz*8-0x5d76c30f]
  41d925:	std    
  41d926:	cmp    DWORD PTR [esi],esi
  41d928:	push   0x2d
  41d92a:	das    
  41d92b:	call   0xb3b02748
  41d930:	rcr    eax,0xbe
  41d933:	pop    esi
  41d934:	cmp    edi,edi
  41d936:	iret   
  41d937:	scas   eax,DWORD PTR es:[edi]
  41d938:	jne    0x41d9ab
  41d93a:	push   ebx
  41d93b:	loopne 0x41d8bd
  41d93d:	cmp    ah,BYTE PTR ds:[ebp+0x3d1e5a0]
  41d944:	mov    al,0xdd
  41d946:	inc    ebx
  41d947:	stc    
  41d948:	or     esi,DWORD PTR [ebp+0x57]
  41d94b:	out    0xf4,eax
  41d94d:	pop    ebx
  41d94e:	hlt    
  41d94f:	lods   eax,DWORD PTR ds:[esi]
  41d950:	enter  0x23d9,0x13
  41d954:	or     DWORD PTR [edi],edx
  41d956:	sub    eax,0x29af6956
  41d95b:	xor    eax,0x7b0f0e38
  41d960:	test   DWORD PTR [ebp-0x7a],ebp
  41d963:	std    
  41d964:	aad    0x13
  41d966:	sbb    BYTE PTR [edi-0x2f6b5dfb],al
  41d96c:	out    dx,eax
  41d96d:	popa   
  41d96e:	ja     0x41d940
  41d970:	push   edi
  41d971:	xor    eax,0x524cb800
  41d976:	mov    WORD PTR [esp+eiz*2+0x667fbf99],?
  41d97d:	adc    al,0x28
  41d97f:	sub    ah,BYTE PTR [esi]
  41d981:	mov    eax,ds:0xbebce45c
  41d986:	lods   al,BYTE PTR ds:[esi]
  41d987:	mov    dl,0xcc
  41d989:	mov    BYTE PTR [ebp+0x40a29b3f],al
  41d98f:	jmp    0xab0fb67
  41d994:	sbb    eax,0xa31b8bf3
  41d999:	sub    edx,0xf9182fe9
  41d99f:	ins    DWORD PTR es:[edi],dx
  41d9a0:	repnz popa 
  41d9a2:	(bad)  
  41d9a3:	push   ss
  41d9a4:	push   0x79f03653
  41d9a9:	lods   al,BYTE PTR ds:[esi]
  41d9aa:	sub    esi,DWORD PTR [ebx+0x4378fc08]
  41d9b0:	test   eax,0xf82acce3
  41d9b5:	shr    DWORD PTR [ecx],1
  41d9b7:	into   
  41d9b8:	sbb    al,0x79
  41d9ba:	imul   ecx,DWORD PTR [ebp+0x7e],0x5fd8e09c
  41d9c1:	out    dx,eax
  41d9c2:	mov    ebx,0x11376603
  41d9c7:	cli    
  41d9c8:	xchg   ebp,eax
  41d9c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d9ca:	sbb    DWORD PTR [eax-0x4af04835],eax
  41d9d0:	(bad)  
  41d9d1:	mov    eax,ds:0x30376281
  41d9d6:	in     al,0x8d
  41d9d8:	ret    
  41d9d9:	call   0xb32e:0x6871936d
  41d9e0:	sub    DWORD PTR [esi-0x79],ebp
  41d9e3:	pusha  
  41d9e4:	addr16 mov edi,0x95b8a98a
  41d9ea:	aas    
  41d9eb:	jno    0x41da14
  41d9ed:	dec    esp
  41d9ee:	xor    dh,ch
  41d9f0:	and    edx,DWORD PTR [edi]
  41d9f2:	mov    ds:0x74dfbd7d,al
  41d9f7:	(bad)  
  41d9f8:	ret    0xe81b
  41d9fb:	bound  edx,QWORD PTR [ecx]
  41d9fd:	lds    edi,FWORD PTR ds:0x4d486222
  41da03:	mul    dh
  41da05:	daa    
  41da06:	imul   BYTE PTR [eax+0x44f0ee33]
  41da0c:	sti    
  41da0d:	loopne 0x41da45
  41da0f:	jmp    edi
  41da11:	int3   
  41da12:	shr    DWORD PTR [eax],1
  41da14:	cli    
  41da15:	inc    esi
  41da16:	jmp    0xd9ca48b1
  41da1b:	int3   
  41da1c:	in     al,0xb8
  41da1e:	add    edx,ebx
  41da20:	js     0x41d9da
  41da22:	or     BYTE PTR [esi],ch
  41da24:	push   ecx
  41da25:	push   edi
  41da26:	jg     0x41da28
  41da28:	add    ebp,DWORD PTR [edi+0x168f13bd]
  41da2e:	mov    eax,0x78d9c20b
  41da33:	jnp    0x41da81
  41da35:	cmp    DWORD PTR [edx+0x66],edx
  41da38:	jl     0x41da42
  41da3a:	sub    eax,0xd16a8137
  41da3f:	cmp    BYTE PTR [ecx+ebx*1-0x4bf20e93],ah
  41da46:	ret    
  41da47:	sub    DWORD PTR [ebx],0x91af9481
  41da4d:	jo     0x41da13
  41da4f:	adc    DWORD PTR [eax+0x5e383393],ebx
  41da55:	mov    ds:0x342cc3ca,al
  41da5a:	pushf  
  41da5b:	aam    0x33
  41da5d:	xchg   edi,eax
  41da5e:	mov    bl,0x96
  41da60:	sub    ah,ch
  41da62:	pop    ebx
  41da63:	xchg   ecx,eax
  41da64:	test   al,0xef
  41da66:	mov    ecx,edx
  41da68:	or     eax,0x582a36c9
  41da6d:	pop    ds
  41da6e:	fistp  QWORD PTR [edx+0x19]
  41da71:	ret    0xe470
  41da74:	push   ds
  41da75:	sbb    eax,0xb911b6c9
  41da7a:	sbb    ebx,DWORD PTR [ebp+0x5f4718b5]
  41da80:	and    BYTE PTR [ebx+0x48bd9e42],0x6d
  41da87:	xchg   esp,eax
  41da88:	dec    BYTE PTR [ebx-0x27ea4d5]
  41da8e:	pop    ecx
  41da8f:	sbb    DWORD PTR [eax+0x4575f9],edx
  41da95:	sbb    al,0xbc
  41da97:	pop    eax
  41da98:	mov    ch,0xe0
  41da9a:	stc    
  41da9b:	enter  0xfe93,0xe2
  41da9f:	jg     0x41dab8
  41daa1:	jge    0x41dafe
  41daa3:	or     DWORD PTR [eax+0x328dff89],esi
  41daa9:	cs (bad) 
  41daab:	es add cl,dl
  41daae:	and    ebx,esi
  41dab0:	scas   eax,DWORD PTR es:[edi]
  41dab1:	stc    
  41dab2:	jbe    0x41da57
  41dab4:	mov    di,0xc801
  41dab8:	pop    edx
  41dab9:	mov    edi,0x938905a5
  41dabe:	or     esp,DWORD PTR [esi-0x5090d5e9]
  41dac4:	sub    dh,al
  41dac6:	lods   al,BYTE PTR ds:[esi]
  41dac7:	fild   QWORD PTR [esi]
  41dac9:	fcomip st,st(7)
  41dacb:	jns    0x41da55
  41dacd:	fwait
  41dace:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dacf:	loope  0x41db28
  41dad1:	dec    edi
  41dad2:	xlat   BYTE PTR ds:[ebx]
  41dad3:	dec    eax
  41dad4:	ss pop es
  41dad6:	push   es
  41dad7:	adc    BYTE PTR [ecx+0x30],ch
  41dada:	mov    al,ds:0x10803e4d
  41dadf:	cmp    BYTE PTR [ecx-0x2c1ff292],bh
  41dae5:	icebp  
  41dae6:	pop    es
  41dae7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dae8:	pop    ds
  41dae9:	enter  0x88b8,0xa5
  41daed:	ror    DWORD PTR [edi+0x4813c367],cl
  41daf3:	stos   BYTE PTR es:[edi],al
  41daf4:	jge    0x41dafa
  41daf6:	loop   0x41db13
  41daf8:	sahf   
  41daf9:	cmp    al,0x96
  41dafb:	scas   al,BYTE PTR es:[edi]
  41dafc:	popf   
  41dafd:	jl     0x41db09
  41daff:	(bad)  
  41db00:	ror    BYTE PTR [esi+0x53d46242],0x75
  41db07:	jle    0x41dac7
  41db09:	xchg   ebp,eax
  41db0a:	pop    edx
  41db0b:	sar    bh,cl
  41db0d:	push   eax
  41db0e:	imul   ebp,esp,0x64
  41db11:	aad    0x6d
  41db13:	stc    
  41db14:	mov    DWORD PTR [esi],ebx
  41db16:	jae    0x41db29
  41db18:	or     eax,0x1604dc9d
  41db1d:	jecxz  0x41dacb
  41db1f:	and    dl,BYTE PTR [ebx+edx*8+0x3d]
  41db23:	cli    
  41db24:	or     BYTE PTR [eax+0x82ca35d],al
  41db2a:	pop    ebp
  41db2b:	lds    esp,FWORD PTR [esi+eiz*8+0x1]
  41db2f:	retf   
  41db30:	mov    dl,0xd4
  41db32:	shl    BYTE PTR [eax],0x51
  41db35:	adc    cl,BYTE PTR [edi]
  41db37:	jno    0x41db6d
  41db39:	dec    esi
  41db3a:	dec    ebp
  41db3b:	ror    BYTE PTR [ebp-0x6a],1
  41db3e:	push   eax
  41db3f:	dec    esp
  41db40:	fld    st(5)
  41db42:	cmp    esp,DWORD PTR [esi]
  41db44:	popf   
  41db45:	mov    ?,ebp
  41db47:	jmp    0x8c2:0xef030680
  41db4e:	mov    ecx,0x1e4f8ea0
  41db53:	mov    edx,0x92356273
  41db58:	idiv   cl
  41db5a:	jmp    0x41daf9
  41db5c:	aaa    
  41db5d:	(bad)  
  41db5e:	sub    eax,0x4ccf1128
  41db63:	mov    esp,0x3d564869
  41db68:	fistp  DWORD PTR [ebp+0x5]
  41db6b:	pop    ecx
  41db6c:	jne    0x41db65
  41db6e:	lods   eax,DWORD PTR ds:[esi]
  41db6f:	adc    esp,DWORD PTR [edx+0x1176d0bf]
  41db75:	xchg   ah,dh
  41db77:	in     al,dx
  41db78:	das    
  41db79:	sub    eax,0xff56954
  41db7e:	mov    dl,ch
  41db80:	(bad)  
  41db81:	int3   
  41db82:	ja     0x41db25
  41db84:	fwait
  41db85:	nop
  41db86:	hlt    
  41db87:	test   DWORD PTR gs:[eax-0x6e],ecx
  41db8b:	adc    esp,DWORD PTR [ebp+0x746632c8]
  41db91:	jns    0x41db28
  41db93:	scas   eax,DWORD PTR es:[edi]
  41db94:	outs   dx,BYTE PTR ds:[esi]
  41db95:	jge    0x41db9a
  41db97:	xor    ah,BYTE PTR [ecx]
  41db99:	cmp    BYTE PTR [eax+0xf2ba7f5],ah
  41db9f:	add    eax,0x2ca33b83
  41dba4:	pop    eax
  41dba5:	ss not cl
  41dba8:	jle    0x41db60
  41dbaa:	sti    
  41dbab:	or     bl,al
  41dbad:	in     al,0xf9
  41dbaf:	stos   BYTE PTR es:[edi],al
  41dbb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dbb1:	stos   BYTE PTR es:[edi],al
  41dbb2:	fstp   TBYTE PTR [ecx+0x7c]
  41dbb5:	in     eax,dx
  41dbb6:	jge    0x41db65
  41dbb8:	push   ds
  41dbb9:	sbb    al,0xd1
  41dbbb:	ins    DWORD PTR es:[edi],dx
  41dbbc:	test   BYTE PTR ds:0xed5c0736,dl
  41dbc2:	cs pop esi
  41dbc4:	jns    0x41dbc1
  41dbc6:	ins    BYTE PTR es:[edi],dx
  41dbc7:	push   ss
  41dbc8:	lods   al,BYTE PTR fs:[esi]
  41dbca:	ret    0xca8e
  41dbcd:	mov    al,0x99
  41dbcf:	xor    al,0x89
  41dbd1:	push   0x2e779cf3
  41dbd6:	xor    DWORD PTR [ecx+ebp*4-0x2b524890],ecx
  41dbdd:	sub    eax,0x515b168a
  41dbe2:	inc    edi
  41dbe3:	mov    bl,0xf0
  41dbe5:	push   0xffffffad
  41dbe7:	inc    ebx
  41dbe8:	jne    0x41dc05
  41dbea:	mov    cl,0xe1
  41dbec:	inc    esi
  41dbed:	in     eax,0xa7
  41dbef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dbf0:	fwait
  41dbf1:	adc    BYTE PTR [ebp-0x23c948af],cl
  41dbf7:	add    esp,DWORD PTR ds:0x3df9e091
  41dbfd:	mov    ah,0x68
  41dbff:	(bad)  
  41dc01:	pop    ebp
  41dc02:	push   ss
  41dc03:	fwait
  41dc04:	sbb    eax,0x820c1147
  41dc09:	imul   eax,DWORD PTR [ecx-0x3f],0x34
  41dc0d:	add    edi,ebp
  41dc0f:	in     al,0x96
  41dc11:	aas    
  41dc12:	add    ah,cl
  41dc14:	popa   
  41dc15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc16:	add    al,0x1a
  41dc18:	jmp    0x41dbb5
  41dc1a:	or     ah,ah
  41dc1c:	les    edx,FWORD PTR [edx-0x717bda88]
  41dc22:	jne    0x41dbcf
  41dc24:	pop    ecx
  41dc25:	mov    al,0xc8
  41dc27:	js     0x41dc2b
  41dc29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc2a:	sub    dh,BYTE PTR [edx+0x7e]
  41dc2d:	add    DWORD PTR [ebp+0x5b],edi
  41dc30:	add    al,bh
  41dc32:	sub    al,ah
  41dc34:	push   0xffffffe7
  41dc36:	or     bl,BYTE PTR [eax+edi*1+0x50a3be67]
  41dc3d:	dec    eax
  41dc3e:	or     DWORD PTR [ecx+esi*1-0x41017eb2],0x29702d09
  41dc49:	pusha  
  41dc4a:	sbb    BYTE PTR ds:0x730cfe0a,bl
  41dc50:	outs   dx,BYTE PTR ds:[esi]
  41dc51:	daa    
  41dc52:	dec    esi
  41dc53:	in     eax,0x4a
  41dc55:	mov    ecx,0x1e72c8c7
  41dc5a:	cwde   
  41dc5b:	mov    esp,0x807042af
  41dc60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc61:	sbb    ebp,DWORD PTR [ebp-0x3f]
  41dc64:	int3   
  41dc65:	add    al,0x3b
  41dc67:	push   ecx
  41dc68:	pop    esi
  41dc69:	(bad)  
  41dc6a:	sar    cl,1
  41dc6c:	jmp    0x4fd9:0x6b7f5577
  41dc73:	xchg   edi,eax
  41dc74:	ret    0x900b
  41dc77:	dec    edx
  41dc78:	push   ecx
  41dc79:	adc    dh,BYTE PTR [edx-0x28acfc36]
  41dc7f:	mov    ch,BYTE PTR [eax]
  41dc81:	mov    bh,0xc3
  41dc83:	jo     0x41dc92
  41dc85:	int3   
  41dc86:	popf   
  41dc87:	ret    
  41dc88:	xchg   ebp,eax
  41dc89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dc8a:	adc    eax,0x99b2dc1a
  41dc8f:	outs   dx,DWORD PTR ds:[esi]
  41dc90:	ins    DWORD PTR es:[edi],dx
  41dc91:	test   eax,0x983db261
  41dc96:	jnp    0x41dc7e
  41dc98:	fisub  WORD PTR [ebx]
  41dc9a:	outs   dx,BYTE PTR ds:[esi]
  41dc9b:	push   0x9
  41dc9d:	add    dl,BYTE PTR [edi-0x78]
  41dca0:	retf   
  41dca1:	sub    ecx,DWORD PTR [ebx]
  41dca3:	hlt    
  41dca4:	mov    ds:0x217ec69e,al
  41dca9:	xchg   ecx,eax
  41dcaa:	fsubr  QWORD PTR [esi+0x54]
  41dcad:	popa   
  41dcae:	adc    dl,BYTE PTR [ebx+0x3224164c]
  41dcb4:	or     eax,0x14f9bdee
  41dcb9:	jmp    0x41dcd0
  41dcbb:	push   0xffffffca
  41dcbd:	jb     0x41dd02
  41dcbf:	aas    
  41dcc0:	sar    DWORD PTR [eax-0x18],0x13
  41dcc4:	adc    al,0x67
  41dcc6:	ss hlt 
  41dcc8:	mov    ds:0x5c0f5744,al
  41dccd:	leave  
  41dcce:	ror    BYTE PTR [ebp+esi*4+0x7e],1
  41dcd2:	push   es
  41dcd3:	(bad)  
  41dcd4:	rcr    BYTE PTR [eax+0x9],cl
  41dcd7:	out    dx,al
  41dcd8:	jo     0x41dd40
  41dcda:	into   
  41dcdb:	xchg   ebp,eax
  41dcdc:	mov    bh,0xfd
  41dcde:	cli    
  41dcdf:	dec    eax
  41dce0:	cli    
  41dce1:	jg     0x41dc79
  41dce3:	scas   eax,DWORD PTR es:[edi]
  41dce4:	dec    eax
  41dce5:	js     0x41dca0
  41dce7:	mov    ecx,0x9eedf19
  41dcec:	xchg   BYTE PTR [edi-0x1c],bh
  41dcef:	leave  
  41dcf0:	sbb    BYTE PTR [esi+0x2f],0x77
  41dcf4:	lds    ecx,FWORD PTR [ecx-0x8424e4b]
  41dcfa:	cmp    cl,BYTE PTR [edx+0x5d]
  41dcfd:	and    DWORD PTR [ebx+0x4e6158d1],eax
  41dd03:	sbb    DWORD PTR [ebp+0x2d],0xa540631e
  41dd0a:	or     eax,0x19d06acf
  41dd0f:	push   edx
  41dd10:	mov    ds:0x12c30f67,eax
  41dd15:	push   ecx
  41dd16:	(bad)  [edx]
  41dd18:	ud1    ebp,DWORD PTR [ebx-0x16]
  41dd1c:	and    ah,BYTE PTR [ebx+ebx*1]
  41dd1f:	sbb    DWORD PTR [ecx+0x2e],ecx
  41dd22:	and    eax,0x5184b5f
  41dd27:	pmaxub mm0,QWORD PTR [esp+ebx*8-0x7c534831]
  41dd2f:	test   DWORD PTR [ecx-0x51],edx
  41dd32:	ds jecxz 0x41dd3b
  41dd35:	jnp    0x41dd64
  41dd37:	clc    
  41dd38:	jecxz  0x41dd59
  41dd3a:	lock loope 0x41ddae
  41dd3d:	pushf  
  41dd3e:	cwde   
  41dd3f:	adc    bl,BYTE PTR [eax]
  41dd41:	out    0x46,al
  41dd43:	mov    ah,BYTE PTR [ebx]
  41dd45:	dec    ebx
  41dd46:	inc    edi
  41dd47:	push   ds
  41dd48:	pusha  
  41dd49:	dec    edx
  41dd4a:	shl    DWORD PTR [eax],cl
  41dd4c:	sbb    al,0xe7
  41dd4e:	pop    ss
  41dd4f:	rcl    DWORD PTR [ebp-0x7],1
  41dd52:	addr16 cmc 
  41dd54:	push   0x1acb47b
  41dd59:	into   
  41dd5a:	rcl    DWORD PTR ss:[edi],1
  41dd5d:	cmp    dl,ah
  41dd5f:	rcl    esp,1
  41dd61:	sbb    eax,0x70
  41dd64:	sub    al,0xa1
  41dd66:	jne    0x41dde4
  41dd68:	sar    DWORD PTR ds:0x4cad06de,cl
  41dd6e:	dec    ebx
  41dd6f:	push   ecx
  41dd70:	js     0x41dde4
  41dd72:	int    0xa0
  41dd74:	sub    esp,DWORD PTR [esi+ebp*1]
  41dd77:	in     eax,0x96
  41dd79:	mov    al,ds:0xd0491aed
  41dd7e:	in     eax,0xbf
  41dd80:	cwde   
  41dd81:	fsub   DWORD PTR [edx+0x64]
  41dd84:	int    0xc8
  41dd86:	loope  0x41ddf1
  41dd88:	loop   0x41dd79
  41dd8a:	scas   eax,DWORD PTR es:[edi]
  41dd8b:	in     eax,dx
  41dd8c:	rcr    BYTE PTR [ebx],0x9e
  41dd8f:	in     eax,0xa0
  41dd91:	and    DWORD PTR [edi-0x53],ebp
  41dd94:	pop    ebx
  41dd95:	sbb    DWORD PTR [edi-0x338c9c56],edi
  41dd9b:	jb     0x41dd2f
  41dd9d:	xor    al,BYTE PTR [ecx+ebp*4-0x20]
  41dda1:	add    al,0xe7
  41dda3:	sbb    ch,BYTE PTR [edx-0x37]
  41dda6:	arpl   ax,dx
  41dda8:	adc    BYTE PTR [esi-0x396ba8cd],bl
  41ddae:	sub    DWORD PTR [eax-0x33],edx
  41ddb1:	(bad)  
  41ddb2:	and    DWORD PTR [edi],edi
  41ddb4:	mov    al,ds:0x11525c5f
  41ddb9:	sub    edx,ebp
  41ddbb:	jo     0x41dddf
  41ddbd:	pop    esp
  41ddbe:	out    0xd1,al
  41ddc0:	cs nop
  41ddc2:	nop
  41ddc3:	or     dh,0x9a
  41ddc6:	mov    ch,BYTE PTR [edi+0x17a988c7]
  41ddcc:	or     BYTE PTR [edx+eax*8],dh
  41ddcf:	xchg   ebx,eax
  41ddd0:	mov    ah,0x41
  41ddd2:	xchg   esi,eax
  41ddd3:	jle    0x41dda1
  41ddd5:	pop    ds
  41ddd6:	retf   
  41ddd7:	xor    bl,ch
  41ddd9:	jmp    0x505d:0xccd85f4e
  41dde0:	pop    esp
  41dde1:	std    
  41dde2:	iret   
  41dde3:	adc    al,0x39
  41dde5:	int    0xa3
  41dde7:	inc    esi
  41dde8:	retf   
  41dde9:	xchg   esi,eax
  41ddea:	xchg   edi,eax
  41ddeb:	xor    al,0xab
  41dded:	pop    esi
  41ddee:	sahf   
  41ddef:	ds dec ebp
  41ddf1:	scas   eax,DWORD PTR es:[edi]
  41ddf2:	pusha  
  41ddf3:	pop    esi
  41ddf4:	xor    eax,0x4dad316b
  41ddf9:	adc    ecx,DWORD PTR [eax+0x48d19096]
  41ddff:	dec    edx
  41de00:	mov    cs:0x6152a8d7,eax
  41de06:	adc    al,BYTE PTR [ebx+ebx*2-0xf555a3d]
  41de0d:	(bad)  
  41de0e:	test   BYTE PTR [edi+eax*4-0x31],0xe7
  41de13:	jae    0x41ddda
  41de15:	(bad)  [edi-0x3c]
  41de18:	jae    0x41de8d
  41de1a:	dec    ecx
  41de1b:	scas   eax,DWORD PTR es:[edi]
  41de1c:	dec    esi
  41de1d:	leave  
  41de1e:	jo     0x41ddc1
  41de20:	push   esp
  41de21:	cmc    
  41de22:	sub    eax,0x2136988e
  41de27:	mov    esi,0xf26ffb8c
  41de2c:	add    al,0xe0
  41de2e:	daa    
  41de2f:	sbb    edx,DWORD PTR [ecx-0x4d41b805]
  41de35:	dec    ecx
  41de36:	daa    
  41de37:	xchg   BYTE PTR [edi+edi*1],al
  41de3a:	and    bl,BYTE PTR [esi-0x6c]
  41de3d:	xor    dh,BYTE PTR [bx+si]
  41de40:	fnstcw WORD PTR [ebx]
  41de42:	nop
  41de43:	sbb    ch,BYTE PTR [edi+0x8]
  41de46:	dec    esi
  41de47:	push   es
  41de48:	jmp    0xd43bc4a7
  41de4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de4e:	aas    
  41de4f:	dec    edi
  41de51:	xchg   BYTE PTR [ecx],ah
  41de53:	mov    esp,0xfbb4e7c9
  41de58:	mov    al,0x24
  41de5a:	cmp    ebx,ecx
  41de5c:	or     eax,0xf840926
  41de61:	inc    eax
  41de62:	cmc    
  41de63:	mov    ecx,0x339bd352
  41de68:	std    
  41de69:	fisttp DWORD PTR [edx]
  41de6b:	dec    edx
  41de6c:	mov    bl,0xce
  41de6e:	gs pop edi
  41de70:	ins    BYTE PTR es:[edi],dx
  41de71:	cmp    DWORD PTR [edi],edx
  41de73:	call   0x827e6fa5
  41de78:	adc    eax,0x3b2bce55
  41de7d:	out    0x49,al
  41de7f:	dec    edx
  41de80:	and    ah,BYTE PTR [eax-0x28]
  41de83:	jb     0x41ded0
  41de85:	mov    edi,0x3f77d18
  41de8a:	ja     0x41de80
  41de8c:	je     0x41de7c
  41de8e:	ins    DWORD PTR es:[edi],dx
  41de8f:	cs jmp 0x41de7b
  41de92:	cli    
  41de93:	fs cmp dh,bh
  41de96:	mov    ebp,0xd09385c0
  41de9b:	xor    edi,DWORD PTR [ecx-0x65]
  41de9e:	retf   
  41de9f:	mov    dh,0x2
  41dea1:	or     BYTE PTR [ebx+ecx*8-0x3cbc8d9d],0x4
  41dea9:	mov    DWORD PTR [ecx-0x417c8b12],ebx
  41deaf:	mov    esi,0xc9818e08
  41deb4:	jbe    0x41dea9
  41deb6:	cmp    DWORD PTR [esi],edx
  41deb8:	(bad)  
  41deb9:	xchg   edx,eax
  41deba:	inc    esp
  41debb:	xchg   DWORD PTR [edi-0x2d0f9839],esp
  41dec1:	iret   
  41dec2:	fimul  WORD PTR [ecx+0x604d41ae]
  41dec8:	jl     0x41de88
  41deca:	sbb    bl,BYTE PTR [ebx+0x3dce512d]
  41ded0:	adc    edx,DWORD PTR [edi-0x2ba68c59]
  41ded6:	add    al,0x74
  41ded8:	in     al,dx
  41ded9:	push   ss
  41deda:	push   0x2e
  41dedc:	jb     0x41dec9
  41dede:	push   es
  41dedf:	and    edi,edi
  41dee1:	aaa    
  41dee2:	test   eax,0x7d160ec2
  41dee7:	pop    ebp
  41dee8:	ss es sub eax,0xce9d2c35
  41deef:	movsx  eax,WORD PTR [edx+0x44]
  41def3:	cmp    DWORD PTR [edi],edx
  41def5:	mov    dh,0x51
  41def7:	inc    ecx
  41def8:	in     eax,dx
  41def9:	shl    BYTE PTR [ecx-0x1f],1
  41defc:	mov    esi,0x781e6b81
  41df01:	xor    ebx,eax
  41df03:	pop    ecx
  41df04:	push   ecx
  41df05:	jge    0x41df48
  41df07:	xchg   DWORD PTR [edx+edi*1-0x74e3fe27],ebp
  41df0e:	pop    ebp
  41df0f:	mul    DWORD PTR [ebx+ebx*2]
  41df12:	add    bl,BYTE PTR [edx]
  41df14:	mov    ecx,ss
  41df16:	pop    esi
  41df17:	(bad)  
  41df18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df19:	mov    eax,ds:0x95d95652
  41df1e:	adc    BYTE PTR [ebx+0x6e17b71d],dl
  41df24:	and    BYTE PTR [ebp-0x11],bh
  41df27:	xchg   ecx,eax
  41df28:	adc    eax,0x38201f3b
  41df2d:	aas    
  41df2e:	push   ebx
  41df2f:	lock int3 
  41df31:	mov    esp,0xd6451618
  41df36:	push   ss
  41df37:	mov    edx,0x8468909
  41df3c:	sub    eax,0xbda64702
  41df41:	retf   0x64e2
  41df44:	mov    eax,ds:0x164a21da
  41df49:	sbb    al,0x4
  41df4b:	lods   al,BYTE PTR ds:[esi]
  41df4c:	and    al,0xef
  41df4e:	fadd   QWORD PTR [esi]
  41df50:	or     al,BYTE PTR [ebx+0x201d1605]
  41df56:	mov    esp,edi
  41df58:	fadd   QWORD PTR [ebx+0x5fbf931b]
  41df5e:	dec    ebx
  41df5f:	das    
  41df60:	scas   al,BYTE PTR es:[edi]
  41df61:	sti    
  41df62:	pop    esi
  41df63:	call   0xce9b2a36
  41df68:	shl    BYTE PTR [esi],0xb1
  41df6b:	out    0x17,eax
  41df6d:	inc    eax
  41df6e:	push   cs
  41df6f:	mov    dl,0x61
  41df71:	cmp    al,BYTE PTR [ebx+0x29307dbb]
  41df77:	cmp    ebp,eax
  41df79:	push   ebx
  41df7a:	ret    0x7ff6
  41df7d:	jnp    0x41df3b
  41df7f:	dec    edx
  41df80:	retf   0xd5da
  41df83:	inc    edi
  41df84:	jns    0x41df17
  41df86:	test   al,0x7f
  41df88:	xor    DWORD PTR [ecx+0x21d5f0f5],ebx
  41df8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df8f:	pusha  
  41df90:	push   ecx
  41df91:	or     al,0xa3
  41df93:	mov    cl,0x9a
  41df95:	gs das 
  41df97:	pushf  
  41df98:	and    BYTE PTR [ebx+esi*8-0x5f],0x94
  41df9d:	enter  0x11fd,0xeb
  41dfa1:	not    BYTE PTR [edx-0x18]
  41dfa4:	xor    dh,BYTE PTR [edx+0x2301f73c]
  41dfaa:	loope  0x41df53
  41dfac:	xor    al,0xd6
  41dfae:	adc    DWORD PTR [edx+0x6cc850ff],esi
  41dfb4:	xor    DWORD PTR [ecx+0x3b],edi
  41dfb7:	or     BYTE PTR [ecx+esi*2+0x6e],ah
  41dfbb:	dec    ecx
  41dfbc:	ja     0x41df5a
  41dfbe:	(bad)  
  41dfbf:	std    
  41dfc0:	jae    0x41df87
  41dfc2:	add    ebx,DWORD PTR [ebx+eiz*4]
  41dfc5:	aas    
  41dfc6:	xchg   DWORD PTR [ebx],ecx
  41dfc8:	jmp    0xe15ebc76
  41dfcd:	or     edi,DWORD PTR [edi]
  41dfcf:	or     eax,0x1eea367b
  41dfd4:	pop    esp
  41dfd5:	pop    ebx
  41dfd6:	mov    esp,0xac9f4db8
  41dfdb:	loopne 0x41e02b
  41dfdd:	add    bl,dh
  41dfdf:	mov    dh,0x41
  41dfe1:	sbb    al,0x55
  41dfe3:	xchg   esp,eax
  41dfe4:	popf   
  41dfe5:	add    eax,0x57f06063
  41dfea:	shr    DWORD PTR [esi-0x7b],0x56
  41dfee:	fucomp st(0)
  41dff0:	push   0xc2ccb588
  41dff5:	aam    0x1e
  41dff7:	inc    edi
  41dff8:	out    0xb9,eax
  41dffa:	stc    
  41dffb:	out    0x53,eax
  41dffd:	or     DWORD PTR ds:0xca18b0cf,0xffffffb3
  41e004:	loop   0x41e030
  41e006:	add    ecx,DWORD PTR [edi-0x29f4314b]
  41e00c:	test   BYTE PTR ds:0x39af51e7,0xbd
  41e013:	rcl    ecx,1
  41e015:	push   edi
  41e016:	xchg   BYTE PTR [ecx+edx*8+0x2b],dl
  41e01a:	js     0x41dfd6
  41e01c:	lahf   
  41e01d:	adc    al,0xe8
  41e01f:	in     eax,dx
  41e020:	mov    ss,WORD PTR [edi-0xc]
  41e023:	xor    BYTE PTR [ebx+0x1fb5ddfd],0x22
  41e02a:	test   BYTE PTR [edx+0x5e],dh
  41e02d:	(bad)  
  41e02e:	jbe    0x41e04a
  41e030:	aam    0x48
  41e032:	in     eax,0x56
  41e034:	outs   dx,BYTE PTR ds:[esi]
  41e035:	and    dl,BYTE PTR ds:[ebx-0x5f]
  41e039:	les    ecx,FWORD PTR [esi-0x626af575]
  41e03f:	sbb    BYTE PTR [esi+eax*4-0x42f9bf2c],al
  41e046:	pop    esp
  41e047:	jnp    0x41e08f
  41e049:	loop   0x41e03b
  41e04b:	int3   
  41e04c:	(bad)  
  41e04d:	sbb    al,0x8
  41e04f:	mov    eax,0xbfc4f2b2
  41e054:	cmp    eax,0x48bd462c
  41e059:	sub    ch,BYTE PTR [ebp-0x65e95bd3]
  41e05f:	imul   edx,DWORD PTR [edx-0x13],0x48f7ce24
  41e066:	jg     0x41e00a
  41e068:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e069:	ror    DWORD PTR [edx],cl
  41e06b:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e06d:	cld    
  41e06e:	test   BYTE PTR [eax+eax*1+0x7b],dh
  41e072:	dec    esp
  41e073:	and    dh,BYTE PTR [edi+ecx*8]
  41e076:	dec    edi
  41e077:	dec    esp
  41e078:	ins    DWORD PTR es:[edi],dx
  41e079:	fwait
  41e07a:	sbb    al,0xdb
  41e07c:	out    0xf8,al
  41e07e:	or     edx,DWORD PTR [edx-0x2fee0d3a]
  41e084:	sar    DWORD PTR [eax],cl
  41e086:	push   cs
  41e087:	inc    eax
  41e088:	loop   0x41e0b2
  41e08a:	xchg   ebp,eax
  41e08b:	cmp    al,0xe0
  41e08d:	call   0x56ee:0xeb373391
  41e094:	xchg   esi,eax
  41e095:	jmp    0x2a5ff7ce
  41e09a:	stc    
  41e09b:	add    DWORD PTR [ebp+0x59],ecx
  41e09e:	and    DWORD PTR [edx+0x6d],ebp
  41e0a1:	pop    ebx
  41e0a2:	mov    ebp,0x3979a1c9
  41e0a7:	jmp    0x41e074
  41e0a9:	inc    esp
  41e0aa:	xchg   ecx,eax
  41e0ab:	push   ss
  41e0ac:	nop
  41e0ad:	lods   eax,DWORD PTR ds:[esi]
  41e0ae:	mov    esp,0x1910632f
  41e0b3:	popa   
  41e0b4:	fbld   TBYTE PTR cs:[esi-0x3c24678e]
  41e0bb:	or     bl,al
  41e0bd:	cli    
  41e0be:	retf   0xa26e
  41e0c1:	xor    ecx,DWORD PTR [eax+0x35]
  41e0c4:	test   BYTE PTR [esi+0xd],dh
  41e0c7:	inc    edi
  41e0c8:	mov    al,0x52
  41e0ca:	and    ebx,0x6a6670fb
  41e0d0:	sub    DWORD PTR [edi],edi
  41e0d2:	xlat   BYTE PTR ds:[ebx]
  41e0d3:	pop    edi
  41e0d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e0d5:	and    ecx,DWORD PTR [edx-0x545fe0ee]
  41e0db:	or     al,0x6e
  41e0dd:	nop
  41e0de:	mov    ebx,0x3d14d35a
  41e0e3:	mov    ecx,DWORD PTR [edi]
  41e0e5:	jp     0x41e076
  41e0e7:	ret    0x64c2
  41e0ea:	(bad)  
  41e0eb:	int    0xdf
  41e0ed:	xlat   BYTE PTR ds:[ebx]
  41e0ee:	xlat   BYTE PTR ds:[ebx]
  41e0ef:	xchg   DWORD PTR [eax+ebp*2],edi
  41e0f2:	ror    DWORD PTR [esi-0x7],1
  41e0f5:	add    ch,BYTE PTR [ecx+0x490c5097]
  41e0fb:	fisubr DWORD PTR [edx]
  41e0fd:	pop    ss
  41e0fe:	xchg   edx,eax
  41e0ff:	mov    ecx,0x97cd68df
  41e104:	je     0x41e134
  41e106:	push   eax
  41e107:	xchg   ebx,eax
  41e108:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e109:	je     0x41e0be
  41e10b:	push   ebp
  41e10c:	push   0x62
  41e10e:	inc    ebx
  41e10f:	push   0xd41637f7
  41e114:	retf   
  41e115:	xor    BYTE PTR [ecx],ah
  41e117:	and    eax,0xc519dd09
  41e11c:	push   esp
  41e11d:	fdiv   QWORD PTR [edx+edx*4+0x5b]
  41e121:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e122:	ret    0x30a3
  41e125:	sub    bl,BYTE PTR [ebx-0x7c]
  41e128:	pop    esp
  41e129:	mov    al,0x5d
  41e12b:	mov    eax,ds:0x209d6e51
  41e130:	sub    esp,esp
  41e132:	sbb    ch,bh
  41e134:	lahf   
  41e135:	icebp  
  41e136:	jne    0x41e107
  41e138:	jp     0x41e1a3
  41e13a:	bound  ebp,QWORD PTR [ebx]
  41e13c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e13d:	mov    dl,0x25
  41e13f:	push   ds
  41e140:	out    0x6d,al
  41e142:	repz pusha 
  41e144:	and    eax,DWORD PTR [esi]
  41e146:	xchg   ah,al
  41e148:	push   esp
  41e149:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e14a:	cmp    eax,0xcb6ab121
  41e14f:	push   ebx
  41e150:	sbb    eax,0xf433b04d
  41e155:	cdq    
  41e156:	rcl    esi,0xae
  41e159:	or     al,0xa5
  41e15b:	mov    bl,0xbb
  41e15d:	pop    esp
  41e15e:	add    al,0xef
  41e160:	mov    ds:0x71dddb42,eax
  41e165:	ret    0xe82b
  41e168:	cs (bad) 
  41e16a:	(bad)  
  41e16b:	xchg   ebp,eax
  41e16c:	ds push ss
  41e16e:	inc    ebp
  41e16f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e170:	ror    dh,1
  41e172:	cmp    al,BYTE PTR [ecx+0x44]
  41e175:	stos   BYTE PTR es:[edi],al
  41e176:	enter  0x55a4,0x2d
  41e17a:	aaa    
  41e17b:	aaa    
  41e17c:	stos   BYTE PTR es:[edi],al
  41e17d:	idiv   BYTE PTR [esi]
  41e17f:	xor    DWORD PTR [edi],esp
  41e181:	cs jae 0x41e1ca
  41e184:	leave  
  41e185:	sahf   
  41e186:	shr    DWORD PTR [eax],0xe8
  41e189:	pop    ds
  41e18a:	cwde   
  41e18b:	sbb    eax,0x7d9d2adf
  41e190:	dec    ecx
  41e191:	or     eax,0x764759e7
  41e196:	dec    edx
  41e197:	cli    
  41e198:	das    
  41e199:	and    BYTE PTR [ecx],0x22
  41e19c:	jae    0x41e14e
  41e19e:	out    0x40,al
  41e1a0:	pop    esi
  41e1a1:	mov    cl,0x74
  41e1a3:	mov    esp,0x296396cd
  41e1a8:	xchg   edi,eax
  41e1a9:	mov    gs,WORD PTR [ebp-0x7b64524a]
  41e1af:	lods   eax,DWORD PTR ds:[esi]
  41e1b0:	(bad)  
  41e1b1:	sbb    edi,DWORD PTR [esp+ebx*1+0x7bf16685]
  41e1b8:	xchg   edx,eax
  41e1b9:	(bad)  
  41e1bb:	push   ebx
  41e1bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e1bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e1be:	adc    dh,BYTE PTR [ecx-0x33]
  41e1c1:	(bad)  
  41e1c2:	sbb    DWORD PTR [esi],ebp
  41e1c4:	mov    al,ds:0xdf2e4f22
  41e1c9:	leave  
  41e1ca:	push   eax
  41e1cb:	cdq    
  41e1cc:	jbe    0x41e221
  41e1ce:	cmp    DWORD PTR [ecx+0x24],edi
  41e1d1:	fadd   st,st(0)
  41e1d3:	aaa    
  41e1d4:	pop    edx
  41e1d5:	xchg   esi,eax
  41e1d6:	adc    BYTE PTR [esp+esi*8+0x4b0b979e],ch
  41e1dd:	xchg   BYTE PTR [eax],al
  41e1df:	jmp    0x41e23f
  41e1e1:	fcomp  st(5)
  41e1e3:	arpl   WORD PTR [edx+0x1d85b406],ax
  41e1e9:	mov    bl,0x84
  41e1eb:	jo     0x41e1f0
  41e1ed:	inc    edx
  41e1ee:	aam    0x85
  41e1f0:	call   0x88cbf6d5
  41e1f5:	dec    eax
  41e1f6:	imul   ebp,DWORD PTR [ecx],0xc
  41e1f9:	fld    st(2)
  41e1fb:	fisttp QWORD PTR [ecx+0x72ec38cf]
  41e201:	in     eax,0xf9
  41e203:	sub    BYTE PTR [esi-0x38],bh
  41e206:	push   eax
  41e207:	xchg   ebx,eax
  41e208:	inc    ebx
  41e209:	nop
  41e20a:	(bad)  
  41e20b:	mov    al,ds:0x20bfa2fc
  41e210:	sbb    eax,0xff8b1a64
  41e215:	mov    al,0xf5
  41e217:	add    DWORD PTR [ebp-0x31d9a081],0xffffff86
  41e21e:	adc    esi,DWORD PTR ds:0xbc6dee62
  41e224:	fld    TBYTE PTR [edx+0xe954231]
  41e22a:	sbb    eax,0xd5c60632
  41e22f:	cmp    eax,0x50a4e377
  41e234:	cli    
  41e235:	jo     0x41e1e7
  41e237:	jbe    0x41e207
  41e239:	mov    ah,0x49
  41e23b:	ret    0xc70d
  41e23e:	ins    DWORD PTR es:[edi],dx
  41e23f:	nop
  41e240:	rcl    DWORD PTR [edx+0x6f],cl
  41e243:	mov    ecx,0x4dce559e
  41e248:	fcompp 
  41e24a:	js     0x41e220
  41e24c:	cmp    al,0xf7
  41e24e:	fcomip st,st(2)
  41e250:	test   eax,0x975615b3
  41e255:	mul    DWORD PTR [esp+eiz*2]
  41e258:	push   ebx
  41e259:	mov    edi,0x1a589641
  41e25e:	xchg   ebx,eax
  41e25f:	enter  0xc9ee,0x83
  41e263:	(bad)  
  41e264:	dec    edx
  41e265:	push   ebx
  41e266:	(bad)  
  41e267:	pop    eax
  41e268:	fwait
  41e269:	les    eax,FWORD PTR [ecx]
  41e26b:	sbb    al,BYTE PTR [ecx+0x28]
  41e26e:	rol    DWORD PTR [esi-0x6f],1
  41e271:	inc    esp
  41e272:	cmp    eax,0xb5bdd448
  41e277:	mov    ecx,eax
  41e279:	mov    edi,0x3dc9d1f9
  41e27e:	push   ebx
  41e27f:	mov    al,ds:0x6fb58f38
  41e284:	and    BYTE PTR [esi-0x2b],0x7c
  41e288:	sbb    DWORD PTR [esi],edx
  41e28a:	dec    ecx
  41e28b:	pop    esi
  41e28c:	lods   al,BYTE PTR ds:[esi]
  41e28d:	adc    eax,0x42c95785
  41e292:	mov    ebx,0x1c5500dc
  41e297:	inc    eax
  41e298:	mov    ds:0xe2682785,al
  41e29d:	imul   eax,eax,0xb73374cf
  41e2a3:	stos   BYTE PTR es:[edi],al
  41e2a4:	jl     0x41e2fc
  41e2a6:	inc    esi
  41e2a7:	inc    edx
  41e2a8:	popf   
  41e2a9:	add    BYTE PTR [ebx+0x31e7446e],0xad
  41e2b0:	shl    DWORD PTR [ebp+0x268bfedd],1
  41e2b6:	je     0x41e2f6
  41e2b8:	add    BYTE PTR [ecx],0xcd
  41e2bb:	pop    eax
  41e2bc:	adc    eax,edi
  41e2be:	mov    bh,0xc4
  41e2c0:	dec    edx
  41e2c1:	test   edx,0x644bb2ff
  41e2c7:	lds    eax,FWORD PTR [edi+0x36986ad5]
  41e2cd:	and    eax,0x11094595
  41e2d2:	add    dl,bh
  41e2d4:	fsubrp st(4),st
  41e2d6:	jb     0x41e2bc
  41e2d8:	mov    al,0x69
  41e2da:	stos   BYTE PTR es:[edi],al
  41e2db:	xchg   ebp,eax
  41e2dc:	mov    bh,0xb7
  41e2de:	cmp    ah,BYTE PTR es:[esi]
  41e2e1:	jne    0x41e320
  41e2e3:	sti    
  41e2e4:	and    DWORD PTR [esi+0x725029f1],edx
  41e2ea:	or     BYTE PTR [edx],bl
  41e2ec:	mov    bh,0xa4
  41e2ee:	out    0x9a,eax
  41e2f0:	pop    esp
  41e2f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e2f2:	enter  0x6dff,0x6e
  41e2f6:	fild   DWORD PTR [esi+0x6fb2bdc9]
  41e2fc:	bound  ebx,QWORD PTR [edx-0x101ced32]
  41e302:	fild   QWORD PTR [eax]
  41e304:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e305:	push   ebx
  41e306:	jno    0x41e336
  41e308:	pop    es
  41e309:	pcmpgtw mm4,mm2
  41e30c:	dec    ebx
  41e30d:	push   edx
  41e30e:	nop
  41e30f:	xlat   BYTE PTR ds:[ebx]
  41e310:	inc    edi
  41e311:	aaa    
  41e312:	std    
  41e313:	push   esi
  41e314:	jns    0x41e33c
  41e316:	imul   edi,DWORD PTR [eax],0xc15dad95
  41e31c:	bound  edx,QWORD PTR [esi]
  41e31e:	hlt    
  41e31f:	adc    DWORD PTR gs:[ebp+0x38c16894],edx
  41e326:	cmp    al,0x1b
  41e328:	pop    esi
  41e329:	or     ch,ch
  41e32b:	jns    0x41e35f
  41e32d:	xchg   esi,eax
  41e32e:	and    al,0x31
  41e330:	inc    esi
  41e331:	aam    0x68
  41e333:	hlt    
  41e334:	dec    ecx
  41e335:	inc    ecx
  41e336:	xor    bl,BYTE PTR [ebx-0x6fc08758]
  41e33c:	push   0xffffffc1
  41e33e:	stos   BYTE PTR es:[edi],al
  41e33f:	jbe    0x41e30a
  41e341:	sbb    DWORD PTR [ecx+0x28332a70],edx
  41e347:	les    ecx,FWORD PTR [edi+0x33ba4388]
  41e34d:	repnz mov DWORD PTR [ebp-0x16],esi
  41e351:	sbb    eax,0x46469a88
  41e356:	and    eax,0xb9b17afd
  41e35b:	bound  esp,QWORD PTR [eax+0x11]
  41e35e:	(bad)  
  41e35f:	ss pop esi
  41e361:	loopne 0x41e320
  41e363:	cs adc ecx,esp
  41e366:	jmp    0x6cc172a3
  41e36b:	loopne 0x41e37c
  41e36d:	inc    esp
  41e36e:	push   ds
  41e36f:	and    BYTE PTR [ecx-0x3ff32c38],al
  41e375:	outs   dx,DWORD PTR ds:[esi]
  41e376:	inc    edx
  41e377:	pop    ecx
  41e378:	fstp   TBYTE PTR [ecx]
  41e37a:	and    BYTE PTR [eax],0xb2
  41e37d:	fnstcw WORD PTR [edi-0x4d]
  41e380:	repz mov dh,0x99
  41e383:	mov    dl,0xef
  41e385:	addr16 popf 
  41e387:	imul   edi,ebx,0x8710d5a0
  41e38d:	push   edi
  41e38e:	sbb    BYTE PTR [eax],bl
  41e390:	and    BYTE PTR [esi],dh
  41e392:	mov    cl,BYTE PTR ds:0x7dd2b417
  41e398:	out    dx,eax
  41e399:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e39a:	mov    edi,0xb18749f7
  41e39f:	lods   eax,DWORD PTR ds:[esi]
  41e3a0:	add    BYTE PTR [ebx+edi*4+0x16],dh
  41e3a4:	pop    ss
  41e3a5:	jecxz  0x41e40a
  41e3a7:	add    al,0x9
  41e3a9:	xchg   ebx,eax
  41e3aa:	jno    0x41e398
  41e3ac:	or     dl,ch
  41e3ae:	sub    cl,BYTE PTR [edx]
  41e3b0:	xor    ebx,DWORD PTR [eax+0x56]
  41e3b3:	lods   eax,DWORD PTR ds:[esi]
  41e3b4:	into   
  41e3b5:	jb     0x41e403
  41e3b7:	cmp    eax,0x719e0a8b
  41e3bc:	dec    ebp
  41e3bd:	sbb    al,0x21
  41e3bf:	out    0xec,eax
  41e3c1:	xchg   ebp,eax
  41e3c2:	arpl   WORD PTR [eax-0x780fb0e0],bp
  41e3c8:	pop    edx
  41e3c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e3ca:	aas    
  41e3cb:	pushf  
  41e3cc:	in     al,0xc6
  41e3ce:	cdq    
  41e3cf:	aaa    
  41e3d0:	cmp    ah,ah
  41e3d2:	jge    0x41e3a4
  41e3d4:	sub    eax,0xa5eaffed
  41e3d9:	dec    ebp
  41e3da:	add    eax,0x634f40dd
  41e3df:	jo     0x41e446
  41e3e1:	ret    
  41e3e2:	inc    eax
  41e3e3:	xlat   BYTE PTR ds:[ebx]
  41e3e4:	gs pusha 
  41e3e6:	into   
  41e3e7:	ja     0x41e388
  41e3e9:	dec    edi
  41e3ea:	std    
  41e3eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e3ec:	jg     0x41e3f8
  41e3ee:	xchg   DWORD PTR [ebp+0x46c1f696],ebx
  41e3f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e3f5:	test   al,0x10
  41e3f7:	std    
  41e3f8:	inc    ebp
  41e3f9:	xchg   edi,eax
  41e3fa:	mov    ch,0x4
  41e3fc:	mov    edi,0xa7c0e9fe
  41e401:	fincstp 
  41e403:	sbb    DWORD PTR ss:[ecx+eax*4],ecx
  41e407:	(bad)  
  41e408:	dec    ebx
  41e409:	cwde   
  41e40a:	push   es
  41e40b:	lods   eax,DWORD PTR ds:[esi]
  41e40c:	jnp    0x41e3b1
  41e40e:	scas   al,BYTE PTR es:[edi]
  41e40f:	and    eax,0xb32a9382
  41e414:	je     0x41e3b1
  41e416:	fs mov ecx,0x5cb653e2
  41e41c:	rol    BYTE PTR [ebp-0x13014765],0xc0
  41e423:	xchg   DWORD PTR [esi],esp
  41e425:	and    ebx,DWORD PTR [ebx+0x2]
  41e428:	es repnz dec esi
  41e42b:	iret   
  41e42c:	int    0xb9
  41e42e:	mov    ds:0xafca5289,al
  41e433:	or     DWORD PTR ds:0x64fd79cf,ebp
  41e439:	(bad)  
  41e43a:	jl     0x41e469
  41e43c:	fld    DWORD PTR [edx-0x76d58e77]
  41e442:	jg     0x41e463
  41e444:	ror    DWORD PTR [ecx],cl
  41e446:	pop    esp
  41e447:	inc    esp
  41e448:	mov    al,0x42
  41e44a:	(bad)  
  41e44b:	stos   DWORD PTR es:[edi],eax
  41e44c:	sub    DWORD PTR [edi+ebp*8],edi
  41e44f:	(bad)
  41e453:	loopne 0x41e3ec
  41e455:	mov    ch,0x14
  41e457:	add    eax,DWORD PTR [edi-0x54f019f7]
  41e45d:	outs   dx,DWORD PTR ds:[esi]
  41e45e:	cdq    
  41e45f:	xchg   edx,eax
  41e460:	sub    DWORD PTR [ebx-0x68fd9a17],ecx
  41e466:	sub    bh,BYTE PTR [esi]
  41e468:	push   cs
  41e469:	pushf  
  41e46a:	dec    ecx
  41e46b:	(bad)  
  41e46c:	(bad)  
  41e46d:	cmp    edx,DWORD PTR [edi+0x19]
  41e470:	jbe    0x41e4e1
  41e472:	imul   esi,ebp,0x7c
  41e475:	xor    DWORD PTR [edi],ebp
  41e477:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e478:	dec    eax
  41e479:	fisttp DWORD PTR [ecx]
  41e47b:	sub    al,0xfe
  41e47d:	add    al,0xc8
  41e47f:	jp     0x41e445
  41e481:	ficom  WORD PTR [edi-0x2348cd88]
  41e487:	fist   DWORD PTR [eax-0x5107fb66]
  41e48d:	pop    ds
  41e48e:	add    bh,bl
  41e490:	pushf  
  41e491:	push   esi
  41e492:	inc    edi
  41e493:	in     eax,0xbf
  41e495:	pop    ebx
  41e496:	push   eax
  41e497:	jg     0x41e430
  41e499:	xchg   ebx,eax
  41e49a:	pop    edx
  41e49b:	dec    eax
  41e49c:	ss or  al,0x9
  41e49f:	int3   
  41e4a0:	cld    
  41e4a1:	push   0x62f0d20f
  41e4a6:	sub    DWORD PTR [eax],ebp
  41e4a8:	add    esi,DWORD PTR [ebp+0x7f04f07b]
  41e4ae:	call   0xd8775a8f
  41e4b3:	pop    es
  41e4b4:	jl     0x41e492
  41e4b6:	fdivr  QWORD PTR [ebx-0x2f52d610]
  41e4bc:	cdq    
  41e4bd:	inc    ebx
  41e4be:	and    dh,BYTE PTR [ebp+edi*4-0x3]
  41e4c2:	or     al,0x5a
  41e4c4:	loope  0x41e53d
  41e4c6:	ins    BYTE PTR es:[edi],dx
  41e4c7:	jbe    0x41e4a4
  41e4c9:	clc    
  41e4ca:	cwde   
  41e4cb:	sahf   
  41e4cc:	jo     0x41e53e
  41e4ce:	int    0x1b
  41e4d0:	mov    dh,0xaa
  41e4d2:	xor    al,0x69
  41e4d4:	sub    eax,DWORD PTR [edi+0x74b0a47]
  41e4da:	xor    ebx,esi
  41e4dc:	push   ebp
  41e4dd:	or     ch,BYTE PTR [edi-0x2471b34a]
  41e4e3:	pop    esp
  41e4e4:	lods   al,BYTE PTR ds:[esi]
  41e4e5:	sbb    BYTE PTR [ebx],bh
  41e4e7:	rcl    DWORD PTR [ebx+0x2ffe05da],1
  41e4ed:	push   0x8f43714e
  41e4f2:	loopne 0x41e54b
  41e4f4:	icebp  
  41e4f5:	adc    BYTE PTR [esi],bh
  41e4f7:	fimul  DWORD PTR [ecx-0x2b]
  41e4fa:	stos   DWORD PTR es:[edi],eax
  41e4fb:	ror    BYTE PTR [ecx-0x3d55dd30],1
  41e501:	mov    cl,0xbb
  41e503:	scas   eax,DWORD PTR es:[edi]
  41e504:	test   al,0xe4
  41e506:	push   esp
  41e507:	jge    0x41e4ef
  41e509:	jbe    0x41e49f
  41e50b:	sbb    DWORD PTR [esi+0x952d0df],ebp
  41e511:	mov    ?,WORD PTR [eax-0x33cc46b2]
  41e517:	in     al,dx
  41e518:	add    DWORD PTR [ebx],ebp
  41e51a:	cdq    
  41e51b:	inc    edx
  41e51c:	adc    BYTE PTR [edx-0x1c],dl
  41e51f:	das    
  41e520:	push   eax
  41e521:	push   edi
  41e522:	push   0x17
  41e524:	popa   
  41e525:	jle    0x41e4b0
  41e527:	mov    gs:0x659ba57f,al
  41e52d:	pop    edx
  41e52e:	xchg   ecx,eax
  41e52f:	out    dx,eax
  41e530:	push   ebp
  41e531:	ret    
  41e532:	out    dx,al
  41e533:	dec    ebx
  41e534:	push   eax
  41e535:	jnp    0x41e589
  41e537:	aam    0x51
  41e539:	sbb    ecx,DWORD PTR [ebp+edi*1+0x3d]
  41e53d:	sahf   
  41e53e:	pop    esi
  41e53f:	adc    dl,BYTE PTR [ebx+0xd]
  41e542:	mov    esp,0x386d7483
  41e547:	sub    dl,ch
  41e549:	jge    0x41e503
  41e54b:	push   es
  41e54c:	cwde   
  41e54d:	retf   0x2db
  41e550:	call   0x146d:0x6c9f8b8e
  41e557:	push   edx
  41e558:	xchg   esi,eax
  41e559:	test   al,0x8a
  41e55b:	jle    0x41e5b6
  41e55d:	rol    ch,1
  41e55f:	jle    0x41e4e6
  41e561:	frstor [eax]
  41e563:	packsswb mm4,QWORD PTR ds:0x3368240a
  41e56a:	push   edi
  41e56b:	shl    DWORD PTR [edx-0x70],0xf4
  41e56f:	mov    ds:0xb0511d22,al
  41e574:	cmp    DWORD PTR [ebx-0xe],edx
  41e577:	push   ds
  41e578:	inc    edi
  41e579:	adc    eax,0x2f230755
  41e57e:	xor    al,0xbe
  41e580:	mov    dl,0x8
  41e582:	popf   
  41e583:	rol    ch,cl
  41e585:	and    DWORD PTR [esi-0x643f427e],ecx
  41e58b:	mov    esp,0x74cc18bf
  41e590:	fst    DWORD PTR [eax-0x6218069a]
  41e596:	loopne 0x41e575
  41e598:	dec    esp
  41e599:	push   eax
  41e59a:	push   cs
  41e59b:	data16 jecxz 0x41e5e6
  41e59e:	mov    ds:0xe5c222d9,al
  41e5a3:	cmp    BYTE PTR [eax+eax*4+0x64127f80],bh
  41e5aa:	add    al,0x18
  41e5ac:	xor    al,0xd3
  41e5ae:	mov    eax,ds:0x1f8d9398
  41e5b3:	pop    ds
  41e5b4:	push   cs
  41e5b5:	and    DWORD PTR [ebx+esi*2],eax
  41e5b8:	daa    
  41e5b9:	mov    ah,BYTE PTR [edx-0x93d7d43]
  41e5bf:	maxps  xmm0,XMMWORD PTR [edx+eax*8]
  41e5c3:	loope  0x41e545
  41e5c5:	pop    ebx
  41e5c6:	push   ecx
  41e5c7:	xchg   esp,eax
  41e5c8:	test   DWORD PTR [eax-0x2a],eax
  41e5cb:	push   eax
  41e5cc:	loopne 0x41e5d2
  41e5ce:	sti    
  41e5cf:	sub    eax,0xcda377c6
  41e5d4:	ret    0x79ca
  41e5d7:	int    0x6b
  41e5d9:	or     BYTE PTR [ebp+0x23],bh
  41e5dc:	inc    ecx
  41e5dd:	rsm    
  41e5df:	mov    ecx,0xaba48455
  41e5e4:	(bad)  
  41e5e6:	jge    0x41e64e
  41e5e8:	add    dh,BYTE PTR [esi]
  41e5ea:	mov    ds:0x8f18f9f,eax
  41e5ef:	sbb    BYTE PTR [ebx+ebx*8+0x6e751dba],dl
  41e5f6:	xchg   ebp,eax
  41e5f7:	ror    BYTE PTR [ecx],cl
  41e5f9:	add    al,cl
  41e5fb:	test   eax,0x37a6558a
  41e600:	cmp    bh,BYTE PTR [ebx-0x28]
  41e603:	in     eax,0xab
  41e605:	fisubr WORD PTR [ebp+0x5138e24a]
  41e60b:	repnz das 
  41e60d:	adc    al,0xbc
  41e60f:	scas   eax,DWORD PTR es:[edi]
  41e610:	clc    
  41e611:	xor    ebp,DWORD PTR [edx+0x5ab7357c]
  41e617:	jno    0x41e5a7
  41e619:	jnp    0x41e5f4
  41e61b:	(bad)  
  41e61d:	mov    esp,esi
  41e61f:	xchg   esi,eax
  41e620:	es jl  0x41e5cb
  41e623:	aas    
  41e624:	test   al,0xa5
  41e626:	pop    edx
  41e627:	add    eax,0xe38aec5d
  41e62c:	xchg   edx,eax
  41e62d:	cmp    esi,DWORD PTR [eax+eiz*2+0x4552fb36]
  41e634:	xchg   BYTE PTR ds:0x88df9f82,ah
  41e63b:	adc    esp,DWORD PTR [ecx]
  41e63d:	xchg   ebx,eax
  41e63e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e63f:	out    0xde,eax
  41e641:	cmc    
  41e642:	retf   
  41e643:	mov    al,0x35
  41e645:	lods   eax,DWORD PTR ds:[esi]
  41e646:	repnz fild DWORD PTR [ebx-0x894cc72]
  41e64d:	mov    WORD PTR [ebp+0x79],ss
  41e650:	rcl    DWORD PTR [edx],1
  41e652:	icebp  
  41e653:	xor    al,ah
  41e655:	xchg   ecx,eax
  41e656:	mov    DWORD PTR [ecx-0x6],edx
  41e659:	xor    BYTE PTR [ebx-0x69],al
  41e65c:	cs adc eax,0x74dd654f
  41e662:	icebp  
  41e663:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e664:	test   eax,0xc0cc4643
  41e669:	mov    eax,0x6eaa38dc
  41e66e:	gs cmp al,0xb
  41e671:	jo     0x41e6ad
  41e673:	mov    esi,?
  41e675:	iret   
  41e676:	pop    ebp
  41e677:	fisub  WORD PTR [esi+0x3c039f36]
  41e67d:	cmp    esp,DWORD PTR [edi]
  41e67f:	pop    es
  41e680:	sub    eax,0x8b99e901
  41e685:	xchg   edx,eax
  41e686:	sahf   
  41e687:	aaa    
  41e688:	jns    0x41e621
  41e68a:	jae    0x41e657
  41e68c:	lea    ebx,[edx]
  41e68e:	mov    eax,0x85399655
  41e693:	pop    ebx
  41e694:	adc    eax,DWORD PTR [eax-0x78]
  41e697:	iret   
  41e698:	jecxz  0x41e649
  41e69a:	rcr    DWORD PTR [ebp+0xe67b0f5],1
  41e6a0:	in     eax,dx
  41e6a1:	or     cl,BYTE PTR [ecx-0xa]
  41e6a4:	adc    BYTE PTR [edx-0x39cced8b],bl
  41e6aa:	outs   dx,DWORD PTR ds:[esi]
  41e6ab:	(bad)  
  41e6ac:	jne    0x41e717
  41e6ae:	clc    
  41e6af:	stc    
  41e6b0:	sar    BYTE PTR [edi+0x10],cl
  41e6b3:	imul   ebp,DWORD PTR [ecx-0x65cc4209],0x1aa44d56
  41e6bd:	ret    0xcdb
  41e6c0:	push   cs
  41e6c1:	cmp    BYTE PTR [esi],dl
  41e6c3:	int    0x2d
  41e6c5:	pushf  
  41e6c6:	pushf  
  41e6c7:	pop    ebp
  41e6c8:	loop   0x41e652
  41e6ca:	les    eax,FWORD PTR [ecx+0x78d09d91]
  41e6d0:	out    dx,eax
  41e6d1:	lock adc edx,DWORD PTR [edi+ecx*4]
  41e6d5:	test   DWORD PTR [ebx+0x55],0x854caa88
  41e6dc:	repnz xor BYTE PTR [ebx],bl
  41e6df:	fnclex 
  41e6e1:	out    0xe5,al
  41e6e3:	sahf   
  41e6e4:	sub    eax,0xd8952200
  41e6e9:	mov    bh,0x6e
  41e6eb:	xor    DWORD PTR [edx+edi*4],eax
  41e6ee:	(bad)  
  41e6ef:	adc    DWORD PTR [ebx+0x77],ebx
  41e6f2:	xor    ebx,DWORD PTR [ebx+ebp*8]
  41e6f5:	pop    edx
  41e6f6:	aad    0xfe
  41e6f8:	int3   
  41e6f9:	dec    ebx
  41e6fa:	cmp    eax,0xdcab5dd4
  41e6ff:	test   al,0x7f
  41e701:	(bad)  
  41e702:	jecxz  0x41e6eb
  41e704:	adc    eax,0x47ea68f5
  41e709:	jmp    0x41e6f1
  41e70b:	or     al,cl
  41e70d:	cmp    ecx,esi
  41e70f:	add    BYTE PTR [eax-0x350bad82],dh
  41e715:	jp     0x41e6be
  41e717:	(bad)  
  41e718:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e719:	outs   dx,BYTE PTR ds:[esi]
  41e71a:	call   0x588c:0x332672b5
  41e721:	fnsetpm(287 only) 
  41e723:	mov    bl,0xb5
  41e725:	inc    edi
  41e726:	outs   dx,BYTE PTR ds:[esi]
  41e727:	les    ebx,FWORD PTR [ebp-0x519875d5]
  41e72d:	xchg   esi,eax
  41e72e:	aad    0xf7
  41e730:	xchg   ebp,eax
  41e731:	sbb    cl,bh
  41e733:	sbb    ah,BYTE PTR [edi]
  41e735:	retf   
  41e736:	push   es
  41e737:	(bad)  
  41e738:	out    dx,al
  41e739:	les    edx,FWORD PTR [ebx-0x7cb778c6]
  41e73f:	lods   al,BYTE PTR ds:[esi]
  41e740:	arpl   ax,ax
  41e742:	jno    0x41e7ba
  41e744:	sub    esi,DWORD PTR [ebx]
  41e746:	xor    dh,bh
  41e748:	mov    al,ds:0x1b71de74
  41e74d:	stos   DWORD PTR es:[edi],eax
  41e74e:	pop    ds
  41e74f:	inc    edx
  41e750:	(bad)  
  41e751:	or     ch,dh
  41e753:	xchg   BYTE PTR [eax],ch
  41e755:	inc    ebx
  41e756:	rcr    esi,1
  41e758:	call   0xca54:0xe19390d6
  41e75f:	outs   dx,BYTE PTR gs:[esi]
  41e761:	dec    edi
  41e762:	in     eax,dx
  41e763:	(bad)  [esi+0x514d6279]
  41e769:	imul   ebp,DWORD PTR cs:[esp+ecx*4+0x62],0xfffffffe
  41e76f:	jl     0x41e734
  41e771:	sub    BYTE PTR [edx],ah
  41e773:	outs   dx,BYTE PTR ds:[esi]
  41e774:	or     al,0xa9
  41e776:	cmp    BYTE PTR [eax-0x407dca1],bh
  41e77c:	pushf  
  41e77d:	mov    ebp,0xcb633c3c
  41e782:	repz jmp 0x368ff53d
  41e788:	jg     0x41e731
  41e78a:	mov    dl,cl
  41e78c:	std    
  41e78d:	sbb    ecx,edx
  41e78f:	jmp    0x41e77f
  41e791:	dec    esp
  41e792:	or     esp,DWORD PTR [ebx]
  41e794:	icebp  
  41e795:	popf   
  41e796:	mov    ch,0x90
  41e798:	xor    DWORD PTR [esi-0x8],0x79a77aa9
  41e79f:	or     DWORD PTR [edx],ebx
  41e7a1:	out    dx,al
  41e7a2:	jno    0x41e754
  41e7a4:	jmp    0xa7ceeec9
  41e7a9:	in     eax,0xd1
  41e7ab:	fbld   TBYTE PTR [esi]
  41e7ad:	jns    0x41e790
  41e7af:	pop    esp
  41e7b0:	lock fild QWORD PTR [eax+0x180824ce]
  41e7b7:	ficomp DWORD PTR [esi-0x21]
  41e7ba:	outs   dx,BYTE PTR ds:[esi]
  41e7bb:	jb     0x41e7bf
  41e7bd:	(bad)  
  41e7be:	mov    al,0x4b
  41e7c0:	jl     0x41e805
  41e7c2:	scas   eax,DWORD PTR es:[edi]
  41e7c3:	(bad)  
  41e7c4:	xchg   ebx,eax
  41e7c5:	rcr    BYTE PTR [edi],1
  41e7c7:	mov    cs,WORD PTR [edi]
  41e7c9:	push   ebx
  41e7ca:	xchg   ebp,eax
  41e7cb:	mov    al,ds:0xf75039e9
  41e7d1:	add    bl,dl
  41e7d3:	lahf   
  41e7d4:	xor    al,BYTE PTR [ebx-0x26]
  41e7d7:	jmp    0x41e769
  41e7d9:	and    al,BYTE PTR [ebx+0x5a]
  41e7dc:	xchg   DWORD PTR [edi+ebx*4],edx
  41e7df:	mov    cl,bh
  41e7e1:	out    dx,eax
  41e7e2:	and    DWORD PTR [esi-0x3ffff2b8],edi
  41e7e8:	fld    QWORD PTR [edi+0x7e]
  41e7eb:	outs   dx,DWORD PTR ds:[esi]
  41e7ec:	sbb    BYTE PTR [eax-0x5d],ah
  41e7ef:	sbb    eax,0x4cf76cf9
  41e7f4:	sub    bl,BYTE PTR [ebx]
  41e7f6:	clc    
  41e7f7:	(bad)  
  41e7f8:	jecxz  0x41e833
  41e7fa:	(bad)  
  41e7fb:	fst    DWORD PTR [ebx+ebx*8]
  41e7fe:	in     eax,0x63
  41e800:	scas   al,BYTE PTR es:[edi]
  41e801:	dec    esp
  41e802:	fist   DWORD PTR ds:0x313985c6
  41e808:	ins    DWORD PTR es:[edi],dx
  41e809:	jae    0x41e866
  41e80b:	inc    esp
  41e80d:	int3   
  41e80e:	or     DWORD PTR [ecx+eax*1-0x70],esp
  41e812:	fisttp DWORD PTR [edi+0x79]
  41e815:	push   0xffffff98
  41e817:	inc    ebx
  41e818:	jnp    0x41e83e
  41e81a:	xchg   BYTE PTR [eax],dh
  41e81c:	sti    
  41e81d:	ds js  0x41e831
  41e820:	sbb    eax,0x348489b9
  41e825:	or     al,0x50
  41e827:	pop    ss
  41e828:	or     DWORD PTR [ebx-0x72],esp
  41e82b:	push   edi
  41e82c:	leave  
  41e82d:	cmp    ch,BYTE PTR [ebx+ebx*1]
  41e830:	icebp  
  41e831:	push   0x82c6c3d9
  41e836:	cli    
  41e837:	jp     0x41e7c9
  41e839:	jp     0x41e817
  41e83b:	cs aas 
  41e83d:	xchg   ebx,eax
  41e83e:	xor    al,bh
  41e840:	fmulp  st(2),st
  41e842:	xchg   esi,eax
  41e843:	lock jbe 0x41e7ea
  41e846:	mov    ebp,0xe4ef6ddd
  41e84b:	xchg   esp,eax
  41e84c:	fild   DWORD PTR [ebp+ecx*2-0x790e1098]
  41e853:	cdq    
  41e854:	in     eax,0xa3
  41e856:	aas    
  41e857:	lea    esp,[ebx+eiz*8+0x58be53ce]
  41e85e:	ins    BYTE PTR es:[edi],dx
  41e85f:	and    DWORD PTR [edx+0x2c],edx
  41e862:	pop    edx
  41e863:	xlat   BYTE PTR ds:[ebx]
  41e864:	mov    DWORD PTR [ebx-0x50],esp
  41e867:	cwde   
  41e868:	fst    st(4)
  41e86a:	add    DWORD PTR [edi],ebp
  41e86c:	mov    cl,cl
  41e86e:	sub    edx,DWORD PTR [esi+0xb8ca94b]
  41e874:	jmp    0xdc002244
  41e879:	mov    eax,0x3d837a4
  41e87e:	sbb    BYTE PTR [eax+0x40],dl
  41e881:	mov    edi,0x8eabd6b5
  41e886:	test   dl,bh
  41e888:	add    eax,0xdd2a6b9c
  41e88d:	jns    0x41e88e
  41e88f:	inc    edx
  41e890:	out    dx,al
  41e891:	sbb    BYTE PTR [ebx+0xcc646d1],dl
  41e897:	test   DWORD PTR [edi+0x194032d0],esp
  41e89d:	pop    esi
  41e89e:	push   0xffffffff
  41e8a0:	cmovp  esp,ecx
  41e8a3:	(bad)  
  41e8a4:	clc    
  41e8a5:	dec    eax
  41e8a6:	push   0xffffffbe
  41e8a8:	fs jbe 0x41e850
  41e8ab:	sub    al,bh
  41e8ad:	mov    DWORD PTR [ecx+0x74],esp
  41e8b0:	push   0x45
  41e8b2:	mov    bh,0xdd
  41e8b4:	mov    DWORD PTR [ebx+0x65],esi
  41e8b7:	repnz push cs
  41e8b9:	ins    BYTE PTR es:[edi],dx
  41e8ba:	sti    
  41e8bb:	xor    al,0x1c
  41e8bd:	call   0x909e7224
  41e8c2:	dec    esp
  41e8c3:	pop    esp
  41e8c4:	cmp    ebp,DWORD PTR [esi-0x1040c90c]
  41e8ca:	jno    0x41e8d7
  41e8cc:	fs jle 0x41e8f9
  41e8cf:	dec    edi
  41e8d0:	gs mov esi,0x1784901d
  41e8d6:	jnp    0x41e8f1
  41e8d8:	cs cdq 
  41e8da:	outs   dx,DWORD PTR ds:[esi]
  41e8db:	mov    WORD PTR [edi+edx*1-0x66],es
  41e8df:	sti    
  41e8e0:	mov    ecx,0x20c2b904
  41e8e5:	jmp    0xfce6:0x51b646dc
  41e8ec:	mov    ebx,0x28159666
  41e8f1:	inc    ecx
  41e8f2:	ret    
  41e8f3:	in     al,dx
  41e8f4:	rol    DWORD PTR [esi],1
  41e8f6:	adc    edi,DWORD PTR ds:0xbd0d135a
  41e8fc:	fsubr  DWORD PTR [esi+0x55]
  41e8ff:	daa    
  41e900:	aad    0xd
  41e902:	mov    ebp,0x88fc288b
  41e907:	push   esi
  41e908:	popa   
  41e909:	inc    esi
  41e90a:	cmp    bh,dh
  41e90c:	mov    esi,0xca9f4945
  41e911:	scas   eax,DWORD PTR es:[edi]
  41e912:	(bad)  
  41e913:	xor    cl,BYTE PTR [edi+0x25]
  41e916:	and    esp,DWORD PTR [ecx+0x67]
  41e919:	jp     0x41e8de
  41e91b:	push   ebx
  41e91c:	push   edi
  41e91d:	test   ebp,esi
  41e91f:	aad    0x21
  41e921:	dec    esp
  41e922:	ds pop esp
  41e924:	dec    edx
  41e925:	(bad)  
  41e926:	js     0x41e941
  41e928:	pop    ebx
  41e929:	int3   
  41e92a:	or     ah,ch
  41e92c:	gs jbe 0x41e97a
  41e92f:	jnp    0x41e920
  41e931:	add    DWORD PTR [ecx],edx
  41e933:	jno    0x41e956
  41e935:	call   0x4ada1dc4
  41e93a:	call   0x419c:0xd2282ef5
  41e941:	cmp    bh,bl
  41e943:	scas   al,BYTE PTR es:[edi]
  41e944:	push   ebx
  41e945:	into   
  41e946:	push   ebx
  41e947:	test   BYTE PTR [edi+0x6e22b90f],cl
  41e94d:	repnz cmp eax,0x397df68
  41e953:	leave  
  41e954:	dec    ebx
  41e955:	stos   BYTE PTR es:[edi],al
  41e956:	xor    DWORD PTR [edx],edx
  41e958:	xchg   esp,eax
  41e959:	mov    al,ds:0x13851bdf
  41e95e:	pop    ecx
  41e95f:	pop    edx
  41e960:	or     BYTE PTR [edx],0xf6
  41e963:	dec    ecx
  41e964:	in     eax,dx
  41e965:	push   esp
  41e966:	sub    eax,0xd0dacb8d
  41e96b:	push   esi
  41e96c:	inc    ebx
  41e96d:	mov    DWORD PTR [ebx],eax
  41e96f:	ficomp WORD PTR [ecx-0x78482a96]
  41e975:	ja     0x41e932
  41e977:	or     ecx,ebx
  41e979:	fist   WORD PTR [ecx+0x2a]
  41e97c:	dec    esp
  41e97d:	icebp  
  41e97e:	test   eax,0x502ad7be
  41e983:	sar    dl,cl
  41e985:	mov    ds:0x7ccfe0c7,al
  41e98a:	loope  0x41e994
  41e98c:	mov    al,0x71
  41e98e:	es push esp
  41e990:	shr    DWORD PTR [ecx-0x22],0x58
  41e994:	clc    
  41e995:	mov    al,ds:0x40f3c62
  41e99a:	pop    ss
  41e99b:	dec    edx
  41e99c:	mov    dl,bh
  41e99e:	inc    DWORD PTR [ecx-0x42]
  41e9a1:	push   0xffffff8e
  41e9a3:	adc    DWORD PTR [ebx],ebx
  41e9a5:	cmp    DWORD PTR [edx+0x6a],esp
  41e9a8:	xor    ecx,DWORD PTR [ebx-0x6c8b3caf]
  41e9ae:	or     al,0xad
  41e9b0:	(bad)  
  41e9b1:	loope  0x41e9aa
  41e9b3:	es jmp 0x2bc0c256
  41e9b9:	xchg   ecx,eax
  41e9ba:	bound  edx,QWORD PTR [eax+0x1860cd28]
  41e9c0:	add    eax,0x71d7421e
  41e9c5:	push   0xfffffffc
  41e9c7:	push   edi
  41e9c8:	sbb    DWORD PTR [edx],eax
  41e9ca:	xor    eax,0x59f83d04
  41e9cf:	ret    
  41e9d0:	popa   
  41e9d1:	out    dx,eax
  41e9d2:	pop    es
  41e9d3:	out    dx,al
  41e9d4:	popf   
  41e9d5:	shl    BYTE PTR [ebx-0x23],1
  41e9d8:	jbe    0x41e9dd
  41e9da:	pop    edx
  41e9db:	ret    0xe580
  41e9de:	ficom  WORD PTR [ebp-0x2e2325b0]
  41e9e4:	in     eax,dx
  41e9e5:	jo     0x41e9ef
  41e9e7:	ins    BYTE PTR es:[edi],dx
  41e9e8:	in     eax,dx
  41e9e9:	(bad)  
  41e9ea:	aas    
  41e9eb:	push   edx
  41e9ec:	adc    eax,0x362d25d0
  41e9f1:	aaa    
  41e9f2:	push   ecx
  41e9f3:	xchg   ecx,eax
  41e9f4:	fld    QWORD PTR [ebx-0x7f]
  41e9f7:	add    eax,0x289b0a38
  41e9fc:	lea    ebx,[esi]
  41e9fe:	(bad)  
  41e9ff:	cli    
  41ea00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea01:	inc    edi
  41ea02:	xor    BYTE PTR [eax],dh
  41ea04:	pushf  
  41ea05:	or     ah,BYTE PTR [edx]
  41ea07:	jmp    0x5f78:0x8d018f44
  41ea0e:	rcl    al,0xd4
  41ea11:	mov    edi,0x6b4f7612
  41ea16:	in     eax,dx
  41ea17:	out    dx,eax
  41ea18:	xchg   ebx,eax
  41ea19:	retf   0x7343
  41ea1c:	int3   
  41ea1d:	pop    es
  41ea1e:	sub    al,0x75
  41ea20:	popf   
  41ea21:	jne    0x41e9d9
  41ea23:	sub    DWORD PTR [ebx-0x3d],edi
  41ea26:	pop    esi
  41ea27:	dec    esp
  41ea28:	(bad)  
  41ea2a:	mov    ah,0x90
  41ea2c:	ucomiss xmm0,DWORD PTR [eax-0x16f77809]
  41ea33:	cmp    DWORD PTR [esi+0x7ef5dce4],ebx
  41ea39:	mov    dl,0x11
  41ea3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea3c:	add    ah,bh
  41ea3e:	or     eax,edx
  41ea40:	sub    BYTE PTR [esi],bl
  41ea42:	repz mov eax,gs:0x54e31d02
  41ea49:	xor    ch,BYTE PTR [edx]
  41ea4b:	push   es
  41ea4c:	pop    ebx
  41ea4d:	popw   ss
  41ea4f:	dec    ebp
  41ea50:	and    dl,BYTE PTR [esi-0x7b4f4a3f]
  41ea56:	loope  0x41e9f2
  41ea58:	aam    0x58
  41ea5a:	shl    al,0xf6
  41ea5d:	popa   
  41ea5e:	add    bh,cl
  41ea60:	add    al,0xc9
  41ea62:	in     al,0x62
  41ea64:	retf   0xe550
  41ea67:	jl     0x41ea66
  41ea69:	add    eax,0x546b85f7
  41ea6e:	push   ebx
  41ea6f:	sbb    BYTE PTR [ecx+edi*4],al
  41ea72:	icebp  
  41ea73:	sub    al,bh
  41ea75:	aam    0x33
  41ea77:	inc    edi
  41ea78:	inc    esp
  41ea79:	dec    ebp
  41ea7a:	sbb    esp,eax
  41ea7c:	into   
  41ea7d:	jg     0x41ea96
  41ea7f:	inc    esi
  41ea80:	ins    DWORD PTR es:[edi],dx
  41ea81:	add    ecx,DWORD PTR [esi-0x341554d0]
  41ea87:	jl     0x41ea3f
  41ea89:	test   BYTE PTR [edi+ecx*1+0x58],0xbe
  41ea8e:	dec    edx
  41ea8f:	aaa    
  41ea90:	(bad)  
  41ea91:	in     al,0x50
  41ea93:	fwait
  41ea94:	xchg   DWORD PTR [ebp-0x75],esi
  41ea97:	lds    ebx,FWORD PTR [edx+0xeda1e79]
  41ea9d:	in     al,0xd5
  41ea9f:	and    DWORD PTR ds:0x3fb2597b,ebx
  41eaa5:	mov    edi,0x85bc7683
  41eaaa:	mov    edx,0x743824a5
  41eaaf:	push   ebp
  41eab0:	and    eax,0x16f5311b
  41eab5:	mov    bl,0x76
  41eab7:	mov    ecx,0x9e59ae55
  41eabc:	les    esp,FWORD PTR [ebp-0x4b44a650]
  41eac2:	cwde   
  41eac3:	add    eax,0xdbf3f530
  41eac8:	mov    ecx,0xc14712f2
  41eacd:	push   ebx
  41eace:	popa   
  41eacf:	cmp    al,0xd7
  41ead1:	jle    0x41eaee
  41ead3:	popf   
  41ead4:	and    dh,BYTE PTR [edx+0x2d]
  41ead7:	adc    edx,DWORD PTR [eax+0x6]
  41eada:	pop    ecx
  41eadb:	cmp    al,0xaa
  41eadd:	jp     0x41eb05
  41eadf:	stos   BYTE PTR es:[edi],al
  41eae0:	push   ebp
  41eae1:	sub    BYTE PTR [esi-0x3e75ad74],dh
  41eae7:	inc    ebp
  41eae8:	mov    esp,0x78ea48d8
  41eaed:	das    
  41eaee:	dec    edi
  41eaef:	out    0x38,al
  41eaf1:	xchg   ebx,eax
  41eaf2:	sub    DWORD PTR [ecx+0x2d],ebx
  41eaf5:	aam    0x53
  41eaf7:	sar    ebp,cl
  41eaf9:	xchg   esp,eax
  41eafa:	adc    al,BYTE PTR [edx-0x3ece8a27]
  41eb00:	mov    bh,0x85
  41eb02:	mov    ds:0xd4c156fe,al
  41eb07:	mov    esp,0xeb47aef6
  41eb0c:	xor    ch,bh
  41eb0e:	inc    eax
  41eb0f:	mov    ebp,0x624b97c1
  41eb14:	xchg   DWORD PTR [esi-0x7c],edx
  41eb17:	inc    eax
  41eb18:	std    
  41eb19:	ret    0xbb9e
  41eb1c:	mov    WORD PTR gs:[ebp+0x46],?
  41eb20:	inc    edx
  41eb21:	setae  ah
  41eb24:	ret    0x58a0
  41eb27:	test   DWORD PTR [eax+0x1d],0xe7fa628b
  41eb2e:	xchg   ebp,eax
  41eb2f:	pop    esp
  41eb30:	mov    al,0x61
  41eb32:	sbb    al,0x55
  41eb34:	cmp    bl,bh
  41eb36:	out    dx,al
  41eb37:	mov    edi,0x5043f566
  41eb3c:	xchg   ecx,eax
  41eb3d:	sti    
  41eb3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb3f:	les    edx,FWORD PTR [edi-0x22]
  41eb42:	adc    DWORD PTR [ecx],edx
  41eb44:	push   ds
  41eb45:	js     0x41eaef
  41eb47:	pop    ebp
  41eb48:	pop    ecx
  41eb49:	adc    bh,BYTE PTR [ecx+eax*2]
  41eb4c:	call   0x25e7:0xc0b85626
  41eb53:	or     cl,BYTE PTR [esi-0x6ee3f280]
  41eb59:	fimul  WORD PTR [ecx-0x5fec171b]
  41eb5f:	and    esp,DWORD PTR [ecx]
  41eb61:	sub    BYTE PTR [edi+eiz*2+0x1c],cl
  41eb65:	xchg   esi,eax
  41eb66:	(bad)  
  41eb67:	scas   al,BYTE PTR es:[edi]
  41eb68:	xchg   BYTE PTR [ecx],al
  41eb6a:	mov    cl,0x6b
  41eb6c:	inc    eax
  41eb6d:	adc    DWORD PTR ds:0xed90f99b,ebp
  41eb73:	mov    cl,0x39
  41eb75:	dec    ebx
  41eb76:	je     0x41eb8d
  41eb78:	div    BYTE PTR [ebx-0x5a5d5c59]
  41eb7e:	aas    
  41eb7f:	mov    edi,0xae1cfdc7
  41eb84:	jmp    0x8518:0x2d34a620
  41eb8b:	imul   esi,DWORD PTR [eax],0x6fab61b7
  41eb91:	enter  0xef8,0x24
  41eb95:	ret    0x57e2
  41eb98:	or     dh,al
  41eb9a:	pop    es
  41eb9b:	adc    dh,BYTE PTR [esi+0x1c344da3]
  41eba1:	btr    DWORD PTR [edi],ebp
  41eba4:	mov    edx,0x8a10b968
  41eba9:	fcomp  DWORD PTR [esi+0x2501aa91]
  41ebaf:	mul    DWORD PTR [ecx-0x3095f1bc]
  41ebb5:	dec    esi
  41ebb6:	jo     0x41ec35
  41ebb8:	mov    esp,0x723a6a8c
  41ebbd:	push   eax
  41ebbe:	nop
  41ebbf:	adc    bh,0x92
  41ebc2:	enter  0x1ac6,0xc4
  41ebc6:	pop    ebx
  41ebc7:	pop    ds
  41ebc8:	adc    bl,dh
  41ebca:	(bad)  
  41ebcb:	lahf   
  41ebcc:	mov    edi,0x6bb66a7c
  41ebd1:	(bad)  
  41ebd2:	xchg   ebx,eax
  41ebd3:	cmp    BYTE PTR [edi-0x1236a11e],dh
  41ebd9:	ss push esi
  41ebdb:	sub    eax,DWORD PTR ds:0x4cfadbce
  41ebe1:	jnp    0x41ec5a
  41ebe3:	add    edi,DWORD PTR [eax+0x5440b822]
  41ebe9:	iret   
  41ebea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ebeb:	std    
  41ebec:	lea    esi,[ebx+0x41]
  41ebef:	push   es
  41ebf0:	adc    al,BYTE PTR [eax]
  41ebf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ebf3:	outs   dx,BYTE PTR ds:[esi]
  41ebf4:	sbb    DWORD PTR [ebx-0x3ab171a7],0x18
  41ebfb:	or     DWORD PTR [ebx-0x41f280f4],0x66
  41ec02:	or     eax,0xc7bfbe8e
  41ec07:	sbb    dl,BYTE PTR [esi]
  41ec09:	test   BYTE PTR [ecx],ch
  41ec0b:	sar    DWORD PTR [ebx],0x7b
  41ec0e:	mov    al,ds:0x372287e6
  41ec13:	gs out dx,eax
  41ec15:	outs   dx,DWORD PTR ds:[esi]
  41ec16:	adc    eax,0xbed67878
  41ec1b:	jecxz  0x41ebb6
  41ec1d:	mov    ecx,0x81dbe991
  41ec22:	shr    BYTE PTR [ecx+ecx*2+0x70822540],cl
  41ec29:	xor    ecx,eax
  41ec2b:	xor    ah,BYTE PTR [ebp+0x37]
  41ec2e:	shl    DWORD PTR ds:0xbd385329,1
  41ec34:	je     0x41ec4f
  41ec36:	sub    al,0xa9
  41ec38:	iret   
  41ec39:	test   edi,0xe75d4d66
  41ec3f:	not    DWORD PTR [esi]
  41ec41:	inc    esi
  41ec42:	cs jae 0x41ec87
  41ec45:	gs hlt 
  41ec47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec48:	mov    ch,0xfb
  41ec4a:	add    esi,eax
  41ec4c:	or     al,0x54
  41ec4e:	inc    edx
  41ec4f:	lahf   
  41ec50:	int    0xf8
  41ec52:	dec    ebx
  41ec53:	js     0x41ec04
  41ec55:	cmp    DWORD PTR [eax+0x3ede26b],ebp
  41ec5b:	out    0xb3,al
  41ec5d:	and    esi,DWORD PTR [edi]
  41ec5f:	adc    eax,DWORD PTR [ecx]
  41ec61:	jge    0x41ec60
  41ec63:	neg    BYTE PTR [ecx]
  41ec65:	stos   BYTE PTR es:[edi],al
  41ec66:	sub    dl,BYTE PTR [ebp-0x63]
  41ec69:	jp     0x41ecd5
  41ec6b:	jo     0x41ecea
  41ec6d:	outs   dx,BYTE PTR ds:[esi]
  41ec6e:	fsubrp st(7),st
  41ec70:	je     0x41ec64
  41ec72:	loop   0x41ec36
  41ec74:	fimul  WORD PTR [edi+ecx*1-0x30df7621]
  41ec7b:	fisttp WORD PTR [edi+ebx*2-0x2b]
  41ec7f:	fadd   QWORD PTR ds:0xa4481035
  41ec85:	imul   edi,DWORD PTR [esi],0x40
  41ec88:	mov    al,ds:0xb784120
  41ec8d:	loope  0x41ec33
  41ec8f:	in     al,0x43
  41ec91:	scas   eax,DWORD PTR es:[edi]
  41ec92:	inc    esp
  41ec93:	xor    al,0x78
  41ec95:	push   0xd0f594a5
  41ec9a:	push   ebx
  41ec9b:	mov    dl,0xd1
  41ec9d:	cmp    eax,0x8ad8f465
  41eca2:	add    edi,eax
  41eca4:	enter  0x97b6,0x44
  41eca8:	into   
  41eca9:	retf   0x4b4e
  41ecac:	xlat   BYTE PTR ds:[ebx]
  41ecad:	sub    al,0xde
  41ecaf:	mov    bl,0x7c
  41ecb1:	fisttp QWORD PTR [ebx+eiz*2-0x686314f3]
  41ecb8:	sub    esi,esi
  41ecba:	pop    ecx
  41ecbb:	out    dx,al
  41ecbc:	adc    ebp,edi
  41ecbe:	add    bh,BYTE PTR [ebx]
  41ecc0:	and    eax,0x640f9ddb
  41ecc5:	or     BYTE PTR [edx+0x7a],dh
  41ecc8:	and    BYTE PTR [ecx],dl
  41ecca:	xlat   BYTE PTR ds:[ebx]
  41eccb:	inc    edx
  41eccc:	mov    ecx,0x5f264af3
  41ecd1:	int3   
  41ecd2:	push   edi
  41ecd3:	sub    BYTE PTR [ecx+edi*1+0x652431d8],0x6f
  41ecdb:	push   edi
  41ecdc:	imul   eax,DWORD PTR [esi+0x709b516e],0x3b
  41ece3:	clc    
  41ece4:	mov    ecx,0xc9f696b8
  41ece9:	clc    
  41ecea:	int    0xe1
  41ecec:	ja     0x41ecfc
  41ecee:	call   0x38307347
  41ecf3:	imul   ecx,ecx,0x6b
  41ecf6:	adc    esi,ebp
  41ecf8:	xor    DWORD PTR [ecx+0x32ea0fd6],edi
  41ecfe:	fwait
  41ecff:	jbe    0x41ed06
  41ed01:	(bad)  
  41ed02:	enter  0xa7a2,0xfe
  41ed06:	jae    0x41ed04
  41ed08:	dec    esi
  41ed09:	(bad)  [edx]
  41ed0b:	lods   al,BYTE PTR ds:[esi]
  41ed0c:	mov    ecx,0x90250c0e
  41ed11:	stc    
  41ed12:	loop   0x41ed68
  41ed14:	xchg   esp,ebp
  41ed16:	nop
  41ed17:	fwait
  41ed18:	lock push es
  41ed1a:	dec    esp
  41ed1b:	push   ecx
  41ed1c:	loop   0x41ecd4
  41ed1e:	(bad)  
  41ed1f:	adc    ecx,ecx
  41ed21:	les    ebp,FWORD PTR [ebp-0x6317d31b]
  41ed27:	lds    edi,FWORD PTR [ecx-0x72]
  41ed2a:	jmp    0x8cf14c55
  41ed2f:	out    dx,eax
  41ed30:	dec    edx
  41ed31:	sub    bh,BYTE PTR [ecx]
  41ed33:	jns    0x41ed0d
  41ed35:	pop    esi
  41ed36:	inc    edx
  41ed37:	lods   al,BYTE PTR ds:[esi]
  41ed38:	push   es
  41ed39:	xchg   ebx,eax
  41ed3a:	inc    esi
  41ed3b:	cmp    ch,dh
  41ed3d:	cmp    al,0x2
  41ed3f:	loope  0x41ed9b
  41ed41:	mov    ds:0xb91e9c,eax
  41ed46:	es test al,0x97
  41ed49:	mov    BYTE PTR ds:0x14d894e0,dh
  41ed4f:	jl     0x41ed67
  41ed51:	ins    BYTE PTR es:[edi],dx
  41ed52:	aaa    
  41ed53:	sub    ecx,0x2f
  41ed56:	cli    
  41ed57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed58:	mov    BYTE PTR ds:0xc84aa1f7,dh
  41ed5e:	cmp    esp,edi
  41ed60:	arpl   cx,di
  41ed62:	ja     0x41edbe
  41ed64:	mov    bh,0xb5
  41ed66:	test   DWORD PTR [edx],ebp
  41ed68:	ror    ebp,0xf5
  41ed6b:	or     bh,BYTE PTR [ecx+eiz*2]
  41ed6e:	mov    ebp,0x9aa91d11
  41ed73:	ds sub edx,ecx
  41ed76:	push   0x51
  41ed78:	daa    
  41ed79:	rcr    BYTE PTR [ebx-0x30],cl
  41ed7c:	xlat   BYTE PTR ds:[ebx]
  41ed7d:	sbb    BYTE PTR [ebx],0x75
  41ed80:	push   ss
  41ed81:	adc    al,0xc4
  41ed83:	rcl    ebx,1
  41ed85:	push   ebx
  41ed86:	pop    ebp
  41ed87:	and    ch,BYTE PTR [ecx+0x24]
  41ed8a:	jns    0x41edac
  41ed8c:	push   ss
  41ed8d:	xor    al,0x54
  41ed8f:	ror    BYTE PTR [eax-0x1b77fe3d],cl
  41ed95:	jno    0x41ed45
  41ed97:	xor    DWORD PTR [esp+edi*1-0x77558ba0],edx
  41ed9e:	add    eax,0x738231ab
  41eda3:	bound  esp,QWORD PTR [edx]
  41eda5:	and    BYTE PTR [esi-0x7],ch
  41eda8:	in     al,0xfe
  41edaa:	test   BYTE PTR [edx],dl
  41edac:	hlt    
  41edad:	push   esi
  41edae:	dec    eax
  41edaf:	inc    eax
  41edb0:	imul   esi,DWORD PTR [edi],0x631b8e93
  41edb6:	paddsw mm5,QWORD PTR [edx]
  41edb9:	mov    BYTE PTR ds:0xdcf33fc7,0x6e
  41edc0:	in     al,dx
  41edc1:	cli    
  41edc2:	inc    ebx
  41edc3:	mov    bl,0xf3
  41edc5:	xchg   DWORD PTR ds:0x62ac4be2,esp
  41edcb:	addr16 out 0x66,al
  41edce:	dec    eax
  41edcf:	dec    ebp
  41edd0:	leave  
  41edd1:	out    0x4e,eax
  41edd3:	sbb    BYTE PTR [eax+0x56],bh
  41edd6:	inc    esi
  41edd7:	fmul   DWORD PTR [ecx-0x60a7c61]
  41eddd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41edde:	mov    eax,ds:0x5231be1
  41ede3:	jo     0x41ee13
  41ede5:	inc    esp
  41ede6:	pop    edi
  41ede7:	jge    0x41ee56
  41ede9:	pop    esp
  41edea:	or     al,0x20
  41edec:	add    al,0x66
  41edee:	add    al,0xe
  41edf0:	sar    BYTE PTR [eax-0x73],0x8b
  41edf4:	nop
  41edf5:	js     0x41ee73
  41edf7:	jmp    DWORD PTR [ebx-0x43d0c1e]
  41edfd:	sbb    BYTE PTR [esi+edi*1-0x4b],bh
  41ee01:	test   al,0x42
  41ee03:	iret   
  41ee04:	das    
  41ee05:	idiv   ebp
  41ee07:	and    al,0xb0
  41ee09:	ds mov bl,0x4a
  41ee0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee0d:	int    0x53
  41ee0f:	into   
  41ee10:	mov    esp,0x8169827e
  41ee15:	popf   
  41ee16:	je     0x41ee23
  41ee18:	cmp    BYTE PTR [eax-0x74],bh
  41ee1b:	leave  
  41ee1c:	out    0x10,eax
  41ee1e:	jmp    0x41eddd
  41ee20:	push   0xd27c87b9
  41ee25:	pop    ebp
  41ee26:	inc    edx
  41ee27:	(bad)  
  41ee28:	fcomp  QWORD PTR [edx]
  41ee2a:	push   ebx
  41ee2b:	mov    ds:0x3fe65881,eax
  41ee30:	inc    edi
  41ee31:	cdq    
  41ee32:	out    0xed,al
  41ee34:	mov    cl,0x87
  41ee36:	mov    edx,0x2270616d
  41ee3b:	ja     0x41eea6
  41ee3d:	push   ebx
  41ee3e:	inc    eax
  41ee3f:	push   eax
  41ee40:	cmp    bh,ah
  41ee42:	sub    esp,DWORD PTR [ecx+0x76]
  41ee45:	cmp    al,0xd
  41ee47:	inc    esp
  41ee48:	mov    ebp,0xc8a9ee72
  41ee4d:	adc    edx,DWORD PTR [esi-0x7]
  41ee50:	mov    ah,0xfd
  41ee52:	lods   eax,DWORD PTR ds:[esi]
  41ee53:	push   cs
  41ee54:	cli    
  41ee55:	lods   eax,DWORD PTR ds:[esi]
  41ee56:	aas    
  41ee57:	lods   eax,DWORD PTR ds:[esi]
  41ee58:	xor    eax,0xd770c3c3
  41ee5d:	xor    ch,bh
  41ee5f:	mov    DWORD PTR [edi-0x5bbbee7e],ebx
  41ee65:	jae    0x41eec8
  41ee67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee68:	int3   
  41ee69:	pop    esp
  41ee6a:	fld    DWORD PTR [esi+0x44091b72]
  41ee70:	in     al,dx
  41ee71:	or     al,al
  41ee73:	out    dx,eax
  41ee74:	int    0x8e
  41ee76:	push   cs
  41ee77:	retf   0x194e
  41ee7a:	sub    DWORD PTR [ecx-0x625506c1],ebp
  41ee80:	sbb    edi,edi
  41ee82:	mov    ah,0x1b
  41ee84:	sbb    ecx,DWORD PTR [eax+0x18ae7971]
  41ee8a:	adc    eax,0xdb13dec2
  41ee8f:	ficom  WORD PTR [edi-0x29]
  41ee92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee93:	add    DWORD PTR [edx-0x5af431ed],eax
  41ee99:	push   esi
  41ee9a:	sub    DWORD PTR [eax-0x256a1897],0x587ad548
  41eea4:	(bad)  
  41eea5:	adc    BYTE PTR [edx+0x7f0f706f],dh
  41eeab:	adc    ch,BYTE PTR [edx+0x6c]
  41eeae:	mov    ch,0xdf
  41eeb0:	xlat   BYTE PTR ds:[ebx]
  41eeb1:	ja     0x41ee3c
  41eeb3:	push   eax
  41eeb4:	xor    al,0x96
  41eeb6:	xchg   esp,eax
  41eeb7:	push   0xffffffcd
  41eeb9:	icebp  
  41eeba:	cmp    eax,0x2f5127b4
  41eebf:	out    0x9c,eax
  41eec1:	xor    DWORD PTR ds:0x69715f7f,eax
  41eec7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eec8:	fld    QWORD PTR [ebp+0x6f]
  41eecb:	and    esp,DWORD PTR [ebx]
  41eecd:	pop    ecx
  41eece:	out    0x36,eax
  41eed0:	or     eax,0xb4f7b0c0
  41eed5:	sbb    cl,ah
  41eed7:	stos   BYTE PTR es:[edi],al
  41eed8:	dec    bh
  41eeda:	fadd   DWORD PTR [edi+edx*8-0x45]
  41eede:	fistp  QWORD PTR [ebx]
  41eee0:	repz mov dh,0x36
  41eee3:	stc    
  41eee4:	test   eax,0x4304a3cf
  41eee9:	(bad)  
  41eeea:	mov    ebp,0x494ee9fd
  41eeef:	scas   eax,DWORD PTR es:[edi]
  41eef0:	mov    eax,ds:0x4b36122f
  41eef5:	jecxz  0x41ef01
  41eef7:	sub    ch,ah
  41eef9:	cmp    esp,ebx
  41eefb:	icebp  
  41eefc:	cld    
  41eefd:	add    ebx,DWORD PTR [ecx]
  41eeff:	dec    ebx
  41ef00:	inc    ebp
  41ef01:	add    eax,0xf8a65c08
  41ef06:	dec    esp
  41ef07:	out    0x88,al
  41ef09:	stos   DWORD PTR es:[edi],eax
  41ef0a:	(bad)  
  41ef0b:	gs test al,0x3f
  41ef0e:	daa    
  41ef0f:	xchg   ebp,eax
  41ef10:	adc    eax,0x5952f1c
  41ef15:	cmp    bl,BYTE PTR [ebp+ebx*1-0x6f8d62d7]
  41ef1c:	push   ds
  41ef1d:	xchg   edi,eax
  41ef1e:	(bad)  
  41ef1f:	and    al,0x60
  41ef21:	jbe    0x41eefb
  41ef23:	loopne 0x41ef18
  41ef25:	sbb    ebp,DWORD PTR [ebx+eax*2-0x1ecb23b0]
  41ef2c:	cmp    al,0xc7
  41ef2e:	cwde   
  41ef2f:	in     eax,dx
  41ef30:	xor    cl,al
  41ef32:	aaa    
  41ef33:	push   ecx
  41ef34:	neg    DWORD PTR [edx]
  41ef36:	(bad)  
  41ef37:	loope  0x41eee0
  41ef39:	mov    WORD PTR [edx+0x111d5194],es
  41ef3f:	and    BYTE PTR [edx+esi*2-0x14],dh
  41ef43:	push   cs
  41ef44:	push   eax
  41ef45:	and    ch,cl
  41ef47:	cli    
  41ef48:	xchg   ebx,eax
  41ef49:	xlat   BYTE PTR fs:[ebx]
  41ef4b:	sar    BYTE PTR [eax],0xfe
  41ef4e:	push   esp
  41ef4f:	mov    esp,0x724f572d
  41ef54:	adc    ah,bl
  41ef56:	add    BYTE PTR [esi-0x73],cl
  41ef59:	sub    al,0x9
  41ef5b:	dec    esp
  41ef5c:	push   ds
  41ef5d:	push   ds
  41ef5e:	enter  0x6534,0x11
  41ef62:	ds ja  0x41eefb
  41ef65:	je     0x41efe1
  41ef67:	mov    ah,0x47
  41ef69:	ror    DWORD PTR [edi-0x479f17e1],cl
  41ef6f:	clc    
  41ef70:	imul   ecx,DWORD PTR [edx+0x72],0xa74500cb
  41ef77:	and    bl,BYTE PTR [ebx+0x6130ce22]
  41ef7d:	add    al,0x30
  41ef7f:	push   ebp
  41ef80:	adc    al,0xbd
  41ef82:	dec    eax
  41ef83:	ds mov dl,0xde
  41ef86:	sbb    BYTE PTR [esi-0x7],dl
  41ef89:	inc    edx
  41ef8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef8b:	jno    0x41efb3
  41ef8d:	jle    0x41ef1b
  41ef8f:	push   ecx
  41ef90:	or     dh,BYTE PTR [esi]
  41ef92:	pop    ss
  41ef93:	and    al,0xc9
  41ef95:	and    eax,0xdad5cb83
  41ef9a:	je     0x41efe2
  41ef9c:	xchg   esp,eax
  41ef9d:	loope  0x41ef79
  41ef9f:	stc    
  41efa0:	and    ch,BYTE PTR [ecx-0x1e]
  41efa3:	push   esp
  41efa4:	xchg   ecx,eax
  41efa5:	shl    DWORD PTR [eax+0x27],1
  41efa8:	lock lock mov ecx,DWORD PTR cs:[esi]
  41efad:	mov    al,ds:0x47a3610e
  41efb2:	in     eax,0x37
  41efb4:	inc    ebx
  41efb5:	push   ebx
  41efb6:	pushf  
  41efb7:	cwde   
  41efb8:	popa   
  41efb9:	retf   
  41efba:	cs mov bh,0x8d
  41efbd:	inc    edi
  41efbe:	dec    ebp
  41efbf:	cmp    ebp,DWORD PTR [edx+0x38]
  41efc2:	sbb    DWORD PTR [esi+0x7c],esp
  41efc5:	(bad)  
  41efc6:	jmp    0xdf9d:0x11a7cd0d
  41efcd:	sub    ebp,ebx
  41efcf:	and    ebp,esp
  41efd1:	lds    ecx,FWORD PTR [ecx+esi*2]
  41efd4:	pop    edx
  41efd5:	or     DWORD PTR [edx],esp
  41efd7:	mov    dh,BYTE PTR [esi-0x458371fd]
  41efdd:	and    BYTE PTR [eax],ah
  41efdf:	push   ebp
  41efe0:	ins    DWORD PTR es:[edi],dx
  41efe1:	jne    0x41efb9
  41efe3:	or     al,0x86
  41efe5:	or     dh,BYTE PTR [eax+0x3e]
  41efe8:	jne    0x41ef95
  41efea:	jno    0x41ef9e
  41efec:	inc    edi
  41efed:	pop    eax
  41efee:	in     eax,0x52
  41eff0:	hlt    
  41eff1:	push   esi
  41eff2:	sbb    BYTE PTR [eax],0xaa
  41eff5:	pop    ebx
  41eff6:	sub    al,0xbe
  41eff8:	ds mov ebx,0xe6ce88fe
  41effe:	sbb    esi,DWORD PTR [esi-0x30]
  41f001:	add    DWORD PTR [ebx+0x7e],0xc4e856dd
  41f008:	inc    esi
  41f009:	jae    0x41f047
  41f00b:	repz pop DWORD PTR [edx-0x66]
  41f00f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f010:	mov    bl,0x53
  41f012:	retf   0x6247
  41f015:	mov    cl,0x98
  41f017:	or     al,0x8
  41f019:	jbe    0x41f028
  41f01b:	mov    dh,0x91
  41f01d:	pop    esp
  41f01e:	and    edi,DWORD PTR [ebp+0x7]
  41f021:	pushf  
  41f022:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f023:	mov    al,ds:0x734035b5
  41f028:	mov    dl,0x6d
  41f02a:	mov    WORD PTR [eax+esi*8+0x18],ss
  41f02e:	das    
  41f02f:	dec    edi
  41f030:	pop    eax
  41f031:	cmc    
  41f032:	loope  0x41f0a1
  41f034:	(bad)  [ebp-0x25584ed4]
  41f03a:	out    0x15,eax
  41f03c:	in     al,dx
  41f03d:	dec    ebp
  41f03e:	push   esp
  41f03f:	jb     0x41f009
  41f041:	ins    BYTE PTR es:[edi],dx
  41f042:	lahf   
  41f043:	test   BYTE PTR [ebp-0x4dbe4380],ah
  41f049:	ins    BYTE PTR es:[edi],dx
  41f04a:	or     dl,BYTE PTR [esi]
  41f04c:	mov    esp,0x3f9e6982
  41f051:	sbb    dh,ch
  41f053:	adc    eax,0x2bb20937
  41f058:	mov    dl,0x75
  41f05a:	sub    cl,BYTE PTR [edx]
  41f05c:	jg     0x41efea
  41f05e:	cmp    ah,dh
  41f060:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f061:	add    ebx,DWORD PTR [ebx+0x5c73094e]
  41f067:	imul   esp,DWORD PTR [esi+0x50a91c33],0xd90a2d54
  41f071:	mov    es,WORD PTR [esi+0x53]
  41f074:	inc    ecx
  41f075:	pushf  
  41f076:	stos   BYTE PTR es:[edi],al
  41f077:	mul    BYTE PTR [ecx]
  41f079:	dec    esp
  41f07a:	xchg   ebx,eax
  41f07b:	sbb    eax,DWORD PTR [ecx+esi*2-0x80]
  41f07f:	aaa    
  41f080:	stos   DWORD PTR es:[edi],eax
  41f081:	enter  0x25b9,0xbd
  41f085:	js     0x41f03f
  41f087:	xlat   BYTE PTR ds:[ebx]
  41f088:	jl     0x41f075
  41f08a:	(bad)  
  41f08b:	cld    
  41f08c:	mov    eax,ds:0x4c8b493b
  41f091:	push   edx
  41f092:	cmp    al,0xb6
  41f094:	cmp    eax,0x5769929b
  41f099:	out    0xce,al
  41f09b:	lea    edi,[ecx]
  41f09d:	scas   eax,DWORD PTR es:[edi]
  41f09e:	mov    ecx,0x8e25ea25
  41f0a3:	fwait
  41f0a4:	dec    ecx
  41f0a5:	pop    ebp
  41f0a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f0a7:	add    dh,BYTE PTR [ebx+0x1f]
  41f0aa:	and    al,0xdd
  41f0ac:	and    DWORD PTR [ebp+0x3f],ebp
  41f0af:	cmp    dl,BYTE PTR [esp+eax*1-0x1c]
  41f0b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f0b4:	dec    ecx
  41f0b5:	rcl    DWORD PTR [ebp+0xe],1
  41f0b8:	jmp    0x98637d1
  41f0bd:	mov    BYTE PTR [edi],ah
  41f0bf:	gs out dx,eax
  41f0c1:	dec    ebp
  41f0c2:	js     0x41f077
  41f0c4:	dec    esp
  41f0c5:	je     0x41f088
  41f0c7:	pop    ds
  41f0c8:	mov    ebp,DWORD PTR [eax-0x4b35f847]
  41f0ce:	fucom  st(1)
  41f0d0:	or     al,0xc7
  41f0d2:	push   cs
  41f0d3:	sub    BYTE PTR [ecx*8+0x7fa46d7b],al
  41f0da:	or     ebx,esi
  41f0dc:	cmp    al,0x6a
  41f0de:	out    dx,eax
  41f0df:	sub    DWORD PTR [eax-0x39],ecx
  41f0e2:	jmp    0x41f090
  41f0e4:	dec    edx
  41f0e5:	ret    0x665
  41f0e8:	sbb    BYTE PTR [edx-0x11],0x85
  41f0ec:	lods   al,BYTE PTR ds:[esi]
  41f0ed:	outs   dx,BYTE PTR ds:[esi]
  41f0ee:	loopne 0x41f169
  41f0f0:	push   es
  41f0f1:	xor    al,0x53
  41f0f3:	mov    ebp,cs
  41f0f5:	call   0xab74d25e
  41f0fa:	ror    DWORD PTR [esi+0xe32c588],0xf
  41f101:	int    0x84
  41f103:	push   ecx
  41f104:	retf   0x1ccd
  41f107:	jns    0x41f0a2
  41f109:	cdq    
  41f10a:	mov    dl,0x68
  41f10c:	fwait
  41f10d:	shl    BYTE PTR [edi+0x227d007c],1
  41f113:	stc    
  41f114:	and    bl,BYTE PTR [eax+ecx*2]
  41f117:	lock add ebx,ebp
  41f11a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f11b:	shr    ebp,1
  41f11d:	mov    ebp,0x8cd16536
  41f122:	ret    
  41f123:	jnp    0x41f0fa
  41f125:	jne    0x41f0e2
  41f127:	adc    DWORD PTR [edx-0x1d],ebp
  41f12a:	mov    dh,0xb4
  41f12c:	jb     0x41f12d
  41f12e:	xor    BYTE PTR [esi],ch
  41f130:	int    0x43
  41f132:	xor    ch,BYTE PTR [ebp+0x4796a418]
  41f138:	xor    al,BYTE PTR [edx]
  41f13a:	xor    eax,0x3f41c238
  41f13f:	mov    ebx,0x1138a98
  41f144:	les    edi,FWORD PTR [ebp+0x5]
  41f147:	es mov bh,0xe7
  41f14a:	outs   dx,DWORD PTR ds:[esi]
  41f14b:	push   cs
  41f14c:	cs popa 
  41f14e:	adc    eax,0x3e7737da
  41f153:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f154:	ret    
  41f155:	aas    
  41f156:	push   edx
  41f157:	jo     0x41f1bd
  41f159:	leave  
  41f15a:	and    ah,BYTE PTR [edi+0x6e15c990]
  41f160:	jo     0x41f192
  41f162:	push   es
  41f163:	jb     0x41f12d
  41f165:	mov    ecx,0x1bdb3680
  41f16a:	xor    ah,BYTE PTR [ebx-0x3e34d204]
  41f170:	push   es
  41f171:	fsubr  st,st(6)
  41f173:	and    cl,BYTE PTR [edx]
  41f175:	loop   0x41f0f7
  41f177:	hlt    
  41f178:	jle    0x41f154
  41f17a:	cmp    al,0x26
  41f17c:	mov    bl,0x57
  41f17e:	inc    BYTE PTR [ebp+0x40]
  41f181:	rol    BYTE PTR [edx+0x7738d7d5],cl
  41f187:	test   al,ah
  41f189:	mov    dh,BYTE PTR [ebp-0x5df73c07]
  41f18f:	sar    BYTE PTR [ebx+0x3a8cc50e],cl
  41f195:	outs   dx,DWORD PTR ds:[esi]
  41f196:	into   
  41f197:	cmp    eax,0x70316043
  41f19c:	dec    ecx
  41f19d:	and    BYTE PTR [eax+eax*2+0x21],bl
  41f1a1:	enter  0xedda,0xb3
  41f1a5:	jno    0x41f210
  41f1a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f1a8:	(bad)  
  41f1a9:	jae    0x41f1a7
  41f1ab:	dec    eax
  41f1ac:	ins    BYTE PTR es:[edi],dx
  41f1ad:	jbe    0x41f1ec
  41f1af:	xlat   BYTE PTR ds:[ebx]
  41f1b0:	leave  
  41f1b1:	mov    ah,0x42
  41f1b3:	aad    0xf5
  41f1b5:	pop    ecx
  41f1b6:	neg    bl
  41f1b8:	mul    BYTE PTR [eax-0x59]
  41f1bb:	aaa    
  41f1bc:	adc    esi,DWORD PTR [ecx-0x68f2becb]
  41f1c2:	push   ecx
  41f1c3:	and    ch,BYTE PTR [eax]
  41f1c5:	rol    ch,0x8d
  41f1c8:	jge    0x41f1fb
  41f1ca:	dec    eax
  41f1cb:	cdq    
  41f1cc:	test   eax,0xa882a333
  41f1d1:	stc    
  41f1d2:	bound  ebp,QWORD PTR [ecx]
  41f1d4:	leave  
  41f1d5:	ret    0x50
  41f1d8:	into   
  41f1d9:	push   eax
  41f1da:	aam    0xf3
  41f1dc:	xchg   edi,eax
  41f1dd:	xchg   ebp,eax
  41f1de:	jge    0x41f17b
  41f1e0:	sti    
  41f1e1:	fmul   DWORD PTR [eax+0x12c80e]
  41f1e7:	fld    DWORD PTR ds:0xae46d172
  41f1ed:	fwait
  41f1ee:	jge    0x41f1c5
  41f1f0:	dec    ecx
  41f1f1:	xor    BYTE PTR [edx-0x6d],ah
  41f1f4:	jno    0x41f26f
  41f1f6:	outs   dx,BYTE PTR ds:[esi]
  41f1f7:	pop    fs
  41f1f9:	add    esi,0xc
  41f1fc:	aaa    
  41f1fd:	jle    0x41f23a
  41f1ff:	pop    ecx
  41f200:	mov    eax,ds:0x620c4331
  41f205:	rcl    BYTE PTR [ebp-0x5f63ebc8],0xf0
  41f20c:	iret   
  41f20d:	pop    esp
  41f20e:	call   0xf885:0x41a519c
  41f215:	test   eax,0x6d142cdc
  41f21a:	or     BYTE PTR [edi+0x2d],0x99
  41f21e:	sub    ebx,esi
  41f220:	jmp    0x4690:0xe01974bd
  41f227:	mov    ecx,0x74495996
  41f22c:	jmp    0x41f2ad
  41f22e:	mov    ds:0x7aaf1718,al
  41f233:	xor    bl,BYTE PTR [edi]
  41f235:	cmp    esp,esi
  41f237:	pop    eax
  41f238:	mov    ah,0xf3
  41f23a:	test   al,0xc6
  41f23c:	ja     0x41f230
  41f23e:	js     0x41f259
  41f240:	aaa    
  41f241:	dec    esi
  41f242:	test   al,0xe3
  41f244:	cmp    al,0x4f
  41f246:	ret    
  41f247:	inc    eax
  41f248:	sti    
  41f249:	jnp    0x41f295
  41f24b:	(bad)
  41f24e:	gs xchg ecx,eax
  41f250:	and    BYTE PTR [edi+0x14],0x36
  41f254:	loop   0x41f251
  41f256:	inc    edx
  41f257:	and    esi,eax
  41f259:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f25a:	or     BYTE PTR [edi],ch
  41f25c:	xchg   ebp,eax
  41f25d:	popa   
  41f25e:	cld    
  41f25f:	stos   BYTE PTR es:[edi],al
  41f260:	mov    bh,0x1c
  41f262:	scas   al,BYTE PTR es:[edi]
  41f263:	cdq    
  41f264:	ret    0x779
  41f267:	jge    0x41f2e4
  41f269:	jae    0x41f2e6
  41f26b:	repz add BYTE PTR [esi+edx*4+0x1d24f665],ah
  41f273:	out    dx,eax
  41f274:	jnp    0x41f2a9
  41f276:	retf   0x7a13
  41f279:	adc    al,0xc1
  41f27b:	push   0xffffff85
  41f27d:	les    edi,FWORD PTR [edi-0xd1f3da3]
  41f283:	jb     0x41f216
  41f285:	imul   esp,ecx,0x144d9523
  41f28b:	add    esp,DWORD PTR gs:[esi-0x1f]
  41f28f:	fnstenv ds:0x9fe35359
  41f295:	add    al,bl
  41f297:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f298:	add    BYTE PTR [edx],dh
  41f29a:	jmp    0xeea3f3f9
  41f29f:	out    0x7b,eax
  41f2a1:	mov    eax,0xf207362d
  41f2a6:	pop    ss
  41f2a7:	les    ecx,FWORD PTR [ebp+0x58]
  41f2aa:	enter  0xeddf,0x38
  41f2ae:	sahf   
  41f2af:	div    DWORD PTR [edi+0xf91a57f]
  41f2b5:	push   edx
  41f2b6:	ja     0x41f28d
  41f2b8:	mov    ecx,0x16d145fa
  41f2bd:	mov    dh,0x29
  41f2bf:	xchg   esp,eax
  41f2c0:	and    ecx,DWORD PTR [edx+0x14]
  41f2c3:	jno    0x41f256
  41f2c5:	or     ah,BYTE PTR [ebx]
  41f2c7:	rcl    bl,1
  41f2c9:	mov    esp,0xc3b1d003
  41f2ce:	jbe    0x41f260
  41f2d0:	cmp    edx,eax
  41f2d2:	clc    
  41f2d3:	xchg   esp,eax
  41f2d4:	imul   DWORD PTR [ebx+0x2b]
  41f2d7:	in     eax,dx
  41f2d8:	adc    eax,0xdd1bd4a5
  41f2dd:	jmp    0x41f282
  41f2df:	out    0xe4,eax
  41f2e1:	scas   al,BYTE PTR es:[edi]
  41f2e2:	cs add eax,0xd59ce877
  41f2e8:	or     eax,0xa3a64c0e
  41f2ed:	jmp    0xf3f7e917
  41f2f2:	adc    ah,BYTE PTR [ecx+0x6f25c1be]
  41f2f8:	cwde   
  41f2f9:	je     0x41f2d4
  41f2fb:	scas   eax,DWORD PTR es:[edi]
  41f2fc:	enter  0xfb58,0xaf
  41f300:	adc    eax,0xca2b1a16
  41f305:	mov    esi,0xcfa4df0a
  41f30a:	arpl   WORD PTR [esi],si
  41f30c:	sbb    eax,0x727adbeb
  41f311:	outs   dx,DWORD PTR ds:[esi]
  41f312:	mov    BYTE PTR [edi],cl
  41f314:	push   esi
  41f315:	mov    WORD PTR [edi+0x9e4a7b7],cs
  41f31b:	mov    edi,0xf2d20cab
  41f320:	mov    esi,0xec67f804
  41f325:	jns    0x41f2d9
  41f327:	inc    esp
  41f328:	outs   dx,DWORD PTR ds:[esi]
  41f329:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f32a:	sub    al,BYTE PTR [eax]
  41f32c:	adc    esi,DWORD PTR [ecx]
  41f32e:	(bad)  
  41f32f:	sub    DWORD PTR [edx],eax
  41f331:	fwait
  41f332:	add    eax,DWORD PTR [edx]
  41f334:	clc    
  41f335:	sbb    dh,BYTE PTR [esi+esi*4]
  41f338:	fcomp  DWORD PTR [edx+ecx*4]
  41f33b:	(bad)  
  41f33c:	pop    ebx
  41f33d:	out    0x9b,eax
  41f33f:	and    ah,al
  41f341:	mov    bl,BYTE PTR [ecx-0x57]
  41f344:	stos   BYTE PTR es:[edi],al
  41f345:	sbb    BYTE PTR [edi],ah
  41f347:	mov    ah,0x3c
  41f349:	sub    BYTE PTR [ebx-0x39],bl
  41f34c:	and    al,BYTE PTR [ebx-0x6d26445f]
  41f352:	ror    DWORD PTR [esi],cl
  41f354:	icebp  
  41f355:	rcr    BYTE PTR [ebp-0x308d9558],cl
  41f35b:	push   esp
  41f35c:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  41f35e:	aam    0x3e
  41f360:	ret    
  41f361:	cbw    
  41f363:	sar    ecx,0x6f
  41f366:	push   edi
  41f367:	pop    ecx
  41f368:	inc    DWORD PTR [esi-0x54]
  41f36b:	adc    DWORD PTR es:[ebp+0x34],0xfffffff5
  41f370:	add    eax,0xc39d9004
  41f375:	into   
  41f376:	push   ds
  41f377:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f378:	aam    0xce
  41f37a:	fldcw  WORD PTR [edi+0x13]
  41f37d:	fwait
  41f37e:	stos   BYTE PTR es:[edi],al
  41f37f:	popa   
  41f380:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f381:	add    DWORD PTR [ecx-0x70],edx
  41f384:	push   ebp
  41f385:	int    0x44
  41f387:	retf   
  41f388:	jg     0x41f334
  41f38a:	xchg   edx,eax
  41f38b:	jle    0x41f30f
  41f38d:	add    BYTE PTR [ebp+0x57],0xb0
  41f391:	stos   DWORD PTR es:[edi],eax
  41f392:	data16 in al,0xc9
  41f395:	int3   
  41f396:	xchg   ebx,eax
  41f397:	push   ebp
  41f398:	test   ebp,ebx
  41f39a:	xor    BYTE PTR [esi-0x2f],dl
  41f39d:	push   es
  41f39e:	imul   esp,DWORD PTR [edx],0x3979e8f7
  41f3a4:	mov    ebp,0x6d02a57a
  41f3a9:	lds    edx,FWORD PTR [ecx]
  41f3ab:	leave  
  41f3ac:	push   ds
  41f3ad:	push   eax
  41f3ae:	std    
  41f3af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f3b0:	cs dec ebp
  41f3b2:	bound  ebp,QWORD PTR [edi]
  41f3b4:	loope  0x41f41e
  41f3b6:	cdq    
  41f3b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f3b8:	lea    eax,[ebx]
  41f3ba:	les    esi,FWORD PTR [esi+0x1f]
  41f3bd:	lds    ecx,FWORD PTR [eax+0x1d4250fb]
  41f3c3:	pop    eax
  41f3c4:	xchg   esi,eax
  41f3c5:	xor    DWORD PTR [ecx],0xffffffe5
  41f3c8:	mov    ebp,ecx
  41f3ca:	ss and esi,esi
  41f3cd:	cwde   
  41f3ce:	mov    cl,0x5f
  41f3d0:	ins    BYTE PTR es:[edi],dx
  41f3d1:	mov    ebx,0xc3133565
  41f3d6:	clc    
  41f3d7:	xchg   ecx,eax
  41f3d8:	inc    esi
  41f3d9:	xchg   ebx,eax
  41f3da:	(bad)  [ecx-0x60]
  41f3dd:	push   0xb90c54fe
  41f3e2:	add    ah,BYTE PTR es:[ebx+0x22b59364]
  41f3e9:	rcr    bl,1
  41f3eb:	in     al,0xce
  41f3ed:	adc    BYTE PTR [eax-0x56],ah
  41f3f0:	dec    ecx
  41f3f1:	out    0x3a,al
  41f3f3:	lods   al,BYTE PTR ds:[esi]
  41f3f4:	mov    bh,0xe8
  41f3f6:	lahf   
  41f3f7:	add    BYTE PTR [esi-0x66],ah
  41f3fa:	fmul   DWORD PTR [ebp-0x7de37bc8]
  41f400:	bound  esi,QWORD PTR [edx]
  41f402:	ins    BYTE PTR es:[edi],dx
  41f403:	in     al,0x62
  41f405:	call   0xf57ebc9e
  41f40a:	imul   esp,edi,0x6a
  41f40d:	dec    ebx
  41f40e:	out    0xf3,eax
  41f410:	jge    0x41f466
  41f412:	push   cs
  41f413:	jp     0x41f476
  41f415:	mov    edi,0xc723349
  41f41a:	rcl    BYTE PTR [edi],1
  41f41c:	inc    ebp
  41f41d:	mov    BYTE PTR [edi+0x71e7e558],cl
  41f423:	pop    edx
  41f424:	push   eax
  41f425:	and    al,0x17
  41f427:	xchg   ecx,eax
  41f428:	or     bh,0x32
  41f42b:	cmp    BYTE PTR [eax],dh
  41f42d:	ins    DWORD PTR es:[edi],dx
  41f42e:	push   es
  41f42f:	test   BYTE PTR [eax-0x8],0x94
  41f433:	push   esp
  41f434:	mov    ah,0xd8
  41f436:	dec    ebp
  41f437:	(bad)  
  41f438:	jle    0x41f483
  41f43a:	(bad)  
  41f43b:	cmp    al,0xb3
  41f43d:	add    BYTE PTR [ebp+0x44],dl
  41f440:	sysret 
  41f442:	inc    edx
  41f443:	sti    
  41f444:	xchg   DWORD PTR [edi-0x1d],edi
  41f447:	mov    esp,0x8e43c15a
  41f44c:	pushf  
  41f44d:	inc    ecx
  41f44e:	ret    
  41f44f:	inc    esp
  41f450:	retf   0x7468
  41f453:	xor    DWORD PTR [eax+0x4d],eax
  41f456:	xor    edi,DWORD PTR [edx+0x19]
  41f459:	repz add al,0x74
  41f45c:	sub    eax,0xd471339
  41f461:	add    dh,al
  41f463:	cld    
  41f464:	sub    eax,0xe6f5cef
  41f469:	xor    eax,ecx
  41f46b:	lahf   
  41f46c:	call   0x2d13:0x48c48efb
  41f473:	or     eax,0xc8f0b40e
  41f478:	dec    eax
  41f479:	inc    edi
  41f47a:	cmc    
  41f47b:	loopne 0x41f404
  41f47d:	jl     0x41f405
  41f47f:	fcomp  QWORD PTR [edx]
  41f481:	mov    ebx,0xd5b20d9a
  41f486:	cmp    DWORD PTR [esi],0xf894f6bb
  41f48c:	out    dx,eax
  41f48d:	in     al,dx
  41f48e:	je     0x41f492
  41f490:	sbb    DWORD PTR [edx+0x25b749d9],eax
  41f496:	dec    ecx
  41f497:	pop    ebp
  41f498:	push   edx
  41f499:	adc    BYTE PTR [ebx],0xba
  41f49c:	dec    esp
  41f49d:	test   dh,0xc8
  41f4a0:	es jecxz 0x41f487
  41f4a3:	mov    dl,0x96
  41f4a5:	ss push edi
  41f4a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f4a8:	mov    ds:0x8ce8d768,eax
  41f4ad:	out    0x26,al
  41f4af:	mov    ebx,0xec73b5af
  41f4b4:	inc    edx
  41f4b5:	add    eax,0xf16708d4
  41f4ba:	in     eax,dx
  41f4bb:	jecxz  0x41f49a
  41f4bd:	and    BYTE PTR [edx],0x9b
  41f4c0:	sub    eax,0xa08180ff
  41f4c5:	add    edx,DWORD PTR ds:0x45f089ef
  41f4cb:	scas   al,BYTE PTR es:[edi]
  41f4cc:	fild   DWORD PTR [esi-0x1ac78f8d]
  41f4d2:	int    0x91
  41f4d4:	jp     0x41f550
  41f4d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f4d7:	pop    eax
  41f4d8:	sbb    eax,0x29262002
  41f4dd:	sti    
  41f4de:	out    dx,al
  41f4df:	mov    WORD PTR [edi-0x511322b],fs
  41f4e5:	shl    eax,cl
  41f4e7:	sub    eax,0x54818efb
  41f4ec:	es mov ebx,0x40461f0f
  41f4f2:	pop    ebx
  41f4f3:	ret    0xde81
  41f4f6:	aas    
  41f4f7:	stos   DWORD PTR es:[edi],eax
  41f4f8:	mov    eax,ds:0x433f21b0
  41f4fd:	outs   dx,DWORD PTR ds:[esi]
  41f4fe:	mov    bl,0x6b
  41f500:	cmp    DWORD PTR [ebx-0x13e393f7],esp
  41f506:	adc    eax,0x7e861811
  41f50b:	and    edx,DWORD PTR [ecx+ecx*8+0x3a]
  41f50f:	dec    eax
  41f510:	scas   al,BYTE PTR es:[edi]
  41f511:	es int3 
  41f513:	fist   WORD PTR [edi-0x828cbdc]
  41f519:	ret    
  41f51a:	aad    0x14
  41f51c:	sub    ah,dh
  41f51e:	jp     0x41f4cc
  41f520:	add    al,0x3c
  41f522:	cwde   
  41f523:	push   cs
  41f524:	(bad)  
  41f525:	adc    ebx,DWORD PTR [esi-0x20]
  41f528:	outs   dx,DWORD PTR ds:[esi]
  41f529:	xor    edi,DWORD PTR [edx]
  41f52b:	cmp    eax,0xc1aaf31b
  41f530:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f531:	push   ecx
  41f532:	or     DWORD PTR [edi-0x21bbe0de],edi
  41f538:	call   0xa8d1:0xd5397b52
  41f53f:	xor    bl,BYTE PTR [esi+ecx*2]
  41f542:	sbb    al,bh
  41f544:	arpl   WORD PTR [edx-0x77dbf3b6],dx
  41f54a:	sub    eax,0xb87360aa
  41f54f:	or     ebx,ecx
  41f551:	loopne 0x41f53a
  41f553:	lock pop ds
  41f555:	outs   dx,DWORD PTR ds:[esi]
  41f556:	(bad)  
  41f557:	outs   dx,BYTE PTR ds:[esi]
  41f558:	sub    ebp,esp
  41f55a:	rol    DWORD PTR ds:0x328e0c5b,cl
  41f560:	outs   dx,DWORD PTR ds:[esi]
  41f561:	xchg   edi,eax
  41f562:	popf   
  41f563:	aam    0x49
  41f565:	mov    bh,bl
  41f567:	xor    BYTE PTR [eax+0x2467f225],cl
  41f56d:	es pop ebx
  41f56f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f570:	jp     0x41f54a
  41f572:	pop    edi
  41f573:	jl     0x41f5a4
  41f575:	mov    ecx,0xa468b8fe
  41f57a:	and    eax,0xfbfe141a
  41f57f:	push   cs
  41f580:	push   esp
  41f581:	call   0xbd2dde09
  41f586:	mov    al,0xac
  41f588:	inc    eax
  41f589:	or     esp,DWORD PTR es:[edx-0x7b151df6]
  41f590:	pop    eax
  41f591:	push   ecx
  41f592:	call   0xb97a:0xff8e1d51
  41f599:	ret    
  41f59a:	pop    eax
  41f59b:	adc    DWORD PTR [edi],edi
  41f59d:	cld    
  41f59e:	pop    edi
  41f59f:	hlt    
  41f5a0:	jo     0x41f524
  41f5a2:	mov    BYTE PTR [ebp-0x79],ah
  41f5a5:	mov    edx,DWORD PTR [esi]
  41f5a7:	inc    edi
  41f5a8:	arpl   WORD PTR [eax+0x50],cx
  41f5ab:	cmc    
  41f5ac:	mov    edx,0xa4346229
  41f5b1:	mov    BYTE PTR [esi+0x243c325c],ah
  41f5b7:	fs dec eax
  41f5b9:	(bad)  [ebp-0x1e]
  41f5bc:	cmp    al,0x5f
  41f5be:	addr16 adc edx,0x6
  41f5c2:	sbb    eax,DWORD PTR [ecx-0x3b06a6]
  41f5c8:	xchg   ecx,eax
  41f5c9:	dec    ebp
  41f5ca:	add    DWORD PTR [eax+0x7f],0xffffffdd
  41f5ce:	mov    eax,ds:0xa3ccbdb2
  41f5d3:	xlat   BYTE PTR ds:[ebx]
  41f5d4:	pusha  
  41f5d5:	rcl    dl,1
  41f5d7:	(bad)  
  41f5d9:	pop    edx
  41f5da:	imul   BYTE PTR [edx-0x57]
  41f5dd:	fsubr  st,st(3)
  41f5df:	dec    esi
  41f5e0:	mov    bl,0x19
  41f5e2:	out    0x94,eax
  41f5e4:	cwde   
  41f5e5:	hlt    
  41f5e6:	(bad)  
  41f5e7:	repnz adc DWORD PTR [edi],esp
  41f5ea:	(bad)  
  41f5eb:	shl    BYTE PTR [edi-0x10],cl
  41f5ee:	gs aaa 
  41f5f0:	pop    ebx
  41f5f1:	sbb    eax,0x8f71508d
  41f5f6:	leave  
  41f5f7:	inc    ecx
  41f5f8:	ja     0x41f5cf
  41f5fa:	xchg   edx,eax
  41f5fb:	ror    BYTE PTR [edx-0x6c],0x84
  41f5ff:	add    DWORD PTR [ebx+0x6580dbd4],ecx
  41f605:	adc    ebp,ebx
  41f607:	or     BYTE PTR [edx-0x3d022c31],ch
  41f60d:	add    bl,BYTE PTR [ecx+edi*8-0x3e]
  41f611:	inc    edx
  41f612:	icebp  
  41f613:	popa   
  41f614:	inc    eax
  41f615:	(bad)  
  41f616:	cli    
  41f617:	cmp    ecx,ebx
  41f619:	sbb    eax,0x146383f1
  41f61e:	mov    ds:0xdf44c5b9,al
  41f623:	push   ss
  41f624:	cmp    eax,0x16ef9920
  41f629:	ins    BYTE PTR es:[edi],dx
  41f62a:	sub    ah,bl
  41f62c:	imul   edi,DWORD PTR [edx-0x65],0x8bef936b
  41f633:	mul    ebp
  41f635:	mov    BYTE PTR [ecx],0x29
  41f638:	scas   eax,DWORD PTR es:[edi]
  41f639:	clc    
  41f63a:	div    DWORD PTR [eax]
  41f63c:	cmp    ah,bh
  41f63e:	mov    eax,ds:0xcbcf67ef
  41f643:	shl    DWORD PTR [ecx+0x2442c2d1],1
  41f649:	add    al,0x56
  41f64b:	pop    eax
  41f64c:	sahf   
  41f64d:	enter  0x8fdd,0x45
  41f651:	or     al,BYTE PTR [edx-0x2f]
  41f654:	data16 sub dh,BYTE PTR [ebp+0x38]
  41f658:	mov    BYTE PTR [eax-0x2cd5f16f],cl
  41f65e:	jle    0x41f679
  41f660:	imul   esi,DWORD PTR [eax-0x4f],0x1d
  41f664:	add    al,dl
  41f666:	mov    esi,0xe060da42
  41f66b:	test   eax,0x37fa194f
  41f670:	dec    ebp
  41f671:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f672:	dec    esp
  41f673:	rcr    BYTE PTR [eax+ebp*4],0xad
  41f677:	not    DWORD PTR [ebp+edi*2-0x4d]
  41f67b:	test   al,0xc5
  41f67d:	aas    
  41f67e:	fisttp WORD PTR [edx-0x2]
  41f681:	lods   eax,DWORD PTR ds:[esi]
  41f682:	out    0xe1,eax
  41f684:	daa    
  41f685:	ss xchg ebp,eax
  41f687:	sbb    BYTE PTR [ecx+0x36],dh
  41f68a:	dec    edx
  41f68b:	push   es
  41f68c:	mov    bh,0x89
  41f68e:	xor    bl,BYTE PTR [esi-0x58db9cb1]
  41f694:	out    0xf7,eax
  41f696:	push   edi
  41f697:	ds (bad) 
  41f699:	and    ebx,DWORD PTR [eax-0x526db239]
  41f69f:	mov    WORD PTR [edx],cs
  41f6a1:	jl     0x41f6e5
  41f6a3:	xchg   DWORD PTR [eax-0x6d],ecx
  41f6a6:	pop    es
  41f6a7:	out    0xb0,al
  41f6a9:	cli    
  41f6aa:	inc    esp
  41f6ab:	out    0xf,eax
  41f6ad:	cwde   
  41f6ae:	mov    ebx,0xb6842041
  41f6b3:	pop    ebx
  41f6b4:	push   cs
  41f6b5:	xchg   ebp,eax
  41f6b6:	pop    ds
  41f6b7:	jmp    0x41f722
  41f6b9:	test   al,0xfd
  41f6bb:	dec    esi
  41f6bc:	xor    eax,0x1a70fdbf
  41f6c1:	cmp    cl,BYTE PTR [eax-0x2e9678f9]
  41f6c7:	jmp    0x41f6fc
  41f6c9:	mov    bl,0x83
  41f6cb:	shl    eax,0x36
  41f6ce:	test   eax,0xf6be4cd1
  41f6d3:	adc    eax,0x929ee4f8
  41f6d8:	push   cs
  41f6d9:	or     al,0x70
  41f6db:	lds    ebp,FWORD PTR [ebp+0x40ac17e8]
  41f6e1:	outs   dx,DWORD PTR ds:[esi]
  41f6e2:	dec    esi
  41f6e3:	jle    0x41f712
  41f6e5:	stos   DWORD PTR es:[edi],eax
  41f6e6:	mov    dl,0x6f
  41f6e8:	xchg   esi,eax
  41f6e9:	sar    DWORD PTR [ebx+edx*1+0x5db6d517],cl
  41f6f0:	inc    edx
  41f6f1:	popf   
  41f6f2:	gs test al,0xb2
  41f6f5:	jbe    0x41f706
  41f6f7:	dec    edx
  41f6f8:	dec    edi
  41f6f9:	cmp    al,0x76
  41f6fb:	das    
  41f6fc:	and    BYTE PTR [ebp+0xe],dh
  41f6ff:	daa    
  41f700:	test   DWORD PTR [ebx+0x2257d3a0],ebp
  41f706:	cmp    al,BYTE PTR [ebx+0x2e]
  41f709:	retf   0xefe2
  41f70c:	jge    0x41f77c
  41f70e:	adc    DWORD PTR [ebx],eax
  41f710:	and    DWORD PTR [edi],edx
  41f712:	xor    eax,0xc063b32d
  41f717:	and    eax,0xc7aacf20
  41f71c:	push   esi
  41f71d:	dec    edx
  41f71e:	ss push ebx
  41f720:	xor    ebx,DWORD PTR [esi-0x4c]
  41f723:	test   DWORD PTR [ebx+0x8156867],esp
  41f729:	mov    al,0x55
  41f72b:	mov    ch,0x43
  41f72d:	adc    eax,0x7baced47
  41f732:	ret    
  41f733:	fidivr DWORD PTR [edi-0x31]
  41f736:	xor    eax,0x222f23
  41f73b:	jmp    0xc212acf1
  41f740:	mov    ds:0xd809f5b2,al
  41f745:	pop    esp
  41f746:	mov    ch,0x59
  41f748:	cmp    edi,esp
  41f74a:	sahf   
  41f74b:	mov    ecx,0x4c04e994
  41f750:	mov    ?,eax
  41f752:	pop    ebp
  41f753:	xchg   edx,eax
  41f754:	call   0xd6a6:0x8868285b
  41f75b:	mov    al,0xa6
  41f75d:	stos   BYTE PTR es:[edi],al
  41f75e:	add    eax,0xf93250d0
  41f763:	dec    ebx
  41f764:	loopne 0x41f72a
  41f766:	dec    eax
  41f767:	add    dh,BYTE PTR [esi]
  41f769:	cmp    al,0x98
  41f76b:	ret    0x84aa
  41f76e:	dec    ecx
  41f76f:	add    DWORD PTR [esi+0x6d4a6266],ebp
  41f775:	mov    cl,0x40
  41f777:	or     al,0xcf
  41f779:	and    ebx,ebx
  41f77b:	cld    
  41f77c:	adc    eax,0x1d251a43
  41f781:	mov    edi,0x90d7c304
  41f786:	mov    WORD PTR [ebx+0x75],ds
  41f789:	fldenv [ecx-0x42]
  41f78c:	add    ebx,0x15
  41f78f:	mov    cx,WORD PTR [bx+di]
  41f793:	xchg   esp,eax
  41f794:	(bad)  
  41f795:	js     0x41f773
  41f797:	and    dl,BYTE PTR [esi+0x70ed1b36]
  41f79d:	out    0x62,eax
  41f79f:	imul   ebx,DWORD PTR [ecx],0xf3390f42
  41f7a5:	pop    esp
  41f7a6:	mov    WORD PTR [esp+eax*2],cs
  41f7a9:	mov    eax,ds:0xe98da221
  41f7ae:	or     ch,BYTE PTR [edx]
  41f7b0:	xchg   edi,eax
  41f7b1:	shl    BYTE PTR [ebx+ecx*1],0x1c
  41f7b5:	ffree  st(3)
  41f7b7:	add    ebx,DWORD PTR [ecx+ecx*8+0x7fee40d1]
  41f7be:	mov    ebp,0x9408228f
  41f7c3:	mov    esp,0x57b2be61
  41f7c8:	call   0x6f63:0x6d70e9a9
  41f7cf:	jmp    0x41f7e1
  41f7d1:	inc    ecx
  41f7d2:	and    DWORD PTR [ebp+0x69],0x78
  41f7d6:	pop    ds
  41f7d7:	ins    BYTE PTR es:[edi],dx
  41f7d8:	addr16 cmc 
  41f7da:	push   edi
  41f7db:	rcl    BYTE PTR [edx],0x4c
  41f7de:	outs   dx,DWORD PTR ds:[esi]
  41f7df:	xor    bh,BYTE PTR [ebx]
  41f7e1:	pop    ecx
  41f7e2:	popf   
  41f7e3:	in     al,0xc1
  41f7e5:	lods   al,BYTE PTR ds:[esi]
  41f7e6:	mov    ds:0x942c2f5c,eax
  41f7eb:	ret    0x75fc
  41f7ee:	cdq    
  41f7ef:	loopne 0x41f7e7
  41f7f1:	jo     0x41f860
  41f7f3:	(bad)  
  41f7f4:	jp     0x41f77e
  41f7f6:	xor    cl,dh
  41f7f8:	in     eax,0x62
  41f7fa:	add    DWORD PTR [eax],esp
  41f7fc:	les    eax,FWORD PTR [ebx+0x19a52eb4]
  41f802:	fst    DWORD PTR [edx+edi*1]
  41f805:	xchg   esp,eax
  41f806:	jne    0x41f7c0
  41f808:	dec    esp
  41f809:	jle    0x41f806
  41f80b:	xchg   BYTE PTR [edi],cl
  41f80d:	adc    eax,0x918a6810
  41f812:	xor    DWORD PTR ss:[edx],ebx
  41f815:	hlt    
  41f816:	dec    ebx
  41f817:	inc    DWORD PTR [ecx]
  41f819:	jo     0x41f880
  41f81b:	sub    BYTE PTR [esi-0x1b5fcfd4],bl
  41f821:	test   DWORD PTR [edx],edx
  41f823:	push   ecx
  41f824:	iret   
  41f825:	mov    ecx,0xe164c3c4
  41f82a:	cmc    
  41f82b:	xchg   esp,eax
  41f82c:	inc    ebx
  41f82d:	sti    
  41f82e:	ret    0xb11a
  41f831:	out    0xcf,al
  41f833:	and    ebp,eax
  41f835:	pop    ecx
  41f836:	inc    eax
  41f837:	add    BYTE PTR ss:[edi-0x58c0c19f],dh
  41f83e:	ror    BYTE PTR [eax+0x13],1
  41f841:	xchg   ecx,eax
  41f842:	(bad)  
  41f843:	repz pushf 
  41f845:	mov    dl,0x63
  41f847:	cmp    al,0x54
  41f849:	out    0x87,eax
  41f84b:	out    0xfd,al
  41f84d:	sub    esi,ecx
  41f84f:	xor    edi,DWORD PTR [edi+ebp*1+0x17928f42]
  41f856:	gs xchg esi,eax
  41f858:	mov    ah,0x44
  41f85a:	mov    edx,DWORD PTR [ecx-0x14294773]
  41f860:	fsub   QWORD PTR [esi]
  41f862:	inc    ebx
  41f863:	icebp  
  41f864:	dec    edi
  41f865:	push   esp
  41f866:	xchg   edi,eax
  41f867:	push   0xa313e863
  41f86c:	add    al,0xfe
  41f86e:	cmp    DWORD PTR [ebx+0x481fba4],esp
  41f874:	inc    edi
  41f875:	aaa    
  41f876:	cmp    esp,DWORD PTR [ebx-0x40]
  41f879:	cmp    DWORD PTR [ebx+0x2],ebp
  41f87c:	popf   
  41f87d:	mov    esp,0x955e2b1e
  41f882:	pop    eax
  41f883:	add    DWORD PTR [eax+0x6f9aae1d],esi
  41f889:	lds    edi,FWORD PTR [esi+0x6f25ef28]
  41f88f:	or     ebx,esp
  41f891:	je     0x41f85f
  41f893:	stos   BYTE PTR es:[edi],al
  41f894:	popf   
  41f895:	loop   0x41f89d
  41f897:	shr    DWORD PTR [edx+ebp*2+0x1d],0x7c
  41f89c:	push   esi
  41f89d:	pop    eax
  41f89e:	add    al,0xec
  41f8a0:	add    edx,DWORD PTR [ebx]
  41f8a2:	je     0x41f8cc
  41f8a4:	out    0x5c,eax
  41f8a6:	inc    eax
  41f8a7:	or     DWORD PTR [esi],ebp
  41f8a9:	fs pop edx
  41f8ab:	out    dx,eax
  41f8ac:	jnp    0x41f83d
  41f8ae:	jge    0x41f8cc
  41f8b0:	push   ebx
  41f8b1:	fcomp  st(4)
  41f8b3:	dec    edx
  41f8b4:	jo     0x41f934
  41f8b6:	jecxz  0x41f90d
  41f8b8:	aaa    
  41f8b9:	or     BYTE PTR [esi+0x13],ch
  41f8bc:	xchg   DWORD PTR ds:0x1759d121,esp
  41f8c2:	push   es
  41f8c3:	(bad)
  41f8c6:	push   0x652ef6d6
  41f8cb:	dec    ebx
  41f8cc:	xchg   esi,eax
  41f8cd:	leave  
  41f8ce:	xchg   ebp,eax
  41f8cf:	cdq    
  41f8d0:	inc    ebp
  41f8d1:	push   ecx
  41f8d2:	inc    ecx
  41f8d3:	mov    DWORD PTR [edi*1+0x56bde294],esp
  41f8da:	add    esi,DWORD PTR [esi]
  41f8dc:	xchg   DWORD PTR [edi-0x5c],esi
  41f8df:	fdiv   DWORD PTR [ebp+0x69]
  41f8e2:	xor    al,0x2c
  41f8e4:	mov    bh,0x72
  41f8e6:	sbb    BYTE PTR [esi+ecx*1-0x4b],0xa2
  41f8eb:	mov    cl,0xd6
  41f8ed:	sbb    BYTE PTR [eax+0x71],dl
  41f8f0:	daa    
  41f8f1:	push   ss
  41f8f2:	xor    DWORD PTR [ecx+0x59],0xffffffdf
  41f8f6:	cwde   
  41f8f7:	mov    esp,0x9a34c3d8
  41f8fc:	stos   BYTE PTR es:[edi],al
  41f8fd:	pop    es
  41f8fe:	and    esi,DWORD PTR [esi+0x6963ba73]
  41f904:	rcl    DWORD PTR [ebx+0x4f],0xc1
  41f908:	xor    al,0x8b
  41f90a:	fiadd  WORD PTR [esi]
  41f90c:	stos   DWORD PTR es:[edi],eax
  41f90d:	repnz shr edi,1
  41f910:	fild   WORD PTR [esi+0x43b6b70c]
  41f916:	inc    edx
  41f917:	xchg   ebx,eax
  41f918:	or     ah,BYTE PTR [edi+0x3]
  41f91b:	sahf   
  41f91c:	and    ah,dl
  41f91e:	sbb    ah,BYTE PTR [esp+ebx*2-0x3f]
  41f922:	cmc    
  41f923:	out    dx,eax
  41f924:	clc    
  41f925:	test   eax,0xd4171511
  41f92a:	or     ebx,DWORD PTR [esi-0x77189b54]
  41f930:	es cmp al,0x70
  41f933:	mov    al,ds:0x82647fad
  41f938:	out    dx,eax
  41f939:	sub    ecx,ecx
  41f93b:	int3   
  41f93c:	push   cs
  41f93d:	inc    esp
  41f93e:	jmp    0x38d2:0x73d1a70
  41f945:	or     dl,0x95
  41f948:	sub    eax,0xefb33b12
  41f94d:	cmp    eax,0x7d6b6cfa
  41f952:	push   edi
  41f953:	pop    edx
  41f954:	fimul  WORD PTR [ecx+0x3e]
  41f957:	mov    DWORD PTR [edx],ecx
  41f959:	mov    eax,0xaae16145
  41f95e:	lahf   
  41f95f:	mov    dh,0x13
  41f961:	mov    eax,0x2cc5558b
  41f966:	imul   esi,DWORD PTR ds:0x5f59479a,0xca357e04
  41f970:	pusha  
  41f971:	dec    eax
  41f972:	adc    eax,0xfdeab258
  41f977:	mov    eax,ds:0xfeb7168e
  41f97c:	and    cl,BYTE PTR [edi+0x7f]
  41f97f:	lahf   
  41f980:	in     ax,0x7b
  41f983:	repnz lods eax,DWORD PTR ds:[esi]
  41f985:	fnop   
  41f987:	popf   
  41f988:	ror    DWORD PTR [edx-0x69],cl
  41f98b:	xchg   ebp,eax
  41f98c:	jae    0x41f91e
  41f98e:	push   0xffffff80
  41f990:	mov    ch,BYTE PTR ds:0xeece603e
  41f996:	retf   
  41f997:	jle    0x41fa16
  41f999:	xor    DWORD PTR [eax],esi
  41f99b:	mov    ds:0x80f4f47b,eax
  41f9a0:	add    eax,0x1fc03abc
  41f9a5:	and    al,BYTE PTR [ebx]
  41f9a7:	imul   ecx,DWORD PTR [ecx+0x6c],0xa
  41f9ab:	cli    
  41f9ac:	xchg   cx,ax
  41f9ae:	mov    edx,0x62155fd3
  41f9b3:	dec    esp
  41f9b4:	test   DWORD PTR [edi-0x5e293aa0],0x45188e2e
  41f9be:	xor    BYTE PTR [eax+0x66],al
  41f9c1:	inc    ebp
  41f9c2:	jo     0x41f9f8
  41f9c4:	rcr    DWORD PTR [edi],cl
  41f9c6:	xchg   ebp,eax
  41f9c7:	ds pop ebx
  41f9c9:	jbe    0x41f9b5
  41f9cb:	cmovp  edx,ebp
  41f9ce:	cmp    al,0xb2
  41f9d0:	into   
  41f9d1:	int    0x6f
  41f9d3:	sbb    eax,0xfdbfb56a
  41f9d8:	dec    DWORD PTR [ecx+0x26]
  41f9db:	push   ebp
  41f9dc:	jae    0x41f9c1
  41f9de:	scas   al,BYTE PTR es:[edi]
  41f9df:	call   0x1c9:0xe4fac13c
  41f9e6:	sar    edi,cl
  41f9e8:	sub    ebp,edi
  41f9ea:	mov    edi,0x78ba956
  41f9ef:	sub    dh,BYTE PTR [ebx-0x3c]
  41f9f2:	test   al,0x5e
  41f9f4:	stc    
  41f9f5:	mov    edx,DWORD PTR [ecx-0x6e]
  41f9f8:	cmc    
  41f9f9:	mov    ebp,0xfa40ab53
  41f9fe:	ror    ah,0x76
  41fa01:	adc    DWORD PTR [esi+0x1e7f871e],esp
  41fa07:	popa   
  41fa08:	cmp    al,0x74
  41fa0a:	sub    BYTE PTR [eax-0xfb32e7c],dh
  41fa10:	mov    ebx,0x699e474c
  41fa15:	aaa    
  41fa16:	push   ss
  41fa17:	rcl    DWORD PTR [ecx],1
  41fa19:	adc    esi,ebp
  41fa1b:	dec    ecx
  41fa1c:	jg     0x41fa3c
  41fa1e:	mov    ds:0xeb71b10e,eax
  41fa23:	mov    ebp,fs
  41fa25:	(bad)  
  41fa26:	and    al,0xdf
  41fa28:	getsec 
  41fa2a:	sar    edi,1
  41fa2c:	shr    ch,1
  41fa2e:	lods   eax,DWORD PTR ds:[esi]
  41fa2f:	ret    0x9187
  41fa32:	jno    0x41fa56
  41fa34:	enter  0x3f6b,0x4b
  41fa38:	test   eax,0xed4b1c95
  41fa3d:	hlt    
  41fa3e:	sbb    BYTE PTR [ecx+0x47],ah
  41fa41:	popf   
  41fa42:	iret   
  41fa43:	in     al,0xb6
  41fa45:	scas   al,BYTE PTR es:[edi]
  41fa46:	iret   
  41fa47:	add    eax,0x31e01f67
  41fa4c:	dec    ebx
  41fa4d:	pop    ds
  41fa4e:	rol    ah,0xc8
  41fa51:	or     cl,BYTE PTR [eax-0x5f]
  41fa54:	scas   eax,DWORD PTR es:[edi]
  41fa55:	int3   
  41fa56:	mov    BYTE PTR [esp+ebx*8-0x3f826f31],bl
  41fa5d:	push   cs
  41fa5e:	sar    DWORD PTR [ebx],1
  41fa60:	les    ebp,FWORD PTR [ebp-0x4a]
  41fa63:	add    al,0x7b
  41fa65:	mov    ah,0xf9
  41fa67:	cmp    DWORD PTR [ebp-0x66],ecx
  41fa6a:	outs   dx,DWORD PTR es:[esi]
  41fa6c:	out    0x6a,eax
  41fa6e:	and    esi,edi
  41fa70:	or     DWORD PTR [ebp-0x4b2b4b3a],0xe8b893c5
  41fa7a:	jne    0x41fab7
  41fa7c:	xchg   ecx,eax
  41fa7d:	retf   0xf369
  41fa80:	mov    bl,0xcc
  41fa82:	pusha  
  41fa83:	or     DWORD PTR [ebx-0x4ccab616],0x6b7005de
  41fa8d:	fist   DWORD PTR [edx+0x6]
  41fa90:	push   edi
  41fa91:	push   eax
  41fa92:	pop    es
  41fa93:	out    dx,al
  41fa94:	push   es
  41fa95:	jne    0x41fa67
  41fa97:	xchg   ecx,eax
  41fa98:	jecxz  0x41fa6f
  41fa9a:	jo     0x41fac5
  41fa9c:	ret    0x55b4
  41fa9f:	out    0xab,eax
  41faa1:	mov    ebx,0xbad0d418
  41faa6:	ret    
  41faa7:	sub    al,BYTE PTR [eax-0x31b02e8a]
  41faad:	ins    DWORD PTR es:[edi],dx
  41faae:	jl     0x41fb0c
  41fab0:	cmp    dl,dl
  41fab2:	dec    edx
  41fab3:	mov    esp,0x61ff602b
  41fab8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fab9:	enter  0x585e,0x37
  41fabd:	dec    ebp
  41fabe:	sub    DWORD PTR [ecx-0x980535b],edx
  41fac4:	cmc    
  41fac5:	pop    eax
  41fac6:	xlat   BYTE PTR ds:[ebx]
  41fac7:	das    
  41fac8:	jbe    0x41fa4f
  41faca:	jl     0x41fa72
  41facc:	inc    eax
  41facd:	sahf   
  41face:	inc    edx
  41facf:	popa   
  41fad0:	ss push ebp
  41fad2:	pushf  
  41fad3:	loope  0x41fb39
  41fad5:	pop    edi
  41fad6:	(bad)  
  41fad7:	nop
  41fad8:	lods   eax,DWORD PTR ds:[esi]
  41fad9:	mov    bh,BYTE PTR [ebx]
  41fadb:	fimul  WORD PTR [ecx+0x563470ca]
  41fae1:	aad    0xeb
  41fae3:	aaa    
  41fae4:	data16 add BYTE PTR [eax],dl
  41fae7:	ja     0x41fa8e
  41fae9:	sbb    eax,0x6fda7594
  41faee:	mov    gs,WORD PTR [ecx+edx*8-0x3127cb82]
  41faf5:	test   al,0x67
  41faf7:	loopne 0x41fb19
  41faf9:	arpl   WORD PTR ds:0x20c1fd45,si
  41faff:	xchg   ecx,eax
  41fb00:	add    bl,BYTE PTR [eax+0x5]
  41fb03:	(bad)  [eax+eiz*4+0x12]
  41fb07:	ret    0x5694
  41fb0a:	xchg   bh,al
  41fb0c:	mov    esi,0x2b73a2c2
  41fb11:	int3   
  41fb12:	cmp    bh,cl
  41fb14:	out    dx,al
  41fb15:	sub    al,0xbb
  41fb17:	lods   al,BYTE PTR ds:[esi]
  41fb18:	neg    BYTE PTR [ebx]
  41fb1a:	jns    0x41fb90
  41fb1c:	in     eax,dx
  41fb1d:	in     eax,dx
  41fb1e:	cmp    BYTE PTR [esi],bl
  41fb20:	sub    bl,ah
  41fb22:	aam    0xdd
  41fb24:	daa    
  41fb25:	retf   0x5bb5
  41fb28:	les    ebx,FWORD PTR [ecx]
  41fb2a:	outs   dx,BYTE PTR ds:[esi]
  41fb2b:	imul   eax,DWORD PTR ds:[edi],0x60
  41fb2f:	scas   al,BYTE PTR es:[edi]
  41fb30:	int3   
  41fb31:	inc    esi
  41fb32:	stc    
  41fb33:	adc    ch,BYTE PTR [esi+0xe]
  41fb36:	jle    0x41fadb
  41fb38:	xor    DWORD PTR [eax+0x3c035546],esi
  41fb3e:	dec    esp
  41fb3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb40:	mov    bh,BYTE PTR [edi-0x5b21bd09]
  41fb46:	xchg   edi,eax
  41fb47:	mov    cl,0xf5
  41fb49:	sub    cl,dl
  41fb4b:	pop    ecx
  41fb4c:	mov    cl,0xbd
  41fb4e:	mov    al,0xea
  41fb50:	movhps QWORD PTR [eax-0x9bd44df],xmm6
  41fb57:	add    al,0x44
  41fb59:	cmp    al,0x95
  41fb5b:	(bad)  
  41fb5c:	xor    BYTE PTR [ebp+0x7c],dh
  41fb5f:	lods   al,BYTE PTR ds:[esi]
  41fb60:	mov    eax,esi
  41fb62:	jb     0x41fbb3
  41fb64:	gs pusha 
  41fb66:	pop    esp
  41fb67:	adc    eax,0x8d62a6e2
  41fb6c:	mov    eax,ds:0xd2dfcf09
  41fb71:	shl    DWORD PTR [eax+0x21e3bebe],cl
  41fb77:	mov    WORD PTR [edx-0x1],fs
  41fb7a:	mov    eax,ds:0x19f78135
  41fb7f:	into   
  41fb80:	sar    BYTE PTR [ebx-0x201a287e],0x3
  41fb87:	xchg   edx,eax
  41fb88:	jmp    FWORD PTR [edi]
  41fb8a:	pop    esi
  41fb8b:	xchg   ebp,eax
  41fb8c:	hlt    
  41fb8d:	mov    dl,0x9f
  41fb8f:	pushf  
  41fb90:	dec    edi
  41fb91:	hlt    
  41fb92:	jmp    0x41fb1d
  41fb94:	cmp    DWORD PTR [ebx+ebp*1-0x27],ebx
  41fb98:	add    dh,al
  41fb9a:	and    ecx,DWORD PTR [edi+ebx*4]
  41fb9d:	jnp    0x41fb50
  41fb9f:	cwde   
  41fba0:	mov    edi,0xc4df479e
  41fba5:	mov    eax,0xbf95201b
  41fbaa:	inc    esi
  41fbab:	mov    ch,0x40
  41fbad:	vpunpcklbw ymm1,ymm7,YMMWORD PTR [eax+edx*2+0xa424582]
  41fbb6:	adc    al,0x61
  41fbb8:	pop    ds
  41fbb9:	sbb    DWORD PTR [eax-0x76c3e7f],edx
  41fbbf:	add    BYTE PTR fs:[ebx],cl
  41fbc2:	retf   0x4d89
  41fbc5:	lods   al,BYTE PTR ds:[esi]
  41fbc6:	mov    ecx,DWORD PTR [ebp+0x8]
  41fbc9:	mov    edx,DWORD PTR [ebp-0x50]
  41fbcc:	add    ecx,0x242ebcc
  41fbd2:	xor    ecx,edx
  41fbd4:	mov    DWORD PTR [ebp-0x50],ecx
  41fbd7:	mov    ecx,DWORD PTR [ebp+0x8]
  41fbda:	mov    edx,DWORD PTR [ebp-0x4c]
  41fbdd:	add    ecx,edi
  41fbdf:	and    ecx,edx
  41fbe1:	mov    DWORD PTR [ebp-0x4c],ecx
  41fbe4:	mov    ecx,DWORD PTR [ebp+0x8]
  41fbe7:	mov    edx,DWORD PTR [ebp-0x48]
  41fbea:	lea    ecx,[edx+ecx*1+0x241fcde]
  41fbf1:	mov    DWORD PTR [ebp-0x48],ecx
  41fbf4:	mov    ecx,DWORD PTR [ebp+0x8]
  41fbf7:	mov    edx,0xfa5e1521
  41fbfc:	sub    edx,ecx
  41fbfe:	add    edx,DWORD PTR [ebp-0x44]
  41fc01:	mov    DWORD PTR [ebp-0x44],edx
  41fc04:	mov    ecx,DWORD PTR [ebp+0x8]
  41fc07:	jmp    0x421f6a
  41fc0c:	loope  0x41fbd6
  41fc0e:	xchg   ecx,eax
  41fc0f:	xchg   DWORD PTR [ebx-0x79],edi
  41fc12:	fisttp DWORD PTR [eax+0x539e7a01]
  41fc18:	lea    edi,[ebx*2+0x7db74345]
  41fc1f:	jp     0x41fc51
  41fc21:	pop    edi
  41fc22:	jp     0x41fc9e
  41fc24:	mov    bh,0x2c
  41fc26:	mov    cs,WORD PTR [eax-0x1c58da85]
  41fc2c:	sub    eax,DWORD PTR [esi+0x24aaae5]
  41fc32:	mov    eax,0xbc348fa8
  41fc37:	test   DWORD PTR [ebx],ecx
  41fc39:	xor    ebp,DWORD PTR [edi+0x9]
  41fc3c:	inc    esp
  41fc3d:	jb     0x41fc0a
  41fc3f:	xchg   BYTE PTR [esi-0x3c3c67f9],cl
  41fc45:	pop    eax
  41fc46:	inc    ebx
  41fc47:	and    ah,bl
  41fc49:	stos   BYTE PTR es:[edi],al
  41fc4a:	(bad)  
  41fc4b:	fstp   DWORD PTR [eax-0xb3bcbdd]
  41fc51:	outs   dx,BYTE PTR ds:[esi]
  41fc52:	xchg   BYTE PTR [esi],ch
  41fc54:	add    al,0x67
  41fc56:	pop    esi
  41fc57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc58:	sbb    DWORD PTR [ebx],esp
  41fc5a:	(bad)  
  41fc5b:	(bad)  
  41fc5c:	(bad)  
  41fc5d:	addr16 inc ebx
  41fc5f:	mov    dl,ah
  41fc61:	loop   0x41fbee
  41fc63:	cs xchg edx,eax
  41fc65:	and    esp,DWORD PTR [eax-0x318bc68f]
  41fc6b:	and    esp,DWORD PTR [ecx+0x35c2cd31]
  41fc71:	shl    DWORD PTR [ebp+0x2],1
  41fc74:	jmp    0xf05ae85
  41fc79:	clc    
  41fc7a:	mov    bl,BYTE PTR [ebp+0x6e]
  41fc7d:	inc    edi
  41fc7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc7f:	loope  0x41fcaa
  41fc81:	sub    ebp,DWORD PTR [ebp-0x2afbb6c1]
  41fc87:	xor    eax,0x25a287c3
  41fc8c:	push   esi
  41fc8d:	ja     0x41fcb2
  41fc8f:	aad    0xe0
  41fc91:	mov    esi,0x52d0624a
  41fc96:	ret    
  41fc97:	shl    BYTE PTR [ecx-0x7b261e86],1
  41fc9d:	pop    ecx
  41fc9e:	bound  ebx,QWORD PTR [esi+0x9f62c38]
  41fca4:	or     al,0xe5
  41fca6:	popf   
  41fca7:	mov    ds,ecx
  41fca9:	and    eax,edx
  41fcab:	or     al,0xa3
  41fcad:	jle    0x41fce7
  41fcaf:	call   0x18ae53b1
  41fcb4:	mov    ds:0x2a892a03,eax
  41fcb9:	push   esp
  41fcba:	ja     0x41fd1c
  41fcbc:	and    BYTE PTR [ecx+edi*4+0x18ba4a20],bl
  41fcc3:	jg     0x41fc76
  41fcc5:	pop    esp
  41fcc6:	sbb    eax,0x643e10e0
  41fccb:	jge    0x41fd22
  41fccd:	out    0xf1,eax
  41fccf:	outs   dx,DWORD PTR ds:[esi]
  41fcd0:	jg     0x41fc53
  41fcd2:	push   ebx
  41fcd3:	push   es
  41fcd4:	test   BYTE PTR ds:0x199b25f9,bh
  41fcda:	loope  0x41fcdc
  41fcdc:	jl     0x41fd54
  41fcde:	adc    al,0x3d
  41fce0:	xor    ah,dh
  41fce2:	jle    0x41fd43
  41fce4:	xor    al,bl
  41fce6:	aas    
  41fce7:	in     eax,dx
  41fce8:	sbb    ecx,edi
  41fcea:	fcmovne st,st(4)
  41fcec:	jmp    0xf09de7b6
  41fcf1:	(bad)
  41fcf5:	add    eax,0xd8ce1270
  41fcfa:	and    cl,BYTE PTR [edx+0x521e1198]
  41fd00:	add    ch,bl
  41fd02:	pop    eax
  41fd03:	jle    0x41fd84
  41fd05:	loopne 0x41fd56
  41fd07:	in     al,dx
  41fd08:	les    ebp,FWORD PTR [ebx]
  41fd0a:	lods   eax,DWORD PTR ds:[esi]
  41fd0b:	clc    
  41fd0c:	push   esp
  41fd0d:	adc    ecx,esi
  41fd0f:	sbb    dh,BYTE PTR [ecx+0x61]
  41fd12:	(bad)  [ebx-0x68]
  41fd15:	in     al,0x49
  41fd17:	stos   DWORD PTR es:[edi],eax
  41fd18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd19:	mov    ah,0xd2
  41fd1b:	sbb    BYTE PTR [esi-0x314102dc],bh
  41fd21:	lds    esp,FWORD PTR [ecx-0x2f920d18]
  41fd27:	sub    DWORD PTR [ecx],0x4b38e0d8
  41fd2d:	pushf  
  41fd2e:	xchg   ax,ax
  41fd30:	mov    al,ds:0xa75238ac
  41fd35:	test   DWORD PTR [edx+0x57937768],0x2c8b11c8
  41fd3f:	push   ds
  41fd40:	jle    0x41fda6
  41fd42:	and    eax,0xe3ea5a62
  41fd47:	mov    bh,0xaa
  41fd49:	inc    ebp
  41fd4a:	mov    dh,0x1c
  41fd4c:	xchg   DWORD PTR [ebx+ebx*8+0x5],esp
  41fd50:	pop    ebp
  41fd51:	adc    DWORD PTR [ecx+0x7b],ecx
  41fd54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd55:	loop   0x41fce4
  41fd57:	xor    eax,0x33299fbc
  41fd5c:	mov    ds:0xfc9586fb,eax
  41fd61:	push   ecx
  41fd62:	ins    BYTE PTR es:[edi],dx
  41fd63:	or     BYTE PTR [edx+0x4b],dl
  41fd66:	pop    ss
  41fd67:	and    esp,DWORD PTR [esi-0x1e9c0a18]
  41fd6d:	xchg   ebp,eax
  41fd6e:	lods   eax,DWORD PTR ds:[esi]
  41fd6f:	sbb    al,0xe
  41fd71:	mov    eax,ds:0x3f89aacd
  41fd76:	dec    ebx
  41fd77:	rdtsc  
  41fd79:	sbb    al,0x5d
  41fd7b:	mov    esp,0xeb2877a
  41fd80:	bound  edi,QWORD PTR [ecx-0x3063360e]
  41fd86:	paddsb mm3,QWORD PTR ds:0xac88f8af
  41fd8d:	jmp    0x41fd92
  41fd8f:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41fd91:	fwait
  41fd92:	jns    0x41fe0c
  41fd94:	aad    0xfd
  41fd96:	retf   
  41fd97:	data16 jecxz 0x41fdc8
  41fd9a:	inc    esp
  41fd9b:	sub    ch,0x7a
  41fd9e:	enter  0x64b4,0xb4
  41fda2:	in     eax,dx
  41fda3:	pop    ebx
  41fda4:	in     al,0x95
  41fda6:	push   ebx
  41fda7:	lock jne 0x41fdd5
  41fdaa:	popa   
  41fdab:	(bad)  
  41fdac:	scas   al,BYTE PTR es:[edi]
  41fdad:	add    eax,0x893b9d0c
  41fdb2:	xchg   esi,eax
  41fdb3:	xlat   BYTE PTR ds:[ebx]
  41fdb4:	mov    ecx,0x5109a4a
  41fdb9:	xchg   esp,eax
  41fdba:	xchg   ebx,eax
  41fdbb:	mov    edx,0x5d586116
  41fdc0:	mov    al,ds:0x32bffcff
  41fdc5:	imul   DWORD PTR [ebx-0x3f]
  41fdc8:	cmp    bh,BYTE PTR [esi+ecx*4]
  41fdcb:	dec    esi
  41fdcc:	inc    eax
  41fdcd:	out    dx,eax
  41fdce:	jl     0x41fd50
  41fdd0:	das    
  41fdd1:	mov    ch,0x8f
  41fdd3:	xor    BYTE PTR [eax-0x6ecc7b93],dl
  41fdd9:	fisubr WORD PTR [edx-0x17]
  41fddc:	stc    
  41fddd:	repnz nop
  41fddf:	add    DWORD PTR [esi+0x6531a98f],edi
  41fde5:	imul   eax,DWORD PTR [ebp+0x34],0x24
  41fde9:	ss std 
  41fdeb:	cdq    
  41fdec:	or     BYTE PTR [edi],bl
  41fdee:	inc    edi
  41fdef:	jecxz  0x41fe51
  41fdf1:	or     BYTE PTR [ecx],0x83
  41fdf4:	mov    eax,esp
  41fdf6:	push   eax
  41fdf7:	sub    esi,DWORD PTR [edx]
  41fdf9:	cmp    al,0x1b
  41fdfb:	add    BYTE PTR [edx+esi*8-0x55eaa884],cl
  41fe02:	cmc    
  41fe03:	xor    eax,0xcb570177
  41fe08:	mov    ?,WORD PTR [esi+0x2c8ec8e]
  41fe0e:	pusha  
  41fe0f:	loope  0x41fdde
  41fe11:	jl     0x41fde6
  41fe13:	and    eax,0x460fa754
  41fe18:	dec    esi
  41fe19:	mov    al,ds:0x9394b1a5
  41fe1e:	xchg   ebp,eax
  41fe1f:	jns    0x41fe57
  41fe21:	xchg   edi,eax
  41fe22:	sub    al,0x9a
  41fe24:	enter  0x5f6f,0xe2
  41fe28:	xor    edi,edx
  41fe2a:	xchg   DWORD PTR [edx+0x5f],edx
  41fe2d:	out    dx,al
  41fe2e:	mov    ch,0x8d
  41fe30:	mov    ds:0xce02886b,eax
  41fe35:	sar    DWORD PTR [eax+0x17c645e2],cl
  41fe3b:	or     esi,eax
  41fe3d:	jns    0x41fdd4
  41fe3f:	jno    0x41fe0e
  41fe41:	or     dh,BYTE PTR [esi+0x3f1d10da]
  41fe47:	movq   QWORD PTR [ebp-0x4f],mm3
  41fe4b:	mov    al,0xe6
  41fe4d:	out    dx,eax
  41fe4e:	into   
  41fe4f:	jecxz  0x41fe52
  41fe51:	retf   0xf8e2
  41fe54:	sbb    DWORD PTR [ecx],0x4c
  41fe57:	je     0x41fe2d
  41fe59:	mov    al,0x2f
  41fe5b:	jb     0x41fe01
  41fe5d:	mov    ebp,0xadfc325c
  41fe62:	push   ecx
  41fe63:	mov    edi,0xbfe44936
  41fe68:	jno    0x41fea5
  41fe6a:	ficomp DWORD PTR [esi]
  41fe6c:	jb     0x41fe92
  41fe6e:	imul   ebx,DWORD PTR [ebx-0x3e272ff7],0x7e
  41fe75:	xor    eax,0xdc4c0234
  41fe7a:	mov    ecx,0x76dd54b3
  41fe7f:	jge    0x41fe6a
  41fe81:	data16 outs dx,BYTE PTR ds:[esi]
  41fe83:	xchg   BYTE PTR [edx],dh
  41fe85:	sub    al,0xfe
  41fe87:	aad    0x98
  41fe89:	and    eax,0x1486fd2c
  41fe8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe8f:	inc    eax
  41fe90:	mov    eax,ds:0xc4f34484
  41fe95:	iret   
  41fe96:	out    0xdc,al
  41fe98:	mov    esp,0x42a54e14
  41fe9d:	outs   dx,DWORD PTR ds:[esi]
  41fe9e:	and    cl,ah
  41fea0:	xchg   ecx,edi
  41fea2:	in     eax,0xc7
  41fea4:	mov    ebx,0x625f19da
  41fea9:	mov    ebp,0x1cb6ac1d
  41feae:	xchg   edi,eax
  41feaf:	adc    eax,0x661506ba
  41feb4:	jg     0x41fe66
  41feb6:	sbb    cl,BYTE PTR ds:0x599a9acd
  41febc:	shr    BYTE PTR [eax],1
  41febe:	jge    0x41fea0
  41fec0:	mov    ebp,0xf23770dd
  41fec5:	rcr    BYTE PTR [ecx],1
  41fec7:	jbe    0x41feb8
  41fec9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41feca:	push   0x85d2bd09
  41fecf:	sbb    al,0xad
  41fed1:	cmp    DWORD PTR [ebp+0x70b9e067],0x1c66e48e
  41fedb:	xor    DWORD PTR [esi-0x2bc1265e],eax
  41fee1:	cmp    ebp,ecx
  41fee3:	add    al,0x3d
  41fee5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fee6:	ins    BYTE PTR es:[edi],dx
  41fee7:	cmp    bl,BYTE PTR [eax+ebx*8-0x2d2115b7]
  41feee:	stos   BYTE PTR es:[edi],al
  41feef:	test   DWORD PTR [eax+0x2b],ebp
  41fef2:	jl     0x41ff09
  41fef4:	pop    ss
  41fef5:	test   BYTE PTR [esi+0x7e],0xc7
  41fef9:	push   ss
  41fefa:	mov    al,0x29
  41fefc:	sti    
  41fefd:	pop    ebx
  41fefe:	xchg   edx,eax
  41feff:	scas   eax,DWORD PTR es:[edi]
  41ff00:	or     eax,0xf7c81168
  41ff05:	stos   BYTE PTR es:[edi],al
  41ff06:	sbb    edi,DWORD PTR [ebx-0x55]
  41ff09:	dec    ebx
  41ff0a:	dec    eax
  41ff0b:	mov    WORD PTR [edx-0x5ca15be],?
  41ff11:	mov    al,0xb3
  41ff13:	adc    DWORD PTR [esi-0x57],edi
  41ff16:	cwde   
  41ff17:	cs sub al,0x8c
  41ff1a:	scas   al,BYTE PTR es:[edi]
  41ff1b:	cld    
  41ff1c:	jecxz  0x41ff50
  41ff1e:	and    cx,WORD PTR [ebp-0x4f]
  41ff22:	pop    esp
  41ff23:	dec    esp
  41ff24:	mov    al,ds:0x7409a590
  41ff29:	scas   al,BYTE PTR es:[edi]
  41ff2a:	mov    bh,0xbe
  41ff2c:	loope  0x41ff69
  41ff2e:	inc    esp
  41ff2f:	push   0xd67dea1a
  41ff34:	mov    al,0xf
  41ff36:	sub    ah,BYTE PTR [edx+0x4a]
  41ff39:	test   eax,0x82645433
  41ff3e:	xchg   esp,eax
  41ff3f:	or     eax,esp
  41ff41:	clc    
  41ff42:	mov    ecx,0x8145ffec
  41ff47:	add    eax,DWORD PTR [ecx]
  41ff49:	or     al,BYTE PTR [ecx]
  41ff4b:	inc    ebx
  41ff4c:	dec    ecx
  41ff4d:	sub    esp,esi
  41ff4f:	inc    esi
  41ff50:	mov    ecx,0x4b4a7888
  41ff55:	push   0x6137ee63
  41ff5a:	add    ebp,DWORD PTR [eax+0x2f]
  41ff5d:	aaa    
  41ff5e:	popa   
  41ff5f:	popf   
  41ff60:	es inc esp
  41ff62:	jp     0x41ffdc
  41ff64:	inc    esp
  41ff65:	xchg   DWORD PTR [ecx-0x17827f33],edx
  41ff6b:	xchg   ecx,eax
  41ff6c:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  41ff6e:	pushf  
  41ff6f:	repnz daa 
  41ff71:	je     0x41ff53
  41ff73:	or     al,0x2c
  41ff75:	rcl    BYTE PTR ds:0x84790295,cl
  41ff7b:	fs xor esi,eax
  41ff7e:	outs   dx,DWORD PTR ds:[esi]
  41ff7f:	cwde   
  41ff80:	lock lock daa 
  41ff83:	inc    eax
  41ff84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff85:	int3   
  41ff86:	add    ebp,ebx
  41ff88:	mov    ?,ebx
  41ff8a:	(bad)  
  41ff8b:	sbb    ebp,DWORD PTR [ebx+0x3fc1b146]
  41ff91:	sub    al,0x43
  41ff93:	pushf  
  41ff94:	push   edi
  41ff95:	shr    DWORD PTR [edi+0x516fbba9],cl
  41ff9b:	pop    DWORD PTR [esi+0x4d]
  41ff9e:	or     eax,0x217789dc
  41ffa3:	push   edi
  41ffa4:	outs   dx,BYTE PTR ds:[esi]
  41ffa5:	les    esp,FWORD PTR [esi]
  41ffa7:	or     al,0x95
  41ffa9:	jg     0x41ffee
  41ffab:	jmp    0xa7d1:0xc07f8c04
  41ffb2:	xchg   esi,eax
  41ffb3:	mov    ch,BYTE PTR [edi-0xa]
  41ffb6:	sub    esp,DWORD PTR [eax]
  41ffb8:	rcr    dl,1
  41ffba:	fwait
  41ffbb:	mov    eax,ds:0xcfc3b26c
  41ffc0:	hlt    
  41ffc1:	sbb    BYTE PTR [edx],cl
  41ffc3:	or     DWORD PTR [ebx],ebx
  41ffc5:	and    al,0xb8
  41ffc7:	jg     0x41ff9f
  41ffc9:	mov    dl,0x26
  41ffcb:	push   ebp
  41ffcc:	add    BYTE PTR ds:0x17d6ced8,dh
  41ffd2:	mov    ecx,0xebf282db
  41ffd7:	mov    esi,ebp
  41ffd9:	int    0x9d
  41ffdb:	stos   DWORD PTR es:[edi],eax
  41ffdc:	arpl   WORD PTR [eax-0x7e],dx
  41ffdf:	xor    bl,BYTE PTR [edx-0x4]
  41ffe2:	jb     0x41ff69
  41ffe4:	mov    esp,0x267c627c
  41ffe9:	add    eax,0x3e2ff4c6
  41ffee:	mov    ah,0xd4
  41fff0:	pop    eax
  41fff1:	lea    esi,[edx-0x2d]
  41fff4:	ficomp WORD PTR [edi-0x26]
  41fff7:	(bad)  
  41fff8:	pop    esp
  41fff9:	cdq    
  41fffa:	xor    DWORD PTR [ecx],esp
  41fffc:	cmp    ah,ch
  41fffe:	cmp    al,BYTE PTR [edx-0x6f]
  420001:	cmc    
  420002:	dec    esp
  420003:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420004:	sub    BYTE PTR [esi+0x52536856],cl
  42000a:	sub    BYTE PTR [ebp+edx*4+0x3b],0xe
  42000f:	clc    
  420010:	mov    esp,0x83232431
  420015:	in     eax,0x7a
  420017:	mov    dl,0x35
  420019:	or     BYTE PTR [edx+0x4f],cl
  42001c:	outs   dx,BYTE PTR ds:[esi]
  42001d:	stos   BYTE PTR es:[edi],al
  42001e:	or     DWORD PTR [eax],esp
  420020:	sbb    eax,0x6459e4f9
  420025:	(bad)  
  420027:	sbb    eax,0x8cafc25a
  42002c:	int3   
  42002d:	lods   al,BYTE PTR ds:[esi]
  42002e:	mov    ebx,DWORD PTR [ecx]
  420030:	inc    edi
  420031:	call   0xf2c0:0x1595247a
  420038:	sbb    DWORD PTR [ecx],esp
  42003a:	or     eax,0x16a0163f
  42003f:	test   DWORD PTR [ebp+0x3],esp
  420042:	in     eax,dx
  420043:	ret    
  420044:	jle    0x420082
  420046:	outs   dx,DWORD PTR ds:[esi]
  420047:	cmp    ecx,DWORD PTR [edx-0x5c010172]
  42004d:	mov    ch,0x5b
  42004f:	cwde   
  420050:	dec    esi
  420051:	mov    ds:0x697872c1,eax
  420056:	repnz sbb ecx,DWORD PTR [edx]
  420059:	jmp    0x6de974b0
  42005e:	pop    ds
  42005f:	in     al,0xa0
  420061:	mov    al,BYTE PTR [edx]
  420063:	data16 ins BYTE PTR es:[edi],dx
  420065:	std    
  420066:	pushf  
  420067:	fistp  DWORD PTR [eax-0x140dc3d7]
  42006d:	pop    edi
  42006e:	cld    
  42006f:	jmp    0x42002f
  420071:	cmp    DWORD PTR [ecx-0x892f0bd],esi
  420077:	ret    0x26ff
  42007a:	jmp    0x172b:0x8ee09415
  420081:	mul    DWORD PTR [ebp+0x6a2d4607]
  420087:	ror    esi,cl
  420089:	cmp    ebp,DWORD PTR [ebp-0x15]
  42008c:	lds    esp,FWORD PTR [esi]
  42008e:	jb     0x42009c
  420090:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420091:	sahf   
  420092:	dec    esp
  420093:	repz call 0x8e37c141
  420099:	mov    edi,0xb2d7184e
  42009e:	popf   
  42009f:	or     al,0xc1
  4200a1:	xor    bh,BYTE PTR [ebx-0x6e448e50]
  4200a7:	jbe    0x420029
  4200a9:	jo     0x420103
  4200ab:	mov    cl,0xa1
  4200ad:	in     eax,dx
  4200ae:	adc    DWORD PTR [eax-0x7623ad3],0x7b
  4200b5:	fcmovb st,st(0)
  4200b7:	rol    ebx,cl
  4200b9:	retf   
  4200ba:	jp     0x420090
  4200bc:	jmp    0x42012c
  4200be:	iret   
  4200bf:	mov    ebp,DWORD PTR [esi+eax*8]
  4200c2:	jnp    0x4200cd
  4200c4:	(bad)  
  4200c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4200c6:	call   0xcf68:0xd6d214dc
  4200cd:	mov    esi,0xcec091fe
  4200d2:	xor    al,0x86
  4200d4:	adc    eax,0xafb3f516
  4200d9:	pop    edi
  4200da:	imul   edx,DWORD PTR [eax],0x2bf7e017
  4200e0:	ret    
  4200e1:	inc    ecx
  4200e2:	arpl   WORD PTR [eax+0x7a],bp
  4200e5:	lds    esi,FWORD PTR [esi-0x10]
  4200e8:	in     al,0x40
  4200ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4200eb:	loopne 0x42014f
  4200ed:	scas   al,BYTE PTR es:[edi]
  4200ee:	stos   BYTE PTR es:[edi],al
  4200ef:	sbb    DWORD PTR [eax+0x54],esp
  4200f2:	adc    edx,DWORD PTR [eax]
  4200f4:	inc    ecx
  4200f5:	mov    edi,0xa99ce8f
  4200fa:	lds    eax,FWORD PTR [edi]
  4200fc:	dec    esp
  4200fd:	shl    bl,0x3c
  420100:	sbb    eax,0xe2e1cdca
  420105:	into   
  420106:	(bad)  
  420107:	and    ebp,DWORD PTR [edi-0x32]
  42010a:	out    dx,al
  42010b:	mov    esi,0xaf2a1037
  420110:	jge    0x42015a
  420112:	nop
  420113:	xchg   ecx,eax
  420114:	popf   
  420115:	jne    0x420160
  420117:	mov    dh,BYTE PTR [ecx-0x24966ade]
  42011d:	dec    edx
  42011e:	mov    ah,0x69
  420120:	push   eax
  420121:	dec    ecx
  420122:	mov    BYTE PTR [eax+edx*4+0x7f],bl
  420126:	sub    BYTE PTR [ecx+0x477e888a],0xe9
  42012d:	and    cl,BYTE PTR [edx-0x71]
  420130:	lahf   
  420131:	and    eax,0xb7e50a70
  420136:	(bad)  
  420137:	sar    DWORD PTR [eax+0x2212bdf8],0xf5
  42013e:	in     al,0x2f
  420140:	or     bl,dh
  420142:	aas    
  420143:	xchg   esi,eax
  420144:	sub    DWORD PTR [ebx+0x61],edi
  420147:	mul    DWORD PTR gs:[ecx]
  42014a:	retf   
  42014b:	inc    edx
  42014c:	sbb    dh,BYTE PTR [esi-0x5d]
  42014f:	sub    dh,BYTE PTR [edx+0x69]
  420152:	shl    BYTE PTR [esi],cl
  420154:	cmc    
  420155:	jp     0x420181
  420157:	mov    ebx,0xa1c2a414
  42015c:	loopne 0x4201b2
  42015e:	jle    0x42019e
  420160:	dec    edi
  420161:	fcomp  st(7)
  420163:	adc    cl,al
  420165:	lea    ebp,[esi-0x11]
  420168:	std    
  420169:	add    ebp,esi
  42016b:	(bad)  
  42016c:	call   0xd1a06977
  420171:	adc    al,0xe2
  420173:	les    ebx,FWORD PTR [ecx]
  420175:	or     dh,BYTE PTR [edx-0x3f42b146]
  42017b:	sub    al,0x5d
  42017d:	inc    eax
  42017e:	mov    edi,0xf11e6ea9
  420183:	fcomp  DWORD PTR [eax]
  420185:	cmp    eax,0x1d315a09
  42018a:	in     eax,dx
  42018b:	jbe    0x42013e
  42018d:	add    al,0xed
  42018f:	push   0x11f233c1
  420194:	pusha  
  420195:	dec    esp
  420196:	jb     0x42019b
  420198:	mov    ebp,0x93866149
  42019d:	mov    ah,0xe2
  42019f:	(bad)  [esi]
  4201a1:	jmp    0x420215
  4201a3:	jno    0x420183
  4201a5:	(bad)  
  4201a6:	fiadd  WORD PTR [eax]
  4201a8:	mov    WORD PTR [ebp+0x292a5889],cs
  4201ae:	pop    es
  4201af:	inc    esi
  4201b0:	fidiv  DWORD PTR [edi+0x1b]
  4201b3:	sar    DWORD PTR [ebx-0x73],1
  4201b6:	ror    DWORD PTR [esi+0x383113f9],0xee
  4201bd:	ja     0x420171
  4201bf:	lods   al,BYTE PTR ds:[esi]
  4201c0:	aad    0x3
  4201c2:	push   ecx
  4201c3:	cmp    eax,0x1af0612
  4201c8:	stos   BYTE PTR es:[edi],al
  4201c9:	push   0x8fbbdab3
  4201ce:	in     al,dx
  4201cf:	or     eax,0xa02dd88a
  4201d4:	add    ebx,edi
  4201d6:	lea    ebp,[ecx+ebp*2-0x7]
  4201da:	sbb    BYTE PTR [esp+esi*2-0x41],al
  4201de:	hlt    
  4201df:	test   al,0xbf
  4201e1:	jp     0x420182
  4201e3:	mov    dl,0x9d
  4201e5:	inc    esi
  4201e6:	sub    al,0x8e
  4201e8:	mov    edx,0xe0652543
  4201ed:	mov    esi,DWORD PTR [ebx+0x67]
  4201f0:	jge    0x42020c
  4201f2:	add    eax,0xdc2b2d13
  4201f7:	lahf   
  4201f8:	add    BYTE PTR [edi-0x15],ch
  4201fb:	sub    DWORD PTR [edx],eax
  4201fd:	cli    
  4201fe:	hlt    
  4201ff:	mov    ebp,0xe98f0cef
  420204:	fcom   QWORD PTR [edi]
  420206:	fwait
  420207:	test   DWORD PTR [ebx+0x35],edx
  42020a:	inc    ecx
  42020b:	and    eax,esi
  42020d:	xchg   edx,eax
  42020e:	in     eax,0xdc
  420210:	mov    DWORD PTR [edi],0x4bc95d69
  420216:	pop    esi
  420218:	dec    edx
  420219:	mov    dl,0x20
  42021b:	push   ebx
  42021c:	and    eax,0x12f702ce
  420221:	inc    ecx
  420222:	add    DWORD PTR [ebx],esi
  420224:	mov    edx,0xeb8e8241
  420229:	leave  
  42022a:	and    esp,ebp
  42022c:	imul   esi,DWORD PTR [ecx+0x25],0x43c894e2
  420233:	jo     0x4201d7
  420235:	push   edx
  420236:	les    esp,FWORD PTR [ecx]
  420238:	ficomp DWORD PTR [edi-0x3a8d7bc8]
  42023e:	push   esi
  42023f:	sbb    al,0xa7
  420241:	fs cmp al,0xcd
  420244:	inc    ebx
  420245:	xchg   edi,eax
  420246:	sti    
  420247:	mov    eax,ds:0x57894db9
  42024c:	test   BYTE PTR [edi-0xd],bl
  42024f:	pop    edx
  420250:	add    dh,al
  420252:	add    esi,DWORD PTR [edi+0x31]
  420255:	xchg   esi,eax
  420256:	test   eax,edx
  420258:	add    BYTE PTR [eax],0xed
  42025b:	adc    al,0x84
  42025d:	pop    esi
  42025e:	xchg   DWORD PTR [esi+0x16fd1b76],eax
  420264:	pop    ebx
  420265:	idiv   BYTE PTR [eax-0x75]
  420268:	ins    BYTE PTR es:[edi],dx
  420269:	das    
  42026a:	inc    eax
  42026b:	in     al,0x9c
  42026d:	in     eax,dx
  42026e:	add    eax,0x3a97ad0d
  420273:	sbb    al,0x39
  420275:	in     al,0x3a
  420277:	test   al,0xe5
  420279:	sbb    esi,DWORD PTR [esi]
  42027b:	mov    edx,0x6629c6a9
  420280:	push   ebx
  420281:	cld    
  420282:	loopne 0x420258
  420284:	pop    esi
  420285:	cmp    esi,DWORD PTR [esi+esi*8-0x40]
  420289:	mov    cl,0xbb
  42028b:	jg     0x42028d
  42028d:	les    ebx,FWORD PTR [esi-0x25]
  420290:	push   ecx
  420291:	jge    0x42028e
  420293:	inc    ebp
  420294:	mov    ch,0x3a
  420296:	adc    esp,DWORD PTR [ecx-0x3a]
  420299:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42029a:	inc    esi
  42029b:	div    BYTE PTR [ecx-0x3d]
  42029e:	sbb    ebp,DWORD PTR [ebx+ebp*2-0x3a]
  4202a2:	pusha  
  4202a3:	std    
  4202a4:	js     0x420325
  4202a6:	dec    ebx
  4202a7:	ret    0xfae8
  4202aa:	or     edx,DWORD PTR [edx-0x78]
  4202ad:	ret    0x5054
  4202b0:	mov    cs,WORD PTR [edx-0xa1aa9d6]
  4202b6:	ja     0x42023c
  4202b8:	lahf   
  4202b9:	cwde   
  4202ba:	pushf  
  4202bb:	in     eax,0x5b
  4202bd:	sub    eax,0xf9107d37
  4202c2:	jge    0x4202f4
  4202c4:	inc    BYTE PTR [edi-0x61e3ec92]
  4202ca:	cmp    edi,DWORD PTR [ebx+0x59c16c2d]
  4202d0:	pushf  
  4202d1:	sbb    edx,edx
  4202d3:	(bad)  
  4202d4:	in     eax,0x86
  4202d6:	pushf  
  4202d7:	scas   al,BYTE PTR es:[edi]
  4202d8:	or     al,0x5a
  4202da:	jmp    0x13a6:0x5859cd8e
  4202e1:	inc    ecx
  4202e2:	pop    ebx
  4202e3:	mov    bl,0x67
  4202e5:	xchg   DWORD PTR [ecx+0x50cd782],ecx
  4202eb:	nop
  4202ec:	jmp    0x2631:0x54c720c
  4202f3:	dec    ecx
  4202f4:	(bad)  
  4202f5:	outs   dx,DWORD PTR ds:[esi]
  4202f6:	ja     0x4202d1
  4202f8:	popf   
  4202f9:	or     DWORD PTR [edi-0x297a7eb0],ebp
  4202ff:	xor    dl,BYTE PTR [ecx+esi*4+0x56]
  420303:	fldcw  WORD PTR [esp+eiz*2+0x5c]
  420307:	mov    bh,0x0
  420309:	iret   
  42030a:	mov    esp,0x56c66a4c
  42030f:	jle    0x42035a
  420311:	enter  0x6fdb,0x69
  420315:	int    0x85
  420317:	push   edx
  420318:	or     al,0x9c
  42031a:	ja     0x420311
  42031c:	sbb    eax,0xa03c9c88
  420321:	inc    ebp
  420322:	adc    bh,BYTE PTR [eax+0x5]
  420325:	mov    eax,0xfc92be5f
  42032a:	repz and BYTE PTR [eax-0x4a],bl
  42032e:	imul   ecx,DWORD PTR [ecx+0x26e33b66],0xffffff95
  420335:	fcom   QWORD PTR [ebx+ecx*8]
  420338:	push   esi
  420339:	stc    
  42033a:	add    ch,ah
  42033c:	jge    0x4202ca
  42033e:	ret    0x684f
  420341:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420342:	inc    eax
  420343:	lea    ebp,[eax+0x7c04088a]
  420349:	stos   BYTE PTR es:[edi],al
  42034a:	ret    
  42034b:	lods   eax,DWORD PTR ds:[esi]
  42034c:	xchg   ecx,eax
  42034d:	cld    
  42034e:	loopne 0x4202e8
  420350:	outs   dx,BYTE PTR ds:[esi]
  420351:	gs dec esi
  420353:	in     al,dx
  420354:	mov    ebp,0xdc60022e
  420359:	stos   DWORD PTR es:[edi],eax
  42035a:	push   es
  42035b:	in     al,dx
  42035c:	cmp    cl,BYTE PTR [ebx-0x41]
  42035f:	cmp    ecx,DWORD PTR [esi+0x73035a12]
  420365:	and    BYTE PTR [edi+eax*8-0x57],0x26
  42036a:	imul   ebp,DWORD PTR [esp+ebp*4],0x422c8686
  420371:	scas   eax,DWORD PTR es:[edi]
  420372:	icebp  
  420373:	xor    eax,0x5c29953a
  420378:	adc    al,ch
  42037a:	aad    0x3
  42037c:	xor    al,0x67
  42037e:	mov    eax,cs:0x59f015d0
  420384:	int3   
  420385:	pop    ss
  420386:	sub    DWORD PTR [eax-0x6561df47],ebx
  42038c:	scas   eax,DWORD PTR es:[edi]
  42038d:	les    ebx,FWORD PTR [edx]
  42038f:	imul   ebp,DWORD PTR [edi+0x2],0x3c
  420393:	cmp    cl,BYTE PTR [ebx+edi*8-0x21358533]
  42039a:	mov    ah,0x98
  42039c:	inc    esi
  42039d:	call   0xed41ff9a
  4203a2:	pop    ebx
  4203a3:	jbe    0x42039d
  4203a5:	loopne 0x420334
  4203a7:	rol    ecx,1
  4203a9:	inc    esi
  4203aa:	jp     0x4203f0
  4203ac:	scas   eax,DWORD PTR es:[edi]
  4203ad:	in     eax,dx
  4203ae:	test   al,0xf5
  4203b0:	jns    0x42037f
  4203b2:	call   0x96e09f8b
  4203b7:	sub    BYTE PTR [ebp-0x75],al
  4203ba:	cld    
  4203bb:	iret   
  4203bc:	dec    ebx
  4203bd:	iret   
  4203be:	out    0x54,eax
  4203c0:	shr    DWORD PTR [ecx+0x5a],0xbf
  4203c4:	sub    esi,DWORD PTR [ecx]
  4203c6:	addr16 clc 
  4203c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4203c9:	js     0x420415
  4203cb:	addr16 repnz addr16 pop esi
  4203cf:	pop    edi
  4203d0:	in     al,dx
  4203d1:	mov    al,ds:0x8df89a9b
  4203d6:	sub    eax,DWORD PTR [eax]
  4203d8:	pop    ecx
  4203d9:	sahf   
  4203da:	dec    ecx
  4203db:	imul   DWORD PTR [ebp+0x6e]
  4203de:	jp     0x42036c
  4203e0:	or     edi,esi
  4203e2:	add    al,0xde
  4203e4:	push   0x46de57f5
  4203e9:	lock and ah,BYTE PTR [ebp+0x5e4dd06f]
  4203f0:	or     DWORD PTR [ebp+0x728244d0],eax
  4203f6:	pop    esp
  4203f7:	aam    0xe0
  4203f9:	inc    edi
  4203fa:	sub    BYTE PTR [eax],dh
  4203fc:	cmp    dh,bh
  4203fe:	repnz (bad) 
  420400:	fsubr  QWORD PTR ss:[edi]
  420403:	add    DWORD PTR [edx-0x2170442],eax
  420409:	add    ch,BYTE PTR [edx+ebx*2+0xc]
  42040d:	stos   BYTE PTR es:[edi],al
  42040e:	daa    
  42040f:	sub    edx,DWORD PTR [edi]
  420411:	push   esp
  420412:	stc    
  420413:	gs pop ds
  420415:	jmp    0xa2878d55
  42041a:	sub    eax,DWORD PTR [ebp-0x13]
  42041d:	into   
  42041e:	inc    ebp
  42041f:	jns    0x420481
  420421:	xchg   esi,eax
  420422:	adc    ch,0x2
  420425:	cmp    al,0xd0
  420427:	test   eax,0x980c4a43
  42042c:	outs   dx,DWORD PTR ds:[esi]
  42042d:	jl     0x420485
  42042f:	cmp    eax,DWORD PTR gs:[ebx]
  420432:	mov    ds:0x3a10d6be,al
  420437:	cmp    ah,BYTE PTR [edx]
  420439:	out    dx,eax
  42043a:	int3   
  42043b:	sbb    ah,bh
  42043d:	sbb    al,BYTE PTR [esi+0x32]
  420440:	lods   eax,DWORD PTR ds:[esi]
  420441:	fisttp WORD PTR [esp+eax*8-0x3b]
  420445:	retf   0x3c2a
  420448:	repnz mov esi,0x1549471d
  42044e:	dec    ecx
  42044f:	sbb    esi,ecx
  420451:	stc    
  420452:	pop    esp
  420453:	fwait
  420454:	rol    DWORD PTR [esi],0x88
  420457:	cli    
  420458:	xchg   edi,eax
  420459:	shr    esi,cl
  42045b:	and    eax,0x3fe52b5f
  420460:	(bad)  
  420461:	rol    BYTE PTR [eax+0x74],1
  420464:	cmp    DWORD PTR [esi+0x5],eax
  420467:	nop
  420468:	cmp    BYTE PTR [edx-0x2c23a02c],cl
  42046e:	gs pop ecx
  420470:	call   FWORD PTR [esp+eiz*4+0x5140f0d3]
  420477:	lea    eax,[edx]
  420479:	jmp    0xc25ee251
  42047e:	dec    ebx
  42047f:	add    ebx,DWORD PTR [edi+ebp*4+0x488cd28]
  420486:	je     0x42045b
  420488:	clc    
  420489:	add    al,0x36
  42048b:	push   ebx
  42048c:	xchg   edx,eax
  42048d:	shl    ebx,0x5b
  420490:	add    ebp,0x2e
  420493:	dec    esp
  420494:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420495:	stos   BYTE PTR es:[edi],al
  420496:	mov    ds:0x59cb695,eax
  42049b:	push   es
  42049c:	xchg   esi,eax
  42049d:	cdq    
  42049e:	mov    dh,0x4b
  4204a0:	mov    edi,?
  4204a2:	sbb    al,0xc8
  4204a4:	sbb    BYTE PTR fs:[ebp-0x408ffb65],bh
  4204ab:	pop    edi
  4204ac:	jo     0x420496
  4204ae:	cdq    
  4204af:	adc    DWORD PTR [ebx+ebp*1],esp
  4204b2:	adc    ch,ah
  4204b4:	and    eax,0xdbcc2c9b
  4204b9:	cdq    
  4204ba:	imul   edx,esi,0xffffffca
  4204bd:	xor    BYTE PTR [ebp+ebx*1+0xfe2fbb5],0xc9
  4204c5:	in     eax,0xc5
  4204c7:	fwait
  4204c8:	aaa    
  4204c9:	in     eax,0x88
  4204cb:	push   ss
  4204cc:	mov    edi,0x932da4e3
  4204d1:	adc    DWORD PTR [edi],0x6e7cdbda
  4204d7:	popa   
  4204d8:	sub    eax,0x2c9d102c
  4204dd:	jle    0x4204cd
  4204df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4204e0:	lea    esp,ds:0x9ff12933
  4204e6:	or     ch,BYTE PTR [ebx]
  4204e8:	and    BYTE PTR [edx-0x7f1d5eb6],bl
  4204ee:	das    
  4204ef:	out    0xc1,eax
  4204f1:	mov    edi,0x27900bfb
  4204f6:	xchg   esp,eax
  4204f7:	pop    ecx
  4204f8:	mov    al,0x90
  4204fa:	xor    al,BYTE PTR [edx]
  4204fc:	inc    esi
  4204fd:	xchg   DWORD PTR [ebp+eiz*8-0xe],ebp
  420501:	mov    al,ds:0xc1ef6d54
  420506:	popa   
  420507:	jb     0x420505
  420509:	sbb    edx,esp
  42050b:	adc    eax,0x4fe29f83
  420510:	and    BYTE PTR es:[edi-0x2b],dl
  420514:	clc    
  420515:	sub    ebp,DWORD PTR [ecx+ebp*1-0x747f649a]
  42051c:	pushf  
  42051d:	sub    eax,0x6475a9e
  420522:	or     bh,dl
  420524:	data16 aas 
  420526:	pop    esp
  420527:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420528:	fs or  al,ah
  42052b:	inc    edx
  42052c:	shl    BYTE PTR [esp+edx*2+0x3746f2c0],1
  420533:	adc    edx,DWORD PTR [ebx]
  420535:	dec    ecx
  420536:	mov    al,ds:0xdcf5a95f
  42053b:	arpl   WORD PTR [edx+0x49f08708],si
  420541:	icebp  
  420542:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420543:	add    ebx,ecx
  420545:	xchg   esi,eax
  420546:	push   ss
  420547:	dec    ecx
  420548:	rcr    DWORD PTR [ebx+0x71],0x99
  42054c:	pop    ss
  42054d:	pop    ebx
  42054e:	in     eax,0x24
  420550:	pop    ss
  420551:	pop    es
  420552:	inc    edx
  420553:	pop    ss
  420554:	sub    al,BYTE PTR [ecx-0x516cd3bf]
  42055a:	stc    
  42055b:	lock sbb dh,BYTE PTR [edi]
  42055e:	add    al,BYTE PTR [edx+0x51]
  420561:	ins    BYTE PTR es:[edi],dx
  420562:	push   esp
  420563:	jp     0x420517
  420565:	pop    eax
  420566:	les    ebp,FWORD PTR [edx]
  420568:	or     BYTE PTR [edi-0x3d],cl
  42056b:	ret    0x65bc
  42056e:	popf   
  42056f:	xchg   ebp,eax
  420570:	test   al,0x33
  420572:	(bad)  
  420573:	fdiv   DWORD PTR [edx-0x408a0543]
  420579:	sahf   
  42057a:	push   ebp
  42057b:	inc    edx
  42057c:	mov    esp,0xefdb39e8
  420581:	pop    ss
  420582:	mov    ch,0xd4
  420584:	and    DWORD PTR [ebx+ecx*8+0x7701f749],esp
  42058b:	xor    eax,0xf5cebb26
  420590:	cmp    DWORD PTR [ecx+0x2b7cb31],eax
  420596:	fsubp  st(0),st
  420598:	cmc    
  420599:	push   ebp
  42059a:	pop    eax
  42059b:	mov    bh,0xa7
  42059d:	mov    ecx,0x2aad7f0e
  4205a2:	sbb    eax,0xf7da8e92
  4205a7:	push   ds
  4205a8:	push   ebx
  4205a9:	jb     0x4205ab
  4205ab:	daa    
  4205ac:	(bad)  
  4205ae:	mov    edx,0x7f80d5c6
  4205b3:	stos   DWORD PTR es:[edi],eax
  4205b4:	jp     0x42054f
  4205b6:	in     eax,dx
  4205b7:	inc    eax
  4205b8:	cmc    
  4205b9:	into   
  4205ba:	adc    BYTE PTR [ebx-0x75012d5f],al
  4205c0:	jmp    0x4205d4
  4205c2:	in     eax,0xbf
  4205c4:	push   ebx
  4205c5:	add    al,0x17
  4205c7:	loop   0x420561
  4205c9:	dec    edx
  4205ca:	jge    0x4205f8
  4205cc:	add    ah,bh
  4205ce:	std    
  4205cf:	ins    BYTE PTR es:[edi],dx
  4205d0:	jg     0x42062c
  4205d2:	aam    0x5b
  4205d4:	mov    BYTE PTR [edx+0x8cccd28],ch
  4205da:	sbb    esi,DWORD PTR [esi+eiz*1]
  4205dd:	push   ebp
  4205de:	dec    ecx
  4205df:	sbb    al,0x28
  4205e1:	mov    cl,0xa0
  4205e3:	sub    esp,ebx
  4205e5:	cmc    
  4205e6:	fst    DWORD PTR [ebp-0x55]
  4205e9:	mov    es,WORD PTR [ecx+eiz*2-0x9]
  4205ed:	xor    BYTE PTR [eax-0x3e828461],ah
  4205f3:	mov    cl,0xd
  4205f5:	mov    ah,0x45
  4205f7:	dec    ebp
  4205f8:	inc    esp
  4205f9:	lock cmp bh,BYTE PTR [ebp-0x666b057c]
  420600:	aam    0xc6
  420602:	inc    ecx
  420603:	and    eax,0x7783ecca
  420608:	dec    esp
  420609:	mov    ds:0x652b80e9,eax
  42060e:	test   eax,0x170c52a6
  420613:	mov    eax,0x5d31a253
  420618:	jl     0x42063a
  42061a:	inc    ecx
  42061b:	cdq    
  42061c:	pushf  
  42061d:	leave  
  42061e:	loopne 0x42061f
  420620:	daa    
  420621:	xchg   ecx,eax
  420622:	mov    ecx,0xc93d820e
  420627:	add    BYTE PTR [ebx+ebx*1+0x12076891],ah
  42062e:	outs   dx,DWORD PTR ds:[esi]
  42062f:	xor    al,0x5
  420631:	(bad)  
  420632:	out    dx,eax
  420633:	adc    BYTE PTR [ebx-0x3e],dl
  420636:	bound  ebp,QWORD PTR [eiz*4+0x5f90835e]
  42063d:	mov    bh,0x2a
  42063f:	cmp    al,0x8
  420641:	jno    0x4205fd
  420643:	int    0x89
  420645:	cmp    edx,esp
  420647:	add    edx,DWORD PTR [edx-0x45]
  42064a:	neg    BYTE PTR [ecx]
  42064c:	test   eax,0x1c0a3ac7
  420651:	jnp    0x420667
  420653:	jp     0x420616
  420655:	cmp    ah,BYTE PTR [edx+eax*2-0x7c795232]
  42065c:	rcr    DWORD PTR [ebx-0x59],1
  42065f:	inc    eax
  420660:	sar    ebp,1
  420662:	xchg   BYTE PTR [edx-0x28fd4d73],ch
  420668:	int3   
  420669:	xlat   BYTE PTR ds:[ebx]
  42066a:	mov    ch,0x9d
  42066c:	enter  0x5e42,0x94
  420670:	xlat   BYTE PTR ds:[ebx]
  420671:	jle    0x4206a9
  420673:	xchg   ebp,eax
  420674:	push   cs
  420675:	mov    eax,0x5964f53d
  42067a:	les    edx,FWORD PTR [edx]
  42067c:	test   ah,0xc0
  42067f:	pop    ebp
  420680:	icebp  
  420681:	xchg   edi,esi
  420683:	xchg   esi,eax
  420684:	pop    esi
  420685:	in     eax,dx
  420686:	cmp    eax,0xacf08684
  42068b:	std    
  42068c:	je     0x420676
  42068e:	lahf   
  42068f:	adc    eax,0x5c7ab10e
  420694:	dec    esp
  420695:	adc    ch,BYTE PTR [esi+eax*2]
  420698:	push   esp
  420699:	lds    eax,FWORD PTR [ecx+0x9]
  42069c:	sahf   
  42069d:	mov    ds:0x8df1f001,al
  4206a2:	ss data16 fstp DWORD PTR fs:[ecx-0x4855dd33]
  4206ab:	retf   
  4206ac:	div    DWORD PTR [bx+di]
  4206af:	push   edx
  4206b0:	or     al,0x6f
  4206b2:	xor    BYTE PTR [edi+0x33ab7868],0xe6
  4206b9:	add    ch,ch
  4206bb:	out    dx,al
  4206bc:	xor    BYTE PTR [edi+edi*8-0x51],ah
  4206c0:	(bad)  
  4206c1:	les    edx,FWORD PTR [esi-0x3c66be82]
  4206c7:	adc    ebx,ebp
  4206c9:	shl    BYTE PTR [ecx-0x6f],0x2c
  4206cd:	aas    
  4206ce:	mov    ds:0x2bf78636,eax
  4206d3:	shl    BYTE PTR [esp+edx*8+0x2c],0x85
  4206d8:	pop    ds
  4206d9:	or     eax,0xfeb8fc7c
  4206de:	stc    
  4206df:	(bad)  
  4206e1:	aam    0x5f
  4206e3:	mov    bh,0x8a
  4206e5:	loop   0x420729
  4206e7:	inc    ebp
  4206e8:	test   BYTE PTR [ecx+ebx*8+0x705752fd],al
  4206ef:	outs   dx,DWORD PTR ds:[esi]
  4206f0:	jmp    0xd3a7412f
  4206f5:	ds jns 0x4206cb
  4206f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4206f9:	sbb    DWORD PTR [ecx],ebx
  4206fb:	jnp    0x4206dd
  4206fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4206fe:	daa    
  4206ff:	or     ah,BYTE PTR [ebx+0x40]
  420702:	das    
  420703:	(bad)  
  420704:	mov    esi,0x6677b513
  420709:	test   al,0xfa
  42070b:	out    0x55,eax
  42070d:	shr    BYTE PTR [ebx],cl
  42070f:	ja     0x420766
  420711:	ret    
  420712:	int3   
  420713:	mov    al,0x23
  420715:	arpl   WORD PTR [edx],dx
  420717:	mov    al,0xde
  420719:	dec    ebp
  42071a:	adc    dh,BYTE PTR [esi-0x7d]
  42071d:	add    al,0xfe
  42071f:	repz xor BYTE PTR es:[edx+0x55],bh
  420724:	sbb    al,0x38
  420726:	pop    ds
  420727:	sbb    al,0x85
  420729:	or     ebx,ebx
  42072b:	clc    
  42072c:	mov    ds:0x67af2dd7,al
  420731:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420732:	in     al,0xe6
  420734:	push   es
  420735:	mov    ds:0x2dedd761,al
  42073a:	adc    eax,0x164a3f1b
  42073f:	jnp    0x420737
  420741:	inc    ebp
  420742:	inc    ecx
  420743:	mov    dh,0x74
  420745:	pusha  
  420746:	(bad)  
  420748:	push   ss
  420749:	mov    ebx,0x1dbf61cf
  42074e:	fisttp QWORD PTR [esi-0x67e4f1c5]
  420754:	jg     0x4207c4
  420756:	je     0x4207a9
  420758:	xchg   esp,eax
  420759:	push   ds
  42075a:	push   ss
  42075b:	and    BYTE PTR [ebx+0x73],0x62
  42075f:	or     ah,BYTE PTR [ecx]
  420761:	push   cs
  420762:	mov    ah,0xf2
  420764:	adc    dl,BYTE PTR [ecx-0x44]
  420767:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420768:	dec    ebx
  420769:	sub    dl,BYTE PTR [edi+edi*8]
  42076c:	into   
  42076d:	sbb    al,0x1d
  42076f:	mov    eax,0xc2c614af
  420774:	dec    edx
  420775:	test   BYTE PTR [eax-0x60ac6083],al
  42077b:	xchg   ecx,eax
  42077c:	add    al,0x8e
  42077e:	test   al,0x3e
  420780:	push   cs
  420781:	sbb    al,0xe9
  420783:	es push edi
  420785:	sbb    cl,BYTE PTR [esp+esi*4]
  420788:	and    al,BYTE PTR [esi]
  42078a:	mov    esi,0xce6bd233
  42078f:	outs   dx,BYTE PTR gs:[esi]
  420791:	sbb    al,0x84
  420793:	mov    ecx,0x2356cae6
  420798:	repnz cmp edi,DWORD PTR [ebx]
  42079b:	mov    edx,0x19f88bb6
  4207a0:	nop
  4207a1:	addr16 int3 
  4207a3:	inc    ecx
  4207a4:	inc    ebx
  4207a5:	addr16 data16 jb 0x4207ce
  4207a9:	jno    0x4207d6
  4207ab:	push   ecx
  4207ac:	inc    esi
  4207ad:	in     al,0xb8
  4207af:	idiv   DWORD PTR [edx]
  4207b1:	pop    ebx
  4207b2:	and    eax,0xed101c22
  4207b7:	push   eax
  4207b8:	push   ecx
  4207b9:	cli    
  4207ba:	mov    ?,WORD PTR [edx-0x381e3c12]
  4207c0:	sub    edi,DWORD PTR ds:0x9d41428e
  4207c6:	out    0x71,eax
  4207c8:	ret    
  4207c9:	sbb    BYTE PTR [ebx-0x237d3c2f],0x4b
  4207d0:	cld    
  4207d1:	out    dx,al
  4207d2:	mov    al,ah
  4207d4:	fbstp  TBYTE PTR cs:[edx+0x71]
  4207d8:	int    0xb0
  4207da:	jne    0x420760
  4207dc:	jmp    0x420849
  4207de:	add    BYTE PTR [edx],bh
  4207e0:	jle    0x42076b
  4207e2:	rcl    edi,cl
  4207e4:	jo     0x4207cf
  4207e6:	cmc    
  4207e7:	mov    esp,0x7b63418e
  4207ec:	mov    ebp,0xd0e398d1
  4207f1:	push   ecx
  4207f2:	dec    ecx
  4207f3:	push   edx
  4207f4:	(bad)  
  4207f5:	(bad)  
  4207f6:	cmp    al,0xde
  4207f8:	xor    al,0xba
  4207fa:	cmp    DWORD PTR [edi],eax
  4207fc:	cmp    BYTE PTR [ebx],ch
  4207fe:	lock fadd DWORD PTR gs:0xec2b2d8f
  420806:	push   ds
  420807:	lods   al,BYTE PTR ds:[esi]
  420808:	(bad)  
  420809:	mov    bl,0xe4
  42080b:	jg     0x4207a7
  42080d:	jne    0x420847
  42080f:	sti    
  420810:	jmp    0xac8a57f1
  420815:	pop    esi
  420816:	mov    ebp,0x93a90a32
  42081b:	inc    esp
  42081c:	xor    edi,DWORD PTR [edx]
  42081e:	retf   0xe15b
  420821:	xchg   esi,eax
  420822:	or     BYTE PTR [edx+ebx*4+0x6f45b875],bl
  420829:	stos   BYTE PTR es:[edi],al
  42082a:	aad    0x61
  42082c:	and    eax,0x8cebbbc8
  420831:	cwde   
  420832:	paddb  mm0,mm3
  420835:	jmp    0xaedc6669
  42083a:	xlat   BYTE PTR ds:[ebx]
  42083b:	cmp    eax,0xccf52a0
  420840:	dec    ebx
  420841:	push   edi
  420842:	fimul  DWORD PTR [esi+0x55ed43e3]
  420848:	push   edx
  420849:	jae    0x42085b
  42084b:	push   esi
  42084c:	and    ecx,DWORD PTR [ecx]
  42084e:	(bad)  
  42084f:	cmp    eax,0xdf635f2
  420854:	cmp    BYTE PTR [ebp+0x250a2e35],dl
  42085a:	hlt    
  42085b:	sbb    esi,edx
  42085d:	int    0xd9
  42085f:	call   0x9f22:0xf672c90b
  420866:	pop    eax
  420867:	retf   0xdd4
  42086a:	lock in eax,0xfa
  42086d:	pop    ds
  42086e:	and    ch,BYTE PTR [ebx-0x2a]
  420871:	cs inc esi
  420873:	and    al,0x93
  420875:	fdivr  DWORD PTR [ecx-0x12]
  420878:	sbb    al,0x5d
  42087a:	and    al,0x6f
  42087c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42087d:	pusha  
  42087e:	sbb    DWORD PTR [ebp+0x27],esp
  420881:	stc    
  420882:	outs   dx,BYTE PTR ds:[esi]
  420883:	cwde   
  420884:	test   eax,0x7dbad1ab
  420889:	jbe    0x420825
  42088b:	and    ebp,DWORD PTR [edx-0x5a29c03a]
  420891:	cld    
  420892:	loope  0x42081c
  420894:	sbb    DWORD PTR [ebx+0x16],edx
  420897:	inc    edi
  420898:	pop    es
  420899:	xor    BYTE PTR [ecx],al
  42089b:	fbstp  TBYTE PTR [edi-0x51d1d62c]
  4208a1:	out    0x64,eax
  4208a3:	repz add bh,ch
  4208a6:	daa    
  4208a7:	pop    ebp
  4208a8:	push   ebx
  4208a9:	mov    ds,WORD PTR [esi+eax*4]
  4208ac:	xchg   edx,eax
  4208ad:	mov    ah,0x55
  4208af:	shl    BYTE PTR [esi],cl
  4208b1:	(bad)  
  4208b2:	jmp    0x29fba204
  4208b7:	fisub  WORD PTR [ebx]
  4208b9:	jp     0x420865
  4208bb:	ja     0x4208ee
  4208bd:	and    al,0x56
  4208bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4208c0:	shl    DWORD PTR [edi],cl
  4208c2:	mov    esi,fs
  4208c4:	push   ss
  4208c5:	mov    ch,0xc5
  4208c7:	and    ah,ch
  4208c9:	or     al,0x8b
  4208cb:	pop    es
  4208cc:	scas   al,BYTE PTR es:[edi]
  4208cd:	bound  esi,QWORD PTR [edi-0x182e49d2]
  4208d3:	hlt    
  4208d4:	enter  0xa23b,0x1a
  4208d8:	and    al,BYTE PTR [ebx-0x1a]
  4208db:	fistp  QWORD PTR [edx-0x73]
  4208de:	lahf   
  4208df:	test   al,0x75
  4208e1:	pop    ss
  4208e2:	ins    DWORD PTR es:[edi],dx
  4208e3:	xor    al,0xb0
  4208e5:	int3   
  4208e6:	jle    0x4208e0
  4208e8:	jp     0x420881
  4208ea:	cmp    cl,bh
  4208ec:	push   edx
  4208ed:	ja     0x4208e9
  4208ef:	mov    ds:0x50f898d3,eax
  4208f4:	lea    ebx,[ecx-0x480c9fbb]
  4208fa:	shr    DWORD PTR [edx-0xc],cl
  4208fd:	sahf   
  4208fe:	nop
  4208ff:	cli    
  420900:	cmc    
  420901:	cdq    
  420902:	or     edx,eax
  420904:	mov    eax,ds:0xf854c318
  420909:	xor    eax,0x32a3566
  42090e:	xor    esp,DWORD PTR [edi]
  420910:	cmp    ebx,DWORD PTR [ecx+0xbf7dec5]
  420916:	inc    ebp
  420917:	data16 scas al,BYTE PTR es:[edi]
  420919:	pop    ds
  42091a:	push   0xfffffffb
  42091c:	outs   dx,BYTE PTR ds:[esi]
  42091d:	inc    eax
  42091e:	and    ebp,DWORD PTR cs:[ecx-0x3]
  420922:	mov    ch,0x65
  420924:	pop    ds
  420925:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420926:	inc    ecx
  420927:	aas    
  420928:	sbb    ch,cl
  42092a:	(bad)  
  42092b:	shl    ah,1
  42092d:	push   ss
  42092e:	push   es
  42092f:	cmc    
  420930:	pop    edi
  420931:	jnp    0x420954
  420933:	push   ebx
  420934:	sbb    al,0xe5
  420936:	lods   al,BYTE PTR ds:[esi]
  420937:	jmp    0xa84475e7
  42093c:	mov    al,0xaf
  42093e:	lahf   
  42093f:	pop    ss
  420940:	les    edx,FWORD PTR [esi+0xf0d26f4]
  420946:	pop    eax
  420947:	pop    esp
  420948:	pusha  
  420949:	inc    ebx
  42094a:	ins    BYTE PTR es:[edi],dx
  42094b:	sahf   
  42094c:	call   FWORD PTR [esi+0x291c4113]
  420952:	das    
  420953:	inc    esp
  420954:	sbb    ecx,DWORD PTR [eax+eiz*8+0x42fe375c]
  42095b:	fcom   QWORD PTR [esi]
  42095d:	call   0x582c:0x45af1809
  420964:	mov    edx,0x35639496
  420969:	shl    eax,cl
  42096b:	imul   DWORD PTR [eax+0x65]
  42096e:	les    ebx,FWORD PTR [ecx-0x28]
  420971:	std    
  420972:	imul   edi,DWORD PTR [ecx],0x6c
  420975:	fwait
  420976:	push   ebx
  420977:	jno    0x4209a9
  420979:	push   esp
  42097a:	imul   ebp,DWORD PTR [edi],0x23
  42097d:	push   edx
  42097e:	jo     0x420938
  420980:	cld    
  420981:	ins    DWORD PTR es:[edi],dx
  420982:	mov    edi,0xe1ecfdc8
  420987:	inc    edx
  420988:	fsubr  DWORD PTR [ebx+0x49]
  42098b:	xchg   esp,eax
  42098c:	fld    QWORD PTR [edx+0x4b]
  42098f:	push   ebx
  420990:	aaa    
  420991:	mov    cs,WORD PTR [ebp+0x128c2b64]
  420997:	sbb    esp,DWORD PTR [esi-0x7]
  42099a:	aaa    
  42099b:	mov    cl,0x7e
  42099d:	adc    eax,0x8655df34
  4209a2:	iret   
  4209a3:	xor    al,0x84
  4209a5:	and    dh,0x18
  4209a8:	out    0x23,al
  4209aa:	outs   dx,BYTE PTR ds:[esi]
  4209ab:	ins    BYTE PTR es:[edi],dx
  4209ac:	add    BYTE PTR [eax+0x3b6f2960],0x62
  4209b3:	xor    DWORD PTR [edx],ecx
  4209b5:	and    BYTE PTR [edx+0x603b5219],0x84
  4209bc:	jp     0x4209f0
  4209be:	adc    eax,0xc747f952
  4209c3:	and    eax,0x7a7ca841
  4209c8:	fisttp WORD PTR [eax+0x48feb567]
  4209ce:	in     eax,dx
  4209cf:	stos   BYTE PTR es:[edi],al
  4209d0:	jnp    0x4209fb
  4209d2:	sbb    ebp,ebx
  4209d4:	cdq    
  4209d5:	sahf   
  4209d6:	shl    BYTE PTR ds:0xc060ba47,1
  4209dc:	fild   QWORD PTR [ecx]
  4209de:	pop    edx
  4209df:	rol    BYTE PTR [esi+edx*8-0x55],1
  4209e3:	aas    
  4209e4:	mov    ecx,0x969dd7b7
  4209e9:	mov    ds:0x13e7bea4,eax
  4209ee:	mov    ds:0x8d4d29a7,eax
  4209f3:	gs fisttp QWORD PTR ds:[esi+0x6b]
  4209f8:	xchg   edx,eax
  4209f9:	popf   
  4209fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4209fb:	mov    ds:0xeac9f23d,al
  420a00:	xor    BYTE PTR [edx],ch
  420a02:	retf   0x5440
  420a05:	mov    eax,ds:0x2c41165e
  420a0a:	rcl    BYTE PTR [edi-0x4ee5129c],cl
  420a10:	test   DWORD PTR [eax+eiz*1],0xa448bc97
  420a17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a18:	xchg   edx,eax
  420a19:	dec    esp
  420a1a:	ja     0x420a45
  420a1c:	mov    ebx,0x804cc134
  420a21:	sub    DWORD PTR [esi],eax
  420a23:	or     al,0x9a
  420a25:	pushf  
  420a26:	stos   DWORD PTR es:[edi],eax
  420a27:	and    al,0x36
  420a29:	and    DWORD PTR [edi-0x2f],0x942a424c
  420a30:	popa   
  420a31:	loope  0x420a80
  420a33:	stos   BYTE PTR es:[edi],al
  420a34:	rcr    DWORD PTR [edi-0x1a],0x6b
  420a38:	mov    dl,0x8e
  420a3a:	popf   
  420a3b:	dec    edi
  420a3c:	out    0xf9,al
  420a3e:	cwde   
  420a3f:	test   BYTE PTR ds:0xe815bf4e,ch
  420a45:	(bad)  [eax+ebp*1]
  420a48:	fcmove st,st(3)
  420a4a:	stos   BYTE PTR es:[edi],al
  420a4b:	xchg   ecx,eax
  420a4c:	xlat   BYTE PTR ds:[ebx]
  420a4d:	xor    eax,0x340c2230
  420a52:	and    edi,esi
  420a54:	push   ecx
  420a55:	adc    BYTE PTR [eax+edi*4+0x7a776757],ah
  420a5c:	xor    al,BYTE PTR [eax]
  420a5e:	fistp  DWORD PTR [ebx+0x1d]
  420a61:	data16 sti 
  420a63:	push   es
  420a64:	adc    ecx,esi
  420a66:	push   ebp
  420a67:	jle    0x420ab2
  420a69:	daa    
  420a6a:	push   0xe67a683d
  420a6f:	repnz pop edx
  420a71:	push   esi
  420a72:	xchg   edx,eax
  420a73:	inc    eax
  420a74:	icebp  
  420a75:	sbb    bl,BYTE PTR [ebx-0x34]
  420a78:	sub    dh,BYTE PTR [ebp-0x1a827f94]
  420a7e:	repz dec edi
  420a80:	sbb    esp,edx
  420a82:	iret   
  420a83:	(bad)  
  420a84:	dec    eax
  420a85:	or     cl,BYTE PTR [ecx]
  420a87:	and    BYTE PTR [ecx],bl
  420a89:	mov    edi,0xac800703
  420a8e:	out    dx,al
  420a8f:	dec    esp
  420a90:	dec    ebp
  420a91:	add    al,BYTE PTR [ebx-0x17d90ecc]
  420a97:	xchg   edi,eax
  420a98:	sar    DWORD PTR [esi+esi*1],cl
  420a9b:	jbe    0x420ab5
  420a9d:	mov    WORD PTR [esi+esi*4+0x128421ac],ss
  420aa4:	and    DWORD PTR [ecx+ebx*1-0x17],ebp
  420aa8:	sbb    al,0xda
  420aaa:	mov    ebx,0x6fd6692e
  420aaf:	push   edi
  420ab1:	mov    bl,0x23
  420ab3:	(bad)
  420ab8:	fdiv   QWORD PTR [ebx-0x548d6626]
  420abe:	(bad)
  420ac2:	jmp    0x6827:0x7380d5bc
  420ac9:	sbb    eax,0x5019d379
  420ace:	jp     0x420ab8
  420ad0:	sub    al,0x35
  420ad2:	adc    BYTE PTR [eax+eax*4],0xdb
  420ad6:	addr16 dec ebp
  420ad8:	inc    esi
  420ad9:	mov    esi,DWORD PTR [edx]
  420adb:	mov    esp,0xe576204c
  420ae0:	popf   
  420ae1:	cdq    
  420ae2:	repz push eax
  420ae4:	mov    DWORD PTR [edx],ebx
  420ae6:	mov    cl,0x94
  420ae8:	sbb    bh,bl
  420aea:	repz hlt 
  420aec:	std    
  420aed:	sahf   
  420aee:	stos   BYTE PTR es:[edi],al
  420aef:	ret    
  420af0:	add    BYTE PTR [ebp+0x75],ah
  420af3:	in     al,0xb1
  420af5:	aad    0x58
  420af7:	adc    ch,BYTE PTR [edi-0x1f]
  420afa:	push   esp
  420afb:	dec    ebp
  420afc:	xor    al,0xa7
  420afe:	fnstsw WORD PTR [ebx-0x5]
  420b01:	ins    DWORD PTR es:[edi],dx
  420b02:	inc    ebx
  420b03:	pop    ds
  420b04:	dec    eax
  420b05:	add    edx,0xf10f1112
  420b0b:	xor    eax,0xad93a393
  420b10:	popa   
  420b11:	(bad)  
  420b12:	aad    0x98
  420b14:	nop
  420b15:	mov    DWORD PTR [edx],edx
  420b17:	je     0x420b2d
  420b19:	int3   
  420b1a:	shl    BYTE PTR ds:0x8592fcdf,0x85
  420b21:	aad    0xed
  420b23:	call   0x5ee6:0x564b4c41
  420b2a:	pop    ebx
  420b2b:	inc    edi
  420b2c:	push   esp
  420b2d:	idiv   BYTE PTR [edi+edx*4]
  420b30:	cmp    eax,0x8f937737
  420b35:	out    dx,al
  420b36:	mov    ecx,0xf5e892f2
  420b3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b3c:	fcom   DWORD PTR [ecx+esi*4]
  420b3f:	mov    ds:0x6a09abd9,eax
  420b44:	cmc    
  420b45:	mov    al,ds:0xd5e05241
  420b4a:	not    DWORD PTR [edx-0x663f110b]
  420b50:	xor    edi,ebp
  420b52:	shl    DWORD PTR [eax-0x31],cl
  420b55:	js     0x420ba8
  420b57:	shl    BYTE PTR [ebx-0x5d1afd1e],cl
  420b5d:	push   eax
  420b5e:	sub    DWORD PTR [eax+0xa],ebx
  420b61:	cmp    edi,eax
  420b63:	ret    
  420b64:	jns    0x420baf
  420b66:	push   esp
  420b67:	mov    eax,0x4ad88c0
  420b6c:	xchg   edi,eax
  420b6d:	sbb    al,0x39
  420b6f:	xor    DWORD PTR [ebp+0x1f],ebx
  420b72:	mov    ebp,0x5a031a29
  420b77:	aaa    
  420b78:	pop    ebx
  420b79:	mov    cl,0x97
  420b7b:	mov    esp,0x43b6a9e4
  420b80:	test   eax,0x7152bf71
  420b85:	mov    eax,0x7dac3e68
  420b8a:	(bad)  [esi+0x18]
  420b8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b8e:	test   DWORD PTR [ecx+edx*1-0x6],ecx
  420b92:	lods   al,BYTE PTR ds:[esi]
  420b93:	pop    edi
  420b94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b95:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b97:	mov    ecx,0x5f7940a3
  420b9c:	(bad)
  420ba0:	sub    eax,0xe134c986
  420ba5:	ret    
  420ba6:	and    eax,0x9d29f7fe
  420bab:	cmp    edi,DWORD PTR [edi+0x68f60886]
  420bb1:	shr    DWORD PTR [esi],0x26
  420bb4:	retf   
  420bb5:	aam    0x43
  420bb7:	mov    dh,0xca
  420bb9:	adc    eax,0x7879247a
  420bbe:	inc    edi
  420bbf:	mov    eax,ds:0x11de18cd
  420bc4:	imul   edx,DWORD PTR ds:0x2dbbb639,0xe0fced4e
  420bce:	(bad)  
  420bd0:	sbb    eax,0xcb7570d4
  420bd5:	jmp    0x420bc0
  420bd7:	xchg   esi,eax
  420bd8:	in     eax,dx
  420bd9:	(bad)  
  420bdc:	aad    0xa0
  420bde:	cli    
  420bdf:	jne    0x420bf1
  420be1:	ins    BYTE PTR es:[edi],dx
  420be2:	pushf  
  420be3:	push   esp
  420be4:	xlat   BYTE PTR ds:[ebx]
  420be5:	out    0x62,al
  420be7:	add    BYTE PTR [ecx-0x2fb421a4],ch
  420bed:	mov    dh,0x6
  420bef:	sbb    edi,DWORD PTR [ecx-0x59]
  420bf2:	mov    ds:0x9690879,eax
  420bf7:	pop    edx
  420bf8:	inc    ebp
  420bf9:	in     al,dx
  420bfa:	test   BYTE PTR ds:[eax*1+0x2edd8e7a],dh
  420c02:	add    eax,0xb9ff4638
  420c07:	jg     0x420bf3
  420c09:	loop   0x420bef
  420c0b:	ss dec ecx
  420c0d:	scas   al,BYTE PTR es:[edi]
  420c0e:	loope  0x420bef
  420c10:	mov    ecx,eax
  420c12:	push   ebx
  420c13:	dec    esi
  420c14:	(bad)  
  420c16:	lahf   
  420c17:	test   al,0x2c
  420c19:	imul   ecx,DWORD PTR [edi-0x64],0x50
  420c1d:	jg     0x420baa
  420c1f:	or     DWORD PTR [eax-0x39],ebp
  420c22:	bound  esp,QWORD PTR [esi+0x5b9a722]
  420c28:	sbb    BYTE PTR [edi-0x5be7b16f],bh
  420c2e:	mov    edx,0x4cee2b26
  420c33:	js     0x420c14
  420c35:	ds jnp 0x420be2
  420c38:	fs jo  0x420c58
  420c3b:	add    edi,DWORD PTR [ebp+0x42b009ed]
  420c41:	lahf   
  420c42:	retf   0xbe35
  420c45:	sbb    eax,0x76c6b9f5
  420c4a:	pop    edi
  420c4b:	fadd   DWORD PTR [eax-0x794c0d70]
  420c51:	ret    
  420c52:	fcom   st(6)
  420c54:	add    eax,DWORD PTR [ebx-0x2]
  420c57:	xlat   BYTE PTR ds:[ebx]
  420c58:	sbb    al,bh
  420c5a:	cmp    cl,al
  420c5c:	into   
  420c5d:	shr    ah,cl
  420c5f:	daa    
  420c60:	(bad)  
  420c62:	pop    ebp
  420c63:	outs   dx,BYTE PTR ds:[esi]
  420c64:	xor    eax,DWORD PTR [edx-0x137a5b10]
  420c6a:	mov    eax,ds:0xfa7ac934
  420c6f:	jle    0x420c90
  420c71:	sbb    al,0x3c
  420c73:	ins    DWORD PTR es:[edi],dx
  420c74:	inc    ebx
  420c75:	pop    edi
  420c76:	add    eax,0x30632097
  420c7b:	loop   0x420cb9
  420c7d:	cmp    edx,esp
  420c7f:	fisttp DWORD PTR [ebx]
  420c81:	sbb    ch,BYTE PTR [ebx+0x71]
  420c84:	int3   
  420c85:	cmp    al,0x1f
  420c87:	mov    DWORD PTR [ecx-0x79],ebp
  420c8a:	mov    ecx,0x915591a4
  420c8f:	icebp  
  420c90:	aam    0x31
  420c92:	sub    ah,BYTE PTR [bp+si]
  420c95:	out    dx,al
  420c96:	mov    al,ds:0xea103d09
  420c9b:	mov    eax,ds:0x5da7ba03
  420ca0:	(bad)  
  420ca1:	cmp    esp,ebx
  420ca3:	(bad)  
  420ca4:	stos   DWORD PTR es:[edi],eax
  420ca5:	push   ds
  420ca6:	jmp    0x420c45
  420ca8:	data16 fstp TBYTE PTR [edx+0x6e]
  420cac:	in     al,dx
  420cad:	adc    esi,DWORD PTR [edx+0x674f7133]
  420cb3:	jle    0x420cd5
  420cb5:	test   al,0xe2
  420cb7:	pop    esi
  420cb8:	xchg   ebp,eax
  420cb9:	scas   al,BYTE PTR es:[edi]
  420cba:	test   al,0x0
  420cbc:	aad    0xb3
  420cbe:	loopne 0x420ceb
  420cc0:	mov    ch,0xfe
  420cc2:	les    ecx,FWORD PTR [eax-0x5ec5b20b]
  420cc8:	push   0xffffffaf
  420cca:	mov    ebp,DWORD PTR [ebp+0x27f173db]
  420cd0:	xchg   eax,ecx
  420cd2:	cmp    esp,DWORD PTR [edi+esi*2+0x50]
  420cd6:	mov    eax,0x6964daf5
  420cdb:	push   ecx
  420cdc:	(bad)  
  420cdd:	xlat   BYTE PTR ds:[ebx]
  420cde:	nop
  420cdf:	mov    esp,DWORD PTR ds:0x2596f231
  420ce5:	and    edi,DWORD PTR fs:[ebp+0x43]
  420ce9:	pop    es
  420cea:	or     eax,0x8c0874d8
  420cef:	leave  
  420cf0:	stos   DWORD PTR es:[edi],eax
  420cf1:	push   ecx
  420cf2:	std    
  420cf3:	psubb  mm2,QWORD PTR [edx]
  420cf6:	jmp    0x5f02640a
  420cfb:	out    0x4a,eax
  420cfd:	push   edi
  420cfe:	mov    eax,ds:0x56f2b05f
  420d03:	and    ebx,DWORD PTR [edi]
  420d05:	leave  
  420d06:	(bad)  
  420d07:	jns    0x420d4f
  420d09:	push   edx
  420d0a:	in     al,0xb4
  420d0c:	xchg   ebp,eax
  420d0d:	sti    
  420d0e:	ret    0x87eb
  420d11:	pop    ss
  420d12:	mov    esp,0xef8cf599
  420d17:	outs   dx,BYTE PTR ds:[esi]
  420d18:	add    al,0x5b
  420d1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d1b:	mov    ch,0xa9
  420d1d:	lods   al,BYTE PTR ds:[esi]
  420d1e:	dec    edx
  420d1f:	cdq    
  420d20:	imul   ecx,DWORD PTR [esi-0x9],0xe7627c8
  420d27:	jp     0x420ce4
  420d29:	or     DWORD PTR ds:[esi+eiz*2],ebx
  420d2d:	pop    esi
  420d2e:	inc    esi
  420d2f:	xchg   ecx,eax
  420d30:	add    al,BYTE PTR [ebp+0x708ce2a8]
  420d36:	cld    
  420d37:	xlat   BYTE PTR ds:[ebx]
  420d38:	adc    DWORD PTR [edx+0x328bef51],0xffffffe6
  420d3f:	test   eax,0x8d325be0
  420d44:	(bad)  
  420d45:	stc    
  420d46:	dec    edx
  420d47:	ins    DWORD PTR es:[edi],dx
  420d48:	sub    al,0x5a
  420d4a:	xchg   edi,eax
  420d4b:	mov    BYTE PTR ds:0x57a9dc6f,bh
  420d51:	sbb    ecx,DWORD PTR [eax]
  420d53:	or     eax,0x393c76e8
  420d58:	stos   DWORD PTR es:[edi],eax
  420d59:	cs dec ecx
  420d5b:	pop    edi
  420d5c:	retf   
  420d5d:	sub    al,0xcd
  420d5f:	aas    
  420d60:	xor    eax,0x45a5e437
  420d65:	xor    BYTE PTR [ebp+0x75886d00],bl
  420d6b:	pop    edx
  420d6c:	xlat   BYTE PTR ds:[ebx]
  420d6d:	jp     0x420d45
  420d6f:	xor    eax,0x12776af3
  420d74:	xor    ch,BYTE PTR [esi+0x746fda03]
  420d7a:	test   al,0xc
  420d7c:	in     eax,dx
  420d7d:	in     al,0x33
  420d7f:	(bad)  
  420d80:	fmul   st(6),st
  420d82:	stos   DWORD PTR es:[edi],eax
  420d83:	cdq    
  420d84:	or     bl,BYTE PTR [eax-0x5e8bb8b7]
  420d8a:	clc    
  420d8b:	mov    al,0xbb
  420d8d:	cmc    
  420d8e:	arpl   sp,dx
  420d90:	inc    eax
  420d91:	lods   al,BYTE PTR ds:[esi]
  420d92:	daa    
  420d93:	xor    BYTE PTR [edx+0x5],ch
  420d96:	aas    
  420d97:	and    DWORD PTR [eax+0x6a9b55e],ebp
  420d9d:	in     al,dx
  420d9e:	pop    es
  420d9f:	mov    esi,0xe8fe727d
  420da4:	xchg   ecx,eax
  420da5:	jp     0x420d5a
  420da7:	inc    eax
  420da8:	loop   0x420df3
  420daa:	jmp    0xcedb459d
  420daf:	(bad)  
  420db0:	outs   dx,BYTE PTR ds:[esi]
  420db1:	sbb    DWORD PTR [ecx],edi
  420db3:	xor    dl,bh
  420db5:	inc    esi
  420db6:	int3   
  420db7:	dec    edi
  420db8:	mov    bh,0x22
  420dba:	retf   0xeb53
  420dbd:	out    0xe0,eax
  420dbf:	aad    0xd1
  420dc1:	dec    esi
  420dc2:	mov    ebp,0x9e46d57e
  420dc7:	mov    edx,0x64e92a1f
  420dcc:	fwait
  420dcd:	xor    DWORD PTR [ebp-0x79],0x50
  420dd1:	xor    al,0x2b
  420dd3:	and    al,0x60
  420dd5:	lock and DWORD PTR fs:[ebx],edx
  420dd9:	in     al,0xf7
  420ddb:	(bad)  
  420ddc:	leave  
  420ddd:	add    BYTE PTR [esi],cl
  420ddf:	mov    DWORD PTR [esi-0x69618776],ebp
  420de5:	sub    al,0x6f
  420de7:	xchg   dh,al
  420de9:	(bad)  
  420dea:	push   ebp
  420deb:	xchg   ebp,eax
  420dec:	idiv   BYTE PTR [ecx]
  420dee:	push   edi
  420def:	lods   al,BYTE PTR ds:[esi]
  420df0:	(bad)  
  420df2:	add    esp,esp
  420df4:	jl     0x420e20
  420df6:	and    ch,ch
  420df8:	and    eax,0xcc1f73a4
  420dfd:	xchg   edx,eax
  420dfe:	inc    edx
  420dff:	test   al,0x8a
  420e01:	in     eax,0x20
  420e03:	bound  ebp,QWORD PTR [esi-0x48bffc38]
  420e09:	mov    edi,0x3c598945
  420e0e:	(bad)  
  420e0f:	outs   dx,DWORD PTR ds:[esi]
  420e10:	push   esp
  420e11:	pushf  
  420e12:	shl    dl,1
  420e14:	mov    dh,0xed
  420e16:	jmp    0xd4e05cf3
  420e1b:	imul   ebp,eax,0xfffffffa
  420e1e:	pcmpgtb mm3,QWORD PTR [esi]
  420e21:	mov    ebp,0xd642567e
  420e26:	cmc    
  420e27:	ffreep st(6)
  420e29:	ret    
  420e2a:	xor    ah,BYTE PTR [ecx+0x97e1c2b]
  420e30:	sbb    DWORD PTR [edx+edi*1+0x1],ebp
  420e34:	int3   
  420e35:	xchg   al,ch
  420e37:	(bad)  
  420e38:	mov    esi,0xeb920411
  420e3d:	xchg   edi,eax
  420e3e:	es ss push ebp
  420e41:	out    dx,al
  420e42:	xor    DWORD PTR [ebx],ebx
  420e44:	ss stos BYTE PTR es:[edi],al
  420e46:	add    eax,0x5471daf9
  420e4b:	pushf  
  420e4c:	mov    eax,0x3f0b7af6
  420e51:	xchg   ebp,eax
  420e52:	mov    edi,0x2e9cc8bb
  420e57:	in     eax,0x33
  420e59:	cmp    esi,ebx
  420e5b:	aas    
  420e5c:	lahf   
  420e5d:	loop   0x420e6e
  420e5f:	in     eax,dx
  420e60:	mov    esi,ebx
  420e62:	mov    al,ds:0x42a70838
  420e67:	pop    ecx
  420e68:	cwde   
  420e69:	push   ebp
  420e6a:	sub    BYTE PTR ds:0x4bafc1e2,0x3c
  420e71:	mov    ds:0xe5ab39dd,eax
  420e76:	xchg   edx,eax
  420e77:	xlat   BYTE PTR ds:[ebx]
  420e78:	mov    ds:0x13c05a51,al
  420e7d:	push   es
  420e7e:	fstp   QWORD PTR [edi-0x55edee7d]
  420e84:	cli    
  420e85:	out    0x42,al
  420e87:	pmuludq mm1,QWORD PTR [eax-0x2]
  420e8b:	dec    ecx
  420e8c:	fs ins DWORD PTR es:[edi],dx
  420e8e:	loop   0x420e11
  420e90:	and    eax,0xd73b709
  420e95:	pop    edx
  420e96:	jg     0x420f11
  420e98:	mov    al,0x6d
  420e9a:	fidiv  DWORD PTR [esi-0x4cd9585c]
  420ea0:	push   ebp
  420ea1:	cmp    eax,DWORD PTR [edx]
  420ea3:	(bad)  
  420ea4:	mov    ebx,0x71429b58
  420ea9:	and    eax,DWORD PTR [ebp-0x2b4efefb]
  420eaf:	jmp    0xddd7:0x69ed09c2
  420eb6:	sbb    ch,ch
  420eb8:	add    dh,ch
  420eba:	sub    eax,0x943d8ac5
  420ebf:	loopne 0x420e8e
  420ec1:	xchg   esi,eax
  420ec2:	cli    
  420ec3:	test   al,0x9f
  420ec5:	jbe    0x420e96
  420ec7:	jns    0x420ef1
  420ec9:	sbb    eax,0x9126b793
  420ece:	test   al,0xdb
  420ed0:	sbb    ah,BYTE PTR [ecx+0x9]
  420ed3:	int    0x18
  420ed5:	push   ds
  420ed6:	pop    ecx
  420ed7:	mov    edi,DWORD PTR [ebp-0x26]
  420eda:	jmp    0x7af8:0x5b25c822
  420ee1:	dec    ebx
  420ee2:	pusha  
  420ee3:	int    0x49
  420ee5:	xchg   BYTE PTR [edi-0xf],ah
  420ee8:	dec    esi
  420ee9:	adc    BYTE PTR fs:[esi+0x75],bl
  420eed:	mov    bl,0xa
  420eef:	push   ebp
  420ef0:	ss in  al,dx
  420ef2:	inc    esp
  420ef4:	nop
  420ef5:	imul   esi,DWORD PTR [ecx-0x5a],0x48
  420ef9:	leave  
  420efa:	mov    ds:0xcbeb745c,al
  420eff:	fcmovbe st,st(3)
  420f01:	mov    ecx,0xe2c6b484
  420f06:	or     cl,BYTE PTR [edx+0x67e83c78]
  420f0c:	stos   BYTE PTR es:[edi],al
  420f0d:	lea    ebx,[eax]
  420f0f:	sub    BYTE PTR [edi+0x4feb6b17],0xb3
  420f16:	pop    ebx
  420f17:	push   0xfffffff5
  420f19:	and    al,0xa8
  420f1b:	outs   dx,DWORD PTR ds:[esi]
  420f1c:	mov    ch,0x6
  420f1e:	adc    DWORD PTR [ebp-0x2987e849],0xffffffc4
  420f25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420f26:	push   edx
  420f27:	daa    
  420f28:	jecxz  0x420f64
  420f2a:	push   edi
  420f2b:	popf   
  420f2c:	retf   
  420f2d:	mov    eax,ds:0xce5805ad
  420f32:	xchg   esp,eax
  420f33:	bound  edi,QWORD PTR [edx+esi*1]
  420f36:	cwde   
  420f37:	in     eax,0x73
  420f39:	movntq QWORD PTR [ebx],mm6
  420f3c:	inc    esi
  420f3d:	cld    
  420f3e:	adc    DWORD PTR [esi],ebx
  420f40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420f41:	in     al,0xc2
  420f43:	outs   dx,DWORD PTR ds:[esi]
  420f44:	inc    esp
  420f45:	pop    ebx
  420f46:	int    0x80
  420f48:	inc    esp
  420f49:	inc    ebp
  420f4a:	lods   eax,DWORD PTR ds:[esi]
  420f4b:	pusha  
  420f4c:	jmp    0x420f21
  420f4e:	dec    ecx
  420f4f:	(bad)  
  420f50:	pop    esp
  420f51:	add    esp,DWORD PTR [edi-0x4ace97e9]
  420f57:	inc    ebx
  420f58:	mov    edi,0xb015a20a
  420f5d:	push   edx
  420f5e:	enter  0xad89,0xe6
  420f62:	dec    ecx
  420f63:	cmp    dh,BYTE PTR [eax+0x4ad9ac9f]
  420f69:	inc    ebp
  420f6a:	fmul   DWORD PTR [ecx-0x73f6aaea]
  420f70:	fst    DWORD PTR [ebx]
  420f72:	pop    ebx
  420f73:	ror    DWORD PTR [esi+ecx*8-0x366ed4f2],cl
  420f7a:	sbb    ah,BYTE PTR [esi-0x5d195ebe]
  420f80:	loop   0x420f6f
  420f82:	add    eax,DWORD PTR [ebp-0x707fed76]
  420f88:	jmp    0x86d72808
  420f8d:	pop    ecx
  420f8e:	arpl   di,si
  420f90:	sbb    edi,DWORD PTR [ecx+0x4bab852d]
  420f96:	sti    
  420f97:	inc    ebp
  420f98:	cmp    ch,BYTE PTR [edx-0x6e]
  420f9b:	ins    DWORD PTR es:[edi],dx
  420f9c:	adc    al,0xd2
  420f9e:	mov    bl,dl
  420fa0:	mov    BYTE PTR [eax],dl
  420fa2:	xchg   esp,eax
  420fa3:	shl    al,cl
  420fa5:	out    0x4d,eax
  420fa7:	imul   ebx,DWORD PTR [eax+0x7eafeccf],0xd80f5e5e
  420fb1:	out    0x2e,eax
  420fb3:	ss idiv dh
  420fb6:	das    
  420fb7:	and    DWORD PTR [edx+0x20],0x4415094c
  420fbe:	imul   esi,DWORD PTR [ebp+ecx*4-0x5e848e9b],0x12c29dcb
  420fc9:	stos   BYTE PTR es:[edi],al
  420fca:	jno    0x420fc6
  420fcc:	inc    esp
  420fcd:	mov    dl,0x71
  420fcf:	pop    edx
  420fd0:	pop    es
  420fd1:	inc    edi
  420fd2:	imul   edi,DWORD PTR [edi+0x41],0xcdc1f91b
  420fd9:	push   eax
  420fda:	into   
  420fdb:	cli    
  420fdc:	fist   DWORD PTR [edi]
  420fde:	lds    edi,FWORD PTR [edi-0x32]
  420fe1:	and    dh,BYTE PTR [ebx-0x68]
  420fe4:	out    0xd2,al
  420fe6:	lock arpl si,di
  420fe9:	cmp    al,bh
  420feb:	cmp    esi,eax
  420fed:	cli    
  420fee:	test   BYTE PTR [ebx+esi*8+0x1b1101de],0x99
  420ff6:	push   edi
  420ff7:	in     eax,0xf2
  420ff9:	sbb    DWORD PTR ds:0x3d1d3dfb,esp
  420fff:	xor    eax,0x68f841ce
  421004:	sbb    al,0x1c
  421006:	and    al,0x48
  421008:	ins    DWORD PTR es:[edi],dx
  421009:	hlt    
  42100a:	cdq    
  42100b:	fcom   DWORD PTR [ebp+edi*1-0x23]
  42100f:	dec    edi
  421010:	(bad)  
  421011:	jmp    0x421035
  421013:	inc    edx
  421014:	mov    ebx,0xc6f1811c
  421019:	int    0xf2
  42101b:	scas   eax,DWORD PTR es:[edi]
  42101c:	pop    es
  42101d:	push   es
  42101e:	pop    eax
  42101f:	jmp    0x421047
  421021:	lahf   
  421022:	mov    edx,esi
  421024:	and    esi,DWORD PTR [ecx-0x404bece8]
  42102a:	sub    ecx,edi
  42102c:	jno    0x420fd2
  42102e:	ins    DWORD PTR es:[edi],dx
  42102f:	cwde   
  421030:	call   0x5bfa1424
  421035:	fimul  WORD PTR [ebx]
  421037:	nop
  421038:	enter  0xc80e,0xb
  42103c:	into   
  42103d:	jo     0x421091
  42103f:	loop   0x420ff5
  421041:	pop    esp
  421042:	jecxz  0x420fd5
  421044:	add    eax,0xbd8751a6
  421049:	scas   eax,DWORD PTR es:[edi]
  42104a:	scas   eax,DWORD PTR es:[edi]
  42104b:	in     eax,0xd6
  42104d:	adc    edi,DWORD PTR [esi+ebp*4+0x6d5697cf]
  421054:	jmp    eax
  421056:	add    al,0x83
  421058:	inc    ebp
  421059:	push   edi
  42105a:	fnsave [esi-0x3c]
  42105d:	arpl   bp,si
  42105f:	mov    ds:0x26f67840,al
  421064:	mov    bl,BYTE PTR [ebx+0x15]
  421067:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421068:	ins    DWORD PTR es:[edi],dx
  421069:	or     al,0xd9
  42106b:	jno    0x4210b4
  42106d:	call   0x8cedd51f
  421072:	inc    esp
  421073:	(bad)  
  421074:	dec    esi
  421075:	xor    esp,DWORD PTR [edi-0x7e18e75a]
  42107b:	lds    eax,FWORD PTR [ebp-0xec7723c]
  421081:	mov    eax,DWORD PTR [edi]
  421083:	in     eax,dx
  421084:	fisttp WORD PTR [eax+0x7852ffc]
  42108a:	jmp    0x421071
  42108c:	adc    al,BYTE PTR ds:0xbeea4b2e
  421092:	mov    edi,0x8f5a5f4
  421097:	jae    0x4210f6
  421099:	pusha  
  42109a:	and    dl,BYTE PTR [esi+0x745fac86]
  4210a0:	push   ds
  4210a1:	in     al,0x82
  4210a3:	repnz test bl,cl
  4210a6:	xor    eax,0xeb7230d9
  4210ab:	xor    eax,0x95335ae3
  4210b0:	je     0x4210b2
  4210b2:	mov    dh,BYTE PTR [edi+ecx*2]
  4210b5:	pop    ds
  4210b6:	pushw  cs
  4210b8:	xor    DWORD PTR [ebx+0x39],0x3f
  4210bc:	das    
  4210bd:	pop    ebp
  4210be:	mov    esp,0x15d8ab66
  4210c3:	xchg   ebp,eax
  4210c4:	imul   esp,DWORD PTR [eax],0xfd23e57f
  4210ca:	aaa    
  4210cb:	cmovno ecx,edi
  4210ce:	jno    0x42113f
  4210d0:	call   0xea472bc5
  4210d5:	pop    ss
  4210d6:	cld    
  4210d7:	jg     0x4210e4
  4210d9:	cdq    
  4210da:	xchg   edi,eax
  4210db:	xor    al,bh
  4210dd:	(bad)  
  4210de:	pushf  
  4210df:	pop    ebp
  4210e0:	xor    al,0x6f
  4210e2:	inc    eax
  4210e3:	jb     0x421116
  4210e5:	out    dx,eax
  4210e6:	mov    ch,0xa0
  4210e8:	test   eax,0xe025fbe2
  4210ed:	xchg   al,ch
  4210ef:	clc    
  4210f0:	jns    0x421157
  4210f2:	fistp  DWORD PTR [eax+ebp*4-0x5d]
  4210f6:	sub    ecx,DWORD PTR [esi]
  4210f8:	add    edx,DWORD PTR [esi-0x48]
  4210fb:	(bad)  
  4210fc:	scas   eax,DWORD PTR es:[edi]
  4210fd:	add    edi,0x9bfc3e5b
  421103:	cmp    edi,eax
  421105:	adc    BYTE PTR [esi-0x38],ch
  421108:	cmp    eax,0x5b613324
  42110d:	retf   0x4d84
  421110:	inc    edx
  421111:	ret    
  421112:	add    dh,bh
  421114:	mov    eax,ebx
  421116:	xchg   ecx,eax
  421117:	push   edi
  421118:	cmp    eax,DWORD PTR [edx+ebx*8]
  42111b:	sbb    DWORD PTR [ebp-0x47878de3],0xadaf2a43
  421125:	push   ss
  421126:	fmul   QWORD PTR [edi-0x60]
  421129:	jle    0x42117e
  42112b:	aam    0xc7
  42112d:	mov    eax,ds:0x90e16d1e
  421132:	in     eax,0x27
  421134:	mov    al,0x74
  421136:	jp     0x4210f7
  421138:	push   ebx
  421139:	(bad)  
  42113a:	fdiv   DWORD PTR [ecx]
  42113c:	and    ch,BYTE PTR [ebx+0x7d]
  42113f:	imul   ecx,esp,0x5e32b2a7
  421145:	mov    bl,0x5d
  421147:	push   esp
  421148:	jge    0x42118b
  42114a:	test   al,0xe
  42114c:	lods   al,BYTE PTR ds:[esi]
  42114d:	push   0x8b777761
  421152:	jae    0x421171
  421154:	loop   0x421188
  421156:	fild   WORD PTR [ebp-0x652bb513]
  42115c:	dec    esp
  42115d:	jno    0x42113e
  42115f:	retf   
  421160:	ds push ebx
  421162:	rcl    DWORD PTR [ecx],1
  421164:	mov    edi,0x9a0a004a
  421169:	dec    edx
  42116a:	mov    esp,0x44021d48
  42116f:	mov    eax,ds:0x1b093da2
  421174:	scas   al,BYTE PTR es:[edi]
  421175:	xchg   BYTE PTR [edx+0x5],al
  421178:	jp     0x4211cd
  42117a:	sub    al,0xcd
  42117c:	scas   eax,DWORD PTR es:[edi]
  42117d:	dec    edi
  42117e:	xchg   ebp,eax
  42117f:	mov    esp,0xaf9423a4
  421184:	clc    
  421185:	mov    ds:0xdfc0164c,al
  42118a:	sub    dl,al
  42118c:	stc    
  42118d:	pushf  
  42118e:	xchg   esp,eax
  42118f:	popa   
  421190:	push   cs
  421191:	xor    DWORD PTR [ebx-0x6],ebp
  421194:	xchg   esp,eax
  421195:	inc    edx
  421196:	cmp    eax,0x844905fe
  42119b:	jmp    0x42115a
  42119d:	adc    BYTE PTR [edx+0x4d],ch
  4211a0:	test   al,0xcd
  4211a2:	imul   edx,DWORD PTR [edi-0x4142f8e],0x60c249c1
  4211ac:	sbb    al,0x3
  4211ae:	int    0x21
  4211b0:	mov    dh,0xa7
  4211b2:	mov    ds:0x4617e202,al
  4211b7:	jbe    0x4211bb
  4211b9:	jle    0x4211a0
  4211bb:	mov    bl,0x27
  4211bd:	xchg   esp,eax
  4211be:	and    eax,0xd8089ba2
  4211c3:	(bad)  
  4211c4:	ss add sp,di
  4211c8:	retf   
  4211c9:	jns    0x421178
  4211cb:	loopne 0x42117a
  4211cd:	(bad)  
  4211cf:	mov    ss,esp
  4211d1:	arpl   dx,sp
  4211d3:	test   DWORD PTR [edx+0x692bd8c9],esi
  4211d9:	mov    WORD PTR [ebp+0x18],fs
  4211dc:	shl    BYTE PTR [edi+0x45c8fd5f],1
  4211e2:	(bad)  
  4211e3:	xor    esi,DWORD PTR [edi]
  4211e5:	sbb    BYTE PTR [edx+eiz*2+0x14],dl
  4211e9:	mov    dl,0xa4
  4211eb:	xchg   ecx,eax
  4211ec:	dec    ecx
  4211ed:	jl     0x4211bc
  4211ef:	xor    DWORD PTR [ecx*2+0x798dce21],esi
  4211f6:	mov    al,0xc8
  4211f8:	int    0xc5
  4211fa:	shl    DWORD PTR [eax+0x489dde3d],cl
  421200:	mov    WORD PTR [ebp+0xf264f14],ss
  421206:	je     0x421270
  421208:	jp     0x42122b
  42120a:	addr16 push 0x19
  42120d:	jne    0x421279
  42120f:	fsubrp st(5),st
  421211:	mov    edi,DWORD PTR [eax]
  421213:	out    0x71,al
  421215:	add    BYTE PTR [edi+0x35],cl
  421218:	pop    ebx
  421219:	mov    dh,0x5e
  42121b:	inc    DWORD PTR [esi+0x1d815155]
  421221:	fnstenv [esi+eiz*1+0x4acf6826]
  421228:	sar    BYTE PTR [eax],1
  42122a:	fst    DWORD PTR [edx+0x6d]
  42122d:	ret    
  42122e:	jo     0x4211c2
  421230:	xor    DWORD PTR [esi+0x793fe6a2],esi
  421236:	cmp    bl,BYTE PTR [edi]
  421238:	push   0xebf7f959
  42123d:	ret    0xac23
  421240:	or     DWORD PTR [edi-0x55],esp
  421243:	pop    ds
  421244:	adc    al,0x34
  421246:	adc    BYTE PTR [edi+0x94127d8],dl
  42124c:	pop    ss
  42124d:	xchg   DWORD PTR [edx-0x1ba1c0ee],edi
  421253:	out    0x74,al
  421255:	(bad)  
  421257:	sbb    eax,0xb3663fcc
  42125c:	fistp  DWORD PTR [edx]
  42125e:	xchg   esp,eax
  42125f:	loopne 0x4212c1
  421261:	cs aad 0x3f
  421264:	lods   al,BYTE PTR ds:[esi]
  421265:	fsub   DWORD PTR [ecx-0x5]
  421268:	sub    esp,DWORD PTR [ebp-0x6f]
  42126b:	xchg   edx,eax
  42126c:	jno    0x42120f
  42126e:	ds dec edi
  421270:	je     0x42127d
  421272:	inc    edx
  421273:	add    dl,ch
  421275:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421276:	push   edi
  421277:	jecxz  0x4212ec
  421279:	ja     0x42120f
  42127b:	mov    edi,0x36e7f45c
  421280:	std    
  421281:	clc    
  421282:	jmp    0x4212f4
  421284:	inc    ebp
  421285:	sar    DWORD PTR ds:0xd252d5a1,0xf
  42128c:	mov    esp,0xf622f5f6
  421291:	adc    al,ah
  421293:	adc    al,0xf3
  421295:	fwait
  421296:	add    bl,al
  421298:	and    DWORD PTR [ecx+0x2f87e7f7],eax
  42129e:	or     eax,0x4e79d296
  4212a3:	stos   BYTE PTR es:[edi],al
  4212a4:	cmp    BYTE PTR [ebp-0x6c],0x72
  4212a8:	cdq    
  4212a9:	pop    ebx
  4212aa:	and    dl,BYTE PTR [esp+ebp*2-0x6]
  4212ae:	xor    al,0x58
  4212b0:	cmp    dh,BYTE PTR [edi+0x57f1493e]
  4212b6:	in     eax,0xdf
  4212b8:	inc    edx
  4212b9:	push   ebx
  4212ba:	dec    esi
  4212bb:	sbb    eax,0xbdeaf2cf
  4212c0:	inc    esi
  4212c1:	(bad)  
  4212c2:	push   esi
  4212c3:	cmc    
  4212c4:	shr    edx,cl
  4212c6:	les    eax,FWORD PTR ds:0xa4f4397d
  4212cc:	js     0x421266
  4212ce:	cmp    al,0x84
  4212d0:	iret   
  4212d1:	pop    ebx
  4212d2:	ficomp DWORD PTR [eax]
  4212d4:	sub    ecx,ebx
  4212d6:	int3   
  4212d7:	fistp  DWORD PTR [esi]
  4212d9:	in     eax,0x9a
  4212db:	inc    ebx
  4212dc:	mov    eax,ds:0xb256d142
  4212e1:	inc    eax
  4212e2:	gs xor eax,0xbd03363f
  4212e8:	add    eax,0x4bb495a0
  4212ed:	mov    ds:0x573e0d5d,eax
  4212f2:	(bad)  
  4212f3:	(bad)  [eax+0x2c15191c]
  4212f9:	hlt    
  4212fa:	test   DWORD PTR [ebp-0x7d8a4658],esi
  421300:	stc    
  421301:	pop    edx
  421302:	mov    ah,0x8e
  421304:	lea    eax,[edi+ebx*2-0x7e]
  421308:	repnz xchg edi,eax
  42130a:	cld    
  42130b:	popa   
  42130c:	popf   
  42130d:	stos   DWORD PTR es:[edi],eax
  42130e:	sbb    cl,BYTE PTR [ebp-0x35]
  421311:	mov    ebp,0xa2d261db
  421316:	mov    ebp,0x9a8540da
  42131b:	and    eax,0x220ad375
  421320:	xchg   esi,esi
  421322:	jmp    0x4746:0xd4072b1d
  421329:	call   0x85a1082e
  42132e:	mov    bh,0xc2
  421330:	xchg   edi,eax
  421331:	sub    eax,0x3099fb6f
  421336:	pop    es
  421337:	xchg   ebp,eax
  421338:	pop    ebp
  421339:	gs cld 
  42133b:	fimul  WORD PTR [edi]
  42133d:	(bad)  
  42133e:	stc    
  42133f:	lock cmp DWORD PTR [esi+0x37],ecx
  421343:	and    BYTE PTR [edx-0x39],ch
  421346:	push   0xbb1df8dc
  42134b:	push   ebp
  42134c:	push   es
  42134d:	mov    ah,0x3d
  42134f:	and    al,0xfa
  421351:	lods   eax,DWORD PTR ds:[esi]
  421352:	sbb    eax,0xa48c10da
  421357:	and    edx,DWORD PTR [edi-0x4b1c0516]
  42135d:	aam    0x65
  42135f:	(bad)  
  421360:	ror    DWORD PTR [esi],1
  421362:	shr    bl,0xd5
  421365:	repnz add eax,0x7148f90e
  42136b:	shl    BYTE PTR [esi+eiz*8+0xe8cebe3],1
  421372:	into   
  421373:	push   ss
  421374:	mov    edi,ds
  421376:	outs   dx,DWORD PTR ds:[esi]
  421377:	pop    esi
  421378:	mov    BYTE PTR [ebx-0x1e],ah
  42137b:	xor    eax,0x76f3f80f
  421380:	in     eax,0x60
  421382:	sub    al,0x1d
  421384:	retf   
  421385:	pop    ecx
  421386:	test   ch,ah
  421388:	dec    esi
  421389:	cmp    BYTE PTR [ebp-0x59ff5e7b],dh
  42138f:	retf   0x6b88
  421392:	out    0xa3,al
  421394:	mov    ch,0x84
  421396:	(bad)  
  421398:	xchg   ecx,ebx
  42139a:	cmp    dl,ch
  42139c:	push   cs
  42139d:	test   al,0x9f
  42139f:	cmp    cl,bl
  4213a1:	data16 fsubr QWORD PTR [ebp+0x46]
  4213a5:	pop    ecx
  4213a6:	gs fwait
  4213a8:	jns    0x42136a
  4213aa:	cmp    BYTE PTR [esp+eax*8-0x2dc96437],0x26
  4213b2:	or     edi,eax
  4213b4:	repz pop edi
  4213b6:	pop    ds
  4213b7:	(bad)  
  4213b8:	inc    BYTE PTR [esi-0x31]
  4213bb:	push   ecx
  4213bc:	ins    BYTE PTR es:[edi],dx
  4213bd:	mov    bl,0xb3
  4213bf:	xor    ah,BYTE PTR [esi]
  4213c1:	es mov edx,0xfb9f6af3
  4213c7:	sbb    cl,ah
  4213c9:	retf   
  4213ca:	lds    esi,FWORD PTR [ebp+0x68]
  4213cd:	fild   QWORD PTR [ebx-0x32]
  4213d0:	es sahf 
  4213d2:	lock call 0x83bd:0x3c17457f
  4213da:	mov    ecx,0x3eda5839
  4213df:	iret   
  4213e0:	cmp    eax,0x43f7e0e3
  4213e5:	pop    ebp
  4213e6:	ss mov edx,0x8893b9cd
  4213ec:	mov    eax,0xa953aa6
  4213f1:	or     eax,edi
  4213f3:	cmc    
  4213f4:	sub    al,0xd5
  4213f6:	into   
  4213f7:	aam    0xa4
  4213f9:	jge    0x4213e8
  4213fb:	dec    edx
  4213fc:	jl     0x4213ac
  4213fe:	jno    0x421458
  421400:	push   ss
  421401:	data16 int3 
  421403:	sar    BYTE PTR [ebx-0xc],1
  421406:	div    BYTE PTR [esi]
  421408:	push   esp
  421409:	xor    al,0x6c
  42140b:	shl    DWORD PTR [ecx],0x9
  42140e:	cwde   
  42140f:	lahf   
  421410:	xor    eax,DWORD PTR [eax+esi*2+0x68beb66f]
  421417:	and    ebp,DWORD PTR [edx+0x26edc72]
  42141d:	add    bl,cl
  42141f:	lock adc DWORD PTR [ebp+0x54ffc983],esi
  421426:	mov    edx,ebp
  421428:	rcl    DWORD PTR [eax],0x2d
  42142b:	mov    al,0xdd
  42142d:	dec    ebx
  42142e:	pop    ss
  42142f:	fwait
  421430:	push   ebp
  421431:	adc    al,0xe9
  421433:	out    dx,eax
  421434:	fld    st(7)
  421436:	cdq    
  421437:	adc    al,0x88
  421439:	cli    
  42143a:	popa   
  42143b:	jp     0x42145e
  42143d:	imul   ebx,DWORD PTR [edx],0x1c8c24be
  421443:	scas   eax,DWORD PTR es:[edi]
  421444:	bound  esp,QWORD PTR [esi+0x7b1481ca]
  42144a:	jbe    0x42143d
  42144c:	jge    0x4214c6
  42144e:	adc    esp,eax
  421450:	scas   eax,DWORD PTR es:[edi]
  421451:	xchg   edi,eax
  421452:	cli    
  421453:	jmp    0x4385:0x78946c9c
  42145a:	xchg   BYTE PTR [ebx+0x15f4f578],bl
  421460:	jmp    0x5404:0xafb50ff4
  421467:	repnz push es
  421469:	push   0x2a
  42146b:	or     ecx,edx
  42146d:	and    ch,BYTE PTR [ecx+edi*8]
  421470:	loop   0x4214bd
  421472:	dec    ebp
  421473:	mov    al,ds:0x38e2da18
  421478:	and    BYTE PTR [edx-0x12408710],dh
  42147e:	clc    
  42147f:	in     eax,dx
  421480:	ror    dh,1
  421482:	popa   
  421483:	mov    edx,DWORD PTR [ecx+0x2774c21f]
  421489:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42148a:	or     edi,DWORD PTR [ecx-0x2efad728]
  421490:	cmp    eax,0xa9f06f75
  421495:	dec    ebp
  421496:	sahf   
  421497:	out    dx,eax
  421498:	in     al,dx
  421499:	inc    ebx
  42149a:	mov    al,0x3d
  42149c:	fwait
  42149d:	mov    ds:0x2a853948,eax
  4214a2:	push   0xffffff94
  4214a4:	dec    ebp
  4214a5:	mov    bl,0xe4
  4214a7:	add    BYTE PTR [ebx+0x71],ah
  4214aa:	fsqrt  
  4214ac:	mov    al,ds:0x1258753e
  4214b1:	retf   
  4214b2:	(bad)  
  4214b3:	fisttp QWORD PTR [edi+0x7d]
  4214b6:	pop    esi
  4214b7:	test   eax,0x6f30c1bc
  4214bc:	inc    eax
  4214bd:	js     0x42149e
  4214bf:	std    
  4214c0:	adc    DWORD PTR [edx+0x4e],esp
  4214c3:	xchg   esp,eax
  4214c4:	loop   0x421494
  4214c6:	inc    edi
  4214c7:	fiadd  DWORD PTR [edx]
  4214c9:	fcomp  st(5)
  4214cb:	lods   eax,DWORD PTR ds:[esi]
  4214cc:	xchg   ebp,eax
  4214cd:	push   esp
  4214ce:	sbb    bl,bl
  4214d0:	sub    eax,0x7a40dcde
  4214d5:	rol    al,cl
  4214d7:	loop   0x4214a6
  4214d9:	hlt    
  4214da:	push   cs
  4214db:	into   
  4214dc:	inc    ecx
  4214dd:	push   ds
  4214de:	rol    bl,0xed
  4214e1:	out    0x46,al
  4214e3:	mov    al,ds:0xe8d2d8a2
  4214e8:	leave  
  4214e9:	out    0x6a,al
  4214eb:	push   edx
  4214ec:	jmp    0x4214f1
  4214ee:	lods   eax,DWORD PTR ds:[esi]
  4214ef:	pop    edx
  4214f0:	(bad)  
  4214f1:	push   cs
  4214f2:	pop    ecx
  4214f3:	inc    edx
  4214f4:	and    eax,0xc4d265fa
  4214f9:	aaa    
  4214fa:	jecxz  0x42154f
  4214fc:	ja     0x421491
  4214fe:	(bad)  
  4214ff:	mov    ds:0xbac543b6,eax
  421504:	(bad)  [edi+0x7b]
  421507:	xchg   edx,eax
  421508:	cdq    
  421509:	in     eax,dx
  42150a:	lods   eax,DWORD PTR ds:[esi]
  42150c:	repnz mov edi,0x703cee75
  421512:	fs ds inc ebp
  421515:	sahf   
  421516:	dec    DWORD PTR [ebp*1-0x7f61a021]
  42151d:	jb     0x42149f
  42151f:	lods   eax,DWORD PTR ds:[esi]
  421520:	pop    es
  421521:	mov    bh,0x61
  421523:	adc    al,0x7c
  421525:	ficomp WORD PTR [edi-0x4c]
  421528:	push   edx
  421529:	and    al,0xcc
  42152b:	sar    DWORD PTR [ecx+edi*8+0xc478f49],1
  421532:	cmp    BYTE PTR [ebx+0x3],0xb8
  421536:	pop    eax
  421537:	(bad)  
  421538:	pop    eax
  421539:	dec    esp
  42153a:	shl    ebp,1
  42153c:	mov    BYTE PTR [eax],0xf7
  42153f:	adc    BYTE PTR [esi-0x1d],dl
  421542:	add    ebx,DWORD PTR ds:0xa1f8f751
  421548:	rcl    esp,cl
  42154a:	rcl    DWORD PTR [ecx-0x4e],0xd6
  42154e:	mov    esi,?
  421550:	icebp  
  421551:	sbb    BYTE PTR [esi+0x26],0x5c
  421555:	stos   BYTE PTR es:[edi],al
  421556:	imul   esp,DWORD PTR [ebx],0xb1b4539c
  42155c:	xor    eax,0x1ec975d7
  421561:	xchg   BYTE PTR [si-0xe2a],bh
  421566:	inc    esi
  421567:	dec    esi
  421568:	pop    esp
  421569:	adc    bl,bl
  42156b:	lods   al,BYTE PTR ds:[esi]
  42156c:	adc    DWORD PTR [esi+0x5c],edi
  42156f:	dec    eax
  421570:	mov    edi,0x18cfb150
  421575:	and    eax,edi
  421577:	jne    0x4215cc
  421579:	mov    ah,0x92
  42157b:	mov    ebx,eax
  42157d:	sahf   
  42157e:	clc    
  42157f:	aaa    
  421580:	ja     0x4215dd
  421582:	adc    DWORD PTR [eax+0x68],0x55
  421586:	mov    dh,0xa8
  421588:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421589:	and    edx,DWORD PTR [ebx-0x37]
  42158c:	or     DWORD PTR [ebx+0x53381d2f],esp
  421592:	push   ecx
  421593:	out    dx,eax
  421594:	jle    0x42159b
  421596:	xchg   esp,eax
  421597:	enter  0x7d06,0x96
  42159b:	xor    al,bl
  42159d:	jecxz  0x421592
  42159f:	cmp    al,0x7c
  4215a1:	(bad)  
  4215a2:	sbb    ebx,DWORD PTR [ebp-0x66]
  4215a5:	xchg   ecx,eax
  4215a6:	lods   eax,DWORD PTR ds:[esi]
  4215a7:	cmp    eax,0x2796cd5c
  4215ac:	retf   0xcd93
  4215af:	mov    al,0xf8
  4215b1:	std    
  4215b2:	imul   esp,DWORD PTR gs:[ebx],0xaab19c04
  4215b9:	and    bl,BYTE PTR [esp+esi*2+0x2b]
  4215bd:	and    bh,ah
  4215bf:	jbe    0x42154e
  4215c1:	jmp    0xca9c95c4
  4215c6:	xor    al,0x7a
  4215c8:	sbb    eax,0xc080e01
  4215cd:	call   0x2162:0x7de9b29d
  4215d4:	int    0xbe
  4215d6:	stos   DWORD PTR es:[edi],eax
  4215d7:	jno    0x421586
  4215d9:	fbstp  TBYTE PTR [ecx]
  4215db:	pop    ds
  4215dc:	mov    edx,0xf39c1b4a
  4215e1:	je     0x421623
  4215e3:	fisttp DWORD PTR ds:0x140732c0
  4215e9:	(bad)
  4215ee:	into   
  4215ef:	test   bl,0x24
  4215f2:	or     DWORD PTR [edi+0x2b],0x6cca67a6
  4215f9:	retf   0xd35
  4215fc:	mov    ch,dh
  4215fe:	jg     0x421628
  421600:	dec    edx
  421602:	(bad)  
  421603:	jmp    0x42165f
  421605:	mov    esp,ecx
  421607:	push   0x56
  421609:	add    eax,0x9519c75f
  42160e:	mov    ebp,0xd4a8df3f
  421613:	jp     0x42167c
  421615:	psrlw  mm6,mm6
  421618:	sbb    DWORD PTR [ecx],edi
  42161a:	xchg   bh,al
  42161c:	call   0x6c29:0xfbac4664
  421623:	imul   eax,DWORD PTR [edi],0xebf2ddf6
  421629:	out    dx,al
  42162a:	xlat   BYTE PTR ds:[ebx]
  42162b:	cli    
  42162c:	fst    QWORD PTR [edi+esi*2]
  42162f:	scas   eax,DWORD PTR es:[edi]
  421630:	add    BYTE PTR [edi+0x23a9d31e],bl
  421636:	(bad)  
  421637:	mov    bh,0xa3
  421639:	jecxz  0x421629
  42163b:	sub    ah,bl
  42163d:	sub    BYTE PTR [ecx],bl
  42163f:	adc    eax,DWORD PTR [ecx]
  421641:	test   DWORD PTR [eax+0x1c],0x8109141d
  421648:	jne    0x4215fd
  42164a:	idiv   BYTE PTR [ebp-0x66]
  42164d:	jae    0x421670
  42164f:	push   es
  421650:	xchg   ebx,eax
  421651:	sub    DWORD PTR [eax+ebx*4],ebp
  421654:	rcl    BYTE PTR [eax-0xa],0x46
  421658:	jle    0x4215ea
  42165a:	rcl    DWORD PTR [edi+0x687d753d],cl
  421660:	daa    
  421661:	adc    bh,BYTE PTR [ecx]
  421663:	or     bl,BYTE PTR [bx+0x5163]
  421668:	mov    ch,0xe3
  42166b:	ja     0x4216e5
  42166d:	mov    edi,0x8f91b6f3
  421672:	xlat   BYTE PTR ds:[ebx]
  421673:	sub    al,0xa2
  421675:	fstp   DWORD PTR [ecx+0x4e]
  421678:	fs pop edi
  42167a:	mov    edi,0xb5db8f4b
  42167f:	sbb    eax,0xdcfc47b7
  421684:	ret    
  421685:	inc    edx
  421686:	pop    ds
  421687:	mov    edx,0x7ad0eadb
  42168c:	cmp    al,0xe0
  42168e:	adc    eax,0xdce5f95b
  421693:	dec    eax
  421694:	jmp    0x78234ba8
  421699:	dec    edx
  42169a:	mov    eax,ds:0x4ff4d7db
  42169f:	sahf   
  4216a0:	je     0x4216cd
  4216a2:	fsub   DWORD PTR [ebx-0x6dbafc67]
  4216a8:	icebp  
  4216a9:	dec    esp
  4216aa:	pop    eax
  4216ab:	push   eax
  4216ac:	out    0x36,eax
  4216ae:	xchg   ecx,eax
  4216af:	push   cs
  4216b0:	mov    edx,0x90a8b512
  4216b5:	test   al,0xc3
  4216b7:	hlt    
  4216b8:	and    DWORD PTR [edx+ebp*2-0x38],ebp
  4216bc:	ret    0xd5d3
  4216bf:	sub    cl,al
  4216c1:	enter  0x96b7,0xbb
  4216c5:	jbe    0x4216df
  4216c7:	ret    
  4216c8:	xor    BYTE PTR [esi-0x555988ca],bl
  4216ce:	inc    edx
  4216cf:	dec    ebx
  4216d0:	pop    esp
  4216d1:	pop    ecx
  4216d2:	add    al,0xa3
  4216d4:	pop    ebp
  4216d5:	jns    0x42173c
  4216d7:	jbe    0x4216bf
  4216d9:	push   esp
  4216da:	cli    
  4216db:	jns    0x4216bd
  4216dd:	cld    
  4216de:	test   eax,0x717d27d8
  4216e3:	pop    es
  4216e4:	inc    esp
  4216e5:	add    esi,DWORD PTR [esi]
  4216e7:	out    0x9,eax
  4216e9:	xlat   BYTE PTR ds:[ebx]
  4216ea:	in     eax,0xc3
  4216ec:	daa    
  4216ed:	stos   DWORD PTR es:[edi],eax
  4216ee:	or     eax,DWORD PTR [edi+0x45]
  4216f1:	add    BYTE PTR [edi],0xbe
  4216f4:	dec    esp
  4216f5:	xor    dh,0x6c
  4216f8:	push   esi
  4216f9:	or     ebx,edx
  4216fb:	add    al,BYTE PTR [eax+0x6f]
  4216fe:	rol    BYTE PTR [ebp-0x16],1
  421701:	inc    eax
  421702:	(bad)  
  421703:	jmp    0x42175c
  421705:	pop    ebp
  421706:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421707:	addr16 push ebp
  421709:	rcr    BYTE PTR [ebx-0xa],0x4a
  42170d:	pop    es
  42170e:	int    0x71
  421710:	cmc    
  421711:	mov    bh,0x57
  421713:	add    ah,cl
  421715:	dec    ecx
  421716:	scas   al,BYTE PTR es:[edi]
  421717:	sub    BYTE PTR [esi+0x347abe62],bh
  42171d:	loopne 0x4216b1
  42171f:	jecxz  0x4216c4
  421721:	shr    BYTE PTR [eax-0x22ba718a],0x8b
  421728:	sti    
  421729:	fs ins DWORD PTR es:[edi],dx
  42172b:	mov    bl,0x1c
  42172d:	mov    ebx,0x2f40ad38
  421732:	(bad)  
  421733:	jmp    0x42175c
  421735:	dec    esp
  421736:	dec    ebp
  421737:	mov    ebx,0x3ed5f217
  42173c:	inc    ebx
  42173d:	mov    ds:0xde3fe6d4,al
  421742:	out    0xa1,al
  421744:	xor    al,0xb4
  421746:	and    bl,cl
  421748:	inc    edi
  421749:	call   0x8ef0:0x2cd49f6e
  421750:	lds    ecx,FWORD PTR [ebx]
  421752:	mov    ecx,0xe5da5ba0
  421757:	push   0x8be166c2
  42175c:	add    eax,0x54b04ffd
  421762:	push   esp
  421763:	pop    edx
  421764:	adc    al,0x97
  421766:	or     eax,0x749a24b4
  42176b:	add    eax,0x107936eb
  421770:	fdivrp st(0),st
  421772:	neg    DWORD PTR [esi]
  421774:	imul   esp,DWORD PTR [edi-0x7f],0xdc32b61
  42177b:	sbb    eax,0xf3ad3160
  421780:	lock stc 
  421782:	lahf   
  421783:	mov    DWORD PTR [edx+edi*4],0xbb157c05
  42178a:	int    0xb6
  42178c:	sub    al,0xad
  42178e:	test   al,0x20
  421790:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421791:	shl    DWORD PTR [ecx+0x315d18a0],0x34
  421798:	push   ecx
  421799:	mov    esi,gs
  42179b:	icebp  
  42179c:	lock into 
  42179e:	(bad)  
  4217a1:	add    esp,0x6d
  4217a4:	jge    0x4217f0
  4217a6:	fsubr  st(3),st
  4217a8:	mov    al,ds:0xb7c2cddd
  4217ad:	test   BYTE PTR [ebp-0x5b],bh
  4217b0:	loope  0x4217c4
  4217b2:	mov    ds:0x3e45fd9e,eax
  4217b7:	jmp    0x42180b
  4217b9:	stos   DWORD PTR es:[edi],eax
  4217ba:	call   0x1750:0x1b0da411
  4217c1:	test   DWORD PTR [edi],edx
  4217c3:	fnsave [ebx+ecx*1-0x6719b541]
  4217ca:	mov    dh,0x9f
  4217cc:	or     ebp,DWORD PTR [esi]
  4217ce:	mov    DWORD PTR [esi+0x16a645f1],edx
  4217d4:	mov    BYTE PTR [esi+0x4948faa7],0xa4
  4217db:	icebp  
  4217dc:	cdq    
  4217dd:	ins    BYTE PTR es:[edi],dx
  4217de:	xor    eax,0xf24fe701
  4217e3:	fistp  WORD PTR [ebp+edx*1-0x5e]
  4217e7:	fs pop esi
  4217e9:	imul   edi,DWORD PTR [eax],0xffffff81
  4217ec:	imul   ebx,DWORD PTR [edi+ebp*1+0x3f2f3f87],0xcef5379c
  4217f7:	mov    ch,0x9a
  4217f9:	test   ah,0x60
  4217fc:	call   0xf42d:0xa848949a
  421803:	xor    al,0xa7
  421805:	xchg   esi,eax
  421806:	jnp    0x421829
  421808:	(bad)  
  42180a:	and    ebx,eax
  42180c:	loopne 0x4217ad
  42180e:	mov    ds:0xcea0296e,al
  421813:	sbb    esp,DWORD PTR [ecx]
  421815:	popa   
  421816:	mov    ch,0x31
  421818:	pop    esp
  421819:	scas   al,BYTE PTR es:[edi]
  42181a:	into   
  42181b:	or     edi,esp
  42181d:	icebp  
  42181e:	out    0x3d,eax
  421820:	pop    ecx
  421821:	dec    ebx
  421822:	in     eax,dx
  421823:	sub    al,0x67
  421825:	sahf   
  421826:	xchg   esi,eax
  421827:	sub    BYTE PTR [edi+0x78],al
  42182a:	outs   dx,DWORD PTR ds:[esi]
  42182b:	dec    ebx
  42182c:	cwde   
  42182d:	mov    eax,ds:0x1da5a9b6
  421832:	inc    eax
  421833:	loope  0x421897
  421835:	arpl   WORD PTR [edx+0x5e],di
  421838:	cmp    ah,bl
  42183a:	mov    cl,0x6c
  42183c:	test   BYTE PTR [edx-0x73],bh
  42183f:	inc    esp
  421840:	aaa    
  421841:	xchg   esi,eax
  421842:	push   0xc41f3381
  421847:	icebp  
  421848:	pop    esp
  421849:	mov    DWORD PTR [eax-0x66908306],ebx
  42184f:	jno    0x421848
  421851:	and    ch,BYTE PTR [esi]
  421853:	pushf  
  421854:	fcmove st,st(1)
  421856:	jno    0x421895
  421858:	popa   
  421859:	sub    DWORD PTR [edx],0xffffffbf
  42185c:	dec    esi
  42185d:	cmp    BYTE PTR ds:0xc6a188e5,0xd4
  421864:	adc    al,0xfd
  421866:	push   ss
  421867:	(bad)  
  421869:	jl     0x4218c7
  42186b:	int3   
  42186c:	retf   0x49d2
  42186f:	jecxz  0x4218db
  421871:	imul   edi,DWORD PTR [eax+0x25],0x4c285b57
  421878:	test   edi,edx
  42187a:	repz sbb ecx,ebx
  42187d:	cwde   
  42187e:	and    eax,esi
  421880:	pop    ds
  421881:	inc    eax
  421882:	xchg   ebx,eax
  421883:	push   es
  421884:	sub    DWORD PTR [ecx],edi
  421886:	mov    ss,WORD PTR [edi-0x624c77cd]
  42188c:	fadd   QWORD PTR [ebx+0x3d9ca84]
  421892:	jle    0x4218d2
  421894:	test   DWORD PTR [edi-0x58],ebp
  421897:	(bad)  
  421898:	data16 arpl WORD PTR [ebp-0x793e8c97],si
  42189f:	(bad)  
  4218a0:	cmc    
  4218a1:	push   eax
  4218a2:	sub    eax,0x4e733535
  4218a7:	sbb    cl,0xad
  4218aa:	stos   BYTE PTR es:[edi],al
  4218ab:	pop    ss
  4218ac:	ds aas 
  4218ae:	dec    ecx
  4218af:	mov    cs,WORD PTR [ecx]
  4218b1:	push   esi
  4218b2:	imul   esi,ebp,0xd008d4a6
  4218b8:	push   0x88b4d33
  4218bd:	sbb    eax,0x9fb41082
  4218c2:	add    eax,0xc3865432
  4218c7:	cmp    eax,ecx
  4218c9:	add    esp,DWORD PTR [esp+edx*4+0x54]
  4218cd:	sbb    DWORD PTR [esi],ebx
  4218cf:	push   edx
  4218d0:	neg    DWORD PTR [edi]
  4218d2:	jge    0x4218cd
  4218d4:	sbb    cl,BYTE PTR [edx-0x40a94c2b]
  4218da:	mov    bh,0x89
  4218dc:	cmp    DWORD PTR [edx],edi
  4218de:	or     ch,BYTE PTR [edi-0x32b4225b]
  4218e4:	nop
  4218e5:	bound  ebx,QWORD PTR [esi]
  4218e7:	pop    edx
  4218e8:	inc    esi
  4218e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4218ea:	sti    
  4218eb:	push   eax
  4218ec:	mov    ch,0xa2
  4218ee:	ror    ebx,cl
  4218f0:	push   0x16
  4218f2:	lods   eax,DWORD PTR ds:[esi]
  4218f3:	cmp    ah,dh
  4218f5:	xlat   BYTE PTR ds:[ebx]
  4218f6:	add    BYTE PTR [esi-0x2a],ch
  4218f9:	xchg   ebp,eax
  4218fa:	ret    0x7369
  4218fd:	cmp    dl,cl
  4218ff:	inc    edi
  421900:	mov    al,ds:0x4b66a310
  421905:	or     BYTE PTR [ecx+0x7],al
  421908:	jns    0x4218fd
  42190a:	(bad)  
  42190b:	mov    ecx,DWORD PTR [esi]
  42190d:	cmp    al,ch
  42190f:	out    dx,al
  421910:	jl     0x4218d5
  421912:	or     DWORD PTR [edx+0x7fdaa73a],ebx
  421918:	dec    ebp
  421919:	push   esi
  42191a:	xchg   esp,eax
  42191b:	push   0x47a835fb
  421920:	in     eax,dx
  421921:	mov    ebp,0x6b3f7d4f
  421926:	sbb    eax,0x62e9e667
  42192b:	sti    
  42192c:	iret   
  42192d:	ins    DWORD PTR es:[edi],dx
  42192e:	mov    ds:0x6993547c,eax
  421933:	add    DWORD PTR [eax+0x344e1798],0xdc930cd
  42193d:	xchg   ebx,eax
  42193e:	stc    
  42193f:	imul   esi,edi,0xffffffe6
  421942:	inc    eax
  421943:	xchg   edx,eax
  421944:	test   al,0x88
  421946:	iret   
  421947:	mov    edx,0x79ebcd86
  42194c:	in     eax,0xa2
  42194e:	jns    0x4219a3
  421950:	xchg   esp,eax
  421951:	xchg   ebp,eax
  421952:	outs   dx,DWORD PTR ds:[esi]
  421953:	sbb    BYTE PTR [ecx-0x595e01d3],dh
  421959:	call   0x2bb1:0x74ba752b
  421960:	int3   
  421961:	add    al,0xb1
  421963:	scas   al,BYTE PTR es:[edi]
  421964:	xchg   ecx,eax
  421965:	hlt    
  421966:	mov    ah,0x3a
  421968:	or     eax,0x78a8b503
  42196d:	jl     0x421959
  42196f:	test   DWORD PTR [edi],ecx
  421971:	pop    ebx
  421972:	cmp    esi,DWORD PTR [ecx+eax*8+0x17]
  421976:	test   DWORD PTR [ecx-0x7f],ebx
  421979:	jns    0x42193b
  42197b:	call   0x9019:0xf4c3e917
  421982:	dec    eax
  421983:	sti    
  421984:	aaa    
  421985:	data16 fwait
  421987:	push   esp
  421988:	and    eax,0xf746d60f
  42198d:	mov    edi,0xea56d6b9
  421992:	sbb    esp,DWORD PTR [ecx]
  421994:	adc    DWORD PTR [ecx-0x6a56a2f4],ebx
  42199a:	hlt    
  42199b:	or     al,0xb6
  42199d:	(bad)  
  42199e:	loopne 0x4219eb
  4219a0:	inc    BYTE PTR [ecx-0x3c]
  4219a3:	pop    ebx
  4219a4:	hlt    
  4219a5:	inc    ebp
  4219a6:	mov    dl,0x8d
  4219a8:	ss into 
  4219aa:	int    0x5
  4219ac:	push   cs
  4219ad:	pop    ebp
  4219ae:	adc    BYTE PTR [esi-0x55],0x27
  4219b2:	mov    esi,es
  4219b4:	mov    ebp,0x59a48e9c
  4219b9:	cld    
  4219ba:	xchg   edi,eax
  4219bb:	clc    
  4219bc:	or     al,0x43
  4219be:	scas   eax,DWORD PTR es:[edi]
  4219bf:	fadd   QWORD PTR [esi-0x1d]
  4219c2:	dec    esi
  4219c3:	test   BYTE PTR ds:0xe58e035c,0x9
  4219ca:	push   0xfb5ac759
  4219cf:	add    eax,0x12f395fb
  4219d4:	mov    bh,ah
  4219d6:	addr16 or al,0x41
  4219d9:	or     esi,DWORD PTR [esp+eax*4]
  4219dc:	push   es
  4219dd:	ja     0x586cbba9
  4219e3:	lods   eax,DWORD PTR ds:[esi]
  4219e4:	test   al,0xb1
  4219e6:	stos   BYTE PTR es:[edi],al
  4219e7:	sbb    ch,BYTE PTR [edx]
  4219e9:	fadd   DWORD PTR [esi+esi*8+0x43]
  4219ed:	call   ebp
  4219ef:	lods   eax,DWORD PTR ds:[esi]
  4219f0:	popf   
  4219f1:	lea    edx,[eax]
  4219f3:	inc    ecx
  4219f4:	or     DWORD PTR [ecx-0x6489999e],0x3eb3609c
  4219fe:	jae    0x4219f8
  421a00:	jecxz  0x421a3f
  421a02:	mov    ch,0xa3
  421a04:	xor    bh,dh
  421a06:	dec    esi
  421a07:	mov    edx,0x2b41e784
  421a0c:	(bad)  
  421a0d:	jo     0x421a4b
  421a0f:	arpl   WORD PTR [edi-0x72],bp
  421a12:	data16 aaa 
  421a14:	xlat   BYTE PTR ds:[ebx]
  421a15:	xor    bh,ah
  421a17:	xor    dh,BYTE PTR ds:0x30d760d7
  421a1d:	jg     0x421a3e
  421a1f:	loop   0x421a0a
  421a21:	dec    edi
  421a22:	add    al,0xf0
  421a24:	stos   BYTE PTR es:[edi],al
  421a25:	(bad)  
  421a26:	pop    ds
  421a27:	lds    ecx,FWORD PTR [edi-0x25]
  421a2a:	pop    edx
  421a2b:	push   ecx
  421a2c:	stc    
  421a2d:	push   cs
  421a2e:	pop    es
  421a2f:	shl    esi,0x9
  421a32:	add    DWORD PTR [ebx],ebp
  421a34:	or     DWORD PTR [edi],ebp
  421a36:	fcmovne st,st(0)
  421a38:	(bad)  
  421a3a:	mov    bh,0x27
  421a3c:	aas    
  421a3d:	pop    es
  421a3e:	sti    
  421a3f:	jbe    0x421a39
  421a41:	mov    ds:0xf5e2206c,al
  421a46:	adc    BYTE PTR [esp+edx*1+0x17],0x52
  421a4b:	mov    esi,0x614e658b
  421a50:	add    ebp,DWORD PTR [eax+ebx*2]
  421a53:	push   ds
  421a54:	dec    ecx
  421a55:	mov    fs,WORD PTR ds:0x47ce3ba9
  421a5b:	repz sub eax,0x74da090e
  421a61:	retfw  
  421a63:	scas   eax,DWORD PTR es:[edi]
  421a64:	popa   
  421a65:	les    ebp,FWORD PTR [esi]
  421a67:	xor    BYTE PTR [edi-0x3bcbbcf7],dh
  421a6d:	jbe    0x421aec
  421a6f:	(bad)  
  421a70:	cmc    
  421a71:	adc    eax,0xabeb8e5b
  421a76:	or     bl,0x75
  421a79:	aam    0xfd
  421a7b:	cmp    eax,0x8a003521
  421a80:	call   0x65faf9e6
  421a85:	outs   dx,BYTE PTR ds:[esi]
  421a86:	add    eax,0x6acc4c76
  421a8b:	pop    esp
  421a8c:	xchg   esi,eax
  421a8d:	(bad)  
  421a8e:	neg    BYTE PTR [ebx]
  421a90:	repnz pusha 
  421a92:	xchg   esi,eax
  421a93:	imul   ebp,DWORD PTR [ebx+esi*8+0x7d],0xffffffed
  421a98:	lods   eax,DWORD PTR ds:[esi]
  421a99:	pop    ecx
  421a9a:	rcr    DWORD PTR [ecx],cl
  421a9c:	cmp    DWORD PTR fs:[eax+0x3edcc67d],ebx
  421aa3:	dec    edx
  421aa4:	(bad)  
  421aa5:	pop    ecx
  421aa6:	push   ebp
  421aa7:	aad    0x8
  421aa9:	pop    edi
  421aaa:	arpl   WORD PTR [edi-0x40],bx
  421aad:	ret    0x41b7
  421ab0:	adc    al,0x37
  421ab2:	lea    ebx,[edi+0x5c33e346]
  421ab8:	call   0x4ca6bd8
  421abd:	pop    ebp
  421abe:	rol    BYTE PTR [esi-0x42],1
  421ac1:	cmp    eax,0x6e835496
  421ac6:	jno    0x421b3d
  421ac8:	(bad)  
  421ac9:	fisttp WORD PTR [ecx-0x11]
  421acc:	push   0x7b
  421ace:	or     edx,edi
  421ad0:	imul   edi,ebp,0x7c
  421ad3:	fistp  WORD PTR [ebp-0x40]
  421ad6:	jo     0x421b09
  421ad8:	pushf  
  421ad9:	xchg   bl,bh
  421adb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421adc:	adc    BYTE PTR [ebp+0x37f88417],al
  421ae2:	(bad)  
  421ae5:	xor    eax,0x9bd5806d
  421aea:	or     edi,DWORD PTR [edi+0xf]
  421aed:	and    al,0x5a
  421aef:	leave  
  421af0:	push   esp
  421af1:	fisubr DWORD PTR [edi-0x6f9ed676]
  421af7:	fnstcw WORD PTR [eax+0x57ae36e3]
  421afd:	aaa    
  421afe:	fisttp WORD PTR [esi]
  421b00:	sbb    bh,BYTE PTR [edx+ebx*4+0x53bfaea2]
  421b07:	hlt    
  421b08:	shl    BYTE PTR [edx+0x3c2aff39],1
  421b0e:	daa    
  421b0f:	push   esi
  421b10:	in     eax,dx
  421b11:	or     ch,BYTE PTR [esi-0x60]
  421b14:	shr    BYTE PTR [ebp+0x5c],cl
  421b17:	mov    edx,DWORD PTR [edi]
  421b19:	call   0xc0111905
  421b1e:	les    ecx,FWORD PTR [edi+0x1ca7a300]
  421b24:	test   ah,ch
  421b26:	jne    0x421aab
  421b28:	stos   DWORD PTR es:[edi],eax
  421b29:	and    eax,esi
  421b2b:	inc    ecx
  421b2c:	or     edx,DWORD PTR [edi+0x72687f39]
  421b32:	push   ebp
  421b33:	inc    esi
  421b34:	pusha  
  421b35:	xlat   BYTE PTR ds:[ebx]
  421b36:	mov    ebp,DWORD PTR [ebx]
  421b38:	stos   BYTE PTR es:[edi],al
  421b39:	pop    edx
  421b3a:	cmp    DWORD PTR [ebx+0x56ebe626],edx
  421b40:	das    
  421b41:	jo     0x421ace
  421b43:	add    BYTE PTR [ecx-0x29c4f8f],dh
  421b49:	mov    ebp,0xc8b30885
  421b4e:	jnp    0x421b45
  421b50:	sahf   
  421b51:	push   ebp
  421b52:	push   esi
  421b53:	mov    dl,0xef
  421b55:	aaa    
  421b56:	xchg   BYTE PTR [eax-0x12c8877d],cl
  421b5c:	mov    eax,ds:0x65e3c1ae
  421b61:	jns    0x421b7b
  421b63:	fisttp DWORD PTR cs:[eax+0x5c15cce5]
  421b6a:	xchg   ebx,eax
  421b6b:	xlat   BYTE PTR ds:[ebx]
  421b6c:	lods   eax,DWORD PTR ds:[esi]
  421b6d:	mov    ch,0xe7
  421b6f:	sub    edx,DWORD PTR [ecx-0xaded814]
  421b75:	mov    edx,0x510c6e81
  421b7a:	cwde   
  421b7b:	(bad)  
  421b7d:	push   edx
  421b7e:	mov    edx,0x88e46540
  421b83:	sbb    eax,0xc84ebf5d
  421b88:	fist   WORD PTR [edx+0x1176cc3e]
  421b8e:	pop    eax
  421b8f:	cmp    DWORD PTR [eax-0x1dbb9148],esi
  421b95:	out    0xfa,al
  421b97:	pushf  
  421b98:	mov    ah,0x5c
  421b9a:	sub    esp,ebp
  421b9c:	xor    DWORD PTR [edx-0x56],ebx
  421b9f:	mov    edi,0xa58629a8
  421ba4:	ffreep st(6)
  421ba6:	push   ecx
  421ba7:	gs cmp eax,0x235f4b30
  421bad:	mov    esi,0xa9823aac
  421bb2:	popf   
  421bb3:	inc    edx
  421bb4:	push   0x472383ad
  421bb9:	and    bl,dh
  421bbb:	pop    edx
  421bbc:	out    dx,eax
  421bbd:	lods   eax,DWORD PTR ds:[esi]
  421bbe:	sub    cl,bh
  421bc0:	lea    eax,[ecx+eiz*2]
  421bc3:	mov    cs,ebp
  421bc5:	out    0xb0,eax
  421bc7:	lea    edi,fs:[esi-0x79a25137]
  421bce:	inc    edi
  421bcf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421bd0:	mov    dh,0x85
  421bd2:	add    al,0x5f
  421bd4:	mov    ds:0xee5f5b15,al
  421bd9:	lods   eax,DWORD PTR ds:[esi]
  421bda:	inc    edx
  421bdb:	dec    edx
  421bdc:	call   0x1a245384
  421be1:	jns    0x421c26
  421be3:	mov    esi,0x4a1fd789
  421be8:	jbe    0x421c66
  421bea:	xchg   edi,eax
  421beb:	addr16 add eax,0x29b11e2a
  421bf1:	jmp    0x63699b19
  421bf6:	cdq    
  421bf7:	fwait
  421bf8:	pop    ebp
  421bf9:	xchg   ecx,eax
  421bfa:	shr    BYTE PTR [ecx],cl
  421bfc:	dec    esi
  421bfd:	adc    BYTE PTR [edx],dl
  421bff:	pop    ss
  421c00:	invd   
  421c02:	neg    BYTE PTR [esi+0x35]
  421c05:	call   0xffbd04ab
  421c0a:	(bad)  
  421c0b:	retf   
  421c0c:	or     ecx,DWORD PTR [eax-0x1e9b874]
  421c12:	xchg   esp,eax
  421c13:	sbb    al,0x76
  421c15:	sbb    eax,0x405a8989
  421c1a:	fidivr WORD PTR [ebx-0x3]
  421c1d:	js     0x421c1e
  421c1f:	mov    esp,0x60cf303e
  421c24:	adc    eax,0x3879e83a
  421c29:	in     al,dx
  421c2a:	adc    eax,0x7494dc2c
  421c2f:	sti    
  421c30:	sbb    eax,0x67b92790
  421c35:	push   esp
  421c36:	(bad)  
  421c37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c38:	mov    eax,0xfbf0b9f6
  421c3d:	fistp  DWORD PTR [edi-0x80]
  421c40:	imul   esi,DWORD PTR [edi-0x40],0x8
  421c44:	data16 cmp ch,BYTE PTR [ebx]
  421c47:	mov    bl,0x9c
  421c49:	dec    edi
  421c4a:	daa    
  421c4b:	hlt    
  421c4c:	daa    
  421c4d:	imul   ch
  421c4f:	pop    DWORD PTR [eax+0x315f4089]
  421c55:	(bad)  
  421c56:	jo     0x421c05
  421c58:	outs   dx,DWORD PTR ds:[esi]
  421c59:	adc    BYTE PTR [ecx-0x6b],dh
  421c5c:	jns    0x421c4d
  421c5e:	mov    ah,0xf3
  421c60:	js     0x421cb7
  421c62:	mov    ah,0xa7
  421c64:	sbb    edi,esi
  421c66:	dec    eax
  421c67:	or     ecx,ebp
  421c69:	cmp    BYTE PTR [esi],bl
  421c6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c6c:	mov    ds,WORD PTR [edi+0x434a42a3]
  421c72:	sbb    ebx,0x2feba64a
  421c78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c79:	add    eax,0xf2794a8f
  421c7e:	jbe    0x79a25bc0
  421c84:	jns    0x421c3e
  421c86:	shl    DWORD PTR [ebx+0x433099d0],1
  421c8c:	mov    DWORD PTR [esi-0x78],eax
  421c8f:	adc    eax,0x343eba5b
  421c94:	arpl   WORD PTR [ebp-0x7e],bp
  421c97:	cmp    DWORD PTR [ebx+0xcd1de6f],esp
  421c9d:	lock out 0xc6,eax
  421ca0:	mov    eax,0xcf7ff665
  421ca5:	clc    
  421ca6:	(bad)  
  421ca7:	test   dl,0x88
  421caa:	or     DWORD PTR [ebp+0x15],edx
  421cad:	pop    edx
  421cae:	xchg   ebx,eax
  421caf:	lea    eax,[esi]
  421cb1:	cmc    
  421cb2:	xor    eax,0xe3338214
  421cb7:	(bad)
  421cba:	mov    esi,0xb4532bb2
  421cbf:	xor    ebx,DWORD PTR [ebp+0x52]
  421cc2:	and    ah,BYTE PTR [edx+0x21]
  421cc5:	dec    BYTE PTR [ebx-0x7]
  421cc8:	xor    edx,DWORD PTR [edx+0x2]
  421ccb:	or     dl,BYTE PTR [edi+0x366a902d]
  421cd1:	xor    dl,BYTE PTR [ebx]
  421cd3:	addr16 cld 
  421cd5:	(bad)  
  421cd6:	call   0xa101a478
  421cdb:	stos   BYTE PTR es:[edi],al
  421cdc:	xchg   ebx,eax
  421cdd:	out    0x0,al
  421cdf:	mov    ebx,0x183f0ada
  421ce4:	cs gs cmp al,bl
  421ce8:	call   0xe1cd:0xbe2c13fa
  421cef:	cdq    
  421cf0:	and    DWORD PTR [eax-0x2d],ebx
  421cf3:	jne    0x421d09
  421cf5:	sub    DWORD PTR [ebp-0xe],esp
  421cf8:	and    DWORD PTR [edx-0x6f8d3ef1],eax
  421cfe:	inc    esi
  421cff:	jecxz  0x421cc1
  421d01:	into   
  421d02:	dec    esp
  421d03:	dec    edx
  421d04:	fcomp  st(0)
  421d06:	sar    BYTE PTR [ebx+ebp*1-0x831978e],0x9c
  421d0e:	dec    edx
  421d0f:	jb     0x421d78
  421d11:	es cmc 
  421d13:	idiv   BYTE PTR [eax-0x79]
  421d16:	sub    eax,0xb2131e79
  421d1b:	test   BYTE PTR [eax],bh
  421d1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d1e:	cvttps2pi mm7,xmm2
  421d21:	mov    al,0x44
  421d23:	jmp    0xb233:0xd49eee26
  421d2a:	push   ebp
  421d2b:	or     eax,0x7f812b70
  421d30:	adc    BYTE PTR [ebx+0x4003b90c],0x19
  421d37:	push   ebx
  421d38:	inc    esp
  421d39:	mov    bh,0x67
  421d3b:	int    0xf3
  421d3d:	or     bl,ch
  421d3f:	aas    
  421d40:	push   ecx
  421d41:	mov    eax,ds:0xde43294d
  421d46:	inc    esp
  421d47:	jmp    0x421d78
  421d49:	nop
  421d4a:	adc    ah,BYTE PTR [edx-0x7892498d]
  421d50:	mov    al,ds:0x5a26cbae
  421d55:	mov    BYTE PTR [esi+0x3906c25e],bh
  421d5b:	sbb    esp,ecx
  421d5d:	nop
  421d5e:	into   
  421d5f:	cdq    
  421d60:	push   es
  421d61:	jae    0x421d93
  421d63:	inc    edi
  421d64:	jne    0x421dbd
  421d66:	and    bl,BYTE PTR [ebx-0x7aa057f7]
  421d6c:	mov    ds,WORD PTR [ecx]
  421d6e:	push   esp
  421d6f:	jmp    FWORD PTR [ecx]
  421d71:	inc    edi
  421d72:	mov    ebx,edi
  421d74:	int    0x6a
  421d76:	ja     0x421d1f
  421d78:	cwde   
  421d79:	adc    ebx,esi
  421d7b:	sub    DWORD PTR [ecx+0x63d7d3f4],edx
  421d81:	pop    ds
  421d82:	mov    fs,WORD PTR [ebx]
  421d84:	and    BYTE PTR [edi+0x18],cl
  421d87:	add    esp,DWORD PTR [edx-0x7f7d0e31]
  421d8d:	enter  0xe580,0xde
  421d91:	xor    dh,ah
  421d93:	push   edi
  421d94:	jns    0x421d66
  421d96:	inc    edi
  421d97:	out    0xc4,eax
  421d99:	adc    al,0x36
  421d9b:	lock popa 
  421d9d:	pop    edi
  421d9e:	cmp    eax,0xe96154a7
  421da3:	add    ebp,ebp
  421da5:	jno    0x421d2d
  421da7:	inc    ebp
  421da8:	pop    eax
  421da9:	pop    ecx
  421daa:	adc    bl,BYTE PTR [edi]
  421dac:	xor    ah,BYTE PTR [ebp+0x238279c]
  421db2:	pop    ds
  421db3:	xor    al,dl
  421db5:	push   eax
  421db6:	mov    ds:0xec4d16fd,al
  421dbb:	xor    ebx,DWORD PTR [esi]
  421dbd:	jne    0x421d76
  421dbf:	push   ds
  421dc0:	pop    eax
  421dc1:	jp     0x421d8f
  421dc3:	lea    edx,[ebx]
  421dc5:	hlt    
  421dc6:	jno    0x421db7
  421dc8:	mov    eax,0x2fe06222
  421dcd:	aad    0x2
  421dcf:	stc    
  421dd0:	sub    DWORD PTR [edi+0x4a51b329],esp
  421dd6:	mov    ch,0x26
  421dd8:	pusha  
  421dd9:	ficom  DWORD PTR ds:0x665ebbd0
  421ddf:	sub    ecx,ebp
  421de1:	pop    ebx
  421de2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421de3:	cli    
  421de4:	(bad)
  421de9:	mov    DWORD PTR [esi],ebp
  421deb:	and    al,0x15
  421ded:	loopne 0x421db2
  421def:	ja     0x421d83
  421df1:	jl     0x421dda
  421df3:	pop    ebx
  421df4:	cmp    DWORD PTR [bp+si+0x33],0x52
  421df9:	icebp  
  421dfa:	rol    edi,0xf
  421dfd:	sbb    eax,0xc6f308c1
  421e02:	and    eax,esi
  421e04:	shr    esp,0xad
  421e07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e08:	gs add al,0xd7
  421e0b:	push   esi
  421e0c:	ja     0x421dba
  421e0e:	sbb    ecx,DWORD PTR [ebx+0x108bfa56]
  421e14:	jne    0x421e0a
  421e16:	loope  0x421e40
  421e18:	sub    BYTE PTR [eax+0x2f],0x40
  421e1c:	ins    BYTE PTR es:[edi],dx
  421e1d:	push   edi
  421e1e:	(bad)  
  421e1f:	fnstenv [ecx+0x7d]
  421e22:	adc    BYTE PTR [edx],ch
  421e24:	in     eax,0x91
  421e26:	ror    DWORD PTR [edi-0x65],1
  421e29:	mov    eax,0x9fbd6bf6
  421e2e:	cmp    al,0x18
  421e30:	daa    
  421e31:	repnz xchg bx,ax
  421e34:	lea    eax,[ecx+0x11]
  421e37:	mov    WORD PTR [ebx-0x54423928],?
  421e3d:	mov    ah,0x61
  421e3f:	push   ebx
  421e40:	lods   eax,DWORD PTR ds:[esi]
  421e41:	loopne 0x421e78
  421e43:	outs   dx,DWORD PTR ds:[esi]
  421e44:	repz leave 
  421e46:	cmp    esi,DWORD PTR ds:[ebx-0x2fd12ee1]
  421e4d:	rcr    BYTE PTR [eax+0x374e2808],cl
  421e53:	ret    0xd002
  421e56:	or     al,0x81
  421e58:	cmp    eax,0x9d03a046
  421e5d:	das    
  421e5e:	jns    0x421e0d
  421e60:	xor    bh,dh
  421e62:	ins    DWORD PTR es:[edi],dx
  421e63:	ss pop es
  421e65:	lea    esi,[edx-0x7]
  421e68:	mov    ds:0xb301c4c0,eax
  421e6d:	jp     0x421e7f
  421e6f:	jecxz  0x421e3e
  421e71:	adc    DWORD PTR [esi],ebp
  421e73:	lods   eax,DWORD PTR ds:[esi]
  421e74:	cmp    BYTE PTR [edx],bh
  421e76:	and    DWORD PTR [esi-0x1ace3fbe],esp
  421e7c:	fiadd  DWORD PTR [edi+0x24]
  421e7f:	fsub   DWORD PTR [esi-0x7fd827ad]
  421e85:	sub    DWORD PTR [esi-0x68],edx
  421e88:	push   esp
  421e89:	xchg   edi,eax
  421e8a:	adc    bh,BYTE PTR [eax+0x6d42db28]
  421e90:	addr16 xor al,0x11
  421e93:	jp     0x421e79
  421e95:	pop    ds
  421e96:	pop    esp
  421e97:	in     al,dx
  421e98:	mov    ebx,0x149b95b2
  421e9d:	pop    edx
  421e9e:	dec    esi
  421e9f:	xchg   edi,eax
  421ea0:	xchg   esi,eax
  421ea1:	cdq    
  421ea2:	or     DWORD PTR [edi],0x44
  421ea5:	mov    esp,0xf75d6c67
  421eaa:	adc    al,0xb0
  421eac:	rol    ecx,cl
  421eae:	cdq    
  421eaf:	(bad)  
  421eb0:	(bad)  gs:[ebp-0x39]
  421eb4:	mov    ch,0xee
  421eb6:	cmp    BYTE PTR [ebp-0x49e89a6c],al
  421ebc:	pop    edi
  421ebd:	add    BYTE PTR [edi+0x3dbc2db5],0x3e
  421ec4:	sub    al,0xc2
  421ec6:	aam    0xed
  421ec8:	into   
  421ec9:	and    BYTE PTR [esi+0x26f93a68],ah
  421ecf:	hlt    
  421ed0:	mov    esi,DWORD PTR [eax+0x6a6ef06c]
  421ed6:	add    DWORD PTR [edx],0xffffffb5
  421ed9:	sbb    al,0xf8
  421edb:	or     al,0x19
  421edd:	(bad)  
  421ede:	pop    ebx
  421edf:	pop    ds
  421ee0:	mov    ebp,0x1146aee4
  421ee5:	imul   esi,DWORD PTR [ecx+0x8],0x30fa9ffe
  421eec:	in     eax,dx
  421eed:	add    DWORD PTR [ebx+0x39],ecx
  421ef0:	adc    ecx,DWORD PTR [edi]
  421ef2:	cdq    
  421ef3:	mov    ebx,0xac4f6216
  421ef8:	sbb    BYTE PTR [ebx],bh
  421efa:	push   esi
  421efb:	pop    eax
  421efc:	rcr    DWORD PTR [edx+ebp*2+0x34],1
  421f00:	mov    dl,0x99
  421f02:	ror    ch,0x1
  421f05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f06:	nop
  421f07:	ret    0xa697
  421f0a:	rcl    edi,cl
  421f0c:	dec    esp
  421f0e:	je     0x421efb
  421f10:	mov    BYTE PTR [ebx+edi*1],al
  421f13:	or     eax,0x5aab754e
  421f18:	fdivr  QWORD PTR [esi-0x61]
  421f1b:	push   ss
  421f1c:	push   0x38b173ed
  421f21:	fstp   QWORD PTR [esi]
  421f23:	cli    
  421f24:	mov    edx,ecx
  421f26:	ins    BYTE PTR es:[edi],dx
  421f27:	add    dl,BYTE PTR ds:[ebx+0x6ed77a21]
  421f2e:	imul   eax,DWORD PTR [edi+0x619733a9],0xc968fdcb
  421f38:	and    eax,0x99285acd
  421f3d:	sub    eax,0xf9727b94
  421f42:	push   ecx
  421f43:	add    al,0xff
  421f45:	or     al,0x31
  421f47:	jl     0x421ecd
  421f49:	mov    eax,ds:0x12be4be5
  421f4e:	aad    0x65
  421f50:	fcmovnb st,st(2)
  421f52:	sar    edx,cl
  421f54:	sub    al,0xd0
  421f56:	add    eax,0x8fe27058
  421f5b:	shl    BYTE PTR [ebp-0x74],0x7e
  421f5f:	and    bl,BYTE PTR [edx+0x257a11f7]
  421f65:	fs (bad) 
  421f67:	stos   DWORD PTR es:[edi],eax
  421f68:	mov    al,ds:0x3c83388
  421f6d:	into   
  421f6e:	jne    0x41d82d
  421f74:	mov    ecx,DWORD PTR [ebp-0x8]
  421f77:	xor    ecx,eax
  421f79:	mov    eax,DWORD PTR [ebp+0x10]
  421f7c:	add    ecx,esi
  421f7e:	mov    DWORD PTR [eax],ecx
  421f80:	pop    edi
  421f81:	pop    esi
  421f82:	pop    ebx
  421f83:	leave  
  421f84:	ret    0xc
  421f87:	push   ebp
  421f88:	mov    ebp,esp
  421f8a:	sub    esp,0x7c
  421f8d:	push   esi
  421f8e:	sbb    esi,esi
  421f90:	push   edi
  421f91:	mov    eax,ds:0x42f36b
  421f96:	adc    esi,esi
  421f98:	mov    DWORD PTR [ebp-0x24],eax
  421f9b:	and    eax,DWORD PTR ds:0x42b008
  421fa1:	mov    eax,ds:0x42f477
  421fa6:	adc    edi,0x31bd
  421fac:	mov    DWORD PTR [ebp-0x34],eax
  421faf:	mov    eax,ds:0x424a66
  421fb4:	mov    esi,DWORD PTR ds:0x424b04
  421fba:	sub    eax,esi
  421fbc:	or     eax,DWORD PTR [eax+esi*1]
  421fbf:	and    DWORD PTR [ebp-0x30],0x0
  421fc3:	sub    esi,DWORD PTR ds:0x42d014
  421fc9:	mov    DWORD PTR [ebp-0x2c],0xf89c85b0
  421fd0:	mov    DWORD PTR [ebp-0x28],0xf89c85b1
  421fd7:	mov    eax,DWORD PTR [ebp-0x10]
  421fda:	mov    ecx,DWORD PTR [ebp-0x10]
  421fdd:	not    edi
  421fdf:	sub    eax,ecx
  421fe1:	mov    esi,DWORD PTR ds:0x429020
  421fe7:	xor    DWORD PTR ds:0x42a018,esi
  421fed:	mov    DWORD PTR [ebp-0x10],eax
  421ff0:	inc    DWORD PTR ds:0x42900c
  421ff6:	xor    DWORD PTR [ebp-0x10],0xf89cb5b0
  421ffd:	xor    edi,edi
  421fff:	xor    edi,DWORD PTR ds:0x42e004
  422005:	mov    edi,DWORD PTR [edi]
  422007:	sub    DWORD PTR ds:0x42901c,edi
  42200d:	mov    eax,DWORD PTR [ebp-0x18]
  422010:	mov    DWORD PTR ds:0x429028,0x1d
  42201a:	cmp    DWORD PTR ds:0x429028,0x0
  422021:	je     0x422077
  422027:	cmp    DWORD PTR ds:0x429028,0x4
  42202e:	jbe    0x422077
  422034:	jmp    0x422049
  422039:	push   0x1746
  42203e:	push   0x4baa
  422043:	call   DWORD PTR ds:0x430027
  422049:	cmp    DWORD PTR ds:0x429028,0x5
  422050:	jne    0x422063
  422056:	mov    esi,DWORD PTR ds:0x429028
  42205c:	dec    esi
  42205d:	mov    DWORD PTR ds:0x429028,esi
  422063:	xor    esi,esi
  422065:	add    esi,DWORD PTR ds:0x429028
  42206b:	dec    esi
  42206c:	mov    DWORD PTR ds:0x429028,esi
  422072:	jmp    0x42201a
  422077:	mov    ecx,DWORD PTR [ebp-0x18]
  42207a:	sub    eax,ecx
  42207c:	mov    DWORD PTR [ebp-0x18],eax
  42207f:	sub    edi,DWORD PTR ds:0x42d018
  422085:	or     DWORD PTR [ebp-0x18],0xf89f05b0
  42208c:	mov    eax,DWORD PTR [ebp-0xc]
  42208f:	mov    ecx,DWORD PTR [ebp-0xc]
  422092:	or     esi,0x5a7b
  422098:	sub    eax,ecx
  42209a:	mov    DWORD PTR [ebp-0xc],eax
  42209d:	jmp    0x422ed7
  4220a2:	lea    esp,[ebx-0x440791fa]
  4220a8:	test   DWORD PTR [ebx-0x537f27ca],eax
  4220ae:	mov    BYTE PTR [eax],dh
  4220b0:	sub    bh,bl
  4220b2:	stc    
  4220b3:	mov    BYTE PTR [ebp+0x7a],bh
  4220b6:	pop    ecx
  4220b7:	push   0xb6e97a7a
  4220bc:	and    edx,DWORD PTR [ecx]
  4220be:	jno    0x422065
  4220c0:	aam    0xf9
  4220c2:	mov    edi,0xb21a865a
  4220c7:	jl     0x422140
  4220c9:	pop    es
  4220ca:	dec    esi
  4220cb:	add    al,0x90
  4220cd:	pushf  
  4220ce:	(bad)  
  4220cf:	and    eax,0xa5c63290
  4220d4:	and    BYTE PTR [edx-0x439b8211],0xc9
  4220db:	xchg   esi,eax
  4220dc:	test   eax,0xed53c3fe
  4220e1:	ret    
  4220e2:	nop
  4220e3:	test   eax,0x83295c40
  4220e8:	and    eax,edx
  4220ea:	mov    esi,0x90cf133f
  4220ef:	jns    0x42213d
  4220f1:	fsubr  QWORD PTR [ecx+eax*8-0x55]
  4220f5:	jo     0x42216e
  4220f7:	popa   
  4220f8:	cmp    DWORD PTR [ecx],ecx
  4220fa:	mov    BYTE PTR [ebx],ch
  4220fc:	pop    esp
  4220fd:	mov    ds:0x5fe98aeb,al
  422102:	and    eax,DWORD PTR [ebp-0x53]
  422105:	arpl   WORD PTR [ebp-0x9],si
  422108:	and    BYTE PTR [ecx],0x9e
  42210b:	sub    BYTE PTR [ecx-0x7e],ch
  42210e:	mov    ebx,0xa14ccd5d
  422113:	iret   
  422114:	scas   al,BYTE PTR es:[edi]
  422115:	das    
  422116:	sbb    eax,0x6807afc8
  42211b:	mov    ecx,0x9a168f25
  422120:	int3   
  422121:	gs mov edi,0x679cd711
  422127:	(bad)  
  422129:	push   DWORD PTR [ebp-0x12]
  42212c:	(bad)  
  42212d:	js     0x4220dd
  42212f:	ss push edi
  422131:	sub    al,0x7a
  422133:	pushf  
  422134:	dec    esi
  422135:	nop
  422136:	pop    fs
  422138:	push   es
  422139:	mov    dl,BYTE PTR [eax-0x1f86271c]
  42213f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422140:	and    esp,DWORD PTR [ebp-0x3e601a0e]
  422146:	add    BYTE PTR [esi-0x6faddb5e],al
  42214c:	mov    edi,edi
  42214e:	xchg   ecx,eax
  42214f:	(bad)  
  422150:	or     bl,BYTE PTR ds:0x67320158
  422156:	(bad)  
  422158:	xchg   BYTE PTR [esi+ebp*4],cl
  42215b:	mov    ds,WORD PTR [eax]
  42215d:	popa   
  42215e:	daa    
  42215f:	mov    DWORD PTR [ebp+0x6f],edi
  422162:	repnz loop 0x4220ed
  422165:	pop    esp
  422166:	xchg   esp,eax
  422167:	dec    ecx
  422168:	ins    DWORD PTR es:[edi],dx
  422169:	cs add eax,0xb5a4a307
  42216f:	xchg   ebp,eax
  422170:	mov    al,ds:0x59e4ac3f
  422175:	mov    al,ds:0xd4060c8d
  42217a:	sub    DWORD PTR [esi+0xaafd272],ebp
  422180:	retf   0x6c28
  422183:	add    BYTE PTR [ecx-0x7e],ch
  422186:	pop    ss
  422187:	mov    edi,0x8cb870c7
  42218c:	push   esi
  42218d:	adc    ah,BYTE PTR [eax]
  42218f:	mov    edi,0xa3275dc7
  422194:	fild   DWORD PTR [ebx-0x767312a3]
  42219a:	in     al,dx
  42219b:	mov    ebp,0xa2f561b3
  4221a0:	mov    cl,0xfb
  4221a2:	test   BYTE PTR [edx+0x7a],cl
  4221a5:	inc    edi
  4221a6:	shl    DWORD PTR [edx-0x3],cl
  4221a9:	mov    ds:0x621d7b23,al
  4221ae:	pop    edx
  4221af:	xlat   BYTE PTR ds:[ebx]
  4221b0:	pop    esi
  4221b1:	call   0x4ff9ee02
  4221b6:	dec    ecx
  4221b7:	mov    ebx,0x1a92ed38
  4221bc:	hlt    
  4221bd:	push   edx
  4221be:	xchg   DWORD PTR [edx-0x41],ecx
  4221c1:	dec    esi
  4221c2:	das    
  4221c3:	pop    edi
  4221c4:	hlt    
  4221c5:	or     bl,BYTE PTR [ebx+0x6f]
  4221c8:	ror    BYTE PTR [esi-0x6f6e0568],0xfb
  4221cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4221d0:	in     eax,dx
  4221d1:	bsr    eax,edx
  4221d4:	stos   BYTE PTR es:[edi],al
  4221d5:	adc    al,0xd8
  4221d7:	jmp    0x4221bf
  4221d9:	ss push edx
  4221db:	(bad)  
  4221dc:	adc    eax,0xaf1ae05e
  4221e1:	pop    bx
  4221e3:	sahf   
  4221e4:	mov    BYTE PTR [ebp+0x56],0xd0
  4221e8:	enter  0x6d89,0x22
  4221ec:	sar    BYTE PTR [eax-0x34],1
  4221ef:	mov    eax,0xd3a2a1e6
  4221f4:	ja     0x4221d2
  4221f6:	sti    
  4221f7:	stos   DWORD PTR es:[edi],eax
  4221f8:	mov    eax,ds:0xd50d318d
  4221fd:	mov    cl,0x4
  4221ff:	nop
  422200:	cld    
  422201:	jg     0x422242
  422203:	cmp    eax,0xcda31a10
  422208:	repnz dec eax
  42220a:	lods   eax,DWORD PTR ds:[esi]
  42220b:	mov    ?,WORD PTR [edi+0x16]
  42220e:	fmul   DWORD PTR [ecx]
  422210:	and    bh,ah
  422212:	inc    ecx
  422213:	in     al,dx
  422214:	pop    esi
  422215:	add    DWORD PTR [edx-0x73],0xffffffcd
  422219:	mov    eax,ds:0xc3a276ab
  42221e:	popf   
  42221f:	fisttp WORD PTR [edi]
  422221:	das    
  422222:	cmc    
  422223:	jecxz  0x422274
  422225:	adc    cl,ch
  422227:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422228:	cmp    eax,0xc7b03aff
  42222d:	or     BYTE PTR [edi+0x32],ch
  422230:	test   eax,0x1b6c15ab
  422235:	in     al,dx
  422236:	imul   ebp,DWORD PTR [ebp-0x650551fd],0xffffffea
  42223d:	mov    bh,0xe7
  42223f:	cld    
  422240:	pop    es
  422241:	call   0xf944d486
  422246:	popf   
  422247:	jl     0x4222a6
  422249:	adc    edi,DWORD PTR [esi-0x6d6650c7]
  42224f:	push   0x1185a926
  422254:	aam    0xae
  422256:	js     0x4222d0
  422258:	rcl    BYTE PTR [eax+0x7],0x92
  42225c:	or     al,0xc3
  42225e:	cmp    cl,ah
  422260:	xor    BYTE PTR [eax+0x14e291a],dl
  422266:	add    BYTE PTR [eax],al
  422268:	mov    eax,ds:0x4659771b
  42226d:	fwait
  42226e:	dec    ebx
  42226f:	or     ebx,DWORD PTR [edx]
  422271:	aas    
  422272:	clc    
  422273:	hlt    
  422274:	ud0    ebp,eax
  422277:	mov    dh,0xe4
  422279:	xchg   esi,eax
  42227a:	shl    edi,0xf6
  42227d:	les    esp,FWORD PTR [eax]
  42227f:	push   0xeac1fc26
  422284:	push   ebp
  422285:	mov    edx,0x619951b5
  42228a:	pop    ebx
  42228b:	shr    DWORD PTR ds:0x20b3a3c3,0x8f
  422292:	push   es
  422293:	mov    bl,0x18
  422295:	xor    DWORD PTR [eax-0x44a087d7],eax
  42229b:	shl    DWORD PTR [esi-0x6d9f9412],0xb4
  4222a2:	cmc    
  4222a3:	push   ebp
  4222a4:	out    dx,eax
  4222a5:	lahf   
  4222a6:	add    ecx,esp
  4222a8:	xlat   BYTE PTR ds:[ebx]
  4222a9:	or     eax,0xfc6f51d7
  4222ae:	push   ss
  4222af:	cmp    eax,DWORD PTR [esi-0x2ee00c8f]
  4222b5:	repnz scas al,BYTE PTR es:[edi]
  4222b7:	js     0xd289245a
  4222bd:	mov    WORD PTR [edi+0x292279d0],ds
  4222c3:	(bad)  ds:0xfb8748a6
  4222c9:	jge    0x422314
  4222cb:	ror    al,0x6c
  4222ce:	in     al,0x75
  4222d0:	out    dx,al
  4222d1:	fldcw  WORD PTR [ebx+0x3d64d4c1]
  4222d7:	push   cs
  4222d8:	ret    0x72b6
  4222db:	mov    edx,0x1fb664d6
  4222e0:	inc    eax
  4222e1:	or     BYTE PTR [eax+0x7f827ce8],dh
  4222e7:	add    DWORD PTR [ecx],ebx
  4222e9:	sub    esp,DWORD PTR [eax]
  4222eb:	mov    ch,0x9e
  4222ed:	stos   DWORD PTR es:[edi],eax
  4222ee:	fdiv   DWORD PTR [edx-0x3528850a]
  4222f4:	and    al,BYTE PTR ds:0x7ffe3ac3
  4222fa:	adc    ch,al
  4222fc:	push   cs
  4222fd:	jne    0x422371
  4222ff:	inc    esp
  422300:	sub    eax,0x558b0e4e
  422305:	push   0xaf758167
  42230a:	icebp  
  42230b:	xor    eax,0x70626561
  422310:	aad    0x64
  422312:	sub    dh,ch
  422314:	ss imul edx,DWORD PTR es:[ebp-0x40eb69a8],0x1ed8284c
  422320:	and    esi,eax
  422322:	push   eax
  422323:	dec    BYTE PTR [esi-0x3a]
  422326:	mov    dl,0x11
  422328:	and    al,0xd
  42232a:	xor    eax,0x22ae92d3
  42232f:	stc    
  422330:	xchg   ecx,eax
  422331:	popa   
  422332:	cs loope 0x4222bb
  422335:	add    DWORD PTR [ebx-0x1d8919ae],ebp
  42233b:	xor    al,0x71
  42233d:	xchg   dl,cl
  42233f:	push   edi
  422340:	jmp    0xdf58ff98
  422345:	mov    ah,0x38
  422347:	fcmovne st,st(5)
  422349:	int3   
  42234a:	sbb    eax,0x2a7b2eb3
  42234f:	fnstcw WORD PTR [esi+esi*2]
  422352:	add    al,0x5
  422354:	leave  
  422355:	fdivr  QWORD PTR [eax]
  422357:	test   DWORD PTR [esi],ecx
  422359:	dec    edi
  42235a:	jmp    0x17602dc1
  42235f:	popa   
  422360:	test   eax,0xe12f4f2
  422365:	mov    dh,0x99
  422367:	jp     0x4223e1
  422369:	fstp   TBYTE PTR [ebx]
  42236b:	push   0x37
  42236d:	jbe    0x4223d2
  42236f:	inc    ecx
  422370:	sub    DWORD PTR [ecx-0x62],edi
  422373:	or     bh,BYTE PTR ds:0xa605c5a4
  422379:	pop    esp
  42237a:	fidivr WORD PTR [esi+0x30f9476e]
  422380:	ret    0x23cb
  422383:	jae    0x4223bd
  422385:	std    
  422386:	aas    
  422387:	aas    
  422388:	(bad)  
  42238b:	mov    esp,0xb2a42142
  422390:	mov    edi,0x622a847e
  422395:	xchg   esi,eax
  422396:	loop   0x42235e
  422398:	and    ah,BYTE PTR [ecx]
  42239a:	(bad)  
  42239b:	cmp    BYTE PTR [eax],dl
  42239d:	push   eax
  42239e:	call   0x7a55:0x8c625304
  4223a5:	cmp    BYTE PTR [ebp-0x2b],cl
  4223a8:	jns    0x4223af
  4223aa:	adc    eax,0xbc0c39b4
  4223af:	scas   al,BYTE PTR es:[edi]
  4223b0:	sbb    edx,edi
  4223b2:	xchg   edx,eax
  4223b3:	(bad)  
  4223b4:	scas   al,BYTE PTR es:[edi]
  4223b5:	cmp    DWORD PTR [esi+0x31],0x17
  4223b9:	retf   
  4223ba:	cli    
  4223bb:	div    BYTE PTR [esp+ebp*8+0x8d01c9]
  4223c2:	pop    ds
  4223c3:	mov    ebx,0x5526a5c8
  4223c8:	dec    eax
  4223c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4223ca:	cmp    al,0x9
  4223cc:	xor    BYTE PTR [eax+eax*2-0x4cf569b8],al
  4223d3:	jecxz  0x4223d4
  4223d5:	pop    ecx
  4223d6:	int    0xe6
  4223d8:	mov    esp,DWORD PTR [esi+0x4e]
  4223db:	arpl   WORD PTR [esi+ecx*1+0x5743ea91],si
  4223e2:	and    BYTE PTR [ebp+edi*1-0x57],0x63
  4223e7:	mov    al,0x9f
  4223e9:	retfw  0x38bb
  4223ed:	sub    DWORD PTR [eax-0x60],eax
  4223f0:	mov    eax,esi
  4223f2:	pushf  
  4223f3:	xchg   ebp,eax
  4223f4:	xlat   BYTE PTR ds:[ebx]
  4223f5:	daa    
  4223f6:	pop    ss
  4223f7:	(bad)  
  4223f8:	pop    edi
  4223f9:	leave  
  4223fa:	ret    0x1cc7
  4223fd:	xchg   DWORD PTR [edx],edx
  4223ff:	jecxz  0x4223cb
  422401:	or     DWORD PTR [ecx+edx*2+0x18d223fd],ebx
  422408:	lahf   
  422409:	imul   esi,DWORD PTR [esi],0xffffffaf
  42240c:	stos   DWORD PTR es:[edi],eax
  42240d:	mov    bh,BYTE PTR cs:[ebx]
  422410:	cmc    
  422411:	or     ebp,DWORD PTR [eax+eax*2-0x387ee54]
  422418:	fisub  WORD PTR [eax-0x6ba22d80]
  42241e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42241f:	jae    0x4223d6
  422421:	in     eax,dx
  422422:	jb     0x422489
  422424:	(bad)  gs:[esi-0x7c]
  422428:	add    al,0x1f
  42242a:	les    esi,FWORD PTR [eax]
  42242c:	rcr    DWORD PTR [edx],cl
  42242e:	arpl   WORD PTR [ecx-0x6c],di
  422431:	rol    DWORD PTR es:[esp+edi*2+0x4e522dcb],0x78
  42243a:	leave  
  42243b:	std    
  42243c:	xor    bh,BYTE PTR es:[esi+0x5e02360f]
  422443:	dec    esp
  422444:	sbb    eax,ebx
  422446:	or     DWORD PTR [edi+0x48],ecx
  422449:	xchg   ebp,eax
  42244a:	fcomp  DWORD PTR [edi]
  42244c:	xchg   edx,eax
  42244d:	and    al,0x40
  42244f:	pop    edi
  422450:	enter  0xff8e,0x44
  422454:	fnstcw WORD PTR [edi]
  422456:	xor    edi,DWORD PTR [eax-0x31d86f39]
  42245c:	xchg   BYTE PTR [ecx*8+0x16bef408],dh
  422463:	fmul   st,st(3)
  422465:	pop    edi
  422466:	inc    esp
  422467:	jg     0x42249e
  422469:	retf   
  42246a:	shr    BYTE PTR [edx+0x7c],cl
  42246d:	add    al,0x5
  42246f:	xchg   ecx,eax
  422470:	and    edi,DWORD PTR [ecx]
  422472:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422473:	inc    esi
  422474:	adc    al,0xd8
  422476:	jb     0x4224dd
  422478:	cli    
  422479:	pop    esp
  42247a:	inc    ecx
  42247b:	shl    BYTE PTR [edx+ecx*2+0x52],cl
  42247f:	loope  0x4224b3
  422481:	jno    0x422414
  422483:	mul    DWORD PTR [esi+0x1c814e0b]
  422489:	jl     0x4224cf
  42248b:	das    
  42248c:	push   ds
  42248d:	in     eax,dx
  42248e:	call   0xdcb2:0x5e3d7e04
  422495:	cvtpi2ps xmm4,QWORD PTR [eax-0x745b5b45]
  42249c:	pop    DWORD PTR ds:0xe19837fa
  4224a2:	push   eax
  4224a3:	xlat   BYTE PTR ds:[ebx]
  4224a4:	cli    
  4224a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4224a6:	push   esp
  4224a7:	imul   eax,DWORD PTR [ebp-0x6eea01dd],0x1f
  4224ae:	add    ah,al
  4224b0:	jmp    0x779e078c
  4224b5:	mov    cl,0x39
  4224b7:	add    DWORD PTR [ebx-0x515cdc23],0x30
  4224be:	xchg   BYTE PTR ds:0x85a77e3d,al
  4224c4:	scas   al,BYTE PTR es:[edi]
  4224c5:	gs push cs
  4224c7:	in     eax,dx
  4224c8:	fldenv [ebp+ecx*1+0x6b]
  4224cc:	(bad)
  4224d0:	mov    ebp,0x99f40d84
  4224d5:	adc    BYTE PTR [ebp-0x7],0xa0
  4224d9:	in     eax,0xb0
  4224db:	cli    
  4224dc:	dec    esi
  4224dd:	xor    BYTE PTR [esi],dh
  4224df:	mov    edx,0x9e8effe4
  4224e4:	bound  edx,QWORD PTR [eax]
  4224e6:	or     BYTE PTR [esi+0x42],dl
  4224e9:	mov    ecx,0x7e22e14a
  4224ee:	loope  0x42251d
  4224f0:	or     BYTE PTR [edi+0x25],ah
  4224f3:	mov    ds:0xadefe33b,eax
  4224f8:	out    0xd8,eax
  4224fa:	loope  0x42255c
  4224fc:	dec    edi
  4224fd:	pop    ds
  4224fe:	(bad)  
  4224ff:	mul    BYTE PTR [ebx+0x13]
  422502:	xchg   esi,eax
  422503:	or     al,0x96
  422505:	std    
  422506:	test   al,0x6e
  422508:	pop    eax
  422509:	push   0xafa15a97
  42250e:	ins    BYTE PTR es:[edi],dx
  42250f:	push   esp
  422510:	jne    0x422581
  422512:	shl    DWORD PTR [ebx+ebx*1],1
  422515:	add    edi,DWORD PTR [esi+0x26]
  422518:	cmp    DWORD PTR [ebx],0x32
  42251b:	sbb    BYTE PTR [esi],bh
  42251d:	dec    esp
  42251e:	fadd   QWORD PTR [ecx]
  422520:	and    al,0x70
  422522:	and    BYTE PTR [edi+edi*8+0x2f],0xd0
  422527:	push   es
  422528:	test   dl,dh
  42252a:	ins    BYTE PTR es:[edi],dx
  42252b:	dec    eax
  42252c:	sbb    DWORD PTR [esi],esi
  42252e:	add    al,0x80
  422530:	sti    
  422531:	sub    eax,0x530df447
  422536:	or     ebx,ecx
  422538:	inc    ebp
  422539:	jae    0x4224ff
  42253b:	cmp    eax,0x7ba6823d
  422540:	rcr    BYTE PTR [esi+0x2d],0x20
  422544:	mov    ds:0x44ee8c05,eax
  422549:	ins    DWORD PTR es:[edi],dx
  42254a:	cmp    al,BYTE PTR [ecx+0x6b]
  42254d:	iret   
  42254e:	aad    0xbb
  422550:	mov    WORD PTR [ecx-0x31352f67],?
  422556:	(bad)  
  422557:	sub    DWORD PTR [eiz*1-0x15f06ed1],esi
  42255e:	or     edi,DWORD PTR [eax+0x1e27ace4]
  422564:	sbb    al,0x94
  422566:	xor    eax,0x2423b537
  42256b:	mov    edx,0xd29133b9
  422570:	leave  
  422571:	jle    0x422598
  422573:	mov    esp,esi
  422575:	mov    eax,ds:0x8cd06839
  42257a:	mov    ecx,DWORD PTR [edx]
  42257c:	aad    0x4c
  42257e:	push   edi
  42257f:	(bad)  
  422580:	out    dx,al
  422581:	lock jo 0x4225a3
  422584:	(bad)  [ebx+0x33]
  422587:	std    
  422588:	test   eax,0xee26f822
  42258d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42258e:	sbb    al,0x2c
  422590:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422591:	sbb    edi,DWORD PTR [esi-0x7b4e9d1d]
  422597:	stos   DWORD PTR es:[edi],eax
  422598:	add    ecx,DWORD PTR [edx-0x1b]
  42259b:	push   ecx
  42259c:	fldcw  WORD PTR [ecx+0x2e]
  42259f:	sti    
  4225a0:	xlat   BYTE PTR ds:[ebx]
  4225a1:	fsubr  QWORD PTR [ecx-0x3e]
  4225a4:	div    BYTE PTR [ebx+ebp*1]
  4225a7:	out    0x9d,al
  4225a9:	sbb    BYTE PTR [ebp-0x1e],cl
  4225ac:	cdq    
  4225ad:	arpl   WORD PTR [eax],cx
  4225af:	cmp    edi,DWORD PTR [ecx-0x12]
  4225b2:	push   ecx
  4225b3:	xchg   ecx,eax
  4225b4:	std    
  4225b5:	(bad)  
  4225b6:	hlt    
  4225b7:	push   edx
  4225b8:	ret    0x8dbe
  4225bb:	je     0x42255d
  4225bd:	dec    ecx
  4225be:	or     DWORD PTR [esi-0x3e9f7c03],esi
  4225c4:	mov    al,0xf3
  4225c6:	lods   al,BYTE PTR ds:[esi]
  4225c7:	adc    eax,0x1c7e0428
  4225cc:	xor    BYTE PTR [edi+0x6a63eeaa],bl
  4225d2:	fwait
  4225d3:	imul   esp,DWORD PTR [edx-0x43b9f075],0x8841a5ef
  4225dd:	test   DWORD PTR [ecx],ecx
  4225df:	dec    ecx
  4225e0:	xchg   ecx,eax
  4225e1:	loopne 0x4225f1
  4225e3:	rcl    DWORD PTR [eax+0x5642cc8f],0xee
  4225ea:	cdq    
  4225eb:	ror    DWORD PTR [edi-0x13ee8e23],0xe0
  4225f2:	in     al,dx
  4225f3:	ins    BYTE PTR es:[edi],dx
  4225f4:	fnstsw WORD PTR [ecx+ecx*4+0x5fa24831]
  4225fb:	lds    ebp,FWORD PTR [eax]
  4225fd:	pop    esi
  4225fe:	out    dx,al
  4225ff:	jo     0x4225a4
  422601:	sbb    BYTE PTR [edi+0x37f5593f],bh
  422607:	mov    BYTE PTR [ecx-0x22],al
  42260a:	xlat   BYTE PTR ds:[ebx]
  42260b:	out    0xc5,al
  42260d:	neg    eax
  42260f:	push   0xb0472ae6
  422614:	xor    eax,0xdbb52cc9
  422619:	pop    ds
  42261a:	xchg   ecx,eax
  42261b:	add    al,0xa0
  42261d:	jno    0x422600
  42261f:	ret    0x2562
  422622:	cli    
  422623:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422624:	jmp    FWORD PTR [esp+eiz*8]
  422627:	lahf   
  422628:	dec    ecx
  422629:	push   es
  42262a:	xchg   edx,eax
  42262b:	mov    bl,0xb3
  42262d:	addr16 push ebx
  42262f:	xchg   esi,eax
  422630:	xchg   esp,eax
  422631:	push   esp
  422632:	jmp    FWORD PTR [edi+0x61]
  422635:	imul   edi,edi,0xdead715c
  42263b:	test   DWORD PTR ds:0x17b7ec29,edx
  422641:	pusha  
  422642:	mov    esi,0x9a622c6f
  422647:	sbb    al,0x9b
  422649:	leave  
  42264a:	stc    
  42264b:	jno    0x42260b
  42264d:	sbb    ebx,DWORD PTR [ebx+0xc16418a]
  422653:	out    dx,eax
  422654:	enter  0xb9f8,0x39
  422658:	popf   
  422659:	retf   
  42265a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42265b:	cmp    BYTE PTR [edx+0x7d],dh
  42265e:	sahf   
  42265f:	sar    DWORD PTR [ecx+0x5adeca82],1
  422665:	mov    ecx,edi
  422667:	dec    ecx
  422668:	sub    eax,0x5f05a6ee
  42266d:	mov    edx,0xdd01ad9b
  422672:	aas    
  422673:	xchg   ebp,eax
  422674:	aaa    
  422675:	out    0x4a,al
  422677:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422678:	jb     0x4226c2
  42267a:	mov    bh,0xd6
  42267c:	mov    ds:0x70e6d2e5,eax
  422681:	jp     0x4226b9
  422683:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422684:	and    DWORD PTR [ebx-0x5c],ecx
  422687:	add    al,0x66
  422689:	imul   edi,DWORD PTR [ecx-0x40],0x1a
  42268d:	or     cl,bl
  42268f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422690:	mov    bh,0x9e
  422692:	cwde   
  422693:	dec    ecx
  422694:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422695:	pop    ss
  422696:	repnz pop ds
  422698:	je     0x422652
  42269a:	test   bl,cl
  42269c:	xor    DWORD PTR [edi+0x71],esi
  42269f:	cmc    
  4226a0:	push   0x99d8d246
  4226a5:	jns    0x4226e7
  4226a7:	loop   0x422667
  4226a9:	sub    DWORD PTR [edi+ebx*2-0x60de7848],ebp
  4226b0:	fadd   QWORD PTR [ecx+ebp*1]
  4226b3:	jns    0x422685
  4226b5:	fimul  DWORD PTR [ebx-0x4ee742ef]
  4226bb:	sbb    BYTE PTR ds:0x15908c5,ch
  4226c1:	stc    
  4226c2:	sub    ch,ch
  4226c4:	or     dh,bl
  4226c6:	loopne 0x422648
  4226c8:	mov    eax,ds:0x2729c158
  4226cd:	repz pop ecx
  4226cf:	pop    ds
  4226d0:	push   ss
  4226d1:	xchg   ebp,eax
  4226d2:	cmp    eax,0xa1fecbe4
  4226d7:	imul   eax,DWORD PTR [eax],0xffffffde
  4226da:	ss loope 0x422689
  4226dd:	push   0xffffffba
  4226df:	mov    bl,BYTE PTR [eax]
  4226e1:	jecxz  0x42266f
  4226e3:	fisub  DWORD PTR [ecx+0xbbb6755]
  4226e9:	std    
  4226ea:	mov    ah,0x42
  4226ec:	mov    ch,0xe8
  4226ee:	aas    
  4226ef:	jp     0x422677
  4226f1:	fs or  dh,al
  4226f4:	imul   edx,DWORD PTR [esi+0x38],0x69
  4226f8:	adc    eax,0xabb7ba56
  4226fd:	dec    esp
  4226fe:	(bad)  [ecx+edi*1-0x8]
  422702:	and    ebx,DWORD PTR [esi+ebx*8-0x1e]
  422706:	jg     0x422776
  422708:	inc    esi
  422709:	jecxz  0x422716
  42270b:	xlat   BYTE PTR ds:[ebx]
  42270c:	xchg   cl,ah
  42270e:	lahf   
  42270f:	mov    cs,WORD PTR [eax-0x3b998de4]
  422715:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422716:	pop    esp
  422717:	push   esp
  422718:	inc    edi
  422719:	and    ah,BYTE PTR [eax]
  42271b:	xchg   edi,eax
  42271c:	mov    eax,cs:0xb2d554e6
  422722:	push   es
  422723:	lea    ecx,[eax+0x41b6879e]
  422729:	outs   dx,DWORD PTR ds:[esi]
  42272a:	dec    ebx
  42272b:	mov    WORD PTR [eax],?
  42272d:	jmp    0x42275b
  42272f:	cdq    
  422730:	mov    esi,0x72544e50
  422735:	mov    eax,ds:0xa1cf7bc3
  42273a:	pop    esi
  42273b:	jmp    0x4227bc
  42273d:	mul    BYTE PTR [edx-0x676f50a2]
  422743:	sbb    ecx,ecx
  422745:	jae    0x4227c2
  422747:	fyl2x  
  422749:	inc    ecx
  42274a:	in     eax,dx
  42274b:	jnp    0x42273e
  42274d:	cmp    ecx,DWORD PTR [ebp-0x43]
  422750:	pop    esp
  422751:	std    
  422752:	pop    edx
  422753:	mov    ch,BYTE PTR [edi]
  422755:	dec    esp
  422756:	hlt    
  422757:	mov    ebp,0xebf75cc
  42275c:	(bad)  [edx]
  42275e:	mov    ah,0x6a
  422760:	or     BYTE PTR [edx+0x2b998721],ch
  422766:	(bad)  
  422767:	inc    ebx
  422768:	xor    BYTE PTR [edx+0x5c],bh
  42276b:	scas   eax,DWORD PTR es:[edi]
  42276c:	add    al,0x4
  42276e:	push   ds
  42276f:	fisub  WORD PTR [edi+0x6f]
  422772:	add    DWORD PTR [esi+0x6e],esi
  422775:	lods   eax,DWORD PTR ds:[esi]
  422776:	into   
  422777:	xor    DWORD PTR [ecx+0x4a2087f9],0x3d
  42277e:	cmp    ch,dh
  422780:	jo     0x42270e
  422782:	scas   eax,DWORD PTR es:[edi]
  422783:	test   esp,ebp
  422785:	test   al,0x66
  422787:	in     eax,dx
  422788:	aad    0xa8
  42278a:	xchg   esi,eax
  42278b:	push   esp
  42278c:	sbb    esi,eax
  42278e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42278f:	xor    esp,DWORD PTR [esi-0x22d07490]
  422795:	adc    al,BYTE PTR [edi]
  422797:	xor    eax,0x52c419d0
  42279c:	mov    esp,0x8a5d58f3
  4227a1:	retf   
  4227a2:	mov    dl,0x34
  4227a4:	xor    esi,DWORD PTR [edi+0x74bd288c]
  4227aa:	or     eax,0x18e2d4d9
  4227af:	add    cl,ch
  4227b1:	and    bl,BYTE PTR [edi-0x7cd87241]
  4227b7:	arpl   WORD PTR [edx+0xf548b3b],dx
  4227bd:	pop    eax
  4227be:	retf   
  4227bf:	out    dx,al
  4227c0:	inc    ebx
  4227c1:	test   BYTE PTR [ecx-0x4b7dd665],ah
  4227c7:	xchg   ebp,eax
  4227c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227c9:	imul   edi,edi,0xffffffb6
  4227cc:	sub    DWORD PTR [esi-0x31],ecx
  4227cf:	mov    edx,0x3e08cefd
  4227d4:	mov    ebp,DWORD PTR [eax+0x637dcafc]
  4227da:	cdq    
  4227db:	ja     0x422769
  4227dd:	pop    edx
  4227de:	mov    ebp,0xd4850a18
  4227e3:	cmp    esi,edi
  4227e5:	std    
  4227e6:	adc    bh,al
  4227e8:	loopne 0x422801
  4227ea:	call   0xea398127
  4227ef:	push   esi
  4227f0:	fnstcw WORD PTR ds:0x9ae95add
  4227f6:	shld   DWORD PTR [edx+0x620db76d],esp,cl
  4227fd:	inc    ebp
  4227fe:	xchg   DWORD PTR [esi-0x74a4eeeb],ebp
  422804:	adc    DWORD PTR gs:[eax+0x511b1277],eax
  42280b:	sar    esi,1
  42280d:	jmp    FWORD PTR [ebx-0xf]
  422810:	data16 loopne 0x422885
  422813:	stos   DWORD PTR es:[edi],eax
  422814:	frstor [edi+ebx*2]
  422817:	imul   edi,DWORD PTR [edx-0xa],0xffffffc2
  42281b:	or     al,0xfc
  42281d:	push   ebp
  42281e:	push   ebx
  42281f:	push   ecx
  422820:	xchg   esp,eax
  422821:	xor    DWORD PTR [eax],esp
  422823:	test   BYTE PTR [eax-0x27],ch
  422826:	mov    ds:0x70d61653,eax
  42282b:	clc    
  42282c:	push   esi
  42282d:	aam    0x2f
  42282f:	scas   al,BYTE PTR es:[edi]
  422830:	inc    ecx
  422831:	sub    eax,0x3dc1c49f
  422836:	mov    ah,0x67
  422838:	and    BYTE PTR [ecx],ah
  42283a:	scas   eax,DWORD PTR es:[edi]
  42283b:	(bad)  
  42283c:	mov    dl,0xff
  42283e:	sbb    ecx,DWORD PTR [ebx]
  422840:	push   esi
  422841:	sub    DWORD PTR [edx+eiz*1+0x7f79a34f],ebp
  422848:	retf   
  422849:	pop    edi
  42284a:	dec    esi
  42284b:	mov    BYTE PTR [esi],0xfe
  42284e:	out    0x4e,eax
  422850:	jbe    0x422857
  422852:	pop    esp
  422853:	push   ebx
  422854:	lea    esi,[edi]
  422856:	mov    al,ds:0x62c95c87
  42285b:	xchg   ebp,eax
  42285c:	xor    edx,ecx
  42285e:	dec    edi
  42285f:	cs xchg ebp,eax
  422861:	dec    ebp
  422862:	cwde   
  422863:	retf   
  422864:	xor    eax,0x7bb69d7e
  422869:	cmp    BYTE PTR [eax],al
  42286b:	cmp    DWORD PTR [ebx],ebx
  42286d:	je     0x4227ef
  42286f:	dec    ebp
  422870:	adc    al,0xd2
  422872:	stos   DWORD PTR es:[edi],eax
  422873:	loope  0x4228b3
  422875:	adc    al,0xdb
  422877:	inc    ecx
  422878:	and    ebx,ecx
  42287a:	scas   eax,DWORD PTR es:[edi]
  42287b:	(bad)
  42287e:	mov    al,0xc2
  422880:	test   BYTE PTR [edi+ebp*4-0x4c],cl
  422884:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  422886:	jo     0x4228c8
  422888:	je     0x42288e
  42288a:	(bad)  
  42288b:	jmp    0x9e69a132
  422890:	mov    ecx,0x27a25cc7
  422895:	cwde   
  422896:	jmp    0x3be03e20
  42289b:	test   al,0x3c
  42289d:	mov    BYTE PTR [esi],bh
  42289f:	pop    es
  4228a0:	ins    BYTE PTR es:[edi],dx
  4228a1:	dec    esp
  4228a2:	push   ds
  4228a3:	int3   
  4228a4:	pop    ecx
  4228a5:	adc    eax,DWORD PTR [ebx+0x1a]
  4228a8:	adc    eax,DWORD PTR [esp+edx*4+0x2ccde077]
  4228af:	loopne 0x422861
  4228b1:	mov    dh,0x61
  4228b3:	mov    dh,0xc7
  4228b5:	jns    0x4228c4
  4228b7:	fisttp DWORD PTR [ecx]
  4228b9:	bound  edi,QWORD PTR [edx-0x1d0acba6]
  4228bf:	xchg   esp,eax
  4228c0:	fcomp  QWORD PTR [edx+0x2f80e42b]
  4228c6:	mov    ebp,0x645d3af1
  4228cb:	retf   
  4228cc:	xor    bl,BYTE PTR [eax-0x7e11ed77]
  4228d2:	xchg   esp,eax
  4228d3:	clc    
  4228d4:	and    BYTE PTR [ebp+edi*2+0x3de92332],cl
  4228db:	outs   dx,BYTE PTR ds:[esi]
  4228dc:	cs aas 
  4228de:	retf   
  4228df:	cmp    ch,dl
  4228e1:	aaa    
  4228e2:	push   esp
  4228e3:	imul   ebx,DWORD PTR [ebx+0x31ae272],0xec8b7c8e
  4228ed:	mov    ch,0x8a
  4228ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4228f0:	inc    edi
  4228f1:	mov    eax,0xb614c915
  4228f6:	jmp    0xc6c8f482
  4228fb:	dec    edi
  4228fc:	nop
  4228fd:	add    eax,0xfc81cc6a
  422902:	rol    edx,cl
  422904:	pop    edi
  422905:	test   eax,0x84a110f6
  42290a:	out    0xeb,eax
  42290c:	add    eax,0xe78b1797
  422911:	arpl   cx,bp
  422913:	pop    es
  422914:	mov    bl,BYTE PTR [ebp-0x4f]
  422917:	dec    esi
  422918:	pop    ebp
  422919:	inc    ecx
  42291a:	mov    esi,0x3e539e1b
  42291f:	jb     0x4228d7
  422921:	imul   esp,DWORD PTR [eax-0x62],0x1
  422925:	mov    dh,BYTE PTR [ebp-0x4a7f6902]
  42292b:	fwait
  42292c:	and    BYTE PTR [ecx],al
  42292e:	and    ah,cl
  422930:	imul   ecx,DWORD PTR [edi+eax*8],0xfffffff1
  422934:	mov    ds:0x3ce6b593,eax
  422939:	gs cld 
  42293b:	jae    0x42299f
  42293d:	cli    
  42293e:	lock xchg edi,eax
  422940:	cli    
  422941:	fisttp WORD PTR [edi-0x38]
  422944:	pop    eax
  422945:	push   es
  422946:	ret    0x1a9e
  422949:	(bad)  
  42294a:	fstp   TBYTE PTR [esi]
  42294c:	mov    ebx,0x747eb780
  422951:	mov    DWORD PTR [edx+0x7b73669b],esp
  422957:	xchg   edi,eax
  422958:	push   ebp
  422959:	cld    
  42295a:	aas    
  42295b:	pop    es
  42295c:	jmp    0x5c11:0x1a59651b
  422963:	jl     0x4229d8
  422965:	xor    edx,DWORD PTR [ebx-0x2b]
  422968:	xchg   edi,eax
  422969:	leave  
  42296a:	xchg   esi,eax
  42296b:	jecxz  0x42291c
  42296d:	rcl    DWORD PTR [ecx+0x52bfaeb],cl
  422973:	shl    BYTE PTR [edi+0x6207e30d],0xf
  42297a:	or     bh,BYTE PTR [ebx-0x77]
  42297d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42297e:	test   eax,0xb3b86f53
  422983:	mov    ebx,ss
  422985:	cmp    ebp,DWORD PTR [eax+0x7b0308b7]
  42298b:	sahf   
  42298c:	or     al,0x84
  42298e:	sub    BYTE PTR [edi-0x7ec83884],al
  422994:	mov    bl,0x7a
  422996:	cmc    
  422997:	and    esi,esp
  422999:	(bad)  
  42299a:	hlt    
  42299b:	jno    0x42294c
  42299d:	adc    BYTE PTR [ebx+0xa],bl
  4229a0:	pop    ds
  4229a1:	and    BYTE PTR [ebx],dl
  4229a3:	xor    DWORD PTR [ebp+0x53],esi
  4229a6:	ja     0x4229e1
  4229a8:	dec    esi
  4229a9:	mov    ebx,0x4e0fa835
  4229ae:	dec    ecx
  4229af:	ret    
  4229b0:	in     al,dx
  4229b1:	daa    
  4229b2:	dec    ebx
  4229b3:	out    0xab,eax
  4229b5:	cli    
  4229b6:	test   al,0x2
  4229b8:	and    eax,0x59cf9ab3
  4229bd:	sub    al,BYTE PTR [esi+0x5f]
  4229c0:	int    0x64
  4229c2:	adc    DWORD PTR [edi-0x57cc0107],ecx
  4229c8:	or     DWORD PTR [ecx],eax
  4229ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4229cb:	push   esi
  4229cc:	js     0x42295f
  4229ce:	mov    cl,BYTE PTR [edi]
  4229d0:	gs into 
  4229d2:	nop
  4229d3:	pop    ebx
  4229d4:	push   cs
  4229d5:	cwde   
  4229d6:	xchg   esi,eax
  4229d7:	icebp  
  4229d8:	push   0xffffff93
  4229da:	adc    eax,0x676fd881
  4229df:	in     eax,0x31
  4229e1:	out    0x68,eax
  4229e3:	dec    edi
  4229e4:	lock aas 
  4229e6:	push   edx
  4229e7:	sbb    edx,ebx
  4229e9:	aas    
  4229ea:	inc    edx
  4229eb:	clc    
  4229ec:	nop
  4229ed:	popa   
  4229ee:	div    BYTE PTR [ecx]
  4229f0:	xchg   ecx,eax
  4229f1:	pop    edx
  4229f2:	push   edi
  4229f3:	adc    DWORD PTR [edi],ebp
  4229f5:	in     al,dx
  4229f6:	mov    bl,0x29
  4229f8:	or     DWORD PTR [esp+eiz*2-0x35],ecx
  4229fc:	stos   BYTE PTR es:[edi],al
  4229fd:	jno    0x422985
  4229ff:	outs   dx,DWORD PTR ds:[esi]
  422a00:	push   ss
  422a01:	sub    DWORD PTR [ecx],0xffffffb4
  422a04:	aam    0x86
  422a06:	xlat   BYTE PTR ds:[ebx]
  422a07:	es js  0x4229e1
  422a0a:	sub    ah,BYTE PTR [edi+0x2b13c599]
  422a10:	xor    eax,0xe7b75838
  422a15:	in     al,dx
  422a16:	adc    edi,DWORD PTR [ebp-0x45f79c6e]
  422a1c:	lea    eax,[edx+ebp*1]
  422a1f:	pop    esp
  422a20:	inc    esi
  422a21:	ins    BYTE PTR es:[edi],dx
  422a22:	cmp    al,0x6c
  422a24:	xchg   edi,eax
  422a25:	nop
  422a26:	call   0x21e4a825
  422a2b:	push   ds
  422a2c:	or     eax,0x63a4b8e5
  422a31:	mov    esp,0xd7a32b11
  422a36:	jmp    FWORD PTR [edx-0x41]
  422a39:	pusha  
  422a3a:	outs   dx,DWORD PTR ds:[esi]
  422a3b:	imul   ecx,esp,0x32
  422a3e:	cmp    DWORD PTR [edi+0x46],esi
  422a41:	pop    ebx
  422a42:	add    DWORD PTR [esi+0xf291717],ebx
  422a48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422a49:	push   ss
  422a4a:	ret    0xd40e
  422a4d:	nop    DWORD PTR [ecx+eax*1]
  422a51:	(bad)  
  422a52:	mov    edi,ss
  422a54:	push   edx
  422a55:	mov    DWORD PTR [edi+0x6b],esp
  422a58:	ret    
  422a59:	js     0x4229ff
  422a5b:	mov    ds:0xfe4d36d9,eax
  422a60:	xchg   ecx,eax
  422a61:	or     BYTE PTR [ebx-0x7b],dh
  422a64:	sbb    al,0x31
  422a66:	scas   al,BYTE PTR es:[edi]
  422a67:	push   ebp
  422a68:	xchg   edx,eax
  422a69:	shl    BYTE PTR [esi],0x7c
  422a6c:	jns    0x422aad
  422a6e:	mov    dh,bl
  422a70:	sub    edi,DWORD PTR [ebp+0xabecd4]
  422a76:	in     eax,0x9b
  422a78:	and    BYTE PTR [ebx],0xc9
  422a7b:	retf   0xcf9c
  422a7e:	cmp    eax,0x52567de3
  422a83:	sub    dh,ah
  422a85:	ret    0x47d7
  422a88:	rol    DWORD PTR [edi],cl
  422a8a:	repnz lods al,BYTE PTR ds:[esi]
  422a8c:	dec    edi
  422a8d:	fwait
  422a8e:	aas    
  422a8f:	xlat   BYTE PTR ds:[ebx]
  422a90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422a91:	adc    eax,0x61435e50
  422a96:	pop    ds
  422a97:	fs jo  0x422aef
  422a9a:	mov    DWORD PTR [esi],ebp
  422a9c:	and    BYTE PTR [esp+ecx*8-0x45],ch
  422aa0:	in     eax,0xd2
  422aa2:	sub    dh,BYTE PTR [eax-0x1939e56]
  422aa8:	popf   
  422aa9:	inc    eax
  422aaa:	in     eax,0x3c
  422aac:	mov    cl,0xc8
  422aae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422aaf:	mov    esi,0xe93333cd
  422ab4:	jl     0x422abe
  422ab6:	leave  
  422ab7:	inc    ebp
  422ab8:	mov    dl,0x70
  422aba:	xlat   BYTE PTR ds:[ebx]
  422abb:	xor    bl,BYTE PTR [edi+0x6fafe3d9]
  422ac1:	mov    esi,0xe86913ae
  422ac6:	sti    
  422ac7:	inc    ah
  422ac9:	nop
  422aca:	mov    ebx,0xb98b86a9
  422acf:	ins    DWORD PTR es:[edi],dx
  422ad0:	jns    0x422a61
  422ad2:	adc    dh,dh
  422ad4:	jo     0x422b2e
  422ad6:	popa   
  422ad7:	lahf   
  422ad8:	jbe    0x422b30
  422ada:	jb     0x422b0a
  422adc:	jo     0x422a81
  422ade:	shr    BYTE PTR [ebx-0x1c],cl
  422ae1:	rcr    DWORD PTR [ebp+0x50],0x6a
  422ae5:	mov    dl,BYTE PTR ds:0x31320fbb
  422aeb:	shl    DWORD PTR [ebx-0x257d710],1
  422af1:	or     eax,0xaeff24e9
  422af6:	popf   
  422af7:	mov    ch,0x2f
  422af9:	sub    dl,BYTE PTR [ecx+0x300e81b]
  422aff:	mov    bl,0x31
  422b01:	mov    ebx,0xa604f57e
  422b06:	fwait
  422b07:	int3   
  422b08:	sbb    eax,DWORD PTR [ebx]
  422b0a:	jne    0x422abb
  422b0c:	aad    0xa2
  422b0e:	out    0xe1,eax
  422b10:	jae    0x422acb
  422b12:	es fucom st(0)
  422b15:	push   0x30
  422b17:	jbe    0x422b3e
  422b19:	enter  0xaf,0x8
  422b1d:	ficomp DWORD PTR [edx+ebx*2]
  422b20:	imul   eax,DWORD PTR [esi],0x18f6af24
  422b26:	lea    ebp,[edi]
  422b28:	push   0x5060f177
  422b2d:	lods   eax,DWORD PTR ds:[esi]
  422b2e:	mov    esi,0xded694f8
  422b33:	jg     0x422b6b
  422b35:	mov    eax,ds:0xbb2bf951
  422b3a:	add    ch,BYTE PTR [ebp-0x43af1011]
  422b40:	adc    eax,eax
  422b42:	push   0x70503e60
  422b47:	xchg   edi,eax
  422b48:	inc    BYTE PTR [edi*4+0x6a6c11ef]
  422b4f:	pusha  
  422b50:	and    esp,ebx
  422b52:	xchg   edi,eax
  422b53:	imul   edx,DWORD PTR [edi-0x6e],0xfffffff0
  422b57:	or     cl,BYTE PTR [ebp+0x73f0dafe]
  422b5d:	jecxz  0x422b77
  422b5f:	lds    esi,FWORD PTR [ebx]
  422b61:	ficomp DWORD PTR [edi-0x46c266dd]
  422b67:	jnp    0x422b7d
  422b69:	xchg   ebp,eax
  422b6a:	xor    eax,0xc1b874ca
  422b6f:	push   0x7a34e438
  422b74:	rol    DWORD PTR [edi+edi*8],cl
  422b77:	bound  esp,QWORD PTR [edx+0x6a]
  422b7a:	mov    fs,WORD PTR [esi-0x3154d1c5]
  422b80:	mov    ch,0x2e
  422b82:	xor    eax,0xfbba5ee1
  422b87:	(bad)  
  422b89:	jb     0x422baf
  422b8b:	sub    BYTE PTR [edx],ah
  422b8d:	and    bh,BYTE PTR [edx+0x5faf68c6]
  422b93:	mov    ch,0xa8
  422b95:	iret   
  422b96:	xchg   esi,eax
  422b97:	mov    ebp,0x855312dd
  422b9d:	es in  eax,dx
  422b9f:	adc    dl,BYTE PTR [edx-0x5f]
  422ba2:	xchg   esi,eax
  422ba3:	sti    
  422ba4:	mov    DWORD PTR [ebp+0x646074cf],edx
  422baa:	jl     0x422bc6
  422bac:	nop    DWORD PTR [edx]
  422baf:	fs cmp eax,0xabb51fbc
  422bb5:	cmp    ah,dl
  422bb7:	rcl    DWORD PTR [edx-0x7d03c57e],0xe9
  422bbe:	cli    
  422bbf:	(bad)  
  422bc0:	lods   eax,DWORD PTR ds:[esi]
  422bc1:	or     DWORD PTR [esi-0x4b088b07],ebp
  422bc7:	jne    0x422b80
  422bc9:	jmp    0x306ff177
  422bce:	jge    0x422b75
  422bd0:	add    esi,DWORD PTR [ebx-0x4e]
  422bd3:	add    esp,esi
  422bd5:	push   ebp
  422bd6:	adc    al,0x49
  422bd8:	pop    es
  422bd9:	add    cl,BYTE PTR [ebx+0xc]
  422bdc:	jp     0x422bf9
  422bde:	loopne 0x422c47
  422be0:	dec    ebp
  422be1:	mov    al,BYTE PTR [ecx+0x74]
  422be4:	pop    esi
  422be5:	je     0x422c16
  422be7:	dec    DWORD PTR [edx-0x24df48d9]
  422bed:	(bad)
  422bf2:	and    DWORD PTR [eax-0x42],esi
  422bf5:	jge    0x422b84
  422bf7:	push   es
  422bf8:	cmp    cl,dh
  422bfa:	cmp    eax,0x6c724f10
  422bff:	enter  0xb775,0xc8
  422c03:	ficomp DWORD PTR [esi-0x18]
  422c06:	out    dx,al
  422c07:	xor    BYTE PTR [edx-0x46e37641],bl
  422c0d:	jb     0x422c6e
  422c0f:	and    ecx,ebx
  422c11:	aad    0xee
  422c13:	jg     0x422b95
  422c15:	bnd jmp 0x422c56
  422c18:	push   ebp
  422c19:	cmp    al,ah
  422c1b:	cmp    ch,bl
  422c1d:	bound  eax,QWORD PTR [esi-0x5b]
  422c20:	fsubr  QWORD PTR [esi]
  422c22:	xlat   BYTE PTR ds:[ebx]
  422c23:	ja     0x422c9d
  422c25:	stos   DWORD PTR es:[edi],eax
  422c26:	sbb    DWORD PTR [bx-0x25],ecx
  422c2a:	and    ebp,ebx
  422c2c:	add    eax,0xb4b75481
  422c31:	fwait
  422c32:	test   al,0x1e
  422c34:	add    esp,DWORD PTR [esi+0x6d]
  422c37:	or     al,0xd1
  422c39:	(bad)  
  422c3a:	dec    edi
  422c3b:	stc    
  422c3c:	pop    ss
  422c3d:	jns    0x422c4a
  422c3f:	loop   0x422cb3
  422c41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c42:	xor    ah,bl
  422c44:	sbb    BYTE PTR [ebp+0x1139a784],dl
  422c4a:	popa   
  422c4b:	mov    ebp,DWORD PTR [edi]
  422c4d:	jg     0x422cbd
  422c4f:	sbb    eax,0xdee9914f
  422c54:	cs dec eax
  422c56:	dec    esi
  422c57:	imul   edx,DWORD PTR [ecx],0x28
  422c5a:	mov    edi,0x27e40f42
  422c5f:	mov    ch,0xa2
  422c61:	jp     0x422cd8
  422c63:	or     DWORD PTR [edx],0x2b
  422c66:	mov    edx,0x170df427
  422c6b:	jl     0x422bf1
  422c6d:	mov    bl,BYTE PTR [edi+0x7b]
  422c70:	mov    edx,0xf0d9226e
  422c75:	in     eax,0xf5
  422c77:	xor    al,0x1f
  422c79:	idiv   BYTE PTR [edx]
  422c7b:	adc    bl,BYTE PTR [eax+0x55]
  422c7e:	mov    eax,DWORD PTR [eax-0x5e]
  422c81:	fisttp WORD PTR [ebx-0x5a]
  422c84:	jecxz  0x422c66
  422c86:	xor    bh,BYTE PTR [ecx+0x74]
  422c89:	mov    bh,0xe5
  422c8b:	and    cl,BYTE PTR [esi]
  422c8d:	push   ds
  422c8e:	or     BYTE PTR [ebx+0x141b7473],al
  422c94:	mov    ch,0xe5
  422c96:	div    al
  422c98:	dec    ebx
  422c99:	mov    eax,0x23f45b83
  422c9e:	or     DWORD PTR [edi],0xb31ee3f7
  422ca4:	and    bh,BYTE PTR [edi+0x7b]
  422ca7:	or     ebx,DWORD PTR [ebp+0x75b64500]
  422cad:	shr    dh,0x37
  422cb0:	fstp   QWORD PTR [edi]
  422cb2:	inc    dh
  422cb4:	ret    0x800c
  422cb7:	xor    al,0x93
  422cb9:	mov    esi,0x3bfbcce3
  422cbe:	rcl    BYTE PTR [ebp-0x4ce2807e],1
  422cc4:	adc    bh,0x0
  422cc7:	ja     0x422ca3
  422cc9:	sub    DWORD PTR [ebx+0xea7ad9a],0x1f7e4460
  422cd3:	jmp    0x422c7e
  422cd5:	scas   al,BYTE PTR es:[edi]
  422cd6:	and    eax,0x2562e736
  422cdb:	das    
  422cdc:	lea    ebx,[esi]
  422cde:	or     bl,BYTE PTR [eax-0x16]
  422ce1:	retf   
  422ce2:	(bad)  
  422ce3:	dec    ebx
  422ce4:	jl     0x422c73
  422ce6:	icebp  
  422ce7:	sbb    BYTE PTR [edi],0xd8
  422cea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422ceb:	mov    bh,0x6
  422ced:	push   ecx
  422cee:	xchg   edx,eax
  422cef:	push   eax
  422cf0:	adc    BYTE PTR [edi],bl
  422cf2:	lods   al,BYTE PTR ds:[esi]
  422cf3:	dec    eax
  422cf4:	push   cs
  422cf5:	mov    esp,0x74d910ec
  422cfa:	mov    ds:0x31fc3957,eax
  422cff:	ja     0x422d6b
  422d01:	jecxz  0x422cc8
  422d03:	int3   
  422d04:	pop    ds
  422d05:	add    edx,DWORD PTR [ebx]
  422d07:	adc    al,0xbd
  422d09:	in     al,0x62
  422d0b:	xor    eax,edi
  422d0d:	or     ch,dl
  422d0f:	xchg   esp,eax
  422d10:	add    bh,0x5a
  422d13:	jne    0x422d10
  422d15:	gs in  al,0xef
  422d18:	enter  0x87ca,0xde
  422d1c:	xchg   esp,eax
  422d1d:	add    al,0x44
  422d1f:	jb     0x422d57
  422d21:	jne    0x422d91
  422d23:	fisubr WORD PTR [ebp+0x7fd3c964]
  422d29:	stos   BYTE PTR es:[edi],al
  422d2a:	outs   dx,BYTE PTR ds:[esi]
  422d2b:	fdivrp st(3),st
  422d2d:	mov    ebx,0x9ff97dd
  422d32:	jecxz  0x422d52
  422d34:	xchg   ebx,ecx
  422d36:	xchg   esp,eax
  422d37:	mov    ebx,0xe1339d79
  422d3c:	mov    eax,ds:0xd9ab7809
  422d41:	cmp    esp,edx
  422d43:	add    eax,0x1ba54bd0
  422d48:	dec    esp
  422d49:	jb     0x422d08
  422d4b:	push   ebp
  422d4c:	hlt    
  422d4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422d4e:	cmp    al,0x62
  422d50:	fisttp DWORD PTR [esi+0x44e9dcc6]
  422d56:	test   BYTE PTR [ecx],cl
  422d58:	inc    ecx
  422d59:	aam    0x9a
  422d5b:	fldcw  WORD PTR [ebp-0x80]
  422d5e:	test   DWORD PTR [edi],ebx
  422d60:	jbe    0x422dcb
  422d62:	ds repnz xchg ecx,eax
  422d65:	dec    DWORD PTR [ecx]
  422d67:	mov    ecx,DWORD PTR [ebp+0x46937c4e]
  422d6d:	gs cmp al,0xc5
  422d70:	(bad)
  422d73:	inc    esi
  422d74:	inc    ebx
  422d75:	mov    BYTE PTR [ebp+0x2c],al
  422d78:	xor    eax,0x61bd6e42
  422d7d:	add    BYTE PTR [eax+0x6757fbd5],cl
  422d83:	icebp  
  422d84:	pop    edi
  422d85:	add    DWORD PTR [ebp-0x1fc9684f],edx
  422d8b:	push   eax
  422d8c:	and    BYTE PTR [edi],dh
  422d8e:	push   0x55
  422d90:	sbb    eax,0x2c956d42
  422d95:	mov    eax,ds:0x3e6be5d3
  422d9a:	sbb    edi,ebx
  422d9c:	add    ecx,DWORD PTR [edx-0x47]
  422d9f:	(bad)  
  422da0:	pop    edx
  422da1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422da2:	push   0xffffffd2
  422da4:	or     bh,al
  422da6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422da7:	mov    dl,0x9e
  422da9:	pop    esi
  422daa:	sub    BYTE PTR [edx],0xdd
  422dad:	xchg   edi,eax
  422dae:	mov    al,0xc9
  422db0:	push   es
  422db1:	xor    BYTE PTR [edx+0x74],bh
  422db4:	pop    ds
  422db5:	mov    WORD PTR ss:[edx+0x35],?
  422db9:	adc    eax,0xa750a94a
  422dbe:	push   0x60
  422dc0:	data16 int 0xd9
  422dc3:	mov    ah,0x4d
  422dc5:	sbb    al,cl
  422dc7:	adc    esp,DWORD PTR [edx]
  422dc9:	test   eax,0xa134f4fa
  422dce:	clc    
  422dcf:	arpl   si,di
  422dd1:	add    ebp,DWORD PTR [esi-0x216909ff]
  422dd7:	inc    edi
  422dd8:	icebp  
  422dd9:	xor    BYTE PTR [esp+eiz*4-0x1a],bl
  422ddd:	ret    
  422dde:	rol    BYTE PTR [ebx-0x6b9bb776],0x4
  422de5:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422de7:	(bad)  
  422de8:	std    
  422de9:	shl    BYTE PTR [ebx],1
  422deb:	(bad)  
  422dec:	aas    
  422ded:	dec    eax
  422dee:	test   DWORD PTR ds:0x44f3e07a,esi
  422df4:	pop    es
  422df5:	xor    BYTE PTR [eax-0xf],0xb5
  422df9:	js     0x422d8e
  422dfb:	out    dx,eax
  422dfc:	or     ecx,DWORD PTR [edi+0x5c]
  422dff:	enter  0x6f12,0x57
  422e03:	mov    ebp,0x8ea93340
  422e08:	mov    BYTE PTR [ebp+edx*8+0x4],dh
  422e0c:	mov    al,dh
  422e0e:	out    0x9,eax
  422e10:	push   0x52
  422e12:	xor    DWORD PTR [ecx],ecx
  422e14:	data16 aam 0x8c
  422e17:	in     eax,0x15
  422e19:	xchg   esp,eax
  422e1a:	ss xchg edi,eax
  422e1c:	popf   
  422e1d:	sub    al,0x22
  422e1f:	ja     0x422de4
  422e21:	pushf  
  422e22:	cmp    BYTE PTR ds:0xc85cc96b,bl
  422e28:	in     al,dx
  422e29:	mov    al,ds:0xcae0bd72
  422e2e:	mov    esi,0x4a6a4b04
  422e33:	in     eax,dx
  422e34:	(bad)  
  422e35:	fcomp  QWORD PTR [edx]
  422e37:	call   0xf0a21c96
  422e3c:	sub    esp,edi
  422e3e:	or     ah,BYTE PTR [edi-0x59cf6c9f]
  422e44:	mov    esp,0xf1449280
  422e49:	and    al,0x55
  422e4b:	sbb    dh,BYTE PTR [eax]
  422e4d:	sbb    ebp,DWORD PTR [ecx]
  422e4f:	add    al,0xd6
  422e51:	inc    edi
  422e52:	add    dh,BYTE PTR [edi]
  422e54:	adc    bh,dh
  422e56:	in     eax,0xcc
  422e58:	fdiv   DWORD PTR [ebx-0x4b]
  422e5b:	bound  ebp,QWORD PTR ds:0xaed4a6b8
  422e61:	pop    eax
  422e62:	(bad)  
  422e63:	cld    
  422e64:	jbe    0x422de7
  422e66:	pop    ds
  422e67:	jo     0x422e5a
  422e69:	cwde   
  422e6a:	adc    BYTE PTR [eax+ebx*1+0x6c],bl
  422e6e:	aas    
  422e6f:	jb     0x422e25
  422e71:	dec    esi
  422e72:	push   eax
  422e73:	or     DWORD PTR [ebx-0x18],esp
  422e76:	clc    
  422e77:	cwde   
  422e78:	dec    ebx
  422e79:	retf   0x5f46
  422e7c:	push   0x87d7f07a
  422e81:	pop    esp
  422e82:	push   esi
  422e83:	fnstenv [ebx]
  422e85:	xchg   ebx,eax
  422e86:	mov    dl,BYTE PTR [ebx+ebx*4+0x1]
  422e8a:	cmp    DWORD PTR [edx-0x3eac2699],esp
  422e90:	pop    esp
  422e91:	jns    0x422e6d
  422e93:	xor    eax,0xde438f83
  422e98:	mov    ecx,ebx
  422e9a:	or     BYTE PTR [edx-0x12],0xb9
  422e9e:	jbe    0x422ee3
  422ea0:	data16 cld 
  422ea2:	or     eax,0x26234c4d
  422ea7:	popa   
  422ea8:	jmp    0xcd9c:0xbec4cdea
  422eaf:	leave  
  422eb0:	pop    edi
  422eb1:	sti    
  422eb2:	fsub   QWORD PTR [ecx+0x10]
  422eb5:	pop    ss
  422eb6:	jno    0x422ed9
  422eb8:	adc    ch,BYTE PTR [esi]
  422eba:	cmp    al,0xde
  422ebc:	pop    eax
  422ebd:	pop    ecx
  422ebe:	sub    al,0x12
  422ec0:	out    dx,eax
  422ec1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422ec2:	lock inc esi
  422ec4:	pop    ds
  422ec5:	pop    esi
  422ec6:	hlt    
  422ec7:	rcr    BYTE PTR [edx-0x8],0x19
  422ecb:	clc    
  422ecc:	icebp  
  422ecd:	fist   DWORD PTR [esi+0x3a]
  422ed0:	and    al,0x41
  422ed2:	sub    ecx,eax
  422ed4:	pop    esi
  422ed5:	fadd   st(4),st
  422ed7:	or     DWORD PTR [ebp-0xc],0xf89c85f0
  422ede:	or     esi,edi
  422ee0:	mov    eax,DWORD PTR [ebp-0x1c]
  422ee3:	and    DWORD PTR ds:0x42d01c,0x0
  422eed:	mov    edi,DWORD PTR ds:0x42d01c
  422ef3:	inc    edi
  422ef4:	mov    DWORD PTR ds:0x42d01c,edi
  422efa:	cmp    DWORD PTR ds:0x42d01c,0x21
  422f01:	jle    0x422f27
  422f07:	jmp    0x422f1a
  422f0c:	push   DWORD PTR [ebp-0xc]
  422f0f:	push   0x261c
  422f14:	call   DWORD PTR ds:0x43002b
  422f1a:	cmp    DWORD PTR ds:0x42d01c,0x1f
  422f21:	jb     0x422eed
  422f27:	mov    ecx,DWORD PTR [ebp-0x1c]
  422f2a:	movzx  edi,WORD PTR ds:0x42901c
  422f31:	adc    DWORD PTR ds:0x42c010,edi
  422f37:	sub    eax,ecx
  422f39:	xor    esi,esi
  422f3b:	xor    esi,DWORD PTR ds:0x42d004
  422f41:	sub    DWORD PTR ds:0x42c01c,esi
  422f47:	mov    DWORD PTR [ebp-0x1c],eax
  422f4a:	mov    DWORD PTR ds:0x42c00c,0x19
  422f54:	cmp    DWORD PTR ds:0x42c00c,0x0
  422f5b:	je     0x422fae
  422f61:	cmp    DWORD PTR ds:0x42c00c,0x3
  422f68:	jb     0x422fae
  422f6e:	jmp    0x422f86
  422f73:	push   DWORD PTR [ebp-0x1c]
  422f76:	push   0x42d010
  422f7b:	push   0x42f0a7
  422f80:	call   DWORD PTR ds:0x430033
  422f86:	cmp    DWORD PTR ds:0x42c00c,0x4
  422f8d:	jne    0x422f9e
  422f93:	mov    eax,ds:0x42c00c
  422f98:	dec    eax
  422f99:	mov    ds:0x42c00c,eax
  422f9e:	mov    eax,ds:0x42c00c
  422fa3:	dec    eax
  422fa4:	mov    ds:0x42c00c,eax
  422fa9:	jmp    0x422f54
  422fae:	or     DWORD PTR [ebp-0x1c],0xf89c8590
  422fb5:	mov    eax,DWORD PTR [ebp-0x20]
  422fb8:	and    DWORD PTR ds:0x429000,edx
  422fbe:	mov    ecx,DWORD PTR [ebp-0x20]
  422fc1:	mov    edi,DWORD PTR ds:0x42a004
  422fc7:	sub    edi,DWORD PTR ds:0x42c01c
  422fcd:	mov    DWORD PTR ds:0x42a004,edi
  422fd3:	sub    eax,ecx
  422fd5:	mov    DWORD PTR [ebp-0x20],eax
  422fd8:	mov    eax,DWORD PTR [ebp-0x2c]
  422fdb:	sbb    DWORD PTR ds:0x42b018,edx
  422fe1:	mov    ecx,DWORD PTR [ebp-0x20]
  422fe4:	or     DWORD PTR ds:0x42d008,ecx
  422fea:	mov    esi,0x75108a4
  422fef:	xor    eax,esi
  422ff1:	mov    DWORD PTR ds:0x42c01c,0x12
  422ffb:	cmp    DWORD PTR ds:0x42c01c,0x0
  423002:	je     0x423054
  423008:	cmp    DWORD PTR ds:0x42c01c,0x7
  42300f:	ja     0x423054
  423015:	jmp    0x423026
  42301a:	push   DWORD PTR [ebp-0x1c]
  42301d:	push   DWORD PTR [ebp-0x20]
  423020:	call   DWORD PTR ds:0x430037
  423026:	cmp    DWORD PTR ds:0x42c01c,0x8
  42302d:	jne    0x423040
  423033:	mov    edi,DWORD PTR ds:0x42c01c
  423039:	dec    edi
  42303a:	mov    DWORD PTR ds:0x42c01c,edi
  423040:	xor    edi,edi
  423042:	xor    edi,DWORD PTR ds:0x42c01c
  423048:	dec    edi
  423049:	mov    DWORD PTR ds:0x42c01c,edi
  42304f:	jmp    0x422ffb
  423054:	mov    edi,0x3272ec
  423059:	add    eax,edi
  42305b:	or     eax,ecx
  42305d:	mov    DWORD PTR [ebp-0x20],eax
  423060:	mov    eax,DWORD PTR [ebp-0x4]
  423063:	mov    ecx,DWORD PTR [ebp-0x4]
  423066:	sub    eax,ecx
  423068:	mov    DWORD PTR [ebp-0x4],eax
  42306b:	or     DWORD PTR [ebp-0x4],0xf89c85bd
  423072:	mov    eax,DWORD PTR [ebp-0xc]
  423075:	xor    eax,esi
  423077:	add    eax,edi
  423079:	push   eax
  42307a:	mov    eax,DWORD PTR [ebp-0x10]
  42307d:	xor    eax,esi
  42307f:	add    eax,edi
  423081:	push   eax
  423082:	mov    eax,DWORD PTR [ebp-0x4]
  423085:	xor    eax,esi
  423087:	add    eax,edi
  423089:	push   eax
  42308a:	lea    eax,[ebp-0x7c]
  42308d:	push   eax
  42308e:	push   DWORD PTR [ebp-0x2c]
  423091:	push   DWORD PTR [ebp-0x28]
  423094:	call   0x416118
  423099:	test   eax,eax
  42309b:	je     0x4230c9
  4230a1:	lea    eax,[ebp-0x7c]
  4230a4:	push   eax
  4230a5:	mov    eax,DWORD PTR [ebp-0x28]
  4230a8:	xor    eax,esi
  4230aa:	add    eax,edi
  4230ac:	push   eax
  4230ad:	mov    eax,DWORD PTR [ebp-0x24]
  4230b0:	add    eax,0xaa
  4230b5:	push   eax
  4230b6:	mov    eax,DWORD PTR [ebp-0x24]
  4230b9:	mov    eax,DWORD PTR [eax+0x198]
  4230bf:	push   DWORD PTR [eax]
  4230c1:	call   0x40cc14
  4230c6:	mov    DWORD PTR [ebp-0x14],eax
  4230c9:	lea    eax,[ebp+0x4]
  4230cc:	mov    DWORD PTR [ebp-0x30],eax
  4230cf:	mov    eax,DWORD PTR [ebp-0x14]
  4230d2:	test   eax,eax
  4230d4:	je     0x42313c
  4230da:	lea    eax,[ebp-0x8]
  4230dd:	mov    DWORD PTR [ebp-0x38],eax
  4230e0:	mov    eax,DWORD PTR [ebp-0x34]
  4230e3:	mov    DWORD PTR [ebp-0x8],eax
  4230e6:	mov    eax,DWORD PTR [ebp-0x8]
  4230e9:	mov    ecx,DWORD PTR [ebp-0x14]
  4230ec:	sub    eax,ecx
  4230ee:	mov    DWORD PTR [ebp-0x8],eax
  4230f1:	mov    ecx,DWORD PTR [ebp-0x4]
  4230f4:	xor    ecx,esi
  4230f6:	mov    eax,0xffcd8d14
  4230fb:	sub    eax,ecx
  4230fd:	add    DWORD PTR [ebp-0x8],eax
  423100:	mov    eax,DWORD PTR [ebp-0x8]
  423103:	mov    ecx,DWORD PTR [ebp-0x14]
  423106:	mov    DWORD PTR [ecx+0x1],eax
  423109:	mov    eax,DWORD PTR [ebp-0x14]
  42310c:	push   DWORD PTR [ebp-0x24]
  42310f:	mov    BYTE PTR [eax],0xe9
  423112:	mov    eax,ds:0x42f1e7
  423117:	push   DWORD PTR [eax]
  423119:	push   DWORD PTR ds:0x42f443
  42311f:	push   DWORD PTR ds:0x42f1ef
  423125:	push   DWORD PTR ds:0x42f423
  42312b:	push   DWORD PTR ds:0x42fe03
  423131:	push   DWORD PTR [ebp-0x28]
  423134:	push   DWORD PTR [ebp-0x2c]
  423137:	mov    eax,DWORD PTR [ebp-0x14]
  42313a:	call   eax
  42313c:	mov    eax,DWORD PTR [ebp-0x30]
  42313f:	mov    ecx,DWORD PTR ds:0x42f3e7
  423145:	add    DWORD PTR [eax],ecx
  423147:	pop    edi
  423148:	pop    esi
  423149:	leave  
  42314a:	ret    
  42314b:	push   ebp
  42314c:	mov    ebp,esp
  42314e:	sub    esp,0x18
  423151:	add    ecx,0x1177
  423157:	mov    DWORD PTR [ebp-0x10],0xf89f85b0
  42315e:	lea    eax,[ebp+0x14]
  423161:	mov    DWORD PTR [ebp-0x4],eax
  423164:	xor    edx,edx
  423166:	add    edx,DWORD PTR ds:0x42a01c
  42316c:	add    DWORD PTR ds:0x42a018,edx
  423172:	push   esi
  423173:	mov    esi,0xf89c85b0
  423178:	mov    DWORD PTR [ebp-0xc],esi
  42317b:	movzx  ecx,BYTE PTR ds:0x42c004
  423182:	add    DWORD PTR ds:0x42a008,ecx
  423188:	lea    eax,[ebp-0xc]
  42318b:	or     ecx,0x71b1
  423191:	mov    DWORD PTR [ebp-0x14],eax
  423194:	mov    eax,DWORD PTR [ebp-0xc]
  423197:	and    edx,DWORD PTR ds:0x42c008
  42319d:	mov    edx,DWORD PTR [ebp-0x14]
  4231a0:	sbb    DWORD PTR ds:0x42b014,edi
  4231a6:	mov    ecx,0x75108a4
  4231ab:	adc    DWORD PTR ds:0x42d008,0x42fa
  4231b5:	xor    eax,ecx
  4231b7:	sub    DWORD PTR ds:0x42a014,0x42d00c
  4231c1:	add    eax,0x3272ec
  4231c6:	mov    DWORD PTR [edx],eax
  4231c8:	adc    edx,eax
  4231ca:	mov    eax,ds:0x42f1e3
  4231cf:	mov    edx,DWORD PTR [ebp-0x4]
  4231d2:	mov    eax,DWORD PTR [eax]
  4231d4:	sbb    DWORD PTR ds:0x42d000,0x2503
  4231de:	add    eax,DWORD PTR [edx]
  4231e0:	movzx  edx,BYTE PTR ds:0x42b00c
  4231e7:	add    edx,DWORD PTR ds:0x42b01c
  4231ed:	mov    DWORD PTR ds:0x42b00c,edx
  4231f3:	push   edi
  4231f4:	mov    DWORD PTR ds:0x42901c,0x390b
  4231fe:	mov    DWORD PTR [ebp-0x8],eax
  423201:	and    edi,edx
  423203:	mov    edi,DWORD PTR [ebp+0x8]
  423206:	adc    eax,eax
  423208:	mov    eax,ds:0x42f36b
  42320d:	mov    eax,DWORD PTR [eax+0x198]
  423213:	and    DWORD PTR ds:0x42c000,0x0
  42321d:	mov    edx,DWORD PTR ds:0x42c000
  423223:	inc    edx
  423224:	mov    DWORD PTR ds:0x42c000,edx
  42322a:	cmp    DWORD PTR ds:0x42c000,0x20
  423231:	jb     0x42325b
  423237:	jmp    0x42324e
  42323c:	push   0x42f169
  423241:	push   0x0
  423243:	push   0x64f9
  423248:	call   DWORD PTR ds:0x43003b
  42324e:	cmp    DWORD PTR ds:0x42c000,0x15
  423255:	jb     0x42321d
  42325b:	xor    edi,ecx
  42325d:	mov    edx,DWORD PTR ds:0x42c01c
  423263:	add    DWORD PTR ds:0x42d00c,edx
  423269:	mov    edx,0x3272ec
  42326e:	adc    DWORD PTR ds:0x42d00c,0x354a
  423278:	add    edi,edx
  42327a:	cmp    DWORD PTR [eax],edi
  42327c:	mov    DWORD PTR ds:0x42c018,0xd0b
  423286:	je     0x42329d
  42328c:	mov    eax,DWORD PTR [eax]
  42328e:	mov    DWORD PTR ds:0x42a010,0x6032
  423298:	jmp    0x42364d
  42329d:	mov    eax,DWORD PTR [ebp+0x18]
  4232a0:	mov    DWORD PTR ds:0x42d008,0x3f3a
  4232aa:	cmp    eax,esi
  4232ac:	jne    0x4232c6
  4232b2:	push   0xf89c85b1
  4232b7:	mov    DWORD PTR ds:0x429004,0x3d8f
  4232c1:	jmp    0x42363c
  4232c6:	mov    esi,DWORD PTR [ebp+0x18]
  4232c9:	mov    eax,0xf89c85b2
  4232ce:	mov    DWORD PTR ds:0x42d00c,0x2c1e
  4232d8:	cmp    esi,eax
  4232da:	mov    DWORD PTR ds:0x429008,0x446d
  4232e4:	jne    0x42362c
  4232ea:	mov    eax,DWORD PTR [ebp+0x10]
  4232ed:	xor    DWORD PTR ds:0x42d000,0x2610
  4232f7:	xor    eax,ecx
  4232f9:	add    eax,edx
  4232fb:	and    DWORD PTR ds:0x42c014,0x0
  423305:	jmp    0x423317
  42330a:	mov    esi,DWORD PTR ds:0x42c014
  423310:	inc    esi
  423311:	mov    DWORD PTR ds:0x42c014,esi
  423317:	cmp    DWORD PTR ds:0x42c014,0x17
  42331e:	jae    0x423346
  423324:	cmp    DWORD PTR ds:0x42c014,0x1d
  42332b:	ja     0x423346
  423331:	jmp    0x423341
  423336:	push   0x54c4
  42333b:	call   DWORD PTR ds:0x43003f
  423341:	jmp    0x42330a
  423346:	mov    DWORD PTR [ebp-0x18],eax
  423349:	mov    eax,DWORD PTR [ebp+0xc]
  42334c:	add    DWORD PTR ds:0x42a004,0x5855
  423356:	mov    esi,DWORD PTR [ebp-0x8]
  423359:	and    DWORD PTR ds:0x42c018,0x829
  423363:	xor    eax,ecx
  423365:	adc    DWORD PTR ds:0x42d000,0x54e9
  42336f:	add    eax,edx
  423371:	imul   eax,DWORD PTR [esi]
  423374:	mov    esi,DWORD PTR [ebp+0x8]
  423377:	xor    esi,ecx
  423379:	and    DWORD PTR ds:0x42b014,0x42901c
  423383:	add    esi,edx
  423385:	cmp    esi,eax
  423387:	not    DWORD PTR ds:0x42d018
  42338d:	mov    eax,DWORD PTR [ebp-0x4]
  423390:	mov    DWORD PTR ds:0x42d00c,0x5bdb
  42339a:	push   ebx
  42339b:	mov    DWORD PTR ds:0x429014,0x4e26
  4233a5:	je     0x4233ee
  4233ab:	adc    DWORD PTR ds:0x42b014,ecx
  4233b1:	mov    esi,DWORD PTR [ebp-0x18]
  4233b4:	add    DWORD PTR [eax],esi
  4233b6:	sub    DWORD PTR ds:0x429018,edi
  4233bc:	mov    eax,DWORD PTR [ebp-0x4]
  4233bf:	and    DWORD PTR ds:0x429014,0x244e
  4233c9:	mov    esi,DWORD PTR [ebp+0xc]
  4233cc:	xor    esi,ecx
  4233ce:	adc    DWORD PTR ds:0x42a010,0x1100
  4233d8:	add    esi,edx
  4233da:	imul   esi,DWORD PTR [eax]
  4233dd:	mov    DWORD PTR [eax],esi
  4233df:	mov    DWORD PTR ds:0x42b008,0x673b
  4233e9:	jmp    0x4233fd
  4233ee:	adc    DWORD PTR ds:0x42a000,0x51cf
  4233f8:	mov    esi,DWORD PTR [ebp+0x14]
  4233fb:	xor    DWORD PTR [eax],esi
  4233fd:	mov    eax,DWORD PTR [ebp-0x4]
  423400:	add    DWORD PTR ds:0x42b004,ebx
  423406:	mov    edi,DWORD PTR [ebp+0x10]
  423409:	mov    esi,DWORD PTR ds:0x42b014
  42340f:	xor    DWORD PTR ds:0x42d010,esi
  423415:	xor    edi,ecx
  423417:	mov    esi,0xffcd8d14
  42341c:	mov    ebx,esi
  42341e:	and    DWORD PTR ds:0x42c004,0x42c010
  423428:	sub    ebx,edi
  42342a:	add    DWORD PTR [eax],ebx
  42342c:	movzx  edi,WORD PTR ds:0x42a004
  423433:	adc    DWORD PTR ds:0x42b00c,edi
  423439:	mov    eax,DWORD PTR [ebp-0x4]
  42343c:	or     edi,0x4676
  423442:	mov    edi,DWORD PTR [ebp-0x8]
  423445:	adc    DWORD PTR ds:0x42b010,0x66f8
  42344f:	add    edi,DWORD PTR [eax]
  423451:	mov    DWORD PTR [ebp-0x8],edi
  423454:	and    DWORD PTR ds:0x429008,0x0
  42345e:	jmp    0x423470
  423463:	mov    edi,DWORD PTR ds:0x429008
  423469:	inc    edi
  42346a:	mov    DWORD PTR ds:0x429008,edi
  423470:	cmp    DWORD PTR ds:0x429008,0x1e
  423477:	jae    0x4234d6
  42347d:	cmp    DWORD PTR ds:0x429008,0xe
  423484:	jbe    0x4234d6
  42348a:	jmp    0x4234b5
  42348f:	push   DWORD PTR [ebp-0x10]
  423492:	push   DWORD PTR [ebp-0x10]
  423495:	push   0x1905
  42349a:	push   0x5e48
  42349f:	push   DWORD PTR [ebp-0x14]
  4234a2:	push   DWORD PTR [ebp-0xc]
  4234a5:	push   0x1ad8
  4234aa:	push   0x42f0bb
  4234af:	call   DWORD PTR ds:0x430047
  4234b5:	cmp    DWORD PTR ds:0x429008,0xd
  4234bc:	jne    0x4234d1
  4234c2:	xor    edi,edi
  4234c4:	or     edi,DWORD PTR ds:0x429008
  4234ca:	inc    edi
  4234cb:	mov    DWORD PTR ds:0x429008,edi
  4234d1:	jmp    0x423463
  4234d6:	mov    eax,DWORD PTR [ebp+0xc]
  4234d9:	mov    edi,DWORD PTR [ebp+0xc]
  4234dc:	and    DWORD PTR ds:0x429028,0x2929
  4234e6:	xor    edi,ecx
  4234e8:	sbb    DWORD PTR ds:0x42c000,0x429018
  4234f2:	xor    eax,ecx
  4234f4:	lea    eax,[eax+edi*1+0x64e5d8]
  4234fb:	xor    edi,DWORD PTR ds:0x42b008
  423501:	mov    edi,DWORD PTR [ebp+0xc]
  423504:	xor    edi,ecx
  423506:	add    edi,edx
  423508:	imul   eax,edi
  42350b:	mov    edi,DWORD PTR [ebp+0xc]
  42350e:	xor    edi,ecx
  423510:	sub    edi,eax
  423512:	mov    eax,DWORD PTR [ebp-0x4]
  423515:	add    edi,edx
  423517:	cmp    DWORD PTR [eax],edi
  423519:	mov    eax,DWORD PTR [ebp-0x4]
  42351c:	mov    edi,DWORD PTR [ebp+0x10]
  42351f:	jg     0x423532
  423525:	xor    edi,ecx
  423527:	mov    ebx,esi
  423529:	sub    ebx,edi
  42352b:	add    DWORD PTR [eax],ebx
  42352d:	jmp    0x423538
  423532:	xor    edi,ecx
  423534:	add    edi,edx
  423536:	add    DWORD PTR [eax],edi
  423538:	mov    eax,DWORD PTR [ebp-0x8]
  42353b:	mov    edi,DWORD PTR [ebp-0x10]
  42353e:	mov    eax,DWORD PTR [eax]
  423540:	xor    edi,ecx
  423542:	add    edi,0x3272eb
  423548:	not    edi
  42354a:	and    eax,edi
  42354c:	movsx  di,BYTE PTR [eax+0x1]
  423551:	mov    ebx,0x3b56
  423556:	sub    di,bx
  423559:	mov    ebx,0x8a94
  42355e:	xor    di,bx
  423561:	mov    ebx,0x4f90
  423566:	cmp    di,bx
  423569:	jne    0x423591
  42356f:	movsx  di,BYTE PTR [eax]
  423573:	mov    ebx,0x3b56
  423578:	sub    di,bx
  42357b:	mov    ebx,0x8a94
  423580:	xor    di,bx
  423583:	mov    ebx,0x4e63
  423588:	cmp    di,bx
  42358b:	je     0x4235a1
  423591:	mov    edi,DWORD PTR [ebp-0x10]
  423594:	xor    edi,ecx
  423596:	mov    ebx,esi
  423598:	sub    ebx,edi
  42359a:	add    eax,ebx
  42359c:	jmp    0x42354c
  4235a1:	mov    esi,DWORD PTR [ebp-0x14]
  4235a4:	mov    esi,DWORD PTR [esi]
  4235a6:	mov    edi,DWORD PTR [eax+0x3c]
  4235a9:	lea    esi,[edi+esi*8+0x78]
  4235ad:	mov    esi,DWORD PTR [esi+eax*1]
  4235b0:	mov    DWORD PTR [ebp-0x8],esi
  4235b3:	mov    esi,DWORD PTR [ebp+0x8]
  4235b6:	xor    esi,ecx
  4235b8:	add    esi,edx
  4235ba:	mov    DWORD PTR [ebp-0x14],esi
  4235bd:	mov    esi,DWORD PTR [ebp+0x8]
  4235c0:	mov    edi,DWORD PTR [ebp-0x8]
  4235c3:	xor    esi,ecx
  4235c5:	add    esi,edx
  4235c7:	pop    ebx
  4235c8:	cmp    edi,esi
  4235ca:	jne    0x4235e8
  4235d0:	mov    eax,DWORD PTR [ebp+0xc]
  4235d3:	xor    eax,ecx
  4235d5:	mov    ecx,DWORD PTR [ebp-0x8]
  4235d8:	add    eax,edx
  4235da:	imul   eax,ecx
  4235dd:	mov    DWORD PTR [ebp-0x8],eax
  4235e0:	push   DWORD PTR [ebp+0x18]
  4235e3:	jmp    0x42363c
  4235e8:	mov    ecx,DWORD PTR [ebp-0x8]
  4235eb:	add    ecx,eax
  4235ed:	mov    DWORD PTR [ebp-0x14],ecx
  4235f0:	mov    ecx,DWORD PTR [ebp-0x14]
  4235f3:	mov    ecx,DWORD PTR [ecx+0xc]
  4235f6:	movsx  cx,BYTE PTR [ecx+eax*1]
  4235fb:	mov    edx,0x3b56
  423600:	sub    cx,dx
  423603:	mov    edx,0x8a94
  423608:	xor    cx,dx
  42360b:	mov    edx,0x4e61
  423610:	cmp    cx,dx
  423613:	jne    0x4235e0
  423619:	mov    ecx,DWORD PTR ds:0x42f36b
  42361f:	mov    ecx,DWORD PTR [ecx+0x198]
  423625:	mov    DWORD PTR [ecx],eax
  423627:	jmp    0x42364d
  42362c:	mov    ecx,DWORD PTR [ebp+0x18]
  42362f:	cmp    ecx,0xf89c85b1
  423635:	jne    0x42364d
  42363b:	push   eax
  42363c:	push   DWORD PTR [ebp+0x14]
  42363f:	push   DWORD PTR [ebp+0x10]
  423642:	push   DWORD PTR [ebp+0xc]
  423645:	push   DWORD PTR [ebp+0x8]
  423648:	call   0x42314b
  42364d:	pop    edi
  42364e:	pop    esi
  42364f:	leave  
  423650:	ret    0x14
  423653:	push   ebp
  423654:	mov    ebp,esp
  423656:	sub    esp,0x70
  423659:	push   edi
  42365a:	push   0x42f47b
  42365f:	and    DWORD PTR ds:0x42d004,0x1ec1
  423669:	call   DWORD PTR ds:0x43002f
  42366f:	mov    edi,DWORD PTR ds:0x42d014
  423675:	sbb    DWORD PTR ds:0x42b014,edi
  42367b:	mov    edi,DWORD PTR ds:0x43004f
  423681:	sbb    DWORD PTR ds:0x42a014,0x42c000
  42368b:	push   0x42f49b
  423690:	call   edi
  423692:	adc    DWORD PTR ds:0x429004,0x5ead
  42369c:	test   eax,eax
  42369e:	je     0x4236e0
  4236a4:	push   0x0
  4236a6:	adc    DWORD PTR ds:0x42d000,0x42c004
  4236b0:	push   0x0
  4236b2:	add    DWORD PTR ds:0x42b008,0x118d
  4236bc:	push   0x42f50b
  4236c1:	and    DWORD PTR ds:0x42900c,0x1fff
  4236cb:	call   DWORD PTR ds:0x43001f
  4236d1:	mov    DWORD PTR ds:0x42a01c,0x2e2c
  4236db:	jmp    0x4245c8
  4236e0:	push   esi
  4236e1:	xor    esi,esi
  4236e3:	or     esi,DWORD PTR ds:0x42c000
  4236e9:	sub    esi,DWORD PTR ds:0x42901c
  4236ef:	mov    DWORD PTR ds:0x42c000,esi
  4236f5:	mov    esi,DWORD PTR ds:0x430043
  4236fb:	add    DWORD PTR ds:0x429024,0x42a000
  423705:	lea    eax,[ebp-0x70]
  423708:	push   eax
  423709:	xor    DWORD PTR ds:0x42b010,0x42a00c
  423713:	push   0x42f4d7
  423718:	dec    DWORD PTR ds:0x42900c
  42371e:	call   esi
  423720:	test   eax,eax
  423722:	mov    DWORD PTR ds:0x42b018,0x2e12
  42372c:	je     0x423746
  423732:	push   0x42f54b
  423737:	mov    DWORD PTR ds:0x42c014,0x3c92
  423741:	jmp    0x4237e1
  423746:	sbb    DWORD PTR ds:0x429020,0x6e1f
  423750:	push   0x42f563
  423755:	call   edi
  423757:	test   eax,eax
  423759:	mov    DWORD PTR ds:0x42b010,0x136e
  423763:	je     0x423791
  423769:	adc    DWORD PTR ds:0x42c010,0x42a008
  423773:	push   0x0
  423775:	push   0x0
  423777:	push   0x42f5d3
  42377c:	add    DWORD PTR ds:0x42b004,0x42c014
  423786:	call   DWORD PTR ds:0x43001f
  42378c:	jmp    0x4245c7
  423791:	xor    DWORD PTR ds:0x429014,0x61d8
  42379b:	lea    eax,[ebp-0x70]
  42379e:	sbb    DWORD PTR ds:0x42c01c,0x42d004
  4237a8:	push   eax
  4237a9:	neg    DWORD PTR ds:0x42c018
  4237af:	push   0x42f59f
  4237b4:	call   esi
  4237b6:	sbb    DWORD PTR ds:0x429020,0x42a000
  4237c0:	test   eax,eax
  4237c2:	mov    DWORD PTR ds:0x42b014,0x3bd8
  4237cc:	je     0x4237f6
  4237d2:	or     DWORD PTR ds:0x42a000,0x5797
  4237dc:	push   0x42f613
  4237e1:	sub    DWORD PTR ds:0x429020,0x7429
  4237eb:	call   DWORD PTR ds:0x430023
  4237f1:	jmp    0x4245c7
  4237f6:	mov    DWORD PTR [ebp-0x2c],0x0
  4237fd:	mov    eax,ds:0x42d018
  423802:	sbb    eax,DWORD PTR ds:0x42c018
  423808:	mov    ds:0x42d018,eax
  42380d:	mov    eax,DWORD PTR [ebp-0x20]
  423810:	mov    DWORD PTR [ebp-0x20],eax
  423813:	mov    DWORD PTR ds:0x42a004,0x1b
  42381d:	cmp    DWORD PTR ds:0x42a004,0x0
  423824:	je     0x42387b
  42382a:	cmp    DWORD PTR ds:0x42a004,0x2
  423831:	jbe    0x42387b
  423837:	jmp    0x42384d
  42383c:	push   DWORD PTR [ebp-0x28]
  42383f:	push   0x7240
  423844:	push   DWORD PTR [ebp-0x1c]
  423847:	call   DWORD PTR ds:0x43004b
  42384d:	cmp    DWORD PTR ds:0x42a004,0x3
  423854:	jne    0x423869
  42385a:	xor    edx,edx
  42385c:	add    edx,DWORD PTR ds:0x42a004
  423862:	dec    edx
  423863:	mov    DWORD PTR ds:0x42a004,edx
  423869:	mov    edx,DWORD PTR ds:0x42a004
  42386f:	dec    edx
  423870:	mov    DWORD PTR ds:0x42a004,edx
  423876:	jmp    0x42381d
  42387b:	mov    ecx,0xf89c85b0
  423880:	mov    DWORD PTR [ebp-0x4],ecx
  423883:	mov    DWORD PTR [ebp-0x8],0xf89c85b1
  42388a:	lea    eax,[ebp-0x14]
  42388d:	adc    edi,edi
  42388f:	mov    DWORD PTR [ebp-0x2c],eax
  423892:	lea    eax,[ebp-0x18]
  423895:	sbb    edi,0x185f
  42389b:	mov    DWORD PTR [ebp-0x24],eax
  42389e:	inc    edi
  42389f:	mov    eax,ds:0x42f36b
  4238a4:	mov    eax,DWORD PTR [eax+0x1c8]
  4238aa:	add    DWORD PTR ds:0x42b014,edi
  4238b0:	mov    eax,DWORD PTR [eax]
  4238b2:	mov    edx,DWORD PTR [ebp-0x24]
  4238b5:	mov    edi,0x75108a4
  4238ba:	mov    DWORD PTR ds:0x42b004,0x30ab
  4238c4:	xor    eax,edi
  4238c6:	sbb    DWORD PTR ds:0x42c000,0x429024
  4238d0:	push   ebx
  4238d1:	sub    ebx,0x6eba
  4238d7:	mov    ebx,0x3272ec
  4238dc:	adc    DWORD PTR ds:0x42d018,0x42c01c
  4238e6:	add    eax,ebx
  4238e8:	mov    DWORD PTR ds:0x42d008,0x4b8b
  4238f2:	mov    DWORD PTR [edx],eax
  4238f4:	mov    eax,0x64e4
  4238f9:	mov    eax,ds:0x42fed3
  4238fe:	cmp    eax,0x434cdbf8
  423903:	jne    0x423a1b
  423909:	mov    eax,DWORD PTR [ebp-0x4]
  42390c:	inc    DWORD PTR ds:0x429014
  423912:	mov    edx,DWORD PTR ds:0x42f36b
  423918:	and    DWORD PTR ds:0x429024,0x0
  423922:	mov    esi,DWORD PTR ds:0x429024
  423928:	inc    esi
  423929:	mov    DWORD PTR ds:0x429024,esi
  42392f:	cmp    DWORD PTR ds:0x429024,0xa
  423936:	jg     0x423978
  42393c:	jmp    0x423951
  423941:	push   0x42c018
  423946:	push   0x42f19b
  42394b:	call   DWORD PTR ds:0x43000b
  423951:	cmp    DWORD PTR ds:0x429024,0x9
  423958:	jne    0x42396b
  42395e:	mov    esi,DWORD PTR ds:0x429024
  423964:	inc    esi
  423965:	mov    DWORD PTR ds:0x429024,esi
  42396b:	cmp    DWORD PTR ds:0x429024,0x12
  423972:	jb     0x423922
  423978:	mov    edx,DWORD PTR [edx+0x198]
  42397e:	and    DWORD PTR ds:0x429008,edx
  423984:	xor    eax,edi
  423986:	or     esi,DWORD PTR ds:0x42901c
  42398c:	add    eax,ebx
  42398e:	xor    esi,0x27f0
  423994:	mov    DWORD PTR [edx],eax
  423996:	mov    eax,ds:0x42b01c
  42399b:	adc    eax,DWORD PTR ds:0x42a008
  4239a1:	mov    ds:0x42b01c,eax
  4239a6:	mov    eax,DWORD PTR [ebp-0x4]
  4239a9:	sbb    esi,0x278
  4239af:	xor    eax,edi
  4239b1:	mov    DWORD PTR ds:0x42a004,0x14
  4239bb:	cmp    DWORD PTR ds:0x42a004,0x0
  4239c2:	je     0x423a14
  4239c8:	cmp    DWORD PTR ds:0x42a004,0x3
  4239cf:	ja     0x423a14
  4239d5:	jmp    0x4239e8
  4239da:	push   0x42d01c
  4239df:	push   DWORD PTR [ebp-0x20]
  4239e2:	call   DWORD PTR ds:0x43000f
  4239e8:	cmp    DWORD PTR ds:0x42a004,0x4
  4239ef:	jne    0x423a02
  4239f5:	mov    esi,DWORD PTR ds:0x42a004
  4239fb:	dec    esi
  4239fc:	mov    DWORD PTR ds:0x42a004,esi
  423a02:	mov    esi,DWORD PTR ds:0x42a004
  423a08:	dec    esi
  423a09:	mov    DWORD PTR ds:0x42a004,esi
  423a0f:	jmp    0x4239bb
  423a14:	add    eax,ebx
  423a16:	mov    ds:0x42fed3,eax
  423a1b:	movzx  eax,WORD PTR ds:0x42d008
  423a22:	and    DWORD PTR ds:0x429028,eax
  423a28:	mov    eax,ds:0x42f36b
  423a2d:	mov    eax,DWORD PTR [eax+0x18c]
  423a33:	adc    DWORD PTR ds:0x429014,0x7baf
  423a3d:	mov    eax,DWORD PTR [eax]
  423a3f:	mov    DWORD PTR ds:0x42b004,0x12
  423a49:	cmp    DWORD PTR ds:0x42b004,0x0
  423a50:	je     0x423a9a
  423a56:	cmp    DWORD PTR ds:0x42b004,0x5
  423a5d:	ja     0x423a9a
  423a63:	jmp    0x423a6e
  423a68:	call   DWORD PTR ds:0x430013
  423a6e:	cmp    DWORD PTR ds:0x42b004,0x6
  423a75:	jne    0x423a88
  423a7b:	mov    esi,DWORD PTR ds:0x42b004
  423a81:	dec    esi
  423a82:	mov    DWORD PTR ds:0x42b004,esi
  423a88:	mov    esi,DWORD PTR ds:0x42b004
  423a8e:	dec    esi
  423a8f:	mov    DWORD PTR ds:0x42b004,esi
  423a95:	jmp    0x423a49
  423a9a:	mov    DWORD PTR [ebp-0x34],eax
  423a9d:	and    DWORD PTR ds:0x42900c,0x0
  423aa7:	jmp    0x423ab9
  423aac:	mov    esi,DWORD PTR ds:0x42900c
  423ab2:	inc    esi
  423ab3:	mov    DWORD PTR ds:0x42900c,esi
  423ab9:	cmp    DWORD PTR ds:0x42900c,0x1b
  423ac0:	jae    0x423b09
  423ac6:	cmp    DWORD PTR ds:0x42900c,0xb
  423acd:	jl     0x423b09
  423ad3:	jmp    0x423ae8
  423ad8:	push   0x42f14f
  423add:	push   0x1
  423adf:	push   DWORD PTR [ebp-0x24]
  423ae2:	call   DWORD PTR ds:0x430017
  423ae8:	cmp    DWORD PTR ds:0x42900c,0xa
  423aef:	jne    0x423b04
  423af5:	xor    esi,esi
  423af7:	add    esi,DWORD PTR ds:0x42900c
  423afd:	inc    esi
  423afe:	mov    DWORD PTR ds:0x42900c,esi
  423b04:	jmp    0x423aac
  423b09:	mov    eax,0xf89c85bc
  423b0e:	or     DWORD PTR ds:0x42b000,ecx
  423b14:	mov    DWORD PTR [ebp-0x24],eax
  423b17:	mov    DWORD PTR [ebp-0x24],eax
  423b1a:	xor    DWORD PTR ds:0x42d018,ecx
  423b20:	mov    DWORD PTR [ebp-0x24],eax
  423b23:	dec    esi
  423b24:	mov    DWORD PTR [ebp-0x24],ecx
  423b27:	or     esi,DWORD PTR ds:0x42c000
  423b2d:	mov    DWORD PTR [ebp-0x38],eax
  423b30:	mov    DWORD PTR [ebp-0x38],0xf89c85b8
  423b37:	adc    DWORD PTR ds:0x42901c,ecx
  423b3d:	mov    esi,DWORD PTR [ebp-0x4]
  423b40:	sbb    DWORD PTR ds:0x429004,0x42b01c
  423b4a:	xor    esi,edi
  423b4c:	add    esi,ebx
  423b4e:	jmp    0x423c9d
  423b53:	mov    eax,DWORD PTR [ebp-0x8]
  423b56:	add    DWORD PTR ds:0x42b008,0x42d014
  423b60:	xor    eax,edi
  423b62:	sub    DWORD PTR ds:0x429004,0x42b014
  423b6c:	lea    eax,[eax+esi*1+0x3272ec]
  423b73:	and    DWORD PTR ds:0x42d00c,0x42a00c
  423b7d:	push   eax
  423b7e:	mov    DWORD PTR ds:0x42c018,0x956
  423b88:	mov    eax,DWORD PTR [ebp-0x24]
  423b8b:	add    DWORD PTR ds:0x42b018,0x42d004
  423b95:	xor    eax,edi
  423b97:	and    DWORD PTR ds:0x42d010,0x42b01c
  423ba1:	lea    eax,[ebp+eax*1+0x3272f4]
  423ba8:	xor    DWORD PTR ds:0x42b018,0x429018
  423bb2:	push   eax
  423bb3:	adc    DWORD PTR ds:0x42a014,0x1370
  423bbd:	mov    eax,ds:0x42f36b
  423bc2:	add    DWORD PTR ds:0x42d014,0xcb6
  423bcc:	push   DWORD PTR [eax+0x1bc]
  423bd2:	call   0x4245cd
  423bd7:	and    DWORD PTR ds:0x429004,0x0
  423be1:	mov    eax,ds:0x429004
  423be6:	inc    eax
  423be7:	mov    ds:0x429004,eax
  423bec:	cmp    DWORD PTR ds:0x429004,0x7
  423bf3:	jl     0x423c48
  423bf9:	jmp    0x423c23
  423bfe:	push   0x50e0
  423c03:	push   DWORD PTR [ebp-0x10]
  423c06:	push   0x429008
  423c0b:	push   DWORD PTR [ebp-0x18]
  423c0e:	push   0x60f5
  423c13:	push   0x7920
  423c18:	push   0x2e0e
  423c1d:	call   DWORD PTR ds:0x43001b
  423c23:	cmp    DWORD PTR ds:0x429004,0x6
  423c2a:	jne    0x423c3b
  423c30:	mov    eax,ds:0x429004
  423c35:	inc    eax
  423c36:	mov    ds:0x429004,eax
  423c3b:	cmp    DWORD PTR ds:0x429004,0x11
  423c42:	jb     0x423be1
  423c48:	mov    eax,DWORD PTR [ebp-0x8]
  423c4b:	xor    eax,edi
  423c4d:	mov    DWORD PTR ds:0x42d004,0x15
  423c57:	cmp    DWORD PTR ds:0x42d004,0x0
  423c5e:	je     0x423c96
  423c64:	cmp    DWORD PTR ds:0x42d004,0x20
  423c6b:	jle    0x423c96
  423c71:	jmp    0x423c82
  423c76:	push   DWORD PTR [ebp-0x1c]
  423c79:	push   DWORD PTR [ebp-0x14]
  423c7c:	call   DWORD PTR ds:0x430027
  423c82:	xor    ecx,ecx
  423c84:	add    ecx,DWORD PTR ds:0x42d004
  423c8a:	dec    ecx
  423c8b:	mov    DWORD PTR ds:0x42d004,ecx
  423c91:	jmp    0x423c57
  423c96:	lea    esi,[esi+eax*1+0x3272ec]
  423c9d:	neg    eax
  423c9f:	mov    eax,DWORD PTR [ebp-0x8]
  423ca2:	adc    DWORD PTR ds:0x42d000,0x333b
  423cac:	mov    ecx,DWORD PTR [ebp-0x8]
  423caf:	xor    DWORD PTR ds:0x42d014,0x42a014
  423cb9:	xor    ecx,edi
  423cbb:	and    DWORD PTR ds:0x42d00c,0x42b018
  423cc5:	xor    eax,edi
  423cc7:	add    eax,ecx
  423cc9:	mov    ecx,DWORD PTR [ebp-0x8]
  423ccc:	and    DWORD PTR ds:0x42a008,0x42d00c
  423cd6:	xor    ecx,edi
  423cd8:	mov    DWORD PTR ds:0x42b008,0x48ca
  423ce2:	lea    eax,[eax+ecx*1+0x9758c4]
  423ce9:	mov    DWORD PTR ds:0x42a01c,0x2b5
  423cf3:	cmp    esi,eax
  423cf5:	mov    DWORD PTR ds:0x42b01c,0x6741
  423cff:	jbe    0x423b53
  423d05:	mov    eax,DWORD PTR [ebp+0xc]
  423d08:	mov    ds:0x42f1ef,eax
  423d0d:	sub    ecx,ecx
  423d0f:	mov    eax,DWORD PTR [ebp+0x10]
  423d12:	sub    ecx,DWORD PTR ds:0x42d018
  423d18:	mov    ds:0x42f443,eax
  423d1d:	mov    eax,ds:0x42f1ef
  423d22:	or     DWORD PTR ds:0x42c008,ebx
  423d28:	mov    ecx,DWORD PTR [ebp-0x2c]
  423d2b:	add    DWORD PTR ds:0x429014,0xb75
  423d35:	sub    eax,ebx
  423d37:	add    DWORD PTR ds:0x42b000,0x59bf
  423d41:	xor    eax,edi
  423d43:	mov    DWORD PTR ds:0x42c014,0x601c
  423d4d:	mov    DWORD PTR [ecx],eax
  423d4f:	not    eax
  423d51:	mov    eax,DWORD PTR [ebp-0x20]
  423d54:	mov    DWORD PTR ds:0x429000,0x4eb8
  423d5e:	cmp    eax,0xf89c85b0
  423d63:	jne    0x424162
  423d69:	xor    DWORD PTR ds:0x42a004,0x4e87
  423d73:	lea    eax,[ebp-0x10]
  423d76:	mov    DWORD PTR [ebp-0x40],eax
  423d79:	sbb    DWORD PTR ds:0x42900c,0x429018
  423d83:	lea    eax,[ebp+0x4]
  423d86:	mov    DWORD PTR [ebp-0x10],eax
  423d89:	or     DWORD PTR ds:0x42c000,0x26f1
  423d93:	mov    eax,DWORD PTR [ebp-0x10]
  423d96:	test   eax,eax
  423d98:	je     0x42451f
  423d9e:	add    DWORD PTR ds:0x42b00c,0x193f
  423da8:	push   0x42f62b
  423dad:	call   DWORD PTR ds:0x43004f
  423db3:	add    DWORD PTR ds:0x42c010,0x3f0d
  423dbd:	test   eax,eax
  423dbf:	mov    DWORD PTR ds:0x42c010,0x4f7a
  423dc9:	je     0x423de7
  423dcf:	push   0x0
  423dd1:	push   0x0
  423dd3:	mov    DWORD PTR ds:0x42b00c,0x5e6e
  423ddd:	push   0x42f69b
  423de2:	jmp    0x424593
  423de7:	or     DWORD PTR ds:0x42d004,0x382d
  423df1:	lea    eax,[ebp-0x70]
  423df4:	add    DWORD PTR ds:0x42d004,0x42b01c
  423dfe:	push   eax
  423dff:	xor    DWORD PTR ds:0x42b00c,0x6609
  423e09:	push   0x42f667
  423e0e:	or     DWORD PTR ds:0x42d000,0x2f88
  423e18:	call   DWORD PTR ds:0x430043
  423e1e:	or     DWORD PTR ds:0x429000,0x1a50
  423e28:	test   eax,eax
  423e2a:	je     0x423e4e
  423e30:	mov    DWORD PTR ds:0x42c008,0x985
  423e3a:	push   0x42f6db
  423e3f:	mov    DWORD PTR ds:0x42b000,0x1ac7
  423e49:	jmp    0x4245b6
  423e4e:	and    DWORD PTR ds:0x42b008,0x0
  423e58:	jmp    0x423e6c
  423e5d:	xor    esi,esi
  423e5f:	xor    esi,DWORD PTR ds:0x42b008
  423e65:	inc    esi
  423e66:	mov    DWORD PTR ds:0x42b008,esi
  423e6c:	cmp    DWORD PTR ds:0x42b008,0x1c
  423e73:	jae    0x423e9e
  423e79:	cmp    DWORD PTR ds:0x42b008,0x27
  423e80:	jbe    0x423e9e
  423e86:	jmp    0x423e99
  423e8b:	push   DWORD PTR [ebp-0x24]
  423e8e:	push   0x545e
  423e93:	call   DWORD PTR ds:0x43002b
  423e99:	jmp    0x423e5d
  423e9e:	mov    eax,DWORD PTR [ebp-0xc]
  423ea1:	not    eax
  423ea3:	mov    eax,DWORD PTR [ebp-0x8]
  423ea6:	sbb    DWORD PTR ds:0x429018,0x42d000
  423eb0:	mov    eax,DWORD PTR [ebp-0x4]
  423eb3:	mov    DWORD PTR ds:0x429014,0x18
  423ebd:	cmp    DWORD PTR ds:0x429014,0x0
  423ec4:	je     0x423f03
  423eca:	cmp    DWORD PTR ds:0x429014,0x23
  423ed1:	jbe    0x423f03
  423ed7:	jmp    0x423ef1
  423edc:	push   0x8e6d
  423ee1:	push   0x42a018
  423ee6:	push   0x42f09c
  423eeb:	call   DWORD PTR ds:0x430033
  423ef1:	mov    ecx,DWORD PTR ds:0x429014
  423ef7:	dec    ecx
  423ef8:	mov    DWORD PTR ds:0x429014,ecx
  423efe:	jmp    0x423ebd
  423f03:	mov    DWORD PTR [ebp+0xc],eax
  423f06:	xor    ecx,ecx
  423f08:	or     ecx,DWORD PTR ds:0x424a5e
  423f0e:	mov    ecx,DWORD PTR [ecx]
  423f10:	sbb    DWORD PTR ds:0x429014,ecx
  423f16:	mov    eax,eax
  423f18:	mov    eax,ds:0x42f36b
  423f1d:	mov    eax,DWORD PTR [eax+0x1c8]
  423f23:	not    DWORD PTR ds:0x42c01c
  423f29:	mov    eax,DWORD PTR [eax]
  423f2b:	add    DWORD PTR ds:0x429024,ebx
  423f31:	cdq    
  423f32:	mov    esi,0xfabdbedd
  423f37:	dec    ecx
  423f38:	add    eax,esi
  423f3a:	mov    ecx,0x2e63
  423f3f:	adc    edx,0xffffffff
  423f42:	and    DWORD PTR [ebp-0x38],0x0
  423f46:	and    DWORD PTR ds:0x42d000,0x0
  423f50:	jmp    0x423f62
  423f55:	mov    ecx,DWORD PTR ds:0x42d000
  423f5b:	inc    ecx
  423f5c:	mov    DWORD PTR ds:0x42d000,ecx
  423f62:	cmp    DWORD PTR ds:0x42d000,0x11
  423f69:	jae    0x423fb0
  423f6f:	cmp    DWORD PTR ds:0x42d000,0x7
  423f76:	jb     0x423fb0
  423f7c:	jmp    0x423f8f
  423f81:	push   0x182f
  423f86:	push   DWORD PTR [ebp-0x20]
  423f89:	call   DWORD PTR ds:0x430037
  423f8f:	cmp    DWORD PTR ds:0x42d000,0x6
  423f96:	jne    0x423fab
  423f9c:	xor    ecx,ecx
  423f9e:	add    ecx,DWORD PTR ds:0x42d000
  423fa4:	inc    ecx
  423fa5:	mov    DWORD PTR ds:0x42d000,ecx
  423fab:	jmp    0x423f55
  423fb0:	xor    edx,0x0
  423fb3:	and    DWORD PTR ds:0x42d010,0x0
  423fbd:	jmp    0x423fcf
  423fc2:	mov    ecx,DWORD PTR ds:0x42d010
  423fc8:	inc    ecx
  423fc9:	mov    DWORD PTR ds:0x42d010,ecx
  423fcf:	cmp    DWORD PTR ds:0x42d010,0x17
  423fd6:	jae    0x424003
  423fdc:	cmp    DWORD PTR ds:0x42d010,0x26
  423fe3:	jl     0x424003
  423fe9:	jmp    0x423ffe
  423fee:	push   0x42f181
  423ff3:	push   0x0
  423ff5:	push   DWORD PTR [ebp-0x20]
  423ff8:	call   DWORD PTR ds:0x43003b
  423ffe:	jmp    0x423fc2
  424003:	mov    DWORD PTR [ebp-0x24],edx
  424006:	mov    DWORD PTR ds:0x42b000,0x1d
  424010:	cmp    DWORD PTR ds:0x42b000,0x0
  424017:	je     0x424064
  42401d:	cmp    DWORD PTR ds:0x42b000,0xb
  424024:	jbe    0x424064
  42402a:	jmp    0x424038
  42402f:	push   DWORD PTR [ebp-0x20]
  424032:	call   DWORD PTR ds:0x43003f
  424038:	cmp    DWORD PTR ds:0x42b000,0xc
  42403f:	jne    0x424052
  424045:	mov    edx,DWORD PTR ds:0x42b000
  42404b:	dec    edx
  42404c:	mov    DWORD PTR ds:0x42b000,edx
  424052:	mov    edx,DWORD PTR ds:0x42b000
  424058:	dec    edx
  424059:	mov    DWORD PTR ds:0x42b000,edx
  42405f:	jmp    0x424010
  424064:	mov    edx,DWORD PTR [ebp+0xc]
  424067:	mov    DWORD PTR [ebp-0x3c],edx
  42406a:	and    DWORD PTR ds:0x42c018,0x0
  424074:	mov    ecx,DWORD PTR ds:0x42c018
  42407a:	inc    ecx
  42407b:	mov    DWORD PTR ds:0x42c018,ecx
  424081:	cmp    DWORD PTR ds:0x42c018,0xa
  424088:	ja     0x4240e2
  42408e:	jmp    0x4240bb
  424093:	push   0x3e21
  424098:	push   0x8ac9
  42409d:	push   DWORD PTR [ebp-0x24]
  4240a0:	push   DWORD PTR [ebp-0x20]
  4240a3:	push   0x8a2e
  4240a8:	push   DWORD PTR [ebp-0x10]
  4240ab:	push   0x6472
  4240b0:	push   0x42f0d5
  4240b5:	call   DWORD PTR ds:0x430047
  4240bb:	cmp    DWORD PTR ds:0x42c018,0x9
  4240c2:	jne    0x4240d5
  4240c8:	mov    ecx,DWORD PTR ds:0x42c018
  4240ce:	inc    ecx
  4240cf:	mov    DWORD PTR ds:0x42c018,ecx
  4240d5:	cmp    DWORD PTR ds:0x42c018,0x10
  4240dc:	jb     0x424074
  4240e2:	mov    ecx,0x8a29a137
  4240e7:	xor    eax,ecx
  4240e9:	add    DWORD PTR [ebp-0x3c],esi
  4240ec:	mov    edx,DWORD PTR [ebp-0x3c]
  4240ef:	adc    DWORD PTR [ebp-0x38],0xffffffff
  4240f3:	xor    edx,ecx
  4240f5:	mov    DWORD PTR [ebp-0x30],edx
  4240f8:	mov    edx,DWORD PTR [ebp-0x38]
  4240fb:	xor    edx,0x0
  4240fe:	mov    DWORD PTR [ebp-0x2c],edx
  424101:	cmp    DWORD PTR [ebp-0x30],eax
  424104:	jne    0x424115
  42410a:	mov    eax,DWORD PTR [ebp-0x24]
  42410d:	cmp    edx,eax
  42410f:	je     0x424142
  424115:	mov    eax,ds:0x42f36b
  42411a:	mov    eax,DWORD PTR [eax+0x1c0]
  424120:	mov    eax,DWORD PTR [eax]
  424122:	xor    edx,edx
  424124:	add    eax,esi
  424126:	adc    edx,0xffffffff
  424129:	xor    eax,ecx
  42412b:	xor    edx,0x0
  42412e:	cmp    eax,0x70941fe9
  424133:	jne    0x42451f
  424139:	cmp    edx,0xffffffff
  42413c:	jne    0x42451f
  424142:	mov    eax,ds:0x42f3e7
  424147:	mov    edx,DWORD PTR ds:0x42f3ef
  42414d:	xor    eax,edx
  42414f:	mov    ds:0x42f3e7,eax
  424154:	mov    edx,DWORD PTR ds:0x42f3e7
  42415a:	mov    eax,DWORD PTR [ebp-0x10]
  42415d:	jmp    0x4244df
  424162:	mov    eax,DWORD PTR [ebp-0x14]
  424165:	cmp    eax,0xf89c85b1
  42416a:	je     0x424209
  424170:	mov    eax,DWORD PTR [ebp-0x4]
  424173:	mov    ecx,DWORD PTR [ebp-0x18]
  424176:	xor    eax,edi
  424178:	add    eax,ebx
  42417a:	cmp    eax,ecx
  42417c:	je     0x424209
  424182:	push   0x42fba3
  424187:	call   DWORD PTR ds:0x43004f
  42418d:	test   eax,eax
  42418f:	je     0x4241a3
  424195:	push   0x0
  424197:	push   0x0
  424199:	push   0x42fc13
  42419e:	jmp    0x424593
  4241a3:	lea    eax,[ebp-0x70]
  4241a6:	push   eax
  4241a7:	push   0x42fbdf
  4241ac:	call   DWORD PTR ds:0x430043
  4241b2:	test   eax,eax
  4241b4:	je     0x4241c4
  4241ba:	push   0x42fc53
  4241bf:	jmp    0x4245b6
  4241c4:	mov    eax,ds:0x42f36b
  4241c9:	mov    eax,DWORD PTR [eax+0x194]
  4241cf:	mov    ecx,DWORD PTR [eax]
  4241d1:	mov    eax,DWORD PTR [ecx+0x3c]
  4241d4:	push   DWORD PTR ds:0x42f443
  4241da:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  4241de:	push   DWORD PTR ds:0x42f1ef
  4241e4:	add    eax,ecx
  4241e6:	mov    ecx,DWORD PTR ds:0x42f36b
  4241ec:	mov    ecx,DWORD PTR [ecx+0x194]
  4241f2:	push   DWORD PTR [ecx]
  4241f4:	call   eax
  4241f6:	mov    ecx,DWORD PTR ds:0x42f36b
  4241fc:	mov    ecx,DWORD PTR [ecx+0x1cc]
  424202:	mov    DWORD PTR [ecx],eax
  424204:	jmp    0x42451f
  424209:	push   0x42f6f3
  42420e:	call   DWORD PTR ds:0x43004f
  424214:	test   eax,eax
  424216:	je     0x42422a
  42421c:	push   0x0
  42421e:	push   0x0
  424220:	push   0x42f763
  424225:	jmp    0x424593
  42422a:	mov    esi,DWORD PTR ds:0x430043
  424230:	lea    eax,[ebp-0x70]
  424233:	push   eax
  424234:	push   0x42f72f
  424239:	call   esi
  42423b:	test   eax,eax
  42423d:	je     0x42424d
  424243:	push   0x42f7a3
  424248:	jmp    0x4245b6
  42424d:	mov    eax,DWORD PTR [ebp-0x4]
  424250:	mov    ecx,DWORD PTR [ebp-0x34]
  424253:	xor    eax,edi
  424255:	add    eax,ebx
  424257:	cmp    eax,ecx
  424259:	jne    0x424336
  42425f:	mov    eax,DWORD PTR [ebp-0x4]
  424262:	mov    ecx,DWORD PTR ds:0x42f36b
  424268:	mov    ecx,DWORD PTR [ecx+0x198]
  42426e:	xor    eax,edi
  424270:	add    eax,ebx
  424272:	cmp    eax,DWORD PTR [ecx]
  424274:	jne    0x4242d5
  42427a:	push   0x42f7bb
  42427f:	call   DWORD PTR ds:0x43004f
  424285:	test   eax,eax
  424287:	je     0x42429b
  42428d:	push   0x0
  42428f:	push   0x0
  424291:	push   0x42f82b
  424296:	jmp    0x424593
  42429b:	lea    eax,[ebp-0x70]
  42429e:	push   eax
  42429f:	push   0x42f7f7
  4242a4:	call   esi
  4242a6:	test   eax,eax
  4242a8:	je     0x4242b8
  4242ae:	push   0x42f86b
  4242b3:	jmp    0x4245b6
  4242b8:	mov    eax,DWORD PTR [ebp-0x4]
  4242bb:	push   0xf89c85b0
  4242c0:	xor    eax,edi
  4242c2:	add    eax,ebx
  4242c4:	push   eax
  4242c5:	push   0xf89c85bc
  4242ca:	push   DWORD PTR [ebp-0x8]
  4242cd:	push   DWORD PTR [ebp-0x4]
  4242d0:	call   0x42314b
  4242d5:	push   0x42f883
  4242da:	call   DWORD PTR ds:0x43004f
  4242e0:	test   eax,eax
  4242e2:	je     0x4242f6
  4242e8:	push   0x0
  4242ea:	push   0x0
  4242ec:	push   0x42f8f3
  4242f1:	jmp    0x424593
  4242f6:	lea    eax,[ebp-0x70]
  4242f9:	push   eax
  4242fa:	push   0x42f8bf
  4242ff:	call   esi
  424301:	test   eax,eax
  424303:	je     0x424313
  424309:	push   0x42f933
  42430e:	jmp    0x4245b6
  424313:	push   DWORD PTR [ebp-0x8]
  424316:	push   DWORD PTR [ebp-0x4]
  424319:	call   0x401000
  42431e:	mov    eax,DWORD PTR [ebp-0x4]
  424321:	xor    eax,edi
  424323:	add    eax,ebx
  424325:	mov    ds:0x42f3ef,eax
  42432a:	mov    eax,DWORD PTR [ebp-0x4]
  42432d:	xor    eax,edi
  42432f:	add    eax,ebx
  424331:	mov    ds:0x42f3e7,eax
  424336:	lea    eax,[ebp-0x1c]
  424339:	mov    DWORD PTR [ebp-0x44],eax
  42433c:	lea    eax,[ebp+0x4]
  42433f:	push   0x42f94b
  424344:	mov    DWORD PTR [ebp-0x1c],eax
  424347:	call   DWORD PTR ds:0x43004f
  42434d:	test   eax,eax
  42434f:	je     0x424363
  424355:	push   0x0
  424357:	push   0x0
  424359:	push   0x42f9bb
  42435e:	jmp    0x424593
  424363:	lea    eax,[ebp-0x70]
  424366:	push   eax
  424367:	push   0x42f987
  42436c:	call   esi
  42436e:	test   eax,eax
  424370:	je     0x424380
  424376:	push   0x42f9fb
  42437b:	jmp    0x4245b6
  424380:	mov    eax,DWORD PTR [ebp-0x1c]
  424383:	test   eax,eax
  424385:	je     0x42451f
  42438b:	push   0x42fa13
  424390:	call   DWORD PTR ds:0x43004f
  424396:	test   eax,eax
  424398:	je     0x4243ac
  42439e:	push   0x0
  4243a0:	push   0x0
  4243a2:	push   0x42fa83
  4243a7:	jmp    0x424593
  4243ac:	mov    esi,DWORD PTR ds:0x430043
  4243b2:	lea    eax,[ebp-0x70]
  4243b5:	push   eax
  4243b6:	push   0x42fa4f
  4243bb:	call   esi
  4243bd:	test   eax,eax
  4243bf:	je     0x4243cf
  4243c5:	push   0x42fac3
  4243ca:	jmp    0x4245b6
  4243cf:	mov    DWORD PTR [ebp-0x48],0xf152c39
  4243d6:	mov    DWORD PTR [ebp-0x4c],0x712ed2e
  4243dd:	mov    DWORD PTR [ebp-0x50],0x373fc08
  4243e4:	mov    DWORD PTR [ebp-0x54],0x72670ad8
  4243eb:	call   0x421f87
  4243f0:	push   0x42fadb
  4243f5:	call   DWORD PTR ds:0x43004f
  4243fb:	test   eax,eax
  4243fd:	je     0x424411
  424403:	push   0x0
  424405:	push   0x0
  424407:	push   0x42fb4b
  42440c:	jmp    0x424593
  424411:	lea    eax,[ebp-0x70]
  424414:	push   eax
  424415:	push   0x42fb17
  42441a:	call   esi
  42441c:	test   eax,eax
  42441e:	je     0x42442e
  424424:	push   0x42fb8b
  424429:	jmp    0x4245b6
  42442e:	mov    eax,DWORD PTR [ebp-0xc]
  424431:	mov    eax,DWORD PTR [ebp-0x8]
  424434:	mov    eax,DWORD PTR [ebp-0x4]
  424437:	mov    DWORD PTR [ebp+0xc],eax
  42443a:	mov    eax,eax
  42443c:	mov    eax,ds:0x42f36b
  424441:	mov    eax,DWORD PTR [eax+0x1c8]
  424447:	mov    eax,DWORD PTR [eax]
  424449:	cdq    
  42444a:	mov    esi,0xfabdbedd
  42444f:	add    eax,esi
  424451:	adc    edx,0xffffffff
  424454:	and    DWORD PTR [ebp-0x38],0x0
  424458:	xor    edx,0x0
  42445b:	mov    DWORD PTR [ebp-0x24],edx
  42445e:	mov    edx,DWORD PTR [ebp+0xc]
  424461:	mov    DWORD PTR [ebp-0x3c],edx
  424464:	mov    ecx,0x8a29a137
  424469:	xor    eax,ecx
  42446b:	add    DWORD PTR [ebp-0x3c],esi
  42446e:	mov    edx,DWORD PTR [ebp-0x3c]
  424471:	adc    DWORD PTR [ebp-0x38],0xffffffff
  424475:	xor    edx,ecx
  424477:	mov    DWORD PTR [ebp-0x30],edx
  42447a:	mov    edx,DWORD PTR [ebp-0x38]
  42447d:	xor    edx,0x0
  424480:	mov    DWORD PTR [ebp-0x2c],edx
  424483:	cmp    DWORD PTR [ebp-0x30],eax
  424486:	jne    0x424497
  42448c:	mov    eax,DWORD PTR [ebp-0x24]
  42448f:	cmp    edx,eax
  424491:	je     0x4244c4
  424497:	mov    eax,ds:0x42f36b
  42449c:	mov    eax,DWORD PTR [eax+0x1c0]
  4244a2:	mov    eax,DWORD PTR [eax]
  4244a4:	xor    edx,edx
  4244a6:	add    eax,esi
  4244a8:	adc    edx,0xffffffff
  4244ab:	xor    eax,ecx
  4244ad:	xor    edx,0x0
  4244b0:	cmp    eax,0x70941fe9
  4244b5:	jne    0x42451f
  4244bb:	cmp    edx,0xffffffff
  4244be:	jne    0x42451f
  4244c4:	mov    eax,ds:0x42f3e7
  4244c9:	mov    edx,DWORD PTR ds:0x42f3ef
  4244cf:	xor    eax,edx
  4244d1:	mov    ds:0x42f3e7,eax
  4244d6:	mov    edx,DWORD PTR ds:0x42f3e7
  4244dc:	mov    eax,DWORD PTR [ebp-0x1c]
  4244df:	add    DWORD PTR [eax],edx
  4244e1:	mov    edx,DWORD PTR [ebp+0xc]
  4244e4:	mov    eax,ds:0x42f3e7
  4244e9:	xor    edx,edi
  4244eb:	add    edx,ebx
  4244ed:	xor    ebx,ebx
  4244ef:	add    edx,esi
  4244f1:	adc    ebx,0xffffffff
  4244f4:	xor    edi,edi
  4244f6:	xor    edx,ecx
  4244f8:	xor    ebx,0x0
  4244fb:	add    eax,esi
  4244fd:	adc    edi,0xffffffff
  424500:	xor    eax,ecx
  424502:	xor    edi,0x0
  424505:	cmp    eax,edx
  424507:	jne    0x42451f
  42450d:	cmp    edi,ebx
  42450f:	jne    0x42451f
  424515:	mov    eax,ds:0x42f3e7
  42451a:	mov    ds:0x42f3ef,eax
  42451f:	mov    edi,DWORD PTR ds:0x43004f
  424525:	push   0x42fc6b
  42452a:	call   edi
  42452c:	test   eax,eax
  42452e:	je     0x424542
  424534:	push   0x0
  424536:	push   0x0
  424538:	push   0x42fcdb
  42453d:	jmp    0x424593
  424542:	mov    esi,DWORD PTR ds:0x430043
  424548:	lea    eax,[ebp-0x70]
  42454b:	push   eax
  42454c:	push   0x42fca7
  424551:	call   esi
  424553:	test   eax,eax
  424555:	je     0x424565
  42455b:	push   0x42fd1b
  424560:	jmp    0x4245b6
  424565:	mov    eax,ds:0x42f36b
  42456a:	push   0x4
  42456c:	add    eax,0x1cc
  424571:	push   eax
  424572:	lea    eax,[ebp-0xc]
  424575:	push   eax
  424576:	call   0x4245cd
  42457b:	push   0x42fd33
  424580:	call   edi
  424582:	test   eax,eax
  424584:	je     0x42459e
  42458a:	push   0x0
  42458c:	push   0x0
  42458e:	push   0x42fda3
  424593:	call   DWORD PTR ds:0x43001f
  424599:	jmp    0x4245c6
  42459e:	lea    eax,[ebp-0x70]
  4245a1:	push   eax
  4245a2:	push   0x42fd6f
  4245a7:	call   esi
  4245a9:	test   eax,eax
  4245ab:	je     0x4245c1
  4245b1:	push   0x42fde3
  4245b6:	call   DWORD PTR ds:0x430023
  4245bc:	jmp    0x4245c6
  4245c1:	mov    eax,DWORD PTR [ebp-0xc]
  4245c4:	mov    eax,DWORD PTR [eax]
  4245c6:	pop    ebx
  4245c7:	pop    esi
  4245c8:	pop    edi
  4245c9:	leave  
  4245ca:	ret    0xc
  4245cd:	push   ebp
  4245ce:	mov    ebp,esp
  4245d0:	sub    esp,0x10
  4245d3:	add    edx,0x3c01
  4245d9:	mov    eax,0xf89c85b0
  4245de:	and    ecx,edx
  4245e0:	mov    DWORD PTR [ebp-0x4],eax
  4245e3:	mov    ecx,DWORD PTR ds:0x424ab2
  4245e9:	mov    edx,DWORD PTR ds:0x42e010
  4245ef:	sub    edx,ecx
  4245f1:	xor    ecx,DWORD PTR [ecx+edx*1]
  4245f4:	mov    DWORD PTR [ebp-0x8],0xf89c85b1
  4245fb:	xor    edx,edx
  4245fd:	xor    edx,DWORD PTR ds:0x42b01c
  424603:	adc    DWORD PTR ds:0x429028,edx
  424609:	mov    ecx,DWORD PTR [ebp-0x4]
  42460c:	and    DWORD PTR ds:0x42d018,0x0
  424616:	jmp    0x424628
  42461b:	mov    edx,DWORD PTR ds:0x42d018
  424621:	inc    edx
  424622:	mov    DWORD PTR ds:0x42d018,edx
  424628:	cmp    DWORD PTR ds:0x42d018,0x1d
  42462f:	jae    0x42465d
  424635:	cmp    DWORD PTR ds:0x42d018,0x20
  42463c:	jg     0x42465d
  424642:	jmp    0x424658
  424647:	push   DWORD PTR [ebp-0x20]
  42464a:	push   DWORD PTR [ebp-0x28]
  42464d:	push   0x1361
  424652:	call   DWORD PTR ds:0x43004b
  424658:	jmp    0x42461b
  42465d:	push   esi
  42465e:	dec    esi
  42465f:	mov    edx,0x75108a4
  424664:	xor    DWORD PTR ds:0x42a00c,ebx
  42466a:	xor    ecx,edx
  42466c:	or     DWORD PTR ds:0x429010,0x14eb
  424676:	mov    esi,0x3272ec
  42467b:	push   edi
  42467c:	dec    DWORD PTR ds:0x429018
  424682:	mov    edi,DWORD PTR [ebp+0x10]
  424685:	adc    DWORD PTR ds:0x42d018,0x42901c
  42468f:	add    ecx,esi
  424691:	cmp    ecx,edi
  424693:	mov    DWORD PTR ds:0x42d000,0x260f
  42469d:	je     0x4247e7
  4246a3:	mov    ecx,DWORD PTR [ebp-0x4]
  4246a6:	adc    DWORD PTR ds:0x42a01c,0x4985
  4246b0:	mov    edi,DWORD PTR [ebp+0x10]
  4246b3:	add    DWORD PTR ds:0x42b000,0x42c018
  4246bd:	xor    eax,eax
  4246bf:	or     DWORD PTR ds:0x42a004,0x42c000
  4246c9:	xor    ecx,edx
  4246cb:	or     DWORD PTR ds:0x42b018,0x42c004
  4246d5:	add    ecx,esi
  4246d7:	xor    DWORD PTR ds:0x42d004,0x429014
  4246e1:	add    edi,0xfabdbedd
  4246e7:	mov    DWORD PTR ds:0x42c01c,0x199c
  4246f1:	adc    eax,0xffffffff
  4246f4:	sbb    DWORD PTR ds:0x42a010,0x429004
  4246fe:	xor    eax,0x0
  424701:	xor    DWORD PTR ds:0x429008,0x429004
  42470b:	mov    DWORD PTR [ebp-0xc],eax
  42470e:	mov    eax,ds:0x42d000
  424713:	xor    DWORD PTR ds:0x42c010,eax
  424719:	push   ebx
  42471a:	sub    DWORD PTR ds:0x42a01c,0x1608
  424724:	xor    ebx,ebx
  424726:	sub    eax,DWORD PTR ds:0x42a000
  42472c:	xor    edi,0x8a29a137
  424732:	add    eax,DWORD PTR ds:0x42b01c
  424738:	mov    eax,ecx
  42473a:	sbb    DWORD PTR ds:0x42a010,0x7666
  424744:	add    eax,0xfabdbedd
  424749:	mov    DWORD PTR ds:0x42b000,0x3a3b
  424753:	adc    ebx,0xffffffff
  424756:	xor    eax,0x8a29a137
  42475b:	xor    ebx,0x0
  42475e:	cmp    eax,edi
  424760:	jne    0x424779
  424766:	cmp    ebx,DWORD PTR [ebp-0xc]
  424769:	je     0x4247e1
  42476f:	jmp    0x424779
  424774:	mov    esi,0x3272ec
  424779:	mov    eax,DWORD PTR [ebp-0x4]
  42477c:	mov    edi,DWORD PTR [ebp-0x8]
  42477f:	xor    edi,edx
  424781:	add    edi,esi
  424783:	mov    esi,DWORD PTR [ebp+0x8]
  424786:	imul   edi,ecx
  424789:	mov    ebx,DWORD PTR [ebp+0xc]
  42478c:	xor    eax,edx
  42478e:	add    eax,ecx
  424790:	mov    al,BYTE PTR [ebx+eax*1+0x3272ec]
  424797:	mov    BYTE PTR [edi+esi*1],al
  42479a:	mov    eax,DWORD PTR [ebp-0x8]
  42479d:	mov    esi,DWORD PTR [ebp+0x10]
  4247a0:	xor    eax,edx
  4247a2:	xor    ebx,ebx
  4247a4:	add    esi,0xfabdbedd
  4247aa:	adc    ebx,0xffffffff
  4247ad:	lea    ecx,[ecx+eax*1+0x3272ec]
  4247b4:	xor    edi,edi
  4247b6:	xor    esi,0x8a29a137
  4247bc:	xor    ebx,0x0
  4247bf:	mov    eax,ecx
  4247c1:	add    eax,0xfabdbedd
  4247c6:	adc    edi,0xffffffff
  4247c9:	xor    eax,0x8a29a137
  4247ce:	xor    edi,0x0
  4247d1:	cmp    eax,esi
  4247d3:	jne    0x424774
  4247d9:	cmp    edi,ebx
  4247db:	jne    0x424774
  4247e1:	mov    eax,0xf89c85b1
  4247e6:	pop    ebx
  4247e7:	pop    edi
  4247e8:	pop    esi
  4247e9:	leave  
  4247ea:	ret    0xc
  4247ed:	push   ebp
  4247ee:	mov    ebp,esp
  4247f0:	push   ecx
  4247f1:	xor    DWORD PTR ds:0x42d000,edi
  4247f7:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  4247fe:	and    DWORD PTR ds:0x42d018,0x0
  424808:	jmp    0x424818
  42480d:	mov    eax,ds:0x42d018
  424812:	inc    eax
  424813:	mov    ds:0x42d018,eax
  424818:	cmp    DWORD PTR ds:0x42d018,0x14
  42481f:	jae    0x42484c
  424825:	cmp    DWORD PTR ds:0x42d018,0x20
  42482c:	jg     0x42484c
  424832:	jmp    0x424847
  424837:	push   0x42d008
  42483c:	push   0x42f14f
  424841:	call   DWORD PTR ds:0x43000b
  424847:	jmp    0x42480d
  42484c:	mov    eax,DWORD PTR [ebp+0x8]
  42484f:	movsx  eax,BYTE PTR [eax]
  424852:	mov    edx,0x3272ec
  424857:	or     DWORD PTR ds:0x42a010,ebx
  42485d:	sub    eax,edx
  42485f:	mov    ecx,0x75108a4
  424864:	dec    DWORD PTR ds:0x429008
  42486a:	xor    eax,ecx
  42486c:	mov    DWORD PTR ds:0x429024,0x52d3
  424876:	cmp    eax,0xf89c85c5
  42487b:	mov    DWORD PTR ds:0x42d004,0x21a1
  424885:	jne    0x4248b4
  42488b:	mov    eax,DWORD PTR [ebp+0x8]
  42488e:	push   esi
  42488f:	mov    esi,DWORD PTR [ebp+0x8]
  424892:	add    esi,DWORD PTR [eax+0x3c]
  424895:	mov    DWORD PTR [ebp+0x8],esi
  424898:	mov    eax,DWORD PTR [ebp-0x4]
  42489b:	mov    esi,DWORD PTR [ebp+0x8]
  42489e:	xor    eax,ecx
  4248a0:	add    eax,edx
  4248a2:	cmp    DWORD PTR [esi+0x54],eax
  4248a5:	pop    esi
  4248a6:	je     0x4248b4
  4248ac:	mov    eax,DWORD PTR [ebp+0x8]
  4248af:	jmp    0x4248bb
  4248b4:	mov    eax,DWORD PTR [ebp-0x4]
  4248b7:	xor    eax,ecx
  4248b9:	add    eax,edx
  4248bb:	leave  
  4248bc:	ret    0x4
  4248bf:	push   ebp
  4248c0:	mov    ebp,esp
  4248c2:	sub    esp,0xc
  4248c5:	sbb    ecx,0x4428
  4248cb:	push   esi
  4248cc:	add    esi,0x35e8
  4248d2:	mov    esi,0xf89c85b0
  4248d7:	or     DWORD PTR ds:0x42d008,edi
  4248dd:	mov    DWORD PTR [ebp-0x8],esi
  4248e0:	mov    DWORD PTR [ebp-0x4],0xf89c85b1
  4248e7:	push   edi
  4248e8:	and    DWORD PTR ds:0x42c004,0x0
  4248f2:	mov    edx,DWORD PTR ds:0x42c004
  4248f8:	inc    edx
  4248f9:	mov    DWORD PTR ds:0x42c004,edx
  4248ff:	cmp    DWORD PTR ds:0x42c004,0x8
  424906:	jl     0x424948
  42490c:	jmp    0x424921
  424911:	push   0x429014
  424916:	push   0x86a8
  42491b:	call   DWORD PTR ds:0x43000f
  424921:	cmp    DWORD PTR ds:0x42c004,0x7
  424928:	jne    0x42493b
  42492e:	mov    edx,DWORD PTR ds:0x42c004
  424934:	inc    edx
  424935:	mov    DWORD PTR ds:0x42c004,edx
  42493b:	cmp    DWORD PTR ds:0x42c004,0x14
  424942:	jb     0x4248f2
  424948:	mov    eax,eax
  42494a:	xor    eax,eax
  42494c:	or     eax,DWORD PTR ds:0x429028
  424952:	adc    eax,DWORD PTR ds:0x42a000
  424958:	mov    ds:0x429028,eax
  42495d:	mov    eax,DWORD PTR [ebp-0x4]
  424960:	mov    edi,DWORD PTR [ebp-0x8]
  424963:	not    edx
  424965:	mov    ecx,0x75108a4
  42496a:	mov    DWORD PTR ds:0x42c01c,0x19
  424974:	cmp    DWORD PTR ds:0x42c01c,0x0
  42497b:	je     0x4249c5
  424981:	cmp    DWORD PTR ds:0x42c01c,0x3
  424988:	jg     0x4249c5
  42498e:	jmp    0x424999
  424993:	call   DWORD PTR ds:0x430013
  424999:	cmp    DWORD PTR ds:0x42c01c,0x4
  4249a0:	jne    0x4249b3
  4249a6:	mov    edx,DWORD PTR ds:0x42c01c
  4249ac:	dec    edx
  4249ad:	mov    DWORD PTR ds:0x42c01c,edx
  4249b3:	mov    edx,DWORD PTR ds:0x42c01c
  4249b9:	dec    edx
  4249ba:	mov    DWORD PTR ds:0x42c01c,edx
  4249c0:	jmp    0x424974
  4249c5:	xor    eax,ecx
  4249c7:	xor    DWORD PTR ds:0x429018,0x18a1
  4249d1:	xor    edi,ecx
  4249d3:	mov    DWORD PTR ds:0x42b010,0x4247
  4249dd:	mov    edx,0x3272ec
  4249e2:	add    edi,edx
  4249e4:	add    eax,edx
  4249e6:	imul   eax,edi
  4249e9:	mov    edi,DWORD PTR [ebp+0xc]
  4249ec:	cmp    edi,eax
  4249ee:	je     0x424a43
  4249f4:	mov    DWORD PTR [ebp-0xc],esi
  4249f7:	mov    eax,DWORD PTR [ebp-0xc]
  4249fa:	mov    esi,DWORD PTR [ebp+0xc]
  4249fd:	xor    eax,ecx
  4249ff:	lea    eax,[eax*8+0x19397d8]
  424a06:	mov    eax,DWORD PTR [esi+eax*1]
  424a09:	mov    DWORD PTR [ebp+0xc],eax
  424a0c:	mov    eax,DWORD PTR [ebp-0x4]
  424a0f:	mov    esi,DWORD PTR [ebp-0x8]
  424a12:	xor    eax,ecx
  424a14:	xor    esi,ecx
  424a16:	add    esi,edx
  424a18:	add    eax,edx
  424a1a:	imul   eax,esi
  424a1d:	mov    esi,DWORD PTR [ebp+0xc]
  424a20:	cmp    esi,eax
  424a22:	je     0x424a43
  424a28:	mov    eax,DWORD PTR [ebp-0x4]
  424a2b:	xor    eax,ecx
  424a2d:	mov    ecx,DWORD PTR [ebp+0xc]
  424a30:	add    eax,edx
  424a32:	imul   eax,ecx
  424a35:	add    eax,DWORD PTR [ebp+0x8]
  424a38:	mov    DWORD PTR [ebp+0xc],eax
  424a3b:	mov    eax,DWORD PTR [ebp+0xc]
  424a3e:	jmp    0x424a54
  424a43:	mov    eax,DWORD PTR [ebp-0x4]
  424a46:	mov    esi,DWORD PTR [ebp-0x8]
  424a49:	xor    esi,ecx
  424a4b:	xor    eax,ecx
  424a4d:	add    esi,edx
  424a4f:	add    eax,edx
  424a51:	imul   eax,esi
  424a54:	pop    edi
  424a55:	pop    esi
  424a56:	leave  
  424a57:	ret    0x8
  424a5a:	add    BYTE PTR [eax-0x6ffbffbe],dl
  424a60:	inc    edx
  424a61:	add    BYTE PTR [eax],cl
  424a63:	nop
  424a64:	inc    edx
  424a65:	add    BYTE PTR [eax+edx*4],cl
  424a68:	inc    edx
  424a69:	add    BYTE PTR [eax],dl
  424a6b:	nop
  424a6c:	inc    edx
  424a6d:	add    BYTE PTR [eax+edx*4],dl
  424a70:	inc    edx
  424a71:	add    BYTE PTR [eax],bl
  424a73:	nop
  424a74:	inc    edx
  424a75:	add    BYTE PTR [eax+edx*4],bl
  424a78:	inc    edx
  424a79:	add    BYTE PTR [eax],ah
  424a7b:	nop
  424a7c:	inc    edx
  424a7d:	add    BYTE PTR [eax+edx*4],ah
  424a80:	inc    edx
  424a81:	add    BYTE PTR [eax],ch
  424a83:	nop
  424a84:	inc    edx
  424a85:	add    BYTE PTR [eax],al
  424a87:	mov    al,0x42
  424a89:	add    BYTE PTR [eax+esi*4],al
  424a8c:	inc    edx
  424a8d:	add    BYTE PTR [eax],cl
  424a8f:	mov    al,0x42
  424a91:	add    BYTE PTR [eax+esi*4],cl
  424a94:	inc    edx
  424a95:	add    BYTE PTR [eax],dl
  424a97:	mov    al,0x42
  424a99:	add    BYTE PTR [eax+esi*4],dl
  424a9c:	inc    edx
  424a9d:	add    BYTE PTR [eax],bl
  424a9f:	mov    al,0x42
  424aa1:	add    BYTE PTR [eax+esi*4],bl
  424aa4:	inc    edx
  424aa5:	add    BYTE PTR [eax],al
  424aa7:	mov    al,ds:0xa0040042
  424aac:	inc    edx
  424aad:	add    BYTE PTR [eax],cl
  424aaf:	mov    al,ds:0xa00c0042
  424ab4:	inc    edx
  424ab5:	add    BYTE PTR [eax],dl
  424ab7:	mov    al,ds:0xa0140042
  424abc:	inc    edx
  424abd:	add    BYTE PTR [eax],bl
  424abf:	mov    al,ds:0xa01c0042
  424ac4:	inc    edx
	...
  424ad1:	add    BYTE PTR [eax],al
  424ad3:	add    BYTE PTR [eax+0x4d300b],ah
  424ad9:	add    BYTE PTR [eax],al
  424adb:	add    BYTE PTR [edx],al
  424add:	add    BYTE PTR [eax],al
  424adf:	add    BYTE PTR [esi],dh
  424ae1:	add    BYTE PTR [eax],al
  424ae3:	add    BYTE PTR [eax],dl
  424ae5:	dec    ebx
  424ae6:	add    al,BYTE PTR [eax]
  424ae8:	adc    BYTE PTR [edi],bh
  424aea:	add    al,BYTE PTR [eax]
  424aec:	add    al,al
  424aee:	inc    edx
  424aef:	add    BYTE PTR [eax+eax*8],al
  424af2:	inc    edx
  424af3:	add    BYTE PTR [eax],cl
  424af5:	rol    BYTE PTR [edx+0x0],0xc
  424af9:	rol    BYTE PTR [edx+0x0],0x10
  424afd:	rol    BYTE PTR [edx+0x0],0x14
  424b01:	rol    BYTE PTR [edx+0x0],0x18
  424b05:	rol    BYTE PTR [edx+0x0],0x1c
  424b09:	rol    BYTE PTR [edx+0x0],0x0
  424b0d:	add    BYTE PTR [eax],al
  424b0f:	add    BYTE PTR [edx+0x53],dl
  424b12:	inc    esp
  424b13:	push   ebx
  424b14:	inc    esi
  424b15:	out    0xd2,eax
  424b17:	in     eax,0x76
  424b19:	cld    
  424b1a:	daa    
  424b1b:	dec    ebp
  424b1c:	mov    ch,0x1a
  424b1e:	jecxz  0x424acb
  424b20:	sbb    edx,DWORD PTR [edx]
  424b22:	iret   
  424b23:	xchg   BYTE PTR [ecx],al
  424b25:	add    BYTE PTR [eax],al
  424b27:	add    BYTE PTR [ebp+0x3a],al
  424b2a:	pop    esp
  424b2b:	inc    esp
  424b2c:	gs ins BYTE PTR es:[edi],dx
  424b2e:	gs je  0x424b96
  424b31:	and    BYTE PTR [ecx+eiz*2+0x74],al
  424b35:	popa   
  424b36:	and    BYTE PTR [ecx+ebp*2+0x72],al
  424b3a:	pop    esp
  424b3b:	inc    ecx
  424b3c:	data16 je 0x424ba4
  424b3f:	jb     0x424b91
  424b41:	popa   
  424b42:	jb     0x424bb8
  424b44:	jns    0x424b46
  424b46:	mov    edx,DWORD PTR [ebp-0x14]
  424b49:	sub    esp,0x108
  424b4f:	push   ebx
  424b50:	mov    eax,ebx
  424b52:	xchg   ecx,eax
  424b53:	mov    eax,DWORD PTR [ebp+0x8]
  424b56:	cmp    eax,0xf89c85b0
  424b5b:	jne    0x424fe2
  424b61:	mov    eax,DWORD PTR [ebp+0xc]
  424b64:	cmp    eax,0xf89c85b1
  424b69:	jne    0x424fe2
  424b6f:	mov    eax,DWORD PTR [ebp+0x24]
  424b72:	mov    DWORD PTR [ebp-0x4],eax
  424b75:	mov    BYTE PTR [ebp-0x18],0x13
  424b79:	mov    BYTE PTR [ebp-0x17],0x1e
  424b7d:	mov    BYTE PTR [ebp-0x16],0x15
  424b81:	mov    BYTE PTR [ebp-0x15],0x4f
  424b85:	mov    BYTE PTR [ebp-0x14],0x4c
  424b89:	mov    BYTE PTR [ebp-0x13],0x7a
  424b8d:	mov    BYTE PTR [ebp-0x20],0x1
  424b91:	mov    BYTE PTR [ebp-0x1f],0xf
  424b95:	mov    BYTE PTR [ebp-0x1e],0x11
  424b99:	mov    BYTE PTR [ebp-0x1d],0xc
  424b9d:	mov    BYTE PTR [ebp-0x1c],0x4f
  424ba1:	mov    BYTE PTR [ebp-0x1b],0x4c
  424ba5:	mov    BYTE PTR [ebp-0x1a],0x7a
  424ba9:	mov    BYTE PTR [ebp-0x28],0xf
  424bad:	mov    BYTE PTR [ebp-0x27],0x12
  424bb1:	mov    BYTE PTR [ebp-0x26],0x16
  424bb5:	mov    BYTE PTR [ebp-0x25],0x3
  424bb9:	mov    BYTE PTR [ebp-0x24],0x1d
  424bbd:	mov    BYTE PTR [ebp-0x23],0xa
  424bc1:	push   esi
  424bc2:	mov    BYTE PTR [ebp-0x22],0x15
  424bc6:	mov    BYTE PTR [ebp-0x21],0x7a
  424bca:	xor    esi,esi
  424bcc:	mov    eax,0xfd
  424bd1:	lea    ecx,[ebp+esi*1-0x18]
  424bd5:	movzx  edx,BYTE PTR [ecx]
  424bd8:	xor    edx,0x79
  424bdb:	add    edx,eax
  424bdd:	inc    esi
  424bde:	mov    BYTE PTR [ecx],dl
  424be0:	cmp    esi,0x6
  424be3:	jb     0x424bd1
  424be5:	xor    esi,esi
  424be7:	lea    ecx,[ebp+esi*1-0x20]
  424beb:	movzx  edx,BYTE PTR [ecx]
  424bee:	xor    edx,0x79
  424bf1:	add    edx,eax
  424bf3:	inc    esi
  424bf4:	mov    BYTE PTR [ecx],dl
  424bf6:	cmp    esi,0x7
  424bf9:	jb     0x424be7
  424bfb:	xor    esi,esi
  424bfd:	lea    ecx,[ebp+esi*1-0x28]
  424c01:	movzx  edx,BYTE PTR [ecx]
  424c04:	xor    edx,0x79
  424c07:	add    edx,eax
  424c09:	inc    esi
  424c0a:	mov    BYTE PTR [ecx],dl
  424c0c:	cmp    esi,0x8
  424c0f:	jb     0x424bfd
  424c11:	lea    eax,[ebp-0x2c]
  424c14:	mov    DWORD PTR [ebp-0x8],eax
  424c17:	mov    ecx,DWORD PTR [ebp-0x8]
  424c1a:	mov    eax,0x7113fcce
  424c1f:	mov    DWORD PTR [ecx],eax
  424c21:	mov    ecx,DWORD PTR [ebp-0x2c]
  424c24:	push   edi
  424c25:	mov    esi,0x4e3e
  424c2a:	mov    ebx,0x3272ec
  424c2f:	cmp    ecx,eax
  424c31:	jne    0x424cfc
  424c37:	lea    eax,[esi+0x29]
  424c3a:	mov    WORD PTR [ebp-0x78],ax
  424c3e:	mov    eax,esi
  424c40:	mov    WORD PTR [ebp-0x76],ax
  424c44:	add    eax,0x3b
  424c47:	mov    WORD PTR [ebp-0x74],ax
  424c4b:	lea    eax,[esi-0x6]
  424c4e:	mov    WORD PTR [ebp-0x72],ax
  424c52:	add    eax,0x47
  424c55:	mov    ecx,eax
  424c57:	lea    eax,[esi-0x1d]
  424c5a:	mov    WORD PTR [ebp-0x66],ax
  424c5e:	mov    eax,esi
  424c60:	mov    WORD PTR [ebp-0x64],ax
  424c64:	add    eax,0xffffffe4
  424c67:	mov    WORD PTR [ebp-0x62],ax
  424c6b:	mov    eax,0x44b
  424c70:	mov    WORD PTR [ebp-0x60],ax
  424c74:	mov    eax,0x5664
  424c79:	mov    WORD PTR [ebp-0x5e],ax
  424c7d:	mov    eax,0x6104
  424c82:	mov    WORD PTR [ebp-0x5c],ax
  424c86:	lea    eax,[ebp-0xe0]
  424c8c:	push   eax
  424c8d:	mov    eax,DWORD PTR [ebp+0xc]
  424c90:	mov    edi,0x75108a4
  424c95:	xor    eax,edi
  424c97:	add    eax,ebx
  424c99:	push   eax
  424c9a:	mov    WORD PTR [ebp-0x70],cx
  424c9e:	lea    ecx,[esi-0x1a]
  424ca1:	mov    edx,ecx
  424ca3:	lea    eax,[ebp-0x78]
  424ca6:	push   eax
  424ca7:	mov    eax,DWORD PTR [ebp-0x4]
  424caa:	mov    eax,DWORD PTR [eax+0x198]
  424cb0:	mov    WORD PTR [ebp-0x6e],dx
  424cb4:	mov    edx,0x4f82
  424cb9:	mov    WORD PTR [ebp-0x6c],dx
  424cbd:	mov    DWORD PTR [ebp-0x6a],0x4e7f4e25
  424cc4:	mov    DWORD PTR [ebp-0x5a],0x4e24f116
  424ccb:	mov    DWORD PTR [ebp-0xe0],0x1
  424cd5:	mov    DWORD PTR [ebp-0xdc],0x255
  424cdf:	push   DWORD PTR [eax]
  424ce1:	mov    eax,DWORD PTR [ebp+0x10]
  424ce4:	call   eax
  424ce6:	mov    DWORD PTR [ebp-0x8],eax
  424ce9:	mov    eax,DWORD PTR [ebp-0x8]
  424cec:	test   eax,eax
  424cee:	je     0x424d01
  424cf0:	xor    DWORD PTR ds:0x76586876,0x87687666
  424cfa:	jmp    0x424d01
  424cfc:	mov    edi,0x75108a4
  424d01:	mov    eax,DWORD PTR [ebp-0x4]
  424d04:	mov    ecx,DWORD PTR [eax+0x18c]
  424d0a:	xor    eax,eax
  424d0c:	cmp    DWORD PTR [ecx],eax
  424d0e:	jne    0x424f7d
  424d14:	mov    ecx,DWORD PTR [ebp-0x4]
  424d17:	mov    ecx,DWORD PTR [ecx+0x17c]
  424d1d:	mov    DWORD PTR [ecx],eax
  424d1f:	mov    ecx,DWORD PTR [ebp-0x4]
  424d22:	mov    ecx,DWORD PTR [ecx+0x180]
  424d28:	mov    DWORD PTR [ecx],eax
  424d2a:	mov    eax,0x4e69
  424d2f:	mov    WORD PTR [ebp-0x9c],ax
  424d36:	mov    eax,esi
  424d38:	mov    WORD PTR [ebp-0x9a],ax
  424d3f:	mov    eax,0x4e79
  424d44:	mov    WORD PTR [ebp-0x98],ax
  424d4b:	add    eax,0xffffffc0
  424d4e:	mov    WORD PTR [ebp-0x96],ax
  424d55:	mov    eax,0x4f8e
  424d5a:	mov    WORD PTR [ebp-0x94],ax
  424d61:	mov    eax,0x4e3a
  424d66:	mov    WORD PTR [ebp-0x92],ax
  424d6d:	add    eax,0x45
  424d70:	mov    WORD PTR [ebp-0x90],ax
  424d77:	mov    eax,0x4e24
  424d7c:	mov    WORD PTR [ebp-0x8e],ax
  424d83:	mov    eax,esi
  424d85:	mov    WORD PTR [ebp-0x8c],ax
  424d8c:	mov    eax,0x4e25
  424d91:	mov    WORD PTR [ebp-0x8a],ax
  424d98:	mov    eax,0x99f9
  424d9d:	mov    WORD PTR [ebp-0x88],ax
  424da4:	mov    eax,0x8d6a
  424da9:	mov    WORD PTR [ebp-0x86],ax
  424db0:	mov    eax,0xd66f
  424db5:	mov    WORD PTR [ebp-0x84],ax
  424dbc:	mov    eax,0xd78b
  424dc1:	mov    WORD PTR [ebp-0x82],ax
  424dc8:	mov    eax,0x27b4
  424dcd:	mov    WORD PTR [ebp-0x80],ax
  424dd1:	mov    eax,0x47b4
  424dd6:	mov    WORD PTR [ebp-0x7e],ax
  424dda:	mov    eax,0x4e3b
  424ddf:	push   0x8
  424de1:	mov    WORD PTR [ebp-0x7c],ax
  424de5:	mov    DWORD PTR [ebp-0x10],0x316120f
  424dec:	mov    DWORD PTR [ebp-0xc],0x7a150a1d
  424df3:	lea    eax,[ebp-0x10]
  424df6:	pop    ecx
  424df7:	mov    dl,BYTE PTR [eax]
  424df9:	xor    dl,0x79
  424dfc:	sub    dl,0x3
  424dff:	mov    BYTE PTR [eax],dl
  424e01:	inc    eax
  424e02:	dec    ecx
  424e03:	jne    0x424df7
  424e05:	lea    eax,[ebp-0x10]
  424e08:	mov    DWORD PTR [ebp-0xdc],eax
  424e0e:	lea    eax,[ebp-0xe0]
  424e14:	push   eax
  424e15:	mov    eax,DWORD PTR [ebp+0xc]
  424e18:	xor    eax,edi
  424e1a:	add    eax,ebx
  424e1c:	push   eax
  424e1d:	mov    eax,DWORD PTR [ebp-0x4]
  424e20:	add    eax,0x66
  424e23:	push   eax
  424e24:	mov    eax,DWORD PTR [ebp-0x4]
  424e27:	mov    eax,DWORD PTR [eax+0x198]
  424e2d:	mov    DWORD PTR [ebp-0xe0],0x1
  424e37:	push   DWORD PTR [eax]
  424e39:	mov    eax,DWORD PTR [ebp+0x10]
  424e3c:	call   eax
  424e3e:	mov    ecx,DWORD PTR [ebp+0x8]
  424e41:	xor    ecx,edi
  424e43:	add    ecx,ebx
  424e45:	mov    DWORD PTR [ebp-0x8],eax
  424e48:	cmp    eax,ecx
  424e4a:	jne    0x424e65
  424e4c:	mov    eax,ds:0x33730bcf
  424e51:	or     eax,0x22150bce
  424e56:	mov    ds:0x33730bcf,eax
  424e5b:	add    eax,0x3372e92e
  424e60:	mov    ds:0x33730bcf,eax
  424e65:	mov    ecx,0x4f96
  424e6a:	mov    eax,ecx
  424e6c:	mov    WORD PTR [ebp-0x40],ax
  424e70:	mov    eax,0x4e63
  424e75:	mov    edx,eax
  424e77:	mov    WORD PTR [ebp-0x3e],dx
  424e7b:	lea    edx,[ecx+0x5]
  424e7e:	mov    WORD PTR [ebp-0x3c],dx
  424e82:	add    edx,0xffffffe8
  424e85:	mov    WORD PTR [ebp-0x3a],dx
  424e89:	lea    edx,[ecx-0x9]
  424e8c:	mov    WORD PTR [ebp-0x38],dx
  424e90:	add    edx,0xfffffffb
  424e93:	mov    WORD PTR [ebp-0x36],dx
  424e97:	lea    edx,[ecx+0x21]
  424e9a:	mov    WORD PTR [ebp-0x34],dx
  424e9e:	mov    WORD PTR [ebp-0x32],cx
  424ea2:	mov    ecx,esi
  424ea4:	mov    WORD PTR [ebp-0x30],cx
  424ea8:	lea    ecx,[edx-0x1]
  424eab:	mov    edx,ecx
  424ead:	mov    WORD PTR [ebp-0x54],dx
  424eb1:	mov    edx,eax
  424eb3:	mov    WORD PTR [ebp-0x52],dx
  424eb7:	add    edx,0x18
  424eba:	mov    WORD PTR [ebp-0x50],dx
  424ebe:	mov    WORD PTR [ebp-0x4e],ax
  424ec2:	add    eax,0xa
  424ec5:	mov    WORD PTR [ebp-0x4c],ax
  424ec9:	mov    eax,0x4e68
  424ece:	mov    WORD PTR [ebp-0x4a],ax
  424ed2:	lea    eax,[ecx-0x1f]
  424ed5:	mov    WORD PTR [ebp-0x48],ax
  424ed9:	mov    WORD PTR [ebp-0x46],cx
  424edd:	mov    WORD PTR [ebp-0x44],si
  424ee1:	mov    eax,DWORD PTR [ebp+0x8]
  424ee4:	movzx  ecx,WORD PTR [ebp-0x54]
  424ee8:	xor    eax,edi
  424eea:	add    eax,ebx
  424eec:	xor    eax,ecx
  424eee:	mov    WORD PTR [ebp-0x54],ax
  424ef2:	mov    eax,DWORD PTR [ebp+0x8]
  424ef5:	movzx  ecx,WORD PTR [ebp-0x40]
  424ef9:	xor    eax,edi
  424efb:	add    eax,ebx
  424efd:	xor    eax,ecx
  424eff:	mov    WORD PTR [ebp-0x40],ax
  424f03:	xor    eax,eax
  424f05:	mov    WORD PTR [ebp-0xf4],ax
  424f0c:	mov    WORD PTR [ebp-0x108],ax
  424f13:	mov    edi,DWORD PTR [ebp+0x24]
  424f16:	lea    eax,[ebp-0xf4]
  424f1c:	lea    edx,[ebp-0x54]
  424f1f:	mov    DWORD PTR [ebp-0xe0],0x2
  424f29:	mov    DWORD PTR [ebp-0xdc],eax
  424f2f:	call   0x427945
  424f34:	mov    DWORD PTR [ebp-0xd8],eax
  424f3a:	lea    eax,[ebp-0xe0]
  424f40:	push   eax
  424f41:	mov    eax,DWORD PTR [ebp+0xc]
  424f44:	xor    eax,0x75108a4
  424f49:	add    eax,ebx
  424f4b:	push   eax
  424f4c:	lea    eax,[ebp-0x9c]
  424f52:	push   eax
  424f53:	push   DWORD PTR [ebp-0x8]
  424f56:	mov    eax,DWORD PTR [ebp+0x10]
  424f59:	call   eax
  424f5b:	mov    edi,DWORD PTR [ebp+0x24]
  424f5e:	lea    eax,[ebp-0x108]
  424f64:	lea    edx,[ebp-0x40]
  424f67:	mov    DWORD PTR [ebp-0xdc],eax
  424f6d:	call   0x427945
  424f72:	mov    DWORD PTR [ebp-0xd8],eax
  424f78:	mov    edi,0x75108a4
  424f7d:	mov    eax,DWORD PTR [ebp+0x14]
  424f80:	push   DWORD PTR [ebp-0x4]
  424f83:	push   DWORD PTR [ebp+0x20]
  424f86:	push   DWORD PTR [ebp+0x1c]
  424f89:	push   DWORD PTR [ebp+0x18]
  424f8c:	push   DWORD PTR [ebp+0x10]
  424f8f:	push   DWORD PTR [ebp+0x8]
  424f92:	push   DWORD PTR [ebp+0xc]
  424f95:	call   0x4261e2
  424f9a:	test   eax,eax
  424f9c:	je     0x424fe0
  424f9e:	add    DWORD PTR [ebp-0x4],eax
  424fa1:	push   DWORD PTR [ebp-0x4]
  424fa4:	lea    esi,[ebp+0x4]
  424fa7:	call   0x4253d0
  424fac:	mov    eax,DWORD PTR [ebp-0x4]
  424faf:	mov    eax,DWORD PTR [eax+0x1c8]
  424fb5:	mov    eax,DWORD PTR [eax]
  424fb7:	xor    eax,edi
  424fb9:	add    eax,ebx
  424fbb:	mov    eax,DWORD PTR [ebp-0x4]
  424fbe:	jne    0x424fd6
  424fc0:	mov    ecx,DWORD PTR [ebp-0x4]
  424fc3:	mov    ecx,DWORD PTR [ecx+0x1cc]
  424fc9:	push   DWORD PTR [ecx]
  424fcb:	mov    eax,DWORD PTR [eax+0x1d8]
  424fd1:	call   DWORD PTR [eax+0x28]
  424fd4:	jmp    0x424fe0
  424fd6:	mov    eax,DWORD PTR [eax+0x17c]
  424fdc:	mov    eax,DWORD PTR [eax]
  424fde:	add    DWORD PTR [esi],eax
  424fe0:	pop    edi
  424fe1:	pop    esi
  424fe2:	pop    ebx
  424fe3:	leave  
  424fe4:	ret    0x20
  424fe7:	push   edi
  424fe8:	push   esi
  424fe9:	push   ebx
  424fea:	push   ebp
  424feb:	mov    ebp,esp
  424fed:	mov    eax,DWORD PTR [ebp+0x24]
  424ff0:	add    DWORD PTR [ebp+0x28],eax
  424ff3:	push   eax
  424ff4:	cld    
  424ff5:	mov    esi,DWORD PTR [ebp+0x18]
  424ff8:	add    DWORD PTR [ebp+0x1c],esi
  424ffb:	push   esi
  424ffc:	mov    esi,DWORD PTR [ebp+0x14]
  424fff:	lods   eax,DWORD PTR ds:[esi]
  425000:	xchg   edx,eax
  425001:	push   edx
  425002:	mov    cl,BYTE PTR [esi-0x2]
  425005:	or     eax,0xffffffff
  425008:	shl    eax,cl
  42500a:	not    eax
  42500c:	push   eax
  42500d:	mov    cl,dh
  42500f:	or     eax,0xffffffff
  425012:	shl    eax,cl
  425014:	not    eax
  425016:	push   eax
  425017:	add    cl,dl
  425019:	mov    edi,esi
  42501b:	sub    esp,0xc
  42501e:	sub    eax,eax
  425020:	inc    eax
  425021:	push   eax
  425022:	push   eax
  425023:	push   eax
  425024:	push   eax
  425025:	push   eax
  425026:	push   edi
  425027:	sub    esi,esi
  425029:	push   esi
  42502a:	or     ebx,0xffffffff
  42502d:	mov    eax,0x300
  425032:	shl    eax,cl
  425034:	lea    ecx,[eax+0x736]
  42503a:	mov    eax,0x4000400
  42503f:	shr    ecx,1
  425041:	rep stos DWORD PTR es:[edi],eax
  425043:	push   0x5
  425045:	pop    ecx
  425046:	call   0x425331
  42504b:	loop   0x425046
  42504d:	lea    esi,[esi]
  42504f:	lea    edi,[edi]
  425051:	mov    edi,DWORD PTR [ebp-0x4]
  425054:	mov    eax,DWORD PTR [ebp-0x10]
  425057:	sub    edi,DWORD PTR [ebp+0x24]
  42505a:	and    eax,edi
  42505c:	mov    DWORD PTR [ebp-0x18],eax
  42505f:	mov    al,0x0
  425061:	call   0x425349
  425066:	jne    0x425101
  42506c:	mov    cl,BYTE PTR [ebp-0xc]
  42506f:	and    edi,DWORD PTR [ebp-0x14]
  425072:	shl    edi,cl
  425074:	sub    cl,0x8
  425077:	neg    cl
  425079:	shr    esi,cl
  42507b:	pop    eax
  42507c:	add    edi,esi
  42507e:	pop    esi
  42507f:	lea    edi,[edi+edi*2]
  425082:	shl    edi,0x8
  425085:	cmp    al,0x7
  425087:	pop    edx
  425088:	lea    ecx,[esi+edi*2+0xe6c]
  42508f:	push   ecx
  425090:	push   esi
  425091:	mov    esi,0x100
  425096:	push   eax
  425097:	mov    al,0x1
  425099:	jb     0x4250cf
  42509b:	mov    edi,DWORD PTR [ebp-0x4]
  42509e:	sub    edi,DWORD PTR [ebp-0x24]
  4250a1:	movzx  edi,BYTE PTR [edi]
  4250a4:	mov    ebp,DWORD PTR [ebp-0x34]
  4250a7:	shl    edi,1
  4250a9:	mov    ecx,esi
  4250ab:	and    esi,edi
  4250ad:	add    ecx,esi
  4250af:	lea    ebp,[ebp+ecx*2+0x0]
  4250b3:	call   0x425368
  4250b8:	mov    ecx,eax
  4250ba:	shr    esi,0x8
  4250bd:	and    ecx,0x1
  4250c0:	cmp    esi,ecx
  4250c2:	mov    esi,0x100
  4250c7:	jne    0x4250d7
  4250c9:	cmp    eax,esi
  4250cb:	jb     0x4250a4
  4250cd:	jmp    0x4250e3
  4250cf:	mov    ebp,DWORD PTR [ebp-0x34]
  4250d2:	call   0x425368
  4250d7:	inc    eax
  4250d8:	inc    esi
  4250d9:	sub    eax,0x1
  4250dc:	sub    esi,0x1
  4250df:	cmp    eax,esi
  4250e1:	jb     0x4250cf
  4250e3:	pop    edx
  4250e4:	inc    edx
  4250e5:	cmp    edx,0x5
  4250e8:	dec    edx
  4250e9:	mov    ecx,edx
  4250eb:	jb     0x4250fc
  4250ed:	inc    edx
  4250ee:	cmp    edx,0xb
  4250f1:	dec    edx
  4250f2:	mov    cl,0x4
  4250f4:	dec    cl
  4250f6:	jb     0x4250fc
  4250f8:	mov    cl,0x7
  4250fa:	dec    cl
  4250fc:	sub    edx,ecx
  4250fe:	push   edx
  4250ff:	jmp    0x425150
  425101:	mov    al,0xc1
  425103:	dec    al
  425105:	call   0x425359
  42510a:	jne    0x425120
  42510c:	pop    eax
  42510d:	pop    edi
  42510e:	pop    edx
  42510f:	pop    ecx
  425110:	pop    edx
  425111:	pop    ecx
  425112:	push   DWORD PTR [esp]
  425115:	push   ecx
  425116:	push   edx
  425117:	mov    edx,0x664
  42511c:	mov    cl,0x0
  42511e:	jmp    0x425193
  425120:	mov    al,0xcd
  425122:	dec    al
  425124:	call   0x425359
  425129:	jne    0x425159
  42512b:	mov    al,0xf1
  42512d:	dec    al
  42512f:	call   0x425349
  425134:	jne    0x425189
  425136:	pop    eax
  425137:	cmp    al,0x7
  425139:	mov    al,0x9
  42513b:	jb     0x42513f
  42513d:	mov    al,0xb
  42513f:	push   eax
  425140:	mov    esi,DWORD PTR [ebp-0x4]
  425143:	sub    esi,DWORD PTR [ebp-0x24]
  425146:	cmp    esi,DWORD PTR [ebp+0x24]
  425149:	jb     0x425320
  42514f:	lods   al,BYTE PTR ds:[esi]
  425150:	mov    edi,DWORD PTR [ebp-0x4]
  425153:	stos   BYTE PTR es:[edi],al
  425154:	jmp    0x4252e7
  425159:	mov    al,0xd8
  42515b:	call   0x425359
  425160:	mov    esi,DWORD PTR [ebp-0x28]
  425163:	je     0x425180
  425165:	mov    al,0xe4
  425167:	call   0x425359
  42516c:	mov    esi,DWORD PTR [ebp-0x2c]
  42516f:	je     0x42517a
  425171:	mov    esi,DWORD PTR [ebp-0x30]
  425174:	mov    ecx,DWORD PTR [ebp-0x2c]
  425177:	mov    DWORD PTR [ebp-0x30],ecx
  42517a:	mov    ecx,DWORD PTR [ebp-0x28]
  42517d:	mov    DWORD PTR [ebp-0x2c],ecx
  425180:	mov    ecx,DWORD PTR [ebp-0x24]
  425183:	mov    DWORD PTR [ebp-0x28],ecx
  425186:	mov    DWORD PTR [ebp-0x24],esi
  425189:	pop    eax
  42518a:	pop    edi
  42518b:	pop    ecx
  42518c:	mov    edx,0xa68
  425191:	mov    cl,0x8
  425193:	add    edx,edi
  425195:	push   edx
  425196:	push   edi
  425197:	cmp    al,0x7
  425199:	mov    al,cl
  42519b:	jb     0x42519f
  42519d:	add    al,0x3
  42519f:	push   eax
  4251a0:	mov    ebp,DWORD PTR [ebp-0x34]
  4251a3:	call   0x425366
  4251a8:	jne    0x4251be
  4251aa:	mov    eax,DWORD PTR [ebp-0x18]
  4251ad:	mov    edi,DWORD PTR [ebp-0x34]
  4251b0:	shl    eax,0x3
  4251b3:	sub    ecx,ecx
  4251b5:	push   0x8
  4251b7:	pop    esi
  4251b8:	lea    edi,[edi+eax*2+0x4]
  4251bc:	jmp    0x4251f3
  4251be:	mov    ebp,DWORD PTR [ebp-0x34]
  4251c1:	add    ebp,0x2
  4251c4:	call   0x425366
  4251c9:	jne    0x4251e3
  4251cb:	mov    eax,DWORD PTR [ebp-0x18]
  4251ce:	mov    edi,DWORD PTR [ebp-0x34]
  4251d1:	shl    eax,0x3
  4251d4:	push   0x8
  4251d6:	pop    ecx
  4251d7:	push   0x8
  4251d9:	pop    esi
  4251da:	lea    edi,[edi+eax*2+0x104]
  4251e1:	jmp    0x4251f3
  4251e3:	mov    edi,0x204
  4251e8:	add    edi,DWORD PTR [ebp-0x34]
  4251eb:	push   0x10
  4251ed:	pop    ecx
  4251ee:	mov    esi,0x100
  4251f3:	mov    DWORD PTR [ebp-0x1c],ecx
  4251f6:	sub    eax,eax
  4251f8:	inc    eax
  4251f9:	mov    ebp,edi
  4251fb:	call   0x425368
  425200:	mov    ecx,eax
  425202:	sub    ecx,esi
  425204:	jb     0x4251f9
  425206:	add    DWORD PTR [ebp-0x1c],ecx
  425209:	cmp    DWORD PTR [ebp-0x3c],0x4
  42520d:	jae    0x4252c3
  425213:	add    DWORD PTR [ebp-0x3c],0x7
  425217:	mov    ecx,DWORD PTR [ebp-0x1c]
  42521a:	cmp    ecx,0x4
  42521d:	jb     0x425222
  42521f:	push   0x3
  425221:	pop    ecx
  425222:	mov    edi,DWORD PTR [ebp-0x38]
  425225:	shl    ecx,0x6
  425228:	sub    eax,eax
  42522a:	inc    eax
  42522b:	push   0x40
  42522d:	pop    esi
  42522e:	lea    edi,[edi+ecx*2+0x360]
  425235:	mov    ebp,edi
  425237:	call   0x425368
  42523c:	mov    ecx,eax
  42523e:	sub    ecx,esi
  425240:	jb     0x425235
  425242:	mov    DWORD PTR [ebp-0x18],ecx
  425245:	mov    DWORD PTR [ebp-0x24],ecx
  425248:	cmp    ecx,0x4
  42524b:	jb     0x4252c0
  42524d:	mov    esi,ecx
  42524f:	and    DWORD PTR [ebp-0x24],0x1
  425253:	shr    esi,1
  425255:	or     DWORD PTR [ebp-0x24],0x2
  425259:	dec    esi
  42525a:	cmp    ecx,0xe
  42525d:	jae    0x425278
  42525f:	mov    eax,0x2af
  425264:	sub    eax,ecx
  425266:	mov    ecx,esi
  425268:	shl    BYTE PTR [ebp-0x24],cl
  42526b:	add    eax,DWORD PTR [ebp-0x24]
  42526e:	shl    eax,1
  425270:	add    eax,DWORD PTR [ebp-0x38]
  425273:	mov    DWORD PTR [ebp-0x34],eax
  425276:	jmp    0x4252a5
  425278:	sub    esi,0x4
  42527b:	call   0x425325
  425280:	shr    ebx,1
  425282:	shl    DWORD PTR [ebp-0x24],1
  425285:	cmp    DWORD PTR [ebp-0x20],ebx
  425288:	jb     0x425290
  42528a:	inc    DWORD PTR [ebp-0x24]
  42528d:	sub    DWORD PTR [ebp-0x20],ebx
  425290:	dec    esi
  425291:	jne    0x42527b
  425293:	mov    eax,0x644
  425298:	add    eax,DWORD PTR [ebp-0x38]
  42529b:	mov    DWORD PTR [ebp-0x34],eax
  42529e:	shl    DWORD PTR [ebp-0x24],0x4
  4252a2:	push   0x4
  4252a4:	pop    esi
  4252a5:	sub    edi,edi
  4252a7:	inc    edi
  4252a8:	mov    eax,edi
  4252aa:	mov    ebp,DWORD PTR [ebp-0x34]
  4252ad:	call   0x425368
  4252b2:	test   al,0x1
  4252b4:	je     0x4252b9
  4252b6:	or     DWORD PTR [ebp-0x24],edi
  4252b9:	shl    edi,1
  4252bb:	dec    esi
  4252bc:	jne    0x4252aa
  4252be:	jmp    0x4252c0
  4252c0:	inc    DWORD PTR [ebp-0x24]
  4252c3:	mov    ecx,DWORD PTR [ebp-0x1c]
  4252c6:	add    ecx,0x2
  4252c9:	mov    edi,DWORD PTR [ebp-0x4]
  4252cc:	mov    eax,edi
  4252ce:	sub    eax,DWORD PTR [ebp+0x24]
  4252d1:	cmp    DWORD PTR [ebp-0x24],eax
  4252d4:	ja     0x425320
  4252d6:	mov    esi,edi
  4252d8:	sub    esi,DWORD PTR [ebp-0x24]
  4252db:	mov    edx,DWORD PTR [ebp+0x28]
  4252de:	lods   al,BYTE PTR ds:[esi]
  4252df:	stos   BYTE PTR es:[edi],al
  4252e0:	cmp    edi,edx
  4252e2:	jae    0x4252e7
  4252e4:	dec    ecx
  4252e5:	jne    0x4252de
  4252e7:	mov    DWORD PTR [ebp-0x4],edi
  4252ea:	movzx  esi,al
  4252ed:	cmp    edi,DWORD PTR [ebp+0x28]
  4252f0:	jb     0x425051
  4252f6:	call   0x425325
  4252fb:	sub    eax,eax
  4252fd:	lea    ebp,[esp+0x3c]
  425301:	mov    edx,DWORD PTR [ebp+0x20]
  425304:	mov    esi,DWORD PTR [ebp-0x8]
  425307:	sub    esi,DWORD PTR [ebp+0x18]
  42530a:	mov    DWORD PTR [edx],esi
  42530c:	mov    edx,DWORD PTR [ebp+0x2c]
  42530f:	mov    edi,DWORD PTR [ebp-0x4]
  425312:	sub    edi,DWORD PTR [ebp+0x24]
  425315:	mov    DWORD PTR [edx],edi
  425317:	leave  
  425318:	pop    ebx
  425319:	pop    esi
  42531a:	pop    edi
  42531b:	ret    0x1c
  42531e:	pop    esi
  42531f:	pop    eax
  425320:	sub    eax,eax
  425322:	inc    eax
  425323:	jmp    0x4252fd
  425325:	cmp    ebx,0x1000000
  42532b:	jb     0x42532e
  42532d:	ret    
  42532e:	shl    ebx,0x8
  425331:	push   esi
  425332:	mov    esi,DWORD PTR [ebp-0x8]
  425335:	cmp    esi,DWORD PTR [ebp+0x1c]
  425338:	jae    0x42531e
  42533a:	mov    eax,DWORD PTR [ebp-0x20]
  42533d:	shl    eax,0x8
  425340:	lods   al,BYTE PTR ds:[esi]
  425341:	mov    DWORD PTR [ebp-0x20],eax
  425344:	mov    DWORD PTR [ebp+0x74],esi
  425347:	aas    
  425348:	or     bl,BYTE PTR [edx-0xf5ef3e3]
  42534e:	add    al,0x6
  425350:	inc    esi
  425351:	mov    ecx,DWORD PTR [ecx+0x689540d]
  425357:	pop    edx
  425358:	(bad)  
  425359:	mov    eax,ds:0xd8904f0
  42535e:	or     al,0x9a
  425360:	pop    ebp
  425361:	adc    al,0x9e
  425363:	pop    ebx
  425364:	or     eax,0x9e04d983
  425369:	pop    ebx
  42536a:	or     eax,0x837a8683
  42536f:	add    DWORD PTR [ebx-0x6544967b],0x1b
  425376:	retf   
  425377:	repz push es
  425379:	dec    ebx
  42537a:	retf   
  42537b:	ret    
  42537c:	xchg   ebx,eax
  42537d:	stc    
  42537e:	sbb    ecx,ebx
  425380:	cmp    ebp,DWORD PTR [ecx-0x44]
  425383:	cwde   
  425384:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425385:	or     BYTE PTR [ebx],0xcb
  425388:	repz push es
  42538a:	dec    edx
  42538b:	xchg   ebx,eax
  42538c:	xchg   esp,eax
  42538d:	sub    ecx,ebx
  42538f:	ret    
  425390:	call   0x683:0x2df2a11a
  425397:	push   esi
  425398:	cdq    
  425399:	mov    eax,ds:0x1bf518e2
  42539e:	retf   
  42539f:	ret    
  4253a0:	imul   esi,DWORD PTR [ecx-0x7c09c966],0xd9838393
  4253aa:	sbb    BYTE PTR [esi],al
  4253ac:	push   esi
  4253ad:	lea    ecx,[edi-0x7b]
  4253b0:	sbb    eax,0x9e048983
  4253b5:	pop    ebx
  4253b6:	retf   
  4253b7:	add    ecx,DWORD PTR [edx]
  4253b9:	push   es
  4253ba:	pop    eax
  4253bb:	(bad)  
  4253bc:	aad    0x1b
  4253be:	retf   
  4253bf:	ret    
  4253c0:	fnstenv [esi]
  4253c2:	dec    edi
  4253c3:	aad    0x2d
  4253c5:	add    DWORD PTR [ebx],0xffffffc0
  4253c8:	add    eax,0x1
  4253cb:	lea    ebp,[esp+0x40]
  4253cf:	ret    
  4253d0:	push   ebp
  4253d1:	mov    ebp,esp
  4253d3:	sub    esp,0x12c
  4253d9:	push   ebx
  4253da:	push   esi
  4253db:	push   edi
  4253dc:	mov    DWORD PTR [ebp-0x10],0xf89c85b0
  4253e3:	mov    DWORD PTR [ebp-0x18],0xf89c85b1
  4253ea:	mov    eax,DWORD PTR [ebp+0x8]
  4253ed:	mov    DWORD PTR [ebp+0x8],eax
  4253f0:	mov    ecx,DWORD PTR [ebp-0x10]
  4253f3:	mov    ebx,0x75108a4
  4253f8:	xor    ecx,ebx
  4253fa:	mov    eax,0x3272ec
  4253ff:	add    ecx,eax
  425401:	mov    DWORD PTR [ebp-0x2c],ecx
  425404:	mov    ecx,DWORD PTR [ebp-0x10]
  425407:	xor    ecx,ebx
  425409:	add    ecx,eax
  42540b:	mov    DWORD PTR [ebp-0x3c],ecx
  42540e:	mov    ecx,DWORD PTR [ebp-0x10]
  425411:	xor    ecx,ebx
  425413:	add    ecx,eax
  425415:	mov    DWORD PTR [ebp-0x40],ecx
  425418:	mov    ecx,DWORD PTR [ebp-0x10]
  42541b:	xor    ecx,ebx
  42541d:	add    ecx,eax
  42541f:	mov    DWORD PTR [ebp-0xd8],ecx
  425425:	mov    DWORD PTR [ebp-0x50],0xf89f05b0
  42542c:	mov    DWORD PTR [ebp-0x40],0xf89cb5b0
  425433:	mov    DWORD PTR [ebp-0x54],0xf89c85bc
  42543a:	push   0x25
  42543c:	pop    ecx
  42543d:	mov    DWORD PTR [ebp-0x38],ecx
  425440:	mov    DWORD PTR [ebp-0x38],ecx
  425443:	push   0x65
  425445:	pop    ecx
  425446:	mov    DWORD PTR [ebp-0x38],ecx
  425449:	mov    DWORD PTR [ebp-0x38],ecx
  42544c:	mov    DWORD PTR [ebp-0x38],0x4d
  425453:	mov    DWORD PTR [ebp-0x38],0x43
  42545a:	mov    ecx,DWORD PTR [ebp-0x10]
  42545d:	xor    ecx,ebx
  42545f:	add    ecx,eax
  425461:	mov    DWORD PTR [ebp-0x38],ecx
  425464:	mov    ecx,DWORD PTR [ebp-0x10]
  425467:	xor    ecx,ebx
  425469:	add    ecx,eax
  42546b:	mov    DWORD PTR [ebp-0x38],ecx
  42546e:	mov    DWORD PTR [ebp-0x28],0x258
  425475:	mov    DWORD PTR [ebp-0x20],0x36
  42547c:	mov    DWORD PTR [ebp-0x14],0x7a
  425483:	lea    edi,[ebp-0x10c]
  425489:	lea    esi,[ebp-0x12c]
  42548f:	call   0x426151
  425494:	dec    DWORD PTR [ebp-0x14]
  425497:	jne    0x425483
  425499:	dec    DWORD PTR [ebp-0x20]
  42549c:	jne    0x42547c
  42549e:	dec    DWORD PTR [ebp-0x28]
  4254a1:	jne    0x425475
  4254a3:	mov    DWORD PTR [ebp-0x28],0x400e
  4254aa:	mov    eax,DWORD PTR [ebp-0x10]
  4254ad:	xor    eax,ebx
  4254af:	mov    esi,0x3272ec
  4254b4:	add    eax,esi
  4254b6:	mov    DWORD PTR [ebp-0x1c],eax
  4254b9:	mov    eax,DWORD PTR [ebp-0x10]
  4254bc:	and    DWORD PTR [ebp-0x94],0x0
  4254c3:	xor    eax,ebx
  4254c5:	add    eax,esi
  4254c7:	mov    DWORD PTR [ebp-0x34],eax
  4254ca:	mov    eax,fs:0x18
  4254d0:	mov    DWORD PTR [ebp-0x94],eax
  4254d6:	mov    eax,DWORD PTR [eax+0x30]
  4254d9:	mov    DWORD PTR [ebp-0xcc],eax
  4254df:	mov    eax,DWORD PTR [eax+0xc]
  4254e2:	mov    DWORD PTR [ebp-0xc0],eax
  4254e8:	mov    eax,DWORD PTR [ebp+0x8]
  4254eb:	lea    ecx,[ebp-0x94]
  4254f1:	mov    DWORD PTR [eax+0x1a0],ecx
  4254f7:	mov    eax,DWORD PTR [ebp+0x8]
  4254fa:	lea    ecx,[ebp-0xcc]
  425500:	mov    DWORD PTR [eax+0x1a4],ecx
  425506:	mov    eax,DWORD PTR [ebp+0x8]
  425509:	push   DWORD PTR [ebp+0x8]
  42550c:	lea    ecx,[ebp-0xc0]
  425512:	mov    DWORD PTR [eax+0x1a8],ecx
  425518:	call   0x427916
  42551d:	mov    ecx,DWORD PTR [ebp-0x10]
  425520:	xor    ecx,ebx
  425522:	add    ecx,esi
  425524:	cmp    ecx,eax
  425526:	je     0x4258a9
  42552c:	mov    eax,DWORD PTR [ebp+0x8]
  42552f:	mov    eax,DWORD PTR [eax+0x194]
  425535:	mov    ecx,DWORD PTR [eax]
  425537:	mov    eax,DWORD PTR [ebp+0x8]
  42553a:	mov    eax,DWORD PTR [eax+0x194]
  425540:	mov    eax,DWORD PTR [eax]
  425542:	add    eax,DWORD PTR [ecx+0x3c]
  425545:	mov    ecx,DWORD PTR [ebp+0x8]
  425548:	mov    ecx,DWORD PTR [ecx+0x1d8]
  42554e:	lea    edx,[ebp-0xec]
  425554:	push   edx
  425555:	mov    edx,DWORD PTR [ebp+0x8]
  425558:	mov    edx,DWORD PTR [edx+0x18c]
  42555e:	mov    edx,DWORD PTR [edx]
  425560:	add    edx,DWORD PTR [eax+0x88]
  425566:	push   0x4
  425568:	push   DWORD PTR [eax+0x8c]
  42556e:	push   edx
  42556f:	call   DWORD PTR [ecx+0x1c]
  425572:	push   DWORD PTR [ebp+0x8]
  425575:	xor    eax,eax
  425577:	mov    DWORD PTR [ebp-0xa8],0x123f0f35
  425581:	mov    DWORD PTR [ebp-0xa4],0xb360c1d
  42558b:	mov    DWORD PTR [ebp-0xa0],0x3d0c1103
  425595:	mov    BYTE PTR [ebp-0x9c],0x7a
  42559c:	lea    edi,[ebp-0x9b]
  4255a2:	stos   DWORD PTR es:[edi],eax
  4255a3:	stos   WORD PTR es:[edi],ax
  4255a5:	stos   BYTE PTR es:[edi],al
  4255a6:	xor    eax,eax
  4255a8:	mov    DWORD PTR [ebp-0xbc],0x123f0f35
  4255b2:	mov    DWORD PTR [ebp-0xb8],0xb360c1d
  4255bc:	mov    DWORD PTR [ebp-0xb4],0x230c1103
  4255c6:	mov    BYTE PTR [ebp-0xb0],0x7a
  4255cd:	lea    edi,[ebp-0xaf]
  4255d3:	stos   DWORD PTR es:[edi],eax
  4255d4:	stos   WORD PTR es:[edi],ax
  4255d6:	stos   BYTE PTR es:[edi],al
  4255d7:	mov    edi,DWORD PTR [ebp+0x8]
  4255da:	mov    eax,DWORD PTR [ebp+0x8]
  4255dd:	mov    edx,DWORD PTR [eax+0x1b8]
  4255e3:	mov    DWORD PTR [ebp-0x68],0xc0e0f16
  4255ea:	mov    DWORD PTR [ebp-0x64],0x150a091f
  4255f1:	mov    WORD PTR [ebp-0x60],0x7a3d
  4255f7:	mov    DWORD PTR [ebp-0x90],0x123f0f35
  425601:	mov    DWORD PTR [ebp-0x8c],0x163d0c1d
  42560b:	mov    DWORD PTR [ebp-0x88],0x281d120a
  425615:	mov    DWORD PTR [ebp-0x84],0xc110901
  42561f:	mov    DWORD PTR [ebp-0x80],0x7a3d1f15
  425626:	mov    DWORD PTR [ebp-0x7c],0x123f0f35
  42562d:	mov    DWORD PTR [ebp-0x78],0x163d0c1d
  425634:	mov    DWORD PTR [ebp-0x74],0x281d120a
  42563b:	mov    DWORD PTR [ebp-0x70],0xc110901
  425642:	mov    DWORD PTR [ebp-0x6c],0x7a231f15
  425649:	call   0x427945
  42564e:	push   eax
  42564f:	mov    eax,DWORD PTR [ebp+0x8]
  425652:	mov    eax,DWORD PTR [eax+0x1a8]
  425658:	push   DWORD PTR [eax]
  42565a:	call   0x4275e6
  42565f:	test   eax,eax
  425661:	jne    0x4256b3
  425663:	mov    eax,DWORD PTR [ebp+0x8]
  425666:	mov    eax,DWORD PTR [eax+0x1d8]
  42566c:	mov    edi,DWORD PTR [ebp+0x8]
  42566f:	add    eax,0x4
  425672:	mov    DWORD PTR [ebp-0x24],eax
  425675:	mov    eax,DWORD PTR [ebp+0x8]
  425678:	mov    edx,DWORD PTR [eax+0x1b8]
  42567e:	call   0x427945
  425683:	push   eax
  425684:	mov    eax,DWORD PTR [ebp-0x24]
  425687:	call   DWORD PTR [eax]
  425689:	test   eax,eax
  42568b:	jne    0x4256b3
  42568d:	mov    eax,DWORD PTR [ebp+0x8]
  425690:	mov    eax,DWORD PTR [eax+0x1d8]
  425696:	mov    edi,DWORD PTR [ebp+0x8]
  425699:	add    eax,0x10
  42569c:	mov    DWORD PTR [ebp-0x24],eax
  42569f:	mov    eax,DWORD PTR [ebp+0x8]
  4256a2:	mov    edx,DWORD PTR [eax+0x1b8]
  4256a8:	call   0x427945
  4256ad:	push   eax
  4256ae:	mov    eax,DWORD PTR [ebp-0x24]
  4256b1:	call   DWORD PTR [eax]
  4256b3:	mov    eax,DWORD PTR [ebp-0x10]
  4256b6:	mov    ecx,DWORD PTR [ebp-0x28]
  4256b9:	xor    eax,ebx
  4256bb:	add    eax,esi
  4256bd:	cmp    eax,ecx
  4256bf:	je     0x425882
  4256c5:	mov    eax,DWORD PTR [ebp-0x18]
  4256c8:	xor    eax,ebx
  4256ca:	mov    ecx,0xffcd8d14
  4256cf:	sub    ecx,eax
  4256d1:	add    ecx,DWORD PTR [ebp-0x28]
  4256d4:	mov    eax,DWORD PTR [ebp-0x1c]
  4256d7:	cmp    eax,ecx
  4256d9:	ja     0x425882
  4256df:	mov    DWORD PTR [ebp-0x20],0x0
  4256e6:	push   DWORD PTR [ebp+0x8]
  4256e9:	mov    edi,DWORD PTR [ebp+0x8]
  4256ec:	mov    eax,DWORD PTR [ebp+0x8]
  4256ef:	mov    edx,DWORD PTR [eax+0x1b4]
  4256f5:	call   0x427945
  4256fa:	push   eax
  4256fb:	mov    eax,DWORD PTR [ebp+0x8]
  4256fe:	mov    eax,DWORD PTR [eax+0x1a8]
  425704:	push   DWORD PTR [eax]
  425706:	call   0x4275e6
  42570b:	mov    ecx,DWORD PTR [ebp+0x8]
  42570e:	mov    ecx,DWORD PTR [ecx+0x19c]
  425714:	mov    DWORD PTR [ecx],eax
  425716:	mov    eax,DWORD PTR [ebp+0x8]
  425719:	mov    edi,DWORD PTR [eax+0x1d8]
  42571f:	mov    esi,DWORD PTR [ebp+0x8]
  425722:	xor    eax,eax
  425724:	lea    edx,[ebp-0x7c]
  425727:	call   0x42797b
  42572c:	push   eax
  42572d:	mov    eax,DWORD PTR [ebp+0x8]
  425730:	mov    eax,DWORD PTR [eax+0x19c]
  425736:	push   DWORD PTR [eax]
  425738:	call   DWORD PTR [edi+0x8]
  42573b:	mov    DWORD PTR [ebp-0x24],eax
  42573e:	mov    eax,DWORD PTR [ebp+0x8]
  425741:	mov    edi,DWORD PTR [eax+0x1d8]
  425747:	mov    esi,DWORD PTR [ebp+0x8]
  42574a:	xor    eax,eax
  42574c:	lea    edx,[ebp-0x90]
  425752:	call   0x42797b
  425757:	push   eax
  425758:	mov    eax,DWORD PTR [ebp+0x8]
  42575b:	mov    eax,DWORD PTR [eax+0x19c]
  425761:	push   DWORD PTR [eax]
  425763:	call   DWORD PTR [edi+0x8]
  425766:	mov    eax,DWORD PTR [ebp+0x8]
  425769:	mov    edi,DWORD PTR [eax+0x1d8]
  42576f:	mov    esi,DWORD PTR [ebp+0x8]
  425772:	xor    eax,eax
  425774:	lea    edx,[ebp-0xa8]
  42577a:	call   0x42797b
  42577f:	push   eax
  425780:	mov    eax,DWORD PTR [ebp+0x8]
  425783:	mov    eax,DWORD PTR [eax+0x19c]
  425789:	push   DWORD PTR [eax]
  42578b:	call   DWORD PTR [edi+0x8]
  42578e:	and    DWORD PTR [ebp-0x8],0x0
  425792:	mov    DWORD PTR [ebp-0x44],eax
  425795:	mov    eax,DWORD PTR [ebp-0x8]
  425798:	and    eax,0x7
  42579b:	add    eax,0x31
  42579e:	push   eax
  42579f:	call   DWORD PTR [ebp-0x24]
  4257a2:	test   eax,eax
  4257a4:	je     0x4257e8
  4257a6:	mov    eax,DWORD PTR [ebp-0x8]
  4257a9:	push   0x19
  4257ab:	xor    edx,edx
  4257ad:	pop    ecx
  4257ae:	div    ecx
  4257b0:	add    dl,0x41
  4257b3:	movzx  eax,dl
  4257b6:	push   eax
  4257b7:	call   DWORD PTR [ebp-0x44]
  4257ba:	test   eax,eax
  4257bc:	jne    0x4257e8
  4257be:	mov    eax,DWORD PTR [ebp+0x8]
  4257c1:	mov    edi,DWORD PTR [eax+0x1d8]
  4257c7:	mov    esi,DWORD PTR [ebp+0x8]
  4257ca:	xor    eax,eax
  4257cc:	lea    edx,[ebp-0x68]
  4257cf:	call   0x42797b
  4257d4:	push   eax
  4257d5:	mov    eax,DWORD PTR [ebp+0x8]
  4257d8:	mov    eax,DWORD PTR [eax+0x198]
  4257de:	push   DWORD PTR [eax]
  4257e0:	call   DWORD PTR [edi+0x8]
  4257e3:	mov    DWORD PTR [ebp-0x14],eax
  4257e6:	jmp    0x4257ec
  4257e8:	and    DWORD PTR [ebp-0x14],0x0
  4257ec:	inc    DWORD PTR [ebp-0x8]
  4257ef:	cmp    DWORD PTR [ebp-0x8],0x10
  4257f3:	jb     0x425795
  4257f5:	mov    eax,DWORD PTR [ebp-0x18]
  4257f8:	mov    esi,DWORD PTR [ebp+0x8]
  4257fb:	xor    eax,ebx
  4257fd:	mov    edi,0x3272ec
  425802:	add    eax,edi
  425804:	lea    edx,[ebp-0x10c]
  42580a:	call   0x42797b
  42580f:	push   eax
  425810:	mov    eax,DWORD PTR [ebp-0x10]
  425813:	mov    esi,DWORD PTR [ebp+0x8]
  425816:	xor    eax,ebx
  425818:	add    eax,edi
  42581a:	lea    edx,[ebp-0x12c]
  425820:	call   0x42797b
  425825:	push   eax
  425826:	call   DWORD PTR [ebp-0x14]
  425829:	mov    ecx,DWORD PTR [ebp-0x10]
  42582c:	xor    ecx,ebx
  42582e:	add    ecx,edi
  425830:	cmp    ecx,eax
  425832:	jne    0x42583b
  425834:	mov    DWORD PTR [ebp-0x20],0x1
  42583b:	mov    eax,DWORD PTR [ebp-0x18]
  42583e:	mov    ecx,DWORD PTR [ebp-0x1c]
  425841:	xor    eax,ebx
  425843:	lea    eax,[eax+ecx*1+0x3272ec]
  42584a:	mov    DWORD PTR [ebp-0x1c],eax
  42584d:	mov    eax,DWORD PTR [ebp-0x20]
  425850:	test   eax,eax
  425852:	je     0x425866
  425854:	mov    eax,DWORD PTR [ebp-0x18]
  425857:	mov    ecx,DWORD PTR [ebp-0x34]
  42585a:	xor    eax,ebx
  42585c:	lea    eax,[eax+ecx*1+0x3272ec]
  425863:	mov    DWORD PTR [ebp-0x34],eax
  425866:	mov    eax,DWORD PTR [ebp-0x18]
  425869:	xor    eax,ebx
  42586b:	mov    ecx,0xffcd8d14
  425870:	sub    ecx,eax
  425872:	add    ecx,DWORD PTR [ebp-0x28]
  425875:	mov    eax,DWORD PTR [ebp-0x1c]
  425878:	cmp    eax,ecx
  42587a:	jbe    0x4256df
  425880:	mov    esi,edi
  425882:	mov    eax,DWORD PTR [ebp-0x34]
  425885:	mov    ecx,DWORD PTR [ebp-0x1c]
  425888:	cmp    ecx,eax
  42588a:	jne    0x42589d
  42588c:	push   DWORD PTR [ebp+0x8]
  42588f:	lea    eax,[ebp-0x3c]
  425892:	push   eax
  425893:	call   0x4283eb
  425898:	mov    DWORD PTR [ebp-0x2c],eax
  42589b:	jmp    0x4258a9
  42589d:	mov    eax,DWORD PTR [ebp-0x2c]
  4258a0:	mov    ecx,DWORD PTR [ebp-0x18]
  4258a3:	xor    ecx,ebx
  4258a5:	add    ecx,esi
  4258a7:	xor    DWORD PTR [eax],ecx
  4258a9:	mov    eax,DWORD PTR [ebp-0x10]
  4258ac:	mov    ecx,DWORD PTR [ebp-0x2c]
  4258af:	xor    eax,ebx
  4258b1:	add    eax,esi
  4258b3:	cmp    eax,ecx
  4258b5:	je     0x42602f
  4258bb:	mov    eax,DWORD PTR [ebp-0x10]
  4258be:	mov    ecx,DWORD PTR [ebp-0x3c]
  4258c1:	xor    eax,ebx
  4258c3:	add    eax,esi
  4258c5:	cmp    eax,ecx
  4258c7:	je     0x42602f
  4258cd:	mov    eax,DWORD PTR [ebp-0x10]
  4258d0:	xor    eax,ebx
  4258d2:	add    eax,esi
  4258d4:	jmp    0x4258f2
  4258d6:	mov    edi,DWORD PTR [ebp-0x2c]
  4258d9:	mov    cl,al
  4258db:	and    cl,0x1f
  4258de:	or     dl,0xff
  4258e1:	sub    dl,cl
  4258e3:	add    BYTE PTR [edi+eax*1],dl
  4258e6:	mov    ecx,DWORD PTR [ebp-0x18]
  4258e9:	xor    ecx,ebx
  4258eb:	lea    eax,[eax+ecx*1+0x3272ec]
  4258f2:	mov    ecx,DWORD PTR [ebp-0x3c]
  4258f5:	cmp    eax,ecx
  4258f7:	jb     0x4258d6
  4258f9:	mov    eax,DWORD PTR [ebp-0x3c]
  4258fc:	mov    DWORD PTR [ebp-0x28],eax
  4258ff:	mov    eax,DWORD PTR [ebp-0x2c]
  425902:	mov    DWORD PTR [ebp-0x34],0xf89c85b0
  425909:	mov    DWORD PTR [ebp-0xd4],eax
  42590f:	mov    edi,0xf89c85b1
  425914:	mov    DWORD PTR [ebp-0x30],edi
  425917:	mov    eax,DWORD PTR [ebp-0x34]
  42591a:	xor    eax,ebx
  42591c:	add    eax,esi
  42591e:	mov    DWORD PTR [ebp-0xc],eax
  425921:	mov    eax,DWORD PTR [ebp-0x34]
  425924:	xor    eax,ebx
  425926:	add    eax,esi
  425928:	mov    DWORD PTR [ebp-0x8],eax
  42592b:	mov    DWORD PTR [ebp-0x44],0xf89c8590
  425932:	mov    DWORD PTR [ebp-0x4c],0xf89c85bf
  425939:	mov    eax,DWORD PTR [ebp-0x34]
  42593c:	mov    ecx,DWORD PTR [ebp-0x28]
  42593f:	xor    eax,ebx
  425941:	add    eax,esi
  425943:	cmp    ecx,eax
  425945:	je     0x425b44
  42594b:	jmp    0x425b20
  425950:	mov    ecx,DWORD PTR [ebp-0xc]
  425953:	mov    eax,DWORD PTR [ebp-0x28]
  425956:	sub    eax,ecx
  425958:	mov    ecx,DWORD PTR [ebp-0x44]
  42595b:	xor    ecx,ebx
  42595d:	add    ecx,esi
  42595f:	xor    edx,edx
  425961:	div    ecx
  425963:	mov    DWORD PTR [ebp-0x8],eax
  425966:	mov    eax,DWORD PTR [ebp-0x4c]
  425969:	mov    ecx,DWORD PTR [ebp-0x8]
  42596c:	xor    eax,ebx
  42596e:	add    eax,esi
  425970:	cmp    ecx,eax
  425972:	jbe    0x42597e
  425974:	mov    eax,DWORD PTR [ebp-0x4c]
  425977:	xor    eax,ebx
  425979:	add    eax,esi
  42597b:	mov    DWORD PTR [ebp-0x8],eax
  42597e:	mov    eax,DWORD PTR [ebp-0x44]
  425981:	mov    ecx,DWORD PTR [ebp-0x8]
  425984:	xor    eax,ebx
  425986:	add    eax,esi
  425988:	imul   eax,ecx
  42598b:	mov    DWORD PTR [ebp-0x8],eax
  42598e:	mov    eax,DWORD PTR [ebp-0x34]
  425991:	mov    ecx,DWORD PTR [ebp-0x8]
  425994:	xor    eax,ebx
  425996:	add    eax,esi
  425998:	cmp    ecx,eax
  42599a:	je     0x425b0e
  4259a0:	mov    eax,DWORD PTR [ebp-0x8]
  4259a3:	mov    DWORD PTR [ebp-0x14],eax
  4259a6:	mov    eax,DWORD PTR [ebp-0xc]
  4259a9:	add    eax,DWORD PTR [ebp-0xd4]
  4259af:	mov    DWORD PTR [ebp-0x24],0xf89c85b0
  4259b6:	mov    DWORD PTR [ebp-0x20],edi
  4259b9:	mov    DWORD PTR [ebp-0xe8],0xf89c85b2
  4259c3:	mov    DWORD PTR [ebp-0x8],eax
  4259c6:	mov    DWORD PTR [ebp-0x38],0xf89c85b3
  4259cd:	mov    DWORD PTR [ebp-0x1c],edi
  4259d0:	mov    eax,DWORD PTR [ebp-0x24]
  4259d3:	xor    eax,ebx
  4259d5:	add    eax,esi
  4259d7:	jmp    0x425acd
  4259dc:	mov    DWORD PTR [ebp-0xe0],0xf89c85bb
  4259e6:	mov    DWORD PTR [ebp-0xc4],0xf89c858e
  4259f0:	mov    eax,DWORD PTR [ebp-0x1c]
  4259f3:	mov    ecx,DWORD PTR [ebp-0x48]
  4259f6:	xor    eax,ebx
  4259f8:	add    eax,esi
  4259fa:	imul   eax,ecx
  4259fd:	mov    ecx,DWORD PTR [ebp-0x8]
  425a00:	mov    al,BYTE PTR [eax+ecx*1]
  425a03:	mov    BYTE PTR [ebp-0x2],al
  425a06:	mov    eax,DWORD PTR [ebp-0x1c]
  425a09:	mov    ecx,DWORD PTR [ebp-0x48]
  425a0c:	xor    eax,ebx
  425a0e:	add    eax,esi
  425a10:	imul   eax,ecx
  425a13:	mov    ecx,DWORD PTR [ebp-0xe8]
  425a19:	xor    ecx,ebx
  425a1b:	add    eax,ecx
  425a1d:	mov    ecx,DWORD PTR [ebp-0x8]
  425a20:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272ec]
  425a28:	mov    ecx,DWORD PTR [ebp-0xe0]
  425a2e:	xor    ecx,ebx
  425a30:	lea    eax,[ecx+eax*1+0x3272ec]
  425a37:	movzx  ecx,BYTE PTR [ebp-0x2]
  425a3b:	xor    ecx,eax
  425a3d:	mov    BYTE PTR [ebp-0x2],cl
  425a40:	mov    al,BYTE PTR [ebp-0x2]
  425a43:	mov    ecx,DWORD PTR [ebp-0x1c]
  425a46:	mov    edx,DWORD PTR [ebp-0x48]
  425a49:	xor    ecx,ebx
  425a4b:	add    ecx,esi
  425a4d:	imul   ecx,edx
  425a50:	mov    edx,DWORD PTR [ebp-0x8]
  425a53:	mov    BYTE PTR [ecx+edx*1],al
  425a56:	mov    eax,DWORD PTR [ebp-0x1c]
  425a59:	mov    ecx,DWORD PTR [ebp-0x48]
  425a5c:	xor    eax,ebx
  425a5e:	add    eax,esi
  425a60:	imul   eax,ecx
  425a63:	mov    ecx,DWORD PTR [ebp-0x8]
  425a66:	mov    al,BYTE PTR [eax+ecx*1]
  425a69:	mov    BYTE PTR [ebp-0x2],al
  425a6c:	mov    eax,DWORD PTR [ebp-0x1c]
  425a6f:	mov    ecx,DWORD PTR [ebp-0x48]
  425a72:	xor    eax,ebx
  425a74:	add    eax,esi
  425a76:	imul   eax,ecx
  425a79:	mov    ecx,DWORD PTR [ebp-0x20]
  425a7c:	xor    ecx,ebx
  425a7e:	add    eax,ecx
  425a80:	mov    ecx,DWORD PTR [ebp-0x8]
  425a83:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272ec]
  425a8b:	mov    ecx,DWORD PTR [ebp-0xc4]
  425a91:	xor    ecx,ebx
  425a93:	lea    eax,[ecx+eax*1+0x3272ec]
  425a9a:	movzx  ecx,BYTE PTR [ebp-0x2]
  425a9e:	xor    ecx,eax
  425aa0:	mov    BYTE PTR [ebp-0x2],cl
  425aa3:	mov    al,BYTE PTR [ebp-0x2]
  425aa6:	mov    ecx,DWORD PTR [ebp-0x1c]
  425aa9:	mov    edx,DWORD PTR [ebp-0x48]
  425aac:	xor    ecx,ebx
  425aae:	add    ecx,esi
  425ab0:	imul   ecx,edx
  425ab3:	mov    edx,DWORD PTR [ebp-0x8]
  425ab6:	mov    BYTE PTR [ecx+edx*1],al
  425ab9:	mov    eax,DWORD PTR [ebp-0x38]
  425abc:	mov    ecx,DWORD PTR [ebp-0x20]
  425abf:	xor    eax,ebx
  425ac1:	xor    ecx,ebx
  425ac3:	add    eax,esi
  425ac5:	add    ecx,esi
  425ac7:	imul   eax,ecx
  425aca:	add    eax,DWORD PTR [ebp-0x48]
  425acd:	mov    DWORD PTR [ebp-0x48],eax
  425ad0:	mov    eax,DWORD PTR [ebp-0x48]
  425ad3:	mov    ecx,DWORD PTR [ebp-0x14]
  425ad6:	cmp    ecx,eax
  425ad8:	jb     0x4259dc
  425ade:	mov    eax,DWORD PTR [ebp-0x20]
  425ae1:	mov    ecx,DWORD PTR [ebp-0x14]
  425ae4:	xor    eax,ebx
  425ae6:	add    eax,esi
  425ae8:	imul   eax,ecx
  425aeb:	mov    ecx,DWORD PTR [ebp-0x24]
  425aee:	xor    ecx,ebx
  425af0:	add    ecx,esi
  425af2:	or     eax,ecx
  425af4:	mov    ecx,DWORD PTR [ebp-0x30]
  425af7:	xor    ecx,ebx
  425af9:	add    eax,ecx
  425afb:	mov    ecx,DWORD PTR [ebp-0x30]
  425afe:	xor    ecx,ebx
  425b00:	add    eax,ecx
  425b02:	mov    ecx,DWORD PTR [ebp-0xc]
  425b05:	lea    eax,[eax+ecx*1+0x64e5d8]
  425b0c:	jmp    0x425b1d
  425b0e:	mov    eax,DWORD PTR [ebp-0x30]
  425b11:	mov    ecx,DWORD PTR [ebp-0xc]
  425b14:	xor    eax,ebx
  425b16:	lea    eax,[eax+ecx*1+0x3272ec]
  425b1d:	mov    DWORD PTR [ebp-0xc],eax
  425b20:	mov    eax,DWORD PTR [ebp-0x30]
  425b23:	xor    eax,ebx
  425b25:	mov    ecx,0xffcd8d14
  425b2a:	sub    ecx,eax
  425b2c:	add    ecx,DWORD PTR [ebp-0x28]
  425b2f:	mov    eax,DWORD PTR [ebp-0x30]
  425b32:	mov    edx,DWORD PTR [ebp-0xc]
  425b35:	xor    eax,ebx
  425b37:	add    eax,esi
  425b39:	imul   eax,edx
  425b3c:	cmp    eax,ecx
  425b3e:	jbe    0x425950
  425b44:	mov    eax,DWORD PTR [ebp-0x10]
  425b47:	mov    ecx,DWORD PTR [ebp-0x3c]
  425b4a:	mov    eax,DWORD PTR [ebp+0x8]
  425b4d:	mov    edx,DWORD PTR [ebp-0x54]
  425b50:	mov    eax,DWORD PTR [eax+0x1d8]
  425b56:	xor    edx,ebx
  425b58:	add    edx,esi
  425b5a:	push   edx
  425b5b:	mov    edx,DWORD PTR [ebp-0x40]
  425b5e:	xor    edx,ebx
  425b60:	add    edx,esi
  425b62:	push   edx
  425b63:	push   ecx
  425b64:	mov    DWORD PTR [ebp-0x38],ecx
  425b67:	mov    ecx,DWORD PTR [ebp-0x10]
  425b6a:	xor    ecx,ebx
  425b6c:	add    ecx,esi
  425b6e:	push   ecx
  425b6f:	call   DWORD PTR [eax+0x14]
  425b72:	mov    edi,eax
  425b74:	mov    eax,DWORD PTR [ebp-0x10]
  425b77:	xor    eax,ebx
  425b79:	add    eax,esi
  425b7b:	cmp    eax,edi
  425b7d:	je     0x425bd8
  425b7f:	mov    eax,DWORD PTR [ebp-0x10]
  425b82:	jmp    0x425ba5
  425b84:	mov    ecx,DWORD PTR [ebp-0x2c]
  425b87:	xor    eax,ebx
  425b89:	mov    cl,BYTE PTR [ecx+eax*1+0x3272ec]
  425b90:	mov    BYTE PTR [eax+edi*1+0x3272ec],cl
  425b97:	mov    ecx,DWORD PTR [ebp-0x18]
  425b9a:	xor    ecx,ebx
  425b9c:	lea    eax,[ecx+eax*1+0x3272ec]
  425ba3:	xor    eax,ebx
  425ba5:	mov    ecx,DWORD PTR [ebp-0x3c]
  425ba8:	sub    ecx,esi
  425baa:	xor    ecx,ebx
  425bac:	cmp    eax,ecx
  425bae:	jne    0x425b84
  425bb0:	mov    eax,DWORD PTR [ebp+0x8]
  425bb3:	mov    ecx,DWORD PTR [ebp-0x50]
  425bb6:	mov    eax,DWORD PTR [eax+0x1d8]
  425bbc:	xor    ecx,ebx
  425bbe:	add    ecx,esi
  425bc0:	push   ecx
  425bc1:	mov    ecx,DWORD PTR [ebp-0x10]
  425bc4:	xor    ecx,ebx
  425bc6:	add    ecx,esi
  425bc8:	push   ecx
  425bc9:	push   DWORD PTR [ebp-0x2c]
  425bcc:	call   DWORD PTR [eax+0x18]
  425bcf:	mov    eax,DWORD PTR [ebp-0x38]
  425bd2:	mov    DWORD PTR [ebp-0x2c],edi
  425bd5:	mov    DWORD PTR [ebp-0x3c],eax
  425bd8:	mov    eax,DWORD PTR [ebp-0x2c]
  425bdb:	mov    DWORD PTR [ebp-0x14],eax
  425bde:	mov    eax,DWORD PTR [ebp-0x18]
  425be1:	mov    ecx,DWORD PTR [ebp-0x10]
  425be4:	xor    eax,ebx
  425be6:	add    eax,esi
  425be8:	mov    DWORD PTR [ebp-0x5c],0x3d222a22
  425bef:	mov    DWORD PTR [ebp-0x58],0x37223f22
  425bf6:	jmp    0x425c29
  425bf8:	mov    edx,DWORD PTR [ebp-0x14]
  425bfb:	mov    edi,ecx
  425bfd:	xor    edi,ebx
  425bff:	mov    cl,BYTE PTR [ebp+edi*1+0x327290]
  425c06:	movsx  edx,BYTE PTR [edi+edx*1+0x3272ec]
  425c0e:	xor    cl,0x79
  425c11:	sub    cl,0x3
  425c14:	movzx  ecx,cl
  425c17:	cmp    edx,ecx
  425c19:	jne    0x425c33
  425c1b:	mov    ecx,DWORD PTR [ebp-0x18]
  425c1e:	xor    ecx,ebx
  425c20:	lea    ecx,[ecx+edi*1+0x3272ec]
  425c27:	xor    ecx,ebx
  425c29:	cmp    ecx,0xf89c85b8
  425c2f:	jne    0x425bf8
  425c31:	jmp    0x425c3a
  425c33:	mov    eax,DWORD PTR [ebp-0x10]
  425c36:	xor    eax,ebx
  425c38:	add    eax,esi
  425c3a:	mov    ecx,DWORD PTR [ebp-0x10]
  425c3d:	xor    ecx,ebx
  425c3f:	add    ecx,esi
  425c41:	cmp    ecx,eax
  425c43:	je     0x425db9
  425c49:	mov    eax,DWORD PTR [ebp-0x14]
  425c4c:	mov    eax,DWORD PTR [eax+0x8]
  425c4f:	mov    DWORD PTR [ebp-0xc],0xf89c85b0
  425c56:	mov    DWORD PTR [ebp-0x40],0xf89cc327
  425c5d:	mov    DWORD PTR [ebp-0x44],0xf89cb5b0
  425c64:	mov    DWORD PTR [ebp-0x24],0xf89c85bc
  425c6b:	mov    DWORD PTR [ebp-0x20],eax
  425c6e:	mov    eax,DWORD PTR [ebp+0x8]
  425c71:	mov    ecx,DWORD PTR [ebp-0x24]
  425c74:	xor    ecx,ebx
  425c76:	add    ecx,esi
  425c78:	push   ecx
  425c79:	mov    ecx,DWORD PTR [ebp-0x44]
  425c7c:	mov    eax,DWORD PTR [eax+0x1d8]
  425c82:	xor    ecx,ebx
  425c84:	add    ecx,esi
  425c86:	push   ecx
  425c87:	mov    ecx,DWORD PTR [ebp-0x40]
  425c8a:	xor    ecx,ebx
  425c8c:	add    ecx,esi
  425c8e:	push   ecx
  425c8f:	mov    ecx,DWORD PTR [ebp-0xc]
  425c92:	xor    ecx,ebx
  425c94:	add    ecx,esi
  425c96:	push   ecx
  425c97:	call   DWORD PTR [eax+0x14]
  425c9a:	mov    edi,eax
  425c9c:	mov    eax,DWORD PTR [ebp+0x8]
  425c9f:	mov    ecx,DWORD PTR [ebp-0x24]
  425ca2:	mov    eax,DWORD PTR [eax+0x1d8]
  425ca8:	xor    ecx,ebx
  425caa:	add    ecx,esi
  425cac:	push   ecx
  425cad:	mov    ecx,DWORD PTR [ebp-0x44]
  425cb0:	xor    ecx,ebx
  425cb2:	add    ecx,esi
  425cb4:	push   ecx
  425cb5:	mov    ecx,DWORD PTR [ebp-0xc]
  425cb8:	push   DWORD PTR [ebp-0x20]
  425cbb:	xor    ecx,ebx
  425cbd:	add    ecx,esi
  425cbf:	push   ecx
  425cc0:	call   DWORD PTR [eax+0x14]
  425cc3:	mov    ecx,DWORD PTR [ebp-0xc]
  425cc6:	xor    ecx,ebx
  425cc8:	add    ecx,esi
  425cca:	mov    DWORD PTR [ebp-0x24],eax
  425ccd:	cmp    ecx,edi
  425ccf:	je     0x42605c
  425cd5:	mov    ecx,DWORD PTR [ebp-0xc]
  425cd8:	xor    ecx,ebx
  425cda:	add    ecx,esi
  425cdc:	cmp    ecx,eax
  425cde:	je     0x42605c
  425ce4:	mov    DWORD PTR [ebp-0x40],0xf89c85b3
  425ceb:	mov    DWORD PTR [ebp-0x54],0xf89c85b2
  425cf2:	mov    ecx,DWORD PTR [ebp-0x40]
  425cf5:	xor    cl,0xa4
  425cf8:	sub    cl,0x14
  425cfb:	mov    BYTE PTR [edi],cl
  425cfd:	mov    ecx,DWORD PTR [ebp-0xc]
  425d00:	xor    cl,0xa4
  425d03:	sub    cl,0x14
  425d06:	mov    BYTE PTR [edi+0x1],cl
  425d09:	mov    ecx,DWORD PTR [ebp-0x54]
  425d0c:	xor    cl,0xa4
  425d0f:	sub    cl,0x14
  425d12:	mov    BYTE PTR [edi+0x2],cl
  425d15:	and    DWORD PTR [ebp-0xc8],0x0
  425d1c:	and    DWORD PTR [ebp-0xdc],0x0
  425d23:	lea    ecx,[ebp-0xdc]
  425d29:	push   ecx
  425d2a:	push   DWORD PTR [ebp-0x20]
  425d2d:	push   eax
  425d2e:	lea    eax,[ebp-0xc8]
  425d34:	push   eax
  425d35:	mov    eax,DWORD PTR [ebp-0x14]
  425d38:	push   DWORD PTR [eax+0xc]
  425d3b:	mov    eax,DWORD PTR [ebp-0x2c]
  425d3e:	add    eax,0x10
  425d41:	push   eax
  425d42:	push   edi
  425d43:	call   0x424fe7
  425d48:	mov    DWORD PTR [ebp-0x40],eax
  425d4b:	mov    eax,DWORD PTR [ebp+0x8]
  425d4e:	mov    ecx,DWORD PTR [ebp-0x50]
  425d51:	mov    eax,DWORD PTR [eax+0x1d8]
  425d57:	xor    ecx,ebx
  425d59:	add    ecx,esi
  425d5b:	push   ecx
  425d5c:	mov    ecx,DWORD PTR [ebp-0xc]
  425d5f:	xor    ecx,ebx
  425d61:	add    ecx,esi
  425d63:	push   ecx
  425d64:	push   edi
  425d65:	call   DWORD PTR [eax+0x18]
  425d68:	mov    eax,DWORD PTR [ebp-0x40]
  425d6b:	add    eax,0xffcd8d14
  425d70:	xor    eax,ebx
  425d72:	cmp    eax,0xf89c85b0
  425d77:	mov    eax,DWORD PTR [ebp+0x8]
  425d7a:	mov    eax,DWORD PTR [eax+0x1d8]
  425d80:	mov    ecx,DWORD PTR [ebp-0x50]
  425d83:	jne    0x425da6
  425d85:	xor    ecx,ebx
  425d87:	add    ecx,esi
  425d89:	push   ecx
  425d8a:	mov    ecx,DWORD PTR [ebp-0xc]
  425d8d:	xor    ecx,ebx
  425d8f:	add    ecx,esi
  425d91:	push   ecx
  425d92:	push   DWORD PTR [ebp-0x2c]
  425d95:	call   DWORD PTR [eax+0x18]
  425d98:	mov    eax,DWORD PTR [ebp-0x24]
  425d9b:	mov    DWORD PTR [ebp-0x2c],eax
  425d9e:	mov    eax,DWORD PTR [ebp-0x20]
  425da1:	mov    DWORD PTR [ebp-0x3c],eax
  425da4:	jmp    0x425db9
  425da6:	xor    ecx,ebx
  425da8:	add    ecx,esi
  425daa:	push   ecx
  425dab:	mov    ecx,DWORD PTR [ebp-0xc]
  425dae:	xor    ecx,ebx
  425db0:	add    ecx,esi
  425db2:	push   ecx
  425db3:	push   DWORD PTR [ebp-0x24]
  425db6:	call   DWORD PTR [eax+0x18]
  425db9:	mov    eax,DWORD PTR [ebp-0x3c]
  425dbc:	mov    DWORD PTR [ebp-0x34],eax
  425dbf:	mov    eax,DWORD PTR [ebp-0x2c]
  425dc2:	mov    DWORD PTR [ebp-0x28],0xf89c85b0
  425dc9:	mov    DWORD PTR [ebp-0x40],eax
  425dcc:	mov    edi,0xf89c85b1
  425dd1:	mov    DWORD PTR [ebp-0x30],edi
  425dd4:	mov    eax,DWORD PTR [ebp-0x28]
  425dd7:	xor    eax,ebx
  425dd9:	add    eax,esi
  425ddb:	mov    DWORD PTR [ebp-0xc],eax
  425dde:	mov    eax,DWORD PTR [ebp-0x28]
  425de1:	xor    eax,ebx
  425de3:	add    eax,esi
  425de5:	mov    DWORD PTR [ebp-0x14],eax
  425de8:	mov    DWORD PTR [ebp-0x44],0xf89c8590
  425def:	mov    DWORD PTR [ebp-0x24],0xf89c85bf
  425df6:	mov    eax,DWORD PTR [ebp-0x28]
  425df9:	mov    ecx,DWORD PTR [ebp-0x34]
  425dfc:	xor    eax,ebx
  425dfe:	add    eax,esi
  425e00:	cmp    ecx,eax
  425e02:	je     0x425ff8
  425e08:	jmp    0x425fd4
  425e0d:	mov    ecx,DWORD PTR [ebp-0xc]
  425e10:	mov    eax,DWORD PTR [ebp-0x34]
  425e13:	sub    eax,ecx
  425e15:	mov    ecx,DWORD PTR [ebp-0x44]
  425e18:	xor    ecx,ebx
  425e1a:	add    ecx,esi
  425e1c:	xor    edx,edx
  425e1e:	div    ecx
  425e20:	mov    DWORD PTR [ebp-0x14],eax
  425e23:	mov    eax,DWORD PTR [ebp-0x24]
  425e26:	mov    ecx,DWORD PTR [ebp-0x14]
  425e29:	xor    eax,ebx
  425e2b:	add    eax,esi
  425e2d:	cmp    ecx,eax
  425e2f:	jbe    0x425e3b
  425e31:	mov    eax,DWORD PTR [ebp-0x24]
  425e34:	xor    eax,ebx
  425e36:	add    eax,esi
  425e38:	mov    DWORD PTR [ebp-0x14],eax
  425e3b:	mov    eax,DWORD PTR [ebp-0x44]
  425e3e:	mov    ecx,DWORD PTR [ebp-0x14]
  425e41:	xor    eax,ebx
  425e43:	add    eax,esi
  425e45:	imul   eax,ecx
  425e48:	mov    DWORD PTR [ebp-0x14],eax
  425e4b:	mov    eax,DWORD PTR [ebp-0x28]
  425e4e:	mov    ecx,DWORD PTR [ebp-0x14]
  425e51:	xor    eax,ebx
  425e53:	add    eax,esi
  425e55:	cmp    ecx,eax
  425e57:	je     0x425fc2
  425e5d:	mov    eax,DWORD PTR [ebp-0x14]
  425e60:	mov    DWORD PTR [ebp-0x20],eax
  425e63:	mov    eax,DWORD PTR [ebp-0xc]
  425e66:	add    eax,DWORD PTR [ebp-0x40]
  425e69:	mov    DWORD PTR [ebp-0x4c],0xf89c85b0
  425e70:	mov    DWORD PTR [ebp-0x14],edi
  425e73:	mov    DWORD PTR [ebp-0x54],0xf89c85b2
  425e7a:	mov    DWORD PTR [ebp-0x1c],eax
  425e7d:	mov    DWORD PTR [ebp-0x38],0xf89c85b3
  425e84:	mov    DWORD PTR [ebp-0x8],edi
  425e87:	mov    eax,DWORD PTR [ebp-0x4c]
  425e8a:	xor    eax,ebx
  425e8c:	add    eax,esi
  425e8e:	jmp    0x425f81
  425e93:	mov    DWORD PTR [ebp-0xe4],0xf89c85bb
  425e9d:	mov    DWORD PTR [ebp-0xd0],0xf89c858e
  425ea7:	mov    eax,DWORD PTR [ebp-0x8]
  425eaa:	mov    ecx,DWORD PTR [ebp-0x18]
  425ead:	xor    eax,ebx
  425eaf:	add    eax,esi
  425eb1:	imul   eax,ecx
  425eb4:	mov    ecx,DWORD PTR [ebp-0x1c]
  425eb7:	mov    al,BYTE PTR [eax+ecx*1]
  425eba:	mov    BYTE PTR [ebp-0x1],al
  425ebd:	mov    eax,DWORD PTR [ebp-0x8]
  425ec0:	mov    ecx,DWORD PTR [ebp-0x18]
  425ec3:	xor    eax,ebx
  425ec5:	add    eax,esi
  425ec7:	imul   eax,ecx
  425eca:	mov    ecx,DWORD PTR [ebp-0x54]
  425ecd:	xor    ecx,ebx
  425ecf:	add    eax,ecx
  425ed1:	mov    ecx,DWORD PTR [ebp-0x1c]
  425ed4:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272ec]
  425edc:	mov    ecx,DWORD PTR [ebp-0xe4]
  425ee2:	xor    ecx,ebx
  425ee4:	lea    eax,[ecx+eax*1+0x3272ec]
  425eeb:	movzx  ecx,BYTE PTR [ebp-0x1]
  425eef:	xor    ecx,eax
  425ef1:	mov    BYTE PTR [ebp-0x1],cl
  425ef4:	mov    al,BYTE PTR [ebp-0x1]
  425ef7:	mov    ecx,DWORD PTR [ebp-0x8]
  425efa:	mov    edx,DWORD PTR [ebp-0x18]
  425efd:	xor    ecx,ebx
  425eff:	add    ecx,esi
  425f01:	imul   ecx,edx
  425f04:	mov    edx,DWORD PTR [ebp-0x1c]
  425f07:	mov    BYTE PTR [ecx+edx*1],al
  425f0a:	mov    eax,DWORD PTR [ebp-0x8]
  425f0d:	mov    ecx,DWORD PTR [ebp-0x18]
  425f10:	xor    eax,ebx
  425f12:	add    eax,esi
  425f14:	imul   eax,ecx
  425f17:	mov    ecx,DWORD PTR [ebp-0x1c]
  425f1a:	mov    al,BYTE PTR [eax+ecx*1]
  425f1d:	mov    BYTE PTR [ebp-0x1],al
  425f20:	mov    eax,DWORD PTR [ebp-0x8]
  425f23:	mov    ecx,DWORD PTR [ebp-0x18]
  425f26:	xor    eax,ebx
  425f28:	add    eax,esi
  425f2a:	imul   eax,ecx
  425f2d:	mov    ecx,DWORD PTR [ebp-0x14]
  425f30:	xor    ecx,ebx
  425f32:	add    eax,ecx
  425f34:	mov    ecx,DWORD PTR [ebp-0x1c]
  425f37:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272ec]
  425f3f:	mov    ecx,DWORD PTR [ebp-0xd0]
  425f45:	xor    ecx,ebx
  425f47:	lea    eax,[ecx+eax*1+0x3272ec]
  425f4e:	movzx  ecx,BYTE PTR [ebp-0x1]
  425f52:	xor    ecx,eax
  425f54:	mov    BYTE PTR [ebp-0x1],cl
  425f57:	mov    al,BYTE PTR [ebp-0x1]
  425f5a:	mov    ecx,DWORD PTR [ebp-0x8]
  425f5d:	mov    edx,DWORD PTR [ebp-0x18]
  425f60:	xor    ecx,ebx
  425f62:	add    ecx,esi
  425f64:	imul   ecx,edx
  425f67:	mov    edx,DWORD PTR [ebp-0x1c]
  425f6a:	mov    BYTE PTR [ecx+edx*1],al
  425f6d:	mov    eax,DWORD PTR [ebp-0x38]
  425f70:	mov    ecx,DWORD PTR [ebp-0x14]
  425f73:	xor    eax,ebx
  425f75:	xor    ecx,ebx
  425f77:	add    eax,esi
  425f79:	add    ecx,esi
  425f7b:	imul   eax,ecx
  425f7e:	add    eax,DWORD PTR [ebp-0x18]
  425f81:	mov    DWORD PTR [ebp-0x18],eax
  425f84:	mov    eax,DWORD PTR [ebp-0x18]
  425f87:	mov    ecx,DWORD PTR [ebp-0x20]
  425f8a:	cmp    ecx,eax
  425f8c:	jb     0x425e93
  425f92:	mov    eax,DWORD PTR [ebp-0x14]
  425f95:	mov    ecx,DWORD PTR [ebp-0x20]
  425f98:	xor    eax,ebx
  425f9a:	add    eax,esi
  425f9c:	imul   eax,ecx
  425f9f:	mov    ecx,DWORD PTR [ebp-0x4c]
  425fa2:	xor    ecx,ebx
  425fa4:	add    ecx,esi
  425fa6:	or     eax,ecx
  425fa8:	mov    ecx,DWORD PTR [ebp-0x30]
  425fab:	xor    ecx,ebx
  425fad:	add    eax,ecx
  425faf:	mov    ecx,DWORD PTR [ebp-0x30]
  425fb2:	xor    ecx,ebx
  425fb4:	add    eax,ecx
  425fb6:	mov    ecx,DWORD PTR [ebp-0xc]
  425fb9:	lea    eax,[eax+ecx*1+0x64e5d8]
  425fc0:	jmp    0x425fd1
  425fc2:	mov    eax,DWORD PTR [ebp-0x30]
  425fc5:	mov    ecx,DWORD PTR [ebp-0xc]
  425fc8:	xor    eax,ebx
  425fca:	lea    eax,[eax+ecx*1+0x3272ec]
  425fd1:	mov    DWORD PTR [ebp-0xc],eax
  425fd4:	mov    eax,DWORD PTR [ebp-0x30]
  425fd7:	xor    eax,ebx
  425fd9:	mov    ecx,0xffcd8d14
  425fde:	sub    ecx,eax
  425fe0:	add    ecx,DWORD PTR [ebp-0x34]
  425fe3:	mov    eax,DWORD PTR [ebp-0x30]
  425fe6:	mov    edx,DWORD PTR [ebp-0xc]
  425fe9:	xor    eax,ebx
  425feb:	add    eax,esi
  425fed:	imul   eax,edx
  425ff0:	cmp    eax,ecx
  425ff2:	jbe    0x425e0d
  425ff8:	push   DWORD PTR [ebp+0x8]
  425ffb:	mov    eax,DWORD PTR [ebp+0x8]
  425ffe:	push   DWORD PTR [eax+0x1cc]
  426004:	lea    eax,[ebp-0xd8]
  42600a:	push   eax
  42600b:	mov    eax,DWORD PTR [ebp+0x8]
  42600e:	mov    eax,DWORD PTR [eax+0x1c4]
  426014:	push   DWORD PTR [eax]
  426016:	mov    eax,DWORD PTR [ebp+0x8]
  426019:	mov    eax,DWORD PTR [eax+0x1c0]
  42601f:	push   DWORD PTR [eax]
  426021:	push   DWORD PTR [ebp-0x3c]
  426024:	push   DWORD PTR [ebp-0x2c]
  426027:	call   0x426abe
  42602c:	mov    DWORD PTR [ebp-0x40],eax
  42602f:	mov    eax,DWORD PTR [ebp-0x10]
  426032:	mov    ecx,DWORD PTR [ebp-0x2c]
  426035:	xor    eax,ebx
  426037:	add    eax,esi
  426039:	cmp    eax,ecx
  42603b:	je     0x42605c
  42603d:	mov    eax,DWORD PTR [ebp+0x8]
  426040:	mov    ecx,DWORD PTR [ebp-0x50]
  426043:	mov    eax,DWORD PTR [eax+0x1d8]
  426049:	xor    ecx,ebx
  42604b:	add    ecx,esi
  42604d:	push   ecx
  42604e:	mov    ecx,DWORD PTR [ebp-0x10]
  426051:	xor    ecx,ebx
  426053:	add    ecx,esi
  426055:	push   ecx
  426056:	push   DWORD PTR [ebp-0x2c]
  426059:	call   DWORD PTR [eax+0x18]
  42605c:	pop    edi
  42605d:	pop    esi
  42605e:	pop    ebx
  42605f:	leave  
  426060:	ret    0x4
  426063:	push   ebp
  426064:	mov    ebp,esp
  426066:	push   ecx
  426067:	push   ecx
  426068:	lea    eax,[ebp-0x8]
  42606b:	mov    DWORD PTR [ebp-0x4],eax
  42606e:	push   esi
  42606f:	mov    esi,DWORD PTR [ebp-0x4]
  426072:	mov    eax,0xf881ba2e
  426077:	mov    DWORD PTR [esi],eax
  426079:	mov    esi,DWORD PTR [ebp-0x8]
  42607c:	cmp    esi,eax
  42607e:	pop    esi
  42607f:	jne    0x426089
  426081:	mov    BYTE PTR [ecx+0xa],0x7a
  426085:	mov    BYTE PTR [edx+0x8],0x2f
  426089:	mov    BYTE PTR [edx+0xa],0x7a
  42608d:	mov    BYTE PTR [ecx+0x2],0x8
  426091:	leave  
  426092:	ret    
  426093:	push   ebp
  426094:	mov    ebp,esp
  426096:	push   ecx
  426097:	push   ecx
  426098:	lea    eax,[ebp-0x8]
  42609b:	mov    DWORD PTR [ebp-0x4],eax
  42609e:	mov    edx,DWORD PTR [ebp-0x4]
  4260a1:	mov    eax,0xf88b0bca
  4260a6:	mov    DWORD PTR [edx],eax
  4260a8:	mov    edx,DWORD PTR [ebp-0x8]
  4260ab:	cmp    edx,eax
  4260ad:	jne    0x4260be
  4260af:	mov    eax,DWORD PTR [ebp+0x8]
  4260b2:	mov    BYTE PTR [ecx+0x9],0xe
  4260b6:	mov    BYTE PTR [eax+0x7],0x57
  4260ba:	mov    BYTE PTR [ecx+0x6],0xf
  4260be:	mov    BYTE PTR [ecx+0x3],0x1e
  4260c2:	leave  
  4260c3:	ret    0x4
  4260c6:	push   ebp
  4260c7:	mov    ebp,esp
  4260c9:	push   ecx
  4260ca:	push   ecx
  4260cb:	lea    eax,[ebp-0x8]
  4260ce:	mov    DWORD PTR [ebp-0x4],eax
  4260d1:	mov    edx,DWORD PTR [ebp-0x4]
  4260d4:	mov    eax,0x7e0da2e
  4260d9:	mov    DWORD PTR [edx],eax
  4260db:	mov    edx,DWORD PTR [ebp-0x8]
  4260de:	cmp    edx,eax
  4260e0:	jne    0x4260e6
  4260e2:	mov    BYTE PTR [ecx+0x7],0x57
  4260e6:	mov    eax,DWORD PTR [ebp+0x8]
  4260e9:	mov    BYTE PTR [ecx+0x1],0x15
  4260ed:	mov    BYTE PTR [eax+0x9],0x2e
  4260f1:	leave  
  4260f2:	ret    0x4
  4260f5:	push   ebp
  4260f6:	mov    ebp,esp
  4260f8:	push   ecx
  4260f9:	push   ecx
  4260fa:	lea    eax,[ebp-0x8]
  4260fd:	mov    DWORD PTR [ebp-0x4],eax
  426100:	push   esi
  426101:	mov    esi,DWORD PTR [ebp-0x4]
  426104:	mov    eax,0x7060e3f
  426109:	mov    DWORD PTR [esi],eax
  42610b:	mov    esi,DWORD PTR [ebp-0x8]
  42610e:	cmp    esi,eax
  426110:	pop    esi
  426111:	jne    0x42611d
  426113:	mov    BYTE PTR [edx+0x4],0xb
  426117:	mov    WORD PTR [ecx+0x3],0xb1e
  42611d:	mov    BYTE PTR [edx],0x3f
  426120:	leave  
  426121:	ret    
  426122:	push   ebp
  426123:	mov    ebp,esp
  426125:	push   ecx
  426126:	push   ecx
  426127:	lea    eax,[ebp-0x8]
  42612a:	mov    DWORD PTR [ebp-0x4],eax
  42612d:	mov    edx,DWORD PTR [ebp-0x4]
  426130:	mov    eax,0xf8870b3e
  426135:	mov    DWORD PTR [edx],eax
  426137:	mov    edx,DWORD PTR [ebp-0x8]
  42613a:	cmp    edx,eax
  42613c:	jne    0x426149
  42613e:	mov    eax,DWORD PTR [ebp+0x8]
  426141:	mov    BYTE PTR [ecx+0x8],0xf
  426145:	mov    BYTE PTR [eax+0x1],0x15
  426149:	mov    BYTE PTR [ecx+0x5],0x3
  42614d:	leave  
  42614e:	ret    0x4
  426151:	push   esi
  426152:	mov    ecx,edi
  426154:	call   0x426122
  426159:	mov    edx,edi
  42615b:	mov    ecx,esi
  42615d:	mov    BYTE PTR [esi],0x1f
  426160:	call   0x4260f5
  426165:	push   esi
  426166:	mov    ecx,edi
  426168:	mov    BYTE PTR [esi+0x5],0x3
  42616c:	call   0x4260c6
  426171:	push   esi
  426172:	mov    BYTE PTR [esi+0x6],0xf
  426176:	call   0x426093
  42617b:	mov    BYTE PTR [esi+0x2],0x8
  42617f:	mov    edx,esi
  426181:	jmp    0x426063
  426186:	push   ebp
  426187:	mov    ebp,esp
  426189:	push   ecx
  42618a:	mov    ecx,DWORD PTR [edx+0x194]
  426190:	push   esi
  426191:	mov    esi,DWORD PTR [ebp+0x8]
  426194:	mov    esi,DWORD PTR [esi]
  426196:	mov    DWORD PTR [ecx],esi
  426198:	mov    ecx,DWORD PTR [edx+0x194]
  42619e:	mov    ecx,DWORD PTR [ecx]
  4261a0:	mov    esi,DWORD PTR [edx+0x190]
  4261a6:	mov    DWORD PTR [esi],ecx
  4261a8:	mov    eax,DWORD PTR [edx+0x194]
  4261ae:	mov    ecx,DWORD PTR [eax]
  4261b0:	mov    ecx,DWORD PTR [ecx+0x3c]
  4261b3:	add    ecx,DWORD PTR [eax]
  4261b5:	mov    DWORD PTR [ebp-0x4],0xf89ca5b0
  4261bc:	mov    eax,DWORD PTR [ebp-0x4]
  4261bf:	movzx  ecx,WORD PTR [ecx+0x16]
  4261c3:	xor    eax,0x75108a4
  4261c8:	add    eax,0x3272ec
  4261cd:	pop    esi
  4261ce:	test   ecx,eax
  4261d0:	je     0x4261de
  4261d2:	mov    eax,DWORD PTR [edx+0x1c8]
  4261d8:	mov    DWORD PTR [eax],0xf89c85b1
  4261de:	leave  
  4261df:	ret    0x4
  4261e2:	push   ebp
  4261e3:	mov    ebp,esp
  4261e5:	sub    esp,0x70
  4261e8:	and    DWORD PTR [ebp-0x20],0x0
  4261ec:	mov    DWORD PTR [ebp-0x18],0xf89cb5b0
  4261f3:	mov    DWORD PTR [ebp-0x1c],0xf89c85f0
  4261fa:	mov    DWORD PTR [ebp-0x2c],0xf89c85bc
  426201:	mov    DWORD PTR [ebp-0x14],0xf89c85b2
  426208:	mov    DWORD PTR [ebp-0x2c],0xf89f05b0
  42620f:	mov    eax,DWORD PTR [ebp+0x20]
  426212:	mov    eax,DWORD PTR [eax+0x194]
  426218:	mov    DWORD PTR [ebp-0xc],eax
  42621b:	mov    eax,DWORD PTR [ebp+0x20]
  42621e:	push   ebx
  42621f:	push   esi
  426220:	mov    esi,DWORD PTR [eax+0x190]
  426226:	mov    eax,DWORD PTR [ebp+0x20]
  426229:	mov    eax,DWORD PTR [eax+0x18c]
  42622f:	mov    DWORD PTR [ebp-0x8],eax
  426232:	mov    eax,DWORD PTR [eax]
  426234:	push   edi
  426235:	mov    DWORD PTR [ebp-0x4],esi
  426238:	test   eax,eax
  42623a:	jne    0x426247
  42623c:	push   DWORD PTR [ebp+0x1c]
  42623f:	mov    edx,DWORD PTR [ebp+0x20]
  426242:	call   0x426186
  426247:	mov    eax,DWORD PTR [esi]
  426249:	mov    ebx,DWORD PTR [esi]
  42624b:	add    ebx,DWORD PTR [eax+0x3c]
  42624e:	mov    eax,DWORD PTR [ebp+0xc]
  426251:	mov    ecx,DWORD PTR [ebp-0x8]
  426254:	mov    ecx,DWORD PTR [ecx]
  426256:	mov    esi,0x75108a4
  42625b:	xor    eax,esi
  42625d:	mov    edi,0x3272ec
  426262:	add    eax,edi
  426264:	cmp    eax,ecx
  426266:	jne    0x42649e
  42626c:	mov    eax,DWORD PTR [ebp-0xc]
  42626f:	mov    eax,DWORD PTR [eax]
  426271:	mov    DWORD PTR [ebp-0x10],eax
  426274:	mov    eax,DWORD PTR [ebx+0x50]
  426277:	mov    DWORD PTR [ebp-0x68],eax
  42627a:	mov    eax,DWORD PTR [ebp-0x18]
  42627d:	xor    eax,esi
  42627f:	add    eax,edi
  426281:	mov    DWORD PTR [ebp-0x64],eax
  426284:	mov    eax,DWORD PTR [ebp-0x14]
  426287:	and    DWORD PTR [ebp-0x6c],0x0
  42628b:	xor    eax,esi
  42628d:	add    eax,edi
  42628f:	mov    DWORD PTR [ebp-0x60],eax
  426292:	lea    eax,[ebp-0x70]
  426295:	push   eax
  426296:	mov    eax,DWORD PTR [ebp+0x8]
  426299:	xor    eax,esi
  42629b:	add    eax,edi
  42629d:	push   eax
  42629e:	mov    eax,DWORD PTR [ebp+0x20]
  4262a1:	add    eax,0xaa
  4262a6:	push   eax
  4262a7:	mov    eax,DWORD PTR [ebp+0x20]
  4262aa:	mov    eax,DWORD PTR [eax+0x198]
  4262b0:	mov    DWORD PTR [ebp-0x70],0x4
  4262b7:	push   DWORD PTR [eax]
  4262b9:	mov    eax,DWORD PTR [ebp+0x10]
  4262bc:	call   eax
  4262be:	mov    ecx,DWORD PTR [ebp-0xc]
  4262c1:	mov    ecx,DWORD PTR [ecx]
  4262c3:	mov    edx,DWORD PTR [ebp-0x8]
  4262c6:	mov    DWORD PTR [ebp-0x6c],eax
  4262c9:	mov    DWORD PTR [ebp+0x1c],eax
  4262cc:	mov    DWORD PTR [edx],ecx
  4262ce:	mov    ecx,DWORD PTR [ebp-0x4]
  4262d1:	mov    DWORD PTR [ecx],eax
  4262d3:	mov    eax,DWORD PTR [ebx+0x50]
  4262d6:	mov    DWORD PTR [ebp-0x68],eax
  4262d9:	mov    eax,DWORD PTR [ebp-0x1c]
  4262dc:	xor    eax,esi
  4262de:	add    eax,edi
  4262e0:	mov    DWORD PTR [ebp-0x64],eax
  4262e3:	lea    eax,[ebp-0x20]
  4262e6:	mov    DWORD PTR [ebp-0x60],eax
  4262e9:	lea    eax,[ebp-0x70]
  4262ec:	push   eax
  4262ed:	mov    eax,DWORD PTR [ebp+0x8]
  4262f0:	xor    eax,esi
  4262f2:	add    eax,edi
  4262f4:	push   eax
  4262f5:	mov    eax,DWORD PTR [ebp+0x20]
  4262f8:	add    eax,0xee
  4262fd:	push   eax
  4262fe:	mov    eax,DWORD PTR [ebp+0x20]
  426301:	mov    eax,DWORD PTR [eax+0x198]
  426307:	mov    DWORD PTR [ebp-0x70],0x4
  42630e:	push   DWORD PTR [eax]
  426310:	mov    eax,DWORD PTR [ebp+0x10]
  426313:	call   eax
  426315:	test   eax,eax
  426317:	je     0x42633c
  426319:	and    DWORD PTR [ebp+0xc],0x0
  42631d:	cmp    DWORD PTR [ebx+0x50],0x0
  426321:	jbe    0x42633c
  426323:	mov    eax,DWORD PTR [ebp+0x1c]
  426326:	mov    ecx,DWORD PTR [ebp-0x10]
  426329:	sub    ecx,eax
  42632b:	mov    dl,BYTE PTR [ecx+eax*1]
  42632e:	inc    DWORD PTR [ebp+0xc]
  426331:	mov    BYTE PTR [eax],dl
  426333:	mov    edx,DWORD PTR [ebp+0xc]
  426336:	inc    eax
  426337:	cmp    edx,DWORD PTR [ebx+0x50]
  42633a:	jb     0x42632b
  42633c:	mov    edx,DWORD PTR [ebp+0x1c]
  42633f:	mov    ecx,DWORD PTR [edx+0x3c]
  426342:	add    ecx,edx
  426344:	mov    eax,DWORD PTR [ecx+0xa0]
  42634a:	mov    ebx,DWORD PTR [ecx+0x28]
  42634d:	add    eax,edx
  42634f:	sub    edx,DWORD PTR [ebp-0x10]
  426352:	add    ebx,DWORD PTR [ebp+0x1c]
  426355:	mov    DWORD PTR [ebp+0xc],edx
  426358:	mov    DWORD PTR [ebp-0x2c],ecx
  42635b:	mov    DWORD PTR [ebp-0x14],ebx
  42635e:	mov    DWORD PTR [ebp-0x8],0x0
  426365:	jmp    0x4263e1
  426367:	add    edx,0xfffffff8
  42636a:	shr    edx,1
  42636c:	mov    DWORD PTR [ebp-0x18],edx
  42636f:	je     0x4263cd
  426371:	lea    edx,[eax+0x8]
  426374:	mov    DWORD PTR [ebp-0x4],edx
  426377:	mov    edx,DWORD PTR [ebp-0x18]
  42637a:	mov    DWORD PTR [ebp-0x18],edx
  42637d:	mov    edx,DWORD PTR [ebp-0x4]
  426380:	movzx  edx,WORD PTR [edx]
  426383:	mov    DWORD PTR [ebp-0x24],edx
  426386:	and    edx,0xfff
  42638c:	mov    DWORD PTR [ebp-0x28],edx
  42638f:	mov    edx,DWORD PTR [ebp-0x24]
  426392:	shr    edx,0xc
  426395:	add    edx,0xffcd8d14
  42639b:	xor    edx,esi
  42639d:	cmp    edx,0xf89c85b3
  4263a3:	jne    0x4263c4
  4263a5:	mov    edx,DWORD PTR [ebp-0x28]
  4263a8:	add    edx,DWORD PTR [ebp+0x1c]
  4263ab:	mov    ebx,DWORD PTR [eax]
  4263ad:	cmp    DWORD PTR [ebx+edx*1],0x0
  4263b1:	je     0x4263c1
  4263b3:	mov    ecx,DWORD PTR [ebp+0xc]
  4263b6:	add    ecx,DWORD PTR [ebx+edx*1]
  4263b9:	mov    ebx,DWORD PTR [eax]
  4263bb:	mov    DWORD PTR [edx+ebx*1],ecx
  4263be:	mov    ecx,DWORD PTR [ebp-0x2c]
  4263c1:	mov    ebx,DWORD PTR [ebp-0x14]
  4263c4:	add    DWORD PTR [ebp-0x4],0x2
  4263c8:	dec    DWORD PTR [ebp-0x18]
  4263cb:	jne    0x42637d
  4263cd:	mov    edx,DWORD PTR [ebp-0xc]
  4263d0:	add    DWORD PTR [ebp-0x8],edx
  4263d3:	mov    edx,DWORD PTR [ebp-0x8]
  4263d6:	cmp    edx,DWORD PTR [ecx+0xa4]
  4263dc:	jae    0x4263ef
  4263de:	add    eax,DWORD PTR [ebp-0xc]
  4263e1:	mov    edx,DWORD PTR [eax+0x4]
  4263e4:	mov    DWORD PTR [ebp-0xc],edx
  4263e7:	test   edx,edx
  4263e9:	jne    0x426367
  4263ef:	mov    eax,DWORD PTR [ebp-0x10]
  4263f2:	mov    DWORD PTR [ebp-0x6c],eax
  4263f5:	mov    DWORD PTR [ebp-0x70],0x4
  4263fc:	mov    eax,DWORD PTR [ecx+0x50]
  4263ff:	mov    DWORD PTR [ebp-0x68],eax
  426402:	mov    eax,DWORD PTR [ebp-0x1c]
  426405:	xor    eax,esi
  426407:	add    eax,edi
  426409:	mov    DWORD PTR [ebp-0x64],eax
  42640c:	lea    eax,[ebp-0x20]
  42640f:	mov    DWORD PTR [ebp-0x60],eax
  426412:	lea    eax,[ebp-0x70]
  426415:	push   eax
  426416:	mov    eax,DWORD PTR [ebp+0x8]
  426419:	xor    eax,esi
  42641b:	add    eax,edi
  42641d:	push   eax
  42641e:	mov    eax,DWORD PTR [ebp+0x20]
  426421:	add    eax,0xee
  426426:	push   eax
  426427:	mov    eax,DWORD PTR [ebp+0x20]
  42642a:	mov    eax,DWORD PTR [eax+0x198]
  426430:	push   DWORD PTR [eax]
  426432:	mov    eax,DWORD PTR [ebp+0x10]
  426435:	call   eax
  426437:	mov    eax,DWORD PTR [ebp+0x20]
  42643a:	mov    eax,DWORD PTR [eax+0x180]
  426440:	add    eax,DWORD PTR [ebp+0xc]
  426443:	mov    ecx,DWORD PTR [ebp+0xc]
  426446:	push   DWORD PTR [ebp+0x18]
  426449:	mov    DWORD PTR [eax],ecx
  42644b:	push   DWORD PTR [ebp+0x14]
  42644e:	push   DWORD PTR [ebp+0x1c]
  426451:	call   ebx
  426453:	mov    ecx,DWORD PTR [ebp+0xc]
  426456:	add    ecx,DWORD PTR [ebp+0x20]
  426459:	lea    eax,[ebp+0x4]
  42645c:	mov    DWORD PTR [ebp+0x20],ecx
  42645f:	mov    ecx,DWORD PTR [ebp+0x20]
  426462:	mov    ecx,DWORD PTR [ebp+0x20]
  426465:	mov    edx,DWORD PTR [ecx+0x190]
  42646b:	mov    ecx,DWORD PTR [ebp+0x20]
  42646e:	mov    ecx,DWORD PTR [ecx+0x18c]
  426474:	mov    esi,DWORD PTR [ecx]
  426476:	cmp    DWORD PTR [eax],esi
  426478:	jb     0x426499
  42647a:	mov    esi,DWORD PTR [edx]
  42647c:	mov    edi,DWORD PTR [edx]
  42647e:	mov    esi,DWORD PTR [esi+0x3c]
  426481:	lea    esi,[edi+esi*1+0x50]
  426485:	mov    edi,DWORD PTR [ecx]
  426487:	add    edi,DWORD PTR [esi]
  426489:	cmp    DWORD PTR [eax],edi
  42648b:	jae    0x426499
  42648d:	mov    esi,DWORD PTR [ecx]
  42648f:	mov    ecx,DWORD PTR [eax]
  426491:	mov    edx,DWORD PTR [edx]
  426493:	sub    ecx,esi
  426495:	add    edx,ecx
  426497:	mov    DWORD PTR [eax],edx
  426499:	mov    eax,DWORD PTR [ebp+0xc]
  42649c:	jmp    0x4264a0
  42649e:	xor    eax,eax
  4264a0:	pop    edi
  4264a1:	pop    esi
  4264a2:	pop    ebx
  4264a3:	leave  
  4264a4:	ret    0x1c
  4264a7:	push   ebp
  4264a8:	mov    ebp,esp
  4264aa:	sub    esp,0x1c
  4264ad:	push   esi
  4264ae:	mov    esi,eax
  4264b0:	mov    eax,DWORD PTR [ecx+0x190]
  4264b6:	cmp    DWORD PTR [eax],0x0
  4264b9:	je     0x4265c9
  4264bf:	test   edx,edx
  4264c1:	je     0x4265c9
  4264c7:	test   esi,esi
  4264c9:	je     0x4265c9
  4264cf:	mov    eax,DWORD PTR [esi+0x88]
  4264d5:	test   eax,eax
  4264d7:	je     0x4265c4
  4264dd:	cmp    DWORD PTR [esi+0x8c],0x10
  4264e4:	je     0x4265c4
  4264ea:	cmp    DWORD PTR [esi+0x34],edx
  4264ed:	je     0x4265c4
  4264f3:	mov    esi,DWORD PTR [ecx+0x18c]
  4264f9:	and    DWORD PTR [ebp-0x10],0x0
  4264fd:	mov    ecx,edx
  4264ff:	sub    ecx,DWORD PTR [esi]
  426501:	add    eax,edx
  426503:	movzx  edx,WORD PTR [eax+0xc]
  426507:	mov    DWORD PTR [ebp-0x1c],ecx
  42650a:	movzx  ecx,WORD PTR [eax+0xe]
  42650e:	add    ecx,edx
  426510:	je     0x4265c4
  426516:	lea    ecx,[eax+0x14]
  426519:	push   ebx
  42651a:	mov    DWORD PTR [ebp-0x18],ecx
  42651d:	mov    esi,0x7fffffff
  426522:	push   edi
  426523:	test   DWORD PTR [ecx],esi
  426525:	je     0x4265a6
  426527:	mov    edx,DWORD PTR [ecx]
  426529:	and    DWORD PTR [ebp-0xc],0x0
  42652d:	and    edx,esi
  42652f:	add    edx,eax
  426531:	movzx  edi,WORD PTR [edx+0xe]
  426535:	movzx  ebx,WORD PTR [edx+0xc]
  426539:	add    edi,ebx
  42653b:	je     0x4265a6
  42653d:	lea    ecx,[edx+0x14]
  426540:	mov    DWORD PTR [ebp-0x14],ecx
  426543:	test   DWORD PTR [ecx],esi
  426545:	je     0x426588
  426547:	mov    ecx,DWORD PTR [ecx]
  426549:	and    DWORD PTR [ebp-0x8],0x0
  42654d:	and    ecx,esi
  42654f:	add    ecx,eax
  426551:	movzx  edi,WORD PTR [ecx+0xe]
  426555:	movzx  ebx,WORD PTR [ecx+0xc]
  426559:	add    edi,ebx
  42655b:	je     0x426588
  42655d:	lea    edi,[ecx+0x14]
  426560:	mov    DWORD PTR [ebp-0x4],edi
  426563:	mov    edi,DWORD PTR [ebp-0x4]
  426566:	mov    edi,DWORD PTR [edi]
  426568:	test   edi,edi
  42656a:	je     0x426572
  42656c:	mov    ebx,DWORD PTR [ebp-0x1c]
  42656f:	add    DWORD PTR [edi+eax*1],ebx
  426572:	movzx  edi,WORD PTR [ecx+0xe]
  426576:	movzx  ebx,WORD PTR [ecx+0xc]
  42657a:	inc    DWORD PTR [ebp-0x8]
  42657d:	add    DWORD PTR [ebp-0x4],0x8
  426581:	add    edi,ebx
  426583:	cmp    DWORD PTR [ebp-0x8],edi
  426586:	jb     0x426563
  426588:	movzx  edi,WORD PTR [edx+0xe]
  42658c:	movzx  ebx,WORD PTR [edx+0xc]
  426590:	mov    ecx,DWORD PTR [ebp-0x14]
  426593:	inc    DWORD PTR [ebp-0xc]
  426596:	add    ecx,0x8
  426599:	add    edi,ebx
  42659b:	mov    DWORD PTR [ebp-0x14],ecx
  42659e:	cmp    DWORD PTR [ebp-0xc],edi
  4265a1:	jb     0x426543
  4265a3:	mov    ecx,DWORD PTR [ebp-0x18]
  4265a6:	movzx  edx,WORD PTR [eax+0xe]
  4265aa:	movzx  edi,WORD PTR [eax+0xc]
  4265ae:	inc    DWORD PTR [ebp-0x10]
  4265b1:	add    ecx,0x8
  4265b4:	add    edx,edi
  4265b6:	mov    DWORD PTR [ebp-0x18],ecx
  4265b9:	cmp    DWORD PTR [ebp-0x10],edx
  4265bc:	jb     0x426523
  4265c2:	pop    edi
  4265c3:	pop    ebx
  4265c4:	xor    eax,eax
  4265c6:	inc    eax
  4265c7:	jmp    0x4265cb
  4265c9:	xor    eax,eax
  4265cb:	pop    esi
  4265cc:	leave  
  4265cd:	ret    
  4265ce:	push   ebp
  4265cf:	mov    ebp,esp
  4265d1:	mov    ecx,DWORD PTR [ecx+0x190]
  4265d7:	mov    eax,DWORD PTR [ebp+0xc]
  4265da:	sub    esp,0x10
  4265dd:	push   ebx
  4265de:	xor    ebx,ebx
  4265e0:	push   esi
  4265e1:	push   edi
  4265e2:	cmp    DWORD PTR [ecx],ebx
  4265e4:	je     0x42666c
  4265ea:	cmp    eax,ebx
  4265ec:	je     0x42666c
  4265ee:	cmp    DWORD PTR [eax+0x78],ebx
  4265f1:	jne    0x4265f8
  4265f3:	xor    eax,eax
  4265f5:	inc    eax
  4265f6:	jmp    0x42666e
  4265f8:	mov    eax,DWORD PTR [eax+0x78]
  4265fb:	add    eax,DWORD PTR [ebp+0x8]
  4265fe:	mov    ecx,DWORD PTR [eax+0x1c]
  426601:	mov    edx,DWORD PTR [eax+0x24]
  426604:	mov    esi,DWORD PTR [eax+0x14]
  426607:	mov    edi,DWORD PTR [eax+0x18]
  42660a:	add    ecx,DWORD PTR [ebp+0x8]
  42660d:	add    edx,DWORD PTR [ebp+0x8]
  426610:	mov    DWORD PTR [ebp-0x4],esi
  426613:	cmp    esi,edi
  426615:	ja     0x42661a
  426617:	mov    DWORD PTR [ebp-0x4],edi
  42661a:	mov    DWORD PTR [ebp-0x8],ebx
  42661d:	cmp    DWORD PTR [ebp-0x4],ebx
  426620:	jbe    0x4265f3
  426622:	cmp    ebx,DWORD PTR [eax+0x14]
  426625:	jae    0x42662d
  426627:	movzx  esi,WORD PTR [edx+ebx*2]
  42662b:	jmp    0x42662f
  42662d:	mov    esi,ebx
  42662f:	lea    esi,[ecx+esi*4]
  426632:	mov    edi,DWORD PTR [esi]
  426634:	test   edi,edi
  426636:	je     0x426661
  426638:	add    edi,DWORD PTR [ebp+0x8]
  42663b:	mov    DWORD PTR [ebp-0x10],edi
  42663e:	cmp    edi,eax
  426640:	jbe    0x426652
  426642:	mov    ebx,DWORD PTR [ebp+0xc]
  426645:	mov    ebx,DWORD PTR [ebx+0x7c]
  426648:	add    ebx,eax
  42664a:	cmp    edi,ebx
  42664c:	jae    0x426652
  42664e:	mov    esi,DWORD PTR [esi]
  426650:	jmp    0x42665a
  426652:	sub    edi,DWORD PTR [ebp+0x8]
  426655:	mov    DWORD PTR [esi],edi
  426657:	mov    esi,DWORD PTR [ebp-0x10]
  42665a:	test   esi,esi
  42665c:	je     0x42666c
  42665e:	mov    ebx,DWORD PTR [ebp-0x8]
  426661:	inc    ebx
  426662:	mov    DWORD PTR [ebp-0x8],ebx
  426665:	cmp    ebx,DWORD PTR [ebp-0x4]
  426668:	jb     0x426622
  42666a:	jmp    0x4265f3
  42666c:	xor    eax,eax
  42666e:	pop    edi
  42666f:	pop    esi
  426670:	pop    ebx
  426671:	leave  
  426672:	ret    0x8
  426675:	push   ebp
  426676:	mov    ebp,esp
  426678:	sub    esp,0x2c
  42667b:	mov    edx,0xf89c85b0
  426680:	mov    DWORD PTR [ebp-0x4],edx
  426683:	mov    DWORD PTR [ebp-0x8],0xf89c85b1
  42668a:	mov    eax,DWORD PTR [ebp-0x4]
  42668d:	mov    ecx,DWORD PTR [ebp-0x4]
  426690:	mov    ecx,DWORD PTR [ebp-0x4]
  426693:	mov    ecx,DWORD PTR [ebp-0x4]
  426696:	mov    ecx,DWORD PTR [ebp-0x4]
  426699:	mov    ecx,DWORD PTR [ebp-0x4]
  42669c:	push   ebx
  42669d:	mov    ebx,DWORD PTR [ebp+0x10]
  4266a0:	push   esi
  4266a1:	mov    esi,0x75108a4
  4266a6:	mov    DWORD PTR [ebp-0x10],0x352eb2e
  4266ad:	mov    ecx,DWORD PTR [ebp-0x4]
  4266b0:	mov    ebx,DWORD PTR [ebx+0x190]
  4266b6:	push   edi
  4266b7:	mov    edi,0x3272ec
  4266bc:	xor    ecx,esi
  4266be:	xor    eax,esi
  4266c0:	add    eax,edi
  4266c2:	add    ecx,edi
  4266c4:	mov    DWORD PTR [ebp-0x18],eax
  4266c7:	cmp    ecx,DWORD PTR [ebx]
  4266c9:	je     0x42694a
  4266cf:	mov    ebx,DWORD PTR [ebp-0x4]
  4266d2:	mov    ecx,DWORD PTR [ebp+0xc]
  4266d5:	xor    ebx,esi
  4266d7:	add    ebx,edi
  4266d9:	cmp    ebx,ecx
  4266db:	je     0x42694a
  4266e1:	mov    ebx,DWORD PTR [ebp-0x4]
  4266e4:	mov    ecx,DWORD PTR [ecx+0x80]
  4266ea:	xor    ebx,esi
  4266ec:	add    ebx,edi
  4266ee:	cmp    ecx,ebx
  4266f0:	je     0x426945
  4266f6:	add    ecx,DWORD PTR [ebp+0x8]
  4266f9:	mov    DWORD PTR [ebp-0x2c],ecx
  4266fc:	mov    ebx,edx
  4266fe:	xor    ebx,esi
  426700:	add    ebx,edi
  426702:	mov    DWORD PTR [ebp-0x10],ebx
  426705:	mov    ebx,DWORD PTR [ebp-0x10]
  426708:	cmp    ebx,edx
  42670a:	je     0x42671e
  42670c:	mov    edx,DWORD PTR [ebp-0x10]
  42670f:	mov    ebx,DWORD PTR [ebp-0x4]
  426712:	imul   edx,edx,0x14
  426715:	xor    ebx,esi
  426717:	add    ebx,edi
  426719:	cmp    DWORD PTR [edx+ecx*1],ebx
  42671c:	jne    0x426735
  42671e:	mov    edx,DWORD PTR [ebp-0x10]
  426721:	mov    ebx,DWORD PTR [ebp-0x4]
  426724:	imul   edx,edx,0x14
  426727:	xor    ebx,esi
  426729:	add    ebx,edi
  42672b:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  42672f:	je     0x426937
  426735:	mov    eax,DWORD PTR [ebp-0x4]
  426738:	mov    ebx,DWORD PTR [ebp-0x4]
  42673b:	mov    eax,DWORD PTR [ebp-0x10]
  42673e:	imul   eax,eax,0x14
  426741:	add    eax,ecx
  426743:	mov    ecx,DWORD PTR [eax+0x10]
  426746:	add    ecx,DWORD PTR [ebp+0x8]
  426749:	xor    ebx,esi
  42674b:	mov    DWORD PTR [ebp-0x1c],ecx
  42674e:	mov    ecx,DWORD PTR [ebp-0x4]
  426751:	mov    edx,DWORD PTR [ebp-0x4]
  426754:	xor    ecx,esi
  426756:	add    ecx,edi
  426758:	xor    edx,esi
  42675a:	mov    DWORD PTR [ebp-0x24],ecx
  42675d:	mov    ecx,DWORD PTR [eax]
  42675f:	add    edx,edi
  426761:	add    ebx,edi
  426763:	cmp    ecx,edx
  426765:	je     0x42676d
  426767:	add    ecx,DWORD PTR [ebp+0x8]
  42676a:	mov    DWORD PTR [ebp-0x24],ecx
  42676d:	mov    ecx,DWORD PTR [ebp-0x4]
  426770:	xor    ecx,esi
  426772:	add    ecx,DWORD PTR [eax+0xc]
  426775:	mov    eax,DWORD PTR [ebp+0x8]
  426778:	lea    eax,[ecx+eax*1+0x3272ec]
  42677f:	mov    DWORD PTR [ebp+0xc],eax
  426782:	mov    DWORD PTR [ebp-0x28],0xf89c85bd
  426789:	mov    eax,DWORD PTR [ebp+0x10]
  42678c:	push   DWORD PTR [ebp+0xc]
  42678f:	mov    eax,DWORD PTR [eax+0x1d8]
  426795:	call   DWORD PTR [eax]
  426797:	mov    ecx,DWORD PTR [ebp-0x4]
  42679a:	xor    ecx,esi
  42679c:	add    ecx,edi
  42679e:	mov    DWORD PTR [ebp-0xc],eax
  4267a1:	cmp    ecx,eax
  4267a3:	jne    0x4267b7
  4267a5:	mov    eax,DWORD PTR [ebp+0x10]
  4267a8:	push   DWORD PTR [ebp+0xc]
  4267ab:	mov    eax,DWORD PTR [eax+0x1d8]
  4267b1:	call   DWORD PTR [eax+0xc]
  4267b4:	mov    DWORD PTR [ebp-0xc],eax
  4267b7:	mov    DWORD PTR [ebp-0x20],0x7f661b29
  4267be:	mov    DWORD PTR [ebp-0x20],0xf89c9859
  4267c5:	mov    eax,DWORD PTR [ebp-0x4]
  4267c8:	xor    eax,esi
  4267ca:	add    eax,edi
  4267cc:	cmp    eax,DWORD PTR [ebp-0xc]
  4267cf:	jne    0x4267f4
  4267d1:	mov    eax,DWORD PTR [ebp-0x8]
  4267d4:	mov    ecx,DWORD PTR [ebp-0x20]
  4267d7:	xor    eax,esi
  4267d9:	xor    ecx,esi
  4267db:	lea    ebx,[ebx+eax*1+0x3272ec]
  4267e2:	mov    eax,DWORD PTR [ebp+0x10]
  4267e5:	mov    eax,DWORD PTR [eax+0x1d8]
  4267eb:	add    ecx,edi
  4267ed:	imul   ecx,ebx
  4267f0:	push   ecx
  4267f1:	call   DWORD PTR [eax+0x24]
  4267f4:	mov    eax,DWORD PTR [ebp-0x4]
  4267f7:	xor    eax,esi
  4267f9:	add    eax,edi
  4267fb:	cmp    eax,DWORD PTR [ebp-0xc]
  4267fe:	jne    0x42680f
  426800:	mov    eax,DWORD PTR [ebp-0x28]
  426803:	xor    eax,esi
  426805:	add    eax,edi
  426807:	cmp    ebx,eax
  426809:	jbe    0x426789
  42680f:	mov    eax,DWORD PTR [ebp-0x4]
  426812:	xor    eax,esi
  426814:	add    eax,edi
  426816:	cmp    eax,DWORD PTR [ebp-0xc]
  426819:	jne    0x426832
  42681b:	mov    eax,DWORD PTR [ebp-0x8]
  42681e:	mov    ecx,DWORD PTR [ebp-0x18]
  426821:	xor    eax,esi
  426823:	lea    eax,[ecx+eax*1+0x3272ec]
  42682a:	mov    DWORD PTR [ebp-0x18],eax
  42682d:	jmp    0x426921
  426832:	mov    DWORD PTR [ebp-0x14],0x1121b28
  426839:	mov    DWORD PTR [ebp+0xc],0xe042d2e
  426840:	mov    ebx,DWORD PTR [ebp-0x4]
  426843:	xor    ebx,esi
  426845:	add    ebx,edi
  426847:	jmp    0x42690e
  42684c:	mov    eax,DWORD PTR [ebp-0x4]
  42684f:	xor    eax,esi
  426851:	add    eax,edi
  426853:	mov    DWORD PTR [ebp-0x14],eax
  426856:	mov    eax,DWORD PTR [ebp-0x4]
  426859:	xor    eax,esi
  42685b:	add    eax,edi
  42685d:	mov    DWORD PTR [ebp+0xc],eax
  426860:	mov    ecx,DWORD PTR [ebp-0x4]
  426863:	mov    eax,DWORD PTR [ebp-0x24]
  426866:	xor    ecx,esi
  426868:	add    ecx,edi
  42686a:	cmp    ecx,eax
  42686c:	je     0x426874
  42686e:	mov    eax,DWORD PTR [eax+ebx*4]
  426871:	mov    DWORD PTR [ebp-0x14],eax
  426874:	mov    eax,DWORD PTR [ebp-0x1c]
  426877:	mov    eax,DWORD PTR [eax+ebx*4]
  42687a:	mov    DWORD PTR [ebp+0xc],eax
  42687d:	mov    eax,DWORD PTR [ebp-0x4]
  426880:	mov    ecx,DWORD PTR [ebp-0x14]
  426883:	xor    eax,esi
  426885:	add    eax,edi
  426887:	cmp    eax,ecx
  426889:	je     0x4268b4
  42688b:	mov    eax,DWORD PTR [ebp-0x4]
  42688e:	mov    ecx,DWORD PTR [ebp-0x14]
  426891:	xor    eax,esi
  426893:	add    eax,edi
  426895:	shr    ecx,0x1f
  426898:	cmp    eax,ecx
  42689a:	je     0x4268b4
  42689c:	mov    ecx,DWORD PTR [ebp-0x14]
  42689f:	mov    eax,DWORD PTR [ebp+0x10]
  4268a2:	mov    eax,DWORD PTR [eax+0x1d8]
  4268a8:	movzx  ecx,cx
  4268ab:	push   ecx
  4268ac:	push   DWORD PTR [ebp-0xc]
  4268af:	call   DWORD PTR [eax+0x8]
  4268b2:	jmp    0x4268cd
  4268b4:	mov    eax,DWORD PTR [ebp+0xc]
  4268b7:	add    eax,DWORD PTR [ebp+0x8]
  4268ba:	mov    ecx,DWORD PTR [ebp+0x10]
  4268bd:	mov    ecx,DWORD PTR [ecx+0x1d8]
  4268c3:	add    eax,0x2
  4268c6:	push   eax
  4268c7:	push   DWORD PTR [ebp-0xc]
  4268ca:	call   DWORD PTR [ecx+0x8]
  4268cd:	mov    DWORD PTR [ebp+0xc],eax
  4268d0:	mov    eax,DWORD PTR [ebp-0x4]
  4268d3:	mov    ecx,DWORD PTR [ebp+0xc]
  4268d6:	xor    eax,esi
  4268d8:	add    eax,edi
  4268da:	cmp    eax,ecx
  4268dc:	mov    eax,DWORD PTR [ebp-0x8]
  4268df:	jne    0x4268f2
  4268e1:	mov    ecx,DWORD PTR [ebp-0x18]
  4268e4:	xor    eax,esi
  4268e6:	lea    eax,[ecx+eax*1+0x3272ec]
  4268ed:	mov    DWORD PTR [ebp-0x18],eax
  4268f0:	jmp    0x426902
  4268f2:	mov    ecx,DWORD PTR [ebp+0xc]
  4268f5:	xor    eax,esi
  4268f7:	add    eax,edi
  4268f9:	imul   eax,ecx
  4268fc:	mov    ecx,DWORD PTR [ebp-0x1c]
  4268ff:	mov    DWORD PTR [ecx+ebx*4],eax
  426902:	mov    eax,DWORD PTR [ebp-0x8]
  426905:	xor    eax,esi
  426907:	lea    ebx,[ebx+eax*1+0x3272ec]
  42690e:	mov    eax,DWORD PTR [ebp-0x4]
  426911:	mov    ecx,DWORD PTR [ebp-0x1c]
  426914:	xor    eax,esi
  426916:	add    eax,edi
  426918:	cmp    DWORD PTR [ecx+ebx*4],eax
  42691b:	jne    0x42684c
  426921:	mov    edx,DWORD PTR [ebp-0x10]
  426924:	mov    ecx,DWORD PTR [ebp-0x2c]
  426927:	mov    eax,DWORD PTR [ebp-0x18]
  42692a:	sub    edx,0x3272eb
  426930:	xor    edx,esi
  426932:	jmp    0x4266fc
  426937:	mov    ecx,DWORD PTR [ebp-0x4]
  42693a:	xor    ecx,esi
  42693c:	add    ecx,edi
  42693e:	cmp    eax,ecx
  426940:	mov    eax,DWORD PTR [ebp-0x4]
  426943:	jne    0x42694d
  426945:	mov    eax,DWORD PTR [ebp-0x8]
  426948:	jmp    0x42694d
  42694a:	mov    eax,DWORD PTR [ebp-0x4]
  42694d:	xor    eax,esi
  42694f:	add    eax,edi
  426951:	pop    edi
  426952:	pop    esi
  426953:	pop    ebx
  426954:	leave  
  426955:	ret    0xc
  426958:	push   ebp
  426959:	mov    ebp,esp
  42695b:	sub    esp,0x28
  42695e:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  426965:	mov    DWORD PTR [ebp-0x28],0xf89c85b1
  42696c:	mov    eax,DWORD PTR [ebp+0xc]
  42696f:	mov    DWORD PTR [ebp+0xc],eax
  426972:	push   esi
  426973:	mov    eax,eax
  426975:	mov    eax,DWORD PTR [ebp-0x4]
  426978:	mov    esi,DWORD PTR [ebp+0x8]
  42697b:	mov    ecx,0x75108a4
  426980:	xor    eax,ecx
  426982:	mov    edx,0x3272ec
  426987:	add    eax,edx
  426989:	cmp    esi,eax
  42698b:	je     0x426ab2
  426991:	mov    eax,DWORD PTR [ebp+0x8]
  426994:	mov    esi,DWORD PTR [ebp+0x8]
  426997:	add    esi,DWORD PTR [eax+0x3c]
  42699a:	push   edi
  42699b:	mov    DWORD PTR [ebp+0xc],esi
  42699e:	mov    DWORD PTR [ebp-0x1c],0xf89c85bd
  4269a5:	mov    eax,DWORD PTR [ebp-0x1c]
  4269a8:	mov    esi,DWORD PTR [ebp-0x4]
  4269ab:	mov    edi,DWORD PTR [ebp+0xc]
  4269ae:	xor    esi,ecx
  4269b0:	xor    eax,ecx
  4269b2:	add    esi,edx
  4269b4:	cmp    DWORD PTR [edi+eax*8+0x19397d8],esi
  4269bb:	je     0x426aac
  4269c1:	mov    esi,DWORD PTR [ebp+0xc]
  4269c4:	mov    eax,DWORD PTR [ebp+0x8]
  4269c7:	add    eax,DWORD PTR [esi+0xa0]
  4269cd:	mov    esi,DWORD PTR [ebp+0x8]
  4269d0:	mov    edi,DWORD PTR [ebp+0xc]
  4269d3:	sub    esi,DWORD PTR [edi+0x34]
  4269d6:	mov    edi,DWORD PTR [ebp-0x4]
  4269d9:	xor    edi,ecx
  4269db:	add    edi,edx
  4269dd:	mov    DWORD PTR [ebp-0x24],esi
  4269e0:	cmp    esi,edi
  4269e2:	je     0x426aac
  4269e8:	mov    esi,DWORD PTR [ebp-0x4]
  4269eb:	xor    esi,ecx
  4269ed:	add    esi,edx
  4269ef:	mov    DWORD PTR [ebp-0x8],esi
  4269f2:	push   ebx
  4269f3:	mov    DWORD PTR [ebp-0x10],0xf89c85b3
  4269fa:	jmp    0x426a96
  4269ff:	mov    esi,DWORD PTR [ebp-0x4]
  426a02:	xor    esi,ecx
  426a04:	lea    edi,[ebx-0x8]
  426a07:	add    esi,edx
  426a09:	shr    edi,1
  426a0b:	cmp    esi,edi
  426a0d:	jae    0x426a7c
  426a0f:	sub    edi,esi
  426a11:	lea    ebx,[eax+esi*2+0x8]
  426a15:	mov    DWORD PTR [ebp-0x18],edi
  426a18:	movzx  esi,WORD PTR [ebx]
  426a1b:	and    esi,0xfff
  426a21:	mov    DWORD PTR [ebp-0x14],esi
  426a24:	mov    edi,DWORD PTR [ebp-0x14]
  426a27:	mov    esi,DWORD PTR [eax]
  426a29:	sub    esi,edx
  426a2b:	add    edi,esi
  426a2d:	movzx  esi,WORD PTR [ebx]
  426a30:	shr    esi,0xc
  426a33:	xor    edi,ecx
  426a35:	mov    DWORD PTR [ebp-0x20],edi
  426a38:	mov    DWORD PTR [ebp-0x14],esi
  426a3b:	mov    esi,DWORD PTR [ebp-0x20]
  426a3e:	mov    edi,DWORD PTR [ebp+0x8]
  426a41:	xor    esi,ecx
  426a43:	lea    esi,[esi+edi*1+0x3272ec]
  426a4a:	mov    DWORD PTR [ebp-0x20],esi
  426a4d:	mov    esi,DWORD PTR [ebp-0x10]
  426a50:	mov    edi,DWORD PTR [ebp-0x14]
  426a53:	xor    esi,ecx
  426a55:	add    esi,edx
  426a57:	cmp    edi,esi
  426a59:	jne    0x426a71
  426a5b:	mov    esi,DWORD PTR [ebp-0x10]
  426a5e:	mov    edi,DWORD PTR [ebp-0x14]
  426a61:	xor    esi,ecx
  426a63:	add    esi,edx
  426a65:	cmp    edi,esi
  426a67:	jne    0x426a71
  426a69:	mov    esi,DWORD PTR [ebp-0x20]
  426a6c:	mov    edi,DWORD PTR [ebp-0x24]
  426a6f:	add    DWORD PTR [esi],edi
  426a71:	add    ebx,0x2
  426a74:	dec    DWORD PTR [ebp-0x18]
  426a77:	jne    0x426a18
  426a79:	mov    ebx,DWORD PTR [ebp-0xc]
  426a7c:	add    DWORD PTR [ebp-0x8],ebx
  426a7f:	mov    esi,DWORD PTR [ebp-0x1c]
  426a82:	mov    edi,DWORD PTR [ebp-0x8]
  426a85:	mov    ebx,DWORD PTR [ebp+0xc]
  426a88:	xor    esi,ecx
  426a8a:	cmp    edi,DWORD PTR [ebx+esi*8+0x19397dc]
  426a91:	jae    0x426aab
  426a93:	add    eax,DWORD PTR [ebp-0xc]
  426a96:	mov    esi,DWORD PTR [ebp-0x4]
  426a99:	mov    ebx,DWORD PTR [eax+0x4]
  426a9c:	xor    esi,ecx
  426a9e:	add    esi,edx
  426aa0:	mov    DWORD PTR [ebp-0xc],ebx
  426aa3:	cmp    ebx,esi
  426aa5:	jne    0x4269ff
  426aab:	pop    ebx
  426aac:	mov    eax,DWORD PTR [ebp-0x28]
  426aaf:	pop    edi
  426ab0:	jmp    0x426ab5
  426ab2:	mov    eax,DWORD PTR [ebp-0x4]
  426ab5:	xor    eax,ecx
  426ab7:	add    eax,edx
  426ab9:	pop    esi
  426aba:	leave  
  426abb:	ret    0x8
  426abe:	push   ebp
  426abf:	mov    ebp,esp
  426ac1:	sub    esp,0xd8
  426ac7:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  426ace:	mov    DWORD PTR [ebp-0x24],0xf89c85b1
  426ad5:	mov    eax,DWORD PTR [ebp-0x4]
  426ad8:	push   ebx
  426ad9:	push   esi
  426ada:	mov    esi,0x75108a4
  426adf:	xor    eax,esi
  426ae1:	push   edi
  426ae2:	mov    edi,0x3272ec
  426ae7:	add    eax,edi
  426ae9:	mov    DWORD PTR [ebp-0x18],eax
  426aec:	mov    eax,DWORD PTR [ebp-0x4]
  426aef:	xor    eax,esi
  426af1:	add    eax,edi
  426af3:	mov    DWORD PTR [ebp-0x8],eax
  426af6:	mov    ebx,DWORD PTR [ebp+0x20]
  426af9:	mov    eax,DWORD PTR [ebp-0x1c]
  426afc:	mov    ecx,DWORD PTR [ebp-0x1c]
  426aff:	xor    eax,ecx
  426b01:	mov    DWORD PTR [ebp-0x1c],eax
  426b04:	add    DWORD PTR [ebp-0x1c],0xf89cb5b0
  426b0b:	mov    eax,DWORD PTR [ebp-0xc]
  426b0e:	mov    ecx,DWORD PTR [ebp-0xc]
  426b11:	xor    eax,ecx
  426b13:	mov    DWORD PTR [ebp-0xc],eax
  426b16:	add    DWORD PTR [ebp-0xc],0xf89c85f0
  426b1d:	mov    eax,DWORD PTR [ebp-0x10]
  426b20:	mov    ecx,DWORD PTR [ebp-0x10]
  426b23:	xor    eax,ecx
  426b25:	mov    DWORD PTR [ebp-0x10],eax
  426b28:	add    DWORD PTR [ebp-0x10],0xf89c85bc
  426b2f:	mov    eax,DWORD PTR [ebp-0x28]
  426b32:	mov    ecx,DWORD PTR [ebp-0x28]
  426b35:	xor    eax,ecx
  426b37:	mov    DWORD PTR [ebp-0x28],eax
  426b3a:	add    DWORD PTR [ebp-0x28],0xf89f05b0
  426b41:	mov    DWORD PTR [ebp+0x20],0xf89cefc5
  426b48:	mov    eax,DWORD PTR [ebp+0x8]
  426b4b:	test   eax,eax
  426b4d:	je     0x426fd8
  426b53:	mov    eax,DWORD PTR [ebp+0xc]
  426b56:	test   eax,eax
  426b58:	je     0x426fd8
  426b5e:	mov    eax,DWORD PTR [ebp+0x18]
  426b61:	test   eax,eax
  426b63:	je     0x426fd8
  426b69:	mov    eax,DWORD PTR [ebp+0x20]
  426b6c:	mov    ecx,DWORD PTR [ebp+0x8]
  426b6f:	xor    eax,0x8a4
  426b74:	add    eax,0x72ec
  426b79:	cmp    WORD PTR [ecx],ax
  426b7c:	jne    0x426fd8
  426b82:	mov    eax,DWORD PTR [ebp-0x4]
  426b85:	xor    eax,esi
  426b87:	add    eax,edi
  426b89:	mov    DWORD PTR [ebp-0x30],eax
  426b8c:	mov    eax,DWORD PTR [ebp-0x4]
  426b8f:	mov    ecx,DWORD PTR [ebp+0x8]
  426b92:	mov    eax,DWORD PTR [ebp+0x8]
  426b95:	add    eax,DWORD PTR [ecx+0x3c]
  426b98:	mov    DWORD PTR [ebp+0xc],eax
  426b9b:	mov    eax,DWORD PTR [eax+0x50]
  426b9e:	test   eax,eax
  426ba0:	je     0x426fd8
  426ba6:	mov    DWORD PTR [ebp-0x2c],0xf88c85b0
  426bad:	mov    eax,DWORD PTR [ebp-0x2c]
  426bb0:	xor    eax,esi
  426bb2:	add    eax,edi
  426bb4:	mov    DWORD PTR [ebp-0x2c],eax
  426bb7:	mov    eax,DWORD PTR [ebp-0x4]
  426bba:	mov    eax,DWORD PTR [ebx+0x190]
  426bc0:	mov    ecx,DWORD PTR [eax]
  426bc2:	mov    ecx,DWORD PTR [ecx+0x3c]
  426bc5:	add    ecx,DWORD PTR [eax]
  426bc7:	mov    eax,DWORD PTR [ebp-0x4]
  426bca:	mov    eax,DWORD PTR [ebx+0x18c]
  426bd0:	mov    edx,DWORD PTR [eax]
  426bd2:	mov    DWORD PTR [ebp-0x20],ecx
  426bd5:	mov    DWORD PTR [ebp+0x20],edx
  426bd8:	cmp    edx,edx
  426bda:	jne    0x426c0e
  426bdc:	mov    eax,DWORD PTR [ebx+0x1d8]
  426be2:	lea    edx,[ebp-0x18]
  426be5:	push   edx
  426be6:	mov    edx,DWORD PTR [ebp-0xc]
  426be9:	xor    edx,esi
  426beb:	add    edx,edi
  426bed:	push   edx
  426bee:	push   DWORD PTR [ecx+0x50]
  426bf1:	push   DWORD PTR [ebp+0x20]
  426bf4:	call   DWORD PTR [eax+0x1c]
  426bf7:	mov    eax,DWORD PTR [ebp-0x20]
  426bfa:	mov    ecx,DWORD PTR [eax+0x54]
  426bfd:	mov    eax,DWORD PTR [eax+0x50]
  426c00:	sub    eax,ecx
  426c02:	add    ecx,DWORD PTR [ebp+0x20]
  426c05:	push   ecx
  426c06:	call   0x427575
  426c0b:	mov    edx,DWORD PTR [ebp+0x20]
  426c0e:	mov    eax,DWORD PTR [ebx+0x194]
  426c14:	mov    DWORD PTR [eax],edx
  426c16:	mov    eax,DWORD PTR [ebp+0xc]
  426c19:	push   DWORD PTR [eax+0x54]
  426c1c:	push   DWORD PTR [ebp+0x8]
  426c1f:	push   edx
  426c20:	call   0x42746b
  426c25:	mov    ecx,DWORD PTR [ebp+0x20]
  426c28:	mov    eax,DWORD PTR [ecx+0x3c]
  426c2b:	add    eax,ecx
  426c2d:	movzx  ecx,WORD PTR [eax+0x14]
  426c31:	lea    ecx,[ecx+eax*1+0x18]
  426c35:	mov    DWORD PTR [ebp+0x18],ecx
  426c38:	mov    ecx,DWORD PTR [ebp-0x4]
  426c3b:	movzx  edx,WORD PTR [eax+0x6]
  426c3f:	xor    ecx,esi
  426c41:	add    ecx,edi
  426c43:	mov    DWORD PTR [ebp+0xc],eax
  426c46:	cmp    edx,ecx
  426c48:	je     0x426cf5
  426c4e:	mov    ecx,DWORD PTR [ebp-0x4]
  426c51:	xor    ecx,esi
  426c53:	add    ecx,edi
  426c55:	mov    DWORD PTR [ebp-0x8],ecx
  426c58:	mov    ecx,DWORD PTR [ebp-0x24]
  426c5b:	movzx  edx,WORD PTR [eax+0x6]
  426c5f:	xor    ecx,esi
  426c61:	sub    edx,ecx
  426c63:	sub    edx,edi
  426c65:	cmp    DWORD PTR [ebp-0x8],edx
  426c68:	ja     0x426cf5
  426c6e:	mov    edx,DWORD PTR [ebp+0x18]
  426c71:	add    edx,0x8
  426c74:	mov    DWORD PTR [ebp+0x18],edx
  426c77:	jmp    0x426c7c
  426c79:	mov    edx,DWORD PTR [ebp+0x18]
  426c7c:	mov    eax,DWORD PTR [eax+0x38]
  426c7f:	lea    ecx,[eax-0x1]
  426c82:	mov    DWORD PTR [ebp-0x38],eax
  426c85:	mov    eax,DWORD PTR [edx]
  426c87:	test   eax,ecx
  426c89:	je     0x426c92
  426c8b:	not    ecx
  426c8d:	and    eax,ecx
  426c8f:	add    eax,DWORD PTR [ebp-0x38]
  426c92:	mov    ecx,DWORD PTR [edx+0x4]
  426c95:	add    ecx,DWORD PTR [ebp+0x20]
  426c98:	push   ecx
  426c99:	call   0x427575
  426c9e:	mov    edx,DWORD PTR [ebp-0x4]
  426ca1:	mov    eax,DWORD PTR [ebp+0x18]
  426ca4:	mov    ecx,DWORD PTR [eax+0x8]
  426ca7:	xor    edx,esi
  426ca9:	add    edx,edi
  426cab:	cmp    ecx,edx
  426cad:	je     0x426cc6
  426caf:	push   ecx
  426cb0:	mov    ecx,DWORD PTR [ebp+0x8]
  426cb3:	add    ecx,DWORD PTR [eax+0xc]
  426cb6:	mov    eax,DWORD PTR [eax+0x4]
  426cb9:	add    eax,DWORD PTR [ebp+0x20]
  426cbc:	push   ecx
  426cbd:	push   eax
  426cbe:	call   0x42746b
  426cc3:	mov    eax,DWORD PTR [ebp+0x18]
  426cc6:	mov    ecx,DWORD PTR [ebp-0x24]
  426cc9:	mov    edx,DWORD PTR [ebp-0x8]
  426ccc:	add    eax,0x28
  426ccf:	xor    ecx,esi
  426cd1:	lea    ecx,[edx+ecx*1+0x3272ec]
  426cd8:	mov    edx,DWORD PTR [ebp+0xc]
  426cdb:	mov    DWORD PTR [ebp+0x18],eax
  426cde:	mov    eax,DWORD PTR [ebp-0x24]
  426ce1:	movzx  edx,WORD PTR [edx+0x6]
  426ce5:	xor    eax,esi
  426ce7:	sub    edx,eax
  426ce9:	mov    eax,DWORD PTR [ebp+0xc]
  426cec:	sub    edx,edi
  426cee:	mov    DWORD PTR [ebp-0x8],ecx
  426cf1:	cmp    ecx,edx
  426cf3:	jbe    0x426c79
  426cf5:	mov    edx,DWORD PTR [ebx+0x18c]
  426cfb:	mov    ecx,DWORD PTR [ebp+0x20]
  426cfe:	cmp    ecx,DWORD PTR [edx]
  426d00:	jne    0x426d29
  426d02:	mov    eax,DWORD PTR [ebx+0x1d8]
  426d08:	lea    edx,[ebp-0x18]
  426d0b:	push   edx
  426d0c:	mov    edx,DWORD PTR [ebp-0x10]
  426d0f:	xor    edx,esi
  426d11:	add    edx,edi
  426d13:	push   edx
  426d14:	mov    edx,DWORD PTR [ebp-0x20]
  426d17:	push   DWORD PTR [edx+0x54]
  426d1a:	push   ecx
  426d1b:	call   DWORD PTR [eax+0x1c]
  426d1e:	test   eax,eax
  426d20:	je     0x426fc9
  426d26:	mov    eax,DWORD PTR [ebp+0xc]
  426d29:	mov    ecx,DWORD PTR [ebx+0x1c8]
  426d2f:	mov    ecx,DWORD PTR [ecx]
  426d31:	xor    ecx,esi
  426d33:	add    ecx,edi
  426d35:	je     0x426ef4
  426d3b:	mov    eax,DWORD PTR [ebp-0x4]
  426d3e:	xor    eax,esi
  426d40:	add    eax,edi
  426d42:	and    DWORD PTR [ebp+0x8],0x0
  426d46:	mov    DWORD PTR [ebp-0x14],eax
  426d49:	mov    ecx,0xf89c8524
  426d4e:	mov    eax,0xf89c85dc
  426d53:	mov    DWORD PTR [ebp-0x58],0xf89c8526
  426d5a:	mov    DWORD PTR [ebp-0x54],0xf89c852c
  426d61:	mov    DWORD PTR [ebp-0x50],eax
  426d64:	mov    DWORD PTR [ebp-0x4c],ecx
  426d67:	mov    DWORD PTR [ebp-0x48],ecx
  426d6a:	mov    DWORD PTR [ebp-0x44],0xf89c85b0
  426d71:	mov    edx,DWORD PTR [ebp+0x8]
  426d74:	mov    ecx,0x8a4
  426d79:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  426d7e:	mov    edx,0x72ec
  426d83:	add    cx,dx
  426d86:	mov    edx,DWORD PTR [ebp+0x8]
  426d89:	inc    DWORD PTR [ebp+0x8]
  426d8c:	cmp    DWORD PTR [ebp+0x8],0x6
  426d90:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  426d98:	jb     0x426d71
  426d9a:	mov    ecx,0xf89c8522
  426d9f:	mov    DWORD PTR [ebp-0xb0],eax
  426da5:	mov    DWORD PTR [ebp-0x9c],eax
  426dab:	mov    DWORD PTR [ebp-0x74],eax
  426dae:	mov    DWORD PTR [ebp-0x70],eax
  426db1:	lea    eax,[ecx+0x1]
  426db4:	mov    edx,0xf89c85fe
  426db9:	mov    DWORD PTR [ebp-0x64],eax
  426dbc:	mov    DWORD PTR [ebp-0x60],eax
  426dbf:	mov    DWORD PTR [ebp-0xb4],0xf89c85c4
  426dc9:	mov    DWORD PTR [ebp-0xac],ecx
  426dcf:	mov    DWORD PTR [ebp-0xa8],edx
  426dd5:	mov    DWORD PTR [ebp-0xa4],0xf89c85d9
  426ddf:	mov    DWORD PTR [ebp-0xa0],0xf89c8526
  426de9:	mov    DWORD PTR [ebp-0x98],0xf89c85fd
  426df3:	mov    DWORD PTR [ebp-0x94],0xf89c8526
  426dfd:	mov    DWORD PTR [ebp-0x90],0xf89c852c
  426e07:	mov    DWORD PTR [ebp-0x8c],ecx
  426e0d:	mov    DWORD PTR [ebp-0x88],0xf89c8529
  426e17:	mov    DWORD PTR [ebp-0x84],edx
  426e1d:	mov    DWORD PTR [ebp-0x80],0xf89c8527
  426e24:	mov    DWORD PTR [ebp-0x7c],ecx
  426e27:	mov    DWORD PTR [ebp-0x78],0xf89c85f1
  426e2e:	mov    DWORD PTR [ebp-0x6c],ecx
  426e31:	mov    DWORD PTR [ebp-0x68],0xf89c85dd
  426e38:	mov    DWORD PTR [ebp-0x5c],0xf89c85b0
  426e3f:	xor    eax,eax
  426e41:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  426e48:	xor    cl,0xa4
  426e4b:	sub    cl,0x14
  426e4e:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  426e55:	inc    eax
  426e56:	cmp    eax,0x17
  426e59:	jb     0x426e41
  426e5b:	mov    eax,DWORD PTR [ebx+0x1d8]
  426e61:	lea    ecx,[ebp-0xc0]
  426e67:	push   ecx
  426e68:	call   DWORD PTR [eax+0x4]
  426e6b:	mov    ecx,DWORD PTR [ebx+0x1d8]
  426e71:	lea    edx,[ebp-0xd8]
  426e77:	push   edx
  426e78:	push   eax
  426e79:	call   DWORD PTR [ecx+0x8]
  426e7c:	mov    DWORD PTR [ebp-0x40],eax
  426e7f:	lea    eax,[ebp-0x14]
  426e82:	push   eax
  426e83:	mov    eax,DWORD PTR [ebx+0x18c]
  426e89:	push   DWORD PTR [eax]
  426e8b:	mov    eax,DWORD PTR [ebp-0x40]
  426e8e:	call   eax
  426e90:	mov    eax,DWORD PTR [ebp-0x4]
  426e93:	xor    eax,esi
  426e95:	add    eax,edi
  426e97:	mov    DWORD PTR [ebp-0x34],eax
  426e9a:	mov    ecx,DWORD PTR [ebp-0x4]
  426e9d:	mov    eax,DWORD PTR [ebp-0x14]
  426ea0:	xor    ecx,esi
  426ea2:	add    ecx,edi
  426ea4:	cmp    eax,ecx
  426ea6:	je     0x426ef1
  426ea8:	mov    DWORD PTR [ebp-0x3c],eax
  426eab:	jmp    0x426ebc
  426ead:	mov    eax,DWORD PTR [eax]
  426eaf:	mov    ecx,DWORD PTR [ebp-0x3c]
  426eb2:	mov    DWORD PTR [ebp-0x14],eax
  426eb5:	mov    eax,DWORD PTR [ebp-0x14]
  426eb8:	cmp    eax,ecx
  426eba:	je     0x426ec9
  426ebc:	mov    edx,DWORD PTR [eax+0x18]
  426ebf:	mov    ecx,DWORD PTR [ebx+0x18c]
  426ec5:	cmp    edx,DWORD PTR [ecx]
  426ec7:	jne    0x426ead
  426ec9:	mov    ecx,DWORD PTR [ebx+0x18c]
  426ecf:	mov    edx,DWORD PTR [eax+0x18]
  426ed2:	cmp    edx,DWORD PTR [ecx]
  426ed4:	jne    0x426ef1
  426ed6:	mov    ecx,DWORD PTR [ebx+0x190]
  426edc:	mov    edx,DWORD PTR [ebp-0x20]
  426edf:	mov    edx,DWORD PTR [edx+0x28]
  426ee2:	add    edx,DWORD PTR [ecx]
  426ee4:	mov    DWORD PTR [eax+0x1c],edx
  426ee7:	mov    eax,DWORD PTR [ebp-0x24]
  426eea:	xor    eax,esi
  426eec:	add    eax,edi
  426eee:	mov    DWORD PTR [ebp-0x34],eax
  426ef1:	mov    eax,DWORD PTR [ebp+0xc]
  426ef4:	push   ebx
  426ef5:	push   eax
  426ef6:	push   DWORD PTR [ebp+0x20]
  426ef9:	call   0x426675
  426efe:	test   eax,eax
  426f00:	je     0x426fc9
  426f06:	push   DWORD PTR [ebp+0xc]
  426f09:	mov    ecx,ebx
  426f0b:	push   DWORD PTR [ebp+0x20]
  426f0e:	call   0x4265ce
  426f13:	test   eax,eax
  426f15:	je     0x426fc9
  426f1b:	mov    eax,DWORD PTR [ebp+0xc]
  426f1e:	mov    edx,DWORD PTR [ebp+0x20]
  426f21:	mov    ecx,ebx
  426f23:	call   0x4264a7
  426f28:	test   eax,eax
  426f2a:	je     0x426fc9
  426f30:	push   ebx
  426f31:	push   DWORD PTR [ebp+0x20]
  426f34:	call   0x426958
  426f39:	test   eax,eax
  426f3b:	je     0x426fc9
  426f41:	mov    eax,DWORD PTR [ebx+0x18c]
  426f47:	mov    edx,DWORD PTR [ebp+0x20]
  426f4a:	cmp    edx,DWORD PTR [eax]
  426f4c:	jne    0x426f68
  426f4e:	mov    eax,DWORD PTR [ebx+0x1d8]
  426f54:	lea    ecx,[ebp-0x18]
  426f57:	push   ecx
  426f58:	push   DWORD PTR [ebp-0x18]
  426f5b:	mov    ecx,DWORD PTR [ebp-0x20]
  426f5e:	push   DWORD PTR [ecx+0x54]
  426f61:	push   edx
  426f62:	call   DWORD PTR [eax+0x1c]
  426f65:	mov    edx,DWORD PTR [ebp+0x20]
  426f68:	mov    eax,DWORD PTR [ebx+0x1c8]
  426f6e:	mov    eax,DWORD PTR [eax]
  426f70:	xor    eax,esi
  426f72:	add    eax,edi
  426f74:	je     0x426fad
  426f76:	mov    ecx,DWORD PTR [ebp+0xc]
  426f79:	mov    eax,DWORD PTR [ecx+0x28]
  426f7c:	mov    DWORD PTR [ebp+0x8],0xf89ca5b0
  426f83:	mov    esi,DWORD PTR [ebp+0x8]
  426f86:	push   DWORD PTR [ebp+0x14]
  426f89:	xor    esi,0x8a4
  426f8f:	push   DWORD PTR [ebp+0x10]
  426f92:	add    esi,0x72ec
  426f98:	or     WORD PTR [ecx+0x16],si
  426f9c:	add    eax,edx
  426f9e:	push   edx
  426f9f:	call   eax
  426fa1:	mov    DWORD PTR [ebx+0x1d0],0xf89c85b1
  426fab:	jmp    0x426fb7
  426fad:	mov    eax,DWORD PTR [ebp+0xc]
  426fb0:	mov    eax,DWORD PTR [eax+0x28]
  426fb3:	add    eax,edx
  426fb5:	call   eax
  426fb7:	mov    DWORD PTR [ebp-0x8],eax
  426fba:	mov    eax,DWORD PTR [ebp-0x8]
  426fbd:	mov    ecx,DWORD PTR [ebp+0x1c]
  426fc0:	mov    DWORD PTR [ecx],eax
  426fc2:	mov    DWORD PTR [ebp-0x30],0x1
  426fc9:	cmp    DWORD PTR [ebp-0x30],0x0
  426fcd:	jne    0x426fd3
  426fcf:	and    DWORD PTR [ebp+0x20],0x0
  426fd3:	mov    eax,DWORD PTR [ebp+0x20]
  426fd6:	jmp    0x426fda
  426fd8:	xor    eax,eax
  426fda:	pop    edi
  426fdb:	pop    esi
  426fdc:	pop    ebx
  426fdd:	leave  
  426fde:	ret    0x1c
  426fe1:	push   ebp
  426fe2:	mov    ebp,esp
  426fe4:	movzx  edx,WORD PTR [ecx+0x6]
  426fe8:	movzx  eax,WORD PTR [ecx+0x14]
  426fec:	push   ebx
  426fed:	push   edi
  426fee:	xor    edi,edi
  426ff0:	lea    eax,[eax+ecx*1+0x18]
  426ff4:	test   edx,edx
  426ff6:	je     0x427017
  426ff8:	mov    ecx,DWORD PTR [eax+0xc]
  426ffb:	lea    ebx,[ecx+esi*1]
  426ffe:	cmp    DWORD PTR [ebp+0x8],ebx
  427001:	jb     0x42700f
  427003:	mov    ebx,DWORD PTR [eax+0x8]
  427006:	add    ebx,ecx
  427008:	add    ebx,esi
  42700a:	cmp    DWORD PTR [ebp+0x8],ebx
  42700d:	jb     0x427019
  42700f:	add    eax,0x28
  427012:	inc    edi
  427013:	cmp    edi,edx
  427015:	jb     0x426ff8
  427017:	xor    eax,eax
  427019:	pop    edi
  42701a:	pop    ebx
  42701b:	pop    ebp
  42701c:	ret    0x4
  42701f:	push   ebp
  427020:	mov    ebp,esp
  427022:	sub    esp,0x34
  427025:	mov    DWORD PTR [ebp-0xc],0xf89c85b0
  42702c:	mov    DWORD PTR [ebp-0x18],0xf89c85b1
  427033:	mov    DWORD PTR [ebp-0x1c],0xf89c85b2
  42703a:	mov    DWORD PTR [ebp-0x8],0xf89c85d1
  427041:	mov    DWORD PTR [ebp-0x20],0xf89c85f1
  427048:	mov    DWORD PTR [ebp-0x2c],0xf89c852a
  42704f:	mov    DWORD PTR [ebp-0x2c],0xf89c85ca
  427056:	mov    DWORD PTR [ebp-0x10],eax
  427059:	mov    eax,DWORD PTR [ebp+0x8]
  42705c:	mov    DWORD PTR [ebp-0x14],eax
  42705f:	mov    eax,DWORD PTR [ebp-0xc]
  427062:	push   ebx
  427063:	mov    ecx,0x75108a4
  427068:	xor    eax,ecx
  42706a:	push   esi
  42706b:	mov    esi,DWORD PTR [ebp-0x10]
  42706e:	mov    edx,0x3272ec
  427073:	add    eax,edx
  427075:	push   edi
  427076:	cmp    esi,eax
  427078:	je     0x427257
  42707e:	mov    eax,DWORD PTR [ebp-0xc]
  427081:	mov    esi,DWORD PTR [ebp-0x14]
  427084:	xor    eax,ecx
  427086:	add    eax,edx
  427088:	cmp    esi,eax
  42708a:	je     0x427257
  427090:	mov    eax,DWORD PTR [ebp-0xc]
  427093:	xor    eax,ecx
  427095:	add    eax,edx
  427097:	mov    DWORD PTR [ebp-0x24],eax
  42709a:	mov    eax,DWORD PTR [ebp-0xc]
  42709d:	xor    eax,ecx
  42709f:	add    eax,edx
  4270a1:	mov    DWORD PTR [ebp-0x28],eax
  4270a4:	mov    edi,DWORD PTR [ebp-0x20]
  4270a7:	mov    ebx,DWORD PTR [ebp-0x8]
  4270aa:	mov    esi,0x8a4
  4270af:	xor    edi,esi
  4270b1:	mov    eax,0x72ec
  4270b6:	xor    ebx,esi
  4270b8:	add    edi,eax
  4270ba:	add    ebx,eax
  4270bc:	sub    ebx,edi
  4270be:	mov    WORD PTR [ebp-0x8],bx
  4270c2:	jmp    0x427187
  4270c7:	mov    edi,DWORD PTR [ebp-0xc]
  4270ca:	mov    bx,WORD PTR [ebp-0x4]
  4270ce:	xor    edi,esi
  4270d0:	add    edi,eax
  4270d2:	cmp    bx,di
  4270d5:	je     0x4271c9
  4270db:	mov    edi,DWORD PTR [ebp-0xc]
  4270de:	mov    ebx,DWORD PTR [ebp+0xc]
  4270e1:	xor    edi,ecx
  4270e3:	add    edi,edx
  4270e5:	cmp    ebx,edi
  4270e7:	mov    di,WORD PTR [ebp-0x4]
  4270eb:	mov    bx,WORD PTR [ebp+0x8]
  4270ef:	je     0x42715a
  4270f1:	cmp    bx,di
  4270f4:	je     0x427163
  4270f6:	mov    edi,DWORD PTR [ebp-0x20]
  4270f9:	mov    bx,WORD PTR [ebp+0x8]
  4270fd:	xor    edi,esi
  4270ff:	add    edi,eax
  427101:	cmp    bx,di
  427104:	jb     0x427124
  427106:	mov    edi,DWORD PTR [ebp-0x2c]
  427109:	mov    bx,WORD PTR [ebp+0x8]
  42710d:	xor    edi,esi
  42710f:	add    edi,eax
  427111:	cmp    bx,di
  427114:	ja     0x427124
  427116:	movzx  edi,WORD PTR [ebp+0x8]
  42711a:	movzx  ebx,WORD PTR [ebp-0x8]
  42711e:	add    edi,ebx
  427120:	mov    WORD PTR [ebp+0x8],di
  427124:	mov    edi,DWORD PTR [ebp-0x20]
  427127:	mov    bx,WORD PTR [ebp-0x4]
  42712b:	xor    edi,esi
  42712d:	add    edi,eax
  42712f:	cmp    bx,di
  427132:	jb     0x427152
  427134:	mov    edi,DWORD PTR [ebp-0x2c]
  427137:	mov    bx,WORD PTR [ebp-0x4]
  42713b:	xor    edi,esi
  42713d:	add    edi,eax
  42713f:	cmp    bx,di
  427142:	ja     0x427152
  427144:	movzx  edi,WORD PTR [ebp-0x4]
  427148:	movzx  ebx,WORD PTR [ebp-0x8]
  42714c:	add    edi,ebx
  42714e:	mov    WORD PTR [ebp-0x4],di
  427152:	mov    di,WORD PTR [ebp-0x4]
  427156:	mov    bx,WORD PTR [ebp+0x8]
  42715a:	cmp    bx,di
  42715d:	jne    0x427257
  427163:	mov    edi,DWORD PTR [ebp-0x1c]
  427166:	mov    ebx,DWORD PTR [ebp-0x10]
  427169:	xor    edi,ecx
  42716b:	lea    edi,[edi+ebx*1+0x3272ec]
  427172:	mov    DWORD PTR [ebp-0x10],edi
  427175:	mov    edi,DWORD PTR [ebp-0x1c]
  427178:	mov    ebx,DWORD PTR [ebp-0x14]
  42717b:	xor    edi,ecx
  42717d:	lea    edi,[edi+ebx*1+0x3272ec]
  427184:	mov    DWORD PTR [ebp-0x14],edi
  427187:	mov    edi,DWORD PTR [ebp-0x24]
  42718a:	mov    ebx,DWORD PTR [ebp-0x10]
  42718d:	mov    di,WORD PTR [ebx+edi*2]
  427191:	mov    WORD PTR [ebp+0x8],di
  427195:	mov    edi,DWORD PTR [ebp-0x28]
  427198:	mov    ebx,DWORD PTR [ebp-0x14]
  42719b:	mov    di,WORD PTR [ebx+edi*2]
  42719f:	mov    WORD PTR [ebp-0x4],di
  4271a3:	mov    edi,DWORD PTR [ebp-0xc]
  4271a6:	mov    bx,WORD PTR [ebp+0x8]
  4271aa:	xor    edi,esi
  4271ac:	add    edi,eax
  4271ae:	cmp    bx,di
  4271b1:	jne    0x4270c7
  4271b7:	mov    eax,DWORD PTR [ebp-0x18]
  4271ba:	mov    esi,DWORD PTR [ebp-0xc]
  4271bd:	xor    eax,ecx
  4271bf:	add    eax,edx
  4271c1:	imul   eax,esi
  4271c4:	mov    DWORD PTR [ebp-0xc],eax
  4271c7:	jmp    0x4271db
  4271c9:	mov    eax,DWORD PTR [ebp-0xc]
  4271cc:	mov    esi,DWORD PTR [ebp-0x18]
  4271cf:	xor    eax,ecx
  4271d1:	lea    eax,[eax+esi*1+0x3272ec]
  4271d8:	mov    DWORD PTR [ebp-0x18],eax
  4271db:	mov    eax,DWORD PTR [ebp-0x24]
  4271de:	sub    eax,edx
  4271e0:	xor    eax,ecx
  4271e2:	mov    DWORD PTR [ebp-0x30],eax
  4271e5:	mov    eax,DWORD PTR [ebp-0x28]
  4271e8:	sub    eax,edx
  4271ea:	xor    eax,ecx
  4271ec:	mov    DWORD PTR [ebp-0x34],eax
  4271ef:	mov    eax,DWORD PTR [ebp-0x34]
  4271f2:	mov    esi,DWORD PTR [ebp-0x1c]
  4271f5:	xor    esi,ecx
  4271f7:	add    esi,edx
  4271f9:	xor    eax,ecx
  4271fb:	add    eax,0x3272ec
  427200:	imul   esi,eax
  427203:	mov    eax,DWORD PTR [ebp-0x14]
  427206:	movzx  eax,WORD PTR [esi+eax*1]
  42720a:	mov    esi,DWORD PTR [ebp-0x30]
  42720d:	mov    edi,DWORD PTR [ebp-0x1c]
  427210:	xor    esi,ecx
  427212:	add    esi,edx
  427214:	xor    edi,ecx
  427216:	add    edi,edx
  427218:	imul   edi,esi
  42721b:	mov    esi,DWORD PTR [ebp-0x10]
  42721e:	movzx  esi,WORD PTR [edi+esi*1]
  427222:	sub    eax,edx
  427224:	sub    esi,edx
  427226:	xor    eax,ecx
  427228:	xor    esi,ecx
  42722a:	cmp    esi,eax
  42722c:	jne    0x427257
  42722e:	mov    eax,DWORD PTR [ebp-0x30]
  427231:	mov    esi,DWORD PTR [ebp-0x1c]
  427234:	xor    eax,ecx
  427236:	add    eax,0x3272ec
  42723b:	xor    esi,ecx
  42723d:	add    esi,edx
  42723f:	imul   esi,eax
  427242:	mov    eax,DWORD PTR [ebp-0x10]
  427245:	movzx  eax,WORD PTR [esi+eax*1]
  427249:	mov    esi,DWORD PTR [ebp-0xc]
  42724c:	sub    eax,edx
  42724e:	xor    eax,ecx
  427250:	cmp    eax,esi
  427252:	mov    eax,DWORD PTR [ebp-0xc]
  427255:	je     0x42725a
  427257:	mov    eax,DWORD PTR [ebp-0x18]
  42725a:	pop    edi
  42725b:	xor    eax,ecx
  42725d:	pop    esi
  42725e:	add    eax,edx
  427260:	pop    ebx
  427261:	leave  
  427262:	ret    0x8
  427265:	push   ebp
  427266:	mov    ebp,esp
  427268:	push   ecx
  427269:	mov    cx,WORD PTR [eax]
  42726c:	push   esi
  42726d:	mov    esi,0x3b56
  427272:	sub    cx,si
  427275:	mov    esi,0x8a94
  42727a:	xor    cx,si
  42727d:	mov    esi,0x4e3e
  427282:	mov    DWORD PTR [ebp-0x4],0xf89c85b7
  427289:	mov    edx,0xf89c85b0
  42728e:	cmp    cx,si
  427291:	je     0x4272f0
  427293:	push   ebx
  427294:	push   edi
  427295:	movzx  ecx,cx
  427298:	mov    edi,0xffcd8d14
  42729d:	mov    esi,0x75108a4
  4272a2:	mov    ebx,0x4f92
  4272a7:	cmp    cx,bx
  4272aa:	jne    0x4272af
  4272ac:	mov    DWORD PTR [ebp-0x4],edx
  4272af:	lea    edx,[edi+0x1]
  4272b2:	xor    edx,esi
  4272b4:	mov    edi,edx
  4272b6:	xor    edi,esi
  4272b8:	mov    cx,WORD PTR [eax+edi*2+0x64e5d8]
  4272c0:	mov    ebx,0x3b56
  4272c5:	sub    cx,bx
  4272c8:	mov    ebx,0x8a94
  4272cd:	xor    cx,bx
  4272d0:	mov    ebx,0x4e3e
  4272d5:	cmp    cx,bx
  4272d8:	jne    0x4272a2
  4272da:	mov    ecx,DWORD PTR [ebp-0x4]
  4272dd:	pop    edi
  4272de:	pop    ebx
  4272df:	cmp    ecx,0xf89c85b7
  4272e5:	je     0x4272f0
  4272e7:	xor    ecx,esi
  4272e9:	lea    eax,[eax+ecx*2+0x64e5da]
  4272f0:	pop    esi
  4272f1:	leave  
  4272f2:	ret    
  4272f3:	push   ebp
  4272f4:	mov    ebp,esp
  4272f6:	push   ecx
  4272f7:	push   esi
  4272f8:	push   edi
  4272f9:	mov    DWORD PTR [ebp-0x4],0xf89c85b7
  427300:	mov    esi,0xf89c85b0
  427305:	call   0x427265
  42730a:	mov    edi,eax
  42730c:	mov    al,BYTE PTR [edi]
  42730e:	add    al,0x3
  427310:	xor    al,0x79
  427312:	cmp    al,0x7a
  427314:	je     0x427377
  427316:	mov    eax,edi
  427318:	mov    edx,0xffcd8d14
  42731d:	mov    ecx,0x75108a4
  427322:	push   ebx
  427323:	mov    ax,WORD PTR [eax]
  427326:	mov    ebx,0x3b56
  42732b:	sub    ax,bx
  42732e:	mov    ebx,0x8a94
  427333:	xor    ax,bx
  427336:	mov    ebx,0x4e4c
  42733b:	cmp    ax,bx
  42733e:	jne    0x427343
  427340:	mov    DWORD PTR [ebp-0x4],esi
  427343:	lea    esi,[edx+0x1]
  427346:	xor    esi,ecx
  427348:	mov    edx,esi
  42734a:	xor    edx,ecx
  42734c:	lea    eax,[edi+edx*2+0x64e5d8]
  427353:	mov    bl,BYTE PTR [eax]
  427355:	add    bl,0x3
  427358:	xor    bl,0x79
  42735b:	cmp    bl,0x7a
  42735e:	jne    0x427323
  427360:	mov    eax,DWORD PTR [ebp-0x4]
  427363:	pop    ebx
  427364:	cmp    eax,0xf89c85b7
  427369:	je     0x427377
  42736b:	xor    eax,ecx
  42736d:	xor    ecx,ecx
  42736f:	mov    WORD PTR [edi+eax*2+0x64e5d8],cx
  427377:	mov    eax,edi
  427379:	pop    edi
  42737a:	pop    esi
  42737b:	leave  
  42737c:	ret    
  42737d:	push   ebp
  42737e:	mov    ebp,esp
  427380:	push   ecx
  427381:	push   esi
  427382:	mov    DWORD PTR [ebp-0x4],0xf89c85b7
  427389:	mov    esi,0xf89c85b0
  42738e:	call   0x427265
  427393:	mov    cx,WORD PTR [eax]
  427396:	mov    edx,0x3b56
  42739b:	sub    cx,dx
  42739e:	mov    edx,0x8a94
  4273a3:	xor    cx,dx
  4273a6:	mov    edx,0x4e3e
  4273ab:	cmp    cx,dx
  4273ae:	je     0x427407
  4273b0:	push   ebx
  4273b1:	push   edi
  4273b2:	movzx  ecx,cx
  4273b5:	mov    edx,0xffcd8d14
  4273ba:	mov    edi,0x75108a4
  4273bf:	mov    ebx,0x4e4c
  4273c4:	cmp    cx,bx
  4273c7:	jne    0x4273cc
  4273c9:	mov    DWORD PTR [ebp-0x4],esi
  4273cc:	lea    esi,[edx+0x1]
  4273cf:	xor    esi,edi
  4273d1:	mov    edx,esi
  4273d3:	xor    edx,edi
  4273d5:	mov    cx,WORD PTR [eax+edx*2+0x64e5d8]
  4273dd:	mov    ebx,0x3b56
  4273e2:	sub    cx,bx
  4273e5:	mov    ebx,0x8a94
  4273ea:	xor    cx,bx
  4273ed:	mov    ebx,0x4e3e
  4273f2:	cmp    cx,bx
  4273f5:	jne    0x4273bf
  4273f7:	cmp    DWORD PTR [ebp-0x4],0xf89c85b7
  4273fe:	pop    edi
  4273ff:	pop    ebx
  427400:	je     0x427407
  427402:	xor    eax,eax
  427404:	inc    eax
  427405:	jmp    0x427409
  427407:	xor    eax,eax
  427409:	pop    esi
  42740a:	leave  
  42740b:	ret    
  42740c:	push   ebp
  42740d:	mov    ebp,esp
  42740f:	push   ecx
  427410:	mov    eax,DWORD PTR [ebp+0x8]
  427413:	movzx  ecx,WORD PTR [eax]
  427416:	push   esi
  427417:	lea    eax,[ecx-0x3b56]
  42741d:	mov    esi,0x8a94
  427422:	push   edi
  427423:	xor    eax,esi
  427425:	mov    edi,0x4e3e
  42742a:	mov    DWORD PTR [ebp-0x4],edx
  42742d:	cmp    ax,di
  427430:	je     0x42745d
  427432:	mov    eax,DWORD PTR [ebp+0x8]
  427435:	sub    eax,edx
  427437:	mov    DWORD PTR [ebp+0x8],eax
  42743a:	jmp    0x42743f
  42743c:	mov    eax,DWORD PTR [ebp+0x8]
  42743f:	mov    WORD PTR [edx],cx
  427442:	add    edx,0x2
  427445:	movzx  edi,WORD PTR [eax+edx*1]
  427449:	mov    ecx,edi
  42744b:	add    edi,0xffffc4aa
  427451:	xor    edi,esi
  427453:	mov    eax,0x4e3e
  427458:	cmp    di,ax
  42745b:	jne    0x42743c
  42745d:	xor    eax,eax
  42745f:	pop    edi
  427460:	mov    WORD PTR [edx],ax
  427463:	mov    eax,DWORD PTR [ebp-0x4]
  427466:	pop    esi
  427467:	leave  
  427468:	ret    0x4
  42746b:	push   ebp
  42746c:	mov    ebp,esp
  42746e:	sub    esp,0x18
  427471:	mov    DWORD PTR [ebp-0x8],0xf89c85b0
  427478:	mov    DWORD PTR [ebp-0x18],0xf89c85b1
  42747f:	mov    ecx,DWORD PTR [ebp-0x8]
  427482:	push   esi
  427483:	mov    eax,0x75108a4
  427488:	xor    ecx,eax
  42748a:	mov    esi,0x3272ec
  42748f:	add    ecx,esi
  427491:	mov    DWORD PTR [ebp-0x4],ecx
  427494:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  42749b:	mov    DWORD PTR [ebp-0x10],0xf89c85bc
  4274a2:	push   edi
  4274a3:	mov    DWORD PTR [ebp-0x14],0xf89c85b2
  4274aa:	jmp    0x42754b
  4274af:	mov    ecx,DWORD PTR [ebp-0x4]
  4274b2:	mov    edx,DWORD PTR [ebp+0x10]
  4274b5:	sub    edx,ecx
  4274b7:	mov    ecx,DWORD PTR [ebp-0xc]
  4274ba:	xor    ecx,eax
  4274bc:	add    ecx,esi
  4274be:	cmp    edx,ecx
  4274c0:	jbe    0x4274dd
  4274c2:	mov    edx,DWORD PTR [ebp-0x4]
  4274c5:	add    edx,DWORD PTR [ebp+0x8]
  4274c8:	mov    ecx,DWORD PTR [ebp-0x4]
  4274cb:	add    ecx,DWORD PTR [ebp+0xc]
  4274ce:	mov    edi,DWORD PTR [ecx]
  4274d0:	mov    DWORD PTR [edx],edi
  4274d2:	mov    ecx,DWORD PTR [ecx+0x4]
  4274d5:	mov    DWORD PTR [edx+0x4],ecx
  4274d8:	mov    ecx,DWORD PTR [ebp-0xc]
  4274db:	jmp    0x42752a
  4274dd:	mov    ecx,DWORD PTR [ebp-0x4]
  4274e0:	mov    edx,DWORD PTR [ebp+0x10]
  4274e3:	sub    edx,ecx
  4274e5:	mov    ecx,DWORD PTR [ebp-0x10]
  4274e8:	xor    ecx,eax
  4274ea:	add    ecx,esi
  4274ec:	cmp    edx,ecx
  4274ee:	mov    ecx,DWORD PTR [ebp-0x4]
  4274f1:	jbe    0x427505
  4274f3:	add    ecx,DWORD PTR [ebp+0x8]
  4274f6:	mov    edx,DWORD PTR [ebp-0x4]
  4274f9:	add    edx,DWORD PTR [ebp+0xc]
  4274fc:	mov    edx,DWORD PTR [edx]
  4274fe:	mov    DWORD PTR [ecx],edx
  427500:	mov    ecx,DWORD PTR [ebp-0x10]
  427503:	jmp    0x42752a
  427505:	mov    edx,DWORD PTR [ebp+0x10]
  427508:	sub    edx,ecx
  42750a:	mov    ecx,DWORD PTR [ebp-0x14]
  42750d:	xor    ecx,eax
  42750f:	add    ecx,esi
  427511:	cmp    edx,ecx
  427513:	mov    ecx,DWORD PTR [ebp-0x4]
  427516:	jbe    0x42753b
  427518:	add    ecx,DWORD PTR [ebp+0x8]
  42751b:	mov    edx,DWORD PTR [ebp-0x4]
  42751e:	add    edx,DWORD PTR [ebp+0xc]
  427521:	mov    dx,WORD PTR [edx]
  427524:	mov    WORD PTR [ecx],dx
  427527:	mov    ecx,DWORD PTR [ebp-0x14]
  42752a:	mov    edx,DWORD PTR [ebp-0x4]
  42752d:	xor    ecx,eax
  42752f:	lea    ecx,[ecx+edx*1+0x3272ec]
  427536:	mov    DWORD PTR [ebp-0x4],ecx
  427539:	jmp    0x42754b
  42753b:	add    ecx,DWORD PTR [ebp+0x8]
  42753e:	mov    edx,DWORD PTR [ebp-0x4]
  427541:	add    edx,DWORD PTR [ebp+0xc]
  427544:	mov    dl,BYTE PTR [edx]
  427546:	mov    BYTE PTR [ecx],dl
  427548:	inc    DWORD PTR [ebp-0x4]
  42754b:	mov    ecx,DWORD PTR [ebp-0x18]
  42754e:	mov    edx,DWORD PTR [ebp+0x10]
  427551:	xor    ecx,eax
  427553:	add    ecx,esi
  427555:	imul   ecx,edx
  427558:	mov    edx,DWORD PTR [ebp-0x8]
  42755b:	mov    edi,DWORD PTR [ebp-0x4]
  42755e:	xor    edx,eax
  427560:	lea    edx,[edx+edi*1+0x3272ec]
  427567:	cmp    edx,ecx
  427569:	jb     0x4274af
  42756f:	pop    edi
  427570:	pop    esi
  427571:	leave  
  427572:	ret    0xc
  427575:	push   ebp
  427576:	mov    ebp,esp
  427578:	sub    esp,0xc
  42757b:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  427582:	push   esi
  427583:	mov    esi,eax
  427585:	mov    DWORD PTR [ebp-0x8],0xf89c85b1
  42758c:	mov    edx,DWORD PTR [ebp-0x4]
  42758f:	mov    eax,0x75108a4
  427594:	xor    edx,eax
  427596:	mov    ecx,0x3272ec
  42759b:	add    edx,ecx
  42759d:	cmp    esi,edx
  42759f:	je     0x4275e1
  4275a1:	push   ebx
  4275a2:	push   edi
  4275a3:	mov    edx,DWORD PTR [ebp-0x8]
  4275a6:	mov    ebx,DWORD PTR [ebp+0x8]
  4275a9:	xor    edx,eax
  4275ab:	mov    edi,0xffcd8d14
  4275b0:	sub    edi,edx
  4275b2:	add    esi,edi
  4275b4:	lea    edx,[esi-0x3272ec]
  4275ba:	xor    edx,eax
  4275bc:	mov    DWORD PTR [ebp-0xc],edx
  4275bf:	mov    edx,DWORD PTR [ebp-0x4]
  4275c2:	mov    edi,DWORD PTR [ebp-0xc]
  4275c5:	xor    dl,0xa4
  4275c8:	sub    dl,0x14
  4275cb:	xor    edi,eax
  4275cd:	mov    BYTE PTR [edi+ebx*1+0x3272ec],dl
  4275d4:	mov    edx,DWORD PTR [ebp-0x4]
  4275d7:	xor    edx,eax
  4275d9:	add    edx,ecx
  4275db:	cmp    esi,edx
  4275dd:	jne    0x4275a3
  4275df:	pop    edi
  4275e0:	pop    ebx
  4275e1:	pop    esi
  4275e2:	leave  
  4275e3:	ret    0x4
  4275e6:	push   ebp
  4275e7:	mov    ebp,esp
  4275e9:	sub    esp,0x21c
  4275ef:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  4275f6:	mov    DWORD PTR [ebp-0x14],0xf89c85b1
  4275fd:	mov    eax,DWORD PTR [ebp+0x10]
  427600:	mov    eax,DWORD PTR [ebp-0x4]
  427603:	mov    ecx,DWORD PTR [ebp+0x8]
  427606:	push   esi
  427607:	push   edi
  427608:	mov    edi,0x75108a4
  42760d:	xor    eax,edi
  42760f:	mov    esi,0x3272ec
  427614:	add    eax,esi
  427616:	cmp    eax,ecx
  427618:	mov    eax,DWORD PTR [ebp-0x4]
  42761b:	jne    0x427626
  42761d:	xor    eax,edi
  42761f:	add    eax,esi
  427621:	jmp    0x4276d2
  427626:	mov    ecx,DWORD PTR [ebp+0xc]
  427629:	xor    eax,edi
  42762b:	add    eax,esi
  42762d:	cmp    eax,ecx
  42762f:	jne    0x427636
  427631:	mov    eax,DWORD PTR [ebp-0x4]
  427634:	jmp    0x42761d
  427636:	lea    eax,[ebp-0x21c]
  42763c:	mov    DWORD PTR [ebp-0x8],eax
  42763f:	mov    eax,DWORD PTR [ebp+0xc]
  427642:	mov    DWORD PTR [ebp-0x10],eax
  427645:	mov    eax,DWORD PTR [ebp-0x4]
  427648:	xor    eax,edi
  42764a:	add    eax,esi
  42764c:	mov    DWORD PTR [ebp+0x10],eax
  42764f:	mov    eax,DWORD PTR [ebp+0xc]
  427652:	push   ebx
  427653:	call   0x42737d
  427658:	mov    ebx,eax
  42765a:	mov    eax,DWORD PTR [ebp+0x8]
  42765d:	mov    eax,DWORD PTR [eax+0x14]
  427660:	jmp    0x4276ba
  427662:	mov    eax,DWORD PTR [ebp+0xc]
  427665:	sub    eax,0x8
  427668:	mov    DWORD PTR [ebp-0xc],eax
  42766b:	mov    eax,DWORD PTR [ebp-0xc]
  42766e:	mov    eax,DWORD PTR [eax+0x28]
  427671:	call   0x427265
  427676:	mov    DWORD PTR [ebp+0x10],eax
  427679:	push   DWORD PTR [ebp+0x10]
  42767c:	mov    edx,DWORD PTR [ebp-0x8]
  42767f:	call   0x42740c
  427684:	mov    eax,DWORD PTR [ebp-0x4]
  427687:	xor    eax,edi
  427689:	add    eax,esi
  42768b:	cmp    eax,ebx
  42768d:	jne    0x427697
  42768f:	mov    eax,DWORD PTR [ebp-0x8]
  427692:	call   0x4272f3
  427697:	mov    eax,DWORD PTR [ebp-0x14]
  42769a:	xor    eax,edi
  42769c:	add    eax,esi
  42769e:	push   eax
  42769f:	push   DWORD PTR [ebp-0x10]
  4276a2:	mov    eax,DWORD PTR [ebp-0x8]
  4276a5:	call   0x42701f
  4276aa:	mov    ecx,DWORD PTR [ebp-0x4]
  4276ad:	xor    ecx,edi
  4276af:	add    ecx,esi
  4276b1:	cmp    eax,ecx
  4276b3:	je     0x4276d8
  4276b5:	mov    eax,DWORD PTR [ebp+0xc]
  4276b8:	mov    eax,DWORD PTR [eax]
  4276ba:	mov    DWORD PTR [ebp+0xc],eax
  4276bd:	mov    eax,DWORD PTR [ebp+0x8]
  4276c0:	mov    ecx,DWORD PTR [ebp+0xc]
  4276c3:	add    eax,0x14
  4276c6:	cmp    ecx,eax
  4276c8:	jne    0x427662
  4276ca:	mov    eax,DWORD PTR [ebp-0x4]
  4276cd:	xor    eax,edi
  4276cf:	add    eax,esi
  4276d1:	pop    ebx
  4276d2:	pop    edi
  4276d3:	pop    esi
  4276d4:	leave  
  4276d5:	ret    0xc
  4276d8:	mov    eax,DWORD PTR [ebp-0xc]
  4276db:	mov    eax,DWORD PTR [eax+0x18]
  4276de:	jmp    0x4276d1
  4276e0:	push   ebp
  4276e1:	mov    ebp,esp
  4276e3:	mov    eax,DWORD PTR [ebp+0xc]
  4276e6:	sub    esp,0x10
  4276e9:	cmp    DWORD PTR [ebp+0x8],0x0
  4276ed:	push   ebx
  4276ee:	push   esi
  4276ef:	push   edi
  4276f0:	je     0x4277a5
  4276f6:	test   eax,eax
  4276f8:	je     0x4277a5
  4276fe:	movzx  eax,WORD PTR [eax+0x20]
  427702:	mov    ecx,eax
  427704:	mov    DWORD PTR [ebp-0x10],eax
  427707:	xor    edx,edx
  427709:	and    DWORD PTR [ebp-0x8],edx
  42770c:	mov    eax,0x8a94
  427711:	xor    ecx,eax
  427713:	add    ecx,0x3b56
  427719:	mov    DWORD PTR [ebp-0xc],ecx
  42771c:	and    DWORD PTR [ebp-0x4],0x0
  427720:	xor    ecx,ecx
  427722:	push   0x7c
  427724:	pop    edi
  427725:	cmp    cx,WORD PTR [ebp-0xc]
  427729:	jae    0x42778f
  42772b:	lea    esi,[edx-0x3b56]
  427731:	xor    esi,eax
  427733:	movzx  ecx,WORD PTR [ebp-0x4]
  427737:	mov    ebx,DWORD PTR [ebp+0xc]
  42773a:	lea    ecx,[ebx+ecx*4]
  42773d:	cmp    WORD PTR [ecx+0x2],si
  427741:	jne    0x42777a
  427743:	movzx  ecx,WORD PTR [ecx]
  427746:	mov    edi,0x4e3e
  42774b:	cmp    cx,di
  42774e:	jne    0x42775c
  427750:	mov    ebx,DWORD PTR [ebp+0x8]
  427753:	movzx  edi,dx
  427756:	cmp    BYTE PTR [edi+ebx*1],0x0
  42775a:	je     0x427789
  42775c:	mov    ebx,DWORD PTR [ebp+0x8]
  42775f:	movzx  edi,dx
  427762:	movsx  di,BYTE PTR [edi+ebx*1]
  427767:	mov    ebx,0x3b56
  42776c:	sub    di,bx
  42776f:	xor    di,ax
  427772:	cmp    cx,di
  427775:	je     0x427789
  427777:	push   0x7a
  427779:	pop    edi
  42777a:	inc    DWORD PTR [ebp-0x4]
  42777d:	mov    cx,WORD PTR [ebp-0xc]
  427781:	cmp    WORD PTR [ebp-0x4],cx
  427785:	jb     0x427733
  427787:	jmp    0x42778f
  427789:	inc    DWORD PTR [ebp-0x8]
  42778c:	push   0x7d
  42778e:	pop    edi
  42778f:	mov    esi,DWORD PTR [ebp+0x8]
  427792:	movzx  ecx,dx
  427795:	cmp    BYTE PTR [ecx+esi*1],0x0
  427799:	je     0x4277ae
  42779b:	inc    edx
  42779c:	cmp    edi,0x7a
  42779f:	jne    0x42771c
  4277a5:	xor    eax,eax
  4277a7:	pop    edi
  4277a8:	pop    esi
  4277a9:	pop    ebx
  4277aa:	leave  
  4277ab:	ret    0x8
  4277ae:	mov    ecx,DWORD PTR [ebp-0x8]
  4277b1:	add    ecx,0xffffc4aa
  4277b7:	xor    cx,ax
  4277ba:	xor    eax,eax
  4277bc:	cmp    cx,WORD PTR [ebp-0x10]
  4277c0:	sete   al
  4277c3:	jmp    0x4277a7
  4277c5:	push   ebp
  4277c6:	mov    ebp,esp
  4277c8:	sub    esp,0x50
  4277cb:	push   edi
  4277cc:	mov    edi,eax
  4277ce:	mov    eax,DWORD PTR [edi+0x1a8]
  4277d4:	cmp    DWORD PTR [eax],0x0
  4277d7:	jne    0x4277e0
  4277d9:	xor    eax,eax
  4277db:	jmp    0x427911
  4277e0:	push   DWORD PTR [ebp+0x8]
  4277e3:	push   0x2c
  4277e5:	pop    eax
  4277e6:	call   0x427575
  4277eb:	mov    edx,DWORD PTR [edi+0x1ac]
  4277f1:	lea    eax,[edi+0x22]
  4277f4:	mov    DWORD PTR [ebp-0x4c],eax
  4277f7:	lea    eax,[edi+0x44]
  4277fa:	mov    DWORD PTR [ebp-0x48],eax
  4277fd:	lea    eax,[edi+0x66]
  427800:	mov    DWORD PTR [ebp-0x44],eax
  427803:	lea    eax,[edi+0x88]
  427809:	mov    DWORD PTR [ebp-0x40],eax
  42780c:	lea    eax,[edi+0xaa]
  427812:	mov    DWORD PTR [ebp-0x3c],eax
  427815:	lea    eax,[edi+0xcc]
  42781b:	mov    DWORD PTR [ebp-0x38],eax
  42781e:	lea    eax,[edi+0xee]
  427824:	mov    DWORD PTR [ebp-0x34],eax
  427827:	lea    eax,[edi+0x110]
  42782d:	mov    DWORD PTR [ebp-0x30],eax
  427830:	lea    eax,[edi+0x132]
  427836:	mov    DWORD PTR [ebp-0x2c],eax
  427839:	lea    eax,[edi+0x154]
  42783f:	push   edi
  427840:	mov    DWORD PTR [ebp-0x50],edi
  427843:	mov    DWORD PTR [ebp-0x28],eax
  427846:	call   0x427945
  42784b:	push   eax
  42784c:	mov    eax,DWORD PTR [edi+0x1a8]
  427852:	push   DWORD PTR [eax]
  427854:	call   0x4275e6
  427859:	mov    DWORD PTR [ebp-0x10],eax
  42785c:	test   eax,eax
  42785e:	je     0x427911
  427864:	mov    ecx,DWORD PTR [eax+0x3c]
  427867:	push   ebx
  427868:	push   esi
  427869:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  42786d:	add    esi,eax
  42786f:	mov    edi,DWORD PTR [esi+0x24]
  427872:	mov    ecx,DWORD PTR [esi+0x1c]
  427875:	mov    edx,DWORD PTR [esi+0x20]
  427878:	mov    ebx,DWORD PTR [esi+0x18]
  42787b:	add    edi,eax
  42787d:	mov    DWORD PTR [ebp-0x20],edi
  427880:	mov    edi,DWORD PTR [esi+0x14]
  427883:	add    ecx,eax
  427885:	add    edx,eax
  427887:	mov    DWORD PTR [ebp-0xc],ecx
  42788a:	mov    DWORD PTR [ebp-0x1c],edx
  42788d:	mov    DWORD PTR [ebp-0x8],edi
  427890:	cmp    edi,ebx
  427892:	ja     0x427897
  427894:	mov    DWORD PTR [ebp-0x8],ebx
  427897:	xor    ebx,ebx
  427899:	mov    DWORD PTR [ebp-0x18],ebx
  42789c:	cmp    DWORD PTR [ebp-0x8],ebx
  42789f:	jbe    0x42790f
  4278a1:	jmp    0x4278a6
  4278a3:	mov    edx,DWORD PTR [ebp-0x1c]
  4278a6:	mov    edi,DWORD PTR [ebp-0x20]
  4278a9:	movzx  edi,WORD PTR [edi+ebx*2]
  4278ad:	cmp    ebx,DWORD PTR [esi+0x18]
  4278b0:	jae    0x42790f
  4278b2:	cmp    edi,DWORD PTR [esi+0x14]
  4278b5:	jae    0x42790f
  4278b7:	mov    ebx,DWORD PTR [edx+ebx*4]
  4278ba:	mov    edx,DWORD PTR [ebp+0x8]
  4278bd:	mov    edi,DWORD PTR [ecx+edi*4]
  4278c0:	mov    DWORD PTR [ebp-0x4],edx
  4278c3:	lea    edx,[ebp-0x50]
  4278c6:	add    ebx,eax
  4278c8:	add    edi,eax
  4278ca:	sub    edx,DWORD PTR [ebp+0x8]
  4278cd:	mov    DWORD PTR [ebp-0x14],0xb
  4278d4:	mov    DWORD PTR [ebp-0x24],edx
  4278d7:	mov    edx,DWORD PTR [ebp-0x4]
  4278da:	cmp    DWORD PTR [edx],0x0
  4278dd:	jne    0x4278fa
  4278df:	mov    eax,DWORD PTR [ebp-0x24]
  4278e2:	push   DWORD PTR [eax+edx*1]
  4278e5:	push   ebx
  4278e6:	call   0x4276e0
  4278eb:	mov    ecx,DWORD PTR [ebp-0xc]
  4278ee:	test   eax,eax
  4278f0:	je     0x4278f7
  4278f2:	mov    eax,DWORD PTR [ebp-0x4]
  4278f5:	mov    DWORD PTR [eax],edi
  4278f7:	mov    eax,DWORD PTR [ebp-0x10]
  4278fa:	add    DWORD PTR [ebp-0x4],0x4
  4278fe:	dec    DWORD PTR [ebp-0x14]
  427901:	jne    0x4278d7
  427903:	mov    ebx,DWORD PTR [ebp-0x18]
  427906:	inc    ebx
  427907:	mov    DWORD PTR [ebp-0x18],ebx
  42790a:	cmp    ebx,DWORD PTR [ebp-0x8]
  42790d:	jb     0x4278a3
  42790f:	pop    esi
  427910:	pop    ebx
  427911:	pop    edi
  427912:	leave  
  427913:	ret    0x4
  427916:	push   ebp
  427917:	mov    ebp,esp
  427919:	mov    eax,DWORD PTR [ebp+0x8]
  42791c:	push   esi
  42791d:	push   DWORD PTR [eax+0x1d8]
  427923:	lea    esi,[eax+0x198]
  427929:	mov    eax,DWORD PTR [ebp+0x8]
  42792c:	call   0x4277c5
  427931:	mov    ecx,DWORD PTR [esi]
  427933:	mov    DWORD PTR [ecx],eax
  427935:	mov    eax,DWORD PTR [esi]
  427937:	xor    ecx,ecx
  427939:	cmp    DWORD PTR [eax],ecx
  42793b:	pop    esi
  42793c:	setne  cl
  42793f:	mov    eax,ecx
  427941:	pop    ebp
  427942:	ret    0x4
  427945:	mov    ecx,DWORD PTR [edi+0x188]
  42794b:	push   ebx
  42794c:	jmp    0x427961
  42794e:	xor    eax,0x8a94
  427953:	add    eax,0x3b56
  427958:	mov    WORD PTR [ecx],ax
  42795b:	add    ecx,0x2
  42795e:	add    edx,0x2
  427961:	movzx  eax,WORD PTR [edx]
  427964:	mov    ebx,0x4e3e
  427969:	cmp    ax,bx
  42796c:	jne    0x42794e
  42796e:	xor    eax,eax
  427970:	mov    WORD PTR [ecx],ax
  427973:	mov    eax,DWORD PTR [edi+0x188]
  427979:	pop    ebx
  42797a:	ret    
  42797b:	push   edi
  42797c:	mov    edi,eax
  42797e:	mov    eax,DWORD PTR [esi+0x188]
  427984:	shl    edi,0x6
  427987:	add    eax,edi
  427989:	jmp    0x427995
  42798b:	xor    cl,0x79
  42798e:	sub    cl,0x3
  427991:	mov    BYTE PTR [eax],cl
  427993:	inc    eax
  427994:	inc    edx
  427995:	mov    cl,BYTE PTR [edx]
  427997:	cmp    cl,0x7a
  42799a:	jne    0x42798b
  42799c:	mov    BYTE PTR [eax],0x0
  42799f:	mov    eax,DWORD PTR [esi+0x188]
  4279a5:	add    eax,edi
  4279a7:	pop    edi
  4279a8:	ret    
  4279a9:	push   ebp
  4279aa:	mov    ebp,esp
  4279ac:	sub    esp,0x14
  4279af:	mov    DWORD PTR [ebp-0x10],0xf89c85b0
  4279b6:	mov    DWORD PTR [ebp-0x4],0xf89c85b1
  4279bd:	mov    eax,DWORD PTR [ebx]
  4279bf:	mov    DWORD PTR [ebp-0x8],eax
  4279c2:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  4279c9:	push   esi
  4279ca:	push   edi
  4279cb:	mov    DWORD PTR [ebp-0x14],0xead71890
  4279d2:	mov    edi,DWORD PTR [ebp-0x4]
  4279d5:	mov    ecx,DWORD PTR [ebp-0x10]
  4279d8:	mov    eax,0x75108a4
  4279dd:	xor    edi,eax
  4279df:	mov    edx,0x3272ec
  4279e4:	xor    ecx,eax
  4279e6:	add    edi,edx
  4279e8:	add    ecx,edx
  4279ea:	imul   edi,ecx
  4279ed:	jmp    0x427a35
  4279ef:	mov    ecx,DWORD PTR [ebp-0x8]
  4279f2:	mov    esi,DWORD PTR [ebp-0x4]
  4279f5:	xor    ecx,eax
  4279f7:	xor    esi,eax
  4279f9:	add    ecx,edx
  4279fb:	add    esi,edx
  4279fd:	test   esi,ecx
  4279ff:	mov    esi,DWORD PTR [ebp-0x8]
  427a02:	mov    ecx,DWORD PTR [ebp-0x4]
  427a05:	je     0x427a1c
  427a07:	xor    ecx,eax
  427a09:	xor    esi,eax
  427a0b:	add    ecx,edx
  427a0d:	add    esi,edx
  427a0f:	shr    esi,cl
  427a11:	mov    ecx,DWORD PTR [ebp-0x14]
  427a14:	xor    ecx,eax
  427a16:	add    ecx,edx
  427a18:	xor    esi,ecx
  427a1a:	jmp    0x427a26
  427a1c:	xor    esi,eax
  427a1e:	xor    ecx,eax
  427a20:	add    esi,edx
  427a22:	add    ecx,edx
  427a24:	shr    esi,cl
  427a26:	mov    DWORD PTR [ebp-0x8],esi
  427a29:	mov    ecx,DWORD PTR [ebp-0x4]
  427a2c:	xor    ecx,eax
  427a2e:	lea    edi,[edi+ecx*1+0x3272ec]
  427a35:	mov    ecx,DWORD PTR [ebp-0xc]
  427a38:	mov    esi,DWORD PTR [ebp-0x4]
  427a3b:	xor    esi,eax
  427a3d:	xor    ecx,eax
  427a3f:	sub    ecx,esi
  427a41:	cmp    edi,ecx
  427a43:	jbe    0x4279ef
  427a45:	mov    eax,DWORD PTR [ebp-0x8]
  427a48:	pop    edi
  427a49:	mov    DWORD PTR [ebx],eax
  427a4b:	mov    eax,DWORD PTR [ebp-0x8]
  427a4e:	pop    esi
  427a4f:	leave  
  427a50:	ret    
  427a51:	push   ebp
  427a52:	mov    ebp,esp
  427a54:	sub    esp,0x38
  427a57:	push   ebx
  427a58:	mov    ebx,0xf89c85b0
  427a5d:	mov    DWORD PTR [ebp-0x4],ebx
  427a60:	lea    eax,[ebx+0x1]
  427a63:	push   esi
  427a64:	mov    DWORD PTR [ebp-0x24],eax
  427a67:	mov    ecx,DWORD PTR [ebp-0x4]
  427a6a:	mov    edx,DWORD PTR [ebp+0x8]
  427a6d:	mov    esi,0x75108a4
  427a72:	push   edi
  427a73:	xor    ecx,esi
  427a75:	mov    edi,0x3272ec
  427a7a:	add    ecx,edi
  427a7c:	cmp    edx,ecx
  427a7e:	je     0x427be4
  427a84:	mov    ecx,DWORD PTR [ebp-0x4]
  427a87:	mov    edx,DWORD PTR [ebp+0xc]
  427a8a:	xor    ecx,esi
  427a8c:	add    ecx,edi
  427a8e:	cmp    edx,ecx
  427a90:	je     0x427be4
  427a96:	mov    ecx,DWORD PTR [ebp+0x10]
  427a99:	mov    DWORD PTR [ebp-0x14],ecx
  427a9c:	mov    ecx,DWORD PTR [ebp+0xc]
  427a9f:	mov    edx,DWORD PTR [ebp+0x8]
  427aa2:	mov    DWORD PTR [ebp-0x18],0xf89c8533
  427aa9:	mov    DWORD PTR [ebp-0x1c],eax
  427aac:	mov    DWORD PTR [ebp-0x10],ebx
  427aaf:	mov    DWORD PTR [ebp+0xc],eax
  427ab2:	mov    DWORD PTR [ebp+0x10],0xf89c85b2
  427ab9:	mov    eax,DWORD PTR [ebp+0xc]
  427abc:	xor    eax,esi
  427abe:	mov    DWORD PTR [ebp-0x20],ecx
  427ac1:	sub    ecx,eax
  427ac3:	sub    ecx,edi
  427ac5:	mov    DWORD PTR [ebp+0x8],ecx
  427ac8:	mov    DWORD PTR [ebp-0xc],edx
  427acb:	mov    DWORD PTR [ebp-0x8],0xf89c85bd
  427ad2:	jmp    0x427bd4
  427ad7:	mov    eax,DWORD PTR [ebp+0xc]
  427ada:	mov    ecx,DWORD PTR [ebp+0xc]
  427add:	xor    eax,esi
  427adf:	xor    ecx,esi
  427ae1:	lea    ecx,[eax+ecx*1+0x64e5d8]
  427ae8:	mov    eax,DWORD PTR [ebp+0x8]
  427aeb:	xor    edx,edx
  427aed:	div    ecx
  427aef:	mov    eax,DWORD PTR [ebp+0x10]
  427af2:	mov    ecx,DWORD PTR [ebp+0xc]
  427af5:	xor    eax,esi
  427af7:	xor    ecx,esi
  427af9:	sub    eax,ecx
  427afb:	cmp    edx,eax
  427afd:	jne    0x427b93
  427b03:	mov    eax,DWORD PTR [ebp+0x8]
  427b06:	mov    ecx,DWORD PTR [ebp-0xc]
  427b09:	mov    dl,BYTE PTR [eax+ecx*1]
  427b0c:	mov    eax,DWORD PTR [ebp-0x10]
  427b0f:	mov    ecx,DWORD PTR [ebp-0x8]
  427b12:	xor    eax,esi
  427b14:	xor    ecx,esi
  427b16:	add    eax,edi
  427b18:	add    ecx,edi
  427b1a:	cmp    eax,ecx
  427b1c:	jae    0x427b64
  427b1e:	lea    ecx,[eax-0x3272ec]
  427b24:	mov    DWORD PTR [ebp-0x4],ecx
  427b27:	mov    ebx,DWORD PTR [ebp-0x4]
  427b2a:	xor    ebx,esi
  427b2c:	add    ebx,0x7f55d8f2
  427b32:	lea    ecx,[ebp+eax*4-0x38]
  427b36:	mov    DWORD PTR [ecx],ebx
  427b38:	mov    ebx,DWORD PTR [ecx]
  427b3a:	cmp    ebx,0x244ecb93
  427b40:	jbe    0x427b4a
  427b42:	add    DWORD PTR [ecx],0x405fcdc
  427b48:	jmp    0x427b50
  427b4a:	add    DWORD PTR [ecx],0xfdaf4324
  427b50:	mov    ecx,DWORD PTR [ebp-0x8]
  427b53:	xor    ecx,esi
  427b55:	inc    eax
  427b56:	inc    DWORD PTR [ebp-0x4]
  427b59:	add    ecx,edi
  427b5b:	cmp    eax,ecx
  427b5d:	jb     0x427b27
  427b5f:	mov    ebx,0xf89c85b0
  427b64:	cmp    DWORD PTR [ebp-0x14],0x0
  427b68:	jne    0x427b72
  427b6a:	xor    dl,0x79
  427b6d:	sub    dl,0x3
  427b70:	jmp    0x427b88
  427b72:	mov    eax,DWORD PTR [ebp-0x18]
  427b75:	xor    al,0xa4
  427b77:	mov    cl,0x14
  427b79:	sub    cl,al
  427b7b:	add    dl,cl
  427b7d:	mov    ecx,DWORD PTR [ebp-0x1c]
  427b80:	xor    cl,0xa4
  427b83:	sub    cl,0x14
  427b86:	ror    dl,cl
  427b88:	xor    eax,eax
  427b8a:	mov    eax,DWORD PTR [ebp+0x8]
  427b8d:	mov    ecx,DWORD PTR [ebp-0xc]
  427b90:	mov    BYTE PTR [eax+ecx*1],dl
  427b93:	mov    eax,DWORD PTR [ebp+0x8]
  427b96:	mov    ecx,DWORD PTR [ebp-0x10]
  427b99:	sub    eax,edi
  427b9b:	xor    eax,esi
  427b9d:	cmp    eax,ecx
  427b9f:	jne    0x427bc2
  427ba1:	mov    eax,DWORD PTR [ebp+0x10]
  427ba4:	mov    ecx,DWORD PTR [ebp+0xc]
  427ba7:	xor    eax,esi
  427ba9:	xor    ecx,esi
  427bab:	sub    eax,ecx
  427bad:	mov    ecx,DWORD PTR [ebp-0x20]
  427bb0:	sub    eax,edi
  427bb2:	xor    eax,esi
  427bb4:	mov    DWORD PTR [ebp+0x10],eax
  427bb7:	mov    eax,DWORD PTR [ebp+0xc]
  427bba:	xor    eax,esi
  427bbc:	sub    ecx,eax
  427bbe:	sub    ecx,edi
  427bc0:	jmp    0x427bd1
  427bc2:	mov    eax,DWORD PTR [ebp+0xc]
  427bc5:	xor    eax,esi
  427bc7:	mov    ecx,0xffcd8d14
  427bcc:	sub    ecx,eax
  427bce:	add    ecx,DWORD PTR [ebp+0x8]
  427bd1:	mov    DWORD PTR [ebp+0x8],ecx
  427bd4:	mov    eax,DWORD PTR [ebp+0x10]
  427bd7:	cmp    eax,ebx
  427bd9:	jne    0x427ad7
  427bdf:	mov    eax,DWORD PTR [ebp-0x24]
  427be2:	jmp    0x427be7
  427be4:	mov    eax,DWORD PTR [ebp-0x4]
  427be7:	xor    eax,esi
  427be9:	add    eax,edi
  427beb:	pop    edi
  427bec:	pop    esi
  427bed:	pop    ebx
  427bee:	leave  
  427bef:	ret    0xc
  427bf2:	push   ebp
  427bf3:	mov    ebp,esp
  427bf5:	sub    esp,0x420
  427bfb:	mov    DWORD PTR [ebp-0x14],0xf89c85b0
  427c02:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  427c09:	mov    DWORD PTR [ebp-0x18],0xf89c86b0
  427c10:	push   ebx
  427c11:	mov    DWORD PTR [ebp-0x1c],0xf89c85b7
  427c18:	mov    eax,DWORD PTR [ebp-0x14]
  427c1b:	push   esi
  427c1c:	mov    esi,0x75108a4
  427c21:	push   edi
  427c22:	xor    eax,esi
  427c24:	mov    edi,0x3272ec
  427c29:	add    eax,edi
  427c2b:	mov    DWORD PTR [ebp-0x8],eax
  427c2e:	mov    DWORD PTR [ebp-0x20],0xf89c85b8
  427c35:	mov    DWORD PTR [ebp-0x4],0xead71890
  427c3c:	mov    DWORD PTR [ebp-0x10],0x8
  427c43:	mov    ecx,ecx
  427c45:	mov    eax,DWORD PTR [ebp-0xc]
  427c48:	mov    ecx,DWORD PTR [ebp-0x14]
  427c4b:	xor    eax,esi
  427c4d:	xor    ecx,esi
  427c4f:	add    eax,edi
  427c51:	add    ecx,edi
  427c53:	imul   eax,ecx
  427c56:	jmp    0x427c89
  427c58:	mov    eax,DWORD PTR [ebp-0x4]
  427c5b:	sub    eax,edi
  427c5d:	xor    eax,esi
  427c5f:	mov    DWORD PTR [ebp-0x8],eax
  427c62:	lea    ebx,[ebp-0x8]
  427c65:	call   0x4279a9
  427c6a:	mov    DWORD PTR [ebp-0x8],eax
  427c6d:	mov    eax,DWORD PTR [ebp-0x8]
  427c70:	mov    ecx,DWORD PTR [ebp-0x4]
  427c73:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  427c7a:	mov    eax,DWORD PTR [ebp-0xc]
  427c7d:	mov    ecx,DWORD PTR [ebp-0x4]
  427c80:	xor    eax,esi
  427c82:	lea    eax,[eax+ecx*1+0x3272ec]
  427c89:	mov    DWORD PTR [ebp-0x4],eax
  427c8c:	mov    eax,DWORD PTR [ebp-0x18]
  427c8f:	mov    ecx,DWORD PTR [ebp-0xc]
  427c92:	xor    ecx,esi
  427c94:	xor    eax,esi
  427c96:	sub    eax,ecx
  427c98:	mov    ecx,DWORD PTR [ebp-0x4]
  427c9b:	cmp    ecx,eax
  427c9d:	jbe    0x427c58
  427c9f:	mov    eax,DWORD PTR [ebp-0x1c]
  427ca2:	xor    eax,esi
  427ca4:	add    eax,edi
  427ca6:	mov    DWORD PTR [ebp-0x8],eax
  427ca9:	mov    DWORD PTR [ebp-0x18],0xf89c86b7
  427cb0:	mov    ebx,ebx
  427cb2:	jmp    0x427d15
  427cb4:	mov    ecx,DWORD PTR [ebp-0x20]
  427cb7:	mov    eax,DWORD PTR [ebp-0x8]
  427cba:	xor    ecx,esi
  427cbc:	add    ecx,edi
  427cbe:	shr    eax,cl
  427cc0:	mov    DWORD PTR [ebp-0x4],eax
  427cc3:	mov    eax,DWORD PTR [ebp+0x8]
  427cc6:	mov    cl,BYTE PTR [eax]
  427cc8:	mov    BYTE PTR [ebp+0xb],cl
  427ccb:	mov    cl,BYTE PTR [ebp+0xb]
  427cce:	mov    edx,DWORD PTR [ebp-0x8]
  427cd1:	movzx  ecx,cl
  427cd4:	xor    ecx,edx
  427cd6:	mov    DWORD PTR [ebp+0x8],ecx
  427cd9:	mov    ecx,DWORD PTR [ebp-0x18]
  427cdc:	mov    edx,DWORD PTR [ebp+0x8]
  427cdf:	xor    ecx,esi
  427ce1:	add    ecx,edi
  427ce3:	and    ecx,edx
  427ce5:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  427cec:	mov    edx,DWORD PTR [ebp-0x4]
  427cef:	xor    ecx,edx
  427cf1:	mov    DWORD PTR [ebp-0x8],ecx
  427cf4:	mov    ecx,DWORD PTR [ebp-0xc]
  427cf7:	xor    ecx,esi
  427cf9:	lea    eax,[eax+ecx*1+0x3272ec]
  427d00:	mov    DWORD PTR [ebp+0x8],eax
  427d03:	mov    eax,DWORD PTR [ebp-0xc]
  427d06:	xor    eax,esi
  427d08:	mov    ecx,0xffcd8d14
  427d0d:	sub    ecx,eax
  427d0f:	add    ecx,DWORD PTR [ebp-0x10]
  427d12:	mov    DWORD PTR [ebp-0x10],ecx
  427d15:	mov    eax,DWORD PTR [ebp-0x14]
  427d18:	mov    ecx,DWORD PTR [ebp-0x10]
  427d1b:	xor    eax,esi
  427d1d:	add    eax,edi
  427d1f:	cmp    ecx,eax
  427d21:	jne    0x427cb4
  427d23:	mov    eax,DWORD PTR [ebp-0x1c]
  427d26:	mov    ecx,DWORD PTR [ebp-0x8]
  427d29:	xor    eax,esi
  427d2b:	add    eax,edi
  427d2d:	pop    edi
  427d2e:	pop    esi
  427d2f:	xor    eax,ecx
  427d31:	pop    ebx
  427d32:	leave  
  427d33:	ret    0x4
  427d36:	push   ebp
  427d37:	mov    ebp,esp
  427d39:	mov    eax,DWORD PTR [ebp+0x1c]
  427d3c:	mov    ecx,DWORD PTR [ebp+0x8]
  427d3f:	mov    edx,DWORD PTR [ebp+0x10]
  427d42:	mov    eax,DWORD PTR [eax+0x190]
  427d48:	mov    eax,DWORD PTR [eax]
  427d4a:	sub    esp,0x64
  427d4d:	push   ebx
  427d4e:	push   esi
  427d4f:	push   edi
  427d50:	mov    edi,0x75108a4
  427d55:	xor    ecx,edi
  427d57:	mov    ebx,0x3272ec
  427d5c:	add    ecx,ebx
  427d5e:	cmp    ecx,edx
  427d60:	jne    0x427d71
  427d62:	or     DWORD PTR ds:0x3750c3e,0x4263eb2f
  427d6c:	jmp    0x42826d
  427d71:	mov    ecx,DWORD PTR [ebp+0x8]
  427d74:	mov    esi,DWORD PTR [ebp+0x14]
  427d77:	mov    edx,DWORD PTR [esi]
  427d79:	xor    ecx,edi
  427d7b:	add    ecx,ebx
  427d7d:	cmp    edx,ecx
  427d7f:	je     0x428228
  427d85:	mov    ecx,DWORD PTR [ebp+0x1c]
  427d88:	mov    DWORD PTR [ebp-0x1c],eax
  427d8b:	mov    DWORD PTR [ebp+0x1c],ecx
  427d8e:	mov    ecx,DWORD PTR [ebp+0x18]
  427d91:	mov    eax,DWORD PTR [esi]
  427d93:	mov    DWORD PTR [ebp-0x20],eax
  427d96:	mov    DWORD PTR [ebp+0x8],0xf89c85b0
  427d9d:	mov    edx,0xf89c85b1
  427da2:	mov    DWORD PTR [ebp-0x8],edx
  427da5:	mov    eax,DWORD PTR [ebp+0x1c]
  427da8:	mov    DWORD PTR [ebp+0x1c],eax
  427dab:	mov    eax,DWORD PTR [ebp+0x1c]
  427dae:	mov    eax,DWORD PTR [eax+0x190]
  427db4:	mov    eax,DWORD PTR [eax]
  427db6:	mov    DWORD PTR [ebp-0x24],ecx
  427db9:	mov    ecx,DWORD PTR [ebp+0x1c]
  427dbc:	mov    ecx,DWORD PTR [ecx+0x190]
  427dc2:	mov    ecx,DWORD PTR [ecx]
  427dc4:	add    ecx,DWORD PTR [eax+0x3c]
  427dc7:	mov    DWORD PTR [ebp+0x10],ecx
  427dca:	mov    eax,DWORD PTR [ebp+0x8]
  427dcd:	xor    eax,edi
  427dcf:	add    eax,ebx
  427dd1:	mov    DWORD PTR [ebp-0x4],eax
  427dd4:	mov    eax,DWORD PTR [ebp+0x8]
  427dd7:	xor    eax,edi
  427dd9:	add    eax,ebx
  427ddb:	mov    DWORD PTR [ebp+0x18],eax
  427dde:	mov    eax,DWORD PTR [ebp+0x10]
  427de1:	mov    eax,DWORD PTR [eax+0x50]
  427de4:	sub    eax,0xc
  427de7:	mov    DWORD PTR [ebp-0x28],eax
  427dea:	mov    eax,DWORD PTR [ebp+0x10]
  427ded:	mov    eax,DWORD PTR [eax+0x38]
  427df0:	mov    ecx,DWORD PTR [ebp+0x10]
  427df3:	dec    eax
  427df4:	test   DWORD PTR [ecx+0x54],eax
  427df7:	mov    eax,DWORD PTR [ebp+0x10]
  427dfa:	je     0x427e14
  427dfc:	mov    eax,DWORD PTR [eax+0x38]
  427dff:	mov    ecx,DWORD PTR [ebp+0x10]
  427e02:	mov    ecx,DWORD PTR [ecx+0x54]
  427e05:	dec    eax
  427e06:	not    eax
  427e08:	and    ecx,eax
  427e0a:	mov    eax,DWORD PTR [ebp+0x10]
  427e0d:	mov    eax,DWORD PTR [eax+0x38]
  427e10:	add    eax,ecx
  427e12:	jmp    0x427e17
  427e14:	mov    eax,DWORD PTR [eax+0x54]
  427e17:	mov    DWORD PTR [ebp+0x1c],eax
  427e1a:	mov    eax,DWORD PTR [ebp+0x8]
  427e1d:	xor    eax,edi
  427e1f:	add    eax,ebx
  427e21:	mov    DWORD PTR [ebp+0x18],eax
  427e24:	mov    eax,DWORD PTR [ebp+0x8]
  427e27:	xor    eax,edi
  427e29:	add    eax,ebx
  427e2b:	mov    DWORD PTR [ebp+0x18],eax
  427e2e:	mov    eax,DWORD PTR [ebp+0x8]
  427e31:	mov    ecx,DWORD PTR [ebp-0x24]
  427e34:	xor    eax,edi
  427e36:	add    eax,ebx
  427e38:	mov    DWORD PTR [ecx],eax
  427e3a:	mov    DWORD PTR [ebp+0x18],edx
  427e3d:	mov    DWORD PTR [ebp+0x18],0xf89c85b2
  427e44:	mov    DWORD PTR [ebp+0x18],0xf89c85b3
  427e4b:	mov    DWORD PTR [ebp+0x18],0xf89c85bc
  427e52:	mov    eax,DWORD PTR [ebp-0x8]
  427e55:	mov    ecx,DWORD PTR [ebp+0x1c]
  427e58:	xor    eax,edi
  427e5a:	add    eax,ebx
  427e5c:	imul   eax,ecx
  427e5f:	mov    ecx,DWORD PTR [ebp+0x8]
  427e62:	mov    edx,DWORD PTR [ebp-0x28]
  427e65:	xor    ecx,edi
  427e67:	lea    ecx,[ecx+edx*1+0x3272ec]
  427e6e:	cmp    eax,ecx
  427e70:	jae    0x428221
  427e76:	mov    eax,DWORD PTR [ebp+0x8]
  427e79:	xor    eax,edi
  427e7b:	add    eax,ebx
  427e7d:	mov    DWORD PTR [ebp+0x18],eax
  427e80:	mov    eax,DWORD PTR [ebp+0x1c]
  427e83:	add    eax,DWORD PTR [ebp-0x1c]
  427e86:	mov    DWORD PTR [ebp-0x4],eax
  427e89:	push   DWORD PTR [ebp-0x4]
  427e8c:	mov    esi,DWORD PTR [ebp-0x1c]
  427e8f:	mov    ecx,DWORD PTR [ebp+0x10]
  427e92:	call   0x426fe1
  427e97:	mov    DWORD PTR [ebp+0xc],eax
  427e9a:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  427ea1:	mov    eax,DWORD PTR [ebp-0x18]
  427ea4:	xor    eax,edi
  427ea6:	lea    ecx,[ebp-0x40]
  427ea9:	add    eax,ebx
  427eab:	push   ecx
  427eac:	call   0x427575
  427eb1:	mov    eax,DWORD PTR [ebp+0xc]
  427eb4:	test   eax,eax
  427eb6:	je     0x427f06
  427eb8:	mov    eax,DWORD PTR [ebp-0x18]
  427ebb:	xor    eax,edi
  427ebd:	add    eax,ebx
  427ebf:	push   eax
  427ec0:	push   DWORD PTR [ebp+0xc]
  427ec3:	lea    eax,[ebp-0x40]
  427ec6:	push   eax
  427ec7:	call   0x42746b
  427ecc:	mov    eax,DWORD PTR [ebp-0x4]
  427ecf:	mov    DWORD PTR [ebp-0x18],eax
  427ed2:	mov    eax,DWORD PTR [ebp-0x18]
  427ed5:	mov    ecx,DWORD PTR [ebp-0x1c]
  427ed8:	sub    eax,ecx
  427eda:	mov    DWORD PTR [ebp-0x18],eax
  427edd:	mov    eax,DWORD PTR [ebp+0xc]
  427ee0:	mov    ecx,DWORD PTR [ebp+0xc]
  427ee3:	mov    eax,DWORD PTR [eax+0x10]
  427ee6:	add    eax,DWORD PTR [ecx+0xc]
  427ee9:	mov    ecx,DWORD PTR [ebp-0x18]
  427eec:	cmp    ecx,eax
  427eee:	jb     0x427f06
  427ef0:	mov    eax,DWORD PTR [ebp+0xc]
  427ef3:	mov    eax,DWORD PTR [eax+0xc]
  427ef6:	mov    ecx,DWORD PTR [ebp+0xc]
  427ef9:	add    eax,DWORD PTR [ecx+0x8]
  427efc:	mov    ecx,DWORD PTR [ebp-0x18]
  427eff:	sub    eax,ecx
  427f01:	jmp    0x4281f4
  427f06:	push   0xc
  427f08:	push   DWORD PTR [ebp-0x4]
  427f0b:	lea    eax,[ebp-0x4c]
  427f0e:	push   eax
  427f0f:	call   0x42746b
  427f14:	mov    eax,0xf89c85b0
  427f19:	mov    DWORD PTR [ebp-0x2c],eax
  427f1c:	mov    DWORD PTR [ebp-0x30],0xf89c85b1
  427f23:	mov    DWORD PTR [ebp-0x34],0xf89c85b2
  427f2a:	mov    DWORD PTR [ebp-0x38],0xf89c85b3
  427f31:	lea    ecx,[ebp-0x2c]
  427f34:	mov    DWORD PTR [ebp-0xc],ecx
  427f37:	lea    ecx,[ebp-0x30]
  427f3a:	mov    DWORD PTR [ebp-0x10],ecx
  427f3d:	lea    ecx,[ebp-0x34]
  427f40:	mov    DWORD PTR [ebp+0xc],ecx
  427f43:	lea    ecx,[ebp-0x38]
  427f46:	mov    DWORD PTR [ebp-0x14],ecx
  427f49:	mov    ecx,DWORD PTR [ebp+0x8]
  427f4c:	xor    ecx,edi
  427f4e:	add    ecx,ebx
  427f50:	mov    DWORD PTR [ebp-0x18],ecx
  427f53:	jmp    0x42814f
  427f58:	cmp    eax,0xf89c85b2
  427f5d:	je     0x428161
  427f63:	mov    ecx,DWORD PTR [ebp-0x8]
  427f66:	xor    ecx,edi
  427f68:	mov    esi,eax
  427f6a:	add    ecx,ebx
  427f6c:	mov    DWORD PTR [ebp+0x18],ecx
  427f6f:	mov    eax,DWORD PTR [ebp-0x18]
  427f72:	xor    esi,edi
  427f74:	lea    eax,[eax+esi*1+0x3272ec]
  427f7b:	mov    DWORD PTR [ebp-0x18],eax
  427f7e:	mov    eax,DWORD PTR [ebp-0x8]
  427f81:	mov    ecx,DWORD PTR [ebp-0x18]
  427f84:	xor    eax,edi
  427f86:	add    eax,ebx
  427f88:	cmp    ecx,eax
  427f8a:	jne    0x427f9f
  427f8c:	mov    eax,DWORD PTR [ebp+0x8]
  427f8f:	xor    eax,edi
  427f91:	add    eax,ebx
  427f93:	push   eax
  427f94:	push   0xc
  427f96:	lea    eax,[ebp-0x4c]
  427f99:	push   eax
  427f9a:	call   0x427a51
  427f9f:	mov    eax,DWORD PTR [ebp-0xc]
  427fa2:	mov    eax,DWORD PTR [eax]
  427fa4:	xor    eax,edi
  427fa6:	mov    al,BYTE PTR [ebp+eax*1+0x3272a0]
  427fad:	mov    ecx,DWORD PTR [ebp+0x8]
  427fb0:	xor    ecx,edi
  427fb2:	movzx  eax,al
  427fb5:	add    ecx,ebx
  427fb7:	cmp    eax,ecx
  427fb9:	je     0x428137
  427fbf:	mov    eax,DWORD PTR [ebp-0x10]
  427fc2:	mov    eax,DWORD PTR [eax]
  427fc4:	xor    eax,edi
  427fc6:	mov    al,BYTE PTR [ebp+eax*1+0x3272a0]
  427fcd:	mov    ecx,DWORD PTR [ebp+0x8]
  427fd0:	xor    ecx,edi
  427fd2:	movzx  eax,al
  427fd5:	add    ecx,ebx
  427fd7:	cmp    eax,ecx
  427fd9:	je     0x428137
  427fdf:	mov    eax,DWORD PTR [ebp+0xc]
  427fe2:	mov    eax,DWORD PTR [eax]
  427fe4:	xor    eax,edi
  427fe6:	mov    al,BYTE PTR [ebp+eax*1+0x3272a0]
  427fed:	mov    ecx,DWORD PTR [ebp+0x8]
  427ff0:	xor    ecx,edi
  427ff2:	movzx  eax,al
  427ff5:	add    ecx,ebx
  427ff7:	cmp    eax,ecx
  427ff9:	je     0x428137
  427fff:	mov    eax,DWORD PTR [ebp-0x14]
  428002:	mov    eax,DWORD PTR [eax]
  428004:	xor    eax,edi
  428006:	mov    al,BYTE PTR [ebp+eax*1+0x3272a0]
  42800d:	mov    ecx,DWORD PTR [ebp+0x8]
  428010:	xor    ecx,edi
  428012:	movzx  eax,al
  428015:	add    ecx,ebx
  428017:	cmp    eax,ecx
  428019:	je     0x428137
  42801f:	mov    eax,DWORD PTR [ebp-0x10]
  428022:	mov    eax,DWORD PTR [eax]
  428024:	xor    eax,edi
  428026:	mov    al,BYTE PTR [ebp+eax*1+0x3272a0]
  42802d:	mov    ecx,DWORD PTR [ebp-0xc]
  428030:	mov    ecx,DWORD PTR [ecx]
  428032:	xor    ecx,edi
  428034:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a0]
  42803b:	xor    al,cl
  42803d:	mov    ecx,DWORD PTR [ebp+0xc]
  428040:	mov    ecx,DWORD PTR [ecx]
  428042:	xor    ecx,edi
  428044:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a0]
  42804b:	or     al,cl
  42804d:	mov    ecx,DWORD PTR [ebp-0xc]
  428050:	mov    ecx,DWORD PTR [ecx]
  428052:	xor    ecx,edi
  428054:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a4]
  42805b:	cmp    cl,al
  42805d:	jne    0x428137
  428063:	mov    eax,DWORD PTR [ebp+0xc]
  428066:	mov    eax,DWORD PTR [eax]
  428068:	xor    eax,edi
  42806a:	mov    al,BYTE PTR [ebp+eax*1+0x3272a0]
  428071:	mov    ecx,DWORD PTR [ebp-0x10]
  428074:	mov    ecx,DWORD PTR [ecx]
  428076:	xor    ecx,edi
  428078:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a0]
  42807f:	xor    al,cl
  428081:	mov    ecx,DWORD PTR [ebp-0x14]
  428084:	mov    ecx,DWORD PTR [ecx]
  428086:	xor    ecx,edi
  428088:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a0]
  42808f:	or     al,cl
  428091:	mov    ecx,DWORD PTR [ebp-0x10]
  428094:	mov    ecx,DWORD PTR [ecx]
  428096:	xor    ecx,edi
  428098:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a4]
  42809f:	cmp    cl,al
  4280a1:	jne    0x428137
  4280a7:	mov    eax,DWORD PTR [ebp-0x14]
  4280aa:	mov    eax,DWORD PTR [eax]
  4280ac:	xor    eax,edi
  4280ae:	mov    al,BYTE PTR [ebp+eax*1+0x3272a0]
  4280b5:	mov    ecx,DWORD PTR [ebp+0xc]
  4280b8:	mov    ecx,DWORD PTR [ecx]
  4280ba:	xor    ecx,edi
  4280bc:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a0]
  4280c3:	xor    al,cl
  4280c5:	mov    ecx,DWORD PTR [ebp-0xc]
  4280c8:	mov    ecx,DWORD PTR [ecx]
  4280ca:	xor    ecx,edi
  4280cc:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a0]
  4280d3:	or     al,cl
  4280d5:	mov    ecx,DWORD PTR [ebp+0xc]
  4280d8:	mov    ecx,DWORD PTR [ecx]
  4280da:	xor    ecx,edi
  4280dc:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a4]
  4280e3:	cmp    cl,al
  4280e5:	jne    0x428137
  4280e7:	mov    eax,DWORD PTR [ebp-0x14]
  4280ea:	mov    eax,DWORD PTR [eax]
  4280ec:	xor    eax,edi
  4280ee:	mov    al,BYTE PTR [ebp+eax*1+0x3272a0]
  4280f5:	mov    ecx,DWORD PTR [ebp-0xc]
  4280f8:	mov    ecx,DWORD PTR [ecx]
  4280fa:	xor    ecx,edi
  4280fc:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a0]
  428103:	xor    al,cl
  428105:	mov    ecx,DWORD PTR [ebp-0x10]
  428108:	mov    ecx,DWORD PTR [ecx]
  42810a:	xor    ecx,edi
  42810c:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a0]
  428113:	or     al,cl
  428115:	mov    ecx,DWORD PTR [ebp-0x14]
  428118:	mov    ecx,DWORD PTR [ecx]
  42811a:	xor    ecx,edi
  42811c:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a4]
  428123:	cmp    cl,al
  428125:	jne    0x428137
  428127:	lea    eax,[ebp-0x4c]
  42812a:	push   eax
  42812b:	call   0x427bf2
  428130:	mov    ecx,DWORD PTR [ebp-0x44]
  428133:	cmp    eax,ecx
  428135:	je     0x428141
  428137:	mov    eax,DWORD PTR [ebp+0x8]
  42813a:	xor    eax,edi
  42813c:	add    eax,ebx
  42813e:	mov    DWORD PTR [ebp+0x18],eax
  428141:	mov    eax,DWORD PTR [ebp-0x8]
  428144:	xor    eax,edi
  428146:	lea    eax,[eax+esi*1+0x3272ec]
  42814d:	xor    eax,edi
  42814f:	mov    ecx,DWORD PTR [ebp+0x8]
  428152:	mov    edx,DWORD PTR [ebp+0x18]
  428155:	xor    ecx,edi
  428157:	add    ecx,ebx
  428159:	cmp    edx,ecx
  42815b:	je     0x427f58
  428161:	mov    eax,DWORD PTR [ebp+0x8]
  428164:	mov    ecx,DWORD PTR [ebp+0x18]
  428167:	xor    eax,edi
  428169:	add    eax,ebx
  42816b:	cmp    ecx,eax
  42816d:	jne    0x428180
  42816f:	mov    eax,DWORD PTR [ebp-0x8]
  428172:	mov    ecx,DWORD PTR [ebp+0x1c]
  428175:	xor    eax,edi
  428177:	lea    eax,[eax+ecx*1+0x3272ec]
  42817e:	jmp    0x4281f7
  428180:	push   0x18
  428182:	push   DWORD PTR [ebp-0x4]
  428185:	lea    eax,[ebp-0x64]
  428188:	push   eax
  428189:	call   0x42746b
  42818e:	mov    eax,DWORD PTR [ebp+0x8]
  428191:	mov    ecx,DWORD PTR [ebp-0x18]
  428194:	xor    eax,edi
  428196:	add    eax,ebx
  428198:	cmp    eax,ecx
  42819a:	je     0x4281af
  42819c:	mov    eax,DWORD PTR [ebp+0x8]
  42819f:	xor    eax,edi
  4281a1:	add    eax,ebx
  4281a3:	push   eax
  4281a4:	push   0x18
  4281a6:	lea    eax,[ebp-0x64]
  4281a9:	push   eax
  4281aa:	call   0x427a51
  4281af:	mov    eax,DWORD PTR [ebp-0x4]
  4281b2:	add    eax,0x18
  4281b5:	mov    DWORD PTR [ebp+0x18],eax
  4281b8:	push   DWORD PTR [ebp-0x50]
  4281bb:	push   DWORD PTR [ebp+0x18]
  4281be:	mov    eax,DWORD PTR [ebp-0x54]
  4281c1:	add    eax,DWORD PTR [ebp-0x20]
  4281c4:	push   eax
  4281c5:	call   0x42746b
  4281ca:	mov    eax,DWORD PTR [ebp+0x8]
  4281cd:	mov    ecx,DWORD PTR [ebp-0x18]
  4281d0:	xor    eax,edi
  4281d2:	add    eax,ebx
  4281d4:	cmp    eax,ecx
  4281d6:	je     0x4281e9
  4281d8:	push   0x0
  4281da:	push   DWORD PTR [ebp-0x50]
  4281dd:	mov    eax,DWORD PTR [ebp-0x54]
  4281e0:	add    eax,DWORD PTR [ebp-0x20]
  4281e3:	push   eax
  4281e4:	call   0x427a51
  4281e9:	mov    eax,DWORD PTR [ebp-0x24]
  4281ec:	mov    ecx,DWORD PTR [ebp-0x50]
  4281ef:	add    DWORD PTR [eax],ecx
  4281f1:	mov    eax,DWORD PTR [ebp-0x50]
  4281f4:	add    eax,DWORD PTR [ebp+0x1c]
  4281f7:	mov    DWORD PTR [ebp+0x1c],eax
  4281fa:	mov    eax,DWORD PTR [ebp-0x8]
  4281fd:	mov    ecx,DWORD PTR [ebp+0x1c]
  428200:	xor    eax,edi
  428202:	add    eax,ebx
  428204:	imul   eax,ecx
  428207:	mov    ecx,DWORD PTR [ebp+0x8]
  42820a:	mov    edx,DWORD PTR [ebp-0x28]
  42820d:	xor    ecx,edi
  42820f:	lea    ecx,[ecx+edx*1+0x3272ec]
  428216:	cmp    eax,ecx
  428218:	jb     0x427e76
  42821e:	mov    esi,DWORD PTR [ebp+0x14]
  428221:	mov    eax,DWORD PTR [ebp-0x20]
  428224:	mov    DWORD PTR [esi],eax
  428226:	jmp    0x42826d
  428228:	mov    ecx,DWORD PTR [ebp+0x8]
  42822b:	mov    edx,DWORD PTR [ebp+0xc]
  42822e:	xor    ecx,edi
  428230:	xor    edx,edi
  428232:	add    ecx,ebx
  428234:	add    edx,ebx
  428236:	cmp    ecx,edx
  428238:	jne    0x42824c
  42823a:	mov    eax,ds:0x7f642ddf
  42823f:	imul   eax,eax,0x9f15fcce
  428245:	mov    ds:0x7f642ddf,eax
  42824a:	jmp    0x42826d
  42824c:	mov    ecx,DWORD PTR [ebp+0x8]
  42824f:	xor    ecx,edi
  428251:	add    ecx,ebx
  428253:	cmp    eax,ecx
  428255:	je     0x428263
  428257:	sub    DWORD PTR ds:0xf861e3f,0x709beac1
  428261:	jmp    0x42826d
  428263:	and    DWORD PTR ds:0x3343fadf,0x5265ec3e
  42826d:	pop    edi
  42826e:	pop    esi
  42826f:	pop    ebx
  428270:	leave  
  428271:	ret    0x18
  428274:	push   ebp
  428275:	mov    ebp,esp
  428277:	and    esp,0xfffffff8
  42827a:	mov    eax,DWORD PTR [ebp+0x20]
  42827d:	sub    esp,0x14
  428280:	push   ebx
  428281:	mov    ebx,DWORD PTR [ebp+0x14]
  428284:	push   esi
  428285:	push   edi
  428286:	cmp    eax,0xf89c85b0
  42828b:	jne    0x428297
  42828d:	push   0xf89c85b1
  428292:	jmp    0x4283c9
  428297:	mov    eax,DWORD PTR [ebp+0x20]
  42829a:	cmp    eax,0xf89c85b1
  42829f:	jne    0x4282ab
  4282a1:	push   0xf89c85b2
  4282a6:	jmp    0x4283c9
  4282ab:	mov    eax,DWORD PTR [ebp+0x20]
  4282ae:	cmp    eax,0xf89c85b2
  4282b3:	jne    0x4282bf
  4282b5:	push   0xf89c85b3
  4282ba:	jmp    0x4283c9
  4282bf:	mov    eax,DWORD PTR [ebp+0x20]
  4282c2:	cmp    eax,0xf89c85b3
  4282c7:	jne    0x4282d3
  4282c9:	push   0xf89c85bc
  4282ce:	jmp    0x4283c9
  4282d3:	mov    ecx,DWORD PTR [ebp+0x20]
  4282d6:	mov    eax,0xf89c85bf
  4282db:	cmp    ecx,eax
  4282dd:	jne    0x428399
  4282e3:	mov    eax,DWORD PTR [ebp+0x10]
  4282e6:	mov    DWORD PTR [esp+0xc],eax
  4282ea:	mov    eax,DWORD PTR [ebp+0x18]
  4282ed:	mov    DWORD PTR [esp+0x14],eax
  4282f1:	mov    eax,DWORD PTR [ebp+0xc]
  4282f4:	mov    DWORD PTR [esp+0x18],eax
  4282f8:	mov    eax,DWORD PTR [ebp+0x8]
  4282fb:	mov    DWORD PTR [esp+0x10],eax
  4282ff:	mov    eax,DWORD PTR [esp+0x10]
  428303:	mov    ecx,DWORD PTR [esp+0x14]
  428307:	mov    edi,0x75108a4
  42830c:	xor    eax,edi
  42830e:	mov    esi,0x3272ec
  428313:	add    eax,esi
  428315:	mov    DWORD PTR [ecx],eax
  428317:	mov    eax,DWORD PTR [esp+0xc]
  42831b:	mov    eax,DWORD PTR [eax+0x194]
  428321:	mov    ecx,DWORD PTR [eax]
  428323:	mov    eax,DWORD PTR [esp+0xc]
  428327:	mov    eax,DWORD PTR [eax+0x194]
  42832d:	mov    eax,DWORD PTR [eax]
  42832f:	add    eax,DWORD PTR [ecx+0x3c]
  428332:	mov    ecx,DWORD PTR [esp+0xc]
  428336:	mov    ecx,DWORD PTR [ecx+0x1d8]
  42833c:	mov    ecx,DWORD PTR [ecx+0x14]
  42833f:	push   0x4
  428341:	push   0x3000
  428346:	push   DWORD PTR [eax+0x50]
  428349:	push   0x0
  42834b:	call   ecx
  42834d:	mov    DWORD PTR [ebx],eax
  42834f:	mov    eax,DWORD PTR [esp+0x10]
  428353:	push   DWORD PTR [esp+0xc]
  428357:	xor    eax,edi
  428359:	add    eax,esi
  42835b:	mov    DWORD PTR [esp+0x20],eax
  42835f:	lea    eax,[esp+0x20]
  428363:	push   eax
  428364:	push   ebx
  428365:	push   DWORD PTR [esp+0x20]
  428369:	push   DWORD PTR [esp+0x28]
  42836d:	push   DWORD PTR [esp+0x24]
  428371:	call   0x427d36
  428376:	mov    eax,DWORD PTR [esp+0x10]
  42837a:	mov    ecx,DWORD PTR [ebx]
  42837c:	xor    eax,edi
  42837e:	add    eax,esi
  428380:	cmp    ecx,eax
  428382:	je     0x4283e0
  428384:	mov    eax,DWORD PTR [esp+0x18]
  428388:	mov    ecx,DWORD PTR [esp+0x14]
  42838c:	xor    eax,edi
  42838e:	add    eax,esi
  428390:	imul   eax,DWORD PTR [esp+0x1c]
  428395:	mov    DWORD PTR [ecx],eax
  428397:	jmp    0x4283e0
  428399:	mov    ecx,DWORD PTR [ebp+0x20]
  42839c:	cmp    ecx,0xf89c85bc
  4283a2:	jne    0x4283ab
  4283a4:	push   0xf89c85bd
  4283a9:	jmp    0x4283c9
  4283ab:	mov    ecx,DWORD PTR [ebp+0x20]
  4283ae:	cmp    ecx,0xf89c85bd
  4283b4:	jne    0x4283bd
  4283b6:	push   0xf89c85be
  4283bb:	jmp    0x4283c9
  4283bd:	mov    ecx,DWORD PTR [ebp+0x20]
  4283c0:	cmp    ecx,0xf89c85be
  4283c6:	jne    0x4283e0
  4283c8:	push   eax
  4283c9:	push   DWORD PTR [ebp+0x1c]
  4283cc:	push   DWORD PTR [ebp+0x18]
  4283cf:	push   ebx
  4283d0:	push   DWORD PTR [ebp+0x10]
  4283d3:	push   DWORD PTR [ebp+0xc]
  4283d6:	push   DWORD PTR [ebp+0x8]
  4283d9:	call   0x428274
  4283de:	mov    DWORD PTR [ebx],eax
  4283e0:	mov    eax,DWORD PTR [ebx]
  4283e2:	pop    edi
  4283e3:	pop    esi
  4283e4:	pop    ebx
  4283e5:	mov    esp,ebp
  4283e7:	pop    ebp
  4283e8:	ret    0x1c
  4283eb:	push   ebp
  4283ec:	mov    ebp,esp
  4283ee:	sub    esp,0xc
  4283f1:	mov    eax,0xf89c85b0
  4283f6:	mov    DWORD PTR [ebp-0x8],eax
  4283f9:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  428400:	mov    ecx,DWORD PTR [ebp-0x8]
  428403:	xor    ecx,0x75108a4
  428409:	add    ecx,0x3272ec
  42840f:	mov    DWORD PTR [ebp-0x4],ecx
  428412:	mov    ecx,DWORD PTR [ebp+0xc]
  428415:	push   eax
  428416:	mov    DWORD PTR [ebp+0xc],ecx
  428419:	push   DWORD PTR [ebp+0xc]
  42841c:	lea    eax,[ebp-0x4]
  42841f:	push   DWORD PTR [ebp+0x8]
  428422:	push   eax
  428423:	push   DWORD PTR [ebp+0xc]
  428426:	push   DWORD PTR [ebp-0xc]
  428429:	push   DWORD PTR [ebp-0x8]
  42842c:	call   0x428274
  428431:	mov    DWORD PTR [ebp-0x4],eax
  428434:	mov    eax,DWORD PTR [ebp-0x4]
  428437:	leave  
  428438:	ret    0x8
