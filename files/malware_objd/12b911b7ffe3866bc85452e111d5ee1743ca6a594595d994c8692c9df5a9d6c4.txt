
12b911b7ffe3866bc85452e111d5ee1743ca6a594595d994c8692c9df5a9d6c4.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	pop    ebp
  401004:	ret    
  401005:	int3   
  401006:	int3   
  401007:	int3   
  401008:	int3   
  401009:	int3   
  40100a:	int3   
  40100b:	int3   
  40100c:	int3   
  40100d:	int3   
  40100e:	int3   
  40100f:	int3   
  401010:	push   ebp
  401011:	mov    ebp,esp
  401013:	push   ecx
  401014:	mov    DWORD PTR [ebp-0x4],0x1e4dc
  40101b:	push   0x40
  40101d:	push   0x3000
  401022:	mov    eax,DWORD PTR [ebp+0x8]
  401025:	push   eax
  401026:	push   0x0
  401028:	call   DWORD PTR ds:0x418348
  40102e:	mov    esp,ebp
  401030:	pop    ebp
  401031:	ret    
  401032:	int3   
  401033:	int3   
  401034:	int3   
  401035:	int3   
  401036:	int3   
  401037:	int3   
  401038:	int3   
  401039:	int3   
  40103a:	int3   
  40103b:	int3   
  40103c:	int3   
  40103d:	int3   
  40103e:	int3   
  40103f:	int3   
  401040:	push   ebp
  401041:	mov    ebp,esp
  401043:	pop    ebp
  401044:	ret    
  401045:	int3   
  401046:	int3   
  401047:	int3   
  401048:	int3   
  401049:	int3   
  40104a:	int3   
  40104b:	int3   
  40104c:	int3   
  40104d:	int3   
  40104e:	int3   
  40104f:	int3   
  401050:	push   ebp
  401051:	mov    ebp,esp
  401053:	sub    esp,0x8
  401056:	mov    eax,DWORD PTR [ebp+0x8]
  401059:	mov    DWORD PTR [ebp-0x4],eax
  40105c:	mov    ecx,DWORD PTR [ebp+0xc]
  40105f:	mov    DWORD PTR [ebp-0x8],ecx
  401062:	mov    edx,DWORD PTR [ebp-0x4]
  401065:	cmp    edx,DWORD PTR [ebp-0x8]
  401068:	jae    0x401071
  40106a:	mov    eax,DWORD PTR [ebp-0x4]
  40106d:	jmp    0x401074
  40106f:	jmp    0x401074
  401071:	mov    eax,DWORD PTR [ebp-0x8]
  401074:	mov    esp,ebp
  401076:	pop    ebp
  401077:	ret    
  401078:	int3   
  401079:	int3   
  40107a:	int3   
  40107b:	int3   
  40107c:	int3   
  40107d:	int3   
  40107e:	int3   
  40107f:	int3   
  401080:	push   ebp
  401081:	mov    ebp,esp
  401083:	mov    DWORD PTR ds:0x41834c,0x401800
  40108d:	pop    ebp
  40108e:	ret    
  40108f:	int3   
  401090:	push   ebp
  401091:	mov    ebp,esp
  401093:	mov    DWORD PTR ds:0x41834c,0x4173d4
  40109d:	pop    ebp
  40109e:	ret    
  40109f:	int3   
  4010a0:	push   ebp
  4010a1:	mov    ebp,esp
  4010a3:	mov    eax,DWORD PTR [ebp+0x8]
  4010a6:	mov    eax,DWORD PTR [eax-0x4]
  4010a9:	pop    ebp
  4010aa:	ret    
  4010ab:	int3   
  4010ac:	int3   
  4010ad:	int3   
  4010ae:	int3   
  4010af:	int3   
  4010b0:	push   ebp
  4010b1:	mov    ebp,esp
  4010b3:	sub    esp,0xc
  4010b6:	mov    DWORD PTR [ebp-0x4],0x0
  4010bd:	jmp    0x4010c8
  4010bf:	mov    eax,DWORD PTR [ebp-0x4]
  4010c2:	add    eax,0x1
  4010c5:	mov    DWORD PTR [ebp-0x4],eax
  4010c8:	mov    ecx,DWORD PTR [ebp-0x4]
  4010cb:	cmp    ecx,DWORD PTR [ebp+0x8]
  4010ce:	jae    0x40111f
  4010d0:	mov    edx,DWORD PTR [ebp-0x4]
  4010d3:	mov    eax,DWORD PTR [ebp+0xc]
  4010d6:	movzx  ecx,WORD PTR [eax+edx*2]
  4010da:	sar    ecx,0xc
  4010dd:	cmp    ecx,0x3
  4010e0:	jne    0x40111d
  4010e2:	mov    DWORD PTR [ebp-0xc],0xfff
  4010e9:	mov    edx,DWORD PTR [ebp-0x4]
  4010ec:	mov    eax,DWORD PTR [ebp+0xc]
  4010ef:	movzx  ecx,WORD PTR [eax+edx*2]
  4010f3:	and    ecx,DWORD PTR [ebp-0xc]
  4010f6:	add    ecx,0x43
  4010f9:	mov    DWORD PTR [ebp-0x8],ecx
  4010fc:	mov    edx,DWORD PTR [ebp+0x18]
  4010ff:	mov    eax,DWORD PTR [ebp+0x10]
  401102:	add    eax,DWORD PTR [edx]
  401104:	mov    ecx,DWORD PTR [ebp-0x8]
  401107:	mov    edx,DWORD PTR [eax+ecx*1-0x43]
  40110b:	add    edx,DWORD PTR [ebp+0x14]
  40110e:	mov    eax,DWORD PTR [ebp+0x18]
  401111:	mov    ecx,DWORD PTR [ebp+0x10]
  401114:	add    ecx,DWORD PTR [eax]
  401116:	mov    eax,DWORD PTR [ebp-0x8]
  401119:	mov    DWORD PTR [ecx+eax*1-0x43],edx
  40111d:	jmp    0x4010bf
  40111f:	mov    esp,ebp
  401121:	pop    ebp
  401122:	ret    
  401123:	int3   
  401124:	int3   
  401125:	int3   
  401126:	int3   
  401127:	int3   
  401128:	int3   
  401129:	int3   
  40112a:	int3   
  40112b:	int3   
  40112c:	int3   
  40112d:	int3   
  40112e:	int3   
  40112f:	int3   
  401130:	push   ebp
  401131:	mov    ebp,esp
  401133:	sub    esp,0x14
  401136:	mov    eax,DWORD PTR [ebp+0x8]
  401139:	cmp    DWORD PTR [eax+0x4],0x0
  40113d:	je     0x401187
  40113f:	mov    DWORD PTR [ebp-0x14],0x2a1
  401146:	mov    ecx,DWORD PTR [ebp+0x8]
  401149:	mov    edx,DWORD PTR [ecx+0x4]
  40114c:	sub    edx,0x8
  40114f:	shr    edx,1
  401151:	mov    DWORD PTR [ebp-0xc],edx
  401154:	mov    eax,DWORD PTR [ebp+0x8]
  401157:	add    eax,0x8
  40115a:	mov    DWORD PTR [ebp-0x10],eax
  40115d:	mov    ecx,DWORD PTR [ebp+0x8]
  401160:	push   ecx
  401161:	mov    edx,DWORD PTR [ebp+0x10]
  401164:	push   edx
  401165:	mov    eax,DWORD PTR [ebp+0xc]
  401168:	push   eax
  401169:	mov    ecx,DWORD PTR [ebp-0x10]
  40116c:	push   ecx
  40116d:	mov    edx,DWORD PTR [ebp-0xc]
  401170:	push   edx
  401171:	call   0x4010b0
  401176:	add    esp,0x14
  401179:	mov    eax,DWORD PTR [ebp+0x8]
  40117c:	mov    ecx,DWORD PTR [ebp+0x8]
  40117f:	add    ecx,DWORD PTR [eax+0x4]
  401182:	mov    DWORD PTR [ebp+0x8],ecx
  401185:	jmp    0x401136
  401187:	mov    esp,ebp
  401189:	pop    ebp
  40118a:	ret    
  40118b:	int3   
  40118c:	int3   
  40118d:	int3   
  40118e:	int3   
  40118f:	int3   
  401190:	push   ebp
  401191:	mov    ebp,esp
  401193:	sub    esp,0x20
  401196:	mov    DWORD PTR [ebp-0x8],0x37
  40119d:	mov    DWORD PTR [ebp-0x10],0x0
  4011a4:	jmp    0x4011af
  4011a6:	mov    eax,DWORD PTR [ebp-0x10]
  4011a9:	add    eax,0x4
  4011ac:	mov    DWORD PTR [ebp-0x10],eax
  4011af:	mov    ecx,DWORD PTR [ebp-0x10]
  4011b2:	cmp    ecx,DWORD PTR [ebp+0xc]
  4011b5:	jae    0x40125b
  4011bb:	mov    DWORD PTR [ebp-0x8],0x1425
  4011c2:	mov    DWORD PTR [ebp-0x8],0x37
  4011c9:	mov    edx,DWORD PTR [ebp-0x10]
  4011cc:	add    edx,0x1431
  4011d2:	mov    DWORD PTR ds:0x418350,edx
  4011d8:	mov    eax,DWORD PTR [ebp+0x8]
  4011db:	add    eax,DWORD PTR [ebp-0x10]
  4011de:	mov    ecx,DWORD PTR [eax]
  4011e0:	add    ecx,DWORD PTR [ebp-0x10]
  4011e3:	mov    edx,DWORD PTR [ebp+0x8]
  4011e6:	add    edx,DWORD PTR [ebp-0x10]
  4011e9:	mov    DWORD PTR [edx],ecx
  4011eb:	mov    eax,DWORD PTR [ebp-0xc]
  4011ee:	mov    DWORD PTR [ebp-0x14],eax
  4011f1:	mov    DWORD PTR [ebp-0x8],0x1425
  4011f8:	mov    ecx,DWORD PTR ds:0x418350
  4011fe:	mov    DWORD PTR [ebp-0x20],ecx
  401201:	mov    edx,DWORD PTR [ebp-0x20]
  401204:	mov    DWORD PTR [ebp-0x1c],edx
  401207:	mov    eax,DWORD PTR [ebp-0x1c]
  40120a:	mov    DWORD PTR [ebp-0x18],eax
  40120d:	cmp    DWORD PTR [ebp-0x10],0x0
  401211:	jne    0x401243
  401213:	push   0x0
  401215:	push   0x80
  40121a:	push   0x3
  40121c:	push   0x0
  40121e:	push   0x3
  401220:	push   0x1
  401222:	push   0x418354
  401227:	call   DWORD PTR ds:0x418220
  40122d:	mov    DWORD PTR [ebp-0x4],eax
  401230:	cmp    DWORD PTR [ebp-0x4],0xffffffff
  401234:	je     0x40123c
  401236:	cmp    DWORD PTR [ebp-0x4],0x0
  40123a:	jne    0x401243
  40123c:	mov    eax,0x42
  401241:	jmp    0x40125b
  401243:	mov    ecx,DWORD PTR [ebp+0x8]
  401246:	add    ecx,DWORD PTR [ebp-0x10]
  401249:	mov    edx,DWORD PTR [ecx]
  40124b:	xor    edx,DWORD PTR [ebp-0x18]
  40124e:	mov    eax,DWORD PTR [ebp+0x8]
  401251:	add    eax,DWORD PTR [ebp-0x10]
  401254:	mov    DWORD PTR [eax],edx
  401256:	jmp    0x4011a6
  40125b:	mov    esp,ebp
  40125d:	pop    ebp
  40125e:	ret    
  40125f:	int3   
  401260:	push   ebp
  401261:	mov    ebp,esp
  401263:	xor    eax,eax
  401265:	pop    ebp
  401266:	ret    0x10
  401269:	int3   
  40126a:	int3   
  40126b:	int3   
  40126c:	int3   
  40126d:	int3   
  40126e:	int3   
  40126f:	int3   
  401270:	push   ebp
  401271:	mov    ebp,esp
  401273:	sub    esp,0x2bc
  401279:	pusha  
  40127a:	mov    DWORD PTR ds:0x418458,ebp
  401280:	push   0x0
  401282:	push   0x2
  401284:	push   0x0
  401286:	push   0x0
  401288:	push   0x80000000
  40128d:	push   0x80000000
  401292:	push   0x80000000
  401297:	push   0x80000000
  40129c:	push   0xcf0000
  4012a1:	push   0x418074
  4012a6:	push   0x41806c
  4012ab:	push   0x0
  4012ad:	call   DWORD PTR ds:0x418240
  4012b3:	mov    DWORD PTR [ebp-0x28c],eax
  4012b9:	push   0x104
  4012be:	lea    eax,[ebp-0x210]
  4012c4:	push   eax
  4012c5:	call   DWORD PTR ds:0x418224
  4012cb:	mov    DWORD PTR [ebp-0x294],0x0
  4012d5:	mov    ecx,DWORD PTR ds:0x418220
  4012db:	mov    DWORD PTR [ebp-0x2a8],ecx
  4012e1:	push   0x41807c
  4012e6:	push   0x41808c
  4012eb:	call   DWORD PTR ds:0x418228
  4012f1:	push   eax
  4012f2:	call   DWORD PTR ds:0x41822c
  4012f8:	mov    DWORD PTR [ebp-0x27c],eax
  4012fe:	lea    edx,[ebp-0x258]
  401304:	push   edx
  401305:	push   0x20019
  40130a:	push   0x0
  40130c:	push   0x418338
  401311:	push   0x80000002
  401316:	call   DWORD PTR [ebp-0x27c]
  40131c:	test   eax,eax
  40131e:	je     0x401327
  401320:	xor    eax,eax
  401322:	jmp    0x4017f7
  401327:	lea    eax,[ebp-0x258]
  40132d:	push   eax
  40132e:	push   0x20019
  401333:	push   0x0
  401335:	push   0x418098
  40133a:	mov    ecx,DWORD PTR [ebp-0x258]
  401340:	push   ecx
  401341:	call   DWORD PTR [ebp-0x27c]
  401347:	test   eax,eax
  401349:	je     0x401352
  40134b:	xor    eax,eax
  40134d:	jmp    0x4017f7
  401352:	lea    edx,[ebp-0x258]
  401358:	push   edx
  401359:	push   0x20019
  40135e:	push   0x0
  401360:	push   0x4180ac
  401365:	mov    eax,DWORD PTR [ebp-0x258]
  40136b:	push   eax
  40136c:	call   DWORD PTR [ebp-0x27c]
  401372:	test   eax,eax
  401374:	je     0x40137d
  401376:	xor    eax,eax
  401378:	jmp    0x4017f7
  40137d:	lea    ecx,[ebp-0x258]
  401383:	push   ecx
  401384:	push   0x20019
  401389:	push   0x0
  40138b:	push   0x4180bc
  401390:	mov    edx,DWORD PTR [ebp-0x258]
  401396:	push   edx
  401397:	call   DWORD PTR [ebp-0x27c]
  40139d:	test   eax,eax
  40139f:	je     0x4013a8
  4013a1:	xor    eax,eax
  4013a3:	jmp    0x4017f7
  4013a8:	lea    eax,[ebp-0x258]
  4013ae:	push   eax
  4013af:	push   0x20019
  4013b4:	push   0x0
  4013b6:	push   0x41833c
  4013bb:	mov    ecx,DWORD PTR [ebp-0x258]
  4013c1:	push   ecx
  4013c2:	call   DWORD PTR [ebp-0x27c]
  4013c8:	test   eax,eax
  4013ca:	je     0x4013d3
  4013cc:	xor    eax,eax
  4013ce:	jmp    0x4017f7
  4013d3:	lea    edx,[ebp-0x258]
  4013d9:	push   edx
  4013da:	push   0x20019
  4013df:	push   0x0
  4013e1:	push   0x418340
  4013e6:	mov    eax,DWORD PTR [ebp-0x258]
  4013ec:	push   eax
  4013ed:	call   DWORD PTR [ebp-0x27c]
  4013f3:	test   eax,eax
  4013f5:	je     0x4013fe
  4013f7:	xor    eax,eax
  4013f9:	jmp    0x4017f7
  4013fe:	lea    ecx,[ebp-0x258]
  401404:	push   ecx
  401405:	push   0x20019
  40140a:	push   0x0
  40140c:	push   0x4180c8
  401411:	mov    edx,DWORD PTR [ebp-0x258]
  401417:	push   edx
  401418:	call   DWORD PTR [ebp-0x27c]
  40141e:	test   eax,eax
  401420:	je     0x401436
  401422:	push   0x104
  401427:	push   0x5
  401429:	call   DWORD PTR ds:0x418230
  40142f:	xor    eax,eax
  401431:	jmp    0x4017f7
  401436:	lea    eax,[ebp-0x258]
  40143c:	push   eax
  40143d:	push   0x20019
  401442:	push   0x0
  401444:	push   0x418344
  401449:	mov    ecx,DWORD PTR [ebp-0x258]
  40144f:	push   ecx
  401450:	call   DWORD PTR [ebp-0x27c]
  401456:	test   eax,eax
  401458:	je     0x401461
  40145a:	xor    eax,eax
  40145c:	jmp    0x4017f7
  401461:	lea    edx,[ebp-0x258]
  401467:	push   edx
  401468:	push   0x20019
  40146d:	push   0x0
  40146f:	push   0x418118
  401474:	mov    eax,DWORD PTR [ebp-0x258]
  40147a:	push   eax
  40147b:	call   DWORD PTR [ebp-0x27c]
  401481:	test   eax,eax
  401483:	je     0x40148c
  401485:	xor    eax,eax
  401487:	jmp    0x4017f7
  40148c:	lea    ecx,[ebp-0x258]
  401492:	push   ecx
  401493:	push   0x20019
  401498:	push   0x0
  40149a:	push   0x418128
  40149f:	mov    edx,DWORD PTR [ebp-0x258]
  4014a5:	push   edx
  4014a6:	call   DWORD PTR [ebp-0x27c]
  4014ac:	test   eax,eax
  4014ae:	jne    0x4014b7
  4014b0:	xor    eax,eax
  4014b2:	jmp    0x4017f7
  4014b7:	mov    DWORD PTR [ebp-0x214],0x0
  4014c1:	mov    DWORD PTR [ebp-0x288],0x64
  4014cb:	mov    DWORD PTR [ebp-0x21c],0x2
  4014d5:	mov    DWORD PTR [ebp-0x294],0x0
  4014df:	mov    DWORD PTR [ebp-0x254],0x0
  4014e9:	mov    DWORD PTR [ebp-0x284],0x1
  4014f3:	mov    DWORD PTR [ebp-0x218],0x3
  4014fd:	push   0x104
  401502:	push   0x418354
  401507:	call   DWORD PTR ds:0x418230
  40150d:	push   0x41813c
  401512:	push   0x418354
  401517:	call   DWORD PTR ds:0x418234
  40151d:	push   0x418154
  401522:	push   0x418164
  401527:	call   DWORD PTR ds:0x418238
  40152d:	push   eax
  40152e:	call   DWORD PTR ds:0x41822c
  401534:	mov    ds:0x418348,eax
  401539:	call   0x401080
  40153e:	mov    eax,ds:0x41834c
  401543:	push   eax
  401544:	call   0x4010a0
  401549:	add    esp,0x4
  40154c:	mov    DWORD PTR [ebp-0x298],eax
  401552:	mov    ecx,DWORD PTR [ebp-0x298]
  401558:	push   ecx
  401559:	call   0x401010
  40155e:	add    esp,0x4
  401561:	mov    DWORD PTR [ebp-0x290],eax
  401567:	mov    edx,DWORD PTR [ebp-0x298]
  40156d:	push   edx
  40156e:	push   0x0
  401570:	mov    eax,DWORD PTR [ebp-0x290]
  401576:	push   eax
  401577:	call   0x401040
  40157c:	add    esp,0xc
  40157f:	mov    ecx,DWORD PTR [ebp-0x298]
  401585:	mov    DWORD PTR [ebp-0x2a0],ecx
  40158b:	mov    edx,DWORD PTR [ebp-0x294]
  401591:	cmp    edx,DWORD PTR [ebp-0x298]
  401597:	jae    0x401622
  40159d:	mov    eax,DWORD PTR [ebp-0x2a0]
  4015a3:	push   eax
  4015a4:	mov    ecx,DWORD PTR [ebp-0x288]
  4015aa:	push   ecx
  4015ab:	call   0x401050
  4015b0:	add    esp,0x8
  4015b3:	mov    DWORD PTR [ebp-0x2a4],eax
  4015b9:	mov    edx,DWORD PTR [ebp-0x2a4]
  4015bf:	push   edx
  4015c0:	mov    eax,ds:0x41834c
  4015c5:	add    eax,DWORD PTR [ebp-0x254]
  4015cb:	push   eax
  4015cc:	mov    ecx,DWORD PTR [ebp-0x290]
  4015d2:	add    ecx,DWORD PTR [ebp-0x294]
  4015d8:	push   ecx
  4015d9:	call   0x41760e
  4015de:	add    esp,0xc
  4015e1:	mov    edx,DWORD PTR [ebp-0x21c]
  4015e7:	add    edx,DWORD PTR [ebp-0x288]
  4015ed:	add    edx,DWORD PTR [ebp-0x254]
  4015f3:	mov    DWORD PTR [ebp-0x254],edx
  4015f9:	mov    eax,DWORD PTR [ebp-0x294]
  4015ff:	add    eax,DWORD PTR [ebp-0x288]
  401605:	mov    DWORD PTR [ebp-0x294],eax
  40160b:	mov    ecx,DWORD PTR [ebp-0x2a0]
  401611:	sub    ecx,DWORD PTR [ebp-0x2a4]
  401617:	mov    DWORD PTR [ebp-0x2a0],ecx
  40161d:	jmp    0x40158b
  401622:	mov    edx,DWORD PTR [ebp-0x298]
  401628:	push   edx
  401629:	mov    eax,DWORD PTR [ebp-0x290]
  40162f:	push   eax
  401630:	call   0x401190
  401635:	add    esp,0x8
  401638:	mov    DWORD PTR [ebp-0x254],0x0
  401642:	mov    DWORD PTR [ebp-0x2ac],0x0
  40164c:	call   0x401090
  401651:	mov    ecx,DWORD PTR ds:0x41834c
  401657:	push   ecx
  401658:	call   0x4010a0
  40165d:	add    esp,0x4
  401660:	mov    DWORD PTR [ebp-0x2b0],eax
  401666:	mov    edx,DWORD PTR [ebp-0x2b0]
  40166c:	push   edx
  40166d:	call   0x401010
  401672:	add    esp,0x4
  401675:	mov    DWORD PTR [ebp-0x250],eax
  40167b:	mov    eax,DWORD PTR [ebp-0x2b0]
  401681:	push   eax
  401682:	push   0x0
  401684:	mov    ecx,DWORD PTR [ebp-0x250]
  40168a:	push   ecx
  40168b:	call   0x401040
  401690:	add    esp,0xc
  401693:	mov    edx,DWORD PTR [ebp-0x2b0]
  401699:	mov    DWORD PTR [ebp-0x2b8],edx
  40169f:	mov    eax,DWORD PTR [ebp-0x2ac]
  4016a5:	cmp    eax,DWORD PTR [ebp-0x2b0]
  4016ab:	jae    0x401737
  4016b1:	mov    ecx,DWORD PTR [ebp-0x2b8]
  4016b7:	push   ecx
  4016b8:	mov    edx,DWORD PTR [ebp-0x288]
  4016be:	push   edx
  4016bf:	call   0x401050
  4016c4:	add    esp,0x8
  4016c7:	mov    DWORD PTR [ebp-0x2bc],eax
  4016cd:	mov    eax,DWORD PTR [ebp-0x2bc]
  4016d3:	push   eax
  4016d4:	mov    ecx,DWORD PTR ds:0x41834c
  4016da:	add    ecx,DWORD PTR [ebp-0x254]
  4016e0:	push   ecx
  4016e1:	mov    edx,DWORD PTR [ebp-0x250]
  4016e7:	add    edx,DWORD PTR [ebp-0x2ac]
  4016ed:	push   edx
  4016ee:	call   0x41760e
  4016f3:	add    esp,0xc
  4016f6:	mov    eax,DWORD PTR [ebp-0x21c]
  4016fc:	add    eax,DWORD PTR [ebp-0x288]
  401702:	add    eax,DWORD PTR [ebp-0x254]
  401708:	mov    DWORD PTR [ebp-0x254],eax
  40170e:	mov    ecx,DWORD PTR [ebp-0x2ac]
  401714:	add    ecx,DWORD PTR [ebp-0x288]
  40171a:	mov    DWORD PTR [ebp-0x2ac],ecx
  401720:	mov    edx,DWORD PTR [ebp-0x2b8]
  401726:	sub    edx,DWORD PTR [ebp-0x2bc]
  40172c:	mov    DWORD PTR [ebp-0x2b8],edx
  401732:	jmp    0x40169f
  401737:	mov    eax,DWORD PTR [ebp-0x2b0]
  40173d:	push   eax
  40173e:	mov    ecx,DWORD PTR [ebp-0x250]
  401744:	push   ecx
  401745:	call   0x401190
  40174a:	add    esp,0x8
  40174d:	mov    edx,DWORD PTR [ebp-0x290]
  401753:	mov    eax,DWORD PTR [ebp-0x250]
  401759:	mov    DWORD PTR [edx],eax
  40175b:	push   0x17000
  401760:	call   0x401010
  401765:	add    esp,0x4
  401768:	mov    DWORD PTR [ebp-0x4],eax
  40176b:	lea    ecx,[ebp-0x258]
  401771:	push   ecx
  401772:	push   0x20019
  401777:	push   0x0
  401779:	push   0x418170
  40177e:	push   0x80000002
  401783:	call   DWORD PTR ds:0x418250
  401789:	test   eax,eax
  40178b:	je     0x401791
  40178d:	xor    eax,eax
  40178f:	jmp    0x4017f7
  401791:	push   0x15500
  401796:	mov    edx,DWORD PTR [ebp-0x290]
  40179c:	push   edx
  40179d:	mov    eax,DWORD PTR [ebp-0x4]
  4017a0:	add    eax,0x200
  4017a5:	push   eax
  4017a6:	call   0x41760e
  4017ab:	add    esp,0xc
  4017ae:	mov    ecx,DWORD PTR [ebp-0x4]
  4017b1:	sub    ecx,0x400000
  4017b7:	push   ecx
  4017b8:	mov    edx,DWORD PTR [ebp-0x4]
  4017bb:	push   edx
  4017bc:	mov    eax,DWORD PTR [ebp-0x250]
  4017c2:	push   eax
  4017c3:	call   0x401130
  4017c8:	add    esp,0xc
  4017cb:	mov    esp,DWORD PTR ds:0x418458
  4017d1:	pop    ecx
  4017d2:	mov    ecx,DWORD PTR [ebp-0x4]
  4017d5:	add    ecx,0x15350
  4017db:	mov    edx,ecx
  4017dd:	call   0x4017e2
  4017e2:	pop    eax
  4017e3:	call   0x4017e8
  4017e8:	pop    eax
  4017e9:	call   0x4017ee
  4017ee:	pop    eax
  4017ef:	call   0x4017f4
  4017f4:	pop    eax
  4017f5:	jmp    edx
  4017f7:	mov    esp,ebp
  4017f9:	pop    ebp
  4017fa:	ret    
  4017fb:	int3   
  4017fc:	add    BYTE PTR [ebp+0x1],dl
  4017ff:	add    BYTE PTR [ecx],dh
  401801:	inc    ebx
  401802:	inc    ecx
  401803:	add    BYTE PTR [esi+0x71],ch
  401806:	je     0x401858
  401808:	inc    ebx
  401809:	jnp    0x40186e
  40180b:	inc    ecx
  40180c:	dec    ebp
  40180d:	jo     0x401881
  40180f:	and    ah,BYTE PTR gs:[edi+0x0]
  401813:	add    ch,dh
  401815:	jp     0x401878
  401817:	fs in  eax,dx
  401819:	jl     0x40187d
  40181b:	jb     0x40182d
  40181d:	data16 jns 0x401865
  401820:	or     DWORD PTR [ebp+0x0],edx
  401823:	add    ch,dh
  401825:	jp     0x401888
  401827:	fs in  eax,dx
  401829:	jl     0x40188d
  40182b:	jb     0x40183d
  40182d:	data16 jns 0x401875
  401830:	jmp    0xee401877
  401835:	jo     0x4018ab
  401837:	dec    ebp
  401838:	into   
  401839:	outs   dx,DWORD PTR ds:[esi]
  40183a:	jne    0x4018a8
  40183c:	int3   
  40183d:	pop    ebx
  40183e:	popa   
  40183f:	outs   dx,BYTE PTR ds:[esi]
  401840:	aad    0x77
  401842:	gs inc ecx
  401844:	xor    DWORD PTR [eax+eax*1],edx
  401847:	add    dl,dh
  401849:	gs gs popa 
  40184c:	mov    ebp,0x9d694670
  401851:	jno    0x401894
  401853:	add    BYTE PTR [ebp-0x6d8d8b99],dl
  401859:	jne    0x4018cf
  40185b:	inc    ecx
  40185c:	xor    DWORD PTR [eax+eax*1],edx
  40185f:	add    BYTE PTR [esi+0x71],dh
  401862:	je     0x4018bb
  401864:	add    BYTE PTR [eax],al
  401866:	cwde   
  401867:	jp     0x4018cd
  401869:	outs   dx,DWORD PTR ds:[esi]
  40186a:	xchg   BYTE PTR [edi+0x44],ah
  40186d:	imul   eax,DWORD PTR [ebx+0x5e746371],0x31417966
  401877:	adc    al,0x0
  401879:	add    BYTE PTR [esi+0x71],dh
  40187c:	je     0x4018cb
  40187e:	inc    esi
  40187f:	jo     0x4018f6
  401881:	ins    BYTE PTR es:[edi],dx
  401882:	push   esp
  401883:	pop    esp
  401884:	popa   
  401885:	outs   dx,BYTE PTR ds:[esi]
  401886:	dec    ebp
  401887:	js     0x4018ee
  401889:	push   edi
  40188a:	xor    DWORD PTR [eax+eax*1],edx
  40188d:	add    BYTE PTR ds:0x45004016,ch
  401893:	push   ss
  401894:	inc    eax
  401895:	add    BYTE PTR [ebp+0x16],cl
  401898:	inc    eax
  401899:	add    BYTE PTR [ebp+0x16],ah
  40189c:	inc    eax
  40189d:	add    cl,ch
  40189f:	adc    eax,0x15e50040
  4018a4:	inc    eax
  4018a5:	add    BYTE PTR [ecx],dl
  4018a7:	push   ss
  4018a8:	inc    eax
  4018a9:	add    cl,bh
  4018ab:	adc    eax,0x70ee0040
  4018b0:	je     0x401902
  4018b2:	jecxz  0x40192e
  4018b4:	arpl   WORD PTR [ecx-0x33],ax
  4018b7:	outs   dx,DWORD PTR ds:[esi]
  4018b8:	jb     0x40191f
  4018ba:	loop   0x401922
  4018bc:	add    BYTE PTR [eax],al
  4018be:	in     eax,0x7a
  4018c0:	popa   
  4018c1:	fs std 
  4018c3:	jl     0x401927
  4018c5:	jb     0x401897
  4018c7:	gs jns 0x40190f
  4018ca:	add    BYTE PTR [eax],al
  4018cc:	mov    ecx,0xca000054
  4018d1:	jo     0x401945
  4018d3:	outs   dx,BYTE PTR ds:[esi]
  4018d4:	xchg   esp,eax
  4018d5:	js     0x40190a
  4018d7:	xor    dl,BYTE PTR [edi+0x70]
  4018da:	ins    BYTE PTR es:[edi],dx
  4018db:	ins    BYTE PTR es:[edi],dx
  4018dc:	xor    DWORD PTR [eax+eax*1],edx
  4018df:	add    BYTE PTR [ebp+eiz*2+0x60836376],al
  4018e6:	cs fs xchg ebp,eax
  4018e9:	js     0x4018eb
  4018eb:	add    BYTE PTR [edi+ebp*2+0x608c736d],cl
  4018f2:	add    BYTE PTR [eax],al
  4018f4:	pop    esp
  4018f5:	gs jbe 0x40195b
  4018f8:	arpl   WORD PTR [eax+0x2e],sp
  4018fb:	fs dec ebp
  4018fd:	js     0x4018ff
  4018ff:	add    BYTE PTR [edi+ebp*2+0x6d],al
  401903:	arpl   WORD PTR [ecx+0x6b],ax
  401906:	add    BYTE PTR [eax],al
  401908:	pop    edi
  401909:	jnp    0x40197d
  40190b:	je     0x401951
  40190d:	jae    0x40197b
  40190f:	inc    ecx
  401910:	inc    ebp
  401911:	js     0x401982
  401913:	arpl   WORD PTR [ecx],si
  401915:	adc    al,0x0
  401917:	add    bh,bh
  401919:	jp     0x40198d
  40191b:	je     0x401941
  40191d:	jae    0x40198b
  40191f:	inc    ecx
  401920:	add    eax,0x31636f78
  401925:	adc    al,0x0
  401927:	add    ah,bl
  401929:	jns    0x401998
  40192b:	popa   
  40192c:	add    DWORD PTR [edx+0x69],eax
  40192f:	add    BYTE PTR gs:[eax],al
  401932:	(bad)  
  401933:	pop    eax
  401934:	inc    si
  401936:	fdiv   DWORD PTR [edi+0x65]
  401939:	add    bh,bh
  40193b:	jp     0x4019af
  40193d:	je     0x401923
  40193f:	jb     0x4019ad
  401941:	push   eax
  401942:	jecxz  0x4019bc
  401944:	je     0x4019ab
  401946:	rcr    BYTE PTR [edi+0x0],cl
  401949:	add    cl,bh
  40194b:	outs   dx,BYTE PTR ds:[esi]
  40194c:	popa   
  40194d:	jo     0x40193f
  40194f:	ja     0x4019bd
  401951:	outs   dx,DWORD PTR ds:[esi]
  401952:	rcl    BYTE PTR [ebx],cl
  401954:	add    BYTE PTR [eax],al
  401956:	call   0x3378:0x8c6e726f
  40195d:	xor    cl,BYTE PTR [edi+0x70]
  401960:	ins    BYTE PTR es:[edi],dx
  401961:	ins    BYTE PTR es:[edi],dx
  401962:	xor    DWORD PTR [eax+eax*1],edx
  401965:	add    BYTE PTR [esi+0x6f],dh
  401968:	je     0x4019ba
  40196a:	cmp    DWORD PTR [ecx+0x63],0x65
  40196e:	and    BYTE PTR [ebp+0x48],0x65
  401972:	nop
  401973:	add    BYTE PTR fs:[eax],al
  401976:	xor    DWORD PTR [esp+eax*2],edx
  401979:	add    DWORD PTR [ecx],esi
  40197b:	mov    al,0x59
  40197d:	nop
  40197e:	xor    esi,edi
  401980:	add    eax,DWORD PTR [eax]
  401982:	xor    edi,esi
  401984:	add    eax,DWORD PTR [eax]
  401986:	xor    edx,ebp
  401988:	sti    
  401989:	add    BYTE PTR [ecx],dh
  40198b:	and    eax,DWORD PTR [ebx]
  40198d:	add    BYTE PTR [ecx],dh
  40198f:	sti    
  401990:	add    eax,DWORD PTR [eax]
  401992:	xor    DWORD PTR [ebx],edi
  401994:	add    al,0x0
  401996:	add    BYTE PTR [eax],al
  401998:	xor    ebx,edi
  40199a:	add    eax,DWORD PTR [eax]
  40199c:	xor    ebx,edi
  40199e:	add    eax,DWORD PTR [eax]
  4019a0:	xor    ebx,edi
  4019a2:	add    eax,DWORD PTR [eax]
  4019a4:	xor    ebx,edi
  4019a6:	add    eax,DWORD PTR [eax]
  4019a8:	xor    ebx,edi
  4019aa:	add    eax,DWORD PTR [eax]
  4019ac:	xor    ebx,edi
  4019ae:	add    eax,DWORD PTR [eax]
  4019b0:	xor    ebx,edi
  4019b2:	add    eax,DWORD PTR [eax]
  4019b4:	xor    ebx,edi
  4019b6:	add    eax,DWORD PTR [eax]
  4019b8:	xor    DWORD PTR [ebx+0x4],edi
  4019bb:	add    BYTE PTR [ecx],dh
  4019bd:	icebp  
  4019be:	sbb    bh,BYTE PTR [edx+0x9affb2f]
  4019c4:	fstp   TBYTE PTR fs:[ebx+0x25b7fd01]
  4019cb:	push   esp
  4019cc:	fst    DWORD PTR [ebx]
  4019ce:	ja     0x4019f0
  4019d0:	shr    esp,0x6a
  4019d3:	addr16 ret 
  4019d5:	fld    TBYTE PTR [eax+0x20]
  4019d8:	xchg   edx,eax
  4019d9:	fsubr  QWORD PTR [ecx+0x6e]
  4019dc:	xchg   esi,eax
  4019dd:	leave  
  4019de:	and    esp,DWORD PTR [edx-0x6c]
  4019e1:	sbb    eax,0x1d877576
  4019e6:	ins    DWORD PTR es:[edi],dx
  4019e7:	outs   dx,BYTE PTR ds:[esi]
  4019e8:	push   ecx
  4019e9:	mov    cl,0x4a
  4019eb:	push   ebx
  4019ec:	push   ecx
  4019ed:	shr    BYTE PTR [edx+0x64],1
  4019f0:	xchg   esp,eax
  4019f1:	out    0x8,eax
  4019f3:	or     eax,0x3cd142b
  4019f8:	xor    DWORD PTR [ecx+ebp*8],edx
  4019fb:	add    eax,DWORD PTR [eax]
  4019fd:	add    BYTE PTR [ecx],dh
  4019ff:	adc    al,0xb9
  401a01:	inc    eax
  401a02:	xor    DWORD PTR [ebx*4-0x3ebcdfc],edx
  401a09:	fisttp QWORD PTR [edx+0x57]
  401a0c:	jmp    0xe9544b14
  401a11:	add    esi,DWORD PTR [ecx]
  401a13:	adc    al,0x9
  401a15:	add    al,0x26
  401a17:	adc    eax,0x223304f2
  401a1c:	jmp    0xe9544c1a
  401a21:	dec    ebp
  401a22:	xor    DWORD PTR [ecx+ebp*8],edx
  401a25:	add    esi,DWORD PTR [ecx]
  401a27:	adc    al,0x55
  401a29:	in     eax,dx
  401a2a:	xor    DWORD PTR [ecx+ebp*8],edx
  401a2d:	adc    esi,DWORD PTR [ecx]
  401a2f:	adc    al,0xe9
  401a31:	adc    esi,DWORD PTR [eax]
  401a33:	adc    al,0xe9
  401a35:	add    esi,ecx
  401a37:	adc    ebp,ecx
  401a39:	adc    esi,DWORD PTR [ecx]
  401a3b:	adc    al,0xe9
  401a3d:	add    eax,0x3ed1431
  401a42:	xor    DWORD PTR [ecx+ebp*8],edx
  401a45:	add    esi,DWORD PTR [ecx]
  401a47:	adc    al,0xed
  401a49:	add    esi,DWORD PTR [ecx]
  401a4b:	adc    al,0xe9
  401a4d:	add    esi,DWORD PTR [ecx]
  401a4f:	adc    al,0xe9
  401a51:	jae    0x401a83
  401a53:	adc    al,0xe9
  401a55:	add    eax,0xd8e61431
  401a5a:	xor    BYTE PTR [ebx+ebp*8],dl
  401a5d:	add    esi,DWORD PTR [ecx]
  401a5f:	adc    al,0xe9
  401a61:	add    eax,DWORD PTR [eax]
  401a63:	add    BYTE PTR [ecx+0x14],al
  401a66:	jmp    0xe9544b7e
  401a6b:	add    esp,DWORD PTR [ecx]
  401a6d:	adc    al,0xe9
  401a6f:	adc    esi,DWORD PTR [ecx]
  401a71:	adc    al,0x0
  401a73:	jmp    0xd9402eaa
  401a78:	xor    dl,BYTE PTR [eax+eax*1]
  401a7b:	jmp    0xe9402eb2
  401a80:	xor    dl,BYTE PTR [eax+eax*1]
  401a83:	leave  
  401a84:	adc    DWORD PTR ds:0x14322100,0x0
  401a8b:	jmp    0xe9402ec2
  401a90:	xor    dl,BYTE PTR [eax+eax*1]
  401a93:	jmp    0xe9402eca
  401a98:	xor    dl,BYTE PTR [eax+eax*1]
  401a9b:	jmp    0xe9402ed2
  401aa0:	xor    dl,BYTE PTR [eax+eax*1]
  401aa3:	jmp    0xe9402eda
  401aa8:	xor    dl,BYTE PTR [eax+eax*1]
  401aab:	jmp    0xe9402ee2
  401ab0:	xor    dl,BYTE PTR [eax+eax*1]
  401ab3:	jmp    0xe9402eea
  401ab8:	xor    dl,BYTE PTR [eax+eax*1]
  401abb:	jmp    0xe9402ef2
  401ac0:	xor    dl,BYTE PTR [eax+eax*1]
  401ac3:	jmp    0xe9402efa
  401ac8:	add    BYTE PTR [eax],al
  401aca:	xor    dl,BYTE PTR [eax+eax*1]
  401acd:	jmp    0xe9402f04
  401ad2:	xor    dl,BYTE PTR [eax+eax*1]
  401ad5:	jmp    0xe9402f0c
  401ada:	xor    dl,BYTE PTR [eax+eax*1]
  401add:	fisttp QWORD PTR [ebx+0x326d0013]
  401ae3:	adc    al,0x0
  401ae5:	jmp    0xe9402f1c
  401aea:	xor    dl,BYTE PTR [eax+eax*1]
  401aed:	add    BYTE PTR [eax],bl
  401aef:	adc    al,BYTE PTR [eax]
  401af1:	add    BYTE PTR [eax],bl
  401af3:	adc    al,BYTE PTR [eax]
  401af5:	add    BYTE PTR [eax],cl
  401af7:	adc    al,BYTE PTR [eax]
  401af9:	add    BYTE PTR [eax],cl
  401afb:	adc    al,BYTE PTR [eax]
  401afd:	add    BYTE PTR [esi],al
  401aff:	jbe    0x401b66
  401b01:	js     0x401abf
  401b03:	adc    DWORD PTR [eax],eax
  401b05:	add    BYTE PTR [ebx-0x23],dl
  401b08:	add    BYTE PTR [eax],al
  401b0a:	enter  0x1,0x0
  401b0e:	fsubr  st,st(3)
  401b10:	add    BYTE PTR [eax],al
  401b12:	fmul   DWORD PTR [edi]
  401b14:	add    BYTE PTR [eax],al
  401b16:	enter  0x11,0x0
  401b1a:	enter  0x11,0x0
  401b1e:	cwde   
  401b1f:	adc    DWORD PTR [eax],eax
  401b21:	add    BYTE PTR [eax],bh
  401b23:	adc    BYTE PTR [eax],al
  401b25:	pusha  
  401b26:	ss pop esi
  401b28:	fs popa 
  401b2a:	cld    
  401b2b:	jo     0x401b2d
  401b2d:	add    BYTE PTR [eax],al
  401b2f:	add    BYTE PTR [eax-0x67ffffee],bl
  401b35:	add    DWORD PTR [ecx],eax
  401b37:	add    BYTE PTR [eax-0x77fffff1],cl
  401b3d:	adc    DWORD PTR [ecx],eax
  401b3f:	add    BYTE PTR [eax+0x11],bl
  401b42:	add    BYTE PTR [eax],al
  401b44:	pop    eax
  401b45:	adc    DWORD PTR [eax],eax
  401b47:	add    BYTE PTR [eax+0x11],cl
  401b4a:	add    BYTE PTR [eax],al
  401b4c:	or     BYTE PTR [eax],dl
  401b4e:	add    BYTE PTR [eax+0x66],al
  401b51:	inc    ebp
  401b52:	popa   
  401b53:	je     0x401b8e
  401b55:	adc    BYTE PTR [eax],al
  401b57:	add    BYTE PTR [eax],al
  401b59:	push   ebx
  401b5a:	add    BYTE PTR [eax],al
  401b5c:	dec    eax
  401b5d:	xor    DWORD PTR [ecx],eax
  401b5f:	add    BYTE PTR [eax],bl
  401b61:	dec    edi
  401b62:	add    BYTE PTR [eax],al
  401b64:	sbb    BYTE PTR [edi],cl
  401b66:	add    DWORD PTR [eax],eax
  401b68:	xor    ebx,edi
  401b6a:	add    eax,DWORD PTR [eax]
  401b6c:	xor    ebx,edi
  401b6e:	add    eax,DWORD PTR [eax]
  401b70:	xor    ebx,edi
  401b72:	add    eax,DWORD PTR [eax]
  401b74:	xor    DWORD PTR [ebx-0x50efffd],edi
  401b7a:	add    eax,DWORD PTR [eax]
  401b7c:	xor    ebx,edi
  401b7e:	add    eax,DWORD PTR [eax]
  401b80:	xor    ebx,edi
  401b82:	add    eax,DWORD PTR [eax]
  401b84:	xor    ebx,edi
  401b86:	add    eax,DWORD PTR [eax]
  401b88:	xor    DWORD PTR [eax-0x37b61374],ebp
  401b8e:	adc    eax,DWORD PTR [eax+0x31]
  401b91:	adc    esi,DWORD PTR [ebp+0x1]
  401b94:	add    BYTE PTR [eax],al
  401b96:	repnz in eax,0xf7
  401b99:	jne    0x401bc4
  401b9b:	xchg   ecx,eax
  401b9c:	add    ch,BYTE PTR [edx+0x31]
  401b9f:	adc    edi,DWORD PTR [edx+ebx*8-0x3d3304cf]
  401ba6:	sub    eax,0x8d8b50fb
  401bab:	push   edx
  401bac:	sub    dl,BYTE PTR [eax]
  401bae:	icebp  
  401baf:	cli    
  401bb0:	sti    
  401bb1:	jb     0x401be3
  401bb3:	mov    edx,0xe30483f7
  401bb8:	add    esi,DWORD PTR [edx+ebp*1+0x72]
  401bbc:	push   ecx
  401bbd:	or     BYTE PTR [edx+0x3975f6c8],ch
  401bc3:	scas   al,BYTE PTR es:[edi]
  401bc4:	push   edx
  401bc5:	or     BYTE PTR [eax-0x48],bh
  401bc8:	add    BYTE PTR [eax],al
  401bca:	add    al,0x72
  401bcc:	call   0x6cc28954
  401bd1:	dec    edi
  401bd2:	and    DWORD PTR [ebx],edi
  401bd4:	add    al,0xf8
  401bd6:	ret    
  401bd7:	sti    
  401bd8:	ret    0x3eff
  401bdb:	out    0x7,eax
  401bdd:	(bad)  
  401bde:	in     al,dx
  401bdf:	bound  edi,QWORD PTR [edi-0x16ead2bb]
  401be5:	add    esi,DWORD PTR [ecx]
  401be7:	adc    al,0x72
  401be9:	push   ecx
  401bea:	sub    DWORD PTR [edi-0x1cce9605],ecx
  401bf0:	aam    0x13
  401bf2:	push   cs
  401bf3:	push   0x45
  401bf5:	idiv   DWORD PTR [esp+ebx*8+0x3e]
  401bf9:	jno    0x401bfb
  401bfb:	add    BYTE PTR [ecx],ch
  401bfd:	jecxz  0x401b9a
  401bff:	psubsb mm2,mm6
  401c02:	fld    QWORD PTR [ebx]
  401c04:	test   BYTE PTR [edi-0x23127ceb],cl
  401c0a:	xchg   ecx,eax
  401c0b:	jge    0x401c4e
  401c0d:	push   esp
  401c0e:	jmp    0x2a55800e
  401c13:	div    esi
  401c15:	pop    ecx
  401c16:	add    DWORD PTR [ecx+esi*1],eax
  401c19:	adc    al,0xe9
  401c1b:	mov    esi,0x3e9e074
  401c20:	xor    DWORD PTR [edx+eiz*2],edx
  401c23:	push   ecx
  401c24:	cmp    DWORD PTR [edi-0x24137705],ecx
  401c2a:	cmp    DWORD PTR [edx+0x33],ebp
  401c2d:	jecxz  0x401c8b
  401c2f:	clc    
  401c30:	xchg   esi,eax
  401c31:	imul   edx,ecx,0xc60c04f6
  401c37:	push   ecx
  401c38:	sbb    eax,0x68fc248f
  401c3d:	(bad)  
  401c3e:	in     eax,dx
  401c3f:	add    ebx,esp
  401c41:	mov    ?,WORD PTR [ebp+0x11dc7582]
  401c47:	ret    0x5441
  401c4a:	jmp    0xaa55004a
  401c4f:	imul   BYTE PTR [esi+0x59]
  401c52:	xchg   ecx,eax
  401c53:	add    esi,DWORD PTR [ecx]
  401c55:	adc    al,0xe9
  401c57:	mov    esi,0x3e9dfec
  401c5c:	xor    DWORD PTR [eax+eax*1],edx
  401c5f:	bound  eax,QWORD PTR [eax]
  401c61:	add    cl,ah
  401c63:	or     ecx,DWORD PTR [ebx-0x7a74625]
  401c69:	mov    ecx,0xd4ff1598
  401c6e:	es jecxz 0x401ce6
  401c71:	push   ecx
  401c72:	pop    ds
  401c73:	imul   ecx,DWORD PTR [eax],0xff08604e
  401c79:	mov    esp,0x3e87ec3a
  401c7e:	pop    es
  401c7f:	jecxz  0x401cd1
  401c81:	bound  esp,QWORD PTR [ecx+0xc]
  401c84:	mov    ebx,ebx
  401c86:	pop    eax
  401c87:	adc    al,0x6a
  401c89:	jmp    0x1f3c856d
  401c8e:	popa   
  401c8f:	fdiv   st(7),st
  401c91:	pushf  
  401c92:	sub    ah,bl
  401c94:	push   edx
  401c95:	cmc    
  401c96:	push   0xffffff8f
  401c98:	push   ebp
  401c99:	add    DWORD PTR [ebx],esi
  401c9b:	dec    ecx
  401c9c:	or     al,0xc2
  401c9e:	loop   0x401d09
  401ca0:	push   es
  401ca1:	ret    0xccf2
  401ca4:	ret    0x32e1
  401ca7:	pushf  
  401ca8:	add    ecx,ebp
  401caa:	xor    dl,BYTE PTR [ecx+ecx*8]
  401cad:	stos   DWORD PTR es:[edi],eax
  401cae:	sub    eax,0x89625514
  401cb3:	xchg   esi,eax
  401cb4:	(bad)  
  401cb5:	int    0x1d
  401cb7:	xor    edx,DWORD PTR [ecx]
  401cb9:	sub    DWORD PTR ds:0x71e872dc,ebp
  401cbf:	loop   0x401cc0
  401cc1:	cmp    al,0x1d
  401cc3:	jecxz  0x401d3a
  401cc5:	loope  0x401cc7
  401cc7:	add    BYTE PTR [edx+0x5b],bl
  401cca:	jmp    DWORD PTR [esi+0x14c00e5c]
  401cd0:	xor    ebp,ecx
  401cd2:	ret    0x32e5
  401cd5:	(bad)  
  401cd6:	push   ebp
  401cd7:	loope  0x401c92
  401cd9:	add    eax,0xdc15008d
  401cde:	push   eax
  401cdf:	inc    DWORD PTR [ebp+0x6]
  401ce2:	push   DWORD PTR [ebp+0x4c]
  401ce5:	out    0x75,eax
  401ce7:	or     BYTE PTR [edi+0x58850c46],bl
  401ced:	pusha  
  401cee:	adc    ecx,DWORD PTR [ebx+0x453be9d5]
  401cf4:	sbb    BYTE PTR [ebx+0x7],dh
  401cf7:	mov    eax,0x1619
  401cfc:	arpl   dx,sp
  401cfe:	sub    al,al
  401d00:	arpl   WORD PTR [esi],dx
  401d02:	sub    eax,eax
  401d04:	push   ecx
  401d05:	(bad)  
  401d06:	or     al,0x0
  401d08:	lds    ecx,FWORD PTR [esp+ebp*8+0x56dc1483]
  401d0f:	push   0x400555
  401d14:	inc    eax
  401d15:	add    bx,ax
  401d18:	aas    
  401d19:	xchg   ebx,eax
  401d1a:	jge    0x401d28
  401d1c:	fdiv   DWORD PTR [ecx+0x6]
  401d1f:	cmp    DWORD PTR ds:0xc775000d,0x2c
  401d26:	rcr    BYTE PTR [esi+0x51],0xd6
  401d2a:	or     al,0x0
  401d2c:	add    BYTE PTR [eax],al
  401d2e:	sbb    ebp,DWORD PTR [edx+0x10]
  401d31:	add    BYTE PTR ds:0x8801b80e,al
  401d37:	adc    eax,0xd3d15e00
  401d3c:	or     al,0x0
  401d3e:	add    esi,DWORD PTR [edx+0xc]
  401d41:	(bad)  
  401d42:	push   ebp
  401d43:	fadd   QWORD PTR [eax]
  401d45:	add    BYTE PTR [eax+0x50558b15],cl
  401d4b:	mov    WORD PTR [edx],ss
  401d4d:	lea    edx,ds:0x45ff50dc
  401d53:	or     BYTE PTR [esi-0x1],dl
  401d56:	xor    DWORD PTR [eax],eax
  401d58:	or     al,0xff
  401d5a:	jecxz  0x401d36
  401d5c:	jle    0x401d1e
  401d5e:	enter  0x28f1,0xc0
  401d62:	fbld   TBYTE PTR [ebx+0x6e310cc1]
  401d68:	jbe    0x401d66
  401d6a:	xor    eax,ebp
  401d6c:	cld    
  401d6d:	sub    dh,cl
  401d6f:	fmul   st,st(2)
  401d71:	ret    0xeb2d
  401d74:	mov    BYTE PTR [ebp+0x15],al
  401d77:	out    dx,al
  401d78:	repz sub DWORD PTR [ebx+ebx*8+0x6e],esi
  401d7d:	(bad)  
  401d7e:	leave  
  401d7f:	jmp    0x401d84
  401d81:	add    BYTE PTR [ecx],dh
  401d83:	or     edx,0x4eeb25c2
  401d89:	mov    ebx,ebp
  401d8b:	imul   edi,DWORD PTR [edi-0xbc62908],0x68
  401d92:	add    BYTE PTR [eax],al
  401d94:	xor    eax,0xd90043dd
  401d99:	jl     0x401d9d
  401d9b:	ret    
  401d9c:	into   
  401d9d:	xchg   esp,eax
  401d9e:	add    ebp,DWORD PTR [edx+0x31]
  401da1:	test   DWORD PTR [eax],eax
  401da3:	push   0x31
  401da5:	test   DWORD PTR [eax],eax
  401da7:	push   0x8003eb31
  401dac:	scas   al,BYTE PTR es:[edi]
  401dad:	addr16 or ebp,eax
  401db0:	mov    al,0xa1
  401db2:	add    al,0x0
  401db4:	test   al,0x37
  401db6:	lock inc eax
  401db8:	sbb    al,0xef
  401dba:	mov    esp,0x5deb39c2
  401dbf:	add    BYTE PTR [edi+ebp*1-0x14f6af14],dh
  401dc6:	adc    eax,DWORD PTR [eax]
  401dc8:	xor    DWORD PTR [eax-0x77],edi
  401dcb:	clc    
  401dcc:	pop    esi
  401dcd:	mov    cl,0xf3
  401dcf:	push   eax
  401dd0:	adc    bx,WORD PTR [eax+esi*8]
  401dd4:	dec    ecx
  401dd5:	je     0x401d8d
  401dd7:	add    al,0x31
  401dd9:	or     eax,0xe13f79a9
  401dde:	adc    al,0xf0
  401de0:	pop    ecx
  401de1:	ds sahf 
  401de3:	add    al,0x31
  401de5:	sub    eax,0xb73bda9
  401dea:	jmp    0x5d1cc2e1
  401def:	mov    DWORD PTR [ecx],ebp
  401df1:	lock repz sbb di,0xffd4
  401df8:	add    BYTE PTR [eax],al
  401dfa:	push   cs
  401dfb:	push   es
  401dfc:	push   esi
  401dfd:	repz push cs
  401dff:	xchg   esp,eax
  401e00:	int3   
  401e01:	jmp    0x401e34
  401e03:	imul   eax,DWORD PTR [ebp+0x51e084f3],0xe914de3b
  401e0d:	stos   DWORD PTR es:[edi],eax
  401e0e:	xor    BYTE PTR [ecx+ebp*8],dl
  401e11:	add    edi,eax
  401e13:	shl    cl,cl
  401e15:	add    eax,DWORD PTR [ebx+ecx*4+0x2ae5c0d]
  401e1c:	test   eax,0xe862c903
  401e21:	mov    dh,0x6a
  401e24:	jmp    0x401e83
  401e26:	xor    edi,ebx
  401e28:	je     0x401e25
  401e2a:	into   
  401e2b:	mov    al,0xf4
  401e2d:	repnz scas al,BYTE PTR es:[edi]
  401e2f:	int    0x2b
  401e31:	or     BYTE PTR [ecx],dh
  401e33:	dec    ecx
  401e34:	jb     0x401e15
  401e36:	or     DWORD PTR [eax-0x23cebc05],edi
  401e3c:	pop    ebx
  401e3d:	add    eax,0x443df72
  401e42:	sbb    edx,DWORD PTR [esi+eax*8]
  401e45:	js     0x401e70
  401e47:	in     al,dx
  401e48:	outs   dx,BYTE PTR ds:[esi]
  401e49:	lock jbe 0x401e2b
  401e4c:	add    BYTE PTR [eax+0x14001874],ah
  401e52:	out    0xef,al
  401e54:	sub    DWORD PTR [ebp-0x43b93b6],0xfffffff2
  401e5b:	adc    edi,eax
  401e5d:	sbb    eax,DWORD PTR [eax]
  401e5f:	add    BYTE PTR [ebx+edx*8],dh
  401e62:	dec    DWORD PTR [esi+0x2c8f0fc9]
  401e68:	dec    ebp
  401e69:	xlat   BYTE PTR ds:[ebx]
  401e6a:	inc    ebp
  401e6b:	jge    0x401e9f
  401e6d:	adc    al,0x0
  401e6f:	jmp    0xf53f3300
  401e74:	fidiv  WORD PTR es:[ebp-0xf]
  401e78:	cli    
  401e79:	je     0x401e78
  401e7b:	pop    esi
  401e7c:	and    ecx,DWORD PTR [ebx+0x28fe155]
  401e82:	call   esp
  401e84:	push   ss
  401e85:	fbstp  TBYTE PTR [ebp+0x41]
  401e88:	add    ebp,DWORD PTR [ecx+0x8]
  401e8b:	ds pop esp
  401e8d:	cld    
  401e8e:	enter  0xea2b,0xde
  401e92:	push   esp
  401e93:	bound  eax,QWORD PTR [esi]
  401e95:	ins    BYTE PTR es:[edi],dx
  401e96:	add    dl,bh
  401e98:	jb     0x401eae
  401e9a:	clc    
  401e9b:	fwait
  401e9c:	sub    eax,0x3283ffd3
  401ea1:	fbstp  TBYTE PTR [ebp-0x1f]
  401ea4:	jmp    0xc2cc:0xc306ffa9
  401eab:	in     eax,0x32
  401ead:	dec    ecx
  401eae:	mov    eax,DWORD PTR ds:0x6a14492f
  401eb4:	push   esp
  401eb5:	adc    al,0x75
  401eb7:	in     eax,dx
  401eb8:	fcmovnbe st,st(1)
  401eba:	adc    cl,ch
  401ebc:	mov    eax,ds:0x6d61068
  401ec1:	adc    bh,bh
  401ec3:	push   esp
  401ec4:	add    BYTE PTR [eax],al
  401ec6:	test   esi,esi
  401ec8:	hlt    
  401ec9:	add    BYTE PTR [ebp-0x1c],dh
  401ecc:	dec    DWORD PTR [ebx+0x220fc1d]
  401ed2:	xchg   ecx,eax
  401ed3:	aad    0x10
  401ed5:	add    BYTE PTR ds:0x8c83ec61,bh
  401edb:	jecxz  0x401edc
  401edd:	jne    0x401f23
  401edf:	inc    eax
  401ee0:	add    al,0x8d
  401ee2:	sbb    eax,0x1dff50e4
  401ee7:	loopne 0x401ed0
  401ee9:	ret    
  401eea:	mov    bh,0xe4
  401eec:	dec    DWORD PTR [ebx+0x3883140d]
  401ef2:	sbb    BYTE PTR [esi+0x7],ah
  401ef5:	mov    ecx,DWORD PTR [ebp-0x1c]
  401ef8:	bswap  eax
  401efa:	adc    DWORD PTR [esi],0x2b
  401efd:	shl    BYTE PTR [ecx-0x2a],0x8
  401f01:	add    ch,cl
  401f03:	pusha  
  401f04:	in     al,dx
  401f05:	or     DWORD PTR [esp+eiz*8-0x1],0x75
  401f0a:	add    al,0x40
  401f0c:	add    cl,BYTE PTR [ebp-0xaf1c33]
  401f12:	lods   eax,DWORD PTR ds:[esi]
  401f13:	(bad)  
  401f15:	xchg   edi,eax
  401f16:	pop    ss
  401f17:	jecxz  0x401f18
  401f19:	mov    ecx,DWORD PTR [ebp-0x37c77d23]
  401f1f:	or     BYTE PTR gs:[edi],cl
  401f22:	outs   dx,DWORD PTR ds:[esi]
  401f23:	push   ebp
  401f24:	inc    BYTE PTR [esi+0x2b02bf0c]
  401f2a:	add    BYTE PTR [eax],al
  401f2c:	or     BYTE PTR [ecx+0x46c808c2],bl
  401f32:	mov    ebp,esp
  401f34:	sbb    ecx,esp
  401f36:	cld    
  401f37:	call   FWORD PTR ds:0x250169dd
  401f3d:	push   esi
  401f3e:	call   DWORD PTR [eax+0x77]
  401f41:	data16 or al,ch
  401f44:	xor    DWORD PTR [ecx-0xf],edx
  401f47:	inc    DWORD PTR [esi-0x4df3b98e]
  401f4d:	adc    eax,DWORD PTR [esp+esi*2]
  401f50:	das    
  401f51:	out    dx,al
  401f52:	mov    ecx,0x5d26e45
  401f57:	sub    esi,DWORD PTR [ecx-0x4c]
  401f5a:	lds    ecx,FWORD PTR [eax]
  401f5c:	xor    DWORD PTR [eax],esp
  401f5e:	jge    0x401f4c
  401f60:	stos   BYTE PTR es:[edi],al
  401f61:	sub    BYTE PTR [ebx+eax*4],dl
  401f64:	or     ebp,ebx
  401f66:	jbe    0x401f6c
  401f68:	js     0x401f13
  401f6a:	(bad)  
  401f6b:	(bad)  
  401f6c:	aas    
  401f6d:	loopne 0x401f6e
  401f6f:	(bad)  
  401f70:	mov    esp,0x2de0dbe2
  401f75:	lock or si,cx
  401f79:	out    0xfc,eax
  401f7b:	mov    al,BYTE PTR [ebx+ebx*8-0x14cefd38]
  401f82:	add    eax,DWORD PTR [eax]
  401f84:	sbb    bh,al
  401f86:	pop    ebp
  401f87:	add    DWORD PTR [esi],eax
  401f89:	enter  0xfeff,0x84
  401f8d:	jecxz  0x401f6a
  401f8f:	push   ecx
  401f90:	add    BYTE PTR [eax],al
  401f92:	cmc    
  401f93:	sbb    eax,0xf6f3c9f0
  401f98:	add    edx,DWORD PTR [ebp-0x46]
  401f9b:	push   ds
  401f9c:	test   ah,al
  401f9e:	fstp   QWORD PTR [esp+edi*2+0x3812575]
  401fa5:	lea    esi,[edi+eax*1+0x53]
  401fa9:	(bad)  
  401faa:	cmp    al,0xdb
  401fac:	pop    ecx
  401fad:	inc    DWORD PTR [ebx+eiz*8-0x25]
  401fb1:	mov    al,ds:0xb03eadc
  401fb6:	jno    0x402016
  401fb8:	or     DWORD PTR [ebx+0x7502ef24],eax
  401fbe:	ss adc al,0x12
  401fc1:	(bad)  
  401fc2:	test   edx,0x893100ab
  401fc8:	sub    al,0xf0
  401fca:	xor    ah,ah
  401fcc:	add    BYTE PTR [ecx+0x21],cl
  401fcf:	addr16 call 0xf03:0xe91430ac
  401fd7:	retf   
  401fd8:	stos   DWORD PTR es:[edi],eax
  401fd9:	add    BYTE PTR [ecx],dh
  401fdb:	inc    edi
  401fdc:	(bad)  
  401fdd:	loopne 0x401f8f
  401fdf:	xlat   BYTE PTR ds:[ebx]
  401fe0:	and    edi,ebp
  401fe2:	push   esi
  401fe3:	fdivr  QWORD PTR [edx]
  401fe5:	sbb    ebp,DWORD PTR [edx+0x69]
  401fe8:	jmp    0xebaa5146
  401fed:	pop    ecx
  401fee:	xor    DWORD PTR [edx-0x16],ebp
  401ff1:	pop    ebx
  401ff2:	xor    DWORD PTR [ecx+ebp*8],edx
  401ff5:	ret    
  401ff6:	add    BYTE PTR [eax],al
  401ff8:	cs (bad) 
  401ffa:	in     eax,0xdb
  401ffc:	outs   dx,DWORD PTR ds:[esi]
  401ffd:	shr    ecx,0x3
  402000:	test   al,0x51
  402002:	gs inc esp
  402004:	popf   
  402005:	inc    edi
  402006:	pop    esi
  402007:	jns    0x402042
  402009:	in     al,dx
  40200a:	sbb    ch,dh
  40200c:	push   es
  40200d:	fsub   QWORD PTR [esi]
  40200f:	dec    ecx
  402010:	stc    
  402011:	adc    al,0xe9
  402013:	add    esi,DWORD PTR [ecx]
  402015:	(bad)  
  402016:	xchg   esp,eax
  402017:	sti    
  402018:	mov    ebx,0xe9496406
  40201d:	inc    esp
  40201e:	rol    DWORD PTR [ebx-0x7f16ebcf],0xac
  402025:	pop    esp
  402026:	push   ds
  402027:	out    dx,eax
  402028:	into   
  402029:	inc    esp
  40202a:	push   ss
  40202b:	jns    0x402066
  40202d:	fstp   TBYTE PTR [ebx+0x159b3ff]
  402033:	add    al,0x3c
  402035:	pop    ss
  402036:	stos   BYTE PTR es:[edi],al
  402037:	fimul  DWORD PTR [ecx-0x25]
  40203a:	add    BYTE PTR [edx+ebx*4-0x77],bh
  40203e:	test   DWORD PTR [ecx-0x71],esi
  402041:	(bad)  
  402043:	cmp    DWORD PTR [esi-0x1a2e039f],eax
  402049:	(bad)  
  40204b:	(bad)  
  40204c:	mov    ebx,DWORD PTR [ebx-0x66a4148c]
  402052:	(bad)  
  402053:	cmp    al,0x81
  402055:	in     al,dx
  402056:	stc    
  402057:	xchg   ebp,eax
  402058:	xor    dl,BYTE PTR [ebx+ecx*4]
  40205b:	stos   BYTE PTR es:[edi],al
  40205c:	add    BYTE PTR [eax],al
  40205e:	sti    
  40205f:	int3   
  402060:	ret    0x32e1
  402063:	inc    ecx
  402064:	mov    edx,DWORD PTR [ebp-0x61072f4d]
  40206a:	leave  
  40206b:	pop    es
  40206c:	call   0x1b7bcc
  402071:	pusha  
  402072:	jmp    0x416ce852
  402077:	adc    al,0x0
  402079:	jmp    0xe5b5fbb0
  40207e:	or     dl,ch
  402080:	std    
  402081:	outs   dx,BYTE PTR ds:[esi]
  402082:	jg     0x6dc15dd
  402088:	push   0xffffffe9
  40208a:	push   0x16dcff14
  40208f:	(bad)  [ebp+0x51]
  402092:	punpcklwd mm1,DWORD PTR [eax]
  402095:	inc    esi
  402096:	jns    0x4020a0
  402098:	call   FWORD PTR [ebx-0x1e3d32c2]
  40209e:	xor    al,BYTE PTR [ecx-0x75]
  4020a1:	cmp    eax,0x2ef8cfb3
  4020a6:	imul   ebx,esp,0x1432e900
  4020ac:	(bad)  
  4020ad:	lods   al,BYTE PTR ds:[esi]
  4020ae:	(bad)  
  4020af:	adc    eax,DWORD PTR [eax]
  4020b1:	jmp    0x95afe8
  4020b6:	rcr    BYTE PTR [ebp+0x12],0x8d
  4020ba:	aad    0xee
  4020bc:	push   eax
  4020bd:	push   0xffffff99
  4020bf:	jmp    0x411d39
  4020c4:	(bad)  
  4020c5:	(bad)  
  4020c6:	clc    
  4020c7:	push   ebp
  4020c9:	xlat   BYTE PTR ds:[ebx]
  4020ca:	(bad)  
  4020cb:	push   edx
  4020cc:	test   BYTE PTR [ebx+0x45],bl
  4020cf:	clc    
  4020d0:	rcl    ebp,1
  4020d2:	add    al,0x0
  4020d4:	inc    ebp
  4020d5:	pop    ebp
  4020d6:	in     al,dx
  4020d7:	push   0xffffff89
  4020d9:	pop    ecx
  4020da:	inc    ebp
  4020db:	or     al,0x48
  4020dd:	jmp    0x28b02957
  4020e2:	cld    
  4020e3:	dec    DWORD PTR [edi+0x4808c29e]
  4020e9:	inc    ecx
  4020ea:	mov    ebp,esp
  4020ec:	and    cl,BYTE PTR [ecx*4-0xb9b3bb]
  4020f3:	jne    0x402145
  4020f5:	mov    esi,0xe8affc2a
  4020fa:	leave  
  4020fb:	ret    0x1620
  4020fe:	push   ebp
  4020ff:	mov    ebp,DWORD PTR [ebx+edx*4+0x62080c7d]
  402106:	adc    al,0x83
  402108:	or     eax,0x1e740006
  40210d:	jmp    0x619f3187
  402112:	or     al,0xff
  402114:	in     eax,0xdd
  402116:	out    0x9,eax
  402118:	ins    BYTE PTR es:[edi],dx
  402119:	out    0xff,eax
  40211b:	leave  
  40211c:	sbb    dl,BYTE PTR [eax+eax*1]
  40211f:	push   ebp
  402120:	push   ebx
  402121:	hlt    
  402122:	push   DWORD PTR [ebp-0x8]
  402125:	call   0x40299f
  40212a:	inc    eax
  40212b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40212c:	(bad)  
  40212d:	jmp    FWORD PTR [edi]
  40212f:	xchg   ebx,eax
  402130:	jge    0x402142
  402132:	xor    ebx,ebp
  402134:	ja     0x40214a
  402136:	mov    dl,0x88
  402138:	(bad)  
  402139:	inc    DWORD PTR [edx-0x1f]
  40213c:	in     al,dx
  40213d:	jne    0x402180
  40213f:	fidiv  DWORD PTR [esi+0xc]
  402142:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402143:	pop    eax
  402144:	sti    
  402145:	out    0xe6,eax
  402147:	jmp    0xffff:0xad68ffec
  40214e:	in     eax,0x65
  402150:	fild   WORD PTR [ebx+0x7403ef04]
  402156:	sub    ecx,edx
  402158:	jbe    0x402166
  40215a:	mov    ebx,esp
  40215c:	xlat   BYTE PTR ds:[ebx]
  40215d:	add    BYTE PTR [ecx],dh
  40215f:	mov    BYTE PTR [ecx],0x2b
  402162:	jno    0x40215f
  402164:	in     al,dx
  402165:	jne    0x402194
  402167:	stos   BYTE PTR es:[edi],al
  402168:	jbe    0x402172
  40216a:	dec    ecx
  40216b:	ds in  al,dx
  40216d:	dec    DWORD PTR [esi-0x5c]
  402170:	ror    DWORD PTR [eax],0x31
  402173:	sbb    BYTE PTR [ecx-0x14],bh
  402176:	mov    dl,0x8
  402178:	adc    al,0xff
  40217a:	mov    esp,0x3d75ecdf
  40217f:	pop    edx
  402180:	jbe    0x40218a
  402182:	sbb    DWORD PTR [edx-0x69e10014],ebp
  402188:	std    
  402189:	(bad)  
  40218a:	pushf  
  40218b:	fucomi st,st(4)
  40218d:	jne    0x40218f
  40218f:	add    BYTE PTR ds:0x1908763a,bh
  402195:	jbe    0x402183
  402197:	(bad)  
  402198:	(bad)  
  402199:	xor    eax,ecx
  40219b:	or     al,0x31
  40219d:	js     0x402217
  40219f:	in     al,dx
  4021a0:	out    dx,al
  4021a1:	lahf   
  4021a2:	sti    
  4021a3:	out    0xe6,eax
  4021a5:	and    ah,ch
  4021a7:	inc    DWORD PTR [ecx+0x4d67fbd5]
  4021ad:	adc    al,0xd1
  4021af:	inc    edx
  4021b0:	xor    ecx,ebx
  4021b2:	xchg   esp,eax
  4021b3:	sti    
  4021b4:	into   
  4021b5:	dec    esp
  4021b6:	push   ss
  4021b7:	in     al,dx
  4021b8:	mov    esi,0x3cece96d
  4021bd:	or     al,0x11
  4021bf:	pop    ds
  4021c0:	scas   al,BYTE PTR es:[edi]
  4021c1:	fdivr  st,st(6)
  4021c3:	pop    eax
  4021c4:	xor    eax,DWORD PTR [edi-0x27110054]
  4021ca:	je     0x4021c7
  4021cc:	mov    fs,WORD PTR [esi+eiz*8]
  4021cf:	jmp    0x40215f
  4021d1:	ins    DWORD PTR es:[edi],dx
  4021d2:	jmp    0x40224c
  4021d4:	in     al,dx
  4021d5:	add    edi,DWORD PTR [ecx]
  4021d7:	jmp    0x4021dd
  4021d9:	or     al,0xc1
  4021db:	and    DWORD PTR [esi-0x28],esi
  4021de:	(bad)  
  4021df:	dec    esp
  4021e0:	js     0x4021b7
  4021e2:	in     eax,dx
  4021e3:	add    edi,esp
  4021e5:	mov    ebp,es
  4021e7:	xchg   DWORD PTR [ebp-0x29],esi
  4021ea:	scas   al,BYTE PTR es:[edi]
  4021eb:	jno    0x402216
  4021ed:	in     al,dx
  4021ee:	jecxz  0x4021dd
  4021f0:	dec    esi
  4021f1:	fcom   st(2)
  4021f3:	inc    eax
  4021f4:	add    BYTE PTR [eax],al
  4021f6:	xor    eax,0xb2e82c8b
  4021fb:	dec    esi
  4021fc:	(bad)  
  4021fe:	enter  0x8613,0x71
  402202:	cmp    eax,0xefbf4d7
  402207:	jmp    0xd85f0d7c
  40220c:	hlt    
  40220d:	out    0x16,eax
  40220f:	(bad)  
  402211:	fucomi st,st(2)
  402213:	(bad)  
  402214:	pop    esi
  402215:	jmp    0x40221d
  402217:	(bad)  
  402219:	(bad)  ds:0xaaeb4ed8
  40221f:	push   ecx
  402220:	inc    ebp
  402221:	mov    ebp,0x50e90cf3
  402226:	mov    edx,0xf16a00e8
  40222b:	loopne 0x4021f4
  40222d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40222e:	(bad)  
  40222f:	adc    al,0x0
  402231:	jmp    0x1d85ab68
  402236:	pop    ebp
  402237:	xlat   BYTE PTR ds:[ebx]
  402238:	jne    0x40221b
  40223a:	fiadd  DWORD PTR [eax-0x2c]
  40223d:	jmp    0x8200b374
  402242:	dec    ecx
  402243:	xlat   BYTE PTR ds:[ebx]
  402244:	jne    0x402237
  402246:	mov    dh,al
  402248:	stc    
  402249:	test   BYTE PTR [ebx-0x740eba73],0x61
  402250:	cld    
  402251:	sar    DWORD PTR [ecx],1
  402253:	ret    
  402254:	add    cl,ch
  402256:	xchg   DWORD PTR [edi+0xff74],edx
  40225c:	mov    esp,DWORD PTR [ecx-0x8]
  40225f:	cmp    edi,edx
  402261:	adc    ebp,eax
  402263:	cmp    BYTE PTR [eax],dh
  402265:	adc    al,0x0
  402267:	jo     0x40225a
  402269:	(bad)  
  40226b:	cmp    al,0x49
  40226d:	in     al,dx
  40226e:	or     DWORD PTR [edx+0x1cff1432],ebx
  402274:	dec    ebp
  402275:	out    dx,eax
  402276:	mov    ebx,0x8bd75ba2
  40227b:	sub    al,0x41
  40227d:	pop    es
  40227e:	enter  0x6296,0x44
  402282:	(bad)  
  402283:	cld    
  402284:	sub    ch,bh
  402286:	push   0x7f
  402288:	sbb    edx,edi
  40228a:	leave  
  40228b:	stos   DWORD PTR es:[edi],eax
  40228c:	push   ds
  40228d:	xlat   BYTE PTR ds:[ebx]
  40228e:	push   esp
  40228f:	(bad)  
  402290:	(bad)  
  402291:	xchg   edx,eax
  402292:	les    ebx,FWORD PTR [ecx-0xd]
  402295:	push   eax
  402296:	hlt    
  402297:	jmp    0x644036ce
  40229c:	jno    0x402276
  40229e:	push   eax
  40229f:	dec    esi
  4022a0:	or     DWORD PTR [eax+ebp*8],0xbe8600
  4022a7:	add    BYTE PTR [ebp-0x2d],cl
  4022aa:	js     0x4022f9
  4022ac:	daa    
  4022ad:	fs or  al,ch
  4022b0:	xchg   bh,ah
  4022b2:	(bad)  
  4022b3:	inc    DWORD PTR [ecx+0x54]
  4022b6:	clc    
  4022b7:	and    DWORD PTR [ebp-0xb8dfb16],0xffffff8d
  4022be:	ins    DWORD PTR es:[edi],dx
  4022bf:	clc    
  4022c0:	add    BYTE PTR [eax],al
  4022c2:	int3   
  4022c3:	jmp    0x7c811f3d
  4022c8:	rol    BYTE PTR [eax],cl
  4022ca:	cwde   
  4022cb:	aad    0xbf
  4022cd:	je     0x4022a9
  4022cf:	jmp    0x38f91b49
  4022d4:	add    al,ch
  4022d6:	cdq    
  4022d7:	aad    0xff
  4022d9:	call   DWORD PTR [edi+0x11d0f79a]
  4022df:	pop    ss
  4022e0:	hlt    
  4022e1:	(bad)  
  4022e2:	fucomp st(3)
  4022e4:	call   0x4fed7e
  4022e9:	jmp    0x402369
  4022eb:	jmp    0x402362
  4022ed:	or     BYTE PTR [eax+0x16],dh
  4022f0:	sti    
  4022f1:	inc    DWORD PTR [edi-0x65364008]
  4022f7:	adc    eax,DWORD PTR [eax]
  4022f9:	jmp    0x402349
  4022fb:	idiv   DWORD PTR [edi+0x138ac9]
  402301:	push   0x4a
  402303:	cmp    ah,bh
  402305:	jmp    FWORD PTR ds:0xb0f0e7da
  40230b:	jmp    0x40230c
  40230d:	(bad)  
  40230e:	dec    ebp
  40230f:	loopne 0x402312
  402311:	add    BYTE PTR [eax],cl
  402313:	adc    cl,BYTE PTR [ebp-0xbf97bb]
  402319:	jne    0x40231b
  40231b:	mov    edx,0x3e31fbd2
  402320:	jmp    0x47b97a8
  402325:	je     0x402327
  402327:	add    BYTE PTR [ebx-0x22],al
  40232a:	mov    ebx,0x6f1f6c3b
  40232f:	pop    es
  402330:	cdq    
  402331:	in     al,dx
  402332:	add    eax,DWORD PTR [eax]
  402334:	xor    DWORD PTR [edx+0x2],edx
  402337:	sub    esi,ecx
  402339:	add    al,BYTE PTR [esi]
  40233b:	sub    esi,ecx
  40233d:	and    al,0xc6
  40233f:	add    al,0x31
  402341:	cwde   
  402342:	jl     0x402330
  402344:	mov    dl,0x2f
  402346:	in     al,dx
  402347:	(bad)  
  402348:	hlt    
  402349:	push   cs
  40234a:	push   esp
  40234b:	call   FWORD PTR [ebx+eiz*8]
  40234e:	fisttp DWORD PTR [eax-0x7e]
  402351:	jmp    0x402356
  402353:	test   DWORD PTR [ecx+0x63],esi
  402356:	sbb    al,0xff
  402358:	add    al,0xe3
  40235a:	fcmovnu st,st(0)
  40235c:	mov    DWORD PTR [esi-0x3d0b7618],esi
  402362:	call   0x131398dc
  402367:	shl    BYTE PTR [ecx],cl
  402369:	jmp    0x402367
  40236b:	mov    edi,0x75e8bedd
  402370:	sub    eax,0x1f86e9e
  402375:	rcl    DWORD PTR [edi],cl
  402377:	or     esi,DWORD PTR [ecx]
  402379:	jmp    0x402363
  40237b:	jne    0x4023c2
  40237d:	sub    eax,0xffffffd1
  402380:	xor    ebx,ebp
  402382:	call   0xb2d34cfc
  402387:	cli    
  402388:	mov    ?,WORD PTR cs:[edx+0x390000c2]
  40238f:	jmp    0x4023df
  402391:	mov    ecx,DWORD PTR ds:0x82e8bf6a
  402397:	ror    ah,cl
  402399:	lea    esi,[esp+edx*1+0x65]
  40239d:	push   ebx
  40239e:	push   es
  40239f:	pop    edi
  4023a0:	icebp  
  4023a1:	(bad)  
  4023a3:	shr    ecx,0x3
  4023a6:	lods   al,BYTE PTR ds:[esi]
  4023a7:	rcr    esi,cl
  4023a9:	jnp    0x402351
  4023ab:	adc    ebp,ecx
  4023ad:	add    esp,esi
  4023af:	pop    esi
  4023b0:	icebp  
  4023b1:	(bad)  [ebp-0x5717c925]
  4023b7:	dec    esi
  4023b8:	xor    eax,0x11d844e8
  4023bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4023be:	loopne 0x4023d3
  4023c0:	jmp    0x6d44a2c1
  4023c5:	xchg   DWORD PTR [ecx],esi
  4023c7:	adc    al,0xe9
  4023c9:	jp     0x4023bf
  4023cb:	jecxz  0x4023d3
  4023cd:	outs   dx,BYTE PTR ds:[esi]
  4023ce:	popf   
  4023cf:	jmp    0x4023fc
  4023d1:	fidiv  DWORD PTR [ecx]
  4023d3:	adc    al,0x6a
  4023d5:	mov    edi,0x3e90f2d
  4023da:	loope  0x4023ef
  4023dc:	cmp    esp,ebx
  4023de:	fcom   DWORD PTR [ebx]
  4023e0:	jmp    0xc58ecbe8
  4023e5:	out    0xfc,eax
  4023e7:	ffreep st(1)
  4023e9:	xchg   edi,eax
  4023ea:	pop    eax
  4023eb:	adc    ebp,ecx
  4023ed:	sub    BYTE PTR [ebp+0xf],0xe4
  4023f1:	add    eax,DWORD PTR [eax]
  4023f3:	add    BYTE PTR [ecx],dh
  4023f5:	add    al,0xe9
  4023f7:	push   ebx
  4023f8:	dec    ecx
  4023f9:	sub    ecx,0x3
  4023fc:	xor    DWORD PTR [ebx+0x13dbdc2c],ecx
  402402:	sahf   
  402403:	jno    0x402452
  402405:	aam    0x1c
  402407:	lock ss pop esi
  40240a:	and    edi,0x8d91c4a4
  402410:	sbb    BYTE PTR ds:0x28f582e9,dl
  402416:	add    BYTE PTR [eax+0x70],ah
  402419:	int3   
  40241a:	push   esp
  40241c:	push   ss
  40241d:	mov    ebp,0x142d3865
  402422:	call   esp
  402424:	cli    
  402425:	mov    ebx,0xd40e5390
  40242a:	push   0xffffffe1
  40242c:	mov    bl,BYTE PTR [edx+0x28]
  40242f:	test   al,0x32
  402431:	shl    DWORD PTR [ebp-0xf],cl
  402434:	cli    
  402435:	lock cld 
  402437:	ss into 
  402439:	pop    ds
  40243a:	fsubr  DWORD PTR [esi]
  40243c:	inc    eax
  40243d:	enter  0x9cff,0xca
  402441:	mov    ebx,0xd3d61dba
  402446:	and    esi,DWORD PTR [ecx]
  402448:	into   
  402449:	dec    ecx
  40244a:	clc    
  40244b:	push   cs
  40244c:	and    BYTE PTR [edi+edi*8-0x1f445584],bh
  402453:	std    
  402454:	xchg   edi,eax
  402455:	shl    DWORD PTR [ebx],cl
  402457:	adc    DWORD PTR [eax],eax
  402459:	add    BYTE PTR [esi+0x3e01ec49],cl
  40245f:	adc    al,0x0
  402461:	jmp    0xd2286df5
  402466:	xchg   ebx,edx
  402468:	(bad)  
  402469:	jmp    0xc1486dfd
  40246e:	test   ebp,ecx
  402470:	inc    esi
  402472:	jmp    0x40244a
  402474:	pop    ebx
  402475:	mov    al,0x70
  402477:	sbb    BYTE PTR [eax],al
  402479:	sbb    al,0xda
  40247b:	mov    edi,0xd34d2c83
  402480:	jae    0x402473
  402482:	dec    edi
  402483:	dec    ecx
  402484:	or     BYTE PTR [ecx-0x16ff1acf],dl
  40248a:	sbb    edx,esp
  40248c:	leave  
  40248d:	stos   DWORD PTR es:[edi],eax
  40248e:	rcl    DWORD PTR cs:[eax+eax*1-0x5d],cl
  402493:	jmp    0x402420
  402495:	inc    ebp
  402496:	and    BYTE PTR [eax+eax*4],dl
  402499:	add    BYTE PTR [eax],cl
  40249b:	pop    ss
  40249c:	push   eax
  40249d:	push   0x58
  40249f:	lock repnz rcr BYTE PTR [eax],1
  4024a3:	pop    ss
  4024a4:	leave  
  4024a5:	ret    0x1714
  4024a8:	push   ebp
  4024a9:	mov    ebp,DWORD PTR [edx+eiz*2-0x4]
  4024ad:	mov    edi,ebp
  4024af:	into   
  4024b0:	mov    cl,BYTE PTR [ebp-0x24]
  4024b3:	mov    ch,0xe
  4024b5:	push   ecx
  4024b6:	or     eax,esi
  4024b8:	add    ch,BYTE PTR [ebx]
  4024ba:	or     dh,al
  4024bc:	stos   DWORD PTR es:[edi],eax
  4024bd:	pop    ecx
  4024be:	add    BYTE PTR [eax],al
  4024c0:	pop    ebx
  4024c1:	mov    eax,0x5a62f303
  4024c6:	leave  
  4024c7:	ret    0x16c0
  4024ca:	push   ebp
  4024cb:	mov    ebp,DWORD PTR [ecx+eiz*2]
  4024ce:	push   edi
  4024cf:	mov    edi,DWORD PTR [ebp+0x258bfbca]
  4024d5:	iret   
  4024d6:	mov    cl,BYTE PTR [ebp+0x78]
  4024d9:	mov    ch,0x2
  4024db:	repz in al,0x59
  4024de:	pop    esi
  4024df:	leave  
  4024e0:	pop    edx
  4024e1:	retf   
  4024e2:	call   DWORD PTR [ebx+eax*1-0x14]
  4024e6:	push   esi
  4024e7:	push   edi
  4024e8:	add    eax,DWORD PTR [ebx+0x8]
  4024eb:	cld    
  4024ec:	adc    ecx,DWORD PTR [ebx]
  4024ee:	adc    BYTE PTR [ebx],ch
  4024f0:	cwde   
  4024f1:	dec    esp
  4024f2:	jge    0x402500
  4024f4:	jnp    0x40250b
  4024f6:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4024f8:	arpl   WORD PTR [ebp+0x59080175],cx
  4024fe:	pop    esi
  4024ff:	leave  
  402500:	call   0x83eb:0xc354ffcb
  402507:	les    ebx,FWORD PTR [ecx+eiz*2+0x15315357]
  40250e:	add    al,BYTE PTR [ecx]
  402510:	xor    DWORD PTR [ebx-0x5cc68a1c],edi
  402516:	xchg   ebx,eax
  402517:	call   FWORD PTR [esi]
  402519:	push   ebx
  40251a:	jns    0x402599
  40251c:	sub    DWORD PTR [edx],eax
  40251e:	cmp    eax,0x404e32b
  402523:	add    DWORD PTR [eax],eax
  402525:	add    BYTE PTR [ecx],dh
  402527:	mov    ebx,0x713b147b
  40252c:	ret    0xf8e2
  40252f:	or     BYTE PTR ss:[bp+0x7a],dh
  402534:	js     0x4025ab
  402536:	xor    eax,0x31fe3f01
  40253b:	es mov ebx,0x35fa2b
  402541:	cmp    edi,DWORD PTR [ecx+0x6c00e478]
  402547:	stc    
  402548:	jns    0x40254e
  40254a:	add    BYTE PTR [ebx+0x7126fe3e],bh
  402550:	dec    edi
  402551:	(bad)  
  402552:	mov    ebx,0x2d8829b7
  402557:	(bad)  
  402558:	jns    0x40259f
  40255a:	sahf   
  40255b:	inc    ebx
  40255c:	add    BYTE PTR [edx],bh
  40255e:	lock test DWORD PTR [esi],esi
  402561:	adc    BYTE PTR [ebx],al
  402563:	mov    ebp,0x7e87c918
  402568:	outs   dx,BYTE PTR ds:[esi]
  402569:	aad    0xda
  40256b:	adc    DWORD PTR [esi-0x37],eax
  40256e:	jae    0x402527
  402570:	add    edx,DWORD PTR [ebp-0x46]
  402573:	pop    DWORD PTR [eax+0x4e2e69c4]
  402579:	push   edi
  40257a:	pop    esi
  40257b:	or     ah,bh
  40257d:	pop    edx
  40257e:	stos   DWORD PTR es:[edi],eax
  40257f:	mov    esi,0x354c457b
  402584:	inc    eax
  402585:	add    DWORD PTR [ecx+0xe82c14],edi
  40258b:	add    BYTE PTR [edx-0x55c2d933],ch
  402591:	inc    edi
  402592:	in     eax,0xbc
  402594:	je     0x402562
  402596:	jmp    0x7254569e
  40259b:	ss inc ecx
  40259d:	mov    ch,0x29
  40259f:	out    0x6c,al
  4025a1:	iret   
  4025a2:	out    0xad,al
  4025a4:	je     0x402575
  4025a6:	fisubr WORD PTR [ebp+0x4e710c1d]
  4025ac:	(bad)  
  4025ad:	adc    esi,DWORD PTR [edi+eiz*8-0x185375da]
  4025b4:	mov    ebx,0x7c7c1127
  4025b9:	shl    dh,cl
  4025bb:	lods   eax,DWORD PTR ds:[esi]
  4025bc:	je     0x40258d
  4025be:	jno    0x4025cf
  4025c0:	sbb    DWORD PTR [ecx],esp
  4025c2:	jg     0x402602
  4025c4:	int    0x9d
  4025c6:	xchg   esp,eax
  4025c7:	in     al,0xb9
  4025c9:	daa    
  4025ca:	loope  0x402645
  4025cc:	fs shr ebx,1
  4025cf:	dec    esi
  4025d0:	mov    bh,0x9d
  4025d2:	std    
  4025d3:	sub    DWORD PTR [edx+0x3d331156],edi
  4025d9:	add    al,0x6
  4025db:	ds cdq 
  4025dd:	mov    ch,0x29
  4025df:	jns    0x4025cd
  4025e1:	into   
  4025e2:	popa   
  4025e3:	add    BYTE PTR [ebx-0xd8512aa],bh
  4025e9:	adc    al,BYTE PTR [esi+0x42]
  4025ec:	fcmovu st,st(2)
  4025ee:	stos   DWORD PTR es:[edi],eax
  4025ef:	adc    BYTE PTR [eax],al
  4025f1:	add    BYTE PTR [ecx],dh
  4025f3:	addr16 (bad) 
  4025f5:	lock mov al,0xd7
  4025f8:	mov    ebp,0x1ad066e2
  4025fd:	das    
  4025fe:	jp     0x40259e
  402600:	and    al,0xe0
  402602:	add    ecx,edx
  402604:	add    BYTE PTR [edi*1+0x2d99a3bc],bh
  40260b:	adc    al,0x85
  40260d:	test   eax,0xe9969c22
  402612:	xor    dl,BYTE PTR [edi+edi*8]
  402615:	sbb    al,0x3d
  402617:	mov    esp,0xd012972f
  40261c:	mov    DWORD PTR [ecx+edi*8],ebp
  40261f:	iret   
  402620:	jne    0x40269f
  402622:	add    eax,0x32e9cf3d
  402627:	sbb    eax,eax
  402629:	cmc    
  40262a:	xchg   ebx,eax
  40262b:	popf   
  40262c:	inc    ebp
  40262d:	pop    ecx
  40262e:	adc    cl,BYTE PTR [edx-0xc]
  402631:	push   ecx
  402632:	mov    ecx,esi
  402634:	call   DWORD PTR [esi-0x44]
  402637:	pop    ecx
  402638:	clc    
  402639:	dec    esi
  40263a:	mov    al,cl
  40263c:	(bad)  
  40263d:	mov    esp,0x3975cffa
  402642:	lds    esp,FWORD PTR [eax-0x302dc902]
  402648:	jne    0x402677
  40264a:	aad    0x56
  40264c:	iret   
  40264d:	jmp    0xedb5f584
  402652:	retf   0xcf02
  402655:	jmp    0x6472265a
  40265a:	call   DWORD PTR [esi+esi*1-0x6ce87a5f]
  402661:	iret   
  402662:	call   FWORD PTR [ecx-0x9018676]
  402668:	xchg   ebx,eax
  402669:	iret   
  40266a:	jne    0x402661
  40266c:	xchg   ebx,eax
  40266d:	dec    ecx
  40266e:	clc    
  40266f:	je     0x40261a
  402671:	mov    esi,0x6493defe
  402676:	call   0xf7752
  40267b:	into   
  40267c:	or     DWORD PTR [eax+ebp*8],ebx
  40267f:	add    BYTE PTR [edi],cl
  402681:	lock (bad) 
  402683:	inc    DWORD PTR [edx]
  402685:	and    BYTE PTR [eax+0x51],ch
  402688:	xor    BYTE PTR [ecx+0x0],bl
  40268b:	(bad)  
  40268c:	std    
  40268d:	pop    ds
  40268e:	call   0xfff2b926
  402693:	or     esi,DWORD PTR [eax-0x4e]
  402696:	jne    0x40268c
  402698:	(bad)  
  402699:	imul   edi,eax,0xffffffff
  40269c:	cmp    eax,0xb283e820
  4026a1:	mov    cl,0xff
  4026a3:	and    edx,eax
  4026a5:	mov    cl,0x75
  4026a7:	clc    
  4026a8:	mov    al,0x8d
  4026aa:	std    
  4026ab:	call   DWORD PTR [edi+0x600875b2]
  4026b1:	xchg   esp,eax
  4026b2:	idiv   edi
  4026b4:	push   edi
  4026b5:	sahf   
  4026b6:	ret    
  4026b7:	pop    ebx
  4026b8:	adc    ecx,ebx
  4026ba:	or     BYTE PTR [eax],al
  4026bc:	add    BYTE PTR [eax],al
  4026be:	popf   
  4026bf:	popf   
  4026c0:	in     al,dx
  4026c1:	or     DWORD PTR [edi+eiz*8],0x57
  4026c5:	mov    ecx,DWORD PTR [ebp-0x733ff53a]
  4026cb:	sbb    al,0xc7
  4026cd:	add    al,bl
  4026cf:	adc    al,BYTE PTR [eax]
  4026d1:	add    bl,ah
  4026d3:	mov    cl,0x83
  4026d5:	jge    0x402707
  4026d7:	sbb    DWORD PTR [ebp+0x7],esi
  4026da:	add    dl,BYTE PTR [ebx]
  4026dc:	add    al,BYTE PTR [eax]
  4026de:	cwde   
  4026df:	mov    ebp,0xcab5830f
  4026e4:	add    DWORD PTR [ebp-0x71],esi
  4026e7:	mov    al,0x0
  4026e9:	add    DWORD PTR [eax+0x7302eb12],ebx
  4026ef:	mov    BYTE PTR [ecx+0x21831ca],al
  4026f5:	add    BYTE PTR ds:0x3150fc57,al
  4026fb:	or     ebp,DWORD PTR [esi+0x0]
  4026fe:	data16 addr16 adc bh,bh
  402702:	in     al,0xc4
  402704:	jmp    0x4026d6
  402706:	mov    sp,0xb03
  40270a:	jno    0x40271b
  40270c:	jno    0x40269b
  40270e:	in     al,dx
  40270f:	test   BYTE PTR [edx+ebp*2],dh
  402712:	xor    DWORD PTR [eax+0x47],ecx
  402715:	hlt    
  402716:	loope  0x40273a
  402718:	add    al,0xff
  40271a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40271b:	retf   
  40271c:	loopne 0x402793
  40271e:	and    eax,0xcf9d94
  402723:	add    BYTE PTR [ecx],dh
  402725:	mov    ebx,0xff9cc00c
  40272a:	test   BYTE PTR [ebp+0x9],bh
  40272d:	mov    esp,0xc0b24657
  402732:	xlat   BYTE PTR ds:[ebx]
  402733:	add    DWORD PTR [ebp+edi*4-0x4306827c],eax
  40273a:	push   edi
  40273b:	cmp    bh,BYTE PTR [edx-0x7ebf2480]
  402741:	push   ebx
  402742:	inc    edx
  402743:	std    
  402744:	ficom  WORD PTR [esi-0x73]
  402747:	clc    
  402748:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402749:	js     0x402726
  40274b:	push   eax
  40274c:	rol    WORD PTR [ebx],1
  40274f:	push   0x31
  402751:	(bad)  
  402752:	push   esi
  402753:	adc    BYTE PTR [esi-0x53172050],bh
  402759:	inc    BYTE PTR [ebx]
  40275b:	add    BYTE PTR [edx],bh
  40275d:	sti    
  40275e:	push   edi
  40275f:	or     bh,dh
  402761:	adc    ch,BYTE PTR [ecx]
  402763:	std    
  402764:	sahf   
  402765:	push   ss
  402766:	sub    eax,0x8cbf8aff
  40276b:	inc    ebp
  40276c:	and    eax,0x2c74c3b2
  402771:	mov    esi,0x14aef856
  402776:	jmp    0xd210245b
  40277b:	push   0x7e
  40277d:	adc    al,0xe9
  40277f:	mov    WORD PTR [esi+0x19],gs
  402782:	test   eax,0x44913d56
  402787:	cld    
  402788:	add    BYTE PTR [eax],al
  40278a:	xor    BYTE PTR [ecx-0x29],al
  40278d:	mov    esp,?
  40278f:	sub    ebp,DWORD PTR [ecx]
  402791:	xor    al,0x46
  402793:	inc    edi
  402794:	aad    0xe0
  402796:	les    esp,FWORD PTR [ebx]
  402798:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402799:	push   esi
  40279a:	and    eax,0x190c14cd
  40279f:	repz xchg ebp,eax
  4027a1:	loopne 0x4027c9
  4027a3:	ins    DWORD PTR es:[edi],dx
  4027a4:	mov    al,ds:0x1c1445c5
  4027a9:	lea    eax,ds:0x300bfc93
  4027af:	adc    al,0xe9
  4027b1:	cmp    DWORD PTR [ebx+ebx*1+0x6e],0x16
  4027b6:	(bad)  
  4027b7:	sti    
  4027b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4027b9:	add    esp,DWORD PTR [esi+0x316df156]
  4027bf:	int    0xdc
  4027c1:	mul    edi
  4027c3:	inc    esi
  4027c4:	stc    
  4027c5:	loopne 0x40282b
  4027c7:	and    BYTE PTR [esi+0x56],al
  4027ca:	sub    DWORD PTR [ebp+esi*1+0x20cccee1],edi
  4027d1:	lds    esp,FWORD PTR [ecx]
  4027d3:	adc    al,0x2
  4027d5:	les    ebp,FWORD PTR [edx+0x78e538e3]
  4027db:	sbb    ch,cl
  4027dd:	add    esi,DWORD PTR [ecx]
  4027df:	jecxz  0x4027e4
  4027e1:	push   esp
  4027e2:	xor    eax,0xc3121b93
  4027e7:	jp     0x4027ee
  4027e9:	and    BYTE PTR [ebx+0xf2d822],0x0
  4027f0:	and    DWORD PTR [edx+0x27bb0700],esi
  4027f6:	test   DWORD PTR [ecx-0x18ffaced],ebx
  4027fc:	ins    DWORD PTR es:[edi],dx
  4027fd:	inc    esi
  4027fe:	fisubr DWORD PTR [edx+0x3eec9928]
  402804:	mov    edx,0xa5d60856
  402809:	cwde   
  40280a:	jge    0x402801
  40280c:	stos   DWORD PTR es:[edi],eax
  40280d:	pop    esi
  40280e:	adc    dl,dh
  402810:	jge    0x402859
  402812:	sbb    BYTE PTR [edx+0x7d],ah
  402815:	shr    dl,cl
  402817:	loope  0x402839
  402819:	adc    eax,0x142da625
  40281e:	add    BYTE PTR [edx+0x39],dh
  402821:	xchg   ecx,eax
  402822:	push   eax
  402823:	or     BYTE PTR [esp+edx*1+0x33],ch
  402827:	stos   DWORD PTR es:[edi],eax
  402828:	jbe    0x4027e0
  40282a:	call   0xc9ac05ad
  40282f:	stos   DWORD PTR es:[edi],eax
  402830:	and    DWORD PTR [edx*2-0x7c97fe9e],edx
  402837:	in     al,dx
  402838:	sub    dl,BYTE PTR [esi*2+0x851efee]
  40283f:	daa    
  402840:	sbb    eax,0x506a0055
  402845:	sbb    BYTE PTR [eax],al
  402847:	aam    0x37
  402849:	rol    DWORD PTR [ebp-0xb],cl
  40284c:	in     al,dx
  40284d:	cld    
  40284e:	inc    eax
  40284f:	jmp    0x41486a43
  402854:	add    BYTE PTR [eax],al
  402856:	fld    DWORD PTR es:[eax]
  402859:	jmp    0x9d401509
  40285e:	es mov esp,0x14352c35
  402864:	add    esi,DWORD PTR [ecx]
  402866:	bnd callw 0xa739
  40286b:	retf   
  40286c:	inc    DWORD PTR [eax]
  40286e:	and    ecx,DWORD PTR [eax+0x68075ff]
  402874:	call   0x5075b8
  402879:	inc    DWORD PTR ds:0x4ce8531b
  40287f:	in     eax,0x0
  402881:	add    bl,ah
  402883:	aad    0x5b
  402885:	leave  
  402886:	call   0x53ba:0xd355001f
  40288d:	sub    ebp,0x17
  402890:	add    BYTE PTR [ebp+0x57],dh
  402893:	rol    BYTE PTR [ebp+0x8],cl
  402896:	xchg   esi,eax
  402897:	inc    DWORD PTR [eax+0x0]
  40289a:	retf   
  40289b:	xor    ecx,DWORD PTR [eax+eax*1]
  40289e:	adc    eax,0x1c45c713
  4028a3:	shr    DWORD PTR [eax],1
  4028a5:	inc    ecx
  4028a6:	sbb    dl,ch
  4028a8:	jne    0x4028b2
  4028aa:	mov    al,0xbd
  4028ac:	int3   
  4028ad:	add    BYTE PTR [eax],cl
  4028af:	sahf   
  4028b0:	fdivr  st,st(7)
  4028b2:	add    eax,0xcce1e81b
  4028b7:	push   ss
  4028b8:	add    BYTE PTR [ebx],al
  4028ba:	add    BYTE PTR [eax],al
  4028bc:	mov    al,ds:0x63e85355
  4028c1:	out    dx,al
  4028c2:	(bad)  
  4028c3:	jmp    DWORD PTR [ebx-0x71]
  4028c6:	push   DWORD PTR [ebp-0x30]
  4028c9:	add    eax,0x173cebe8
  4028ce:	add    bh,bh
  4028d0:	xchg   ebp,eax
  4028d1:	sbb    dl,BYTE PTR [ebx-0x18]
  4028d4:	pusha  
  4028d5:	fild   DWORD PTR [eax]
  4028d7:	add    bh,bh
  4028d9:	imul   ecx,DWORD PTR [eax],0xffffffe8
  4028dc:	inc    eax
  4028dd:	out    dx,al
  4028de:	(bad)  
  4028df:	inc    DWORD PTR [ebx-0x2a]
  4028e2:	pop    ebx
  4028e3:	leave  
  4028e4:	pop    edx
  4028e5:	pop    ds
  4028e6:	add    BYTE PTR [ebp+0x31],dl
  4028e9:	ss out dx,eax
  4028eb:	xor    DWORD PTR [ebp+0x18],0x36
  4028ef:	push   0x3bc2c
  4028f4:	cdq    
  4028f5:	add    edx,ebx
  4028f7:	inc    DWORD PTR [esi-0x4d03b7cd]
  4028fd:	ja     0x402957
  4028ff:	sub    eax,esi
  402901:	mov    esp,0xe6337503
  402906:	idiv   dh
  402908:	fsubr  st(0),st
  40290a:	push   0x0
  40290c:	retf   
  40290d:	mov    esp,0x672975dc
  402912:	add    al,0xff
  402914:	and    al,0x0
  402916:	sub    eax,DWORD PTR [ecx+0x31]
  402919:	cmp    ah,al
  40291b:	jns    0x402906
  40291d:	jns    0x402976
  40291f:	cld    
  402920:	add    BYTE PTR [eax],al
  402922:	dec    ecx
  402923:	sub    cl,bl
  402925:	jmp    FWORD PTR [esi]
  402927:	jae    0x402970
  402929:	cld    
  40292a:	xor    DWORD PTR [ebx+0x24de0003],edi
  402930:	sub    eax,DWORD PTR [ecx+0x31]
  402933:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402934:	das    
  402935:	mov    esp,DWORD PTR [esi]
  402937:	inc    esi
  402938:	inc    edi
  402939:	or     BYTE PTR [edx+eax*2+0x5d],cl
  40293d:	(bad)  
  40293e:	inc    BYTE PTR [ecx+eax*2+0x6a167c04]
  402945:	add    BYTE PTR [ebp+edi*2-0x7a6aff5],bh
  40294c:	sub    DWORD PTR [ecx+0x31],eax
  40294f:	pop    edx
  402950:	adc    ch,al
  402952:	je     0x4029a5
  402954:	(bad)  
  402956:	cmp    bh,bl
  402958:	push   edi
  402959:	add    eax,0xebdf78b8
  40295e:	sub    DWORD PTR [esi],edi
  402960:	lds    eax,FWORD PTR [edx+esi*4]
  402963:	adc    al,0xe6
  402965:	add    esp,DWORD PTR [edx+ebx*8]
  402968:	jb     0x4029b1
  40296a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40296b:	imul   esp,DWORD PTR [eax],0xb41435c2
  402971:	mov    BYTE PTR [ebp+0x39477265],al
  402977:	sbb    eax,0x942c5829
  40297c:	mov    cl,0x3
  40297e:	add    al,0x1e
  402980:	xor    DWORD PTR [ecx+esi*1],eax
  402983:	adc    al,0xe9
  402985:	cmp    BYTE PTR [eax],al
  402987:	add    BYTE PTR [eax-0x2a],bh
  40298a:	in     eax,0x3
  40298c:	fist   DWORD PTR [ebx]
  40298e:	inc    ebx
  40298f:	add    al,0xcb
  402991:	adc    al,0x43
  402993:	add    al,0xcb
  402995:	adc    edx,DWORD PTR [ecx-0x7c]
  402998:	xor    DWORD PTR [ecx+ebp*8],edx
  40299b:	fdivr  QWORD PTR [ebx+ebx*1+0x146ae4c1]
  4029a2:	jmp    0xa93d832f
  4029a7:	inc    eax
  4029a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4029a9:	sbb    eax,0xdd0fec3a
  4029ae:	jmp    0xe95302b6
  4029b3:	add    esi,DWORD PTR [ecx]
  4029b5:	ins    DWORD PTR es:[edi],dx
  4029b6:	mov    al,0xc1
  4029b8:	xor    eax,0x15891414
  4029bd:	popf   
  4029be:	sub    al,0xc
  4029c0:	sub    dl,ah
  4029c2:	cmc    
  4029c3:	push   es
  4029c4:	mov    cl,0xb
  4029c6:	jmp    0xe9cc6221
  4029cb:	add    esi,DWORD PTR [ecx]
  4029cd:	adc    al,0x20
  4029cf:	shl    DWORD PTR ds:0x29564e14,0xbc
  4029d6:	cmp    ecx,eax
  4029d8:	xor    DWORD PTR [edx+ebp*2],edx
  4029db:	fcmovnb st,st(6)
  4029dd:	aas    
  4029de:	add    ah,ah
  4029e0:	mov    esp,DWORD PTR [ebx]
  4029e2:	add    cl,ch
  4029e4:	xor    bl,BYTE PTR [ecx]
  4029e6:	xchg   ebp,eax
  4029e7:	sub    DWORD PTR ds:0x12c082,edi
  4029ed:	add    BYTE PTR [edi],ch
  4029ef:	mov    WORD PTR [eax],es
  4029f1:	jmp    0x2c093e28
  4029f6:	cs adc al,0x55
  4029f9:	jb     0x402999
  4029fb:	xchg   esp,eax
  4029fc:	(bad)  
  4029fd:	std    
  4029fe:	sbb    DWORD PTR [edx+ebp*2],edx
  402a01:	jmp    0x1486863
  402a06:	imul   ebx,esp,0xd43fe900
  402a0c:	je     0x402a21
  402a0e:	sbb    eax,0x7f8ae864
  402a13:	enter  0x60ff,0xf0
  402a17:	(bad)  
  402a18:	pop    eax
  402a19:	sbb    DWORD PTR [edx+0x3e],ebp
  402a1c:	cld    
  402a1d:	mov    esi,0x79e81be0
  402a22:	outs   dx,BYTE PTR ds:[esi]
  402a23:	adc    eax,DWORD PTR [eax]
  402a25:	loop   0x402a99
  402a27:	ds or  al,0xa6
  402a2a:	or     al,0xe8
  402a2d:	sbb    DWORD PTR [edi],eax
  402a2f:	enter  0xc2ff,0xf2
  402a33:	mov    ebx,0xc8706203
  402a38:	leave  
  402a39:	stos   DWORD PTR es:[edi],eax
  402a3a:	xor    DWORD PTR [edx*2-0x749be68e],edx
  402a41:	adc    al,0x29
  402a43:	cmp    dl,BYTE PTR [eax]
  402a45:	sbb    al,BYTE PTR ds:0xa66fa91
  402a4b:	cmp    eax,DWORD PTR [eax]
  402a4d:	shl    DWORD PTR [edx],cl
  402a4f:	cmp    al,BYTE PTR [ebx]
  402a51:	ret    
  402a52:	add    BYTE PTR [eax],al
  402a54:	xor    bh,BYTE PTR [edx]
  402a56:	add    eax,ecx
  402a58:	xor    dl,BYTE PTR [eax+eax*1]
  402a5b:	add    BYTE PTR [eax-0x15],bl
  402a5e:	jne    0x402a68
  402a60:	pusha  
  402a61:	test   edx,0x398c800
  402a67:	inc    eax
  402a68:	jl     0x402a69
  402a6a:	imul   eax,DWORD PTR [eax],0xcb6cbbe8
  402a70:	cwde   
  402a71:	adc    ecx,DWORD PTR [ecx+0x399443]
  402a77:	push   0xffffff88
  402a79:	cmp    DWORD PTR [eax],eax
  402a7b:	push   0xffffff9a
  402a7d:	cmp    DWORD PTR [eax],eax
  402a7f:	dec    ebx
  402a81:	mov    ebx,0x1388cb5e
  402a86:	or     eax,eax
  402a88:	cld    
  402a89:	stc    
  402a8a:	mov    BYTE PTR [ebx+0x5c],al
  402a8d:	cmp    DWORD PTR [eax],eax
  402a8f:	push   0x58
  402a91:	cmp    DWORD PTR [eax],eax
  402a93:	push   0x4c
  402a95:	add    ebp,eax
  402a97:	dec    edi
  402a98:	xchg   ebx,eax
  402a99:	adc    eax,DWORD PTR [eax]
  402a9b:	mov    DWORD PTR [ebx],ebx
  402a9d:	sbb    BYTE PTR [ebx],cl
  402a9f:	sar    ch,0xf3
  402aa2:	(bad)  
  402aa3:	jae    0x402af1
  402aa5:	mov    ebx,0x1348caf2
  402aaa:	push   DWORD PTR [ebx]
  402aac:	shl    BYTE PTR [ebp-0x2de7ff36],0x3
  402ab3:	inc    edi
  402ab5:	jmp    0x4116b9
  402aba:	cmc    
  402abb:	jmp    0xd91512f3
  402ac0:	add    BYTE PTR [eax],al
  402ac2:	iret   
  402ac3:	or     eax,0xea87ffff
  402ac8:	sub    eax,eax
  402aca:	ror    DWORD PTR [ebp+0x8],0xf
  402ace:	ins    DWORD PTR es:[edi],dx
  402acf:	rcr    DWORD PTR [ebx-0x37],cl
  402ad2:	sbb    bl,BYTE PTR [ebx]
  402ad4:	add    BYTE PTR [ebp+0x31],dl
  402ad7:	xor    ah,bh
  402ad9:	push   ebx
  402ada:	stos   BYTE PTR es:[edi],al
  402adb:	ja     0x402ae8
  402add:	or     DWORD PTR [edx],0x4e
  402ae0:	dec    edi
  402ae1:	pop    ss
  402ae2:	(bad)  
  402ae3:	mov    DWORD PTR [ebx],ecx
  402ae5:	call   0x431d12
  402aea:	mov    dh,0x89
  402aec:	jmp    edi
  402aee:	fadd   QWORD PTR [edx]
  402af0:	add    eax,DWORD PTR [eax]
  402af2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402af3:	jmp    0xbcabd1e3
  402af8:	add    ebx,DWORD PTR [ebx+0x68]
  402afb:	cli    
  402afc:	(bad)  
  402afd:	jmp    ebp
  402aff:	inc    ecx
  402b00:	out    0x81,eax
  402b02:	ins    DWORD PTR es:[edi],dx
  402b03:	sbb    al,0xea
  402b05:	(bad)  
  402b06:	jle    0x402aae
  402b08:	xor    al,BYTE PTR [ebx+0x412b4934]
  402b0e:	xor    DWORD PTR [ebp+0x1f66154f],edi
  402b14:	push   0xebbcf028
  402b19:	mov    bl,BYTE PTR [eax-0x2b]
  402b1c:	fld    st(7)
  402b1e:	add    BYTE PTR [eax],al
  402b20:	xor    al,0x61
  402b22:	sub    al,0x41
  402b24:	xor    DWORD PTR [ebp+0x3a310003],edi
  402b2a:	pop    ss
  402b2b:	jo     0x402b36
  402b2d:	cld    
  402b2e:	add    eax,DWORD PTR [eax]
  402b30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b31:	enter  0x35d8,0xa1
  402b35:	jecxz  0x402b79
  402b37:	add    BYTE PTR [ecx],cl
  402b39:	adc    bl,bl
  402b3b:	call   DWORD PTR [esi]
  402b3d:	outs   dx,DWORD PTR ds:[esi]
  402b3e:	jmp    FWORD PTR [edi+0x59]
  402b41:	cld    
  402b42:	add    eax,DWORD PTR [eax]
  402b44:	xor    DWORD PTR [ebx+0x4bb48d03],edi
  402b4a:	jmp    0xec6c224e
  402b4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b50:	loope  0x402b66
  402b52:	fnstenvw [edi+ecx*4-0x3a2116b3]
  402b5a:	mov    ecx,0x4ec4bbeb
  402b5f:	fnstcw WORD PTR [edi+ecx*2+0x40593445]
  402b66:	adc    DWORD PTR [ebx+0x31],eax
  402b69:	cmp    al,0xeb
  402b6b:	add    esi,DWORD PTR [ecx]
  402b6d:	xchg   esp,eax
  402b6e:	inc    ecx
  402b6f:	jno    0x402beb
  402b71:	adc    al,0xe9
  402b73:	or     al,0x71
  402b75:	adc    eax,0x14303d64
  402b7a:	jmp    0xff00d83f
  402b7f:	fmul   DWORD PTR [esi+0x3e914]
  402b85:	add    BYTE PTR [ecx],dh
  402b87:	int    0x64
  402b89:	fmul   QWORD PTR [esi+0x26d8f6c5]
  402b8f:	adc    al,0xe9
  402b91:	ins    DWORD PTR es:[edi],dx
  402b92:	xor    DWORD PTR [edx],edi
  402b94:	jmp    0xe97a5d06
  402b99:	xchg   BYTE PTR [esp+ecx*8+0x6456d8c6],dh
  402ba0:	pop    esp
  402ba1:	jle    0x402bf0
  402ba3:	mov    ch,0xc6
  402ba5:	fsub   st,st(1)
  402ba7:	les    esi,FWORD PTR [edi+ecx*8+0x4e]
  402bab:	lds    esi,FWORD PTR [esi-0x3e384328]
  402bb1:	ss cli 
  402bb3:	adc    ebp,ecx
  402bb5:	or     al,0xf1
  402bb7:	adc    al,0x64
  402bb9:	hlt    
  402bba:	xor    DWORD PTR [ecx+ebp*8],edx
  402bbd:	imul   ebp,ebp,0xfffffffb
  402bc0:	daa    
  402bc1:	add    al,0x99
  402bc3:	inc    eax
  402bc4:	rol    DWORD PTR [edx+0x31],1
  402bc7:	mov    esp,0xc4fed7fe
  402bcc:	add    dl,ah
  402bce:	repnz adc al,0x84
  402bd1:	js     0x402c05
  402bd3:	adc    al,0x0
  402bd5:	jb     0x402b79
  402bd7:	xchg   esi,eax
  402bd8:	test   DWORD PTR [ebp-0x37],ebx
  402bdb:	(bad)  
  402bdc:	(bad)  
  402bdd:	mov    ecx,0x4dbcbc1c
  402be2:	jmp    0x396937ab
  402be7:	nop
  402be8:	fucompp 
  402bea:	add    BYTE PTR [eax],al
  402bec:	xor    dl,BYTE PTR [ecx+ecx*4]
  402bef:	ins    BYTE PTR es:[edi],dx
  402bf0:	shl    BYTE PTR [edi+edi*8-0x177148d2],cl
  402bf7:	push   ss
  402bf8:	mov    esp,eax
  402bfa:	push   eax
  402bfb:	xchg   ecx,eax
  402bfc:	retf   0x40fb
  402bff:	jmp    0xff20aa7d
  402c04:	les    bp,DWORD PTR [eax-0x15]
  402c08:	xor    dl,BYTE PTR [eax+eax*4]
  402c0b:	adc    DWORD PTR [ecx+0x2af6ffc8],esp
  402c11:	aam    0xf
  402c13:	gs iret 
  402c15:	adc    eax,DWORD PTR [eax]
  402c17:	jmp    0xee41f7cf
  402c1c:	fsub   QWORD PTR [edi+0x6432e900]
  402c22:	call   DWORD PTR [ebp+ebx*2-0x239004c]
  402c29:	les    esi,FWORD PTR [ebp-0x3ba947]
  402c2f:	shl    DWORD PTR [edi+edi*4],0xff
  402c33:	scas   al,BYTE PTR es:[edi]
  402c34:	mov    eax,0xfe96e899
  402c39:	ret    
  402c3a:	push   eax
  402c3b:	adc    DWORD PTR [ebp-0x16bf14],edi
  402c41:	mov    eax,esp
  402c43:	jle    0x402c2b
  402c45:	ret    
  402c46:	push   0x181a00
  402c4b:	and    BYTE PTR [eax+0xfffb53],0x0
  402c52:	jg     0x402c63
  402c54:	shl    BYTE PTR [esp+edx*1-0x69],0xbd
  402c59:	call   0x24017dd
  402c5e:	push   es
  402c5f:	pop    ds
  402c60:	push   eax
  402c61:	push   eax
  402c62:	dec    ebp
  402c63:	xchg   ebp,eax
  402c64:	cld    
  402c65:	out    dx,eax
  402c66:	jg     0x402c53
  402c68:	push   eax
  402c69:	call   0x40fcee
  402c6e:	cwde   
  402c6f:	mov    WORD PTR [ebp-0x149004],es
  402c75:	push   eax
  402c76:	pop    edi
  402c77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c78:	in     al,dx
  402c79:	out    dx,eax
  402c7a:	dec    edi
  402c7b:	jmp    0x402c65
  402c7d:	iret   
  402c7e:	inc    esp
  402c7f:	jmp    0x402c80
  402c81:	pop    eax
  402c82:	aas    
  402c83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c84:	call   0x512b6c78
  402c89:	inc    DWORD PTR [ebp-0x54]
  402c8c:	out    dx,eax
  402c8d:	(bad)  
  402c8e:	jg     0x402c3f
  402c90:	mov    esp,0xe8ea7ff4
  402c95:	sbb    DWORD PTR [eax-0x16],esp
  402c98:	(bad)  
  402c99:	jmp    0x402cd3
  402c9b:	lea    eax,[ebp-0x159004]
  402ca1:	push   eax
  402ca2:	jo     0x402cbe
  402ca4:	leave  
  402ca5:	add    BYTE PTR [eax+0x57],bl
  402ca8:	push   eax
  402ca9:	(bad)  
  402caa:	aad    0xea
  402cac:	out    dx,eax
  402cad:	(bad)  
  402cae:	jg     0x402cb7
  402cb0:	push   DWORD PTR [ebp-0x4594]
  402cb6:	add    BYTE PTR [eax],al
  402cb8:	lock inc ebx
  402cba:	hlt    
  402cbb:	dec    edi
  402cbd:	scas   al,BYTE PTR es:[edi]
  402cbe:	repnz idiv DWORD PTR [edi+0x31b5ffe9]
  402cc5:	(bad)  
  402cc6:	out    0xff,al
  402cc8:	push   cs
  402cc9:	xchg   ebp,eax
  402cca:	fdivrp st(7),st
  402ccc:	push   es
  402ccd:	call   0xffd6:0x920585d6
  402cd4:	or     BYTE PTR [edx],al
  402cd6:	aad    0xff
  402cd8:	out    dx,al
  402cd9:	xor    DWORD PTR [eax-0x4],edx
  402cdc:	fldcw  WORD PTR [edx]
  402cde:	retf   0x3100
  402ce1:	out    0x3,eax
  402ce3:	call   FWORD PTR [esp+ebx*2+0x54ceffe6]
  402cea:	xor    esi,esp
  402cec:	(bad)  
  402ced:	pop    ecx
  402cee:	imul   eax,DWORD PTR [eax],0xefe747be
  402cf4:	mov    dh,0x9
  402cf6:	jmp    0x402d3b
  402cf8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402cf9:	icebp  
  402cfa:	aad    0x8d
  402cfc:	lods   al,BYTE PTR ds:[esi]
  402cfd:	adc    dh,ah
  402cff:	call   FWORD PTR [esi-0x5e4a2984]
  402d05:	sbb    esi,edx
  402d07:	call   FWORD PTR [ecx+0x3100cbfe]
  402d0d:	xor    bl,al
  402d0f:	js     0x402cfb
  402d11:	ror    DWORD PTR [edi-0x2a367910],0xe8
  402d18:	push   cs
  402d19:	ret    0xffd5
  402d1c:	add    BYTE PTR [eax],al
  402d1e:	mov    eax,0x5eefec2f
  402d23:	loope  0x402cfa
  402d25:	mov    ch,0x49
  402d27:	(bad)  
  402d29:	call   FWORD PTR [ecx+0x31]
  402d2c:	int    0xff
  402d2e:	inc    esi
  402d2f:	lea    ebp,[eax+0x28]
  402d32:	lock lods al,BYTE PTR ds:[esi]
  402d34:	aam    0xb5
  402d36:	dec    ebp
  402d37:	(bad)  
  402d39:	call   FWORD PTR [ecx]
  402d3b:	cs int3 
  402d3d:	add    BYTE PTR [ecx],dh
  402d3f:	adc    al,0xf2
  402d41:	ret    
  402d42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d43:	sbb    eax,0xb2098772
  402d48:	xchg   esi,eax
  402d49:	aad    0xba
  402d4b:	les    esp,FWORD PTR [edx+0x17]
  402d4e:	xchg   ebp,eax
  402d4f:	in     al,dx
  402d50:	daa    
  402d51:	add    al,0x2
  402d53:	jns    0x402dd3
  402d55:	(bad)  
  402d56:	or     eax,0xd9d576b2
  402d5b:	sub    esp,DWORD PTR [ecx+0x6c8f3104]
  402d61:	loopne 0x402d31
  402d63:	rcr    DWORD PTR [esi+0x34],0xd6
  402d67:	xchg   DWORD PTR [ebp-0x1b],eax
  402d6a:	into   
  402d6b:	rol    DWORD PTR [ecx+0x53],0xf8
  402d6f:	adc    al,0xe9
  402d71:	jle    0x402d64
  402d73:	cmp    al,0xb2
  402d75:	aam    0x7c
  402d77:	mov    al,0x46
  402d79:	aad    0xae
  402d7b:	lods   al,BYTE PTR ds:[esi]
  402d7c:	das    
  402d7d:	out    0xa6,al
  402d7f:	shl    DWORD PTR [eax+0x7f],0x0
  402d83:	add    BYTE PTR [ecx-0x692ae14f],cl
  402d89:	xchg   DWORD PTR [ecx],eax
  402d8b:	in     eax,0x8e
  402d8d:	rol    DWORD PTR [ecx],0x16
  402d90:	jle    0x402d53
  402d92:	push   es
  402d93:	mov    eax,ds:0x3a7ec01
  402d98:	jbe    0x402d21
  402d9a:	or     eax,0x1c16ee5
  402d9f:	and    edi,DWORD PTR [ecx+0x14]
  402da2:	jmp    0x2889eaf
  402da7:	mov    DWORD PTR [esp+ebp*4-0x72b12b3a],esp
  402dae:	(bad)  [eax+0x43114404]
  402db4:	xor    ebp,eax
  402db6:	test   esp,edx
  402db8:	jl     0x402d72
  402dba:	add    dh,al
  402dbc:	add    eax,0xfae1e8c1
  402dc1:	adc    eax,DWORD PTR [eax]
  402dc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402dc4:	scas   eax,DWORD PTR es:[edi]
  402dc5:	ret    
  402dc6:	out    dx,eax
  402dc7:	sahf   
  402dc8:	std    
  402dc9:	stos   DWORD PTR es:[edi],eax
  402dca:	pop    edx
  402dcb:	xchg   ebp,esp
  402dcd:	sar    bh,0x54
  402dd0:	push   cs
  402dd1:	mov    cl,0xff
  402dd3:	xchg   BYTE PTR [edx],cl
  402dd5:	push   ecx
  402dd6:	out    dx,al
  402dd7:	jle    0x402db6
  402dd9:	pusha  
  402dda:	pop    esi
  402ddb:	mov    al,ds:0x7d8b66f1
  402de0:	pop    eax
  402de1:	or     al,0xe8
  402de3:	push   edx
  402de4:	in     al,dx
  402de5:	sar    bh,0x72
  402de8:	add    BYTE PTR [eax],al
  402dea:	mov    ds:0x1a2335c0,al
  402def:	push   ebx
  402df0:	add    BYTE PTR [esi+0x30],bl
  402df3:	shl    DWORD PTR [ebp-0xf],0xb5
  402df7:	push   ebp
  402df8:	add    al,0x70
  402dfa:	(bad)  
  402dfb:	retf   0xa828
  402dfe:	xor    cl,bl
  402e00:	ret    0x32e5
  402e03:	mov    edx,DWORD PTR [di]
  402e06:	mov    cl,0xd7
  402e08:	clc    
  402e09:	mov    dh,0xd5
  402e0b:	push   esi
  402e0c:	clc    
  402e0d:	jmp    0x6a404244
  402e12:	fisttp WORD PTR [ebx]
  402e14:	add    BYTE PTR [ebp-0x80],bh
  402e17:	shl    DWORD PTR [ebp-0x13],0x5d
  402e1b:	inc    esi
  402e1c:	or     BYTE PTR [ebx-0xcf953ce],al
  402e22:	add    al,0x89
  402e25:	sub    al,0x81
  402e27:	lods   al,BYTE PTR ds:[esi]
  402e28:	pop    es
  402e29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e2a:	call   0x33292eee
  402e2f:	adc    al,0x8b
  402e31:	or     al,0x87
  402e33:	jmp    0x402e75
  402e35:	add    BYTE PTR [eax-0x1f],cl
  402e38:	adc    ecx,DWORD PTR [ebx+0x473be40d]
  402e3e:	sbb    al,0x5d
  402e40:	or     edi,eax
  402e42:	dec    ebp
  402e43:	rol    BYTE PTR [ecx],1
  402e45:	add    BYTE PTR [eax],cl
  402e47:	adc    al,0xeb
  402e49:	push   es
  402e4a:	mov    ds:0xff0b23,eax
  402e4f:	add    BYTE PTR ds:0xa07d83e1,ch
  402e55:	sbb    BYTE PTR [ebp+0x8],dh
  402e58:	mov    bh,0x5d
  402e5a:	cld    
  402e5b:	call   0x4011ea
  402e60:	push   ebx
  402e61:	dec    ebp
  402e62:	clc    
  402e63:	pop    edi
  402e64:	xchg   ecx,eax
  402e65:	(bad)  
  402e66:	or     BYTE PTR [eax],al
  402e68:	lahf   
  402e69:	ds cmp eax,0x5940ca
  402e6f:	jmp    0x402e41
  402e71:	cli    
  402e72:	mov    bh,BYTE PTR [edi]
  402e74:	jo     0x402ec1
  402e76:	idiv   bh
  402e78:	ja     0x402e39
  402e7a:	(bad)  
  402e7b:	jne    0x402e79
  402e7d:	retf   0xca05
  402e80:	xor    BYTE PTR [ecx+0x0],bl
  402e83:	add    BYTE PTR [eax+0x4b5f0013],bl
  402e89:	std    
  402e8a:	mov    ch,ah
  402e8c:	(bad)  
  402e8e:	imul   eax,DWORD PTR [eax],0xe8085d27
  402e94:	dec    edi
  402e95:	sar    edi,1
  402e97:	inc    DWORD PTR [ebx]
  402e99:	sar    bh,1
  402e9b:	jne    0x402e1d
  402e9d:	(bad)  [edx]
  402e9f:	(bad)  
  402ea0:	pop    eax
  402ea1:	adc    eax,DWORD PTR [ebx+0xf5d59f8]
  402ea7:	push   edi
  402ea8:	enter  0x2221,0x75
  402eac:	pusha  
  402ead:	iret   
  402eae:	lea    esi,[edi+0x31]
  402eb1:	lods   al,BYTE PTR ds:[esi]
  402eb2:	jle    0x402e7c
  402eb4:	add    BYTE PTR [eax],al
  402eb6:	inc    edx
  402eb7:	cdq    
  402eb8:	xor    ch,BYTE PTR [eax-0x8]
  402ebb:	and    eax,DWORD PTR [ebp+0x0]
  402ebe:	fsubrp st(4),st
  402ec0:	outs   dx,BYTE PTR ds:[esi]
  402ec1:	enter  0xad31,0xfe
  402ec5:	mov    edi,0x40c9b99d
  402eca:	xor    eax,0x8b5c5dad
  402ecf:	lods   eax,DWORD PTR ds:[esi]
  402ed0:	cmp    ch,al
  402ed2:	mov    esi,0x3a000374
  402ed7:	ins    DWORD PTR es:[edi],dx
  402ed8:	push   edi
  402ed9:	add    eax,0xeb03acf7
  402ede:	xor    dh,BYTE PTR [edi+0xa]
  402ee1:	add    BYTE PTR [esi+0x31c6b295],al
  402ee7:	lods   eax,DWORD PTR ds:[esi]
  402ee8:	xchg   al,bh
  402eea:	xor    bl,dh
  402eec:	push   es
  402eed:	(bad)  
  402eee:	lods   eax,DWORD PTR cs:[esi]
  402ef0:	jle    0x402eb9
  402ef2:	outs   dx,DWORD PTR ds:[esi]
  402ef3:	xchg   BYTE PTR [edx+eax*8-0x74c752d3],bh
  402efa:	int    0x29
  402efc:	(bad)  
  402efd:	cld    
  402efe:	stos   BYTE PTR es:[edi],al
  402eff:	ja     0x402f00
  402f01:	add    al,0x31
  402f03:	fld    QWORD PTR [ebx]
  402f05:	add    BYTE PTR [ecx],al
  402f07:	push   ebp
  402f08:	shl    ebp,0x9e
  402f0b:	cmc    
  402f0c:	jnp    0x402f53
  402f0e:	xchg   ebp,eax
  402f0f:	sbb    eax,0x9f8e0c58
  402f14:	iret   
  402f15:	(bad)  
  402f16:	cld    
  402f17:	mov    ah,0xdb
  402f19:	hlt    
  402f1a:	add    BYTE PTR [eax],al
  402f1c:	test   BYTE PTR ds:0xdcfcffd2,dl
  402f22:	shl    BYTE PTR [ebp+0x3d],cl
  402f25:	(bad)  
  402f26:	push   edi
  402f27:	cld    
  402f28:	pop    ecx
  402f29:	xor    al,0x8
  402f2b:	add    BYTE PTR [ecx],dh
  402f2d:	adc    al,0xe6
  402f2f:	push   edi
  402f30:	push   ebp
  402f31:	stos   DWORD PTR es:[edi],eax
  402f32:	jns    0x402f0b
  402f34:	dec    esi
  402f35:	mov    esi,0x1435c6a0
  402f3a:	cmp    bl,BYTE PTR [edi+eiz*1-0x13]
  402f3e:	daa    
  402f3f:	add    al,0x49
  402f41:	loop   0x402eea
  402f43:	add    al,0x31
  402f45:	or     DWORD PTR [ecx-0x6e76bca8],ebp
  402f4b:	pop    esp
  402f4c:	push   ebx
  402f4d:	jmp    0x402f76
  402f4f:	add    al,0x82
  402f51:	lods   al,BYTE PTR ds:[esi]
  402f52:	mov    cl,0xca
  402f54:	xor    DWORD PTR [edx+ecx*2],edx
  402f57:	pop    ss
  402f58:	pop    eax
  402f59:	push   ebx
  402f5a:	jmp    0x72a8218b
  402f5f:	loopne 0x402fc0
  402f61:	popa   
  402f62:	push   ss
  402f63:	shl    DWORD PTR [esp+ecx*1-0x7f],1
  402f67:	lahf   
  402f68:	out    dx,eax
  402f69:	adc    al,0xe9
  402f6b:	jae    0x402f97
  402f6d:	aam    0xdc
  402f6f:	or     BYTE PTR [esi+0x59],dh
  402f72:	mov    edi,0xe90cf3ba
  402f77:	jl     0x402fbd
  402f79:	or     al,0x79
  402f7b:	jge    0x402f56
  402f7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f7e:	jb     0x402fd7
  402f80:	add    BYTE PTR [eax],al
  402f82:	and    eax,0xe8d028e9
  402f87:	mov    ebp,0xa4a6d136
  402f8c:	cmp    esp,DWORD PTR [edx+0x3e694c1]
  402f92:	sbb    eax,0x9934b61b
  402f97:	xchg   edi,eax
  402f98:	das    
  402f99:	add    al,0x31
  402f9b:	or     DWORD PTR [ecx],ebp
  402f9d:	push   edi
  402f9e:	ss pop ebp
  402fa0:	mov    ds:0xf1d26831,al
  402fa5:	add    edi,DWORD PTR [eax+0x7b6a0016]
  402fab:	sbb    bl,ch
  402fad:	pop    ss
  402fae:	lods   eax,DWORD PTR ds:[esi]
  402faf:	adc    eax,DWORD PTR [eax]
  402fb1:	jmp    0x3f9b8ce8
  402fb6:	mov    dl,dl
  402fb8:	or     cl,ch
  402fba:	dec    DWORD PTR [eax+0xbf762ec]
  402fc0:	or     ebp,DWORD PTR [ecx+0x18016de]
  402fc6:	xor    eax,0x32710947
  402fcb:	adc    al,0x0
  402fcd:	jmp    0xe94501ad
  402fd2:	xor    eax,0xb2f6ebe2
  402fd7:	sti    
  402fd8:	pop    ebx
  402fd9:	sbb    eax,0xbe38942e
  402fde:	addr16 adc eax,0x1432e8ba
  402fe4:	add    BYTE PTR [edx+0x7a370000],dl
  402fea:	add    cl,ch
  402fec:	xor    dl,BYTE PTR [eax+eax*2]
  402fef:	imul   ebp,DWORD PTR [edx],0x554d7514
  402ff5:	ror    cl,cl
  402ff7:	sub    esi,DWORD PTR [esi]
  402ff9:	adc    al,0x55
  402ffb:	(bad)  
  402ffc:	out    0x64,al
  402ffe:	push   esi
  402fff:	mov    edx,0xec0c573d
  403004:	xor    bl,BYTE PTR [eax]
  403006:	add    cl,ch
  403008:	jecxz  0x402fbd
  40300a:	push   eax
  40300b:	inc    ecx
  40300c:	fadd   st(7),st
  40300e:	jmp    FWORD PTR [esi]
  403010:	sbb    eax,0x15418bbc
  403015:	inc    edi
  403016:	or     BYTE PTR [edx+0x4f],dh
  403019:	adc    bl,ch
  40301b:	jmp    0x402feb
  40301d:	dec    edx
  40301e:	or     esp,DWORD PTR [eax]
  403020:	out    0x16,al
  403022:	add    BYTE PTR [eax],0x6e
  403025:	mov    esi,0x7963f574
  40302a:	je     0x40302e
  40302c:	hlt    
  40302d:	stc    
  40302e:	sub    al,al
  403030:	repnz xchg ebp,eax
  403032:	leave  
  403033:	jne    0x40309b
  403035:	cmp    bl,al
  403037:	pop    ebx
  403038:	push   cs
  403039:	in     eax,dx
  40303a:	enter  0x50c2,0x10
  40303e:	push   ebx
  40303f:	push   esi
  403040:	mov    eax,ds:0x4800000b
  403045:	inc    eax
  403046:	xor    edx,edx
  403048:	mov    BYTE PTR [edi],ah
  40304a:	fist   DWORD PTR [eax+0x40ac0000]
  403050:	movzx  ecx,al
  403053:	inc    eax
  403054:	cmp    al,0x2b
  403056:	cwde   
  403057:	pop    ebp
  403058:	push   es
  403059:	nop
  40305a:	fwait
  40305b:	(bad)  
  40305c:	ds nop
  40305e:	pop    ebx
  40305f:	and    al,0x2f
  403061:	nop
  403062:	and    eax,0xca839012
  403067:	or     edx,DWORD PTR [eax-0x6fd853bd]
  40306d:	jl     0x403041
  40306f:	or     edi,DWORD PTR [ecx]
  403071:	nop
  403072:	iret   
  403073:	or     al,0x4
  403075:	add    al,0xcb
  403077:	xchg   DWORD PTR [ebx+0x3c],eax
  40307a:	cdq    
  40307b:	inc    edi
  40307c:	jl     0x403089
  40307e:	sbb    al,0xee
  403080:	(bad)  
  403081:	jg     0x403059
  403083:	sbb    eax,DWORD PTR [ecx-0x70]
  403086:	retf   
  403087:	xchg   DWORD PTR [ebx+0x3c],eax
  40308a:	jns    0x4030d3
  40308c:	jl     0x403098
  40308e:	pushf  
  40308f:	dec    ebp
  403090:	nop
  403091:	jg     0x403028
  403093:	sbb    eax,DWORD PTR [edi+0x3]
  403096:	pop    eax
  403097:	push   edi
  403098:	rol    edx,0x96
  40309b:	mov    ch,0xb1
  40309d:	shl    DWORD PTR [ecx],0xf7
  4030a0:	add    eax,0xbbda738b
  4030a5:	ror    DWORD PTR [ecx-0x456fc53b],0x6
  4030ac:	je     0x40310c
  4030ae:	or     ch,dh
  4030b0:	cmp    BYTE PTR [ebx-0x61b30000],cl
  4030b6:	ss push esi
  4030b8:	push   ebp
  4030b9:	inc    esi
  4030ba:	pop    eax
  4030bb:	or     BYTE PTR [ecx-0x5eefafba],ah
  4030c1:	ss inc eax
  4030c3:	or     al,0xa1
  4030c5:	push   ds
  4030c6:	stos   DWORD PTR es:[edi],eax
  4030c7:	jecxz  0x4030dc
  4030c9:	pop    ebp
  4030ca:	xor    al,0x90
  4030cc:	sbb    edi,edi
  4030ce:	into   
  4030cf:	jmp    DWORD PTR [esi]
  4030d1:	pop    ebp
  4030d2:	mov    cl,cl
  4030d4:	lahf   
  4030d5:	mov    ch,0x99
  4030d7:	ror    DWORD PTR [ecx],0xc5
  4030da:	jae    0x40311f
  4030dc:	adc    esi,DWORD PTR [ebp+0x73]
  4030df:	pop    ecx
  4030e0:	mov    eax,ds:0xa104c52d
  4030e5:	sub    eax,0x11a104dc
  4030ea:	scas   al,BYTE PTR es:[edi]
  4030eb:	nop
  4030ec:	mov    edx,0x865e736d
  4030f1:	es mov ebp,0x38ad2dc2
  4030f7:	mov    eax,ebp
  4030f9:	sub    eax,edi
  4030fb:	in     al,dx
  4030fc:	iret   
  4030fd:	pop    ecx
  4030fe:	into   
  4030ff:	push   ebx
  403100:	sbb    al,BYTE PTR [esi]
  403102:	add    BYTE PTR [ebp-0x43],0x7c
  403106:	pop    ebx
  403107:	or     BYTE PTR ds:[ebx+eax*1-0x1],ch
  40310c:	fs sahf 
  40310e:	sbb    al,0x41
  403110:	xor    DWORD PTR [ebp+0x26],edx
  403113:	(bad)  
  403114:	xor    DWORD PTR [ebp+0xbffa],ebp
  40311a:	sbb    al,0x14
  40311c:	retf   
  40311d:	into   
  40311e:	add    al,0x24
  403120:	push   ds
  403121:	pop    eax
  403122:	xor    eax,0x3159ea2e
  403127:	mov    ebx,0x4077fb94
  40312c:	add    eax,0xe9d245db
  403131:	add    edi,DWORD PTR [edx]
  403133:	aam    0x7c
  403135:	add    al,0xf2
  403137:	mov    edx,0xaa49cf74
  40313c:	lods   al,BYTE PTR ds:[esi]
  40313d:	add    al,0x31
  40313f:	cmpps  xmm7,xmm5,0xad
  403143:	shr    cl,1
  403145:	add    esi,DWORD PTR [ecx]
  403147:	mov    DWORD PTR [ecx+edx*8+0x37],esp
  40314b:	mov    edx,0x109934c6
  403150:	call   0x93ec6258
  403155:	enter  0x1431,0xe2
  403159:	ret    
  40315a:	es nop
  40315c:	push   ebp
  40315d:	add    al,0x31
  40315f:	adc    al,0xdc
  403161:	pop    es
  403162:	xor    BYTE PTR [ecx+ebp*8],dl
  403165:	cld    
  403166:	mov    bh,0x73
  403168:	jmp    0xe96e6270
  40316d:	jle    0x403123
  40316f:	lds    edi,FWORD PTR [edi-0x33]
  403172:	out    0x64,al
  403174:	or     DWORD PTR [ebp+0x7ee914f5],0xcd67c5ac
  40317e:	add    BYTE PTR [eax],al
  403180:	into   
  403181:	fs push ecx
  403183:	inc    esp
  403184:	(bad)  
  403185:	mov    ecx,0x3f7ef956
  40318a:	in     eax,dx
  40318b:	pop    ebx
  40318c:	in     eax,dx
  40318d:	in     al,dx
  40318e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40318f:	add    edi,DWORD PTR [edi+ecx*4-0x465931c6]
  403196:	add    BYTE PTR [ecx+0x2ef6db7a],bl
  40319c:	fs mov ecx,0xac42f175
  4031a2:	and    al,0x16
  4031a4:	je     0x40315f
  4031a6:	jmp    0x40318e
  4031a8:	ins    DWORD PTR es:[edi],dx
  4031a9:	aas    
  4031aa:	or     BYTE PTR [esi+ebp*4-0x3b],bl
  4031ae:	inc    BYTE PTR [esi]
  4031b0:	jl     0x403216
  4031b2:	call   0xfff9b0f5
  4031b7:	pusha  
  4031b8:	mov    dh,0xa8
  4031ba:	(bad)  
  4031bb:	out    dx,al
  4031bc:	gs add BYTE PTR cs:[ebx+0x35],dl
  4031c1:	add    dl,BYTE PTR cs:[ebx+0x2d]
  4031c5:	add    eax,DWORD PTR cs:[ecx+0x35]
  4031c9:	adc    al,0x0
  4031cb:	test   eax,0xc7ec7f65
  4031d0:	std    
  4031d1:	mov    eax,0x13f1cde8
  4031d6:	add    BYTE PTR [eax+0x77],ah
  4031d9:	mov    esp,0xba053540
  4031de:	jne    0x4031d9
  4031e0:	std    
  4031e1:	ds or  al,0x9e
  4031e4:	add    BYTE PTR [eax],al
  4031e6:	pop    edi
  4031e7:	mov    esp,0xb8dcc7e8
  4031ec:	jmp    DWORD PTR [edx-0x36]
  4031ef:	mov    eax,0xde0a8175
  4031f4:	ret    
  4031f5:	jmp    0xfd1b3f2c
  4031fa:	fnstcw WORD PTR [ecx-0x471b824b]
  403200:	call   DWORD PTR [ecx+0x3f]
  403203:	rol    BYTE PTR [eax],1
  403205:	jmp    0x582cb0ff
  40320a:	in     eax,dx
  40320b:	mov    eax,0xb8e021e8
  403210:	inc    DWORD PTR [eax]
  403212:	and    edx,esp
  403214:	pop    ebx
  403215:	leave  
  403216:	pop    edx
  403217:	mov    ecx,0xd91354ff
  40321c:	add    esp,0xffffc754
  403222:	retf   
  403223:	(bad)  
  403224:	jne    0x403232
  403226:	daa    
  403227:	bound  ecx,QWORD PTR [eax]
  403229:	push   0x411d66
  40322e:	daa    
  40322f:	and    dl,BYTE PTR [ebx+0x29]
  403232:	cdq    
  403233:	adc    al,0xe8
  403235:	mov    ecx,0xbffcc5d
  40323a:	or     BYTE PTR [eax+0x1448da84],bh
  403240:	add    BYTE PTR [ebx],ch
  403242:	jae    0x40327e
  403244:	test   edi,ebp
  403246:	data16 int3 
  403248:	call   DWORD PTR [eax+0x0]
  40324b:	add    al,dh
  40324d:	adc    eax,DWORD PTR [ecx]
  40324f:	add    BYTE PTR [eax-0x24],cl
  403252:	in     al,0xc3
  403254:	sbb    BYTE PTR [ebx+ecx*1],dl
  403257:	rcl    BYTE PTR [edi],0x38
  40325a:	mov    ebp,0x3d140800
  40325f:	add    al,0x9
  403261:	adc    al,0x0
  403263:	setg   BYTE PTR [esi+0x3d180000]
  40326a:	inc    ebp
  40326b:	cld    
  40326c:	cmp    al,bl
  40326e:	mov    edx,0x8dcba7e9
  403273:	test   edi,eax
  403275:	retf   0xffff
  403278:	dec    eax
  403279:	fmul   DWORD PTR [edi-0x3]
  40327c:	addr16 retf 
  40327e:	or     eax,eax
  403280:	(bad)  [edi+0x5120c467]
  403286:	add    BYTE PTR [ebp-0x124b3],cl
  40328c:	xor    DWORD PTR [esi+0x34],ebx
  40328f:	call   0xb935d
  403294:	scas   al,BYTE PTR es:[edi]
  403295:	js     0x403292
  403297:	dec    edi
  403298:	cdq    
  403299:	mov    edx,0x529effd1
  40329e:	sti    
  40329f:	(bad)  
  4032a0:	sbb    al,0xb5
  4032a2:	js     0x403229
  4032a4:	sahf   
  4032a5:	out    dx,eax
  4032a6:	retf   0xe1ff
  4032a9:	and    al,0xba
  4032ab:	cmc    
  4032ac:	jle    0x4032cc
  4032ae:	xor    al,0xff
  4032b0:	add    BYTE PTR [eax],al
  4032b2:	cld    
  4032b3:	or     BYTE PTR [eax+ebp*8],dh
  4032b6:	xlat   BYTE PTR ds:[ebx]
  4032b7:	and    ebx,ecx
  4032b9:	(bad)  
  4032ba:	cmp    ch,ch
  4032bc:	dec    edi
  4032bd:	push   ebx
  4032be:	pop    esi
  4032bf:	cmp    bh,al
  4032c1:	call   0xb473c
  4032c6:	mov    eax,0xc483cbe8
  4032cb:	mov    ah,0x3
  4032cd:	je     0x4032c2
  4032cf:	das    
  4032d0:	inc    eax
  4032d1:	hlt    
  4032d2:	loope  0x403299
  4032d4:	push   eax
  4032d5:	cld    
  4032d6:	sbb    DWORD PTR [edi],ebx
  4032d8:	rol    BYTE PTR [eax],0x31
  4032db:	xor    bl,al
  4032dd:	js     0x403342
  4032df:	jle    0x403331
  4032e1:	hlt    
  4032e2:	or     DWORD PTR [ebx-0x3dceff3a],ebp
  4032e8:	ret    
  4032e9:	je     0x40333a
  4032eb:	std    
  4032ec:	retf   0xf975
  4032ef:	xchg   esp,eax
  4032f0:	add    eax,0x7e85f6f2
  4032f5:	fmul   DWORD PTR [ecx-0x7d07af72]
  4032fb:	sbb    eax,0x3de32cdc
  403300:	retf   0x5cff
  403303:	inc    ecx
  403304:	(bad)  
  403306:	repz adc ebp,ecx
  403309:	add    edi,DWORD PTR [edx+0x44caed50]
  40330f:	mov    esp,0xccc90366
  403314:	pop    eax
  403315:	retf   0x0
  403318:	scas   al,BYTE PTR es:[edi]
  403319:	mov    dh,0xbc
  40331b:	(bad)  
  40331c:	cdq    
  40331d:	in     eax,0x4f
  40331f:	retf   0x8a9e
  403322:	sub    ch,BYTE PTR [esi]
  403324:	push   0xe403e1d1
  403329:	mov    dl,BYTE PTR ds:0xf138ba32
  40332f:	fisub  WORD PTR [eax]
  403331:	pop    edi
  403332:	add    al,BYTE PTR [ecx]
  403334:	stos   DWORD PTR es:[edi],eax
  403335:	dec    esi
  403336:	call   0x698f69b6
  40333b:	or     dh,BYTE PTR [ecx]
  40333d:	inc    ecx
  40333e:	hlt    
  40333f:	sub    esi,ebp
  403341:	dec    esi
  403342:	imul   ecx,DWORD PTR [edx],0x83034011
  403348:	push   cs
  403349:	or     DWORD PTR [ebp-0x21],ebx
  40334c:	mov    cl,0xf6
  40334e:	repnz dec edi
  403350:	push   ecx
  403351:	xchg   ebx,eax
  403352:	push   ss
  403353:	sti    
  403354:	ret    0x62da
  403357:	inc    edi
  403358:	cmp    DWORD PTR [ebp-0x6ff103c4],esi
  40335e:	stos   DWORD PTR es:[edi],eax
  40335f:	add    al,0x31
  403361:	xchg   ecx,eax
  403362:	mov    cl,0x4
  403364:	lahf   
  403365:	in     eax,dx
  403366:	push   0xc9b54948
  40336b:	dec    edi
  40336c:	sbb    al,0x94
  40336e:	sbb    eax,0x1d07fe0c
  403373:	cli    
  403374:	jbe    0x4033ae
  403376:	ror    eax,1
  403378:	cmp    eax,DWORD PTR [eax-0x12]
  40337b:	add    DWORD PTR [eax],0x0
  40337e:	gs cld 
  403380:	jge    0x40337d
  403382:	gs or  eax,0xfc71af00
  403388:	(bad)  
  403389:	jmp    0xec2b467b
  40338e:	in     eax,0xc8
  403390:	pop    edi
  403391:	xor    bh,dh
  403393:	adc    BYTE PTR [eax],al
  403395:	mov    esp,0x2583a835
  40339a:	xchg   ecx,eax
  40339b:	popa   
  40339c:	add    DWORD PTR [edx+eax*4],0xffffffe6
  4033a0:	inc    eax
  4033a1:	jmp    0x6a5273d8
  4033a6:	cs mov edi,0x1432a82e
  4033ac:	je     0x40339e
  4033ae:	lods   eax,DWORD PTR ds:[esi]
  4033af:	neg    esp
  4033b1:	iret   
  4033b2:	repz adc eax,DWORD PTR [eax]
  4033b5:	pushf  
  4033b6:	xor    ecx,ebp
  4033b8:	mov    edi,0x8d2abb2
  4033bd:	jmp    0xa5080d07
  4033c2:	outs   dx,BYTE PTR ds:[esi]
  4033c3:	adc    al,0x0
  4033c5:	jmp    0xf185bafc
  4033ca:	add    dh,BYTE PTR [ebp+0x13e4f175]
  4033d0:	push   esp
  4033d2:	arpl   si,sp
  4033d4:	inc    eax
  4033d5:	jmp    0x32b4a90f
  4033da:	or     eax,0x32e9c23e
  4033df:	mov    eax,edx
  4033e1:	ins    BYTE PTR es:[edi],dx
  4033e2:	add    BYTE PTR [eax],al
  4033e4:	pop    edi
  4033e5:	rcl    BYTE PTR [eax+0x43],0x4d
  4033e9:	(bad)  
  4033ea:	call   esp
  4033ec:	xlat   BYTE PTR ds:[ebx]
  4033ed:	in     eax,0x40
  4033ef:	jmp    0xd0b4a8f9
  4033f4:	icebp  
  4033f5:	dec    esi
  4033f6:	in     al,0xe8
  4033f8:	xor    dl,BYTE PTR [eax+eax*1]
  4033fb:	mov    ?,WORD PTR [edi-0x44]
  4033fe:	pop    DWORD PTR [eax]
  403400:	adc    eax,0x5c75ffd8
  403405:	cmp    al,0x45
  403407:	in     al,dx
  403408:	dec    ebx
  403409:	dec    esi
  40340a:	or     al,0x0
  40340c:	les    edi,FWORD PTR [ecx+0xf6845c6]
  403412:	add    BYTE PTR [eax],al
  403414:	enter  0x7d7,0xc7
  403418:	test   eax,esp
  40341a:	add    BYTE PTR [eax],al
  40341c:	cwde   
  40341d:	adc    BYTE PTR [edx+0x0],ch
  403420:	adc    BYTE PTR [eax],0x6a
  403423:	adc    BYTE PTR ds:0x7250e3f6,cl
  403429:	adc    bh,bh
  40342b:	jne    0x403471
  40342d:	int3   
  40342e:	adc    eax,0x515ef5
  403433:	or     ecx,DWORD PTR [eax+0x45]
  403436:	add    DWORD PTR [ebx+0xb],eax
  403439:	dec    esi
  40343a:	hlt    
  40343b:	add    ah,al
  40343d:	mov    eax,0xd96475fe
  403442:	call   0xc3:0x8b1048c1
  403449:	add    bl,al
  40344b:	jns    0x40340f
  40344d:	or     BYTE PTR [eax-0x1b],bl
  403450:	mov    ch,ah
  403452:	dec    edi
  403453:	bound  ecx,QWORD PTR [eax]
  403455:	call   0x41031e
  40345a:	or     BYTE PTR [eax],al
  40345c:	call   0x1c3d01
  403461:	push   eax
  403462:	out    dx,eax
  403463:	inc    ebp
  403464:	or     BYTE PTR [eax+0x0],dl
  403467:	jp     0x40342a
  403469:	add    BYTE PTR [eax],cl
  40346b:	add    cl,cl
  40346d:	ret    0x1814
  403470:	push   ebp
  403471:	mov    ebx,DWORD PTR [edi+edx*4-0x68c4033c]
  403478:	jge    0x403482
  40347a:	xor    DWORD PTR [ebp+0x7d1a0750],edi
  403480:	sub    ecx,ecx
  403482:	repz rol DWORD PTR [ebx],0x2b
  403486:	cli    
  403487:	pop    es
  403488:	add    al,0x6a
  40348a:	xor    DWORD PTR [edi],edx
  40348c:	add    al,0x6a
  40348e:	xor    DWORD PTR [edi],edx
  403490:	(bad)  
  403491:	(bad)  
  403492:	cmp    al,0xa5
  403494:	pop    ecx
  403495:	add    BYTE PTR [ebx-0x43],cl
  403498:	fcmovnb st,st(4)
  40349a:	lock mov ebp,0xc9710b03
  4034a0:	adc    cl,BYTE PTR [ecx+0x75c758ec]
  4034a6:	popf   
  4034a7:	inc    ebp
  4034a8:	cs lock xchg esi,eax
  4034ab:	jmp    0x1905:0xbffa
  4034b2:	jnp    0x40348c
  4034b4:	sbb    edi,DWORD PTR [ebp-0x7781ffa7]
  4034ba:	(bad)  
  4034bb:	push   ebx
  4034bc:	or     ecx,DWORD PTR [edx]
  4034be:	(bad)  
  4034bf:	jne    0x4034fa
  4034c1:	xchg   edi,eax
  4034c2:	add    ebp,DWORD PTR [edx+0x31]
  4034c5:	add    eax,0xbd31c16d
  4034ca:	cli    
  4034cb:	mov    edi,0xe832b4dc
  4034d0:	sub    BYTE PTR [ebp-0x29e5003a],ch
  4034d6:	jp     0x40349b
  4034d8:	fisub  DWORD PTR [ebx-0x3f]
  4034db:	add    al,0x31
  4034dd:	lock jp 0x4034cc
  4034e0:	mov    dl,0x78
  4034e2:	xlat   BYTE PTR ds:[ebx]
  4034e3:	push   eax
  4034e4:	or     BYTE PTR [edx+esi*1],0x57
  4034e8:	xchg   DWORD PTR [esi],esp
  4034ea:	inc    eax
  4034eb:	or     al,0xa4
  4034ed:	xor    al,0x83
  4034ef:	add    BYTE PTR [ecx],dh
  4034f1:	mov    ebp,0x13ec1478
  4034f6:	jmp    0x725465fe
  4034fb:	stos   DWORD PTR es:[edi],eax
  4034fc:	stos   BYTE PTR es:[edi],al
  4034fd:	fld    TBYTE PTR [eax+0x249d37db]
  403503:	fdivr  DWORD PTR [edx-0x27fd0ed0]
  403509:	(bad)  
  40350b:	xor    DWORD PTR [edx-0x35e5494a],0xffffff96
  403512:	jb     0x40351f
  403514:	add    BYTE PTR [eax],al
  403516:	inc    ebx
  403517:	and    ch,dl
  403519:	retf   0x5379
  40351c:	jmp    0x2a3f6624
  403521:	add    ch,BYTE PTR [ecx-0x47285b4e]
  403527:	dec    edx
  403528:	add    DWORD PTR [ecx+0x24],edi
  40352b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40352c:	es std 
  40352e:	xor    edi,esi
  403530:	stos   DWORD PTR es:[edi],eax
  403531:	pop    esi
  403532:	jbe    0x40358d
  403534:	in     eax,0x7c
  403536:	(bad)  
  403538:	push   ss
  403539:	mov    esi,0xa71f1bf7
  40353e:	mov    ebx,0x3d3d2e8b
  403543:	sub    dh,BYTE PTR [ebp+0x7cb34111]
  403549:	xlat   BYTE PTR ds:[ebx]
  40354a:	pop    esi
  40354b:	sub    cl,dh
  40354d:	js     0x40353b
  40354f:	mov    ds:0x1424db99,eax
  403554:	jmp    0xedac7a5c
  403559:	add    esi,DWORD PTR [ecx]
  40355b:	adc    al,0x72
  40355d:	inc    edi
  40355e:	and    DWORD PTR [edi+0x4e8e268c],esp
  403564:	xor    BYTE PTR [ecx],ch
  403566:	mov    ebx,ebx
  403568:	stos   DWORD PTR es:[edi],eax
  403569:	clc    
  40356a:	push   ds
  40356b:	dec    ecx
  40356c:	jb     0x403546
  40356e:	mov    dl,0xd8
  403570:	add    BYTE PTR [ebp+0x1a50495f],dh
  403576:	inc    edx
  403577:	inc    esi
  403578:	mov    ebx,DWORD PTR [eax+eax*1]
  40357b:	add    cl,bh
  40357d:	sahf   
  40357e:	jge    0x403571
  403580:	jns    0x4035d9
  403582:	adc    BYTE PTR [eax+0x2e],ah
  403585:	mov    al,0x8b
  403587:	out    0x69,al
  403589:	push   ecx
  40358a:	add    al,0x72
  40358c:	and    al,0x1c
  40358e:	mov    edx,DWORD PTR [esi]
  403590:	fstp   DWORD PTR [esi-0xa074507]
  403596:	cli    
  403597:	mov    edx,0xee849ff8
  40359c:	push   0x78
  40359e:	push   0x36
  4035a0:	xor    BYTE PTR [edx],bl
  4035a2:	shr    DWORD PTR [ecx],0xac
  4035a5:	push   ss
  4035a6:	ret    
  4035a7:	bound  edi,QWORD PTR [eax-0x1b]
  4035aa:	clc    
  4035ab:	or     ch,BYTE PTR [ebp-0x1b]
  4035ae:	clc    
  4035af:	ins    BYTE PTR es:[edi],dx
  4035b0:	and    DWORD PTR [ecx],ecx
  4035b2:	push   esi
  4035b3:	jle    0x403581
  4035b5:	mov    esp,0xd4869703
  4035ba:	ret    0x31f5
  4035bd:	les    ecx,FWORD PTR [ebx+0x23ad2021]
  4035c3:	adc    eax,DWORD PTR [eax-0x53]
  4035c6:	lea    ebx,[ebp+0x5c]
  4035c9:	into   
  4035ca:	jo     0x403595
  4035cc:	ds adc eax,0xd373f14e
  4035d2:	adc    edx,ebp
  4035d4:	mov    BYTE PTR [ebp-0xa854506],bl
  4035da:	clc    
  4035db:	sbb    ch,BYTE PTR [ebp-0x61]
  4035de:	pushf  
  4035df:	inc    BYTE PTR [eax]
  4035e1:	add    BYTE PTR [edx+eiz*8-0x43],bl
  4035e5:	test   al,0x31
  4035e7:	push   edx
  4035e8:	or     al,0xa8
  4035ea:	icebp  
  4035eb:	or     DWORD PTR [ebx],eax
  4035ed:	add    cl,dl
  4035ef:	sub    edi,ecx
  4035f1:	xor    esi,edx
  4035f3:	repz cli 
  4035f5:	xor    eax,edx
  4035f7:	sub    DWORD PTR [edi+eax*1-0xa845779],eax
  4035fe:	or     ebp,edi
  403600:	xadd   eax,ecx
  403603:	scas   eax,DWORD PTR es:[edi]
  403604:	add    al,bl
  403606:	push   ebx
  403607:	fdiv   QWORD PTR [ebx]
  403609:	stc    
  40360a:	sti    
  40360b:	fdiv   QWORD PTR [ebx]
  40360d:	stc    
  40360e:	gs inc ecx
  403610:	pop    ss
  403611:	sub    cl,BYTE PTR [esi+0x2e03472f]
  403617:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403618:	rol    dl,0xe4
  40361b:	adc    edx,eax
  40361d:	mov    edx,DWORD PTR [eax+0x4]
  403620:	sti    
  403621:	and    edx,DWORD PTR [edx+0x4]
  403624:	sti    
  403625:	lea    edx,[eax+ebp*4]
  403628:	adc    al,BYTE PTR [esi+0x48]
  40362b:	nop
  40362c:	add    ecx,DWORD PTR [esi-0x70]
  40362f:	aad    0xc1
  403631:	adc    DWORD PTR [ebx-0x74057496],ecx
  403637:	fsub   QWORD PTR [ebx]
  403639:	stc    
  40363a:	mov    ebx,esp
  40363c:	lea    ebx,[edi+esi*1+0x15469515]
  403643:	adc    al,0x5e
  403645:	sbb    al,0x0
  403647:	add    BYTE PTR [ecx],bl
  403649:	aam    0x16
  40364b:	add    esp,DWORD PTR [ecx]
  40364d:	sub    al,0xf9
  40364f:	xor    esi,DWORD PTR [edx]
  403651:	hlt    
  403652:	cli    
  403653:	xor    esi,DWORD PTR [edx]
  403655:	sub    al,BYTE PTR [edi+eax*1+0x69803d20]
  40365c:	pop    ebx
  40365d:	out    dx,al
  40365e:	pop    ds
  40365f:	ror    DWORD PTR [eax-0x3c3cfce4],0x70
  403666:	xor    edi,ecx
  403668:	xor    DWORD PTR [edx],ebx
  40366a:	mov    esp,0x98512833
  40366f:	pop    ss
  403670:	into   
  403671:	outs   dx,BYTE PTR ds:[esi]
  403672:	dec    eax
  403673:	mov    esi,DWORD PTR [edx]
  403675:	pop    es
  403676:	call   0x6fa2a3b
  40367b:	sar    BYTE PTR [edx+0x52faf765],1
  403681:	jae    0x40367a
  403683:	cli    
  403684:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403685:	inc    ecx
  403686:	adc    esi,DWORD PTR [ecx+0x3c3868a]
  40368c:	ja     0x403663
  40368e:	(bad)
  403692:	int    0x8b
  403694:	fld    TBYTE PTR [edx-0x45]
  403697:	and    ecx,eax
  403699:	push   0xffffffbb
  40369b:	lea    esp,[ebp+0x5dd781de]
  4036a1:	and    al,0x7
  4036a3:	pop    esi
  4036a4:	add    eax,0x3216c6fc
  4036a9:	in     al,0x8e
  4036ab:	stc    
  4036ac:	add    BYTE PTR [eax],al
  4036ae:	bound  eax,QWORD PTR [ebx-0x19]
  4036b1:	cli    
  4036b2:	bound  edx,QWORD PTR [ebx-0x6f]
  4036b5:	test   BYTE PTR [esi],ch
  4036b7:	sbb    edx,DWORD PTR ds:0x49ba1a90
  4036bd:	xor    BYTE PTR [eax-0x3],dh
  4036c0:	or     al,BYTE PTR [ebx]
  4036c2:	jb     0x4036e6
  4036c4:	mov    edi,0xbbda7833
  4036c9:	xor    ebp,DWORD PTR [eax+0x38]
  4036cc:	cwde   
  4036cd:	pop    ss
  4036ce:	ret    0x9b8c
  4036d1:	std    
  4036d2:	xor    cl,BYTE PTR [edi-0x3e8c3f09]
  4036d8:	push   es
  4036d9:	sar    BYTE PTR [edx+0x12faf6a5],1
  4036df:	mov    ds:0x14acfaf6,eax
  4036e4:	jne    0x4036f8
  4036e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4036e7:	push   ebx
  4036e8:	pusha  
  4036e9:	push   0x32
  4036eb:	pop    esi
  4036ec:	adc    ebp,eax
  4036ee:	lock add al,0xea
  4036f1:	int    0xaa
  4036f3:	test   eax,0xad52bbfa
  4036f8:	cli    
  4036f9:	mov    ebx,0xe4d68fbc
  4036fe:	cs push 0xf05f0720
  403704:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403705:	(bad)  
  403706:	pop    ds
  403707:	adc    eax,eax
  403709:	mov    gs,eax
  40370b:	loop   0x40369e
  40370d:	out    0xe8,al
  40370f:	loop   0x4036a0
  403711:	nop
  403712:	add    BYTE PTR [eax],al
  403714:	mov    ch,0x16
  403716:	or     ebp,ecx
  403718:	xor    al,0xa6
  40371a:	jmp    0x3208:0xa9d53549
  403721:	shl    DWORD PTR [edx-0x42],cl
  403724:	add    ch,BYTE PTR [edx+ecx*1+0x6cab02bd]
  40372b:	xchg   edi,eax
  40372c:	inc    esi
  40372d:	push   esp
  40372e:	call   0x701b:0xb7127143
  403735:	shl    eax,1
  403737:	push   es
  403738:	sbb    DWORD PTR [edx-0xd7709bf],0xa07ef631
  403742:	pop    ebp
  403743:	adc    ah,al
  403745:	dec    ecx
  403746:	(bad)  
  403747:	jmp    0xc50d957f
  40374c:	jo     0x40376b
  40374e:	jmp    0x12bc:0xdaa9bacd
  403755:	lods   al,BYTE PTR ds:[esi]
  403756:	mov    edx,0xde8fa4bd
  40375b:	ins    DWORD PTR es:[edi],dx
  40375c:	jbe    0x4037c3
  40375e:	add    BYTE PTR [eax],al
  403760:	das    
  403761:	push   cs
  403762:	shr    DWORD PTR [edx],0x26
  403765:	adc    ebx,ecx
  403767:	jb     0x4037e3
  403769:	loop   0x403765
  40376b:	or     ch,bh
  40376d:	loope  0x403767
  40376f:	fs mov ecx,0x21f95d15
  403775:	enter  0x2f03,0x0
  403779:	add    BYTE PTR [ecx],bh
  40377b:	rol    eax,cl
  40377d:	in     al,0x35
  40377f:	ror    DWORD PTR [ebx+0x23a5fcb2],1
  403785:	mov    al,0x4
  403787:	stos   DWORD PTR es:[edi],eax
  403788:	lea    edi,[ebp+0x18]
  40378b:	inc    ecx
  40378c:	adc    al,0x25
  40378e:	aaa    
  40378f:	adc    DWORD PTR [esi-0x3f],edx
  403792:	repz ror BYTE PTR [ecx],cl
  403795:	jmp    0xf194:0xbaf89a02
  40379c:	cli    
  40379d:	mov    edx,0xe68c9f8a
  4037a2:	mov    bl,0xb6
  4037a4:	mov    eax,ds:0x3c5e3491
  4037a9:	sub    dl,dh
  4037ab:	push   ds
  4037ac:	add    esi,DWORD PTR [ebx]
  4037ae:	mov    esp,0x8c5033aa
  4037b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4037b4:	xor    edx,DWORD PTR [ebx-0x52]
  4037b7:	nop
  4037b8:	pop    ds
  4037b9:	xor    esp,edx
  4037bb:	shl    edi,0xea
  4037be:	adc    BYTE PTR [ecx+eax*8],al
  4037c1:	sub    ch,BYTE PTR [ecx]
  4037c3:	adc    ecx,ebx
  4037c5:	bound  edi,QWORD PTR [edx-0x4b35051f]
  4037cb:	loope  0x4037c5
  4037cd:	ins    BYTE PTR es:[edi],dx
  4037ce:	mov    ecx,0x9224e615
  4037d3:	repz add ah,BYTE PTR [edi+0xc0d456]
  4037da:	inc    ebp
  4037db:	sbb    bl,al
  4037dd:	mov    eax,DWORD PTR [eax]
  4037df:	add    BYTE PTR [ebx],dh
  4037e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4037e2:	mul    DWORD PTR [ebx]
  4037e4:	inc    ecx
  4037e5:	test   al,0xfa
  4037e7:	(bad)  
  4037e8:	in     al,0xa
  4037ea:	(bad)  
  4037eb:	pop    es
  4037ec:	pop    ss
  4037ed:	xlat   BYTE PTR ds:[ebx]
  4037ee:	add    edx,DWORD PTR [esi+0x50]
  4037f1:	rol    edx,1
  4037f3:	or     DWORD PTR [ebx],ebx
  4037f5:	ror    DWORD PTR [ebx+0x236e3bf8],0xfb
  4037fc:	sbb    ebp,DWORD PTR [ecx-0x73]
  4037ff:	mov    WORD PTR [edi],ds
  403801:	pushf  
  403802:	or     eax,0x4e17c4d5
  403807:	or     al,0xc9
  403809:	ror    DWORD PTR [esi],1
  40380b:	add    eax,edx
  40380d:	lahf   
  40380e:	cli    
  40380f:	xor    edx,DWORD PTR [ecx-0x3dcc0849]
  403815:	popf   
  403816:	pushf  
  403817:	pop    ds
  403818:	pop    ebp
  403819:	add    eax,0x32cb455a
  40381e:	and    cl,al
  403820:	fwait
  403821:	add    al,0x3
  403823:	fst    DWORD PTR [ebx+0x6a]
  403826:	xor    edi,ebx
  403828:	jmp    0x403898
  40382a:	xor    edi,ecx
  40382c:	cmp    eax,0x1050795
  403831:	js     0x4037dc
  403833:	add    edx,esi
  403835:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403836:	rol    al,0x95
  403839:	pop    ss
  40383a:	ret    
  40383b:	mov    esi,ebx
  40383d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40383e:	mul    DWORD PTR [ebx]
  403840:	icebp  
  403841:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403842:	cli    
  403843:	lea    eax,[eax]
  403845:	add    ah,ah
  403847:	or     edi,eax
  403849:	mov    ds:0x56036d3f,eax
  40384e:	adc    cl,0xc2
  403851:	or     DWORD PTR [ebx-0x40],ebx
  403854:	mov    edi,eax
  403856:	xor    edx,ecx
  403858:	mov    ebp,0xbbc95a23
  40385d:	lea    esp,[ebp-0x21fd255b]
  403863:	xchg   ebp,eax
  403864:	add    al,0x4e
  403866:	and    eax,0x320ec1fc
  40386b:	icebp  
  40386c:	mov    edi,edx
  40386e:	add    dh,BYTE PTR [ebx+eiz*8-0x6e489d09]
  403875:	pushf  
  403876:	inc    esi
  403877:	aaa    
  403878:	push   eax
  403879:	sub    ch,BYTE PTR [esi+edi*4+0x7ef0305d]
  403880:	sbb    BYTE PTR [ebx],al
  403882:	call   0xb73f5ad
  403887:	scas   eax,DWORD PTR es:[edi]
  403888:	mov    edx,0x41b2b58d
  40388d:	cmp    ebx,edi
  40388f:	jb     0x403894
  403891:	inc    esi
  403892:	inc    ebp
  403893:	jl     0x403859
  403895:	add    al,0x32
  403897:	jle    0x403824
  403899:	sti    
  40389a:	and    al,BYTE PTR [ebx+esi*8+0x1749a4f7]
  4038a1:	add    edi,0x5f0386ac
  4038a7:	ffree  st(4)
  4038a9:	ret    0x0
  4038ac:	sub    bh,BYTE PTR [esi+0xeb98bd3]
  4038b2:	mov    ebx,0x9038ab33
  4038b7:	rcpps  xmm3,xmm4
  4038ba:	mov    al,ds:0xef8b326d
  4038bf:	shl    BYTE PTR [eax-0x33],0x2
  4038c3:	retf   0x57ba
  4038c6:	repz test DWORD PTR [edx-0x1c],0xc91e9c90
  4038ce:	sti    
  4038cf:	in     al,0x74
  4038d1:	adc    al,0xea
  4038d3:	pop    ebp
  4038d4:	sub    ebp,edx
  4038d6:	sub    dl,BYTE PTR [edi]
  4038d8:	xor    cl,ch
  4038da:	bound  edi,QWORD PTR [ebp-0x452551de]
  4038e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4038e1:	nop
  4038e2:	out    dx,al
  4038e3:	inc    edi
  4038e4:	pop    ebx
  4038e5:	push   0x45
  4038e7:	add    ebp,edi
  4038e9:	movaps xmm0,xmm4
  4038ec:	xor    eax,0x3a8b2a17
  4038f1:	out    0xdf,eax
  4038f3:	repnz es cdq 
  4038f6:	jne    0x40390e
  4038f8:	fcomp  st(2)
  4038fa:	mov    bh,0x4a
  4038fc:	xor    al,BYTE PTR [edx-0x7]
  4038ff:	(bad)  
  403900:	repz push ds
  403902:	jmp    0x42ba:0xfaabbad3
  403909:	scas   al,BYTE PTR es:[edi]
  40390a:	fs (bad) 
  40390c:	cs xor al,0x22
  40390f:	jnp    0x403911
  403911:	add    bh,bh
  403913:	push   ss
  403914:	aaa    
  403915:	and    al,dh
  403917:	aam    0xf9
  403919:	add    bh,bl
  40391b:	sahf   
  40391c:	xchg   ebx,eax
  40391d:	repnz out 0xe6,al
  403920:	(bad)  
  403921:	nop
  403922:	mov    ch,0xa
  403924:	stc    
  403925:	jg     0x4038b5
  403927:	imul   ebp,edx,0xaad5195d
  40392d:	push   ss
  40392e:	xor    cl,ch
  403930:	bound  edi,QWORD PTR [edx+eax*1-0x4344e552]
  403937:	(bad)  
  403938:	out    0xc5,al
  40393a:	daa    
  40393b:	pop    DWORD PTR [ecx]
  40393d:	add    esi,edi
  40393f:	fbld   TBYTE PTR [edi]
  403941:	ret    
  403942:	sub    eax,0x8a8a2a17
  403947:	out    0x3f,al
  403949:	bnd jle 0x4038e4
  40394c:	add    BYTE PTR [ebp+0x27],bl
  40394f:	scas   al,BYTE PTR es:[edi]
  403950:	daa    
  403951:	mov    al,cl
  403953:	push   ss
  403954:	push   ss
  403955:	sub    BYTE PTR [eax+0x1e],dh
  403958:	add    edi,DWORD PTR [ecx]
  40395a:	mov    ebx,0x631233ab
  40395f:	lods   al,BYTE PTR ds:[esi]
  403960:	lea    ebx,[ebp+0x27]
  403963:	xchg   ecx,eax
  403964:	xor    BYTE PTR [esi],dl
  403966:	pushw  ss
  403968:	dec    esi
  403969:	in     eax,dx
  40396a:	ins    DWORD PTR es:[edi],dx
  40396b:	aam    0x10
  40396d:	jmp    0xe67a:0xbafa9e68
  403974:	clc    
  403975:	je     0x403977
  403977:	add    cl,dl
  403979:	or     DWORD PTR ds:0x310bafc,eax
  40397f:	aaa    
  403980:	cmp    eax,0x31f6c3d3
  403985:	retf   
  403986:	mov    eax,eax
  403988:	add    BYTE PTR [ebx+esi*1+0x790b6c2],ch
  40398f:	lock loop 0x403952
  403992:	fldl2e 
  403994:	ins    BYTE PTR es:[edi],dx
  403995:	lock shr BYTE PTR [ecx+0x72c31539],0xa8
  40399d:	in     eax,0xf8
  40399f:	ficomp DWORD PTR [edx-0x70096b69]
  4039a5:	mov    ebx,ebx
  4039a7:	(bad)  
  4039a8:	xor    BYTE PTR [edx+0x30],al
  4039ab:	test   al,0xf3
  4039ad:	sbb    eax,0xaca89903
  4039b2:	xor    esi,DWORD PTR [edx-0x40]
  4039b5:	stos   DWORD PTR es:[edi],eax
  4039b6:	lea    esi,[ebp+0x3c]
  4039b9:	lods   al,BYTE PTR ds:[esi]
  4039ba:	jl     0x403947
  4039bc:	inc    esp
  4039bd:	adc    eax,0xd372154e
  4039c2:	adc    dl,ch
  4039c4:	push   0x8b00fa9d
  4039c9:	ins    DWORD PTR es:[edi],dx
  4039ca:	xor    edi,ecx
  4039cc:	adc    eax,0x9e651f74
  4039d1:	cmp    esp,eax
  4039d3:	add    esp,DWORD PTR [esi+0x6fc3c11d]
  4039d9:	adc    al,0xd9
  4039db:	mov    edi,0x67470000
  4039e0:	(bad)  
  4039e1:	(bad)  
  4039e2:	jnp    0x403a4f
  4039e4:	or     edi,ebx
  4039e6:	jnp    0x403a56
  4039e8:	lea    eax,[edi+ebx*2+0x3c292251]
  4039ef:	adc    al,0x6
  4039f1:	ror    DWORD PTR [eax],0x12
  4039f4:	add    eax,ebx
  4039f6:	pop    es
  4039f7:	addr16 (bad) 
  4039f9:	call   DWORD PTR [edi]
  4039fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4039fc:	clc    
  4039fd:	or     edx,DWORD PTR [eax]
  4039ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a00:	cli    
  403a01:	lea    ebx,[eax+eax*1+0x5332ff97]
  403a08:	add    edx,DWORD PTR [esi+0x14]
  403a0b:	(bad)  
  403a0c:	ret    0x1b0a
  403a0f:	lds    edi,FWORD PTR [edi-0x983801]
  403a15:	xor    eax,ebx
  403a17:	sbb    edi,edx
  403a19:	xor    edx,DWORD PTR [eax+0x6f0f8c99]
  403a1f:	mov    ah,0x93
  403a21:	stos   DWORD PTR es:[edi],eax
  403a22:	retf   
  403a23:	push   esi
  403a24:	cmp    cl,al
  403a26:	mov    DWORD PTR [edi],edx
  403a28:	add    ecx,edx
  403a2a:	ja     0x403a94
  403a2c:	(bad)  
  403a2d:	inc    DWORD PTR [edi-0x5c]
  403a30:	test   DWORD PTR [ebx],0x8df9a441
  403a36:	or     BYTE PTR fs:[ecx],bh
  403a39:	mov    al,ds:0x5e03692b
  403a3e:	pushf  
  403a3f:	aad    0xc3
  403a41:	adc    eax,0xbe310000
  403a46:	fidivr DWORD PTR [edi-0x43a66a]
  403a4c:	inc    edx
  403a4d:	push   ebp
  403a4e:	or     bl,bh
  403a50:	inc    edx
  403a51:	push   esp
  403a52:	mov    es,WORD PTR [esi+esi*1+0xc5b59fe]
  403a59:	mov    esi,0xfa703045
  403a5e:	add    al,0x3
  403a60:	jb     0x403aab
  403a62:	mov    esp,0xf0015eff
  403a67:	clc    
  403a68:	sub    al,BYTE PTR [ebx]
  403a6a:	lock cli 
  403a6c:	mov    esp,0x75921446
  403a71:	mov    dh,0x8c
  403a73:	add    esp,edi
  403a75:	scas   al,BYTE PTR es:[edi]
  403a76:	ret    0x2bc2
  403a79:	mov    esi,0xaf2ebfd3
  403a7e:	mov    ebx,0xfb262ff
  403a83:	cli    
  403a84:	(bad)  
  403a85:	lds    ecx,FWORD PTR [ecx-0x4fa7d974]
  403a8b:	out    dx,eax
  403a8c:	push   cs
  403a8d:	mov    ebx,0x7cf02849
  403a92:	or     eax,DWORD PTR [ebx]
  403a94:	jmp    0x403ab4
  403a96:	mov    ebx,0xf776f6ff
  403a9b:	idiv   DWORD PTR [edx]
  403a9d:	je     0x403a96
  403a9f:	stc    
  403aa0:	mov    ah,0x29
  403aa2:	sbb    edx,ecx
  403aa4:	jl     0x403adf
  403aa6:	add    DWORD PTR [ebx],0xb1770000
  403aac:	(bad)
  403ab0:	fdivr  QWORD PTR [edi-0x44d93a]
  403ab6:	add    ah,BYTE PTR [ebx]
  403ab8:	psubq  mm0,QWORD PTR [edx]
  403abb:	and    al,0x89
  403abd:	test   BYTE PTR [esi],dh
  403abf:	adc    al,0xb6
  403ac1:	cmp    ecx,ebx
  403ac3:	aaa    
  403ac4:	jmp    0x3202:0x29d55141
  403acb:	ror    DWORD PTR [esi+0x46a78ebb],cl
  403ad1:	test   DWORD PTR [ecx+0x7bf7411b],0x91135d99
  403adb:	scas   al,BYTE PTR es:[edi]
  403adc:	std    
  403add:	mov    ecx,0xc4e53e32
  403ae2:	jae    0x403afe
  403ae4:	jmp    0x56bb:0x16a79ed3
  403aeb:	jecxz  0x403afe
  403aed:	cmovnp esp,ebx
  403af0:	add    BYTE PTR [ecx+0x46d517b5],cl
  403af6:	xor    BYTE PTR [ebx-0x16],dh
  403af9:	dec    ecx
  403afa:	sbb    ebp,edx
  403afc:	sub    BYTE PTR [ebx],cl
  403afe:	xor    bl,dl
  403b00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b01:	mov    edx,0xf6dea726
  403b06:	es sbb edx,eax
  403b09:	neg    BYTE PTR [eax]
  403b0b:	cdq    
  403b0c:	ins    DWORD PTR es:[edi],dx
  403b0d:	sbb    al,BYTE PTR [eax]
  403b0f:	add    al,dl
  403b11:	add    al,0xf1
  403b13:	dec    ecx
  403b14:	xor    al,BYTE PTR [esi-0xb]
  403b17:	(bad)  
  403b18:	repnz add dl,ch
  403b1b:	fdiv   QWORD PTR [esi-0x1145515a]
  403b21:	loop   0x403ac5
  403b23:	push   cs
  403b24:	jmp    0x6b0e:0xb5889fe2
  403b2b:	cmp    DWORD PTR [edx+0x2141ea9f],eax
  403b31:	aad    0xa9
  403b33:	add    DWORD PTR [edx],esi
  403b35:	sar    DWORD PTR [esi],cl
  403b37:	mov    edx,0x7600a6be
  403b3c:	mov    edi,0xa7710bab
  403b41:	test   eax,0xe1437d8d
  403b46:	icebp  
  403b47:	and    ebx,DWORD PTR [eax]
  403b49:	adc    edx,DWORD PTR [esi+0x5]
  403b4c:	ins    BYTE PTR es:[edi],dx
  403b4d:	ror    DWORD PTR [edx],1
  403b4f:	jmp    0xa6cb:0x46ff6662
  403b56:	xor    eax,DWORD PTR [edx+0x2f]
  403b59:	stos   BYTE PTR es:[edi],al
  403b5a:	xor    esi,DWORD PTR [ecx]
  403b5c:	test   eax,0x84720f97
  403b61:	mov    esi,0x1bf8ea2a
  403b66:	shr    DWORD PTR [eax],0x2b
  403b69:	adc    ecx,edx
  403b6b:	push   esi
  403b6c:	fwait
  403b6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b6e:	dec    DWORD PTR [esi]
  403b70:	inc    edi
  403b71:	sahf   
  403b72:	or     eax,DWORD PTR [eax]
  403b74:	add    BYTE PTR [eax],al
  403b76:	aas    
  403b77:	lods   al,BYTE PTR ds:[esi]
  403b78:	lea    ebx,[ebp+0x1b]
  403b7b:	test   ebx,edx
  403b7d:	outs   dx,DWORD PTR ds:[esi]
  403b7e:	xchg   DWORD PTR [edx],edx
  403b80:	pop    esi
  403b81:	vpsrlw ymm2,ymm1,XMMWORD PTR ds:0x7d9a0bea
  403b89:	icebp  
  403b8a:	xor    ecx,DWORD PTR ds:0x13313601
  403b90:	dec    edi
  403b91:	loope  0x403bc6
  403b93:	cmp    eax,0xa86ec60c
  403b98:	lea    esi,[edi]
  403b9a:	jne    0x403bb1
  403b9c:	mov    esi,esp
  403b9e:	mov    ah,0xa5
  403ba0:	call   DWORD PTR [ebx]
  403ba2:	mov    cl,BYTE PTR [ecx+0x58]
  403ba5:	inc    esi
  403ba6:	mov    ebx,ebx
  403ba8:	ret    0x32ed
  403bab:	aas    
  403bac:	mov    eax,DWORD PTR [ebp+0x36f8d0ac]
  403bb2:	arpl   WORD PTR [ecx-0x39],ax
  403bb5:	add    BYTE PTR ds:0xc800006c,dl
  403bbb:	adc    edi,edi
  403bbd:	jne    0x403b8b
  403bbf:	pushf  
  403bc0:	inc    ebp
  403bc1:	clc    
  403bc2:	xlat   BYTE PTR ds:[ebx]
  403bc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403bc4:	dec    edi
  403bc5:	fst    DWORD PTR gs:[ecx]
  403bc8:	add    DWORD PTR [ebx],esp
  403bca:	aad    0xf4
  403bcc:	mov    BYTE PTR ds:0x4106d4,0x11
  403bd3:	aaa    
  403bd4:	int    0xef
  403bd6:	push   edi
  403bd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403bd8:	push   edi
  403bd9:	add    BYTE PTR gs:[eax],al
  403bdc:	leave  
  403bdd:	adc    esi,edi
  403bdf:	fadd   QWORD PTR [edx]
  403be1:	mov    bh,al
  403be3:	add    eax,0x4106bc
  403be8:	(bad)  
  403be9:	push   ebp
  403bea:	xor    dl,BYTE PTR [eax]
  403bec:	pop    ss
  403bed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403bee:	pop    edi
  403bef:	mov    DWORD PTR gs:[ecx],edx
  403bf2:	lock loope 0x403bff
  403bf5:	iret   
  403bf6:	jmp    0x403c14
  403bf8:	ret    
  403bf9:	in     al,0x7
  403bfb:	add    edx,DWORD PTR [ebp-0x4fbf95a3]
  403c01:	add    eax,0x41184165
  403c06:	call   0xffac3d6e
  403c0b:	adc    DWORD PTR [ebp+0x6c],0x40
  403c0f:	call   0x404ce0
  403c14:	fwait
  403c15:	out    dx,al
  403c16:	test   DWORD PTR [eax+0x4b],0xf05d8bca
  403c1d:	pop    ebx
  403c1f:	inc    eax
  403c20:	xchg   ebx,eax
  403c21:	out    0x7,al
  403c23:	add    edx,DWORD PTR ds:0x3468536c
  403c29:	add    eax,0x78180041
  403c2e:	cmp    al,0xe9
  403c30:	xor    DWORD PTR [esi-0x48],edi
  403c33:	add    DWORD PTR [edi+edx*4-0x3f],ebp
  403c37:	or     DWORD PTR [ebp+0x18],0x43
  403c3b:	add    BYTE PTR [ecx+0x37ac39],dh
  403c41:	add    BYTE PTR [edi],bh
  403c43:	ret    0xeb84
  403c46:	cmp    DWORD PTR [edi-0x692d7ff3],ebx
  403c4c:	push   ds
  403c4d:	inc    ecx
  403c4e:	xor    DWORD PTR [ebx+0x529f7844],edi
  403c54:	mov    WORD PTR [eax],es
  403c56:	xor    DWORD PTR [ebx+0x4d86c87c],edi
  403c5c:	mov    eax,0xd5f33eb
  403c61:	adc    dl,0x3e
  403c64:	push   ds
  403c65:	inc    ecx
  403c66:	xor    DWORD PTR [ebx+0x215f7844],edi
  403c6c:	ds or  al,0x98
  403c6f:	mov    ds:0xca310003,al
  403c74:	aad    0xf7
  403c76:	push   eax
  403c77:	(bad)
  403c7a:	jnp    0x403cd5
  403c7c:	arpl   WORD PTR [ebp-0x10],sp
  403c7f:	mov    edx,0x9795158a
  403c84:	inc    edx
  403c85:	add    BYTE PTR [ecx],bl
  403c87:	xchg   BYTE PTR [ebx],al
  403c89:	add    BYTE PTR [ecx],dh
  403c8b:	mov    WORD PTR [ebp+eiz*2+0x70],ss
  403c8f:	lods   eax,DWORD PTR ds:[esi]
  403c90:	mov    dl,BYTE PTR ds:0x45507d
  403c96:	mov    edx,0x70655bc0
  403c9b:	lods   eax,DWORD PTR ds:[esi]
  403c9c:	push   es
  403c9d:	enter  0x672e,0x7
  403ca1:	leave  
  403ca2:	sar    ch,cl
  403ca4:	and    BYTE PTR [ecx+0x0],al
  403ca7:	add    BYTE PTR [ecx],dh
  403ca9:	xor    al,0x11
  403cab:	push   esp
  403cac:	dec    esp
  403cad:	adc    al,0x28
  403caf:	add    al,0xa8
  403cb1:	adc    DWORD PTR [ecx+0x21],eax
  403cb4:	jo     0x403cca
  403cb6:	dec    eax
  403cb7:	pop    eax
  403cb8:	push   esp
  403cb9:	push   ebp
  403cba:	jmp    0xc745949
  403cbf:	inc    ebp
  403cc0:	xor    DWORD PTR [ebx],edx
  403cc2:	mov    cl,0x7
  403cc4:	jmp    0x403d3d
  403cc6:	adc    eax,0x6013f021
  403ccb:	adc    DWORD PTR [ecx],edx
  403ccd:	cmp    DWORD PTR [eax+0x5e080b03],ebp
  403cd3:	xor    DWORD PTR [ecx+0x2c],eax
  403cd6:	mov    ecx,0x4113f020
  403cdb:	xchg   ecx,eax
  403cdc:	cdq    
  403cdd:	mov    ds:0x42df5b46,eax
  403ce2:	xor    dl,al
  403ce4:	and    eax,0x5d8a9c14
  403ce9:	xchg   edi,eax
  403cea:	and    eax,0x269ca8bc
  403cef:	mov    bh,0x5e
  403cf1:	(bad)  
  403cf2:	in     eax,0xc8
  403cf4:	lea    edi,[ecx]
  403cf6:	test   al,0x3
  403cf8:	mov    edx,0xcc6c1c08
  403cfd:	push   esp
  403cfe:	jmp    0x3353a609
  403d03:	lea    ebp,ds:0x70214dd1
  403d09:	adc    al,0x60
  403d0b:	adc    BYTE PTR [eax],al
  403d0d:	add    ah,dh
  403d0f:	imul   ecx,DWORD PTR [ebp+eax*2+0x31],0x55
  403d14:	push   esp
  403d15:	(bad)  
  403d17:	rcl    esi,cl
  403d19:	mov    dh,0xe
  403d1b:	(bad)  
  403d1c:	in     eax,0x88
  403d1e:	test   eax,0xaa042839
  403d23:	pop    es
  403d24:	ins    BYTE PTR es:[edi],dx
  403d25:	jg     0x403cb6
  403d27:	push   ebp
  403d28:	add    cl,ch
  403d2a:	jecxz  0x403d42
  403d2c:	lea    edi,ds:0xda005547
  403d32:	cs xchg ecx,eax
  403d34:	fs pop es
  403d36:	ins    BYTE PTR es:[edi],dx
  403d37:	adc    al,0x33
  403d39:	stos   DWORD PTR es:[edi],eax
  403d3a:	in     eax,0xd3
  403d3c:	mov    ebp,esp
  403d3e:	mov    ecx,0x35286677
  403d43:	push   ebp
  403d44:	jne    0x403cdd
  403d46:	stos   DWORD PTR es:[edi],eax
  403d47:	add    BYTE PTR [eax+0xc],dl
  403d4a:	hlt    
  403d4b:	adc    ecx,DWORD PTR [ebx+0x4138f6b4]
  403d51:	jmp    0xc4981e01
  403d56:	in     eax,dx
  403d57:	adc    edi,edi
  403d59:	sbb    al,0xe9
  403d5b:	cmp    BYTE PTR [ecx-0x17],al
  403d5e:	scas   eax,DWORD PTR es:[edi]
  403d5f:	pop    eax
  403d60:	cld    
  403d61:	inc    esi
  403d62:	add    DWORD PTR [edx+0x65],0x459332a8
  403d69:	xor    ebp,ebp
  403d6b:	scas   eax,DWORD PTR es:[edi]
  403d6c:	jmp    FWORD PTR [esi]
  403d6e:	lahf   
  403d6f:	mov    ss,esi
  403d71:	jb     0x403d73
  403d73:	add    BYTE PTR [edi-0x6b352d56],bl
  403d79:	not    BYTE PTR [ebp+edx*1+0x3b]
  403d7d:	(bad)  
  403d7e:	add    esp,ebp
  403d80:	mov    ecx,0x32a86567
  403d85:	pop    ss
  403d86:	inc    ebp
  403d87:	add    DWORD PTR [ecx],esi
  403d89:	jge    0x403e04
  403d8b:	imul   ecx,DWORD PTR [eax-0x53128a5f],0x57
  403d92:	clc    
  403d93:	jo     0x403dfb
  403d95:	mov    al,ds:0x8d3fa7c1
  403d9a:	(bad)  
  403d9b:	(bad)  
  403d9c:	rcl    bl,0xc3
  403d9f:	in     al,0x31
  403da1:	mov    esp,0xcc3d0041
  403da6:	mov    ecx,0xff67b7ec
  403dab:	mov    ebx,DWORD PTR [esi+0xd33d78b]
  403db1:	pop    esp
  403db2:	xor    eax,edx
  403db4:	retf   
  403db5:	mov    eax,ds:0x552e048c
  403dba:	add    BYTE PTR [ebx],al
  403dbc:	sbb    eax,0xb3a10560
  403dc1:	mov    ebp,0x69bdff6e
  403dc6:	pop    DWORD PTR [ebp-0x50]
  403dc9:	lea    edi,[ebp-0x4]
  403dcc:	fldenv [edx+0x1e]
  403dcf:	mov    edx,DWORD PTR [esi]
  403dd1:	mov    esi,ebx
  403dd3:	ror    DWORD PTR [ebx-0x5f],0x2
  403dd7:	fadd   DWORD PTR [eax]
  403dd9:	add    cl,cl
  403ddb:	repnz iret 
  403ddd:	mov    ecx,0xffff66f4
  403de2:	adc    ebx,DWORD PTR [edi-0x75]
  403de5:	push   ebp
  403de6:	hlt    
  403de7:	or     al,BYTE PTR [ebp-0x4]
  403dea:	sub    ecx,edi
  403dec:	and    eax,esi
  403dee:	push   ebx
  403def:	rol    DWORD PTR [ebx],cl
  403df1:	add    al,0x5
  403df3:	inc    esp
  403df4:	inc    cx
  403df6:	dec    eax
  403df7:	adc    al,0x45
  403df9:	clc    
  403dfa:	dec    ebp
  403dfb:	leave  
  403dfc:	mov    esp,0x7566d71b
  403e01:	cld    
  403e02:	out    0xe0,eax
  403e04:	test   DWORD PTR [ecx-0x393e964b],0x8bfe8c56
  403e0e:	sub    edx,esi
  403e10:	ret    
  403e11:	add    eax,0x7541bd1b
  403e16:	jecxz  0x403e35
  403e18:	in     al,dx
  403e19:	push   edi
  403e1b:	addr16 mov eax,esi
  403e1e:	xor    DWORD PTR [esi],esi
  403e20:	int3   
  403e21:	xor    ebp,DWORD PTR [edi+ecx*8-0x10]
  403e25:	shl    DWORD PTR [edx],0xaf
  403e28:	xchg   BYTE PTR [edi+ecx*4+0x740303ec],ah
  403e2f:	arpl   si,di
  403e31:	aad    0xf0
  403e33:	dec    esp
  403e34:	retf   0x64ff
  403e37:	ja     0x403dbd
  403e39:	inc    ebp
  403e3a:	fldenv [ebx]
  403e3c:	ss cld 
  403e3e:	add    BYTE PTR [eax],al
  403e40:	lock jo 0x403e58
  403e43:	mov    eax,edi
  403e45:	xor    eax,0xaff2c1b0
  403e4a:	add    al,bl
  403e4c:	jo     0x403df6
  403e4e:	rol    DWORD PTR [ecx],cl
  403e50:	dec    esp
  403e51:	sti    
  403e52:	push   ds
  403e53:	inc    ecx
  403e54:	xor    DWORD PTR [esi+ebp*8+0x36c1453],ebp
  403e5b:	add    DWORD PTR [ebx+edx*8+0x1e],edx
  403e5f:	inc    ecx
  403e60:	xor    DWORD PTR [esi],esi
  403e62:	ds cld 
  403e64:	xor    BYTE PTR [eax-0x550f9aa9],bh
  403e6a:	mov    BYTE PTR [ebp+0x79],al
  403e6d:	stos   DWORD PTR es:[edi],eax
  403e6e:	(bad)  
  403e6f:	pop    edi
  403e70:	aam    0x6b
  403e72:	add    ecx,ecx
  403e74:	jb     0x403dfd
  403e76:	mov    ah,ch
  403e78:	pop    esi
  403e79:	jg     0x403e86
  403e7b:	call   0x437260
  403e80:	mov    dl,0x2
  403e82:	mov    ah,0x75
  403e84:	movlps xmm5,QWORD PTR [esi]
  403e87:	or     BYTE PTR [ecx-0x7c],cl
  403e8a:	jp     0x403e8c
  403e8c:	xor    DWORD PTR [esi-0x1ac98a3d],esp
  403e92:	mov    bl,0xff
  403e94:	es scas eax,DWORD PTR es:[edi]
  403e96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e97:	adc    ebp,DWORD PTR [edx-0x3effd6ec]
  403e9d:	or     ebp,DWORD PTR [ecx-0x29a3c9c7]
  403ea3:	mov    bl,0x0
  403ea5:	add    BYTE PTR [esi],al
  403ea7:	mov    al,ds:0x14aa08c2
  403eac:	jb     0x403eb2
  403eae:	call   0x84442485
  403eb3:	mov    eax,ebp
  403eb5:	xchg   ebp,ebp
  403eb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403eb8:	sbb    dh,bh
  403eba:	sti    
  403ebb:	sub    ch,bh
  403ebd:	sbb    eax,0x9beb2a30
  403ec2:	or     ebx,DWORD PTR [ebp-0x17]
  403ec5:	add    esi,DWORD PTR [edx+0x33398e9c]
  403ecb:	stos   DWORD PTR es:[edi],eax
  403ecc:	or     edi,DWORD PTR [edi-0x27]
  403ecf:	sub    bl,cl
  403ed1:	xor    ah,0xa3
  403ed4:	sbb    DWORD PTR [ecx+edi*4+0x17b36eb6],ebx
  403edb:	xlat   BYTE PTR ds:[ebx]
  403edc:	lods   al,BYTE PTR ds:[esi]
  403edd:	mov    bl,0x33
  403edf:	adc    al,0x72
  403ee1:	inc    ecx
  403ee2:	and    DWORD PTR [esi+0x51b82a24],edx
  403ee8:	pop    ebx
  403ee9:	xchg   esp,edi
  403eeb:	psubsw mm6,QWORD PTR [edi]
  403eee:	sub    al,0x8b
  403ef0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ef1:	call   FWORD PTR [ebx-0x1]
  403ef4:	imul   esi,DWORD PTR [ecx],0xfdb41435
  403efa:	mov    bl,0x21
  403efc:	icebp  
  403efd:	add    ebx,esp
  403eff:	pop    ss
  403f00:	adc    ch,cl
  403f02:	pop    ebx
  403f03:	movhps xmm7,QWORD PTR [ecx]
  403f06:	cmp    DWORD PTR [ebp+edi*2+0x3e0000b2],ebp
  403f0d:	lahf   
  403f0e:	push   0xffffffac
  403f10:	ss sub ebx,ebp
  403f13:	sahf   
  403f14:	inc    ebp
  403f15:	lea    eax,[eax]
  403f17:	lods   al,BYTE PTR ds:[esi]
  403f18:	fisubr WORD PTR [ecx]
  403f1a:	adc    BYTE PTR [eax+ebp*2-0x5c],bl
  403f1e:	push   eax
  403f1f:	cmp    dh,BYTE PTR [ebp+0x32e9b8b7]
  403f25:	xchg   ebx,eax
  403f26:	clc    
  403f27:	(bad)  
  403f28:	dec    ecx
  403f29:	or     al,0x53
  403f2b:	shl    ebx,0x5b
  403f2e:	add    cl,ch
  403f30:	(bad)  
  403f31:	mov    ecx,0xcd7faa8b
  403f36:	ret    0x32e5
  403f39:	dec    ecx
  403f3a:	mov    edi,DWORD PTR [ebp+0x24834787]
  403f40:	cmp    eax,0x5af27514
  403f45:	adc    eax,0x3f32e900
  403f4a:	pop    ebx
  403f4b:	mov    al,ds:0x72000ff4
  403f50:	add    DWORD PTR [eax],edx
  403f52:	mov    ebx,0x1432e9
  403f57:	add    ebp,DWORD PTR ds:0xfbd9759f
  403f5d:	sahf   
  403f5e:	jne    0x403f51
  403f60:	mov    edx,0x32e9b863
  403f65:	cdq    
  403f66:	rcl    bh,0x1e
  403f69:	adc    edi,eax
  403f6b:	add    al,ch
  403f6d:	add    eax,DWORD PTR [ebx+0x220000c4]
  403f73:	adc    al,0x75
  403f75:	out    0xdf,al
  403f77:	adc    al,0x0
  403f79:	jmp    0x4242eab0
  403f7e:	ins    BYTE PTR es:[edi],dx
  403f7f:	mov    al,bl
  403f81:	(bad)  
  403f82:	out    0xcc,eax
  403f84:	ret    0x32ed
  403f87:	dec    ecx
  403f88:	mov    eax,DWORD PTR ds:0xff4d7ad
  403f8e:	sbb    DWORD PTR [esi-0x614aff01],0xffffff8e
  403f95:	test   DWORD PTR [eiz*2-0x73a80001],esp
  403f9c:	clc    
  403f9d:	dec    BYTE PTR [edi]
  403f9f:	add    BYTE PTR fs:[eax],al
  403fa2:	or     BYTE PTR [edx],dl
  403fa4:	mov    DWORD PTR [ebp-0x9d14],0x1219
  403fae:	pop    ebp
  403faf:	xchg   ebp,eax
  403fb0:	add    bh,bh
  403fb2:	out    dx,eax
  403fb3:	arpl   di,di
  403fb5:	jne    0x403f97
  403fb7:	xchg   esp,eax
  403fb8:	add    BYTE PTR [ebp-0x1a3ab],cl
  403fbe:	(bad)
  403fc2:	inc    edx
  403fc3:	sbb    BYTE PTR [ebp-0x9d537b],cl
  403fc9:	dec    DWORD PTR [eax]
  403fcb:	(bad)  
  403fcc:	jmp    edi
  403fce:	sbb    al,0x30
  403fd0:	add    BYTE PTR [eax],al
  403fd2:	dec    ebx
  403fd3:	jo     0x403fd4
  403fd5:	je     0x403fd7
  403fd7:	add    BYTE PTR [eax+eiz*4-0x576b8a41],dl
  403fde:	mov    edi,0x12995eb
  403fe3:	add    BYTE PTR [eax-0x7f3d36ef],cl
  403fe9:	adc    DWORD PTR [ebp-0x75],edx
  403fec:	in     al,dx
  403fed:	xchg   esi,eax
  403fee:	(bad)  
  403fef:	cld    
  403ff0:	mov    ebx,0xd26adac0
  403ff5:	fs jne 0x404000
  403ff8:	add    BYTE PTR ds:0x9f1fffff,bl
  403ffe:	mov    edi,0x59ffc474
  404003:	push   DWORD PTR [ebp+0x2f7fe799]
  404009:	arpl   di,di
  40400b:	or     esi,DWORD PTR [ecx]
  40400d:	jmp    0x404045
  40400f:	add    cl,BYTE PTR [edx+0x77]
  404012:	sbb    eax,0x7eabcb00
  404017:	inc    ebp
  404018:	cs jnp 0x403fcb
  40401b:	jne    0x404056
  40401d:	adc    eax,DWORD PTR [edi]
  40401f:	mov    eax,0xc086ab31
  404024:	xchg   edi,eax
  404025:	sti    
  404026:	jl     0x40406d
  404028:	and    eax,0x7cff46f3
  40402d:	test   eax,0xe7aa0174
  404032:	dec    DWORD PTR [edx+0x6a044123]
  404038:	xor    BYTE PTR [eax],dh
  40403a:	inc    esi
  40403b:	inc    DWORD PTR [eax]
  40403d:	add    BYTE PTR [ecx-0x21f3c99a],al
  404043:	clc    
  404044:	adc    edi,edi
  404046:	pop    esp
  404047:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404048:	fwait
  404049:	mov    eax,0x3bb07ded
  40404e:	ins    BYTE PTR es:[edi],dx
  40404f:	fwait
  404050:	xor    eax,0x86b6ca02
  404055:	fstp   TBYTE PTR ds:0xac37c47
  40405b:	lds    edx,FWORD PTR fs:[ecx+esi*1]
  40405f:	add    BYTE PTR [ebp-0x14],bh
  404062:	mov    al,0x76
  404064:	add    edi,eax
  404066:	xchg   esi,eax
  404067:	xor    eax,0xc06a2b54
  40406c:	dec    ebp
  40406d:	(bad)  
  40406e:	cld    
  40406f:	mov    dl,0x9b
  404071:	sbb    BYTE PTR [esi+0x4d],bh
  404074:	mov    al,0xb
  404076:	jno    0x4040d6
  404078:	sub    BYTE PTR [edx+0xb],ch
  40407b:	fidiv  WORD PTR ds:0xb0b05908
  404081:	call   FWORD PTR [esi-0x4f]
  404084:	ret    
  404085:	jne    0x4040ba
  404087:	adc    al,0x12
  404089:	pop    eax
  40408a:	mov    al,0x1e
  40408c:	stc    
  40408d:	add    edi,DWORD PTR [ecx]
  40408f:	adc    al,0xe9
  404091:	cmp    DWORD PTR [esi],esi
  404093:	pop    esp
  404094:	jmp    0x12dc7794
  404099:	add    al,0xba
  40409b:	push   ecx
  40409c:	fstp   DWORD PTR ds:0x86644431
  4040a2:	add    BYTE PTR [eax],al
  4040a4:	xor    DWORD PTR [esi+ebp*8+0x5c9b81af],ebx
  4040ab:	cld    
  4040ac:	push   ss
  4040ad:	and    BYTE PTR [esi-0x566ecefc],dl
  4040b3:	sub    eax,0x38fdaf33
  4040b8:	xor    dl,BYTE PTR [edi-0x2e]
  4040bb:	out    0x7e,eax
  4040bd:	(bad)  
  4040be:	adc    al,0x0
  4040c0:	mov    edx,0x81044306
  4040c5:	mov    DWORD PTR [esp+eax*1-0x27],esp
  4040c9:	fwait
  4040ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4040cb:	push   esp
  4040cc:	into   
  4040cd:	and    ebp,ebp
  4040cf:	scas   al,BYTE PTR es:[edi]
  4040d0:	arpl   WORD PTR [ecx+esi*1],ax
  4040d3:	fnsave [ebp+0x4]
  4040d6:	push   0x31
  4040d8:	and    DWORD PTR [esp+edi*8],edx
  4040db:	add    dh,dl
  4040dd:	scas   al,BYTE PTR es:[edi]
  4040de:	in     eax,0x88
  4040e0:	mov    ah,BYTE PTR [eax]
  4040e2:	push   eax
  4040e3:	jnp    0x404157
  4040e5:	aas    
  4040e6:	mov    al,ds:0xbc1425c2
  4040eb:	jp     0x40408a
  4040ed:	xchg   edi,eax
  4040ee:	and    eax,0x55e6deac
  4040f3:	sbb    dh,BYTE PTR [ecx]
  4040f5:	inc    ebx
  4040f6:	dec    esi
  4040f7:	cmp    DWORD PTR [ecx],ebp
  4040f9:	lods   al,BYTE PTR ds:[esi]
  4040fa:	sbb    cl,bl
  4040fc:	outs   dx,BYTE PTR ds:[esi]
  4040fd:	fwait
  4040fe:	es dec ecx
  404100:	gs adc al,0x0
  404103:	jmp    0x94cb553a
  404108:	add    BYTE PTR [eax],al
  40410a:	pop    edx
  40410b:	mov    ss,WORD PTR [edx]
  40410d:	je     0x404107
  40410f:	fwait
  404110:	push   eax
  404111:	xchg   ebx,eax
  404112:	mov    DWORD PTR cs:[ebp+0x15],eax
  404116:	in     eax,0x9a
  404118:	jne    0x4040fb
  40411a:	xchg   DWORD PTR [esi+0xc],eax
  40411d:	scas   al,BYTE PTR es:[edi]
  40411e:	mov    ch,0x18
  404120:	cld    
  404121:	in     al,dx
  404122:	sub    BYTE PTR [eax],cl
  404124:	or     bh,BYTE PTR [ebp+0x18]
  404127:	xchg   esi,eax
  404128:	jge    0x40411b
  40412a:	xor    ah,BYTE PTR [ecx]
  40412c:	leave  
  40412d:	sbb    dh,ch
  40412f:	scas   al,BYTE PTR es:[edi]
  404130:	add    eax,0xc096ef72
  404135:	jmp    0x4132:0xe5c2cd6f
  40413c:	mov    edx,ebp
  40413e:	mov    bl,0xcf
  404140:	hlt    
  404141:	sbb    bh,BYTE PTR [esi+0x2c]
  404144:	cwde   
  404145:	repz xor dl,BYTE PTR [eax+ebp*8]
  404149:	fimul  WORD PTR [esi+0x7970ff9a]
  40414f:	cwde   
  404150:	lea    esp,[ecx+ecx*4]
  404153:	inc    ebx
  404154:	call   0xffdb2d2e
  404159:	(bad)  
  40415b:	sub    eax,0x32ab131e
  404160:	add    BYTE PTR [ebx-0x300ebce],al
  404166:	out    0x9a,al
  404168:	jne    0x40414b
  40416a:	mov    edx,0x66fe8f
  40416f:	add    bh,bl
  404171:	nop
  404172:	shr    dh,0xae
  404175:	jecxz  0x404177
  404177:	jmp    0x55b5dcae
  40417c:	call   0x3d69:0xf700db87
  404183:	add    dl,dh
  404185:	push   ss
  404186:	add    BYTE PTR [esi+0x4d],dh
  404189:	ja     0x4041a7
  40418b:	add    DWORD PTR [eax+0x16],ecx
  40418e:	push   DWORD PTR [ebp+0x2c]
  404191:	jg     0x4041ed
  404193:	jmp    DWORD PTR [edi]
  404195:	push   0xffffff85
  404197:	rcr    BYTE PTR [edx+edx*8+0x7f1c75ff],0x8d
  40419f:	fnsave [edi]
  4041a1:	push   0xffffff8b
  4041a3:	push   ebp
  4041a4:	sbb    al,0x1c
  4041a6:	adc    ch,BYTE PTR [edx+0x8]
  4041a9:	(bad)  
  4041aa:	xor    esp,DWORD PTR [ecx]
  4041ac:	or     BYTE PTR [esi],dl
  4041ae:	push   DWORD PTR [ebp+0x14]
  4041b1:	push   0x46e7f475
  4041b6:	or     al,0xc7
  4041b8:	dec    ebp
  4041b9:	push   0x16080000
  4041be:	push   0x5543fa
  4041c3:	call   FWORD PTR ds:0x5e19e864
  4041c9:	adc    BYTE PTR [eax],al
  4041cb:	push   ebx
  4041cc:	rcl    ebp,cl
  4041ce:	je     0x404206
  4041d0:	inc    ebx
  4041d1:	push   0xfa68
  4041d6:	jecxz  0x40422e
  4041d8:	add    al,ch
  4041da:	sbb    BYTE PTR [eax+eax*1],bl
  4041dd:	add    bl,cl
  4041df:	ins    DWORD PTR es:[edi],dx
  4041e0:	push   edi
  4041e1:	inc    edi
  4041e2:	and    eax,edi
  4041e4:	mov    ecx,0x158994
  4041e9:	mov    al,0x95
  4041eb:	arpl   WORD PTR [esi+0x4fcb8],bp
  4041f1:	add    BYTE PTR [ebx],ah
  4041f3:	aad    0xc6
  4041f5:	inc    edi
  4041f6:	out    0xf,eax
  4041f8:	push   edi
  4041f9:	push   ebx
  4041fa:	xor    DWORD PTR [ebx-0x4f],edx
  4041fd:	mov    ch,0x31
  4041ff:	stos   DWORD PTR es:[edi],eax
  404200:	jp     0x404247
  404202:	imul   esi,DWORD PTR [edx-0x3b],0x4ca86647
  404209:	pop    ebx
  40420a:	leave  
  40420b:	mov    ah,0xdf
  40420d:	inc    eax
  40420e:	xor    edx,ebp
  404210:	ss cld 
  404212:	pop    ecx
  404213:	(bad)  [esi+0x0]
  404216:	xor    DWORD PTR [esi-0x8],ebx
  404219:	mov    edi,0xf87866c5
  40421e:	leave  
  40421f:	mov    ah,0xdf
  404221:	inc    eax
  404222:	xor    DWORD PTR [ebx],eax
  404224:	in     eax,0xb3
  404226:	xor    DWORD PTR [ebx+0x6a86f800],ebp
  40422c:	js     0x40420d
  40422e:	fdivr  DWORD PTR [esi]
  404230:	adc    eax,DWORD PTR [eax]
  404232:	xor    DWORD PTR [ebx-0x2],edi
  404235:	icebp  
  404236:	xlat   BYTE PTR ds:[ebx]
  404237:	jb     0x4041d0
  404239:	adc    DWORD PTR [eax],eax
  40423b:	add    BYTE PTR [ecx],dh
  40423d:	stos   DWORD PTR es:[edi],eax
  40423e:	fadd   st,st(0)
  404240:	out    dx,eax
  404241:	icebp  
  404242:	lods   al,BYTE PTR ds:[esi]
  404243:	add    BYTE PTR [esi-0x1c986402],al
  404249:	pop    ecx
  40424a:	lods   al,BYTE PTR ds:[esi]
  40424b:	mov    eax,DWORD PTR [ebx+edi*4-0x50a22e08]
  404252:	jp     0x404256
  404254:	fisubr DWORD PTR [eax-0x733f17ad]
  40425a:	lods   al,BYTE PTR ds:[esi]
  40425b:	call   FWORD PTR [esi+0x69]
  40425e:	inc    esp
  40425f:	jmp    DWORD PTR [edx+ebp*8]
  404262:	dec    eax
  404263:	jmp    DWORD PTR [edi+edx*1]
  404266:	fwait
  404267:	and    eax,0x83ac1984
  40426c:	sbb    al,0x23
  40426e:	add    esi,DWORD PTR [edi+0x2e]
  404271:	jb     0x4042b9
  404273:	clc    
  404274:	xor    DWORD PTR [ecx+ebp*8],edx
  404277:	arpl   WORD PTR [ecx],si
  404279:	cdq    
  40427a:	aam    0xab
  40427c:	jle    0x40429c
  40427e:	pop    ebp
  40427f:	lods   al,BYTE PTR ds:[esi]
  404280:	cld    
  404281:	or     eax,DWORD PTR [ecx-0x5c]
  404284:	ins    BYTE PTR es:[edi],dx
  404285:	cwde   
  404286:	inc    esi
  404287:	lods   al,BYTE PTR ds:[esi]
  404288:	fcomp  QWORD PTR [edi-0x678479af]
  40428e:	ss clc 
  404290:	xchg   esi,eax
  404291:	push   ds
  404292:	jmp    0x40422c
  404294:	sub    cl,BYTE PTR ds:0x8d1e3729
  40429a:	mov    ah,0xb7
  40429c:	stos   BYTE PTR es:[edi],al
  40429d:	add    eax,0x3616
  4042a2:	and    eax,0x2eb79499
  4042a7:	inc    ebx
  4042a8:	mov    ebp,0xe41cf186
  4042ad:	push   0x3e91430
  4042b2:	stos   BYTE PTR es:[edi],al
  4042b3:	inc    ecx
  4042b4:	cmc    
  4042b5:	ja     0x4042da
  4042b7:	xchg   edi,eax
  4042b8:	pop    esp
  4042b9:	mov    al,0x6
  4042bb:	inc    ebx
  4042bc:	icebp  
  4042bd:	stos   BYTE PTR es:[edi],al
  4042be:	test   BYTE PTR [eax-0x67ec803f],bl
  4042c4:	into   
  4042c5:	jg     0x4042b9
  4042c7:	aaa    
  4042c8:	and    bh,BYTE PTR [ebp+0x50e908f3]
  4042ce:	stos   BYTE PTR es:[edi],al
  4042cf:	test   al,0x6a
  4042d1:	shl    BYTE PTR [ecx-0x1420e5c1],0x2c
  4042d8:	jmp    0x91d809c0
  4042dd:	adc    bl,0x97
  4042e0:	xchg   esi,eax
  4042e1:	jge    0x40434f
  4042e3:	cwde   
  4042e4:	add    DWORD PTR [ecx+edx*2],eax
  4042e7:	adc    al,0xe9
  4042e9:	fwait
  4042ea:	sub    BYTE PTR [edx+0x51a8ab7e],dh
  4042f0:	add    BYTE PTR ds:0xe9201435,bh
  4042f6:	xor    ch,BYTE PTR [esp+ebp*2-0x766825b5]
  4042fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4042fe:	push   ss
  4042ff:	mov    DWORD PTR [ebp+0x29],edi
  404302:	add    al,0xd8
  404304:	(bad)  
  404305:	call   0xe372430a
  40430a:	mov    edi,0x45cf073a
  40430f:	sub    DWORD PTR [ecx-0x69],ecx
  404312:	(bad)  
  404313:	jmp    0x2f14948b
  404318:	cmp    dl,BYTE PTR [eax+eax*1]
  40431b:	lock mov cs:0x1432feff,eax
  404322:	call   FWORD PTR [esi+ecx*4-0x25c6ba79]
  404329:	and    BYTE PTR [esi+esi*2-0x5b725790],dh
  404330:	repnz inc ebx
  404332:	push   0x801432e9
  404337:	xor    DWORD PTR [edx],0xffffff97
  40433a:	jne    0x40432d
  40433c:	stos   BYTE PTR es:[edi],al
  40433d:	jno    0x4042f3
  40433f:	jmp    0x5e004e76
  404344:	xor    edx,DWORD PTR [ebx+0x2132b97d]
  40434a:	add    eax,0x13a8d0
  40434f:	jmp    0xb6f09447
  404354:	sub    edx,DWORD PTR [eax+eax*1]
  404357:	pop    esp
  404358:	jno    0x4043be
  40435a:	push   eax
  40435b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40435c:	add    DWORD PTR [eax+0x68],ebx
  40435f:	jmp    0x64c05796
  404364:	jno    0x40433a
  404366:	push   eax
  404367:	sbb    DWORD PTR [ecx+0x60],0x0
  40436e:	cwde   
  40436f:	xchg   ebp,eax
  404370:	mov    edi,0xa9779575
  404375:	add    BYTE PTR [eax+0x44458b12],cl
  40437b:	aad    0x0
  40437d:	add    ch,bh
  40437f:	jmp    0x404340
  404381:	mov    ecx,0x101c
  404386:	sbb    edx,eax
  404388:	rep stos BYTE PTR es:[edi],al
  40438a:	pop    ss
  40438b:	push   esp
  40438c:	sar    BYTE PTR [eax+ebx*2],0x12
  404390:	add    bh,bh
  404392:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404393:	pop    DWORD PTR es:[ebp-0x14]
  404397:	rol    DWORD PTR [ebp-0x2c],1
  40439a:	pop    ds
  40439b:	or     al,BYTE PTR [eax]
  40439d:	add    BYTE PTR [edi],dl
  40439f:	push   esp
  4043a0:	lock (bad) 
  4043a2:	aas    
  4043a3:	adc    al,BYTE PTR [eax]
  4043a5:	lea    eax,[ebp+0x186a50d2]
  4043ab:	clc    
  4043ac:	(bad)  
  4043ad:	(bad)  
  4043ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4043af:	sub    eax,0x116431e8
  4043b4:	add    BYTE PTR [ebx],cl
  4043b6:	dec    eax
  4043b7:	in     eax,0x5
  4043b9:	sbb    DWORD PTR [ebp+0x1a7500c1],0x79
  4043c0:	pusha  
  4043c1:	jmp    DWORD PTR [ebp+0x6c]
  4043c4:	push   DWORD PTR [ebp-0x6c]
  4043c7:	clc    
  4043c8:	adc    ebp,DWORD PTR [ecx+ebx*1]
  4043cb:	adc    bh,bh
  4043cd:	jne    0x40437b
  4043cf:	js     0x40439b
  4043d1:	mov    bl,0x0
  4043d3:	add    al,cl
  4043d5:	adc    DWORD PTR [ebx-0x4963073c],eax
  4043db:	inc    ebp
  4043dc:	mov    al,ds:0x8f006a40
  4043e1:	in     eax,0xfb
  4043e3:	call   0x3faa96
  4043e8:	xor    DWORD PTR [edx-0x6dcc8a3d],esi
  4043ee:	out    dx,eax
  4043ef:	mov    ah,ch
  4043f1:	push   edx
  4043f2:	test   eax,0x2583dd75
  4043f7:	mov    dl,0x31
  4043f9:	stos   DWORD PTR es:[edi],eax
  4043fa:	push   ebx
  4043fb:	inc    DWORD PTR [edi+eiz*8]
  4043fe:	test   al,0x75
  404400:	leave  
  404401:	inc    ebx
  404402:	dec    edi
  404403:	sti    
  404404:	jle    0x40443c
  404406:	std    
  404407:	mov    edi,0x109ca8fc
  40440c:	outs   dx,BYTE PTR ds:[esi]
  40440d:	rcl    BYTE PTR [ebx],0xff
  404410:	fcomp  QWORD PTR [esi+0x439975a8]
  404416:	out    dx,eax
  404417:	cld    
  404418:	push   esi
  404419:	fidivr WORD PTR [eax+ebx*8+0x4e]
  40441d:	pusha  
  40441e:	imul   ebp,eax,0x34
  404421:	aaa    
  404422:	add    al,0x0
  404424:	sub    BYTE PTR ds:[edi-0x18],0x4
  404429:	or     al,0xa9
  40442b:	jmp    FWORD PTR [esi]
  40442d:	and    BYTE PTR [edi-0x18],0x4c
  404431:	or     al,0xa9
  404433:	call   FWORD PTR [esi]
  404435:	and    BYTE PTR [edi+0x340000e8],ah
  40443b:	or     al,0xa9
  40443d:	(bad)  
  40443e:	mov    edx,0xf85f4ce9
  404443:	push   0x2265fff7
  404448:	xchg   edi,eax
  404449:	sub    ebp,0xffffffbe
  40444c:	jl     0x404493
  40444e:	cmp    eax,0x2f74c3b2
  404453:	add    ax,WORD PTR [eax]
  404456:	xor    DWORD PTR [ebx+0x5f6cc703],ebp
  40445c:	add    eax,DWORD PTR [eax]
  40445e:	xor    DWORD PTR [ebx+0x13c54576],ebp
  404464:	cmp    DWORD PTR [ecx+0x2e9e0844],ebp
  40446a:	sub    DWORD PTR [eax+eax*1+0x6a94aeaa],ebp
  404471:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  404473:	adc    edi,ebp
  404475:	adc    BYTE PTR [ebx],cl
  404477:	adc    al,0x7e
  404479:	cs and eax,0x99a7fc95
  40447f:	cmp    eax,0x4386a86f
  404484:	data16 cs jge 0x404433
  404488:	cmp    DWORD PTR [ebx-0x454e6b8a],esp
  40448e:	jae    0x40449b
  404490:	jmp    0x6ae7fee3
  404495:	mov    edi,0x3e262d5d
  40449a:	push   ebp
  40449b:	adc    ch,cl
  40449d:	and    DWORD PTR [eax],eax
  40449f:	add    BYTE PTR [esi+0x4e],dh
  4044a2:	das    
  4044a3:	or     DWORD PTR [ecx],esi
  4044a5:	sub    ch,ch
  4044a7:	jbe    0x40449d
  4044a9:	xchg   edi,eax
  4044aa:	mov    ecx,0xe913b11b
  4044af:	add    ebx,DWORD PTR [ecx+0x31030e93]
  4044b5:	xchg   ebx,eax
  4044b6:	jl     0x4044b3
  4044b8:	push   ss
  4044b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044ba:	cmp    al,BYTE PTR [ebx]
  4044bc:	xor    DWORD PTR [ebp+0x2b],ebx
  4044bf:	dec    DWORD PTR [esi]
  4044c1:	jmp    0x58f2dc27
  4044c6:	xchg   ebp,eax
  4044c7:	dec    edi
  4044c8:	bound  ebx,QWORD PTR [ebx+0x24]
  4044cb:	pop    eax
  4044cc:	xor    DWORD PTR [ecx+ebp*8],edx
  4044cf:	add    esp,DWORD PTR [edx]
  4044d1:	outs   dx,DWORD PTR ds:[esi]
  4044d2:	inc    ecx
  4044d3:	add    al,0x41
  4044d5:	adc    al,0xe9
  4044d7:	fwait
  4044d8:	mov    eax,0xa8a7be74
  4044dd:	fcos   
  4044df:	test   al,0x2d
  4044e1:	adc    al,0x10
  4044e3:	jmp    0x89ccc11a
  4044e8:	xchg   esi,eax
  4044e9:	xchg   ebx,eax
  4044ea:	mov    DWORD PTR [eax*2+0x32f8fffc],esp
  4044f1:	adc    al,0xe8
  4044f3:	push   cs
  4044f4:	int    0x93
  4044f6:	push   DWORD PTR [eax-0x10]
  4044f9:	iret   
  4044fa:	(bad)  
  4044fb:	cld    
  4044fc:	(bad)  
  4044fd:	int    0x3c
  4044ff:	jmp    0xa9735936
  404504:	add    BYTE PTR [eax],al
  404506:	ret    0xc7be
  404509:	lods   al,BYTE PTR ds:[esi]
  40450a:	mov    esi,0x32e90050
  40450f:	xchg   ebx,eax
  404510:	jne    0x40453b
  404512:	out    0xd8,al
  404514:	ror    DWORD PTR [esi+0x20],cl
  404517:	int3   
  404518:	(bad)  
  404519:	lods   al,BYTE PTR ds:[esi]
  40451a:	mov    ds:0x8e21455b,al
  40451f:	and    eax,DWORD PTR [eax]
  404521:	jmp    0x2f341eb5
  404526:	ds xchg ebx,eax
  404528:	push   DWORD PTR [eax+esi*8+0x57]
  40452c:	push   eax
  40452d:	xchg   ecx,eax
  40452e:	xor    dl,BYTE PTR [eax+eax*1]
  404531:	imul   ecx,DWORD PTR [ebx+0x14],0x7b2a94ff
  404538:	mov    ch,0x3b
  40453a:	xor    eax,0x61290b14
  40453f:	sbb    al,BYTE PTR [ebx+0x7513fe74]
  404545:	in     al,0xa5
  404547:	nop
  404548:	add    cl,ch
  40454a:	xor    bl,BYTE PTR [ebx+0x45]
  40454d:	cdq    
  40454e:	iret   
  40454f:	and    al,BYTE PTR [eax]
  404551:	jmp    0x39f01ebf
  404556:	mov    cs,WORD PTR [eax]
  404558:	mov    esp,0x188000
  40455d:	add    BYTE PTR [eax+0xc],cl
  404560:	inc    ebp
  404561:	les    ebp,FWORD PTR [eax]
  404563:	mov    al,0x90
  404565:	mov    dl,0xd8
  404567:	push   ss
  404568:	or     eax,eax
  40456a:	add    BYTE PTR [eax],al
  40456c:	sbb    eax,0xc8d8e915
  404571:	push   ss
  404572:	add    BYTE PTR [ebx+0xc6005d],cl
  404578:	cwde   
  404579:	or     edi,DWORD PTR [ebp-0x3c]
  40457c:	icebp  
  40457d:	jp     0x40457e
  40457f:	dec    DWORD PTR [eax-0xd0c407b]
  404585:	rol    DWORD PTR [ebp-0x3c],1
  404588:	aam    0x16
  40458a:	add    BYTE PTR [eax],al
  40458c:	pop    ss
  40458d:	inc    esp
  40458e:	mov    eax,0xc7c6cd8f
  404593:	inc    ebp
  404594:	and    BYTE PTR [edx-0x2ea7fff1],bh
  40459a:	inc    ebp
  40459b:	hlt    
  40459c:	test   DWORD PTR [ecx-0x2c3a0001],0x167250c3
  4045a6:	push   0x0
  4045a8:	pop    ss
  4045a9:	inc    esp
  4045aa:	mov    esp,0x48ce8
  4045af:	add    BYTE PTR [ebx+0x56],al
  4045b2:	je     0x4045ba
  4045b4:	fwait
  4045b5:	cmp    al,0xd4
  4045b7:	add    BYTE PTR [ebp+0x88ce914],bh
  4045bd:	push   ss
  4045be:	add    bh,bh
  4045c0:	popf   
  4045c1:	and    eax,0xba5875ff
  4045c6:	jne    0x404580
  4045c8:	mov    al,0x8f
  4045ca:	sub    al,BYTE PTR [ecx+0x8]
  4045cd:	mov    ecx,0xbc75
  4045d2:	loopne 0x404633
  4045d4:	mov    cl,0x0
  4045d6:	xor    DWORD PTR [ebx-0x80],edi
  4045d9:	les    edi,FWORD PTR ds:0xfd456c72
  4045df:	sub    ebx,DWORD PTR [edx]
  4045e1:	add    dh,dl
  4045e3:	dec    eax
  4045e4:	(bad)  
  4045e5:	call   0xffe609b4
  4045ea:	cmp    bh,BYTE PTR [ebx-0x2635fdd1]
  4045f0:	jp     0x404637
  4045f2:	jge    0x4045a6
  4045f4:	das    
  4045f5:	mov    ah,0x99
  4045f7:	fsub   QWORD PTR [ebp+0x2fa2a6ff]
  4045fd:	mov    esp,0x742389
  404602:	xor    DWORD PTR [ebx],ebp
  404604:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404605:	jne    0x4045d4
  404607:	or     ch,BYTE PTR [edi]
  404609:	mov    ah,0x99
  40460b:	and    eax,0x867effab
  404610:	ret    
  404611:	jne    0x404646
  404613:	out    0xf2,al
  404615:	sub    ah,0x8a
  404618:	add    esi,DWORD PTR [ebp+edi*1-0x1e]
  40461c:	adc    BYTE PTR cs:[esi-0x30],bl
  404620:	idiv   esi
  404622:	fadd   QWORD PTR [esi]
  404624:	pushf  
  404625:	inc    eax
  404626:	dec    eax
  404627:	dec    edx
  404628:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404629:	or     esi,DWORD PTR [ecx-0x38]
  40462c:	add    ebx,ebp
  40462e:	es push es
  404630:	int3   
  404631:	or     ebx,DWORD PTR [edx-0x59]
  404634:	adc    cl,BYTE PTR [ebp-0x288c0000]
  40463a:	push   ebx
  40463b:	call   FWORD PTR [edi+eax*4+0x22e575a4]
  404642:	or     edi,ebx
  404644:	push   ss
  404645:	xchg   edx,eax
  404646:	js     0x404620
  404648:	push   cs
  404649:	adc    BYTE PTR [edi-0x18],ch
  40464c:	add    BYTE PTR [esp+eax*1+0x0],cl
  404650:	(bad)  
  404651:	adc    ebx,DWORD PTR [esp+eax*8+0x9]
  404655:	and    edi,DWORD PTR [esi+0x5c90eea4]
  40465b:	push   0xa4ae1ad9
  404660:	ficom  WORD PTR [eax+0x12c96c3c]
  404666:	sahf   
  404667:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404668:	into   
  404669:	xchg   esp,eax
  40466a:	xor    al,0x58
  40466c:	xor    DWORD PTR [eax],ecx
  40466e:	loope  0x404614
  404670:	inc    esp
  404671:	rcl    BYTE PTR [ecx-0x616f2850],0x78
  404678:	jb     0x404666
  40467a:	xor    eax,0xe92373bb
  40467f:	dec    esi
  404680:	stos   BYTE PTR es:[edi],al
  404681:	jg     0x4046ed
  404683:	mov    edi,0xc8d1e499
  404688:	mov    dl,0xe
  40468a:	in     eax,0x3
  40468c:	std    
  40468d:	loope  0x4046f8
  40468f:	and    DWORD PTR es:[ebx*8+0x5cd6a43b],edx
  404697:	push   ebx
  404698:	outs   dx,BYTE PTR ds:[esi]
  404699:	push   es
  40469a:	in     eax,0x9b
  40469c:	add    BYTE PTR [eax],al
  40469e:	pop    ebp
  40469f:	ret    
  4046a0:	jmp    0xc193faa8
  4046a5:	repz push edi
  4046a7:	push   es
  4046a8:	in     eax,dx
  4046a9:	fwait
  4046aa:	mov    ch,0x69
  4046ac:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  4046ae:	mov    eax,0xc4a430d6
  4046b3:	(bad)  
  4046b4:	adc    DWORD PTR [esi-0x7a],esp
  4046b7:	adc    ebp,ecx
  4046b9:	clc    
  4046ba:	out    dx,al
  4046bb:	or     al,dh
  4046bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4046be:	pushf  
  4046bf:	and    al,0xe
  4046c1:	cs sbb ebp,esp
  4046c4:	add    eax,0xea7c292e
  4046c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4046ca:	push   cs
  4046cb:	nop
  4046cc:	add    BYTE PTR [edx-0x6],ah
  4046cf:	(bad)  
  4046d0:	jne    0x4046bf
  4046d2:	fwait
  4046d3:	mov    dh,0xaf
  4046d5:	jmp    0xedb5d60c
  4046da:	call   0xc39b:0x92d6d7ec
  4046e1:	xor    ch,ah
  4046e3:	push   edx
  4046e4:	or     al,0xe9
  4046e6:	sbb    DWORD PTR [ebx+0x4f968ec],ebx
  4046ec:	(bad)  
  4046ed:	mov    dh,0x92
  4046ef:	mov    eax,ds:0x8f933b85
  4046f4:	(bad)  
  4046f5:	cmp    DWORD PTR ds:0x32e90115,eax
  4046fb:	jl     0x404760
  4046fd:	pop    eax
  4046fe:	sub    eax,0xaac914
  404703:	add    BYTE PTR [eax-0x65],bl
  404706:	in     al,dx
  404707:	push   0x50
  404709:	sbb    al,0x0
  40470b:	cmc    
  40470c:	xor    edx,DWORD PTR [ebx+0x832d97d]
  404712:	sbb    DWORD PTR [esi+0x18],ebp
  404715:	sub    bh,bh
  404717:	fsubr  QWORD PTR [edx]
  404719:	jl     0x4046f5
  40471b:	inc    ebx
  40471c:	xchg   edx,eax
  40471d:	(bad)  
  40471e:	(bad)  
  40471f:	fsub   QWORD PTR [edx-0x72]
  404722:	jne    0x404701
  404724:	xchg   ebx,eax
  404725:	or     DWORD PTR [eax],ecx
  404727:	push   ecx
  404728:	das    
  404729:	imul   edi,edi,0x3e
  40472c:	jl     0x404780
  40472e:	adc    cl,ch
  404730:	or     DWORD PTR [ebx+0x1c106aec],ebx
  404736:	add    BYTE PTR [ebp-0x12826dca],bl
  40473c:	xor    cl,BYTE PTR [eax]
  40473e:	push   ss
  40473f:	push   ss
  404740:	dec    eax
  404741:	and    al,0xff
  404743:	xchg   esp,eax
  404744:	sub    bh,BYTE PTR [esi+ebp*4+0x0]
  404748:	push   edx
  404749:	mov    bl,0xff
  40474b:	inc    DWORD PTR [ebp+0x1075ff1f]
  404751:	mov    ebx,0xb20fdb05
  404756:	leave  
  404757:	ret    0x12fc
  40475a:	push   ebp
  40475b:	mov    edi,esp
  40475d:	xchg   ebp,eax
  40475e:	(bad)  
  40475f:	lock jmp FWORD PTR [ebx]
  404762:	or     al,0xe8
  404764:	movzx  edi,di
  404767:	inc    DWORD PTR [eax]
  404769:	add    BYTE PTR [ecx-0x24],ah
  40476c:	or     eax,DWORD PTR [ebx+0x7400240d]
  404772:	es mov bl,0x75
  404775:	or     al,0xf0
  404777:	pop    ebp
  404778:	loop   0x404779
  40477a:	(bad)  
  40477b:	sbb    eax,0xa55a74c0
  404780:	inc    ebp
  404781:	lock push 0xb00c75b3
  404787:	cwde   
  404788:	jecxz  0x404789
  40478a:	scas   eax,DWORD PTR es:[edi]
  40478b:	sbb    eax,0x97ca74c0
  404790:	jge    0x40478e
  404792:	cwde   
  404793:	adc    dl,BYTE PTR [eax]
  404795:	add    BYTE PTR [ebx+0x72],bh
  404798:	(bad)  
  404799:	jne    0x4047a7
  40479b:	mov    dl,0x75
  40479d:	clc    
  40479e:	add    BYTE PTR [esi+eiz*8-0x3fe20001],cl
  4047a5:	jne    0x404800
  4047a7:	mov    cl,0x75
  4047a9:	adc    bh,ch
  4047ab:	sub    edi,esp
  4047ad:	inc    DWORD PTR [ebp+0x5075ffaa]
  4047b3:	mov    edx,0xb20fff4f
  4047b8:	lea    eax,[ebp+0x18]
  4047bb:	inc    ebx
  4047bc:	call   0xfff283a1
  4047c1:	push   DWORD PTR [ecx]
  4047c3:	mov    al,0xf
  4047c5:	call   0xffe28892
  4047ca:	call   0x405708
  4047cf:	add    BYTE PTR [edx+eax*1-0x51],ah
  4047d3:	sub    ebp,0xffffff8b
  4047d6:	mov    eax,ds:0xb1132d75
  4047db:	loop   0x4047d3
  4047dd:	jbe    0x40476a
  4047df:	inc    ebp
  4047e0:	cmp    eax,0x310c1efa
  4047e5:	out    dx,eax
  4047e6:	dec    eax
  4047e7:	jmp    DWORD PTR [edi+ebp*2-0x55]
  4047eb:	pop    edx
  4047ec:	rcl    DWORD PTR [esi-0x5f],cl
  4047ef:	or     esi,ecx
  4047f1:	inc    edi
  4047f2:	aad    0x8c
  4047f4:	ins    BYTE PTR es:[edi],dx
  4047f5:	retf   
  4047f6:	xor    al,0xff
  4047f8:	inc    esp
  4047f9:	outs   dx,DWORD PTR ds:[esi]
  4047fa:	stos   DWORD PTR es:[edi],eax
  4047fb:	adc    edx,edx
  4047fd:	mov    dh,0xa1
  4047ff:	or     esi,DWORD PTR [ecx+0x27]
  404802:	in     eax,0x80
  404804:	and    al,0xa7
  404806:	add    al,0x0
  404808:	inc    ecx
  404809:	jnp    0x40481f
  40480b:	adc    DWORD PTR [esi+0x4fef390],edx
  404811:	pop    fs
  404813:	jne    0x40479e
  404815:	push   es
  404816:	pop    ss
  404817:	or     BYTE PTR [ecx+0x76ffa210],cl
  40481d:	or     BYTE PTR [edi-0x10],al
  404820:	add    ebx,esp
  404822:	and    ebx,esp
  404824:	data16 out 0xa0,al
  404827:	jne    0x404856
  404829:	ror    DWORD PTR [eax-0x23],cl
  40482c:	push   esi
  40482d:	(bad)  
  40482e:	retf   0x3dc2
  404831:	jnp    0x404869
  404833:	mov    eax,DWORD PTR [eax]
  404835:	add    BYTE PTR [ebp-0x6],dl
  404838:	(bad)  
  404839:	lock loop 0x40484d
  40483c:	mov    ebp,0xf113bcff
  404841:	stos   DWORD PTR es:[edi],eax
  404842:	mov    eax,0xb8a11e71
  404847:	(bad)  
  404848:	loopne 0x4047ce
  40484a:	pushf  
  40484b:	sbb    al,0xe9
  40484d:	pop    ss
  40484e:	outs   dx,DWORD PTR ds:[esi]
  40484f:	lea    edi,[ebx+ecx*1+0x19]
  404853:	xchg   DWORD PTR [eax],ecx
  404855:	mov    eax,ds:0x18291906
  40485a:	inc    ebx
  40485b:	lahf   
  40485c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40485d:	xchg   ebx,eax
  40485e:	popa   
  40485f:	lea    ebx,[esp+ecx*1-0x27]
  404863:	mov    edi,0x18e6a0cb
  404868:	test   eax,0x4c931317
  40486d:	mov    al,ds:0x3d91431
  404872:	inc    edx
  404873:	and    al,0xbe
  404875:	push   ss
  404876:	lds    ecx,FWORD PTR [esp+edi*1-0x38b33664]
  40487d:	mov    al,ds:0x17a918b6
  404882:	xor    cl,dl
  404884:	imul   eax,DWORD PTR [esi-0x5f],0xffffffe3
  404888:	cmp    ch,0x93
  40488b:	mov    WORD PTR [esi-0x6ee3e360],cs
  404891:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404892:	ins    DWORD PTR es:[edi],dx
  404893:	mov    WORD PTR [esi-0x74],?
  404896:	jb     0x404880
  404898:	lahf   
  404899:	lds    eax,FWORD PTR [eax]
  40489b:	add    BYTE PTR ds:0x858d1414,dh
  4048a1:	xchg   edx,eax
  4048a2:	sub    eax,0x5e8c6f57
  4048a7:	enter  0xcbac,0x57
  4048ab:	mov    al,ds:0x3e9135e
  4048b0:	xor    DWORD PTR [ecx+0x543a0fac],ebx
  4048b6:	mov    ch,0x6
  4048b8:	mov    cl,0x4b
  4048ba:	add    cl,ch
  4048bc:	daa    
  4048bd:	pop    ss
  4048be:	jmp    0x547c74
  4048c3:	es inc edi
  4048c5:	sbb    al,ch
  4048c7:	dec    eax
  4048c8:	(bad)  [ebx+0x1f2e2ff]
  4048ce:	jno    0xe9818153
  4048d4:	rol    DWORD PTR [ecx],1
  4048d6:	or     al,0x11
  4048d8:	adc    BYTE PTR [edi+edi*8-0xa],ch
  4048dc:	retf   0x6819
  4048df:	xor    eax,DWORD PTR [esi]
  4048e1:	aad    0xff
  4048e3:	in     eax,0x48
  4048e5:	sbb    al,ch
  4048e7:	push   cs
  4048e8:	lea    ecx,[ebx-0x33579f01]
  4048ee:	dec    dh
  4048f0:	mov    dh,0xfc
  4048f2:	cmp    eax,0x8d1432e8
  4048f7:	fs repz mov bh,bh
  4048fb:	mov    dh,0x5
  4048fd:	jl     0x4048a6
  4048ff:	lea    eax,[eax]
  404901:	add    BYTE PTR [esi+0x736c8d8b],dl
  404907:	mov    bh,bh
  404909:	sahf   
  40490a:	pop    ebp
  40490b:	mov    esi,DWORD PTR [ebp-0x7440af]
  404911:	adc    edx,0xbde900b9
  404917:	xchg   ecx,eax
  404918:	mov    esp,0x408ba67f
  40491d:	out    0xb6,al
  40491f:	cs add ecx,ebp
  404922:	xor    bl,BYTE PTR [ecx-0x7430d46b]
  404928:	call   DWORD PTR [esi+0x33]
  40492b:	and    al,0x0
  40492d:	jmp    0x6ac46464
  404932:	sub    eax,0xc5000014
  404937:	aad    0x2b
  404939:	push   eax
  40493a:	pusha  
  40493b:	out    0x2b,eax
  40493d:	inc    ecx
  40493e:	dec    eax
  40493f:	mov    edi,0x1748adbc
  404944:	or     eax,eax
  404946:	int    0x1b
  404948:	jmp    0x576219
  40494d:	lea    ebx,[ebp+0x27fffe56]
  404953:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404954:	inc    edx
  404955:	sub    al,0xa8
  404957:	ds mov dl,0x2c
  40495a:	fst    DWORD PTR [esi]
  40495c:	call   0x50bf00
  404961:	or     ecx,DWORD PTR [eax+0x2d]
  404964:	add    eax,0xc70000e9
  404969:	push   ss
  40496a:	add    BYTE PTR [eax],al
  40496c:	pop    es
  40496d:	sub    al,0xc
  40496f:	call   0x3ffa79
  404974:	rcl    DWORD PTR [esi+0x75],cl
  404977:	punpcklbw mm3,DWORD PTR [eax+ebp*1+0x41]
  40497c:	fsubr  DWORD PTR [ecx+0xcf00c75]
  404982:	(bad)  
  404984:	xchg   DWORD PTR [ebp-0x566795f6],edi
  40498a:	jne    0x404998
  40498c:	rcr    BYTE PTR [eax-0x5c380021],0x95
  404993:	ret    0xa9a6
  404996:	dec    DWORD PTR [ebp+0x5051842a]
  40499c:	mov    al,ds:0x7ffdfc4
  4049a1:	inc    edi
  4049a2:	push   DWORD PTR [ebp+0x60]
  4049a5:	test   eax,0x2bd71475
  4049aa:	adc    BYTE PTR [eax+0x7],dl
  4049ad:	sub    al,0x8
  4049af:	call   0xffdd36e5
  4049b4:	push   esi
  4049b5:	aam    0xc5
  4049b7:	fisttp DWORD PTR [esi-0x2f]
  4049ba:	test   eax,0xefbeb460
  4049bf:	mov    BYTE PTR [eax+ecx*1-0x2c90063],dh
  4049c6:	pop    ds
  4049c7:	adc    BYTE PTR [ecx],dh
  4049c9:	test   al,0x1
  4049cb:	jmp    0x4049cd
  4049cd:	add    BYTE PTR [ebx+0x2a],al
  4049d0:	sbb    BYTE PTR [eax],dl
  4049d2:	push   ds
  4049d3:	jmp    0x1b57482e
  4049d8:	stos   DWORD PTR es:[edi],eax
  4049d9:	inc    edx
  4049da:	fistp  QWORD PTR [ebx+0x3]
  4049dd:	or     esi,ecx
  4049df:	(bad)  
  4049e0:	fbld   TBYTE PTR [edi-0xb]
  4049e3:	push   ebx
  4049e4:	inc    esp
  4049e5:	add    dh,dh
  4049e7:	add    BYTE PTR [edi],cl
  4049e9:	call   0xffdd9c13
  4049ee:	out    0xa0,al
  4049f0:	pop    eax
  4049f1:	(bad)  
  4049f2:	fisub  WORD PTR [edx+0x34]
  4049f5:	call   0xffde044f
  4049fa:	popa   
  4049fb:	(bad)  
  4049fc:	push   ds
  4049fd:	sbb    BYTE PTR [ecx],dh
  4049ff:	aas    
  404a00:	adc    bh,bh
  404a02:	inc    esp
  404a03:	addr16 xor edi,edi
  404a06:	cmp    al,0x73
  404a08:	pushf  
  404a09:	push   ebp
  404a0a:	dec    ecx
  404a0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a0c:	adc    bh,bh
  404a0e:	sbb    al,0x7f
  404a10:	xor    edi,edi
  404a12:	and    al,0x73
  404a14:	stos   DWORD PTR es:[edi],eax
  404a15:	push   esp
  404a16:	xchg   esp,eax
  404a17:	call   0xff9d:0xb614e89d
  404a1e:	mov    ah,0xf0
  404a20:	sar    esi,0x7e
  404a23:	add    dh,BYTE PTR [edi+edi*8]
  404a26:	mov    esp,0x6eff9e37
  404a2b:	adc    al,0x51
  404a2d:	mov    ecx,0x86e91495
  404a32:	add    BYTE PTR [eax],al
  404a34:	jno    0x404a4f
  404a36:	ins    BYTE PTR es:[edi],dx
  404a37:	xchg   ebx,eax
  404a38:	push   edi
  404a39:	mov    DWORD PTR [esi-0x63],ecx
  404a3c:	test   al,cl
  404a3e:	inc    edi
  404a3f:	popf   
  404a40:	inc    esi
  404a41:	jl     0x404a72
  404a43:	jo     0x404a76
  404a45:	adc    al,0x36
  404a47:	push   edi
  404a48:	jns    0x4049d4
  404a4a:	cs popf 
  404a4c:	sbb    DWORD PTR [edi],edi
  404a4e:	inc    edx
  404a4f:	popf   
  404a50:	es pop ebx
  404a52:	sub    edi,eax
  404a54:	push   ds
  404a55:	loopne 0x404ab8
  404a57:	mov    al,0x8b
  404a59:	adc    al,0xe
  404a5b:	pop    ss
  404a5c:	and    eax,0x7f37c89
  404a61:	(bad)  
  404a62:	in     al,dx
  404a63:	pushf  
  404a64:	test   BYTE PTR [ecx+eax*1],bl
  404a67:	(bad)  
  404a69:	mov    dh,ch
  404a6b:	retf   0x23f3
  404a6e:	jmp    0xdeb804a9
  404a73:	push   ss
  404a74:	sub    eax,0xd6bd327c
  404a79:	mov    dl,ah
  404a7b:	ret    
  404a7c:	inc    ebp
  404a7d:	sub    al,dh
  404a7f:	push   ss
  404a80:	and    esp,esp
  404a82:	rcl    BYTE PTR [ecx+0x33b688df],1
  404a88:	mov    dh,0xfe
  404a8a:	rcr    BYTE PTR [esp+0x1c9d3920],1
  404a91:	sbb    al,0x91
  404a93:	pop    ebp
  404a94:	sahf   
  404a95:	mov    BYTE PTR [esi-0x74ffff55],dl
  404a9b:	ins    DWORD PTR es:[edi],dx
  404a9c:	mov    ds,WORD PTR [eax+edi*2-0x23fc22ab]
  404aa3:	pushf  
  404aa4:	lea    ebx,[esp+eax*1+0x1f760020]
  404aab:	and    al,0xff
  404aad:	hlt    
  404aae:	ds (bad) 
  404ab0:	sbb    DWORD PTR [esi+0x3f],esp
  404ab3:	sbb    al,0xe8
  404ab5:	mov    al,ds:0x56ff88bd
  404aba:	aas    
  404abb:	and    bh,bh
  404abd:	aam    0x42
  404abf:	mov    DWORD PTR [ebp-0xb],esi
  404ac2:	sbb    BYTE PTR ds:0x7c2ab4ff,dh
  404ac8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ac9:	ss xchg ebp,eax
  404acb:	mov    bh,bh
  404acd:	mov    ah,0x26
  404acf:	xchg   DWORD PTR [ebp-0x7],esi
  404ad2:	lds    eax,FWORD PTR [ecx]
  404ad4:	or     al,0x93
  404ad6:	push   ds
  404ad7:	xchg   DWORD PTR [ebp-0x1f],esi
  404ada:	retf   0xffa3
  404add:	push   cs
  404ade:	lods   eax,DWORD PTR ds:[esi]
  404adf:	pop    ebp
  404ae0:	ret    0x32d9
  404ae3:	loope  0x404a6f
  404ae5:	or     eax,0x9af050b1
  404aea:	cmp    al,0xdf
  404aec:	sub    dl,BYTE PTR [edx]
  404aee:	mov    ecx,0xfde60bd1
  404af3:	xchg   esi,eax
  404af4:	inc    ebp
  404af5:	loope  0x404ab1
  404af7:	add    DWORD PTR [eax],ecx
  404af9:	data16 jo 0x404a84
  404afc:	(bad)  
  404afd:	and    al,0x0
  404aff:	add    BYTE PTR [ecx+0x32e90014],ah
  404b05:	xchg   ebx,eax
  404b06:	cmp    eax,0xffd4cdf4
  404b0b:	call   0x2cc33336
  404b10:	cmp    eax,0xb83f7414
  404b15:	shr    edi,1
  404b17:	cmp    DWORD PTR [edi+0x15],ecx
  404b1a:	push   0xffffffe9
  404b1c:	inc    esp
  404b1d:	adc    al,0x83
  404b1f:	or     al,0x85
  404b21:	xchg   DWORD PTR [ebx+0x0],esi
  404b24:	xchg   ebp,eax
  404b25:	stos   BYTE PTR es:[edi],al
  404b26:	jne    0x404b38
  404b28:	mov    ds:0x32006a0e,eax
  404b2d:	adc    BYTE PTR [ebp-0xc01fbb],cl
  404b33:	adc    eax,0x407945
  404b38:	arpl   WORD PTR [ebx+0x74],dx
  404b3b:	das    
  404b3c:	retf   
  404b3d:	sub    al,0xf4
  404b3f:	add    BYTE PTR [eax+edi*2-0x76],ah
  404b43:	inc    ebp
  404b44:	cmp    al,0x96
  404b46:	dec    ebp
  404b47:	lock xor ebx,DWORD PTR [eax]
  404b4a:	ja     0x404b63
  404b4c:	mov    ebx,DWORD PTR [edi-0x689b8a75]
  404b52:	jge    0x404b5c
  404b54:	mov    ds:0xae3efdd,eax
  404b59:	sahf   
  404b5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b5b:	mov    eax,ebp
  404b5d:	push   cs
  404b5e:	push   DWORD PTR [ebp+0x28]
  404b61:	fwait
  404b62:	add    bh,bh
  404b64:	add    BYTE PTR [eax],al
  404b66:	test   DWORD PTR [edi+0x106337e8],edx
  404b6c:	add    BYTE PTR [ebx+0x5b5e4b4b],cl
  404b72:	adc    DWORD PTR [esi+0xc],ecx
  404b75:	add    BYTE PTR ds:0x9483ec97,ah
  404b7b:	sahf   
  404b7c:	push   ebx
  404b7d:	push   esi
  404b7e:	pop    ss
  404b7f:	cmp    BYTE PTR [ebp+0x2f],dl
  404b82:	sbb    DWORD PTR [eax],edx
  404b84:	call   0x52ef22
  404b89:	mov    edx,DWORD PTR [eax-0x3703baaf]
  404b8f:	adc    al,BYTE PTR [eax]
  404b91:	add    BYTE PTR [ebx+0x403e7452],dl
  404b97:	shr    DWORD PTR [esi],1
  404b99:	inc    ecx
  404b9a:	mov    BYTE PTR ds:0xd23145e8,bh
  404ba0:	add    al,BYTE PTR [eax]
  404ba2:	cmp    bh,BYTE PTR [ebp+0xcba2f0f]
  404ba8:	sub    esp,DWORD PTR [edx+0x4e]
  404bab:	cmp    al,0x4
  404bad:	push   ebx
  404bae:	mov    eax,ecx
  404bb0:	outs   dx,BYTE PTR ds:[esi]
  404bb1:	add    BYTE PTR [ecx],dh
  404bb3:	jb     0x404b78
  404bb5:	je     0x404bfe
  404bb7:	add    bl,BYTE PTR [ebx+0x32e8f48d]
  404bbd:	call   0x43ddd6
  404bc2:	loope  0x404b99
  404bc4:	mov    cl,0x83
  404bc6:	(bad)  
  404bc7:	rol    BYTE PTR [edx],1
  404bc9:	je     0x404bcb
  404bcb:	add    BYTE PTR [ebx],ch
  404bcd:	xchg   ebp,eax
  404bce:	add    al,0x0
  404bd0:	xor    DWORD PTR [ebp+0x3a],edi
  404bd3:	pop    esi
  404bd4:	mov    dh,BYTE PTR [esi+eax*8]
  404bd7:	mov    eax,0x37b31
  404bdc:	jle    0x404ba3
  404bde:	ds leave 
  404be0:	repnz enter 0xec8e,0xb2
  404be5:	das    
  404be6:	xchg   ebx,eax
  404be7:	add    DWORD PTR [eax+ecx*2-0x17],0x40
  404bec:	xor    DWORD PTR [ebx+0xf],edi
  404bef:	adc    dh,BYTE PTR [edx+0x702e5cc0]
  404bf5:	jnp    0x404bfa
  404bf7:	je     0x404c31
  404bf9:	cli    
  404bfa:	(bad)  
  404bfb:	mov    esp,0x43c0f
  404c00:	pop    esp
  404c01:	jbe    0x404c5e
  404c03:	add    DWORD PTR [ecx],esi
  404c05:	jnp    0x404c0a
  404c07:	leave  
  404c08:	repnz add BYTE PTR [edi],bh
  404c0b:	cli    
  404c0c:	idiv   DWORD PTR [ebx+0x3]
  404c0f:	(bad)  
  404c10:	jno    0x404c8e
  404c12:	add    eax,esi
  404c14:	icebp  
  404c15:	js     0x404c1a
  404c17:	(bad)  
  404c18:	icebp  
  404c19:	adc    ebp,edx
  404c1b:	add    esi,DWORD PTR [edi-0x2c]
  404c1e:	in     al,0x3
  404c20:	outs   dx,DWORD PTR ds:[esi]
  404c21:	aam    0xeb
  404c23:	(bad)  
  404c24:	mov    ebp,0x1b3494cf
  404c29:	adc    al,0x13
  404c2b:	add    al,0xb
  404c2d:	adc    al,0x13
  404c2f:	add    al,0x0
  404c31:	add    BYTE PTR [ebx],cl
  404c33:	adc    al,0x3
  404c35:	add    al,0xd9
  404c37:	xor    ebp,ebx
  404c39:	add    esi,DWORD PTR [ecx]
  404c3b:	cli    
  404c3c:	or     BYTE PTR [esi],ch
  404c3e:	xor    edx,DWORD PTR [edi-0x7afe625c]
  404c44:	cld    
  404c45:	dec    esi
  404c46:	pop    ds
  404c47:	shr    eax,cl
  404c49:	or     al,0x71
  404c4b:	(bad)  
  404c4c:	jmp    0x3193:0xa44d72ca
  404c53:	adc    al,0xe9
  404c55:	add    edi,DWORD PTR [esi+ecx*8-0xd9cbc8]
  404c5c:	sbb    al,0x2e
  404c5e:	xor    DWORD PTR [ebp-0x2cb8a50c],eax
  404c64:	call   0xe63f3d75
  404c69:	shr    BYTE PTR [esp+eax*4-0x17],0x3
  404c6e:	xor    DWORD PTR [esi+edi*8],edx
  404c71:	push   cs
  404c72:	std    
  404c73:	test   ah,bl
  404c75:	push   esi
  404c76:	pop    ds
  404c77:	shr    eax,cl
  404c79:	mov    WORD PTR [esp+eax*4-0x50],gs
  404c7d:	les    eax,FWORD PTR [ecx+ebx*4-0x64127b33]
  404c84:	fs ds mov ecx,0x160b40e3
  404c8b:	shr    eax,cl
  404c8d:	stos   DWORD PTR es:[edi],eax
  404c8e:	jo     0x404cfe
  404c90:	mov    esi,0x196198
  404c95:	test   eax,0xe3e0000
  404c9a:	sub    DWORD PTR [esi*4-0x49ed88e1],0xffffffce
  404ca2:	out    dx,eax
  404ca3:	cmp    ebp,eax
  404ca5:	and    eax,0x8f32e9ab
  404caa:	rcl    BYTE PTR [ecx],0x4b
  404cad:	adc    eax,0xe3982cb6
  404cb2:	push   cs
  404cb3:	aaa    
  404cb4:	aaa    
  404cb5:	xchg   BYTE PTR [eax-0x1a],dl
  404cb8:	add    bh,cl
  404cba:	cld    
  404cbb:	sbb    DWORD PTR [eax],edi
  404cbd:	mov    esi,0x15226545
  404cc2:	mov    dh,0xa4
  404cc4:	mov    ch,0xe3
  404cc6:	push   cs
  404cc7:	lahf   
  404cc8:	jp     0xcf212b1e
  404cce:	clc    
  404ccf:	cdq    
  404cd0:	sub    DWORD PTR [esi+0x15024145],edi
  404cd6:	mov    bh,0xac
  404cd8:	shl    ah,0xe
  404cdb:	jbe    0x404d44
  404cdd:	mov    BYTE PTR [eax+0x26],dl
  404ce0:	das    
  404ce1:	test   BYTE PTR [eax-0x11],ch
  404ce4:	or     ebp,edx
  404ce6:	jmp    DWORD PTR [ebx+0x4f]
  404ce9:	nop
  404cea:	push   eax
  404ceb:	add    ecx,ebx
  404ced:	scas   al,BYTE PTR es:[edi]
  404cee:	add    cl,ch
  404cf0:	mov    ch,0x58
  404cf2:	xor    al,0x6c
  404cf4:	aaa    
  404cf5:	nop
  404cf6:	push   eax
  404cf7:	add    DWORD PTR [ecx-0x53],ebp
  404cfa:	add    cl,ch
  404cfc:	add    BYTE PTR [eax],al
  404cfe:	and    dl,BYTE PTR [ecx-0x13da8abb]
  404d04:	or     BYTE PTR [esi],cl
  404d06:	ins    BYTE PTR es:[edi],dx
  404d07:	adc    al,0xe8
  404d09:	cwde   
  404d0a:	xchg   ecx,eax
  404d0b:	cmp    edi,0xffffffc1
  404d0e:	inc    esi
  404d0f:	pop    esp
  404d10:	inc    DWORD PTR [eax]
  404d12:	not    DWORD PTR [ecx-0x3d]
  404d15:	push   ebp
  404d16:	inc    ebx
  404d17:	lods   al,BYTE PTR ds:[esi]
  404d18:	add    esp,0xffffab34
  404d1e:	dec    ebx
  404d1f:	xor    ebp,DWORD PTR [edx+0x0]
  404d22:	inc    edx
  404d23:	sbb    bh,bh
  404d25:	jne    0x404cc7
  404d27:	scas   eax,DWORD PTR es:[edi]
  404d28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d29:	aad    0xa7
  404d2b:	stos   DWORD PTR es:[edi],eax
  404d2c:	mov    DWORD PTR [ebp-0x4c],eax
  404d2f:	xor    BYTE PTR [ecx],al
  404d31:	add    BYTE PTR [edi-0x7f8a0116],ah
  404d37:	scas   eax,DWORD PTR es:[edi]
  404d38:	out    0xd4,eax
  404d3a:	out    0xaa,eax
  404d3c:	push   0x17589c
  404d41:	(bad)  
  404d42:	int    0x37
  404d44:	(bad)  
  404d45:	push   edi
  404d47:	inc    edi
  404d48:	call   0xffeb4dc8
  404d4d:	(bad)  
  404d4e:	int    0x37
  404d50:	(bad)  
  404d51:	push   edi
  404d53:	sti    
  404d54:	(bad)  
  404d55:	dec    DWORD PTR [eax-0x74]
  404d58:	test   DWORD PTR [eax+0x67],esp
  404d5b:	stos   DWORD PTR es:[edi],eax
  404d5c:	call   DWORD PTR [eax+0x70]
  404d5f:	leave  
  404d60:	test   eax,0x8000000
  404d65:	outs   dx,BYTE PTR ds:[esi]
  404d66:	enter  0x5a2b,0x8d
  404d6a:	mov    ebp,0xffab2774
  404d6f:	jmp    0x404d7c
  404d71:	xchg   edi,eax
  404d72:	aas    
  404d73:	add    BYTE PTR [ebp+0x14],bh
  404d76:	mov    edx,0x170801
  404d7b:	or     ecx,DWORD PTR [edx+0x24]
  404d7e:	add    eax,esi
  404d80:	iret   
  404d81:	push   ss
  404d82:	inc    edi
  404d83:	inc    ecx
  404d84:	dec    ecx
  404d85:	mov    al,ds:0x16c80080
  404d8a:	jb     0x404d71
  404d8c:	xor    DWORD PTR [esi-0x3d],esi
  404d8f:	je     0x404db0
  404d91:	aad    0x77
  404d93:	add    BYTE PTR [ecx],dh
  404d95:	ins    DWORD PTR es:[edi],dx
  404d96:	mov    BYTE PTR [ebp-0x693daf],al
  404d9c:	add    edx,ecx
  404d9e:	adc    BYTE PTR [eax],cl
  404da0:	cdq    
  404da1:	or     DWORD PTR [edi+0x7a59eff],ebp
  404da7:	push   0x31
  404da9:	daa    
  404daa:	add    al,0xff
  404dac:	add    al,0x75
  404dae:	stos   DWORD PTR es:[edi],eax
  404daf:	test   eax,0xe896915d
  404db4:	ins    BYTE PTR es:[edi],dx
  404db5:	xchg   edi,eax
  404db6:	xchg   esi,eax
  404db7:	jmp    ecx
  404db9:	add    DWORD PTR [eax],edx
  404dbb:	or     BYTE PTR [ecx+0xf],bl
  404dbe:	mov    al,0xff
  404dc0:	data16 adc al,0x4
  404dc3:	add    al,0x31
  404dc5:	ins    DWORD PTR es:[edi],dx
  404dc6:	stos   DWORD PTR es:[edi],eax
  404dc7:	jmp    0xe1be4dcc
  404dcc:	xchg   ebp,eax
  404dcd:	mov    DWORD PTR [eax+ecx*8+0x5446ff96],esi
  404dd4:	xchg   esi,eax
  404dd5:	add    esi,DWORD PTR [ecx]
  404dd7:	ins    DWORD PTR es:[edi],dx
  404dd8:	xchg   esi,eax
  404dd9:	mov    ch,0xd5
  404ddb:	inc    ecx
  404ddc:	xchg   esi,eax
  404ddd:	call   FWORD PTR [ecx+0x26fff36d]
  404de3:	push   esp
  404de4:	add    eax,DWORD PTR [ecx+esi*1]
  404de7:	imul   ebp,DWORD PTR [ebx+0x36bc852],0x50
  404dee:	push   cs
  404def:	loope  0x404e27
  404df1:	inc    DWORD PTR [esi]
  404df3:	adc    edx,DWORD PTR [esi+0x21232975]
  404df9:	aam    0xf6
  404dfb:	sub    BYTE PTR [edx],0xff
  404dfe:	xor    ch,BYTE PTR [ebx+0x3]
  404e01:	call   FWORD PTR [edi+ecx*4+0x14deff96]
  404e08:	push   ecx
  404e09:	add    eax,DWORD PTR [ecx+0x14]
  404e0c:	jmp    0xe9587f3c
  404e11:	add    ebx,ecx
  404e13:	sub    eax,DWORD PTR [eax-0x3a1bcefc]
  404e19:	dec    edi
  404e1a:	push   ebp
  404e1b:	cmp    DWORD PTR [esi-0x1ef8516b],0xae6868ab
  404e25:	xchg   ebp,eax
  404e26:	mov    DWORD PTR [edi-0x5c],edx
  404e29:	xchg   ebp,eax
  404e2a:	xchg   esi,eax
  404e2b:	in     al,0x9d
  404e2d:	sldt   WORD PTR [eax]
  404e30:	cmp    DWORD PTR [esp+ebx*4-0x4f],ebp
  404e34:	xchg   BYTE PTR [ecx-0x7e80cc7f],al
  404e3a:	xchg   BYTE PTR [edi-0x6a822354],al
  404e40:	outs   dx,BYTE PTR ds:[esi]
  404e41:	in     al,0x0
  404e43:	or     edx,DWORD PTR [esi]
  404e45:	shr    eax,cl
  404e47:	stos   DWORD PTR es:[edi],eax
  404e48:	les    edi,FWORD PTR [eax+0x66]
  404e4b:	xchg   ebp,eax
  404e4c:	test   al,0x97
  404e4e:	mov    ch,0x94
  404e50:	dec    esi
  404e51:	sub    DWORD PTR [edx+0x57],0x954e80dd
  404e58:	xor    DWORD PTR [eax],ecx
  404e5a:	lods   al,BYTE PTR ds:[esi]
  404e5b:	xor    BYTE PTR [esp+ebx*8+0x3d],0x95
  404e60:	sub    BYTE PTR cs:[ebx-0x6e694c29],bh
  404e67:	xchg   esp,eax
  404e68:	push   ds
  404e69:	sub    ebp,0x1ddbdc94
  404e6f:	xchg   ebp,eax
  404e70:	push   cs
  404e71:	sbb    DWORD PTR [ebx+ecx*1-0x6ac539e7],0x3c5494fe
  404e7c:	test   BYTE PTR [eax-0x7ea70002],0x0
  404e83:	div    BYTE PTR [edi]
  404e85:	or     al,0xe8
  404e87:	dec    eax
  404e88:	mov    al,ds:0x67e6ff80
  404e8d:	fdiv   st(6),st
  404e8f:	fisub  WORD PTR [ebp+0x3db580]
  404e95:	add    BYTE PTR [eax+eax*4+0xc2fceff],bl
  404e9c:	call   0xffc0d02c
  404ea1:	shl    BYTE PTR [esi],cl
  404ea3:	out    dx,al
  404ea4:	inc    DWORD PTR [edx+0x2d]
  404ea7:	xor    DWORD PTR [ebp-0x1f],0xa6d3c6ca
  404eae:	mov    ebp,0xa435b580
  404eb3:	cmp    bh,0x81
  404eb6:	fldcw  WORD PTR [ecx-0x1]
  404eb9:	mov    fs,WORD PTR [ebp-0x6279a33a]
  404ebf:	sub    al,0x89
  404ec2:	pushf  
  404ec3:	cmp    bh,0xc2
  404ec6:	test   eax,0xf3be54eb
  404ecb:	adc    ebp,eax
  404ecd:	ror    edx,1
  404ecf:	adc    eax,DWORD PTR [eax]
  404ed1:	jo     0x404ea2
  404ed3:	das    
  404ed4:	call   DWORD PTR [esi-0x63]
  404ed7:	xchg   esp,eax
  404ed8:	mov    ebp,0xff80a5fd
  404edd:	jmp    0xa8a87108
  404ee2:	adc    eax,0x7735ffd5
  404ee7:	xor    bh,bh
  404ee9:	lds    ebp,FWORD PTR cs:[ebp+ecx*1+0x51]
  404eee:	xor    dl,BYTE PTR [ebx+ecx*1]
  404ef1:	sub    DWORD PTR [esi],edi
  404ef3:	or     cl,BYTE PTR [ebp-0x811d84]
  404ef9:	push   cs
  404efa:	add    BYTE PTR [eax],al
  404efc:	inc    eax
  404efd:	jg     0x404ecf
  404eff:	add    bl,cl
  404f01:	or     al,0xdb
  404f03:	jne    0x404ee1
  404f05:	xchg   esi,eax
  404f06:	test   DWORD PTR [eax],esi
  404f08:	fbld   TBYTE PTR [ebx+0x663050ff]
  404f0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f0f:	add    al,cl
  404f11:	and    DWORD PTR [ecx*4-0x197ab],esp
  404f18:	fisttp WORD PTR [eax-0x1]
  404f1b:	jne    0x404eed
  404f1d:	fwait
  404f1e:	inc    ebp
  404f1f:	shr    edi,cl
  404f21:	mov    ds:0xa3ec75ff,eax
  404f26:	jne    0x404f30
  404f28:	jo     0x404ebb
  404f2a:	sar    edi,cl
  404f2c:	iret   
  404f2d:	inc    ebx
  404f2e:	pop    ebx
  404f2f:	leave  
  404f30:	retf   0xc
  404f33:	push   ebp
  404f34:	add    esi,DWORD PTR [ecx+eax*4-0x644f3c]
  404f3b:	(bad)  
  404f3c:	(bad)  
  404f3e:	sti    
  404f3f:	push   eax
  404f40:	scas   eax,DWORD PTR es:[edi]
  404f41:	sbb    eax,0x46a5ff0c
  404f46:	sub    DWORD PTR [ecx+0x58],eax
  404f49:	fwait
  404f4a:	mov    edx,0xb1348a8
  404f4f:	rcr    BYTE PTR [edi-0x74],0xe7
  404f53:	add    BYTE PTR [eax+0x13],bl
  404f56:	mov    DWORD PTR [ebp-0x20],0x48000017
  404f5d:	dec    edx
  404f5e:	inc    ebp
  404f5f:	hlt    
  404f60:	add    BYTE PTR [eax],al
  404f62:	out    dx,eax
  404f63:	or     al,BYTE PTR [eax]
  404f65:	add    BYTE PTR [edx],al
  404f67:	adc    ebp,DWORD PTR [edx+0x0]
  404f6a:	lea    ecx,[ebp-0x5cb00814]
  404f70:	push   eax
  404f71:	push   0x8
  404f73:	xchg   esp,eax
  404f74:	inc    ebp
  404f75:	hlt    
  404f76:	enter  0x8593,0xf4
  404f7a:	xor    DWORD PTR [esi],ebx
  404f7c:	xchg   ebx,eax
  404f7d:	jmp    DWORD PTR [ecx+0xe]
  404f80:	sbb    eax,edi
  404f82:	idiv   bh
  404f84:	mov    gs,eax
  404f86:	enter  0x3e4,0x0
  404f8a:	cmp    ch,BYTE PTR ds:0xd7c80518
  404f90:	add    eax,DWORD PTR [eax]
  404f92:	xor    edx,ebp
  404f94:	dec    edi
  404f95:	in     al,dx
  404f96:	(bad)  
  404f97:	pop    ebp
  404f98:	xchg   edx,eax
  404f99:	add    DWORD PTR ds:0xcdbd8677,edi
  404f9f:	gs xchg edx,eax
  404fa1:	jmp    FWORD PTR [esi]
  404fa3:	inc    ecx
  404fa4:	or     edi,edi
  404fa6:	hlt    
  404fa7:	push   esp
  404fa8:	sahf   
  404fa9:	mov    dh,0x19
  404fab:	rol    DWORD PTR gs:[eax+0x31],cl
  404faf:	loopne 0x404f38
  404fb1:	hlt    
  404fb2:	sahf   
  404fb3:	mov    ch,0x92
  404fb5:	push   eax
  404fb6:	cdq    
  404fb7:	lock pop edx
  404fb9:	add    BYTE PTR [ecx],dh
  404fbb:	jb     0x404f80
  404fbd:	je     0x404fbf
  404fbf:	loopne 0x404f48
  404fc1:	call   0x50d2e544
  404fc6:	add    BYTE PTR [eax],al
  404fc8:	mov    esp,0x66f796f7
  404fcd:	add    eax,0x60e4ff33
  404fd2:	xchg   edx,eax
  404fd3:	xor    eax,0x452402
  404fd8:	pop    ecx
  404fd9:	in     al,0xaa
  404fdb:	inc    DWORD PTR [esi+0x71]
  404fde:	ret    
  404fdf:	je     0x404fc1
  404fe1:	repz xchg eax,esi
  404fe4:	ds aad 0x91
  404fe7:	push   0xbea26b30
  404fec:	es sar ebx,0xe7
  404ff0:	jae    0x40500b
  404ff2:	xchg   edx,eax
  404ff3:	push   DWORD PTR [edx+0x69f6414]
  404ff9:	jle    0x405019
  404ffb:	add    al,0x7c
  404ffd:	adc    BYTE PTR [ebx-0x1ef801fd],al
  405003:	fwait
  405004:	inc    esi
  405005:	bound  eax,QWORD PTR [esi]
  405007:	xchg   edx,eax
  405008:	fimul  DWORD PTR [edx]
  40500a:	xchg   ebx,eax
  40500b:	add    al,0xe6
  40500d:	pop    es
  40500e:	loope  0x404fab
  405010:	adc    ah,BYTE PTR [edx-0x12]
  405013:	xchg   ecx,eax
  405014:	(bad)  
  405015:	(bad)  
  405016:	rcr    DWORD PTR [ecx+0x57de7dce],1
  40501c:	rol    DWORD PTR [ebp+0x7be91d6],0xe1
  405023:	fwait
  405024:	ins    BYTE PTR es:[edi],dx
  405025:	(bad)  
  405026:	(bad)  
  405027:	xchg   ecx,eax
  405028:	scas   al,BYTE PTR es:[edi]
  405029:	(bad)  
  40502a:	mov    ecx,0xa6000099
  40502f:	jge    0x404ff2
  405031:	or     eax,0x91ae7d84
  405036:	in     al,dx
  405037:	jnp    0x404fc9
  405039:	fmul   QWORD PTR [edi-0x36e6183]
  40503f:	jg     0x404fc2
  405041:	(bad)  
  405042:	(bad)  
  405043:	adc    al,0xe9
  405045:	mov    edx,0x36e90c73
  40504a:	mov    edx,0x4dc86870
  40504f:	test   DWORD PTR [esi-0x6f],esi
  405052:	lods   al,BYTE PTR ds:[esi]
  405053:	xlat   BYTE PTR ds:[ebx]
  405054:	ins    BYTE PTR es:[edi],dx
  405055:	xor    al,0x56
  405057:	pop    es
  405058:	cmc    
  405059:	nop
  40505a:	add    al,0xe1
  40505c:	cmovae esi,DWORD PTR [ecx]
  40505f:	ins    BYTE PTR es:[edi],dx
  405060:	test   DWORD PTR [ecx+0x31],ebp
  405063:	adc    al,0xe2
  405065:	ret    
  405066:	es xchg edi,eax
  405068:	call   0x2947:0x26143102
  40506f:	adc    al,0x0
  405071:	jmp    0xa50764a8
  405076:	mov    esi,0x32e9077c
  40507b:	jmp    0x82ff:0xea3292ff
  405082:	xor    cl,BYTE PTR [edi-0x70c2eabb]
  405088:	test   ebp,edi
  40508a:	leave  
  40508b:	jl     0x40508c
  40508d:	cdq    
  40508e:	rol    DWORD PTR [esi],0xf8
  405091:	test   BYTE PTR [eax],0x0
  405094:	inc    edi
  405095:	sub    al,0x6f
  405098:	dec    ecx
  405099:	adc    al,0x0
  40509b:	repnz repnz pop es
  40509e:	add    eax,0x13c8d0
  4050a3:	jmp    0x2868a8c2
  4050a8:	sub    eax,0xcaf5757d
  4050ad:	mov    dl,0xd8
  4050af:	mov    esi,0x998ae3c1
  4050b4:	pop    ds
  4050b5:	xchg   edi,eax
  4050b6:	hlt    
  4050b7:	mov    dh,0xc1
  4050b9:	jl     0x40510b
  4050bb:	cmp    ebp,DWORD PTR [ebp-0x5e61275e]
  4050c1:	mov    al,BYTE PTR [ebp-0x836667]
  4050c7:	or     ecx,0x4c86ff67
  4050cd:	adc    al,0x68
  4050cf:	call   0x76402456
  4050d4:	pop    es
  4050d5:	test   bh,dh
  4050d7:	outs   dx,BYTE PTR ds:[esi]
  4050d8:	sar    DWORD PTR [ebp+esi*1-0x46],0x6b
  4050dd:	sar    edi,cl
  4050df:	push   eax
  4050e0:	cdq    
  4050e1:	call   DWORD PTR fs:[esi-0x45]
  4050e5:	xchg   esi,eax
  4050e6:	in     al,0x56
  4050e8:	mov    eax,ds:0x18006a7c
  4050ed:	and    BYTE PTR [edx],cl
  4050ef:	xor    cl,bl
  4050f1:	pop    ss
  4050f2:	push   DWORD PTR [ebp-0x63a8]
  4050f8:	add    BYTE PTR [eax],al
  4050fa:	inc    edi
  4050fb:	bound  edx,QWORD PTR [edx+0x29]
  4050fe:	fst    DWORD PTR [edi]
  405100:	call   0xffe490ce
  405105:	mov    DWORD PTR [ebp+0x27fff79b],ecx
  40510b:	sbb    DWORD PTR [eax],eax
  40510d:	push   0x40680b
  405112:	out    0xe1,eax
  405114:	out    dx,eax
  405115:	mul    edi
  405117:	mov    edi,edi
  405119:	xor    eax,0x405ebb
  40511e:	loopne 0x4050ff
  405120:	(bad)  
  405121:	jmp    edi
  405123:	stc    
  405124:	test   al,ch
  405126:	fisttp WORD PTR [ebx-0x535a7c01]
  40512c:	idiv   edi
  40512e:	ja     0x405140
  405130:	je     0x40517b
  405132:	sbb    esp,ebp
  405134:	jmp    0x40512d
  405136:	out    0x8b,eax
  405138:	add    BYTE PTR [eax+ecx*2-0x69],dh
  40513c:	mov    ebp,0xff8bafe8
  405141:	add    BYTE PTR [ebx+eiz*2],bl
  405144:	add    BYTE PTR [bx+si-0x4166],cl
  405149:	call   FWORD PTR ds:0xc8eee778
  40514f:	mov    edi,edi
  405151:	call   FWORD PTR ds:0xe7fff7b4
  405157:	mov    dh,BYTE PTR [ebp+0x8]
  40515a:	mov    al,0xd6
  40515c:	sar    bh,1
  40515e:	add    BYTE PTR [eax],al
  405160:	xlat   BYTE PTR ds:[ebx]
  405161:	mov    dh,BYTE PTR [ebp-0x752018]
  405167:	push   DWORD PTR [ecx]
  405169:	pop    eax
  40516a:	sti    
  40516b:	out    0xfd,eax
  40516d:	cmp    ecx,DWORD PTR [edi-0x5807d101]
  405173:	mul    DWORD PTR [esi]
  405175:	cmp    cl,BYTE PTR [edi-0x1a2ad68b]
  40517b:	rcl    BYTE PTR [esi],1
  40517d:	sub    cl,BYTE PTR [edi-0x70e5ea4b]
  405183:	call   FWORD PTR [ecx]
  405185:	pop    ebp
  405186:	mov    bh,0xff
  405188:	(bad)  
  405189:	and    DWORD PTR [ecx-0x14],ebx
  40518c:	dec    BYTE PTR [ecx]
  40518e:	(bad)
  405192:	(bad)  
  405193:	jmp    esi
  405195:	aas    
  405196:	pushf  
  405197:	neg    esi
  405199:	sbb    DWORD PTR [ebx-0x719602e6],0x965c84ff
  4051a3:	inc    esi
  4051a5:	pop    ecx
  4051a6:	sbb    BYTE PTR [eax],cl
  4051a8:	leave  
  4051a9:	xchg   DWORD PTR [ebp+0x5849b6ff],ecx
  4051af:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4051b1:	push   ecx
  4051b2:	mov    gs,eax
  4051b4:	xor    BYTE PTR [ecx+0x279eff8e],ah
  4051ba:	mov    ecx,gs
  4051bc:	aad    0xaa
  4051be:	mov    ?,edi
  4051c0:	mov    ss,WORD PTR [edi]
  4051c2:	nop
  4051c3:	call   0xd33a51c8
  4051c8:	add    al,BYTE PTR [eax]
  4051ca:	push   0xddfffbae
  4051cf:	cmc    
  4051d0:	sahf   
  4051d1:	xor    DWORD PTR [ebp-0x70],0x19
  4051d5:	add    bl,bl
  4051d7:	imul   ecx,DWORD PTR [esi-0xd6ad68b],0xffffffd0
  4051de:	push   esi
  4051df:	jmp    0x138d975f
  4051e4:	rcl    DWORD PTR [esi+edx*1],1
  4051e7:	aad    0xe8
  4051e9:	mov    es,esp
  4051eb:	or     eax,DWORD PTR [ecx+0x27]
  4051ee:	aaa    
  4051ef:	jp     0x40523f
  4051f1:	sbb    eax,ecx
  4051f3:	sub    DWORD PTR [eax-0xeffd9fd],ebp
  4051f9:	fwait
  4051fa:	xchg   BYTE PTR [edx+0x36],bh
  4051fd:	mov    cs,WORD PTR [ecx+0x3144fec4]
  405203:	jns    0x4051a1
  405205:	sti    
  405206:	push   cs
  405207:	cmp    DWORD PTR [esi+ecx*4],ebx
  40520a:	(bad)  
  40520b:	in     al,dx
  40520c:	xor    dh,bl
  40520e:	jno    0x405224
  405210:	push   cs
  405211:	sbb    BYTE PTR [ecx],bh
  405213:	ins    BYTE PTR es:[edi],dx
  405214:	(bad)  
  405215:	nop
  405216:	out    0x79,al
  405218:	(bad)  
  405219:	pop    ss
  40521a:	fnstsw WORD PTR [ecx+0x7c]
  40521d:	sti    
  40521e:	into   
  40521f:	and    DWORD PTR [eax],ebx
  405221:	mov    cs,esi
  405223:	dec    ebx
  405224:	stos   DWORD PTR es:[edi],eax
  405225:	or     BYTE PTR [ecx],dh
  405227:	fbstp  TBYTE PTR [ecx-0x60]
  40522a:	add    BYTE PTR [eax],al
  40522c:	dec    ecx
  40522d:	adc    al,0xe9
  40522f:	pushf  
  405230:	ja     0x4052ab
  405232:	push   esp
  405233:	add    BYTE PTR [esi+0x159bf0ff],ch
  405239:	jg     0x4051f9
  40523b:	lea    ebp,[eax+0x56]
  40523e:	loope  0x405243
  405240:	cld    
  405241:	mov    WORD PTR [ebp-0x16f7f37f],?
  405247:	cld    
  405248:	mov    dl,0x36
  40524a:	call   0x1cb98352
  40524f:	add    BYTE PTR [ecx+0x6e8daede],cl
  405255:	or     eax,0xec4117a9
  40525a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40525b:	fdivr  st(1),st
  40525d:	adc    eax,DWORD PTR [eax]
  40525f:	jbe    0x40529f
  405261:	or     al,ch
  405263:	and    al,BYTE PTR [ecx+edi*2+0x7ee70ff]
  40526a:	push   0xffffffe9
  40526c:	sbb    dh,BYTE PTR [edi]
  40526e:	xor    BYTE PTR [eax+0x1947ec32],ch
  405274:	jb     0x40528a
  405276:	(bad)  
  405277:	cld    
  405278:	popa   
  405279:	sub    eax,DWORD PTR [ecx-0x17]
  40527c:	mov    edx,0xa436d5e1
  405281:	or     al,0xc0
  405283:	mov    ch,0x1c
  405285:	leave  
  405286:	dec    edi
  405287:	es push ds
  405289:	or     al,ch
  40528b:	cs (bad) 
  40528d:	js     0x40528e
  40528f:	mov    ecx,0x79420000
  405294:	jne    0x405277
  405296:	retf   0xffa2
  405299:	push   es
  40529a:	mov    ah,0x6b
  40529c:	and    DWORD PTR [edx],ebx
  40529e:	lods   al,BYTE PTR ds:[esi]
  40529f:	js     0x405289
  4052a1:	aad    0xa1
  4052a3:	js     0x4052a4
  4052a5:	xor    DWORD PTR [edx],0xffffffec
  4052a8:	cmp    al,0x19
  4052aa:	jb     0x4052c0
  4052ac:	push   0xffd3e531
  4052b1:	inc    eax
  4052b2:	xor    edx,DWORD PTR [eax+eax*1]
  4052b5:	imul   ecx,edx,0xb5c6d619
  4052bb:	or     al,0xc0
  4052bd:	xor    eax,0xb64fc88f
  4052c2:	aas    
  4052c3:	or     al,ch
  4052c5:	push   esi
  4052c6:	les    edi,FWORD PTR [eax-0x1]
  4052c9:	cmp    DWORD PTR ds:0x9af17579,edi
  4052cf:	(bad)  
  4052d1:	xchg   esi,eax
  4052d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4052d3:	imul   ebp,ecx,0xffffffbb
  4052d6:	mov    ebp,0xb400e878
  4052db:	ret    0xffff
  4052de:	inc    edx
  4052df:	adc    BYTE PTR [eax+0x3d],ch
  4052e2:	cwde   
  4052e3:	aad    0xff
  4052e5:	xor    esp,DWORD PTR [bx+si+0x40]
  4052e9:	add    bh,cl
  4052eb:	popa   
  4052ec:	push   edx
  4052ed:	sub    DWORD PTR [ecx-0xa1a17ec],ecx
  4052f3:	xchg   edi,edi
  4052f5:	or     eax,DWORD PTR [eax]
  4052f7:	add    BYTE PTR [eax+0x1f],bl
  4052fa:	push   ds
  4052fb:	push   eax
  4052fc:	enter  0x7588,0xc
  405300:	sub    BYTE PTR [ecx],0xd6
  405303:	call   FWORD PTR [edi+0x43]
  405306:	push   eax
  405307:	inc    ebp
  405309:	jnp    0x4052f2
  40530b:	and    BYTE PTR [edi-0x78],cl
  40530e:	(bad)  
  40530f:	call   0x40186c
  405314:	xor    ah,bl
  405316:	sar    edi,1
  405318:	aas    
  405319:	sbb    eax,0x63ed6800
  40531e:	inc    eax
  40531f:	add    al,al
  405321:	sbb    al,0x30
  405323:	inc    ecx
  405324:	enter  0x21b,0x0
  405328:	fcom   DWORD PTR [ebx-0x747a5218]
  40532e:	dec    DWORD PTR [ebx]
  405330:	mov    BYTE PTR [esi+ebx*1],ah
  405333:	push   eax
  405334:	clc    
  405335:	mov    dh,BYTE PTR [ebp+0xc]
  405338:	jo     0x4053ac
  40533a:	aad    0xff
  40533c:	outs   dx,DWORD PTR ds:[esi]
  40533d:	inc    eax
  40533e:	push   eax
  40533f:	jmp    DWORD PTR [ebp+0x78]
  405342:	out    0xe8,eax
  405344:	fimul  WORD PTR [ebx-0x41bf1701]
  40534a:	(bad)  
  40534b:	jmp    DWORD PTR [eax-0x60002de1]
  405351:	sbb    BYTE PTR ds:0x42c3130,bl
  405357:	jmp    esp
  405359:	pop    eax
  40535a:	fwait
  40535b:	add    eax,0x8e7f0000
  405360:	mov    edx,DWORD PTR [eax+0x1]
  405363:	not    BYTE PTR [eax]
  405365:	or     BYTE PTR [ecx-0x5a],cl
  405368:	mov    bh,bh
  40536a:	dec    esi
  40536b:	xchg   ebp,eax
  40536c:	xor    edx,edx
  40536e:	inc    esi
  40536f:	out    dx,al
  405370:	mov    dh,BYTE PTR [ebp+0x2d]
  405373:	in     eax,0x3a
  405375:	shl    BYTE PTR [esi],cl
  405377:	fidivr WORD PTR [edx+eax*8-0x74cf92c7]
  40537e:	adc    eax,0x8bf4bfea
  405383:	ins    DWORD PTR es:[edi],dx
  405384:	sbb    eax,0xfbb81602
  405389:	out    0x80,eax
  40538b:	push   ss
  40538c:	mov    edi,edi
  40538e:	mov    eax,0x346887a7
  405393:	ins    BYTE PTR es:[edi],dx
  405394:	add    eax,DWORD PTR [eax]
  405396:	or     DWORD PTR [edx-0xc11004b],ebp
  40539c:	inc    eax
  40539d:	clc    
  40539e:	pop    ecx
  40539f:	imul   eax,DWORD PTR [eax+eax*1],0xf8107631
  4053a6:	leave  
  4053a7:	xor    al,0x67
  4053a9:	add    BYTE PTR [ecx],dh
  4053ab:	jb     0x405370
  4053ad:	je     0x4053cc
  4053af:	xor    BYTE PTR [eax],al
  4053b1:	add    DWORD PTR [ecx],esi
  4053b3:	ins    DWORD PTR es:[edi],dx
  4053b4:	adc    cl,BYTE PTR ds:0xff8bd7b6
  4053ba:	and    al,0x75
  4053bc:	fwait
  4053bd:	mov    BYTE PTR [edi+0xeb8a4d],ah
  4053c3:	add    BYTE PTR [ecx],ch
  4053c5:	mov    dh,0x10
  4053c7:	clc    
  4053c8:	mov    eax,eax
  4053ca:	mov    ah,0xff
  4053cc:	mov    ss,edx
  4053ce:	(bad)  
  4053d0:	in     eax,dx
  4053d1:	adc    edi,DWORD PTR [edi-0x621c8176]
  4053d7:	adc    BYTE PTR [ecx],ch
  4053d9:	ins    BYTE PTR es:[edi],dx
  4053da:	pop    es
  4053db:	mov    ch,BYTE PTR [esi+0x76]
  4053de:	add    ebp,esi
  4053e0:	dec    esi
  4053e1:	aas    
  4053e2:	lahf   
  4053e3:	mov    bl,BYTE PTR [esi+0xa]
  4053e6:	test   eax,0xbfec3d0f
  4053eb:	shl    ecx,cl
  4053ed:	adc    ebx,DWORD PTR [ecx]
  4053ef:	pushf  
  4053f0:	js     0x405452
  4053f2:	data16 mov ah,cl
  4053f5:	jbe    0x4053cb
  4053f7:	sti    
  4053f8:	dec    esi
  4053f9:	(bad)  
  4053fa:	push   esi
  4053fb:	mov    ch,BYTE PTR [esi]
  4053fd:	jmp    0x405408
  4053ff:	pushf  
  405400:	cmp    al,0x5e
  405402:	inc    esi
  405403:	mov    ch,BYTE PTR [edx]
  405405:	push   esp
  405406:	mov    ch,0xef
  405408:	mov    gs,WORD PTR [ebx]
  40540a:	stc    
  40540b:	inc    esp
  40540c:	xor    esp,esp
  40540e:	inc    eax
  40540f:	pop    ebp
  405410:	fdiv   QWORD PTR [ebp+0x26]
  405413:	xor    edi,esi
  405415:	push   eax
  405417:	fwait
  405418:	inc    ecx
  405419:	jbe    0x405431
  40541b:	mov    bl,BYTE PTR [ebx+0x18]
  40541e:	add    DWORD PTR [ecx-0x1f98a04],edx
  405424:	sahf   
  405425:	add    ch,dl
  405427:	sbb    eax,DWORD PTR [eax]
  405429:	add    BYTE PTR [eax],cl
  40542b:	inc    esp
  40542c:	test   al,0x3
  40542e:	popa   
  40542f:	ins    BYTE PTR es:[edi],dx
  405430:	bound  esi,QWORD PTR [eax-0x76c68a3a]
  405436:	inc    esp
  405437:	or     al,0xd1
  405439:	repz mov ah,0x75
  40543c:	(bad)  
  40543d:	push   ds
  40543e:	xor    esp,ebp
  405440:	sbb    dl,ah
  405442:	icebp  
  405443:	adc    edx,DWORD PTR [ecx+0x3c]
  405446:	popa   
  405447:	shr    eax,cl
  405449:	mov    BYTE PTR [ecx+eiz*8-0x1],bl
  40544d:	push   edx
  40544f:	adc    ebp,eax
  405451:	pop    ecx
  405452:	shl    DWORD PTR [ebp-0x1],0x39
  405456:	test   al,0xff
  405458:	pop    es
  405459:	xchg   ecx,eax
  40545a:	mov    ds:0x4f96ff77,al
  40545f:	adc    al,0x68
  405461:	int3   
  405462:	adc    ah,0xff
  405465:	adc    BYTE PTR ds:0xa9e94144,bl
  40546b:	aas    
  40546c:	push   ebx
  40546d:	shl    bl,0x13
  405470:	call   0xffb5eb6e
  405475:	bnd jb 0x405478
  405478:	push   ss
  405479:	jo     0x405471
  40547b:	jg     0x40547c
  40547d:	fdivr  QWORD PTR [esi-0x351e8a8c]
  405483:	ret    0x46fd
  405486:	test   al,0x74
  405488:	jne    0x4054bf
  40548a:	mov    ch,0x35
  40548c:	shl    DWORD PTR [esi],1
  40548e:	add    BYTE PTR [eax],al
  405490:	mov    eax,0xdcc0ffe9
  405495:	and    al,0x41
  405497:	jmp    0xa8703db6
  40549c:	xor    dh,BYTE PTR [ebp+0x35]
  40549f:	mov    edx,0xffd40b
  4054a4:	clc    
  4054a5:	pusha  
  4054a6:	inc    DWORD PTR [esi]
  4054a8:	and    eax,0xbaf17575
  4054ad:	mov    bl,0xfd
  4054af:	idiv   BYTE PTR [ecx-0x107f0017]
  4054b5:	and    al,0x41
  4054b7:	jmp    0x28703dd6
  4054bc:	sub    eax,0x8a3a3575
  4054c1:	sar    edi,cl
  4054c3:	rcr    BYTE PTR [ecx+0x7700ff60],0x77
  4054ca:	mov    edi,0x44f97e74
  4054cf:	hlt    
  4054d0:	mov    DWORD PTR ds:0x783dfff4,0x8bd560e7
  4054da:	(bad)  
  4054db:	call   FWORD PTR ds:0xa8ede8a4
  4054e1:	mov    edi,edi
  4054e3:	push   0x58
  4054e5:	sbb    BYTE PTR [edx],dh
  4054e7:	xor    BYTE PTR [ecx],cl
  4054e9:	adc    BYTE PTR [eax+0x48],ch
  4054ec:	cwde   
  4054ed:	sar    edi,1
  4054ef:	addr16 pop edx
  4054f1:	adc    BYTE PTR [eax],al
  4054f3:	add    BYTE PTR [eax],0x0
  4054f6:	mov    al,0x9b
  4054f8:	sar    edi,cl
  4054fa:	xlat   BYTE PTR ds:[ebx]
  4054fb:	inc    eax
  4054fc:	push   DWORD PTR [ebp+0x40]
  4054ff:	cwde   
  405500:	push   eax
  405501:	std    
  405502:	xchg   DWORD PTR [edx+ebp*2+0x2f5af000],ebx
  405509:	inc    ecx
  40550a:	or     BYTE PTR [eax],dl
  40550c:	dec    eax
  40550d:	xor    cl,cl
  40550f:	pop    ss
  405510:	push   0x80181802
  405515:	call   0x3ffd42
  40551a:	add    ebx,DWORD PTR [eax+0x74]
  40551d:	push   ss
  40551e:	xor    DWORD PTR [edx],0xa3cdfff4
  405524:	push   DWORD PTR [ebp-0x30]
  405527:	(bad)  
  405528:	adc    ebp,edi
  40552a:	aaa    
  40552b:	pushf  
  40552c:	push   DWORD PTR [ebp-0x24]
  40552f:	mov    ds,WORD PTR [esi+0x6a9bc7d0]
  405535:	add    BYTE PTR [eax-0x37bed0b7],dh
  40553b:	packssdw mm6,QWORD PTR [eax]
  40553e:	or     DWORD PTR [eax],ebx
  405540:	push   0x37d3102
  405545:	sbb    BYTE PTR [ecx-0x61004c63],0xd
  40554c:	xchg   DWORD PTR [ebp+0x29],esi
  40554f:	inc    ebp
  405550:	add    eax,0x1aaa8efd
  405555:	add    BYTE PTR [ecx],bl
  405557:	adc    bl,0x40
  40555a:	add    BYTE PTR [eax],al
  40555c:	xor    DWORD PTR ds:0x7cf0301b,eax
  405562:	sbb    eax,DWORD PTR [edx]
  405564:	xor    DWORD PTR [ebp-0x7d],edi
  405567:	call   0xffc8041c
  40556c:	sub    bh,BYTE PTR [ebp+0x38a81610]
  405572:	nop
  405573:	inc    esp
  405575:	lock xchg BYTE PTR [ebp+0x39],dh
  405579:	xchg   ebp,eax
  40557a:	ret    0x3efc
  40557d:	cli    
  40557e:	xchg   BYTE PTR [ebp+0x3d],dh
  405581:	lds    esi,FWORD PTR [esi]
  405583:	shr    BYTE PTR [esi],1
  405585:	retf   0x7586
  405588:	and    eax,0x90810e2
  40558d:	aas    
  40558e:	mov    ecx,0xc22416ff
  405593:	add    al,0x31
  405595:	nop
  405596:	jp     0x405584
  405598:	cdq    
  405599:	jge    0x40559e
  40559b:	out    dx,eax
  40559c:	mov    edi,0xf60c1139
  4055a1:	xchg   ebx,edi
  4055a3:	out    0x46,eax
  4055a5:	ja     0xfc7f4eaa
  4055ab:	inc    DWORD PTR [ebp-0x127e681a]
  4055b1:	sub    BYTE PTR [esi-0x7ebe3101],al
  4055b7:	mov    eax,0x8681c7
  4055bc:	xor    DWORD PTR [ecx+ebp*8],edx
  4055bf:	add    eax,DWORD PTR [eax]
  4055c1:	add    BYTE PTR [edx-0x11051328],ch
  4055c7:	out    0xeb,eax
  4055c9:	sub    DWORD PTR [ecx+0x14],0x54
  4055cd:	add    DWORD PTR [eax+0x3103e7cc],ecx
  4055d3:	jae    0x405609
  4055d5:	clc    
  4055d6:	xchg   esi,eax
  4055d7:	adc    DWORD PTR [ebx-0x56e1797a],0x5bfc2e10
  4055e1:	xlat   BYTE PTR ds:[ebx]
  4055e2:	icebp  
  4055e3:	adc    ebx,DWORD PTR [esi+0x627c3d10]
  4055e9:	mov    dl,0x66
  4055eb:	jb     0x40556f
  4055ed:	clc    
  4055ee:	(bad)  
  4055ef:	lods   eax,DWORD PTR ds:[esi]
  4055f0:	aad    0x44
  4055f2:	xor    DWORD PTR [ebx-0xc],esi
  4055f5:	not    DWORD PTR [esi-0x11]
  4055f8:	cdq    
  4055f9:	xchg   BYTE PTR [esi-0x64],al
  4055fc:	fs dec ebx
  4055fe:	aas    
  4055ff:	jb     0x405667
  405601:	sbb    esi,edi
  405603:	adc    al,0xe9
  405605:	add    edi,DWORD PTR [edi+edx*4+0x7226852b]
  40560c:	mov    ecx,0x4662259b
  405611:	xchg   BYTE PTR [edi+edx*4+0x720e852b],ah
  405618:	cdq    
  405619:	xchg   BYTE PTR [esp+ebp*4+0x7cfe862f],bh
  405620:	fldenv [ecx+esi*1+0x14]
  405624:	jo     0x4055a6
  405626:	add    BYTE PTR [eax],al
  405628:	lods   eax,DWORD PTR ds:[esi]
  405629:	jb     0x405641
  40562b:	xchg   BYTE PTR [ecx+0x21],dh
  40562e:	mov    dh,BYTE PTR gs:[ecx]
  405631:	adc    al,0xe9
  405633:	js     0x4055f1
  405635:	push   esi
  405636:	inc    DWORD PTR [ebp-0x14ff9632]
  40563c:	ret    0xff71
  40563f:	jmp    0x2bcd4d72
  405644:	fabs   
  405646:	addr16 cdq 
  405648:	mov    esp,edx
  40564a:	inc    eax
  40564c:	sahf   
  40564d:	mov    ah,0x0
  40564f:	jmp    0xecb607ed
  405654:	mov    ebx,0x32e900a3
  405659:	lahf   
  40565a:	xchg   ebp,eax
  40565b:	stos   DWORD PTR es:[edi],eax
  40565c:	scas   eax,DWORD PTR es:[edi]
  40565d:	jno    0x40565e
  40565f:	pop    esp
  405660:	repz aas 
  405662:	push   eax
  405663:	adc    ebx,esp
  405665:	aas    
  405666:	inc    ecx
  405667:	jmp    0xe9e0bb36
  40566c:	xor    bl,BYTE PTR ds:0x7c5e14c0
  405672:	xchg   esp,eax
  405673:	jmp    0xa5a86aaa
  405678:	ins    DWORD PTR es:[edi],dx
  405679:	aam    0xff
  40567b:	jne    0x4056b3
  40567d:	and    al,ch
  40567f:	jbe    0x405604
  405681:	jno    0x405682
  405683:	je     0x40564b
  405685:	push   ebp
  405686:	(bad)  
  405687:	pop    esi
  405688:	mov    ah,0x9e
  40568a:	push   edx
  40568b:	add    eax,0xc4630000
  405690:	out    0x12,eax
  405692:	loopne 0x405704
  405694:	call   FWORD PTR [ecx-0x66f01953]
  40569a:	mov    ch,0xe6
  40569c:	pop    es
  40569d:	inc    ecx
  40569e:	add    esi,DWORD PTR [edx-0x1]
  4056a1:	cs popf 
  4056a3:	sub    edi,ecx
  4056a5:	lods   al,BYTE PTR es:[esi]
  4056a7:	jl     0x40570c
  4056a9:	ins    BYTE PTR es:[edi],dx
  4056aa:	jae    0x4056ec
  4056ac:	mov    DWORD PTR [ecx+eax*4+0x72],ebp
  4056b0:	dec    DWORD PTR [esi]
  4056b2:	cmp    eax,0x890030a9
  4056b7:	adc    al,0xff
  4056b9:	mov    ch,0x4
  4056bb:	call   0xa0:0xdf30ffff
  4056c2:	enter  0xbf6b,0x74
  4056c6:	push   es
  4056c7:	adc    ah,al
  4056c9:	sub    BYTE PTR [ecx+0x18],bl
  4056cc:	push   DWORD PTR [ebp-0x74]
  4056cf:	mov    WORD PTR [ecx-0x68902e],gs
  4056d5:	mov    ch,0x14
  4056d7:	xchg   edi,eax
  4056d8:	(bad)  
  4056d9:	jmp    FWORD PTR [eax]
  4056db:	nop
  4056dc:	icebp  
  4056dd:	sar    BYTE PTR [edi+0xb505097],cl
  4056e3:	sbb    dl,BYTE PTR [eax]
  4056e5:	add    BYTE PTR [ecx+ebp*2],dl
  4056e8:	addr16 xchg esi,eax
  4056ea:	mov    ch,dl
  4056ec:	dec    DWORD PTR [edi-0x50]
  4056ef:	out    dx,eax
  4056f0:	mov    al,ds:0x48000000
  4056f5:	mov    eax,DWORD PTR ds:0x1449b8
  4056fb:	add    BYTE PTR [edx],dl
  4056fd:	imul   edi,DWORD PTR [edi-0xddae8c],0x75
  405704:	push   eax
  405705:	mov    WORD PTR [esi-0x17683002],ss
  40570b:	rcr    DWORD PTR [esi-0x68],1
  40570e:	dec    DWORD PTR [ebp-0x1aa6b]
  405714:	outs   dx,DWORD PTR ds:[esi]
  405715:	and    edi,edi
  405717:	mov    ch,0xac
  405719:	cdq    
  40571a:	(bad)  
  40571b:	jmp    DWORD PTR [eax+0x30]
  40571e:	mov    al,ds:0xbfef1800
  405723:	setne  BYTE PTR [ebx-0x2]
  405727:	dec    DWORD PTR [edi-0x68]
  40572a:	mov    ch,0xbc
  40572c:	dec    esi
  40572d:	cwde   
  40572e:	(bad)  
  40572f:	call   0xa39a65
  405734:	xor    DWORD PTR [esi],ebx
  405736:	dec    esi
  405737:	mov    eax,0xe88416d7
  40573c:	nop
  40573d:	aas    
  40573e:	test   bh,bh
  405740:	clc    
  405741:	cmp    esi,edi
  405743:	jmp    DWORD PTR [ebp-0xe]
  405746:	xchg   esi,eax
  405747:	sub    ebp,0x79
  40574a:	dec    ebx
  40574b:	inc    ebp
  40574c:	lods   eax,DWORD PTR ds:[esi]
  40574d:	jge    0x405752
  40574f:	add    BYTE PTR [ecx],dh
  405751:	inc    esi
  405752:	stc    
  405753:	or     ecx,DWORD PTR [ecx+0xff56a6]
  405759:	add    BYTE PTR [esi+0x2b744362],dl
  40575f:	in     al,0xc8
  405761:	sti    
  405762:	xchg   BYTE PTR [eax],dh
  405764:	adc    al,0xff
  405766:	add    al,0xc1
  405768:	ins    BYTE PTR es:[edi],dx
  405769:	adc    eax,0x5083b663
  40576e:	outs   dx,BYTE PTR ds:[esi]
  40576f:	or     BYTE PTR [eax-0x7c492b18],al
  405775:	jmp    FWORD PTR [esi+0x306a8038]
  40577b:	xchg   esi,eax
  40577c:	stc    
  40577d:	sti    
  40577e:	dec    esi
  40577f:	push   0xe6fde80b
  405784:	cmp    bh,0x3e
  405787:	push   0x26dce87f
  40578c:	cmp    edi,0xfffffff8
  40578f:	cmp    dl,BYTE PTR [eax]
  405791:	add    BYTE PTR [edx+esi*8+0x6f],bh
  405795:	xor    ebp,0x16ff81cc
  40579b:	inc    ebx
  40579c:	add    ebp,DWORD PTR [edx+0x32]
  40579f:	cs stc 
  4057a1:	pop    es
  4057a2:	sbb    DWORD PTR [ecx-0xc0100b2],esi
  4057a8:	enter  0x89fb,0x14
  4057ac:	in     eax,dx
  4057ad:	add    al,0x31
  4057af:	adc    al,0x6c
  4057b1:	mov    esi,ebx
  4057b3:	ins    DWORD PTR es:[edi],dx
  4057b4:	push   ss
  4057b5:	add    DWORD PTR [ecx+0x31a3357c],0x14
  4057bc:	repnz inc ebx
  4057be:	add    BYTE PTR [eax],al
  4057c0:	ds cwde 
  4057c2:	dec    edx
  4057c3:	add    al,0x31
  4057c5:	adc    al,0xb4
  4057c7:	pop    es
  4057c8:	xor    BYTE PTR [ecx+ebp*8],dl
  4057cb:	adc    ch,BYTE PTR [esi+0x3103e98b]
  4057d1:	cld    
  4057d2:	mov    ?,WORD PTR [ebx]
  4057d4:	lock adc esp,DWORD PTR [eax+ecx*4-0x5a]
  4057d9:	ins    DWORD PTR es:[edi],dx
  4057da:	into   
  4057db:	add    BYTE PTR [ecx],0x7c
  4057de:	mov    dl,BYTE PTR [esi+ecx*4+0x6e]
  4057e2:	jo     0x40576c
  4057e4:	sub    DWORD PTR [ebp-0x4a],0xb9a87e82
  4057eb:	xor    DWORD PTR [esi+0x6e],0x14300811
  4057f2:	jmp    0x97a70487
  4057f7:	sbb    BYTE PTR [esi-0x3d],0x0
  4057fb:	dec    edx
  4057fc:	or     ebp,edx
  4057fe:	call   0x2863cbee
  405803:	add    al,0xd9
  405805:	scas   eax,DWORD PTR es:[edi]
  405806:	mov    ecx,0x63763ec4
  40580b:	mov    ds:0x43f21431,al
  405810:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405811:	add    edx,ebx
  405813:	add    esi,DWORD PTR [edi+edx*4+0x6e1e815e]
  40581a:	mov    ecx,0x511c9c82
  40581f:	popf   
  405820:	or     al,0x6e
  405822:	add    BYTE PTR ds:[eax],0x0
  405826:	mov    esp,0xb3370064
  40582b:	ins    DWORD PTR es:[edi],dx
  40582c:	push   0x142de5
  405831:	je     0x4057ec
  405833:	gs (bad) 
  405835:	push   ds
  405836:	mov    bl,0xc4
  405838:	addr16 das 
  40583a:	or     dl,bl
  40583c:	inc    DWORD PTR [eax-0x16bedb95]
  405842:	fisubr DWORD PTR [ecx+0x7c32a830]
  405848:	dec    edi
  405849:	push   esi
  40584a:	xor    dl,BYTE PTR [ebx+ecx*1]
  40584d:	sub    DWORD PTR [esi-0x401695fc],edi
  405853:	xchg   edi,eax
  405854:	neg    edi
  405856:	mov    al,0x6d
  405858:	push   eax
  405859:	(bad)  
  40585a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40585b:	adc    eax,0x6d162ee8
  405860:	inc    esi
  405862:	(bad)  
  405863:	fs (bad) 
  405865:	mov    esi,0xa47d7cb0
  40586a:	mov    al,0x6d
  40586c:	push   0x2
  40586e:	add    eax,0xb0a6d157
  405873:	sbb    eax,eax
  405875:	adc    eax,0xd99cfc11
  40587a:	jae    0x4058e9
  40587c:	dec    edi
  40587d:	xor    DWORD PTR [edi+0x44],0xfb6586ff
  405884:	call   FWORD PTR [eax]
  405886:	mov    al,0xe7
  405888:	pop    es
  405889:	add    DWORD PTR [eax],0xff6f0700
  40588f:	outs   dx,BYTE PTR ds:[esi]
  405890:	(bad)
  405893:	data16 mov al,0xfb
  405896:	mov    ebx,DWORD PTR [ecx]
  405898:	repnz ins BYTE PTR es:[edi],dx
  40589a:	imul   esi,ebx,0x4107e6b1
  4058a0:	(bad)  
  4058a1:	ins    DWORD PTR es:[edi],dx
  4058a2:	inc    DWORD PTR [eax]
  4058a4:	ja     0x405826
  4058a6:	mov    esi,DWORD PTR [eax]
  4058a8:	fst    DWORD PTR [eax]
  4058aa:	push   0x23
  4058ac:	inc    edi
  4058ad:	gs pop es
  4058af:	call   0x3feb17
  4058b4:	rcr    BYTE PTR [eax+esi*1+0x1b7ed841],0xff
  4058bc:	mov    ebp,0x268ce818
  4058c1:	xchg   ebx,eax
  4058c2:	(bad)  
  4058c3:	dec    DWORD PTR [ebp-0x13]
  4058c6:	(bad)  
  4058c7:	jne    0x405889
  4058c9:	clc    
  4058ca:	fwait
  4058cb:	retf   0x93c7
  4058ce:	leave  
  4058cf:	ret    0x10cc
  4058d2:	push   ebp
  4058d3:	mov    eax,DWORD PTR [eax+edi*2+0x5277ffff]
  4058da:	push   DWORD PTR [ebp-0x6c]
  4058dd:	xchg   ebx,eax
  4058de:	jne    0x4058e8
  4058e0:	jo     0x4058c3
  4058e2:	in     eax,dx
  4058e3:	push   DWORD PTR [edi-0x27]
  4058e6:	ror    DWORD PTR [eax],0x98
  4058e9:	inc    ebp
  4058ea:	mov    ch,ah
  4058ec:	or     edx,ebp
  4058ee:	test   edi,0x944d0000
  4058f4:	add    BYTE PTR [eax],al
  4058f6:	pop    eax
  4058f7:	adc    BYTE PTR [ebp+0x6740c445],cl
  4058fd:	(bad)  
  4058fe:	js     0x405951
  405900:	(bad)  
  405901:	(bad)  
  405902:	cmp    eax,0x2b35ff04
  405907:	cmp    DWORD PTR [ecx+0x0],eax
  40590a:	mov    al,ds:0xc7ffceeb
  40590f:	pop    ds
  405910:	shl    BYTE PTR [esi+eiz*2-0x67],0x45
  405915:	clc    
  405916:	add    BYTE PTR [edi],dl
  405918:	add    bh,ch
  40591a:	(bad)  
  40591b:	xchg   esp,eax
  40591c:	jne    0x40591a
  40591e:	xor    edx,eax
  405920:	cmc    
  405921:	not    DWORD PTR [esi]
  405923:	inc    ecx
  405924:	or     ebp,eax
  405926:	imul   eax,ebx,0x7f
  405929:	inc    DWORD PTR [esi]
  40592b:	mov    eax,ds:0x31bce87b
  405930:	cmp    bh,0xe8
  405933:	aas    
  405934:	or     eax,DWORD PTR [eax]
  405936:	test   dh,ah
  405938:	outs   dx,BYTE PTR ds:[esi]
  405939:	sub    ebp,0xdeff80c1
  40593f:	cmp    al,BYTE PTR [esi-0x7fe52848]
  405945:	add    BYTE PTR [ecx],dh
  405947:	jge    0x40594c
  405949:	mov    ebp,DWORD PTR [ecx+edi*2+0xc]
  40594d:	rol    BYTE PTR [ebp+0x78],0x83
  405951:	cmp    BYTE PTR [ecx],dh
  405953:	loopne 0x40595a
  405955:	jmp    0x7c75595a
  40595a:	add    eax,DWORD PTR [eax]
  40595c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40595d:	rcl    BYTE PTR [ebx],0xff
  405960:	and    al,0x71
  405962:	imul   ebp,DWORD PTR [ecx],0xffffff81
  405965:	pop    edx
  405966:	jg     0x4059b8
  405968:	loope  0x4059bb
  40596a:	stc    
  40596b:	pop    es
  40596c:	cdq    
  40596d:	sar    DWORD PTR [esi-0x1],cl
  405970:	jle    0x4059c7
  405972:	sti    
  405973:	retf   
  405974:	jbe    0x405930
  405976:	in     al,dx
  405977:	mov    ah,0x1d
  405979:	cmp    al,0x4
  40597b:	(bad)  
  40597c:	fdivr  QWORD PTR [eax+0x6b]
  40597f:	or     eax,0x897f8281
  405984:	lods   al,BYTE PTR ds:[esi]
  405985:	lds    edi,FWORD PTR [ebp-0x1]
  405988:	dec    esi
  405989:	add    eax,0x7d31013e
  40598e:	nop
  40598f:	test   DWORD PTR [ebx-0x1d],esi
  405992:	jle    0x405993
  405994:	loope  0x40592a
  405996:	mov    esp,ecx
  405998:	cs adc al,0x66
  40599b:	xchg   ecx,eax
  40599c:	lods   al,BYTE PTR ds:[esi]
  40599d:	push   ebp
  40599e:	pop    edi
  40599f:	jg     0x4059bf
  4059a1:	les    edx,FWORD PTR [ebp-0x47]
  4059a4:	fldcw  WORD PTR [ecx+0x4e]
  4059a7:	jg     0x4059c2
  4059a9:	push   ebp
  4059aa:	fs add al,0x31
  4059ad:	popf   
  4059ae:	fs sar bh,0x6a
  4059b2:	les    esp,FWORD PTR ss:[edi]
  4059b5:	nop
  4059b6:	xchg   BYTE PTR [ecx+esi*1],al
  4059b9:	adc    al,0x74
  4059bb:	cdq    
  4059bc:	add    BYTE PTR [eax],al
  4059be:	repz imul ebx,DWORD PTR [esi],0xf915e67f
  4059c5:	add    esi,DWORD PTR [ecx]
  4059c7:	adc    al,0x95
  4059c9:	idiv   DWORD PTR [ebp-0x3981d480]
  4059cf:	push   0x6c
  4059d1:	ret    0xc40a
  4059d4:	xor    BYTE PTR [ebx+0x6be8d505],0xc9
  4059db:	mov    cl,ch
  4059dd:	add    edi,DWORD PTR [edx]
  4059df:	push   esp
  4059e0:	push   esp
  4059e1:	add    cl,BYTE PTR [edx+0x739863cd]
  4059e7:	imul   ecx,esi,0x14d5bc7e
  4059ed:	aam    0xe
  4059ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4059f0:	or     eax,0x37727ec5
  4059f5:	mov    eax,ds:0x43e21431
  4059fa:	in     al,0x15
  4059fc:	xchg   edx,eax
  4059fd:	ret    
  4059fe:	mov    ch,0x80
  405a00:	stos   DWORD PTR es:[edi],eax
  405a01:	jge    0x405a61
  405a03:	push   0x64
  405a05:	ror    DWORD PTR [edx],0x9d
  405a08:	fs mov bh,0x4f
  405a0b:	push   0xffffff86
  405a0d:	jmp    0x405a81
  405a0f:	cmp    ebp,DWORD PTR [eax]
  405a11:	add    al,0x3e
  405a13:	loopne 0x405a14
  405a15:	in     al,0xca
  405a17:	in     al,dx
  405a18:	into   
  405a19:	outs   dx,BYTE PTR ds:[esi]
  405a1a:	scas   eax,DWORD PTR es:[edi]
  405a1b:	imul   esi,DWORD PTR [ebp-0x965b63],0x8a0000b9
  405a25:	push   ebx
  405a26:	iret   
  405a27:	push   esi
  405a28:	xchg   edi,eax
  405a29:	imul   esi,DWORD PTR [ebp-0x7],0x36b871e2
  405a30:	xchg   DWORD PTR [ecx+0x50],ebp
  405a33:	cdq    
  405a34:	jg     0x405a15
  405a36:	pop    es
  405a37:	inc    ecx
  405a38:	int    0x6a
  405a3a:	jmp    FWORD PTR [esi]
  405a3c:	pop    edx
  405a3d:	mov    ds:0x976726cb,al
  405a42:	test   DWORD PTR [ebx],ebp
  405a44:	pop    esp
  405a45:	imul   edi,edi,0xbc9f57b9
  405a4b:	cmovg  ebp,DWORD PTR [ecx-0x18]
  405a4f:	aad    0x91
  405a51:	adc    al,0x0
  405a53:	fs jb  0x405a6f
  405a56:	test   DWORD PTR [ebp-0x110096c9],ecx
  405a5c:	out    0xa8,al
  405a5e:	(bad)  
  405a5f:	out    0x24,al
  405a61:	jl     0x405a82
  405a63:	jl     0x405a9a
  405a65:	adc    al,0xff
  405a67:	pushf  
  405a68:	aad    0x6a
  405a6a:	dec    esi
  405a6c:	sbb    eax,0x4c6cb92
  405a71:	pop    ebx
  405a72:	ret    0x32ed
  405a75:	mov    edi,0x50b0c58a
  405a7a:	cld    
  405a7b:	scas   al,BYTE PTR es:[edi]
  405a7c:	sbb    ax,0xaae8
  405a80:	hlt    
  405a81:	push   0x6d7670ff
  405a86:	or     ebp,DWORD PTR [ecx-0x6fdc0000]
  405a8c:	mov    ecx,gs
  405a8e:	xor    dl,BYTE PTR [eax+ebp*2]
  405a91:	add    BYTE PTR [ebx+eiz*1],bh
  405a94:	inc    ecx
  405a95:	add    BYTE PTR [edi-0x3c1704a0],bh
  405a9b:	fsin   
  405a9d:	dec    DWORD PTR [eax+0x78]
  405aa0:	pop    esp
  405aa1:	xor    bl,cl
  405aa3:	adc    al,0x50
  405aa5:	inc    DWORD PTR ds:0x7e94e81d
  405aab:	out    0xfe,eax
  405aad:	call   0x3f3682
  405ab2:	loopne 0x405ae9
  405ab4:	xor    al,BYTE PTR [ecx+0x8]
  405ab7:	call   0xceb15730
  405abc:	int    0xff
  405abe:	pop    ds
  405abf:	inc    eax
  405ac0:	addr16 pop ebp
  405ac2:	or     dl,BYTE PTR [esi-0x1]
  405ac5:	dec    edi
  405ac6:	aas    
  405ac7:	popa   
  405ac8:	pop    es
  405ac9:	call   0x3f4189
  405ace:	xor    BYTE PTR [edi],ch
  405ad0:	retf   
  405ad1:	jmp    FWORD PTR [edi]
  405ad3:	js     0x405b0e
  405ad5:	xor    cl,BYTE PTR [ecx-0x438a00ec]
  405adb:	cld    
  405adc:	mov    eax,0x4fe79fce
  405ae1:	push   0x4125ed
  405ae6:	pop    eax
  405ae7:	out    0x74,eax
  405ae9:	or     BYTE PTR [eax+0x42],dh
  405aec:	std    
  405aed:	inc    DWORD PTR [eax]
  405aef:	add    BYTE PTR [edi-0x4],bh
  405af2:	add    eax,0x67e76fcb
  405af7:	push   esp
  405af8:	jp     0x405b4f
  405afa:	(bad)  
  405afb:	(bad)  
  405afc:	xor    eax,0xce98e894
  405b01:	out    0xfe,eax
  405b03:	push   eax
  405b04:	inc    eax
  405b05:	dec    ecx
  405b06:	xor    DWORD PTR [ecx+0x48],eax
  405b09:	inc    esp
  405b0a:	(bad)  
  405b0b:	jne    0x405b3e
  405b0d:	jae    0x405b7a
  405b0f:	xor    DWORD PTR [edi-0x67],ecx
  405b12:	jl     0x405afc
  405b14:	dec    esp
  405b15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b16:	jl     0x405b17
  405b18:	ds pop edi
  405b1a:	jg     0x405b04
  405b1c:	push   esp
  405b1d:	mov    ah,0x7c
  405b1f:	(bad)  
  405b20:	clc    
  405b21:	mov    ebx,0xe27c000b
  405b26:	outs   dx,BYTE PTR ds:[esi]
  405b27:	xor    ebp,0xffffffc9
  405b2a:	shr    DWORD PTR [ecx+0x31],cl
  405b2d:	push   ebx
  405b2e:	pop    es
  405b2f:	inc    DWORD PTR [ebp+esi*2-0x31110195]
  405b36:	jnp    0x405ac1
  405b38:	je     0x405b63
  405b3a:	mov    BYTE PTR ds:0xffc31585,bh
  405b40:	outs   dx,BYTE PTR ds:[esi]
  405b41:	jbe    0x405b46
  405b43:	je     0x405b6f
  405b45:	test   DWORD PTR [ebp+0x30],ecx
  405b48:	jo     0x405bc7
  405b4a:	aam    0xe7
  405b4c:	push   0x3a0002e0
  405b51:	cmp    eax,0x1df7
  405b56:	pop    esi
  405b57:	add    eax,0x66bed3ef
  405b5c:	pop    es
  405b5d:	sar    BYTE PTR ds:0xc67d349,0xab
  405b64:	ret    0xf6ff
  405b67:	ins    DWORD PTR es:[edi],dx
  405b68:	icebp  
  405b69:	pop    es
  405b6a:	mov    DWORD PTR [esi+0x5596ff79],ebx
  405b70:	(bad)
  405b74:	js     0x405ba9
  405b76:	jno    0x405b0c
  405b78:	jnp    0x405b79
  405b7a:	jle    0x405b22
  405b7c:	jbe    0x405b2c
  405b7e:	cmp    DWORD PTR [esi-0x10],esi
  405b81:	(bad)  
  405b82:	fild   DWORD PTR [edx+0x7a]
  405b85:	jne    0x405bc0
  405b87:	adc    al,0x91
  405b89:	jne    0x405bea
  405b8b:	addr16 sahf 
  405b8d:	out    dx,al
  405b8e:	adc    esp,DWORD PTR [edi+0x1c]
  405b91:	or     al,0x59
  405b93:	outs   dx,DWORD PTR ds:[esi]
  405b94:	(bad)  
  405b95:	jnp    0x405bdd
  405b97:	cli    
  405b98:	in     al,0x7a
  405b9a:	les    ebx,FWORD PTR [ebx]
  405b9c:	xchg   ecx,eax
  405b9d:	pop    ecx
  405b9e:	aaa    
  405b9f:	addr16 jbe 0x405b90
  405ba2:	push   esp
  405ba3:	addr16 hlt 
  405ba5:	or     ebx,DWORD PTR [ecx]
  405ba7:	inc    ebx
  405ba8:	addr16 jnp 0x405bc9
  405bab:	cld    
  405bac:	dec    eax
  405bad:	xor    al,0x70
  405baf:	adc    al,0x56
  405bb1:	icebp  
  405bb2:	ss jl  0x405b59
  405bb5:	js     0x405bbd
  405bb7:	ror    DWORD PTR [bx+di],1
  405bba:	add    BYTE PTR [eax],al
  405bbc:	inc    eax
  405bbd:	aad    0xe8
  405bbf:	jp     0x405c3d
  405bc1:	sbb    al,0x41
  405bc3:	cmp    al,0xec
  405bc5:	data16 cs in al,dx
  405bc8:	jb     0x405bef
  405bca:	test   al,0x3
  405bcc:	fsubrp st(0),st
  405bce:	lock imul ecx,DWORD PTR [edx],0x69
  405bd2:	push   ss
  405bd3:	jnp    0x405c2e
  405bd5:	loop   0x405bae
  405bd7:	(bad)  
  405bd8:	(bad)  
  405bd9:	gs jl  0x405be7
  405bdc:	leave  
  405bdd:	add    eax,0xfbb67afc
  405be2:	inc    eax
  405be3:	xor    eax,0xf0ee13f0
  405be8:	cs jl  0x405be3
  405beb:	js     0x405b8b
  405bed:	push   cx
  405bef:	push   edx
  405bf0:	pusha  
  405bf1:	aad    0xe8
  405bf3:	jp     0x405bf9
  405bf5:	sbb    al,0xc1
  405bf7:	inc    DWORD PTR [ebp+0x47ac666]
  405bfd:	push   0x7c2ef0be
  405c02:	add    BYTE PTR [ebx],dh
  405c04:	repnz dec WORD PTR [esi]
  405c08:	hlt    
  405c09:	push   ecx
  405c0a:	add    al,0xe9
  405c0c:	sbb    DWORD PTR [ecx+0x1a596aec],0x67231d00
  405c16:	jne    0x405c11
  405c18:	retf   
  405c19:	loopne 0x405c26
  405c1b:	xchg   BYTE PTR [ecx+0xe],al
  405c1e:	call   0xc7405cd6
  405c23:	push   WORD PTR [esi+0x21]
  405c27:	sbb    ch,al
  405c29:	xchg   ecx,eax
  405c2a:	jne    0x405c91
  405c2c:	push   DWORD PTR [eax]
  405c2e:	je     0x405c48
  405c30:	add    BYTE PTR [edi+eiz*4-0x79d27c88],dh
  405c37:	cli    
  405c38:	dec    DWORD PTR [ebp+0x1]
  405c3b:	add    bh,bh
  405c3d:	mov    esp,0xed756522
  405c42:	mov    bh,BYTE PTR [esi]
  405c44:	int3   
  405c45:	imul   ebx,DWORD PTR ss:[ecx],0xffffffc0
  405c49:	mov    ch,0xfe
  405c4b:	pushf  
  405c4c:	inc    ebp
  405c4d:	and    eax,0xa83257ca
  405c52:	xor    ah,BYTE PTR [ebp+0x75]
  405c55:	adc    eax,0xeccdb5a
  405c5a:	dec    ebx
  405c5b:	cld    
  405c5c:	(bad)  
  405c5d:	call   0xfe9102ad
  405c62:	(bad)  
  405c63:	or     eax,0x652b4ce8
  405c68:	inc    DWORD PTR [ecx-0x16beddfb]
  405c6e:	sbb    edi,ebx
  405c70:	sti    
  405c71:	ror    DWORD PTR [ebx+0x57],1
  405c74:	call   esi
  405c76:	popf   
  405c77:	adc    al,0x0
  405c79:	mov    esi,0xfec4cb
  405c7e:	cmp    eax,0xb78ae818
  405c83:	jmp    0x405c83
  405c85:	push   0x1e7c0000
  405c8a:	inc    ecx
  405c8b:	add    BYTE PTR [edi+0x5be8fb75],dl
  405c91:	into   
  405c92:	(bad)  
  405c93:	inc    DWORD PTR [eax+0xe]
  405c96:	add    bh,ch
  405c98:	out    0x3f,al
  405c9a:	(bad)  
  405c9b:	jne    0x405ced
  405c9d:	stc    
  405c9e:	outs   dx,BYTE PTR ds:[esi]
  405c9f:	push   DWORD PTR [edi-0x4b8a0115]
  405ca5:	neg    DWORD PTR [ebp-0x37]
  405ca8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ca9:	jmp    0x405c73
  405cab:	ret    0x1108
  405cae:	push   ebp
  405caf:	mov    eax,DWORD PTR [eax+edi*2+0x10c932f0]
  405cb6:	push   DWORD PTR [ebp+0x14]
  405cb9:	stc    
  405cba:	call   0xff2bd48b
  405cbf:	jne    0x405c99
  405cc1:	inc    eax
  405cc2:	out    0x34,eax
  405cc4:	inc    ebp
  405cc5:	jmp    0x405cc5
  405cc7:	jmp    FWORD PTR [ebp-0x6200afec]
  405ccd:	sbb    al,ch
  405ccf:	ds pop ss
  405cd1:	jmp    0x405cd1
  405cd3:	push   0x411e35
  405cd8:	daa    
  405cd9:	jne    0x405ce6
  405cdb:	call   0x3f38ef
  405ce0:	aaa    
  405ce1:	jne    0x405cf2
  405ce3:	push   eax
  405ce4:	and    dh,bh
  405ce6:	int3   
  405ce7:	jmp    DWORD PTR [edi+0x1474eb]
  405ced:	add    al,cl
  405cef:	jmp    0x405d65
  405cf1:	or     BYTE PTR [eax+0x77fffefc],al
  405cf7:	fld    st(1)
  405cf9:	adc    BYTE PTR [ecx],dh
  405cfb:	jnp    0x405ccb
  405cfd:	mov    dl,BYTE PTR [ebp+0x7efc3ef9]
  405d03:	daa    
  405d04:	or     al,ch
  405d06:	loope  0x405cbf
  405d08:	js     0x405d09
  405d0a:	cmp    bh,BYTE PTR [ebx+0x2fb849ef]
  405d10:	js     0x405d7a
  405d12:	xor    DWORD PTR [ebx+0x68],edi
  405d15:	mov    esi,0x4135b4c9
  405d1a:	xor    DWORD PTR [esi-0x12],edi
  405d1d:	sti    
  405d1e:	inc    esi
  405d1f:	dec    DWORD PTR [ebx]
  405d21:	call   0xffb8ead0
  405d26:	leave  
  405d27:	jnp    0x405d2c
  405d29:	out    dx,eax
  405d2a:	out    dx,eax
  405d2b:	adc    eax,0x6d70325b
  405d30:	js     0x405da7
  405d32:	sbb    eax,0x907edfb
  405d37:	dec    esp
  405d38:	js     0x405d39
  405d3a:	push   cs
  405d3b:	push   esi
  405d3c:	add    eax,0xeb941600
  405d41:	jecxz  0x405d86
  405d43:	lods   al,BYTE PTR ds:[esi]
  405d44:	add    edi,edi
  405d46:	jl     0x405d69
  405d48:	js     0x405dbf
  405d4a:	cmp    ebp,edx
  405d4c:	loope  0x405d4c
  405d4e:	out    0x32,al
  405d50:	js     0x405dc7
  405d52:	add    BYTE PTR [eax],al
  405d54:	fld    QWORD PTR ds:0x2d6c8b4
  405d5a:	dec    edx
  405d5b:	ret    0x6d39
  405d5e:	into   
  405d5f:	mov    dl,ch
  405d61:	out    dx,al
  405d62:	ds cld 
  405d64:	dec    ebx
  405d65:	ins    DWORD PTR es:[edi],dx
  405d66:	in     eax,dx
  405d67:	add    al,0xb6
  405d69:	call   0x30c54578
  405d6e:	js     0x405d6f
  405d70:	mov    eax,0xbe6877b8
  405d75:	adc    al,0x1b
  405d77:	lds    edx,FWORD PTR [esi-0xfcdbc05]
  405d7d:	adc    edx,esi
  405d7f:	xor    edx,esp
  405d81:	sub    al,0x28
  405d83:	add    al,0x7e
  405d85:	jmp    0x6307c97a
  405d8a:	mov    esi,0xfba4d977
  405d8f:	les    esp,FWORD PTR [esi-0x5]
  405d92:	das    
  405d93:	xor    dh,al
  405d95:	adc    esp,DWORD PTR [esi+0x282d0231]
  405d9b:	add    al,0x4e
  405d9d:	jmp    0x62dfc982
  405da2:	mov    ?,WORD PTR [edi-0x37]
  405da5:	test   eax,0xfb36c4bb
  405daa:	add    esi,DWORD PTR [edx]
  405dac:	jo     0x405dc2
  405dae:	jbe    0x405de1
  405db0:	sub    BYTE PTR ds:0xe91e0428,0xf0
  405db7:	imul   eax,DWORD PTR [eax],0x0
  405dba:	xchg   edi,eax
  405dbb:	bound  ebx,QWORD PTR [esi+0x77]
  405dbe:	cdq    
  405dbf:	push   edi
  405dc0:	sbb    eax,ebp
  405dc2:	push   es
  405dc3:	sti    
  405dc4:	ret    
  405dc5:	xor    DWORD PTR [eax+0x14],esi
  405dc8:	inc    esi
  405dc9:	xor    DWORD PTR [edx+0x2d],esp
  405dcc:	test   al,0x3
  405dce:	out    dx,al
  405dcf:	call   0x628fc9b4
  405dd4:	cs ja  0x405e20
  405dd7:	sbb    ebx,0xffffffc4
  405dda:	(bad)  
  405ddb:	cli    
  405ddc:	jno    0x405e10
  405dde:	jo     0x405df4
  405de0:	push   ss
  405de1:	xor    DWORD PTR [edx+0x2d],esp
  405de4:	test   al,0x3
  405de6:	mov    esi,0x676bf0e8
  405deb:	(bad)  
  405dec:	(bad)  
  405ded:	jbe    0x405e08
  405def:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405df0:	add    BYTE PTR [ebx+0x6267626d],bh
  405df6:	arpl   bp,dx
  405df8:	jmp    ebp
  405dfa:	popa   
  405dfb:	(bad)  
  405dfc:	sub    BYTE PTR [eax],ch
  405dfe:	xor    eax,0x1ae17563
  405e03:	sub    bh,dh
  405e05:	into   
  405e06:	pop    es
  405e07:	in     al,dx
  405e08:	mov    ch,0xfb
  405e0a:	ins    DWORD PTR es:[edi],dx
  405e0b:	bound  esp,QWORD PTR [edi+0x72]
  405e0e:	and    ch,dl
  405e10:	push   DWORD PTR [ebp+0x2828c721]
  405e16:	xor    eax,0xcaf17563
  405e1b:	add    esi,edi
  405e1d:	sahf   
  405e1e:	add    BYTE PTR [eax],al
  405e20:	(bad)  
  405e21:	jmp    0x405de5
  405e23:	fld    TBYTE PTR [ebp+0x62]
  405e26:	bound  eax,QWORD PTR [bx+si]
  405e29:	aad    0xff
  405e2b:	test   DWORD PTR [ecx],eax
  405e2d:	(bad)  
  405e2e:	sub    BYTE PTR [eax],ch
  405e30:	xor    eax,0x9ae17561
  405e35:	sbb    bh,dh
  405e37:	outs   dx,BYTE PTR ds:[esi]
  405e38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e39:	in     al,dx
  405e3a:	sahf   
  405e3b:	sbb    ebp,esp
  405e3d:	popa   
  405e3e:	les    eax,FWORD PTR [bx+si-0x2d]
  405e42:	inc    eax
  405e44:	xor    BYTE PTR [eax+eax*1],dl
  405e47:	imul   eax,DWORD PTR [edi-0x70aef819],0xda3eff5f
  405e51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e52:	xor    ch,BYTE PTR [eax-0x48713ce]
  405e58:	cmc    
  405e59:	popa   
  405e5a:	addr16 jmp 0x405e8f
  405e5d:	adc    al,0x80
  405e5f:	push   ds
  405e60:	rcr    DWORD PTR [ecx],0xe8
  405e63:	xor    DWORD PTR [ecx+0x61],ecx
  405e66:	inc    DWORD PTR [ecx+0x41268c]
  405e6c:	enter  0x646d,0x32
  405e70:	fst    DWORD PTR ds:0x15980268
  405e76:	cmp    bh,0x25
  405e79:	or     eax,0xe78dc1e8
  405e7e:	(bad)  
  405e7f:	push   0x4126db
  405e84:	add    BYTE PTR [eax],al
  405e86:	lock inc eax
  405e88:	xor    DWORD PTR [ecx-0x78],eax
  405e8b:	ins    DWORD PTR es:[edi],dx
  405e8c:	add    DWORD PTR [eax],eax
  405e8e:	mov    BYTE PTR [ebp-0x129f8a01],dl
  405e94:	test   eax,0x67e79ffd
  405e99:	lahf   
  405e9a:	pop    edx
  405e9b:	push   esi
  405e9c:	jmp    DWORD PTR [edi-0x1d]
  405e9f:	and    eax,0x16200041
  405ea4:	add    BYTE PTR [eax],al
  405ea6:	fsub   st,st(6)
  405ea8:	je     0x405eb2
  405eaa:	mov    al,0x83
  405eac:	std    
  405ead:	jmp    FWORD PTR [edi+0x5932b070]
  405eb3:	sbb    BYTE PTR [eax-0x75],ch
  405eb6:	jmp    0x15:0xa67ff55
  405ebd:	or     BYTE PTR [edi-0x1317f88f],0xe9
  405ec4:	(bad)  
  405ec5:	push   eax
  405ec7:	scas   al,BYTE PTR es:[edi]
  405ec8:	xor    al,BYTE PTR [ecx+0x8]
  405ecb:	ins    DWORD PTR es:[edi],dx
  405ecc:	mov    dh,BYTE PTR [edx]
  405ece:	leave  
  405ecf:	adc    al,0x68
  405ed1:	add    bl,al
  405ed3:	adc    al,0x80
  405ed5:	jmp    DWORD PTR [ebp+0xd65e80c]
  405edb:	out    0xfe,eax
  405edd:	push   0x41260b
  405ee2:	mov    al,ds:0x3141328b
  405ee7:	imul   ebp,ebx,0x1
  405eea:	add    BYTE PTR [eax],al
  405eec:	xor    DWORD PTR [ebx-0x7d],ebp
  405eef:	(bad)  
  405ef0:	cmp    al,0x63
  405ef2:	imul   ecx,DWORD PTR [esi-0x54],0x61
  405ef6:	je     0x405f62
  405ef8:	dec    ebx
  405ef9:	push   0xffffffee
  405efb:	pop    es
  405efc:	mov    DWORD PTR [ebx+0x75],esi
  405eff:	call   DWORD PTR [esi+0x4ff20c4]
  405f05:	arpl   WORD PTR [ebx-0x1],bp
  405f08:	test   BYTE PTR [ecx+0x74],cl
  405f0b:	push   0x1d
  405f0d:	push   edx
  405f0e:	out    dx,al
  405f0f:	pop    es
  405f10:	mov    DWORD PTR [edi-0x5e91008a],ebx
  405f16:	out    dx,al
  405f17:	sti    
  405f18:	popw   ds
  405f1a:	or     al,0xe8
  405f1c:	out    0xb6,al
  405f1e:	je     0x405f1f
  405f20:	push   0xe5ffffac
  405f25:	in     eax,0x66
  405f27:	add    esp,0x76
  405f2a:	add    esi,DWORD PTR [edx+edx*8+0x12]
  405f2e:	adc    BYTE PTR [ebx],dh
  405f30:	lock push 0x74
  405f33:	jne    0x405f72
  405f35:	test   ebp,esi
  405f37:	leave  
  405f38:	es out 0xd2,eax
  405f3b:	xor    DWORD PTR [di+0x64],ebp
  405f3f:	mov    esi,0x7edf681
  405f44:	sbb    DWORD PTR [ebx+ebp*2+0x47d606ff],esi
  405f4b:	(bad)  
  405f4c:	dec    dh
  405f4e:	jmp    0x3ac:0x42000024
  405f55:	jmp    DWORD PTR [ecx+esi*2+0x6b]
  405f59:	pop    ebp
  405f5a:	sti    
  405f5b:	es je  0x405fae
  405f5e:	dec    ecx
  405f5f:	ins    BYTE PTR es:[edi],dx
  405f60:	add    ebp,edi
  405f62:	xchg   edi,eax
  405f63:	adc    al,0xb9
  405f65:	je     0x405fab
  405f67:	or     al,0x11
  405f69:	call   0x568b:0x6b165fd9
  405f70:	push   cs
  405f71:	je     0x405fbc
  405f73:	sbb    al,0xba
  405f75:	ret    0x5eae
  405f78:	je     0x405f81
  405f7a:	cdq    
  405f7b:	and    BYTE PTR [ebx],ah
  405f7d:	je     0x405f1d
  405f7f:	les    eax,FWORD PTR [eax-0x5890ceff]
  405f85:	aam    0x8f
  405f87:	jmp    0x6c49bb7c
  405f8c:	(bad)  
  405f8d:	jae    0x405f18
  405f8f:	lea    esp,[edi-0x54b2898d]
  405f95:	cld    
  405f96:	outs   dx,BYTE PTR ds:[esi]
  405f97:	enter  0x6071,0x66
  405f9b:	jmp    0x4aa8bb84
  405fa0:	scas   al,BYTE PTR es:[edi]
  405fa1:	jae    0x405fcd
  405fa3:	push   esp
  405fa4:	sbb    eax,0xda0cd90e
  405fa9:	les    eax,FWORD PTR [esi-0x31]
  405fac:	adc    dl,0x68
  405faf:	pop    edi
  405fb0:	mov    ss,esp
  405fb2:	out    0x5e,al
  405fb4:	cld    
  405fb5:	sti    
  405fb6:	add    BYTE PTR [eax],al
  405fb8:	push   ss
  405fb9:	lock jge 0x40602f
  405fbc:	es ins BYTE PTR es:[edi],dx
  405fbe:	adc    eax,0xa05f1e4a
  405fc3:	inc    esi
  405fc4:	sub    DWORD PTR [esp+edi*4],edx
  405fc7:	jle    0x405fe6
  405fc9:	xchg   ebx,eax
  405fca:	and    eax,0x56149b64
  405fcf:	stc    
  405fd0:	cs pop edi
  405fd2:	aam    0xff
  405fd4:	imul   DWORD PTR [eax]
  405fd6:	call   0xf9db:0x5114701c
  405fdd:	pop    esi
  405fde:	add    BYTE PTR [esi],dh
  405fe0:	pop    esp
  405fe1:	fpatan 
  405fe3:	ret    
  405fe4:	xor    bl,BYTE PTR [edi+0x75]
  405fe7:	std    
  405fe8:	inc    ebx
  405fe9:	jmp    0xc3487df9
  405fee:	sub    BYTE PTR [eax+0x20416c32],ch
  405ff4:	inc    edx
  405ff5:	pop    edi
  405ff6:	mov    DWORD PTR [esi+ebx*1-0x56020016],ebp
  405ffd:	push   es
  405ffe:	(bad)  
  405fff:	jl     0x405f9f
  406001:	pop    ebp
  406002:	xor    eax,0xffd5359a
  406007:	shr    BYTE PTR [edi],1
  406009:	dec    ebp
  40600a:	(bad)  
  40600b:	fiadd  WORD PTR ds:0x6964f7d9
  406011:	jbe    0x406063
  406013:	into   
  406014:	jns    0x406010
  406016:	(bad)  
  406017:	cmp    al,0x31
  406019:	pop    edi
  40601a:	xor    eax,0x4400001a
  40601f:	aad    0xff
  406021:	rol    BYTE PTR [edi+0x4d],0xff
  406025:	scas   al,BYTE PTR es:[edi]
  406026:	aad    0xd8
  406028:	out    dx,eax
  406029:	adc    esi,DWORD PTR ds:0xc3c9755f
  40602f:	call   0xc339f63f
  406034:	sub    BYTE PTR [eax],ch
  406036:	sub    eax,0xa3b1fd6c
  40603b:	pop    ebp
  40603c:	mov    DWORD PTR [ecx+edx*4],esp
  40603f:	pop    DWORD PTR [ebp-0x77]
  406042:	add    bl,BYTE PTR [edi+0x75]
  406045:	lds    esp,FWORD PTR [ebx+0x49660be7]
  40604b:	shr    DWORD PTR [eax],0xa8
  40604e:	xor    ch,BYTE PTR [ebp+eiz*8+0x21]
  406052:	sbb    DWORD PTR [ebp-0x77],0xffffffa4
  406056:	mov    ss,WORD PTR [ecx+0x1174007d]
  40605c:	je     0x4071de
  406062:	dec    ebx
  406063:	test   DWORD PTR fs:[eax],0x8a95f7
  40606a:	fcom   DWORD PTR [ecx]
  40606c:	cmp    DWORD PTR [ebp+0x1c],0x11
  406070:	je     0x4071be
  406076:	daa    
  406077:	pop    esp
  406078:	daa    
  406079:	jmp    FWORD PTR ds:0x5a2ae759
  40607f:	loop   0x40607f
  406081:	inc    DWORD PTR [eax]
  406083:	add    BYTE PTR ds:0x9075feed,bl
  406089:	mov    ecx,0xe397c280
  40608e:	(bad)  
  40608f:	jne    0x406021
  406091:	jecxz  0x406107
  406093:	or     BYTE PTR [eax+0x5a],dh
  406096:	sar    edi,0x67
  406099:	jecxz  0x40610f
  40609b:	hlt    
  40609c:	ja     0x406103
  40609e:	pop    es
  40609f:	call   0x3f36a7
  4060a4:	leave  
  4060a5:	ins    BYTE PTR es:[edi],dx
  4060a6:	daa    
  4060a7:	adc    ecx,DWORD PTR [eax-0xc]
  4060aa:	mov    ebp,0x74e44575
  4060af:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4060b1:	gs pop es
  4060b3:	call   0x3f36b7
  4060b8:	mov    bl,0x12
  4060ba:	push   DWORD PTR [ebp-0x40]
  4060bd:	loop   0x406133
  4060bf:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4060c1:	gs pop es
  4060c3:	call   0x3f37cb
  4060c8:	xchg   DWORD PTR [ebp-0x15],esp
  4060cb:	(bad)  
  4060cc:	in     eax,dx
  4060cd:	pop    eax
  4060ce:	out    0x3c,eax
  4060d0:	pop    edx
  4060d1:	jecxz  0x4060d1
  4060d3:	xor    DWORD PTR [ecx],0x48
  4060d6:	add    BYTE PTR [di+0x68],bh
  4060da:	test   BYTE PTR [ebp-0x2f],bh
  4060dd:	outs   dx,BYTE PTR ds:[esi]
  4060de:	test   BYTE PTR [esi],0xba
  4060e1:	mov    bh,0x67
  4060e3:	jmp    DWORD PTR [ecx]
  4060e5:	test   DWORD PTR es:[edi],0x2bc90000
  4060ec:	inc    ebx
  4060ed:	dec    esi
  4060ef:	add    esi,edi
  4060f1:	imul   esi,DWORD PTR [ecx],0xc907f6fe
  4060f7:	mov    edi,0xdb6ff42
  4060fc:	div    ebx
  4060fe:	cdq    
  4060ff:	dec    esi
  406100:	inc    esi
  406101:	jmp    DWORD PTR [esi-0x760409a3]
  406107:	inc    esi
  406108:	inc    esi
  406109:	call   DWORD PTR [esi-0x66080993]
  40610f:	pop    esi
  406110:	inc    esi
  406111:	inc    DWORD PTR [esi-0x761009c3]
  406117:	jbe    0x40615f
  406119:	push   DWORD PTR [esi+0x4d]
  40611c:	imul   bl
  40611e:	pop    ecx
  40611f:	outs   dx,BYTE PTR ds:[esi]
  406120:	inc    esi
  406121:	jmp    DWORD PTR [esi-0x63]
  406124:	mul    bl
  406126:	dec    ecx
  406127:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406128:	inc    edi
  406129:	call   DWORD PTR [esi-0x4d]
  40612c:	inc    ebp
  40612d:	and    al,0x31
  40612f:	and    BYTE PTR [ebp-0x14],bh
  406132:	mov    al,0xb6
  406134:	jae    0x40612d
  406136:	ds test ebx,ebx
  406139:	adc    dh,BYTE PTR [ecx]
  40613b:	fidiv  WORD PTR [eax-0x3d613198]
  406141:	dec    DWORD PTR [esi+0x314133c1]
  406147:	adc    eax,0x6d703381
  40614c:	fild   DWORD PTR [eax+eax*1-0x57ebbe00]
  406153:	add    ebx,DWORD PTR [ecx-0x13ce56c]
  406159:	repz bound esi,QWORD PTR [eax+esi*2]
  40615d:	adc    al,0x4e
  40615f:	idiv   BYTE PTR [edx]
  406161:	pop    ebx
  406162:	mov    esp,0x3eedcefb
  406167:	jo     0x406147
  406169:	in     al,dx
  40616a:	fld    DWORD PTR [ebx]
  40616c:	(bad)  
  40616d:	call   0xdbe8:0xd50263c1
  406174:	jmp    0x40619d
  406176:	test   al,0x3
  406178:	dec    ecx
  406179:	dec    ebx
  40617a:	fcmovb st,st(2)
  40617c:	mov    dh,0xf3
  40617e:	push   ebp
  40617f:	xor    al,0xf0
  406181:	adc    edx,DWORD PTR [ecx-0x172a9d64]
  406187:	(bad)  [ebx+0x27]
  40618a:	test   al,0x3
  40618c:	xchg   esi,eax
  40618d:	loope  0x40616b
  40618f:	jo     0x406195
  406191:	or     al,0xd1
  406193:	sub    eax,DWORD PTR [edi+0x22dcde5b]
  406199:	adc    al,0xc6
  40619b:	scas   al,BYTE PTR es:[edi]
  40619c:	or     esp,edx
  40619e:	adc    al,0xc5
  4061a0:	outs   dx,BYTE PTR ds:[esi]
  4061a1:	repz adc eax,0x5113f038
  4061a7:	push   cs
  4061a8:	and    eax,0x5adbe8d5
  4061ad:	daa    
  4061ae:	sub    BYTE PTR [ecx+ebx*8],al
  4061b1:	outs   dx,BYTE PTR ds:[esi]
  4061b2:	fcmovb st,st(4)
  4061b4:	add    BYTE PTR [eax],al
  4061b6:	inc    esi
  4061b7:	repz jmp 0x4061f1
  4061ba:	lock adc edx,DWORD PTR [esi+0x145b2af9]
  4061c1:	cld    
  4061c2:	push   ss
  4061c3:	or     DWORD PTR [edi+0x2489266f],eax
  4061c9:	jo     0x40614c
  4061cb:	pop    ebx
  4061cc:	add    ah,bh
  4061ce:	push   ss
  4061cf:	pop    edx
  4061d0:	xor    eax,0xffd52c1a
  4061d5:	push   eax
  4061d6:	ret    0x81
  4061d9:	jmp    0xd3b5fcd9
  4061de:	outs   dx,DWORD PTR ds:[esi]
  4061df:	shl    edi,1
  4061e1:	jmp    0x2e407618
  4061e6:	clc    
  4061e7:	jmp    si
  4061ea:	xor    dl,BYTE PTR [edx+ebp*2]
  4061ed:	jmp    0xe9a9bcea
  4061f2:	call   0x3eecee51
  4061f7:	les    ecx,FWORD PTR [esp+eiz*2+0x16ff6339]
  4061fe:	fstp   QWORD PTR [ecx+0x75]
  406201:	adc    DWORD PTR [esi],ebx
  406203:	loope  0x406200
  406205:	adc    DWORD PTR [edx+eax*4],esp
  406208:	add    cl,ch
  40620a:	fwait
  40620b:	call   0x2567:0xd3fbeb74
  406212:	sub    eax,0x89e5ffd5
  406217:	push   cs
  406218:	call   0xf74062ab
  40621d:	pop    edx
  40621e:	jmp    DWORD PTR [edx-0x1e]
  406221:	mov    BYTE PTR [ebp-0xa5182b],al
  406227:	sbb    DWORD PTR [ebx-0x30590b8e],eax
  40622d:	pop    edx
  40622e:	mov    DWORD PTR [edx+eiz*8+0x62],ebp
  406232:	jmp    FWORD PTR [esi-0x610f5f21]
  406238:	xlat   BYTE PTR ds:[ebx]
  406239:	pop    edx
  40623a:	call   DWORD PTR [edi*1-0x38680a8e]
  406241:	pop    edx
  406242:	call   DWORD PTR [edx+eiz*4+0x61]
  406246:	inc    DWORD PTR [eax]
  406248:	scas   eax,DWORD PTR es:[edi]
  406249:	mov    ebp,0xea9fc3e1
  40624e:	inc    BYTE PTR [ebp-0x60]
  406251:	mov    esi,0xea05ff94
  406256:	out    0x2f,eax
  406258:	xchg   BYTE PTR ds:0x5d4ac900,dl
  40625e:	call   DWORD PTR [ebx+edx*4-0x47]
  406262:	add    ah,0x7c
  406265:	cmp    edi,edi
  406267:	imul   edx,esi,0x800874ea
  40626d:	loop   0x40622e
  40626f:	call   FWORD PTR [edi]
  406271:	fadd   DWORD PTR [esp+edi*8-0x10]
  406275:	push   edx
  406276:	xor    al,BYTE PTR [ecx-0x28]
  406279:	jmp    0xfffe:0xa2200874
  406280:	add    BYTE PTR [eax],al
  406282:	pop    ds
  406283:	cmp    edi,edi
  406285:	les    esp,FWORD PTR ds:0x41
  40628a:	rcl    BYTE PTR [edx+0x32],0x41
  40628e:	mov    dl,ch
  406290:	xor    al,0x53
  406292:	jno    0x4062e4
  406294:	jmp    edi
  406296:	dec    eax
  406297:	iret   
  406298:	(bad)  
  406299:	inc    DWORD PTR [ebx+0x380f73d5]
  40629f:	inc    eax
  4062a0:	(bad)  
  4062a1:	jne    0x406233
  4062a3:	mov    ebp,0xe77ffc94
  4062a8:	out    0x85,eax
  4062aa:	fwait
  4062ab:	out    0xfe,eax
  4062ad:	push   0x48
  4062af:	cmp    eax,0x100928c5
  4062b4:	push   0xff564b5a
  4062b9:	(bad)  
  4062ba:	gs inc esp
  4062bc:	sub    BYTE PTR [ecx+0x48],al
  4062bf:	mov    ebp,0x8231c685
  4062c4:	ins    DWORD PTR es:[edi],dx
  4062c5:	or     esi,ecx
  4062c7:	(bad)  
  4062c8:	cld    
  4062c9:	dec    edi
  4062ca:	adc    DWORD PTR [edx+0x60907f7],0x9316ff70
  4062d4:	leave  
  4062d5:	ret    0xea0e
  4062d8:	fcos   
  4062da:	mov    ?,WORD PTR [edi]
  4062dc:	xor    BYTE PTR [ecx+0x31],al
  4062df:	inc    ebx
  4062e0:	les    esi,FWORD PTR [edx]
  4062e2:	jo     0x40634f
  4062e4:	fild   DWORD PTR [ecx]
  4062e6:	add    BYTE PTR [eax],al
  4062e8:	xor    DWORD PTR [ebx-0x7d],ebp
  4062eb:	call   0xffad8c74
  4062f0:	sub    ch,BYTE PTR [ebx]
  4062f2:	clc    
  4062f3:	push   cs
  4062f4:	cmp    DWORD PTR [ebx+0x6c],0xc1d33975
  4062fb:	sti    
  4062fc:	(bad)  
  4062fd:	xor    DWORD PTR [edx+esi*1-0xe],ebx
  406301:	stc    
  406302:	ins    BYTE PTR es:[edi],dx
  406303:	push   0x31
  406305:	xchg   ebx,eax
  406306:	inc    ebp
  406307:	sub    al,dh
  406309:	push   0xffffffdb
  40630b:	pop    ecx
  40630c:	bound  ebp,QWORD PTR [ebx+eax*1+0x36b3368]
  406313:	or     BYTE PTR [ecx-0x7100ba6a],0x75
  40631a:	inc    ebx
  40631b:	je     0x406353
  40631d:	sbb    edx,esp
  40631f:	inc    BYTE PTR [ebx+eiz*2]
  406322:	pop    ebx
  406323:	sbb    DWORD PTR [ebp+0x41],esi
  406326:	ins    BYTE PTR es:[edi],dx
  406327:	call   0xffad1164
  40632c:	(bad)  [esp+ebp*2+0x75]
  406330:	sub    DWORD PTR [ebx-0x17],eax
  406333:	sti    
  406334:	push   esi
  406335:	mov    eax,ds:0x1f4e22d9
  40633a:	cld    
  40633b:	out    0xc1,eax
  40633d:	adc    esp,DWORD PTR [ebp-0x312c194]
  406343:	ins    BYTE PTR es:[edi],dx
  406344:	mov    esp,0x2ae5810b
  406349:	pop    eax
  40634a:	mov    gs,WORD PTR [eax+eax*1+0x0]
  40634e:	pushf  
  40634f:	pop    eax
  406350:	xchg   dh,dh
  406352:	ss ins BYTE PTR es:[edi],dx
  406354:	pop    ds
  406355:	inc    esp
  406356:	push   ss
  406357:	pop    eax
  406358:	mov    al,ds:0x14143541
  40635d:	jns    0x406374
  40635f:	xchg   esp,eax
  406360:	sub    eax,0xd2bf676f
  406365:	add    ecx,DWORD PTR [ebx+0x36f6560f]
  40636b:	ins    BYTE PTR es:[edi],dx
  40636c:	jmp    0x709849b4
  406371:	(bad)  
  406372:	fimul  DWORD PTR [ebx-0x2af1200c]
  406378:	call   0x1246ff5
  40637d:	ret    
  40637e:	(bad)  
  40637f:	xlat   BYTE PTR ds:[ebx]
  406380:	in     eax,0x3
  406382:	inc    ebp
  406383:	jecxz  0x406315
  406385:	rol    BYTE PTR [edx],cl
  406387:	aad    0xe8
  406389:	aam    0x96
  40638b:	shl    DWORD PTR [ebx+0x3],1
  40638e:	xor    DWORD PTR [ebx],ecx
  406390:	sub    edi,esi
  406392:	aas    
  406393:	mov    esi,0x576adb10
  406398:	not    dl
  40639a:	push   ss
  40639b:	adc    al,0xe9
  40639d:	pop    esp
  40639e:	(bad)  
  40639f:	in     al,dx
  4063a0:	push   ebx
  4063a1:	xor    al,dh
  4063a3:	adc    edi,DWORD PTR [ecx]
  4063a5:	imul   edi,esp,0xb
  4063a8:	ror    esi,0x57
  4063ab:	push   edi
  4063ac:	into   
  4063ad:	pop    esp
  4063ae:	scas   eax,DWORD PTR es:[edi]
  4063af:	push   edx
  4063b0:	(bad)  
  4063b1:	imul   eax,DWORD PTR [eax],0x0
  4063b4:	leave  
  4063b5:	mov    dh,0xf4
  4063b7:	les    edx,FWORD PTR [esi-0x42]
  4063ba:	inc    eax
  4063bc:	and    al,BYTE PTR [ecx-0x68b81700]
  4063c2:	je     0x4063ca
  4063c4:	arpl   WORD PTR [edi+0x3a],bp
  4063c7:	lods   eax,DWORD PTR ds:[esi]
  4063c8:	retf   0x5056
  4063cb:	add    DWORD PTR ds:0x54fef14,esi
  4063d1:	call   0xc4758c09
  4063d6:	(bad)  
  4063d7:	hlt    
  4063d8:	sbb    ch,BYTE PTR [edi+0x2c]
  4063db:	mov    ds,WORD PTR [edx+0x6f11e857]
  4063e1:	push   edi
  4063e2:	call   DWORD PTR [edx+0x34]
  4063e5:	into   
  4063e6:	jg     0x406407
  4063e8:	sub    eax,0x56aff9e1
  4063ed:	and    eax,eax
  4063ef:	nop
  4063f0:	pop    edx
  4063f1:	push   edi
  4063f2:	inc    DWORD PTR [esi+0x67]
  4063f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4063f6:	cmp    dh,ah
  4063f8:	loope  0x406381
  4063fa:	(bad)  
  4063fb:	mov    esp,0xe1755756
  406400:	push   0xffffffa0
  406402:	mov    edi,0x5db74a26
  406407:	xor    BYTE PTR [edi+0x10],ch
  40640a:	add    BYTE PTR [edi+ebp*1+0x32e96868],bh
  406411:	addr16 mov esi,0x41201b91
  406417:	jmp    0xe14b641c
  40641c:	or     esi,esi
  40641e:	or     DWORD PTR [esi],0x571306e8
  406424:	call   DWORD PTR [ecx+0x34]
  406427:	adc    al,0xef
  406429:	lahf   
  40642a:	pop    edx
  40642b:	xor    BYTE PTR [eax+ebp*1],0x35
  40642f:	push   edi
  406430:	jne    0x40640f
  406432:	fneni(8087 only) 
  406434:	pop    es
  406435:	add    BYTE PTR [eax-0x68001a40],al
  40643b:	pop    ss
  40643c:	ret    0x5808
  40643f:	inc    ebx
  406440:	mov    ch,ah
  406442:	xchg   edi,eax
  406443:	arpl   WORD PTR [ebx],cx
  406445:	call   0x3f3655
  40644a:	inc    ebx
  40644b:	shl    BYTE PTR [ebx+0x1a],cl
  40644e:	xor    BYTE PTR [edi+0x33],ah
  406451:	inc    ecx
  406452:	sbb    BYTE PTR [edx-0x19],al
  406455:	fmul   st,st(5)
  406457:	jmp    0x874:0xe93850fe
  40645e:	mov    al,0x76
  406460:	(bad)  
  406461:	call   DWORD PTR [edi-0x683e2a47]
  406467:	jmp    0x8b55:0x1200c2c8
  40646e:	je     0x4063fe
  406470:	(bad)  
  406471:	cld    
  406472:	repnz adc DWORD PTR [edx+0x8],ebp
  406476:	ja     0x4064dc
  406478:	pop    es
  406479:	call   0x400fee
  40647e:	add    BYTE PTR [eax],al
  406480:	push   ecx
  406481:	push   esp
  406482:	sti    
  406483:	push   0xffffffd8
  406485:	cmp    DWORD PTR [ebx+0x35],ebp
  406488:	mov    DWORD PTR [ecx],edx
  40648a:	push   0xff50dc99
  40648f:	dec    BYTE PTR [ebp-0x67bed7c2]
  406495:	mov    ecx,0xea37c4bd
  40649a:	or     al,al
  40649c:	sbb    al,0x5
  40649e:	push   eax
  40649f:	push   0xbeef1199
  4064a4:	test   al,0xea
  4064a6:	je     0x4064b0
  4064a8:	pusha  
  4064a9:	ins    DWORD PTR es:[edi],dx
  4064aa:	loop   0x4064ab
  4064ac:	push   edi
  4064ad:	mov    eax,0x3e31c18d
  4064b2:	imul   ebp,DWORD PTR [edx+0x31],0xf034d7d3
  4064b9:	push   0xffffffdb
  4064bb:	mov    ebp,0xff042c1d
  4064c0:	add    al,0xfa
  4064c2:	sbb    al,BYTE PTR [ecx+0x31]
  4064c5:	push   ebx
  4064c6:	jns    0x40648c
  4064c8:	ds scas al,BYTE PTR es:[edi]
  4064ca:	std    
  4064cb:	mov    edi,0x67d35ebd
  4064d0:	xor    BYTE PTR [ebx+0x58],ch
  4064d3:	mov    esi,0x7ef8681
  4064d8:	or     DWORD PTR ds:0x8316ff65,ebx
  4064de:	leave  
  4064df:	ror    BYTE PTR [esi],0xde
  4064e2:	(bad)  
  4064e4:	add    BYTE PTR [eax],al
  4064e6:	mov    fs,WORD PTR [edi+0x2e]
  4064e9:	inc    ecx
  4064ea:	xor    DWORD PTR [ebx+0x6b],eax
  4064ed:	xor    al,0x70
  4064ef:	imul   ebp,DWORD PTR [eax+0x35],0xffffff82
  4064f3:	adc    al,0xc3
  4064f5:	dec    esi
  4064f7:	dec    edx
  4064f8:	aas    
  4064f9:	(bad)  
  4064fa:	fisub  WORD PTR [ecx+0x43]
  4064fd:	je     0x406525
  4064ff:	jnp    0x4064d4
  406501:	inc    BYTE PTR [ebx+esi*2+0x5b]
  406505:	or     al,dh
  406507:	and    eax,0x2c04e869
  40650c:	imul   edi,edi,0x7bdb6b4b
  406512:	lods   al,BYTE PTR fs:[esi]
  406514:	add    ebp,DWORD PTR [eax+0x51]
  406517:	inc    eax
  406518:	ret    0x9fff
  40651b:	xchg   edi,eax
  40651c:	aam    0x28
  40651e:	lock push 0x5b
  406521:	ss jne 0x406581
  406524:	push   0xf7de710b
  406529:	dec    edi
  40652a:	loope  0x40653f
  40652c:	out    0xee,al
  40652e:	cs ins BYTE PTR es:[edi],dx
  406530:	leave  
  406531:	imul   ebp,DWORD PTR [esi+0x54],0x5471fcc1
  406538:	into   
  406539:	fstp   QWORD PTR [esi-0x14]
  40653c:	imul   ebp,DWORD PTR [esi],0xfffffff0
  40653f:	adc    edx,DWORD PTR [ecx-0x39]
  406542:	add    eax,0xfc68e8d3
  406547:	sar    bh,0xc2
  40654a:	add    BYTE PTR [eax],al
  40654c:	ds ins BYTE PTR es:[edi],dx
  40654e:	cmc    
  40654f:	aas    
  406550:	ss push esp
  406552:	repnz inc ebx
  406554:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406555:	and    edi,DWORD PTR [ecx]
  406557:	aam    0x27
  406559:	retf   0x5be0
  40655c:	out    0x52,eax
  40655e:	xchg   BYTE PTR [eax+0x9],ch
  406561:	ss test eax,0xd4bf0e68
  406567:	push   0x4b811c7c
  40656c:	call   DWORD PTR [ebx+0x66]
  40656f:	fstp   QWORD PTR [eax]
  406571:	push   ebx
  406572:	aam    0xfb
  406574:	(bad)  
  406575:	bound  edx,QWORD PTR [edi+0x68]
  406578:	out    0xbe,al
  40657a:	or     DWORD PTR [ecx+0x64],ebp
  40657d:	sbb    al,0x51
  40657f:	aas    
  406580:	xlat   BYTE PTR ds:[ebx]
  406581:	push   ebx
  406582:	ds push 0xee365044
  406588:	cs cmp al,0xf7
  40658b:	test   eax,0x453053be
  406590:	sub    eax,0x9d7cb414
  406595:	push   ebx
  406596:	pushf  
  406597:	test   DWORD PTR [esi-0x6197dab4],0xe4ef291f
  4065a1:	mov    ebx,0x13f02e56
  4065a6:	add    BYTE PTR [ecx-0x113b5f16],bl
  4065ac:	push   ss
  4065ad:	in     al,0x4f
  4065af:	cmp    DWORD PTR [eax],eax
  4065b1:	add    BYTE PTR [ebp+0x53],dl
  4065b4:	dec    esi
  4065b6:	xchg   edi,eax
  4065b7:	mov    esp,0x536c1c90
  4065bc:	dec    edi
  4065bd:	into   
  4065be:	pusha  
  4065bf:	sbb    ebp,eax
  4065c1:	sbb    dl,al
  4065c3:	push   edx
  4065c4:	jmp    DWORD PTR [ecx]
  4065c6:	ins    DWORD PTR es:[edi],dx
  4065c7:	adc    al,0x0
  4065c9:	(bad)  
  4065ca:	(bad)  
  4065cb:	mov    esp,0x5375f49f
  4065d0:	dec    edi
  4065d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4065d2:	inc    eax
  4065d3:	sbb    ebp,eax
  4065d5:	ficom  WORD PTR [ecx+0x531ff53]
  4065db:	adc    eax,0xbbd77e00
  4065e0:	lods   eax,DWORD PTR ds:[esi]
  4065e1:	mov    esp,0x7e4f52ed
  4065e6:	add    BYTE PTR [ebx],bl
  4065e8:	call   0xff93f7af
  4065ed:	sub    esi,0x3466ff92
  4065f3:	push   esi
  4065f4:	or     cl,ch
  4065f6:	add    DWORD PTR [esi+0x50716aec],ebx
  4065fc:	push   0xffffffe9
  4065fe:	clc    
  4065ff:	sbb    edi,edi
  406601:	mov    esp,0x7c793ada
  406606:	push   esi
  406607:	push   ebx
  406608:	mov    DWORD PTR [esi+ecx*2-0x3fd1e642],ebp
  40660f:	sbb    ch,al
  406611:	imul   ecx,DWORD PTR [esi+0x53],0x93ff
  406618:	push   ebx
  406619:	push   ebx
  40661a:	jne    0x4065fd
  40661c:	or     cl,dl
  40661e:	dec    BYTE PTR [esi]
  406620:	push   ss
  406621:	mov    esi,0x452f001b
  406626:	pop    es
  406627:	call   0x3f1fe8
  40662c:	jg     0x406671
  40662e:	sti    
  40662f:	inc    DWORD PTR ds:0xcd93e74f
  406635:	mov    ecx,0x529ac9fe
  40663a:	call   DWORD PTR [ebx+edx*8-0x16]
  40663e:	imul   eax,DWORD PTR [eax],0x4134eef0
  406644:	dec    eax
  406645:	outs   dx,BYTE PTR ds:[esi]
  406646:	fdiv   DWORD PTR ds:0x35ff1819
  40664c:	sub    esi,DWORD PTR [ecx]
  40664e:	inc    ecx
  40664f:	add    BYTE PTR [eax+0x49],dh
  406652:	ret    0x8fff
  406655:	dec    ebp
  406656:	mov    edi,0xfe662574
  40665b:	jne    0x406685
  40665d:	mov    ebx,0xb9580c74
  406662:	je     0x40666c
  406664:	rol    BYTE PTR [ebx-0x1270001c],0xdd
  40666b:	mov    edi,0x69ba7f
  406670:	xor    ch,ch
  406672:	xor    al,0x41
  406674:	or     BYTE PTR [esi-0x28],ch
  406677:	xor    eax,0x2681599
  40667c:	add    BYTE PTR [eax],al
  40667e:	fcom   DWORD PTR ds:0xd368e880
  406684:	(bad)  
  406685:	jmp    ebx
  406687:	aad    0x73
  406689:	adc    eax,0x1074baa8
  40668e:	inc    DWORD PTR [ebx+0xb]
  406691:	push   eax
  406692:	cmove  eax,DWORD PTR [edi]
  406695:	call   0x3f57e5
  40669a:	inc    eax
  40669b:	stos   BYTE PTR es:[edi],al
  40669c:	mov    edi,0x662a31ff
  4066a1:	jne    0x4066e4
  4066a3:	and    dh,al
  4066a5:	or     ecx,DWORD PTR [ecx]
  4066a7:	or     dh,BYTE PTR [eax]
  4066a9:	inc    ecx
  4066aa:	xor    DWORD PTR [edx-0x11],edx
  4066ad:	pop    es
  4066ae:	cdq    
  4066af:	adc    DWORD PTR [edi-0x1],ebx
  4066b2:	jle    0x4066a8
  4066b4:	inc    eax
  4066b5:	or     al,0x31
  4066b7:	adc    BYTE PTR [ecx-0x14],bh
  4066ba:	mov    dl,0x77
  4066bc:	push   0xf9d5316a
  4066c1:	(bad)  
  4066c2:	in     al,0x32
  4066c4:	pop    ebx
  4066c5:	mov    esi,0x89655a95
  4066ca:	hlt    
  4066cb:	mov    ds,esp
  4066cd:	inc    DWORD PTR [esi+0x5a]
  4066d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4066d1:	push   0xffc2487b
  4066d6:	aaa    
  4066d7:	xor    ah,bh
  4066d9:	out    0x91,eax
  4066db:	mov    dl,0x65
  4066dd:	call   FWORD PTR [ecx+0xef033c]
  4066e3:	add    bh,bl
  4066e5:	adc    bh,BYTE PTR [edi]
  4066e7:	xor    eax,0x75643b70
  4066ec:	cmp    DWORD PTR [ebx-0x35f9014a],esp
  4066f2:	fs jne 0x4066f2
  4066f5:	shr    esi,0x7
  4066f8:	or     DWORD PTR ds:0x3eeffa8,ecx
  4066fe:	inc    edx
  4066ff:	add    al,0x31
  406701:	nop
  406702:	js     0x4066f0
  406704:	mov    al,0xf6
  406706:	dec    ebx
  406707:	not    esi
  406709:	fnstenv [esi+0x45]
  40670c:	int    0xaa
  40670e:	fs jne 0x406746
  406711:	or     ch,BYTE PTR [edi]
  406713:	push   ebx
  406714:	or     BYTE PTR [ebx+eax*1-0x18],bh
  406718:	pushf  
  406719:	adc    edi,DWORD PTR [eax+0x4]
  40671c:	xor    DWORD PTR ds:0x6badf529,ebx
  406722:	call   0xa499982a
  406727:	imul   esi,DWORD PTR [ecx],0x14
  40672a:	jmp    0xf516dd32
  40672f:	fs cs adc al,0xe9
  406733:	fnstcw WORD PTR [esi-0x46]
  406736:	call   0xe8fade14
  40673b:	jbe    0x406731
  40673d:	inc    edi
  40673e:	cmp    DWORD PTR [edi-0x54],esi
  406741:	inc    edi
  406742:	fisub  WORD PTR [esi+ebx*2-0x1d]
  406746:	int    0xee
  406748:	add    BYTE PTR [eax],al
  40674a:	pop    esi
  40674b:	push   eax
  40674c:	cmp    al,0x68
  40674e:	pop    ecx
  40674f:	mov    eax,0x1d310357
  406754:	test   eax,0x523b35ef
  406759:	add    dh,BYTE PTR [ecx]
  40675b:	adc    al,0x11
  40675d:	inc    eax
  40675e:	pop    ecx
  40675f:	aad    0xe8
  406761:	fs pushf 
  406763:	and    BYTE PTR [ecx-0x71b00c87],al
  406769:	shr    DWORD PTR [ebx+0x57e7464],cl
  40676f:	dec    eax
  406770:	jle    0x4067d6
  406772:	popa   
  406773:	loop   0x4066f5
  406775:	jmp    0x7aaeb76a
  40677a:	lods   al,BYTE PTR ds:[esi]
  40677b:	inc    esp
  40677c:	pop    esi
  40677d:	fs out dx,al
  40677f:	cmp    al,0x39
  406781:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406782:	out    0x4f,al
  406784:	ret    
  406785:	add    ecx,DWORD PTR [ecx-0x2a]
  406788:	push   ss
  406789:	ret    
  40678a:	(bad)  
  40678b:	dec    esi
  40678c:	jl     0x406801
  40678e:	(bad)  
  40678f:	dec    edi
  406790:	ds fs cld 
  406793:	loop   0x406794
  406795:	push   edx
  406797:	dec    edi
  406798:	out    0x19,eax
  40679a:	jae    0x4067eb
  40679c:	push   DWORD PTR [eax+0x2f]
  40679f:	cmp    bh,dh
  4067a1:	push   ds
  4067a2:	or     eax,0x6a80ffba
  4067a7:	or     DWORD PTR [ecx-0x17],eax
  4067aa:	or     eax,0xfef089
  4067af:	add    BYTE PTR [edx],dl
  4067b1:	dec    edi
  4067b2:	push   DWORD PTR [ecx+eiz*2-0x2516bf04]
  4067b9:	add    ecx,0x859d12ee
  4067bf:	aad    0xa
  4067c1:	dec    edi
  4067c2:	call   DWORD PTR [ebx+0x2d]
  4067c5:	mov    esp,0x4f741f4e
  4067ca:	(bad)  
  4067cb:	xchg   esp,eax
  4067cc:	std    
  4067cd:	inc    esi
  4067ce:	inc    esi
  4067d0:	ror    BYTE PTR [eax],cl
  4067d2:	push   ebx
  4067d3:	adc    BYTE PTR [edi+ecx*2-0x19],ch
  4067d7:	pop    ebp
  4067d8:	hlt    
  4067d9:	dec    esi
  4067da:	jmp    DWORD PTR [eax-0x58]
  4067dd:	cmp    al,0xf7
  4067df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4067e0:	xchg   edx,eax
  4067e1:	mov    edx,0x90c10ff
  4067e6:	inc    ecx
  4067e7:	jmp    0x9730f17f
  4067ec:	xchg   edx,eax
  4067ed:	dec    edi
  4067ee:	(bad)  
  4067ef:	mov    esp,0xe940fbc7
  4067f4:	call   0x859d:0x9276c0c6
  4067fb:	mov    DWORD PTR [edx+0x4f],ebx
  4067fe:	push   DWORD PTR [eax+edi*4+0x6b]
  406802:	neg    DWORD PTR [esi+0x52]
  406805:	in     al,0x67
  406807:	ret    0xd538
  40680a:	dec    DWORD PTR [ebp-0x48]
  40680d:	inc    ebx
  40680e:	test   DWORD PTR [eax],0x35feb377
  406814:	add    BYTE PTR [eax],al
  406816:	stos   DWORD PTR es:[edi],eax
  406817:	inc    DWORD PTR [eax+0x0]
  40681a:	jo     0x4067a3
  40681c:	sar    bh,0x7
  40681f:	pop    ds
  406820:	shl    BYTE PTR [ecx+esi*1-0x69],0xbd
  406825:	fdivr  DWORD PTR [edi]
  406827:	mov    bl,0xfe
  406829:	add    al,0xbd
  40682b:	inc    edx
  40682c:	(bad)  
  40682d:	xor    bh,dh
  40682f:	pushf  
  406830:	fdivr  st(7),st
  406832:	aaa    
  406833:	mov    bl,0x4f
  406835:	call   0x3fdcb2
  40683a:	xor    ecx,DWORD PTR [edx+ecx*1-0x40]
  40683e:	cld    
  40683f:	sbb    al,0x50
  406841:	call   0x3fdcb2
  406846:	(bad)  
  406847:	fdivr  st(7),st
  40684a:	xchg   DWORD PTR [ecx+0x12480014],esi
  406850:	cmp    DWORD PTR [ebp-0x11684],0x58
  406857:	fs add bp,0xffbe
  40685c:	idiv   bh
  40685e:	xchg   DWORD PTR [edx],edx
  406860:	je     0x4068be
  406862:	fwait
  406863:	je     0x40684d
  406865:	test   edi,0x5b73ffb2
  40686b:	inc    eax
  40686c:	(bad)  
  40686d:	call   DWORD PTR [edi+0x75ff73]
  406873:	mov    edx,0xb287ba6a
  406878:	(bad)  
  406879:	mov    ch,0x0
  40687b:	add    BYTE PTR [edx+ebp*8+0x6c87fffe],dh
  406882:	pop    es
  406883:	call   0x40181f
  406888:	xchg   DWORD PTR [eax+ebp*8+0x61e631f7],ebp
  40688f:	call   FWORD PTR [ebx+esi*1+0x6b]
  406893:	mov    cl,0x8b
  406895:	(bad)  
  406896:	popa   
  406897:	(bad)  
  406898:	jl     0x406871
  40689a:	pop    ecx
  40689b:	(bad)  
  40689c:	mov    esi,0xc907d806
  4068a1:	call   0xe097:0xf6aeff9d
  4068a8:	sahf   
  4068a9:	cs (bad) 
  4068ab:	jmp    DWORD PTR [ebx+esi*1]
  4068ae:	imul   edx,DWORD PTR [ebp-0x9de125],0xffffffc4
  4068b5:	neg    DWORD PTR [ecx-0x1]
  4068b8:	xchg   BYTE PTR [esi-0x29],cl
  4068bb:	pop    es
  4068bc:	mov    DWORD PTR [eax-0x63],esp
  4068bf:	push   DWORD PTR [esi+0x3e]
  4068c2:	xchg   edi,eax
  4068c3:	in     al,0x66
  4068c5:	ss popa 
  4068c7:	call   0xffa2198c
  4068cc:	pop    esi
  4068cd:	mov    al,0x70
  4068cf:	not    DWORD PTR [esi+0x5e]
  4068d2:	ins    BYTE PTR es:[edi],dx
  4068d3:	xchg   BYTE PTR [esi+edx*2+0x637cff61],cl
  4068da:	pop    ecx
  4068db:	(bad)  
  4068dc:	ds push ebx
  4068de:	fnstsw WORD PTR [eax+eax*1+0x617e3600]
  4068e5:	mov    ch,0x11
  4068e7:	scas   al,BYTE PTR es:[edi]
  4068e8:	popa   
  4068e9:	call   FWORD PTR [ecx]
  4068eb:	sub    ebx,DWORD PTR [edi-0x6859e101]
  4068f1:	lock push ds
  4068f3:	sahf   
  4068f4:	popa   
  4068f5:	call   0xffa1418e
  4068fa:	push   es
  4068fb:	clc    
  4068fc:	pop    ebx
  4068fd:	jmp    0xffa12e48
  406902:	test   BYTE PTR [edi+0x5f],0xe8
  406906:	sahf   
  406907:	adc    esi,DWORD PTR [esi+0x4]
  40690a:	xor    DWORD PTR [ebx+0x2b],ebx
  40690d:	or     al,0x31
  40690f:	out    0x61,eax
  406911:	jo     0x4068c5
  406913:	push   edi
  406914:	push   ecx
  406915:	out    dx,al
  406916:	into   
  406917:	mov    edx,0x1c3c60f1
  40691c:	push   ecx
  40691d:	fnstcw WORD PTR [eax+0x4c]
  406920:	mov    ebp,DWORD PTR ss:[eax+edx*2+0x5c]
  406925:	(bad)  
  406926:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406927:	jecxz  0x4068b9
  406929:	or     al,0x5f
  40692b:	shr    eax,cl
  40692d:	jmp    0x4068d6
  40692f:	push   es
  406930:	test   al,0x3
  406932:	xchg   esi,eax
  406933:	push   es
  406934:	mov    edx,0x1113f02a
  406939:	sbb    eax,0xcfe4c71
  40693e:	jno    0x406907
  406940:	fnsave [ebx+0x70e9130e]
  406946:	add    BYTE PTR [eax],al
  406948:	scas   eax,DWORD PTR es:[edi]
  406949:	dec    esp
  40694a:	pop    esp
  40694b:	pop    esp
  40694c:	add    DWORD PTR [ebp+0x54],ecx
  40694f:	or     al,0x49
  406951:	jno    0x40690a
  406953:	pusha  
  406954:	push   esi
  406955:	cmp    esp,ecx
  406957:	sahf   
  406958:	dec    esi
  406959:	dec    esp
  40695a:	je     0x406922
  40695c:	ds jecxz 0x4069af
  40695f:	inc    BYTE PTR [ebx+edx*8]
  406962:	call   0x2846a952
  406967:	add    al,0x2e
  406969:	add    bh,BYTE PTR [edx]
  40696b:	sub    esi,DWORD PTR [eax+0x14]
  40696e:	xchg   ecx,eax
  40696f:	or     cl,dh
  406971:	dec    ebx
  406972:	xchg   esi,eax
  406973:	or     al,0xf1
  406975:	shl    ch,0xb3
  406978:	xchg   esi,eax
  406979:	push   ss
  40697a:	jmp    0xf48c30ef
  40697f:	pop    ebx
  406980:	popa   
  406981:	dec    ebx
  406982:	add    ah,bh
  406984:	sub    bh,BYTE PTR [esi+ebp*2]
  406987:	(bad)  
  406988:	push   ecx
  406989:	dec    ebx
  40698a:	call   0xff8c2fcc
  40698f:	ror    DWORD PTR [edx+eax*1],1
  406992:	inc    ecx
  406993:	jmp    0x41482ae9
  406998:	jmp    0x518768e5
  40699d:	sar    ebx,0x3e
  4069a0:	out    0x13,eax
  4069a2:	call   0xff8bfe9a
  4069a7:	and    ah,dh
  4069a9:	(bad)  
  4069ab:	mov    esp,0x38b50000
  4069b0:	and    DWORD PTR ds:0x16ff435e,0xb9fbd1a7
  4069ba:	adc    ecx,eax
  4069bc:	or     eax,DWORD PTR [esi]
  4069be:	pop    ds
  4069bf:	out    0x28,eax
  4069c1:	test   al,0x32
  4069c3:	cmp    al,0xfd
  4069c5:	xor    dl,BYTE PTR [si]
  4069c8:	or     ebp,DWORD PTR [ecx]
  4069ca:	inc    ecx
  4069cb:	xchg   ecx,eax
  4069cc:	shr    eax,0x32
  4069cf:	adc    al,0xc7
  4069d1:	and    al,0xfd
  4069d3:	adc    eax,DWORD PTR [eax]
  4069d5:	jmp    0xd585bd0c
  4069da:	out    dx,al
  4069db:	adc    al,BYTE PTR [eax]
  4069dd:	jmp    0xe9a9b53a
  4069e2:	dec    eax
  4069e3:	dec    ebx
  4069e4:	imul   ebp,ecx,0x19f3d1a1
  4069ea:	rcl    BYTE PTR [eax+0x4b869ef4],0x50
  4069f1:	sahf   
  4069f2:	clc    
  4069f3:	inc    edx
  4069f4:	call   FWORD PTR [ecx+edx*4]
  4069f7:	cmp    al,0xcf
  4069f9:	pop    edi
  4069fa:	xor    eax,0xd8000b14
  4069ff:	imul   eax,DWORD PTR [ecx+ebp*8],0xffffff94
  406a03:	adc    DWORD PTR [eax],eax
  406a05:	add    BYTE PTR [eax],dh
  406a07:	fsub   QWORD PTR [edi]
  406a09:	inc    ecx
  406a0a:	fsubr  st,st(1)
  406a0c:	je     0x406a1a
  406a0e:	and    dh,0xbe
  406a11:	inc    DWORD PTR [eax]
  406a13:	add    BYTE PTR [edi-0x80],bh
  406a16:	mov    dl,al
  406a18:	dec    ebp
  406a19:	popf   
  406a1a:	hlt    
  406a1b:	idiv   DWORD PTR [edi-0x15]
  406a1e:	dec    edi
  406a1f:	push   edx
  406a20:	pusha  
  406a21:	mov    dh,0xbe
  406a23:	(bad)  
  406a24:	call   FWORD PTR [eax-0x15080f7b]
  406a2a:	(bad)  
  406a2b:	call   0x4014d0
  406a30:	ret    0x6816
  406a33:	xchg   DWORD PTR [esi-0xa0100b1],eax
  406a39:	fcomip st,st(6)
  406a3b:	(bad)  
  406a3c:	aas    
  406a3d:	jmp    0x406a73
  406a3f:	push   ebx
  406a40:	popa   
  406a41:	dec    edi
  406a42:	jmp    edi
  406a44:	jo     0x4069ef
  406a46:	(bad)  
  406a47:	call   DWORD PTR [ecx]
  406a49:	popf   
  406a4a:	in     al,0xf7
  406a4c:	pop    edi
  406a4d:	jmp    0x60406abb
  406a52:	xor    eax,0xb4e94841
  406a57:	lock ja 0x406a43
  406a5a:	(bad)  
  406a5b:	jmp    DWORD PTR ds:0x58412887
  406a61:	mov    esi,0xe97fbf19
  406a66:	mov    BYTE PTR [ebp-0x11e94],al
  406a6c:	jb     0x406a7e
  406a6e:	push   0xff510679
  406a73:	inc    BYTE PTR [ebp+0xfff6e5]
  406a79:	add    BYTE PTR [ecx],dh
  406a7b:	mov    ds:0x5462355e,al
  406a80:	(bad)  
  406a81:	dec    DWORD PTR [esi]
  406a83:	nop
  406a84:	popf   
  406a85:	(bad)  
  406a86:	inc    ah
  406a88:	xchg   eax,esp
  406a8a:	inc    dl
  406a8c:	pop    ebp
  406a8d:	push   0x31
  406a8f:	adc    ebx,esi
  406a91:	xor    eax,0xb55e3b70
  406a96:	loope  0x406a7a
  406a98:	pop    ebp
  406a99:	call   esi
  406a9b:	sub    BYTE PTR [ebx+0x6b3b7028],dh
  406aa1:	fiadd  WORD PTR [edi-0x4b76a22e]
  406aa7:	jecxz  0x406afe
  406aa9:	push   DWORD PTR [esi-0x3e97fcab]
  406aaf:	inc    ecx
  406ab0:	(bad)  
  406ab1:	jmp    DWORD PTR [edi-0x6108ad18]
  406ab7:	sub    bl,BYTE PTR [esi+0x35]
  406aba:	add    dl,BYTE PTR [esp+eax*8-0x1]
  406abe:	xchg   esi,eax
  406abf:	sti    
  406ac0:	pushf  
  406ac1:	inc    DWORD PTR [esi-0x7923783c]
  406ac7:	dec    edx
  406ac8:	pop    ebp
  406ac9:	xor    DWORD PTR [edi+edx*1+0x3b6eff56],0xffffffd7
  406ad1:	fs mov dl,0x70
  406ad4:	jo     0x406acd
  406ad6:	pop    esi
  406ad7:	push   0x4
  406ad9:	je     0x406ad0
  406adb:	mov    ebp,0xe89e
  406ae0:	inc    esi
  406ae1:	pop    edx
  406ae2:	pop    ebp
  406ae3:	add    BYTE PTR [ebp+0x3effec2d],bh
  406ae9:	pop    edx
  406aea:	sahf   
  406aeb:	(bad)  
  406aec:	mov    esp,0xe9036b32
  406af1:	jns    0x406b50
  406af3:	(bad)  
  406af4:	fcom   QWORD PTR [ebx]
  406af6:	xchg   ebp,eax
  406af7:	push   ebp
  406af8:	push   ds
  406af9:	dec    ecx
  406afa:	sahf   
  406afb:	xlat   BYTE PTR ds:[ebx]
  406afc:	cs cmp al,0x3e
  406aff:	pushf  
  406b00:	push   cs
  406b01:	dec    ecx
  406b02:	mov    ss,WORD PTR [edi+0x5d864119]
  406b08:	(bad)  
  406b09:	mov    esi,0x8c686bf0
  406b0e:	jbe    0x406b6d
  406b10:	out    dx,al
  406b11:	jle    0x406a98
  406b13:	push   ebp
  406b14:	out    0x48,al
  406b16:	data16 xlat BYTE PTR ds:[ebx]
  406b18:	ss cmp al,0x22
  406b1b:	pushf  
  406b1c:	(bad)  
  406b1d:	dec    eax
  406b1e:	push   esi
  406b1f:	xchg   edi,eax
  406b20:	rol    DWORD PTR [eax+0x4e],1
  406b23:	pop    ebp
  406b24:	(bad)  
  406b25:	mov    esi,0x8c0c6bf0
  406b2a:	ds pop ebp
  406b2c:	mov    dh,0x7e
  406b2e:	adc    eax,0x2e48ae55
  406b33:	xlat   BYTE PTR ds:[ebx]
  406b34:	cs cmp al,0x6
  406b37:	pushf  
  406b38:	sahf   
  406b39:	dec    eax
  406b3a:	push   ds
  406b3b:	xchg   edi,eax
  406b3c:	lea    eax,[eax+0x16]
  406b3f:	pop    ebp
  406b40:	cdq    
  406b41:	cli    
  406b42:	push   ecx
  406b43:	pop    ebp
  406b44:	add    BYTE PTR [eax],al
  406b46:	xchg   BYTE PTR [eax+0x3c],cl
  406b49:	jo     0x406ad1
  406b4b:	dec    eax
  406b4c:	(bad)  
  406b4d:	imul   edx,DWORD PTR [edi],0xffffff8d
  406b50:	neg    BYTE PTR [esi+ebp*2+0x7e]
  406b54:	add    DWORD PTR [ebp+0x66],edx
  406b57:	dec    eax
  406b58:	shl    eax,1
  406b5a:	fwait
  406b5b:	dec    eax
  406b5c:	ficomp WORD PTR [esp+ebx*4+0x33]
  406b60:	ficomp WORD PTR [esi+ecx*2+0x3b]
  406b64:	loope  0x406afe
  406b66:	inc    esi
  406b67:	dec    eax
  406b68:	(bad)  
  406b69:	xchg   esi,eax
  406b6a:	pop    ebp
  406b6b:	inc    eax
  406b6c:	mov    esi,0x46495c
  406b71:	jae    0x406b00
  406b73:	inc    edi
  406b74:	push   DWORD PTR [edx+eax*4+0x3f]
  406b78:	jmp    DWORD PTR [esi-0x6ef83e83]
  406b7e:	cmp    eax,0x6d96ff46
  406b83:	xor    eax,0xe8476596
  406b89:	lea    ebx,[eax-0x108100b9]
  406b8f:	aas    
  406b90:	jmp    0xff87fabc
  406b95:	outs   dx,BYTE PTR ds:[esi]
  406b96:	dec    DWORD PTR [ebx-0x18]
  406b99:	pop    ss
  406b9a:	scas   al,BYTE PTR es:[edi]
  406b9b:	adc    al,0x0
  406b9d:	xor    BYTE PTR [eax+0x1c],dh
  406ba0:	add    BYTE PTR [ecx+edi*4+0x66258338],bh
  406ba7:	mov    edx,0xd2ff
  406bac:	cs inc edi
  406bae:	jne    0x406ba1
  406bb0:	dec    edx
  406bb1:	ds mov bh,0x36
  406bb4:	or     eax,0x9a2d459d
  406bb9:	stos   DWORD PTR es:[edi],eax
  406bba:	ss test al,0x32
  406bbd:	inc    edi
  406bbe:	jne    0x406bb1
  406bc0:	or     bh,BYTE PTR [esi]
  406bc2:	std    
  406bc3:	push   ss
  406bc4:	in     eax,dx
  406bc5:	inc    esi
  406bc6:	jne    0x406bd5
  406bc8:	in     eax,0xc0
  406bca:	pop    es
  406bcb:	adc    DWORD PTR [ebx-0x74],edx
  406bce:	(bad)  
  406bcf:	(bad)  
  406bd0:	call   0xa8297026
  406bd5:	call   0xe6f7:0x63ee68ec
  406bdc:	cli    
  406bdd:	cwde   
  406bde:	inc    ebp
  406bdf:	fstp   QWORD PTR [ebp-0x141a8aba]
  406be5:	add    BYTE PTR [ebx+0x0],dl
  406be8:	ins    BYTE PTR es:[edi],dx
  406be9:	inc    edi
  406bea:	out    0x0,eax
  406bec:	ins    BYTE PTR es:[edi],dx
  406bed:	pushf  
  406bee:	add    BYTE PTR [eax],al
  406bf0:	inc    ebx
  406bf1:	ror    DWORD PTR [esi],cl
  406bf3:	test   DWORD PTR [edx],esp
  406bf5:	adc    DWORD PTR [eax],eax
  406bf7:	add    bh,cl
  406bf9:	push   esp
  406bfa:	test   DWORD PTR [eax],0xc7001308
  406c00:	dec    ebp
  406c01:	in     al,0xfe
  406c03:	pop    es
  406c04:	sbb    BYTE PTR [ebx],dl
  406c06:	push   0x0
  406c08:	xor    dl,BYTE PTR [eax]
  406c0a:	push   0x0
  406c0c:	and    dl,BYTE PTR [eax]
  406c0e:	lea    eax,[ebp+0x0]
  406c11:	add    BYTE PTR [eax+eax*4-0x74],bh
  406c15:	test   DWORD PTR [ebx+eiz*8-0x2],ebp
  406c19:	dec    DWORD PTR [eax-0x15]
  406c1c:	je     0x406c16
  406c1e:	push   edi
  406c1f:	gs sti 
  406c21:	call   0x4107e4
  406c26:	rcl    edx,cl
  406c28:	jae    0x406c2f
  406c2a:	jno    0x406c19
  406c2c:	add    BYTE PTR [eax],al
  406c2e:	enter  0xc33a,0x28
  406c32:	mov    DWORD PTR [edx],edx
  406c34:	push   DWORD PTR [ebp-0x6c]
  406c37:	mov    edx,0xeb57bdd8
  406c3c:	mov    dl,al
  406c3e:	and    eax,0x37f7f495
  406c43:	jmp    0x406c94
  406c45:	push   edx
  406c46:	xor    BYTE PTR [edx-0x43],cl
  406c49:	push   DWORD PTR [edi]
  406c4b:	cdq    
  406c4c:	test   eax,esi
  406c4e:	jg     0x406c39
  406c50:	(bad)  
  406c51:	push   0xffffff88
  406c53:	cmp    dh,bh
  406c55:	ss cdq 
  406c57:	adc    bh,bh
  406c59:	mov    ch,0x68
  406c5b:	loope  0x406c5b
  406c5d:	call   DWORD PTR [edi+0x23]
  406c60:	push   ebx
  406c61:	sub    DWORD PTR [ecx],ecx
  406c63:	adc    al,ch
  406c65:	and    eax,0xff5aa031
  406c6a:	mov    eax,0x3ef75eaf
  406c6f:	dec    ebp
  406c70:	in     eax,dx
  406c71:	dec    esi
  406c73:	arpl   WORD PTR [ecx],dx
  406c75:	inc    ecx
  406c76:	add    BYTE PTR [eax],al
  406c78:	xor    DWORD PTR [esi-0x70],edi
  406c7b:	lock push ds
  406c7d:	ja     0x406cd9
  406c7f:	jmp    DWORD PTR [edx+ecx*1+0x2d]
  406c83:	inc    ecx
  406c84:	xor    DWORD PTR [ebx-0x60f142fe],esp
  406c8a:	mov    WORD PTR [ebp-0xa560eb],es
  406c90:	mov    edi,DWORD PTR [ebx]
  406c92:	jmp    0x406c81
  406c94:	aas    
  406c95:	cld    
  406c96:	add    edi,edi
  406c98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c99:	retf   
  406c9a:	push   ecx
  406c9b:	jmp    esi
  406c9d:	mov    dh,0xf
  406c9f:	push   ebx
  406ca0:	or     BYTE PTR [ebx+eax*1-0x18],bh
  406ca4:	enter  0x5aa7,0xff
  406ca8:	mov    eax,0xc6f76ab8
  406cad:	(bad)  
  406cae:	in     al,dx
  406caf:	call   DWORD PTR [esi-0x2e]
  406cb2:	adc    BYTE PTR [ecx+0x31],al
  406cb5:	push   es
  406cb6:	nop
  406cb7:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406cb9:	(bad)  
  406cba:	pop    ecx
  406cbb:	call   FWORD PTR [edx+ebp*4+0x2c]
  406cbf:	inc    ecx
  406cc0:	xor    DWORD PTR [ebx],esp
  406cc2:	dec    esi
  406cc3:	mov    esp,0x858c2696
  406cc8:	xchg   ecx,eax
  406cc9:	es pop edx
  406ccb:	push   DWORD PTR [eax+esi*4+0xe7ef72e]
  406cd2:	mov    bl,0x67
  406cd4:	cmp    BYTE PTR [ebp-0x3c],0xff
  406cd8:	outs   dx,DWORD PTR ds:[esi]
  406cd9:	or     BYTE PTR [ebx-0x9],dl
  406cdc:	add    BYTE PTR [eax],al
  406cde:	ss pop cx
  406ce1:	xor    eax,0xc3101402
  406ce6:	push   esi
  406ce7:	sub    eax,0x454e9891
  406cec:	loop   0x406d31
  406cee:	mov    ebp,0x65976a2a
  406cf3:	cmp    eax,0xbf2d59c6
  406cf8:	fcomp  DWORD PTR [eax+0x61]
  406cfb:	xchg   ebp,eax
  406cfc:	ins    BYTE PTR es:[edi],dx
  406cfd:	cmp    BYTE PTR [esi],bl
  406cff:	inc    ebp
  406d00:	scas   al,BYTE PTR es:[edi]
  406d01:	mov    ah,0x16
  406d03:	mov    edi,0x3916595f
  406d08:	cmc    
  406d09:	or     al,0xf1
  406d0b:	mov    edi,0xbb0eb3ee
  406d10:	dec    edi
  406d11:	pop    ecx
  406d12:	dec    BYTE PTR [esp+ebp*2+0x38]
  406d16:	inc    BYTE PTR [esi+edi*2-0x11]
  406d1a:	out    dx,al
  406d1b:	inc    esp
  406d1c:	jmp    0x76a419a7
  406d21:	pop    ecx
  406d22:	fsubrp st(3),st
  406d24:	rol    BYTE PTR [ebx],1
  406d26:	push   ds
  406d27:	shr    eax,cl
  406d29:	pop    eax
  406d2a:	test   BYTE PTR [ebx+0x5e],al
  406d2d:	pop    ecx
  406d2e:	mov    BYTE PTR [esp+edx*1-0x4b],0x9
  406d33:	shr    eax,cl
  406d35:	imul   ebx,DWORD PTR [ebx-0x78],0x3e
  406d39:	pop    ecx
  406d3a:	mov    eax,0xa651118e
  406d3f:	inc    esp
  406d40:	push   0xffffff97
  406d42:	add    BYTE PTR [eax],al
  406d44:	xchg   ebp,eax
  406d45:	cmp    al,0x26
  406d47:	pop    ecx
  406d48:	xor    DWORD PTR ds:0x14317d65,edx
  406d4e:	jmp    0x167831d7
  406d53:	pop    ecx
  406d54:	jle    0x406d69
  406d56:	idiv   BYTE PTR [edi-0x59]
  406d59:	adc    ebp,ecx
  406d5b:	add    esi,DWORD PTR [edx+0x10086]
  406d61:	inc    ebp
  406d62:	(bad)  
  406d63:	jmp    0xe9c1fd91
  406d68:	xor    dl,BYTE PTR [eax+ebp*2]
  406d6b:	stc    
  406d6c:	xor    dh,BYTE PTR ds:0xc77d6be
  406d72:	call   0xff851cef
  406d77:	(bad)  
  406d78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d79:	aaa    
  406d7a:	idiv   DWORD PTR [esi-0x1e8abc77]
  406d80:	call   0xb543:0x79aeb539
  406d87:	xchg   ecx,eax
  406d88:	add    DWORD PTR [ebx-0x1],0xe81bff9e
  406d8f:	mov    esi,0x8eff43b7
  406d94:	scas   eax,DWORD PTR es:[edi]
  406d95:	cmp    bh,dh
  406d97:	xchg   BYTE PTR [ecx+0x43],bl
  406d9a:	jne    0x406d8d
  406d9c:	pop    edx
  406d9d:	dec    ebp
  406d9e:	mov    ch,0x76
  406da0:	mov    DWORD PTR [ebx-0x4b],eax
  406da3:	lea    eax,[ecx+0x66ff43]
  406da9:	add    bh,ah
  406dab:	sbb    ebp,eax
  406dad:	sar    BYTE PTR [edi-0x48a900bd],0x34
  406db4:	test   DWORD PTR [esi+0x59],0x4af17543
  406dbb:	jno    0x406d72
  406dbd:	or     DWORD PTR ds:[edi+0x430111bd],edx
  406dc4:	(bad)  
  406dc5:	jmp    0x64c38c38
  406dca:	bound  ecx,QWORD PTR [ebx-0x1]
  406dcd:	push   ds
  406dce:	mov    cs,eax
  406dd0:	adc    DWORD PTR [edx+0x7],esp
  406dd3:	pop    esp
  406dd4:	test   DWORD PTR [esi],0x3042d9
  406dda:	das    
  406ddb:	push   edx
  406ddc:	pop    es
  406ddd:	call   0x400063
  406de2:	xor    edx,DWORD PTR [ecx]
  406de4:	push   0x0
  406de6:	dec    edi
  406de7:	push   ecx
  406de8:	pop    es
  406de9:	call   0x40131b
  406dee:	outs   dx,DWORD PTR ds:[esi]
  406def:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406df0:	in     al,0xf7
  406df2:	pop    edi
  406df3:	jmp    0x406ddc
  406df5:	mov    DWORD PTR [eax-0x4a000115],esp
  406dfb:	stos   DWORD PTR es:[edi],eax
  406dfc:	idiv   bh
  406dfe:	out    dx,eax
  406dff:	scas   eax,DWORD PTR es:[edi]
  406e00:	jge    0x406dba
  406e02:	fucomip st,st(2)
  406e04:	(bad)  
  406e05:	mov    ch,0xf0
  406e07:	sar    dh,cl
  406e09:	inc    eax
  406e0b:	data16 mov bh,0xff
  406e0e:	add    BYTE PTR [eax],al
  406e10:	scas   eax,DWORD PTR es:[edi]
  406e11:	jmp    0xe8fe:0xeaa7e0b4
  406e18:	xor    BYTE PTR [eax-0x5b500001],ah
  406e1e:	fdiv   st,st(7)
  406e20:	outs   dx,DWORD PTR ds:[esi]
  406e21:	jmp    0x406e0a
  406e23:	pop    ebp
  406e24:	and    bl,ch
  406e26:	(bad)  
  406e27:	jmp    DWORD PTR ds:0x4ffff6e8
  406e2d:	mov    al,0x51
  406e2f:	mov    eax,0x45feeb6f
  406e34:	pusha  
  406e35:	mov    cl,0xd4
  406e37:	std    
  406e38:	outs   dx,DWORD PTR ds:[esi]
  406e39:	jmp    0x406e39
  406e3b:	jne    0x406ea9
  406e3d:	mov    al,0x9b
  406e3f:	mov    bl,BYTE PTR [eax-0x6f3d36ea]
  406e45:	push   ss
  406e46:	push   ebp
  406e47:	mov    ebx,DWORD PTR [edi+edx*4-0x3c]
  406e4b:	cld    
  406e4c:	ret    0x6a16
  406e4f:	or     eax,0xe807652f
  406e54:	xor    DWORD PTR [ecx-0x4c810070],edx
  406e5a:	sar    bl,0x9
  406e5d:	pop    es
  406e5e:	push   cs
  406e5f:	inc    ecx
  406e60:	xor    DWORD PTR [edx-0x30],eax
  406e63:	pop    es
  406e64:	pop    ecx
  406e65:	(bad)  
  406e66:	push   edi
  406e67:	call   FWORD PTR [esi+0x31]
  406e6a:	sar    bl,1
  406e6c:	push   esi
  406e6d:	fisttp WORD PTR [ebx]
  406e6f:	call   0xff971632
  406e74:	add    BYTE PTR [eax],al
  406e76:	js     0x406ee6
  406e78:	(bad)  
  406e79:	jmp    ebp
  406e7b:	mov    ch,0x66
  406e7d:	sub    DWORD PTR [ebp-0x78],0xb12eff4e
  406e84:	mov    edi,0xd08a81fb
  406e89:	or     ebx,DWORD PTR [esi]
  406e8b:	dec    ecx
  406e8c:	mov    dl,0x28
  406e8e:	jo     0x406ebb
  406e90:	imul   edx,DWORD PTR [edx-0x45],0x2b
  406e94:	add    ecx,DWORD PTR [ebx]
  406e96:	icebp  
  406e97:	cmp    al,BYTE PTR [eax+0x32b335f]
  406e9d:	(bad)  
  406e9e:	ins    BYTE PTR es:[edi],dx
  406e9f:	xchg   ebx,eax
  406ea0:	add    eax,DWORD PTR [eax]
  406ea2:	xor    DWORD PTR [ebx],ebp
  406ea4:	ds inc ebp
  406ea6:	(bad)  
  406ea8:	std    
  406ea9:	(bad)  
  406eaa:	ficom  WORD PTR ds:0x65316a04
  406eb0:	add    ebp,DWORD PTR [edx+0x31]
  406eb3:	mov    al,0xbf
  406eb5:	repz popa 
  406eb7:	mov    eax,0xd2c6f47f
  406ebc:	push   ebp
  406ebd:	push   eax
  406ebe:	mov    dh,0x80
  406ec0:	pop    ebx
  406ec1:	jmp    DWORD PTR [edi+edi*8]
  406ec4:	push   0x24
  406ec6:	mov    ebx,0x710b032b
  406ecb:	xchg   DWORD PTR [eax],eax
  406ecd:	jmp    0x42b8325
  406ed2:	xor    DWORD PTR [esp+0x1613f02b],ebp
  406ed9:	rol    BYTE PTR [eax],1
  406edb:	add    BYTE PTR [edx],ch
  406edd:	sub    al,0xa6
  406edf:	call   0x97bc:0x33724176
  406ee6:	cmc    
  406ee7:	dec    ebp
  406ee8:	inc    cx
  406eea:	cdq    
  406eeb:	mov    cl,0x56
  406eed:	nop
  406eee:	xor    dl,BYTE PTR [esi+0x56]
  406ef1:	mov    ebp,DWORD PTR [esp+edx*2+0x46]
  406ef5:	inc    ecx
  406ef6:	fiadd  WORD PTR [edi+0x55de50ac]
  406efc:	ds in  al,0x40
  406eff:	cmp    dh,0xd2
  406f02:	call   0xb684535b
  406f07:	push   ebp
  406f08:	es inc ecx
  406f0a:	cld    
  406f0b:	mov    al,0x49
  406f0d:	shr    eax,cl
  406f0f:	imul   esp,DWORD PTR [edi-0x47aa5983],0xffffff96
  406f16:	test   DWORD PTR [ebp+0x6],ecx
  406f19:	inc    ecx
  406f1a:	add    eax,DWORD PTR [ecx+ecx*4]
  406f1d:	pushf  
  406f1e:	(bad)  
  406f1f:	ret    0x41f6
  406f22:	cmp    al,0x54
  406f24:	out    0x40,al
  406f26:	jle    0x406f7d
  406f28:	sbb    al,0xe5
  406f2a:	mov    edi,0xf938dec2
  406f2f:	cdq    
  406f30:	(bad)  
  406f31:	inc    eax
  406f32:	jo     0x406fb3
  406f34:	fisttp QWORD PTR [eax+0x5e]
  406f37:	push   ebp
  406f38:	pop    ebx
  406f39:	adc    al,0xc1
  406f3b:	jbe    0x406f43
  406f3d:	shr    eax,cl
  406f3f:	push   esp
  406f40:	add    BYTE PTR [eax],al
  406f42:	jl     0x406f87
  406f44:	ds push ebp
  406f46:	scas   al,BYTE PTR es:[edi]
  406f47:	inc    eax
  406f48:	hlt    
  406f49:	mov    al,0x59
  406f4b:	sar    edi,cl
  406f4d:	call   0x2efa555c
  406f52:	cld    
  406f53:	mov    al,BYTE PTR [ebp-0xbf03ef]
  406f59:	xchg   ebx,eax
  406f5a:	xor    ch,BYTE PTR [edi+eiz*4-0x1bf8c22]
  406f61:	push   esp
  406f62:	fisttp QWORD PTR [eax-0x1]
  406f65:	push   es
  406f66:	add    al,0x7
  406f68:	push   ebx
  406f69:	shl    BYTE PTR [ebx+0x40],1
  406f6c:	out    0xbd,eax
  406f6e:	mov    eax,0xd660ff40
  406f73:	xor    esi,edi
  406f75:	out    0xe5,al
  406f77:	mov    es,WORD PTR [ebp-0xbf0a3f]
  406f7d:	cmp    DWORD PTR [ebp+0x75],ecx
  406f80:	aaa    
  406f81:	sub    BYTE PTR ds:0x7db9b541,ch
  406f87:	aas    
  406f88:	(bad)  
  406f89:	mov    esi,0x2828e337
  406f8e:	xor    eax,0x7d73112c
  406f93:	aas    
  406f94:	or     ebp,DWORD PTR [ecx+0x5c8322fe]
  406f9a:	dec    edx
  406f9b:	inc    edi
  406f9c:	call   DWORD PTR [esi-0x71f63702]
  406fa2:	and    cl,BYTE PTR [edi+0xa585]
  406fa8:	jge    0x406fe9
  406faa:	call   DWORD PTR [edx-0x6a7aa8c8]
  406fb0:	ins    DWORD PTR es:[edi],dx
  406fb1:	aas    
  406fb2:	call   esp
  406fb4:	xor    dl,BYTE PTR [eax+eax*1]
  406fb7:	mov    ecx,0x5eb6625a
  406fbc:	pop    ebp
  406fbd:	xchg   ecx,eax
  406fbe:	test   DWORD PTR [ecx],edi
  406fc0:	ins    DWORD PTR es:[edi],dx
  406fc1:	aas    
  406fc2:	(bad)  
  406fc3:	mov    ecx,0x378aca
  406fc8:	fst    DWORD PTR [ebx]
  406fca:	push   DWORD PTR [ebp-0x12f98]
  406fd0:	addr16 push cs
  406fd2:	push   ebx
  406fd3:	sub    ecx,ecx
  406fd5:	adc    ebp,eax
  406fd7:	int    0x11
  406fd9:	call   0x4f987bdc
  406fde:	adc    al,BYTE PTR [ebx-0x8fd1b]
  406fe4:	daa    
  406fe5:	aas    
  406fe6:	je     0x406ff2
  406fe8:	aaa    
  406fe9:	and    ecx,DWORD PTR [edi-0x12fc37b]
  406fef:	push   DWORD PTR [ebx]
  406ff1:	or     eax,0xd03c85c7
  406ff6:	(bad)  
  406ff7:	call   FWORD PTR [eax+0x13]
  406ffa:	add    BYTE PTR [eax],al
  406ffc:	or     al,ah
  406ffe:	lea    esi,[esi-0x427d1c99]
  407004:	ins    BYTE PTR es:[edi],dx
  407005:	(bad)  
  407007:	call   FWORD PTR [eax]
  407009:	add    DWORD PTR ds:[bx+si],0x0
  40700e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40700f:	cld    
  407010:	idiv   bh
  407012:	out    0x15,eax
  407014:	jne    0x40704c
  407016:	jb     0x407030
  407018:	lea    eax,[ebp-0x1253c]
  40701e:	dec    eax
  40701f:	jecxz  0x406fd5
  407021:	in     al,0x9f
  407023:	loop   0x407023
  407025:	call   0x3f5ef4
  40702a:	jecxz  0x406ffe
  40702c:	jae    0x407037
  40702e:	pop    ebx
  40702f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407030:	int3   
  407031:	mul    DWORD PTR [edi-0x1d]
  407034:	push   DWORD PTR [ebp+edi*8-0x1f]
  407038:	mov    ah,0xe4
  40703a:	outs   dx,DWORD PTR ds:[esi]
  40703b:	jecxz  0x40703b
  40703d:	call   0x400cca
  407042:	xor    esi,ebp
  407044:	mov    ah,ah
  407046:	mov    esi,0x310052cd
  40704b:	sub    eax,0xd8e48303
  407050:	pop    edx
  407051:	call   FWORD PTR [esi-0x4d9528d4]
  407057:	scas   eax,DWORD PTR es:[edi]
  407058:	pop    edi
  407059:	test   DWORD PTR [esi+0x137403f5],0x86e890aa
  407063:	and    eax,0x83fd0053
  407068:	fild   DWORD PTR [ecx]
  40706a:	xor    DWORD PTR [esi],esp
  40706c:	xchg   edx,eax
  40706d:	(bad)  
  40706e:	fadd   QWORD PTR [ebx+ebx*2-0x59]
  407072:	add    BYTE PTR [eax],al
  407074:	mov    ds:0x9cff5245,eax
  407079:	inc    eax
  40707a:	pop    edx
  40707b:	dec    DWORD PTR [esi+0x35]
  40707e:	fadd   DWORD PTR [edi]
  407080:	pop    ecx
  407081:	xor    DWORD PTR [ebp-0x679ac101],edx
  407087:	call   0xff92bdca
  40708c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40708d:	inc    ebx
  40708e:	pop    ebx
  40708f:	in     eax,dx
  407090:	jecxz  0x407110
  407092:	push   edx
  407093:	jmp    esp
  407095:	ja     0x4070f1
  407097:	call   DWORD PTR [esi]
  407099:	outs   dx,DWORD PTR ds:[esi]
  40709a:	cwde   
  40709b:	in     al,0x6
  40709d:	ja     0x4070f1
  40709f:	(bad)  
  4070a0:	jl     0x4070e5
  4070a2:	pop    ebx
  4070a3:	lods   eax,DWORD PTR ds:[esi]
  4070a4:	ret    
  4070a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4070a6:	push   edx
  4070a7:	(bad)  
  4070a8:	mov    esp,0xeeff5a6f
  4070ad:	xchg   esi,eax
  4070ae:	fadd   DWORD PTR [edi]
  4070b0:	fldenv [esi+edx*4]
  4070b3:	(bad)  
  4070b4:	faddp  st(6),st
  4070b6:	xchg   edi,eax
  4070b7:	loopne 0x407097
  4070b9:	scas   al,BYTE PTR es:[edi]
  4070ba:	push   ecx
  4070bb:	inc    DWORD PTR [esp+edx*1-0xf]
  4070bf:	pop    ebx
  4070c0:	test   BYTE PTR [edx-0x7841ada2],al
  4070c6:	dec    ebp
  4070c7:	pop    edx
  4070c8:	mov    dh,0x3d
  4070ca:	inc    ecx
  4070cb:	dec    edx
  4070cc:	in     al,0x3d
  4070ce:	inc    esi
  4070cf:	push   edx
  4070d0:	fdiv   QWORD PTR [eax]
  4070d2:	ss push edx
  4070d4:	sahf   
  4070d5:	sub    al,0x75
  4070d7:	cwde   
  4070d8:	add    BYTE PTR [eax],al
  4070da:	xchg   esi,eax
  4070db:	cmp    eax,0x4599982e
  4070e0:	es push edx
  4070e2:	cdq    
  4070e3:	adc    DWORD PTR [edx+edx*2+0x7e],0x3d
  4070e8:	pop    esp
  4070e9:	arpl   WORD PTR [esi+0x3d],di
  4070ec:	push   cs
  4070ed:	pop    ebx
  4070ee:	xchg   edi,eax
  4070ef:	xchg   DWORD PTR [esi],eax
  4070f1:	push   edx
  4070f2:	xchg   cx,di
  4070f5:	pop    ecx
  4070f6:	pop    esi
  4070f7:	cmp    eax,0x3d9c6e01
  4070fc:	out    dx,al
  4070fd:	push   ecx
  4070fe:	hlt    
  4070ff:	cmp    edx,eax
  407101:	xchg   esp,eax
  407102:	inc    esp
  407103:	cmp    eax,0x3fc451de
  407108:	shl    DWORD PTR [edi-0x52],0x14
  40710c:	jmp    0xe94c644b
  407111:	mov    dh,0xbb
  407113:	das    
  407114:	push   0x48
  407116:	and    eax,0x24dde8aa
  40711b:	cmp    eax,0x6f16fc34
  407120:	pop    ebx
  407121:	push   ecx
  407122:	push   es
  407123:	mov    esp,DWORD PTR [eax+edx*2]
  407126:	mov    DWORD PTR [ecx+ebp*8],edx
  407129:	pusha  
  40712a:	mov    bh,0xab
  40712c:	in     al,0x18
  40712e:	jo     0x407144
  407130:	adc    ebx,esi
  407132:	pop    ds
  407133:	shr    eax,cl
  407135:	push   eax
  407136:	fs or  al,0x0
  407139:	cmp    esi,0x6eff5a
  40713f:	add    BYTE PTR [esi-0x29],cl
  407142:	idiv   DWORD PTR [ecx-0x57c92616]
  407148:	xor    ch,BYTE PTR [esi+ebx*1-0x1c30de2]
  40714f:	adc    al,0xe4
  407151:	jmp    0x407193
  407153:	jmp    0x3ef84b62
  407158:	add    BYTE PTR [ecx],cl
  40715a:	sar    BYTE PTR [ebp+0x35458b48],0x6d
  407161:	adc    eax,DWORD PTR [eax]
  407163:	push   ss
  407164:	mov    ds:0xdaf1753c,eax
  407169:	test   BYTE PTR [ecx+0x753ce016],dh
  40716f:	adc    DWORD PTR [eax],eax
  407171:	(bad)  
  407172:	repz push es
  407174:	jle    0x40718a
  407176:	call   0xff7d3399
  40717b:	idiv   BYTE PTR [edi+0x40]
  40717e:	call   0xff7d1954
  407183:	push   ecx
  407184:	dec    esp
  407185:	add    eax,0xc6e1e941
  40718a:	pop    es
  40718b:	shl    eax,0x3f
  40718e:	dec    esi
  407190:	add    ecx,0x13ffc6fb
  407196:	call   0xff7c38da
  40719b:	mov    al,ds:0x1400106c
  4071a0:	mov    WORD PTR [eax],gs
  4071a2:	sub    DWORD PTR [ebp-0x518a0000],0xffffffff
  4071a9:	adc    dh,BYTE PTR [eax]
  4071ab:	cmp    esi,DWORD PTR [ebp-0x1f]
  4071ae:	pop    edx
  4071af:	div    BYTE PTR [ecx+0x458d818e]
  4071b5:	add    BYTE PTR [edi+ebx*2-0x5a500001],ch
  4071bc:	push   0xff5697b4
  4071c1:	addr16 cwde 
  4071c3:	sbb    al,0x41
  4071c5:	add    BYTE PTR [edi+0x62],cl
  4071c8:	pop    es
  4071c9:	call   0x3f6030
  4071ce:	pop    edi
  4071cf:	(bad)  
  4071d0:	sti    
  4071d1:	inc    DWORD PTR [ebp+0x2a43e73f]
  4071d7:	in     al,0xfe
  4071d9:	leave  
  4071da:	dec    edx
  4071db:	adc    eax,DWORD PTR [eax]
  4071dd:	push   ebp
  4071de:	adc    ebx,ebx
  4071e0:	add    ah,0x5c
  4071e3:	pop    ecx
  4071e4:	jmp    FWORD PTR [ecx-0x78]
  4071e7:	in     al,0x74
  4071e9:	or     BYTE PTR [eax],ah
  4071eb:	lods   al,BYTE PTR ds:[esi]
  4071ec:	mov    al,0xff
  4071ee:	pop    ds
  4071ef:	mov    esi,0x17b0fc44
  4071f4:	add    bh,ch
  4071f6:	out    dx,al
  4071f7:	pop    esi
  4071f8:	leave  
  4071f9:	aaa    
  4071fa:	mov    DWORD PTR [edi],edx
  4071fc:	push   0xff5697cf
  407201:	inc    ch
  407203:	ds out 0xaf,eax
  407206:	jno    0x4071d3
  407208:	(bad)  
  407209:	push   0x0
  40720b:	add    BYTE PTR [eax+0x5f],cl
  40720e:	or     edi,DWORD PTR [eax]
  407210:	or     DWORD PTR [eax],edx
  407212:	push   0xff5147f2
  407217:	(bad)  
  407218:	and    eax,0x8412886
  40721d:	fist   WORD PTR [ebp+0xacadfb7]
  407223:	rol    BYTE PTR [esp+ebp*8+0x67],0xe8
  407228:	out    0x4f,eax
  40722a:	dec    DWORD PTR [edi-0x60]
  40722d:	xor    eax,0xa231ffb7
  407232:	mov    ah,0x67
  407234:	xor    DWORD PTR ds:0x8759be5e,ebp
  40723a:	pop    ss
  40723b:	inc    ecx
  40723c:	xor    DWORD PTR ds:0x9529754f,ebx
  407242:	sbb    bl,cl
  407244:	into   
  407245:	test   eax,0xb17d565b
  40724a:	dec    esi
  40724b:	inc    DWORD PTR [ecx+ebx*8+0x4e]
  40724f:	jne    0x40727a
  407251:	aad    0x3c
  407253:	mov    cl,0xae
  407255:	leave  
  407256:	cmp    al,0xc2
  407258:	sub    eax,0x8d8ab82d
  40725d:	lods   eax,DWORD PTR ds:[esi]
  40725e:	inc    edi
  40725f:	cld    
  407260:	call   FWORD PTR [ecx+0x5c18ffd9]
  407266:	dec    esi
  407267:	jne    0x4072a2
  407269:	and    eax,0x197eb0db
  40726e:	jge    0x4072b5
  407270:	add    BYTE PTR [eax],al
  407272:	jne    0x407229
  407274:	sbb    BYTE PTR [ecx+ebx*1+0x6c],ch
  407278:	add    ecx,DWORD PTR [ebx+0x411abd24]
  40727e:	xor    DWORD PTR [ebp+0x75dd000e],ebp
  407284:	fist   DWORD PTR [edi]
  407286:	or     DWORD PTR [ebx+eax*1+0x57],ebp
  40728a:	pop    ecx
  40728b:	pushf  
  40728c:	test   DWORD PTR [eax],eax
  40728e:	xor    DWORD PTR [esi+0x43],eax
  407291:	je     0x40729f
  407293:	sti    
  407294:	pop    ebx
  407295:	shr    esp,cl
  407297:	dec    edx
  407298:	dec    esi
  407299:	push   0xffc51350
  40729e:	outs   dx,BYTE PTR ds:[esi]
  40729f:	arpl   WORD PTR [ecx-0x49],dx
  4072a2:	push   ss
  4072a3:	xor    DWORD PTR [ebx+0x5e2b3167],0xffffffbe
  4072aa:	popa   
  4072ab:	adc    al,0xa6
  4072ad:	fdiv   DWORD PTR [esi]
  4072af:	sub    al,0xc3
  4072b1:	cmp    dh,dh
  4072b3:	cmp    DWORD PTR [ecx-0x71c65da6],eax
  4072b9:	pop    edx
  4072ba:	xor    dl,dl
  4072bc:	push   0x82bf310d
  4072c1:	(bad)
  4072c4:	test   eax,0x6e39ce8c
  4072c9:	dec    esi
  4072ca:	ret    
  4072cb:	push   0x21
  4072cd:	pop    es
  4072ce:	inc    esp
  4072cf:	jg     0x40732f
  4072d1:	fdivr  DWORD PTR [edx+0xfbdc39]
  4072d7:	add    BYTE PTR [esi-0x59b1682f],dl
  4072dd:	fldenv [esi-0x16ef8cc4]
  4072e3:	mov    eax,0x476a28ab
  4072e8:	lea    ebp,[esi+0x3920d9e8]
  4072ee:	pushf  
  4072ef:	sti    
  4072f0:	xchg   esi,eax
  4072f1:	sub    ebx,DWORD PTR [ecx+0x4e]
  4072f4:	jbe    0x407281
  4072f6:	lods   al,BYTE PTR ds:[esi]
  4072f7:	dec    edi
  4072f8:	fst    DWORD PTR [ebx]
  4072fa:	jmp    0xbbed1a5d
  4072ff:	or     esi,eax
  407301:	adc    edx,DWORD PTR [ecx-0x172ce6e1]
  407307:	dec    esi
  407308:	les    ecx,FWORD PTR [ebx]
  40730a:	add    DWORD PTR [ecx+ebp*2-0x3bb219c7],edx
  407311:	aaa    
  407312:	(bad)  
  407314:	cs sub al,0xe3
  407317:	xchg   edx,eax
  407318:	cmp    DWORD PTR cs:[eax+0x1c142d42],esp
  40731f:	jns    0x40732e
  407321:	xchg   ebx,eax
  407322:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407323:	xor    BYTE PTR [esi],bl
  407325:	cmp    DWORD PTR [eax],eax
  407327:	mov    dh,0x8e
  407329:	iret   
  40732a:	sti    
  40732b:	sbb    DWORD PTR [edi+edi*4+0xb],esi
  40732f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407330:	es in  eax,0x28
  407333:	sub    BYTE PTR ds:0x356ccd2c,ch
  407339:	adc    al,0xb
  40733b:	test   eax,0x8fe40000
  407340:	mov    eax,ds:0xc71432e8
  407345:	and    al,0x65
  407347:	adc    al,0x0
  407349:	jmp    0x7585c480
  40734e:	je     0x407361
  407350:	add    cl,ch
  407352:	fdivr  DWORD PTR [eax]
  407354:	imul   ebp,ecx,0xe96938d8
  40735a:	das    
  40735b:	iret   
  40735c:	repz mov ecx,0x3ef48f27
  407362:	in     al,dx
  407363:	cmp    BYTE PTR [eax+0x3e],dl
  407366:	jle    0x4073a8
  407368:	(bad)  
  407369:	mov    esp,0x649f2bfe
  40736e:	sub    eax,0x59290b14
  407373:	psubsw mm0,QWORD PTR [ebp-0x7effebcd]
  40737a:	imul   bl
  40737c:	inc    eax
  40737d:	jmp    0x114c3277
  407382:	repz cmp edi,0xd08da2fe
  407389:	fs mov dh,0x3f
  40738c:	imul   esi
  40738e:	cmc    
  40738f:	jecxz  0x4073e2
  407391:	shl    DWORD PTR [eax-0x4421007f],1
  407397:	mov    ?,eax
  407399:	fidivr WORD PTR [ebp+0x37]
  40739c:	call   0xff783582
  4073a1:	add    BYTE PTR [eax],al
  4073a3:	add    BYTE PTR [edx+0x30526810],al
  4073a9:	push   ebx
  4073aa:	(bad)  
  4073ab:	dec    BYTE PTR [ebp-0x2800091d]
  4073b1:	enter  0x5334,0xe1
  4073b5:	push   edx
  4073b6:	jmp    edi
  4073b8:	add    BYTE PTR [edx-0x71ae0001],ah
  4073be:	in     al,0xf7
  4073c0:	mov    bh,0xc8
  4073c2:	imul   eax,DWORD PTR [eax],0x41375240
  4073c8:	enter  0xb4c8,0xf0
  4073cc:	dec    edi
  4073cd:	enter  0xfffe,0x7d
  4073d1:	test   BYTE PTR [eax],ch
  4073d3:	inc    ecx
  4073d4:	enter  0xe9db,0xb5
  4073d8:	push   edi
  4073d9:	enter  0x8588,0xf4
  4073dd:	(bad)  
  4073df:	push   DWORD PTR [edx+0x13]
  4073e2:	push   0xff533049
  4073e7:	(bad)  
  4073e8:	sbb    eax,0x47fff6e3
  4073ed:	enter  0x5334,0x31
  4073f1:	push   ebx
  4073f2:	jmp    edi
  4073f4:	inc    esp
  4073f5:	sahf   
  4073f6:	(bad)  
  4073f7:	inc    DWORD PTR [ecx]
  4073f9:	mov    gs,eax
  4073fb:	test   DWORD PTR [edi-0x38],0xe014858c
  407402:	(bad)  
  407403:	(bad)  
  407404:	mov    eax,0x385a5b
  407409:	add    BYTE PTR [ecx+0x48b5ff13],cl
  40740f:	jecxz  0x40740f
  407411:	call   DWORD PTR [edi+0x21]
  407414:	push   ebx
  407415:	sub    DWORD PTR [ecx],ecx
  407417:	adc    al,ch
  407419:	test   eax,0xbfecb9d
  40741e:	xor    DWORD PTR [ebp-0x30],ebp
  407421:	sbb    BYTE PTR [edx+0x1ef72887],dh
  407427:	dec    esi
  407428:	add    BYTE PTR [ebp+0x41],dh
  40742b:	jbe    0x407441
  40742d:	(bad)  
  40742e:	mov    ah,0x4c
  407430:	push   ebx
  407431:	inc    DWORD PTR [esi]
  407433:	sbb    eax,0x6dc3765c
  407438:	dec    ebx
  407439:	jmp    0x407458
  40743b:	inc    edx
  40743c:	inc    ebx
  40743d:	je     0x407476
  40743f:	std    
  407440:	pop    ebx
  407441:	push   0xffffffa3
  407443:	test   DWORD PTR [ebx-0x39],ecx
  407446:	mov    ah,0x8c
  407448:	push   ebx
  407449:	call   esi
  40744b:	pop    edi
  40744c:	add    eax,DWORD PTR [eax]
  40744e:	xor    DWORD PTR [edx-0x5a411b78],ebp
  407454:	dec    edx
  407455:	add    BYTE PTR [ebp+0x76],al
  407458:	xchg   BYTE PTR [ebp-0xb5223b],bh
  40745e:	xor    DWORD PTR [ecx-0x47],ebx
  407461:	and    ah,0xd4
  407464:	push   edx
  407465:	call   FWORD PTR [esi+0x944cf2c]
  40746b:	sub    eax,0xef03
  407470:	iret   
  407471:	std    
  407472:	rol    BYTE PTR [edi],1
  407474:	cdq    
  407475:	jmp    0x407410
  407477:	(bad)  
  407478:	jle    0x407467
  40747a:	nop
  40747b:	in     al,dx
  40747c:	jle    0x407493
  40747e:	dec    ebx
  40747f:	jmp    esp
  407481:	xor    al,0x5b
  407483:	adc    eax,0xff4b0596
  407488:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407489:	and    al,0x53
  40748b:	call   DWORD PTR [esi+0x35]
  40748e:	rol    BYTE PTR [edi],1
  407490:	pop    ecx
  407491:	and    eax,0x2546ff9a
  407496:	nop
  407497:	in     al,0x46
  407499:	adc    esp,esi
  40749b:	dec    edx
  40749c:	ss shl al,0x5b
  4074a0:	sub    BYTE PTR [edi-0x2a],ah
  4074a3:	dec    edx
  4074a4:	es or  cl,0x52
  4074a8:	push   ds
  4074a9:	ss (bad) 
  4074ab:	shr    BYTE PTR [esi],1
  4074ad:	sub    al,0x70
  4074af:	cdq    
  4074b0:	push   cs
  4074b1:	ss mov dh,0x90
  4074b4:	or     eax,0x94aae3e
  4074b9:	inc    eax
  4074ba:	pop    eax
  4074bb:	dec    edx
  4074bc:	div    BYTE PTR ds:0x35e65754
  4074c2:	xchg   esi,eax
  4074c3:	pop    ebx
  4074c4:	fild   DWORD PTR [ebx+0x7fde4a8e]
  4074ca:	xchg   ecx,eax
  4074cb:	push   edx
  4074cc:	(bad)  
  4074cd:	xor    eax,0x35802a91
  4074d2:	jbe    0x40751e
  4074d4:	add    BYTE PTR [eax],al
  4074d6:	jl     0x40751c
  4074d8:	jbe    0x407524
  4074da:	mov    esi,0xb6943d2c
  4074df:	xor    eax,0x2ba6c05e
  4074e4:	(bad)  
  4074e5:	dec    ecx
  4074e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4074e7:	xor    eax,0x2c9ad04e
  4074ec:	out    0x7f,eax
  4074ee:	xor    DWORD PTR [eax+esi*1],edx
  4074f1:	inc    ebp
  4074f2:	cmp    DWORD PTR [esp+ebx*4],edx
  4074f5:	jle    0x40748c
  4074f7:	xchg   ecx,eax
  4074f8:	and    eax,0x93140b47
  4074fd:	div    BYTE PTR [edi-0x41]
  407500:	lock pop ebx
  407502:	push   edi
  407503:	pushw  ss
  407505:	dec    edx
  407506:	mov    eax,0xd3db0ccf
  40750b:	sti    
  40750c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40750d:	add    edx,DWORD PTR [esi-0x41]
  407510:	lock pop ebx
  407512:	daa    
  407513:	ss add dh,dh
  407516:	clc    
  407517:	xor    al,0x75
  407519:	in     eax,dx
  40751a:	call   0x43117cdd
  40751f:	data16 (bad) 
  407521:	fisubr WORD PTR [edx+0x52]
  407524:	add    al,0xe9
  407526:	xlat   BYTE PTR ds:[ebx]
  407527:	mov    esp,ebp
  407529:	push   0x71
  40752b:	cmp    BYTE PTR [edx-0x17],ch
  40752e:	hlt    
  40752f:	and    bh,bh
  407531:	xor    al,0xd
  407533:	sub    eax,0x357887b5
  407538:	mov    DWORD PTR [eax+eax*1],esp
  40753b:	add    BYTE PTR [ecx-0x54],ch
  40753e:	(bad)  
  40753f:	call   0x6ca8eb9d
  407544:	cmp    eax,0xac00ffd3
  407549:	sti    
  40754a:	inc    eax
  40754b:	jmp    0x914834b9
  407550:	out    dx,al
  407551:	pop    esi
  407552:	(bad)  
  407553:	jle    0x4075cd
  407555:	mov    edi,0xcf676fb
  40755a:	call   0xff7510f6
  40755f:	xor    BYTE PTR [edi+0x10],ch
  407562:	add    BYTE PTR [ebp+ebp*1+0x552d8128],dh
  407569:	cmp    eax,0xcf264eff
  40756e:	sti    
  40756f:	cdq    
  407570:	jmp    0x3e7e8133
  407575:	loope  0x40759f
  407577:	test   al,0x32
  407579:	sub    al,0x99
  40757b:	push   0x35
  40757d:	adc    al,0xb
  40757f:	sub    DWORD PTR [eax-0x71],edi
  407582:	int    0xe8
  407584:	xor    dl,BYTE PTR [edi+eax*8]
  407587:	lods   al,BYTE PTR ds:[esi]
  407588:	cli    
  407589:	adc    eax,DWORD PTR [eax]
  40758b:	jmp    0x85c2c2
  407590:	push   esp
  407591:	retf   
  407592:	push   es
  407593:	add    BYTE PTR [eax+0x56],bl
  407596:	jmp    FWORD PTR [ecx+0x58]
  407599:	push   esi
  40759a:	jmp    FWORD PTR [ecx+0x48]
  40759d:	mov    ebp,0xf444
  4075a2:	clc    
  4075a3:	mov    esp,0xdd07f484
  4075a8:	(bad)  
  4075a9:	push   eax
  4075aa:	jmp    DWORD PTR [edx-0x9]
  4075ad:	inc    DWORD PTR [ebp-0x74941824]
  4075b3:	pop    ss
  4075b4:	add    BYTE PTR [ebx],cl
  4075b6:	fsub   DWORD PTR [ebx+0x4]
  4075b9:	jmp    0x408c26
  4075be:	jo     0x407594
  4075c0:	daa    
  4075c1:	inc    ecx
  4075c2:	or     ch,bl
  4075c4:	je     0x4075d2
  4075c6:	shr    BYTE PTR [ebp+0x67bfffb3],0x8a
  4075cd:	sar    BYTE PTR [ebp-0x4e],1
  4075d0:	repz imul DWORD PTR [edi-0x5fadb024]
  4075d7:	pop    ebp
  4075d8:	mov    bl,0xff
  4075da:	aas    
  4075db:	scas   al,BYTE PTR es:[edi]
  4075dc:	test   al,dh
  4075de:	inc    edi
  4075df:	fdiv   st(6),st
  4075e1:	call   0x3ffcda
  4075e6:	sbb    eax,0xfff7d7b2
  4075eb:	fisttp DWORD PTR [edi+0x68]
  4075ee:	mov    bl,0x1f
  4075f0:	inc    ecx
  4075f1:	add    bh,ch
  4075f3:	mov    eax,ds:0xdc4ff7f0
  4075f8:	(bad)  
  4075f9:	xor    eax,0x410eab
  4075fe:	lock jmp 0x4075b3
  407601:	dec    DWORD PTR [edi-0x52]
  407604:	test   ah,ah
  407606:	add    BYTE PTR [eax],al
  407608:	inc    edi
  407609:	fdiv   st(6),st
  40760b:	push   0x31
  40760d:	cmp    eax,0x7c1998db
  407612:	add    edi,edi
  407614:	pushf  
  407615:	sub    eax,0x324eff4f
  40761a:	or     eax,0x37c1853
  40761f:	call   0xff8864a4
  407624:	test   al,0xc0
  407626:	push   edi
  407627:	imul   DWORD PTR [esi]
  407629:	push   edx
  40762a:	(bad)  
  40762c:	mov    ds,WORD PTR [edi+0x6231410c]
  407632:	xchg   ecx,eax
  407633:	lock push ds
  407635:	pop    edx
  407636:	inc    edi
  407637:	inc    DWORD PTR [esi+ecx*1+0x1d]
  40763b:	inc    ecx
  40763c:	xor    DWORD PTR [ebp+0x73],edx
  40763f:	mov    bl,0xfe
  407641:	cmp    DWORD PTR [ebp-0x7b],0xff479209
  407648:	mov    esp,0xe6f727b7
  40764d:	mov    DWORD PTR [edi+eiz*2-0x3bbb5b],esi
  407654:	xlat   BYTE PTR ds:[ebx]
  407655:	out    dx,eax
  407656:	push   ebx
  407657:	test   esi,0x623546b1
  40765d:	push   esp
  40765e:	(bad)  
  40765f:	call   esi
  407661:	sub    al,0x92
  407663:	push   DWORD PTR [esi+0x48744325]
  407669:	mov    esi,0xdc88
  40766e:	sahf   
  40766f:	leave  
  407670:	inc    esi
  407671:	add    al,0x24
  407673:	sub    eax,0xbfa63046
  407678:	arpl   di,si
  40767a:	mov    ?,ecx
  40767c:	mov    bl,0xe7
  40767e:	inc    esp
  40767f:	lods   eax,DWORD PTR ds:[esi]
  407680:	inc    esi
  407681:	dec    DWORD PTR [edx-0x24005b8]
  407687:	adc    ebp,edi
  407689:	mov    bl,0x56
  40768b:	in     al,0x58
  40768d:	inc    edi
  40768e:	pop    dx
  407690:	ins    BYTE PTR es:[edi],dx
  407691:	data16 xor cl,BYTE PTR fs:[esi]
  407695:	icebp  
  407696:	push   esi
  407697:	xor    ch,cl
  407699:	or     BYTE PTR [edi+esi*1+0x134646f6],0x7d
  4076a1:	lds    esi,FWORD PTR [ebx+0x364efd70]
  4076a7:	xor    ch,cl
  4076a9:	iret   
  4076aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4076ab:	xchg   ebp,eax
  4076ac:	pushf  
  4076ad:	pop    ebx
  4076ae:	push   ds
  4076af:	xor    dl,dh
  4076b1:	add    esp,DWORD PTR [ebp-0x5bfbbd40]
  4076b7:	xchg   edi,eax
  4076b8:	mov    eax,ds:0x19320e4e
  4076bd:	inc    edi
  4076be:	mov    esp,0xfe46be38
  4076c3:	cmp    al,0x1b
  4076c5:	xor    esi,esi
  4076c7:	xor    edx,esi
  4076c9:	inc    ebx
  4076ca:	gs enter 0x8869,0x9
  4076cf:	sub    dl,BYTE PTR [esi+0x31000046]
  4076d5:	test   al,0x21
  4076d7:	(bad)  
  4076d9:	xor    DWORD PTR [esi-0xf58317b],edx
  4076df:	pop    ebx
  4076e0:	dec    esi
  4076e1:	xor    BYTE PTR [esi+0x46],0xbe
  4076e5:	addr16 jge 0x407736
  4076e8:	mov    dh,0x31
  4076ea:	data16 shl BYTE PTR [esi],1
  4076ed:	cmp    al,0xa2
  4076ef:	xchg   edi,eax
  4076f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4076f1:	xor    DWORD PTR [esi-0x70],edx
  4076f4:	mov    DWORD PTR [ecx],ebp
  4076f6:	dec    esi
  4076f7:	inc    esi
  4076f8:	xchg   esi,eax
  4076f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4076fa:	lock pop ebx
  4076fc:	fadd   QWORD PTR [eax+0x6786463e]
  407702:	add    BYTE PTR [ecx],dl
  407704:	out    dx,eax
  407705:	xor    bh,bh
  407707:	mov    eax,cs:0xf726f738
  40770d:	xor    BYTE PTR [ebp-0xf],dh
  407710:	or     bh,BYTE PTR [edi+0x30f716ab]
  407716:	mov    ch,0x9
  407718:	out    0x30,eax
  40771a:	inc    DWORD PTR [esi]
  40771c:	popa   
  40771d:	sbb    eax,ebp
  40771f:	rcr    BYTE PTR [esi-0x510900cf],1
  407725:	cmp    bh,dh
  407727:	out    dx,al
  407728:	in     al,dx
  407729:	cmp    edx,DWORD PTR [ebp-0xce8b6a]
  40772f:	xchg   esp,eax
  407730:	mov    DWORD PTR [ecx],ebp
  407732:	call   esi
  407734:	jge    0x4076d4
  407736:	scas   eax,DWORD PTR es:[edi]
  407737:	into   
  407738:	add    BYTE PTR [eax],al
  40773a:	ins    BYTE PTR es:[edi],dx
  40773b:	xor    DWORD PTR [ebp-0xce832f],esi
  407741:	shr    esp,1
  407743:	cmp    edi,0xf06774b6
  407749:	mov    dh,0x6c
  40774b:	xor    eax,ebp
  40774d:	sbb    eax,0x9eff30c4
  407752:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407753:	sub    cl,ch
  407755:	sub    esi,DWORD PTR [edi+0x31]
  407758:	dec    DWORD PTR [esi+0x47e82ce6]
  40775e:	mov    dl,0x13
  407760:	add    BYTE PTR [eax+0x1c001c73],dh
  407766:	cmp    BYTE PTR [eax-0x7d],al
  407769:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40776a:	popa   
  40776b:	xor    DWORD PTR [ebp-0xb],esi
  40776e:	or     cl,dl
  407770:	jg     0x40775b
  407772:	xor    bl,BYTE PTR [ebx-0x590baebb]
  407778:	test   DWORD PTR [ecx-0x31],0xf700ff81
  40777f:	lods   al,BYTE PTR ds:[esi]
  407780:	inc    esp
  407781:	cld    
  407782:	inc    edi
  407783:	popa   
  407784:	sti    
  407785:	(bad)  
  407786:	mov    ebp,0x5475fedc
  40778b:	int3   
  40778c:	push   ss
  40778d:	mov    ebx,0xc00ad717
  407792:	mov    esp,0x3c458916
  407797:	dec    esi
  407798:	dec    DWORD PTR [ebp+ecx*4+0xff4fe0]
  40779f:	add    ch,cl
  4077a1:	fsub   st,st(7)
  4077a3:	jnp    0x4077c1
  4077a5:	xlat   BYTE PTR ds:[ebx]
  4077a6:	dec    BYTE PTR [ebx]
  4077a8:	or     BYTE PTR [eax+ebp*1+0x68],al
  4077ac:	dec    eax
  4077ad:	and    al,0xee
  4077af:	mov    esi,0xe8075f17
  4077b4:	mov    cl,0x8c
  4077b6:	(bad)  
  4077b7:	inc    DWORD PTR [edi]
  4077b9:	pop    edi
  4077ba:	idiv   edi
  4077bc:	jge    0x4077ea
  4077be:	(bad)  
  4077bf:	jne    0x4077c1
  4077c1:	int3   
  4077c2:	shr    BYTE PTR [ebx+0x75fed8c7],0xbc
  4077c9:	fdiv   DWORD PTR [esp+edi*8-0x39]
  4077cd:	pop    esi
  4077ce:	pop    es
  4077cf:	call   0x40045f
  4077d4:	(bad)  
  4077d5:	pop    esi
  4077d6:	sti    
  4077d7:	call   0x400190
  4077dc:	xchg   ecx,eax
  4077dd:	aad    0x7
  4077df:	add    BYTE PTR ds:0x8c83ebad,ch
  4077e5:	retf   
  4077e6:	push   ebp
  4077e7:	(bad)  
  4077e8:	mov    ebp,0xfbade727
  4077ed:	xlat   BYTE PTR ds:[ebx]
  4077ee:	dec    BYTE PTR [ebx]
  4077f0:	pop    eax
  4077f1:	pop    esi
  4077f2:	add    al,0x5e
  4077f4:	popa   
  4077f5:	aad    0x7
  4077f7:	add    BYTE PTR [ecx],dh
  4077f9:	mov    eax,0xde01efbd
  4077fe:	int    0xb
  407800:	cdq    
  407801:	jbe    0x407792
  407803:	inc    DWORD PTR [eax]
  407805:	add    BYTE PTR [esi-0x4af0bcde],al
  40780b:	ret    
  40780c:	add    al,BYTE PTR [eax]
  40780e:	xor    esi,edi
  407810:	int    0xfb
  407812:	pop    ecx
  407813:	loop   0x4077a9
  407815:	jmp    DWORD PTR [esi-0x5c]
  407818:	mov    ebp,0x47905eeb
  40781d:	(bad)  
  40781e:	fdiv   QWORD PTR [eax]
  407820:	inc    ebx
  407821:	jne    0x40786c
  407823:	add    eax,0x2e46ae52
  407828:	ja     0x40789f
  40782a:	dec    ebp
  40782b:	adc    bh,BYTE PTR [edx-0x3d9abb99]
  407831:	inc    DWORD PTR [ebp+eax*2+0x3d3180c5]
  407838:	push   cs
  407839:	shl    BYTE PTR [ebx+edi*1+0x4caa3d2e],0xac
  407841:	in     al,dx
  407842:	dec    ecx
  407843:	cld    
  407844:	add    ebp,eax
  407846:	lods   al,BYTE PTR ds:[esi]
  407847:	in     eax,dx
  407848:	add    eax,DWORD PTR [eax]
  40784a:	xor    ch,BYTE PTR [ebp-0x73]
  40784d:	jne    0x407858
  40784f:	aad    0x3f
  407851:	cmp    BYTE PTR [eax+0x3d],dh
  407854:	(bad)  
  407856:	inc    esi
  407857:	mov    esp,0x7d2a0003
  40785c:	mov    ecx,0x8d21ca01
  407861:	adc    bh,dh
  407863:	cmp    al,0x3
  407865:	push   eax
  407866:	arpl   WORD PTR [esi+0xe7b8],bp
  40786c:	mov    esi,0xb8e80b2f
  407871:	mov    esi,0x140bff42
  407876:	ror    DWORD PTR [ebx+0x41f9441],0x24
  40787d:	(bad)
  407882:	pop    DWORD PTR [ebx+0x4]
  407885:	sbb    al,0x51
  407887:	push   eax
  407888:	fld    TBYTE PTR [esi]
  40788a:	ds inc ebx
  40788c:	add    al,0x30
  40788e:	ss mov ecx,0xbb42e8a
  407894:	pop    ecx
  407895:	daa    
  407896:	push   ebx
  407897:	inc    ebx
  407898:	cs xchg sp,ax
  40789b:	das    
  40789c:	dec    ecx
  40789d:	add    BYTE PTR [edi+0x43],al
  4078a0:	push   esi
  4078a1:	mov    al,ds:0x3be133a4
  4078a6:	call   0xdf04:0x122e4677
  4078ad:	pop    esp
  4078ae:	sub    ecx,DWORD PTR [ecx+esi*1]
  4078b1:	leave  
  4078b2:	popa   
  4078b3:	xor    BYTE PTR [edx+0x26ade558],dh
  4078b9:	mov    esp,0x1ca442f3
  4078be:	rol    esi,0xcb
  4078c1:	sub    eax,0x30748cce
  4078c6:	push   ecx
  4078c7:	jge    0x407912
  4078c9:	shr    eax,cl
  4078cb:	inc    edx
  4078cc:	test   BYTE PTR [ecx+eax*8],bl
  4078cf:	push   0x0
  4078d1:	add    ch,dh
  4078d3:	sub    eax,0xb5eeadae
  4078d8:	stc    
  4078d9:	cld    
  4078da:	jno    0x4078f0
  4078dc:	adc    DWORD PTR [ebx+0x19],eax
  4078df:	shr    eax,cl
  4078e1:	inc    edx
  4078e2:	sbb    al,0xc1
  4078e4:	mov    edi,0x8535cec4
  4078e9:	jae    0x4078b1
  4078eb:	sub    eax,0xa4543f2
  4078f0:	add    BYTE PTR [ecx],al
  4078f2:	paddsb mm0,QWORD PTR [eax-0x17]
  4078f6:	xor    BYTE PTR ds:0x2cf398c8,0x50
  4078fd:	mov    ecx,0x4107a6f3
  407902:	dec    edi
  407903:	dec    DWORD PTR cs:[esi+0x5a]
  407907:	push   esi
  407908:	lods   eax,DWORD PTR ds:[esi]
  407909:	inc    esi
  40790a:	repz mov ecx,0x62205119
  407910:	push   DWORD PTR [esi]
  407912:	daa    
  407913:	push   esp
  407914:	je     0x40791a
  407916:	popf   
  407917:	inc    edi
  407918:	cmp    BYTE PTR [eax+0x4ae7c432],ch
  40791e:	in     eax,0x2c
  407920:	inc    DWORD PTR [ecx-0x16bf13f4]
  407926:	bound  esi,QWORD PTR ds:0x2cf33898
  40792c:	push   eax
  40792d:	cdq    
  40792e:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407930:	pop    es
  407931:	add    DWORD PTR [edi+0xeeff2d],edi
  407937:	add    BYTE PTR [ebx-0x7a],bl
  40793a:	lods   eax,DWORD PTR ds:[esi]
  40793b:	out    0x70,al
  40793d:	mov    edx,0x6393d11b
  407942:	call   esi
  407944:	and    al,0x54
  407946:	je     0x40794c
  407948:	fld    QWORD PTR [esi+0x38]
  40794b:	sub    BYTE PTR ds:0x823ae7c4,ch
  407951:	sub    eax,0xec4f41ff
  407956:	inc    eax
  407957:	jmp    0x58a8ae5e
  40795c:	jo     0x40798b
  40795e:	push   eax
  40795f:	cmp    DWORD PTR [eax-0x59],esi
  407962:	pop    es
  407963:	sub    DWORD PTR [ebp+ebp*1-0x49e27101],0xd2af00ac
  40796e:	imul   esp,DWORD PTR [ebx],0xffb0a1a0
  407974:	aas    
  407975:	pop    ds
  407976:	shl    BYTE PTR [ebp+esi*2+0x78],0xd5
  40797b:	cmp    cl,bl
  40797d:	adc    BYTE PTR [eax-0x18],dl
  407980:	retf   
  407981:	mov    eax,ds:0xf670fffe
  407986:	aaa    
  407987:	inc    ecx
  407988:	cwde   
  407989:	inc    eax
  40798a:	out    0x38,eax
  40798c:	or     ebx,edx
  40798e:	(bad)  
  40798f:	push   eax
  407990:	cwde   
  407991:	shl    DWORD PTR [eax+ecx*1-0x10],cl
  407995:	inc    esi
  407996:	std    
  407997:	call   FWORD PTR [edi]
  407999:	add    BYTE PTR [esi],dh
  40799b:	lods   eax,DWORD PTR ds:[esi]
  40799c:	add    BYTE PTR [eax],al
  40799e:	psrlq  mm7,mm6
  4079a1:	jne    0x4079df
  4079a3:	shl    DWORD PTR [eax+ecx*1+0x30],cl
  4079a7:	mov    ecx,0xd93fffa9
  4079ac:	rol    DWORD PTR [eax+ebx*2],0x45
  4079b0:	mov    ch,ah
  4079b2:	leave  
  4079b3:	fcmovnu st,st(3)
  4079b5:	idiv   DWORD PTR [edi]
  4079b7:	ror    DWORD PTR [ebp+eax*2+0x75fe481c],cl
  4079be:	sub    ch,dl
  4079c0:	je     0x4079ce
  4079c2:	add    BYTE PTR [ebp+0x7e],ah
  4079c5:	add    BYTE PTR [eax],cl
  4079c7:	sbb    eax,eax
  4079c9:	setne  BYTE PTR [ebp-0x22e7ffff]
  4079d0:	inc    esp
  4079d1:	clc    
  4079d2:	or     BYTE PTR [eax],bl
  4079d4:	add    BYTE PTR [eax],al
  4079d6:	(bad)  
  4079d7:	push   edx
  4079d8:	repz call edi
  4079db:	pop    ss
  4079dc:	add    BYTE PTR [edx-0x28],ch
  4079df:	jns    0x4079e0
  4079e1:	imul   ecx,eax,0x318cff79
  4079e7:	clc    
  4079e8:	aaa    
  4079e9:	push   eax
  4079ea:	mov    esp,0xc6f736b0
  4079ef:	xchg   edx,eax
  4079f0:	sar    esi,cl
  4079f2:	inc    esp
  4079f3:	xchg   ebp,eax
  4079f4:	inc    eax
  4079f5:	jne    0x4079ac
  4079f7:	xchg   ebp,eax
  4079f8:	ret    0x317e
  4079fb:	cmp    eax,0x381dc00c
  407a00:	sub    al,BYTE PTR [ecx+0x3d300000]
  407a06:	add    ebp,DWORD PTR [eax+0x6d]
  407a09:	adc    eax,0x408fffc3
  407a0e:	adc    ebp,eax
  407a10:	or     eax,0xe1ff3fad
  407a15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a16:	push   edx
  407a17:	lea    ebp,[ecx+ebp*8-0x729100c9]
  407a1e:	aad    0xe7
  407a20:	std    
  407a21:	int3   
  407a22:	aas    
  407a23:	jmp    FWORD PTR [eax+0x56f732b0]
  407a29:	add    ch,BYTE PTR [ebx]
  407a2b:	stos   BYTE PTR es:[edi],al
  407a2c:	popf   
  407a2d:	sbb    al,BYTE PTR [eax+0x6a]
  407a30:	xor    DWORD PTR [ebp+0x3cf038f4],eax
  407a36:	inc    eax
  407a37:	mov    ch,0x41
  407a39:	sub    bh,BYTE PTR [edi]
  407a3b:	jmp    FWORD PTR [esi]
  407a3d:	mov    al,ds:0x81d4e80e
  407a42:	aas    
  407a43:	jmp    FWORD PTR [eax+0x16f727af]
  407a49:	inc    edx
  407a4a:	stos   BYTE PTR es:[edi],al
  407a4b:	call   DWORD PTR [esi+0x3140fd19]
  407a51:	push   edx
  407a52:	jns    0x407a44
  407a54:	push   es
  407a55:	push   0x3f
  407a57:	(bad)  
  407a58:	jl     0x407a8b
  407a5a:	sub    edx,DWORD PTR [edx-0x76c08662]
  407a60:	lods   al,BYTE PTR ds:[esi]
  407a61:	adc    ecx,DWORD PTR [ecx+0x132ade37]
  407a67:	add    al,0x0
  407a69:	add    BYTE PTR [ecx-0x9],cl
  407a6c:	iret   
  407a6d:	(bad)  
  407a6e:	into   
  407a6f:	sub    DWORD PTR [esp+esi*1-0x42],edx
  407a73:	sub    al,BYTE PTR [esi-0x6ee7bbc1]
  407a79:	mov    bh,0x87
  407a7b:	sub    dh,BYTE PTR [esi-0x73]
  407a7e:	mov    ah,0x37
  407a80:	jbe    0x407ac1
  407a82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a83:	mov    ebp,0xed48abe8
  407a88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a89:	add    edx,DWORD PTR [esi-0x71c8a6a0]
  407a8f:	sub    cl,BYTE PTR [esi-0x47]
  407a92:	cmp    bh,BYTE PTR [eiz*4+0x702a7e6e]
  407a99:	mov    DWORD PTR [ecx-0x24c0c9de],ecx
  407a9f:	adc    eax,ecx
  407aa1:	lds    ebp,FWORD PTR [ecx]
  407aa3:	aad    0xe8
  407aa5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407aa7:	and    edx,DWORD PTR [esi]
  407aa9:	aas    
  407aaa:	push   esi
  407aab:	sub    bl,BYTE PTR [edi+ecx*1+0x3f3dd459]
  407ab2:	inc    esi
  407ab3:	pushf  
  407ab4:	ins    BYTE PTR es:[edi],dx
  407ab5:	pusha  
  407ab6:	inc    esi
  407ab7:	sub    bh,dh
  407ab9:	xor    BYTE PTR [edi+ebp*1-0x2],0x3e
  407abe:	cs adc eax,0x67b20c74
  407ac4:	leave  
  407ac5:	ss push ds
  407ac7:	sub    ch,cl
  407ac9:	mov    bh,0x8d
  407acb:	xchg   ebp,eax
  407acc:	xchg   esp,eax
  407acd:	das    
  407ace:	add    BYTE PTR [eax],al
  407ad0:	push   es
  407ad1:	sub    cl,dh
  407ad3:	add    edi,DWORD PTR [ebp-0x38]
  407ad6:	imul   eax,DWORD PTR [eax+0x3ebe2209],0x19ffa031
  407ae0:	popf   
  407ae1:	sub    edi,edi
  407ae3:	mov    esi,0xf1752964
  407ae8:	or     ch,BYTE PTR [ebp+0x29179ea7]
  407aee:	mov    ch,0x85
  407af0:	pop    es
  407af1:	sub    edi,edi
  407af3:	mov    cs,WORD PTR [ecx+0x4ab6e811]
  407af9:	sub    edi,edi
  407afb:	jle    0x407b36
  407afd:	cmp    al,0xf7
  407aff:	jbe    0x407b70
  407b01:	sub    DWORD PTR [ebp-0x1f],esi
  407b04:	pop    edx
  407b05:	push   ebx
  407b06:	test   al,0x66
  407b08:	pop    edi
  407b09:	sub    DWORD PTR [ebp-0xd6a0bb],esi
  407b0f:	push   esi
  407b10:	leave  
  407b11:	adc    eax,ebp
  407b13:	call   0x33f9:0x46ff291a
  407b1a:	idiv   DWORD PTR [esi]
  407b1c:	aaa    
  407b1d:	sub    DWORD PTR [ebp-0x1f],esi
  407b20:	sbb    ch,BYTE PTR [edi-0x58]
  407b23:	cs daa 
  407b25:	sub    DWORD PTR [ebp-0xd6d8bb],esi
  407b2b:	push   ds
  407b2c:	cdq    
  407b2d:	adc    eax,ebp
  407b2f:	jle    0x407b0b
  407b31:	sub    bh,bh
  407b33:	push   cs
  407b34:	add    BYTE PTR [eax],al
  407b36:	leave  
  407b37:	das    
  407b38:	test   DWORD PTR [esi],0x52a13bff
  407b3e:	imul   DWORD PTR [eax]
  407b40:	(bad)  
  407b41:	cmp    al,0x52
  407b43:	and    edi,edi
  407b45:	out    dx,al
  407b46:	pop    ebx
  407b47:	sub    BYTE PTR [ebx-0x4ad6a31a],0xcd
  407b4e:	pop    esp
  407b4f:	sub    edi,edi
  407b51:	sar    DWORD PTR [eax+0x44ceff7c],0x5f
  407b58:	call   0xff273a5d
  407b5d:	call   0x3f36ea
  407b62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b63:	mov    al,ds:0xe697f7db
  407b68:	out    0x75,eax
  407b6a:	and    edi,0xfffffffe
  407b6d:	(bad)  
  407b6e:	jge    0x407b50
  407b70:	idiv   bh
  407b72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b73:	out    0x74,al
  407b75:	or     al,0xb7
  407b77:	pusha  
  407b78:	pop    es
  407b79:	call   0x3f6273
  407b7e:	aaa    
  407b7f:	mov    eax,ds:0xe727f7ef
  407b84:	out    0x59,eax
  407b86:	repz out 0xfe,al
  407b89:	dec    ebp
  407b8b:	in     al,dx
  407b8c:	call   0xff2771e2
  407b91:	jmp    FWORD PTR [ebp-0x18]
  407b94:	out    0xa3,eax
  407b96:	jne    0x407bac
  407b98:	add    cl,cl
  407b9a:	add    BYTE PTR [eax],al
  407b9c:	dec    edx
  407b9d:	add    al,0x0
  407b9f:	push   ebp
  407ba0:	add    esp,esp
  407ba2:	add    ah,0x24
  407ba5:	jle    0x407ba6
  407ba7:	imul   edi,DWORD PTR [esi-0x19],0x7b400874
  407bae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407baf:	push   DWORD PTR [edi]
  407bb1:	popf   
  407bb2:	inc    ebp
  407bb3:	cld    
  407bb4:	mov    al,0x44
  407bb6:	cmp    BYTE PTR [ecx+0x58],al
  407bb9:	jl     0x407bbc
  407bbb:	add    BYTE PTR [eax-0x6c],cl
  407bbe:	push   DWORD PTR [ebp+0x40]
  407bc1:	cld    
  407bc2:	idiv   ch
  407bc4:	daa    
  407bc5:	jmp    0x5321cc31
  407bca:	(bad)  
  407bcb:	(bad)  
  407bcc:	cmp    eax,0x8412845
  407bd1:	jmp    0x5571844a
  407bd6:	daa    
  407bd7:	std    
  407bd8:	push   es
  407bd9:	push   edi
  407bda:	cmp    al,0x75
  407bdc:	std    
  407bdd:	dec    esi
  407bde:	mov    dh,0x7
  407be0:	or     eax,ebp
  407be2:	imul   edi,edi,0xffffffee
  407be5:	je     0x407c28
  407be7:	add    al,0x31
  407be9:	add    BYTE PTR [ecx+0x5f79b0ec],cl
  407bef:	not    esi
  407bf1:	xchg   BYTE PTR [esi+0x3cedcd45],cl
  407bf7:	jne    0x407c1a
  407bf9:	xchg   esi,eax
  407bfa:	mov    dh,0xb
  407bfc:	leave  
  407bfd:	stc    
  407bfe:	mov    esi,0xb60000ff
  407c03:	and    al,BYTE PTR [ebx+0xf]
  407c06:	mov    ah,0xdf
  407c08:	add    DWORD PTR [eax],eax
  407c0a:	xor    DWORD PTR [esi-0x3a],ebp
  407c0d:	div    DWORD PTR [ecx]
  407c0f:	cmp    eax,0x706e0003
  407c14:	aaa    
  407c15:	push   DWORD PTR [esi]
  407c17:	cmp    eax,0x53316a03
  407c1c:	add    ebp,DWORD PTR [edx+0x31]
  407c1f:	inc    ebx
  407c20:	add    ecx,DWORD PTR [ebp-0x732d1f14]
  407c26:	mov    ah,0xe9
  407c28:	xor    edi,edi
  407c2a:	lea    di,[esi*2-0x44a11a7]
  407c32:	dec    ecx
  407c33:	pop    ds
  407c34:	mov    esi,0x43324eff
  407c39:	je     0x407c67
  407c3b:	adc    al,0x82
  407c3d:	add    DWORD PTR [ecx],esi
  407c3f:	cmp    eax,0x7c09c3ab
  407c44:	add    edi,edi
  407c46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c47:	dec    ebp
  407c48:	sub    edi,DWORD PTR [ecx]
  407c4a:	xlat   BYTE PTR ds:[ebx]
  407c4b:	xor    eax,0x13aa503b
  407c50:	mov    ecx,0xd61fac89
  407c55:	cmp    ecx,DWORD PTR [esi]
  407c57:	les    edi,FWORD PTR [edx]
  407c59:	sub    al,0x58
  407c5b:	jbe    0x407c2b
  407c5d:	cmp    ebp,DWORD PTR [eax-0x9cc4670]
  407c63:	sar    DWORD PTR es:[ebx+0x26980000],1
  407c6a:	mov    dh,0xae
  407c6c:	out    0xae,al
  407c6e:	pop    ecx
  407c6f:	std    
  407c70:	jno    0x407c86
  407c72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c73:	jno    0x407c56
  407c75:	push   ds
  407c76:	sahf   
  407c77:	cmp    ecx,esi
  407c79:	mov    al,ds:0x78b32be4
  407c7e:	mov    ?,WORD PTR [ebx]
  407c80:	test   al,0x90
  407c82:	lea    esi,[ebx]
  407c84:	mov    dh,0x26
  407c86:	adc    eax,DWORD PTR [ecx+ebx*1]
  407c89:	xchg   DWORD PTR [eax+0x3425a6c4],esi
  407c8f:	xor    al,0xa6
  407c91:	cmp    bx,WORD PTR es:[eax+ebx*1]
  407c96:	push   ecx
  407c97:	mov    ds:0x8d5626dd,eax
  407c9c:	lods   al,BYTE PTR ds:[esi]
  407c9d:	xor    edx,DWORD PTR [esi+0x3b]
  407ca0:	jle    0x407c5b
  407ca2:	call   0xa82d7252
  407ca7:	add    ebp,DWORD PTR [esi+0x60]
  407caa:	cmp    DWORD PTR [ebx],esi
  407cac:	data16 es cs mov cl,0x2a
  407cb1:	cmp    al,0xb5
  407cb3:	push   0x81702656
  407cb8:	pop    ebp
  407cb9:	push   ds
  407cba:	push   ss
  407cbb:	cmp    ebx,ebx
  407cbd:	adc    eax,DWORD PTR [ecx-0x172b077e]
  407cc3:	cmp    bh,BYTE PTR [ebx+eiz*1-0xa]
  407cc7:	cmp    ch,BYTE PTR [esi]
  407cc9:	add    BYTE PTR es:[eax+eax*1+0x0],bh
  407cce:	cs cmp al,0x31
  407cd1:	cmp    al,0x5a
  407cd3:	and    eax,0x1d4a6c89
  407cd8:	(bad)  
  407cd9:	(bad)  
  407cdb:	and    eax,0xd5058567
  407ce0:	dec    ebp
  407ce2:	and    DWORD PTR [edi+esi*8],0x75253bc6
  407ce9:	in     eax,dx
  407cea:	sbb    bh,dh
  407cec:	lods   al,BYTE PTR ds:[esi]
  407ced:	mov    dh,0x2b
  407cef:	fwait
  407cf0:	test   DWORD PTR [ebp+0x6aff2523],ecx
  407cf6:	pop    ecx
  407cf7:	xor    bh,dh
  407cf9:	sahf   
  407cfa:	or     edx,DWORD PTR [esi*2-0x1f985020]
  407d01:	xchg   esi,eax
  407d02:	sti    
  407d03:	and    al,0x0
  407d05:	std    
  407d06:	xchg   ecx,eax
  407d07:	xchg   edx,eax
  407d08:	mov    ebp,0xff25638d
  407d0d:	jmp    0x2cc346e8
  407d12:	dec    edx
  407d13:	sbb    eax,0xa03266ff
  407d18:	push   edx
  407d19:	shl    DWORD PTR [edx],1
  407d1b:	adc    al,0xef
  407d1d:	xchg   edi,eax
  407d1e:	dec    ebx
  407d1f:	lahf   
  407d20:	pop    es
  407d21:	inc    ecx
  407d22:	bound  ebp,QWORD PTR [edi-0x1]
  407d25:	inc    esi
  407d26:	cmp    ebx,DWORD PTR [edi-0x14]
  407d29:	sub    esp,DWORD PTR ss:0x3c3abcff
  407d30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d31:	xchg   DWORD PTR [eax],eax
  407d33:	add    BYTE PTR [ebx],bl
  407d35:	and    eax,0x1d0a5cff
  407d3a:	call   FWORD PTR [esi]
  407d3c:	or     ebx,DWORD PTR [edi+0x6ea00107]
  407d42:	dec    DWORD PTR [esi]
  407d44:	sti    
  407d45:	pop    esi
  407d46:	in     al,0x0
  407d48:	aaa    
  407d49:	jmp    0x407d49
  407d4b:	jmp    DWORD PTR [ebp+0x7688e819]
  407d51:	jmp    0xfff6:0xf165fffe
  407d58:	por    mm6,QWORD PTR [eax+ecx*1-0x20]
  407d5d:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  407d5f:	(bad)  
  407d60:	fucomip st,st(2)
  407d62:	mov    ah,0xdc
  407d64:	out    0xea,eax
  407d66:	(bad)  
  407d67:	push   DWORD PTR ds:0xb66ce818
  407d6d:	jmp    0xfff6:0xf465fffe
  407d74:	(bad)  
  407d75:	div    DWORD PTR [ebp-0x57]
  407d78:	(bad)  
  407d7c:	mov    eax,0xb0fffee2
  407d81:	jbe    0x407d2b
  407d83:	jmp    FWORD PTR [edi+0x37ecb4ea]
  407d89:	jmp    0x407d89
  407d8b:	call   0x3f36c8
  407d90:	pop    ds
  407d91:	mov    ch,0xe7
  407d93:	test   DWORD PTR [edi],0x55e7eb
  407d99:	add    cl,al
  407d9b:	jmp    0xfff6:0xcba5fffe
  407da2:	fcomip st,st(7)
  407da4:	dec    ecx
  407da5:	test   eax,0xb5feeaef
  407daa:	cmp    bl,ah
  407dac:	(bad)  
  407dad:	jmp    FWORD PTR [edi]
  407daf:	jne    0x407dbc
  407db1:	jmp    DWORD PTR [ebp+0xe3de818]
  407db7:	jmp    0x407db7
  407db9:	push   ebp
  407dbb:	fcomip st,st(6)
  407dbd:	jmp    FWORD PTR [edi]
  407dbf:	clc    
  407dc0:	sub    eax,0x38fe31a9
  407dc5:	push   esp
  407dc7:	add    ch,BYTE PTR [ebx]
  407dc9:	push   ecx
  407dca:	aaa    
  407dcb:	or     eax,0x21a4ff39
  407dd0:	sub    edi,DWORD PTR [eax-0x56]
  407dd3:	sub    eax,0x41f3c903
  407dd8:	add    edx,DWORD PTR [ebp-0x56]
  407ddb:	dec    ecx
  407ddc:	test   ah,al
  407dde:	or     eax,0x1e6a03c8
  407de3:	dec    edx
  407de4:	scas   al,BYTE PTR es:[edi]
  407de5:	pop    es
  407de6:	or     esi,ebp
  407de8:	popa   
  407de9:	push   esi
  407deb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407dec:	mov    ebp,0xfa9459fb
  407df1:	inc    eax
  407df2:	xor    DWORD PTR [edx-0x12],ebp
  407df5:	push   edx
  407df6:	or     ah,ch
  407df8:	add    edi,edi
  407dfa:	pop    esp
  407dfb:	and    eax,0xf62b
  407e00:	int3   
  407e01:	cmp    BYTE PTR [eax],0x68
  407e04:	mov    BYTE PTR [edx+eax*8-0x1],al
  407e08:	push   esi
  407e09:	das    
  407e0a:	add    eax,DWORD PTR [eax]
  407e0c:	mov    cl,0x9a
  407e0e:	scas   al,BYTE PTR es:[edi]
  407e0f:	pop    es
  407e10:	cdq    
  407e11:	cdq    
  407e12:	jmp    DWORD PTR ss:[esi-0x61045256]
  407e19:	sub    BYTE PTR [ebx],cl
  407e1b:	call   0xff791122
  407e20:	js     0x407e11
  407e22:	(bad)  
  407e23:	(bad)  
  407e24:	fnsave [ebp-0x1e8a7eda]
  407e2a:	das    
  407e2b:	push   DWORD PTR [esi-0x58]
  407e2e:	mov    ebp,0xade201fb
  407e33:	pcmpgtd mm4,QWORD PTR [eax+0x7]
  407e37:	call   0x43e474
  407e3c:	sub    dl,BYTE PTR [ecx+ebp*1]
  407e3f:	or     BYTE PTR [ebx+edx*4+0x5b3103e9],dh
  407e46:	lods   al,BYTE PTR ds:[esi]
  407e47:	cmp    esi,DWORD PTR [ecx]
  407e49:	adc    al,0xe9
  407e4b:	add    ebp,DWORD PTR [esi-0x27]
  407e4e:	cld    
  407e4f:	aaa    
  407e50:	ss adc al,0xe9
  407e53:	lods   eax,DWORD PTR ds:[esi]
  407e54:	lods   eax,DWORD PTR es:[esi]
  407e56:	call   0xe8ed9d08
  407e5b:	xchg   BYTE PTR [eax+ebp*1+0x39],ch
  407e5f:	mov    DWORD PTR [edi+eiz*1+0x37d6],esi
  407e66:	push   es
  407e67:	(bad)  
  407e68:	aad    0xb1
  407e6a:	push   es
  407e6b:	and    edx,DWORD PTR [eax+edi*1+0x9]
  407e6f:	and    DWORD PTR [ebx+0x4],eax
  407e72:	xor    DWORD PTR [edi],ecx
  407e74:	test   eax,0x1c2f30b0
  407e79:	mov    DWORD PTR [edi+ebp*1-0x3c29c84a],esi
  407e80:	jae    0x407e03
  407e82:	lds    ebp,FWORD PTR [edx]
  407e84:	sahf   
  407e85:	aaa    
  407e86:	popa   
  407e87:	and    ebx,DWORD PTR [esp+edx*1]
  407e8a:	mov    esi,0x372bdca8
  407e8f:	outs   dx,DWORD PTR ds:[esi]
  407e90:	xchg   BYTE PTR [edi],dh
  407e92:	mov    eax,0xa62f7998
  407e97:	and    ah,dl
  407e99:	inc    ebx
  407e9a:	and    eax,0x857969f6
  407e9f:	sub    ah,BYTE PTR [esi+0x37]
  407ea2:	xor    DWORD PTR [eax+0x2286abff],ebp
  407ea8:	inc    esi
  407ea9:	jbe    0x407f29
  407eab:	push   0x22762f3d
  407eb0:	inc    esi
  407eb1:	jno    0x407f14
  407eb3:	sub    bh,BYTE PTR [esi]
  407eb5:	aaa    
  407eb6:	data16 test al,0xff
  407eb9:	loopne 0x407ec5
  407ebb:	push   ebx
  407ebc:	leave  
  407ebd:	cs push ds
  407ebf:	and    esi,DWORD PTR [ebp-0xdce1e7]
  407ec5:	adc    DWORD PTR [esi+0x7a],ecx
  407ec8:	call   DWORD PTR [esi]
  407eca:	add    BYTE PTR [eax],al
  407ecc:	push   es
  407ecd:	fincstp 
  407ecf:	add    ch,BYTE PTR [ebp+0x5d057522]
  407ed5:	mov    al,ds:0x4b32e979
  407eda:	ret    0x32e5
  407edd:	(bad)  
  407ede:	mov    bh,ch
  407ee0:	mov    bl,0x58
  407ee2:	cld    
  407ee3:	push   ebx
  407ee4:	xor    eax,0xc1de17ae
  407ee9:	sbb    eax,ebp
  407eeb:	sub    eax,0x60ff2190
  407ef0:	icebp  
  407ef1:	sbb    eax,0xd4eda768
  407ef6:	(bad)  
  407ef7:	mov    ebp,0x2828c6e1
  407efc:	xor    eax,0xae17521
  407f01:	idiv   esi
  407f03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f04:	pop    es
  407f05:	lods   al,BYTE PTR ds:[esi]
  407f06:	fucom  st(0)
  407f08:	in     eax,dx
  407f09:	and    DWORD PTR [edi-0x15],esp
  407f0c:	xor    dl,BYTE PTR [eax+eax*4]
  407f0f:	mov    es,WORD PTR [ecx+0x67dae819]
  407f15:	and    edi,edi
  407f17:	adc    DWORD PTR [esi-0x25],edx
  407f1a:	inc    eax
  407f1b:	jmp    0xc0936687
  407f20:	ins    DWORD PTR es:[edi],dx
  407f21:	and    esi,edi
  407f23:	fdivr  QWORD PTR [edx]
  407f25:	sub    al,0x0
  407f27:	pop    esi
  407f28:	aas    
  407f29:	and    DWORD PTR [eax+0x5e],ebp
  407f2c:	jge    0x407f02
  407f2e:	inc    eax
  407f30:	add    BYTE PTR [eax],al
  407f32:	xor    BYTE PTR [eax+eax*1],dl
  407f35:	add    al,bl
  407f37:	jmp    0xf74087b0
  407f3c:	std    
  407f3d:	jmp    DWORD PTR [edi]
  407f3f:	jmp    0xe807:0x6407fc74
  407f46:	push   0xffffffb4
  407f48:	(bad)  
  407f49:	inc    DWORD PTR [ecx]
  407f4b:	rol    DWORD PTR [ebx],cl
  407f4d:	add    BYTE PTR [ebp-0x72],bh
  407f50:	in     al,dx
  407f51:	call   FWORD PTR [ebp-0x7c0b17e7]
  407f57:	jmp    0x6838:0x71580bfe
  407f5e:	in     al,dx
  407f5f:	sbb    al,BYTE PTR [eax+0x0]
  407f62:	mov    eax,0x17ab88ec
  407f67:	out    0x4f,eax
  407f69:	push   eax
  407f6a:	pusha  
  407f6b:	sbb    BYTE PTR [eax],al
  407f6d:	out    dx,eax
  407f6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f6f:	outs   dx,DWORD PTR ds:[esi]
  407f70:	sbb    DWORD PTR [edx],edi
  407f72:	dec    ecx
  407f73:	sbb    BYTE PTR [eax-0x1],dl
  407f76:	sub    eax,0x9450e810
  407f7b:	out    0xfe,al
  407f7d:	pop    eax
  407f7e:	jo     0x407f95
  407f80:	add    bh,ch
  407f82:	inc    esi
  407f83:	jo     0x407fa3
  407f85:	cmp    bl,BYTE PTR [ecx]
  407f87:	sbb    BYTE PTR [eax-0x1],dl
  407f8a:	sbb    eax,0x943ce810
  407f8f:	out    0xfe,al
  407f91:	call   0x3f3ec6
  407f96:	add    BYTE PTR [eax],al
  407f98:	loope  0x407f6f
  407f9a:	pop    es
  407f9b:	add    BYTE PTR ds:0xcc83ec8b,bh
  407fa1:	fld    TBYTE PTR [ecx+0x0]
  407fa4:	xor    bh,ch
  407fa6:	(bad)  
  407fa7:	jne    0x407f29
  407fa9:	in     al,dx
  407faa:	mov    DWORD PTR [edi+eiz*8+0x314588e6],esp
  407fb1:	(bad)  
  407fb2:	test   eax,0xb477619
  407fb7:	call   0xff755980
  407fbc:	fisttp DWORD PTR ds:0xd3297535
  407fc2:	mov    bh,bh
  407fc4:	push   esi
  407fc5:	icebp  
  407fc6:	test   eax,0xb7f4e1b
  407fcb:	call   0xff758180
  407fd0:	ds jg  0x40800a
  407fd3:	(bad)  
  407fd4:	mov    esp,0xd5a42b32
  407fd9:	push   ss
  407fda:	xor    eax,0x339f3c9
  407fdf:	push   ebp
  407fe0:	stos   BYTE PTR es:[edi],al
  407fe1:	sbb    DWORD PTR [ecx-0x51d0ea3c],eax
  407fe7:	or     ebx,DWORD PTR [ecx]
  407fe9:	retf   
  407fea:	push   0x432306ff
  407fef:	lgs    ecx,FWORD PTR [edx-0x4bcefffd]
  407ff6:	mov    ebp,0x13d8b2fb
  407ffb:	add    BYTE PTR [eax],al
  407ffd:	add    BYTE PTR [ebp+0x2f],bl
  408000:	xor    al,0x75
  408002:	inc    ecx
  408003:	data16 scas al,BYTE PTR es:[edi]
  408005:	sti    
  408006:	leave  
  408007:	push   edx
  408008:	imul   edi,edi,0xfbbda4ce
  40800e:	pop    ecx
  40800f:	ds stc 
  408011:	inc    eax
  408012:	xor    DWORD PTR [esi-0x49360452],eax
  408018:	push   0xabfdaeff
  40801d:	jmp    DWORD PTR [esi-0x61af8a72]
  408023:	and    BYTE PTR [ebx],cl
  408025:	call   0xff74f59c
  40802a:	cdq    
  40802b:	adc    al,0x3d
  40802d:	pop    ebp
  40802e:	xchg   BYTE PTR [edi],bl
  408030:	shl    DWORD PTR [esi+0x34e8d538],1
  408036:	cld    
  408037:	pop    ds
  408038:	inc    ecx
  408039:	popf   
  40803a:	cwde   
  40803b:	pop    ds
  40803c:	inc    esi
  40803d:	ror    esi,cl
  40803f:	adc    al,0xe9
  408041:	and    al,0x9f
  408043:	les    esi,FWORD PTR ds:0x8b2c2eae
  408049:	dec    ebx
  40804a:	dec    esi
  40804b:	pop    ds
  40804c:	adc    DWORD PTR [eax-0x71],esi
  40804f:	pop    ds
  408050:	push   ds
  408051:	stos   DWORD PTR es:[edi],eax
  408052:	jecxz  0x40802d
  408054:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408055:	add    esi,DWORD PTR [esi]
  408057:	test   eax,0x6a742b0c
  40805c:	push   es
  40805d:	xor    al,0x81
  40805f:	lods   al,BYTE PTR ds:[esi]
  408060:	call   0xe408068
  408065:	pop    esi
  408066:	cdq    
  408067:	xor    al,0x9c
  408069:	or     al,0x1
  40806b:	cmp    cl,0x1e
  40806e:	out    0x1c,al
  408070:	mov    ds:0x8933de75,eax
  408075:	cwde   
  408076:	adc    eax,ebp
  408078:	neg    BYTE PTR ds:0xf7d93054
  40807e:	xchg   edx,eax
  40807f:	xor    esp,esi
  408081:	ret    
  408082:	push   eax
  408083:	add    eax,0xd4772f31
  408088:	xlat   BYTE PTR ds:[ebx]
  408089:	test   al,0xe0
  40808b:	sbb    edx,DWORD PTR [ecx+0x4c]
  40808e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40808f:	xor    ebx,ecx
  408091:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408092:	inc    esi
  408093:	xor    edi,DWORD PTR [esi-0x36cfe3e2]
  408099:	lods   al,BYTE PTR ds:[esi]
  40809a:	inc    esi
  40809b:	xor    ebp,DWORD PTR [esi+0x3100ab4c]
  4080a1:	leave  
  4080a2:	jno    0x4080c4
  4080a4:	mov    dl,0x57
  4080a6:	add    BYTE PTR [ebp-0x49],dh
  4080a9:	push   ds
  4080aa:	imul   edx,ebx,0x5107a943
  4080b0:	push   es
  4080b1:	jae    0x4080b2
  4080b3:	pop    esi
  4080b4:	cld    
  4080b5:	fdivr  st,st(3)
  4080b7:	ret    
  4080b8:	xor    ch,BYTE PTR [edx+0x16a84e19]
  4080be:	call   0xff5fa2ce
  4080c3:	shl    DWORD PTR [edx],cl
  4080c5:	stos   BYTE PTR es:[edi],al
  4080c6:	and    dh,BYTE PTR [esi]
  4080c8:	add    BYTE PTR [eax],al
  4080ca:	cwde   
  4080cb:	push   ss
  4080cc:	call   0xff5f84a8
  4080d1:	xchg   ebx,eax
  4080d2:	xor    ch,BYTE PTR [edx+0x16781e1b]
  4080d8:	call   0xff5f84c0
  4080dd:	adc    DWORD PTR [ebp-0x3b16bf26],0x1a74fefb
  4080e7:	ss sti 
  4080e9:	mul    DWORD PTR [ebx+0x1d]
  4080ec:	push   0xffd51f48
  4080f1:	push   edx
  4080f2:	push   cs
  4080f3:	pop    ds
  4080f4:	jne    0x4080e7
  4080f6:	sbb    dh,BYTE PTR [eax]
  4080f8:	(bad)  
  4080f9:	(bad)  
  4080fa:	inc    ebx
  4080fb:	lods   al,BYTE PTR ds:[esi]
  4080fc:	mov    al,ds:0x691df413
  408101:	in     eax,0x23
  408103:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408104:	pop    es
  408105:	rol    DWORD PTR [ecx+0x23b6ff1e],1
  40810b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40810c:	sti    
  40810d:	scas   al,BYTE PTR es:[edi]
  40810e:	mov    DWORD PTR ds:0x1d4e1be8,edx
  408114:	push   DWORD PTR [eax+0x3c001874]
  40811a:	xor    BYTE PTR ss:[ecx-0xdab55b],al
  408121:	add    BYTE PTR [edi+0x38fc4594],ch
  408127:	loope  0x40819d
  408129:	adc    BYTE PTR [edi],bl
  40812b:	pop    esp
  40812c:	or     ebp,eax
  40812e:	add    BYTE PTR [eax],al
  408130:	shr    BYTE PTR [ecx-0x1],0xff
  408134:	adc    ecx,0xe
  408137:	test   edi,edx
  408139:	sbb    BYTE PTR [eax],al
  40813b:	add    BYTE PTR [edi+0x4c],al
  40813e:	test   DWORD PTR [eax],0xc7001158
  408144:	xchg   ebp,eax
  408145:	in     eax,0xfe
  408147:	pop    es
  408148:	dec    eax
  408149:	adc    DWORD PTR [edx+0x0],ebp
  40814c:	jb     0x40815f
  40814e:	push   0x0
  408150:	jb     0x408163
  408152:	lea    eax,[ebp+0x24]
  408155:	inc    ecx
  408156:	mov    WORD PTR [ebp-0x125dc],es
  40815c:	js     0x408140
  40815e:	je     0x408158
  408160:	aas    
  408161:	pop    esp
  408162:	sti    
  408163:	call   0x3fea8a
  408168:	and    edx,ecx
  40816a:	jae    0x408171
  40816c:	xor    DWORD PTR [edi],ebx
  40816e:	add    BYTE PTR [eax],al
  408170:	sbb    BYTE PTR [ecx-0x3d],bh
  408173:	sub    BYTE PTR [ecx+0x18],bl
  408176:	push   DWORD PTR [ebp-0x8]
  408179:	clc    
  40817a:	sub    al,0xa9
  40817c:	(bad)  
  40817e:	dec    edi
  40817f:	mov    ebp,DWORD PTR [eax-0x580b7b64]
  408185:	loop   0x408185
  408187:	push   eax
  408188:	cmp    al,BYTE PTR [eax]
  40818a:	sbb    eax,0x88e29fa9
  40818f:	test   DWORD PTR [eax+0xfffeda],ecx
  408195:	add    BYTE PTR [eax-0x60005b9a],ah
  40819b:	jge    0x40819c
  40819d:	xor    DWORD PTR [bp+di],ebp
  4081a0:	in     al,dx
  4081a1:	inc    eax
  4081a2:	xor    DWORD PTR [esi-0x6a610f89],ecx
  4081a8:	xor    edi,edi
  4081aa:	and    al,0x2f
  4081ac:	sbb    esi,DWORD PTR [esi-0x37]
  4081af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4081b0:	xor    BYTE PTR [ecx-0xc7614c],cl
  4081b6:	xchg   BYTE PTR [eax+0x3],al
  4081b9:	push   0xffc2f22d
  4081be:	ja     0x40823f
  4081c0:	xor    al,0xf7
  4081c2:	outs   dx,BYTE PTR ds:[esi]
  4081c3:	int    0x30
  4081c5:	jne    0x4081fc
  4081c7:	ret    
  4081c8:	int3   
  4081c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4081ca:	pop    esi
  4081cb:	fnstsw WORD PTR [edx-0x7b]
  4081ce:	dec    ecx
  4081cf:	fnsave [eax]
  4081d1:	push   DWORD PTR [edx+0x46f71faf]
  4081d7:	cmc    
  4081d8:	add    esi,DWORD PTR [ecx+eax*1-0x7d]
  4081dc:	add    eax,DWORD PTR [eax]
  4081de:	inc    esi
  4081df:	les    ebx,FWORD PTR [ebx+0x36c6bc7]
  4081e5:	(bad)  
  4081e6:	fadd   QWORD PTR [ecx]
  4081e8:	cmp    edi,edi
  4081ea:	push   ds
  4081eb:	sbb    esi,DWORD PTR [esi+0x3b170907]
  4081f1:	dec    DWORD PTR [esi]
  4081f3:	xchg   esi,eax
  4081f4:	add    al,BYTE PTR [eax]
  4081f6:	push   ss
  4081f7:	je     0x408194
  4081f9:	rol    DWORD PTR [eax],1
  4081fb:	add    BYTE PTR [ebx],bh
  4081fd:	in     al,dx
  4081fe:	add    edi,edi
  408200:	mov    esp,0xeeff3851
  408205:	dec    edx
  408206:	mov    dh,0x7
  408208:	fnstcw WORD PTR [esi+0x3a]
  40820b:	(bad)  
  40820c:	fisubr WORD PTR [esi+0x62dee86d]
  408212:	xor    BYTE PTR [eax],al
  408214:	inc    ebp
  408215:	sbb    eax,0x14c6ff9b
  40821a:	xchg   esi,eax
  40821b:	jno    0x408266
  40821d:	dec    esp
  40821e:	jecxz  0x4081e2
  408220:	mov    dh,0x1a
  408222:	pop    esp
  408223:	sbb    esp,DWORD PTR [esi+0x1c308e1b]
  408229:	or     al,0x91
  40822b:	jne    0x408295
  40822d:	sbb    edi,DWORD PTR [esi-0x65]
  408230:	xor    DWORD PTR [esi+eax*4],edx
  408233:	jno    0x40824e
  408235:	inc    esi
  408236:	mov    bl,0xc2
  408238:	xchg   BYTE PTR [edx],bl
  40823a:	pushf  
  40823b:	sbb    eax,DWORD PTR [esi-0x3cfa1e5]
  408241:	or     eax,DWORD PTR [ecx-0x73]
  408244:	js     0x408261
  408246:	dec    esi
  408247:	xor    BYTE PTR [eax+ebp*1+0x2c5e303e],bl
  40824e:	sub    DWORD PTR [edi+0x56],esp
  408251:	sbb    esi,DWORD PTR [esi]
  408253:	jbe    0x4082ae
  408255:	and    ebp,DWORD PTR [esi]
  408257:	xor    BYTE PTR [ecx+0x61],bl
  40825a:	dec    ebp
  40825b:	xor    BYTE PTR [esi],bh
  40825d:	sbb    edx,DWORD PTR [ebx+esi*1+0x0]
  408261:	add    BYTE PTR [esi],bh
  408263:	sbb    edx,DWORD PTR [esi]
  408265:	xor    BYTE PTR [eax+ecx*1+0x2c2eb60e],ah
  40826c:	cmp    eax,0xfe1b1e31
  408271:	jne    0x408294
  408273:	and    esi,esi
  408275:	das    
  408276:	sbb    DWORD PTR [ebp+0x45],edi
  408279:	xor    BYTE PTR [esi],al
  40827b:	sbb    ebp,DWORD PTR [esp+ebp*1]
  40827e:	or     BYTE PTR [edi+ebx*8+0x2f],cl
  408282:	neg    BYTE PTR [edx]
  408284:	pop    esp
  408285:	xor    cl,bl
  408287:	ss push edi
  408289:	add    al,0x31
  40828b:	dec    ebp
  40828c:	stos   DWORD PTR es:[edi],eax
  40828d:	add    BYTE PTR [ecx],dh
  40828f:	shl    DWORD PTR [ecx+0x20],0xd6
  408293:	mov    al,ds:0x4d2ae4ff
  408298:	test   al,0xae
  40829a:	push   ss
  40829b:	xadd   BYTE PTR ds:0xe3dbb2cc,bl
  4082a2:	in     eax,dx
  4082a3:	sbb    cl,BYTE PTR [edi-0x7f]
  4082a6:	jg     0x40831a
  4082a8:	dec    DWORD PTR [esi-0x16983583]
  4082ae:	xor    ch,BYTE PTR [ebx]
  4082b0:	mov    esi,0x40de5511
  4082b5:	jmp    0xe1b59c1c
  4082ba:	sub    dh,cl
  4082bc:	enter  0x4e66,0xbc
  4082c0:	addr16 call 0xc1feadf8
  4082c6:	add    BYTE PTR [eax],al
  4082c8:	add    dh,bl
  4082ca:	inc    eax
  4082cb:	jmp    0xf1b59c52
  4082d0:	cmp    al,BYTE PTR ds:0x2c063ec9
  4082d6:	cmp    eax,0xc91b1e8d
  4082db:	sub    eax,DWORD PTR [ebp+0x1a]
  4082de:	push   esp
  4082df:	jb     0x4082f2
  4082e1:	xchg   edi,eax
  4082e2:	les    ebx,FWORD PTR ds:0xe969c15f
  4082e8:	enter  0xfefe,0x94
  4082ec:	sub    dh,BYTE PTR [edx]
  4082ee:	pop    ebp
  4082ef:	dec    eax
  4082f0:	dec    esi
  4082f1:	sbb    DWORD PTR [ecx+0x358d46a4],ecx
  4082f7:	test   edx,ebp
  4082f9:	aam    0xff
  4082fb:	popa   
  4082fc:	add    BYTE PTR [edx-0x6bcad7d9],ch
  408302:	aas    
  408303:	jmp    0xe9fc18ff
  408308:	xor    dl,BYTE PTR [eax+ebp*2]
  40830b:	mov    eax,ds
  40830d:	aam    0xff
  40830f:	(bad)  
  408310:	ds clc 
  408312:	scas   eax,DWORD PTR es:[edi]
  408313:	jbe    0x4082dd
  408315:	adc    eax,0x5a0cc00b
  40831a:	aas    
  40831b:	add    al,0x15
  40831e:	je     0x409873
  408324:	clc    
  408325:	ja     0x4082e3
  408327:	cmp    bl,BYTE PTR [ecx+0x10]
  40832a:	call   0x3c40841c
  40832f:	adc    BYTE PTR [eax],al
  408331:	pop    edx
  408332:	mov    edx,ebx
  408334:	dec    edi
  408335:	call   0x3f373b
  40833a:	sub    BYTE PTR [eax+0x67],al
  40833d:	add    BYTE PTR [eax+0x4068bdfa],bl
  408343:	sub    eax,DWORD PTR [eax+0x0]
  408346:	mov    eax,0xf00874ea
  40834b:	mov    cl,al
  40834d:	push   edi
  40834f:	dec    esp
  408350:	add    DWORD PTR [bx+si-0x6],ecx
  408354:	mov    ebp,0x402b3a68
  408359:	add    BYTE PTR [eax-0xff78b16],ch
  40835f:	mov    cs,eax
  408361:	call   DWORD PTR [edi]
  408363:	std    
  408364:	mov    cl,0xa3
  408366:	pop    ss
  408367:	jmp    0x4139:0x9bb043ea
  40836e:	sbb    BYTE PTR [edx-0x19],al
  408371:	inc    ecx
  408372:	sahf   
  408373:	adc    eax,0x61480b00
  408378:	xor    edx,DWORD PTR [esi+0x30]
  40837b:	jno    0x408329
  40837d:	call   DWORD PTR [edi]
  40837f:	inc    esi
  408380:	dec    edi
  408381:	push   0xbeef1508
  408386:	pusha  
  408387:	fdivr  DWORD PTR [ecx]
  408389:	inc    ecx
  40838a:	xor    DWORD PTR [ebx],ebp
  40838c:	sar    esi,cl
  40838e:	pop    esp
  40838f:	xor    ebx,DWORD PTR [ebx]
  408391:	push   ebp
  408392:	add    BYTE PTR [eax],al
  408394:	jmp    0x4998b0ea
  408399:	sub    al,0x3
  40839b:	out    dx,eax
  40839c:	(bad)  
  40839d:	rcl    BYTE PTR [ecx+0x3a],cl
  4083a0:	jo     0x4083cd
  4083a2:	sar    esi,cl
  4083a4:	inc    esp
  4083a5:	and    ebx,DWORD PTR [ebx]
  4083a7:	inc    ecx
  4083a8:	jmp    0x1d28b126
  4083ad:	into   
  4083ae:	sub    al,0xff
  4083b0:	call   0xb62b:0x5f7fc52b
  4083b7:	stc    
  4083b8:	out    dx,eax
  4083b9:	xchg   esi,eax
  4083ba:	lock mov edi,0xff2ca1c8
  4083c0:	xchg   BYTE PTR [ebp+ebx*2-0x79ddc9c8],bl
  4083c7:	inc    ebp
  4083c8:	jbe    0x408383
  4083ca:	sub    al,0x6a
  4083cc:	dec    ebx
  4083cd:	ret    0x7b6
  4083d0:	pop    ecx
  4083d1:	in     eax,dx
  4083d2:	sub    eax,0xe0445eff
  4083d7:	(bad)  
  4083d8:	fsub   QWORD PTR [edx]
  4083da:	sbb    edi,DWORD PTR [ecx+0x6a2ce14f]
  4083e0:	and    eax,0x4907b6ea
  4083e5:	shr    DWORD PTR ds:0x1d8236ff,0x3a
  4083ec:	jo     0x40841b
  4083ee:	sub    al,0x35
  4083f0:	adc    BYTE PTR [edx+eax*8-0x1],0x1f
  4083f5:	cdq    
  4083f6:	cli    
  4083f7:	out    0x0,eax
  4083f9:	add    BYTE PTR [eax+0x18],ah
  4083fc:	sub    al,0xff
  4083fe:	cdq    
  4083ff:	pminsw mm0,QWORD PTR [eax+0x31]
  408403:	xchg   ebp,eax
  408404:	add    DWORD PTR [eax],eax
  408406:	xor    DWORD PTR [ecx+ebp*2],edx
  408409:	sub    al,0x7c
  40840b:	or     al,0xd1
  40840d:	or     al,0xec
  40840f:	pop    ss
  408410:	(bad)  
  408411:	sub    al,0x5c
  408413:	sbb    dh,cl
  408415:	mov    dh,0x36
  408417:	sub    al,0x6b
  408419:	arpl   si,dx
  40841b:	pop    ss
  40841c:	push   ds
  40841d:	into   
  40841e:	stc    
  40841f:	push   edx
  408420:	in     eax,dx
  408421:	add    ebx,DWORD PTR [ebx+ecx*4-0x43]
  408425:	xor    ch,0x44
  408428:	sahf   
  408429:	sub    al,0xb6
  40842b:	mov    DWORD PTR [eax+esi*1],esp
  40842e:	add    DWORD PTR [edi],edx
  408430:	sbb    al,0x14
  408432:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408433:	mov    eax,ds:0xa0f71bdc
  408438:	call   0xee94ae40
  40843d:	xchg   bl,dh
  40843f:	adc    ecx,ebp
  408441:	add    ebp,DWORD PTR [esi-0x2f]
  408444:	jo     0x408449
  408446:	xor    DWORD PTR [ecx+ebp*8],edx
  408449:	inc    esp
  40844a:	in     al,dx
  40844b:	pop    ds
  40844c:	pop    esi
  40844d:	add    al,0x31
  40844f:	adc    al,0xc3
  408451:	add    ebx,ebx
  408453:	adc    eax,ebx
  408455:	add    ecx,ebx
  408457:	adc    esi,DWORD PTR [esi+eax*8+0x62]
  40845b:	les    ebp,FWORD PTR [ebx-0x7a]
  40845e:	add    BYTE PTR [eax],al
  408460:	inc    ebp
  408461:	pop    ds
  408462:	ss sub al,0xe1
  408465:	push   ss
  408466:	mov    ah,0x2b
  408468:	mov    eax,ds:0xa1191b24
  40846e:	call   0x9d94be76
  408473:	push   es
  408474:	sbb    BYTE PTR [ecx],dl
  408476:	jmp    0x40847b
  408478:	xor    DWORD PTR [esp+ebp*1-0x1eb8e25],ebp
  40847f:	mov    ch,0x3e
  408481:	sub    al,0x0
  408483:	mov    dl,0x8c
  408485:	pop    ss
  408486:	call   FWORD PTR [ecx+0x6c8d4479]
  40848c:	inc    ecx
  40848d:	pop    ds
  40848e:	(bad)  
  40848f:	fiadd  WORD PTR ds:0x5302e7c5
  408495:	pop    ss
  408496:	jmp    DWORD PTR [eax-0x50]
  408499:	and    esi,edi
  40849b:	(bad)  
  40849c:	or     ch,BYTE PTR [ecx+eax*4]
  40849f:	mov    ebx,DWORD PTR [edx]
  4084a1:	pop    ss
  4084a2:	push   0xffffffe9
  4084a4:	stos   BYTE PTR es:[edi],al
  4084a5:	add    bh,BYTE PTR [ebx]
  4084a7:	sub    BYTE PTR ds:0x299b517,dh
  4084ad:	pop    ss
  4084ae:	call   FWORD PTR [esi+0x6de80ae0]
  4084b4:	adc    BYTE PTR [edi],dl
  4084b6:	jmp    DWORD PTR [eax-0x50]
  4084b9:	das    
  4084ba:	test   DWORD PTR [esi+0x10ffaa4a],0xe940db38
  4084c4:	add    BYTE PTR [eax],al
  4084c6:	pop    ebx
  4084c7:	popa   
  4084c8:	lock jbe 0x408515
  4084cb:	pop    ss
  4084cc:	(bad)  
  4084cd:	fdivr  QWORD PTR [esi+0x2e]
  4084d0:	imul   eax,DWORD PTR [edx+ebx*1+0x496c8917],0xbf4eff1f
  4084db:	push   ss
  4084dc:	addr16 cmovbe edx,ebx
  4084e0:	(bad)  
  4084e1:	cmp    eax,0x36f723c0
  4084e6:	sbb    dl,BYTE PTR [edi]
  4084e8:	jne    0x4084c7
  4084ea:	sbb    al,dh
  4084ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4084ed:	or     cl,BYTE PTR es:[ebp+0x15621185]
  4084f4:	inc    DWORD PTR [ebx-0x2dd153ce]
  4084fa:	cmc    
  4084fb:	adc    eax,0xe05500fe
  408500:	idiv   bh
  408502:	por    mm6,QWORD PTR [esp+ecx*1+0x30]
  408507:	sbb    eax,0x990fffa4
  40850c:	test   ah,bl
  40850e:	xlat   BYTE PTR ds:[ebx]
  40850f:	jmp    0xfff6:0xf1558dfe
  408516:	inc    DWORD PTR [ecx+0x67]
  408519:	aas    
  40851a:	inc    ebx
  40851b:	dec    edi
  40851c:	(bad)  
  40851d:	(bad)  
  40851e:	push   ebp
  40851f:	loope  0x408517
  408521:	dec    DWORD PTR [edi+0x315334ea]
  408527:	dec    edi
  408528:	jmp    edi
  40852a:	add    BYTE PTR [eax],al
  40852c:	fdiv   DWORD PTR [esi+edi*8+0x73d1c3ff]
  408533:	sbb    DWORD PTR [ebx],ebx
  408535:	lods   al,BYTE PTR ds:[esi]
  408536:	fcomip st,st(7)
  408538:	mov    edi,0x987503ea
  40853d:	jmp    0xfff6:0xc9058f2f
  408544:	cmovno esp,edi
  408547:	(bad)  
  408549:	jmp    0x16a5714c
  40854e:	mov    edi,0xe7418674
  408553:	sar    DWORD PTR [ecx-0x2a380116],1
  408559:	enter  0xfff6,0xef
  40855d:	add    eax,DWORD PTR [eax]
  40855f:	add    BYTE PTR [eax-0x64],cl
  408562:	test   al,dl
  408564:	pop    es
  408565:	jmp    0x413a:0x577050fe
  40856c:	dec    eax
  40856d:	jmp    0xfffe:0xea17f0b4
  408574:	lds    ebx,FWORD PTR [edi+eiz*8]
  408577:	lds    esi,FWORD PTR [ecx]
  408579:	(bad)  
  40857a:	sub    edi,edi
  40857c:	test   al,0xaf
  40857e:	dec    esi
  40857f:	not    DWORD PTR [esi]
  408581:	push   cs
  408582:	xchg   BYTE PTR [ebp-0xd6e1eb],bh
  408588:	xor    DWORD PTR [esi],ebp
  40858a:	jg     0x408527
  40858c:	xor    DWORD PTR [ebx],ebp
  40858e:	add    eax,DWORD PTR [ebx+0x3eb40000]
  408594:	xor    edi,edi
  408596:	out    dx,al
  408597:	sub    bh,al
  408599:	xor    DWORD PTR [edi-0x4dfffcd6],0xffffff87
  4085a0:	sbb    al,0xf7
  4085a2:	(bad)  
  4085a3:	dec    ebp
  4085a4:	add    al,0xf
  4085a6:	mov    ch,0xab
  4085a8:	add    eax,DWORD PTR [eax]
  4085aa:	xor    ebx,edx
  4085ac:	adc    eax,DWORD PTR [eax]
  4085ae:	into   
  4085af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4085b0:	sub    BYTE PTR [ebp+0x29],dh
  4085b3:	sub    DWORD PTR [eax],0xffffff9d
  4085b6:	scas   al,BYTE PTR es:[edi]
  4085b7:	jne    0x4085e2
  4085b9:	mov    ch,0x95
  4085bb:	jne    0x4085e6
  4085bd:	call   FWORD PTR [esi+0x1e7fbff]
  4085c3:	lods   eax,DWORD PTR ds:[esi]
  4085c4:	sub    bh,bh
  4085c6:	mov    ds,edi
  4085c8:	sbb    esi,edi
  4085ca:	xchg   BYTE PTR [ebp-0x6cd68ad8],bl
  4085d0:	(bad)  
  4085d1:	popf   
  4085d2:	jbe    0x408581
  4085d4:	sub    BYTE PTR [ebp-0xd742ab],dh
  4085da:	data16 aaa 
  4085dc:	sti    
  4085dd:	out    0x25,eax
  4085df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4085e0:	sub    bh,bh
  4085e2:	push   esi
  4085e3:	xchg   edi,eax
  4085e4:	dec    ebx
  4085e5:	test   DWORD PTR [esi-0x2b],0xd3397528
  4085ec:	aas    
  4085ed:	popf   
  4085ee:	ds in  eax,0x28
  4085f1:	mov    ch,0x55
  4085f3:	adc    ebx,DWORD PTR [esi]
  4085f5:	sub    DWORD PTR [eax],eax
  4085f7:	add    BYTE PTR [esi],ch
  4085f9:	adc    al,0x94
  4085fb:	sti    
  4085fc:	push   cs
  4085fd:	sub    eax,0x981e2977
  408602:	dec    ebx
  408603:	push   eax
  408604:	push   ds
  408605:	adc    al,0x6
  408607:	add    al,0x85
  408609:	das    
  40860a:	push   0x67
  40860c:	loope  0x408619
  40860e:	imul   BYTE PTR [eax]
  408610:	xor    eax,0xac7cdb89
  408615:	call   0x142eaef7
  40861a:	sbb    DWORD PTR [ecx],ebp
  40861c:	pop    esp
  40861d:	sbb    al,0xc1
  40861f:	(bad)  
  408620:	mov    esp,0x2b1cce13
  408625:	jle    0x408610
  408627:	sub    BYTE PTR [esp+ebx*1-0x2f],al
  40862b:	jnp    0x4085d1
  40862d:	adc    esi,DWORD PTR [esi-0x4a077bd8]
  408633:	sub    BYTE PTR [esi-0x519c6304],dh
  408639:	adc    ebx,DWORD PTR [esi-0x69f46a92]
  40863f:	sub    BYTE PTR [ecx-0x69d7b703],cl
  408645:	adc    edi,DWORD PTR [ebx+ebx*1]
  408648:	xchg   BYTE PTR [ebx],dl
  40864a:	jle    0x408667
  40864c:	addr16 mov ah,0x75
  40864f:	sub    BYTE PTR [esi-0x37],bh
  408652:	mov    WORD PTR [eax],?
  408654:	jbe    0x408669
  408656:	push   ecx
  408657:	push   esp
  408658:	xchg   ecx,eax
  408659:	adc    ebx,DWORD PTR [esi+0x28]
  40865c:	add    BYTE PTR [eax],al
  40865e:	pushf  
  40865f:	call   0xfc9eaec1
  408664:	and    BYTE PTR [ebx+0x56],ah
  408667:	adc    eax,DWORD PTR [esi+0x6e]
  40866a:	inc    ecx
  40866b:	or     edi,DWORD PTR [esi]
  40866d:	sub    BYTE PTR [esi-0x77],al
  408670:	add    ch,ah
  408672:	or     DWORD PTR [ecx+0x10cb4108],ecx
  408678:	jmp    DWORD PTR [esi]
  40867a:	pop    ecx
  40867b:	leave  
  40867c:	out    dx,eax
  40867d:	push   ss
  40867e:	pop    ecx
  40867f:	adc    ebp,eax
  408681:	inc    ebp
  408682:	xchg   edx,eax
  408683:	adc    edi,edi
  408685:	push   cs
  408686:	xlat   BYTE PTR ds:[ebx]
  408687:	or     ch,cl
  408689:	xor    al,0x57
  40868b:	adc    edi,edi
  40868d:	(bad)  
  40868e:	aam    0xe
  408690:	call   0xff534c94
  408695:	and    BYTE PTR [eax+eiz*1+0x0],ch
  408699:	cmp    al,0x6a
  40869b:	add    BYTE PTR [ebx+0x7e19a5],al
  4086a1:	inc    ebx
  4086a2:	sub    DWORD PTR [ebx],edx
  4086a4:	jne    0x408687
  4086a6:	cmp    dl,dl
  4086a8:	pushf  
  4086a9:	(bad)  
  4086aa:	push   ss
  4086ab:	popf   
  4086ac:	inc    esp
  4086ad:	mov    ebp,0x283b67a5
  4086b2:	xor    eax,0xd41a3513
  4086b7:	push   ebx
  4086b8:	add    BYTE PTR [esi+0x1be81ae0],ah
  4086be:	pop    eax
  4086bf:	adc    edi,edi
  4086c1:	add    DWORD PTR [eax],eax
  4086c3:	add    BYTE PTR [eax-0x4516beb3],al
  4086c9:	adc    al,0x0
  4086cb:	jmp    0xf1b59982
  4086d0:	sub    dh,BYTE PTR [ebp+edi*8+0x76]
  4086d4:	push   esi
  4086d5:	adc    esi,DWORD PTR [ebp+0x6d]
  4086d8:	dec    esi
  4086d9:	mov    DWORD PTR [eax],ecx
  4086db:	push   ecx
  4086dc:	add    al,0xb1
  4086de:	(bad)  
  4086df:	pop    esi
  4086e0:	and    al,0xd6
  4086e2:	add    ebp,ecx
  4086e4:	sbb    DWORD PTR [ebp+0x7f168eb],0x3af700fe
  4086ee:	push   0x0
  4086f0:	bound  ebx,QWORD PTR [ebx]
  4086f2:	push   DWORD PTR [ebp+0x50]
  4086f5:	cs jb  0x408695
  4086f8:	pop    es
  4086f9:	cmp    ecx,DWORD PTR [ecx+0x2b05445]
  4086ff:	add    DWORD PTR [eax],ebx
  408701:	push   ss
  408702:	lea    eax,[ebp-0xc5c1]
  408708:	fsubr  DWORD PTR ds:0x161871d2
  40870e:	or     eax,eax
  408710:	jl     0x4086fb
  408712:	cmp    eax,DWORD PTR [ecx+ecx*1]
  408715:	push   ss
  408716:	add    BYTE PTR [edi-0x13],dh
  408719:	lods   eax,DWORD PTR ds:[esi]
  40871a:	imul   edi,DWORD PTR [ebx],0x19
  40871d:	sbb    BYTE PTR [ebp-0xc8007b],cl
  408723:	call   FWORD PTR [eax]
  408725:	xor    BYTE PTR [ecx-0x18ffff5d],ch
  40872b:	cmp    dl,BYTE PTR [eax+0x68]
  40872e:	fcom   DWORD PTR ds:0x3928beef
  408734:	jne    0x40873e
  408736:	lock xor al,0xc1
  408739:	inc    DWORD PTR [edi-0x286009d3]
  40873f:	cmp    bh,bh
  408741:	jne    0x408707
  408743:	cmp    dh,BYTE PTR [ebp+0x8]
  408746:	mov    al,0xb0
  408748:	fwait
  408749:	jmp    DWORD PTR [edi-0x67fb3db0]
  40874f:	in     al,0x89
  408751:	in     al,dx
  408752:	sbb    edx,DWORD PTR [ecx-0x4]
  408755:	push   0xffffff88
  408757:	stos   DWORD PTR es:[edi],eax
  408758:	sbb    al,0xff
  40875a:	jge    0x408769
  40875c:	out    0xd,eax
  40875e:	mov    ch,0x3a
  408760:	dec    DWORD PTR [ecx+0x68398d]
  408766:	xor    ebx,edi
  408768:	adc    eax,0xe9e5c9be
  40876d:	inc    eax
  40876e:	xor    ebx,esp
  408770:	jge    0x4087ad
  408772:	lock cli 
  408774:	and    eax,0x50532975
  408779:	les    esi,FWORD PTR [esi]
  40877b:	inc    edx
  40877c:	es jne 0x4087ac
  40877f:	cmp    dh,BYTE PTR [eax-0x781ee6f9]
  408785:	call   FWORD PTR [esi]
  408787:	xor    al,0x41
  408789:	add    al,0x31
  40878b:	enter  0xec79,0x0
  40878f:	add    BYTE PTR [eax+0x6f74f3e],dh
  408795:	adc    dh,BYTE PTR [edi+0x45]
  408798:	std    
  408799:	stos   BYTE PTR es:[edi],al
  40879a:	and    eax,0xaf022175
  40879f:	or     ebx,ecx
  4087a1:	out    dx,al
  4087a2:	mov    dl,0xff
  4087a4:	out    0x5,al
  4087a6:	inc    ebx
  4087a7:	(bad)  
  4087a9:	out    dx,al
  4087aa:	add    al,BYTE PTR [eax]
  4087ac:	xor    DWORD PTR [edx-0x4ce0842],edi
  4087b2:	add    al,BYTE PTR [eax]
  4087b4:	out    dx,al
  4087b5:	aaa    
  4087b6:	xor    bh,bh
  4087b8:	ss sti 
  4087ba:	add    ch,BYTE PTR [edx+0x31]
  4087bd:	push   ebp
  4087be:	add    al,0x6a
  4087c0:	xor    DWORD PTR ds:0xa6ec8d04,esp
  4087c6:	ror    DWORD PTR [esp+esi*4-0x6900d352],cl
  4087cd:	dec    edx
  4087ce:	and    eax,0xae998975
  4087d3:	sti    
  4087d4:	cdq    
  4087d5:	mov    eax,0xf57effb2
  4087da:	inc    edx
  4087db:	je     0x408809
  4087dd:	xchg   esp,eax
  4087de:	ins    BYTE PTR es:[edi],dx
  4087df:	add    DWORD PTR [ecx],esi
  4087e1:	adc    al,0xe9
  4087e3:	fwait
  4087e4:	jb     0x408821
  4087e6:	test   al,0x3
  4087e8:	pop    esi
  4087e9:	xchg   cl,bh
  4087eb:	sbb    ecx,DWORD PTR [eax-0x4b]
  4087ee:	dec    ebp
  4087ef:	and    eax,0x77189ce1
  4087f4:	add    BYTE PTR [eax],al
  4087f6:	lods   al,BYTE PTR ds:[esi]
  4087f7:	pop    es
  4087f8:	ss and eax,0x1b9b633e
  4087fe:	pop    eax
  4087ff:	mov    ch,0x2d
  408801:	and    eax,0x2d1899b8
  408806:	adc    BYTE PTR es:[ecx],dl
  408809:	aad    0xbf
  40880b:	movhps xmm6,QWORD PTR [edi-0x54]
  40880f:	hlt    
  408810:	adc    eax,0x91650e25
  408815:	xchg   edx,eax
  408816:	dec    edx
  408817:	push   ebp
  408818:	jmp    0xfe454c41
  40881d:	and    al,0xf6
  40881f:	pcmpeqb mm6,mm7
  408822:	(bad)  
  408823:	inc    ecx
  408824:	mov    esp,DWORD PTR [esi+eiz*8]
  408827:	popf   
  408828:	arpl   WORD PTR [edi],bx
  40882a:	out    0xf,al
  40882c:	(bad)  
  40882d:	cdq    
  40882e:	(bad)  
  40882f:	ja     0x4088a4
  408831:	call   0x6f069ca7
  408836:	rol    DWORD PTR [edi],0xbe
  408839:	and    al,0xbe
  40883b:	mov    ebp,esp
  40883d:	sbb    esp,DWORD PTR [ebx]
  40883f:	mov    dl,0xad
  408841:	and    al,0xb8
  408843:	cdq    
  408844:	xchg   esp,eax
  408845:	sub    al,0xa6
  408847:	movlps QWORD PTR [ecx+ecx*1],xmm0
  40884b:	scas   al,BYTE PTR es:[edi]
  40884c:	rol    edx,1
  40884e:	xchg   esi,eax
  40884f:	push   cs
  408850:	push   esp
  408851:	xor    eax,DWORD PTR [esi-0x3db79f1]
  408857:	pop    ds
  408858:	xchg   ecx,eax
  408859:	sub    al,0x0
  40885b:	add    al,dl
  40885d:	(bad)  
  40885f:	jbe    0x40885c
  408861:	cwde   
  408862:	out    0x76,eax
  408864:	adc    eax,0xcae96a0f
  408869:	mov    dh,0x3a
  40886b:	test   al,0x32
  40886d:	lgs    ebx,FWORD PTR [ecx+0x5]
  408871:	ud0    ecx,DWORD PTR [esi-0x61]
  408875:	sbb    ebp,eax
  408877:	and    eax,0x70ff0ed3
  40887c:	mov    edi,0xd36f6ef
  408881:	jp     0x408883
  408883:	rcr    DWORD PTR [edi+0x4de9414b],0xc9
  40888a:	out    dx,eax
  40888b:	push   ss
  40888c:	push   ebp
  40888d:	ud0    ebx,DWORD PTR [esi+ebx*1+0x5548c0f7]
  408895:	jns    0xff480307
  40889b:	(bad)  
  40889c:	cdq    
  40889d:	push   cs
  40889e:	addr16 clc 
  4088a0:	push   cs
  4088a1:	push   esp
  4088a2:	add    dh,ch
  4088a4:	pop    esp
  4088a5:	add    al,0xf7
  4088a7:	out    0x12,al
  4088a9:	pcmpeqw mm5,mm5
  4088ac:	or     dh,BYTE PTR [esi-0x62ed2960]
  4088b2:	test   BYTE PTR [ebp+0x6aff0f2a],dh
  4088b8:	push   eax
  4088b9:	clc    
  4088ba:	idiv   BYTE PTR [esi+0x30741412]
  4088c0:	add    BYTE PTR [eax],al
  4088c2:	scas   al,BYTE PTR es:[edi]
  4088c3:	shr    bl,1
  4088c5:	mov    dh,0x52
  4088c7:	ltr    WORD PTR ds:0x91bc91bd
  4088ce:	cmp    cl,BYTE PTR [edi]
  4088d0:	(bad)  
  4088d1:	jmp    0xf9a8fe94
  4088d6:	xor    bh,bh
  4088d8:	mov    ebp,0x6acaf00
  4088dd:	call   0x401683
  4088e2:	jmp    FWORD PTR [esp+ebp*8-0x9]
  4088e6:	fbstp  TBYTE PTR [edx]
  4088e8:	push   DWORD PTR [ebp+0x60]
  4088eb:	cmp    bh,BYTE PTR ds:0xff32ff9b
  4088f1:	mov    ch,0xf0
  4088f3:	sub    bh,bh
  4088f5:	(bad)  
  4088f6:	jmp    FWORD PTR [esi+eax*1-0x70e018]
  4088fd:	(bad)  
  4088fe:	jmp    FWORD PTR [eax+eiz*8-0x9]
  408902:	push   DWORD PTR [edx]
  408904:	push   DWORD PTR [ebp-0xd68c]
  40890a:	dec    edi
  40890b:	stos   DWORD PTR es:[edi],eax
  40890c:	push   es
  40890d:	call   0x401741
  408912:	aas    
  408913:	imul   ebx,eax,0xfffffff7
  408916:	aas    
  408917:	xor    edi,edi
  408919:	jne    0x40891b
  40891b:	cmp    cl,BYTE PTR ds:0xff32ff9b
  408921:	mov    ch,0x1c
  408923:	sub    edi,edi
  408925:	inc    DWORD PTR [eax]
  408927:	add    bh,bl
  408929:	lods   al,BYTE PTR ds:[esi]
  40892a:	push   es
  40892b:	call   0x4018ff
  408930:	jmp    FWORD PTR [esp+edx*8-0x9]
  408934:	push   DWORD PTR [edx]
  408936:	push   DWORD PTR [ebp-0x30]
  408939:	cmp    ecx,esi
  40893b:	call   0x2af4:0xb5ff32ef
  408942:	(bad)  
  408943:	push   eax
  408945:	cs popf 
  408947:	(bad)  
  408948:	fbstp  TBYTE PTR [edx]
  40894a:	mov    ch,0xec
  40894c:	(bad)  
  40894d:	xor    bh,bh
  40894f:	call   0x3f1e0c
  408954:	xor    DWORD PTR [esi-0x617917a9],esp
  40895a:	and    eax,ebp
  40895c:	mov    WORD PTR [eax+0x22],?
  40895f:	(bad)  
  408960:	jle    0x4089aa
  408962:	aas    
  408963:	div    DWORD PTR [esi-0x7a]
  408966:	sub    ebx,edx
  408968:	int3   
  408969:	jle    0x40898d
  40896b:	call   FWORD PTR [ebx+edx*2+0x635eff1a]
  408972:	push   edx
  408973:	popf   
  408974:	push   esi
  408975:	data16 and dh,BYTE PTR [ebp-0xdd999b]
  40897c:	pop    ecx
  40897d:	aas    
  40897e:	cmp    bh,0x3e
  408981:	dec    esi
  408982:	pop    eax
  408983:	lock ds inc esi
  408986:	and    bh,bh
  408988:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408989:	out    dx,eax
  40898a:	and    DWORD PTR [ebp+0x0],esi
  40898d:	add    BYTE PTR [ecx],bh
  40898f:	and    ecx,DWORD PTR [edx]
  408991:	(bad)  
  408992:	push   ds
  408993:	and    dh,BYTE PTR cs:[ebp-0xddd1df]
  40899a:	sbb    DWORD PTR [ebx-0x80],edx
  40899d:	inc    DWORD PTR [esi]
  40899f:	push   ss
  4089a0:	enter  0x8f7,0xf2
  4089a4:	and    bh,bh
  4089a6:	test   BYTE PTR ds:0x8d9fb97,0xb1
  4089ad:	jmp    esi
  4089af:	ret    
  4089b0:	inc    ebp
  4089b1:	or     al,0x31
  4089b3:	dec    eax
  4089b4:	(bad)  
  4089b5:	in     al,dx
  4089b6:	mov    dl,0xbe
  4089b8:	pop    ds
  4089b9:	push   0x31
  4089bb:	push   ecx
  4089bc:	add    edi,edi
  4089be:	cmp    al,0x3
  4089c0:	sub    edi,DWORD PTR [edx-0x76df3265]
  4089c6:	ins    BYTE PTR es:[edi],dx
  4089c7:	(bad)  
  4089c8:	stos   DWORD PTR es:[edi],eax
  4089c9:	mov    ecx,0xff043c6a
  4089ce:	pop    esp
  4089cf:	adc    al,0x3a
  4089d1:	jmp    0x4089c4
  4089d3:	adc    ebx,DWORD PTR [esi-0x5703d169]
  4089d9:	pop    ds
  4089da:	mov    cs,WORD PTR [ecx+eax*1]
  4089dd:	pop    esi
  4089de:	dec    edx
  4089df:	push   ebx
  4089e0:	jmp    0xe954ba90
  4089e5:	xor    DWORD PTR [esi-0x7a],0xffffffe1
  4089e9:	sub    ebx,DWORD PTR [edi+0x66216e0e]
  4089ef:	xchg   BYTE PTR [ebp+0x21],ah
  4089f2:	add    BYTE PTR [eax],al
  4089f4:	in     al,0x1b
  4089f6:	push   ecx
  4089f7:	dec    edi
  4089f8:	mov    ebx,0x734b560c
  4089fd:	pop    ss
  4089fe:	jmp    0x6a4045b9
  408a03:	dec    eax
  408a04:	cmp    eax,0x36ad9665
  408a09:	jp     0x408a14
  408a0b:	and    DWORD PTR [esp+ebx*1+0xbc8b141],esp
  408a12:	mov    esi,DWORD PTR es:[eax+ecx*1+0x72]
  408a17:	xlat   BYTE PTR ds:[ebx]
  408a18:	mov    bh,BYTE PTR [eax+ebp*4]
  408a1b:	add    edi,DWORD PTR [edx+0x71eb9949]
  408a21:	adc    al,0x69
  408a23:	loope  0x408a23
  408a25:	xchg   DWORD PTR [eax-0x57b7d155],ecx
  408a2b:	add    eax,DWORD PTR [edi-0x194ecb04]
  408a31:	or     edi,DWORD PTR [ecx]
  408a33:	lods   al,BYTE PTR ds:[esi]
  408a34:	fimul  DWORD PTR [edi+0x28]
  408a37:	add    al,0x7e
  408a39:	cld    
  408a3a:	xor    BYTE PTR [eax+0xd330bce],0xf1
  408a41:	sub    ebp,0x1380e30c
  408a47:	mov    edx,0x8effd2ce
  408a4c:	push   ecx
  408a4d:	or     ebp,DWORD PTR [eax-0x2b]
  408a50:	xchg   BYTE PTR [eax+eax*1+0x39],dl
  408a54:	dec    ebp
  408a55:	icebp  
  408a56:	lahf   
  408a57:	sahf   
  408a58:	add    BYTE PTR [eax],al
  408a5a:	push   ecx
  408a5b:	fs push 0xbdfb32e9
  408a61:	add    DWORD PTR [eax],esp
  408a63:	dec    eax
  408a64:	inc    ecx
  408a65:	jmp    0xf1b5952c
  408a6a:	dec    edx
  408a6b:	mov    ecx,0xfc1176c0
  408a70:	fmul   DWORD PTR [ebp+0x11]
  408a73:	or     ebp,ebx
  408a75:	call   0xe97f15e2
  408a7a:	mov    edi,0x6555460d
  408a7f:	retf   
  408a80:	mov    eax,0xff0b114e
  408a85:	cmp    eax,eax
  408a87:	dec    ebx
  408a88:	pop    es
  408a89:	mov    ah,0xb1
  408a8b:	or     esi,DWORD PTR [ebp+0x35]
  408a8e:	push   ecx
  408a8f:	or     DWORD PTR [eax],0xfeacff41
  408a95:	es icebp 
  408a97:	push   0x142e2bc9
  408a9c:	push   ebp
  408a9d:	bound  ebx,QWORD PTR [esi-0x69]
  408aa0:	ret    
  408aa1:	or     eax,0x60c8151
  408aa6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408aa7:	adc    ch,al
  408aa9:	lds    edi,FWORD PTR [ecx+0xb]
  408aac:	jmp    DWORD PTR [eax-0x9]
  408aaf:	push   cs
  408ab0:	push   DWORD PTR [esi+eax*2+0xb]
  408ab4:	jne    0x408aa7
  408ab6:	or     ah,BYTE PTR [eax-0x60c9216d]
  408abc:	dec    esp
  408abd:	in     eax,0x0
  408abf:	add    BYTE PTR [ebx],bh
  408ac1:	aam    0x73
  408ac3:	sub    esi,DWORD PTR [edx-0x3ffffb4]
  408ac9:	hlt    
  408aca:	std    
  408acb:	jne    0x408b41
  408acd:	aaa    
  408ace:	xchg   ebp,eax
  408acf:	pushf  
  408ad0:	out    0x2a,eax
  408ad2:	push   eax
  408ad3:	call   FWORD PTR [ebp+0x24]
  408ad6:	push   DWORD PTR [ebp-0x2c]
  408ad9:	mov    edi,0x3ea075fd
  408ade:	int3   
  408adf:	xchg   esi,eax
  408ae0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ae1:	sub    bl,BYTE PTR [edx-0x75]
  408ae4:	and    eax,0x88398324
  408ae9:	stos   DWORD PTR es:[edi],eax
  408aea:	or     BYTE PTR [edx-0x60],dl
  408aed:	retf   0xff9a
  408af0:	out    0xfe,eax
  408af2:	mov    esi,0x7c957ceb
  408af7:	adc    BYTE PTR [eax-0x5e],cl
  408afa:	push   es
  408afb:	mov    ecx,DWORD PTR [ebp-0x1b8a01fa]
  408b01:	call   0x2b02:0x3f1a8aff
  408b08:	or     BYTE PTR [ecx-0x3e],bl
  408b0b:	or     al,0x48
  408b0d:	retf   
  408b0e:	mov    esp,ebp
  408b10:	stos   DWORD PTR es:[di],eax
  408b12:	or     bh,bh
  408b14:	fstp   QWORD PTR ds:0x299eb9e8
  408b1a:	(bad)  
  408b1b:	(bad)  
  408b1c:	mov    ebp,0xadff5019
  408b21:	sbb    eax,0x31e8
  408b26:	jg     0x408b51
  408b28:	dec    ecx
  408b2a:	dec    edx
  408b2b:	sbb    BYTE PTR [eax],al
  408b2d:	push   ebp
  408b2e:	add    DWORD PTR [ebx+eax*4-0x3c],0x18
  408b33:	ret    0x5355
  408b36:	pop    ebx
  408b37:	mov    bl,0x6
  408b39:	add    BYTE PTR [esi+eax*1-0x7e],bh
  408b3d:	jge    0x408b03
  408b3f:	adc    eax,0x7e310c74
  408b44:	mov    al,ds:0x65f310f
  408b49:	cmp    DWORD PTR [edi+eiz*8],0x2
  408b4d:	jne    0x408b77
  408b4f:	es inc esp
  408b51:	pop    ebx
  408b52:	push   cs
  408b53:	and    DWORD PTR [ebp-0x3e],ecx
  408b56:	inc    ecx
  408b57:	sti    
  408b58:	mov    DWORD PTR [ebp+0x2d],eax
  408b5b:	jle    0x408b80
  408b5d:	pop    es
  408b5e:	mov    dl,0x28
  408b60:	adc    BYTE PTR [eax],al
  408b62:	add    eax,0xfdc009f7
  408b67:	repz jmp 0xbe72662c
  408b6d:	enter  0xeb73,0x2
  408b71:	mov    esi,esp
  408b73:	out    0x81,al
  408b75:	loopne 0x408ba5
  408b77:	jle    0x408b19
  408b79:	adc    esi,DWORD PTR [ecx]
  408b7b:	out    0x6,eax
  408b7d:	or     esi,DWORD PTR [ecx-0x21]
  408b80:	or     ebp,DWORD PTR [ebx]
  408b82:	jno    0x408b4a
  408b84:	mov    ebp,0xf33d785d
  408b89:	inc    DWORD PTR [eax]
  408b8b:	add    BYTE PTR [ebx],cl
  408b8d:	ss push ds
  408b8f:	jne    0x408bb6
  408b91:	jp     0x408b5b
  408b93:	mov    edi,0xb42b7b2
  408b98:	rol    BYTE PTR es:[edx-0x18],0xed
  408b9d:	xchg   ebp,eax
  408b9e:	sbb    eax,0xc88415ff
  408ba3:	ret    
  408ba4:	mov    edx,0x27be469f
  408ba9:	xlat   BYTE PTR ds:[ebx]
  408baa:	ret    
  408bab:	(bad)  
  408bac:	mov    ecx,0x31000305
  408bb1:	push   cs
  408bb2:	mov    sp,WORD PTR [ebx+esi*8-0x77]
  408bb7:	dec    ebp
  408bb8:	xor    eax,0x748d660e
  408bbd:	adc    al,0xd9
  408bbf:	mov    ah,0xd7
  408bc1:	jle    0x408b6c
  408bc3:	sbb    eax,0x44c0d044
  408bc8:	mov    WORD PTR [eax],cs
  408bca:	into   
  408bcb:	sbb    eax,0x81d0d044
  408bd0:	call   0x6618:0x241dbe08
  408bd7:	(bad)  
  408bd8:	out    0x94,al
  408bda:	and    eax,DWORD PTR [edx+edi*1+0x9]
  408bde:	sbb    al,0x44
  408be0:	mov    DWORD PTR [ebx-0x6571e27f],ebx
  408be6:	sub    ecx,DWORD PTR [eax-0x7b]
  408be9:	call   0x8979:0x7eac4823
  408bf0:	add    BYTE PTR [eax],al
  408bf2:	hlt    
  408bf3:	iret   
  408bf4:	aas    
  408bf5:	hlt    
  408bf6:	outs   dx,BYTE PTR ds:[esi]
  408bf7:	or     cl,ch
  408bf9:	adc    BYTE PTR [ebp-0xe203137],cl
  408bff:	adc    esp,DWORD PTR [eax-0x16ebcef7]
  408c05:	adc    BYTE PTR [ebp-0x45f42464],dl
  408c0b:	push   esi
  408c0c:	fst    QWORD PTR [eax]
  408c0e:	xchg   ebp,eax
  408c0f:	xchg   esi,eax
  408c10:	stos   DWORD PTR es:[edi],eax
  408c11:	and    esp,ecx
  408c13:	or     BYTE PTR [ebx+eax*2+0x2c2d822e],dh
  408c1a:	xchg   esi,eax
  408c1b:	mov    cl,0x2d
  408c1d:	sbb    eax,0x2c2d821e
  408c22:	arpl   WORD PTR [ebx-0x65f2e2e3],bp
  408c28:	fwait
  408c29:	adc    esi,DWORD PTR [ecx+ecx*4+0x14215b21]
  408c30:	jmp    0x6bf18e38
  408c35:	xchg   edi,eax
  408c36:	push   cs
  408c37:	into   
  408c38:	jmp    eax
  408c3a:	xor    dl,BYTE PTR [eax+eax*1]
  408c3d:	cli    
  408c3e:	push   esi
  408c3f:	jp     0x408c42
  408c41:	je     0x408c32
  408c43:	iret   
  408c44:	dec    edi
  408c45:	rcr    DWORD PTR [eax],1
  408c47:	cwde   
  408c48:	(bad)  
  408c49:	call   0x62510e07
  408c4e:	lahf   
  408c4f:	and    eax,ecx
  408c51:	(bad)  
  408c52:	xor    DWORD PTR [ebx],ebx
  408c54:	push   DWORD PTR ds:0xfad40000
  408c5a:	push   cs
  408c5b:	outs   dx,DWORD PTR fs:[esi]
  408c5d:	out    dx,eax
  408c5e:	dec    edi
  408c5f:	pop    ss
  408c60:	out    0xef,eax
  408c62:	jp     0x408cda
  408c64:	xor    dl,BYTE PTR [ebx+eax*4]
  408c67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c68:	cmp    dl,BYTE PTR [edi+0xb]
  408c6b:	xchg   esi,eax
  408c6c:	lahf   
  408c6d:	clc    
  408c6e:	push   cs
  408c6f:	push   edi
  408c70:	je     0x408c78
  408c72:	add    DWORD PTR [ecx-0x2dfd80d6],0x42
  408c79:	cmp    esi,DWORD PTR [ebp-0x27]
  408c7c:	and    esi,esi
  408c7e:	imul   ebp,ecx,0xe9690788
  408c84:	mov    BYTE PTR [edi],al
  408c86:	push   ebp
  408c87:	pop    esi
  408c88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c89:	pop    ss
  408c8a:	push   0xffffffe9
  408c8c:	cwde   
  408c8d:	pop    es
  408c8e:	out    0xf,eax
  408c90:	add    DWORD PTR [edi],0x7ff2f2ff
  408c96:	sub    DWORD PTR [ecx+0x53d3eee2],ebx
  408c9c:	inc    ebp
  408c9d:	pop    es
  408c9e:	mov    edx,DWORD PTR [ecx]
  408ca0:	fstp   TBYTE PTR [eax+eax*1-0x6d]
  408ca4:	xor    ah,BYTE PTR [ebp+0x53]
  408ca7:	mov    bh,0x2d
  408ca9:	adc    DWORD PTR [eax],0x7a3283
  408caf:	add    edi,edi
  408cb1:	jp     0x408cb3
  408cb3:	add    BYTE PTR [eax],cl
  408cb5:	sbb    al,0xc0
  408cb7:	jne    0x408c99
  408cb9:	ret    
  408cba:	out    0x9d,al
  408cbc:	add    BYTE PTR [eax],al
  408cbe:	sub    BYTE PTR [eax],0xff
  408cc1:	sub    eax,DWORD PTR [ebx-0x64]
  408cc4:	ret    0x6f5b
  408cc7:	retf   0xc2c7
  408cca:	enter  0x5512,0x8b
  408cce:	in     al,dx
  408ccf:	mov    es,ebx
  408cd1:	lock pop es
  408cd3:	mov    edi,0xa4efdb29
  408cd8:	or     bh,bh
  408cda:	gs sbb al,ch
  408cdd:	add    DWORD PTR ds:0xcf50ff2b,eax
  408ce3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ce4:	push   es
  408ce5:	call   0x400ee0
  408cea:	add    ebp,DWORD PTR [eax]
  408cec:	pop    eax
  408ced:	add    esp,DWORD PTR [eax+0x5774c016]
  408cf3:	popf   
  408cf4:	inc    esp
  408cf5:	hlt    
  408cf6:	sbb    BYTE PTR [ebx],ch
  408cf8:	jne    0x408d06
  408cfa:	out    dx,eax
  408cfb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408cfc:	push   es
  408cfd:	call   0x3fb9f5
  408d02:	rcl    esp,1
  408d04:	cli    
  408d05:	lea    eax,[ebp+0x65ff5022]
  408d0b:	push   cs
  408d0c:	push   DWORD PTR [ebp+0x50]
  408d0f:	cmp    bl,BYTE PTR [ecx-0x76d51003]
  408d15:	inc    ebp
  408d16:	lock sub dh,BYTE PTR [ebp-0x10]
  408d1a:	outs   dx,DWORD PTR ds:[esi]
  408d1b:	mov    ds:0x15e5fff6,eax
  408d20:	push   DWORD PTR [ebp+0x0]
  408d23:	add    BYTE PTR [eax+edi*1+0x11],cl
  408d27:	dec    BYTE PTR [edi+0x29]
  408d2a:	mov    ebx,eax
  408d2c:	das    
  408d2d:	mov    ds:0xcf31e8fa,eax
  408d32:	jl     0x408d33
  408d34:	(bad)  
  408d35:	push   ss
  408d36:	xchg   ecx,eax
  408d37:	test   DWORD PTR [ecx],0xeeff7cd8
  408d3d:	mov    eax,ds:0x88e65702
  408d42:	or     ebp,eax
  408d44:	mov    DWORD PTR [ebx+ebx*1-0x1],ebp
  408d48:	stos   BYTE PTR es:[edi],al
  408d49:	mov    edx,0xb9f85ebd
  408d4e:	or     al,BYTE PTR [eax]
  408d50:	pop    esp
  408d51:	jb     0x408d7a
  408d53:	cmp    DWORD PTR [edi+eiz*8],0x0
  408d57:	jb     0x408d69
  408d59:	into   
  408d5a:	(bad)  
  408d5b:	fxsave [eax+0xc]
  408d5f:	call   0xff5af514
  408d64:	sahf   
  408d65:	inc    eax
  408d66:	hlt    
  408d67:	(bad)  
  408d68:	sbb    al,0x3
  408d6a:	sub    ebp,DWORD PTR [edi-0xe65974]
  408d70:	cld    
  408d71:	or     bl,BYTE PTR [edx]
  408d73:	jne    0x408d9e
  408d75:	xchg   ebx,eax
  408d76:	pop    esi
  408d77:	std    
  408d78:	jbe    0x408d08
  408d7a:	sbb    DWORD PTR [ebp+0x41],esi
  408d7d:	xchg   BYTE PTR [eax+0x1b315907],dl
  408d83:	call   FWORD PTR [esi+0x72]
  408d86:	mov    al,0x13
  408d88:	add    BYTE PTR [eax],al
  408d8a:	test   al,0xf9
  408d8c:	sbb    DWORD PTR [ebp+0x21],esi
  408d8f:	xchg   ax,ax
  408d91:	pop    es
  408d92:	pop    ecx
  408d93:	je     0x408dad
  408d95:	(bad)  
  408d96:	ds jp  0x408d31
  408d99:	or     esi,DWORD PTR [edx]
  408d9b:	(bad)
  408d9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d9f:	jmp    0x408dba
  408da1:	jne    0x408ddc
  408da3:	push   ebx
  408da4:	fwait
  408da5:	cld    
  408da6:	push   ds
  408da7:	sbb    dh,BYTE PTR ss:[ebp+0x41]
  408dab:	adc    al,0x26
  408dad:	nop
  408dae:	ss cld 
  408db0:	mov    ebx,DWORD PTR [eax]
  408db2:	push   es
  408db3:	add    eax,0x7a2e9016
  408db8:	icebp  
  408db9:	sbb    bh,BYTE PTR [esp+ebx*1+0x11]
  408dbd:	outs   dx,BYTE PTR ds:[esi]
  408dbe:	lds    eax,FWORD PTR [esi+edi*8]
  408dc1:	sbb    DWORD PTR [esp-0xa],ebx
  408dc5:	(bad)  
  408dc6:	ss cld 
  408dc8:	int3   
  408dc9:	outs   dx,DWORD PTR ds:[esi]
  408dca:	(bad)  
  408dcb:	add    al,0xb0
  408dcd:	inc    esi
  408dce:	and    DWORD PTR [esp+esi*1],edx
  408dd1:	(bad)  
  408dd2:	aad    0x4
  408dd4:	pop    esp
  408dd5:	or     BYTE PTR [ebx+0x13],cl
  408dd8:	into   
  408dd9:	(bad)  
  408dda:	cs cld 
  408ddc:	je     0x408e4e
  408dde:	scas   al,BYTE PTR es:[edi]
  408ddf:	add    al,0xbe
  408de1:	(bad)  
  408de2:	cmp    al,BYTE PTR ds:0xec890c3c
  408de8:	scas   al,BYTE PTR es:[edi]
  408de9:	sbb    DWORD PTR [esi+0xf43b98],edx
  408def:	add    BYTE PTR [ecx+0x3a8f9e11],bh
  408df5:	add    eax,0xdc890c1c
  408dfa:	mov    ds,WORD PTR [ecx]
  408dfc:	jbe    0x408d96
  408dfe:	sbb    esi,eax
  408e00:	mov    ecx,0x3a8f7e11
  408e05:	add    eax,0xcc490bfc
  408e0a:	outs   dx,BYTE PTR ds:[esi]
  408e0b:	sbb    DWORD PTR [esi-0x68],edx
  408e0e:	mov    ebx,0x3011b9fb
  408e13:	inc    esi
  408e14:	sbb    eax,0x4d8cbc14
  408e19:	nop
  408e1a:	and    al,0x28
  408e1c:	fistp  WORD PTR [esi+eax*2-0x71]
  408e20:	inc    edx
  408e21:	outs   dx,BYTE PTR ds:[esi]
  408e22:	call   0x4d2a3f
  408e27:	inc    ecx
  408e28:	hlt    
  408e29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e2a:	(bad)  
  408e2b:	cmp    BYTE PTR cs:[ecx+0x1bbe2614],cl
  408e32:	call   0xff440a8c
  408e37:	bound  esp,QWORD PTR ds:0x32e83aed
  408e3d:	adc    al,0x8b
  408e3f:	lods   al,BYTE PTR ds:[esi]
  408e40:	ficom  WORD PTR [esi+0x18b7e937]
  408e46:	jmp    0x54c20a
  408e4b:	es xchg esi,eax
  408e4d:	(bad)  
  408e4e:	(bad)  
  408e4f:	call   0x24cda286
  408e54:	add    BYTE PTR [eax],al
  408e56:	sub    DWORD PTR [edi+edi*8+0x5c],esp
  408e5a:	rol    DWORD PTR [edx],0x75
  408e5d:	stc    
  408e5e:	sbb    DWORD PTR [ecx+0x244d108],ecx
  408e64:	(bad)  
  408e65:	mov    esi,0x3482fcb5
  408e6a:	cmp    DWORD PTR [esp+esi*2],edx
  408e6d:	or     al,ch
  408e6f:	sub    al,0x3c
  408e71:	sub    BYTE PTR ds:0x5a9d7503,dh
  408e77:	mov    gs,WORD PTR [edx-0x17]
  408e7a:	xor    cl,BYTE PTR [edi]
  408e7c:	rcl    BYTE PTR [esi+ebp*1],0x6c
  408e80:	xor    ebp,eax
  408e82:	jae    0x408e87
  408e84:	(bad)  
  408e85:	hlt    
  408e86:	ds in  al,dx
  408e88:	js     0x408e8c
  408e8a:	xor    eax,0x9248914
  408e8f:	out    dx,eax
  408e90:	push   es
  408e91:	cs (bad) 
  408e93:	out    dx,eax
  408e94:	(bad)  
  408e95:	call   0xd4c3a2cc
  408e9a:	push   ss
  408e9b:	adc    al,0x74
  408e9d:	icebp  
  408e9e:	mov    dl,BYTE PTR [eax+eax*1]
  408ea1:	add    BYTE PTR [edi+0x1475ff5d],al
  408ea7:	das    
  408ea8:	inc    edi
  408ea9:	xchg   ebp,eax
  408eaa:	addr16 sbb al,0xff
  408ead:	jne    0x408ef3
  408eaf:	sbb    al,0x75
  408eb1:	or     al,0x20
  408eb3:	jge    0x408e4a
  408eb5:	jmp    DWORD PTR [edi]
  408eb7:	mov    eax,DWORD PTR cs:[eax]
  408eba:	add    BYTE PTR [eax],al
  408ebc:	or     BYTE PTR [edi],dl
  408ebe:	mov    eax,DWORD PTR [ebp-0x4]
  408ec1:	xchg   edi,eax
  408ec2:	aaa    
  408ec3:	add    BYTE PTR [ebp+0x2],ch
  408ec6:	call   0x576751
  408ecb:	(bad)  
  408ecc:	lea    ebx,[esi]
  408ece:	add    BYTE PTR [eax],al
  408ed0:	enter  0xc716,0x45
  408ed4:	in     al,dx
  408ed5:	pop    ss
  408ed6:	add    BYTE PTR [eax],al
  408ed8:	fadd   DWORD PTR [ecx+0x45]
  408edb:	lock enter 0x16,0x0
  408ee0:	push   ebp
  408ee1:	aad    0xee
  408ee3:	push   eax
  408ee4:	and    eax,0x1550f2d5
  408ee9:	aad    0xf6
  408eeb:	push   eax
  408eec:	out    0xa4,eax
  408eee:	adc    bh,bh
  408ef0:	pop    ebp
  408ef1:	adc    al,ch
  408ef3:	loope  0x408ecb
  408ef5:	sub    bh,bh
  408ef7:	and    DWORD PTR ds:0x5b74002c,0xffffff95
  408efe:	jl     0x408ef8
  408f00:	mov    BYTE PTR [edx+0x2435832b],dl
  408f06:	add    BYTE PTR [ebp+0x4e],dh
  408f09:	xchg   ebp,eax
  408f0a:	jl     0x408efc
  408f0c:	dec    eax
  408f0d:	xchg   edx,eax
  408f0e:	pop    ds
  408f0f:	call   FWORD PTR [ebp+0x1e]
  408f12:	push   DWORD PTR [ebp+0x44]
  408f15:	cs cmp eax,0xff2ae795
  408f1b:	jne    0x408f4e
  408f1d:	popa   
  408f1e:	pop    ss
  408f1f:	jne    0x408f21
  408f21:	add    BYTE PTR ds:0x2e94d255,ah
  408f27:	pop    ebx
  408f28:	pop    ss
  408f29:	jne    0x408f4c
  408f2b:	inc    ebx
  408f2c:	xchg   ecx,eax
  408f2d:	or     ecx,DWORD PTR [ecx]
  408f2f:	adc    esi,DWORD PTR [ecx-0x1]
  408f32:	push   ss
  408f33:	xor    edx,DWORD PTR [ecx+0x7ae019f7]
  408f39:	inc    DWORD PTR [esi]
  408f3b:	and    edx,DWORD PTR [ecx+0x7ad809f3]
  408f41:	push   esi
  408f43:	adc    dl,BYTE PTR [ecx+0x7acfd9ef]
  408f49:	jmp    esi
  408f4b:	mov    dl,0x9
  408f4d:	jmp    FWORD PTR [esi]
  408f4f:	jo     0x408efa
  408f51:	(bad)  
  408f52:	(bad)  
  408f53:	repnz cmp DWORD PTR [ebp-0x23],0x5b1d8eeb
  408f5b:	jmp    0x408f72
  408f5d:	jne    0x408f8c
  408f5f:	shr    DWORD PTR [esi-0x6c],cl
  408f62:	mov    dh,0xd2
  408f64:	test   al,0xff
  408f66:	scas   eax,DWORD PTR es:[edi]
  408f67:	inc    eax
  408f68:	or     al,ch
  408f6a:	mov    ebx,0xbff1667
  408f6f:	jmp    0x408f86
  408f71:	jne    0x408f98
  408f73:	rol    DWORD PTR [edx+0x15ba8e94],cl
  408f79:	jne    0x408f00
  408f7b:	mov    ds:0xaa7e9725,eax
  408f80:	les    ecx,FWORD PTR [edx]
  408f82:	jg     0x408f66
  408f84:	jg     0x408f43
  408f86:	add    BYTE PTR [eax],al
  408f88:	outs   dx,DWORD PTR ds:[esi]
  408f89:	call   0x1040:0xc4075f15
  408f90:	xor    DWORD PTR [eax],esp
  408f92:	mov    ebp,esp
  408f94:	mov    dl,0xb7
  408f96:	push   ds
  408f97:	push   esi
  408f98:	dec    esi
  408f99:	adc    al,0xdc
  408f9b:	or     ebx,DWORD PTR [ecx-0x57]
  408f9e:	ins    DWORD PTR es:[edi],dx
  408f9f:	push   ss
  408fa0:	mov    ebp,DWORD PTR ds:[ebx+0x557fb20f]
  408fa7:	repz mov ds:0x3104810e,eax
  408fad:	adc    al,0xe9
  408faf:	mov    ch,0xe9
  408fb1:	aad    0xe0
  408fb3:	add    edx,DWORD PTR [esi]
  408fb5:	xchg   ecx,esp
  408fb7:	sub    ebp,DWORD PTR [edx+eiz*4+0x56ee1625]
  408fbe:	and    DWORD PTR [ecx+esi*1],eax
  408fc1:	adc    al,0xe9
  408fc3:	mov    BYTE PTR [esp+edi*8-0x48],ch
  408fc7:	push   ss
  408fc8:	fs or  al,0x11
  408fcb:	faddp  st(0),st
  408fcd:	add    dh,bh
  408fcf:	mov    esi,DWORD PTR [eax+eax*1+0x6a]
  408fd3:	cwde   
  408fd4:	ficom  WORD PTR [ebx]
  408fd6:	jne    0x408fdf
  408fd8:	mov    dl,0x7e
  408fda:	in     eax,0x2
  408fdc:	inc    ebx
  408fdd:	sbb    ch,BYTE PTR [edx-0x69]
  408fe0:	mov    edx,0x790a5f19
  408fe5:	adc    ch,cl
  408fe7:	add    esi,DWORD PTR [ecx]
  408fe9:	bound  esi,QWORD PTR [eax+0x39000042]
  408fef:	adc    al,0x6c
  408ff1:	mov    edi,0x8fb663a6
  408ff6:	cs in  al,dx
  408ff8:	lods   al,BYTE PTR ds:[esi]
  408ff9:	jae    0x408f89
  408ffb:	add    BYTE PTR [edx-0x69],ch
  408ffe:	jle    0x409013
  409000:	adc    eax,0x1cd42a00
  409005:	or     bh,BYTE PTR [ecx+0x3103e912]
  40900b:	bound  esi,QWORD PTR [eax+0x6a143942]
  409011:	xchg   edi,eax
  409012:	pop    edx
  409013:	push   ss
  409014:	add    bl,bh
  409016:	pop    ebp
  409017:	pop    DWORD PTR [ecx+esi*2-0x7b]
  40901b:	push   0x18
  40901d:	data16 mov dh,0x18
  409020:	call   0xff4150e6
  409025:	fs jbe 0x409030
  409028:	push   eax
  409029:	dec    esi
  40902a:	mov    esi,0xa231e817
  40902f:	(bad)  
  409030:	(bad)  
  409031:	jo     0x409011
  409033:	repz jmp 0x2599:0xf859afd4
  40903b:	mov    DWORD PTR [eax],ecx
  40903d:	adc    DWORD PTR [ebp+eiz*4-0x2],esi
  409041:	push   ds
  409042:	stos   BYTE PTR es:[edi],al
  409043:	pop    ecx
  409044:	in     al,0x64
  409046:	mov    dh,0x7
  409048:	push   eax
  409049:	sub    esi,0xfffffffe
  40904c:	je     0x40903f
  40904e:	sbb    ch,BYTE PTR [edx]
  409050:	xchg   edx,eax
  409051:	inc    BYTE PTR [eax]
  409053:	add    BYTE PTR [ebp-0x6f],al
  409056:	inc    esp
  409057:	icebp  
  409058:	mov    ds:0x1ae174fe,al
  40905d:	jecxz  0x409058
  40905f:	out    0x1d,al
  409061:	xchg   ebx,eax
  409062:	jl     0x409029
  409064:	xor    ecx,DWORD PTR [ecx+0x777641e]
  40906a:	push   eax
  40906b:	into   
  40906c:	mov    edi,0x393cfefb
  409071:	push   DWORD PTR [ecx+esi*8+0x4a]
  409075:	scas   al,BYTE PTR es:[edi]
  409076:	cld    
  409077:	mov    dh,0x3d
  409079:	xchg   ecx,eax
  40907a:	inc    esp
  40907b:	mov    cl,0xc2
  40907d:	(bad)  
  40907e:	je     0x409071
  409080:	pop    edx
  409081:	scas   eax,DWORD PTR es:[edi]
  409082:	stc    
  409083:	sahf   
  409084:	and    eax,0x32917c93
  409089:	mov    DWORD PTR [edx],ecx
  40908b:	push   ecx
  40908c:	xor    dl,BYTE PTR [eax+eax*1]
  40908f:	add    BYTE PTR [eax-0x37],bl
  409092:	mov    edx,0x458d1360
  409098:	loopne 0x40905c
  40909a:	std    
  40909b:	jne    0x409079
  40909d:	daa    
  40909e:	jne    0x4090ac
  4090a0:	iret   
  4090a1:	lea    eax,[esi]
  4090a3:	call   0x3fb670
  4090a8:	retf   
  4090a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4090aa:	test   BYTE PTR [eax],0x5
  4090ad:	or     eax,0x131800b8
  4090b2:	add    BYTE PTR [esi+0x61],bl
  4090b5:	push   ebp
  4090b6:	or     BYTE PTR [eax],al
  4090b8:	add    BYTE PTR [eax],al
  4090ba:	lea    edi,[esi-0x71a0af0a]
  4090c0:	push   es
  4090c1:	call   0x4012d6
  4090c6:	and    DWORD PTR [ebx],0xffffffe9
  4090c9:	sti    
  4090ca:	or     BYTE PTR [ebx],dl
  4090cc:	add    bh,bh
  4090ce:	lds    ecx,FWORD PTR [edx]
  4090d0:	call   0xff691bbc
  4090d5:	cmp    edx,DWORD PTR [ebp+0x3105750e]
  4090db:	adc    BYTE PTR [eax],al
  4090dd:	add    al,bl
  4090df:	xchg   ebx,eax
  4090e0:	jl     0x4090de
  4090e2:	(bad)  
  4090e3:	test   al,0x22
  4090e5:	lea    edx,ds:0x55ff5010
  4090eb:	add    bh,ah
  4090ed:	or     eax,0x8dff2329
  4090f2:	push   ebp
  4090f3:	adc    BYTE PTR [eax-0x1],dl
  4090f6:	gs add bh,ah
  4090f9:	cmp    ah,dl
  4090fb:	and    bh,bh
  4090fd:	lea    edx,[ebp+0x10]
  409100:	push   eax
  409101:	jmp    DWORD PTR ds:0xd22ee700
  409107:	and    bh,bh
  409109:	lea    esi,[ecx]
  40910b:	xor    BYTE PTR [eax+edx*2],cl
  40910e:	outs   dx,BYTE PTR ds:[esi]
  40910f:	daa    
  409110:	cld    
  409111:	out    0x82,eax
  409113:	xchg   ecx,eax
  409114:	adc    bh,bh
  409116:	test   al,0x37
  409118:	adc    al,0x8d
  40911a:	in     al,dx
  40911b:	test   BYTE PTR [esi+edi*8-0xb3c0000],dh
  409122:	sbb    al,ah
  409124:	dec    edx
  409125:	jne    0x40913a
  409127:	mov    esp,esi
  409129:	push   eax
  40912a:	add    DWORD PTR [ebp+0x39],0x397511bc
  409131:	push   ebx
  409132:	pop    ecx
  409133:	sti    
  409134:	es push edi
  409136:	jge    0x40917d
  409138:	or     DWORD PTR [ebx-0x6f],ebp
  40913b:	out    dx,eax
  40913c:	xor    DWORD PTR [edi+0x3f8c8295],edi
  409142:	add    al,0x74
  409144:	xchg   esp,eax
  409145:	push   0xffffff91
  409147:	out    0x31,eax
  409149:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40914a:	test   eax,0x4237482
  40914f:	je     0x4091a1
  409151:	xchg   ebx,eax
  409152:	int3   
  409153:	cmp    esi,DWORD PTR [eax-0x15]
  409156:	adc    DWORD PTR [ebp-0x1f],esi
  409159:	and    ecx,DWORD PTR [edi+0x68]
  40915c:	xor    ebx,ebp
  40915e:	std    
  40915f:	mov    edi,0x289acd44
  409164:	add    eax,0x44ff042c
  409169:	fistp  DWORD PTR [edx]
  40916b:	stos   BYTE PTR es:[edi],al
  40916c:	dec    ecx
  40916d:	jmp    0x409171
  40916f:	or     esi,DWORD PTR [ecx+0x68]
  409172:	add    DWORD PTR [eax+0x60],ebp
  409175:	pop    ss
  409176:	(bad)  
  409179:	dec    eax
  40917a:	adc    al,0xe8
  40917c:	mov    eax,0x3a000453
  409181:	stos   DWORD PTR es:[edi],eax
  409182:	xchg   esi,eax
  409183:	sub    eax,0x14190000
  409188:	jmp    0x9dff1f90
  40918d:	cwde   
  40918e:	sub    ch,ah
  409190:	sbb    esi,DWORD PTR [esi+0x6e]
  409193:	std    
  409194:	lea    ebx,[eax-0x402aa]
  40919a:	push   esi
  40919b:	rcr    BYTE PTR [edx+0x12],1
  40919e:	push   esi
  40919f:	std    
  4091a0:	sti    
  4091a1:	pop    ds
  4091a2:	dec    esi
  4091a3:	xchg   ebp,ebx
  4091a5:	sbb    esi,DWORD PTR [eax-0x5e]
  4091a8:	adc    bh,BYTE PTR gs:[esi]
  4091ab:	xchg   DWORD PTR [ecx+0x12],edx
  4091ae:	mov    esp,0xc359410f
  4091b3:	cld    
  4091b4:	dec    ebp
  4091b5:	adc    bl,BYTE PTR [esp+eax*1-0x33bb9af]
  4091bc:	cmp    eax,0x40f09c12
  4091c1:	dec    esi
  4091c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4091c3:	cld    
  4091c4:	sub    eax,0x10ec7c12
  4091c9:	push   esi
  4091ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4091cb:	cld    
  4091cc:	sbb    eax,0x117eb3c1
  4091d1:	add    esp,DWORD PTR [ebp+0xc]
  4091d4:	loop   0x4091ef
  4091d6:	ss xchg edi,eax
  4091d8:	std    
  4091d9:	adc    dh,bl
  4091db:	cld    
  4091dc:	jno    0x4091a6
  4091de:	ficomp WORD PTR [ebp+0x20]
  4091e1:	inc    ebp
  4091e2:	cmp    DWORD PTR [esp+edx*4],edx
  4091e5:	jle    0x4091bc
  4091e7:	nop
  4091e8:	lods   al,BYTE PTR ds:[esi]
  4091e9:	adc    BYTE PTR [eax],al
  4091eb:	add    BYTE PTR [esi+0x6a1bed86],bh
  4091f1:	mov    esp,0xd43a11d5
  4091f6:	push   ebx
  4091f7:	shl    DWORD PTR [ebp-0x694b3aaa],1
  4091fd:	loop   0x40926b
  4091ff:	adc    DWORD PTR [esi+0x213bfffc],edx
  409205:	std    
  409206:	je     0x4091e5
  409208:	sub    al,ch
  40920a:	lea    esp,[esi+0x15c00920]
  409210:	cmp    ch,0x74
  409213:	loope  0x409256
  409215:	xchg   esp,edi
  409217:	cmp    DWORD PTR [eax+0x5c86fefe],0xbad974bc
  409221:	cld    
  409222:	push   cs
  409223:	xchg   bl,ah
  409225:	cld    
  409226:	je     0x409205
  409228:	and    DWORD PTR [edi-0x3b2caef8],eax
  40922e:	(bad)  
  40922f:	pop    esi
  409230:	and    BYTE PTR [edi-0x7782be04],al
  409236:	dec    BYTE PTR [esi+0x6a]
  409239:	(bad)  
  40923a:	pop    es
  40923b:	jmp    0x692c2127
  409240:	imul   eax,eax,0xd32036fd
  409246:	test   BYTE PTR [ecx+0x23],dh
  409249:	sti    
  40924a:	(bad)  
  40924b:	jmp    0x7240a682
  409250:	add    BYTE PTR [eax],al
  409252:	out    dx,al
  409253:	ud2    
  409255:	sub    ecx,ecx
  409257:	adc    BYTE PTR [eax+0x58132d1],al
  40925d:	adc    BYTE PTR [edx+0x41e90014],ah
  409263:	or     DWORD PTR [ecx+eax*1],0xeefeb431
  40926a:	lds    edi,FWORD PTR [ebx-0x3f65098c]
  409270:	sub    ebp,DWORD PTR [eax]
  409272:	sub    eax,0x4ae574fb
  409277:	lods   eax,DWORD PTR ds:[esi]
  409278:	xchg   edi,eax
  409279:	into   
  40927a:	inc    ecx
  40927b:	out    dx,eax
  40927c:	or     al,0x0
  40927e:	add    BYTE PTR [edx+0x2c],cl
  409281:	inc    ecx
  409282:	mov    BYTE PTR [esi*2-0x67968ff4],ah
  409289:	call   edi
  40928b:	jle    0x409212
  40928d:	mov    eax,0x68ff24d6
  409292:	push   esi
  409293:	push   ss
  409294:	add    BYTE PTR [eax],al
  409296:	aad    0x91
  409298:	sar    esi,0xb7
  40929b:	and    al,0x50
  40929d:	call   0x40151c
  4092a2:	lds    edx,FWORD PTR [ecx+0x23c7fec1]
  4092a8:	push   eax
  4092a9:	(bad)  
  4092aa:	std    
  4092ab:	dec    esi
  4092ac:	(bad)  
  4092ad:	call   edi
  4092af:	push   ds
  4092b0:	dec    esi
  4092b1:	dec    ax
  4092b3:	pop    ss
  4092b4:	mov    DWORD PTR [ebp+0x24c40000],eax
  4092ba:	(bad)  
  4092bb:	(bad)  
  4092bc:	fcom   DWORD PTR [ebx]
  4092be:	test   bl,dh
  4092c0:	or     BYTE PTR [edi],dl
  4092c2:	add    BYTE PTR [ebp-0x1ae83],cl
  4092c8:	inc    edi
  4092c9:	sbb    al,0x2
  4092cb:	adc    BYTE PTR [eax],bl
  4092cd:	pop    ss
  4092ce:	add    BYTE PTR [ebp+edx*8+0x79],dh
  4092d2:	inc    edx
  4092d3:	sub    al,0xb8
  4092d5:	sahf   
  4092d6:	scas   al,BYTE PTR es:[edi]
  4092d7:	sub    al,0x99
  4092d9:	push   ss
  4092da:	call   0x57410a
  4092df:	or     ecx,DWORD PTR [eax]
  4092e1:	mov    ds:0x1781e903,al
  4092e6:	add    BYTE PTR [eax],al
  4092e8:	push   ebp
  4092e9:	add    dl,0xfe
  4092ec:	xlat   BYTE PTR ds:[ebx]
  4092ed:	or     cl,BYTE PTR [ebp+0x66c02442]
  4092f3:	mov    dl,0x24
  4092f5:	sar    esi,1
  4092f7:	out    0x31,eax
  4092f9:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4092fb:	jmp    DWORD PTR [esi+0x347542f5]
  409301:	in     al,0x7f
  409303:	add    BYTE PTR [ecx],dh
  409305:	in     eax,dx
  409306:	or     eax,0x9fd53d75
  40930b:	sahf   
  40930c:	xchg   BYTE PTR [ecx+0x204bffa],ch
  409312:	fwait
  409313:	ret    
  409314:	dec    ecx
  409315:	sub    al,0x4
  409317:	jmp    esp
  409319:	lock sbb cl,BYTE PTR [ecx]
  40931c:	add    BYTE PTR [eax],al
  40931e:	leave  
  40931f:	mov    DWORD PTR [esi],ecx
  409321:	jmp    0x40934e
  409323:	daa    
  409324:	add    al,0xff
  409326:	fsub   st(0),st
  409328:	sbb    bh,ch
  40932a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40932b:	or     DWORD PTR [edi],0xdae9c8d
  409331:	(bad)  
  409332:	ds jg  0x4092e7
  409335:	sub    esp,ebx
  409337:	mov    esp,0x62c9411a
  40933c:	(bad)  
  40933e:	es loope 0x409333
  409341:	dec    edi
  409342:	push   ds
  409343:	mov    ecx,0x3a1be7fa
  409348:	ud0    ebx,DWORD PTR [ecx]
  40934b:	add    BYTE PTR [edi-0x1],dh
  40934e:	push   es
  40934f:	push   edi
  409350:	ret    
  409351:	mov    WORD PTR [ebx-0x21],?
  409354:	jnp    0x4092db
  409356:	mov    ebp,0xeeff0f19
  40935b:	cwde   
  40935c:	repnz (bad) 
  40935e:	pushf  
  40935f:	pop    edi
  409360:	push   cs
  409361:	(bad)  
  409362:	fisub  WORD PTR [ebx]
  409364:	dec    edi
  409365:	xor    bx,bp
  409368:	stc    
  409369:	mov    edi,0xc39ad345
  40936e:	sbb    DWORD PTR [edx+eax*1-0xaebbb01],ebp
  409375:	sbb    eax,DWORD PTR [eax-0x51f1225f]
  40937b:	mov    edi,0xf9a60d9c
  409380:	cmp    BYTE PTR [eax+eax*1],bl
  409383:	add    BYTE PTR [eax+0x10ec5a1],bl
  409389:	fs mov esi,0x48ec3698
  40938f:	push   cs
  409390:	xchg   cl,bh
  409392:	rcl    BYTE PTR [esi],0xa2
  409395:	stc    
  409396:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409397:	sub    BYTE PTR [esi+edx*8+0x646e0e9e],0x96
  40939f:	pop    eax
  4093a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4093a1:	cli    
  4093a2:	lea    ecx,[esi]
  4093a4:	dec    ecx
  4093a5:	addr16 or al,0x4
  4093a8:	xor    DWORD PTR [edi+0x1cb5fea8],ecx
  4093ae:	jbe    0x4093be
  4093b0:	inc    esi
  4093b1:	stc    
  4093b2:	xor    ecx,DWORD PTR [edi+0x3f]
  4093b5:	stc    
  4093b6:	gs sbb edx,ecx
  4093b9:	outs   dx,BYTE PTR ds:[esi]
  4093ba:	jmp    0x90ffc1c2
  4093bf:	or     eax,0x4640f926
  4093c4:	ret    0x45f8
  4093c7:	cmp    al,0xf3
  4093c9:	pop    es
  4093ca:	jmp    0x68284f87
  4093cf:	inc    edi
  4093d0:	sar    ecx,0x2d
  4093d3:	push   cs
  4093d4:	test   BYTE PTR [esi-0x709f2a0],0xe8
  4093db:	add    esi,DWORD PTR [ecx]
  4093dd:	adc    al,0x62
  4093df:	enter  0xd3a,0x29
  4093e3:	xchg   edi,eax
  4093e4:	xor    eax,0x3c094
  4093e9:	add    BYTE PTR [edi+ecx*1+0x10],bl
  4093ed:	cld    
  4093ee:	xor    DWORD PTR [eax+eax*1],edx
  4093f1:	jmp    0xa86c53a0
  4093f6:	xor    bh,cl
  4093f8:	je     0x4093ef
  4093fa:	sbb    al,BYTE PTR [ebx-0x69]
  4093fd:	fidivr WORD PTR [ebx+ecx*4]
  409400:	test   BYTE PTR [ecx+0x41fef937],dl
  409406:	outs   dx,DWORD PTR ds:[esi]
  409407:	adc    eax,DWORD PTR [eax]
  409409:	jmp    0xc0022325
  40940e:	cmp    al,0xf9
  409410:	dec    edi
  409411:	shr    edx,0xa4
  409414:	(bad)  
  409415:	scas   al,BYTE PTR es:[edi]
  409416:	dec    BYTE PTR [esi-0x6db583f]
  40941c:	dec    edi
  40941d:	sahf   
  40941e:	push   es
  40941f:	mov    esp,0xec3496fd
  409424:	in     al,0x5
  409426:	xor    eax,0x16c8914
  40942b:	cli    
  40942c:	(bad)  
  40942d:	jle    0x4094a4
  40942f:	or     DWORD PTR [edi+ebp*4+0x5c00142d],eax
  409436:	(bad)  
  409437:	aad    0xfd
  409439:	data16 and al,0x1
  40943c:	add    bh,cl
  40943e:	xor    dl,BYTE PTR [eax+eax*1]
  409441:	out    0xae,al
  409443:	xchg   edi,edi
  409445:	call   0x2bd51d7c
  40944a:	daa    
  40944b:	idiv   esi
  40944d:	ins    BYTE PTR es:[edi],dx
  40944e:	add    BYTE PTR [eax],al
  409450:	repz sub edx,DWORD PTR [eax-0x3f]
  409454:	bound  ebp,QWORD PTR [eax]
  409456:	inc    ecx
  409457:	jmp    0xe9a45076
  40945c:	xor    cl,BYTE PTR [ebx]
  40945e:	rcl    BYTE PTR [eax+esi*1+0x5e6474eb],0xd2
  409466:	std    
  409467:	push   cs
  409468:	sub    al,0x89
  40946a:	inc    ecx
  40946b:	add    ah,bh
  40946d:	ret    
  40946e:	data16 mov dl,0xfc
  409471:	sar    dh,cl
  409473:	out    0x5e,eax
  409475:	lods   al,BYTE PTR ds:[esi]
  409476:	(bad)  
  409477:	call   ebx
  409479:	push   ebx
  40947a:	jne    0x40947e
  40947c:	jecxz  0x40942a
  40947e:	mov    edx,DWORD PTR [ebp-0xf626]
  409484:	or     eax,0x15892ad5
  409489:	pop    edi
  40948a:	(bad)  
  40948b:	jmp    FWORD PTR [edi-0x65]
  40948e:	ret    0x5928
  409491:	adc    bh,bh
  409493:	jne    0x409421
  409495:	sbb    ebx,DWORD PTR [ecx-0xf7306a]
  40949b:	mov    ch,0xd4
  40949d:	or     bh,bh
  40949f:	jmp    FWORD PTR [eax]
  4094a1:	sbb    cl,ah
  4094a3:	xchg   esi,eax
  4094a4:	mov    edi,0xf8858908
  4094a9:	or     bh,bh
  4094ab:	(bad)  
  4094ac:	cmp    BYTE PTR [eax+0x10193c3f],bl
  4094b2:	push   DWORD PTR [ebp+0x9080000]
  4094b8:	(bad)  
  4094b9:	push   DWORD PTR [eax+0x480063a4]
  4094bf:	cld    
  4094c0:	mov    esi,0x459b2b74
  4094c5:	cmp    al,0xd9
  4094c7:	adc    bh,bh
  4094c9:	mov    ch,0xb8
  4094cb:	or     bh,bh
  4094cd:	jmp    FWORD PTR [edi-0x62]
  4094d0:	push   es
  4094d1:	call   0x3f9ac7
  4094d6:	jo     0x409524
  4094d8:	xchg   edx,eax
  4094d9:	dec    DWORD PTR [edi+0x76]
  4094dc:	test   edx,eax
  4094de:	dec    esi
  4094df:	or     bh,bh
  4094e1:	push   eax
  4094e2:	dec    edi
  4094e3:	pop    esi
  4094e4:	mov    esp,0xc1e31fe
  4094e9:	call   0x43260e
  4094ee:	lods   al,BYTE PTR ds:[esi]
  4094ef:	sub    al,0xfc
  4094f1:	test   BYTE PTR [esi+esi*8+0xa],dh
  4094f5:	inc    esi
  4094f7:	aaa    
  4094f8:	dec    edi
  4094f9:	(bad)  
  4094fa:	mov    esi,0x4d2419e5
  4094ff:	in     eax,dx
  409500:	add    bh,bh
  409502:	in     al,0xb4
  409504:	or     edi,edi
  409506:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409507:	aam    0x7e
  409509:	xchg   edx,eax
  40950a:	sahf   
  40950b:	lds    edi,FWORD PTR [edx+eax*8]
  40950e:	sub    ebp,ebp
  409510:	scas   eax,DWORD PTR es:[edi]
  409511:	mov    bl,BYTE PTR [ebp-0x66f46f4b]
  409517:	mov    cl,0x71
  409519:	inc    DWORD PTR [eax]
  40951b:	add    BYTE PTR [esi-0xf],bh
  40951e:	inc    edx
  40951f:	je     0x409547
  409521:	cmp    eax,0x4e4feb4
  409526:	sbb    ebp,DWORD PTR [ebx-0x17f56299]
  40952c:	enter  0xb7a,0xff
  409530:	push   0xe5fffbaa
  409535:	sbb    DWORD PTR [eax],0x9e806d83
  40953b:	dec    eax
  40953d:	retf   
  40953e:	or     DWORD PTR [ebp+0x29],esi
  409541:	gs jg  0x4094d3
  409544:	cs push edi
  409546:	jge    0x40958d
  409548:	and    eax,0xa4feecd2
  40954d:	repz sbb bh,BYTE PTR [edi+0x6a0b4f16]
  409554:	push   edx
  409555:	ss xchg ecx,eax
  409557:	pop    es
  409558:	sbb    DWORD PTR [ecx+0xb],edi
  40955b:	(bad)  
  40955c:	(bad)  
  40955d:	shl    esi,1
  40955f:	(bad)  
  409560:	jl     0x409576
  409562:	icebp  
  409563:	sbb    ebx,DWORD PTR [edx+0x5b0b1df5]
  409569:	adc    al,0x81
  40956b:	pushf  
  40956c:	sbb    dl,BYTE PTR [ebx-0x17]
  40956f:	fwait
  409570:	cmp    DWORD PTR [eax],0x3fce03a8
  409576:	call   0xa5d7:0x11471dc
  40957d:	cmc    
  40957e:	in     eax,dx
  40957f:	inc    BYTE PTR [eax]
  409581:	add    BYTE PTR [esi-0x80],dh
  409584:	std    
  409585:	mov    bl,0x16
  409587:	dec    ebp
  409588:	sbb    eax,0xd645a6c5
  40958d:	nop
  40958e:	ss in  al,dx
  409590:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409591:	pop    es
  409592:	xchg   esi,eax
  409593:	cmc    
  409594:	rol    BYTE PTR [esi],1
  409596:	mov    ds:0x869dbdf5,eax
  40959b:	ins    DWORD PTR es:[edi],dx
  40959c:	xor    al,cl
  40959e:	icebp  
  40959f:	adc    eax,DWORD PTR [ecx-0x4b]
  4095a2:	cmp    dl,BYTE PTR [ebx-0x17]
  4095a5:	or     ah,BYTE PTR [ecx+eiz*2]
  4095a8:	rol    ah,1
  4095aa:	in     ax,dx
  4095ac:	in     al,dx
  4095ad:	jo     0x40960d
  4095af:	cmc    
  4095b0:	loope  0x4095f5
  4095b2:	fstp   QWORD PTR [edi]
  4095b4:	sbb    DWORD PTR [edi+esi*8-0x1efbd7c9],ebx
  4095bb:	hlt    
  4095bc:	sti    
  4095bd:	sti    
  4095be:	push   esi
  4095bf:	mov    ds:0xec360a6c,al
  4095c4:	cmp    al,0x74
  4095c6:	cs cmc 
  4095c8:	rol    BYTE PTR [ebx],cl
  4095ca:	fwait
  4095cb:	adc    al,0xc1
  4095cd:	jle    0x40962c
  4095cf:	push   ebx
  4095d0:	jmp    0xe935ac70
  4095d5:	sbb    DWORD PTR [ecx],0xffffffdb
  4095d8:	push   esp
  4095d9:	or     al,BYTE PTR [esi]
  4095db:	or     DWORD PTR [eax],eax
  4095dd:	sub    DWORD PTR [esi+0x1a995030],ebp
  4095e3:	jne    0x409580
  4095e5:	add    BYTE PTR es:[eax],al
  4095e8:	cmp    ecx,DWORD PTR [ecx]
  4095ea:	rcl    BYTE PTR [ebp-0x5197bb2a],0xf6
  4095f1:	push   ebx
  4095f2:	add    BYTE PTR [ecx+0x11087f2b],bh
  4095f8:	xchg   esi,eax
  4095f9:	clc    
  4095fa:	(bad)  
  4095fb:	(bad)  
  4095fc:	sub    edx,DWORD PTR [esi-0x13d70970]
  409602:	cwde   
  409603:	pop    eax
  409604:	sub    esi,ebp
  409606:	(bad)  
  409607:	pop    esp
  409608:	cmp    ebp,esi
  40960a:	je     0x4095fd
  40960c:	dec    edx
  40960d:	or     BYTE PTR [edi-0x3e34d72a],cl
  409613:	in     eax,0x32
  409615:	pop    edi
  409616:	mov    edx,ebp
  409618:	mov    dl,0xcf
  40961a:	jmp    0x4095d2
  40961c:	cmp    ch,dh
  40961e:	mov    WORD PTR [ecx+ebp*1],gs
  409621:	push   DWORD PTR fs:[edi*2+0x4af574f5]
  409629:	loop   0x40968d
  40962b:	jmp    0xe7009f62
  409630:	(bad)  
  409632:	(bad)  
  409633:	call   0x8185636a
  409638:	xor    eax,0xf1e90014
  40963d:	dec    esi
  40963e:	hlt    
  40963f:	jbe    0x409671
  409641:	adc    al,0x0
  409643:	add    ebp,DWORD PTR ds:0x32d3006a
  409649:	jle    0x40964b
  40964b:	ins    BYTE PTR es:[edi],dx
  40964c:	add    BYTE PTR [eax],al
  40964e:	out    0xe7,al
  409650:	dec    edi
  409651:	fs sahf 
  409653:	call   0x4468e54e
  409658:	inc    DWORD PTR [eax]
  40965a:	int    0x1f
  40965c:	push   DWORD PTR [ebp+0x44]
  40965f:	adc    BYTE PTR [ebx+eiz*2-0x3ff4e7f8],ah
  409666:	mov    esp,0xd88ee7f2
  40966b:	pop    ss
  40966c:	add    BYTE PTR [eax+0xc],ch
  40966f:	sar    BYTE PTR [edi],1
  409671:	add    BYTE PTR [edi-0x5d],al
  409674:	push   cs
  409675:	call   0x3ffa89
  40967a:	test   al,0x70
  40967c:	ror    BYTE PTR [ebp-0x8fbb3],1
  409682:	(bad)  
  409683:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409684:	push   eax
  409685:	call   0x3ffa89
  40968a:	and    DWORD PTR [edx-0x10],esi
  40968d:	test   DWORD PTR [edi+0x190de81c],0x886aff1c
  409697:	(bad)  
  409698:	iret   
  409699:	cmp    al,0x59
  40969b:	sbb    bh,bh
  40969d:	mov    ch,0xc8
  40969f:	add    al,0xff
  4096a1:	inc    edi
  4096a3:	mov    ds:0x8358e80a,al
  4096a8:	(bad)  
  4096a9:	jmp    ecx
  4096ab:	jno    0x409699
  4096ad:	test   edi,0xbd831c
  4096b3:	add    BYTE PTR [esp+eax*1-0x5cb70001],dh
  4096ba:	adc    DWORD PTR [eax+0x59],ebp
  4096bd:	pop    ss
  4096be:	out    dx,eax
  4096bf:	mov    esi,0xf7ec61c7
  4096c4:	(bad)  
  4096c5:	sbb    edi,edi
  4096c7:	jne    0x409719
  4096c9:	seta   BYTE PTR [edx-0x4a00e369]
  4096d0:	je     0x4096d6
  4096d2:	(bad)  
  4096d3:	push   DWORD PTR [ecx]
  4096d5:	push   ebp
  4096d6:	cmp    al,0x90
  4096d8:	push   ss
  4096d9:	bound  ecx,QWORD PTR [eax]
  4096db:	mov    ch,0x1
  4096dd:	xor    cl,BYTE PTR [eax]
  4096df:	inc    DWORD PTR [esi]
  4096e1:	test   al,0xf6
  4096e3:	inc    BYTE PTR [ebp+esi*8+0x41f6301a]
  4096ea:	or     bh,bh
  4096ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4096ed:	or     al,0x10
  4096ef:	jmp    esi
  4096f1:	add    al,0x58
  4096f3:	nop
  4096f4:	fimul  WORD PTR [ecx]
  4096f6:	or     BYTE PTR [ebp-0x27],al
  4096f9:	adc    edi,DWORD PTR [edi+0x819cefe]
  4096ff:	jne    0x4096c6
  409701:	add    al,0xa
  409703:	bound  esi,QWORD PTR [ecx]
  409705:	std    
  409706:	cmp    edx,eax
  409708:	and    eax,0x9d8aadfd
  40970d:	jnp    0x40974f
  40970f:	call   0x8d4768b2
  409714:	hlt    
  409715:	enter  0xfeb3,0x0
  409719:	add    BYTE PTR [ebp*8-0x3ac28afb],bl
  409720:	and    ah,BYTE PTR [edx+0x31]
  409723:	std    
  409724:	stc    
  409725:	mov    edi,0xe6802e
  40972a:	xor    ebp,edi
  40972c:	cmp    eax,0x2fc6945
  409731:	add    BYTE PTR [ecx],dh
  409733:	mov    edx,0x15ef3c0
  409738:	add    eax,DWORD PTR [eax]
  40973a:	retf   
  40973b:	cld    
  40973c:	cwde   
  40973d:	(bad)  
  40973e:	fdivr  st,st(4)
  409740:	cwde   
  409741:	push   DWORD PTR [ebp-0x53afefc9]
  409747:	jg     0x409759
  409749:	div    DWORD PTR [esi]
  40974b:	xor    DWORD PTR [esi+edi*8+0x76114a4],0x5150f09c
  409756:	xchg   ebx,eax
  409757:	adc    al,0xe9
  409759:	cli    
  40975a:	(bad)  
  40975b:	push   0x15101ce4
  409760:	jmp    0x11193068
  409765:	(bad)  
  409768:	mov    ebx,0x59cd0ef3
  40976d:	pop    es
  40976e:	out    dx,al
  40976f:	inc    esp
  409770:	jb     0x4097a6
  409772:	mov    ah,0x97
  409774:	adc    al,0xf
  409776:	fdivrp st(1),st
  409778:	mov    eax,0x79dcceb1
  40977d:	pop    es
  40977e:	add    BYTE PTR [eax],al
  409780:	into   
  409781:	fwait
  409782:	imul   edx,DWORD PTR [esi+edi*4],0xfffffff1
  409786:	std    
  409787:	sbb    ebx,DWORD PTR [edi]
  409789:	test   ch,dh
  40978b:	push   es
  40978c:	dec    ebx
  40978d:	adc    al,0x83
  40978f:	add    ebp,DWORD PTR [esi-0x59f12759]
  409795:	icebp  
  409796:	fst    QWORD PTR [eax+0x730cfc2a]
  40979c:	xchg   esi,eax
  40979d:	icebp  
  40979e:	pop    edi
  40979f:	sbb    BYTE PTR [ebp-0x79f93a17],0xa7
  4097a6:	int3   
  4097a7:	push   cs
  4097a8:	jle    0x40979b
  4097aa:	sar    BYTE PTR [edi],0x98
  4097ad:	icebp  
  4097ae:	lods   eax,DWORD PTR ds:[esi]
  4097af:	cli    
  4097b0:	scas   al,BYTE PTR es:[edi]
  4097b1:	push   0x97b9b40a
  4097b6:	nop
  4097b7:	push   cs
  4097b8:	pop    esi
  4097b9:	icebp  
  4097ba:	xchg   ebp,eax
  4097bb:	push   eax
  4097bc:	dec    ecx
  4097bd:	jmp    0x13999e4f
  4097c2:	pop    esp
  4097c3:	push   es
  4097c4:	inc    esi
  4097c5:	sbb    eax,0x7bf68fa9
  4097ca:	add    bl,ch
  4097cc:	xor    al,BYTE PTR [ecx]
  4097ce:	mov    esi,0x412fe001
  4097d3:	jmp    0x57283f07
  4097d8:	aaa    
  4097d9:	icebp  
  4097da:	(bad)  
  4097db:	fcomp  QWORD PTR [edx]
  4097dd:	stc    
  4097de:	xchg   edi,eax
  4097df:	xchg   ebp,eax
  4097e0:	aaa    
  4097e1:	icebp  
  4097e2:	addr16 jmp 0x4097e5
  4097e5:	add    BYTE PTR [edx],dh
  4097e7:	add    DWORD PTR [esi+0x412fd1d1],edi
  4097ed:	jmp    0x37283f21
  4097f2:	aaa    
  4097f3:	icebp  
  4097f4:	(bad)  
  4097f5:	pushf  
  4097f6:	jmp    0x67f1:0x37557ff8
  4097fd:	jmp    0x81fe9934
  409802:	ins    DWORD PTR es:[edi],dx
  409803:	xor    BYTE PTR [ecx-0x17],al
  409806:	das    
  409807:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409808:	out    0xf6,eax
  40980a:	xor    al,0xf1
  40980c:	(bad)  
  40980d:	jl     0x4097c9
  40980f:	clc    
  409810:	addr16 xor eax,0x7de7f137
  409816:	sbb    al,0xf1
  409818:	(bad)  
  409819:	fsubp  st(6),st
  40981b:	push   esi
  40981d:	(bad)  
  40981e:	sub    al,0xfc
  409820:	mov    BYTE PTR [esi+0x34],bl
  409823:	icebp  
  409824:	(bad)  
  409825:	jl     0x409844
  409827:	jmp    0x6775572a
  40982c:	or     al,0xb6
  40982e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40982f:	sbb    al,ch
  409831:	mov    WORD PTR [edi],?
  409833:	icebp  
  409834:	(bad)  
  409835:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409836:	mul    bl
  409838:	neg    BYTE PTR [esi+0x666cfc34]
  40983e:	sub    al,0xf1
  409840:	(bad)  
  409841:	and    al,0x3d
  409843:	sti    
  409844:	lock add BYTE PTR [esi+0xffff16],ch
  40984b:	add    BYTE PTR [ebp+0x18],al
  40984e:	call   0x58c20a
  409853:	leave  
  409854:	(bad)  
  409856:	(bad)  
  409857:	push   esp
  409858:	mov    ds:0x7cc4830c,eax
  40985d:	mov    bh,dh
  40985f:	imul   ebp,DWORD PTR [edx],0x70087519
  409865:	cdq    
  409866:	mov    bh,bh
  409868:	outs   dx,DWORD PTR ds:[esi]
  409869:	imul   eax,DWORD PTR [ebp-0x4],0xffffffe0
  40986d:	adc    eax,DWORD PTR [eax]
  40986f:	out    dx,eax
  409870:	jle    0x409802
  409872:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409873:	cmp    al,0x99
  409875:	adc    ebp,DWORD PTR [eax-0x47]
  409878:	int3   
  409879:	sar    dh,cl
  40987b:	inc    ch
  40987d:	jmp    0x409865
  40987f:	inc    edi
  409880:	je     0x40989b
  409882:	jmp    FWORD PTR [eax+0x19]
  409885:	fdivr  QWORD PTR [edi]
  409887:	add    BYTE PTR [edi],ch
  409889:	fist   WORD PTR [ecx+0x29]
  40988c:	mov    DWORD PTR [ebx],edx
  40988e:	push   DWORD PTR [ebp-0x30]
  409891:	or     edx,DWORD PTR [eax+0x68189ffd]
  409897:	ror    DWORD PTR [ebx+edx*8-0x2],0x67
  40989c:	mov    dl,BYTE PTR [ebx]
  40989e:	add    BYTE PTR [eax-0x17f96181],al
  4098a4:	(bad)  
  4098a5:	push   ss
  4098a6:	(bad)  
  4098a7:	jmp    eax
  4098a9:	ds cmp al,0x41
  4098ac:	mov    BYTE PTR [ebx+0x0],cl
  4098b2:	mov    BYTE PTR [ebx+0xb5075fe],dl
  4098b8:	pop    ebx
  4098b9:	dec    BYTE PTR [edi+0x7d156818]
  4098bf:	sar    dh,cl
  4098c1:	addr16 xor ebx,edi
  4098c4:	add    al,BYTE PTR [eax]
  4098c6:	mov    cl,0x9e
  4098c8:	lea    eax,[edi]
  4098ca:	pop    ecx
  4098cb:	and    al,0x6
  4098cd:	(bad)  
  4098ce:	outs   dx,BYTE PTR ds:[esi]
  4098d0:	mov    ?,ebx
  4098d2:	ss lock cli 
  4098d5:	out    0x86,eax
  4098d7:	push   ecx
  4098d8:	add    al,0xff
  4098da:	clc    
  4098db:	cmp    bh,bh
  4098dd:	inc    DWORD PTR [ebp-0x6300e89e]
  4098e3:	stc    
  4098e4:	sbb    bl,BYTE PTR [ecx]
  4098e6:	mov    ds:0xf10b045d,al
  4098eb:	mov    al,0xc9
  4098ed:	scas   eax,DWORD PTR es:[di]
  4098ef:	out    dx,eax
  4098f0:	sar    edi,0x66
  4098f3:	push   ebp
  4098f4:	push   ebp
  4098f5:	xchg   edx,eax
  4098f6:	out    dx,al
  4098f7:	cmp    eax,0xfd594fb3
  4098fc:	add    ch,bh
  4098fe:	lahf   
  4098ff:	test   BYTE PTR [ecx-0x4d028fc4],dl
  409905:	inc    BYTE PTR [ebp+esi*8+0x1a]
  409909:	jne    0x40988d
  40990b:	adc    eax,0xfc495804
  409910:	add    ch,bh
  409912:	ja     0x4098a8
  409914:	cmp    BYTE PTR ds:0xfcf00000,0xb2
  40991b:	(bad)  
  40991c:	sbb    al,0xe5
  40991e:	jmp    0xa4e8:0x2cde260
  409925:	jbe    0x40992a
  409927:	(bad)  
  409928:	js     0x4098e4
  40992a:	or     eax,DWORD PTR [eax]
  40992c:	fsub   QWORD PTR [ecx-0x10]
  40992f:	xor    BYTE PTR [ebp-0x50],0x6d
  409933:	add    BYTE PTR [ebx],cl
  409935:	sbb    al,BYTE PTR [ebx]
  409937:	jne    0x409972
  409939:	aad    0xb2
  40993b:	mov    ah,BYTE PTR [esi+0x13]
  40993e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40993f:	(bad)  
  409940:	cmc    
  409941:	out    dx,eax
  409942:	adc    bl,BYTE PTR [esi]
  409944:	push   esi
  409945:	push   0xeea5ebe1
  40994a:	lea    eax,[ebx]
  40994c:	(bad)  [edx]
  40994e:	xchg   BYTE PTR [ecx+0x29],bh
  409951:	cld    
  409952:	jno    0x409957
  409954:	ss out dx,al
  409956:	add    ah,BYTE PTR [eax]
  409958:	cs push 0xedb1ebe1
  40995e:	add    ebx,DWORD PTR gs:[esi]
  409961:	push   0x1c9c035d
  409966:	inc    ecx
  409967:	int    0xbb
  409969:	in     eax,dx
  40996a:	dec    ebp
  40996b:	int    0xf0
  40996d:	sbb    cl,ch
  40996f:	pop    eax
  409970:	stos   BYTE PTR es:[edi],al
  409971:	add    BYTE PTR [edx-0x9a3d236],bl
  409977:	inc    esp
  409978:	xor    DWORD PTR [ecx+ebp*8],edx
  40997b:	add    eax,DWORD PTR [eax]
  40997d:	add    BYTE PTR [ecx],dh
  40997f:	cmp    DWORD PTR [edx+0x3],eax
  409982:	fs sbb al,0x11
  409985:	aaa    
  409986:	jbe    0x40999c
  409988:	jmp    0x6a5cff1b
  40998d:	cld    
  40998e:	xor    BYTE PTR [esi-0x28],ah
  409991:	push   es
  409992:	loope  0x409925
  409994:	adc    al,BYTE PTR [esi]
  409996:	dec    edi
  409997:	xchg   ebx,eax
  409998:	mov    dl,0x5f
  40999a:	or     eax,0x6e69e467
  40999f:	adc    al,BYTE PTR [ebp+0x4]
  4099a2:	sahf   
  4099a3:	addr16 in eax,dx
  4099a5:	jmp    0x409a13
  4099a7:	dec    ebp
  4099a8:	jmp    0xf7fb2b0
  4099ad:	inc    ebp
  4099ae:	xor    DWORD PTR [esp+eiz*2+0x40],edi
  4099b2:	lock adc edx,ecx
  4099b5:	cdq    
  4099b6:	sahf   
  4099b7:	in     eax,dx
  4099b8:	push   DWORD PTR [ebp+0x4473d43f]
  4099be:	xor    ah,BYTE PTR [edi+0x8]
  4099c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4099c2:	cmp    DWORD PTR [edi],edi
  4099c4:	sub    BYTE PTR ds:0x3fedc391,ch
  4099cb:	aam    0x74
  4099cd:	xor    al,0x32
  4099cf:	pop    es
  4099d0:	cmp    eax,0xa313f5c7
  4099d5:	xor    edx,esi
  4099d7:	push   edx
  4099d8:	add    BYTE PTR [edx+0x71],ch
  4099db:	pop    esp
  4099dc:	aas    
  4099dd:	sub    BYTE PTR ds:0xf17514,ch
  4099e3:	add    BYTE PTR [ebx],dh
  4099e5:	pop    es
  4099e6:	xor    DWORD PTR [edi],ebx
  4099e8:	ins    BYTE PTR es:[edi],dx
  4099e9:	adc    al,0xeb
  4099eb:	adc    BYTE PTR [edi+0x33e86a14],bl
  4099f1:	daa    
  4099f2:	dec    eax
  4099f3:	push   es
  4099f4:	je     0x409a0a
  4099f6:	call   esp
  4099f8:	ins    DWORD PTR es:[edi],dx
  4099f9:	cs inc ecx
  4099fb:	jmp    0xe24c6ab7
  409a00:	repnz pusha 
  409a02:	and    DWORD PTR [esi],esp
  409a04:	sbb    DWORD PTR [edi+edi*1-0x58],ebx
  409a08:	xor    ch,ch
  409a0a:	adc    al,0xa0
  409a0c:	jo     0x409a61
  409a0e:	add    BYTE PTR [edx-0x12],ch
  409a11:	adc    bh,bh
  409a13:	fadd   QWORD PTR ds:0xebe9412e
  409a19:	pop    ss
  409a1a:	dec    eax
  409a1b:	mov    dh,0xf5
  409a1d:	adc    eax,DWORD PTR [eax]
  409a1f:	jmp    0xe92bae56
  409a24:	cmc    
  409a25:	cwde   
  409a26:	ret    0x6a42
  409a29:	rol    BYTE PTR [edi],cl
  409a2b:	jmp    0xe88c9e5
  409a30:	repnz adc eax,DWORD PTR [eax]
  409a33:	add    BYTE PTR [ebx+esi*1],bh
  409a36:	push   DWORD PTR ds:0x415340
  409a3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a3d:	add    al,0x49
  409a3f:	sbb    DWORD PTR ds:[eax],ebx
  409a42:	add    esp,0x4c
  409a45:	adc    edx,DWORD PTR ds:0x76000031
  409a4b:	push   ecx
  409a4c:	add    bh,al
  409a4e:	pop    ebp
  409a4f:	pop    eax
  409a50:	aas    
  409a51:	inc    ecx
  409a52:	pop    eax
  409a53:	adc    BYTE PTR [eax],al
  409a55:	add    BYTE PTR [eax-0x29],cl
  409a58:	push   ebx
  409a59:	mov    esp,DWORD PTR [esi+edx*4-0x66b40f3e]
  409a60:	inc    ebx
  409a61:	or     BYTE PTR [ebx],dl
  409a63:	fdiv   DWORD PTR [edx+0xb]
  409a66:	mov    ebp,DWORD PTR [ebx+0xc]
  409a69:	add    ah,bh
  409a6b:	adc    al,BYTE PTR [eax+0x7631838]
  409a71:	sub    ebx,DWORD PTR [eax+0x49]
  409a74:	leave  
  409a75:	ret    0x1800
  409a78:	cmp    BYTE PTR [eax],0xb6
  409a7b:	arpl   WORD PTR [eax],dx
  409a7d:	and    ebp,0x5f
  409a80:	aas    
  409a81:	inc    ecx
  409a82:	fcom   DWORD PTR [edi]
  409a84:	jne    0x409a8d
  409a86:	add    ebx,eax
  409a88:	pop    ecx
  409a89:	leave  
  409a8a:	or     bl,BYTE PTR [eax]
  409a8c:	add    BYTE PTR [eax+0x3e7495e0],al
  409a92:	push   ebx
  409a93:	inc    ebx
  409a94:	or     al,0x4a
  409a96:	dec    ebx
  409a97:	repnz add DWORD PTR [ebx],ecx
  409a9a:	sbb    ah,BYTE PTR [ebx+0x6]
  409a9d:	and    DWORD PTR ds:0x8c75011b,0x38
  409aa4:	shr    bl,0x2c
  409aa7:	adc    eax,0x52230c4d
  409aac:	or     al,0x5
  409aae:	add    BYTE PTR [eax],al
  409ab0:	xor    ebp,edi
  409ab2:	push   es
  409ab3:	add    BYTE PTR [ecx],dh
  409ab5:	mov    esp,0xc4e101e2
  409aba:	sbb    al,0x8d
  409abc:	jbe    0x409a68
  409abe:	push   edx
  409abf:	mov    eax,DWORD PTR [esi*8+0x20665044]
  409ac6:	adc    BYTE PTR [edx+0x49],dl
  409ac9:	test   al,0x9a
  409acb:	(bad)  
  409acc:	push   esi
  409acd:	push   ebp
  409ace:	pop    ebp
  409acf:	leave  
  409ad0:	jae    0x409ac7
  409ad2:	add    ch,BYTE PTR [ebx]
  409ad4:	push   0xffffff9a
  409ad6:	jne    0x409ae4
  409ad8:	ds call 0x77204e8
  409ade:	add    al,0xff
  409ae0:	inc    esp
  409ae1:	test   al,0x40
  409ae3:	inc    ecx
  409ae4:	xor    DWORD PTR [esi-0x39],edi
  409ae7:	cvtpi2ps xmm7,QWORD PTR ds:0xafa86577
  409aee:	(bad)  
  409aef:	imul   edi,DWORD PTR ds:0x61f04670,0xfe8bf655
  409af9:	push   ecx
  409afa:	ins    DWORD PTR es:[edi],dx
  409afb:	add    BYTE PTR [edi+ebp*4-0x5811b00e],ah
  409b02:	(bad)  
  409b03:	(bad)  
  409b04:	cmp    al,0xb0
  409b06:	inc    eax
  409b07:	inc    ecx
  409b08:	xor    DWORD PTR [esi-0x39],edi
  409b0b:	or     ebp,DWORD PTR [edx]
  409b0d:	cmp    eax,0xb7bc3376
  409b12:	repnz add BYTE PTR [eax],0x0
  409b16:	dec    ecx
  409b17:	icebp  
  409b18:	add    dh,BYTE PTR [edx+ebx*1+0x66]
  409b1c:	inc    ebx
  409b1d:	or     BYTE PTR [ecx-0x73],dh
  409b20:	jmp    0x898a:0xfee1bdb4
  409b27:	inc    edi
  409b28:	inc    esi
  409b29:	lock sahf 
  409b2b:	adc    ebx,DWORD PTR [ecx+0xc]
  409b2e:	add    ch,bl
  409b30:	pop    eax
  409b31:	or     BYTE PTR [ecx-0x78009b32],bl
  409b37:	jge    0x409b22
  409b39:	nop
  409b3a:	cmc    
  409b3b:	jecxz  0x409b55
  409b3d:	call   FWORD PTR ds:0x3144ff2d
  409b43:	xchg   edi,eax
  409b44:	lods   al,BYTE PTR ds:[esi]
  409b45:	or     al,0xdb
  409b47:	adc    al,0xae
  409b49:	jns    0x409ba8
  409b4b:	jmp    0x82e9:0x55173cfb
  409b52:	jb     0x409b6f
  409b54:	(bad)  
  409b56:	jmp    0x409b34
  409b58:	stos   BYTE PTR es:[edi],al
  409b59:	or     al,0x31
  409b5b:	inc    ecx
  409b5c:	jb     0x409b4e
  409b5e:	aaa    
  409b5f:	pusha  
  409b60:	in     eax,dx
  409b61:	(bad)  
  409b62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b63:	sbb    al,0x76
  409b65:	sbb    DWORD PTR [ecx+0x29],esi
  409b68:	sub    BYTE PTR [edx+esi*4],al
  409b6b:	shl    al,1
  409b6d:	push   ebx
  409b6e:	push   ss
  409b6f:	pusha  
  409b70:	in     eax,dx
  409b71:	inc    BYTE PTR [ebp+0x4519561c]
  409b77:	sub    DWORD PTR [eax-0x4dfffffd],ebp
  409b7d:	shl    al,1
  409b7f:	mov    bl,BYTE PTR [ebp+0x4]
  409b82:	jo     0x409b86
  409b84:	mov    ebx,ebx
  409b86:	sub    dl,BYTE PTR [eax]
  409b88:	xor    DWORD PTR [edi],edi
  409b8a:	(bad)  
  409b8b:	lock mov bl,0xd0
  409b8e:	adc    bh,bh
  409b90:	pop    ebp
  409b91:	sbb    BYTE PTR [ecx],dl
  409b93:	add    esp,DWORD PTR [eax-0xef4ea17]
  409b99:	pop    edi
  409b9a:	in     eax,0xcc
  409b9c:	lock add al,0xe9
  409b9f:	(bad)  
  409ba0:	cmp    eax,0xdce01118
  409ba5:	jmp    0xd47c91a9
  409baa:	jae    0x409b91
  409bac:	ins    DWORD PTR es:[edi],dx
  409bad:	ror    DWORD PTR [edi],cl
  409baf:	jmp    0xde54fc4b
  409bb4:	or     DWORD PTR [eax+ebp*8],eax
  409bb7:	lods   al,BYTE PTR ds:[esi]
  409bb8:	xor    ecx,ebp
  409bba:	(bad)  
  409bbb:	loop   0x409c2f
  409bbd:	pusha  
  409bbe:	add    al,0xb0
  409bc0:	jo     0x409bdb
  409bc2:	add    BYTE PTR [ecx+0x21],dl
  409bc5:	sub    DWORD PTR [ecx-0x17],eax
  409bc8:	fisubr DWORD PTR [ebp+edi*1-0x7403cad8]
  409bcf:	jg     0x409c28
  409bd1:	jmp    0xc568:0x18c9a90a
  409bd8:	pop    es
  409bd9:	push   ebx
  409bda:	add    BYTE PTR [ecx],al
  409bdc:	loopne 0x409c07
  409bde:	inc    ecx
  409bdf:	jmp    0x6c8a9be4
  409be4:	xchg   esi,eax
  409be5:	jle    0x409c16
  409be7:	push   ds
  409be8:	shl    dh,0xae
  409beb:	mov    ecx,0x9732e900
  409bf0:	inc    esp
  409bf1:	gs sub cl,0x74
  409bf5:	in     eax,dx
  409bf6:	verw   WORD PTR [esi+edx*1]
  409bfa:	ins    BYTE PTR es:[edi],dx
  409bfb:	adc    al,0x83
  409bfd:	and    eax,0xf6c01d2a
  409c02:	test   eax,0x32e90081
  409c07:	jle    0x409c09
  409c09:	fs jns 0x409bf8
  409c0c:	dec    edi
  409c0d:	ret    
  409c0e:	fbstp  TBYTE PTR [eax-0x44]
  409c11:	out    0x6d,al
  409c13:	adc    al,0xff
  409c15:	xchg   esp,eax
  409c16:	into   
  409c17:	jmp    0x53487930
  409c1c:	add    BYTE PTR [edx-0xa],ch
  409c1f:	add    al,0xb
  409c21:	add    BYTE PTR [eax],cl
  409c23:	sbb    al,BYTE PTR [ebp+0x14996a]
  409c29:	jmp    DWORD PTR ds:0xe015fded
  409c2f:	sub    DWORD PTR [ecx+0x0],eax
  409c32:	or     ebx,esp
  409c34:	add    al,BYTE PTR [ebx+0x5747b90]
  409c3a:	jno    0x409c87
  409c3c:	add    DWORD PTR [eax],eax
  409c3e:	mov    BYTE PTR [ecx+0x7e18f443],bl
  409c44:	add    bh,bh
  409c46:	add    BYTE PTR [eax],al
  409c48:	and    eax,0x9f14e6e8
  409c4d:	out    0xfd,al
  409c4f:	or     ecx,DWORD PTR [eax+0x49398416]
  409c55:	adc    al,0x0
  409c57:	sub    DWORD PTR ds:0xd40efeec,0x36
  409c5e:	add    DWORD PTR [eax],eax
  409c60:	dec    eax
  409c61:	xchg   esp,eax
  409c62:	add    BYTE PTR ss:[edi],bh
  409c65:	nop
  409c66:	and    al,0x1
  409c68:	sbb    BYTE PTR [eax+edx*2],dl
  409c6b:	mov    eax,DWORD PTR [ebp-0x14]
  409c6e:	inc    eax
  409c6f:	push   edx
  409c70:	mov    al,0x76
  409c72:	mov    edi,edi
  409c74:	(bad)
  409c78:	pusha  
  409c79:	jmp    0x5fa090f1
  409c7e:	call   0x89c00cd5
  409c83:	jmp    FWORD PTR [edi-0x2f]
  409c86:	inc    ebx
  409c87:	lock fcom DWORD PTR [ebx]
  409c8a:	add    BYTE PTR [eax],al
  409c8c:	pop    ss
  409c8d:	dec    edi
  409c8e:	in     al,dx
  409c8f:	add    al,cl
  409c91:	adc    eax,DWORD PTR [eax]
  409c93:	or     ebp,0x4f
  409c96:	aas    
  409c97:	inc    ecx
  409c98:	fcom   DWORD PTR [ebx]
  409c9a:	jne    0x409cee
  409c9c:	xor    DWORD PTR [ebp-0x28fbfcf],edx
  409ca2:	jmp    0x1950:0x2fd5529
  409ca9:	lods   al,BYTE PTR ds:[esi]
  409caa:	inc    edx
  409cab:	inc    ecx
  409cac:	add    BYTE PTR [eax],al
  409cae:	xor    esi,ebx
  409cb0:	jne    0x409c9a
  409cb2:	mov    DWORD PTR [ecx],ecx
  409cb4:	pop    edi
  409cb5:	add    BYTE PTR [ecx],dh
  409cb7:	loop   0x409c7b
  409cb9:	jae    0x409ce4
  409cbb:	inc    ebp
  409cbc:	cmp    al,0x40
  409cbe:	lock cld 
  409cc0:	jmp    0x950:0x2fcdd0d
  409cc7:	adc    eax,0xa6314144
  409ccc:	jne    0x409cb6
  409cce:	pop    ecx
  409ccf:	ins    DWORD PTR es:[edi],dx
  409cd0:	pop    esi
  409cd1:	add    BYTE PTR [ecx],dh
  409cd3:	bnd ret 0x2373
  409cd7:	add    eax,0xfcf04044
  409cdc:	jmp    0xc950:0x2fceaf1
  409ce3:	cmp    al,0x44
  409ce5:	inc    ecx
  409ce6:	xor    DWORD PTR [esi+0x4119e875],ecx
  409cec:	pop    esi
  409ced:	add    BYTE PTR [ecx],dh
  409cef:	xchg   edx,eax
  409cf0:	sbb    ch,BYTE PTR [eax+0x68]
  409cf3:	cmp    eax,0x55090043
  409cf8:	pop    eax
  409cf9:	add    BYTE PTR [ecx],dh
  409cfb:	lods   eax,DWORD PTR ds:[esi]
  409cfc:	push   0x49
  409cfe:	jno    0x409cbc
  409d00:	add    bh,bh
  409d02:	test   BYTE PTR [ebp-0x15],dl
  409d05:	jns    0x409d5b
  409d07:	std    
  409d08:	add    cl,BYTE PTR [ebx]
  409d0a:	icebp  
  409d0b:	lahf   
  409d0c:	ins    BYTE PTR es:[edi],dx
  409d0d:	lea    ebp,[ecx+ebp*1+0x53]
  409d11:	push   0x0
  409d13:	add    BYTE PTR [eax],dh
  409d15:	ss jbe 0x409d10
  409d18:	leave  
  409d19:	adc    esi,DWORD PTR [edx+0x1de6cffd]
  409d1f:	jbe    0x409cde
  409d21:	inc    ebx
  409d22:	add    DWORD PTR [esi-0x44],eax
  409d25:	out    0xd,al
  409d27:	mov    ch,BYTE PTR [ebp-0x1c]
  409d2a:	jae    0x409d72
  409d2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d2d:	inc    ebx
  409d2e:	xchg   ebx,eax
  409d2f:	add    DWORD PTR [esi+0x61eaf160],esp
  409d35:	out    0xed,al
  409d37:	sti    
  409d38:	xchg   edi,eax
  409d39:	pusha  
  409d3a:	fst    QWORD PTR [ecx+ebx*4+0x3a]
  409d3e:	fdiv   st(3),st
  409d40:	xchg   DWORD PTR [ebx+ebp*1-0x3e974c18],ebx
  409d47:	add    al,0xfd
  409d49:	pop    ds
  409d4a:	push   0x79
  409d4c:	pop    ebp
  409d4d:	adc    esi,DWORD PTR ds:0xe913d92a
  409d53:	jmp    0xe549:0xc33e69c
  409d5a:	outs   dx,BYTE PTR ds:[esi]
  409d5b:	sti    
  409d5c:	dec    edi
  409d5d:	out    0x13,al
  409d5f:	in     al,dx
  409d60:	inc    edi
  409d61:	pusha  
  409d62:	loope  0x409d4f
  409d64:	in     eax,0x8e
  409d66:	(bad)  
  409d67:	sti    
  409d68:	aaa    
  409d69:	pusha  
  409d6a:	jns    0x409d67
  409d6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d6d:	sbb    al,0x91
  409d6f:	dec    esi
  409d70:	scas   al,BYTE PTR es:[edi]
  409d71:	in     eax,0x75
  409d73:	sti    
  409d74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d75:	clc    
  409d76:	ins    DWORD PTR es:[edi],dx
  409d77:	jno    0x409d79
  409d79:	add    BYTE PTR [ecx],ch
  409d7b:	cld    
  409d7c:	and    eax,0x5de60f83
  409d81:	jno    0x409d84
  409d83:	std    
  409d84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d85:	(bad)  
  409d86:	jmp    ebp
  409d88:	dec    ebp
  409d89:	jno    0x409d90
  409d8b:	std    
  409d8c:	lods   al,BYTE PTR ds:[esi]
  409d8d:	(bad)  
  409d8e:	out    dx,eax
  409d8f:	in     eax,0x3d
  409d91:	jno    0x409d6c
  409d93:	cld    
  409d94:	push   esp
  409d96:	lods   al,BYTE PTR ds:[esi]
  409d97:	out    0xfe,al
  409d99:	inc    eax
  409d9a:	ret    
  409d9b:	out    0xfe,eax
  409d9d:	es retf 0xfc60
  409da1:	push   ds
  409da2:	and    BYTE PTR [edi+edi*1],ah
  409da5:	test   al,0x32
  409da7:	xchg   ecx,eax
  409da8:	ret    
  409da9:	in     eax,0xca
  409dab:	jle    0x409da8
  409dad:	push   es
  409dae:	stos   BYTE PTR es:[edi],al
  409daf:	fadd   st(1),st
  409db1:	fnstenv [edx]
  409db3:	aas    
  409db4:	mov    eax,DWORD PTR ds:0xee007a06
  409dba:	and    DWORD PTR [eax+ebp*8],ebx
  409dbd:	call   0x426a:0x72fee6b9
  409dc4:	call   0x547dc2
  409dc9:	loop   0x409e3d
  409dcb:	popa   
  409dcc:	sbb    ebp,edx
  409dce:	ja     0x409e1d
  409dd0:	jmp    0x409dad
  409dd2:	mov    dl,0x1d
  409dd4:	or     eax,0x3794303d
  409dd9:	jecxz  0x409dbc
  409ddb:	push   cs
  409ddc:	(bad)  
  409ddd:	jmp    0xf9729de2
  409de2:	add    DWORD PTR [edx-0x55c4a3cf],edx
  409de8:	(bad)  
  409de9:	stc    
  409dea:	mov    ch,BYTE PTR [edx-0x123e2529]
  409df0:	xor    bh,BYTE PTR [edi]
  409df2:	mov    ecx,DWORD PTR [ebp+0x1eb3d0af]
  409df8:	sbb    ah,BYTE PTR [eax+0xc]
  409dfb:	add    edi,0x3f66fe96
  409e01:	aam    0x74
  409e03:	in     al,0x6b
  409e05:	fcmovnb st,st(1)
  409e07:	stc    
  409e08:	xor    ah,ch
  409e0a:	je     0x409de9
  409e0c:	or     dl,BYTE PTR [edx-0x1588ff55]
  409e12:	or     eax,eax
  409e14:	pushf  
  409e15:	adc    ebx,DWORD PTR [edi-0x37]
  409e18:	or     al,BYTE PTR [ecx]
  409e1a:	add    bh,bh
  409e1c:	popf   
  409e1d:	adc    al,0xff
  409e1f:	jne    0x409de9
  409e21:	clc    
  409e22:	imul   edi,ebx,0x458bea27
  409e28:	sbb    BYTE PTR [ecx-0x1],al
  409e2b:	jne    0x409e01
  409e2d:	clc    
  409e2e:	aas    
  409e2f:	(bad)  
  409e30:	aaa    
  409e31:	jmp    0x2fa:0x6497c009
  409e38:	mov    BYTE PTR [eax],dl
  409e3a:	push   DWORD PTR [ebp-0x7c]
  409e3d:	jmp    0xff92:0xcd60f873
  409e44:	add    BYTE PTR [eax],al
  409e46:	addr16 push ss
  409e48:	ror    BYTE PTR [edi],0xc
  409e4b:	retf   
  409e4c:	add    BYTE PTR [eax],al
  409e4e:	mov    BYTE PTR [ecx-0x181c13bd],bl
  409e54:	jle    0x409e95
  409e56:	pop    eax
  409e57:	sbb    eax,DWORD PTR [ecx+ecx*8+0x5700104a]
  409e5e:	jo     0x409eb4
  409e60:	(bad)  
  409e61:	call   DWORD PTR [edi-0x582fbc68]
  409e67:	je     0x409e39
  409e69:	push   0x412ad8
  409e6e:	mov    al,0x4
  409e70:	pop    ebx
  409e71:	add    BYTE PTR [eax],bl
  409e73:	dec    eax
  409e74:	push   DWORD PTR [ebp-0x38]
  409e77:	jo     0x409e2d
  409e79:	aas    
  409e7a:	dec    ecx
  409e7b:	sbb    al,ch
  409e7d:	pop    ss
  409e7e:	inc    ebx
  409e7f:	sbb    BYTE PTR [eax],al
  409e81:	push   eax
  409e82:	xchg   edi,eax
  409e83:	jae    0x409e55
  409e85:	push   0x411dd0
  409e8a:	xor    DWORD PTR [ebp+0xb],edx
  409e8d:	pop    ebx
  409e8e:	xor    ebp,ebp
  409e90:	pop    esp
  409e91:	pop    ecx
  409e92:	cmp    ch,BYTE PTR ds:0xff3a0c70
  409e98:	outs   dx,DWORD PTR ds:[esi]
  409e99:	or     BYTE PTR [edx],ch
  409e9b:	xor    al,0x9
  409e9d:	test   DWORD PTR [edi+ebp*8+0x2],edx
  409ea1:	add    BYTE PTR [edx],bh
  409ea3:	and    al,0x6f
  409ea5:	or     esi,ebp
  409ea7:	mov    eax,0xae
  409eac:	xor    ebp,ebp
  409eae:	add    ch,bl
  409eb0:	cmp    bh,BYTE PTR cs:[edi]
  409eb3:	mov    ah,0x31
  409eb5:	in     eax,dx
  409eb6:	add    al,BYTE PTR [eax]
  409eb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409eb9:	sahf   
  409eba:	ret    0x9eb8
  409ebd:	jmp    0x73c:0x23a3fef7
  409ec4:	add    al,0xed
  409ec6:	mov    edi,0x2ed9944
  409ecb:	add    BYTE PTR [ecx],dh
  409ecd:	ins    DWORD PTR es:[edi],dx
  409ece:	cmp    BYTE PTR [eax],al
  409ed0:	es jns 0x409f1f
  409ed3:	add    dh,BYTE PTR [ecx]
  409ed5:	in     eax,dx
  409ed6:	dec    edi
  409ed7:	call   0xff384262
  409edc:	test   al,0x30
  409ede:	enter  0xd482,0xd4
  409ee2:	add    dh,BYTE PTR [ebp+0x10]
  409ee5:	add    eax,0xecf02bb4
  409eea:	div    DWORD PTR [ebp+ebp*2-0x6b]
  409eee:	test   eax,0xbed3159
  409ef3:	sar    BYTE PTR [esi],0x70
  409ef6:	push   es
  409ef7:	add    dh,BYTE PTR [ecx]
  409ef9:	in     eax,dx
  409efa:	mov    edi,0x2ec0944
  409eff:	add    BYTE PTR [ecx],dh
  409f01:	xchg   esp,eax
  409f02:	add    DWORD PTR [edx],eax
  409f04:	xor    DWORD PTR [ecx+ebp*8],edx
  409f07:	test   BYTE PTR [ebp+0x2e6ee7ec],al
  409f0d:	(bad)  
  409f0e:	rcr    edi,cl
  409f10:	add    BYTE PTR [eax],al
  409f12:	out    dx,eax
  409f13:	pop    eax
  409f14:	inc    ecx
  409f15:	add    eax,0xeae91431
  409f1a:	pushf  
  409f1b:	adc    al,0xe9
  409f1d:	add    esi,DWORD PTR [edx+0x5c054160]
  409f23:	adc    esp,DWORD PTR [eax+0x76]
  409f26:	rcr    edx,1
  409f28:	stos   DWORD PTR es:[edi],eax
  409f29:	jmp    0x409f5e
  409f2b:	adc    al,0xe9
  409f2d:	add    ecx,eax
  409f2f:	mov    ah,0xe7
  409f31:	add    esi,DWORD PTR [ecx]
  409f33:	xchg   edi,eax
  409f34:	mov    ebp,ebx
  409f36:	xor    ebp,DWORD PTR [ecx-0xa]
  409f39:	mov    ah,BYTE PTR ds:0x893e25c0
  409f3f:	pop    ss
  409f40:	jmp    0x5d2dd048
  409f45:	add    dh,BYTE PTR [ecx]
  409f47:	adc    al,0x6a
  409f49:	jns    0x409ee4
  409f4b:	pop    ss
  409f4c:	push   esp
  409f4d:	pop    es
  409f4e:	test   al,0x60
  409f50:	mov    cl,0xbf
  409f52:	in     eax,dx
  409f53:	jmp    0x409f38
  409f55:	add    esi,DWORD PTR [ecx]
  409f57:	adc    al,0xd0
  409f59:	outs   dx,DWORD PTR ds:[esi]
  409f5a:	xor    BYTE PTR [ecx+ebp*8],dl
  409f5d:	sbb    ch,0xeb
  409f60:	jmp    0x409f68
  409f62:	lods   al,BYTE PTR ds:[esi]
  409f63:	jae    0x409f4d
  409f65:	add    esi,DWORD PTR [ecx]
  409f67:	lea    esp,[ebx]
  409f69:	shl    BYTE PTR [ebx-0x3afbaaa0],1
  409f6f:	or     al,0xae
  409f71:	inc    ecx
  409f72:	dec    ecx
  409f73:	adc    eax,0x3e9
  409f78:	xor    ebp,ebp
  409f7a:	in     eax,dx
  409f7b:	mov    esi,0x3e6ec6d
  409f80:	xor    DWORD PTR [eax+eax*1],edx
  409f83:	scas   al,BYTE PTR es:[edi]
  409f84:	jo     0x409f5a
  409f86:	(bad)  
  409f87:	call   0xad07b3be
  409f8c:	cli    
  409f8d:	loope  0x409f8d
  409f8f:	jmp    0x2d8578c6
  409f94:	sub    eax,0xafe90014
  409f99:	pop    eax
  409f9a:	mov    esp,0x1432e9
  409f9f:	es jo  0x409f3e
  409fa2:	(bad)  
  409fa3:	call   0xb53fb3da
  409fa8:	out    dx,al
  409fa9:	stc    
  409faa:	adc    ah,BYTE PTR [edi]
  409fac:	mov    esi,0xf2a488e2
  409fb1:	loop   0x40a027
  409fb3:	xor    eax,0xefe19c5
  409fb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409fb9:	mov    WORD PTR [ecx+esi*1-0x62],es
  409fbd:	push   0xe09811d4
  409fc2:	(bad)  
  409fc3:	mul    BYTE PTR [ebp+0x486ac458]
  409fc9:	pop    eax
  409fca:	aas    
  409fcb:	sub    BYTE PTR ds:0xd3b7514,ch
  409fd1:	and    eax,DWORD PTR [eax+0x28]
  409fd4:	sub    eax,0x35300cec
  409fd9:	adc    al,0x50
  409fdb:	push   ecx
  409fdc:	add    BYTE PTR [eax],al
  409fde:	sbb    al,0x54
  409fe0:	inc    ecx
  409fe1:	jmp    0xc201084d
  409fe6:	(bad)  
  409fe7:	cmp    eax,DWORD PTR [eax]
  409fe9:	jmp    0x1b47429
  409fee:	aad    0x1b
  409ff0:	inc    eax
  409ff1:	sub    BYTE PTR ds:0x2d31f0ec,dh
  409ff7:	adc    al,0x50
  409ff9:	add    DWORD PTR [ebp+0x54],ebp
  409ffc:	inc    ecx
  409ffd:	add    BYTE PTR [eax],bl
  409fff:	jmp    0x58:0x85c0c073
  40a006:	or     BYTE PTR [esi],cl
  40a008:	shl    BYTE PTR [edx+ecx*8+0x6c],0x40
  40a00d:	inc    eax
  40a00e:	fst    DWORD PTR [eax+ebp*8]
  40a011:	aad    0xf0
  40a013:	adc    al,0x0
  40a015:	push   eax
  40a016:	lock push esp
  40a018:	inc    eax
  40a019:	inc    ecx
  40a01a:	fsubr  st,st(1)
  40a01c:	jae    0x409fde
  40a01e:	xor    BYTE PTR [edx+0x5a],0x0
  40a022:	enter  0x16ed,0x68
  40a026:	xchg   ecx,eax
  40a027:	push   esp
  40a028:	inc    ecx
  40a029:	add    BYTE PTR [eax-0x62],dh
  40a02c:	push   esi
  40a02d:	add    al,bl
  40a02f:	inc    esp
  40a030:	push   0x578849
  40a035:	call   DWORD PTR [ebp-0x1da2192c]
  40a03b:	adc    al,0x0
  40a03d:	or     ebx,DWORD PTR [eax+0x64]
  40a040:	(bad)  
  40a041:	inc    DWORD PTR [eax]
  40a043:	add    BYTE PTR ds:0xc0a1e6cd,ah
  40a049:	adc    al,0x0
  40a04b:	push   eax
  40a04c:	lahf   
  40a04d:	jo     0x40a017
  40a04f:	call   0x3e7e72
  40a054:	add    DWORD PTR [ecx],esp
  40a056:	mov    esp,0xe6d3d5ff
  40a05b:	lea    esp,[eax]
  40a05d:	sbb    BYTE PTR [eax],al
  40a05f:	push   eax
  40a060:	outs   dx,DWORD PTR ds:[esi]
  40a061:	jo     0x40a027
  40a063:	call   0x3e7aba
  40a068:	shl    DWORD PTR [eax],1
  40a06a:	mov    eax,0xfed81d83
  40a06f:	jae    0x40a0d5
  40a071:	xchg   ebx,eax
  40a072:	jnp    0x40a02c
  40a074:	dec    eax
  40a075:	jo     0x40a0a5
  40a077:	push   0xef02eb31
  40a07c:	out    dx,eax
  40a07d:	mov    gs,WORD PTR [esi+0x8]
  40a080:	sbb    DWORD PTR [ecx+0x5f1efe80],ecx
  40a086:	outs   dx,DWORD PTR ds:[esi]
  40a087:	rcl    BYTE PTR [esi],0xe1
  40a08a:	or     ch,al
  40a08c:	jne    0x40a107
  40a08e:	cmc    
  40a08f:	inc    BYTE PTR [esi]
  40a091:	shl    DWORD PTR [esi-0x151a7b02],0x38
  40a098:	lods   eax,DWORD PTR ds:[esi]
  40a099:	inc    esi
  40a09a:	cmc    
  40a09b:	(bad)  
  40a09c:	fs test esp,esi
  40a09f:	je     0x40a0da
  40a0a1:	inc    ebp
  40a0a2:	es test dh,bl
  40a0a5:	push   ds
  40a0a6:	cmc    
  40a0a7:	je     0x40a0a9
  40a0a9:	add    cl,dh
  40a0ab:	push   ebp
  40a0ac:	cmp    DWORD PTR [edi+0x74f52ece],eax
  40a0b2:	stc    
  40a0b3:	add    eax,0xfebe8731
  40a0b8:	hlt    
  40a0b9:	je     0x40a0a8
  40a0bb:	adc    eax,0xeae8729
  40a0c0:	cmc    
  40a0c1:	je     0x40a0a8
  40a0c3:	add    eax,0xde9e8721
  40a0c8:	repz je 0x40a0a4
  40a0cb:	adc    eax,0xee8e8719
  40a0d0:	out    0xc,eax
  40a0d2:	mov    dl,0x78
  40a0d4:	in     al,dx
  40a0d5:	add    eax,0x44bbf604
  40a0da:	mov    ebx,ebp
  40a0dc:	add    al,BYTE PTR [eax]
  40a0de:	xor    DWORD PTR [edx+0x76],ebp
  40a0e1:	call   0x6874c217
  40a0e6:	mov    eax,ds:0x56004311
  40a0eb:	and    al,cl
  40a0ed:	out    0x86,eax
  40a0ef:	add    eax,0x143a0004
  40a0f4:	test   eax,0x23d7366e
  40a0f9:	in     al,dx
  40a0fa:	xor    DWORD PTR [ecx+ebp*8],edx
  40a0fd:	add    ebx,DWORD PTR [ecx+0x31432931]
  40a103:	(bad)  
  40a105:	(bad)  
  40a106:	push   ss
  40a107:	jg     0x40a129
  40a109:	add    al,0x31
  40a10b:	or     ebp,DWORD PTR [ecx+0x3600006e]
  40a111:	xlat   BYTE PTR ds:[ebx]
  40a112:	and    ebp,esp
  40a114:	xor    BYTE PTR [ecx+ebp*8],dl
  40a117:	add    edi,esi
  40a119:	push   0x95e4eb2d
  40a11e:	push   ebp
  40a11f:	hlt    
  40a120:	jmp    0x45de:0xe7ba2922
  40a127:	hlt    
  40a128:	loopne 0x40a0d7
  40a12a:	add    ch,bh
  40a12c:	daa    
  40a12d:	cdq    
  40a12e:	test   dh,dh
  40a130:	iret   
  40a131:	fisubr WORD PTR ds:0x5cebe16e
  40a137:	jge    0x40a0f8
  40a139:	ficomp WORD PTR ds:0x44ebc56e
  40a13f:	jge    0x40a0f0
  40a141:	ficomp WORD PTR [ebx+0x3e]
  40a144:	mov    eax,ds:0xaad11143
  40a149:	fdivp  st(5),st
  40a14b:	jmp    0xccef:0xf3f5dd27
  40a152:	sub    dl,BYTE PTR [ebx]
  40a154:	xor    DWORD PTR [ecx+0x72],ecx
  40a157:	loopne 0x40a10a
  40a159:	xlat   BYTE PTR ds:[ebx]
  40a15a:	xchg   esp,eax
  40a15b:	bnd ja 0x40a13c
  40a15e:	lods   eax,DWORD PTR ds:[esi]
  40a15f:	mov    DWORD PTR [esi+0x66f3cddd],esp
  40a165:	fsubp  st(0),st
  40a167:	add    ebp,DWORD PTR [edx-0x69012aa8]
  40a16d:	addr16 add ah,ch
  40a170:	mov    dl,0x26
  40a172:	add    BYTE PTR [eax+eax*1],dh
  40a175:	add    BYTE PTR [eax],bh
  40a177:	in     eax,dx
  40a178:	hlt    
  40a179:	call   0x153fb5b0
  40a17e:	sbb    esp,ebp
  40a180:	pop    ebp
  40a181:	js     0x40a1a5
  40a183:	fisttp WORD PTR [edx]
  40a185:	test   eax,0x3c680da8
  40a18a:	push   ecx
  40a18b:	push   ebx
  40a18c:	add    BYTE PTR [esi-0x68],bh
  40a18f:	or     al,ch
  40a191:	jb     0x40a11f
  40a193:	fdivp  st(6),st
  40a195:	xor    BYTE PTR [eax],0x6c
  40a198:	mov    edx,0xff147415
  40a19d:	aam    0x1e
  40a19f:	in     al,dx
  40a1a0:	jmp    0x40a202
  40a1a2:	loop   0x40a182
  40a1a4:	mov    BYTE PTR [ebp+edx*4-0x21],ah
  40a1a8:	inc    BYTE PTR [esi+0x7d]
  40a1ab:	push   ds
  40a1ac:	add    ecx,ebp
  40a1ae:	xor    cl,BYTE PTR [edi-0x213cd47c]
  40a1b4:	(bad)  
  40a1b5:	cdq    
  40a1b6:	jmp    0x8490:0xc2268671
  40a1bd:	sub    eax,ebx
  40a1bf:	fdivp  st(6),st
  40a1c1:	mov    ecx,0xfb7a8a3
  40a1c6:	mov    ds:0xfa49e7de,al
  40a1cb:	adc    eax,DWORD PTR [eax]
  40a1cd:	jo     0x40a177
  40a1cf:	cdq    
  40a1d0:	std    
  40a1d1:	test   BYTE PTR [ebx-0x559af0e3],0x14
  40a1d8:	add    cl,ch
  40a1da:	add    BYTE PTR [eax],al
  40a1dc:	mov    cl,0x88
  40a1de:	rcr    edi,0x83
  40a1e1:	fdivrp st(6),st
  40a1e3:	jmp    0x40a227
  40a1e5:	adc    al,0x0
  40a1e7:	jmp    0xc33a1f
  40a1ec:	dec    eax
  40a1ed:	adc    DWORD PTR [eax],eax
  40a1ef:	lea    ecx,[edx]
  40a1f1:	xor    al,0x50
  40a1f3:	push   0x40fcc8
  40a1f8:	jo     0x40a26a
  40a1fa:	push   edi
  40a1fb:	add    BYTE PTR [eax-0x22],cl
  40a1fe:	mov    esi,0x47c04d75
  40a203:	add    DWORD PTR [eax],ebx
  40a205:	adc    DWORD PTR [ebp-0x21d256b],ecx
  40a20b:	jmp    DWORD PTR [ebp+0x40502c57]
  40a211:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a212:	sub    al,BYTE PTR [ecx+0x18]
  40a215:	mov    ecx,0x1118575a
  40a21a:	or     eax,eax
  40a21c:	fisttp QWORD PTR [ebx]
  40a21e:	jmp    0x51ab4f
  40a223:	dec    DWORD PTR ds:0x68bae805
  40a229:	loop   0x40a228
  40a22b:	or     ecx,DWORD PTR [eax]
  40a22d:	pop    esp
  40a22e:	punpckhbw mm1,QWORD PTR [ecx+edi*8]
  40a232:	inc    eax
  40a233:	add    BYTE PTR [edi],al
  40a235:	pop    esp
  40a236:	adc    al,0xe8
  40a238:	lahf   
  40a239:	pop    edi
  40a23a:	(bad)  
  40a23b:	jmp    DWORD PTR [ebx]
  40a23d:	fild   QWORD PTR [eax+0x0]
  40a240:	add    BYTE PTR [eax],al
  40a242:	pop    ss
  40a243:	pop    esp
  40a244:	adc    al,0xe8
  40a246:	rcr    DWORD PTR [edi-0x2],cl
  40a249:	inc    DWORD PTR ds:0x37fec07c
  40a24f:	loop   0x40a1dc
  40a251:	push   edx
  40a252:	fs inc esi
  40a254:	push   eax
  40a255:	call   0x3f0271
  40a25a:	test   al,0x40
  40a25c:	push   DWORD PTR [ebp+0x78]
  40a25f:	jecxz  0x40a2d4
  40a261:	or     al,0x57
  40a263:	fs or  al,ch
  40a266:	xor    DWORD PTR [edx-0x2d99010f],edi
  40a26c:	mov    BYTE PTR [esi+ebx*2+0x31dcdad5],al
  40a273:	jmp    0x40a277
  40a275:	(bad)  
  40a276:	repz push ss
  40a278:	jnp    0x40a1fe
  40a27a:	jge    0x40a228
  40a27c:	lock dec cl
  40a27f:	xor    DWORD PTR [ecx],esi
  40a281:	inc    ecx
  40a282:	xor    DWORD PTR [esi-0x4a],edi
  40a285:	mov    bl,0x2f
  40a287:	xor    eax,0xffffffe7
  40a28a:	sub    al,0x25
  40a28c:	add    al,0x0
  40a28e:	sub    ch,BYTE PTR [ebp-0x4e76d189]
  40a294:	sbb    eax,DWORD PTR [ecx+0x31]
  40a297:	bound  esi,QWORD PTR [edi+0x14]
  40a29a:	sbb    DWORD PTR [ebx+0x7c],esp
  40a29d:	(bad)  
  40a29e:	(bad)  
  40a29f:	jb     0x40a258
  40a2a1:	mov    bl,0xf7
  40a2a3:	cmp    dh,cl
  40a2a5:	dec    edi
  40a2a6:	add    BYTE PTR [eax],al
  40a2a8:	fld    DWORD PTR [edx]
  40a2aa:	jnp    0x40a2aa
  40a2ac:	out    0x9d,al
  40a2ae:	out    dx,eax
  40a2af:	je     0x40a2f2
  40a2b1:	push   edx
  40a2b2:	ja     0x40a2c0
  40a2b4:	sbb    DWORD PTR [edx],0x22d90877
  40a2ba:	in     al,dx
  40a2bb:	inc    dh
  40a2bd:	push   ebp
  40a2be:	cmp    DWORD PTR [ebp-0x4b0ecd42],eax
  40a2c4:	jge    0x40a2c1
  40a2c6:	lock (bad) 
  40a2c8:	cdq    
  40a2c9:	mov    ebp,0x6e310058
  40a2ce:	in     al,dx
  40a2cf:	add    DWORD PTR [ebx],esp
  40a2d1:	mov    ecx,0xdbdd947b
  40a2d6:	out    dx,eax
  40a2d7:	(bad)  
  40a2d8:	xor    bh,ch
  40a2da:	test   cl,ch
  40a2dc:	xor    edx,DWORD PTR [ebx+0x144f3981]
  40a2e2:	pop    edx
  40a2e3:	ja     0x40a318
  40a2e5:	out    dx,eax
  40a2e6:	sub    BYTE PTR [ebx+edi*4+0x1b],bl
  40a2ea:	sub    BYTE PTR [esi+eiz*2],al
  40a2ed:	mov    eax,ds:0xdb5ff194
  40a2f2:	rcl    BYTE PTR [eax+0x53e913ff],1
  40a2f8:	fld    DWORD PTR [ecx-0x24cebd0b]
  40a2fe:	jae    0x40a2b7
  40a300:	cmp    al,0xdb
  40a302:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a303:	(bad)  [ebx+eax*2+0x6c8103e9]
  40a30a:	dec    edx
  40a30b:	xor    BYTE PTR [eax],al
  40a30d:	add    BYTE PTR [eax+0x14],dh
  40a310:	mov    ?,WORD PTR [esi-0xf7a261e]
  40a316:	push   cs
  40a317:	pop    ecx
  40a318:	push   ss
  40a319:	add    al,0x31
  40a31b:	ds adc ch,bh
  40a31e:	(bad)  
  40a31f:	pusha  
  40a320:	loope  0x40a31e
  40a322:	loopne 0x40a384
  40a324:	in     eax,dx
  40a325:	cld    
  40a326:	jmp    0xf59cb28a
  40a32b:	sub    ebp,DWORD PTR [eax-0xa9f19fd]
  40a331:	fist   DWORD PTR [ebp-0x74]
  40a334:	inc    ebp
  40a335:	lock xlat BYTE PTR ds:[ebx]
  40a337:	mov    al,ds:0xdacff174
  40a33c:	cwde   
  40a33d:	fist   DWORD PTR [ebp+0x6ef02d8b]
  40a343:	fistp  DWORD PTR [ebx-0x129f49ed]
  40a349:	push   ebx
  40a34a:	scas   al,BYTE PTR es:[edi]
  40a34b:	pusha  
  40a34c:	loope  0x40a329
  40a34e:	jb     0x40a32d
  40a350:	or     eax,0x6cb096f0
  40a355:	lock xchg edi,eax
  40a357:	mov    BYTE PTR [ebx-0x3b],ah
  40a35a:	mov    edx,ds
  40a35c:	push   ebp
  40a35e:	jecxz  0x40a33a
  40a360:	mov    ah,0x2d
  40a362:	sbb    cl,0xfe
  40a365:	shr    DWORD PTR [edx],1
  40a367:	inc    edx
  40a368:	add    cl,ch
  40a36a:	mov    ecx,0xe96c0e9a
  40a36f:	fsin   
  40a371:	into   
  40a372:	add    BYTE PTR [eax],al
  40a374:	dec    esi
  40a375:	lahf   
  40a376:	mov    ebx,0xe7d946c7
  40a37b:	out    dx,eax
  40a37c:	in     al,0x13
  40a37e:	add    BYTE PTR [esi-0x51025d78],dh
  40a384:	dec    esi
  40a385:	bnd je 0x40a3f5
  40a388:	inc    esi
  40a389:	fxch   st(0)
  40a38b:	stos   DWORD PTR es:[edi],eax
  40a38c:	inc    ebp
  40a38d:	adc    al,0x55
  40a38f:	bound  edx,QWORD PTR [ecx]
  40a391:	(bad)  [ebp+ebx*8+0xf]
  40a395:	popa   
  40a396:	adc    BYTE PTR [esi-0xb00f768],al
  40a39c:	or     dh,dl
  40a39e:	ret    
  40a39f:	je     0x40a3b7
  40a3a1:	fcmovne st,st(0)
  40a3a3:	stos   DWORD PTR es:[edi],eax
  40a3a4:	xor    DWORD PTR [edx*2-0x3c68ee8e],edx
  40a3ab:	pop    ecx
  40a3ac:	xchg   cl,bl
  40a3ae:	je     0x40a395
  40a3b0:	or     dh,BYTE PTR [eax-0x77]
  40a3b3:	dec    esi
  40a3b4:	into   
  40a3b5:	push   cs
  40a3b6:	sar    BYTE PTR [ecx+ebp*1+0x312bc939],0x14
  40a3be:	(bad)  
  40a3bf:	mov    esp,0x6054ec22
  40a3c4:	into   
  40a3c5:	fimul  DWORD PTR [edx]
  40a3c7:	sub    DWORD PTR [eax],edi
  40a3c9:	maxps  xmm6,XMMWORD PTR [eax]
  40a3cc:	jae    0x40a3db
  40a3ce:	add    BYTE PTR [esi],dl
  40a3d0:	sub    BYTE PTR [eax],cl
  40a3d2:	call   0xff1ac3c7
  40a3d7:	add    BYTE PTR [eax],al
  40a3d9:	add    BYTE PTR [ebx-0x5ff08c2b],ah
  40a3df:	shl    DWORD PTR [esi],1
  40a3e1:	inc    ecx
  40a3e2:	cwde   
  40a3e3:	jmp    0xff85:0xa2300c73
  40a3ea:	(bad)  
  40a3eb:	mov    esi,0xea586a08
  40a3f0:	jae    0x40a3fe
  40a3f2:	jo     0x40a46f
  40a3f4:	test   edi,edi
  40a3f6:	outs   dx,DWORD PTR ds:[esi]
  40a3f7:	pop    eax
  40a3f8:	inc    esp
  40a3f9:	hlt    
  40a3fa:	add    BYTE PTR [edi+edi*1+0x41],dl
  40a3fe:	pop    eax
  40a3ff:	jmp    0xff85:0x8b70f473
  40a406:	(bad)  
  40a407:	pop    eax
  40a408:	inc    esp
  40a409:	clc    
  40a40a:	and    BYTE PTR [esi-0x42e7ff05],bh
  40a410:	add    eax,DWORD PTR [edi+edi*4-0x53ba7817]
  40a417:	cmp    al,0x0
  40a419:	adc    BYTE PTR [eax],cl
  40a41b:	adc    eax,0xea9bf8e8
  40a420:	std    
  40a421:	mov    DWORD PTR [ebp-0x20],edx
  40a424:	std    
  40a425:	jne    0x40a3a7
  40a427:	mov    ebp,0xea8f88a8
  40a42c:	or     eax,eax
  40a42e:	fist   WORD PTR [eax+0x14d800bb]
  40a434:	push   DWORD PTR [ebp-0x80]
  40a437:	cmp    eax,0x14c8fde8
  40a43c:	push   DWORD PTR [ebp+0x0]
  40a43f:	add    BYTE PTR [edi*4+0x14d85580],cl
  40a446:	cmp    eax,0xffffffca
  40a449:	fld    DWORD PTR [esp+eiz*4-0x74ffeb38]
  40a450:	int    0xe8
  40a452:	jle    0x40a493
  40a454:	xor    ebx,ebp
  40a456:	std    
  40a457:	cmp    DWORD PTR [ecx+0x90002ea],0xffffffb4
  40a45e:	sub    eax,0xda823141
  40a463:	cmp    edi,ebx
  40a465:	jmp    0xff76:0x5e710b02
  40a46c:	cld    
  40a46d:	repnz pop ebx
  40a46f:	(bad)  
  40a470:	ds jmp 0x40a475
  40a473:	(bad)  
  40a474:	fdivr  QWORD PTR [edx+0x2c09c65b]
  40a47a:	add    al,0x68
  40a47c:	lds    edx,FWORD PTR [ecx]
  40a47e:	inc    ebx
  40a47f:	add    dh,ah
  40a481:	ret    0x5532
  40a484:	xor    ebx,ebp
  40a486:	idiv   DWORD PTR [edi+0x74ed02c5]
  40a48c:	cmp    DWORD PTR [ebx+eax*1],eax
  40a48f:	push   0x41b690
  40a494:	jle    0x40a42b
  40a496:	ss push ebp
  40a498:	xor    ebp,ebp
  40a49a:	jg     0x40a493
  40a49c:	xor    al,bl
  40a49e:	xor    eax,0xed5d84ff
  40a4a3:	je     0x40a4a5
  40a4a5:	add    ch,bh
  40a4a7:	xchg   ebp,eax
  40a4a8:	jmp    0x54a7a332
  40a4ad:	mov    esp,ecx
  40a4af:	inc    edx
  40a4b0:	sti    
  40a4b1:	jg     0x40a4de
  40a4b3:	push   es
  40a4b4:	ja     0x40a4b9
  40a4b6:	out    dx,eax
  40a4b7:	jmp    0x40a507
  40a4b9:	inc    edx
  40a4ba:	sub    bl,BYTE PTR [ebx]
  40a4bc:	js     0x40a4c3
  40a4be:	mov    cl,0x13
  40a4c0:	add    al,0x75
  40a4c2:	fist   WORD PTR [esi]
  40a4c4:	ja     0x40a4d6
  40a4c6:	popa   
  40a4c7:	push   ds
  40a4c8:	ja     0x40a4d2
  40a4ca:	leave  
  40a4cb:	cs out dx,al
  40a4cd:	(bad)  
  40a4ce:	mov    dh,0x14
  40a4d0:	adc    DWORD PTR [ecx],esi
  40a4d2:	mov    dl,0xd7
  40a4d4:	sbb    eax,0x9bd734d9
  40a4d9:	adc    ebx,DWORD PTR [esi+0x1ded1961]
  40a4df:	or     al,0x11
  40a4e1:	mov    dl,0x8c
  40a4e3:	xlat   BYTE PTR ds:[ebx]
  40a4e4:	std    
  40a4e5:	out    dx,eax
  40a4e6:	inc    ebx
  40a4e7:	aam    0x2f
  40a4e9:	in     eax,dx
  40a4ea:	jg     0x40a4c3
  40a4ec:	in     eax,dx
  40a4ed:	icebp  
  40a4ee:	les    ebx,FWORD PTR [esi+ebp*8]
  40a4f1:	cld    
  40a4f2:	mov    ch,0x6c
  40a4f4:	fsubp  st(4),st
  40a4f6:	xlat   BYTE PTR ds:[bx]
  40a4f8:	pop    ebx
  40a4f9:	clc    
  40a4fa:	push   esi
  40a4fb:	or     eax,0xd757ec6a
  40a500:	cmp    esi,esp
  40a502:	push   esi
  40a503:	adc    eax,0xd747ec6a
  40a508:	cmp    ebp,esp
  40a50a:	add    BYTE PTR [eax],al
  40a50c:	push   esi
  40a50d:	(bad)  [edx-0x14]
  40a510:	aaa    
  40a511:	xlat   BYTE PTR ds:[ebx]
  40a512:	sbb    esi,eax
  40a514:	push   ss
  40a515:	in     eax,0x6a
  40a517:	in     al,dx
  40a518:	daa    
  40a519:	xlat   BYTE PTR ds:[ebx]
  40a51a:	sbb    edx,DWORD PTR [esi+ebx*1]
  40a51d:	popa   
  40a51e:	fucomp st(4)
  40a520:	popf   
  40a521:	or     al,0x91
  40a523:	jno    0x40a534
  40a525:	xlat   BYTE PTR ds:[ebx]
  40a526:	jge    0x40a574
  40a528:	clc    
  40a529:	shl    esp,1
  40a52b:	add    esp,DWORD PTR [ebx+ecx*4+0x7c]
  40a52f:	xor    dl,0xeb
  40a532:	gs jbe 0x40a57a
  40a535:	xlat   BYTE PTR ds:[ebx]
  40a536:	rcl    DWORD PTR [ebx],cl
  40a538:	fldcw  WORD PTR [esp+edi*4+0x3]
  40a53c:	xor    DWORD PTR [ebx],ecx
  40a53e:	sub    DWORD PTR [edi+0x7e],esi
  40a541:	push   0xffffffe9
  40a543:	pop    ebx
  40a544:	inc    eax
  40a545:	pop    ss
  40a546:	test   al,0x3
  40a548:	(bad)  
  40a549:	pusha  
  40a54a:	add    cl,bl
  40a54c:	int    0x5f
  40a54e:	or     al,0x41
  40a550:	jne    0x40a4e1
  40a552:	(bad)  
  40a553:	es test eax,0x2a87396
  40a559:	inc    esp
  40a55a:	call   0xff16c3fb
  40a55f:	loop   0x40a5d3
  40a561:	bound  esi,QWORD PTR [ecx]
  40a563:	jo     0x40a55c
  40a565:	jmp    0x40a5d0
  40a567:	jecxz  0x40a5d3
  40a569:	out    0x85,eax
  40a56b:	test   BYTE PTR [edx+0x75c009],0x0
  40a572:	sub    edi,edx
  40a574:	je     0x40a577
  40a576:	add    eax,0x5a6783ec
  40a57b:	aad    0x4f
  40a57d:	(bad)  
  40a57e:	loopne 0x40a56b
  40a580:	dec    edi
  40a581:	into   
  40a582:	loopne 0x40a58f
  40a584:	call   0xff16009b
  40a589:	rcr    edx,1
  40a58b:	xchg   ecx,eax
  40a58c:	(bad)  
  40a58d:	mov    dh,0x4a
  40a58f:	pop    edi
  40a590:	call   0xfed26856
  40a595:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a596:	or     eax,0x1a9e8264
  40a59b:	outs   dx,BYTE PTR ds:[esi]
  40a59c:	add    cl,ah
  40a59e:	xor    dl,BYTE PTR [eax+ebp*8]
  40a5a1:	push   cs
  40a5a2:	scas   eax,DWORD PTR es:[edi]
  40a5a3:	(bad)  
  40a5a4:	(bad)  
  40a5a5:	jo     0x40a617
  40a5a7:	fmul   QWORD PTR [esp-0x300b9e7]
  40a5ae:	and    dl,ch
  40a5b0:	je     0x40a58f
  40a5b2:	ficomp DWORD PTR [edi+0x932e953]
  40a5b8:	rcl    ah,0x62
  40a5bb:	int    0x44
  40a5bd:	pop    ecx
  40a5be:	xor    eax,0xf3e90014
  40a5c3:	push   eax
  40a5c4:	hlt    
  40a5c5:	add    BYTE PTR [edi+0x11],dh
  40a5c8:	add    BYTE PTR [eax],al
  40a5ca:	loop   0x40a5dd
  40a5cc:	push   0x0
  40a5ce:	repnz adc DWORD PTR [edx+0x0],ebp
  40a5d2:	push   ebp
  40a5d3:	push   ebx
  40a5d4:	hlt    
  40a5d5:	push   eax
  40a5d6:	add    BYTE PTR [eax],al
  40a5d8:	push   edi
  40a5d9:	arpl   ax,di
  40a5db:	(bad)  
  40a5dc:	mov    ebp,0x4475fde1
  40a5e1:	mov    eax,0x1188548e
  40a5e6:	or     eax,eax
  40a5e8:	or     al,0xf
  40a5ea:	jmp    0x40a626
  40a5ec:	mov    al,ds:0x88412695
  40a5f1:	jmp    0xff83:0xa2301073
  40a5f8:	push   edi
  40a5f9:	jmp    0x85ff:0xb828f873
  40a600:	xchg   edx,ebp
  40a602:	xchg   DWORD PTR [ebp-0x6c],eax
  40a605:	jmp    0xff14:0x64771873
  40a60c:	std    
  40a60d:	mov    ebx,0xea5475fd
  40a612:	jae    0x40a61c
  40a614:	jo     0x40a61e
  40a616:	(bad)  
  40a617:	call   edi
  40a619:	jmp    0xba019291
  40a61e:	jg     0x40a61f
  40a620:	(bad)  
  40a621:	jmp    0x89f49669
  40a626:	std    
  40a627:	jne    0x40a5dd
  40a629:	mov    eax,0x1118543a
  40a62e:	push   DWORD PTR [ebp-0x80]
  40a631:	mov    ecx,0xea8781d8
  40a636:	mov    edx,0x8b5510ec
  40a63c:	add    BYTE PTR [eax],al
  40a63e:	je     0x40a5d0
  40a640:	ret    0x31f4
  40a643:	cmp    eax,0xeb4bfeea
  40a648:	pop    esp
  40a649:	and    al,0xce
  40a64b:	xchg   edi,eax
  40a64c:	cli    
  40a64d:	out    0xc8,eax
  40a64f:	xchg   esp,eax
  40a650:	jmp    0xe6e84f53
  40a655:	(bad)  
  40a656:	sub    al,0xaf
  40a658:	sub    DWORD PTR [ecx+0x31],eax
  40a65b:	jmp    0x40a65f
  40a65d:	add    BYTE PTR [ecx],dh
  40a65f:	push   0xfd9ff680
  40a664:	jmp    0x42fafb8
  40a669:	add    BYTE PTR [ecx],dh
  40a66b:	add    esi,DWORD PTR [esi+0x53]
  40a66e:	xor    ebx,ebp
  40a670:	pop    edx
  40a671:	or     dh,cl
  40a673:	stos   DWORD PTR es:[edi],eax
  40a674:	add    ch,BYTE PTR [eax+0x33]
  40a677:	stos   DWORD PTR es:[edi],eax
  40a678:	inc    ebx
  40a679:	add    cl,bl
  40a67b:	push   cs
  40a67c:	inc    esp
  40a67d:	inc    ecx
  40a67e:	xor    DWORD PTR [esi+0x2c08532e],esi
  40a684:	add    al,0xff
  40a686:	fdivr  st(2),st
  40a688:	fisub  DWORD PTR [edi+0x67e8cd4f]
  40a68e:	cmp    ebp,DWORD PTR [ebx]
  40a690:	inc    ebx
  40a691:	add    cl,cl
  40a693:	call   0x5371e7da
  40a698:	or     BYTE PTR [eax+0x70],al
  40a69b:	mov    ebp,0xbd31025a
  40a6a0:	cmp    dh,0x0
  40a6a3:	add    BYTE PTR [ebp+esi*4-0x5ce87426],ah
  40a6aa:	call   0xea935b3b
  40a6af:	inc    BYTE PTR [esi]
  40a6b1:	fcom   QWORD PTR cs:0xff02bd62
  40a6b8:	jl     0x40a6fb
  40a6ba:	jmp    0x5154e033
  40a6bf:	shl    DWORD PTR [ebx+edx*8+0x5d],cl
  40a6c3:	mov    ebx,0x4ee918f0
  40a6c8:	stos   BYTE PTR es:[edi],al
  40a6c9:	shl    BYTE PTR [edi-0x40],0xc2
  40a6cd:	rol    BYTE PTR [ebp-0x17],cl
  40a6d0:	pop    eax
  40a6d1:	adc    al,0xd3
  40a6d3:	push   ds
  40a6d4:	mov    esi,0x40dbe149
  40a6d9:	push   edx
  40a6da:	cs jmp 0x5e660099
  40a6e0:	dec    ebx
  40a6e1:	mov    esp,0xd39f7e9d
  40a6e6:	loope  0x40a6ab
  40a6e8:	and    bh,al
  40a6ea:	cmp    ch,0x4e
  40a6ed:	push   ebp
  40a6ee:	jmp    0x64694046
  40a6f3:	jmp    0x3c20b77
  40a6f8:	and    ebx,eax
  40a6fa:	cs pop esp
  40a6fc:	call   DWORD PTR [ebx+0x28]
  40a6ff:	add    al,0x1
  40a701:	rcl    DWORD PTR [ebx-0x4],cl
  40a704:	push   esi
  40a705:	lock mov ebp,eax
  40a708:	add    BYTE PTR [eax],al
  40a70a:	push   edi
  40a70b:	mov    esp,0xd34f82e0
  40a710:	lods   eax,DWORD PTR ds:[esi]
  40a711:	(bad)  
  40a712:	repnz adc ch,BYTE PTR [eax]
  40a715:	add    al,0x30
  40a717:	adc    al,0xe9
  40a719:	add    esp,DWORD PTR [ecx+ebx*4-0x2cd0164b]
  40a720:	cmp    BYTE PTR [ebp+ebp*1+0x15],bl
  40a724:	jmp    0x3ad1b02c
  40a729:	add    al,0x31
  40a72b:	cmp    al,0xe3
  40a72d:	inc    ebx
  40a72e:	jo     0x40a744
  40a730:	adc    DWORD PTR [esi],eax
  40a732:	jno    0x40a789
  40a734:	jmp    0x94c494
  40a739:	sub    BYTE PTR ds:0x4a1a34d3,ch
  40a73f:	push   ebp
  40a740:	add    BYTE PTR [esi+0x57],ah
  40a743:	sbb    al,0xe8
  40a745:	pop    ebx
  40a746:	xlat   BYTE PTR ds:[ebx]
  40a747:	sar    esi,1
  40a749:	rcl    esp,0x12
  40a74c:	inc    ecx
  40a74d:	jmp    0xa880bdbc
  40a752:	xor    bh,BYTE PTR [esp+ebx*1]
  40a755:	test   eax,0xeb681473
  40a75a:	xor    dl,BYTE PTR [eax+eax*4]
  40a75d:	cs pop ds
  40a75f:	sbb    al,0xe8
  40a761:	aas    
  40a762:	(bad)  
  40a763:	sar    esi,1
  40a765:	ins    BYTE PTR es:[edi],dx
  40a766:	pop    ds
  40a767:	retf   0x16fd
  40a76a:	mov    DWORD PTR [edx-0x18],esp
  40a76d:	mov    DWORD PTR [eax],eax
  40a76f:	add    ah,ah
  40a771:	adc    eax,DWORD PTR [eax]
  40a773:	push   es
  40a774:	pop    ss
  40a775:	sar    dh,1
  40a777:	je     0x40a7f3
  40a779:	mov    edx,0xd189771a
  40a77e:	enter  0x6e2b,0xd2
  40a782:	push   ebx
  40a783:	jb     0x40a70e
  40a785:	xchg   ebx,eax
  40a786:	ret    
  40a787:	aad    0x57
  40a789:	sar    esi,1
  40a78b:	inc    ebx
  40a78c:	sub    eax,0xc0ce263e
  40a791:	sbb    ebp,eax
  40a793:	test   eax,ebx
  40a795:	sar    dh,cl
  40a797:	jo     0x40a789
  40a799:	iret   
  40a79a:	(bad)  
  40a79b:	in     al,dx
  40a79c:	not    BYTE PTR [edx]
  40a79e:	inc    ecx
  40a79f:	jmp    0xe940bbd6
  40a7a4:	test   eax,0x169ff698
  40a7a9:	ror    DWORD PTR [edi+0x1],cl
  40a7ac:	xor    DWORD PTR [ebx],edx
  40a7ae:	add    cl,ch
  40a7b0:	jmp    0x6816:0x18005207
  40a7b7:	imul   ecx,DWORD PTR [eax+0x57],0x581f6800
  40a7be:	inc    ecx
  40a7bf:	add    BYTE PTR [eax],dh
  40a7c1:	sbb    al,0x40
  40a7c3:	inc    ecx
  40a7c4:	fdivr  DWORD PTR [edx+0x57415333]
  40a7ca:	add    bh,bh
  40a7cc:	cmc    
  40a7cd:	int    0xe6
  40a7cf:	imul   edi,DWORD PTR [ebp-0x47],0xfffffffd
  40a7d3:	push   0x55e10000
  40a7d8:	inc    ecx
  40a7d9:	add    al,ah
  40a7db:	pop    edx
  40a7dc:	inc    eax
  40a7dd:	inc    ecx
  40a7de:	enter  0x1c6d,0x40
  40a7e2:	fst    DWORD PTR ds:0x15980268
  40a7e8:	cmp    bh,0xc5
  40a7eb:	int    0xe6
  40a7ed:	dec    edi
  40a7ee:	cmp    eax,0x158dfdb9
  40a7f3:	sar    esp,0xff
  40a7f6:	das    
  40a7f7:	push   0x1599d9e8
  40a7fc:	add    bh,bh
  40a7fe:	cmc    
  40a7ff:	mov    eax,0xed5075fd
  40a804:	xchg   edx,eax
  40a805:	jge    0x40a856
  40a807:	mov    edx,0x1554c2c7
  40a80c:	push   ebp
  40a80d:	mov    ebp,DWORD PTR [eax+ebx*4-0x3e]
  40a811:	hlt    
  40a812:	jle    0x40a7ce
  40a814:	std    
  40a815:	push   0x58
  40a817:	imul   esp,DWORD PTR [edi],0xffffffff
  40a81a:	add    eax,0xfd35e6d0
  40a81f:	mov    eax,0xbc5589fd
  40a824:	lds    eax,FWORD PTR ds:0x40f954
  40a82a:	or     BYTE PTR ds:0x38310000,dl
  40a830:	xor    dh,0xf
  40a833:	mov    ds:0xbf994fe5,al
  40a838:	add    eax,DWORD PTR [eax]
  40a83a:	add    BYTE PTR [eax],al
  40a83c:	xor    DWORD PTR [ebx-0x44ceaf6b],esp
  40a842:	pop    edx
  40a843:	xor    DWORD PTR [ecx-0x4],0x3
  40a847:	push   0x437b64
  40a84c:	dec    ecx
  40a84d:	iret   
  40a84e:	inc    edx
  40a84f:	inc    ecx
  40a850:	xor    DWORD PTR [edx+0x30],ebp
  40a853:	push   ebx
  40a854:	sbb    BYTE PTR [edx+eax*1-0x1],bh
  40a858:	cmp    al,0xc3
  40a85a:	(bad)  
  40a85c:	mov    ebp,0xb267e611
  40a861:	jp     0x40a8a6
  40a863:	add    BYTE PTR [ecx],bl
  40a865:	add    BYTE PTR [edx+0x41],0x31
  40a869:	mov    ds:0xbaf04006,eax
  40a86e:	pop    edx
  40a86f:	add    dh,BYTE PTR [ecx]
  40a871:	mov    ebx,0xb304fe82
  40a876:	fcmovb st,st(7)
  40a878:	test   DWORD PTR [ecx],ebx
  40a87a:	out    0x8c,al
  40a87c:	mov    ah,0xc9
  40a87e:	jecxz  0x40a87e
  40a880:	jbe    0x40a82c
  40a882:	ficom  DWORD PTR [ecx+0x0]
  40a885:	mov    ebx,0xb6dcff02
  40a88a:	in     al,0x74
  40a88c:	sub    ebx,esp
  40a88e:	idiv   BYTE PTR [esi+edx*2-0x17]
  40a892:	mov    edx,0x4dbb35c1
  40a897:	mov    edx,DWORD PTR [ebp+0x3b]
  40a89a:	shl    bl,0x3f
  40a89d:	xchg   ecx,eax
  40a89e:	in     al,0x69
  40a8a0:	add    BYTE PTR [eax],al
  40a8a2:	xor    DWORD PTR [ebp+0x1c],edx
  40a8a5:	jmp    DWORD PTR [ebp+esi*4+0x14a5adda]
  40a8ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a8ad:	in     eax,0xa9
  40a8af:	pop    ecx
  40a8b0:	popf   
  40a8b1:	mov    ebp,0x42d6582d
  40a8b6:	xor    DWORD PTR [ecx+ebp*8],edx
  40a8b9:	add    esi,DWORD PTR [ecx]
  40a8bb:	mov    eax,ds:0xcffced6b
  40a8c0:	jge    0x40a916
  40a8c2:	mov    DWORD PTR [eax],ebx
  40a8c4:	call   0xc0fcd9cc
  40a8c9:	push   edx
  40a8ca:	xor    DWORD PTR [ecx+edx*8],edx
  40a8cd:	mov    BYTE PTR [esi],bl
  40a8cf:	push   ebp
  40a8d0:	jmp    0xa8956b30
  40a8d5:	add    ebx,DWORD PTR [ecx+0x30]
  40a8d8:	test   eax,0xfbcf3142
  40a8dd:	push   eax
  40a8de:	or     BYTE PTR [ebp-0x17],dl
  40a8e1:	in     al,0x3d
  40a8e3:	sbb    al,0x41
  40a8e5:	inc    edi
  40a8e6:	lods   eax,DWORD PTR ds:[esi]
  40a8e7:	iret   
  40a8e8:	sub    eax,0xa854ca5c
  40a8ed:	add    ecx,DWORD PTR [ecx]
  40a8ef:	mov    ds:0x3c3142a8,eax
  40a8f4:	cmc    
  40a8f5:	inc    ebx
  40a8f6:	lock adc eax,DWORD PTR [ecx+0x69143101]
  40a8fd:	in     eax,0x5
  40a8ff:	sbb    al,0x11
  40a901:	inc    ebx
  40a902:	jne    0x40a8d3
  40a904:	cmc    
  40a905:	jbe    0x40a907
  40a907:	add    BYTE PTR [ebp+0x67e4eec7],dh
  40a90d:	sar    DWORD PTR fs:[eax-0x1b16ec12],1
  40a914:	(bad)  
  40a916:	aad    0x6e
  40a918:	cmp    DWORD PTR [esi+eiz*2-0x5030b999],edi
  40a91f:	shl    DWORD PTR [edx],0x14
  40a922:	adc    al,0x79
  40a924:	dec    edx
  40a925:	xchg   ebx,eax
  40a926:	jmp    FWORD PTR [esi+edx*1+0x4a43003d]
  40a92d:	iret   
  40a92e:	je     0x40a921
  40a930:	cli    
  40a931:	cld    
  40a932:	jnp    0x40a8d2
  40a934:	or     eax,0x6895449c
  40a939:	adc    al,0x68
  40a93b:	test   eax,0x11005572
  40a940:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a941:	push   cs
  40a942:	inc    ecx
  40a943:	jmp    0xc093b155
  40a948:	jae    0x40a95e
  40a94a:	call   0xff0e5cc8
  40a94f:	repnz repnz inc edx
  40a952:	sbb    DWORD PTR [ecx+0x4600147a],edi
  40a958:	xchg   esp,eax
  40a959:	shr    BYTE PTR ss:[ecx+0x46501473],1
  40a960:	dec    edi
  40a961:	sbb    al,0xe8
  40a963:	outs   dx,BYTE PTR ds:[esi]
  40a964:	xchg   ecx,eax
  40a965:	int    0xfe
  40a967:	inc    ecx
  40a968:	fst    DWORD PTR [eax-0x1]
  40a96b:	add    BYTE PTR cs:[eax],al
  40a96e:	or     BYTE PTR [eax+ebp*2],dl
  40a971:	cs repnz push esp
  40a974:	add    BYTE PTR [ecx-0x16bef144],dl
  40a97a:	xchg   ebp,eax
  40a97b:	pop    es
  40a97c:	push   ebx
  40a97d:	shl    bl,0x13
  40a980:	call   0xff0e5cca
  40a985:	bnd jb 0x40a9ca
  40a988:	sbb    DWORD PTR [ecx-0x1ffebf6],ebx
  40a98e:	lea    esi,[esi]
  40a990:	shr    BYTE PTR [ecx],1
  40a992:	hlt    
  40a993:	adc    edx,DWORD PTR [eax-0x22]
  40a996:	clc    
  40a997:	sbb    ebp,eax
  40a999:	xor    dl,BYTE PTR [esi-0x453e0133]
  40a99f:	push   eax
  40a9a0:	inc    DWORD PTR [eax]
  40a9a2:	ja     0x40a956
  40a9a4:	jae    0x40a9a2
  40a9a6:	ja     0x40aa14
  40a9a8:	or     al,ch
  40a9aa:	loop   0x40aa19
  40a9ac:	(bad)  
  40a9ad:	call   ecx
  40a9af:	(bad)  
  40a9b0:	add    al,BYTE PTR [eax]
  40a9b2:	pop    ebp
  40a9b3:	popf   
  40a9b4:	jmp    0x3257:0x54b4cc83
  40a9bb:	sbb    BYTE PTR [edx+0x2a],ch
  40a9be:	mov    bh,0x6b
  40a9c0:	or     al,ch
  40a9c2:	xchg   esp,eax
  40a9c3:	ins    DWORD PTR es:[edi],dx
  40a9c4:	(bad)  
  40a9c5:	inc    DWORD PTR [ecx-0x279503a5]
  40a9cb:	mov    ecx,0xb15782a7
  40a9d0:	or     eax,eax
  40a9d2:	add    BYTE PTR [eax],al
  40a9d4:	cld    
  40a9d5:	ror    BYTE PTR [esi+0x68],1
  40a9d8:	enter  0xef11,0xbe
  40a9dc:	lock aam 0x3e
  40a9df:	inc    ecx
  40a9e0:	fadd   DWORD PTR [ecx]
  40a9e2:	push   DWORD PTR [ebp-0x40]
  40a9e5:	mov    ecx,0xb0f7a30f
  40a9ea:	out    0x3d,al
  40a9ec:	out    0xb2,al
  40a9ee:	std    
  40a9ef:	mov    ebx,DWORD PTR [ebp-0x77bed7c3]
  40a9f5:	sahf   
  40a9f6:	cmp    esi,DWORD PTR [eax-0x80]
  40a9f9:	pop    eax
  40a9fa:	add    BYTE PTR [eax+0x45741167],al
  40aa00:	mov    al,0xbf
  40aa02:	ds inc ecx
  40aa04:	mov    BYTE PTR [edx],cl
  40aa06:	call   0x5242c8
  40aa0b:	or     ebx,DWORD PTR [eax]
  40aa0d:	ins    BYTE PTR es:[edi],dx
  40aa0e:	pop    ds
  40aa0f:	push   esi
  40aa10:	xor    BYTE PTR [eax+0x157ff85],bh
  40aa16:	push   0xbcc24800
  40aa1b:	push   0x41428831
  40aa20:	xor    DWORD PTR [ebx],ecx
  40aa22:	jecxz  0x40aa98
  40aa24:	sub    ebx,esp
  40aa26:	mov    ah,0xa1
  40aa28:	ss mov gs,edx
  40aa2b:	std    
  40aa2c:	lods   al,BYTE PTR ds:[esi]
  40aa2d:	xchg   cl,ah
  40aa2f:	jmp    0x3031:0x3d83f530
  40aa36:	fiadd  WORD PTR [ebp+0x0]
  40aa39:	add    BYTE PTR ds:0xeb8c2ea,dl
  40aa3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa40:	loope  0x40aa40
  40aa42:	add    ecx,DWORD PTR ds:0x5284071b
  40aa48:	loop   0x40aabe
  40aa4a:	cmc    
  40aa4b:	dec    ebp
  40aa4c:	pop    eax
  40aa4d:	or     cl,bl
  40aa4f:	and    BYTE PTR [edi-0x1],bl
  40aa52:	out    0x1d,al
  40aa54:	inc    edx
  40aa55:	leave  
  40aa56:	repz mov esi,0x5eaa5502
  40aa5c:	xchg   bl,al
  40aa5e:	int    0x8c
  40aa60:	cmp    DWORD PTR [edx+0x31],ebp
  40aa63:	shr    DWORD PTR ds:0xeac344ff,1
  40aa69:	stc    
  40aa6a:	cmp    ecx,DWORD PTR [esi]
  40aa6c:	loop   0x40a9f6
  40aa6e:	hlt    
  40aa6f:	push   es
  40aa70:	mov    ?,WORD PTR [edx*1-0x55ffbaed]
  40aa77:	mov    bh,0x52
  40aa79:	sub    al,dh
  40aa7b:	mov    edx,0xaf313e82
  40aa80:	inc    edi
  40aa81:	push   0x437a84
  40aa86:	out    0x22,al
  40aa88:	and    dl,BYTE PTR [eax+0x31]
  40aa8b:	mov    ebx,0xe5e5c00d
  40aa90:	cmp    al,ch
  40aa92:	shl    DWORD PTR ds:0x1401fee2,cl
  40aa98:	push   ecx
  40aa99:	add    al,0x31
  40aa9b:	mov    ebp,0x6c9e
  40aaa0:	pop    esi
  40aaa1:	push   ebx
  40aaa2:	sub    BYTE PTR [ecx+eiz*8],al
  40aaa5:	int3   
  40aaa6:	push   ebx
  40aaa7:	or     al,0x49
  40aaa9:	addr16 mov esp,ecx
  40aaac:	aaa    
  40aaad:	mov    ebx,0xcc2e5f68
  40aab2:	rol    DWORD PTR [ebx],0x6f
  40aab5:	xchg   esp,eax
  40aab6:	out    dx,al
  40aab7:	add    esp,DWORD PTR [esi+ecx*8-0x2b9c1fd2]
  40aabe:	pop    edi
  40aabf:	loope  0x40aad0
  40aac1:	int3   
  40aac2:	xchg   ebp,eax
  40aac3:	(bad)  
  40aac4:	aam    0xc
  40aac6:	out    0x56,al
  40aac8:	mov    edx,0xf7dffbcb
  40aacd:	inc    ecx
  40aace:	icebp  
  40aacf:	jmp    0x40aadb
  40aad1:	dec    edi
  40aad2:	jbe    0x40aab5
  40aad4:	xchg   DWORD PTR [edx-0x60],ebp
  40aad7:	(bad)  
  40aad8:	xor    dl,BYTE PTR [esp+edi*4]
  40aadb:	mov    edx,cs
  40aadd:	xchg   edi,eax
  40aade:	and    al,0xe0
  40aae0:	pop    eax
  40aae1:	adc    al,0xc3
  40aae3:	das    
  40aae4:	mov    BYTE PTR [ecx-0x1f],0xeb
  40aae8:	cmp    al,0x4e
  40aaea:	inc    esi
  40aaeb:	loope  0x40aa96
  40aaed:	push   ecx
  40aaee:	cmp    eax,0xe93e316e
  40aaf3:	imul   esi,DWORD PTR [edx*2+0x140903a8],0xffffffe9
  40aafb:	add    esi,DWORD PTR [ecx-0x707c4f44]
  40ab01:	retf   
  40ab02:	loope  0x40aac7
  40ab04:	add    BYTE PTR [eax],al
  40ab06:	add    ch,BYTE PTR [ebx]
  40ab08:	mov    ecx,0x5928feb
  40ab0d:	loope  0x40aaf5
  40ab0f:	cmp    ebp,ecx
  40ab11:	add    ebx,DWORD PTR [esi-0x76]
  40ab14:	inc    DWORD PTR [eax-0x16beaad2]
  40ab1a:	and    cl,bl
  40ab1c:	je     0x40ab0f
  40ab1e:	dec    edx
  40ab1f:	mov    ah,0xa0
  40ab21:	ficom  WORD PTR [ecx-0x4d]
  40ab24:	or     al,0x54
  40ab26:	push   eax
  40ab27:	retf   0x54fe
  40ab2a:	push   ecx
  40ab2b:	retf   0xf174
  40ab2e:	dec    edx
  40ab2f:	dec    ebx
  40ab30:	jp     0x40aaf0
  40ab32:	adc    esp,ebx
  40ab34:	shr    ebp,0x32
  40ab37:	popa   
  40ab38:	mov    edi,DWORD PTR [ebp+0x13fbd6b5]
  40ab3e:	sub    eax,0x679e2d3e
  40ab43:	sbb    al,0xe8
  40ab45:	int    0x64
  40ab47:	retf   
  40ab48:	(bad)  
  40ab49:	pusha  
  40ab4a:	ja     0x40ab14
  40ab4c:	addr16 jmp 0x11fe6684
  40ab52:	jp     0x40aba9
  40ab54:	inc    ecx
  40ab55:	jmp    0x28820cb4
  40ab5a:	xor    eax,0xcaf174cb
  40ab5f:	mov    esi,0xc9d15ea0
  40ab64:	je     0x40abbb
  40ab66:	sar    DWORD PTR [edi],1
  40ab68:	or     BYTE PTR [ecx+0x0],al
  40ab6b:	add    BYTE PTR [edi+0x4e],dh
  40ab6e:	inc    DWORD PTR [esi-0x15]
  40ab71:	aam    0x3
  40ab73:	jmp    0x6b2c4adf
  40ab78:	outs   dx,BYTE PTR ds:[esi]
  40ab79:	into   
  40ab7a:	imul   ebp,ecx,0x9cfefa0c
  40ab80:	sub    bh,BYTE PTR [eax+ebp*8-0x77366e60]
  40ab87:	lods   al,BYTE PTR ds:[esi]
  40ab88:	data16 xor al,BYTE PTR [eax]
  40ab8b:	jmp    0xa83411
  40ab90:	test   al,0x55
  40ab92:	inc    ecx
  40ab93:	add    al,al
  40ab95:	popa   
  40ab96:	inc    ecx
  40ab97:	inc    ecx
  40ab98:	pop    eax
  40ab99:	mov    bl,0x73
  40ab9b:	or     BYTE PTR [eax],dh
  40ab9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab9e:	lahf   
  40ab9f:	dec    DWORD PTR [edi+0x37]
  40aba2:	add    BYTE PTR [eax],al
  40aba4:	jg     0x40ab4f
  40aba6:	imul   bx,WORD PTR [ecx],0x51
  40abaa:	add    BYTE PTR [eax-0x1b],ch
  40abad:	push   eax
  40abae:	inc    ecx
  40abaf:	add    BYTE PTR [edi+0x6c],ch
  40abb2:	or     al,ch
  40abb4:	xchg   edx,eax
  40abb5:	outs   dx,DWORD PTR ds:[esi]
  40abb6:	std    
  40abb7:	(bad)  
  40abb8:	fild   QWORD PTR [ebx-0x4]
  40abbb:	jmp    DWORD PTR [ebp+0x18]
  40abbe:	call   0xfe29fdb6
  40abc3:	leave  
  40abc4:	ficomp DWORD PTR [eax+eax*1]
  40abc7:	push   ebp
  40abc8:	xchg   ebx,eax
  40abc9:	les    eax,FWORD PTR [ecx+0x539dacc4]
  40abcf:	adc    BYTE PTR [eax],al
  40abd1:	add    BYTE PTR [ebx+0x5d0068c6],al
  40abd7:	pop    ebx
  40abd8:	cld    
  40abd9:	push   eax
  40abda:	pop    edi
  40abdb:	imul   ecx,DWORD PTR [eax],0x6a
  40abde:	enter  0x73ea,0x10
  40abe2:	dec    edi
  40abe3:	push   es
  40abe4:	sbb    al,0x85
  40abe6:	sbb    BYTE PTR [ebx+0x27],ch
  40abe9:	mov    eax,DWORD PTR [ebp-0x37957117]
  40abef:	cmp    eax,DWORD PTR [eax]
  40abf1:	push   0x156f
  40abf6:	outs   dx,DWORD PTR ds:[esi]
  40abf7:	imul   ecx,DWORD PTR [edx+ebp*2],0x5f
  40abfb:	jmp    0x15b2b070
  40ac00:	push   0x0
  40ac02:	inc    eax
  40ac03:	ja     0x40ac50
  40ac05:	add    BYTE PTR [eax+0x3175fe45],bl
  40ac0b:	pop    ds
  40ac0c:	in     al,dx
  40ac0d:	pop    edi
  40ac0e:	out    dx,eax
  40ac0f:	mov    edx,0xbf73c902
  40ac14:	add    dl,BYTE PTR [ebp-0x46]
  40ac17:	pop    ss
  40ac18:	add    ebx,0x65
  40ac1b:	cmp    DWORD PTR ss:[edx+ebp*4],edx
  40ac1f:	in     eax,dx
  40ac20:	push   0xdff8a400
  40ac25:	dec    edi
  40ac26:	dec    esi
  40ac27:	pusha  
  40ac28:	adc    bh,bh
  40ac2a:	mov    esp,0x3e0068b2
  40ac2f:	pusha  
  40ac30:	clc    
  40ac31:	(bad)  
  40ac32:	jecxz  0x40ac56
  40ac34:	mov    DWORD PTR [edi+0x12a40000],edi
  40ac3a:	mov    edx,DWORD PTR [ebp+eiz*1+0x6b]
  40ac3e:	imul   eax,DWORD PTR [eax],0xff6abb8b
  40ac44:	xor    bh,BYTE PTR [ebx-0x347b00fe]
  40ac4a:	push   0x82d06ff
  40ac4f:	push   0x31
  40ac51:	adc    eax,0x5ae804
  40ac56:	add    al,0x0
  40ac58:	ror    DWORD PTR [ecx+0x58],0xfc
  40ac5c:	fldlg2 
  40ac5e:	dec    esp
  40ac5f:	add    BYTE PTR [ecx],dh
  40ac61:	je     0x40ac23
  40ac63:	rdtsc  
  40ac65:	mov    BYTE PTR [ecx+0xadfceeb],cl
  40ac6b:	(bad)  
  40ac6c:	cmp    al,0xc3
  40ac6e:	jmp    0x3cfe:0xde5a3952
  40ac75:	mov    edi,0xbafc97ea
  40ac7a:	add    dl,cl
  40ac7c:	xchg   ecx,eax
  40ac7d:	cmp    eax,0xfa0101c3
  40ac82:	push   edi
  40ac83:	or     al,0x96
  40ac85:	adc    ebx,DWORD PTR [ebx+edi*8-0x215ebc6a]
  40ac8c:	xchg   eax,ecx
  40ac8e:	fwait
  40ac8f:	idiv   DWORD PTR [edi+0x3e]
  40ac92:	stc    
  40ac93:	fdivp  st(5),st
  40ac95:	sub    edx,DWORD PTR [ecx]
  40ac97:	popa   
  40ac98:	jmp    0x10caa65
  40ac9d:	add    BYTE PTR [eax+0x1f],dh
  40aca0:	jmp    0xedf856dd
  40aca5:	push   edi
  40aca6:	sub    ecx,ecx
  40aca8:	pop    ebx
  40aca9:	cld    
  40acaa:	push   esi
  40acab:	sub    eax,0xc847dd61
  40acb0:	pop    ebx
  40acb1:	adc    BYTE PTR [ecx-0x6a],cl
  40acb4:	sbb    al,0x4
  40acb6:	xor    DWORD PTR [ecx+ebx*1-0x23],edx
  40acba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40acbb:	sbb    BYTE PTR [esi-0xe43b6a9],bh
  40acc1:	pop    ebx
  40acc2:	push   ds
  40acc3:	enter  0x57ad,0x3d
  40acc7:	(bad)  
  40acc8:	sbb    esi,esp
  40acca:	cmovb  eax,DWORD PTR [ecx]
  40accd:	in     al,dx
  40acce:	push   ebp
  40accf:	dec    esp
  40acd0:	xchg   esi,eax
  40acd1:	fucomp st(1)
  40acd3:	shl    ah,cl
  40acd5:	add    ebx,DWORD PTR [ebx+ebx*4-0x6c]
  40acd9:	xor    edx,0xffffffe0
  40acdc:	jns    0x40acbb
  40acde:	out    0xc7,eax
  40ace0:	sti    
  40ace1:	sti    
  40ace2:	lods   eax,DWORD PTR ds:[esi]
  40ace3:	xchg   ecx,eax
  40ace4:	call   0xb90884c8
  40ace9:	fadd   QWORD PTR [ebp+0x1c]
  40acec:	push   ecx
  40aced:	mov    esi,0xdd55c7c4
  40acf2:	inc    ebp
  40acf3:	sub    al,0x5c
  40acf5:	xchg   DWORD PTR [esi-0x122ba41],esi
  40acfb:	(bad)  
  40acfc:	mov    bl,0xf
  40acfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40acff:	inc    ecx
  40ad00:	add    cl,ah
  40ad02:	add    BYTE PTR [eax],al
  40ad04:	mov    ah,BYTE PTR [ebx]
  40ad06:	jmp    FWORD PTR [esi]
  40ad08:	je     0x40ad47
  40ad0a:	add    BYTE PTR [ebx-0x1500c3ce],dl
  40ad10:	xor    dl,BYTE PTR [ecx*4-0x13fca94]
  40ad17:	push   cs
  40ad18:	cmp    eax,0x606ff3a
  40ad1d:	and    al,0x6a
  40ad1f:	jmp    0x5c28c0fc
  40ad24:	add    DWORD PTR [eax+eax*1],edx
  40ad27:	es scas al,BYTE PTR es:[edi]
  40ad29:	mov    bh,0xf2
  40ad2b:	out    0x6d,al
  40ad2d:	pop    ss
  40ad2e:	add    cl,ch
  40ad30:	xor    cl,bh
  40ad32:	test   ch,bl
  40ad34:	popa   
  40ad35:	(bad)  
  40ad36:	(bad)  
  40ad37:	jmp    0x40ad6b
  40ad39:	adc    al,0x0
  40ad3b:	scas   al,BYTE PTR es:[edi]
  40ad3c:	mov    bh,0xbe
  40ad3e:	repnz mov esi,0xe9fec705
  40ad44:	xor    cl,bh
  40ad46:	test   BYTE PTR [ebp-0x160139ff],ch
  40ad4c:	xor    dl,BYTE PTR [eax+eax*1]
  40ad4f:	jb     0x40ad90
  40ad51:	sub    al,0x8b
  40ad53:	sti    
  40ad54:	mov    BYTE PTR [ecx*4-0x13e1d9c],dl
  40ad5b:	xchg   BYTE PTR [edx],ah
  40ad5d:	cdq    
  40ad5e:	test   BYTE PTR [ebp+0x19fec601],cl
  40ad64:	scas   al,BYTE PTR es:[edi]
  40ad65:	(bad)  
  40ad66:	out    0x7a,eax
  40ad68:	add    BYTE PTR [eax],al
  40ad6a:	cmc    
  40ad6b:	lds    ecx,FWORD PTR [edi+0x66]
  40ad6e:	addr16 and al,0xff
  40ad71:	aam    0x36
  40ad73:	(bad)  
  40ad74:	je     0x40ad57
  40ad76:	dec    eax
  40ad77:	adc    al,0xff
  40ad79:	aam    0xba
  40ad7b:	lds    edx,FWORD PTR [ecx+0x0]
  40ad7e:	fcom   QWORD PTR [ebx-0x17941745]
  40ad84:	std    
  40ad85:	add    BYTE PTR [edi-0x77fee572],dl
  40ad8b:	adc    al,BYTE PTR [ebx-0x21bdb43]
  40ad91:	call   FWORD PTR [eax-0x76f07be9]
  40ad97:	adc    al,BYTE PTR [eax]
  40ad99:	(bad)  
  40ad9a:	or     eax,0x37fff17f
  40ad9f:	adc    eax,DWORD PTR [eax]
  40ada1:	out    dx,eax
  40ada2:	cmp    eax,DWORD PTR es:[ecx+eax*2-0x7a72ed77]
  40adaa:	dec    eax
  40adab:	out    0xfd,al
  40adad:	dec    DWORD PTR [eax]
  40adaf:	mov    eax,0x12584c12
  40adb4:	test   eax,eax
  40adb6:	fmul   QWORD PTR [ebp-0x39]
  40adb9:	test   DWORD PTR [esi+ebx*8-0x3],edi
  40adbd:	call   FWORD PTR [ecx]
  40adbf:	adc    ch,bh
  40adc1:	mov    esi,0x41404280
  40adc6:	or     BYTE PTR [ebp-0x163bff7d],bl
  40adcc:	std    
  40adcd:	push   eax
  40adce:	add    BYTE PTR [eax],al
  40add0:	mov    al,ds:0x180049e3
  40add5:	xchg   ebp,eax
  40add6:	mov    esi,0x83d2eb74
  40addb:	aam    0x9b
  40addd:	jmp    0xbb18b0df
  40ade2:	mov    esp,0x414f7668
  40ade7:	add    BYTE PTR [ebp-0x6d],dl
  40adea:	(bad)  
  40adeb:	sti    
  40adec:	inc    edi
  40aded:	jmp    0x554f9640
  40adf2:	add    BYTE PTR [eax],al
  40adf4:	dec    ebp
  40adf5:	ror    BYTE PTR ds:0x39a3185,1
  40adfb:	add    BYTE PTR [ecx],dh
  40adfd:	rol    esp,cl
  40adff:	inc    eax
  40ae00:	lock mov edx,0xff318487
  40ae06:	(bad)  
  40ae08:	add    DWORD PTR [ebx-0x4d],edx
  40ae0b:	dec    ebx
  40ae0c:	xor    DWORD PTR [ebx-0x53fa3ff3],edi
  40ae12:	test   DWORD PTR [esp+esi*1],edi
  40ae15:	jns    0x40ae5a
  40ae17:	add    BYTE PTR [ecx],dh
  40ae19:	scas   al,BYTE PTR es:[edi]
  40ae1a:	jle    0x40ad9c
  40ae1c:	xor    DWORD PTR [ebx+0x23a4ff02],edi
  40ae22:	xlat   BYTE PTR ds:[ebx]
  40ae23:	(bad)  
  40ae24:	ss sbb di,0xbe62
  40ae2a:	fsin   
  40ae2c:	pushf  
  40ae2d:	(bad)  
  40ae2e:	aad    0xfe
  40ae30:	dec    esi
  40ae31:	ds and bl,0x0
  40ae35:	add    BYTE PTR [edx-0x1a],al
  40ae38:	(bad)  [esp+esi*4+0x36fed583]
  40ae3f:	or     ebp,DWORD PTR [esi+0x1]
  40ae42:	fwait
  40ae43:	mov    ebx,0xbb9b006c
  40ae48:	ins    BYTE PTR es:[edi],dx
  40ae49:	add    BYTE PTR [edi+esi*1+0x7616f2e3],ch
  40ae50:	xor    bh,bh
  40ae52:	and    al,0xc0
  40ae54:	inc    esp
  40ae55:	inc    ecx
  40ae56:	xor    edx,eax
  40ae58:	ret    0x7673
  40ae5b:	sahf   
  40ae5c:	dec    edi
  40ae5d:	adc    al,0xf6
  40ae5f:	pop    edi
  40ae60:	mov    ebx,0xd98deef2
  40ae65:	mov    ah,0x5
  40ae67:	dec    edx
  40ae68:	(bad)  
  40ae6a:	faddp  st(7),st
  40ae6c:	repnz (bad) 
  40ae6e:	pushf  
  40ae6f:	sahf   
  40ae70:	aad    0xfe
  40ae72:	into   
  40ae73:	adc    edx,DWORD PTR [ecx-0x22]
  40ae76:	vminps ymm3,ymm7,ymm2
  40ae7a:	test   edi,esp
  40ae7c:	pop    ecx
  40ae7d:	fidiv  DWORD PTR [edi+0x314d2ebb]
  40ae83:	adc    al,0x52
  40ae85:	clc    
  40ae86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae87:	ds aad 0xda
  40ae8a:	in     eax,0xbb
  40ae8c:	cmp    edx,ebx
  40ae8e:	xchg   edi,eax
  40ae8f:	les    esi,FWORD PTR [ebx-0x19]
  40ae92:	add    esp,0x25
  40ae95:	(bad)  
  40ae97:	and    ebx,DWORD PTR [esi]
  40ae99:	nop
  40ae9a:	add    BYTE PTR [eax],al
  40ae9c:	(bad)  
  40ae9d:	rcl    BYTE PTR ds:0xbe28eda,0xda
  40aea4:	outs   dx,DWORD PTR ds:[esi]
  40aea5:	les    edi,FWORD PTR [ebx]
  40aea7:	out    0x63,eax
  40aea9:	(bad)  
  40aeaa:	std    
  40aeab:	jmp    0xd168:0x3e95882
  40aeb2:	aam    0x3
  40aeb4:	in     al,0x98
  40aeb6:	aam    0x85
  40aeb8:	jb     0x40ae45
  40aeba:	xor    eax,0x621fe58d
  40aebf:	mul    BYTE PTR [ebp-0x64cb6eb2]
  40aec5:	adc    al,0xc6
  40aec7:	dec    edi
  40aec8:	xor    eax,0x8b0c33c3
  40aecd:	adc    al,0xb6
  40aecf:	dec    edi
  40aed0:	cmp    eax,0xb4301ac3
  40aed5:	aam    0x1b
  40aed7:	xor    dh,ch
  40aed9:	pop    ecx
  40aeda:	pop    ebp
  40aedb:	add    al,0x31
  40aedd:	adc    al,0xe9
  40aedf:	mov    WORD PTR [ebp+0x7c],ds
  40aee2:	popa   
  40aee3:	idiv   BYTE PTR [ebp-0x4bcbbaa7]
  40aee9:	pop    ecx
  40aeea:	test   eax,0x244b34
  40aeef:	jbe    0x40af57
  40aef1:	jl     0x40aef1
  40aef3:	sbb    edi,DWORD PTR [ecx]
  40aef5:	xchg   edi,eax
  40aef6:	jl     0x40ae9d
  40aef8:	sub    eax,0x666c2748
  40aefd:	aam    0xfe
  40aeff:	fadd   QWORD PTR [eax]
  40af01:	add    dh,al
  40af03:	ret    0xf974
  40af06:	mov    DWORD PTR [edx],ecx
  40af08:	(bad)  
  40af09:	mov    esp,0xf174c32e
  40af0e:	mov    ah,bh
  40af10:	cld    
  40af11:	ss js  0x40aed6
  40af14:	ss inc ecx
  40af16:	push   ss
  40af17:	dec    edi
  40af18:	add    cl,ch
  40af1a:	lods   eax,DWORD PTR ds:[esi]
  40af1b:	fiadd  DWORD PTR [ebx]
  40af1d:	push   ds
  40af1e:	idiv   BYTE PTR [edi+0x74]
  40af21:	aaa    
  40af22:	test   BYTE PTR [edx-0x71354b76],cl
  40af28:	adc    DWORD PTR [esi],eax
  40af2a:	idiv   BYTE PTR [ebx-0x2]
  40af2d:	fwait
  40af2e:	sub    ah,BYTE PTR [ebx-0x37]
  40af31:	sub    ebx,DWORD PTR [ebp-0x3d]
  40af34:	push   ebx
  40af35:	bound  ebx,QWORD PTR [ecx-0x6c]
  40af38:	ret    
  40af39:	loope  0x40afa3
  40af3b:	ret    0x36fe
  40af3e:	lods   al,BYTE PTR ds:[esi]
  40af3f:	push   0x903c6210
  40af44:	test   cl,dl
  40af46:	or     dl,al
  40af48:	(bad)  
  40af49:	sbb    DWORD PTR [edi+0x2d34ff14],edx
  40af4f:	add    BYTE PTR cs:[esi+0x1bff2467],dh
  40af56:	sub    DWORD PTR [ecx-0x246fe341],ebx
  40af5c:	test   BYTE PTR [ebp-0x16013e28],bl
  40af62:	xor    dl,BYTE PTR [eax+eax*1]
  40af65:	bound  eax,QWORD PTR [eax]
  40af67:	add    BYTE PTR [edi-0x35],bl
  40af6a:	std    
  40af6b:	add    BYTE PTR [edi+0x4d1289db],ch
  40af71:	inc    edx
  40af72:	sti    
  40af73:	(bad)  
  40af74:	pop    edi
  40af75:	fmul   QWORD PTR [esi-0x73]
  40af78:	push   ebp
  40af79:	pop    ss
  40af7a:	(bad)  
  40af7b:	dec    DWORD PTR [edi+0x7]
  40af7e:	push   0x10
  40af80:	pop    edi
  40af81:	xchg   edx,eax
  40af82:	idiv   dh
  40af84:	pop    edi
  40af85:	fdiv   st(5),st
  40af87:	push   edx
  40af88:	mov    WORD PTR [edi-0x24110345],ss
  40af8e:	std    
  40af8f:	add    ah,ah
  40af91:	clc    
  40af92:	mov    WORD PTR [ebp-0x22478],?
  40af98:	pop    edi
  40af99:	push   edx
  40af9a:	adc    bh,bh
  40af9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af9d:	sbb    dl,BYTE PTR [edi-0x1]
  40afa0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40afa1:	push   cs
  40afa2:	call   0xfe1cceba
  40afa7:	adc    DWORD PTR [edi],0xffffffc7
  40afaa:	std    
  40afab:	lea    ebp,[ebx*8-0x4b1a0003]
  40afb2:	jmp    0xf7728361
  40afb7:	(bad)  
  40afb8:	pop    edi
  40afb9:	jmp    0xfef6:0xa44f1289
  40afc0:	pop    edi
  40afc1:	jmp    0xc2c9:0x95052fd
  40afc8:	or     al,0x16
  40afca:	push   ebp
  40afcb:	mov    eax,DWORD PTR [eax]
  40afcd:	add    ah,bh
  40afcf:	xchg   edi,eax
  40afd0:	ret    0xdef8
  40afd3:	jmp    0x3d407d5
  40afd8:	or     al,0x8b
  40afda:	jmp    0xfde9:0xcef8838c
  40afe1:	push   eax
  40afe2:	and    bl,BYTE PTR [eax]
  40afe4:	push   0x0
  40afe6:	xor    DWORD PTR [edx-0x211f3b0],ebp
  40afec:	sbb    eax,DWORD PTR [ebp-0x38ca3f0f]
  40aff2:	je     0x40b033
  40aff4:	add    al,0x0
  40aff6:	xor    DWORD PTR [ebx+0x43a48a72],ebp
  40affc:	(bad)  
  40affd:	inc    dh
  40afff:	inc    esi
  40b000:	repnz mov WORD PTR [edi+ebx*2+0x34],?
  40b005:	lea    ebp,[edi+eiz*2+0x7baefed6]
  40b00c:	push   0xdc40a610
  40b011:	std    
  40b012:	sahf   
  40b013:	add    dl,bh
  40b015:	push   ecx
  40b016:	and    eax,0x8d7c835b
  40b01b:	stos   DWORD PTR es:[edi],eax
  40b01c:	jb     0x40b091
  40b01e:	push   ecx
  40b01f:	dec    eax
  40b020:	cdq    
  40b021:	sti    
  40b022:	jg     0x40b046
  40b024:	xlat   BYTE PTR ds:[ebx]
  40b025:	(bad)  
  40b026:	jbe    0x40afc8
  40b028:	push   es
  40b029:	jmp    esp
  40b02b:	mov    dl,0x2d
  40b02d:	call   0xff17ca6b
  40b032:	add    BYTE PTR [eax],al
  40b034:	mov    dl,0xfa
  40b036:	repz (bad) 
  40b038:	push   esi
  40b039:	js     0x40b011
  40b03b:	pop    esp
  40b03d:	adc    esi,DWORD PTR [edx+ebp*8-0x7d]
  40b041:	inc    esi
  40b042:	jo     0x40b03b
  40b044:	aas    
  40b045:	loop   0x40b01c
  40b047:	mov    ah,BYTE PTR [ebx]
  40b049:	jmp    0xfed5:0xd22ff78f
  40b050:	add    ebx,0x35
  40b053:	leave  
  40b054:	repz ret 0x5502
  40b058:	stos   BYTE PTR es:[edi],al
  40b059:	(bad)  
  40b05a:	add    ebx,0x74d728c1
  40b060:	xor    eax,0x69cc9114
  40b065:	adc    al,0xe9
  40b067:	or     dh,cl
  40b069:	inc    esi
  40b06a:	in     al,dx
  40b06b:	xor    eax,0x3dcd5f8
  40b070:	add    BYTE PTR [ecx+ebp*2-0x6772cf3d],dh
  40b077:	mov    BYTE PTR [ebp-0x50],ch
  40b07a:	sbb    BYTE PTR [edx],dh
  40b07c:	into   
  40b07d:	inc    esi
  40b07e:	fucomp st(3)
  40b080:	push   edx
  40b081:	xchg   edx,eax
  40b082:	gs (bad) 
  40b084:	or     ecx,ebx
  40b086:	outs   dx,DWORD PTR ds:[esi]
  40b087:	dec    eax
  40b088:	(bad)  [edx+eiz*8-0x5b75c1f3]
  40b08f:	sub    al,0x95
  40b091:	adc    ch,BYTE PTR [edi+ebp*4-0x10c06b0f]
  40b098:	add    BYTE PTR [eax],al
  40b09a:	and    bl,al
  40b09c:	add    esi,ecx
  40b09e:	mov    ecx,0x4eea1946
  40b0a3:	or     dh,dh
  40b0a5:	(bad)  
  40b0a6:	repnz icebp 
  40b0a8:	or     al,0x33
  40b0aa:	or     DWORD PTR [ebx-0x55],ecx
  40b0ad:	inc    esp
  40b0ae:	xor    DWORD PTR [edi-0x5409445d],ecx
  40b0b4:	adc    al,0x4c
  40b0b6:	xor    DWORD PTR [edx+ebp*2],edx
  40b0b9:	mov    edi,0xbbab8f2a
  40b0be:	inc    al
  40b0c0:	jae    0x40b075
  40b0c2:	dec    esi
  40b0c3:	mov    esp,DWORD PTR [ecx-0x2b]
  40b0c6:	aas    
  40b0c7:	mov    ah,BYTE PTR [ebx]
  40b0c9:	mov    ah,0xec
  40b0cb:	xchg   esp,eax
  40b0cc:	(bad)  
  40b0cd:	lock mov al,ds:0xfd5f67e3
  40b0d3:	mov    edi,0xbf3103e8
  40b0d8:	xor    esi,DWORD PTR [eax+0x2b004d8e]
  40b0de:	jb     0x40b0f4
  40b0e0:	lea    esp,[eax*8+0x6a65e84f]
  40b0e7:	adc    al,0x0
  40b0e9:	push   0xfffffff1
  40b0eb:	or     ecx,DWORD PTR [ebp-0xb052d4]
  40b0f1:	adc    al,0x9d
  40b0f3:	mov    bh,0x57
  40b0f5:	add    al,BYTE PTR [edi+edi*4]
  40b0f8:	mov    BYTE PTR [ebx*4+0xa54490],ah
  40b0ff:	add    BYTE PTR ds:0x559974bf,al
  40b105:	dec    esi
  40b106:	inc    edx
  40b107:	test   al,0x32
  40b109:	mov    edi,0x550bba34
  40b10e:	add    BYTE PTR [ecx+0x10],al
  40b111:	cmp    bh,bh
  40b113:	dec    esi
  40b114:	cmp    ah,dl
  40b116:	push   cs
  40b117:	ins    DWORD PTR es:[edi],dx
  40b118:	or     al,0xbf
  40b11a:	(bad)  
  40b11b:	jmp    0x6b0909cb
  40b120:	out    0xcf,al
  40b122:	(bad)  
  40b123:	fld    QWORD PTR [esi]
  40b125:	xchg   ebp,eax
  40b126:	(bad)  
  40b127:	call   0xedb5705e
  40b12c:	mov    dl,BYTE PTR [ebx]
  40b12e:	dec    ecx
  40b12f:	jmp    0x6b209666
  40b134:	ins    DWORD PTR es:[edi],dx
  40b135:	adc    eax,0xbec2ac89
  40b13a:	je     0x40b129
  40b13c:	lods   eax,DWORD PTR ds:[esi]
  40b13d:	pop    eax
  40b13e:	mov    ah,0xf6
  40b140:	dec    edi
  40b142:	mov    fs,WORD PTR [edx+esi*2-0x4a4e8b42]
  40b149:	pop    eax
  40b14a:	les    esp,FWORD PTR [esi-0x17008009]
  40b150:	xor    dl,BYTE PTR [ebx+eax*4]
  40b153:	or     al,0x36
  40b155:	in     eax,dx
  40b156:	inc    eax
  40b157:	add    BYTE PTR [eax],cl
  40b159:	adc    esi,DWORD PTR [eax+edx*2-0x7b]
  40b15d:	(bad)  
  40b15e:	mov    bh,0x50
  40b160:	jb     0x40b175
  40b162:	push   0x0
  40b164:	add    BYTE PTR [eax],al
  40b166:	jb     0x40b180
  40b168:	lea    eax,[ebp+0x58]
  40b16b:	add    ebp,DWORD PTR [edx+0x0]
  40b16e:	test   esi,edi
  40b170:	mov    edi,0x33adc750
  40b175:	sub    DWORD PTR [ecx],ebx
  40b177:	sbb    BYTE PTR [ebx],cl
  40b179:	rcr    ah,0x24
  40b17c:	cmp    DWORD PTR [ebp+0x14],0x13
  40b180:	je     0x40b1ae
  40b182:	pop    ebx
  40b183:	data16 adc BYTE PTR [eax],al
  40b186:	mov    esp,0xb8558b0a
  40b18b:	pusha  
  40b18c:	mov    DWORD PTR [edx],0x75ff1817
  40b192:	nop
  40b193:	out    0x73,eax
  40b195:	mov    eax,0xffbc4df7
  40b19a:	fst    QWORD PTR [esi]
  40b19c:	push   0xbcb78803
  40b1a1:	call   0x3e8ea2
  40b1a6:	push   edi
  40b1a7:	dec    esi
  40b1a8:	mov    esp,0x42e8
  40b1ad:	add    BYTE PTR [edi],dl
  40b1af:	dec    esi
  40b1b0:	enter  0xf4e8,0x50
  40b1b4:	(bad)  
  40b1b5:	push   DWORD PTR [edi]
  40b1b7:	dec    esi
  40b1b8:	shr    al,1
  40b1ba:	in     al,dx
  40b1bb:	push   eax
  40b1bc:	(bad)  
  40b1bd:	push   DWORD PTR [esi+0x580cc0c9]
  40b1c3:	in     eax,dx
  40b1c4:	mov    ch,ah
  40b1c6:	fstp   TBYTE PTR [esi-0x3a]
  40b1c9:	lea    eax,[eax]
  40b1cb:	add    BYTE PTR ds:0x2d684ee4,cl
  40b1d1:	push   esi
  40b1d2:	inc    ecx
  40b1d3:	add    BYTE PTR [ecx],dh
  40b1d5:	push   ecx
  40b1d6:	or     DWORD PTR [edx+0x31],ebp
  40b1d9:	push   ebx
  40b1da:	stc    
  40b1db:	inc    ecx
  40b1dc:	jo     0x40b189
  40b1de:	fidivr DWORD PTR [ebp-0x7afd5497]
  40b1e4:	icebp  
  40b1e5:	mov    dh,0x7a
  40b1e7:	mov    edi,0x8b02ab31
  40b1ec:	fs ja  0x40b26d
  40b1ef:	adc    DWORD PTR [eax+edi*8+0x20ee4fcb],esp
  40b1f6:	sar    dh,1
  40b1f8:	sub    DWORD PTR [edi+0x432ebf87],0x72
  40b1ff:	call   esi
  40b201:	stos   DWORD PTR es:[edi],eax
  40b202:	test   DWORD PTR [ecx+ecx*8-0x55],edi
  40b206:	add    DWORD PTR [ebp+ebx*4-0x9fffd55],eax
  40b20d:	jo     0x40b1c5
  40b20f:	push   DWORD PTR [esi-0xb38fd55]
  40b215:	add    al,BYTE PTR [eax+eax*1]
  40b218:	xor    DWORD PTR [ebx+0x238144c9],ebp
  40b21e:	add    al,0x0
  40b220:	xor    esi,esi
  40b222:	dec    eax
  40b223:	int3   
  40b224:	xor    DWORD PTR [ebx-0x5745fffe],ebp
  40b22a:	retf   0x238a
  40b22d:	dec    eax
  40b22e:	dec    ecx
  40b22f:	int3   
  40b230:	add    BYTE PTR [eax],al
  40b232:	loope  0x40b263
  40b234:	dec    ecx
  40b235:	rol    BYTE PTR [ecx],1
  40b237:	xchg   ecx,eax
  40b238:	add    edi,edi
  40b23a:	fsub   QWORD PTR [edx]
  40b23c:	rcl    DWORD PTR [ecx+0x2d],cl
  40b23f:	ret    0x74c2
  40b242:	std    
  40b243:	sub    DWORD PTR [ecx-0x34],edx
  40b246:	xor    BYTE PTR [eax+0x41],al
  40b249:	add    esp,0x26
  40b24c:	add    al,0x74
  40b24e:	not    DWORD PTR [ebx]
  40b250:	push   ecx
  40b251:	dec    ecx
  40b252:	repz push edx
  40b254:	jmp    0xc129582b
  40b259:	enter  0x146e,0xe9
  40b25d:	(bad)  
  40b25e:	fiadd  WORD PTR [edi-0xd]
  40b261:	imul   ebp,esi,0xb803e913
  40b267:	push   esi
  40b268:	mov    eax,ds:0x23d52fde
  40b26d:	mov    esp,0x3e8bcfe
  40b272:	test   BYTE PTR [esi-0x4f],0xd2
  40b276:	gs call 0xac7a0b11
  40b27c:	xchg   al,dl
  40b27e:	fistp  QWORD PTR [ebp+eax*4-0x295402a8]
  40b285:	cmp    esi,DWORD PTR [ecx]
  40b287:	adc    al,0x6a
  40b289:	push   eax
  40b28a:	jmp    0xc03ca7a2
  40b28f:	inc    esi
  40b290:	inc    ecx
  40b291:	fld    TBYTE PTR [esi]
  40b293:	dec    esp
  40b294:	jmp    0x9a40b29c
  40b299:	(bad)  
  40b29a:	popa   
  40b29b:	cmp    BYTE PTR [ecx+0x25d2fa88],ch
  40b2a1:	mov    esp,0x89293545
  40b2a6:	xchg   ebx,eax
  40b2a7:	iret   
  40b2a8:	mov    ebx,0x85583621
  40b2ad:	mov    esp,0xd169fb9a
  40b2b2:	in     al,dx
  40b2b3:	add    ebx,esp
  40b2b5:	mov    BYTE PTR [esi+eax*4],cl
  40b2b8:	jb     0x40b26d
  40b2ba:	mov    esi,0xaa8b2586
  40b2bf:	inc    esp
  40b2c0:	xor    DWORD PTR [esp+edi*2],edx
  40b2c3:	icebp  
  40b2c4:	outs   dx,DWORD PTR ds:[esi]
  40b2c5:	push   ss
  40b2c6:	jo     0x40b30d
  40b2c8:	lock adc eax,DWORD PTR [eax]
  40b2cb:	call   0x2f40c702
  40b2d0:	mov    cl,0x52
  40b2d2:	inc    ecx
  40b2d3:	jmp    0xa8a6c82d
  40b2d8:	pop    ebx
  40b2d9:	push   ss
  40b2da:	sub    DWORD PTR [edi+0xf83322f],0x35
  40b2e1:	inc    ecx
  40b2e2:	repz push 0x26
  40b2e5:	shr    DWORD PTR ds:0xf143528,1
  40b2eb:	ins    DWORD PTR es:[edi],dx
  40b2ec:	hlt    
  40b2ed:	mov    ebx,0xf8b5e9fe
  40b2f2:	rcl    bh,0x73
  40b2f5:	adc    al,0x0
  40b2f7:	out    dx,al
  40b2f8:	mov    dh,0xa9
  40b2fa:	(bad)  
  40b2fb:	call   0x9772b300
  40b300:	cmp    al,0xd4
  40b302:	cmp    edx,DWORD PTR [ebp+0x0]
  40b305:	jmp    0xea21433b
  40b30a:	xor    dl,BYTE PTR [edi+eax*8]
  40b30d:	sub    al,0xe1
  40b30f:	mov    ebx,0xd332e9fe
  40b314:	inc    esp
  40b315:	popa   
  40b316:	sub    eax,0x2fe90014
  40b31b:	push   eax
  40b31c:	cld    
  40b31d:	mov    ecx,0xb9f85027
  40b322:	cld    
  40b323:	adc    ebp,DWORD PTR [eax+0x1e]
  40b326:	out    dx,eax
  40b327:	push   esp
  40b328:	add    BYTE PTR [esi],bh
  40b32a:	xchg   ah,dl
  40b32c:	sub    eax,0xc00f32a8
  40b331:	fidiv  WORD PTR [esi+0x32e8ff81]
  40b337:	xchg   edi,eax
  40b338:	jl     0x40b35b
  40b33a:	xor    eax,0x2d45840b
  40b33f:	adc    al,0x0
  40b341:	push   0xffffffee
  40b343:	mov    bh,0xff
  40b345:	call   FWORD PTR [edi-0x6d]
  40b348:	mov    al,ds:0x8b175800
  40b34d:	jne    0x40b38b
  40b34f:	fiadd  WORD PTR [eax+0x56174800]
  40b355:	mov    edx,DWORD PTR [esi]
  40b357:	in     eax,0x74
  40b359:	sbb    BYTE PTR [edi-0x79000fae],bl
  40b35f:	les    ecx,FWORD PTR [ebp+0x4000045]
  40b365:	pop    edi
  40b366:	lea    eax,[edx+0x49]
  40b369:	adc    al,ch
  40b36b:	xlat   BYTE PTR ds:[ebx]
  40b36c:	push   esi
  40b36d:	adc    BYTE PTR [eax],al
  40b36f:	sar    eax,1
  40b371:	(bad)  
  40b372:	mov    esi,0xe0529102
  40b377:	push   0x41517d
  40b37c:	pop    edi
  40b37d:	push   edx
  40b37e:	in     al,0xc7
  40b380:	adc    eax,0xc8fffeb4
  40b385:	push   ss
  40b386:	lea    eax,[ebp-0x40]
  40b389:	push   es
  40b38a:	push   0x1
  40b38c:	and    dl,BYTE PTR [eax]
  40b38e:	push   0x0
  40b390:	dec    ebp
  40b391:	push   edx
  40b392:	loopne 0x40b3e4
  40b394:	xor    dl,BYTE PTR [eax]
  40b396:	lea    eax,[ebp+0x58]
  40b399:	pop    es
  40b39a:	call   DWORD PTR ds:0x411f45
  40b3a0:	xchg   ebx,eax
  40b3a1:	(bad)  
  40b3a2:	jb     0x40b3d1
  40b3a4:	or     ecx,DWORD PTR [edx-0x14]
  40b3a7:	add    ah,dl
  40b3a9:	jmp    0x40b362
  40b3ab:	add    DWORD PTR [eax+0x580b0016],ebx
  40b3b1:	arpl   WORD PTR [esi],dx
  40b3b3:	inc    ebp
  40b3b5:	mov    esi,0xe42075fd
  40b3ba:	jae    0x40b3a8
  40b3bc:	dec    edi
  40b3bd:	pop    ebp
  40b3be:	or     BYTE PTR [eax+0x31],ch
  40b3c1:	test   eax,0x149fef02
  40b3c6:	sti    
  40b3c7:	clc    
  40b3c8:	add    BYTE PTR [eax],al
  40b3ca:	push   esi
  40b3cb:	adc    eax,edx
  40b3cd:	je     0x40b42c
  40b3cf:	and    al,0x96
  40b3d1:	inc    esp
  40b3d2:	xor    DWORD PTR [ebp-0x3b1300d0],ebp
  40b3d8:	add    ch,0x2d
  40b3db:	cs push ecx
  40b3dd:	clc    
  40b3de:	xor    DWORD PTR [edi-0x3],ebx
  40b3e1:	and    BYTE PTR [edi-0x55],0xfd
  40b3e5:	test   BYTE PTR [esi+0x16fececa],cl
  40b3eb:	stc    
  40b3ec:	iret   
  40b3ed:	(bad)  
  40b3ee:	and    al,0x70
  40b3f0:	sbb    eax,0xbd213141
  40b3f5:	shl    DWORD PTR ds:0x58b37ab,0x2f
  40b3fc:	enter  0x5bf7,0xab
  40b400:	pop    eax
  40b401:	das    
  40b402:	out    0x18,al
  40b404:	cld    
  40b405:	out    0x90,eax
  40b407:	sbb    al,0xcf
  40b409:	(bad)  
  40b40a:	test   al,0xe8
  40b40c:	iret   
  40b40d:	jg     0x40b41b
  40b40f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b410:	inc    eax
  40b411:	inc    ecx
  40b412:	xor    DWORD PTR [ebx-0x23b6d6a9],ebp
  40b418:	inc    eax
  40b419:	inc    ecx
  40b41a:	xor    ebx,esp
  40b41c:	mov    eax,0xdaaaf040
  40b421:	in     al,0x27
  40b423:	(bad)  
  40b424:	iret   
  40b425:	test   BYTE PTR [ecx-0x21],dh
  40b428:	sub    ebp,DWORD PTR [eax+0x24]
  40b42b:	ins    DWORD PTR es:[edi],dx
  40b42c:	inc    ebx
  40b42d:	add    BYTE PTR [eax],al
  40b42f:	add    BYTE PTR [ecx],bl
  40b431:	inc    edi
  40b432:	inc    ebp
  40b433:	inc    ecx
  40b434:	xor    DWORD PTR [ebx-0x4e],edx
  40b437:	jge    0x40b4b7
  40b439:	jmp    0x44ab:0x142504c5
  40b440:	xor    DWORD PTR [ebx],edx
  40b442:	push   0x11
  40b444:	inc    eax
  40b445:	push   esi
  40b446:	test   al,0x3
  40b448:	xor    DWORD PTR [eax-0x2d],eax
  40b44b:	(bad)  
  40b44c:	in     eax,dx
  40b44d:	mov    ebx,0x143103e8
  40b452:	rol    bl,cl
  40b454:	mul    BYTE PTR [ebx-0x67]
  40b457:	and    ch,0xbb
  40b45a:	call   0x3145:0x2b231dce
  40b461:	(bad)
  40b465:	lods   eax,DWORD PTR ds:[esi]
  40b466:	test   BYTE PTR [edx+0x58e8bc9d],0x33
  40b46d:	lods   eax,DWORD PTR ds:[esi]
  40b46e:	fmulp  st(6),st
  40b470:	test   DWORD PTR [ebp+edi*4+0x3aac3958],edi
  40b477:	retf   
  40b478:	(bad)  
  40b479:	mov    eax,0x8cf93861
  40b47e:	cli    
  40b47f:	into   
  40b480:	gs mov esp,0xb939319d
  40b486:	sbb    edi,esp
  40b488:	(bad)  
  40b489:	dec    ebp
  40b48a:	mov    esi,cs
  40b48c:	xlat   BYTE PTR ds:[ebx]
  40b48d:	mov    eax,0xecd6fbfb
  40b492:	jle    0x40b462
  40b494:	add    BYTE PTR [eax],al
  40b496:	(bad)  
  40b497:	mov    eax,0x3ebfcffb
  40b49c:	loope  0x40b479
  40b49e:	bound  eax,QWORD PTR [ebx+0x66]
  40b4a1:	into   
  40b4a2:	jns    0x40b479
  40b4a4:	in     al,0x3
  40b4a6:	cld    
  40b4a7:	mov    WORD PTR [edx+eax*4+0x72],es
  40b4ab:	ret    
  40b4ac:	mov    dh,0x36
  40b4ae:	add    cl,BYTE PTR [ebp+0x1577ff9b]
  40b4b4:	jmp    0x54e5bc
  40b4b9:	(bad)  ss:[ebx]
  40b4bc:	call   0x54a32e
  40b4c1:	push   0x7a
  40b4c3:	adc    esi,DWORD PTR [edi-0x10]
  40b4c6:	dec    ebx
  40b4c7:	aam    0x5a
  40b4c9:	mov    dh,0xc
  40b4cb:	retf   
  40b4cc:	shl    ecx,0x32
  40b4cf:	jecxz  0x40b4b8
  40b4d1:	jb     0x40b4dc
  40b4d3:	or     BYTE PTR [ecx+0xee0cbeb],cl
  40b4d9:	imul   ecx,DWORD PTR [eax-0x44160148],0x3f
  40b4e0:	or     BYTE PTR [edx+0x7e],dh
  40b4e3:	or     al,0xeb
  40b4e5:	inc    ebx
  40b4e6:	(bad)  
  40b4e7:	mov    eax,DWORD PTR ds:0x71e80169
  40b4ed:	jecxz  0x40b4a1
  40b4ef:	mov    ebx,0x94363e38
  40b4f4:	jmp    0x40b4ef
  40b4f6:	jmp    0xf63515
  40b4fb:	add    BYTE PTR [edx+0x42],dh
  40b4fe:	or     eax,0x7751e169
  40b503:	icebp  
  40b504:	mov    dl,0xab
  40b506:	inc    eax
  40b507:	imul   edi,ecx,0x39e0eb0d
  40b50d:	aam    0x5a
  40b50f:	cs pop es
  40b511:	int    0xc1
  40b513:	icebp  
  40b514:	xor    bh,al
  40b516:	das    
  40b517:	sti    
  40b518:	retf   0x38fb
  40b51b:	(bad)  
  40b51c:	ss call 0xfbfd3751
  40b522:	inc    eax
  40b523:	fld    TBYTE PTR [eax+0x2cd645fb]
  40b529:	call   0xaad9a26e
  40b52e:	or     BYTE PTR [edx],al
  40b530:	ins    DWORD PTR es:[edi],dx
  40b531:	pop    edx
  40b532:	pop    edi
  40b533:	add    dh,dl
  40b535:	jp     0x40b4f7
  40b537:	or     BYTE PTR [eax-0x6dfb212d],bl
  40b53d:	iret   
  40b53e:	test   al,0x4b
  40b540:	or     ecx,esi
  40b542:	add    BYTE PTR [ebx],cl
  40b544:	repz pop esi
  40b546:	mov    ds:0xfdb78d8b,al
  40b54b:	xor    bh,dl
  40b54d:	dec    esi
  40b54e:	clc    
  40b54f:	(bad)  
  40b550:	mov    ebp,0x34458dbb
  40b555:	rol    DWORD PTR [ebx-0xc],1
  40b558:	pop    eax
  40b559:	adc    eax,DWORD PTR [eax]
  40b55b:	add    bl,cl
  40b55d:	push   es
  40b55e:	xor    eax,0x89000029
  40b563:	adc    eax,DWORD PTR [eax]
  40b565:	je     0x40b5d5
  40b567:	aaa    
  40b568:	inc    esp
  40b569:	lock push 0x86a015a
  40b56f:	pop    ebp
  40b570:	add    BYTE PTR [edx+0x8],ch
  40b573:	pop    ebp
  40b574:	add    BYTE PTR [ebp-0xb137a3],cl
  40b57a:	fstp   QWORD PTR ds:0xbc084129
  40b580:	mov    esi,0x7b940274
  40b585:	hlt    
  40b586:	fcomp  DWORD PTR [esi+0x34]
  40b589:	mov    ecx,DWORD PTR ds:0xb84d8b14
  40b58f:	or     ecx,DWORD PTR [eax]
  40b591:	ja     0x40b585
  40b593:	(bad)  
  40b594:	mov    DWORD PTR [ebp+0x4c],esi
  40b597:	cmp    al,0x7c
  40b599:	or     BYTE PTR [ebx-0xa],al
  40b59c:	out    dx,eax
  40b59d:	jecxz  0x40b569
  40b59f:	jecxz  0x40b543
  40b5a1:	mov    ecx,DWORD PTR ds:0x875ff14
  40b5a7:	cmp    bh,bh
  40b5a9:	(bad)  
  40b5aa:	jge    0x40b58a
  40b5ac:	out    0xe3,al
  40b5ae:	xor    DWORD PTR [edx+0x2],ebp
  40b5b1:	add    cl,bl
  40b5b3:	stos   DWORD PTR es:[edi],eax
  40b5b4:	add    al,BYTE PTR [eax]
  40b5b6:	xor    DWORD PTR [edx+0x2b],esi
  40b5b9:	pop    esi
  40b5ba:	js     0x40b5a6
  40b5bc:	cli    
  40b5bd:	dec    DWORD PTR [ebx-0x13]
  40b5c0:	daa    
  40b5c1:	pop    edi
  40b5c2:	xlat   BYTE PTR ds:[ebx]
  40b5c3:	repz rol BYTE PTR [edi],0x0
  40b5c7:	add    BYTE PTR [ecx],dh
  40b5c9:	js     0x40b642
  40b5cb:	jmp    0x40b57f
  40b5cd:	lock ret 0x3167
  40b5d1:	int    0x2
  40b5d3:	add    BYTE PTR [ecx+0x45],cl
  40b5d6:	push   ecx
  40b5d7:	dec    DWORD PTR [esi+0x43]
  40b5da:	inc    esi
  40b5db:	cld    
  40b5dc:	fldcw  WORD PTR [edx+eiz*1-0x6eeacf00]
  40b5e3:	jno    0x40b61b
  40b5e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b5e6:	js     0x40b62c
  40b5e8:	sub    DWORD PTR [esp+eax*1+0x20],esp
  40b5ec:	xor    DWORD PTR [ebx-0x215c5b26],ebp
  40b5f2:	retf   0x6c88
  40b5f5:	fistp  WORD PTR [ebx+0x0]
  40b5f8:	push   ecx
  40b5f9:	stos   DWORD PTR es:[edi],eax
  40b5fa:	add    ch,al
  40b5fc:	test   eax,0xa8fecaf9
  40b601:	call   0xb721dd9
  40b606:	add    al,0x0
  40b608:	fld    DWORD PTR [edx+0x56]
  40b60b:	jmp    esi
  40b60d:	inc    esp
  40b60e:	inc    ecx
  40b60f:	in     al,dx
  40b610:	dec    ecx
  40b611:	stos   DWORD PTR es:[edi],eax
  40b612:	and    al,BYTE PTR [eax]
  40b614:	xor    DWORD PTR [ebx-0x71318db7],edx
  40b61a:	jl     0x40b660
  40b61c:	fldenv [ebx]
  40b61e:	add    al,0x20
  40b620:	xor    DWORD PTR [ebx+0x264370da],ebp
  40b626:	retf   
  40b627:	mov    ah,dh
  40b629:	adc    ecx,DWORD PTR [ebp-0x35]
  40b62c:	add    BYTE PTR [eax],al
  40b62e:	sbb    eax,0xf3efd124
  40b633:	push   edx
  40b634:	jmp    0x40f8d403
  40b639:	jnp    0x40b62d
  40b63b:	adc    ebp,ecx
  40b63d:	xchg   BYTE PTR [edx+0x8],dh
  40b640:	ds push ecx
  40b642:	and    DWORD PTR [esi+ecx*1],ebp
  40b645:	inc    edi
  40b646:	lock adc ebp,DWORD PTR [esi]
  40b649:	push   ecx
  40b64a:	imul   ebp,DWORD PTR [esp+eiz*4+0x6a14313f],0x9bb52ac0
  40b655:	repz into 
  40b657:	imul   DWORD PTR [ecx+0x7bb53144]
  40b65d:	iret   
  40b65e:	dec    esi
  40b65f:	sub    esp,DWORD PTR [ebp+0x2c913103]
  40b665:	clc    
  40b666:	aaa    
  40b667:	aas    
  40b668:	fstp   DWORD PTR [ebx-0x76]
  40b66b:	push   ecx
  40b66c:	sub    BYTE PTR [esi+eiz*1],al
  40b66f:	aas    
  40b670:	(bad)  
  40b672:	test   BYTE PTR [eax-0x17],dl
  40b675:	add    esi,DWORD PTR [edx-0x7a352331]
  40b67b:	and    al,0x51
  40b67d:	pop    edx
  40b67e:	jb     0x40b6d3
  40b680:	jmp    0xc0e93c4f
  40b685:	inc    esi
  40b686:	ins    DWORD PTR es:[edi],dx
  40b687:	adc    al,0xe9
  40b689:	xchg   dl,dh
  40b68b:	pop    es
  40b68c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b68d:	push   eax
  40b68e:	xor    eax,0x46652c
  40b693:	add    BYTE PTR [eax+0x14],dh
  40b696:	xchg   esi,eax
  40b697:	push   eax
  40b698:	leave  
  40b699:	stos   DWORD PTR es:[edi],eax
  40b69a:	fdivr  DWORD PTR [edi]
  40b69c:	xor    DWORD PTR [edx+ebp*2],edx
  40b69f:	mov    edi,0xf3f3b53a
  40b6a4:	push   esi
  40b6a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b6a6:	jmp    FWORD PTR [ecx]
  40b6a8:	ins    BYTE PTR es:[edi],dx
  40b6a9:	adc    al,0xff
  40b6ab:	hlt    
  40b6ac:	mov    gs,WORD PTR [esp+ebx*1-0x7cebcd53]
  40b6b3:	and    eax,0x56002aa6
  40b6b8:	add    DWORD PTR [eax-0x4a792b02],edi
  40b6be:	xor    al,0x9a
  40b6c0:	and    eax,0xc3510053
  40b6c5:	inc    eax
  40b6c6:	push   DWORD PTR [esi]
  40b6c8:	cmc    
  40b6c9:	dec    edi
  40b6ca:	loopne 0x40b68f
  40b6cc:	xor    dh,BYTE PTR [ebp+0x3f7b2174]
  40b6d2:	or     al,0x1e
  40b6d4:	inc    ecx
  40b6d5:	popa   
  40b6d6:	sub    DWORD PTR [eax-0x6a3f53ce],ebp
  40b6dc:	jnp    0x40b693
  40b6de:	mov    BYTE PTR [esi+ecx*4-0x1101ffd6],ch
  40b6e5:	mov    edi,0xb53e7cfe
  40b6ea:	xor    al,0x9a
  40b6ec:	dec    ebp
  40b6ed:	push   ebp
  40b6ee:	add    cl,dl
  40b6f0:	les    esp,FWORD PTR [edi]
  40b6f2:	(bad)  
  40b6f3:	ficomp WORD PTR [edx+0x43d858]
  40b6f9:	add    BYTE PTR ds:0xf8d974b3,ch
  40b6ff:	sub    al,ch
  40b701:	(bad)  
  40b702:	ss inc edi
  40b704:	sub    DWORD PTR [eax],ebp
  40b706:	xor    eax,0xe83d94bc
  40b70b:	mov    dl,0x88
  40b70d:	and    al,0xa1
  40b70f:	cmp    eax,0xc076a600
  40b714:	(bad)  
  40b715:	adc    al,0xfd
  40b717:	mov    dl,0x34
  40b719:	cmp    bh,BYTE PTR [edx]
  40b71b:	push   ebp
  40b71c:	add    BYTE PTR [ecx+0xff2878],al
  40b722:	scas   eax,DWORD PTR es:[edi]
  40b723:	das    
  40b724:	inc    esp
  40b725:	ror    BYTE PTR [ebp-0xd],1
  40b728:	mov    edi,0xe4633f50
  40b72d:	jmp    DWORD PTR [ebp-0x14ca0255]
  40b733:	push   cs
  40b734:	inc    ecx
  40b735:	add    BYTE PTR [eax],al
  40b737:	xor    eax,0x2effff74
  40b73c:	inc    esp
  40b73d:	int3   
  40b73e:	sbb    ebx,DWORD PTR [ebx-0x20]
  40b741:	add    BYTE PTR [edi+0x33],bh
  40b744:	mov    dh,0x0
  40b746:	mov    BYTE PTR [edi],dl
  40b748:	cmp    DWORD PTR [ebp+0x14],0x18
  40b74c:	je     0x40cf3f
  40b752:	fistp  DWORD PTR [edx-0x30]
  40b755:	add    BYTE PTR [edi+0x33],cl
  40b758:	mov    ds:0x8d174800,al
  40b75d:	inc    ebp
  40b75e:	add    BYTE PTR [eax],al
  40b760:	adc    al,0xe8
  40b762:	(bad)  
  40b763:	jne    0x40b789
  40b765:	ror    BYTE PTR [esi-0x3],1
  40b768:	aas    
  40b769:	fmul   QWORD PTR [ecx]
  40b76b:	ror    BYTE PTR [edi+0x33],0x8e
  40b76f:	add    BYTE PTR [eax],bl
  40b771:	pop    ss
  40b772:	cmp    DWORD PTR [ebp-0x2c],0x16
  40b776:	je     0x40cf11
  40b77c:	(bad)  
  40b77d:	repnz (bad) 
  40b77f:	push   eax
  40b780:	jmp    DWORD PTR [ecx-0x30]
  40b783:	call   0x3e9192
  40b788:	add    edx,edi
  40b78a:	jb     0x40b801
  40b78c:	mov    ebx,DWORD PTR [edx-0x38]
  40b78f:	add    BYTE PTR [ecx*2-0x3427ef98],ah
  40b796:	mov    esp,0xe6b045ff
  40b79b:	jbe    0x40b7ce
  40b79d:	sbb    cl,cl
  40b79f:	dec    dh
  40b7a1:	pop    es
  40b7a2:	in     al,0xfe
  40b7a4:	cmp    al,0xa5
  40b7a6:	fcmove st,st(4)
  40b7a8:	dec    esp
  40b7a9:	xor    cl,al
  40b7ab:	(bad)  
  40b7ac:	cmp    al,0x89
  40b7ae:	(bad)  
  40b7af:	je     0x40b7ea
  40b7b1:	xchg   ebp,eax
  40b7b2:	les    ebp,FWORD PTR [esi+eiz*4+0x39]
  40b7b6:	enter  0x7974,0x51
  40b7ba:	dec    esi
  40b7bb:	or     BYTE PTR [ecx-0x7100aa6f],cl
  40b7c1:	popa   
  40b7c2:	dec    esi
  40b7c3:	les    eax,FWORD PTR [eax]
  40b7c5:	add    BYTE PTR [esi+0x4feae6f],al
  40b7cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b7cc:	fidivr DWORD PTR [esp+eax*1-0x16]
  40b7d0:	(bad)  
  40b7d1:	(bad)  
  40b7d2:	in     al,0xf4
  40b7d4:	(bad)  
  40b7d5:	je     0x40b758
  40b7d7:	stc    
  40b7d8:	dec    ebp
  40b7d9:	or     BYTE PTR [ecx-0x5f],cl
  40b7dc:	push   ebp
  40b7dd:	call   DWORD PTR [esi+0x3d]
  40b7e0:	inc    esi
  40b7e1:	int3   
  40b7e2:	xor    DWORD PTR [ecx-0x33b7d13],ecx
  40b7e8:	(bad)  
  40b7e9:	je     0x40b819
  40b7eb:	es ds int3 
  40b7ee:	ss ins BYTE PTR es:[edi],dx
  40b7f0:	(bad)  
  40b7f1:	je     0x40b82c
  40b7f3:	adc    esp,DWORD PTR [ebx]
  40b7f5:	ins    DWORD PTR es:[edi],dx
  40b7f6:	es mov ebx,0xbb8b09da
  40b7fc:	lds    esi,FWORD PTR [ecx+ebp*1-0x2d]
  40b800:	out    dx,eax
  40b801:	ins    BYTE PTR es:[edi],dx
  40b802:	push   cs
  40b803:	jecxz  0x40b7cb
  40b805:	je     0x40b80c
  40b807:	les    eax,FWORD PTR [edx-0x398d0191]
  40b80d:	je     0x40b808
  40b80f:	ror    DWORD PTR [edx+0x70],cl
  40b812:	out    dx,al
  40b813:	add    dh,0x74
  40b816:	fst    QWORD PTR [ecx+edx*4]
  40b819:	push   ebx
  40b81a:	popa   
  40b81b:	mov    cl,0x9d
  40b81d:	(bad)  
  40b81e:	pop    ebp
  40b81f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b820:	sbb    BYTE PTR [ebx+0x41],0xb1
  40b824:	(bad)  
  40b825:	(bad)  
  40b826:	cmp    eax,0x6390c0
  40b82b:	add    BYTE PTR [ecx-0x4f],al
  40b82e:	jge    0x40b7f7
  40b830:	cmp    eax,0x212b80bc
  40b835:	mov    cl,0x6d
  40b837:	(bad)  
  40b838:	sbb    eax,0x213350b8
  40b83d:	mov    cl,0x5d
  40b83f:	(bad)  
  40b840:	sbb    eax,0x13b40b4
  40b845:	mov    cl,0x4d
  40b847:	(bad)  
  40b848:	std    
  40b849:	iret   
  40b84a:	push   eax
  40b84b:	inc    ebx
  40b84c:	add    DWORD PTR [ecx-0x340238c3],esi
  40b852:	inc    eax
  40b853:	or     esp,ecx
  40b855:	mov    al,0x2d
  40b857:	(bad)  
  40b858:	ffree  st(7)
  40b85a:	adc    BYTE PTR [ebx],dl
  40b85c:	loope  0x40b80e
  40b85e:	sbb    eax,0xc3ddc7
  40b863:	sbb    eax,ecx
  40b865:	mov    al,0xd
  40b867:	(bad)  
  40b868:	mov    ebp,0xc12310df
  40b86d:	mov    al,0xfd
  40b86f:	mov    esp,0x30e92070
  40b874:	mov    edx,0xec067bf
  40b879:	test   eax,0x56adc6e5
  40b87e:	fnsave [ebx]
  40b880:	push   ss
  40b881:	daa    
  40b882:	in     eax,0xc6
  40b884:	inc    ebp
  40b885:	inc    ebp
  40b886:	add    BYTE PTR [ebp+0x31],al
  40b889:	mov    esp,0x1431424c
  40b88e:	bnd ret 
  40b890:	add    BYTE PTR [eax],al
  40b892:	daa    
  40b893:	xchg   edi,eax
  40b894:	(bad)  
  40b895:	fdiv   QWORD PTR ds:0x71a60014
  40b89b:	lods   al,BYTE PTR ds:[esi]
  40b89c:	(bad)  
  40b89d:	call   0x2507ccd4
  40b8a2:	add    DWORD PTR [edx+0x3e32e906],esi
  40b8a8:	add    BYTE PTR [ebx],al
  40b8aa:	sub    eax,0x3513003e
  40b8af:	lahf   
  40b8b0:	inc    esp
  40b8b1:	jne    0x40b8b5
  40b8b3:	lahf   
  40b8b4:	test   BYTE PTR [ecx+0x7f],bh
  40b8b7:	mov    cl,0xfe
  40b8b9:	sbb    DWORD PTR [esi+0x27],ebp
  40b8bc:	clc    
  40b8bd:	add    WORD PTR [eax+0x13f317e7],si
  40b8c4:	add    dl,ah
  40b8c6:	jb     0x40b8ec
  40b8c8:	add    eax,0xfeb0d740
  40b8cd:	jmp    0xa86890ac
  40b8d2:	xor    dh,BYTE PTR [ecx+0x4b8ae574]
  40b8d8:	jae    0x40b908
  40b8da:	outs   dx,DWORD PTR ds:[esi]
  40b8db:	pusha  
  40b8dc:	mov    edi,DWORD PTR [ecx]
  40b8de:	fst    DWORD PTR [edi-0x4e90e911]
  40b8e4:	dec    edi
  40b8e5:	mov    ebx,0xe735b6a
  40b8ea:	outs   dx,DWORD PTR ds:[esi]
  40b8eb:	fwait
  40b8ec:	test   BYTE PTR [ecx],dl
  40b8ee:	outs   dx,DWORD PTR ds:[esi]
  40b8ef:	mov    cl,0xfe
  40b8f1:	adc    edi,ecx
  40b8f3:	inc    ecx
  40b8f4:	push   esi
  40b8f6:	add    BYTE PTR [eax],al
  40b8f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b8f9:	pop    eax
  40b8fa:	lock cdq 
  40b8fc:	mov    bl,BYTE PTR [ebx+eax*2]
  40b8ff:	sub    BYTE PTR ds:0xe4d1b4af,dh
  40b905:	scas   al,BYTE PTR es:[edi]
  40b906:	(bad)  
  40b907:	(bad)  
  40b908:	ds inc ebx
  40b90a:	sub    DWORD PTR [eax],ebp
  40b90c:	sub    eax,0x3a009cbc
  40b911:	fscale 
  40b913:	mov    DWORD PTR [ebp-0x58000a34],ecx
  40b919:	xchg   ebp,eax
  40b91a:	mov    ebx,0xfdd99fec
  40b91f:	add    BYTE PTR [edx+edi*8],bh
  40b922:	cmp    BYTE PTR [ebp-0x48],0x14
  40b926:	jne    0x40b971
  40b928:	push   ebx
  40b929:	das    
  40b92a:	jmp    0x40b923
  40b92c:	mov    bh,0xd9
  40b92e:	std    
  40b92f:	xor    BYTE PTR [edi+0x2f],al
  40b932:	jmp    0x40b92b
  40b934:	aaa    
  40b935:	fnstcw WORD PTR [edi-0x43]
  40b938:	mov    ah,0xe1
  40b93a:	std    
  40b93b:	push   DWORD PTR [eax+0x7e000015]
  40b941:	lods   eax,DWORD PTR ds:[esi]
  40b942:	lds    eax,FWORD PTR [ebp-0x21f1c]
  40b948:	lock adc al,0x0
  40b94b:	add    bl,dh
  40b94d:	mov    ecx,0xe0e48dfd
  40b952:	std    
  40b953:	push   DWORD PTR [edi]
  40b955:	lahf   
  40b956:	jmp    0xb5:0xfdd927f7
  40b95d:	add    al,dh
  40b95f:	loopne 0x40b95e
  40b961:	call   DWORD PTR [edi]
  40b963:	pop    edi
  40b964:	or     al,ch
  40b966:	nop
  40b967:	xlat   BYTE PTR ds:[ebx]
  40b968:	std    
  40b969:	(bad)  
  40b96a:	fist   DWORD PTR [esi-0x26c80816]
  40b970:	(bad)  
  40b971:	je     0x40b988
  40b973:	fnstenv [ebx-0x227c014]
  40b979:	call   0x400182
  40b97e:	pop    ss
  40b97f:	sahf   
  40b980:	jmp    0x6711:0xe6d817f7
  40b987:	fscale 
  40b989:	push   DWORD PTR [ecx]
  40b98b:	nop
  40b98c:	(bad)  
  40b98e:	push   es
  40b98f:	faddp  st(3),st
  40b991:	je     0x40b9bc
  40b993:	(bad)
  40b996:	imul   BYTE PTR [ebp-0x3d]
  40b999:	mov    ah,0xd9
  40b99b:	ins    DWORD PTR es:[edi],dx
  40b99c:	ret    
  40b99d:	(bad)  
  40b99e:	fldenv [esp+edx*2-0x1]
  40b9a2:	fidiv  WORD PTR [ebp+0x3d]
  40b9a5:	clc    
  40b9a6:	enter  0xc471,0xfe
  40b9aa:	into   
  40b9ab:	test   DWORD PTR [ebp-0x4],ecx
  40b9ae:	fsqrt  
  40b9b0:	inc    edx
  40b9b1:	add    BYTE PTR [ecx],dh
  40b9b3:	rol    BYTE PTR fs:[edi],0x31
  40b9b7:	or     BYTE PTR [ecx-0x15],bh
  40b9ba:	mov    dl,0x80
  40b9bc:	(bad)  
  40b9bd:	imul   esi,DWORD PTR [ecx],0xff1413
  40b9c3:	add    BYTE PTR [eiz*4+0x4e0509da],ah
  40b9ca:	les    ecx,FWORD PTR [eax-0xda4b70c]
  40b9d0:	repz jnp 0x40b9d5
  40b9d3:	inc    DWORD PTR [eiz*4-0x12885d26]
  40b9da:	ret    
  40b9db:	(bad)  
  40b9dc:	in     al,0xe8
  40b9de:	ret    
  40b9df:	je     0x40ba1a
  40b9e1:	push   ebp
  40b9e2:	push   cs
  40b9e3:	ins    BYTE PTR es:[edi],dx
  40b9e4:	pop    esi
  40b9e5:	cmc    
  40b9e6:	mov    ecx,0x2dbd2dc1
  40b9eb:	mov    ebx,DWORD PTR [ebp+0x39]
  40b9ee:	mov    edi,0x5865dffb
  40b9f3:	add    bl,cl
  40b9f5:	imul   eax,ebx,0x74
  40b9f8:	sub    DWORD PTR ds:0xa72e6aac,eax
  40b9fe:	js     0x40ba44
  40ba00:	and    eax,0x496c0e33
  40ba05:	adc    al,0x28
  40ba07:	add    al,0xaa
  40ba09:	out    dx,eax
  40ba0a:	pop    eax
  40ba0b:	in     al,dx
  40ba0c:	jno    0x40ba22
  40ba0e:	imul   eax,DWORD PTR [ebx],0x2c242831
  40ba14:	rcl    BYTE PTR [ecx+0x28],cl
  40ba17:	add    al,0x5e
  40ba19:	mov    esp,0x143144dc
  40ba1e:	loop   0x40b9e3
  40ba20:	bound  ecx,QWORD PTR ds:0x2c1fac17
  40ba26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba27:	ret    
  40ba28:	add    BYTE PTR [eax],al
  40ba2a:	data16 cmp al,0xe9
  40ba2d:	add    ebx,esi
  40ba2f:	outs   dx,BYTE PTR ds:[esi]
  40ba30:	add    BYTE PTR [ecx+0x73],dh
  40ba33:	push   ebx
  40ba34:	jmp    0xf168788c
  40ba39:	stos   DWORD PTR es:[edi],eax
  40ba3a:	add    DWORD PTR [ecx+0x4f96c37d],eax
  40ba40:	pop    es
  40ba41:	ret    
  40ba42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba43:	mov    ecx,0xeeb149e7
  40ba48:	call   0x5d975585
  40ba4d:	test   esi,0x87c3556b
  40ba53:	lods   eax,DWORD PTR ds:[esi]
  40ba54:	pop    edx
  40ba55:	jb     0x40ba9d
  40ba57:	adc    eax,0x27777ebc
  40ba5c:	cmp    eax,0x411be5c3
  40ba61:	jge    0x40ba3e
  40ba63:	lods   al,BYTE PTR ds:[esi]
  40ba64:	sub    eax,0x2adaff63
  40ba69:	or     BYTE PTR [ecx],dh
  40ba6b:	inc    edi
  40ba6c:	jb     0x40ba1e
  40ba6e:	mov    bl,0xd8
  40ba70:	adc    BYTE PTR [edi+0x6e],dl
  40ba73:	push   edi
  40ba74:	adc    DWORD PTR [ecx+esi*1],eax
  40ba77:	adc    al,0xe9
  40ba79:	retf   0xafed
  40ba7c:	call   0x54eb84
  40ba81:	bound  edi,QWORD PTR [eax+0x20]
  40ba84:	xor    DWORD PTR [ecx+0x12092732],0xffffffed
  40ba8b:	stc    
  40ba8c:	rol    DWORD PTR [edx+0x0],1
  40ba8f:	add    ah,bh
  40ba91:	ror    BYTE PTR [ebx],cl
  40ba93:	jmp    0xe940cf1f
  40ba98:	xor    bh,BYTE PTR [ecx+0x4716a60]
  40ba9e:	add    BYTE PTR ds:0xd9449938,dh
  40baa4:	mov    ch,0x4
  40baa6:	push   DWORD PTR [ecx+eax*2]
  40baa9:	lods   eax,DWORD PTR ds:[esi]
  40baaa:	je     0x40ba9d
  40baac:	mov    bl,ch
  40baae:	addr16 sahf 
  40bab0:	repz xchg ecx,eax
  40bab2:	cli    
  40bab3:	loopne 0x40babe
  40bab5:	pop    ss
  40bab6:	or     DWORD PTR [edi*2-0x37e6ba47],esp
  40babd:	sub    eax,0x1b737eff
  40bac2:	inc    ebp
  40bac3:	jno    0x40bacf
  40bac5:	jnp    0x40bb46
  40bac7:	jmp    0xebb5cefe
  40bacc:	(bad)  
  40bacd:	loope  0x40ba51
  40bacf:	bound  edi,QWORD PTR [edx]
  40bad1:	daa    
  40bad2:	adc    eax,0x8aabf962
  40bad7:	mov    ah,0xbe
  40bad9:	sbb    eax,0xd32a2ba4
  40bade:	fcomip st,st(1)
  40bae0:	mov    ebp,0x960f857
  40bae5:	mov    al,0xea
  40bae7:	fisubr DWORD PTR [edi-0x68d07a9]
  40baed:	scas   eax,DWORD PTR es:[edi]
  40baee:	push   cs
  40baef:	inc    ebp
  40baf0:	je     0x40bb07
  40baf2:	ror    DWORD PTR [ecx],0x0
  40baf5:	add    BYTE PTR [ebx],bh
  40baf7:	fwait
  40baf8:	inc    esp
  40baf9:	adc    DWORD PTR [ebp-0x74ff03b9],ebp
  40baff:	xchg   ebp,eax
  40bb00:	stc    
  40bb01:	or     DWORD PTR [esi+0xc458989],esp
  40bb07:	xchg   ebx,eax
  40bb08:	add    BYTE PTR ss:[ebp+0x43c02b1d],ah
  40bb0f:	ret    0x6e9
  40bb12:	adc    DWORD PTR [ebx-0x8],0xffffff8b
  40bb16:	inc    ebp
  40bb17:	aam    0x59
  40bb19:	leave  
  40bb1a:	retf   0x4
  40bb1d:	push   ebp
  40bb1e:	and    DWORD PTR [ecx+eax*4-0x3c],0xffffffa4
  40bb23:	aaa    
  40bb24:	mov    ds:0x39101966,eax
  40bb29:	inc    ebp
  40bb2a:	cld    
  40bb2b:	in     eax,dx
  40bb2c:	add    eax,0xc0df882b
  40bb31:	adc    al,bl
  40bb33:	aam    0x33
  40bb35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb36:	ss push edi
  40bb38:	add    al,ch
  40bb3a:	das    
  40bb3b:	sti    
  40bb3c:	(bad)  
  40bb3d:	inc    DWORD PTR [ecx+0x53]
  40bb40:	clc    
  40bb41:	lea    edx,[ebp-0x2c]
  40bb44:	dec    esi
  40bb45:	call   0x3fb736
  40bb4a:	pavgw  mm2,QWORD PTR [ebx]
  40bb4d:	push   DWORD PTR [ebp+0x1b]
  40bb50:	push   DWORD PTR [ebp+0x10]
  40bb53:	aad    0x73
  40bb55:	or     al,dh
  40bb57:	inc    WORD PTR ds:[eax]
  40bb5b:	add    bh,ch
  40bb5d:	sbb    al,al
  40bb5f:	(bad)  
  40bb61:	ds (bad) 
  40bb63:	call   FWORD PTR [eax-0x2c]
  40bb66:	jae    0x40bb74
  40bb68:	pop    ds
  40bb69:	jecxz  0x40bb62
  40bb6b:	jmp    DWORD PTR [ebp-0x5a061995]
  40bb71:	aam    0xfd
  40bb73:	mov    edx,DWORD PTR [ebp+0x31453b1b]
  40bb79:	lods   eax,DWORD PTR ds:[esi]
  40bb7a:	jae    0x437915
  40bb80:	sub    BYTE PTR ss:[edi],dl
  40bb83:	jmp    DWORD PTR [ebp+eiz*4-0x5d715e56]
  40bb8a:	mov    edi,0xaba17488
  40bb8f:	jae    0x40bba7
  40bb91:	loopne 0x40bb4a
  40bb93:	sub    ah,bl
  40bb95:	and    eax,0x17fef446
  40bb9a:	push   0xbbd7065
  40bb9f:	sar    BYTE PTR [ebp-0x41],cl
  40bba2:	stos   DWORD PTR es:[edi],eax
  40bba3:	addr16 pop ebx
  40bba5:	mov    ebp,0xb55cff52
  40bbaa:	stos   BYTE PTR es:[edi],al
  40bbab:	mov    BYTE PTR [ebp+0x7a],dl
  40bbae:	mov    edi,0xbfa95cfe
  40bbb3:	je     0x40bbee
  40bbb5:	test   DWORD PTR [ebx],esi
  40bbb7:	mov    BYTE PTR [bx+di+0x548b],0x25
  40bbbd:	ds std 
  40bbbf:	inc    DWORD PTR [eax]
  40bbc1:	add    BYTE PTR ds:0xb847abbf,bh
  40bbc7:	out    dx,eax
  40bbc8:	mov    bh,0x8a
  40bbca:	xor    al,0x59
  40bbcc:	sub    DWORD PTR [ecx+0x31],eax
  40bbcf:	ds stos BYTE PTR es:[edi],al
  40bbd1:	add    eax,DWORD PTR [eax]
  40bbd3:	xor    dh,BYTE PTR [esi]
  40bbd5:	adc    al,0xe0
  40bbd7:	dec    ecx
  40bbd8:	ss clc 
  40bbda:	xchg   bh,al
  40bbdc:	or     ch,al
  40bbde:	push   esi
  40bbdf:	sar    BYTE PTR [edi-0x3d5a2702],cl
  40bbe5:	je     0x40bc1a
  40bbe7:	inc    esi
  40bbe8:	out    0x50,al
  40bbea:	addr16 mov dx,0xe4fe
  40bbef:	clc    
  40bbf0:	stos   BYTE PTR es:[edi],al
  40bbf1:	jns    0x40bbbf
  40bbf3:	adc    esp,DWORD PTR [esi]
  40bbf5:	ror    BYTE PTR [edi+0x20],0x1d
  40bbf9:	stos   DWORD PTR es:[edi],eax
  40bbfa:	ret    0x162f
  40bbfd:	sar    ch,0x13
  40bc00:	jmp    0xeb62eb48
  40bc05:	lods   al,BYTE PTR ds:[esi]
  40bc06:	ss xchg ebp,eax
  40bc08:	jnp    0x40bbc1
  40bc0a:	and    DWORD PTR es:[edi-0x54],ebp
  40bc0e:	inc    esi
  40bc0f:	test   eax,0x170ebf73
  40bc14:	dec    ebp
  40bc15:	mov    edi,0xc023d20f
  40bc1a:	push   es
  40bc1b:	stos   BYTE PTR es:[edi],al
  40bc1c:	call   0xf5906624
  40bc21:	(bad)  
  40bc22:	imul   BYTE PTR [ecx+0x3e8]
  40bc28:	xor    DWORD PTR [ecx+0x27cebc33],ebp
  40bc2e:	inc    ebp
  40bc2f:	mov    edi,0xc0239ddf
  40bc34:	jmp    0x6444b50f
  40bc39:	popf   
  40bc3a:	mov    WORD PTR [edi-0x46],ss
  40bc3d:	dec    edi
  40bc3e:	in     eax,0x82
  40bc40:	jle    0x40bc5e
  40bc42:	cmp    DWORD PTR [ebp+esi*1-0x444079c8],ebp
  40bc49:	lods   al,BYTE PTR ds:[esi]
  40bc4a:	jge    0x40bc85
  40bc4c:	xor    eax,0x25beed99
  40bc51:	add    al,0x5e
  40bc53:	inc    edi
  40bc54:	sub    eax,0x310fe395
  40bc59:	and    dh,ch
  40bc5b:	mov    esi,0x476417fd
  40bc60:	sub    DWORD PTR [esi+ecx*2+0x39],eax
  40bc64:	sub    DWORD PTR [edx+ebx*2+0x71a96e30],edi
  40bc6b:	dec    ecx
  40bc6c:	cmp    eax,0xdaf0ff9b
  40bc71:	adc    eax,DWORD PTR [eax]
  40bc73:	jmp    0x2c0a05aa
  40bc78:	and    eax,0x81725514
  40bc7d:	xchg   esi,eax
  40bc7e:	ret    
  40bc7f:	sbb    eax,0x261440aa
  40bc84:	xor    edx,DWORD PTR [eax+eax*1]
  40bc87:	jmp    0xf712b9be
  40bc8c:	add    BYTE PTR [eax],al
  40bc8e:	jns    0x40bca8
  40bc90:	add    ecx,ebp
  40bc92:	xor    dl,BYTE PTR [edi+ecx*1]
  40bc95:	push   ebp
  40bc96:	repz xchg ebp,eax
  40bc98:	jl     0x40bc8f
  40bc9a:	xor    bl,BYTE PTR [edi]
  40bc9c:	adc    ebx,esi
  40bc9e:	dec    ecx
  40bc9f:	add    BYTE PTR [edx-0x16],ch
  40bca2:	dec    eax
  40bca3:	adc    al,0x6a
  40bca5:	jmp    0xc73f5574
  40bcaa:	scas   eax,DWORD PTR es:[edi]
  40bcab:	mov    ebx,0x1432eb28
  40bcb0:	xor    DWORD PTR [ecx+eax*2],0x13
  40bcb4:	jne    0x40bcc0
  40bcb6:	xchg   esi,eax
  40bcb7:	pop    ds
  40bcb8:	adc    BYTE PTR [esi-0x5317e3f7],ah
  40bcbe:	or     al,0xa9
  40bcc0:	(bad)  
  40bcc1:	pusha  
  40bcc2:	imul   ebp,DWORD PTR [eax+0x3e1914fe],0x97391300
  40bccc:	inc    esp
  40bccd:	jge    0x40bcd1
  40bccf:	mov    esp,0xa9df7666
  40bcd4:	call   0x54edc2
  40bcd9:	push   0xfffffff1
  40bcdb:	pop    ss
  40bcdc:	add    dl,ah
  40bcde:	xchg   ebx,eax
  40bcdf:	test   eax,0x1fbff974
  40bce4:	or     BYTE PTR [ecx+0x3f],al
  40bce7:	xor    bh,bh
  40bce9:	add    bh,dh
  40bceb:	xchg   edi,eax
  40bcec:	inc    ebx
  40bced:	cld    
  40bcee:	daa    
  40bcef:	in     al,dx
  40bcf0:	adc    ebp,DWORD PTR [edx+0x0]
  40bcf3:	add    BYTE PTR [eax-0x6],cl
  40bcf6:	add    ecx,DWORD PTR [ebp-0x17b19773]
  40bcfc:	push   esi
  40bcfd:	imul   edi,ebp,0xffc221ff
  40bd03:	dec    DWORD PTR [eax-0x6b]
  40bd06:	jnp    0x40bd14
  40bd08:	dec    ebx
  40bd09:	jmp    0x40bd2a
  40bd0b:	jmp    FWORD PTR [ebp+0x27036a03]
  40bd11:	loopne 0x40bd1a
  40bd13:	call   0x3fae84
  40bd18:	pop    es
  40bd19:	loopne 0x40bd2e
  40bd1b:	push   0x1b
  40bd1d:	(bad)  
  40bd1e:	jmp    FWORD PTR [ecx+0x18]
  40bd21:	jl     0x40bd39
  40bd23:	jmp    edi
  40bd25:	imul   esp,edi,0x1409b1
  40bd2b:	xor    DWORD PTR [ebp+0x4],0x4
  40bd2f:	jne    0x40bd6c
  40bd31:	imul   esi,DWORD PTR [ebx+0x10],0xe807dfa7
  40bd38:	test   bh,ch
  40bd3a:	(bad)  
  40bd3b:	inc    DWORD PTR [ecx+0x4f]
  40bd3e:	cld    
  40bd3f:	call   FWORD PTR ds:0x32006a0c
  40bd45:	sbb    al,0x8d
  40bd47:	inc    ebp
  40bd48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd49:	inc    eax
  40bd4a:	call   0xfdaa743e
  40bd4f:	jmp    0x40d074
  40bd54:	or     esp,edi
  40bd56:	or     eax,DWORD PTR ds:0x9d0000
  40bd5c:	push   DWORD PTR [ebp-0x78]
  40bd5f:	std    
  40bd60:	add    eax,0xe81b5dff
  40bd65:	push   ebp
  40bd66:	xor    edi,edx
  40bd68:	mov    ebx,0x2bcb9fe
  40bd6d:	add    BYTE PTR [ecx],dh
  40bd6f:	inc    esp
  40bd70:	sub    DWORD PTR [ecx],eax
  40bd72:	xor    DWORD PTR [ebp-0x48d28381],edi
  40bd78:	xor    eax,0x12605620
  40bd7d:	push   0x39
  40bd7f:	out    dx,al
  40bd80:	or     BYTE PTR ss:[ecx-0x4b],bl
  40bd84:	and    al,0xff
  40bd86:	ds (bad) 
  40bd88:	ss adc al,0xcb
  40bd8b:	mov    ecx,0xbd9b0028
  40bd90:	stos   BYTE PTR es:[edi],al
  40bd91:	stos   DWORD PTR es:[edi],eax
  40bd92:	daa    
  40bd93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd94:	mov    ebx,0x2bc74e8
  40bd99:	add    BYTE PTR [edx-0x7bf8f0c9],dh
  40bd9f:	sbb    eax,0x432174bd
  40bda4:	or     al,0xff
  40bda6:	test   BYTE PTR [ebp-0x2970ee56],dh
  40bdac:	mov    ebx,0x28c964fe
  40bdb1:	add    ebx,DWORD PTR [ebx-0x43]
  40bdb4:	sub    BYTE PTR [eax],al
  40bdb6:	leave  
  40bdb7:	ss mov ebp,0x1bd3d6fe
  40bdbd:	add    DWORD PTR [eax],eax
  40bdbf:	add    BYTE PTR [ecx],dh
  40bdc1:	mov    ebp,0xa5357c7f
  40bdc6:	xor    eax,0xbff7f61c
  40bdcb:	push   DWORD PTR [esi+0x24ff02bc]
  40bdd1:	leave  
  40bdd2:	sub    BYTE PTR [eax],al
  40bdd4:	sbb    esi,DWORD PTR [ecx+0xc9d448d]
  40bdda:	lods   al,BYTE PTR ds:[esi]
  40bddb:	arpl   WORD PTR [edi-0x731743cb],dx
  40bde1:	adc    ebp,ecx
  40bde3:	add    esi,DWORD PTR [ecx]
  40bde5:	xchg   ebx,eax
  40bde6:	fisttp DWORD PTR [edi]
  40bde8:	sub    BYTE PTR [ecx],ah
  40bdea:	cmc    
  40bdeb:	(bad)  
  40bdec:	in     eax,dx
  40bded:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bdee:	out    0x3,eax
  40bdf0:	xor    DWORD PTR [esi+eax*2],edx
  40bdf3:	ss cmp eax,0x3529e93a
  40bdf9:	cdq    
  40bdfa:	stos   DWORD PTR es:[edi],eax
  40bdfb:	mov    edi,0xbdaabbe6
  40be00:	dec    edi
  40be01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be02:	psubusb mm0,QWORD PTR [esi-0x5a]
  40be06:	call   0xe3587b8b
  40be0b:	sub    ebp,DWORD PTR ss:[eax+ebp*8+0x3]
  40be10:	xor    DWORD PTR [eax+edx*1],edx
  40be13:	enter  0xa626,0xe8
  40be17:	sbb    BYTE PTR [ebp+0x2b36e218],0x6c
  40be1e:	call   0xd054ef26
  40be23:	jg     0x40be25
  40be25:	add    BYTE PTR [esi],al
  40be27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be28:	call   0xe5593bb3
  40be2d:	xor    eax,0x30bb195c
  40be32:	adc    BYTE PTR [ebx+0x14310843],0x29
  40be39:	add    ah,BYTE PTR [edx+0x5c]
  40be3c:	mov    dh,0x31
  40be3e:	and    eax,0xb3b02395
  40be43:	aaa    
  40be44:	popf   
  40be45:	or     al,ah
  40be47:	aaa    
  40be48:	xchg   ebp,eax
  40be49:	mov    ebx,0x8680a045
  40be4e:	dec    eax
  40be4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be50:	lea    ecx,[ebp+0x3185abf5]
  40be56:	inc    ecx
  40be57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be58:	repz scas eax,DWORD PTR es:[edi]
  40be5a:	lahf   
  40be5b:	pop    ds
  40be5c:	add    BYTE PTR [ecx-0x26],dh
  40be5f:	and    BYTE PTR [eax],cl
  40be61:	add    DWORD PTR [eax],0xca66ff31
  40be67:	and    BYTE PTR [ebx+edx*8],dl
  40be6a:	xor    al,0xa5
  40be6c:	je     0x40becb
  40be6e:	mov    edx,0x8441f820
  40be73:	test   al,0xfe
  40be75:	inc    esi
  40be76:	stos   BYTE PTR es:[edi],al
  40be77:	and    al,bh
  40be79:	push   ecx
  40be7a:	pop    edx
  40be7b:	cmp    edi,edi
  40be7d:	ss aad 0x13
  40be80:	add    cl,ch
  40be82:	xor    bh,BYTE PTR [ecx+0x18086a5f]
  40be88:	or     eax,0xe100009b
  40be8d:	sbb    dl,dl
  40be8f:	pushf  
  40be90:	fst    QWORD PTR [edx+0x1432dd7c]
  40be96:	inc    eax
  40be97:	out    dx,eax
  40be98:	pop    edi
  40be99:	pop    esp
  40be9a:	push   DWORD PTR [esi+esi*1-0x6b]
  40be9e:	inc    esp
  40be9f:	std    
  40bea0:	scas   eax,DWORD PTR es:[edi]
  40bea1:	aaa    
  40bea2:	hlt    
  40bea3:	fsubr  st(5),st
  40bea5:	aaa    
  40bea6:	hlt    
  40bea7:	out    0x41,al
  40bea9:	mov    al,ds:0xa54f06e7
  40beae:	(bad)  
  40beaf:	pusha  
  40beb0:	jno    0x40be5e
  40beb2:	(bad)  
  40beb3:	push   esp
  40beb4:	inc    ebp
  40beb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40beb6:	je     0x40be75
  40beb8:	stos   DWORD PTR es:[edi],eax
  40beb9:	pop    ds
  40beba:	clc    
  40bebb:	mov    esi,0x13e81c21
  40bec0:	adc    DWORD PTR [ebp+0x1aefe],esp
  40bec6:	push   0xffffffe8
  40bec8:	mov    ebx,DWORD PTR [edi]
  40beca:	hlt    
  40becb:	sahf   
  40becc:	add    DWORD PTR [edi+eiz*8-0x15a87e1],ebp
  40bed3:	mov    fs,WORD PTR [ecx-0x54]
  40bed6:	out    0x0,eax
  40bed8:	mov    ah,0xf7
  40beda:	(bad)  
  40bedb:	push   eax
  40bedd:	sldt   WORD PTR [eax]
  40bee0:	mov    BYTE PTR [ebp+0x3],dh
  40bee3:	mov    eax,0x1098
  40bee8:	inc    ecx
  40bee9:	iret   
  40beea:	push   cs
  40beeb:	add    ch,al
  40beed:	xchg   ebp,eax
  40beee:	jmp    0x7ec:0xb000056
  40bef5:	add    BYTE PTR [ebp+0x1ac95e13],al
  40befb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40befc:	dec    BYTE PTR [edx+0xaeb18a5]
  40bf02:	pop    ds
  40bf03:	mov    ds:0x6971b9e6,eax
  40bf08:	std    
  40bf09:	adc    DWORD PTR [esi],0xffffffa5
  40bf0c:	cmp    DWORD PTR [esi],0xfff0e348
  40bf12:	xchg   ebp,eax
  40bf13:	sbb    al,ch
  40bf15:	test   eax,0x5efd5eb1
  40bf1a:	popa   
  40bf1b:	fld    DWORD PTR [edx]
  40bf1d:	add    ch,al
  40bf1f:	xchg   edx,eax
  40bf20:	jmp    0xec55:0x8b0fc58b
  40bf27:	xchg   edx,eax
  40bf28:	add    dl,BYTE PTR [eax+0xfeb9b]
  40bf2e:	fs adc eax,0x5cf8558b
  40bf34:	cs (bad) 
  40bf36:	ficomp DWORD PTR [eax-0xc27eb85]
  40bf3c:	pop    es
  40bf3d:	mov    eax,DWORD PTR [ebp+0x4]
  40bf40:	push   DWORD PTR [eax-0x3c]
  40bf43:	mov    WORD PTR [eax],es
  40bf45:	sbb    DWORD PTR ds:0xc1740000,0xffffff90
  40bf4c:	push   ebx
  40bf4d:	sbb    al,bh
  40bf4f:	mov    WORD PTR [eax],es
  40bf51:	xor    DWORD PTR [ecx],0xffffffaf
  40bf54:	or     cl,cl
  40bf56:	add    BYTE PTR [eax],al
  40bf58:	jae    0x40bf03
  40bf5a:	add    dl,BYTE PTR [ebp-0x46]
  40bf5d:	mov    DWORD PTR [ebx+eax*8-0x74adf583],eax
  40bf64:	in     al,dx
  40bf65:	mov    esp,0xad8effbf
  40bf6a:	add    al,BYTE PTR [eax]
  40bf6c:	mov    edx,0x31c70670
  40bf71:	lods   eax,DWORD PTR ds:[esi]
  40bf72:	add    al,BYTE PTR [eax]
  40bf74:	xor    DWORD PTR [esi],ebp
  40bf76:	aaa    
  40bf77:	or     BYTE PTR [ecx],dh
  40bf79:	enter  0x2b0a,0x71
  40bf7d:	jnp    0x40bfd6
  40bf7f:	leave  
  40bf80:	jae    0x40bf33
  40bf82:	add    bh,bh
  40bf84:	fdiv   QWORD PTR [edx+ebp*4-0x470e2e01]
  40bf8b:	or     dh,BYTE PTR [ecx-0x80]
  40bf8e:	or     ch,BYTE PTR [ebx]
  40bf90:	jno    0x40bff5
  40bf92:	push   edi
  40bf93:	leave  
  40bf94:	jae    0x40bf4f
  40bf96:	add    cl,BYTE PTR [ecx+0x74b90574]
  40bf9c:	cmp    DWORD PTR ds:0xa21e630e,eax
  40bfa2:	mov    edi,0x2ac1d44
  40bfa7:	add    BYTE PTR [ecx],dh
  40bfa9:	inc    eax
  40bfaa:	aas    
  40bfab:	in     al,dx
  40bfac:	popa   
  40bfad:	sub    BYTE PTR [esi],bh
  40bfaf:	hlt    
  40bfb0:	popa   
  40bfb1:	ret    0x82d
  40bfb4:	or     DWORD PTR [edx-0x44],esp
  40bfb7:	(bad)  
  40bfb8:	out    dx,al
  40bfb9:	add    edi,DWORD PTR [edi]
  40bfbb:	in     al,dx
  40bfbc:	add    BYTE PTR [eax],al
  40bfbe:	pop    esi
  40bfbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bfc0:	cmp    DWORD PTR [ebp+eiz*8-0x54],0x2e
  40bfc5:	add    al,0x2a
  40bfc7:	jg     0x40bff7
  40bfc9:	or     BYTE PTR [edx],bl
  40bfcb:	ins    DWORD PTR es:[edi],dx
  40bfcc:	pop    eax
  40bfcd:	pop    edi
  40bfce:	clc    
  40bfcf:	adc    ebp,DWORD PTR [ebx+0x23ef3107]
  40bfd5:	test   al,0xa9
  40bfd7:	pop    eax
  40bfd8:	add    DWORD PTR [edx+0x3e8ac2d],0xbff13d1
  40bfe2:	dec    edx
  40bfe3:	aam    0x1e
  40bfe5:	pop    ecx
  40bfe6:	push   0xba03e4d5
  40bfeb:	pop    eax
  40bfec:	add    edx,0xabb91566
  40bff2:	mov    DWORD PTR [ebx],ebp
  40bff4:	pop    esi
  40bff5:	mov    eax,0x8c5558a9
  40bffa:	data16 fisub DWORD PTR [ebx-0x175d9961]
  40c001:	add    ecx,DWORD PTR [edx-0x1a]
  40c004:	imul   edi,DWORD PTR [esi],0x61
  40c007:	inc    ebx
  40c008:	fs ds inc ebp
  40c00b:	inc    ebx
  40c00c:	cs cmp DWORD PTR cs:[ebp+eiz*4+0x71a23fbd],ebp
  40c015:	inc    esi
  40c016:	inc    ecx
  40c017:	fisub  WORD PTR [ebx-0x1de75855]
  40c01d:	aad    0xa2
  40c01f:	add    al,0x6
  40c021:	add    BYTE PTR cs:[eax],al
  40c024:	sbb    eax,0x162b48ad
  40c029:	mov    ds:0x416cc3c1,al
  40c02e:	and    ch,al
  40c030:	cmp    dl,BYTE PTR [eax+edx*1]
  40c033:	dec    ecx
  40c034:	or     DWORD PTR [edx-0x6a345fdd],esp
  40c03a:	push   ebx
  40c03b:	lods   al,BYTE PTR ds:[esi]
  40c03c:	out    dx,al
  40c03d:	daa    
  40c03e:	out    0x82,eax
  40c040:	gs test al,0xe8
  40c043:	xor    al,dh
  40c045:	xchg   ebp,eax
  40c046:	cmp    ebp,DWORD PTR [esi+edx*8-0x4c10ffd8]
  40c04d:	and    ah,dh
  40c04f:	jmp    0x1d3fc455
  40c054:	jns    0x40c00f
  40c056:	jo     0x40c069
  40c058:	jle    0x40bffc
  40c05a:	sub    ch,BYTE PTR [ecx-0x5436bef9]
  40c060:	cmp    DWORD PTR [ebx+eax*4],edx
  40c063:	add    al,0xd1
  40c065:	mov    eax,ds:0x8ec5e473
  40c06a:	(bad)  
  40c06b:	call   0xd9854da2
  40c070:	mov    edi,0x3576e428
  40c075:	lea    eax,[ebp+eax*2+0x6c]
  40c079:	rol    DWORD PTR [ecx],0xb9
  40c07c:	call   0x448c:0x9e4e6834
  40c083:	and    eax,0x72dc20aa
  40c088:	add    BYTE PTR [eax],al
  40c08a:	and    BYTE PTR [eax-0x72266e16],ah
  40c090:	iret   
  40c091:	es lock mov bl,0xff
  40c095:	call   0xa4cdd4cc
  40c09a:	xchg   edx,eax
  40c09b:	push   ecx
  40c09c:	lea    ebp,[esi+ebx*8+0x600e5250]
  40c0a3:	or     al,0xe8
  40c0a5:	push   ss
  40c0a6:	fisub  DWORD PTR [ecx+0x24f2f2fe]
  40c0ac:	or     al,0x6a
  40c0ae:	dec    eax
  40c0af:	test   al,0xff
  40c0b1:	je     0x40c0b7
  40c0b3:	xchg   esi,eax
  40c0b4:	jl     0x40c07f
  40c0b6:	xor    ah,BYTE PTR [edi]
  40c0b8:	es push 0x39
  40c0bb:	mov    ah,0xff
  40c0bd:	pop    esp
  40c0be:	cmp    eax,0x9ac974a1
  40c0c3:	push   ss
  40c0c4:	push   0xfd69f700
  40c0c9:	jne    0x40c07f
  40c0cb:	ins    BYTE PTR es:[edi],dx
  40c0cc:	sub    dh,bh
  40c0ce:	xchg   DWORD PTR [ecx-0x3],ebp
  40c0d1:	jne    0x40c067
  40c0d3:	ins    BYTE PTR es:[edi],dx
  40c0d4:	hlt    
  40c0d5:	addr16 xchg edi,eax
  40c0d7:	imul   ebp,DWORD PTR [ecx],0xc948f6c0
  40c0dd:	ret    0x1494
  40c0e0:	mov    eax,DWORD PTR [ebp-0x48]
  40c0e3:	sub    eax,0x95ac4dfe
  40c0e8:	jnp    0x40c0ce
  40c0ea:	mov    al,dh
  40c0ec:	add    eax,0x85000083
  40c0f1:	jo     0x40c0f1
  40c0f3:	je     0x40c0e9
  40c0f5:	lea    eax,[ebx+0xc]
  40c0f8:	pop    ss
  40c0f9:	in     al,0xdb
  40c0fb:	(bad)
  40c0ff:	cld    
  40c100:	lock int 0x65
  40c103:	push   edi
  40c105:	sbb    al,0x0
  40c107:	add    BYTE PTR [eax+0x14],cl
  40c10a:	pop    esi
  40c10b:	pop    edi
  40c10c:	and    ebx,edx
  40c10e:	or     al,BYTE PTR [eax]
  40c110:	lods   eax,DWORD PTR ds:[esi]
  40c111:	(bad)  
  40c112:	jmp    0x9583:0x55cd0c83
  40c119:	add    al,0x0
  40c11b:	jne    0x40c15f
  40c11d:	sbb    al,0x0
  40c11f:	add    BYTE PTR [eax],bl
  40c121:	adc    al,0x5f
  40c123:	leave  
  40c124:	pop    edx
  40c125:	(bad)  
  40c127:	jmp    ebp
  40c129:	add    ebp,DWORD PTR [ebx]
  40c12b:	shl    BYTE PTR [ebx-0x208efac],cl
  40c131:	aas    
  40c132:	gs inc ecx
  40c134:	sbb    BYTE PTR [ecx+0x1862f043],dl
  40c13a:	push   DWORD PTR [ebp-0x28]
  40c13d:	imul   esi,DWORD PTR [ebx+0x8],0x5f19d531
  40c144:	out    0xce,al
  40c146:	cmp    BYTE PTR [ecx+eax*2-0x53],0x2d
  40c14b:	or     al,0x4b
  40c14d:	lods   al,BYTE PTR ds:[esi]
  40c14e:	sub    BYTE PTR [esi+ecx*8-0x20],ah
  40c152:	or     ebp,eax
  40c154:	add    BYTE PTR [eax],al
  40c156:	cmp    DWORD PTR [esi],ecx
  40c158:	mov    ch,0xfe
  40c15a:	mov    esi,0x3cff1000
  40c15f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c160:	stos   BYTE PTR es:[edi],al
  40c161:	dec    edx
  40c162:	adc    eax,DWORD PTR [esi-0x6f13774c]
  40c168:	mov    ah,0x74
  40c16a:	inc    ebp
  40c16b:	xchg   esi,eax
  40c16c:	or     BYTE PTR cs:[ecx-0x7100df43],cl
  40c173:	es das 
  40c175:	adc    al,0x86
  40c177:	test   al,0xa
  40c179:	call   0xfef48cb2
  40c17e:	test   al,0x78
  40c180:	mov    edx,0xb3a0e4fe
  40c185:	je     0x40c1c0
  40c187:	push   ebp
  40c188:	lods   eax,DWORD PTR ds:[esi]
  40c189:	pusha  
  40c18a:	pop    esi
  40c18b:	push   esi
  40c18c:	mov    ch,0x74
  40c18e:	cmp    eax,0x59082ede
  40c193:	les    esp,FWORD PTR [eax]
  40c195:	inc    DWORD PTR [esi+0x32]
  40c198:	aas    
  40c199:	adc    al,0xb2
  40c19b:	mov    ch,0x2
  40c19d:	je     0x40c1c4
  40c19f:	sub    dh,BYTE PTR [edi]
  40c1a1:	cld    
  40c1a2:	cmp    al,0x81
  40c1a4:	add    eax,0xff11a483
  40c1a9:	jae    0x40c1e1
  40c1ab:	ret    0x5ec2
  40c1ae:	call   0xd040d19d
  40c1b3:	push   eax
  40c1b4:	push   ds
  40c1b5:	inc    ecx
  40c1b6:	xor    esp,edi
  40c1b8:	stos   DWORD PTR es:[edi],eax
  40c1b9:	cmp    BYTE PTR [eax],al
  40c1bb:	add    BYTE PTR [esp+edx*1-0x1f],dh
  40c1bf:	sub    eax,0x54a8eb2e
  40c1c4:	clc    
  40c1c5:	sar    esp,1
  40c1c7:	add    esi,DWORD PTR [edx+0x65fecd20]
  40c1cd:	push   cs
  40c1ce:	(bad)  
  40c1cf:	cs cmp eax,0xd90c339f
  40c1d5:	xchg   esp,eax
  40c1d6:	inc    edi
  40c1d7:	mov    ch,0xc7
  40c1d9:	mov    WORD PTR [ebx],fs
  40c1db:	int3   
  40c1dc:	push   esi
  40c1dd:	adc    al,0xe9
  40c1df:	add    dh,BYTE PTR [ecx]
  40c1e1:	lods   al,BYTE PTR ds:[esi]
  40c1e2:	in     eax,0x1c
  40c1e4:	scas   al,BYTE PTR es:[edi]
  40c1e5:	sahf   
  40c1e6:	pop    edi
  40c1e7:	ds popf 
  40c1e9:	jmp    0xffb:0x9f40a88d
  40c1f0:	xchg   esi,eax
  40c1f1:	sub    cl,dh
  40c1f3:	stos   DWORD PTR es:[edi],eax
  40c1f4:	mov    esp,0xbbb47634
  40c1f9:	dec    eax
  40c1fa:	jne    0x40c186
  40c1fc:	xor    bl,BYTE PTR [edx-0x53]
  40c1ff:	clc    
  40c200:	cmc    
  40c201:	fisubr DWORD PTR [edx-0x7f02a745]
  40c208:	push   ds
  40c209:	adc    al,0xd4
  40c20b:	add    al,0x5e
  40c20d:	sub    BYTE PTR ds:0x3e3570ab,bh
  40c213:	mov    ah,0x1b
  40c215:	aam    0x95
  40c217:	retf   0x770
  40c21a:	jmp    0xebe07f9f
  40c21f:	add    al,0x0
  40c221:	add    BYTE PTR [esi+esi*2-0x16cefc18],ch
  40c228:	adc    eax,0xb38994a8
  40c22d:	scas   eax,DWORD PTR es:[edi]
  40c22e:	stos   DWORD PTR es:[edi],eax
  40c22f:	sbb    BYTE PTR [ebx+0x0],al
  40c232:	ins    BYTE PTR es:[edi],dx
  40c233:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c234:	xchg   edx,eax
  40c235:	add    esp,DWORD PTR [ecx-0x63]
  40c238:	(bad)  
  40c239:	jnp    0x40c275
  40c23b:	lods   al,BYTE PTR ds:[esi]
  40c23c:	daa    
  40c23d:	pop    ebp
  40c23f:	sahf   
  40c240:	(bad)  
  40c241:	pop    esp
  40c242:	sbb    DWORD PTR [ebp+0x3caf174],ebx
  40c248:	popa   
  40c249:	(bad)  
  40c24a:	mov    ds:0x3f9d448c,al
  40c24f:	adc    al,0xff
  40c251:	cmp    al,0x39
  40c253:	popf   
  40c254:	je     0x40c247
  40c256:	stos   BYTE PTR es:[edi],al
  40c257:	dec    esp
  40c258:	clc    
  40c259:	mov    dh,0x82
  40c25b:	mov    cl,BYTE PTR [ebp+edx*8-0x49]
  40c25f:	fdiv   st(7),st
  40c261:	sbb    esi,DWORD PTR [edx]
  40c263:	popf   
  40c264:	je     0x40c1fb
  40c266:	int    0x2f
  40c268:	xchg   si,ax
  40c26a:	loop   0x40c256
  40c26c:	mov    edi,0x13d3dc2e
  40c271:	jmp    0x7e58eb59
  40c276:	dec    eax
  40c277:	or     bh,bh
  40c279:	cld    
  40c27a:	(bad)  
  40c27b:	sahf   
  40c27c:	je     0x40c25b
  40c27e:	ret    
  40c27f:	sub    BYTE PTR [eax],cl
  40c281:	push   ecx
  40c282:	sahf   
  40c283:	lahf   
  40c284:	(bad)  
  40c285:	pop    esi
  40c286:	add    BYTE PTR [eax],al
  40c288:	outs   dx,BYTE PTR ds:[esi]
  40c289:	pop    ebp
  40c28a:	je     0x40c272
  40c28c:	mov    ds:0xea41f428,eax
  40c291:	xor    eax,0x5d7646ff
  40c296:	pop    esi
  40c297:	xor    BYTE PTR [edi+0x1],dh
  40c29a:	add    BYTE PTR [esi-0x4407dfa9],ch
  40c2a0:	mov    cl,0x9e
  40c2a2:	je     0x40c2a5
  40c2a4:	sub    BYTE PTR [eax],0x14
  40c2a7:	push   ds
  40c2a8:	push   0x269cfecc
  40c2ad:	sahf   
  40c2ae:	je     0x40c291
  40c2b0:	mov    edx,0x2f00fe36
  40c2b5:	popa   
  40c2b6:	or     eax,eax
  40c2b8:	pop    ds
  40c2b9:	mov    WORD PTR [eax+0x1],ss
  40c2bc:	sbb    BYTE PTR [ecx],dl
  40c2be:	push   DWORD PTR [ebp+0x4]
  40c2c1:	jns    0x40c2d7
  40c2c3:	punpckldq xmm5,XMMWORD PTR [ecx]
  40c2c7:	shr    BYTE PTR [edi],0x5f
  40c2ca:	rcl    BYTE PTR [eax+ebx*8],0x7f
  40c2ce:	cmp    al,0x1
  40c2d0:	enter  0x8310,0x7d
  40c2d4:	in     al,dx
  40c2d5:	adc    ecx,DWORD PTR [edi]
  40c2d7:	test   esp,eax
  40c2d9:	pop    ss
  40c2da:	add    BYTE PTR [eax],al
  40c2dc:	xor    esp,DWORD PTR [ecx-0x19]
  40c2df:	and    al,0xc9
  40c2e1:	adc    BYTE PTR [eax],al
  40c2e3:	mov    esi,ebp
  40c2e5:	pop    ebx
  40c2e6:	mov    DWORD PTR [edx+edx*1],eax
  40c2e9:	push   ss
  40c2ea:	inc    ebp
  40c2eb:	lock add BYTE PTR [eax],al
  40c2ee:	xor    bl,BYTE PTR [eax]
  40c2f0:	push   eax
  40c2f1:	inc    DWORD PTR [ebp-0x60]
  40c2f4:	out    0x74,al
  40c2f6:	dec    ebp
  40c2f7:	popa   
  40c2f8:	std    
  40c2f9:	push   0xffffff98
  40c2fb:	popa   
  40c2fc:	jae    0x40c312
  40c2fe:	(bad)  
  40c2ff:	fild   DWORD PTR [edi]
  40c301:	call   0x3e1cf1
  40c306:	add    edx,DWORD PTR [esp+edx*1-0x7d]
  40c30a:	adc    DWORD PTR [eax],ebx
  40c30c:	jne    0x40c31d
  40c30e:	(bad)  
  40c30f:	fcomi  st,st(3)
  40c311:	call   0x3faf26
  40c316:	inc    ebx
  40c317:	fcomp  DWORD PTR [ebp-0x37]
  40c31a:	sbb    al,BYTE PTR ds:0xe52a0b00
  40c320:	add    al,0xe9
  40c322:	cld    
  40c323:	adc    BYTE PTR [eax],al
  40c325:	add    cl,al
  40c327:	dec    ebx
  40c328:	in     al,dx
  40c329:	push   0x18
  40c32b:	addr16 jae 0x40c342
  40c32e:	xor    DWORD PTR [edx],eax
  40c330:	cmp    BYTE PTR [eax],cl
  40c332:	or     DWORD PTR [edi-0x47],edi
  40c335:	(bad)  
  40c336:	push   ss
  40c337:	daa    
  40c338:	inc    eax
  40c339:	adc    al,0xb2
  40c33b:	aam    0x2
  40c33d:	jne    0x40c375
  40c33f:	mov    ds:0x4609f436,al
  40c344:	sub    bh,bh
  40c346:	test   BYTE PTR [esi],0xc4
  40c349:	pop    esi
  40c34a:	clc    
  40c34b:	outs   dx,DWORD PTR ds:[esi]
  40c34c:	pop    ss
  40c34d:	add    dh,ah
  40c34f:	clc    
  40c350:	add    BYTE PTR gs:[bx+si],al
  40c354:	jo     0x40c303
  40c356:	jg     0x40c39c
  40c358:	leave  
  40c359:	es inc edi
  40c35b:	call   0xc1408912
  40c360:	shr    DWORD PTR [eax+0x6a78d1db],1
  40c366:	add    eax,DWORD PTR [eax]
  40c368:	xor    DWORD PTR [edx-0x4e],edi
  40c36b:	sbb    BYTE PTR [ecx-0x6ebb865e],0x2e
  40c372:	pop    ds
  40c373:	call   0xec87f9ca
  40c378:	pop    edx
  40c379:	call   0x86743a19
  40c37e:	fisubr DWORD PTR [edx]
  40c380:	arpl   WORD PTR [esi],si
  40c382:	inc    edi
  40c383:	in     al,dx
  40c384:	dec    edx
  40c385:	lock mov ds:0x8544e48a,eax
  40c38b:	rcl    BYTE PTR [edx],0x2e
  40c38e:	fwait
  40c38f:	add    ebx,DWORD PTR [esi+0x3c]
  40c392:	add    eax,0x57345155
  40c397:	in     al,0xaa
  40c399:	push   0x50f43a9a
  40c39e:	xor    eax,0xa268ba05
  40c3a3:	jmp    0x1436:0xe4473632
  40c3aa:	pushf  
  40c3ab:	pop    ss
  40c3ac:	and    DWORD PTR cs:0xe1212654,ecx
  40c3b3:	fwait
  40c3b4:	shl    DWORD PTR [edx+0xb10d],1
  40c3ba:	sub    edx,esp
  40c3bc:	jnp    0x40c3be
  40c3be:	push   cs
  40c3bf:	and    ebp,esi
  40c3c1:	fwait
  40c3c2:	and    al,0x31
  40c3c4:	div    BYTE PTR [eax-0x45722bb5]
  40c3ca:	lock (bad) 
  40c3cc:	call   0x71f9394b
  40c3d1:	shl    DWORD PTR [ebp-0x53ac42b0],cl
  40c3d7:	push   eax
  40c3d8:	mov    cl,0x53
  40c3da:	sub    DWORD PTR [edx+eiz*2+0x6f9acfac],0x46
  40c3e2:	loope  0x40c37e
  40c3e4:	cmp    edx,eax
  40c3e6:	(bad)  
  40c3e7:	xor    DWORD PTR ds:0x2396b7b1,ecx
  40c3ed:	aam    0xae
  40c3ef:	es cld 
  40c3f1:	test   BYTE PTR ds:0x4637e8bc,ah
  40c3f7:	fwait
  40c3f8:	adc    ebx,eax
  40c3fa:	xchg   edi,eax
  40c3fb:	and    BYTE PTR [ecx+0x7e0805b0],ah
  40c401:	cmp    DWORD PTR ss:[ebx+0x207e0c1b],ebx
  40c408:	xchg   ecx,eax
  40c409:	fwait
  40c40a:	xor    BYTE PTR [edi-0x21084f9b],bl
  40c410:	fld    TBYTE PTR [ebx-0x4ec669c9]
  40c416:	pop    edi
  40c417:	call   0x272c:0xab5d364d
  40c41e:	add    BYTE PTR [eax],al
  40c420:	dec    esi
  40c421:	call   0xe900:0x14310280
  40c428:	loope  0x40c3f6
  40c42a:	rcl    ebp,0x32
  40c42d:	inc    ecx
  40c42e:	mov    edx,DWORD PTR ds:0xf1749989
  40c434:	retf   0x71a5
  40c437:	push   ss
  40c438:	loope  0x40c46b
  40c43a:	in     eax,0xaa
  40c43c:	jae    0x40c452
  40c43e:	(bad)  
  40c43f:	jl     0x40c44b
  40c441:	mov    dl,0x3c
  40c443:	mov    dh,0x32
  40c445:	adc    al,0xb
  40c447:	sub    DWORD PTR [edi+0xf],eax
  40c44a:	pop    edi
  40c44b:	and    ah,ch
  40c44d:	adc    DWORD PTR [eax],eax
  40c44f:	scas   eax,DWORD PTR es:[edi]
  40c450:	xor    eax,0xe554ff14
  40c455:	mov    cl,0xd2
  40c457:	pop    ebx
  40c458:	mov    ds,WORD PTR [edx+0x5372c6be]
  40c45e:	add    dh,al
  40c460:	or     BYTE PTR [edi+edx*2],cl
  40c463:	shr    DWORD PTR [edx+eiz*8],1
  40c466:	(bad)  
  40c467:	call   0xe4b51e27
  40c46c:	addr16 retf 
  40c46e:	shl    ecx,0x32
  40c471:	cwde   
  40c472:	xor    ch,BYTE PTR [ecx-0x690165ec]
  40c478:	into   
  40c479:	mov    ds:0x1f2fd1ad,eax
  40c47e:	loopne 0x40c406
  40c480:	dec    eax
  40c481:	or     al,0xe8
  40c483:	add    eax,0x99880000
  40c488:	(bad)  
  40c489:	loop   0x40c4fd
  40c48b:	and    BYTE PTR ds:0x7d3b40e,al
  40c491:	jmp    0xa884c5e0
  40c496:	xor    bl,BYTE PTR [ecx-0x32451e8c]
  40c49c:	xor    al,0xe9
  40c49e:	xor    cl,BYTE PTR ds:0x988d00c0
  40c4a4:	std    
  40c4a5:	jne    0x40c4fb
  40c4a7:	sbb    al,BYTE PTR [esp+ebp*4]
  40c4aa:	outs   dx,BYTE PTR ds:[esi]
  40c4ab:	push   eax
  40c4ac:	add    BYTE PTR [eax+0x2a],ch
  40c4af:	dec    esp
  40c4b0:	inc    ecx
  40c4b1:	add    BYTE PTR [edi-0x25],dl
  40c4b4:	pop    es
  40c4b5:	call   0x3f6044
  40c4ba:	adc    edx,ebp
  40c4bc:	jae    0x40c4c7
  40c4be:	daa    
  40c4bf:	fisttp DWORD PTR [ebx]
  40c4c1:	(bad)  
  40c4c2:	sbb    eax,0x18416525
  40c4c7:	std    
  40c4c8:	xor    BYTE PTR [ecx+ecx*8+0x14],al
  40c4cc:	push   DWORD PTR [ebp+0x10]
  40c4cf:	jge    0x40c467
  40c4d1:	xor    eax,0xc00b14d8
  40c4d6:	jge    0x40c46f
  40c4d8:	std    
  40c4d9:	jne    0x40c4af
  40c4db:	sbb    DWORD PTR [esp+esi*4],eax
  40c4de:	outs   dx,BYTE PTR ds:[esi]
  40c4df:	dec    edi
  40c4e0:	add    BYTE PTR [eax+0x14d9],bh
  40c4e6:	daa    
  40c4e7:	push   edi
  40c4e8:	ror    BYTE PTR [eax],0x0
  40c4eb:	add    al,cl
  40c4ed:	cmp    ecx,DWORD PTR [ebx-0xd2eb414]
  40c4f3:	push   esi
  40c4f4:	outs   dx,DWORD PTR ds:[esi]
  40c4f5:	clc    
  40c4f6:	loopne 0x40c53b
  40c4f8:	pop    ecx
  40c4f9:	adc    bh,bh
  40c4fb:	jne    0x40c48d
  40c4fd:	jl     0x40c483
  40c4ff:	mov    BYTE PTR ss:[ebx+ecx*1],dl
  40c503:	ror    BYTE PTR [ebp-0x3ea1a0f2],0xd2
  40c50a:	add    al,BYTE PTR [eax]
  40c50c:	dec    eax
  40c50d:	sbb    eax,0x9c858bef
  40c512:	jmp    0x3cd58118
  40c517:	add    BYTE PTR [ebp+0x6a],bh
  40c51a:	mov    ds:0x424e3168,al
  40c51f:	inc    ecx
  40c520:	xor    DWORD PTR [edx+0x38],ecx
  40c523:	or     BYTE PTR [ecx-0x36],bl
  40c526:	hlt    
  40c527:	inc    DWORD PTR [esi-0x5b]
  40c52a:	ret    0x3774
  40c52d:	or     BYTE PTR [ecx+ecx*8+0x73],0xae
  40c532:	add    cl,BYTE PTR [ebx+0x2199a5ac]
  40c538:	mov    cl,0xb6
  40c53a:	sti    
  40c53b:	jae    0x40c575
  40c53d:	sub    eax,0xa19d0cee
  40c542:	cmp    BYTE PTR [esi],0x3b
  40c545:	sbb    esi,edi
  40c547:	jg     0x40c58f
  40c549:	jb     0x40c581
  40c54b:	or     dh,BYTE PTR [ecx+0x744f5e]
  40c551:	add    BYTE PTR [ebp*1-0x559ba012],ch
  40c558:	les    eax,FWORD PTR [esi]
  40c55a:	adc    esi,ebp
  40c55c:	cmp    DWORD PTR [esi],0x31
  40c55f:	cmp    bl,cl
  40c561:	(bad)  
  40c562:	ins    BYTE PTR es:[edi],dx
  40c563:	leave  
  40c564:	add    eax,DWORD PTR [eax]
  40c566:	xor    DWORD PTR [ebp-0x5236bb3d],ebp
  40c56c:	add    al,BYTE PTR [eax]
  40c56e:	xor    DWORD PTR [edx],esi
  40c570:	das    
  40c571:	or     dl,cl
  40c573:	repnz cmp DWORD PTR [esi],0x56
  40c577:	clc    
  40c578:	fadd   DWORD PTR [edx+0x75037924]
  40c57e:	inc    ebx
  40c57f:	jbe    0x40c5c7
  40c581:	clc    
  40c582:	xor    BYTE PTR [ebp-0x4efbfffe],ch
  40c588:	ret    
  40c589:	inc    esp
  40c58a:	test   DWORD PTR [edx+eax*1+0x10923100],ebp
  40c591:	imul   esp
  40c593:	and    al,0x3
  40c595:	add    BYTE PTR [ecx],dh
  40c597:	adc    al,0xe9
  40c599:	ss cmp ecx,esi
  40c59c:	in     eax,0xe3
  40c59e:	ja     0x40c5f1
  40c5a0:	push   ebp
  40c5a1:	add    al,0x31
  40c5a3:	adc    al,0xe9
  40c5a5:	or     DWORD PTR [edi],0x38
  40c5a8:	mov    esp,0x41514606
  40c5ad:	cdq    
  40c5ae:	aaa    
  40c5af:	iret   
  40c5b0:	stos   DWORD PTR es:[edi],eax
  40c5b1:	stos   DWORD PTR es:[edi],eax
  40c5b2:	ss xchg edi,eax
  40c5b4:	call   0xb240c5bc
  40c5b9:	sbb    BYTE PTR ds:0x27139c03,ah
  40c5bf:	add    eax,0xed694f51
  40c5c4:	push   ss
  40c5c5:	and    BYTE PTR [ecx+0x79],bl
  40c5c8:	lea    ecx,[edx+edx*1]
  40c5cb:	adc    BYTE PTR [ecx+0x2736c8d6],dh
  40c5d1:	xchg   esp,eax
  40c5d2:	jne    0x40c5d6
  40c5d4:	push   ecx
  40c5d5:	and    ecx,ebx
  40c5d7:	push   esp
  40c5d8:	fimul  DWORD PTR ds:0x8c304473
  40c5de:	in     eax,0x44
  40c5e0:	mov    cl,0xd6
  40c5e2:	call   0x1e77a21d
  40c5e7:	inc    ebp
  40c5e8:	mov    cl,0xd6
  40c5ea:	call   0x240fac25
  40c5ef:	mov    eax,0x3e896be
  40c5f4:	stos   BYTE PTR es:[edi],al
  40c5f5:	and    cl,ah
  40c5f7:	js     0x40c626
  40c5f9:	or     al,0x92
  40c5fb:	loope  0x40c623
  40c5fd:	xlat   BYTE PTR ds:[ebx]
  40c5fe:	int3   
  40c5ff:	ss cmp eax,0x9603edce
  40c605:	and    BYTE PTR [ebp-0x791566ab],dl
  40c60b:	lods   al,BYTE PTR ds:[esi]
  40c60c:	xchg   DWORD PTR [edx],ecx
  40c60e:	test   eax,0x373736
  40c613:	pop    ss
  40c614:	mov    edx,0xe9e903d4
  40c619:	popf   
  40c61a:	inc    ebp
  40c61b:	data16 add BYTE PTR [eax],al
  40c61e:	out    dx,eax
  40c61f:	lahf   
  40c620:	inc    esi
  40c621:	imul   ecx,DWORD PTR [ebp-0x6a],0x1f853073
  40c628:	hlt    
  40c629:	mov    bh,0xaa
  40c62b:	or     bh,dh
  40c62d:	inc    esi
  40c62e:	xchg   ebp,eax
  40c62f:	xor    eax,0x1270305e
  40c634:	add    BYTE PTR [ecx+edi*4-0x15da7d56],bl
  40c63b:	aas    
  40c63c:	push   edi
  40c63d:	push   0x57
  40c63f:	add    BYTE PTR [eax],al
  40c641:	xchg   ebp,eax
  40c642:	sbb    edx,DWORD PTR [ebx+0x54fbdc3c]
  40c648:	add    cl,ch
  40c64a:	inc    edi
  40c64b:	push   cs
  40c64c:	pop    edi
  40c64d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c64e:	retf   
  40c64f:	ror    DWORD PTR [edi],cl
  40c651:	jmp    0xb05516cf
  40c656:	das    
  40c657:	push   0x532a865
  40c65c:	or     DWORD PTR [edx+0x2000142c],0x30
  40c663:	fs sub BYTE PTR gs:0x34768305,ch
  40c66b:	adc    al,0x0
  40c66d:	add    BYTE PTR [eax],dh
  40c66f:	pusha  
  40c670:	sub    BYTE PTR gs:0x2c628305,dh
  40c677:	adc    al,0x0
  40c679:	pop    esp
  40c67a:	lock lahf 
  40c67c:	dec    edi
  40c67d:	je     0x40c66f
  40c67f:	fwait
  40c680:	dec    edi
  40c681:	ins    BYTE PTR es:[edi],dx
  40c682:	add    BYTE PTR [eax],al
  40c684:	lock xchg edi,eax
  40c686:	dec    edi
  40c687:	xchg   esi,eax
  40c688:	mov    al,ds:0x35286569
  40c68d:	xchg   ebp,eax
  40c68e:	je     0x40c690
  40c690:	push   0xfff8bc79
  40c695:	push   0x40b0458b
  40c69a:	lea    eax,[ebp-0x14]
  40c69d:	aas    
  40c69e:	lea    eax,[ebp+0x8]
  40c6a1:	inc    eax
  40c6a2:	push   DWORD PTR ds:0x40f2c4
  40c6a8:	jmp    edx
  40c6aa:	psubsb mm6,QWORD PTR [eax+ebp*2+0x52bdfffd]
  40c6b2:	fcom   QWORD PTR [eax-0x33]
  40c6b5:	push   edx
  40c6b6:	loopne 0x40c708
  40c6b8:	int    0x52
  40c6ba:	in     al,0x50
  40c6bc:	pop    edi
  40c6bd:	mov    ds:0x10d966ae,eax
  40c6c2:	push   DWORD PTR [ebp+0x18]
  40c6c5:	jns    0x40c64f
  40c6c7:	clc    
  40c6c8:	aas    
  40c6c9:	imul   edi,ebp,0x44193475
  40c6cf:	aam    0x2f
  40c6d1:	jecxz  0x40c6ae
  40c6d3:	(bad)  
  40c6d4:	aad    0xc8
  40c6d6:	lds    eax,FWORD PTR [ebp+0x18]
  40c6d9:	adc    BYTE PTR [eax],al
  40c6db:	add    al,bl
  40c6dd:	sbb    eax,DWORD PTR [esp+ecx*8+0x28]
  40c6e1:	test   BYTE PTR [eax],0x6a
  40c6e4:	enter  0xfff6,0x69
  40c6e8:	add    BYTE PTR [eax],al
  40c6ea:	enter  0xfff6,0x8c
  40c6ee:	adc    eax,0xe5ff4ec4
  40c6f3:	mov    ds:0x95c84127,eax
  40c6f8:	mov    esi,0xff97440f
  40c6fd:	call   FWORD PTR [eax-0x672f8473]
  40c703:	cdq    
  40c704:	add    BYTE PTR [eax],0x89
  40c707:	adc    BYTE PTR [eax],al
  40c709:	mov    esi,DWORD PTR [ecx]
  40c70b:	lock mov bh,0x3a
  40c70e:	cld    
  40c70f:	mov    ?,ecx
  40c711:	xchg   BYTE PTR [ebp-0x56],bh
  40c714:	add    al,BYTE PTR [eax]
  40c716:	jge    0x40c739
  40c718:	xor    al,dl
  40c71a:	stos   BYTE PTR es:[edi],al
  40c71b:	lahf   
  40c71c:	(bad)  
  40c71d:	mov    bh,ah
  40c71f:	jbe    0x40c6c6
  40c721:	add    DWORD PTR [edx-0x7a],esp
  40c724:	test   eax,0x40256d74
  40c729:	in     al,0x56
  40c72b:	mov    bh,0xd2
  40c72d:	out    0x6e,eax
  40c72f:	clc    
  40c730:	add    eax,DWORD PTR [eax]
  40c732:	mov    dl,0xcf
  40c734:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c735:	jmp    FWORD PTR [edi]
  40c737:	das    
  40c738:	mov    ecx,0x85aa36ff
  40c73d:	jl     0x40c760
  40c73f:	jle    0x40c73a
  40c741:	sub    ebp,0x7d
  40c744:	add    al,BYTE PTR [eax]
  40c746:	mov    dl,0xb0
  40c748:	sahf   
  40c749:	jmp    DWORD PTR [edi]
  40c74b:	add    DWORD PTR [ebp-0x1],ebp
  40c74e:	add    BYTE PTR [eax],al
  40c750:	push   cs
  40c751:	jle    0x40c6fc
  40c753:	je     0x40c75a
  40c755:	es ins DWORD PTR es:[edi],dx
  40c757:	pusha  
  40c758:	(bad)  
  40c759:	xchg   edx,eax
  40c75a:	jp     0x40c7a0
  40c75c:	jmp    0xef3cf5eb
  40c761:	or     BYTE PTR [ebx-0x648ea302],bh
  40c767:	fist   WORD PTR [eax+0x72]
  40c76a:	test   al,0x67
  40c76c:	jno    0x40c7af
  40c76e:	inc    ebx
  40c76f:	add    cl,bl
  40c771:	icebp  
  40c772:	cmc    
  40c773:	inc    esi
  40c775:	sub    eax,0x3c75401c
  40c77a:	add    al,0xff
  40c77c:	cmp    al,0xb5
  40c77e:	fwait
  40c77f:	sub    eax,0xb027d65
  40c784:	jno    0x40c79a
  40c786:	sbb    eax,0x24db090c
  40c78b:	inc    ebx
  40c78c:	xor    DWORD PTR [eax+ebx*1-0xa],edi
  40c790:	mov    ss,WORD PTR [ebx-0x2811e3c8]
  40c796:	daa    
  40c797:	add    al,0x7e
  40c799:	or     DWORD PTR [ecx-0x16b7df64],esi
  40c79f:	add    edi,DWORD PTR [edx]
  40c7a1:	push   esp
  40c7a2:	hlt    
  40c7a3:	or     ebx,ecx
  40c7a5:	loop   0x40c753
  40c7a7:	inc    edx
  40c7a8:	xor    DWORD PTR [esp+esi*4-0xb],edi
  40c7ac:	push   esi
  40c7ad:	xchg   ebx,eax
  40c7ae:	mov    eax,0xa7d7fe1b
  40c7b3:	add    eax,DWORD PTR [eax]
  40c7b5:	add    BYTE PTR [esi+0x9],al
  40c7b8:	xor    DWORD PTR [esp+eax*2+0x2a03e947],ebx
  40c7bf:	push   esp
  40c7c0:	mov    ebx,0xe914993e
  40c7c5:	cwde   
  40c7c6:	in     al,0x92
  40c7c8:	fwait
  40c7c9:	not    DWORD PTR [esi]
  40c7cb:	into   
  40c7cc:	mov    ebx,0xdb9317a8
  40c7d1:	pop    ebx
  40c7d2:	xchg   esp,eax
  40c7d3:	aad    0xe8
  40c7d5:	test   al,0x7d
  40c7d7:	and    BYTE PTR [ecx],dl
  40c7d9:	pop    eax
  40c7da:	pop    ebp
  40c7db:	xchg   ebx,eax
  40c7dc:	std    
  40c7dd:	test   al,0x7d
  40c7df:	nop
  40c7e0:	cmc    
  40c7e1:	cs in  eax,0x92
  40c7e4:	jae    0x40c7dd
  40c7e6:	into   
  40c7e7:	addr16 inc ebx
  40c7e9:	test   eax,0xb45392df
  40c7ee:	xlat   BYTE PTR ds:[ebx]
  40c7ef:	or     cl,al
  40c7f1:	test   al,0x45
  40c7f3:	and    cl,al
  40c7f5:	shl    DWORD PTR [ebp-0x6d],0xc5
  40c7f9:	test   al,0x45
  40c7fb:	js     0x40c7ba
  40c7fd:	cs aad 0x92
  40c800:	(bad)  
  40c801:	cmp    ebp,DWORD PTR [ecx-0x27f34886]
  40c807:	xchg   ecx,eax
  40c808:	(bad)  
  40c809:	sbb    al,0xdd
  40c80b:	jp     0x40c7fd
  40c80d:	or     eax,ecx
  40c80f:	xchg   ecx,eax
  40c810:	pop    esi
  40c811:	aaa    
  40c812:	retf   0xf54
  40c815:	jmp    0x6b2c6711
  40c81a:	add    BYTE PTR [eax],al
  40c81c:	mov    esi,0x26fc827a
  40c821:	sbb    DWORD PTR [edi],ecx
  40c823:	ins    BYTE PTR es:[edi],dx
  40c824:	inc    ebp
  40c825:	adc    eax,0xd7dfe900
  40c82a:	repz mov ecx,0xb9f7d7e7
  40c830:	(bad)  
  40c832:	sti    
  40c833:	mov    ecx,0xd4ff162c
  40c838:	and    bh,BYTE PTR [eax+eiz*1+0x3e]
  40c83c:	mov    DWORD PTR [ecx+0x138abc82],edx
  40c842:	(bad)  
  40c844:	in     eax,0x91
  40c846:	(bad)  
  40c847:	jmp    0x7734d125
  40c84c:	pop    edi
  40c84d:	test   BYTE PTR [edi-0x7],ah
  40c850:	push   esi
  40c851:	sar    edi,cl
  40c853:	adc    eax,0xc3e7845f
  40c858:	cld    
  40c859:	xchg   ecx,eax
  40c85a:	(bad)  
  40c85b:	repnz repnz and al,BYTE PTR [ebp+0x143221]
  40c863:	fs das 
  40c865:	mov    BYTE PTR [edi+0x5c],cl
  40c868:	daa    
  40c869:	mov    WORD PTR [edi+0x74],cs
  40c86c:	jo     0x40c7fe
  40c86e:	dec    edi
  40c86f:	push   ebx
  40c870:	sub    eax,0xaaf97491
  40c875:	ja     0x40c86c
  40c877:	into   
  40c878:	mov    ss,WORD PTR [esi+0x17f0007c]
  40c87e:	jne    0x18f0c884
  40c884:	add    BYTE PTR [eax],al
  40c886:	out    0x43,eax
  40c888:	hlt    
  40c889:	push   0x40d5c3
  40c88e:	rol    BYTE PTR [edi-0x7177ffd0],0xbe
  40c895:	nop    ebp
  40c898:	(bad)  
  40c899:	call   FWORD PTR [eax+0x18f4440c]
  40c89f:	or     eax,DWORD PTR [eax+edi*8+0x18]
  40c8a3:	or     eax,DWORD PTR [esp+edi*8+0x48]
  40c8a7:	cs add edi,edi
  40c8aa:	pop    ebp
  40c8ab:	and    eax,0xb8feb1e8
  40c8b0:	std    
  40c8b1:	xor    DWORD PTR [ebp-0x43],0xfffffffe
  40c8b5:	push   cs
  40c8b6:	fst    QWORD PTR [esi+edi*8+0x440e58ff]
  40c8bd:	hlt    
  40c8be:	test   DWORD PTR [edi+0xae4458d],0xbc8f444
  40c8c8:	inc    esp
  40c8c9:	clc    
  40c8ca:	enter  0x440b,0xfc
  40c8ce:	fsubr  DWORD PTR [edx]
  40c8d0:	add    al,0xff
  40c8d2:	mov    ebp,0x2e89e824
  40c8d7:	mov    ecx,0xbcb583fd
  40c8dc:	push   DWORD PTR [edi+edx*8-0x2f]
  40c8e0:	add    ebp,DWORD PTR [esi+ebp*4+0xfeffd7]
  40c8e7:	add    bh,ah
  40c8e9:	mov    ecx,0x4cdc7fd
  40c8ee:	gs inc ecx
  40c8f0:	enter  0xfdb9,0xff
  40c8f4:	not    ecx
  40c8f6:	add    esi,DWORD PTR [ecx+esi*1-0x39ffbb1f]
  40c8fd:	popa   
  40c8fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c8ff:	(bad)  
  40c900:	mov    esi,0x33e7b04f
  40c905:	iret   
  40c906:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c907:	(bad)  
  40c908:	jbe    0x40c949
  40c90a:	pushf  
  40c90b:	add    BYTE PTR [ecx],dh
  40c90d:	jnp    0x40c911
  40c90f:	sbb    DWORD PTR [edi+eiz*8+0x1c],0x41
  40c914:	xor    DWORD PTR [edx+0x67b2292e],esi
  40c91a:	jb     0x40c981
  40c91c:	lock jp 0x40c8c4
  40c91f:	jae    0x40c972
  40c921:	(bad)  
  40c922:	out    0xb3,eax
  40c924:	(bad)  
  40c926:	add    al,0xff
  40c928:	in     eax,0x71
  40c92a:	sbb    dh,al
  40c92c:	pushf  
  40c92d:	cmp    al,BYTE PTR [ecx*4-0xad1d0c]
  40c934:	(bad)  
  40c936:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c937:	je     0x40c976
  40c939:	jmp    0xfeaa:0x7259082f
  40c940:	ds inc ebx
  40c942:	ror    DWORD PTR [edi],0x31
  40c945:	test   al,0x79
  40c947:	jmp    0x40c8fb
  40c949:	inc    ecx
  40c94a:	xchg   edi,eax
  40c94b:	inc    BYTE PTR [eax]
  40c94d:	add    BYTE PTR [ebp+esi*2+0x36789c9a],bl
  40c954:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c955:	imul   eax,DWORD PTR [ecx+0x0],0x2661f040
  40c95c:	xor    BYTE PTR [eax],cl
  40c95e:	sbb    DWORD PTR [edi-0x7d0100b6],eax
  40c964:	ret    0x2d74
  40c967:	inc    esp
  40c968:	rol    DWORD PTR [edi],0x31
  40c96b:	xchg   ebx,eax
  40c96c:	adc    ch,BYTE PTR [eax-0x6]
  40c96f:	mov    edx,0x14ac0043
  40c974:	sub    al,0xb4
  40c976:	data16 jl 0x40c94e
  40c979:	inc    ebp
  40c97a:	into   
  40c97b:	(bad)  
  40c97c:	loope  0x40c941
  40c97e:	cmp    eax,0x36c2a018
  40c983:	adc    al,0xae
  40c985:	aas    
  40c986:	lds    edx,FWORD PTR ds:0xa13103e9
  40c98c:	sub    ebx,DWORD PTR [eax-0x3cc710a]
  40c992:	xchg   esi,eax
  40c993:	cmp    DWORD PTR [ebx-0x5b],eax
  40c996:	xchg   edi,eax
  40c997:	sbb    ebp,DWORD PTR [ecx+0x13933730]
  40c99d:	cwde   
  40c99e:	xchg   BYTE PTR [eax],cl
  40c9a0:	out    0xd8,eax
  40c9a2:	mov    esi,0x76fcaa5d
  40c9a7:	(bad)  
  40c9a9:	mov    edx,0x9c98195b
  40c9ae:	jecxz  0x40c9c4
  40c9b0:	sub    cl,bh
  40c9b2:	add    BYTE PTR [eax],al
  40c9b4:	sahf   
  40c9b5:	or     DWORD PTR [esi+0x4c],ebx
  40c9b8:	mov    dl,0x8c
  40c9ba:	out    0x2e,eax
  40c9bc:	xor    al,0xcc
  40c9be:	call   0x6a54f9c6
  40c9c3:	stos   DWORD PTR es:[edi],eax
  40c9c4:	xor    DWORD PTR [eax],ecx
  40c9c6:	out    dx,eax
  40c9c7:	fdiv   DWORD PTR [esi+0x5d]
  40c9ca:	sub    bh,ah
  40c9cc:	cs mov dl,0x8c
  40c9cf:	push   ds
  40c9d0:	jo     0x40c9e6
  40c9d2:	pop    esp
  40c9d3:	aas    
  40c9d4:	or     eax,0x292f25e4
  40c9d9:	jl     0x40c9c6
  40c9db:	dec    ecx
  40c9dc:	push   cs
  40c9dd:	(bad)
  40c9e1:	or     ah,ah
  40c9e3:	add    BYTE PTR [esi],0x12
  40c9e6:	jl     0x40c9e5
  40c9e8:	mov    bl,0x10
  40c9ea:	or     eax,0x166404
  40c9ef:	ret    0x5bf2
  40c9f2:	shl    ecx,0x32
  40c9f5:	mov    eax,ds:0x8f82d544
  40c9fa:	je     0x40c9ed
  40c9fc:	stos   BYTE PTR es:[edi],al
  40c9fd:	jns    0x40ca57
  40c9ff:	(bad)  
  40ca00:	lea    edx,[ecx+0x190ee8f7]
  40ca06:	add    ecx,0x30
  40ca09:	or     DWORD PTR [esi],eax
  40ca0b:	push   0x57
  40ca0d:	cmp    bh,0x3b
  40ca10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca11:	cmp    eax,eax
  40ca13:	mov    al,ds:0x74001670
  40ca18:	add    BYTE PTR [eax],al
  40ca1a:	push   edi
  40ca1b:	or     BYTE PTR [edi-0x62],0x5f
  40ca1f:	sbb    al,0xe8
  40ca21:	mov    al,ds:0xe2fe8efb
  40ca26:	jb     0x40ca2f
  40ca28:	push   es
  40ca29:	push   0x4f
  40ca2b:	cmp    bh,0xf3
  40ca2e:	ins    BYTE PTR es:[edi],dx
  40ca2f:	cmp    eax,eax
  40ca31:	mov    al,ds:0x5c001670
  40ca36:	pop    ds
  40ca37:	or     BYTE PTR [edi+0x66],0x7
  40ca3b:	sbb    al,0xe8
  40ca3d:	mov    ebx,?
  40ca3f:	mov    ?,esi
  40ca41:	push   0xffffff9a
  40ca43:	dec    esi
  40ca44:	jne    0x40ca2d
  40ca46:	mov    cl,0xf
  40ca48:	in     al,dx
  40ca49:	jmp    0x296be055
  40ca4e:	jmp    0x40caa3
  40ca50:	pop    es
  40ca51:	jmp    0x9a2ca2f5
  40ca56:	aad    0x8
  40ca58:	or     BYTE PTR [ecx],dl
  40ca5a:	ret    0xfeec
  40ca5d:	push   ds
  40ca5e:	mov    cl,0x85
  40ca60:	pop    ds
  40ca61:	pushf  
  40ca62:	add    al,0x93
  40ca64:	jl     0x40ca63
  40ca66:	xor    eax,DWORD PTR [edi]
  40ca68:	push   es
  40ca69:	add    bl,ah
  40ca6b:	push   ecx
  40ca6c:	mov    edx,0x458d11e0
  40ca72:	sub    al,0xe1
  40ca74:	(bad)  
  40ca75:	jne    0x40ca47
  40ca77:	test   eax,0xb1cf5971
  40ca7c:	cmp    eax,0x2b380000
  40ca82:	push   es
  40ca83:	sbb    DWORD PTR [ebp-0x3c],0xfffffffe
  40ca87:	je     0x40ca5f
  40ca89:	jle    0x40ca49
  40ca8b:	leave  
  40ca8c:	mov    ah,BYTE PTR [eax]
  40ca8e:	add    BYTE PTR [ebp+0x6a4ec455],cl
  40ca94:	cmp    BYTE PTR [ecx+0x31700873],dh
  40ca9a:	pop    ecx
  40ca9b:	dec    edi
  40ca9d:	mov    ds:0xb148ec43,eax
  40caa2:	jae    0x40caac
  40caa4:	mov    al,0xc1
  40caa6:	push   esi
  40caa7:	jmp    FWORD PTR [edi+0x7a01f695]
  40caad:	push   ds
  40caae:	cmp    eax,0x5b
  40cab1:	sub    al,BYTE PTR [esi]
  40cab3:	sbb    DWORD PTR [ebp-0x43],0xfffffffe
  40cab7:	je     0x40cb0f
  40cab9:	jle    0x40ca79
  40cabb:	leave  
  40cabc:	or     ah,BYTE PTR [eax]
  40cabe:	add    BYTE PTR [ebx+0x413aa0],ah
  40cac4:	int    0xda
  40cac6:	jmp    0x40cb18
  40cac8:	jb     0x40cb43
  40caca:	std    
  40cacb:	jne    0x40cb0d
  40cacd:	mov    ecx,0xb16f5948
  40cad2:	lds    sp,DWORD PTR [edi-0x2a730028]
  40cad9:	mov    esp,0xb2096a4e
  40cade:	jae    0x40caec
  40cae0:	das    
  40cae1:	sub    ecx,DWORD PTR [eax]
  40cae3:	call   0x9771cae8
  40cae8:	cwde   
  40cae9:	(bad)  
  40caea:	(bad)  
  40caeb:	xor    eax,esi
  40caed:	pop    es
  40caee:	xor    DWORD PTR [eax+0x36b2eb8d],esi
  40caf4:	mov    al,ds:0x32876c8c
  40caf9:	call   0xfee27346
  40cafe:	(bad)  
  40caff:	out    dx,eax
  40cb00:	lahf   
  40cb01:	inc    BYTE PTR [edi+edi*2-0x56]
  40cb05:	dec    esi
  40cb06:	pop    esi
  40cb07:	mov    ax,ds:0x12e6f10a
  40cb0d:	(bad)  
  40cb0e:	cmp    al,0x83
  40cb10:	mov    eax,ds:0xdd62ad74
  40cb15:	std    
  40cb16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb17:	lds    ecx,FWORD PTR ds:0xa17b24c0
  40cb1d:	je     0x40cab4
  40cb1f:	mov    ds:0xad8e5522,al
  40cb24:	retf   
  40cb25:	shl    DWORD PTR ds:0x8d8b377b,0x9d
  40cb2c:	pop    ss
  40cb2d:	or     al,0x89
  40cb2f:	leave  
  40cb30:	and    al,0xff
  40cb32:	outs   dx,BYTE PTR ds:[esi]
  40cb33:	add    edx,0x18061273
  40cb39:	adc    BYTE PTR [ecx],al
  40cb3b:	xchg   ebx,eax
  40cb3c:	int3   
  40cb3d:	pusha  
  40cb3e:	push   esi
  40cb3f:	cmc    
  40cb40:	xor    ch,BYTE PTR [eax-0x47]
  40cb43:	mov    al,0x42
  40cb45:	add    BYTE PTR [esi+0x6f],al
  40cb48:	cli    
  40cb49:	inc    BYTE PTR [eax]
  40cb4b:	add    ah,al
  40cb4d:	xchg   BYTE PTR [edx],dh
  40cb4f:	(bad)  
  40cb50:	mov    esp,0xb1e5aa82
  40cb55:	dec    edx
  40cb56:	mov    ds:0xa1a0e4e7,al
  40cb5b:	(bad)  
  40cb5c:	call   0x7e40c2a0
  40cb61:	adc    al,0x72
  40cb63:	scas   eax,DWORD PTR es:[edi]
  40cb64:	xchg   esi,eax
  40cb65:	adc    al,0xe9
  40cb67:	mov    dl,0xc4
  40cb69:	cld    
  40cb6a:	pop    ebp
  40cb6b:	inc    esi
  40cb6c:	jo     0x40cb82
  40cb6e:	push   cs
  40cb6f:	sbb    BYTE PTR ds:0x65a2e2fe,ah
  40cb75:	sbb    al,0x11
  40cb77:	push   ebx
  40cb78:	out    0x8b,eax
  40cb7a:	cmc    
  40cb7b:	sub    dh,BYTE PTR [ecx]
  40cb7d:	adc    al,0xfe
  40cb7f:	pusha  
  40cb80:	dec    esi
  40cb81:	push   esp
  40cb82:	sub    DWORD PTR [ebx+0x31],eax
  40cb85:	mov    edx,DWORD PTR [ebx+0x10]
  40cb88:	pop    ebx
  40cb89:	cs (bad) 
  40cb8b:	pop    ss
  40cb8c:	sub    DWORD PTR [edi+ebp*2-0x5f],edi
  40cb90:	mov    bh,0x8b
  40cb92:	push   eax
  40cb93:	add    al,0x31
  40cb95:	jnp    0x40cc15
  40cb97:	sub    al,0xde
  40cb99:	xlat   BYTE PTR ds:[ebx]
  40cb9a:	daa    
  40cb9b:	add    al,0x9e
  40cb9d:	add    ebp,ebx
  40cb9f:	sub    eax,0xc1b8b35
  40cba4:	cdq    
  40cba5:	xchg   esi,eax
  40cba6:	popf   
  40cba7:	mov    eax,ds:0x3e8fc87
  40cbac:	mov    cs,edx
  40cbae:	add    ah,al
  40cbb0:	add    BYTE PTR [eax],al
  40cbb2:	repz aam 0xe8
  40cbb5:	mov    al,ds:0x1317e5
  40cbba:	add    cx,sp
  40cbbd:	stos   DWORD PTR es:[edi],eax
  40cbbe:	retf   
  40cbbf:	mov    ch,BYTE PTR [ebp-0x5f]
  40cbc2:	into   
  40cbc3:	adc    ebp,ecx
  40cbc5:	mov    al,0x8c
  40cbc7:	cld    
  40cbc8:	xchg   ebp,eax
  40cbc9:	inc    ebp
  40cbca:	lock adc edx,DWORD PTR [esi+0x17]
  40cbce:	sub    eax,0xbda109fe
  40cbd3:	sbb    edx,DWORD PTR [ecx+0x38]
  40cbd6:	mov    edi,DWORD PTR cs:0x14312c
  40cbdd:	inc    esi
  40cbde:	xchg   ebx,eax
  40cbdf:	repz mov edi,0xff1473aa
  40cbe5:	pushf  
  40cbe6:	ds (bad) 
  40cbe8:	and    bl,BYTE PTR [esi]
  40cbea:	push   ds
  40cbeb:	sbb    al,0xe8
  40cbed:	aam    0xd1
  40cbef:	mov    esi,edi
  40cbf1:	and    bh,ch
  40cbf3:	adc    al,BYTE PTR [eax]
  40cbf5:	pushf  
  40cbf6:	mov    ebp,0x9125827e
  40cbfb:	cld    
  40cbfc:	inc    DWORD PTR [edx-0x1e8b75fc]
  40cc02:	mov    bl,al
  40cc04:	pop    ecx
  40cc05:	out    0x91,al
  40cc07:	fwait
  40cc08:	inc    esp
  40cc09:	fstp   QWORD PTR [edx]
  40cc0b:	in     al,dx
  40cc0c:	inc    ebx
  40cc0d:	sub    BYTE PTR ds:0x8ae1748b,dh
  40cc13:	xlat   BYTE PTR ds:[ebx]
  40cc14:	inc    dh
  40cc16:	add    BYTE PTR [eax],al
  40cc18:	ror    DWORD PTR [ecx-0x2e428c],1
  40cc1e:	pop    es
  40cc1f:	sar    DWORD PTR [ebx],0xee
  40cc22:	(bad)  
  40cc23:	scas   al,BYTE PTR es:[edi]
  40cc24:	imul   edx,DWORD PTR [ebx+eax*1-0x17],0x47
  40cc29:	lahf   
  40cc2a:	jmp    0x40cc96
  40cc2c:	outs   dx,BYTE PTR ds:[esi]
  40cc2d:	mov    gs,WORD PTR [ecx-0x17]
  40cc30:	dec    esp
  40cc31:	inc    edi
  40cc32:	call   DWORD PTR [eiz*1-0x6fdce384]
  40cc39:	mov    DWORD PTR [eax+0x66f29124],ecx
  40cc3f:	sub    eax,0xf4ff13f2
  40cc44:	sub    bh,BYTE PTR [ebx+ebx*1+0x66]
  40cc48:	xchg   ecx,eax
  40cc49:	mov    esi,edi
  40cc4b:	aam    0xa6
  40cc4d:	mov    DWORD PTR [ecx+eiz*8-0x76],esi
  40cc51:	rcr    BYTE PTR [ecx+0x4e],cl
  40cc54:	xchg   ecx,eax
  40cc55:	pop    ebx
  40cc56:	rol    DWORD PTR [eax],0x1c
  40cc59:	push   ss
  40cc5a:	push   ebp
  40cc5b:	mov    esi,DWORD PTR [eax+edx*4-0x3e]
  40cc5f:	clc    
  40cc60:	repnz adc eax,0x2247346a
  40cc66:	or     al,ch
  40cc68:	and    al,0x4e
  40cc6a:	(bad)  
  40cc6b:	inc    DWORD PTR [ecx-0x6697042e]
  40cc71:	rol    DWORD PTR [eax+0x0],1
  40cc74:	daa    
  40cc75:	and    cl,BYTE PTR [eax]
  40cc77:	call   0x3e7fbf
  40cc7c:	add    BYTE PTR [eax],al
  40cc7e:	ret    0x6815
  40cc81:	xchg   ecx,eax
  40cc82:	mov    esi,ss
  40cc84:	jmp    DWORD PTR [edi+0x45]
  40cc87:	rol    DWORD PTR [eax+0x0],1
  40cc8a:	xlat   BYTE PTR ds:[ebx]
  40cc8b:	imul   edx,DWORD PTR [ecx+0x29],0x19
  40cc8f:	adc    al,ch
  40cc91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc92:	pop    es
  40cc93:	test   eax,0x2c880bfd
  40cc98:	aas    
  40cc99:	mov    DWORD PTR [ebp-0x58],ebx
  40cc9c:	data16 mov BYTE PTR [edx-0x77980030],dh
  40cca3:	adc    eax,0xe0f0beef
  40cca8:	inc    ecx
  40cca9:	inc    ecx
  40ccaa:	cwde   
  40ccab:	stos   BYTE PTR es:[edi],al
  40ccac:	jae    0x40cca6
  40ccae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ccaf:	sub    ecx,DWORD PTR [eax]
  40ccb1:	call   0x3ff5ae
  40ccb6:	xor    BYTE PTR [eax+0x3d5840b8],bl
  40ccbc:	add    BYTE PTR [eax],al
  40ccbe:	mov    bh,0xea
  40ccc0:	data16 ror BYTE PTR [ebx],0xcf
  40ccc4:	(bad)  
  40ccc5:	(bad)  
  40ccc6:	pop    ebp
  40ccc7:	lods   eax,DWORD PTR ds:[esi]
  40ccc8:	std    
  40ccc9:	jne    0x40cd0b
  40cccb:	mov    ebp,0xa8e77f74
  40ccd0:	std    
  40ccd1:	jne    0x40cd04
  40ccd3:	jecxz  0x40cc80
  40ccd5:	dec    ecx
  40ccd6:	aad    0xd9
  40ccd8:	sahf   
  40ccd9:	(bad)  
  40ccda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ccdb:	iret   
  40ccdc:	sahf   
  40ccdd:	je     0x40cd18
  40ccdf:	jecxz  0x40cd41
  40cce1:	pop    eax
  40cce2:	add    BYTE PTR [eax],al
  40cce4:	push   ds
  40cce5:	inc    edx
  40cce6:	int    0xc1
  40cce8:	sub    eax,0x1d8b377b
  40cced:	inc    bh
  40ccef:	sti    
  40ccf0:	fwait
  40ccf1:	jnp    0x40cd1b
  40ccf3:	xor    eax,0xe80aa7fe
  40ccf8:	nop
  40ccf9:	les    ebx,FWORD PTR [ebp-0x61484702]
  40ccff:	les    ebp,FWORD PTR [bp+0x43]
  40cd04:	fiadd  WORD PTR [edi]
  40cd06:	or     ebp,eax
  40cd08:	push   ecx
  40cd09:	jns    0x40cca8
  40cd0b:	dec    dh
  40cd0d:	out    0x9f,eax
  40cd0f:	(bad)  
  40cd10:	cmp    al,0x83
  40cd12:	stos   BYTE PTR es:[edi],al
  40cd13:	mov    ebx,DWORD PTR [eax+0x62]
  40cd16:	popf   
  40cd17:	enter  0x6ef3,0x2
  40cd1b:	push   ebp
  40cd1c:	mov    edx,0xa5c3815e
  40cd21:	in     al,0x3
  40cd23:	push   0x67
  40cd25:	ret    0x817
  40cd28:	mov    DWORD PTR [edx+0x38eff3b],ecx
  40cd2e:	dec    eax
  40cd2f:	cld    
  40cd30:	sbb    ecx,edx
  40cd32:	inc    esi
  40cd33:	inc    ecx
  40cd34:	xor    DWORD PTR [edx-0x3676f7e9],esp
  40cd3a:	pushf  
  40cd3b:	(bad)  
  40cd3c:	outs   dx,BYTE PTR ds:[esi]
  40cd3d:	xchg   ecx,eax
  40cd3e:	pop    ss
  40cd3f:	cld    
  40cd40:	data16 jg 0x40cd4d
  40cd43:	call   0xfedff142
  40cd48:	add    BYTE PTR [eax],al
  40cd4a:	push   0xe40006bc
  40cd4f:	adc    esi,DWORD PTR [edx-0x51]
  40cd52:	mov    bl,0x4f
  40cd54:	pop    esp
  40cd55:	sub    DWORD PTR [ecx],esi
  40cd57:	(bad)  
  40cd58:	sbb    eax,0x411bbd9f
  40cd5d:	sahf   
  40cd5e:	xchg   BYTE PTR [edi-0x779273bb],al
  40cd64:	rcl    BYTE PTR [ebx+0x72],1
  40cd67:	aad    0xe8
  40cd69:	sahf   
  40cd6a:	popf   
  40cd6b:	sbb    al,0x41
  40cd6d:	popf   
  40cd6e:	or     eax,0x7d9e2588
  40cd73:	mov    BYTE PTR ds:0xc27c2918,bl
  40cd79:	cmp    al,0xf6
  40cd7b:	xchg   DWORD PTR [edi],ebx
  40cd7d:	shl    DWORD PTR [edx],0x14
  40cd80:	pushf  
  40cd81:	mov    bl,dl
  40cd83:	xchg   ebx,eax
  40cd84:	and    al,0x9f
  40cd86:	dec    eax
  40cd87:	adc    al,0x83
  40cd89:	fcmovnbe st,st(7)
  40cd8b:	add    ecx,esp
  40cd8d:	stos   DWORD PTR es:[edi],eax
  40cd8e:	cld    
  40cd8f:	in     al,dx
  40cd90:	in     eax,0x9d
  40cd92:	mov    ecx,0x792cdcd1
  40cd97:	shl    BYTE PTR [edi],1
  40cd99:	add    al,0xb6
  40cd9b:	add    ecx,esp
  40cd9d:	stos   DWORD PTR es:[edi],eax
  40cd9e:	jge    0x40cd29
  40cda0:	lds    ebx,FWORD PTR [ebp-0x6242fe59]
  40cda6:	and    eax,0xfe9bc11c
  40cdab:	xchg   BYTE PTR [ebp+0x700000cb],ch
  40cdb1:	adc    cl,ch
  40cdb3:	ss mov edx,0x2d179d78
  40cdb9:	jl     0x40ce0c
  40cdbb:	cmp    eax,0xc3e18776
  40cdc0:	loop   0x40cdea
  40cdc2:	adc    ecx,ecx
  40cdc4:	repnz aam 0xe8
  40cdc7:	xor    ecx,DWORD PTR [ecx-0x1c]
  40cdca:	call   DWORD PTR ds:0x6e4f86b4
  40cdd0:	es and al,0x50
  40cdd3:	pushw  ds
  40cdd5:	sbb    al,0xe8
  40cdd7:	push   esi
  40cdd8:	xchg   DWORD PTR [esi-0x1517be02],eax
  40cdde:	dec    BYTE PTR [esi-0x6]
  40cde1:	push   esp
  40cde2:	or     ebp,ecx
  40cde4:	pop    edi
  40cde5:	fwait
  40cde6:	jmp    0x40ce52
  40cde8:	jmp    0x3304246b
  40cded:	cli    
  40cdee:	cmp    BYTE PTR [esi],ch
  40cdf0:	es sbb al,0xe8
  40cdf3:	xchg   ebp,eax
  40cdf4:	dec    edx
  40cdf5:	xchg   esi,edi
  40cdf7:	jo     0x40ce6f
  40cdf9:	mov    BYTE PTR [edx+0x413c46d4],cl
  40cdff:	jmp    0x7d4113b6
  40ce04:	inc    esi
  40ce05:	cld    
  40ce06:	shl    DWORD PTR [ebp+0x1571473],0x7c
  40ce0d:	cmp    BYTE PTR [eax],al
  40ce0f:	jmp    0x46b4224d
  40ce14:	add    BYTE PTR [eax],al
  40ce16:	cld    
  40ce17:	jnp    0x40cdf2
  40ce19:	inc    ebp
  40ce1a:	pushf  
  40ce1b:	test   DWORD PTR [edx],ecx
  40ce1d:	test   eax,0x2488e11e
  40ce22:	int    0x85
  40ce24:	je     0x40cde7
  40ce26:	pop    eax
  40ce27:	sub    bh,bh
  40ce29:	xor    al,0x2d
  40ce2b:	jl     0x40cdb2
  40ce2d:	mov    dh,0xb5
  40ce2f:	test   esi,edi
  40ce31:	xor    al,0xad
  40ce33:	cld    
  40ce34:	sbb    esp,DWORD PTR [esi+0x20e81c1f]
  40ce3a:	pushf  
  40ce3b:	test   esi,edi
  40ce3d:	xchg   esi,eax
  40ce3e:	pop    ds
  40ce3f:	mov    WORD PTR [ecx-0x36],gs
  40ce42:	int    0xff
  40ce44:	pop    es
  40ce45:	add    al,al
  40ce47:	ss (bad) 
  40ce49:	(bad)  
  40ce4a:	fistp  QWORD PTR [edx]
  40ce4c:	aad    0x44
  40ce4e:	or     DWORD PTR [eax],edx
  40ce50:	push   DWORD PTR [ebp-0x40]
  40ce53:	mov    edx,0xa7cf5e73
  40ce58:	or     eax,eax
  40ce5a:	test   BYTE PTR fs:[esi-0x1],cl
  40ce5e:	push   ebp
  40ce5f:	stos   BYTE PTR es:[edi],al
  40ce60:	dec    esi
  40ce61:	inc    DWORD PTR ds:0x466ce81a
  40ce67:	test   al,0xfd
  40ce69:	call   0x4019b6
  40ce6e:	pop    edi
  40ce6f:	push   ds
  40ce70:	clc    
  40ce71:	call   0x4019f6
  40ce76:	dec    esp
  40ce77:	fs mov esi,0x1f0000b9
  40ce7d:	test   al,0xfd
  40ce7f:	call   FWORD PTR [edx]
  40ce81:	div    DWORD PTR [esi]
  40ce83:	pop    es
  40ce84:	lds    ecx,FWORD PTR [ebp-0x57d38a03]
  40ce8a:	jae    0x40ce94
  40ce8c:	inc    eax
  40ce8d:	xchg   BYTE PTR [esi-0x1],dl
  40ce90:	fisttp WORD PTR [ecx-0x37]
  40ce93:	ret    0x11d4
  40ce96:	push   ebp
  40ce97:	mov    ebx,esp
  40ce99:	test   eax,0xcae00c73
  40ce9e:	pop    esp
  40ce9f:	(bad)  
  40cea0:	fist   WORD PTR ds:0x399d74c0
  40cea6:	in     al,0x44
  40cea8:	pop    ecx
  40cea9:	adc    BYTE PTR [eax-0x18],dl
  40ceac:	pop    ebx
  40cead:	dec    edx
  40ceae:	(bad)  
  40ceaf:	(bad)  
  40ceb0:	cmp    BYTE PTR [ecx-0x56d7ef8d],ch
  40ceb6:	jae    0x40cec0
  40ceb8:	mov    al,ds:0x9fffd486
  40cebd:	mov    eax,0x9e315a6c
  40cec2:	call   0xba55:0x26773c8
  40cec9:	lahf   
  40ceca:	xchg   bl,al
  40cecc:	pop    ecx
  40cecd:	push   ds
  40cece:	cs add bl,cl
  40ced1:	rcr    BYTE PTR [ecx-0x756cc68c],0x56
  40ced8:	inc    esi
  40ced9:	out    dx,al
  40ceda:	mov    WORD PTR [ebp+edi*1+0x2],es
  40cede:	fldcw  WORD PTR [ebx+0x0]
  40cee1:	add    BYTE PTR [ecx],cl
  40cee3:	mov    esp,0x7b6e8002
  40cee8:	push   cs
  40cee9:	pop    ecx
  40ceea:	cdq    
  40ceeb:	cs inc eax
  40ceed:	inc    ecx
  40ceee:	xor    DWORD PTR [esi+0x7b45d9aa],ebx
  40cef4:	add    cl,BYTE PTR [ebx]
  40cef6:	icebp  
  40cef7:	mov    esi,0x301956d6
  40cefc:	daa    
  40cefd:	(bad)  
  40cefe:	inc    BYTE PTR [ecx-0xbbc8c3e]
  40cf04:	inc    eax
  40cf05:	clc    
  40cf06:	out    dx,al
  40cf07:	lahf   
  40cf08:	call   0xc908:0x110e4b69
  40cf0f:	in     al,dx
  40cf10:	call   0x5bf8:0xf7dd6fe
  40cf17:	push   edi
  40cf18:	cdq    
  40cf19:	je     0x40cf54
  40cf1b:	arpl   WORD PTR [ebx],bx
  40cf1d:	(bad)  
  40cf1e:	mov    esi,0xb9749965
  40cf23:	shl    dh,1
  40cf25:	(bad)  
  40cf26:	and    al,0x73
  40cf28:	stos   BYTE PTR es:[edi],al
  40cf29:	imul   esp,DWORD PTR [esi+0x24fe994d],0x53
  40cf30:	stos   BYTE PTR es:[edi],al
  40cf31:	std    
  40cf32:	clc    
  40cf33:	mov    ebp,0xbb42fb99
  40cf38:	pop    ebx
  40cf39:	inc    BYTE PTR [esi-0x7f6559ed]
  40cf3f:	mov    ch,0xe0
  40cf41:	add    bh,ah
  40cf43:	lods   al,BYTE PTR ds:[esi]
  40cf44:	xchg   ebp,eax
  40cf45:	adc    BYTE PTR [eax],al
  40cf47:	add    BYTE PTR [ebp-0x7c],ch
  40cf4a:	adc    ecx,DWORD PTR [ecx+ebx*2]
  40cf4d:	lock sbb eax,0xafe45f9b
  40cf53:	lds    esi,FWORD PTR [edx]
  40cf55:	adc    al,0x1c
  40cf57:	(bad)  
  40cf58:	pop    edx
  40cf59:	nop
  40cf5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf5b:	xchg   edi,eax
  40cf5c:	(bad)  
  40cf5e:	call   0xd3c5c990
  40cf63:	or     ecx,DWORD PTR [ecx+0xe]
  40cf66:	mov    esi,0xa38e2f9a
  40cf6b:	xchg   edi,eax
  40cf6c:	mov    ebx,0x71ebd541
  40cf71:	adc    al,0x69
  40cf73:	ficom  DWORD PTR [esi]
  40cf75:	or     BYTE PTR [ecx-0x5826e1d5],ch
  40cf7b:	add    ebx,DWORD PTR [esi+0x6c]
  40cf7e:	mov    eax,0xf183fee7
  40cf83:	ret    
  40cf84:	xor    BYTE PTR [edi],0xbe
  40cf87:	stos   DWORD PTR es:[edi],eax
  40cf88:	arpl   di,si
  40cf8a:	or     eax,0x7c543b9a
  40cf8f:	cld    
  40cf90:	outs   dx,BYTE PTR ds:[esi]
  40cf91:	in     al,dx
  40cf92:	call   0x8103959a
  40cf97:	pushf  
  40cf98:	jb     0x40cf6f
  40cf9a:	call   0xf14a95d2
  40cf9f:	stos   DWORD PTR es:[edi],eax
  40cfa0:	push   ecx
  40cfa1:	add    bl,dh
  40cfa3:	cdq    
  40cfa4:	into   
  40cfa5:	xchg   ecx,eax
  40cfa6:	das    
  40cfa7:	cdq    
  40cfa8:	scas   eax,DWORD PTR es:[edi]
  40cfa9:	sbb    BYTE PTR [ecx],0xc4
  40cfac:	add    BYTE PTR [eax],al
  40cfae:	jmp    0x9fda9536
  40cfb3:	xchg   BYTE PTR [esi+0x92fdc],cl
  40cfb9:	test   eax,0xaefc08a8
  40cfbe:	ss or  al,0xe8
  40cfc1:	fwait
  40cfc2:	inc    ebx
  40cfc3:	cmp    esi,0x3e
  40cfc6:	push   0x55
  40cfc8:	add    ebp,ecx
  40cfca:	pop    ds
  40cfcb:	(bad)  
  40cfcc:	jmp    0x40d038
  40cfce:	jno    0x40d04b
  40cfd0:	add    ah,0x3
  40cfd3:	xor    DWORD PTR [ecx-0x17],eax
  40cfd6:	xor    cl,BYTE PTR [ecx]
  40cfd8:	add    al,0xa0
  40cfda:	ja     0x40cfeb
  40cfdc:	add    BYTE PTR [ebx],al
  40cfde:	sub    eax,0x99d2ffee
  40cfe3:	xor    BYTE PTR [ebp+ebp*8+0x4],0x14
  40cfe8:	push   0xffffffe9
  40cfea:	fidivr DWORD PTR [eax]
  40cfec:	sub    ebp,ecx
  40cfee:	xor    cl,BYTE PTR [ebp+0x7b84144]
  40cff4:	clc    
  40cff5:	push   ecx
  40cff6:	arpl   bp,bx
  40cff8:	(bad)  
  40cff9:	ss mov edx,0x362efbd7
  40cfff:	jl     0x40cfff
  40d001:	pushf  
  40d002:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d003:	in     al,dx
  40d004:	(bad)  
  40d005:	push   ds
  40d006:	adc    BYTE PTR es:[edx-0x17],ch
  40d00a:	sbb    al,0x14
  40d00c:	call   0xfec3a5f6
  40d011:	je     0x40d013
  40d013:	add    BYTE PTR [esi],bl
  40d015:	mov    BYTE PTR [edi-0x6d],cl
  40d018:	xor    ch,dh
  40d01a:	inc    DWORD PTR [edx-0x1200133c]
  40d020:	aaa    
  40d021:	cmp    dh,0xfc
  40d024:	arpl   WORD PTR [ecx],si
  40d026:	inc    ecx
  40d027:	jmp    0x614f9363
  40d02c:	mov    edx,0xb5e9fe82
  40d031:	out    0xf3,eax
  40d033:	add    BYTE PTR [ebx],ah
  40d035:	mov    DWORD PTR [ebx+0x6a46d845],ecx
  40d03b:	add    dl,dh
  40d03d:	mov    DWORD PTR [eax+0x0],ebp
  40d040:	lock jge 0x40d086
  40d043:	inc    ecx
  40d044:	mov    BYTE PTR [ebx+0x4897f473],bl
  40d04a:	adc    BYTE PTR [ebp-0xa0e168],al
  40d050:	cmp    eax,0x38abe6a8
  40d055:	popf   
  40d056:	std    
  40d057:	mov    DWORD PTR ds:0x4cc009b0,ecx
  40d05d:	into   
  40d05e:	(bad)  
  40d05f:	jne    0x40d011
  40d061:	scas   al,BYTE PTR es:[edi]
  40d062:	jmp    0x40d0bc
  40d064:	xlat   BYTE PTR ds:[ebx]
  40d065:	fwait
  40d066:	xchg   DWORD PTR [ebp-0x1c],eax
  40d069:	fwait
  40d06a:	jae    0x40d05c
  40d06c:	jo     0x40d055
  40d06e:	push   eax
  40d06f:	push   DWORD PTR [edi-0x64]
  40d072:	jae    0x40d05c
  40d074:	ja     0x40d088
  40d076:	in     al,dx
  40d077:	inc    DWORD PTR [eax]
  40d079:	add    ch,bl
  40d07b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d07c:	out    0x2c,al
  40d07e:	test   eax,0x580bfd9c
  40d083:	adc    DWORD PTR [ebx],ebx
  40d085:	push   0xbeef1608
  40d08a:	pop    ss
  40d08b:	adc    cl,BYTE PTR [eax]
  40d08d:	call   0x40039f
  40d092:	aaa    
  40d093:	adc    ch,al
  40d095:	call   FWORD PTR [ebp-0x47]
  40d098:	std    
  40d099:	jne    0x40d07b
  40d09b:	lods   eax,DWORD PTR ds:[esi]
  40d09c:	pop    ebx
  40d09d:	push   ebp
  40d09e:	(bad)  
  40d09f:	test   eax,0xaec475fd
  40d0a4:	xchg   esp,eax
  40d0a5:	pop    eax
  40d0a6:	xlat   BYTE PTR ds:[ebx]
  40d0a7:	test   eax,0xb0d875fd
  40d0ac:	stc    
  40d0ad:	dec    edi
  40d0ae:	xor    DWORD PTR [edx-0x6a],ebp
  40d0b1:	mov    bh,ah
  40d0b3:	data16 mov dl,BYTE PTR [ecx]
  40d0b6:	sahf   
  40d0b7:	inc    eax
  40d0b8:	nop
  40d0b9:	inc    BYTE PTR [ebx]
  40d0bb:	adc    DWORD PTR [ebp+0x1a538d74],0x58
  40d0c2:	xchg   BYTE PTR [edx+0x6b2dc1cc],dh
  40d0c8:	das    
  40d0c9:	mov    eax,DWORD PTR [ebp+0x590c10a2]
  40d0cf:	out    0x37,al
  40d0d1:	jmp    DWORD PTR [esi+0x76]
  40d0d4:	ret    0x873
  40d0d7:	and    eax,DWORD PTR [ebx]
  40d0d9:	inc    ebp
  40d0da:	lock push 0x32
  40d0dd:	call   0x2721d0e2
  40d0e2:	xchg   edi,eax
  40d0e3:	(bad)  
  40d0e4:	loope  0x40d0f8
  40d0e6:	inc    ebp
  40d0e7:	mov    edi,0x2a6af1
  40d0ec:	xor    edx,edx
  40d0ee:	push   ebp
  40d0ef:	addr16 dec eax
  40d0f1:	mov    al,0x43
  40d0f3:	add    BYTE PTR [ecx+0x90810d2],al
  40d0f9:	arpl   WORD PTR [ecx],bx
  40d0fb:	call   DWORD PTR [esi]
  40d0fd:	jecxz  0x40d0d5
  40d0ff:	push   edi
  40d100:	push   cs
  40d101:	dec    edx
  40d102:	xchg   edi,eax
  40d103:	je     0x40d13a
  40d105:	sar    DWORD PTR [ebp+0x5b],cl
  40d108:	(bad)  
  40d109:	cmp    DWORD PTR [ebx],ecx
  40d10b:	sar    BYTE PTR [ebp+0x64],0x2a
  40d10f:	or     dh,BYTE PTR [esp+ebp*4+0x2]
  40d113:	push   eax
  40d114:	fld    DWORD PTR [ebp-0x652100ca]
  40d11a:	sub    al,BYTE PTR [ecx-0x6a]
  40d11d:	stos   BYTE PTR es:[edi],al
  40d11e:	add    ch,BYTE PTR [eax+0x31]
  40d121:	imul   esp,DWORD PTR [ebp+0x3f6459bd],0x41
  40d128:	xor    DWORD PTR [ecx+edi*1],edx
  40d12b:	xchg   edi,eax
  40d12c:	cmp    eax,0x2bd2d10c
  40d131:	adc    ebp,0xcddc38ab
  40d137:	xchg   esi,eax
  40d138:	imul   edx,DWORD PTR [ebp-0x10],0xcc8cfc03
  40d13f:	xor    BYTE PTR [edx+0x7f],0x42
  40d143:	add    al,0x0
  40d145:	add    BYTE PTR [ebx],bl
  40d147:	inc    eax
  40d148:	scas   al,BYTE PTR es:[edi]
  40d149:	adc    BYTE PTR [ecx],ch
  40d14b:	ins    BYTE PTR es:[edi],dx
  40d14c:	aam    0x30
  40d14e:	jbe    0x40d0d0
  40d150:	outs   dx,DWORD PTR ds:[esi]
  40d151:	inc    eax
  40d152:	ins    DWORD PTR es:[edi],dx
  40d153:	in     eax,dx
  40d154:	repnz xchg esi,eax
  40d156:	fisttp QWORD PTR [ebx]
  40d158:	adc    DWORD PTR [ebx],0x2985805e
  40d15e:	adc    al,BYTE PTR [ecx-0x6a6f40d]
  40d164:	jne    0x40d0fc
  40d166:	inc    edi
  40d167:	in     eax,dx
  40d168:	int3   
  40d169:	xchg   esi,eax
  40d16a:	lds    ecx,FWORD PTR [ebx]
  40d16c:	push   ecx
  40d16d:	aaa    
  40d16e:	sbb    BYTE PTR ss:[ebp-0x6a],0xa5
  40d173:	adc    BYTE PTR [ebp+0x10],0x39
  40d177:	ins    BYTE PTR es:[edi],dx
  40d178:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d179:	xor    BYTE PTR [esi],bl
  40d17b:	sub    BYTE PTR [edi],0xc1
  40d17e:	xor    dl,BYTE PTR [esp+edx*4]
  40d181:	mov    bl,BYTE PTR [edx]
  40d183:	cmp    BYTE PTR [ebx-0x72f2e6f9],0x96
  40d18a:	dec    DWORD PTR [ebx]
  40d18c:	sub    DWORD PTR [edi],ecx
  40d18e:	dec    ebp
  40d18f:	in     al,dx
  40d190:	fadd   DWORD PTR [eax+0x70]
  40d193:	adc    al,0xb9
  40d195:	stos   DWORD PTR es:[edi],eax
  40d196:	(bad)
  40d199:	xchg   esi,eax
  40d19a:	outs   dx,BYTE PTR ds:[esi]
  40d19b:	in     al,dx
  40d19c:	call   0x90ff97a4
  40d1a1:	inc    edx
  40d1a2:	je     0x40d179
  40d1a4:	(bad)  
  40d1a5:	call   0xe1b550ac
  40d1aa:	add    BYTE PTR [eax],al
  40d1ac:	mov    bh,al
  40d1ae:	jnp    0x40d196
  40d1b0:	pushf  
  40d1b1:	ja     0x40d143
  40d1b3:	les    edi,FWORD PTR ss:[esi-0x38]
  40d1b7:	stos   DWORD PTR es:[edi],eax
  40d1b8:	xor    eax,0xc9625514
  40d1bd:	xchg   edx,eax
  40d1be:	ret    
  40d1bf:	lds    ecx,FWORD PTR [ebx+0x14]
  40d1c2:	push   0xfffffffc
  40d1c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d1c5:	or     BYTE PTR [eax],cl
  40d1c7:	shl    eax,0xe2
  40d1ca:	(bad)  
  40d1cb:	scas   al,BYTE PTR es:[edi]
  40d1cc:	stos   BYTE PTR es:[edi],al
  40d1cd:	fdivr  st,st(3)
  40d1cf:	adc    edi,DWORD PTR [ebx+0x7e]
  40d1d2:	je     0x40d1c5
  40d1d4:	call   0x22ed:0xbc96fead
  40d1db:	mov    gs,WORD PTR [esi]
  40d1dd:	or     al,0xe8
  40d1df:	dec    ecx
  40d1e0:	mov    esp,0x4913fe7e
  40d1e5:	jle    0x40d25b
  40d1e7:	loope  0x40d183
  40d1e9:	test   eax,0x7ea46efe
  40d1ee:	je     0x40d255
  40d1f0:	pushf  
  40d1f1:	or     BYTE PTR [eax],cl
  40d1f3:	push   ecx
  40d1f4:	mul    dl
  40d1f6:	(bad)  
  40d1f7:	push   esi
  40d1f8:	cli    
  40d1f9:	push   esp
  40d1fa:	add    ebp,ecx
  40d1fc:	dec    edi
  40d1fd:	mov    ebp,ebx
  40d1ff:	push   0xfffffff1
  40d201:	xchg   BYTE PTR [esi-0x2d],dl
  40d204:	xor    ch,dl
  40d206:	cmp    eax,0xe80c3636
  40d20b:	mov    ecx,0x70fe7f4e
  40d210:	add    BYTE PTR [eax],al
  40d212:	or     BYTE PTR ss:[edx+0x412c16dc],0xe9
  40d21a:	mov    dl,0x3d
  40d21c:	add    BYTE PTR [ebp+0x4aec1d],dl
  40d222:	test   ecx,edx
  40d224:	call   DWORD PTR [esi+0x20]
  40d227:	frstor [edi]
  40d229:	add    al,bl
  40d22b:	or     eax,eax
  40d22d:	je     0x40d221
  40d22f:	das    
  40d230:	call   0xfdea3b13
  40d235:	or     ebx,eax
  40d237:	push   cs
  40d238:	and    BYTE PTR [ecx+0x66a055],cl
  40d23e:	mov    BYTE PTR [edi+0x3f3468bc],dh
  40d244:	inc    ecx
  40d245:	add    bh,cl
  40d247:	or     eax,0x1045fff8
  40d24c:	call   0xfdea1619
  40d251:	call   DWORD PTR ds:0x26f1e6a0
  40d257:	test   eax,0x528bfcfd
  40d25c:	mov    bh,0xff
  40d25e:	scas   eax,DWORD PTR es:[edi]
  40d25f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d260:	std    
  40d261:	repnz (bad) 
  40d263:	pop    edx
  40d264:	add    eax,0x73a7f175
  40d269:	cld    
  40d26a:	mov    edi,0x26e8080d
  40d26f:	inc    esp
  40d270:	(bad)  
  40d271:	jmp    FWORD PTR [edi+0x49]
  40d274:	rol    BYTE PTR [eax+eax*1],0x0
  40d278:	sbb    BYTE PTR [edi],ch
  40d27a:	mov    ebp,esp
  40d27c:	fwait
  40d27d:	mov    ebp,0x11f257e2
  40d282:	push   0x3f
  40d284:	outs   dx,DWORD PTR ds:[esi]
  40d285:	push   cs
  40d286:	or     al,ch
  40d288:	jo     0x40d2ce
  40d28a:	(bad)  
  40d28b:	call   DWORD PTR [ecx+0xd8bfc3e]
  40d291:	sub    BYTE PTR ss:[ecx+0x8],al
  40d295:	xchg   edx,eax
  40d296:	cmp    eax,0x6840c400
  40d29b:	pop    ecx
  40d29c:	xor    DWORD PTR [eax+0x13860041],esi
  40d2a2:	inc    eax
  40d2a3:	sub    DWORD PTR [ecx],esi
  40d2a5:	imul   eax,DWORD PTR [edi],0xffffffc0
  40d2a8:	inc    ebp
  40d2a9:	popa   
  40d2aa:	sub    ebp,eax
  40d2ac:	dec    edi
  40d2ad:	mov    edx,DWORD PTR [ebx+0xf2b2afe]
  40d2b3:	and    BYTE PTR [eax+0x31678c30],ch
  40d2b9:	imul   esp,DWORD PTR [ecx+0x48c919bd],0x41
  40d2c0:	xor    DWORD PTR [esi+0x18],ecx
  40d2c3:	clc    
  40d2c4:	xchg   esi,eax
  40d2c5:	inc    eax
  40d2c6:	cld    
  40d2c7:	out    0xe1,eax
  40d2c9:	rcl    DWORD PTR [edx-0x73bf7902],1
  40d2cf:	out    0xf8,eax
  40d2d1:	and    al,0x93
  40d2d3:	(bad)  
  40d2d4:	jne    0x40d330
  40d2d6:	ret    0x6eb8
  40d2d9:	sahf   
  40d2da:	xchg   edx,eax
  40d2db:	inc    BYTE PTR [eax]
  40d2dd:	add    BYTE PTR [ebx-0x2b],ah
  40d2e0:	retf   
  40d2e1:	push   es
  40d2e2:	in     al,0xe3
  40d2e4:	sbb    eax,DWORD PTR [eax]
  40d2e6:	xor    DWORD PTR [esi+0x37d36751],esp
  40d2ec:	inc    ebp
  40d2ed:	add    cl,bl
  40d2ef:	inc    ecx
  40d2f0:	dec    ecx
  40d2f1:	inc    ecx
  40d2f2:	xor    esi,ebp
  40d2f4:	sbb    BYTE PTR [eax],cl
  40d2f6:	dec    ecx
  40d2f7:	gs or  eax,0x2612eff
  40d2fd:	push   0x43b09a
  40d302:	mov    DWORD PTR ds:0xd6314149,eax
  40d308:	fcom   DWORD PTR [edx+0x58]
  40d30b:	lods   al,BYTE PTR ds:[esi]
  40d30c:	add    ch,al
  40d30e:	pop    esp
  40d30f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d310:	xchg   ecx,eax
  40d311:	(bad)  
  40d312:	test   al,0xb7
  40d314:	sahf   
  40d315:	imul   esi,DWORD PTR [ecx],0x740b9114
  40d31b:	shr    eax,cl
  40d31d:	sbb    edi,DWORD PTR [edi-0x21fc582a]
  40d323:	inc    esi
  40d324:	mov    edx,0x111471dc
  40d329:	iret   
  40d32a:	imul   edi,DWORD PTR [ebp-0x3],0x82886d7c
  40d331:	add    ecx,DWORD PTR [ecx-0x68]
  40d334:	mov    ds:0x7eec3144,eax
  40d339:	dec    eax
  40d33a:	lock adc ebx,esi
  40d33d:	fadd   DWORD PTR [ebx]
  40d33f:	sub    ebp,DWORD PTR [eax]
  40d341:	add    al,0x0
  40d343:	add    BYTE PTR [ecx-0x686ccfce],cl
  40d349:	mov    ch,BYTE PTR [ebx]
  40d34b:	xchg   esp,eax
  40d34c:	mov    ebp,0x1933c4d6
  40d351:	(bad)  
  40d352:	sub    eax,DWORD PTR [ebp+0x31]
  40d355:	in     al,dx
  40d356:	push   esi
  40d357:	dec    eax
  40d358:	lock adc esp,DWORD PTR [esi+0x282b03d8]
  40d35f:	add    al,0x59
  40d361:	push   ss
  40d362:	xor    BYTE PTR [ebx-0x63dc75a1],dl
  40d368:	mov    bl,0xfe
  40d36a:	jl     0x40d36f
  40d36c:	(bad)
  40d36f:	adc    BYTE PTR [ecx+0x13],al
  40d372:	std    
  40d373:	inc    ebp
  40d374:	mov    dl,0xfe
  40d376:	jl     0x40d37b
  40d378:	mov    ebp,0x3104d13f
  40d37d:	imul   ebx,DWORD PTR [esi+0x410c9d92],0x37
  40d384:	cmp    DWORD PTR [ebx+0x4d],0xffffff92
  40d388:	popf   
  40d389:	add    BYTE PTR [ebp+0x18],0x39
  40d38d:	ins    BYTE PTR es:[edi],dx
  40d38e:	xchg   ecx,eax
  40d38f:	xor    eax,0x35ff7c06
  40d394:	sbb    DWORD PTR [esi+edi*8-0x608c054c],eax
  40d39b:	mov    ebx,0x94fe7ac3
  40d3a0:	(bad)  
  40d3a1:	jp     0x40d417
  40d3a3:	loope  0x40d35f
  40d3a5:	mov    al,ds:0xe51
  40d3aa:	ret    
  40d3ab:	jp     0x40d421
  40d3ad:	or     eax,0xfee800a3
  40d3b2:	push   ds
  40d3b3:	or     al,0xe8
  40d3b5:	xchg   edx,eax
  40d3b6:	add    al,0x7b
  40d3b8:	(bad)  
  40d3b9:	out    dx,al
  40d3ba:	push   ds
  40d3bb:	push   0x7b667de7
  40d3c0:	(bad)  
  40d3c1:	fidivr WORD PTR [esi]
  40d3c3:	and    bh,0x65
  40d3c6:	data16 jnp 0x40d3c7
  40d3c9:	into   
  40d3ca:	ds test bh,ah
  40d3cd:	ins    DWORD PTR es:[edi],dx
  40d3ce:	inc    esi
  40d3cf:	jnp    0x40d3cf
  40d3d1:	mov    esi,0x35e76c1e
  40d3d6:	inc    esi
  40d3d7:	jnp    0x40d3d7
  40d3d9:	scas   al,BYTE PTR es:[edi]
  40d3da:	push   ds
  40d3db:	js     0x40d3db
  40d3dd:	sbb    al,0x6d
  40d3df:	jae    0x40d3cf
  40d3e1:	cmp    eax,eax
  40d3e3:	jp     0x40d443
  40d3e5:	mov    al,ds:0x34001777
  40d3ea:	aam    0x6e
  40d3ec:	sub    BYTE PTR [ebp+0x12ffeda1],0xed
  40d3f3:	jp     0x40d469
  40d3f5:	loope  0x40d391
  40d3f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d3f8:	push   ecx
  40d3f9:	outs   dx,BYTE PTR ds:[esi]
  40d3fa:	mov    al,ds:0x4f65448c
  40d3ff:	adc    al,0x6a
  40d401:	jmp    0xa8852250
  40d406:	xor    ch,ah
  40d408:	(bad)  
  40d409:	call   0x1286840
  40d40e:	add    BYTE PTR [eax],al
  40d410:	aam    0x2e
  40d412:	(bad)  
  40d413:	inc    DWORD PTR [ebx]
  40d415:	push   edi
  40d416:	jb     0x40d43b
  40d418:	cwde   
  40d419:	sahf   
  40d41a:	add    DWORD PTR [edi+0x47],ebx
  40d41d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d41e:	or     eax,eax
  40d420:	int3   
  40d421:	ins    DWORD PTR es:[edi],dx
  40d422:	dec    esi
  40d423:	push   0xbeef16d8
  40d428:	mov    al,0x51
  40d42a:	inc    ebx
  40d42b:	inc    ecx
  40d42c:	enter  0xff46,0x75
  40d430:	rcr    BYTE PTR [esi-0x5c388611],0xe6
  40d437:	sbb    eax,0xfffda39d
  40d43c:	cmp    eax,0xa075fd8b
  40d441:	sahf   
  40d442:	mov    ss,WORD PTR [edx-0x79]
  40d445:	mov    ds:0x168cc2c7,eax
  40d44a:	push   ebp
  40d44b:	mov    edx,esp
  40d44d:	pop    edx
  40d44f:	cld    
  40d450:	das    
  40d451:	sbb    al,BYTE PTR [eax]
  40d453:	push   0x59
  40d455:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d456:	jae    0x40d460
  40d458:	jo     0x40d4b9
  40d45a:	push   eax
  40d45b:	inc    edi
  40d45d:	std    
  40d45e:	inc    ebx
  40d45f:	cld    
  40d460:	jecxz  0x40d4ab
  40d462:	push   0x28
  40d464:	sbb    DWORD PTR [eax],edx
  40d466:	cmp    BYTE PTR [edi],0x48
  40d469:	and    al,BYTE PTR [eax+0x68]
  40d46c:	mov    al,0xd1
  40d46e:	inc    eax
  40d46f:	add    BYTE PTR [edi],ch
  40d471:	cwde   
  40d472:	jl     0x40d49b
  40d474:	add    BYTE PTR [eax],al
  40d476:	pop    eax
  40d477:	push   ss
  40d478:	or     eax,eax
  40d47a:	cmp    al,0x6f
  40d47c:	push   ebp
  40d47d:	call   0x40196b
  40d482:	and    edx,DWORD PTR [esi+0x72]
  40d485:	sbb    eax,ebp
  40d487:	sbb    eax,0xd2310000
  40d48c:	push   eax
  40d48d:	addr16 pop es
  40d48f:	mov    cl,0x41
  40d491:	add    BYTE PTR [ecx-0x2e],ah
  40d494:	adc    eax,0x9eb1908
  40d499:	(bad)  
  40d49a:	(bad)  
  40d49b:	ror    DWORD PTR [ebx+0x53],cl
  40d49e:	imul   BYTE PTR [edx]
  40d4a0:	(bad)  
  40d4a1:	xor    dh,cl
  40d4a3:	hlt    
  40d4a4:	(bad)  
  40d4a5:	(bad)  
  40d4a6:	out    0x1a,al
  40d4a8:	xchg   ebp,eax
  40d4a9:	lods   eax,DWORD PTR ds:[esi]
  40d4aa:	sbb    DWORD PTR [edx+0x15],ebp
  40d4ad:	rcl    dh,0xa0
  40d4b0:	mov    ?,esi
  40d4b2:	inc    esp
  40d4b3:	sbb    DWORD PTR [edx-0x71859ce1],0x5e
  40d4ba:	call   0x5c40dbec
  40d4bf:	neg    BYTE PTR [esi+0x366f7582]
  40d4c5:	push   0x31
  40d4c7:	in     eax,0x41
  40d4c9:	jmp    DWORD PTR [ebx+esi*2]
  40d4cc:	call   0xf488:0x8e4a00c1
  40d4d3:	dec    esi
  40d4d4:	jp     0x40d512
  40d4d6:	adc    eax,0x4523
  40d4db:	add    BYTE PTR [ecx-0xe8bfd7e],dh
  40d4e1:	ror    BYTE PTR [ebp+0x356af044],cl
  40d4e7:	call   0x432720
  40d4ec:	sub    ch,BYTE PTR [ebx-0x6d01dce9]
  40d4f2:	rcr    DWORD PTR [ebp+0x4e],cl
  40d4f5:	xchg   edx,eax
  40d4f6:	cli    
  40d4f7:	mov    edi,0x683273bd
  40d4fc:	xor    DWORD PTR [ebx-0x63],ebp
  40d4ff:	mov    ebp,0x41446fc9
  40d504:	xor    DWORD PTR [ecx+edi*4],edx
  40d507:	mov    ds,WORD PTR [ebp-0x6611aef4]
  40d50d:	jns    0x40d564
  40d50f:	pushf  
  40d510:	push   0xa8f4de0
  40d515:	inc    ebp
  40d516:	sub    DWORD PTR [ebp+0x7],ecx
  40d519:	jns    0x40d558
  40d51b:	pop    DWORD PTR [eax]
  40d51d:	stos   BYTE PTR es:[edi],al
  40d51e:	lock push es
  40d520:	jl     0x40d576
  40d522:	ret    0xd6e2
  40d525:	pop    eax
  40d527:	mov    fs,edi
  40d529:	or     al,0x29
  40d52b:	sbb    BYTE PTR ds:0x7045e5ec,dl
  40d531:	adc    al,0xb9
  40d533:	fwait
  40d534:	sub    esp,ebx
  40d536:	add    eax,0xe8ec768f
  40d53b:	add    ecx,esi
  40d53d:	mov    ecx,0x880
  40d542:	outs   dx,DWORD PTR ds:[esi]
  40d543:	shr    eax,cl
  40d545:	xor    ebp,DWORD PTR [esi-0x6e640f02]
  40d54b:	sti    
  40d54c:	fisttp QWORD PTR [esi-0x70c2f96a]
  40d552:	xchg   edi,eax
  40d553:	in     eax,dx
  40d554:	or     DWORD PTR [ebp+eiz*8+0x3b8ec5db],ebx
  40d55b:	push   esp
  40d55c:	xor    al,0xe8
  40d55e:	push   ss
  40d55f:	and    DWORD PTR [edi],ebp
  40d561:	inc    ebp
  40d562:	xor    esp,esp
  40d564:	rcr    BYTE PTR [ecx+0x33a57907],0xd9
  40d56b:	adc    ebp,ecx
  40d56d:	sahf   
  40d56e:	pushf  
  40d56f:	jmp    0x40d55c
  40d571:	inc    ebp
  40d572:	lock adc edi,DWORD PTR [ecx]
  40d575:	pop    ebp
  40d577:	or     edx,DWORD PTR [ecx+0x7d78be51]
  40d57d:	fwait
  40d57e:	pop    esp
  40d57f:	in     al,0xff
  40d581:	jne    0x40d52a
  40d583:	jns    0x40d5f9
  40d585:	ins    DWORD PTR es:[edi],dx
  40d586:	mov    edi,0x5d510800
  40d58b:	in     eax,0xfe
  40d58d:	pop    esi
  40d58e:	dec    edi
  40d58f:	dec    ebp
  40d590:	shr    ebp,0x32
  40d593:	loope  0x40d51f
  40d595:	cmp    eax,0x74ef53b3
  40d59a:	jns    0x40d520
  40d59c:	dec    edi
  40d59d:	sbb    DWORD PTR ds:[eax],ecx
  40d5a0:	call   0xfeb81b43
  40d5a5:	loop   0x40d5a7
  40d5a7:	add    dl,dh
  40d5a9:	add    esi,DWORD PTR [edx]
  40d5ab:	push   0x41
  40d5ad:	js     0x40d5b0
  40d5af:	xchg   edi,eax
  40d5b0:	ror    DWORD PTR [edx-0x6af3eebc],cl
  40d5b6:	aaa    
  40d5b7:	mov    ebp,0x61900d0
  40d5bc:	sub    DWORD PTR [edi+edi*8],esp
  40d5bf:	je     0x40d57b
  40d5c1:	outs   dx,DWORD PTR ds:[esi]
  40d5c2:	and    eax,0xfe76a799
  40d5c7:	je     0x40d587
  40d5c9:	jbe    0x40d63f
  40d5cb:	loope  0x40d581
  40d5cd:	add    BYTE PTR [eax],cl
  40d5cf:	rcr    DWORD PTR [edi-0x1c],1
  40d5d2:	(bad)  
  40d5d3:	(bad)  
  40d5d4:	push   ss
  40d5d5:	shr    bh,1
  40d5d7:	cmp    DWORD PTR [ebp-0x4b39a740],ebp
  40d5dd:	dec    esp
  40d5de:	shr    ebp,0x32
  40d5e1:	loope  0x40d56d
  40d5e3:	lds    esi,FWORD PTR [eax+0x3543f753]
  40d5e9:	jmp    0x51e8:0xc3ea642
  40d5f0:	and    eax,0xee60fe77
  40d5f5:	ja     0x40d660
  40d5f7:	jmp    0xa8ea24
  40d5fc:	jne    0x40d5cf
  40d5fe:	inc    eax
  40d5ff:	add    BYTE PTR [eax],ah
  40d601:	adc    al,BYTE PTR [eax]
  40d603:	add    al,cl
  40d605:	xchg   edi,eax
  40d606:	jo     0x40d65e
  40d608:	lahf   
  40d609:	mov    DWORD PTR [ecx],ecx
  40d60b:	rol    BYTE PTR [eax],0x0
  40d60e:	add    al,0x48
  40d610:	xchg   DWORD PTR [ebp-0x70],eax
  40d613:	sbb    BYTE PTR [ecx+0x46],dh
  40d616:	leave  
  40d617:	adc    bh,bh
  40d619:	jne    0x40d67b
  40d61b:	cwde   
  40d61c:	loopne 0x40d643
  40d61e:	sbb    BYTE PTR [ebx],dl
  40d620:	or     eax,eax
  40d622:	les    esi,FWORD PTR [ebx-0x3]
  40d625:	jne    0x40d667
  40d627:	cwde   
  40d628:	add    DWORD PTR [ebp+0x1f],ebx
  40d62b:	mov    DWORD PTR [esi+0x68],ecx
  40d62e:	cmp    cl,BYTE PTR [esi+edi*1+0x0]
  40d632:	rcl    BYTE PTR [edx],0x0
  40d635:	out    dx,eax
  40d636:	jle    0x40d652
  40d638:	add    BYTE PTR [eax+0x3f],dl
  40d63b:	pop    ds
  40d63c:	or     al,ch
  40d63e:	and    BYTE PTR [eax],0xff
  40d641:	jmp    DWORD PTR [eax]
  40d643:	imul   edx,DWORD PTR [ecx-0x1],0xf87387bf
  40d64a:	xor    BYTE PTR [ecx-0x787000af],al
  40d650:	jae    0x40d64e
  40d652:	jg     0x40d671
  40d654:	or     al,ch
  40d656:	adc    al,BYTE PTR [ebx-0x1]
  40d659:	call   ecx
  40d65b:	push   esp
  40d65c:	add    al,BYTE PTR [eax]
  40d65e:	and    eax,0xd483eafd
  40d663:	xchg   BYTE PTR [eax+0x0],ch
  40d666:	repnz retf 
  40d668:	(bad)  
  40d669:	jne    0x40d6bb
  40d66b:	call   0x4587:0x878f502c
  40d672:	add    BYTE PTR [eax],al
  40d674:	mov    esp,0x3100001a
  40d679:	mov    cs,WORD PTR [edi+eiz*2-0x4b]
  40d67d:	cs inc ebx
  40d67f:	add    cl,bl
  40d681:	adc    eax,DWORD PTR [esi+0x41]
  40d684:	xor    esi,esi
  40d686:	adc    eax,0x13f64908
  40d68b:	jmp    FWORD PTR [esi]
  40d68d:	out    0x15,eax
  40d68f:	cld    
  40d690:	es pop ecx
  40d692:	cli    
  40d693:	out    0x6e,eax
  40d695:	mov    ebx,0x29e8fe8b
  40d69a:	pop    es
  40d69b:	add    BYTE PTR [edx+esi*8-0x62],ah
  40d69f:	sub    ch,0xd3
  40d6a2:	sbb    al,BYTE PTR [eax]
  40d6a4:	xor    esi,eax
  40d6a6:	dec    esp
  40d6a7:	(bad)  
  40d6a8:	jl     0x40d71d
  40d6aa:	call   0x5cfe:0x8c267e42
  40d6b1:	jg     0x40d63e
  40d6b3:	je     0x40d6de
  40d6b5:	and    ebp,DWORD PTR [ecx+0x4e]
  40d6b8:	(bad)  
  40d6b9:	push   ds
  40d6ba:	mov    WORD PTR [ecx+eiz*1+0x6],?
  40d6be:	push   ss
  40d6bf:	or     cl,bl
  40d6c1:	(bad)  
  40d6c2:	cmp    edi,edi
  40d6c4:	mov    esi,0xb6181476
  40d6c9:	clc    
  40d6ca:	idiv   dh
  40d6cc:	and    al,0x73
  40d6ce:	call   0x7267:0x8a6df654
  40d6d5:	sub    eax,0x45
  40d6da:	xchg   esi,eax
  40d6db:	fdiv   st,st(3)
  40d6dd:	out    0x54,eax
  40d6df:	adc    BYTE PTR [eax+eax*1],al
  40d6e2:	cmp    ch,BYTE PTR [ebx-0x4ff69af0]
  40d6e8:	inc    ecx
  40d6e9:	inc    ecx
  40d6ea:	xor    DWORD PTR [ebx+0xa],edx
  40d6ed:	and    esi,DWORD PTR [ecx]
  40d6ef:	imul   edi,DWORD PTR [ebx+0x44],0x69
  40d6f3:	adc    al,0x11
  40d6f5:	shl    esp,0xd2
  40d6f8:	call   0x8164b487
  40d6fd:	add    edx,DWORD PTR [esp+edx*1]
  40d700:	jmp    0xef415e03
  40d705:	push   es
  40d706:	hlt    
  40d707:	jnp    0x40d778
  40d709:	inc    ecx
  40d70a:	and    DWORD PTR [ebp-0x5],esi
  40d70d:	repz push ss
  40d70f:	xchg   edi,eax
  40d710:	add    DWORD PTR [ebx-0x749f6ed9],ecx
  40d716:	mov    ds:0x15417040,al
  40d71b:	in     al,dx
  40d71c:	out    0x3,eax
  40d71e:	push   ds
  40d71f:	mov    dh,0x4d
  40d721:	adc    DWORD PTR [ecx],edi
  40d723:	ins    BYTE PTR es:[edi],dx
  40d724:	xor    edi,DWORD PTR [edx]
  40d726:	(bad)  
  40d727:	je     0x40d766
  40d729:	adc    DWORD PTR ds:0xd6fbbb75,esp
  40d72f:	das    
  40d730:	sahf   
  40d731:	mov    ah,bh
  40d733:	je     0x40d6d0
  40d735:	xchg   edi,ebx
  40d737:	(bad)  
  40d738:	lock fwait
  40d73a:	lahf   
  40d73b:	lds    edx,FWORD PTR ds:0xcf00008b
  40d741:	(bad)  
  40d742:	lock mov bh,BYTE PTR ds:0x29110620
  40d749:	ins    BYTE PTR es:[edi],dx
  40d74a:	sbb    eax,0x1f74b63a
  40d74f:	mov    BYTE PTR [edx+0x14],0x94
  40d753:	jle    0x40d6ef
  40d755:	nop
  40d756:	lods   al,BYTE PTR ds:[esi]
  40d757:	mov    eax,DWORD PTR [ecx+edx*4]
  40d75a:	sbb    eax,ecx
  40d75c:	inc    esp
  40d75d:	shr    eax,cl
  40d75f:	add    eax,DWORD PTR ds:0x71c869f8
  40d765:	and    eax,0x310428
  40d76a:	cmp    al,BYTE PTR [edi+0x3f35]
  40d770:	hlt    
  40d771:	adc    eax,DWORD PTR [eax]
  40d773:	xor    eax,0xa5444d47
  40d778:	xor    dl,BYTE PTR [eax+eax*1]
  40d77b:	jmp    0xea38a6f3
  40d780:	xor    dl,BYTE PTR [eax+eax*1]
  40d783:	pop    esp
  40d784:	icebp  
  40d785:	ja     0x40d7d6
  40d787:	je     0x40d77a
  40d789:	jnp    0x40d7da
  40d78b:	adc    ebp,DWORD PTR ds:0x742f8dec
  40d791:	adc    al,0xff
  40d793:	aam    0xed
  40d795:	inc    ecx
  40d796:	inc    ecx
  40d797:	jmp    0xaab48bbb
  40d79c:	scas   eax,DWORD PTR es:[edi]
  40d79d:	lock imul ecx
  40d7a0:	xor    DWORD PTR ds:[ebx-0x51ffff34],eax
  40d7a7:	jae    0x40d81b
  40d7a9:	(bad)  
  40d7aa:	jg     0x40d794
  40d7ac:	sti    
  40d7ad:	push   edx
  40d7ae:	or     dl,cl
  40d7b0:	mov    bh,bh
  40d7b2:	mov    ebx,0x402e17e9
  40d7b7:	adc    bh,bh
  40d7b9:	lahf   
  40d7ba:	fidiv  DWORD PTR [edx+0x75]
  40d7bd:	fldcw  WORD PTR [ebx-0x67fef818]
  40d7c3:	jno    0x40d7c3
  40d7c5:	push   cs
  40d7c6:	sbb    BYTE PTR [ebx+0x4c],dh
  40d7c9:	add    DWORD PTR [edi+0x296a0359],esi
  40d7cf:	ins    BYTE PTR es:[edi],dx
  40d7d0:	(bad)  
  40d7d1:	jl     0x40d804
  40d7d3:	xchg   edi,eax
  40d7d4:	cmp    eax,0xfe4b41e9
  40d7d9:	pop    esp
  40d7da:	test   eax,0x7ba41472
  40d7df:	aam    0xff
  40d7e1:	ss retf 0x355
  40d7e5:	jmp    0x12c7741
  40d7ea:	or     edx,DWORD PTR [edx+esi*8+0x53]
  40d7ee:	iret   
  40d7ef:	xor    edi,eax
  40d7f1:	add    BYTE PTR [eax+0x17],bl
  40d7f4:	add    bh,al
  40d7f6:	or     eax,0x48fffe84
  40d7fb:	pop    ss
  40d7fc:	push   DWORD PTR [ebp+0x58]
  40d7ff:	in     al,dx
  40d800:	inc    ebx
  40d801:	cld    
  40d802:	mov    DWORD PTR [ebx],ecx
  40d804:	cld    
  40d805:	push   0x58
  40d807:	adc    DWORD PTR [eax],eax
  40d809:	push   0x0
  40d80b:	add    BYTE PTR [eax+0x11],cl
  40d80e:	add    bh,bh
  40d810:	cmp    eax,0x1475fd9b
  40d815:	adc    DWORD PTR [eax],eax
  40d817:	push   0x18
  40d819:	(bad)
  40d81d:	pop    ss
  40d81e:	or     eax,eax
  40d820:	cld    
  40d821:	popa   
  40d822:	dec    esi
  40d823:	push   eax
  40d824:	jo     0x40d860
  40d826:	push   ecx
  40d827:	push   DWORD PTR [edi-0x11]
  40d82a:	inc    ebx
  40d82b:	clc    
  40d82c:	rcl    DWORD PTR [eax],1
  40d82e:	add    BYTE PTR [edx+0x8],ch
  40d831:	push   DWORD PTR es:[ebp+0x20]
  40d835:	popf   
  40d836:	jae    0x40d834
  40d838:	pop    ss
  40d839:	and    ecx,DWORD PTR [edx+ebp*2]
  40d83c:	enter  0x10,0xe8
  40d840:	outs   dx,BYTE PTR ds:[esi]
  40d841:	jp     0x40d841
  40d843:	call   ebx
  40d845:	push   esi
  40d846:	jae    0x40d857
  40d848:	aaa    
  40d849:	and    edi,eax
  40d84b:	call   0x3ffe3c
  40d850:	rdpmc  
  40d852:	clc    
  40d853:	add    BYTE PTR [eax+0x15830016],bl
  40d859:	lahf   
  40d85a:	(bad)  
  40d85b:	jae    0x40d8c3
  40d85d:	popf   
  40d85e:	jae    0x40d868
  40d860:	ja     0x40d883
  40d862:	clc    
  40d863:	call   0x246d99
  40d868:	xchg   BYTE PTR [ebp-0x3e],dh
  40d86b:	jae    0x40d8ab
  40d86d:	or     eax,0x7489
  40d872:	sub    DWORD PTR [ebp+0x3],eax
  40d875:	and    dh,BYTE PTR [ecx]
  40d877:	jge    0x40d8a2
  40d879:	add    esi,DWORD PTR [eax-0xb]
  40d87c:	stos   BYTE PTR es:[edi],al
  40d87d:	jmp    0x58dc:0xccafd0b
  40d884:	sar    bh,0x4e
  40d887:	sub    eax,0x7d10ed9c
  40d88c:	add    cl,BYTE PTR [ebx]
  40d88e:	jno    0x40d900
  40d890:	in     eax,dx
  40d891:	dec    edi
  40d892:	loope  0x40d818
  40d894:	nop
  40d895:	dec    edi
  40d896:	cs jmp 0x40d912
  40d899:	inc    esp
  40d89a:	sbb    eax,0xa4ff3305
  40d89f:	iret   
  40d8a0:	xor    ebp,eax
  40d8a2:	lods   al,BYTE PTR ss:[esi]
  40d8a4:	xchg   esi,edi
  40d8a6:	sbb    al,BYTE PTR [edx+0x7b498042]
  40d8ac:	or     eax,0x8ab0fed1
  40d8b1:	out    0xf0,eax
  40d8b3:	mov    eax,DWORD PTR [edi-0x713f4502]
  40d8b9:	pop    edx
  40d8ba:	clc    
  40d8bb:	cmp    eax,0xe685fff7
  40d8c0:	xchg   esi,eax
  40d8c1:	sub    ch,0x27
  40d8c4:	xor    DWORD PTR [edi-0x4e],edx
  40d8c7:	dec    eax
  40d8c8:	int    0x28
  40d8ca:	jo     0x40d947
  40d8cc:	add    dh,BYTE PTR [ebp+0x37]
  40d8cf:	mov    edx,0x7ff3c928
  40d8d4:	add    cl,BYTE PTR [ebp+0x6af40000]
  40d8da:	xor    edi,edi
  40d8dc:	sbb    al,0x4f
  40d8de:	call   0x2b87:0xe6140730
  40d8e5:	push   esp
  40d8e6:	in     eax,dx
  40d8e7:	jg     0x40d946
  40d8e9:	adc    ebp,ecx
  40d8eb:	add    esi,DWORD PTR [eax+0x3104ccef]
  40d8f1:	add    al,0xe9
  40d8f3:	div    BYTE PTR [ebx+0x3103e809]
  40d8f9:	jno    0x40d936
  40d8fb:	mov    BYTE PTR [edi-0x19],ah
  40d8fe:	mov    al,0x9c
  40d900:	call   0xed54:0x2b87a5cb
  40d907:	xor    BYTE PTR [edx],0x13
  40d90a:	jmp    0x8d281f12
  40d90f:	xchg   ebp,eax
  40d911:	imul   edx,DWORD PTR [eax],0x5f
  40d914:	in     al,dx
  40d915:	shr    al,cl
  40d917:	fwait
  40d918:	add    esi,DWORD PTR [edx+0x75]
  40d91b:	xchg   DWORD PTR [ecx-0x5a78832a],edi
  40d921:	jo     0x40d988
  40d923:	adc    DWORD PTR [ecx],ebx
  40d925:	cld    
  40d926:	cmp    BYTE PTR [esi],0x70
  40d929:	adc    al,0x41
  40d92b:	les    eax,FWORD PTR [ecx+esi*2]
  40d92e:	dec    ebp
  40d92f:	jge    0x40d9a6
  40d931:	jl     0x40d978
  40d933:	adc    ebp,esi
  40d935:	jo     0x40d8ea
  40d937:	mov    edx,DWORD PTR [esi-0x5b]
  40d93a:	scas   al,BYTE PTR es:[edi]
  40d93b:	inc    esp
  40d93c:	add    BYTE PTR [eax],al
  40d93e:	xor    DWORD PTR [ebx+edi*2-0x7a],edi
  40d942:	fbstp  TBYTE PTR [eax+0x6f]
  40d945:	inc    ecx
  40d946:	int    0x94
  40d948:	fwait
  40d949:	xchg   edi,eax
  40d94a:	into   
  40d94b:	and    DWORD PTR [ebp+0x5d],ebp
  40d94e:	(bad)  
  40d94f:	jo     0x40d939
  40d951:	cmp    BYTE PTR ds:0xb2f6e87c,0x90
  40d958:	call   0xffd60a60
  40d95d:	jae    0x40d925
  40d95f:	jo     0x40d96e
  40d961:	and    BYTE PTR gs:[ecx-0x2],dh
  40d965:	jmp    0xd228c119
  40d96a:	xor    DWORD PTR [ebx],0x0
  40d96d:	jmp    0x6328c17d
  40d972:	mov    ah,0x9d
  40d974:	(bad)  
  40d975:	cwde   
  40d976:	xchg   ebp,eax
  40d977:	ret    
  40d978:	jmp    0x40f9:0x3bbf4f0f
  40d97f:	sbb    al,0x3c
  40d981:	lock das 
  40d983:	sbb    BYTE PTR [ecx+ebx*8],ch
  40d986:	mov    ebx,0x31282c14
  40d98b:	push   ds
  40d98c:	adc    BYTE PTR [ebp+0x6909e262],0xb6
  40d993:	sub    esi,DWORD PTR [edi-0x14]
  40d996:	mov    dl,0x7c
  40d998:	das    
  40d999:	xchg   edx,eax
  40d99a:	sub    al,0xf0
  40d99c:	jmp    0x40d9c6
  40d99e:	lods   eax,DWORD PTR ds:[esi]
  40d99f:	push   ebx
  40d9a0:	or     DWORD PTR [ecx+0x13d20000],ebp
  40d9a6:	or     ch,BYTE PTR ds:0x300adc78
  40d9ac:	and    DWORD PTR [esi+0x58],ebx
  40d9af:	pusha  
  40d9b0:	dec    ecx
  40d9b1:	push   eax
  40d9b2:	(bad)  
  40d9b3:	aam    0x9a
  40d9b5:	sahf   
  40d9b6:	inc    esp
  40d9b7:	dec    ecx
  40d9b8:	mov    bh,0xd8
  40d9ba:	xlat   BYTE PTR ds:[ebx]
  40d9bb:	jmp    0x6440edf2
  40d9c0:	jno    0x40da0a
  40d9c2:	dec    edi
  40d9c3:	ret    
  40d9c4:	xor    eax,0x3292fffa
  40d9c9:	cli    
  40d9ca:	call   DWORD PTR [edx+0x3544a132]
  40d9d0:	add    ch,BYTE PTR [edi+0x14]
  40d9d3:	aam    0xdd
  40d9d5:	aam    0xff
  40d9d7:	inc    ebx
  40d9d9:	push   ebx
  40d9da:	jb     0x40d9fe
  40d9dc:	sbb    ebx,DWORD PTR [eax+ebx*8]
  40d9df:	add    BYTE PTR [edi+esi*2],ah
  40d9e2:	std    
  40d9e3:	jne    0x40da29
  40d9e5:	xchg   esi,eax
  40d9e6:	jae    0x40d9c0
  40d9e8:	(bad)  
  40d9e9:	pop    ds
  40d9ea:	in     al,0xff
  40d9ec:	in     eax,0x8b
  40d9ee:	std    
  40d9ef:	jne    0x40d981
  40d9f1:	mov    edi,DWORD PTR [ebx-0x2669004]
  40d9f7:	jne    0x40d9c9
  40d9f9:	nop
  40d9fa:	xchg   esi,eax
  40d9fb:	and    BYTE PTR [eax+0x13],bl
  40d9fe:	push   DWORD PTR [ebp+0x6c]
  40da01:	nop
  40da02:	js     0x40da53
  40da04:	(bad)  
  40da05:	cdq    
  40da06:	std    
  40da07:	jne    0x40da09
  40da09:	add    al,al
  40da0b:	nop
  40da0c:	jo     0x40da5d
  40da0e:	scas   eax,DWORD PTR es:[edi]
  40da0f:	cdq    
  40da10:	std    
  40da11:	jne    0x40d9c7
  40da13:	nop
  40da14:	push   0x8b99af4f
  40da19:	inc    ebp
  40da1a:	mov    eax,0x4590e827
  40da1f:	cdq    
  40da20:	std    
  40da21:	pop    edi
  40da22:	ds stos DWORD PTR es:[edi],eax
  40da24:	ror    BYTE PTR [eax+ecx*1],0x3e
  40da28:	mov    ebp,esp
  40da2a:	mov    edx,DWORD PTR [edx+edi*8+0x6a]
  40da2e:	sbb    BYTE PTR ds:0x6ae5ff45,cl
  40da34:	out    0x81,al
  40da36:	pushf  
  40da37:	xchg   edi,eax
  40da38:	std    
  40da39:	mov    ebp,eax
  40da3b:	xchg   esi,eax
  40da3c:	std    
  40da3d:	jne    0x40da1f
  40da3f:	mov    ah,BYTE PTR [eax]
  40da41:	std    
  40da42:	pop    ds
  40da43:	cdq    
  40da44:	push   0x51ee7005
  40da49:	dec    DWORD PTR [edi]
  40da4b:	ins    DWORD PTR es:[edi],dx
  40da4c:	mov    esi,0x6822ce74
  40da51:	div    DWORD PTR [ecx]
  40da53:	ds inc esp
  40da55:	add    BYTE PTR [ecx+0x7d],cl
  40da58:	add    ch,bh
  40da5a:	ja     0x40d9e0
  40da5c:	jns    0x40daa3
  40da5e:	lock jl 0x40da93
  40da61:	call   FWORD PTR [esi*2+0x7e233d9a]
  40da68:	and    edi,0x3c
  40da6b:	es test esi,edi
  40da6e:	add    BYTE PTR [eax],al
  40da70:	mov    es,edi
  40da72:	xchg   esi,edi
  40da74:	cld    
  40da75:	je     0x40da11
  40da77:	xchg   ebp,ebp
  40da79:	pop    ebp
  40da7a:	or     eax,0x73
  40da7d:	add    BYTE PTR [edx],0x55
  40da80:	mov    edx,0x65c37f60
  40da85:	or     eax,0x36cb001a
  40da8a:	test   DWORD PTR [ecx+ebp*1-0x7b],esi
  40da8e:	xlat   BYTE PTR ds:[ebx]
  40da8f:	dec    ebx
  40da90:	dec    esi
  40da91:	lea    edi,[ecx+0x44]
  40da94:	inc    ebp
  40da95:	icebp  
  40da96:	lds    ebp,FWORD PTR [ebx+0x9]
  40da99:	cmp    al,0x4
  40da9b:	xor    dh,0x7c
  40da9e:	push   cs
  40da9f:	push   ecx
  40daa0:	cdq    
  40daa1:	test   DWORD PTR [ecx+eax*2],edi
  40daa4:	xor    DWORD PTR [esi],ecx
  40daa6:	pushf  
  40daa7:	jne    0x40daf9
  40daa9:	jnp    0x40daad
  40daab:	or     esi,ecx
  40daad:	dec    edi
  40daae:	add    bl,ch
  40dab0:	ds inc ebx
  40dab2:	mov    ah,0x45
  40dab4:	jo     0x40db31
  40dab6:	sub    ebp,eax
  40dab8:	xchg   esp,eax
  40dab9:	sbb    al,0x4
  40dabb:	add    BYTE PTR [edx],ch
  40dabd:	cmp    ecx,DWORD PTR [edi]
  40dabf:	and    eax,DWORD PTR [esi-0x19a8853d]
  40dac5:	es clc 
  40dac7:	mov    edi,0x68324465
  40dacc:	xor    DWORD PTR [ecx+ebp*8],edx
  40dacf:	xchg   esp,eax
  40dad0:	mov    esp,?
  40dad2:	cmp    edi,DWORD PTR ds:0x14700000
  40dad8:	mov    ecx,0x11c4584
  40dadd:	or     eax,0x9b056d42
  40dae2:	rcr    dh,1
  40dae4:	std    
  40dae5:	sub    DWORD PTR [edx-0x60b5d6df],0x6d
  40daec:	in     eax,dx
  40daed:	and    DWORD PTR [eax+0x40b20be],0xffffffbd
  40daf4:	(bad)  
  40daf6:	mov    ch,BYTE PTR [ebp+0x5b]
  40daf9:	or     al,0x89
  40dafb:	adc    eax,0xcd77831d
  40db00:	scas   eax,DWORD PTR es:[edi]
  40db01:	inc    esi
  40db02:	xor    dl,BYTE PTR [esp+edx*1]
  40db05:	(bad)  
  40db06:	pop    edx
  40db07:	xchg   ebx,eax
  40db08:	lods   al,BYTE PTR ds:[esi]
  40db09:	push   esp
  40db0a:	ins    DWORD PTR es:[di],dx
  40db0c:	lods   eax,DWORD PTR ds:[esi]
  40db0d:	xchg   ecx,eax
  40db0e:	in     eax,dx
  40db0f:	outs   dx,DWORD PTR ds:[esi]
  40db10:	cmp    BYTE PTR [ebx-0x661fc3b],al
  40db16:	cmp    bh,BYTE PTR [esp+eiz*4+0x24]
  40db1a:	xor    DWORD PTR [edx+eiz*8],edx
  40db1d:	inc    ebx
  40db1e:	daa    
  40db1f:	xchg   edi,eax
  40db20:	mov    ebx,0xa6143105
  40db25:	leave  
  40db26:	push   ds
  40db27:	adc    al,0xe9
  40db29:	add    esi,DWORD PTR [ecx]
  40db2b:	push   ebp
  40db2c:	and    esi,DWORD PTR [edi+edx*1+0x15]
  40db30:	jmp    0xd3557638
  40db35:	add    ebx,DWORD PTR [ebx+0x3c314]
  40db3b:	add    BYTE PTR [esi+edx*8-0x695a2ba8],ch
  40db42:	cmp    BYTE PTR [ebx-0x11],bh
  40db45:	ins    BYTE PTR es:[edi],dx
  40db46:	cwde   
  40db47:	sbb    BYTE PTR [ebp+0x6c],0xff
  40db4b:	xor    eax,0x4fe768d8
  40db50:	or     eax,0x72f20014
  40db55:	loope  0x40db5b
  40db57:	adc    BYTE PTR [ebp+0x14],al
  40db5a:	add    cl,ch
  40db5c:	retf   0x2750
  40db5f:	test   al,0x32
  40db61:	ins    DWORD PTR es:[edi],dx
  40db62:	je     0x40db3d
  40db64:	sbb    dl,BYTE PTR [eax+edx*2-0x2]
  40db68:	mov    bl,0xdc
  40db6a:	mov    bl,BYTE PTR [ecx]
  40db6c:	rcl    BYTE PTR [edi+0x6db3f6ef],0x4f
  40db73:	cmp    ebx,DWORD PTR ds:0xb3de50a4
  40db79:	fwait
  40db7a:	test   ch,al
  40db7c:	sti    
  40db7d:	ins    DWORD PTR es:[edi],dx
  40db7e:	inc    cl
  40db80:	sub    ebx,esi
  40db82:	inc    dh
  40db84:	rcl    edi,0xf3
  40db87:	sbb    DWORD PTR [ebp+0x29],edx
  40db8a:	inc    edi
  40db8b:	sub    BYTE PTR ds:0xdbbdb46d,dh
  40db91:	ins    DWORD PTR es:[edi],dx
  40db92:	(bad)  
  40db93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db94:	dec    ecx
  40db95:	sbb    al,ch
  40db97:	icebp  
  40db98:	pop    ebp
  40db99:	ins    DWORD PTR es:[edi],dx
  40db9a:	(bad)  
  40db9b:	pusha  
  40db9c:	test   eax,0x8ef644
  40dba1:	add    BYTE PTR [ebx-0x6ef0006],dh
  40dba7:	rol    BYTE PTR [eax-0x17],cl
  40dbaa:	mov    bl,0xa0
  40dbac:	jmp    0x40dc2c
  40dbae:	mov    bl,0x6a
  40dbb0:	(bad)  
  40dbb1:	hlt    
  40dbb2:	es jl  0x40dba1
  40dbb5:	mov    ecx,0x64886ab3
  40dbba:	call   0x666c:0xc56fe62
  40dbc1:	sahf   
  40dbc2:	jmp    0x40db98
  40dbc4:	(bad)  
  40dbc5:	push   DWORD PTR [edi-0x54]
  40dbc8:	jmp    0xd475:0xfd9627f7
  40dbcf:	call   eax
  40dbd1:	push   eax
  40dbd2:	pop    es
  40dbd3:	xchg   esi,eax
  40dbd4:	xchg   DWORD PTR [ebp-0x211c4],eax
  40dbda:	push   ebp
  40dbdb:	pushf  
  40dbdc:	shl    bh,cl
  40dbde:	daa    
  40dbdf:	xchg   esi,eax
  40dbe0:	dec    esi
  40dbe1:	push   0x3f5eaf
  40dbe6:	aaa    
  40dbe7:	lods   al,BYTE PTR ds:[esi]
  40dbe8:	jmp    0x9475:0xfd95a7f7
  40dbef:	push   DWORD PTR [eax+0x9958750]
  40dbf5:	shr    ah,0xe
  40dbf8:	cmp    DWORD PTR [ebp-0x21244],0xffffff8c
  40dbff:	bound  ecx,QWORD PTR [esi]
  40dc01:	call   FWORD PTR [eax]
  40dc03:	test   DWORD PTR [ebx-0x50ffff20],eax
  40dc09:	xchg   ebp,eax
  40dc0a:	std    
  40dc0b:	push   eax
  40dc0c:	adc    BYTE PTR ds:0xf9a7ff4d,0x12
  40dc13:	or     ecx,DWORD PTR [eax-0x5faffb94]
  40dc19:	popa   
  40dc1a:	dec    ebx
  40dc1b:	jmp    DWORD PTR [edi-0x601f7c23]
  40dc21:	xchg   ebp,eax
  40dc22:	std    
  40dc23:	adc    eax,0x6a001748
  40dc28:	sbb    BYTE PTR [edi+0x54],bh
  40dc2b:	inc    edi
  40dc2c:	pop    ecx
  40dc2d:	adc    bh,bh
  40dc2f:	mov    ch,0xb4
  40dc31:	in     al,dx
  40dc32:	std    
  40dc33:	inc    DWORD PTR [edi-0x1b17f59d]
  40dc39:	inc    esi
  40dc3a:	std    
  40dc3b:	inc    DWORD PTR [ecx+0x31f7da93]
  40dc41:	ret    0x6980
  40dc44:	xor    DWORD PTR [ebp-0xc],edx
  40dc47:	inc    esi
  40dc48:	jo     0x40dcc7
  40dc4a:	jg     0x40dc00
  40dc4c:	aad    0x21
  40dc4e:	cmp    esi,0xe80ea7de
  40dc54:	or     BYTE PTR [ebp-0x8470181],0x53
  40dc5b:	test   dh,0x9
  40dc5e:	test   DWORD PTR [ecx+ebx*8+0x31fe8109],edi
  40dc65:	dec    edx
  40dc66:	xchg   BYTE PTR [ebx+0x68027d31],dl
  40dc6c:	add    BYTE PTR [eax],al
  40dc6e:	and    al,0xb2
  40dc70:	sar    edi,0xad
  40dc73:	mov    bh,0x76
  40dc75:	dec    edi
  40dc76:	xchg   esi,eax
  40dc77:	pop    ds
  40dc78:	pop    esp
  40dc79:	test   BYTE PTR [esi+0x36b6a71],0x4a
  40dc80:	jg     0x40dc8c
  40dc82:	jno    0x40dc4c
  40dc84:	inc    DWORD PTR [edx+0x740240f4]
  40dc8a:	out    0xfd,eax
  40dc8c:	mov    ebp,0x7fa95ee3
  40dc91:	jmp    edx
  40dc93:	iret   
  40dc94:	test   BYTE PTR [ecx+ecx*2+0x31fe7fa1],bh
  40dc9b:	or     eax,ebp
  40dc9d:	and    DWORD PTR [di+0x6f],edi
  40dca1:	mov    ebp,0xe80c073e
  40dca6:	ret    
  40dca7:	xor    eax,DWORD PTR [ecx+0x6b292efe]
  40dcad:	mul    BYTE PTR [esi]
  40dcaf:	jmp    0x40dd30
  40dcb1:	je     0x40dcdc
  40dcb3:	xchg   ebx,eax
  40dcb4:	dec    eax
  40dcb5:	dec    eax
  40dcb6:	push   ss
  40dcb7:	sti    
  40dcb8:	jg     0x40dc6e
  40dcba:	adc    eax,0x7805e15
  40dcbf:	push   0xffffffd3
  40dcc1:	or     ecx,DWORD PTR [ecx]
  40dcc3:	lods   eax,DWORD PTR ds:[esi]
  40dcc4:	lahf   
  40dcc5:	xor    bh,0x69
  40dcc8:	shl    DWORD PTR [edi-0x11],cl
  40dccb:	lahf   
  40dccc:	and    BYTE PTR [eax-0x19],bh
  40dccf:	imul   edi,DWORD PTR ds:0x360000f6,0xd7cab17c
  40dcd9:	imul   ebp,DWORD PTR ds:0x2561eeb6,0xf0dfc780
  40dce3:	imul   eax,DWORD PTR [edi],0xffffffdb
  40dce6:	adc    eax,0x2c9fb780
  40dceb:	js     0x40dc9c
  40dced:	imul   eax,DWORD PTR ds:0x717c2ef6,0xf5699fca
  40dcf7:	mov    ch,0x66
  40dcf9:	popa   
  40dcfa:	in     eax,dx
  40dcfb:	jg     0x40dc8c
  40dcfd:	fcomip st,st(0)
  40dcff:	imul   eax,DWORD PTR ds:0x7f7fdddb,0xffffff9f
  40dd06:	mov    al,0x77
  40dd08:	ja     0x40dd73
  40dd0a:	rol    BYTE PTR [edi+0x7fc568fa],0x9d
  40dd11:	jl     0x40dcc8
  40dd13:	jg     0x40dd74
  40dd15:	jl     0x40dd4b
  40dd17:	rcl    BYTE PTR [edi+0x69],1
  40dd1a:	lods   eax,DWORD PTR ds:[esi]
  40dd1b:	mov    ecx,0x7fa5616a
  40dd20:	dec    esi
  40dd21:	jecxz  0x40dd4f
  40dd23:	jg     0x40dd64
  40dd25:	imul   ebx,DWORD PTR [ebx+0x68],0x6c8d693f
  40dd2c:	xchg   esp,eax
  40dd2d:	fadd   DWORD PTR [ebp-0x6760d881]
  40dd33:	ja     0x40dd54
  40dd35:	imul   edi,edi,0xfa000080
  40dd3b:	fdiv   st(6),st
  40dd3d:	outs   dx,BYTE PTR ds:[esi]
  40dd3e:	mov    fs,WORD PTR [eax+0x6a865eeb]
  40dd44:	(bad)  
  40dd45:	aam    0x2e
  40dd47:	imul   esi,DWORD PTR [ecx+eiz*8-0x76],0x6e4efc4f
  40dd4f:	push   0xffffffb4
  40dd51:	push   ebp
  40dd52:	pop    esi
  40dd53:	push   0xfffffffe
  40dd55:	push   ecx
  40dd56:	push   ds
  40dd57:	fdivr  st,st(6)
  40dd59:	ss push esi
  40dd5b:	shl    bh,1
  40dd5d:	inc    eax
  40dd5e:	imul   ebp,DWORD PTR [eax-0x2],0x26
  40dd62:	inc    esi
  40dd63:	loopne 0x40dd60
  40dd65:	adc    DWORD PTR [esi+eax*1+0x5365e900],ebp
  40dd6c:	or     ebp,ecx
  40dd6e:	mov    DWORD PTR [ebp+0x74f96aeb],ebx
  40dd74:	mov    WORD PTR [esi+ebx*1+0x6fcf67d9],fs
  40dd7b:	sar    edi,cl
  40dd7d:	adc    BYTE PTR [edi],0xcf
  40dd80:	inc    eax
  40dd81:	jmp    0xd14cbd8d
  40dd86:	push   edi
  40dd87:	fsin   
  40dd89:	(bad)  
  40dd8a:	sub    edx,DWORD PTR [ebx+esi*2+0x42]
  40dd8e:	test   DWORD PTR [ebp-0x20d13a84],edx
  40dd94:	pop    esi
  40dd95:	mov    esi,0xb1449922
  40dd9a:	lods   eax,DWORD PTR ds:[esi]
  40dd9b:	out    0xf7,eax
  40dd9d:	mov    ch,0x0
  40dd9f:	add    BYTE PTR ds:0x2e1f0014,dh
  40dda5:	push   ecx
  40dda6:	inc    esp
  40dda7:	mov    eax,ds:0xe90013c6
  40ddac:	retf   
  40ddad:	sar    dh,cl
  40ddaf:	adc    al,0xad
  40ddb1:	out    dx,eax
  40ddb2:	das    
  40ddb3:	add    BYTE PTR [edi+0x51],dl
  40ddb6:	dec    BYTE PTR [ebp+edx*2-0x1b17b104]
  40ddbd:	or     DWORD PTR [eax],eax
  40ddbf:	add    BYTE PTR [ebx+0x186a0acf],bl
  40ddc5:	test   DWORD PTR [ebx-0x1c],eax
  40ddc8:	mov    eax,0xc946e57b
  40ddcd:	adc    edi,edi
  40ddcf:	jne    0x40dddd
  40ddd1:	cld    
  40ddd2:	fmul   QWORD PTR [esi+0x6f]
  40ddd5:	out    0x9,al
  40ddd7:	shl    BYTE PTR [edi+edi*8+0x13c9684f],0xef
  40dddf:	mov    esi,0x873e6a8
  40dde4:	and    BYTE PTR [ebx+ebp*2-0x5304e001],dh
  40ddeb:	dec    ebx
  40ddec:	pop    ds
  40dded:	out    0xfd,al
  40ddef:	dec    ebp
  40ddf0:	inc    eax
  40ddf1:	xchg   edx,eax
  40ddf2:	jnp    0x40ddec
  40ddf4:	cwde   
  40ddf5:	ins    BYTE PTR es:[edi],dx
  40ddf6:	mov    dh,0xe8
  40ddf8:	call   0x5240db56
  40ddfd:	aad    0x6
  40ddff:	add    BYTE PTR [ebp+0x83ea9a],ah
  40de05:	add    ah,dl
  40de07:	xchg   esp,eax
  40de08:	push   0xfd50e200
  40de0d:	jne    0x40dd9f
  40de0f:	sti    
  40de10:	ror    BYTE PTR [eax+0x7f],0xe9
  40de14:	xchg   DWORD PTR [ebp+0x6c],eax
  40de17:	js     0x40de1c
  40de19:	inc    edi
  40de1a:	or     DWORD PTR [eax],edx
  40de1c:	push   DWORD PTR ds:0x413b3b
  40de22:	lahf   
  40de23:	pop    edi
  40de24:	push   es
  40de25:	call   0x3e72d2
  40de2a:	and    BYTE PTR [edi],cl
  40de2c:	inc    edi
  40de2d:	inc    ecx
  40de2e:	xor    DWORD PTR [ebp-0x16],edi
  40de31:	add    DWORD PTR [ecx],esi
  40de33:	jge    0x40ddb7
  40de35:	(bad)  
  40de36:	pushf  
  40de37:	gs push 0xffffffdd
  40de3a:	sbb    eax,0x5cfe7ce6
  40de3f:	or     ch,BYTE PTR [ebx]
  40de41:	inc    ecx
  40de42:	xor    esi,esi
  40de44:	test   BYTE PTR [edi],0x19
  40de47:	add    al,0x7d
  40de49:	(bad)  
  40de4a:	inc    BYTE PTR [eax+eax*1+0x0]
  40de4e:	xor    ebp,edi
  40de50:	jl     0x40dec6
  40de52:	cmp    ebp,edx
  40de54:	pop    ds
  40de55:	jmp    esi
  40de57:	int    0x7c
  40de59:	je     0x40de38
  40de5b:	and    eax,0xe2c907f7
  40de60:	retf   
  40de61:	dec    dh
  40de63:	xor    eax,DWORD PTR [edx+0x3]
  40de66:	xor    DWORD PTR [eax+0xeb87],ebp
  40de6c:	mov    dl,0x30
  40de6e:	pusha  
  40de6f:	push   ebp
  40de70:	pop    esi
  40de71:	xchg   ebx,eax
  40de72:	add    ch,BYTE PTR [edx-0x7]
  40de75:	adc    eax,0xb09907f7
  40de7a:	retf   0x9efe
  40de7d:	jecxz  0x40de45
  40de7f:	sti    
  40de80:	mov    dl,0x9f
  40de82:	jns    0x40deb1
  40de84:	lock jl 0x40de89
  40de87:	shrd   DWORD PTR [edi-0x5ceffff],ebx,cl
  40de8e:	cmp    eax,0x43c47fd
  40de93:	add    BYTE PTR [esi],bh
  40de95:	icebp  
  40de96:	inc    edx
  40de97:	add    BYTE PTR [ecx],dh
  40de99:	jge    0x40df1a
  40de9b:	cmp    al,0x34
  40de9d:	push   ss
  40de9e:	ret    
  40de9f:	call   DWORD PTR [esi+0x6d]
  40dea2:	xchg   BYTE PTR [edx-0x7cfd82d0],dh
  40dea8:	add    al,0x14
  40deaa:	mov    al,0x2d
  40deac:	lock adc ebp,ecx
  40deaf:	or     al,0xad
  40deb1:	lods   eax,DWORD PTR ds:[esi]
  40deb2:	out    0x3,eax
  40deb4:	xor    DWORD PTR [ecx-0x2cabb135],edx
  40deba:	call   0x5fd10cc2
  40debf:	add    dh,BYTE PTR [ecx]
  40dec1:	adc    al,0x6a
  40dec3:	ds loopne 0x40defc
  40dec6:	sub    BYTE PTR [ecx+esi*1],al
  40dec9:	adc    eax,0x14318f6d
  40dece:	jmp    0x3540df53
  40ded3:	aas    
  40ded4:	push   es
  40ded5:	ret    
  40ded6:	out    dx,al
  40ded7:	fld    QWORD PTR gs:[edi+0x3e91367]
  40dede:	mov    dl,0x27
  40dee0:	call   0xe9554f11
  40dee5:	or     al,0xb5
  40dee7:	loop   0x40ded0
  40dee9:	add    esi,DWORD PTR [ecx]
  40deeb:	cld    
  40deec:	jnp    0x40deb2
  40deee:	jno    0x40df04
  40def0:	xchg   ebx,eax
  40def1:	add    esi,DWORD PTR [esi-0xfd2f001]
  40def7:	adc    esp,DWORD PTR [eax-0x3a]
  40defa:	sahf   
  40defb:	xchg   ecx,eax
  40defc:	cmp    DWORD PTR [ebx-0x62],0x16
  40df00:	(bad)  gs:[ecx]
  40df03:	adc    al,0xe9
  40df05:	sub    BYTE PTR [edi+0x7ef5edbe],al
  40df0b:	gs sti 
  40df0d:	js     0x40df5b
  40df0f:	shr    eax,cl
  40df11:	mov    es,WORD PTR [esi+0x35f1df19]
  40df17:	jnp    0x40df2f
  40df19:	add    eax,0xd2721431
  40df1e:	sub    bl,BYTE PTR [ecx-0x155413ce]
  40df24:	inc    DWORD PTR [esp+edi*4-0x28]
  40df28:	repz loop 0x40def6
  40df2b:	adc    eax,0x14340484
  40df30:	add    BYTE PTR [eax-0x16ffecd5],dl
  40df36:	add    BYTE PTR [eax],al
  40df38:	sbb    bh,BYTE PTR [ebp+0x46]
  40df3b:	sub    BYTE PTR ds:0x54913665,ch
  40df41:	or     BYTE PTR [eax],al
  40df43:	jmp    0x6c4f336f
  40df48:	and    DWORD PTR [ebp-0x2],0x7e5afe9
  40df4f:	jmp    0xea2a6f7f
  40df54:	xor    dl,BYTE PTR [edi+edi*8]
  40df57:	fidivr WORD PTR [edx]
  40df59:	jl     0x40dfba
  40df5b:	mov    ds:0xac88666b,eax
  40df60:	bound  esp,QWORD PTR [esi+0x76]
  40df63:	icebp  
  40df64:	pop    ebx
  40df65:	loopne 0x40df56
  40df67:	ss ret 0xe818
  40df6b:	mul    DWORD PTR [di-0x2]
  40df6f:	xchg   ecx,eax
  40df70:	xchg   esp,eax
  40df71:	int    0x40
  40df73:	jmp    0x230bfb3
  40df78:	sbb    al,0xa
  40df7a:	add    cl,ch
  40df7c:	aaa    
  40df7d:	push   esp
  40df7e:	push   cs
  40df7f:	ins    BYTE PTR es:[edi],dx
  40df80:	loope  0x40dfe6
  40df82:	(bad)  
  40df83:	jmp    0xaccc440c
  40df88:	sbb    dl,ch
  40df8a:	mov    WORD PTR [esi+ecx*1-0x7316962b],fs
  40df91:	fs push esp
  40df93:	fisub  WORD PTR [ecx]
  40df95:	comiss xmm5,DWORD PTR [eax]
  40df98:	xor    eax,0xdec019
  40df9d:	add    dh,ah
  40df9f:	jge    0x40dfa0
  40dfa1:	dec    DWORD PTR [eax+0x10]
  40dfa4:	lea    eax,[ebp+0x6c]
  40dfa7:	inc    eax
  40dfa8:	std    
  40dfa9:	jne    0x40e01b
  40dfab:	jmp    0x3d8cc23
  40dfb0:	leave  
  40dfb1:	or     DWORD PTR cs:[eax],edx
  40dfb4:	or     eax,eax
  40dfb6:	sbb    al,0x68
  40dfb8:	mov    eax,DWORD PTR [ebp-0x48]
  40dfbb:	inc    edi
  40dfbc:	push   0x6a183200
  40dfc1:	pop    es
  40dfc2:	inc    edx
  40dfc3:	sbb    bh,bh
  40dfc5:	jne    0x40df73
  40dfc7:	ficom  WORD PTR [ebx]
  40dfc9:	int    0xf6
  40dfcb:	pop    eax
  40dfcc:	dec    BYTE PTR [edx]
  40dfce:	fdiv   DWORD PTR [ebx+0x54]
  40dfd1:	(bad)  
  40dfd2:	(bad)  
  40dfd4:	out    0xe8,al
  40dfd6:	rcr    esi,0xfd
  40dfd9:	mov    DWORD PTR [ebp+0x78458bcb],ebx
  40dfdf:	inc    edi
  40dfe0:	std    
  40dfe1:	jne    0x40dff7
  40dfe3:	jno    0x40dfe3
  40dfe5:	imul   ecx,edi,0x8dfefe71
  40dfeb:	ret    
  40dfec:	std    
  40dfed:	adc    eax,0x412d25
  40dff2:	ret    
  40dff3:	xlat   BYTE PTR ds:[ebx]
  40dff4:	jb     0x40e01f
  40dff6:	mov    al,ds:0x6ef0017
  40dffb:	fidiv  WORD PTR [ebx+0x8]
  40dffe:	xor    BYTE PTR [edi],ah
  40e000:	inc    esi
  40e001:	inc    DWORD PTR [eax]
  40e003:	add    BYTE PTR [edi],dh
  40e005:	fidiv  WORD PTR [eax+ecx*1-0x69]
  40e009:	fs add bh,bh
  40e00c:	or     eax,0xce58e80f
  40e011:	fdivp  st(5),st
  40e013:	(bad)  
  40e014:	(bad)  
  40e016:	std    
  40e017:	jne    0x40dfcd
  40e019:	fnsave [ebx+0x8]
  40e01c:	xor    DWORD PTR [ebp-0x33],edx
  40e01f:	inc    ebp
  40e020:	push   dx
  40e022:	js     0x40e098
  40e024:	jge    0x40e06b
  40e026:	test   BYTE PTR [eax+0x56],cl
  40e029:	mov    ds:0xaa557478,al
  40e02e:	push   cs
  40e02f:	rcl    DWORD PTR [edi],1
  40e031:	sub    al,0x4
  40e033:	push   0x31
  40e035:	mov    edx,0x6836ebee
  40e03a:	dec    ebp
  40e03b:	sub    eax,0x74776d70
  40e040:	and    DWORD PTR [ebp-0x65e1b720],edx
  40e046:	test   dh,al
  40e048:	inc    ecx
  40e049:	loop   0x40e011
  40e04b:	repz mov dl,0x67
  40e04e:	outs   dx,BYTE PTR ds:[esi]
  40e04f:	push   DWORD PTR [edi]
  40e051:	clc    
  40e052:	imul   edi,ebp,0xfffffffe
  40e055:	stc    
  40e056:	push   0xffffffb4
  40e058:	test   ecx,0xca316978
  40e05e:	out    dx,al
  40e05f:	mul    esi
  40e061:	add    DWORD PTR [bx],ebp
  40e064:	jo     0x40e0d3
  40e066:	ja     0x40e0dc
  40e068:	add    BYTE PTR [eax],al
  40e06a:	aad    0x21
  40e06c:	out    dx,eax
  40e06d:	pop    es
  40e06e:	(bad)  
  40e070:	sar    esi,0xc6
  40e073:	xchg   ecx,eax
  40e074:	fmul   st,st(0)
  40e076:	repz jo 0x40e07b
  40e079:	push   ebp
  40e07a:	stos   BYTE PTR es:[edi],al
  40e07b:	adc    BYTE PTR [ebx+0x79018dc3],al
  40e081:	(bad)  
  40e082:	mov    ah,0xb7
  40e084:	jbe    0x40e0d5
  40e086:	sahf   
  40e087:	fild   WORD PTR [esi]
  40e089:	call   FWORD PTR [esi+edi*2+0x29]
  40e08d:	inc    ecx
  40e08e:	xor    DWORD PTR ds:0x6d311afd,edx
  40e094:	or     eax,eax
  40e096:	cs adc al,0x6c
  40e099:	test   al,0x31
  40e09b:	adc    al,0xe9
  40e09d:	inc    eax
  40e09e:	cmc    
  40e09f:	pop    ebx
  40e0a0:	call   0xa65511a8
  40e0a5:	mov    esi,0x3ed6262
  40e0aa:	xor    esi,ebp
  40e0ac:	call   0xe92d2f9e
  40e0b1:	in     eax,dx
  40e0b2:	inc    esi
  40e0b3:	(bad)  
  40e0b4:	and    esi,DWORD PTR [eax-0x12]
  40e0b7:	nop
  40e0b8:	imul   ebp,DWORD PTR [edi+0x3f],0x62
  40e0bc:	popf   
  40e0bd:	shr    DWORD PTR [edi],cl
  40e0bf:	call   0x60de5954
  40e0c4:	add    dh,0x3b
  40e0c7:	adc    al,0xe9
  40e0c9:	or     al,0xf1
  40e0cb:	call   0x414bb3
  40e0d0:	adc    BYTE PTR [ebx],0xe9
  40e0d3:	add    ebx,DWORD PTR [ecx-0x13d3fa8]
  40e0d9:	(bad)  
  40e0da:	fild   DWORD PTR [edi]
  40e0dc:	or     ebp,esp
  40e0de:	lods   al,BYTE PTR ds:[esi]
  40e0df:	js     0x40e0d0
  40e0e1:	les    esp,FWORD PTR [ecx+0x53]
  40e0e4:	mov    ch,0x97
  40e0e6:	push   esp
  40e0e7:	jo     0x40e0c8
  40e0e9:	popa   
  40e0ea:	cwde   
  40e0eb:	aad    0xce
  40e0ed:	hlt    
  40e0ee:	lods   al,BYTE PTR ds:[esi]
  40e0ef:	js     0x40e0c0
  40e0f1:	mov    ebp,DWORD PTR [ebx+0x57]
  40e0f4:	mov    edi,0x846b2d61
  40e0f9:	int3   
  40e0fa:	and    eax,0x91144878
  40e0ff:	dec    ecx
  40e100:	not    edx
  40e102:	call   0x1581be7f
  40e107:	js     0x40e0a8
  40e109:	popa   
  40e10a:	mov    ebx,0xe8d349d4
  40e10f:	imul   eax,esp,0xffffffcd
  40e112:	push   ebp
  40e114:	dec    BYTE PTR [ebx+0x620ef984]
  40e11a:	(bad)  
  40e11b:	push   ebx
  40e11c:	sub    eax,0x7426d2ec
  40e121:	popa   
  40e122:	std    
  40e123:	pushf  
  40e124:	or     DWORD PTR [edx-0x2],ebp
  40e127:	into   
  40e128:	out    0x27,al
  40e12a:	push   ebx
  40e12b:	adc    BYTE PTR [ecx+eiz*2-0x1a],ch
  40e12f:	popa   
  40e130:	jp     0x40e194
  40e132:	(bad)  
  40e133:	pusha  
  40e134:	add    BYTE PTR [eax],al
  40e136:	mov    al,0x6d
  40e138:	imul   BYTE PTR [esi+0x10ffeac6]
  40e13e:	aad    0xd9
  40e140:	inc    eax
  40e141:	jmp    0x9f1c89ed
  40e146:	sahf   
  40e147:	(bad)  
  40e148:	(bad)  
  40e149:	aam    0x3
  40e14b:	sub    al,0x41
  40e14d:	jmp    0x7e8bbcdc
  40e152:	xchg   BYTE PTR [esp+eax*4-0x19d697f],cl
  40e159:	add    esi,DWORD PTR ds:0xedaedcec
  40e15f:	pusha  
  40e160:	std    
  40e161:	xchg   esp,eax
  40e162:	mov    DWORD PTR [edx-0x2],ebp
  40e165:	push   esi
  40e166:	pop    esi
  40e167:	sub    BYTE PTR [ebx+0x0],dl
  40e16a:	hlt    
  40e16b:	pusha  
  40e16c:	out    0xa5,al
  40e16e:	jmp    0x40e1d1
  40e170:	(bad)  
  40e171:	jo     0x40e123
  40e173:	je     0x40e16b
  40e175:	ss ds jmp 0x40e178
  40e179:	rcl    BYTE PTR [eax-0x26],0x40
  40e17d:	jmp    0x171c89c1
  40e182:	es (bad) 
  40e184:	(bad)  
  40e185:	fadd   QWORD PTR [ebx+0xae9412b]
  40e18b:	pop    ds
  40e18c:	dec    ebx
  40e18d:	add    BYTE PTR [edi],ch
  40e18f:	jmp    0xf179671b
  40e194:	std    
  40e195:	call   FWORD PTR [ebx]
  40e197:	fwait
  40e198:	jmp    0xfee9:0x8f0000f7
  40e19f:	jae    0x40e1dc
  40e1a1:	jo     0x40e1a1
  40e1a3:	(bad)  
  40e1a4:	jg     0x40e14c
  40e1a6:	std    
  40e1a7:	jne    0x40e1f9
  40e1a9:	in     al,dx
  40e1aa:	xchg   ecx,eax
  40e1ab:	inc    esp
  40e1ac:	outs   dx,DWORD PTR ds:[esi]
  40e1ad:	jmp    0xf1d997af
  40e1b2:	std    
  40e1b3:	dec    DWORD PTR [edi+0x77e80663]
  40e1b9:	mov    al,ds:0xa38ffffd
  40e1be:	jmp    0x2075:0xfde98ff7
  40e1c5:	in     al,dx
  40e1c6:	xlat   BYTE PTR ds:[ebx]
  40e1c7:	inc    esp
  40e1c8:	mov    edi,0xb0b5fde6
  40e1cd:	out    dx,al
  40e1ce:	std    
  40e1cf:	jmp    FWORD PTR [edi-0x3c17f99c]
  40e1d5:	lahf   
  40e1d6:	std    
  40e1d7:	(bad)  
  40e1d8:	jg     0x40e17e
  40e1da:	loop   0x40e1d3
  40e1dc:	(bad)  
  40e1dd:	out    0xfd,al
  40e1df:	jne    0x40e1e1
  40e1e1:	in     al,dx
  40e1e2:	mov    ebx,0xfde68f44
  40e1e7:	mov    ch,0x78
  40e1e9:	out    dx,al
  40e1ea:	std    
  40e1eb:	jmp    FWORD PTR [edi+0x64]
  40e1ee:	push   es
  40e1ef:	call   0x3e81b3
  40e1f4:	shld   edx,ebx,0xf7
  40e1f8:	jmp    ebp
  40e1fa:	std    
  40e1fb:	jne    0x40e1cd
  40e1fd:	jmp    0x40e27d
  40e1ff:	inc    BYTE PTR [eax]
  40e201:	add    BYTE PTR [edi],cl
  40e203:	out    0xfd,al
  40e205:	mov    ch,0x6c
  40e207:	out    dx,al
  40e208:	std    
  40e209:	push   DWORD PTR [ecx]
  40e20b:	adc    eax,0xe9e46aa
  40e210:	jbe    0x40e1c6
  40e212:	mov    eax,ds:0x99fe745e
  40e217:	int    0xbd
  40e219:	inc    BYTE PTR [esi-0x7914519a]
  40e21f:	outs   dx,BYTE PTR ds:[esi]
  40e220:	je     0x40e209
  40e222:	pushf  
  40e223:	cs jne 0x40e224
  40e226:	outs   dx,BYTE PTR ds:[esi]
  40e227:	mov    BYTE PTR [ebx-0xa],ch
  40e22a:	inc    si
  40e22c:	imul   ecx,DWORD PTR [ecx-0x18bb20a],0xffffff9c
  40e233:	push   ecx
  40e234:	ins    BYTE PTR es:[edi],dx
  40e235:	dec    BYTE PTR [esi+0x45]
  40e238:	hlt    
  40e239:	inc    esi
  40e23a:	inc    esi
  40e23b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e23c:	je     0x40e1f2
  40e23e:	push   ecx
  40e23f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e240:	je     0x40e240
  40e242:	dec    ecx
  40e243:	add    DWORD PTR [ebp-0x4181d102],edi
  40e249:	neg    DWORD PTR [eax]
  40e24b:	or     eax,0x8e1efe76
  40e250:	out    dx,al
  40e251:	sti    
  40e252:	or     edi,edx
  40e254:	sbb    al,BYTE PTR [eax]
  40e256:	xor    DWORD PTR [ecx+eax*2-0x76ffcef9],esp
  40e25d:	jmp    0x40e211
  40e25f:	mov    eax,0x43316977
  40e264:	leave  
  40e265:	inc    BYTE PTR [eax]
  40e267:	add    BYTE PTR [ebp+eiz*2+0x6a],ah
  40e26b:	test   DWORD PTR [ebp-0x3a],ebp
  40e26e:	je     0x40e1f8
  40e270:	je     0x40e243
  40e272:	jmp    0x40e222
  40e274:	outs   dx,BYTE PTR ds:[esi]
  40e275:	lods   al,BYTE PTR ds:[esi]
  40e276:	add    bh,bh
  40e278:	inc    esp
  40e279:	gs push 0x7
  40e27c:	(bad)  
  40e27d:	and    eax,0x3144fe75
  40e282:	jne    0x40e2f8
  40e284:	sub    DWORD PTR [ecx+edx*1],edx
  40e287:	mov    bl,0xf2
  40e289:	pop    esi
  40e28a:	sbb    eax,0xe917704b
  40e28f:	into   
  40e290:	stos   DWORD PTR es:[edi],eax
  40e291:	outs   dx,DWORD PTR ds:[esi]
  40e292:	imul   eax,DWORD PTR [eax-0x5e],0x99077b5e
  40e299:	cmp    cl,ah
  40e29b:	add    esi,DWORD PTR [ecx]
  40e29d:	or     ebp,DWORD PTR [ecx]
  40e29f:	out    dx,eax
  40e2a0:	xor    cl,BYTE PTR [ebp+0x2a]
  40e2a3:	or     BYTE PTR [ecx],dh
  40e2a5:	pop    edi
  40e2a6:	pop    ebx
  40e2a7:	adc    al,0x59
  40e2a9:	or     BYTE PTR [ecx],al
  40e2ab:	add    al,0x31
  40e2ad:	or     ebp,DWORD PTR [ecx-0x55b2cd12]
  40e2b3:	pop    es
  40e2b4:	xor    DWORD PTR [ebp-0x17b083d5],ecx
  40e2ba:	shr    BYTE PTR [ebx+0x1d],0xd7
  40e2be:	mov    ch,0x74
  40e2c0:	test   eax,0xbd74acd8
  40e2c5:	pop    edi
  40e2c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e2c7:	out    dx,al
  40e2c8:	es pop esi
  40e2ca:	adc    edx,DWORD PTR [eax+eax*1]
  40e2cd:	add    BYTE PTR [ecx],bl
  40e2cf:	dec    edi
  40e2d0:	cmp    dh,BYTE PTR [ebp+0x1f]
  40e2d3:	or     ch,BYTE PTR [ecx+0x2b8b5bef]
  40e2d9:	jo     0x40e273
  40e2db:	adc    al,0x6c
  40e2dd:	mov    esi,0xee75c502
  40e2e2:	cli    
  40e2e3:	ins    BYTE PTR es:[edi],dx
  40e2e4:	mov    edx,0xf15df7e7
  40e2e9:	inc    ebx
  40e2ea:	bound  esi,QWORD PTR [esi]
  40e2ec:	rol    DWORD PTR [ebx],1
  40e2ee:	inc    ecx
  40e2ef:	ins    DWORD PTR es:[edi],dx
  40e2f0:	xchg   esi,eax
  40e2f1:	je     0x40e358
  40e2f3:	or     al,0x41
  40e2f5:	shl    DWORD PTR [ebx+0x5d],cl
  40e2f8:	inc    ebp
  40e2f9:	je     0x40e340
  40e2fb:	adc    BYTE PTR [esi],bh
  40e2fd:	out    dx,al
  40e2fe:	cs ins BYTE PTR es:[edi],dx
  40e300:	dec    DWORD PTR [ebp+0x2efe5ef1]
  40e306:	(bad)  
  40e307:	popa   
  40e308:	(bad)  
  40e309:	pushf  
  40e30a:	es pop esi
  40e30c:	je     0x40e2ff
  40e30e:	sbb    dh,al
  40e310:	inc    edx
  40e311:	push   ss
  40e312:	and    eax,0xa0d745e
  40e317:	mov    bh,0x45
  40e319:	push   es
  40e31a:	add    eax,0x32edc14c
  40e31f:	(bad)  
  40e320:	mov    al,BYTE PTR ds:0x97d351b1
  40e326:	std    
  40e327:	out    0xb,eax
  40e329:	rcr    DWORD PTR [edx-0x36],1
  40e32c:	(bad)  
  40e32d:	fisub  WORD PTR [esi-0x63]
  40e330:	je     0x40e31e
  40e332:	add    BYTE PTR [eax],al
  40e334:	or     BYTE PTR [ecx+eax*8-0x23],0x32
  40e339:	pop    DWORD PTR [ecx+edi*4+0x65]
  40e33d:	pop    esi
  40e33e:	je     0x40e32d
  40e340:	jmp    0xc009:0xc2b64bfb
  40e347:	fisubr WORD PTR [esi+0x32e8ff3d]
  40e34d:	pop    ebp
  40e34e:	je     0x40e2ed
  40e350:	test   DWORD PTR [eax-0x735d69bb],ebx
  40e356:	inc    esp
  40e357:	jge    0x40e2fb
  40e359:	call   0x69496a59
  40e35e:	(bad)  
  40e35f:	hlt    
  40e360:	call   0x8a5e:0x822faa75
  40e367:	hlt    
  40e368:	push   esi
  40e369:	ins    BYTE PTR es:[edi],dx
  40e36a:	mov    ds:0x681432e9,al
  40e36f:	rep stos BYTE PTR es:[edi],al
  40e371:	sar    edi,cl
  40e373:	mov    esi,0xe917657a
  40e378:	xor    cl,BYTE PTR [ecx]
  40e37a:	rol    BYTE PTR [eax],0x8d
  40e37d:	or     ebp,ecx
  40e37f:	cwde   
  40e380:	fcom   DWORD PTR [eax]
  40e382:	add    BYTE PTR [ebx+0x48083ff8],cl
  40e388:	mov    DWORD PTR [eax],edx
  40e38a:	call   0x5192c8
  40e38f:	add    ecx,DWORD PTR [eax-0x21]
  40e392:	jae    0x40e37c
  40e394:	mov    al,0xe
  40e396:	dec    eax
  40e397:	inc    ecx
  40e398:	add    BYTE PTR [eax],al
  40e39a:	mov    BYTE PTR [edx],bh
  40e39c:	out    0xd3,al
  40e39e:	nop
  40e39f:	adc    BYTE PTR [eax],al
  40e3a1:	or     ebx,DWORD PTR [eax+0x5b]
  40e3a4:	add    bl,ch
  40e3a6:	(bad)  
  40e3a7:	fimul  WORD PTR [esi]
  40e3a9:	mov    BYTE PTR [ebp+0x7c4587f5],bl
  40e3af:	cmp    BYTE PTR [edx],bl
  40e3b1:	dec    eax
  40e3b2:	sbb    DWORD PTR [eax],ebx
  40e3b4:	push   esi
  40e3b5:	call   0x40ec7c
  40e3ba:	push   ebx
  40e3bb:	shl    BYTE PTR [ebx+0x2],1
  40e3be:	arpl   WORD PTR [ebx-0x77],ax
  40e3c1:	lock loopne 0x40e3c7
  40e3c4:	dec    eax
  40e3c5:	inc    ecx
  40e3c6:	dec    eax
  40e3c7:	mov    eax,0x104816fc
  40e3cc:	add    esi,eax
  40e3ce:	mov    eax,ds:0x3268da5c
  40e3d3:	cwde   
  40e3d4:	aas    
  40e3d5:	add    BYTE PTR [esi-0x48],bl
  40e3d8:	xchg   esi,eax
  40e3d9:	sbb    BYTE PTR [eax],cl
  40e3db:	sbb    BYTE PTR [ebx],cl
  40e3dd:	ror    BYTE PTR ds:0x823beb12,0x7
  40e3e4:	mov    BYTE PTR [ebp-0x61],dl
  40e3e7:	fadd   DWORD PTR [ebx-0x28]
  40e3ea:	xchg   ebx,eax
  40e3eb:	dec    esp
  40e3ec:	loop   0x40e3b4
  40e3ee:	fcom   DWORD PTR [edi]
  40e3f0:	mov    eax,DWORD PTR [ebp+0x70]
  40e3f3:	int    0xfe
  40e3f5:	push   DWORD PTR [ecx]
  40e3f7:	ret    0xdbf7
  40e3fa:	(bad)  
  40e3fb:	inc    eax
  40e3fc:	pop    edx
  40e3fd:	inc    BYTE PTR [eax]
  40e3ff:	add    BYTE PTR [ebp+eiz*2+0x5a],al
  40e403:	xchg   edx,eax
  40e404:	(bad)  
  40e405:	sbb    dh,BYTE PTR [edx-0x77]
  40e408:	fs into 
  40e40a:	jge    0x40e450
  40e40c:	int    0xf5
  40e40e:	adc    cl,BYTE PTR [edx+0x447e1a04]
  40e414:	mov    ebp,esp
  40e416:	adc    al,BYTE PTR [eax-0x7afe92a1]
  40e41c:	std    
  40e41d:	or     DWORD PTR [edx-0x2],esi
  40e420:	mov    ds,eax
  40e422:	pop    esi
  40e423:	out    0xd0,eax
  40e425:	mov    al,0x71
  40e427:	(bad)  
  40e428:	lods   al,BYTE PTR ds:[esi]
  40e429:	test   al,0x72
  40e42b:	dec    edi
  40e42c:	mov    DWORD PTR [edx],esi
  40e42e:	mov    esi,0x3466efe
  40e433:	pop    esi
  40e434:	js     0x40e3e5
  40e436:	(bad)  
  40e437:	inc    DWORD PTR [esi+esi*8]
  40e43a:	pop    edi
  40e43b:	(bad)  
  40e43c:	fdivr  QWORD PTR [eax]
  40e43e:	pop    edx
  40e43f:	aam    0xf8
  40e441:	push   ecx
  40e442:	jo     0x40e44e
  40e444:	jno    0x40e467
  40e446:	sbb    ebp,DWORD PTR [eax+0x4c]
  40e449:	sub    al,bl
  40e44b:	jmp    esi
  40e44d:	push   esp
  40e44e:	fisttp QWORD PTR [eax+0x2e]
  40e451:	mov    dl,0xd3
  40e453:	addr16 aaa 
  40e455:	lahf   
  40e456:	ret    
  40e457:	call   DWORD PTR [esi-0x2810fd93]
  40e45d:	adc    al,0x72
  40e45f:	inc    esi
  40e460:	jo     0x40e4cf
  40e462:	sar    dh,cl
  40e464:	add    BYTE PTR [eax],al
  40e466:	jl     0x40e4cd
  40e468:	pop    edx
  40e469:	or     DWORD PTR [ecx+0x58e770e2],0xf8fe7130
  40e473:	adc    ebp,DWORD PTR [ebx]
  40e475:	cld    
  40e476:	out    0xbf,al
  40e478:	jno    0x40e4da
  40e47a:	mov    bl,0x4f
  40e47c:	push   esp
  40e47d:	(bad)  
  40e47f:	in     al,dx
  40e480:	mov    ds:0x510c4570,al
  40e485:	in     eax,dx
  40e486:	jo     0x40e4e3
  40e488:	cmp    eax,0xc258757b
  40e48d:	or     eax,0x5be0e0b6
  40e492:	aad    0x5a
  40e494:	and    eax,0x1e371871
  40e499:	div    DWORD PTR [esi]
  40e49b:	ins    BYTE PTR es:[edi],dx
  40e49c:	jno    0x40e50f
  40e49e:	xchg   edi,eax
  40e49f:	pop    edx
  40e4a0:	or     BYTE PTR [edi],0x8e
  40e4a3:	loopne 0x40e495
  40e4a5:	pop    ebx
  40e4a6:	mov    eax,ds:0x1670fd5a
  40e4ab:	adc    al,0xe9
  40e4ad:	pusha  
  40e4ae:	mov    ah,0xeb
  40e4b0:	lock enter 0x13f1,0x51
  40e4b5:	pop    edi
  40e4b6:	out    dx,eax
  40e4b7:	aam    0xe8
  40e4b9:	jo     0x40e4a0
  40e4bb:	or     eax,ecx
  40e4bd:	es retf 
  40e4bf:	pop    edx
  40e4c0:	int    0x70
  40e4c2:	lds    edx,FWORD PTR [edi-0x3b]
  40e4c5:	imul   BYTE PTR [esi]
  40e4c7:	ins    BYTE PTR es:[edi],dx
  40e4c8:	mov    BYTE PTR ds:[eax],0x0
  40e4cc:	aas    
  40e4cd:	pop    edx
  40e4ce:	lahf   
  40e4cf:	inc    ebp
  40e4d0:	xor    dl,BYTE PTR [esp+edx*1]
  40e4d3:	jge    0x40e4ef
  40e4d5:	xchg   esp,eax
  40e4d6:	lods   al,BYTE PTR ds:[esi]
  40e4d7:	dec    ebx
  40e4d8:	pop    ds
  40e4d9:	pop    edx
  40e4da:	popf   
  40e4db:	jle    0x40e552
  40e4dd:	pop    eax
  40e4de:	cmp    BYTE PTR [ecx-0x63],dh
  40e4e1:	or     BYTE PTR [esi+0x2c6c36f6],cl
  40e4e7:	sbb    DWORD PTR [ecx],esi
  40e4e9:	adc    al,0xf2
  40e4eb:	inc    ebx
  40e4ec:	das    
  40e4ed:	(bad)  
  40e4ee:	jmp    FWORD PTR [eax-0x59ffebcd]
  40e4f4:	mul    DWORD PTR [ecx-0x1]
  40e4f7:	call   0xa507f92e
  40e4fc:	pop    dx
  40e4fe:	push   es
  40e4ff:	jmp    0xc340d336
  40e504:	xor    ch,dh
  40e506:	call   edx
  40e508:	xor    al,BYTE PTR [edi-0x771dcabc]
  40e50e:	test   BYTE PTR ds:0x99fe5a39,bh
  40e514:	and    eax,esp
  40e516:	mul    DWORD PTR [esi]
  40e518:	lahf   
  40e519:	pop    ebp
  40e51a:	out    0xf7,eax
  40e51c:	cmp    DWORD PTR [eax+eax*1],edx
  40e51f:	loop   0x40e513
  40e521:	in     al,0x4
  40e523:	add    BYTE PTR [ebp+0x6ae90014],dh
  40e529:	push   ebp
  40e52a:	daa    
  40e52b:	test   al,0x32
  40e52d:	pop    ecx
  40e52e:	je     0x40e515
  40e530:	add    BYTE PTR [eax],al
  40e532:	ficomp DWORD PTR [ebx]
  40e534:	dec    eax
  40e535:	out    dx,al
  40e536:	fmulp  st(0),st
  40e538:	mov    bh,BYTE PTR [ecx-0x290c6f50]
  40e53e:	into   
  40e53f:	pop    ecx
  40e540:	dec    edi
  40e541:	cmp    esi,ebp
  40e543:	sub    ecx,DWORD PTR [eax-0x32]
  40e546:	fimul  WORD PTR [ebx+0x59bea184]
  40e54c:	(bad)  
  40e54d:	ror    DWORD PTR [esi-0x2b],1
  40e550:	(bad)  
  40e551:	mov    dh,0x5b
  40e553:	pop    ecx
  40e554:	and    bp,bp
  40e557:	sar    edi,cl
  40e559:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e55a:	call   0x8edfdb9f
  40e55f:	pop    edx
  40e560:	je     0x40e543
  40e562:	jp     0x40e4f7
  40e564:	inc    esi
  40e565:	mov    ds,WORD PTR [esi-0x77ff7b74]
  40e56b:	loope  0x40e56a
  40e56d:	jmp    DWORD PTR [edx]
  40e56f:	adc    BYTE PTR [eax+0x51],ch
  40e572:	push   eax
  40e573:	dec    edi
  40e574:	(bad)  
  40e575:	(bad)  
  40e576:	and    eax,0x4ffff5c8
  40e57b:	jmp    0x71c0edf3
  40e580:	inc    ebp
  40e581:	(bad)  
  40e582:	jg     0x40e55b
  40e584:	sub    esp,0x67
  40e587:	jmp    0x3d195089
  40e58c:	pop    eax
  40e58d:	dec    eax
  40e58e:	mov    DWORD PTR [edi+edi*8],edx
  40e591:	mov    ch,0x20
  40e593:	loope  0x40e592
  40e595:	inc    DWORD PTR [eax]
  40e597:	add    BYTE PTR [edi+0x5b],bl
  40e59a:	push   es
  40e59b:	call   0x3e377c
  40e5a0:	and    DWORD PTR [ebx-0x16c0081a],ecx
  40e5a6:	mov    eax,DWORD PTR [ebp-0x21ea4]
  40e5ac:	test   al,0x3c
  40e5ae:	popa   
  40e5af:	dec    eax
  40e5b0:	leave  
  40e5b1:	adc    al,0xff
  40e5b3:	mov    ch,0x20
  40e5b5:	loope  0x40e5b4
  40e5b7:	call   FWORD PTR [edi+0x5b]
  40e5ba:	push   es
  40e5bb:	call   0x3e36fc
  40e5c0:	loope  0x40e54d
  40e5c2:	loop   0x40e5bb
  40e5c4:	jg     0x40e5af
  40e5c6:	push   0x4639f000
  40e5cb:	inc    ecx
  40e5cc:	pop    eax
  40e5cd:	jmp    0xe9c8be85
  40e5d2:	std    
  40e5d3:	push   ebp
  40e5d5:	push   edi
  40e5d6:	out    0x11,al
  40e5d8:	push   edi
  40e5d9:	out    0xfd,eax
  40e5db:	mov    DWORD PTR [ebp-0x40000a0d],edx
  40e5e1:	xchg   edx,eax
  40e5e2:	mov    ebx,0x6d7631f0
  40e5e7:	(bad)  
  40e5e8:	xor    DWORD PTR [ecx],eax
  40e5ea:	fild   DWORD PTR [edx-0x18a7e3c]
  40e5f0:	(bad)  
  40e5f1:	ins    DWORD PTR es:[edi],dx
  40e5f2:	mul    BYTE PTR [ecx-0x4e]
  40e5f5:	and    BYTE PTR [ebx-0xa],bl
  40e5f8:	out    dx,al
  40e5f9:	out    0x2,al
  40e5fb:	je     0x40e5fd
  40e5fd:	add    BYTE PTR [eax-0x31fffdbb],cl
  40e603:	ja     0x40e672
  40e605:	je     0x40e648
  40e607:	aad    0xd6
  40e609:	aas    
  40e60a:	into   
  40e60b:	(bad)  
  40e60c:	ins    DWORD PTR es:[edi],dx
  40e60d:	mov    ah,0xc1
  40e60f:	push   ss
  40e610:	outs   dx,BYTE PTR ds:[esi]
  40e611:	(bad)  
  40e612:	mov    esi,0x89e812a0
  40e617:	lods   eax,DWORD PTR ds:[esi]
  40e618:	ins    DWORD PTR es:[edi],dx
  40e619:	(bad)  
  40e61a:	scas   al,BYTE PTR es:[edi]
  40e61b:	loopne 0x40e67b
  40e61d:	mul    BYTE PTR [esi+0x41746e2e]
  40e623:	add    eax,0xfe963f89
  40e628:	ins    DWORD PTR es:[edi],dx
  40e629:	mov    ah,0x99
  40e62b:	(bad)  
  40e62c:	ins    DWORD PTR es:[edi],dx
  40e62d:	inc    BYTE PTR [esi-0x5217ed28]
  40e633:	lods   eax,DWORD PTR ds:[esi]
  40e634:	ins    DWORD PTR es:[edi],dx
  40e635:	(bad)  
  40e636:	jbe    0x40e650
  40e638:	dec    edi
  40e639:	imul   BYTE PTR [esi+0x66]
  40e63c:	ins    BYTE PTR es:[edi],dx
  40e63d:	mov    ah,0x4d
  40e63f:	ss ins BYTE PTR es:[edi],dx
  40e641:	(bad)  
  40e642:	pop    esi
  40e643:	rcl    BYTE PTR [ebx],0xe8
  40e646:	in     eax,0x2c
  40e648:	ins    DWORD PTR es:[edi],dx
  40e649:	dec    BYTE PTR [esi-0x80]
  40e64c:	arpl   si,si
  40e64e:	inc    esi
  40e64f:	dec    esi
  40e650:	ins    BYTE PTR es:[edi],dx
  40e651:	je     0x40e674
  40e653:	inc    ebp
  40e654:	fnstcw WORD PTR [edi]
  40e656:	ss sahf 
  40e658:	ins    BYTE PTR es:[edi],dx
  40e659:	je     0x40e69c
  40e65b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e65c:	mov    dh,0xd7
  40e65e:	push   ds
  40e65f:	adc    al,0xa6
  40e661:	ins    DWORD PTR es:[edi],dx
  40e662:	add    BYTE PTR [eax],al
  40e664:	pop    ds
  40e665:	loope  0x40e657
  40e667:	pop    ebx
  40e668:	mov    al,ds:0xf6d9556
  40e66d:	mov    eax,ds:0x570775b0
  40e672:	nop
  40e673:	loope  0x40e6e8
  40e675:	push   edi
  40e676:	jge    0x40e6e5
  40e678:	mov    ebp,0xef6d7d63
  40e67d:	imul   edx,DWORD PTR [eax],0xffffffc1
  40e680:	out    0x56,eax
  40e682:	gs mov bh,0xca
  40e685:	pop    esi
  40e686:	pop    ebp
  40e687:	ins    DWORD PTR es:[edi],dx
  40e688:	into   
  40e689:	enter  0x6ca9,0xcf
  40e68d:	push   esi
  40e68e:	xchg   ebx,eax
  40e68f:	pop    esp
  40e690:	mov    edi,0x705c4556
  40e695:	sar    DWORD PTR ds:0x4ca0b76d,cl
  40e69b:	jne    0x40e64c
  40e69d:	push   esi
  40e69e:	inc    eax
  40e69f:	xor    eax,0x6d2556f2
  40e6a4:	in     eax,0x73
  40e6a6:	adc    eax,0xc46b976d
  40e6ab:	ror    BYTE PTR [edi+0x7ec70d56],0x6c
  40e6b2:	mov    ch,0x6d
  40e6b4:	jg     0x40e70c
  40e6b6:	std    
  40e6b7:	idiv   BYTE PTR [edx+0x6b]
  40e6ba:	jle    0x40e6d2
  40e6bc:	xor    DWORD PTR [eax+eiz*1],edx
  40e6bf:	inc    edx
  40e6c0:	cmp    dl,BYTE PTR [esp+edi*1]
  40e6c3:	jns    0x40e70f
  40e6c5:	xchg   edx,eax
  40e6c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e6c7:	outs   dx,DWORD PTR ds:[esi]
  40e6c8:	add    BYTE PTR [eax],al
  40e6ca:	enter  0x4313,0xb9
  40e6ce:	dec    edi
  40e6cf:	loopne 0x40e6b1
  40e6d1:	pop    ebx
  40e6d2:	add    al,0xd4
  40e6d4:	lds    ebp,FWORD PTR [ecx+ebp*4-0x30]
  40e6d8:	mov    esp,0xbbd6c
  40e6dd:	inc    ecx
  40e6de:	pop    ecx
  40e6df:	int3   
  40e6e0:	inc    eax
  40e6e1:	jmp    0xd094077b
  40e6e6:	repz push ebp
  40e6e8:	out    0x95,al
  40e6ea:	xchg   DWORD PTR [esi-0x2],edx
  40e6ed:	xchg   esi,eax
  40e6ee:	pop    es
  40e6ef:	push   cs
  40e6f0:	push   0xffd4cac5
  40e6f5:	adc    BYTE PTR [ebx],dh
  40e6f7:	adc    al,0x0
  40e6f9:	imul   ebx,DWORD PTR [edx+0x73],0x565d76fc
  40e700:	je     0x40e76f
  40e702:	push   ebp
  40e703:	loopne 0x40e70c
  40e705:	push   ecx
  40e706:	add    edx,DWORD PTR [esi]
  40e708:	call   FWORD PTR [esi+0x1b]
  40e70b:	push   ebx
  40e70c:	add    ebp,ecx
  40e70e:	out    0x8a,eax
  40e710:	jmp    0x40e77c
  40e712:	outs   dx,BYTE PTR ds:[esi]
  40e713:	pop    ecx
  40e714:	imul   ebp,ecx,0xb4fec9d8
  40e71a:	mov    edx,0x1df6f46d
  40e71f:	push   esi
  40e720:	mov    BYTE PTR [esi+edx*1-0x2170013],ah
  40e727:	xchg   esi,eax
  40e728:	addr16 mov ds:0xd4da,al
  40e72c:	inc    DWORD PTR [eax-0x324c0000]
  40e732:	inc    eax
  40e733:	jmp    0x1148c74d
  40e738:	iret   
  40e739:	out    dx,al
  40e73a:	(bad)  
  40e73b:	dec    BYTE PTR [edx]
  40e73d:	loopne 0x40e73a
  40e73f:	mul    BYTE PTR [ebp+ecx*1-0x18]
  40e743:	xlat   BYTE PTR ds:[ebx]
  40e744:	jb     0x40e79c
  40e746:	(bad)  
  40e747:	mov    al,0xf7
  40e749:	adc    BYTE PTR [eax],al
  40e74b:	xor    al,0xd6
  40e74d:	push   0x5de5ad80
  40e752:	dec    dh
  40e754:	enter  0xfbcf,0x0
  40e758:	sbb    cl,ch
  40e75a:	jae    0x40e768
  40e75c:	ja     0x40e7c1
  40e75e:	push   es
  40e75f:	call   0x40eb28
  40e764:	adc    edx,ecx
  40e766:	or     eax,0xf1d85
  40e76b:	add    bh,cl
  40e76d:	push   edx
  40e76e:	test   BYTE PTR [eax],0x18
  40e771:	adc    DWORD PTR [eax],eax
  40e773:	(bad)  
  40e774:	dec    ebp
  40e775:	in     al,0xfd
  40e777:	pop    es
  40e778:	or     BYTE PTR [ecx],dl
  40e77a:	push   0x0
  40e77c:	and    dl,BYTE PTR [eax]
  40e77e:	push   0x0
  40e780:	xor    dl,BYTE PTR [eax]
  40e782:	lea    eax,[ebp+0x5c]
  40e785:	inc    eax
  40e786:	mov    eax,DWORD PTR [ebp-0x21e84]
  40e78c:	cwde   
  40e78d:	jmp    0x63a8e005
  40e792:	cli    
  40e793:	call   0x486e798
  40e798:	add    BYTE PTR [eax],al
  40e79a:	ret    
  40e79b:	shl    BYTE PTR [edx+0x5],1
  40e79e:	popa   
  40e79f:	enter  0xffff,0x98
  40e7a3:	cmp    dl,al
  40e7a5:	sub    cl,bl
  40e7a7:	adc    bh,bh
  40e7a9:	jne    0x40e74f
  40e7ab:	mov    eax,0xe93745cf
  40e7b0:	dec    esi
  40e7b1:	mov    ecx,DWORD PTR [eax-0x25]
  40e7b4:	xor    esp,0x1f
  40e7b7:	jmp    0xb8db38b9
  40e7bc:	mov    edi,0x87e97745
  40e7c1:	test   DWORD PTR [eax-0x1f],eax
  40e7c4:	std    
  40e7c5:	push   DWORD PTR [eax]
  40e7c7:	add    DWORD PTR [edx-0x1],eax
  40e7ca:	push   edi
  40e7cb:	ss (bad) 
  40e7cd:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  40e7cf:	cwde   
  40e7d0:	aas    
  40e7d1:	add    BYTE PTR [ecx],dh
  40e7d3:	ds scas eax,DWORD PTR es:[edi]
  40e7d5:	xlat   BYTE PTR ds:[ebx]
  40e7d6:	ds inc ebp
  40e7d8:	imul   edi,esi,0x195a62c4
  40e7de:	in     al,dx
  40e7df:	xchg   ebp,eax
  40e7e0:	imul   ecx,DWORD PTR [eax-0x18e724c],0x6803d826
  40e7ea:	cmc    
  40e7eb:	add    eax,0xe917ffc5
  40e7f0:	dec    edx
  40e7f1:	test   BYTE PTR [esi],0xab
  40e7f4:	imul   esi,DWORD PTR [ecx+edi*1-0x6b],0x4369
  40e7fc:	(bad)  
  40e7fd:	call   0xfe69:0xcb05847b
  40e804:	pop    ebx
  40e805:	cmp    eax,0xfc79d8da
  40e80a:	add    edi,edi
  40e80c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e80d:	aad    0x71
  40e80f:	(bad)  
  40e810:	(bad)  
  40e811:	repnz out dx,eax
  40e813:	pop    es
  40e814:	fabs   
  40e816:	mov    esi,0x7fb4c6fe
  40e81b:	out    0xc6,eax
  40e81d:	fisubr DWORD PTR [ecx-0x74]
  40e820:	lods   al,BYTE PTR ds:[esi]
  40e821:	xor    DWORD PTR [edx-0x2],esi
  40e824:	scas   al,BYTE PTR es:[edi]
  40e825:	lods   eax,DWORD PTR ds:[esi]
  40e826:	(bad)  
  40e828:	stc    
  40e829:	jnp    0x40e82d
  40e82b:	jmp    esp
  40e82d:	aad    0x71
  40e82f:	(bad)  
  40e830:	xchg   esi,eax
  40e831:	xor    dh,al
  40e833:	pop    es
  40e834:	cdq    
  40e835:	add    DWORD PTR [edi+0x7fb486fe],edi
  40e83b:	jecxz  0x40e7c3
  40e83d:	sbb    ch,BYTE PTR [edx+0x69]
  40e840:	xor    DWORD PTR [ebp+0x3cf04901],esp
  40e846:	imul   esi,DWORD PTR [ecx+ecx*4+0x5efe684a],0x4efc5c14
  40e851:	jge    0x40e877
  40e853:	imul   ecx,DWORD PTR [edi-0x63],0x533f646b
  40e85a:	int    0x77
  40e85c:	mov    ch,0x64
  40e85e:	mov    ebp,0x37000069
  40e863:	in     al,0x50
  40e865:	or     DWORD PTR [eax-0x2b],edi
  40e868:	call   0xb5acc5d5
  40e86d:	imul   ebx,DWORD PTR [edi],0xefc1b53
  40e873:	popf   
  40e874:	and    al,0x69
  40e876:	setge  BYTE PTR [ebx+0x50]
  40e87a:	call   DWORD PTR [edx-0x73]
  40e87d:	test   DWORD PTR [ebp-0x89682bd],edi
  40e883:	adc    esi,ebp
  40e885:	fdiv   QWORD PTR [ebx-0x188e7b70]
  40e88b:	push   edx
  40e88c:	call   0xa3d83980
  40e891:	pop    esp
  40e892:	fist   WORD PTR [edx+0x5d]
  40e895:	add    al,0x45
  40e897:	in     eax,dx
  40e898:	rol    BYTE PTR [ebx],0x31
  40e89b:	inc    ebx
  40e89c:	mov    gs,WORD PTR [ecx+0x45]
  40e89f:	and    al,0x51
  40e8a1:	cmp    ch,dh
  40e8a3:	push   edx
  40e8a4:	cmp    eax,0x3d43e569
  40e8a9:	imul   esp,DWORD PTR [edi-0x76ec4cae],0x9768e6f3
  40e8b3:	push   edx
  40e8b4:	push   ebx
  40e8b5:	pop    eax
  40e8b6:	xchg   DWORD PTR [edx+0x15],edx
  40e8b9:	imul   edi,ebp,0x3f160123
  40e8bf:	push   ebx
  40e8c0:	add    eax,0xf53bbd69
  40e8c5:	push   0x526f0000
  40e8ca:	(bad)  
  40e8cb:	jnp    0x40e90f
  40e8cd:	cmp    al,0x3
  40e8cf:	scas   eax,DWORD PTR es:[edi]
  40e8d0:	leave  
  40e8d1:	push   ecx
  40e8d2:	(bad)  
  40e8d3:	pushf  
  40e8d4:	out    dx,al
  40e8d5:	dec    ecx
  40e8d6:	(bad)  
  40e8d7:	fcompp 
  40e8d9:	xchg   ebx,esp
  40e8db:	fcompp 
  40e8dd:	push   ecx
  40e8de:	(bad)  
  40e8df:	push   esp
  40e8e0:	and    eax,0xc804c33c
  40e8e5:	push   ecx
  40e8e6:	(bad)  
  40e8e7:	je     0x40e87b
  40e8e9:	dec    edx
  40e8ea:	(bad)  
  40e8eb:	mov    dh,0x99
  40e8ed:	enter  0xc10f,0x94
  40e8f1:	adc    bh,bh
  40e8f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e8f4:	lods   eax,DWORD PTR ds:[esi]
  40e8f5:	nop
  40e8f6:	iret   
  40e8f7:	xchg   esi,eax
  40e8f8:	cdq    
  40e8f9:	push   edx
  40e8fa:	call   FWORD PTR [edx+edx*2]
  40e8fd:	mov    esp,0x8f59e900
  40e902:	(bad)  
  40e903:	cld    
  40e904:	and    bh,BYTE PTR [ecx+ebp*2]
  40e907:	mov    esp,0x3cfe5259
  40e90c:	or     BYTE PTR [edx-0x2],0x6e
  40e910:	dec    ecx
  40e911:	mov    bl,dl
  40e913:	pop    esi
  40e914:	dec    ecx
  40e915:	push   edx
  40e916:	(bad)  
  40e917:	aam    0x22
  40e919:	cmp    al,0x8b
  40e91b:	adc    al,0x58
  40e91d:	push   edx
  40e91e:	(bad)  
  40e91f:	aam    0x22
  40e921:	push   ecx
  40e922:	mov    ah,0x21
  40e924:	inc    ecx
  40e925:	push   edx
  40e926:	(bad)  
  40e927:	ds lahf 
  40e929:	sbb    eax,ebp
  40e92b:	add    DWORD PTR [eax],eax
  40e92d:	add    BYTE PTR [ebx],bl
  40e92f:	push   edx
  40e930:	(bad)  
  40e931:	cs iret 
  40e933:	imul   esi,esi,0xb0390926
  40e939:	test   eax,0x5cfe5219
  40e93e:	add    cl,BYTE PTR [edx-0x2]
  40e941:	push   cs
  40e942:	fidiv  DWORD PTR [esi+0x3f]
  40e945:	add    BYTE PTR [edi],ch
  40e947:	mov    esp,0xc43cb5fd
  40e94c:	std    
  40e94d:	push   DWORD PTR [eax]
  40e94f:	mov    al,ds:0xb94fff3e
  40e954:	mov    bl,0xe8
  40e956:	ja     0x40e911
  40e958:	std    
  40e959:	call   0x3e4126
  40e95e:	pop    edi
  40e95f:	and    edx,0xfffffff7
  40e962:	outs   dx,DWORD PTR ds:[esi]
  40e963:	mov    ecx,0xb90885e6
  40e968:	std    
  40e969:	jmp    DWORD PTR [ebp-0x20000a48]
  40e96f:	out    dx,eax
  40e970:	js     0x40e9b2
  40e972:	iret   
  40e973:	mov    eax,0xc0d4b5fd
  40e978:	std    
  40e979:	jmp    DWORD PTR [eax-0x6000c198]
  40e97f:	mov    eax,0xbdb1f843
  40e984:	sti    
  40e985:	jmp    FWORD PTR [edi-0x3f038c48]
  40e98b:	jle    0x40e99d
  40e98d:	add    al,bl
  40e98f:	xadd   DWORD PTR [eax+eax*1],ecx
  40e993:	add    al,cl
  40e995:	arpl   WORD PTR [ecx-0x52bb414],cx
  40e99b:	push   0xffffffd8
  40e99d:	push   0x4b
  40e99f:	jmp    ebp
  40e9a1:	dec    esp
  40e9a2:	out    0x81,al
  40e9a4:	sub    eax,0x8589fdb9
  40e9a9:	mov    eax,0x6ca075fd
  40e9ae:	(bad)
  40e9b2:	push   DWORD PTR ds:0x412fbb
  40e9b8:	inc    eax
  40e9b9:	cdq    
  40e9ba:	sti    
  40e9bb:	jmp    FWORD PTR [edi]
  40e9bd:	mov    ecx,0x93310873
  40e9c2:	xchg   ebx,eax
  40e9c3:	inc    edi
  40e9c4:	lock cmp bl,dl
  40e9c7:	add    DWORD PTR [ecx],esi
  40e9c9:	cmp    eax,DWORD PTR [edx+0x654fbce7]
  40e9cf:	(bad)  
  40e9d0:	iretw  
  40e9d2:	data16 (bad) 
  40e9d4:	in     al,0x32
  40e9d6:	pop    edx
  40e9d7:	xchg   ebx,eax
  40e9d8:	adc    al,0x3a
  40e9da:	gs enter 0x3673,0x2
  40e9df:	push   ebp
  40e9e0:	mov    edx,0x3dc38156
  40e9e5:	or     bh,cl
  40e9e7:	imul   esi,DWORD PTR [ecx],0xa4feb5e5
  40e9ed:	inc    ebp
  40e9ee:	pop    edx
  40e9ef:	xor    eax,0x88658664
  40e9f4:	je     0x40e977
  40e9f6:	jns    0x40ea2c
  40e9f8:	add    BYTE PTR [eax],al
  40e9fa:	test   DWORD PTR [ebp-0x3d],esp
  40e9fd:	(bad)  
  40e9fe:	mov    ebx,0x7027f270
  40ea03:	cmp    eax,0x29313e82
  40ea08:	shl    DWORD PTR [edi+0x45],0x4
  40ea0c:	(bad)  
  40ea0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea10:	jmp    0xf97e1b26
  40ea15:	mov    edi,0xe7cc5e65
  40ea1a:	mov    bh,0x84
  40ea1c:	gs (bad) 
  40ea1e:	popa   
  40ea1f:	add    al,BYTE PTR gs:[eax]
  40ea22:	(bad)  
  40ea23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea24:	fidiv  DWORD PTR [eax+ebp*2]
  40ea27:	jl     0x40ea2b
  40ea29:	push   eax
  40ea2a:	mov    dh,0x90
  40ea2c:	cli    
  40ea2d:	out    0xc1,eax
  40ea2f:	pop    ecx
  40ea30:	gs (bad) 
  40ea32:	cdq    
  40ea33:	leave  
  40ea34:	and    eax,0x3d29eff
  40ea39:	inc    esi
  40ea3a:	mov    cl,0x14
  40ea3c:	out    0x3,eax
  40ea3e:	add    al,0x4a
  40ea40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea41:	addr16 inc ebx
  40ea43:	push   esp
  40ea44:	dec    edi
  40ea45:	data16 jg 0x40ea97
  40ea48:	or     eax,0xee0cc471
  40ea4d:	lock stos DWORD PTR es:[edi],eax
  40ea4f:	dec    edi
  40ea50:	jae    0x40eab9
  40ea52:	addr16 leave 
  40ea54:	loopne 0x40eab1
  40ea56:	inc    esi
  40ea57:	adc    esi,ebp
  40ea59:	gs imul ebp
  40ea5c:	scas   eax,DWORD PTR es:[edi]
  40ea5d:	inc    edx
  40ea5e:	add    BYTE PTR [eax],al
  40ea60:	xor    dl,BYTE PTR [esp+esi*1]
  40ea63:	jns    0x40eabf
  40ea65:	xchg   ebx,eax
  40ea66:	lods   al,BYTE PTR ds:[esi]
  40ea67:	push   0xb54313c8
  40ea6c:	aaa    
  40ea6d:	leave  
  40ea6e:	lock pop ebx
  40ea70:	call   0xb9a6a884
  40ea75:	fdiv   DWORD PTR [edx+ebx*8-0x44b548e2]
  40ea7c:	jno    0x40ea92
  40ea7e:	adc    edx,eax
  40ea80:	jns    0x40ea57
  40ea82:	call   0xc02427eb
  40ea87:	ret    0x36fe
  40ea8a:	push   0xf14ef7c2
  40ea8f:	inc    ebx
  40ea90:	bound  ebp,QWORD PTR ds:0x4ee6dc19
  40ea96:	test   DWORD PTR [esi-0x3ce03caa],esp
  40ea9c:	(bad)  
  40ea9d:	fisub  WORD PTR [ebp-0x11]
  40eaa0:	ss cmp al,0xfd
  40eaa3:	ffreep st(7)
  40eaa5:	dec    esi
  40eaa6:	inc    eax
  40eaa7:	mov    ecx,0xdc4d4eff
  40eaac:	mov    dh,0x4e
  40eaae:	push   ebp
  40eaaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eab0:	push   ss
  40eab1:	ret    
  40eab2:	scas   eax,DWORD PTR es:[edi]
  40eab3:	ret    0xb6a6
  40eab6:	inc    edx
  40eab8:	fcmovnbe st,st(3)
  40eaba:	jmp    FWORD PTR ds:0xb7e81686
  40eac0:	outs   dx,BYTE PTR ds:[esi]
  40eac1:	dec    ebp
  40eac2:	(bad)  
  40eac3:	push   ds
  40eac4:	add    BYTE PTR [eax],al
  40eac6:	xchg   esi,eax
  40eac7:	dec    edx
  40eac8:	(bad)  
  40eac9:	pushf  
  40eaca:	jp     0x40eb02
  40eacc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eacd:	int    0xd
  40eacf:	dec    esi
  40ead0:	enter  0x312b,0x14
  40ead4:	push   ebp
  40ead5:	jb     0x40eae0
  40ead7:	xchg   edx,eax
  40ead8:	ret    
  40ead9:	cmc    
  40eada:	ins    BYTE PTR es:[edi],dx
  40eadb:	in     eax,0x69
  40eadd:	jmp    0x5d3fc95a
  40eae2:	dec    ebp
  40eae3:	ss dec eax
  40eae5:	sbb    eax,0x2c884dcc
  40eaea:	leave  
  40eaeb:	cdq    
  40eaec:	xor    al,0x3d
  40eaee:	adc    eax,0x5771ffd5
  40eaf3:	les    esp,FWORD PTR [edi]
  40eaf5:	sub    BYTE PTR ds:0xee93e94,ch
  40eafb:	fldenv [edi+0x6b]
  40eafe:	fcmovnbe st,st(4)
  40eb00:	(bad)  
  40eb01:	cmp    eax,0xe9109f6d
  40eb06:	xor    bl,BYTE PTR [ecx]
  40eb08:	rcr    BYTE PTR ds:0x58e7e634,0xba
  40eb0f:	dec    esi
  40eb10:	(bad)  
  40eb11:	sbb    DWORD PTR ds:0x8c8efe4e,ecx
  40eb17:	mov    ch,0x8b
  40eb19:	and    dl,dh
  40eb1b:	dec    ebp
  40eb1c:	dec    esi
  40eb1d:	outs   dx,BYTE PTR ds:[esi]
  40eb1e:	(bad)  
  40eb1f:	adc    eax,0x4ed18ae8
  40eb24:	(bad)  
  40eb25:	push   ecx
  40eb26:	std    
  40eb27:	push   cs
  40eb28:	call   DWORD PTR [esi+0x0]
  40eb2b:	add    BYTE PTR [ecx+0x14],bl
  40eb2e:	inc    esi
  40eb2f:	imul   ecx,DWORD PTR [esp+edx*1],0x8ef20075
  40eb36:	cli    
  40eb37:	xor    ebx,DWORD PTR [eax+0x7a]
  40eb3a:	std    
  40eb3b:	jmp    DWORD PTR [edi-0x48]
  40eb3e:	lock scas al,BYTE PTR es:[edi]
  40eb40:	mov    al,ds:0x57bb7350
  40eb45:	ds cli 
  40eb47:	call   FWORD PTR [ebp+0x642be649]
  40eb4d:	mov    eax,0xac65ffd
  40eb52:	rol    DWORD PTR [eax+ebx*2],0x5e
  40eb56:	mov    esp,ebp
  40eb58:	fisttp DWORD PTR [ebx+edi*8]
  40eb5b:	push   esi
  40eb5c:	mov    edi,0xb969fe6b
  40eb61:	mov    eax,0xdd600873
  40eb66:	cmp    edi,edi
  40eb68:	addr16 lahf 
  40eb6a:	inc    ebx
  40eb6b:	cld    
  40eb6c:	shr    DWORD PTR [edx],cl
  40eb6e:	ins    BYTE PTR es:[edi],dx
  40eb6f:	sub    BYTE PTR [ecx],cl
  40eb71:	sbb    BYTE PTR [ebx+0x4100683d],cl
  40eb77:	add    BYTE PTR [eax+0x4d73fff1],bl
  40eb7d:	inc    eax
  40eb7e:	xchg   esi,eax
  40eb7f:	dec    ecx
  40eb80:	dec    ecx
  40eb81:	sbb    BYTE PTR [edi-0x18],dl
  40eb84:	or     BYTE PTR [eax-0x2],cl
  40eb87:	inc    DWORD PTR [ebx]
  40eb89:	shl    DWORD PTR [edx+0x1f],1
  40eb8c:	shl    BYTE PTR ds:[ecx],0x48
  40eb90:	add    BYTE PTR [eax],al
  40eb92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb93:	mov    al,0x4e
  40eb95:	push   0xbeef10d8
  40eb9a:	inc    eax
  40eb9b:	jle    0x40ebe4
  40eb9d:	inc    ecx
  40eb9e:	enter  0xfd80,0x75
  40eba2:	sar    BYTE PTR [eax-0x4ea89cdd],1
  40eba8:	out    0x51,al
  40ebaa:	es mov cl,0xfd
  40ebad:	jmp    0x40ebe0
  40ebaf:	cmp    al,0xc8
  40ebb1:	jg     0x40ebaa
  40ebb3:	cmp    dl,bh
  40ebb5:	stc    
  40ebb6:	not    esi
  40ebb8:	push   ss
  40ebb9:	shr    al,0xd
  40ebbc:	arpl   si,di
  40ebbe:	sahf   
  40ebbf:	or     BYTE PTR [edx-0x6277d1c9],dh
  40ebc5:	inc    BYTE PTR [edi+esi*8]
  40ebc8:	bound  esi,QWORD PTR [ecx+edi*1+0x23]
  40ebcc:	mov    cl,0x3a
  40ebce:	jle    0x40ebf5
  40ebd0:	ret    
  40ebd1:	pop    ebp
  40ebd2:	push   0x40007f8
  40ebd7:	ret    0x826f
  40ebda:	ins    DWORD PTR es:[edi],dx
  40ebdb:	dec    esi
  40ebdc:	in     al,dx
  40ebdd:	dec    eax
  40ebdf:	test   al,0x61
  40ebe1:	je     0x40ec0c
  40ebe3:	adc    edx,ebx
  40ebe5:	cmp    cl,BYTE PTR [esi+0x35]
  40ebe8:	mov    eax,DWORD PTR [ebp+eax*2-0x1e]
  40ebec:	cwde   
  40ebed:	dec    eax
  40ebee:	lock cmp ah,BYTE PTR [ecx+0x74]
  40ebf2:	sub    DWORD PTR [ebx-0x30],edx
  40ebf5:	fild   WORD PTR [eax]
  40ebf7:	add    BYTE PTR [esi],ch
  40ebf9:	push   ebx
  40ebfa:	popa   
  40ebfb:	je     0x40ec22
  40ebfd:	mov    edx,edi
  40ebff:	pop    es
  40ec00:	or     DWORD PTR [eax],ecx
  40ec02:	pop    ds
  40ec03:	call   DWORD PTR [esi]
  40ec05:	jne    0x40ec4b
  40ec07:	add    esi,DWORD PTR [ecx]
  40ec09:	or     BYTE PTR [edi+0x5e71b2eb],cl
  40ec0f:	push   esi
  40ec10:	mov    DWORD PTR [esp+edi*1+0x3f],esi
  40ec14:	xor    DWORD PTR [ebp-0x6d0dff2c],esp
  40ec1a:	dec    ecx
  40ec1b:	inc    esp
  40ec1c:	in     eax,0x3d
  40ec1e:	add    al,BYTE PTR [eax]
  40ec20:	xor    DWORD PTR [edx],eax
  40ec22:	push   eax
  40ec23:	dec    eax
  40ec24:	jo     0x40ec63
  40ec26:	popa   
  40ec27:	je     0x40ec62
  40ec29:	adc    al,0x76
  40ec2b:	or     BYTE PTR [eax],dl
  40ec2d:	fbld   TBYTE PTR [edi+0x18755503]
  40ec33:	add    al,0x31
  40ec35:	adc    al,0x69
  40ec37:	(bad)  [eax]
  40ec39:	adc    al,0xbd
  40ec3b:	or     esp,DWORD PTR [esi+0x4b6bf0c1]
  40ec41:	add    DWORD PTR [esi],esi
  40ec43:	bound  ecx,QWORD PTR [ecx+0x3103e88c]
  40ec49:	cmp    al,0xc4
  40ec4b:	retf   0x4b87
  40ec4e:	sbb    eax,0x63c36d8
  40ec53:	sbb    al,0x76
  40ec55:	dec    ebx
  40ec56:	dec    ecx
  40ec57:	add    dl,bh
  40ec59:	aam    0xe8
  40ec5b:	out    0x0,eax
  40ec5d:	add    BYTE PTR [edi+0x1],ah
  40ec60:	jmp    0x62551d68
  40ec65:	inc    edi
  40ec66:	ror    BYTE PTR [edx-0x4d],cl
  40ec69:	add    esi,DWORD PTR [ecx]
  40ec6b:	adc    al,0xe9
  40ec6d:	mov    dh,0xf6
  40ec6f:	mov    ebx,0x13fe3d83
  40ec74:	inc    ecx
  40ec75:	ret    0xd45b
  40ec78:	call   0xbde7f30
  40ec7d:	add    al,0x31
  40ec7f:	adc    al,0xe9
  40ec81:	pusha  
  40ec82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec83:	sbb    al,0xb6
  40ec85:	stc    
  40ec86:	mov    cl,0xa
  40ec88:	add    al,ah
  40ec8a:	dec    esi
  40ec8b:	adc    al,0x1d
  40ec8d:	add    DWORD PTR [edx+0x29d7f84b],esi
  40ec93:	push   ebx
  40ec94:	sub    esp,DWORD PTR [eax+0x31]
  40ec97:	adc    al,0xe9
  40ec99:	add    ebx,edx
  40ec9b:	and    al,0x86
  40ec9d:	pop    ss
  40ec9e:	inc    esp
  40ec9f:	fbld   TBYTE PTR [edi]
  40eca1:	add    al,0xde
  40eca3:	add    BYTE PTR [eax],al
  40eca5:	enter  0xd3e5,0xff
  40eca9:	or     BYTE PTR [ecx+eax*1+0x56ac66ff],0x17
  40ecb1:	push   edx
  40ecb2:	call   0xa4867796
  40ecb7:	fisttp WORD PTR [ebx]
  40ecb9:	bound  esi,QWORD PTR [esi+0x1a]
  40ecbc:	(bad)  
  40ecbd:	mov    ebx,0x817f9b3a
  40ecc2:	add    BYTE PTR [eax],al
  40ecc4:	xor    eax,0x7f360014
  40ecc9:	push   ds
  40ecca:	(bad)  
  40ecce:	(bad)  
  40eccf:	jmp    0x6e50b1e5
  40ecd4:	mov    ch,0x86
  40ecd6:	(bad)  
  40ecd7:	call   0xc87d840e
  40ecdc:	jge    0x40ecb1
  40ecde:	(bad)  
  40ecdf:	call   0xb5401062
  40ece4:	pop    edi
  40ece5:	fld    QWORD PTR [eax-0x17]
  40ece8:	sar    edi,1
  40ecea:	and    BYTE PTR [edx+0x1e64a73],ah
  40ecf0:	sub    BYTE PTR [ebx-0x2],cl
  40ecf3:	mov    eax,ds:0xe9001432
  40ecf8:	ja     0x40ed4e
  40ecfa:	and    ebp,ecx
  40ecfc:	push   ss
  40ecfd:	fwait
  40ecfe:	add    al,0xe9
  40ed00:	xor    dl,BYTE PTR [eax+eax*1]
  40ed03:	push   0x69
  40ed05:	adc    eax,0x1932f683
  40ed0a:	test   esi,ebp
  40ed0c:	xchg   ecx,eax
  40ed0d:	dec    edx
  40ed0e:	(bad)  
  40ed0f:	jb     0x40ed00
  40ed11:	dec    ebp
  40ed12:	pop    esi
  40ed13:	mov    al,0x74
  40ed15:	adc    eax,0x5f053f00
  40ed1a:	fisubr DWORD PTR [ecx]
  40ed1c:	xor    eax,0xd900714c
  40ed21:	sar    ch,1
  40ed23:	mov    esp,DWORD PTR [ecx+0x8bf5f8]
  40ed29:	add    BYTE PTR [ecx-0x155781c3],dl
  40ed2f:	push   ss
  40ed30:	mov    ecx,ecx
  40ed32:	out    dx,al
  40ed33:	cwde   
  40ed34:	(bad)  
  40ed35:	jmp    0x40ed67
  40ed37:	xchg   edi,eax
  40ed38:	mov    DWORD PTR [ebx],0x50c79806
  40ed3e:	adc    ebx,esi
  40ed40:	out    0xa7,al
  40ed42:	sahf   
  40ed43:	adc    eax,0x8d618b00
  40ed48:	mov    ecx,ecx
  40ed4a:	mov    ecx,edi
  40ed4c:	mov    ecx,ecx
  40ed4e:	scas   al,BYTE PTR es:[edi]
  40ed4f:	sbb    dh,dh
  40ed51:	jne    0x40ed87
  40ed53:	push   ebx
  40ed54:	rcl    DWORD PTR [ebp+0x3],0xb9
  40ed58:	data16 or BYTE PTR [edx*2+0x16caf7fe],bh
  40ed60:	ret    
  40ed61:	jmp    ebx
  40ed63:	push   ecx
  40ed64:	push   es
  40ed65:	or     ecx,DWORD PTR [eax]
  40ed67:	popa   
  40ed68:	or     ch,bl
  40ed6a:	inc    ebp
  40ed6b:	mov    bl,0x6
  40ed6d:	(bad)  
  40ed6e:	push   eax
  40ed6f:	push   ebp
  40ed70:	jle    0x40edaa
  40ed72:	pop    eax
  40ed73:	ins    BYTE PTR es:[edi],dx
  40ed74:	hlt    
  40ed75:	leave  
  40ed76:	mov    bl,BYTE PTR [eax+eax*1]
  40ed79:	push   ebp
  40ed7a:	rol    ebx,cl
  40ed7c:	add    esp,0x30668504
  40ed82:	int3   
  40ed83:	dec    edi
  40ed84:	(bad)  
  40ed85:	neg    DWORD PTR [edx+0xf]
  40ed88:	ret    
  40ed89:	inc    edi
  40ed8b:	pop    edx
  40ed8c:	repnz add BYTE PTR [eax],al
  40ed8f:	add    BYTE PTR [eax],bl
  40ed91:	adc    eax,0xa2f32b00
  40ed96:	inc    ebx
  40ed97:	cld    
  40ed98:	cmp    cl,ch
  40ed9a:	jae    0x40eda4
  40ed9c:	xor    DWORD PTR [ebx+0x3b310d78],edx
  40eda2:	xchg   DWORD PTR [edi+0x745d8869],edi
  40eda8:	sub    DWORD PTR [ebx-0x3e29cbd8],esp
  40edae:	mov    WORD PTR [ecx+ecx*8-0x6],es
  40edb2:	mov    bl,0xe7
  40edb4:	push   ebp
  40edb5:	out    dx,eax
  40edb6:	pop    esi
  40edb7:	(bad)  
  40edb8:	test   al,0x6f
  40edba:	push   esi
  40edbb:	(bad)  
  40edbc:	cmp    al,0xdf
  40edbe:	imul   edx,DWORD PTR [ebx+0x3c],0x3b
  40edc2:	add    cl,BYTE PTR [ebx]
  40edc4:	jno    0x40ed4c
  40edc6:	idiv   dh
  40edc8:	and    al,0xd3
  40edca:	pop    esi
  40edcb:	je     0x40ed6a
  40edcd:	stos   BYTE PTR es:[edi],al
  40edce:	push   0xffffff87
  40edd0:	dec    ebp
  40edd1:	cli    
  40edd2:	pop    esi
  40edd3:	(bad)  
  40edd4:	cld    
  40edd5:	out    dx,al
  40edd6:	imul   eax,DWORD PTR [ecx+0x2c],0x3b
  40edda:	add    bh,bh
  40eddc:	cld    
  40eddd:	xor    ch,BYTE PTR [edx-0xd]
  40ede0:	and    al,0x1a
  40ede2:	pop    edi
  40ede3:	and    ah,0x46
  40ede6:	add    dh,BYTE PTR [edi+edi*1-0x5d]
  40edea:	sbb    ecx,DWORD PTR [ebx-0x10]
  40eded:	cmp    bl,BYTE PTR [ebp+0x74]
  40edf0:	inc    ebp
  40edf1:	adc    dl,BYTE PTR [ebx+0x3100000d]
  40edf7:	cmp    ecx,DWORD PTR [ecx]
  40edf9:	rol    ch,0x2f
  40edfc:	cdq    
  40edfd:	add    BYTE PTR [ecx],dh
  40edff:	cmp    eax,DWORD PTR [edx]
  40ee01:	jmp    DWORD PTR [ecx+eiz*2+0x4e65056a]
  40ee08:	pop    ebp
  40ee09:	mov    dh,dl
  40ee0b:	repnz dec esp
  40ee0d:	shr    DWORD PTR ds:0x1d8ab73d,0xd6
  40ee14:	popf   
  40ee15:	(bad)  [ecx+0x14]
  40ee18:	jmp    0xaa566e78
  40ee1d:	pop    esi
  40ee1e:	test   ecx,0xfe1d6be0
  40ee24:	lea    ebx,[esi+0x58]
  40ee27:	sbb    al,0x11
  40ee29:	sbb    ecx,DWORD PTR [ecx]
  40ee2b:	aad    0xe8
  40ee2d:	pop    esi
  40ee2e:	pop    ebp
  40ee2f:	sbb    al,0x81
  40ee31:	fadd   QWORD PTR [esi]
  40ee33:	inc    edi
  40ee34:	ins    DWORD PTR es:[edi],dx
  40ee35:	jmp    0x2c05aa68
  40ee3a:	jo     0x40ee50
  40ee3c:	pop    esi
  40ee3d:	fsubr  DWORD PTR [esi]
  40ee3f:	cmp    al,0xc2
  40ee41:	sbb    ebp,DWORD PTR [esi+0x2ed84d47]
  40ee47:	cmp    al,0x34
  40ee49:	pusha  
  40ee4a:	lahf   
  40ee4b:	inc    edi
  40ee4c:	add    BYTE PTR [ecx+esi*1],0x14
  40ee50:	jmp    0xe9515ea1
  40ee55:	mov    eax,0x476938bb
  40ee5a:	add    BYTE PTR [eax],al
  40ee5c:	xchg   BYTE PTR [ebx+eiz*8+0x11143640],bh
  40ee63:	shl    DWORD PTR [ecx],1
  40ee65:	push   ebx
  40ee66:	or     eax,0x617dd5e
  40ee6b:	fdiv   DWORD PTR [esi]
  40ee6d:	cmp    al,0x78
  40ee6f:	sbb    DWORD PTR [esi+0x47],edx
  40ee72:	sub    eax,0xe9154ac8
  40ee77:	add    esi,DWORD PTR [ecx]
  40ee79:	cdq    
  40ee7a:	sub    ebx,DWORD PTR [esi+ebp*8-0x45]
  40ee7e:	or     ecx,ecx
  40ee80:	icebp  
  40ee81:	adc    eax,ecx
  40ee83:	dec    edx
  40ee84:	jbe    0x40eecd
  40ee86:	int    0x9
  40ee88:	icebp  
  40ee89:	mov    edi,0xc8b3b40a
  40ee8e:	shl    ah,0x9d
  40ee91:	push   ds
  40ee92:	add    BYTE PTR [ebx+0x5],al
  40ee95:	xlat   BYTE PTR ds:[ebx]
  40ee96:	(bad)  
  40ee97:	xor    al,0x21
  40ee99:	cmp    al,0xdb
  40ee9b:	loop   0x40eefa
  40ee9d:	inc    esi
  40ee9e:	or     ch,BYTE PTR [ecx+0x2cc70dd9]
  40eea4:	push   ecx
  40eea5:	inc    edi
  40eea6:	(bad)  
  40eea7:	jmp    0xc2a52ade
  40eeac:	jge    0x40eef4
  40eeae:	mov    ah,BYTE PTR [ecx+edx*2]
  40eeb1:	pop    esp
  40eeb2:	shl    ecx,0x32
  40eeb5:	loope  0x40ee41
  40eeb7:	jge    0x40ee39
  40eeb9:	scas   al,BYTE PTR es:[edi]
  40eeba:	pop    edi
  40eebb:	inc    esp
  40eebc:	cmc    
  40eebd:	inc    esi
  40eebe:	neg    bl
  40eec0:	add    BYTE PTR [eax],al
  40eec2:	xor    edx,DWORD PTR [ebx-0x2]
  40eec5:	add    ch,BYTE PTR [eax+0x46]
  40eec8:	je     0x40eeab
  40eeca:	sbb    cl,dh
  40eecc:	inc    BYTE PTR [esi-0x4]
  40eecf:	sbb    eax,eax
  40eed1:	out    dx,al
  40eed2:	scas   al,BYTE PTR es:[edi]
  40eed3:	mov    al,ds:0x4732e8ff
  40eed8:	je     0x40eebb
  40eeda:	sbb    cl,BYTE PTR [ebx+0x31]
  40eedd:	fcomp  QWORD PTR es:[ecx]
  40eee0:	rcl    BYTE PTR [edi+ebp*1+0x32e9893d],0x14
  40eee8:	call   DWORD PTR [esi+esi*1-0x350e8bb9]
  40eeef:	lods   eax,DWORD PTR ds:[esi]
  40eef0:	(bad)  
  40eef1:	(bad)  
  40eef2:	cmc    
  40eef3:	inc    ebp
  40eef4:	je     0x40eed7
  40eef6:	(bad)  
  40eef8:	cmp    esi,ebp
  40eefa:	in     eax,0x19
  40eefc:	rcr    BYTE PTR [ebx+esi*1+0x3b],0x70
  40ef01:	ficomp WORD PTR [edi+0xe]
  40ef04:	call   0xfe8639a9
  40ef09:	loop   0x40ef7d
  40ef0b:	rol    BYTE PTR [ecx],0x0
  40ef0e:	add    esi,DWORD PTR ds:0xba2075fd
  40ef14:	pop    ds
  40ef15:	cmp    edi,eax
  40ef17:	call   0x127eaf25
  40ef1c:	jmp    0x40ef73
  40ef1e:	and    BYTE PTR [esi+0x25],bh
  40ef21:	inc    ecx
  40ef22:	or     cl,ch
  40ef24:	jae    0x40ef2e
  40ef26:	add    BYTE PTR [eax],al
  40ef28:	mov    al,0x8b
  40ef2a:	cmp    bh,bh
  40ef2c:	mov    bh,0x1c
  40ef2e:	shl    BYTE PTR [ebp-0x36],0xbc
  40ef32:	inc    eax
  40ef33:	(bad)  
  40ef34:	fstp   QWORD PTR [ecx]
  40ef36:	call   0xfe296fd5
  40ef3b:	or     ebx,DWORD PTR [eax+0x1ceb005e]
  40ef41:	out    0x73,eax
  40ef43:	or     BYTE PTR [eax-0x1d],ah
  40ef46:	inc    DWORD PTR ss:[edi]
  40ef49:	sbb    al,0xc0
  40ef4b:	jne    0x40eee7
  40ef4d:	mov    esp,0x19ddff24
  40ef52:	call   0xfe2989de
  40ef57:	add    DWORD PTR [eax-0xf],0x76
  40ef5b:	add    dh,BYTE PTR [ebx]
  40ef5d:	ror    BYTE PTR [ecx],1
  40ef5f:	rcr    BYTE PTR [esp+eax*2+0x4188003b],0xfe
  40ef67:	jb     0x40efbd
  40ef69:	lods   al,BYTE PTR ds:[esi]
  40ef6a:	(bad)  
  40ef6b:	call   FWORD PTR [eax+0x11]
  40ef6e:	jmp    0x40ef75
  40ef70:	repz adc eax,DWORD PTR [eax]
  40ef73:	add    BYTE PTR [eax-0x64],cl
  40ef76:	rcr    DWORD PTR [ebx+0x11],0xd3
  40ef7a:	push   es
  40ef7b:	add    BYTE PTR [ebp+0x2968ea9c],bl
  40ef81:	or     bh,BYTE PTR [edi]
  40ef83:	add    BYTE PTR [eax+0x5e],dl
  40ef86:	inc    edx
  40ef88:	xor    DWORD PTR [esi+0x5a],ebx
  40ef8b:	je     0x40ef8d
  40ef8d:	add    BYTE PTR ds:0x907d056,dh
  40ef93:	adc    eax,0x4216fe5b
  40ef98:	inc    edx
  40ef99:	je     0x40efc6
  40ef9b:	jle    0x40ef6d
  40ef9d:	or     eax,DWORD PTR [esi]
  40ef9f:	add    BYTE PTR [eax+ebp*8],cl
  40efa2:	outs   dx,BYTE PTR es:[esi]
  40efa4:	pop    edx
  40efa5:	(bad)  
  40efa6:	sub    bh,BYTE PTR [ebx-0x30]
  40efa9:	or     ch,dh
  40efab:	daa    
  40efac:	or     bh,bh
  40efae:	pop    esp
  40efaf:	xor    ebp,DWORD PTR [edx+0x7]
  40efb2:	fimul  WORD PTR [ebp+0x42f3c85a]
  40efb8:	add    dl,BYTE PTR [ebp-0x46]
  40efbb:	mov    es,WORD PTR [esi-0x4cd6323d]
  40efc1:	addr16 push ecx
  40efc3:	int    0xc3
  40efc5:	(bad)  
  40efc6:	mov    esi,0xaec30368
  40efcb:	adc    DWORD PTR [edi],edi
  40efcd:	out    0x73,eax
  40efcf:	sbb    DWORD PTR [ecx-0x2],0xff667776
  40efd6:	xchg   esi,eax
  40efd7:	cmp    al,BYTE PTR [edx]
  40efd9:	(bad)  
  40efda:	hlt    
  40efdb:	into   
  40efdc:	mov    bl,0xe7
  40efde:	mov    eax,0xb2fe594b
  40efe3:	outs   dx,DWORD PTR ds:[esi]
  40efe4:	data16 (bad) 
  40efe6:	std    
  40efe7:	adc    cl,BYTE PTR [ecx+0x6a8a5d44]
  40efed:	jns    0x40f00f
  40efef:	push   ss
  40eff0:	pop    ebx
  40eff1:	add    BYTE PTR [eax],0x0
  40eff4:	fcomp  QWORD PTR [esi]
  40eff6:	add    al,0x75
  40eff8:	sub    BYTE PTR [eax+0x12e1ebc0],bh
  40effe:	out    dx,eax
  40efff:	xor    BYTE PTR [esi+0x35],al
  40f002:	test   DWORD PTR [ebp+ecx*2+0x13],edi
  40f006:	jmp    0xe8d69d15
  40f00b:	add    esi,DWORD PTR [ecx]
  40f00d:	xchg   ecx,eax
  40f00e:	sub    edx,DWORD PTR [esi+esi*2+0x43]
  40f012:	push   ebx
  40f013:	push   0x5ac5ae16
  40f018:	pop    ss
  40f019:	cwde   
  40f01a:	rol    BYTE PTR [esp+eax*4],0xc1
  40f01e:	jne    0x40f005
  40f020:	dec    edi
  40f021:	aad    0xe8
  40f023:	outs   dx,BYTE PTR ds:[esi]
  40f024:	pop    ecx
  40f025:	pop    ebx
  40f026:	sub    esp,DWORD PTR [eax+0x28]
  40f029:	adc    al,0xe9
  40f02b:	add    esi,esi
  40f02d:	fld    DWORD PTR [eax-0x16ebcefd]
  40f033:	mov    BYTE PTR [ebp+0x2c],dh
  40f036:	sbb    BYTE PTR [ebx+0x5d],bl
  40f039:	xor    BYTE PTR ds:0x75dec36c,dl
  40f03f:	pop    edx
  40f040:	cmp    edx,DWORD PTR [esp+esi*8-0xd]
  40f044:	mov    bl,0xc1
  40f046:	push   eax
  40f047:	add    edi,DWORD PTR ds:0x96d05e0e
  40f04d:	sub    al,0x11
  40f04f:	pop    ecx
  40f050:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f051:	inc    ebx
  40f052:	popa   
  40f053:	cmp    ebx,DWORD PTR [edi+0x6b50c9]
  40f059:	add    BYTE PTR [edi+0x5],al
  40f05c:	ds pop edx
  40f05e:	cmp    ebx,DWORD PTR [edi-0x45]
  40f061:	lock mov bl,0xc1
  40f064:	inc    esp
  40f065:	add    eax,DWORD PTR ds:0x92c82613
  40f06b:	lods   al,BYTE PTR ds:[esi]
  40f06c:	jo     0x40f064
  40f06e:	outs   dx,BYTE PTR ds:[esi]
  40f06f:	inc    ebx
  40f070:	add    BYTE PTR [esi+0x3b],dh
  40f073:	adc    al,0xe9
  40f075:	outs   dx,BYTE PTR ds:[esi]
  40f076:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f077:	das    
  40f078:	out    0xc2,eax
  40f07a:	(bad)  
  40f07b:	add    ch,cl
  40f07d:	ror    BYTE PTR [eax-0x25],1
  40f080:	jmp    FWORD PTR [eax+0x2b]
  40f083:	adc    al,0x74
  40f085:	in     eax,0x2f
  40f087:	pop    edi
  40f088:	jae    0x40f011
  40f08a:	and    al,0x5f
  40f08c:	jae    0x40f087
  40f08e:	sbb    al,0x13
  40f090:	lea    ebp,[edi*2-0x1203982d]
  40f097:	sar    edi,cl
  40f099:	rol    ch,1
  40f09b:	xlat   BYTE PTR ds:[ebx]
  40f09c:	(bad)  
  40f09d:	mov    esi,0xc1ebc868
  40f0a2:	xchg   ebp,eax
  40f0a3:	repz (bad) 
  40f0a5:	scas   al,BYTE PTR es:[edi]
  40f0a6:	lods   al,BYTE PTR ds:[esi]
  40f0a7:	push   ebp
  40f0a8:	pop    esi
  40f0a9:	inc    edx
  40f0aa:	push   0x56
  40f0ac:	push   esp
  40f0ad:	jb     0x40f108
  40f0af:	xchg   esp,eax
  40f0b0:	ret    
  40f0b1:	dec    ecx
  40f0b2:	mov    eax,DWORD PTR [edx-0x2]
  40f0b5:	mov    ss:0xeda64fba,eax
  40f0bb:	inc    edx
  40f0bc:	idiv   bl
  40f0be:	add    BYTE PTR [eax],al
  40f0c0:	xor    edx,DWORD PTR [edi-0x2]
  40f0c3:	ss mov dh,0xf9
  40f0c6:	inc    eax
  40f0c7:	jmp    0xf640f27e
  40f0cc:	ss dec esi
  40f0ce:	add    cl,ch
  40f0d0:	xor    dl,BYTE PTR [ecx+0x420b5d84]
  40f0d6:	(bad)  
  40f0d7:	mov    ecx,0xa12f3ae1
  40f0dc:	stc    
  40f0dd:	inc    ecx
  40f0de:	or     ch,BYTE PTR [ecx]
  40f0e0:	cmp    BYTE PTR [eax+0x1432e8a3],bl
  40f0e6:	sub    DWORD PTR [ecx+eiz*8+0x40],0xfffffffe
  40f0eb:	es sub eax,0x32768413
  40f0f1:	adc    al,0x0
  40f0f3:	fs out 0x7a,al
  40f0f6:	std    
  40f0f7:	push   cs
  40f0f8:	clc    
  40f0f9:	sar    dh,cl
  40f0fb:	add    BYTE PTR ds:0x4ffffce4,dl
  40f101:	scas   al,BYTE PTR es:[edi]
  40f102:	in     al,dx
  40f103:	aaa    
  40f104:	aas    
  40f105:	fld    TBYTE PTR [ecx]
  40f107:	not    cl
  40f109:	xchg   edx,eax
  40f10a:	mov    ds:0xe9db4ffe,al
  40f10f:	aaa    
  40f110:	inc    esi
  40f111:	or     esi,DWORD PTR [esi-0x38fd17c]
  40f117:	(bad)  
  40f118:	out    dx,eax
  40f119:	test   DWORD PTR [esi+0x51],esp
  40f11c:	arpl   WORD PTR [ebp-0x2],dx
  40f11f:	mov    WORD PTR [ebp+0xfffcd7],ss
  40f125:	add    BYTE PTR [edi+0x1341e685],bh
  40f12b:	push   ss
  40f12c:	add    BYTE PTR [ebx-0x7a72e63c],al
  40f132:	call   0xb3db:0x28fffddb
  40f139:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f13a:	scas   al,BYTE PTR es:[edi]
  40f13b:	fdiv   st(5),st
  40f13d:	call   0x401af9
  40f142:	inc    ecx
  40f143:	ret    0xfea2
  40f146:	aas    
  40f147:	fadd   QWORD PTR [ebx+eax*4+0x4e]
  40f14b:	inc    ebp
  40f14c:	jo     0x40f112
  40f14e:	dec    edi
  40f14f:	xchg   edx,eax
  40f150:	repnz dec BYTE PTR [edi]
  40f153:	fsubr  st(6),st
  40f155:	mov    ah,0x4a
  40f157:	(bad)  
  40f159:	(bad)  
  40f15a:	adc    eax,0xeffffc9d
  40f15f:	adc    al,0x0
  40f161:	add    BYTE PTR [eax+0x158d002f],bl
  40f167:	popf   
  40f168:	cld    
  40f169:	dec    DWORD PTR [edi-0x7b]
  40f16c:	std    
  40f16d:	mov    ch,0x14
  40f16f:	(bad)  
  40f171:	inc    DWORD PTR [eax+0x3b]
  40f174:	das    
  40f175:	push   DWORD PTR [ecx]
  40f177:	sub    cl,BYTE PTR [eax+eax*8]
  40f17a:	cs mov bh,0x5a
  40f17d:	call   DWORD PTR [esi+0x2b]
  40f180:	cmp    DWORD PTR [ecx+ecx*4-0xb01a9bf],0x2a4
  40f18b:	add    BYTE PTR [esi],ch
  40f18d:	mov    eax,0x2b36ff6a
  40f192:	xchg   DWORD PTR [edx+ebp*1-0x7e01a99f],eax
  40f199:	sar    edi,cl
  40f19b:	add    BYTE PTR [ecx],dh
  40f19d:	sub    ebp,DWORD PTR [edx-0x1d]
  40f1a0:	sub    BYTE PTR [ebx],ch
  40f1a2:	add    cl,BYTE PTR [ebx]
  40f1a4:	icebp  
  40f1a5:	xor    DWORD PTR [esi-0x32],edi
  40f1a8:	xor    DWORD PTR [ebx],ebp
  40f1aa:	add    bh,BYTE PTR ds:0x22c35
  40f1b0:	es mov dl,0x3f
  40f1b3:	(bad)  
  40f1b4:	out    dx,al
  40f1b5:	sub    ch,BYTE PTR [edx+0x4f]
  40f1b8:	cmp    ebp,DWORD PTR [ebx]
  40f1ba:	add    dl,BYTE PTR [eax+0x49]
  40f1bd:	cmc    
  40f1be:	retf   0x3140
  40f1c1:	enter  0xc180,0xcf
  40f1c5:	rcl    DWORD PTR [esi+0x4f],0xd9
  40f1c9:	into   
  40f1ca:	or     DWORD PTR [eax],eax
  40f1cc:	xor    DWORD PTR [esi+0x2b4b0b3f],ebp
  40f1d2:	xchg   DWORD PTR [edx+ebp*4+0x1fe56e0],eax
  40f1d9:	shl    DWORD PTR [esi-0x78d4cef8],cl
  40f1df:	test   BYTE PTR [edx-0x1e01a928],bl
  40f1e5:	loop   0x40f1fa
  40f1e7:	inc    ebx
  40f1e8:	xchg   BYTE PTR [ecx],cl
  40f1ea:	or     eax,eax
  40f1ec:	add    al,0xb
  40f1ee:	in     al,dx
  40f1ef:	ret    
  40f1f0:	add    BYTE PTR [eax],al
  40f1f2:	dec    ecx
  40f1f3:	adc    al,0xa8
  40f1f5:	add    edi,DWORD PTR [esi+edx*4+0x40675621]
  40f1fc:	mov    eax,0xdfc696b
  40f201:	push   edi
  40f202:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f203:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f204:	sub    dl,BYTE PTR [esi+0x4f]
  40f207:	inc    eax
  40f208:	call   0x3f56:0xb5234eb3
  40f20f:	sub    al,0xd9
  40f211:	mov    BYTE PTR [ebp+0x2f56e655],ch
  40f217:	in     eax,0x6b
  40f219:	sub    BYTE PTR [ebx],0x3f
  40f21c:	aad    0x56
  40f21e:	outs   dx,BYTE PTR ds:[esi]
  40f21f:	sub    al,0x85
  40f221:	sbb    dl,BYTE PTR [esi]
  40f223:	inc    eax
  40f224:	outs   dx,DWORD PTR ds:[esi]
  40f225:	or     dl,0x3e
  40f228:	mov    ebp,0x748a0756
  40f22d:	push   ebp
  40f22e:	(bad)  
  40f22f:	aas    
  40f230:	lods   eax,DWORD PTR ds:[esi]
  40f231:	nop
  40f232:	add    bh,BYTE PTR [edi]
  40f234:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f235:	push   esi
  40f236:	(bad)  
  40f237:	enter  0x56d9,0xe7
  40f23b:	or     ebp,DWORD PTR [ecx+0x36ac23cf]
  40f241:	retf   
  40f242:	jno    0x40f258
  40f244:	xchg   ecx,eax
  40f245:	pop    esi
  40f246:	ss adc al,0xe9
  40f249:	mov    bl,0x4e
  40f24b:	out    0x21,al
  40f24d:	lds    edi,FWORD PTR [esi-0x4b60ccc2]
  40f253:	aas    
  40f254:	imul   eax,DWORD PTR gs:[eax],0x0
  40f258:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f259:	rcr    DWORD PTR [ebp+0x56],cl
  40f25c:	sbb    BYTE PTR ds:0x140b03c3,dl
  40f262:	dec    esi
  40f263:	nop
  40f264:	fidivr DWORD PTR [esi]
  40f266:	inc    ebp
  40f267:	push   esi
  40f268:	push   ss
  40f269:	into   
  40f26a:	pextrw eax,(bad),0xc5
  40f26c:	xchg   BYTE PTR [ebp-0x2cf51701],ch
  40f272:	or     ecx,ebp
  40f274:	xor    bh,BYTE PTR [edi]
  40f276:	mov    ah,0x65
  40f278:	add    al,0x3e
  40f27a:	(bad)  
  40f27b:	adc    DWORD PTR [edi+0x716ff06],ecx
  40f281:	mov    BYTE PTR [ebx-0x18c200f1],ah
  40f287:	dec    ebp
  40f288:	aas    
  40f289:	aas    
  40f28a:	(bad)  
  40f28b:	(bad)  
  40f28c:	mov    dh,0x43
  40f28e:	std    
  40f28f:	mul    ah
  40f291:	ss add eax,0xfb3ddfbe
  40f297:	sbb    dh,BYTE PTR [ebp+0x7c]
  40f29a:	(bad)  
  40f29b:	fidivr WORD PTR [esi+edi*1-0xf]
  40f29f:	xchg   DWORD PTR ds:0x26640f17,edi
  40f2a5:	ds inc dh
  40f2a8:	(bad)  
  40f2a9:	(bad)  
  40f2ab:	stos   BYTE PTR es:[edi],al
  40f2ac:	(bad)  
  40f2ad:	mov    ebx,ebp
  40f2af:	push   0x71
  40f2b1:	das    
  40f2b2:	addr16 in al,dx
  40f2b4:	xchg   ebx,eax
  40f2b5:	(bad)  
  40f2b6:	jmp    DWORD PTR [eax-0x613cebfd]
  40f2bc:	add    BYTE PTR [eax],al
  40f2be:	mov    eax,0x33ec6764
  40f2c3:	adc    al,0x0
  40f2c5:	cmp    edi,0xb886ff05
  40f2cb:	mov    BYTE PTR fs:[ecx+ebp*2],ah
  40f2cf:	mov    dl,cl
  40f2d1:	add    DWORD PTR [esi+0x4ae90013],edi
  40f2d7:	mov    al,0x36
  40f2d9:	data16 add al,0x8a
  40f2dc:	shl    DWORD PTR [eax-0x1a],1
  40f2df:	cs addr16 in al,dx
  40f2e2:	xor    edx,DWORD PTR [eax+eax*1]
  40f2e5:	inc    ecx
  40f2e6:	fild   WORD PTR ds:0x8cf700ff
  40f2ec:	ror    BYTE PTR [ebx-0x7bc74d6],1
  40f2f2:	adc    eax,DWORD PTR [edx]
  40f2f4:	mov    dl,dl
  40f2f6:	jo     0x40f336
  40f2f8:	(bad)  
  40f2f9:	call   FWORD PTR [eax-0x19]
  40f2fc:	jae    0x40f2fa
  40f2fe:	ret    0xe812
  40f301:	sbb    edx,DWORD PTR [ecx+0x12]
  40f304:	add    BYTE PTR [ebx-0x2f72e6],cl
  40f30a:	int    0xe2
  40f30c:	data16 add al,0x59
  40f30f:	adc    al,BYTE PTR [eax]
  40f311:	call   0x40fdd8
  40f316:	push   ebx
  40f317:	shl    BYTE PTR [edx+0xf],cl
  40f31a:	mov    ds:0x635b6703,eax
  40f31f:	push   ecx
  40f320:	(bad)  
  40f321:	inc    BYTE PTR [eax]
  40f323:	add    BYTE PTR [ebp-0x18],bh
  40f326:	out    0x31,al
  40f328:	adc    BYTE PTR [edx],dl
  40f32a:	add    BYTE PTR [ebx+0x69fe2baa],cl
  40f330:	sbb    BYTE PTR [eax+eax*1],ch
  40f333:	push   0x8
  40f335:	sub    al,0x1
  40f337:	push   0xc0001208
  40f33c:	xchg   edi,eax
  40f33d:	dec    esi
  40f33e:	out    dx,al
  40f33f:	call   0x3f33e8
  40f344:	push   ecx
  40f345:	jle    0x40f339
  40f347:	inc    eax
  40f348:	rcl    ecx,cl
  40f34a:	jae    0x40f390
  40f34c:	mov    bh,0x4e
  40f34e:	cli    
  40f34f:	(bad)  
  40f350:	mov    ebp,0xcfffe6e1
  40f355:	adc    DWORD PTR [eax],eax
  40f357:	push   0x24
  40f359:	sub    bh,dh
  40f35b:	dec    BYTE PTR [ebp-0x5e8c191f]
  40f361:	adc    DWORD PTR [eax],eax
  40f363:	or     esi,DWORD PTR [ecx]
  40f365:	jmp    0x40f335
  40f367:	or     esi,ecx
  40f369:	push   edx
  40f36a:	mov    bh,0x4a
  40f36c:	lock sub dh,BYTE PTR [edx+0x23692e7]
  40f373:	add    BYTE PTR [ebx],cl
  40f375:	sub    ebp,eax
  40f377:	dec    DWORD PTR [eax]
  40f379:	sub    eax,ebp
  40f37b:	(bad)  
  40f37c:	fsubr  DWORD PTR [ecx]
  40f37e:	jmp    0xe4fe:0x422b66ff
  40f385:	sbb    ch,BYTE PTR [ebx-0x6b]
  40f388:	add    BYTE PTR [eax],al
  40f38a:	sub    eax,DWORD PTR cs:[edx]
  40f38d:	mov    esp,esi
  40f38f:	shl    DWORD PTR ds:[ebx-0x26],0xa2
  40f394:	fisttp WORD PTR [edx-0x10]
  40f397:	sub    ch,BYTE PTR [edx-0x63]
  40f39a:	sub    eax,DWORD PTR cs:[edx]
  40f39d:	push   eax
  40f39e:	cdq    
  40f39f:	retf   0x40be
  40f3a2:	xor    DWORD PTR [esi-0x28],ebx
  40f3a5:	repz or DWORD PTR [ebp+0x14],esi
  40f3a9:	call   DWORD PTR [esi]
  40f3ab:	sti    
  40f3ac:	push   edx
  40f3ad:	je     0x40f3b4
  40f3af:	arpl   si,cx
  40f3b1:	push   es
  40f3b2:	xor    DWORD PTR [ebx],ebp
  40f3b4:	stos   BYTE PTR es:[edi],al
  40f3b5:	or     dh,cl
  40f3b7:	inc    DWORD PTR ds:0xd86e72eb
  40f3bd:	sti    
  40f3be:	pop    ecx
  40f3bf:	loop   0x40f37f
  40f3c1:	inc    eax
  40f3c2:	xor    DWORD PTR [esi-0x21360828],ebx
  40f3c8:	sti    
  40f3c9:	call   esi
  40f3cb:	test   eax,0x70590b47
  40f3d0:	mov    esi,0x94a33140
  40f3d5:	push   es
  40f3d6:	xor    DWORD PTR [ebx],ebp
  40f3d8:	std    
  40f3d9:	mov    edi,0xb6da493d
  40f3de:	cli    
  40f3df:	adc    ebp,DWORD PTR [eax-0x6fd3fefd]
  40f3e5:	or     esi,DWORD PTR [ecx]
  40f3e7:	adc    al,0xe2
  40f3e9:	inc    ebx
  40f3ea:	and    ah,BYTE PTR [ecx]
  40f3ec:	ret    
  40f3ed:	add    eax,DWORD PTR [eax]
  40f3ef:	add    BYTE PTR [ebx],bl
  40f3f1:	adc    al,0x46
  40f3f3:	fnstcw WORD PTR [esi+0x3c]
  40f3f6:	mov    bl,0x53
  40f3f8:	push   ss
  40f3f9:	into   
  40f3fa:	inc    esp
  40f3fc:	jbe    0x40f3a8
  40f3fe:	call   0x9b7d7255
  40f403:	dec    edi
  40f404:	dec    esi
  40f405:	add    dl,bh
  40f407:	push   edx
  40f408:	pop    edi
  40f409:	cmp    al,0x9b
  40f40b:	push   ebx
  40f40c:	dec    esi
  40f40d:	jmp    0x4b7b:0x3c4f52d6
  40f414:	dec    esi
  40f415:	repnz mov dh,0x52
  40f418:	aas    
  40f419:	dec    edx
  40f41a:	sub    DWORD PTR [ebx+0x664babe3],edi
  40f420:	outs   dx,BYTE PTR ds:[esi]
  40f421:	adc    al,0xe1
  40f423:	aad    0x31
  40f425:	push   edi
  40f426:	fisttp QWORD PTR [esi+0x3e91431]
  40f42c:	(bad)  
  40f42d:	das    
  40f42e:	and    ebp,eax
  40f430:	push   cs
  40f431:	scas   al,BYTE PTR es:[edi]
  40f432:	out    0xba,eax
  40f434:	push   cs
  40f435:	xchg   BYTE PTR [ebx+edx*2],ah
  40f438:	push   edi
  40f43a:	nop
  40f43b:	dec    edi
  40f43c:	inc    ebx
  40f43d:	push   esp
  40f43e:	outs   dx,DWORD PTR ds:[esi]
  40f43f:	push   edx
  40f440:	out    dx,eax
  40f441:	cmp    esp,DWORD PTR [ebp-0x1a036bab]
  40f447:	fcom   st(6)
  40f449:	(bad)
  40f44d:	push   edi
  40f44e:	xor    edi,DWORD PTR [edi-0x26]
  40f451:	xchg   edi,eax
  40f452:	lods   al,BYTE PTR ds:[esi]
  40f453:	push   ebx
  40f454:	add    BYTE PTR [eax],al
  40f456:	arpl   WORD PTR [ebx+edx*4+0x13fe65],bp
  40f45d:	jno    0x40f43b
  40f45f:	adc    al,0xc3
  40f461:	outs   dx,BYTE PTR ds:[esi]
  40f462:	mov    bh,0xf8
  40f464:	fcom   QWORD PTR [edi]
  40f466:	ins    BYTE PTR es:[edi],dx
  40f467:	cmp    edi,esi
  40f469:	aad    0xa4
  40f46b:	xchg   esi,eax
  40f46c:	cmp    al,0x4c
  40f46e:	push   eax
  40f46f:	aad    0xff
  40f471:	call   0x4c400dc
  40f476:	in     al,0xe8
  40f478:	inc    eax
  40f479:	jmp    0x245b5b0
  40f47e:	in     eax,dx
  40f47f:	(bad)  
  40f481:	sub    cl,BYTE PTR [edi+0x5f]
  40f484:	out    0xcd,eax
  40f486:	cmp    edx,DWORD PTR [eax+eax*1]
  40f489:	ins    BYTE PTR es:[edi],dx
  40f48a:	cdq    
  40f48b:	aas    
  40f48c:	push   ecx
  40f48d:	sbb    DWORD PTR [edx-0x35],0xfffffffe
  40f491:	hlt    
  40f492:	add    ecx,ebp
  40f494:	inc    eax
  40f495:	jmp    0x654f6fe1
  40f49a:	ret    0xfe3a
  40f49d:	jmp    0xea38c48d
  40f4a2:	xor    dl,BYTE PTR [eax+eax*1]
  40f4a5:	je     0x40f495
  40f4a7:	inc    edx
  40f4a8:	dec    edi
  40f4a9:	push   ebx
  40f4aa:	xor    eax,0x3242ffae
  40f4af:	cmp    esi,DWORD PTR [ebp+ecx*8+0x60]
  40f4b3:	and    ch,ah
  40f4b5:	pop    ss
  40f4b6:	repnz cmp cl,BYTE PTR [ecx]
  40f4b9:	test   eax,0xace60000
  40f4be:	out    0x39,eax
  40f4c0:	sub    BYTE PTR [eax+eax*1],dl
  40f4c3:	push   0x7d
  40f4c5:	mov    ebp,0xb7ac0974
  40f4ca:	imul   ecx
  40f4cc:	push   es
  40f4cd:	(bad)  
  40f4cf:	sbb    al,0x65
  40f4d1:	xor    edi,DWORD PTR [edi-0x2c]
  40f4d4:	popa   
  40f4d5:	cmp    cl,BYTE PTR [eax-0x7423eb00]
  40f4db:	inc    ebp
  40f4dc:	mov    al,0x7f
  40f4de:	std    
  40f4df:	jne    0x40f521
  40f4e1:	in     eax,0x73
  40f4e3:	hlt    
  40f4e4:	xor    dl,BYTE PTR [edi]
  40f4e6:	push   DWORD PTR [ebp+0xc]
  40f4e9:	in     eax,0x13
  40f4eb:	in     eax,0x2e
  40f4ed:	push   edi
  40f4ee:	dec    BYTE PTR [edx]
  40f4f0:	dec    eax
  40f4f1:	pop    esp
  40f4f2:	sub    al,0x8b
  40f4f4:	aad    0xe2
  40f4f6:	mov    DWORD PTR [eax],edx
  40f4f8:	std    
  40f4f9:	push   edx
  40f4fa:	out    dx,al
  40f4fb:	push   eax
  40f4fc:	call   0xfe57:0x2ee913e3
  40f503:	or     bl,BYTE PTR [eax]
  40f505:	pop    esp
  40f506:	sbb    BYTE PTR [eax-0x12],ch
  40f509:	js     0x40f54a
  40f50b:	add    BYTE PTR [edi],bh
  40f50d:	arpl   si,bp
  40f50f:	call   0x410346
  40f514:	push   ebx
  40f515:	(bad)  
  40f516:	jae    0x40f519
  40f518:	fwait
  40f519:	jecxz  0x40f58e
  40f51b:	lock and BYTE PTR [ebx],ah
  40f51e:	push   es
  40f51f:	add    BYTE PTR [eax],al
  40f521:	add    BYTE PTR [eax-0x1d],cl
  40f524:	jae    0x40f51a
  40f526:	xor    BYTE PTR [ebx],bh
  40f528:	xor    edi,edi
  40f52a:	pmulhw mm6,QWORD PTR [ebx-0x4]
  40f52e:	add    BYTE PTR ds:0xb9080006,cl
  40f534:	rcr    DWORD PTR [ebx-0x2f],0xd0
  40f538:	push   ebx
  40f539:	mov    ebx,esp
  40f53b:	xchg   esi,eax
  40f53c:	ret    0xbec0
  40f53f:	in     al,0xfd
  40f541:	push   ebx
  40f542:	jo     0x40f4ce
  40f544:	loope  0x40f586
  40f546:	fmul   st,st(5)
  40f548:	jo     0x40f54b
  40f54a:	fwait
  40f54b:	in     al,0x81
  40f54d:	cmp    eax,0x411ece
  40f552:	xor    DWORD PTR [ebx],ebp
  40f554:	(bad)  
  40f555:	sbb    dh,BYTE PTR [edx+0x7028f448]
  40f55b:	sub    eax,DWORD PTR [edx]
  40f55d:	je     0x40f582
  40f55f:	scas   al,BYTE PTR es:[edi]
  40f560:	or     eax,0x3ec07dd
  40f565:	add    BYTE PTR ds:0x903c8334,ah
  40f56b:	and    ebx,eax
  40f56d:	call   FWORD PTR [esi+0x712b0560]
  40f573:	xchg   BYTE PTR [ecx],bh
  40f575:	ret    0x65a
  40f578:	push   eax
  40f579:	adc    al,0x37
  40f57b:	and    al,0xc3
  40f57d:	jmp    FWORD PTR [ecx-0x5339a990]
  40f583:	out    dx,eax
  40f584:	push   eax
  40f585:	inc    BYTE PTR [eax]
  40f587:	add    BYTE PTR [esi+0x13],ch
  40f58a:	add    eax,DWORD PTR [eax]
  40f58c:	xor    DWORD PTR [ebp+0x23336a02],esp
  40f592:	call   0x4ef7:0x832b3105
  40f599:	pop    edx
  40f59a:	xchg   BYTE PTR ds:0x89022b30,bl
  40f5a0:	mov    ah,0x3
  40f5a2:	push   ecx
  40f5a3:	(bad)  
  40f5a4:	ss mov al,0x85
  40f5a7:	retf   
  40f5a8:	das    
  40f5a9:	sub    cl,BYTE PTR [esi+0x4f]
  40f5ac:	es cwde 
  40f5ae:	cmp    edi,ebp
  40f5b0:	push   ds
  40f5b1:	pop    edx
  40f5b2:	pop    ebx
  40f5b3:	lea    ebp,[edi]
  40f5b5:	sub    eax,DWORD PTR [edx]
  40f5b7:	or     esi,ecx
  40f5b9:	pop    ecx
  40f5ba:	xchg   dl,dh
  40f5bc:	xor    DWORD PTR [ebx],ebp
  40f5be:	add    ch,BYTE PTR [eax-0x20]
  40f5c1:	add    eax,0xa7a5ffc5
  40f5c6:	push   ebx
  40f5c7:	std    
  40f5c8:	out    dx,al
  40f5c9:	imul   esi,DWORD PTR [ebx-0x11ebbf19],0xa90d3103
  40f5d3:	push   DWORD PTR [edx+0x3103e854]
  40f5d9:	push   ecx
  40f5da:	arpl   WORD PTR [eax-0x3c],cx
  40f5dd:	cmp    BYTE PTR [ebp-0x16ebcefc],al
  40f5e3:	sub    BYTE PTR [ebp-0x50b089b1],0xe3
  40f5ea:	ins    DWORD PTR es:[edi],dx
  40f5eb:	cdq    
  40f5ec:	add    BYTE PTR [eax],al
  40f5ee:	cmp    BYTE PTR [ecx],0x65
  40f5f1:	dec    edi
  40f5f2:	lahf   
  40f5f3:	push   ds
  40f5f4:	sti    
  40f5f5:	sbb    al,0xf0
  40f5f7:	adc    esp,DWORD PTR [edx+0x79]
  40f5fa:	jb     0x40f635
  40f5fc:	dec    ebp
  40f5fd:	dec    edi
  40f5fe:	cmp    edx,DWORD PTR [ebp+esi*8-0x79]
  40f602:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f603:	adc    ebp,ecx
  40f605:	add    edi,DWORD PTR [edx]
  40f607:	fistp  QWORD PTR [edi+edi*8]
  40f60a:	mov    ch,0x88
  40f60c:	call   0x5b7a2714
  40f611:	cmp    BYTE PTR [eax+edi*1+0x1d],bl
  40f615:	ficom  DWORD PTR [esi-0x50]
  40f618:	call   0x1572720
  40f61d:	and    DWORD PTR [edi],ebp
  40f61f:	adc    al,0xe9
  40f621:	cli    
  40f622:	jle    0x40f5e3
  40f624:	jg     0x40f6a2
  40f626:	in     eax,dx
  40f627:	cmp    esp,DWORD PTR [ebx-0x37]
  40f62a:	sub    ah,ch
  40f62c:	sbb    BYTE PTR [edx+0x31],0x12
  40f630:	jmp    0xdd7d9b83
  40f635:	clc    
  40f636:	cmc    
  40f637:	out    0x27,al
  40f639:	add    al,0x3a
  40f63b:	push   esp
  40f63c:	push   esp
  40f63d:	lods   al,BYTE PTR ds:[esi]
  40f63e:	pop    es
  40f63f:	ret    0x4ec4
  40f642:	and    eax,0xf6c50e35
  40f647:	or     al,BYTE PTR [eax]
  40f649:	test   eax,0xa642fd06
  40f64e:	mov    ecx,0xa6fd77
  40f653:	add    BYTE PTR [edi+0x37],ch
  40f656:	(bad)  
  40f657:	jmp    0xa9c57f8e
  40f65c:	jl     0x40f694
  40f65e:	(bad)  
  40f65f:	cmp    ebp,esp
  40f661:	idiv   bh
  40f663:	cmc    
  40f664:	xor    ch,BYTE PTR [esi+ebx*2]
  40f667:	out    0x32,eax
  40f669:	adc    al,0xb
  40f66b:	test   eax,0x2c832089
  40f670:	repnz cmp dh,bh
  40f673:	data16 xor al,al
  40f676:	or     ebx,DWORD PTR [esi-0x47]
  40f679:	ja     0x40f678
  40f67b:	push   esi
  40f67c:	inc    DWORD PTR [ebp-0x2ada45fc]
  40f682:	call   DWORD PTR [ecx+0x23]
  40f685:	sub    ebx,DWORD PTR [ecx]
  40f687:	ds pop ecx
  40f689:	cmp    esp,edi
  40f68b:	jge    0x40f6c3
  40f68d:	adc    al,0x0
  40f68f:	mov    DWORD PTR cs:[edi],edi
  40f692:	out    0x55,eax
  40f694:	ss adc al,0x0
  40f697:	adc    bl,BYTE PTR [edx+0x36]
  40f69a:	je     0x40f6ad
  40f69c:	jmp    0x8489:0x32e90374
  40f6a3:	xor    eax,0x99fe35ec
  40f6a8:	out    0x7f,eax
  40f6aa:	(bad)  
  40f6ab:	idiv   DWORD PTR [esi+esi*1-0x19]
  40f6af:	inc    ebp
  40f6b0:	cmp    DWORD PTR [eax+eax*1],edx
  40f6b3:	shl    BYTE PTR [esi],1
  40f6b5:	aaa    
  40f6b6:	(bad)  
  40f6b7:	fiadd  WORD PTR [eax]
  40f6b9:	add    BYTE PTR [eax+eax*4-0x39],ah
  40f6bd:	xlat   BYTE PTR ds:[ebx]
  40f6be:	jl     0x40f6f6
  40f6c0:	out    0x69,eax
  40f6c2:	cmp    DWORD PTR [eax+eax*1],edx
  40f6c5:	add    BYTE PTR [ebx-0x3436a62b],al
  40f6cb:	jle    0x40f656
  40f6cd:	in     al,dx
  40f6ce:	pop    ebx
  40f6cf:	int3   
  40f6d0:	ficom  WORD PTR [ebx+0x70]
  40f6d3:	push   es
  40f6d4:	in     eax,0x40
  40f6d6:	enter  0x70ca,0x1
  40f6da:	mov    ecx,eax
  40f6dc:	cmp    DWORD PTR ds:0x411675,0x83075ed8
  40f6e6:	cmc    
  40f6e7:	cdq    
  40f6e8:	sub    al,0x41
  40f6ea:	enter  0x7512,0x5
  40f6ee:	jae    0x40f6c2
  40f6f0:	pop    ecx
  40f6f1:	leave  
  40f6f2:	fcmovnbe st,st(0)
  40f6f4:	inc    ebx
  40f6f5:	cld    
  40f6f6:	mov    BYTE PTR [edx],dl
  40f6f8:	add    BYTE PTR [eax],al
  40f6fa:	dec    edi
  40f6fb:	dec    edi
  40f6fc:	test   BYTE PTR [eax],0x98
  40f6ff:	adc    al,BYTE PTR [eax]
  40f701:	(bad)  
  40f702:	int    0xd6
  40f704:	(bad)  
  40f705:	dec    DWORD PTR [eax+0x3c45c712]
  40f70b:	adc    BYTE PTR [eax],al
  40f70d:	add    BYTE PTR [eax-0x31],bl
  40f710:	inc    ebx
  40f711:	lock pop eax
  40f713:	adc    al,BYTE PTR [eax]
  40f715:	add    ch,ah
  40f717:	dec    esi
  40f718:	out    dx,al
  40f719:	push   eax
  40f71a:	lds    ecx,FWORD PTR [esi-0xe]
  40f71d:	push   eax
  40f71e:	add    BYTE PTR [eax],al
  40f720:	aad    0x4e
  40f722:	jmp    0x3445:0x8bc7b250
  40f729:	sub    BYTE PTR [eax+0x2],0xa2
  40f72d:	adc    ebp,DWORD PTR [edx+0x0]
  40f730:	daa    
  40f731:	aas    
  40f732:	stos   DWORD PTR es:[edi],eax
  40f733:	fst    DWORD PTR cs:[ecx]
  40f736:	mov    DWORD PTR [ebp+0x0],eax
  40f739:	xchg   ebp,eax
  40f73a:	jnp    0x40f724
  40f73c:	or     BYTE PTR [esi+0x7],bl
  40f73f:	xor    DWORD PTR [ecx],0x31e95be0
  40f745:	sub    eax,DWORD PTR [edx]
  40f747:	jne    0x40f6ce
  40f749:	dec    esi
  40f74a:	aad    0xfb
  40f74c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f74d:	lock dec ebx
  40f74f:	sub    BYTE PTR [ebx+eax*4+0x2],0x74
  40f754:	mov    esi,DWORD PTR [edx+0x2ecaf7ad]
  40f75a:	dec    ebx
  40f75b:	jb     0x40f7a6
  40f75d:	mov    ds:0x9ece41d5,eax
  40f762:	jns    0x40f7a8
  40f764:	rol    DWORD PTR [esi-0x16b517f1],1
  40f76a:	dec    esp
  40f76b:	(bad)  
  40f76c:	sub    ch,BYTE PTR [ebx-0x2a]
  40f76f:	and    bh,BYTE PTR [eax+0x356967e8]
  40f775:	xchg   ebx,eax
  40f776:	pop    esp
  40f777:	xor    DWORD PTR [esi-0x6e8bb452],ebx
  40f77d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f77e:	ret    0x8e07
  40f781:	pop    eax
  40f782:	data16 mov es,WORD PTR [eax]
  40f785:	add    cl,dh
  40f787:	cs dec ebx
  40f789:	xor    al,0x54
  40f78b:	add    cl,0xff
  40f78e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f78f:	sub    ebx,DWORD PTR [edi+0x26bfa24]
  40f795:	xor    DWORD PTR [edx+0x7f],0x4b
  40f799:	dec    esp
  40f79a:	dec    ebp
  40f79b:	stos   BYTE PTR es:[edi],al
  40f79c:	int    0xeb
  40f79e:	xor    DWORD PTR [eax+0x1ec4fe87],esp
  40f7a4:	dec    esp
  40f7a5:	adc    al,0x98
  40f7a7:	jne    0x40f76a
  40f7a9:	push   DWORD PTR [edi+0x68]
  40f7ac:	dec    esi
  40f7ad:	push   DWORD PTR [esi]
  40f7af:	sub    eax,DWORD PTR [edx]
  40f7b1:	sub    DWORD PTR [ebx+edx*1+0x2b26ff59],0x140804d5
  40f7bc:	inc    ebp
  40f7bd:	dec    ebx
  40f7be:	pop    ss
  40f7bf:	xor    eax,0x140ac969
  40f7c4:	pop    ebp
  40f7c5:	std    
  40f7c6:	pop    es
  40f7c7:	mov    edi,0x6b254bcc
  40f7cc:	push   ss
  40f7cd:	(bad)
  40f7d0:	out    0x3,eax
  40f7d2:	xor    DWORD PTR [edx+edx*1],edx
  40f7d5:	cmp    eax,0x5861def3
  40f7da:	mov    bl,0x4f
  40f7dc:	mov    esp,0x23ac7fb7
  40f7e1:	bound  ecx,QWORD PTR [esi]
  40f7e3:	adc    al,0x91
  40f7e5:	(bad)  
  40f7e6:	xor    DWORD PTR [ecx-0x73],edx
  40f7e9:	xchg   DWORD PTR [eax],eax
  40f7eb:	add    ch,bh
  40f7ed:	xor    dl,dh
  40f7ef:	les    esi,FWORD PTR [esi-0x4c030bcc]
  40f7f5:	test   BYTE PTR [ebx-0x16ec0fe6],0xd0
  40f7fc:	xor    al,0xe9
  40f7fe:	sub    BYTE PTR [ebx+0x7f294afb],ch
  40f804:	sub    eax,0x86c4a1ef
  40f809:	sub    esi,DWORD PTR [edi+0x5]
  40f80c:	xor    DWORD PTR [ecx+edx*2],edx
  40f80f:	and    BYTE PTR [ebp+0x34],dh
  40f812:	cmp    eax,0xa1eb2d87
  40f817:	les    esp,FWORD PTR [esi+0x34]
  40f81a:	mov    ah,0xf2
  40f81c:	pop    edi
  40f81d:	shr    ah,0x4a
  40f820:	sbb    eax,0x4ec4b1eb
  40f825:	sub    al,0x46
  40f827:	pop    es
  40f828:	xor    DWORD PTR [edx+eiz*8],edx
  40f82b:	inc    ebx
  40f82c:	lds    ecx,FWORD PTR [esi]
  40f82e:	adc    dh,bl
  40f830:	xor    DWORD PTR [ecx+ebp*8],edx
  40f833:	inc    edx
  40f834:	jne    0x40f866
  40f836:	(bad)  
  40f837:	call   0x5c410c6e
  40f83c:	lock das 
  40f83e:	dec    edi
  40f83f:	push   ebx
  40f840:	sub    eax,0xe7de01be
  40f845:	pop    ss
  40f846:	push   0xffffffe9
  40f848:	jnp    0x40f7f0
  40f84a:	add    ecx,esi
  40f84c:	add    DWORD PTR [ecx+0x2d],eax
  40f84f:	sub    BYTE PTR [eax],al
  40f851:	add    BYTE PTR ds:0x3035c01f,ch
  40f857:	cmp    eax,0x1432e988
  40f85c:	(bad)  
  40f85d:	cmp    dh,BYTE PTR [ecx]
  40f85f:	cmp    al,0x59
  40f861:	sub    BYTE PTR [edx+0x32],ch
  40f864:	mov    BYTE PTR [edi*2+0x6aed7232],ah
  40f86b:	inc    ecx
  40f86c:	add    ecx,ebp
  40f86e:	xor    al,ah
  40f870:	(bad)  
  40f871:	cld    
  40f872:	push   0xffffffe3
  40f874:	(bad)  
  40f875:	cli    
  40f876:	scas   al,BYTE PTR es:[edi]
  40f877:	mov    ebx,0x1432e7ff
  40f87c:	push   0xfe339ee9
  40f881:	push   ecx
  40f882:	adc    DWORD PTR [esi],edx
  40f884:	add    cl,ch
  40f886:	(bad)  
  40f887:	jae    0x40f8fc
  40f889:	add    dh,dl
  40f88b:	xlat   BYTE PTR ds:[ebx]
  40f88c:	sti    
  40f88d:	jmp    0x74410cc4
  40f892:	jno    0x40f8c3
  40f894:	dec    edi
  40f895:	shl    DWORD PTR [edx],cl
  40f897:	mov    esi,0x2b813601
  40f89c:	imul   ebp,ecx,0x2603a5eb
  40f8a2:	popa   
  40f8a3:	inc    eax
  40f8a4:	sub    eax,0xc01f32a8
  40f8a9:	popf   
  40f8aa:	inc    esp
  40f8ab:	xor    dh,BYTE PTR [ecx+edx*1-0x26]
  40f8af:	js     0x40f8e1
  40f8b1:	add    BYTE PTR [edi],ch
  40f8b3:	fsubp  st(1),st
  40f8b5:	xor    BYTE PTR [eax],al
  40f8b7:	add    BYTE PTR [edi],ch
  40f8b9:	arpl   si,si
  40f8bb:	call   0x40013c
  40f8c0:	dec    edi
  40f8c1:	pop    ss
  40f8c2:	and    BYTE PTR [ecx+0x8],al
  40f8c5:	aam    0x43
  40f8c7:	cld    
  40f8c8:	sbb    BYTE PTR [edi],dl
  40f8ca:	add    BYTE PTR [eax],al
  40f8cc:	lea    esi,[ebx-0x6]
  40f8cf:	push   eax
  40f8d0:	jb     0x40f8ea
  40f8d2:	push   0x2
  40f8d4:	pop    ss
  40f8d5:	push   edx
  40f8d6:	(bad)  
  40f8d7:	(bad)  
  40f8d8:	sub    edx,DWORD PTR [edi+edi*8]
  40f8db:	adc    eax,0x410ded
  40f8e0:	rcl    esi,cl
  40f8e2:	or     eax,0x188184
  40f8e7:	add    BYTE PTR [edi-0x27df298e],dl
  40f8ed:	push   ss
  40f8ee:	add    bh,al
  40f8f0:	adc    eax,0xc8fffffc
  40f8f5:	push   ss
  40f8f6:	push   DWORD PTR [ebx-0x6c]
  40f8f9:	stos   DWORD PTR es:[edi],eax
  40f8fa:	inc    ebx
  40f8fb:	loopne 0x40f91c
  40f8fd:	dec    ecx
  40f8fe:	push   es
  40f8ff:	(bad)  
  40f900:	push   ebp
  40f901:	mov    ah,0xc5
  40f903:	inc    ebp
  40f904:	add    BYTE PTR [eax],bl
  40f906:	add    BYTE PTR [eax],al
  40f908:	cwde   
  40f909:	rol    DWORD PTR [ebx-0x14],cl
  40f90c:	cwde   
  40f90d:	push   ss
  40f90e:	add    BYTE PTR [eax],al
  40f910:	push   edi
  40f911:	jae    0x40f901
  40f913:	add    BYTE PTR [eax-0x6a38ffea],cl
  40f919:	loop   0x40f919
  40f91b:	inc    DWORD PTR [eax]
  40f91d:	add    BYTE PTR [eax+0x16],bl
  40f920:	lea    eax,[ebp+0x40]
  40f923:	push   0xd00c75fd
  40f928:	sub    al,0x4
  40f92a:	pop    eax
  40f92b:	push   ss
  40f92c:	or     eax,eax
  40f92e:	xor    DWORD PTR [ecx+0x8bc82ea],edx
  40f934:	add    al,0x74
  40f936:	sub    BYTE PTR [edx],bl
  40f938:	iret   
  40f939:	repz mov esi,0x7028b338
  40f93f:	cmp    edi,DWORD PTR [edi]
  40f941:	inc    esp
  40f942:	add    eax,0x3100023d
  40f947:	inc    esi
  40f948:	inc    esi
  40f94a:	je     0x40f9b3
  40f94c:	add    al,BYTE PTR [eax]
  40f94e:	xor    DWORD PTR [ebx],edi
  40f950:	inc    edi
  40f951:	je     0x40f950
  40f953:	(bad)  
  40f954:	in     eax,dx
  40f955:	loopne 0x40f99e
  40f957:	cld    
  40f958:	add    ecx,DWORD PTR [ebx]
  40f95a:	icebp  
  40f95b:	out    0xe9,eax
  40f95d:	out    0xca,eax
  40f95f:	jno    0x40f9a8
  40f961:	(bad)  
  40f962:	mov    dl,0x40
  40f964:	sub    DWORD PTR ds:0x74023b70,ebp
  40f96a:	aaa    
  40f96b:	xchg   edx,eax
  40f96c:	in     eax,dx
  40f96d:	fcom   DWORD PTR [edi]
  40f96f:	cld    
  40f970:	add    eax,edi
  40f972:	xor    al,0xee
  40f974:	sbb    al,BYTE PTR [ecx+0x31]
  40f977:	cmp    al,0x2
  40f979:	add    BYTE PTR [ecx+0x31d3c5be],dh
  40f97f:	das    
  40f980:	sti    
  40f981:	inc    BYTE PTR [eax]
  40f983:	add    BYTE PTR [edi+eiz*4],ah
  40f986:	inc    edi
  40f987:	je     0x40f91e
  40f989:	ret    
  40f98a:	sub    eax,0x473b3102
  40f98f:	je     0x40f916
  40f991:	rol    DWORD PTR [ebx+0x0],cl
  40f994:	xor    DWORD PTR [ebx],edi
  40f996:	inc    esi
  40f997:	xor    dh,BYTE PTR [ecx-0x6c]
  40f99a:	inc    edi
  40f99b:	(bad)  
  40f99c:	outs   dx,BYTE PTR ds:[esi]
  40f99d:	repnz push esp
  40f99f:	lods   eax,DWORD PTR ds:[esi]
  40f9a0:	sub    DWORD PTR [edx-0x9],eax
  40f9a3:	test   BYTE PTR [ebx],dl
  40f9a5:	add    cl,BYTE PTR [eax-0x2]
  40f9a8:	stos   BYTE PTR es:[edi],al
  40f9a9:	adc    al,0x2
  40f9ab:	std    
  40f9ac:	imul   esp,DWORD PTR [ecx],0x64
  40f9af:	loopne 0x40f9f5
  40f9b1:	xor    DWORD PTR ds:0xe914318b,edx
  40f9b7:	add    edx,esi
  40f9b9:	int3   
  40f9ba:	das    
  40f9bb:	inc    esp
  40f9bc:	test   DWORD PTR [ebp+0x2ff2840c],ebx
  40f9c2:	sub    ch,0x16
  40f9c5:	aam    0xe8
  40f9c7:	dec    ebx
  40f9c8:	mov    al,ds:0x9847aa13
  40f9cd:	adc    al,0xd1
  40f9cf:	xor    eax,0x5be91430
  40f9d4:	cld    
  40f9d5:	in     eax,dx
  40f9d6:	int    0x47
  40f9d8:	push   cs
  40f9d9:	xchg   DWORD PTR [ecx+0x77bbef47],edi
  40f9df:	push   ss
  40f9e0:	jo     0x40f9f6
  40f9e2:	inc    ecx
  40f9e3:	pop    ebp
  40f9e4:	or     dl,bl
  40f9e6:	call   0x2540fa46
  40f9eb:	in     eax,dx
  40f9ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f9ed:	inc    edi
  40f9ee:	push   esi
  40f9ef:	sub    ecx,esi
  40f9f1:	(bad)  
  40f9f2:	(bad)  
  40f9f3:	mov    eax,0x147015d2
  40f9f8:	add    DWORD PTR [esi-0x8],0xe5dc8530
  40f9ff:	add    DWORD PTR [eax],ebp
  40fa01:	add    al,0x19
  40fa03:	adc    eax,0x389ec4c4
  40fa08:	jge    0x40fa14
  40fa0a:	xchg   esi,eax
  40fa0b:	xor    al,dl
  40fa0d:	rcr    BYTE PTR [ecx-0x2d],1
  40fa10:	call   0xa83bd9f0
  40fa15:	add    ecx,DWORD PTR [ecx+0x77471233]
  40fa1b:	mov    ebx,0x13f0168f
  40fa20:	rol    DWORD PTR [ebp-0x17002ce6],1
  40fa26:	cli    
  40fa27:	inc    ebx
  40fa28:	cmp    DWORD PTR [esi],ebp
  40fa2a:	out    dx,al
  40fa2b:	mov    eax,0x3075d00d
  40fa30:	data16 das 
  40fa32:	and    eax,0xf300ffd3
  40fa37:	jmp    0x6fa:0x19d50efe
  40fa3e:	jbe    0x40fa77
  40fa40:	xor    al,0x3
  40fa42:	outs   dx,BYTE PTR ds:[esi]
  40fa43:	or     ch,BYTE PTR cs:[ecx]
  40fa46:	add    DWORD PTR [ebx],eax
  40fa48:	call   0xfe6f662c
  40fa4d:	repnz add BYTE PTR [eax],al
  40fa50:	jb     0x40f9f5
  40fa52:	or     DWORD PTR [esi+0x284a3731],esp
  40fa58:	xor    eax,0x32e90015
  40fa5d:	mov    esp,0x1432e800
  40fa62:	call   0xfe703d3d
  40fa67:	mov    bh,BYTE PTR ds:0x17e940db
  40fa6d:	fdivr  st,st(3)
  40fa6f:	call   0x6c410ea9
  40fa74:	icebp  
  40fa75:	sub    ecx,DWORD PTR [edi-0x6a]
  40fa78:	and    ebp,edi
  40fa7a:	dec    edx
  40fa7b:	sub    BYTE PTR ds:0x32eb683c,ch
  40fa81:	adc    al,0xb
  40fa83:	test   eax,0xbcff0881
  40fa88:	cmp    eax,0xfae940db
  40fa8d:	dec    eax
  40fa8e:	not    WORD PTR cs:[ebp+0x4]
  40fa93:	adc    dl,cl
  40fa95:	aam    0xff
  40fa97:	call   0x41410ece
  40fa9c:	mov    ecx,gs
  40fa9e:	inc    BYTE PTR [eax]
  40faa0:	test   edx,0xd6273304
  40faa6:	push   si
  40faa8:	das    
  40faa9:	pop    ecx
  40faaa:	(bad)  
  40faab:	out    0x4b,eax
  40faad:	ret    0xfffd
  40fab0:	add    edx,edx
  40fab2:	push   ebx
  40fab3:	mov    eax,DWORD PTR [eax]
  40fab5:	add    BYTE PTR [ebx+ecx*2],dh
  40fab8:	add    eax,0xf81388e9
  40fabd:	jb     0x40fb08
  40fabf:	sar    ch,cl
  40fac1:	push   0x18
  40fac3:	retf   
  40fac4:	mov    eax,0xb8131801
  40fac9:	add    BYTE PTR [eax],cl
  40facb:	adc    eax,DWORD PTR [eax]
  40facd:	leave  
  40face:	dec    edx
  40facf:	das    
  40fad0:	(bad)  
  40fad1:	addr16 cmp ebx,ecx
  40fad4:	add    BYTE PTR ds:[eax],dl
  40fad7:	inc    edx
  40fad8:	inc    edx
  40fada:	out    0x4f,eax
  40fadc:	clc    
  40fadd:	call   0xa429132a
  40fae2:	fst    DWORD PTR [edx]
  40fae4:	add    al,ch
  40fae6:	xchg   edx,eax
  40fae7:	aad    0xfd
  40fae9:	push   eax
  40faeb:	lods   al,BYTE PTR ds:[esi]
  40faec:	lock inc DWORD PTR [edi-0x680aed31]
  40faf3:	fsub   st,st(6)
  40faf5:	cld    
  40faf6:	popf   
  40faf7:	fdivr  st,st(5)
  40faf9:	and    ebp,0xffffffcf
  40fafc:	dec    ecx
  40fafd:	inc    ecx
  40fafe:	enter  0x7412,0x19
  40fb02:	sbb    edx,DWORD PTR [edi]
  40fb04:	fldcw  WORD PTR [esi]
  40fb06:	pop    ecx
  40fb07:	sbb    BYTE PTR [eax],al
  40fb09:	je     0x40fa99
  40fb0b:	xlat   BYTE PTR ds:[ebx]
  40fb0c:	adc    ebx,ecx
  40fb0e:	(bad)  
  40fb0f:	push   ecx
  40fb10:	inc    dh
  40fb12:	popf   
  40fb13:	arpl   WORD PTR [edi],sp
  40fb15:	inc    ecx
  40fb16:	cwde   
  40fb17:	adc    DWORD PTR [eax],eax
  40fb19:	add    BYTE PTR [eax],al
  40fb1b:	add    BYTE PTR [ecx],dh
  40fb1d:	mov    ebp,0xdd7ac65b
  40fb22:	inc    esp
  40fb23:	out    0x79,eax
  40fb25:	fadd   DWORD PTR [esi+edi*8+0x72]
  40fb29:	inc    esp
  40fb2a:	int3   
  40fb2b:	call   0x718b3821
  40fb30:	xor    dl,bh
  40fb32:	inc    esp
  40fb33:	out    0x26,eax
  40fb35:	cmp    al,0x2
  40fb37:	add    bl,bl
  40fb39:	aaa    
  40fb3a:	test   eax,0x530d632a
  40fb3f:	cmp    BYTE PTR [ebx],0x38
  40fb42:	int    0x1
  40fb44:	sbb    bh,BYTE PTR [edx]
  40fb46:	push   edi
  40fb47:	jmp    0x141e:0xfe44b719
  40fb4e:	ins    BYTE PTR es:[edi],dx
  40fb4f:	not    BYTE PTR [esi]
  40fb51:	aas    
  40fb52:	fdivr  st,st(7)
  40fb54:	push   ss
  40fb55:	or     BYTE PTR [ebx],al
  40fb57:	add    BYTE PTR [ecx],dh
  40fb59:	dec    esi
  40fb5a:	sbb    eax,0x3fc5874
  40fb5f:	dec    DWORD PTR [ebx+eax*8-0x56]
  40fb63:	inc    eax
  40fb64:	xor    DWORD PTR [esi+0x1d],edx
  40fb67:	jl     0x40faf1
  40fb69:	cld    
  40fb6a:	add    edi,edi
  40fb6c:	adc    al,0xbb
  40fb6e:	test   eax,0x1d7e3140
  40fb73:	test   BYTE PTR [eax-0x4],ch
  40fb76:	add    edi,edi
  40fb78:	or     al,0xa3
  40fb7a:	test   eax,0x1d863140
  40fb7f:	mov    WORD PTR [eax],es
  40fb81:	add    BYTE PTR [eax-0x4],bl
  40fb84:	add    edi,edi
  40fb86:	push   esp
  40fb87:	retf   
  40fb88:	test   eax,0x1dae3140
  40fb8d:	xchg   esp,eax
  40fb8e:	clc    
  40fb8f:	sti    
  40fb90:	add    edi,edi
  40fb92:	dec    esp
  40fb93:	ret    
  40fb94:	test   eax,0x66143140
  40fb99:	push   ds
  40fb9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb9b:	retf   
  40fb9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb9d:	add    edi,DWORD PTR [esi-0x9]
  40fba0:	mov    BYTE PTR [edx+0x1e4e13f1],ch
  40fba6:	xchg   ebp,eax
  40fba7:	retf   
  40fba8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fba9:	add    esp,DWORD PTR [esi-0x9]
  40fbac:	nop
  40fbad:	stos   BYTE PTR es:[edi],al
  40fbae:	icebp  
  40fbaf:	adc    esi,DWORD PTR [esi]
  40fbb1:	push   ds
  40fbb2:	test   ebx,ecx
  40fbb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fbb5:	add    ecx,DWORD PTR [esi-0x9]
  40fbb8:	pop    eax
  40fbb9:	stos   BYTE PTR es:[edi],al
  40fbba:	icebp  
  40fbbb:	adc    ebx,DWORD PTR [esi]
  40fbbd:	push   ds
  40fbbe:	test   ebx,ecx
  40fbc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fbc1:	add    esi,DWORD PTR [esi]
  40fbc3:	not    DWORD PTR [eax-0x56]
  40fbc6:	jno    0x40fbdc
  40fbc8:	push   es
  40fbc9:	push   ds
  40fbca:	in     eax,0xca
  40fbcc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fbcd:	add    ebx,DWORD PTR [esi]
  40fbcf:	imul   DWORD PTR [eax]
  40fbd1:	stos   BYTE PTR es:[edi],al
  40fbd2:	jno    0x40fbe8
  40fbd4:	out    dx,al
  40fbd5:	sbb    eax,0x427caf5
  40fbda:	push   es
  40fbdb:	div    DWORD PTR [eax-0x29eb8e23]
  40fbe1:	jmp    0x468c6d0
  40fbe6:	add    BYTE PTR [eax],al
  40fbe8:	out    dx,al
  40fbe9:	neg    BYTE PTR [eax-0x41eb8e23]
  40fbef:	jmp    0x468c6f6
  40fbf4:	(bad)  
  40fbf5:	not    BYTE PTR [eax-0x59eb8e23]
  40fbfb:	jmp    0x468c6ea
  40fc00:	mov    esi,0x71dd88f6
  40fc05:	adc    al,0x8e
  40fc07:	jmp    0x468c69e
  40fc0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc0d:	not    BYTE PTR [eax+0x13f1dd]
  40fc13:	jbe    0x40fb9d
  40fc15:	cmp    BYTE PTR [eax+0x28],bl
  40fc18:	xor    eax,0x6459242d
  40fc1d:	sar    edi,cl
  40fc1f:	pop    ebp
  40fc20:	mov    BYTE PTR [eax],ah
  40fc22:	pop    eax
  40fc23:	test   al,0x32
  40fc25:	sub    eax,0xd38c5124
  40fc2a:	inc    DWORD PTR [ebp+0x58]
  40fc2d:	sub    BYTE PTR [eax-0x58],bl
  40fc30:	xor    ch,BYTE PTR ds:0xd374e924
  40fc36:	jmp    FWORD PTR ds:0xa85a1058
  40fc3c:	xor    ch,BYTE PTR ds:0xd35cf124
  40fc42:	call   DWORD PTR ds:0xa85a1848
  40fc48:	xor    ch,BYTE PTR [ebx]
  40fc4a:	and    al,0xd9
  40fc4c:	add    BYTE PTR [eax],al
  40fc4e:	add    al,0xd5
  40fc50:	(bad)  
  40fc51:	std    
  40fc52:	or     DWORD PTR [eax],ecx
  40fc54:	pop    edx
  40fc55:	test   al,0x32
  40fc57:	sub    esp,DWORD PTR [ecx+edx*8]
  40fc5a:	in     al,dx
  40fc5b:	aam    0xff
  40fc5d:	in     eax,0x19
  40fc5f:	adc    BYTE PTR [edx+0x28],bl
  40fc62:	xor    eax,0xd709242b
  40fc67:	aam    0xff
  40fc69:	int    0xd9
  40fc6b:	neg    DWORD PTR [ecx+0x28]
  40fc6e:	sub    eax,0xff11242b
  40fc73:	aam    0xff
  40fc75:	mov    ch,0xc9
  40fc77:	call   FWORD PTR [ecx+0x28]
  40fc7a:	xor    eax,0xe4d9242b
  40fc7f:	aam    0xff
  40fc81:	popf   
  40fc82:	leave  
  40fc83:	out    0x59,eax
  40fc85:	sub    BYTE PTR ds:0x8cd1242b,ch
  40fc8b:	aam    0xff
  40fc8d:	jmp    FWORD PTR [edi+0x495a3a3c]
  40fc93:	adc    bh,bh
  40fc95:	and    eax,0x3f4a48
  40fc9a:	pop    ds
  40fc9b:	cmp    al,0x46
  40fc9d:	pop    edx
  40fc9e:	fst    DWORD PTR [edi]
  40fca0:	jmp    DWORD PTR ds:0x3f49cc
  40fca6:	fistp  QWORD PTR [ebx]
  40fca8:	dec    esi
  40fca9:	pop    edx
  40fcaa:	cdq    
  40fcab:	pop    ss
  40fcac:	jmp    DWORD PTR ds:0x3f49c4
  40fcb2:	add    BYTE PTR [eax],al
  40fcb4:	pop    ds
  40fcb5:	cmp    al,0x56
  40fcb7:	pop    edx
  40fcb8:	mov    DWORD PTR [edi],edx
  40fcba:	jmp    DWORD PTR ds:0x3f49bc
  40fcc0:	(bad)  
  40fcc2:	bound  ebx,QWORD PTR [edx-0x77]
  40fcc5:	pop    ss
  40fcc6:	jmp    DWORD PTR ds:0x3f49ac
  40fccc:	aas    
  40fccd:	cmp    al,0x6e
  40fccf:	pop    edx
  40fcd0:	fst    DWORD PTR [esi]
  40fcd2:	jmp    DWORD PTR ds:0x3f49a4
  40fcd8:	pop    ds
  40fcd9:	xor    esi,DWORD PTR [esi+0x5a]
  40fcdc:	fst    DWORD PTR [esi]
  40fcde:	jmp    DWORD PTR ds:0x3f4a8c
  40fce4:	fbstp  TBYTE PTR [edx]
  40fce6:	jle    0x40fd42
  40fce8:	dec    ecx
  40fce9:	adc    bh,bh
  40fceb:	and    eax,0x3f4a54
  40fcf0:	out    dx,eax
  40fcf1:	xor    al,BYTE PTR [esi-0xeff6a6]
  40fcf7:	and    eax,0x3f4a4c
  40fcfc:	lahf   
  40fcfd:	xor    cl,BYTE PTR [esi-0xefe6a6]
  40fd03:	and    eax,0x3f49b0
  40fd08:	xor    DWORD PTR [edx-0x3f4601a],eax
  40fd0e:	add    edi,edi
  40fd10:	dec    esp
  40fd11:	(bad)  
  40fd13:	inc    eax
  40fd14:	xor    DWORD PTR [edx+0xabe6],ebp
  40fd1a:	sti    
  40fd1b:	sti    
  40fd1c:	add    edi,edi
  40fd1e:	push   esp
  40fd1f:	in     eax,dx
  40fd20:	fld    QWORD PTR [eax+0x31]
  40fd23:	mov    dl,0xe6
  40fd25:	mov    bl,0xdb
  40fd27:	jnp    0x40fd2b
  40fd29:	dec    DWORD PTR [ebp+eax*4-0x23]
  40fd2d:	inc    eax
  40fd2e:	xor    edx,ebx
  40fd30:	out    0xbb,al
  40fd32:	or     edi,DWORD PTR [edx+eax*1-0x1]
  40fd36:	adc    al,0xfd
  40fd38:	fld    QWORD PTR [eax+0x31]
  40fd3b:	loop   0x40fd23
  40fd3d:	(bad)  
  40fd3e:	jmp    0x40fdbb
  40fd40:	add    bh,bh
  40fd42:	or     al,0xe1
  40fd44:	fld    QWORD PTR [eax+0x31]
  40fd47:	or     ah,bh
  40fd49:	iret   
  40fd4a:	fstp   TBYTE PTR [ebx+0x2]
  40fd4d:	call   DWORD PTR [edi+ebx*8-0x23]
  40fd51:	inc    eax
  40fd52:	xor    DWORD PTR [edx],edx
  40fd54:	out    0xd7,eax
  40fd56:	jnp    0x40fdd4
  40fd58:	add    bh,bh
  40fd5a:	dec    esp
  40fd5b:	(bad)  
  40fd5c:	fld    QWORD PTR [eax+0x31]
  40fd5f:	cmp    ah,ch
  40fd61:	fild   QWORD PTR [ebx-0x4]
  40fd64:	add    edi,edi
  40fd66:	push   esp
  40fd67:	dec    edi
  40fd68:	fadd   QWORD PTR [eax+0x31]
  40fd6b:	inc    edx
  40fd6c:	in     eax,0xe7
  40fd6e:	mov    edi,esp
  40fd70:	add    edi,edi
  40fd72:	or     al,0x3f
  40fd74:	fadd   QWORD PTR [eax+0x31]
  40fd77:	push   0xffffffe5
  40fd79:	repz jnp 0x40fd78
  40fd7c:	add    edi,edi
  40fd7e:	add    BYTE PTR [eax],al
  40fd80:	adc    al,0x63
  40fd82:	fadd   QWORD PTR [eax+0x31]
  40fd85:	adc    al,0xb5
  40fd87:	dec    edi
  40fd88:	jmp    0x6158:0xea4fac58
  40fd8f:	(bad)  
  40fd90:	push   edx
  40fd91:	adc    BYTE PTR [edx+0x3b],ch
  40fd94:	xor    BYTE PTR [edi+0x14127bf0],ah
  40fd9a:	jmp    0xe95170a2
  40fd9f:	test   BYTE PTR [esi-0x36f413f0],al
  40fda5:	push   ss
  40fda6:	jmp    0xe4972eae
  40fdab:	add    esi,DWORD PTR [edx+0x36bee02c]
  40fdb1:	ins    BYTE PTR es:[edi],dx
  40fdb2:	in     al,0x3
  40fdb4:	xor    DWORD PTR [ebx+ebp*1],edx
  40fdb7:	pop    es
  40fdb8:	xor    DWORD PTR [ebp+0x1bd41340],edx
  40fdbe:	jno    0x40fdc9
  40fdc0:	xor    DWORD PTR [ecx+ebp*8],edx
  40fdc3:	inc    ebp
  40fdc4:	xor    dl,BYTE PTR [edx+ebp*2]
  40fdc7:	cmp    ebx,DWORD PTR [esi]
  40fdc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fdca:	lock jnp 0x40fdfb
  40fdcd:	adc    al,0xe9
  40fdcf:	add    esi,ebx
  40fdd1:	psubsw mm0,QWORD PTR [esi+ebx*1-0x26f47c2c]
  40fdd9:	sbb    eax,0x563103e9
  40fdde:	in     al,dx
  40fddf:	add    ecx,DWORD PTR [esp+edx*4-0x18]
  40fde3:	add    eax,DWORD PTR [eax]
  40fde5:	add    BYTE PTR [ecx],dh
  40fde7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fde8:	lock jnp 0x40fe15
  40fdeb:	adc    al,0xe9
  40fded:	add    esi,ebx
  40fdef:	psubsw mm0,QWORD PTR [eax]
  40fdf2:	xor    DWORD PTR [ebx],edx
  40fdf4:	jmp    0x815d61fc
  40fdf9:	push   cs
  40fdfa:	xor    DWORD PTR [ecx+ebp*8],edx
  40fdfd:	inc    ecx
  40fdfe:	xor    dl,BYTE PTR [eax+eax*1]
  40fe01:	hlt    
  40fe02:	xor    dl,BYTE PTR [esi]
  40fe04:	add    cl,ch
  40fe06:	icebp  
  40fe07:	adc    BYTE PTR [eax+0x1432f9],bh
  40fe0d:	stos   DWORD PTR es:[edi],eax
  40fe0e:	sub    DWORD PTR [edi*1+0x1436e9],edx
  40fe15:	or     al,0x35
  40fe17:	ins    BYTE PTR es:[edi],dx
  40fe18:	adc    ecx,ebp
  40fe1a:	xor    dl,BYTE PTR [edx+eax*8]
  40fe1d:	in     eax,0x32
  40fe1f:	out    0xff,eax
  40fe21:	loopne 0x40fe55
  40fe23:	adc    al,0x7d
  40fe25:	loope  0x40fe31
  40fe27:	add    eax,0x5632e900
  40fe2c:	add    ebp,ecx
  40fe2e:	xor    DWORD PTR [eax+edx*1],edx
  40fe31:	jmp    0x9148a568
  40fe36:	aas    
  40fe37:	adc    al,0x0
  40fe39:	jmp    0xfc41132e
  40fe3e:	xor    dh,ah
  40fe40:	(bad)  
  40fe41:	call   0xd1f90eb7
  40fe46:	xor    dl,BYTE PTR [eax+eax*1]
  40fe49:	sub    eax,DWORD PTR [eax]
  40fe4b:	add    BYTE PTR [ecx],ch
  40fe4d:	adc    al,0x3d
  40fe4f:	jmp    0x953f26c6
  40fe54:	cmp    ch,BYTE PTR [ecx+ebx*1-0x17]
  40fe58:	xor    dl,BYTE PTR [edx+eax*8]
  40fe5b:	in     eax,dx
  40fe5c:	xor    ch,cl
  40fe5e:	jmp    FWORD PTR [eax+0x2d]
  40fe61:	adc    al,0x7d
  40fe63:	loope  0x40fdef
  40fe65:	or     eax,DWORD PTR [eax]
  40fe67:	jmp    0xe944509e
  40fe6c:	add    ebx,DWORD PTR [ebp+0x3c]
  40fe6f:	jmp    0xe64113a6
  40fe74:	xchg   ecx,eax
  40fe75:	push   esp
  40fe76:	mov    WORD PTR ds:0x8b0634,ds
  40fe7c:	mov    ebp,edx
  40fe7e:	add    al,BYTE PTR [eax]
  40fe80:	dec    ebx
  40fe81:	nop
  40fe82:	sbb    al,BYTE PTR [eax+ebx*8]
  40fe85:	adc    edi,edi
  40fe87:	jne    0x40fe7e
  40fe89:	call   0x8900:0x13cc107f
  40fe90:	dec    ecx
  40fe91:	or     eax,DWORD PTR [eax+eax*1]
  40fe94:	cwde   
  40fe95:	push   ebx
  40fe96:	lds    eax,FWORD PTR [ecx+0xf94]
  40fe9c:	mov    al,ds:0x21000013
  40fea1:	nop
  40fea2:	push   cs
  40fea3:	add    al,0x98
  40fea5:	adc    eax,DWORD PTR [ebx+0xf6c7c]
  40feab:	mov    eax,DWORD PTR [ecx]
  40fead:	or     eax,DWORD PTR [eax+eax*1]
  40feb0:	add    BYTE PTR [eax],al
  40feb2:	mov    BYTE PTR [edi+0x9],bl
  40feb5:	mov    bl,BYTE PTR [ecx+0x15]
  40feb8:	sar    dh,0x18
  40febb:	fwait
  40febc:	inc    ecx
  40febe:	dec    esp
  40febf:	adc    edx,eax
  40fec1:	and    DWORD PTR [edx],ecx
  40fec3:	sldt   WORD PTR [ebx+0x406d9]
  40feca:	pop    eax
  40fecb:	out    0x73,al
  40fecd:	sbb    eax,0x40e8fc3
  40fed2:	dec    eax
  40fed3:	adc    ecx,DWORD PTR [ecx+0xf2081]
  40fed9:	add    al,bl
  40fedb:	int    0x7f
  40fedd:	sbb    al,0xc
  40fedf:	adc    eax,DWORD PTR [eax]
  40fee1:	or     BYTE PTR [eax],cl
  40fee3:	adc    eax,DWORD PTR [eax]
  40fee5:	mov    DWORD PTR [ecx+0x18000403],ebx
  40feeb:	call   0xd000:0x130c1887
  40fef2:	sub    ebp,edx
  40fef4:	add    DWORD PTR [ecx+0x62131],0x1cb65631
  40fefe:	stos   BYTE PTR es:[edi],al
  40feff:	mov    ebx,0x3d310413
  40ff04:	mov    DWORD PTR [eax+0x23929],eax
  40ff0a:	jno    0x40ff7a
  40ff0c:	sbb    BYTE PTR [ebx],0x35
  40ff0f:	cmp    eax,0x3d310802
  40ff14:	add    cl,BYTE PTR [ecx+0x2cb00000]
  40ff1a:	push   es
  40ff1b:	add    BYTE PTR [ecx],dh
  40ff1d:	mov    dl,0x8a
  40ff1f:	pop    ss
  40ff20:	xor    eax,0x308a023d
  40ff25:	cmp    eax,DWORD PTR [edx-0x3]
  40ff28:	jno    0x40fede
  40ff2a:	add    al,bl
  40ff2c:	mov    edx,0xaa03e7f0
  40ff31:	push   0x5edc03e6
  40ff36:	shl    DWORD PTR [edx],cl
  40ff38:	scas   eax,DWORD PTR es:[di]
  40ff3a:	retf   0xbbff
  40ff3d:	les    eax,FWORD PTR [eax+0x2c0c30e6]
  40ff43:	inc    ebp
  40ff44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff45:	inc    eax
  40ff46:	rol    DWORD PTR [edx-0x104cc4b7],cl
  40ff4c:	mov    dl,0xe6
  40ff4e:	add    bh,BYTE PTR [ebp-0x1c312c2]
  40ff54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff55:	xchg   DWORD PTR [ecx],ecx
  40ff57:	je     0x40fefc
  40ff59:	push   0xffffff87
  40ff5b:	(bad)  
  40ff5c:	xor    ah,dl
  40ff5e:	pop    ds
  40ff5f:	add    al,0x31
  40ff61:	cmp    esi,DWORD PTR [ebp+0x13bcaa18]
  40ff67:	add    al,0x31
  40ff69:	cmp    ecx,DWORD PTR [ecx+0x22f2980]
  40ff6f:	add    BYTE PTR [ecx+0x14],dh
  40ff72:	jo     0x40ffee
  40ff74:	sbb    dl,BYTE PTR [eax]
  40ff76:	jmp    0xf8d4b77e
  40ff7b:	pop    es
  40ff7c:	add    BYTE PTR [eax],al
  40ff7e:	xor    DWORD PTR [edx+eiz*2],edx
  40ff81:	add    BYTE PTR [esi+0x10],0xe9
  40ff85:	add    ebx,edi
  40ff87:	push   edx
  40ff88:	out    0xb7,eax
  40ff8a:	cmp    BYTE PTR [edx+0x26ea01d0],bl
  40ff90:	test   eax,0xea39268b
  40ff95:	push   ebx
  40ff96:	push   ss
  40ff97:	adc    edx,DWORD PTR [eax+0x1f]
  40ff9a:	xor    eax,0x49b6e914
  40ff9f:	cdq    
  40ffa0:	adc    esi,DWORD PTR [di]
  40ffa3:	adc    al,0xe9
  40ffa5:	mov    dh,BYTE PTR [ecx+0x3103e50c]
  40ffab:	aam    0x5f
  40ffad:	jp     0x40ffd9
  40ffaf:	adc    cl,ch
  40ffb1:	add    ebp,DWORD PTR [eax+0x3107f893]
  40ffb7:	adc    al,0x72
  40ffb9:	add    BYTE PTR [esi+0x10],0xe9
  40ffbd:	add    edi,DWORD PTR [ebx+0x5c58eb0c]
  40ffc3:	push   ecx
  40ffc4:	pop    ss
  40ffc5:	sub    DWORD PTR [ebx+0x268be736],esi
  40ffcb:	lahf   
  40ffcc:	pop    edx
  40ffcd:	fdiv   DWORD PTR [ecx]
  40ffcf:	jnp    0x40ff9d
  40ffd1:	pop    es
  40ffd2:	xor    DWORD PTR [esp+ebx*4],edx
  40ffd5:	sbb    ch,BYTE PTR [edx+0x3107f893]
  40ffdb:	adc    al,0x60
  40ffdd:	cmp    BYTE PTR [esi],0x10
  40ffe0:	jmp    0x7140ffe8
  40ffe5:	fwait
  40ffe6:	aas    
  40ffe7:	pop    ds
  40ffe8:	sub    eax,0xb18ae914
  40ffed:	add    eax,DWORD PTR [eax]
  40ffef:	in     eax,dx
  40fff0:	xor    dl,BYTE PTR [ebx+ecx*4]
  40fff3:	push   0xe900101a
  40fff8:	inc    eax
  40fff9:	push   ebx
  40fffa:	add    BYTE PTR [ebp+0x3f],dl
  40fffd:	call   0x61c1:0x277ceb0f
  410004:	inc    ebp
  410005:	cmp    DWORD PTR [ecx],eax
  410007:	cdq    
  410008:	int    0x13
  41000a:	test   eax,0xfe24cedd
  41000f:	cmp    al,0x24
  410011:	cdq    
  410012:	sbb    cl,0xbe
  410015:	and    al,0xfe
  410017:	jo     0x40ffc5
  410019:	cld    
  41001a:	add    ebp,ecx
  41001c:	xor    dl,ah
  41001e:	mov    BYTE PTR [eax+0x49],dl
  410021:	adc    BYTE PTR [eax],al
  410023:	jmp    0xed5093d5
  410028:	xor    dl,BYTE PTR [ebx+ecx*4]
  41002b:	jo     0x41005a
  41002d:	adc    BYTE PTR [eax],al
  41002f:	jmp    0xf9ff416
  410034:	pop    eax
  410035:	push   edx
  410036:	add    ebp,ecx
  410038:	pop    edi
  410039:	mov    edi,0x148ecd8a
  41003e:	push   esi
  41003f:	sbb    ch,ch
  410041:	mov    ebp,0x9e2a4c82
  410046:	add    al,0x84
  410048:	add    BYTE PTR [eax],al
  41004a:	sub    dl,BYTE PTR [eax+eax*1]
  41004d:	jmp    0xdd64a911
  410052:	mov    bh,0x1d
  410054:	sub    dh,BYTE PTR [eax+ebp*4]
  410057:	mov    al,0x23
  410059:	jmp    0x42c50602
  41005e:	loope  0x410063
  410060:	mov    esp,DWORD PTR [esi+esi*4]
  410063:	dec    ecx
  410064:	mov    WORD PTR [edx+0x35],?
  410067:	adc    al,0x0
  410069:	add    BYTE PTR [eax],cl
  41006b:	and    bl,BYTE PTR [eax]
  41006d:	je     0x410085
  41006f:	push   ecx
  410070:	inc    eax
  410071:	test   DWORD PTR [ecx+0x65],edx
  410074:	hlt    
  410075:	or     DWORD PTR [eax+0x17],0xffffff85
  410079:	leave  
  41007a:	push   ebp
  41007b:	adc    BYTE PTR [ebx+0x1f2dac0],al
  410081:	sbb    DWORD PTR [eax+0x4b464716],0x7b
  410088:	and    bl,BYTE PTR [ecx+ecx*8]
  41008b:	fs int3 
  41008d:	pop    edi
  41008e:	cs cmp eax,0x17ccc259
  410094:	mov    edx,DWORD PTR [esp+esi*1+0x14]
  410098:	push   ebp
  410099:	push   esi
  41009a:	inc    ebx
  41009b:	call   0x23c18765
  4100a0:	(bad)  
  4100a1:	call   FWORD PTR [eax+0x12000017]
  4100a7:	adc    DWORD PTR [ecx+ecx*8+0x12ea39f],eax
  4100ae:	add    BYTE PTR [eax],al
  4100b0:	cwde   
  4100b1:	pop    ss
  4100b2:	push   edi
  4100b3:	mov    edi,DWORD PTR [ebx+eax*2+0x12]
  4100b7:	or     DWORD PTR [edi],0xe
  4100ba:	jbe    0x4100c1
  4100bc:	iret   
  4100bd:	push   cs
  4100be:	add    BYTE PTR [eax],al
  4100c0:	pop    eax
  4100c1:	xchg   edx,eax
  4100c2:	shr    BYTE PTR [ebx],0x17
  4100c5:	xchg   DWORD PTR [eax],edi
  4100c7:	or     BYTE PTR [ecx+edx*2-0x223abfb3],al
  4100ce:	jae    0x4100c6
  4100d0:	fist   DWORD PTR [edx+ebx*1-0xe8a7fc]
  4100d7:	jne    0x410146
  4100d9:	xchg   edx,eax
  4100da:	test   BYTE PTR [eax],dl
  4100dc:	inc    esp
  4100dd:	pop    ss
  4100de:	add    BYTE PTR [ecx+0x3ff96],cl
  4100e4:	xor    DWORD PTR ds:0x30b7c6c2,ebp
  4100ea:	(bad)  
  4100eb:	call   DWORD PTR [esi]
  4100ed:	and    eax,0xa4310002
  4100f2:	or     BYTE PTR [edi],0x2d
  4100f5:	sub    eax,0x44b78b02
  4100fa:	(bad)  
  4100fb:	push   esi
  4100fd:	pop    esp
  4100fe:	jecxz  0x41008a
  410100:	mov    bh,0x1c
  410102:	(bad)  
  410103:	jmp    esi
  410105:	mov    dh,0xd
  410107:	pop    edi
  410108:	test   eax,0x41853734
  41010d:	xor    DWORD PTR [edx],eax
  41010f:	add    BYTE PTR [edi+0x0],ch
  410112:	inc    esi
  410113:	pop    es
  410114:	add    BYTE PTR [eax],al
  410116:	xor    DWORD PTR [eax-0x52868cc8],esi
  41011c:	dec    edx
  41011d:	(bad)  
  41011e:	xor    BYTE PTR [ebx+0x2d310417],ch
  410124:	test   DWORD PTR [eax+0x38],ebp
  410127:	add    BYTE PTR [ebx],bl
  410129:	mov    esi,DWORD PTR [edi-0x690001e4]
  41012f:	mov    ds:0x2d351781,eax
  410134:	add    al,BYTE PTR [eax-0x48]
  410137:	ficom  DWORD PTR [edi]
  410139:	add    al,0x31
  41013b:	sub    eax,0x31218589
  410140:	add    al,BYTE PTR [eax]
  410142:	mov    edx,0x31041bba
  410147:	sub    eax,0xdf330f8c
  41014c:	cmp    ecx,eax
  41014e:	test   eax,0x2d8e013c
  410153:	cmp    DWORD PTR [edx],eax
  410155:	add    BYTE PTR [ebx+eax*2+0x3921858b],bh
  41015c:	add    al,BYTE PTR [eax]
  41015e:	test   al,0x13
  410160:	outs   dx,DWORD PTR ds:[esi]
  410161:	sbb    al,0x35
  410163:	adc    al,0xe9
  410165:	ret    
  410166:	mov    ecx,0x1efff472
  41016b:	and    bl,BYTE PTR [edi-0x7e]
  41016e:	es sbb cl,ch
  410171:	add    edi,DWORD PTR [edx+0x6ffe09a]
  410177:	and    ah,BYTE PTR [edx+0x14]
  41017a:	add    BYTE PTR [eax],al
  41017c:	xor    eax,DWORD PTR [esi-0x12]
  41017f:	inc    ebp
  410180:	scas   al,BYTE PTR es:[edi]
  410181:	add    al,0xe8
  410183:	mov    DWORD PTR [edx+0x18],ecx
  410186:	jmp    0x623c5d8e
  41018b:	sub    DWORD PTR [esi],0xa803e918
  410191:	call   0x8b28:0x21ceffe0
  410198:	xchg   esp,eax
  410199:	add    ch,ch
  41019b:	add    esi,DWORD PTR [ecx]
  41019d:	mov    esp,DWORD PTR [esi+0x13]
  4101a0:	sub    eax,0xb48ce914
  4101a5:	cld    
  4101a6:	in     al,0x3
  4101a8:	xor    DWORD PTR [esi+0x226805e0],ecx
  4101ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4101af:	mov    WORD PTR [edi-0xb],?
  4101b2:	fwait
  4101b3:	mov    esi,DWORD PTR [esi]
  4101b5:	(bad)  
  4101b6:	jno    0x410201
  4101b8:	mov    ?,WORD PTR [ebx]
  4101ba:	je     0x4101f4
  4101bc:	jg     0x41014b
  4101be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4101bf:	test   BYTE PTR [esi+0x18],dl
  4101c2:	mov    ecx,0x2c2c7c8c
  4101c7:	aaa    
  4101c8:	and    DWORD PTR [bx+di+0x48],esp
  4101cc:	mov    bl,0x33
  4101ce:	jmp    0x4a78:0x5052abd2
  4101d5:	and    DWORD PTR ds:0x134f84,edi
  4101db:	sahf   
  4101dc:	lods   eax,DWORD PTR ds:[esi]
  4101dd:	dec    edi
  4101de:	out    0x75,eax
  4101e0:	add    BYTE PTR [eax],al
  4101e2:	(bad)  
  4101e3:	and    esi,edi
  4101e5:	(bad)  
  4101e6:	or     al,al
  4101e8:	shl    ecx,0x32
  4101eb:	xchg   ebp,eax
  4101ec:	enter  0x3316,0x92
  4101f0:	sbb    esp,ebp
  4101f2:	xor    dl,BYTE PTR [ecx*4+0x18a73b90]
  4101f9:	jb     0x4101ab
  4101fb:	adc    BYTE PTR [ecx+ebp*8],al
  4101fe:	xor    cl,BYTE PTR [ebx+0x20f6d185]
  410204:	(bad)  
  410205:	sub    DWORD PTR [esi+ebp*2+0x1432e51b],edi
  41020c:	mov    DWORD PTR [edi+0x45],ebp
  41020f:	sbb    BYTE PTR [eax],al
  410211:	jmp    0xed5898c1
  410216:	xor    dl,BYTE PTR [edx+ecx*4]
  410219:	fnstenv [eax]
  41021b:	inc    esi
  41021c:	std    
  41021d:	stos   DWORD PTR es:[edi],eax
  41021e:	lods   eax,DWORD PTR ds:[esi]
  41021f:	adc    BYTE PTR [ecx],al
  410221:	pop    edi
  410222:	sbb    DWORD PTR [eax],ebx
  410224:	add    cl,ch
  410226:	loope  0x410223
  410228:	mov    ah,BYTE PTR [edi+0x3d]
  41022b:	sbb    BYTE PTR [eax],al
  41022d:	jmp    0xe55898df
  410232:	xor    dl,BYTE PTR [eax+eax*2]
  410235:	jo     0x41024e
  410237:	std    
  410238:	add    ebp,ecx
  41023a:	xor    cl,BYTE PTR [ebx+0x207ed985]
  410240:	(bad)  
  410241:	(bad)  
  410242:	test   DWORD PTR [eax],0xe904
  410248:	xor    cl,BYTE PTR [esi+0x1f00eb0f]
  41024e:	shl    DWORD PTR [ecx+0x45],0x13
  410252:	mov    gs,ebp
  410254:	push   esi
  410255:	and    dh,bh
  410257:	add    BYTE PTR [ebp+0x68868aff],cl
  41025d:	and    dh,bh
  41025f:	call   ecx
  410261:	mov    eax,ds:0x14480416
  410266:	inc    eax
  410267:	mov    DWORD PTR [esi+0x180003fc],eax
  41026d:	xchg   ecx,eax
  41026e:	test   BYTE PTR [eax],dl
  410270:	or     al,0x14
  410272:	add    BYTE PTR [ebx+0x4008e],cl
  410278:	sbb    BYTE PTR [esi-0x19d5fdf2],cl
  41027e:	ror    BYTE PTR [eax+0x1c8e18d8],0xc
  410285:	adc    al,0x0
  410287:	jne    0x4102ba
  410289:	mov    eax,DWORD PTR [eax+edx*1-0x76ffec34]
  410290:	dec    esi
  410291:	sti    
  410292:	add    eax,DWORD PTR [eax]
  410294:	enter  0x8753,0xae
  410298:	aam    0x1f
  41029a:	(bad)  
  41029b:	inc    DWORD PTR [ecx-0x5f]
  41029e:	push   cs
  41029f:	add    al,0xc8
  4102a1:	adc    ecx,DWORD PTR [ebx-0x1e01f7a]
  4102a7:	(bad)  
  4102a8:	call   0xcf01e0
  4102ad:	add    BYTE PTR [edi+ebx*1+0x13dfffe],ah
  4102b4:	mov    eax,DWORD PTR [esi-0x1e068]
  4102ba:	add    DWORD PTR [ecx+0x13980416],esp
  4102c0:	inc    eax
  4102c1:	mov    esi,esi
  4102c3:	push   es
  4102c4:	add    al,0x0
  4102c6:	mov    BYTE PTR [eax+0x135c1084],dl
  4102cc:	add    BYTE PTR [ebx+0x3face],cl
  4102d2:	xor    DWORD PTR ds:0xbf301f52,ebp
  4102d8:	push   ss
  4102d9:	add    al,0x31
  4102db:	sub    eax,0xb7ba18af
  4102e0:	adc    al,BYTE PTR [ecx+esi*1]
  4102e3:	sub    eax,0x3919858b
  4102e8:	add    al,BYTE PTR [eax]
  4102ea:	jno    0x410290
  4102ec:	sbb    ebp,DWORD PTR fs:0xb789022d
  4102f3:	sbb    al,0xfe
  4102f5:	call   DWORD PTR [esi]
  4102f7:	mov    dl,0x7c
  4102f9:	pop    ss
  4102fa:	xor    eax,0x51d0022d
  4102ff:	sub    al,0x84
  410301:	sbb    esi,DWORD PTR ds:0x1875022d
  410307:	mov    dl,0x7c
  410309:	sysexit 
  41030b:	sub    eax,0x14af8902
  410310:	add    BYTE PTR [eax],al
  410312:	add    BYTE PTR [eax],al
  410314:	xor    ebp,ebp
  410316:	mov    ch,BYTE PTR [ebp+0x23935]
  41031c:	mov    eax,0x310413ae
  410321:	sub    eax,0x3119b587
  410326:	add    al,BYTE PTR [eax]
  410328:	loope  0x410340
  41032a:	(bad)  
  41032b:	pop    esp
  41032c:	jae    0x410352
  41032e:	add    cl,BYTE PTR [ebx+0x55fe58ed]
  410334:	push   es
  410335:	mov    dl,0xb7
  410337:	and    eax,DWORD PTR [ecx-0x4e]
  41033a:	xor    bh,BYTE PTR [ecx+esi*4]
  41033d:	sub    al,0x2
  41033f:	add    BYTE PTR [edx],al
  410341:	inc    ecx
  410342:	jg     0x410342
  410344:	xor    eax,0xaf3b0b1a
  410349:	pop    eax
  41034a:	(bad)  
  41034b:	jmp    FWORD PTR [esi+0x13]
  41034e:	(bad)  
  410350:	pop    edi
  410351:	cmp    eax,DWORD PTR [ecx]
  410353:	inc    esp
  410354:	mov    bl,0x33
  410356:	out    dx,al
  410357:	aam    0xb3
  410359:	push   ebx
  41035a:	jecxz  0x410331
  41035c:	jo     0x410369
  41035e:	jmp    0xe538b05b
  410363:	add    esi,DWORD PTR [ecx]
  410365:	test   al,0xf3
  410367:	div    BYTE PTR [esi-0x5dfc16ed]
  41036d:	pop    ss
  41036e:	push   0x25
  410370:	xor    BYTE PTR [ecx],ch
  410372:	clc    
  410373:	neg    BYTE PTR [esi]
  410375:	sbb    ecx,ebp
  410377:	add    eax,DWORD PTR [eax]
  410379:	add    BYTE PTR [ebx+0xef69e13],ah
  41037f:	mov    eax,ds:0x138303e8
  410384:	scas   al,BYTE PTR es:[edi]
  410385:	inc    edx
  410386:	push   ss
  410387:	or     eax,0x11b6809a
  41038c:	cdq    
  41038d:	sub    edx,DWORD PTR [edx+ebx*1]
  410390:	in     eax,0x34
  410392:	jg     0x41031d
  410394:	scas   al,BYTE PTR es:[edi]
  410395:	mov    BYTE PTR [esi],al
  410397:	sub    eax,0x1dd739f4
  41039c:	pop    ebx
  41039d:	mov    edi,0xd5220a26
  4103a2:	fs push edx
  4103a4:	lock add esp,DWORD PTR [esi+0x2c]
  4103a8:	in     al,0x39
  4103aa:	mov    bh,0x1d
  4103ac:	or     eax,0x4718ee81
  4103b1:	inc    edx
  4103b2:	cs adc al,0x3a
  4103b5:	mov    edx,edi
  4103b7:	mul    eax
  4103b9:	into   
  4103ba:	cld    
  4103bb:	mov    BYTE PTR [edi-0x13133380],dl
  4103c1:	add    esi,DWORD PTR [ecx]
  4103c3:	adc    al,0x16
  4103c5:	add    eax,0xe7fff9b5
  4103ca:	xor    dl,BYTE PTR [ecx+eax*4]
  4103cd:	jb     0x410381
  4103cf:	sbb    eax,0xd4a1e9fe
  4103d4:	sbb    ch,0x7e
  4103d7:	add    eax,0x3558da04
  4103dc:	ss push edx
  4103de:	add    BYTE PTR [eax],al
  4103e0:	add    eax,0x1a378a1e
  4103e5:	in     eax,dx
  4103e6:	cli    
  4103e7:	ds add eax,0xf841cd8a
  4103ed:	sbb    bh,dh
  4103ef:	cs mov eax,0xb80123d0
  4103f5:	xchg   BYTE PTR [edi],cl
  4103f7:	in     eax,0x32
  4103f9:	adc    al,0x8a
  4103fb:	and    dh,dh
  4103fd:	adc    eax,DWORD PTR [edx]
  4103ff:	and    BYTE PTR [eax],dh
  410401:	push   ebx
  410402:	pop    esi
  410403:	jno    0x410435
  410405:	sbb    eax,0x1cfed985
  41040a:	(bad)  
  41040b:	pusha  
  41040c:	pushf  
  41040d:	lock add ebp,ecx
  410410:	xor    bh,BYTE PTR [esi+0x156f425c]
  410416:	add    BYTE PTR [edx+0x72],ch
  410419:	push   ds
  41041a:	add    BYTE PTR [edi-0x16ffe7bf],dl
  410420:	mov    cl,0xad
  410422:	or     BYTE PTR [esp+esi*1],bh
  410425:	mov    DWORD PTR [ebp+0x1436d9],eax
  41042b:	pusha  
  41042c:	stos   DWORD PTR es:[edi],eax
  41042d:	add    al,0x4
  41042f:	jmp    0x57c9d866
  410434:	inc    ecx
  410435:	sbb    BYTE PTR [eax],al
  410437:	jmp    0xed509b59
  41043c:	xor    dl,BYTE PTR [ebx+ecx*4]
  41043f:	addr16 cmp eax,0x18
  410445:	add    BYTE PTR [eax-0x3efdf962],bl
  41044b:	loope  0x41040c
  41044d:	mov    BYTE PTR [eax+0x541cbe17],dl
  410453:	adc    BYTE PTR [eax],al
  410455:	jne    0x410488
  410457:	popf   
  410458:	test   BYTE PTR [eax],dl
  41045a:	push   esp
  41045b:	adc    BYTE PTR [eax],al
  41045d:	mov    esi,eax
  41045f:	(bad)  
  410461:	add    BYTE PTR [eax+0x50],bl
  410464:	xchg   DWORD PTR [esi+0x144c],ebp
  41046a:	ror    DWORD PTR [ecx+0x1048040e],0x8b
  410471:	xchg   BYTE PTR [eax],al
  410473:	adc    al,0x0
  410475:	add    BYTE PTR [eax+0x30],ch
  410478:	mov    ebx,edx
  41047a:	dec    ecx
  41047b:	cli    
  41047c:	push   es
  41047d:	or     DWORD PTR [edx+0x12],0x52
  410481:	mov    ebp,DWORD PTR [esi]
  410483:	clc    
  410484:	(bad)  
  410485:	cli    
  410486:	das    
  410487:	out    0x89,eax
  410489:	xchg   al,bl
  41048b:	adc    eax,DWORD PTR [eax]
  41048d:	add    BYTE PTR [eax-0x27fe47f8],dl
  410493:	pop    ss
  410494:	add    BYTE PTR [ecx],al
  410496:	push   esi
  410497:	pop    es
  410498:	add    al,0x0
  41049a:	enter  0x9c98,0x24
  41049e:	les    edx,FWORD PTR [edi]
  4104a0:	add    BYTE PTR [ecx-0x1681d],al
  4104a6:	fsub   DWORD PTR [edx+0x16]
  4104a9:	add    DWORD PTR [eax],0x0
  4104ac:	ins    BYTE PTR es:[edi],dx
  4104ad:	sub    al,0x16
  4104af:	add    dl,BYTE PTR [ebx+0x5b]
  4104b2:	and    bl,BYTE PTR [eax]
  4104b4:	dec    ecx
  4104b5:	fwait
  4104b6:	int3   
  4104b7:	call   0x3eede3
  4104bc:	pop    edi
  4104bd:	inc    esi
  4104be:	pop    ebx
  4104bf:	pop    ebx
  4104c0:	xor    DWORD PTR [edi-0x6],ebp
  4104c3:	push   DWORD PTR [ecx+0x31050286]
  4104c9:	sub    eax,0xf14803b4
  4104ce:	out    0x17,eax
  4104d0:	mov    al,0xa6
  4104d2:	add    bh,BYTE PTR [ebp+0x31]
  4104d5:	sub    eax,0x691803b4
  4104da:	out    0x17,al
  4104dc:	stos   BYTE PTR es:[edi],al
  4104dd:	imul   esp,esi,0x40b60017
  4104e3:	out    0xdd,eax
  4104e5:	(bad)  
  4104e6:	xor    esi,edi
  4104e8:	out    0x72,al
  4104ea:	iret   
  4104eb:	pop    edx
  4104ec:	jae    0x410513
  4104ee:	add    al,bh
  4104f0:	scas   eax,DWORD PTR es:[edi]
  4104f1:	adc    eax,0x2c310008
  4104f6:	add    al,BYTE PTR [eax]
  4104f8:	xor    DWORD PTR [ebp+ebp*1+0x22d317f],ebp
  4104ff:	jae    0x410569
  410501:	scas   al,BYTE PTR es:[edi]
  410502:	scas   al,BYTE PTR es:[edi]
  410503:	and    ebp,DWORD PTR [ecx]
  410505:	xor    DWORD PTR [ebp-0x194cb5bf],esi
  41050b:	add    esi,DWORD PTR [ecx]
  41050d:	sub    eax,0x39b6
  410512:	or     DWORD PTR [edi],esi
  410514:	sub    al,0xfe
  410516:	out    dx,al
  410517:	mov    ch,0x40
  410519:	out    0x32,eax
  41051b:	aaa    
  41051c:	xor    dh,bh
  41051e:	stos   BYTE PTR es:[edi],al
  41051f:	push   0x1b
  410521:	int3   
  410522:	fadd   DWORD PTR [ecx+0x30]
  410525:	mov    DWORD PTR [ebp+0x11],esi
  410528:	or     al,0x8b
  41052a:	mov    bh,0x3c
  41052c:	push   es
  41052d:	add    BYTE PTR [ecx],dh
  41052f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410530:	push   esp
  410531:	and    esi,DWORD PTR [eax]
  410533:	das    
  410534:	push   esp
  410535:	add    DWORD PTR [ebx+0x9],esi
  410538:	jl     0x41053a
  41053a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41053b:	adc    ebp,DWORD PTR [edi+0x14]
  41053e:	xor    eax,0xb47ae914
  410543:	out    dx,eax
  410544:	in     al,dx
  410545:	add    esi,DWORD PTR [ecx]
  410547:	mov    edx,0xb70cd2b
  41054c:	jmp    0xe75b74d5
  410551:	jno    0x41056d
  410553:	adc    cl,ch
  410555:	add    edi,DWORD PTR [edx+ebp*4-0x70b64921]
  41055c:	outs   dx,BYTE PTR ds:[esi]
  41055d:	adc    al,0x35
  41055f:	adc    al,0xe9
  410561:	jp     0x41050f
  410563:	sti    
  410564:	in     al,dx
  410565:	add    esi,DWORD PTR [ecx]
  410567:	aam    0x5f
  410569:	bound  ebp,QWORD PTR [edx]
  41056b:	adc    cl,ch
  41056d:	add    ebp,DWORD PTR [eax+0x3107d891]
  410573:	adc    al,0x62
  410575:	mov    al,BYTE PTR [eax]
  410577:	add    BYTE PTR [esi+0x10],al
  41057a:	jmp    0xeb45c082
  41057f:	push   ebp
  410580:	sbb    al,0x57
  410582:	jo     0x410598
  410584:	xor    BYTE PTR [edx-0xc],bl
  410587:	pop    es
  410588:	xor    DWORD PTR [esp+edx*4],edx
  41058b:	or     bh,BYTE PTR [edx+0x3107d892]
  410591:	adc    al,0x70
  410593:	mov    bl,BYTE PTR [esi]
  410595:	adc    cl,ch
  410597:	add    esi,DWORD PTR [ecx-0x75]
  41059a:	adc    BYTE PTR ds:0xb47ae914,ch
  4105a1:	add    al,0xe5
  4105a3:	add    esi,DWORD PTR [ecx]
  4105a5:	lea    ebp,[esi+0xb]
  4105a8:	xor    eax,0x2653e914
  4105ad:	frstor [esi-0x19]
  4105b0:	xor    dl,BYTE PTR [ecx+ebp*8]
  4105b3:	mov    bh,0x40
  4105b5:	(bad)  
  4105b6:	jmp    FWORD PTR [ecx+0x6a0730f3]
  4105bc:	repnz adc eax,0x1cb89150
  4105c2:	(bad)  
  4105c3:	sahf   
  4105c4:	adc    eax,0x32ed0f87
  4105c9:	adc    al,0x88
  4105cb:	lock sbb dl,BYTE PTR [eax+eax*1]
  4105cf:	jmp    0xd9c71906
  4105d4:	cs adc al,0x0
  4105d7:	pusha  
  4105d8:	shl    ch,0x3
  4105db:	jmp    0x937305e0
  4105e0:	cli    
  4105e1:	imul   esi,DWORD PTR [edx],0x2ada0014
  4105e7:	xchg   ebp,eax
  4105e8:	imul   ecx,DWORD PTR ds:0xb58b163d,0x4e
  4105ef:	add    DWORD PTR [edx+0x72],edx
  4105f2:	lock xor BYTE PTR [ebx+0x40],ah
  4105f6:	add    DWORD PTR [edx],ebx
  4105f8:	pop    esi
  4105f9:	xchg   edi,eax
  4105fa:	(bad)  
  4105fb:	mov    ebp,0x9332e1c1
  410600:	cli    
  410601:	jmp    0x9b411a3d
  410606:	cs jmp 0x41064c
  410609:	int    0x3a
  41060b:	xchg   ebx,eax
  41060c:	cli    
  41060d:	jmp    0x7c3f1ee9
  410612:	fwait
  410613:	jmp    0x410658
  410615:	lds    ebp,FWORD PTR [edx]
  410617:	lea    edx,[ebx-0x33]
  41061a:	cmp    al,dh
  41061c:	mov    bl,BYTE PTR [edi]
  41061e:	dec    edx
  41061f:	fdiv   st(0),st
  410621:	out    0xe,al
  410623:	mov    edx,0x52ea3c5d
  410628:	pop    es
  410629:	jmp    0xe55c6063
  41062e:	xor    dl,BYTE PTR [esi*2-0x7b622f00]
  410635:	adc    ah,cl
  410637:	adc    al,0x0
  410639:	mov    DWORD PTR [esi],ebx
  41063b:	or     BYTE PTR [eax+eax*1],al
  41063e:	cwde   
  41063f:	push   esp
  410640:	xchg   DWORD PTR [esi+0xc340000],ebp
  410646:	add    BYTE PTR [eax],al
  410648:	and    DWORD PTR [edx+0x1498040e],edx
  41064e:	mov    eax,DWORD PTR [esi+0x1080]
  410654:	cwde   
  410655:	das    
  410656:	(bad)  
  410657:	mov    ebp,0x1054
  41065c:	ins    DWORD PTR es:[edi],dx
  41065d:	pop    es
  41065e:	mov    eax,DWORD PTR [esi+0x1088]
  410664:	loope  0x4105f7
  410666:	push   ss
  410667:	add    al,0x48
  410669:	adc    al,0x40
  41066b:	mov    DWORD PTR [esi+0x58000403],esi
  410671:	xchg   edi,eax
  410672:	test   BYTE PTR [eax],dl
  410674:	dec    esp
  410675:	adc    al,0x0
  410677:	mov    ecx,esi
  410679:	pop    es
  41067a:	add    al,0x0
  41067c:	sbb    ah,al
  41067e:	push   ds
  41067f:	mov    edi,DWORD PTR [edi+ebp*1-0x295cadea]
  410686:	out    0xd4,al
  410688:	push   eax
  410689:	out    0xfd,eax
  41068b:	pop    edi
  41068c:	mov    BYTE PTR [ecx+ebx*2-0x3e],0x10
  410691:	adc    al,0x8b
  410693:	inc    esp
  410694:	in     al,dx
  410695:	jge    0xffbd0f2b
  41069b:	jmp    DWORD PTR [ebx-0x27fbfd80]
  4106a1:	adc    esi,DWORD PTR [esi+0x19]
  4106a4:	arpl   WORD PTR [eax+0x40a],bx
  4106aa:	enter  0x3b13,0xc1
  4106ae:	xor    DWORD PTR [edi+0x6bf02b08],esi
  4106b4:	push   es
  4106b5:	add    BYTE PTR [edx],cl
  4106b7:	ins    BYTE PTR es:[edi],dx
  4106b8:	pop    es
  4106b9:	add    BYTE PTR [ecx+0x2c],cl
  4106bc:	add    al,dl
  4106be:	xor    eax,0x73bff12d
  4106c3:	xor    DWORD PTR [edx],eax
  4106c5:	or     DWORD PTR [ebp-0x55ab2ee3],0x9
  4106cc:	call   0x497aedf0
  4106d1:	mov    al,BYTE PTR [eax+0x555b7cde]
  4106d7:	cmp    eax,0x354d5b7b
  4106dc:	jmp    0x41068b
  4106de:	cmp    DWORD PTR [ecx],ebp
  4106e0:	add    al,BYTE PTR [eax]
  4106e2:	ss stos BYTE PTR es:[edi],al
  4106e4:	popa   
  4106e5:	call   FWORD PTR [esi+0x2d]
  4106e8:	sbb    DWORD PTR [edx],ecx
  4106ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4106eb:	xchg   ecx,eax
  4106ec:	out    0xff,al
  4106ee:	dec    esi
  4106ef:	sub    eax,0x10cd8d02
  4106f4:	add    al,0x8b
  4106f6:	mov    bh,0x29
  4106f8:	push   es
  4106f9:	add    BYTE PTR [ecx],dh
  4106fb:	test   al,0x7a
  4106fd:	call   DWORD PTR [esi-0x6c4fdd4]
  410703:	pop    esi
  410704:	adc    eax,0x620af8b
  410709:	add    BYTE PTR [ecx],dh
  41070b:	xor    al,BYTE PTR [ebx+0x75]
  41070e:	add    BYTE PTR [eax],al
  410710:	xor    eax,0x3aea4352
  410715:	push   edx
  410716:	inc    ebx
  410717:	add    al,0x31
  410719:	test   DWORD PTR [ebx],eax
  41071b:	add    BYTE PTR [edx],cl
  41071d:	sub    esi,ecx
  41071f:	mov    edi,0x3faaeba
  410724:	xor    DWORD PTR ds:0x1440b5fd,ebp
  41072a:	div    BYTE PTR [ebp+0x69]
  41072d:	adc    eax,0xfa4d872
  410732:	bound  eax,QWORD PTR [eax]
  410734:	mov    ebx,0x2a7b0e8a
  410739:	(bad)  
  41073a:	jno    0x4106c2
  41073c:	cs adc cl,ch
  41073f:	add    edi,DWORD PTR [esi]
  410741:	pop    esi
  410742:	fdivr  st,st(4)
  410744:	(bad)  
  410746:	out    0x78,eax
  410748:	jmp    0xe50f:0xbc78ec7d
  41074f:	add    esi,DWORD PTR [ecx]
  410751:	(bad)  
  410752:	cld    
  410753:	or     cl,0x14
  410756:	jmp    0x7756385e
  41075b:	or     BYTE PTR ds:0xbf02e914,ch
  410761:	or     ebp,ebp
  410763:	add    esi,DWORD PTR [ecx]
  410765:	mov    esp,DWORD PTR [esi+0x8]
  410768:	xor    eax,0x6e78e914
  41076d:	jmp    0x82e9:0x1435006e
  410774:	add    BYTE PTR [eax],al
  410776:	dec    ecx
  410777:	adc    eax,ecx
  410779:	add    dh,BYTE PTR [ecx]
  41077b:	sahf   
  41077c:	in     eax,dx
  41077d:	mov    ebx,0x7ec8da9
  410782:	xor    DWORD PTR [eax+esi*8],edx
  410785:	pop    ebp
  410786:	cs adc cl,ch
  410789:	add    ebp,DWORD PTR [esi]
  41078b:	xchg   edx,eax
  41078c:	xchg   edx,eax
  41078d:	sub    al,0x17
  41078f:	push   ss
  410790:	jno    0x41075a
  410792:	push   edx
  410793:	in     al,0x52
  410795:	add    al,0x8e
  410797:	adc    ebp,ecx
  410799:	call   0x7b2fa68e
  41079e:	(bad)  
  41079f:	lock mov eax,0xff913918
  4107a5:	lock xor eax,DWORD PTR ds:0x14322386
  4107ac:	add    dh,dh
  4107ae:	pop    esp
  4107af:	sar    bh,1
  4107b1:	in     eax,dx
  4107b2:	inc    esp
  4107b3:	enter  0x6200,0xee
  4107b7:	pop    DWORD PTR [ebx]
  4107b9:	(bad)  
  4107ba:	into   
  4107bb:	lea    edi,[edx]
  4107bd:	ret    0x91b5
  4107c0:	mov    dl,0xe8
  4107c2:	xor    dl,BYTE PTR [ebx+ecx*4]
  4107c5:	addr16 xchg edx,eax
  4107c7:	adc    DWORD PTR [eax],eax
  4107c9:	jmp    0xae5018ed
  4107ce:	outs   dx,BYTE PTR ds:[esi]
  4107cf:	icebp  
  4107d0:	sbb    ebp,ecx
  4107d2:	mov    dl,BYTE PTR ds:0xa2efd2fe
  4107d8:	cmp    DWORD PTR [edx+0x0],esp
  4107db:	add    BYTE PTR [ebp-0x26],cl
  4107de:	cli    
  4107df:	std    
  4107e0:	jle    0x41076a
  4107e2:	xchg   cl,ch
  4107e4:	retf   0x14
  4107e7:	mov    dl,0xac
  4107e9:	adc    DWORD PTR [ecx+ebp*8],eax
  4107ec:	xor    bl,BYTE PTR [esi+0x9ac7217]
  4107f2:	add    al,0xe9
  4107f4:	xor    bl,cl
  4107f6:	neg    edi
  4107f8:	cs jmp 0xea7f4af5
  4107fe:	imul   DWORD PTR [eax-0x13]
  410801:	adc    al,0x66
  410803:	call   0xfa42313a
  410808:	push   ebp
  410809:	mov    al,BYTE PTR ds:0x8c5d0e62
  41080f:	in     eax,dx
  410810:	adc    eax,0x4a9ac4da
  410815:	fcom   QWORD PTR [ebx-0x33]
  410818:	out    0x9e,al
  41081a:	add    esp,DWORD PTR [eax-0x1a]
  41081d:	lock sub eax,DWORD PTR [eax]
  410820:	repz jmp 0x410830
  410823:	test   dl,cl
  410825:	adc    DWORD PTR [eax],eax
  410827:	add    BYTE PTR [ebp-0x74],cl
  41082a:	(bad)  
  41082b:	dec    eax
  41082d:	adc    BYTE PTR [ebx-0x7827bc33],cl
  410833:	dec    esp
  410834:	xor    al,0x4
  410836:	cmp    ecx,DWORD PTR [esp+esi*1+0x3c]
  41083a:	or     eax,0xf2287
  41083f:	add    BYTE PTR [eax],al
  410841:	add    BYTE PTR [ebx+0x5c],al
  410844:	and    dl,BYTE PTR [eax]
  410846:	and    al,BYTE PTR [ecx+eax*1]
  410849:	cmp    al,BYTE PTR [ebx+ebx*1-0x2]
  41084d:	mov    bh,BYTE PTR [esp+esi*1]
  410850:	adc    bh,BYTE PTR [ebx+0x108a]
  410856:	and    al,0x1c
  410858:	cmp    DWORD PTR [esi-0x1eb8c],ecx
  41085e:	pop    edi
  41085f:	xchg   ebx,eax
  410860:	enter  0x8800,0x10
  410864:	mov    edx,DWORD PTR [esp+esi*2+0x20]
  410868:	cmp    edx,ebx
  41086a:	imul   ebp,DWORD PTR [edi],0xffffff8b
  41086d:	dec    ebp
  41086e:	dec    edx
  41086f:	xchg   ebp,eax
  410870:	out    0x2b,al
  410872:	jl     0x4108a8
  410874:	mov    dl,BYTE PTR es:[ebx+ebx*1+0x635939fe]
  41087c:	add    al,0x43
  41087e:	mov    DWORD PTR ds:0x94fa72d8,esp
  410884:	dec    edx
  410885:	and    al,0x4
  410887:	xchg   ebx,eax
  410888:	imul   esp,DWORD PTR [eax+esi*1],0x940fd803
  41088f:	cmp    ebp,edi
  410891:	dec    DWORD PTR [eax]
  410893:	add    ebx,DWORD PTR [edx+0x24]
  410896:	or     dh,al
  410898:	inc    esi
  410899:	push   ebx
  41089a:	xor    esp,ecx
  41089c:	jle    0x41086b
  41089e:	or     DWORD PTR [eax+0x2e],esi
  4108a1:	(bad)  
  4108a2:	test   BYTE PTR [esi+0x23b8],0x41
  4108a9:	xchg   al,dl
  4108ab:	and    ecx,DWORD PTR [ecx-0x54]
  4108ae:	ror    DWORD PTR [edx-0x18e38911],cl
  4108b4:	mov    dh,0xf7
  4108b6:	sub    bh,dh
  4108b8:	sbb    ah,ch
  4108ba:	jle    0x410907
  4108bc:	or     eax,0x79ed0711
  4108c1:	xor    bl,BYTE PTR [eax]
  4108c3:	ret    
  4108c4:	rcr    BYTE PTR [bx+si],cl
  4108c7:	mov    bl,BYTE PTR ds:0xabc0dc19
  4108cd:	(bad)  
  4108ce:	jle    0x410891
  4108d0:	jo     0x4108a7
  4108d2:	or     al,BYTE PTR [ebx]
  4108d4:	jae    0x4108d4
  4108d6:	mov    ebp,0x49f62123
  4108db:	jne    0x41090c
  4108dd:	je     0x410894
  4108df:	and    ebx,DWORD PTR [ecx]
  4108e1:	xchg   esi,eax
  4108e2:	mov    ebx,0xfde1a73a
  4108e7:	jmp    FWORD PTR [esi+0x8]
  4108ea:	rcl    BYTE PTR [edx+0x0],0x76
  4108ee:	aaa    
  4108ef:	out    0xd2,eax
  4108f1:	xchg   BYTE PTR [edx],ch
  4108f3:	(bad)  
  4108f4:	stos   BYTE PTR es:[edi],al
  4108f5:	rcr    ebp,1
  4108f7:	bt     DWORD PTR [ebp+0x7e],0x43
  4108fc:	or     eax,0xaa4fd405
  410901:	xor    ebx,DWORD PTR [ecx]
  410903:	dec    edi
  410904:	cmp    ebx,DWORD PTR [edx+0x2a]
  410907:	mov    bh,cl
  410909:	and    eax,0x8a37
  41090e:	xchg   ebp,eax
  41090f:	and    esp,ebx
  410911:	mov    bh,0xca
  410913:	xchg   esi,eax
  410914:	pop    ebx
  410915:	sub    DWORD PTR [esi],ebx
  410917:	adc    al,0x10
  410919:	jle    0x410913
  41091b:	aam    0x10
  41091d:	or     dh,BYTE PTR [edx]
  41091f:	fsubp  st(2),st
  410921:	cmp    esp,DWORD PTR ds:[eax-0x3d]
  410925:	adc    eax,DWORD PTR [ebx+0x12cf7220]
  41092b:	sub    BYTE PTR [eax-0x31],dh
  41092e:	adc    ch,BYTE PTR [eax+eiz*2]
  410931:	(bad)  
  410932:	adc    ah,BYTE PTR [esp+ebx*2]
  410935:	adc    dh,0x7a
  410938:	call   0xe3db1340
  41093d:	inc    esi
  41093f:	adc    bl,BYTE PTR [esi+0xc]
  410942:	stos   BYTE PTR es:[edi],al
  410943:	cdq    
  410944:	(bad)  
  410946:	mov    dh,0x12
  410948:	add    ebp,DWORD PTR [esp]
  41094b:	sbb    BYTE PTR [edx],dl
  41094d:	sub    al,0x9b
  41094f:	pop    ds
  410950:	add    ch,BYTE PTR [ecx+esi*4]
  410953:	(bad)  
  410955:	fwait
  410956:	xor    DWORD PTR [edx+edx*4],edx
  410959:	push   es
  41095a:	inc    edx
  41095b:	adc    esi,DWORD PTR [ebx-0x6]
  41095e:	mov    ebx,0xb47d504f
  410963:	xor    esp,ebx
  410965:	add    esi,DWORD PTR [ecx]
  410967:	pop    ss
  410968:	scas   al,BYTE PTR es:[edi]
  410969:	test   edx,ebx
  41096b:	aaa    
  41096c:	fild   DWORD PTR [edx]
  41096e:	frstor ds:0x296c
  410974:	das    
  410975:	cdq    
  410976:	sub    eax,0x5312572a
  41097b:	cld    
  41097c:	mov    ecx,0xb80c035f
  410981:	outs   dx,DWORD PTR ds:[esi]
  410982:	or     edx,DWORD PTR [edx+ebp*4]
  410985:	push   edi
  410986:	add    esp,eax
  410988:	stos   DWORD PTR es:[edi],eax
  410989:	or     edx,DWORD PTR [si]
  41098c:	mov    edx,0x860c0360
  410991:	jb     0x410993
  410993:	xchg   esp,eax
  410994:	fwait
  410995:	popa   
  410996:	add    al,0x60
  410998:	adc    eax,0x252d816f
  41099d:	(bad)  
  41099e:	adc    cl,ch
  4109a0:	lods   eax,DWORD PTR ds:[esi]
  4109a1:	std    
  4109a2:	cmp    BYTE PTR [edx-0x37],ch
  4109a5:	xor    eax,0x9ee0e944
  4109aa:	out    dx,eax
  4109ab:	jl     0x410998
  4109ad:	inc    esi
  4109ae:	rcr    BYTE PTR [edi+0x2b38d5ad],0x2d
  4109b5:	adc    al,0x89
  4109b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4109b8:	not    BYTE PTR [ecx-0x7d]
  4109bb:	test   eax,0xb1811b9f
  4109c0:	sbb    DWORD PTR [edi-0x7f],ebp
  4109c3:	lods   eax,DWORD PTR ds:[esi]
  4109c4:	retf   0x18d3
  4109c7:	jmp    0x2d656701
  4109cc:	fdiv   QWORD PTR cs:[edi+ecx*8+0x25]
  4109d1:	gs and al,0x25
  4109d4:	push   ds
  4109d5:	jecxz  0x410a4b
  4109d7:	mov    DWORD PTR [eax],0x14971b00
  4109dd:	in     eax,dx
  4109de:	xor    dl,BYTE PTR [eax+ecx*2]
  4109e1:	jo     0x410993
  4109e3:	xor    DWORD PTR [ecx+ebp*8],eax
  4109e6:	xor    bl,BYTE PTR [ebx+0x1176f98e]
  4109ec:	inc    BYTE PTR [ecx+0x48]
  4109ef:	push   cs
  4109f0:	out    dx,eax
  4109f1:	push   edx
  4109f2:	pop    ebp
  4109f3:	fcom   QWORD PTR [ebp-0x1a]
  4109f6:	loopne 0x4109c3
  4109f8:	add    cl,bl
  4109fa:	jae    0x410a0d
  4109fc:	shr    DWORD PTR [ecx],1
  4109fe:	inc    ebp
  4109ff:	fimul  DWORD PTR ds:0x1013db97
  410a05:	test   al,0x32
  410a07:	jecxz  0x4109c9
  410a09:	sbb    dh,al
  410a0b:	and    DWORD PTR [esi+0x1016b100],esi
  410a11:	inc    ecx
  410a12:	sbb    BYTE PTR [esi-0x43],ah
  410a15:	xor    ecx,DWORD PTR [edi+0xc]
  410a18:	mov    ah,0xb9
  410a1a:	or     esp,DWORD PTR ds:0x5549003f
  410a20:	add    cl,0xc
  410a23:	or     bh,al
  410a25:	and    DWORD PTR [ecx],0x8ffff15
  410a2b:	(bad)  
  410a2c:	enter  0x1885,0xc
  410a30:	test   DWORD PTR [ebx+0x530014e1],edi
  410a36:	push   ecx
  410a37:	and    ecx,DWORD PTR [ebx-0x406a33b2]
  410a3d:	sbb    BYTE PTR [eax],al
  410a3f:	add    BYTE PTR [eax-0x2740ffee],bh
  410a45:	pop    ss
  410a46:	add    BYTE PTR [eax],al
  410a48:	push   ebp
  410a49:	loopne 0x410a4b
  410a4b:	push   ebp
  410a4c:	push   ecx
  410a4d:	daa    
  410a4e:	xor    eax,eax
  410a50:	popf   
  410a51:	adc    al,0x0
  410a53:	add    BYTE PTR [eax+0x4cc7288d],bl
  410a59:	adc    eax,DWORD PTR [eax]
  410a5b:	add    BYTE PTR [eax-0x277cffec],cl
  410a61:	adc    edi,DWORD PTR [ebx]
  410a63:	add    BYTE PTR [esp+edx*1-0x694b8e00],cl
  410a6a:	mov    edi,0x148c00
  410a6f:	sbb    DWORD PTR [ecx+0x5dfb2913],0x5e
  410a76:	mov    cl,BYTE PTR [esi-0x1ef84]
  410a7c:	shl    DWORD PTR [ecx],cl
  410a7e:	or     eax,0x24838ed7
  410a84:	dec    esp
  410a85:	adc    al,0x0
  410a87:	mov    DWORD PTR [ecx],esi
  410a89:	jns    0x410a87
  410a8b:	add    esi,DWORD PTR [ecx]
  410a8d:	sti    
  410a8e:	jl     0x410a2d
  410a90:	xor    eax,0xb8000201
  410a95:	(bad)  
  410a96:	clc    
  410a97:	add    esi,DWORD PTR [ecx]
  410a99:	std    
  410a9a:	jl     0x410ad5
  410a9c:	stos   BYTE PTR es:[edi],al
  410a9d:	outs   dx,DWORD PTR ds:[esi]
  410a9e:	adc    BYTE PTR [ecx+esi*1],al
  410aa1:	std    
  410aa2:	jp     0x410a39
  410aa4:	add    BYTE PTR [eax],al
  410aa6:	and    ecx,edi
  410aa8:	add    DWORD PTR [eax],eax
  410aaa:	test   al,0x67
  410aac:	fadd   QWORD PTR [ebx]
  410aae:	xor    ebp,edi
  410ab0:	ja     0x410aba
  410ab2:	mov    eax,0xba1bddc1
  410ab7:	mov    ecx,0xf3a953dd
  410abc:	add    al,0x9e
  410abe:	cmp    eax,0x300001f9
  410ac3:	xchg   edi,eax
  410ac4:	adc    DWORD PTR [ecx+esi*1],eax
  410ac7:	std    
  410ac8:	mov    ecx,0x14213d88
  410acd:	mov    DWORD PTR ds:0xcf890c19,esi
  410ad3:	stc    
  410ad4:	std    
  410ad5:	jmp    DWORD PTR [esi-0x6dc3a7c]
  410adb:	add    DWORD PTR [ebx+0xe],eax
  410ade:	scas   eax,DWORD PTR es:[edi]
  410adf:	retf   0xfffe
  410ae2:	mov    cs,WORD PTR [eax-0x2790076]
  410ae8:	add    DWORD PTR [ebx-0x7b3a1f0b],ecx
  410aee:	jno    0x410b19
  410af0:	jmp    0xb841:0x9e0fd8a
  410af7:	inc    ecx
  410af8:	loopne 0x410b11
  410afa:	mov    ch,0xb4
  410afc:	mov    al,0x2c
  410afe:	stos   BYTE PTR es:[edi],al
  410aff:	sub    eax,esp
  410b01:	pop    edi
  410b02:	mov    edx,0x2d137514
  410b07:	adc    al,0xe7
  410b09:	fiadd  DWORD PTR [eax]
  410b0b:	add    dl,ch
  410b0d:	aaa    
  410b0e:	mov    bh,0xd1
  410b10:	stos   DWORD PTR es:[edi],eax
  410b11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b12:	repz jmp FWORD PTR [esi]
  410b15:	(bad)  
  410b17:	rcl    BYTE PTR [edx+0x64],1
  410b1a:	cwde   
  410b1b:	jp     0x410b87
  410b1d:	cmp    BYTE PTR [ebx+0x180f81d1],dl
  410b23:	xor    dl,0x23
  410b26:	ins    BYTE PTR es:[edi],dx
  410b27:	inc    ebx
  410b28:	aaa    
  410b29:	cwde   
  410b2a:	xchg   esp,eax
  410b2b:	(bad)  
  410b2c:	dec    BYTE PTR [esi]
  410b2e:	rol    edi,cl
  410b30:	push   edx
  410b31:	xor    BYTE PTR [ecx+edx*1-0x40348046],dl
  410b38:	mov    ebx,0xa9c3c367
  410b3d:	jg     0x410b0a
  410b3f:	xlat   BYTE PTR ds:[ebx]
  410b40:	test   eax,0xdbdbc367
  410b45:	cs jb  0x410b08
  410b48:	adc    ch,BYTE PTR [eax+0x72]
  410b4b:	jbe    0x410b6f
  410b4d:	sbb    bh,ah
  410b4f:	add    ecx,DWORD PTR [edx]
  410b51:	shl    DWORD PTR [edi],cl
  410b53:	rol    DWORD PTR [ecx],1
  410b55:	mov    eax,ds:0x6262e01b
  410b5a:	jb     0x410b92
  410b5c:	xchg   esi,eax
  410b5d:	xchg   edx,eax
  410b5e:	mov    dl,0x25
  410b60:	xchg   edi,eax
  410b61:	call   0x2a4:0x935ae03b
  410b68:	mov    al,ss:0xe7eff45
  410b6e:	arpl   WORD PTR [esi+0x0],di
  410b71:	add    BYTE PTR [edx+0x18],dl
  410b74:	out    0x3,eax
  410b76:	jbe    0x410bcf
  410b78:	retf   
  410b79:	rdtsc  
  410b7b:	adc    al,0xe7
  410b7d:	add    ebx,DWORD PTR [eax]
  410b7f:	pop    eax
  410b80:	add    ch,cl
  410b82:	jp     0x410b0b
  410b84:	bound  ebp,QWORD PTR [edx+0x14]
  410b87:	adc    al,0xd
  410b89:	outs   dx,DWORD PTR ds:[esi]
  410b8a:	arpl   WORD PTR [ecx],dx
  410b8c:	add    cl,ch
  410b8e:	dec    ebx
  410b8f:	push   edx
  410b90:	and    al,0x11
  410b92:	cmp    al,0x92
  410b94:	dec    eax
  410b95:	jmp    0x1e06:0xad891432
  410b9c:	push   ebp
  410b9d:	adc    dh,BYTE PTR [edx+eiz*2+0x50]
  410ba1:	bound  ebx,QWORD PTR [edi-0xb]
  410ba4:	loop   0x410bdb
  410ba6:	push   esp
  410ba7:	push   cs
  410ba8:	mov    dh,BYTE PTR [ebp-0x47aaba1a]
  410bae:	jns    0x410b8f
  410bb0:	mov    DWORD PTR [ecx],esi
  410bb2:	adc    eax,0x140ef5c1
  410bb7:	dec    edx
  410bb8:	shl    esi,0x5f
  410bbb:	xor    BYTE PTR [ecx],al
  410bbd:	jmp    0xcd85a4f4
  410bc2:	retf   0x50
  410bc5:	in     al,0x32
  410bc7:	adc    al,0x7c
  410bc9:	lock mov cl,0xe
  410bcc:	add    ebp,esi
  410bce:	ds sbb al,0x1
  410bd1:	jmp    0x4c415b08
  410bd6:	add    BYTE PTR [eax],al
  410bd8:	xor    eax,0xb1f07c14
  410bdd:	push   cs
  410bde:	add    ch,dh
  410be0:	push   ds
  410be1:	or     al,0x3
  410be3:	jmp    0x59da51a
  410be8:	jge    0x410b84
  410bea:	inc    esp
  410beb:	int    0x76
  410bed:	call   0xc2fe:0xd7ef596
  410bf4:	icebp  
  410bf5:	fwait
  410bf6:	inc    esp
  410bf7:	lds    edx,FWORD PTR [edx+0x55]
  410bfa:	push   eax
  410bfb:	add    ch,bl
  410bfd:	retf   
  410bfe:	add    BYTE PTR [ecx+0xa],dl
  410c01:	loop   0x410b8f
  410c03:	inc    esp
  410c04:	lds    ecx,FWORD PTR fs:[ebp-0x75]
  410c08:	scas   al,BYTE PTR es:[edi]
  410c09:	sub    ecx,ebx
  410c0b:	cli    
  410c0c:	iret   
  410c0d:	aaa    
  410c0e:	mov    cl,BYTE PTR [esp+esi*1-0x10]
  410c12:	cmp    BYTE PTR [esp-0x28],cl
  410c16:	mov    WORD PTR [ebx+0x19],es
  410c19:	mov    al,BYTE PTR [ecx+0x24]
  410c1c:	or     al,0xde
  410c1e:	jns    0x410c59
  410c20:	mov    ds:0x4e8b4f62,eax
  410c25:	sub    DWORD PTR [ecx-0x9],eax
  410c28:	pop    edi
  410c29:	cmp    BYTE PTR [edx-0x772f0bb4],cl
  410c2f:	inc    esp
  410c30:	hlt    
  410c31:	in     al,dx
  410c32:	mov    al,BYTE PTR [esp+eiz*8-0x34]
  410c36:	dec    ebp
  410c37:	push   ecx
  410c38:	push   ebx
  410c39:	inc    edi
  410c3a:	in     eax,0x2f
  410c3c:	add    BYTE PTR [eax],al
  410c3e:	out    0x30,eax
  410c40:	dec    BYTE PTR [ebx+0x2b21ec8c]
  410c46:	adc    BYTE PTR [edi+eax*8],dl
  410c49:	mov    eax,0x38e28681
  410c4e:	out    0x3e,eax
  410c50:	sar    dl,1
  410c52:	inc    ebx
  410c53:	push   esi
  410c54:	shr    al,0xbf
  410c57:	adc    eax,0x9d48ebc2
  410c5c:	dec    ecx
  410c5d:	and    al,0x3c
  410c5f:	(bad)  
  410c60:	mov    cl,dh
  410c62:	sbb    BYTE PTR [esi],0xf5
  410c65:	(bad)  
  410c66:	fistp  WORD PTR [ecx+edx*2-0x2a62abdc]
  410c6d:	mov    edx,DWORD PTR [esp+edi*8+0x3d]
  410c71:	push   edx
  410c72:	cmp    BYTE PTR [ebp-0x52ce1735],bl
  410c78:	sbb    bh,dh
  410c7a:	outs   dx,BYTE PTR ds:[esi]
  410c7b:	sar    DWORD PTR [ecx],1
  410c7d:	mov    dh,BYTE PTR [edx-0x7f]
  410c80:	shl    BYTE PTR [ebx],0xf9
  410c83:	jae    0x410c0a
  410c85:	loope  0x410cb9
  410c87:	cli    
  410c88:	inc    ebx
  410c89:	ror    BYTE PTR [ecx-0x8],0x6
  410c8d:	inc    esp
  410c8e:	or     eax,0xbce7debf
  410c93:	add    cl,BYTE PTR [ebx+0x43]
  410c96:	or     eax,0x3100050f
  410c9b:	std    
  410c9c:	mov    dh,bh
  410c9e:	lahf   
  410c9f:	adc    eax,0x6bdb
  410ca4:	push   ebp
  410ca5:	mov    cl,0x9d
  410ca7:	das    
  410ca8:	stos   BYTE PTR es:[edi],al
  410ca9:	mov    cl,0xe5
  410cab:	daa    
  410cac:	lods   al,BYTE PTR fs:[esi]
  410cae:	mov    cs,ebp
  410cb0:	sbb    DWORD PTR [edx+ebx*1-0x2],esi
  410cb4:	inc    BYTE PTR [esi+0x766d23b8]
  410cba:	cmp    al,0x8a
  410cbc:	jne    0x410c8f
  410cbe:	rcl    DWORD PTR [ecx-0x7f],0x86
  410cc2:	push   edx
  410cc3:	out    0x8a,eax
  410cc5:	add    esp,DWORD PTR [ebx]
  410cc7:	(bad)  
  410cc8:	sbb    bh,BYTE PTR [esi]
  410cca:	lea    ebx,[ebx+0x15]
  410ccd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410cce:	mov    al,ds:0xe839ee07
  410cd3:	adc    esi,DWORD PTR [eax]
  410cd5:	std    
  410cd6:	add    DWORD PTR [eax],eax
  410cd8:	lods   al,BYTE PTR ds:[esi]
  410cd9:	loop   0x410c73
  410cdb:	dec    esp
  410cdc:	push   0x2443e849
  410ce1:	cmp    cl,BYTE PTR [ebp+0x1f1458d]
  410ce7:	add    BYTE PTR [ebx],cl
  410ce9:	cld    
  410cea:	mov    dh,0x50
  410cec:	mov    edx,0x829e29ab
  410cf1:	adc    al,0xa6
  410cf3:	and    ch,BYTE PTR [ebx-0x54383ca0]
  410cf9:	in     al,dx
  410cfa:	(bad)  
  410cfb:	(bad)  
  410cfc:	adc    dl,BYTE PTR [ecx+edi*1-0x4c]
  410d00:	mov    ebx,0x64b08fda
  410d05:	or     edi,DWORD PTR [edi-0x72]
  410d08:	add    BYTE PTR [eax],al
  410d0a:	jmp    0x9d9e:0xe1b8bf2f
  410d11:	nop
  410d12:	jmp    0x5f01:0xda2be82b
  410d19:	and    bh,bl
  410d1b:	jmp    0x410d7f
  410d1d:	mov    edi,0xdcd6c52
  410d22:	out    dx,al
  410d23:	dec    edi
  410d24:	or     edi,eax
  410d26:	push   ds
  410d27:	or     ebp,eax
  410d29:	add    ecx,DWORD PTR [edx]
  410d2b:	pop    ds
  410d2c:	push   0xffffff9f
  410d2e:	push   edx
  410d2f:	and    bh,ah
  410d31:	adc    ch,BYTE PTR [ecx+ebx*8-0x68cefc16]
  410d38:	sbb    al,0x5
  410d3a:	es call 0xb762:0x14310442
  410d42:	adc    dh,BYTE PTR [edx+esi*2]
  410d45:	mov    DWORD PTR [edx+0x10],eax
  410d48:	out    0x3,eax
  410d4a:	mov    dl,0xd5
  410d4c:	cmc    
  410d4d:	mov    ah,0xb3
  410d4f:	(bad)  
  410d50:	jmp    0xea14c10b
  410d55:	mov    bl,0xad
  410d57:	push   edi
  410d58:	add    esp,eax
  410d5a:	popa   
  410d5b:	lahf   
  410d5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d5d:	sub    al,0xbe
  410d5f:	or     al,0xcf
  410d61:	and    DWORD PTR [ebx+0x5bd40b4f],edi
  410d67:	push   eax
  410d68:	add    ebp,esp
  410d6a:	stos   DWORD PTR es:[edi],eax
  410d6b:	pop    edi
  410d6c:	add    BYTE PTR ds:0x64690000,cl
  410d72:	mov    DWORD PTR [edi-0x6ede7143],ebx
  410d78:	push   ds
  410d79:	add    dh,bh
  410d7b:	sahf   
  410d7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d7d:	loop   0x410d08
  410d7f:	sub    eax,0x39533259
  410d84:	mov    ah,0xd8
  410d86:	call   0xfe4b5422
  410d8b:	shr    ch,cl
  410d8d:	stos   DWORD PTR es:[edi],eax
  410d8e:	or     DWORD PTR [ebx+0x62c21734],0xebf7d3f5
  410d98:	or     eax,0x1e43e83d
  410d9d:	or     bh,dh
  410d9f:	bound  ebp,QWORD PTR [ebp-0x62]
  410da2:	inc    esp
  410da3:	add    eax,0x72506115
  410da8:	xor    ecx,0xffffffc9
  410dab:	xor    al,0x50
  410dad:	or     cl,BYTE PTR [edx+0x1df1c21]
  410db3:	and    BYTE PTR [ebp-0x4],ah
  410db6:	mov    ds:0xe8030372,al
  410dbb:	cmp    BYTE PTR [edi],dl
  410dbd:	sahf   
  410dbe:	retf   0x1a28
  410dc1:	sub    al,BYTE PTR [ecx]
  410dc3:	and    esi,DWORD PTR [ebp+edx*2-0x23ca42dc]
  410dca:	cmp    DWORD PTR [eax],edx
  410dcc:	mov    dh,0x11
  410dce:	lds    ebp,FWORD PTR [ebp-0x1700da2a]
  410dd4:	add    BYTE PTR [eax],al
  410dd6:	xor    dl,BYTE PTR [ebx+eax*4]
  410dd9:	out    0x98,al
  410ddb:	xor    DWORD PTR [ecx],edi
  410ddd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410dde:	xchg   esi,eax
  410ddf:	xor    eax,0x39993d89
  410de4:	push   eax
  410de5:	cmp    esi,DWORD PTR [edi+edx*8+0x222600e8]
  410dec:	(bad)  
  410ded:	jmp    DWORD PTR [ebx]
  410def:	dec    ebp
  410df0:	mov    al,BYTE PTR [esp+edi*1-0x8]
  410df4:	push   esp
  410df5:	push   eax
  410df6:	adc    esp,DWORD PTR [ebx-0x1b]
  410df9:	jg     0x410d98
  410dfb:	xor    al,0xfe
  410dfd:	cmp    esi,DWORD PTR [eax+0x24]
  410e00:	mov    WORD PTR [edx],es
  410e02:	pop    ebx
  410e03:	adc    eax,0xfc348300
  410e08:	adc    DWORD PTR [eax],eax
  410e0a:	addr16 xchg edx,eax
  410e0c:	test   BYTE PTR [edx],0x48
  410e0f:	adc    eax,0x245bfd81
  410e14:	mov    ss,esp
  410e16:	pop    eax
  410e17:	adc    eax,0xf1848b00
  410e1c:	sbb    eax,0x55f17c8b
  410e21:	mov    ebx,DWORD PTR [esi+0x18000201]
  410e27:	nop
  410e28:	sar    ch,0xb9
  410e2b:	(bad)  
  410e2c:	mov    edi,0xbd8fba03
  410e31:	add    ebp,DWORD PTR [eax+0x14244999]
  410e37:	(bad)  
  410e38:	mov    cl,dh
  410e3a:	add    BYTE PTR [eax],al
  410e3c:	and    BYTE PTR [esi-0xb],ch
  410e3f:	call   DWORD PTR [edi]
  410e41:	cwde   
  410e42:	inc    ecx
  410e43:	and    al,0x8
  410e45:	cwde   
  410e46:	push   ecx
  410e47:	and    al,0xfc
  410e49:	xchg   edi,eax
  410e4a:	pop    ecx
  410e4b:	and    al,0x0
  410e4d:	call   0x63a46114
  410e52:	dec    ebp
  410e53:	jl     0x410e52
  410e55:	cmp    al,0x21
  410e57:	cmc    
  410e58:	xlat   BYTE PTR ds:[ebx]
  410e59:	sub    BYTE PTR [ebx+edx*2+0x43],dl
  410e5d:	pop    edx
  410e5e:	mov    BYTE PTR [esp+ebp*1+0x4],al
  410e62:	out    0x17,al
  410e64:	xor    eax,ebp
  410e66:	sbb    eax,0xe826bafe
  410e6b:	and    ecx,DWORD PTR [edx-0x44]
  410e6e:	jnp    0x410df2
  410e70:	xchg   ebx,eax
  410e71:	std    
  410e72:	add    al,dl
  410e74:	mov    edx,0x33f843b2
  410e79:	(bad)  
  410e7a:	lock out 0x7e,eax
  410e7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e7e:	sbb    eax,0x894ddcfe
  410e83:	int    0xb8
  410e85:	ss call 0x18ed67b6
  410e8b:	(bad)  
  410e8c:	pop    esi
  410e8d:	test   DWORD PTR [edx+ecx*4-0x13],ecx
  410e91:	into   
  410e92:	in     eax,0x2a
  410e94:	jns    0x410e93
  410e96:	dec    esp
  410e97:	mov    bh,0x58
  410e99:	pop    esp
  410e9a:	mov    DWORD PTR ds:0xf9336346,ebp
  410ea0:	add    BYTE PTR [eax],al
  410ea2:	stos   BYTE PTR es:[edi],al
  410ea3:	inc    esp
  410ea4:	inc    ebx
  410ea5:	call   0x8a8908f8
  410eaa:	ins    DWORD PTR es:[edi],dx
  410eab:	adc    eax,ebx
  410ead:	add    ch,cl
  410eaf:	adc    ch,BYTE PTR [ebx]
  410eb1:	jl     0x410edc
  410eb3:	cs enter 0x2523,0xfc
  410eb8:	add    DWORD PTR [eax],eax
  410eba:	xor    DWORD PTR [eax+0x1d],esi
  410ebd:	jne    0x410f08
  410ebf:	repnz dec eax
  410ec1:	jnp    0x410f10
  410ec3:	cmp    BYTE PTR [eax-0x5032dedd],0x8a
  410eca:	not    DWORD PTR ds:0xedef353
  410ed0:	mov    edi,edx
  410ed2:	stos   BYTE PTR es:[edi],al
  410ed3:	mov    cl,0xe5
  410ed5:	daa    
  410ed6:	lods   eax,DWORD PTR fs:[esi]
  410ed8:	mov    cl,ch
  410eda:	fstp   DWORD PTR [ebx+0x18]
  410edd:	(bad)  
  410ede:	mov    esi,0x273c2214
  410ee3:	cwde   
  410ee4:	add    al,0x2
  410ee6:	xor    DWORD PTR [edx+ebp*2],edx
  410ee9:	lahf   
  410eea:	push   edx
  410eeb:	and    bh,ah
  410eed:	push   cs
  410eee:	mov    ah,0x2a
  410ef0:	jmp    0x1bdc3ff8
  410ef5:	call   0xef79fe0
  410efa:	lods   eax,DWORD PTR ds:[esi]
  410efb:	jnp    0x410ee5
  410efd:	add    esi,DWORD PTR [ecx]
  410eff:	xchg   ebx,eax
  410f00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f01:	add    al,0x26
  410f03:	mov    ?,WORD PTR [edi]
  410f05:	add    eax,0x14310000
  410f0a:	bound  esi,QWORD PTR [edi+0x4e626012]
  410f10:	or     ebx,ebx
  410f12:	je     0x410f1b
  410f14:	sub    ecx,DWORD PTR [ebx-0x5a]
  410f17:	xchg   ebp,eax
  410f18:	xor    BYTE PTR [ebx+0x50bbb3ae],bl
  410f1e:	ret    
  410f1f:	test   DWORD PTR [ebx],0xa5b3bae7
  410f25:	pop    eax
  410f26:	add    esp,eax
  410f28:	sbb    DWORD PTR [ebx+0x308a8c25],0xfeea2c03
  410f32:	inc    esi
  410f33:	push   ds
  410f34:	pop    ecx
  410f35:	mov    BYTE PTR [ebx],al
  410f37:	fadd   DWORD PTR [eax+0x52b76240]
  410f3d:	inc    esp
  410f3e:	xchg   esi,eax
  410f3f:	mov    cl,0xab
  410f41:	aad    0xf
  410f43:	loopne 0x410f47
  410f45:	pop    es
  410f46:	pop    ds
  410f47:	mov    al,BYTE PTR [esi]
  410f49:	fwait
  410f4a:	stos   DWORD PTR es:[edi],eax
  410f4b:	out    0x1e,eax
  410f4d:	pop    edi
  410f4e:	mov    bh,0x8a
  410f50:	in     al,dx
  410f51:	sti    
  410f52:	aad    0x17
  410f54:	xlat   BYTE PTR ds:[ebx]
  410f55:	push   es
  410f56:	ret    
  410f57:	inc    edx
  410f58:	mov    ebx,0xbecd0067
  410f5d:	mov    BYTE PTR [eax],dl
  410f5f:	(bad)  
  410f60:	out    dx,al
  410f61:	xor    dh,BYTE PTR [eax]
  410f63:	jb     0x410fde
  410f65:	xor    dh,BYTE PTR [eax+esi*2]
  410f68:	xor    DWORD PTR [edx],0x6038
  410f6e:	jmp    0x69a34ba5
  410f73:	xor    dl,BYTE PTR [eax]
  410f75:	push   ds
  410f76:	loopne 0x410fce
  410f78:	mov    DWORD PTR [edi-0x4910d1a3],ebp
  410f7e:	and    al,0x9a
  410f80:	dec    esp
  410f81:	add    eax,0x724f5d5d
  410f86:	out    0x99,eax
  410f88:	fcom   DWORD PTR [ecx-0x6901fdb6]
  410f8e:	mov    cl,dl
  410f90:	or     eax,0xfe06d45c
  410f95:	jmp    0xd1657a43
  410f9a:	imul   ebp,DWORD PTR [eax+0x1432ed24],0x62a81173
  410fa4:	and    al,0xfd
  410fa6:	test   eax,0xe5f92452
  410fab:	arpl   WORD PTR [eax+0x62],dx
  410fae:	ja     0x410f9d
  410fb0:	repnz pop ecx
  410fb2:	cmp    al,0x6
  410fb4:	push   esp
  410fb5:	call   0x3a16:0xa587d7a9
  410fbc:	call   0xfe472ff0
  410fc1:	(bad)  
  410fc3:	xor    DWORD PTR [edx+ebp*8],esp
  410fc6:	push   0xffffff9a
  410fc8:	shl    DWORD PTR [eax+esi*8-0x2532b364],1
  410fcf:	arpl   WORD PTR [ecx+0xd00001f],cx
  410fd5:	mov    ch,0xf1
  410fd7:	add    BYTE PTR [edi],ch
  410fd9:	daa    
  410fda:	mov    bl,al
  410fdc:	inc    ebx
  410fdd:	fsub   QWORD PTR [ecx]
  410fdf:	cmp    BYTE PTR [edi+0x30ce8ac1],ah
  410fe5:	jno    0x410fd9
  410fe7:	dec    edi
  410fe9:	pushf  
  410fea:	imul   esp,DWORD PTR [esp+edi*1],0x548bd813
  410ff1:	cld    
  410ff2:	and    DWORD PTR [ebx],edi
  410ff4:	retf   
  410ff5:	pushf  
  410ff6:	pop    ecx
  410ff7:	and    al,0x50
  410ff9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ffa:	dec    eax
  410ffb:	jmp    0x410f91
  410ffd:	pushf  
  410ffe:	pop    ecx
  410fff:	and    al,0x20
  411001:	fwait
  411002:	inc    ecx
  411003:	and    al,0x80
  411005:	in     al,dx
  411006:	and    DWORD PTR [esp+eax*4],0x11
  41100a:	add    BYTE PTR [ebp+0x61],dh
  41100d:	xchg   esp,eax
  41100e:	mov    ebx,0x115428
  411013:	add    BYTE PTR [ebx+ecx*1+0x3d],al
  411017:	add    BYTE PTR [ebp+0x11],al
  41101a:	add    BYTE PTR [ebp+edx*2-0x6c],bh
  41101e:	inc    BYTE PTR [edx]
  411020:	inc    esp
  411021:	repz cmp BYTE PTR [esp+esi*2-0x17],0xfd
  411027:	jl     0x411071
  411029:	adc    DWORD PTR [ebp+eax*1-0x65],edi
  41102d:	sub    BYTE PTR [edx],al
  41102f:	je     0x41105c
  411031:	pushf  
  411032:	dec    ecx
  411033:	and    al,0x40
  411035:	mov    edi,0x8b50
  41103a:	pop    esi
  41103b:	cmp    ebx,ecx
  41103d:	repz dec edi
  41103f:	sub    dl,ch
  411041:	xor    BYTE PTR [ebx-0x6ca7de3b],dl
  411047:	int    0x21
  411049:	adc    BYTE PTR [ebx-0x5528d5bc],al
  41104f:	ror    BYTE PTR [edx+0x6e1331ce],0xef
  411056:	ficom  WORD PTR ds:0xeb0d431c
  41105c:	sub    dh,0x30
  41105f:	and    BYTE PTR [ebx],0xea
  411062:	and    esi,DWORD PTR [edx-0x4b]
  411065:	and    esp,DWORD PTR [ecx]
  411067:	push   0x4960fec8
  41106c:	(bad)  
  41106d:	int    0x99
  41106f:	mov    BYTE PTR [esi+edi*8],dl
  411072:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411073:	sub    DWORD PTR [ecx],ebx
  411075:	sbb    BYTE PTR [ecx+edi*8-0x54f70f6],0x1
  41107d:	add    BYTE PTR [edx+0x3103f06c],bh
  411083:	sti    
  411084:	mov    al,0x52
  411086:	loope  0x4110f9
  411088:	dec    edx
  411089:	out    0x17,eax
  41108b:	stos   DWORD PTR es:[edi],eax
  41108c:	sbb    esi,edi
  41108e:	mov    edx,0xfc27e036
  411093:	dec    ebx
  411094:	(bad)  
  411095:	int    0xaa
  411097:	ret    0xef2c
  41109a:	arpl   WORD PTR [ebp+0x3a19],cx
  4110a0:	jb     0x4110a7
  4110a2:	jmp    0xb73a:0xe9d6ed8a
  4110a9:	into   
  4110aa:	std    
  4110ab:	push   DWORD PTR [esi]
  4110ad:	out    0xc,eax
  4110af:	sub    edi,0x25
  4110b2:	add    BYTE PTR [eax],al
  4110b4:	xor    ebp,ebp
  4110b6:	lea    eax,[esp+ebx*2-0x13]
  4110ba:	add    BYTE PTR [eax],al
  4110bc:	xor    ecx,ebx
  4110be:	add    BYTE PTR [ebx+0x68df00c],al
  4110c4:	inc    esp
  4110c5:	in     eax,dx
  4110c6:	cwde   
  4110c7:	(bad)  
  4110c8:	(bad)  
  4110c9:	mov    cl,0xd3
  4110cb:	mov    dl,BYTE PTR [ebp+0x14]
  4110ce:	retf   
  4110cf:	mov    ebx,0xefc370b9
  4110d4:	lods   eax,DWORD PTR ds:[esi]
  4110d5:	icebp  
  4110d6:	fwait
  4110d7:	jecxz  0x411084
  4110d9:	stos   BYTE PTR es:[edi],al
  4110da:	repz call esi
  4110dd:	add    ebx,DWORD PTR [ebx+0xfd2bbb5]
  4110e3:	in     eax,0xd6
  4110e5:	add    esi,edi
  4110e7:	pop    ebx
  4110e8:	xor    DWORD PTR [edi+eiz*8],edx
  4110eb:	add    esi,DWORD PTR [eax]
  4110ed:	call   0xc011:0x3aefffb
  4110f4:	push   edx
  4110f5:	sub    BYTE PTR [esp-0x53],bl
  4110f9:	pusha  
  4110fa:	in     al,dx
  4110fb:	sbb    cl,BYTE PTR [ebx+0x52b7725e]
  411101:	pop    esp
  411102:	jb     0x4110c3
  411104:	add    BYTE PTR [eax],al
  411106:	push   edx
  411107:	sub    al,0x1c
  411109:	mov    ah,0xab
  41110b:	sar    BYTE PTR [edi-0x58fc7dfa],cl
  411111:	add    al,0x9f
  411113:	sub    bl,ah
  411115:	add    esi,DWORD PTR [ecx]
  411117:	xchg   ecx,eax
  411118:	xor    edi,ecx
  41111a:	pop    edi
  41111b:	out    dx,eax
  41111c:	int3   
  41111d:	mov    ?,edx
  41111f:	aaa    
  411120:	pop    ds
  411121:	or     DWORD PTR [edi-0x77],0x37fa8ed5
  411128:	mov    edi,0xe328a48e
  41112d:	add    esi,DWORD PTR [ecx]
  41112f:	(bad)  
  411130:	rcr    edi,cl
  411132:	push   0xffffff8d
  411134:	stos   DWORD PTR es:[edi],eax
  411135:	fistp  WORD PTR [esi-0x73]
  411138:	mov    ebx,0x425b2edf
  41113d:	icebp  
  41113e:	lods   eax,DWORD PTR ds:[esi]
  41113f:	add    bh,BYTE PTR [esi+eax*1-0x7111108a]
  411146:	lods   al,BYTE PTR ds:[esi]
  411147:	daa    
  411148:	add    ch,ch
  41114a:	xor    dl,BYTE PTR [ecx+edx*2]
  41114d:	cdq    
  41114e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41114f:	shr    al,1
  411151:	pop    edi
  411152:	sbb    eax,DWORD PTR [edx]
  411154:	(bad)  
  411155:	push   ds
  411156:	mov    al,0x26
  411158:	add    al,0xe9
  41115a:	xor    bl,BYTE PTR [ecx-0x11a92103]
  411160:	add    cl,ch
  411162:	xor    bh,BYTE PTR [edi]
  411164:	jl     0x41112b
  411166:	ficom  WORD PTR [ecx]
  411168:	or     DWORD PTR [eax],0x0
  41116b:	add    BYTE PTR [edx],dh
  41116d:	adc    al,0x0
  41116f:	bound  eax,QWORD PTR [esi-0x78dabca]
  411175:	sub    eax,0xe316cc9
  41117a:	cmp    DWORD PTR [esi-0x5976eb3d],ebp
  411180:	fisttp QWORD PTR [ebp-0x727ef2bc]
  411186:	jmp    0x50a9699d
  41118b:	imul   esi,DWORD PTR fs:[esi],0xd0a4183c
  411192:	xchg   DWORD PTR ds:0x17e83651,edx
  411198:	ss add bh,dh
  41119b:	rol    dh,1
  41119d:	ss xor al,0x1b
  4111a0:	or     DWORD PTR [ebp+0x6962cd54],0xfafb7252
  4111aa:	in     eax,0x78
  4111ac:	sbb    BYTE PTR [edx],al
  4111ae:	mov    al,BYTE PTR [ecx+0x212456a4]
  4111b4:	loopne 0x411207
  4111b6:	mov    DWORD PTR [edi],ebp
  4111b8:	push   ebp
  4111b9:	jmp    0x3e7968ad
  4111be:	ret    
  4111bf:	(bad)  
  4111c0:	leave  
  4111c1:	xor    eax,0x5f60014
  4111c6:	mov    ecx,DWORD PTR [esp+ebp*1-0x18]
  4111ca:	mov    dl,BYTE PTR [esp+ebp*1-0x1c]
  4111ce:	mov    BYTE PTR [eax+eax*1+0x0],cl
  4111d2:	sub    al,0xe0
  4111d4:	mov    BYTE PTR [esp+edi*8-0x17],dl
  4111d8:	mov    al,BYTE PTR [esp+ebp*8+0x5]
  4111dc:	push   edi
  4111dd:	push   ebp
  4111de:	cwde   
  4111df:	nop
  4111e0:	retf   
  4111e1:	call   0x3f3fff
  4111e6:	inc    ebx
  4111e7:	int3   
  4111e8:	and    DWORD PTR [eax],edi
  4111ea:	lahf   
  4111eb:	(bad)  
  4111ec:	mov    cl,dh
  4111ee:	push   ebx
  4111ef:	xor    ch,ah
  4111f1:	mov    ds:0x3bfe1cb9,eax
  4111f6:	(bad)  [edx-0xbb374c9]
  4111fc:	xor    eax,0x1e10e3b
  411201:	add    BYTE PTR [eax-0x497cf76e],cl
  411207:	in     eax,dx
  411208:	add    DWORD PTR [eax],eax
  41120a:	cwde   
  41120b:	adc    eax,0x15851874
  411210:	add    eax,DWORD PTR [eax]
  411212:	mov    BYTE PTR [ecx+0x17978304],ch
  411218:	je     0x411233
  41121a:	test   DWORD PTR ds:0xa948007b,edx
  411220:	add    al,0x83
  411222:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411223:	sbb    BYTE PTR [ebp+ecx*1+0x2f],dh
  411227:	enter  0xce8a,0xa0
  41122b:	xor    al,dh
  41122d:	inc    edi
  41122f:	out    0xfe,eax
  411231:	jmp    0x41129b
  411233:	nop
  411234:	imul   esp,DWORD PTR [eax+eax*1],0xfe022800
  41123b:	call   FWORD PTR [eax]
  41123d:	adc    eax,0x1631d389
  411242:	das    
  411243:	push   ecx
  411244:	jl     0x4112bc
  411246:	inc    edi
  411247:	out    0xf6,eax
  411249:	push   0x6e6cfe18
  41124e:	sub    BYTE PTR [eax],al
  411250:	test   BYTE PTR [eax-0x76],bl
  411253:	imul   ecx,DWORD PTR [ebp-0x25],0xffffff8c
  411257:	inc    ebx
  411258:	adc    eax,0xb847c4bf
  41125d:	mov    esi,0x431a57dd
  411262:	or     BYTE PTR [edx-0x1e7dd62],al
  411268:	mov    ah,0x19
  41126a:	or     BYTE PTR [ebp+eiz*4-0x4dfffe16],al
  411271:	or     DWORD PTR [eax],eax
  411273:	imul   ebp,DWORD PTR [ebp+0x1]
  411277:	add    BYTE PTR [ecx],dh
  411279:	xchg   al,cl
  41127b:	and    eax,DWORD PTR [ecx+0x4a]
  41127e:	mov    edx,eax
  411280:	dec    edx
  411281:	mov    dl,0xb4
  411283:	push   eax
  411284:	stos   BYTE PTR es:[edi],al
  411285:	mov    al,ds:0xd99f2e2c
  41128a:	adc    eax,0xdc16dd8a
  41128f:	push   esi
  411290:	jecxz  0x411307
  411292:	inc    esi
  411293:	mov    cl,BYTE PTR [ecx+0x6ef103d2]
  411299:	mov    ecx,0xc4d9
  41129e:	out    0x37,al
  4112a0:	mov    DWORD PTR [ebx+0x15],eax
  4112a3:	jecxz  0x41127f
  4112a5:	test   DWORD PTR ds:0xc40001f7,ecx
  4112ab:	add    eax,DWORD PTR [ebx+0x1f719bd]
  4112b1:	add    BYTE PTR [ecx],dh
  4112b3:	(bad)  
  4112b4:	stc    
  4112b5:	cmp    al,0x31
  4112b7:	clc    
  4112b8:	add    DWORD PTR [eax],eax
  4112ba:	lods   eax,DWORD PTR ds:[esi]
  4112bb:	adc    al,0xec
  4112bd:	and    BYTE PTR [edi],0x13
  4112c0:	rcr    edi,cl
  4112c2:	pop    ebp
  4112c3:	adc    al,0xd4
  4112c5:	add    esi,DWORD PTR [ecx]
  4112c7:	and    ah,0x82
  4112ca:	unpcklps xmm7,XMMWORD PTR [ebx+0x72645ffb]
  4112d1:	inc    esi
  4112d2:	push   ss
  4112d3:	dec    esi
  4112d4:	cmp    BYTE PTR [edi],dl
  4112d6:	imul   ebx
  4112d8:	cmc    
  4112d9:	mov    eax,0x4c6a5f8b
  4112de:	out    0x5e,eax
  4112e0:	push   0x40
  4112e2:	es shr bh,cl
  4112e5:	add    ebp,DWORD PTR [edx-0x440c3c90]
  4112eb:	rcl    edx,cl
  4112ed:	ds jbe 0x411359
  4112f0:	jb     0x411338
  4112f2:	(bad)  
  4112f3:	pop    ds
  4112f4:	add    eax,0x6a59b717
  4112f9:	daa    
  4112fa:	xor    DWORD PTR [ecx-0x74c9d52c],ecx
  411300:	xor    esp,eax
  411302:	add    BYTE PTR [eax],al
  411304:	cs xchg ecx,eax
  411306:	and    dl,BYTE PTR [edi]
  411308:	add    DWORD PTR [edx+0x62],esp
  41130b:	inc    ebp
  41130c:	xchg   esi,eax
  41130d:	pop    ss
  41130e:	aad    0x16
  411310:	xchg   DWORD PTR [ebx-0x3f1d1fc5],ecx
  411316:	call   0xf255441e
  41131b:	ss jecxz 0x411352
  41131e:	je     0x41139a
  411320:	jmp    di
  411323:	add    ebp,DWORD PTR [edx+0x56fffb96]
  411329:	(bad)  
  41132a:	cmp    dh,BYTE PTR [ebx+edi*4+0x55208fce]
  411331:	(bad)  
  411332:	jle    0x411338
  411334:	vpcomuw xmm14,xmm7,XMMWORD PTR [edx],0x14
  41133a:	add    DWORD PTR [ebx+ecx*1-0x4cb38d22],ecx
  411341:	leave  
  411342:	std    
  411343:	call   0xe9452eec
  411348:	xor    dl,BYTE PTR [ecx+0x1ba1e049]
  41134e:	mov    DWORD PTR [edi+0x2],ebp
  411351:	adc    eax,DWORD PTR [eax]
  411353:	jmp    0xed59ac05
  411358:	xor    dl,BYTE PTR [eax+eax*2]
  41135b:	pusha  
  41135c:	mov    ah,0x1a
  41135e:	add    al,0xe9
  411360:	xor    cl,BYTE PTR [ebp-0x121067a]
  411366:	std    
  411367:	bound  eax,QWORD PTR [eax]
  411369:	add    BYTE PTR [edi+eiz*1+0x4],dl
  41136d:	jmp    0xeb519da4
  411372:	add    BYTE PTR [ecx],al
  411374:	ret    
  411375:	jno    0x411339
  411377:	adc    ebx,DWORD PTR [esi-0x201492b]
  41137d:	je     0x41132c
  41137f:	mov    DWORD PTR [esi-0x2015907],eax
  411385:	jo     0x4113a6
  411387:	daa    
  411388:	add    al,0xe9
  41138a:	xor    dl,BYTE PTR [edi+eax*4+0x5f]
  41138e:	mov    DWORD PTR [edx],edx
  411390:	add    cl,ch
  411392:	mov    ebx,0x32e51098
  411397:	adc    al,0x89
  411399:	outs   dx,DWORD PTR ds:[esi]
  41139a:	jne    0x4113ae
  41139c:	add    cl,ch
  41139e:	mov    eax,0x3fbb020e
  4113a3:	aad    0x88
  4113a5:	stc    
  4113a6:	xor    ebx,DWORD PTR [esi+0x1432ed1c]
  4113ac:	jae    0x41139e
  4113ae:	mov    ecx,0x54001098
  4113b3:	adc    al,BYTE PTR [eax]
  4113b5:	mov    esi,edx
  4113b7:	inc    DWORD PTR [ecx]
  4113b9:	add    BYTE PTR [eax-0x2e],cl
  4113bc:	mov    BYTE PTR [esi-0x20204],cl
  4113c2:	mov    eax,ds:0x8040d7e
  4113c7:	adc    cl,BYTE PTR [ecx-0x201df7a]
  4113cd:	inc    DWORD PTR [eax]
  4113cf:	add    BYTE PTR [eax-0x8],cl
  4113d2:	mov    al,BYTE PTR [esi-0x20218]
  4113d8:	push   esi
  4113d9:	sbb    BYTE PTR [eax],al
  4113db:	mov    ecx,DWORD PTR [esi-0x27fffe04]
  4113e1:	mov    WORD PTR [ebx+0x11d418],es
  4113e7:	add    DWORD PTR [esi+0x8],ebp
  4113ea:	add    al,BYTE PTR [eax]
  4113ec:	enter  0xccec,0xd2
  4113f0:	clc    
  4113f1:	mov    WORD PTR [ecx+0x24],es
  4113f4:	mov    WORD PTR [esi-0x43],?
  4113f7:	je     0x411472
  4113f9:	mov    WORD PTR [ecx+0x24],cs
  4113fc:	test   al,0x8c
  4113fe:	xchg   ebx,eax
  4113ff:	adc    BYTE PTR [ecx+edx*1-0xb9bd500],dl
  411406:	dec    ebp
  411407:	push   ecx
  411408:	and    edx,DWORD PTR [edi+0x11880411]
  41140e:	sub    DWORD PTR [esp+esi*1-0x38],ecx
  411412:	dec    edi
  411413:	push   ecx
  411414:	daa    
  411415:	daa    
  411416:	int    0x83
  411418:	aam    0x1
  41141a:	test   eax,eax
  41141c:	xor    eax,0x9b8b5b0c
  411421:	mov    esp,0x3cdb5e5e
  411426:	xor    eax,0x891830c2
  41142b:	xchg   BYTE PTR [ecx],dh
  41142d:	sti    
  41142e:	std    
  41142f:	dec    DWORD PTR [esi-0x2e]
  411432:	mov    ebp,0xe1000023
  411437:	aaa    
  411438:	mov    bh,0x5e
  41143a:	fild   QWORD PTR [ecx+0x3d]
  41143d:	aaa    
  41143e:	jae    0x411423
  411440:	add    DWORD PTR [eax+0x7eb31],edi
  411446:	repnz cmp DWORD PTR [ebp+0x49823523],0x86ea08c0
  411451:	inc    ebx
  411452:	cmp    DWORD PTR [ebx+0xf6d8a40],ebp
  411458:	or     BYTE PTR [ecx+0xf0d],al
  41145e:	xor    DWORD PTR [eax+0x41],esi
  411461:	je     0x411499
  411463:	ins    BYTE PTR es:[edi],dx
  411464:	cmp    eax,0x1eb2d2b
  411469:	ret    
  41146a:	stos   BYTE PTR es:[edi],al
  41146b:	outs   dx,BYTE PTR ds:[esi]
  41146c:	fld    QWORD PTR [ebx+0x2d]
  41146f:	jmp    0x411472
  411471:	mov    esp,DWORD PTR [ebp+0x3103c1d6]
  411477:	jmp    0x41142b
  411479:	mov    ch,BYTE PTR [ebp+0x3103c1d6]
  41147f:	jmp    0x411430
  411481:	mov    al,ch
  411483:	(bad)  
  411484:	aad    0x3
  411486:	xor    ebx,ebp
  411488:	mov    ah,0x4f
  41148a:	stos   BYTE PTR es:[edi],al
  41148b:	jbe    0x411475
  41148d:	aas    
  41148e:	sub    eax,0xe15201eb
  411493:	pop    edi
  411494:	shl    BYTE PTR [ebx],0x29
  411497:	jecxz  0x41144d
  411499:	hlt    
  41149a:	add    BYTE PTR [eax],al
  41149c:	jle    0x41145b
  41149e:	add    ebx,0x45
  4114a1:	out    dx,eax
  4114a2:	add    DWORD PTR [eax],eax
  4114a4:	jb     0x411444
  4114a6:	inc    eax
  4114a7:	retf   
  4114a8:	jne    0x4114bd
  4114aa:	mov    bl,0x40
  4114ac:	push   0xffffffcf
  4114ae:	stos   DWORD PTR es:[edi],eax
  4114af:	inc    eax
  4114b0:	push   0xffffffcf
  4114b2:	cmp    al,0x7d
  4114b4:	push   ebp
  4114b5:	xchg   edx,eax
  4114b6:	jnp    0x4114cc
  4114b8:	inc    esi
  4114b9:	cld    
  4114ba:	out    0xb6,eax
  4114bc:	in     al,0x64
  4114be:	jb     0x411479
  4114c0:	cs inc ebx
  4114c2:	xchg   edx,eax
  4114c3:	add    esp,edi
  4114c5:	(bad)  
  4114c6:	aas    
  4114c7:	ret    0x1471
  4114ca:	jo     0x4114e0
  4114cc:	icebp  
  4114cd:	cld    
  4114ce:	jmp    0x17c:0xf710df02
  4114d5:	cwde   
  4114d6:	dec    eax
  4114d7:	or     esi,DWORD PTR [esi]
  4114d9:	ret    
  4114da:	jae    0x4114d9
  4114dc:	inc    esi
  4114dd:	dec    edx
  4114de:	test   al,0x3
  4114e0:	lods   al,BYTE PTR ds:[esi]
  4114e1:	int3   
  4114e2:	out    0x78,al
  4114e4:	add    DWORD PTR [esi*2+0x450ae45],ecx
  4114eb:	cmp    al,0x73
  4114ed:	xchg   edi,eax
  4114ee:	and    cl,ah
  4114f0:	pop    edx
  4114f1:	in     eax,0xd8
  4114f3:	xor    eax,0xff8c9754
  4114f8:	xor    DWORD PTR [ecx+0x3ee7cf1],eax
  4114fe:	and    BYTE PTR [ecx+0x146a0000],al
  411504:	aad    0x1e
  411506:	xor    ecx,DWORD PTR [ecx+0x7db5f5db]
  41150c:	call   0xf7fae797
  411511:	adc    dl,BYTE PTR [edi-0x2d791805]
  411517:	mov    edi,esi
  411519:	adc    al,BYTE PTR [edi+0x5bd4e7fb]
  41151f:	or     esi,DWORD PTR [ebp-0x7b]
  411522:	push   esi
  411523:	dec    edx
  411524:	add    BYTE PTR [eax],ch
  411526:	xor    eax,0xafd13489
  41152b:	stc    
  41152c:	sbb    al,0x24
  41152e:	pop    edi
  41152f:	lea    eax,[esp+edx*8+0x1a]
  411533:	xchg   ebx,eax
  411534:	inc    esp
  411535:	hlt    
  411536:	ret    0x8ed
  411539:	arpl   WORD PTR [esi+0x40],bp
  41153c:	lods   al,BYTE PTR ds:[esi]
  41153d:	jno    0x4115b5
  41153f:	sbb    BYTE PTR [eax+0x1cfeae2a],dl
  411545:	cmc    
  411546:	pop    ebp
  411547:	mov    esi,0x1432e91c
  41154c:	or     eax,0x4edab49f
  411551:	test   al,0x32
  411553:	mov    DWORD PTR [ecx+esi*8],esi
  411556:	mov    bh,0xf8
  411558:	cmp    ah,cl
  41155a:	add    al,0x8d
  41155c:	inc    esp
  41155d:	cld    
  41155e:	cmp    dl,BYTE PTR [ebx-0x117d23bc]
  411564:	or     BYTE PTR [ebx+0x0],ah
  411567:	add    dh,dh
  411569:	aas    
  41156a:	lods   al,BYTE PTR ds:[esi]
  41156b:	popa   
  41156c:	out    dx,al
  41156d:	pop    ss
  41156e:	nop
  41156f:	stos   BYTE PTR es:[edi],al
  411570:	mov    bh,0xfd
  411572:	cmp    BYTE PTR [ebp-0x1926bbfb],bl
  411578:	push   0xed9ff096
  41157d:	cli    
  41157e:	jge    0x411505
  411580:	sub    DWORD PTR [eax+eax*1+0x48f3075],esp
  411587:	push   esp
  411588:	jmp    0x8b96:0xa5e93f48
  41158f:	stc    
  411590:	inc    ecx
  411591:	cli    
  411592:	std    
  411593:	out    dx,al
  411594:	clc    
  411595:	xchg   ebp,eax
  411596:	or     BYTE PTR [esi],ah
  411598:	jb     0x411594
  41159a:	jge    0x4115e9
  41159c:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  41159e:	add    BYTE PTR [eax],al
  4115a0:	cmp    al,0x16
  4115a2:	mov    DWORD PTR [edx*8+0x58414bb7],eax
  4115a9:	std    
  4115aa:	cmp    DWORD PTR [ebp-0x1dc78],0x18fa910b
  4115b4:	xor    al,0x52
  4115b6:	aas    
  4115b7:	and    DWORD PTR [edx+0x628c0eff],0x23
  4115be:	(bad)  
  4115bf:	inc    ebp
  4115c1:	xchg   edx,eax
  4115c2:	or     eax,0x4d24b7ff
  4115c7:	call   0x412bdd
  4115cc:	add    BYTE PTR [eax],al
  4115ce:	aaa    
  4115cf:	(bad)  
  4115d0:	pop    edx
  4115d1:	mov    DWORD PTR [ecx+ebp*4-0x3cf7f741],eax
  4115d8:	mov    ch,ah
  4115da:	cdq    
  4115db:	xor    al,0x7d
  4115dd:	add    BYTE PTR [eax],bl
  4115df:	push   ss
  4115e0:	push   ecx
  4115e1:	push   esi
  4115e2:	lahf   
  4115e3:	js     0x411629
  4115e5:	or     BYTE PTR [ebp+0x8b97dc1],al
  4115eb:	push   ss
  4115ec:	add    BYTE PTR [eax],al
  4115ee:	push   ecx
  4115ef:	dec    edi
  4115f0:	add    al,0xcc
  4115f3:	js     0x411627
  4115f5:	sub    DWORD PTR [esi],0xd8fc0010
  4115fb:	push   esi
  4115fc:	jecxz  0x411604
  4115fe:	push   ebx
  4115ff:	mov    DWORD PTR [eax+0x1308e7],0x72b0900
  411609:	or     DWORD PTR [esi+0x2f813578],esp
  41160f:	adc    BYTE PTR [eax],al
  411611:	cld    
  411612:	mov    BYTE PTR [esi-0x12],dl
  411615:	or     ah,BYTE PTR [ecx+0x31328823]
  41161b:	je     0x411654
  41161d:	xor    BYTE PTR [ebx-0x11],0x7c
  411621:	aaa    
  411622:	mov    al,0xca
  411624:	inc    ecx
  411625:	push   cs
  411626:	xor    ebx,ebp
  411628:	inc    edx
  411629:	out    dx,al
  41162a:	aaa    
  41162b:	test   bh,0x88
  41162e:	daa    
  41162f:	jbe    0x411605
  411631:	add    BYTE PTR [eax],0x0
  411634:	push   edi
  411635:	jmp    0x411648
  411637:	add    dh,BYTE PTR [ecx]
  411639:	lods   al,BYTE PTR ds:[esi]
  41163a:	daa    
  41163b:	or     edi,DWORD PTR [edx+0x6e28506]
  411641:	lods   al,BYTE PTR ds:[esi]
  411642:	and    al,0xf
  411644:	sub    BYTE PTR [ecx-0x714fe884],dh
  41164a:	add    eax,esi
  41164c:	xor    ch,bl
  41164e:	inc    edx
  41164f:	jmp    0x8463:0x882ff42d
  411656:	xor    al,0x82
  411658:	repz out dx,al
  41165a:	jl     0x41168b
  41165c:	mov    dl,0x48
  41165e:	ror    BYTE PTR [edx],1
  411660:	inc    edx
  411661:	je     0x411637
  411663:	dec    eax
  411664:	mov    dl,0x2a
  411666:	add    eax,0x87bfe885
  41166b:	mov    WORD PTR [ebx+ebp*2-0x4f],?
  41166f:	out    0xe,eax
  411671:	jmp    0x411674
  411673:	add    BYTE PTR [esi-0x2f],bh
  411676:	lods   al,BYTE PTR ds:[esi]
  411677:	mov    ch,al
  411679:	mov    bh,0x43
  41167b:	add    esi,DWORD PTR [ecx]
  41167d:	jbe    0x411644
  41167f:	and    ebp,DWORD PTR ds:0x704b6165
  411685:	jmp    0x411703
  411687:	or     DWORD PTR [eax+0x35c18502],ebp
  41168d:	outs   dx,BYTE PTR ds:[esi]
  41168e:	inc    ecx
  41168f:	add    esi,DWORD PTR [eax-0xfb31cfc]
  411695:	adc    esp,edi
  411697:	xchg   ecx,eax
  411698:	add    BYTE PTR [eax],al
  41169a:	test   ch,dl
  41169c:	jecxz  0x4116a1
  41169e:	mov    edx,0xcb080b4f
  4116a3:	mov    bl,0x1b
  4116a5:	lds    edi,FWORD PTR [esi-0x73]
  4116a8:	out    dx,eax
  4116a9:	jl     0x4116d3
  4116ab:	xchg   ebp,eax
  4116ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116ad:	or     BYTE PTR [edx+0x6884ebd5],dh
  4116b3:	xor    ebx,DWORD PTR [eax*8+0x4295825e]
  4116ba:	xor    dl,BYTE PTR [esp+esi*1]
  4116bd:	jge    0x411714
  4116bf:	arpl   WORD PTR [edi],si
  4116c1:	mov    bl,0xbb
  4116c3:	dec    esi
  4116c4:	fistp  QWORD PTR [edx-0x23]
  4116c7:	pop    es
  4116c8:	je     0x411683
  4116ca:	ds gs pop ss
  4116cd:	sbb    al,0x4f
  4116cf:	adc    al,0xe7
  4116d1:	add    ebx,DWORD PTR [ecx+0x1ec51bb4]
  4116d7:	mov    DWORD PTR [ebx+ecx*1+0x430ec66],ebp
  4116de:	xor    DWORD PTR [edx+edi*4],edx
  4116e1:	sub    BYTE PTR [ebp-0x4],0xb7
  4116e5:	sbb    ecx,DWORD PTR [esi+0x5a03e714]
  4116eb:	lea    ecx,[ebx-0x4f]
  4116ee:	lock or al,0xe7
  4116f1:	mov    dl,0xbb
  4116f3:	push   eax
  4116f4:	add    edi,esp
  4116f6:	stos   DWORD PTR es:[edi],eax
  4116f7:	pusha  
  4116f8:	retf   
  4116f9:	jmp    FWORD PTR [ecx+0xfea7d5]
  4116ff:	add    BYTE PTR [ebp+ecx*1-0x72e1dad8],al
  411706:	loope  0x411784
  411708:	icebp  
  411709:	push   esp
  41170a:	not    BYTE PTR [ebp+0x29]
  41170d:	aad    0x8
  41170f:	hlt    
  411710:	cmp    ecx,DWORD PTR [edx]
  411712:	add    BYTE PTR [eax-0x55],ah
  411715:	mov    WORD PTR [edi+0x7c19fa9],?
  41171b:	test   al,0x4d
  41171d:	wbinvd 
  41171f:	repz or eax,0xb3b8870d
  411725:	aad    0x4
  411727:	pusha  
  411728:	repz ss or eax,0x170c8b7f
  41172f:	jo     0x411726
  411731:	ss or  eax,0xdfd4657f
  411737:	rcr    ebp,1
  411739:	or     al,0x87
  41173b:	test   al,0x72
  41173d:	push   es
  41173e:	mov    dh,0xf0
  411740:	cmc    
  411741:	repz adc dl,ah
  411744:	dec    eax
  411745:	mov    WORD PTR [edx],cs
  411747:	pusha  
  411748:	cmc    
  411749:	ss or  eax,0xdfd4353f
  41174f:	icebp  
  411750:	sub    ecx,DWORD PTR ds:0xd323f0d
  411756:	mov    edi,0xc25a1860
  41175b:	icebp  
  41175c:	xor    ah,BYTE PTR [ebx-0x77]
  41175f:	mov    ch,0x16
  411761:	jns    0xe41180c
  411767:	or     ecx,DWORD PTR [ecx+0x18ef75eb]
  41176d:	jno    0x41179c
  41176f:	push   ebp
  411770:	mov    ebx,ebp
  411772:	jne    0x411763
  411774:	adc    BYTE PTR [ecx+0x2d],ah
  411777:	push   ebp
  411778:	mov    ebx,ebp
  41177a:	jne    0x41176b
  41177c:	or     BYTE PTR [ecx+0x2d],dh
  41177f:	push   ebp
  411780:	xchg   DWORD PTR [edx],esi
  411782:	cmc    
  411783:	mov    edx,eax
  411785:	push   0x70
  411787:	adc    ecx,DWORD PTR [ecx-0x76edc517]
  41178d:	add    dl,cl
  41178f:	dec    edi
  411790:	in     eax,0x18
  411792:	and    BYTE PTR [eax],dl
  411794:	aas    
  411795:	mov    ebx,DWORD PTR [edx+0x1010e54f]
  41179b:	adc    BYTE PTR [edi],bh
  41179d:	mov    ecx,DWORD PTR [edx+0x8e551]
  4117a3:	adc    edi,DWORD PTR [edi]
  4117a5:	mov    ecx,DWORD PTR [edx-0x76773286]
  4117ab:	stos   DWORD PTR es:[edi],eax
  4117ac:	mov    edi,0x88bd8808
  4117b1:	in     eax,0xdb
  4117b3:	xor    ecx,DWORD PTR [ecx]
  4117b5:	push   ebx
  4117b6:	inc    esi
  4117b7:	ror    DWORD PTR [edx+0x547b7c45],0x8
  4117be:	jecxz  0x4117c1
  4117c0:	mov    ecx,DWORD PTR [ebp+0x40]
  4117c3:	jnp    0x41180d
  4117c5:	add    al,0xd1
  4117c7:	inc    esp
  4117c8:	shr    bl,0x0
  4117cb:	add    BYTE PTR [ecx+eiz*8-0x36],dl
  4117cf:	sub    DWORD PTR [ebx+0x1f0f0ef8],0xbe89d8e3
  4117d9:	push   ecx
  4117da:	jecxz  0x4117e0
  4117dc:	fldenv [ebx]
  4117de:	mov    dh,dl
  4117e0:	dec    ecx
  4117e1:	push   ss
  4117e2:	or     eax,0xf2795e31
  4117e7:	cmp    DWORD PTR [ebx+0x7],0xe30800fe
  4117ee:	fmul   DWORD PTR [ecx+0x10e3514e]
  4117f4:	jmp    0x1a0fa01c
  4117f9:	push   ss
  4117fa:	push   DWORD PTR [eax]
  4117fc:	inc    esi
  4117fd:	jns    0x4117f1
  4117ff:	sub    DWORD PTR [ebx],0xeb3332e3
  411805:	loop   0x4117de
  411807:	mov    DWORD PTR [ecx],esi
  411809:	cmp    eax,0xdc33e541
  41180e:	adc    cl,BYTE PTR [eax+0x71e2ce7]
  411814:	pusha  
  411815:	sbb    eax,0xab0f279
  41181a:	or     edi,edi
  41181c:	lahf   
  41181d:	jmp    0x4117f1
  41181f:	fldcw  WORD PTR [eax+0x39e542cd]
  411825:	sbb    al,0x3e
  411827:	mov    ah,bh
  411829:	fiadd  WORD PTR [edx]
  41182b:	imul   BYTE PTR [edx+0xc01048]
  411831:	add    BYTE PTR [esi+0x30e680ee],al
  411837:	test   BYTE PTR [edx],dl
  411839:	or     BYTE PTR [eax+0x74],ch
  41183c:	xor    esi,DWORD PTR [eax]
  41183e:	outs   dx,DWORD PTR ds:[esi]
  41183f:	je     0x411851
  411841:	adc    BYTE PTR [edx+0x61],0x57
  411845:	test   eax,0x3027dc9b
  41184a:	push   0xa811d570
  41184f:	mov    esi,0x6a16ee42
  411854:	and    al,0x0
  411856:	mov    eax,0xeef9fa78
  41185b:	daa    
  41185c:	or     al,0x7
  41185e:	xor    ebx,ebp
  411860:	add    DWORD PTR [ecx+0x1b232be7],ecx
  411866:	mov    eax,0x2dee4225
  41186b:	je     0x41187d
  41186d:	or     dl,bh
  41186f:	jae    0x4118b4
  411871:	xor    cl,0xe6
  411874:	rcr    BYTE PTR ds:0xe58014b8,1
  41187a:	es jb  0x411852
  41187d:	mov    ah,0x11
  41187f:	mov    al,ds:0x13a9ffc2
  411884:	inc    esi
  411885:	inc    edx
  411886:	fisttp WORD PTR ds:0x13ca2468
  41188c:	out    0x3,eax
  41188e:	sub    bh,BYTE PTR [ebp+0x1471b0c7]
  411894:	jo     0x4118c2
  411896:	add    BYTE PTR [eax],al
  411898:	jno    0x41187e
  41189a:	in     eax,dx
  41189b:	or     BYTE PTR [edi+0x3103e7f7],0x9
  4118a2:	ss jecxz 0x4118a6
  4118a5:	push   ebx
  4118a6:	out    0x7c,eax
  4118a8:	outs   dx,DWORD PTR ds:[esi]
  4118a9:	ror    dh,cl
  4118ab:	repnz mov cl,0xec
  4118ae:	rol    DWORD PTR [ecx+esi*1],cl
  4118b1:	adc    al,0xe2
  4118b3:	push   edx
  4118b4:	push   ss
  4118b5:	inc    ebp
  4118b6:	sub    BYTE PTR [eax+edi*4],al
  4118b9:	jle    0x41186e
  4118bb:	jge    0x411929
  4118bd:	nop
  4118be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118bf:	add    BYTE PTR [eax-0x56160538],ch
  4118c5:	aad    0x6a
  4118c7:	and    cl,BYTE PTR [edi]
  4118c9:	mov    ebx,edx
  4118cb:	push   eax
  4118cc:	es pop esi
  4118ce:	sub    BYTE PTR [edx+ebp*1],al
  4118d1:	jg     0x411866
  4118d3:	jge    0x41192c
  4118d5:	rcl    BYTE PTR [esi+0x7bfbb002],cl
  4118db:	add    al,0x31
  4118dd:	adc    al,0xe2
  4118df:	push   edx
  4118e0:	ds dec eax
  4118e2:	sub    BYTE PTR [eax+ebp*4],al
  4118e5:	shr    DWORD PTR [eax],cl
  4118e7:	sbb    edi,DWORD PTR [edx*4-0xbf9f7ba]
  4118ee:	out    0xfe,eax
  4118f0:	(bad)  
  4118f1:	xor    al,0xb9
  4118f3:	(bad)  
  4118f4:	neg    BYTE PTR [esi+eiz*1+0x680adf45]
  4118fb:	and    eax,DWORD PTR [eax]
  4118fd:	add    dl,ch
  4118ff:	adc    al,0x0
  411901:	jmp    0x9f63838
  411906:	popf   
  411907:	push   esp
  411908:	add    al,bl
  41190a:	and    al,0x9c
  41190c:	(bad)  
  41190d:	sub    BYTE PTR [ebx],dl
  41190f:	ja     0x5438d53
  411915:	pusha  
  411916:	push   ds
  411917:	sbb    al,0xf9
  411919:	jo     0x41190e
  41191b:	xchg   ebp,eax
  41191c:	shl    ch,0x7f
  41191f:	adc    DWORD PTR [edi+0x3df9b617],eax
  411925:	bound  eax,QWORD PTR [ecx+0x743c20a8]
  41192b:	xrelease mov BYTE PTR [esi+0x680701ed],bh
  411932:	push   ebx
  411933:	out    dx,eax
  411934:	add    cl,ch
  411936:	xor    bl,BYTE PTR [edi]
  411938:	mov    ch,0x9
  41193a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41193b:	push   esp
  41193c:	add    BYTE PTR [eax+0x1b],dh
  41193f:	aam    0xed
  411941:	out    0xb5,eax
  411943:	cli    
  411944:	cld    
  411945:	jmp    0x5e4a2d7c
  41194a:	push   edx
  41194b:	inc    esp
  41194c:	aas    
  41194d:	jmp    0x8700eb17
  411952:	inc    eax
  411953:	xchg   esp,eax
  411954:	in     eax,0x8d
  411956:	xor    dl,BYTE PTR [eax+eax*1]
  411959:	repnz adc DWORD PTR [ebx],0x4d
  41195d:	sub    BYTE PTR ds:0x7d739d,ch
  411963:	add    BYTE PTR [ebp+0x16a981d9],bl
  411969:	pushf  
  41196a:	rcr    DWORD PTR [edx],1
  41196c:	sbb    ebx,DWORD PTR [esi+ebx*8-0x76cdaf96]
  411973:	sbb    eax,0xa8561360
  411978:	xor    bl,BYTE PTR [edi]
  41197a:	jae    0x41197c
  41197c:	sub    al,0x70
  41197e:	faddp  st(1),st
  411980:	ja     0x411997
  411982:	jg     0x41196b
  411984:	and    al,0x17
  411986:	add    BYTE PTR [eax],al
  411988:	rol    DWORD PTR [ebp+0x1d],cl
  41198b:	push   esp
  41198c:	cdq    
  41198d:	push   ss
  41198e:	xchg   edi,ebx
  411990:	sbb    DWORD PTR [esi],ecx
  411992:	or     eax,DWORD PTR [ecx-0x2e4d1]
  411998:	enter  0xb6f1,0x20
  41199c:	retf   0xfdd7
  41199f:	mov    BYTE PTR [edi+0x58],al
  4119a2:	out    dx,al
  4119a3:	push   ss
  4119a4:	or     DWORD PTR [esi],esi
  4119a6:	stc    
  4119a7:	add    BYTE PTR [eax+0x38b70916],cl
  4119ad:	test   al,0x40
  4119af:	add    BYTE PTR [ecx],ch
  4119b1:	pop    es
  4119b2:	dec    BYTE PTR [ebp+0x60]
  4119b5:	cwde   
  4119b6:	jl     0x4119b0
  4119b8:	mov    bl,ch
  4119ba:	test   BYTE PTR [ebx-0x7601e38a],ch
  4119c0:	mov    al,ds:0xd11fdd56
  4119c5:	sub    eax,0xeed0
  4119ca:	rcl    DWORD PTR [esi+0x8],1
  4119cd:	icebp  
  4119ce:	shl    DWORD PTR [edi],0x30
  4119d1:	enter  0x58c1,0x80
  4119d5:	jecxz  0x4119c9
  4119d7:	push   ecx
  4119d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119d9:	stos   BYTE PTR es:[edi],al
  4119da:	pop    ecx
  4119db:	inc    eax
  4119dc:	xor    cl,bl
  4119de:	mov    eax,ds:0x7e0c028
  4119e3:	outs   dx,DWORD PTR ds:[esi]
  4119e4:	rcl    ecx,cl
  4119e6:	mov    dh,0x6d
  4119e8:	mov    edi,0xcd6d9a09
  4119ed:	shl    DWORD PTR [eax-0x10],0x30
  4119f1:	enter  0x5781,0x80
  4119f5:	jecxz  0x411a28
  4119f7:	dec    edx
  4119f8:	add    al,0xff
  4119fa:	xor    DWORD PTR [ecx+ebp*1],ecx
  4119fd:	mov    BYTE PTR [ecx],cl
  4119ff:	cmp    eax,0x3d200724
  411a04:	jns    0x4119d5
  411a06:	lock push ebx
  411a08:	push   es
  411a09:	xor    ecx,ebp
  411a0b:	je     0x411a50
  411a0d:	adc    dl,0xce
  411a10:	aam    0x32
  411a12:	add    cl,ah
  411a14:	sub    cl,BYTE PTR [eax+0x1243cd9]
  411a1a:	add    BYTE PTR ds:0x370c779,bh
  411a20:	hlt    
  411a21:	xor    BYTE PTR [ecx-0x6d7fbc9c],al
  411a27:	jmp    0x882b:0xac96ff08
  411a2e:	add    BYTE PTR [eax],al
  411a30:	imul   edi,DWORD PTR [ecx+eiz*1+0x7abc400f],0xfdd370c7
  411a3b:	xor    BYTE PTR [ecx+0x74],ah
  411a3e:	inc    esp
  411a3f:	adc    BYTE PTR [edx-0x16],0xf8
  411a43:	push   cs
  411a44:	ss in  al,dx
  411a46:	sub    ecx,DWORD PTR [edx-0x1dbd0d0c]
  411a4c:	sub    eax,0x29883cec
  411a51:	jle    0x411a11
  411a53:	pop    es
  411a54:	sub    eax,0xa807be66
  411a59:	jmp    0x411a03
  411a5b:	pop    ebp
  411a5c:	fidiv  DWORD PTR [ebx+0x15]
  411a5f:	pop    esp
  411a60:	repz loop 0x411a64
  411a63:	push   ebx
  411a64:	jg     0x411acc
  411a66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a67:	and    ebp,DWORD PTR ds:0x4d737b21
  411a6d:	retf   
  411a6e:	lahf   
  411a6f:	test   BYTE PTR [edi],al
  411a71:	adc    al,0xf6
  411a73:	outs   dx,DWORD PTR ds:[esi]
  411a74:	loope  0x411a96
  411a76:	xchg   ebp,eax
  411a77:	inc    edx
  411a78:	das    
  411a79:	test   eax,0x54a5b327
  411a7e:	fbstp  TBYTE PTR [ebx+0x84146d6]
  411a84:	out    0x7b,eax
  411a86:	pop    es
  411a87:	mov    bh,0x71
  411a89:	adc    al,0x3f
  411a8b:	cld    
  411a8c:	(bad)  
  411a8e:	cs clc 
  411a90:	xchg   ecx,ebp
  411a92:	mov    ebp,0xce0000b4
  411a97:	push   edx
  411a98:	and    DWORD PTR [eax],ecx
  411a9a:	mov    edi,0x71b6477b
  411a9f:	adc    al,0xff
  411aa1:	bts    eax,esi
  411aa4:	push   es
  411aa5:	test   eax,0x3efd60b
  411aaa:	add    al,0x9b
  411aac:	or     al,0xb3
  411aae:	out    0x44,al
  411ab0:	bound  edi,QWORD PTR [esi-0x7bb62ca]
  411ab6:	mov    ch,0x46
  411ab8:	fbstp  TBYTE PTR [edx+0x824fbee]
  411abe:	ja     0x411ab0
  411ac0:	aas    
  411ac1:	fs cli 
  411ac3:	push   edx
  411ac4:	out    0x78,eax
  411ac6:	in     eax,dx
  411ac7:	jmp    0x411ae0
  411ac9:	sbb    al,0x67
  411acb:	out    dx,eax
  411acc:	mov    dh,0x7
  411ace:	into   
  411acf:	xor    ebx,DWORD PTR [eax*8+0xc2c9f4e]
  411ad6:	idiv   bl
  411ad8:	nop
  411ad9:	or     BYTE PTR [edi],bh
  411adb:	lock jmp DWORD PTR [ebx-0x1b]
  411adf:	push   edx
  411ae0:	out    0x78,eax
  411ae2:	jne    0x411ad0
  411ae4:	pop    ss
  411ae5:	sbb    al,0xb
  411ae7:	icebp  
  411ae8:	jle    0x411af1
  411aea:	and    DWORD PTR [ecx+0x5f252c00],0xffffffe8
  411af1:	imul   edi,DWORD PTR [ecx],0xffffffee
  411af4:	std    
  411af5:	ret    0xfb85
  411af8:	pop    ebx
  411af9:	sub    eax,DWORD PTR [eax]
  411afb:	add    ch,bh
  411afd:	out    dx,eax
  411afe:	push   esp
  411aff:	pusha  
  411b00:	push   eax
  411b01:	xchg   edx,eax
  411b02:	in     al,dx
  411b03:	stc    
  411b04:	mov    ds:0xeaa48949,eax
  411b09:	call   0x99f8:0x5859ed73
  411b10:	mov    ds:0x3632faf7,eax
  411b15:	out    dx,al
  411b16:	mov    ebp,DWORD PTR [edx+eiz*1-0x42d57ea1]
  411b1d:	inc    edx
  411b1e:	call   0xfe2f4527
  411b23:	adc    DWORD PTR [edx],0x29e93f5b
  411b29:	pop    eax
  411b2a:	clc    
  411b2b:	cdq    
  411b2c:	cmp    al,BYTE PTR [esi+0x772ff6fc]
  411b32:	mov    al,ds:0x8cef759d
  411b37:	sub    al,0x1d
  411b39:	pop    edi
  411b3a:	call   0xfe2f51af
  411b3f:	(bad)  
  411b40:	leave  
  411b41:	jmp    0x411acc
  411b43:	and    al,0x45
  411b45:	pushf  
  411b46:	inc    ebx
  411b47:	(bad)
  411b4a:	lock push ecx
  411b4c:	push   ebp
  411b4d:	pusha  
  411b4e:	aas    
  411b4f:	jmp    0x1a39732d
  411b54:	sub    eax,0x2fa6fc7e
  411b59:	ja     0x411b7b
  411b5b:	sub    al,0x74
  411b5d:	out    dx,eax
  411b5e:	mov    WORD PTR [eax+eax*1],gs
  411b61:	add    BYTE PTR ds:0x3908e85f,bl
  411b67:	out    dx,al
  411b68:	std    
  411b69:	add    BYTE PTR [ebx+0x558bf9bc],ah
  411b6f:	or     BYTE PTR [eax+0x5c709c45],cl
  411b75:	lock xor BYTE PTR [eax+0x4c],bh
  411b79:	inc    ecx
  411b7a:	sbb    BYTE PTR [esp+eax*2-0x8],ch
  411b7e:	mov    eax,0x5ffc460a
  411b83:	push   ss
  411b84:	mov    al,gs:0x8cfdd7cd
  411b8a:	xchg   ebp,eax
  411b8b:	add    cl,BYTE PTR [ebp-0x18]
  411b8e:	xor    DWORD PTR [esi+edi*8],ebx
  411b91:	push   DWORD PTR [esi-0x5707bb95]
  411b97:	or     bl,ch
  411b99:	sti    
  411b9a:	movhps xmm0,QWORD PTR [edx-0x733f3f3a]
  411ba1:	inc    ebp
  411ba2:	sbb    BYTE PTR [ebx+0x1643d3e5],ah
  411ba8:	(bad)  
  411ba9:	pop    esi
  411baa:	shr    DWORD PTR [edi-0x17],cl
  411bad:	pop    ebp
  411bae:	dec    edx
  411baf:	jmp    0x411bae
  411bb1:	push   esp
  411bb2:	adc    DWORD PTR [eax+eax*4],esi
  411bb5:	in     al,dx
  411bb6:	in     al,dx
  411bb7:	pop    ss
  411bb8:	add    BYTE PTR [eax],al
  411bba:	dec    ebx
  411bbb:	mov    esi,0xf03d8b56
  411bc0:	mov    dh,BYTE PTR [ebp-0x74]
  411bc3:	test   BYTE PTR gs:[eax+0x187e0000],al
  411bca:	(bad)  
  411bcb:	push   eax
  411bcc:	adc    BYTE PTR [esi+0x0],0x0
  411bd0:	dec    eax
  411bd1:	mov    ebp,?
  411bd3:	sub    BYTE PTR [bp+0x40],ah
  411bd8:	jo     0x411c3c
  411bda:	sti    
  411bdb:	dec    DWORD PTR [edi-0x3575303e]
  411be1:	test   DWORD PTR [ebx+0x41],0x379fd31
  411be8:	arpl   WORD PTR [ecx],di
  411bea:	jg     0x411be5
  411bec:	cmp    DWORD PTR [edi],edx
  411bee:	adc    esi,eax
  411bf0:	mov    ah,0x13
  411bf2:	push   es
  411bf3:	(bad)  
  411bf4:	push   ss
  411bf5:	std    
  411bf6:	add    DWORD PTR [eax],eax
  411bf8:	xor    DWORD PTR [edx+0x650188b0],edx
  411bfe:	jge    0x411c73
  411c00:	dec    DWORD PTR [esi+0x3]
  411c03:	xor    bl,ah
  411c05:	push   edx
  411c06:	aam    0x8a
  411c08:	mov    ah,0xc7
  411c0a:	add    edi,esi
  411c0c:	out    0x64,al
  411c0e:	jge    0x411c8b
  411c10:	fild   QWORD PTR [esi]
  411c12:	add    edi,esi
  411c14:	lods   al,BYTE PTR ds:[esi]
  411c15:	scas   eax,DWORD PTR es:[edi]
  411c16:	add    edi,esi
  411c18:	into   
  411c19:	jb     0x411c90
  411c1b:	jnp    0x411be4
  411c1d:	add    ecx,DWORD PTR ss:[esi]
  411c20:	jg     0x411c1c
  411c22:	sbb    bh,0x36
  411c25:	jb     0x411c6c
  411c27:	jnp    0x411bd8
  411c29:	push   ds
  411c2a:	add    ecx,DWORD PTR [esi]
  411c2c:	add    BYTE PTR [eax],al
  411c2e:	(bad)  
  411c30:	shl    bh,cl
  411c32:	test   eax,0x31023bfc
  411c37:	mov    edx,0xf38b82bf
  411c3c:	xchg   BYTE PTR [ecx+esi*4],al
  411c3f:	xor    al,BYTE PTR [esi*2-0x1851da89]
  411c46:	or     al,ch
  411c48:	add    al,0xfe
  411c4a:	mov    dl,0x98
  411c4c:	mov    ebp,edi
  411c4e:	data16 (bad) 
  411c50:	add    DWORD PTR [eax-0x597104e6],eax
  411c56:	mov    dl,0x68
  411c58:	mov    ebp,edi
  411c5a:	dec    esi
  411c5b:	mov    esi,0x14a77501
  411c60:	je     0x411ce0
  411c62:	mov    esi,0xe6049eed
  411c67:	sti    
  411c68:	push   cs
  411c69:	add    esi,DWORD PTR [ecx]
  411c6b:	adc    al,0x2e
  411c6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c6e:	mov    ebx,DWORD PTR [ebx+0x1bf0a693]
  411c74:	out    0xae,eax
  411c76:	test   eax,0xba1768f6
  411c7b:	adc    ah,bh
  411c7d:	add    esp,DWORD PTR [edx+0x46]
  411c80:	mov    esi,0x721c5d78
  411c85:	mov    gs,WORD PTR [edx]
  411c87:	lahf   
  411c88:	ins    BYTE PTR es:[edi],dx
  411c89:	sub    esp,0xffffffec
  411c8c:	dec    esi
  411c8d:	mov    bl,0xce
  411c8f:	in     al,dx
  411c90:	out    0x3,eax
  411c92:	add    BYTE PTR [eax],al
  411c94:	xor    DWORD PTR [edx-0x19],edi
  411c97:	fwait
  411c98:	ss pop esi
  411c9a:	test   al,0x3
  411c9c:	fld    st(0)
  411c9e:	sub    al,0x4
  411ca0:	(bad)  
  411ca1:	and    bh,BYTE PTR [ecx]
  411ca3:	jns    0x411c55
  411ca5:	xor    ebp,DWORD PTR [ebp-0x146b493e]
  411cab:	shl    eax,1
  411cad:	nop
  411cae:	adc    ebx,esi
  411cb0:	sub    ah,bl
  411cb2:	cs jle 0x411cdb
  411cb5:	out    dx,al
  411cb6:	inc    BYTE PTR [ebx]
  411cb8:	xor    DWORD PTR [edi+eiz*8],edx
  411cbb:	add    ebx,DWORD PTR [edx-0x46ec9fb9]
  411cc1:	xchg   esi,eax
  411cc2:	pop    ebx
  411cc3:	add    bh,BYTE PTR [edi-0x14]
  411cc6:	sbb    dh,dl
  411cc8:	mov    BYTE PTR [ebx],ah
  411cca:	bound  ecx,QWORD PTR [ecx+0x3ceede5]
  411cd0:	mov    ecx,0x5f024396
  411cd5:	in     al,dx
  411cd6:	mov    esi,0xeddd89
  411cdb:	mov    dh,0x32
  411cdd:	call   0xf6fd:0xee332d8b
  411ce4:	jo     0x411cf8
  411ce6:	or     DWORD PTR [ecx+0x15bb9ab2],0xdefdea33
  411cf0:	call   0xadc24c1e
  411cf5:	jmp    0x411cba
  411cf7:	jmp    0x6a42:0x55320000
  411cfe:	syscall 
  411d00:	jnp    0x411ce6
  411d02:	mov    dl,0x2d
  411d04:	add    ah,bl
  411d06:	call   0x3392734d
  411d0b:	call   0xb7f7740d
  411d10:	js     0x411d61
  411d12:	xor    ch,dl
  411d14:	add    BYTE PTR [ecx+0x1e],ch
  411d17:	adc    al,0x73
  411d19:	xchg   BYTE PTR [esi+0x323778af],ch
  411d1f:	jmp    0x6983:0x9f90b400
  411d26:	xor    ebp,edx
  411d28:	std    
  411d29:	mov    ecx,0xe900b3ca
  411d2e:	xor    cl,BYTE PTR [ecx+0x5e]
  411d31:	mov    dl,0xb5
  411d33:	clc    
  411d34:	pop    ebx
  411d35:	sub    ebp,DWORD PTR ds:0xfb975114
  411d3b:	pushf  
  411d3c:	inc    esp
  411d3d:	int    0x22
  411d3f:	jb     0x411cca
  411d41:	lea    ecx,[esi+0x0]
  411d44:	data16 ins BYTE PTR es:[edi],dx
  411d46:	pop    edi
  411d47:	or     DWORD PTR [bx+si+0x68],esi
  411d4b:	lahf   
  411d4c:	js     0x411d47
  411d4e:	fsubr  DWORD PTR [ebp+0x1c57e8ff]
  411d54:	mov    eax,DWORD PTR [eax]
  411d56:	sbb    BYTE PTR [eax],al
  411d58:	test   edi,eax
  411d5a:	out    dx,al
  411d5b:	and    dl,dl
  411d5d:	sldt   WORD PTR [eax]
  411d60:	iret   
  411d61:	rcl    BYTE PTR [edx-0x7d],0x98
  411d65:	pop    ds
  411d66:	push   eax
  411d67:	call   0x3d0b38
  411d6c:	and    BYTE PTR [eax],dh
  411d6e:	dec    ecx
  411d6f:	inc    ecx
  411d70:	sbb    bh,bh
  411d72:	cmp    bh,cl
  411d74:	mov    bh,0x15
  411d76:	push   cs
  411d77:	mov    bh,0xd3
  411d79:	inc    ecx
  411d7a:	push   ebx
  411d7b:	call   0x3d0b98
  411d80:	xor    BYTE PTR [eax-0xe7beb7],dh
  411d86:	es stc 
  411d88:	xchg   edi,eax
  411d89:	push   ss
  411d8a:	push   cs
  411d8b:	mov    bh,0x73
  411d8d:	inc    edx
  411d8e:	push   esi
  411d8f:	call   0x3d0b38
  411d94:	xchg   edi,eax
  411d95:	je     0x411dee
  411d97:	ret    0x16e0
  411d9a:	dec    edi
  411d9b:	mov    esi,DWORD PTR [edx+esi*1+0x1a705308]
  411da2:	cmc    
  411da3:	call   DWORD PTR [edi]
  411da5:	nop
  411da6:	mov    edi,0x16c880
  411dab:	mov    eax,0x3d43e8
  411db0:	adc    eax,DWORD PTR [edi]
  411db2:	test   DWORD PTR [ebx],edx
  411db4:	sbb    edx,edi
  411db6:	add    al,0x83
  411db8:	dec    ebx
  411db9:	adc    edi,DWORD PTR [ecx]
  411dbb:	mov    al,ds:0x72004fc5
  411dc0:	aaa    
  411dc1:	scas   eax,DWORD PTR es:[edi]
  411dc2:	mov    al,ds:0xd900004d
  411dc7:	push   ss
  411dc8:	xchg   DWORD PTR [eax],edx
  411dca:	add    DWORD PTR [ecx],eax
  411dcc:	jg     0x411d8e
  411dce:	mov    WORD PTR [edi+0x3104bf],cs
  411dd4:	and    al,0x4e
  411dd6:	lock cld 
  411dd8:	jae    0x411dc7
  411dda:	cli    
  411ddb:	mov    esi,0x66020008
  411de0:	pusha  
  411de1:	and    al,0x39
  411de3:	push   cs
  411de4:	in     al,dx
  411de5:	call   0x8040d733
  411dea:	jb     0x411e68
  411dec:	add    al,0x0
  411dee:	xor    DWORD PTR [ebp+0x24],esi
  411df1:	dec    ebx
  411df2:	jo     0x411def
  411df4:	mov    WORD PTR [ecx],ss
  411df6:	mov    eax,0x35c184eb
  411dfb:	jle    0x411dc1
  411dfd:	add    al,0x54
  411dff:	pop    ebx
  411e00:	dec    ebp
  411e01:	aas    
  411e02:	xor    ebp,ebp
  411e04:	lock mov eax,0x4108d1
  411e0a:	stos   BYTE PTR es:[edi],al
  411e0b:	out    dx,al
  411e0c:	mov    dl,BYTE PTR [eax]
  411e0e:	mov    dl,0x3e
  411e10:	or     BYTE PTR [ecx+0x203ef7f1],al
  411e16:	ja     0x411dd4
  411e18:	add    DWORD PTR [edx-0x32],esi
  411e1b:	mov    dh,0xc3
  411e1d:	add    al,0x31
  411e1f:	or     BYTE PTR [edx+0x1c4fb2e3],0x51
  411e26:	pop    edi
  411e27:	jbe    0x411e86
  411e29:	or     BYTE PTR [eax],al
  411e2b:	add    BYTE PTR [edx+0x6c8b0d88],ch
  411e31:	xor    edx,DWORD PTR [ecx+edx*2-0x67]
  411e35:	adc    ah,bh
  411e37:	std    
  411e38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e39:	dec    eax
  411e3a:	inc    ebp
  411e3b:	lock add DWORD PTR [eax+0x43],esp
  411e3f:	or     BYTE PTR [ecx],al
  411e41:	add    esp,esp
  411e43:	clc    
  411e44:	mov    fs,edx
  411e46:	mov    es,WORD PTR [ebx-0x67]
  411e49:	mov    eax,DWORD PTR [ecx+eax*8-0x13c5ebdf]
  411e50:	pusha  
  411e51:	in     al,dx
  411e52:	fiadd  WORD PTR [eax]
  411e54:	fdiv   DWORD PTR [ebx-0x68cebcdd]
  411e5a:	and    al,0xfc
  411e5c:	add    esp,edi
  411e5e:	inc    esp
  411e5f:	sti    
  411e60:	push   esp
  411e61:	jmp    0x533ec2b5
  411e66:	out    0x8e,eax
  411e68:	repnz jecxz 0x411e82
  411e6b:	in     al,dx
  411e6c:	int3   
  411e6d:	jmp    0x432b:0xb3c800a6
  411e74:	xor    DWORD PTR [edi-0x37e13d4],edx
  411e7a:	or     bl,bh
  411e7c:	sbb    al,0xe9
  411e7e:	jb     0x411ede
  411e80:	adc    eax,0xb6f4249d
  411e85:	dec    esi
  411e86:	jae    0x411e12
  411e88:	push   0xffffffe4
  411e8a:	bound  ebx,QWORD PTR [esi+0x5]
  411e8d:	popf   
  411e8e:	lods   al,BYTE PTR ds:[esi]
  411e8f:	jmp    0x411e91
  411e91:	add    BYTE PTR [esi-0x7575acb2],ch
  411e97:	cld    
  411e98:	mov    edi,0xe7537a23
  411e9d:	mov    ?,WORD PTR [edx-0x14]
  411ea0:	xchg   edi,eax
  411ea1:	jmp    0x411ebb
  411ea3:	jmp    0x411ee3
  411ea5:	add    BYTE PTR [eax+0x34],bl
  411ea8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ea9:	inc    edx
  411eaa:	xor    DWORD PTR [edi-0x39e0c5c],edx
  411eb0:	aam    0xfa
  411eb2:	mov    ah,0xe8
  411eb4:	(bad)  
  411eb5:	and    edi,edx
  411eb7:	push   edx
  411eb8:	out    0x8e,eax
  411eba:	repnz sti 
  411ebc:	mov    bh,0xeb
  411ebe:	cmp    al,0xeb
  411ec0:	push   es
  411ec1:	add    BYTE PTR [ebx-0xd7404ba],ch
  411ec7:	jecxz  0x411ec9
  411ec9:	pusha  
  411eca:	out    dx,eax
  411ecb:	out    0x87,eax
  411ecd:	mov    WORD PTR [edx-0x5522a466],es
  411ed3:	push   esp
  411ed4:	call   0x88211749
  411ed9:	xor    al,0x55
  411edb:	jnp    0x411e7d
  411edd:	sbb    al,0xf4
  411edf:	adc    ecx,DWORD PTR [ebx-0x17bcaad4]
  411ee5:	ror    BYTE PTR [ebp-0x1a],0xfd
  411ee9:	inc    ecx
  411eea:	lea    ebx,[edi+edi*1-0x17]
  411eee:	mov    eax,ds:0x4539f054
  411ef3:	cli    
  411ef4:	clc    
  411ef5:	sahf   
  411ef6:	add    BYTE PTR [eax],al
  411ef8:	cs jge 0x411e9b
  411efb:	and    al,0x6c
  411efd:	adc    al,0x8b
  411eff:	and    al,0xd
  411f01:	inc    ebp
  411f02:	call   0xfe2b34ab
  411f07:	pop    ss
  411f08:	mov    al,ds:0x1519f853
  411f0d:	xchg   ecx,eax
  411f0e:	clc    
  411f0f:	outs   dx,BYTE PTR ds:[esi]
  411f10:	(bad)  
  411f11:	fwait
  411f12:	inc    esi
  411f13:	icebp  
  411f14:	bound  ebx,QWORD PTR [ebx-0x37aa6bd]
  411f1a:	jne    0x411f6d
  411f1c:	out    0xe9,al
  411f1e:	and    DWORD PTR [edi],0xac8b3e45
  411f24:	retf   0xe844
  411f27:	ror    edx,cl
  411f29:	jmp    0x8facb72b
  411f2e:	in     al,dx
  411f2f:	mov    eax,?
  411f31:	sbb    al,0x0
  411f33:	mov    esp,0xd7ff3a5
  411f38:	shl    edi,0xfd
  411f3b:	jmp    0x62965d43
  411f40:	adc    BYTE PTR [ecx+ecx*4],bl
  411f43:	add    BYTE PTR ds:0x18858917,dl
  411f49:	out    0xfb,al
  411f4b:	jmp    FWORD PTR [eax-0x7001ab05]
  411f51:	out    0x6a,al
  411f53:	add    al,ah
  411f55:	das    
  411f56:	dec    esi
  411f57:	inc    ecx
  411f58:	pop    eax
  411f59:	sti    
  411f5a:	in     eax,0xfd
  411f5c:	add    BYTE PTR [eax],al
  411f5e:	jg     0x411f46
  411f60:	sub    eax,0x2094d2d2
  411f65:	dec    esi
  411f66:	or     DWORD PTR [eax],edx
  411f68:	mov    BYTE PTR [edx+ecx*2],al
  411f6b:	push   ebp
  411f6c:	jg     0x411f68
  411f6e:	pusha  
  411f6f:	addr16 in eax,dx
  411f71:	(bad)  
  411f72:	aad    0x6a
  411f74:	(bad)  
  411f75:	dec    DWORD PTR [edi+0x18000010]
  411f7b:	cli    
  411f7c:	push   esp
  411f7d:	mov    eax,ecx
  411f7f:	xchg   edi,eax
  411f80:	xor    DWORD PTR [esi+ebp*4-0x1b],0xf9ba31fb
  411f88:	xor    BYTE PTR [ebx-0x1a06b],cl
  411f8e:	jg     0x411f28
  411f90:	cmp    DWORD PTR [esi+ecx*4-0x1a],0x5f85fffb
  411f98:	(bad)  
  411f99:	dec    DWORD PTR [edi+0x7e7c899a]
  411f9f:	out    0xfb,al
  411fa1:	ldmxcsr DWORD PTR [ecx]
  411fa4:	jg     0x411f86
  411fa6:	out    dx,eax
  411fa7:	cdq    
  411fa8:	mov    ecx,0xfbe60e7c
  411fad:	cmovbe esp,DWORD PTR [esi]
  411fb0:	sub    eax,0xc61050f8
  411fb5:	add    ecx,eax
  411fb7:	push   ecx
  411fb8:	inc    edx
  411fb9:	adc    DWORD PTR [edx+0xb],0x79
  411fbd:	add    eax,0x3a7d31
  411fc2:	add    BYTE PTR [eax],al
  411fc4:	and    al,0x2f
  411fc6:	push   ebx
  411fc7:	push   esi
  411fc8:	mov    DWORD PTR [ebx+edi*8-0x57867103],ebx
  411fcf:	js     0x411f58
  411fd1:	(bad)  
  411fd3:	add    BYTE PTR [ecx-0x318cfe5f],dh
  411fd9:	jns    0x411f98
  411fdb:	js     0x41204c
  411fdd:	(bad)  
  411fe0:	fcomp  QWORD PTR [esi-0x73]
  411fe3:	xor    DWORD PTR [ecx+0x1fdfbd6],0xffffffc5
  411fea:	(bad)  
  411feb:	sti    
  411fec:	dec    esi
  411fed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411fee:	pop    ebx
  411fef:	pop    esi
  411ff0:	jmp    0x1f4:0x735bf073
  411ff7:	push   ebx
  411ff8:	test   al,0x97
  411ffa:	push   esp
  411ffb:	push   eax
  411ffc:	sbb    BYTE PTR ds:0x72395387,0x5d
  412003:	or     al,0xaa
  412005:	add    BYTE PTR [edi+ebp*1],dl
  412008:	call   0xb950286e
  41200d:	das    
  41200e:	or     eax,0x12f7bbf8
  412013:	mov    BYTE PTR ds:0xf88142c4,dh
  412019:	jecxz  0x412098
  41201b:	jmp    0x411f9f
  41201d:	test   eax,0x3eebace9
  412022:	sti    
  412023:	das    
  412024:	add    ecx,DWORD PTR [ecx+0x10]
  412027:	sbb    al,BYTE PTR [eax]
  412029:	add    BYTE PTR [ebx+0x30322ff7],ch
  41202f:	arpl   WORD PTR [ecx],ax
  412031:	inc    edx
  412032:	mov    dl,0x21
  412034:	or     al,0x7c
  412036:	shr    esp,0xcf
  412039:	mov    ch,BYTE PTR [ebp+0x14]
  41203c:	cld    
  41203d:	sti    
  41203e:	mov    ecx,0xb041d910
  412043:	jmp    0x8ab2:0x46a07fdf
  41204a:	test   DWORD PTR [edi+0x29],eax
  41204d:	adc    BYTE PTR [ecx],dh
  41204f:	adc    al,0xe7
  412051:	add    esi,DWORD PTR [ecx]
  412053:	adc    al,0xe7
  412055:	add    esi,DWORD PTR [ecx]
  412057:	adc    al,0xe7
  412059:	add    esi,DWORD PTR [ecx]
  41205b:	adc    al,0xe7
  41205d:	add    esi,DWORD PTR [ecx]
  41205f:	adc    al,0xe7
  412061:	add    esi,DWORD PTR [ecx]
  412063:	adc    al,0xe7
  412065:	add    esi,DWORD PTR [ecx]
  412067:	adc    al,0xe7
  412069:	add    esi,DWORD PTR [ecx]
  41206b:	adc    al,0xe7
  41206d:	add    esi,DWORD PTR [ecx]
  41206f:	adc    al,0xe7
  412071:	add    esi,DWORD PTR [ecx]
  412073:	adc    al,0xe7
  412075:	add    esi,DWORD PTR [ecx]
  412077:	adc    al,0xe7
  412079:	add    esi,DWORD PTR [ecx]
  41207b:	adc    al,0xe7
  41207d:	add    esi,DWORD PTR [ecx]
  41207f:	adc    al,0xe7
  412081:	add    esi,DWORD PTR [ecx]
  412083:	adc    al,0xe7
  412085:	add    esi,DWORD PTR [ecx]
  412087:	adc    al,0xe7
  412089:	add    esi,DWORD PTR [ecx]
  41208b:	adc    al,0xe7
  41208d:	add    eax,DWORD PTR [eax]
  41208f:	add    BYTE PTR [ecx],dh
  412091:	adc    al,0xe7
  412093:	add    esi,DWORD PTR [ecx]
  412095:	adc    al,0xe7
  412097:	add    esi,DWORD PTR [ecx]
  412099:	adc    al,0xe7
  41209b:	add    esi,DWORD PTR [ecx]
  41209d:	adc    al,0xe7
  41209f:	add    esi,DWORD PTR [ecx]
  4120a1:	adc    al,0xe7
  4120a3:	add    esi,DWORD PTR [ecx]
  4120a5:	adc    al,0xe7
  4120a7:	add    esi,DWORD PTR [ecx]
  4120a9:	adc    al,0xe7
  4120ab:	add    esi,DWORD PTR [ecx]
  4120ad:	adc    al,0xe7
  4120af:	add    esi,DWORD PTR [ecx]
  4120b1:	adc    al,0xe7
  4120b3:	add    esi,DWORD PTR [ecx]
  4120b5:	adc    al,0x0
  4120b7:	jmp    0xe94134ee
  4120bc:	xor    dl,BYTE PTR [eax+eax*1]
  4120bf:	jmp    0xe94134f6
  4120c4:	xor    dl,BYTE PTR [eax+eax*1]
  4120c7:	in     al,0x28
  4120c9:	sbb    DWORD PTR [edx],ecx
  4120cb:	mov    BYTE PTR [edx],al
  4120cd:	pop    eax
  4120ce:	mov    edx,DWORD PTR [bp+si+0x5e]
  4120d2:	das    
  4120d3:	iret   
  4120d4:	inc    edx
  4120d5:	xor    eax,0x344fc920
  4120da:	and    BYTE PTR [ebp+0xa],dh
  4120dd:	jno    0x4120ff
  4120df:	pop    edx
  4120e0:	fadd   DWORD PTR [esp+ebp*2+0x4d]
  4120e4:	shl    BYTE PTR [ecx+0x20],1
  4120e7:	pop    ebp
  4120e8:	int    0x70
  4120ea:	and    BYTE PTR [ebx-0x30],cl
  4120ed:	pop    edi
  4120ee:	je     0x41213c
  4120f0:	(bad)  
  4120f1:	xor    edi,DWORD PTR [edx]
  4120f3:	adc    BYTE PTR [eax],al
  4120f5:	add    BYTE PTR [eax],bh
  4120f7:	sbb    al,BYTE PTR [ecx+0x46]
  4120fa:	lds    ebx,FWORD PTR [edx+esi*2+0x40]
  4120fe:	sar    BYTE PTR [ebx+0x74],cl
  412101:	leave  
  412102:	pop    edx
  412103:	jne    0x41212c
  412105:	leave  
  412106:	pop    ebp
  412107:	sub    esi,DWORD PTR [edi]
  412109:	ror    DWORD PTR [ecx+0x26],1
  41210c:	xor    cl,bl
  41210e:	push   ebp
  41210f:	xor    al,0x62
  412111:	add    BYTE PTR [ebp+0x4e],dl
  412114:	ins    DWORD PTR es:[edi],dx
  412115:	add    al,0x7f
  412117:	jns    0x41217c
  412119:	pop    es
  41211a:	push   ebp
  41211b:	pop    ebx
  41211c:	(bad)  
  41211d:	cli    
  41211e:	xchg   ecx,eax
  41211f:	jb     0x41214d
  412121:	or     DWORD PTR [eax+esi*2+0x6c],esi
  412125:	or     DWORD PTR [edi+0x7b],edi
  412128:	ror    DWORD PTR gs:[esi+0x65],0x20
  41212d:	mov    ebx,0x636551
  412132:	mov    ah,BYTE PTR [ebp+0x61]
  412135:	fs ss or eax,0x4cd20d0a
  41213c:	imul   esi,DWORD PTR [edx-0x13],0x37
  412140:	outs   dx,BYTE PTR gs:[esi]
  412142:	mov    esi,0xb96d726e
  412147:	jae    0x4121ae
  412149:	outs   dx,DWORD PTR ds:[esi]
  41214a:	mov    dh,0x21
  41214c:	and    BYTE PTR [eax-0x44],ch
  41214f:	jae    0x4121c1
  412151:	cmp    ah,BYTE PTR [edi+0x2e]
  412154:	jae    0x4121cd
  412156:	jmp    FWORD PTR [eiz*2-0x4ffff9e]
  41215d:	jae    0x4121cd
  41215f:	jae    0x412158
  412161:	je     0x4121d7
  412163:	ja     0x41215e
  412165:	imul   esp,DWORD PTR [ecx+0x2e],0x2f696efb
  41216c:	push   ebp
  41216d:	adc    DWORD PTR [ecx],ecx
  41216f:	or     cl,BYTE PTR [eax+0x17]
  412172:	add    BYTE PTR [eax],al
  412174:	pop    eax
  412175:	pop    ss
  412176:	add    BYTE PTR [eax],al
  412178:	pop    eax
  412179:	pop    ss
  41217a:	add    BYTE PTR [eax],al
  41217c:	dec    eax
  41217d:	pop    ss
  41217e:	add    BYTE PTR [eax],al
  412180:	dec    eax
  412181:	pop    ss
  412182:	add    BYTE PTR [eax],al
  412184:	sbb    BYTE PTR [edi],dl
  412186:	add    BYTE PTR [eax],al
  412188:	sbb    BYTE PTR [edi],dl
  41218a:	add    BYTE PTR [eax],al
  41218c:	or     BYTE PTR [edi],dl
  41218e:	add    BYTE PTR [eax],al
  412190:	or     BYTE PTR [edi],dl
  412192:	add    BYTE PTR [eax],al
  412194:	sbb    BYTE PTR [edi],dl
  412196:	add    BYTE PTR [eax],al
  412198:	sbb    BYTE PTR [edi],dl
  41219a:	add    BYTE PTR [eax],al
  41219c:	or     BYTE PTR [edi],dl
  41219e:	add    BYTE PTR [eax],al
  4121a0:	or     BYTE PTR [edi],dl
  4121a2:	add    BYTE PTR [eax],al
  4121a4:	fcom   DWORD PTR [esi]
  4121a6:	add    BYTE PTR [eax],al
  4121a8:	fcom   DWORD PTR [esi]
  4121aa:	add    BYTE PTR [eax],al
  4121ac:	xor    DWORD PTR [eax+0x2c4a4eb2],ecx
  4121b2:	and    BYTE PTR [ebx],ch
  4121b4:	xor    eax,0xd554cf23
  4121b9:	jmp    DWORD PTR [edx-0x7f25f39e]
  4121bf:	or     DWORD PTR [eax],eax
  4121c1:	add    BYTE PTR [esi-0x20],bl
  4121c4:	or     ecx,DWORD PTR [eax]
  4121c6:	inc    eax
  4121c7:	mov    cl,0xa
  4121c9:	push   0x517ba48d
  4121ce:	scas   eax,DWORD PTR es:[edi]
  4121cf:	in     al,dx
  4121d0:	add    DWORD PTR [eax],eax
  4121d2:	xor    ebp,ebp
  4121d4:	add    DWORD PTR [eax],eax
  4121d6:	xor    ebp,ebp
  4121d8:	add    DWORD PTR [eax],eax
  4121da:	xor    ebp,ebp
  4121dc:	add    DWORD PTR [eax],eax
  4121de:	xor    ebp,ebp
  4121e0:	add    DWORD PTR [eax],eax
  4121e2:	xor    ebp,ebp
  4121e4:	add    DWORD PTR [eax],eax
  4121e6:	xor    ebp,ebp
  4121e8:	add    DWORD PTR [eax],eax
  4121ea:	xor    ebp,ebp
  4121ec:	add    DWORD PTR [eax],eax
  4121ee:	xor    ebp,ebp
  4121f0:	add    DWORD PTR [eax],eax
  4121f2:	xor    ebp,ebp
  4121f4:	add    DWORD PTR [eax],eax
  4121f6:	xor    ebp,ebp
  4121f8:	add    DWORD PTR [eax],eax
  4121fa:	xor    ebp,ebp
  4121fc:	add    DWORD PTR [eax],eax
  4121fe:	xor    ebp,ebp
  412200:	add    DWORD PTR [eax],eax
  412202:	xor    ebp,ebp
  412204:	add    DWORD PTR [eax],eax
  412206:	xor    ebx,ebp
  412208:	add    DWORD PTR [eax],eax
  41220a:	xor    ebx,ebp
  41220c:	add    DWORD PTR [eax],eax
  41220e:	xor    ebx,ebp
  412210:	add    DWORD PTR [eax],eax
  412212:	xor    ebx,ebp
  412214:	add    DWORD PTR [eax],eax
  412216:	xor    ebx,ebp
  412218:	add    DWORD PTR [eax],eax
  41221a:	xor    ebx,ebp
  41221c:	add    DWORD PTR [eax],eax
  41221e:	xor    ebx,ebp
  412220:	add    DWORD PTR [eax],eax
  412222:	xor    ebx,ebp
  412224:	add    DWORD PTR [eax],eax
  412226:	add    BYTE PTR [eax],al
  412228:	xor    DWORD PTR [edi+eiz*8],edx
  41222b:	add    esi,DWORD PTR [ecx]
  41222d:	adc    al,0xe7
  41222f:	add    esi,DWORD PTR [ecx]
  412231:	adc    al,0xe7
  412233:	add    esi,DWORD PTR [ecx]
  412235:	adc    al,0xe7
  412237:	add    esi,DWORD PTR [ecx]
  412239:	adc    al,0xe7
  41223b:	add    esi,DWORD PTR [ecx]
  41223d:	adc    al,0xe7
  41223f:	add    esi,DWORD PTR [ecx]
  412241:	adc    al,0xe7
  412243:	add    esi,DWORD PTR [ecx]
  412245:	adc    al,0xe7
  412247:	add    esi,DWORD PTR [ecx]
  412249:	adc    al,0xe7
  41224b:	add    esi,DWORD PTR [ecx]
  41224d:	adc    al,0xe7
  41224f:	add    esi,DWORD PTR [ecx]
  412251:	adc    al,0xe7
  412253:	add    esi,DWORD PTR [ecx]
  412255:	adc    al,0xe7
  412257:	add    esi,DWORD PTR [ecx]
  412259:	adc    al,0xe7
  41225b:	add    esi,DWORD PTR [ecx]
  41225d:	adc    al,0xe7
  41225f:	add    esi,DWORD PTR [ecx]
  412261:	adc    al,0xe7
  412263:	add    esi,DWORD PTR [ecx]
  412265:	adc    al,0xe7
  412267:	add    esi,DWORD PTR [ecx]
  412269:	adc    al,0xe7
  41226b:	add    esi,DWORD PTR [ecx]
  41226d:	adc    al,0xe7
  41226f:	add    esi,DWORD PTR [ecx]
  412271:	adc    al,0xe7
  412273:	add    esi,DWORD PTR [ecx]
  412275:	adc    al,0xe7
  412277:	add    esi,DWORD PTR [ecx]
  412279:	adc    al,0xe7
  41227b:	add    esi,DWORD PTR [ecx]
  41227d:	adc    al,0xe7
  41227f:	add    esi,DWORD PTR [ecx]
  412281:	adc    al,0xe7
  412283:	add    esi,DWORD PTR [ecx]
  412285:	adc    al,0xe7
  412287:	add    esi,DWORD PTR [ecx]
  412289:	adc    al,0xe7
  41228b:	add    eax,DWORD PTR [eax]
  41228d:	add    BYTE PTR [ecx],dh
  41228f:	adc    al,0xe7
  412291:	add    esi,DWORD PTR [ecx]
  412293:	adc    al,0xe7
  412295:	add    esi,DWORD PTR [ecx]
  412297:	adc    al,0xe7
  412299:	add    esi,DWORD PTR [ecx]
  41229b:	adc    al,0xe7
  41229d:	add    esi,DWORD PTR [ecx]
  41229f:	adc    al,0xe7
  4122a1:	add    esi,DWORD PTR [ecx]
  4122a3:	adc    al,0x0
  4122a5:	jmp    0xe94136dc
  4122aa:	xor    dl,BYTE PTR [eax+eax*1]
  4122ad:	jmp    0xe94136e4
  4122b2:	xor    dl,BYTE PTR [eax+eax*1]
  4122b5:	jmp    0xe94136ec
  4122ba:	xor    dl,BYTE PTR [eax+eax*1]
  4122bd:	jmp    0xe94136f4
  4122c2:	xor    dl,BYTE PTR [eax+eax*1]
  4122c5:	jmp    0xe94136fc
  4122ca:	xor    dl,BYTE PTR [eax+eax*1]
  4122cd:	jmp    0xe9413704
  4122d2:	xor    dl,BYTE PTR [eax+eax*1]
  4122d5:	fcomp  DWORD PTR [ebx+eiz*1+0x34]
  4122d9:	aam    0x40
  4122db:	adc    al,0x70
  4122dd:	mov    ch,bh
  4122df:	bound  esi,QWORD PTR [ebp-0x72]
  4122e2:	add    al,0x78
  4122e4:	add    BYTE PTR [ecx+0xa],bh
  4122e7:	bound  ecx,QWORD PTR fs:[ebx+0x4c757132]
  4122ee:	jecxz  0x412357
  4122f0:	ja     0x4122db
  4122f2:	add    BYTE PTR [eax],al
  4122f4:	and    eax,0x201d3126
  4122f9:	adc    al,0x6a
  4122fb:	inc    esp
  4122fc:	ret    0x7164
  4122ff:	jmp    0xf5724901
  412304:	add    DWORD PTR [edx],ebp
  412306:	xor    eax,0x323132f1
  41230b:	cli    
  41230c:	pop    esi
  41230d:	adc    al,0x5f
  41230f:	or     edx,DWORD PTR [edx+0x32da322f]
  412315:	jo     0x41237a
  412317:	sbb    eax,0xff677388
  41231c:	xor    ch,BYTE PTR [eax+0x63]
  41231f:	add    BYTE PTR [ebx],cl
  412321:	jo     0x412323
  412323:	ins    BYTE PTR es:[edi],dx
  412324:	das    
  412325:	outs   dx,BYTE PTR ds:[esi]
  412326:	popa   
  412327:	add    BYTE PTR [ecx-0x17ffd0db],bh
  41232d:	js     0x41239e
  41232f:	jae    0x412338
  412331:	ja     0x4123a5
  412333:	cmp    DWORD PTR fs:[eax],ebx
  412336:	push   0x6b77ec65
  41233b:	add    BYTE PTR [ebp-0xa94918a],cl
  412341:	pusha  
  412342:	add    BYTE PTR [edx+edi*2+0x78],ah
  412346:	arpl   WORD PTR [edi-0x12],bp
  412349:	adc    esi,DWORD PTR [edx+esi*2-0x1b]
  41234d:	bound  esi,QWORD PTR [esi+ebp*2-0x41]
  412351:	sub    BYTE PTR [eax],al
  412353:	xor    DWORD PTR [ecx+0x28],edi
  412356:	sub    eax,0x79000031
  41235b:	adc    esp,DWORD PTR [ebp+0x6c]
  41235e:	(bad)  
  412360:	popa   
  412361:	jns    0x412302
  412363:	add    BYTE PTR fs:[ecx],dh
  412366:	mov    edx,0xb6353422
  41236b:	add    BYTE PTR cs:[ebx-0x50],dh
  41236f:	js     0x4123d5
  412371:	outs   dx,DWORD PTR ds:[esi]
  412372:	pop    es
  412373:	sbb    BYTE PTR ds:0x31243b32,ch
  412379:	ss aaa 
  41237b:	and    BYTE PTR ds:0x726ffb00,dh
  412381:	imul   ecx,DWORD PTR [ebx],0x5730064
  412387:	jbe    0x4123f8
  412389:	push   0x6175f1
  41238e:	ins    DWORD PTR es:[edi],dx
  41238f:	jns    0x412400
  412391:	je     0x4123c8
  412393:	bound  eax,QWORD PTR [eax]
  412395:	arpl   WORD PTR [edi],bp
  412397:	ins    DWORD PTR es:[edi],dx
  412398:	jo     0x41240f
  41239a:	xor    DWORD PTR [ecx],eax
  41239c:	pop    edi
  41239d:	jb     0x4123d0
  41239f:	std    
  4123a0:	jno    0x412409
  4123a2:	xchg   edi,eax
  4123a3:	or     bl,BYTE PTR [edi+0x71]
  4123a6:	sub    ch,0x6d
  4123a9:	mov    cs,WORD PTR ds:0x725f
  4123ae:	xor    DWORD PTR [edi],edx
  4123b0:	gs ins DWORD PTR es:[edi],dx
  4123b2:	pop    ebp
  4123b3:	retf   
  4123b4:	fs ins BYTE PTR es:[edi],dx
  4123b6:	dec    ebp
  4123b7:	in     eax,dx
  4123b8:	outs   dx,BYTE PTR fs:[esi]
  4123ba:	dec    esi
  4123bb:	shl    BYTE PTR [ebp+0x0],1
  4123be:	add    BYTE PTR [eax],al
  4123c0:	pop    ebx
  4123c1:	fdiv   DWORD PTR [edx+0x73]
  4123c4:	inc    edx
  4123c5:	fadd   QWORD PTR [ecx]
  4123c7:	das    
  4123c8:	add    ebx,edx
  4123ca:	xor    al,0x32
  4123cc:	add    ch,ch
  4123ce:	outs   dx,BYTE PTR ds:[esi]
  4123cf:	push   0x7660a910
  4123d4:	or     al,0x7b
  4123d6:	add    DWORD PTR [esi+0x23],esp
  4123d9:	cwde   
  4123da:	pusha  
  4123db:	fs push es
  4123dd:	cwde   
  4123de:	add    DWORD PTR [ecx+0x18],ebp
  4123e1:	popa   
  4123e2:	arpl   WORD PTR gs:[ebx],ax
  4123e5:	in     eax,dx
  4123e6:	fs jno 0x4123fe
  4123e9:	xchg   edi,eax
  4123ea:	add    DWORD PTR [ecx+0x6],esi
  4123ed:	mov    ah,BYTE PTR [edx+0x63]
  4123f0:	jecxz  0x4123de
  4123f2:	jb     0x412467
  4123f4:	loope  0x412445
  4123f6:	jb     0x412463
  4123f8:	ror    BYTE PTR [esi+0x4],1
  4123fb:	imul   ecx,eax,0x49
  4123fe:	ins    BYTE PTR es:[edi],dx
  4123ff:	pop    edi
  412400:	aam    0x20
  412402:	add    al,0x61
  412404:	(bad)  [edi+0x5d]
  412407:	jno    0x4123dd
  412409:	in     al,dx
  41240a:	push   0x6e
  41240c:	mov    ebp,0x946e724f
  412411:	daa    
  412412:	add    al,0x6a
  412414:	xchg   esi,eax
  412415:	adc    al,0x1a
  412417:	ins    BYTE PTR es:[edi],dx
  412418:	mov    ds:0xa25de773,al
  41241d:	jno    0x412421
  41241f:	jnp    0x4123bd
  412421:	addr16 out 0x61,eax
  412424:	add    BYTE PTR [eax],al
  412426:	xchg   ebp,eax
  412427:	ja     0x412423
  412429:	jo     0x4123bd
  41242b:	js     0x412414
  41242d:	popa   
  41242e:	push   esi
  41242f:	popa   
  412430:	or     al,0x62
  412432:	mov    ?,WORD PTR [eax-0x5]
  412435:	add    esp,DWORD PTR [eax+0x68]
  412438:	enter  0x6471,0x73
  41243c:	fnstenv [eax+0x31]
  41243f:	and    al,0x17
  412441:	xor    al,0x1
  412443:	and    al,0x17
  412445:	add    al,0x41
  412447:	addr16 mov ecx,0xe7774d73
  41244d:	imul   eax,DWORD PTR [edx+eiz*2-0x35],0xc5141f62
  412455:	bound  ecx,QWORD PTR [esi]
  412457:	push   0x6720038f
  41245c:	mov    WORD PTR [esi+0x12],fs
  41245f:	(bad)  
  412460:	out    0x62,eax
  412462:	add    BYTE PTR [ebx+edi*2+0x5e],ch
  412466:	(bad)  
  412467:	adc    ecx,DWORD PTR [ecx-0x7b97ff92]
  41246d:	jno    0x4124a0
  41246f:	ins    BYTE PTR es:[edi],dx
  412470:	mov    WORD PTR [edx-0x19],fs
  412473:	jbe    0x4124f2
  412475:	add    esp,ecx
  412477:	jbe    0x4124d0
  412479:	je     0x41244d
  41247b:	popa   
  41247c:	out    0x2c,eax
  41247e:	sbb    al,0x25
  412480:	push   ds
  412481:	sub    eax,0x6be72504
  412486:	ret    0x3b6d
  412489:	pop    edi
  41248a:	add    BYTE PTR [eax],al
  41248c:	ret    
  41248d:	adc    ecx,DWORD PTR [ebx+0x65]
  412490:	mov    edi,0xaa450076
  412495:	adc    al,0x5f
  412497:	aas    
  412498:	xchg   ecx,eax
  412499:	bound  esp,QWORD PTR [ebx+0x1e]
  41249c:	xor    eax,0x8e0e6868
  4124a1:	cmp    eax,0x6e93e971
  4124a6:	gs add al,0x99
  4124a9:	arpl   WORD PTR [eax],ax
  4124ab:	or     cl,BYTE PTR [ebp-0x75f28dc3]
  4124b1:	jno    0x4124b3
  4124b3:	or     eax,0x4676e52
  4124b8:	pop    ecx
  4124b9:	adc    al,0x2f
  4124bb:	sbb    BYTE PTR [edx],ah
  4124bd:	sub    eax,0x6e77d300
  4124c2:	outs   dx,BYTE PTR ds:[esi]
  4124c3:	shr    BYTE PTR [ecx+esi*2+0x72],0xe9
  4124c8:	inc    ecx
  4124c9:	jne    0x412539
  4124cb:	into   
  4124cc:	push   esi
  4124cd:	jno    0x4124cf
  4124cf:	rcl    DWORD PTR [ebx+0x6e],1
  4124d2:	outs   dx,BYTE PTR ds:[esi]
  4124d3:	enter  0x141a,0x6f
  4124d7:	enter  0x6728,0x71
  4124db:	mov    eax,ds:0x995f6c32
  4124e0:	and    ah,BYTE PTR [ebp+0x0]
  4124e3:	test   BYTE PTR [ebx],dl
  4124e5:	push   0x140a8072
  4124ea:	jo     0x412474
  4124ec:	add    DWORD PTR [ebx+0x0],esp
  4124ef:	mov    BYTE PTR [eax],al
  4124f1:	add    BYTE PTR [ebx],dl
  4124f3:	cmp    eax,0x13d3885f
  4124f8:	ss mov ah,0x16
  4124fb:	and    esi,DWORD PTR [edx]
  4124fd:	sbb    BYTE PTR ds:0xd3486b3d,dh
  412503:	ja     0x412564
  412505:	jmp    0x41b593da
  41250a:	in     al,0x6d
  41250c:	add    BYTE PTR gs:[eax+0x69],cl
  412510:	outs   dx,BYTE PTR gs:[esi]
  412512:	out    dx,eax
  412513:	push   0x72
  412515:	add    BYTE PTR [ebp+0x77],dh
  412518:	je     0x412582
  41251a:	ins    DWORD PTR es:[edi],dx
  41251b:	bound  eax,QWORD PTR [eax]
  41251d:	jae    0x412565
  41251f:	ja     0x41258c
  412521:	jo     0x412574
  412523:	adc    BYTE PTR [edx+0x65],ch
  412526:	sub    esp,DWORD PTR [ebx+0x65]
  412529:	arpl   WORD PTR [ecx],di
  41252b:	adc    BYTE PTR [ebx+0x65],dh
  41252e:	and    al,0x73
  412530:	imul   ebp,DWORD PTR [ebp+0x2d],0x10
  412534:	jo     0x4125a5
  412536:	xor    ebp,DWORD PTR [ebp+0x69]
  412539:	outs   dx,DWORD PTR ds:[esi]
  41253a:	out    0x17,al
  41253c:	gs ins BYTE PTR es:[edi],dx
  41253e:	pop    es
  41253f:	pop    esi
  412540:	popa   
  412541:	jns    0x41252a
  412543:	pop    esp
  412544:	sub    eax,0x2d212900
  412549:	xor    DWORD PTR [ecx],ebp
  41254b:	adc    BYTE PTR [ecx+0x75],ch
  41254e:	jnp    0x4125b3
  412550:	pop    ebp
  412551:	outs   dx,BYTE PTR ds:[esi]
  412552:	out    dx,eax
  412553:	pop    ss
  412554:	push   0x74000065
  412559:	imul   esp,DWORD PTR [di-0x68],0xbc737139
  412561:	cmp    BYTE PTR [esi+0x0],ch
  412564:	ret    0x6f70
  412567:	ins    DWORD PTR es:[edi],dx
  412568:	mov    cl,0x75
  41256a:	popa   
  41256b:	add    BYTE PTR [edi],al
  41256d:	popa   
  41256e:	pop    ebp
  41256f:	outs   dx,BYTE PTR ds:[esi]
  412570:	scas   eax,DWORD PTR es:[edi]
  412571:	ins    BYTE PTR es:[edi],dx
  412572:	add    BYTE PTR [ebp+ebp*4+0x62],dh
  412576:	je     0x4125e1
  412578:	mov    dh,0x6e
  41257a:	add    BYTE PTR [ecx-0x18],ah
  41257d:	data16 ins BYTE PTR es:[edi],dx
  41257f:	gs dec eax
  412581:	je     0x4125e8
  412583:	arpl   WORD PTR [eax],ax
  412585:	ins    DWORD PTR es:[edi],dx
  412586:	ins    BYTE PTR es:[edi],dx
  412587:	ins    BYTE PTR es:[edi],dx
  412588:	xor    DWORD PTR [eax+0x4],ecx
  41258b:	jo     0x412559
  41258d:	dec    ebx
  41258e:	arpl   WORD PTR gs:[ecx],si
  412591:	push   ds
  412592:	addr16 popa 
  412594:	ret    
  412595:	dec    edi
  412596:	js     0x412598
  412598:	pusha  
  412599:	in     eax,dx
  41259a:	push   0x72
  41259c:	nop
  41259d:	dec    esi
  41259e:	add    BYTE PTR [bp+0x6004],ah
  4125a3:	ins    BYTE PTR es:[edi],dx
  4125a4:	mov    BYTE PTR [edi+ebx*2],cl
  4125a7:	add    BYTE PTR [eax-0x73899eef],bl
  4125ad:	add    al,0x61
  4125af:	jae    0x4125f4
  4125b1:	in     eax,dx
  4125b2:	pop    edi
  4125b3:	addr16 xchg edx,eax
  4125b5:	or     ah,BYTE PTR [eax+0x63]
  4125b8:	xor    DWORD PTR [ebx+0x3637],ebx
  4125be:	pop    ds
  4125bf:	mov    ds:0xb84c0037,eax
  4125c4:	addr16 dec ax
  4125c7:	retf   
  4125c8:	add    DWORD PTR [ebp+0x50],esp
  4125cb:	mov    ecx,0xc4507568
  4125d0:	add    DWORD PTR [esi+0x44],esp
  4125d3:	into   
  4125d4:	pop    esi
  4125d5:	ja     0x41261d
  4125d7:	mov    al,ds:0x9e100034
  4125dc:	jbe    0x412646
  4125de:	push   ss
  4125df:	cdq    
  4125e0:	push   0x598c0900
  4125e5:	pop    edi
  4125e6:	or     DWORD PTR [ecx+eax*1+0x71921e70],ecx
  4125ed:	add    BYTE PTR [ebx],dl
  4125ef:	pop    ecx
  4125f0:	push   0x5f840271
  4125f5:	xor    DWORD PTR gs:[edi-0x7126a0a3],ecx
  4125fc:	pop    ebp
  4125fd:	pop    edi
  4125fe:	fldlg2 
  412600:	pusha  
  412601:	ja     0x4125e5
  412603:	adc    edx,DWORD PTR [edi+0x63]
  412606:	shl    BYTE PTR [eax+0x18],1
  412609:	add    al,0xda
  41260b:	je     0x412668
  41260d:	js     0x4125e8
  41260f:	jo     0x412667
  412611:	add    al,0xd0
  412613:	je     0x41266a
  412615:	arpl   bp,cx
  412617:	je     0x412600
  412619:	je     0x4125b1
  41261b:	push   0x14a3673d
  412620:	cmp    DWORD PTR [ecx+0x0],esp
  412623:	add    BYTE PTR [ebx+0x3178196f],dl
  412629:	jb     0x412639
  41262b:	jbe    0x4125bf
  41262d:	bound  ecx,QWORD PTR [esi+esi*2]
  412630:	xor    DWORD PTR [ebx+0x1a],esi
  412633:	push   0x40f7197
  412638:	xor    DWORD PTR [ebx+0xa],0x5c
  41263c:	push   edx
  41263d:	push   0x6b8675e7
  412642:	std    
  412643:	gs dec esp
  412645:	popa   
  412646:	out    0x68,eax
  412648:	bound  ebp,QWORD PTR [ebx-0x2d]
  41264b:	bound  eax,QWORD PTR [ebx+0x14]
  41264e:	xlat   BYTE PTR ds:[ebx]
  41264f:	data16 pushw 0xffd4
  412653:	ja     0x412686
  412655:	jbe    0x41261f
  412657:	ja     0x4126a3
  412659:	jae    0x412628
  41265b:	add    edx,DWORD PTR [eax]
  41265d:	imul   eax,esi,0xe76f0e5c
  412663:	gs (bad) 
  412665:	push   0xffffff93
  412667:	pushw  ds
  412669:	adc    al,0x9a
  41266b:	pusha  
  41266c:	adc    BYTE PTR [ebp-0x74],dh
  41266f:	jne    0x4126c7
  412671:	adc    al,0x7c
  412673:	pop    edx
  412674:	adc    BYTE PTR [ebp-0x74],ch
  412677:	push   0x31
  412679:	jbe    0x41260b
  41267b:	ja     0x41264f
  41267d:	data16 add BYTE PTR [edx+esi*1-0x1829c94],cl
  412685:	data16 das 
  412687:	jmp    0x6d10268c
  41268c:	addr16 dec edi
  41268e:	(bad)  
  41268f:	ins    BYTE PTR es:[edi],dx
  412690:	add    BYTE PTR [ebp-0x2e],cl
  412693:	push   0x6d
  412695:	push   ebp
  412696:	rcl    BYTE PTR [ebx],cl
  412698:	jno    0x4126e2
  41269a:	(bad)  
  41269b:	cmp    BYTE PTR [esi+0x35],ch
  41269e:	lea    edi,[ecx]
  4126a0:	add    BYTE PTR [edx-0x70],cl
  4126a3:	ins    DWORD PTR es:[edi],dx
  4126a4:	jo     0x4126ee
  4126a6:	mov    ds:0x92106414,al
  4126ab:	ins    DWORD PTR es:[edi],dx
  4126ac:	ins    DWORD PTR es:[edi],dx
  4126ad:	setns  BYTE PTR [esp+esi*2]
  4126b1:	or     BYTE PTR [edx+0x351b6d68],bl
  4126b7:	jb     0x412726
  4126b9:	sti    
  4126ba:	jg     0x412729
  4126bc:	add    BYTE PTR [ebx],dl
  4126be:	push   eax
  4126bf:	ins    BYTE PTR es:[edi],dx
  4126c0:	outs   dx,BYTE PTR ds:[esi]
  4126c1:	mov    edx,0xfb002223
  4126c6:	jnp    0x41273b
  4126c8:	push   0x705cc8
  4126cd:	retf   
  4126ce:	outs   dx,BYTE PTR ds:[esi]
  4126cf:	jno    0x41273f
  4126d1:	ret    0x1c03
  4126d4:	xor    ch,cl
  4126d6:	inc    edx
  4126d7:	jne    0x412738
  4126d9:	retf   0x755a
  4126dc:	jno    0x4126c7
  4126de:	adc    eax,0x32c56d67
  4126e3:	jb     0x412751
  4126e5:	mov    esi,0xe9727519
  4126ea:	sbb    eax,0x8e6d73
  4126ef:	add    BYTE PTR [esi],al
  4126f1:	jne    0x412765
  4126f3:	jmp    0x88af6004
  4126f8:	adc    BYTE PTR [ecx],bh
  4126fa:	add    BYTE PTR [eax],al
  4126fc:	mov    ds:0xeb656975,al
  412701:	adc    al,0x5d
  412703:	jae    0x4126b9
  412705:	push   0x5d
  412707:	jae    0x4126bd
  412709:	push   0x0
  41270b:	jbe    0x41270e
  41270d:	jne    0x412783
  41270f:	outs   dx,DWORD PTR ds:[esi]
  412710:	jmp    0x6439:0xef6c0066
  412717:	outs   dx,DWORD PTR ds:[esi]
  412718:	dec    BYTE PTR [edi]
  41271a:	sub    eax,0x735f3b32
  41271f:	sbb    BYTE PTR gs:[ecx],ah
  412722:	xor    dh,BYTE PTR [ebx]
  412724:	sub    esp,DWORD PTR [esi]
  412726:	sub    eax,0x5d5c5b00
  41272b:	jb     0x412761
  41272d:	bound  esp,QWORD PTR [ecx+0x6b]
  412730:	sbb    BYTE PTR [edi+0x61],ch
  412733:	outs   dx,DWORD PTR ds:[esi]
  412734:	sub    ch,BYTE PTR [edi+0x61]
  412737:	add    BYTE PTR [edi],ah
  412739:	cmp    DWORD PTR [esi+0x6e],ebp
  41273c:	and    eax,0x396d0062
  412741:	outs   dx,DWORD PTR ds:[esi]
  412742:	arpl   WORD PTR [ecx+0x35],bp
  412745:	adc    BYTE PTR [edx+esi*2+0x31],dh
  412749:	ss gs je 0x41271e
  41274d:	adc    ebp,DWORD PTR [ebx+0x6e]
  412750:	cld    
  412751:	cmp    BYTE PTR [esi+0x65],ch
  412754:	add    BYTE PTR [eax],al
  412756:	fsub   DWORD PTR [eax]
  412758:	xor    dh,BYTE PTR [ebx]
  41275a:	jmp    0xeb4186d4
  41275f:	cmp    esp,DWORD PTR [ebp+0x63]
  412762:	sub    DWORD PTR [esi+ebp*2+0x0],0x72
  412767:	pop    esp
  412768:	outs   dx,BYTE PTR ds:[esi]
  412769:	imul   ebx,edi,0xc0630065
  41276f:	gs gs jae 0x41270b
  412773:	arpl   WORD PTR [ebp+0x73],bx
  412776:	xor    DWORD PTR [edx+0x76],edi
  412779:	xor    BYTE PTR [ebx],al
  41277b:	xchg   ecx,eax
  41277c:	add    DWORD PTR [edi-0x4],ebx
  41277f:	pop    ecx
  412780:	jne    0x4127e9
  412782:	fucomip st,st(4)
  412784:	jb     0x4127f6
  412786:	rcr    BYTE PTR [edx+0x5a],1
  412789:	ja     0x4127bc
  41278b:	mov    WORD PTR [ebp+0x6b],fs
  41278e:	enter  0x43e,0x6b
  412792:	aam    0x3a
  412794:	pusha  
  412795:	xlat   BYTE PTR ds:[bx]
  412797:	in     al,dx
  412798:	ins    WORD PTR es:[edi],dx
  41279a:	into   
  41279b:	dec    ebp
  41279c:	pusha  
  41279d:	arpl   WORD PTR [ecx],si
  41279f:	inc    edi
  4127a0:	jb     0x412809
  4127a2:	xchg   esp,eax
  4127a3:	inc    edi
  4127a4:	push   0x5d553171
  4127a9:	jo     0x41273f
  4127ab:	in     eax,dx
  4127ac:	jb     0x412816
  4127ae:	nop
  4127af:	add    DWORD PTR [ebp+0x6b],ebx
  4127b2:	xor    DWORD PTR [edi],eax
  4127b4:	pop    ebx
  4127b5:	outs   dx,BYTE PTR ds:[esi]
  4127b6:	jge    0x4127c0
  4127b8:	pop    esi
  4127b9:	add    BYTE PTR fs:[eax],al
  4127bc:	mov    gs,ebp
  4127be:	pop    ebp
  4127bf:	ins    DWORD PTR es:[edi],dx
  4127c0:	xchg   BYTE PTR [edx],al
  4127c2:	pop    ebx
  4127c3:	outs   dx,BYTE PTR ds:[esi]
  4127c4:	push   esi
  4127c5:	in     eax,dx
  4127c6:	pop    ecx
  4127c7:	pop    edi
  4127c8:	arpl   WORD PTR [ecx],dx
  4127ca:	addr16 ja 0x4127fe
  4127cd:	fisub  DWORD PTR [eax+0x6d]
  4127d0:	dec    edx
  4127d1:	enter  0x6c,0x6
  4127d5:	(bad)  
  4127d6:	xor    al,0x35
  4127d8:	xor    ebx,edx
  4127da:	pop    esi
  4127db:	jno    0x412831
  4127dd:	mov    ebp,0x98450059
  4127e2:	bound  ebp,QWORD PTR [ecx+0x28]
  4127e5:	in     eax,dx
  4127e6:	gs addr16 push cs
  4127e9:	aam    0x75
  4127eb:	pop    edi
  4127ec:	or     eax,0x1d0064ed
  4127f1:	adc    al,0x8f
  4127f3:	js     0x412814
  4127f5:	jo     0x41277b
  4127f7:	jno    0x41282a
  4127f9:	arpl   WORD PTR [edi-0x6c92fca4],dx
  4127ff:	add    edx,DWORD PTR [ebx]
  412801:	jne    0x412798
  412803:	addr16 (bad) 
  412805:	pop    edi
  412806:	out    0x68,eax
  412808:	xlat   BYTE PTR ds:[ebx]
  412809:	pop    edi
  41280a:	mov    WORD PTR [ecx+0x31],?
  41280d:	jne    0x41288c
  41280f:	ja     0x4127da
  412811:	push   bp
  412813:	imul   esi,DWORD PTR [ecx],0x73
  412816:	dec    esi
  412817:	jb     0x4127d8
  412819:	jo     0x412876
  41281b:	js     0x4127ef
  41281d:	adc    edi,DWORD PTR [edi]
  41281f:	pop    ebp
  412820:	add    BYTE PTR [eax],al
  412822:	shr    BYTE PTR [edx+0x4c],1
  412825:	imul   esi,DWORD PTR [ecx],0x64
  412828:	dec    esi
  412829:	jne    0x4127bd
  41282b:	(bad)  
  41282c:	out    0x61,eax
  41282e:	xchg   edx,eax
  41282f:	inc    cx
  412831:	arpl   WORD PTR [edx-0x69fbea95],cx
  412837:	push   0x5b92760e
  41283c:	push   es
  41283d:	ja     0x41285d
  41283f:	adc    al,0xd8
  412841:	jb     0x412886
  412843:	pop    ebp
  412844:	mov    edx,0x105e3166
  412849:	je     0x41289d
  41284b:	(bad)  
  41284c:	out    0x64,eax
  41284e:	push   edx
  41284f:	data16 add al,0x71
  412852:	dec    esi
  412853:	popa   
  412854:	out    0x58,eax
  412856:	pop    edi
  412857:	imul   eax,esi,0x5b
  41285a:	cmp    eax,0x5274d814
  41285f:	(bad)  
  412861:	push   0x6
  412863:	adc    al,0xca
  412865:	jno    0x412879
  412867:	jae    0x41281c
  412869:	pop    edx
  41286a:	pop    ds
  41286b:	outs   dx,DWORD PTR ds:[esi]
  41286c:	add    cl,ch
  41286e:	adc    al,0x67
  412870:	ins    DWORD PTR es:[edi],dx
  412871:	retf   
  412872:	adc    esp,DWORD PTR [edx+0x0]
  412875:	mov    BYTE PTR [esi],dl
  412877:	ins    DWORD PTR es:[edi],dx
  412878:	mov    BYTE PTR fs:[ecx],al
  41287b:	adc    al,0x72
  41287d:	xchg   BYTE PTR [esi],al
  41287f:	ins    DWORD PTR es:[edi],dx
  412880:	imul   eax,DWORD PTR [eax-0x77939cce],0x0
  412887:	add    bl,bl
  412889:	jo     0x4128fd
  41288b:	jmp    0x8db2956d
  412890:	std    
  412891:	push   0x34e07900
  412896:	addr16 pop edx
  412898:	(bad)  
  412899:	adc    edi,DWORD PTR [edx+0x61]
  41289c:	rcr    BYTE PTR [ebp+0x62],1
  41289f:	inc    edi
  4128a0:	ficom  WORD PTR [ebx]
  4128a2:	jno    0x4128ec
  4128a4:	(bad)  
  4128a5:	pusha  
  4128a6:	arpl   WORD PTR [ebp+0x35],dx
  4128a9:	imul   esp,DWORD PTR [edi+0x52],0x4864148e
  4128b0:	xchg   ecx,eax
  4128b1:	push   0x6f2d3a5f
  4128b6:	jb     0x4128c4
  4128b8:	xchg   esi,eax
  4128b9:	data16 add BYTE PTR ds:0x1d74638e,dl
  4128c0:	xchg   esi,eax
  4128c1:	arpl   WORD PTR [ecx+ebp*8+0x57],si
  4128c5:	xor    eax,0x6d630c76
  4128ca:	popa   
  4128cb:	adc    ch,BYTE PTR ds:0x510c6e67
  4128d1:	addr16 jbe 0x4128d8
  4128d4:	sub    eax,0x6bdf5f70
  4128d9:	jo     0x4128db
  4128db:	int3   
  4128dc:	pop    ebx
  4128dd:	push   0x1457df6d
  4128e2:	popa   
  4128e3:	sar    DWORD PTR [edi],0x62
  4128e6:	popa   
  4128e7:	add    BYTE PTR [eax+0x726610],al
  4128ed:	add    BYTE PTR [ecx-0x779b9193],al
  4128f3:	outs   dx,DWORD PTR ds:[esi]
  4128f4:	imul   esp,DWORD PTR [eax+ecx*4+0x6c],0x61
  4128f9:	jae    0x4128a7
  4128fb:	cmp    DWORD PTR [esi+0x79],ebp
  4128fe:	cwde   
  4128ff:	imul   ebp,DWORD PTR ss:[esi-0x53],0x10
  412904:	imul   ebp,DWORD PTR [ecx-0x55],0xc7736b62
  41290b:	outs   dx,BYTE PTR ds:[esi]
  41290c:	je     0x41290e
  41290e:	stos   BYTE PTR es:[edi],al
  41290f:	and    dh,BYTE PTR [edx]
  412911:	xor    bl,BYTE PTR [edx-0x229dffde]
  412917:	jb     0x41297b
  412919:	ins    BYTE PTR es:[edi],dx
  41291a:	std    
  41291b:	pop    esp
  41291c:	add    BYTE PTR [ecx],dh
  41291e:	sub    DWORD PTR [edi],ebx
  412920:	sub    eax,0x2d1f1931
  412925:	add    bl,ch
  412927:	cmp    BYTE PTR [edi+0x61],bl
  41292a:	jnp    0x41299b
  41292c:	ins    BYTE PTR es:[edi],dx
  41292d:	popa   
  41292e:	sbb    BYTE PTR [edx+0x6b],dh
  412931:	jb     0x41299f
  412933:	cmp    DWORD PTR [esi+0x32],ebp
  412936:	sbb    ebx,DWORD PTR [eax]
  412938:	gs ins BYTE PTR es:[edi],dx
  41293a:	daa    
  41293b:	inc    esi
  41293c:	popa   
  41293d:	addr16 aaa 
  41293f:	xor    al,0x0
  412941:	data16 aaa 
  412943:	outs   dx,DWORD PTR ds:[esi]
  412944:	je     0x4129a8
  412946:	sub    DWORD PTR [esp+ebp*2+0x31],ebp
  41294a:	fsubr  DWORD PTR [ebx+0x6b]
  41294d:	jbe    0x412990
  41294f:	outs   dx,BYTE PTR ds:[esi]
  412950:	arpl   WORD PTR [eax],ax
  412952:	add    BYTE PTR [eax],al
  412954:	cmp    DWORD PTR ss:[eax+ebp*2+0x29],esi
  412959:	outs   dx,BYTE PTR ds:[esi]
  41295a:	add    BYTE PTR [ebp-0x1b],ah
  41295d:	ins    BYTE PTR es:[edi],dx
  41295e:	pop    ebp
  41295f:	outs   dx,BYTE PTR ds:[esi]
  412960:	fnsave [esp+ebp*2]
  412963:	add    BYTE PTR [ecx],dh
  412965:	out    dx,al
  412966:	ins    WORD PTR es:[edi],dx
  412968:	inc    esi
  412969:	fild   QWORD PTR [eax+eax*1+0x17]
  41296d:	nop
  41296e:	imul   dx,WORD PTR [esi],0x5fdb
  412973:	add    BYTE PTR [edx],ah
  412975:	fcomp  QWORD PTR [eax+0x6b]
  412978:	sbb    BYTE PTR [ebp-0x4df6a0a8],bh
  41297e:	pusha  
  41297f:	ins    BYTE PTR es:[edi],dx
  412980:	adc    eax,0x25f5bbd
  412985:	call   0x6e59:0x520b0057
  41298c:	xor    DWORD PTR [esp+esi*2+0x608dde32],ecx
  412993:	xor    al,0xe3
  412995:	mov    esp,0x43d35f63
  41299a:	add    DWORD PTR [edx-0x2c],esi
  41299d:	pusha  
  41299e:	xor    esi,DWORD PTR [edx]
  4129a0:	add    bh,BYTE PTR [ebp+0x5ed06c63]
  4129a6:	pop    eax
  4129a7:	pop    edi
  4129a8:	xor    DWORD PTR [ebp+0x76],ebp
  4129ab:	addr16 lahf 
  4129ad:	pop    esi
  4129ae:	pop    edi
  4129af:	add    BYTE PTR [eax-0x5a8da0f6],ah
  4129b5:	mov    ebp,0x6866
  4129ba:	mov    WORD PTR [ecx],ss
  4129bc:	jne    0x412a21
  4129be:	nop
  4129bf:	mov    ebp,0xe83c3330
  4129c4:	xor    BYTE PTR [eax],al
  4129c6:	nop
  4129c7:	sbb    esp,DWORD PTR [ecx+0x63]
  4129ca:	test   esp,ebp
  4129cc:	add    DWORD PTR [eax+0x50],ebp
  4129cf:	iret   
  4129d0:	pop    ebp
  4129d1:	popa   
  4129d2:	push   esi
  4129d3:	iret   
  4129d4:	pusha  
  4129d5:	add    BYTE PTR [ebp+0x20],dl
  4129d8:	ins    BYTE PTR es:[edi],dx
  4129d9:	je     0x412a27
  4129db:	iret   
  4129dc:	add    DWORD PTR [ecx+0x50],esi
  4129df:	adc    al,0xdd
  4129e1:	pusha  
  4129e2:	dec    ebp
  4129e3:	adc    al,0x18
  4129e5:	xor    eax,0x371a0603
  4129ea:	xor    DWORD PTR [eax+ecx*8],edi
  4129ed:	push   edi
  4129ee:	sbb    eax,0x65de743
  4129f3:	inc    edi
  4129f4:	mov    bh,0x60
  4129f6:	and    edx,DWORD PTR [ebx+ecx*8]
  4129f9:	fs pop es
  4129fb:	cmp    eax,0x391d57c4
  412a00:	out    0x5e,eax
  412a02:	push   cs
  412a03:	dec    eax
  412a04:	xchg   ebx,eax
  412a05:	pusha  
  412a06:	unpcklps xmm1,XMMWORD PTR [edx-0x7fb8ff9c]
  412a0d:	pusha  
  412a0e:	xor    DWORD PTR [edi+0x7b],eax
  412a11:	pusha  
  412a12:	aad    0x3f
  412a14:	mov    BYTE PTR [ebx],al
  412a16:	loope  0x412a5d
  412a18:	mov    BYTE PTR [edx+edx*8+0x45],ch
  412a1c:	out    0x5b,eax
  412a1e:	add    BYTE PTR [eax],al
  412a20:	fadd   QWORD PTR [edi+0x4b]
  412a23:	pop    ecx
  412a24:	int3   
  412a25:	adc    edx,DWORD PTR [esi+0x5b]
  412a28:	iret   
  412a29:	aaa    
  412a2a:	inc    esi
  412a2b:	jno    0x4129ed
  412a2d:	adc    edi,DWORD PTR [edi+ebp*2]
  412a30:	mov    al,ds:0x925b4b48
  412a35:	adc    al,0x46
  412a37:	arpl   WORD PTR [ebp-0x6cfbc5c9],sp
  412a3d:	cmp    edi,DWORD PTR [ebx]
  412a3f:	pop    eax
  412a40:	xchg   esp,eax
  412a41:	xor    ebx,DWORD PTR [ebx]
  412a43:	pop    edi
  412a44:	adc    BYTE PTR [esi+eax*1],0x5c
  412a48:	xchg   ebx,eax
  412a49:	cmp    BYTE PTR [ebx],bl
  412a4b:	pop    edx
  412a4c:	xor    DWORD PTR [ecx],edi
  412a4e:	add    eax,0x143d5b5c
  412a53:	add    al,0x16
  412a55:	push   es
  412a56:	mov    edx,0xa222f
  412a5b:	mov    esi,0xe930090a
  412a60:	xor    dh,BYTE PTR ds:0x4a3ce274
  412a66:	imul   ecx,esi,0xdc754244
  412a6c:	xor    bh,BYTE PTR [esp+esi*2]
  412a6f:	aad    0x22
  412a71:	push   cs
  412a72:	sub    eax,0x2e0c6016
  412a77:	clc    
  412a78:	or     DWORD PTR fs:[esi],ebp
  412a7b:	clc    
  412a7c:	pop    ebp
  412a7d:	push   es
  412a7e:	cs sti 
  412a80:	inc    ebp
  412a81:	or     DWORD PTR [edx],edi
  412a83:	loope  0x412a85
  412a85:	add    BYTE PTR [edx+0xc],al
  412a88:	xor    dh,cl
  412a8a:	add    bh,BYTE PTR [edi]
  412a8c:	outs   dx,BYTE PTR ds:[esi]
  412a8d:	nop
  412a8e:	sbb    DWORD PTR [edi],esi
  412a90:	pop    edi
  412a91:	xchg   ebp,eax
  412a92:	lar    esi,WORD PTR [eax-0x6f]
  412a96:	loop   0x412aab
  412a98:	push   0x3a43ce75
  412a9d:	(bad)  
  412a9e:	cmp    DWORD PTR [ebx+0x73],eax
  412aa1:	mov    ebp,esi
  412aa3:	jo     0x412b19
  412aa5:	dec    eax
  412aa6:	mov    ebp,0xd40f6d45
  412aab:	imul   edx,DWORD PTR ds:[ebx],0x5
  412aaf:	add    al,0x30
  412ab1:	adc    DWORD PTR [eax+0x44],ecx
  412ab4:	ins    DWORD PTR es:[edi],dx
  412ab5:	push   edi
  412ab6:	call   0x2e35:0xa14864ff
  412abd:	cmp    DWORD PTR [ebp+0x44],esi
  412ac0:	add    cl,ch
  412ac2:	push   0x48
  412ac4:	je     0x412adf
  412ac6:	push   edi
  412ac7:	jmp    FWORD PTR [esi+edx*1]
  412aca:	add    BYTE PTR [edi+0x2e],0xa
  412ace:	pop    edx
  412acf:	inc    ebp
  412ad0:	jo     0x412ada
  412ad2:	mov    esi,DWORD PTR ds:0x2ae5007a
  412ad8:	jb     0x412b49
  412ada:	out    dx,eax
  412adb:	add    dh,BYTE PTR [edx+0x42]
  412ade:	cmp    DWORD PTR [ebx+0x53],esp
  412ae1:	shr    BYTE PTR fs:[ebx],0x35
  412ae5:	pop    edx
  412ae6:	mov    ch,BYTE PTR [edx]
  412ae8:	popa   
  412ae9:	js     0x412aeb
  412aeb:	add    ch,dh
  412aed:	adc    al,0x68
  412aef:	je     0x412ac5
  412af1:	inc    esp
  412af2:	cmp    ch,BYTE PTR [edi]
  412af4:	scas   eax,DWORD PTR es:[edi]
  412af5:	ins    BYTE PTR es:[edi],dx
  412af6:	imul   esi,DWORD PTR [ebx+0x7a],0x6b
  412afa:	outs   dx,DWORD PTR ds:[esi]
  412afb:	imul   ebp,DWORD PTR cs:[ebx+0x69],0x2e
  412b00:	push   0x46
  412b02:	sub    esi,DWORD PTR [edx-0x3a]
  412b05:	inc    esi
  412b06:	outs   dx,DWORD PTR ds:[esi]
  412b07:	jb     0x412ac2
  412b09:	adc    BYTE PTR [ecx+0x2f],dh
  412b0c:	cwde   
  412b0d:	add    esi,DWORD PTR [esi+ebp*1-0x5b]
  412b11:	cmp    al,0x61
  412b13:	add    BYTE PTR [eax+0x72707440],dh
  412b19:	sub    ebp,DWORD PTR [ebx]
  412b1b:	push   0x6c6140af
  412b20:	fisubr DWORD PTR [ebp+0x74]
  412b23:	ins    DWORD PTR es:[edi],dx
  412b24:	iret   
  412b25:	inc    eax
  412b26:	jb     0x412b97
  412b28:	call   0xeca28a9b
  412b2d:	sub    DWORD PTR [esi+0x65],ebp
  412b30:	aam    0x28
  412b32:	fs inc ebx
  412b34:	addr16 jo 0x412bac
  412b37:	dec    eax
  412b38:	movntps XMMWORD PTR fs:[eax+0x6a],xmm3
  412b3d:	or     esp,DWORD PTR [edx+0x62]
  412b40:	adc    eax,0x40652e08
  412b45:	xor    eax,0x65710000
  412b4a:	inc    ebp
  412b4b:	push   eax
  412b4c:	inc    edi
  412b4d:	push   esp
  412b4e:	inc    esi
  412b4f:	dec    ecx
  412b50:	add    BYTE PTR [eax],al
  412b52:	xor    ecx,edi
  412b54:	xor    BYTE PTR ds:[eax+0x7a503b08],cl
  412b5b:	add    DWORD PTR [esi],edi
  412b5d:	inc    edi
  412b5e:	ins    DWORD PTR es:[edi],dx
  412b5f:	clc    
  412b60:	xor    edx,DWORD PTR [edi+0x7c]
  412b63:	hlt    
  412b64:	inc    eax
  412b65:	push   edx
  412b66:	push   0x6d43502d
  412b6b:	sub    eax,0x2c68534b
  412b70:	push   ss
  412b71:	xor    BYTE PTR [ecx],dh
  412b73:	mov    ebp,0xbb310001
  412b78:	add    DWORD PTR [ebx-0xa],ecx
  412b7b:	adc    BYTE PTR [eax-0x1],0x31
  412b7f:	mov    ebp,0xbd310001
  412b84:	add    DWORD PTR [eax],eax
  412b86:	xor    DWORD PTR [edx-0x7222b9ca],ebp
  412b8c:	inc    esp
  412b8d:	push   edx
  412b8e:	hlt    
  412b8f:	nop
  412b90:	cmp    BYTE PTR [edi+0x12],ah
  412b93:	stos   DWORD PTR es:[edi],eax
  412b94:	push   esi
  412b95:	jno    0x412b75
  412b97:	xchg   esi,eax
  412b98:	ins    DWORD PTR es:[edi],dx
  412b99:	pop    esp
  412b9a:	(bad)  
  412b9b:	mov    ds:0x45ce6453,eax
  412ba0:	jb     0x412bfe
  412ba2:	repnz dec edi
  412ba4:	outs   dx,DWORD PTR ds:[esi]
  412ba5:	jb     0x412b7b
  412ba7:	dec    esi
  412ba8:	ins    DWORD PTR es:[edi],dx
  412ba9:	push   esi
  412baa:	int3   
  412bab:	push   0x71
  412bad:	addr16 into 
  412baf:	pop    esi
  412bb0:	dec    eax
  412bb1:	push   ebx
  412bb2:	(bad)  
  412bb3:	push   ebx
  412bb4:	push   esi
  412bb5:	jno    0x412bb7
  412bb7:	add    BYTE PTR [ebp+0x316c585c],ah
  412bbd:	xor    BYTE PTR [esi+0x67],dl
  412bc0:	(bad)
  412bc4:	test   DWORD PTR [ecx+0x51],ebx
  412bc7:	je     0x412b4c
  412bc9:	push   esp
  412bca:	push   esi
  412bcb:	xor    DWORD PTR gs:[ebx+ebp*1],edx
  412bcf:	pop    ebp
  412bd0:	add    BYTE PTR [ebx+ecx*1+0x65],0x7e
  412bd5:	pop    esi
  412bd6:	or     BYTE PTR [ecx+0x52],bl
  412bd9:	adc    al,0x2b
  412bdb:	add    al,0x31
  412bdd:	adc    al,0xe7
  412bdf:	add    esi,DWORD PTR [ecx]
  412be1:	adc    al,0xe7
  412be3:	add    ecx,DWORD PTR [eax+0x39]
  412be6:	stc    
  412be7:	push   ebp
  412be8:	push   edx
  412be9:	inc    eax
  412bea:	mov    edx,0xd3381731
  412bef:	push   edi
  412bf0:	xor    DWORD PTR [edi-0x4d],esp
  412bf3:	push   edx
  412bf4:	ins    BYTE PTR es:[edi],dx
  412bf5:	cmp    ebx,ebx
  412bf7:	inc    esp
  412bf8:	adc    BYTE PTR [eax-0x40],cl
  412bfb:	ins    DWORD PTR es:[edi],dx
  412bfc:	adc    dl,BYTE PTR [ebx-0x2a]
  412bff:	push   ebp
  412c00:	and    BYTE PTR [edi],bh
  412c02:	retf   
  412c03:	pusha  
  412c04:	add    BYTE PTR [ecx],bh
  412c06:	mov    edx,0xbd3f1672
  412c0b:	cmp    al,0xd
  412c0d:	adc    al,0xb7
  412c0f:	jno    0x412c1d
  412c11:	xor    eax,DWORD PTR [edx+esi*2+0x4f8b5d00]
  412c18:	fsub   QWORD PTR [edx-0x7c]
  412c1b:	jb     0x412c1d
  412c1d:	add    al,ah
  412c1f:	cmp    al,0x96
  412c21:	push   ebp
  412c22:	div    BYTE PTR [edi]
  412c24:	out    0x3,eax
  412c26:	xor    DWORD PTR [edi+eiz*8],edx
  412c29:	add    esi,DWORD PTR [ecx]
  412c2b:	adc    al,0xe7
  412c2d:	add    edx,eax
  412c2f:	inc    ecx
  412c30:	pusha  
  412c31:	je     0x412bf8
  412c33:	add    bl,BYTE PTR [ecx]
  412c35:	push   ss
  412c36:	int    0x3f
  412c38:	inc    ebx
  412c39:	add    al,0x70
  412c3b:	inc    edx
  412c3c:	push   eax
  412c3d:	je     0x412bdc
  412c3f:	addr16 push ebp
  412c41:	je     0x412be6
  412c43:	cmp    eax,0x48905f33
  412c48:	add    BYTE PTR ds:0xe95f4892,ch
  412c4e:	xor    dl,BYTE PTR [eax+eax*1]
  412c51:	jmp    0x4b95d7a
  412c56:	sub    eax,0x610f6d63
  412c5b:	inc    edi
  412c5c:	pop    edi
  412c5d:	sbb    eax,DWORD PTR [esi-0x78efaa90]
  412c63:	bound  edi,QWORD PTR [edi]
  412c65:	sbb    ebp,DWORD PTR ds:0x670c703f
  412c6b:	adc    al,0xff
  412c6d:	call   0xd1b2c0a4
  412c72:	pop    edi
  412c73:	inc    eax
  412c74:	ins    BYTE PTR es:[edi],dx
  412c75:	sbb    al,BYTE PTR [ebx]
  412c77:	(bad)  
  412c78:	arpl   bp,ax
  412c7a:	push   es
  412c7b:	adc    al,0x51
  412c7d:	mov    eax,ds:0xaf743165
  412c82:	add    BYTE PTR [eax],al
  412c84:	add    eax,0x20c46440
  412c89:	fs pop edi
  412c8b:	mov    ebp,0xe9000cea
  412c90:	xor    dl,BYTE PTR [eax+eax*1]
  412c93:	jmp    0xe980225b
  412c98:	mov    ah,0xf5
  412c9a:	ds jmp 0xe980221c
  412ca0:	jle    0x412c97
  412ca2:	ds jmp 0xe98021f0
  412ca8:	pop    eax
  412ca9:	sti    
  412caa:	ds jmp 0xe98026e8
  412cb0:	sbb    eax,0xfce93efa
  412cb5:	stc    
  412cb6:	ds jmp 0xe98026a4
  412cbc:	mov    eax,ds:0xb5e93efa
  412cc1:	stc    
  412cc2:	add    BYTE PTR ds:[eax],cl
  412cc5:	jge    0x412cf1
  412cc7:	inc    ecx
  412cc8:	or     BYTE PTR [ecx],dl
  412cca:	add    BYTE PTR [eax],al
  412ccc:	sbb    BYTE PTR [edx],dl
  412cce:	add    BYTE PTR [eax],al
  412cd0:	cwde   
  412cd1:	into   
  412cd2:	std    
  412cd3:	dec    DWORD PTR [eax]
  412cd5:	push   es
  412cd6:	jne    0x412cf8
  412cd8:	dec    esp
  412cd9:	addr16 pop edi
  412cdb:	jne    0x412d12
  412cdd:	ins    DWORD PTR es:[edi],dx
  412cde:	outs   dx,BYTE PTR ds:[esi]
  412cdf:	je     0x412d2c
  412ce1:	sbb    ch,bh
  412ce3:	dec    eax
  412ce5:	nop
  412ce6:	sbb    al,BYTE PTR [eax]
  412ce8:	add    BYTE PTR [eax],al
  412cea:	enter  0x3d10,0x70
  412cee:	enter  0x5d0c,0x74
  412cf2:	cmp    DWORD PTR [eax],ebx
  412cf4:	std    
  412cf5:	dec    eax
  412cf7:	nop
  412cf8:	sbb    al,0x0
  412cfa:	enter  0x4c10,0x6f
  412cfe:	jnp    0x412d31
  412d00:	ins    BYTE PTR es:[edi],dx
  412d01:	and    cl,bl
  412d03:	inc    eax
  412d04:	jo     0x412d4a
  412d06:	imul   edi,DWORD PTR [ebx*2+0x108900],0x183880
  412d11:	add    bl,bl
  412d13:	xor    DWORD PTR [edi+0x68],ebx
  412d16:	lods   eax,DWORD PTR ds:[esi]
  412d17:	adc    ch,bh
  412d19:	dec    DWORD PTR [eax+0x58001d90]
  412d1f:	adc    BYTE PTR [edi],bh
  412d21:	outs   dx,DWORD PTR ds:[esi]
  412d22:	out    0x6b,eax
  412d24:	gs fist DWORD PTR gs:[eax]
  412d28:	std    
  412d29:	dec    DWORD PTR [eax-0x70]
  412d2c:	and    al,BYTE PTR [eax]
  412d2e:	pop    eax
  412d2f:	adc    BYTE PTR [eax+0x69],cl
  412d32:	retf   
  412d33:	cmp    al,0x6b
  412d35:	jb     0x412d08
  412d37:	pop    ss
  412d38:	add    al,BYTE PTR [eax]
  412d3a:	dec    eax
  412d3b:	nop
  412d3c:	add    DWORD PTR [eax],eax
  412d3e:	xor    DWORD PTR [ebp+0x1da84b01],edi
  412d44:	dec    eax
  412d45:	ins    DWORD PTR es:[edi],dx
  412d46:	xchg   edx,eax
  412d47:	or     BYTE PTR [edi+0x63],ch
  412d4a:	xchg   DWORD PTR [ecx],eax
  412d4c:	push   ebp
  412d4d:	add    BYTE PTR [eax],al
  412d4f:	add    BYTE PTR [ebx],dh
  412d51:	mov    ebp,0xbd528001
  412d56:	add    DWORD PTR [eax],eax
  412d58:	jb     0x412d7c
  412d5a:	outs   dx,DWORD PTR ds:[esi]
  412d5b:	imul   eax,DWORD PTR [esi+0x613f241b],0x2d
  412d62:	dec    eax
  412d63:	pop    edi
  412d64:	pop    ebp
  412d65:	sbb    al,0x4
  412d67:	(bad)  
  412d68:	fidivr WORD PTR [ebp-0x42ceda7f]
  412d6e:	add    DWORD PTR [ebx+0x48],ecx
  412d71:	fnsave [ecx]
  412d73:	addr16 push edx
  412d75:	rcr    DWORD PTR [eax+0x72],0x54
  412d79:	out    dx,al
  412d7a:	add    DWORD PTR [edx],eax
  412d7c:	xor    DWORD PTR [ebp-0x42ced17f],edi
  412d82:	add    DWORD PTR [ecx+0x16],eax
  412d85:	mov    BYTE PTR [eax+0x6d],dh
  412d88:	nop    DWORD PTR [eax+0x6d]
  412d8c:	adc    al,BYTE PTR [eax-0x76e09c90]
  412d92:	push   esi
  412d93:	add    BYTE PTR [ebx],dh
  412d95:	mov    ebp,0xbd4e8001
  412d9a:	add    DWORD PTR [eax],eax
  412d9c:	repnz cdq 
  412d9e:	jo     0x412e0b
  412da0:	ficom  WORD PTR [edx+0x47cd3f21]
  412da6:	ins    BYTE PTR es:[edi],dx
  412da7:	outs   dx,BYTE PTR ds:[esi]
  412da8:	enter  0x554d,0x72
  412dac:	rol    BYTE PTR [eax+0x6c],1
  412daf:	jbe    0x412d85
  412db1:	fdiv   QWORD PTR ds:0xd600006d
  412db7:	dec    eax
  412db8:	push   esi
  412db9:	add    BYTE PTR [eax],dh
  412dbb:	adc    al,0xe7
  412dbd:	add    esi,DWORD PTR [ecx+0x3103e704]
  412dc3:	push   ebp
  412dc4:	dec    ebx
  412dc5:	jno    0x412d55
  412dc7:	cmp    al,BYTE PTR [eax+0x57]
  412dca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412dcb:	inc    esi
  412dcc:	dec    eax
  412dcd:	pop    eax
  412dce:	mov    es,WORD PTR [edx+0x44]
  412dd1:	and    al,0x65
  412dd3:	cmp    eax,DWORD PTR [esi+0x70]
  412dd6:	adc    BYTE PTR [eax+ebp*8],0x3
  412dda:	xor    DWORD PTR [esp+ebp*8+0x37143103],edx
  412de1:	imul   esp,DWORD PTR [ebx+0x47],0x38867206
  412de8:	out    0x36,eax
  412dea:	dec    esp
  412deb:	xor    bh,bl
  412ded:	pop    edx
  412dee:	jbe    0x412e36
  412df0:	add    al,0x40
  412df2:	jp     0x412e31
  412df4:	or     dl,BYTE PTR [esi+0x54]
  412df7:	inc    edi
  412df8:	(bad)  
  412df9:	imul   eax,DWORD PTR [ebp+0x68],0x30476cbe
  412e00:	into   
  412e01:	pop    edx
  412e02:	and    BYTE PTR [eax-0x56],ch
  412e05:	pop    eax
  412e06:	and    eax,DWORD PTR [esi-0x3c]
  412e09:	jno    0x412e30
  412e0b:	(bad)  
  412e0c:	int3   
  412e0d:	push   ebp
  412e0e:	and    BYTE PTR ds:0x50ed71ce,bh
  412e14:	scas   eax,DWORD PTR es:[edi]
  412e15:	push   ebx
  412e16:	adc    eax,0x68b93b
  412e1b:	add    BYTE PTR [ebx],al
  412e1d:	push   0x38126bba
  412e22:	mov    esp,DWORD PTR [ebx]
  412e24:	idiv   DWORD PTR [edx]
  412e26:	and    DWORD PTR [edi-0x2e],0x45
  412e2a:	call   0x1137:0x9a5b0103
  412e31:	icebp  
  412e32:	jns    0x412e57
  412e34:	stc    
  412e35:	pop    edi
  412e36:	add    BYTE PTR [ebp-0x40d106fe],bl
  412e3c:	and    bl,BYTE PTR [edi]
  412e3e:	or     dh,BYTE PTR [ecx]
  412e40:	rol    BYTE PTR [esp+esi*2+0x23],0x55
  412e45:	cmc    
  412e46:	jo     0x412e2c
  412e48:	xor    al,0x9
  412e4a:	popa   
  412e4b:	dec    edx
  412e4c:	xchg   esi,eax
  412e4d:	inc    esp
  412e4e:	je     0x412e53
  412e50:	dec    ebp
  412e51:	(bad)  
  412e52:	sub    al,0x13
  412e54:	ds push ds
  412e56:	aas    
  412e57:	dec    edx
  412e58:	mov    WORD PTR ds:0x554e3570,?
  412e5e:	outs   dx,BYTE PTR ds:[esi]
  412e5f:	or     al,BYTE PTR [eax+0x580f6730]
  412e65:	push   cs
  412e66:	and    BYTE PTR [eax],al
  412e68:	pop    ecx
  412e69:	xor    eax,0x404a156e
  412e6e:	ja     0x412e45
  412e70:	adc    bh,dh
  412e72:	cmp    al,bh
  412e74:	das    
  412e75:	add    al,0xb
  412e77:	jecxz  0x412ee6
  412e79:	aaa    
  412e7a:	outs   dx,BYTE PTR ds:[esi]
  412e7b:	cmc    
  412e7c:	push   edi
  412e7d:	cmp    dh,BYTE PTR [esp+edx*1+0x0]
  412e81:	add    BYTE PTR [ecx+0x35],ah
  412e84:	outs   dx,BYTE PTR ds:[esi]
  412e85:	mov    BYTE PTR [esi],0x3c
  412e88:	cmp    cl,BYTE PTR [ecx]
  412e8a:	dec    esi
  412e8b:	cmp    BYTE PTR [ebx-0x24],dh
  412e8e:	sub    al,0x53
  412e90:	ins    DWORD PTR es:[edi],dx
  412e91:	xlat   BYTE PTR ds:[ebx]
  412e92:	and    BYTE PTR ds:0x371bb561,dh
  412e98:	outs   dx,BYTE PTR ds:[esi]
  412e99:	repz push edx
  412e9b:	xor    ebp,DWORD PTR [esi+edi*4-0x1b]
  412e9f:	xor    al,0xb
  412ea1:	repz in eax,dx
  412ea3:	outs   dx,BYTE PTR ss:[esi]
  412ea5:	xchg   ebp,eax
  412ea6:	xlat   BYTE PTR ds:[ebx]
  412ea7:	cmp    DWORD PTR [esp+eax*8+0x1e],esi
  412eab:	inc    ecx
  412eac:	jo     0x412e32
  412eae:	cmp    al,0xf4
  412eb0:	pop    esi
  412eb1:	add    al,bl
  412eb3:	fs ins BYTE PTR es:[edi],dx
  412eb5:	imul   edi,DWORD PTR [ebx-0x50968bca],0xab6f2b43
  412ebf:	popa   
  412ec0:	popa   
  412ec1:	je     0x412ee0
  412ec3:	pop    edi
  412ec4:	je     0x412f38
  412ec6:	jne    0x412efd
  412ec8:	imul   ecx,DWORD PTR ds:0x6e6b5012,0x746e3184
  412ed2:	cmp    eax,0x7f636e51
  412ed7:	cmp    al,0x65
  412ed9:	outs   dx,BYTE PTR ds:[esi]
  412eda:	ja     0x412f06
  412edc:	and    BYTE PTR [edx+0x71],ah
  412edf:	inc    esi
  412ee0:	pop    ebp
  412ee1:	jb     0x412f34
  412ee3:	sbb    DWORD PTR [edx],ecx
  412ee5:	push   ebp
  412ee6:	add    BYTE PTR [eax],al
  412ee8:	dec    ebx
  412ee9:	xor    DWORD PTR [edx+0x2d],esi
  412eec:	sbb    DWORD PTR [ebx],edi
  412eee:	popa   
  412eef:	outs   dx,BYTE PTR ds:[esi]
  412ef0:	inc    esp
  412ef1:	sub    ah,BYTE PTR [eax]
  412ef3:	dec    ebp
  412ef4:	aas    
  412ef5:	push   0x65
  412ef7:	ins    BYTE PTR es:[edi],dx
  412ef8:	cmp    al,0x35
  412efa:	sub    esi,DWORD PTR [esi+ebp*8]
  412efd:	and    al,0x20
  412eff:	sub    BYTE PTR [ebx],ch
  412f01:	inc    ebx
  412f02:	imul   esi,DWORD PTR [eax-0x17],0x7c626560
  412f09:	xor    DWORD PTR [edi],esi
  412f0b:	and    ch,cl
  412f0d:	inc    DWORD PTR [ebp+eax*2+0x28]
  412f11:	and    DWORD PTR [esi],ebp
  412f13:	xor    BYTE PTR [ebx],dh
  412f15:	lock push edx
  412f17:	imul   edi,DWORD PTR [esi+0x30],0xf4cb776b
  412f1e:	xor    al,0x38
  412f20:	xor    DWORD PTR [ecx],ebx
  412f22:	or     cl,BYTE PTR ds:0x6f3f1482
  412f28:	mov    esi,0x316e6160
  412f2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f2e:	cs dec esp
  412f30:	aam    0x48
  412f32:	push   0x1d4c974
  412f37:	dec    esp
  412f38:	ficomp WORD PTR [ebp-0x6e278b9e]
  412f3e:	outs   dx,DWORD PTR ds:[esi]
  412f3f:	cmp    dh,BYTE PTR [ecx]
  412f41:	jb     0x412f89
  412f43:	push   esp
  412f44:	adc    DWORD PTR [eax],ebx
  412f46:	push   ecx
  412f47:	and    BYTE PTR [ecx+0x1],bh
  412f4a:	cmp    BYTE PTR [eax+0x0],dl
  412f4d:	add    BYTE PTR [esi+0x2c],dl
  412f50:	xor    BYTE PTR cs:[ebx+esi*4],ch
  412f54:	dec    ecx
  412f55:	ins    DWORD PTR es:[edi],dx
  412f56:	mov    ds:0x54201a09,al
  412f5b:	or     cl,BYTE PTR [edi]
  412f5d:	or     dh,BYTE PTR [eax+0x5a]
  412f60:	popa   
  412f61:	arpl   WORD PTR [ecx+0x4b201a01],ax
  412f67:	fisub  WORD PTR [edi]
  412f69:	or     edi,DWORD PTR [ebx]
  412f6b:	cld    
  412f6c:	pusha  
  412f6d:	popa   
  412f6e:	dec    esp
  412f6f:	sub    eax,0xc7742b58
  412f74:	bound  ebp,QWORD PTR [ebp+0x4d]
  412f77:	and    al,0x6e
  412f79:	gs or  ebx,ebp
  412f7c:	ins    BYTE PTR es:[edi],dx
  412f7d:	fs dec esp
  412f7f:	addps  xmm4,XMMWORD PTR [edi+0x45]
  412f83:	les    ebp,FWORD PTR ds:0x52f20b20
  412f89:	cmp    esp,DWORD PTR [ecx-0x48]
  412f8c:	pop    es
  412f8d:	inc    ecx
  412f8e:	push   ss
  412f8f:	iret   
  412f90:	imul   esp,DWORD PTR [ebx+0x12],0xffffffe1
  412f94:	ins    BYTE PTR es:[edi],dx
  412f95:	ins    DWORD PTR es:[edi],dx
  412f96:	pop    es
  412f97:	adc    esp,DWORD PTR [ecx+eiz*2]
  412f9a:	sbb    eax,0x346352d6
  412f9f:	mov    bl,0x38
  412fa1:	jno    0x412fb7
  412fa3:	mov    esi,DWORD PTR [eax]
  412fa5:	aas    
  412fa6:	push   cs
  412fa7:	adc    al,0x8c
  412fa9:	ins    DWORD PTR es:[edi],dx
  412faa:	in     eax,0x9
  412fac:	(bad)  
  412fad:	push   eax
  412fae:	aam    0x49
  412fb0:	sub    BYTE PTR [edi+0x0],0x0
  412fb4:	int    0x34
  412fb6:	mov    esi,0xc7040717
  412fbb:	sub    edx,eax
  412fbd:	mov    WORD PTR ss:[ebx-0x1a],ss
  412fc1:	aas    
  412fc2:	and    BYTE PTR [ecx-0x33],0x30
  412fc6:	mov    dl,0x23
  412fc8:	jmp    0xd01:0x51493062
  412fcf:	adc    al,0x68
  412fd1:	hlt    
  412fd2:	cmp    eax,0x3e308f6d
  412fd7:	push   edi
  412fd8:	mov    al,ds:0x561bfff4
  412fdd:	sbb    ecx,esi
  412fdf:	adc    BYTE PTR [ebx],bh
  412fe1:	adc    al,0x5
  412fe3:	add    al,0x4f
  412fe5:	mul    dh
  412fe7:	aas    
  412fe8:	dec    ebx
  412fe9:	not    al
  412feb:	add    ebx,DWORD PTR [ebx]
  412fed:	not    al
  412fef:	add    edx,DWORD PTR [edi+0x31]
  412ff2:	sbb    esp,DWORD PTR [ebp+0x61]
  412ff5:	cmp    eax,0x300711da
  412ffa:	adc    esi,DWORD PTR [eax+0x31]
  412ffd:	push   esi
  412ffe:	add    al,0x58
  413000:	push   es
  413001:	inc    esp
  413002:	add    BYTE PTR [edx+0x42],al
  413005:	cs add eax,0xd94e4369
  41300b:	push   0x68ad1412
  413010:	sbb    eax,0x2368da61
  413015:	push   ecx
  413016:	mov    ebp,0xa000058
  41301b:	adc    al,0xe7
  41301d:	outs   dx,BYTE PTR ds:[esi]
  41301e:	sbb    eax,0x5711fa31
  413023:	xor    BYTE PTR [eax],al
  413025:	lds    ecx,FWORD PTR [esi]
  413027:	adc    al,0x51
  413029:	mov    ch,0xf
  41302b:	pop    ecx
  41302c:	jo     0x412fba
  41302e:	fsub   QWORD PTR [esp+esi*2-0x72]
  413032:	add    BYTE PTR [edi+0x65],ah
  413035:	mov    WORD PTR [edx],?
  413037:	adc    al,0x5f
  413039:	test   esp,edi
  41303b:	data16 jo 0x412fce
  41303e:	and    eax,DWORD PTR [edx]
  413040:	cs test esi,edx
  413043:	aaa    
  413044:	add    BYTE PTR [eax-0x7592c832],ch
  41304a:	int    0x3f
  41304c:	arpl   WORD PTR [eax],bp
  41304e:	lahf   
  41304f:	xor    BYTE PTR [edi+0x4f],al
  413052:	call   0x7a2d:0xa1486740
  413059:	inc    esp
  41305a:	pusha  
  41305b:	sub    eax,0x3c71e964
  413060:	arpl   WORD PTR [edx-0x68],cx
  413063:	pusha  
  413064:	ins    DWORD PTR es:[edi],dx
  413065:	inc    edx
  413066:	xchg   esi,eax
  413067:	ss dec ebx
  413069:	inc    esp
  41306a:	xchg   BYTE PTR [edx],dh
  41306c:	arpl   WORD PTR [ebx],bx
  41306e:	cmp    BYTE PTR [edi+eiz*2],0x19
  413072:	sub    eax,0x560c724e
  413077:	arpl   WORD PTR [edi+0x5],sp
  41307a:	sub    eax,0xc7253
  41307f:	add    BYTE PTR [ecx+0x51],bl
  413082:	outs   dx,BYTE PTR ds:[esi]
  413083:	hlt    
  413084:	push   edi
  413085:	xor    DWORD PTR [edx+0x8],esi
  413088:	pop    ecx
  413089:	xor    DWORD PTR [edi],edi
  41308b:	jmp    0xcda47301
  413090:	hlt    
  413091:	inc    ecx
  413092:	arpl   sp,ax
  413094:	xor    dl,BYTE PTR [ebx+0x72]
  413097:	rol    BYTE PTR [edx],1
  413099:	inc    eax
  41309a:	inc    ebp
  41309b:	(bad)  
  41309c:	(bad)  
  41309d:	pusha  
  41309e:	jno    0x4130a0
  4130a0:	jge    0x413105
  4130a2:	inc    edi
  4130a3:	gs jno 0x4130b7
  4130a6:	aas    
  4130a7:	jb     0x41306a
  4130a9:	popa   
  4130aa:	je     0x4130f1
  4130ac:	shl    BYTE PTR [ecx+0x6b],0x72
  4130b0:	int3   
  4130b1:	pop    esp
  4130b2:	popa   
  4130b3:	jns    0x41310d
  4130b5:	push   esp
  4130b6:	jb     0x413131
  4130b8:	mov    eax,0xbb65445d
  4130bd:	pop    ebp
  4130be:	jb     0x41312f
  4130c0:	mov    cl,0x5c
  4130c2:	popa   
  4130c3:	jns    0x41311d
  4130c5:	push   esp
  4130c6:	jb     0x413141
  4130c8:	mov    eax,0xb465525c
  4130cd:	sub    eax,0x537d735d
  4130d2:	imul   ebp,DWORD PTR [esi+0x7c],0x2d
  4130d6:	js     0x41314c
  4130d8:	or     BYTE PTR [ebx],al
  4130da:	popa   
  4130db:	jbe    0x41314a
  4130dd:	bound  esi,QWORD PTR [esp+edx*2+0x67]
  4130e1:	add    esp,DWORD PTR [ecx+0x6c]
  4130e4:	add    BYTE PTR [eax],al
  4130e6:	outs   dx,BYTE PTR ds:[esi]
  4130e7:	adc    BYTE PTR [ebx+0x70],cl
  4130ea:	ins    DWORD PTR es:[edi],dx
  4130eb:	ss push eax
  4130ed:	jb     0x413126
  4130ef:	xor    esp,DWORD PTR [ecx+0x73]
  4130f2:	dec    ebx
  4130f3:	or     al,0x6b
  4130f5:	imul   ebp,DWORD PTR ds:0x35490036,0x60
  4130fc:	popa   
  4130fd:	jb     0x41313a
  4130ff:	aaa    
  413100:	outs   dx,BYTE PTR ds:[esi]
  413101:	popa   
  413102:	int3   
  413103:	sub    eax,0x2f2f6f4c
  413108:	popa   
  413109:	fs pop ss
  41310b:	ss push ecx
  41310d:	jae    0x41313c
  41310f:	bound  eax,QWORD PTR [eax]
  413111:	inc    edi
  413112:	jge    0x413170
  413114:	push   esp
  413115:	outs   dx,DWORD PTR ds:[esi]
  413116:	sub    DWORD PTR ds:0xcd31496e,0x63
  41311d:	ins    DWORD PTR es:[edi],dx
  41311e:	and    ecx,DWORD PTR [eax-0x21e78b9e]
  413124:	imul   eax,DWORD PTR [eax],0xfffffff2
  413127:	aad    0x6b
  413129:	jbe    0x41313f
  41312b:	mov    DWORD PTR [ebp+0x51],edx
  41312e:	or     bh,cl
  413130:	xor    eax,0x4fa7026d
  413135:	xlat   BYTE PTR ds:[bx]
  413137:	lea    esi,[eax]
  413139:	addr16 aad 0x7b
  41313c:	add    DWORD PTR [esi+eax*8-0x73],ecx
  413140:	ins    BYTE PTR es:[edi],dx
  413141:	outs   dx,BYTE PTR ds:[esi]
  413142:	in     al,0x49
  413144:	data16 jb 0x413137
  413147:	mov    edx,0x6d4d
  41314c:	into   
  41314d:	xchg   ecx,eax
  41314e:	push   esi
  41314f:	jo     0x413132
  413151:	dec    eax
  413152:	push   0x76
  413154:	cwde   
  413155:	imul   ebx,DWORD PTR [edi+0x65],0x6c630b8c
  41315c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41315d:	push   eax
  41315e:	inc    ebx
  41315f:	add    BYTE PTR [eax+0x59],dh
  413162:	outs   dx,BYTE PTR ds:[esi]
  413163:	jae    0x4130e7
  413165:	add    DWORD PTR [eax],esi
  413167:	ins    DWORD PTR es:[edi],dx
  413168:	call   0x5254:0x83506a58
  41316f:	test   DWORD PTR [bx+si+0x61],ebx
  413173:	arpl   WORD PTR [edx-0x53],sp
  413176:	add    DWORD PTR [ecx+0x63],esp
  413179:	hlt    
  41317a:	push   ebx
  41317b:	je     0x41319f
  41317d:	fbld   TBYTE PTR [edi]
  41317f:	fs inc ebp
  413181:	rol    DWORD PTR [ecx],0x41
  413184:	push   esp
  413185:	mov    edi,0x18414d4d
  41318a:	push   0x51
  41318c:	cmp    BYTE PTR [esi+0x1e44634d],bh
  413192:	push   eax
  413193:	ins    DWORD PTR es:[edi],dx
  413194:	and    edx,DWORD PTR [esp+ecx*8]
  413197:	inc    esp
  413198:	xor    DWORD PTR [edi-0x3c],edx
  41319b:	push   ebp
  41319c:	and    eax,0xa50c559
  4131a1:	push   edi
  4131a2:	les    edx,FWORD PTR [ebp+0x5]
  4131a5:	sub    eax,0x35106ccd
  4131aa:	mov    bl,0x60
  4131ac:	add    BYTE PTR [ebp-0x3b],cl
  4131af:	add    BYTE PTR ss:[eax],al
  4131b2:	std    
  4131b3:	xor    bh,BYTE PTR [ecx-0x73a8cea0]
  4131b9:	push   ebp
  4131ba:	fst    QWORD PTR [esi-0x75]
  4131bd:	push   0xffffffe0
  4131bf:	cmp    BYTE PTR [edx-0x7bba3bb1],bh
  4131c5:	add    esi,eax
  4131c7:	inc    ebp
  4131c8:	adc    BYTE PTR [ebx-0x43],0x54
  4131cc:	mov    dl,BYTE PTR [edx+eax*8+0x2c]
  4131d0:	jns    0x413232
  4131d2:	lock cmp BYTE PTR [ecx+0x4f],bh
  4131d6:	xchg   esi,eax
  4131d7:	cmp    dl,BYTE PTR [eax+0x67]
  4131da:	xchg   BYTE PTR [eax+0x44],cl
  4131dd:	xor    al,0xa3
  4131df:	sub    eax,0x399d655d
  4131e4:	and    ah,BYTE PTR [ecx-0x7a]
  4131e7:	adc    al,0xe7
  4131e9:	add    esi,DWORD PTR [ecx]
  4131eb:	adc    al,0xe7
  4131ed:	add    esi,DWORD PTR [ecx]
  4131ef:	adc    al,0xe7
  4131f1:	add    esi,DWORD PTR [ecx]
  4131f3:	adc    al,0xe7
  4131f5:	add    esi,DWORD PTR [ecx]
  4131f7:	adc    al,0xe7
  4131f9:	add    esi,DWORD PTR [ecx]
  4131fb:	adc    al,0xe7
  4131fd:	add    esi,DWORD PTR [ecx]
  4131ff:	adc    al,0xe7
  413201:	add    esi,DWORD PTR [ecx]
  413203:	adc    al,0xe7
  413205:	add    esi,DWORD PTR [ecx]
  413207:	adc    al,0xe7
  413209:	add    esi,DWORD PTR [ecx]
  41320b:	adc    al,0xe7
  41320d:	add    esi,DWORD PTR [ecx]
  41320f:	adc    al,0x0
  413211:	jmp    0xe9414648
  413216:	add    BYTE PTR [eax],al
  413218:	xor    dl,BYTE PTR [eax+eax*1]
  41321b:	jmp    0xe9414652
  413220:	xor    dl,BYTE PTR [eax+eax*1]
  413223:	jmp    0xe941465a
  413228:	xor    dl,BYTE PTR [eax+eax*1]
  41322b:	jmp    0xe9414662
  413230:	xor    dl,BYTE PTR [eax+eax*1]
  413233:	jmp    0xe941466a
  413238:	xor    dl,BYTE PTR [eax+eax*1]
  41323b:	jmp    0xe9414672
  413240:	xor    dl,BYTE PTR [eax+eax*1]
  413243:	jmp    0xe941467a
  413248:	xor    dl,BYTE PTR [eax+eax*1]
  41324b:	jmp    0xa5889b4a
  413250:	xor    bh,BYTE PTR ds:0x5c1ab923
  413256:	sub    eax,esp
  413258:	inc    edx
  413259:	or     BYTE PTR [eax+0x14],bl
  41325c:	inc    esi
  41325d:	add    al,0x34
  41325f:	inc    ecx
  413260:	push   esi
  413261:	cmc    
  413262:	das    
  413263:	sbb    edx,DWORD PTR [ebp-0xb]
  413266:	das    
  413267:	sbb    ecx,DWORD PTR [ebp-0x13]
  41326a:	and    bh,cl
  41326c:	sbb    al,0x5c
  41326e:	and    edi,ecx
  413270:	and    al,0x5c
  413272:	and    edi,ecx
  413274:	sbb    al,0x5c
  413276:	and    edi,ecx
  413278:	inc    esp
  413279:	pop    esp
  41327a:	and    ebx,ecx
  41327c:	add    BYTE PTR [eax],al
  41327e:	cmp    al,0x5c
  413280:	and    ebx,ecx
  413282:	inc    esp
  413283:	pop    esp
  413284:	jnp    0x41326f
  413286:	jno    0x4132bd
  413288:	je     0x4132a9
  41328a:	push   edx
  41328b:	dec    eax
  41328c:	addr16 add dh,al
  41328f:	bound  ecx,QWORD PTR [edi+0x79]
  413292:	mov    ebx,0x116d6151
  413297:	outs   dx,WORD PTR cs:[esi]
  41329a:	cwde   
  41329b:	xor    BYTE PTR [ecx+0x72],ah
  41329e:	jle    0x413302
  4132a0:	ins    BYTE PTR es:[edi],dx
  4132a1:	xor    edi,DWORD PTR [edx]
  4132a3:	out    dx,al
  4132a4:	arpl   WORD PTR [esp+ebp*2+0x15],bp
  4132a8:	inc    ebp
  4132a9:	jae    0x413272
  4132ab:	sub    al,0x73
  4132ad:	test   BYTE PTR ss:0x626b6f72,al
  4132b4:	outs   dx,DWORD PTR ds:[esi]
  4132b5:	jae    0x41323f
  4132b7:	or     BYTE PTR [ebx+0x66],ch
  4132ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4132bb:	fs pop ebp
  4132bd:	jb     0x413274
  4132bf:	or     DWORD PTR [esi+0x61],eax
  4132c2:	mov    edx,0xb56c5009
  4132c7:	xor    al,0x65
  4132c9:	outs   dx,BYTE PTR ds:[esi]
  4132ca:	stos   DWORD PTR es:[edi],eax
  4132cb:	or     DWORD PTR [esi+0x54],eax
  4132ce:	test   al,0x9
  4132d0:	dec    eax
  4132d1:	outs   dx,DWORD PTR ds:[esi]
  4132d2:	mov    ebx,0x9b006f50
  4132d7:	sub    al,0x66
  4132d9:	je     0x413282
  4132db:	ss jb  0x413343
  4132de:	ins    BYTE PTR es:[edi],dx
  4132df:	push   esi
  4132e0:	pop    ebp
  4132e1:	jb     0x4132e3
  4132e3:	add    BYTE PTR [edx],bh
  4132e5:	cld    
  4132e6:	dec    edi
  4132e7:	ins    BYTE PTR es:[edi],dx
  4132e8:	jne    0x41331d
  4132ea:	outs   dx,BYTE PTR gs:[esi]
  4132ec:	imul   edi,esp,0x45
  4132ef:	push   esp
  4132f0:	sub    ah,bh
  4132f2:	inc    edi
  4132f3:	outs   dx,DWORD PTR ds:[esi]
  4132f4:	cmp    esp,DWORD PTR [edi+ebp*2+0x0]
  4132f8:	sbb    ebp,DWORD PTR [ebx]
  4132fa:	data16 je 0x413324
  4132fd:	xor    eax,0x566c6572
  413302:	pop    ebp
  413303:	jb     0x413321
  413305:	pop    es
  413306:	pop    ebp
  413307:	jbe    0x41333a
  413309:	adc    BYTE PTR [eax+0x44],ah
  41330c:	pop    eax
  41330d:	or     al,0x68
  41330f:	ins    DWORD PTR es:[edi],dx
  413310:	dec    esi
  413311:	add    ebp,DWORD PTR [ecx+0x71]
  413314:	inc    ebp
  413315:	adc    dl,BYTE PTR [esi+0x77]
  413318:	push   ebp
  413319:	icebp  
  41331a:	das    
  41331b:	push   eax
  41331c:	stc    
  41331d:	rcl    DWORD PTR [esp+esi*2+0x31],0x7e
  413322:	push   0x62ea2566
  413327:	jb     0x413335
  413329:	xchg   DWORD PTR [edi],edi
  41332b:	pop    edi
  41332c:	add    ebx,DWORD PTR ds:0x81105138
  413332:	pop    esi
  413333:	fs cmc 
  413335:	jecxz  0x413399
  413337:	ins    BYTE PTR es:[edi],dx
  413338:	push   es
  413339:	ror    BYTE PTR [ecx+0x67],cl
  41333c:	loop   0x4132c4
  41333e:	push   0x3fd6e872
  413343:	push   esp
  413344:	add    DWORD PTR [ebx+0x7168],eax
  41334a:	(bad)  [edx-0x623da0cf]
  413350:	push   eax
  413351:	ins    DWORD PTR es:[edi],dx
  413352:	ret    
  413353:	mov    es,WORD PTR [ecx]
  413355:	dec    eax
  413356:	into   
  413357:	cmp    eax,0x97d04e4d
  41335c:	pop    esi
  41335d:	add    BYTE PTR [edx+edi*1+0x931725e],al
  413364:	imul   ebp,DWORD PTR [esi-0x6c],0xffffffad
  413368:	dec    esi
  413369:	popa   
  41336a:	cdq    
  41336b:	push   es
  41336c:	pop    esi
  41336d:	je     0x4132f0
  41336f:	mov    edi,0xad986e6c
  413374:	xor    eax,0x31046945
  413379:	dec    esp
  41337a:	ins    BYTE PTR es:[edi],dx
  41337b:	sbb    eax,DWORD PTR [edi+eax*2]
  41337e:	pop    edi
  41337f:	cli    
  413380:	dec    edi
  413381:	pop    edi
  413382:	push   ebp
  413383:	adc    al,0x13
  413385:	inc    eax
  413386:	push   esi
  413387:	inc    edx
  413388:	out    0x3d,eax
  41338a:	pop    ebp
  41338b:	inc    esp
  41338c:	and    BYTE PTR [esi+0x56],ah
  41338f:	dec    esi
  413390:	or     BYTE PTR [ecx+0x52],ch
  413393:	adc    al,0x1a
  413395:	addr16 push edi
  413397:	dec    eax
  413398:	mul    BYTE PTR [ebx+eax*2+0x39]
  41339c:	adc    edi,DWORD PTR [edi]
  41339e:	sbb    DWORD PTR ds:0x421267fa,ebp
  4133a4:	ret    
  4133a5:	cs push ss
  4133a7:	cs ret 
  4133a9:	data16 sbb al,0x43
  4133ac:	pop    es
  4133ad:	inc    ebx
  4133ae:	add    BYTE PTR [eax],al
  4133b0:	sbb    al,0x31
  4133b2:	mov    esp,0xcc381764
  4133b7:	push   ecx
  4133b8:	xor    DWORD PTR [ebx-0x32],esp
  4133bb:	pop    ebp
  4133bc:	std    
  4133bd:	inc    esi
  4133be:	enter  0xd251,0x5f
  4133c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133c3:	imul   ecx,esi,0x42
  4133c6:	xchg   ebx,eax
  4133c7:	pusha  
  4133c8:	jecxz  0x413429
  4133ca:	mov    bl,0x66
  4133cc:	fnsave [ebx+eax*4]
  4133cf:	and    esi,eax
  4133d1:	cs jl  0x41343c
  4133d4:	out    0x2d,al
  4133d6:	mov    esp,DWORD PTR [eax-0x3d]
  4133d9:	adc    ebx,DWORD PTR [ebx+0x7e42c14c]
  4133df:	ins    BYTE PTR es:[edi],dx
  4133e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4133e1:	xor    edi,DWORD PTR [edi+0x3]
  4133e4:	sub    BYTE PTR ds:0x60a0615b,0xe7
  4133eb:	aaa    
  4133ec:	outs   dx,BYTE PTR ds:[esi]
  4133ed:	inc    esp
  4133ee:	pop    edx
  4133ef:	dec    edi
  4133f0:	xchg   esi,eax
  4133f1:	dec    eax
  4133f2:	dec    edx
  4133f3:	ins    BYTE PTR es:[edi],dx
  4133f4:	sbb    dh,BYTE PTR gs:[bx]
  4133f8:	ja     0x413462
  4133fa:	pop    ss
  4133fb:	add    al,0x55
  4133fd:	inc    edi
  4133fe:	add    BYTE PTR [eax+0x57],al
  413401:	out    dx,al
  413402:	data16 aas 
  413404:	push   esp
  413405:	adc    al,0x2e
  413407:	adc    BYTE PTR [edi+0x37],dl
  41340a:	add    BYTE PTR [esi],dh
  41340c:	and    ah,BYTE PTR [ecx+0x46]
  41340f:	cmp    eax,0x20441405
  413414:	add    BYTE PTR [eax],al
  413416:	add    edx,DWORD PTR [esp+eax*2]
  413419:	sub    al,0xff
  41341b:	push   edi
  41341c:	inc    edi
  41341d:	sbb    ebp,DWORD PTR ds:0xf01d5355
  413423:	push   ebp
  413424:	push   esp
  413425:	sbb    DWORD PTR ds:0xdb1414f,ebp
  41342b:	inc    ebp
  41342c:	je     0x4133fc
  41342e:	add    BYTE PTR [edi+0x0],al
  413431:	mov    edx,0xd6743617
  413436:	or     eax,0x3fa56342
  41343b:	xor    BYTE PTR [ebp-0x35],ch
  41343e:	or     eax,0xf5aa5130
  413443:	arpl   WORD PTR [ebx-0x73],ax
  413446:	repz inc edx
  413448:	je     0x4133d6
  41344a:	sbb    al,0x68
  41344c:	push   eax
  41344d:	leave  
  41344e:	and    al,0xf4
  413450:	inc    edi
  413451:	xchg   cl,bl
  413453:	xor    bl,BYTE PTR [eax+edi*4-0xd]
  413457:	ins    DWORD PTR es:[di],dx
  413459:	xchg   esi,eax
  41345a:	(bad)  
  41345b:	xor    DWORD PTR [edi+0x7b],ebx
  41345e:	xor    ah,BYTE PTR [ebp+0x6d]
  413461:	(bad)  
  413462:	jle    0x4134ab
  413464:	pop    edi
  413465:	jnp    0x4133f8
  413467:	pusha  
  413468:	inc    ebp
  413469:	push   ebp
  41346a:	xchg   esp,eax
  41346b:	xor    bl,BYTE PTR [edi+0x4d]
  41346e:	pusha  
  41346f:	push   ebx
  413470:	aas    
  413471:	cmp    DWORD PTR [esi+0x60],ecx
  413474:	inc    ecx
  413475:	push   esp
  413476:	popa   
  413477:	xor    DWORD PTR [esi+0x0],eax
  41347a:	add    BYTE PTR [eax],al
  41347c:	sbb    al,0x8
  41347e:	and    BYTE PTR [esi],dh
  413480:	sub    BYTE PTR [eax],cl
  413482:	jb     0x4134f3
  413484:	jle    0x4134e3
  413486:	outs   dx,DWORD PTR ds:[esi]
  413487:	jae    0x4134fa
  413489:	aaa    
  41348a:	outs   dx,BYTE PTR ds:[esi]
  41348b:	popa   
  41348c:	inc    esp
  41348d:	cld    
  41348e:	dec    esp
  41348f:	inc    ebx
  413490:	sbb    al,0x37
  413492:	imul   ebp,DWORD PTR [edx+edi*1+0x31],0x72
  413497:	add    BYTE PTR [ebx],cl
  413499:	aaa    
  41349a:	data16 je 0x41345c
  41349d:	xor    dh,BYTE PTR [edx+0x65]
  4134a0:	adc    al,0xff
  4134a2:	imul   ebp,DWORD PTR [edi+0x3a],0x31
  4134a6:	ins    BYTE PTR es:[edi],dx
  4134a7:	push   ebx
  4134a8:	pop    ebx
  4134a9:	push   ecx
  4134aa:	push   eax
  4134ab:	inc    ebp
  4134ac:	je     0x413502
  4134ae:	jno    0x413524
  4134b0:	ins    DWORD PTR es:[edi],dx
  4134b1:	call   DWORD PTR [ebx+0x50]
  4134b4:	cmp    BYTE PTR [edi],cl
  4134b6:	and    BYTE PTR [eax-0x39],cl
  4134b9:	ss popa 
  4134bb:	pop    esp
  4134bc:	cdq    
  4134bd:	push   esp
  4134be:	push   esp
  4134bf:	outs   dx,DWORD PTR ds:[esi]
  4134c0:	addr16 xor eax,0x11aa6162
  4134c6:	dec    edi
  4134c7:	outs   dx,DWORD PTR ds:[esi]
  4134c8:	outs   dx,BYTE PTR ds:[esi]
  4134c9:	dec    ebp
  4134ca:	jae    0x41352d
  4134cc:	mov    edx,0xa4475c5e
  4134d1:	cmp    BYTE PTR [edx+0x61],ah
  4134d4:	mov    ah,0x4
  4134d6:	aas    
  4134d7:	inc    ecx
  4134d8:	mov    dh,bh
  4134da:	pop    ebx
  4134db:	inc    ebx
  4134dc:	mov    ebp,0x46614c
  4134e1:	add    BYTE PTR [ecx+eax*1+0xf83720],bl
  4134e8:	jb     0x413559
  4134ea:	scas   al,BYTE PTR es:[edi]
  4134eb:	pop    ebp
  4134ec:	outs   dx,DWORD PTR ds:[esi]
  4134ed:	jae    0x413470
  4134ef:	aaa    
  4134f0:	outs   dx,BYTE PTR ds:[esi]
  4134f1:	popa   
  4134f2:	fs cld 
  4134f4:	dec    esp
  4134f5:	inc    ebx
  4134f6:	xor    edi,edi
  4134f8:	bound  ebp,QWORD PTR [ebp-0x6b]
  4134fb:	dec    ecx
  4134fc:	popa   
  4134fd:	jb     0x413530
  4134ff:	sbb    ah,BYTE PTR [ebx+0x66]
  413502:	jge    0x41350a
  413504:	popa   
  413505:	jb     0x41355b
  413507:	daa    
  413508:	cmp    ebp,DWORD PTR [esi+edx*2+0x49]
  41350c:	popa   
  41350d:	ins    BYTE PTR es:[edi],dx
  41350e:	sub    dl,0x40
  413511:	push   eax
  413512:	ins    BYTE PTR es:[edi],dx
  413513:	(bad)  
  413514:	ds jae 0x41355c
  413517:	adc    BYTE PTR [esi],bh
  413519:	push   esp
  41351a:	popa   
  41351b:	retf   
  41351c:	sbb    DWORD PTR [eax],esp
  41351e:	imul   esp,DWORD PTR [esi],0x1c556365
  413524:	aas    
  413525:	push   esp
  413526:	push   ds
  413527:	push   ss
  413528:	push   0x1b91062
  41352d:	push   ecx
  41352e:	push   cs
  41352f:	int    0x4d
  413531:	jne    0x413543
  413533:	fstp   DWORD PTR [esi+0x5c]
  413536:	not    dh
  413538:	bound  edx,QWORD PTR fs:[eax]
  41353b:	jg     0x41356d
  41353d:	inc    ecx
  41353e:	lock call 0x634d:0x87f25c3e
  413546:	add    BYTE PTR [eax],al
  413548:	neg    DWORD PTR [esi+0xb292031]
  41354e:	xor    al,0x72
  413550:	into   
  413551:	mov    WORD PTR [esi+0x71],ds
  413554:	loop   0x4134f9
  413556:	outs   dx,BYTE PTR fs:[esi]
  413558:	rcl    BYTE PTR [esi-0x790db0cb],1
  41355e:	fs ins DWORD PTR es:[edi],dx
  413560:	int    0x88
  413562:	bound  esi,QWORD PTR [edx+0x31]
  413565:	lahf   
  413566:	cmp    al,0x6c
  413568:	sahf   
  413569:	(bad)  
  41356a:	bound  ebp,QWORD PTR [edx+eax*4+0x6e]
  41356e:	inc    edx
  41356f:	push   eax
  413570:	je     0x413586
  413572:	inc    ebx
  413573:	inc    edi
  413574:	mov    ds:0x654a4440,al
  413579:	fs out 0x2f,eax
  41357c:	ins    BYTE PTR es:[edi],dx
  41357d:	sub    BYTE PTR [esi],bh
  41357f:	pop    si
  413581:	sub    BYTE PTR [edx],bl
  413583:	inc    edi
  413584:	ss fs and al,0x30
  413588:	jo     0x4135cb
  41358a:	cmp    ebp,DWORD PTR [ecx+0x6f]
  41358d:	pusha  
  41358e:	pop    ss
  41358f:	and    al,0x81
  413591:	inc    esi
  413592:	push   ss
  413593:	add    al,0x75
  413595:	push   ebx
  413596:	or     esp,DWORD PTR [ebx+0x53]
  413599:	xor    eax,0x55703703
  41359e:	aaa    
  41359f:	dec    ecx
  4135a0:	pop    ebp
  4135a1:	push   edi
  4135a2:	cld    
  4135a3:	push   edi
  4135a4:	push   edx
  4135a5:	push   edx
  4135a6:	adc    esi,DWORD PTR [ecx+edx*2]
  4135a9:	dec    eax
  4135aa:	add    BYTE PTR [eax+0x0],bl
  4135ad:	add    BYTE PTR [edx],dl
  4135af:	adc    al,0xb
  4135b1:	inc    edi
  4135b2:	and    al,BYTE PTR [eax-0x34]
  4135b5:	dec    ecx
  4135b6:	std    
  4135b7:	arpl   di,sp
  4135b9:	das    
  4135ba:	add    BYTE PTR [ecx],ch
  4135bc:	add    eax,0xe73fe668
  4135c1:	ss or  al,0x32
  4135c4:	mov    ebx,0xc445d65a
  4135c9:	das    
  4135ca:	mul    DWORD PTR [edi]
  4135cc:	enter  0xd956,0x51
  4135d0:	(bad)  
  4135d1:	xor    edi,ebp
  4135d3:	push   es
  4135d4:	out    0x36,eax
  4135d6:	les    esi,FWORD PTR [ecx]
  4135d8:	xchg   ebx,eax
  4135d9:	pop    edx
  4135da:	out    dx,al
  4135db:	inc    ebp
  4135dc:	mov    WORD PTR [edi],gs
  4135de:	out    dx,eax
  4135df:	daa    
  4135e0:	mov    BYTE PTR [esi-0x37],dl
  4135e3:	push   ecx
  4135e4:	lahf   
  4135e5:	xor    esi,DWORD PTR [ecx]
  4135e7:	mov    gs,WORD PTR [bx+di-0x5b]
  4135eb:	inc    ebx
  4135ec:	add    BYTE PTR [eax-0x58a3c884],cl
  4135f2:	jle    0x41364f
  4135f4:	jno    0x413647
  4135f6:	imul   ebx,DWORD PTR [eax+edx*2+0x3d],0x29
  4135fb:	adc    al,0x47
  4135fd:	inc    edi
  4135fe:	pop    esi
  4135ff:	inc    eax
  413600:	pop    edi
  413601:	cmp    eax,0x2d723791
  413606:	mov    WORD PTR [eax+0x68],es
  413609:	sbb    DWORD PTR [eax+eax*2+0x68],edx
  41360d:	jmp    0x41b59194
  413612:	add    BYTE PTR [eax],al
  413614:	xor    eax,0x791a6e53
  413619:	pop    ebx
  41361a:	ins    BYTE PTR es:[edi],dx
  41361b:	or     eax,0x1d5f6415
  413620:	gs adc al,0x44
  413623:	or     BYTE PTR [ecx+0x5b],bl
  413626:	inc    esi
  413627:	push   ss
  413628:	push   ecx
  413629:	xor    BYTE PTR [ebx-0x5],ah
  41362c:	xor    bl,BYTE PTR [eax+0x51]
  41362f:	add    BYTE PTR [ecx],cl
  413631:	aaa    
  413632:	jno    0x4135f3
  413634:	push   ss
  413635:	pop    ebx
  413636:	je     0x413621
  413638:	inc    esi
  413639:	dec    ebx
  41363a:	jae    0x41360c
  41363c:	pop    ss
  41363d:	sub    eax,0x400dcd2e
  413642:	add    BYTE PTR [ebp-0x428eccc6],ch
  413648:	adc    eax,DWORD PTR [esi+0x77]
  41364b:	psubusw mm3,QWORD PTR [edx+0x74]
  41364f:	jmp    0xc8ad886a
  413654:	pop    es
  413655:	sub    al,0x46
  413657:	shl    DWORD PTR [edx],0x58
  41365a:	xor    ecx,ebp
  41365c:	push   ds
  41365d:	push   edx
  41365e:	ins    BYTE PTR es:[edi],dx
  41365f:	mov    bh,bl
  413661:	sub    eax,DWORD PTR [esi-0x4f]
  413664:	add    bl,BYTE PTR [eax+0x34]
  413667:	add    BYTE PTR [eax-0x16],cl
  41366a:	inc    ebp
  41366b:	imul   edi,DWORD PTR [esp+ebp*1+0x59ac695a],0x62ac005d
  413676:	gs je  0x413679
  413679:	add    BYTE PTR [ebp+0x59],ah
  41367c:	pop    ebp
  41367d:	outs   dx,BYTE PTR ds:[esi]
  41367e:	jns    0x4136ab
  413680:	popa   
  413681:	jb     0x4136b1
  413683:	dec    eax
  413684:	imul   ebp,DWORD PTR [eax+ecx*1-0x16],0x316b6571
  41368c:	outs   dx,BYTE PTR ds:[esi]
  41368d:	je     0x4136ba
  41368f:	xor    DWORD PTR [edx+0x76],esi
  413692:	jne    0x4136f6
  413694:	outs   dx,DWORD PTR ds:[esi]
  413695:	and    BYTE PTR cs:[ecx+0x6c],bl
  413699:	add    BYTE PTR [esi+ebp*1+0x65],ch
  41369d:	ins    BYTE PTR es:[edi],dx
  41369e:	xor    eax,0x2c6c654a
  4136a3:	xor    eax,0x59bd782e
  4136a8:	add    BYTE PTR [ebx+0x1f],dl
  4136ab:	cs je  0x413725
  4136ae:	cmp    DWORD PTR [edx+0x61],esp
  4136b1:	pop    esp
  4136b2:	push   esi
  4136b3:	pop    ebp
  4136b4:	ins    BYTE PTR es:[edi],dx
  4136b5:	gs inc edx
  4136b7:	pop    ebp
  4136b8:	ins    BYTE PTR es:[edi],dx
  4136b9:	ins    BYTE PTR es:[edi],dx
  4136ba:	imul   edx,DWORD PTR ds:0x61766f4f,0x326a6173
  4136c4:	pop    esp
  4136c5:	inc    esi
  4136c6:	jno    0x413721
  4136c8:	popa   
  4136c9:	pop    edx
  4136ca:	popa   
  4136cb:	pop    ecx
  4136cc:	ins    BYTE PTR es:[edi],dx
  4136cd:	popa   
  4136ce:	cmp    BYTE PTR [edi+0x6c],cl
  4136d1:	imul   esi,DWORD PTR [ebp+0x33],0x33910074
  4136d8:	outs   dx,DWORD PTR ds:[esi]
  4136d9:	je     0x413684
  4136db:	pop    ecx
  4136dc:	ins    BYTE PTR es:[edi],dx
  4136dd:	pop    edi
  4136de:	add    BYTE PTR [eax],al
  4136e0:	xchg   esp,eax
  4136e1:	pop    esi
  4136e2:	jb     0x4136e4
  4136e4:	xor    DWORD PTR [ebx+0x60],esi
  4136e7:	jno    0x4136ae
  4136e9:	stos   BYTE PTR es:[edi],al
  4136ea:	ss jno 0x4136b9
  4136ed:	cmp    al,0x1
  4136ef:	push   eax
  4136f0:	nop
  4136f1:	ds push esp
  4136f3:	add    BYTE PTR [ecx+0x31745392],al
  4136f9:	popf   
  4136fa:	imul   ax,WORD PTR [esi+0x75206557],0x64
  413702:	push   esi
  413703:	add    BYTE PTR [edx+0x48],ah
  413706:	push   esi
  413707:	jbe    0x41369d
  413709:	pop    ebp
  41370a:	and    al,0x54
  41370c:	js     0x413709
  41370e:	add    BYTE PTR fs:[edx+0x4c765650],al
  413715:	std    
  413716:	and    DWORD PTR [eax+0x4e],ecx
  413719:	(bad)  
  41371a:	push   edi
  41371b:	add    BYTE PTR [edx+0x54765608],al
  413721:	sbb    eax,0x8425322
  413726:	push   esi
  413727:	add    BYTE PTR [edx+0x10],ah
  41372a:	push   esi
  41372b:	jbe    0x413779
  41372d:	mov    ebp,0xbe10501f
  413732:	push   esp
  413733:	add    BYTE PTR [edx],al
  413735:	or     BYTE PTR [esi+0x76],dl
  413738:	adc    al,0xbd
  41373a:	pop    ds
  41373b:	push   eax
  41373c:	push   es
  41373d:	fst    QWORD PTR [ebp+0x0]
  413740:	loope  0x41370d
  413742:	push   ebp
  413743:	push   0x7e310000
  413748:	data16 jb 0x413752
  41374b:	rcl    BYTE PTR [ebx+0x54],1
  41374e:	clc    
  41374f:	jp     0x4137b7
  413751:	add    ch,bh
  413753:	retf   
  413754:	push   esp
  413755:	je     0x413768
  413757:	sahf   
  413758:	data16 jb 0x413742
  41375b:	iret   
  41375c:	push   ebx
  41375d:	and    cl,ch
  41375f:	adc    edx,DWORD PTR [esi-0x54ec3aac]
  413765:	(bad)  
  413766:	sar    BYTE PTR [edi],0xc7
  413769:	xor    al,0xd2
  41376b:	inc    ebp
  41376c:	xchg   ebp,eax
  41376d:	retw   
  41376f:	repz fwait
  413771:	push   esp
  413772:	xchg   edx,eax
  413773:	inc    edx
  413774:	out    0x3f,eax
  413776:	xchg   BYTE PTR [ebx+0x7b],al
  413779:	and    eax,DWORD PTR [eax-0x6da686cf]
  41377f:	inc    edx
  413780:	pop    es
  413781:	xor    al,0x6e
  413783:	inc    ebx
  413784:	pop    edx
  413785:	add    al,0x75
  413787:	xor    eax,0x6351585a
  41378c:	inc    esp
  41378d:	push   edx
  41378e:	jg     0x4137c1
  413790:	cmp    DWORD PTR [ecx+eax*4],esp
  413793:	daa    
  413794:	cmp    DWORD PTR [eax+0x31],ebx
  413797:	dec    eax
  413798:	dec    eax
  413799:	push   ebx
  41379a:	gs hlt 
  41379c:	sbb    DWORD PTR [ecx+0x63],ebp
  41379f:	ds or  al,0x52
  4137a2:	adc    DWORD PTR [eax+ecx*1+0x58],esp
  4137a6:	pop    ecx
  4137a7:	adc    al,0x23
  4137a9:	add    BYTE PTR gs:[eax],al
  4137ac:	inc    eax
  4137ad:	inc    eax
  4137ae:	(bad)  
  4137af:	xor    dl,BYTE PTR [edx+0x42]
  4137b2:	std    
  4137b3:	push   0x4d12f423
  4137b8:	and    DWORD PTR [ecx],esi
  4137ba:	out    0x45,eax
  4137bc:	add    eax,0xf63dc764
  4137c1:	cmp    eax,0x3fee66d0
  4137c6:	into   
  4137c7:	push   ecx
  4137c8:	xor    DWORD PTR [esi-0x45],ecx
  4137cb:	xor    edx,DWORD PTR [ecx+0x53]
  4137ce:	mov    esi,0xd5350a60
  4137d3:	rol    BYTE PTR [bx+di-0x19],cl
  4137d7:	fld    QWORD PTR gs:[ebx+0x0]
  4137db:	(bad)  
  4137de:	je     0x4137df
  4137e0:	(bad)  
  4137e1:	cmp    esi,DWORD PTR [ecx+ebp*8+0x1e]
  4137e5:	push   edx
  4137e6:	jae    0x413775
  4137e8:	out    0x32,al
  4137ea:	je     0x4137a5
  4137ec:	loopne 0x413816
  4137ee:	ins    DWORD PTR es:[edi],dx
  4137ef:	xchg   DWORD PTR [edx],edx
  4137f1:	gs ins DWORD PTR es:[edi],dx
  4137f3:	pop    DWORD PTR [esi-0x6684a0bf]
  4137f9:	adc    al,0x2e
  4137fb:	lea    edx,[ebp-0x6f40ffc0]
  413801:	inc    esp
  413802:	jno    0x4137ed
  413804:	inc    ebx
  413805:	sub    DWORD PTR [esi+0x55],esp
  413808:	pop    esi
  413809:	push   edi
  41380a:	jb     0x413858
  41380c:	inc    ecx
  41380d:	push   edx
  41380e:	push   eax
  41380f:	daa    
  413810:	add    BYTE PTR [eax],al
  413812:	cmp    DWORD PTR [esp+ebx*2+0x2b],esp
  413816:	mov    BYTE PTR [eax],ch
  413818:	ins    BYTE PTR es:[edi],dx
  413819:	inc    esp
  41381a:	mov    esp,esi
  41381c:	dec    edi
  41381d:	cmp    edi,DWORD PTR [esi+0x29]
  413820:	or     WORD PTR [edi+0x60],bp
  413824:	push   eax
  413825:	inc    ebp
  413826:	jo     0x41387f
  413828:	cvtps2pi mm4,QWORD PTR [di+0x6d]
  41382d:	mulps  xmm0,XMMWORD PTR [ecx+0x5f]
  413831:	sbb    ecx,DWORD PTR [eax+0x58]
  413834:	inc    edx
  413835:	cld    
  413836:	push   cs
  413837:	sub    BYTE PTR [ebx-0xb],ah
  41383a:	bound  eax,QWORD PTR [edx+0x6d]
  41383d:	push   es
  41383e:	pop    ss
  41383f:	hlt    
  413840:	push   eax
  413841:	dec    BYTE PTR [eax+eax*2]
  413844:	jne    0x41380e
  413846:	loopne 0x41387a
  413848:	pop    esp
  413849:	stos   DWORD PTR es:[edi],eax
  41384a:	jmp    0xe70da476
  41384f:	arpl   WORD PTR [edx-0x42],si
  413852:	xlat   BYTE PTR ds:[ebx]
  413853:	sub    eax,0xfe9e0020
  413858:	dec    edi
  413859:	and    BYTE PTR [ebx+0x76656556],bl
  41385f:	pop    esi
  413860:	pop    esp
  413861:	dec    ebp
  413862:	imul   edx,DWORD PTR [edi+0x6e],0x66558b00
  413869:	je     0x41380a
  41386b:	das    
  41386c:	jb     0x4138d3
  41386e:	test   BYTE PTR [eax+edx*2+0x46],dl
  413872:	jl     0x413876
  413874:	pop    esp
  413875:	inc    edx
  413876:	add    BYTE PTR [eax],al
  413878:	lods   eax,DWORD PTR ds:[esi]
  413879:	push   ebp
  41387a:	ins    BYTE PTR es:[edi],dx
  41387b:	gs pushf 
  41387d:	icebp  
  41387e:	dec    edi
  41387f:	jb     0x413838
  413881:	push   esi
  413882:	data16 and dh,cl
  413885:	std    
  413886:	dec    edi
  413887:	pop    esp
  413888:	inc    edi
  413889:	pusha  
  41388a:	je     0x4138f5
  41388c:	ja     0x4138e4
  41388e:	outs   dx,DWORD PTR ds:[esi]
  41388f:	add    BYTE PTR [ebx],bh
  413891:	push   edi
  413892:	data16 je 0x4138f4
  413895:	xor    DWORD PTR [edx+0x65],esi
  413898:	adc    al,0x52
  41389a:	jno    0x413908
  41389c:	je     0x4138cb
  41389e:	je     0x4138f0
  4138a0:	sbb    dl,BYTE PTR [edi+0x6b]
  4138a3:	data16 sub BYTE PTR [ebx],al
  4138a6:	imul   esp,DWORD PTR [esi+0x2c],0x5f
  4138aa:	pop    ebp
  4138ab:	jb     0x4138da
  4138ad:	add    al,0x42
  4138af:	jne    0x4138e5
  4138b1:	xor    al,0x61
  4138b3:	je     0x4138ad
  4138b5:	popa   
  4138b6:	imul   ebp,DWORD PTR [edi+0x3e],0xfffffff0
  4138ba:	inc    ebp
  4138bb:	push   esp
  4138bc:	dec    eax
  4138bd:	lock ds ins BYTE PTR es:[edi],dx
  4138c0:	xor    DWORD PTR ds:0xf724746e,ebp
  4138c6:	outs   dx,DWORD PTR ds:[esi]
  4138c7:	je     0x41392a
  4138c9:	pop    eax
  4138ca:	outs   dx,BYTE PTR ds:[esi]
  4138cb:	jae    0x413865
  4138cd:	add    al,0x6b
  4138cf:	xor    di,dx
  4138d2:	push   esp
  4138d3:	pop    edi
  4138d4:	add    edx,eax
  4138d6:	sub    eax,0x35650142
  4138db:	push   eax
  4138dc:	add    BYTE PTR [eax],al
  4138de:	xor    DWORD PTR [edi+0x62],esp
  4138e1:	jno    0x4138c8
  4138e3:	cdq    
  4138e4:	data16 jno 0x4138c9
  4138e7:	rcr    DWORD PTR [esi+ebp*2-0x9],cl
  4138eb:	mov    ds:0x7a31635d,eax
  4138f0:	pop    edx
  4138f1:	je     0x4138c7
  4138f3:	cdq    
  4138f4:	inc    ebp
  4138f5:	addr16 ret 
  4138f7:	stos   BYTE PTR es:[edi],al
  4138f8:	cmp    ch,BYTE PTR [esi-0x5e]
  4138fb:	aaa    
  4138fc:	bound  ebp,QWORD PTR [ebp+edx*4+0x6f]
  413900:	pop    edx
  413901:	jb     0x413963
  413903:	stos   DWORD PTR es:[edi],eax
  413904:	sbb    edi,DWORD PTR [eax-0x7c]
  413907:	aaa    
  413908:	add    DWORD PTR [edx+eiz*2+0x60],ebx
  41390c:	popa   
  41390d:	jb     0x41398c
  41390f:	in     eax,dx
  413910:	aaa    
  413911:	push   eax
  413912:	xor    ebp,esp
  413914:	pusha  
  413915:	jbe    0x41389d
  413917:	pop    ecx
  413918:	pop    ecx
  413919:	je     0x41396f
  41391b:	cli    
  41391c:	sbb    eax,0x3ff5064
  413921:	dec    eax
  413922:	dec    eax
  413923:	cli    
  413924:	push   edi
  413925:	ins    DWORD PTR es:[edi],dx
  413926:	arpl   WORD PTR [esi+ebx*1],ax
  413929:	fs push eax
  41392b:	pop    ss
  41392c:	add    al,0x5f
  41392e:	dec    ebp
  41392f:	rsqrtps xmm4,XMMWORD PTR [edx+0x4a]
  413933:	int    0x65
  413935:	pop    edi
  413936:	cmp    eax,0x187352ab
  41393b:	or     dl,BYTE PTR [edi+0x2e]
  41393e:	or     eax,0x580c
  413943:	add    ch,bh
  413945:	push   ss
  413946:	push   ebp
  413947:	jb     0x41395c
  413949:	mov    dh,0x43
  41394b:	push   esp
  41394c:	loope  0x413961
  41394e:	out    0x30,eax
  413950:	adc    al,0x2e
  413952:	rcl    DWORD PTR [esi+ebx*8+0x41],cl
  413956:	int3   
  413957:	das    
  413958:	fnstsw WORD PTR [esi]
  41395a:	fldenv [ecx-0x24]
  41395d:	dec    ebp
  41395e:	fwait
  41395f:	xor    esi,DWORD PTR [ecx]
  413961:	sub    ecx,ebp
  413963:	push   eax
  413964:	in     eax,0x32
  413966:	ret    
  413967:	pop    edi
  413968:	loope  0x41399c
  41396a:	mov    bl,0x5b
  41396c:	xor    DWORD PTR [ecx-0x6a],esp
  41396f:	gs mov ebp,0xd251883c
  413975:	push   edi
  413976:	mov    edx,0xab32bd5c
  41397b:	inc    ebp
  41397c:	ja     0x4139d8
  41397e:	fwait
  41397f:	xor    esi,DWORD PTR [ecx]
  413981:	push   edi
  413982:	jns    0x4139ea
  413984:	xchg   ebp,eax
  413985:	cmp    DWORD PTR [ebp+0x7b358e57],eax
  41398b:	xor    BYTE PTR [esi+0x40],ch
  41398e:	pop    ebx
  41398f:	add    al,0x70
  413991:	es inc esp
  413993:	pusha  
  413994:	xchg   edx,eax
  413995:	inc    edx
  413996:	pop    ebx
  413997:	pop    ebp
  413998:	push   esi
  413999:	inc    eax
  41399a:	sub    bl,BYTE PTR [edx+edx*2+0x37]
  41399e:	push   edx
  41399f:	add    al,0x80
  4139a1:	inc    ebx
  4139a2:	inc    ebp
  4139a3:	push   eax
  4139a4:	fs xor eax,0x6139
  4139aa:	jne    0x4139f3
  4139ac:	ds push eax
  4139ae:	outs   dx,BYTE PTR ds:[esi]
  4139af:	push   eax
  4139b0:	sub    eax,0x37486f42
  4139b5:	sub    BYTE PTR [esp+0x1b],ch
  4139b9:	pop    ebp
  4139ba:	inc    esp
  4139bb:	inc    edx
  4139bc:	sbb    al,BYTE PTR [ecx+eax*1]
  4139bf:	xor    eax,0x431c56fa
  4139c4:	stc    
  4139c5:	pop    edi
  4139c6:	xor    DWORD PTR [ecx+0x0],ecx
  4139c9:	cli    
  4139ca:	adc    DWORD PTR [esi],esp
  4139cc:	dec    esi
  4139cd:	or     al,ch
  4139cf:	add    BYTE PTR ss:[ecx-0x578bdb15],dh
  4139d6:	fisub  WORD PTR ds:0x373ce971
  4139dc:	imul   edi,DWORD PTR [esi-0x2fbbc902],0xfffffffc
  4139e3:	adc    edx,DWORD PTR [eax-0x32]
  4139e6:	add    al,0x28
  4139e8:	add    BYTE PTR [ecx-0x608bdb05],ah
  4139ee:	aad    0x3e
  4139f0:	arpl   cx,bp
  4139f2:	add    al,BYTE PTR [ecx+0x72]
  4139f5:	xchg   ebp,eax
  4139f6:	xor    al,BYTE PTR [edi+0x71]
  4139f9:	mov    esp,ds
  4139fb:	inc    ecx
  4139fc:	pop    edi
  4139fd:	jl     0x413990
  4139ff:	adc    al,0x50
  413a01:	mov    BYTE PTR [edi+0x25],bh
  413a04:	jne    0x413994
  413a06:	test   BYTE PTR [eax],bh
  413a08:	add    BYTE PTR [ecx-0x5a8bda85],ah
  413a0e:	add    BYTE PTR [eax],al
  413a10:	ins    DWORD PTR es:[edi],dx
  413a11:	es dec esi
  413a13:	dec    eax
  413a14:	push   0x5a3a0037
  413a19:	cmp    dh,BYTE PTR [esi+ebx*2-0x74]
  413a1d:	arpl   WORD PTR es:0x4f664176,bp
  413a24:	push   eax
  413a25:	aaa    
  413a26:	inc    ecx
  413a27:	xor    al,0x85
  413a29:	hlt    
  413a2a:	push   eax
  413a2b:	inc    esi
  413a2c:	push   ebx
  413a2d:	sub    BYTE PTR [ebp+0x48],dh
  413a30:	addr16 aaa 
  413a32:	pop    esp
  413a33:	xor    BYTE PTR [ebx+0x28],ch
  413a36:	arpl   WORD PTR [ebx],bx
  413a38:	pop    ebx
  413a39:	aaa    
  413a3a:	je     0x413a71
  413a3c:	std    
  413a3d:	and    eax,0x400c076d
  413a42:	arpl   WORD PTR [eax],ax
  413a44:	stos   DWORD PTR es:[edi],eax
  413a45:	push   ss
  413a46:	dec    edi
  413a47:	outs   dx,DWORD PTR ds:[esi]
  413a48:	ss inc esp
  413a4a:	jae    0x413aad
  413a4c:	call   0x52e8:0x24465c33
  413a53:	popa   
  413a54:	push   0x33
  413a56:	pop    esp
  413a57:	inc    ebx
  413a58:	iret   
  413a59:	call   0xe6f5809e
  413a5e:	pop    ebx
  413a5f:	push   ebx
  413a60:	jno    0x413ac4
  413a62:	popa   
  413a63:	jae    0x413abd
  413a65:	out    dx,al
  413a66:	push   0x73
  413a68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a69:	push   ss
  413a6a:	push   ecx
  413a6b:	jae    0x413ad2
  413a6d:	dec    eax
  413a6e:	add    BYTE PTR [eax-0x71],dl
  413a71:	dec    eax
  413a72:	je     0x413a74
  413a74:	add    BYTE PTR [eax],al
  413a76:	mov    ch,ah
  413a78:	dec    DWORD PTR [edi-0x5c]
  413a7b:	dec    esi
  413a7c:	push   edx
  413a7d:	add    BYTE PTR [ebx-0x17],bh
  413a80:	inc    edi
  413a81:	add    al,cl
  413a83:	inc    edi
  413a84:	imul   esp,DWORD PTR [esi-0x3f],0x49
  413a88:	popa   
  413a89:	jae    0x413a79
  413a8b:	pop    ebp
  413a8c:	imul   ebp,DWORD PTR [eax+ecx*1-0x6],0xf5a85445
  413a94:	inc    eax
  413a95:	js     0x413aff
  413a97:	dec    esp
  413a98:	imul   esi,DWORD PTR [edx+0x75],0x4a
  413a9c:	add    BYTE PTR [ebx+0x6f],dl
  413a9f:	ss je  0x413b19
  413aa2:	jns    0x413aee
  413aa4:	popa   
  413aa5:	pop    esp
  413aa6:	push   ss
  413aa7:	in     al,0x4f
  413aa9:	and    BYTE PTR ds:0x6f6c7060,dl
  413aaf:	dec    edx
  413ab0:	popa   
  413ab1:	jb     0x413aef
  413ab3:	push   esi
  413ab4:	push   esp
  413ab5:	push   eax
  413ab6:	clc    
  413ab7:	bnd ja 0x413b2a
  413aba:	sub    al,0x4b
  413abc:	jb     0x413b23
  413abe:	xor    DWORD PTR ds:0xd1e5528,ecx
  413ac4:	pop    ebx
  413ac5:	jno    0x413ae8
  413ac7:	sbb    al,0x63
  413ac9:	arpl   bp,di
  413acb:	inc    DWORD PTR [ecx+0x41]
  413ace:	std    
  413acf:	sbb    DWORD PTR [edi+0x6c],edx
  413ad2:	repz sbb edx,DWORD PTR [esi+0x2b]
  413ad6:	inc    ebx
  413ad7:	or     eax,0x10
  413adc:	repz (bad) 
  413ade:	dec    ebp
  413adf:	je     0x413ae7
  413ae1:	fst    DWORD PTR [eax+eax*1+0x2]
  413ae5:	jb     0x413b46
  413ae7:	je     0x413ac7
  413ae9:	fist   DWORD PTR [ebx+0x63]
  413aec:	std    
  413aed:	js     0x413b1c
  413aef:	push   eax
  413af0:	adc    DWORD PTR [eax+0x71dd7049],eax
  413af6:	push   ebx
  413af7:	arpl   bx,ax
  413af9:	(bad)  
  413afa:	xor    DWORD PTR [edx-0x32],esi
  413afd:	cwde   
  413afe:	pop    edx
  413aff:	ins    BYTE PTR es:[edi],dx
  413b00:	int3   
  413b01:	lea    eax,[ecx]
  413b03:	push   eax
  413b04:	nop
  413b05:	mov    ss,WORD PTR [ebp+esi*2-0x6a]
  413b09:	sub    eax,0x9c81005d
  413b0e:	push   esp
  413b0f:	jno    0x413aaf
  413b11:	call   0x6351:0x24656453
  413b18:	xor    ebx,esp
  413b1a:	push   esi
  413b1b:	jno    0x413aa2
  413b1d:	mov    ebx,0x548e6d35
  413b22:	pop    edx
  413b23:	add    BYTE PTR [ecx+0x317455f2],al
  413b29:	in     al,0x59
  413b2b:	addr16 gs inc esp
  413b2e:	popa   
  413b2f:	ins    BYTE PTR es:[edi],dx
  413b30:	sbb    DWORD PTR [eax+edx*2+0x68],0x704ff931
  413b38:	bound  edx,QWORD PTR [eax+edx*1]
  413b3b:	push   eax
  413b3c:	push   edx
  413b3d:	add    bl,BYTE PTR [edi]
  413b3f:	push   edi
  413b40:	add    BYTE PTR [eax],al
  413b42:	inc    ebp
  413b43:	adc    al,0x33
  413b45:	inc    edx
  413b46:	and    edi,DWORD PTR [ebx]
  413b48:	push   es
  413b49:	arpl   WORD PTR ds:0x4f03ba37,bx
  413b4f:	cmp    ecx,DWORD PTR ds:0x1d50315b
  413b55:	arpl   WORD PTR [edi],bx
  413b57:	pop    eax
  413b58:	lock pop esp
  413b5a:	adc    dl,BYTE PTR [eax-0x56]
  413b5d:	pop    eax
  413b5e:	(bad)  
  413b61:	pusha  
  413b62:	aad    0x44
  413b64:	int3   
  413b65:	push   esp
  413b66:	loopne 0x413ba2
  413b68:	mov    esi,0xa313e059
  413b6d:	xor    al,0xd2
  413b6f:	and    al,0xba
  413b71:	pop    edx
  413b72:	les    eax,FWORD PTR [ecx-0x46]
  413b75:	add    esp,eax
  413b77:	inc    eax
  413b78:	lds    ecx,FWORD PTR [edi-0x44]
  413b7b:	xor    bl,BYTE PTR [ecx-0x77b622a2]
  413b81:	pop    ecx
  413b82:	in     eax,dx
  413b83:	sub    al,BYTE PTR [edx-0x7bbc72a2]
  413b89:	mov    fs:0x79418c22,al
  413b8f:	adc    al,0xaa
  413b91:	pop    eax
  413b92:	xchg   DWORD PTR [esi],esi
  413b94:	and    BYTE PTR [eax+0x51],0x44
  413b98:	mov    BYTE PTR [edi-0x67],cl
  413b9b:	adc    al,0x3c
  413b9d:	pop    eax
  413b9e:	test   DWORD PTR [edx],esp
  413ba0:	dec    eax
  413ba1:	ds pop ecx
  413ba3:	inc    esp
  413ba4:	out    0x27,eax
  413ba6:	add    BYTE PTR [eax],al
  413ba8:	pusha  
  413ba9:	cmp    eax,0xfe606153
  413bae:	ds pop ecx
  413bb0:	dec    ebp
  413bb1:	adc    al,0x1b
  413bb3:	ds jge 0x413bfa
  413bb6:	add    BYTE PTR [ebx],bl
  413bb8:	pusha  
  413bb9:	and    eax,0x2300e968
  413bbe:	jno    0x413bd1
  413bc0:	add    dh,BYTE PTR [edi]
  413bc2:	je     0x413bc8
  413bc4:	pop    ds
  413bc5:	sub    al,0x6b
  413bc7:	add    eax,0x1b634535
  413bcc:	div    DWORD PTR [edx]
  413bce:	jb     0x413bb9
  413bd0:	popa   
  413bd1:	and    eax,0x4efcfb63
  413bd6:	imul   ecx,DWORD PTR [esi*1-0x1c05a0bc],0x28
  413bde:	ins    DWORD PTR es:[edi],dx
  413bdf:	fcmovnu st,st(6)
  413be1:	adc    eax,DWORD PTR [esi-0x2b]
  413be4:	loop   0x413c29
  413be6:	ins    DWORD PTR es:[edi],dx
  413be7:	(bad)  
  413be9:	adc    edx,DWORD PTR [ecx-0x42]
  413bec:	add    al,0x28
  413bee:	jne    0x413bb8
  413bf0:	add    BYTE PTR [ebx],dh
  413bf2:	pop    esp
  413bf3:	stos   BYTE PTR es:[edi],al
  413bf4:	add    BYTE PTR [edi],ah
  413bf6:	arpl   WORD PTR [ebx-0x349cb6ea],di
  413bfc:	add    esi,DWORD PTR [edi]
  413bfe:	je     0x413b8c
  413c00:	add    ah,BYTE PTR [ebx]
  413c02:	bound  ecx,QWORD PTR [ebp-0x7397db2b]
  413c08:	adc    BYTE PTR [esp+ebx*2],0xab
  413c0c:	add    BYTE PTR [eax],al
  413c0e:	test   DWORD PTR [eax],ebp
  413c10:	dec    ecx
  413c11:	nop
  413c12:	test   BYTE PTR [ebx],dh
  413c14:	js     0x413bff
  413c16:	nop
  413c17:	aaa    
  413c18:	je     0x413b9c
  413c1a:	ins    DWORD PTR es:[edi],dx
  413c1b:	arpl   WORD PTR ds:[ecx+0x1c],si
  413c1f:	cmp    BYTE PTR [ecx-0x17],dh
  413c22:	cmp    al,BYTE PTR [ecx+0x71]
  413c25:	push   ebp
  413c26:	pop    edi
  413c27:	dec    edi
  413c28:	imul   ecx,DWORD PTR [ebp+esi*1+0x43],0x71
  413c2d:	inc    esp
  413c2e:	cmp    DWORD PTR [esi],0x5f
  413c31:	add    BYTE PTR [ebp+0x69500035],al
  413c37:	inc    ebx
  413c38:	outs   dx,DWORD PTR ds:[esi]
  413c39:	ja     0x413cb2
  413c3b:	inc    edx
  413c3c:	add    BYTE PTR fs:[eax],ch
  413c3f:	inc    edi
  413c40:	jb     0x413cb6
  413c42:	enter  0x6ae1,0x66
  413c46:	sbb    al,0x5f
  413c48:	pop    ebp
  413c49:	jb     0x413c88
  413c4b:	cld    
  413c4c:	inc    eax
  413c4d:	js     0x413c97
  413c4f:	cmp    DWORD PTR [esi+0x44],ebp
  413c52:	call   0x60e3:0x3465764f
  413c59:	jae    0x413be6
  413c5b:	dec    edi
  413c5c:	imul   ebp,DWORD PTR [esi-0x75],0x12
  413c60:	pop    esp
  413c61:	inc    ebp
  413c62:	nop
  413c63:	inc    edx
  413c64:	pop    ebp
  413c65:	outs   dx,BYTE PTR ds:[esi]
  413c66:	int3   
  413c67:	inc    esp
  413c68:	gs jbe 0x413ce8
  413c6b:	adc    bl,BYTE PTR [esp+eiz*2-0x76]
  413c6f:	dec    edi
  413c70:	jbe    0x413cd7
  413c72:	add    BYTE PTR [eax],al
  413c74:	fwait
  413c75:	or     BYTE PTR [edx+0x73],ch
  413c78:	dec    eax
  413c79:	hlt    
  413c7a:	outs   dx,DWORD PTR ds:[esi]
  413c7b:	popa   
  413c7c:	mov    eax,DWORD PTR [ecx+0x73]
  413c7f:	outs   dx,DWORD PTR ds:[esi]
  413c80:	mov    cl,BYTE PTR [esi+0x22]
  413c83:	and    BYTE PTR [edx-0xe],dl
  413c86:	and    DWORD PTR [eax],eax
  413c88:	push   0x6
  413c8a:	add    BYTE PTR [ebx-0x49],dl
  413c8d:	dec    edi
  413c8e:	je     0x413d07
  413c90:	mov    ecx,0xcd5c6143
  413c95:	pop    ecx
  413c96:	jo     0x413cf9
  413c98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c99:	in     eax,dx
  413c9a:	jno    0x413d05
  413c9c:	mov    ?,WORD PTR [eax+eax*1]
  413c9f:	inc    ebp
  413ca0:	add    BYTE PTR [ecx+0x5d],0x6e
  413ca4:	dec    esp
  413ca5:	inc    edx
  413ca6:	gs jbe 0x413d16
  413ca9:	test   DWORD PTR [edi+0x6f],0x5d5831
  413cb0:	sbb    BYTE PTR [eax+0x52],0x76
  413cb4:	push   esp
  413cb5:	jmp    0x58a38fbd
  413cba:	push   edx
  413cbb:	dec    esi
  413cbc:	push   eax
  413cbd:	pop    eax
  413cbe:	pop    ebp
  413cbf:	add    BYTE PTR [ecx+0x5c],ah
  413cc2:	dec    edi
  413cc3:	jno    0x413d0b
  413cc5:	push   es
  413cc6:	push   edx
  413cc7:	fs xor esi,ebp
  413cca:	xor    ebx,DWORD PTR [edi+0x22]
  413ccd:	or     cl,BYTE PTR [ebx+0x6d]
  413cd0:	and    edx,DWORD PTR [edi]
  413cd2:	add    al,0x44
  413cd4:	or     BYTE PTR [ecx+0x615e],ch
  413cda:	sbb    eax,0x3177521e
  413cdf:	or     dl,BYTE PTR [ebx+0x66]
  413ce2:	std    
  413ce3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ce4:	bound  esi,QWORD PTR [edx+0x14]
  413ce7:	xlat   BYTE PTR ds:[ebx]
  413ce8:	xor    eax,DWORD PTR [ecx-0x17]
  413ceb:	sbb    ch,BYTE PTR [edi]
  413ced:	ins    DWORD PTR es:[edi],dx
  413cee:	xlat   BYTE PTR ds:[ebx]
  413cef:	into   
  413cf0:	dec    esp
  413cf1:	pop    edi
  413cf2:	jecxz  0x413ccb
  413cf4:	and    eax,0x50dbcd41
  413cf9:	jno    0x413cc3
  413cfb:	fnstcw WORD PTR [ebx]
  413cfd:	push   esp
  413cfe:	loope  0x413c86
  413d00:	cmp    edx,DWORD PTR [ecx+eiz*8+0x7b]
  413d04:	pusha  
  413d05:	popa   
  413d06:	into   
  413d07:	(bad)  
  413d08:	push   ebx
  413d09:	je     0x413ccd
  413d0b:	mov    edx,0x6aa1743b
  413d10:	pop    esi
  413d11:	jb     0x413cb2
  413d13:	cwde   
  413d14:	dec    edi
  413d15:	add    BYTE PTR [edi+0x2f],dh
  413d18:	push   ecx
  413d19:	push   ebx
  413d1a:	mov    ds:0x904e4f98,al
  413d1f:	cwde   
  413d20:	pop    esi
  413d21:	add    BYTE PTR [edi+0x27],ch
  413d24:	push   ecx
  413d25:	push   eax
  413d26:	nop
  413d27:	adc    al,0x5a
  413d29:	push   ecx
  413d2a:	jl     0x413d69
  413d2c:	pop    ecx
  413d2d:	pusha  
  413d2e:	xor    DWORD PTR [ebp+0x2d],ecx
  413d31:	push   eax
  413d32:	popa   
  413d33:	inc    esp
  413d34:	dec    eax
  413d35:	push   ecx
  413d36:	pusha  
  413d37:	and    eax,0x144d5256
  413d3c:	and    eax,0x41000050
  413d41:	pop    eax
  413d42:	inc    eax
  413d43:	push   edx
  413d44:	push   edx
  413d45:	xor    DWORD PTR [ebx],esi
  413d47:	push   ebp
  413d48:	inc    ebx
  413d49:	sub    esp,edi
  413d4b:	xor    BYTE PTR [esi+edx*2+0x33],ah
  413d4f:	sub    eax,0x282c426e
  413d54:	not    DWORD PTR [eax+0x1f]
  413d57:	and    al,0x0
  413d59:	cmp    eax,0x331c500d
  413d5e:	stc    
  413d5f:	pop    esi
  413d60:	in     eax,dx
  413d61:	push   ebp
  413d62:	add    ebx,DWORD PTR [ebx+0x17]
  413d65:	xor    eax,0x3110430b
  413d6a:	(bad)  
  413d6b:	dec    esi
  413d6c:	pop    es
  413d6d:	sub    dl,bl
  413d6f:	add    eax,DWORD PTR [eax]
  413d71:	cmp    eax,0x32dc4fcd
  413d76:	fstp   DWORD PTR [esi-0x3]
  413d79:	push   ebp
  413d7a:	fwait
  413d7b:	xor    esi,eax
  413d7d:	aas    
  413d7e:	rcr    BYTE PTR [esi-0x21],1
  413d81:	daa    
  413d82:	xchg   ebx,eax
  413d83:	xor    dh,cl
  413d85:	daa    
  413d86:	les    edx,FWORD PTR [eax+0x31]
  413d89:	inc    ecx
  413d8a:	xchg   esi,eax
  413d8b:	pop    ebp
  413d8c:	mov    ebp,0x92518824
  413d91:	dec    eax
  413d92:	mov    edx,0xaf208f54
  413d97:	adc    eax,0x278e268c
  413d9c:	outs   dx,DWORD PTR ds:[esi]
  413d9d:	inc    eax
  413d9e:	xchg   edi,eax
  413d9f:	inc    eax
  413da0:	popf   
  413da1:	cmp    eax,0x8c00
  413da6:	pop    esp
  413da7:	and    BYTE PTR [edx+ebx*4+0x5b],bl
  413dab:	and    BYTE PTR [ebx+0x5a],ah
  413dae:	sub    eax,0x16616cfa
  413db3:	adc    al,0x2e
  413db5:	inc    esi
  413db6:	and    DWORD PTR [eax],edi
  413db8:	add    BYTE PTR ds:0x5651446a,ch
  413dbe:	or     esp,DWORD PTR [eax]
  413dc0:	jne    0x413e0a
  413dc2:	pop    es
  413dc3:	aaa    
  413dc4:	pop    esp
  413dc5:	sub    eax,0x4a632614
  413dca:	stc    
  413dcb:	cmp    BYTE PTR [edx+0x20],dh
  413dce:	int    0x58
  413dd0:	jo     0x413de6
  413dd2:	data16 adc al,0x5c
  413dd5:	cmp    dl,BYTE PTR [ebp+0x4b]
  413dd8:	jb     0x413dde
  413dda:	dec    ecx
  413ddb:	inc    ebp
  413ddc:	arpl   bp,di
  413dde:	pop    esi
  413ddf:	xor    ebp,DWORD PTR [esi+0x6]
  413de2:	inc    esi
  413de3:	cli    
  413de4:	pusha  
  413de5:	or     bh,BYTE PTR [esi]
  413de7:	adc    al,0x5c
  413de9:	sbb    cl,BYTE PTR [ebp+0x4b]
  413dec:	jb     0x413dba
  413dee:	dec    esi
  413def:	inc    ebp
  413df0:	arpl   bp,dx
  413df2:	xor    ebp,DWORD PTR es:[esi-0x32]
  413df6:	pop    ds
  413df7:	dec    ecx
  413df8:	das    
  413df9:	scas   al,BYTE PTR es:[edi]
  413dfa:	bound  ecx,QWORD PTR [eax+0x33]
  413dfd:	pop    ss
  413dfe:	push   cs
  413dff:	xor    eax,0x44eee971
  413e04:	push   0x6436fcc8
  413e09:	call   0x9074:0x20090000
  413e10:	add    BYTE PTR [ecx],dh
  413e12:	jno    0x413de3
  413e14:	cmp    ebp,DWORD PTR [si-0x80]
  413e18:	pop    esi
  413e19:	aaa    
  413e1a:	add    BYTE PTR [ebp+0x5f3c87],ch
  413e20:	call   0x73e2:0xb55363fc
  413e27:	imul   ebp,DWORD PTR [esi-0x46a09103],0x155f3035
  413e31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e32:	jo     0x413ea5
  413e34:	jl     0x413e2f
  413e36:	jae    0x413e9d
  413e38:	fmul   DWORD PTR [edx+0x3f]
  413e3b:	outs   dx,DWORD PTR ds:[esi]
  413e3c:	jbe    0x413e3c
  413e3e:	pusha  
  413e3f:	gs or  ebp,ebp
  413e42:	outs   dx,DWORD PTR ds:[esi]
  413e43:	and    BYTE PTR [ebx],ch
  413e45:	out    0x65,eax
  413e47:	je     0x413e50
  413e49:	icebp  
  413e4a:	jno    0x413eb1
  413e4c:	enter  0x60fa,0x61
  413e50:	sbb    dh,bh
  413e52:	jae    0x413ec4
  413e54:	cwde   
  413e55:	jmp    0x413ec4
  413e57:	ins    BYTE PTR es:[edi],dx
  413e58:	xor    eax,0x352e6ff1
  413e5d:	call   0xf7dc3ec2
  413e62:	jae    0x413ec9
  413e64:	mov    esp,DWORD PTR [ecx+eiz*2+0x6f168461]
  413e6b:	imul   eax,DWORD PTR [ebx+edi*8+0x2e6e],0x64e461
  413e76:	lods   al,BYTE PTR ds:[esi]
  413e77:	pop    edx
  413e78:	popa   
  413e79:	popa   
  413e7a:	mov    BYTE PTR [ebp+0x5d],cl
  413e7d:	jb     0x413ef4
  413e7f:	dec    edx
  413e80:	dec    esp
  413e81:	gs imul esp,esi,0x16a85445
  413e88:	dec    edi
  413e89:	dec    edi
  413e8a:	xchg   esi,eax
  413e8b:	inc    edx
  413e8c:	push   ebx
  413e8d:	inc    ecx
  413e8e:	call   0x6fef:0xa54c5c5b
  413e95:	push   edi
  413e96:	mov    ecx,0x310060df
  413e9b:	je     0x413ecc
  413e9d:	jno    0x413e44
  413e9f:	pushf  
  413ea0:	sub    eax,0x359c816c
  413ea5:	push   0x74246f31
  413eaa:	nop
  413eab:	ja     0x413ed9
  413ead:	jb     0x413ee0
  413eaf:	mov    esp,DWORD PTR [ecx+esi*2]
  413eb2:	or     BYTE PTR [edx+0x2f],0x72
  413eb6:	push   ebp
  413eb7:	mov    ebx,0x47626d49
  413ebc:	push   edx
  413ebd:	pop    edi
  413ebe:	dec    esp
  413ebf:	push   eax
  413ec0:	add    al,0x53
  413ec2:	bound  ebx,QWORD PTR [eax+0x36]
  413ec5:	dec    esi
  413ec6:	push   eax
  413ec7:	pop    eax
  413ec8:	and    eax,0x2d586300
  413ecd:	ins    DWORD PTR es:[edi],dx
  413ece:	inc    ebp
  413ecf:	push   eax
  413ed0:	dec    eax
  413ed1:	addr16 inc ebx
  413ed3:	sbb    BYTE PTR [ebx],ah
  413ed5:	je     0x413ed7
  413ed7:	add    BYTE PTR [esi],bl
  413ed9:	or     eax,0x12010039
  413ede:	ss je  0x413ed0
  413ee1:	jmp    FWORD PTR [edx+eiz*2]
  413ee4:	or     al,0xad
  413ee6:	add    DWORD PTR [esi-0x1e],eax
  413ee9:	or     dh,BYTE PTR [esi]
  413eeb:	ins    DWORD PTR es:[edi],dx
  413eec:	std    
  413eed:	adc    DWORD PTR [ebx],esp
  413eef:	ins    DWORD PTR es:[edi],dx
  413ef0:	or     eax,0xf6d54bb
  413ef5:	(bad)  
  413ef6:	cmp    BYTE PTR [edi-0x1d],bl
  413ef9:	iret   
  413efa:	pop    ebp
  413efb:	dec    ebx
  413efc:	ror    ah,1
  413efe:	xor    eax,0x541acf67
  413f03:	jb     0x413ecd
  413f05:	lds    esi,FWORD PTR [ebx]
  413f07:	ja     0x413ee6
  413f09:	mov    edx,0x7d03315d
  413f0e:	sub    dh,BYTE PTR [edi+esi*8+0x5e]
  413f12:	xor    DWORD PTR [esi],ebp
  413f14:	enter  0x9513,0x2a
  413f18:	xor    DWORD PTR [edx-0x5d],ebx
  413f1b:	push   esp
  413f1c:	mov    fs,WORD PTR [eax]
  413f1e:	mov    WORD PTR [edi+ecx*2],?
  413f21:	cmp    edi,DWORD PTR [ebp+0x2a]
  413f24:	xor    DWORD PTR [eax-0x4b],ecx
  413f27:	test   DWORD PTR es:[eax+0x79],edx
  413f2b:	sub    bh,BYTE PTR [edi+0x2f]
  413f2e:	out    0x53,eax
  413f30:	pop    esi
  413f31:	and    eax,0x2684587a
  413f36:	dec    ebx
  413f37:	add    al,0x82
  413f39:	es dec ebx
  413f3b:	add    al,0x0
  413f3d:	add    BYTE PTR [edx+0x6f364c25],al
  413f43:	xor    edi,DWORD PTR [edi+eiz*1]
  413f46:	xor    DWORD PTR [esi+0x56],eax
  413f49:	xor    DWORD PTR [ebp+0x50],eax
  413f4c:	push   eax
  413f4d:	ss push edx
  413f4f:	xor    eax,0x2b43313b
  413f54:	out    0x53,eax
  413f56:	inc    esp
  413f57:	sbb    eax,DWORD PTR es:[eax+eax*1]
  413f5b:	cmp    DWORD PTR ds:0x19331c38,eax
  413f61:	daa    
  413f62:	std    
  413f63:	inc    esp
  413f64:	(bad)  
  413f65:	ss sbb eax,0x1655c73c
  413f6b:	and    al,BYTE PTR [esi+esi*1]
  413f6e:	push   ecx
  413f6f:	inc    eax
  413f70:	or     al,0x25
  413f72:	or     DWORD PTR [edx],edi
  413f74:	(bad)  
  413f75:	das    
  413f76:	add    al,0x31
  413f78:	shl    BYTE PTR [esi],1
  413f7a:	loopne 0x413fc3
  413f7c:	mov    dh,0x26
  413f7e:	ror    DWORD PTR [edi-0x27],cl
  413f81:	sub    ah,bh
  413f83:	cs stos DWORD PTR es:[edi],eax
  413f85:	inc    esp
  413f86:	les    edi,FWORD PTR [ecx]
  413f88:	aad    0x26
  413f8a:	rcr    BYTE PTR [edi],1
  413f8c:	shl    BYTE PTR [eax],1
  413f8e:	xlat   BYTE PTR ds:[ebx]
  413f8f:	and    al,0x0
  413f91:	jmp    0xb7b3747b
  413f96:	(bad)  
  413f98:	push   esp
  413f99:	mov    al,ds:0xa7003362
  413f9e:	jle    0x413fe4
  413fa0:	and    BYTE PTR [edx+0x56810000],ch
  413fa6:	push   esp
  413fa7:	mov    ebx,0xaf005881
  413fac:	inc    sp
  413fae:	inc    ecx
  413faf:	scas   al,BYTE PTR es:[edi]
  413fb0:	pusha  
  413fb1:	adc    al,0x2e
  413fb3:	jns    0x413ff9
  413fb5:	add    BYTE PTR cs:[ebp+0x4f6d2262],cl
  413fbc:	sbb    al,0x38
  413fbe:	arpl   WORD PTR [edx+0x2d],bx
  413fc1:	xchg   ebp,eax
  413fc2:	jnp    0x413f99
  413fc4:	cs xchg esi,eax
  413fc6:	mov    cl,0xc1
  413fc8:	add    al,0x25
  413fca:	lods   eax,DWORD PTR ds:[esi]
  413fcb:	(bad)  
  413fcc:	sbb    eax,0xcb397420
  413fd1:	clc    
  413fd2:	sub    al,0xe9
  413fd4:	or     ah,BYTE PTR [eax]
  413fd6:	je     0x414011
  413fd8:	add    ch,dl
  413fda:	sub    al,0xd6
  413fdc:	xor    ch,BYTE PTR [esi]
  413fde:	je     0x413ff9
  413fe0:	stos   DWORD PTR es:[edi],eax
  413fe1:	clc    
  413fe2:	sub    al,0xe9
  413fe4:	dec    edi
  413fe5:	and    al,0x63
  413fe7:	sbb    ecx,DWORD PTR [esp+edx*1+0x75]
  413feb:	or     BYTE PTR [edi+0x30],bl
  413fee:	cs add eax,0x1600204c
  413ff4:	loop   0x41402e
  413ff6:	data16 cmc 
  413ff8:	aas    
  413ff9:	inc    edi
  413ffa:	jb     0x413fc8
  413ffc:	push   cs
  413ffd:	pop    ecx
  413ffe:	jo     0x413fc4
  414000:	and    BYTE PTR [edi+0x20],al
  414003:	mov    edx,0xd6742e0f
  414008:	add    BYTE PTR [eax],al
  41400a:	or     eax,0x58006322
  41400f:	push   edi
  414010:	pop    ebp
  414011:	jae    0x41408f
  414013:	mov    bl,0x41
  414015:	imul   edi,DWORD PTR [edx-0x4],0xe577745e
  41401c:	je     0x414051
  41401e:	sbb    BYTE PTR [edi+0x5d],dl
  414021:	jae    0x413fdf
  414023:	mov    dl,0x46
  414025:	outs   dx,BYTE PTR ds:[esi]
  414026:	mov    ebx,0x946c5cde
  41402b:	mov    bl,0x4d
  41402d:	popa   
  41402e:	mov    ebx,?
  414030:	dec    DWORD PTR [esi-0x78]
  414033:	cld    
  414034:	jno    0x414097
  414036:	neg    BYTE PTR [edx+0x54]
  414039:	dec    ebp
  41403a:	xchg   esp,eax
  41403b:	inc    esi
  41403c:	outs   dx,DWORD PTR ds:[esi]
  41403d:	push   0x5c6be47d
  414042:	ja     0x414024
  414044:	pusha  
  414045:	outs   dx,BYTE PTR ds:[esi]
  414046:	and    al,0xf3
  414048:	push   0x6d
  41404a:	adc    eax,0xd8646df1
  41404f:	frstor [ebx+esi*2+0x6d]
  414053:	out    dx,al
  414054:	jae    0x4140c6
  414056:	sti    
  414057:	loope  0x4140ce
  414059:	jae    0x414011
  41405b:	hlt    
  41405c:	outs   dx,BYTE PTR fs:[esi]
  41405e:	cwde   
  41405f:	inc    esi
  414060:	cmp    eax,0x45522d63
  414065:	push   esp
  414066:	mov    BYTE PTR [ecx+0x6b],al
  414069:	data16 cmp al,0xdf
  41406c:	pop    esp
  41406d:	jb     0x41406f
  41406f:	add    BYTE PTR ds:0x2d633d34,bh
  414075:	push   edx
  414076:	inc    ebp
  414077:	push   esp
  414078:	mov    BYTE PTR [ebx+0x52],al
  41407b:	push   ebp
  41407c:	mov    BYTE PTR [ecx+0x4b],al
  41407f:	inc    esi
  414080:	lods   al,BYTE PTR ds:[esi]
  414081:	cmp    eax,0x468d523d
  414086:	aas    
  414087:	ins    BYTE PTR es:[edi],dx
  414088:	xor    esp,ebx
  41408a:	xor    dh,BYTE PTR [ecx-0x34]
  41408d:	leave  
  41408e:	pop    ebp
  41408f:	push   esp
  414090:	enter  0x286c,0x4c
  414094:	fcomp  st(2)
  414096:	pop    ebp
  414097:	jns    0x41408b
  414099:	jp     0x41408f
  41409b:	inc    ebp
  41409c:	add    edi,DWORD PTR [edx-0xf]
  41409f:	inc    ebp
  4140a0:	pop    esp
  4140a1:	mov    bl,0xf1
  4140a3:	ss pop ebp
  4140a5:	fdiv   st,st(5)
  4140a7:	ds jo  0x414124
  4140aa:	lock inc ecx
  4140ac:	jb     0x41411b
  4140ae:	clc    
  4140af:	sub    al,BYTE PTR [ebp+0x6c]
  4140b2:	inc    esp
  4140b3:	ss cmp eax,0x7734ef70
  4140b9:	data16 div BYTE PTR [esp+esi*2]
  4140bd:	mov    ebx,0xe7774d52
  4140c2:	push   edx
  4140c3:	aas    
  4140c4:	xor    eax,0x5f
  4140c7:	inc    ecx
  4140c8:	dec    ebp
  4140c9:	pop    esp
  4140ca:	das    
  4140cb:	jno    0x414119
  4140cd:	dec    edx
  4140ce:	pusha  
  4140cf:	push   esp
  4140d0:	dec    eax
  4140d1:	jmp    0x4140f7
  4140d3:	dec    esp
  4140d4:	add    BYTE PTR [eax],al
  4140d6:	pop    eax
  4140d7:	pop    ecx
  4140d8:	pusha  
  4140d9:	jns    0x4140d3
  4140db:	test   DWORD PTR [eax+0x33],0x36ef9ffc
  4140e2:	pop    esp
  4140e3:	clc    
  4140e4:	lock xor DWORD PTR [ebx-0x28],esp
  4140e8:	cmc    
  4140e9:	xor    al,0x64
  4140eb:	(bad)  
  4140ec:	out    dx,al
  4140ed:	inc    ecx
  4140ee:	repnz mov ebp,0x66f42afa
  4140f4:	stc    
  4140f5:	xor    DWORD PTR [ebp*8+0x6a462ffb],edi
  4140fc:	out    dx,eax
  4140fd:	inc    eax
  4140fe:	hlt    
  4140ff:	mov    edx,0x13e26734
  414104:	int3   
  414105:	and    eax,0x31da23dd
  41410a:	out    0x20,eax
  41410c:	add    eax,0xe73ac72b
  414111:	xor    al,0xd6
  414113:	and    ah,cl
  414115:	and    eax,0x2b0d23bd
  41411a:	iret   
  41411b:	cmp    ah,bh
  41411d:	inc    ebp
  41411e:	fld    QWORD PTR [ebx-0x6b]
  414121:	sub    al,0xa6
  414123:	xor    ecx,DWORD PTR [esi-0x7b095cda]
  414129:	aaa    
  41412a:	mov    eax,ds:0x8157ad14
  41412f:	ds jle 0x41416c
  414132:	outs   dx,BYTE PTR ds:[esi]
  414133:	sub    eax,0x2357318c
  414138:	mov    al,BYTE PTR [ebx]
  41413a:	add    BYTE PTR [eax],al
  41413c:	pop    ebp
  41413d:	inc    edx
  41413e:	jg     0x41416a
  414140:	xchg   DWORD PTR ds:0x20572c9a,esi
  414146:	adc    eax,0xe7375421
  41414b:	sub    eax,0xee1a2160
  414150:	push   edx
  414151:	cmp    BYTE PTR [ebx],bh
  414153:	add    al,0x7f
  414155:	inc    ecx
  414156:	sbb    bl,BYTE PTR [ebp+0x6e]
  414159:	ss push eax
  41415b:	cmp    BYTE PTR [ecx],dh
  41415d:	push   esi
  41415e:	sbb    dl,BYTE PTR [ecx+0x54]
  414161:	inc    ecx
  414162:	aas    
  414163:	aaa    
  414164:	and    eax,0x17351630
  414169:	adc    al,0x2d
  41416b:	push   ecx
  41416c:	add    BYTE PTR [edx+0x8],dl
  41416f:	xor    DWORD PTR [edx],edx
  414171:	(bad)  
  414173:	pop    esp
  414174:	cmc    
  414175:	or     ch,BYTE PTR cs:0x37292f0d
  41417c:	pop    ss
  41417d:	add    BYTE PTR cs:[ebx+eax*2],cl
  414181:	adc    al,0x51
  414183:	and    al,0xf0
  414185:	dec    esp
  414186:	push   esp
  414187:	lods   al,BYTE PTR ds:[esi]
  414188:	test   DWORD PTR [esi+0x46],0x473117db
  41418f:	fisttp QWORD PTR [edi]
  414191:	cmp    DWORD PTR [eax],eax
  414193:	mov    ecx,0xa62ef4f9
  414198:	in     eax,dx
  414199:	xor    BYTE PTR [eax+esi*4+0xc],dh
  41419d:	and    BYTE PTR [ebx-0x45],ah
  4141a0:	add    BYTE PTR [eax],al
  4141a2:	add    al,0x45
  4141a4:	ins    BYTE PTR es:[edi],dx
  4141a5:	mov    ds:0x95512b57,al
  4141aa:	push   ebp
  4141ab:	sub    BYTE PTR [eax],al
  4141ad:	mov    ecx,0xb62ef369
  4141b2:	jae    0x4141db
  4141b4:	je     0x414137
  4141b6:	push   edi
  4141b7:	xor    dh,BYTE PTR [eax+edx*4+0x51]
  4141bb:	inc    ebx
  4141bc:	je     0x414142
  4141be:	xor    al,BYTE PTR [ecx+ecx*2-0x48]
  4141c2:	add    eax,DWORD PTR [ebp+0x44]
  4141c5:	fwait
  4141c6:	lea    ebx,[eax+0x63]
  4141c9:	dec    edx
  4141ca:	pop    ds
  4141cb:	sub    esi,DWORD PTR [eax+0x55]
  4141ce:	xor    eax,0xdc184944
  4141d3:	inc    eax
  4141d4:	inc    esi
  4141d5:	pop    ebx
  4141d6:	adc    BYTE PTR [edi],dh
  4141d8:	push   ecx
  4141d9:	push   ebp
  4141da:	sbb    ch,BYTE PTR [eax]
  4141dc:	add    cl,ch
  4141de:	xor    dl,BYTE PTR [eax+eax*1]
  4141e1:	jmp    0xe9415618
  4141e6:	xor    dl,BYTE PTR [eax+eax*1]
  4141e9:	jmp    0xe9415620
  4141ee:	xor    dl,BYTE PTR [eax+eax*1]
  4141f1:	jmp    0xe9415628
  4141f6:	xor    dl,BYTE PTR [eax+eax*1]
  4141f9:	add    BYTE PTR [eax-0x77ffffe9],bl
  4141ff:	jmp    0x3360:0xe4316c6c
  414206:	add    BYTE PTR [eax],al
  414208:	scas   al,BYTE PTR es:[edi]
  414209:	add    ebp,DWORD PTR [esp+ebp*2+0x58]
  41420d:	jmp    0x3360:0xf3816c6c
  414214:	lahf   
  414215:	out    dx,al
  414216:	outs   dx,DWORD PTR ds:[esi]
  414217:	mov    ss,WORD PTR gs:[edi]
  41421a:	outs   dx,DWORD PTR ds:[esi]
  41421b:	jno    0x414279
  41421d:	lock jae 0x414285
  414220:	cmp    edi,DWORD PTR [esi]
  414222:	pop    edi
  414223:	ins    BYTE PTR es:[edi],dx
  414224:	outs   dx,DWORD PTR ds:[esi]
  414225:	jmp    0x696b:0xe7eb0060
  41422c:	(bad)  
  41422d:	repz cs pop edi
  414230:	mov    eax,0xa97060e8
  414235:	call   0xe7ec429a
  41423a:	imul   ebp,DWORD PTR [ecx-0x7c],0xfffffff4
  41423e:	cs pop edi
  414240:	jnp    0x414235
  414242:	pusha  
  414243:	jo     0x41424d
  414245:	jmp    0x3360:0xf2b16c6c
  41424c:	outs   dx,DWORD PTR ds:[esi]
  41424d:	sti    
  41424e:	push   0x6c
  414250:	test   ebp,ebp
  414252:	ins    DWORD PTR es:[edi],dx
  414253:	pop    edi
  414254:	push   0xffffffe1
  414256:	jae    0x4142bd
  414258:	imul   ebx,DWORD PTR [eax],0x6f
  41425b:	jno    0x4142b9
  41425d:	icebp  
  41425e:	jae    0x4142c5
  414260:	mov    ebx,0x6c6f5f3d
  414265:	in     eax,0x68
  414267:	outs   dx,BYTE PTR ds:[esi]
  414268:	aas    
  414269:	cli    
  41426a:	imul   ebp,DWORD PTR [edi+0x0],0x0
  41426e:	cmp    bl,BYTE PTR [eax]
  414270:	add    BYTE PTR [ebp+0x2f],ch
  414273:	loop   0x4142e3
  414275:	jno    0x4142a8
  414277:	sbb    DWORD PTR [ebx],ebp
  414279:	je     0x41428f
  41427b:	mov    esi,0x91563e7
  414280:	add    al,0x71
  414282:	add    BYTE PTR [ecx],dl
  414284:	sub    esi,DWORD PTR [esp+ecx*1+0x5e]
  414288:	pop    edx
  414289:	ins    DWORD PTR es:[edi],dx
  41428a:	loope  0x4142a3
  41428c:	sub    al,BYTE PTR [eax]
  41428e:	loop   0x41424b
  414290:	and    eax,0xf6d7e567
  414295:	pop    esp
  414296:	rcr    al,cl
  414298:	sub    dh,BYTE PTR [ecx-0x2c]
  41429b:	lods   al,BYTE PTR ds:[esi]
  41429c:	outs   dx,DWORD PTR ss:[esi]
  41429e:	aad    0xc3
  4142a0:	sub    eax,0x31820263
  4142a5:	jb     0x414273
  4142a7:	pop    esp
  4142a8:	and    al,0x72
  4142aa:	xchg   esp,eax
  4142ab:	stos   DWORD PTR es:[edi],eax
  4142ac:	outs   dx,DWORD PTR ss:[esi]
  4142ae:	xchg   ebp,eax
  4142af:	test   BYTE PTR ds:0x36626263,ch
  4142b5:	je     0x414243
  4142b7:	jnp    0x4142ba
  4142b9:	jno    0x41423b
  4142bb:	pop    ds
  4142bc:	sub    al,0x74
  4142be:	mov    WORD PTR [esi+0x5a],ds
  4142c1:	popa   
  4142c2:	mov    cs,WORD PTR [edi-0x757894d0]
  4142c8:	and    esi,DWORD PTR [edi+0x65]
  4142cb:	cwde   
  4142cc:	add    BYTE PTR ss:[edx+0x3c],ah
  4142d0:	sub    BYTE PTR [edi+0x0],ah
  4142d3:	add    BYTE PTR [ebp+0x58],ah
  4142d6:	repz pop esp
  4142d8:	push   edx
  4142d9:	pop    edx
  4142da:	sub    BYTE PTR [ebx+0x5c],dh
  4142dd:	loope  0x414335
  4142df:	bound  edx,QWORD PTR [ebp+0x4a]
  4142e2:	add    BYTE PTR es:[ecx],dh
  4142e5:	stos   DWORD PTR es:[edi],eax
  4142e6:	add    DWORD PTR [eax],eax
  4142e8:	xor    DWORD PTR [ebx-0x54ceffff],ebp
  4142ee:	add    DWORD PTR [eax],eax
  4142f0:	xor    DWORD PTR [edi+eiz*8],edx
  4142f3:	add    esi,DWORD PTR [ecx]
  4142f5:	adc    al,0xe7
  4142f7:	add    esi,DWORD PTR [ecx]
  4142f9:	adc    al,0xe7
  4142fb:	add    esi,DWORD PTR [ecx]
  4142fd:	adc    al,0xe7
  4142ff:	add    esi,DWORD PTR [ecx]
  414301:	adc    al,0xe7
  414303:	add    esi,DWORD PTR [ecx]
  414305:	adc    al,0xf7
  414307:	xor    eax,0x28003a04
  41430c:	shl    BYTE PTR [edi*4-0x18d528d6],cl
  414313:	push   ebx
  414314:	jecxz  0x414346
  414316:	lds    ebp,FWORD PTR [edx]
  414318:	lds    esi,FWORD PTR [esi]
  41431a:	out    0x4a,eax
  41431c:	rol    BYTE PTR [ebp-0x3c],0x27
  414320:	out    0x27,al
  414322:	shl    BYTE PTR [ecx],1
  414324:	rcl    BYTE PTR [ebx],cl
  414326:	xchg   edi,eax
  414327:	and    bh,BYTE PTR [ebp-0x71ac18d5]
  41432d:	sub    BYTE PTR [edi-0x60a86bb1],bh
  414333:	push   ds
  414334:	xor    DWORD PTR ds:0x2090,esp
  41433a:	xchg   DWORD PTR [ecx],esi
  41433c:	test   DWORD PTR [edi+ebx*2],esi
  41433f:	and    eax,0x288e2798
  414344:	mov    WORD PTR [ebx],es
  414346:	sub    BYTE PTR [ebx],0x86
  414349:	sub    DWORD PTR [edx+esi*1+0x1c62e97a],eax
  414350:	jae    0x414355
  414352:	pusha  
  414353:	sub    ecx,DWORD PTR [esi+0x2a]
  414356:	dec    esp
  414357:	xor    bl,BYTE PTR [edx-0xa]
  41435a:	add    al,0x28
  41435c:	dec    edi
  41435d:	xor    BYTE PTR [ecx],dh
  41435f:	and    eax,0x31572140
  414364:	push   ebp
  414365:	xor    eax,0x3c32f200
  41436a:	cmp    eax,0xa70a0014
  41436f:	xor    eax,DWORD PTR [eax]
  414371:	or     bl,BYTE PTR [edi-0x5b35ffcc]
  414377:	xor    eax,0x50563a00
  41437c:	inc    ebx
  41437d:	sub    ah,cl
  41437f:	repz addr16 (bad) 
  414382:	cmp    eax,0x56086e28
  414387:	xor    eax,0x3217c92c
  41438c:	popa   
  41438d:	sti    
  41438e:	sub    esp,DWORD PTR [esp+esi*2]
  414391:	add    al,0x11
  414393:	inc    ebp
  414394:	jno    0x414362
  414396:	and    al,0x32
  414398:	pop    edi
  414399:	int3   
  41439a:	aaa    
  41439b:	lock pop ds
  41439d:	int3   
  41439e:	add    BYTE PTR [eax],al
  4143a0:	sbb    BYTE PTR [ebx],dh
  4143a2:	jb     0x414374
  4143a4:	add    ch,BYTE PTR [eax]
  4143a6:	arpl   bp,cx
  4143a8:	loop   0x4143ea
  4143aa:	jno    0x414366
  4143ac:	add    DWORD PTR [edi],ebp
  4143ae:	jb     0x41437d
  4143b0:	adc    bl,BYTE PTR [edx+0x52]
  4143b3:	sahf   
  4143b4:	outs   dx,DWORD PTR ds:[esi]
  4143b5:	hlt    
  4143b6:	push   0xffffff96
  4143b8:	pop    esp
  4143b9:	inc    ecx
  4143ba:	ins    BYTE PTR es:[edi],dx
  4143bb:	mov    ss,WORD PTR [ecx+0x37]
  4143be:	outs   dx,BYTE PTR ds:[esi]
  4143bf:	call   0x3627:0x9b675632
  4143c6:	ins    DWORD PTR es:[edi],dx
  4143c7:	xor    DWORD PTR [edx],0x348e4b40
  4143cd:	aaa    
  4143ce:	ins    BYTE PTR es:[edi],dx
  4143cf:	test   DWORD PTR [ebx],edx
  4143d1:	inc    eax
  4143d2:	inc    esi
  4143d3:	sbb    BYTE PTR [ebx+esi*1],0x66
  4143d7:	push   esi
  4143d8:	sbb    eax,0xe3a0040
  4143dd:	ss je  0x41443e
  4143e0:	adc    al,0x22
  4143e2:	arpl   WORD PTR ds:0x7a3178,bp
  4143e8:	popa   
  4143e9:	in     al,dx
  4143ea:	imul   esp,DWORD PTR [ecx-0x38],0xffffffac
  4143ee:	sub    ch,BYTE PTR ds:0x70740198
  4143f4:	mov    ds:0x40002cb6,al
  4143f9:	in     al,0x73
  4143fb:	jo     0x41438f
  4143fd:	mov    dh,0x2c
  4143ff:	add    BYTE PTR [eax],dh
  414401:	in     al,0x73
  414403:	jo     0x414405
  414405:	add    BYTE PTR [ebx],ch
  414407:	call   0x7074:0x1882f2c
  41440e:	adc    sp,WORD PTR [esi+0x69]
  414412:	push   0xfffffff4
  414414:	inc    ebp
  414415:	push   esp
  414416:	dec    eax
  414417:	jecxz  0x41447d
  414419:	je     0x414488
  41441b:	loop   0x41444a
  41441d:	fs imul ebp,edi,0xf87d52ff
  414424:	dec    eax
  414425:	outs   dx,DWORD PTR ds:[esi]
  414426:	xchg   dl,ch
  414428:	pusha  
  414429:	jns    0x414473
  41442b:	inc    edi
  41442c:	dec    ecx
  41442d:	outs   dx,DWORD PTR ds:[esi]
  41442e:	jb     0x414420
  414430:	imul   ebp,DWORD PTR [ecx+edi*8+0x46],0x4f
  414435:	gs stc 
  414437:	dec    ebx
  414438:	imul   ebp,DWORD PTR [esi-0x3d],0xfffffff3
  41443c:	je     0x41449a
  41443e:	or     cl,ah
  414440:	imul   ebp,DWORD PTR [edi-0x45],0xffffffe9
  414444:	call   FWORD PTR [ebx-0x32]
  414447:	imul   BYTE PTR [edx+0x63]
  41444a:	mov    ds:0xa7724246,eax
  41444f:	in     eax,dx
  414450:	outs   dx,BYTE PTR ds:[esi]
  414451:	gs push 0x47
  414454:	add    BYTE PTR [ebp+0x67],cl
  414457:	frstor [esp+ebp*2-0x7c]
  41445b:	stc    
  41445c:	call   FWORD PTR [ebx+0x5]
  41445f:	idiv   DWORD PTR [ecx+0x69]
  414462:	xor    DWORD PTR [ecx+0x28],ebx
  414465:	pop    edi
  414466:	fnsave gs:[ecx]
  414469:	ins    DWORD PTR es:[edi],dx
  41446a:	add    BYTE PTR [eax],al
  41446c:	push   edi
  41446d:	inc    esp
  41446e:	sub    BYTE PTR [ebx+0x42],ah
  414471:	add    DWORD PTR [ecx+edx*2],eax
  414474:	push   ds
  414475:	dec    edi
  414476:	xor    BYTE PTR [ebp+0x10],dh
  414479:	fistp  DWORD PTR [esi]
  41447b:	pop    esp
  41447c:	in     eax,dx
  41447d:	nop    DWORD PTR [ecx+0x9]
  414481:	test   DWORD PTR [edi+0x50],0x7033ec31
  414488:	in     eax,dx
  414489:	adc    esi,DWORD PTR [edx]
  41448b:	add    ch,ch
  41448d:	add    eax,0xf9055f21
  414492:	sub    dh,BYTE PTR [edx+0x31]
  414495:	or     esp,DWORD PTR ds:0x249fda6d
  41449b:	jb     0x414467
  41449d:	push   es
  41449e:	and    BYTE PTR [edi-0x23],bl
  4144a1:	lods   al,BYTE PTR ds:[esi]
  4144a2:	push   edx
  4144a3:	(bad)
  4144a7:	outs   dx,BYTE PTR ds:[esi]
  4144a8:	iret   
  4144a9:	pop    ebp
  4144aa:	jecxz  0x4144fa
  4144ac:	idiv   DWORD PTR [ecx+eax*1+0x4d]
  4144b0:	int    0xc3
  4144b2:	and    eax,DWORD PTR [eax]
  4144b4:	ja     0x414482
  4144b6:	sub    ebp,DWORD PTR [ebp-0x5d]
  4144b9:	aam    0x2d
  4144bb:	arpl   WORD PTR [edx-0x62a0e23b],sp
  4144c1:	stos   DWORD PTR es:[edi],eax
  4144c2:	dec    esi
  4144c3:	addr16 lahf 
  4144c5:	ins    DWORD PTR es:[edi],dx
  4144c6:	dec    ebp
  4144c7:	push   eax
  4144c8:	xor    DWORD PTR [edx+0x2c],edi
  4144cb:	je     0x414461
  4144cd:	sbb    ah,bl
  4144cf:	arpl   WORD PTR [eax],ax
  4144d1:	add    BYTE PTR [ebx-0x7db3bd55],dl
  4144d7:	je     0x414516
  4144d9:	pop    esp
  4144da:	push   0x5c
  4144dc:	hlt    
  4144dd:	inc    eax
  4144de:	and    BYTE PTR [ebx+ebp*1],dl
  4144e1:	in     eax,dx
  4144e2:	and    ah,bl
  4144e4:	or     eax,DWORD PTR [ebx+0x6]
  4144e7:	out    0x28,eax
  4144e9:	out    0x17,eax
  4144eb:	jecxz  0x41452f
  4144ed:	repnz or ebx,esp
  4144f0:	daa    
  4144f1:	cld    
  4144f2:	push   es
  4144f3:	out    dx,eax
  4144f4:	div    bl
  4144f6:	data16 in al,0x27
  4144f9:	inc    eax
  4144fa:	repz loopne 0x4144f5
  4144fd:	cmp    eax,0x5823e7f7
  414502:	out    dx,al
  414503:	sub    eax,0x311c3237
  414508:	cmp    bl,BYTE PTR [edi]
  41450a:	add    esp,DWORD PTR [esi]
  41450c:	add    al,0x32
  41450e:	inc    eax
  41450f:	loop   0x4144f7
  414511:	xor    BYTE PTR [edx],dl
  414513:	and    dh,ch
  414515:	push   ds
  414516:	jecxz  0x414538
  414518:	lds    edi,FWORD PTR [ebx]
  41451a:	fisubr DWORD PTR [edi]
  41451c:	out    0x57,eax
  41451e:	test   DWORD PTR [edi-0x49],0xd327d23c
  414525:	push   ds
  414526:	ret    
  414527:	adc    ebp,DWORD PTR [eax+edx*2-0xe36c823]
  41452e:	or     al,0x38
  414530:	enter  0x312f,0x43
  414534:	mov    ds:0xa5000022,eax
  414539:	xor    eax,DWORD PTR ds:0xe7288620
  41453f:	push   edi
  414540:	jb     0x414563
  414542:	fwait
  414543:	xor    BYTE PTR [esi+esi*1+0x504e5793],al
  41454a:	lods   eax,DWORD PTR ds:[esi]
  41454b:	dec    edi
  41454c:	popa   
  41454d:	adc    al,0xa0
  41454f:	and    eax,0x25793785
  414554:	xchg   edx,eax
  414555:	sub    bh,al
  414557:	imul   esp,DWORD PTR ds:[eax+eax*1],0x63220d85
  41455f:	jnp    0x414593
  414561:	inc    edi
  414562:	addr16 push edi
  414564:	or     ch,BYTE PTR [esi]
  414566:	arpl   WORD PTR [ebp+0x70],dx
  414569:	cmp    eax,0x53264161
  41456e:	jb     0x4145b4
  414570:	adc    DWORD PTR [ecx],esi
  414572:	outs   dx,BYTE PTR ds:[esi]
  414573:	cmp    eax,0x3a6c3d0a
  414578:	xor    eax,0xfa095149
  41457d:	push   eax
  41457e:	and    BYTE PTR [edi],ah
  414580:	add    DWORD PTR [eax+eiz*1+0x39],eax
  414584:	push   edx
  414585:	and    esi,DWORD PTR [ecx+0x16]
  414588:	push   esp
  414589:	and    ah,BYTE PTR [edx+ebx*1+0x2d]
  41458d:	pop    eax
  41458e:	push   eax
  41458f:	sub    ch,ah
  414591:	push   esp
  414592:	cmp    cl,cl
  414594:	xor    ah,BYTE PTR [ecx+esi*2]
  414597:	cmc    
  414598:	adc    eax,0xa6322
  41459d:	add    BYTE PTR [edi+0x30],cl
  4145a0:	ins    BYTE PTR es:[edi],dx
  4145a1:	std    
  4145a2:	xor    al,BYTE PTR [ecx+edx*2-0x23]
  4145a6:	or     eax,0xaa6322
  4145ab:	xor    DWORD PTR [edi-0x23],ebx
  4145ae:	daa    
  4145af:	push   ebp
  4145b0:	outs   dx,BYTE PTR ds:[esi]
  4145b1:	fimul  DWORD PTR [esi]
  4145b3:	cmp    eax,0x1417ca6e
  4145b8:	add    dl,cl
  4145ba:	pusha  
  4145bb:	and    esi,DWORD PTR [eax-0x43]
  4145be:	and    esi,esp
  4145c0:	sub    eax,0x2856c5
  4145c5:	stos   BYTE PTR es:[edi],al
  4145c6:	pusha  
  4145c7:	and    esi,DWORD PTR [eax-0x6b]
  4145ca:	jg     0x4145f6
  4145cc:	jo     0x414569
  4145ce:	dec    ebp
  4145cf:	and    BYTE PTR [ebx-0x76],ah
  4145d2:	dec    esi
  4145d3:	push   eax
  4145d4:	pop    edi
  4145d5:	add    BYTE PTR [esi+esi*8-0x1],dh
  4145d9:	(bad)  
  4145da:	fcom   DWORD PTR [edi]
  4145dc:	add    BYTE PTR [eax],al
  4145de:	fcom   DWORD PTR [edi]
  4145e0:	add    BYTE PTR [eax],al
  4145e2:	enter  0x4a57,0x37
  4145e6:	or     al,0x6c
  4145e8:	mov    edx,0x7926c9cf
  4145ed:	add    BYTE PTR [edx+0x7e466510],dh
  4145f3:	push   ecx
  4145f4:	dec    edx
  4145f5:	aaa    
  4145f6:	sub    al,0x6c
  4145f8:	mov    edx,0x792689cf
  4145fd:	add    BYTE PTR [edx+0x466510],dh
  414603:	add    dh,bl
  414605:	push   edx
  414606:	dec    edx
  414607:	aaa    
  414608:	mov    WORD PTR [ebx-0x46],?
  41460b:	iret   
  41460c:	mov    DWORD PTR [esi],esp
  41460e:	jns    0x414610
  414610:	repnz (bad)
  414613:	inc    esi
  414614:	(bad)  
  414615:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414616:	std    
  414617:	dec    DWORD PTR [eax+0x10322dac]
  41461d:	adc    BYTE PTR [edi+0x6f],cl
  414620:	fdiv   QWORD PTR ss:[edx+0x61]
  414624:	pop    edx
  414625:	in     al,dx
  414626:	pop    ebx
  414627:	dec    ebp
  414628:	xor    edx,0xf66b6f71
  41462e:	gs je  0x4146ad
  414631:	fsubr  DWORD PTR [ebp+0x74]
  414634:	jne    0x414617
  414636:	ins    DWORD PTR es:[edi],dx
  414637:	gs je  0x4145f1
  41463a:	inc    edx
  41463b:	js     0x414625
  41463d:	cli    
  41463e:	push   0x72
  414640:	cmc    
  414641:	loopne 0x41469e
  414643:	dec    ecx
  414644:	fsubrp st(2),st
  414646:	pusha  
  414647:	ins    BYTE PTR es:[edi],dx
  414648:	mov    esp,0xaa6f45f7
  41464d:	rep outs dx,BYTE PTR ds:[esi]
  41464f:	pop    esp
  414650:	xor    DWORD PTR [esi+0x35],ebx
  414653:	ins    DWORD PTR es:[edi],dx
  414654:	or     DWORD PTR [edx+ebp*1+0x1ad4363],0x0
  41465c:	xor    DWORD PTR [ebp-0x52acffdc],ebp
  414662:	sub    BYTE PTR [eax],al
  414664:	and    ebp,DWORD PTR [ebp+0xffe9]
  41466a:	sbb    al,0xad
  41466c:	in     al,dx
  41466d:	call   DWORD PTR [ebp+ebp*4-0x20]
  414671:	dec    DWORD PTR [ecx]
  414673:	lods   eax,DWORD PTR ds:[esi]
  414674:	and    eax,DWORD PTR [eax]
  414676:	add    eax,0x5fffaad
  41467b:	lods   eax,DWORD PTR ds:[esi]
  41467c:	cmc    
  41467d:	call   DWORD PTR [ebx]
  41467f:	lods   eax,DWORD PTR ds:[esi]
  414680:	and    eax,0xe0ad6800
  414685:	call   DWORD PTR [ecx]
  414687:	lods   eax,DWORD PTR ds:[esi]
  414688:	idiv   bh
  41468a:	pop    ebp
  41468b:	lods   eax,DWORD PTR ds:[esi]
  41468c:	jmp    0x26eea490
  414691:	add    BYTE PTR [ebx-0x53],al
  414694:	repz (bad) 
  414696:	cmp    DWORD PTR [ebp-0x52bd000f],ebp
  41469c:	and    eax,0x24acd300
  4146a1:	add    BYTE PTR [esi],bl
  4146a3:	lods   eax,DWORD PTR ds:[esi]
  4146a4:	daa    
  4146a5:	add    BYTE PTR [esi],ah
  4146a7:	lods   eax,DWORD PTR ds:[esi]
  4146a8:	add    DWORD PTR [eax],eax
  4146aa:	in     al,0xc3
  4146ac:	es jb  0x41468d
  4146af:	mov    ebp,0x61bd6622
  4146b4:	pop    edx
  4146b5:	addr16 iret 
  4146b7:	jae    0x4146d8
  4146b9:	arpl   WORD PTR [ebp-0x6b00248f],di
  4146bf:	pop    edi
  4146c0:	xor    DWORD PTR [edx],edi
  4146c2:	push   esi
  4146c3:	adc    al,BYTE PTR [ecx+edx*2]
  4146c6:	mov    ss,ecx
  4146c8:	xor    eax,0x99149075
  4146cd:	sub    BYTE PTR [eax],al
  4146cf:	add    BYTE PTR [ebp+0x53],ch
  4146d2:	and    DWORD PTR [edx],0xffffff93
  4146d5:	das    
  4146d6:	mov    bl,0x46
  4146d8:	mov    WORD PTR [edi],fs
  4146da:	jl     0x4146fe
  4146dc:	xchg   DWORD PTR [edx+ebx*4],edx
  4146df:	sbb    al,0x65
  4146e1:	das    
  4146e2:	call   0x6035:0x8c226328
  4146e9:	adc    al,0x9a
  4146eb:	sbb    al,0x5d
  4146ed:	das    
  4146ee:	cmp    ah,BYTE PTR [edi]
  4146f0:	inc    ebx
  4146f1:	and    al,BYTE PTR [esi+esi*1+0x11]
  4146f5:	out    dx,eax
  4146f6:	dec    edx
  4146f7:	push   eax
  4146f8:	imul   ebp,DWORD PTR [ecx],0x4531385a
  4146fe:	push   eax
  4146ff:	cmp    BYTE PTR [edx],dl
  414701:	inc    ebp
  414702:	inc    esp
  414703:	ss pop ds
  414705:	das    
  414706:	cmp    esp,esp
  414708:	push   ebx
  414709:	xor    BYTE PTR [ebx],cl
  41470b:	pop    ecx
  41470c:	adc    dh,BYTE PTR [esi]
  41470e:	cmp    al,0x36
  414710:	sbb    eax,0xfd1b3a14
  414715:	cmp    ah,BYTE PTR cs:[edi]
  414718:	add    esp,DWORD PTR [edx]
  41471a:	add    al,0x36
  41471c:	push   ecx
  41471d:	out    dx,eax
  41471e:	or     dl,BYTE PTR [eax+0x3]
  414721:	das    
  414722:	or     al,0x21
  414724:	(bad)  [esi]
  414726:	mov    DWORD PTR [edi-0x2a],0xdd250425
  41472d:	sub    cl,bl
  41472f:	sub    dh,BYTE PTR [ecx]
  414731:	inc    ebp
  414732:	shl    BYTE PTR [edi],1
  414734:	add    BYTE PTR [eax],al
  414736:	rol    BYTE PTR [esp+ecx*8+0x35],cl
  41473a:	(bad)  
  41473b:	cs (bad) 
  41473e:	adc    esi,DWORD PTR [eax]
  414740:	adc    al,0x57
  414742:	mov    al,ds:0x8003b92f
  414747:	sub    eax,DWORD PTR [eax]
  414749:	mov    ebp,0xbb634357
  41474e:	pop    eax
  41474f:	xor    eax,0x3517c972
  414754:	sub    esi,DWORD PTR [ebp+edi*1+0x62c97235]
  41475b:	aas    
  41475c:	add    ah,al
  41475e:	cmp    eax,0x1b8c4938
  414763:	xor    ebp,DWORD PTR [eax-0x78]
  414766:	dec    ebx
  414767:	sub    al,BYTE PTR [eax]
  414769:	call   0x260f:0x9a63203b
  414770:	jbe    0x4147be
  414772:	pop    es
  414773:	hlt    
  414774:	and    al,BYTE PTR [ebp+0x61]
  414777:	inc    ebx
  414778:	inc    esi
  414779:	cmp    eax,0x44441465
  41477e:	adc    DWORD PTR ds:0x3ffb4c78,esp
  414784:	push   eax
  414785:	jmp    0x4cb578e7
  41478a:	fs jmp 0xc55:0x14513c77
  414792:	push   edi
  414793:	hlt    
  414794:	inc    ebx
  414795:	or     BYTE PTR [ecx+0x39],cl
  414798:	add    BYTE PTR ds:0x2f500000,ah
  41479e:	call   DWORD PTR [bp+si+0x5f54]
  4147a3:	std    
  4147a4:	adc    edx,DWORD PTR [ecx+edx*2]
  4147a7:	sbb    cl,dh
  4147a9:	xor    BYTE PTR [esp+ecx*1+0x55],dh
  4147ad:	cs ins DWORD PTR es:[edi],dx
  4147af:	sti    
  4147b0:	aaa    
  4147b1:	cmp    DWORD PTR [ecx+ecx*1+0x44],esi
  4147b5:	cwde   
  4147b6:	jno    0x414780
  4147b8:	or     al,0x28
  4147ba:	arpl   cx,bp
  4147bc:	pop    edx
  4147bd:	cwde   
  4147be:	sub    cl,ch
  4147c0:	push   edx
  4147c1:	cwde   
  4147c2:	inc    edx
  4147c3:	add    bh,ah
  4147c5:	push   ebp
  4147c6:	dec    edi
  4147c7:	push   esp
  4147c8:	retf   0x4552
  4147cb:	dec    esi
  4147cc:	mov    esp,0xd1525013
  4147d1:	(bad)  
  4147d2:	cmp    al,0x52
  4147d4:	icebp  
  4147d5:	adc    edx,DWORD PTR [ecx+0x4e]
  4147d8:	rol    DWORD PTR [edx+0x51],0x45
  4147dc:	or     BYTE PTR [ecx+0x48],dl
  4147df:	inc    ebp
  4147e0:	retf   
  4147e1:	fdivr  st,st(7)
  4147e3:	inc    ebp
  4147e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4147e5:	inc    ecx
  4147e6:	inc    ecx
  4147e7:	dec    ecx
  4147e8:	(bad)  
  4147e9:	push   ebp
  4147ea:	add    BYTE PTR [eax],al
  4147ec:	mov    ah,0xf4
  4147ee:	bound  ebp,QWORD PTR [ecx+0x56]
  4147f1:	loopne 0x4147f2
  4147f3:	outs   dx,BYTE PTR ds:[esi]
  4147f4:	push   0xfffffff9
  4147f6:	bound  ebp,QWORD PTR [ecx+0x76]
  4147f9:	inc    edi
  4147fa:	jno    0x41486e
  4147fc:	je     0x41480e
  4147fe:	jo     0x414861
  414800:	add    BYTE PTR [eax],al
  414802:	pop    ebx
  414803:	jecxz  0x414877
  414805:	outs   dx,DWORD PTR ds:[esi]
  414806:	push   0xffffffec
  414808:	pop    edx
  414809:	jbe    0x414804
  41480b:	repz jo 0x414873
  41480e:	mov    ah,bl
  414810:	outs   dx,BYTE PTR ds:[esi]
  414811:	gs pop edx
  414813:	neg    BYTE PTR [ebp+ebp*2+0x3d]
  414817:	inc    edi
  414818:	jbe    0x41487b
  41481a:	xor    al,0xdd
  41481c:	pusha  
  41481d:	add    BYTE PTR [esi],ch
  41481f:	fsubr  QWORD PTR [edi+0x3a]
  414822:	mov    bh,0xb6
  414824:	std    
  414825:	ins    BYTE PTR es:[di],dx
  414827:	fild   QWORD PTR [edi+0x3a]
  41482a:	ja     0x4147e2
  41482c:	std    
  41482d:	addr16 pop esp
  41482f:	fild   QWORD PTR [edi+0x73]
  414832:	mov    ds:0x74002cb6,al
  414837:	dec    esi
  414838:	imul   ebp,DWORD PTR [edi+0x6f],0xfffffff7
  41483c:	pusha  
  41483d:	pop    esp
  41483e:	xor    DWORD PTR [edx+0x19],ebp
  414841:	jb     0x414809
  414843:	push   edi
  414844:	sub    BYTE PTR [eax],al
  414846:	lea    ebp,[edx+0x19]
  414849:	jb     0x4147e1
  41484b:	enter  0x731c,0x8c
  41484f:	lods   eax,DWORD PTR ds:[esi]
  414850:	dec    ebp
  414851:	inc    ecx
  414852:	mov    DWORD PTR [ebx+0x1e],ebx
  414855:	imul   edx,DWORD PTR [ebp+ebx*2-0x527d8ce3],0x52
  41485d:	ins    DWORD PTR es:[edi],dx
  41485e:	xchg   edi,eax
  41485f:	jns    0x414897
  414861:	pop    edi
  414862:	adc    DWORD PTR [eax+0x414d],0x59
  414869:	sbb    ebx,DWORD PTR [esi]
  41486b:	imul   ecx,DWORD PTR [ebp+edi*2+0x1d],0x73
  414870:	bound  ebp,QWORD PTR [ebp+0x21626e3c]
  414876:	and    al,0x6c
  414878:	pop    ebp
  414879:	dec    esi
  41487a:	dec    eax
  41487b:	addr16 inc ebx
  41487d:	lods   eax,DWORD PTR ds:[esi]
  41487e:	dec    ebp
  41487f:	inc    edx
  414880:	inc    ebx
  414881:	dec    esi
  414882:	pop    ds
  414883:	addr16 cmp al,0xd8
  414886:	add    ebx,DWORD PTR [edi+edi*8+0x43]
  41488a:	and    DWORD PTR [eax+0x23],ebp
  41488d:	inc    esi
  41488e:	pop    ds
  41488f:	arpl   WORD PTR [ecx],si
  414891:	add    DWORD PTR [ecx+0x6d],eax
  414894:	add    al,0xd6
  414896:	daa    
  414897:	ins    DWORD PTR es:[edi],dx
  414898:	xor    DWORD PTR [ecx+0x52],edx
  41489b:	ins    DWORD PTR es:[edi],dx
  41489c:	adc    al,BYTE PTR [edx]
  41489e:	aas    
  41489f:	arpl   WORD PTR ds:0x444903f9,cx
  4148a5:	clc    
  4148a6:	es ins BYTE PTR es:[edi],dx
  4148a8:	aam    0xfd
  4148aa:	sbb    eax,0xdee20500
  4148af:	dec    edx
  4148b0:	aam    0x10
  4148b2:	daa    
  4148b3:	ins    DWORD PTR es:[edi],dx
  4148b4:	(bad)  
  4148b5:	lods   al,BYTE PTR ds:[esi]
  4148b6:	dec    ebp
  4148b7:	push   eax
  4148b8:	ret    
  4148b9:	adc    edx,esi
  4148bb:	and    eax,0x32c427ce
  4148c0:	xor    DWORD PTR [ecx-0x29],edx
  4148c3:	sbb    al,0xd0
  4148c5:	adc    ebp,DWORD PTR [ebx-0x35d45eb8]
  4148cb:	dec    edi
  4148cc:	add    BYTE PTR [eax],al
  4148ce:	jb     0x4148f4
  4148d0:	shl    BYTE PTR [edx],1
  4148d2:	xor    DWORD PTR [ecx-0x45],eax
  4148d5:	and    al,0x8f
  4148d7:	cs cld 
  4148d9:	inc    ebp
  4148da:	gs inc esp
  4148dc:	out    0x32,eax
  4148de:	mov    fs,WORD PTR [eax]
  4148e0:	test   BYTE PTR [edx],dh
  4148e2:	dec    edi
  4148e3:	sub    eax,DWORD PTR [ebp-0x45c7cee4]
  4148e9:	sbb    al,0x65
  4148eb:	das    
  4148ec:	jp     0x4148f1
  4148ee:	test   DWORD PTR [esi],edi
  4148f0:	nop
  4148f1:	xor    dl,BYTE PTR [esi+0x31]
  4148f4:	xchg   BYTE PTR [eax],ah
  4148f6:	adc    DWORD PTR [edi-0x7c],eax
  4148f9:	daa    
  4148fa:	push   esi
  4148fb:	xor    esp,edi
  4148fd:	fisttp QWORD PTR [eax+eiz*1+0x57]
  414901:	add    al,0x60
  414903:	adc    al,0x4c
  414905:	add    al,0x3d
  414907:	adc    al,0x53
  414909:	add    al,0x16
  41490b:	adc    al,0x55
  41490d:	add    al,0xc
  41490f:	adc    al,0x3a
  414911:	add    al,0x31
  414913:	adc    al,0x13
  414915:	inc    ebp
  414916:	add    eax,0x1d234925
  41491b:	hlt    
  41491c:	sub    bl,BYTE PTR ds:0x1d0b25fc
  414922:	fisubr WORD PTR [edi]
  414924:	or     al,0x32
  414926:	xor    DWORD PTR [ecx+0x1c],eax
  414929:	fimul  WORD PTR [edi]
  41492b:	and    cl,BYTE PTR [edx]
  41492d:	sbb    al,0x31
  41492f:	dec    esi
  414930:	stc    
  414931:	add    BYTE PTR es:[eax],al
  414934:	loopne 0x414961
  414936:	add    BYTE PTR [edi],ch
  414938:	stc    
  414939:	inc    ebx
  41493a:	add    BYTE PTR [edi-0x16b9b71f],bh
  414940:	lock daa 
  414942:	pop    edi
  414943:	jecxz  0x41495c
  414945:	dec    esi
  414946:	je     0x414921
  414948:	xor    ah,BYTE PTR [ebx]
  41494a:	addr16 aad 0x57
  41494d:	out    0x63,al
  41494f:	enter  0x145e,0x4c
  414953:	enter  0x2061,0x50
  414957:	enter  0x2361,0x75
  41495b:	mov    esi,0xb5003040
  414960:	push   ebx
  414961:	and    esi,DWORD PTR [eax+ebp*4+0x56]
  414965:	xor    BYTE PTR [edx-0x74],dh
  414968:	inc    ecx
  414969:	and    eax,DWORD PTR [eax]
  41496b:	popf   
  41496c:	adc    esp,DWORD PTR [ebx]
  41496e:	je     0x41490c
  414970:	and    DWORD PTR [ecx],esi
  414972:	jb     0x41495d
  414974:	push   ds
  414975:	xor    eax,0x27827d71
  41497a:	jb     0x4149f1
  41497c:	xor    al,BYTE PTR [ebx+0x6d]
  41497f:	dec    edi
  414980:	or     DWORD PTR [edi],ebx
  414982:	pop    edi
  414983:	pop    ebx
  414984:	push   ss
  414985:	cmp    BYTE PTR [esi+0x45],al
  414988:	adc    ah,BYTE PTR [ebx]
  41498a:	push   0x69355639
  41498f:	and    eax,0x435f27f3
  414994:	push   esi
  414995:	dec    esi
  414996:	je     0x4149d1
  414998:	add    BYTE PTR [eax],al
  41499a:	add    DWORD PTR [ebx+0x63],eax
  41499d:	xor    eax,0xe6e2d49
  4149a2:	inc    eax
  4149a3:	adc    al,0x5c
  4149a5:	sub    edx,DWORD PTR [ecx+0x35]
  4149a8:	jp     0x4149b6
  4149aa:	out    dx,eax
  4149ab:	pop    ds
  4149ac:	jo     0x414997
  4149ae:	mov    WORD PTR [esi],gs
  4149b0:	jo     0x4149b2
  4149b2:	cmp    al,0x10
  4149b4:	inc    esi
  4149b5:	push   esp
  4149b6:	cmp    BYTE PTR [ebx-0x6f3d1d8],bh
  4149bc:	ins    DWORD PTR es:[edi],dx
  4149bd:	imul   edi,DWORD PTR [ebx+eiz*8],0x67
  4149c1:	gs pop esp
  4149c3:	hlt    
  4149c4:	pop    ebx
  4149c5:	outs   dx,DWORD PTR ds:[esi]
  4149c6:	pop    eax
  4149c7:	in     eax,dx
  4149c8:	ins    DWORD PTR es:[edi],dx
  4149c9:	pop    esp
  4149ca:	imul   esi,edi,0x68
  4149cd:	ins    DWORD PTR es:[edi],dx
  4149ce:	stc    
  4149cf:	xor    DWORD PTR [eax+eax*1-0x29],esp
  4149d3:	xor    BYTE PTR [esi+0x54],al
  4149d6:	mov    eax,0xee6f3f17
  4149db:	xor    DWORD PTR [ecx+0x63],esp
  4149de:	les    ebp,FWORD PTR [esi]
  4149e0:	imul   ebp,DWORD PTR [esi-0x55],0x71
  4149e4:	jno    0x414a5e
  4149e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4149e7:	pop    ss
  4149e8:	das    
  4149e9:	inc    esp
  4149ea:	in     eax,dx
  4149eb:	fst    DWORD PTR [ebx+0x50]
  4149ee:	fadd   DWORD PTR [ebp+eiz*2+0x74]
  4149f2:	mov    ch,0x44
  4149f4:	imul   ebp,DWORD PTR cs:[esi-0x64a3ffd2],0x4628db
  4149ff:	add    BYTE PTR [edi+eiz*8+0x310b5bff],ah
  414a06:	je     0x414a6d
  414a08:	adc    al,0x35
  414a0a:	outs   dx,DWORD PTR ds:[esi]
  414a0b:	imul   esp,DWORD PTR [edi+0x2e],0xea987261
  414a12:	dec    edx
  414a13:	inc    esi
  414a14:	inc    esp
  414a15:	out    0x3c,eax
  414a17:	push   edx
  414a18:	push   ebp
  414a19:	fdivr  QWORD PTR [esi]
  414a1b:	ins    BYTE PTR es:[edi],dx
  414a1c:	jmp    0x4ba6b96b
  414a21:	fcom   QWORD PTR [ebx+0x79]
  414a24:	sub    BYTE PTR ds:0xdc2a694c,dh
  414a2a:	jbe    0x414a72
  414a2c:	xor    DWORD PTR [ecx+esi*8+0x33],esp
  414a30:	and    bh,BYTE PTR [esi]
  414a32:	in     al,dx
  414a33:	aaa    
  414a34:	adc    al,0x43
  414a36:	repnz inc ebp
  414a38:	and    esp,DWORD PTR [eax-0xc]
  414a3b:	das    
  414a3c:	and    BYTE PTR [edi+edx*8],bh
  414a3f:	add    bh,BYTE PTR ds:[esi]
  414a42:	jmp    0x414a6e
  414a44:	add    DWORD PTR ds:0xbf032ff4,esi
  414a4a:	repz inc ebp
  414a4c:	std    
  414a4d:	and    eax,DWORD PTR [edx+0x42]
  414a50:	lods   al,BYTE PTR ds:[esi]
  414a51:	shl    esp,0x2d
  414a54:	arpl   WORD PTR [ecx+0x64a65bf1],di
  414a5a:	pop    ss
  414a5b:	xor    DWORD PTR [ebx+0x7d],esp
  414a5e:	inc    eax
  414a5f:	pop    edi
  414a60:	add    ah,0x3f
  414a63:	push   esp
  414a64:	add    BYTE PTR [eax],al
  414a66:	popa   
  414a67:	jge    0x414aae
  414a69:	dec    esi
  414a6a:	xchg   esp,eax
  414a6b:	test   eax,0x9c835f56
  414a70:	pop    ss
  414a71:	gs xor ebx,edx
  414a74:	sub    DWORD PTR [esi+0x61],esp
  414a77:	jge    0x414a50
  414a79:	jno    0x414ad0
  414a7b:	or     eax,0xaf6c5401
  414a80:	cmp    BYTE PTR [ecx+0x63],dl
  414a83:	stos   DWORD PTR es:[edi],eax
  414a84:	fisubr DWORD PTR [ecx]
  414a86:	xor    ebp,ebp
  414a88:	and    dh,BYTE PTR [ecx+0x42]
  414a8b:	jmp    0x2eef:0x1d4d7218
  414a92:	imul   ebx,edi,0xffffffed
  414a95:	call   FWORD PTR ds:0xf721f4e
  414a9b:	fcom   QWORD PTR [esi]
  414a9d:	arpl   WORD PTR [ebx+0x4e],bx
  414aa0:	out    dx,al
  414aa1:	call   DWORD PTR [eax+ecx*2]
  414aa4:	sbb    BYTE PTR [ecx+edx*2+0x14],ch
  414aa8:	or     BYTE PTR [eax],ah
  414aaa:	adc    eax,0x370406
  414aaf:	dec    esi
  414ab0:	sbb    ch,dh
  414ab2:	outs   dx,BYTE PTR ds:[esi]
  414ab3:	inc    eax
  414ab4:	out    0x4f,eax
  414ab6:	repnz in eax,0x33
  414ab9:	push   edi
  414aba:	add    ebp,edx
  414abc:	int    0x3
  414abe:	out    dx,eax
  414abf:	out    0x16,eax
  414ac1:	in     al,0xfc
  414ac3:	add    dh,dh
  414ac5:	add    ebp,edi
  414ac7:	out    0xb6,eax
  414ac9:	cmp    DWORD PTR [eax],eax
  414acb:	add    ah,cl
  414acd:	or     ah,bh
  414acf:	ss into 
  414ad1:	pop    es
  414ad2:	int3   
  414ad3:	ss pop edi
  414ad5:	or     al,0xbc
  414ad7:	pop    ss
  414ad8:	xor    ebp,esp
  414ada:	mov    ch,0x41
  414adc:	test   ecx,ebp
  414ade:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414adf:	push   ebp
  414ae0:	jb     0x414ad2
  414ae2:	cwde   
  414ae3:	sbb    dl,BYTE PTR [ebx+0x5d41fc01]
  414ae9:	in     al,0xc6
  414aeb:	test   BYTE PTR [ecx+ecx*2-0x45],0x56
  414af0:	nop
  414af1:	push   es
  414af2:	xor    BYTE PTR [ebx],0x65
  414af5:	add    eax,0xda7456e7
  414afa:	call   0x8347:0xa3e61e52
  414b01:	add    DWORD PTR [ecx-0x6d25e5e6],ecx
  414b07:	push   ebx
  414b08:	adc    DWORD PTR [ebp+0x15],eax
  414b0b:	icebp  
  414b0c:	pop    edx
  414b0d:	fidiv  DWORD PTR [edx]
  414b0f:	push   esp
  414b10:	pusha  
  414b11:	neg    DWORD PTR [eax+0x32]
  414b14:	adc    al,BYTE PTR [esi]
  414b16:	pop    edx
  414b17:	add    al,0xef
  414b19:	out    0x16,eax
  414b1b:	in     al,0xf1
  414b1d:	add    BYTE PTR [edx+ebx*1],dh
  414b20:	sbb    eax,0xe12f0014
  414b25:	jecxz  0x414b46
  414b27:	daa    
  414b28:	sub    al,BYTE PTR [eax]
  414b2a:	arpl   sp,cx
  414b2c:	push   ds
  414b2d:	adc    al,0x50
  414b2f:	or     BYTE PTR [eax],al
  414b31:	add    BYTE PTR [ebx+eax*1],bh
  414b34:	jne    0x414b3c
  414b36:	daa    
  414b37:	clc    
  414b38:	(bad)  
  414b39:	cmp    DWORD PTR [esi+0x6],eax
  414b3c:	jbe    0x414b4a
  414b3e:	daa    
  414b3f:	loop   0x414b9f
  414b41:	or     al,0x36
  414b43:	adc    al,0x53
  414b45:	cli    
  414b46:	das    
  414b47:	push   es
  414b48:	inc    edi
  414b49:	and    eax,0xd06dd92d
  414b4e:	push   cs
  414b4f:	stc    
  414b50:	pop    esi
  414b51:	int    0xf6
  414b53:	clc    
  414b54:	jno    0x414b22
  414b56:	push   ebp
  414b57:	or     BYTE PTR [ebp-0x25],ch
  414b5a:	pop    ebx
  414b5b:	adc    al,0x50
  414b5d:	(bad)  
  414b5e:	or     BYTE PTR fs:[esi-0x4c],cl
  414b62:	aas    
  414b63:	mul    BYTE PTR [edx-0x45]
  414b66:	xor    ah,bl
  414b68:	bound  edi,QWORD PTR [ebx-0x428e0ac0]
  414b6e:	dec    ebx
  414b6f:	add    al,0x63
  414b71:	jmp    0xe9415f98
  414b76:	outs   dx,DWORD PTR ds:[esi]
  414b77:	xlat   BYTE PTR ds:[ebx]
  414b78:	ds jmp 0x84d040c2
  414b7e:	mov    bl,0xd6
  414b80:	dec    ebx
  414b81:	into   
  414b82:	pusha  
  414b83:	imul   eax,DWORD PTR ds:0xd1749d49,0xffe8ff87
  414b8d:	sbb    bl,bl
  414b8f:	inc    ebp
  414b90:	cs sbb ecx,edx
  414b93:	xor    DWORD PTR ds:[esi],ebx
  414b96:	add    BYTE PTR [eax],al
  414b98:	xor    eax,0xaae70a44
  414b9d:	cmp    eax,DWORD PTR [esi]
  414b9f:	add    BYTE PTR [ecx-0x74f8fd6f],cl
  414ba5:	pop    ss
  414ba6:	add    BYTE PTR [ebx-0x9],dl
  414ba9:	xor    eax,0x49f97774
  414bae:	popa   
  414baf:	pop    esp
  414bb0:	inc    esp
  414bb1:	sub    eax,0xd61b616e
  414bb6:	push   ebx
  414bb7:	push   eax
  414bb8:	and    al,0xe7
  414bba:	fs je  0x414bea
  414bbd:	js     0x414c09
  414bbf:	popa   
  414bc0:	inc    esi
  414bc1:	xor    eax,0x145a6563
  414bc6:	dec    eax
  414bc7:	outs   dx,DWORD PTR ds:[esi]
  414bc8:	dec    ebx
  414bc9:	inc    eax
  414bca:	add    BYTE PTR [ebp+0x4b],dl
  414bcd:	xor    DWORD PTR [edx+0x0],esi
  414bd0:	js     0x414c07
  414bd2:	outs   dx,DWORD PTR ds:[esi]
  414bd3:	jae    0x414c1d
  414bd5:	in     al,0x6a
  414bd7:	jb     0x414be5
  414bd9:	adc    al,0x52
  414bdb:	gs in  eax,0x2c
  414bde:	je     0x414c45
  414be0:	sub    ah,dl
  414be2:	fs jb  0x414bed
  414be5:	fdivr  DWORD PTR [esi]
  414be7:	jns    0x414be3
  414be9:	cs jb  0x414c50
  414bec:	mov    ebp,0xe6006738
  414bf1:	das    
  414bf2:	jno    0x414c57
  414bf4:	mov    ds:0xbd737113,eax
  414bf9:	dec    ecx
  414bfa:	arpl   WORD PTR cs:[eax],ax
  414bfd:	add    BYTE PTR [edi+0x2d],ah
  414c00:	imul   bp,WORD PTR [edi-0x528cc3ed],0x743f
  414c09:	imul   esi,DWORD PTR [esi-0x4691dfcc],0x2a3d6126
  414c13:	sbb    BYTE PTR [edx],ah
  414c15:	add    BYTE PTR [esi+0x39],bl
  414c18:	ins    BYTE PTR es:[edi],dx
  414c19:	jne    0x414c4c
  414c1b:	loopne 0x414c03
  414c1d:	and    DWORD PTR [ecx],esi
  414c1f:	dec    edx
  414c20:	adc    eax,0x234e2566
  414c25:	jb     0x414c33
  414c27:	xor    DWORD PTR [ecx+0x67],edx
  414c2a:	sbb    al,0xd6
  414c2c:	adc    eax,0x1c491054
  414c31:	pop    edi
  414c32:	or     al,0xd9
  414c34:	push   ebx
  414c35:	jae    0x414c14
  414c37:	dec    eax
  414c38:	dec    ebx
  414c39:	pop    esp
  414c3a:	add    ah,BYTE PTR [eax]
  414c3c:	xor    DWORD PTR [ecx-0x28],esi
  414c3f:	lea    edx,[ebx]
  414c41:	jno    0x414c74
  414c43:	inc    ebp
  414c44:	adc    eax,0x233edd71
  414c49:	imul   edx,esp,0x7c
  414c4c:	push   eax
  414c4d:	jno    0x414c1b
  414c4f:	mov    dh,BYTE PTR [ebx]
  414c51:	pop    edi
  414c52:	int3   
  414c53:	pop    edi
  414c54:	add    DWORD PTR [eax-0x30],edx
  414c57:	imul   esi,DWORD PTR [edx],0x1d6b9e75
  414c5d:	add    BYTE PTR [ecx+0x742fce],al
  414c63:	add    BYTE PTR [edi-0x30],ch
  414c66:	sbb    BYTE PTR [edx-0x74],ah
  414c69:	retf   
  414c6a:	add    DWORD PTR [esp+edx*4-0x35],edx
  414c6e:	sbb    BYTE PTR [edi-0x69],ah
  414c71:	pop    esp
  414c72:	adc    eax,0x20ad7854
  414c77:	add    BYTE PTR [edi-0x53],ah
  414c7a:	xor    DWORD PTR [esi-0x7b],eax
  414c7d:	int    0xd3
  414c7f:	ja     0x414cd5
  414c81:	adc    DWORD PTR [ecx],eax
  414c83:	pop    esp
  414c84:	outs   dx,DWORD PTR ds:[esi]
  414c85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c86:	sub    eax,0x1d9c6163
  414c8b:	sub    DWORD PTR [edx],ebx
  414c8d:	jge    0x414ce1
  414c8f:	ins    DWORD PTR es:[edi],dx
  414c90:	dec    edi
  414c91:	or     DWORD PTR [esi],ebp
  414c93:	pop    edi
  414c94:	inc    ebx
  414c95:	adc    al,0x4c
  414c97:	dec    eax
  414c98:	jo     0x414c99
  414c9a:	inc    esp
  414c9b:	push   ds
  414c9c:	adc    bh,cl
  414c9e:	sub    DWORD PTR [ecx],esi
  414ca0:	and    DWORD PTR [edx+edi*1],esi
  414ca3:	pop    ss
  414ca4:	pop    ss
  414ca5:	or     BYTE PTR [esi],bh
  414ca7:	and    eax,0x3de6f923
  414cac:	in     eax,0xe3
  414cae:	push   es
  414caf:	and    BYTE PTR [edx],dl
  414cb1:	add    esi,DWORD PTR [ebx]
  414cb3:	sbb    eax,0x1d1af50f
  414cb8:	add    al,0xfe
  414cba:	(bad)  
  414cbb:	xor    dl,dl
  414cbd:	add    DWORD PTR ds:0x2513e321,ebx
  414cc3:	push   eax
  414cc4:	add    DWORD PTR [ebx+ecx*1],esi
  414cc7:	and    DWORD PTR [eax],eax
  414cc9:	add    al,ah
  414ccb:	pop    es
  414ccc:	adc    BYTE PTR [esi],dl
  414cce:	out    dx,al
  414ccf:	pop    es
  414cd0:	add    BYTE PTR [edi],dl
  414cd2:	xlat   BYTE PTR ds:[ebx]
  414cd3:	xor    esi,esp
  414cd5:	xor    dl,dl
  414cd7:	add    edi,esp
  414cd9:	cmp    eax,0x2006e3dd
  414cde:	xchg   edx,eax
  414cdf:	add    ebx,ebx
  414ce1:	sbb    al,0x97
  414ce3:	repz rcr BYTE PTR [esp+ecx*4],cl
  414ce7:	inc    BYTE PTR [esi]
  414ce9:	xor    al,0x76
  414ceb:	add    DWORD PTR [edx-0x34fd63d2],edi
  414cf1:	add    ebp,DWORD PTR [edi-0x18]
  414cf4:	xchg   esi,eax
  414cf5:	jecxz  0x414c89
  414cf7:	neg    DWORD PTR [ecx-0x780171d1]
  414cfd:	das    
  414cfe:	push   esi
  414cff:	std    
  414d00:	test   bl,ah
  414d02:	push   esi
  414d03:	std    
  414d04:	cwde   
  414d05:	das    
  414d06:	xor    esi,edx
  414d08:	call   0x4532:0x83f81153
  414d0f:	sti    
  414d10:	inc    DWORD PTR [esi+0x7e67080d]
  414d16:	and    al,0x34
  414d18:	popa   
  414d19:	dec    eax
  414d1a:	add    ebp,ebp
  414d1c:	imul   ecx,DWORD PTR [esi+0x4c],0x14
  414d20:	inc    esi
  414d21:	cmp    eax,0x5b7033fd
  414d26:	inc    esp
  414d27:	mul    BYTE PTR [esi+0x55]
  414d2a:	add    eax,DWORD PTR ss:[eax]
  414d2d:	daa    
  414d2e:	add    BYTE PTR [eax],al
  414d30:	loope  0x414d15
  414d32:	push   eax
  414d33:	inc    ecx
  414d34:	add    BYTE PTR es:[ecx+ebp*8+0x1c],ch
  414d39:	or     BYTE PTR [eax+0x1a],dh
  414d3c:	adc    eax,0x870d6bf1
  414d41:	div    DWORD PTR [eax+0x0]
  414d44:	sub    eax,0x21076ce3
  414d49:	pop    es
  414d4a:	pop    edi
  414d4b:	sti    
  414d4c:	aaa    
  414d4d:	lock dec edx
  414d4f:	sub    al,ah
  414d51:	cmp    BYTE PTR [ecx+0x6],dl
  414d54:	daa    
  414d55:	or     BYTE PTR [edi+eiz*1-0x1f],bl
  414d59:	jecxz  0x414da1
  414d5b:	xlat   BYTE PTR ds:[ebx]
  414d5c:	adc    al,0xff
  414d5e:	pop    ebx
  414d5f:	mov    edx,0xd973084f
  414d64:	xor    bl,al
  414d66:	pop    esi
  414d67:	aad    0x53
  414d69:	fsub   DWORD PTR [esi-0x45]
  414d6c:	xor    dh,al
  414d6e:	inc    ebp
  414d6f:	xchg   ebp,eax
  414d70:	(bad)  
  414d71:	aad    0x6d
  414d73:	iret   
  414d74:	sbb    eax,0x40c45114
  414d79:	push   es
  414d7a:	arpl   WORD PTR [ebx-0x6a8f0ac2],bx
  414d80:	add    al,0x5
  414d82:	imul   eax,DWORD PTR [ebp-0x6e9d21ce],0xf
  414d89:	add    eax,DWORD PTR [esi+0x0]
  414d8c:	shl    DWORD PTR [ecx+eiz*2],0x0
  414d90:	mov    dh,0x3c
  414d92:	jo     0x414e07
  414d94:	add    BYTE PTR [eax],al
  414d96:	mov    cl,0x3c
  414d98:	popa   
  414d99:	cs mov cl,0x26
  414d9c:	add    BYTE PTR gs:[esi],al
  414d9f:	xor    DWORD PTR [edi+0x74],ebp
  414da2:	imul   eax,DWORD PTR [ebx+ebp*2+0x6e],0xfffffff5
  414da7:	ja     0x414de8
  414da9:	jb     0x414e0a
  414dab:	aas    
  414dac:	outs   dx,DWORD PTR ds:[esi]
  414dad:	gs pop edx
  414daf:	sbb    BYTE PTR [esi+0x54],al
  414db2:	sub    BYTE PTR [ebp+eiz*2+0x73],cl
  414db6:	inc    esp
  414db7:	popaw  
  414db9:	bound  ecx,QWORD PTR [eax+0x186148d4]
  414dbf:	sub    al,0x61
  414dc1:	push   ebx
  414dc2:	inc    esp
  414dc3:	cmp    eax,0xdc2f6964
  414dc8:	ds push 0x6569273a
  414dce:	cmp    BYTE PTR [ecx+esi*2],ch
  414dd1:	jae    0x414e2b
  414dd3:	imul   edi,DWORD PTR ds:0x44535840,0x40
  414dda:	dec    eax
  414ddb:	sub    eax,0xd7484046
  414de0:	dec    ecx
  414de1:	inc    eax
  414de2:	sbb    BYTE PTR [ecx+0x49],bl
  414de5:	inc    eax
  414de6:	sbb    BYTE PTR [edi],dl
  414de8:	push   eax
  414de9:	inc    eax
  414dea:	or     BYTE PTR [ecx+0x54],dl
  414ded:	inc    eax
  414dee:	or     BYTE PTR [ecx+edx*2+0x40],bl
  414df2:	sbb    BYTE PTR [edx+0x56],dl
  414df5:	inc    eax
  414df6:	sbb    bl,dl
  414df8:	push   edi
  414df9:	inc    eax
  414dfa:	add    BYTE PTR [eax],al
  414dfc:	or     BYTE PTR [eax],ah
  414dfe:	push   ebp
  414dff:	inc    eax
  414e00:	or     cl,dl
  414e02:	push   esi
  414e03:	inc    eax
  414e04:	fdiv   DWORD PTR [edi+0x7d314059]
  414e0a:	das    
  414e0b:	pusha  
  414e0c:	jno    0x414e8b
  414e0e:	fisub  DWORD PTR [eax+0x71]
  414e11:	jge    0x414e80
  414e13:	popa   
  414e14:	jno    0x414e93
  414e16:	xchg   esp,eax
  414e17:	popa   
  414e18:	jno    0x414e97
  414e1a:	sbb    ah,BYTE PTR [ecx+esi*2+0x7d]
  414e1e:	xchg   esi,eax
  414e1f:	fs jno 0x414e9f
  414e22:	xchg   ecx,eax
  414e23:	data16 icebp 
  414e25:	jl     0x414e0b
  414e27:	fs icebp 
  414e29:	jl     0x414ea1
  414e2b:	push   0xfffffff1
  414e2d:	jl     0x414e5d
  414e2f:	imul   esi,ecx,0x7c
  414e32:	ja     0x414ea1
  414e34:	icebp  
  414e35:	jl     0x414eaa
  414e37:	jo     0x414e2a
  414e39:	jl     0x414e88
  414e3b:	outs   dx,DWORD PTR ds:[esi]
  414e3c:	icebp  
  414e3d:	jl     0x414e8d
  414e3f:	jb     0x414e32
  414e41:	jl     0x414e5d
  414e43:	je     0x414e36
  414e45:	jl     0x414e40
  414e47:	ja     0x414e3a
  414e49:	jl     0x414e6f
  414e4b:	js     0x414e3e
  414e4d:	jl     0x414e1b
  414e4f:	js     0x414e42
  414e51:	jl     0x414e50
  414e53:	js     0x414e46
  414e55:	jl     0x414e7f
  414e57:	jns    0x414e4a
  414e59:	jl     0x414ea9
  414e5b:	xchg   cl,dh
  414e5d:	jl     0x414e99
  414e5f:	xchg   DWORD PTR [eax],eax
  414e61:	add    cl,dh
  414e63:	jl     0x414e4f
  414e65:	mov    DWORD PTR [ecx+0x7d],esi
  414e68:	mov    ebx,0x247d7196
  414e6d:	xchg   ebp,eax
  414e6e:	jno    0x414eed
  414e70:	cli    
  414e71:	xchg   edi,eax
  414e72:	jno    0x414ef1
  414e74:	jg     0x414e0e
  414e76:	jno    0x414ef5
  414e78:	call   0x6dbec013
  414e7d:	xchg   edi,eax
  414e7e:	jno    0x414efd
  414e80:	fstp   DWORD PTR [ecx-0x4218eb8f]
  414e86:	retf   
  414e87:	shl    esi,cl
  414e89:	cmp    ecx,eax
  414e8b:	shl    esi,cl
  414e8d:	push   ebp
  414e8e:	mov    eax,0xb8b0e6d3
  414e93:	shl    esi,cl
  414e95:	fcom   DWORD PTR [edx-0x7130192d]
  414e9b:	shl    esi,cl
  414e9d:	mov    al,ds:0x8be6d396
  414ea2:	js     0x414e77
  414ea4:	out    0x5c,al
  414ea6:	call   0xe8ef357e
  414eab:	shl    esi,cl
  414ead:	sbb    ch,bl
  414eaf:	shl    esi,cl
  414eb1:	imul   edx,ebp,0xcdbae6d3
  414eb7:	shl    esi,cl
  414eb9:	or     ecx,edx
  414ebb:	shl    esi,cl
  414ebd:	sub    al,0xba
  414ebf:	shl    esi,cl
  414ec1:	dec    ecx
  414ec2:	mov    bh,0xd3
  414ec4:	out    0xb3,al
  414ec6:	add    BYTE PTR [eax],al
  414ec8:	scas   eax,DWORD PTR es:[edi]
  414ec9:	shl    esi,cl
  414ecb:	ins    DWORD PTR es:[edi],dx
  414ecc:	jno    0x414ea1
  414ece:	out    0xe6,al
  414ed0:	lahf   
  414ed1:	shl    esi,cl
  414ed3:	sub    BYTE PTR [esi-0x713f192d],dl
  414ed9:	shl    esi,cl
  414edb:	inc    edi
  414edc:	jo     0x414eb1
  414ede:	out    0x65,al
  414ee0:	jo     0x414eb5
  414ee2:	out    0xf6,al
  414ee4:	jb     0x414eb9
  414ee6:	out    0xf1,al
  414ee8:	repz aam 0xe6
  414eeb:	imul   esi,edx,0xffffffd4
  414eee:	out    0x38,al
  414ef0:	not    ah
  414ef2:	out    0x6d,al
  414ef4:	out    dx,al
  414ef5:	aam    0xe6
  414ef7:	idiv   ebx
  414ef9:	aam    0xe6
  414efb:	sbb    edi,edx
  414efd:	aam    0xff
  414eff:	call   0xe981a846
  414f04:	aaa    
  414f05:	arpl   WORD PTR [eax-0x17],ax
  414f08:	push   0x65
  414f0a:	inc    eax
  414f0b:	jmp    0xe981b49d
  414f10:	sbb    DWORD PTR [eax+eax*2-0x17],ebp
  414f14:	mov    al,0x6c
  414f16:	inc    eax
  414f17:	jmp    0xe981b1ea
  414f1c:	mov    bh,0x61
  414f1e:	inc    eax
  414f1f:	jmp    0xe981bd51
  414f24:	stos   DWORD PTR es:[edi],eax
  414f25:	outs   dx,BYTE PTR ds:[esi]
  414f26:	inc    eax
  414f27:	jmp    0xe941635e
  414f2c:	add    BYTE PTR [eax],al
  414f2e:	xor    dl,BYTE PTR [eax+eax*1]
  414f31:	jmp    0xe9416368
  414f36:	xor    dl,BYTE PTR [eax+eax*1]
  414f39:	jmp    0xe9416370
  414f3e:	in     eax,dx
  414f3f:	mul    DWORD PTR [esi+0x4c]
  414f42:	inc    ebx
  414f43:	add    BYTE PTR [eax],ah
  414f45:	and    DWORD PTR [edx+0x3],edx
  414f48:	push   0x3ee025e9
  414f4d:	xor    eax,0x202ae31e
  414f52:	out    dx,al
  414f53:	jecxz  0x414fa1
  414f55:	cmp    ebx,DWORD PTR [ecx]
  414f57:	cmp    eax,0x3535324d
  414f5c:	fs iret 
  414f5e:	(bad)  
  414f60:	arpl   cx,bp
  414f62:	push   edi
  414f63:	cmp    DWORD PTR [edx],esi
  414f65:	adc    DWORD PTR ds:0x57dc7200,ebp
  414f6b:	adc    al,0x6d
  414f6d:	ror    BYTE PTR [esi+0x3a],1
  414f70:	(bad)  
  414f71:	enter  0x1446,0x7
  414f75:	loopne 0x414f9e
  414f77:	push   ds
  414f78:	or     eax,DWORD PTR [eax]
  414f7a:	add    bl,BYTE PTR [esi]
  414f7c:	and    BYTE PTR [edx],bh
  414f7e:	mul    DWORD PTR [ecx]
  414f80:	ins    DWORD PTR es:[edi],dx
  414f81:	and    BYTE PTR ds:0xed642017,dl
  414f87:	cmp    BYTE PTR [eax],ah
  414f89:	or     ebp,edi
  414f8b:	gs sbb eax,0x516d520
  414f91:	imul   eax,DWORD PTR [eax],0x674ae00
  414f97:	and    BYTE PTR [ebp+0x4c73652c],ch
  414f9d:	jne    0x414fa5
  414f9f:	and    al,bh
  414fa1:	jno    0x414fd1
  414fa3:	and    cl,dl
  414fa5:	je     0x414fc4
  414fa7:	addr16 aaa 
  414fa9:	and    DWORD PTR [ebx+0x20],ebp
  414fac:	mov    eax,ds:0x9756c74
  414fb1:	sbb    eax,0x3c280a09
  414fb6:	popa   
  414fb7:	ins    BYTE PTR es:[edi],dx
  414fb8:	sub    BYTE PTR ds:0x74882520,bl
  414fbe:	std    
  414fbf:	pop    ds
  414fc0:	cmp    BYTE PTR [edx+0x22],dh
  414fc3:	jae    0x414fef
  414fc5:	jo     0x414fe4
  414fc7:	and    BYTE PTR [eax],ch
  414fc9:	jo     0x414fc8
  414fcb:	push   edx
  414fcc:	inc    eax
  414fcd:	xor    DWORD PTR [esp+ebp*2+0xd],ebp
  414fd1:	sub    BYTE PTR [ecx+0x63],ah
  414fd4:	cmp    eax,0x4841612c
  414fd9:	pop    ds
  414fda:	push   0x2f442465
  414fdf:	xor    dh,BYTE PTR [esi+0x30]
  414fe2:	ins    BYTE PTR es:[edi],dx
  414fe3:	ins    BYTE PTR es:[edi],dx
  414fe4:	dec    eax
  414fe5:	xor    DWORD PTR [eax+0x70],edi
  414fe8:	xor    al,0x43
  414fea:	jb     0x415051
  414fec:	or     al,BYTE PTR [esi+0x13ed7862]
  414ff2:	dec    edi
  414ff3:	sub    eax,0x32ed2c31
  414ff8:	add    BYTE PTR [eax],al
  414ffa:	inc    esp
  414ffb:	sub    al,0xdc
  414ffd:	dec    DWORD PTR [esi]
  414fff:	jle    0x415002
  415001:	add    BYTE PTR [edx+0x50],ah
  415004:	dec    edx
  415005:	imul   eax,DWORD PTR [ecx-0x798eeca8],0xffffffc7
  41500c:	and    dh,BYTE PTR [esp+edx*2-0x33]
  415010:	adc    esp,DWORD PTR [edi+0x5f]
  415013:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415014:	sub    eax,0x1985663
  415019:	push   ecx
  41501a:	dec    esp
  41501b:	shl    DWORD PTR [edx+eiz*2],0x61
  41501f:	or     ebp,DWORD PTR [edx]
  415021:	jbe    0x41507b
  415023:	cdq    
  415024:	es gs push esp
  415027:	jge    0x41505d
  415029:	arpl   WORD PTR [edx-0x6b],si
  41502c:	and    ch,BYTE PTR [esi+0x16]
  41502f:	fmul   DWORD PTR [ebp+0x6d]
  415032:	sbb    eax,0x17725e4
  415037:	jmp    0x415063
  415039:	jbe    0x415043
  41503b:	dec    ecx
  41503c:	daa    
  41503d:	gs adc al,0x7d
  415040:	xor    ah,BYTE PTR [ebx-0xe]
  415043:	dec    edx
  415044:	daa    
  415045:	pop    edi
  415046:	add    eax,0xa6d37d8
  41504b:	shr    BYTE PTR ds:0x1623e350,1
  415051:	addr16 aad 0xf
  415054:	and    eax,0x274a3163
  415059:	inc    edx
  41505a:	rcr    BYTE PTR [ecx],1
  41505c:	sub    DWORD PTR [ebx+0x0],esi
  41505f:	add    cl,al
  415061:	sub    al,0x12
  415063:	addr16 mov edi,0xd6633023
  415069:	pop    ss
  41506a:	add    al,0x51
  41506c:	int3   
  41506d:	sub    ah,BYTE PTR [edi]
  41506f:	jno    0x415016
  415071:	adc    al,0xd6
  415073:	adc    DWORD PTR [edx-0x58d3271c],edx
  415079:	std    
  41507a:	ret    0x8c28
  41507d:	icebp  
  41507e:	out    0x32,al
  415080:	xchg   edx,eax
  415081:	fst    st(4)
  415083:	and    al,BYTE PTR [ebx-0x6ded380f]
  415089:	in     eax,0xbb
  41508b:	cs jge 0x415083
  41508e:	xchg   esi,eax
  41508f:	adc    DWORD PTR [esi-0x2],edx
  415092:	(bad)  
  415093:	das    
  415094:	push   edx
  415095:	out    dx,eax
  415096:	add    DWORD PTR [ebx],0xffffff80
  415099:	icebp  
  41509a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41509b:	adc    ah,BYTE PTR [eax-0x3]
  41509e:	test   DWORD PTR ds:0x30900261,ebp
  4150a4:	data16 add al,BYTE PTR [eax-0x7404b3c9]
  4150ab:	sub    eax,0x15800261
  4150b0:	push   ss
  4150b1:	clc    
  4150b2:	dec    ebx
  4150b3:	daa    
  4150b4:	adc    dl,BYTE PTR [edi+eiz*8]
  4150b7:	add    esi,DWORD PTR [ecx]
  4150b9:	adc    al,0xe7
  4150bb:	add    esi,DWORD PTR [ecx]
  4150bd:	adc    al,0xe7
  4150bf:	add    esi,DWORD PTR [ecx]
  4150c1:	adc    al,0xe7
  4150c3:	add    eax,DWORD PTR [eax]
  4150c5:	add    BYTE PTR [ecx],dh
  4150c7:	adc    al,0xe7
  4150c9:	add    esi,DWORD PTR [ecx]
  4150cb:	adc    al,0xe7
  4150cd:	add    esi,DWORD PTR [ecx]
  4150cf:	adc    al,0xe7
  4150d1:	add    esi,DWORD PTR [ecx]
  4150d3:	adc    al,0xe7
  4150d5:	add    esi,DWORD PTR [ecx]
  4150d7:	adc    al,0xe7
  4150d9:	add    esi,DWORD PTR [ecx]
  4150db:	adc    al,0xe7
  4150dd:	add    esi,DWORD PTR [ecx]
  4150df:	adc    al,0xe7
  4150e1:	add    esi,DWORD PTR [ecx]
  4150e3:	adc    al,0xe7
  4150e5:	add    esi,DWORD PTR [ecx]
  4150e7:	adc    al,0xe7
  4150e9:	add    esi,DWORD PTR [ecx]
  4150eb:	adc    al,0x0
  4150ed:	jmp    0xe9416524
  4150f2:	xor    dl,BYTE PTR [eax+eax*1]
  4150f5:	jmp    0xe941652c
  4150fa:	xor    dl,BYTE PTR [eax+eax*1]
  4150fd:	jmp    0xe9416534
  415102:	xor    dl,BYTE PTR [eax+eax*1]
  415105:	jmp    0xe941653c
  41510a:	xor    dl,BYTE PTR [eax+eax*1]
  41510d:	jmp    0xe9416544
  415112:	xor    dl,BYTE PTR [eax+eax*1]
  415115:	jmp    0xe941654c
  41511a:	xor    dl,BYTE PTR [eax+eax*1]
  41511d:	jmp    0xe9416554
  415122:	xor    dl,BYTE PTR [eax+eax*1]
  415125:	jmp    0xe941655c
  41512a:	add    BYTE PTR [eax],al
  41512c:	xor    dl,BYTE PTR [eax+eax*1]
  41512f:	jmp    0xe9416566
  415134:	xor    dl,BYTE PTR [eax+eax*1]
  415137:	jmp    0xe941656e
  41513c:	xor    dl,BYTE PTR [eax+eax*1]
  41513f:	jmp    0xe9416576
  415144:	xor    dl,BYTE PTR [eax+eax*1]
  415147:	jmp    0xe941657e
  41514c:	xor    dl,BYTE PTR [eax+eax*1]
  41514f:	jmp    0xe9416586
  415154:	xor    dl,BYTE PTR [eax+eax*1]
  415157:	jmp    0xe941658e
  41515c:	xor    dl,BYTE PTR [eax+eax*1]
  41515f:	jmp    0xe9416596
  415164:	xor    dl,BYTE PTR [eax+eax*1]
  415167:	add    BYTE PTR [eax+0x11],bl
  41516a:	add    BYTE PTR [eax],al
  41516c:	dec    eax
  41516d:	adc    DWORD PTR [eax],eax
  41516f:	add    BYTE PTR [eax+0x11],cl
  415172:	add    BYTE PTR [eax],al
  415174:	sbb    BYTE PTR [ecx],dl
  415176:	add    BYTE PTR [eax],al
  415178:	sbb    BYTE PTR [ecx],dl
  41517a:	add    BYTE PTR [eax],al
  41517c:	or     BYTE PTR [ecx],dl
  41517e:	add    BYTE PTR [eax],al
  415180:	or     BYTE PTR [ecx],dl
  415182:	add    BYTE PTR [eax],al
  415184:	sbb    BYTE PTR [ecx],dl
  415186:	add    BYTE PTR [eax],al
  415188:	sbb    BYTE PTR [ecx],dl
  41518a:	add    BYTE PTR [eax],al
  41518c:	or     BYTE PTR [ecx],dl
  41518e:	add    BYTE PTR [eax],al
  415190:	add    BYTE PTR [eax],al
  415192:	or     BYTE PTR [ecx],dl
  415194:	add    BYTE PTR [eax],al
  415196:	fcom   DWORD PTR [eax]
  415198:	add    BYTE PTR [eax],al
  41519a:	fcom   DWORD PTR [eax]
  41519c:	add    BYTE PTR [eax],al
  41519e:	enter  0x10,0x0
  4151a2:	enter  0x10,0x0
  4151a6:	fcom   DWORD PTR [eax]
  4151a8:	add    BYTE PTR [eax],al
  4151aa:	fcom   DWORD PTR [eax]
  4151ac:	add    BYTE PTR [eax],al
  4151ae:	enter  0x10,0x0
  4151b2:	enter  0x10,0x0
  4151b6:	cwde   
  4151b7:	adc    BYTE PTR [eax],al
  4151b9:	add    BYTE PTR [eax-0x77fffff0],bl
  4151bf:	adc    BYTE PTR [eax],al
  4151c1:	add    BYTE PTR [eax-0x67fffff0],cl
  4151c7:	adc    BYTE PTR [eax],al
  4151c9:	add    BYTE PTR [eax-0x77fffff0],bl
  4151cf:	adc    BYTE PTR [eax],al
  4151d1:	add    BYTE PTR [eax+0x58000010],cl
  4151d7:	adc    BYTE PTR [eax],al
  4151d9:	add    BYTE PTR [eax+0x10],bl
  4151dc:	add    BYTE PTR [eax],al
  4151de:	dec    eax
  4151df:	adc    BYTE PTR [eax],al
  4151e1:	add    BYTE PTR [ecx],dh
  4151e3:	jnp    0x4151e6
  4151e5:	add    BYTE PTR [ecx],dh
  4151e7:	jnp    0x4151ea
  4151e9:	add    BYTE PTR [ecx],dh
  4151eb:	jnp    0x4151ee
  4151ed:	add    BYTE PTR [ecx],dh
  4151ef:	jnp    0x4151f2
  4151f1:	add    BYTE PTR [ecx],dh
  4151f3:	jnp    0x4151f6
  4151f5:	add    BYTE PTR [eax],al
  4151f7:	add    BYTE PTR [ecx],dh
  4151f9:	ins    DWORD PTR es:[edi],dx
  4151fa:	add    DWORD PTR [eax],eax
  4151fc:	xor    DWORD PTR [ebp+0x1],ebp
  4151ff:	add    BYTE PTR [ecx],dh
  415201:	ins    DWORD PTR es:[edi],dx
  415202:	add    DWORD PTR [eax],eax
  415204:	xor    DWORD PTR [ebp+0x1],ebp
  415207:	add    BYTE PTR [ecx],dh
  415209:	ins    DWORD PTR es:[edi],dx
  41520a:	add    DWORD PTR [eax],eax
  41520c:	xor    DWORD PTR [ebp+0x1],ebp
  41520f:	add    BYTE PTR [ecx],dh
  415211:	ins    DWORD PTR es:[edi],dx
  415212:	add    DWORD PTR [eax],eax
  415214:	xor    DWORD PTR [ebp+0x1],ebp
  415217:	add    BYTE PTR [ecx],dh
  415219:	ins    DWORD PTR es:[edi],dx
  41521a:	add    DWORD PTR [eax],eax
  41521c:	xor    DWORD PTR [ebp+0x1],ebp
  41521f:	add    BYTE PTR [ecx],dh
  415221:	ins    DWORD PTR es:[edi],dx
  415222:	add    DWORD PTR [eax],eax
  415224:	xor    DWORD PTR [ebp+0x1],ebp
  415227:	add    BYTE PTR [ecx],dh
  415229:	ins    DWORD PTR es:[edi],dx
  41522a:	add    DWORD PTR [eax],eax
  41522c:	xor    DWORD PTR [ebp+0x1],ebp
  41522f:	add    BYTE PTR [ecx],dh
  415231:	ins    DWORD PTR es:[edi],dx
  415232:	add    DWORD PTR [eax],eax
  415234:	xor    DWORD PTR [ebp+0x1],ebp
  415237:	add    BYTE PTR [ecx],dh
  415239:	ins    DWORD PTR es:[edi],dx
  41523a:	add    DWORD PTR [eax],eax
  41523c:	xor    DWORD PTR [ebp+0x1],ebp
  41523f:	add    BYTE PTR [ecx],dh
  415241:	ins    DWORD PTR es:[edi],dx
  415242:	add    DWORD PTR [eax],eax
  415244:	xor    DWORD PTR [esi+eiz*8+0x42],ebp
  415248:	push   ss
  415249:	hlt    
  41524a:	ins    BYTE PTR es:[edi],dx
  41524b:	retf   
  41524c:	xchg   esi,eax
  41524d:	pop    ebx
  41524e:	mov    eax,0x304b99ba
  415253:	xor    ah,BYTE PTR [ecx]
  415255:	hlt    
  415256:	ins    BYTE PTR es:[edi],dx
  415257:	retf   
  415258:	pop    esi
  415259:	ins    BYTE PTR es:[edi],dx
  41525a:	out    0x42,al
  41525c:	add    BYTE PTR [eax],al
  41525e:	into   
  41525f:	adc    esp,DWORD PTR [edi+0x4]
  415262:	icebp  
  415263:	adc    eax,edi
  415265:	add    eax,DWORD PTR [ecx+0x14]
  415268:	fild   WORD PTR [ebx]
  41526a:	xor    eax,0x4603e914
  41526f:	and    edi,0x3
  415272:	mov    cl,0x14
  415274:	out    0x3,eax
  415276:	icebp  
  415277:	adc    esp,edi
  415279:	add    edx,DWORD PTR [ecx+0x14]
  41527c:	out    0x3,eax
  41527e:	inc    ecx
  41527f:	adc    al,0xe7
  415281:	add    ebp,DWORD PTR [ecx]
  415283:	adc    al,0xe7
  415285:	add    ebp,DWORD PTR ds:0x3303e714
  41528b:	adc    al,0xe7
  41528d:	add    eax,DWORD PTR [esi]
  41528f:	and    edi,0xffffff83
  415292:	xor    DWORD PTR [edi+eiz*8],edx
  415295:	inc    ebx
  415296:	xor    DWORD PTR [edi+eiz*8],edx
  415299:	jecxz  0x415289
  41529b:	and    bh,0xf3
  41529e:	out    0x82,al
  4152a0:	out    0xb,eax
  4152a2:	xor    DWORD PTR [edi+eiz*8],edx
  4152a5:	call   esi
  4152a7:	and    bh,0x5
  4152aa:	xor    DWORD PTR [edi+eiz*8],edx
  4152ad:	add    al,0x31
  4152af:	adc    al,0x67
  4152b1:	add    al,0x31
  4152b3:	adc    al,0xa7
  4152b5:	add    esi,DWORD PTR [ecx]
  4152b7:	adc    al,0xc7
  4152b9:	add    esi,DWORD PTR [ecx]
  4152bb:	adc    al,0xd7
  4152bd:	add    esi,DWORD PTR [ecx]
  4152bf:	adc    al,0xef
  4152c1:	add    eax,DWORD PTR [eax]
  4152c3:	add    BYTE PTR [ecx],dh
  4152c5:	adc    al,0xe3
  4152c7:	add    esi,DWORD PTR [ecx]
  4152c9:	adc    al,0xe9
  4152cb:	add    esi,DWORD PTR [ecx]
  4152cd:	adc    al,0xe8
  4152cf:	add    esi,DWORD PTR [ecx]
  4152d1:	adc    al,0xff
  4152d3:	rcl    DWORD PTR [esi+0x34],cl
  4152d6:	fcomip st,st(3)
  4152d8:	cs adc al,0x0
  4152db:	lock test DWORD PTR [ecx],edi
  4152de:	pop    ds
  4152df:	rcr    BYTE PTR [ebp+0x19],1
  4152e2:	jmp    edx
  4152e4:	test   BYTE PTR [edx+eiz*1],ch
  4152e7:	add    ebx,DWORD PTR [edi+0xc]
  4152ea:	add    dl,dl
  4152ec:	sub    esp,DWORD PTR [bx+di]
  4152ef:	iret   
  4152f0:	pusha  
  4152f1:	xor    BYTE PTR [esi],ah
  4152f3:	out    0x40,eax
  4152f5:	adc    BYTE PTR [esi],al
  4152f7:	mov    esp,0xd4232d61
  4152fc:	and    DWORD PTR [edi],ecx
  4152fe:	add    ebp,DWORD PTR [ebp+0x5242df6]
  415304:	and    DWORD PTR [esi],ecx
  415306:	add    al,0x2
  415308:	push   ds
  415309:	or     eax,0x1834e801
  41530e:	push   es
  41530f:	loope  0x415345
  415311:	adc    BYTE PTR [esi],cl
  415313:	test   BYTE PTR ds:0xf5d61325,0x1c
  41531a:	sbb    al,0xe4
  41531c:	loop   0x415329
  41531e:	adc    eax,0x1913e6e9
  415323:	div    DWORD PTR [ecx]
  415325:	sub    BYTE PTR [edi],al
  415327:	test   DWORD PTR [eax],0x10cdc00
  41532d:	lock xor ecx,DWORD PTR [edi]
  415330:	push   es
  415331:	repz mov edi,0xe7d0ff0d
  415337:	pop    ds
  415338:	and    al,0xcf
  41533a:	loopne 0x41535a
  41533c:	and    eax,0x2d2196bb
  415341:	ret    0x3782
  415344:	xor    eax,0x272e8108
  415349:	sbb    BYTE PTR [ebp+ebx*1-0x7d7116e3],cl
  415350:	add    cl,ch
  415352:	xor    dl,BYTE PTR [eax+eax*1]
  415355:	add    BYTE PTR [eax-0x730002eb],cl
  41535b:	cmp    esi,0xfd155c00
  415361:	add    BYTE PTR [ecx+eax*4-0x2],cl
  415365:	dec    DWORD PTR [ebp+edx*1+0x0]
  415369:	add    BYTE PTR [eax+0x15],cl
  41536c:	std    
  41536d:	call   FWORD PTR [eax-0x7f]
  415370:	std    
  415371:	call   FWORD PTR [eax-0x7f]
  415374:	inc    BYTE PTR [eax]
  415376:	dec    esp
  415377:	cmp    esi,0xfd814800
  41537d:	call   FWORD PTR [ecx+eax*4]
  415380:	std    
  415381:	add    BYTE PTR [edx*1+0x150800fd],cl
  415388:	add    BYTE PTR [ecx],al
  41538a:	or     al,0x15
  41538c:	add    BYTE PTR [eax],al
  41538e:	add    BYTE PTR [eax],al
  415390:	sbb    al,0x81
  415392:	std    
  415393:	call   FWORD PTR [eax]
  415395:	cmp    ebp,0xfd810800
  41539b:	add    BYTE PTR [eax],cl
  41539d:	cmp    esi,0xfe80d8ff
  4153a3:	(bad)  
  4153a4:	fcom   DWORD PTR [edi*8-0x2eb3800]
  4153ab:	add    ah,cl
  4153ad:	cmp    ch,0x0
  4153b0:	fcom   QWORD PTR [edi*8+0x14ccff]
  4153b7:	add    esp,ecx
  4153b9:	adc    al,0x0
  4153bb:	add    esp,ecx
  4153bd:	adc    al,0xfd
  4153bf:	call   FWORD PTR [eax-0x73ffffec]
  4153c5:	cmp    ch,0xff
  4153c8:	mov    WORD PTR [eax+0x1488fffe],es
  4153ce:	add    BYTE PTR [ecx],al
  4153d0:	xor    DWORD PTR [ebx+0x1],ebp
  4153d3:	inc    DWORD PTR [esi+0x31fefd76]
  4153d9:	outs   dx,DWORD PTR ds:[esi]
  4153da:	add    DWORD PTR [eax],eax
  4153dc:	xor    DWORD PTR [ebx+0x1],ebp
  4153df:	push   DWORD PTR [ecx]
  4153e1:	imul   edi,ebp,0xfffffffe
  4153e4:	xor    DWORD PTR [ebx+0x1],ebp
  4153e7:	add    BYTE PTR [eax],dh
  4153e9:	imul   eax,DWORD PTR [ecx],0x0
  4153ec:	xor    BYTE PTR [ebx-0x3],ch
  4153ef:	dec    DWORD PTR [esi+0x6e]
  4153f2:	add    edi,edi
  4153f4:	add    BYTE PTR [eax],al
  4153f6:	xor    DWORD PTR [ebx+0x1],ebp
  4153f9:	(bad)  
  4153fa:	ds push 0xfffffffd
  4153fd:	(bad)  
  4153fe:	ss jbe 0x415402
  415401:	add    BYTE PTR [eax],dh
  415403:	ins    DWORD PTR es:[edi],dx
  415404:	std    
  415405:	jmp    DWORD PTR [esi]
  415407:	jp     0x41540a
  415409:	add    BYTE PTR [ecx],dh
  41540b:	jno    0x41540a
  41540d:	push   DWORD PTR [ecx]
  41540f:	jns    0x41540e
  415411:	dec    BYTE PTR [esi]
  415413:	jb     0x415412
  415415:	(bad)  
  415416:	xor    DWORD PTR [ecx+0x1],edi
  415419:	(bad)  
  41541a:	(bad)  
  41541b:	ins    DWORD PTR es:[edi],dx
  41541c:	add    edi,edi
  41541e:	xor    DWORD PTR [ecx-0x3],edi
  415421:	push   DWORD PTR [ecx]
  415423:	jno    0x415426
  415425:	add    BYTE PTR [eax],dh
  415427:	jns    0x415426
  415429:	(bad)  
  41542a:	fidiv  WORD PTR [ecx-0x3]
  41542d:	(bad)  
  41542e:	(bad)  
  41542f:	ins    DWORD PTR es:[edi],dx
  415430:	std    
  415431:	(bad)  
  415432:	xor    DWORD PTR [ecx-0x3],esi
  415435:	inc    esi
  415437:	ins    DWORD PTR es:[edi],dx
  415438:	std    
  415439:	push   DWORD PTR [ecx]
  41543b:	ins    DWORD PTR es:[edi],dx
  41543c:	std    
  41543d:	push   DWORD PTR [ecx]
  41543f:	ins    DWORD PTR es:[edi],dx
  415440:	add    DWORD PTR [eax],eax
  415442:	xor    DWORD PTR [ecx+0x1],esi
  415445:	jmp    DWORD PTR [esi-0x61010293]
  41544b:	adc    al,0xe7
  41544d:	add    esi,DWORD PTR [ecx]
  41544f:	adc    al,0xe3
  415451:	add    ecx,DWORD PTR [esi+0x21840714]
  415457:	xchg   esp,eax
  415458:	out    0x83,eax
  41545a:	add    BYTE PTR [eax],al
  41545c:	xor    DWORD PTR [edi+eiz*8+0x7143183],edx
  415463:	test   BYTE PTR [ecx+0x14],al
  415466:	out    0x3,eax
  415468:	inc    ecx
  415469:	adc    al,0x7
  41546b:	add    al,0x31
  41546d:	adc    al,0xc7
  41546f:	add    eax,DWORD PTR [ecx-0x6c]
  415472:	mov    DWORD PTR [ebx+0x3c79431],0x83c79431
  41547c:	and    DWORD PTR [edi+eiz*8-0x186bde7d],edx
  415483:	add    esi,DWORD PTR [ecx]
  415485:	xchg   esp,eax
  415486:	out    0x83,eax
  415488:	xor    DWORD PTR [edi+eiz*8+0x7144103],edx
  41548f:	add    al,0x31
  415491:	adc    al,0x7
  415493:	add    al,0x21
  415495:	xchg   esp,eax
  415496:	out    0x83,eax
  415498:	and    DWORD PTR [edi+eax*1],edx
  41549b:	add    al,0x21
  41549d:	adc    al,0x7
  41549f:	test   BYTE PTR [ecx],dh
  4154a1:	xchg   esp,eax
  4154a2:	out    0x3,eax
  4154a4:	xor    DWORD PTR [edi+eiz*8],edx
  4154a7:	add    esi,DWORD PTR [ecx]
  4154a9:	xchg   esp,eax
  4154aa:	out    0x83,eax
  4154ac:	xor    DWORD PTR [edi+eax*8],edx
  4154af:	add    DWORD PTR [ecx+0x14],0xffffffe7
  4154b3:	add    esp,DWORD PTR [ecx]
  4154b5:	xchg   esp,eax
  4154b6:	mov    DWORD PTR [ebx],0x3c71421
  4154bc:	xor    DWORD PTR [edi+eiz*8+0x31000003],edx
  4154c3:	adc    al,0xe7
  4154c5:	add    DWORD PTR [ecx+0x14],0x0
  4154c9:	leave  
  4154ca:	mov    dl,0x13
  4154cc:	add    cl,ch
  4154ce:	mov    dl,0x23
  4154d0:	sub    cl,0x32
  4154d3:	and    al,0x80
  4154d5:	or     DWORD PTR [ebp+0x32e90013],esi
  4154db:	adc    al,0x0
  4154dd:	or     DWORD PTR [ebp+0x2d090023],esi
  4154e3:	and    al,0x80
  4154e5:	jmp    0x941791c
  4154ea:	lods   eax,DWORD PTR ds:[esi]
  4154eb:	adc    eax,DWORD PTR [eax-0x7fdbcd17]
  4154f1:	jmp    0xe9c178a8
  4154f6:	mov    dl,0x13
  4154f8:	add    cl,ch
  4154fa:	xor    ah,BYTE PTR [eax+eax*4]
  4154fd:	jmp    0xc9c168b4
  415502:	xor    dl,BYTE PTR [eax+eax*1]
  415505:	leave  
  415506:	mov    dl,0x24
  415508:	or     cl,0xb2
  41550b:	and    al,0x0
  41550d:	leave  
  41550e:	xor    dl,BYTE PTR [eax+eax*1]
  415511:	jmp    0xe94169c8
  415516:	xor    dl,BYTE PTR [eax+eax*4]
  415519:	or     DWORD PTR [ebp-0x4d16ffec],ebp
  41551f:	and    al,0x80
  415521:	jmp    0x9417958
  415526:	add    BYTE PTR [eax],al
  415528:	xor    eax,0x2d098014
  41552d:	and    al,0x0
  41552f:	or     DWORD PTR [ebp+0x32c98014],esi
  415535:	adc    al,0x80
  415537:	leave  
  415538:	xor    ah,BYTE PTR [eax+eax*1]
  41553b:	jmp    0xe94179f2
  415540:	xor    dl,BYTE PTR [eax+eax*1]
  415543:	add    al,cl
  415545:	xchg   ecx,eax
  415546:	add    BYTE PTR [eax+0x9178],al
  41554c:	cwde   
  41554d:	adc    DWORD PTR [eax],eax
  41554f:	sub    BYTE PTR [eax+0x11],0x10
  415553:	sub    BYTE PTR [eax],0x98
  415556:	adc    BYTE PTR [eax+0x109198],al
  41555c:	nop
  41555d:	adc    eax,DWORD PTR [eax]
  41555f:	add    BYTE PTR [eax-0x77f7fded],cl
  415565:	adc    DWORD PTR [eax],eax
  415567:	add    BYTE PTR [eax+0x11],ah
  41556a:	add    cl,BYTE PTR [eax]
  41556c:	pop    eax
  41556d:	adc    eax,DWORD PTR [eax]
  41556f:	or     BYTE PTR [eax+0x11],cl
  415572:	add    BYTE PTR [eax],al
  415574:	pusha  
  415575:	adc    eax,DWORD PTR [edx]
  415577:	add    BYTE PTR [eax+0x13],bl
  41557a:	add    BYTE PTR [eax],cl
  41557c:	push   eax
  41557d:	adc    DWORD PTR [edx],eax
  41557f:	add    BYTE PTR [eax+0x11],dl
  415582:	add    BYTE PTR [eax],cl
  415584:	inc    eax
  415585:	adc    DWORD PTR [eax],eax
  415587:	or     BYTE PTR [eax],bl
  415589:	adc    DWORD PTR [edx],eax
  41558b:	add    BYTE PTR [eax],al
  41558d:	add    BYTE PTR [eax],dl
  41558f:	adc    eax,DWORD PTR [edx]
  415591:	or     BYTE PTR [eax],dl
  415593:	adc    DWORD PTR [edx],eax
  415595:	add    BYTE PTR [eax],cl
  415597:	adc    DWORD PTR [edx],eax
  415599:	or     BYTE PTR [eax],al
  41559b:	adc    eax,DWORD PTR [eax]
  41559d:	add    BYTE PTR [eax],bl
  41559f:	adc    DWORD PTR [eax],eax
  4155a1:	or     BYTE PTR [eax],dl
  4155a3:	adc    DWORD PTR [eax],eax
  4155a5:	add    BYTE PTR [eax],cl
  4155a7:	adc    eax,DWORD PTR [edx]
  4155a9:	or     al,bl
  4155ab:	adc    al,BYTE PTR [eax]
  4155ad:	add    al,bl
  4155af:	adc    al,BYTE PTR [edx]
  4155b1:	add    al,cl
  4155b3:	adc    BYTE PTR [edx],al
  4155b5:	or     al,ah
  4155b7:	adc    BYTE PTR [edx],al
  4155b9:	or     al,al
  4155bb:	adc    al,BYTE PTR [edx]
  4155bd:	add    BYTE PTR [ecx],dh
  4155bf:	jae    0x4155c0
  4155c1:	jmp    FWORD PTR [ecx]
  4155c3:	imul   edi,edi,0x1
  4155c6:	xor    DWORD PTR [ebx+0x1],ebp
  4155c9:	add    dh,BYTE PTR [ecx]
  4155cb:	cmp    edi,0xffffffff
  4155ce:	cmp    DWORD PTR [ebx+0x1],esi
  4155d1:	add    BYTE PTR [ecx],dh
  4155d3:	jae    0x4155d4
  4155d5:	add    DWORD PTR [ecx],ebp
  4155d7:	imul   edi,edi,0xffffffff
  4155da:	xor    DWORD PTR [ebx+0x1],ebp
  4155dd:	add    BYTE PTR [ecx],bh
  4155df:	imul   edi,edi,0x1
  4155e2:	sub    DWORD PTR [ebx+0x1],ebp
  4155e5:	add    BYTE PTR [ecx],ch
  4155e7:	add    DWORD PTR [ecx],0x2
  4155ea:	xor    DWORD PTR [ebx+0x6b31ffff],eax
  4155f0:	add    DWORD PTR [edx],eax
  4155f2:	add    BYTE PTR [eax],al
  4155f4:	xor    DWORD PTR [ebx-0x1],ebp
  4155f7:	add    DWORD PTR [ecx],ebp
  4155f9:	imul   edi,edi,0xffffffff
  4155fc:	cmp    DWORD PTR [ebx+0x1],ebp
  4155ff:	add    BYTE PTR [ecx],dh
  415601:	imul   edi,edi,0xffffffff
  415604:	xor    DWORD PTR [ebx+0x1],esi
  415607:	add    dh,BYTE PTR [ecx]
  415609:	cmp    edi,0x1
  41560c:	cmp    DWORD PTR [ebp-0x1],ebp
  41560f:	(bad)  
  415610:	cmp    DWORD PTR [ebp+0x1],esi
  415613:	add    BYTE PTR [ecx],ch
  415615:	ins    DWORD PTR es:[edi],dx
  415616:	(bad)  
  415617:	push   DWORD PTR [ecx]
  415619:	ins    DWORD PTR es:[edi],dx
  41561a:	add    DWORD PTR [eax],eax
  41561c:	xor    DWORD PTR [ebp+0x75390201],eax
  415622:	(bad)  
  415623:	jmp    FWORD PTR [ecx]
  415625:	ins    DWORD PTR es:[edi],dx
  415626:	add    DWORD PTR [edx],eax
  415628:	xor    DWORD PTR [ebp+0x1],ebp
  41562b:	add    BYTE PTR [ecx],bh
  41562d:	test   edi,edi
  41562f:	add    DWORD PTR [ecx],edi
  415631:	jne    0x415634
  415633:	add    BYTE PTR [ecx],dh
  415635:	jne    0x415636
  415637:	add    DWORD PTR [ecx],esi
  415639:	adc    al,0xe7
  41563b:	add    DWORD PTR [ebx],esi
  41563d:	adc    al,0xef
  41563f:	add    esi,DWORD PTR [ecx]
  415641:	or     al,0xe7
  415643:	add    esi,DWORD PTR [ebx]
  415645:	or     al,0xdf
  415647:	add    DWORD PTR [ecx],esi
  415649:	or     al,0xef
  41564b:	add    DWORD PTR [ecx],esi
  41564d:	adc    al,0xe7
  41564f:	add    esi,DWORD PTR [ebx]
  415651:	or     al,0xdf
  415653:	add    DWORD PTR [ebx],esi
  415655:	adc    al,0xdf
  415657:	add    eax,DWORD PTR [eax]
  415659:	add    BYTE PTR [ecx],dh
  41565b:	adc    al,0xef
  41565d:	add    esi,DWORD PTR [ebx]
  41565f:	or     al,0xe7
  415661:	add    eax,0xe3e81433
  415666:	(bad)  
  415667:	adc    ebp,DWORD PTR [eax-0x1c]
  41566a:	jbe    0x4156e7
  41566c:	push   0x677b6ee4
  415671:	add    al,0x31
  415673:	adc    al,0x67
  415675:	in     al,0xde
  415677:	adc    ebp,DWORD PTR [eax+0x4]
  41567a:	mov    cl,0x14
  41567c:	call   0xe8560784
  415681:	jecxz  0x4156c9
  415683:	jnp    0x41566c
  415685:	add    esi,DWORD PTR [ecx]
  415687:	adc    al,0xe7
  415689:	jecxz  0x415641
  41568b:	adc    esp,edi
  41568d:	jecxz  0x41563d
  41568f:	adc    al,0x68
  415691:	in     al,0xa6
  415693:	adc    al,0x68
  415695:	add    al,0x31
  415697:	adc    al,0xe7
  415699:	add    esi,DWORD PTR [ecx]
  41569b:	adc    al,0x67
  41569d:	add    al,0xb1
  41569f:	adc    ebp,eax
  4156a1:	add    esi,DWORD PTR [ecx+0x3103e813]
  4156a7:	adc    al,0xe7
  4156a9:	jecxz  0x4156a1
  4156ab:	jp     0x415694
  4156ad:	add    esi,DWORD PTR [ecx+0x66e3e813]
  4156b3:	adc    al,0x0
  4156b5:	imul   esi,DWORD PTR ds:0x32e90014,0xe80094
  4156bf:	add    dl,dl
  4156c1:	jp     0x4156c0
  4156c3:	imul   ecx,ebp,0x3568fd7a
  4156c9:	xchg   esp,eax
  4156ca:	add    al,ch
  4156cc:	xor    dl,BYTE PTR [eax+eax*1]
  4156cf:	imul   edx,DWORD PTR [ebp+0x2d69fd7a],0x92e90094
  4156d9:	jp     0x4156d8
  4156db:	imul   ecx,DWORD PTR [ebp-0x6d980006],0x3267fffa
  4156e5:	adc    al,0x0
  4156e7:	imul   esi,DWORD PTR [edx],0x32e80094
  4156ed:	xchg   esp,eax
  4156ee:	add    cl,ch
  4156f0:	push   edx
  4156f1:	cli    
  4156f2:	jmp    DWORD PTR [edi+0x52]
  4156f5:	cli    
  4156f6:	jmp    DWORD PTR [edi+0x32]
  4156f9:	adc    al,0x0
  4156fb:	jmp    0xe9416b32
  415700:	xor    dl,BYTE PTR [eax+eax*1]
  415703:	jmp    0x6941515a
  415708:	push   edx
  415709:	jp     0x415708
  41570b:	imul   esi,DWORD PTR [edx],0x32680094
  415711:	xchg   esp,eax
  415712:	add    al,ch
  415714:	xor    dl,BYTE PTR [eax+eax*1]
  415717:	call   0x6841512e
  41571c:	adc    bh,BYTE PTR [edx-0x3]
  41571f:	push   0x69fd7a12
  415724:	add    BYTE PTR [eax],al
  415726:	xor    dl,BYTE PTR [eax+eax*1]
  415729:	push   0x67fffa12
  41572e:	xor    dl,BYTE PTR [eax+eax*1]
  415731:	add    cl,bl
  415733:	adc    eax,0x75d80000
  415738:	std    
  415739:	dec    ecx
  41573b:	adc    eax,0x75c90080
  415740:	std    
  415741:	call   FWORD PTR [eax+0x75]
  415744:	jge    0x415746
  415746:	pop    ecx
  415747:	adc    eax,0x75c90080
  41574c:	std    
  41574d:	dec    DWORD PTR [eax+0x75]
  415750:	std    
  415751:	call   FWORD PTR [eax-0x66ff7feb]
  415757:	jne    0x4157d6
  415759:	add    BYTE PTR [eax],cl
  41575b:	adc    eax,0x15880000
  415760:	add    BYTE PTR [eax],0x98
  415763:	jne    0x415762
  415765:	call   FWORD PTR [eax]
  415767:	jo     0x4157e6
  415769:	add    BYTE PTR [eax-0x77ffffea],cl
  41576f:	push   ss
  415770:	or     BYTE PTR [edx],al
  415772:	pop    eax
  415773:	adc    eax,0x16580208
  415778:	add    BYTE PTR [edx+0x48],al
  41577b:	adc    eax,0x16480008
  415780:	add    BYTE PTR [eax],al
  415782:	pop    eax
  415783:	adc    eax,0x15584000
  415788:	or     BYTE PTR [edx],al
  41578a:	add    BYTE PTR [eax],al
  41578c:	dec    eax
  41578d:	push   ss
  41578e:	or     BYTE PTR [eax+0x48],al
  415791:	adc    eax,0x16180008
  415796:	add    BYTE PTR [edx],al
  415798:	sbb    BYTE PTR [esi],dl
  41579a:	or     BYTE PTR [eax+0x8],al
  41579d:	push   ss
  41579e:	add    BYTE PTR [edx+0x8],al
  4157a1:	adc    eax,0x16184208
  4157a6:	or     BYTE PTR [eax],al
  4157a8:	sbb    BYTE PTR ds:0x6b314000,dl
  4157ae:	add    DWORD PTR [eax],eax
  4157b0:	xor    ebp,DWORD PTR [ebx+0x1]
  4157b3:	or     BYTE PTR [ecx+0x6b],dh
  4157b6:	add    DWORD PTR [eax],ecx
  4157b8:	jno    0x415825
  4157ba:	add    DWORD PTR [eax],eax
  4157bc:	xor    DWORD PTR [ebx+0x2],ebp
  4157bf:	add    BYTE PTR [ecx+0x6b],dh
  4157c2:	add    cl,BYTE PTR [eax]
  4157c4:	jae    0x415831
  4157c6:	add    cl,BYTE PTR [eax]
  4157c8:	jae    0x415835
  4157ca:	add    al,BYTE PTR [eax]
  4157cc:	xor    ebp,DWORD PTR [ebx+0x1]
  4157cf:	or     BYTE PTR [ebx+0x6b],dh
  4157d2:	add    al,BYTE PTR [eax]
  4157d4:	icebp  
  4157d5:	push   0x1
  4157d7:	add    BYTE PTR [ecx],dh
  4157d9:	imul   eax,DWORD PTR [ecx],0x0
  4157dc:	repz push 0x2
  4157df:	or     BYTE PTR [ebx],dh
  4157e1:	imul   eax,DWORD PTR [ecx],0x0
  4157e4:	xor    ebp,DWORD PTR [ebx+0x1]
  4157e7:	add    bl,dh
  4157e9:	push   0x2
  4157eb:	or     BYTE PTR [ecx],dh
  4157ed:	imul   eax,DWORD PTR [ecx],0x8
  4157f0:	add    BYTE PTR [eax],al
  4157f2:	xor    DWORD PTR [ebx+0x2],ebp
  4157f5:	add    bl,dh
  4157f7:	push   0x2
  4157f9:	add    BYTE PTR [ecx],dh
  4157fb:	imul   eax,DWORD PTR [ecx],0x0
  4157fe:	xor    ebp,DWORD PTR [ebx+0x1]
  415801:	add    cl,dh
  415803:	push   0x1
  415805:	or     BYTE PTR [ebx],dh
  415807:	imul   eax,DWORD PTR [edx],0x0
  41580a:	repz push 0x2
  41580d:	or     cl,dh
  41580f:	push   0x2
  415811:	add    BYTE PTR [ebx],dh
  415813:	imul   eax,DWORD PTR [ecx],0x0
  415816:	jno    0x415885
  415818:	add    DWORD PTR [eax],ecx
  41581a:	jae    0x415889
  41581c:	add    cl,BYTE PTR [eax]
  41581e:	xor    ebp,DWORD PTR [ebp+0x2]
  415821:	or     BYTE PTR [ecx+0x6d],dh
  415824:	add    al,BYTE PTR [eax]
  415826:	xor    DWORD PTR [edi+eiz*8],edx
  415829:	add    esi,DWORD PTR [ecx]
  41582b:	adc    ah,bh
  41582d:	add    ebp,DWORD PTR [ecx]
  41582f:	shl    dh,cl
  415831:	add    ch,BYTE PTR [ecx]
  415833:	shl    dh,cl
  415835:	add    bh,BYTE PTR [ecx]
  415837:	adc    al,0xe7
  415839:	add    esi,DWORD PTR [ecx]
  41583b:	shl    dh,cl
  41583d:	add    ch,BYTE PTR [ecx]
  41583f:	shl    dh,cl
  415841:	add    ebp,DWORD PTR [ecx]
  415843:	adc    ah,bh
  415845:	add    esi,DWORD PTR [ecx]
  415847:	adc    al,0xe7
  415849:	add    edi,DWORD PTR [ecx]
  41584b:	aam    0xe6
  41584d:	add    esi,DWORD PTR [ecx]
  41584f:	shl    dh,cl
  415851:	add    ch,BYTE PTR [ecx]
  415853:	adc    al,0xe7
  415855:	add    al,BYTE PTR [eax]
  415857:	add    BYTE PTR [ecx],dh
  415859:	adc    ah,bh
  41585b:	add    dh,BYTE PTR [ecx]
  41585d:	aam    0xe6
  41585f:	add    ebp,DWORD PTR [ecx]
  415861:	adc    al,0xe7
  415863:	add    esi,DWORD PTR [ecx]
  415865:	adc    al,0xe7
  415867:	add    edi,DWORD PTR [ecx]
  415869:	aam    0xe6
  41586b:	add    al,0x39
  41586d:	adc    ah,bh
  41586f:	add    al,0x31
  415871:	aam    0xf6
  415873:	add    esi,DWORD PTR [ecx]
  415875:	xor    al,0xe7
  415877:	add    esi,ecx
  415879:	xor    esp,edi
  41587b:	inc    ebx
  41587c:	xor    DWORD PTR [edi+edx*8],edx
  41587f:	inc    ebx
  415880:	icebp  
  415881:	xor    esp,edi
  415883:	add    esi,ecx
  415885:	xor    edx,edi
  415887:	add    esi,DWORD PTR [ecx]
  415889:	adc    al,0xf7
  41588b:	inc    ebx
  41588c:	icebp  
  41588d:	xor    esp,edi
  41588f:	add    esi,ecx
  415891:	adc    esp,edi
  415893:	inc    ebx
  415894:	xor    DWORD PTR [edi+esi*8],esi
  415897:	inc    ebx
  415898:	jno    0x4158ae
  41589a:	out    0x3,eax
  41589c:	jno    0x4158b2
  41589e:	xlat   BYTE PTR ds:[ebx]
  41589f:	add    esi,DWORD PTR [ecx]
  4158a1:	xor    al,0x0
  4158a3:	fnstenv [edx]
  4158a5:	aam    0xff
  4158a7:	call   0xe9616d1e
  4158ac:	xor    dl,BYTE PTR [eax+eiz*1]
  4158af:	stc    
  4158b0:	jb     0x4158c6
  4158b2:	add    cl,ch
  4158b4:	xor    dl,BYTE PTR [eax+eax*1]
  4158b7:	stc    
  4158b8:	xor    dl,ah
  4158ba:	(bad)  
  4158bb:	fadd   DWORD PTR [eax]
  4158bd:	add    BYTE PTR [edx+0x14],dh
  4158c0:	and    cl,ch
  4158c2:	jb     0x4158d8
  4158c4:	add    cl,ch
  4158c6:	jb     0x41589c
  4158c8:	(bad)  
  4158c9:	fdiv   DWORD PTR [edx+0x14]
  4158cc:	and    cl,bh
  4158ce:	xor    dl,BYTE PTR [eax+eax*1]
  4158d1:	stc    
  4158d2:	xor    dl,ah
  4158d4:	pop    ds
  4158d5:	stc    
  4158d6:	xor    dl,ah
  4158d8:	pop    ds
  4158d9:	jmp    0xd9416d10
  4158de:	repnz sar edi,cl
  4158e1:	call   0xd9612cd8
  4158e6:	repnz adc eax,DWORD PTR [eax]
  4158e9:	jmp    0xe9412ce0
  4158ee:	repnz rcr DWORD PTR [edi],cl
  4158f1:	jmp    0xe9616d28
  4158f6:	repnz adc esp,DWORD PTR [eax]
  4158f9:	stc    
  4158fa:	xor    dl,BYTE PTR [eax+eax*1]
  4158fd:	fnstenv [edx]
  4158ff:	aam    0x1f
  415901:	jmp    0xd9412cf8
  415906:	repnz rcr DWORD PTR [edi],cl
  415909:	jmp    0xf9412d40
  41590e:	repnz adc eax,DWORD PTR [eax]
  415911:	stc    
  415912:	xor    dl,BYTE PTR [eax+eiz*1]
  415915:	jmp    0xe9412d4c
  41591a:	jb     0x415930
  41591c:	and    BYTE PTR [eax],al
  41591e:	sbb    BYTE PTR [edx],dl
  415920:	add    BYTE PTR [eax],ah
  415922:	add    BYTE PTR [eax],al
  415924:	clc    
  415925:	sar    edi,1
  415927:	(bad)  
  415928:	clc    
  415929:	adc    DWORD PTR [eax],eax
  41592b:	and    al,ch
  41592d:	sar    DWORD PTR [edi],1
  41592f:	and    BYTE PTR [eax],bl
  415931:	sar    BYTE PTR [edi],cl
  415933:	add    BYTE PTR [eax],cl
  415935:	adc    al,BYTE PTR [eax+0x20]
  415938:	clc    
  415939:	sar    DWORD PTR [edi],1
  41593b:	add    al,bl
  41593d:	sar    DWORD PTR [edi],1
  41593f:	and    al,bl
  415941:	adc    DWORD PTR [eax],eax
  415943:	add    al,bh
  415945:	adc    DWORD PTR [eax+0x20],eax
  415948:	clc    
  415949:	adc    DWORD PTR [eax],eax
  41594b:	add    al,bl
  41594d:	sar    edi,1
  41594f:	(bad)  
  415950:	fcom   DWORD PTR [ecx]
  415952:	inc    eax
  415953:	and    BYTE PTR [eax-0x37ffc02f],bh
  415959:	sar    edi,1
  41595b:	jmp    FWORD PTR [eax-0x77ffbfef]
  415961:	sar    edi,1
  415963:	pop    ds
  415964:	mov    BYTE PTR [ecx],dl
  415966:	add    BYTE PTR [eax],al
  415968:	mov    cl,dl
  41596a:	aas    
  41596b:	and    BYTE PTR [eax-0x77dfffef],bl
  415971:	adc    DWORD PTR [eax+0x0],eax
  415974:	js     0x415947
  415976:	call   FWORD PTR [edi]
  415978:	mov    BYTE PTR [ecx],dl
  41597a:	and    BYTE PTR [eax],al
  41597c:	pop    edx
  41597d:	adc    DWORD PTR [eax],esp
  41597f:	add    al,0x5a
  415981:	jns    0x415980
  415983:	add    ecx,DWORD PTR [eax+0x11]
  415986:	add    BYTE PTR [eax],al
  415988:	add    BYTE PTR [eax],al
  41598a:	dec    eax
  41598b:	jns    0x41598a
  41598d:	call   FWORD PTR [edx+0x79]
  415990:	std    
  415991:	add    ebx,DWORD PTR [edx+0x79]
  415994:	sbb    eax,0x1d794800
  415999:	add    al,0x31
  41599b:	imul   edi,ecx,0x16b351f
  4159a1:	and    BYTE PTR [ecx],dh
  4159a3:	imul   eax,DWORD PTR [ecx],0x0
  4159a6:	xor    DWORD PTR [ecx+0x1],ebp
  4159a9:	add    BYTE PTR ds:0x31000169,ch
  4159af:	imul   eax,DWORD PTR [ecx],0x0
  4159b2:	sub    eax,0x35200169
  4159b7:	imul   edi,ecx,0xf96af6ff
  4159bd:	push   DWORD PTR [edx]
  4159bf:	imul   edi,ecx,0x169311f
  4159c5:	and    BYTE PTR [ecx],dh
  4159c7:	imul   edi,ecx,0xffffffff
  4159ca:	xor    ch,BYTE PTR [ecx+0x1]
  4159cd:	add    BYTE PTR ds:0x2d20016b,dh
  4159d3:	imul   edi,ecx,0x1f
  4159d6:	xor    eax,0x31200169
  4159db:	imul   eax,DWORD PTR [ecx],0x20
  4159de:	xor    eax,0xa6fff96b
  4159e3:	push   0x689efff9
  4159e8:	stc    
  4159e9:	pop    ds
  4159ea:	sub    eax,0x1ff96b
  4159ef:	add    BYTE PTR [ecx],dh
  4159f1:	imul   eax,DWORD PTR [ecx],0x16b3100
  4159f7:	add    BYTE PTR ds:0x311ff96b,dh
  4159fd:	imul   eax,DWORD PTR [ecx],0x0
  415a00:	xor    eax,0x311ff96b
  415a05:	imul   eax,DWORD PTR [ecx],0x20
  415a08:	xor    DWORD PTR [ecx-0x7],ebp
  415a0b:	push   DWORD PTR [edx]
  415a0d:	imul   edi,ecx,0x16932ff
  415a13:	and    BYTE PTR ds:0x1103e914,ch
  415a19:	adc    cl,ch
  415a1b:	add    esi,DWORD PTR [ecx]
  415a1d:	adc    al,0xe9
  415a1f:	add    edx,DWORD PTR [ecx+0x14]
  415a22:	out    0x3,eax
  415a24:	xor    DWORD PTR [eax],ebx
  415a26:	out    0xfb,eax
  415a28:	push   ds
  415a29:	sbb    bh,ah
  415a2b:	add    edx,DWORD PTR [ecx+0x14]
  415a2e:	out    0xfb,eax
  415a30:	cs sbb cl,ch
  415a33:	sti    
  415a34:	push   es
  415a35:	je     0x415a20
  415a37:	sti    
  415a38:	push   ds
  415a39:	adc    al,0xe7
  415a3b:	sti    
  415a3c:	push   ss
  415a3d:	sbb    cl,ch
  415a3f:	sti    
  415a40:	out    dx,al
  415a41:	jae    0x415a2c
  415a43:	add    esi,DWORD PTR [ecx]
  415a45:	sbb    cl,ch
  415a47:	sti    
  415a48:	ds sbb bh,ah
  415a4b:	add    edx,DWORD PTR [ecx]
  415a4d:	sbb    bh,ah
  415a4f:	sti    
  415a50:	cs adc al,0xe7
  415a53:	add    eax,DWORD PTR [eax]
  415a55:	add    BYTE PTR [ecx],dh
  415a57:	adc    al,0xe9
  415a59:	add    esi,DWORD PTR [ecx]
  415a5b:	adc    al,0xe9
  415a5d:	sti    
  415a5e:	push   ss
  415a5f:	sbb    bh,ah
  415a61:	add    esi,DWORD PTR [ecx]
  415a63:	adc    al,0xe9
  415a65:	sti    
  415a66:	inc    esi
  415a67:	adc    al,0xe7
  415a69:	add    edx,DWORD PTR [ecx+0x18]
  415a6c:	out    0xfb,eax
  415a6e:	xchg   esi,eax
  415a6f:	jae    0x415a5a
  415a71:	add    esi,DWORD PTR [ecx]
  415a73:	sbb    bh,ah
  415a75:	sti    
  415a76:	xchg   BYTE PTR [edi],dl
  415a78:	out    0xfb,eax
  415a7a:	jle    0x415aef
  415a7c:	jmp    0x2755ab84
  415a81:	hlt    
  415a82:	outs   dx,BYTE PTR ds:[esi]
  415a83:	and    esp,edi
  415a85:	repz data16 jae 0x415a70
  415a89:	add    esi,DWORD PTR ds:0x32f42714
  415a8f:	add    al,0x0
  415a91:	jmp    0x29516ec8
  415a96:	cmp    eax,0x35290d73
  415a9b:	adc    al,0x0
  415a9d:	jmp    0x29516ed4
  415aa2:	xor    eax,0x32e90018
  415aa7:	sbb    BYTE PTR [eax],dl
  415aa9:	sub    DWORD PTR ds:0x22e91017,esp
  415aaf:	pop    ss
  415ab0:	add    cl,ch
  415ab2:	add    dl,BYTE PTR [edi]
  415ab4:	adc    BYTE PTR [ecx],ch
  415ab6:	std    
  415ab7:	push   ss
  415ab8:	add    cl,ch
  415aba:	add    BYTE PTR [eax],al
  415abc:	add    dh,BYTE PTR [ebx-0x3]
  415abf:	test   eax,0xe9001432
  415ac4:	xor    bl,BYTE PTR [eax]
  415ac6:	adc    BYTE PTR [ecx-0x16efebce],ch
  415acc:	loop   0x415b40
  415ace:	or     eax,0xfd72e2a9
  415ad3:	jmp    0xa941719a
  415ad8:	xor    bl,BYTE PTR [eax]
  415ada:	add    BYTE PTR [ecx-0x16efe7ce],ch
  415ae0:	ret    0x1016
  415ae3:	test   eax,0xe9fd72a2
  415ae8:	xor    dl,BYTE PTR [eax+eax*1]
  415aeb:	jmp    0xa9416f22
  415af0:	xor    bl,BYTE PTR [eax]
  415af2:	adc    BYTE PTR [ecx-0x16efebce],ch
  415af8:	xor    BYTE PTR [edx+0xd],0x29
  415afc:	test   DWORD PTR [esi],edx
  415afe:	add    cl,ch
  415b00:	xor    bl,BYTE PTR [eax]
  415b02:	add    BYTE PTR [ecx],ch
  415b04:	gs push ss
  415b06:	add    cl,ch
  415b08:	xor    bl,BYTE PTR [eax]
  415b0a:	add    BYTE PTR [eax],al
  415b0c:	dec    eax
  415b0d:	add    WORD PTR [eax],dx
  415b10:	dec    eax
  415b11:	data16 std 
  415b13:	call   FWORD PTR [eax]
  415b15:	sbb    BYTE PTR [eax],al
  415b17:	add    BYTE PTR [eax],bl
  415b19:	sbb    BYTE PTR [eax+edx*1],al
  415b1c:	dec    eax
  415b1d:	data16 std 
  415b1f:	inc    DWORD PTR [eax]
  415b21:	add    BYTE PTR [eax],cl
  415b23:	push   0x66180001
  415b28:	std    
  415b29:	addps  xmm3,XMMWORD PTR [eax]
  415b2c:	add    BYTE PTR [eax],al
  415b2e:	dec    eax
  415b2f:	sbb    BYTE PTR [eax],al
  415b31:	adc    BYTE PTR [eax],cl
  415b33:	push   ss
  415b34:	add    al,0x10
  415b36:	pop    eax
  415b37:	sbb    BYTE PTR [eax+edx*1],al
  415b3a:	sbb    BYTE PTR [esi],dl
  415b3c:	add    BYTE PTR [eax],dl
  415b3e:	or     BYTE PTR [esi],dl
  415b40:	add    al,0x0
  415b42:	enter  0xfd65,0xf
  415b46:	fcom   DWORD PTR ds:0x65980000
  415b4c:	add    DWORD PTR [eax],edx
  415b4e:	mov    BYTE PTR ds:0x15880004,dl
  415b54:	add    BYTE PTR [eax],dl
  415b56:	fcom   DWORD PTR ds:0x65d81004
  415b5c:	std    
  415b5d:	js     0xc85158c8
  415b63:	adc    eax,0x65d80000
  415b68:	add    DWORD PTR [eax],edx
  415b6a:	cwde   
  415b6b:	add    DWORD PTR gs:[eax],eax
  415b6e:	mov    BYTE PTR [ebp+0x1],ah
  415b71:	add    al,cl
  415b73:	gs std 
  415b75:	(bad)  
  415b76:	fsub   DWORD PTR [ebp-0x3]
  415b79:	(bad)  
  415b7a:	fcom   DWORD PTR ds:0x15880004
  415b80:	add    BYTE PTR [eax],dl
  415b82:	mov    BYTE PTR [ebp+0x1],ah
  415b85:	adc    BYTE PTR [eax],al
  415b87:	add    BYTE PTR [ecx],dh
  415b89:	push   ebx
  415b8a:	das    
  415b8b:	jmp    DWORD PTR [esi+0x7b]
  415b8e:	add    DWORD PTR [eax],eax
  415b90:	xor    DWORD PTR [ebx+0x1],edi
  415b93:	add    BYTE PTR [ecx],dh
  415b95:	repz sub edi,edi
  415b98:	dec    esi
  415b99:	das    
  415b9a:	sub    edi,edi
  415b9c:	inc    esi
  415b9d:	jmp    FWORD PTR [ebx]
  415b9f:	(bad)  
  415ba0:	ds jnp 0x415ba4
  415ba3:	add    BYTE PTR [ecx],dh
  415ba5:	jnp    0x415ba8
  415ba7:	add    BYTE PTR [ecx],dh
  415ba9:	gs sub bh,bh
  415bac:	xor    ebp,DWORD PTR es:[esi]
  415baf:	call   FWORD PTR [esi]
  415bb1:	mov    bl,0x2c
  415bb3:	call   DWORD PTR [esi]
  415bb5:	jnp    0x415bb8
  415bb7:	add    BYTE PTR [ecx],dh
  415bb9:	jnp    0x415bbc
  415bbb:	add    BYTE PTR [ecx],dh
  415bbd:	stos   DWORD PTR es:[edi],eax
  415bbe:	sub    bh,bh
  415bc0:	(bad)  
  415bc1:	pop    esi
  415bc2:	sub    edi,edi
  415bc4:	neg    dl
  415bc6:	sub    edi,edi
  415bc8:	out    dx,al
  415bc9:	jp     0x415bcc
  415bcb:	add    BYTE PTR [ecx],dh
  415bcd:	jnp    0x415bd0
  415bcf:	add    BYTE PTR [ecx],dh
  415bd1:	fbld   TBYTE PTR [esi]
  415bd3:	call   esi
  415bd5:	pop    esi
  415bd6:	sub    edi,edi
  415bd8:	into   
  415bd9:	jbe    0x415c05
  415bdb:	inc    esi
  415bdd:	jp     0x415be0
  415bdf:	add    BYTE PTR [ecx],dh
  415be1:	jnp    0x415be4
  415be3:	add    BYTE PTR [ecx],dh
  415be5:	jge    0x415c08
  415be7:	jmp    FWORD PTR [esi+0xff2de2]
  415bed:	add    BYTE PTR [esi-0x6100d59a],ah
  415bf3:	jp     0x415bf6
  415bf5:	add    BYTE PTR [ecx],dh
  415bf7:	jnp    0x415bfa
  415bf9:	add    BYTE PTR [ecx],dh
  415bfb:	mov    ds:0xda86ff21,eax
  415c00:	sub    eax,0x7137eff
  415c05:	sub    esi,DWORD PTR [esi+0x70]
  415c08:	out    0x3,eax
  415c0a:	xor    DWORD PTR [edi+eiz*8],edx
  415c0d:	add    esi,DWORD PTR [ecx]
  415c0f:	adc    al,0x61
  415c11:	and    ebx,DWORD PTR [esi+0x70]
  415c14:	xchg   ebx,eax
  415c15:	sub    eax,0x2afb7056
  415c1a:	dec    esi
  415c1b:	jo     0x415c04
  415c1d:	add    esi,DWORD PTR [ecx]
  415c1f:	adc    al,0xe7
  415c21:	add    esi,DWORD PTR [ecx]
  415c23:	adc    al,0xf1
  415c25:	and    dh,BYTE PTR [esi]
  415c27:	jo     0x415bd8
  415c29:	sub    eax,0x2aff702e
  415c2e:	es jo  0x415c18
  415c31:	add    esi,DWORD PTR [ecx]
  415c33:	adc    al,0xe7
  415c35:	add    esi,DWORD PTR [ecx]
  415c37:	adc    al,0xbd
  415c39:	and    cl,BYTE PTR [esi]
  415c3b:	jo     0x415cb8
  415c3d:	sub    eax,0x3e77006
  415c42:	xor    DWORD PTR [edi+eiz*8],edx
  415c45:	add    esi,DWORD PTR [ecx]
  415c47:	adc    al,0xe7
  415c49:	add    esi,DWORD PTR [ecx]
  415c4b:	adc    al,0xe7
  415c4d:	add    esi,DWORD PTR [ecx]
  415c4f:	adc    al,0xe7
  415c51:	add    eax,DWORD PTR [eax]
  415c53:	add    BYTE PTR [ecx],dh
  415c55:	adc    al,0xe7
  415c57:	sub    al,0xd6
  415c59:	outs   dx,DWORD PTR ds:[esi]
  415c5a:	in     eax,dx
  415c5b:	sub    al,0xce
  415c5d:	outs   dx,DWORD PTR ds:[esi]
  415c5e:	shr    DWORD PTR [esi+eax*8],1
  415c61:	outs   dx,DWORD PTR ds:[esi]
  415c62:	jmp    FWORD PTR [esi+edi*4]
  415c65:	outs   dx,DWORD PTR ds:[esi]
  415c66:	fld    TBYTE PTR [esi+esi*4]
  415c69:	outs   dx,DWORD PTR ds:[esi]
  415c6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c6b:	sub    al,0xae
  415c6d:	outs   dx,DWORD PTR ds:[esi]
  415c6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c6f:	sub    al,0xa6
  415c71:	outs   dx,DWORD PTR ds:[esi]
  415c72:	lods   eax,DWORD PTR ds:[esi]
  415c73:	sub    al,0x9e
  415c75:	outs   dx,DWORD PTR ds:[esi]
  415c76:	xchg   ecx,eax
  415c77:	sub    al,0x96
  415c79:	outs   dx,DWORD PTR ds:[esi]
  415c7a:	jg     0x415ca8
  415c7c:	mov    gs,WORD PTR [edi+0x0]
  415c7f:	ins    DWORD PTR es:[edi],dx
  415c80:	push   ebp
  415c81:	outs   dx,DWORD PTR ds:[esi]
  415c82:	std    
  415c83:	pop    ecx
  415c84:	dec    ebp
  415c85:	outs   dx,DWORD PTR ds:[esi]
  415c86:	std    
  415c87:	(bad)
  415c8b:	stos   DWORD PTR es:[edi],eax
  415c8c:	sbb    ch,BYTE PTR [edi-0x3]
  415c8f:	mov    ecx,0xc7fd6f1a
  415c94:	or     ch,BYTE PTR [edi-0x3]
  415c97:	mov    edi,0xf1fd6f0a
  415c9c:	push   ss
  415c9d:	outs   dx,DWORD PTR ds:[esi]
  415c9e:	std    
  415c9f:	ror    DWORD PTR [esi],1
  415ca1:	outs   dx,DWORD PTR ds:[esi]
  415ca2:	std    
  415ca3:	add    ecx,DWORD PTR [ecx]
  415ca5:	outs   dx,DWORD PTR ds:[esi]
  415ca6:	std    
  415ca7:	jecxz  0x415cb7
  415ca9:	outs   dx,DWORD PTR ds:[esi]
  415caa:	std    
  415cab:	das    
  415cac:	pop    ecx
  415cad:	outs   dx,DWORD PTR ds:[esi]
  415cae:	std    
  415caf:	xor    eax,0x19fd6f59
  415cb4:	dec    ecx
  415cb5:	outs   dx,DWORD PTR ds:[esi]
  415cb6:	std    
  415cb7:	outs   dx,DWORD PTR ds:[esi]
  415cb8:	add    BYTE PTR [eax],al
  415cba:	dec    ecx
  415cbb:	outs   dx,DWORD PTR ds:[esi]
  415cbc:	std    
  415cbd:	popa   
  415cbe:	pop    ecx
  415cbf:	outs   dx,DWORD PTR ds:[esi]
  415cc0:	std    
  415cc1:	dec    ebp
  415cc2:	pop    ecx
  415cc3:	outs   dx,DWORD PTR ds:[esi]
  415cc4:	std    
  415cc5:	xor    eax,0x29fd6f49
  415cca:	dec    ecx
  415ccb:	outs   dx,DWORD PTR ds:[esi]
  415ccc:	std    
  415ccd:	xor    eax,0x4dfd6f19
  415cd2:	sbb    DWORD PTR [edi-0x3],ebp
  415cd5:	push   edi
  415cd6:	or     DWORD PTR [edi-0x3],ebp
  415cd9:	out    dx,eax
  415cda:	or     DWORD PTR [edi-0x3],ebp
  415cdd:	fistp  WORD PTR [ecx]
  415cdf:	outs   dx,DWORD PTR ds:[esi]
  415ce0:	std    
  415ce1:	repz sbb DWORD PTR [edi-0x3],ebp
  415ce5:	fwait
  415ce6:	or     DWORD PTR [edi-0x3],ebp
  415ce9:	(bad)  
  415cea:	or     DWORD PTR [edi-0x3],ebp
  415ced:	imul   ebx,DWORD PTR [eax+0x6f],0x6f5871fd
  415cf4:	std    
  415cf5:	pop    ecx
  415cf6:	dec    eax
  415cf7:	outs   dx,DWORD PTR ds:[esi]
  415cf8:	std    
  415cf9:	add    ah,ch
  415cfb:	cmp    al,0xfd
  415cfd:	jmp    FWORD PTR [edx]
  415cff:	cmp    eax,0x3d3afffd
  415d04:	std    
  415d05:	push   DWORD PTR [edx]
  415d07:	cmp    eax,0x3888fffd
  415d0c:	std    
  415d0d:	jmp    FWORD PTR [eax+0x38]
  415d10:	std    
  415d11:	jmp    FWORD PTR [esi+esi*1]
  415d14:	std    
  415d15:	jmp    FWORD PTR [esi]
  415d17:	ss std 
  415d19:	call   FWORD PTR [esi+esi*1]
  415d1c:	std    
  415d1d:	inc    DWORD PTR [eax]
  415d1f:	add    BYTE PTR [esi+esi*1],ch
  415d22:	std    
  415d23:	(bad)  
  415d24:	in     al,dx
  415d25:	xor    eax,0x3602fffd
  415d2a:	std    
  415d2b:	dec    DWORD PTR [eax+0x12]
  415d2e:	add    BYTE PTR [eax],al
  415d30:	jbe    0x415d69
  415d32:	std    
  415d33:	(bad)  
  415d34:	jle    0x415d6d
  415d36:	std    
  415d37:	jmp    esi
  415d39:	aaa    
  415d3a:	std    
  415d3b:	jmp    DWORD PTR [esi-0x790002c9]
  415d41:	aaa    
  415d42:	std    
  415d43:	call   DWORD PTR [edx]
  415d45:	aaa    
  415d46:	std    
  415d47:	dec    DWORD PTR [eax]
  415d49:	adc    al,BYTE PTR [eax]
  415d4b:	add    BYTE PTR [esi*1+0x11d8fffd],ah
  415d52:	add    BYTE PTR [eax],al
  415d54:	cmp    al,0x35
  415d56:	std    
  415d57:	(bad)  
  415d58:	mov    esp,0xe8fffd36
  415d5d:	ss std 
  415d5f:	(bad)  
  415d60:	(bad)  
  415d61:	ss std 
  415d63:	(bad)  
  415d64:	jl     0x415d9c
  415d66:	std    
  415d67:	call   FWORD PTR [esi+esi*1-0x3]
  415d6b:	jmp    FWORD PTR [esi+esi*1+0x35fefffd]
  415d72:	std    
  415d73:	push   DWORD PTR [ecx]
  415d75:	lds    esp,FWORD PTR ds:0x26279eff
  415d7b:	call   DWORD PTR [esi+0x3100017b]
  415d81:	imul   esp,DWORD PTR [ebx],0x860000ff
  415d87:	jnp    0x415d8a
  415d89:	add    BYTE PTR [ecx],dh
  415d8b:	dec    ebp
  415d8c:	and    edi,edi
  415d8e:	jbe    0x415da9
  415d90:	and    al,0xff
  415d92:	outs   dx,BYTE PTR ds:[esi]
  415d93:	jnp    0x415d96
  415d95:	add    BYTE PTR [ecx],dh
  415d97:	aas    
  415d98:	and    al,0xff
  415d9a:	pop    esi
  415d9b:	sub    esp,DWORD PTR [edi+edi*8]
  415d9e:	push   esi
  415d9f:	aaa    
  415da0:	and    al,0xff
  415da2:	dec    esi
  415da3:	ret    
  415da4:	and    edi,edi
  415da6:	inc    esi
  415da7:	sub    DWORD PTR [edi+edi*8],esp
  415daa:	ds cmp eax,0x7b36ff24
  415db0:	add    DWORD PTR [eax],eax
  415db2:	xor    ebp,esp
  415db4:	and    edi,edi
  415db6:	fldenv es:[ebx]
  415db9:	call   FWORD PTR [esi]
  415dbb:	leave  
  415dbc:	and    edi,edi
  415dbe:	push   ss
  415dbf:	xlat   BYTE PTR ds:[ebx]
  415dc0:	and    edi,edi
  415dc2:	push   cs
  415dc3:	mov    ch,0x24
  415dc5:	inc    DWORD PTR [esi]
  415dc7:	(bad)  
  415dc8:	and    al,0xff
  415dca:	(bad)  
  415dcb:	sahf   
  415dcc:	and    al,0xff
  415dce:	neg    ah
  415dd0:	and    edi,edi
  415dd2:	out    dx,al
  415dd3:	fsub   QWORD PTR [ebx]
  415dd5:	jmp    esi
  415dd7:	(bad)  
  415dd8:	and    edi,edi
  415dda:	fidivr WORD PTR [edx+0x1]
  415ddd:	add    BYTE PTR [ecx],dh
  415ddf:	dec    ebp
  415de0:	and    bh,bh
  415de2:	into   
  415de3:	add    BYTE PTR [ecx],ah
  415de5:	inc    esi
  415de7:	jp     0x415dea
  415de9:	add    BYTE PTR [eax],al
  415deb:	add    BYTE PTR [ecx],dh
  415ded:	jnp    0x415e17
  415def:	push   DWORD PTR [esi-0x51d70aed]
  415df5:	ins    BYTE PTR es:[edi],dx
  415df6:	add    DWORD PTR [ecx],ebp
  415df8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415df9:	ins    BYTE PTR es:[edi],dx
  415dfa:	mov    edi,0xd36c9e28
  415dff:	sub    BYTE PTR [esi-0x71d75894],dl
  415e05:	ins    BYTE PTR es:[edi],dx
  415e06:	lods   eax,DWORD PTR ds:[esi]
  415e07:	sub    BYTE PTR [esi+0x7e28956c],al
  415e0d:	ins    BYTE PTR es:[edi],dx
  415e0e:	sub    DWORD PTR [eax],0x295f6c76
  415e14:	outs   dx,BYTE PTR ds:[esi]
  415e15:	ins    BYTE PTR es:[edi],dx
  415e16:	arpl   WORD PTR [eax],bp
  415e18:	data16 ins BYTE PTR es:[edi],dx
  415e1a:	ja     0x415e44
  415e1c:	pop    esi
  415e1d:	ins    BYTE PTR es:[edi],dx
  415e1e:	test   DWORD PTR [eax],ebp
  415e20:	push   esi
  415e21:	ins    BYTE PTR es:[edi],dx
  415e22:	test   eax,0x976c4e28
  415e27:	sub    BYTE PTR [esi+0x6c],al
  415e2a:	int    0x28
  415e2c:	ds ins BYTE PTR es:[edi],dx
  415e2e:	mov    ch,0x28
  415e30:	ss ins BYTE PTR es:[edi],dx
  415e32:	out    dx,eax
  415e33:	daa    
  415e34:	cs ins BYTE PTR es:[edi],dx
  415e36:	jmp    DWORD PTR [edi]
  415e38:	es ins BYTE PTR es:[edi],dx
  415e3a:	shl    DWORD PTR [edi],0x1e
  415e3d:	ins    BYTE PTR es:[edi],dx
  415e3e:	shl    DWORD PTR [edi],1
  415e40:	push   ss
  415e41:	ins    BYTE PTR es:[edi],dx
  415e42:	xor    eax,0x1b6c0e28
  415e47:	sub    BYTE PTR [esi],al
  415e49:	ins    BYTE PTR es:[edi],dx
  415e4a:	mul    DWORD PTR [edi]
  415e4c:	(bad)  
  415e4d:	imul   esp,DWORD PTR [ebp+0x27],0x0
  415e51:	add    dh,dh
  415e53:	imul   edi,DWORD PTR [edi+0x27],0xffffffee
  415e57:	imul   eax,DWORD PTR [ebx-0x649419d9],0x27
  415e5e:	fisubr WORD PTR [ebx+0x27]
  415e61:	daa    
  415e62:	(bad)  
  415e63:	imul   ebx,DWORD PTR [ebx],0x27
  415e66:	into   
  415e67:	imul   eax,DWORD PTR [ebx+0x27],0xffffffc6
  415e6b:	imul   eax,DWORD PTR [eax],0x3f
  415e6e:	push   ss
  415e6f:	imul   edi,ebp,0xffffffe7
  415e72:	packssdw mm7,mm5
  415e75:	pop    es
  415e76:	push   esi
  415e77:	imul   edi,ebp,0xffffffe3
  415e7a:	dec    edi
  415e7b:	imul   edi,ebp,0xffffffbb
  415e7e:	push   edi
  415e7f:	imul   edi,ebp,0xffffffaf
  415e82:	dec    edi
  415e83:	imul   edi,ebp,0x69
  415e86:	push   edi
  415e87:	imul   edi,ebp,0x61
  415e8a:	dec    edi
  415e8b:	imul   edi,ebp,0x39
  415e8e:	push   edi
  415e8f:	imul   edi,ebp,0x2d
  415e92:	dec    edi
  415e93:	imul   edi,ebp,0xffffffbb
  415e96:	push   eax
  415e97:	push   0xfffffffd
  415e99:	retf   
  415e9a:	push   eax
  415e9b:	push   0xfffffffd
  415e9d:	ret    
  415e9e:	push   eax
  415e9f:	push   0xfffffffd
  415ea1:	jmp    0xda3ec8f6
  415ea6:	push   eax
  415ea7:	push   0xfffffffd
  415ea9:	or     eax,0xf7fd6a53
  415eae:	push   eax
  415eaf:	push   0xfffffffd
  415eb1:	sbb    eax,0x45fd6a53
  415eb6:	add    BYTE PTR [eax],al
  415eb8:	adc    ebp,DWORD PTR [edx-0x3]
  415ebb:	or     eax,0x13fd6a13
  415ec0:	adc    ebp,DWORD PTR [edx-0x3]
  415ec3:	jmp    0x4f4172fa
  415ec8:	adc    ebp,DWORD PTR [edx-0x3]
  415ecb:	aas    
  415ecc:	adc    ebp,DWORD PTR [edx-0x3]
  415ecf:	lahf   
  415ed0:	adc    ebp,DWORD PTR [edx-0x3]
  415ed3:	xchg   DWORD PTR [ebx],edx
  415ed5:	push   0xfffffffd
  415ed7:	pop    edi
  415ed8:	shr    DWORD PTR [ecx-0x3],cl
  415edb:	repz shr DWORD PTR [ecx-0x3],cl
  415edf:	jmp    0x5417316
  415ee4:	shr    BYTE PTR [ecx-0x3],cl
  415ee7:	add    al,bl
  415ee9:	push   ss
  415eea:	add    BYTE PTR [eax],al
  415eec:	les    esi,FWORD PTR [ebp-0x2]
  415eef:	call   DWORD PTR [ebp+esi*2+0x75e8fffe]
  415ef6:	(bad)  
  415ef7:	inc    esi
  415ef9:	jne    0x415ef9
  415efb:	inc    esp
  415efd:	jne    0x415efd
  415eff:	call   DWORD PTR [edi+esi*2]
  415f02:	(bad)  
  415f03:	inc    DWORD PTR [edi+esi*2]
  415f06:	(bad)  
  415f07:	jmp    esi
  415f09:	jbe    0x415f09
  415f0b:	inc    DWORD PTR [esi+0x77]
  415f0e:	(bad)  
  415f0f:	call   FWORD PTR [edi+esi*2]
  415f12:	(bad)  
  415f13:	dec    DWORD PTR [eax-0x75ffffea]
  415f19:	jne    0x415f19
  415f1b:	inc    DWORD PTR [eax]
  415f1d:	add    BYTE PTR [eax+0x16],bl
  415f20:	add    BYTE PTR [eax],al
  415f22:	push   esi
  415f23:	jbe    0x415f23
  415f25:	jmp    FWORD PTR [edx]
  415f27:	jo     0x415f27
  415f29:	call   FWORD PTR [eax+0x16]
  415f2c:	add    BYTE PTR [eax],al
  415f2e:	or     al,0x70
  415f30:	(bad)  
  415f31:	call   FWORD PTR [eax]
  415f33:	jo     0x415f33
  415f35:	jmp    DWORD PTR [eax+esi*2]
  415f38:	(bad)  
  415f39:	inc    DWORD PTR [eax+0x70]
  415f3c:	(bad)  
  415f3d:	dec    DWORD PTR [edx+0x70]
  415f40:	(bad)  
  415f41:	inc    DWORD PTR [esi+0x70]
  415f44:	(bad)  
  415f45:	dec    DWORD PTR [eax]
  415f47:	push   ss
  415f48:	add    BYTE PTR [eax],al
  415f4a:	outs   dx,BYTE PTR ds:[esi]
  415f4b:	jne    0x415f4b
  415f4d:	(bad)  
  415f4e:	jp     0x415fc5
  415f50:	(bad)  
  415f51:	(bad)  
  415f52:	cmp    dh,BYTE PTR [ebp-0x2]
  415f55:	inc    DWORD PTR [ebp+esi*2-0x2]
  415f59:	call   FWORD PTR [esi]
  415f5b:	jne    0x415f5b
  415f5d:	call   FWORD PTR [esi*2+0x1f31fffe]
  415f64:	loope  0x415f64
  415f66:	(bad)  
  415f67:	shl    eax,1
  415f69:	dec    dh
  415f6b:	shl    eax,0xfe
  415f6e:	(bad)  
  415f6f:	daa    
  415f70:	loope  0x415f70
  415f72:	mov    esi,0x3100017b
  415f77:	inc    ecx
  415f78:	in     al,0xfe
  415f7a:	scas   al,BYTE PTR es:[edi]
  415f7b:	inc    ebp
  415f7c:	in     al,0xfe
  415f7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f7f:	jnp    0x415f82
  415f81:	add    BYTE PTR [eax],al
  415f83:	add    BYTE PTR [ecx],dh
  415f85:	inc    eax
  415f86:	add    DWORD PTR [ecx+0x23],eax
  415f89:	nop
  415f8a:	in     al,0x73
  415f8c:	adc    al,0xb9
  415f8e:	in     al,dx
  415f8f:	imul   ecx,DWORD PTR [esp+edi*4],0x1
  415f93:	aas    
  415f94:	xor    ecx,DWORD PTR [ebp-0x4ef2a118]
  415f9a:	in     al,dx
  415f9b:	imul   edx,esp,0x7a
  415f9e:	add    DWORD PTR [ecx],esp
  415fa0:	xor    DWORD PTR [esi],edi
  415fa2:	lock ins BYTE PTR es:[edi],dx
  415fa4:	loop   0x415f7d
  415fa6:	retf   
  415fa7:	pop    esi
  415fa8:	(bad)  
  415fa9:	into   
  415faa:	out    dx,eax
  415fab:	bound  esi,QWORD PTR [ecx]
  415fad:	push   esi
  415fae:	push   es
  415faf:	push   ebp
  415fb0:	ret    
  415fb1:	ret    
  415fb2:	mul    DWORD PTR [edx-0x9]
  415fb5:	shr    edi,cl
  415fb7:	bound  esi,QWORD PTR [ecx]
  415fb9:	pop    eax
  415fba:	add    al,0x6c
  415fbc:	mov    ds:0x8c6bf607,al
  415fc1:	sbb    ecx,eax
  415fc3:	call   FWORD PTR [esi]
  415fc5:	retf   
  415fc6:	add    BYTE PTR [ebp-0x7b],al
  415fc9:	push   0xffffffe3
  415fcb:	pop    esi
  415fcc:	popf   
  415fcd:	pop    ds
  415fce:	out    dx,eax
  415fcf:	pusha  
  415fd0:	call   0xf03a:0x30b5017b
  415fd7:	ins    BYTE PTR es:[edi],dx
  415fd8:	xchg   ebx,eax
  415fd9:	sbb    al,0xf0
  415fdb:	push   edx
  415fdc:	pop    edi
  415fdd:	adc    al,0xd3
  415fdf:	lock push ecx
  415fe1:	std    
  415fe2:	out    0x3,al
  415fe4:	in     eax,0x12
  415fe6:	mov    ds:0x510000f0,eax
  415feb:	repz mov edx,0xcbef40c9
  415ff1:	add    eax,ecx
  415ff3:	adc    ch,BYTE PTR [ebx-0x3d0cae10]
  415ff9:	ret    0xf84a
  415ffc:	mov    ebp,0x68aee4
  416001:	add    eax,0xf592e515
  416006:	adc    esp,esp
  416008:	pop    edx
  41600a:	xchg   esi,eax
  41600b:	push   0xe51d04fa
  416010:	jp     0x416007
  416012:	adc    ebx,esi
  416014:	jb     0x415fd8
  416016:	jle    0x416080
  416018:	fiadd  WORD PTR [edx]
  41601a:	in     al,dx
  41601b:	out    dx,al
  41601c:	jb     0x415fe7
  41601e:	xlat   BYTE PTR ds:[ebx]
  41601f:	test   DWORD PTR [ebx-0x3d],0xeb58dfe2
  416026:	rcr    dh,1
  416028:	pop    edx
  416029:	out    0xe1,eax
  41602b:	shl    dh,cl
  41602d:	add    ebp,DWORD PTR [edx-0x2903d3ed]
  416033:	repnz dec esp
  416035:	call   0xeb7e5a2d
  41603a:	sar    al,0x3c
  41603d:	out    dx,eax
  41603e:	xchg   ebx,eax
  41603f:	neg    BYTE PTR [edx]
  416041:	aad    0xa2
  416043:	loop   0x416054
  416045:	repnz xchg ebp,eax
  416047:	jecxz  0x416070
  416049:	add    al,0x35
  41604b:	adc    eax,0xe726
  416050:	or     dh,0xf
  416053:	lock xchg ebx,eax
  416055:	ret    
  416056:	paddd  mm2,QWORD PTR [ebx+0x32b70014]
  41605d:	aad    0x71
  41605f:	add    al,0xd2
  416061:	jecxz  0x4160c5
  416063:	scas   eax,DWORD PTR es:[edi]
  416064:	(bad)  
  416066:	bound  ebp,QWORD PTR [ebx+edx*8-0x1f3f9009]
  41606d:	lock ds jmp 0xb44374a6
  416074:	shl    edi,cl
  416076:	push   ebp
  416077:	rcl    bh,1
  416079:	loopne 0x4160c7
  41607b:	iret   
  41607c:	call   0x3305cc6f
  416081:	inc    ebp
  416082:	add    bh,BYTE PTR [eax+eiz*4+0x78995efa]
  416089:	out    dx,al
  41608a:	bound  ebx,QWORD PTR [esi-0x7fba0e7f]
  416090:	sahf   
  416091:	bnd call DWORD PTR [edx]
  416094:	xor    ebx,eax
  416096:	ins    BYTE PTR es:[edi],dx
  416097:	mov    BYTE PTR [esi+0x7c8b66db],dl
  41609d:	(bad)  
  41609e:	jno    0x416110
  4160a0:	jae    0x416109
  4160a2:	std    
  4160a3:	cmp    ch,BYTE PTR [ecx+edx*8]
  4160a6:	bound  edx,QWORD PTR [ebp-0x7b]
  4160a9:	in     eax,0x6c
  4160ab:	dec    edx
  4160ac:	ins    BYTE PTR es:[edi],dx
  4160ad:	repz arpl WORD PTR [ebx+0x58],bx
  4160b1:	in     al,0x70
  4160b3:	jmp    0x907360b8
  4160b8:	jmp    DWORD PTR ds:0x4c53e348
  4160be:	inc    eax
  4160bf:	test   DWORD PTR [edi+0x48],0xe93eef29
  4160c6:	xor    ah,BYTE PTR [ebx]
  4160c8:	add    BYTE PTR [edx],ch
  4160ca:	and    esi,edx
  4160cc:	pop    esi
  4160cd:	sbb    eax,0x1b66d308
  4160d2:	sbb    ah,dh
  4160d4:	jae    0x4160d6
  4160d6:	pop    ds
  4160d7:	bound  esi,QWORD PTR [esi+0x41]
  4160da:	or     BYTE PTR [ebx],dl
  4160dc:	add    BYTE PTR gs:[ebp+edi*2+0x69],al
  4160e1:	gs in  al,0x7b
  4160e4:	inc    ebx
  4160e5:	imul   edi,esp,0xc8003e7b
  4160eb:	cmovae esp,DWORD PTR [ebp-0xc]
  4160ef:	push   ecx
  4160f0:	jb     0x416164
  4160f2:	jmp    0x6c64:0xa8746b7b
  4160f9:	arpl   bp,si
  4160fb:	popa   
  4160fc:	jo     0x4160fe
  4160fe:	clc    
  4160ff:	adc    DWORD PTR [ebx+0x69],edx
  416102:	je     0x41617f
  416104:	inc    eax
  416105:	push   0x6f5164b9
  41610a:	int    0x6b
  41610c:	imul   esi,DWORD PTR [ecx+esi*4+0x54],0x12b57476
  416114:	lods   eax,DWORD PTR ds:[esi]
  416115:	add    dh,dl
  416117:	ja     0x416184
  416119:	add    BYTE PTR fs:[eax],al
  41611c:	(bad)  
  41611d:	ja     0x41618e
  41611f:	jae    0x416115
  416121:	push   eax
  416122:	data16 ins BYTE PTR es:[edi],dx
  416124:	mov    ch,0x4f
  416126:	std    
  416127:	jmp    DWORD PTR [edi+0x11]
  41612a:	ins    BYTE PTR es:[edi],dx
  41612b:	jae    0x416131
  41612d:	bound  esp,QWORD PTR [eax+0x6d]
  416130:	clc    
  416131:	js     0x416171
  416133:	add    BYTE PTR [edx-0x2196b9ee],ah
  416139:	jnp    0x416186
  41613b:	lock imul eax,DWORD PTR gs:[ebx+0x69],0xffffffec
  416141:	jl     0x416181
  416143:	add    BYTE PTR [ebp+0x3e694611],ch
  416149:	jl     0x41618b
  41614b:	ins    BYTE PTR es:[edi],dx
  41614c:	das    
  41614d:	popa   
  41614e:	bound  eax,QWORD PTR [eax]
  416150:	xor    DWORD PTR [edi+0x4],eax
  416153:	inc    ebp
  416154:	xchg   esp,eax
  416155:	dec    esi
  416157:	ins    BYTE PTR es:[edi],dx
  416158:	lea    ebp,[eax-0x13]
  41615b:	bound  ebp,QWORD PTR [ecx+0x1c]
  41615e:	out    dx,al
  41615f:	arpl   WORD PTR [ebp-0x11003ce8],ax
  416165:	mov    ebp,0x474c4503
  41616a:	shl    DWORD PTR [edx+0x63],cl
  41616d:	dec    edx
  41616e:	in     al,dx
  41616f:	ins    BYTE PTR es:[edi],dx
  416170:	inc    edi
  416171:	mov    eax,0x11313ef9
  416176:	add    eax,DWORD PTR [ebp+0x4c]
  416179:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41617a:	int    0x6c
  41617c:	push   edx
  41617d:	pop    esp
  41617e:	in     eax,dx
  41617f:	bound  eax,QWORD PTR [eax]
  416181:	add    BYTE PTR [eax+0x4d],ch
  416184:	jecxz  0x4161f2
  416186:	lock jp 0x41618a
  416189:	je     0x4161bb
  41618b:	mov    dh,0xe8
  41618d:	jae    0x416191
  41618f:	mov    ah,0xf2
  416191:	jae    0x41619f
  416193:	nop
  416194:	int3   
  416195:	ins    DWORD PTR es:[edi],dx
  416196:	pop    ss
  416197:	out    0x0,al
  416199:	mov    al,ds:0x73e8b630
  41619e:	out    0x83,al
  4161a0:	jmp    0x416205
  4161a2:	push   es
  4161a3:	out    0xf1,al
  4161a5:	inc    ebx
  4161a6:	fsubr  st,st(0)
  4161a8:	out    0x60,eax
  4161aa:	fnstsw WORD PTR [ebp+0x7af076f1]
  4161b0:	add    DWORD PTR [ebp+0x30],ecx
  4161b3:	ss in  eax,0x73
  4161b6:	loope  0x416180
  4161b8:	call   0xe5683232
  4161bd:	dec    edi
  4161be:	ret    
  4161bf:	aad    0xe5
  4161c1:	(bad)
  4161c5:	jae    0x41616a
  4161c7:	aam    0xed
  4161c9:	fs jo  0x4161e0
  4161cc:	out    0x3,eax
  4161ce:	fwait
  4161cf:	adc    bh,BYTE PTR [edx]
  4161d1:	out    0xa2,eax
  4161d3:	rcr    DWORD PTR [ebx],1
  4161d5:	repnz sub bh,0xfc
  4161d9:	div    DWORD PTR [edx-0x5]
  4161dc:	clc    
  4161dd:	out    0x91,al
  4161df:	loopne 0x4161ee
  4161e1:	bnd jg 0x4161b7
  4161e4:	out    0x3,al
  4161e6:	add    BYTE PTR [eax],al
  4161e8:	inc    edx
  4161e9:	adc    ebx,edi
  4161eb:	lock (bad) 
  4161ee:	leave  
  4161ef:	out    dx,al
  4161f0:	dec    esi
  4161f1:	shl    esi,cl
  4161f3:	add    esp,DWORD PTR [ebp+0x13]
  4161f6:	scas   al,BYTE PTR es:[edi]
  4161f7:	out    0x42,al
  4161f9:	(bad)  
  4161fa:	fsubr  st,st(2)
  4161fc:	cmp    al,0xf3
  4161fe:	mov    edx,0xcde26ee6
  416203:	in     eax,0x4f
  416205:	clc    
  416206:	retf   
  416207:	rcl    BYTE PTR [ebx],1
  416209:	icebp  
  41620a:	mov    dl,0xea
  41620c:	adc    eax,0xbe2b4f6
  416211:	out    dx,eax
  416212:	cdq    
  416213:	ret    0x6496
  416216:	mov    al,ds:0x92eef402
  41621b:	rol    DWORD PTR [eax],cl
  41621d:	sti    
  41621e:	jl     0x416202
  416220:	add    ch,bh
  416222:	xchg   esi,eax
  416223:	icebp  
  416224:	add    eax,0xd3ef7fee
  416229:	fidivr DWORD PTR [edi+esi*8+0x27]
  41622d:	adc    al,0xe5
  41622f:	add    esi,esp
  416231:	out    dx,al
  416232:	push   edx
  416233:	shl    ebx,0xe1
  416236:	pop    eax
  416237:	out    0xdc,eax
  416239:	fbld   TBYTE PTR [edx]
  41623b:	jmp    0x4161fd
  41623d:	out    dx,al
  41623e:	dec    ecx
  41623f:	clc    
  416240:	int    0xe1
  416242:	aas    
  416243:	ret    
  416244:	ss fs add bh,dl
  416248:	xor    eax,esi
  41624a:	jo     0x416281
  41624c:	add    BYTE PTR [eax],al
  41624e:	and    esi,eax
  416250:	bound  edx,QWORD PTR [edi]
  416252:	add    al,0x64
  416254:	std    
  416255:	in     al,dx
  416256:	xor    bh,cl
  416258:	jb     0x41625f
  41625a:	or     ebx,edi
  41625c:	inc    ecx
  41625d:	adc    BYTE PTR [ecx],cl
  41625f:	not    DWORD PTR [ebx+0x16]
  416262:	in     al,0xfa
  416264:	arpl   WORD PTR [eax+esi*8],ax
  416267:	sti    
  416268:	pop    esi
  416269:	sti    
  41626a:	xor    cl,BYTE PTR [edi-0x1831da01]
  416270:	push   ebx
  416271:	rcl    cl,1
  416273:	in     al,dx
  416274:	inc    eax
  416275:	into   
  416276:	fcomip st,st(1)
  416278:	jae    0x416263
  41627a:	xor    bl,BYTE PTR [ebp-0x92945fe]
  416280:	bound  edi,QWORD PTR [ecx-0x5a00d9ce]
  416286:	iret   
  416287:	out    0x4a,eax
  416289:	(bad)  
  41628a:	xchg   esi,eax
  41628b:	out    0x6b,al
  41628d:	les    ebp,FWORD PTR [edx+edi*8+0x6b]
  416291:	mov    WORD PTR [edx+eax*8+0x6a],gs
  416295:	test   BYTE PTR [ebx+0x63],dh
  416298:	std    
  416299:	shl    DWORD PTR [ebx],0xd9
  41629c:	bound  edx,QWORD PTR [ebp+0x7d70c276]
  4162a2:	ja     0x416289
  4162a4:	jno    0x416234
  4162a6:	and    BYTE PTR [ebx-0x3],0x90
  4162aa:	xor    dl,ch
  4162ac:	jno    0x416232
  4162ae:	push   ebx
  4162af:	out    0x62,eax
  4162b1:	cmp    eax,0xf04a0000
  4162b6:	imul   edx,DWORD PTR [ecx+0x50],0xffffffef
  4162ba:	outs   dx,DWORD PTR ds:[esi]
  4162bb:	sbb    al,BYTE PTR [edi]
  4162bd:	lds    ebp,FWORD PTR [ebp+0x48]
  4162c0:	cmp    eax,0xe70067e4
  4162c5:	arpl   bp,di
  4162c7:	jmp    FWORD PTR ds:0x7772501a
  4162cd:	jnp    0x416331
  4162cf:	jae    0x41633c
  4162d1:	sub    esi,DWORD PTR [edx]
  4162d3:	inc    esi
  4162d4:	inc    ecx
  4162d5:	push   0x70
  4162d7:	je     0x4162e1
  4162d9:	pop    ss
  4162da:	sbb    BYTE PTR [edx],al
  4162dc:	push   edi
  4162dd:	push   0x6a486e62
  4162e2:	ins    BYTE PTR es:[edi],dx
  4162e3:	arpl   WORD PTR ds:0xef00706b,bp
  4162e9:	sbb    BYTE PTR [eax+0x72],dl
  4162ec:	aaa    
  4162ed:	jnp    0x416351
  4162ef:	jae    0x4162dc
  4162f1:	sub    DWORD PTR [edx],esi
  4162f3:	dec    esi
  4162f4:	in     eax,dx
  4162f5:	pop    esi
  4162f6:	jno    0x4162f8
  4162f8:	outs   dx,DWORD PTR ds:[esi]
  4162f9:	sbb    DWORD PTR [ebx+eax*2-0x6b],ecx
  4162fd:	ja     0x41636c
  4162ff:	push   ebx
  416300:	fsubr  QWORD PTR [eax+0x66]
  416303:	outs   dx,BYTE PTR ds:[esi]
  416304:	out    dx,eax
  416305:	push   edi
  416306:	std    
  416307:	call   DWORD PTR [ebx+0x18]
  41630a:	inc    ecx
  41630b:	js     0x41637e
  41630d:	jb     0x41635c
  41630f:	jb     0x4162f8
  416311:	jns    0x416375
  416313:	jae    0x4162d0
  416315:	push   ss
  416316:	lods   eax,DWORD PTR ds:[esi]
  416317:	add    al,BYTE PTR [eax]
  416319:	add    bl,bl
  41631b:	jae    0x41638e
  41631d:	push   ebp
  41631e:	mov    dh,0x6e
  416320:	pop    esi
  416321:	outs   dx,BYTE PTR ds:[esi]
  416322:	lods   al,BYTE PTR ds:[esi]
  416323:	jp     0x416387
  416325:	fs int 0x5e
  416328:	pusha  
  416329:	gs clc 
  41632b:	jb     0x416393
  41632d:	outs   dx,DWORD PTR ds:[esi]
  41632e:	mov    dh,0x54
  416330:	data16 ins BYTE PTR es:[edi],dx
  416332:	fdiv   QWORD PTR [ebx+0x6f]
  416335:	add    BYTE PTR [ebx],al
  416337:	jne    0x4163a8
  416339:	outs   dx,BYTE PTR ds:[esi]
  41633a:	in     eax,dx
  41633b:	imul   esi,DWORD PTR [eax],0x32
  41633e:	xor    DWORD PTR [ebx],ebx
  416340:	loopne 0x4163ad
  416342:	aad    0x6c
  416344:	add    DWORD PTR [ecx+0x62f62e31],ecx
  41634a:	shr    BYTE PTR [eax],1
  41634c:	fist   WORD PTR [eax-0x5b]
  41634f:	sbb    eax,0x2945edf
  416354:	jmp    0x9061:0xe9077647
  41635b:	(bad)  
  41635d:	xchg   ebp,eax
  41635e:	xor    DWORD PTR [edx],esi
  416360:	fbstp  TBYTE PTR [ebx+0x79]
  416363:	cmp    ch,al
  416365:	ins    BYTE PTR es:[edi],dx
  416366:	xchg   ebx,eax
  416367:	or     al,0xe8
  416369:	inc    ebp
  41636a:	adc    DWORD PTR [edx],0xffffffe7
  41636d:	push   eax
  41636e:	gs pop ebp
  416370:	loopne 0x4163d0
  416372:	push   esp
  416373:	imul   eax,DWORD PTR [ecx],0xe
  416376:	xor    DWORD PTR [esi+0x586340ea],ebp
  41637c:	in     al,0x73
  41637e:	add    BYTE PTR [eax],al
  416380:	push   esp
  416381:	mov    dl,0xf0
  416383:	dec    bp
  416385:	imul   eax,DWORD PTR [ecx],0x60
  416388:	xor    DWORD PTR [esi-0x61afac16],ebp
  41638e:	out    dx,al
  41638f:	dec    edx
  416390:	adc    al,0x58
  416392:	mov    edi,0x1580c71
  416397:	or     eax,0x40eaae31
  41639c:	and    ebx,DWORD PTR [eax-0x4beb8c1c]
  4163a2:	out    0x70,eax
  4163a4:	std    
  4163a5:	mov    esp,edi
  4163a7:	pusha  
  4163a8:	adc    al,0x6b
  4163aa:	add    ecx,esi
  4163ac:	xor    DWORD PTR [edx-0x67079d1b],esi
  4163b2:	in     al,dx
  4163b3:	jae    0x41638d
  4163b5:	mov    esp,ebp
  4163b7:	data16 fist DWORD PTR [ebx]
  4163ba:	dec    esp
  4163bb:	add    al,0xc4
  4163bd:	out    dx,eax
  4163be:	inc    ebx
  4163bf:	xor    eax,0xe84b3203
  4163c4:	ficom  DWORD PTR [ebx]
  4163c6:	dec    esp
  4163c7:	push   es
  4163c8:	(bad)  
  4163c9:	in     al,0x36
  4163cb:	test   bh,0xf1
  4163ce:	xor    ah,dl
  4163d0:	outs   dx,DWORD PTR ds:[esi]
  4163d1:	adc    al,0x3c
  4163d3:	cmc    
  4163d4:	xchg   ebx,eax
  4163d5:	out    0xf9,al
  4163d7:	xor    eax,0xe812f84f
  4163dc:	push   ss
  4163dd:	popa   
  4163de:	mov    bh,0x3
  4163e0:	arpl   di,si
  4163e2:	or     eax,0x960000c9
  4163e7:	idiv   esp
  4163e9:	int3   
  4163ea:	xchg   ebx,eax
  4163eb:	fld    TBYTE PTR [ebx]
  4163ed:	cld    
  4163ee:	aaa    
  4163ef:	adc    al,0xa1
  4163f1:	add    eax,DWORD PTR [ebx+0x63d30df7]
  4163f7:	idiv   eax
  4163f9:	cli    
  4163fa:	test   bl,dh
  4163fc:	shr    dh,cl
  4163fe:	push   ebx
  4163ff:	xlat   BYTE PTR ds:[ebx]
  416400:	faddp  st(2),st
  416402:	into   
  416403:	pusha  
  416404:	sahf   
  416405:	add    esp,DWORD PTR [ebx-0x9]
  416408:	kaddw  k6,k7,k1
  41640c:	mov    ecx,0xbff769de
  416411:	add    edi,DWORD PTR [edx+edx*1-0x67]
  416415:	fimul  WORD PTR ds:0xcdeb6d1
  41641b:	int    0x8b
  41641d:	cli    
  41641e:	push   edi
  41641f:	adc    al,0x23
  416421:	add    esp,ebx
  416423:	test   BYTE PTR [ebp+0x7be714be],0xcc
  41642a:	adc    ebx,ebx
  41642c:	stos   DWORD PTR es:[edi],eax
  41642d:	sti    
  41642e:	aaa    
  41642f:	adc    al,0x41
  416431:	add    eax,DWORD PTR [ebx]
  416433:	idiv   edi
  416435:	lea    ebp,[ebp-0x1e]
  416438:	bound  ecx,QWORD PTR [eax+0x4c48f54e]
  41643e:	pop    edx
  41643f:	and    DWORD PTR [eax],eax
  416441:	(bad)  
  416442:	xor    eax,esi
  416444:	bound  ecx,QWORD PTR [esi+0x5c]
  416447:	cmc    
  416448:	jae    0x416481
  41644a:	add    BYTE PTR [eax],al
  41644c:	push   edx
  41644d:	in     al,dx
  41644e:	jb     0x41649c
  416450:	jbe    0x41643a
  416452:	ds jmp 0x1b40bd8a
  416458:	push   es
  416459:	stc    
  41645a:	inc    edx
  41645b:	aas    
  41645c:	push   cs
  41645d:	jmp    0x4164b4
  41645f:	or     BYTE PTR [ecx],cl
  416461:	jecxz  0x4164c5
  416463:	sub    BYTE PTR ds:0xe63aff4e,dh
  416469:	clc    
  41646a:	dec    esp
  41646b:	sbb    esi,ebx
  41646d:	icebp  
  41646e:	inc    eax
  41646f:	cld    
  416470:	cld    
  416471:	in     eax,0x62
  416473:	psraw  mm0,mm2
  416476:	jo     0x416484
  416478:	fistp  WORD PTR [edi-0x3]
  41647b:	shl    BYTE PTR [ebx],cl
  41647d:	fldenv [edx-0x23]
  416480:	out    0xe4,eax
  416482:	(bad)  
  416483:	(bad)  
  416485:	mov    esi,0x5ff3cc6a
  41648a:	std    
  41648b:	enter  0xe9de,0x5e
  41648f:	mov    ecx,0xf3224cb
  416494:	xchg   ecx,eax
  416495:	jmp    0x416502
  416497:	jmp    0x9a41abce
  41649c:	mov    dh,dl
  41649e:	imul   edx,DWORD PTR [ebp-0x759d1829],0xffffff9f
  4164a5:	jecxz  0x416509
  4164a7:	test   al,0x32
  4164a9:	in     eax,0x67
  4164ab:	test   BYTE PTR [esi+0x30eb],dl
  4164b1:	add    BYTE PTR [edx-0x43939bd3],bh
  4164b7:	adc    esi,DWORD PTR [ebp+0x0]
  4164ba:	xchg   ecx,eax
  4164bb:	ins    DWORD PTR es:[edi],dx
  4164bc:	jno    0x416523
  4164be:	fisubr DWORD PTR [edx+eiz*2+0x74]
  4164c2:	or     esp,DWORD PTR [edx+0x5e]
  4164c5:	arpl   bx,sp
  4164c7:	inc    esp
  4164c8:	outs   dx,DWORD PTR ds:[esi]
  4164c9:	ins    BYTE PTR es:[edi],dx
  4164ca:	sbb    DWORD PTR [eax],ebx
  4164cc:	ja     0x4164ce
  4164ce:	adc    DWORD PTR [esi+0x71],esi
  4164d1:	gs cli 
  4164d3:	jne    0x416537
  4164d5:	je     0x416532
  4164d7:	bound  esp,QWORD PTR [edx+0x61]
  4164da:	fs jne 0x41652f
  4164dd:	jb     0x41653b
  4164df:	pop    ecx
  4164e0:	std    
  4164e1:	push   DWORD PTR [edi]
  4164e3:	jno    0x416550
  4164e5:	imul   edi,DWORD PTR [esi],0x342e7175
  4164eb:	ins    BYTE PTR es:[edi],dx
  4164ec:	imul   eax,DWORD PTR [eax],0x744f17dd
  4164f2:	cli    
  4164f3:	inc    ecx
  4164f4:	jno    0x416568
  4164f6:	and    DWORD PTR [ecx-0x3],ebx
  4164f9:	(bad)  
  4164fa:	fcom   DWORD PTR [edi]
  4164fc:	dec    edi
  4164fd:	je     0x4164d9
  4164ff:	inc    esp
  416500:	inc    eax
  416501:	push   0x3e4ffa
  416506:	les    edx,FWORD PTR [edi]
  416508:	dec    edi
  416509:	je     0x4164f5
  41650b:	dec    esi
  41650c:	ins    BYTE PTR es:[edi],dx
  41650d:	dec    ecx
  41650e:	jle    0x41657e
  416510:	add    BYTE PTR ds:[edi+edx*1+0x744f],bh
  416518:	jmp    0xea12:0xd9727141
  41651f:	add    BYTE PTR [ebx-0x42bc9092],bh
  416525:	bound  ecx,QWORD PTR [ebx+0x49]
  416528:	fst    DWORD PTR [edx]
  41652a:	push   cs
  41652b:	add    DWORD PTR [ecx],esi
  41652d:	call   0x46ef:0x88e271ed
  416534:	fisubr WORD PTR [ecx+eax*1+0x71]
  416538:	fst    DWORD PTR [eax-0x6c1ea112]
  41653e:	and    esp,DWORD PTR [ebp+ecx*8-0x20]
  416542:	add    BYTE PTR [esi],dh
  416544:	xor    esp,eax
  416546:	in     eax,0x62
  416548:	lds    ebx,FWORD PTR ds:0xbacd63e3
  41654e:	add    ebp,DWORD PTR [edx]
  416550:	xor    esi,edx
  416552:	fidiv  WORD PTR [ebx-0x37]
  416555:	(bad)
  416558:	xchg   ebx,eax
  416559:	aam    0xe5
  41655b:	pop    esi
  41655c:	xchg   esp,eax
  41655d:	rol    BYTE PTR [ebx],1
  41655f:	inc    edi
  416560:	xor    DWORD PTR [edx],ebx
  416562:	in     eax,0x60
  416564:	mov    dl,BYTE PTR [eax]
  416566:	lock dec DWORD PTR [esi]
  416569:	push   edi
  41656a:	add    DWORD PTR [ecx-0x6a],esp
  41656d:	adc    eax,0x79262e6
  416572:	add    al,0x26
  416574:	xor    DWORD PTR [edx],ecx
  416576:	call   0xf159c7e7
  41657b:	ins    BYTE PTR es:[edi],dx
  41657c:	add    BYTE PTR [eax],al
  41657e:	push   edx
  41657f:	adc    bl,bh
  416581:	jae    0x4165b4
  416583:	aaa    
  416584:	add    al,0x71
  416586:	dec    esp
  416587:	inc    ebp
  416588:	(bad)  
  41658a:	into   
  41658b:	stos   BYTE PTR es:[edi],al
  41658c:	add    DWORD PTR [ecx+0x4c],esi
  41658f:	push   edi
  416590:	loopne 0x4165f2
  416592:	inc    ebp
  416593:	imul   eax,DWORD PTR [ecx],0x3e
  416596:	xor    DWORD PTR [ecx+0x6b2760e0],ebx
  41659c:	add    DWORD PTR [ebp+0x31],eax
  41659f:	call   0x68e2:0x9e2273e0
  4165a6:	push   es
  4165a7:	adc    al,0x97
  4165a9:	out    dx,eax
  4165aa:	mov    ds,WORD PTR [ebp-0x38]
  4165ad:	add    ebx,esp
  4165af:	shl    BYTE PTR [edi-0x670cfd2e],0xef
  4165b6:	add    esp,esp
  4165b8:	out    0x3,al
  4165ba:	in     al,0xe0
  4165bc:	(bad)  
  4165bd:	loop   0x416598
  4165bf:	and    BYTE PTR [ecx+0x7aefd525],bh
  4165c5:	add    ebp,edx
  4165c7:	adc    esi,DWORD PTR [ebx]
  4165c9:	in     eax,0xef
  4165cb:	div    DWORD PTR [ebx]
  4165cd:	icebp  
  4165ce:	shl    ecx,cl
  4165d0:	ss repnz int 0xf5
  4165d4:	aas    
  4165d5:	call   0x42838ad
  4165da:	mov    ss,WORD PTR [esp+edx*1]
  4165dd:	out    0x9a,al
  4165df:	in     eax,dx
  4165e0:	inc    edi
  4165e1:	loopne 0x4165e3
  4165e3:	add    BYTE PTR [ebx+0x66f243e1],al
  4165e9:	loop   0x416600
  4165eb:	ficom  WORD PTR [edi-0x7dfbfc10]
  4165f1:	loope  0x4165fe
  4165f3:	repnz xchg ebx,eax
  4165f5:	out    dx,al
  4165f6:	adc    al,0x26
  4165f8:	(bad)  
  4165f9:	lock adc al,BYTE PTR [ecx+esi*1]
  4165fd:	adc    al,0xe7
  4165ff:	add    esi,DWORD PTR [ecx]
  416601:	adc    al,0xe7
  416603:	add    esi,DWORD PTR [ecx]
  416605:	adc    al,0xe7
  416607:	add    esi,DWORD PTR [ecx]
  416609:	adc    al,0xe7
  41660b:	add    esi,DWORD PTR [ecx]
  41660d:	adc    al,0xe7
  41660f:	add    esi,DWORD PTR [ecx]
  416611:	adc    al,0xe7
  416613:	add    esi,DWORD PTR [ecx]
  416615:	adc    al,0xe7
  416617:	add    esi,DWORD PTR [ecx]
  416619:	adc    al,0xe7
  41661b:	add    esi,DWORD PTR [ecx]
  41661d:	adc    al,0xe7
  41661f:	add    esi,DWORD PTR [ecx]
  416621:	adc    al,0x0
  416623:	jmp    0xe9417a5a
  416628:	xor    dl,BYTE PTR [eax+eax*1]
  41662b:	jmp    0xe9417a62
  416630:	xor    dl,BYTE PTR [eax+eax*1]
  416633:	jmp    0xe9417a6a
  416638:	xor    dl,BYTE PTR [eax+eax*1]
  41663b:	jmp    0xe9417a72
  416640:	xor    dl,BYTE PTR [eax+eax*1]
  416643:	jmp    0xe9417a7a
  416648:	add    BYTE PTR [eax],al
  41664a:	xor    dl,BYTE PTR [eax+eax*1]
  41664d:	jmp    0xe9417a84
  416652:	xor    dl,BYTE PTR [eax+eax*1]
  416655:	jmp    0xe9417a8c
  41665a:	xor    dl,BYTE PTR [eax+eax*1]
  41665d:	jmp    0xe9417a94
  416662:	xor    dl,BYTE PTR [eax+eax*1]
  416665:	jmp    0xe9417a9c
  41666a:	xor    dl,BYTE PTR [eax+eax*1]
  41666d:	jmp    0xe9417aa4
  416672:	xor    dl,BYTE PTR [eax+eax*1]
  416675:	jmp    0xe9417aac
  41667a:	xor    dl,BYTE PTR [eax+eax*1]
  41667d:	jmp    0xe9417ab4
  416682:	xor    dl,BYTE PTR [eax+eax*1]
  416685:	jmp    0xe9417abc
  41668a:	xor    dl,BYTE PTR [eax+eax*1]
  41668d:	jmp    0xe9417ac4
  416692:	xor    dl,BYTE PTR [eax+eax*1]
  416695:	jmp    0xe9417acc
  41669a:	xor    dl,BYTE PTR [eax+eax*1]
  41669d:	add    BYTE PTR [eax-0x67ffffe9],bl
  4166a3:	pop    ss
  4166a4:	add    BYTE PTR [eax],al
  4166a6:	mov    BYTE PTR [edi],dl
  4166a8:	add    BYTE PTR [eax],al
  4166aa:	mov    BYTE PTR [edi],dl
  4166ac:	add    BYTE PTR [eax],al
  4166ae:	add    BYTE PTR [eax],al
  4166b0:	cwde   
  4166b1:	pop    ss
  4166b2:	add    BYTE PTR [eax],al
  4166b4:	cwde   
  4166b5:	pop    ss
  4166b6:	add    BYTE PTR [eax],al
  4166b8:	ins    DWORD PTR es:[edi],dx
  4166b9:	dec    eax
  4166ba:	int3   
  4166bb:	int3   
  4166bc:	gs dec eax
  4166be:	int3   
  4166bf:	int3   
  4166c0:	add    al,0x8f
  4166c2:	in     al,dx
  4166c3:	push   ecx
  4166c4:	mov    edx,0x298a07d1
  4166c9:	mov    WORD PTR [ebx-0x1],cs
  4166cc:	stos   BYTE PTR es:[edi],al
  4166cd:	jno    0x41672a
  4166cf:	ret    
  4166d0:	in     al,0x8e
  4166d2:	in     al,dx
  4166d3:	push   ecx
  4166d4:	ffreep st(2)
  4166d6:	xor    cl,cl
  4166d8:	aad    0x8e
  4166da:	outs   dx,DWORD PTR ds:[esi]
  4166db:	xor    BYTE PTR [edx-0x5874f41e],ch
  4166e1:	clc    
  4166e2:	mov    BYTE PTR [esi+0x39],al
  4166e5:	lea    eax,[ebx-0x4]
  4166e8:	stos   BYTE PTR es:[edi],al
  4166e9:	fstp   DWORD PTR [edi]
  4166eb:	mov    ebx,DWORD PTR [edi-0x6c]
  4166ee:	cmp    eax,0x8013856b
  4166f3:	aas    
  4166f4:	jp     0x4166d6
  4166f6:	add    ebx,ebp
  4166f8:	or     BYTE PTR [ebx-0x46f374a3],bh
  4166fe:	ror    ah,0x84
  416701:	(bad)  
  416702:	in     al,dx
  416703:	adc    ebp,0x2f
  416706:	mov    DWORD PTR [ebp+0x29],eax
  416709:	lea    eax,[ebx-0x20]
  41670c:	stos   BYTE PTR es:[edi],al
  41670d:	enter  0x8bdf,0x64
  416711:	je     0x416714
  416713:	push   ecx
  416714:	add    BYTE PTR [eax],al
  416716:	add    eax,0xaae4538d
  41671b:	shl    bl,1
  41671d:	mov    ebp,DWORD PTR [ecx-0x24]
  416720:	add    BYTE PTR [ebp+0x39],cl
  416723:	lea    ecx,[ebx-0x8]
  416726:	mov    edx,0xf38bf7c0
  41672b:	das    
  41672c:	add    DWORD PTR [ebp+0x29],eax
  41672f:	lea    eax,[ebx-0x18]
  416732:	mov    edx,0xe08bf7c8
  416737:	xor    eax,DWORD PTR [ecx]
  416739:	push   ebp
  41673a:	sub    DWORD PTR [ebp-0x2f550fad],ecx
  416740:	test   DWORD PTR [ebx+0x4d00f7f9],0xfc4b8d39
  41674a:	jbe    0x41671c
  41674c:	repz add BYTE PTR [ecx],dh
  41674f:	adc    al,0x0
  416751:	jmp    0x41678b
  416753:	(bad)  
  416754:	push   ebx
  416755:	hlt    
  416756:	mov    dl,0x55
  416758:	dec    DWORD PTR [eax+0x45895fe4]
  41675e:	cmp    DWORD PTR [esi-0x33950bb5],ecx
  416764:	pop    ss
  416765:	jae    0x4167e0
  416767:	lea    edx,[ebx-0x10]
  41676a:	stos   BYTE PTR es:[edi],al
  41676b:	push   ss
  41676c:	add    DWORD PTR [ebp+0x29],eax
  41676f:	mov    eax,DWORD PTR [ebx-0x24]
  416772:	fwait
  416773:	or     ch,BYTE PTR [eax-0x54]
  416776:	xor    edx,esp
  416778:	dec    DWORD PTR [edx+0x386c0000]
  41677e:	dec    edi
  41677f:	call   0x417ae5
  416784:	mov    dl,0x50
  416786:	or     al,0x85
  416788:	icebp  
  416789:	fistp  WORD PTR [eax]
  41678b:	mov    eax,DWORD PTR [eax+eiz*2+0x9c94589]
  416792:	mov    ch,0xc
  416794:	popa   
  416795:	mov    ecx,DWORD PTR [ebx-0x14]
  416798:	mov    edx,0x748bebbf
  41679d:	pop    eax
  41679e:	mov    DWORD PTR [ecx+eiz*4],eax
  4167a1:	adc    eax,0x79a0843
  4167a6:	mov    DWORD PTR [ebp-0x5f],ecx
  4167a9:	xchg   ebp,eax
  4167aa:	mov    edi,0xefc7a804
  4167af:	jmp    0x41677e
  4167b1:	and    eax,0xb7948bc0
  4167b6:	ror    ah,0x75
  4167b9:	dec    eax
  4167ba:	int3   
  4167bb:	int3   
  4167bc:	ins    DWORD PTR es:[edi],dx
  4167bd:	dec    eax
  4167be:	int3   
  4167bf:	int3   
  4167c0:	gs dec eax
  4167c2:	int3   
  4167c3:	int3   
  4167c4:	add    al,0x8d
  4167c6:	in     al,dx
  4167c7:	adc    DWORD PTR [ebp-0x4],0xffffffe7
  4167cb:	add    eax,0x89fd595e
  4167d0:	in     al,dx
  4167d1:	imul   ecx,DWORD PTR [ecx-0x183ba6bb],0x29
  4167d8:	inc    esi
  4167d9:	pop    ecx
  4167da:	std    
  4167db:	xor    DWORD PTR [ebp+0x10],0xffffffa1
  4167df:	mov    ah,0x0
  4167e1:	add    ah,bl
  4167e3:	sar    bh,cl
  4167e5:	addr16 in eax,dx
  4167e7:	adc    eax,0xc6ba0040
  4167ec:	out    0x51,eax
  4167ee:	push   ds
  4167ef:	push   DWORD PTR [ebx-0x5eeb8fab]
  4167f5:	mov    eax,0x69ffd364
  4167fa:	xor    esi,ebp
  4167fc:	jmp    DWORD PTR [edi-0x13]
  4167ff:	adc    eax,0xfef60040
  416804:	mov    bh,0x55
  416806:	jo     0x41681c
  416808:	xchg   DWORD PTR [ebp-0x27],eax
  41680b:	push   eax
  41680c:	inc    ebx
  41680d:	cld    
  41680e:	xor    DWORD PTR [eax+eax*1],edx
  416811:	add    dl,cl
  416813:	or     cl,BYTE PTR [ecx-0x3d6b32ab]
  416819:	add    DWORD PTR [eax+0x3c83fbbe],edi
  41681f:	pop    eax
  416820:	or     BYTE PTR [ebx+0x10],dh
  416823:	lea    eax,[ebx-0x4]
  416826:	mov    edx,0x338c8307
  41682b:	aam    0xff
  41682d:	push   eax
  41682e:	stos   BYTE PTR es:[edi],al
  41682f:	mov    esi,0xfe9652e7
  416834:	mov    bl,0x55
  416836:	lock adc ecx,DWORD PTR [ecx+0x48a854d]
  41683d:	(bad)  
  41683e:	lds    edi,FWORD PTR [esi+0x438a003e]
  416844:	mov    ebp,esp
  416846:	add    BYTE PTR [eax],al
  416848:	or     al,0x55
  41684a:	int3   
  41684b:	int3   
  41684c:	jne    0x416895
  41684e:	int3   
  41684f:	int3   
  416850:	ins    DWORD PTR es:[edi],dx
  416851:	inc    edi
  416852:	int3   
  416853:	int3   
  416854:	gs inc edi
  416856:	int3   
  416857:	int3   
  416858:	in     al,0x8c
  41685a:	in     al,dx
  41685b:	mov    eax,ds:0x3ec221
  416860:	dec    DWORD PTR [eax+eax*2+0x7c6aa30]
  416867:	ds mov eax,0xf25d07cc
  41686d:	dec    eax
  41686e:	int3   
  41686f:	int3   
  416870:	in     eax,dx
  416871:	dec    eax
  416872:	int3   
  416873:	int3   
  416874:	in     eax,0x48
  416876:	int3   
  416877:	int3   
  416878:	fs mov ebp,esp
  41687b:	mov    ebp,DWORD PTR [eax+ecx*1+0x50]
  41687f:	mov    ebp,DWORD PTR [esp+ecx*1+0x4f]
  416883:	call   FWORD PTR [eax+eiz*4]
  416886:	push   ebx
  416887:	inc    ecx
  416888:	xor    DWORD PTR [ecx+0x48f5ccc0],edi
  41688e:	int3   
  41688f:	int3   
  416890:	in     eax,dx
  416891:	dec    eax
  416892:	int3   
  416893:	int3   
  416894:	in     eax,0x48
  416896:	int3   
  416897:	int3   
  416898:	fs mov ebp,esp
  41689b:	adc    ebp,0xc
  41689e:	push   0x0
  4168a0:	dec    ebx
  4168a1:	adc    al,0x68
  4168a3:	fdiv   QWORD PTR [ebx]
  4168a5:	aam    0xff
  4168a7:	inc    BYTE PTR [esp+ebx*4+0x53]
  4168ab:	inc    ecx
  4168ac:	add    BYTE PTR [eax],al
  4168ae:	xor    DWORD PTR [ebp+0x6c09f843],ecx
  4168b4:	add    al,BYTE PTR [eax+0x31]
  4168b7:	mov    eax,DWORD PTR [ebx-0x8]
  4168ba:	loope  0x416927
  4168bc:	mov    edx,0x815786ff
  4168c1:	les    ebp,FWORD PTR [ecx]
  4168c3:	lea    eax,[ebx-0x4]
  4168c6:	stos   BYTE PTR es:[edi],al
  4168c7:	leave  
  4168c8:	sqrtps xmm7,XMMWORD PTR [edx-0x45adf43f]
  4168cf:	rol    DWORD PTR [edi],1
  4168d1:	push   eax
  4168d2:	pop    esi
  4168d3:	sar    ebx,0x8b
  4168d6:	dec    esp
  4168d7:	mov    ecx,0x8ae4ccc0
  4168dc:	in     al,dx
  4168dd:	push   ecx
  4168de:	outs   dx,BYTE PTR ds:[esi]
  4168df:	sar    ebx,1
  4168e1:	add    BYTE PTR [ecx],dh
  4168e3:	adc    al,0x0
  4168e5:	jmp    0x41690f
  4168e7:	mov    eax,DWORD PTR [ebx-0x4]
  4168ea:	mov    dl,0x53
  4168ec:	dec    DWORD PTR [eax+0x4d89586c]
  4168f2:	sbb    eax,0xa2104b1b
  4168f7:	test   DWORD PTR [eax+0x53133955],0x29e36fc
  416901:	mov    ebp,DWORD PTR [eax+ecx*1+0x1]
  416905:	dec    ebp
  416906:	cmc    
  416907:	push   es
  416908:	mov    dh,0x11
  41690a:	sub    dl,BYTE PTR [edx+0x74]
  41690d:	pop    es
  41690e:	test   eax,0x14
  416913:	add    BYTE PTR [ecx],dh
  416915:	imul   eax,DWORD PTR [ebx+ebp*8],0x1
  416919:	and    eax,eax
  41691b:	mov    edx,esp
  41691d:	mov    eax,0x47f5ccc0
  416922:	int3   
  416923:	int3   
  416924:	in     eax,dx
  416925:	inc    edi
  416926:	int3   
  416927:	int3   
  416928:	in     eax,0x47
  41692a:	int3   
  41692b:	int3   
  41692c:	add    al,0x8b
  41692e:	in     al,dx
  41692f:	mov    ecx,0x1449
  416934:	adc    eax,0x2489078b
  416939:	add    al,0x56
  41693b:	inc    ecx
  41693c:	xor    DWORD PTR [ecx+0x4775ccc0],edi
  416942:	int3   
  416943:	int3   
  416944:	ins    DWORD PTR es:[edi],dx
  416945:	inc    edi
  416946:	int3   
  416947:	int3   
  416948:	gs inc edi
  41694a:	int3   
  41694b:	int3   
  41694c:	add    al,0x8b
  41694e:	in     al,dx
  41694f:	adc    DWORD PTR [ebp+0x3],0xffffff89
  416953:	inc    ebp
  416954:	sub    DWORD PTR [ebx+0x7310478],edx
  41695a:	test   BYTE PTR [eax-0x74ffebcf],cl
  416960:	hlt    
  416961:	or     ecx,DWORD PTR [ecx-0x156ccaaf]
  416967:	or     BYTE PTR [eax+0x69],ah
  41696a:	xchg   DWORD PTR [ebp+0x25],edx
  41696d:	mov    al,BYTE PTR [ebx+0x8]
  416970:	mov    dl,0x54
  416972:	or     BYTE PTR [ecx+0x45c56474],cl
  416978:	add    BYTE PTR [eax],al
  41697a:	adc    eax,0x31000015
  41697f:	imul   eax,DWORD PTR [edi],0x8158748b
  416985:	shl    DWORD PTR [eax],0x8b
  416988:	dec    ebx
  416989:	cld    
  41698a:	stos   BYTE PTR es:[edi],al
  41698b:	mov    edi,0x60843bfb
  416990:	jno    0x4169d8
  416992:	mov    edx,0x6c8bfbcf
  416997:	fs or  eax,0xbed33db7
  41699d:	cli    
  41699e:	cmp    eax,0x3c03fa91
  4169a3:	and    cl,BYTE PTR [ecx+0x4b89bd45]
  4169a9:	lock es popf 
  4169ac:	adc    al,0x41
  4169ae:	mov    al,0x72
  4169b0:	std    
  4169b1:	rdtsc  
  4169b3:	adc    al,0x87
  4169b5:	push   ebp
  4169b6:	cdq    
  4169b7:	mov    DWORD PTR [ebx+0x8],eax
  4169ba:	stos   BYTE PTR es:[edi],al
  4169bb:	(bad)  
  4169bc:	or     eax,DWORD PTR [ebx]
  4169be:	cmp    DWORD PTR [ecx+0x10baf853],ecx
  4169c4:	lsl    esi,sp
  4169c7:	add    ecx,DWORD PTR [ecx+0x5389294d]
  4169cd:	or     al,0x32
  4169cf:	add    ecx,DWORD PTR [ecx+0x48b694d]
  4169d5:	or     cl,BYTE PTR [edx-0x55]
  4169d8:	mov    DWORD PTR [ebp+0x29],edx
  4169db:	mov    DWORD PTR [ebx+0x8],eax
  4169de:	add    BYTE PTR [eax],al
  4169e0:	xor    dl,dl
  4169e2:	add    ecx,DWORD PTR [ecx+0x6be70bec]
  4169e8:	ds push ebp
  4169ea:	std    
  4169eb:	mov    ecx,DWORD PTR [edi+esi*4-0x40]
  4169ef:	int3   
  4169f0:	test   BYTE PTR [ecx+0x301583ec],cl
  4169f6:	mov    DWORD PTR [ebp+0x29],eax
  4169f9:	mov    eax,DWORD PTR [ebx-0x1c]
  4169fc:	stos   BYTE PTR es:[edi],al
  4169fd:	(bad)  
  4169fe:	jecxz  0x41698b
  416a00:	fs jo  0x416a04
  416a03:	push   ecx
  416a04:	inc    ebp
  416a05:	mov    edx,DWORD PTR [ebx-0x18]
  416a08:	stos   BYTE PTR es:[edi],al
  416a09:	into   
  416a0a:	out    0x8b,eax
  416a0c:	test   eax,0x31000093
  416a11:	mov    ecx,DWORD PTR [ebx-0x10]
  416a14:	mov    dl,0xd6
  416a16:	out    dx,eax
  416a17:	add    BYTE PTR [esi],ch
  416a19:	nop
  416a1a:	stc    
  416a1b:	add    BYTE PTR [ecx],dh
  416a1d:	adc    al,0x89
  416a1f:	push   ebp
  416a20:	cmp    DWORD PTR [ecx],edx
  416a22:	push   ebx
  416a23:	lock mov eax,0x748bdfbe
  416a29:	je     0x4169ac
  416a2b:	js     0x416a4e
  416a2d:	adc    al,0xd
  416a2f:	test   BYTE PTR [ebx+edx*1+0x141b0000],dl
  416a36:	push   0x0
  416a38:	stos   BYTE PTR es:[edi],al
  416a39:	(bad)  
  416a3a:	fisttp WORD PTR [ebx+0x51010bfc]
  416a40:	cmp    eax,0x15fcc2
  416a45:	add    cl,cl
  416a47:	mov    esi,0xcea8003e
  416a4c:	sti    
  416a4d:	mov    ebp,esp
  416a4f:	jae    0x4169d2
  416a51:	cmp    BYTE PTR [ecx],dh
  416a53:	loopne 0x416a6b
  416a55:	mov    esi,esp
  416a57:	jae    0x4169e2
  416a59:	push   ebp
  416a5a:	sub    DWORD PTR [ecx],edx
  416a5c:	jns    0x45caca5e
  416a62:	push   ecx
  416a63:	mov    BYTE PTR [ebx+0x8],cl
  416a66:	xor    cl,ah
  416a68:	jns    0x182ad25a
  416a6e:	stos   BYTE PTR es:[edi],al
  416a6f:	mov    esi,0x1c748bdf
  416a74:	add    DWORD PTR [edx+0x41],eax
  416a77:	popf   
  416a78:	inc    ebx
  416a79:	hlt    
  416a7a:	stos   BYTE PTR es:[edi],al
  416a7b:	loope  0x416a5c
  416a7d:	mov    edi,DWORD PTR [esp+ebx*1+0x1]
  416a81:	adc    DWORD PTR [eax+0x6cc7ebe9],edi
  416a87:	dec    esp
  416a88:	add    BYTE PTR [eax],al
  416a8a:	xor    DWORD PTR [ecx+ecx*4],edx
  416a8d:	inc    ebp
  416a8e:	adc    DWORD PTR [eax-0x37ceef88],ebx
  416a94:	or     al,0x8b
  416a96:	je     0x416acc
  416a98:	cmp    DWORD PTR [ecx],0xc704c831
  416a9e:	ins    BYTE PTR es:[edi],dx
  416a9f:	dec    esp
  416aa0:	(bad)  
  416aa1:	push   DWORD PTR [ecx]
  416aa3:	adc    al,0x89
  416aa5:	push   ebp
  416aa6:	mov    ebp,0x3a97
  416aab:	add    BYTE PTR [ebp-0x4b],al
  416aae:	mov    BYTE PTR [ebp-0x43],al
  416ab1:	lahf   
  416ab2:	or     BYTE PTR [ecx+0x1490],al
  416ab8:	mov    cl,0xc8
  416aba:	sbb    ecx,DWORD PTR [ebx+0x2894804]
  416ac0:	dec    esp
  416ac1:	push   ebx
  416ac2:	std    
  416ac3:	dec    DWORD PTR [esi]
  416ac5:	in     al,0x88
  416ac7:	dec    ebp
  416ac8:	test   ebp,esp
  416aca:	out    0xb5,eax
  416acc:	jl     0x416b21
  416ace:	std    
  416acf:	sub    DWORD PTR [ebp+0x1c],0xffffff87
  416ad3:	inc    ebp
  416ad4:	lea    edi,[edi]
  416ad6:	sbb    al,0x8b
  416ad8:	cld    
  416ad9:	inc    edi
  416ada:	mov    DWORD PTR [edx],eax
  416adc:	stos   BYTE PTR es:[edi],al
  416add:	loope  0x416ae6
  416adf:	(bad)  
  416ae0:	std    
  416ae1:	sbb    eax,DWORD PTR [edx]
  416ae3:	push   edx
  416ae4:	mov    edx,0x5950fbd9
  416ae9:	stos   DWORD PTR es:[edi],eax
  416aea:	sti    
  416aeb:	(bad)  
  416aec:	ds xchg edi,eax
  416aee:	les    ecx,FWORD PTR [eax]
  416af0:	test   al,0xd9
  416af2:	fisttp DWORD PTR [ebx+0x5589407c]
  416af8:	add    eax,0x748b0f9d
  416afd:	dec    eax
  416afe:	add    eax,0xf4439d2d
  416b04:	mov    edx,0xf083ebe0
  416b09:	pop    ss
  416b0a:	xchg   DWORD PTR [ebp+0xd],ecx
  416b0d:	aas    
  416b0e:	xchg   ebp,eax
  416b0f:	mov    eax,DWORD PTR [eax]
  416b11:	add    BYTE PTR [esp+esi*1-0x7f],bl
  416b15:	ret    0x9d45
  416b18:	push   ebx
  416b19:	loopne 0x416af3
  416b1b:	and    ebp,edi
  416b1d:	(bad)  
  416b1e:	ficomp WORD PTR [esi+0x5ff25de3]
  416b24:	int3   
  416b25:	int3   
  416b26:	fs lahf 
  416b28:	in     al,dx
  416b29:	adc    ebp,0x1b
  416b2c:	push   0xffd433f0
  416b31:	(bad)  
  416b32:	sbb    al,0x54
  416b34:	push   ebx
  416b35:	inc    ecx
  416b36:	xor    DWORD PTR [ebp+0x5019f843],ebx
  416b3c:	add    al,BYTE PTR [eax+0x31]
  416b3f:	lahf   
  416b40:	inc    ebx
  416b41:	clc    
  416b42:	add    DWORD PTR [esi+edi*1],edi
  416b45:	std    
  416b46:	mov    ss,WORD PTR [edx-0x7f]
  416b49:	les    edi,FWORD PTR [ecx]
  416b4b:	popf   
  416b4c:	inc    ebx
  416b4d:	cld    
  416b4e:	stos   BYTE PTR es:[edi],al
  416b4f:	loopne 0x416b60
  416b51:	push   ecx
  416b52:	stos   BYTE PTR es:[edi],al
  416b53:	call   0xd8fbbd63
  416b58:	pop    es
  416b59:	push   eax
  416b5a:	callw  0xf759
  416b5e:	push   esp
  416b5f:	lock ror ah,0x65
  416b63:	pop    edi
  416b64:	int3   
  416b65:	int3   
  416b66:	in     al,0x9e
  416b68:	in     al,dx
  416b69:	mov    eax,ds:0x3eea25
  416b6e:	ja     0x416b83
  416b70:	push   0x56281c8b
  416b75:	inc    ecx
  416b76:	add    BYTE PTR [eax],al
  416b78:	xor    DWORD PTR [ebx+0x55e30150],ebx
  416b7e:	mov    BYTE PTR [eax+0x34],dl
  416b81:	out    dx,eax
  416b82:	ror    ah,0xe5
  416b85:	pusha  
  416b86:	int3   
  416b87:	int3   
  416b88:	fs popf 
  416b8a:	in     al,dx
  416b8b:	adc    DWORD PTR ds:0x67109f21,0xffffffd3
  416b92:	dec    DWORD PTR [edx+0x3ec705e3]
  416b98:	mov    edx,0x38b2fd4
  416b9d:	sahf   
  416b9e:	sar    BYTE PTR [esi],cl
  416ba0:	stos   BYTE PTR es:[edi],al
  416ba1:	fmul   QWORD PTR [ebx]
  416ba3:	mov    eax,DWORD PTR [ebx]
  416ba5:	pushf  
  416ba6:	dec    ebx
  416ba7:	hlt    
  416ba8:	mov    edx,0x798bf3d7
  416bad:	and    BYTE PTR [edi+0x539db94d],al
  416bb3:	clc    
  416bb4:	test   al,0xe7
  416bb6:	sti    
  416bb7:	mov    eax,0x1430
  416bbc:	lods   al,BYTE PTR ds:[esi]
  416bbd:	push   esp
  416bbe:	je     0x416c04
  416bc0:	mov    dl,0xcf
  416bc2:	test   DWORD PTR [eax],0xc031181c
  416bc8:	call   0x4f9d:0x894d8910
  416bcf:	sbb    BYTE PTR [edx],bh
  416bd1:	out    0x7,eax
  416bd3:	jne    0x416bed
  416bd5:	popf   
  416bd6:	inc    ebx
  416bd7:	clc    
  416bd8:	mov    edx,0x890bdf
  416bdd:	add    cl,bh
  416bdf:	das    
  416be0:	mov    DWORD PTR [ebp+0x59],edx
  416be3:	popf   
  416be4:	inc    ebx
  416be5:	adc    BYTE PTR [eax+0x30b817d6],ch
  416beb:	adc    al,0x0
  416bed:	add    BYTE PTR [edx+0x2c],bl
  416bf0:	mov    DWORD PTR [ebp+0x39],ecx
  416bf3:	popf   
  416bf4:	jns    0x45cab7d6
  416bfa:	sub    DWORD PTR ds:0x189cfc43,ecx
  416c00:	xor    eax,eax
  416c02:	or     bl,BYTE PTR [eax]
  416c04:	jmp    0x8995cebc
  416c09:	in     eax,0x6c
  416c0b:	push   ebp
  416c0c:	int3   
  416c0d:	int3   
  416c0e:	cmc    
  416c0f:	pop    edi
  416c10:	int3   
  416c11:	int3   
  416c12:	in     eax,dx
  416c13:	pop    edi
  416c14:	int3   
  416c15:	int3   
  416c16:	in     eax,0x5f
  416c18:	int3   
  416c19:	int3   
  416c1a:	test   BYTE PTR [ebp+0x2bd583ec],bl
  416c20:	lds    eax,FWORD PTR [ebp-0x27]
  416c23:	adc    esi,DWORD PTR [eax]
  416c25:	add    BYTE PTR [ecx],dh
  416c27:	mov    esp,0x14710303
  416c2c:	lahf   
  416c2d:	cld    
  416c2e:	pop    esp
  416c2f:	sar    edi,cl
  416c31:	dec    edi
  416c32:	leave  
  416c33:	in     al,0xfb
  416c35:	push   DWORD PTR [esi-0x47f73b6c]
  416c3b:	(bad)  
  416c3c:	repz push 0xfffffff1
  416c3f:	pushf  
  416c40:	dec    ebx
  416c41:	clc    
  416c42:	add    BYTE PTR [eax],al
  416c44:	add    BYTE PTR [ebp-0x2d0323ed],bl
  416c4a:	dec    DWORD PTR [edx+0x6a4fe3f3]
  416c50:	xor    DWORD PTR [ecx+0x53],edx
  416c53:	hlt    
  416c54:	shl    BYTE PTR [edi+0x53],cl
  416c57:	inc    ecx
  416c58:	xor    DWORD PTR [ebp-0x2cfb2bc5],edx
  416c5e:	(bad)  
  416c5f:	(bad)  
  416c60:	fcomp  QWORD PTR [eax]
  416c62:	mov    eax,0x143102
  416c67:	jmp    0x416c34
  416c69:	pushf  
  416c6a:	or     eax,DWORD PTR [eax]
  416c6c:	xor    edx,esp
  416c6e:	dec    DWORD PTR [eax+0x6843f4]
  416c74:	in     al,0x12
  416c76:	add    BYTE PTR [eax+0x31],ch
  416c79:	push   ss
  416c7a:	inc    eax
  416c7b:	add    BYTE PTR [edx+0x7055d429],bh
  416c81:	adc    al,0x7f
  416c83:	ret    0x1231
  416c86:	add    BYTE PTR [eax],al
  416c88:	cmp    DWORD PTR [esi+ebx*4],0xfffffffe
  416c8c:	push   cs
  416c8d:	push   eax
  416c8e:	add    esp,0x2008c35
  416c94:	jno    0x416caa
  416c96:	sub    eax,DWORD PTR [eax]
  416c98:	xor    edx,DWORD PTR [eax+eax*1]
  416c9b:	mov    edi,DWORD PTR [eax+ebp*2]
  416c9e:	push   ebx
  416c9f:	inc    ecx
  416ca0:	xor    ebx,edi
  416ca2:	(bad)  
  416ca3:	mov    DWORD PTR [eax+ebx*1],ebp
  416ca6:	push   esi
  416ca7:	inc    ecx
  416ca8:	add    BYTE PTR [eax],al
  416caa:	xor    DWORD PTR [ebx-0x2a98fbed],ebx
  416cb0:	call   DWORD PTR [ecx-0x70]
  416cb3:	push   0xe4314153
  416cb8:	mov    BYTE PTR [ebp-0x3f],cl
  416cbb:	in     eax,0xe7
  416cbd:	popf   
  416cbe:	lods   eax,DWORD PTR ds:[esi]
  416cbf:	dec    edi
  416cc0:	std    
  416cc1:	sub    DWORD PTR [ebp+0x20],0xffffff89
  416cc5:	adc    eax,0x3ee985
  416cca:	xor    ch,cl
  416ccc:	pop    es
  416ccd:	mov    esp,esp
  416ccf:	cmp    ecx,DWORD PTR [ecx-0x1db066ab]
  416cd5:	mov    edx,DWORD PTR [ecx+esi*8+0x6065ccc0]
  416cdc:	int3   
  416cdd:	int3   
  416cde:	add    al,0x9b
  416ce0:	in     al,dx
  416ce1:	mov    ebp,esp
  416ce3:	sbb    edi,DWORD PTR [ecx]
  416ce5:	inc    ebp
  416ce6:	sub    eax,0xec8b04c3
  416ceb:	sbb    ebp,ecx
  416ced:	add    eax,0x4589135a
  416cf2:	xor    eax,0x6dccc0f1
  416cf7:	pusha  
  416cf8:	int3   
  416cf9:	int3   
  416cfa:	gs pusha 
  416cfc:	int3   
  416cfd:	int3   
  416cfe:	test   BYTE PTR [ebx+0x1583ec],bl
  416d04:	lds    eax,FWORD PTR [ebp+0x1d]
  416d07:	adc    al,0x70
  416d09:	add    DWORD PTR [ecx],esi
  416d0b:	fwait
  416d0c:	inc    ebx
  416d0d:	or     BYTE PTR [eax],al
  416d0f:	add    BYTE PTR [eax+0x748bd7d8],bh
  416d15:	ins    BYTE PTR es:[edi],dx
  416d16:	mov    DWORD PTR [ebp+0x29],edx
  416d19:	adc    ecx,DWORD PTR [edi+0x3c]
  416d1c:	test   al,0xe8
  416d1e:	fisttp WORD PTR [ebx-0x48f2cb8c]
  416d24:	jns    0x416d4e
  416d26:	mov    DWORD PTR [ebp-0x2f],edx
  416d29:	mov    al,ds:0x9d390a44
  416d2e:	inc    ebx
  416d2f:	call   0x4042958d
  416d34:	xor    DWORD PTR [ebx-0x2a9b03f5],ebx
  416d3a:	call   DWORD PTR [eax-0x37]
  416d3d:	fdivp  st(0),st
  416d3f:	jmp    FWORD PTR [esi-0x47f73b6e]
  416d45:	fsubr  st,st(7)
  416d47:	push   0xfffffff1
  416d49:	mov    ebx,0x14312fff
  416d4e:	push   0x150100
  416d53:	push   0x31
  416d55:	dec    edi
  416d56:	push   ebx
  416d57:	lock test al,0xd8
  416d5a:	jecxz  0x416ce7
  416d5c:	fdiv   QWORD PTR [ebx]
  416d5e:	mov    DWORD PTR [edx+0x5],eax
  416d61:	in     al,0x88
  416d63:	dec    ebp
  416d64:	cmp    ebp,esp
  416d66:	mov    BYTE PTR [ebp+0x55],dl
  416d69:	loope  0x416d52
  416d6b:	rcl    DWORD PTR [esi+ecx*2-0x3],0x83
  416d70:	jne    0x416d91
  416d72:	lds    eax,FWORD PTR [ebp+0x0]
  416d75:	add    BYTE PTR ds:0x31000013,bh
  416d7b:	cmp    eax,DWORD PTR [edi]
  416d7d:	mov    ebp,esp
  416d7f:	inc    edi
  416d80:	add    eax,0xf4439b30
  416d86:	mov    edx,0xe60fdfdf
  416d8b:	jecxz  0x416d92
  416d8d:	cmp    DWORD PTR [eax+ecx*2+0x71],edi
  416d91:	pop    ecx
  416d92:	mov    edx,0x8983e7d7
  416d97:	sub    BYTE PTR [eax],al
  416d99:	je     0x416e0f
  416d9b:	cdq    
  416d9c:	dec    ebx
  416d9d:	call   0x513954
  416da2:	adc    BYTE PTR gs:[ecx+0x4299d955],cl
  416da9:	adc    BYTE PTR [edx-0x7f742021],ch
  416daf:	adc    BYTE PTR [ebx-0x76b2debc],cl
  416db5:	dec    ebp
  416db6:	rol    DWORD PTR [ecx],1
  416db8:	shl    bh,cl
  416dba:	inc    eax
  416dbb:	adc    BYTE PTR [ecx-0x52e22eab],cl
  416dc1:	inc    edx
  416dc2:	ins    DWORD PTR es:[edi],dx
  416dc3:	in     al,0x88
  416dc5:	inc    ebp
  416dc6:	cdq    
  416dc7:	cdq    
  416dc8:	dec    ebx
  416dc9:	or     BYTE PTR [edx],dh
  416dcb:	fcom   QWORD PTR [ebx]
  416dcd:	push   ecx
  416dce:	stos   BYTE PTR es:[edi],al
  416dcf:	out    0xe7,eax
  416dd1:	mov    esi,esp
  416dd3:	aaa    
  416dd4:	add    DWORD PTR [edx+0x35],eax
  416dd7:	in     al,0xe7
  416dd9:	push   ebp
  416dda:	add    BYTE PTR [eax],al
  416ddc:	jl     0x416e2b
  416dde:	std    
  416ddf:	sub    DWORD PTR [ebp+0x20],0xffffff89
  416de3:	dec    ebp
  416de4:	pop    ecx
  416de5:	xchg   ecx,eax
  416de6:	mov    edi,0xe7dfb828
  416deb:	jmp    0x416db0
  416ded:	cdq    
  416dee:	push   ebx
  416def:	in     al,0x3
  416df1:	cmp    al,0xe
  416df3:	cld    
  416df4:	dec    esi
  416df5:	dec    ebp
  416df6:	add    esp,0x323bc2d
  416dfc:	icebp  
  416dfd:	adc    ebx,DWORD PTR [edi-0x2d2304]
  416e03:	dec    edi
  416e04:	sbb    DWORD PTR [ecx-0x6ed90006],ebx
  416e0a:	les    ecx,FWORD PTR [eax]
  416e0c:	test   al,0xd6
  416e0e:	fild   DWORD PTR [ebx+0x41534c54]
  416e14:	xor    DWORD PTR [ebx+esi*2],edx
  416e17:	or     bh,BYTE PTR [edx+0x7055f01e]
  416e1d:	adc    al,0x4f
  416e1f:	call   FWORD PTR [eax+esi*2-0x7f]
  416e23:	cmp    eax,0x3ee6e9
  416e28:	xor    edi,eax
  416e2a:	sbb    ebp,DWORD PTR [edx+0x71]
  416e2d:	mov    esp,0x14312fff
  416e32:	mov    DWORD PTR [ebp-0x33],edx
  416e35:	loope  0x416dbf
  416e37:	inc    ebp
  416e38:	rcr    DWORD PTR [eax+0x4d603448],1
  416e3e:	push   ebx
  416e3f:	lock add BYTE PTR [eax],al
  416e42:	xchg   edx,eax
  416e43:	addr16 push ebx
  416e45:	inc    ecx
  416e46:	xor    DWORD PTR [ecx],edi
  416e48:	adc    ebp,DWORD PTR [edx-0xf]
  416e4b:	mov    ebx,0x14312fff
  416e50:	mov    DWORD PTR [ebp-0x6b],edx
  416e53:	loope  0x416ebe
  416e55:	add    BYTE PTR [esi+0x5da3efe6],cl
  416e5b:	out    0x3e,al
  416e5d:	add    BYTE PTR [edx-0xfaa2bf2],dh
  416e63:	adc    eax,DWORD PTR [eax]
  416e65:	jne    0x416eab
  416e67:	mov    edx,0x431683f
  416e6c:	add    BYTE PTR [eax],al
  416e6e:	stos   BYTE PTR es:[edi],al
  416e6f:	(bad)  
  416e70:	sti    
  416e71:	push   eax
  416e72:	retf   
  416e73:	adc    edi,ebp
  416e75:	push   ebp
  416e76:	inc    ecx
  416e77:	jo     0x416e4d
  416e79:	push   ebp
  416e7a:	lock adc ecx,DWORD PTR [ecx+0x4b9a554d]
  416e81:	fsubr  DWORD PTR [edx+0x748bd7e6]
  416e87:	ins    BYTE PTR es:[edi],dx
  416e88:	add    DWORD PTR [edx+0x65],eax
  416e8b:	popf   
  416e8c:	inc    ebx
  416e8d:	loopne 0x416e39
  416e8f:	(bad)  
  416e91:	mov    eax,DWORD PTR [eax+0x748b51e4]
  416e97:	xor    BYTE PTR [eax-0x75],dl
  416e9a:	xor    al,0x60
  416e9c:	push   ebx
  416e9d:	inc    ecx
  416e9e:	xor    ebp,esp
  416ea0:	out    0x91,eax
  416ea2:	cmc    
  416ea3:	dec    ebx
  416ea4:	std    
  416ea5:	add    DWORD PTR [eax],0x0
  416ea8:	cmc    
  416ea9:	sbb    BYTE PTR [ecx-0x45682eab],cl
  416eaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416eb0:	xor    DWORD PTR [eax+eax*1],edx
  416eb3:	add    BYTE PTR [ebp+0xd],bl
  416eb6:	mov    DWORD PTR [ebp-0x2f],eax
  416eb9:	lahf   
  416eba:	dec    ebx
  416ebb:	fdiv   DWORD PTR [edx]
  416ebd:	pushf  
  416ebe:	mov    al,ds:0x87143100
  416ec3:	dec    ebp
  416ec4:	lds    ebx,FWORD PTR [edi+0x60d0e053]
  416eca:	push   ebx
  416ecb:	inc    ecx
  416ecc:	xor    edi,edi
  416ece:	inc    ecx
  416ecf:	xor    al,0xd2
  416ed1:	adc    BYTE PTR [esi+0x41],dl
  416ed4:	xor    DWORD PTR [edi-0x2b18fbf5],ebx
  416eda:	call   DWORD PTR [eax-0x46]
  416edd:	and    esp,edx
  416edf:	push   ebp
  416ee0:	lock adc edx,DWORD PTR [edx-0x75]
  416ee4:	in     al,dx
  416ee5:	aaa    
  416ee6:	push   eax
  416ee7:	call   0x3ebcd9
  416eec:	mov    dl,0x50
  416eee:	or     al,0x8b
  416ef0:	in     al,dx
  416ef1:	xor    ecx,DWORD PTR [ecx+0x3ee17d15]
  416ef7:	add    BYTE PTR [edx],dh
  416ef9:	in     eax,0x27
  416efb:	mov    DWORD PTR [eax+eiz*1],ebx
  416efe:	push   esi
  416eff:	inc    ecx
  416f00:	xor    DWORD PTR [edi-0x2b2307c5],edx
  416f06:	(bad)  
  416f07:	jmp    DWORD PTR [eax+edi*8+0xd49e]
  416f0e:	jl     0x416ee5
  416f10:	dec    DWORD PTR [edi-0x56]
  416f13:	sbb    BYTE PTR [esi+edx*2],dl
  416f16:	jo     0x416f2c
  416f18:	dec    edi
  416f19:	mov    esp,DWORD PTR [esp+eax*2]
  416f1c:	push   ebx
  416f1d:	inc    ecx
  416f1e:	xor    esi,esp
  416f20:	out    0x75,eax
  416f22:	std    
  416f23:	dec    edx
  416f24:	std    
  416f25:	sub    ebp,0x17
  416f28:	lahf   
  416f29:	aam    0x84
  416f2b:	aad    0xff
  416f2d:	dec    edi
  416f2e:	(bad)  
  416f30:	idiv   bh
  416f32:	ficom  WORD PTR [esi-0x4c35fb3c]
  416f38:	addr16 xor al,0x32
  416f3b:	aam    0xff
  416f3d:	mov    dh,BYTE PTR [eax+ecx*2]
  416f40:	push   ebx
  416f41:	inc    ecx
  416f42:	xor    ebp,esp
  416f44:	out    0x51,eax
  416f46:	mov    eax,0x7583fd4a
  416f4b:	sbb    eax,DWORD PTR [edi+0x139e7d45]
  416f51:	aam    0x4
  416f53:	aad    0xff
  416f55:	push   ecx
  416f56:	stos   BYTE PTR es:[edi],al
  416f57:	rcr    bh,1
  416f59:	mov    edi,DWORD PTR [eax+eiz*2]
  416f5c:	push   ebx
  416f5d:	inc    ecx
  416f5e:	xor    DWORD PTR [edi],edx
  416f60:	dec    eax
  416f61:	sub    al,ah
  416f63:	sahf   
  416f64:	adc    esi,eax
  416f66:	(bad)  
  416f68:	call   DWORD PTR [ecx+0x59]
  416f6b:	(bad)  
  416f6c:	sti    
  416f6d:	jmp    DWORD PTR [esi-0x6a]
  416f70:	les    ecx,FWORD PTR [eax+eax*1]
  416f73:	add    BYTE PTR [eax+0x31415343],dl
  416f79:	adc    DWORD PTR [eax+0x53],edx
  416f7c:	xor    BYTE PTR [ecx+eiz*4],dl
  416f7f:	sbb    al,0xdf
  416f81:	aam    0xff
  416f83:	mov    esp,gs
  416f85:	dec    ebx
  416f86:	dec    edi
  416f87:	push   0xfffffff1
  416f89:	mov    ebp,0x28448b05
  416f8e:	push   esi
  416f8f:	inc    ecx
  416f90:	xor    esi,esp
  416f92:	cld    
  416f93:	push   ebp
  416f94:	add    eax,0x16fbe23d
  416f99:	dec    edx
  416f9a:	mov    eax,0x143101
  416f9f:	mov    ecx,DWORD PTR [eax+ebp*8]
  416fa2:	rol    DWORD PTR [ecx+esi*1],0x58
  416fa6:	int3   
  416fa7:	int3   
  416fa8:	in     eax,0x58
  416faa:	int3   
  416fab:	int3   
  416fac:	test   BYTE PTR [ebp+0x1c6c8bec],bl
  416fb2:	mov    DWORD PTR [eax-0x23],eax
  416fb5:	out    0xc0,eax
  416fb7:	int3   
  416fb8:	in     eax,0x58
  416fba:	int3   
  416fbb:	int3   
  416fbc:	fs popf 
  416fbe:	in     al,dx
  416fbf:	push   ebx
  416fc0:	pop    edi
  416fc1:	loope  0x416f4b
  416fc3:	cmp    eax,0x3edfd1
  416fc8:	stos   BYTE PTR es:[edi],al
  416fc9:	daa    
  416fca:	in     al,dx
  416fcb:	push   ebp
  416fcc:	lock adc ecx,DWORD PTR [ecx+0x3edf8935]
  416fd3:	add    dh,bh
  416fd5:	jmp    0x41cd32
  416fda:	jb     0x417034
  416fdc:	int3   
  416fdd:	int3   
  416fde:	in     al,0x9c
  416fe0:	in     al,dx
  416fe1:	push   ecx
  416fe2:	sbb    eax,edx
  416fe4:	add    BYTE PTR [eax+0x31],al
  416fe7:	jae    0x416fe5
  416fe9:	push   ebp
  416fea:	lock adc edx,DWORD PTR [eax-0x18]
  416fee:	popf   
  416fef:	dec    esp
  416ff0:	std    
  416ff1:	push   DWORD PTR [edx-0xb76f7b0]
  416ff7:	inc    edi
  416ff8:	mov    DWORD PTR [ebp+0x29],ecx
  416ffb:	jecxz  0x417066
  416ffd:	add    BYTE PTR [edx-0xfa9e7e1],bh
  417003:	adc    edx,DWORD PTR [edx-0x1]
  417006:	in     al,0x47
  417008:	mov    ebp,esp
  41700a:	aam    0x54
  41700c:	int3   
  41700d:	int3   
  41700e:	test   BYTE PTR [ebp-0xfea7c14],bl
  417014:	les    eax,FWORD PTR [ebp+0x19]
  417017:	adc    al,0x0
  417019:	add    BYTE PTR [ecx],dh
  41701b:	push   ecx
  41701c:	inc    ebx
  41701d:	fmul   QWORD PTR [ecx-0x11ffffec]
  417023:	into   
  417024:	repz add DWORD PTR [ecx],esi
  417027:	adc    al,0x0
  417029:	(bad)  
  41702a:	ins    BYTE PTR es:[edi],dx
  41702b:	dec    eax
  41702c:	add    BYTE PTR [eax],al
  41702e:	xor    DWORD PTR [eax*8+0x13cd45],edx
  417035:	add    BYTE PTR [ecx],dh
  417037:	popf   
  417038:	dec    ebx
  417039:	or     BYTE PTR [eax+0x55f016],ch
  41703f:	add    BYTE PTR [eax+0x14],dh
  417042:	call   0xfd8a2ef0
  417047:	mov    eax,ds:0x3edec1
  41704c:	or     al,0x49
  41704e:	std    
  41704f:	add    BYTE PTR [ecx],dh
  417051:	ror    BYTE PTR [ebx],0xc7
  417054:	sub    al,0x4c
  417056:	push   ebx
  417057:	inc    ecx
  417058:	xor    DWORD PTR [eax+eax*1],edx
  41705b:	add    BYTE PTR [ecx],dh
  41705d:	cmp    eax,0x4c34c70a
  417062:	push   ebx
  417063:	inc    ecx
  417064:	xor    DWORD PTR [ebx],edx
  417066:	add    BYTE PTR [eax],al
  417068:	xor    DWORD PTR [ebp-0x2d230fc5],edx
  41706e:	(bad)  
  41706f:	jmp    esp
  417071:	sbb    eax,0xde6905c5
  417076:	add    BYTE PTR ds:[ecx],dh
  417079:	adc    al,0x0
  41707b:	add    BYTE PTR [edx-0xfaa07fa],dh
  417081:	adc    eax,DWORD PTR [eax]
  417083:	jne    0x4170b9
  417085:	mov    esi,0x5424feff
  41708a:	push   ebx
  41708b:	inc    ecx
  41708c:	xor    DWORD PTR [ebp-0x10],esi
  41708f:	push   ebp
  417090:	jo     0x4170a6
  417092:	mov    DWORD PTR ds:0x3ee221,ecx
  417098:	test   al,0xd9
  41709a:	out    0x8b,eax
  41709c:	cmp    al,0x44
  41709e:	push   ebx
  41709f:	inc    ecx
  4170a0:	xor    DWORD PTR [ebx+0xe843],ebx
  4170a6:	xor    dl,dl
  4170a8:	cmp    ecx,DWORD PTR [ecx+0x4d893c74]
  4170ae:	or     DWORD PTR [esi-0x2a7b23f5],ebx
  4170b4:	jmp    DWORD PTR [edi-0x7f]
  4170b7:	adc    eax,DWORD PTR [eax+0x0]
  4170ba:	fisub  WORD PTR [ecx]
  4170bc:	rcl    BYTE PTR [ebp+0x70],0x14
  4170c0:	mov    eax,ds:0xffd564fc
  4170c5:	(bad)  
  4170c6:	sub    al,0x18
  4170c8:	push   esi
  4170c9:	inc    ecx
  4170ca:	xor    ecx,eax
  4170cc:	add    BYTE PTR [eax+0x31],al
  4170cf:	mov    esp,0x13f1035f
  4170d4:	mov    DWORD PTR ds:0x3ee1a5,edx
  4170da:	add    edi,DWORD PTR [edx+eax*8]
  4170dd:	not    DWORD PTR [esi+0x39c48147]
  4170e3:	jae    0x4170ed
  4170e5:	push   esi
  4170e6:	lock adc edi,ebp
  4170e9:	adc    eax,0x3ede29
  4170ee:	shr    BYTE PTR [esi+edx*2],cl
  4170f1:	inc    ecx
  4170f2:	xor    DWORD PTR [ebp+0xc],esi
  4170f5:	push   esi
  4170f6:	lock adc edx,DWORD PTR [eax-0x18]
  4170fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4170fb:	inc    esi
  4170fc:	std    
  4170fd:	push   DWORD PTR [edx-0xb76fbb0]
  417103:	inc    ebx
  417104:	mov    DWORD PTR [ebp+0x41],ecx
  417107:	in     eax,0xe7
  417109:	aad    0x0
  41710b:	add    BYTE PTR [edi],bh
  41710d:	inc    edi
  41710e:	std    
  41710f:	sub    DWORD PTR [ebp+0x10],0xffffffa1
  417113:	hlt    
  417114:	test   ch,dl
  417116:	dec    DWORD PTR [edx+0x6a52447c]
  41711c:	xor    DWORD PTR [ebp-0xc],esi
  41711f:	push   ebp
  417120:	jo     0x417136
  417122:	push   eax
  417123:	call   0x3eafd5
  417128:	mov    dl,0x4f
  41712a:	or     al,0x8b
  41712c:	ins    BYTE PTR es:[edi],dx
  41712d:	inc    esp
  41712e:	xchg   DWORD PTR [ebp+0x11],ecx
  417131:	fwait
  417132:	push   ebx
  417133:	cld    
  417134:	sub    ah,cl
  417136:	out    dx,eax
  417137:	jae    0x4170c4
  417139:	fwait
  41713a:	inc    ebx
  41713b:	loopne 0x4170be
  41713d:	fwait
  41713e:	dec    ebx
  41713f:	fadd   QWORD PTR [eax-0x310451c4]
  417145:	inc    esi
  417146:	add    esp,0x56007339
  41714c:	jo     0x417162
  41714e:	mov    DWORD PTR ds:0x3ede31,edx
  417154:	add    esi,DWORD PTR [ebp+0xc]
  417157:	push   esi
  417158:	lock adc eax,DWORD PTR [ecx]
  41715b:	inc    ebp
  41715c:	xchg   ebp,eax
  41715d:	jecxz  0x4170e7
  41715f:	or     eax,0x3ee09d
  417164:	xor    bl,cl
  417166:	sti    
  417167:	push   ecx
  417168:	cdq    
  417169:	pop    esi
  41716a:	idiv   edi
  41716c:	jle    0x417100
  41716e:	les    ecx,FWORD PTR [eax+eax*1]
  417171:	add    BYTE PTR [edx+0x403f3e0],ch
  417177:	push   0x9c4d5501
  41717c:	push   ebx
  41717d:	in     al,0xaa
  41717f:	sar    bl,1
  417181:	add    ebp,esp
  417183:	xchg   DWORD PTR [di+0x4d],eax
  417187:	call   0x5600:0x191ae04b
  41718e:	lock adc eax,DWORD PTR [edi-0x61c5aeb3]
  417195:	(bad)  
  417196:	je     0x4171e4
  417198:	add    BYTE PTR [eax],al
  41719a:	xor    DWORD PTR [ecx+ebp*8],edx
  41719d:	or     DWORD PTR [edx-0xc7c0821],ebp
  4171a3:	adc    BYTE PTR [edi+0x439a0955],al
  4171a9:	clc    
  4171aa:	dec    edx
  4171ab:	iret   
  4171ac:	out    dx,eax
  4171ad:	jae    0x4171e8
  4171af:	cdq    
  4171b0:	or     esi,esp
  4171b2:	pop    esp
  4171b3:	sar    edi,cl
  4171b5:	add    bh,BYTE PTR [esp+ecx*2-0x77]
  4171b9:	adc    DWORD PTR [edx],esi
  4171bb:	fcomip st,st(7)
  4171bd:	mov    eax,ds:0x3edfe5
  4171c2:	xor    cl,bh
  4171c4:	test   DWORD PTR [ecx-0x7b466df],0x3e753b0
  4171ce:	xor    DWORD PTR [ecx+ecx*4],edx
  4171d1:	adc    eax,0x3edfbd
  4171d6:	add    BYTE PTR [eax],al
  4171d8:	xor    bl,bh
  4171da:	div    DWORD PTR [ebx]
  4171dc:	cmp    esi,DWORD PTR [ebx-0xc]
  4171df:	push   ebp
  4171e0:	lock adc eax,DWORD PTR [ecx]
  4171e3:	inc    ebp
  4171e4:	cdq    
  4171e5:	fwait
  4171e6:	or     bl,ch
  4171e8:	(bad)  
  4171e9:	fwait
  4171ea:	sub    esp,esp
  4171ec:	(bad)  
  4171ee:	dec    DWORD PTR [eax+0x4153343c]
  4171f4:	xor    DWORD PTR [ecx],eax
  4171f6:	(bad)  
  4171f7:	mov    DWORD PTR [esp+ebp*2],esp
  4171fa:	push   ebx
  4171fb:	inc    ecx
  4171fc:	xor    DWORD PTR [ecx],eax
  4171fe:	(bad)  
  4171ff:	mov    DWORD PTR [eax+edi*1],edi
  417202:	push   ebx
  417203:	inc    ecx
  417204:	xor    DWORD PTR [esi+ecx*2],edi
  417207:	test   DWORD PTR [esi+0x45],0xded60d8b
  41720e:	add    BYTE PTR ds:[eax+0x31b9f7d7],ch
  417215:	adc    al,BYTE PTR [eax+0x0]
  417218:	mov    al,0x3a
  41721a:	add    BYTE PTR [edx],al
  41721c:	xor    DWORD PTR [ecx+ecx*4],edx
  41721f:	push   ebp
  417220:	sbb    ecx,edi
  417222:	into   
  417223:	mov    DWORD PTR [esp+edi*1],edi
  417226:	push   ebx
  417227:	inc    ecx
  417228:	xor    DWORD PTR [ebx-0x18],esi
  41722b:	push   ebp
  41722c:	jo     0x417242
  41722e:	push   eax
  41722f:	call   0x3ebc69
  417234:	mov    dl,0x4f
  417236:	add    al,0x8b
  417238:	cmp    al,0x40
  41723a:	push   ebx
  41723b:	inc    ecx
  41723c:	add    BYTE PTR [eax],al
  41723e:	xor    ebx,esp
  417240:	out    0xd5,eax
  417242:	fild   DWORD PTR [ebp+edi*8-0x7b]
  417246:	icebp  
  417247:	mov    esi,0x38f13303
  41724c:	sub    cl,BYTE PTR [ebx+0x4153300c]
  417252:	xor    DWORD PTR [ecx+0x6b204c4],edx
  417258:	clc    
  417259:	push   ebp
  41725a:	lock adc eax,DWORD PTR [eax]
  41725d:	je     0x417297
  41725f:	jae    0x417235
  417261:	push   ebp
  417262:	lock adc eax,DWORD PTR [edi-0x17efb2bc]
  417269:	pop    ebp
  41726a:	mov    WORD PTR [ebp+edi*8-0x75],es
  41726e:	sbb    al,0x20
  417270:	push   esi
  417271:	inc    ecx
  417272:	xor    edx,esp
  417274:	shl    BYTE PTR [ebx],0x71
  417277:	cwde   
  417278:	jecxz  0x4172d7
  41727a:	jb     0x4172d3
  41727c:	int3   
  41727d:	int3   
  41727e:	xor    DWORD PTR [eax+eax*1],edx
  417281:	add    BYTE PTR [ecx],dh
  417283:	adc    al,0x0
  417285:	add    BYTE PTR [ecx],dh
  417287:	adc    al,0x0
  417289:	add    BYTE PTR [ecx],dh
  41728b:	adc    al,0x0
  41728d:	add    BYTE PTR [ecx],dh
  41728f:	adc    al,0x0
  417291:	add    BYTE PTR [ecx],dh
  417293:	adc    al,0x0
  417295:	add    BYTE PTR [ecx],dh
  417297:	adc    al,0x0
  417299:	add    BYTE PTR [ecx],dh
  41729b:	adc    al,0x0
  41729d:	add    BYTE PTR [ecx],dh
  41729f:	adc    al,0x0
  4172a1:	add    BYTE PTR [eax],al
  4172a3:	add    BYTE PTR [ecx],dh
  4172a5:	adc    al,0x0
  4172a7:	add    BYTE PTR [ecx],dh
  4172a9:	adc    al,0x0
  4172ab:	add    BYTE PTR [ecx],dh
  4172ad:	adc    al,0x0
  4172af:	add    BYTE PTR [ecx],dh
  4172b1:	adc    al,0x0
  4172b3:	add    BYTE PTR [ecx],dh
  4172b5:	adc    al,0x0
  4172b7:	add    BYTE PTR [ecx],dh
  4172b9:	adc    al,0x0
  4172bb:	add    BYTE PTR [ecx],dh
  4172bd:	adc    al,0x0
  4172bf:	add    BYTE PTR [ecx],dh
  4172c1:	adc    al,0x0
  4172c3:	add    BYTE PTR [ecx],dh
  4172c5:	adc    al,0x0
  4172c7:	add    BYTE PTR [ecx],dh
  4172c9:	adc    al,0x0
  4172cb:	add    BYTE PTR [ecx],dh
  4172cd:	adc    al,0x0
  4172cf:	add    BYTE PTR [ecx],dh
  4172d1:	adc    al,0x0
  4172d3:	add    BYTE PTR [ecx],dh
  4172d5:	adc    al,0x0
  4172d7:	add    BYTE PTR [ecx],dh
  4172d9:	adc    al,0x0
  4172db:	add    BYTE PTR [ecx],dh
  4172dd:	adc    al,0x0
  4172df:	add    BYTE PTR [ecx],dh
  4172e1:	adc    al,0x0
  4172e3:	add    BYTE PTR [ecx],dh
  4172e5:	adc    al,0x0
  4172e7:	add    BYTE PTR [ecx],dh
  4172e9:	adc    al,0x0
  4172eb:	add    BYTE PTR [ecx],dh
  4172ed:	adc    al,0x0
  4172ef:	add    BYTE PTR [ecx],dh
  4172f1:	adc    al,0x0
  4172f3:	add    BYTE PTR [ecx],dh
  4172f5:	adc    al,0x0
  4172f7:	add    BYTE PTR [ecx],dh
  4172f9:	adc    al,0x0
  4172fb:	add    BYTE PTR [ecx],dh
  4172fd:	adc    al,0x0
  4172ff:	add    BYTE PTR [ecx],dh
  417301:	adc    al,0x0
  417303:	add    BYTE PTR [ecx],dh
  417305:	adc    al,0x0
  417307:	add    BYTE PTR [eax],al
  417309:	add    BYTE PTR [ecx],dh
  41730b:	adc    al,0x0
  41730d:	add    BYTE PTR [ecx],dh
  41730f:	adc    al,0x0
  417311:	add    BYTE PTR [ecx],dh
  417313:	adc    al,0x0
  417315:	add    BYTE PTR [ecx],dh
  417317:	adc    al,0x0
  417319:	add    BYTE PTR [ecx],dh
  41731b:	adc    al,0x0
  41731d:	add    BYTE PTR [ecx],dh
  41731f:	adc    al,0x0
  417321:	add    BYTE PTR [ecx],dh
  417323:	adc    al,0x0
  417325:	add    BYTE PTR [ecx],dh
  417327:	adc    al,0x0
  417329:	add    BYTE PTR [ecx],dh
  41732b:	adc    al,0x0
  41732d:	add    BYTE PTR [ecx],dh
  41732f:	adc    al,0x0
  417331:	add    BYTE PTR [ecx],dh
  417333:	adc    al,0x0
  417335:	add    BYTE PTR [ecx],dh
  417337:	adc    al,0x0
  417339:	add    BYTE PTR [ecx],dh
  41733b:	adc    al,0x0
  41733d:	add    BYTE PTR [ecx],dh
  41733f:	adc    al,0x0
  417341:	add    BYTE PTR [ecx],dh
  417343:	adc    al,0x0
  417345:	add    BYTE PTR [ecx],dh
  417347:	adc    al,0x0
  417349:	add    BYTE PTR [ecx],dh
  41734b:	adc    al,0x0
  41734d:	add    BYTE PTR [ecx],dh
  41734f:	adc    al,0x0
  417351:	add    BYTE PTR [ecx],dh
  417353:	adc    al,0x0
  417355:	add    BYTE PTR [ecx],dh
  417357:	adc    al,0x0
  417359:	add    BYTE PTR [ecx],dh
  41735b:	adc    al,0x0
  41735d:	add    BYTE PTR [ecx],dh
  41735f:	adc    al,0x0
  417361:	add    BYTE PTR [ecx],dh
  417363:	adc    al,0x0
  417365:	add    BYTE PTR [ecx],dh
  417367:	adc    al,0x0
  417369:	add    BYTE PTR [ecx],dh
  41736b:	adc    al,0x0
  41736d:	add    BYTE PTR [eax],al
  41736f:	add    BYTE PTR [ecx],dh
  417371:	adc    al,0x0
  417373:	add    BYTE PTR [ecx],dh
  417375:	adc    al,0x0
  417377:	add    BYTE PTR [ecx],dh
  417379:	adc    al,0x0
  41737b:	add    BYTE PTR [ecx],dh
  41737d:	adc    al,0x0
  41737f:	add    BYTE PTR [ecx],dh
  417381:	adc    al,0x0
  417383:	add    BYTE PTR [ecx],dh
  417385:	adc    al,0x0
  417387:	add    BYTE PTR [ecx],dh
  417389:	adc    al,0x0
  41738b:	add    BYTE PTR [ecx],dh
  41738d:	adc    al,0x0
  41738f:	add    BYTE PTR [ecx],dh
  417391:	adc    al,0x0
  417393:	add    BYTE PTR [ecx],dh
  417395:	adc    al,0x0
  417397:	add    BYTE PTR [ecx],dh
  417399:	adc    al,0x0
  41739b:	add    BYTE PTR [ecx],dh
  41739d:	adc    al,0x0
  41739f:	add    BYTE PTR [ecx],dh
  4173a1:	adc    al,0x0
  4173a3:	add    BYTE PTR [ecx],dh
  4173a5:	adc    al,0x0
  4173a7:	add    BYTE PTR [ecx],dh
  4173a9:	adc    al,0x0
  4173ab:	add    BYTE PTR [ecx],dh
  4173ad:	adc    al,0x0
  4173af:	add    BYTE PTR [ecx],dh
  4173b1:	adc    al,0x0
  4173b3:	add    BYTE PTR [ecx],dh
  4173b5:	adc    al,0x0
  4173b7:	add    BYTE PTR [ecx],dh
  4173b9:	adc    al,0x0
  4173bb:	add    BYTE PTR [ecx],dh
  4173bd:	adc    al,0x0
  4173bf:	add    BYTE PTR [ecx],dh
  4173c1:	adc    al,0x0
  4173c3:	add    BYTE PTR [ecx],dh
  4173c5:	adc    al,0x0
  4173c7:	add    BYTE PTR [ecx],dh
  4173c9:	adc    al,0x0
  4173cb:	add    BYTE PTR [ecx],dh
  4173cd:	adc    al,0x0
  4173cf:	add    BYTE PTR [eax],al
  4173d1:	add    al,BYTE PTR [eax]
  4173d3:	add    BYTE PTR [ecx],dh
  4173d5:	adc    al,0x0
  4173d7:	add    BYTE PTR [ecx],ch
  4173d9:	adc    al,0x0
  4173db:	add    BYTE PTR [ebp-0x62cd6fda],ch
  4173e1:	es cwde 
  4173e3:	xor    cl,ch
  4173e5:	mov    al,es:0xa826cd32
  4173eb:	xor    dh,BYTE PTR [ecx]
  4173ed:	push   esp
  4173ee:	add    DWORD PTR [eax],eax
  4173f0:	add    DWORD PTR [eax+eax*1],edx
  4173f3:	add    BYTE PTR [edx-0x1ec4b4d2],dl
  4173f9:	cs pop edx
  4173fb:	cmp    ebx,esi
  4173fd:	cs push 0x932f073b
  417403:	cmp    ecx,edi
  417405:	das    
  417406:	test   al,0x3b
  417408:	ins    DWORD PTR es:[edi],dx
  417409:	das    
  41740a:	in     eax,dx
  41740b:	cmp    ebp,DWORD PTR [edx]
  41740d:	sub    BYTE PTR [ecx],dl
  41740f:	cmp    al,0x38
  417411:	sub    BYTE PTR [ebp-0x78d66ac4],bl
  417417:	ds mov ah,0x2a
  41741a:	xchg   ebp,eax
  41741b:	ds jne 0x417448
  41741e:	int    0x3e
  417420:	dec    esi
  417421:	sub    bh,BYTE PTR [esi+0x3f]
  417424:	mov    dl,0x2a
  417426:	fwait
  417427:	aas    
  417428:	fsubr  DWORD PTR [edx]
  41742a:	scas   eax,DWORD PTR es:[edi]
  41742b:	aas    
  41742c:	fisubr WORD PTR [edx]
  41742e:	int3   
  41742f:	aas    
  417430:	add    ebp,DWORD PTR [ebx]
  417432:	out    0x3f,al
  417434:	add    BYTE PTR [ebx],ch
  417436:	stc    
  417437:	aas    
  417438:	add    BYTE PTR [eax],al
  41743a:	push   es
  41743b:	sub    eax,DWORD PTR [eax]
  41743d:	add    BYTE PTR [ecx],dh
  41743f:	inc    esp
  417440:	add    DWORD PTR [eax],eax
  417442:	mov    ebp,0x34000013
  417447:	and    al,0x18
  417449:	xor    BYTE PTR [eax+0x77308723],dh
  41744f:	and    eax,0x2574314b
  417454:	xor    WORD PTR [ecx+0x25],ax
  417458:	lea    esi,[ecx]
  41745a:	lea    esp,[edx+ebp*4]
  41745d:	xor    ebx,esi
  41745f:	and    al,0xe5
  417461:	xor    DWORD PTR [eax],esp
  417463:	sbb    DWORD PTR es:[edx],esi
  417466:	dec    esi
  417467:	es xor ah,BYTE PTR es:[ebp+0x26]
  41746c:	inc    ebp
  41746d:	xor    ch,dl
  41746f:	and    eax,0x25fb3253
  417474:	popa   
  417475:	xor    bl,BYTE PTR [esi]
  417477:	es jg  0x4174ac
  41747a:	lods   al,BYTE PTR ds:[esi]
  41747b:	and    eax,0x25d03297
  417480:	stos   DWORD PTR es:[edi],eax
  417481:	xor    bh,BYTE PTR [eax-0x7fcd3cdb]
  417487:	and    eax,0x27373308
  41748c:	adc    al,0x33
  41748e:	adc    al,0x27
  417490:	sub    dh,BYTE PTR [ebx]
  417492:	repz es jle 0x4174c9
  417496:	mov    ecx,0x90339526
  41749b:	es stos DWORD PTR es:[edi],eax
  41749d:	xor    eax,DWORD PTR [eax]
  41749f:	add    BYTE PTR [ebp+0x6833be26],al
  4174a5:	es into 
  4174a7:	xor    eax,DWORD PTR ds:0x1633dd26
  4174ad:	es hlt 
  4174af:	xor    ebx,DWORD PTR [ebx]
  4174b1:	push   DWORD PTR es:[ebx]
  4174b4:	sub    al,0x20
  4174b6:	or     DWORD PTR [edi+edi*1],esi
  4174b9:	and    BYTE PTR [esp+esi*1],dl
  4174bc:	push   ebx
  4174bd:	and    BYTE PTR [eax],ch
  4174bf:	xor    al,0x4c
  4174c1:	and    BYTE PTR [edx],dh
  4174c3:	xor    al,0x66
  4174c5:	and    BYTE PTR [edx+0x34],bl
  4174c8:	mov    bh,0x20
  4174ca:	mov    WORD PTR [ebx+eax*8],?
  4174cd:	and    BYTE PTR [esp+esi*1+0x34eb20f7],bl
  4174d4:	fldenv [eax]
  4174d6:	or     al,0x35
  4174d8:	daa    
  4174d9:	pop    ds
  4174da:	and    esi,DWORD PTR ds:0x35311f18
  4174e0:	clc    
  4174e1:	push   ds
  4174e2:	inc    esp
  4174e3:	xor    eax,0x355d1f65
  4174e8:	adc    ebx,DWORD PTR [edi]
  4174ea:	jno    0x417521
  4174ec:	lods   al,BYTE PTR ds:[esi]
  4174ed:	pop    ds
  4174ee:	mov    ?,WORD PTR ds:0x35a51fc7
  4174f4:	xor    DWORD PTR [eax+eax*1],edx
  4174f7:	add    BYTE PTR [ecx],dh
  4174f9:	adc    al,0x0
  4174fb:	add    BYTE PTR [ecx],dh
  4174fd:	adc    al,0x0
  4174ff:	add    BYTE PTR [ecx],dh
  417501:	adc    al,0x0
  417503:	add    BYTE PTR [eax],al
  417505:	add    BYTE PTR [ecx],dh
  417507:	adc    al,0x0
  417509:	add    BYTE PTR [ecx],dh
  41750b:	adc    al,0x0
  41750d:	add    BYTE PTR [ecx],dh
  41750f:	adc    al,0x0
  417511:	add    BYTE PTR [ecx],dh
  417513:	adc    al,0x0
  417515:	add    BYTE PTR [ecx],dh
  417517:	adc    al,0x0
  417519:	add    BYTE PTR [ecx],dh
  41751b:	adc    al,0x0
  41751d:	add    BYTE PTR [ecx],dh
  41751f:	adc    al,0x0
  417521:	add    BYTE PTR [ecx],dh
  417523:	adc    al,0x0
  417525:	add    BYTE PTR [ecx],dh
  417527:	adc    al,0x0
  417529:	add    BYTE PTR [ecx],dh
  41752b:	adc    al,0x0
  41752d:	add    BYTE PTR [ecx],dh
  41752f:	adc    al,0x0
  417531:	add    BYTE PTR [ecx],dh
  417533:	adc    al,0x0
  417535:	add    BYTE PTR [ecx],dh
  417537:	adc    al,0x0
  417539:	add    BYTE PTR [ecx],dh
  41753b:	adc    al,0x0
  41753d:	add    BYTE PTR [ecx],dh
  41753f:	adc    al,0x0
  417541:	add    BYTE PTR [ecx],dh
  417543:	adc    al,0x0
  417545:	add    BYTE PTR [ecx],dh
  417547:	adc    al,0x0
  417549:	add    BYTE PTR [ecx],dh
  41754b:	adc    al,0x0
  41754d:	add    BYTE PTR [ecx],dh
  41754f:	adc    al,0x0
  417551:	add    BYTE PTR [ecx],dh
  417553:	adc    al,0x0
  417555:	add    BYTE PTR [ecx],dh
  417557:	adc    al,0x0
  417559:	add    BYTE PTR [ecx],dh
  41755b:	adc    al,0x0
  41755d:	add    BYTE PTR [ecx],dh
  41755f:	adc    al,0x0
  417561:	add    BYTE PTR [ecx],dh
  417563:	adc    al,0x0
  417565:	add    BYTE PTR [ecx],dh
  417567:	adc    al,0x0
  417569:	add    BYTE PTR [eax],al
  41756b:	add    BYTE PTR [ecx],dh
  41756d:	adc    al,0x0
  41756f:	add    BYTE PTR [ecx],dh
  417571:	adc    al,0x0
  417573:	add    BYTE PTR [ecx],dh
  417575:	adc    al,0x0
  417577:	add    BYTE PTR [ecx],dh
  417579:	adc    al,0x0
  41757b:	add    BYTE PTR [ecx],dh
  41757d:	adc    al,0x0
  41757f:	add    BYTE PTR [ecx],dh
  417581:	adc    al,0x0
  417583:	add    BYTE PTR [ecx],dh
  417585:	adc    al,0x0
  417587:	add    BYTE PTR [ecx],dh
  417589:	adc    al,0x0
  41758b:	add    BYTE PTR [ecx],dh
  41758d:	adc    al,0x0
  41758f:	add    BYTE PTR [ecx],dh
  417591:	adc    al,0x0
  417593:	add    BYTE PTR [ecx],dh
  417595:	adc    al,0x0
  417597:	add    BYTE PTR [ecx],dh
  417599:	adc    al,0x0
  41759b:	add    BYTE PTR [ecx],dh
  41759d:	adc    al,0x0
  41759f:	add    BYTE PTR [ecx],dh
  4175a1:	adc    al,0x0
  4175a3:	add    BYTE PTR [ecx],dh
  4175a5:	adc    al,0x0
  4175a7:	add    BYTE PTR [ecx],dh
  4175a9:	adc    al,0x0
  4175ab:	add    BYTE PTR [ecx],dh
  4175ad:	adc    al,0x0
  4175af:	add    BYTE PTR [ecx],dh
  4175b1:	adc    al,0x0
  4175b3:	add    BYTE PTR [ecx],dh
  4175b5:	adc    al,0x0
  4175b7:	add    BYTE PTR [ecx],dh
  4175b9:	adc    al,0x0
  4175bb:	add    BYTE PTR [ecx],dh
  4175bd:	adc    al,0x0
  4175bf:	add    BYTE PTR [ecx],dh
  4175c1:	adc    al,0x0
  4175c3:	add    BYTE PTR [ecx],dh
  4175c5:	adc    al,0x0
  4175c7:	add    BYTE PTR [ecx],dh
  4175c9:	adc    al,0x0
  4175cb:	add    BYTE PTR [ecx],dh
  4175cd:	adc    al,0x0
  4175cf:	add    BYTE PTR [eax],al
  4175d1:	add    BYTE PTR [ecx],dh
  4175d3:	adc    al,0x0
  4175d5:	add    BYTE PTR [ecx],dh
  4175d7:	adc    al,0x0
  4175d9:	add    BYTE PTR [ecx],dh
  4175db:	adc    al,0x0
  4175dd:	add    bh,bh
  4175df:	and    eax,0x418220
  4175e4:	jmp    DWORD PTR ds:0x418224
  4175ea:	jmp    DWORD PTR ds:0x418228
  4175f0:	jmp    DWORD PTR ds:0x41822c
  4175f6:	jmp    DWORD PTR ds:0x418230
  4175fc:	jmp    DWORD PTR ds:0x418234
  417602:	jmp    DWORD PTR ds:0x418238
  417608:	jmp    DWORD PTR ds:0x418240
  41760e:	jmp    DWORD PTR ds:0x418248
  417614:	jmp    DWORD PTR ds:0x418250
