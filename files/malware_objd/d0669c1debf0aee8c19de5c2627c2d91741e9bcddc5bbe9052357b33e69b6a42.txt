
d0669c1debf0aee8c19de5c2627c2d91741e9bcddc5bbe9052357b33e69b6a42.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x14c
  401009:	push   ebx
  40100a:	add    DWORD PTR ds:0x413d18,edx
  401010:	push   esi
  401011:	adc    eax,DWORD PTR ds:0x41400c
  401017:	push   edi
  401018:	adc    DWORD PTR ds:0x413c74,ecx
  40101e:	xor    esi,esi
  401020:	sbb    eax,DWORD PTR ds:0x413bfe
  401026:	mov    DWORD PTR [ebp-0x10],esi
  401029:	adc    edi,eax
  40102b:	mov    eax,DWORD PTR [ebp-0x20]
  40102e:	and    DWORD PTR ds:0x413c06,0x0
  401038:	jmp    0x40104a
  40103d:	mov    edi,DWORD PTR ds:0x413c06
  401043:	inc    edi
  401044:	mov    DWORD PTR ds:0x413c06,edi
  40104a:	cmp    DWORD PTR ds:0x413c06,0x12
  401051:	jae    0x40107f
  401057:	cmp    DWORD PTR ds:0x413c06,0x18
  40105e:	jne    0x401074
  401064:	push   0x413c74
  401069:	push   0x1062
  40106e:	call   DWORD PTR ds:0x41675c
  401074:	jmp    0x40103d
  401079:	xor    DWORD PTR ds:0x413bf6,ebx
  40107f:	push   0x5
  401081:	mov    DWORD PTR [ebp-0x20],eax
  401084:	pop    edi
  401085:	push   0x4164c8
  40108a:	call   DWORD PTR ds:0x416794
  401090:	push   esi
  401091:	and    DWORD PTR ds:0x413c70,0x414018
  40109b:	push   0x69
  40109d:	push   0xe
  40109f:	push   0x6
  4010a1:	push   0x4
  4010a3:	xor    DWORD PTR ds:0x41401c,0x413c16
  4010ad:	push   0x87698897
  4010b2:	sbb    DWORD PTR ds:0x41401c,0x413c16
  4010bc:	call   DWORD PTR ds:0x416750
  4010c2:	push   esi
  4010c3:	add    DWORD PTR ds:0x413d2c,0x792b
  4010cd:	push   0x3
  4010cf:	push   0x2
  4010d1:	push   0x4
  4010d3:	sbb    DWORD PTR ds:0x414008,0x413c0e
  4010dd:	push   0x2
  4010df:	push   0x56778769
  4010e4:	push   0x76867576
  4010e9:	inc    DWORD PTR ds:0x413c74
  4010ef:	call   DWORD PTR ds:0x41674c
  4010f5:	add    DWORD PTR ds:0x413c6c,0x413d20
  4010ff:	dec    edi
  401100:	mov    DWORD PTR ds:0x413bf6,0x25f1
  40110a:	jne    0x401085
  401110:	push   0x4164f0
  401115:	sbb    DWORD PTR ds:0x414000,0x413c0e
  40111f:	push   esi
  401120:	push   esi
  401121:	and    DWORD PTR ds:0x413c78,0x5ead
  40112b:	call   DWORD PTR ds:0x416788
  401131:	test   eax,eax
  401133:	je     0x40114f
  401139:	mov    eax,ds:0x75687681
  40113e:	adc    ebx,DWORD PTR ds:0x413c0a
  401144:	imul   eax,eax,0x5463da1d
  40114a:	mov    ds:0x75687681,eax
  40114f:	mov    eax,DWORD PTR [ebp-0x20]
  401152:	mov    DWORD PTR ds:0x41401c,0x2026
  40115c:	mov    ebx,0xf89c85b0
  401161:	mov    DWORD PTR ds:0x413c78,0x6385
  40116b:	cmp    eax,ebx
  40116d:	jne    0x4011cf
  401173:	add    DWORD PTR ds:0x414004,0x37c8
  40117d:	mov    DWORD PTR ds:0x4164c4,0xf89c85b1
  401187:	push   DWORD PTR [ebp+0x10]
  40118a:	sub    DWORD PTR ds:0x413bfe,0x414004
  401194:	push   DWORD PTR [ebp+0xc]
  401197:	and    DWORD PTR ds:0x413c1a,0x413ce4
  4011a1:	push   DWORD PTR [ebp+0x8]
  4011a4:	xor    DWORD PTR ds:0x413d34,0x413d2c
  4011ae:	call   0x402685
  4011b3:	mov    ecx,DWORD PTR ds:0x4163b4
  4011b9:	mov    esi,DWORD PTR ds:0x413c1e
  4011bf:	or     DWORD PTR ds:0x413c06,esi
  4011c5:	mov    ecx,DWORD PTR [ecx+0x1cc]
  4011cb:	xor    esi,esi
  4011cd:	mov    DWORD PTR [ecx],eax
  4011cf:	mov    DWORD PTR [ebp-0x8],ebx
  4011d2:	sub    ecx,DWORD PTR ds:0x413d20
  4011d8:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  4011df:	lea    eax,[ebp-0x60]
  4011e2:	xor    esi,DWORD PTR ds:0x413d18
  4011e8:	mov    DWORD PTR [ebp-0x48],eax
  4011eb:	lea    eax,[ebp-0x54]
  4011ee:	mov    DWORD PTR [ebp-0x1c],eax
  4011f1:	add    DWORD PTR ds:0x413c16,0x903
  4011fb:	mov    eax,ds:0x4163b4
  401200:	mov    eax,DWORD PTR [eax+0x1c8]
  401206:	adc    DWORD PTR ds:0x413cf4,edi
  40120c:	mov    eax,DWORD PTR [eax]
  40120e:	mov    esi,DWORD PTR ds:0x413ce4
  401214:	add    esi,DWORD PTR ds:0x413c16
  40121a:	mov    DWORD PTR ds:0x413ce4,esi
  401220:	mov    ecx,DWORD PTR [ebp-0x1c]
  401223:	xor    edi,edi
  401225:	mov    esi,0x7510894
  40122a:	xor    eax,esi
  40122c:	mov    edi,0x3272dc
  401231:	adc    DWORD PTR ds:0x413c78,0x59b2
  40123b:	add    eax,edi
  40123d:	mov    DWORD PTR ds:0x413d24,0x7b51
  401247:	mov    DWORD PTR [ecx],eax
  401249:	mov    eax,ds:0x4165e0
  40124e:	mov    DWORD PTR ds:0x413c80,0x7e03
  401258:	cmp    eax,0x312bc9f6
  40125d:	mov    DWORD PTR ds:0x413d24,0x296e
  401267:	jne    0x401312
  40126d:	mov    eax,DWORD PTR [ebp-0x8]
  401270:	mov    ecx,DWORD PTR ds:0x4163b4
  401276:	mov    ecx,DWORD PTR [ecx+0x198]
  40127c:	xor    eax,esi
  40127e:	add    eax,edi
  401280:	mov    edx,DWORD PTR ds:0x413c6c
  401286:	xor    DWORD PTR ds:0x414010,edx
  40128c:	mov    DWORD PTR [ecx],eax
  40128e:	movzx  ecx,BYTE PTR ds:0x413c6c
  401295:	and    ecx,DWORD PTR ds:0x413d2c
  40129b:	mov    DWORD PTR ds:0x413c6c,ecx
  4012a1:	mov    eax,DWORD PTR [ebp-0x8]
  4012a4:	mov    DWORD PTR ds:0x413cd8,0x1b
  4012ae:	cmp    DWORD PTR ds:0x413cd8,0x0
  4012b5:	je     0x401303
  4012bb:	cmp    DWORD PTR ds:0x413cd8,0x1c
  4012c2:	jne    0x4012dd
  4012c8:	push   0x104b
  4012cd:	push   0x413d18
  4012d2:	push   0x2575
  4012d7:	call   DWORD PTR ds:0x416760
  4012dd:	xor    edx,edx
  4012df:	xor    edx,DWORD PTR ds:0x413cd8
  4012e5:	dec    edx
  4012e6:	mov    DWORD PTR ds:0x413cd8,edx
  4012ec:	jmp    0x4012ae
  4012f1:	mov    edx,DWORD PTR ds:0x413ce8
  4012f7:	or     edx,DWORD PTR ds:0x413c7c
  4012fd:	mov    DWORD PTR ds:0x413ce8,edx
  401303:	xor    eax,esi
  401305:	add    eax,edi
  401307:	or     ecx,DWORD PTR ds:0x413d24
  40130d:	mov    ds:0x4165e0,eax
  401312:	mov    eax,ds:0x4163b4
  401317:	mov    eax,DWORD PTR [eax+0x18c]
  40131d:	and    DWORD PTR ds:0x413c1a,0x0
  401327:	jmp    0x401339
  40132c:	mov    ecx,DWORD PTR ds:0x413c1a
  401332:	inc    ecx
  401333:	mov    DWORD PTR ds:0x413c1a,ecx
  401339:	cmp    DWORD PTR ds:0x413c1a,0x15
  401340:	jae    0x40136e
  401346:	cmp    DWORD PTR ds:0x413c1a,0x20
  40134d:	jne    0x401369
  401353:	push   0x6f97
  401358:	push   DWORD PTR [ebp-0x18]
  40135b:	push   0x2919
  401360:	push   DWORD PTR [ebp-0x14]
  401363:	call   DWORD PTR ds:0x416764
  401369:	jmp    0x40132c
  40136e:	mov    eax,DWORD PTR [eax]
  401370:	xor    edx,edx
  401372:	or     edx,DWORD PTR ds:0x413c0e
  401378:	adc    DWORD PTR ds:0x413cdc,edx
  40137e:	mov    DWORD PTR [ebp-0xa4],eax
  401384:	xor    eax,eax
  401386:	xor    eax,DWORD PTR ds:0x413cd0
  40138c:	mov    eax,DWORD PTR [eax]
  40138e:	sbb    DWORD PTR ds:0x413d34,eax
  401394:	mov    eax,0xf89c85bc
  401399:	xor    edx,ecx
  40139b:	mov    DWORD PTR [ebp-0x10],eax
  40139e:	mov    DWORD PTR [ebp-0x10],eax
  4013a1:	mov    DWORD PTR [ebp-0x10],eax
  4013a4:	sub    ecx,ecx
  4013a6:	mov    DWORD PTR [ebp-0x1c],ebx
  4013a9:	or     DWORD PTR ds:0x413c80,0x7e3b
  4013b3:	mov    DWORD PTR [ebp-0x10],eax
  4013b6:	mov    DWORD PTR [ebp-0x10],0xf89c85b8
  4013bd:	add    DWORD PTR ds:0x413d34,edi
  4013c3:	mov    ecx,DWORD PTR [ebp-0x8]
  4013c6:	xor    ecx,esi
  4013c8:	add    ecx,edi
  4013ca:	mov    DWORD PTR [ebp-0x18],ecx
  4013cd:	add    DWORD PTR ds:0x414018,edi
  4013d3:	mov    ecx,DWORD PTR [ebp-0xc]
  4013d6:	and    DWORD PTR ds:0x413c7c,0xe1
  4013e0:	mov    edx,DWORD PTR [ebp-0xc]
  4013e3:	adc    DWORD PTR ds:0x413d28,0x413d20
  4013ed:	xor    edx,esi
  4013ef:	xor    ecx,esi
  4013f1:	sbb    DWORD PTR ds:0x414014,0x47d8
  4013fb:	add    ecx,edx
  4013fd:	movzx  edx,BYTE PTR ds:0x41400c
  401404:	and    DWORD PTR ds:0x413bf6,edx
  40140a:	mov    edx,DWORD PTR [ebp-0xc]
  40140d:	xor    edx,esi
  40140f:	lea    ecx,[ecx+edx*1+0x975894]
  401416:	cmp    DWORD PTR [ebp-0x18],ecx
  401419:	ja     0x4015f5
  40141f:	or     eax,DWORD PTR ds:0x413bfa
  401425:	mov    eax,DWORD PTR [ebp-0xc]
  401428:	mov    ecx,DWORD PTR ds:0x413c80
  40142e:	xor    DWORD PTR ds:0x413ce8,ecx
  401434:	mov    ecx,DWORD PTR [ebp-0x18]
  401437:	sbb    DWORD PTR ds:0x413d20,0x413d34
  401441:	xor    eax,esi
  401443:	and    DWORD PTR ds:0x413cdc,0x413d24
  40144d:	lea    eax,[eax+ecx*1+0x3272dc]
  401454:	sub    DWORD PTR ds:0x414008,0x413cd8
  40145e:	push   eax
  40145f:	sbb    DWORD PTR ds:0x413c0a,edi
  401465:	mov    eax,DWORD PTR [ebp-0x1c]
  401468:	xor    DWORD PTR ds:0x413c80,0x7b1e
  401472:	xor    eax,esi
  401474:	lea    eax,[ebp+eax*1+0x3272e4]
  40147b:	or     DWORD PTR ds:0x413c16,0x7d42
  401485:	push   eax
  401486:	mov    DWORD PTR ds:0x414018,0x19
  401490:	cmp    DWORD PTR ds:0x414018,0x0
  401497:	je     0x4014cb
  40149d:	cmp    DWORD PTR ds:0x414018,0x28
  4014a4:	jne    0x4014bb
  4014aa:	push   DWORD PTR [ebp-0x14]
  4014ad:	push   DWORD PTR [ebp-0x18]
  4014b0:	push   0x400000
  4014b5:	call   DWORD PTR ds:0x416768
  4014bb:	mov    eax,ds:0x414018
  4014c0:	dec    eax
  4014c1:	mov    ds:0x414018,eax
  4014c6:	jmp    0x401490
  4014cb:	mov    eax,ds:0x4163b4
  4014d0:	and    DWORD PTR ds:0x413c6c,0x2ac9
  4014da:	push   DWORD PTR [eax+0x1bc]
  4014e0:	call   0x40a25b
  4014e5:	mov    eax,DWORD PTR [ebp-0xc]
  4014e8:	sbb    edx,edx
  4014ea:	mov    ecx,DWORD PTR [ebp-0x18]
  4014ed:	and    DWORD PTR ds:0x413d24,0x0
  4014f7:	mov    edx,DWORD PTR ds:0x413d24
  4014fd:	inc    edx
  4014fe:	mov    DWORD PTR ds:0x413d24,edx
  401504:	cmp    DWORD PTR ds:0x413d24,0x1c
  40150b:	jne    0x401525
  401511:	push   DWORD PTR [ebp-0x14]
  401514:	push   0x413d30
  401519:	push   DWORD PTR [ebp-0x1c]
  40151c:	push   DWORD PTR [ebp-0x24]
  40151f:	call   DWORD PTR ds:0x416770
  401525:	cmp    DWORD PTR ds:0x413d24,0x1b
  40152c:	jb     0x4014f7
  401532:	xor    eax,esi
  401534:	lea    eax,[ecx+eax*1+0x3272dc]
  40153b:	mov    ecx,DWORD PTR [ebp-0xc]
  40153e:	mov    edx,DWORD PTR [ebp-0xc]
  401541:	dec    DWORD PTR ds:0x413bf6
  401547:	xor    edx,esi
  401549:	xor    ecx,esi
  40154b:	sbb    DWORD PTR ds:0x413c1e,0x34e4
  401555:	add    ecx,edx
  401557:	and    DWORD PTR ds:0x413c02,0x0
  401561:	jmp    0x401573
  401566:	mov    edx,DWORD PTR ds:0x413c02
  40156c:	inc    edx
  40156d:	mov    DWORD PTR ds:0x413c02,edx
  401573:	cmp    DWORD PTR ds:0x413c02,0x1b
  40157a:	jae    0x4015bf
  401580:	cmp    DWORD PTR ds:0x413c02,0x1e
  401587:	jne    0x4015a7
  40158d:	push   0x413d28
  401592:	push   0x3ad3
  401597:	push   0x416152
  40159c:	push   0x416152
  4015a1:	call   DWORD PTR ds:0x416774
  4015a7:	jmp    0x401566
  4015ac:	movzx  edx,BYTE PTR ds:0x413ce8
  4015b3:	sub    edx,DWORD PTR ds:0x413c1a
  4015b9:	mov    DWORD PTR ds:0x413ce8,edx
  4015bf:	mov    edx,DWORD PTR [ebp-0xc]
  4015c2:	xor    DWORD PTR ds:0x413c80,0x413c74
  4015cc:	xor    edx,esi
  4015ce:	lea    ecx,[ecx+edx*1+0x975894]
  4015d5:	mov    DWORD PTR [ebp-0x18],eax
  4015d8:	cmp    eax,ecx
  4015da:	mov    DWORD PTR ds:0x413c7c,0x908
  4015e4:	jbe    0x40141f
  4015ea:	add    DWORD PTR ds:0x413cf4,ecx
  4015f0:	mov    eax,0xf89c85bc
  4015f5:	add    DWORD PTR ds:0x414014,ecx
  4015fb:	mov    ecx,DWORD PTR [ebp+0xc]
  4015fe:	mov    DWORD PTR ds:0x416238,ecx
  401604:	mov    ecx,DWORD PTR [ebp+0x10]
  401607:	and    DWORD PTR ds:0x413c1a,0x0
  401611:	mov    edx,DWORD PTR ds:0x413c1a
  401617:	inc    edx
  401618:	mov    DWORD PTR ds:0x413c1a,edx
  40161e:	cmp    DWORD PTR ds:0x413c1a,0x25
  401625:	jne    0x40163e
  40162b:	push   DWORD PTR [ebp-0x1c]
  40162e:	push   0x414004
  401633:	push   0x416170
  401638:	call   DWORD PTR ds:0x416778
  40163e:	cmp    DWORD PTR ds:0x413c1a,0x19
  401645:	jb     0x401611
  40164b:	mov    DWORD PTR ds:0x41648c,ecx
  401651:	adc    DWORD PTR ds:0x413c1e,ebx
  401657:	mov    ecx,DWORD PTR ds:0x416238
  40165d:	mov    edx,DWORD PTR ds:0x414014
  401663:	xor    DWORD PTR ds:0x413c0e,edx
  401669:	mov    edx,DWORD PTR [ebp-0x48]
  40166c:	sub    ecx,edi
  40166e:	and    DWORD PTR ds:0x413cf0,0x24ff
  401678:	xor    ecx,esi
  40167a:	mov    DWORD PTR [edx],ecx
  40167c:	not    ecx
  40167e:	mov    ecx,DWORD PTR [ebp-0x20]
  401681:	mov    DWORD PTR ds:0x413c16,0x6aa9
  40168b:	cmp    ecx,ebx
  40168d:	mov    DWORD PTR ds:0x413c70,0x4e28
  401697:	jne    0x401b90
  40169d:	add    DWORD PTR ds:0x413d18,0x41400c
  4016a7:	lea    eax,[ebp-0x5c]
  4016aa:	and    DWORD PTR ds:0x413c16,0x3f2d
  4016b4:	mov    DWORD PTR [ebp-0xb0],eax
  4016ba:	lea    eax,[ebp+0x4]
  4016bd:	add    DWORD PTR ds:0x413cec,0x413d24
  4016c7:	mov    DWORD PTR [ebp-0x5c],eax
  4016ca:	mov    eax,DWORD PTR [ebp-0x5c]
  4016cd:	xor    DWORD PTR ds:0x413ce4,0x37e4
  4016d7:	test   eax,eax
  4016d9:	mov    DWORD PTR ds:0x413c7c,0x3884
  4016e3:	je     0x402663
  4016e9:	adc    DWORD PTR ds:0x413c12,ebx
  4016ef:	mov    eax,DWORD PTR [ebp-0x24]
  4016f2:	mov    eax,DWORD PTR [ebp-0xc]
  4016f5:	mov    eax,DWORD PTR [ebp-0x8]
  4016f8:	sub    ecx,0x1090
  4016fe:	mov    DWORD PTR [ebp+0xc],eax
  401701:	mov    eax,eax
  401703:	mov    eax,ds:0x4163b4
  401708:	and    DWORD PTR ds:0x413bfa,0x0
  401712:	jmp    0x401724
  401717:	mov    ecx,DWORD PTR ds:0x413bfa
  40171d:	inc    ecx
  40171e:	mov    DWORD PTR ds:0x413bfa,ecx
  401724:	cmp    DWORD PTR ds:0x413bfa,0x11
  40172b:	jae    0x401754
  401731:	cmp    DWORD PTR ds:0x413bfa,0x20
  401738:	jne    0x401749
  40173e:	push   0x4160de
  401743:	call   DWORD PTR ds:0x41677c
  401749:	jmp    0x401717
  40174e:	and    DWORD PTR ds:0x413c74,ecx
  401754:	mov    eax,DWORD PTR [eax+0x1c8]
  40175a:	and    DWORD PTR ds:0x414010,0x0
  401764:	mov    ecx,DWORD PTR ds:0x414010
  40176a:	inc    ecx
  40176b:	mov    DWORD PTR ds:0x414010,ecx
  401771:	cmp    DWORD PTR ds:0x414010,0xf
  401778:	jne    0x401791
  40177e:	push   0x413c0a
  401783:	push   DWORD PTR [ebp-0x20]
  401786:	push   0x4160b3
  40178b:	call   DWORD PTR ds:0x416780
  401791:	cmp    DWORD PTR ds:0x414010,0xe
  401798:	jne    0x4017ab
  40179e:	mov    ecx,DWORD PTR ds:0x414010
  4017a4:	inc    ecx
  4017a5:	mov    DWORD PTR ds:0x414010,ecx
  4017ab:	cmp    DWORD PTR ds:0x414010,0x1c
  4017b2:	jb     0x401764
  4017b8:	mov    DWORD PTR ds:0x413bf6,0x13
  4017c2:	cmp    DWORD PTR ds:0x413bf6,0x0
  4017c9:	je     0x401820
  4017cf:	cmp    DWORD PTR ds:0x413bf6,0x6
  4017d6:	jne    0x4017ec
  4017dc:	push   0x414018
  4017e1:	push   0x1023
  4017e6:	call   DWORD PTR ds:0x416784
  4017ec:	cmp    DWORD PTR ds:0x413bf6,0x7
  4017f3:	jne    0x401808
  4017f9:	xor    ecx,ecx
  4017fb:	add    ecx,DWORD PTR ds:0x413bf6
  401801:	dec    ecx
  401802:	mov    DWORD PTR ds:0x413bf6,ecx
  401808:	mov    ecx,DWORD PTR ds:0x413bf6
  40180e:	dec    ecx
  40180f:	mov    DWORD PTR ds:0x413bf6,ecx
  401815:	jmp    0x4017c2
  40181a:	adc    DWORD PTR ds:0x413ce8,ebx
  401820:	mov    eax,DWORD PTR [eax]
  401822:	and    DWORD PTR ds:0x414010,0x0
  40182c:	jmp    0x401840
  401831:	xor    ecx,ecx
  401833:	add    ecx,DWORD PTR ds:0x414010
  401839:	inc    ecx
  40183a:	mov    DWORD PTR ds:0x414010,ecx
  401840:	cmp    DWORD PTR ds:0x414010,0x19
  401847:	jae    0x401873
  40184d:	cmp    DWORD PTR ds:0x414010,0x27
  401854:	jne    0x401868
  40185a:	push   DWORD PTR [ebp-0x18]
  40185d:	push   0x4160de
  401862:	call   DWORD PTR ds:0x41678c
  401868:	jmp    0x401831
  40186d:	sub    DWORD PTR ds:0x413c0a,edi
  401873:	cdq    
  401874:	mov    ebx,eax
  401876:	mov    eax,0xfabdbeef
  40187b:	mov    ecx,DWORD PTR ds:0x413c1e
  401881:	or     DWORD PTR ds:0x413d1c,ecx
  401887:	add    ebx,eax
  401889:	mov    ecx,0x6f0c
  40188e:	adc    edx,0xffffffff
  401891:	and    DWORD PTR [ebp-0x10],0x0
  401895:	sub    DWORD PTR ds:0x413c6c,0x6250
  40189f:	xor    edx,0x0
  4018a2:	xor    DWORD PTR ds:0x413c84,ecx
  4018a8:	mov    DWORD PTR [ebp-0x80],edx
  4018ab:	mov    edx,DWORD PTR [ebp+0xc]
  4018ae:	mov    DWORD PTR ds:0x413c74,0x12
  4018b8:	cmp    DWORD PTR ds:0x413c74,0x0
  4018bf:	je     0x401906
  4018c5:	cmp    DWORD PTR ds:0x413c74,0x1e
  4018cc:	jne    0x4018f2
  4018d2:	push   DWORD PTR [ebp-0x24]
  4018d5:	push   0x413cd8
  4018da:	push   0x560c
  4018df:	push   0x416049
  4018e4:	push   DWORD PTR [ebp-0x18]
  4018e7:	push   0x1b95
  4018ec:	call   DWORD PTR ds:0x416790
  4018f2:	mov    ecx,DWORD PTR ds:0x413c74
  4018f8:	dec    ecx
  4018f9:	mov    DWORD PTR ds:0x413c74,ecx
  4018ff:	jmp    0x4018b8
  401904:	not    ecx
  401906:	mov    DWORD PTR [ebp-0x14],edx
  401909:	and    DWORD PTR ds:0x413c06,0x0
  401913:	jmp    0x401925
  401918:	mov    edx,DWORD PTR ds:0x413c06
  40191e:	inc    edx
  40191f:	mov    DWORD PTR ds:0x413c06,edx
  401925:	cmp    DWORD PTR ds:0x413c06,0x14
  40192c:	jae    0x401967
  401932:	cmp    DWORD PTR ds:0x413c06,0x5
  401939:	jne    0x401948
  40193f:	push   DWORD PTR [ebp-0xc]
  401942:	call   DWORD PTR ds:0x416798
  401948:	cmp    DWORD PTR ds:0x413c06,0x4
  40194f:	jne    0x401962
  401955:	mov    edx,DWORD PTR ds:0x413c06
  40195b:	inc    edx
  40195c:	mov    DWORD PTR ds:0x413c06,edx
  401962:	jmp    0x401918
  401967:	mov    ecx,0x8a29a125
  40196c:	xor    ebx,ecx
  40196e:	neg    DWORD PTR ds:0x413d18
  401974:	add    DWORD PTR [ebp-0x14],eax
  401977:	mov    DWORD PTR ds:0x414010,ebx
  40197d:	mov    edx,DWORD PTR [ebp-0x14]
  401980:	mov    DWORD PTR ds:0x41401c,0x7ba5
  40198a:	adc    DWORD PTR [ebp-0x10],0xffffffff
  40198e:	xor    edx,ecx
  401990:	add    DWORD PTR ds:0x414010,0x307
  40199a:	mov    DWORD PTR [ebp-0x78],edx
  40199d:	mov    edx,DWORD PTR [ebp-0x10]
  4019a0:	xor    edx,0x0
  4019a3:	mov    DWORD PTR ds:0x414018,0x4b60
  4019ad:	mov    DWORD PTR [ebp-0x74],edx
  4019b0:	cmp    DWORD PTR [ebp-0x78],ebx
  4019b3:	mov    DWORD PTR ds:0x413c02,0x936
  4019bd:	jne    0x4019df
  4019c3:	mov    DWORD PTR ds:0x413c0a,edx
  4019c9:	mov    edx,DWORD PTR [ebp-0x80]
  4019cc:	cmp    DWORD PTR [ebp-0x74],edx
  4019cf:	mov    DWORD PTR ds:0x413c7c,0x301a
  4019d9:	je     0x401aa0
  4019df:	and    DWORD PTR ds:0x413d34,0x0
  4019e9:	jmp    0x4019fb
  4019ee:	mov    edx,DWORD PTR ds:0x413d34
  4019f4:	inc    edx
  4019f5:	mov    DWORD PTR ds:0x413d34,edx
  4019fb:	cmp    DWORD PTR ds:0x413d34,0x16
  401a02:	jae    0x401a25
  401a08:	cmp    DWORD PTR ds:0x413d34,0x26
  401a0f:	jne    0x401a20
  401a15:	push   0x414014
  401a1a:	call   DWORD PTR ds:0x41679c
  401a20:	jmp    0x4019ee
  401a25:	mov    edx,DWORD PTR ds:0x4163b4
  401a2b:	neg    DWORD PTR ds:0x414008
  401a31:	mov    edx,DWORD PTR [edx+0x1c0]
  401a37:	mov    DWORD PTR ds:0x413bf6,0x5ff4
  401a41:	mov    edx,DWORD PTR [edx]
  401a43:	and    DWORD PTR ds:0x413ce0,0x41400c
  401a4d:	xor    ebx,ebx
  401a4f:	add    edx,eax
  401a51:	mov    DWORD PTR ds:0x413c78,0x3f53
  401a5b:	adc    ebx,0xffffffff
  401a5e:	and    DWORD PTR ds:0x413c02,0x1b79
  401a68:	xor    edx,ecx
  401a6a:	add    DWORD PTR ds:0x413ce0,0x413c6c
  401a74:	xor    ebx,0x0
  401a77:	mov    DWORD PTR ds:0x413bfa,0x4fab
  401a81:	cmp    edx,0x70941fd5
  401a87:	mov    DWORD PTR ds:0x413d2c,0x7f9c
  401a91:	jne    0x402663
  401a97:	cmp    ebx,0xffffffff
  401a9a:	jne    0x402663
  401aa0:	mov    edx,DWORD PTR ds:0x416430
  401aa6:	add    DWORD PTR ds:0x413cdc,0x3946
  401ab0:	mov    ebx,DWORD PTR ds:0x416438
  401ab6:	and    DWORD PTR ds:0x413c80,0x3ee6
  401ac0:	xor    edx,ebx
  401ac2:	mov    DWORD PTR ds:0x414000,0x16
  401acc:	cmp    DWORD PTR ds:0x414000,0x0
  401ad3:	je     0x401b12
  401ad9:	cmp    DWORD PTR ds:0x414000,0x26
  401ae0:	jne    0x401af6
  401ae6:	push   0x413c84
  401aeb:	push   0x56a1
  401af0:	call   DWORD PTR ds:0x41675c
  401af6:	mov    ebx,DWORD PTR ds:0x414000
  401afc:	dec    ebx
  401afd:	mov    DWORD PTR ds:0x414000,ebx
  401b03:	jmp    0x401acc
  401b08:	add    DWORD PTR ds:0x413c84,0x1062
  401b12:	mov    DWORD PTR ds:0x416430,edx
  401b18:	mov    ebx,DWORD PTR ds:0x416430
  401b1e:	and    DWORD PTR ds:0x413d20,0x0
  401b28:	jmp    0x401b3a
  401b2d:	mov    edx,DWORD PTR ds:0x413d20
  401b33:	inc    edx
  401b34:	mov    DWORD PTR ds:0x413d20,edx
  401b3a:	cmp    DWORD PTR ds:0x413d20,0x1a
  401b41:	jae    0x401b72
  401b47:	cmp    DWORD PTR ds:0x413d20,0x25
  401b4e:	jne    0x401b67
  401b54:	push   DWORD PTR [ebp-0x24]
  401b57:	push   0x413d1c
  401b5c:	push   0x7dc0
  401b61:	call   DWORD PTR ds:0x416760
  401b67:	jmp    0x401b2d
  401b6c:	adc    DWORD PTR ds:0x413bfe,edi
  401b72:	mov    edx,DWORD PTR [ebp-0x5c]
  401b75:	xor    DWORD PTR ds:0x413c7c,0x413c1e
  401b7f:	add    DWORD PTR [edx],ebx
  401b81:	mov    DWORD PTR ds:0x414010,0x3837
  401b8b:	jmp    0x402624
  401b90:	mov    DWORD PTR ds:0x41401c,0x671d
  401b9a:	mov    ecx,DWORD PTR [ebp-0x60]
  401b9d:	mov    DWORD PTR ds:0x413c02,0x3bc3
  401ba7:	cmp    ecx,0xf89c85b1
  401bad:	je     0x401d26
  401bb3:	mov    ecx,DWORD PTR [ebp-0x8]
  401bb6:	mov    edx,DWORD PTR [ebp-0x54]
  401bb9:	or     DWORD PTR ds:0x413c1a,0x413cdc
  401bc3:	xor    ecx,esi
  401bc5:	add    ecx,edi
  401bc7:	cmp    ecx,edx
  401bc9:	je     0x401d26
  401bcf:	mov    DWORD PTR ds:0x413d28,0x18
  401bd9:	cmp    DWORD PTR ds:0x413d28,0x0
  401be0:	je     0x401c32
  401be6:	cmp    DWORD PTR ds:0x413d28,0xa
  401bed:	jne    0x401c07
  401bf3:	push   0x7420
  401bf8:	push   DWORD PTR [ebp-0xc]
  401bfb:	push   DWORD PTR [ebp-0x20]
  401bfe:	push   DWORD PTR [ebp-0x14]
  401c01:	call   DWORD PTR ds:0x416764
  401c07:	cmp    DWORD PTR ds:0x413d28,0xb
  401c0e:	jne    0x401c1f
  401c14:	mov    eax,ds:0x413d28
  401c19:	dec    eax
  401c1a:	mov    ds:0x413d28,eax
  401c1f:	xor    eax,eax
  401c21:	add    eax,DWORD PTR ds:0x413d28
  401c27:	dec    eax
  401c28:	mov    ds:0x413d28,eax
  401c2d:	jmp    0x401bd9
  401c32:	mov    eax,ds:0x4163b4
  401c37:	mov    DWORD PTR ds:0x413c88,0x7ef
  401c41:	mov    eax,DWORD PTR [eax+0x194]
  401c47:	mov    ecx,DWORD PTR [eax]
  401c49:	mov    eax,DWORD PTR [ecx+0x3c]
  401c4c:	adc    DWORD PTR ds:0x413c74,0x414014
  401c56:	push   DWORD PTR ds:0x41648c
  401c5c:	add    DWORD PTR ds:0x413c1e,0x413d24
  401c66:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  401c6a:	push   DWORD PTR ds:0x416238
  401c70:	add    DWORD PTR ds:0x414000,0x414014
  401c7a:	add    eax,ecx
  401c7c:	mov    DWORD PTR ds:0x413d1c,0x15
  401c86:	cmp    DWORD PTR ds:0x413d1c,0x0
  401c8d:	je     0x401ce5
  401c93:	cmp    DWORD PTR ds:0x413d1c,0x3
  401c9a:	jne    0x401cb1
  401ca0:	push   0x8408
  401ca5:	push   DWORD PTR [ebp-0x24]
  401ca8:	push   DWORD PTR [ebp-0x1c]
  401cab:	call   DWORD PTR ds:0x416768
  401cb1:	cmp    DWORD PTR ds:0x413d1c,0x4
  401cb8:	jne    0x401ccb
  401cbe:	mov    ecx,DWORD PTR ds:0x413d1c
  401cc4:	dec    ecx
  401cc5:	mov    DWORD PTR ds:0x413d1c,ecx
  401ccb:	xor    ecx,ecx
  401ccd:	or     ecx,DWORD PTR ds:0x413d1c
  401cd3:	dec    ecx
  401cd4:	mov    DWORD PTR ds:0x413d1c,ecx
  401cda:	jmp    0x401c86
  401cdf:	add    DWORD PTR ds:0x413bfa,ecx
  401ce5:	mov    ecx,DWORD PTR ds:0x4163b4
  401ceb:	mov    ecx,DWORD PTR [ecx+0x194]
  401cf1:	or     DWORD PTR ds:0x414000,0x5329
  401cfb:	push   DWORD PTR [ecx]
  401cfd:	call   eax
  401cff:	mov    ecx,DWORD PTR ds:0x4163b4
  401d05:	mov    ecx,DWORD PTR [ecx+0x1cc]
  401d0b:	mov    DWORD PTR ds:0x413c78,0x5666
  401d15:	mov    DWORD PTR [ecx],eax
  401d17:	mov    DWORD PTR ds:0x413d24,0x5c21
  401d21:	jmp    0x402663
  401d26:	adc    edx,DWORD PTR ds:0x413cf0
  401d2c:	mov    ecx,DWORD PTR [ebp-0x8]
  401d2f:	sub    edx,DWORD PTR ds:0x413c70
  401d35:	mov    edx,DWORD PTR [ebp-0xa4]
  401d3b:	and    DWORD PTR ds:0x413ce4,0x413c06
  401d45:	xor    ecx,esi
  401d47:	sub    DWORD PTR ds:0x413d20,0x413d28
  401d51:	add    ecx,edi
  401d53:	cmp    ecx,edx
  401d55:	jne    0x40234f
  401d5b:	add    edx,ecx
  401d5d:	mov    ecx,DWORD PTR [ebp-0x8]
  401d60:	movzx  edx,WORD PTR ds:0x413ce8
  401d67:	sbb    DWORD PTR ds:0x413d20,edx
  401d6d:	mov    edx,DWORD PTR ds:0x4163b4
  401d73:	adc    DWORD PTR ds:0x413c12,0x5f59
  401d7d:	mov    edx,DWORD PTR [edx+0x198]
  401d83:	xor    ecx,esi
  401d85:	sbb    DWORD PTR ds:0x413ce8,0x413c16
  401d8f:	add    ecx,edi
  401d91:	cmp    ecx,DWORD PTR [edx]
  401d93:	mov    DWORD PTR ds:0x413ce8,0x77fb
  401d9d:	jne    0x401e78
  401da3:	and    DWORD PTR ds:0x414000,0x0
  401dad:	jmp    0x401dbf
  401db2:	mov    ecx,DWORD PTR ds:0x414000
  401db8:	inc    ecx
  401db9:	mov    DWORD PTR ds:0x414000,ecx
  401dbf:	cmp    DWORD PTR ds:0x414000,0x1b
  401dc6:	jae    0x401e12
  401dcc:	cmp    DWORD PTR ds:0x414000,0xb
  401dd3:	jne    0x401ded
  401dd9:	push   DWORD PTR [ebp-0x1c]
  401ddc:	push   0x413c78
  401de1:	push   DWORD PTR [ebp-0x14]
  401de4:	push   DWORD PTR [ebp-0x14]
  401de7:	call   DWORD PTR ds:0x416770
  401ded:	cmp    DWORD PTR ds:0x414000,0xa
  401df4:	jne    0x401e07
  401dfa:	mov    ecx,DWORD PTR ds:0x414000
  401e00:	inc    ecx
  401e01:	mov    DWORD PTR ds:0x414000,ecx
  401e07:	jmp    0x401db2
  401e0c:	xor    ecx,DWORD PTR ds:0x413c7c
  401e12:	mov    ecx,DWORD PTR [ebp-0x8]
  401e15:	and    DWORD PTR ds:0x413d34,0x54e0
  401e1f:	push   ebx
  401e20:	xor    ecx,esi
  401e22:	mov    DWORD PTR ds:0x413cec,0x48d
  401e2c:	add    ecx,edi
  401e2e:	xor    DWORD PTR ds:0x413ce4,0x413bf6
  401e38:	push   ecx
  401e39:	xor    DWORD PTR ds:0x413c74,0x7d0d
  401e43:	push   eax
  401e44:	and    DWORD PTR ds:0x413ce8,0xad4
  401e4e:	push   DWORD PTR [ebp-0xc]
  401e51:	adc    DWORD PTR ds:0x413cf4,0x414018
  401e5b:	push   DWORD PTR [ebp-0x8]
  401e5e:	sbb    DWORD PTR ds:0x413bf6,0x21c1
  401e68:	call   0x405399
  401e6d:	add    eax,DWORD PTR ds:0x41401c
  401e73:	mov    eax,0xf89c85bc
  401e78:	mov    ecx,DWORD PTR [ebp-0xc]
  401e7b:	sub    edx,DWORD PTR ds:0x413bfe
  401e81:	mov    DWORD PTR [ebp-0x18],ecx
  401e84:	or     ecx,DWORD PTR ds:0x413d2c
  401e8a:	mov    ecx,DWORD PTR [ebp-0x8]
  401e8d:	sub    DWORD PTR ds:0x413d1c,edi
  401e93:	mov    DWORD PTR [ebp-0x20],ecx
  401e96:	adc    ecx,0x6924
  401e9c:	mov    ecx,DWORD PTR [ebp-0x20]
  401e9f:	xor    ecx,esi
  401ea1:	mov    edx,DWORD PTR ds:0x413c74
  401ea7:	sub    DWORD PTR ds:0x413c02,edx
  401ead:	add    ecx,edi
  401eaf:	adc    edx,DWORD PTR ds:0x41401c
  401eb5:	mov    DWORD PTR [ebp+0x10],ecx
  401eb8:	mov    DWORD PTR ds:0x413c6c,0x13
  401ec2:	cmp    DWORD PTR ds:0x413c6c,0x0
  401ec9:	je     0x401f6c
  401ecf:	cmp    DWORD PTR ds:0x413c6c,0x7
  401ed6:	jne    0x401ef6
  401edc:	push   0x413d34
  401ee1:	push   0x7095
  401ee6:	push   0x4161ce
  401eeb:	push   0x4161ce
  401ef0:	call   DWORD PTR ds:0x416774
  401ef6:	cmp    DWORD PTR ds:0x413c6c,0x8
  401efd:	jne    0x401f10
  401f03:	mov    ecx,DWORD PTR ds:0x413c6c
  401f09:	dec    ecx
  401f0a:	mov    DWORD PTR ds:0x413c6c,ecx
  401f10:	mov    ecx,DWORD PTR ds:0x413c6c
  401f16:	dec    ecx
  401f17:	mov    DWORD PTR ds:0x413c6c,ecx
  401f1d:	jmp    0x401ec2
  401f22:	and    DWORD PTR ds:0x413c1a,0x0
  401f2c:	mov    ecx,DWORD PTR ds:0x413c1a
  401f32:	inc    ecx
  401f33:	mov    DWORD PTR ds:0x413c1a,ecx
  401f39:	cmp    DWORD PTR ds:0x413c1a,0x1f
  401f40:	jne    0x401f59
  401f46:	push   DWORD PTR [ebp-0x10]
  401f49:	push   0x413cdc
  401f4e:	push   0x4161a0
  401f53:	call   DWORD PTR ds:0x416778
  401f59:	cmp    DWORD PTR ds:0x413c1a,0x1a
  401f60:	jb     0x401f2c
  401f66:	inc    DWORD PTR ds:0x413c1e
  401f6c:	mov    ecx,DWORD PTR ds:0x416234
  401f72:	mov    ecx,DWORD PTR [ecx]
  401f74:	mov    DWORD PTR [ebp+0x10],ecx
  401f77:	mov    ecx,DWORD PTR ds:0x41643c
  401f7d:	mov    ecx,DWORD PTR [ecx]
  401f7f:	mov    DWORD PTR [ebp-0x1c],ecx
  401f82:	mov    edx,DWORD PTR ds:0x414014
  401f88:	sbb    DWORD PTR ds:0x413d34,edx
  401f8e:	mov    DWORD PTR [ebp+0xc],0xf89c87b0
  401f95:	mov    ecx,DWORD PTR [ebp+0xc]
  401f98:	xor    ecx,esi
  401f9a:	dec    DWORD PTR ds:0x413d24
  401fa0:	add    ecx,edi
  401fa2:	mov    edx,DWORD PTR ds:0x414010
  401fa8:	sbb    DWORD PTR ds:0x413bf6,edx
  401fae:	mov    DWORD PTR [ebp+0xc],ecx
  401fb1:	mov    ecx,DWORD PTR ds:0x4163b4
  401fb7:	or     edx,DWORD PTR ds:0x413c84
  401fbd:	mov    DWORD PTR [ebp+0xc],ecx
  401fc0:	mov    ecx,DWORD PTR [ebp+0x10]
  401fc3:	and    edx,DWORD PTR ds:0x413d20
  401fc9:	mov    DWORD PTR [ebp+0xc],ecx
  401fcc:	mov    ecx,DWORD PTR [ebp+0xc]
  401fcf:	push   0x4
  401fd1:	sbb    edx,0xf5
  401fd7:	pop    edx
  401fd8:	or     DWORD PTR ds:0x413bfe,0x38f7
  401fe2:	sub    edx,ecx
  401fe4:	add    edx,DWORD PTR [ebp-0x1c]
  401fe7:	xor    DWORD PTR ds:0x413c88,0x413cec
  401ff1:	mov    DWORD PTR [ebp-0x48],0xf89c85f0
  401ff8:	mov    DWORD PTR [ebp+0x10],edx
  401ffb:	mov    DWORD PTR [ebp-0x108],eax
  402001:	mov    eax,DWORD PTR [ebp+0xc]
  402004:	mov    DWORD PTR [ebp-0x104],eax
  40200a:	mov    eax,DWORD PTR [ebp+0x10]
  40200d:	mov    DWORD PTR [ebp-0x100],eax
  402013:	mov    eax,DWORD PTR [ebp-0x48]
  402016:	xor    eax,esi
  402018:	add    eax,edi
  40201a:	mov    DWORD PTR [ebp-0xfc],eax
  402020:	lea    eax,[ebp-0xb8]
  402026:	mov    DWORD PTR [ebp-0xf8],eax
  40202c:	mov    eax,DWORD PTR [ebp-0x108]
  402032:	xor    eax,esi
  402034:	add    eax,edi
  402036:	mov    DWORD PTR [ebp-0x108],eax
  40203c:	lea    eax,[ebp-0x108]
  402042:	push   eax
  402043:	mov    eax,DWORD PTR [ebp-0x18]
  402046:	xor    eax,esi
  402048:	add    eax,edi
  40204a:	push   eax
  40204b:	mov    eax,ds:0x4163d4
  402050:	push   0x41632a
  402055:	push   DWORD PTR [eax]
  402057:	call   0x402798
  40205c:	mov    eax,DWORD PTR [ebp+0xc]
  40205f:	mov    ecx,DWORD PTR [ebp+0x10]
  402062:	mov    DWORD PTR [ebp-0xa8],ecx
  402068:	mov    ecx,DWORD PTR [ebp-0x20]
  40206b:	xor    ecx,esi
  40206d:	mov    DWORD PTR [ebp-0x1c],eax
  402070:	add    ecx,edi
  402072:	jmp    0x4022ea
  402077:	lea    edx,[ecx+eax*1]
  40207a:	mov    DWORD PTR [ebp+0x10],edx
  40207d:	mov    edx,DWORD PTR [ebp-0xa8]
  402083:	sub    edx,ecx
  402085:	mov    DWORD PTR [ebp+0xc],edx
  402088:	mov    edx,DWORD PTR [ebp+0xc]
  40208b:	mov    DWORD PTR [ebp-0x6c],edx
  40208e:	mov    edx,DWORD PTR [ebp+0x10]
  402091:	mov    DWORD PTR [ebp-0x68],ebx
  402094:	mov    DWORD PTR [ebp-0x80],edx
  402097:	mov    DWORD PTR [ebp-0x2c],0xf89c85b1
  40209e:	mov    edx,DWORD PTR [ebp-0x68]
  4020a1:	xor    edx,esi
  4020a3:	add    edx,edi
  4020a5:	mov    DWORD PTR [ebp+0x10],edx
  4020a8:	mov    edx,DWORD PTR [ebp-0x68]
  4020ab:	xor    edx,esi
  4020ad:	add    edx,edi
  4020af:	mov    DWORD PTR [ebp+0xc],edx
  4020b2:	mov    DWORD PTR [ebp-0x88],0xf89c85d0
  4020bc:	mov    DWORD PTR [ebp-0x8c],0xf89c85bf
  4020c6:	mov    edx,DWORD PTR [ebp-0x68]
  4020c9:	mov    ebx,DWORD PTR [ebp-0x6c]
  4020cc:	xor    edx,esi
  4020ce:	add    edx,edi
  4020d0:	cmp    ebx,edx
  4020d2:	je     0x4022d9
  4020d8:	mov    eax,DWORD PTR [ebp-0x2c]
  4020db:	xor    eax,esi
  4020dd:	mov    edx,0xffcd8d24
  4020e2:	sub    edx,eax
  4020e4:	add    edx,DWORD PTR [ebp-0x6c]
  4020e7:	mov    eax,DWORD PTR [ebp-0x2c]
  4020ea:	mov    ebx,DWORD PTR [ebp+0x10]
  4020ed:	xor    eax,esi
  4020ef:	add    eax,edi
  4020f1:	imul   eax,ebx
  4020f4:	cmp    eax,edx
  4020f6:	ja     0x4022d6
  4020fc:	mov    edx,DWORD PTR [ebp+0x10]
  4020ff:	mov    eax,DWORD PTR [ebp-0x6c]
  402102:	mov    ebx,DWORD PTR [ebp-0x88]
  402108:	sub    eax,edx
  40210a:	xor    ebx,esi
  40210c:	xor    edx,edx
  40210e:	add    ebx,edi
  402110:	div    ebx
  402112:	mov    DWORD PTR [ebp+0xc],eax
  402115:	mov    eax,DWORD PTR [ebp-0x8c]
  40211b:	mov    edx,DWORD PTR [ebp+0xc]
  40211e:	xor    eax,esi
  402120:	add    eax,edi
  402122:	cmp    edx,eax
  402124:	jbe    0x402137
  40212a:	mov    eax,DWORD PTR [ebp-0x8c]
  402130:	xor    eax,esi
  402132:	add    eax,edi
  402134:	mov    DWORD PTR [ebp+0xc],eax
  402137:	mov    eax,DWORD PTR [ebp-0x88]
  40213d:	mov    edx,DWORD PTR [ebp+0xc]
  402140:	xor    eax,esi
  402142:	add    eax,edi
  402144:	imul   eax,edx
  402147:	mov    DWORD PTR [ebp+0xc],eax
  40214a:	mov    eax,DWORD PTR [ebp-0x68]
  40214d:	mov    edx,DWORD PTR [ebp+0xc]
  402150:	xor    eax,esi
  402152:	add    eax,edi
  402154:	cmp    edx,eax
  402156:	je     0x4022bf
  40215c:	mov    eax,DWORD PTR [ebp+0xc]
  40215f:	mov    DWORD PTR [ebp-0x28],eax
  402162:	mov    eax,DWORD PTR [ebp+0x10]
  402165:	add    eax,DWORD PTR [ebp-0x80]
  402168:	mov    DWORD PTR [ebp-0x48],0xf89c85b0
  40216f:	mov    DWORD PTR [ebp-0x44],eax
  402172:	mov    eax,0xf89c85b1
  402177:	mov    DWORD PTR [ebp-0x7c],eax
  40217a:	mov    DWORD PTR [ebp-0x74],0xf89c85b2
  402181:	mov    DWORD PTR [ebp-0x10],0xf89c85b3
  402188:	mov    DWORD PTR [ebp-0x3c],eax
  40218b:	mov    eax,DWORD PTR [ebp-0x48]
  40218e:	xor    eax,esi
  402190:	add    eax,edi
  402192:	jmp    0x40227b
  402197:	mov    DWORD PTR [ebp-0x98],0xf89c85b9
  4021a1:	mov    eax,DWORD PTR [ebp-0x3c]
  4021a4:	mov    edx,DWORD PTR [ebp+0xc]
  4021a7:	xor    eax,esi
  4021a9:	add    eax,edi
  4021ab:	imul   eax,edx
  4021ae:	mov    edx,DWORD PTR [ebp-0x44]
  4021b1:	mov    al,BYTE PTR [eax+edx*1]
  4021b4:	mov    BYTE PTR [ebp-0x1],al
  4021b7:	mov    eax,DWORD PTR [ebp-0x3c]
  4021ba:	mov    edx,DWORD PTR [ebp+0xc]
  4021bd:	xor    eax,esi
  4021bf:	add    eax,edi
  4021c1:	imul   eax,edx
  4021c4:	mov    edx,DWORD PTR [ebp-0x74]
  4021c7:	xor    edx,esi
  4021c9:	add    eax,edx
  4021cb:	mov    edx,DWORD PTR [ebp-0x44]
  4021ce:	movzx  eax,BYTE PTR [eax+edx*1+0x3272dc]
  4021d6:	mov    edx,DWORD PTR [ebp-0x98]
  4021dc:	xor    edx,esi
  4021de:	lea    eax,[edx+eax*1+0x3272dc]
  4021e5:	movzx  edx,BYTE PTR [ebp-0x1]
  4021e9:	xor    edx,eax
  4021eb:	mov    BYTE PTR [ebp-0x1],dl
  4021ee:	mov    al,BYTE PTR [ebp-0x1]
  4021f1:	mov    edx,DWORD PTR [ebp-0x3c]
  4021f4:	mov    ebx,DWORD PTR [ebp+0xc]
  4021f7:	xor    edx,esi
  4021f9:	add    edx,edi
  4021fb:	imul   edx,ebx
  4021fe:	mov    ebx,DWORD PTR [ebp-0x44]
  402201:	mov    BYTE PTR [edx+ebx*1],al
  402204:	mov    eax,DWORD PTR [ebp-0x3c]
  402207:	mov    edx,DWORD PTR [ebp+0xc]
  40220a:	xor    eax,esi
  40220c:	add    eax,edi
  40220e:	imul   eax,edx
  402211:	mov    edx,DWORD PTR [ebp-0x44]
  402214:	mov    al,BYTE PTR [eax+edx*1]
  402217:	mov    BYTE PTR [ebp-0x1],al
  40221a:	mov    eax,DWORD PTR [ebp-0x3c]
  40221d:	mov    edx,DWORD PTR [ebp+0xc]
  402220:	xor    eax,esi
  402222:	add    eax,edi
  402224:	imul   eax,edx
  402227:	mov    edx,DWORD PTR [ebp-0x7c]
  40222a:	xor    edx,esi
  40222c:	add    eax,edx
  40222e:	mov    edx,DWORD PTR [ebp-0x44]
  402231:	movzx  eax,BYTE PTR [eax+edx*1+0x3272dc]
  402239:	mov    edx,DWORD PTR [ebp-0xc4]
  40223f:	xor    edx,esi
  402241:	lea    eax,[edx+eax*1+0x3272dc]
  402248:	movzx  edx,BYTE PTR [ebp-0x1]
  40224c:	xor    edx,eax
  40224e:	mov    BYTE PTR [ebp-0x1],dl
  402251:	mov    al,BYTE PTR [ebp-0x1]
  402254:	mov    edx,DWORD PTR [ebp-0x3c]
  402257:	mov    ebx,DWORD PTR [ebp+0xc]
  40225a:	xor    edx,esi
  40225c:	add    edx,edi
  40225e:	imul   edx,ebx
  402261:	mov    ebx,DWORD PTR [ebp-0x44]
  402264:	mov    BYTE PTR [edx+ebx*1],al
  402267:	mov    eax,DWORD PTR [ebp-0x10]
  40226a:	mov    edx,DWORD PTR [ebp-0x7c]
  40226d:	xor    eax,esi
  40226f:	xor    edx,esi
  402271:	add    eax,edi
  402273:	add    edx,edi
  402275:	imul   eax,edx
  402278:	add    eax,DWORD PTR [ebp+0xc]
  40227b:	mov    DWORD PTR [ebp+0xc],eax
  40227e:	mov    eax,DWORD PTR [ebp+0xc]
  402281:	mov    edx,DWORD PTR [ebp-0x28]
  402284:	cmp    edx,eax
  402286:	jb     0x402197
  40228c:	mov    eax,DWORD PTR [ebp-0x7c]
  40228f:	mov    edx,DWORD PTR [ebp-0x28]
  402292:	xor    eax,esi
  402294:	add    eax,edi
  402296:	imul   eax,edx
  402299:	mov    edx,DWORD PTR [ebp-0x48]
  40229c:	xor    edx,esi
  40229e:	add    edx,edi
  4022a0:	or     eax,edx
  4022a2:	mov    edx,DWORD PTR [ebp-0x2c]
  4022a5:	xor    edx,esi
  4022a7:	add    eax,edx
  4022a9:	mov    edx,DWORD PTR [ebp-0x2c]
  4022ac:	xor    edx,esi
  4022ae:	add    eax,edx
  4022b0:	mov    edx,DWORD PTR [ebp+0x10]
  4022b3:	lea    eax,[eax+edx*1+0x64e5b8]
  4022ba:	jmp    0x4022ce
  4022bf:	mov    eax,DWORD PTR [ebp-0x2c]
  4022c2:	mov    edx,DWORD PTR [ebp+0x10]
  4022c5:	xor    eax,esi
  4022c7:	lea    eax,[eax+edx*1+0x3272dc]
  4022ce:	mov    DWORD PTR [ebp+0x10],eax
  4022d1:	jmp    0x4020d8
  4022d6:	mov    eax,DWORD PTR [ebp-0x1c]
  4022d9:	mov    edx,DWORD PTR [ebp-0x18]
  4022dc:	xor    edx,esi
  4022de:	mov    ebx,0xf89c85b0
  4022e3:	lea    ecx,[ecx+edx*1+0x3272dc]
  4022ea:	lea    edx,[ecx-0x3272dc]
  4022f0:	xor    edx,esi
  4022f2:	cmp    edx,0xf89c95b0
  4022f8:	jne    0x402077
  4022fe:	mov    ecx,DWORD PTR [ebp-0x20]
  402301:	xor    ecx,esi
  402303:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dc]
  40230a:	mov    BYTE PTR [ebp+0xf],cl
  40230d:	mov    ecx,DWORD PTR [ebp-0x18]
  402310:	mov    edx,DWORD PTR [ebp-0x20]
  402313:	xor    ecx,esi
  402315:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dc]
  40231c:	xor    edx,esi
  40231e:	mov    BYTE PTR [edx+eax*1+0x3272dc],cl
  402325:	mov    ecx,DWORD PTR [ebp-0x18]
  402328:	mov    dl,BYTE PTR [ebp+0xf]
  40232b:	xor    ecx,esi
  40232d:	mov    BYTE PTR [ecx+eax*1+0x3272dc],dl
  402334:	mov    eax,DWORD PTR [ebp-0x18]
  402337:	mov    eax,DWORD PTR [ebp-0x8]
  40233a:	xor    eax,esi
  40233c:	add    eax,edi
  40233e:	mov    ds:0x416438,eax
  402343:	mov    eax,DWORD PTR [ebp-0x8]
  402346:	xor    eax,esi
  402348:	add    eax,edi
  40234a:	mov    ds:0x416430,eax
  40234f:	lea    eax,[ebp-0x40]
  402352:	mov    DWORD PTR [ebp-0xc0],eax
  402358:	lea    eax,[ebp+0x4]
  40235b:	mov    DWORD PTR [ebp-0x40],eax
  40235e:	mov    eax,DWORD PTR [ebp-0x40]
  402361:	test   eax,eax
  402363:	je     0x402663
  402369:	mov    eax,ds:0x4163b4
  40236e:	mov    DWORD PTR [ebp+0xc],0xf152c39
  402375:	mov    DWORD PTR [ebp+0xc],0x712ed0e
  40237c:	mov    DWORD PTR [ebp+0xc],0x373fc28
  402383:	mov    DWORD PTR [ebp+0xc],0x72670a18
  40238a:	mov    DWORD PTR [ebp+0x10],eax
  40238d:	mov    eax,ds:0x4164c0
  402392:	mov    DWORD PTR [ebp-0xac],eax
  402398:	and    DWORD PTR [ebp-0x90],0x0
  40239f:	mov    DWORD PTR [ebp+0xc],ebx
  4023a2:	mov    DWORD PTR [ebp-0x28],0xf89c85b1
  4023a9:	mov    eax,DWORD PTR [ebp-0x58]
  4023ac:	mov    ecx,DWORD PTR [ebp-0x58]
  4023af:	xor    eax,ecx
  4023b1:	mov    DWORD PTR [ebp-0x58],eax
  4023b4:	or     DWORD PTR [ebp-0x58],0xf89cb5b0
  4023bb:	mov    eax,DWORD PTR [ebp-0x70]
  4023be:	mov    ecx,DWORD PTR [ebp-0x70]
  4023c1:	xor    eax,ecx
  4023c3:	mov    DWORD PTR [ebp-0x70],eax
  4023c6:	add    DWORD PTR [ebp-0x70],0xf89f05b0
  4023cd:	mov    eax,DWORD PTR [ebp-0x50]
  4023d0:	mov    ecx,DWORD PTR [ebp-0x50]
  4023d3:	xor    eax,ecx
  4023d5:	mov    DWORD PTR [ebp-0x50],eax
  4023d8:	add    DWORD PTR [ebp-0x50],0xf89c85f0
  4023df:	mov    eax,DWORD PTR [ebp-0x64]
  4023e2:	mov    ecx,DWORD PTR [ebp-0x64]
  4023e5:	xor    eax,ecx
  4023e7:	mov    DWORD PTR [ebp-0x64],eax
  4023ea:	add    DWORD PTR [ebp-0x64],0xf89c85d0
  4023f1:	mov    eax,DWORD PTR [ebp-0x4c]
  4023f4:	mov    ecx,DWORD PTR [ebp-0x4c]
  4023f7:	xor    eax,ecx
  4023f9:	mov    DWORD PTR [ebp-0x4c],eax
  4023fc:	mov    eax,DWORD PTR [ebp+0xc]
  4023ff:	mov    ecx,DWORD PTR [ebp-0x4c]
  402402:	xor    eax,esi
  402404:	add    eax,edi
  402406:	xor    eax,ecx
  402408:	mov    DWORD PTR [ebp-0x4c],eax
  40240b:	mov    eax,DWORD PTR [ebp-0x30]
  40240e:	mov    ecx,DWORD PTR [ebp-0x30]
  402411:	sub    eax,ecx
  402413:	mov    DWORD PTR [ebp-0x30],eax
  402416:	add    DWORD PTR [ebp-0x30],0xf89c85bd
  40241d:	mov    al,BYTE PTR [ebp-0x2]
  402420:	movzx  ecx,BYTE PTR [ebp-0x2]
  402424:	movzx  eax,al
  402427:	sub    eax,ecx
  402429:	mov    BYTE PTR [ebp-0x2],al
  40242c:	movzx  eax,BYTE PTR [ebp-0x2]
  402430:	xor    eax,0xffffff85
  402433:	mov    BYTE PTR [ebp-0x2],al
  402436:	mov    eax,DWORD PTR [ebp+0xc]
  402439:	xor    eax,esi
  40243b:	add    eax,edi
  40243d:	mov    DWORD PTR [ebp-0x4c],eax
  402440:	lea    eax,[ebp-0x9c]
  402446:	mov    DWORD PTR [ebp-0xa0],eax
  40244c:	lea    eax,[ebp-0xa0]
  402452:	mov    DWORD PTR [ebp-0x94],eax
  402458:	lea    eax,[ebp-0x94]
  40245e:	mov    DWORD PTR [ebp-0x38],eax
  402461:	lea    eax,[ebp-0x38]
  402464:	mov    DWORD PTR [ebp-0xb4],eax
  40246a:	mov    eax,DWORD PTR [ebp-0x50]
  40246d:	xor    eax,esi
  40246f:	add    eax,edi
  402471:	push   eax
  402472:	mov    eax,DWORD PTR [ebp-0x58]
  402475:	xor    eax,esi
  402477:	add    eax,edi
  402479:	push   eax
  40247a:	mov    eax,DWORD PTR [ebp-0x30]
  40247d:	xor    eax,esi
  40247f:	add    eax,edi
  402481:	push   eax
  402482:	lea    eax,[ebp-0x14c]
  402488:	push   eax
  402489:	push   DWORD PTR [ebp+0xc]
  40248c:	push   DWORD PTR [ebp-0x28]
  40248f:	call   0x407c50
  402494:	test   eax,eax
  402496:	je     0x4024ca
  40249c:	lea    eax,[ebp-0x14c]
  4024a2:	push   eax
  4024a3:	mov    eax,DWORD PTR [ebp-0x28]
  4024a6:	xor    eax,esi
  4024a8:	add    eax,edi
  4024aa:	push   eax
  4024ab:	mov    eax,DWORD PTR [ebp+0x10]
  4024ae:	add    eax,0xaa
  4024b3:	push   eax
  4024b4:	mov    eax,DWORD PTR [ebp+0x10]
  4024b7:	mov    eax,DWORD PTR [eax+0x198]
  4024bd:	push   DWORD PTR [eax]
  4024bf:	call   0x402798
  4024c4:	mov    DWORD PTR [ebp-0x9c],eax
  4024ca:	lea    eax,[ebp+0x4]
  4024cd:	mov    DWORD PTR [ebp-0x90],eax
  4024d3:	mov    eax,DWORD PTR [ebp-0x38]
  4024d6:	mov    eax,DWORD PTR [eax]
  4024d8:	mov    eax,DWORD PTR [eax]
  4024da:	mov    eax,DWORD PTR [eax]
  4024dc:	test   eax,eax
  4024de:	je     0x402565
  4024e4:	lea    eax,[ebp-0x34]
  4024e7:	mov    DWORD PTR [ebp-0xbc],eax
  4024ed:	mov    eax,DWORD PTR [ebp-0xac]
  4024f3:	mov    DWORD PTR [ebp-0x34],eax
  4024f6:	mov    eax,DWORD PTR [ebp-0x38]
  4024f9:	mov    eax,DWORD PTR [eax]
  4024fb:	mov    eax,DWORD PTR [eax]
  4024fd:	mov    eax,DWORD PTR [eax]
  4024ff:	sub    DWORD PTR [ebp-0x34],eax
  402502:	mov    ecx,DWORD PTR [ebp-0x30]
  402505:	xor    ecx,esi
  402507:	mov    eax,0xffcd8d24
  40250c:	sub    eax,ecx
  40250e:	add    DWORD PTR [ebp-0x34],eax
  402511:	mov    eax,DWORD PTR [ebp-0x34]
  402514:	mov    ecx,DWORD PTR [ebp-0x38]
  402517:	mov    ecx,DWORD PTR [ecx]
  402519:	mov    ecx,DWORD PTR [ecx]
  40251b:	mov    ecx,DWORD PTR [ecx]
  40251d:	mov    DWORD PTR [ecx+0x1],eax
  402520:	mov    al,BYTE PTR [ebp-0x2]
  402523:	mov    ecx,DWORD PTR [ebp-0x38]
  402526:	mov    ecx,DWORD PTR [ecx]
  402528:	mov    ecx,DWORD PTR [ecx]
  40252a:	mov    ecx,DWORD PTR [ecx]
  40252c:	push   DWORD PTR [ebp+0x10]
  40252f:	xor    al,0x70
  402531:	sub    al,0xc
  402533:	mov    BYTE PTR [ecx],al
  402535:	mov    eax,ds:0x416230
  40253a:	push   DWORD PTR [eax]
  40253c:	push   DWORD PTR ds:0x41648c
  402542:	push   DWORD PTR ds:0x416238
  402548:	push   DWORD PTR ds:0x41646c
  40254e:	push   DWORD PTR ds:0x416510
  402554:	push   DWORD PTR [ebp-0x28]
  402557:	push   DWORD PTR [ebp+0xc]
  40255a:	mov    eax,DWORD PTR [ebp-0x38]
  40255d:	mov    eax,DWORD PTR [eax]
  40255f:	mov    eax,DWORD PTR [eax]
  402561:	mov    eax,DWORD PTR [eax]
  402563:	call   eax
  402565:	mov    eax,DWORD PTR [ebp-0x24]
  402568:	mov    eax,DWORD PTR [ebp-0xc]
  40256b:	mov    eax,DWORD PTR [ebp-0x8]
  40256e:	mov    DWORD PTR [ebp+0xc],eax
  402571:	mov    eax,eax
  402573:	mov    eax,ds:0x4163b4
  402578:	mov    eax,DWORD PTR [eax+0x1c8]
  40257e:	mov    eax,DWORD PTR [eax]
  402580:	cdq    
  402581:	mov    ebx,eax
  402583:	mov    eax,0xfabdbeef
  402588:	add    ebx,eax
  40258a:	adc    edx,0xffffffff
  40258d:	and    DWORD PTR [ebp-0x10],0x0
  402591:	xor    edx,0x0
  402594:	mov    DWORD PTR [ebp-0x80],edx
  402597:	mov    edx,DWORD PTR [ebp+0xc]
  40259a:	mov    DWORD PTR [ebp-0x14],edx
  40259d:	mov    ecx,0x8a29a125
  4025a2:	xor    ebx,ecx
  4025a4:	add    DWORD PTR [ebp-0x14],eax
  4025a7:	mov    edx,DWORD PTR [ebp-0x14]
  4025aa:	adc    DWORD PTR [ebp-0x10],0xffffffff
  4025ae:	xor    edx,ecx
  4025b0:	mov    DWORD PTR [ebp-0x78],edx
  4025b3:	mov    edx,DWORD PTR [ebp-0x10]
  4025b6:	xor    edx,0x0
  4025b9:	mov    DWORD PTR [ebp-0x74],edx
  4025bc:	cmp    DWORD PTR [ebp-0x78],ebx
  4025bf:	jne    0x4025d1
  4025c5:	mov    edx,DWORD PTR [ebp-0x80]
  4025c8:	cmp    DWORD PTR [ebp-0x74],edx
  4025cb:	je     0x402600
  4025d1:	mov    edx,DWORD PTR ds:0x4163b4
  4025d7:	mov    edx,DWORD PTR [edx+0x1c0]
  4025dd:	mov    edx,DWORD PTR [edx]
  4025df:	xor    ebx,ebx
  4025e1:	add    edx,eax
  4025e3:	adc    ebx,0xffffffff
  4025e6:	xor    edx,ecx
  4025e8:	xor    ebx,0x0
  4025eb:	cmp    edx,0x70941fd5
  4025f1:	jne    0x402663
  4025f7:	cmp    ebx,0xffffffff
  4025fa:	jne    0x402663
  402600:	mov    edx,DWORD PTR ds:0x416430
  402606:	mov    ebx,DWORD PTR ds:0x416438
  40260c:	xor    edx,ebx
  40260e:	mov    DWORD PTR ds:0x416430,edx
  402614:	mov    edx,DWORD PTR [ebp-0x40]
  402617:	mov    ebx,DWORD PTR ds:0x416430
  40261d:	add    ebx,DWORD PTR [edx]
  40261f:	mov    edx,DWORD PTR [ebp-0x40]
  402622:	mov    DWORD PTR [edx],ebx
  402624:	mov    edx,DWORD PTR [ebp+0xc]
  402627:	xor    esi,edx
  402629:	mov    edx,DWORD PTR ds:0x416430
  40262f:	add    esi,edi
  402631:	xor    ebx,ebx
  402633:	add    esi,eax
  402635:	adc    ebx,0xffffffff
  402638:	xor    edi,edi
  40263a:	xor    esi,ecx
  40263c:	xor    ebx,0x0
  40263f:	add    edx,eax
  402641:	adc    edi,0xffffffff
  402644:	xor    edx,ecx
  402646:	xor    edi,0x0
  402649:	cmp    edx,esi
  40264b:	jne    0x402663
  402651:	cmp    edi,ebx
  402653:	jne    0x402663
  402659:	mov    eax,ds:0x416430
  40265e:	mov    ds:0x416438,eax
  402663:	mov    eax,ds:0x4163b4
  402668:	push   0x4
  40266a:	add    eax,0x1cc
  40266f:	push   eax
  402670:	lea    eax,[ebp-0x24]
  402673:	push   eax
  402674:	call   0x40a25b
  402679:	mov    eax,DWORD PTR [ebp-0x24]
  40267c:	mov    eax,DWORD PTR [eax]
  40267e:	pop    edi
  40267f:	pop    esi
  402680:	pop    ebx
  402681:	leave  
  402682:	ret    0xc
  402685:	push   ebp
  402686:	mov    ebp,esp
  402688:	mov    DWORD PTR ds:0x4164c4,0xf89c85b1
  402692:	mov    DWORD PTR ds:0x41400c,0x56b8
  40269c:	pop    ebp
  40269d:	jmp    0x401000
  4026a2:	xor    eax,eax
  4026a4:	inc    eax
  4026a5:	ret    
  4026a6:	push   ebp
  4026a7:	mov    ebp,esp
  4026a9:	push   ecx
  4026aa:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  4026b1:	mov    DWORD PTR ds:0x414008,0x3fb4
  4026bb:	mov    eax,DWORD PTR [ebp+0x8]
  4026be:	add    DWORD PTR ds:0x413bf6,0x2653
  4026c8:	mov    al,BYTE PTR [eax]
  4026ca:	add    al,0xc
  4026cc:	xor    al,0x70
  4026ce:	cmp    al,0x29
  4026d0:	mov    DWORD PTR ds:0x413cf0,0x3ac2
  4026da:	jne    0x402787
  4026e0:	add    edx,DWORD PTR ds:0x41401c
  4026e6:	mov    eax,DWORD PTR [ebp+0x8]
  4026e9:	and    DWORD PTR ds:0x413c84,0x0
  4026f3:	jmp    0x402707
  4026f8:	xor    edx,edx
  4026fa:	xor    edx,DWORD PTR ds:0x413c84
  402700:	inc    edx
  402701:	mov    DWORD PTR ds:0x413c84,edx
  402707:	cmp    DWORD PTR ds:0x413c84,0x12
  40270e:	jae    0x40274b
  402714:	cmp    DWORD PTR ds:0x413c84,0x7
  40271b:	jne    0x40272c
  402721:	push   0x4160b3
  402726:	call   DWORD PTR ds:0x41677c
  40272c:	cmp    DWORD PTR ds:0x413c84,0x6
  402733:	jne    0x402746
  402739:	mov    edx,DWORD PTR ds:0x413c84
  40273f:	inc    edx
  402740:	mov    DWORD PTR ds:0x413c84,edx
  402746:	jmp    0x4026f8
  40274b:	mov    ecx,DWORD PTR [ebp+0x8]
  40274e:	add    ecx,DWORD PTR [eax+0x3c]
  402751:	mov    edx,0x7510894
  402756:	mov    DWORD PTR [ebp+0x8],ecx
  402759:	mov    eax,DWORD PTR [ebp-0x4]
  40275c:	xor    eax,edx
  40275e:	push   esi
  40275f:	mov    esi,DWORD PTR [ebp+0x8]
  402762:	mov    ecx,0x3272dc
  402767:	add    eax,ecx
  402769:	cmp    DWORD PTR [esi+0x54],eax
  40276c:	pop    esi
  40276d:	je     0x40277b
  402773:	mov    eax,DWORD PTR [ebp+0x8]
  402776:	jmp    0x402794
  40277b:	mov    eax,DWORD PTR [ebp-0x4]
  40277e:	xor    eax,edx
  402780:	add    eax,ecx
  402782:	jmp    0x402794
  402787:	mov    eax,DWORD PTR [ebp-0x4]
  40278a:	xor    eax,0x7510894
  40278f:	add    eax,0x3272dc
  402794:	leave  
  402795:	ret    0x4
  402798:	push   ebp
  402799:	mov    ebp,esp
  40279b:	sub    esp,0x78
  40279e:	xor    DWORD PTR ds:0x413c1e,0x50b0
  4027a8:	push   ebx
  4027a9:	adc    DWORD PTR ds:0x413d30,0x7f7d
  4027b3:	push   esi
  4027b4:	add    DWORD PTR ds:0x413d30,0x413cf0
  4027be:	push   edi
  4027bf:	push   0x1f
  4027c1:	and    DWORD PTR ds:0x413bf6,0x413c80
  4027cb:	lea    eax,[ebp-0x78]
  4027ce:	push   eax
  4027cf:	push   0x0
  4027d1:	adc    DWORD PTR ds:0x413d34,0x413c80
  4027db:	call   DWORD PTR ds:0x41676c
  4027e1:	push   0x97898797
  4027e6:	call   DWORD PTR ds:0x416754
  4027ec:	sub    ecx,ecx
  4027ee:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  4027f5:	xor    DWORD PTR ds:0x414008,0x58a1
  4027ff:	mov    DWORD PTR [ebp-0x14],0xf89c85b1
  402806:	mov    ecx,DWORD PTR [ebp-0x4]
  402809:	mov    ebx,0x7510894
  40280e:	xor    ecx,ebx
  402810:	mov    eax,0x3272dc
  402815:	xor    DWORD PTR ds:0x413c6c,0x3fbb
  40281f:	add    ecx,eax
  402821:	mov    DWORD PTR [ebp-0x1c],ecx
  402824:	sbb    DWORD PTR ds:0x413d34,edi
  40282a:	mov    ecx,DWORD PTR [ebp+0x14]
  40282d:	test   ecx,ecx
  40282f:	je     0x402847
  402835:	mov    ecx,DWORD PTR [ebp+0x14]
  402838:	mov    ecx,DWORD PTR [ecx]
  40283a:	or     DWORD PTR ds:0x413c0a,0x414000
  402844:	mov    DWORD PTR [ebp-0x1c],ecx
  402847:	mov    DWORD PTR ds:0x413d34,0x1f
  402851:	cmp    DWORD PTR ds:0x413d34,0x0
  402858:	je     0x40288f
  40285e:	cmp    DWORD PTR ds:0x413d34,0x22
  402865:	jne    0x40287d
  40286b:	push   0x414010
  402870:	push   0x0
  402872:	push   0x416017
  402877:	call   DWORD PTR ds:0x416780
  40287d:	mov    ecx,DWORD PTR ds:0x413d34
  402883:	dec    ecx
  402884:	mov    DWORD PTR ds:0x413d34,ecx
  40288a:	jmp    0x402851
  40288f:	mov    ecx,0x7665
  402894:	sbb    edi,edi
  402896:	imul   edx,eax
  402899:	and    DWORD PTR ds:0x413c80,0x0
  4028a3:	mov    esi,DWORD PTR ds:0x413c80
  4028a9:	inc    esi
  4028aa:	mov    DWORD PTR ds:0x413c80,esi
  4028b0:	cmp    DWORD PTR ds:0x413c80,0xc
  4028b7:	jne    0x4028cb
  4028bd:	push   0x413ce4
  4028c2:	push   DWORD PTR [ebp-0x20]
  4028c5:	call   DWORD PTR ds:0x416784
  4028cb:	cmp    DWORD PTR ds:0x413c80,0xb
  4028d2:	jne    0x4028e5
  4028d8:	mov    esi,DWORD PTR ds:0x413c80
  4028de:	inc    esi
  4028df:	mov    DWORD PTR ds:0x413c80,esi
  4028e5:	cmp    DWORD PTR ds:0x413c80,0x1c
  4028ec:	jb     0x4028a3
  4028f2:	mov    esi,0x76532
  4028f7:	mov    DWORD PTR ds:0x413d30,0x639a
  402901:	add    edx,ecx
  402903:	movzx  edi,BYTE PTR ds:0x413ce4
  40290a:	and    DWORD PTR ds:0x413bfe,edi
  402910:	xchg   esi,ecx
  402912:	sbb    DWORD PTR ds:0x413c80,edi
  402918:	mov    edi,0x54354
  40291d:	mov    DWORD PTR ds:0x413d34,0x5e6f
  402927:	sub    edx,edi
  402929:	mov    ecx,DWORD PTR [ebp-0x4]
  40292c:	xor    ecx,ebx
  40292e:	mov    DWORD PTR ds:0x413c70,0x13
  402938:	cmp    DWORD PTR ds:0x413c70,0x0
  40293f:	je     0x40299c
  402945:	cmp    DWORD PTR ds:0x413c70,0x5
  40294c:	jne    0x402962
  402952:	push   0x7f69
  402957:	push   0x41606e
  40295c:	call   DWORD PTR ds:0x41678c
  402962:	cmp    DWORD PTR ds:0x413c70,0x6
  402969:	jne    0x40297c
  40296f:	mov    esi,DWORD PTR ds:0x413c70
  402975:	dec    esi
  402976:	mov    DWORD PTR ds:0x413c70,esi
  40297c:	mov    esi,DWORD PTR ds:0x413c70
  402982:	dec    esi
  402983:	mov    DWORD PTR ds:0x413c70,esi
  402989:	jmp    0x402938
  40298e:	mov    esi,DWORD PTR ds:0x413cb0
  402994:	mov    esi,DWORD PTR [esi]
  402996:	adc    DWORD PTR ds:0x414008,esi
  40299c:	add    ecx,eax
  40299e:	mov    DWORD PTR [ebp-0x8],ecx
  4029a1:	sub    ecx,ecx
  4029a3:	mov    ecx,DWORD PTR [ebp-0x14]
  4029a6:	sub    DWORD PTR ds:0x413c80,ebx
  4029ac:	xor    ecx,ebx
  4029ae:	add    ecx,eax
  4029b0:	mov    DWORD PTR [ebp-0x24],ecx
  4029b3:	sub    ecx,0x1ce
  4029b9:	mov    ecx,DWORD PTR [ebp-0x4]
  4029bc:	mov    esi,DWORD PTR ds:0x413c1a
  4029c2:	xor    DWORD PTR ds:0x413d1c,esi
  4029c8:	xor    ecx,ebx
  4029ca:	add    ecx,eax
  4029cc:	add    DWORD PTR ds:0x413d34,edi
  4029d2:	mov    DWORD PTR [ebp-0x30],ecx
  4029d5:	movzx  esi,BYTE PTR ds:0x414010
  4029dc:	sbb    esi,DWORD PTR ds:0x413bfe
  4029e2:	mov    DWORD PTR ds:0x414010,esi
  4029e8:	mov    esi,DWORD PTR [ebp-0x4]
  4029eb:	adc    ecx,DWORD PTR ds:0x413c16
  4029f1:	xor    esi,ebx
  4029f3:	xor    DWORD PTR ds:0x41401c,ecx
  4029f9:	add    esi,eax
  4029fb:	and    DWORD PTR ds:0x413c84,0x0
  402a05:	jmp    0x402a17
  402a0a:	mov    ecx,DWORD PTR ds:0x413c84
  402a10:	inc    ecx
  402a11:	mov    DWORD PTR ds:0x413c84,ecx
  402a17:	cmp    DWORD PTR ds:0x413c84,0x19
  402a1e:	jae    0x402af3
  402a24:	cmp    DWORD PTR ds:0x413c84,0xd
  402a2b:	jne    0x402a51
  402a31:	push   0x7c39
  402a36:	push   0x413c1e
  402a3b:	push   0x8717
  402a40:	push   0x416025
  402a45:	push   DWORD PTR [ebp-0x28]
  402a48:	push   DWORD PTR [ebp-0x10]
  402a4b:	call   DWORD PTR ds:0x416790
  402a51:	cmp    DWORD PTR ds:0x413c84,0xc
  402a58:	jne    0x402a6b
  402a5e:	mov    ecx,DWORD PTR ds:0x413c84
  402a64:	inc    ecx
  402a65:	mov    DWORD PTR ds:0x413c84,ecx
  402a6b:	jmp    0x402a0a
  402a70:	mov    DWORD PTR ds:0x413d30,0x12
  402a7a:	cmp    DWORD PTR ds:0x413d30,0x0
  402a81:	je     0x402af3
  402a87:	cmp    DWORD PTR ds:0x413d30,0x21
  402a8e:	jne    0x402a9f
  402a94:	push   0x1529
  402a99:	call   DWORD PTR ds:0x416798
  402a9f:	mov    ecx,DWORD PTR ds:0x413d30
  402aa5:	dec    ecx
  402aa6:	mov    DWORD PTR ds:0x413d30,ecx
  402aac:	jmp    0x402a7a
  402ab1:	and    DWORD PTR ds:0x413d34,0x0
  402abb:	mov    ecx,DWORD PTR ds:0x413d34
  402ac1:	inc    ecx
  402ac2:	mov    DWORD PTR ds:0x413d34,ecx
  402ac8:	cmp    DWORD PTR ds:0x413d34,0x29
  402acf:	jne    0x402ae0
  402ad5:	push   0x413c12
  402ada:	call   DWORD PTR ds:0x41679c
  402ae0:	cmp    DWORD PTR ds:0x413d34,0x19
  402ae7:	jb     0x402abb
  402aed:	or     ecx,DWORD PTR ds:0x413c0a
  402af3:	mov    ecx,DWORD PTR [ebp-0x24]
  402af6:	or     DWORD PTR ds:0x413c88,0x413c12
  402b00:	sub    ecx,eax
  402b02:	add    DWORD PTR ds:0x413c1e,0x57cd
  402b0c:	lea    edx,[esi-0x3272dc]
  402b12:	xor    ecx,ebx
  402b14:	and    DWORD PTR ds:0x413ce8,0xb77
  402b1e:	xor    edx,ebx
  402b20:	mov    DWORD PTR ds:0x413bfe,0x29ac
  402b2a:	cmp    edx,ecx
  402b2c:	mov    DWORD PTR ds:0x413ce4,0x2b4b
  402b36:	je     0x402e02
  402b3c:	sub    ecx,DWORD PTR ds:0x413d34
  402b42:	mov    ecx,DWORD PTR [ebp-0x4]
  402b45:	xor    DWORD PTR ds:0x413bfe,0x413c84
  402b4f:	xor    ecx,ebx
  402b51:	adc    DWORD PTR ds:0x413bf6,0x7b2
  402b5b:	add    ecx,eax
  402b5d:	cmp    esi,ecx
  402b5f:	jne    0x402ddf
  402b65:	or     DWORD PTR ds:0x413cf0,0x413c1e
  402b6f:	push   DWORD PTR [ebp+0x8]
  402b72:	call   0x4026a6
  402b77:	mov    DWORD PTR ds:0x414004,0x1c
  402b81:	cmp    DWORD PTR ds:0x414004,0x0
  402b88:	je     0x402bc3
  402b8e:	cmp    DWORD PTR ds:0x414004,0x2b
  402b95:	jne    0x402ba9
  402b9b:	push   0x413c6c
  402ba0:	push   DWORD PTR [ebp-0x24]
  402ba3:	call   DWORD PTR ds:0x41675c
  402ba9:	xor    ecx,ecx
  402bab:	or     ecx,DWORD PTR ds:0x414004
  402bb1:	dec    ecx
  402bb2:	mov    DWORD PTR ds:0x414004,ecx
  402bb8:	jmp    0x402b81
  402bbd:	sbb    DWORD PTR ds:0x413d34,ecx
  402bc3:	mov    DWORD PTR [ebp-0x18],eax
  402bc6:	and    DWORD PTR ds:0x413d28,0x0
  402bd0:	jmp    0x402be2
  402bd5:	mov    ecx,DWORD PTR ds:0x413d28
  402bdb:	inc    ecx
  402bdc:	mov    DWORD PTR ds:0x413d28,ecx
  402be2:	cmp    DWORD PTR ds:0x413d28,0x16
  402be9:	jae    0x402c2e
  402bef:	cmp    DWORD PTR ds:0x413d28,0x5
  402bf6:	jne    0x402c0f
  402bfc:	push   DWORD PTR [ebp-0x10]
  402bff:	push   0x41400c
  402c04:	push   0x2409
  402c09:	call   DWORD PTR ds:0x416760
  402c0f:	cmp    DWORD PTR ds:0x413d28,0x4
  402c16:	jne    0x402c29
  402c1c:	mov    ecx,DWORD PTR ds:0x413d28
  402c22:	inc    ecx
  402c23:	mov    DWORD PTR ds:0x413d28,ecx
  402c29:	jmp    0x402bd5
  402c2e:	mov    eax,DWORD PTR [ebp-0x4]
  402c31:	sub    DWORD PTR ds:0x413ce4,0x168d
  402c3b:	mov    ecx,DWORD PTR [ebp-0x18]
  402c3e:	inc    edi
  402c3f:	xor    eax,ebx
  402c41:	and    DWORD PTR ds:0x413c88,0x0
  402c4b:	jmp    0x402c5d
  402c50:	mov    edi,DWORD PTR ds:0x413c88
  402c56:	inc    edi
  402c57:	mov    DWORD PTR ds:0x413c88,edi
  402c5d:	cmp    DWORD PTR ds:0x413c88,0x1c
  402c64:	jae    0x402ca8
  402c6a:	cmp    DWORD PTR ds:0x413c88,0x5
  402c71:	jne    0x402c89
  402c77:	push   DWORD PTR [ebp-0xc]
  402c7a:	push   DWORD PTR [ebp-0x10]
  402c7d:	push   DWORD PTR [ebp-0x28]
  402c80:	push   DWORD PTR [ebp-0xc]
  402c83:	call   DWORD PTR ds:0x416764
  402c89:	cmp    DWORD PTR ds:0x413c88,0x4
  402c90:	jne    0x402ca3
  402c96:	mov    edi,DWORD PTR ds:0x413c88
  402c9c:	inc    edi
  402c9d:	mov    DWORD PTR ds:0x413c88,edi
  402ca3:	jmp    0x402c50
  402ca8:	mov    edi,0x3272dc
  402cad:	sbb    DWORD PTR ds:0x414008,0x338e
  402cb7:	add    eax,edi
  402cb9:	cmp    ecx,eax
  402cbb:	mov    DWORD PTR ds:0x413bfe,0x2c9f
  402cc5:	je     0x402e72
  402ccb:	adc    DWORD PTR ds:0x413c74,0x2cc9
  402cd5:	push   DWORD PTR [ebp-0x18]
  402cd8:	add    DWORD PTR ds:0x413c74,0x6616
  402ce2:	push   DWORD PTR [ebp+0x8]
  402ce5:	neg    DWORD PTR ds:0x413d2c
  402ceb:	call   0x407cf9
  402cf0:	mov    DWORD PTR [ebp-0x18],eax
  402cf3:	xor    DWORD PTR ds:0x413c12,ebx
  402cf9:	mov    eax,DWORD PTR [ebp-0x4]
  402cfc:	add    DWORD PTR ds:0x414008,edx
  402d02:	mov    ecx,DWORD PTR [ebp-0x18]
  402d05:	sub    DWORD PTR ds:0x413cdc,0x28ac
  402d0f:	xor    eax,ebx
  402d11:	sub    DWORD PTR ds:0x41400c,0x413ce4
  402d1b:	add    eax,edi
  402d1d:	cmp    ecx,eax
  402d1f:	je     0x402e72
  402d25:	or     DWORD PTR ds:0x414014,edi
  402d2b:	mov    eax,DWORD PTR [ebp-0x18]
  402d2e:	mov    ecx,DWORD PTR ds:0x414008
  402d34:	adc    ecx,DWORD PTR ds:0x413c7c
  402d3a:	mov    DWORD PTR ds:0x414008,ecx
  402d40:	mov    eax,DWORD PTR [eax+0x18]
  402d43:	mov    ecx,DWORD PTR ds:0x413ca4
  402d49:	mov    ecx,DWORD PTR [ecx]
  402d4b:	and    DWORD PTR ds:0x413d28,ecx
  402d51:	mov    DWORD PTR [ebp-0x24],eax
  402d54:	and    DWORD PTR ds:0x413c70,0x0
  402d5e:	mov    ecx,DWORD PTR ds:0x413c70
  402d64:	inc    ecx
  402d65:	mov    DWORD PTR ds:0x413c70,ecx
  402d6b:	cmp    DWORD PTR ds:0x413c70,0xf
  402d72:	jne    0x402d8d
  402d78:	push   0x2d13
  402d7d:	push   0x29b5
  402d82:	push   0x400000
  402d87:	call   DWORD PTR ds:0x416768
  402d8d:	cmp    DWORD PTR ds:0x413c70,0xe
  402d94:	jne    0x402da7
  402d9a:	mov    ecx,DWORD PTR ds:0x413c70
  402da0:	inc    ecx
  402da1:	mov    DWORD PTR ds:0x413c70,ecx
  402da7:	cmp    DWORD PTR ds:0x413c70,0x18
  402dae:	jb     0x402d5e
  402db4:	mov    eax,DWORD PTR [ebp-0x18]
  402db7:	mov    ecx,DWORD PTR [ebp+0x8]
  402dba:	add    ecx,DWORD PTR [eax+0x20]
  402dbd:	mov    DWORD PTR [ebp-0x2c],ecx
  402dc0:	mov    eax,DWORD PTR [ebp-0x18]
  402dc3:	mov    ecx,DWORD PTR [ebp+0x8]
  402dc6:	add    ecx,DWORD PTR [eax+0x24]
  402dc9:	mov    DWORD PTR [ebp-0x34],ecx
  402dcc:	mov    eax,DWORD PTR [ebp-0x18]
  402dcf:	mov    ecx,DWORD PTR [ebp+0x8]
  402dd2:	add    ecx,DWORD PTR [eax+0x1c]
  402dd5:	mov    eax,edi
  402dd7:	mov    DWORD PTR [ebp-0x18],ecx
  402dda:	jmp    0x402e3a
  402ddf:	mov    ecx,DWORD PTR [ebp-0x2c]
  402de2:	mov    edx,DWORD PTR [ebp+0x8]
  402de5:	add    edx,DWORD PTR [ecx+esi*4]
  402de8:	mov    DWORD PTR [ebp-0x28],edx
  402deb:	mov    ecx,DWORD PTR [ebp-0x4]
  402dee:	mov    edx,DWORD PTR [ebp-0x28]
  402df1:	xor    ecx,ebx
  402df3:	add    ecx,eax
  402df5:	cmp    edx,ecx
  402df7:	je     0x402e3a
  402dfd:	jmp    0x402e26
  402e02:	mov    ecx,DWORD PTR [ebp-0x4]
  402e05:	mov    edx,DWORD PTR [ebp-0x8]
  402e08:	xor    ecx,ebx
  402e0a:	add    ecx,eax
  402e0c:	cmp    edx,ecx
  402e0e:	je     0x402e7e
  402e14:	mov    ecx,DWORD PTR [ebp-0x4]
  402e17:	mov    edx,DWORD PTR [ebp-0x30]
  402e1a:	xor    ecx,ebx
  402e1c:	add    ecx,eax
  402e1e:	cmp    edx,ecx
  402e20:	je     0x40522e
  402e26:	lea    eax,[ebp-0x8]
  402e29:	push   eax
  402e2a:	push   DWORD PTR [ebp-0x28]
  402e2d:	push   DWORD PTR [ebp+0xc]
  402e30:	call   0x40a47a
  402e35:	mov    eax,0x3272dc
  402e3a:	mov    ecx,DWORD PTR [ebp-0x4]
  402e3d:	mov    edx,DWORD PTR [ebp-0x8]
  402e40:	xor    ecx,ebx
  402e42:	add    ecx,eax
  402e44:	cmp    edx,ecx
  402e46:	je     0x402e61
  402e4c:	mov    ecx,DWORD PTR [ebp-0x34]
  402e4f:	movzx  ecx,WORD PTR [ecx+esi*2]
  402e53:	mov    edx,DWORD PTR [ebp-0x18]
  402e56:	mov    ecx,DWORD PTR [edx+ecx*4]
  402e59:	mov    DWORD PTR [ebp-0x38],ecx
  402e5c:	jmp    0x402e02
  402e61:	mov    ecx,DWORD PTR [ebp-0x14]
  402e64:	xor    ecx,ebx
  402e66:	lea    esi,[esi+ecx*1+0x3272dc]
  402e6d:	jmp    0x4029fb
  402e72:	mov    eax,DWORD PTR [ebp-0x4]
  402e75:	xor    eax,ebx
  402e77:	add    eax,edi
  402e79:	jmp    0x405392
  402e7e:	mov    eax,DWORD PTR [ebp-0x4]
  402e81:	jmp    0x405222
  402e86:	or     al,0xe7
  402e88:	xchg   BYTE PTR [ebx-0x240e7489],cl
  402e8e:	xchg   bl,cl
  402e90:	pushf  
  402e91:	cmp    edi,edi
  402e93:	jmp    0x7cbc4e51
  402e98:	jl     0x402f16
  402e9a:	loopne 0x402efb
  402e9c:	jl     0x402f1a
  402e9e:	adc    eax,0x1921172e
  402ea3:	and    eax,0x38652f1b
  402ea8:	imul   ebp,DWORD PTR [eax-0x1b],0x6d6c6c62
  402eaf:	xor    al,0xc5
  402eb1:	fsubrp st(1),st
  402eb3:	push   edx
  402eb4:	dec    edx
  402eb5:	imul   esp,DWORD PTR [ecx+0x5b],0xffffff92
  402eb9:	bound  ebp,QWORD PTR [ebp+0x59]
  402ebc:	iret   
  402ebd:	pop    ebp
  402ebe:	dec    esp
  402ebf:	and    cl,BYTE PTR [esi+0x577887fc]
  402ec5:	dec    ebp
  402ec6:	jg     0x402eff
  402ec8:	jb     0x402e72
  402eca:	jg     0x402e6e
  402ecc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ecd:	cmp    ebp,DWORD PTR [esi]
  402ecf:	jmp    FWORD PTR [eax-0x22]
  402ed2:	cld    
  402ed3:	push   ebx
  402ed4:	jg     0x402ed6
  402ed6:	in     eax,dx
  402ed7:	cmp    ebp,ecx
  402ed9:	mov    esp,0xc01387ed
  402ede:	mov    ebp,DWORD PTR [ecx]
  402ee0:	mulps  xmm5,XMMWORD PTR [ebx+0x6df7c68c]
  402ee7:	fld    QWORD PTR [esi]
  402ee9:	(bad)  
  402eea:	lock cld 
  402eec:	sub    BYTE PTR [edx],bl
  402eee:	dec    edx
  402eef:	push   cs
  402ef0:	sub    BYTE PTR [ebx+0x6a],ch
  402ef3:	mov    ecx,0x54113af
  402ef8:	test   al,0xff
  402efa:	jmp    0x34b65a48
  402eff:	retf   0xf95b
  402f02:	sbb    al,0xfc
  402f04:	jp     0x402ea7
  402f06:	arpl   bp,bx
  402f08:	call   0x8416:0x7a18b5f
  402f0f:	xor    ebx,esi
  402f11:	cmp    BYTE PTR [esi],0x74
  402f14:	jae    0x402f21
  402f16:	fsubr  QWORD PTR ds:0x33368d54
  402f1c:	push   esi
  402f1d:	jecxz  0x402eee
  402f1f:	mov    WORD PTR [ecx],gs
  402f21:	mov    DWORD PTR [edx+0x518aceb7],esi
  402f27:	out    0x45,al
  402f29:	push   esp
  402f2a:	dec    esi
  402f2b:	push   cs
  402f2c:	and    bl,dh
  402f2e:	cmp    BYTE PTR [ebx],al
  402f30:	lods   eax,DWORD PTR ds:[esi]
  402f31:	dec    ebx
  402f32:	int3   
  402f33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f34:	xor    al,dl
  402f36:	push   es
  402f37:	pop    eax
  402f38:	std    
  402f39:	push   esp
  402f3a:	pop    eax
  402f3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f3c:	stc    
  402f3d:	push   0xffffffbf
  402f3f:	cli    
  402f40:	inc    esp
  402f41:	add    ebp,edi
  402f43:	stos   BYTE PTR es:[edi],al
  402f44:	stos   BYTE PTR es:[edi],al
  402f45:	(bad)  
  402f46:	data16 xor bl,dl
  402f49:	std    
  402f4a:	xchg   esp,eax
  402f4b:	or     ecx,DWORD PTR [ebp*8-0x69d960dd]
  402f52:	repz mov bl,0x96
  402f55:	fs dec ecx
  402f57:	out    dx,al
  402f58:	pop    esp
  402f59:	in     eax,0x6a
  402f5b:	out    0x47,eax
  402f5d:	pop    esi
  402f5e:	add    dl,BYTE PTR [ecx+ebp*2-0xb]
  402f62:	mov    gs,ecx
  402f64:	and    eax,0xbc474c1b
  402f69:	mov    ch,0xff
  402f6b:	ficom  WORD PTR [ebx+0x35]
  402f6e:	or     eax,0xf0c2c971
  402f73:	in     al,0x5a
  402f75:	(bad)  
  402f76:	cld    
  402f77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f78:	dec    edx
  402f79:	jnp    0x402f29
  402f7b:	push   cs
  402f7c:	pushf  
  402f7d:	push   ebx
  402f7e:	fst    QWORD PTR [esp+ebp*2+0x78]
  402f82:	and    eax,0x3020ad71
  402f87:	ficomp WORD PTR [esi-0x2991e5e]
  402f8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f8e:	ins    DWORD PTR es:[edi],dx
  402f8f:	dec    ebx
  402f90:	adc    BYTE PTR [edi-0x33],cl
  402f93:	jle    0x402f48
  402f95:	inc    esi
  402f96:	and    eax,0xddeeb2a5
  402f9b:	mov    esp,0x811bea1c
  402fa0:	and    BYTE PTR [ecx],dl
  402fa2:	ret    0x30f7
  402fa5:	pop    eax
  402fa6:	push   0xa676916d
  402fab:	mov    cl,0x60
  402fad:	lods   eax,DWORD PTR ds:[esi]
  402fae:	jno    0x402f30
  402fb0:	dec    DWORD PTR [eax]
  402fb2:	test   eax,0x372c4b54
  402fb7:	std    
  402fb8:	add    edx,DWORD PTR [ecx]
  402fba:	add    al,0x7
  402fbc:	dec    edx
  402fbd:	adc    al,0x70
  402fbf:	gs push 0xf3e6aa72
  402fc5:	jle    0x402fb1
  402fc7:	(bad)  [edi]
  402fc9:	dec    ecx
  402fca:	mov    bh,0xfa
  402fcc:	jl     0x402fff
  402fce:	repnz cmp eax,0x325a1967
  402fd4:	aas    
  402fd5:	mov    bl,0xb1
  402fd7:	jecxz  0x402f93
  402fd9:	xchg   BYTE PTR ds:0x5c20885d,cl
  402fdf:	and    ebx,esi
  402fe1:	jnp    0x402fc4
  402fe3:	jmp    0x402f86
  402fe5:	inc    edx
  402fe6:	sbb    ebp,DWORD PTR [ecx+ebp*2]
  402fe9:	dec    esi
  402fea:	add    al,0x8
  402fec:	popa   
  402fed:	jge    0x403003
  402fef:	in     eax,dx
  402ff0:	sbb    BYTE PTR [esi+0x79],bh
  402ff3:	add    ecx,edi
  402ff5:	sub    DWORD PTR [eax-0x54202214],ebx
  402ffb:	cwde   
  402ffc:	nop
  402ffd:	ror    BYTE PTR [ebx],0x29
  403000:	mov    bl,bh
  403002:	call   0xb54004ac
  403007:	adc    BYTE PTR [esi],0x98
  40300a:	mov    ss,WORD PTR [eax-0xc96b91f]
  403010:	sti    
  403011:	dec    esi
  403012:	inc    eax
  403013:	(bad)
  403017:	xchg   esi,eax
  403018:	push   ecx
  403019:	test   BYTE PTR [ebx+0x27ffdf8d],al
  40301f:	cmc    
  403020:	mov    ds:0x9485d129,eax
  403025:	adc    BYTE PTR [edi],bl
  403027:	out    0x16,al
  403029:	xchg   edx,eax
  40302a:	jb     0x403022
  40302c:	repz jb 0x40301e
  40302f:	call   0x4792f492
  403034:	sar    ebx,0x22
  403037:	rol    BYTE PTR [eax],cl
  403039:	js     0x403047
  40303b:	pop    eax
  40303c:	ins    DWORD PTR es:[edi],dx
  40303d:	(bad)  
  40303e:	sbb    eax,0x88cc3bf
  403043:	repnz dec edx
  403045:	stc    
  403046:	sti    
  403047:	sbb    esi,DWORD PTR [bx+di+0x9]
  40304b:	add    esp,DWORD PTR [esi+0x25]
  40304e:	in     eax,0x25
  403050:	sub    al,0x54
  403052:	mov    eax,ds:0xe8bddce2
  403057:	push   ecx
  403058:	jne    0x403030
  40305a:	lock cld 
  40305c:	push   ebx
  40305d:	push   ss
  40305e:	(bad)  
  40305f:	mov    BYTE PTR [ebx],bh
  403061:	hlt    
  403062:	and    al,0x38
  403064:	and    DWORD PTR [ecx+0xef1002c],esp
  40306a:	in     eax,dx
  40306b:	aam    0xc8
  40306d:	inc    edx
  40306e:	repz das 
  403070:	mov    al,0x7d
  403072:	add    al,0xc3
  403074:	pop    edx
  403075:	outs   dx,DWORD PTR ds:[esi]
  403076:	dec    edx
  403077:	dec    ecx
  403078:	pusha  
  403079:	clc    
  40307a:	mov    fs,WORD PTR ds:0xc4732829
  403080:	in     al,0xf8
  403082:	push   edx
  403083:	ror    DWORD PTR [edx],1
  403085:	and    ch,BYTE PTR [edx+0x31]
  403088:	inc    esp
  403089:	jae    0x4030f4
  40308b:	jl     0x40307f
  40308d:	and    WORD PTR [ebx],ax
  403090:	stos   DWORD PTR es:[edi],eax
  403091:	mov    ch,0xd5
  403093:	(bad)  
  403094:	stos   DWORD PTR es:[edi],eax
  403095:	and    bl,dl
  403097:	je     0x403021
  403099:	mov    eax,ds:0xfad2e9be
  40309e:	mov    eax,ds:0x4ec07dc
  4030a3:	shr    DWORD PTR [ebx],0x85
  4030a6:	mov    ch,0x2f
  4030a8:	outs   dx,BYTE PTR ds:[esi]
  4030a9:	shr    DWORD PTR ds:0xf4332f19,1
  4030af:	enter  0xef6c,0x9d
  4030b3:	fdivr  st,st(0)
  4030b5:	add    cl,BYTE PTR [eax]
  4030b7:	in     eax,0xb3
  4030b9:	call   0xa72210f2
  4030be:	in     eax,0xc
  4030c0:	and    ah,cl
  4030c2:	pop    ecx
  4030c3:	and    BYTE PTR [esi-0x40888f],0xff
  4030ca:	sub    al,0x67
  4030cc:	jmp    0x403053
  4030ce:	test   BYTE PTR [ecx+ebx*4],dl
  4030d1:	jae    0x40305c
  4030d3:	ret    0xc8e8
  4030d6:	outs   dx,DWORD PTR ds:[esi]
  4030d7:	mov    al,0x1a
  4030d9:	mov    ebp,eax
  4030db:	rcl    DWORD PTR [edi-0x78],0x8e
  4030df:	arpl   di,si
  4030e1:	daa    
  4030e2:	dec    edx
  4030e3:	gs call 0xe3c40788
  4030e9:	mov    al,BYTE PTR [eax]
  4030eb:	in     eax,0x70
  4030ed:	mov    ds:0x8ef42e33,al
  4030f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4030f3:	or     BYTE PTR ds:0x54e42c30,0x72
  4030fa:	fwait
  4030fb:	xchg   ecx,edx
  4030fd:	inc    edx
  4030fe:	pop    ss
  4030ff:	or     DWORD PTR [edi],eax
  403101:	retf   
  403102:	in     al,dx
  403103:	mov    ebp,0xacad21d
  403108:	out    0x43,eax
  40310a:	adc    bl,BYTE PTR [esi-0x41fa6c43]
  403110:	add    eax,0xdbee0793
  403115:	push   edx
  403116:	and    esi,DWORD PTR ds:0xd7ae7dbe
  40311c:	out    dx,al
  40311d:	add    BYTE PTR [edi+0x23],dl
  403120:	xor    BYTE PTR [edx+0x73],dh
  403123:	lods   al,BYTE PTR ds:[esi]
  403124:	sub    esi,DWORD PTR [edi]
  403126:	cmp    eax,0xaed5d7c0
  40312b:	retf   
  40312c:	dec    ebx
  40312d:	das    
  40312e:	pop    ebp
  40312f:	(bad)  
  403130:	stc    
  403131:	aas    
  403132:	dec    eax
  403133:	sub    esi,esi
  403135:	xchg   esp,eax
  403136:	mov    bl,0x62
  403138:	(bad)  
  40313a:	or     eax,DWORD PTR [ebx-0x17]
  40313d:	icebp  
  40313e:	std    
  40313f:	ins    DWORD PTR es:[edi],dx
  403140:	es mov esp,0x9b9afe24
  403146:	jae    0x40318b
  403148:	or     DWORD PTR [ebp-0x3615457a],ecx
  40314e:	cli    
  40314f:	into   
  403150:	add    al,0x89
  403152:	outs   dx,DWORD PTR ds:[esi]
  403153:	repz test DWORD PTR [eax],eax
  403156:	xor    bl,0x44
  403159:	mov    dl,0xc2
  40315b:	mov    esi,0x46c7de0e
  403160:	lahf   
  403161:	push   edx
  403162:	sub    DWORD PTR [ebx-0x2cb344d2],ebx
  403168:	cmp    BYTE PTR [edi+esi*1-0x48246413],dl
  40316f:	fs cs in al,dx
  403172:	mov    al,0xd3
  403174:	cdq    
  403175:	jns    0x403128
  403177:	dec    edi
  403178:	test   DWORD PTR [edx],eax
  40317a:	push   esi
  40317b:	out    0xbb,al
  40317d:	push   0xffffff8f
  40317f:	or     al,0xfc
  403181:	ds loope 0x403200
  403184:	mov    ah,BYTE PTR [ebx]
  403186:	jb     0x40317e
  403188:	(bad)  
  403189:	mov    eax,ds:0xb758f50
  40318e:	das    
  40318f:	scas   eax,DWORD PTR es:[edi]
  403190:	push   ss
  403191:	xchg   ebp,eax
  403192:	cmp    eax,0x9d39e108
  403197:	pop    ecx
  403198:	mov    bl,0x1a
  40319a:	les    ebp,FWORD PTR [ecx+0x32]
  40319d:	(bad)  
  40319f:	sbb    ebx,DWORD PTR [ecx+eax*8-0x6b]
  4031a3:	push   esp
  4031a4:	mov    dl,0x6b
  4031a6:	xor    ecx,DWORD PTR [ecx+0x6e6138ba]
  4031ac:	iret   
  4031ad:	outs   dx,DWORD PTR ds:[esi]
  4031ae:	pop    eax
  4031af:	out    dx,eax
  4031b0:	ffree  st(6)
  4031b2:	or     DWORD PTR [ebp+0x4729bead],ebx
  4031b8:	xor    dh,BYTE PTR ds:0xc43addd4
  4031be:	dec    edx
  4031bf:	xchg   edi,eax
  4031c0:	xor    ebp,edx
  4031c2:	push   edi
  4031c3:	test   eax,esi
  4031c5:	dec    edi
  4031c6:	ss mov ebx,0x27a9d63d
  4031cc:	jae    0x403165
  4031ce:	xchg   edx,eax
  4031cf:	push   0xb41e034
  4031d4:	stos   DWORD PTR es:[edi],eax
  4031d5:	sti    
  4031d6:	pcmpeqd mm6,QWORD PTR [esi+0x1d0cefe8]
  4031dd:	sbb    ch,BYTE PTR [edx]
  4031df:	add    ebp,DWORD PTR [ebx+0x3a77f3c2]
  4031e5:	jle    0x403259
  4031e7:	mov    dh,BYTE PTR [ecx]
  4031e9:	shl    BYTE PTR ds:0xed660a8e,1
  4031ef:	jge    0x4031ab
  4031f1:	dec    eax
  4031f2:	retf   0x526a
  4031f5:	loopne 0x403197
  4031f7:	fidiv  WORD PTR [ecx]
  4031f9:	jmp    0x600bbd7a
  4031fe:	sbb    BYTE PTR [esi+0x35],bh
  403201:	mov    dl,0x7c
  403203:	ja     0x40319a
  403205:	and    cl,BYTE PTR [edi+0x63]
  403208:	fisubr WORD PTR [esi]
  40320a:	mov    eax,0xb462aa0b
  40320f:	xor    al,0xfb
  403211:	adc    DWORD PTR [edx-0x5831a91e],0x18f69f5b
  40321b:	ins    DWORD PTR es:[edi],dx
  40321c:	sub    DWORD PTR [edi+0x1ea9430f],esi
  403222:	in     al,0x60
  403224:	sub    esi,DWORD PTR [eax]
  403226:	inc    ebx
  403227:	jnp    0x40321d
  403229:	dec    ecx
  40322a:	fldenv [edx]
  40322c:	pusha  
  40322d:	pop    esi
  40322e:	add    al,0xfb
  403230:	dec    ebx
  403231:	sbb    eax,0xbc58088e
  403236:	ret    
  403237:	push   esp
  403238:	sub    ah,BYTE PTR [esp+edi*2-0xd]
  40323c:	aas    
  40323d:	pop    eax
  40323e:	mov    ebx,DWORD PTR [edx+0x14ac99d1]
  403244:	push   ecx
  403245:	dec    esi
  403246:	mov    ebx,0x8c33429b
  40324b:	jmp    0xa02e:0xa53bf20e
  403252:	or     BYTE PTR [edx+0x56],ah
  403255:	mov    bh,0xf6
  403257:	or     al,0xbd
  403259:	or     BYTE PTR [edx-0x2bb4c446],0x1d
  403260:	iret   
  403261:	sbb    BYTE PTR [ebx+0x49dda5af],cl
  403267:	pusha  
  403268:	cmp    BYTE PTR [esi-0x4c4fe5b0],ah
  40326e:	mov    ds:0x9dbdca77,eax
  403273:	cmp    dh,dh
  403275:	mov    edi,DWORD PTR [edi+0xe526e58]
  40327b:	and    eax,0x116f6c4
  403280:	int3   
  403281:	mov    bl,0x25
  403283:	jecxz  0x403289
  403285:	adc    cl,cl
  403287:	xchg   esp,eax
  403288:	jno    0x4032f8
  40328a:	loop   0x40325c
  40328c:	adc    DWORD PTR [edx],0xffffffe0
  40328f:	mov    DWORD PTR [esi+0x32],esp
  403292:	dec    esp
  403293:	dec    ebx
  403294:	and    bl,BYTE PTR [eax]
  403296:	pop    esi
  403297:	xor    esp,DWORD PTR [eax]
  403299:	jmp    0x40330f
  40329b:	add    edi,eax
  40329d:	cwde   
  40329e:	(bad)  
  4032a0:	test   BYTE PTR [ebp-0x38],bl
  4032a3:	mov    al,ds:0x53d79251
  4032a8:	xchg   edx,eax
  4032a9:	sti    
  4032aa:	jg     0x403243
  4032ac:	sbb    ah,ch
  4032ae:	imul   esi,DWORD PTR [ecx+0x47470d7b],0xffffffe7
  4032b5:	push   esp
  4032b6:	ds jmp 0x1bce13c8
  4032bc:	add    al,0xf
  4032be:	lea    ecx,[edi-0x279d6886]
  4032c4:	xlat   BYTE PTR ds:[ebx]
  4032c5:	and    esp,DWORD PTR [edx-0x26b77465]
  4032cb:	lods   al,BYTE PTR ds:[esi]
  4032cc:	in     al,dx
  4032cd:	ret    
  4032ce:	out    dx,al
  4032cf:	mov    ah,0xb2
  4032d1:	or     dl,bl
  4032d3:	pop    ebp
  4032d4:	mov    eax,0x78a65683
  4032d9:	add    bh,BYTE PTR [esi-0x4c55dd61]
  4032df:	xor    al,0x9f
  4032e1:	dec    esp
  4032e2:	(bad)  
  4032e3:	in     al,dx
  4032e4:	ret    0xe15d
  4032e7:	add    BYTE PTR [ebx-0x1c],bh
  4032ea:	add    al,0x63
  4032ec:	push   edi
  4032ed:	(bad)  
  4032ee:	jge    0x403333
  4032f0:	mov    cl,0xe8
  4032f2:	sbb    al,0x1e
  4032f4:	push   edx
  4032f5:	push   ebx
  4032f6:	idiv   DWORD PTR fs:[esi+0x7af564ba]
  4032fd:	rol    ah,1
  4032ff:	pop    edi
  403300:	inc    edx
  403301:	and    ebp,DWORD PTR [eax]
  403303:	dec    ecx
  403304:	bound  edi,QWORD PTR [esi+0x6c988da1]
  40330a:	daa    
  40330b:	push   edi
  40330c:	add    ebx,DWORD PTR [ebp+ecx*4+0x3c174dff]
  403313:	mov    edx,0x2c9d64ba
  403318:	out    0xef,eax
  40331a:	sti    
  40331b:	and    DWORD PTR [edx],esi
  40331d:	test   eax,0xbcf8d108
  403322:	adc    BYTE PTR [esi],ah
  403324:	xchg   DWORD PTR [edi],eax
  403326:	mov    bh,0xad
  403328:	and    esi,DWORD PTR [ebx]
  40332a:	rol    DWORD PTR [edi+0x705b0859],1
  403330:	fwait
  403331:	(bad)
  403334:	push   ebx
  403335:	rcl    DWORD PTR [ecx],1
  403337:	gs ret 
  403339:	mov    ds:0xdb90f3bd,al
  40333e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40333f:	xchg   edi,eax
  403340:	aam    0xe5
  403342:	fld    DWORD PTR [esi+edx*8-0x28]
  403346:	xor    ebx,edi
  403348:	iret   
  403349:	jmp    0xdba33319
  40334e:	rcr    edx,cl
  403350:	cmp    eax,0x74d306f0
  403355:	nop
  403356:	xchg   esp,eax
  403357:	mov    WORD PTR [ebx],ds
  403359:	test   al,0x45
  40335b:	add    eax,0x6b2d9271
  403360:	in     eax,dx
  403361:	push   ebp
  403362:	repnz push ds
  403364:	jmp    0x4033b5
  403366:	fnstsw WORD PTR [esi+ebp*1-0x75cc0db7]
  40336d:	xor    al,0x48
  40336f:	sub    eax,0xd804a043
  403374:	pop    edx
  403375:	jle    0x40331a
  403377:	jne    0x403326
  403379:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40337a:	inc    ecx
  40337b:	out    0xa,eax
  40337d:	out    dx,eax
  40337e:	mov    esp,0x7b0fbfd2
  403383:	scas   eax,DWORD PTR es:[edi]
  403384:	inc    ecx
  403385:	retf   
  403386:	xchg   ecx,ebx
  403388:	das    
  403389:	push   cs
  40338a:	pop    eax
  40338b:	shl    DWORD PTR [edi+0x8fda50f],cl
  403391:	fidivr DWORD PTR [edx]
  403393:	enter  0x8a6d,0x3b
  403397:	dec    ebp
  403398:	sub    eax,0x84a7d783
  40339d:	popf   
  40339e:	pop    esp
  40339f:	xor    BYTE PTR [edx+0x25],cl
  4033a2:	(bad)
  4033a6:	pop    ebp
  4033a7:	(bad)  
  4033a8:	jmp    0x4033e3
  4033aa:	jae    0x40332d
  4033ac:	fild   DWORD PTR [esi]
  4033ae:	adc    eax,0x82fcd2b9
  4033b3:	inc    esi
  4033b4:	pop    edi
  4033b5:	jmp    0x40336f
  4033b7:	jb     0x40335f
  4033b9:	mov    al,ds:0x3827d1c8
  4033be:	push   ebx
  4033bf:	out    dx,al
  4033c0:	pop    ebx
  4033c1:	cmp    bl,BYTE PTR [ecx+esi*1+0xb]
  4033c5:	pop    es
  4033c6:	push   esi
  4033c7:	push   es
  4033c8:	sbb    al,0x6e
  4033ca:	jecxz  0x40334f
  4033cc:	retf   
  4033cd:	jae    0x403440
  4033cf:	movnti DWORD PTR [edi+0x65],ebx
  4033d3:	scas   al,BYTE PTR es:[edi]
  4033d4:	jno    0x40344f
  4033d6:	dec    ebp
  4033d7:	fcom   DWORD PTR [edx-0x13817966]
  4033dd:	push   ds
  4033de:	(bad)  [edx-0x16]
  4033e1:	pushf  
  4033e2:	imul   edi,DWORD PTR ds:0x8efcdf25,0x376d26e0
  4033ec:	and    DWORD PTR [ecx+0x6a],0xbe1d7781
  4033f3:	fimul  WORD PTR [edx]
  4033f5:	add    ch,BYTE PTR [esi]
  4033f7:	fst    QWORD PTR [esi]
  4033f9:	mov    ?,WORD PTR [eax-0x63]
  4033fc:	jmp    0xfb82928b
  403401:	add    BYTE PTR [eax+0x1c],dh
  403404:	or     eax,0xa45fbd2c
  403409:	dec    eax
  40340a:	fwait
  40340b:	push   esp
  40340c:	scas   al,BYTE PTR es:[edi]
  40340d:	lods   al,BYTE PTR ds:[esi]
  40340e:	jmp    0xeefd:0x1f8752c5
  403415:	or     eax,DWORD PTR [edi+ebp*8]
  403418:	popa   
  403419:	push   edx
  40341a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40341b:	sbb    ecx,ebp
  40341d:	test   eax,0x1c4ae25e
  403422:	sub    eax,0xe4deafe9
  403427:	arpl   WORD PTR [eax+0x47f45669],bx
  40342d:	inc    ecx
  40342e:	dec    ebp
  40342f:	and    ch,BYTE PTR [ebp-0x378d6e10]
  403435:	je     0x403405
  403437:	arpl   cx,si
  403439:	daa    
  40343a:	popf   
  40343b:	(bad)  
  40343c:	xlat   BYTE PTR ds:[ebx]
  40343d:	aam    0x88
  40343f:	call   0xf421:0x632a4f0f
  403446:	adc    eax,ebx
  403448:	leave  
  403449:	jge    0x403442
  40344b:	dec    DWORD PTR [ebx]
  40344d:	or     DWORD PTR [esi+edi*4-0x19394194],esi
  403454:	mov    bh,0xeb
  403456:	pop    ds
  403457:	mov    ds:0xc0c239b1,al
  40345c:	and    al,0xfe
  40345e:	push   edx
  40345f:	bound  esi,QWORD PTR [edx]
  403461:	fisttp DWORD PTR [esi]
  403463:	in     al,0xfc
  403465:	ja     0x403490
  403467:	inc    bl
  403469:	jle    0x4034e3
  40346b:	ret    
  40346c:	jbe    0x40342a
  40346e:	adc    al,0xb5
  403470:	retf   0x1c65
  403473:	(bad)  
  403474:	and    BYTE PTR ds:0xd7eb66aa,ah
  40347a:	ror    BYTE PTR [eax-0x5714b8d],cl
  403480:	repnz dec esp
  403482:	imul   esp,DWORD PTR [edx+0xb],0x23
  403486:	mov    eax,0x4c51f956
  40348b:	aaa    
  40348c:	ins    BYTE PTR es:[edi],dx
  40348d:	add    al,0x86
  40348f:	stos   BYTE PTR es:[edi],al
  403490:	sbb    BYTE PTR [ecx],bh
  403492:	lock enter 0x1d5f,0xb1
  403497:	adc    eax,0xeb7f047d
  40349c:	inc    ebp
  40349d:	mov    dl,0x9a
  40349f:	cmp    eax,0x2152ccf7
  4034a4:	dec    edx
  4034a5:	mov    BYTE PTR [esi-0x51],al
  4034a8:	mov    ebx,0x5d2d5a0a
  4034ad:	pop    ds
  4034ae:	mov    bl,BYTE PTR [ebp-0x46]
  4034b1:	jmp    0x2ea6:0x8c62d192
  4034b8:	jmp    0x403532
  4034ba:	xchg   esi,eax
  4034bb:	mov    dl,0x1c
  4034bd:	or     al,0x26
  4034bf:	and    esp,DWORD PTR [edx-0x60]
  4034c2:	xchg   esi,eax
  4034c3:	mov    bl,0x69
  4034c5:	sbb    al,0xc8
  4034c7:	inc    ecx
  4034c8:	jl     0x403500
  4034ca:	or     ah,0x29
  4034cd:	xchg   DWORD PTR [edx],esp
  4034cf:	mulps  xmm0,XMMWORD PTR [ecx]
  4034d2:	adc    BYTE PTR ds:0xd8b72591,bh
  4034d8:	dec    ebp
  4034d9:	push   0xa
  4034db:	mov    dl,BYTE PTR [ebx]
  4034dd:	pop    edi
  4034de:	adc    eax,DWORD PTR [esi]
  4034e0:	jg     0x40347c
  4034e2:	(bad)  
  4034e3:	(bad)  
  4034e4:	bnd jno 0x40353f
  4034e7:	sahf   
  4034e8:	shl    BYTE PTR [edi-0x65],0x96
  4034ec:	retf   
  4034ed:	sahf   
  4034ee:	xor    BYTE PTR [edx-0x5d6710c7],ah
  4034f4:	sbb    eax,0xcd680285
  4034f9:	pusha  
  4034fa:	xor    DWORD PTR [ebx+0x3a],ebx
  4034fd:	mov    al,0xca
  4034ff:	add    ebp,DWORD PTR [ecx-0x2b1cc6ab]
  403505:	inc    edx
  403506:	out    0xee,eax
  403508:	push   eax
  403509:	int3   
  40350a:	out    dx,al
  40350b:	pop    ebx
  40350c:	call   0x9000:0xe06e4452
  403513:	inc    ebx
  403514:	push   ds
  403515:	mov    BYTE PTR ds:0x8dc022cb,0x82
  40351c:	fldcw  WORD PTR [eax-0x1b8c4994]
  403522:	rep outs dx,DWORD PTR ds:[esi]
  403524:	dec    esp
  403525:	pushf  
  403526:	in     eax,dx
  403527:	jbe    0x4034bc
  403529:	pop    ebp
  40352a:	jbe    0x40351c
  40352c:	mov    dl,0x23
  40352e:	shr    BYTE PTR [ebx+0x30da9cc4],0x77
  403535:	pop    ds
  403536:	add    ebp,DWORD PTR [eax]
  403538:	xchg   DWORD PTR [edx],esi
  40353a:	mov    cs:0x7ce63303,eax
  403540:	addr16 pop es
  403542:	test   BYTE PTR [esi-0x356c910d],ah
  403548:	and    al,0xbd
  40354a:	and    al,0x22
  40354c:	int3   
  40354d:	mov    ecx,0xc48a5691
  403552:	xor    ah,BYTE PTR [edx-0x70227b30]
  403558:	(bad)  
  403559:	mov    al,0xbe
  40355b:	outs   dx,BYTE PTR ds:[esi]
  40355c:	sub    BYTE PTR [esp+edx*8],dl
  40355f:	sub    ebx,DWORD PTR [edx-0x29c74c09]
  403565:	adc    DWORD PTR [eax-0x3b],ebp
  403568:	loopne 0x40350c
  40356a:	or     esp,DWORD PTR [bx+0x18c8]
  40356f:	sti    
  403570:	test   eax,0xed595d9
  403575:	or     BYTE PTR [edx],bh
  403577:	xchg   edi,eax
  403578:	js     0x403548
  40357a:	int    0x2f
  40357c:	sbb    bl,BYTE PTR [ecx+0x20416b04]
  403582:	xchg   ecx,eax
  403583:	cmp    edx,DWORD PTR [esi]
  403585:	adc    BYTE PTR [edi+0x1a],0xda
  403589:	or     BYTE PTR [edx-0x42],ah
  40358c:	in     eax,dx
  40358d:	cmc    
  40358e:	mov    bh,bh
  403590:	mov    ebx,DWORD PTR [edi]
  403592:	jne    0x403525
  403594:	mov    esp,0x637ebd3
  403599:	aad    0xef
  40359b:	popf   
  40359c:	mov    esp,0x4cb1bda3
  4035a1:	into   
  4035a2:	ficom  DWORD PTR ds:0x795cdb6f
  4035a8:	imul   BYTE PTR [ecx-0x38e1c9cb]
  4035ae:	xor    BYTE PTR [ecx-0x27],bh
  4035b1:	jp     0x40360b
  4035b3:	in     al,0x71
  4035b5:	mov    ebx,0xb58368d2
  4035ba:	int3   
  4035bb:	cmp    BYTE PTR [edx-0x3b881be2],dh
  4035c1:	in     al,dx
  4035c2:	mov    cl,0xab
  4035c4:	ins    DWORD PTR es:[edi],dx
  4035c5:	out    0x47,eax
  4035c7:	sub    ah,ah
  4035c9:	jmp    0x403638
  4035cb:	add    edi,edi
  4035cd:	loope  0x403604
  4035cf:	inc    esi
  4035d0:	mov    ds:0x10a28ff6,al
  4035d5:	sahf   
  4035d6:	sub    edi,ecx
  4035d8:	hlt    
  4035d9:	adc    al,BYTE PTR [ebx-0x3a83aa65]
  4035df:	jne    0x4035d9
  4035e1:	cmp    al,0xf2
  4035e3:	mov    al,0xbc
  4035e5:	out    0x72,al
  4035e7:	clc    
  4035e8:	neg    BYTE PTR [edi+0x585efa9c]
  4035ee:	push   eax
  4035ef:	loop   0x403601
  4035f1:	pop    edi
  4035f2:	(bad)  
  4035f3:	std    
  4035f4:	rcl    BYTE PTR [edi],1
  4035f6:	or     bh,BYTE PTR [ecx+edx*4+0x7ac72604]
  4035fd:	inc    eax
  4035fe:	mov    dl,ah
  403600:	adc    DWORD PTR [edi],eax
  403602:	in     eax,0x23
  403604:	sbb    al,0xae
  403606:	add    DWORD PTR [ebp+0x553893ce],ebx
  40360c:	ins    DWORD PTR es:[edi],dx
  40360d:	stos   DWORD PTR es:[edi],eax
  40360e:	out    dx,al
  40360f:	cmp    al,0xd9
  403611:	pop    esi
  403612:	in     eax,dx
  403613:	not    BYTE PTR [eax]
  403615:	out    0xda,eax
  403617:	jp     0x40362f
  403619:	fwait
  40361a:	lds    eax,FWORD PTR [eax-0x5b]
  40361d:	xchg   edi,eax
  40361e:	call   0x36f5fc54
  403623:	call   0x29ef:0xec07592d
  40362a:	loopne 0x403644
  40362c:	jns    0x403618
  40362e:	jne    0x40369b
  403630:	mov    esp,0xd535921b
  403635:	retf   
  403636:	enter  0xa551,0x3f
  40363a:	test   al,0x73
  40363c:	bound  edi,QWORD PTR [eax]
  40363e:	adc    DWORD PTR [esi-0x12b19410],ebx
  403644:	sbb    dl,bh
  403646:	cmp    dh,BYTE PTR [ecx]
  403648:	mov    ah,0xeb
  40364a:	pop    edx
  40364b:	sub    eax,0xf289149b
  403650:	pop    esi
  403651:	outs   dx,BYTE PTR ds:[esi]
  403652:	add    al,0x8b
  403654:	sbb    eax,0xbdebdafc
  403659:	clc    
  40365a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40365b:	sahf   
  40365c:	lahf   
  40365d:	and    BYTE PTR [ecx+edi*8-0x35b1ea4a],0x1
  403665:	or     DWORD PTR [esi+0x114e5300],esp
  40366b:	outs   dx,DWORD PTR ds:[esi]
  40366c:	jge    0x403685
  40366e:	push   ebp
  40366f:	jle    0x403633
  403671:	sbb    dh,BYTE PTR [eax+esi*2-0x1b]
  403675:	(bad)  
  403677:	push   ebp
  403678:	(bad)  
  403679:	jp     0x403680
  40367b:	popa   
  40367c:	xor    bl,BYTE PTR [esi-0x6b61c788]
  403682:	out    0x7b,eax
  403684:	ds pop edi
  403686:	into   
  403687:	mov    ebx,0x59f175a4
  40368c:	pop    es
  40368d:	fldcw  WORD PTR [ebp-0x46]
  403690:	retf   
  403691:	xor    bh,ah
  403693:	ss enter 0xa703,0xc2
  403698:	shl    DWORD PTR [ebx+0x3f],0xb8
  40369c:	cmp    eax,0xaf98d6ee
  4036a1:	dec    edi
  4036a2:	(bad)  [eax-0x1175d4a]
  4036a8:	popa   
  4036a9:	dec    eax
  4036aa:	xor    edi,DWORD PTR [edx]
  4036ac:	xor    ecx,DWORD PTR [edi-0x53]
  4036af:	sub    ah,BYTE PTR [ecx]
  4036b1:	retf   
  4036b2:	push   edi
  4036b3:	shl    BYTE PTR [ecx-0x7a9ed5cf],cl
  4036b9:	cli    
  4036ba:	(bad)
  4036be:	daa    
  4036bf:	mov    ah,0x95
  4036c1:	mov    dl,0x2a
  4036c3:	mov    eax,0xec6806b7
  4036c8:	dec    esp
  4036c9:	or     BYTE PTR [edi-0x31],bl
  4036cc:	or     esi,ebp
  4036ce:	xchg   esi,eax
  4036cf:	mov    BYTE PTR [ecx],cl
  4036d1:	(bad)  
  4036d2:	mov    ecx,0x659ff915
  4036d7:	mov    ah,0x3e
  4036d9:	push   esp
  4036da:	xchg   ebp,eax
  4036db:	xchg   BYTE PTR [edx],bh
  4036dd:	inc    ecx
  4036de:	stc    
  4036df:	sub    DWORD PTR [eax-0x36f366f0],ebp
  4036e5:	or     edi,DWORD PTR [esi+ecx*4-0x46]
  4036e9:	and    bh,cl
  4036eb:	and    eax,0xf4bfcef1
  4036f0:	xlat   BYTE PTR ds:[ebx]
  4036f1:	jns    0x4036fd
  4036f3:	xor    DWORD PTR [eax-0x17187825],ebp
  4036f9:	xchg   edi,eax
  4036fa:	push   ds
  4036fb:	mov    ch,0xf3
  4036fd:	xor    DWORD PTR [ebx+0x78851307],ecx
  403703:	push   ebp
  403704:	inc    esi
  403705:	or     al,BYTE PTR [eax+0x138e5270]
  40370b:	jecxz  0x4036a1
  40370d:	mov    ah,0xe2
  40370f:	push   ss
  403710:	or     al,BYTE PTR [ebp-0x1a57e29a]
  403716:	(bad)  
  403717:	in     eax,0xd8
  403719:	sub    bh,BYTE PTR [edi+eax*1+0x77e24b8a]
  403720:	pop    ecx
  403721:	mov    ecx,0x38ad48d9
  403726:	enter  0x420f,0xab
  40372a:	mov    ebp,0xc1e1ac72
  40372f:	xor    al,0x16
  403731:	sbb    BYTE PTR [edx+0xbbd73a8],bh
  403737:	mov    dl,0x18
  403739:	jge    0x884d1339
  40373f:	in     al,0x42
  403741:	xchg   ecx,eax
  403742:	jne    0x40378e
  403744:	enter  0x5e47,0x4
  403748:	xchg   DWORD PTR [ebx+0x45],ebp
  40374b:	ret    
  40374c:	or     BYTE PTR [eax],0xed
  40374f:	in     eax,0x74
  403751:	out    0xee,al
  403753:	aaa    
  403754:	jbe    0x403728
  403756:	mov    ds:0x9f1ff3fc,eax
  40375b:	cmp    bl,al
  40375d:	add    esi,DWORD PTR ds:0x9a80b963
  403763:	cli    
  403764:	gs mov ch,bh
  403767:	dec    esi
  403768:	int3   
  403769:	sub    ebp,ebp
  40376b:	xor    al,0x95
  40376d:	imul   esi,DWORD PTR [esi+0x7f],0xffffffb5
  403771:	jo     0x403703
  403773:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403774:	repz sub eax,0xbb329089
  40377a:	adc    ah,dl
  40377c:	xor    BYTE PTR [ebp+0x47],ch
  40377f:	fdiv   DWORD PTR [eax-0x3b]
  403782:	jmp    0x403714
  403784:	mov    eax,ds:0xdfc42bce
  403789:	test   eax,0xd4e11365
  40378e:	inc    ebp
  40378f:	add    ebp,DWORD PTR [ebp-0x4c]
  403792:	dec    ebx
  403793:	adc    BYTE PTR [eax-0x6e],cl
  403796:	(bad)  
  403797:	or     al,0xca
  403799:	ss cld 
  40379b:	inc    esi
  40379c:	pop    esp
  40379d:	mov    cs,WORD PTR [esi]
  40379f:	ds adc ch,cl
  4037a2:	fstp   QWORD PTR [esi+0x1c4bf88d]
  4037a8:	rcr    BYTE PTR [edx+edi*1],cl
  4037ab:	mov    bl,0xfa
  4037ad:	xor    ecx,edx
  4037af:	outs   dx,BYTE PTR ds:[esi]
  4037b0:	xchg   esi,eax
  4037b1:	adc    eax,0x5b6fd094
  4037b6:	inc    edi
  4037b7:	ror    DWORD PTR [ebp-0x43930bbd],0xba
  4037be:	add    BYTE PTR [ecx],ch
  4037c0:	inc    ecx
  4037c1:	nop
  4037c2:	or     DWORD PTR [edx],0xd86c86a3
  4037c8:	imul   ebx,DWORD PTR [esi-0x63974cfa],0x31a2466f
  4037d2:	jecxz  0x40382d
  4037d4:	jg     0x403762
  4037d6:	ins    BYTE PTR es:[edi],dx
  4037d7:	shl    BYTE PTR [ebx-0x54],0x17
  4037db:	adc    cl,BYTE PTR [esi+0x3a]
  4037de:	and    DWORD PTR [ebx+0x13],0xffffff92
  4037e2:	fsubr  QWORD PTR [esi-0x4b]
  4037e5:	jp     0x40383f
  4037e7:	sti    
  4037e8:	cmp    ebp,DWORD PTR [esi-0x23]
  4037eb:	sub    eax,0x93776972
  4037f0:	push   ebp
  4037f1:	or     al,BYTE PTR [esi-0xa3aafeb]
  4037f7:	push   0x686cf9c2
  4037fc:	xor    al,0x10
  4037fe:	adc    DWORD PTR ds:0xb31f1053,0x53
  403805:	rcr    DWORD PTR [edi+0x6b],cl
  403808:	jmp    0x403839
  40380a:	cmp    BYTE PTR [ecx+edi*8+0x43],al
  40380e:	and    eax,0x67012fc7
  403813:	lods   eax,DWORD PTR ds:[esi]
  403814:	call   0x3b7974c6
  403819:	pop    es
  40381a:	enter  0x74aa,0xc0
  40381e:	sub    edx,DWORD PTR [edi-0x47]
  403821:	jo     0x403836
  403823:	mov    al,0x93
  403825:	inc    edx
  403826:	mov    cl,0xa9
  403828:	xchg   ebp,eax
  403829:	push   gs
  40382b:	xchg   ebx,eax
  40382c:	rol    DWORD PTR [eax+0x6ef14277],0x6b
  403833:	clc    
  403834:	cmp    bh,BYTE PTR [ebx-0x50]
  403837:	jp     0x403807
  403839:	repz push 0x91cf5bb6
  40383f:	push   edi
  403840:	xchg   esp,eax
  403841:	imul   edi,DWORD PTR [ebx],0x703818bc
  403847:	lock inc ecx
  403849:	push   0xffffffde
  40384b:	jbe    0x4038b7
  40384d:	add    al,0x1b
  40384f:	mov    dh,0x9e
  403851:	cmp    eax,0x79ef14e
  403856:	(bad)  
  403857:	push   ebp
  403858:	xor    DWORD PTR [ebx],ebp
  40385a:	pop    edi
  40385b:	mov    bl,0x6a
  40385d:	push   ebp
  40385e:	sub    BYTE PTR [edx],0xac
  403861:	or     ah,BYTE PTR [ebx+esi*1-0x35]
  403865:	in     al,0xb5
  403867:	in     al,dx
  403868:	ret    
  403869:	push   esi
  40386a:	inc    edx
  40386b:	dec    esp
  40386c:	int    0xa
  40386e:	test   BYTE PTR [ebp+0x44],al
  403871:	mov    bh,0x2a
  403873:	xor    eax,0xddcb8f6f
  403878:	loop   0x403835
  40387a:	push   edi
  40387b:	xor    esp,edx
  40387d:	aaa    
  40387e:	pop    esp
  40387f:	nop
  403880:	in     al,dx
  403881:	xchg   edx,eax
  403882:	dec    esi
  403883:	pop    edx
  403884:	fild   WORD PTR [edi-0x4871f403]
  40388a:	mov    eax,0x5d777036
  40388f:	nop
  403890:	xchg   edi,eax
  403891:	xchg   BYTE PTR [eax],bh
  403893:	out    0x42,al
  403895:	adc    BYTE PTR [edx+0x2c065522],0x73
  40389c:	xchg   DWORD PTR [eax+ecx*2-0x64b82532],ebp
  4038a3:	repz ficom DWORD PTR [ecx]
  4038a6:	cwde   
  4038a7:	lods   al,BYTE PTR ds:[esi]
  4038a8:	pusha  
  4038a9:	mov    bh,0xbf
  4038ab:	neg    esi
  4038ad:	mov    al,0x6f
  4038af:	les    edx,FWORD PTR [edx+0x7a]
  4038b2:	(bad)  
  4038b4:	sbb    al,BYTE PTR [ebx-0xfc2f40f]
  4038ba:	loopne 0x40386b
  4038bc:	and    DWORD PTR [ecx-0x34d5f40d],0x99ac5131
  4038c6:	mov    ch,0xd1
  4038c8:	or     eax,0xb00011a1
  4038cd:	inc    ecx
  4038ce:	fcomp  QWORD PTR [ecx+eiz*2]
  4038d1:	retf   0xcc4d
  4038d4:	mov    ebp,0x8fcbed6c
  4038d9:	or     ebx,ebx
  4038db:	stc    
  4038dc:	(bad)  
  4038dd:	pop    ds
  4038de:	or     bl,dh
  4038e0:	ds push 0xb47d8a48
  4038e6:	shl    ah,0x87
  4038e9:	gs jno 0x4038b5
  4038ec:	pop    ds
  4038ed:	shl    bh,0x3f
  4038f0:	fbstp  TBYTE PTR [eax]
  4038f2:	(bad)  
  4038f3:	xchg   ebp,eax
  4038f4:	into   
  4038f5:	nop
  4038f6:	inc    esi
  4038f7:	gs or  al,0x2a
  4038fa:	cs add eax,0x4fee968d
  403900:	out    0x24,al
  403902:	add    edi,DWORD PTR [esi+ebx*8+0x1549aeaf]
  403909:	ins    DWORD PTR es:[edi],dx
  40390a:	aaa    
  40390b:	mov    dh,0x81
  40390d:	xchg   esi,eax
  40390e:	mov    ecx,DWORD PTR [edx+0x31c7d4f]
  403914:	leave  
  403915:	add    BYTE PTR fs:[ebp+0x26],dl
  403919:	jg     0x4038fc
  40391b:	cmc    
  40391c:	lods   eax,DWORD PTR ds:[esi]
  40391d:	call   0xab9d:0x853f5bbe
  403924:	push   es
  403925:	pop    edx
  403926:	mov    BYTE PTR [esi-0x1a15b63c],bl
  40392c:	mov    DWORD PTR [ebp-0x41f3c514],esp
  403932:	pop    ebx
  403933:	pop    edi
  403934:	stos   DWORD PTR es:[edi],eax
  403935:	dec    esp
  403936:	push   ebp
  403937:	(bad)  
  403938:	lock mov al,ds:0xe224c355
  40393e:	lea    edi,[ebp+0x6558d2a5]
  403944:	mov    ch,0xaa
  403946:	retf   
  403947:	lock mov ebx,0x45693430
  40394d:	mov    ebp,0xa139c8f6
  403952:	mov    ds:0x558d2e3f,al
  403957:	nop
  403958:	out    dx,al
  403959:	adc    DWORD PTR [edi+0x4ab2b1c1],ebp
  40395f:	out    0x42,al
  403961:	lods   eax,DWORD PTR ds:[esi]
  403962:	jg     0x40395e
  403964:	mov    edi,0xc87f0904
  403969:	fxch   st(0)
  40396b:	and    edx,ecx
  40396d:	outs   dx,BYTE PTR ds:[esi]
  40396e:	mov    ebx,0xdeb23fd6
  403973:	mov    ch,0xbd
  403975:	stc    
  403976:	sbb    bl,BYTE PTR [esi-0x11fae88]
  40397c:	dec    ebx
  40397d:	push   edi
  40397e:	or     eax,DWORD PTR ds:0xe24a80d9
  403984:	jae    0x40390d
  403986:	leave  
  403987:	pop    esp
  403988:	pop    ebp
  403989:	stos   BYTE PTR es:[edi],al
  40398a:	mov    bh,0xb7
  40398c:	pop    eax
  40398d:	dec    ebp
  40398e:	xor    dl,0xf3
  403991:	cs and eax,0xf3b83b10
  403997:	or     al,0x8e
  403999:	mov    cl,BYTE PTR [edi-0x78]
  40399c:	jns    0x403958
  40399e:	push   esp
  40399f:	cmp    esi,esi
  4039a1:	call   0x7d5a8c42
  4039a6:	xchg   edi,eax
  4039a7:	pop    esp
  4039a8:	or     DWORD PTR es:[ecx],esi
  4039ab:	(bad)  
  4039ac:	jo     0x40394f
  4039ae:	jge    0x4039a0
  4039b0:	push   ds
  4039b1:	add    edx,DWORD PTR [ecx]
  4039b3:	jno    0x403948
  4039b5:	mov    dl,0x5c
  4039b7:	cld    
  4039b8:	(bad)  
  4039b9:	in     al,0xd7
  4039bb:	ret    
  4039bc:	repz and cl,cl
  4039bf:	imul   ebp,ecx,0x6f717fde
  4039c5:	jno    0x4039b5
  4039c7:	add    eax,0x108a7662
  4039cc:	push   edx
  4039cd:	xor    ebx,DWORD PTR [edx+eax*4-0x525b252]
  4039d4:	push   ebx
  4039d5:	pop    ss
  4039d6:	mov    ds:0x80007cf9,al
  4039db:	add    al,0xe1
  4039dd:	ret    
  4039de:	(bad)  
  4039e0:	dec    edi
  4039e1:	(bad)  
  4039e2:	retf   0x52d
  4039e5:	sub    al,0x72
  4039e7:	push   eax
  4039e8:	les    edx,FWORD PTR [esp+edi*4]
  4039eb:	leave  
  4039ec:	call   0xdbf0:0xec5848fa
  4039f3:	rol    DWORD PTR [esi+0x51976175],1
  4039f9:	ins    DWORD PTR es:[edi],dx
  4039fa:	ret    0xeed3
  4039fd:	test   esi,ebp
  4039ff:	fcomp  DWORD PTR [esi-0xa]
  403a02:	mov    ah,0x5f
  403a04:	cmovns ecx,DWORD PTR [ebp-0x71]
  403a08:	xor    dl,BYTE PTR [ecx-0x8c59266]
  403a0e:	out    0x8f,eax
  403a10:	popa   
  403a11:	mov    ah,0x34
  403a13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403a14:	cmp    dl,BYTE PTR [edi-0x109b96b3]
  403a1a:	repz clc 
  403a1c:	inc    ebp
  403a1d:	sbb    BYTE PTR [edi],0xd8
  403a20:	sbb    dl,0x78
  403a23:	rol    edx,cl
  403a25:	mov    bl,0xb
  403a27:	cmp    DWORD PTR [ecx-0xc],0xffffffaf
  403a2b:	or     al,0xf4
  403a2d:	icebp  
  403a2e:	jmp    0xc75:0x68601647
  403a35:	iret   
  403a36:	cs add al,ah
  403a39:	fisttp WORD PTR [ecx+ebx*4+0x42]
  403a3d:	lds    ebp,FWORD PTR [edx]
  403a3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a40:	jnp    0x403a3e
  403a42:	psubusb mm6,QWORD PTR [ecx-0x6ea54698]
  403a49:	mov    esi,0xe0f36312
  403a4e:	cwde   
  403a4f:	sahf   
  403a50:	mov    BYTE PTR ds:0xa638ce4a,bh
  403a56:	ins    DWORD PTR es:[edi],dx
  403a57:	cwde   
  403a58:	adc    DWORD PTR [eax+eiz*8],esi
  403a5b:	inc    esi
  403a5c:	popa   
  403a5d:	aaa    
  403a5e:	out    0xd8,eax
  403a60:	fdiv   st(5),st
  403a62:	or     dh,BYTE PTR [eax-0x80]
  403a65:	fiadd  DWORD PTR ds:0x72601786
  403a6b:	xlat   BYTE PTR ds:[ebx]
  403a6c:	add    edi,edx
  403a6e:	test   eax,0x38c2fbbb
  403a73:	(bad)  
  403a74:	ret    
  403a75:	scas   al,BYTE PTR es:[edi]
  403a76:	push   eax
  403a77:	xor    BYTE PTR [ebp-0x2e],dh
  403a7a:	add    cl,BYTE PTR [edi-0x2b122c71]
  403a80:	pusha  
  403a81:	adc    al,0x7e
  403a83:	inc    eax
  403a84:	push   ebx
  403a85:	call   0x183bdae5
  403a8a:	push   cs
  403a8b:	xchg   esi,eax
  403a8c:	adc    ah,BYTE PTR [ebx]
  403a8e:	int    0xf3
  403a90:	mov    bh,0x41
  403a92:	retf   0xa321
  403a95:	repz rcl BYTE PTR cs:[edi],1
  403a99:	mov    bh,0xe1
  403a9b:	mov    eax,0x62aa72f1
  403aa0:	call   0x6776:0xbe2f3347
  403aa7:	outs   dx,DWORD PTR ds:[esi]
  403aa8:	pop    ds
  403aa9:	inc    ebp
  403aaa:	mov    ebp,0xaf9b42e
  403aaf:	shl    BYTE PTR [ebp-0x71],0x5e
  403ab3:	dec    eax
  403ab4:	xlat   BYTE PTR ds:[ebx]
  403ab6:	xchg   esi,eax
  403ab7:	imul   ebx,DWORD PTR [ecx-0x28],0xc8c82a0d
  403abe:	adc    esp,DWORD PTR [ecx-0x63408c60]
  403ac4:	pop    ds
  403ac5:	fcomp  QWORD PTR [eax-0x20]
  403ac8:	mov    ah,0x10
  403aca:	retf   
  403acb:	div    DWORD PTR [ecx-0x13]
  403ace:	mov    ebp,0x7b9ccf24
  403ad3:	les    ecx,FWORD PTR [edx-0x2c]
  403ad6:	fstp   TBYTE PTR [ebx]
  403ad8:	add    al,0x17
  403ada:	sbb    BYTE PTR [esi+0x33],ch
  403add:	pop    ecx
  403ade:	loope  0x403b4c
  403ae0:	dec    edx
  403ae1:	pmaxub mm6,QWORD PTR [ecx+0x74]
  403ae5:	fist   WORD PTR [edi]
  403ae7:	mov    bl,0x70
  403ae9:	rcl    ecx,1
  403aeb:	push   ecx
  403aec:	ret    
  403aed:	das    
  403aee:	call   0x2d2fcc61
  403af3:	test   eax,0x637c44c1
  403af8:	das    
  403af9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403afa:	cld    
  403afb:	ss cmp eax,0x4d4f3b27
  403b01:	fild   DWORD PTR [edx-0x34]
  403b04:	test   al,0x4b
  403b06:	dec    ebx
  403b07:	mov    ch,0x54
  403b09:	mov    edx,DWORD PTR [esi+0x50]
  403b0c:	sbb    eax,0x75e90183
  403b11:	ret    
  403b12:	sub    dl,BYTE PTR [ebp+0x3aee897a]
  403b18:	push   0xffffffde
  403b1a:	rol    DWORD PTR [edi+0x56],1
  403b1d:	mov    al,ds:0x559cab8b
  403b22:	push   ebx
  403b23:	or     BYTE PTR [eax-0x12],al
  403b26:	sub    eax,0xc3ce7ca5
  403b2b:	cld    
  403b2c:	cmp    bh,BYTE PTR [ebx+0x2f3530c5]
  403b32:	dec    esi
  403b33:	mov    es,WORD PTR [esi-0x1cc717a7]
  403b39:	adc    eax,0xd00c5a8c
  403b3e:	ret    0x6a06
  403b41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b42:	add    DWORD PTR [eax-0x3c],0x3d
  403b46:	xchg   esi,eax
  403b47:	jle    0x403ada
  403b49:	and    eax,0x4db400bf
  403b4e:	icebp  
  403b4f:	sti    
  403b50:	pop    esi
  403b51:	xlat   BYTE PTR ds:[ebx]
  403b52:	xchg   ebx,eax
  403b53:	dec    esp
  403b54:	lds    eax,FWORD PTR [esi]
  403b56:	nop
  403b57:	imul   eax,DWORD PTR [ebp+0x62],0xd8f23344
  403b5e:	add    ch,BYTE PTR [ebx-0x19983ad]
  403b64:	cli    
  403b65:	pop    edi
  403b66:	(bad)  
  403b67:	in     eax,0x13
  403b69:	jnp    0x403b32
  403b6b:	hlt    
  403b6c:	mov    esi,0xaad33c76
  403b71:	cmp    cl,BYTE PTR [ecx-0x33aee36]
  403b77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b78:	or     eax,0x991be60f
  403b7d:	inc    esp
  403b7e:	xlat   BYTE PTR ds:[ebx]
  403b7f:	std    
  403b80:	jae    0x403bc6
  403b82:	punpckldq mm2,mm3
  403b85:	in     al,dx
  403b86:	ins    DWORD PTR es:[edi],dx
  403b87:	cmp    ebx,edi
  403b89:	inc    ebx
  403b8a:	pop    ebp
  403b8b:	mov    bh,dh
  403b8d:	mov    ecx,0x9960db18
  403b92:	push   ebx
  403b93:	or     BYTE PTR [ebp+0x16],dh
  403b96:	rcl    DWORD PTR [ebp+0x23aa7f40],cl
  403b9c:	lock rcr DWORD PTR [ecx+ebp*8],0x36
  403ba1:	clc    
  403ba2:	shl    ebx,1
  403ba4:	mov    esi,ecx
  403ba6:	in     eax,0x4
  403ba8:	rol    DWORD PTR [ebx-0x3b],cl
  403bab:	adc    eax,0x883bc3aa
  403bb0:	retf   0x135c
  403bb3:	push   ss
  403bb4:	(bad)  
  403bb5:	push   ecx
  403bb6:	aad    0x55
  403bb8:	push   eax
  403bb9:	jmp    0x6c03d4e0
  403bbe:	shr    BYTE PTR [edi+0x49],0xe
  403bc2:	sub    BYTE PTR [eax+eiz*4-0x6e],bl
  403bc6:	cwde   
  403bc7:	sbb    ebp,DWORD PTR [ebp-0x1804df04]
  403bcd:	mov    edx,DWORD PTR [ecx+ebx*1-0x53]
  403bd1:	out    0xb3,eax
  403bd3:	sti    
  403bd4:	or     DWORD PTR [ebp+0x77],ebp
  403bd7:	inc    ecx
  403bd8:	out    0x30,al
  403bda:	jmp    0x403bd6
  403bdc:	and    ch,dl
  403bde:	sbb    esi,DWORD PTR [esi]
  403be0:	mov    eax,ds:0xfbbb292e
  403be5:	cmp    eax,0x452978ed
  403bea:	ret    
  403beb:	pop    edx
  403bec:	jae    0x403bce
  403bee:	ret    0x9240
  403bf1:	xor    esi,DWORD PTR [ecx+0x60b6a03]
  403bf7:	(bad)  
  403bf8:	sub    DWORD PTR [ebx-0x48],edx
  403bfb:	dec    edx
  403bfc:	and    BYTE PTR [edx-0x62],0xe9
  403c00:	mov    ch,0x6e
  403c02:	repnz rcl BYTE PTR [ebp+eiz*8+0x5097a64a],cl
  403c0a:	push   ss
  403c0b:	cmp    al,al
  403c0d:	jno    0x403c6b
  403c0f:	ret    0x2189
  403c12:	iret   
  403c13:	jnp    0x403c58
  403c15:	cs cs and ecx,esi
  403c19:	sbb    eax,DWORD PTR [ecx-0x7df23e08]
  403c1f:	inc    esi
  403c20:	shr    BYTE PTR [esi+0xe],cl
  403c23:	lods   al,BYTE PTR ds:[esi]
  403c24:	and    bh,bl
  403c26:	mov    bh,0x11
  403c28:	shl    DWORD PTR [eax-0x41],1
  403c2b:	xchg   ebx,eax
  403c2c:	adc    DWORD PTR [ecx+eiz*4+0x44],ebp
  403c30:	push   ebp
  403c31:	mov    ebp,0x5b401b4
  403c36:	imul   ebx,edi,0x1506206e
  403c3c:	mov    ebx,0xcb3487b5
  403c41:	dec    edx
  403c42:	call   0x7075206e
  403c47:	stc    
  403c48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c49:	fucomi st,st(2)
  403c4b:	sbb    eax,0xa6caf77f
  403c50:	outs   dx,BYTE PTR ds:[esi]
  403c51:	js     0x403cab
  403c53:	and    ah,bh
  403c55:	jmp    DWORD PTR [edx+0x32]
  403c58:	mov    bh,0xf9
  403c5a:	sub    al,0x8b
  403c5c:	dec    ebx
  403c5d:	mov    ebx,0xedaa8a81
  403c62:	inc    ebx
  403c63:	xlat   BYTE PTR ds:[ebx]
  403c64:	xchg   esi,eax
  403c65:	or     DWORD PTR [edx],eax
  403c67:	and    eax,0x78ca883b
  403c6c:	fnstsw WORD PTR [eax+0x1]
  403c6f:	push   0x35b2bb37
  403c74:	mov    edx,0xd4126e7
  403c79:	cmp    edx,DWORD PTR [eax]
  403c7b:	cmp    edi,DWORD PTR [edi]
  403c7d:	rcl    edi,cl
  403c7f:	push   esp
  403c80:	push   es
  403c81:	jle    0x403cda
  403c83:	and    esp,ebx
  403c85:	mov    eax,ds:0xa899a9f4
  403c8a:	stos   BYTE PTR es:[edi],al
  403c8b:	int    0xbf
  403c8d:	mov    al,0x75
  403c8f:	jnp    0x403c54
  403c91:	and    bh,BYTE PTR [ecx-0x4a]
  403c94:	fwait
  403c95:	pop    esp
  403c96:	push   esp
  403c97:	adc    dh,BYTE PTR [edx]
  403c99:	ss sub ebp,ebx
  403c9c:	dec    ecx
  403c9d:	retf   0xf606
  403ca0:	adc    al,0x14
  403ca2:	dec    ecx
  403ca3:	rcr    BYTE PTR [edx-0x1b],0x3c
  403ca7:	xor    al,0xe4
  403ca9:	ror    BYTE PTR [ecx-0x1368045d],1
  403caf:	push   es
  403cb0:	adc    DWORD PTR [edi],0x37
  403cb3:	or     eax,0xddb28148
  403cb8:	jle    0x403cd7
  403cba:	xor    al,0x83
  403cbc:	ret    0xd885
  403cbf:	test   dl,bh
  403cc1:	jecxz  0x403d00
  403cc3:	mov    ds:0xbb57e927,eax
  403cc8:	mov    cl,0x5e
  403cca:	mov    edi,0xc2df7282
  403ccf:	jg     0x403c8b
  403cd1:	sbb    al,0xc8
  403cd3:	sub    al,0x13
  403cd5:	mov    ebp,0x922a856e
  403cda:	xor    esi,0xffffffe5
  403cdd:	cmp    eax,0xea520570
  403ce2:	push   ebp
  403ce3:	adc    DWORD PTR [eax],ebx
  403ce5:	aaa    
  403ce6:	int    0xe3
  403ce8:	dec    esp
  403ce9:	mov    dl,0x90
  403ceb:	pop    edx
  403cec:	pop    esi
  403ced:	pop    ecx
  403cee:	add    al,0x4e
  403cf0:	mov    ah,0xf6
  403cf2:	cmp    bl,BYTE PTR [edi]
  403cf4:	dec    esp
  403cf5:	inc    esi
  403cf6:	and    BYTE PTR ds:0x4d006981,0x87
  403cfd:	xor    eax,0x15b8453f
  403d02:	adc    BYTE PTR [ecx+0x1b],0xe9
  403d06:	int    0xe9
  403d08:	test   al,0x1c
  403d0a:	push   ebx
  403d0b:	push   0x17205b64
  403d10:	(bad)  
  403d11:	adc    DWORD PTR [ebx-0x44],ecx
  403d14:	xchg   esi,eax
  403d15:	sbb    BYTE PTR [ebp+0x71],ch
  403d18:	push   ebp
  403d19:	xor    ecx,DWORD PTR [ebx-0x59]
  403d1c:	and    BYTE PTR [eax+0x70],dh
  403d1f:	icebp  
  403d20:	jbe    0x403d5a
  403d22:	sub    DWORD PTR [ebx],esp
  403d24:	jnp    0x403d0e
  403d26:	pop    ds
  403d27:	mul    BYTE PTR [ecx-0x60]
  403d2a:	cmc    
  403d2b:	add    bl,BYTE PTR [edx+0x79]
  403d2e:	adc    eax,0xe07ac73
  403d33:	jl     0x403ced
  403d35:	repz (bad) 
  403d37:	call   0xc80d2688
  403d3c:	mov    BYTE PTR [edi+ecx*2-0x38],ah
  403d40:	fistp  DWORD PTR [eax+0x3e683a0f]
  403d46:	test   edx,esp
  403d48:	mov    BYTE PTR [eax+0x3d],dl
  403d4b:	mov    eax,0xd4306d93
  403d50:	mov    ah,0x4e
  403d52:	in     eax,0xbc
  403d54:	mov    bl,0x5e
  403d56:	loope  0x403d77
  403d58:	push   ds
  403d59:	sbb    ebx,0x4d
  403d5c:	xchg   esi,eax
  403d5d:	jmp    0x4ef6598c
  403d62:	cmp    eax,0xa27ae98a
  403d67:	pop    ecx
  403d68:	xchg   DWORD PTR [eax],ebp
  403d6a:	sub    al,0x46
  403d6c:	dec    ecx
  403d6d:	jg     0x403d4b
  403d6f:	mov    eax,ds:0x3c9279f
  403d74:	adc    esp,ecx
  403d76:	(bad)  
  403d77:	push   edi
  403d78:	fnstsw WORD PTR [ebx-0x72eb6da1]
  403d7e:	scas   eax,DWORD PTR es:[edi]
  403d7f:	push   ebp
  403d80:	or     esp,esp
  403d82:	fdiv   st(6),st
  403d84:	js     0x403d0f
  403d86:	adc    dh,BYTE PTR [ecx+ecx*4-0x32]
  403d8a:	jbe    0x403db2
  403d8c:	cmp    eax,0xce406774
  403d91:	adc    eax,0x2751d0c2
  403d96:	(bad)  
  403d97:	and    eax,0x7e1f5db3
  403d9c:	retf   0x43ab
  403d9f:	push   es
  403da0:	test   al,0xc6
  403da2:	jnp    0x403d86
  403da4:	imul   esp,DWORD PTR [edi+eiz*4+0x5aa319ee],0x166ed48a
  403daf:	adc    eax,0xf678ae51
  403db4:	push   edx
  403db5:	push   ebp
  403db6:	dec    ebp
  403db7:	rcl    DWORD PTR ss:[eax+0x79],cl
  403dbb:	jns    0x403d88
  403dbd:	mov    dh,0x33
  403dbf:	mov    ds:0xd6abc0f0,eax
  403dc4:	aad    0x5c
  403dc6:	test   ch,dl
  403dc8:	ins    BYTE PTR es:[edi],dx
  403dc9:	mov    WORD PTR [esi-0x21],fs
  403dcc:	bound  edx,QWORD PTR [ebp+0x28325e54]
  403dd2:	sbb    ecx,DWORD PTR [esi]
  403dd4:	push   cs
  403dd5:	sub    BYTE PTR [ecx+0x20],al
  403dd8:	fldcw  WORD PTR [edi]
  403dda:	xor    BYTE PTR [edi+0x596a2f5b],bl
  403de0:	in     eax,0xf2
  403de2:	rol    BYTE PTR [edx+0x66],1
  403de5:	push   esp
  403de6:	jmp    0x4face37b
  403deb:	fild   WORD PTR [ebx]
  403ded:	inc    esp
  403dee:	fst    QWORD PTR [edi+eiz*4+0x51489f1a]
  403df5:	xchg   esi,eax
  403df6:	int3   
  403df7:	aad    0xfa
  403df9:	lock test DWORD PTR [esi-0x5c3ab2f1],0xbaf0246d
  403e04:	or     DWORD PTR [edi-0x59bb378f],edi
  403e0a:	popa   
  403e0b:	inc    esi
  403e0c:	pushf  
  403e0d:	dec    ebp
  403e0e:	lea    eax,[eax+esi*1+0x1251b7ee]
  403e15:	or     dh,al
  403e17:	ja     0x403e16
  403e19:	pop    ss
  403e1a:	test   eax,0xc3d74c12
  403e1f:	jmp    0x97f3:0x24e37854
  403e26:	add    al,0xaa
  403e28:	jmp    0x89be:0xb2f1
  403e2e:	popf   
  403e2f:	adc    BYTE PTR [esi],dh
  403e31:	inc    esp
  403e32:	xor    edi,DWORD PTR [edx+0x6b]
  403e35:	push   ds
  403e36:	mov    dh,0xad
  403e38:	push   ds
  403e39:	shr    DWORD PTR [esi+0x9],cl
  403e3c:	push   ecx
  403e3d:	push   ss
  403e3e:	mov    ebp,0xe8244eca
  403e43:	add    eax,0x8fb4b707
  403e48:	rcl    ebx,cl
  403e4a:	cmp    dh,cl
  403e4c:	push   ss
  403e4d:	or     BYTE PTR [ecx-0x62a55c04],0x58
  403e54:	outs   dx,DWORD PTR ds:[esi]
  403e55:	inc    eax
  403e56:	imul   ecx,eax,0xa992e6cb
  403e5c:	rcl    DWORD PTR [ecx],1
  403e5e:	xor    DWORD PTR [ecx-0x753c8d9d],ebp
  403e64:	lods   eax,DWORD PTR ds:[esi]
  403e65:	ret    0x39f7
  403e68:	fisttp DWORD PTR [esp+ebp*2+0x1c]
  403e6c:	or     al,0x5f
  403e6e:	test   eax,0xc0fb4219
  403e73:	pusha  
  403e74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e75:	ret    
  403e76:	mov    ds:0x43d553a8,al
  403e7b:	and    dl,BYTE PTR [eax+0x5e]
  403e7e:	push   ss
  403e7f:	cmp    ch,al
  403e81:	xor    dl,BYTE PTR [eax-0x34a60fc9]
  403e87:	sub    BYTE PTR [edi-0xd],0x74
  403e8b:	ror    BYTE PTR [eax-0x5cb049c5],cl
  403e91:	popf   
  403e92:	xchg   ecx,eax
  403e93:	fst    QWORD PTR [esi]
  403e95:	sbb    DWORD PTR [edx-0x5],ebx
  403e98:	jb     0x403e53
  403e9a:	mov    dl,0x6c
  403e9c:	push   edi
  403e9d:	(bad)  
  403e9e:	xor    DWORD PTR [ebx],esi
  403ea0:	mov    dl,0x2e
  403ea2:	fidiv  WORD PTR [esi]
  403ea4:	push   esp
  403ea5:	fwait
  403ea6:	out    0xc7,eax
  403ea8:	adc    al,0x3a
  403eaa:	jg     0x403e91
  403eac:	mov    esi,0xb594fed9
  403eb1:	add    BYTE PTR ds:0xb6115dec,ah
  403eb7:	sub    ebx,edi
  403eb9:	addr16 push esi
  403ebb:	cwde   
  403ebc:	pushf  
  403ebd:	out    dx,eax
  403ebe:	and    al,0xdd
  403ec0:	push   edi
  403ec1:	aaa    
  403ec2:	pop    edi
  403ec3:	adc    cl,bh
  403ec5:	push   0x7c
  403ec7:	adc    BYTE PTR [ebp+0x62],dh
  403eca:	(bad)  
  403ecb:	fisttp QWORD PTR [ebp-0x1d90005a]
  403ed1:	fwait
  403ed2:	outs   dx,DWORD PTR ds:[esi]
  403ed3:	adc    DWORD PTR [esp+ebx*2-0x68],0x2b
  403ed8:	xor    eax,0x31902172
  403edd:	inc    esi
  403ede:	arpl   WORD PTR ds:0x6717242e,si
  403ee4:	in     eax,0x40
  403ee6:	cmp    edi,eax
  403ee8:	mov    ?,WORD PTR [esi+0x578bd9e5]
  403eee:	(bad)  
  403eef:	mov    eax,ds:0x21273c12
  403ef4:	add    eax,0x3ac66aa8
  403ef9:	pop    ds
  403efa:	call   0x549e:0xa6a03a08
  403f01:	loop   0x403ed1
  403f03:	int3   
  403f04:	mov    ebx,0x7c069612
  403f0a:	jo     0x403ec5
  403f0c:	leave  
  403f0d:	scas   al,BYTE PTR es:[edi]
  403f0e:	je     0x403ef3
  403f10:	mov    edx,0x3f4418bb
  403f15:	imul   esp,edi,0x69dcac91
  403f1b:	pop    esi
  403f1c:	mov    ebx,0xe0668f2c
  403f21:	movaps xmm5,xmm2
  403f24:	jmp    0x403f15
  403f26:	fadd   DWORD PTR [ecx+esi*1+0x11]
  403f2a:	inc    ebx
  403f2b:	sahf   
  403f2c:	jmp    0xee972a78
  403f31:	push   ds
  403f32:	dec    eax
  403f33:	outs   dx,DWORD PTR ds:[esi]
  403f34:	jae    0x403fb3
  403f36:	test   al,0xd
  403f38:	aaa    
  403f39:	or     eax,0xfbc9e26b
  403f3e:	pop    ds
  403f3f:	and    BYTE PTR [esi+0x757837b4],dh
  403f45:	push   edi
  403f46:	stos   BYTE PTR es:[di],al
  403f48:	std    
  403f49:	sbb    cl,bl
  403f4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f4c:	or     dl,dl
  403f4e:	std    
  403f4f:	and    esp,DWORD PTR [esi]
  403f51:	push   ecx
  403f52:	cmp    BYTE PTR [ecx+0x1354647a],cl
  403f58:	sbb    eax,0xddf083e5
  403f5d:	fiadd  DWORD PTR [edx-0x5de6680]
  403f63:	push   eax
  403f64:	stos   DWORD PTR es:[edi],eax
  403f65:	mov    edx,0xd5d1a923
  403f6a:	dec    ebp
  403f6b:	outs   dx,BYTE PTR ds:[esi]
  403f6c:	mov    ?,WORD PTR [eax+0x1f]
  403f6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f70:	lock scas eax,DWORD PTR es:[edi]
  403f72:	add    ebp,esi
  403f74:	adc    al,0x38
  403f76:	dec    ebp
  403f77:	push   ss
  403f78:	into   
  403f79:	xchg   esp,eax
  403f7a:	pop    ebx
  403f7b:	xchg   edi,eax
  403f7c:	jg     0x403fc6
  403f7e:	adc    dh,al
  403f80:	in     al,dx
  403f81:	test   cl,bl
  403f83:	mov    bl,0x36
  403f85:	nop
  403f86:	psllq  mm3,mm0
  403f89:	mov    ebp,0xeab4c989
  403f8e:	sbb    al,BYTE PTR [ebp+0x63]
  403f91:	(bad)  
  403f92:	cld    
  403f93:	popa   
  403f94:	or     DWORD PTR [ebx-0x7],edi
  403f97:	push   ss
  403f98:	and    al,0x50
  403f9a:	jnp    0x403f68
  403f9c:	cs mov dl,0x2f
  403f9f:	fiadd  DWORD PTR [ebp-0x78]
  403fa2:	mov    WORD PTR [eax],gs
  403fa4:	fnsave [eax]
  403fa6:	xchg   esi,eax
  403fa7:	and    cl,BYTE PTR [ebp+0x1a]
  403faa:	jmp    0x403ffb
  403fac:	mov    ah,0xd7
  403fae:	imul   ecx,eax,0xa4d1a58c
  403fb4:	neg    BYTE PTR [ebx+0x30a78635]
  403fba:	add    bh,BYTE PTR [edx-0x47]
  403fbd:	dec    edi
  403fbe:	sub    DWORD PTR ds:0xaa4eba29,eax
  403fc4:	fwait
  403fc5:	xor    BYTE PTR [edi-0x6b],0x3c
  403fc9:	dec    esi
  403fca:	aad    0x3
  403fcc:	mov    fs,WORD PTR [edi+edx*8+0xc2c50eb]
  403fd3:	and    ebp,esi
  403fd5:	and    bl,BYTE PTR [ebx-0x2c9fe5]
  403fdb:	stc    
  403fdc:	fimul  DWORD PTR [ecx]
  403fde:	fwait
  403fdf:	push   es
  403fe0:	pop    DWORD PTR [ecx]
  403fe2:	cwde   
  403fe3:	das    
  403fe4:	in     eax,dx
  403fe5:	push   ebp
  403fe6:	sbb    eax,0x631d1be6
  403feb:	jnp    0x403fff
  403fed:	xchg   ecx,eax
  403fee:	ss in  eax,dx
  403ff0:	call   0x47532758
  403ff5:	mov    edx,0x9047c4e6
  403ffa:	bound  ebp,QWORD PTR [ebx+0x32807f2c]
  404000:	mov    ds:0x51ef7c9a,al
  404005:	dec    ebp
  404006:	mov    eax,0x43848eaa
  40400b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40400c:	out    0xcf,al
  40400e:	xor    cl,BYTE PTR [edi+0x4f2238fb]
  404014:	push   esp
  404015:	imul   esi,DWORD PTR [edi-0x8],0x61d55515
  40401c:	outs   dx,BYTE PTR ds:[esi]
  40401d:	mov    esp,DWORD PTR [ecx+0x1d]
  404020:	ins    DWORD PTR es:[edi],dx
  404021:	add    dh,BYTE PTR [edi-0x5eb95cad]
  404027:	pop    ebp
  404028:	out    0xda,eax
  40402a:	or     bl,BYTE PTR [eax+0x25]
  40402d:	shl    DWORD PTR [ebx+0x47a1ea05],0x7f
  404034:	int3   
  404035:	xor    esp,DWORD PTR [ecx+0x1d9364e2]
  40403b:	lods   eax,DWORD PTR ds:[esi]
  40403c:	mov    bl,0xd8
  40403e:	je     0x403fc4
  404040:	popf   
  404041:	sbb    ebx,esi
  404043:	push   ebx
  404044:	lahf   
  404045:	cmc    
  404046:	add    eax,0x4d835ca7
  40404b:	cmp    al,BYTE PTR [ebx+0x375a5f51]
  404051:	(bad)
  404055:	je     0x404043
  404057:	xchg   edx,eax
  404058:	or     BYTE PTR [edi+0x1f9236c6],dl
  40405e:	inc    ecx
  40405f:	adc    BYTE PTR [esi+0x10],dh
  404062:	in     eax,0x79
  404064:	sub    ecx,ebx
  404066:	leave  
  404067:	scas   al,BYTE PTR es:[edi]
  404068:	lds    ebx,FWORD PTR [esi+0x4996af73]
  40406e:	xor    DWORD PTR [ebx+0x3835d8ef],ebx
  404074:	(bad)  
  404075:	aaa    
  404076:	imul   ebx,DWORD PTR [esi-0x661f160f],0x9e34998f
  404080:	call   0x60819f1c
  404085:	xchg   ebx,eax
  404086:	mov    al,ds:0xd5a0d33d
  40408b:	push   ds
  40408c:	jae    0x4040db
  40408e:	pusha  
  40408f:	pusha  
  404090:	push   esp
  404091:	cld    
  404092:	jp     0x404070
  404094:	mov    eax,ds:0x288f2525
  404099:	js     0x4040ed
  40409b:	das    
  40409c:	(bad)  
  40409d:	test   DWORD PTR [ebp+edx*4+0x2b2f22d9],0x8545f091
  4040a8:	(bad)  
  4040a9:	pop    ebp
  4040aa:	adc    dh,BYTE PTR [ecx]
  4040ac:	lods   al,BYTE PTR ds:[esi]
  4040ad:	xchg   esp,eax
  4040ae:	or     esp,eax
  4040b0:	jae    0x40407a
  4040b2:	mov    ds:0xab9b8d17,eax
  4040b7:	jge    0x404105
  4040b9:	pop    ds
  4040ba:	cwde   
  4040bb:	imul   edi,DWORD PTR [esp+eiz*4+0x35],0x257172f7
  4040c3:	pop    ebp
  4040c4:	pop    ebx
  4040c5:	ret    
  4040c6:	(bad)  
  4040c7:	je     0x40406d
  4040c9:	out    0xbf,al
  4040cb:	pop    esi
  4040cc:	sbb    ch,bh
  4040ce:	test   al,0x58
  4040d0:	xchg   edx,eax
  4040d1:	int3   
  4040d2:	dec    ebx
  4040d3:	xor    dl,0x67
  4040d6:	sbb    ah,BYTE PTR [ecx+ebx*8+0x4403ee48]
  4040dd:	mov    ?,ebx
  4040df:	lahf   
  4040e0:	aad    0x6e
  4040e2:	ror    DWORD PTR [edx],0xd0
  4040e5:	out    0xf6,eax
  4040e7:	jmp    0xd73e571a
  4040ec:	and    BYTE PTR [ebx+0x3a2d10d9],al
  4040f2:	cmc    
  4040f3:	add    BYTE PTR [eax+0x2c],bl
  4040f6:	sbb    al,0xb3
  4040f8:	inc    esi
  4040f9:	loop   0x4040bc
  4040fb:	ret    
  4040fc:	cdq    
  4040fd:	sub    ah,BYTE PTR [ebp-0x6]
  404100:	push   0xe853c05b
  404105:	imul   esi,DWORD PTR [edi-0x3d]
  404109:	lahf   
  40410a:	les    edx,FWORD PTR [edi-0x64014b07]
  404110:	or     al,dh
  404112:	add    BYTE PTR ss:[ecx+0xa],ah
  404116:	mov    al,0x9
  404118:	push   es
  404119:	mov    ds,WORD PTR [ebx-0x49df9686]
  40411f:	mov    ebx,DWORD PTR [ecx]
  404121:	mov    ?,esi
  404123:	jecxz  0x40418e
  404125:	push   ebx
  404126:	jle    0x40417a
  404128:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  40412a:	xor    eax,0x3020db51
  40412f:	push   esp
  404130:	or     eax,0x1b79505a
  404135:	iret   
  404136:	add    DWORD PTR [edx-0x2830b1b],esi
  40413c:	pushf  
  40413d:	in     al,0xaf
  40413f:	mov    eax,0xbcb951ac
  404144:	neg    DWORD PTR [edi-0x5c9cb812]
  40414a:	(bad)  
  40414b:	push   eax
  40414c:	stc    
  40414d:	dec    ebp
  40414e:	xor    BYTE PTR [edx-0x4f],dl
  404151:	push   cs
  404152:	shl    DWORD PTR [edi+0x1f],cl
  404155:	mov    ?,WORD PTR [edi+0x7395f818]
  40415b:	add    DWORD PTR [eax-0x40],edi
  40415e:	or     esp,esi
  404160:	enter  0x655f,0xc3
  404164:	xchg   ebx,eax
  404165:	push   cs
  404166:	outs   dx,DWORD PTR ds:[esi]
  404167:	jmp    0x2be7e006
  40416c:	push   0xa290cd7b
  404171:	popa   
  404172:	pop    eax
  404173:	and    eax,0x8e1f9cb4
  404178:	xchg   BYTE PTR ds:0xff2b649a,ah
  40417e:	jecxz  0x40412f
  404180:	retf   
  404181:	inc    esp
  404182:	scas   eax,DWORD PTR es:[edi]
  404183:	xor    al,0x72
  404185:	sbb    eax,0xb6b1f8e2
  40418a:	adc    eax,0x70ca9baa
  40418f:	jg     0x40417e
  404191:	or     eax,0x2b4b01b2
  404196:	in     eax,0xca
  404198:	adc    DWORD PTR [ecx-0xac1dbde],edx
  40419e:	fcom   DWORD PTR [ebx]
  4041a0:	jmp    0x7504:0xfb2930ea
  4041a7:	ins    DWORD PTR es:[edi],dx
  4041a8:	push   0x25606b2d
  4041ad:	ret    0x5365
  4041b0:	aaa    
  4041b1:	mov    ds:0x749ed48c,al
  4041b6:	int3   
  4041b7:	cdq    
  4041b8:	add    DWORD PTR [edi-0x77e07d94],edi
  4041be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4041bf:	lea    edx,[ebx+ecx*8+0x58]
  4041c3:	stos   DWORD PTR es:[edi],eax
  4041c4:	inc    ecx
  4041c5:	jno    0x4041c4
  4041c7:	in     eax,dx
  4041c8:	add    dh,dh
  4041ca:	xor    BYTE PTR [ebx-0x26],dl
  4041cd:	loop   0x404163
  4041cf:	sti    
  4041d0:	mov    dh,0xd0
  4041d2:	icebp  
  4041d3:	pushf  
  4041d4:	fstp   QWORD PTR [ecx]
  4041d6:	in     eax,dx
  4041d7:	repnz repnz out dx,al
  4041da:	aam    0xbd
  4041dc:	mov    fs,esp
  4041de:	les    esi,FWORD PTR [esi-0x57]
  4041e1:	js     0x40418c
  4041e3:	push   0xc0741026
  4041e8:	stc    
  4041e9:	add    eax,0x91e07654
  4041ee:	mov    cl,BYTE PTR cs:[edx+ecx*8+0x38c4dd6b]
  4041f6:	push   ecx
  4041f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041f8:	jp     0x404238
  4041fa:	cmp    ebp,edi
  4041fc:	dec    DWORD PTR [ebx+0x52ddda30]
  404202:	sub    al,0x5b
  404204:	fsubr  DWORD PTR [esi+eax*2]
  404207:	and    BYTE PTR [eax-0x5bc45590],dl
  40420d:	mov    esp,0xa47762a4
  404212:	add    BYTE PTR [ebx],bh
  404214:	cmp    al,0x1c
  404216:	(bad)  
  404217:	dec    ebp
  404218:	xor    ch,dh
  40421a:	scas   al,BYTE PTR es:[edi]
  40421b:	in     al,0xc7
  40421d:	rcl    DWORD PTR [esi],cl
  40421f:	or     DWORD PTR [edi+0xf48a112],edx
  404225:	das    
  404226:	mov    edx,edx
  404228:	sbb    edi,DWORD PTR [ecx+0x2b20acd2]
  40422e:	jbe    0x404265
  404230:	(bad)  
  404231:	fisttp DWORD PTR [ebp-0x51]
  404234:	mov    ah,0x8e
  404236:	lds    ecx,FWORD PTR [ecx]
  404238:	rcl    BYTE PTR [ecx],1
  40423a:	or     DWORD PTR [edx+0x3cf2ccc3],edx
  404240:	jb     0x404216
  404242:	(bad)  
  404243:	push   cs
  404244:	lock cmp BYTE PTR [esi],bl
  404247:	or     eax,0x240a416
  40424c:	stos   DWORD PTR es:[edi],eax
  40424d:	and    eax,0xe201e16a
  404252:	xor    al,BYTE PTR [ebp+esi*8+0x7ed60856]
  404259:	adc    al,BYTE PTR [esi+0x63a664f7]
  40425f:	adc    edx,ebp
  404261:	repz test al,dl
  404264:	jg     0x40424e
  404266:	or     bl,BYTE PTR [edx-0x7d6d8dc2]
  40426c:	mov    bl,bh
  40426e:	add    dl,dh
  404270:	dec    edi
  404271:	loop   0x404263
  404273:	cli    
  404274:	test   eax,0xd27cc0dc
  404279:	push   edx
  40427b:	jp     0x4042ee
  40427d:	add    DWORD PTR [ebp-0x1eeaedc4],ebp
  404283:	mov    esp,0xe9794c17
  404288:	cs add bl,al
  40428b:	add    bh,bl
  40428d:	ja     0x4042bd
  40428f:	xchg   esi,eax
  404290:	ja     0x404268
  404292:	pop    esp
  404293:	imul   esi,DWORD PTR [ebx-0x544df88a],0x180b1ed2
  40429d:	gs (bad) 
  40429f:	jmp    0x1ee4:0xb949bf0
  4042a6:	cwde   
  4042a7:	or     eax,0xa45684ba
  4042ac:	int3   
  4042ad:	inc    ecx
  4042ae:	dec    esi
  4042af:	(bad)  
  4042b1:	jmp    0x40432b
  4042b3:	add    esp,DWORD PTR [edi]
  4042b5:	sub    eax,0x77860b53
  4042ba:	xor    esp,ecx
  4042bc:	aam    0x30
  4042be:	pop    edx
  4042bf:	icebp  
  4042c0:	pop    ds
  4042c1:	shr    esp,cl
  4042c3:	psubw  mm7,mm5
  4042c6:	add    al,0x87
  4042c8:	dec    ecx
  4042c9:	xor    DWORD PTR [esi-0x22],edx
  4042cc:	rcr    bl,1
  4042ce:	inc    ebx
  4042cf:	add    DWORD PTR [esi-0x4],ebx
  4042d2:	jg     0x404340
  4042d4:	gs (bad) 
  4042d6:	or     WORD PTR [edi],bx
  4042d9:	xor    BYTE PTR [edi],dh
  4042db:	in     al,dx
  4042dc:	hlt    
  4042dd:	mov    ss,WORD PTR [edx-0x7d8ad98e]
  4042e3:	in     al,dx
  4042e4:	jmp    DWORD PTR [edx+0x286b7c6f]
  4042ea:	jae    0x4042f3
  4042ec:	mov    al,ds:0xc720af64
  4042f1:	aaa    
  4042f2:	rol    BYTE PTR [ecx-0x4a29d259],0x28
  4042f9:	xchg   esi,eax
  4042fa:	aad    0xb3
  4042fc:	push   edx
  4042fd:	jne    0x40429f
  4042ff:	loope  0x40435e
  404301:	jg     0x40429d
  404303:	sti    
  404304:	cmp    al,0xdb
  404306:	lds    esi,FWORD PTR [esi+0x3c123003]
  40430c:	test   eax,0x5276dd94
  404311:	xchg   bl,bh
  404313:	nop
  404314:	inc    edx
  404315:	xchg   dl,al
  404317:	push   esp
  404318:	mov    edi,0xc36920c8
  40431d:	sbb    bl,ah
  40431f:	sahf   
  404320:	inc    edx
  404321:	fcmovnu st,st(6)
  404323:	cwde   
  404324:	mov    eax,ds:0x9eee57a9
  404329:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40432a:	xor    esi,esi
  40432c:	sub    DWORD PTR [ebp-0x21],0xea5ec1f7
  404333:	mov    BYTE PTR [eax-0x6ce58cea],bh
  404339:	pusha  
  40433a:	repnz cmp eax,0xd994a1d7
  404340:	add    bl,BYTE PTR [ecx]
  404342:	lahf   
  404343:	div    DWORD PTR [ecx+0x5e7ab741]
  404349:	dec    eax
  40434a:	jne    0x404333
  40434c:	mov    dh,0x2e
  40434e:	retf   0xf874
  404351:	push   0x67
  404353:	js     0x404364
  404355:	or     al,0xa
  404357:	call   0xcf62:0xa0fbebf7
  40435e:	cmp    ebx,esp
  404360:	add    esi,DWORD PTR [edx+0x1c53f889]
  404366:	push   ss
  404367:	jbe    0x4043c9
  404369:	add    BYTE PTR [ecx-0x16],0xc1
  40436d:	sbb    al,BYTE PTR [ebp+0x6]
  404370:	pop    esi
  404371:	les    esi,FWORD PTR [ebx]
  404373:	push   edx
  404374:	mov    ds:0x6dbe8988,al
  404379:	test   BYTE PTR [edx+edx*4],dl
  40437c:	adc    DWORD PTR [edi-0x4f],edi
  40437f:	push   ebp
  404380:	sahf   
  404381:	and    eax,0x3d473221
  404386:	sti    
  404387:	mov    ds:0x447f943a,al
  40438c:	fld    QWORD PTR [ebp-0x21bf3837]
  404392:	xchg   ecx,eax
  404393:	sub    DWORD PTR [edx],ebp
  404395:	xchg   bh,dh
  404397:	out    dx,al
  404398:	ret    0x8a22
  40439b:	cmc    
  40439c:	addr16 xchg esi,eax
  40439e:	jge    0x4043bf
  4043a0:	call   FWORD PTR [ebp-0x66d0e437]
  4043a6:	xlat   BYTE PTR ds:[ebx]
  4043a7:	mov    ch,0x49
  4043a9:	xor    al,0x6d
  4043ab:	pop    edx
  4043ac:	sbb    ah,dl
  4043ae:	adc    eax,0x9189c8bc
  4043b3:	mov    ecx,0x89389e53
  4043b8:	xchg   DWORD PTR [edx+0x54],eax
  4043bb:	inc    edi
  4043bc:	loopne 0x404403
  4043be:	imul   ecx,DWORD PTR [esi-0x64],0x11df835a
  4043c5:	repz (bad) 
  4043c8:	out    0xaa,eax
  4043ca:	pop    ss
  4043cb:	and    al,0x3e
  4043cd:	inc    ebp
  4043ce:	inc    esp
  4043cf:	cld    
  4043d0:	xchg   edi,eax
  4043d1:	or     BYTE PTR [edx],bh
  4043d3:	and    ah,dh
  4043d5:	fstp   QWORD PTR ds:0x3e4db7c2
  4043db:	push   ebx
  4043dc:	and    DWORD PTR ds:0x153ce320,esi
  4043e2:	mov    ebp,esp
  4043e4:	pop    esi
  4043e5:	ror    BYTE PTR [esp+eiz*4-0x2a06a562],1
  4043ec:	into   
  4043ed:	fst    QWORD PTR [eax-0xe0bd241]
  4043f3:	in     eax,0x99
  4043f5:	sub    BYTE PTR [edi+eax*8-0x24dba15f],0x27
  4043fd:	ret    
  4043fe:	sbb    ebp,DWORD PTR [ecx+0x5f091c37]
  404404:	adc    dl,BYTE PTR [ebx-0x46]
  404407:	inc    ecx
  404408:	sub    edi,DWORD PTR [eax-0x64809a57]
  40440e:	mov    cl,0xa9
  404410:	in     eax,dx
  404411:	(bad)  
  404412:	push   ds
  404413:	fnstenv [ebp-0x59]
  404416:	cmp    al,0xff
  404418:	in     al,dx
  404419:	dec    ebx
  40441a:	pop    ebp
  40441b:	jnp    0x4043d1
  40441d:	pop    es
  40441e:	ins    DWORD PTR es:[edi],dx
  40441f:	push   esp
  404420:	bnd ret 0xc3d7
  404424:	push   edx
  404425:	shr    DWORD PTR [ebx],1
  404427:	arpl   WORD PTR [edx],sp
  404429:	fwait
  40442a:	mov    ebx,0x57989945
  40442f:	int3   
  404430:	cmp    eax,0xec611489
  404435:	cmc    
  404436:	shl    BYTE PTR [edx],1
  404438:	scas   al,BYTE PTR es:[edi]
  404439:	xchg   ebx,eax
  40443a:	cdq    
  40443b:	out    dx,eax
  40443c:	hlt    
  40443d:	repz jbe 0x40444d
  404440:	popa   
  404441:	or     al,0x1a
  404443:	push   cs
  404444:	xchg   esi,eax
  404445:	cld    
  404446:	jns    0x404460
  404448:	mov    esp,0x6c5afd0d
  40444d:	mov    WORD PTR [esi],es
  40444f:	mov    ebx,esi
  404451:	stos   DWORD PTR es:[edi],eax
  404452:	mov    bl,0xd0
  404454:	dec    BYTE PTR [ebx+0x7caf8eef]
  40445a:	pop    edx
  40445b:	pop    edi
  40445c:	jnp    0x4043f1
  40445e:	xor    al,0x5f
  404460:	mov    al,ds:0xb81bfb22
  404465:	lods   al,BYTE PTR ds:[esi]
  404466:	push   0xe8dc4bbc
  40446b:	lock pop ss
  40446d:	push   0x4e
  40446f:	dec    esi
  404470:	int    0xd8
  404472:	mov    dh,0x53
  404474:	fcomp  DWORD PTR [ecx-0x2e12ae]
  40447a:	mov    cl,0xbd
  40447c:	pop    es
  40447d:	imul   edx,ecx,0x9c727ad8
  404483:	fcomp  QWORD PTR [edx+0x4]
  404486:	js     0x404433
  404488:	clc    
  404489:	cmp    ah,BYTE PTR [edi-0x1aa24f6a]
  40448f:	out    0xc7,eax
  404491:	xor    al,0xac
  404493:	push   edx
  404494:	and    esi,DWORD PTR [edx+eax*1-0x7a]
  404498:	adc    bh,BYTE PTR [esi]
  40449a:	fld    QWORD PTR [ebx+esi*8-0x1]
  40449e:	imul   BYTE PTR [esi+ecx*4+0x4dcfee1c]
  4044a5:	push   edx
  4044a6:	(bad)  
  4044a7:	out    dx,eax
  4044a8:	scas   eax,DWORD PTR es:[edi]
  4044a9:	fimul  DWORD PTR [ebp+0x6a]
  4044ac:	frstor [eax]
  4044ae:	aaa    
  4044af:	(bad)  
  4044b0:	pop    ebp
  4044b1:	push   es
  4044b2:	jl     0x4044f5
  4044b4:	arpl   sp,sp
  4044b6:	mov    edx,eax
  4044b8:	leave  
  4044b9:	ret    0x5d74
  4044bc:	je     0x404471
  4044be:	or     eax,0x840b974
  4044c3:	pop    ds
  4044c4:	repnz cdq 
  4044c6:	(bad)  
  4044c7:	loopne 0x404515
  4044c9:	out    dx,al
  4044ca:	lods   al,BYTE PTR ds:[esi]
  4044cb:	jp     0x40453d
  4044cd:	pop    ecx
  4044ce:	fadd   QWORD PTR [edi-0x21a53120]
  4044d4:	fisub  DWORD PTR [ecx+0x1e]
  4044d7:	popf   
  4044d8:	xchg   BYTE PTR [esi-0x3],dl
  4044db:	arpl   WORD PTR [ebp-0x3f],si
  4044de:	mov    cl,0x80
  4044e0:	pop    ebp
  4044e1:	push   ds
  4044e2:	mov    ah,0xd0
  4044e4:	cmc    
  4044e5:	test   eax,0x1217bccb
  4044ea:	xchg   ebp,eax
  4044eb:	cdq    
  4044ec:	int3   
  4044ed:	cmp    eax,ebp
  4044ef:	hlt    
  4044f0:	pop    eax
  4044f1:	into   
  4044f2:	out    dx,eax
  4044f3:	mov    esp,0x2d3cfc2a
  4044f8:	ja     0x4044e4
  4044fa:	daa    
  4044fb:	pop    ebp
  4044fc:	je     0x4044b0
  4044fe:	shl    BYTE PTR [eax-0x31],1
  404501:	and    eax,0x52ea055e
  404506:	lods   eax,DWORD PTR ds:[esi]
  404507:	pop    ebx
  404508:	data16 mov bl,0x64
  40450b:	loope  0x404533
  40450d:	aam    0x52
  40450f:	dec    edi
  404510:	sbb    al,0xc0
  404512:	repz adc dh,0x2c
  404516:	sahf   
  404517:	jle    0x4044ca
  404519:	es and eax,0xf89aa2e5
  40451f:	add    al,0x4f
  404521:	sub    BYTE PTR es:[edi+0x58],al
  404525:	xchg   edi,eax
  404526:	inc    edi
  404527:	inc    ebp
  404528:	adc    esi,DWORD PTR [ebx]
  40452a:	sbb    BYTE PTR [eax+esi*1+0x4133b21c],bh
  404531:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404532:	lods   al,BYTE PTR ds:[esi]
  404533:	xchg   DWORD PTR [edx-0x28],esi
  404536:	pop    ebx
  404537:	jae    0x40454a
  404539:	into   
  40453a:	add    eax,ebp
  40453c:	loopne 0x404581
  40453e:	cmp    ch,bl
  404540:	sub    DWORD PTR [ebp-0x29],eax
  404543:	inc    ebp
  404544:	hlt    
  404545:	xlat   BYTE PTR ds:[ebx]
  404546:	rol    DWORD PTR [edx-0x8],1
  404549:	push   0xf8277c94
  40454e:	cmc    
  40454f:	mov    bl,0x66
  404551:	lods   al,BYTE PTR ds:[esi]
  404552:	iret   
  404553:	xlat   BYTE PTR ds:[ebx]
  404554:	fldcw  WORD PTR [ebx+0x54]
  404557:	retf   
  404558:	xor    DWORD PTR [eax+edi*8+0x1a],ebp
  40455c:	mov    edi,0x609eab53
  404561:	pop    esp
  404562:	cmp    eax,DWORD PTR [edx]
  404564:	and    bh,BYTE PTR [ecx]
  404566:	test   DWORD PTR [edx+ecx*2-0x71fd5ba0],ecx
  40456d:	repz adc bh,BYTE PTR [esi]
  404570:	xchg   ebx,eax
  404571:	imul   eax,esp,0x6f
  404574:	push   ecx
  404575:	mov    eax,ds:0x4721f056
  40457a:	inc    edx
  40457b:	sti    
  40457c:	mov    ebx,0x1704de08
  404581:	jmp    0x3af7:0xdce4e307
  404588:	test   BYTE PTR [ebx],cl
  40458a:	imul   esp,DWORD PTR [ebp+esi*2+0x37],0x11
  40458f:	xor    dh,al
  404591:	lahf   
  404592:	inc    ebp
  404593:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404594:	pop    ebx
  404595:	dec    ebx
  404596:	inc    esi
  404597:	in     al,dx
  404598:	push   esp
  404599:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40459a:	xlat   BYTE PTR ds:[ebx]
  40459b:	call   0xd734:0x314f72fe
  4045a2:	add    eax,0x1c22b47e
  4045a7:	pop    edi
  4045a8:	test   BYTE PTR [eax],bl
  4045aa:	sar    BYTE PTR [ecx-0x75],1
  4045ad:	mov    esi,0x46fb7b58
  4045b2:	or     BYTE PTR [esi+0x3a],bl
  4045b5:	div    DWORD PTR [edx+0x9413549]
  4045bb:	addr16 cmp eax,0xa1d0faea
  4045c1:	xchg   edi,ebx
  4045c3:	enter  0xb6aa,0x68
  4045c7:	adc    esi,edi
  4045c9:	pushf  
  4045ca:	and    BYTE PTR [esi-0x20bc1276],cl
  4045d0:	cli    
  4045d1:	enter  0x3229,0x0
  4045d5:	scas   al,BYTE PTR es:[edi]
  4045d6:	rsm    
  4045d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4045d9:	loopne 0x4045db
  4045db:	pop    esi
  4045dc:	rcl    ch,cl
  4045de:	dec    ebx
  4045df:	in     al,0x54
  4045e1:	mov    bl,0x22
  4045e3:	xlat   BYTE PTR ds:[ebx]
  4045e4:	je     0x404566
  4045e6:	jmp    0x4045af
  4045e8:	jnp    0x404588
  4045ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4045eb:	ja     0x4045ca
  4045ed:	adc    DWORD PTR [ebx-0x32],edx
  4045f0:	jmp    0x40464c
  4045f2:	shr    BYTE PTR [esi-0x41],0x1c
  4045f6:	shl    BYTE PTR [esi+0x4b884b13],cl
  4045fc:	scas   al,BYTE PTR es:[edi]
  4045fd:	(bad)  
  4045fe:	sbb    bl,dh
  404600:	data16 jecxz 0x4045e5
  404603:	mov    al,0x6
  404605:	stos   BYTE PTR es:[edi],al
  404606:	ins    DWORD PTR es:[edi],dx
  404607:	call   0xa7e847c0
  40460c:	ret    
  40460d:	lock cmp dl,BYTE PTR [edi-0x4beb552b]
  404614:	sbb    al,0x8d
  404616:	mov    edi,0x6b18322a
  40461b:	outs   dx,DWORD PTR ds:[esi]
  40461c:	mov    ch,0xf8
  40461e:	dec    edx
  40461f:	mov    bl,0x43
  404621:	ret    0xbb69
  404624:	push   es
  404625:	mov    ecx,0x80ce3137
  40462a:	adc    esp,DWORD PTR [ebx+0x36f8047d]
  404630:	test   BYTE PTR [ebx-0x47c1a9d6],0x28
  404637:	pop    ecx
  404638:	stc    
  404639:	je     0x404646
  40463b:	push   ecx
  40463c:	popf   
  40463d:	fidiv  WORD PTR [ecx]
  40463f:	pop    edx
  404640:	cmp    eax,ecx
  404642:	repz xor al,0x4b
  404645:	add    al,0x43
  404647:	mov    al,ds:0xa9bf5fd9
  40464c:	ds mov ebx,0xbadba5c7
  404652:	cdq    
  404653:	cmp    eax,0xce725b6
  404658:	mov    DWORD PTR [ecx-0xd],edx
  40465b:	stc    
  40465c:	jae    0x404624
  40465e:	mov    ecx,0x75f07f55
  404663:	add    cl,dl
  404665:	jno    0x404632
  404667:	pop    edx
  404668:	push   cs
  404669:	and    edi,DWORD PTR [ebx+0x2d94dfb4]
  40466f:	cli    
  404670:	das    
  404671:	int3   
  404672:	push   edx
  404673:	cmp    al,0x8f
  404675:	xchg   DWORD PTR [edx+0x1d159ddf],eax
  40467b:	fadd   st,st(6)
  40467d:	jbe    0x404621
  40467f:	scas   eax,DWORD PTR es:[edi]
  404680:	fsubrp st(3),st
  404682:	jge    0x404638
  404684:	les    eax,FWORD PTR [ebp+ebx*2-0x496ba68c]
  40468b:	push   ebx
  40468c:	pusha  
  40468d:	cmp    eax,0x54c14d66
  404692:	mov    ebp,0x3b48edaf
  404697:	std    
  404698:	push   edi
  404699:	push   ss
  40469a:	sbb    eax,0x13d308a8
  40469f:	test   al,0x44
  4046a1:	shl    DWORD PTR [edx-0x704a46cc],1
  4046a7:	mov    ds:0x51e03b6,eax
  4046ac:	scas   eax,DWORD PTR es:[edi]
  4046ad:	jl     0x4046b3
  4046af:	mov    ebx,?
  4046b1:	mov    eax,ds:0x61ccfd7d
  4046b6:	xor    esi,DWORD PTR [ecx+0x6f]
  4046b9:	fcom   QWORD PTR [edi]
  4046bb:	mov    ecx,0xe9c80487
  4046c0:	scas   eax,DWORD PTR es:[edi]
  4046c1:	sar    BYTE PTR [edx+edi*8],cl
  4046c4:	push   ds
  4046c5:	pop    ebx
  4046c6:	fs pop eax
  4046c8:	mov    eax,ds:0x4e0ad0d
  4046cd:	or     al,0xe6
  4046cf:	imul   ecx,edx,0x5ae855e4
  4046d5:	mov    ah,0xba
  4046d7:	out    0x20,eax
  4046d9:	mov    esp,0x4acd0906
  4046de:	xlat   BYTE PTR ds:[ebx]
  4046df:	je     0x4046e5
  4046e1:	lahf   
  4046e2:	add    DWORD PTR [edx+edx*2],esi
  4046e5:	iret   
  4046e6:	mov    ds:0x931398f4,al
  4046eb:	and    eax,DWORD PTR [ebp-0x755941]
  4046f1:	mov    cl,0x3b
  4046f3:	nop
  4046f4:	fld    DWORD PTR [ecx-0x5cbc388c]
  4046fa:	sbb    edx,DWORD PTR [edi]
  4046fc:	rcr    DWORD PTR [eax],0x5e
  4046ff:	hlt    
  404700:	in     al,dx
  404701:	jbe    0x4046d3
  404703:	adc    al,BYTE PTR [bx]
  404706:	jmp    0x16d0:0x26c00f75
  40470d:	mov    esp,0xc76f1f58
  404712:	(bad)  
  404713:	in     eax,0xd9
  404715:	sbb    ecx,DWORD PTR es:[eax]
  404718:	xor    BYTE PTR [edx],dh
  40471a:	mov    al,ds:0x59a31f47
  40471f:	in     al,0x2e
  404721:	jbe    0x4046f5
  404723:	add    BYTE PTR [esi],bl
  404725:	dec    ebp
  404726:	test   eax,0x2112eb9
  40472b:	xor    al,0x79
  40472d:	in     eax,0x82
  40472f:	xor    DWORD PTR ds:0x48893551,edi
  404735:	aaa    
  404736:	sti    
  404737:	jns    0x4047a8
  404739:	dec    ebx
  40473a:	adc    DWORD PTR [eax],ebp
  40473c:	rcl    BYTE PTR [esi+0xe],1
  40473f:	pop    esi
  404740:	mov    BYTE PTR [ecx+0x7517db48],ch
  404746:	xor    al,0x57
  404748:	mov    fs,WORD PTR [esi-0x32]
  40474b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40474c:	jne    0x40476a
  40474e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40474f:	dec    esi
  404750:	test   BYTE PTR [ebx-0x1d33ced6],bh
  404756:	push   ebp
  404757:	xchg   ebx,eax
  404758:	push   edi
  404759:	(bad)  
  40475b:	loope  0x404786
  40475d:	dec    eax
  40475e:	mov    WORD PTR [ecx+0xf502cb7],fs
  404764:	std    
  404765:	adc    edi,edx
  404767:	pop    edi
  404768:	les    esp,FWORD PTR [esi]
  40476a:	ret    0x7c4c
  40476d:	mov    al,0x90
  40476f:	mov    ebx,0x4198ce7d
  404774:	je     0x4047ca
  404776:	(bad)  
  404777:	das    
  404778:	mov    esp,0x31dc91cf
  40477d:	xor    edi,DWORD PTR [edx+0xceae097]
  404783:	xchg   edx,eax
  404784:	sbb    al,0x4
  404786:	out    0xaa,eax
  404788:	mov    esp,0xdc0b2463
  40478d:	xor    BYTE PTR [ebx+0x40],dh
  404790:	dec    ebp
  404791:	clc    
  404792:	scas   al,BYTE PTR es:[edi]
  404793:	stos   BYTE PTR es:[edi],al
  404794:	sbb    BYTE PTR [edi+eiz*1],cl
  404797:	mov    esp,0x9f0d0f62
  40479c:	(bad)  
  40479d:	aas    
  40479e:	fwait
  40479f:	daa    
  4047a0:	test   DWORD PTR [esp+ecx*1+0x64b0358e],0x39063af8
  4047ab:	xor    eax,0x49c070f
  4047b0:	jns    0x40475f
  4047b2:	and    cl,ah
  4047b4:	mov    cl,0x7f
  4047b6:	mov    ?,WORD PTR [esi+0x63]
  4047b9:	adc    bl,BYTE PTR [eax+ebx*8-0x41]
  4047bd:	adc    BYTE PTR [ecx-0x53],bl
  4047c0:	mov    dh,0x94
  4047c2:	push   esp
  4047c3:	les    eax,FWORD PTR [edx]
  4047c5:	js     0x4047ea
  4047c7:	mul    BYTE PTR [ebp+0x2a]
  4047ca:	xchg   edi,eax
  4047cb:	xchg   edi,eax
  4047cc:	pop    ss
  4047cd:	mov    dl,0xfb
  4047cf:	jne    0x4047d8
  4047d1:	enter  0x7ed,0x1e
  4047d5:	pop    ecx
  4047d6:	loop   0x404804
  4047d8:	ins    BYTE PTR es:[edi],dx
  4047d9:	fdiv   DWORD PTR [edi+0x2e]
  4047dc:	ret    
  4047dd:	rol    esp,0xa
  4047e0:	addr16 gs inc edi
  4047e3:	je     0x404788
  4047e5:	sbb    eax,0x9a02a3f8
  4047ea:	dec    esi
  4047eb:	push   cs
  4047ec:	inc    edi
  4047ed:	jmp    0xd144:0x1c328b27
  4047f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4047f5:	mov    cl,0x41
  4047f7:	cmp    bh,BYTE PTR [ebx]
  4047f9:	mov    fs,edx
  4047fb:	out    dx,eax
  4047fc:	scas   eax,DWORD PTR es:[edi]
  4047fd:	cmp    DWORD PTR [ebp+ecx*4-0x10],esi
  404801:	fild   QWORD PTR ds:0x5c78c32d
  404807:	jp     0x40486f
  404809:	inc    ecx
  40480a:	jns    0x4047e9
  40480c:	mov    WORD PTR [ebp+0x4b68fc19],ds
  404812:	scas   eax,DWORD PTR es:[edi]
  404813:	or     eax,0xdc4b0d2b
  404818:	push   ds
  404819:	je     0x4047a4
  40481b:	cmp    dh,BYTE PTR [esi+0x37]
  40481e:	add    esi,DWORD PTR [ecx]
  404820:	or     eax,0xa5734f34
  404825:	fnstsw WORD PTR [edx]
  404827:	lahf   
  404828:	add    edi,DWORD PTR [ecx]
  40482a:	xchg   esp,eax
  40482b:	rcr    DWORD PTR [ebx+0x58],1
  40482e:	lods   al,BYTE PTR ds:[esi]
  40482f:	test   eax,0xb1a6e038
  404834:	jge    0x4047b9
  404836:	rol    BYTE PTR [eax+edi*1+0x54],0x23
  40483b:	mov    bl,BYTE PTR [edx+0x24]
  40483e:	in     al,dx
  40483f:	push   ebp
  404840:	loop   0x404845
  404842:	or     DWORD PTR [ebp+ebp*8-0x7ac1ae0d],ebp
  404849:	add    DWORD PTR [esi],edx
  40484b:	add    eax,0x2fa4a3ca
  404850:	sub    BYTE PTR [edi+0x2e],dl
  404853:	mov    ds:0x1b5dd2d4,eax
  404858:	es adc eax,0x689dde38
  40485e:	in     eax,0xbe
  404860:	into   
  404861:	pop    esp
  404862:	push   es
  404863:	sbb    dl,BYTE PTR [eax+0x134f236f]
  404869:	rcr    bl,cl
  40486b:	xor    edx,DWORD PTR [edx-0x2da403e1]
  404871:	adc    BYTE PTR [ecx-0x62],al
  404874:	xor    al,0x90
  404876:	pop    esp
  404877:	xor    DWORD PTR [ecx-0x11c7da78],esp
  40487d:	sub    al,0x99
  40487f:	loope  0x4048cf
  404881:	pop    ecx
  404882:	pop    ds
  404883:	cmp    bh,bh
  404885:	add    DWORD PTR [eax+edx*4-0x66],esp
  404889:	(bad)  
  40488a:	lds    ebp,FWORD PTR [esi+0x47]
  40488d:	mov    ebp,0xcb8501cc
  404892:	jl     0x4048d6
  404894:	inc    ebx
  404895:	jae    0x404892
  404897:	popf   
  404898:	add    ah,bh
  40489a:	fist   WORD PTR [eax+0x3f]
  40489d:	mov    ebp,0x789db44f
  4048a2:	jge    0x404918
  4048a4:	inc    ecx
  4048a5:	fs xor eax,0x872f43b1
  4048ab:	jp     0x40492c
  4048ad:	mov    ebp,0x43459078
  4048b2:	outs   dx,DWORD PTR ds:[esi]
  4048b3:	push   eax
  4048b4:	dec    ebx
  4048b5:	mov    edx,0xad123425
  4048ba:	pop    es
  4048bb:	mov    ch,0x71
  4048bd:	mov    ?,WORD PTR gs:[esi-0x7a]
  4048c1:	out    0xca,al
  4048c3:	call   0xe6ec:0x47da6f43
  4048ca:	jnp    0x4048fa
  4048cc:	dec    eax
  4048cd:	cmp    edi,DWORD PTR [eax+0x20]
  4048d0:	mov    ah,0xde
  4048d2:	sti    
  4048d3:	int    0xc1
  4048d5:	xlat   BYTE PTR ds:[ebx]
  4048d6:	push   ss
  4048d7:	rcr    ecx,0x4
  4048da:	es and al,0xa0
  4048dd:	jne    0x404896
  4048df:	sub    eax,0xacdd4a82
  4048e4:	imul   esp,DWORD PTR [eax-0x6a],0x98f9ce7f
  4048eb:	jno    0x4048f8
  4048ed:	push   cs
  4048ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4048ef:	mov    ebp,0xc909c1c0
  4048f4:	cmp    eax,DWORD PTR [eax-0x1dcba96b]
  4048fa:	sbb    edi,edi
  4048fc:	mov    BYTE PTR [esp+eax*8-0x3e00abab],bl
  404903:	call   0xffd6:0xdc87f06e
  40490a:	out    dx,al
  40490b:	outs   dx,DWORD PTR ds:[esi]
  40490c:	stc    
  40490d:	dec    ecx
  40490e:	add    DWORD PTR ss:[ecx],ebp
  404911:	sbb    al,0x7b
  404913:	in     eax,dx
  404914:	jnp    0x404910
  404916:	aas    
  404917:	push   edx
  404918:	push   0xf1ce341e
  40491d:	xchg   esi,eax
  40491e:	rcr    BYTE PTR [edi],0x58
  404921:	push   ss
  404922:	xor    al,0x13
  404924:	ja     0x404969
  404926:	fwait
  404927:	inc    edi
  404928:	jmp    0x226b4582
  40492d:	cli    
  40492e:	and    bl,dl
  404930:	std    
  404931:	cmp    BYTE PTR [esi-0x73d06b63],ch
  404937:	ss stos BYTE PTR es:[edi],al
  404939:	and    al,0x6d
  40493b:	test   ch,0xdb
  40493e:	shr    BYTE PTR [ebp+0x1c],1
  404941:	pop    esp
  404942:	adc    al,0x87
  404944:	mov    WORD PTR [edi],ss
  404946:	call   0xe9cf:0x9a8369b7
  40494d:	lods   eax,DWORD PTR ds:[esi]
  40494e:	jp     0x4049b0
  404950:	sbb    BYTE PTR [ebp-0x15],0xf5
  404954:	mov    ds:0xe157fb08,al
  404959:	jns    0x40492f
  40495b:	loop   0x404983
  40495d:	test   dh,dh
  40495f:	or     DWORD PTR [ebp-0x5663225e],0xffffff95
  404966:	add    ebx,DWORD PTR [esi]
  404968:	dec    esp
  40496a:	sbb    DWORD PTR [edi+0x11],edi
  40496d:	enter  0x188b,0x5e
  404971:	ss out 0xff,al
  404974:	push   0xe886ed51
  404979:	mov    bh,BYTE PTR [eax*2+0x2fe3adcd]
  404980:	adc    BYTE PTR [ecx-0x629b1eb8],ah
  404986:	pop    ds
  404987:	daa    
  404988:	mov    ch,al
  40498a:	xchg   esi,eax
  40498b:	loopne 0x4049d0
  40498d:	adc    cl,ah
  40498f:	popa   
  404990:	jge    0x40491e
  404992:	fisubr WORD PTR [esi]
  404994:	inc    eax
  404995:	mov    esp,0xdc3f058
  40499a:	push   ss
  40499b:	cwde   
  40499c:	(bad)  
  40499d:	ret    
  40499e:	ins    DWORD PTR es:[edi],dx
  40499f:	mov    ah,0xcb
  4049a1:	ret    
  4049a2:	jns    0x404944
  4049a4:	push   0xffffffec
  4049a6:	out    dx,al
  4049a7:	jmp    0x40492f
  4049a9:	scas   eax,DWORD PTR es:[edi]
  4049aa:	and    bl,BYTE PTR [edi]
  4049ac:	mov    ebx,0xdc47e102
  4049b1:	int3   
  4049b2:	ja     0x4049e0
  4049b4:	push   ds
  4049b5:	lods   al,BYTE PTR ds:[esi]
  4049b6:	or     eax,0x56d2dbd1
  4049bb:	xchg   edi,eax
  4049bc:	mov    ebp,0xcd9a48d1
  4049c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4049c2:	xlat   BYTE PTR ds:[ebx]
  4049c3:	cmp    eax,0xc09424ae
  4049c8:	ins    BYTE PTR es:[edi],dx
  4049c9:	jns    0x4049d4
  4049cb:	push   DWORD PTR [esp+esi*8-0x279a9c74]
  4049d2:	lea    ebx,[eax*4+0x3feeddbc]
  4049d9:	stos   DWORD PTR es:[edi],eax
  4049da:	and    ch,BYTE PTR [ecx-0x75]
  4049dd:	in     al,dx
  4049de:	std    
  4049df:	retf   
  4049e0:	xrelease mov BYTE PTR ss:[ebx+0x60eb9f5d],al
  4049e8:	dec    esp
  4049e9:	cld    
  4049ea:	outs   dx,BYTE PTR ds:[esi]
  4049eb:	in     eax,0x8e
  4049ed:	sbb    DWORD PTR [esi-0x9],esp
  4049f0:	in     eax,dx
  4049f1:	imul   ebp,DWORD PTR [edx-0x2879cce3],0xffffff8c
  4049f8:	xchg   ebp,eax
  4049f9:	add    eax,0x6534f6ab
  4049fe:	inc    ebp
  4049ff:	mov    esi,0x7eb7ce68
  404a04:	aam    0xaa
  404a06:	pop    esi
  404a07:	repz fnstsw WORD PTR [ecx+0x54a504a6]
  404a0e:	ret    
  404a0f:	pop    ss
  404a10:	scas   al,BYTE PTR es:[edi]
  404a11:	mov    esi,0xb38159fb
  404a16:	xchg   edi,eax
  404a17:	fsub   QWORD PTR ss:[edx]
  404a1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a1b:	xor    BYTE PTR [ecx],0xd7
  404a1e:	js     0x404a56
  404a20:	and    al,0x89
  404a22:	xlat   BYTE PTR ds:[ebx]
  404a23:	pusha  
  404a24:	mov    ebp,edx
  404a26:	leave  
  404a27:	ja     0x4049f3
  404a29:	(bad)  
  404a2a:	enter  0xe31e,0x3d
  404a2e:	(bad)  
  404a2f:	mul    BYTE PTR [ebp+0xa2775b1]
  404a35:	bound  edx,QWORD PTR [ebp+0xf0aa48c]
  404a3b:	inc    edx
  404a3c:	(bad)
  404a41:	sub    eax,0x859f0f57
  404a46:	or     ecx,esp
  404a48:	sbb    ch,bl
  404a4a:	lods   al,BYTE PTR ds:[esi]
  404a4b:	retf   
  404a4c:	mov    bh,BYTE PTR [eax]
  404a4e:	mov    al,ds:0xa209a565
  404a53:	sub    edx,DWORD PTR [ecx+edi*8-0x3f]
  404a57:	jmp    0xd8f41537
  404a5c:	mov    eax,0x68a975a3
  404a61:	add    edx,DWORD PTR [esi+0x1875c575]
  404a67:	rcl    ah,1
  404a69:	sti    
  404a6a:	test   eax,0xf60b9f0a
  404a6f:	lea    ebx,[ecx+0x92985f1]
  404a75:	fs mov dh,0xe0
  404a78:	sbb    al,0xe9
  404a7a:	push   ecx
  404a7b:	popf   
  404a7c:	cmp    al,0xf2
  404a7e:	rcl    BYTE PTR [ebx+0xf],1
  404a81:	jp     0x404a6e
  404a83:	and    ah,cl
  404a85:	je     0x404a63
  404a87:	jb     0x404ad4
  404a89:	jl     0x404afa
  404a8b:	mov    esp,0xa2a215c0
  404a90:	push   cs
  404a91:	ret    
  404a92:	add    DWORD PTR [esi+eiz*8+0x16],ecx
  404a96:	sbb    al,0x85
  404a98:	test   eax,0x5765c26a
  404a9d:	repz fild WORD PTR [edx]
  404aa0:	test   BYTE PTR [ecx-0x40],0xd1
  404aa4:	(bad)  
  404aa5:	xor    DWORD PTR [ebx],edi
  404aa7:	call   0x5183:0xaa89c48c
  404aae:	test   al,0x4d
  404ab0:	xor    ebp,DWORD PTR [edx-0x37c1d593]
  404ab6:	or     al,0xc3
  404ab8:	fild   DWORD PTR [edx+0x6bf7bb98]
  404abe:	pop    ecx
  404abf:	pop    eax
  404ac0:	push   es
  404ac1:	dec    edi
  404ac2:	inc    esp
  404ac3:	or     ch,BYTE PTR [edi]
  404ac5:	aad    0x59
  404ac7:	fbld   TBYTE PTR [eax]
  404ac9:	std    
  404aca:	mov    ds:0x78b3eaba,al
  404acf:	jb     0x404ae7
  404ad1:	call   0xbfe79622
  404ad6:	mov    cl,0x11
  404ad8:	scas   al,BYTE PTR es:[edi]
  404ad9:	ss push ds
  404adb:	push   edx
  404adc:	in     eax,0xd8
  404ade:	mov    bh,0xf0
  404ae0:	adc    eax,0xb1f52eba
  404ae5:	jecxz  0x404b02
  404ae7:	or     DWORD PTR [ebx+0x5444ec62],esp
  404aed:	mov    esp,0x311cbef3
  404af2:	cdq    
  404af3:	jns    0x404b1d
  404af5:	xor    al,0x34
  404af7:	dec    ebp
  404af8:	aad    0x41
  404afa:	out    dx,al
  404afb:	std    
  404afc:	aad    0xba
  404afe:	inc    edx
  404aff:	or     al,0x9b
  404b01:	dec    ebx
  404b02:	ret    0xbd50
  404b05:	mov    eax,ds:0x63bade7a
  404b0a:	xor    ah,BYTE PTR [edi+0x6f]
  404b0d:	(bad)  
  404b0f:	push   es
  404b10:	pop    esp
  404b11:	mov    ebx,0x83b1bd8e
  404b16:	mov    ecx,0xf7b54771
  404b1b:	daa    
  404b1c:	test   eax,0x9fdef56f
  404b21:	xchg   DWORD PTR [ecx-0x15],edx
  404b24:	jns    0x404afb
  404b26:	jg     0x404b6f
  404b28:	int3   
  404b29:	idiv   BYTE PTR [ebx+0x1]
  404b2c:	cmp    BYTE PTR [esi],al
  404b2e:	push   es
  404b2f:	dec    eax
  404b30:	xchg   edi,eax
  404b31:	test   eax,0xe98ef930
  404b36:	out    dx,eax
  404b37:	and    BYTE PTR [eax+0x634ca178],ah
  404b3d:	rol    BYTE PTR [eax-0x2d],1
  404b40:	loopne 0x404b15
  404b42:	inc    eax
  404b43:	xchg   ebx,eax
  404b44:	sbb    eax,DWORD PTR [ebx+ebx*4]
  404b47:	enter  0x4015,0x53
  404b4b:	out    dx,eax
  404b4c:	outs   dx,BYTE PTR ds:[esi]
  404b4d:	repnz fisttp QWORD PTR fs:0xbc5c8d5f
  404b55:	(bad)  
  404b56:	and    al,0x17
  404b58:	xchg   ecx,eax
  404b59:	mov    cl,0x1a
  404b5b:	(bad)
  404b5f:	xchg   ecx,eax
  404b60:	mov    BYTE PTR [esp+ebx*1],dl
  404b63:	out    0xf4,eax
  404b65:	cmp    ch,bh
  404b67:	(bad)  
  404b68:	jmp    0x7165d3b6
  404b6d:	mov    esi,0x2f64d919
  404b72:	adc    bl,bh
  404b74:	sub    dh,dh
  404b76:	out    dx,al
  404b77:	mov    ch,0x8
  404b79:	shl    edx,1
  404b7b:	push   cs
  404b7c:	std    
  404b7d:	xchg   ebp,eax
  404b7e:	inc    DWORD PTR [edx-0x29]
  404b81:	(bad)  
  404b82:	out    0x11,al
  404b84:	repz dec edx
  404b86:	retf   0xc87
  404b89:	xchg   ebp,eax
  404b8a:	adc    edx,DWORD PTR [edx-0x11]
  404b8d:	jo     0x404bf1
  404b8f:	iret   
  404b90:	mov    DWORD PTR [edx],esi
  404b92:	fdivp  st(2),st
  404b94:	jbe    0x404c11
  404b96:	out    0x39,eax
  404b98:	jl     0x404ba3
  404b9a:	mov    ebp,DWORD PTR [edx-0x4b9873da]
  404ba0:	fidiv  DWORD PTR [bx-0x62]
  404ba4:	cpuid  
  404ba6:	xchg   ebx,eax
  404ba7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ba8:	or     al,0x4e
  404baa:	jle    0x404b9f
  404bac:	jg     0x404ba8
  404bae:	(bad)  
  404bb0:	inc    ecx
  404bb1:	dec    ebx
  404bb2:	inc    eax
  404bb3:	push   ebp
  404bb4:	pop    ebx
  404bb5:	shl    dh,cl
  404bb7:	popf   
  404bb8:	test   al,0xd9
  404bba:	test   DWORD PTR [ebp+0x17],edi
  404bbd:	popf   
  404bbe:	adc    BYTE PTR [eax-0x48],cl
  404bc1:	cmp    bl,BYTE PTR [ecx]
  404bc3:	test   BYTE PTR [ecx-0x2047d471],0x50
  404bca:	dec    edi
  404bcb:	cmp    bh,BYTE PTR [ebp+0xf]
  404bce:	cld    
  404bcf:	pushf  
  404bd0:	(bad)  
  404bd1:	enter  0xbd0b,0x43
  404bd5:	sbb    eax,0xfa39f276
  404bda:	push   edi
  404bdb:	in     al,dx
  404bdc:	jbe    0x404b79
  404bde:	stos   DWORD PTR es:[edi],eax
  404bdf:	jno    0x404bd2
  404be1:	scas   al,BYTE PTR es:[edi]
  404be2:	mov    dl,0xc5
  404be4:	mov    al,ds:0x6249cabc
  404be9:	jmp    0x404bc5
  404beb:	inc    eax
  404bec:	ja     0x404b74
  404bee:	sub    BYTE PTR [ecx+0x337dc1e7],ch
  404bf4:	ja     0x404ba7
  404bf6:	jb     0x404b81
  404bf8:	mov    WORD PTR [esi-0x1d],?
  404bfb:	mov    esi,0x518a4a8d
  404c00:	sbb    esp,ebx
  404c02:	je     0x404c5f
  404c04:	cmp    al,BYTE PTR ds:0x7cb9335
  404c0a:	ins    BYTE PTR es:[edi],dx
  404c0b:	mov    edi,0x363ab5e0
  404c10:	stc    
  404c11:	push   ebp
  404c12:	js     0x404bc0
  404c14:	mov    ?,esp
  404c16:	push   ecx
  404c17:	jb     0x404c31
  404c19:	sbb    DWORD PTR [ebp-0x6239e940],ebx
  404c1f:	jnp    0x404bfc
  404c21:	iret   
  404c22:	push   esp
  404c23:	jle    0x404bec
  404c25:	xor    ebx,0x29
  404c28:	lods   al,BYTE PTR ds:[esi]
  404c29:	and    eax,0xf40ec3ba
  404c2e:	fs loopne 0x404caf
  404c31:	xor    esi,DWORD PTR [ecx-0x6e]
  404c34:	(bad)  
  404c35:	lods   al,BYTE PTR ds:[esi]
  404c36:	sbb    eax,0xc4907c11
  404c3b:	adc    cl,BYTE PTR [edi+0x59]
  404c3e:	push   0xa9682b
  404c43:	fild   DWORD PTR es:[edx+0x47]
  404c47:	pop    ss
  404c48:	divps  xmm6,XMMWORD PTR [edi-0xdc57a79]
  404c4f:	hlt    
  404c50:	mov    al,0xb7
  404c52:	push   ds
  404c53:	add    al,0x21
  404c55:	sub    DWORD PTR [edi+0x56b1f750],eax
  404c5b:	push   esi
  404c5c:	or     ch,BYTE PTR [edi-0x1cef8afa]
  404c62:	cmp    DWORD PTR [edi+0x1c],edi
  404c65:	outs   dx,BYTE PTR ds:[esi]
  404c66:	test   BYTE PTR [edi+0x70],bl
  404c69:	je     0x404c19
  404c6b:	sbb    DWORD PTR [ecx-0x59],ebp
  404c6e:	xor    eax,0x21fabfbf
  404c73:	pop    ds
  404c74:	fisub  DWORD PTR [esi-0x599bae2f]
  404c7a:	mov    cl,0xee
  404c7c:	stos   BYTE PTR es:[edi],al
  404c7d:	out    dx,eax
  404c7e:	sar    BYTE PTR [esi],0x3c
  404c81:	push   ss
  404c82:	shl    BYTE PTR [ecx+0x10],cl
  404c85:	and    ecx,DWORD PTR [ecx-0x236b5414]
  404c8b:	mov    eax,0xb7e2d752
  404c90:	jmp    0x404d10
  404c92:	push   DWORD PTR [esi+eax*8]
  404c95:	sub    ah,al
  404c97:	pop    esi
  404c98:	sub    al,0x41
  404c9a:	xor    ebp,0xa6575ba5
  404ca0:	jbe    0x404cd2
  404ca2:	cdq    
  404ca3:	shl    eax,cl
  404ca5:	mov    ds:0xc4a8bd2,eax
  404caa:	lar    edi,WORD PTR [esi]
  404cad:	or     ebx,0x2cd7b221
  404cb3:	dec    eax
  404cb4:	in     al,0x98
  404cb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404cb7:	arpl   WORD PTR [esi-0x6db59507],di
  404cbd:	xor    DWORD PTR [esi+0x4f288be9],ebp
  404cc3:	pop    esp
  404cc4:	icebp  
  404cc5:	jge    0x404cc9
  404cc7:	push   ss
  404cc8:	cld    
  404cc9:	fnstenv ds:0xd01e3987
  404ccf:	adc    eax,0x33bac819
  404cd4:	jmp    0x42f5:0x265c5e97
  404cdb:	cmp    ebp,edx
  404cdd:	adc    eax,0x1705f60
  404ce2:	push   cs
  404ce3:	lds    esp,FWORD PTR [esi-0x319857d8]
  404ce9:	aam    0x2f
  404ceb:	mov    eax,ds:0xbb3ba2eb
  404cf0:	cmp    BYTE PTR [esi+0x33e1cd7b],0x93
  404cf7:	test   DWORD PTR [eax],eax
  404cf9:	jb     0x404c97
  404cfb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404cfc:	js     0x404cfd
  404cfe:	(bad)
  404d02:	test   esi,0x4ed321c3
  404d08:	clc    
  404d09:	mov    edx,0x36649ee6
  404d0e:	mov    ds:0xd3bb11ab,al
  404d13:	inc    esp
  404d14:	cld    
  404d15:	sar    DWORD PTR [edi+0x23e8d893],1
  404d1b:	mov    cl,0x50
  404d1d:	fwait
  404d1e:	pop    ecx
  404d1f:	rcr    ecx,cl
  404d21:	mov    ds:0x17cadf14,al
  404d26:	xor    al,0x9
  404d28:	jmp    0x404d45
  404d2a:	push   0xe09ad000
  404d2f:	push   ebp
  404d30:	ins    DWORD PTR es:[edi],dx
  404d31:	pop    esp
  404d32:	das    
  404d33:	and    al,0x8d
  404d35:	retf   0x19f9
  404d38:	je     0x404d98
  404d3a:	loope  0x404d97
  404d3c:	retf   0x1aca
  404d3f:	dec    edx
  404d40:	xchg   esp,eax
  404d41:	cs stos DWORD PTR es:[edi],eax
  404d43:	sbb    bh,BYTE PTR [edx]
  404d45:	adc    al,0x39
  404d47:	pop    esi
  404d48:	bound  edi,QWORD PTR [ecx]
  404d4a:	lahf   
  404d4b:	xor    eax,DWORD PTR [ecx+0x48]
  404d4e:	mov    cl,0xfa
  404d50:	in     eax,0x14
  404d52:	or     DWORD PTR [edi-0x44f96f40],0xffffffaa
  404d59:	ins    DWORD PTR es:[edi],dx
  404d5a:	test   dh,0xe6
  404d5d:	enter  0xf061,0x53
  404d61:	inc    ebp
  404d62:	push   esp
  404d63:	adc    ch,BYTE PTR [edi-0x5e081c72]
  404d69:	jle    0x404d82
  404d6b:	mov    dl,BYTE PTR [ebx]
  404d6d:	pusha  
  404d6e:	adc    al,0xeb
  404d70:	retf   0x7f8b
  404d73:	je     0x404d8f
  404d75:	nop
  404d76:	rcl    BYTE PTR [ecx-0x77],0xad
  404d7a:	sub    eax,0x1d3809b8
  404d7f:	cld    
  404d80:	stc    
  404d81:	pop    ecx
  404d82:	outs   dx,BYTE PTR ds:[esi]
  404d83:	cli    
  404d84:	shl    DWORD PTR [esi-0x5c],1
  404d87:	or     dh,bl
  404d89:	push   eax
  404d8a:	sti    
  404d8b:	pop    edi
  404d8c:	push   ds
  404d8d:	adc    al,0x49
  404d8f:	mov    edi,0xefca7ec7
  404d94:	and    BYTE PTR [edi+0x61d48d19],ah
  404d9a:	inc    esp
  404d9b:	mov    eax,0x24437be4
  404da0:	push   cs
  404da1:	out    dx,al
  404da2:	cmp    DWORD PTR [ecx+edi*4],0xaacf08b7
  404da9:	fsubr  DWORD PTR [esi]
  404dab:	pop    eax
  404dac:	and    eax,0x14c3943
  404db1:	pop    edx
  404db2:	or     ebp,DWORD PTR [eax]
  404db4:	cmp    eax,0x75a7d075
  404db9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404dba:	(bad)  
  404dbb:	sub    DWORD PTR cs:[esi-0x3236b317],ecx
  404dc2:	dec    edx
  404dc3:	mov    cl,0x7e
  404dc5:	das    
  404dc6:	dec    ebx
  404dc7:	leave  
  404dc8:	cmp    DWORD PTR [eax+0x6e910a59],eax
  404dce:	push   ecx
  404dcf:	repnz pop ebp
  404dd1:	repz dec ebp
  404dd3:	or     bh,0x1f
  404dd6:	jne    0x404da4
  404dd8:	mov    al,ds:0x5e2107a0
  404ddd:	push   esi
  404dde:	mov    dl,0x5f
  404de0:	and    eax,0x9312001
  404de5:	push   edx
  404de6:	inc    esi
  404de7:	add    al,0x5a
  404de9:	and    al,BYTE PTR [ebp-0x4]
  404dec:	adc    al,0x3
  404dee:	sub    al,0xe9
  404df0:	push   0xffffffb6
  404df2:	rol    BYTE PTR cs:[edx-0x37],cl
  404df6:	into   
  404df7:	mov    bh,0x23
  404df9:	(bad)  
  404dfa:	cmp    al,0x1b
  404dfc:	sbb    DWORD PTR [ecx-0x7492f556],edx
  404e02:	jge    0x404e53
  404e04:	fwait
  404e05:	jg     0x404e41
  404e07:	or     DWORD PTR ds:0x2dbdc139,0x4e6666b5
  404e11:	icebp  
  404e12:	jmp    0x6752:0x9ae31a2a
  404e19:	cmp    BYTE PTR [ebx+0x31f00191],cl
  404e1f:	ss mov esp,0x10ca2366
  404e25:	pop    ecx
  404e26:	xor    BYTE PTR [edx-0x519f598],dl
  404e2c:	icebp  
  404e2d:	cdq    
  404e2e:	ins    BYTE PTR es:[edi],dx
  404e2f:	jno    0x404dc7
  404e31:	outs   dx,DWORD PTR ds:[esi]
  404e32:	das    
  404e33:	pop    ss
  404e34:	sbb    dh,BYTE PTR [ebx+0x1a5c109e]
  404e3a:	mov    cl,BYTE PTR [ecx]
  404e3c:	push   esp
  404e3d:	loop   0x404e0a
  404e3f:	nop
  404e40:	lds    ecx,FWORD PTR [eax]
  404e42:	fild   QWORD PTR [edi-0x681a7ef0]
  404e48:	jp     0x404e64
  404e4a:	mov    ah,0x44
  404e4c:	test   al,0x80
  404e4e:	aaa    
  404e4f:	sbb    BYTE PTR [edi+eax*1-0x57],bh
  404e53:	inc    ecx
  404e54:	sbb    edi,DWORD PTR [edx+0x18]
  404e57:	xchg   edi,eax
  404e58:	xor    ebp,esi
  404e5a:	dec    edx
  404e5b:	rol    BYTE PTR [ebp-0x19],1
  404e5e:	dec    esp
  404e5f:	and    esi,ebp
  404e61:	jae    0x404e10
  404e63:	test   BYTE PTR [ecx-0x5],al
  404e66:	aaa    
  404e67:	jl     0x404e3c
  404e69:	lods   eax,DWORD PTR ds:[esi]
  404e6a:	add    eax,0x2e45e165
  404e6f:	jo     0x404e9f
  404e71:	xchg   edi,eax
  404e72:	stos   BYTE PTR es:[edi],al
  404e73:	cwde   
  404e74:	sti    
  404e75:	fsubr  QWORD PTR [esi]
  404e77:	pushf  
  404e78:	mov    eax,0x956deaf5
  404e7d:	jmp    0x404eac
  404e7f:	das    
  404e80:	inc    esp
  404e81:	mov    eax,0x1649f3d8
  404e86:	pop    esp
  404e87:	or     DWORD PTR [ebx],ebx
  404e89:	pop    edx
  404e8a:	xchg   edi,eax
  404e8b:	mov    bh,0xce
  404e8d:	and    eax,0x3f1541c9
  404e92:	cmp    edi,edx
  404e94:	loopne 0x404e2a
  404e96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e97:	leave  
  404e98:	sub    eax,0x7fa931b2
  404e9d:	or     DWORD PTR [ebp-0x65],esi
  404ea0:	aaa    
  404ea1:	dec    ecx
  404ea2:	lahf   
  404ea3:	jecxz  0x404ec2
  404ea5:	pop    es
  404ea6:	jg     0x404e7a
  404ea8:	retfw  
  404eaa:	adc    eax,0x824a7a1d
  404eaf:	fsubr  st,st(0)
  404eb1:	imul   ebp,DWORD PTR [edi+ecx*8+0x46bd5adb],0x56
  404eb9:	les    edx,FWORD PTR [ebx+0x4eac6ce3]
  404ebf:	pop    eax
  404ec0:	(bad)  
  404ec1:	mov    ds:0xeffeef57,al
  404ec6:	and    DWORD PTR [edx-0x11],ebx
  404ec9:	cmc    
  404eca:	je     0x404f04
  404ecc:	jo     0x404f41
  404ece:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ecf:	adc    BYTE PTR [ecx],ah
  404ed1:	call   0xc54d6402
  404ed6:	fcom   DWORD PTR [ebx+ebx*4]
  404ed9:	sub    eax,0x686a445d
  404ede:	adc    cl,BYTE PTR [edx]
  404ee0:	jns    0x404f10
  404ee2:	bswap  esp
  404ee4:	sbb    eax,0x97a78575
  404ee9:	js     0x404f23
  404eeb:	cwde   
  404eec:	push   esi
  404eed:	xchg   DWORD PTR [esi],eax
  404eef:	into   
  404ef0:	push   esp
  404ef1:	add    dh,cl
  404ef3:	lods   eax,DWORD PTR ds:[esi]
  404ef4:	out    dx,al
  404ef5:	push   ebx
  404ef6:	int3   
  404ef7:	loope  0x404f05
  404ef9:	sbb    esi,ebx
  404efb:	push   esp
  404efc:	inc    esp
  404efd:	sahf   
  404efe:	test   al,0x6e
  404f00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f01:	mov    ebp,DWORD PTR [edi-0x5bd018a9]
  404f07:	pop    edi
  404f08:	mov    edx,DWORD PTR [ebp+0xd88462f]
  404f0e:	adc    ah,dl
  404f10:	push   ds
  404f11:	pop    ss
  404f12:	and    BYTE PTR [esi+0x3e],0x8e
  404f16:	sbb    DWORD PTR [esi+ebp*8-0x39],ebx
  404f1a:	popf   
  404f1b:	ret    0x7fc1
  404f1e:	outs   dx,BYTE PTR ds:[esi]
  404f1f:	bound  ebp,QWORD PTR [edx+0x5e9e321c]
  404f25:	mov    eax,eax
  404f27:	sub    al,0x8d
  404f29:	mov    dh,0xf2
  404f2b:	(bad)  
  404f2c:	jmp    0x65084ff9
  404f31:	enter  0xf8c0,0x86
  404f35:	jp     0x404fb2
  404f37:	lea    ebp,[eax]
  404f39:	ret    0xc
  404f3c:	cwde   
  404f3d:	nop
  404f3e:	adc    DWORD PTR [ebp+esi*8-0x31],0x7994d2d0
  404f46:	repnz (bad)
  404f49:	test   BYTE PTR [edi],dh
  404f4b:	out    dx,eax
  404f4c:	add    dl,BYTE PTR [edi]
  404f4e:	jne    0x404faa
  404f50:	mov    cl,BYTE PTR [esi-0x5ed6fd78]
  404f56:	scas   eax,DWORD PTR es:[edi]
  404f57:	test   DWORD PTR [edx],edi
  404f59:	xlat   BYTE PTR ds:[ebx]
  404f5a:	lock jmp 0x328e5448
  404f60:	mov    ss,ecx
  404f62:	out    0x73,al
  404f64:	cmp    edi,ebp
  404f66:	lahf   
  404f67:	lods   eax,DWORD PTR ds:[esi]
  404f68:	fild   DWORD PTR [esi]
  404f6a:	push   cs
  404f6b:	bound  edi,QWORD PTR [eax+0x48]
  404f6e:	mov    edx,0x610ecafe
  404f73:	cwde   
  404f74:	mov    al,ds:0x5aee4e9b
  404f79:	aam    0x8f
  404f7b:	mov    eax,DWORD PTR [ebx+0x61]
  404f7e:	cdq    
  404f7f:	sub    BYTE PTR [esi-0x224e63fe],ch
  404f85:	jnp    0x404fc2
  404f87:	out    0x8c,al
  404f89:	das    
  404f8a:	sub    BYTE PTR [ebx+0x587f8f58],bh
  404f90:	ficom  WORD PTR [ebp+0x5f]
  404f93:	retf   0x6386
  404f96:	sbb    eax,0x40d26672
  404f9b:	fwait
  404f9c:	pop    esp
  404f9d:	out    dx,eax
  404f9e:	mov    edi,DWORD PTR [edx]
  404fa0:	adc    ecx,DWORD PTR [edi+0x2c]
  404fa3:	jae    0x40501c
  404fa5:	stos   BYTE PTR es:[edi],al
  404fa6:	ja     0x404f9a
  404fa8:	popf   
  404fa9:	sbb    dl,BYTE PTR [eax]
  404fab:	icebp  
  404fac:	dec    esp
  404fad:	lods   eax,DWORD PTR ds:[esi]
  404fae:	push   esp
  404faf:	outs   dx,DWORD PTR ds:[esi]
  404fb0:	inc    ecx
  404fb1:	ins    BYTE PTR es:[edi],dx
  404fb2:	inc    edx
  404fb3:	cs adc dh,cl
  404fb6:	inc    esp
  404fb7:	pop    eax
  404fb8:	test   BYTE PTR [esi+0x26],cl
  404fbb:	pusha  
  404fbc:	mov    edx,edx
  404fbe:	imul   edx,DWORD PTR [esp+esi*2+0x362622b5],0xffffff9c
  404fc6:	and    BYTE PTR [ebx+0x28],ch
  404fc9:	lock pop edi
  404fcb:	cmp    BYTE PTR [eax],ch
  404fcd:	scas   al,BYTE PTR es:[edi]
  404fce:	imul   esp,DWORD PTR [eax],0x30
  404fd1:	inc    edx
  404fd2:	mov    ds:0x8d06a089,al
  404fd7:	or     eax,0x2ae027b2
  404fdc:	mov    edi,0xdd36d1fc
  404fe1:	dec    esi
  404fe2:	pop    es
  404fe3:	cmp    al,0x34
  404fe5:	inc    edi
  404fe6:	ds jb  0x405026
  404fe9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404fea:	cmp    dh,BYTE PTR [eax+0x459bf32c]
  404ff0:	mov    edx,0x744742a5
  404ff5:	push   edx
  404ff6:	je     0x404f8e
  404ff8:	or     al,0x8e
  404ffa:	cmp    BYTE PTR [ebp+0x55],bl
  404ffd:	je     0x404fce
  404fff:	or     eax,0xe844dbd
  405004:	outs   dx,BYTE PTR ds:[esi]
  405005:	cwde   
  405006:	jmp    0x404fc4
  405008:	jp     0x405001
  40500a:	xchg   ecx,eax
  40500b:	adc    dh,BYTE PTR [ecx+ecx*2]
  40500e:	mov    ch,0x37
  405010:	pop    eax
  405011:	cld    
  405012:	shl    BYTE PTR [eax-0x7d5bc46b],1
  405018:	pop    ebx
  405019:	pop    edi
  40501a:	adc    BYTE PTR [esi+0x54],bh
  40501d:	pop    eax
  40501e:	xchg   BYTE PTR [edx-0x2f],ch
  405021:	pop    edi
  405022:	xchg   DWORD PTR [ebx-0x4],ebp
  405025:	scas   al,BYTE PTR es:[edi]
  405026:	dec    edx
  405027:	test   eax,eax
  405029:	xchg   edi,eax
  40502a:	sbb    eax,ecx
  40502c:	push   ebx
  40502d:	test   dl,0x3f
  405030:	inc    edi
  405031:	xlat   BYTE PTR ds:[ebx]
  405032:	sbb    DWORD PTR [ebp+0x1e],ebx
  405035:	cld    
  405036:	and    dl,BYTE PTR [edx+0x7498a1b8]
  40503c:	pushf  
  40503d:	push   edi
  40503e:	or     edx,DWORD PTR [edx-0x52c6105a]
  405044:	jmp    0xfe1:0xc328a5d4
  40504b:	xor    esi,ebp
  40504d:	push   ebp
  40504e:	push   ecx
  40504f:	out    0xcd,al
  405051:	ror    BYTE PTR [ebp+0x6b616b40],0xa1
  405058:	cmp    eax,0x3359edc9
  40505d:	xor    BYTE PTR [ebp+0x1c],bl
  405060:	mov    bl,0x16
  405062:	inc    ecx
  405063:	sbb    eax,0x40a34707
  405068:	and    al,0xb9
  40506a:	aas    
  40506b:	into   
  40506c:	(bad)  
  40506d:	mov    ebp,0x263fdb4
  405072:	dec    esi
  405073:	clc    
  405074:	mov    edx,?
  405076:	std    
  405077:	ja     0x40500d
  405079:	stos   BYTE PTR es:[edi],al
  40507a:	xor    BYTE PTR [eax],0x57
  40507d:	or     esi,DWORD PTR [esp+edi*8-0x7baae2ef]
  405084:	inc    ebx
  405085:	aas    
  405086:	pop    eax
  405087:	xchg   esp,eax
  405088:	das    
  405089:	popf   
  40508a:	iret   
  40508b:	and    eax,0xb40b9acd
  405090:	sbb    BYTE PTR [edx*1-0x3b700993],bl
  405097:	shl    DWORD PTR [eax+eiz*8+0x73],1
  40509b:	jns    0x4050a3
  40509d:	add    edi,ebp
  40509f:	mov    ds:0xa90ef5b1,al
  4050a4:	pop    ecx
  4050a5:	xlat   BYTE PTR ds:[ebx]
  4050a6:	in     al,dx
  4050a7:	in     al,dx
  4050a8:	cmp    BYTE PTR [esi],dl
  4050aa:	ret    0x4177
  4050ad:	sub    bl,BYTE PTR [esi]
  4050af:	or     DWORD PTR [edx+0xd7512e3],0x670cc917
  4050b9:	jne    0x405137
  4050bb:	push   es
  4050bc:	out    dx,eax
  4050bd:	in     al,dx
  4050be:	cmp    eax,DWORD PTR [edx]
  4050c0:	iret   
  4050c1:	xor    BYTE PTR [edx-0x7b0d8940],ah
  4050c7:	out    0x8b,al
  4050c9:	cmp    BYTE PTR [edx+ebp*2],dh
  4050cc:	pop    esi
  4050cd:	push   ss
  4050ce:	imul   edi,DWORD PTR [esi-0x5586ec29],0x40
  4050d5:	into   
  4050d6:	xor    eax,0x6df295ec
  4050db:	sub    al,0xe5
  4050dd:	pop    eax
  4050de:	shr    bl,cl
  4050e0:	mov    eax,0x5ebd4008
  4050e5:	mov    ds:0x49139d87,al
  4050ea:	jo     0x4050f9
  4050ec:	adc    eax,0xc01a97fe
  4050f1:	push   cs
  4050f2:	jle    0x40515f
  4050f4:	ret    0xacf
  4050f7:	jle    0x405132
  4050f9:	sbb    edx,esi
  4050fb:	fdivrp st(1),st
  4050fd:	in     al,dx
  4050fe:	push   ecx
  4050ff:	call   0xb7db2f51
  405104:	and    edx,DWORD PTR [eax+0x41d9264d]
  40510a:	ret    0x1693
  40510d:	push   0x987ce384
  405112:	mov    al,ds:0x31bccee0
  405117:	sbb    DWORD PTR [ebx],esi
  405119:	or     ecx,ecx
  40511b:	test   edx,0x8e3edc8d
  405121:	ins    DWORD PTR es:[edi],dx
  405122:	ds lahf 
  405124:	push   0x467ab04d
  405129:	smsw   edi
  40512c:	(bad)  
  40512e:	sub    esi,DWORD PTR [esi+0x6a2d3087]
  405134:	fmul   QWORD PTR [edi-0x6c444111]
  40513a:	cs loop 0x405178
  40513d:	and    dh,BYTE PTR [esi]
  40513f:	(bad)  
  405140:	ret    0xbbc1
  405143:	adc    dl,ch
  405145:	outs   dx,DWORD PTR ds:[esi]
  405146:	xchg   DWORD PTR [ecx],edi
  405148:	or     ch,dh
  40514a:	addr16 cmp al,0x8f
  40514d:	(bad)  
  40514e:	mov    ds:0x8bfacc9f,al
  405153:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405154:	scas   al,BYTE PTR es:[edi]
  405155:	lahf   
  405156:	outs   dx,DWORD PTR ds:[esi]
  405157:	fwait
  405158:	leave  
  405159:	mov    bh,0x13
  40515b:	call   0xd557:0x76cdc5e2
  405162:	icebp  
  405163:	add    al,0xd0
  405165:	xor    esp,DWORD PTR [ebx]
  405167:	or     BYTE PTR [ebx],dh
  405169:	push   ds
  40516a:	iret   
  40516b:	adc    al,0xbc
  40516d:	ins    DWORD PTR es:[edi],dx
  40516e:	pop    ebp
  40516f:	mov    eax,ds:0x8418bf0e
  405174:	jmp    0x4051e5
  405176:	xor    DWORD PTR [ebx-0x6a],ecx
  405179:	sbb    al,0xf0
  40517b:	adc    ebp,ebp
  40517d:	rcr    DWORD PTR [esi+0xbfdf12],1
  405183:	jo     0x4051e0
  405185:	sbb    al,0xb4
  405187:	test   BYTE PTR [esi+ebx*4-0x17f7f009],0x82
  40518f:	mov    cl,0xc8
  405191:	xchg   esp,eax
  405192:	mov    WORD PTR [ebp+0x1ca1824f],cs
  405198:	xchg   edi,eax
  405199:	rcl    BYTE PTR [edx-0x11],0x5a
  40519d:	and    esp,DWORD PTR [esi+0x39e7914b]
  4051a3:	cmc    
  4051a4:	lods   eax,DWORD PTR ds:[esi]
  4051a5:	cmp    DWORD PTR [ebp-0x5a],esi
  4051a8:	jnp    0x40520d
  4051aa:	out    0xc5,al
  4051ac:	loopne 0x405140
  4051ae:	jo     0x40522a
  4051b0:	mov    esi,0x448d47ea
  4051b5:	xor    al,0x85
  4051b7:	mov    BYTE PTR [edi+ebp*1],ch
  4051ba:	loop   0x40513f
  4051bc:	pop    edx
  4051bd:	sub    eax,0x1a6172e5
  4051c2:	push   0x15
  4051c4:	adc    ecx,ebx
  4051c6:	loopne 0x4051d4
  4051c8:	hlt    
  4051c9:	jae    0x405206
  4051cb:	push   edi
  4051cc:	(bad)  
  4051cd:	sar    ch,cl
  4051cf:	xchg   edx,eax
  4051d0:	pop    ebp
  4051d1:	push   ecx
  4051d2:	sar    DWORD PTR [bx+si+0x72eb],1
  4051d7:	hlt    
  4051d8:	or     DWORD PTR [edi-0x2b326e5c],ebx
  4051de:	mov    al,0x6e
  4051e0:	mov    dl,0x92
  4051e2:	ss enter 0x3ae3,0x89
  4051e7:	pop    ebx
  4051e8:	xor    ebp,eax
  4051ea:	sub    al,0x59
  4051ec:	xchg   esi,eax
  4051ed:	jle    0x405206
  4051ef:	into   
  4051f0:	into   
  4051f1:	pop    ebp
  4051f2:	out    dx,al
  4051f3:	shl    ah,cl
  4051f5:	xor    eax,0x8d5ea1d5
  4051fa:	mov    dl,0xf5
  4051fc:	mov    bl,0x8
  4051fe:	pop    edx
  4051ff:	int3   
  405200:	pop    ds
  405201:	test   al,0x31
  405203:	pop    ebx
  405204:	and    eax,0xb21bd8e5
  405209:	mov    eax,0xa90ffb21
  40520e:	idiv   BYTE PTR [esp+edx*4-0x5f]
  405212:	mov    eax,ds:0x937d2422
  405217:	dec    esp
  405218:	cli    
  405219:	mov    al,0xa8
  40521b:	mov    ch,0x97
  40521d:	scas   eax,DWORD PTR es:[edi]
  40521e:	fld    TBYTE PTR [esi+0x0]
  405221:	out    0x33,al
  405223:	ret    
  405224:	add    eax,0x3272dc
  405229:	jmp    0x405392
  40522e:	mov    ecx,DWORD PTR [ebp-0x38]
  405231:	add    ecx,DWORD PTR [ebp+0x8]
  405234:	mov    DWORD PTR [ebp-0x10],ecx
  405237:	mov    ecx,DWORD PTR [ebp-0x1c]
  40523a:	test   ecx,ecx
  40523c:	je     0x40531d
  405242:	mov    DWORD PTR [ebp-0x20],0x0
  405249:	push   0x3
  40524b:	xor    edx,edx
  40524d:	pop    edx
  40524e:	add    edx,0x8
  405251:	push   edx
  405252:	pop    ecx
  405253:	push   0x6
  405255:	dec    ecx
  405256:	pop    ebx
  405257:	dec    ebx
  405258:	xchg   ebx,ecx
  40525a:	sub    ebx,ecx
  40525c:	xchg   ebx,ecx
  40525e:	dec    ecx
  40525f:	mov    eax,DWORD PTR [ebp-0x1c]
  405262:	imul   eax,ecx
  405265:	sub    esp,eax
  405267:	mov    DWORD PTR [ebp-0x20],esp
  40526a:	mov    eax,DWORD PTR [ebp-0x4]
  40526d:	mov    ecx,0x7510894
  405272:	xor    eax,ecx
  405274:	mov    edx,0x3272dc
  405279:	add    eax,edx
  40527b:	mov    DWORD PTR [ebp+0x8],eax
  40527e:	mov    eax,DWORD PTR [ebp-0x14]
  405281:	xor    eax,ecx
  405283:	add    eax,edx
  405285:	mov    edx,DWORD PTR [ebp+0x14]
  405288:	imul   eax,DWORD PTR [edx]
  40528b:	mov    edx,DWORD PTR [ebp-0x4]
  40528e:	xor    edx,ecx
  405290:	mov    ecx,DWORD PTR [ebp+0x8]
  405293:	lea    ecx,[edx+ecx*1+0x3272dc]
  40529a:	cmp    ecx,eax
  40529c:	je     0x405313
  4052a2:	mov    edi,DWORD PTR [ebp-0x14]
  4052a5:	mov    eax,DWORD PTR [ebp+0x8]
  4052a8:	mov    edx,DWORD PTR [ebp+0x14]
  4052ab:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4052af:	mov    ecx,0x7510894
  4052b4:	xor    edx,edx
  4052b6:	xor    edi,ecx
  4052b8:	mov    esi,0x3272dc
  4052bd:	add    edi,esi
  4052bf:	div    edi
  4052c1:	mov    edx,DWORD PTR [ebp-0x4]
  4052c4:	xor    edx,ecx
  4052c6:	lea    eax,[edx+eax*1+0x3272dc]
  4052cd:	mov    edx,DWORD PTR [ebp+0x8]
  4052d0:	mov    edi,DWORD PTR [ebp-0x20]
  4052d3:	mov    DWORD PTR [edi+edx*4],eax
  4052d6:	mov    eax,DWORD PTR [ebp-0x14]
  4052d9:	mov    edx,DWORD PTR [ebp+0x8]
  4052dc:	xor    eax,ecx
  4052de:	lea    eax,[eax+edx*1+0x3272dc]
  4052e5:	mov    DWORD PTR [ebp+0x8],eax
  4052e8:	mov    eax,DWORD PTR [ebp-0x14]
  4052eb:	mov    edx,DWORD PTR [ebp+0x14]
  4052ee:	xor    eax,ecx
  4052f0:	add    eax,esi
  4052f2:	imul   eax,DWORD PTR [edx]
  4052f5:	mov    edx,DWORD PTR [ebp-0x4]
  4052f8:	xor    edx,ecx
  4052fa:	mov    ecx,DWORD PTR [ebp+0x8]
  4052fd:	lea    ecx,[edx+ecx*1+0x3272dc]
  405304:	cmp    ecx,eax
  405306:	jne    0x4052a2
  40530c:	mov    eax,esi
  40530e:	jmp    0x405318
  405313:	mov    eax,0x3272dc
  405318:	mov    ebx,0x7510894
  40531d:	mov    ecx,DWORD PTR [ebp-0x4]
  405320:	xor    ecx,ebx
  405322:	add    ecx,eax
  405324:	mov    DWORD PTR [ebp-0xc],ecx
  405327:	mov    ebx,0x65655
  40532c:	add    ebx,0x3234
  405332:	xchg   ebx,esi
  405334:	xor    ebx,ebx
  405336:	push   esi
  405337:	mov    esi,ebx
  405339:	pop    ebx
  40533a:	mov    edx,esi
  40533c:	add    ebx,0x1002
  405342:	lea    eax,[ebp-0x10]
  405345:	add    edx,eax
  405347:	add    edx,0x5
  40534a:	push   edx
  40534b:	inc    esi
  40534c:	pop    ecx
  40534d:	dec    ecx
  40534e:	xchg   ecx,eax
  40534f:	dec    eax
  405350:	xchg   ecx,eax
  405351:	dec    ecx
  405352:	xchg   ecx,edx
  405354:	dec    edx
  405355:	push   edx
  405356:	mov    edx,ebx
  405358:	pop    ebx
  405359:	dec    ebx
  40535a:	call   DWORD PTR [ebx]
  40535c:	cmp    DWORD PTR [ebp+0x10],esi
  40535f:	je     0x40537e
  405365:	xchg   edx,eax
  405366:	push   0xb
  405368:	pop    ecx
  405369:	push   0x4
  40536b:	pop    ebx
  40536c:	inc    ebx
  40536d:	xchg   ebx,ecx
  40536f:	sub    ebx,ecx
  405371:	xchg   ebx,ecx
  405373:	dec    ecx
  405374:	dec    ecx
  405375:	mov    eax,DWORD PTR [ebp-0x1c]
  405378:	imul   eax,ecx
  40537b:	add    esp,eax
  40537d:	xchg   edx,eax
  40537e:	push   eax
  40537f:	xor    ebx,ebx
  405381:	mov    edx,esp
  405383:	dec    edx
  405384:	inc    ebx
  405385:	add    ebx,DWORD PTR [edx+ebx*1]
  405388:	dec    ebx
  405389:	xor    edx,edx
  40538b:	add    DWORD PTR [ebp-0xc],ebx
  40538e:	pop    ebx
  40538f:	mov    eax,DWORD PTR [ebp-0xc]
  405392:	pop    edi
  405393:	pop    esi
  405394:	pop    ebx
  405395:	leave  
  405396:	ret    0x10
  405399:	push   ebp
  40539a:	mov    ebp,esp
  40539c:	sub    esp,0x18
  40539f:	and    DWORD PTR ds:0x413c1e,0x0
  4053a9:	mov    ecx,DWORD PTR ds:0x413c1e
  4053af:	inc    ecx
  4053b0:	mov    DWORD PTR ds:0x413c1e,ecx
  4053b6:	cmp    DWORD PTR ds:0x413c1e,0x8
  4053bd:	jne    0x4053d7
  4053c3:	push   DWORD PTR [ebp-0x20]
  4053c6:	push   0x413cf0
  4053cb:	push   DWORD PTR [ebp-0x24]
  4053ce:	push   DWORD PTR [ebp-0x14]
  4053d1:	call   DWORD PTR ds:0x416770
  4053d7:	cmp    DWORD PTR ds:0x413c1e,0x7
  4053de:	jne    0x4053f3
  4053e4:	xor    ecx,ecx
  4053e6:	or     ecx,DWORD PTR ds:0x413c1e
  4053ec:	inc    ecx
  4053ed:	mov    DWORD PTR ds:0x413c1e,ecx
  4053f3:	cmp    DWORD PTR ds:0x413c1e,0x1f
  4053fa:	jb     0x4053a9
  405400:	and    DWORD PTR ds:0x413c12,ecx
  405406:	mov    DWORD PTR [ebp-0x10],0xf89f85b0
  40540d:	xor    edx,edx
  40540f:	or     edx,DWORD PTR ds:0x413cc0
  405415:	mov    edx,DWORD PTR [edx]
  405417:	and    DWORD PTR ds:0x413ce8,edx
  40541d:	lea    eax,[ebp+0x14]
  405420:	mov    DWORD PTR [ebp-0x4],eax
  405423:	push   esi
  405424:	adc    edx,ecx
  405426:	mov    esi,0xf89c85b0
  40542b:	mov    DWORD PTR [ebp-0xc],esi
  40542e:	and    DWORD PTR ds:0x413c74,0x0
  405438:	jmp    0x40544a
  40543d:	mov    edx,DWORD PTR ds:0x413c74
  405443:	inc    edx
  405444:	mov    DWORD PTR ds:0x413c74,edx
  40544a:	cmp    DWORD PTR ds:0x413c74,0x1a
  405451:	jae    0x405550
  405457:	cmp    DWORD PTR ds:0x413c74,0x10
  40545e:	jne    0x40547c
  405464:	push   0x41401c
  405469:	push   DWORD PTR [ebp-0x14]
  40546c:	push   0x416140
  405471:	push   0x4161b2
  405476:	call   DWORD PTR ds:0x416774
  40547c:	cmp    DWORD PTR ds:0x413c74,0xf
  405483:	jne    0x405498
  405489:	xor    edx,edx
  40548b:	add    edx,DWORD PTR ds:0x413c74
  405491:	inc    edx
  405492:	mov    DWORD PTR ds:0x413c74,edx
  405498:	jmp    0x40543d
  40549d:	and    DWORD PTR ds:0x413c0e,0x0
  4054a7:	jmp    0x4054b9
  4054ac:	mov    ecx,DWORD PTR ds:0x413c0e
  4054b2:	inc    ecx
  4054b3:	mov    DWORD PTR ds:0x413c0e,ecx
  4054b9:	cmp    DWORD PTR ds:0x413c0e,0x16
  4054c0:	jae    0x405550
  4054c6:	cmp    DWORD PTR ds:0x413c0e,0x7
  4054cd:	jne    0x4054e8
  4054d3:	push   0x1925
  4054d8:	push   0x413c1a
  4054dd:	push   0x416140
  4054e2:	call   DWORD PTR ds:0x416778
  4054e8:	cmp    DWORD PTR ds:0x413c0e,0x6
  4054ef:	jne    0x405504
  4054f5:	xor    ecx,ecx
  4054f7:	or     ecx,DWORD PTR ds:0x413c0e
  4054fd:	inc    ecx
  4054fe:	mov    DWORD PTR ds:0x413c0e,ecx
  405504:	jmp    0x4054ac
  405509:	mov    DWORD PTR ds:0x413d1c,0x15
  405513:	cmp    DWORD PTR ds:0x413d1c,0x0
  40551a:	je     0x405550
  405520:	cmp    DWORD PTR ds:0x413d1c,0x21
  405527:	jne    0x405538
  40552d:	push   0x416025
  405532:	call   DWORD PTR ds:0x41677c
  405538:	mov    ecx,DWORD PTR ds:0x413d1c
  40553e:	dec    ecx
  40553f:	mov    DWORD PTR ds:0x413d1c,ecx
  405545:	jmp    0x405513
  40554a:	adc    edx,0x7769
  405550:	lea    eax,[ebp-0xc]
  405553:	mov    DWORD PTR [ebp-0x14],eax
  405556:	or     eax,DWORD PTR ds:0x413c0a
  40555c:	mov    eax,DWORD PTR [ebp-0xc]
  40555f:	and    edx,edx
  405561:	mov    edx,DWORD PTR [ebp-0x14]
  405564:	mov    ecx,0x7510894
  405569:	xor    eax,ecx
  40556b:	add    eax,0x3272dc
  405570:	mov    DWORD PTR [edx],eax
  405572:	and    DWORD PTR ds:0x413d34,0x0
  40557c:	jmp    0x40558c
  405581:	mov    eax,ds:0x413d34
  405586:	inc    eax
  405587:	mov    ds:0x413d34,eax
  40558c:	cmp    DWORD PTR ds:0x413d34,0x17
  405593:	jae    0x4055dc
  405599:	cmp    DWORD PTR ds:0x413d34,0x8
  4055a0:	jne    0x4055b9
  4055a6:	push   0x413cec
  4055ab:	push   DWORD PTR [ebp-0x24]
  4055ae:	push   0x416049
  4055b3:	call   DWORD PTR ds:0x416780
  4055b9:	cmp    DWORD PTR ds:0x413d34,0x7
  4055c0:	jne    0x4055d1
  4055c6:	mov    eax,ds:0x413d34
  4055cb:	inc    eax
  4055cc:	mov    ds:0x413d34,eax
  4055d1:	jmp    0x405581
  4055d6:	and    edx,DWORD PTR ds:0x413bfe
  4055dc:	mov    eax,ds:0x41622c
  4055e1:	mov    edx,DWORD PTR [ebp-0x4]
  4055e4:	add    DWORD PTR ds:0x413bf6,0x4ad3
  4055ee:	mov    eax,DWORD PTR [eax]
  4055f0:	add    eax,DWORD PTR [edx]
  4055f2:	sbb    DWORD PTR ds:0x413c80,0x777b
  4055fc:	push   edi
  4055fd:	xor    DWORD PTR ds:0x413c06,ebx
  405603:	mov    DWORD PTR [ebp-0x8],eax
  405606:	mov    edi,DWORD PTR [ebp+0x8]
  405609:	movzx  eax,BYTE PTR ds:0x413d28
  405610:	sub    DWORD PTR ds:0x413c06,eax
  405616:	mov    eax,ds:0x4163b4
  40561b:	mov    eax,DWORD PTR [eax+0x198]
  405621:	adc    edx,DWORD PTR ds:0x414010
  405627:	xor    edi,ecx
  405629:	mov    edx,0x3272dc
  40562e:	add    DWORD PTR ds:0x413c1a,0x413cd8
  405638:	add    edi,edx
  40563a:	mov    DWORD PTR ds:0x413d28,0x4988
  405644:	cmp    DWORD PTR [eax],edi
  405646:	je     0x40565d
  40564c:	mov    eax,DWORD PTR [eax]
  40564e:	mov    DWORD PTR ds:0x413ce4,0xf81
  405658:	jmp    0x407c4a
  40565d:	mov    eax,DWORD PTR [ebp+0x18]
  405660:	mov    DWORD PTR ds:0x413c06,0x7bbf
  40566a:	cmp    eax,esi
  40566c:	mov    DWORD PTR ds:0x413d30,0x2bf7
  405676:	jne    0x405686
  40567c:	push   0xf89c85b1
  405681:	jmp    0x407c39
  405686:	mov    esi,DWORD PTR [ebp+0x18]
  405689:	movzx  eax,WORD PTR ds:0x413cf0
  405690:	mov    eax,0xf89c85b2
  405695:	cmp    esi,eax
  405697:	jne    0x407c29
  40569d:	mov    eax,DWORD PTR [ebp+0x10]
  4056a0:	inc    DWORD PTR ds:0x413c80
  4056a6:	xor    eax,ecx
  4056a8:	add    eax,edx
  4056aa:	mov    DWORD PTR [ebp-0x18],eax
  4056ad:	adc    DWORD PTR ds:0x413d1c,0x3347
  4056b7:	mov    eax,DWORD PTR [ebp+0xc]
  4056ba:	mov    esi,DWORD PTR [ebp-0x8]
  4056bd:	xor    eax,ecx
  4056bf:	sbb    DWORD PTR ds:0x413ce4,0x413c70
  4056c9:	add    eax,edx
  4056cb:	imul   eax,DWORD PTR [esi]
  4056ce:	and    DWORD PTR ds:0x413c0a,ebx
  4056d4:	mov    esi,DWORD PTR [ebp+0x8]
  4056d7:	and    DWORD PTR ds:0x413d24,0x413c02
  4056e1:	xor    esi,ecx
  4056e3:	add    esi,edx
  4056e5:	cmp    esi,eax
  4056e7:	movzx  eax,BYTE PTR ds:0x413cf0
  4056ee:	mov    eax,DWORD PTR [ebp-0x4]
  4056f1:	push   ebx
  4056f2:	mov    DWORD PTR ds:0x414000,0x6197
  4056fc:	je     0x40577e
  405702:	and    DWORD PTR ds:0x413c1e,0x0
  40570c:	jmp    0x40571e
  405711:	mov    esi,DWORD PTR ds:0x413c1e
  405717:	inc    esi
  405718:	mov    DWORD PTR ds:0x413c1e,esi
  40571e:	cmp    DWORD PTR ds:0x413c1e,0x14
  405725:	jae    0x405765
  40572b:	cmp    DWORD PTR ds:0x413c1e,0xa
  405732:	jne    0x405746
  405738:	push   0x413d1c
  40573d:	push   DWORD PTR [ebp-0x24]
  405740:	call   DWORD PTR ds:0x416784
  405746:	cmp    DWORD PTR ds:0x413c1e,0x9
  40574d:	jne    0x405760
  405753:	mov    esi,DWORD PTR ds:0x413c1e
  405759:	inc    esi
  40575a:	mov    DWORD PTR ds:0x413c1e,esi
  405760:	jmp    0x405711
  405765:	mov    esi,DWORD PTR [ebp-0x18]
  405768:	add    DWORD PTR [eax],esi
  40576a:	mov    eax,DWORD PTR [ebp-0x4]
  40576d:	mov    esi,DWORD PTR [ebp+0xc]
  405770:	xor    esi,ecx
  405772:	add    esi,edx
  405774:	imul   esi,DWORD PTR [eax]
  405777:	mov    DWORD PTR [eax],esi
  405779:	jmp    0x405783
  40577e:	mov    esi,DWORD PTR [ebp+0x14]
  405781:	xor    DWORD PTR [eax],esi
  405783:	mov    eax,DWORD PTR [ebp-0x4]
  405786:	mov    edi,DWORD PTR [ebp+0x10]
  405789:	xor    edi,ecx
  40578b:	mov    esi,0xffcd8d24
  405790:	mov    ebx,esi
  405792:	sub    ebx,edi
  405794:	add    DWORD PTR [eax],ebx
  405796:	mov    eax,DWORD PTR [ebp-0x4]
  405799:	mov    edi,DWORD PTR [ebp-0x8]
  40579c:	add    edi,DWORD PTR [eax]
  40579e:	mov    DWORD PTR [ebp-0x8],edi
  4057a1:	mov    eax,DWORD PTR [ebp+0xc]
  4057a4:	mov    edi,DWORD PTR [ebp+0xc]
  4057a7:	xor    edi,ecx
  4057a9:	xor    eax,ecx
  4057ab:	lea    eax,[eax+edi*1+0x64e5b8]
  4057b2:	mov    edi,DWORD PTR [ebp+0xc]
  4057b5:	xor    edi,ecx
  4057b7:	add    edi,edx
  4057b9:	imul   eax,edi
  4057bc:	mov    edi,DWORD PTR [ebp+0xc]
  4057bf:	xor    edi,ecx
  4057c1:	sub    edi,eax
  4057c3:	mov    eax,DWORD PTR [ebp-0x4]
  4057c6:	add    edi,edx
  4057c8:	cmp    DWORD PTR [eax],edi
  4057ca:	mov    eax,DWORD PTR [ebp-0x4]
  4057cd:	mov    edi,DWORD PTR [ebp+0x10]
  4057d0:	jg     0x4057e3
  4057d6:	xor    edi,ecx
  4057d8:	mov    ebx,esi
  4057da:	sub    ebx,edi
  4057dc:	add    DWORD PTR [eax],ebx
  4057de:	jmp    0x4057e9
  4057e3:	xor    edi,ecx
  4057e5:	add    edi,edx
  4057e7:	add    DWORD PTR [eax],edi
  4057e9:	mov    eax,DWORD PTR [ebp-0x8]
  4057ec:	mov    edi,DWORD PTR [ebp-0x10]
  4057ef:	mov    eax,DWORD PTR [eax]
  4057f1:	jmp    0x407b3d
  4057f6:	imul   ebp,DWORD PTR [edx+0x66],0xaba967a5
  4057fd:	stos   BYTE PTR es:[edi],al
  4057fe:	(bad)  
  4057ff:	sbb    eax,0xd4f594ee
  405804:	sub    al,0x81
  405806:	loopne 0x405867
  405808:	jl     0x405886
  40580a:	dec    ebx
  40580b:	pop    edi
  40580c:	jl     0x40588a
  40580e:	mov    cs,WORD PTR [ecx-0x24e26e29]
  405814:	in     al,0x78
  405816:	and    bl,BYTE PTR ds:0x5db3372
  40581c:	pop    eax
  40581d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40581e:	repz push ecx
  405820:	add    al,0xae
  405822:	int    0x70
  405824:	mov    ebp,0x520899dd
  405829:	xor    dh,BYTE PTR [ebx-0x3b]
  40582c:	test   al,0xb4
  40582e:	gs add al,0x3e
  405831:	or     ecx,DWORD PTR [ebp+0x20]
  405834:	(bad)  [ebx-0x6d0e3a47]
  40583a:	(bad)  
  40583b:	test   al,0x99
  40583d:	lahf   
  40583e:	stos   DWORD PTR es:[edi],eax
  40583f:	int    0x46
  405841:	or     al,0x88
  405843:	mov    bh,ch
  405845:	push   ebp
  405846:	add    DWORD PTR [ecx+0x77],eax
  405849:	inc    ebx
  40584a:	call   0xd1be:0x304546c1
  405851:	mov    dl,0xd4
  405853:	dec    ecx
  405854:	mov    WORD PTR [edx-0x780fc89d],cs
  40585a:	fwait
  40585b:	and    eax,0xed3c5ed6
  405860:	inc    edx
  405861:	xor    DWORD PTR [edi-0x24],0x9feb60af
  405868:	call   DWORD PTR [eax+edi*2+0x523886a3]
  40586f:	loopne 0x40587c
  405871:	xchg   esi,eax
  405872:	jmp    0x159d9815
  405877:	xchg   esi,eax
  405878:	jecxz  0x4058a6
  40587a:	push   0x42461799
  40587f:	cmp    DWORD PTR [ebx+0x4e],eax
  405882:	call   0xc94c:0x71aed8aa
  405889:	or     eax,0x54bd4df6
  40588e:	dec    ebp
  40588f:	inc    ecx
  405890:	aam    0x65
  405892:	lods   eax,DWORD PTR ds:[esi]
  405893:	mov    BYTE PTR [esi+0x5b87b677],ah
  405899:	jmp    0x8e47fa67
  40589e:	xchg   ecx,eax
  40589f:	call   0x64de:0xe2a5cc0e
  4058a6:	mov    eax,0x60041351
  4058ab:	adc    DWORD PTR [edi],edi
  4058ad:	mov    dh,0x5c
  4058af:	stc    
  4058b0:	fs aad 0x2a
  4058b3:	(bad)  
  4058b4:	shl    BYTE PTR [esi+0x3caff60e],1
  4058ba:	fxtract 
  4058bc:	push   esp
  4058bd:	mov    edi,0x3bcc46bc
  4058c2:	cld    
  4058c3:	ja     0x405920
  4058c5:	inc    ecx
  4058c6:	iret   
  4058c7:	mov    cl,0x90
  4058c9:	lods   eax,DWORD PTR ds:[esi]
  4058ca:	mov    eax,ds:0x4f6ce9ed
  4058cf:	sar    BYTE PTR [edi+0x7f85b06a],1
  4058d5:	jne    0x405900
  4058d7:	in     eax,0xf2
  4058d9:	mov    esp,0x6682fbaa
  4058de:	pop    ecx
  4058df:	ret    0x3f4d
  4058e2:	cmp    BYTE PTR [ecx-0x1ed5e96],bh
  4058e8:	aaa    
  4058e9:	(bad)  
  4058ea:	in     eax,dx
  4058eb:	in     eax,dx
  4058ec:	imul   edi,DWORD PTR [ecx+0x24],0xffffffb6
  4058f0:	xchg   DWORD PTR [ecx-0x3c],esp
  4058f3:	fs cmp dh,bh
  4058f6:	ret    0x79d8
  4058f9:	pushf  
  4058fa:	mov    ebp,0x4fa0ff8c
  4058ff:	jg     0x4058b6
  405901:	loope  0x4058fd
  405903:	(bad)  
  405904:	popa   
  405905:	lods   al,BYTE PTR ds:[esi]
  405906:	dec    ebp
  405907:	and    dl,ch
  405909:	mov    eax,ebx
  40590b:	mov    ecx,0x4dc7d324
  405910:	cmp    eax,DWORD PTR [ecx+0x7be54287]
  405916:	mov    esi,DWORD PTR [edi+0x75b8ef6d]
  40591c:	int3   
  40591d:	sbb    BYTE PTR [eax],dh
  40591f:	cmp    DWORD PTR [ebp-0xfabe1fd],ebx
  405925:	js     0x4058d9
  405927:	arpl   WORD PTR [eax-0x61],sp
  40592a:	ja     0x40593d
  40592c:	mov    eax,0xc8d65a84
  405931:	div    BYTE PTR [edx+ecx*2]
  405934:	jae    0x4058d1
  405936:	arpl   WORD PTR [ecx],dx
  405938:	jle    0x4058d1
  40593a:	inc    ebx
  40593b:	pop    es
  40593c:	mov    ?,ebx
  40593e:	mov    eax,0xd35d3360
  405943:	into   
  405944:	fidiv  WORD PTR [edx]
  405946:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405948:	pop    es
  405949:	mov    esp,0xef2e0973
  40594e:	fwait
  40594f:	pushf  
  405950:	jp     0x4058d8
  405952:	sub    edx,DWORD PTR [esi+0x6c139341]
  405958:	add    eax,0xe012dd18
  40595d:	jno    0x4058ec
  40595f:	das    
  405960:	inc    edx
  405961:	or     DWORD PTR [edx+ecx*8],edi
  405964:	jge    0x405977
  405966:	lock sar BYTE PTR [ecx],0x26
  40596a:	add    ah,BYTE PTR [edi+0x59]
  40596d:	mov    eax,0xba6a32ee
  405972:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405973:	mov    cl,0x7
  405975:	xor    ecx,edx
  405977:	js     0x4058fd
  405979:	jge    0x40595f
  40597b:	ins    BYTE PTR es:[edi],dx
  40597c:	mov    ah,0x62
  40597e:	pop    edx
  40597f:	icebp  
  405980:	jg     0x4059d8
  405982:	mov    esi,0x1840f82a
  405987:	mov    bl,0xe0
  405989:	mov    ds:0x714fd07e,eax
  40598e:	les    esp,FWORD PTR [ebx]
  405990:	fild   QWORD PTR [ebx-0x2193eab2]
  405996:	sub    al,0xb7
  405998:	mov    bl,0x16
  40599a:	and    DWORD PTR [edx-0xa976001],edx
  4059a0:	mov    ch,0x3f
  4059a2:	jge    0x4059d5
  4059a4:	cmp    BYTE PTR ds:0x9b3420d6,dl
  4059aa:	jb     0x40598e
  4059ac:	loope  0x4059fc
  4059ae:	shl    DWORD PTR [ebx],0xf4
  4059b1:	sbb    al,0x41
  4059b3:	add    esi,DWORD PTR [ebp-0x1e]
  4059b6:	dec    edi
  4059b7:	or     DWORD PTR [ebp-0x794d442f],esp
  4059bd:	mov    DWORD PTR [ebx+0x60fda18f],ebx
  4059c3:	push   eax
  4059c4:	int3   
  4059c5:	inc    edx
  4059c6:	mov    es,WORD PTR [esi]
  4059c8:	or     eax,0x10f9fe1e
  4059cd:	into   
  4059ce:	out    0x33,al
  4059d0:	xchg   esi,eax
  4059d1:	mov    cl,0x85
  4059d3:	es int 0x2c
  4059d6:	push   ecx
  4059d7:	aad    0x26
  4059d9:	scas   al,BYTE PTR es:[edi]
  4059da:	ret    0x7bf6
  4059dd:	mov    ebx,0x7111d77b
  4059e2:	lods   eax,DWORD PTR ds:[esi]
  4059e3:	das    
  4059e4:	out    0x46,eax
  4059e6:	scas   al,BYTE PTR es:[edi]
  4059e7:	inc    ebx
  4059e8:	(bad)  
  4059e9:	inc    DWORD PTR [ecx]
  4059eb:	or     ebx,DWORD PTR [edi]
  4059ed:	leave  
  4059ee:	aaa    
  4059ef:	out    dx,eax
  4059f0:	xlat   BYTE PTR ds:[ebx]
  4059f1:	scas   al,BYTE PTR es:[edi]
  4059f2:	stc    
  4059f3:	inc    esi
  4059f4:	mov    eax,0x48d65455
  4059f9:	or     al,0xc2
  4059fb:	leave  
  4059fc:	and    eax,0x43b55c41
  405a01:	mov    ah,0x9f
  405a03:	repz xchg edx,eax
  405a05:	pop    eax
  405a06:	add    esi,DWORD PTR [ebp+0xbedeebe]
  405a0c:	popf   
  405a0d:	cmp    eax,0x34c32e09
  405a12:	icebp  
  405a13:	js     0x405a55
  405a15:	push   ss
  405a16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a17:	jbe    0x4059b0
  405a19:	xor    al,0x8e
  405a1b:	cmp    bh,BYTE PTR [ecx-0x4be4fdcb]
  405a21:	inc    eax
  405a22:	push   edi
  405a23:	add    al,0x1e
  405a25:	jno    0x405a86
  405a27:	dec    ebx
  405a28:	nop
  405a29:	out    0xcc,eax
  405a2b:	aam    0x80
  405a2d:	sub    bl,ch
  405a2f:	push   0x26fbff8c
  405a34:	inc    ebp
  405a35:	cmc    
  405a36:	xchg   BYTE PTR [edx],ah
  405a38:	out    dx,al
  405a39:	bound  edi,QWORD PTR [ebp+0x68]
  405a3c:	push   edx
  405a3d:	test   BYTE PTR [ecx],bh
  405a3f:	push   esi
  405a40:	es (bad) 
  405a42:	and    dh,ah
  405a44:	outs   dx,DWORD PTR ss:[esi]
  405a46:	loop   0x405a9b
  405a48:	in     eax,0xa4
  405a4a:	adc    BYTE PTR [esi+0x2b],bl
  405a4d:	dec    esp
  405a4e:	cdq    
  405a4f:	inc    esi
  405a50:	call   0x544dedd5
  405a55:	outs   dx,DWORD PTR ds:[esi]
  405a56:	sub    al,0x39
  405a58:	or     BYTE PTR [ebp+eax*1+0x24],dl
  405a5c:	ficomp DWORD PTR [ebx+0x28]
  405a5f:	xchg   esp,eax
  405a60:	jp     0x405a3a
  405a62:	test   DWORD PTR [ebx-0x7bb2cdac],edi
  405a68:	hlt    
  405a69:	pop    eax
  405a6a:	mov    edi,0xb6d8460f
  405a6f:	and    BYTE PTR [edi+0x25],0xe1
  405a73:	lock xlat BYTE PTR ds:[ebx]
  405a75:	sub    dh,al
  405a77:	retf   0xf1d3
  405a7a:	test   BYTE PTR [ebx-0xd],bl
  405a7d:	cmp    DWORD PTR [ebp+0x43],0xffffffaf
  405a81:	lea    ebx,[edx-0xf33f9fb]
  405a87:	jle    0x405adc
  405a89:	pop    edx
  405a8a:	add    al,0xa4
  405a8c:	push   0x35204b5c
  405a91:	outs   dx,BYTE PTR es:[esi]
  405a93:	sub    bl,BYTE PTR [edx+0x17bcb95e]
  405a99:	pop    edi
  405a9a:	push   esi
  405a9b:	jl     0x405a84
  405a9d:	enter  0xf8b5,0x57
  405aa1:	retf   0xa8fb
  405aa4:	sub    eax,0xc7d29323
  405aa9:	cli    
  405aaa:	push   ds
  405aab:	cmp    BYTE PTR [eax],bl
  405aad:	into   
  405aae:	fcmovne st,st(6)
  405ab0:	sbb    BYTE PTR [edx],0x9d
  405ab3:	push   ss
  405ab4:	loop   0x405a52
  405ab6:	push   esi
  405ab7:	mov    ecx,0x2b15f639
  405abc:	mov    WORD PTR [edx],ss
  405abe:	jle    0x405ace
  405ac0:	xor    eax,0x69983b86
  405ac5:	mov    ebx,0xcb8d0f81
  405aca:	dec    bx
  405acc:	cli    
  405acd:	dec    ebx
  405ace:	sbb    ebp,esp
  405ad0:	(bad)  
  405ad1:	shl    DWORD PTR [esi],cl
  405ad3:	addr16 cmp ebx,esp
  405ad6:	or     dl,BYTE PTR [eax+0x5b]
  405ad9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ada:	sbb    esp,0x8e5263e5
  405ae0:	stc    
  405ae1:	or     eax,0xe619feca
  405ae6:	fadd   DWORD PTR [eax]
  405ae8:	int3   
  405ae9:	sub    eax,0x527c665d
  405aee:	stc    
  405aef:	sbb    eax,0x63acd1e5
  405af4:	mov    al,ds:0xb6ee51f
  405af9:	mov    edi,0x103e33cc
  405afe:	push   ss
  405aff:	xchg   DWORD PTR [ecx],esi
  405b01:	jno    0x405ac0
  405b03:	mov    BYTE PTR [eax],cl
  405b05:	imul   esp,DWORD PTR [esi+0x6c],0x97ebc3c6
  405b0c:	outs   dx,DWORD PTR ds:[esi]
  405b0d:	push   ss
  405b0e:	mov    DWORD PTR [ebx+eiz*8+0x6e94b1d2],edx
  405b15:	shl    BYTE PTR [ebx+ebx*4],1
  405b18:	jo     0x405afa
  405b1a:	jle    0x405ac1
  405b1c:	call   0x4f7b24b2
  405b21:	js     0x405b54
  405b23:	idiv   BYTE PTR ss:[ebx]
  405b26:	(bad)  
  405b27:	jge    0x405ae1
  405b29:	popf   
  405b2a:	cdq    
  405b2b:	adc    al,0xac
  405b2d:	cmp    esp,ebx
  405b2f:	jp     0x405ba4
  405b31:	inc    edi
  405b32:	out    0x87,al
  405b34:	jmp    0x6ad5:0xc6e1c646
  405b3b:	fyl2xp1 
  405b3d:	sub    al,0x73
  405b3f:	add    eax,DWORD PTR [esi+0x24fa8d99]
  405b45:	dec    edx
  405b46:	inc    edx
  405b47:	dec    esp
  405b48:	mov    bh,0xf6
  405b4a:	dec    edx
  405b4b:	mov    al,ds:0x1324c71d
  405b50:	xor    bl,al
  405b52:	add    edi,DWORD PTR [ebx]
  405b54:	and    eax,0xcb3a1ce6
  405b59:	mov    ebx,0x7d60844b
  405b5e:	inc    ecx
  405b5f:	fimul  DWORD PTR [edi]
  405b61:	dec    esp
  405b62:	lea    edx,[ebx-0x73ded8e5]
  405b68:	fidiv  DWORD PTR [edi+0x7d]
  405b6b:	jne    0x405b70
  405b6d:	fwait
  405b6e:	int3   
  405b6f:	test   eax,0xf2f54b0a
  405b74:	add    DWORD PTR [ecx],eax
  405b76:	dec    esp
  405b77:	fcmovne st,st(3)
  405b79:	js     0x405bab
  405b7b:	inc    ecx
  405b7c:	xchg   edi,eax
  405b7d:	outs   dx,DWORD PTR ds:[esi]
  405b7e:	dec    ebx
  405b7f:	jg     0x405bf5
  405b81:	in     eax,dx
  405b82:	jnp    0x405bce
  405b84:	ins    DWORD PTR es:[edi],dx
  405b85:	mov    esi,0x5aebe08c
  405b8a:	mov    eax,ds:0xdcf88a4e
  405b8f:	or     eax,0x16051ced
  405b94:	aas    
  405b95:	addr16 cmp edx,ecx
  405b98:	dec    ecx
  405b99:	sbb    DWORD PTR [edx+0x64],ebp
  405b9c:	loopne 0x405bfa
  405b9e:	xor    DWORD PTR [edi-0x13],eax
  405ba1:	ins    BYTE PTR es:[edi],dx
  405ba2:	inc    eax
  405ba3:	int    0x4d
  405ba5:	popf   
  405ba6:	cmp    DWORD PTR gs:[edi+0x3],ebx
  405baa:	xchg   esi,eax
  405bab:	aas    
  405bac:	and    al,0xd8
  405bae:	hlt    
  405baf:	mov    edi,0xc65e7ad
  405bb4:	jmp    0xd974b985
  405bb9:	lds    esp,FWORD PTR [esi-0x2af0f80d]
  405bbf:	aas    
  405bc0:	les    eax,FWORD PTR [edi+ecx*4-0x41]
  405bc4:	jge    0x405c3e
  405bc6:	or     al,0x82
  405bc8:	push   ss
  405bc9:	dec    ebx
  405bca:	(bad)  
  405bcb:	repz test DWORD PTR [ecx+0x7f0cac7a],ecx
  405bd2:	stc    
  405bd3:	lock mul ecx
  405bd6:	sbb    esp,DWORD PTR [eax-0x416bace4]
  405bdc:	sbb    al,0x55
  405bde:	scas   al,BYTE PTR es:[edi]
  405bdf:	clc    
  405be0:	adc    eax,ebp
  405be2:	test   BYTE PTR ds:0xb28acd88,dh
  405be8:	aas    
  405be9:	add    DWORD PTR [edx-0x61],esp
  405bec:	sahf   
  405bed:	clc    
  405bee:	loope  0x405c0e
  405bf0:	inc    ax
  405bf2:	lods   eax,DWORD PTR ds:[esi]
  405bf3:	test   eax,0x61864904
  405bf8:	mov    ch,0x95
  405bfa:	stos   DWORD PTR es:[edi],eax
  405bfb:	xor    al,0x8e
  405bfd:	ds sahf 
  405bff:	std    
  405c00:	sar    DWORD PTR [eax-0x2f],0x72
  405c04:	mov    DWORD PTR [ebx+0xd9735e5],eax
  405c0a:	mov    edi,0xae7a5e9f
  405c0f:	cmp    BYTE PTR [ecx-0x13],al
  405c12:	(bad)  
  405c13:	inc    edx
  405c14:	lock mov ebp,0x84a50f93
  405c1a:	imul   ebx,DWORD PTR [edx-0x35c7cf11],0x6b66196
  405c24:	cmp    DWORD PTR [edx+0x36ce896b],ebx
  405c2a:	push   edi
  405c2b:	in     eax,0xb4
  405c2d:	lahf   
  405c2e:	sub    edi,DWORD PTR [ebp+0x17]
  405c31:	rcl    dl,0x6c
  405c34:	or     DWORD PTR [esi+esi*8+0x65],edx
  405c38:	in     al,0xe
  405c3a:	sub    edi,esi
  405c3c:	ja     0x405c1d
  405c3e:	int    0x36
  405c40:	jg     0x405c4d
  405c42:	inc    esi
  405c43:	pop    eax
  405c44:	push   edx
  405c45:	mov    dh,0x5
  405c47:	add    BYTE PTR [edi-0x39],0x7
  405c4b:	sub    DWORD PTR [ebx],0x4c
  405c4e:	cmp    DWORD PTR [eax+0x46],edi
  405c51:	fnstsw WORD PTR [edi-0x552cb582]
  405c57:	xor    edi,eax
  405c59:	ds retf 
  405c5b:	sbb    al,0xa9
  405c5d:	clc    
  405c5e:	xchg   ebx,eax
  405c5f:	hlt    
  405c60:	cld    
  405c61:	xchg   ebx,eax
  405c62:	dec    edi
  405c63:	ffree  st(2)
  405c65:	je     0x405cc4
  405c67:	dec    edx
  405c68:	cmp    al,0xfb
  405c6a:	rcr    BYTE PTR [esi-0x1866495e],cl
  405c70:	adc    ecx,DWORD PTR [edi+0xd4e7ea5]
  405c76:	nop
  405c77:	xchg   ebx,eax
  405c78:	pop    ss
  405c79:	xor    ah,BYTE PTR [ebp-0x1e]
  405c7c:	or     BYTE PTR [edx],ah
  405c7e:	stos   BYTE PTR es:[edi],al
  405c7f:	xchg   ebp,eax
  405c80:	retf   0xa9f2
  405c83:	scas   eax,DWORD PTR es:[edi]
  405c84:	es dec edi
  405c86:	data16 lahf 
  405c88:	loopne 0x405cb3
  405c8a:	addr16 xchg ebp,eax
  405c8c:	push   ds
  405c8d:	aad    0x19
  405c8f:	pop    ecx
  405c90:	es jecxz 0x405c77
  405c93:	stos   BYTE PTR es:[edi],al
  405c94:	out    dx,eax
  405c95:	fwait
  405c96:	cmp    al,0x4e
  405c98:	and    al,0xdc
  405c9a:	mov    al,0x5e
  405c9c:	ret    0x9459
  405c9f:	cmp    esp,esi
  405ca1:	stos   BYTE PTR es:[edi],al
  405ca2:	retf   
  405ca3:	scas   al,BYTE PTR es:[edi]
  405ca4:	shl    BYTE PTR [edi-0x4579b9b5],cl
  405caa:	sbb    BYTE PTR [edx],dh
  405cac:	mov    eax,ds:0x86e63db9
  405cb1:	dec    eax
  405cb2:	shl    bh,cl
  405cb4:	cwde   
  405cb5:	fucomp st(4)
  405cb7:	or     bh,ch
  405cb9:	inc    esp
  405cba:	imul   eax,ecx,0xffffffb1
  405cbd:	int    0xa8
  405cbf:	into   
  405cc0:	aam    0x0
  405cc2:	add    eax,0x8305e142
  405cc7:	fadd   DWORD PTR ds:0x6155f928
  405ccd:	dec    ebx
  405cce:	or     DWORD PTR [ecx-0x236b7e38],ecx
  405cd4:	das    
  405cd5:	mov    gs,ebp
  405cd7:	loopne 0x405c59
  405cd9:	fisub  DWORD PTR [edi-0x3e]
  405cdc:	mov    ?,WORD PTR [edx-0x78426ee7]
  405ce2:	inc    ecx
  405ce3:	shl    BYTE PTR [edx+0x3eb5dbb7],1
  405ce9:	inc    ecx
  405cea:	dec    esp
  405ceb:	push   es
  405cec:	jno    0x405d37
  405cee:	fdiv   DWORD PTR [ebx+0xb]
  405cf1:	in     al,0xa
  405cf3:	or     ah,BYTE PTR [ebp+0x1fe3f65a]
  405cf9:	lods   al,BYTE PTR ds:[esi]
  405cfa:	fsub   QWORD PTR [esi-0x1843d8f]
  405d00:	cli    
  405d01:	dec    edx
  405d02:	and    al,0x7
  405d04:	ret    0x8bf4
  405d07:	jns    0x405d47
  405d09:	addr16 pop edi
  405d0b:	nop
  405d0c:	imul   ebx,edx,0xffffffa8
  405d0f:	retf   0x785f
  405d12:	xlat   BYTE PTR ds:[ebx]
  405d13:	sub    esi,0xd7ec6cf5
  405d19:	add    esi,DWORD PTR [edx-0x26]
  405d1c:	add    eax,0x59f4628f
  405d21:	scas   al,BYTE PTR es:[edi]
  405d22:	loop   0x405cb2
  405d24:	int    0x3c
  405d26:	mov    BYTE PTR [esi+0x2565ae5],ah
  405d2c:	add    eax,0xf54a27f6
  405d31:	pop    es
  405d32:	mov    ah,0xa6
  405d34:	sbb    BYTE PTR [ecx-0x4e],cl
  405d37:	outs   dx,DWORD PTR ds:[esi]
  405d38:	gs test dl,dl
  405d3b:	pop    esi
  405d3c:	pop    ebp
  405d3d:	mov    al,ds:0x7182bc69
  405d42:	std    
  405d43:	jl     0x405ce0
  405d45:	sub    DWORD PTR [eax+eiz*8-0x3ea94e3d],ebx
  405d4c:	stos   BYTE PTR es:[edi],al
  405d4d:	jbe    0x405d2a
  405d4f:	call   0xe183:0x90440e3b
  405d56:	adc    esp,DWORD PTR [ebx-0x73]
  405d59:	mov    ebx,0x469b0bf1
  405d5e:	xor    al,0x3
  405d60:	pop    edx
  405d61:	push   esp
  405d62:	inc    ebp
  405d63:	push   eax
  405d64:	(bad)  
  405d65:	pop    esp
  405d66:	pop    es
  405d67:	test   eax,0x231ac8
  405d6c:	dec    edx
  405d6d:	sbb    bh,dl
  405d6f:	xor    DWORD PTR [edx-0x70],esi
  405d72:	je     0x405d58
  405d74:	sub    al,0x12
  405d76:	adc    DWORD PTR [eax+ecx*8-0xaed9be8],ebp
  405d7d:	(bad)  
  405d7e:	mov    edx,0x8c403726
  405d83:	add    eax,0xeab4682b
  405d88:	iret   
  405d89:	cmc    
  405d8a:	mov    edi,0x203ac067
  405d8f:	outs   dx,BYTE PTR ds:[esi]
  405d90:	sar    ah,0x76
  405d93:	inc    ebx
  405d94:	push   es
  405d95:	jge    0x405d96
  405d97:	sahf   
  405d98:	adc    edx,DWORD PTR ds:0xbc0ecab9
  405d9e:	mov    ebx,0x53ba85d7
  405da3:	pop    edx
  405da4:	ret    
  405da5:	xlat   BYTE PTR ds:[ebx]
  405da6:	dec    ecx
  405da7:	pop    edi
  405da8:	pop    ds
  405da9:	imul   esp,DWORD PTR [ebx],0xbe133559
  405daf:	inc    edx
  405db0:	jl     0x405e29
  405db2:	je     0x405d91
  405db4:	jle    0x405d7e
  405db6:	or     eax,0xd11f3fdf
  405dbb:	test   al,0xf0
  405dbd:	push   eax
  405dbe:	hlt    
  405dbf:	jle    0x405e30
  405dc1:	add    BYTE PTR [edi+0x1d],0x56
  405dc5:	sbb    eax,0x88563d32
  405dca:	adc    ecx,DWORD PTR [ebp-0x5b]
  405dcd:	rol    esp,1
  405dcf:	mov    esi,0xb707315c
  405dd4:	inc    edx
  405dd5:	adc    cl,dh
  405dd7:	int3   
  405dd8:	(bad)  
  405dd9:	cmp    al,BYTE PTR [ecx-0x14]
  405ddc:	dec    esp
  405ddd:	xor    esp,DWORD PTR [ebp+0x4e]
  405de0:	mov    cl,0x74
  405de2:	xchg   ecx,eax
  405de3:	daa    
  405de4:	push   ds
  405de5:	loop   0x405e3a
  405de7:	repz mov dh,0xb9
  405dea:	mov    al,0xfa
  405dec:	pop    esp
  405ded:	out    dx,al
  405dee:	inc    esi
  405def:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405df0:	sub    al,0xcb
  405df2:	xchg   ebx,eax
  405df3:	mov    DWORD PTR [ebp+0x70],esp
  405df6:	(bad)
  405dfb:	ror    BYTE PTR [ecx+0x1eb24ee8],0xba
  405e02:	scas   eax,DWORD PTR es:[edi]
  405e03:	cwde   
  405e04:	shl    DWORD PTR [edi-0x15e7db0],0xd1
  405e0b:	mov    dl,dh
  405e0d:	push   cs
  405e0e:	retf   
  405e0f:	inc    edx
  405e10:	xchg   ebp,eax
  405e11:	out    dx,eax
  405e12:	sbb    al,0xd
  405e14:	cmp    al,0xe6
  405e16:	rcl    edi,1
  405e18:	jle    0x405e43
  405e1a:	push   eax
  405e1b:	mov    al,0xd0
  405e1d:	adc    ch,BYTE PTR [esp+esi*1-0x75]
  405e21:	out    dx,al
  405e22:	mov    ebx,0xefdf19ac
  405e27:	mov    edi,DWORD PTR [edi+0x57]
  405e2a:	pop    ebx
  405e2b:	xor    dh,BYTE PTR [edi]
  405e2d:	sti    
  405e2e:	cmc    
  405e2f:	ss cli 
  405e31:	sub    BYTE PTR [ecx-0x5e452314],dh
  405e37:	not    DWORD PTR [edi-0x4f]
  405e3a:	mov    ch,0x7b
  405e3c:	inc    edx
  405e3d:	xchg   ah,ah
  405e3f:	pop    edi
  405e40:	pop    es
  405e41:	aam    0xab
  405e43:	dec    ebx
  405e44:	cwde   
  405e45:	inc    esp
  405e46:	dec    ebx
  405e47:	inc    esi
  405e48:	mov    ecx,0xda54e2aa
  405e4d:	jmp    0x405e84
  405e4f:	scas   al,BYTE PTR es:[edi]
  405e50:	test   DWORD PTR [bp+si],ebx
  405e53:	scas   eax,DWORD PTR es:[edi]
  405e54:	push   ebp
  405e55:	jbe    0x405e15
  405e57:	cmp    BYTE PTR [edx-0x7ddcab],bl
  405e5d:	cmp    al,0x94
  405e5f:	dec    eax
  405e60:	imul   ebp,edx,0x5f
  405e63:	ss pop edi
  405e65:	in     al,dx
  405e66:	xor    edx,esp
  405e68:	mov    edx,0x8d3cff99
  405e6d:	hlt    
  405e6e:	(bad)  
  405e70:	adc    al,0x1
  405e72:	mov    es,WORD PTR [esi*8+0xad49495]
  405e79:	in     al,0xd3
  405e7b:	cmp    eax,0x6e18908f
  405e80:	or     al,0xb0
  405e82:	retf   
  405e83:	push   ds
  405e84:	repz inc eax
  405e86:	mov    BYTE PTR [edi+0x2ad9b66c],bh
  405e8c:	mov    cl,0x1f
  405e8e:	adc    bl,BYTE PTR [ebx-0x4059553d]
  405e94:	xlat   BYTE PTR ds:[ebx]
  405e95:	aas    
  405e96:	and    DWORD PTR [edi-0x1fd280e4],ebx
  405e9c:	cmp    eax,0xdcf23e5f
  405ea1:	sub    al,0x40
  405ea3:	inc    esp
  405ea5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ea6:	push   ebp
  405ea7:	(bad)  
  405ea8:	dec    ebp
  405ea9:	dec    ebp
  405eaa:	pop    esp
  405eab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405eac:	mov    bh,0x7
  405eae:	(bad)  
  405eaf:	outs   dx,DWORD PTR ds:[esi]
  405eb0:	or     al,0x8b
  405eb2:	sub    ecx,eax
  405eb4:	pop    ds
  405eb5:	and    ebx,esp
  405eb7:	lds    ebx,FWORD PTR [ebp+eax*8-0x20ded411]
  405ebe:	aaa    
  405ebf:	sub    BYTE PTR [edx-0x574c71c],cl
  405ec5:	fcmove st,st(6)
  405ec7:	add    bh,dl
  405ec9:	les    edx,FWORD PTR [ebx-0x1689f742]
  405ecf:	mov    bl,0x1
  405ed1:	scas   eax,DWORD PTR es:[edi]
  405ed2:	imul   ebx,DWORD PTR ds:0x41083596,0xffffffd8
  405ed9:	std    
  405eda:	pop    ecx
  405edb:	lods   al,BYTE PTR ds:[esi]
  405edc:	ss mov dh,0x76
  405edf:	scas   eax,DWORD PTR es:[edi]
  405ee0:	jg     0x405f04
  405ee2:	xor    ecx,DWORD PTR [esi-0x52ea67e7]
  405ee8:	(bad)  
  405ee9:	in     al,dx
  405eea:	cmc    
  405eeb:	adc    BYTE PTR [edi],0x9e
  405eee:	or     bl,dl
  405ef0:	jo     0x405f3c
  405ef2:	jle    0x405f12
  405ef4:	jmp    0x9a89:0x82b57aa1
  405efb:	mov    eax,0x171269ee
  405f00:	ja     0x405e98
  405f02:	sbb    edx,DWORD PTR [eax]
  405f04:	jmp    0x405f12
  405f06:	ror    BYTE PTR [esi],0xc
  405f09:	mov    cl,0xda
  405f0b:	ret    
  405f0c:	dec    ecx
  405f0d:	mov    ecx,0x9f253465
  405f12:	and    cl,BYTE PTR [eax]
  405f14:	and    ecx,ecx
  405f16:	push   0x482c7cc7
  405f1b:	popa   
  405f1c:	fwait
  405f1d:	jp     0x405f81
  405f1f:	pusha  
  405f20:	int    0xf4
  405f22:	add    al,dl
  405f24:	and    dl,ah
  405f26:	call   0xe2bd:0xa43821d3
  405f2d:	sub    eax,esi
  405f2f:	nop
  405f30:	pop    ebx
  405f31:	xchg   edi,eax
  405f32:	xchg   edx,esi
  405f34:	dec    eax
  405f35:	dec    esi
  405f36:	jp     0x405fb3
  405f38:	push   0x9c05a4ce
  405f3d:	cmc    
  405f3e:	out    dx,al
  405f3f:	fnstsw WORD PTR [edi]
  405f41:	dec    esp
  405f42:	mov    ds:0x385ea910,al
  405f47:	jbe    0x405f0e
  405f49:	hlt    
  405f4a:	add    ah,BYTE PTR [esi]
  405f4c:	inc    ecx
  405f4d:	jns    0x405f86
  405f4f:	js     0x405f2a
  405f51:	jnp    0x405fc5
  405f53:	mov    edx,ebx
  405f55:	cwde   
  405f56:	lahf   
  405f57:	sbb    BYTE PTR [ecx+0x72],ah
  405f5a:	pop    ss
  405f5b:	test   BYTE PTR gs:[ebx+0x28],0x2a
  405f60:	mov    ah,0x3c
  405f62:	jmp    DWORD PTR [ecx+0x5f]
  405f65:	and    al,0x63
  405f67:	jne    0x405f49
  405f69:	clc    
  405f6a:	lahf   
  405f6b:	(bad)  
  405f6c:	lods   eax,DWORD PTR ds:[esi]
  405f6d:	mov    dh,0xba
  405f6f:	or     eax,DWORD PTR [edx]
  405f71:	mov    eax,db1
  405f74:	ins    DWORD PTR es:[edi],dx
  405f75:	jbe    0x405fba
  405f77:	mov    bh,0x80
  405f79:	pushf  
  405f7a:	xchg   ebp,eax
  405f7b:	push   es
  405f7c:	call   0xb4594bf8
  405f81:	addr16 mov al,ds:0xdebb
  405f85:	xor    al,0x40
  405f87:	inc    ebx
  405f88:	pusha  
  405f89:	inc    ebp
  405f8a:	test   al,0xb5
  405f8c:	or     cl,cl
  405f8e:	cmp    bl,BYTE PTR [esi+eax*4]
  405f91:	(bad)  
  405f92:	fbld   TBYTE PTR [eax-0x70b99742]
  405f98:	fsubr  st(3),st
  405f9a:	mov    ch,0x82
  405f9c:	and    dh,dl
  405f9e:	je     0x405fa8
  405fa0:	pusha  
  405fa1:	pop    ds
  405fa2:	and    al,0xfc
  405fa4:	add    ah,0xa4
  405fa7:	shr    DWORD PTR [ecx],1
  405fa9:	mov    eax,0x4a3df899
  405fae:	pusha  
  405faf:	mov    ?,WORD PTR cs:[ebp-0x36]
  405fb3:	dec    eax
  405fb4:	lock icebp 
  405fb6:	sahf   
  405fb7:	push   cs
  405fb8:	mov    ds,WORD PTR [edi+0x4a]
  405fbb:	out    dx,al
  405fbc:	xor    al,0x14
  405fbe:	int    0x29
  405fc0:	cmp    BYTE PTR [edx],cl
  405fc2:	bound  edx,QWORD PTR [ebx+0x78]
  405fc5:	or     eax,0x81c42e2e
  405fca:	jl     0x405f6b
  405fcc:	jne    0x405f50
  405fce:	and    BYTE PTR [ebp-0x7b],0x57
  405fd2:	ror    BYTE PTR [edx],cl
  405fd4:	fs aam 0x29
  405fd7:	sahf   
  405fd8:	jp     0x40600b
  405fda:	int    0xa7
  405fdc:	inc    ebp
  405fdd:	cs mov dh,0x93
  405fe0:	(bad)  
  405fe1:	call   0xb3edb771
  405fe6:	push   ecx
  405fe7:	sar    DWORD PTR [eax+0x74c03ba4],0xa1
  405fee:	stos   BYTE PTR es:[edi],al
  405fef:	mov    bh,0x1d
  405ff1:	xchg   edx,eax
  405ff2:	in     eax,0x3e
  405ff4:	dec    ecx
  405ff5:	icebp  
  405ff6:	pop    edi
  405ff7:	sbb    al,0xa4
  405ff9:	xor    al,0xbe
  405ffb:	inc    edi
  405ffc:	add    BYTE PTR [esi],0x8e
  405fff:	mov    ebp,0x61853813
  406004:	jmp    0x3c434b7e
  406009:	int    0x7b
  40600b:	jg     0x406022
  40600d:	das    
  40600e:	xor    al,0x3b
  406010:	das    
  406011:	mov    eax,0xbd0f43ff
  406016:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406017:	and    ebp,DWORD PTR [esi+0x21]
  40601a:	pop    ebx
  40601b:	mov    al,ds:0x6d7f2c90
  406020:	mov    esi,0x28b4a0cd
  406025:	jne    0x405fec
  406027:	mov    WORD PTR [eax-0x6a872fe9],fs
  40602d:	test   DWORD PTR [ebx+0x55],esi
  406030:	mov    dl,0xa5
  406032:	outs   dx,BYTE PTR ds:[esi]
  406033:	iret   
  406034:	es cli 
  406036:	jbe    0x406030
  406038:	aam    0x96
  40603a:	pop    ds
  40603b:	xchg   ebx,eax
  40603c:	inc    ecx
  40603d:	jmp    0xcfb4da32
  406042:	sub    al,0xbe
  406044:	xchg   esi,eax
  406045:	sbb    dh,cl
  406047:	shl    DWORD PTR [ecx+0x1cd0d375],cl
  40604d:	and    al,0x47
  40604f:	lods   eax,DWORD PTR ds:[esi]
  406050:	outs   dx,DWORD PTR ds:[esi]
  406051:	imul   esi,DWORD PTR [edx+0x288bd827],0x8d51bcf
  40605b:	push   ebx
  40605c:	dec    ebx
  40605d:	mov    bl,0x93
  40605f:	push   edx
  406060:	dec    ebx
  406061:	cld    
  406062:	jb     0x4060be
  406064:	xor    al,BYTE PTR [edi]
  406066:	repnz dec edi
  406068:	sbb    DWORD PTR [edi+0x47],0x4ed0c48a
  40606f:	imul   ebx,edi,0x541e575c
  406075:	scas   al,BYTE PTR es:[edi]
  406076:	fs scas eax,DWORD PTR es:[edi]
  406078:	mov    ecx,0xa17caf74
  40607d:	jbe    0x4060f5
  40607f:	xor    ebx,edx
  406081:	out    0x4d,al
  406083:	data16 adc BYTE PTR [ecx+ebx*8],ch
  406087:	dec    esi
  406088:	push   eax
  406089:	dec    eax
  40608a:	jae    0x4060fd
  40608c:	sbb    al,0x32
  40608e:	push   gs
  406090:	xchg   ecx,eax
  406091:	jne    0x4060b0
  406093:	imul   edi,DWORD PTR [eax],0x1a
  406096:	icebp  
  406097:	pop    ss
  406098:	sbb    DWORD PTR [ebp+0x3c],edi
  40609b:	cmp    bh,BYTE PTR [eax+0x6b6cf2ea]
  4060a1:	test   DWORD PTR [ebx-0x74],ebx
  4060a4:	(bad)  
  4060a5:	xor    BYTE PTR ds:0x2987128a,al
  4060ab:	retf   
  4060ac:	fwait
  4060ad:	push   ebx
  4060ae:	(bad)  
  4060af:	(bad)  
  4060b1:	loope  0x406037
  4060b3:	dec    ecx
  4060b4:	mov    ch,0x4a
  4060b6:	push   edi
  4060b7:	das    
  4060b8:	fwait
  4060b9:	shr    ebp,1
  4060bb:	sbb    al,0xd7
  4060bd:	or     dh,BYTE PTR [ecx+edx*2+0x315b120a]
  4060c4:	aad    0x9
  4060c6:	dec    ecx
  4060c7:	popa   
  4060c8:	pop    ebx
  4060c9:	pusha  
  4060ca:	call   0x7a79af08
  4060cf:	add    DWORD PTR [ebp-0x7bc89064],0xf4ef1cb8
  4060d9:	sbb    ebx,DWORD PTR [edx+0x4657b0b5]
  4060df:	dec    edi
  4060e0:	jno    0x4060ef
  4060e2:	retf   0xb2a4
  4060e5:	outs   dx,DWORD PTR ds:[esi]
  4060e6:	(bad)  
  4060e7:	pusha  
  4060e8:	pusha  
  4060e9:	add    edx,edx
  4060eb:	add    eax,0x51258f15
  4060f0:	ins    DWORD PTR es:[edi],dx
  4060f1:	fcomi  st,st(0)
  4060f3:	sub    dh,BYTE PTR [ebp+0x154a907f]
  4060f9:	jp     0x40615c
  4060fb:	mov    edx,0xd57705b1
  406100:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406101:	lods   al,BYTE PTR ds:[esi]
  406102:	adc    BYTE PTR [ecx-0xc1e2f3d],ah
  406108:	retf   0x51c0
  40610b:	inc    edx
  40610c:	dec    edi
  40610d:	ss pop eax
  40610f:	and    DWORD PTR [ebp+0x5f],eax
  406112:	add    DWORD PTR [ebx+0x2baf365b],eax
  406118:	xchg   edi,eax
  406119:	mov    al,0x86
  40611b:	cmp    DWORD PTR [edi+0x464e1931],edi
  406121:	and    eax,0x3abc8073
  406126:	scas   eax,DWORD PTR es:[edi]
  406127:	mov    ebp,0xbfde49e9
  40612c:	mov    edi,0x5fc64435
  406131:	and    eax,0x3fc9d9fb
  406136:	in     al,dx
  406137:	int    0x92
  406139:	mov    edi,0xd0c93892
  40613e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40613f:	and    DWORD PTR [ecx-0x41],0xae8e4eea
  406146:	aas    
  406147:	aas    
  406148:	jo     0x406186
  40614a:	fisubr DWORD PTR [ebx-0x7be1021f]
  406150:	test   eax,0x5a64e75f
  406155:	mov    esi,0xdffd77e2
  40615a:	not    DWORD PTR [edx-0x58]
  40615d:	adc    al,al
  40615f:	test   BYTE PTR [esp+ecx*2],cl
  406162:	inc    esp
  406163:	jno    0x40619b
  406165:	out    0x1d,eax
  406167:	sbb    eax,0x5986d17b
  40616c:	add    eax,0x20bc300e
  406171:	ret    0x97d7
  406174:	jb     0x406130
  406176:	jo     0x406123
  406178:	xchg   DWORD PTR [esi-0x7a],ebx
  40617b:	pop    esi
  40617c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40617d:	inc    ebp
  40617e:	pop    ebx
  40617f:	mov    edi,esp
  406181:	or     eax,0xd7d0128
  406186:	test   eax,0x6fa6474
  40618b:	fptan  
  40618d:	jl     0x4061bb
  40618f:	addr16 aad 0x85
  406192:	push   esp
  406193:	jp     0x406159
  406195:	inc    ebx
  406196:	mov    bl,0xa7
  406198:	inc    edi
  406199:	push   ebp
  40619a:	lahf   
  40619b:	fimul  WORD PTR [ecx+0x18288e75]
  4061a1:	cmp    bh,bh
  4061a3:	or     BYTE PTR ds:0x6c5e7801,0x9
  4061aa:	mov    ebx,0xffc4c159
  4061af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4061b0:	cld    
  4061b1:	iret   
  4061b2:	les    edx,FWORD PTR [ecx+0x28]
  4061b5:	pop    edx
  4061b6:	mov    esp,0xe426f09a
  4061bb:	push   ds
  4061bc:	xchg   ebx,eax
  4061bd:	cli    
  4061be:	cli    
  4061bf:	add    BYTE PTR [edi+edx*1+0x67],ah
  4061c3:	popf   
  4061c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4061c5:	pop    esi
  4061c6:	sbb    ecx,ecx
  4061c8:	or     edx,DWORD PTR [ecx-0x1f]
  4061cb:	mov    edx,0x499c01f7
  4061d0:	xor    al,0x13
  4061d2:	out    dx,eax
  4061d3:	mov    ds:0x61d922a1,eax
  4061d8:	mov    ds:0x7bc8cb58,eax
  4061dd:	ret    
  4061de:	psubusb mm0,QWORD PTR [edx]
  4061e1:	fwait
  4061e2:	sti    
  4061e3:	mov    ebx,ebx
  4061e5:	fwait
  4061e6:	ret    
  4061e7:	fcom   DWORD PTR [edi]
  4061e9:	jb     0x4061f5
  4061eb:	adc    al,0x5f
  4061ed:	into   
  4061ee:	bound  ecx,QWORD PTR [edi]
  4061f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4061f1:	or     al,0xc8
  4061f3:	adc    al,0x58
  4061f5:	es popf 
  4061f7:	and    eax,0xa2e1c395
  4061fc:	sub    al,0x60
  4061fe:	pusha  
  4061ff:	neg    BYTE PTR [esi+0x16]
  406202:	push   0xffffffb9
  406204:	mov    eax,0x30f6611
  406209:	aaa    
  40620a:	inc    edx
  40620b:	cli    
  40620c:	jmp    0x40621a
  40620e:	(bad)  
  40620f:	mov    ecx,0x5a14ef41
  406214:	add    edi,DWORD PTR [esi]
  406216:	pop    ebp
  406217:	lahf   
  406218:	stos   DWORD PTR es:[edi],eax
  406219:	iret   
  40621a:	aad    0xa9
  40621c:	test   al,0x34
  40621e:	sub    edx,DWORD PTR [ebp+0x5fd2d948]
  406224:	into   
  406225:	pop    edi
  406226:	adc    DWORD PTR [edx],0x5f807a07
  40622c:	test   al,0x66
  40622e:	mov    cl,0x68
  406230:	pop    esp
  406231:	push   ds
  406232:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406233:	sub    BYTE PTR [ebx-0x71efc665],bh
  406239:	jbe    0x4061f9
  40623b:	inc    ebp
  40623c:	out    dx,eax
  40623d:	leave  
  40623e:	and    eax,0x3448823
  406243:	cwde   
  406244:	mov    ah,0x7b
  406246:	adc    al,0x6a
  406248:	mov    dl,0xd6
  40624a:	or     eax,0xdecbb857
  40624f:	std    
  406250:	fs add eax,0x75eb43e7
  406256:	in     al,0xa5
  406258:	or     eax,ecx
  40625a:	dec    esi
  40625b:	call   DWORD PTR [ebx+0x53]
  40625e:	mov    esp,0x2f8ce390
  406263:	dec    ebp
  406264:	lds    si,DWORD PTR [ecx+0x56]
  406268:	stc    
  406269:	stc    
  40626a:	std    
  40626b:	mov    edi,0x2fc7d491
  406270:	retf   0x302a
  406273:	stos   BYTE PTR es:[edi],al
  406274:	push   cs
  406275:	xchg   ebp,eax
  406276:	inc    esp
  406277:	stos   BYTE PTR es:[edi],al
  406278:	aam    0xc4
  40627a:	and    DWORD PTR [ebx+0x3d],ebp
  40627d:	lods   eax,DWORD PTR ds:[esi]
  40627e:	ins    BYTE PTR es:[edi],dx
  40627f:	stos   DWORD PTR es:[edi],eax
  406280:	xchg   BYTE PTR [ebx+0x74d8e90d],ah
  406286:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406287:	call   0x498181e2
  40628c:	mov    ebp,0x7cad9f7b
  406291:	jmp    0xe6fca927
  406296:	aaa    
  406297:	xor    BYTE PTR [edi],bh
  406299:	sub    BYTE PTR [ebp+0xa],dh
  40629c:	add    eax,0x8b6ef433
  4062a1:	dec    esp
  4062a2:	aaa    
  4062a3:	adc    eax,0x82c09fa
  4062a8:	mov    edx,0xecd2a337
  4062ad:	cmc    
  4062ae:	push   eax
  4062af:	add    BYTE PTR ds:[eax-0x7c07643c],ch
  4062b6:	test   BYTE PTR [ebx+0x21],ch
  4062b9:	dec    edi
  4062ba:	push   ecx
  4062bb:	xchg   esp,eax
  4062bc:	in     eax,0xc4
  4062be:	out    dx,eax
  4062bf:	jecxz  0x406245
  4062c1:	mov    al,ds:0x25e971bb
  4062c6:	cmp    al,BYTE PTR [bp+si-0x3372]
  4062cb:	div    DWORD PTR [esi+ebp*8+0xc]
  4062cf:	lock call 0x4408:0x96a097da
  4062d7:	pusha  
  4062d8:	xor    al,0x42
  4062da:	test   al,0x61
  4062dc:	lahf   
  4062dd:	imul   eax,eax,0x41
  4062e0:	and    al,0x7b
  4062e2:	retf   0xa206
  4062e5:	jnp    0x4062c5
  4062e7:	sti    
  4062e8:	or     eax,0xb07597d7
  4062ed:	(bad)  
  4062ee:	and    eax,0x4dae2140
  4062f3:	cmc    
  4062f4:	xchg   BYTE PTR [esi],ah
  4062f6:	mov    ebp,0x33afa5e2
  4062fb:	loope  0x40637b
  4062fd:	pop    ebx
  4062fe:	jmp    0x3b895817
  406303:	and    DWORD PTR [eax],edx
  406305:	pop    es
  406306:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406307:	scas   al,BYTE PTR es:[edi]
  406308:	pop    edi
  406309:	nop
  40630a:	(bad)  
  40630b:	mov    eax,0x69dd969a
  406310:	scas   al,BYTE PTR es:[edi]
  406311:	mov    dl,0xfc
  406313:	push   esp
  406314:	xchg   esp,eax
  406315:	xchg   esi,eax
  406316:	inc    ebx
  406317:	push   ebp
  406318:	sub    cl,BYTE PTR [ebp+0x527ab719]
  40631e:	hlt    
  40631f:	jbe    0x406302
  406321:	(bad)  [edi]
  406323:	xor    eax,0x28f38aa8
  406328:	fld    DWORD PTR [ebx-0x69455691]
  40632e:	jne    0x406391
  406330:	sbb    eax,0x1d027435
  406335:	aad    0xd6
  406337:	pop    esi
  406338:	dec    ch
  40633a:	es in  eax,dx
  40633c:	mov    DWORD PTR [esi-0x3b3e2bef],ebx
  406342:	add    al,0x88
  406344:	jmp    0xfe2d:0x6d355209
  40634b:	jmp    0x64cc:0xff467908
  406352:	out    dx,eax
  406353:	pop    eax
  406354:	out    0x8f,eax
  406356:	fmul   DWORD PTR [ebp-0x49]
  406359:	jl     0x4062ee
  40635b:	fist   WORD PTR [ebx-0x3c]
  40635e:	loope  0x4062e9
  406360:	and    eax,0x819b0f5d
  406365:	push   ebx
  406366:	mov    bl,0x7f
  406368:	out    0x44,eax
  40636a:	lods   eax,DWORD PTR ds:[esi]
  40636b:	lahf   
  40636c:	js     0x4063aa
  40636e:	mov    edx,0x2d4fb160
  406373:	jg     0x4063e2
  406375:	push   ebp
  406376:	cmp    BYTE PTR [eax-0x6b],0x34
  40637a:	mov    eax,0xc2fe0ee0
  40637f:	pusha  
  406380:	xchg   BYTE PTR [edi+0x32779ffb],bh
  406386:	adc    edi,DWORD PTR [eax+0xae6ad7a]
  40638c:	and    BYTE PTR [edi-0x32490942],dh
  406392:	div    DWORD PTR [eax-0x49]
  406395:	jnp    0x40632a
  406397:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406398:	inc    edx
  406399:	lods   eax,DWORD PTR ds:[esi]
  40639a:	sub    dl,BYTE PTR [edi]
  40639c:	dec    ebp
  40639d:	shl    DWORD PTR [edi],1
  40639f:	push   esi
  4063a0:	mov    ds:0x97a088b4,eax
  4063a5:	or     al,0xa2
  4063a7:	ret    0x3b71
  4063aa:	popa   
  4063ab:	mov    ds:0xe4d446ab,al
  4063b0:	outs   dx,DWORD PTR ds:[esi]
  4063b1:	dec    ebx
  4063b2:	xchg   DWORD PTR [esi],ebx
  4063b4:	push   ecx
  4063b5:	jb     0x40642e
  4063b7:	aad    0xc
  4063b9:	addr16 jb 0x406365
  4063bc:	jp     0x4063bf
  4063be:	adc    ebp,DWORD PTR [ecx]
  4063c0:	lods   eax,DWORD PTR ds:[esi]
  4063c1:	arpl   WORD PTR [esi+0x6e],ax
  4063c4:	mov    ds:0x8aa07206,al
  4063c9:	mov    bl,al
  4063cb:	jge    0x40638b
  4063cd:	leave  
  4063ce:	lock fwait
  4063d0:	lea    edi,[eax+0x78]
  4063d3:	ds xor eax,0x76e55a4a
  4063d9:	inc    ecx
  4063da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063db:	jae    0x40636c
  4063dd:	adc    DWORD PTR [eax-0x6c114502],0xffffff82
  4063e4:	sub    al,0x95
  4063e6:	cli    
  4063e7:	sbb    ebp,DWORD PTR [esi-0xb4a9675]
  4063ed:	xchg   ebp,eax
  4063ee:	lahf   
  4063ef:	xlat   BYTE PTR ds:[ebx]
  4063f0:	sub    eax,0xe92e883f
  4063f5:	(bad)  
  4063f7:	pop    ss
  4063f8:	push   0xc22ed9d8
  4063fd:	pop    ebx
  4063fe:	mov    ecx,0xdb274f26
  406403:	push   cs
  406404:	fisubr DWORD PTR [ebx+0x63b678a6]
  40640a:	inc    esp
  40640b:	icebp  
  40640c:	dec    eax
  40640d:	push   esi
  40640e:	in     eax,0xa7
  406410:	dec    esi
  406411:	adc    edi,eax
  406413:	test   al,0x77
  406415:	mov    ah,0x2
  406417:	gs call 0x46a77af2
  40641d:	push   es
  40641e:	pusha  
  40641f:	cmp    ebp,ebp
  406421:	out    0x93,eax
  406423:	xchg   edx,eax
  406424:	in     al,0x13
  406426:	mov    bh,0x92
  406428:	dec    edi
  406429:	mov    bl,0xde
  40642b:	add    esp,DWORD PTR [edx]
  40642d:	mov    dh,0x11
  40642f:	xor    bh,BYTE PTR ds:0xccb31222
  406435:	lock retf 
  406437:	test   DWORD PTR ds:0x766924f7,ebx
  40643d:	inc    ecx
  40643e:	in     eax,dx
  40643f:	nop
  406440:	inc    ecx
  406441:	xor    DWORD PTR [esi],eax
  406443:	rcr    DWORD PTR [ecx+0x1993462a],cl
  406449:	or     edx,edi
  40644b:	cmp    eax,0xbde99422
  406450:	pop    esi
  406451:	lods   eax,DWORD PTR ds:[esi]
  406452:	js     0x4064b4
  406454:	dec    edi
  406455:	xchg   edi,eax
  406456:	or     esi,DWORD PTR [eax]
  406458:	add    ch,BYTE PTR [eax-0x48d822e0]
  40645e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40645f:	sbb    BYTE PTR [ecx+0x29c9a40],ch
  406465:	mov    edx,0x66876d48
  40646a:	or     eax,DWORD PTR [ebp+0x5f09ad20]
  406470:	jo     0x406479
  406472:	loop   0x4064c2
  406474:	xlat   BYTE PTR ds:[ebx]
  406475:	call   0xe0df2e1b
  40647a:	sub    dl,BYTE PTR [esi-0x13]
  40647d:	xchg   DWORD PTR [ebp-0x7aafb2bc],eax
  406483:	mov    ds:0x86869194,al
  406488:	stos   DWORD PTR es:[edi],eax
  406489:	test   ah,dl
  40648b:	jbe    0x4064f9
  40648d:	stc    
  40648e:	jo     0x4064e5
  406490:	jmp    0x4064df
  406492:	std    
  406493:	mov    dl,0x64
  406495:	fisub  WORD PTR [eax]
  406497:	shl    cl,1
  406499:	push   ds
  40649a:	push   ss
  40649b:	addr16 pop ecx
  40649d:	lods   al,BYTE PTR ds:[esi]
  40649e:	ins    DWORD PTR es:[edi],dx
  40649f:	popa   
  4064a0:	add    BYTE PTR [ebx],0xa8
  4064a3:	test   eax,0x4bb16c1a
  4064a8:	sbb    eax,0xddb967fd
  4064ad:	test   BYTE PTR [ecx-0x1d],bh
  4064b0:	scas   eax,DWORD PTR es:[edi]
  4064b1:	(bad)  
  4064b2:	sbb    edx,edi
  4064b4:	outs   dx,BYTE PTR ds:[esi]
  4064b5:	aad    0x0
  4064b7:	dec    esi
  4064b8:	sbb    ebx,DWORD PTR [eax]
  4064ba:	mov    eax,0x5cf77ca6
  4064bf:	ins    BYTE PTR es:[edi],dx
  4064c0:	sub    DWORD PTR [edi],esp
  4064c2:	(bad)  
  4064c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4064c5:	inc    edx
  4064c6:	in     al,0x77
  4064c8:	add    al,0x3a
  4064ca:	or     DWORD PTR [edx+0x69],esp
  4064cd:	mov    WORD PTR [esp+esi*8],?
  4064d0:	mov    esp,0xb0f0b0cd
  4064d5:	mov    eax,ds:0xf7fffd1d
  4064da:	push   esp
  4064db:	fld    DWORD PTR [ebx+0x614a4dc]
  4064e1:	out    0x29,eax
  4064e3:	fadd   st,st(7)
  4064e5:	jg     0x4064aa
  4064e7:	(bad)  
  4064e8:	ins    DWORD PTR es:[edi],dx
  4064e9:	das    
  4064ea:	adc    dl,BYTE PTR [edx+0x72758d04]
  4064f0:	cmp    esi,eax
  4064f2:	and    DWORD PTR [ebx+0x1f0fb266],0xffffffd1
  4064f9:	or     esi,esp
  4064fb:	mov    ds:0x53f9b24d,eax
  406500:	xlat   BYTE PTR ds:[ebx]
  406501:	push   ss
  406502:	cdq    
  406503:	sti    
  406504:	data16 jae 0x40655e
  406507:	cmp    bl,BYTE PTR [ebx]
  406509:	xor    eax,0xaecc85b5
  40650e:	pusha  
  40650f:	mov    al,ds:0x1fe98ae5
  406514:	fisubr DWORD PTR [edi+ecx*1-0x2409ff39]
  40651b:	adc    BYTE PTR es:[esi-0x32],ah
  40651f:	test   BYTE PTR [esi+0xc4b8e36],dl
  406525:	add    eax,0x601fd975
  40652a:	test   dh,ch
  40652c:	rcl    dh,0xd5
  40652f:	and    BYTE PTR [eax+0x15],0x87
  406533:	sbb    ebx,edx
  406535:	stos   BYTE PTR es:[edi],al
  406536:	inc    esp
  406537:	xor    BYTE PTR [ebx+0x5e380f12],0x17
  40653e:	push   esi
  40653f:	inc    edx
  406540:	add    edi,DWORD PTR ds:0xba5385bc
  406546:	mov    al,dh
  406548:	push   cs
  406549:	ss shr ah,1
  40654c:	mov    al,ds:0xacf27b0f
  406551:	jl     0x406528
  406553:	pushf  
  406554:	lock ins DWORD PTR es:[edi],dx
  406556:	sub    DWORD PTR ds:0x9e247ca8,edi
  40655c:	aam    0xf8
  40655e:	fistp  WORD PTR [ecx+eax*2-0x2]
  406562:	push   edi
  406563:	mov    ecx,cs
  406565:	pushf  
  406566:	or     ebx,0x5b
  406569:	mov    al,BYTE PTR ds:0x3bbd3ac6
  40656f:	pop    ebp
  406570:	ror    cl,1
  406572:	push   ss
  406573:	cmc    
  406574:	dec    edx
  406575:	mov    ds:0x1188bba9,eax
  40657a:	sub    ecx,0x5c3e5e56
  406580:	jg     0x406571
  406582:	xor    bh,BYTE PTR [esi]
  406584:	inc    esp
  406585:	rcl    DWORD PTR [esi],0xc1
  406588:	ds mov ch,0xa2
  40658b:	cwde   
  40658c:	loope  0x4065ab
  40658e:	or     BYTE PTR [ecx],dl
  406590:	mov    esi,0x358228ca
  406595:	xchg   ecx,eax
  406596:	(bad)  
  406598:	mov    edx,ebp
  40659a:	push   eax
  40659b:	sti    
  40659c:	iret   
  40659d:	fwait
  40659e:	enter  0x459d,0x74
  4065a2:	imul   esp,ecx,0x2630c447
  4065a8:	mov    edi,DWORD PTR [eax+0x3f6af532]
  4065ae:	popa   
  4065af:	jo     0x406575
  4065b1:	mov    edx,0xf9f01703
  4065b6:	call   0xd297:0xd905b0ca
  4065bd:	repz or eax,0xfdca6a60
  4065c3:	ins    BYTE PTR es:[edi],dx
  4065c4:	loope  0x4065e3
  4065c6:	pop    ebp
  4065c7:	push   edx
  4065c8:	sbb    esi,0x1d1873b5
  4065ce:	imul   edx,DWORD PTR [esi+0x362dfc74],0x2273a913
  4065d8:	loop   0x406647
  4065da:	(bad)  
  4065db:	(bad)  
  4065dc:	push   ecx
  4065dd:	(bad)
  4065e0:	mov    esp,0x5eac07c5
  4065e5:	repz mov gs,WORD PTR [esi]
  4065e8:	arpl   WORD PTR [esi+0x2b],dx
  4065eb:	mov    dh,BYTE PTR [ecx]
  4065ed:	div    DWORD PTR [edi]
  4065ef:	mov    ds:0xed96ebea,eax
  4065f4:	shl    BYTE PTR [ebx],cl
  4065f6:	sahf   
  4065f7:	sub    edi,edx
  4065f9:	dec    eax
  4065fa:	jb     0x4065ef
  4065fc:	std    
  4065fd:	rcr    bh,cl
  4065ff:	fmul   QWORD PTR [ebx]
  406601:	jnp    0xe2152bcc
  406607:	sbb    BYTE PTR [ecx],dh
  406609:	mov    ebp,0x1ccf4ee3
  40660e:	loope  0x4065ae
  406610:	inc    edx
  406611:	ret    0x62aa
  406614:	test   DWORD PTR ds:0xc03d2d47,eax
  40661a:	fist   DWORD PTR [ebx-0x19]
  40661d:	dec    ecx
  40661e:	pop    eax
  40661f:	or     al,0xe2
  406621:	xor    DWORD PTR [edi],edx
  406623:	cmp    al,0xf8
  406625:	in     al,0x12
  406627:	(bad)  
  406628:	mov    eax,0x51ea3bcb
  40662d:	cmp    eax,DWORD PTR [edx+ecx*8]
  406630:	and    DWORD PTR [ebp+0x11781ee4],0xffffffc2
  406637:	pop    ebx
  406638:	push   ecx
  40663a:	add    al,BYTE PTR [ecx]
  40663c:	dec    ebp
  40663d:	rcl    BYTE PTR [ebx-0x17dfdb4d],0xa3
  406644:	mov    ebp,0x291f3dbc
  406649:	xchg   esi,eax
  40664a:	add    eax,0xff938623
  40664f:	call   0x1a61:0xe3722ffa
  406656:	iret   
  406657:	stc    
  406658:	scas   al,BYTE PTR es:[edi]
  406659:	adc    al,0x5d
  40665b:	das    
  40665c:	mov    esp,0x8ea2233a
  406661:	sbb    eax,0xcfb3c15c
  406666:	or     edi,DWORD PTR [eax+0x2e3409f4]
  40666c:	cmp    al,0x1e
  40666e:	popa   
  40666f:	test   DWORD PTR [ecx+eax*1-0x55],eax
  406673:	cdq    
  406674:	cmp    BYTE PTR [edx+0x4a],ch
  406677:	jae    0x40668e
  406679:	dec    eax
  40667a:	mov    ebp,0xb2e212f9
  40667f:	in     al,dx
  406680:	adc    al,0x72
  406682:	mov    DWORD PTR [edx+edx*8-0x4a2cceec],0x48570684
  40668d:	aad    0xc8
  40668f:	in     eax,dx
  406690:	mov    ebx,0xe3dfe8d2
  406695:	inc    bx
  406697:	jnp    0x4066bc
  406699:	mov    ?,WORD PTR [ebx]
  40669b:	mov    ss,WORD PTR [ecx+0x63493c7e]
  4066a1:	sub    DWORD PTR [ebx-0x5ecd3caf],0xffffff96
  4066a8:	pusha  
  4066a9:	out    dx,eax
  4066aa:	add    DWORD PTR [ebp+ebx*8-0x55],esi
  4066ae:	xchg   esp,eax
  4066af:	cli    
  4066b0:	adc    DWORD PTR ds:0xb485f2a9,ebp
  4066b6:	ja     0x4066b4
  4066b8:	xor    al,0xcd
  4066ba:	pop    ebp
  4066bb:	call   0x8a3:0x39cef193
  4066c2:	sbb    al,0x4a
  4066c4:	jg     0x406703
  4066c6:	mov    cl,0xd1
  4066c8:	aam    0xa5
  4066ca:	add    DWORD PTR [ebx+0x1c],edi
  4066cd:	ds call 0x742c9ef8
  4066d3:	or     edx,edx
  4066d5:	and    DWORD PTR [ebp+0xc9f2697],ebp
  4066db:	repz cmp eax,0xae52865e
  4066e1:	xor    bl,dh
  4066e3:	push   edx
  4066e4:	test   eax,0x43e6d029
  4066e9:	arpl   sp,dx
  4066eb:	lahf   
  4066ec:	in     al,0x1b
  4066ee:	test   DWORD PTR [edx+0x55],esi
  4066f1:	jle    0x406694
  4066f3:	xchg   esp,eax
  4066f4:	mov    ebx,0x95af88c9
  4066f9:	in     eax,0xdb
  4066fb:	xor    cl,BYTE PTR [ebx+0x4c]
  4066fe:	iret   
  4066ff:	mov    ch,0xe2
  406701:	inc    edi
  406702:	jns    0x406727
  406704:	dec    esi
  406705:	push   esp
  406706:	push   0x767ce768
  40670b:	sub    esp,DWORD PTR [edx+0x73]
  40670e:	(bad)  
  40670f:	jmp    0x4066c7
  406711:	imul   eax,DWORD PTR [esp+ebp*2],0x62
  406715:	sbb    BYTE PTR ds:0xa45124a1,dl
  40671b:	fs int3 
  40671d:	fadd   QWORD PTR [edi-0x6b]
  406720:	das    
  406721:	mov    ebx,0xefb65ddd
  406726:	shl    DWORD PTR es:[esi],0xb
  40672a:	repz call 0x3e8a:0x5e430feb
  406732:	adc    bh,ch
  406734:	mov    ecx,0xb9934404
  406739:	pusha  
  40673a:	cld    
  40673b:	fsub   st,st(7)
  40673d:	or     DWORD PTR [eax],eax
  40673f:	aad    0x60
  406741:	imul   esi,DWORD PTR [ebp+0x48],0x6e
  406745:	ds daa 
  406747:	test   al,0x60
  406749:	in     eax,0x74
  40674b:	imul   ebx,DWORD PTR [esi-0x3a5debed],0x1df6b2ef
  406755:	retf   
  406756:	jns    0x40679b
  406758:	fidivr WORD PTR [esi-0x687e0d82]
  40675e:	dec    ebp
  40675f:	test   DWORD PTR [edx-0x31],eax
  406762:	cdq    
  406763:	inc    eax
  406764:	xor    dh,cl
  406766:	leave  
  406767:	retf   
  406768:	lods   al,BYTE PTR ds:[esi]
  406769:	repz dec eax
  40676b:	pop    edx
  40676c:	mov    eax,ds:0x9c28cb23
  406771:	cmp    al,0x54
  406773:	cmp    dh,dh
  406775:	sbb    eax,0xffffff92
  406778:	hlt    
  406779:	fucomi st,st(2)
  40677b:	repz cli 
  40677d:	mul    DWORD PTR [ecx]
  40677f:	sbb    BYTE PTR [ecx],bh
  406781:	loop   0x4067cd
  406783:	mov    al,0x18
  406785:	stos   DWORD PTR es:[edi],eax
  406786:	xor    ecx,DWORD PTR [edx+0xf]
  406789:	popf   
  40678a:	shl    BYTE PTR [ebx],1
  40678c:	and    eax,DWORD PTR [esi+0x56f3b79a]
  406792:	or     eax,DWORD PTR [ecx+0x598d04a0]
  406798:	mov    WORD PTR [edi+eiz*2+0x176889db],ss
  40679f:	cmp    ebp,0xf0e9f169
  4067a5:	outs   dx,DWORD PTR ds:[esi]
  4067a6:	jp     0x4067a5
  4067a8:	clc    
  4067a9:	jne    0x4067a4
  4067ab:	push   edi
  4067ac:	das    
  4067ad:	jae    0x4067f6
  4067af:	xor    eax,0x3d0f0648
  4067b4:	out    dx,eax
  4067b5:	or     ch,BYTE PTR [eax+0x79]
  4067b8:	retf   0xed79
  4067bb:	jnp    0x406809
  4067bd:	xchg   edx,eax
  4067be:	pop    ecx
  4067bf:	loop   0x40681d
  4067c1:	es adc eax,esp
  4067c4:	scas   eax,DWORD PTR es:[edi]
  4067c5:	fst    DWORD PTR [ebx]
  4067c7:	or     BYTE PTR [edi+0x56],cl
  4067ca:	jno    0x4067f6
  4067cc:	dec    edx
  4067cd:	jmp    0x28f76236
  4067d2:	adc    al,BYTE PTR [ebx]
  4067d4:	jae    0x406809
  4067d6:	(bad)  
  4067d7:	xor    eax,0xdd0c251b
  4067dc:	repz and edi,edx
  4067df:	cli    
  4067e0:	mov    ebx,0x5daf844a
  4067e5:	leave  
  4067e6:	mov    edi,0x55292b0f
  4067eb:	add    eax,0x3492fef3
  4067f0:	neg    cl
  4067f2:	xor    eax,0xbb6b9e28
  4067f8:	adc    esp,DWORD PTR [esi]
  4067fa:	add    al,0xed
  4067fc:	inc    ebp
  4067fd:	xor    al,0xf5
  4067ff:	push   0x5ac4d61e
  406804:	dec    edx
  406805:	(bad)  
  406806:	cmp    ch,BYTE PTR [ecx]
  406808:	xchg   esp,eax
  406809:	sti    
  40680a:	mov    BYTE PTR [eax+0x4],0xe6
  40680e:	xchg   BYTE PTR [ebx-0x6],dl
  406811:	jae    0x40684f
  406813:	sbb    ebx,DWORD PTR [ecx+0xe77d451]
  406819:	mov    ch,0x84
  40681b:	fwait
  40681c:	add    edi,esi
  40681e:	adc    BYTE PTR [ebp-0x3],0x12
  406822:	mov    ?,WORD PTR [ecx-0x75]
  406825:	dec    ebp
  406826:	aaa    
  406827:	das    
  406828:	shl    DWORD PTR [edi],0x3d
  40682b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40682c:	fwait
  40682d:	cmc    
  40682e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40682f:	push   ebp
  406830:	(bad)  [ecx]
  406832:	shl    DWORD PTR [ebp+0x2e],1
  406835:	nop
  406836:	out    0xf2,al
  406838:	in     al,0x32
  40683a:	lods   al,BYTE PTR ds:[esi]
  40683b:	xchg   ecx,eax
  40683c:	imul   BYTE PTR [ebx+0x1fc782c8]
  406842:	daa    
  406843:	and    dh,ch
  406845:	push   ebx
  406846:	mov    ebp,0x7e0d409d
  40684b:	mov    al,ds:0xd6b7a11
  406850:	push   edi
  406851:	clc    
  406852:	int    0x9d
  406854:	aad    0x4e
  406856:	or     al,BYTE PTR [esi-0x66df4008]
  40685c:	(bad)  
  40685e:	sub    eax,0x64bab36b
  406863:	xor    al,0xf8
  406865:	imul   ecx,DWORD PTR [eiz*4-0x77f8c868],0x402c44a3
  406870:	fsub   QWORD PTR [esi+0x6c]
  406873:	ror    DWORD PTR [eax],cl
  406875:	add    BYTE PTR [ebx],bh
  406877:	mov    al,ds:0xffc94d45
  40687c:	cli    
  40687d:	rcpps  xmm7,XMMWORD PTR ds:0xcc7b1031
  406884:	sub    bh,ah
  406886:	cdq    
  406887:	(bad)  
  406888:	out    0xe6,al
  40688a:	loop   0x406828
  40688c:	and    bh,cl
  40688e:	clc    
  40688f:	ffreep st(0)
  406891:	jne    0x4068fe
  406893:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406894:	shr    BYTE PTR [ecx-0x7e],cl
  406897:	and    al,0x4
  406899:	cwde   
  40689a:	and    edi,DWORD PTR [esi+0x3a8ed19f]
  4068a0:	gs xchg esp,eax
  4068a2:	call   0x39026b0d
  4068a7:	jp     0x406861
  4068a9:	add    ebp,ebp
  4068ab:	gs and al,0x6a
  4068ae:	loop   0x4068d1
  4068b0:	push   eax
  4068b1:	mov    WORD PTR [ecx],?
  4068b3:	ficom  WORD PTR [eax]
  4068b5:	mov    eax,0xefb9ab71
  4068ba:	mov    eax,ds:0x6c64ee9f
  4068bf:	cmp    ah,BYTE PTR fs:[ecx+0x4]
  4068c3:	std    
  4068c4:	adc    al,0x72
  4068c6:	sub    DWORD PTR [eax-0x4],edi
  4068c9:	or     cl,BYTE PTR [ebx]
  4068cb:	cmp    BYTE PTR [ebx],0xa0
  4068ce:	and    eax,0xcd14642a
  4068d3:	repz mov ch,0xb9
  4068d6:	xor    BYTE PTR [esi+0x30],0x83
  4068da:	popf   
  4068db:	retf   
  4068dc:	mov    bl,BYTE PTR ds:0x9586a4a8
  4068e2:	fldenv [ebx]
  4068e4:	clc    
  4068e5:	push   edi
  4068e6:	inc    ebp
  4068e7:	cmp    DWORD PTR ds:0x44ef8d6a,eax
  4068ed:	adc    BYTE PTR [edx-0x31],dl
  4068f0:	jg     0x406924
  4068f2:	mov    ds:0xc51f76c4,eax
  4068f7:	outs   dx,DWORD PTR ds:[esi]
  4068f8:	adc    edx,DWORD PTR [esi-0xe]
  4068fb:	inc    ebx
  4068fc:	clc    
  4068fd:	add    bh,BYTE PTR [edx+eiz*4-0x37fb025c]
  406904:	adc    eax,0x47573d29
  406909:	jge    0x40690a
  40690b:	aaa    
  40690c:	(bad)  
  40690d:	or     esi,DWORD PTR ds:[ecx-0x5]
  406911:	cmc    
  406912:	mov    eax,ds:0xe5f7c873
  406917:	pop    esp
  406918:	and    eax,0x36acff97
  40691d:	xchg   esp,eax
  40691e:	jb     0x40697a
  406920:	aam    0xd9
  406922:	jp     0x406968
  406924:	jge    0x406957
  406926:	rcr    DWORD PTR [ebx+0x1e],1
  406929:	sub    eax,0x632e7453
  40692e:	lods   al,BYTE PTR ds:[esi]
  40692f:	leave  
  406930:	inc    ecx
  406931:	sub    esp,DWORD PTR ds:0xfa728053
  406937:	jp     0x4069a7
  406939:	or     esp,0xb573d384
  40693f:	inc    edx
  406940:	pop    ebx
  406941:	cmc    
  406942:	pop    ecx
  406943:	ret    
  406944:	hlt    
  406945:	out    dx,al
  406946:	rol    BYTE PTR [ecx+0x50],1
  406949:	ret    0x40ae
  40694c:	mov    ebp,0x2cf86767
  406951:	dec    ebp
  406952:	mov    eax,ds:0x5d810e0e
  406957:	mov    ds:0xa0985f05,eax
  40695c:	push   es
  40695d:	mov    dl,0x7
  40695f:	xor    eax,0x214860d0
  406964:	std    
  406965:	outs   dx,BYTE PTR ds:[esi]
  406966:	mov    al,cl
  406968:	inc    esp
  406969:	cmc    
  40696a:	jg     0x4069d1
  40696c:	pop    edi
  40696d:	pop    eax
  40696e:	fs pushf 
  406970:	sub    esi,DWORD PTR ds:0xcf2af095
  406976:	fs into 
  406978:	sbb    al,0x55
  40697a:	xor    dh,BYTE PTR [eax]
  40697c:	mov    ebp,fs
  40697e:	les    ebx,FWORD PTR [ebp+edi*1+0x4f71d183]
  406985:	rcl    DWORD PTR [esi-0x5e],0x9f
  406989:	das    
  40698a:	test   DWORD PTR [eax-0x13d5116b],edi
  406990:	shl    BYTE PTR [ecx+0x6d],cl
  406993:	sub    esp,DWORD PTR [eax+eiz*1+0x0]
  406997:	shr    DWORD PTR [ecx],cl
  406999:	ret    
  40699a:	repnz pop eax
  40699c:	add    DWORD PTR [esi-0xd],esi
  40699f:	and    DWORD PTR [eax+esi*2],ecx
  4069a2:	aad    0x9
  4069a4:	pop    ss
  4069a5:	dec    esi
  4069a6:	mov    edi,0xf1f88567
  4069ab:	and    esi,esi
  4069ad:	mov    al,0xb4
  4069af:	inc    eax
  4069b1:	xlat   BYTE PTR ds:[ebx]
  4069b2:	push   esi
  4069b3:	pop    esp
  4069b4:	mov    esp,0x566e0ba5
  4069b9:	repnz imul ecx,DWORD PTR [ebx],0xffffffd0
  4069bd:	mov    ecx,0xa1e232d
  4069c2:	lahf   
  4069c3:	shl    DWORD PTR [ecx+0x3a9b982],0xfd
  4069ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4069cb:	fs scas eax,DWORD PTR es:[edi]
  4069cd:	pop    ebp
  4069ce:	data16 fild DWORD PTR [ebp+0x6e1cc68d]
  4069d5:	jmp    0x4b61:0xc5131b63
  4069dc:	or     esp,DWORD PTR [ebp+0x20]
  4069df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4069e0:	fldenv [ecx]
  4069e2:	xor    DWORD PTR [ebx+0x33],0x47
  4069e6:	out    dx,eax
  4069e7:	mov    ebp,0x8f63eb54
  4069ec:	and    dh,BYTE PTR [ecx-0x12]
  4069ef:	jmp    0xf526:0xf4d421d0
  4069f6:	ret    0x55
  4069f9:	xchg   ebp,eax
  4069fa:	pop    es
  4069fb:	test   eax,0x69c9ef4d
  406a00:	or     BYTE PTR [ecx],bh
  406a02:	arpl   WORD PTR [edi],di
  406a04:	mov    ch,BYTE PTR [ebp-0x3b]
  406a07:	dec    ebp
  406a08:	and    esi,esi
  406a0a:	pop    ecx
  406a0b:	sbb    DWORD PTR [edi+0x1f],edi
  406a0e:	or     eax,0x3bb8e6ee
  406a13:	dec    esi
  406a14:	das    
  406a15:	inc    edi
  406a16:	in     eax,0x4c
  406a18:	jecxz  0x406a4d
  406a1a:	mov    eax,0x643f6127
  406a1f:	pop    ss
  406a20:	xor    DWORD PTR [esi+0x25],edi
  406a23:	jle    0x406a1c
  406a25:	mov    ah,0xd
  406a27:	jle    0x406a8b
  406a29:	int3   
  406a2a:	cdq    
  406a2b:	mov    cl,0x75
  406a2d:	outs   dx,DWORD PTR ds:[esi]
  406a2e:	inc    edi
  406a2f:	lahf   
  406a30:	fnstcw WORD PTR [edi]
  406a32:	pop    edx
  406a33:	stos   BYTE PTR es:[edi],al
  406a34:	mov    eax,0x62e84f77
  406a39:	hlt    
  406a3a:	mov    al,0x5
  406a3c:	in     eax,dx
  406a3d:	outs   dx,DWORD PTR ds:[esi]
  406a3e:	xor    al,0x98
  406a40:	std    
  406a41:	std    
  406a42:	pop    ebx
  406a43:	jb     0x406a50
  406a45:	sbb    dh,al
  406a47:	nop
  406a48:	or     eax,0x453fd7d3
  406a4d:	repnz stc 
  406a4f:	jge    0x406a6d
  406a51:	add    al,0xaa
  406a53:	mov    al,ds:0x6085fdb2
  406a58:	push   0xf7cbf280
  406a5d:	idiv   BYTE PTR [ecx-0x66de1525]
  406a63:	out    dx,al
  406a64:	add    BYTE PTR [edx+0x37cdbd74],dh
  406a6a:	jcxz   0x406ae4
  406a6d:	pop    es
  406a6e:	cmp    eax,edx
  406a70:	xchg   BYTE PTR [esi-0x1d],bh
  406a73:	mov    bh,0x4a
  406a75:	push   edi
  406a76:	pop    ecx
  406a77:	sbb    al,0x93
  406a79:	jne    0x406a07
  406a7b:	jge    0x406a60
  406a7d:	fcom   DWORD PTR [ecx]
  406a7f:	jns    0x406ae7
  406a81:	test   al,0x65
  406a83:	ins    BYTE PTR es:[edi],dx
  406a84:	inc    ecx
  406a85:	jns    0x406a79
  406a87:	or     esi,esp
  406a89:	cmp    eax,0xb1127045
  406a8e:	int3   
  406a8f:	rcl    DWORD PTR [edi+0x69d3660],1
  406a95:	mov    ds:0xa44db27d,eax
  406a9a:	fisubr DWORD PTR [ecx]
  406a9c:	fidiv  DWORD PTR [esi]
  406a9e:	loop   0x406a5c
  406aa0:	add    BYTE PTR [edi+0x184d3770],0xb8
  406aa7:	mov    DWORD PTR [ebx+ecx*2-0x4a],esp
  406aab:	ja     0x406a6a
  406aad:	xor    eax,0x74f869e6
  406ab2:	pop    esp
  406ab3:	push   edx
  406ab4:	sub    ch,BYTE PTR fs:[ecx+0xc]
  406ab8:	dec    edi
  406ab9:	xchg   esi,eax
  406aba:	cmp    BYTE PTR [ecx+eax*4+0x2f],dl
  406abe:	arpl   WORD PTR [edi-0x6bfa5a57],sp
  406ac4:	mov    bl,0xf8
  406ac6:	int    0xdf
  406ac8:	test   BYTE PTR [edi-0x170af2ba],ah
  406ace:	(bad)  
  406ad0:	mov    esi,0x4481729b
  406ad5:	xor    ebp,DWORD PTR [ebp-0x9]
  406ad8:	adc    BYTE PTR [edx-0x4b],bl
  406adb:	pop    es
  406adc:	clc    
  406add:	lods   al,BYTE PTR ds:[esi]
  406ade:	out    dx,al
  406adf:	jnp    0x406b1b
  406ae1:	sbb    DWORD PTR [ecx+ecx*2],eax
  406ae4:	and    DWORD PTR [edi],esi
  406ae6:	in     eax,0xd7
  406ae8:	jmp    0x852d:0x97610172
  406aef:	and    DWORD PTR [ebx-0x11f42144],edx
  406af5:	mov    ecx,0x5057d641
  406afa:	shl    DWORD PTR [ebx+0x47],cl
  406afd:	aad    0x61
  406aff:	jbe    0x406a88
  406b01:	out    dx,al
  406b02:	hlt    
  406b03:	(bad)  
  406b04:	rol    DWORD PTR [ebp+ecx*2+0x2b436862],1
  406b0b:	xor    DWORD PTR [ebx+0x1fd15166],0xffffffb2
  406b12:	popf   
  406b13:	shr    DWORD PTR [edi-0x6],cl
  406b16:	lock ins BYTE PTR es:[edi],dx
  406b18:	pop    ss
  406b19:	pop    es
  406b1a:	std    
  406b1b:	test   DWORD PTR [ebx-0x3f58dee8],edi
  406b21:	push   ecx
  406b22:	pushf  
  406b23:	sub    DWORD PTR [edx],edx
  406b25:	mov    al,ds:0x703d13ae
  406b2a:	jo     0x406ac8
  406b2c:	nop
  406b2d:	sbb    al,0xe4
  406b2f:	out    dx,al
  406b30:	rcr    DWORD PTR [ebx-0x51],0xf0
  406b34:	pop    eax
  406b35:	aas    
  406b36:	and    esi,DWORD PTR ds:0x1158fd5e
  406b3c:	push   ss
  406b3d:	arpl   bp,di
  406b3f:	pop    edx
  406b40:	xchg   ebp,eax
  406b41:	mov    bh,0x11
  406b43:	xor    eax,ebp
  406b45:	push   edi
  406b46:	call   0x2099:0x7cd91f1b
  406b4d:	mov    eax,esp
  406b4f:	test   al,0xe5
  406b51:	ds retf 0xbe72
  406b55:	aad    0x3e
  406b57:	inc    esp
  406b58:	neg    BYTE PTR [ecx]
  406b5a:	stos   DWORD PTR es:[edi],eax
  406b5b:	cdq    
  406b5c:	ins    DWORD PTR es:[edi],dx
  406b5d:	pop    ebx
  406b5e:	mov    cl,0x97
  406b60:	test   eax,0xb0f158a
  406b65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b66:	(bad)  
  406b67:	jns    0x406b12
  406b69:	neg    DWORD PTR [esi]
  406b6b:	jmp    0x406bb3
  406b6d:	mov    ecx,0x315f3661
  406b72:	or     cl,0x4b
  406b75:	jmp    0x69f06124
  406b7a:	jb     0x406b07
  406b7c:	sbb    dh,BYTE PTR [edi]
  406b7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b7f:	popa   
  406b80:	stos   DWORD PTR es:[edi],eax
  406b81:	adc    eax,0x31344829
  406b86:	idiv   ah
  406b88:	sbb    DWORD PTR [ebx-0x40],0xffffffcc
  406b8c:	lea    ecx,[edi+0x6b2f0332]
  406b92:	mov    ch,0xe4
  406b94:	sub    al,0x1a
  406b96:	cld    
  406b97:	arpl   WORD PTR [ecx+eiz*4+0x71569f68],cx
  406b9e:	jecxz  0x406bb7
  406ba0:	jge    0x406bb2
  406ba2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ba3:	sbb    ecx,ecx
  406ba5:	dec    esi
  406ba6:	retf   
  406ba7:	lods   eax,DWORD PTR ds:[esi]
  406ba8:	push   ebp
  406ba9:	pop    ss
  406baa:	out    0x6c,eax
  406bac:	mov    al,0xa7
  406bae:	fldenv ds:0xf0c7694b
  406bb4:	push   0x50
  406bb6:	jecxz  0x406b60
  406bb8:	adc    BYTE PTR [ebx+eiz*1+0x6b],dh
  406bbc:	mov    ch,0xb5
  406bbe:	push   ecx
  406bbf:	test   DWORD PTR [eax+0x5c],ecx
  406bc2:	xchg   ebx,eax
  406bc3:	dec    eax
  406bc4:	mov    esi,0x97f4db8f
  406bc9:	in     eax,0xbb
  406bcb:	hlt    
  406bcc:	dec    esp
  406bcd:	aas    
  406bce:	mov    cl,0xd2
  406bd0:	ds inc esi
  406bd2:	call   0x8e4a271e
  406bd7:	inc    edx
  406bd8:	imul   esp,DWORD PTR [esi],0x3e55686
  406bde:	lock jbe 0x406be9
  406be1:	fadd   QWORD PTR [eax-0x42d11fe4]
  406be7:	xor    edx,DWORD PTR [esi]
  406be9:	jno    0x406c43
  406beb:	imul   edi,ebp,0x5c
  406bee:	adc    BYTE PTR [ecx-0x6c],0x74
  406bf2:	adc    BYTE PTR [esi+0x9],0x14
  406bf6:	gs pop edi
  406bf8:	xchg   bh,cl
  406bfa:	jle    0x406c77
  406bfc:	mov    ch,0x94
  406bfe:	mov    cs,WORD PTR ds:0x39599c82
  406c04:	xchg   BYTE PTR [eax+0x16],cl
  406c07:	jne    0x406c72
  406c09:	xchg   esi,eax
  406c0a:	je     0x406c3f
  406c0c:	cmp    bh,BYTE PTR [esi+0x60]
  406c0f:	test   eax,0xf3e23180
  406c14:	push   esp
  406c15:	cmp    eax,0x364130b2
  406c1a:	call   0x983:0x9bd68f47
  406c21:	scas   al,BYTE PTR es:[edi]
  406c22:	loop   0x406ba6
  406c24:	stos   BYTE PTR es:[edi],al
  406c25:	loopne 0x406bf0
  406c27:	mov    ch,0xcf
  406c29:	push   ds
  406c2a:	mov    cl,ah
  406c2c:	cmp    eax,0x248dbc8d
  406c31:	sub    al,0x96
  406c33:	xor    eax,DWORD PTR [ebx]
  406c35:	mov    ebp,0xfef9b255
  406c3a:	cli    
  406c3b:	inc    eax
  406c3c:	rcl    BYTE PTR [ebx-0x13353254],1
  406c42:	aad    0xd6
  406c44:	dec    esp
  406c45:	pusha  
  406c46:	lods   eax,DWORD PTR ds:[esi]
  406c47:	clc    
  406c48:	and    eax,ebx
  406c4a:	iret   
  406c4b:	push   esi
  406c4c:	lods   al,BYTE PTR ds:[esi]
  406c4d:	daa    
  406c4e:	dec    ecx
  406c4f:	(bad)  
  406c50:	mov    edi,0xeaad72a9
  406c55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c56:	fsubr  DWORD PTR [ecx-0xc]
  406c59:	sbb    DWORD PTR [edi],ebx
  406c5b:	ror    BYTE PTR [edi-0x7f8586f],cl
  406c61:	(bad)  
  406c62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c63:	sub    DWORD PTR [edx+0xb],ebp
  406c66:	xor    BYTE PTR [eax+0x67],ch
  406c69:	popf   
  406c6a:	out    0xb8,eax
  406c6c:	outs   dx,BYTE PTR ds:[esi]
  406c6d:	xor    ecx,ecx
  406c6f:	and    cl,BYTE PTR [edx-0x62]
  406c72:	mov    esp,0x6fd86639
  406c77:	mov    ah,0x4c
  406c79:	pop    eax
  406c7a:	push   ss
  406c7b:	mov    esp,0x12128bbe
  406c80:	mov    bh,0x1c
  406c82:	fadd   DWORD PTR ds:0x793dee6e
  406c88:	mov    ebx,0x3afd1b49
  406c8d:	dec    eax
  406c8e:	cld    
  406c8f:	out    dx,al
  406c90:	mov    dl,0x87
  406c92:	(bad)  
  406c93:	pusha  
  406c94:	mov    al,0x8a
  406c96:	xchg   esi,eax
  406c97:	adc    edi,ebp
  406c99:	cmp    eax,0xb0452647
  406c9e:	push   0xffffffc4
  406ca0:	dec    ebp
  406ca1:	pop    es
  406ca2:	dec    edi
  406ca3:	xor    cl,ch
  406ca5:	into   
  406ca6:	call   0xb47b:0xc1a1a3c9
  406cad:	cs std 
  406caf:	jmp    0x55766194
  406cb4:	mov    al,0xb1
  406cb6:	ins    BYTE PTR es:[edi],dx
  406cb7:	lahf   
  406cb8:	mov    bl,0xab
  406cba:	adc    DWORD PTR [edx],ebp
  406cbc:	add    al,0x5b
  406cbe:	cmp    eax,edi
  406cc0:	mov    eax,ds:0xf7a7f619
  406cc5:	sbb    BYTE PTR [esi+0x66],0xf
  406cc9:	in     eax,0x8f
  406ccb:	push   eax
  406ccc:	cli    
  406ccd:	pop    ecx
  406cce:	das    
  406ccf:	adc    eax,0xc3f6664a
  406cd4:	adc    eax,0xc39a6861
  406cd9:	mov    DWORD PTR [edx+0x67],esi
  406cdc:	xchg   dl,ah
  406cde:	jg     0x406cd3
  406ce0:	sub    DWORD PTR [edi],esp
  406ce2:	inc    BYTE PTR [eax+ebp*1-0x7fbd9680]
  406ce9:	lea    eax,ds:0x2df2ab59
  406cef:	popa   
  406cf0:	push   ebp
  406cf1:	outs   dx,BYTE PTR ds:[esi]
  406cf2:	iret   
  406cf3:	dec    ecx
  406cf4:	es mov edx,0xfa813df4
  406cfa:	mov    ds:0x55db2166,eax
  406cff:	scas   eax,DWORD PTR es:[edi]
  406d00:	xchg   edx,eax
  406d01:	push   ds
  406d02:	sub    esp,esp
  406d04:	jo     0x406d68
  406d06:	xchg   esp,eax
  406d07:	inc    esi
  406d08:	push   esp
  406d09:	add    DWORD PTR [edi],esi
  406d0b:	sub    ecx,DWORD PTR [edi]
  406d0d:	repnz call 0x46d8:0xc7dbb9c7
  406d15:	ret    
  406d16:	ins    DWORD PTR es:[edi],dx
  406d17:	loope  0x406d16
  406d19:	mov    ds:0x4d1eb1d8,al
  406d1e:	xor    ebx,DWORD PTR [ecx+0x4aef2be2]
  406d24:	pop    ds
  406d25:	call   0x557ad37b
  406d2a:	dec    esp
  406d2b:	rcl    ch,cl
  406d2d:	fcom   QWORD PTR [ecx+eiz*8+0x3da9a36f]
  406d34:	cmp    DWORD PTR [ebx],ecx
  406d36:	xlat   BYTE PTR ds:[ebx]
  406d37:	push   eax
  406d38:	loopne 0x406cd7
  406d3a:	jae    0x406d3c
  406d3c:	fwait
  406d3d:	imul   esi,DWORD PTR [ebx],0x35
  406d40:	ficomp DWORD PTR [edx+ebp*2+0x2720254e]
  406d47:	clc    
  406d48:	(bad)  
  406d49:	daa    
  406d4a:	and    DWORD PTR [ecx-0x7c72d9f7],edx
  406d50:	add    eax,DWORD PTR [ecx+0x1d35b5b9]
  406d56:	push   ss
  406d57:	sbb    al,BYTE PTR [esi-0x31b95c54]
  406d5d:	mov    bl,0xf9
  406d5f:	leave  
  406d60:	pop    ds
  406d61:	jecxz  0x406db6
  406d63:	dec    ebx
  406d64:	push   ebx
  406d65:	xchg   ecx,eax
  406d66:	ficom  WORD PTR [edi+0x2d7d65c7]
  406d6c:	push   edi
  406d6d:	add    BYTE PTR [edi+0x46],dh
  406d70:	inc    ecx
  406d71:	arpl   si,bx
  406d73:	cmp    BYTE PTR [ebp*8+0x25c17b10],dh
  406d7a:	stos   BYTE PTR es:[edi],al
  406d7b:	fistp  WORD PTR [edx+eax*1]
  406d7e:	retf   0xb87a
  406d81:	(bad)
  406d84:	std    
  406d85:	fcmovnu st,st(4)
  406d87:	jmp    0x406d69
  406d89:	xchg   edi,eax
  406d8a:	jno    0x406d99
  406d8c:	add    al,0xba
  406d8e:	and    al,0xc6
  406d90:	pop    esp
  406d91:	sbb    BYTE PTR [ebx],0x4d
  406d94:	ret    
  406d95:	out    0x8,al
  406d97:	mov    eax,gs:0x9dd37557
  406d9d:	ins    BYTE PTR es:[edi],dx
  406d9e:	dec    ebp
  406d9f:	ss xchg ch,bl
  406da2:	cmp    al,0x50
  406da4:	inc    ecx
  406da5:	cs into 
  406da7:	ins    BYTE PTR es:[edi],dx
  406da8:	retf   
  406da9:	iret   
  406daa:	mov    ecx,esi
  406dac:	and    bh,ah
  406dae:	pop    esi
  406daf:	ins    DWORD PTR es:[edi],dx
  406db0:	test   BYTE PTR [eax+esi*4+0x1c9ebd09],0xf3
  406db8:	(bad)  [ecx+0x3da4cae4]
  406dbe:	stc    
  406dbf:	repnz or eax,DWORD PTR [eax]
  406dc2:	mov    dl,0xd0
  406dc4:	fdiv   DWORD PTR [esi+eiz*4]
  406dc7:	mov    cl,0xaa
  406dc9:	mov    ds:0xbeddca6b,al
  406dce:	cmc    
  406dcf:	jmp    0x406d59
  406dd1:	sbb    DWORD PTR [ebp+0x11],ecx
  406dd4:	cmp    esi,DWORD PTR [ebx+0x0]
  406dd7:	js     0x406e1e
  406dd9:	imul   ebp,eax,0x5e
  406ddc:	dec    edi
  406ddd:	push   edi
  406dde:	add    eax,DWORD PTR ds:0x2641afb
  406de4:	lods   al,BYTE PTR ds:[esi]
  406de5:	push   edx
  406de6:	adc    al,0x69
  406de8:	and    BYTE PTR [edx+0x31],dl
  406deb:	adc    al,0xc6
  406ded:	and    ch,BYTE PTR [edi+0x2]
  406df0:	add    DWORD PTR [ecx+0x6bde87dc],esp
  406df6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406df7:	popa   
  406df8:	call   0x7b2a:0xb15fbec4
  406dff:	add    ah,BYTE PTR [ebx-0xd]
  406e02:	push   ebp
  406e03:	push   ds
  406e04:	jo     0x406e35
  406e06:	push   edi
  406e07:	inc    ebp
  406e08:	iret   
  406e09:	mov    edi,DWORD PTR [ebx]
  406e0b:	mov    ds:0xad38359d,eax
  406e10:	sbb    BYTE PTR [ecx+0x49c08220],bl
  406e16:	add    BYTE PTR [ecx-0x68e74add],bl
  406e1c:	mov    al,0xad
  406e1e:	shl    DWORD PTR [edx+esi*4+0x7fadd40b],cl
  406e25:	or     eax,0xfde89ef
  406e2a:	aas    
  406e2b:	dec    edi
  406e2c:	dec    esp
  406e2d:	xlat   BYTE PTR ds:[ebx]
  406e2e:	add    ebp,edx
  406e30:	jmp    0x406df8
  406e32:	jge    0x406e87
  406e34:	in     al,0x1
  406e36:	outs   dx,DWORD PTR ds:[esi]
  406e37:	push   ss
  406e38:	xchg   ebp,eax
  406e39:	xlat   BYTE PTR ds:[ebx]
  406e3a:	fsub   QWORD PTR [ecx]
  406e3c:	or     al,0x44
  406e3e:	stos   DWORD PTR es:[edi],eax
  406e3f:	cmp    eax,0xc7ce18c6
  406e44:	push   ds
  406e45:	dec    esi
  406e46:	sbb    al,0xcf
  406e48:	adc    BYTE PTR [edx+0x59],al
  406e4b:	fadd   DWORD PTR [ebx-0x55]
  406e4e:	das    
  406e4f:	in     al,0xff
  406e51:	push   eax
  406e52:	loop   0x406ec7
  406e54:	ja     0x406e52
  406e56:	mov    ds:0x98aacb83,al
  406e5b:	dec    eax
  406e5c:	test   DWORD PTR [edi-0x7fdae2a7],ebp
  406e62:	cmp    eax,DWORD PTR [edx+0x54]
  406e65:	call   0x13ac7b80
  406e6a:	jmp    0x7eb52aea
  406e6f:	add    al,0x15
  406e71:	dec    edx
  406e72:	cmp    BYTE PTR [ecx],ah
  406e74:	cs cwde 
  406e76:	fld    TBYTE PTR [ebp+eiz*1+0x60]
  406e7a:	fadd   st,st(0)
  406e7c:	into   
  406e7d:	ds mov esi,0x33f5ea70
  406e83:	out    0x42,eax
  406e85:	lahf   
  406e86:	or     BYTE PTR [ebp+esi*4-0x17c2db13],dl
  406e8d:	mov    BYTE PTR [esi-0x7f],cl
  406e90:	aad    0x80
  406e92:	or     al,0x4
  406e94:	mov    ecx,0x3d5d6d48
  406e99:	out    0xc,eax
  406e9b:	in     al,dx
  406e9c:	pop    ecx
  406e9d:	mov    bl,0x6c
  406e9f:	sahf   
  406ea0:	in     eax,dx
  406ea1:	sti    
  406ea2:	jle    0x406f04
  406ea4:	push   0x7e0e51c8
  406ea9:	fisubr WORD PTR [ebx]
  406eab:	in     eax,dx
  406eac:	stc    
  406ead:	sbb    DWORD PTR [ecx],0x1e6afabe
  406eb3:	les    ebx,FWORD PTR [ecx+0x78]
  406eb6:	pop    ds
  406eb7:	xchg   ebp,eax
  406eb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406eb9:	or     eax,0x52903b8b
  406ebe:	inc    esp
  406ebf:	shr    DWORD PTR [edx],0x1d
  406ec2:	lock mov edx,0xa1e64d55
  406ec8:	xor    DWORD PTR [eax],edx
  406eca:	mov    esi,0xdbb9fa78
  406ecf:	fld    TBYTE PTR [eax-0x43]
  406ed2:	test   eax,0xb31fb80a
  406ed7:	repz inc ebp
  406ed9:	xchg   esp,eax
  406eda:	sub    ebx,DWORD PTR [edi-0x23]
  406edd:	xor    al,0x97
  406edf:	lea    eax,[ebx-0x24]
  406ee2:	jp     0x406f46
  406ee4:	popa   
  406ee5:	aaa    
  406ee6:	bound  esp,QWORD PTR [ecx-0x59]
  406ee9:	lods   al,BYTE PTR ds:[esi]
  406eea:	xor    DWORD PTR [esi-0x3a2eadb7],ecx
  406ef0:	cmp    DWORD PTR [esi],ebx
  406ef2:	std    
  406ef3:	cld    
  406ef4:	mov    ah,BYTE PTR [ecx-0x4c]
  406ef7:	sar    DWORD PTR [edx-0x3c],cl
  406efa:	cmc    
  406efb:	in     eax,0x55
  406efd:	dec    ebp
  406efe:	ret    0x934f
  406f01:	(bad)  
  406f02:	xor    al,0x16
  406f04:	(bad)  
  406f05:	iret   
  406f06:	arpl   si,cx
  406f08:	mov    ecx,0xbe4aee19
  406f0d:	mov    dl,dl
  406f0f:	mov    eax,0x5f10ed2f
  406f14:	fdiv   QWORD PTR [bp+si+0x53]
  406f18:	mov    esi,0x76d7b059
  406f1d:	pop    edi
  406f1e:	in     al,0x16
  406f20:	stc    
  406f21:	retf   
  406f22:	and    ecx,ebx
  406f24:	and    al,0xfe
  406f26:	mov    esi,0x2de818b1
  406f2b:	push   eax
  406f2c:	xchg   ecx,eax
  406f2d:	adc    dl,bl
  406f2f:	jbe    0x406ec0
  406f31:	push   ds
  406f32:	stos   DWORD PTR es:[edi],eax
  406f33:	ins    BYTE PTR es:[edi],dx
  406f34:	pop    eax
  406f35:	or     eax,DWORD PTR [edi]
  406f37:	call   0x9e0358e6
  406f3c:	out    0xf1,eax
  406f3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f3f:	push   edx
  406f40:	loopne 0x406ef8
  406f42:	mov    eax,0x8a69670d
  406f47:	dec    edx
  406f48:	xchg   edx,eax
  406f49:	iret   
  406f4a:	test   BYTE PTR [eax-0xb02ec7f],0x3a
  406f51:	fs or  eax,0x3e8909c3
  406f57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f58:	je     0x406fcb
  406f5a:	mov    ebx,DWORD PTR [edi+0x4e89890c]
  406f60:	fwait
  406f61:	jg     0x406efe
  406f63:	add    al,0xb5
  406f65:	addr16 mov dh,0x30
  406f68:	adc    BYTE PTR ss:[esi+edi*8],al
  406f6c:	aas    
  406f6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f6e:	rol    BYTE PTR [eax-0x74],cl
  406f71:	cwde   
  406f72:	sub    eax,ebp
  406f74:	int3   
  406f75:	xchg   al,dh
  406f77:	mov    BYTE PTR [ebp+0x48],dh
  406f7a:	cmp    al,0x7d
  406f7c:	pop    edx
  406f7d:	push   es
  406f7e:	push   ebp
  406f7f:	push   ebp
  406f80:	clc    
  406f81:	pop    ecx
  406f82:	loop   0x406fdb
  406f84:	mov    ebp,DWORD PTR [ecx+0x27]
  406f87:	es andps xmm0,xmm5
  406f8b:	sbb    dl,BYTE PTR [ecx+0x38]
  406f8e:	je     0x406f64
  406f90:	lds    esi,FWORD PTR [edi-0x17]
  406f93:	sbb    eax,0xf5e3e569
  406f98:	out    dx,al
  406f99:	pop    eax
  406f9a:	and    ebp,DWORD PTR [edi-0x31]
  406f9d:	pop    ebx
  406f9e:	pop    ebx
  406f9f:	mov    eax,ds:0x9c8a759f
  406fa4:	outs   dx,BYTE PTR ds:[esi]
  406fa5:	mov    ah,0xb2
  406fa7:	cli    
  406fa8:	mov    ah,BYTE PTR [esi]
  406faa:	std    
  406fab:	jo     0x406f4d
  406fad:	mov    al,0xff
  406faf:	enter  0x5fd3,0x66
  406fb3:	bound  ebx,QWORD PTR [eax+0x7e]
  406fb6:	ror    edx,1
  406fb8:	pop    es
  406fb9:	xchg   ebp,eax
  406fba:	xor    eax,0x720ec2c2
  406fbf:	mov    edi,eax
  406fc1:	js     0x406fff
  406fc3:	retf   
  406fc4:	push   ecx
  406fc5:	lds    esi,FWORD PTR ds:0x2fce91f7
  406fcb:	adc    edx,DWORD PTR [edx+eax*1+0x4cab99f7]
  406fd2:	rcr    DWORD PTR [ebx+0x74a86148],0x4a
  406fd9:	inc    ebx
  406fda:	pop    edi
  406fdb:	pop    edi
  406fdc:	in     eax,0xe2
  406fde:	mov    bl,0x1a
  406fe0:	dec    ebp
  406fe1:	mov    al,0x10
  406fe3:	ds xchg ebp,eax
  406fe5:	(bad)  
  406fe6:	mov    cl,0xa4
  406fe8:	mov    ecx,0xd6f73a04
  406fed:	cwde   
  406fee:	fucomi st,st(1)
  406ff0:	adc    ebx,DWORD PTR ds:0x3bd92c39
  406ff6:	add    esi,eax
  406ff8:	daa    
  406ff9:	cwde   
  406ffa:	dec    edx
  406ffb:	xlat   BYTE PTR ds:[ebx]
  406ffc:	(bad)  
  406ffd:	int    0x36
  406fff:	scas   al,BYTE PTR es:[edi]
  407000:	jg     0x407034
  407002:	mov    eax,ds:0xc6e72986
  407007:	xchg   esi,eax
  407008:	stos   BYTE PTR es:[edi],al
  407009:	push   ds
  40700a:	jne    0x406fe1
  40700c:	(bad)  
  40700d:	cwde   
  40700e:	inc    edx
  40700f:	call   0xbbf23b9e
  407014:	push   esp
  407015:	lds    eax,FWORD PTR ds:0xe3fe58e3
  40701b:	or     eax,0x2ac00650
  407020:	hlt    
  407021:	mov    eax,0xf92eb2ff
  407026:	jne    0x4070a7
  407028:	fimul  WORD PTR [esp+ecx*8-0x66f85000]
  40702f:	aaa    
  407030:	lock retf 0xdd9d
  407034:	outs   dx,BYTE PTR ds:[esi]
  407035:	jge    0x40701c
  407037:	leave  
  407038:	mov    cs:0x7189de0b,eax
  40703e:	adc    esp,DWORD PTR [edi]
  407040:	daa    
  407041:	cs inc ecx
  407043:	mov    ecx,fs
  407045:	aas    
  407046:	sub    ah,BYTE PTR [eax-0x59e0d58e]
  40704c:	cmp    ch,0xc2
  40704f:	or     BYTE PTR [edx-0xc8c52d6],ah
  407055:	mov    al,0xc1
  407057:	xchg   esp,eax
  407058:	bound  esp,QWORD PTR [eax-0x51490d9a]
  40705e:	pop    ds
  40705f:	test   DWORD PTR [edx-0x42],eax
  407062:	mov    dl,0xba
  407064:	adc    DWORD PTR [ebx+0x49],ebx
  407067:	dec    ecx
  407068:	inc    esp
  407069:	les    esp,FWORD PTR [eax]
  40706b:	mov    ebx,0xfbca249e
  407070:	fldenv [ebx]
  407072:	sbb    BYTE PTR [esi],dh
  407074:	pushf  
  407075:	rol    BYTE PTR [edi],cl
  407077:	into   
  407078:	push   esp
  407079:	pop    ebx
  40707a:	in     al,0x3c
  40707c:	lds    edx,FWORD PTR [esi-0x27b42a1c]
  407082:	inc    edx
  407083:	sbb    ebx,DWORD PTR [eax-0x158ac4a4]
  407089:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40708a:	pop    edi
  40708b:	loope  0x4070b4
  40708d:	inc    edx
  40708e:	pop    ss
  40708f:	add    al,0x43
  407091:	test   eax,0xad7ef9b9
  407096:	xchg   BYTE PTR [ebp-0x1365b927],ah
  40709c:	sbb    eax,0x80bfa7e3
  4070a1:	sbb    BYTE PTR [edx-0x5b],0x66
  4070a5:	gs aam 0x38
  4070a8:	inc    ebx
  4070a9:	lods   al,BYTE PTR ds:[esi]
  4070aa:	jmp    0xe950:0x404a66d8
  4070b1:	shl    BYTE PTR [esi+0x77],1
  4070b4:	retf   0x4cf0
  4070b7:	cli    
  4070b8:	ret    
  4070b9:	inc    esi
  4070ba:	stos   BYTE PTR es:[edi],al
  4070bb:	inc    ebp
  4070bc:	fsubr  QWORD PTR [esp+ecx*1-0x1a]
  4070c0:	ins    DWORD PTR es:[edi],dx
  4070c1:	hlt    
  4070c2:	jbe    0x4070d0
  4070c4:	loop   0x407132
  4070c6:	cmp    DWORD PTR [eax+edx*8+0x746aee0f],edi
  4070cd:	out    dx,al
  4070ce:	jecxz  0x4070df
  4070d0:	sahf   
  4070d1:	cli    
  4070d2:	pop    esi
  4070d3:	jg     0x4070b0
  4070d5:	sar    bl,1
  4070d7:	dec    ebp
  4070d8:	in     al,dx
  4070d9:	adc    DWORD PTR [edi+0x15019b30],0xffffffca
  4070e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4070e1:	add    eax,0x3c1329ee
  4070e7:	outs   dx,BYTE PTR ds:[esi]
  4070e8:	pushf  
  4070e9:	push   eax
  4070ea:	xchg   BYTE PTR [eax-0x74],bl
  4070ed:	push   ss
  4070ee:	enter  0xf697,0x4d
  4070f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4070f3:	gs lock jl 0x4070e3
  4070f7:	in     eax,dx
  4070f8:	shl    bl,1
  4070fa:	ret    
  4070fb:	ss out 0x57,al
  4070fe:	mov    ds:0xe88771c1,eax
  407103:	int    0xf9
  407105:	inc    ecx
  407106:	scas   al,BYTE PTR es:[edi]
  407107:	test   DWORD PTR [esi-0x1a],esp
  40710a:	cmp    esi,edi
  40710c:	add    BYTE PTR [edi+0x4f468c9f],dl
  407112:	retf   
  407113:	loop   0x40718d
  407115:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407116:	test   eax,0xfe16ac81
  40711b:	lahf   
  40711c:	or     ebp,DWORD PTR [eax]
  40711e:	nop
  40711f:	push   ebx
  407120:	xlat   BYTE PTR ds:[ebx]
  407121:	mul    edi
  407123:	or     dh,ah
  407125:	or     BYTE PTR [edi-0x3],dl
  407128:	pop    ecx
  407129:	ficom  DWORD PTR [ecx+0x4483912a]
  40712f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407130:	push   ebp
  407131:	sar    ebx,cl
  407133:	outs   dx,BYTE PTR ds:[esi]
  407134:	jno    0x4071af
  407136:	xor    eax,0x6e993f9f
  40713b:	sbb    cl,BYTE PTR [edi+0x17]
  40713e:	or     eax,0xd5044aa1
  407143:	sub    eax,DWORD PTR [eax+0x50dbfa83]
  407149:	leave  
  40714a:	icebp  
  40714b:	mov    al,0xf7
  40714d:	xchg   bh,al
  40714f:	sbb    BYTE PTR [edi-0x67],0xa8
  407153:	bound  ebx,QWORD PTR [edx]
  407155:	jo     0x407114
  407157:	xchg   ebx,eax
  407158:	xor    al,BYTE PTR [ecx+0x51604bc0]
  40715e:	repz mov ebx,0xd2bba93a
  407164:	jp     0x407134
  407166:	push   edi
  407167:	ror    DWORD PTR [ebx-0x2a],cl
  40716a:	pusha  
  40716b:	sub    DWORD PTR [ebx+0x3db097ee],edx
  407171:	add    DWORD PTR [edx+0x62],esi
  407174:	iret   
  407175:	scas   eax,DWORD PTR es:[edi]
  407176:	ins    BYTE PTR es:[edi],dx
  407177:	adc    eax,0xbacecf16
  40717c:	lahf   
  40717d:	cli    
  40717e:	push   esp
  40717f:	pop    ecx
  407180:	adc    BYTE PTR [eax-0x65],ch
  407183:	sbb    BYTE PTR [ebx+0x2a51f470],ah
  407189:	adc    ah,BYTE PTR gs:[eax+0x6b]
  40718d:	cmp    dh,BYTE PTR [ecx+0x67]
  407190:	or     al,0x7d
  407192:	dec    eax
  407193:	test   ah,cl
  407195:	(bad)  
  407197:	leave  
  407198:	stos   BYTE PTR es:[edi],al
  407199:	xchg   edi,eax
  40719a:	leave  
  40719b:	pop    ebp
  40719c:	mov    eax,0xc4e6cb34
  4071a1:	lods   al,BYTE PTR ds:[esi]
  4071a2:	call   0x2a16:0x6afe2539
  4071a9:	pop    edx
  4071aa:	daa    
  4071ab:	dec    esi
  4071ac:	mov    ds:0x16d2cbb9,eax
  4071b1:	pop    ecx
  4071b2:	out    0xf9,eax
  4071b4:	inc    eax
  4071b5:	(bad)
  4071b8:	iret   
  4071b9:	scas   eax,DWORD PTR es:[edi]
  4071ba:	lock call 0xccb43a32
  4071c0:	mov    edi,ebp
  4071c2:	sub    eax,0x1b9dd366
  4071c7:	mov    ds,WORD PTR [edx+0x5b4cdbe]
  4071cd:	(bad)  
  4071ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071cf:	jp     0x407182
  4071d1:	jg     0x407208
  4071d3:	test   eax,0x2b2f987a
  4071d8:	jae    0x407228
  4071da:	pop    es
  4071db:	sahf   
  4071dc:	push   ds
  4071dd:	add    BYTE PTR [esi],bl
  4071df:	inc    DWORD PTR ds:0x258defb3
  4071e5:	mov    cl,BYTE PTR [esi]
  4071e7:	cs dec eax
  4071e9:	mov    cl,0x7
  4071eb:	xor    al,0x39
  4071ed:	jge    0x407227
  4071ef:	ds dec edx
  4071f1:	(bad)  
  4071f2:	mov    ds:0x2c5982d7,al
  4071f7:	not    BYTE PTR [edx+0x55]
  4071fa:	repnz pop esp
  4071fd:	ja     0x4071e5
  4071ff:	push   ebp
  407200:	jae    0x4071c5
  407202:	mov    dl,BYTE PTR [esi+ebp*2]
  407205:	jns    0x407209
  407207:	cld    
  407208:	mov    ebp,0xf16d0c84
  40720d:	repz add cl,BYTE PTR [ebx]
  407210:	fwait
  407211:	mov    al,ds:0x4588b384
  407216:	and    cl,dl
  407218:	int3   
  407219:	ins    BYTE PTR es:[edi],dx
  40721a:	push   ebx
  40721b:	mov    al,0xa7
  40721d:	fisttp WORD PTR [eax-0xa3992db]
  407223:	xor    al,BYTE PTR [edi+esi*2+0x5f6b3163]
  40722a:	xchg   edx,eax
  40722b:	aad    0x37
  40722d:	daa    
  40722e:	cdq    
  40722f:	lds    edi,FWORD PTR [esi+0x1c]
  407232:	cmp    eax,0xe43a1b57
  407237:	lahf   
  407238:	call   0x3d673c9
  40723d:	cmc    
  40723e:	and    DWORD PTR [eax+0x4ee7ca4b],ecx
  407244:	psrlw  mm3,QWORD PTR [ebp+edi*2-0xb5d8ee4]
  40724c:	push   cs
  40724d:	aas    
  40724e:	add    eax,0x537a9390
  407253:	ds in  al,0xc6
  407256:	inc    ecx
  407257:	add    BYTE PTR [edx],0x3b
  40725a:	sbb    al,BYTE PTR [ecx+0x247da237]
  407260:	cld    
  407261:	test   eax,0x6832f320
  407266:	adc    al,0x78
  407268:	jmp    0x4072c8
  40726a:	xchg   BYTE PTR [eax+0x2214a20f],bl
  407270:	ins    BYTE PTR es:[edi],dx
  407271:	(bad)  
  407273:	int3   
  407274:	lahf   
  407275:	fidiv  DWORD PTR [edx]
  407277:	sar    cl,0x54
  40727a:	cdq    
  40727b:	loop   0x407235
  40727d:	add    BYTE PTR [ecx-0x7581d8c],cl
  407283:	jle    0x40721f
  407285:	mov    bh,0x1d
  407287:	ds dec esp
  407289:	push   edi
  40728a:	and    DWORD PTR [edi],eax
  40728c:	ret    
  40728d:	inc    edx
  40728e:	fisubr WORD PTR [eax+0x2ff0ea6a]
  407294:	test   ah,ah
  407296:	loope  0x407233
  407298:	xor    DWORD PTR [edi+0x5b],ecx
  40729b:	sbb    ebp,ebx
  40729d:	push   0x5fb63f13
  4072a2:	arpl   WORD PTR [ebx+0x50],ax
  4072a5:	sub    edx,edx
  4072a7:	ja     0x40730d
  4072a9:	xchg   edx,eax
  4072aa:	xchg   ecx,eax
  4072ab:	dec    esi
  4072ac:	ins    BYTE PTR es:[edi],dx
  4072ad:	add    al,0x29
  4072af:	cmp    ah,0xf6
  4072b2:	outs   dx,DWORD PTR ds:[esi]
  4072b3:	cmp    eax,0xa30b0684
  4072b8:	mov    ah,0x79
  4072ba:	out    0xb9,ax
  4072bd:	inc    edi
  4072be:	jge    0x407296
  4072c0:	(bad)  
  4072c2:	jae    0x40727d
  4072c4:	rol    WORD PTR [ebx-0x66b95325],0x52
  4072cc:	inc    dh
  4072ce:	mov    ebp,0x478cf422
  4072d3:	mov    ds:0xe2087354,eax
  4072d8:	mov    ecx,esp
  4072da:	xchg   ebp,eax
  4072db:	pop    ebx
  4072dc:	pop    esp
  4072dd:	cmp    eax,0xbf833abc
  4072e2:	inc    ebx
  4072e3:	xchg   esp,eax
  4072e4:	ins    DWORD PTR es:[edi],dx
  4072e5:	or     BYTE PTR [ebp-0x323f49a],ch
  4072eb:	sbb    eax,0xafdf2c11
  4072f0:	das    
  4072f1:	sbb    eax,esp
  4072f3:	jge    0x407292
  4072f5:	jmp    0x6cf13171
  4072fa:	fisttp WORD PTR [ebp+0xf0fc8e2]
  407300:	xlat   BYTE PTR ds:[ebx]
  407301:	dec    ecx
  407302:	inc    ebp
  407303:	mov    al,0xc
  407305:	adc    al,0x56
  407307:	shl    BYTE PTR [ecx],cl
  407309:	mov    ebp,0xa846a10a
  40730e:	mov    edx,0xbd5fdcdc
  407313:	cmp    eax,0x52d1879d
  407318:	mov    edi,0xcb540b16
  40731d:	repz or al,0x20
  407320:	ins    BYTE PTR es:[edi],dx
  407321:	cld    
  407322:	mov    bl,0xbf
  407324:	mov    cl,0xd4
  407326:	dec    esp
  407327:	ins    DWORD PTR es:[edi],dx
  407328:	push   ds
  407329:	xchg   ecx,eax
  40732a:	ret    0xb036
  40732d:	repnz mov eax,ds:0x35c9ff55
  407333:	popf   
  407334:	pushf  
  407335:	sahf   
  407336:	nop
  407337:	fldenv [edi]
  407339:	jb     0x40734f
  40733b:	xchg   BYTE PTR [edi+0x5a],bl
  40733e:	fst    st(2)
  407340:	sti    
  407341:	push   edi
  407342:	hlt    
  407343:	push   esp
  407344:	push   eax
  407345:	push   0x16
  407347:	and    al,0xc1
  407349:	or     DWORD PTR [ecx],0xffffffc2
  40734c:	aad    0xe6
  40734e:	sti    
  40734f:	pop    esp
  407350:	pop    ebp
  407351:	rol    BYTE PTR [ebx-0x165f7f0b],0xa6
  407358:	ror    BYTE PTR [ebx-0x9],1
  40735b:	mov    esi,0xe09c21c7
  407360:	mov    DWORD PTR [ebx],edx
  407362:	stc    
  407363:	mov    dh,0xc2
  407365:	sub    al,0x22
  407367:	iret   
  407368:	push   edx
  407369:	push   es
  40736a:	pop    ss
  40736b:	popa   
  40736c:	lock out dx,al
  40736e:	xlat   BYTE PTR ds:[ebx]
  40736f:	dec    ebp
  407370:	retf   0xf3b3
  407373:	in     al,dx
  407374:	jae    0x4073aa
  407376:	mov    edi,0x36cb836d
  40737b:	repnz adc DWORD PTR [edi+0x39508e8e],ecx
  407382:	xchg   edi,eax
  407383:	into   
  407384:	shr    BYTE PTR [ecx-0x79],1
  407387:	inc    edx
  407388:	inc    eax
  407389:	push   edi
  40738a:	add    esi,DWORD PTR [esi+0x7b]
  40738d:	out    0xa7,eax
  40738f:	jnp    0x407393
  407391:	sbb    edx,DWORD PTR [edi]
  407393:	and    eax,0xe5faf51c
  407398:	lahf   
  407399:	mov    edx,esi
  40739b:	or     BYTE PTR [ebx+0x72281a42],dl
  4073a1:	or     al,0x34
  4073a3:	jle    0x4073cd
  4073a5:	dec    esp
  4073a6:	jp     0x40736a
  4073a8:	mov    esi,0x6ec65eb
  4073ad:	out    0x43,eax
  4073af:	push   esp
  4073b0:	test   bl,0x32
  4073b3:	lahf   
  4073b4:	lock sub eax,0x9831b169
  4073ba:	stc    
  4073bb:	mov    ch,0xb9
  4073bd:	mov    ds:0x39191b5b,al
  4073c2:	mov    dl,0x8f
  4073c4:	push   ss
  4073c5:	rcl    DWORD PTR [ecx+0x35],cl
  4073c8:	int3   
  4073c9:	pop    edi
  4073ca:	mov    BYTE PTR [esi],cl
  4073cc:	mov    bl,0x4a
  4073ce:	test   BYTE PTR [ebx],0xda
  4073d1:	lods   eax,DWORD PTR ds:[esi]
  4073d2:	mov    edx,0x66685e40
  4073d7:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  4073d9:	jg     0x407444
  4073db:	adc    al,dh
  4073dd:	push   esp
  4073de:	not    DWORD PTR [eax+0x5aaeb2c2]
  4073e4:	mov    cs,ecx
  4073e6:	xor    DWORD PTR [ebx-0x24384ca2],edi
  4073ec:	stc    
  4073ed:	bound  eax,QWORD PTR [edi-0x3955e078]
  4073f3:	(bad)  
  4073f4:	mov    bh,0xfe
  4073f6:	mov    esp,0x11094260
  4073fb:	ja     0x40737d
  4073fd:	add    DWORD PTR [esi],edx
  4073ff:	fsubr  st,st(7)
  407401:	data16 jbe 0x407397
  407404:	iret   
  407405:	jg     0x407389
  407407:	call   0xbe81:0x4a8efbbc
  40740e:	mov    ebx,DWORD PTR ds:0xf5e8409d
  407414:	ins    DWORD PTR es:[edi],dx
  407415:	ds fs lock loop 0x40743d
  40741a:	and    al,0xff
  40741c:	jge    0x4073a4
  40741e:	cli    
  40741f:	pop    ebp
  407420:	aaa    
  407421:	data16 je 0x407499
  407424:	inc    edi
  407425:	popf   
  407426:	jl     0x407485
  407428:	test   eax,0x6d4b1c76
  40742d:	sub    DWORD PTR [ebx+0x2744eecf],edx
  407433:	test   DWORD PTR [esi],esp
  407435:	outs   dx,DWORD PTR ds:[esi]
  407436:	stc    
  407437:	mov    ch,0xa5
  40743a:	mov    al,ds:0x81d04552
  40743f:	sub    DWORD PTR [ecx+0x680d2cbb],ebx
  407445:	dec    esp
  407446:	lods   eax,DWORD PTR ds:[esi]
  407447:	popa   
  407448:	and    dl,BYTE PTR [ebx]
  40744a:	jmp    0xc799c800
  40744f:	aaa    
  407450:	dec    esp
  407451:	and    esi,0xffffff94
  407454:	sbb    eax,0x6f4a6dcd
  407459:	scas   eax,DWORD PTR es:[edi]
  40745a:	lea    ebx,[ecx]
  40745c:	imul   esp,DWORD PTR [eax+0x6c2dffbf],0x86d4ed90
  407466:	leave  
  407467:	push   eax
  407468:	push   ecx
  407469:	sub    edx,esp
  40746b:	ins    BYTE PTR es:[edi],dx
  40746c:	out    0xc1,eax
  40746e:	out    0x4,eax
  407470:	inc    ebp
  407471:	loopne 0x407437
  407473:	cmp    eax,0xd2fabb95
  407478:	mov    esi,0xa3444543
  40747d:	je     0x407486
  40747f:	repnz xchg ebx,eax
  407481:	mov    edx,0x4d84cdd2
  407486:	add    BYTE PTR [edi+0x8de4bdf],dh
  40748c:	mov    ecx,0xde5db8dd
  407491:	sbb    ch,BYTE PTR [ebx+0x6e]
  407494:	test   al,0x28
  407496:	push   ebp
  407497:	into   
  407498:	jae    0x4074da
  40749a:	mov    eax,fs
  40749c:	pushf  
  40749d:	iret   
  40749e:	in     eax,dx
  40749f:	mov    ebp,0x44df8041
  4074a4:	pop    esi
  4074a5:	adc    ebx,DWORD PTR [ebp+0x492c590c]
  4074ab:	push   ecx
  4074ac:	popa   
  4074ad:	xor    eax,0x4f9601b9
  4074b2:	addr16 cmp eax,0x47a72f0c
  4074b8:	shr    BYTE PTR [ecx+0x407b28e7],0x44
  4074bf:	jmp    0x1eb1:0xeaefa8f3
  4074c6:	add    al,0x4b
  4074c8:	(bad)  
  4074c9:	adc    eax,0x1abbf065
  4074ce:	sub    eax,0x93dc96c1
  4074d3:	fs jnp 0x4074f3
  4074d6:	imul   eax,DWORD PTR [ebx-0x4e],0xfffffff9
  4074da:	(bad)  
  4074db:	test   al,0x4e
  4074dd:	cmp    BYTE PTR [eax-0x7e0197f4],al
  4074e3:	ss scas al,BYTE PTR es:[edi]
  4074e5:	xor    edi,edi
  4074e7:	in     eax,dx
  4074e8:	xor    DWORD PTR [eax-0x7edce407],ecx
  4074ee:	xchg   ecx,eax
  4074ef:	push   edx
  4074f0:	sub    al,0x0
  4074f2:	cmp    dh,bl
  4074f4:	or     BYTE PTR [edx-0x4f],ch
  4074f7:	daa    
  4074f8:	cld    
  4074f9:	jge    0x40750f
  4074fb:	mov    ah,0xd2
  4074fd:	stos   DWORD PTR es:[edi],eax
  4074fe:	aam    0xfa
  407500:	pop    edx
  407501:	les    eax,FWORD PTR [edx+0x3e93b843]
  407507:	pushf  
  407508:	(bad)  
  407509:	jl     0x4074c5
  40750b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40750c:	or     al,0xce
  40750e:	out    0xbc,al
  407510:	jecxz  0x4074d1
  407512:	adc    sp,cx
  407515:	add    ebp,DWORD PTR [edi]
  407517:	fcmovnb st,st(0)
  407519:	clc    
  40751a:	sahf   
  40751b:	mov    bh,0xb4
  40751d:	sbb    al,0xb4
  40751f:	mov    BYTE PTR [edi+0x8a6567d],bh
  407525:	stos   DWORD PTR es:[edi],eax
  407526:	sub    ebp,DWORD PTR [edx]
  407528:	mov    ebx,0x3d558803
  40752d:	xor    DWORD PTR [esi+edi*4-0x33e10385],ebp
  407534:	dec    edx
  407535:	ds call 0x928e5554
  40753b:	dec    esp
  40753c:	(bad)  
  40753d:	mov    eax,0x49f3cfb0
  407542:	dec    edi
  407543:	fwait
  407544:	mov    ah,BYTE PTR [esi+0xa]
  407547:	jle    0x407597
  407549:	dec    edx
  40754a:	cmp    DWORD PTR [ebp+0x34],eax
  40754d:	pop    eax
  40754e:	xchg   edx,eax
  40754f:	sub    ebx,edi
  407551:	add    al,0xea
  407553:	data16 sti 
  407555:	pusha  
  407556:	inc    ecx
  407557:	popa   
  407558:	jno    0x4074fe
  40755a:	aam    0x6f
  40755c:	push   es
  40755d:	adc    edi,esi
  40755f:	sbb    al,ah
  407561:	xchg   edi,eax
  407562:	aam    0x7e
  407564:	xchg   ebp,eax
  407565:	fidivr WORD PTR [edx+edx*8-0x54]
  407569:	mov    WORD PTR [ebp-0x3b2a0bf],cs
  40756f:	ds cmp ch,bh
  407572:	push   ecx
  407573:	mov    ch,0xb8
  407575:	push   edx
  407576:	lds    esi,FWORD PTR [ecx-0x2d]
  407579:	pusha  
  40757a:	pushf  
  40757b:	fisttp DWORD PTR [edx+eiz*2+0x57]
  40757f:	aaa    
  407580:	div    BYTE PTR [esi+eax*8+0x3e]
  407584:	mov    al,ds:0xef5dea7
  407589:	xor    eax,0x61df3dfd
  40758e:	lods   al,BYTE PTR ds:[esi]
  40758f:	mov    ds:0x985971a6,al
  407594:	fwait
  407595:	inc    ecx
  407596:	jnp    0x40752a
  407598:	and    esp,DWORD PTR [ebx-0x7fc01658]
  40759e:	lds    eax,FWORD PTR [esi]
  4075a0:	pop    es
  4075a1:	jecxz  0x4075d6
  4075a3:	repnz into 
  4075a5:	cmp    esp,edx
  4075a7:	maxps  xmm7,XMMWORD PTR [edx+esi*2+0x48]
  4075ac:	(bad)  
  4075ad:	cmp    ch,dl
  4075af:	xchg   edi,eax
  4075b0:	push   ebx
  4075b1:	clc    
  4075b2:	jmp    0x97dfc870
  4075b7:	mov    esi,0x6754e3d5
  4075bc:	mov    eax,ds:0xdd6f0ebf
  4075c1:	xchg   ecx,eax
  4075c2:	cwde   
  4075c3:	mov    eax,0x15ac25a9
  4075c8:	imul   esi,DWORD PTR [edi],0x7c94ef27
  4075ce:	xchg   ecx,eax
  4075cf:	push   ecx
  4075d0:	mov    ebx,0xc1491477
  4075d5:	xchg   esp,eax
  4075d6:	aam    0x8c
  4075d8:	jle    0x40755d
  4075da:	push   eax
  4075db:	aas    
  4075dc:	jl     0x4075f1
  4075de:	mov    eax,0xf24dc0cd
  4075e3:	aaa    
  4075e4:	rcr    BYTE PTR [ebx],cl
  4075e6:	push   ecx
  4075e7:	in     al,dx
  4075e8:	popf   
  4075e9:	push   esi
  4075ea:	in     al,0x6f
  4075ec:	mov    ebx,esi
  4075ee:	mov    ecx,0xe5cb4fc
  4075f3:	imul   ebp,DWORD PTR [ebp+0x1b407f07],0x67
  4075fa:	cmp    al,0x76
  4075fc:	retf   
  4075fd:	jle    0x4075bf
  4075ff:	(bad)
  407602:	scas   al,BYTE PTR es:[edi]
  407603:	push   ss
  407604:	jle    0x4075a5
  407606:	je     0x407669
  407608:	daa    
  407609:	outs   dx,BYTE PTR ds:[esi]
  40760a:	pop    eax
  40760b:	lea    edx,ds:0xcdd44c8a
  407611:	ja     0x407626
  407613:	cmp    al,0x86
  407615:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407616:	lahf   
  407617:	outs   dx,DWORD PTR ds:[esi]
  407618:	mov    bl,0xae
  40761a:	xor    eax,0xb4a8d780
  40761f:	imul   ebx,esi,0xffffffcf
  407622:	test   al,0x5e
  407624:	sbb    al,0xfc
  407626:	inc    edx
  407627:	jmp    0x4075fd
  407629:	xchg   ebx,eax
  40762a:	or     BYTE PTR [edi+0x7df6ae8f],ch
  407630:	jmp    0x40764a
  407632:	sar    DWORD PTR [edi-0x73],1
  407635:	into   
  407636:	pop    eax
  407637:	xacquire xchg DWORD PTR [ecx-0x54],esp
  40763b:	pusha  
  40763c:	data16 (bad) 
  40763f:	loopne 0x40763a
  407641:	sar    DWORD PTR [edx-0x1b],1
  407644:	inc    esp
  407645:	ins    DWORD PTR es:[edi],dx
  407646:	add    ebx,DWORD PTR [ecx]
  407648:	out    dx,al
  407649:	xchg   esi,eax
  40764a:	shr    DWORD PTR [esp+ebp*1-0x6a9b6c2c],1
  407651:	push   es
  407652:	and    al,BYTE PTR [edx-0x47]
  407655:	outs   dx,BYTE PTR ds:[esi]
  407656:	data16 (bad) 
  407658:	cmp    esp,DWORD PTR [ebx+0x45]
  40765b:	pop    esi
  40765c:	push   ds
  40765d:	leave  
  40765e:	sub    BYTE PTR [ecx],bh
  407660:	and    ch,cl
  407662:	jb     0x4076c4
  407664:	dec    edx
  407665:	sahf   
  407666:	mov    ds:0xd9d010a8,al
  40766b:	bound  ebp,QWORD PTR [edi-0x26]
  40766e:	fistp  WORD PTR [ebp+0x6e]
  407671:	fst    DWORD PTR [ebp+0x737f93b]
  407677:	fwait
  407678:	dec    edi
  407679:	jl     0x407690
  40767b:	fsubrp st(7),st
  40767d:	clc    
  40767e:	adc    DWORD PTR [esi+eax*4+0x6f],eax
  407682:	sti    
  407683:	xchg   DWORD PTR [eax*2+0x50cee1b2],ecx
  40768a:	mov    dh,0xdb
  40768c:	outs   dx,BYTE PTR ds:[esi]
  40768d:	arpl   WORD PTR [edi-0x5c],di
  407690:	xor    al,0x91
  407692:	pop    ebx
  407693:	js     0x407624
  407695:	sbb    dl,dh
  407697:	add    eax,0x9fea8b44
  40769c:	pop    eax
  40769d:	sar    ebx,1
  40769f:	sbb    al,0x3a
  4076a1:	jmp    0x5211:0xca30d638
  4076a8:	mov    bh,dl
  4076aa:	push   ebp
  4076ab:	leave  
  4076ac:	cmp    ebp,DWORD PTR [ebp+0x79]
  4076af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4076b0:	xchg   esi,eax
  4076b1:	adc    DWORD PTR [ebp-0x6e87e0bc],ebx
  4076b7:	mov    DWORD PTR [ebp+esi*8-0x3b859988],ebx
  4076be:	ret    
  4076bf:	int3   
  4076c0:	(bad)  [edi]
  4076c2:	loope  0x4076ec
  4076c4:	jmp    0xc5d29e5c
  4076c9:	mov    eax,ds:0xee62992a
  4076ce:	pop    ebp
  4076cf:	lahf   
  4076d0:	cmc    
  4076d1:	inc    edx
  4076d2:	sbb    DWORD PTR [ebp-0x14],eax
  4076d5:	xor    eax,0x255c200f
  4076da:	in     eax,dx
  4076db:	sbb    BYTE PTR [edx],dh
  4076dd:	pop    ds
  4076de:	fidiv  WORD PTR [esi-0x7989e8dd]
  4076e4:	jecxz  0x407684
  4076e6:	stos   BYTE PTR es:[edi],al
  4076e7:	addr16 mov al,ds:0xfb16
  4076eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4076ec:	ss jp  0x40769e
  4076ef:	adc    DWORD PTR [esi],esp
  4076f1:	xor    ebx,DWORD PTR [edi+0x2252efd7]
  4076f7:	push   esi
  4076f8:	pushf  
  4076f9:	dec    edx
  4076fa:	test   al,0x68
  4076fc:	and    al,0x46
  4076fe:	stc    
  4076ff:	jmp    0x9f054949
  407704:	adc    edi,DWORD PTR ss:[eax+0x668feb1]
  40770b:	arpl   WORD PTR [esi+0x3a],bp
  40770e:	in     eax,0xa1
  407710:	scas   al,BYTE PTR es:[edi]
  407711:	sbb    ecx,DWORD PTR [ebp+0x550a207]
  407717:	outs   dx,BYTE PTR ds:[esi]
  407718:	out    0xb4,eax
  40771a:	adc    al,BYTE PTR [ebx]
  40771c:	outs   dx,DWORD PTR ds:[esi]
  40771d:	int    0xc7
  40771f:	inc    eax
  407720:	fidiv  WORD PTR [esi+0x46d4ca90]
  407726:	xchg   ebp,eax
  407727:	mov    WORD PTR ds:0x937d3868,ss
  40772d:	mov    bl,0x6a
  40772f:	adc    bh,al
  407731:	nop
  407732:	adc    ah,BYTE PTR [eax]
  407734:	sbb    al,0xfe
  407736:	or     eax,0xf9a02faa
  40773b:	int    0x31
  40773d:	xlat   BYTE PTR ds:[ebx]
  40773e:	lock test eax,0x19fb160f
  407744:	pop    ss
  407745:	test   BYTE PTR [esi+ecx*1+0x5deff63e],al
  40774c:	jns    0x407714
  40774e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40774f:	or     DWORD PTR [ecx+0xaf82c81],esp
  407755:	or     dl,dh
  407757:	mov    dl,0x68
  407759:	inc    ecx
  40775a:	test   cl,0xf1
  40775d:	sbb    bh,bh
  40775f:	push   ebx
  407760:	pop    ds
  407761:	xlat   BYTE PTR ds:[ebx]
  407762:	jp     0x4077ac
  407764:	sbb    al,0x50
  407766:	iret   
  407767:	xor    edx,esp
  407769:	adc    al,0x79
  40776b:	and    esp,DWORD PTR ds:0xd2b3766f
  407771:	jno    0x4077ab
  407773:	push   0x5b
  407775:	push   ebp
  407776:	clc    
  407777:	lea    esi,[ebx+0x2bc01672]
  40777d:	int    0x7b
  40777f:	adc    ebx,DWORD PTR fs:[ebp+0x49]
  407783:	jnp    0x407708
  407785:	dec    ebx
  407786:	mov    es,ecx
  407788:	sbb    BYTE PTR [eax],dh
  40778a:	pop    ecx
  40778b:	pop    ds
  40778c:	xor    DWORD PTR gs:[esi],esp
  40778f:	pop    eax
  407790:	mov    dl,0x41
  407792:	loope  0x4077fd
  407794:	int3   
  407795:	add    ch,cl
  407797:	and    edx,DWORD PTR [esi+0x21]
  40779a:	mov    cl,0x6
  40779c:	nop
  40779d:	lahf   
  40779e:	fld    QWORD PTR [eax-0x4e3766aa]
  4077a4:	xchg   ebp,eax
  4077a5:	not    DWORD PTR [edi+edi*1-0x3c]
  4077a9:	lahf   
  4077aa:	cmc    
  4077ab:	xchg   DWORD PTR [edi],esi
  4077ad:	idiv   DWORD PTR [ebp+ecx*4+0x6f]
  4077b1:	cld    
  4077b2:	inc    BYTE PTR [ebx+0x578ba9f]
  4077b8:	(bad)  
  4077b9:	xlat   BYTE PTR ds:[ebx]
  4077ba:	cmp    BYTE PTR [edx+0x37],0x40
  4077be:	mov    ebx,0x16dde879
  4077c3:	add    dl,0xb0
  4077c6:	jb     0x407811
  4077c8:	push   ss
  4077c9:	test   al,0xd6
  4077cb:	icebp  
  4077cc:	popf   
  4077cd:	and    eax,0xcf663501
  4077d2:	sub    DWORD PTR [ebx],ebp
  4077d4:	addr16 iret 
  4077d6:	pop    ebp
  4077d7:	jge    0x4077d0
  4077d9:	js     0x40780c
  4077db:	inc    eax
  4077dc:	ss or  eax,0xc6aa5a55
  4077e2:	mov    ch,0xba
  4077e4:	cld    
  4077e5:	ds jp  0x4077d0
  4077e8:	mov    BYTE PTR [eax*4-0x2d562457],ch
  4077ef:	mov    ds:0x8eb37b5c,al
  4077f4:	call   0x8ee7:0xf9b6bdfa
  4077fb:	arpl   WORD PTR [edi+eax*1],bp
  4077fe:	jae    0x40783a
  407800:	aaa    
  407801:	mov    dh,0xcb
  407803:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407804:	mul    BYTE PTR [edi+edx*8]
  407807:	xor    dh,dh
  407809:	and    bh,BYTE PTR [eax-0x45423ca2]
  40780f:	repz cmp cl,BYTE PTR [edi+0x5]
  407813:	shr    DWORD PTR [edx+0x7d],1
  407816:	scas   eax,DWORD PTR es:[edi]
  407817:	loope  0x407892
  407819:	push   edi
  40781a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40781b:	xor    ch,dl
  40781d:	mov    eax,ds:0x17426673
  407822:	mov    dh,0x5f
  407824:	cld    
  407825:	daa    
  407826:	xchg   BYTE PTR [eax],cl
  407828:	and    al,0xce
  40782a:	dec    ecx
  40782b:	fadd   QWORD PTR [ebp+esi*1+0x43]
  40782f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407830:	js     0x407828
  407832:	dec    edi
  407833:	mov    al,0x28
  407835:	cld    
  407836:	sbb    edx,DWORD PTR [edi]
  407838:	into   
  407839:	sbb    BYTE PTR [ebx+0xc0f818c],bh
  40783f:	retf   
  407840:	push   eax
  407841:	fidiv  WORD PTR [ecx+0x5fe4be0a]
  407847:	fstp   TBYTE PTR [eax+0x67951d95]
  40784d:	adc    DWORD PTR [ebp-0x2d],ecx
  407850:	out    dx,al
  407851:	mov    eax,ds:0x79a5d34e
  407856:	test   ax,0x5031
  40785a:	push   ds
  40785b:	sbb    eax,0x8cd55d57
  407860:	mov    ch,0xfe
  407862:	sahf   
  407863:	adc    ecx,DWORD PTR [eax]
  407865:	ret    
  407866:	int3   
  407867:	test   BYTE PTR [edi+edi*1+0x480ce31b],dh
  40786e:	cdq    
  40786f:	cli    
  407870:	push   esi
  407871:	inc    ebp
  407872:	call   0x5ff09a80
  407877:	sbb    al,0x2b
  407879:	or     BYTE PTR [eax],bl
  40787b:	push   esp
  40787c:	dec    BYTE PTR [esi]
  40787e:	and    BYTE PTR [edi+0x38],0x32
  407882:	xor    al,BYTE PTR [ecx+0x29]
  407885:	int    0x46
  407887:	pop    eax
  407888:	retf   0x7c19
  40788b:	xchg   al,bh
  40788d:	call   0x57ad:0xfa3b1cb
  407894:	jmp    0x72437322
  407899:	dec    ecx
  40789a:	clc    
  40789b:	pop    ds
  40789c:	ins    BYTE PTR es:[edi],dx
  40789d:	xor    edx,DWORD PTR [eax-0x58d9de96]
  4078a3:	pop    ds
  4078a4:	push   0xffffff8e
  4078a6:	cs daa 
  4078a8:	sbb    BYTE PTR ds:0x679faceb,al
  4078ae:	fcomp  QWORD PTR [ecx+0x12]
  4078b1:	push   ss
  4078b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4078b3:	inc    ebx
  4078b4:	cwde   
  4078b5:	jo     0x407873
  4078b7:	push   edi
  4078b8:	out    0xcf,al
  4078ba:	cli    
  4078bb:	push   ds
  4078bc:	sbb    BYTE PTR [ebx-0x11],0x4e
  4078c0:	loop   0x4078ff
  4078c2:	loop   0x4078cd
  4078c4:	fidivr DWORD PTR [edx+esi*1+0x1e]
  4078c8:	clc    
  4078c9:	(bad)  
  4078ca:	adc    al,0xc5
  4078cc:	icebp  
  4078cd:	cmp    al,al
  4078cf:	sar    BYTE PTR [eax-0x2d700ad1],0x34
  4078d6:	ins    BYTE PTR es:[edi],dx
  4078d7:	xor    eax,0xb4903e62
  4078dc:	inc    ebp
  4078dd:	cmp    DWORD PTR [ebp-0x7d],edx
  4078e0:	pop    ds
  4078e1:	es call 0x57b7:0xad5281b4
  4078e9:	sub    BYTE PTR [edx],ah
  4078eb:	or     al,0xfe
  4078ed:	mov    bl,0x2d
  4078ef:	fwait
  4078f0:	mov    esi,0xf6bb270c
  4078f5:	pop    esi
  4078f6:	dec    edx
  4078f7:	or     edi,DWORD PTR [eax-0x5f]
  4078fa:	gs pop ds
  4078fc:	ret    
  4078fd:	outs   dx,BYTE PTR ds:[esi]
  4078fe:	jecxz  0x40793e
  407900:	ror    ebx,0x2c
  407903:	in     al,dx
  407904:	ins    BYTE PTR es:[edi],dx
  407905:	sub    edx,edi
  407907:	lds    eax,FWORD PTR [edi-0x47]
  40790a:	sbb    ebp,DWORD PTR ds:0xd1886229
  407910:	out    0x76,al
  407912:	xor    eax,0xab73132a
  407917:	xchg   ebx,eax
  407918:	out    0x13,eax
  40791a:	xchg   esp,eax
  40791b:	mov    ebp,0xef05bb15
  407920:	rcl    ch,0x54
  407923:	push   esp
  407924:	iret   
  407925:	push   ds
  407926:	pop    ss
  407927:	xlat   BYTE PTR ds:[ebx]
  407928:	jp     0x40796a
  40792a:	ror    BYTE PTR [eax+eiz*8-0x71b14d3e],cl
  407931:	inc    eax
  407932:	ja     0x407927
  407934:	fistp  QWORD PTR [edx]
  407936:	pop    ecx
  407937:	mov    al,0x65
  407939:	pop    ds
  40793a:	inc    ebp
  40793b:	jmp    0x2dc5df85
  407940:	xlat   BYTE PTR ds:[ebx]
  407941:	out    dx,al
  407942:	adc    cl,bh
  407944:	xor    al,0x5c
  407946:	stc    
  407947:	adc    eax,0xbe7922fc
  40794c:	(bad)  
  40794d:	clc    
  40794e:	in     eax,dx
  40794f:	or     ecx,DWORD PTR [eax+0x7d44c686]
  407955:	inc    esi
  407956:	call   0xb265b9cd
  40795b:	clc    
  40795c:	loop   0x40795e
  40795e:	cmp    eax,0x8a64761b
  407963:	call   0x7f529404
  407968:	xchg   edi,eax
  407969:	(bad)  
  40796a:	mov    ah,0xcc
  40796c:	stos   BYTE PTR es:[edi],al
  40796d:	cwde   
  40796e:	outs   dx,BYTE PTR ds:[esi]
  40796f:	jl     0x407963
  407971:	add    eax,0xa4ec6245
  407976:	out    0xad,eax
  407978:	inc    esi
  407979:	out    dx,eax
  40797a:	sbb    al,0x49
  40797c:	cmp    BYTE PTR [eax+ebx*2+0x1d],bh
  407980:	push   es
  407981:	arpl   WORD PTR [esi-0x14],ax
  407984:	inc    edi
  407985:	jge    0x40793f
  407987:	mov    edx,0x5685fbbf
  40798c:	and    esp,0xffffffe6
  40798f:	pop    eax
  407990:	pop    ebp
  407991:	enter  0xec10,0xe6
  407995:	pop    ss
  407996:	pusha  
  407997:	pushf  
  407998:	jge    0x4079ae
  40799a:	ret    
  40799b:	mul    esp
  40799d:	jmp    0x407a09
  40799f:	(bad)  
  4079a0:	inc    BYTE PTR [ebx+0x5d4b7497]
  4079a6:	shr    BYTE PTR [edx+0x11113f4d],0xf2
  4079ad:	mov    BYTE PTR [esi+0x2b],ch
  4079b0:	jmp    0x1212:0x3192c9e4
  4079b7:	cmp    edi,0xffffff8a
  4079ba:	cmp    al,0x2c
  4079bc:	mov    WORD PTR [ecx+0x1437c8c3],fs
  4079c2:	jle    0x407965
  4079c4:	sbb    ecx,ecx
  4079c6:	sbb    DWORD PTR [eax],ebp
  4079c8:	jle    0x4079d2
  4079ca:	call   0x9b0c:0x4765d2ad
  4079d1:	xlat   BYTE PTR ds:[ebx]
  4079d2:	xchg   ebx,eax
  4079d3:	(bad)  
  4079d4:	jno    0x407a2f
  4079d6:	pop    ebx
  4079d7:	sahf   
  4079d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079d9:	sub    al,al
  4079db:	ror    ecx,cl
  4079dd:	cld    
  4079de:	push   0xffffffa1
  4079e0:	and    BYTE PTR [ecx-0x74416e68],bl
  4079e6:	(bad)  
  4079e8:	mov    WORD PTR [edi+0x5714f623],fs
  4079ee:	adc    DWORD PTR [esi-0x537ac844],ecx
  4079f4:	adc    eax,0xa92205b1
  4079f9:	inc    esp
  4079fa:	xor    al,0x92
  4079fc:	xor    dh,ah
  4079fe:	and    DWORD PTR [edx-0x6dddde22],eax
  407a04:	cmp    DWORD PTR [ebp-0x70f91ee6],edx
  407a0a:	retf   
  407a0b:	xor    eax,0xa04cdc81
  407a10:	push   ecx
  407a11:	xchg   ecx,eax
  407a12:	push   ebx
  407a13:	push   ebp
  407a14:	pusha  
  407a15:	rcl    DWORD PTR [eax+0x48993f06],1
  407a1b:	inc    eax
  407a1c:	ins    BYTE PTR es:[edi],dx
  407a1d:	adc    al,0x69
  407a1f:	mov    fs,WORD PTR [ecx+0x56]
  407a22:	and    BYTE PTR [eax+0x6a],al
  407a25:	xchg   DWORD PTR [eax-0x73],edi
  407a28:	sbb    BYTE PTR [edx+edi*4],bh
  407a2b:	inc    edi
  407a2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a2d:	fcmovnu st,st(7)
  407a2f:	sub    edx,DWORD PTR [edx+0x5a]
  407a32:	mov    ds:0xde6d8b75,eax
  407a37:	out    dx,al
  407a38:	aas    
  407a39:	jnp    0x407a83
  407a3b:	mov    dl,0x54
  407a3d:	mov    al,0x4
  407a3f:	stos   DWORD PTR es:[edi],eax
  407a40:	sub    eax,0x7895b258
  407a45:	cmp    BYTE PTR [ecx-0x58c5a60a],bh
  407a4b:	inc    ecx
  407a4c:	sub    eax,0xc6ab940d
  407a51:	inc    ecx
  407a52:	fs pop esp
  407a54:	push   0xffffffb2
  407a56:	mov    cl,0xb6
  407a58:	xor    al,0x1
  407a5a:	cmp    BYTE PTR [edi+0x7eb4244a],0x9c
  407a61:	lock int3 
  407a63:	mov    ecx,0x89c2333f
  407a68:	das    
  407a69:	sub    dh,bh
  407a6b:	(bad)  
  407a6c:	enter  0x1046,0xbd
  407a70:	sti    
  407a71:	es lahf 
  407a73:	pop    ds
  407a74:	dec    ecx
  407a75:	sub    BYTE PTR [esi+0x39aae864],bh
  407a7b:	loopne 0x407a73
  407a7d:	jns    0x407ae1
  407a7f:	fnstsw WORD PTR [edi]
  407a81:	mov    ecx,0xdb93354d
  407a86:	inc    esi
  407a87:	add    al,cl
  407a89:	imul   ecx,DWORD PTR [ecx-0x2968a34e],0xffffffc1
  407a90:	mov    bh,0x46
  407a92:	gs inc ecx
  407a94:	ror    DWORD PTR [eax+0x7a],cl
  407a97:	mov    ?,WORD PTR [edx]
  407a99:	or     eax,0x25239a5e
  407a9e:	gs and esi,esp
  407aa1:	pop    edi
  407aa2:	les    esi,FWORD PTR [ecx-0x277c48f7]
  407aa8:	enter  0x24fd,0xbd
  407aac:	out    0xdf,eax
  407aae:	test   al,0xef
  407ab0:	lea    edi,[ebp+edx*2+0xc7c0431]
  407ab7:	fdiv   QWORD PTR [edx+0xd0772f0]
  407abd:	or     ch,BYTE PTR [esi+0x78]
  407ac0:	in     al,dx
  407ac1:	fsubp  st(7),st
  407ac3:	mov    ch,0xb5
  407ac5:	stos   BYTE PTR es:[edi],al
  407ac6:	jge    0x407a84
  407ac8:	dec    esi
  407ac9:	add    eax,0xc451e2a
  407ace:	repnz test BYTE PTR [edi+0x2d48ddec],dh
  407ad5:	pop    edi
  407ad6:	je     0x407a9e
  407ad8:	xlat   BYTE PTR ds:[ebx]
  407ad9:	fidivr DWORD PTR ss:[ebx-0x5ffac11e]
  407ae0:	push   esi
  407ae1:	inc    esi
  407ae2:	dec    edx
  407ae3:	push   edi
  407ae4:	jmp    0x55bec87c
  407ae9:	sahf   
  407aea:	hlt    
  407aeb:	aad    0x80
  407aed:	enter  0xf1e3,0x45
  407af1:	(bad)  
  407af3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407af4:	js     0x407b16
  407af6:	inc    ebp
  407af7:	in     al,0x2d
  407af9:	fild   WORD PTR [esi]
  407afb:	inc    ecx
  407afc:	imul   ebp,ebp,0x6b
  407aff:	cmc    
  407b00:	cwde   
  407b01:	out    dx,al
  407b02:	and    al,BYTE PTR [esi+0x7c]
  407b05:	js     0x407b3d
  407b07:	or     DWORD PTR [esi+0xe],ecx
  407b0a:	lods   al,BYTE PTR ds:[esi]
  407b0b:	mov    edx,0x5f875bcd
  407b10:	test   ch,0x38
  407b13:	sub    eax,0x975b9371
  407b18:	cmc    
  407b19:	dec    ebp
  407b1a:	arpl   WORD PTR [ebx],si
  407b1c:	sbb    al,0x2c
  407b1e:	add    BYTE PTR [esi],cl
  407b20:	or     eax,0x964315b3
  407b25:	add    ebx,edx
  407b27:	out    dx,al
  407b28:	or     eax,0x38043c0e
  407b2d:	cmp    ebx,DWORD PTR [ecx+eiz*8-0x6d]
  407b31:	popf   
  407b32:	mov    ecx,0xa49ddfe6
  407b37:	lea    ecx,[edx*2+0x33f1667e]
  407b3e:	stc    
  407b3f:	add    edi,0x3272db
  407b45:	not    edi
  407b47:	and    eax,edi
  407b49:	movsx  di,BYTE PTR [eax+0x1]
  407b4e:	mov    ebx,0x3b4a
  407b53:	sub    di,bx
  407b56:	mov    ebx,0x8a87
  407b5b:	xor    di,bx
  407b5e:	mov    ebx,0x4f97
  407b63:	cmp    di,bx
  407b66:	jne    0x407b8e
  407b6c:	movsx  di,BYTE PTR [eax]
  407b70:	mov    ebx,0x3b4a
  407b75:	sub    di,bx
  407b78:	mov    ebx,0x8a87
  407b7d:	xor    di,bx
  407b80:	mov    ebx,0x4f84
  407b85:	cmp    di,bx
  407b88:	je     0x407b9e
  407b8e:	mov    edi,DWORD PTR [ebp-0x10]
  407b91:	xor    edi,ecx
  407b93:	mov    ebx,esi
  407b95:	sub    ebx,edi
  407b97:	add    eax,ebx
  407b99:	jmp    0x407b49
  407b9e:	mov    esi,DWORD PTR [ebp-0x14]
  407ba1:	mov    esi,DWORD PTR [esi]
  407ba3:	mov    edi,DWORD PTR [eax+0x3c]
  407ba6:	lea    esi,[edi+esi*8+0x78]
  407baa:	mov    esi,DWORD PTR [esi+eax*1]
  407bad:	mov    DWORD PTR [ebp-0x8],esi
  407bb0:	mov    esi,DWORD PTR [ebp+0x8]
  407bb3:	xor    esi,ecx
  407bb5:	add    esi,edx
  407bb7:	mov    DWORD PTR [ebp-0x14],esi
  407bba:	mov    esi,DWORD PTR [ebp+0x8]
  407bbd:	mov    edi,DWORD PTR [ebp-0x8]
  407bc0:	xor    esi,ecx
  407bc2:	add    esi,edx
  407bc4:	pop    ebx
  407bc5:	cmp    edi,esi
  407bc7:	jne    0x407be5
  407bcd:	mov    eax,DWORD PTR [ebp+0xc]
  407bd0:	xor    eax,ecx
  407bd2:	mov    ecx,DWORD PTR [ebp-0x8]
  407bd5:	add    eax,edx
  407bd7:	imul   eax,ecx
  407bda:	mov    DWORD PTR [ebp-0x8],eax
  407bdd:	push   DWORD PTR [ebp+0x18]
  407be0:	jmp    0x407c39
  407be5:	mov    ecx,DWORD PTR [ebp-0x8]
  407be8:	add    ecx,eax
  407bea:	mov    DWORD PTR [ebp-0x14],ecx
  407bed:	mov    ecx,DWORD PTR [ebp-0x14]
  407bf0:	mov    ecx,DWORD PTR [ecx+0xc]
  407bf3:	movsx  cx,BYTE PTR [ecx+eax*1]
  407bf8:	mov    edx,0x3b4a
  407bfd:	sub    cx,dx
  407c00:	mov    edx,0x8a87
  407c05:	xor    cx,dx
  407c08:	mov    edx,0x4f86
  407c0d:	cmp    cx,dx
  407c10:	jne    0x407bdd
  407c16:	mov    ecx,DWORD PTR ds:0x4163b4
  407c1c:	mov    ecx,DWORD PTR [ecx+0x198]
  407c22:	mov    DWORD PTR [ecx],eax
  407c24:	jmp    0x407c4a
  407c29:	mov    ecx,DWORD PTR [ebp+0x18]
  407c2c:	cmp    ecx,0xf89c85b1
  407c32:	jne    0x407c4a
  407c38:	push   eax
  407c39:	push   DWORD PTR [ebp+0x14]
  407c3c:	push   DWORD PTR [ebp+0x10]
  407c3f:	push   DWORD PTR [ebp+0xc]
  407c42:	push   DWORD PTR [ebp+0x8]
  407c45:	call   0x405399
  407c4a:	pop    edi
  407c4b:	pop    esi
  407c4c:	leave  
  407c4d:	ret    0x14
  407c50:	push   ebp
  407c51:	mov    ebp,esp
  407c53:	push   ecx
  407c54:	mov    DWORD PTR [ebp-0x4],0xf89c85bc
  407c5b:	and    DWORD PTR ds:0x413c02,0x414004
  407c65:	mov    eax,DWORD PTR [ebp-0x4]
  407c68:	mov    edx,DWORD PTR [ebp+0x10]
  407c6b:	mov    ecx,0x7510894
  407c70:	xor    eax,ecx
  407c72:	add    eax,0x3272dc
  407c77:	mov    DWORD PTR [edx],eax
  407c79:	movzx  edx,WORD PTR ds:0x413c7c
  407c80:	and    edx,DWORD PTR ds:0x413cf4
  407c86:	mov    DWORD PTR ds:0x413c7c,edx
  407c8c:	mov    eax,DWORD PTR [ebp+0xc]
  407c8f:	sbb    DWORD PTR ds:0x413c02,0x413c0a
  407c99:	xor    eax,ecx
  407c9b:	adc    edx,DWORD PTR ds:0x414010
  407ca1:	push   esi
  407ca2:	sub    edx,DWORD PTR ds:0x413c84
  407ca8:	mov    esi,DWORD PTR [ebp+0x10]
  407cab:	movzx  edx,WORD PTR ds:0x414010
  407cb2:	sbb    DWORD PTR ds:0x413cf4,edx
  407cb8:	mov    edx,0x3272dc
  407cbd:	neg    DWORD PTR ds:0x413d20
  407cc3:	add    eax,edx
  407cc5:	xor    DWORD PTR ds:0x413c06,0x413c1a
  407ccf:	mov    DWORD PTR [esi+0x4],eax
  407cd2:	mov    eax,DWORD PTR [ebp+0x14]
  407cd5:	mov    esi,DWORD PTR [ebp+0x10]
  407cd8:	mov    DWORD PTR [esi+0x8],eax
  407cdb:	mov    eax,DWORD PTR [ebp+0x18]
  407cde:	mov    esi,DWORD PTR [ebp+0x10]
  407ce1:	mov    DWORD PTR [esi+0xc],eax
  407ce4:	mov    eax,DWORD PTR [ebp+0x1c]
  407ce7:	mov    esi,DWORD PTR [ebp+0x10]
  407cea:	mov    DWORD PTR [esi+0x10],eax
  407ced:	mov    eax,DWORD PTR [ebp+0x8]
  407cf0:	xor    eax,ecx
  407cf2:	add    eax,edx
  407cf4:	pop    esi
  407cf5:	leave  
  407cf6:	ret    0x18
  407cf9:	push   ebp
  407cfa:	mov    ebp,esp
  407cfc:	push   ecx
  407cfd:	and    DWORD PTR ds:0x413d34,0x0
  407d07:	xor    eax,eax
  407d09:	add    eax,DWORD PTR ds:0x413d34
  407d0f:	inc    eax
  407d10:	mov    ds:0x413d34,eax
  407d15:	cmp    DWORD PTR ds:0x413d34,0x10
  407d1c:	jne    0x407d30
  407d22:	push   DWORD PTR [ebp-0x14]
  407d25:	push   0x4160bf
  407d2a:	call   DWORD PTR ds:0x41678c
  407d30:	cmp    DWORD PTR ds:0x413d34,0xf
  407d37:	jne    0x407d48
  407d3d:	mov    eax,ds:0x413d34
  407d42:	inc    eax
  407d43:	mov    ds:0x413d34,eax
  407d48:	cmp    DWORD PTR ds:0x413d34,0x1e
  407d4f:	jb     0x407d07
  407d55:	sbb    eax,DWORD PTR ds:0x413bf6
  407d5b:	push   ecx
  407d5c:	mov    DWORD PTR [ebp-0x8],0xf89c85b0
  407d63:	and    DWORD PTR ds:0x413c06,0x0
  407d6d:	jmp    0x407d7f
  407d72:	mov    edx,DWORD PTR ds:0x413c06
  407d78:	inc    edx
  407d79:	mov    DWORD PTR ds:0x413c06,edx
  407d7f:	cmp    DWORD PTR ds:0x413c06,0x1d
  407d86:	jae    0x407dc8
  407d8c:	cmp    DWORD PTR ds:0x413c06,0x27
  407d93:	jne    0x407dbd
  407d99:	push   0x1c64
  407d9e:	push   0x413c06
  407da3:	push   0x752e
  407da8:	push   0x4160cf
  407dad:	push   0x55a9
  407db2:	push   0x2dee
  407db7:	call   DWORD PTR ds:0x416790
  407dbd:	jmp    0x407d72
  407dc2:	and    eax,DWORD PTR ds:0x413ce0
  407dc8:	mov    DWORD PTR [ebp-0x4],0xf89c85b1
  407dcf:	mov    DWORD PTR ds:0x413d34,0x14
  407dd9:	cmp    DWORD PTR ds:0x413d34,0x0
  407de0:	je     0x407e29
  407de6:	cmp    DWORD PTR ds:0x413d34,0x9
  407ded:	jne    0x407dfe
  407df3:	push   0x2bdc
  407df8:	call   DWORD PTR ds:0x416798
  407dfe:	cmp    DWORD PTR ds:0x413d34,0xa
  407e05:	jne    0x407e19
  407e0b:	xor    eax,eax
  407e0d:	add    eax,DWORD PTR ds:0x413d34
  407e13:	dec    eax
  407e14:	mov    ds:0x413d34,eax
  407e19:	mov    eax,ds:0x413d34
  407e1e:	dec    eax
  407e1f:	mov    ds:0x413d34,eax
  407e24:	jmp    0x407dd9
  407e29:	mov    eax,DWORD PTR [ebp-0x4]
  407e2c:	push   esi
  407e2d:	mov    esi,DWORD PTR [ebp-0x8]
  407e30:	mov    edx,0x7510894
  407e35:	xor    eax,edx
  407e37:	xor    esi,edx
  407e39:	mov    ecx,0x3272dc
  407e3e:	add    esi,ecx
  407e40:	add    eax,ecx
  407e42:	imul   eax,esi
  407e45:	mov    esi,DWORD PTR [ebp+0xc]
  407e48:	jmp    0x40a1fd
  407e4d:	mov    ds:0x72fcde4e,al
  407e52:	in     al,dx
  407e53:	xor    dl,0xf9
  407e56:	mov    ebp,0xcbe870e0
  407e5b:	(bad)  
  407e5c:	pop    edx
  407e5d:	iret   
  407e5e:	and    bh,BYTE PTR [esp+edi*2-0x2c]
  407e62:	pop    edi
  407e63:	jl     0x407ee1
  407e65:	push   ss
  407e66:	adc    al,0xa3
  407e68:	fbstp  TBYTE PTR [ebx+0x34759984]
  407e6e:	adc    BYTE PTR [ebx],bh
  407e70:	in     eax,dx
  407e71:	dec    ebp
  407e72:	or     bl,BYTE PTR [edi-0x4348a07e]
  407e78:	(bad)  
  407e79:	(bad)  
  407e7a:	out    dx,al
  407e7b:	(bad)  
  407e7c:	imul   ecx,edi,0xffffffd8
  407e7f:	mov    ch,0xbc
  407e81:	lock jns 0x407ee5
  407e84:	push   ecx
  407e85:	adc    ebp,DWORD PTR [esi+0x46]
  407e88:	pop    ebp
  407e89:	mov    DWORD PTR [eax+edi*2-0x50d1874d],0x5cd42c59
  407e94:	sbb    eax,0xf5dd4556
  407e99:	loop   0x407ed3
  407e9b:	(bad)  
  407e9c:	ins    BYTE PTR es:[edi],dx
  407e9d:	lock pop edx
  407e9f:	or     al,0x4e
  407ea1:	sub    BYTE PTR [eax+0x7a],0x89
  407ea5:	mov    ebx,0x176ba5cf
  407eaa:	pop    ss
  407eab:	and    al,BYTE PTR [edi+0x4b]
  407eae:	(bad)
  407eb2:	jb     0x407f2f
  407eb4:	jae    0x407e72
  407eb6:	sub    BYTE PTR ss:0xde0d5c38,0x87
  407ebe:	pusha  
  407ebf:	jae    0x407e71
  407ec1:	dec    eax
  407ec2:	xchg   esp,eax
  407ec3:	retf   0xcd83
  407ec6:	leave  
  407ec7:	add    eax,0x78c0430e
  407ecc:	ins    DWORD PTR es:[edi],dx
  407ecd:	jge    0x407e57
  407ecf:	pop    ebx
  407ed0:	call   0x262cc47b
  407ed5:	out    0xc6,eax
  407ed7:	shl    BYTE PTR [esi],0xf9
  407eda:	push   ebp
  407edb:	in     eax,0xc5
  407edd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ede:	fs mov bh,ch
  407ee1:	mov    ah,0x10
  407ee3:	lahf   
  407ee4:	dec    ebp
  407ee5:	nop
  407ee6:	mov    ecx,0xf6e0e783
  407eeb:	sbb    ebp,edi
  407eed:	push   esi
  407eee:	mov    ?,WORD PTR [edx+eiz*4+0x72551573]
  407ef5:	xchg   esp,eax
  407ef6:	pop    esi
  407ef7:	repz push ebp
  407ef9:	outs   dx,BYTE PTR ds:[esi]
  407efa:	xor    esp,DWORD PTR [bp+si-0x6]
  407efe:	iret   
  407eff:	leave  
  407f00:	and    BYTE PTR [edx-0x30],0x75
  407f04:	in     al,0xec
  407f06:	sub    ecx,DWORD PTR [ecx]
  407f08:	adc    DWORD PTR ds:0x292fa3be,0xffffffbe
  407f0f:	mov    DWORD PTR [esi+0x76601881],ebp
  407f15:	add    al,0x8f
  407f17:	cli    
  407f18:	fdivr  QWORD PTR [esi-0x695dc65b]
  407f1e:	fcmovb st,st(3)
  407f20:	sbb    ecx,DWORD PTR [ebx]
  407f22:	fistp  QWORD PTR cs:[ebp-0x7f]
  407f26:	dec    edi
  407f27:	mov    es,WORD PTR [ecx-0x61]
  407f2a:	pusha  
  407f2b:	shl    DWORD PTR [esi-0xb21081e],1
  407f31:	jne    0x407ebb
  407f33:	xchg   ebp,eax
  407f34:	out    0x9a,eax
  407f36:	scas   al,BYTE PTR es:[edi]
  407f37:	hlt    
  407f38:	xchg   esp,eax
  407f39:	jmp    0x407f6d
  407f3b:	jb     0x407f3f
  407f3d:	std    
  407f3e:	retf   
  407f3f:	leave  
  407f40:	xchg   ecx,eax
  407f41:	dec    ebx
  407f42:	mov    ds:0x56e7dd20,al
  407f47:	sahf   
  407f48:	pop    edi
  407f49:	sbb    bh,dl
  407f4b:	in     eax,dx
  407f4c:	js     0x407f83
  407f4e:	test   eax,0x1ed391d1
  407f53:	xor    dh,BYTE PTR [ecx+0x67]
  407f56:	mov    ds:0xe927a279,al
  407f5b:	xchg   ebx,eax
  407f5c:	push   eax
  407f5d:	mov    ds:0x89374401,al
  407f62:	mov    ds:0xb2fda12b,eax
  407f67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f68:	ds call 0xb601:0xa9a2dbd
  407f70:	fstp   DWORD PTR [ebx+0x41]
  407f73:	xchg   ebp,eax
  407f74:	test   DWORD PTR [edx-0x3c512d4b],edx
  407f7a:	mov    BYTE PTR [ebx],cl
  407f7c:	pop    esp
  407f7d:	pop    esp
  407f7e:	aam    0x3b
  407f80:	bswap  eax
  407f82:	and    DWORD PTR [ecx+0x75],ecx
  407f85:	clc    
  407f86:	ja     0x407f2d
  407f88:	bound  esp,QWORD PTR [ebx+0x34ec40c7]
  407f8e:	dec    edx
  407f8f:	dec    edx
  407f90:	sbb    BYTE PTR [edi],cl
  407f92:	adc    edx,ebp
  407f94:	or     BYTE PTR [edx],cl
  407f96:	sbb    al,0x5d
  407f98:	xor    ecx,DWORD PTR [eax-0x5f1544b8]
  407f9e:	test   eax,0xee13555a
  407fa3:	sbb    ch,BYTE PTR [esi]
  407fa5:	mov    ebp,0x152030d1
  407faa:	inc    BYTE PTR [esi-0x12d465c9]
  407fb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407fb1:	inc    esp
  407fb2:	push   es
  407fb3:	pop    esp
  407fb4:	xor    eax,0x2dcf5dac
  407fb9:	mov    al,0x16
  407fbb:	jae    0x407fae
  407fbd:	mov    ch,BYTE PTR [esp+0x7ea3d5bd]
  407fc4:	cmp    al,0x45
  407fc6:	enter  0x6f53,0x8f
  407fca:	xor    eax,0x53125ab
  407fcf:	ret    0xf8be
  407fd2:	push   es
  407fd3:	in     eax,dx
  407fd4:	cs dec ebx
  407fd6:	std    
  407fd7:	call   0xa15290fc
  407fdc:	into   
  407fdd:	outs   dx,BYTE PTR ds:[esi]
  407fde:	or     dh,BYTE PTR [eax-0x27]
  407fe1:	scas   eax,DWORD PTR es:[edi]
  407fe2:	ret    
  407fe3:	int3   
  407fe4:	dec    ebp
  407fe5:	dec    edi
  407fe6:	leave  
  407fe7:	push   esp
  407fe8:	iret   
  407fe9:	xchg   ebp,eax
  407fea:	pop    esi
  407feb:	mov    ch,0xac
  407fed:	jbe    0x40803b
  407fef:	jne    0x40800d
  407ff1:	add    BYTE PTR [edi],bh
  407ff3:	dec    esp
  407ff4:	pop    eax
  407ff5:	cld    
  407ff6:	pop    eax
  407ff7:	jne    0x408016
  407ff9:	mov    ds:0x36215d3a,al
  407ffe:	test   al,0xa3
  408000:	cmp    cl,BYTE PTR ds:0xbe4151ee
  408006:	imul   eax,DWORD PTR [ebp+0x49],0xe18204ff
  40800d:	jecxz  0x40804d
  40800f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408010:	scas   al,BYTE PTR es:[edi]
  408011:	push   edx
  408012:	or     DWORD PTR [ebx],edx
  408014:	sub    eax,0x3301312f
  408019:	pop    edi
  40801a:	mov    BYTE PTR [eax+ecx*1],cl
  40801d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40801e:	push   ebx
  40801f:	ja     0x40805f
  408021:	leave  
  408022:	not    BYTE PTR ds:0xb4db1222
  408028:	scas   al,BYTE PTR es:[edi]
  408029:	pop    ecx
  40802a:	aad    0xd3
  40802c:	xchg   ebp,eax
  40802d:	mov    dl,0x5f
  40802f:	in     eax,dx
  408030:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408031:	jp     0x407fc2
  408033:	lahf   
  408034:	dec    ebx
  408035:	jae    0x408069
  408037:	loope  0x408007
  408039:	not    BYTE PTR [edx+0x75]
  40803c:	push   0xffffffba
  40803e:	pop    esp
  40803f:	push   esi
  408040:	mov    bl,0xfa
  408042:	xchg   ebp,eax
  408043:	jo     0x407fde
  408045:	retf   0x6f83
  408048:	add    BYTE PTR [edi-0x80],0x8d
  40804c:	outs   dx,DWORD PTR ds:[esi]
  40804d:	icebp  
  40804e:	adc    ecx,edx
  408050:	retf   0x2bac
  408053:	dec    edi
  408054:	dec    edx
  408055:	ds scas eax,DWORD PTR es:[edi]
  408057:	xor    DWORD PTR [eax-0x6902ef8a],esi
  40805d:	xchg   DWORD PTR [edi+0x7be4dd38],eax
  408063:	sbb    DWORD PTR [edx-0x719ac410],ebx
  408069:	adc    esi,DWORD PTR [ebx-0x5d]
  40806c:	sub    DWORD PTR [edi],esi
  40806e:	push   eax
  40806f:	jmp    0xab19:0x15cc863a
  408076:	rcl    DWORD PTR [ebx-0x6216e572],0x9
  40807d:	call   0xbc04:0x4cdcc57e
  408084:	pop    ebx
  408085:	adc    BYTE PTR [eax-0x1a1f4f41],al
  40808b:	fucomi st,st(6)
  40808d:	stc    
  40808e:	jbe    0x408057
  408090:	test   al,0x2f
  408092:	jge    0x40804a
  408094:	call   DWORD PTR [edi+ecx*4]
  408097:	xor    eax,0x30c4d85
  40809c:	(bad)  
  40809d:	mov    eax,ds:0x46c77a2d
  4080a2:	add    DWORD PTR [edi+0x26],ecx
  4080a5:	fistp  QWORD PTR [edi]
  4080a7:	jnp    0x40810b
  4080a9:	mov    dh,0xd9
  4080ab:	jo     0x408034
  4080ad:	jl     0x408044
  4080af:	hlt    
  4080b0:	mov    ss,WORD PTR [edx-0x7ab5903a]
  4080b6:	push   ebp
  4080b7:	push   esp
  4080b8:	scas   al,BYTE PTR es:[edi]
  4080b9:	es push ecx
  4080bb:	cwde   
  4080bc:	mov    eax,0xa8b5aa33
  4080c1:	adc    BYTE PTR [esp+eiz*2-0x292a564c],cl
  4080c8:	push   esi
  4080c9:	sbb    al,0xc6
  4080cb:	push   ebx
  4080cc:	pop    esi
  4080cd:	(bad)  [eax-0x1abc2221]
  4080d3:	jle    0x40807b
  4080d5:	push   0x51
  4080d7:	xchg   edi,eax
  4080d8:	(bad)  
  4080d9:	out    dx,al
  4080da:	dec    edi
  4080db:	daa    
  4080dc:	into   
  4080dd:	into   
  4080de:	sbb    ebx,DWORD PTR [edi+0x20ab8472]
  4080e4:	and    eax,0x365e2120
  4080e9:	mov    al,ds:0x853e1717
  4080ee:	sbb    eax,0x5bf4f75d
  4080f3:	jb     0x40809b
  4080f5:	pop    ss
  4080f6:	push   eax
  4080f7:	(bad)  
  4080f8:	jne    0x40816a
  4080fa:	fstp   st(6)
  4080fc:	dec    ebx
  4080fd:	mov    al,0x36
  4080ff:	push   esi
  408100:	scas   eax,DWORD PTR es:[edi]
  408101:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408102:	mov    ebx,0x9a8bf626
  408107:	add    DWORD PTR [edx+0xd335f61],edx
  40810d:	mov    ah,0x76
  40810f:	jl     0x40816e
  408111:	(bad)  
  408112:	mov    edx,0x82cac78a
  408117:	in     al,dx
  408118:	out    0x46,al
  40811a:	loopne 0x4080b4
  40811c:	(bad)  
  40811d:	jl     0x40811c
  40811f:	mov    edx,0x5ddd0ac5
  408124:	ins    BYTE PTR es:[edi],dx
  408125:	push   ds
  408126:	xor    eax,0x84cd2f2d
  40812b:	or     al,0x2e
  40812d:	test   BYTE PTR [eax+ebx*1],0x30
  408131:	push   esp
  408132:	xchg   DWORD PTR [ecx+0xb6d72],ebp
  408138:	push   es
  408139:	sbb    bh,BYTE PTR [edx+0x172a5fa3]
  40813f:	test   eax,0x9147aa4
  408144:	pushf  
  408145:	sub    ch,BYTE PTR [ebp+0x17]
  408148:	leave  
  408149:	popa   
  40814a:	mov    bh,0xf2
  40814c:	cld    
  40814d:	and    eax,DWORD PTR [ecx+0xb20f107]
  408153:	push   0x806ae057
  408158:	outs   dx,BYTE PTR ds:[esi]
  408159:	inc    esi
  40815a:	mov    dh,0x6c
  40815c:	push   0xfffffff2
  40815e:	int3   
  40815f:	xchg   esi,eax
  408160:	mov    dh,0x22
  408162:	aam    0xee
  408164:	in     eax,dx
  408165:	cmp    BYTE PTR [ecx+0x6607ab3d],bl
  40816b:	inc    eax
  40816c:	cmp    BYTE PTR [edi-0x1b],0x82
  408170:	imul   DWORD PTR [edx-0x78]
  408173:	(bad)  
  408174:	pop    ss
  408175:	(bad)  
  408176:	cli    
  408177:	aam    0xf0
  408179:	xor    al,0x9f
  40817b:	push   ecx
  40817c:	loope  0x408183
  40817e:	sub    esi,esp
  408180:	xchg   edx,eax
  408181:	aad    0x48
  408183:	in     eax,0x92
  408185:	imul   eax,DWORD PTR [ebp-0x40da56e7],0xb5e7b532
  40818f:	je     0x408178
  408191:	jne    0x408150
  408193:	ja     0x40817b
  408195:	mov    WORD PTR [ecx],ds
  408197:	adc    eax,0xb7321b70
  40819c:	mov    eax,ds:0x6fe33cd5
  4081a1:	sub    eax,0x2a20a3d8
  4081a6:	out    dx,eax
  4081a7:	js     0x4081d9
  4081a9:	adc    BYTE PTR [edi-0x13],dl
  4081ac:	dec    esi
  4081ad:	sbb    ebp,DWORD PTR [edi]
  4081af:	mov    WORD PTR [edi-0x3],?
  4081b2:	ins    DWORD PTR es:[edi],dx
  4081b3:	arpl   WORD PTR [ebx],bx
  4081b5:	jnp    0x4081c4
  4081b7:	pop    ebx
  4081b8:	inc    esp
  4081b9:	stos   BYTE PTR es:[edi],al
  4081ba:	push   esp
  4081bb:	or     DWORD PTR [eax+0x33],0x8b933623
  4081c2:	push   cs
  4081c3:	out    dx,al
  4081c4:	jns    0x408235
  4081c6:	leave  
  4081c7:	pop    edi
  4081c8:	test   al,0x61
  4081ca:	call   0xa92a6bf2
  4081cf:	sub    BYTE PTR [ebp+0x45],dh
  4081d2:	loope  0x408206
  4081d4:	jnp    0x4081b7
  4081d6:	int3   
  4081d7:	stc    
  4081d8:	adc    BYTE PTR [ebp+0x15],bh
  4081db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4081dc:	enter  0x57b0,0x69
  4081e0:	mov    cl,0x2a
  4081e2:	xchg   DWORD PTR [ecx-0x5d],ecx
  4081e5:	sti    
  4081e6:	test   BYTE PTR [edi+0x66],ah
  4081e9:	clc    
  4081ea:	push   0x62
  4081ec:	jmp    0x408222
  4081ee:	pop    ebp
  4081ef:	sub    al,BYTE PTR ds:0x893f1c29
  4081f5:	ret    
  4081f6:	cmp    BYTE PTR [ebp+0x7],dh
  4081f9:	clc    
  4081fa:	in     eax,0xa0
  4081fc:	mov    cl,0x73
  4081fe:	xchg   esp,eax
  4081ff:	jbe    0x408229
  408201:	fistp  QWORD PTR [edi+0x23]
  408204:	ja     0x4081c4
  408206:	enter  0x5142,0xd2
  40820a:	je     0x408205
  40820c:	sbb    al,0x9f
  40820e:	mov    edi,esi
  408210:	mov    ebx,DWORD PTR [esi-0x6d]
  408213:	adc    bl,al
  408215:	mov    cl,0x13
  408217:	es pushf 
  408219:	add    ecx,edi
  40821b:	jmp    0x40826e
  40821d:	push   edi
  40821e:	or     BYTE PTR [eax-0x44],dh
  408221:	test   al,0xa3
  408223:	sub    al,0x53
  408225:	aam    0x2d
  408227:	or     BYTE PTR [ecx+eiz*1-0x33bdbdb2],0x83
  40822f:	xchg   edi,eax
  408230:	hlt    
  408231:	(bad)  
  408232:	in     eax,0x4b
  408234:	imul   ebp,DWORD PTR [edx],0xe3b6153f
  40823a:	adc    BYTE PTR [edi+0x2a1c292d],cl
  408240:	xchg   edx,eax
  408241:	mov    ebp,0x792f64d5
  408246:	mov    al,0x68
  408248:	and    al,0x65
  40824a:	xchg   DWORD PTR [esi],ebp
  40824c:	fmul   QWORD PTR [esi-0x79]
  40824f:	cmp    BYTE PTR [ebx],dh
  408251:	jnp    0x40822b
  408253:	lds    eax,FWORD PTR [edi-0x18241df]
  408259:	or     eax,0x2d353035
  40825e:	add    eax,0x4fac83a5
  408263:	sahf   
  408264:	jno    0x4082d5
  408266:	push   esp
  408267:	mov    dh,0x49
  408269:	cmp    ebx,esp
  40826b:	mov    al,0xf8
  40826d:	ins    DWORD PTR es:[edi],dx
  40826e:	or     esp,DWORD PTR [edx+0x20]
  408271:	test   DWORD PTR [ebp-0xf],eax
  408274:	cmp    bh,BYTE PTR [ecx]
  408276:	imul   ebp,ebp,0x4c
  408279:	add    DWORD PTR [ebx-0x21],0xdaea66b5
  408280:	icebp  
  408281:	pop    ecx
  408282:	add    al,0xc7
  408284:	rol    ebp,cl
  408286:	sbb    DWORD PTR [ebx],edi
  408288:	and    edi,0x79
  40828b:	add    al,al
  40828d:	or     dh,cl
  40828f:	jae    0x40830c
  408291:	mov    esi,0xdce01549
  408296:	aaa    
  408297:	or     eax,0x86d4c594
  40829c:	adc    al,BYTE PTR [ecx+0x4861a467]
  4082a2:	pop    ss
  4082a3:	repz push 0x906e1b7c
  4082a9:	shl    esi,0xf8
  4082ac:	stc    
  4082ad:	mov    WORD PTR [edi+0x128ece59],ss
  4082b3:	mov    esp,0xe5f7943d
  4082b8:	mov    ds:0xe1c953a5,eax
  4082bd:	fmul   DWORD PTR [edx]
  4082bf:	mov    ebx,0x22674c8e
  4082c4:	imul   ebp,DWORD PTR [esi-0x5f73d2b],0x59b93463
  4082ce:	enter  0x1d48,0x85
  4082d2:	pop    ds
  4082d3:	in     eax,0x55
  4082d5:	fbld   TBYTE PTR [edx-0x1de4dc3c]
  4082db:	sbb    DWORD PTR [ebp-0x2704ae1b],edx
  4082e1:	push   esp
  4082e2:	adc    al,0xff
  4082e4:	jnp    0x408290
  4082e6:	push   ds
  4082e7:	iret   
  4082e8:	pop    ss
  4082e9:	outs   dx,DWORD PTR ds:[esi]
  4082ea:	in     eax,dx
  4082eb:	mov    edi,0x9d40dffd
  4082f0:	add    dl,bl
  4082f2:	ret    0x7bfb
  4082f5:	xor    BYTE PTR [edx-0x49],al
  4082f8:	and    eax,0x6ee260b7
  4082fd:	pop    eax
  4082fe:	lock dec edi
  408300:	cdq    
  408301:	jmp    0xd917:0xd8282460
  408308:	mov    ah,0x48
  40830a:	imul   eax,DWORD PTR [edx-0x67],0xffffff99
  40830e:	out    dx,eax
  40830f:	mov    BYTE PTR [edx],ch
  408311:	fild   QWORD PTR [esi+eiz*4]
  408314:	stos   BYTE PTR es:[edi],al
  408315:	popa   
  408316:	pop    ss
  408317:	sbb    al,0xd9
  408319:	pop    ecx
  40831a:	jnp    0x408368
  40831c:	inc    esi
  40831d:	and    bh,ah
  40831f:	in     al,0x89
  408321:	scas   eax,DWORD PTR es:[edi]
  408322:	push   ebp
  408323:	add    eax,0x2d75ca87
  408328:	(bad)  
  408329:	aam    0xd3
  40832b:	pop    ebx
  40832c:	test   DWORD PTR [ebp+ebx*1+0x41b697e2],eax
  408333:	fisub  WORD PTR ds:0xd79cc21e
  408339:	mov    esi,?
  40833b:	shl    BYTE PTR [ebp-0x21],1
  40833e:	aam    0x1d
  408340:	jae    0x4082f2
  408342:	inc    ecx
  408343:	mov    dh,0x4c
  408345:	imul   edi,ecx,0x80d1798
  40834b:	pop    eax
  40834c:	test   dl,bl
  40834e:	(bad)  
  408350:	jae    0x408381
  408352:	and    cl,cl
  408354:	rcr    ch,0x4d
  408357:	(bad)  
  408358:	out    dx,eax
  408359:	mov    ecx,0xb343a0f5
  40835e:	out    0x3a,eax
  408360:	xchg   ebx,eax
  408361:	push   eax
  408362:	jmp    0x40830f
  408364:	jg     0x4083b7
  408366:	cld    
  408367:	and    DWORD PTR [edi],ecx
  408369:	or     ebx,DWORD PTR [ebp-0x4b479fa3]
  40836f:	cmp    edi,DWORD PTR [eax+0x76]
  408372:	push   ss
  408373:	cld    
  408374:	xchg   ebx,eax
  408375:	aad    0xf3
  408377:	mov    ecx,0xa0f71a0c
  40837c:	mov    cl,0x24
  40837e:	mov    al,0x68
  408380:	jne    0x4083df
  408382:	xor    eax,eax
  408384:	call   0xa8c6c26d
  408389:	fwait
  40838a:	dec    esi
  40838b:	push   es
  40838c:	stc    
  40838d:	add    al,0x10
  40838f:	outs   dx,DWORD PTR ds:[esi]
  408390:	out    0x80,eax
  408392:	push   ebx
  408393:	push   cs
  408394:	sbb    ch,dl
  408396:	inc    eax
  408397:	sbb    DWORD PTR [edi],eax
  408399:	out    dx,eax
  40839a:	adc    DWORD PTR [ebx],ebx
  40839c:	pop    ss
  40839d:	pop    ebp
  40839e:	arpl   WORD PTR [ebx-0x4db59cfc],cx
  4083a4:	xchg   ebp,eax
  4083a5:	adc    esi,DWORD PTR ds:0xb0cade0b
  4083ab:	or     al,0x4a
  4083ad:	push   0xffffff80
  4083af:	fld    QWORD PTR [esi-0x54]
  4083b2:	sbb    bl,BYTE PTR [eax]
  4083b4:	sbb    eax,0x4dc44a18
  4083b9:	(bad)  
  4083ba:	loope  0x40835a
  4083bc:	ja     0x40834a
  4083be:	xor    cl,BYTE PTR [eax]
  4083c0:	cmp    al,0xf3
  4083c2:	adc    eax,0xa6755e2a
  4083c7:	mov    eax,DWORD PTR [ecx+eiz*8]
  4083ca:	jnp    0x408448
  4083cc:	ficom  DWORD PTR [ebx]
  4083ce:	xchg   edi,eax
  4083cf:	push   edi
  4083d0:	pop    fs
  4083d2:	int3   
  4083d3:	imul   ecx,DWORD PTR [ecx+0x47],0xcb50218f
  4083da:	(bad)
  4083de:	clc    
  4083df:	stos   DWORD PTR es:[edi],eax
  4083e0:	and    eax,0xaa48f154
  4083e5:	fwait
  4083e6:	or     eax,0xf421c1f9
  4083eb:	retf   
  4083ec:	stos   BYTE PTR es:[edi],al
  4083ed:	popa   
  4083ee:	popa   
  4083ef:	and    ch,BYTE PTR [ebx]
  4083f1:	in     eax,dx
  4083f2:	jmp    0xa8e:0x6281677d
  4083f9:	into   
  4083fa:	mov    eax,ds:0xca09f516
  4083ff:	dec    ebp
  408400:	jmp    0x4083a9
  408402:	popa   
  408403:	sub    ecx,DWORD PTR [esi-0x64]
  408406:	sti    
  408407:	push   ebp
  408408:	push   ds
  408409:	mov    ds:0xe22e4064,al
  40840e:	in     al,dx
  40840f:	or     bl,al
  408411:	pusha  
  408412:	add    eax,0x481db578
  408417:	xchg   BYTE PTR [edi-0x5b],bh
  40841a:	aad    0xcd
  40841c:	lea    esp,[edx+ecx*2+0x41ae1110]
  408423:	jo     0x408485
  408425:	call   0x7c5d212c
  40842a:	in     al,dx
  40842b:	jno    0x408416
  40842d:	push   ebp
  40842e:	dec    ebx
  40842f:	push   edx
  408430:	shl    BYTE PTR [esi+0x38],0x88
  408434:	or     edx,0xffffffc3
  408437:	aaa    
  408438:	arpl   WORD PTR [esp+ebp*2+0x19],cx
  40843c:	jl     0x4083ec
  40843e:	hlt    
  40843f:	or     ebp,edx
  408441:	clc    
  408442:	sub    al,0x4c
  408444:	cmp    al,0x96
  408446:	cmp    al,0x14
  408448:	pop    ss
  408449:	test   BYTE PTR [ecx-0x42],0x8
  40844d:	jp     0x4083d9
  40844f:	or     al,0xb0
  408451:	dec    edx
  408452:	push   ds
  408453:	pop    ecx
  408454:	mov    ecx,0xf17daf2f
  408459:	jle    0x40845a
  40845b:	jno    0x408462
  40845d:	mov    ?,WORD PTR [esi-0x18]
  408460:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408461:	sbb    al,cl
  408463:	popa   
  408464:	stos   BYTE PTR es:[edi],al
  408465:	stos   BYTE PTR es:[edi],al
  408466:	fbstp  TBYTE PTR [ebx+0x5ffffa13]
  40846c:	jmp    0x2957:0x9da9cb34
  408473:	inc    esi
  408474:	and    BYTE PTR [ebp-0x5d],ah
  408477:	dec    esi
  408478:	(bad)  
  408479:	aad    0x21
  40847b:	fsubr  st,st(1)
  40847d:	mov    al,ds:0x87d84b62
  408482:	jle    0x4084d3
  408484:	push   es
  408485:	mov    dl,al
  408487:	popf   
  408488:	sub    eax,0xebfb2c6a
  40848d:	jp     0x40842c
  40848f:	out    dx,al
  408490:	loope  0x4084ef
  408492:	les    ebp,FWORD PTR es:[ebp+0x79598a1c]
  408499:	xchg   esp,eax
  40849a:	sbb    bl,BYTE PTR [edi+0x589a10bd]
  4084a0:	pop    ds
  4084a1:	sub    eax,0x644c049f
  4084a6:	nop
  4084a7:	and    al,0x90
  4084a9:	fldcw  WORD PTR [edx]
  4084ab:	mov    dl,0xdf
  4084ad:	inc    esi
  4084ae:	sub    al,0x7d
  4084b0:	mov    edx,0xffe91dd5
  4084b5:	xchg   ebx,eax
  4084b6:	(bad)  
  4084b7:	sub    edx,DWORD PTR [edx+ebx*2-0x4]
  4084bb:	cdq    
  4084bc:	cld    
  4084bd:	or     al,0x59
  4084bf:	or     cl,dh
  4084c1:	jmp    0xbf5a260f
  4084c6:	adc    eax,0xbc271332
  4084cb:	dec    eax
  4084cc:	pop    edx
  4084cd:	ja     0x4084ac
  4084cf:	fdiv   DWORD PTR [edi-0x18a57826]
  4084d5:	xchg   edi,eax
  4084d6:	jae    0x40851b
  4084d8:	retf   
  4084d9:	mov    cl,0x69
  4084db:	jo     0x408498
  4084dd:	fcom   QWORD PTR [ebx-0x7c34ae44]
  4084e3:	xchg   ecx,eax
  4084e4:	sub    BYTE PTR [esi-0x57b27fbf],al
  4084ea:	xchg   BYTE PTR [ebx-0x63be96f2],ah
  4084f0:	fwait
  4084f1:	xor    al,0x17
  4084f3:	or     al,0xea
  4084f5:	or     BYTE PTR [eax-0x47e41d86],bh
  4084fb:	or     DWORD PTR [ebx+0x65],edx
  4084fe:	fbstp  TBYTE PTR [ebx+0x4c]
  408501:	arpl   WORD PTR [eax],di
  408503:	pop    eax
  408505:	push   0xffffff81
  408507:	fiadd  WORD PTR [edi-0x1c1d7cb7]
  40850d:	push   ss
  40850e:	fist   DWORD PTR [edx+0xaa21a83]
  408514:	push   esp
  408515:	sti    
  408516:	inc    ebx
  408517:	fs sub esi,ebx
  40851a:	fwait
  40851b:	push   edi
  40851c:	xlat   BYTE PTR ds:[ebx]
  40851d:	data16 rol BYTE PTR [edx-0x80],1
  408521:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408522:	or     al,0x88
  408524:	imul   esp,DWORD PTR es:[edx+0x52ea6276],0x57
  40852c:	(bad)  
  40852d:	xchg   ecx,eax
  40852e:	add    esi,esi
  408530:	addr16 aas 
  408532:	sbb    BYTE PTR [eax-0x7c],cl
  408535:	xor    DWORD PTR [ecx+0x1],edi
  408538:	dec    ebx
  408539:	fild   QWORD PTR [edx+ebp*4-0x5d]
  40853d:	enter  0x21fc,0x88
  408541:	inc    DWORD PTR [esi+0xa0accef]
  408547:	cmp    BYTE PTR ds:0xb5ce2648,ch
  40854d:	add    BYTE PTR [edx+0x6c307660],0xd0
  408554:	xchg   BYTE PTR ds:0x6e122738,bl
  40855a:	mov    ebx,0xfea94934
  40855f:	in     al,0xe0
  408561:	xchg   ebx,eax
  408562:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408563:	out    0xcf,eax
  408565:	jg     0x40850b
  408567:	addr16 pop ebp
  408569:	mov    cl,0x30
  40856b:	adc    ebx,esp
  40856d:	jecxz  0x4085d3
  40856f:	jmp    ebp
  408571:	sbb    ah,ah
  408573:	dec    ebx
  408574:	xor    cl,BYTE PTR [ecx]
  408576:	push   eax
  408577:	sti    
  408578:	inc    ecx
  408579:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40857a:	inc    eax
  40857b:	ret    0x6ec4
  40857e:	rcr    BYTE PTR [edi],0x89
  408581:	sbb    ebx,0xce1ebee1
  408587:	(bad)  
  408588:	(bad)
  40858c:	xchg   edx,eax
  40858d:	mov    al,ds:0x8330d20d
  408592:	xchg   ecx,eax
  408593:	and    al,0x8
  408595:	dec    ecx
  408596:	aad    0x45
  408598:	cld    
  408599:	and    al,0xcf
  40859b:	mov    cl,0x99
  40859d:	imul   eax,edi,0xffffffae
  4085a0:	sbb    BYTE PTR [esi-0x31],0x8b
  4085a4:	sahf   
  4085a5:	imul   esp,DWORD PTR [edi+eiz*2+0x4],0xffffffbc
  4085aa:	xor    DWORD PTR [esi],ebp
  4085ac:	ficom  WORD PTR [edx]
  4085ae:	sbb    dh,BYTE PTR [ebx]
  4085b0:	jp     0x408600
  4085b2:	jle    0x40859f
  4085b4:	mov    dh,0xb2
  4085b6:	mov    dl,0xdd
  4085b8:	pop    ebp
  4085b9:	xchg   al,ah
  4085bb:	push   ds
  4085bc:	leave  
  4085bd:	jo     0x408565
  4085bf:	mov    BYTE PTR [esi],ah
  4085c1:	iret   
  4085c2:	mov    ds:0xed98cdcf,eax
  4085c7:	cwde   
  4085c8:	mov    gs,WORD PTR [ebp+0x113b9cc8]
  4085ce:	dec    eax
  4085cf:	out    dx,eax
  4085d0:	xor    al,0x92
  4085d2:	test   BYTE PTR [eax-0x2b9354e1],dh
  4085d8:	mov    ecx,0x42a9e058
  4085dd:	jae    0x40857c
  4085df:	cld    
  4085e0:	(bad)  
  4085e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4085e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4085e3:	add    al,0x69
  4085e5:	mov    esp,0x3f4fa2a5
  4085ea:	mov    al,0x6a
  4085ec:	cmp    dl,BYTE PTR [esi]
  4085ee:	scas   al,BYTE PTR es:[edi]
  4085ef:	and    bl,BYTE PTR [ebx-0x65361467]
  4085f5:	adc    BYTE PTR [ecx+0x6a],ch
  4085f8:	out    0xcc,eax
  4085fa:	jecxz  0x408630
  4085fc:	aaa    
  4085fd:	out    dx,eax
  4085fe:	into   
  4085ff:	dec    esi
  408600:	push   ds
  408601:	loope  0x4085c2
  408603:	jg     0x4085c5
  408605:	mov    ds:0xdbcbade0,al
  40860a:	in     eax,0x73
  40860c:	mov    edx,0x87f5ee1a
  408611:	aad    0xf
  408613:	and    esi,ecx
  408615:	add    al,0x2a
  408617:	fmul   DWORD PTR [esi]
  408619:	inc    ebx
  40861a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40861b:	loop   0x408607
  40861d:	add    DWORD PTR [esi],esi
  40861f:	pop    ds
  408620:	xor    BYTE PTR [edi-0x54b2c10],al
  408626:	mov    bl,0xed
  408628:	ds icebp 
  40862a:	pop    eax
  40862b:	and    dl,BYTE PTR [ecx]
  40862d:	idiv   ecx
  40862f:	cmp    bl,BYTE PTR [esi+0x5cebe6bd]
  408635:	and    BYTE PTR [edx-0x34],ah
  408638:	add    BYTE PTR [ebx],dl
  40863a:	jae    0x4085fb
  40863c:	call   0xb16ba12a
  408641:	mov    esp,0x20a77709
  408646:	sub    al,cl
  408648:	push   es
  408649:	jo     0x4086b9
  40864b:	sar    DWORD PTR [eax],cl
  40864d:	xchg   esi,eax
  40864e:	bound  ecx,QWORD PTR [edx-0x4213710c]
  408654:	ds mov edx,0x3c51cd19
  40865a:	scas   al,BYTE PTR es:[edi]
  40865b:	or     dl,BYTE PTR [ebx-0x28]
  40865e:	data16 into 
  408660:	xchg   ebp,eax
  408661:	mov    ebx,0xc6a117c6
  408666:	inc    edx
  408667:	add    ch,cl
  408669:	shl    BYTE PTR [ebx+edi*1+0x2b],1
  40866d:	xchg   edi,eax
  40866e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40866f:	mov    al,0x5c
  408671:	sbb    eax,0x698233ab
  408676:	addr16 or al,0xe8
  408679:	mov    eax,ds:0xa43543f3
  40867e:	jb     0x408634
  408680:	sub    eax,0xc580a4a2
  408685:	xchg   edi,eax
  408686:	in     eax,0x8c
  408688:	inc    bp
  40868a:	mov    WORD PTR [edi-0x64],?
  40868d:	sbb    BYTE PTR [ecx+0x78974641],dl
  408693:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408694:	jg     0x4086a5
  408696:	xor    esp,DWORD PTR [edx+0x3]
  408699:	mov    ebx,0x5fa92b36
  40869e:	sub    ecx,DWORD PTR [ebp+0x58]
  4086a1:	push   edx
  4086a2:	xor    DWORD PTR [ebx+0x40],ecx
  4086a5:	mov    dh,0xa1
  4086a7:	mov    ecx,DWORD PTR [edx-0x5a35a6b7]
  4086ad:	sbb    dh,dh
  4086af:	(bad)  
  4086b1:	imul   eax,DWORD PTR [ecx+0x72debb11],0xffffff87
  4086b8:	mov    ah,0xfd
  4086ba:	pop    ds
  4086bb:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  4086bd:	and    edi,DWORD PTR [edx]
  4086bf:	shl    DWORD PTR [edi+0x620eb516],0x13
  4086c6:	sbb    bh,BYTE PTR [edi]
  4086c8:	push   edi
  4086c9:	jnp    0x40869d
  4086cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4086cc:	imul   eax,edi,0xb244c737
  4086d2:	into   
  4086d3:	pop    esp
  4086d4:	loope  0x4086b4
  4086d6:	shr    DWORD PTR [eax+0x38],1
  4086d9:	push   ds
  4086da:	sub    BYTE PTR [esi],bh
  4086dc:	xchg   ebp,eax
  4086dd:	sub    ebp,esi
  4086df:	ins    BYTE PTR es:[edi],dx
  4086e0:	nop
  4086e1:	pop    eax
  4086e2:	mov    ds:0xb93a8c84,eax
  4086e7:	jle    0x408746
  4086e9:	es mov esi,0x8faa31f7
  4086ef:	aas    
  4086f0:	ss sbb al,0xa6
  4086f3:	push   es
  4086f4:	fistp  QWORD PTR [edi+edx*2-0x25]
  4086f8:	rcl    DWORD PTR [edi-0x6d],1
  4086fb:	rcl    BYTE PTR [ebx],1
  4086fd:	add    al,BYTE PTR [edx]
  4086ff:	cdq    
  408700:	rcr    cl,0x8c
  408703:	or     DWORD PTR [esi+0x6d],ecx
  408706:	daa    
  408707:	xor    BYTE PTR es:[edi],ah
  40870a:	sbb    BYTE PTR [esi],al
  40870c:	test   eax,0x128bef63
  408711:	nop
  408712:	call   0xf5b7eb68
  408717:	ds in  al,0x55
  40871a:	ins    DWORD PTR es:[edi],dx
  40871b:	and    edx,esp
  40871d:	jp     0x4086e9
  40871f:	xchg   edi,eax
  408720:	pop    ecx
  408721:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408722:	mov    cl,0xf0
  408724:	jae    0x408776
  408726:	iret   
  408727:	in     eax,0x86
  408729:	bound  ebp,QWORD PTR fs:0xbfd3b918
  408730:	dec    ebp
  408731:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408732:	not    DWORD PTR [ebp-0x4215babe]
  408738:	inc    edi
  408739:	and    cl,0x27
  40873c:	add    DWORD PTR [ecx+0x33],ecx
  40873f:	dec    eax
  408740:	(bad)  
  408741:	adc    BYTE PTR [ebx],0xb3
  408744:	jp     0x4087bb
  408746:	daa    
  408747:	mov    ds:0x55070857,eax
  40874c:	test   edi,ecx
  40874e:	repnz ficomp WORD PTR [ebx-0x5d]
  408752:	xchg   esp,eax
  408753:	dec    eax
  408754:	test   ch,0xee
  408757:	mov    esp,0x544ef657
  40875c:	mov    esp,0xf998c567
  408761:	push   esp
  408762:	xchg   BYTE PTR [edx],cl
  408764:	sbb    eax,0xf8c62988
  408769:	mov    cl,0x6b
  40876b:	jmp    0x40876d
  40876d:	ins    BYTE PTR es:[edi],dx
  40876e:	test   bh,dh
  408770:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408771:	mov    edi,0xb2a9a2b6
  408776:	dec    eax
  408777:	and    eax,0xe278a27
  40877c:	jge    0x40874b
  40877e:	jmp    0x408733
  408780:	out    dx,al
  408781:	retf   
  408782:	and    BYTE PTR [eax],0x67
  408785:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408786:	outs   dx,BYTE PTR ds:[esi]
  408787:	loope  0x408753
  408789:	dec    ebx
  40878a:	adc    DWORD PTR [ecx],0xffffffcf
  40878d:	cmc    
  40878e:	push   es
  40878f:	cli    
  408790:	dec    edx
  408791:	or     ebp,DWORD PTR [edx-0x2f93088]
  408797:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408798:	test   eax,0x9675d4f7
  40879d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40879e:	dec    edx
  40879f:	or     eax,0xad032a6
  4087a4:	ror    BYTE PTR [ecx],0xcc
  4087a7:	jecxz  0x4087af
  4087a9:	bsr    ebp,DWORD PTR [edi]
  4087ac:	push   0x2b3aab68
  4087b1:	xlat   BYTE PTR ds:[ebx]
  4087b2:	pop    ebx
  4087b3:	loope  0x4087ea
  4087b5:	push   ecx
  4087b6:	jns    0x40878a
  4087b8:	aaa    
  4087b9:	test   DWORD PTR [ebx-0x5558c595],edi
  4087bf:	xchg   DWORD PTR [ebp-0x4da9a5d0],ebp
  4087c5:	sub    BYTE PTR [eax+0x5134e05a],ah
  4087cb:	mov    edx,0xc3ef636c
  4087d0:	xor    esp,eax
  4087d2:	mov    al,0x4
  4087d4:	stc    
  4087d5:	add    BYTE PTR [ebx-0x4ca8a580],ah
  4087db:	in     al,0xc6
  4087dd:	dec    dl
  4087df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4087e0:	ds int 0xbf
  4087e3:	retf   0x8d4b
  4087e6:	neg    DWORD PTR [edx]
  4087e8:	ret    0x87a6
  4087eb:	js     0x4087ec
  4087ed:	pusha  
  4087ee:	mov    ebp,0xa4b93aa4
  4087f3:	push   ecx
  4087f4:	sbb    cl,BYTE PTR [ebp+0x1d56bef6]
  4087fa:	adc    DWORD PTR [eax+eax*8-0x493f6818],esi
  408801:	adc    BYTE PTR [eax+ecx*8-0x29],ah
  408805:	retf   0xd7f2
  408808:	jle    0x4087a1
  40880a:	aam    0xa2
  40880c:	retf   
  40880d:	fistp  QWORD PTR [ebx-0x80]
  408810:	test   eax,0x33f819f6
  408815:	test   eax,0xcba4404b
  40881a:	fdiv   QWORD PTR [eax+0x33]
  40881d:	das    
  40881e:	(bad)  
  40881f:	aaa    
  408820:	(bad)  
  408822:	test   BYTE PTR [ebx+0x7f],al
  408825:	and    DWORD PTR [eax+0x6d06366],0xbf92f5f1
  40882f:	fs mov ebx,0x759fd333
  408835:	mov    dl,0x91
  408837:	xor    BYTE PTR [ecx-0x28],dh
  40883a:	dec    esp
  40883b:	outs   dx,DWORD PTR ds:[esi]
  40883c:	mov    eax,ds:0xb1db1b04
  408841:	jo     0x40887c
  408843:	add    al,0xed
  408845:	loop   0x40883f
  408847:	lea    esi,cs:[edx*4-0x4ae77ed7]
  40884f:	pop    ebp
  408850:	test   eax,0x9ecb0444
  408855:	xchg   ebp,eax
  408856:	je     0x408859
  408858:	mov    ch,BYTE PTR [edx+0x18]
  40885b:	repnz loopne 0x4088b2
  40885e:	idiv   DWORD PTR [ebx+eax*1]
  408861:	dec    ebx
  408862:	cmc    
  408863:	nop
  408864:	repz xor BYTE PTR [ecx+0x46],0xb5
  408869:	sbb    DWORD PTR [ebp-0x521cc574],ecx
  40886f:	call   0x8a92:0xa07c66ef
  408876:	mov    DWORD PTR [ebx],edi
  408878:	popf   
  408879:	mov    cl,0x56
  40887b:	out    dx,eax
  40887c:	iret   
  40887d:	mov    ecx,0x7fad5d2a
  408882:	mov    WORD PTR [esi-0x3c],ds
  408885:	dec    ecx
  408886:	jl     0x408817
  408888:	(bad)  
  408889:	repz xor DWORD PTR [edx+0x38],ebx
  40888d:	jmp    0xe17a:0x4604008a
  408894:	imul   bh
  408896:	xor    BYTE PTR [ecx+0x6a],bh
  408899:	mov    ch,ah
  40889b:	pop    ss
  40889c:	cs pop eax
  40889e:	xchg   dl,dl
  4088a0:	pop    ebp
  4088a1:	and    al,0x63
  4088a3:	popf   
  4088a4:	enter  0x980c,0x3c
  4088a8:	adc    al,BYTE PTR [edx+0x213d3afc]
  4088ae:	xchg   DWORD PTR [edi],eax
  4088b0:	gs in  al,0x12
  4088b3:	out    dx,eax
  4088b4:	aas    
  4088b5:	shr    DWORD PTR [eax],cl
  4088b7:	jbe    0x408936
  4088b9:	popf   
  4088ba:	jb     0x4088d8
  4088bc:	shl    DWORD PTR [edx+0x4b7ec1c8],0x54
  4088c3:	cmc    
  4088c4:	pop    ds
  4088c5:	cmp    BYTE PTR [edi],bh
  4088c7:	push   ds
  4088c8:	dec    edi
  4088c9:	mov    WORD PTR [edi+0x8f427bf],cs
  4088cf:	xchg   esi,eax
  4088d0:	adc    ebp,eax
  4088d2:	test   BYTE PTR [eax],cl
  4088d4:	cli    
  4088d5:	lods   eax,DWORD PTR ds:[esi]
  4088d6:	sahf   
  4088d7:	ins    DWORD PTR es:[edi],dx
  4088d8:	(bad)  
  4088d9:	repnz fwait
  4088db:	shl    BYTE PTR ds:0xe819ce6d,0xde
  4088e2:	gs retf 0x3fb4
  4088e6:	into   
  4088e7:	imul   DWORD PTR [esi+0xf]
  4088ea:	in     ax,dx
  4088ec:	cmp    DWORD PTR [edx+eax*2],0x79485519
  4088f3:	call   0x905e373f
  4088f8:	inc    ebx
  4088f9:	call   0x4da41c8a
  4088fe:	xchg   edx,eax
  4088ff:	sub    ch,BYTE PTR [edx+eiz*4]
  408902:	jo     0x408901
  408904:	jo     0x4088f0
  408906:	clc    
  408907:	push   esp
  408908:	loop   0x4088d0
  40890a:	adc    DWORD PTR [edx],eax
  40890c:	sti    
  40890d:	daa    
  40890e:	test   al,0xcf
  408910:	rcr    bl,1
  408912:	shl    BYTE PTR [esi-0x7ed53674],1
  408918:	jge    0x4088ed
  40891a:	cmc    
  40891b:	dec    edx
  40891c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40891d:	clc    
  40891e:	scas   al,BYTE PTR es:[edi]
  40891f:	jae    0x40890d
  408921:	test   ecx,0x79be39c
  408927:	mov    ebx,0x7416144b
  40892c:	nop
  40892d:	jns    0x408994
  40892f:	dec    edi
  408930:	cwde   
  408931:	retf   
  408932:	xchg   edx,eax
  408933:	jo     0x4089b3
  408935:	ss or  eax,0x850300e6
  40893b:	mov    DWORD PTR [edx+0x672a5854],edx
  408941:	not    BYTE PTR [eax-0x5b]
  408944:	or     DWORD PTR [ebx-0x3bc063ac],esp
  40894a:	fimul  WORD PTR [edx+edi*1]
  40894d:	sbb    BYTE PTR [eax],cl
  40894f:	inc    ebp
  408950:	fwait
  408951:	xor    DWORD PTR [esi+0x56],esp
  408954:	pop    esi
  408955:	add    al,0x4e
  408957:	leave  
  408958:	mov    bh,BYTE PTR [ebp+0x5e]
  40895b:	sub    al,0x64
  40895d:	outs   dx,BYTE PTR ds:[esi]
  40895e:	jmp    0x9dcd709a
  408963:	aad    0xcd
  408965:	sub    ebp,esp
  408967:	out    0x86,al
  408969:	ds sub eax,0x46681d24
  40896f:	ja     0x4088f3
  408971:	pop    eax
  408972:	cmp    DWORD PTR [ebp+0x3293d327],0x7d805e21
  40897c:	add    ah,ch
  40897e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40897f:	retf   
  408980:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408981:	rol    bh,1
  408983:	jno    0x408937
  408985:	push   ecx
  408986:	out    dx,eax
  408987:	rep stos DWORD PTR es:[edi],eax
  408989:	adc    DWORD PTR [esi-0x59],eax
  40898c:	xchg   edi,eax
  40898d:	and    bh,ch
  40898f:	mov    ebx,0x1a980e0a
  408994:	cwde   
  408995:	and    bl,dh
  408997:	mov    edi,0xafe3c128
  40899c:	sub    esi,edx
  40899e:	mov    edi,0xbf58941e
  4089a3:	xchg   BYTE PTR [esi+edx*2-0x57],al
  4089a7:	sub    BYTE PTR [esi],bl
  4089a9:	cmp    edx,eax
  4089ab:	mov    dl,0xa9
  4089ad:	adc    cl,BYTE PTR [esp]
  4089b0:	test   esp,ebp
  4089b2:	add    ebp,DWORD PTR ds:0xadb63682
  4089b8:	(bad)  
  4089b9:	jmp    FWORD PTR [ebp-0x69ce2a28]
  4089bf:	inc    edx
  4089c0:	(bad)  
  4089c1:	ins    DWORD PTR es:[edi],dx
  4089c2:	jae    0x4089a0
  4089c4:	test   dl,dh
  4089c6:	es sbb ah,ch
  4089c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4089ca:	jl     0x4089af
  4089cc:	xchg   esp,eax
  4089cd:	adc    BYTE PTR [edi],cl
  4089cf:	out    dx,al
  4089d0:	mov    ebp,0xca7ce252
  4089d5:	push   es
  4089d6:	(bad)  
  4089d7:	iret   
  4089d8:	mov    ds:0x37e07a7d,eax
  4089dd:	les    edx,FWORD PTR [ecx+0x68]
  4089e0:	mov    al,bh
  4089e2:	dec    ebx
  4089e3:	push   es
  4089e4:	enter  0x9c62,0x4c
  4089e8:	xchg   edi,eax
  4089e9:	sbb    dl,BYTE PTR [edx-0x1007acca]
  4089ef:	rcl    BYTE PTR ds:0xf4459388,cl
  4089f5:	xchg   DWORD PTR [esi-0x15],edx
  4089f8:	sub    DWORD PTR [esp+edx*1-0xe],eax
  4089fc:	sbb    DWORD PTR [eax+ecx*8],ebp
  4089ff:	inc    eax
  408a00:	adc    eax,DWORD PTR [ebx-0x37]
  408a03:	mov    ebx,DWORD PTR [ecx+0x2a]
  408a06:	scas   eax,DWORD PTR es:[edi]
  408a07:	adc    edi,ebp
  408a09:	cmp    ebx,DWORD PTR [edx+0x6]
  408a0c:	jecxz  0x408a3a
  408a0e:	cmp    BYTE PTR [edi-0x6d],0x64
  408a12:	shr    DWORD PTR fs:0xa381f759,cl
  408a19:	jmp    0x548b54b4
  408a1e:	inc    ebp
  408a1f:	lods   eax,DWORD PTR ds:[esi]
  408a20:	mov    edi,0x9fbabb45
  408a25:	repnz pop ds
  408a27:	lods   al,BYTE PTR ds:[esi]
  408a28:	cmp    al,0x32
  408a2a:	xchg   ebx,eax
  408a2b:	(bad)
  408a2e:	(bad)  
  408a2f:	cs push esi
  408a31:	pop    esp
  408a32:	loop   0x408a7e
  408a34:	std    
  408a35:	adc    cl,BYTE PTR [edx-0x234c47fb]
  408a3b:	(bad)  
  408a3c:	fisttp QWORD PTR [ecx]
  408a3e:	es mov edx,0x206c1132
  408a44:	sbb    BYTE PTR [esi+0x1afd120c],al
  408a4a:	loopne 0x408a13
  408a4c:	not    DWORD PTR [edi+0x1f]
  408a4f:	pushf  
  408a50:	les    esi,FWORD PTR [ebx+0x71b50847]
  408a56:	loope  0x408ad4
  408a58:	jo     0x408a49
  408a5a:	jnp    0x408a63
  408a5c:	jl     0x408a14
  408a5e:	fwait
  408a5f:	ins    DWORD PTR es:[edi],dx
  408a60:	inc    eax
  408a61:	mov    ds:0xc46f894a,al
  408a66:	pusha  
  408a67:	pop    ecx
  408a68:	mov    esi,0x27c525d8
  408a6d:	mov    cl,0xe7
  408a6f:	int3   
  408a70:	adc    edx,esp
  408a72:	jnp    0x408a88
  408a74:	aaa    
  408a75:	es add eax,0x7499e0f9
  408a7b:	cli    
  408a7c:	add    al,0xc7
  408a7e:	je     0x408af0
  408a80:	arpl   sp,di
  408a82:	pop    ds
  408a83:	scas   eax,DWORD PTR es:[edi]
  408a84:	and    edx,esi
  408a86:	je     0x408a0c
  408a88:	out    0x6e,eax
  408a8a:	sahf   
  408a8b:	outs   dx,BYTE PTR ds:[esi]
  408a8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a8d:	cmc    
  408a8e:	jg     0x408acd
  408a90:	xchg   ebx,eax
  408a91:	lock stos BYTE PTR es:[edi],al
  408a93:	xor    al,0xdd
  408a95:	inc    ebx
  408a96:	gs and al,0x6b
  408a99:	fs sub eax,ecx
  408a9c:	pop    edx
  408a9d:	mov    ah,0x90
  408a9f:	repnz imul edi,DWORD PTR [eax-0x41b98138],0xffffff88
  408aa7:	inc    eax
  408aa8:	dec    ebx
  408aa9:	imul   BYTE PTR [ebx+ecx*8+0x38afae6d]
  408ab0:	mov    ebx,0xf8fbe61e
  408ab5:	imul   ebp,DWORD PTR [ebx-0x72dd5a5f],0x40ef8fe
  408abf:	cwde   
  408ac0:	pop    ebx
  408ac1:	sbb    DWORD PTR ds:0x896eee6a,ebx
  408ac8:	fidivr WORD PTR [eax+0x18c5e707]
  408ace:	sub    edi,DWORD PTR [eax]
  408ad0:	ins    DWORD PTR es:[edi],dx
  408ad1:	and    esi,edx
  408ad3:	popf   
  408ad4:	cmp    al,0x1e
  408ad6:	out    0xf3,al
  408ad8:	shl    dh,0x41
  408adb:	jp     0x408a84
  408add:	jnp    0x408b22
  408adf:	mov    eax,ds:0x3d030374
  408ae4:	xchg   ebx,eax
  408ae5:	jne    0x408a7b
  408ae7:	inc    ecx
  408ae8:	sub    BYTE PTR [ebx],0xc5
  408aeb:	sub    eax,eax
  408aed:	mov    ah,0x97
  408aef:	loope  0x408b17
  408af1:	jecxz  0x408ac8
  408af3:	inc    edx
  408af4:	push   eax
  408af5:	push   esi
  408af6:	fsubr  QWORD PTR ds:0x20da67b
  408afc:	adc    BYTE PTR [edi+eax*4-0x6d],bh
  408b00:	(bad)  
  408b01:	nop
  408b02:	jmp    0x13249379
  408b07:	add    al,al
  408b09:	cmp    al,0x62
  408b0b:	(bad)  
  408b0e:	int3   
  408b0f:	aaa    
  408b10:	inc    eax
  408b11:	push   edi
  408b12:	adc    eax,0xeb91948
  408b17:	jmp    0x408b8c
  408b19:	mov    dl,0xbb
  408b1b:	enter  0x9ab5,0x1f
  408b1f:	xchg   edi,eax
  408b20:	and    cl,dl
  408b22:	pop    esp
  408b23:	sbb    cl,BYTE PTR [eax-0x7a]
  408b26:	call   0x4fc5a844
  408b2b:	dec    eax
  408b2c:	adc    eax,ecx
  408b2e:	and    eax,0x7fb7054a
  408b33:	aaa    
  408b34:	push   ebx
  408b35:	xlat   BYTE PTR ds:[ebx]
  408b36:	mov    dl,0x28
  408b38:	daa    
  408b39:	fwait
  408b3a:	jl     0x408bb4
  408b3c:	and    eax,0x2a315040
  408b41:	(bad)  
  408b42:	pop    edi
  408b43:	and    eax,0x204b92ac
  408b48:	add    ax,0x5a7f
  408b4c:	push   esi
  408b4d:	test   eax,0x966e6391
  408b52:	mov    ebx,0xebba36e4
  408b57:	and    ah,BYTE PTR [eax]
  408b59:	int3   
  408b5a:	sbb    ebx,ebp
  408b5c:	adc    al,0xd
  408b5e:	sbb    dl,BYTE PTR [ecx+eax*4+0x7119d795]
  408b65:	dec    ecx
  408b66:	xchg   edi,eax
  408b67:	inc    edi
  408b68:	into   
  408b69:	retf   0x2dea
  408b6c:	push   ebx
  408b6d:	and    eax,DWORD PTR [esi-0x25a8fcb9]
  408b73:	jbe    0x408b4e
  408b75:	and    al,0x37
  408b77:	sub    cl,BYTE PTR [ebx+0x732af734]
  408b7d:	int3   
  408b7e:	(bad)
  408b82:	sbb    DWORD PTR [esi],0xffffffbb
  408b85:	inc    edx
  408b86:	dec    ecx
  408b87:	lds    ebp,FWORD PTR [ecx-0x55]
  408b8a:	inc    edi
  408b8b:	xor    esi,edx
  408b8d:	data16 jo 0x408bb2
  408b90:	mov    dl,0xf4
  408b92:	mov    eax,0xedbe1751
  408b97:	pop    ebx
  408b98:	mov    ds:0xbb3bdabf,eax
  408b9d:	imul   esi,DWORD PTR [ecx-0x20d29b25],0x61
  408ba4:	pop    edi
  408ba5:	push   cs
  408ba6:	mov    ebp,ecx
  408ba8:	pop    eax
  408ba9:	xchg   edx,eax
  408baa:	imul   edx,eax,0x62
  408bad:	add    al,0xe8
  408baf:	mov    edx,0x510a6ae6
  408bb4:	pop    esi
  408bb5:	sbb    al,0xf2
  408bb7:	jb     0x408bf2
  408bb9:	stc    
  408bba:	jb     0x408c03
  408bbc:	ffreep st(0)
  408bbe:	outs   dx,DWORD PTR ds:[esi]
  408bbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408bc0:	cld    
  408bc1:	movq   mm7,QWORD PTR [esi+0x5a]
  408bc5:	aad    0x8d
  408bc7:	xor    edx,ecx
  408bc9:	stos   DWORD PTR es:[edi],eax
  408bca:	dec    eax
  408bcb:	or     dl,BYTE PTR [edi]
  408bcd:	fs les ebp,FWORD PTR fs:[eax+edi*2-0x53]
  408bd3:	in     al,dx
  408bd4:	adc    BYTE PTR [edx],dl
  408bd6:	and    DWORD PTR [edx-0x6a],0x6a
  408bda:	push   ds
  408bdb:	or     eax,0x2cf46f45
  408be0:	push   eax
  408be1:	mov    DWORD PTR [esi-0x1c],ecx
  408be4:	or     al,0x8d
  408be6:	push   ds
  408be7:	jp     0x408bfc
  408be9:	pop    esp
  408bea:	cmp    ebx,DWORD PTR [edi-0x4b4fe375]
  408bf0:	and    dl,BYTE PTR [ebp-0x56]
  408bf3:	imul   esi,DWORD PTR ds:0xb54adeb5,0x3
  408bfa:	repnz pop ebx
  408bfc:	mov    ah,0x90
  408bfe:	push   edi
  408bff:	enter  0xdb20,0x95
  408c03:	and    al,0x63
  408c05:	test   al,0xeb
  408c07:	xor    ebx,ecx
  408c09:	bound  edi,QWORD PTR [ebx-0x5f]
  408c0c:	sbb    eax,0x9bbdc897
  408c11:	push   esp
  408c12:	es scas eax,DWORD PTR es:[edi]
  408c14:	aaa    
  408c15:	ja     0x408c04
  408c17:	or     ebp,ebp
  408c19:	aad    0x54
  408c1b:	jmp    0x3f42:0x27d09b16
  408c22:	xchg   edi,eax
  408c23:	or     DWORD PTR [ecx-0x30fd0726],eax
  408c29:	jle    0x408c3d
  408c2b:	inc    esi
  408c2c:	push   0x26d4c8e
  408c31:	iret   
  408c32:	pop    es
  408c33:	add    al,0x7e
  408c35:	push   ss
  408c36:	add    eax,0x1274cd75
  408c3b:	adc    DWORD PTR [edx-0x506cbbf1],0xe020bd10
  408c45:	iret   
  408c46:	aaa    
  408c47:	xor    al,0xfd
  408c49:	adc    edi,esp
  408c4b:	add    BYTE PTR [edi+edi*4],cl
  408c4e:	(bad)  
  408c50:	dec    ecx
  408c51:	adc    bh,BYTE PTR [ecx-0x6a164040]
  408c57:	mov    ah,0x26
  408c59:	aam    0x9d
  408c5b:	ins    BYTE PTR es:[edi],dx
  408c5c:	push   ebx
  408c5d:	ss retf 
  408c5f:	mov    dh,0xa4
  408c61:	dec    esi
  408c62:	jmp    0xa47de626
  408c67:	mov    dl,0xc8
  408c69:	pusha  
  408c6a:	(bad)  
  408c6b:	pop    edx
  408c6c:	xor    BYTE PTR [ebp-0x1e],ah
  408c6f:	enter  0xcc39,0x51
  408c73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c74:	sub    al,0x2
  408c76:	jae    0x408cd5
  408c78:	sbb    BYTE PTR [esi-0x69],ch
  408c7b:	xor    eax,0x4f067a87
  408c80:	push   esi
  408c81:	mov    al,0x65
  408c83:	inc    ecx
  408c84:	mul    DWORD PTR [edi-0x1a]
  408c87:	fdivr  QWORD PTR [edx+0x38]
  408c8a:	xchg   edi,eax
  408c8b:	dec    edi
  408c8c:	(bad)  
  408c8d:	ds js  0x408c2d
  408c90:	fist   WORD PTR [ecx-0x1c964283]
  408c96:	cwde   
  408c97:	add    al,0xb9
  408c99:	call   0x8d05:0x8b2360f7
  408ca0:	lds    esp,FWORD PTR [edi+0x5d]
  408ca3:	xchg   esi,eax
  408ca4:	xor    ah,BYTE PTR [ecx+0x60]
  408ca7:	push   esi
  408ca8:	dec    ebp
  408ca9:	mov    ds:0x98eaa4bc,eax
  408cae:	iret   
  408caf:	lahf   
  408cb0:	jnp    0x408caf
  408cb2:	(bad)  
  408cb4:	sbb    eax,0x6dcfbc3a
  408cb9:	sar    DWORD PTR [eax],0x9d
  408cbc:	mov    edx,0x450a250d
  408cc1:	pushf  
  408cc2:	imul   edx,DWORD PTR [ecx],0x51
  408cc5:	iret   
  408cc6:	add    al,0x77
  408cc8:	xchg   esp,eax
  408cc9:	mov    DWORD PTR [esi],ebx
  408ccb:	pop    edi
  408ccc:	loope  0x408d22
  408cce:	stos   BYTE PTR es:[edi],al
  408ccf:	mov    al,0x38
  408cd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408cd2:	int3   
  408cd3:	inc    ebp
  408cd4:	adc    DWORD PTR [ebp+0x432ebe9],ebp
  408cda:	cmp    al,0x7
  408cdc:	test   DWORD PTR ds:0x9b438fa,esp
  408ce2:	cmp    cl,BYTE PTR [ecx]
  408ce4:	call   FWORD PTR ds:0x3c61eb7d
  408cea:	les    ebx,FWORD PTR [esi+0x45]
  408ced:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408cee:	jbe    0x408d0a
  408cf0:	jo     0x408cfb
  408cf2:	lock fst QWORD PTR [eax-0x7e7e985e]
  408cf9:	fsubrp st(5),st
  408cfb:	mov    ecx,0x9f4fabeb
  408d00:	retf   
  408d01:	mov    BYTE PTR [eax],bh
  408d03:	jo     0x408cc5
  408d05:	cmp    al,0xf3
  408d07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d08:	mov    ds:0xe9b01dfe,al
  408d0d:	je     0x408d1f
  408d0f:	mov    ds:0x8347f86e,eax
  408d14:	xlat   BYTE PTR ds:[ebx]
  408d15:	mov    ah,0xee
  408d17:	xor    al,BYTE PTR [eax+0x7d]
  408d1a:	mov    al,ds:0x57202471
  408d1f:	mov    ds:0xa7e04866,eax
  408d24:	ds in  eax,0x24
  408d27:	add    eax,DWORD PTR [esi]
  408d29:	mov    ecx,0x1721ae0d
  408d2e:	xor    eax,0x14b8351
  408d33:	xchg   ebx,eax
  408d34:	call   0x4a18:0x31f531bc
  408d3b:	add    BYTE PTR [esp+eiz*2],al
  408d3e:	enter  0xd877,0xe3
  408d42:	iret   
  408d43:	lock outs dx,DWORD PTR ds:[esi]
  408d45:	in     eax,dx
  408d46:	mov    dh,0x86
  408d48:	sub    al,0xb1
  408d4a:	push   ds
  408d4b:	outs   dx,BYTE PTR ds:[esi]
  408d4c:	stc    
  408d4d:	jle    0x408cda
  408d4f:	pop    esi
  408d50:	adc    esi,0xffffffb3
  408d53:	xor    eax,0x27a3c640
  408d58:	pop    ecx
  408d59:	mov    edx,0x277c8870
  408d5e:	test   DWORD PTR [eax+0x3ea888e1],edx
  408d64:	pop    eax
  408d65:	gs dec ecx
  408d67:	sub    dl,BYTE PTR [edx-0x29]
  408d6a:	cmp    bl,ah
  408d6c:	dec    edi
  408d6d:	lods   eax,DWORD PTR ds:[esi]
  408d6e:	add    DWORD PTR [eax+0x4f215613],ecx
  408d74:	push   0x642abc3a
  408d79:	mov    ebp,DWORD PTR [eax+0x3d]
  408d7c:	mov    al,ds:0x8a642a00
  408d81:	jge    0x408d96
  408d83:	fs test eax,0x92bac60d
  408d89:	pushf  
  408d8a:	scas   eax,DWORD PTR es:[edi]
  408d8b:	mov    bl,0x79
  408d8d:	retf   0x514
  408d90:	cld    
  408d91:	xor    edx,eax
  408d93:	push   cs
  408d94:	push   edx
  408d95:	ficomp DWORD PTR cs:[eax+0x19]
  408d99:	or     esi,edi
  408d9b:	fild   DWORD PTR [ecx]
  408d9d:	stos   DWORD PTR es:[edi],eax
  408d9e:	mov    al,ds:0x7de4b263
  408da3:	pop    edi
  408da4:	mov    al,ds:0x2985622a
  408da9:	dec    eax
  408daa:	pushf  
  408dab:	sub    DWORD PTR [ebx+0x4c],0x3d676261
  408db2:	aam    0xe1
  408db4:	or     al,0x19
  408db6:	mov    ch,0x79
  408db8:	data16 cmp cl,al
  408dbb:	out    0xef,eax
  408dbd:	add    dl,BYTE PTR [eax+esi*2-0x5595f27a]
  408dc4:	cdq    
  408dc5:	inc    ebp
  408dc6:	push   ds
  408dc7:	aad    0x60
  408dc9:	mov    eax,ds:0x14d29498
  408dce:	(bad)  
  408dcf:	stc    
  408dd0:	and    BYTE PTR [esi],cl
  408dd2:	sbb    DWORD PTR [ecx],edx
  408dd4:	pop    eax
  408dd5:	xchg   esp,eax
  408dd7:	jl     0x408db6
  408dd9:	sar    BYTE PTR [esi],0x8c
  408ddc:	aaa    
  408ddd:	mov    al,ds:0xebf005a6
  408de2:	xor    ch,ah
  408de4:	mov    ebp,0x3a416949
  408de9:	sub    BYTE PTR [edi-0x38],cl
  408dec:	aad    0xc3
  408dee:	mov    eax,0x358787f3
  408df3:	xchg   ebp,eax
  408df4:	loope  0x408dfe
  408df6:	dec    esi
  408df7:	mov    bh,0x1b
  408df9:	jge    0x408dc5
  408dfb:	and    ebx,DWORD PTR [eax-0x42d67581]
  408e01:	test   eax,0x9e8f8915
  408e06:	adc    edx,DWORD PTR ds:0x3b871188
  408e0c:	mov    eax,0x69f6e83f
  408e11:	test   eax,0x9e1fa00
  408e16:	mov    ch,0x42
  408e18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e19:	imul   edx,DWORD PTR [edx-0x3fb9c3e2],0x18
  408e20:	in     al,0xbf
  408e22:	adc    BYTE PTR [ebx+0x48],bh
  408e25:	les    ebp,FWORD PTR [ecx]
  408e27:	inc    edi
  408e28:	ss adc al,0xa8
  408e2b:	adc    eax,0x7c74dc1e
  408e30:	xchg   esi,eax
  408e31:	cld    
  408e32:	(bad)  
  408e33:	push   edi
  408e34:	jae    0x408ea6
  408e36:	leave  
  408e37:	cmp    BYTE PTR [ecx],ah
  408e39:	dec    edi
  408e3a:	ins    DWORD PTR es:[edi],dx
  408e3b:	fimul  WORD PTR [ebx*1-0x1e7f9a38]
  408e42:	aaa    
  408e43:	cwde   
  408e44:	pop    eax
  408e45:	pop    ebx
  408e46:	int    0x2f
  408e48:	aam    0x33
  408e4a:	cmc    
  408e4b:	adc    edx,DWORD PTR [ecx-0x6022b6f]
  408e51:	hlt    
  408e52:	push   ds
  408e53:	hlt    
  408e54:	and    cl,BYTE PTR [eax-0x41]
  408e57:	jae    0x408ec7
  408e59:	cmp    BYTE PTR [edx+0x69],dh
  408e5c:	imul   eax,edx,0xd4f09e21
  408e62:	jo     0x408ea4
  408e64:	bound  ebp,QWORD PTR [edx+ecx*8-0x5e45cd0d]
  408e6b:	jecxz  0x408e4d
  408e6d:	mov    bl,0x6a
  408e6f:	and    BYTE PTR [ebp+0x1972e873],bl
  408e75:	push   eax
  408e76:	inc    ebx
  408e77:	je     0x408ee7
  408e79:	inc    eax
  408e7a:	jno    0x408ebf
  408e7c:	(bad)  
  408e7d:	int    0xeb
  408e7f:	loop   0x408e9e
  408e81:	clc    
  408e82:	jp     0x408ed3
  408e84:	adc    eax,0x6821bfd8
  408e89:	mov    DWORD PTR [edx+0x5bf4eb1e],ebx
  408e8f:	sub    DWORD PTR [esi+0x787014c],edx
  408e95:	ins    BYTE PTR es:[edi],dx
  408e96:	xchg   esp,eax
  408e97:	sbb    ah,ch
  408e99:	in     eax,0xd5
  408e9b:	xchg   edi,eax
  408e9c:	sub    DWORD PTR [edx],edx
  408e9e:	inc    edi
  408e9f:	cmp    esi,esi
  408ea1:	in     al,0x6a
  408ea3:	adc    BYTE PTR [eax],dl
  408ea5:	into   
  408ea6:	adc    edx,DWORD PTR [ecx+0x199d3b11]
  408eac:	cld    
  408ead:	jbe    0x408e5d
  408eaf:	je     0x408ecb
  408eb1:	add    BYTE PTR fs:0xd165147e,dl
  408eb8:	sub    DWORD PTR [edx],edi
  408eba:	jmp    0xf2e802c3
  408ebf:	int3   
  408ec0:	cmp    dl,BYTE PTR [edi-0x4f]
  408ec3:	push   eax
  408ec4:	(bad)  
  408ec6:	sub    BYTE PTR [ecx+0x3dbb3384],ah
  408ecc:	outs   dx,DWORD PTR ds:[esi]
  408ecd:	fcomp  QWORD PTR ds:0x1ca2a968
  408ed3:	jb     0x408e77
  408ed5:	fwait
  408ed6:	std    
  408ed7:	in     al,0xf3
  408ed9:	out    dx,al
  408eda:	ret    0xbf5
  408edd:	sbb    cl,BYTE PTR [edx]
  408edf:	cmc    
  408ee0:	sbb    ebp,DWORD PTR [esp+ebx*4]
  408ee3:	dec    eax
  408ee4:	lock test eax,0xec229337
  408eea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408eeb:	loop   0x408ed3
  408eed:	adc    cl,BYTE PTR [eax+0x51bc6a98]
  408ef3:	pop    ebp
  408ef4:	out    0x73,al
  408ef6:	cli    
  408ef7:	jge    0x408f14
  408ef9:	fimul  DWORD PTR [esi+edi*8]
  408efc:	ror    BYTE PTR [ecx+0x18],cl
  408eff:	ficom  DWORD PTR gs:[edx+0x37]
  408f03:	lea    esp,[eax+eax*1+0xf]
  408f07:	mov    DWORD PTR es:[eax+0x60],eax
  408f0b:	cwde   
  408f0c:	fcomip st,st(4)
  408f0e:	mov    esp,?
  408f10:	gs xor eax,0x6268defc
  408f16:	pop    ebx
  408f17:	int    0x62
  408f19:	ds out dx,eax
  408f1b:	push   ecx
  408f1c:	push   esp
  408f1d:	cld    
  408f1e:	in     eax,0x58
  408f20:	sub    DWORD PTR [ecx-0x6f],ebp
  408f23:	xor    DWORD PTR [esp+ebx*2+0x42],eax
  408f27:	fidivr DWORD PTR [edx+0x38b0ba06]
  408f2d:	adc    eax,ebp
  408f2f:	mov    ecx,0xe9e575d7
  408f34:	in     al,dx
  408f35:	inc    edi
  408f36:	inc    ecx
  408f37:	test   al,0x74
  408f39:	mov    bl,0x1c
  408f3b:	(bad)  
  408f3c:	lahf   
  408f3d:	xor    eax,0xc49c3444
  408f42:	sti    
  408f43:	jg     0x408fb6
  408f45:	call   DWORD PTR [ebx+ebp*2-0x4be6b740]
  408f4c:	pop    es
  408f4d:	adc    ecx,DWORD PTR [edi*4+0x42ec258]
  408f54:	daa    
  408f55:	dec    esi
  408f56:	fbstp  TBYTE PTR [esi]
  408f58:	ds cmp al,0x16
  408f5b:	push   esi
  408f5c:	sar    DWORD PTR [esi],0xec
  408f5f:	push   ds
  408f60:	out    dx,al
  408f61:	cmp    BYTE PTR [esi],ch
  408f63:	mov    al,0xbb
  408f65:	scas   eax,DWORD PTR es:[edi]
  408f66:	inc    esi
  408f67:	mov    cl,0xa
  408f69:	mov    bh,0xed
  408f6b:	in     eax,0x3
  408f6d:	sub    eax,0x16ec78bf
  408f72:	and    eax,0x5aa7ff2e
  408f77:	jg     0x408f9c
  408f79:	sbb    BYTE PTR [edx-0x60142baf],dl
  408f7f:	adc    ebx,DWORD PTR [eax-0x73]
  408f82:	inc    esp
  408f83:	jle    0x408f8f
  408f85:	fild   DWORD PTR [ebx-0x2b]
  408f88:	sub    DWORD PTR [esi-0x31],edi
  408f8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f8c:	mov    edi,0xd4d3b544
  408f91:	jne    0x408fc1
  408f93:	or     BYTE PTR [ebx],ah
  408f95:	sub    BYTE PTR [ebx+0x1f],bl
  408f98:	push   edi
  408f99:	and    al,BYTE PTR [ecx-0x74abae4b]
  408f9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408fa0:	push   ecx
  408fa1:	lds    edx,FWORD PTR [eax-0x13]
  408fa4:	stc    
  408fa5:	aas    
  408fa6:	and    eax,0x9e5d0fc2
  408fab:	shl    BYTE PTR [ecx-0x75],0x67
  408faf:	mov    ebp,0x4e305048
  408fb4:	enter  0x3d88,0x76
  408fb8:	add    BYTE PTR [ebx],cl
  408fba:	fs (bad) 
  408fbc:	adc    esp,DWORD PTR [ecx+0x37]
  408fbf:	mov    ah,0xef
  408fc1:	aad    0x72
  408fc3:	out    dx,al
  408fc4:	mov    bh,0x67
  408fc6:	mov    ah,0xd9
  408fc8:	dec    ebx
  408fc9:	sub    DWORD PTR [ecx],ecx
  408fcb:	xor    eax,0x7631cd18
  408fd0:	cdq    
  408fd1:	cmovo  esp,DWORD PTR ds:0xe3b6b048
  408fd8:	mov    ah,0xeb
  408fda:	xor    eax,0x9c0cdb08
  408fdf:	xchg   esp,eax
  408fe0:	xchg   ebx,eax
  408fe1:	int3   
  408fe2:	cdq    
  408fe3:	inc    esi
  408fe4:	shl    DWORD PTR [edx-0x2f],cl
  408fe7:	pop    edi
  408fe8:	(bad)  
  408fe9:	pop    esp
  408fea:	add    dh,0x9b
  408fed:	icebp  
  408fee:	xlat   BYTE PTR ds:[ebx]
  408fef:	pop    edi
  408ff0:	bound  esp,QWORD PTR ds:0xccbe2b8a
  408ff6:	jecxz  0x40902a
  408ff8:	mov    ds:0xe0e4caa6,eax
  408ffd:	aaa    
  408ffe:	addr16 (bad) 
  409000:	aad    0x88
  409002:	scas   al,BYTE PTR es:[edi]
  409003:	lods   al,BYTE PTR ds:[esi]
  409004:	sbb    BYTE PTR [esi+0x5b0355b2],dl
  40900a:	(bad)  
  40900b:	xlat   BYTE PTR ds:[ebx]
  40900c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40900d:	in     ax,dx
  40900f:	sub    ah,BYTE PTR [ebp+0x69]
  409012:	xchg   esi,eax
  409013:	(bad)  
  409014:	imul   edi,DWORD PTR [ebx+0x31],0xe3bdfe76
  40901b:	or     eax,0x8a0a109
  409020:	inc    edi
  409021:	nop
  409022:	or     BYTE PTR [ebx+0x31],cl
  409025:	add    bh,dl
  409027:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409028:	clc    
  409029:	mov    bl,0x60
  40902b:	xchg   edi,eax
  40902c:	cmp    cl,bh
  40902e:	mov    edx,0x8b9175eb
  409033:	fsubr  QWORD PTR [esi-0x3c647f2b]
  409039:	push   ss
  40903a:	(bad)  
  40903c:	dec    ecx
  40903d:	aam    0xf6
  40903f:	xlat   BYTE PTR ds:[ebx]
  409040:	jae    0x409047
  409042:	das    
  409043:	aaa    
  409044:	lods   al,BYTE PTR ds:[esi]
  409045:	sbb    dh,cl
  409047:	dec    esi
  409048:	lahf   
  409049:	mov    ebp,0x56577d92
  40904e:	and    bl,BYTE PTR [esi-0x24]
  409051:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409052:	and    al,0x8d
  409054:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409055:	jmp    0x54b7:0xcbb7bc02
  40905c:	mov    dh,BYTE PTR [edi+0x534640e5]
  409062:	vpord  ymm5{k4}{z},ymm0,DWORD PTR [edx]{1to8}
  409068:	(bad)  
  409069:	(bad)  
  40906a:	lods   eax,DWORD PTR ds:[esi]
  40906b:	scas   al,BYTE PTR es:[edi]
  40906c:	es mov esp,0xdf57ff1f
  409072:	out    0xb2,eax
  409074:	sub    ch,BYTE PTR [edi+0x22a0e893]
  40907a:	(bad)  
  40907b:	loopne 0x409085
  40907d:	mov    eax,0xe39fe558
  409082:	lds    edx,FWORD PTR [edi+0x2a35bb7e]
  409088:	dec    esp
  409089:	sbb    eax,0xa32fb2d8
  40908e:	xchg   ebx,eax
  40908f:	push   esp
  409090:	je     0x4090b2
  409092:	push   eax
  409093:	fnsave [ecx+0x566af61b]
  409099:	test   BYTE PTR [esi],dh
  40909b:	mov    bl,0x46
  40909d:	aad    0x10
  40909f:	frstpm(287 only) 
  4090a1:	jge    0x409050
  4090a3:	lahf   
  4090a4:	push   ds
  4090a5:	mov    esp,0xe2caebb0
  4090aa:	mov    eax,0x49ad08f2
  4090af:	sub    BYTE PTR [ebx-0x68],al
  4090b2:	or     esp,DWORD PTR [edx+0x2d]
  4090b5:	xchg   esp,eax
  4090b6:	dec    eax
  4090b7:	mov    ?,WORD PTR [ebp-0x4694417]
  4090bd:	and    al,0xb0
  4090bf:	call   0x2975:0x7309c649
  4090c6:	jno    0x409144
  4090c8:	(bad)  
  4090c9:	push   ecx
  4090ca:	sbb    esi,DWORD PTR [edx-0x1c]
  4090cd:	xor    DWORD PTR [edi+esi*8+0x0],edi
  4090d1:	rcr    DWORD PTR [ebx],cl
  4090d3:	lock jp 0x40914b
  4090d6:	mov    cl,0xf3
  4090d8:	in     al,dx
  4090d9:	xlat   BYTE PTR ds:[ebx]
  4090da:	sbb    BYTE PTR [ecx-0x2c],dl
  4090dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4090de:	rol    DWORD PTR [eax-0x2f15ebb6],1
  4090e4:	cmp    BYTE PTR [eax-0x4fc839a1],ch
  4090ea:	pusha  
  4090eb:	retf   
  4090ec:	sub    BYTE PTR [edx-0x65a95a9c],dh
  4090f2:	jmp    edi
  4090f4:	push   eax
  4090f5:	call   0x19e2:0x5c627dde
  4090fc:	retf   0xac9f
  4090ff:	mov    ds:0x2c21ff9e,eax
  409104:	dec    esi
  409105:	jg     0x40914e
  409107:	mov    edi,0xb0cd4423
  40910c:	and    DWORD PTR [eax],eax
  40910e:	neg    BYTE PTR [esi+0x556f1c41]
  409114:	sub    eax,0xa0e72794
  409119:	rcl    DWORD PTR [esi+0x66],0x60
  40911d:	push   esp
  40911e:	or     BYTE PTR gs:[edi-0x43],al
  409122:	mov    ds:0xb40dfdff,eax
  409127:	ror    DWORD PTR [ebx],0x9f
  40912a:	mov    esp,0xae83a60d
  40912f:	sbb    al,0xe5
  409131:	retf   
  409132:	push   edi
  409133:	sbb    ebx,DWORD PTR [edi+0x4a7cb4cc]
  409139:	daa    
  40913a:	int    0xd9
  40913c:	loope  0x40916f
  40913e:	iret   
  40913f:	rol    DWORD PTR [ebx],0x43
  409142:	or     DWORD PTR [eax],esi
  409144:	sub    al,0xa1
  409146:	outs   dx,BYTE PTR ds:[esi]
  409147:	mov    esp,0x7dd59f82
  40914c:	rol    DWORD PTR [esi],1
  40914e:	cmp    ah,BYTE PTR [ebp+0x1a4f598c]
  409154:	cmp    eax,0x6c2c9be
  409159:	inc    ebx
  40915a:	addr16 xor al,0xa0
  40915d:	shl    DWORD PTR [edx-0x48],cl
  409160:	add    dl,dl
  409162:	inc    edi
  409163:	stc    
  409164:	inc    esp
  409165:	push   0x2e
  409167:	retf   0x1243
  40916a:	je     0x4091a8
  40916c:	mov    gs,WORD PTR es:[esi+0x1331272c]
  409173:	cmp    al,0x72
  409175:	inc    edi
  409176:	xor    ah,BYTE PTR [ecx+0x7e]
  409179:	sub    esp,DWORD PTR [esi-0x55]
  40917c:	cld    
  40917d:	jo     0x409157
  40917f:	xchg   edi,eax
  409180:	adc    eax,0xb8c04c2c
  409185:	push   ss
  409186:	push   ds
  409187:	in     al,0xc3
  409189:	dec    ecx
  40918a:	mov    dh,0xd9
  40918c:	or     esi,esi
  40918e:	sub    eax,0xc53fd1c
  409193:	ror    DWORD PTR es:[edx+0x3c0ceb9c],0x2
  40919b:	dec    eax
  40919c:	push   edi
  40919d:	pop    ebx
  40919e:	rol    cl,0x59
  4091a1:	arpl   bp,bx
  4091a3:	pop    ecx
  4091a4:	outs   dx,BYTE PTR ds:[esi]
  4091a5:	lods   eax,DWORD PTR ds:[esi]
  4091a6:	pop    edi
  4091a7:	and    eax,0x4e6459eb
  4091ac:	int3   
  4091ad:	ss rcr bl,1
  4091b0:	retf   0x7860
  4091b3:	push   edx
  4091b4:	scas   eax,DWORD PTR es:[edi]
  4091b5:	inc    ecx
  4091b6:	sub    DWORD PTR [edx+0x63],0xa8d6a4c9
  4091bd:	in     al,0x2e
  4091bf:	push   0xffffffd9
  4091c1:	ret    0x4419
  4091c4:	sub    al,0x72
  4091c6:	adc    ch,BYTE PTR [ebp+0x29253a98]
  4091cc:	cdq    
  4091cd:	outs   dx,DWORD PTR ds:[esi]
  4091ce:	aaa    
  4091cf:	or     DWORD PTR [edi-0x61600f1c],esp
  4091d5:	mov    BYTE PTR [edi+0x1c],dh
  4091d8:	mov    bh,0x6c
  4091da:	add    eax,0x1d466ecf
  4091df:	int3   
  4091e0:	jl     0x409200
  4091e2:	adc    DWORD PTR [esi+0x5b],esi
  4091e5:	outs   dx,DWORD PTR ds:[esi]
  4091e6:	inc    edi
  4091e7:	push   ebx
  4091e8:	stos   DWORD PTR es:[edi],eax
  4091e9:	or     eax,0xd38ae305
  4091ee:	jle    0x4091fc
  4091f0:	mov    eax,ds:0xd40e6d81
  4091f5:	push   esp
  4091f6:	ds and esi,esp
  4091f9:	cmp    bl,BYTE PTR [esi+0x5f987428]
  4091ff:	push   ds
  409200:	out    0xa6,eax
  409202:	sbb    eax,DWORD PTR [ebp+eax*4+0x43]
  409206:	mov    ch,BYTE PTR [ebp-0x69]
  409209:	mov    al,0x8f
  40920b:	out    0x4f,al
  40920d:	pop    ebp
  40920e:	jne    0x409259
  409210:	das    
  409211:	adc    ah,dh
  409213:	push   ecx
  409214:	pop    es
  409215:	ins    DWORD PTR es:[edi],dx
  409216:	push   eax
  409217:	in     al,0x80
  409219:	jno    0x409270
  40921b:	repz in eax,dx
  40921d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40921e:	rcl    DWORD PTR ds:0x87a29f4,0xf4
  409225:	mov    edx,0x3a57cd4
  40922a:	cwde   
  40922b:	in     al,dx
  40922c:	pushf  
  40922d:	in     eax,0xd2
  40922f:	mov    al,0x1a
  409231:	dec    edi
  409232:	mov    ds:0x7486557a,eax
  409237:	push   ebx
  409238:	or     cl,BYTE PTR [ecx-0x630f2d87]
  40923e:	jns    0x4091f6
  409240:	dec    ebp
  409241:	stos   DWORD PTR es:[edi],eax
  409242:	add    eax,0xb54d0b52
  409247:	dec    esp
  409248:	cmp    BYTE PTR [ebp-0x80],bl
  40924b:	and    al,0x79
  40924d:	fld    DWORD PTR [edi]
  40924f:	push   cs
  409250:	sbb    esi,edx
  409252:	push   0xfe31e9e5
  409257:	cmp    BYTE PTR [edx],al
  409259:	(bad)  
  40925a:	jecxz  0x409204
  40925c:	hlt    
  40925d:	mov    al,0x6f
  40925f:	mov    edx,0xd3b39281
  409264:	fcom   DWORD PTR [ebp+0x4f5ed7df]
  40926a:	fcom   QWORD PTR [ebx-0x69d34d41]
  409270:	stc    
  409271:	cmp    eax,0x3d7e3d5
  409276:	rcr    BYTE PTR [edi-0x7a],1
  409279:	(bad)  
  40927b:	clc    
  40927c:	and    DWORD PTR [ecx],edx
  40927e:	dec    ecx
  40927f:	imul   ebx,DWORD PTR [ecx-0xc2a9c64],0x59
  409286:	cli    
  409287:	xor    BYTE PTR [ecx],ah
  409289:	xchg   BYTE PTR gs:[ebp+0x36e5ac95],bl
  409290:	mov    al,ds:0x229f213a
  409295:	sbb    DWORD PTR [ecx-0x427d3074],edx
  40929b:	or     bl,BYTE PTR [eax]
  40929d:	ds rep ins BYTE PTR es:[edi],dx
  4092a0:	add    DWORD PTR [ebx+0x65],0xed4b6fdc
  4092a7:	mov    eax,0xd655faf
  4092ac:	test   eax,0x67185676
  4092b1:	inc    eax
  4092b2:	push   edx
  4092b3:	dec    ebx
  4092b4:	push   esi
  4092b5:	jp     0x4092a8
  4092b7:	and    BYTE PTR [eax-0x275b31ee],cl
  4092bd:	inc    ecx
  4092be:	shl    ch,1
  4092c0:	std    
  4092c1:	mov    ds:0xda9762ac,al
  4092c6:	(bad)  
  4092c7:	mov    ds:0xe365f250,eax
  4092cc:	in     eax,0xcc
  4092ce:	lock cmp DWORD PTR [esi-0x33119c0],edi
  4092d5:	add    bl,BYTE PTR [edx+0x73]
  4092d8:	pop    eax
  4092d9:	leave  
  4092da:	repz rol BYTE PTR [ebp-0x27704666],1
  4092e1:	jne    0x409341
  4092e3:	imul   esp,DWORD PTR [esi+0x61],0x6be8b248
  4092ea:	dec    esi
  4092eb:	sub    edx,DWORD PTR [edx-0x23]
  4092ee:	push   esi
  4092ef:	icebp  
  4092f0:	push   0x861ad14a
  4092f5:	sub    eax,0x3313ced
  4092fa:	mov    ss,WORD PTR [ebx]
  4092fc:	scas   al,BYTE PTR es:[edi]
  4092fd:	in     eax,dx
  4092fe:	mov    esi,0x56a4e669
  409303:	push   esp
  409304:	mov    ch,BYTE PTR [edi+0x51ad1657]
  40930a:	and    dh,BYTE PTR [ebx+0x70]
  40930d:	mov    dh,0x98
  40930f:	int3   
  409310:	add    edx,edi
  409312:	mov    ds:0xeb28a096,eax
  409317:	inc    esp
  409318:	xchg   ecx,eax
  409319:	les    esi,FWORD PTR [edx]
  40931b:	mov    cl,0x23
  40931d:	std    
  40931e:	(bad)
  409321:	push   0x5edc144a
  409326:	sbb    ah,BYTE PTR [ebx]
  409328:	sbb    ah,BYTE PTR [ecx+0x67]
  40932b:	or     BYTE PTR [ebp+0x699528c6],bh
  409331:	fsubrp st(6),st
  409333:	dec    edx
  409334:	loopne 0x409367
  409336:	call   0xde4046b5
  40933b:	or     esi,eax
  40933d:	dec    eax
  40933e:	mov    ecx,DWORD PTR [ebp-0x49]
  409341:	or     al,0x7a
  409343:	aam    0x5b
  409345:	mov    eax,ds:0x138c1f4
  40934a:	out    0x11,eax
  40934c:	pop    ebp
  40934d:	mov    ebx,0x9f6e7895
  409352:	pop    es
  409353:	icebp  
  409354:	ss nop
  409356:	xchg   edx,eax
  409357:	push   ebp
  409358:	ret    
  409359:	mov    eax,ecx
  40935b:	fcom   st(6)
  40935d:	stos   BYTE PTR es:[edi],al
  40935e:	pop    edi
  40935f:	cmp    al,0xc1
  409361:	jne    0x409362
  409363:	sbb    eax,0xd506a93f
  409368:	scas   eax,DWORD PTR es:[edi]
  409369:	hlt    
  40936a:	xchg   edi,eax
  40936b:	pop    esp
  40936c:	push   edx
  40936d:	fadd   DWORD PTR [edx+0x2318632a]
  409373:	pop    ss
  409374:	ins    BYTE PTR es:[edi],dx
  409375:	ja     0x4093e3
  409377:	outs   dx,BYTE PTR ds:[esi]
  409378:	pop    edi
  409379:	push   edx
  40937a:	stos   DWORD PTR es:[edi],eax
  40937b:	fld    QWORD PTR [esi]
  40937d:	inc    esi
  40937e:	xchg   ecx,eax
  40937f:	push   0x381cf5c2
  409384:	je     0x40934c
  409386:	test   BYTE PTR [edi],al
  409388:	cmp    DWORD PTR [edi+0x9c3da61],ebx
  40938e:	sub    al,0xc9
  409390:	call   0x27ea:0x88f021e6
  409397:	jecxz  0x409358
  409399:	lods   eax,DWORD PTR ds:[esi]
  40939a:	pop    ebp
  40939b:	fmul   st,st(2)
  40939d:	jg     0x409370
  40939f:	push   es
  4093a0:	xchg   ebx,eax
  4093a1:	cmp    eax,edx
  4093a3:	or     eax,0x42953234
  4093a8:	imul   ebp,DWORD PTR [edx],0x49
  4093ab:	ret    
  4093ac:	push   es
  4093ad:	test   al,0xad
  4093af:	add    edx,eax
  4093b1:	int3   
  4093b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4093b3:	mov    esp,0x4ea5a883
  4093b8:	enter  0x22b1,0xea
  4093bc:	pop    ebx
  4093bd:	push   edi
  4093be:	popa   
  4093bf:	int3   
  4093c0:	aad    0x3
  4093c2:	enter  0x98c2,0x5d
  4093c6:	ins    BYTE PTR es:[edi],dx
  4093c7:	or     BYTE PTR ss:[edx],ch
  4093ca:	in     eax,0xa6
  4093cc:	xchg   ecx,eax
  4093cd:	outs   dx,BYTE PTR ds:[esi]
  4093ce:	mov    edi,0xad2a94a0
  4093d3:	pop    esi
  4093d4:	ret    0x83ab
  4093d7:	in     al,dx
  4093d8:	sub    bh,BYTE PTR [ebx+0x3e1560e9]
  4093de:	call   FWORD PTR [edi]
  4093e0:	jge    0x409411
  4093e2:	cli    
  4093e3:	jge    0x40942e
  4093e5:	inc    edx
  4093e6:	inc    ebx
  4093e7:	test   al,ah
  4093e9:	aam    0xe7
  4093eb:	pusha  
  4093ec:	pop    ebp
  4093ed:	ret    
  4093ee:	call   0xc9e58d9e
  4093f3:	mov    WORD PTR [edx],es
  4093f5:	imul   ecx,esi,0xa59a89bc
  4093fb:	dec    edx
  4093fc:	rcr    BYTE PTR ds:0xfa4ef65e,cl
  409402:	pusha  
  409403:	jo     0x409412
  409405:	aaa    
  409406:	lods   al,BYTE PTR ds:[esi]
  409407:	ss loop 0x409460
  40940a:	xchg   DWORD PTR [esi-0x39],eax
  40940d:	cmp    DWORD PTR [ecx],0x7c
  409410:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409411:	mov    dh,0x84
  409413:	sub    edi,DWORD PTR [ebx-0x51b38b]
  409419:	shr    bl,0x83
  40941c:	adc    esi,0xc6f86477
  409422:	push   0x12
  409424:	jmp    0x59a9469f
  409429:	jl     0x40941b
  40942b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40942c:	rcr    BYTE PTR [edx+0x55],1
  40942f:	add    eax,0x967c98f0
  409434:	adc    dh,BYTE PTR [esi+0x71]
  409437:	mov    esi,0x95be7d67
  40943c:	and    ah,BYTE PTR cs:[ebp+0x16]
  409440:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  409442:	lahf   
  409443:	dec    esp
  409444:	outs   dx,BYTE PTR ds:[esi]
  409445:	jb     0x40949b
  409447:	retf   
  409448:	les    eax,FWORD PTR [edi]
  40944a:	push   0xde65254b
  40944f:	fmulp  st(6),st
  409451:	retf   0xf035
  409454:	dec    esp
  409455:	retf   0xc231
  409458:	sbb    BYTE PTR ds:0x5cb8aa76,al
  40945e:	loop   0x409463
  409460:	ds shl al,1
  409463:	sub    BYTE PTR [edx+0x60b13660],ch
  409469:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40946a:	and    cl,BYTE PTR [esi+edx*1-0x488a56bb]
  409471:	add    al,0x81
  409473:	lea    eax,[ecx+0x7dee6f1c]
  409479:	not    eax
  40947b:	test   al,0x44
  40947d:	or     BYTE PTR [ebx+0x6936f107],0x13
  409484:	pop    edi
  409485:	ds cld 
  409487:	jl     0x40948d
  409489:	mov    dx,gs
  40948c:	orps   xmm1,XMMWORD PTR [esi-0x5f]
  409490:	inc    edi
  409491:	outs   dx,DWORD PTR ss:[esi]
  409493:	cmp    eax,0x738ba701
  409498:	cmp    al,0xe6
  40949a:	dec    esi
  40949b:	out    0x72,eax
  40949d:	iret   
  40949e:	jno    0x40950a
  4094a0:	jno    0x409439
  4094a2:	jae    0x40947e
  4094a4:	jle    0x409483
  4094a6:	or     DWORD PTR [eax+edi*1],ebp
  4094a9:	jg     0x40943d
  4094ab:	aam    0xb7
  4094ad:	xor    ah,BYTE PTR [esp+edi*1-0x628ad6c8]
  4094b4:	sub    ebp,DWORD PTR [ebx-0x46]
  4094b7:	add    edx,DWORD PTR [esi-0x28]
  4094ba:	es in  al,dx
  4094bc:	int    0x7
  4094be:	adc    bh,BYTE PTR [eax+0x9d1d622]
  4094c4:	xor    BYTE PTR [ebx+0x84569d5],0xdf
  4094cb:	adc    eax,0xc835a292
  4094d0:	sub    DWORD PTR [ebp-0x6481b2bf],eax
  4094d6:	lods   al,BYTE PTR ds:[esi]
  4094d7:	sahf   
  4094d8:	mov    BYTE PTR ds:0x747921de,ch
  4094de:	icebp  
  4094df:	ret    
  4094e0:	das    
  4094e1:	int3   
  4094e2:	cmp    DWORD PTR [edi-0x51],esp
  4094e5:	mov    cl,0x73
  4094e7:	lea    eax,[ecx+0x16]
  4094ea:	push   ecx
  4094eb:	push   ss
  4094ec:	pop    ecx
  4094ed:	cmp    al,0xe1
  4094ef:	push   edx
  4094f0:	sbb    DWORD PTR [ebx+0x435d4e6c],0x57ef6d36
  4094fa:	test   BYTE PTR [edi-0x6e],bl
  4094fd:	out    0x6,al
  4094ff:	mov    DWORD PTR [ebp-0x287fe4cf],ebx
  409505:	into   
  409506:	and    ch,BYTE PTR [esi+ebp*1]
  409509:	lods   al,BYTE PTR ds:[esi]
  40950a:	and    al,0xd8
  40950c:	sub    DWORD PTR [edi+ebp*4-0x3b],0x2d17e5bf
  409514:	pop    ss
  409515:	or     al,0x8b
  409517:	pusha  
  409518:	xchg   DWORD PTR [edi],ecx
  40951a:	jle    0x4094d4
  40951c:	push   ebx
  40951d:	jl     0x40955f
  40951f:	dec    edi
  409520:	mov    ah,0xe6
  409522:	imul   BYTE PTR [edi+edi*4+0x5dd54bbd]
  409529:	hlt    
  40952a:	pop    es
  40952b:	cmc    
  40952c:	loope  0x40952e
  40952e:	(bad)  
  40952f:	adc    ah,BYTE PTR [edi-0xf]
  409532:	pop    ecx
  409533:	pop    esp
  409534:	mov    ah,0xa5
  409536:	fild   DWORD PTR [edx+0x2d]
  409539:	inc    esp
  40953a:	mul    eax
  40953c:	jmp    0xce3:0xecd46c97
  409543:	xlat   BYTE PTR ds:[ebx]
  409544:	xchg   ecx,eax
  409545:	add    al,0x4b
  409547:	lea    esp,[edi+0x69d70d8e]
  40954d:	ss jl  0x4095b1
  409550:	push   esp
  409551:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  409553:	out    dx,eax
  409554:	rol    DWORD PTR [edi],cl
  409556:	(bad)  
  409558:	sbb    al,0x9f
  40955a:	fist   DWORD PTR [edi-0x76]
  40955d:	sub    dl,bl
  40955f:	pop    ss
  409560:	mov    dh,0xe2
  409562:	mov    ebp,0xd6c16dc2
  409567:	inc    ebx
  409568:	stos   BYTE PTR es:[edi],al
  409569:	fst    QWORD PTR [edi]
  40956b:	aam    0x5d
  40956d:	push   edx
  40956e:	pusha  
  40956f:	sub    DWORD PTR [esi-0x74],esp
  409572:	inc    BYTE PTR [ebx-0x58]
  409575:	test   al,0x1
  409577:	jb     0x40951e
  409579:	mov    edx,DWORD PTR [edi-0x59]
  40957c:	call   0xa4d2:0xf948a545
  409583:	stos   BYTE PTR es:[edi],al
  409584:	ja     0x409507
  409586:	mov    ah,0xc7
  409588:	ret    
  409589:	mov    bl,ch
  40958b:	xor    esi,eax
  40958d:	adc    edi,DWORD PTR [edx-0x76]
  409590:	pusha  
  409591:	pop    esi
  409592:	mov    ebx,0x76b19674
  409597:	or     BYTE PTR [edi+eiz*2-0x4f],ah
  40959b:	xchg   BYTE PTR [eax-0x5c],ch
  40959e:	xchg   DWORD PTR [ebp+ebp*8+0x2a],ecx
  4095a2:	jno    0x4095f3
  4095a4:	out    0x34,eax
  4095a6:	lods   al,BYTE PTR ds:[esi]
  4095a7:	loop   0x409549
  4095a9:	jl     0x40961c
  4095ab:	dec    ebp
  4095ac:	rol    bx,cl
  4095af:	es inc esp
  4095b1:	cwde   
  4095b2:	mov    bh,0x79
  4095b4:	ja     0x4095e9
  4095b6:	jmp    0x409629
  4095b8:	icebp  
  4095b9:	mov    bh,0xbc
  4095bb:	cld    
  4095bc:	jae    0x4095db
  4095be:	dec    ebx
  4095bf:	rcr    cl,1
  4095c1:	jmp    0x155d:0xae23349d
  4095c8:	adc    al,0x52
  4095ca:	pop    ebp
  4095cb:	jmp    0x4aca8f14
  4095d0:	in     al,dx
  4095d1:	ror    DWORD PTR [edx+0x17e227d4],0x8d
  4095d8:	loopne 0x40961b
  4095da:	inc    edi
  4095db:	jae    0x40958d
  4095dd:	neg    DWORD PTR [ebp+0x7d]
  4095e0:	mov    al,ds:0x649cd16c
  4095e5:	fistp  WORD PTR [eax]
  4095e7:	xchg   edx,eax
  4095e8:	(bad)  
  4095e9:	and    ecx,DWORD PTR [ecx+edi*4]
  4095ec:	mov    DWORD PTR [eax],esp
  4095ee:	inc    edi
  4095ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4095f0:	lea    esi,[ebp+0x492e007d]
  4095f6:	call   0x43604985
  4095fb:	push   ds
  4095fc:	jge    0x40958c
  4095fe:	adc    eax,0xda6c627c
  409603:	dec    ebx
  409604:	push   edx
  409605:	jge    0x409623
  409607:	adc    edi,esi
  409609:	xor    ecx,DWORD PTR [esi]
  40960b:	pop    ebp
  40960c:	sub    eax,0x4724d581
  409611:	push   edi
  409612:	stos   DWORD PTR es:[edi],eax
  409613:	or     ah,cl
  409615:	adc    eax,0x8e3074b0
  40961a:	ret    0xb236
  40961d:	push   0xae5f4d7b
  409622:	dec    esi
  409623:	idiv   DWORD PTR [ecx+eiz*8+0x7bbb7a80]
  40962a:	test   bh,ah
  40962c:	fiadd  DWORD PTR ds:0x138616d4
  409632:	inc    edx
  409633:	mov    edx,0x4d3be29a
  409638:	xor    edi,DWORD PTR [ecx]
  40963a:	mov    eax,ds:0x65df7b78
  40963f:	daa    
  409640:	cli    
  409641:	std    
  409642:	jae    0x4096ad
  409644:	pop    eax
  409645:	and    BYTE PTR [eax+ebx*1],dh
  409648:	loopne 0x40968e
  40964a:	sahf   
  40964b:	sub    edx,edx
  40964d:	jbe    0x40960a
  40964f:	mov    bl,0x90
  409651:	imul   ebp,eax,0x5c3c0dc7
  409657:	jge    0x409666
  409659:	cdq    
  40965a:	fs loop 0x4095f3
  40965d:	cwde   
  40965e:	pop    eax
  40965f:	inc    ebp
  409660:	xchg   ebp,eax
  409661:	cli    
  409662:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  409664:	dec    esi
  409665:	in     al,0x2a
  409667:	addr16 ss dec ecx
  40966a:	inc    esp
  40966b:	lds    eax,FWORD PTR [edx+0x7dea0e2c]
  409671:	ret    
  409672:	sahf   
  409673:	inc    esi
  409674:	outs   dx,BYTE PTR ds:[esi]
  409675:	push   esp
  409676:	lods   eax,DWORD PTR ds:[esi]
  409677:	(bad)  
  409678:	fdivr  st,st(6)
  40967a:	sub    esi,DWORD PTR [ebx+0x2e]
  40967d:	adc    eax,esi
  40967f:	mov    al,ds:0x45dae064
  409684:	mov    eax,0x46affc68
  409689:	gs (bad) 
  40968b:	jne    0x409645
  40968d:	push   esi
  40968e:	ss mov bh,0xd2
  409691:	repz jle 0x40962e
  409694:	pop    ecx
  409695:	sbb    BYTE PTR [eax-0x5e],ch
  409698:	cdq    
  409699:	push   edx
  40969a:	not    dh
  40969c:	pusha  
  40969d:	or     eax,0x6b17ee3c
  4096a2:	push   edi
  4096a3:	fisttp DWORD PTR [esi-0x71b3e56b]
  4096a9:	mov    bh,0x2c
  4096ab:	scas   al,BYTE PTR es:[edi]
  4096ac:	jl     0x40963d
  4096ae:	sbb    al,0xaf
  4096b0:	ret    
  4096b1:	push   ebx
  4096b2:	das    
  4096b3:	push   ds
  4096b4:	mov    edi,0x994d9fca
  4096b9:	push   0xffffff86
  4096bb:	ret    
  4096bc:	pop    ebp
  4096bd:	and    al,0xb5
  4096bf:	ss dec esi
  4096c1:	and    dl,BYTE PTR [ebx]
  4096c3:	out    0x31,eax
  4096c5:	adc    DWORD PTR [ebx],edi
  4096c7:	or     ah,ah
  4096c9:	data16 ins BYTE PTR es:[edi],dx
  4096cb:	ret    0xc736
  4096ce:	xchg   ebp,eax
  4096cf:	xchg   esp,eax
  4096d0:	jecxz  0x409656
  4096d2:	retf   
  4096d3:	fldenv [edi-0xe]
  4096d6:	jns    0x409665
  4096d8:	mov    ds:0xa1cff756,eax
  4096dd:	inc    ebp
  4096de:	popa   
  4096df:	out    0x5c,al
  4096e1:	(bad)  
  4096e2:	xchg   ebx,eax
  4096e3:	cli    
  4096e4:	push   ebp
  4096e5:	mov    BYTE PTR [eax-0xf],ah
  4096e8:	mov    edi,0x7e9fdacc
  4096ed:	call   0x797d:0xf9ee99ef
  4096f4:	push   ds
  4096f5:	jge    0x409753
  4096f7:	sbb    eax,0x92c372ef
  4096fc:	lds    esi,FWORD PTR [edi]
  4096fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4096ff:	xchg   DWORD PTR [edx-0x45191aa5],esp
  409705:	aam    0x8e
  409707:	jmp    0x409718
  409709:	repnz inc esp
  40970b:	jno    0x409762
  40970d:	mov    ch,0xce
  40970f:	xchg   ebx,eax
  409710:	outs   dx,BYTE PTR ds:[esi]
  409711:	in     al,dx
  409712:	or     al,0x5c
  409714:	add    ebp,DWORD PTR [ebx]
  409716:	inc    edi
  409717:	and    al,0x2d
  409719:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40971a:	jecxz  0x4096bb
  40971c:	push   0xbae7e5eb
  409721:	add    ch,BYTE PTR [esi+esi*1+0x38d5a9af]
  409728:	lds    esi,FWORD PTR [esi-0x3]
  40972b:	sub    cl,BYTE PTR [ebx]
  40972d:	(bad)  
  40972e:	pop    edx
  40972f:	aad    0xb6
  409731:	mov    ch,0xe0
  409733:	in     eax,dx
  409734:	out    dx,eax
  409735:	in     eax,0x10
  409737:	test   DWORD PTR [edx],esp
  409739:	dec    eax
  40973a:	jmp    0x2fcb:0x28763900
  409741:	(bad)  [ebp+0x2f71b78b]
  409747:	xchg   ebp,eax
  409748:	inc    esp
  409749:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40974a:	xchg   esi,eax
  40974b:	loopne 0x409781
  40974d:	cli    
  40974e:	cld    
  40974f:	xor    eax,0xb2fa2694
  409754:	arpl   WORD PTR [ebp+0x53],si
  409757:	jp     0x409761
  409759:	stc    
  40975a:	movhps xmm5,QWORD PTR [ecx]
  40975d:	(bad)  
  40975e:	jmp    0x4097b7
  409760:	imul   esp,DWORD PTR [eax],0xc18139c9
  409766:	(bad)  [esp+ebx*4+0x50]
  40976a:	repnz rcr ecx,1
  40976d:	lea    eax,[ecx]
  40976f:	cmp    eax,0xd79566c1
  409774:	lock scas eax,DWORD PTR es:[edi]
  409776:	inc    edi
  409777:	xchg   ecx,eax
  409778:	xchg   DWORD PTR [ebx],eax
  40977a:	xchg   ebx,eax
  40977b:	lock xor edx,DWORD PTR [esi+0x62800c5a]
  409782:	and    al,0x67
  409784:	cmp    BYTE PTR [ecx+edx*1-0x47dc2a13],bh
  40978b:	xlat   BYTE PTR ds:[ebx]
  40978c:	pop    edx
  40978d:	fadd   st,st(4)
  40978f:	lods   eax,DWORD PTR ds:[esi]
  409790:	push   ss
  409791:	and    DWORD PTR [ecx],edi
  409793:	hlt    
  409794:	jbe    0x4097ed
  409796:	or     eax,0xaaf34431
  40979b:	sub    DWORD PTR [ecx+0x5d],ecx
  40979e:	jp     0x409796
  4097a0:	std    
  4097a1:	aad    0x8c
  4097a3:	sub    al,0x9f
  4097a5:	sbb    eax,0x5fb49eeb
  4097aa:	leave  
  4097ab:	inc    ebx
  4097ac:	jo     0x409747
  4097ae:	pop    eax
  4097af:	das    
  4097b0:	lahf   
  4097b1:	and    esi,DWORD PTR [ebx-0x54]
  4097b4:	sar    ebp,0x1
  4097b7:	xchg   edi,eax
  4097b8:	inc    ecx
  4097b9:	into   
  4097ba:	add    BYTE PTR [esi],dl
  4097bc:	ficomp WORD PTR [ecx-0x754157d4]
  4097c2:	icebp  
  4097c3:	scas   al,BYTE PTR es:[edi]
  4097c4:	jae    0x4097f4
  4097c6:	pop    ds
  4097c7:	arpl   WORD PTR [edi],bx
  4097c9:	sbb    esi,DWORD PTR [ecx-0x9]
  4097cc:	pop    esp
  4097cd:	xor    BYTE PTR [ecx+0x6b],bl
  4097d0:	and    BYTE PTR [ebp+0x41],0x94
  4097d4:	xchg   esp,eax
  4097d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4097d6:	add    esi,DWORD PTR [ecx+0x52]
  4097d9:	pusha  
  4097da:	gs mov edx,0x19b57a3c
  4097e0:	xor    BYTE PTR [eax+0x30],0xdc
  4097e4:	bnd jo 0x4097f7
  4097e7:	mov    ebp,0x73597d60
  4097ec:	mov    dl,0x81
  4097ee:	test   BYTE PTR [eax+0x4e],dh
  4097f1:	iret   
  4097f2:	(bad)  
  4097f3:	clc    
  4097f4:	pop    edx
  4097f5:	mov    ah,cl
  4097f7:	push   eax
  4097f8:	mov    ds:0x656a4f6d,eax
  4097fd:	sub    eax,0x5479114d
  409802:	cs (bad) 
  409804:	dec    edi
  409805:	mov    al,0xad
  409807:	js     0x649dbf2b
  40980d:	shr    DWORD PTR [ecx-0x55ce6494],0x94
  409814:	mov    eax,0x6f324087
  409819:	ror    DWORD PTR [ebx],0x90
  40981c:	xchg   ebx,eax
  40981d:	jo     0x409874
  40981f:	sub    al,0x11
  409821:	cmp    ebx,DWORD PTR [edx]
  409823:	jbe    0x409877
  409825:	mov    bl,0x2b
  409827:	sub    ch,BYTE PTR [edx]
  409829:	(bad)  
  40982a:	hlt    
  40982b:	pop    ss
  40982c:	mov    al,0xe5
  40982e:	jl     0x409868
  409830:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409831:	xchg   BYTE PTR [edx+0xd],ch
  409834:	mov    esp,DWORD PTR [edi+ebx*4]
  409837:	and    cl,bl
  409839:	mov    ds:0xff7ec5c8,eax
  40983e:	sub    DWORD PTR [esi],ecx
  409840:	in     eax,dx
  409841:	sbb    BYTE PTR [edi+ebx*4],bl
  409844:	(bad)  
  409845:	cmp    ebx,DWORD PTR [ecx]
  409847:	fldenv [eax-0x23]
  40984a:	push   edi
  40984b:	jne    0x409833
  40984d:	mov    esi,0x5d4afad3
  409852:	mov    WORD PTR [esi-0x6a2b0a1f],es
  409858:	test   al,0x31
  40985a:	adc    eax,0xd0dfb253
  40985f:	dec    ebp
  409860:	inc    ecx
  409861:	aas    
  409862:	hlt    
  409863:	mov    bl,0xe0
  409865:	aas    
  409866:	test   BYTE PTR [edi+ebp*8+0x3],cl
  40986a:	jl     0x409867
  40986c:	pop    ss
  40986d:	jge    0x409805
  40986f:	rcr    DWORD PTR ds:0x2ce594ea,0x6d
  409876:	push   DWORD PTR [eax+0x59]
  409879:	mov    ecx,0x5cb64b1b
  40987e:	push   0x1
  409880:	add    ch,BYTE PTR [ecx]
  409882:	cld    
  409883:	push   ds
  409884:	jb     0x4098de
  409886:	xchg   BYTE PTR [edx],al
  409888:	mov    ch,0xc6
  40988a:	cmp    al,0x6a
  40988c:	push   ss
  40988d:	mov    edx,DWORD PTR [ecx+0x5aa9fff]
  409893:	push   0x39b1e4df
  409898:	test   BYTE PTR [ebp+0x4bbcb36f],0x74
  40989f:	pop    ebp
  4098a0:	mov    bh,0x78
  4098a2:	jo     0x40985a
  4098a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4098a5:	repz int 0xda
  4098a8:	add    cl,BYTE PTR [eax]
  4098aa:	loop   0x409886
  4098ac:	xchg   edx,eax
  4098ad:	callw  0xb2d0
  4098b1:	clc    
  4098b2:	and    BYTE PTR [ebx],ch
  4098b4:	xchg   esi,eax
  4098b5:	es xchg ebx,eax
  4098b7:	ins    BYTE PTR es:[edi],dx
  4098b8:	cwde   
  4098b9:	sahf   
  4098ba:	xchg   ecx,eax
  4098bb:	jns    0x409878
  4098bd:	int    0x63
  4098bf:	xchg   esp,eax
  4098c0:	pop    ebx
  4098c1:	clc    
  4098c2:	(bad)  
  4098c3:	sub    al,0x45
  4098c5:	lock dec ebp
  4098c7:	push   ebp
  4098c8:	popf   
  4098c9:	mov    ecx,0xb4384ee9
  4098ce:	dec    ebp
  4098cf:	jl     0x409871
  4098d1:	xchg   edx,ebx
  4098d3:	repnz les ebp,FWORD PTR [ecx+0x618eceb5]
  4098da:	out    dx,al
  4098db:	mov    al,ds:0xeee3f140
  4098e0:	xchg   ebp,eax
  4098e1:	mov    dh,0x30
  4098e3:	nop
  4098e4:	cmp    eax,DWORD PTR [ebp-0x7aad0084]
  4098ea:	mov    ds:0x8631182b,al
  4098ef:	cs inc ecx
  4098f1:	sbb    DWORD PTR [edx-0x4a],eax
  4098f4:	sar    BYTE PTR [edi-0x1e],cl
  4098f7:	jmp    DWORD PTR [edx]
  4098f9:	inc    ecx
  4098fa:	push   0xd98b11a8
  4098ff:	push   ecx
  409900:	test   BYTE PTR [edx],cl
  409902:	(bad)  
  409904:	xor    esp,ecx
  409906:	push   0x9e7ada26
  40990b:	inc    edi
  40990c:	loop   0x409979
  40990e:	cmp    al,0x70
  409910:	mov    ds:0xb8855e4e,eax
  409915:	jno    0x4098d0
  409917:	aaa    
  409918:	cmp    DWORD PTR [edx-0x443977ff],ebp
  40991e:	(bad)  [ebx-0x2bddb787]
  409924:	rcl    DWORD PTR [esi-0x28],cl
  409927:	jno    0x4098dc
  409929:	retf   0x77f4
  40992c:	out    0xd4,al
  40992e:	outs   dx,BYTE PTR ds:[esi]
  40992f:	push   cs
  409930:	dec    edx
  409931:	imul   edx
  409933:	aam    0x98
  409935:	loopne 0x40997f
  409937:	push   ecx
  409938:	mov    ch,0x5a
  40993a:	xor    BYTE PTR [ecx-0x4cd7ba8c],cl
  409940:	jmp    0xcf00:0xc60e8b13
  409947:	push   edx
  409948:	push   es
  409949:	jne    0x409963
  40994b:	ret    0x1070
  40994e:	gs inc ecx
  409950:	push   cs
  409951:	aaa    
  409952:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409953:	loop   0x40990f
  409955:	or     cl,bl
  409957:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409958:	jl     0x40996e
  40995a:	mov    BYTE PTR [ebp-0x3c],al
  40995d:	inc    ebp
  40995e:	push   0x2463352a
  409963:	pop    edx
  409964:	sbb    eax,0x3f76492e
  409969:	mov    ebx,0x11603324
  40996e:	retf   0x3de0
  409971:	inc    esp
  409972:	inc    esp
  409973:	xchg   ebp,eax
  409974:	jae    0x40995e
  409976:	jmp    0x4099f4
  409978:	add    ebp,DWORD PTR [edx+0x3a1ba76f]
  40997e:	popa   
  40997f:	adc    al,0x99
  409981:	pop    ds
  409982:	inc    esi
  409983:	or     DWORD PTR ds:0x32670bd,ecx
  409989:	xlat   BYTE PTR ds:[ebx]
  40998a:	sub    BYTE PTR [esi+0x4e],0x47
  40998e:	jmp    0x409929
  409990:	and    ch,cl
  409992:	shl    BYTE PTR [ebp-0x5fe240b8],0x83
  409999:	sub    ebx,DWORD PTR [edx+0x5]
  40999c:	ret    
  40999d:	sbb    DWORD PTR [ecx+0x1fe6136b],edi
  4099a3:	and    al,bl
  4099a5:	mov    eax,ds:0xd7a095ba
  4099aa:	dec    ecx
  4099ab:	or     DWORD PTR [edx-0x78],esi
  4099ae:	sub    esi,ebx
  4099b0:	fldcw  WORD PTR [ebx]
  4099b2:	mov    ebx,0x6c5dc68
  4099b7:	xchg   edi,eax
  4099b8:	mov    esp,0xb7964f35
  4099bd:	mov    BYTE PTR [esi+0xc],ch
  4099c0:	adc    al,0x13
  4099c2:	sbb    al,0xa7
  4099c4:	mov    ebp,0xc09ad0e1
  4099c9:	in     al,dx
  4099ca:	shl    DWORD PTR [edi],cl
  4099cc:	repz push 0x60
  4099cf:	fimul  DWORD PTR [ebx+eiz*2+0x6c4ecc0a]
  4099d6:	stos   BYTE PTR es:[edi],al
  4099d7:	xchg   esp,eax
  4099d8:	sar    BYTE PTR [edi-0x1f82cd2d],1
  4099de:	cld    
  4099df:	in     eax,dx
  4099e0:	ja     0x4099d0
  4099e2:	sbb    ebx,DWORD PTR [edx]
  4099e4:	xor    edi,DWORD PTR [edx+edx*2-0x737cfabf]
  4099eb:	adc    al,0x41
  4099ed:	pop    ecx
  4099ee:	popf   
  4099ef:	inc    ebx
  4099f0:	mov    edi,esi
  4099f2:	ret    
  4099f3:	fistp  QWORD PTR [eax-0x2b]
  4099f6:	retf   0x23c
  4099f9:	push   edx
  4099fa:	add    ah,bl
  4099fc:	scas   al,BYTE PTR es:[edi]
  4099fd:	(bad)  
  4099fe:	ror    DWORD PTR [esi+0x2c],cl
  409a01:	inc    ebx
  409a02:	xchg   edi,eax
  409a03:	sub    DWORD PTR [edi+0x1f],ebp
  409a06:	ins    BYTE PTR es:[edi],dx
  409a07:	bound  edx,QWORD PTR [ecx+0x466cd662]
  409a0d:	adc    eax,0xb9f6d47f
  409a12:	add    DWORD PTR [edx+0x63],ebp
  409a15:	sub    bl,0x89
  409a18:	out    0x7b,eax
  409a1a:	dec    edx
  409a1b:	lahf   
  409a1c:	jmp    0x409a54
  409a1e:	xor    eax,0x8cdf9e17
  409a23:	pop    ds
  409a24:	push   cs
  409a25:	and    DWORD PTR [edx+ebp*2+0x593aa58],eax
  409a2c:	arpl   WORD PTR [edx],di
  409a2e:	ficomp WORD PTR [edi+0x24]
  409a31:	sbb    eax,0x761b2fee
  409a36:	iret   
  409a37:	adc    al,0xc9
  409a39:	dec    edx
  409a3a:	push   edi
  409a3b:	iret   
  409a3c:	rcr    BYTE PTR [edi-0x70],1
  409a3f:	fdivr  QWORD PTR [ebx]
  409a41:	xchg   esp,eax
  409a42:	lods   al,BYTE PTR ds:[esi]
  409a43:	pop    ds
  409a44:	lea    esi,[esi-0x4d]
  409a47:	xor    dh,dh
  409a49:	daa    
  409a4a:	popa   
  409a4b:	mov    edi,0x37311894
  409a50:	add    eax,0xb03b1741
  409a55:	pop    ss
  409a56:	scas   eax,DWORD PTR es:[edi]
  409a57:	sub    eax,0x948b4d36
  409a5c:	xchg   esp,eax
  409a5d:	add    BYTE PTR [ecx+eax*2-0x57],bh
  409a61:	imul   ebp,DWORD PTR [ecx+eiz*4],0x7a6f2080
  409a68:	(bad)  
  409a69:	test   DWORD PTR [ebp-0x10e5ec2d],0x59040fdf
  409a73:	pop    edx
  409a74:	(bad)  
  409a75:	ficom  WORD PTR [eax+esi*4-0x7e64b660]
  409a7c:	add    eax,0x3c730ddc
  409a81:	mov    gs,WORD PTR [edx-0x7bc24db1]
  409a87:	add    eax,eax
  409a89:	pop    esp
  409a8a:	sub    eax,esi
  409a8c:	cwde   
  409a8d:	popf   
  409a8e:	hlt    
  409a8f:	cmp    BYTE PTR [edx],bl
  409a91:	and    al,0x87
  409a93:	mov    al,0xef
  409a95:	lahf   
  409a96:	dec    edi
  409a97:	sbb    al,0x93
  409a99:	cmp    bl,ah
  409a9b:	and    BYTE PTR [ecx-0x44629cff],al
  409aa1:	lahf   
  409aa2:	or     al,0xc7
  409aa4:	sub    BYTE PTR [eax],0x87
  409aa7:	or     esp,DWORD PTR [ebp-0x29]
  409aaa:	ins    BYTE PTR es:[edi],dx
  409aab:	bound  ecx,QWORD PTR [esi]
  409aad:	cmp    BYTE PTR [esi+0xd98921],dh
  409ab3:	xor    DWORD PTR [edi-0x43],0xef623219
  409aba:	(bad)  
  409abb:	sbb    DWORD PTR [eax-0x4726b39a],esp
  409ac1:	ret    
  409ac2:	inc    edi
  409ac3:	xor    DWORD PTR [eax+0x69],edx
  409ac6:	dec    ebx
  409ac7:	add    esi,edx
  409ac9:	adc    eax,0x97a7000
  409ace:	xchg   ebx,eax
  409acf:	add    bl,BYTE PTR [ecx-0x7289bcb7]
  409ad5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ad6:	scas   al,BYTE PTR es:[edi]
  409ad7:	mov    ah,0xe9
  409ad9:	adc    al,0x4d
  409adb:	cmp    esp,0x130daa00
  409ae1:	mov    bh,0xb9
  409ae3:	outs   dx,BYTE PTR ds:[esi]
  409ae4:	xchg   ecx,eax
  409ae5:	mov    ah,0xdb
  409ae7:	out    0xf8,al
  409ae9:	hlt    
  409aea:	push   ebx
  409aeb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409aec:	loope  0x409aa5
  409aee:	pop    esp
  409aef:	adc    esp,ecx
  409af1:	int3   
  409af2:	cmp    BYTE PTR [eax],ch
  409af4:	mov    ch,0xc7
  409af6:	mov    esp,0x4e886a3
  409afb:	out    0x4f,eax
  409afd:	ret    
  409afe:	sub    bl,bl
  409b00:	pop    esp
  409b01:	in     eax,dx
  409b02:	pop    edx
  409b03:	sub    eax,DWORD PTR [esi+0x30]
  409b06:	or     BYTE PTR ds:0xc7f9714f,bl
  409b0c:	sbb    al,0x4f
  409b0e:	lods   eax,DWORD PTR ds:[esi]
  409b0f:	in     al,dx
  409b10:	cs push esi
  409b12:	ret    
  409b13:	popf   
  409b14:	add    DWORD PTR [ebp-0x3c],ecx
  409b17:	inc    edx
  409b18:	sub    al,0x9c
  409b1a:	sbb    esi,DWORD PTR [esi+0x5d13ae84]
  409b20:	int    0x36
  409b22:	repnz mov edx,0x97ec603a
  409b28:	xor    al,BYTE PTR [edx]
  409b2a:	dec    eax
  409b2b:	sub    DWORD PTR [eax+edi*8-0x9c99782],ebp
  409b32:	es mov dh,0x25
  409b35:	sub    bh,BYTE PTR [edx+ebp*8]
  409b38:	adc    bl,BYTE PTR [ebx+0x18]
  409b3b:	bound  esp,QWORD PTR [esi]
  409b3d:	sbb    ah,BYTE PTR [esp+ecx*8]
  409b40:	push   esp
  409b41:	and    BYTE PTR [eax-0x75],0x10
  409b45:	retf   0xcda7
  409b48:	inc    ebp
  409b49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b4a:	xor    eax,0xd4c62b1f
  409b4f:	test   cl,0x8b
  409b52:	jne    0x409bcf
  409b54:	mov    ds:0xc4a20df0,eax
  409b59:	in     al,dx
  409b5a:	scas   eax,DWORD PTR es:[edi]
  409b5b:	or     BYTE PTR [ecx-0x6],al
  409b5e:	push   edx
  409b5f:	push   edi
  409b60:	bound  edx,QWORD PTR [eax-0x1dfab54d]
  409b66:	mov    ds:0xede8a3fa,al
  409b6b:	pusha  
  409b6c:	dec    ecx
  409b6d:	push   0xc9941c5e
  409b72:	jmp    0x409b36
  409b74:	std    
  409b75:	xlat   BYTE PTR ds:[ebx]
  409b76:	and    al,ch
  409b78:	cmc    
  409b79:	jle    0x409b95
  409b7b:	mov    cl,bh
  409b7d:	loop   0x409b88
  409b7f:	pop    esp
  409b80:	call   0xe1c7:0x613b24c7
  409b87:	dec    eax
  409b88:	fwait
  409b89:	sub    DWORD PTR [edx+0x49d166fe],ebp
  409b8f:	fbstp  TBYTE PTR [esp+edi*1]
  409b92:	pop    edi
  409b93:	pop    ebx
  409b94:	mov    dh,0x41
  409b96:	rcl    DWORD PTR [esi+0x5d],cl
  409b99:	mov    eax,0x96d26b2b
  409b9e:	(bad)  
  409b9f:	pop    ebp
  409ba0:	cwde   
  409ba1:	or     edx,DWORD PTR [esi]
  409ba3:	pushfw 
  409ba5:	inc    esp
  409ba6:	(bad)  
  409ba7:	test   BYTE PTR [edx-0x52],ch
  409baa:	or     ah,BYTE PTR [edx+ebp*8]
  409bad:	xor    ebp,DWORD PTR [ebp+0x33ccbc1c]
  409bb3:	repnz cli 
  409bb5:	(bad)  
  409bb6:	adc    al,0x60
  409bb8:	fsub   st,st(4)
  409bba:	mov    edx,0x7c620272
  409bbf:	imul   eax,DWORD PTR [edx],0x6c6e1a3c
  409bc5:	dec    edx
  409bc6:	test   BYTE PTR [edi-0x7808486d],dh
  409bcc:	cmp    edx,edi
  409bce:	push   eax
  409bcf:	dec    esp
  409bd0:	sbb    eax,0xa65197a3
  409bd5:	adc    ebp,DWORD PTR [esp+0x75]
  409bd9:	xor    dh,BYTE PTR ds:0x2fd0fdcc
  409bdf:	cmp    al,0x6b
  409be1:	jnp    0x409c05
  409be3:	xor    eax,eax
  409be5:	mov    fs,WORD PTR [edi+0x45]
  409be8:	pop    edi
  409be9:	xchg   ecx,eax
  409bea:	adc    BYTE PTR [ecx-0x44],ah
  409bed:	xor    edx,DWORD PTR [edx]
  409bef:	dec    edx
  409bf0:	push   edx
  409bf1:	inc    esp
  409bf2:	shl    bh,cl
  409bf4:	loope  0x409c29
  409bf6:	loope  0x409c55
  409bf8:	nop
  409bf9:	jl     0x409c30
  409bfb:	rcr    DWORD PTR [eax-0x335abe66],0x4b
  409c02:	and    ebx,DWORD PTR [ebx+edi*4+0x5b0085fa]
  409c09:	dec    esi
  409c0a:	sub    ebp,DWORD PTR [edi-0x40a18516]
  409c10:	pause  
  409c12:	retf   0x412c
  409c15:	add    BYTE PTR [edx-0x4d],dh
  409c18:	xchg   edx,eax
  409c19:	mov    esp,0xb76cf9a7
  409c1e:	xor    eax,0x6eab50eb
  409c23:	data16 jnp 0x409c44
  409c26:	stos   BYTE PTR es:[edi],al
  409c27:	mov    esp,0x284b2e26
  409c2c:	bound  eax,QWORD PTR ds:0xe6b2e9ef
  409c32:	jle    0x409c97
  409c34:	mov    al,0xa4
  409c36:	sbb    DWORD PTR [edi-0x31],esi
  409c39:	jmp    0x2dbe:0xbb4b3dc7
  409c40:	sub    eax,0x1958fba
  409c45:	(bad)  [esi]
  409c47:	jne    0x409c3e
  409c49:	and    al,0x71
  409c4b:	lahf   
  409c4c:	dec    eax
  409c4d:	jnp    0x409bd1
  409c4f:	arpl   WORD PTR [ecx],ax
  409c51:	sbb    ecx,DWORD PTR [eax-0x3c287dd2]
  409c57:	in     eax,dx
  409c58:	nop
  409c59:	sbb    al,0xd2
  409c5b:	in     eax,dx
  409c5c:	js     0x409c1e
  409c5e:	add    al,0x12
  409c60:	push   esi
  409c61:	clc    
  409c62:	and    eax,DWORD PTR [esi-0x66]
  409c65:	dec    ebp
  409c66:	std    
  409c67:	sbb    al,cl
  409c69:	(bad)  
  409c6a:	ins    DWORD PTR es:[edi],dx
  409c6b:	pop    edi
  409c6c:	(bad)  
  409c6d:	mov    bl,0x55
  409c6f:	dec    eax
  409c70:	call   DWORD PTR [esp+ebp*8]
  409c73:	xor    DWORD PTR [edi+0x4f],esp
  409c76:	hlt    
  409c77:	and    ebp,DWORD PTR [ebx+0x14]
  409c7a:	jbe    0x409c99
  409c7c:	nop
  409c7d:	xchg   ebp,eax
  409c7e:	pop    ecx
  409c7f:	add    edi,edx
  409c81:	mov    ch,0xfa
  409c83:	inc    ebp
  409c84:	xchg   ebx,eax
  409c85:	or     al,0xd7
  409c87:	cmp    ch,cl
  409c89:	ss cli 
  409c8b:	dec    ebx
  409c8c:	mov    al,0xce
  409c8e:	fdivr  QWORD PTR [edi-0x63e89a2e]
  409c94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c95:	cmp    BYTE PTR [esi-0x55],al
  409c98:	in     al,0x56
  409c9a:	add    DWORD PTR [eax+0xdeb169c],edx
  409ca0:	or     eax,0x82934e4e
  409ca5:	xchg   esp,eax
  409ca6:	aam    0xb9
  409ca8:	adc    al,0xcc
  409caa:	fadd   DWORD PTR [bx+di]
  409cad:	xor    DWORD PTR [ebx-0x76ddee3b],esp
  409cb3:	out    dx,al
  409cb4:	xchg   edx,eax
  409cb5:	sti    
  409cb6:	out    dx,al
  409cb7:	xchg   esi,eax
  409cb8:	jg     0x409ccf
  409cba:	xchg   BYTE PTR [edi+0x42],bl
  409cbd:	or     bl,BYTE PTR [edx-0x14]
  409cc0:	mov    edi,0x5b3612e5
  409cc5:	mov    ebx,0xa14f3ad2
  409cca:	xchg   edi,eax
  409ccb:	xchg   DWORD PTR [ecx],ebp
  409ccd:	or     al,0x30
  409ccf:	mov    edi,0xf19901be
  409cd4:	mov    cl,0x2e
  409cd6:	xchg   edx,eax
  409cd7:	adc    al,0x3a
  409cd9:	xchg   ebx,eax
  409cda:	rol    BYTE PTR [ecx],1
  409cdc:	cdq    
  409cdd:	aas    
  409cde:	fadd   DWORD PTR [esi]
  409ce0:	sub    eax,edi
  409ce2:	dec    ecx
  409ce3:	pop    es
  409ce4:	ss pop ds
  409ce6:	adc    ah,BYTE PTR [edi]
  409ce8:	push   ecx
  409ce9:	out    0xe6,eax
  409ceb:	ret    
  409cec:	ins    DWORD PTR es:[edi],dx
  409ced:	mov    eax,ds:0xd633214
  409cf2:	or     BYTE PTR [ecx],0xd4
  409cf5:	pop    ecx
  409cf6:	add    DWORD PTR [ecx+0x46],ebp
  409cf9:	inc    ecx
  409cfa:	outs   dx,DWORD PTR ds:[esi]
  409cfb:	xchg   esi,eax
  409cfc:	repz test DWORD PTR [ecx+0x72071a39],0x22b6cac5
  409d07:	aad    0x5e
  409d09:	in     al,dx
  409d0a:	in     al,dx
  409d0b:	nop
  409d0c:	mov    ebp,0xa216280a
  409d11:	es and al,0xa4
  409d14:	aaa    
  409d15:	and    bh,BYTE PTR [ecx+ebp*4+0x111d5f4d]
  409d1c:	loope  0x409ce0
  409d1e:	clc    
  409d1f:	jbe    0x409ced
  409d21:	pop    edi
  409d22:	mov    al,0x38
  409d24:	mov    WORD PTR ds:0x94f43e9d,gs
  409d2a:	aad    0x69
  409d2c:	sbb    DWORD PTR [edi-0x5c63ab6],ebp
  409d32:	out    0x3e,eax
  409d34:	adc    BYTE PTR cs:[ebx],bh
  409d37:	mov    esi,0x705cf09f
  409d3c:	and    al,0x1c
  409d3e:	(bad)  
  409d3f:	sub    BYTE PTR [edx+esi*1+0x3e],dh
  409d43:	dec    esp
  409d44:	fimul  WORD PTR [ebp+0x0]
  409d47:	pop    ebp
  409d48:	hlt    
  409d49:	mov    dh,0xe6
  409d4b:	push   ds
  409d4c:	loope  0x409d5a
  409d4e:	xor    eax,0x1cbe85dc
  409d53:	mov    ecx,0x295750f6
  409d58:	or     esi,esi
  409d5a:	pop    ebp
  409d5b:	in     al,0xd3
  409d5d:	in     al,0xae
  409d5f:	ret    0x1367
  409d62:	or     ebp,edi
  409d64:	sahf   
  409d65:	test   DWORD PTR [edx-0x74fa1cae],edi
  409d6b:	jmp    0x409d66
  409d6d:	sbb    bl,BYTE PTR [ebp+edi*1+0x43]
  409d71:	jp     0x409d82
  409d73:	and    ebx,DWORD PTR [ecx+0x723ad0f7]
  409d79:	dec    ebp
  409d7a:	in     eax,dx
  409d7b:	pop    esi
  409d7c:	pop    ebp
  409d7d:	js     0x409d3f
  409d7f:	pop    edx
  409d80:	mov    al,BYTE PTR [esi-0x6c]
  409d83:	xor    edi,ebx
  409d85:	and    ah,ch
  409d87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d88:	push   ebp
  409d89:	enter  0x9bb7,0x4b
  409d8d:	add    dh,BYTE PTR [eax]
  409d8f:	aas    
  409d90:	add    DWORD PTR [ebp-0x66],esi
  409d93:	push   ebp
  409d94:	inc    edi
  409d95:	mov    edi,0xcd75ec31
  409d9a:	xor    dl,dl
  409d9c:	sub    ah,ch
  409d9e:	mov    ds:0x56298021,eax
  409da3:	loop   0x409e08
  409da5:	mov    esp,0xc268a956
  409daa:	mov    esi,DWORD PTR [esi+ebx*8+0x5d]
  409dae:	(bad)  
  409daf:	js     0x409e1e
  409db1:	or     bh,BYTE PTR [esi+0x2b]
  409db4:	dec    esi
  409db5:	je     0x409d4e
  409db7:	aad    0x61
  409db9:	cmp    ebp,DWORD PTR [esi+0x1fec18c2]
  409dbf:	and    esp,esi
  409dc1:	xor    eax,0xcc973232
  409dc6:	stos   DWORD PTR es:[edi],eax
  409dc7:	push   es
  409dc8:	out    dx,al
  409dc9:	adc    BYTE PTR [esi-0x2b],0xe0
  409dcd:	adc    esi,DWORD PTR [ebx+0x42]
  409dd0:	lock (bad) 
  409dd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409dd3:	bound  eax,QWORD PTR [esi+ecx*4]
  409dd6:	push   ecx
  409dd7:	xor    al,0x95
  409dd9:	mov    al,0xc5
  409ddb:	outs   dx,BYTE PTR ds:[esi]
  409ddc:	leave  
  409ddd:	sub    eax,0xbe250c0d
  409de2:	jl     0x409dda
  409de4:	(bad)  
  409de5:	leave  
  409de6:	xor    edx,DWORD PTR [edi+edx*8+0x1b]
  409dea:	loope  0x409dda
  409dec:	sub    edi,DWORD PTR [ebx]
  409dee:	pop    ds
  409def:	inc    ebp
  409df0:	push   ebx
  409df1:	mov    ds:0xf4f47c8f,eax
  409df6:	sbb    BYTE PTR [edx-0x46],cl
  409df9:	out    0xbc,al
  409dfb:	fidivr WORD PTR [edi+ebp*1-0x47]
  409dff:	sbb    dh,cl
  409e01:	push   esp
  409e02:	mov    DWORD PTR [ebx-0x20],ebx
  409e05:	mov    eax,ds:0x77f53483
  409e0a:	push   ebx
  409e0b:	ja     0x409e14
  409e0d:	xchg   edx,eax
  409e0e:	pushf  
  409e0f:	in     al,dx
  409e10:	ins    DWORD PTR es:[edi],dx
  409e11:	inc    eax
  409e12:	dec    eax
  409e13:	repz ror DWORD PTR gs:[ecx],1
  409e17:	mov    ecx,0x3f91b619
  409e1c:	repz cmp al,0x3f
  409e1f:	(bad)  
  409e21:	jmp    0x3f5c:0x4554d57
  409e28:	xchg   BYTE PTR [eax+ecx*4+0x178aae51],bl
  409e2f:	push   eax
  409e30:	xor    eax,0x5c719e9e
  409e35:	push   es
  409e36:	data16 scas al,BYTE PTR es:[edi]
  409e38:	cdq    
  409e39:	jge    0x409dcd
  409e3b:	push   eax
  409e3c:	jge    0x409eb0
  409e3e:	stc    
  409e3f:	xor    eax,0xa5cc474c
  409e44:	and    cl,ch
  409e46:	sbb    BYTE PTR [eax-0x22],bh
  409e49:	mov    cs,ebx
  409e4b:	add    al,bh
  409e4d:	pop    esp
  409e4e:	mov    eax,DWORD PTR es:[eax]
  409e51:	push   0x17fa257e
  409e56:	pop    eax
  409e57:	int    0xee
  409e59:	mov    cl,0xe3
  409e5b:	and    ebx,DWORD PTR [edx-0x1ba4d348]
  409e61:	and    BYTE PTR [ecx],bl
  409e63:	xchg   esi,eax
  409e64:	aad    0xeb
  409e66:	inc    edi
  409e67:	jmp    0x409e6b
  409e69:	into   
  409e6a:	xchg   edi,eax
  409e6b:	xlat   BYTE PTR ds:[ebx]
  409e6c:	stos   BYTE PTR es:[edi],al
  409e6d:	outs   dx,DWORD PTR ds:[esi]
  409e6e:	or     DWORD PTR [ebp-0x4a60cf2],esp
  409e74:	inc    edi
  409e75:	sbb    eax,0x57d6a066
  409e7a:	fcmovu st,st(0)
  409e7c:	dec    ecx
  409e7d:	ins    DWORD PTR es:[edi],dx
  409e7e:	xor    al,BYTE PTR [eax-0x5f]
  409e81:	scas   eax,DWORD PTR es:[edi]
  409e82:	pop    esi
  409e83:	adc    al,0x70
  409e85:	xchg   ebp,eax
  409e86:	repnz sub ah,BYTE PTR [ebx-0x31794c11]
  409e8d:	jo     0x409e59
  409e8f:	out    dx,eax
  409e90:	and    DWORD PTR [esi+0x53],esi
  409e93:	mov    dh,0x99
  409e95:	pop    ebx
  409e96:	jmp    0x58f3a47e
  409e9b:	cmp    DWORD PTR [ecx+eax*4],0x292e399c
  409ea2:	hlt    
  409ea3:	arpl   bp,bx
  409ea5:	repnz addr16 xchg ecx,eax
  409ea8:	xchg   esi,eax
  409ea9:	retf   0x5ccb
  409eac:	xchg   ebp,eax
  409ead:	call   0x364c72e3
  409eb2:	push   ss
  409eb3:	pop    ss
  409eb4:	jg     0x409f1d
  409eb6:	mov    ?,WORD PTR [esp+ebp*8+0x59]
  409eba:	lahf   
  409ebb:	sbb    al,0x67
  409ebd:	xchg   edi,eax
  409ebe:	pop    ds
  409ebf:	pop    ebx
  409ec0:	push   ebp
  409ec1:	mov    esp,0x8267678f
  409ec6:	int    0xd2
  409ec8:	mov    WORD PTR [esi-0x10],ds
  409ecb:	jecxz  0x409e79
  409ecd:	in     al,0x99
  409ecf:	pusha  
  409ed0:	out    0x82,al
  409ed2:	mov    ebp,0x1fd7945e
  409ed7:	std    
  409ed8:	inc    edx
  409ed9:	mov    ecx,0xf5c5744d
  409ede:	add    edi,DWORD PTR [ebx]
  409ee0:	adc    BYTE PTR [esi-0xe],ch
  409ee3:	and    DWORD PTR [ebp+ebx*2-0x53],ecx
  409ee7:	pop    ss
  409ee8:	xor    bh,BYTE PTR [edi-0x6e]
  409eeb:	dec    ecx
  409eec:	cmp    DWORD PTR [eax+0x2d],esi
  409eef:	cdq    
  409ef0:	adc    ah,al
  409ef2:	pop    esp
  409ef3:	pop    es
  409ef4:	and    BYTE PTR [ebp-0x38],ah
  409ef7:	push   esi
  409ef8:	(bad)  
  409ef9:	mov    ds,eax
  409efb:	(bad)  
  409efc:	jnp    0x409f31
  409efe:	xchg   ecx,eax
  409eff:	pop    edx
  409f00:	call   0xd4bc:0x51d40ea0
  409f07:	pop    esp
  409f08:	mov    ds:0xc49c89b1,al
  409f0d:	retf   0xc4a7
  409f10:	test   BYTE PTR [edx+0x34],ah
  409f13:	mov    ecx,0x263fc144
  409f18:	jno    0x409ea0
  409f1a:	cmp    al,0xc
  409f1c:	cmp    ah,dl
  409f1e:	daa    
  409f1f:	cmp    bh,dl
  409f21:	pop    ebp
  409f22:	sub    DWORD PTR [edx],esi
  409f24:	loope  0x409f7c
  409f26:	call   0x7106:0xb89d342b
  409f2d:	and    al,0x2a
  409f2f:	mov    ds:0x25904c0f,eax
  409f34:	icebp  
  409f35:	sub    DWORD PTR [esi+0x26],esi
  409f38:	or     dl,BYTE PTR [eax-0x88c8276]
  409f3e:	ud2    
  409f40:	xchg   esp,eax
  409f41:	aam    0xa6
  409f43:	ja     0x409ee0
  409f45:	mov    dh,BYTE PTR [ebp+edx*2-0x42]
  409f49:	scas   eax,DWORD PTR es:[edi]
  409f4a:	add    ebp,DWORD PTR [edx+0xb]
  409f4d:	fisubr DWORD PTR [ebx]
  409f4f:	mov    dl,al
  409f51:	add    al,0x27
  409f53:	mov    al,ds:0x37e4f078
  409f58:	dec    esp
  409f59:	cmp    DWORD PTR [edx+0x3e],eax
  409f5c:	(bad)  
  409f5d:	pop    ecx
  409f5e:	mov    ebx,0xc66ec2ad
  409f63:	in     eax,0xff
  409f65:	sbb    esp,edx
  409f67:	and    ecx,ebx
  409f69:	jo     0x409f6d
  409f6b:	std    
  409f6c:	lea    ecx,[ecx]
  409f6e:	js     0x409f22
  409f70:	popf   
  409f71:	ins    BYTE PTR es:[edi],dx
  409f72:	call   0xbbc03b6d
  409f77:	push   eax
  409f78:	fbstp  TBYTE PTR [edi+0x21f94f13]
  409f7e:	sbb    dl,cl
  409f80:	cli    
  409f81:	(bad)  [eax+0x1f17f8d4]
  409f87:	ja     0x409f46
  409f89:	ss das 
  409f8b:	out    dx,al
  409f8c:	out    0x70,al
  409f8e:	cwde   
  409f8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f90:	aad    0x7b
  409f92:	add    cl,BYTE PTR [ebx]
  409f94:	mov    ecx,0xb02554e4
  409f99:	add    al,0x9
  409f9b:	movlps QWORD PTR [edx-0x41],xmm1
  409f9f:	push   eax
  409fa0:	call   0x8996:0xf217634c
  409fa7:	mov    ch,0x3
  409fa9:	jge    0x40a029
  409fab:	leave  
  409fac:	pop    ss
  409fad:	or     edi,edi
  409faf:	test   bh,ah
  409fb1:	and    DWORD PTR [ebx+0x411e76e1],ecx
  409fb7:	sbb    ch,ah
  409fb9:	adc    al,0xe2
  409fbb:	jmp    0x409fd1
  409fbd:	sbb    ch,BYTE PTR [ebp-0x10]
  409fc0:	xor    al,0x9c
  409fc2:	not    BYTE PTR [esp+edi*8-0x7c76067a]
  409fc9:	sub    eax,DWORD PTR [edx]
  409fcb:	push   DWORD PTR [edi]
  409fcd:	push   ecx
  409fce:	les    eax,FWORD PTR [ebp+0x1a]
  409fd1:	mov    esi,0x37d167fc
  409fd6:	pop    eax
  409fd7:	(bad)  
  409fd8:	pop    edi
  409fd9:	xchg   edx,eax
  409fda:	push   eax
  409fdb:	stc    
  409fdc:	inc    edx
  409fdd:	addr16 dec eax
  409fdf:	jae    0x40a03c
  409fe1:	jmp    0x40a053
  409fe3:	push   esp
  409fe4:	push   ecx
  409fe5:	retf   0x8461
  409fe8:	sub    ah,BYTE PTR [esp+eax*8]
  409feb:	(bad)  
  409fec:	je     0x40a024
  409fee:	xor    DWORD PTR [edx+0x2e9d6d45],0x66d4dc47
  409ff8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ff9:	gs sahf 
  409ffb:	mov    bh,0xa0
  409ffd:	dec    edx
  409ffe:	xor    edi,DWORD PTR [eax-0xf]
  40a001:	dec    edx
  40a002:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a003:	mov    edx,edi
  40a005:	call   0x877d519a
  40a00a:	sbb    al,0x18
  40a00c:	xor    edi,esi
  40a00e:	int3   
  40a00f:	cmc    
  40a010:	xor    DWORD PTR [esi-0x206a7b19],esi
  40a016:	fwait
  40a017:	mov    cl,0x5a
  40a019:	adc    al,0xc1
  40a01b:	scas   eax,DWORD PTR es:[edi]
  40a01c:	pop    ss
  40a01d:	jo     0x40a073
  40a01f:	nop
  40a020:	loope  0x40a023
  40a022:	mov    al,ds:0xe60d14cb
  40a027:	imul   edx,DWORD PTR [ebx],0x5ae130e2
  40a02d:	shl    DWORD PTR [ebp+ebx*1-0x4fc63020],1
  40a034:	push   ecx
  40a035:	shl    BYTE PTR [eax-0x3d166007],cl
  40a03b:	pop    ebp
  40a03c:	xchg   ebp,eax
  40a03d:	adc    ah,ah
  40a03f:	jns    0x40a05b
  40a041:	sbb    eax,0xc591f08a
  40a046:	loopne 0x40a05f
  40a048:	pop    eax
  40a049:	outs   dx,DWORD PTR ds:[esi]
  40a04a:	shl    BYTE PTR [esi-0x26],cl
  40a04d:	addr16 adc eax,0xab480ec1
  40a053:	pop    ecx
  40a054:	push   esp
  40a055:	mov    BYTE PTR [esi+0x78ea9e65],dh
  40a05b:	rcl    DWORD PTR [ebp+0x18761db4],1
  40a061:	and    al,0xb9
  40a063:	jl     0x40a0bf
  40a065:	jle    0x40a0ce
  40a067:	cmp    BYTE PTR [edx],0xad
  40a06a:	lock jle 0x40a0a5
  40a06d:	jb     0x40a094
  40a06f:	mov    ebp,0xb7024ba0
  40a074:	shl    DWORD PTR [edi-0x5d67c551],1
  40a07a:	xor    esi,DWORD PTR [ecx+ecx*2-0x6c]
  40a07e:	jne    0x40a0a4
  40a080:	or     al,0x55
  40a082:	daa    
  40a083:	mov    gs,WORD PTR [esi]
  40a085:	loope  0x40a04a
  40a087:	stos   BYTE PTR es:[edi],al
  40a088:	xchg   ebp,edi
  40a08a:	outs   dx,BYTE PTR ds:[esi]
  40a08b:	xor    eax,0x31b9cd6f
  40a090:	fld    st(7)
  40a092:	(bad)
  40a096:	gs sahf 
  40a098:	dec    eax
  40a099:	sub    ch,bh
  40a09b:	adc    edi,ebp
  40a09d:	pop    ecx
  40a09e:	lahf   
  40a09f:	xor    BYTE PTR [bx+di],ch
  40a0a2:	fiadd  WORD PTR [edi-0x17]
  40a0a5:	mov    ebp,0x6c8e6f36
  40a0aa:	ins    DWORD PTR es:[edi],dx
  40a0ab:	ror    BYTE PTR ds:0x90ee9072,cl
  40a0b1:	xchg   ecx,eax
  40a0b2:	and    esp,DWORD PTR [esi-0x31]
  40a0b5:	push   esi
  40a0b6:	(bad)  
  40a0b7:	in     eax,0x16
  40a0b9:	pop    ebp
  40a0ba:	lock mov ebp,0xf198ddae
  40a0c0:	or     al,0x84
  40a0c2:	jns    0x40a0a0
  40a0c4:	push   ebx
  40a0c5:	sbb    eax,0xbb1784eb
  40a0ca:	(bad)  
  40a0cc:	cli    
  40a0cd:	sub    al,0xfc
  40a0cf:	xor    DWORD PTR [ebp+0x3137acb0],eax
  40a0d5:	mov    ds:0xd25fdc67,eax
  40a0da:	sub    al,0x25
  40a0dc:	js     0x40a083
  40a0de:	mov    eax,0xb93c24b0
  40a0e3:	aam    0x58
  40a0e5:	aas    
  40a0e6:	(bad)
  40a0e9:	and    eax,0x26421766
  40a0ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a0ef:	add    al,0xbd
  40a0f1:	(bad)  
  40a0f2:	sbb    dl,ah
  40a0f4:	jl     0x40a0a0
  40a0f6:	dec    ebp
  40a0f7:	aas    
  40a0f8:	jecxz  0x40a07c
  40a0fa:	jge    0x40a168
  40a0fc:	cmp    bl,BYTE PTR [ebp+0x54d84ea5]
  40a102:	inc    esi
  40a103:	cld    
  40a104:	inc    ebx
  40a105:	adc    al,0x18
  40a107:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a108:	dec    esi
  40a109:	lea    edi,[edx-0x3bc50b92]
  40a10f:	mov    esi,0x63dbd1ac
  40a114:	push   ecx
  40a115:	or     al,0x7f
  40a117:	pusha  
  40a118:	loope  0x40a15f
  40a11a:	or     DWORD PTR [esi-0x9811bef],esi
  40a120:	adc    eax,0xd120637f
  40a125:	adc    DWORD PTR [edx],0xf
  40a128:	jle    0x40a107
  40a12a:	jl     0x40a0fe
  40a12c:	shr    DWORD PTR [edi],1
  40a12e:	jbe    0x40a144
  40a130:	xadd   DWORD PTR [ecx],eax
  40a133:	in     al,0x6f
  40a135:	sbb    al,0x30
  40a137:	push   0xb9f2c68e
  40a13c:	gs jge 0x40a134
  40a13f:	pop    ebp
  40a140:	in     al,dx
  40a141:	fnsave [ecx+0x76021521]
  40a147:	loope  0x40a0dc
  40a149:	dec    BYTE PTR [ebp-0x69]
  40a14c:	pop    ecx
  40a14d:	sbb    eax,0x782802a9
  40a152:	cmp    DWORD PTR [esi+edi*8],edi
  40a155:	and    eax,0x806c5ea
  40a15a:	xchg   BYTE PTR ds:0x143e9727,bl
  40a160:	test   DWORD PTR [esi-0x6285ac17],ebx
  40a166:	std    
  40a167:	cmc    
  40a168:	loop   0x40a10b
  40a16a:	mov    ah,0x5d
  40a16c:	loopne 0x40a1ed
  40a16e:	retf   
  40a16f:	ins    DWORD PTR es:[edi],dx
  40a170:	dec    esp
  40a171:	add    bh,dl
  40a173:	pop    edx
  40a174:	cwde   
  40a175:	shl    BYTE PTR [ebp+0x2d],0x4
  40a179:	xor    ah,BYTE PTR [ecx-0x4f]
  40a17c:	sti    
  40a17d:	cli    
  40a17e:	sub    DWORD PTR [edi-0x3e],ebx
  40a181:	aam    0x55
  40a183:	adc    BYTE PTR [edi],ch
  40a185:	icebp  
  40a186:	int    0x39
  40a188:	scas   al,BYTE PTR es:[edi]
  40a189:	(bad)  
  40a18a:	jge    0x40a11a
  40a18c:	xor    DWORD PTR [esi],esp
  40a18e:	adc    al,0x8
  40a190:	or     esi,DWORD PTR [eax]
  40a192:	popa   
  40a193:	aad    0x3b
  40a195:	rol    DWORD PTR [edi+edx*8],0x94
  40a199:	std    
  40a19a:	cmp    al,0xca
  40a19c:	das    
  40a19d:	aaa    
  40a19e:	inc    ebp
  40a19f:	and    dl,BYTE PTR [edx]
  40a1a1:	sub    bh,BYTE PTR [edi+0x56858fb9]
  40a1a7:	jne    0x40a20d
  40a1a9:	mov    eax,0x574e9bf7
  40a1ae:	lods   eax,DWORD PTR ds:[esi]
  40a1af:	mov    ebp,0x9d0421bd
  40a1b4:	iret   
  40a1b5:	add    dh,BYTE PTR [ecx+0x62]
  40a1b8:	fisttp WORD PTR [edx]
  40a1ba:	loop   0x40a180
  40a1bc:	sbb    ah,BYTE PTR [eax]
  40a1be:	sbb    eax,0x5e92b7a5
  40a1c3:	sti    
  40a1c4:	or     dl,bl
  40a1c6:	adc    DWORD PTR [eax+ebx*8],edi
  40a1c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a1ca:	call   0xd611:0x20511c0f
  40a1d1:	inc    esi
  40a1d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a1d3:	rcr    BYTE PTR [ebx],0xbd
  40a1d6:	pop    ebp
  40a1d7:	adc    DWORD PTR [edi],eax
  40a1d9:	repz mov esp,0xd4aee5b6
  40a1df:	popa   
  40a1e0:	popa   
  40a1e1:	mov    BYTE PTR [eax],bl
  40a1e3:	cmp    BYTE PTR [ebx-0x65d6cdf9],0x91
  40a1ea:	or     edi,edx
  40a1ec:	sbb    ah,al
  40a1ee:	ss es jg 0x40a1a0
  40a1f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a1f3:	es mov esp,0x12cb6943
  40a1f9:	jp     0x40a1f0
  40a1fb:	jne    0x40a226
  40a1fd:	cmp    esi,eax
  40a1ff:	jne    0x40a21b
  40a205:	mov    eax,DWORD PTR [ebp-0x4]
  40a208:	mov    esi,DWORD PTR [ebp-0x8]
  40a20b:	xor    eax,edx
  40a20d:	xor    esi,edx
  40a20f:	add    eax,ecx
  40a211:	add    esi,ecx
  40a213:	imul   eax,esi
  40a216:	jmp    0x40a256
  40a21b:	mov    eax,DWORD PTR [ebp+0xc]
  40a21e:	mov    eax,DWORD PTR [eax+0x78]
  40a221:	mov    DWORD PTR [ebp+0xc],eax
  40a224:	mov    eax,DWORD PTR [ebp-0x4]
  40a227:	mov    esi,DWORD PTR [ebp-0x8]
  40a22a:	xor    eax,edx
  40a22c:	xor    esi,edx
  40a22e:	add    eax,ecx
  40a230:	add    esi,ecx
  40a232:	imul   eax,esi
  40a235:	mov    esi,DWORD PTR [ebp+0xc]
  40a238:	cmp    esi,eax
  40a23a:	mov    eax,DWORD PTR [ebp-0x4]
  40a23d:	je     0x40a208
  40a243:	xor    eax,edx
  40a245:	add    eax,ecx
  40a247:	mov    ecx,DWORD PTR [ebp+0xc]
  40a24a:	imul   eax,ecx
  40a24d:	add    eax,DWORD PTR [ebp+0x8]
  40a250:	mov    DWORD PTR [ebp+0xc],eax
  40a253:	mov    eax,DWORD PTR [ebp+0xc]
  40a256:	pop    esi
  40a257:	leave  
  40a258:	ret    0x8
  40a25b:	push   ebp
  40a25c:	mov    ebp,esp
  40a25e:	sub    esp,0x10
  40a261:	sbb    eax,DWORD PTR ds:0x413c88
  40a267:	mov    eax,0xf89c85b0
  40a26c:	xor    edx,edx
  40a26e:	xor    edx,DWORD PTR ds:0x414014
  40a274:	sub    DWORD PTR ds:0x413cf4,edx
  40a27a:	mov    DWORD PTR [ebp-0x4],eax
  40a27d:	add    ecx,ecx
  40a27f:	mov    DWORD PTR [ebp-0x8],0xf89c85b1
  40a286:	or     DWORD PTR ds:0x414014,edi
  40a28c:	mov    ecx,DWORD PTR [ebp-0x4]
  40a28f:	push   esi
  40a290:	mov    edx,0x7510894
  40a295:	add    esi,0x25d7
  40a29b:	xor    ecx,edx
  40a29d:	mov    DWORD PTR ds:0x413d30,0x18
  40a2a7:	cmp    DWORD PTR ds:0x413d30,0x0
  40a2ae:	je     0x40a2e4
  40a2b4:	cmp    DWORD PTR ds:0x413d30,0x19
  40a2bb:	jne    0x40a2cc
  40a2c1:	push   0x413ce8
  40a2c6:	call   DWORD PTR ds:0x41679c
  40a2cc:	mov    esi,DWORD PTR ds:0x413d30
  40a2d2:	dec    esi
  40a2d3:	mov    DWORD PTR ds:0x413d30,esi
  40a2d9:	jmp    0x40a2a7
  40a2de:	add    esi,DWORD PTR ds:0x413d24
  40a2e4:	mov    esi,0x3272dc
  40a2e9:	neg    DWORD PTR ds:0x413d24
  40a2ef:	push   edi
  40a2f0:	mov    edi,DWORD PTR [ebp+0x10]
  40a2f3:	adc    DWORD PTR ds:0x414008,0x741e
  40a2fd:	add    ecx,esi
  40a2ff:	cmp    ecx,edi
  40a301:	mov    DWORD PTR ds:0x413c80,0x1b1e
  40a30b:	je     0x40a474
  40a311:	mov    ecx,DWORD PTR [ebp-0x4]
  40a314:	mov    edi,DWORD PTR [ebp+0x10]
  40a317:	xor    eax,eax
  40a319:	xor    ecx,edx
  40a31b:	adc    DWORD PTR ds:0x413d2c,0x414008
  40a325:	add    ecx,esi
  40a327:	add    edi,0xfabdbeef
  40a32d:	adc    eax,0xffffffff
  40a330:	neg    DWORD PTR ds:0x413c88
  40a336:	xor    eax,0x0
  40a339:	mov    DWORD PTR [ebp-0xc],eax
  40a33c:	push   ebx
  40a33d:	movzx  eax,BYTE PTR ds:0x413d30
  40a344:	adc    DWORD PTR ds:0x414018,eax
  40a34a:	xor    ebx,ebx
  40a34c:	xor    edi,0x8a29a125
  40a352:	mov    eax,ds:0x413c12
  40a357:	and    DWORD PTR ds:0x413cdc,eax
  40a35d:	mov    eax,ecx
  40a35f:	add    eax,0xfabdbeef
  40a364:	mov    DWORD PTR ds:0x413c6c,0x7b3
  40a36e:	adc    ebx,0xffffffff
  40a371:	add    DWORD PTR ds:0x413c88,0x414018
  40a37b:	xor    eax,0x8a29a125
  40a380:	mov    DWORD PTR ds:0x413d18,0x6932
  40a38a:	xor    ebx,0x0
  40a38d:	mov    DWORD PTR ds:0x413cd8,0x53fd
  40a397:	cmp    eax,edi
  40a399:	mov    DWORD PTR ds:0x413c88,0x1215
  40a3a3:	jne    0x40a3c6
  40a3a9:	mov    DWORD PTR ds:0x413c16,0x2565
  40a3b3:	cmp    ebx,DWORD PTR [ebp-0xc]
  40a3b6:	je     0x40a46e
  40a3bc:	jmp    0x40a3c6
  40a3c1:	mov    esi,0x3272dc
  40a3c6:	and    DWORD PTR ds:0x413d30,0x0
  40a3d0:	xor    eax,eax
  40a3d2:	xor    eax,DWORD PTR ds:0x413d30
  40a3d8:	inc    eax
  40a3d9:	mov    ds:0x413d30,eax
  40a3de:	cmp    DWORD PTR ds:0x413d30,0x26
  40a3e5:	jne    0x40a3f9
  40a3eb:	push   0x413d20
  40a3f0:	push   DWORD PTR [ebp-0x10]
  40a3f3:	call   DWORD PTR ds:0x41675c
  40a3f9:	cmp    DWORD PTR ds:0x413d30,0x1f
  40a400:	jb     0x40a3d0
  40a406:	mov    eax,DWORD PTR [ebp-0x4]
  40a409:	mov    edi,DWORD PTR [ebp-0x8]
  40a40c:	xor    edi,edx
  40a40e:	add    edi,esi
  40a410:	mov    esi,DWORD PTR [ebp+0x8]
  40a413:	imul   edi,ecx
  40a416:	mov    ebx,DWORD PTR [ebp+0xc]
  40a419:	xor    eax,edx
  40a41b:	add    eax,ecx
  40a41d:	mov    al,BYTE PTR [ebx+eax*1+0x3272dc]
  40a424:	mov    BYTE PTR [edi+esi*1],al
  40a427:	mov    eax,DWORD PTR [ebp-0x8]
  40a42a:	mov    esi,DWORD PTR [ebp+0x10]
  40a42d:	xor    eax,edx
  40a42f:	xor    ebx,ebx
  40a431:	add    esi,0xfabdbeef
  40a437:	adc    ebx,0xffffffff
  40a43a:	lea    ecx,[ecx+eax*1+0x3272dc]
  40a441:	xor    edi,edi
  40a443:	xor    esi,0x8a29a125
  40a449:	xor    ebx,0x0
  40a44c:	mov    eax,ecx
  40a44e:	add    eax,0xfabdbeef
  40a453:	adc    edi,0xffffffff
  40a456:	xor    eax,0x8a29a125
  40a45b:	xor    edi,0x0
  40a45e:	cmp    eax,esi
  40a460:	jne    0x40a3c1
  40a466:	cmp    edi,ebx
  40a468:	jne    0x40a3c1
  40a46e:	mov    eax,0xf89c85b1
  40a473:	pop    ebx
  40a474:	pop    edi
  40a475:	pop    esi
  40a476:	leave  
  40a477:	ret    0xc
  40a47a:	push   ebp
  40a47b:	mov    ebp,esp
  40a47d:	sub    esp,0xa4
  40a483:	sbb    DWORD PTR ds:0x413cf4,0x6aac
  40a48d:	mov    ecx,DWORD PTR [ebp+0x8]
  40a490:	and    DWORD PTR ds:0x414008,0x0
  40a49a:	mov    eax,ds:0x414008
  40a49f:	inc    eax
  40a4a0:	mov    ds:0x414008,eax
  40a4a5:	cmp    DWORD PTR ds:0x414008,0x6
  40a4ac:	jne    0x40a4c5
  40a4b2:	push   DWORD PTR [ebp-0x18]
  40a4b5:	push   0x41401c
  40a4ba:	push   0x1f9d
  40a4bf:	call   DWORD PTR ds:0x416760
  40a4c5:	cmp    DWORD PTR ds:0x414008,0x5
  40a4cc:	jne    0x40a4dd
  40a4d2:	mov    eax,ds:0x414008
  40a4d7:	inc    eax
  40a4d8:	mov    ds:0x414008,eax
  40a4dd:	cmp    DWORD PTR ds:0x414008,0x1b
  40a4e4:	jb     0x40a49a
  40a4ea:	mov    DWORD PTR ds:0x41401c,0x17
  40a4f4:	cmp    DWORD PTR ds:0x41401c,0x0
  40a4fb:	je     0x40a54c
  40a501:	cmp    DWORD PTR ds:0x41401c,0x6
  40a508:	jne    0x40a524
  40a50e:	push   DWORD PTR [ebp-0x24]
  40a511:	push   0x3b56
  40a516:	push   DWORD PTR [ebp-0x1c]
  40a519:	push   0x73b3
  40a51e:	call   DWORD PTR ds:0x416764
  40a524:	cmp    DWORD PTR ds:0x41401c,0x7
  40a52b:	jne    0x40a53c
  40a531:	mov    eax,ds:0x41401c
  40a536:	dec    eax
  40a537:	mov    ds:0x41401c,eax
  40a53c:	mov    eax,ds:0x41401c
  40a541:	dec    eax
  40a542:	mov    ds:0x41401c,eax
  40a547:	jmp    0x40a4f4
  40a54c:	mov    eax,0x8a87
  40a551:	xor    ax,WORD PTR [ecx+0x20]
  40a555:	not    DWORD PTR ds:0x413cf4
  40a55b:	mov    ecx,0x3b4a
  40a560:	adc    DWORD PTR ds:0x413c0a,0x414008
  40a56a:	add    ax,cx
  40a56d:	movzx  eax,ax
  40a570:	mov    DWORD PTR [ebp-0x18],eax
  40a573:	mov    ecx,DWORD PTR ds:0x413c78
  40a579:	sbb    DWORD PTR ds:0x413d28,ecx
  40a57f:	mov    BYTE PTR [ebp-0x1],0x7d
  40a583:	add    ecx,DWORD PTR ds:0x414000
  40a589:	lea    eax,[ebp-0x1]
  40a58c:	xor    DWORD PTR ds:0x413c78,ecx
  40a592:	mov    DWORD PTR [ebp-0x10],eax
  40a595:	add    DWORD PTR ds:0x413d1c,0x4151
  40a59f:	mov    al,BYTE PTR [ebp-0x1]
  40a5a2:	mov    ecx,DWORD PTR [ebp-0x10]
  40a5a5:	or     DWORD PTR ds:0x413d20,0x66e0
  40a5af:	xor    al,0x70
  40a5b1:	and    DWORD PTR ds:0x414000,0x34d9
  40a5bb:	sub    al,0xc
  40a5bd:	and    DWORD PTR ds:0x413d1c,0x413c70
  40a5c7:	mov    BYTE PTR [ecx],al
  40a5c9:	mov    DWORD PTR [ebp-0x14],0xf89c85b0
  40a5d0:	or     DWORD PTR ds:0x413ce0,ecx
  40a5d6:	push   ebx
  40a5d7:	jmp    0x40c95f
  40a5dc:	and    ch,BYTE PTR ds:0xb393b193
  40a5e2:	add    cl,BYTE PTR [edi-0x6bf6fe89]
  40a5e8:	sbb    DWORD PTR [ecx],ebx
  40a5ea:	inc    edx
  40a5eb:	loope  0x40a614
  40a5ed:	push   es
  40a5ee:	jl     0x40a66c
  40a5f0:	pop    es
  40a5f1:	pop    edi
  40a5f2:	jl     0x40a670
  40a5f4:	imul   edi,DWORD PTR [esi+0x54],0xba7b754c
  40a5fb:	fisttp QWORD PTR [esi+0x1e8c7f8c]
  40a601:	repz cli 
  40a603:	sbb    BYTE PTR [eax-0x74],cl
  40a606:	add    ecx,ebp
  40a608:	les    esi,FWORD PTR [ebp-0x25]
  40a60b:	mov    ebx,0xe6105508
  40a610:	pop    ebp
  40a611:	int3   
  40a612:	jp     0x40a61a
  40a614:	aas    
  40a615:	lods   al,BYTE PTR ds:[esi]
  40a616:	(bad)  
  40a617:	scas   al,BYTE PTR es:[edi]
  40a618:	dec    edx
  40a619:	loopne 0x40a65d
  40a61b:	test   eax,0xea276cd0
  40a620:	pop    ebp
  40a621:	and    edx,DWORD PTR [ecx+0x31821eb6]
  40a627:	jecxz  0x40a5dd
  40a629:	fst    QWORD PTR [eax-0x51]
  40a62c:	xchg   BYTE PTR [ebp-0x13],al
  40a62f:	lods   eax,DWORD PTR ds:[esi]
  40a630:	jecxz  0x40a65c
  40a632:	and    al,0xfc
  40a634:	or     DWORD PTR [esi-0x2e1def11],esi
  40a63a:	loopne 0x40a5dc
  40a63c:	add    al,0xda
  40a63e:	mov    ecx,0x69882076
  40a643:	loope  0x40a63b
  40a645:	mov    al,0xdc
  40a647:	lock stc 
  40a649:	push   es
  40a64a:	test   eax,0xc8a4d799
  40a64f:	bound  eax,QWORD PTR [eax+0x5976cbf0]
  40a655:	pop    esi
  40a656:	adc    edi,DWORD PTR [eax-0x20fc1e01]
  40a65c:	cmc    
  40a65d:	adc    DWORD PTR [esi+0x42807d3e],ecx
  40a663:	neg    DWORD PTR [ecx+0x5]
  40a666:	push   ecx
  40a667:	adc    ch,BYTE PTR [ebx-0x4386bddd]
  40a66d:	les    ecx,FWORD PTR ds:0x5aef0fa3
  40a673:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a674:	xchg   edx,eax
  40a675:	out    dx,ax
  40a677:	loope  0x40a68e
  40a679:	call   DWORD PTR [ebx+0x2e83c57e]
  40a67f:	inc    edx
  40a680:	(bad)  
  40a681:	outs   dx,BYTE PTR ds:[esi]
  40a682:	xor    BYTE PTR [esi+0x38],bl
  40a685:	jmp    0x2149aa1c
  40a68a:	retf   
  40a68b:	fstp   QWORD PTR [ebp+ecx*2+0x60a62332]
  40a692:	xor    eax,edi
  40a694:	(bad)  
  40a695:	jmp    DWORD PTR [eax+esi*4]
  40a698:	xor    eax,0xa075268a
  40a69d:	mov    eax,ds:0x3657a4a
  40a6a2:	adc    ebx,DWORD PTR [esp+ebp*8]
  40a6a5:	loope  0x40a6da
  40a6a7:	xchg   ebp,eax
  40a6a8:	iret   
  40a6a9:	adc    ah,BYTE PTR [eax+0x22]
  40a6ac:	and    DWORD PTR [eax+0x5a],eax
  40a6af:	dec    edi
  40a6b0:	repnz cmp al,0x74
  40a6b3:	sbb    eax,0x6f1ce20d
  40a6b8:	mov    ch,0x56
  40a6ba:	or     eax,0x940bd2be
  40a6bf:	cmp    eax,0xa16ea137
  40a6c4:	and    DWORD PTR [edi],edi
  40a6c6:	xchg   ecx,eax
  40a6c7:	cmp    dh,al
  40a6c9:	sub    DWORD PTR [ebp+0x1],esi
  40a6cc:	stos   DWORD PTR es:[edi],eax
  40a6cd:	mov    eax,0x16a22304
  40a6d2:	add    al,al
  40a6d4:	jno    0x40a66a
  40a6d6:	fdiv   DWORD PTR [edx+0x2a278b16]
  40a6dc:	les    ecx,FWORD PTR [edi+0x6a]
  40a6df:	mov    esi,0x276d3855
  40a6e4:	out    0xe4,al
  40a6e6:	inc    ecx
  40a6e7:	jbe    0x40a729
  40a6e9:	aad    0x9f
  40a6eb:	ins    BYTE PTR es:[edi],dx
  40a6ec:	jge    0x40a69e
  40a6ee:	inc    edi
  40a6ef:	add    BYTE PTR [ebp-0x22],ch
  40a6f2:	fild   DWORD PTR [ebx-0x6bb4ec81]
  40a6f8:	inc    ebp
  40a6f9:	enter  0xd584,0xa3
  40a6fd:	test   ebx,0xce482dc8
  40a703:	pop    esi
  40a704:	adc    esp,DWORD PTR [esi]
  40a706:	push   cs
  40a707:	test   eax,0xecf5ede2
  40a70c:	jns    0x40a725
  40a70e:	and    ah,al
  40a710:	retf   
  40a711:	rep lods al,BYTE PTR ds:[esi]
  40a713:	mov    cl,0xfc
  40a715:	test   eax,0xdc37a718
  40a71a:	cmp    eax,0x7606aa5e
  40a71f:	clc    
  40a720:	or     esi,DWORD PTR [edx]
  40a722:	or     al,0x33
  40a724:	mov    eax,0x22acbe30
  40a729:	leave  
  40a72a:	cwde   
  40a72b:	sbb    dl,BYTE PTR [ecx+0x30]
  40a72e:	mov    ds:0xe7ab3b1e,eax
  40a733:	add    eax,0xe5e08267
  40a738:	test   eax,0x3452c592
  40a73d:	jbe    0x40a77a
  40a73f:	leave  
  40a740:	dec    ebx
  40a741:	cmp    esi,eax
  40a743:	sub    DWORD PTR [eax-0x73],eax
  40a746:	mov    ebx,0xe407daf1
  40a74b:	frstor [edi]
  40a74d:	rcr    edx,cl
  40a74f:	adc    bh,ch
  40a751:	xor    eax,DWORD PTR [edx+0x3b144147]
  40a757:	dec    ebp
  40a758:	imul   eax,DWORD PTR [esp+ecx*4+0x73a09fa0],0x58
  40a760:	adc    ebp,0x65dc30b3
  40a766:	inc    eax
  40a767:	jo     0x40a770
  40a769:	jnp    0x40a730
  40a76b:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40a76d:	outs   dx,DWORD PTR ds:[esi]
  40a76e:	sbb    DWORD PTR [esi],eax
  40a770:	inc    esp
  40a771:	fcmovnbe st,st(4)
  40a773:	xchg   esp,eax
  40a774:	xchg   esp,eax
  40a775:	jecxz  0x40a782
  40a777:	pop    es
  40a778:	popf   
  40a779:	dec    esi
  40a77a:	int3   
  40a77b:	fld    QWORD PTR [ecx+0x2a]
  40a77e:	pop    ss
  40a77f:	sbb    cl,bl
  40a781:	cmc    
  40a782:	dec    ecx
  40a783:	lahf   
  40a784:	ror    DWORD PTR [edi-0x79a77141],cl
  40a78a:	add    al,0xa8
  40a78c:	fs and al,0x85
  40a78f:	add    edi,ebx
  40a791:	cld    
  40a792:	daa    
  40a793:	aaa    
  40a794:	mov    eax,ds:0x3594f253
  40a799:	mov    eax,ds:0xf766d659
  40a79e:	inc    ecx
  40a79f:	mov    cl,0xa2
  40a7a1:	jo     0x40a805
  40a7a3:	gs jo  0x40a811
  40a7a6:	mov    ebp,edi
  40a7a8:	push   esp
  40a7a9:	mov    eax,ds:0x1765e241
  40a7ae:	dec    eax
  40a7af:	dec    esp
  40a7b0:	pusha  
  40a7b1:	loope  0x40a823
  40a7b3:	ret    
  40a7b4:	xor    BYTE PTR [esi-0x3f],dl
  40a7b7:	(bad)  
  40a7b8:	int    0x6f
  40a7ba:	add    DWORD PTR [edi+0x10],ecx
  40a7bd:	int    0xc2
  40a7bf:	fwait
  40a7c0:	test   BYTE PTR [ebp-0x21],0x24
  40a7c4:	mov    dh,0x53
  40a7c6:	sub    al,BYTE PTR [eax]
  40a7c8:	xlat   BYTE PTR ds:[ebx]
  40a7c9:	sub    dl,0xfc
  40a7cc:	ror    esi,0x7b
  40a7cf:	mov    ds:0xb77cf5c5,al
  40a7d4:	retf   
  40a7d5:	push   ds
  40a7d6:	fwait
  40a7d7:	js     0x40a7f4
  40a7d9:	ss jae 0x40a785
  40a7dc:	popf   
  40a7dd:	inc    edx
  40a7de:	inc    ebx
  40a7df:	mov    bh,0x9f
  40a7e1:	mov    cl,0x90
  40a7e3:	jno    0x40a7d0
  40a7e5:	pop    ebx
  40a7e6:	inc    eax
  40a7e7:	mov    bh,0x7f
  40a7e9:	pop    esp
  40a7ea:	enter  0x8219,0x86
  40a7ee:	and    BYTE PTR [eax+0x29],0x3f
  40a7f2:	dec    esp
  40a7f3:	or     BYTE PTR [esi-0x441cb85],cl
  40a7f9:	mov    esi,0x8da27251
  40a7fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a7ff:	inc    eax
  40a800:	xor    bl,BYTE PTR [eax]
  40a802:	pusha  
  40a803:	add    eax,0x89120798
  40a808:	arpl   WORD PTR [edi+0x6e],si
  40a80b:	ins    DWORD PTR es:[edi],dx
  40a80c:	jbe    0x40a7fb
  40a80e:	or     esi,DWORD PTR [ebp+0x0]
  40a811:	push   edi
  40a812:	or     esi,edi
  40a814:	fst    DWORD PTR [ebp+edx*1-0x78]
  40a818:	inc    ebp
  40a819:	rcr    DWORD PTR [esi+0x7bb4ac7b],cl
  40a81f:	gs pop ds
  40a821:	or     dh,BYTE PTR [edi-0x463ec844]
  40a827:	out    0x7c,al
  40a829:	lds    ebx,FWORD PTR [ecx-0x6989e88e]
  40a82f:	icebp  
  40a830:	shr    BYTE PTR [ecx-0x631af0e3],0x5a
  40a837:	inc    edx
  40a838:	mov    ecx,0x920aa9d0
  40a83d:	xchg   DWORD PTR [edi+0x53],ebx
  40a840:	in     al,dx
  40a841:	das    
  40a842:	test   BYTE PTR [ebx-0x3711dd43],0xcd
  40a849:	sub    eax,0xc5665660
  40a84f:	in     al,dx
  40a850:	les    ecx,FWORD PTR [eax+0x66]
  40a853:	loop   0x40a8a9
  40a855:	loopne 0x40a863
  40a857:	xor    BYTE PTR [eax],dl
  40a859:	test   DWORD PTR [edx],0xdb9e2b76
  40a85f:	out    dx,eax
  40a860:	data16 icebp 
  40a862:	xchg   edi,eax
  40a863:	(bad)  
  40a864:	(bad)  
  40a865:	fbld   TBYTE PTR [edx]
  40a867:	and    esi,DWORD PTR [ebx+esi*2]
  40a86a:	arpl   WORD PTR [esi-0x24504af8],ax
  40a870:	mov    dl,0x11
  40a872:	(bad)  
  40a873:	rcr    DWORD PTR [ecx-0x39d13a08],cl
  40a879:	sub    bl,ch
  40a87b:	dec    edx
  40a87c:	in     eax,dx
  40a87d:	push   0xffffffe6
  40a87f:	jge    0x40a892
  40a881:	into   
  40a882:	repnz adc DWORD PTR [edi-0x3c],ebx
  40a886:	pop    edi
  40a887:	lahf   
  40a888:	mov    esi,0x4d72a28a
  40a88d:	and    edi,esi
  40a88f:	sahf   
  40a890:	inc    ebp
  40a891:	daa    
  40a892:	pop    ecx
  40a893:	ds pop eax
  40a895:	test   eax,0x4b1b3f86
  40a89b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a89c:	mov    ah,0x8f
  40a89e:	mov    ds:0x4940d621,eax
  40a8a3:	js     0x40a841
  40a8a5:	sbb    BYTE PTR [eax-0x70],bh
  40a8a8:	(bad)  
  40a8a9:	cmp    al,0x66
  40a8ab:	xchg   al,bl
  40a8ad:	shr    edx,0x9a
  40a8b0:	in     al,0xe1
  40a8b2:	int3   
  40a8b3:	das    
  40a8b4:	inc    edi
  40a8b5:	ret    0xa158
  40a8b8:	or     dh,bh
  40a8ba:	push   0xffffffbd
  40a8bc:	inc    edx
  40a8bd:	scas   eax,DWORD PTR es:[edi]
  40a8be:	sub    eax,0x4afba976
  40a8c3:	es loop 0x40a8d1
  40a8c6:	outs   dx,DWORD PTR ds:[esi]
  40a8c7:	mov    dl,0x6c
  40a8c9:	sbb    esi,DWORD PTR [edx+0x163f6bb3]
  40a8cf:	mov    DWORD PTR [ebp-0x5d],0xbfe3969e
  40a8d6:	and    DWORD PTR [ebx+ecx*1+0x69],ebx
  40a8da:	push   ecx
  40a8db:	push   ebx
  40a8dc:	fsub   DWORD PTR [edi]
  40a8de:	fnstenv [ecx+eiz*8]
  40a8e1:	lds    edx,FWORD PTR [esi+0x4f68ea08]
  40a8e7:	mul    DWORD PTR [ebx-0x53]
  40a8ea:	pop    eax
  40a8eb:	ins    BYTE PTR es:[edi],dx
  40a8ec:	cwde   
  40a8ed:	pop    eax
  40a8ee:	ret    0xd320
  40a8f1:	sahf   
  40a8f2:	(bad)  
  40a8f3:	out    dx,al
  40a8f4:	fst    DWORD PTR [edx]
  40a8f6:	imul   esp,DWORD PTR [esi],0xcd176289
  40a8fc:	lods   eax,DWORD PTR ds:[esi]
  40a8fd:	xor    DWORD PTR [eax+esi*2-0x22],ebx
  40a901:	pusha  
  40a902:	push   0x73081b5
  40a907:	push   ebp
  40a908:	dec    esp
  40a909:	fiadd  DWORD PTR [ebp+0x1b]
  40a90c:	mov    DWORD PTR [esi-0x30737be9],ebx
  40a912:	pop    ebx
  40a913:	xor    ebp,DWORD PTR [edi+esi*8+0x5f]
  40a917:	cmp    bh,BYTE PTR [eax]
  40a919:	cmp    BYTE PTR [esi],0x8d
  40a91c:	pop    ebp
  40a91d:	arpl   WORD PTR [ecx+0x3113f7b4],ax
  40a923:	xor    BYTE PTR ds:0xbe16225f,0x9
  40a92a:	xor    eax,0x94f1df50
  40a92f:	out    dx,eax
  40a930:	in     eax,dx
  40a931:	mov    ecx,0xf9809db5
  40a936:	fwait
  40a937:	aaa    
  40a938:	xor    eax,DWORD PTR [ebx]
  40a93a:	cmp    eax,DWORD PTR [eax+0x44]
  40a93d:	pop    edi
  40a93e:	lods   al,BYTE PTR ds:[esi]
  40a93f:	bound  edi,QWORD PTR [ecx+edi*8-0x6455befa]
  40a946:	sub    ch,BYTE PTR [esi+0x4b]
  40a949:	cmp    bh,bl
  40a94b:	push   esi
  40a94c:	nop
  40a94d:	or     eax,0xa32cf837
  40a952:	ja     0x40a97f
  40a954:	std    
  40a955:	sub    eax,0x701e531f
  40a95a:	outs   dx,DWORD PTR gs:[esi]
  40a95c:	rcl    DWORD PTR [edx-0x5a],0x91
  40a960:	je     0x40a8e6
  40a962:	mov    ds:0x7737bf08,al
  40a967:	sahf   
  40a968:	adc    eax,0x2fbcae53
  40a96d:	test   DWORD PTR [ecx+0x13],ebp
  40a970:	cmp    DWORD PTR [esp+ebp*2-0x22],eax
  40a974:	(bad)  
  40a975:	lahf   
  40a976:	lock rcr ebx,0x63
  40a97a:	pushf  
  40a97b:	push   edx
  40a97c:	(bad)  
  40a97d:	(bad)  
  40a97e:	jp     0x40a96c
  40a980:	mov    ah,0xb0
  40a982:	xor    ah,BYTE PTR [ecx]
  40a984:	lds    esi,FWORD PTR [edx-0x7e]
  40a987:	dec    ecx
  40a988:	lock push 0xffffffde
  40a98b:	std    
  40a98c:	cli    
  40a98d:	(bad)
  40a990:	jp     0x40a9af
  40a992:	push   eax
  40a993:	test   al,0x7d
  40a995:	iret   
  40a996:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a997:	push   edx
  40a998:	sub    al,0xc2
  40a99a:	imul   ebx,DWORD PTR [eax-0x42569b6d],0xb209ba6e
  40a9a4:	or     cl,BYTE PTR [esi-0x3cafe35]
  40a9aa:	jg     0x40a946
  40a9ac:	call   0x9085:0xac44368
  40a9b3:	cmp    eax,0x30272137
  40a9b8:	int    0xfa
  40a9ba:	in     eax,0xd7
  40a9bc:	mov    dl,0xe8
  40a9be:	sbb    DWORD PTR [esi+eax*1],0x47fe86b1
  40a9c5:	inc    ecx
  40a9c6:	xlat   BYTE PTR ds:[ebx]
  40a9c7:	aam    0x3e
  40a9c9:	add    BYTE PTR [ebx-0x1c],bl
  40a9cc:	leave  
  40a9cd:	xchg   ecx,eax
  40a9ce:	mov    eax,0x39e1282f
  40a9d3:	inc    eax
  40a9d4:	dec    edx
  40a9d5:	nop
  40a9d6:	lock scas al,BYTE PTR es:[edi]
  40a9d8:	ret    0x604b
  40a9db:	aaa    
  40a9dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a9dd:	neg    DWORD PTR [edi]
  40a9df:	dec    ebp
  40a9e0:	mov    esi,0x4e225eba
  40a9e5:	addr16 test eax,0x11a0152
  40a9eb:	jmp    0x54bfcffa
  40a9f0:	jae    0x40aa2f
  40a9f2:	scas   eax,DWORD PTR es:[edi]
  40a9f3:	ret    0xd070
  40a9f6:	pop    esp
  40a9f7:	fs inc ebp
  40a9f9:	test   al,0xfc
  40a9fb:	rcr    DWORD PTR [ebx],1
  40a9fd:	cmp    bh,BYTE PTR [esi]
  40a9ff:	(bad)  
  40aa01:	ja     0x40a9ec
  40aa03:	or     esi,eax
  40aa05:	fcmovbe st,st(0)
  40aa07:	scas   al,BYTE PTR es:[edi]
  40aa08:	sub    eax,0xa933420a
  40aa0d:	stos   BYTE PTR es:[edi],al
  40aa0e:	mov    bl,0xe5
  40aa10:	jecxz  0x40aa91
  40aa12:	mov    eax,edx
  40aa14:	lods   al,BYTE PTR ds:[esi]
  40aa15:	push   esp
  40aa16:	xchg   ecx,eax
  40aa17:	mov    ss,WORD PTR [ebx]
  40aa19:	cmp    bl,BYTE PTR [ecx-0xe]
  40aa1c:	popa   
  40aa1d:	test   DWORD PTR [eax+0x71a62b9f],esi
  40aa23:	and    al,0x48
  40aa25:	mov    WORD PTR [ebx-0x1d],cs
  40aa28:	mov    ebx,0xdd34fb1d
  40aa2d:	sub    al,0x7c
  40aa2f:	cmp    al,0x2c
  40aa31:	sbb    eax,0x44119b14
  40aa36:	or     ebp,DWORD PTR ds:0xb5322930
  40aa3c:	sbb    edi,DWORD PTR [edi-0x37]
  40aa3f:	movzx  ebp,BYTE PTR [edi+0x6b4ca911]
  40aa46:	push   es
  40aa47:	inc    ecx
  40aa48:	in     al,0x9
  40aa4a:	jp     0x40a9e2
  40aa4c:	pop    ss
  40aa4d:	and    DWORD PTR [esi],ecx
  40aa4f:	iret   
  40aa50:	lods   al,BYTE PTR ds:[esi]
  40aa51:	icebp  
  40aa52:	pop    ebp
  40aa53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa54:	call   0x9783:0x1fae
  40aa5a:	aam    0xdd
  40aa5c:	push   ebp
  40aa5d:	xor    BYTE PTR [edx+0x5c],ch
  40aa60:	mov    ch,0xcf
  40aa62:	sbb    eax,0xa0c24b73
  40aa67:	std    
  40aa68:	aad    0x5d
  40aa6a:	pop    esp
  40aa6b:	pop    es
  40aa6c:	leave  
  40aa6d:	push   edx
  40aa6e:	in     eax,0x9f
  40aa70:	aad    0x4c
  40aa72:	cmp    esp,0xffffffb4
  40aa75:	sub    DWORD PTR [eax+0x5f588435],ecx
  40aa7b:	bound  esi,QWORD PTR [esi-0x3c]
  40aa7e:	idiv   BYTE PTR [edi]
  40aa80:	dec    ebp
  40aa81:	pop    ebp
  40aa82:	inc    edi
  40aa83:	cmc    
  40aa84:	int3   
  40aa85:	repnz mov edi,0x92738e04
  40aa8b:	cmp    bh,al
  40aa8d:	pop    eax
  40aa8e:	push   ds
  40aa8f:	inc    ecx
  40aa90:	adc    dl,bl
  40aa92:	(bad)  
  40aa93:	adc    eax,0x3bfd21ff
  40aa98:	push   esi
  40aa99:	test   DWORD PTR [edx-0x1b0d7c13],ecx
  40aa9f:	or     eax,0x23ac6b6d
  40aaa4:	int3   
  40aaa5:	sbb    DWORD PTR [ecx+0x8],ecx
  40aaa8:	xchg   ebx,eax
  40aaa9:	add    edi,DWORD PTR [ecx+0x41]
  40aaac:	or     bl,BYTE PTR [ebp+0x27585c17]
  40aab2:	jl     0x40aad0
  40aab4:	or     al,0xd0
  40aab6:	aas    
  40aab7:	jmp    0xb5f2:0x7b728824
  40aabe:	retf   
  40aabf:	xchg   edi,eax
  40aac0:	rol    DWORD PTR [ebp+0x44],cl
  40aac3:	lock aas 
  40aac5:	add    al,0x69
  40aac7:	dec    eax
  40aac8:	inc    edi
  40aac9:	jle    0x40aa5d
  40aacb:	xlat   BYTE PTR ds:[ebx]
  40aacc:	dec    ebx
  40aacd:	xlat   BYTE PTR ds:[ebx]
  40aace:	sub    eax,0x935ce90d
  40aad3:	cwde   
  40aad4:	pop    esp
  40aad5:	call   0x5dcf:0x16f7a304
  40aadc:	imul   DWORD PTR [ecx+0x2dcaca94]
  40aae2:	pop    eax
  40aae3:	xchg   esi,eax
  40aae4:	dec    ebp
  40aae5:	adc    ch,BYTE PTR [edx-0x7fb08d12]
  40aaeb:	loop   0x40aaef
  40aaed:	mov    WORD PTR [edx-0x1a2bf1d6],?
  40aaf3:	fdiv   QWORD PTR [edx+edi*4+0xd796869]
  40aafa:	daa    
  40aafb:	dec    eax
  40aafc:	jmp    0x5c9a0168
  40ab01:	mov    ds:0xe8ff8da3,al
  40ab06:	mov    bh,bh
  40ab08:	add    al,BYTE PTR [edx]
  40ab0a:	push   ebx
  40ab0b:	arpl   WORD PTR ds:0xf1e5ee0,cx
  40ab11:	push   esi
  40ab12:	aam    0xfd
  40ab14:	es ss clc 
  40ab17:	pusha  
  40ab18:	(bad)  
  40ab19:	nop
  40ab1a:	and    eax,0xdf438f44
  40ab1f:	pushf  
  40ab20:	scas   eax,DWORD PTR es:[edi]
  40ab21:	(bad)  
  40ab22:	fild   WORD PTR [esi+0x59]
  40ab25:	test   DWORD PTR [ebp-0x2a],ecx
  40ab28:	lods   al,BYTE PTR ds:[esi]
  40ab29:	xor    eax,0x8a247fa9
  40ab2e:	ins    DWORD PTR es:[edi],dx
  40ab2f:	jne    0x40ab8e
  40ab31:	icebp  
  40ab32:	dec    edi
  40ab33:	retf   
  40ab34:	lfs    esi,FWORD PTR [ebx]
  40ab37:	add    ah,BYTE PTR [edi+0x55]
  40ab3a:	mov    al,0x43
  40ab3c:	and    eax,0x2d9e45c7
  40ab41:	cli    
  40ab42:	sbb    eax,0x44f42114
  40ab47:	in     eax,0xbf
  40ab49:	test   eax,0xd12c98d9
  40ab4e:	scas   eax,DWORD PTR es:[edi]
  40ab4f:	jns    0x40ab2c
  40ab51:	xor    eax,0x8f308836
  40ab56:	lahf   
  40ab57:	xor    edx,DWORD PTR [esi-0x48]
  40ab5a:	fst    DWORD PTR [esp+ebx*2]
  40ab5d:	xor    BYTE PTR [edx],dh
  40ab5f:	inc    edi
  40ab60:	int3   
  40ab61:	outs   dx,DWORD PTR ds:[esi]
  40ab62:	lds    edi,FWORD PTR [ecx+0x43]
  40ab65:	sub    cl,ch
  40ab67:	sti    
  40ab68:	aaa    
  40ab69:	icebp  
  40ab6a:	jne    0x40aaf0
  40ab6c:	cmp    edx,edx
  40ab6e:	jmp    0x40ab2f
  40ab70:	mov    edi,0x7a42678a
  40ab75:	sahf   
  40ab76:	jne    0x40ab93
  40ab78:	ret    0xa3b2
  40ab7b:	int3   
  40ab7c:	jnp    0x40abeb
  40ab7e:	call   0xeceb51f2
  40ab83:	mov    ds:0x3e219917,eax
  40ab88:	sbb    DWORD PTR [ecx-0x1d],ecx
  40ab8b:	jmp    0x3dfa:0xc2abaa20
  40ab92:	pop    ds
  40ab93:	xor    BYTE PTR [eax+0x7b],bl
  40ab96:	es leave 
  40ab98:	cs jecxz 0x40ab59
  40ab9b:	and    eax,0xa6d49f9e
  40aba0:	xor    DWORD PTR ds:0xfb75401a,edx
  40aba6:	rcr    DWORD PTR [esp+esi*1+0x5e],0x28
  40abab:	inc    ebp
  40abac:	and    esi,DWORD PTR [edx+0x70]
  40abaf:	sub    dh,BYTE PTR [edi]
  40abb1:	scas   eax,DWORD PTR es:[edi]
  40abb2:	add    BYTE PTR [eax-0x72],0xbc
  40abb6:	inc    edx
  40abb7:	inc    edx
  40abb8:	xchg   edi,eax
  40abb9:	sbb    bl,BYTE PTR [esi]
  40abbb:	jbe    0x40abb7
  40abbd:	push   es
  40abbe:	outs   dx,DWORD PTR ds:[esi]
  40abbf:	mov    ch,0xd0
  40abc1:	nop
  40abc2:	ficomp WORD PTR [esi-0x57]
  40abc5:	mov    edi,DWORD PTR [ebx+ebx*8]
  40abc8:	add    DWORD PTR [ebx+edx*4-0x334b1568],edi
  40abcf:	test   edx,ecx
  40abd1:	pop    esi
  40abd2:	fbld   TBYTE PTR [ecx+0x12]
  40abd5:	fidiv  DWORD PTR [eax]
  40abd7:	cdq    
  40abd8:	into   
  40abd9:	pop    ebp
  40abda:	cmp    al,0xfd
  40abdc:	mov    edi,0xb2f5c09
  40abe1:	push   edx
  40abe2:	sbb    al,0x22
  40abe4:	cmp    ah,BYTE PTR [ebx-0x47eb732c]
  40abea:	xor    bh,ah
  40abec:	aaa    
  40abed:	rol    DWORD PTR [edi-0xa08307c],cl
  40abf3:	mov    ds:0x3c93ad46,al
  40abf8:	and    WORD PTR [esi+0x11],di
  40abfc:	lea    eax,[edi-0x45f09fba]
  40ac02:	mov    BYTE PTR [edx+0x8],ah
  40ac05:	in     al,0xbc
  40ac07:	(bad)  
  40ac08:	mov    ebp,0xa57983fe
  40ac0d:	dec    ecx
  40ac0e:	test   eax,0xfff206ff
  40ac13:	sbb    ah,BYTE PTR [ebp+edi*8-0x52]
  40ac17:	cmp    bl,BYTE PTR [eax]
  40ac19:	stc    
  40ac1a:	mov    esp,ecx
  40ac1c:	daa    
  40ac1d:	mov    dh,0x32
  40ac1f:	test   bl,bh
  40ac21:	les    edi,FWORD PTR [ebx+0x417caa4c]
  40ac27:	scas   al,BYTE PTR es:[edi]
  40ac28:	rcr    ebx,1
  40ac2a:	ror    BYTE PTR [ecx],1
  40ac2c:	scas   eax,DWORD PTR es:[edi]
  40ac2d:	xor    esp,eax
  40ac2f:	push   ss
  40ac30:	sti    
  40ac31:	adc    ebp,esi
  40ac33:	rol    ah,1
  40ac35:	pop    es
  40ac36:	sbb    eax,edx
  40ac38:	lahf   
  40ac39:	cmp    cl,ch
  40ac3b:	cs fs sbb eax,0x445ad656
  40ac42:	aas    
  40ac43:	jge    0x40abe7
  40ac45:	or     dl,dh
  40ac47:	pop    eax
  40ac48:	add    dh,BYTE PTR [eax]
  40ac4a:	out    0x4a,al
  40ac4c:	sub    BYTE PTR [edi+0x240839eb],0x21
  40ac53:	xor    ecx,DWORD PTR [esi+ecx*2]
  40ac56:	out    dx,al
  40ac57:	in     al,dx
  40ac58:	push   es
  40ac59:	mov    cl,0x80
  40ac5b:	test   bh,bh
  40ac5d:	and    edi,DWORD PTR [edi+0x7c7ddb42]
  40ac63:	loop   0x40ac2c
  40ac65:	jns    0x40acb1
  40ac67:	add    eax,0x6ee6d6f2
  40ac6c:	xchg   esi,eax
  40ac6d:	push   es
  40ac6e:	inc    ecx
  40ac6f:	(bad)  
  40ac70:	pop    esi
  40ac71:	clc    
  40ac72:	sbb    al,0x9b
  40ac74:	fwait
  40ac75:	loope  0x40ac62
  40ac77:	inc    esi
  40ac78:	test   DWORD PTR [ebx+0x56],ebx
  40ac7b:	push   0xffffffa7
  40ac7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac7e:	sub    dh,bh
  40ac80:	adc    edx,DWORD PTR [ebp+0x14]
  40ac83:	and    al,al
  40ac85:	test   al,0xc8
  40ac87:	push   0x5189be43
  40ac8c:	jns    0x40ac83
  40ac8e:	inc    esp
  40ac8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac90:	mov    ds:0xcff37f7f,al
  40ac95:	or     al,0xac
  40ac97:	retf   0xefa9
  40ac9a:	pop    ebx
  40ac9b:	inc    ecx
  40ac9c:	scas   eax,DWORD PTR es:[edi]
  40ac9d:	mov    BYTE PTR [ebp+0x54986bdf],ch
  40aca3:	xchg   ecx,eax
  40aca4:	jb     0x40acd6
  40aca6:	xor    DWORD PTR [esp+edx*4-0x30d1cb79],0x8f550d72
  40acb1:	mov    al,0x8
  40acb3:	test   DWORD PTR [eax],0xd971c2fe
  40acb9:	daa    
  40acba:	or     al,0xb9
  40acbc:	mov    al,0xf9
  40acbe:	or     al,0x5b
  40acc0:	and    ebx,DWORD PTR [ebx]
  40acc2:	or     bl,dh
  40acc4:	xchg   BYTE PTR [ebp-0x1a],dl
  40acc7:	lahf   
  40acc8:	cli    
  40acc9:	adc    BYTE PTR [esi+0x17],ch
  40accc:	pop    edi
  40accd:	inc    eax
  40acce:	jg     0x40ace3
  40acd0:	xchg   ecx,eax
  40acd1:	and    DWORD PTR [ebx-0x4914aed5],0xf6221642
  40acdb:	out    0x42,eax
  40acdd:	and    eax,0x3d9a567d
  40ace2:	scas   al,BYTE PTR es:[edi]
  40ace3:	xchg   DWORD PTR [edi+0x6e8f615],edx
  40ace9:	xchg   ecx,eax
  40acea:	das    
  40aceb:	mov    WORD PTR [esi-0x3a],cs
  40acee:	retf   
  40acef:	pop    ebp
  40acf0:	sbb    BYTE PTR [ecx-0x58],ah
  40acf3:	or     bh,BYTE PTR [esi-0x5b]
  40acf6:	sub    al,0x88
  40acf8:	pop    ss
  40acf9:	push   ebx
  40acfa:	das    
  40acfb:	pop    ebx
  40acfc:	mov    esp,0xda13e975
  40ad01:	repz lock push ds
  40ad04:	adc    ch,BYTE PTR [ebx-0x61]
  40ad07:	aaa    
  40ad08:	mov    eax,0xb840b6c6
  40ad0d:	fadd   st(3),st
  40ad0f:	fcmovnu st,st(1)
  40ad11:	ror    DWORD PTR [edi],1
  40ad13:	fidiv  DWORD PTR [eax-0x17]
  40ad16:	jb     0x40ad84
  40ad18:	mov    ecx,?
  40ad1a:	inc    ebp
  40ad1b:	test   BYTE PTR [ecx-0x52],ch
  40ad1e:	xor    ebx,DWORD PTR [ebx+0x66d59732]
  40ad24:	ins    DWORD PTR es:[edi],dx
  40ad25:	mov    ch,0xf
  40ad27:	imul   eax,esi,0x7ffc614d
  40ad2d:	dec    ebx
  40ad2e:	aas    
  40ad2f:	mov    ?,WORD PTR [eax+0x7bb99033]
  40ad35:	mov    dl,BYTE PTR [eax+0x2d]
  40ad38:	jno    0x40acf0
  40ad3a:	sub    DWORD PTR [edi+0x55],0xffffffe1
  40ad3e:	push   ss
  40ad3f:	stos   BYTE PTR es:[edi],al
  40ad40:	and    DWORD PTR [edi+0x71],esi
  40ad43:	add    dh,BYTE PTR [eax]
  40ad45:	push   cs
  40ad46:	adc    al,0x9
  40ad48:	aas    
  40ad49:	sete   cl
  40ad4c:	(bad)  
  40ad4d:	fisttp WORD PTR [eax+0x5d03509f]
  40ad53:	xor    al,0x39
  40ad55:	sbb    al,0x5c
  40ad57:	or     al,0x29
  40ad59:	and    DWORD PTR [eax+0x78c74996],ebx
  40ad5f:	popa   
  40ad60:	pushf  
  40ad61:	js     0x40ade1
  40ad63:	in     eax,dx
  40ad64:	enter  0xa6b3,0x18
  40ad68:	adc    DWORD PTR [esp+esi*8-0x6226d696],eax
  40ad6f:	cmp    al,0x1e
  40ad71:	cmp    al,0xa2
  40ad73:	bound  ebp,QWORD PTR [edx]
  40ad75:	mov    bh,0x15
  40ad77:	mov    ch,0x19
  40ad79:	pop    edi
  40ad7a:	inc    eax
  40ad7b:	(bad)  
  40ad7c:	ja     0x40ad6b
  40ad7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad7f:	inc    eax
  40ad80:	jecxz  0x40ad51
  40ad82:	(bad)  
  40ad83:	push   es
  40ad84:	stos   BYTE PTR es:[edi],al
  40ad85:	adc    bl,BYTE PTR [ebp-0x47]
  40ad88:	push   ebx
  40ad89:	adc    ch,bl
  40ad8b:	repnz (bad) 
  40ad8d:	in     eax,0x4
  40ad8f:	leave  
  40ad90:	inc    eax
  40ad91:	push   es
  40ad92:	stc    
  40ad93:	(bad)  
  40ad94:	sub    DWORD PTR [edi],0xb2e5240
  40ad9a:	loope  0x40ad9b
  40ad9c:	adc    DWORD PTR es:[esi-0x16],esi
  40ada0:	xor    BYTE PTR [ebp-0x4971f66f],dh
  40ada6:	(bad)  
  40ada7:	pushf  
  40ada8:	lods   al,BYTE PTR ds:[esi]
  40ada9:	ss jmp 0x65224bd9
  40adaf:	dec    esp
  40adb0:	int3   
  40adb1:	(bad)  
  40adb2:	mov    esi,0xd8dbf317
  40adb7:	(bad)  [edi+0x29]
  40adba:	cmp    ebx,DWORD PTR [ebx+0x749021f4]
  40adc0:	and    eax,0x304ed52
  40adc5:	shr    al,cl
  40adc7:	cld    
  40adc8:	iret   
  40adc9:	loop   0x40ae46
  40adcb:	push   es
  40adcc:	xchg   BYTE PTR [esi-0x49],dh
  40adcf:	jns    0x40ae13
  40add1:	addr16 aas 
  40add3:	jbe    0x40ad58
  40add5:	out    0xa9,al
  40add7:	or     eax,0xb7a7a2b5
  40addc:	pop    ecx
  40addd:	addr16 push esp
  40addf:	retf   0xc0fa
  40ade2:	or     cl,BYTE PTR [eax]
  40ade4:	adc    dh,BYTE PTR [esi-0x729cce6]
  40adea:	fcmovnbe st,st(4)
  40adec:	ret    0x63b6
  40adef:	dec    esp
  40adf0:	enter  0x539e,0x8d
  40adf4:	clc    
  40adf5:	repz repnz xchg ebp,eax
  40adf8:	sbb    eax,0xba970cae
  40adfd:	mov    ebp,0x9fb68ceb
  40ae02:	jae    0x40ade1
  40ae04:	aaa    
  40ae05:	les    ebp,FWORD PTR [edx+0x4a]
  40ae08:	les    ebx,FWORD PTR [edx+edx*1+0x45]
  40ae0c:	or     ch,ah
  40ae0e:	jno    0x40ae80
  40ae10:	dec    ebx
  40ae11:	aas    
  40ae12:	mov    ds:0x741c692e,al
  40ae17:	sub    eax,0x7eaa568e
  40ae1c:	and    ebp,DWORD PTR [esi-0x284e3b39]
  40ae22:	sbb    ah,ah
  40ae24:	push   ebp
  40ae25:	pop    ebp
  40ae26:	nop
  40ae27:	mov    ah,0x7b
  40ae29:	dec    esp
  40ae2a:	bound  esp,QWORD PTR [ebx+0x531c8e1c]
  40ae30:	mov    edi,0x7ef2b3d
  40ae35:	test   eax,0x88194c17
  40ae3a:	inc    ecx
  40ae3b:	pop    esp
  40ae3c:	imul   eax,DWORD PTR [edi],0xcc715146
  40ae42:	loopne 0x40ae38
  40ae44:	jmp    0x40ae3d
  40ae46:	mov    ebx,0x92ed2eed
  40ae4b:	mov    eax,0x4e6361a5
  40ae50:	add    eax,0xe7385c5b
  40ae55:	clc    
  40ae56:	xor    al,0xa2
  40ae58:	or     DWORD PTR [eax],ebp
  40ae5a:	push   ecx
  40ae5b:	xchg   ebp,eax
  40ae5c:	emms   
  40ae5e:	not    BYTE PTR ds:0xdbeca75a
  40ae64:	das    
  40ae65:	jp     0x40aeca
  40ae67:	fld    TBYTE PTR [edx+edi*4-0x12]
  40ae6b:	push   esi
  40ae6c:	inc    edx
  40ae6d:	mov    edx,0xfe14fe38
  40ae72:	neg    DWORD PTR [esi+0x481c38f]
  40ae78:	imul   esi,DWORD PTR [esi],0x937509d8
  40ae7e:	in     al,0x80
  40ae80:	push   es
  40ae81:	mov    bl,0xe
  40ae83:	xor    edx,DWORD PTR [edx]
  40ae85:	adc    edi,ebp
  40ae87:	repz dec edx
  40ae89:	cdq    
  40ae8a:	adc    bl,BYTE PTR [ecx+0x4efbde5a]
  40ae90:	adc    al,0x86
  40ae92:	sbb    BYTE PTR [edi],bh
  40ae94:	push   ecx
  40ae95:	aam    0xe1
  40ae97:	and    ah,ah
  40ae99:	pop    eax
  40ae9a:	sub    DWORD PTR [ebp+0x37],edx
  40ae9d:	stos   BYTE PTR es:[edi],al
  40ae9e:	dec    esp
  40ae9f:	add    BYTE PTR [eax-0x51],dh
  40aea2:	in     eax,dx
  40aea3:	inc    ecx
  40aea4:	loope  0x40ae42
  40aea6:	adc    DWORD PTR [ecx+0x49],edi
  40aea9:	push   ebx
  40aeaa:	pop    esp
  40aeab:	lahf   
  40aeac:	mov    eax,0x716dfbe2
  40aeb1:	xchg   esp,eax
  40aeb2:	xchg   edx,eax
  40aeb3:	adc    cl,BYTE PTR [edx]
  40aeb5:	dec    eax
  40aeb6:	dec    esi
  40aeb7:	scas   al,BYTE PTR es:[edi]
  40aeb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aeb9:	push   ecx
  40aeba:	mov    ds:0x8e71584c,al
  40aebf:	popa   
  40aec0:	pop    ss
  40aec1:	xchg   esp,eax
  40aec2:	clc    
  40aec3:	retf   
  40aec4:	pop    eax
  40aec5:	jmp    0x84e02477
  40aeca:	mov    cs,WORD PTR [eax+0x68]
  40aecd:	jmp    0x40af06
  40aecf:	fldln2 
  40aed1:	cdq    
  40aed2:	jb     0x40aef2
  40aed4:	adc    al,BYTE PTR [ebp-0x77ac120a]
  40aeda:	cmp    DWORD PTR [ebx+0x5a],ecx
  40aedd:	add    BYTE PTR [edi+0x44],0xf4
  40aee1:	sti    
  40aee2:	rol    DWORD PTR [edi+edx*8],cl
  40aee5:	xlat   BYTE PTR ds:[ebx]
  40aee6:	add    eax,0xc8eca095
  40aeeb:	sbb    BYTE PTR [esi-0x77],bh
  40aeee:	rcr    bl,0x6e
  40aef1:	jge    0x40af51
  40aef3:	imul   esi,DWORD PTR [esi-0x318e0df0],0x4c975b36
  40aefd:	int    0xdc
  40aeff:	in     al,dx
  40af00:	jnp    0x40af6e
  40af02:	adc    cl,BYTE PTR [ecx+0x7ec281ba]
  40af08:	dec    ebx
  40af09:	mov    al,0x8b
  40af0b:	sbb    BYTE PTR [ebx],bl
  40af0d:	shl    BYTE PTR [ecx+0x20b15fa5],0xe1
  40af14:	mov    BYTE PTR [eax],al
  40af16:	call   0xe968b45c
  40af1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af1c:	dec    ebp
  40af1d:	jecxz  0x40af70
  40af1f:	xchg   ebp,eax
  40af20:	push   edi
  40af21:	mov    al,ds:0xd0235307
  40af26:	or     eax,DWORD PTR gs:[edx-0x6fab4a84]
  40af2d:	sub    dl,BYTE PTR ds:0x6e755eab
  40af33:	or     bl,dh
  40af35:	sbb    ebp,DWORD PTR [esi+ecx*1+0x43430dc6]
  40af3c:	mov    eax,0x694c73fc
  40af41:	int3   
  40af42:	leave  
  40af43:	sbb    BYTE PTR [ecx-0x5],al
  40af46:	mov    ds:0x9b04b79,eax
  40af4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af4c:	mov    bh,0xb9
  40af4e:	repnz shl BYTE PTR ds:[eax],1
  40af52:	or     edi,DWORD PTR [edx-0x733b3eac]
  40af58:	test   al,0x4b
  40af5a:	push   ecx
  40af5b:	in     eax,dx
  40af5c:	inc    al
  40af5e:	enter  0xb37b,0x86
  40af62:	outs   dx,BYTE PTR ds:[esi]
  40af63:	clc    
  40af64:	and    esp,DWORD PTR [ecx+0x23]
  40af67:	aaa    
  40af68:	pop    bx
  40af6a:	jae    0x40af3b
  40af6c:	mov    edx,0xef75db23
  40af71:	push   esp
  40af72:	xchg   ecx,eax
  40af73:	cs xchg cl,ah
  40af76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af77:	test   eax,0x8cb40d65
  40af7c:	call   0xdf8f:0x992c139e
  40af83:	add    ebx,DWORD PTR [eax]
  40af85:	enter  0x509b,0x52
  40af89:	cwde   
  40af8a:	aas    
  40af8b:	push   0x7a
  40af8d:	push   ss
  40af8e:	cwde   
  40af8f:	es xchg esi,eax
  40af91:	lock xchg edi,eax
  40af93:	cmp    BYTE PTR [ebp+0x628cd723],dh
  40af99:	imul   eax,DWORD PTR [esi-0xd],0xf8265f86
  40afa0:	adc    eax,0x610e7ff4
  40afa5:	out    0x17,al
  40afa7:	and    BYTE PTR [eax+esi*1+0x789d0330],ah
  40afae:	xlat   BYTE PTR ds:[ebx]
  40afaf:	out    0x67,al
  40afb1:	cdq    
  40afb2:	pusha  
  40afb3:	adc    DWORD PTR [eax-0x65],eax
  40afb6:	lods   eax,DWORD PTR ds:[esi]
  40afb7:	in     eax,0x24
  40afb9:	mov    ebp,DWORD PTR [ebx]
  40afbb:	loopne 0x40af66
  40afbd:	cmc    
  40afbe:	xchg   dl,cl
  40afc0:	dec    ebx
  40afc1:	aas    
  40afc2:	jns    0x40b036
  40afc4:	or     eax,0x9eccf4af
  40afc9:	dec    esi
  40afca:	and    BYTE PTR [esi+0x7e],al
  40afcd:	in     eax,dx
  40afce:	out    0xdb,eax
  40afd0:	adc    dl,BYTE PTR [edi]
  40afd2:	imul   esp,DWORD PTR [edi+eiz*1-0xd02e871],0xffffffa8
  40afda:	pop    ecx
  40afdb:	sbb    al,0x1b
  40afdd:	iret   
  40afde:	sub    al,0xc7
  40afe0:	cli    
  40afe1:	inc    esi
  40afe2:	mov    ebp,0xfedd0817
  40afe7:	lods   al,BYTE PTR ds:[esi]
  40afe8:	push   0xf5e6c5ff
  40afed:	inc    esp
  40afee:	mov    WORD PTR [ecx],ss
  40aff0:	sbb    esp,ebx
  40aff2:	arpl   WORD PTR [ebp+0x4e],si
  40aff5:	icebp  
  40aff6:	outs   dx,DWORD PTR ds:[esi]
  40aff7:	mov    al,ds:0x4c7b8f2d
  40affc:	sub    ah,bl
  40affe:	adc    eax,0x551f8956
  40b003:	lea    ebp,[eax]
  40b005:	outs   dx,BYTE PTR ds:[esi]
  40b006:	repz dec ecx
  40b008:	cs add eax,0xa6610143
  40b00e:	fcomp  QWORD PTR [edx+ecx*1-0x71a67229]
  40b015:	add    bl,BYTE PTR [ebx+0x67]
  40b018:	stos   DWORD PTR es:[edi],eax
  40b019:	jge    0x40b016
  40b01b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b01c:	inc    edi
  40b01d:	mov    esp,0xa52111d7
  40b022:	ins    DWORD PTR es:[edi],dx
  40b023:	sbb    esp,ebx
  40b025:	popa   
  40b026:	gs jne 0x40b042
  40b029:	cmp    esi,esi
  40b02b:	fwait
  40b02c:	add    eax,0x9077354f
  40b031:	mov    ch,0xd0
  40b033:	shr    BYTE PTR [ebp+0x7080cdf],1
  40b039:	(bad)  
  40b03a:	inc    ecx
  40b03b:	div    ch
  40b03d:	pushf  
  40b03e:	stos   DWORD PTR es:[edi],eax
  40b03f:	imul   ebx,DWORD PTR [ebp-0x27],0x961d9804
  40b046:	and    eax,DWORD PTR [ebx]
  40b048:	out    dx,eax
  40b049:	inc    eax
  40b04a:	icebp  
  40b04b:	cli    
  40b04c:	ins    BYTE PTR es:[edi],dx
  40b04d:	lods   eax,DWORD PTR ds:[esi]
  40b04e:	mov    edi,0xea463315
  40b053:	adc    BYTE PTR [esi+0x47],dh
  40b056:	mov    ebx,DWORD PTR [ecx-0x40af4ed1]
  40b05c:	add    ebp,esp
  40b05e:	cmc    
  40b05f:	add    ah,BYTE PTR [ecx]
  40b061:	mov    ebp,0xd2df5408
  40b066:	pusha  
  40b067:	hlt    
  40b068:	les    esi,FWORD PTR [eax-0x7e57e922]
  40b06e:	in     al,0xb1
  40b070:	(bad)  
  40b071:	xchg   esi,eax
  40b072:	push   ebx
  40b073:	imul   edx,DWORD PTR [edx+0xa51a49a],0x1b
  40b07a:	je     0x40b079
  40b07c:	xchg   edi,eax
  40b07d:	xor    bl,ah
  40b07f:	int3   
  40b080:	pop    es
  40b081:	jno    0x40b01a
  40b083:	(bad)  
  40b084:	pop    ebx
  40b085:	(bad)  
  40b086:	iret   
  40b087:	add    BYTE PTR [eax-0x50],0x24
  40b08b:	jo     0x40b069
  40b08d:	push   0xfffffffe
  40b08f:	pop    ss
  40b090:	or     bl,BYTE PTR [edx-0x48]
  40b093:	jg     0x40b016
  40b095:	out    dx,al
  40b096:	(bad)  
  40b097:	fild   WORD PTR [ecx-0x5ab5aaa9]
  40b09d:	shl    DWORD PTR [ebx-0x8],cl
  40b0a0:	pop    ecx
  40b0a1:	clc    
  40b0a2:	jo     0x40b0b1
  40b0a4:	mov    edx,ss
  40b0a6:	jge    0x40b0c2
  40b0a8:	sbb    eax,0xcb631a02
  40b0ad:	sub    BYTE PTR [ebx-0x13],dl
  40b0b0:	mov    ah,0x8a
  40b0b2:	shl    BYTE PTR [ecx+0x29],cl
  40b0b5:	pop    edi
  40b0b6:	mov    fs,WORD PTR [ecx-0x5f89a915]
  40b0bc:	scas   eax,DWORD PTR es:[edi]
  40b0bd:	add    al,0xd6
  40b0bf:	xchg   esp,eax
  40b0c0:	mov    al,0x5a
  40b0c2:	into   
  40b0c3:	jecxz  0x40b07b
  40b0c5:	mov    edi,0xa1fbf293
  40b0ca:	int    0x7b
  40b0cc:	lock movhps QWORD PTR [esi+0x7f],xmm1
  40b0d1:	jmp    0x42166e3a
  40b0d6:	stc    
  40b0d7:	sub    BYTE PTR [edi+eax*2],cl
  40b0da:	test   al,0xfd
  40b0dc:	clc    
  40b0dd:	je     0x40b0ce
  40b0df:	mov    edx,0xba517337
  40b0e4:	ins    DWORD PTR es:[edi],dx
  40b0e5:	mov    eax,0x456c0667
  40b0ea:	aas    
  40b0eb:	shr    DWORD PTR [ebp-0x19832c48],cl
  40b0f1:	es imul ebp,edi,0x0
  40b0f5:	jo     0x40b081
  40b0f7:	enter  0xe9e0,0xa1
  40b0fb:	inc    ebx
  40b0fc:	mov    dl,0x5d
  40b0fe:	nop
  40b0ff:	imul   ebx,ecx,0xe2e1778b
  40b105:	xor    BYTE PTR [ebp+0x36],al
  40b108:	out    0x1e,al
  40b10a:	(bad)  
  40b10b:	(bad)  [esi-0x7f]
  40b10e:	ja     0x40b0ef
  40b110:	or     ch,dl
  40b112:	test   al,0xde
  40b114:	ins    DWORD PTR es:[edi],dx
  40b115:	ins    BYTE PTR es:[edi],dx
  40b116:	adc    cl,al
  40b118:	and    BYTE PTR [ebp+0xa92c6c7],bl
  40b11e:	cmp    al,0x71
  40b120:	xchg   ecx,eax
  40b121:	popa   
  40b122:	adc    eax,0x2242a784
  40b127:	pushf  
  40b128:	dec    edi
  40b129:	(bad)  
  40b12a:	outs   dx,BYTE PTR ds:[esi]
  40b12b:	xor    dl,BYTE PTR [ebp+0x9]
  40b12e:	das    
  40b12f:	jge    0x40b0b5
  40b131:	xor    DWORD PTR gs:[eax-0x36],edx
  40b135:	inc    esp
  40b136:	and    dl,dh
  40b138:	pop    esi
  40b139:	cwde   
  40b13a:	inc    ecx
  40b13b:	shr    cl,0xfa
  40b13e:	retf   
  40b13f:	dec    edx
  40b140:	xor    dl,BYTE PTR [ebx]
  40b142:	cli    
  40b143:	arpl   WORD PTR [ebx-0x13990fef],cx
  40b149:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b14b:	popf   
  40b14c:	popa   
  40b14d:	push   esi
  40b14e:	je     0x40b193
  40b150:	retf   0xc8bb
  40b153:	push   0x357a641b
  40b158:	xchg   esp,eax
  40b159:	aam    0xa5
  40b15b:	ins    DWORD PTR es:[edi],dx
  40b15c:	retf   
  40b15d:	ja     0x40b0f6
  40b15f:	ficom  WORD PTR [edi]
  40b161:	inc    ecx
  40b162:	dec    edi
  40b163:	pop    esi
  40b164:	and    eax,0xcde22150
  40b169:	lea    ebx,[ebp+0x6ed25753]
  40b16f:	mov    ch,bh
  40b171:	jmp    0x2083:0x298d4fbe
  40b178:	sub    ah,bh
  40b17a:	shl    DWORD PTR [edi-0x33],cl
  40b17d:	imul   edi,DWORD PTR [eax+eax*1],0x17f585bd
  40b184:	rcr    cl,1
  40b186:	in     eax,dx
  40b187:	int    0xbb
  40b189:	jmp    0xc9aa0df2
  40b18e:	pushf  
  40b18f:	out    0xc,al
  40b191:	test   eax,0xb02e1892
  40b196:	xchg   edi,eax
  40b197:	xchg   ecx,eax
  40b198:	jge    0x40b16f
  40b19a:	inc    edx
  40b19b:	imul   eax,edi,0xa0a89f3b
  40b1a1:	xchg   ecx,eax
  40b1a2:	aam    0x18
  40b1a4:	adc    eax,0xf0f614a1
  40b1a9:	xchg   ebx,eax
  40b1aa:	outs   dx,DWORD PTR ds:[esi]
  40b1ab:	mov    ah,0x11
  40b1ad:	and    edx,ebp
  40b1af:	mov    eax,0x5bc168f9
  40b1b4:	outs   dx,DWORD PTR ds:[esi]
  40b1b5:	outs   dx,DWORD PTR ds:[esi]
  40b1b6:	or     ah,BYTE PTR [edx+0x7bbcad1f]
  40b1bc:	fs pop eax
  40b1be:	(bad)  
  40b1bf:	fimul  WORD PTR [esp+eiz*4+0x3c]
  40b1c3:	frstor [esi-0x265e5e1]
  40b1c9:	pop    ss
  40b1ca:	pop    ebx
  40b1cb:	out    dx,eax
  40b1cc:	dec    ebp
  40b1cd:	xlat   BYTE PTR ds:[ebx]
  40b1ce:	loopne 0x40b194
  40b1d0:	adc    al,0x14
  40b1d2:	mov    dh,0xf8
  40b1d4:	mov    ebx,0x6744e292
  40b1d9:	shr    esp,0xc2
  40b1dc:	outs   dx,DWORD PTR ds:[esi]
  40b1dd:	mov    ah,BYTE PTR [ebx]
  40b1df:	imul   ebx,DWORD PTR [esi],0xffffffc1
  40b1e2:	mov    ebp,DWORD PTR [ecx+0x5fbb19a5]
  40b1e8:	jb     0x40b1e4
  40b1ea:	jl     0x40b1ab
  40b1ec:	ss jle 0x40b22e
  40b1ef:	cmc    
  40b1f0:	test   BYTE PTR [eax],ch
  40b1f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1f3:	ret    
  40b1f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b1f5:	jg     0x40b242
  40b1f7:	mov    eax,ds:0x7c4d4dd2
  40b1fc:	dec    ebp
  40b1fd:	(bad)  
  40b1fe:	push   ss
  40b1ff:	outs   dx,BYTE PTR ds:[esi]
  40b200:	or     ah,BYTE PTR [ecx+0x9]
  40b203:	xchg   ebp,eax
  40b204:	(bad)  
  40b205:	popf   
  40b206:	(bad)  
  40b207:	(bad)  
  40b208:	mov    bl,al
  40b20a:	jno    0x40b1fd
  40b20c:	or     eax,0x6f01ef7f
  40b211:	dec    ebp
  40b212:	push   0xffffffc3
  40b214:	xor    eax,0xf8fe7c26
  40b219:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b21a:	cmp    al,0x6
  40b21c:	add    al,0x5e
  40b21e:	pop    edx
  40b21f:	retf   0xd990
  40b222:	in     eax,dx
  40b223:	(bad)  
  40b224:	fild   QWORD PTR [esp+esi*8+0x3]
  40b228:	adc    cl,BYTE PTR [eax+0x79]
  40b22b:	sub    BYTE PTR [edi],cl
  40b22d:	push   ecx
  40b22e:	retf   0xceb0
  40b231:	jbe    0x40b22d
  40b233:	and    ah,0x4a
  40b236:	cmc    
  40b237:	sub    eax,0xe4bf8f93
  40b23c:	push   esp
  40b23d:	push   eax
  40b23e:	push   edi
  40b23f:	lods   eax,DWORD PTR ds:[esi]
  40b240:	adc    ebx,DWORD PTR [esi+0x5ec5da91]
  40b246:	inc    edi
  40b247:	pop    ebp
  40b248:	sub    cl,ah
  40b24a:	mov    cs,WORD PTR [edi-0x5d19661e]
  40b250:	mov    al,0x46
  40b252:	or     al,0xcb
  40b254:	sbb    eax,0xd30fac48
  40b259:	and    bl,cl
  40b25b:	in     al,dx
  40b25c:	loope  0x40b2ab
  40b25e:	pop    esp
  40b25f:	test   eax,0xe3037911
  40b264:	lds    esp,FWORD PTR [ebx]
  40b266:	adc    ebp,0xffffff96
  40b269:	pop    esi
  40b26a:	mov    dl,0xc
  40b26c:	xchg   ebx,eax
  40b26d:	test   esp,esi
  40b26f:	mov    edx,0x7af1254b
  40b274:	cdq    
  40b275:	ja     0x40b2d3
  40b277:	mov    eax,0xe69f5d1d
  40b27c:	xchg   ecx,eax
  40b27d:	adc    esp,DWORD PTR [ebx]
  40b27f:	sub    bh,BYTE PTR [eax+ebx*8+0x409bdb2a]
  40b286:	int    0x2a
  40b288:	ror    DWORD PTR [esi+0x5657c0d0],cl
  40b28e:	ret    0xef81
  40b291:	fs call 0x4a5bc428
  40b297:	(bad)  
  40b298:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b299:	adc    DWORD PTR [eax],0xc4f9e913
  40b29f:	xor    ebx,0xffffff86
  40b2a2:	push   ebp
  40b2a3:	iret   
  40b2a4:	and    dh,al
  40b2a6:	and    BYTE PTR [esi+0x6feec00b],ch
  40b2ac:	sbb    bh,cl
  40b2ae:	nop
  40b2af:	nop
  40b2b0:	lods   al,BYTE PTR ds:[esi]
  40b2b1:	jo     0x40b308
  40b2b3:	add    edx,DWORD PTR [ebp-0x10f913ad]
  40b2b9:	mov    ds:0xb4fa302c,eax
  40b2be:	in     al,dx
  40b2bf:	dec    ebp
  40b2c0:	test   eax,0xc396536f
  40b2c5:	xchg   ebp,eax
  40b2c6:	and    DWORD PTR [edi-0xd057231],esp
  40b2cc:	in     al,dx
  40b2cd:	lea    esp,[eax+edi*2+0x351f522f]
  40b2d4:	rcl    BYTE PTR ds:0x7eee56,0x0
  40b2db:	cmp    dh,BYTE PTR [eax-0x1c9e2c54]
  40b2e1:	push   0x56b44316
  40b2e6:	mov    al,0x1
  40b2e8:	lods   ax,WORD PTR ds:[esi]
  40b2ea:	inc    esp
  40b2eb:	shl    eax,0x3
  40b2ee:	loop   0x40b2b4
  40b2f0:	stc    
  40b2f1:	cmp    DWORD PTR [ecx-0x22],eax
  40b2f4:	(bad)  
  40b2f5:	mov    dh,0x3c
  40b2f7:	fnstsw WORD PTR [ebp+0x7cefda70]
  40b2fd:	daa    
  40b2fe:	in     al,0x46
  40b300:	out    0xd8,eax
  40b302:	push   cs
  40b303:	daa    
  40b304:	loopne 0x40b2c6
  40b306:	xor    al,0xdb
  40b308:	imul   esi,DWORD PTR [ebp-0x4499cbc7],0xffffffda
  40b30f:	lahf   
  40b310:	adc    eax,0x6fa1c816
  40b315:	and    BYTE PTR [edi],ah
  40b317:	mov    dh,0x59
  40b319:	add    BYTE PTR [ecx+ebx*8-0x50],bh
  40b31d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b31e:	pop    eax
  40b31f:	scas   eax,DWORD PTR es:[edi]
  40b320:	bound  edx,QWORD PTR [ecx-0x70]
  40b323:	fwait
  40b324:	ja     0x40b367
  40b326:	adc    eax,0x35605456
  40b32b:	fisttp WORD PTR [ebx+0x32]
  40b32e:	jmp    0x6c358143
  40b333:	ja     0x40b2e2
  40b335:	jbe    0x40b2d5
  40b337:	jne    0x40b394
  40b339:	sbb    BYTE PTR [ebp+ebp*4-0x7c],ch
  40b33d:	out    0x88,al
  40b33f:	jns    0x40b32f
  40b341:	fdivr  QWORD PTR [esi+0xa]
  40b344:	(bad)  
  40b345:	push   ss
  40b346:	dec    edi
  40b347:	(bad)  
  40b348:	jo     0x40b37e
  40b34a:	jae    0x40b3b4
  40b34c:	pop    ebp
  40b34e:	test   DWORD PTR [edx],esi
  40b350:	addr16 and al,0x34
  40b353:	in     al,0x4d
  40b355:	sahf   
  40b356:	(bad)  
  40b357:	xor    ebp,DWORD PTR [esi-0x5b]
  40b35a:	cli    
  40b35b:	add    al,0x31
  40b35d:	cmc    
  40b35e:	fdiv   QWORD PTR [ebx-0x10]
  40b361:	ins    DWORD PTR es:[edi],dx
  40b362:	cwde   
  40b363:	sbb    BYTE PTR [ecx],0x33
  40b366:	imul   esp,DWORD PTR [eax+0x286e5197],0xa65b6c1c
  40b370:	repz mov ecx,0xb5f00e00
  40b376:	cmp    ch,BYTE PTR [ecx+ebx*4]
  40b379:	setb   dh
  40b37c:	icebp  
  40b37d:	xchg   ebx,eax
  40b37e:	loop   0x40b308
  40b380:	xchg   ebx,eax
  40b381:	add    eax,0x2b100a5d
  40b386:	in     al,0x81
  40b388:	nop
  40b389:	fcmovb st,st(7)
  40b38b:	out    0xf8,eax
  40b38d:	mov    eax,0x489f99f
  40b392:	jo     0x40b3a0
  40b394:	sti    
  40b395:	xchg   esp,eax
  40b396:	ins    DWORD PTR es:[edi],dx
  40b397:	or     DWORD PTR [ebx],edi
  40b399:	cdq    
  40b39a:	adc    al,0x6c
  40b39c:	mov    dl,0x3a
  40b39e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b39f:	xchg   ebx,eax
  40b3a0:	pushf  
  40b3a1:	jo     0x40b371
  40b3a3:	mov    dl,0xf
  40b3a5:	adc    al,BYTE PTR [edi+0x29]
  40b3a8:	push   edi
  40b3a9:	(bad)  
  40b3aa:	retf   0xbb7d
  40b3ad:	in     eax,0x8b
  40b3af:	sub    esp,DWORD PTR [esp+edi*2+0x558fad91]
  40b3b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b3b7:	rol    BYTE PTR [ebx],cl
  40b3b9:	gs pop edi
  40b3bb:	sub    BYTE PTR [edi+0x4fbc7f9a],bl
  40b3c1:	sbb    al,0x36
  40b3c3:	push   eax
  40b3c4:	in     eax,0xfa
  40b3c6:	mov    bh,0x22
  40b3c8:	or     BYTE PTR [esi],dl
  40b3ca:	sti    
  40b3cb:	mov    cl,0xa8
  40b3cd:	xor    al,0x24
  40b3cf:	pop    ebp
  40b3d0:	daa    
  40b3d1:	sbb    eax,0x5c5f520e
  40b3d6:	fsubr  DWORD PTR [esi+0xb277a3]
  40b3dc:	push   edi
  40b3dd:	mov    eax,ds:0xb22a3f7a
  40b3e2:	jmp    0x734d6394
  40b3e7:	addr16 (bad) 
  40b3ea:	pop    ebx
  40b3eb:	cmp    dh,BYTE PTR [ebp+0x4e]
  40b3ee:	push   ebp
  40b3ef:	ins    DWORD PTR es:[edi],dx
  40b3f0:	push   0xf15dcc44
  40b3f5:	jmp    0x40b390
  40b3f7:	mov    esi,0xa4b2b95e
  40b3fc:	xor    edx,DWORD PTR [edi+0x16]
  40b3ff:	jg     0x40b394
  40b401:	xchg   edx,eax
  40b402:	stos   DWORD PTR es:[edi],eax
  40b403:	jmp    0x47aa8bf6
  40b408:	out    0xc2,al
  40b40a:	pop    edx
  40b40b:	xchg   BYTE PTR [ebx-0x2],bh
  40b40e:	xor    DWORD PTR [ecx],eax
  40b410:	adc    eax,DWORD PTR [edi-0x29]
  40b413:	push   0x65
  40b415:	add    edx,DWORD PTR [ebx+0xf]
  40b418:	cwde   
  40b419:	jecxz  0x40b3f8
  40b41b:	or     esp,DWORD PTR [edi-0x3b]
  40b41e:	outs   dx,DWORD PTR ds:[esi]
  40b41f:	push   ds
  40b420:	lea    edx,[ecx-0x43]
  40b423:	call   0x3684519d
  40b428:	push   edx
  40b429:	mov    es,WORD PTR [edx+ebp*4]
  40b42c:	test   DWORD PTR [edx+0x16],esi
  40b42f:	inc    eax
  40b430:	in     al,0x76
  40b432:	aaa    
  40b433:	aam    0xe0
  40b435:	adc    eax,ebp
  40b437:	fstp   st(4)
  40b439:	add    BYTE PTR [ebx+ebp*8+0x3c20f173],0xf9
  40b441:	xor    BYTE PTR [esi+0x8221ccf],ch
  40b447:	jle    0x40b483
  40b449:	pop    ebp
  40b44a:	mov    edx,0x6287b3c7
  40b44f:	cld    
  40b450:	ins    DWORD PTR es:[edi],dx
  40b451:	and    bh,BYTE PTR [ecx-0x41706b84]
  40b457:	mov    al,ds:0x8ba42ef1
  40b45c:	imul   ecx,DWORD PTR [edi+ebx*8],0xffffff9b
  40b460:	jmp    0x565f0d7e
  40b465:	xlat   BYTE PTR ds:[ebx]
  40b466:	push   0x1c
  40b468:	push   cs
  40b469:	leave  
  40b46a:	popf   
  40b46b:	mov    DWORD PTR [eax],ecx
  40b46d:	popa   
  40b46e:	sbb    ecx,DWORD PTR [edx+0x2b]
  40b471:	stos   BYTE PTR es:[edi],al
  40b472:	call   0x8765a919
  40b477:	sub    eax,0xba5a8866
  40b47c:	mov    edi,0x2a2e6874
  40b481:	push   edi
  40b482:	inc    edx
  40b483:	adc    ebx,DWORD PTR [edx]
  40b485:	mov    bl,0xbb
  40b487:	out    0x3a,al
  40b489:	jp     0x40b4e0
  40b48b:	pop    esi
  40b48c:	jb     0x40b452
  40b48e:	cs or  eax,0xc54c58ab
  40b494:	daa    
  40b495:	ja     0x40b420
  40b497:	add    eax,0x540a49d
  40b49c:	push   ebx
  40b49d:	jae    0x40b423
  40b49f:	hlt    
  40b4a0:	enter  0x17f7,0x91
  40b4a4:	adc    eax,DWORD PTR [edi]
  40b4a6:	push   eax
  40b4a7:	out    0x82,eax
  40b4a9:	dec    esp
  40b4aa:	add    eax,0xf4c26d63
  40b4af:	cmc    
  40b4b0:	rol    BYTE PTR [ebx],1
  40b4b2:	dec    eax
  40b4b3:	test   al,0xc3
  40b4b5:	fwait
  40b4b6:	push   DWORD PTR [ecx]
  40b4b8:	mov    bh,0xb8
  40b4ba:	fidiv  WORD PTR ds:0xeaeb82b2
  40b4c0:	lahf   
  40b4c1:	int    0x88
  40b4c3:	jne    0x40b45b
  40b4c5:	imul   ebx,ebx,0x0
  40b4c8:	mov    edi,DWORD PTR [ebp-0x3]
  40b4cb:	outs   dx,BYTE PTR ds:[esi]
  40b4cc:	mov    eax,0x63ed71bd
  40b4d1:	adc    ebp,DWORD PTR [ebx]
  40b4d3:	add    edx,DWORD PTR [eax+ecx*1]
  40b4d6:	xlat   BYTE PTR ds:[ebx]
  40b4d7:	(bad)  
  40b4d8:	fsubr  DWORD PTR ds:0x47abaa7b
  40b4de:	jae    0x40b474
  40b4e0:	push   ebx
  40b4e1:	dec    ebp
  40b4e2:	je     0x40b4aa
  40b4e4:	int3   
  40b4e5:	ja     0x40b4fa
  40b4e7:	jp     0x40b4f7
  40b4e9:	adc    eax,0xe98930d6
  40b4ee:	es fdivrp st(2),st
  40b4f1:	(bad)  
  40b4f2:	fsub   DWORD PTR [ecx+ebp*2-0x63]
  40b4f6:	cli    
  40b4f7:	mov    cl,0xc9
  40b4f9:	dec    esi
  40b4fa:	loope  0x40b4bc
  40b4fc:	das    
  40b4fd:	sbb    ebp,DWORD PTR [esp+edx*2+0x52]
  40b501:	add    bh,bl
  40b503:	jne    0x40b57d
  40b505:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b506:	mov    WORD PTR [esi+0x2c],es
  40b509:	jge    0x40b574
  40b50b:	inc    eax
  40b50c:	inc    ebp
  40b50d:	enter  0xbbd8,0x64
  40b511:	dec    esp
  40b512:	inc    esp
  40b513:	cwde   
  40b514:	dec    ecx
  40b515:	push   cs
  40b516:	leave  
  40b517:	jno    0x40b520
  40b519:	iret   
  40b51a:	and    DWORD PTR [ecx-0x258d6cf9],0xf2b670b0
  40b524:	jg     0x40b4ad
  40b526:	scas   eax,DWORD PTR es:[edi]
  40b527:	pop    ss
  40b528:	les    edi,FWORD PTR [eax+eiz*2]
  40b52b:	fcmovne st,st(2)
  40b52d:	fisttp WORD PTR [edi]
  40b52f:	mov    esp,0x5468fe45
  40b534:	push   0x3531224a
  40b539:	shl    DWORD PTR [esi],0xd
  40b53c:	ja     0x40b54b
  40b53e:	mov    cl,0xc0
  40b540:	fmul   st,st(5)
  40b542:	dec    edx
  40b543:	xor    dh,BYTE PTR [edi-0x457ac05a]
  40b549:	pop    edx
  40b54a:	or     BYTE PTR [esi+0x217516b7],0x45
  40b551:	(bad)  
  40b553:	mov    edx,0xb66f501a
  40b558:	lock jae 0x40b59e
  40b55b:	jo     0x40b556
  40b55d:	mov    ch,0x1f
  40b55f:	js     0x40b51f
  40b561:	lock push cs
  40b563:	mov    edi,0x47c4a7a6
  40b568:	dec    ebx
  40b569:	or     DWORD PTR [eax+esi*4-0x6ec59996],edx
  40b570:	pop    ebp
  40b571:	jl     0x40b568
  40b573:	pop    ss
  40b574:	(bad)  
  40b575:	mov    ah,0xf9
  40b577:	pop    edx
  40b578:	bound  ecx,QWORD PTR [esi+eiz*2-0x55558a5b]
  40b57f:	dec    bp
  40b581:	mov    ebx,0x3962e41
  40b586:	and    BYTE PTR es:[esi+esi*1+0x73af8424],dl
  40b58e:	pop    edi
  40b58f:	aam    0xdc
  40b591:	mov    ds:0xb2352699,al
  40b596:	inc    edx
  40b597:	das    
  40b598:	add    esi,DWORD PTR [edi]
  40b59a:	(bad)  
  40b59b:	mov    esi,0xd9f08b1b
  40b5a0:	push   ds
  40b5a1:	jmp    0x2c75:0xea512ece
  40b5a8:	clc    
  40b5a9:	bound  ebp,QWORD PTR [ebp+0x129df706]
  40b5af:	add    al,0x0
  40b5b1:	div    BYTE PTR [edi-0x4977df5b]
  40b5b7:	inc    edi
  40b5b8:	test   BYTE PTR [ebx-0x22],ah
  40b5bb:	xlat   BYTE PTR ds:[ebx]
  40b5bc:	or     al,BYTE PTR [eax]
  40b5be:	sbb    eax,0x861a4617
  40b5c3:	outs   dx,DWORD PTR ds:[esi]
  40b5c4:	aad    0x92
  40b5c6:	daa    
  40b5c7:	adc    eax,0x3d371e21
  40b5cc:	imul   ebp,DWORD PTR [edi+0x2428c2dc],0xca9ffd1a
  40b5d6:	push   edx
  40b5d7:	sbb    BYTE PTR ds:0xb7e2c2c9,ch
  40b5dd:	adc    eax,0x256f1adb
  40b5e2:	call   DWORD PTR cs:[ebx]
  40b5e5:	stos   DWORD PTR es:[edi],eax
  40b5e6:	and    dl,BYTE PTR [ebp+0x16935c4]
  40b5ec:	jp     0x40b5fb
  40b5ee:	cdq    
  40b5ef:	iret   
  40b5f0:	shr    DWORD PTR [edx+0x1f],cl
  40b5f3:	out    0x4b,al
  40b5f5:	cs mov bl,0x3b
  40b5f8:	xor    ebx,DWORD PTR [edx+eax*8]
  40b5fb:	clc    
  40b5fc:	repz fwait
  40b5fe:	inc    esp
  40b5ff:	fist   DWORD PTR [edx+0x3a]
  40b602:	jg     0x40b5e0
  40b604:	retf   
  40b605:	cmp    DWORD PTR [ebp+0x136b78d0],ebp
  40b60b:	push   es
  40b60c:	pop    ss
  40b60d:	mov    dh,0x73
  40b60f:	aad    0x73
  40b611:	mov    WORD PTR [esi+0x7460cfc1],ss
  40b617:	stos   BYTE PTR es:[edi],al
  40b618:	nop
  40b619:	out    0x57,al
  40b61b:	inc    ebp
  40b61c:	lock in eax,dx
  40b61e:	inc    ebp
  40b61f:	add    eax,0x182f38b7
  40b624:	pop    ecx
  40b625:	add    eax,0x5f78ee2b
  40b62a:	(bad)  
  40b62b:	mov    eax,0x5b473902
  40b630:	inc    bp
  40b632:	dec    eax
  40b633:	cmp    eax,DWORD PTR [ebx-0x5]
  40b636:	sub    DWORD PTR [ebx],ebx
  40b638:	in     al,dx
  40b639:	not    DWORD PTR [ecx]
  40b63b:	fwait
  40b63c:	icebp  
  40b63d:	mov    edi,edx
  40b63f:	push   eax
  40b640:	call   0x98be:0xcab6f6be
  40b647:	jb     0x40b5d0
  40b649:	test   bl,dl
  40b64b:	xchg   esp,eax
  40b64c:	scas   eax,DWORD PTR es:[edi]
  40b64d:	pop    ebp
  40b64e:	into   
  40b64f:	leave  
  40b650:	xor    al,0x51
  40b652:	repnz (bad) [edx-0x70]
  40b656:	test   BYTE PTR [edi-0x649dff43],ch
  40b65c:	xor    ebx,edi
  40b65e:	pop    edi
  40b65f:	in     eax,dx
  40b660:	jmp    0x86de:0x624793c2
  40b667:	call   0x1e3bc1b7
  40b66c:	and    DWORD PTR [edx-0x614cda9e],esp
  40b672:	jmp    0x5cc8:0xda43e906
  40b679:	(bad)  
  40b67a:	int    0x67
  40b67c:	in     eax,0x9b
  40b67e:	loope  0x40b6e7
  40b680:	mov    ?,WORD PTR [edi]
  40b682:	sbb    al,0x19
  40b684:	inc    eax
  40b685:	popf   
  40b686:	mov    ebx,0x706249bc
  40b68b:	pop    ebx
  40b68c:	jp     0x40b654
  40b68e:	sbb    eax,0xdbbb2d07
  40b693:	sub    ecx,DWORD PTR [esi-0x1569f7e]
  40b699:	dec    ebp
  40b69a:	sbb    al,0x7e
  40b69c:	xchg   ebp,eax
  40b69d:	test   BYTE PTR [ecx],bh
  40b69f:	xchg   edx,eax
  40b6a0:	ja     0x40b69d
  40b6a2:	in     al,0xe3
  40b6a4:	es xchg ecx,eax
  40b6a6:	xchg   esi,eax
  40b6a7:	pop    ebp
  40b6a8:	jmp    0x64f8:0xfcdc3514
  40b6af:	rol    DWORD PTR [edx-0x64],1
  40b6b2:	retf   
  40b6b3:	pushf  
  40b6b4:	pop    ebx
  40b6b5:	add    al,0x3c
  40b6b7:	stc    
  40b6b8:	scas   al,BYTE PTR es:[edi]
  40b6b9:	jno    0x40b660
  40b6bb:	push   edi
  40b6bc:	neg    BYTE PTR [ebx-0x67]
  40b6bf:	sub    eax,0x8a62f5f8
  40b6c4:	add    eax,0x97e45a5c
  40b6c9:	test   al,0x48
  40b6cb:	inc    edx
  40b6cc:	cmp    eax,0x29d6fd8c
  40b6d1:	dec    edi
  40b6d2:	fs mov dl,0x8a
  40b6d5:	or     DWORD PTR [edx+0x16],ebx
  40b6d8:	sbb    al,0xb8
  40b6da:	test   al,0xc6
  40b6dd:	inc    eax
  40b6de:	add    al,0x51
  40b6e0:	sbb    ebp,esp
  40b6e2:	push   esp
  40b6e3:	enter  0xadf1,0x41
  40b6e7:	mov    edi,0x30f1bbad
  40b6ec:	rol    eax,0x2c
  40b6ef:	out    dx,al
  40b6f0:	addr16 pop ds
  40b6f2:	jno    0x40b684
  40b6f4:	cmp    dl,BYTE PTR [esp+ebp*4+0x29f9750e]
  40b6fb:	xchg   esi,eax
  40b6fc:	inc    BYTE PTR [ebx-0x7e93342e]
  40b702:	push   0x60
  40b704:	int3   
  40b705:	mov    esp,0x42f827c6
  40b70a:	push   ebx
  40b70b:	mov    esp,0xd2125d8c
  40b710:	ret    
  40b711:	add    eax,0xe3095243
  40b716:	dec    edi
  40b718:	ret    0x88bf
  40b71b:	stc    
  40b71c:	lods   al,BYTE PTR ds:[esi]
  40b71d:	dec    edi
  40b71e:	jnp    0x40b742
  40b720:	xor    ch,bh
  40b722:	inc    ebx
  40b723:	sub    eax,0x28deb263
  40b728:	inc    edi
  40b729:	mov    dl,0x76
  40b72b:	test   al,0xc3
  40b72d:	mov    esp,DWORD PTR [eax-0x5be489cc]
  40b733:	mov    esp,0x4f4151ee
  40b738:	sbb    DWORD PTR [ebp+0x67],ebx
  40b73b:	pop    edx
  40b73c:	mov    bh,0xf
  40b73e:	test   BYTE PTR [edi-0x25],bh
  40b741:	dec    esp
  40b742:	sub    BYTE PTR [eax+edx*1+0xf],bl
  40b746:	mov    esp,0xb8a737e4
  40b74b:	out    0xad,al
  40b74d:	(bad)  
  40b74e:	jmp    0x8a7988cc
  40b753:	inc    eax
  40b754:	cli    
  40b755:	adc    cl,bl
  40b757:	outs   dx,DWORD PTR ds:[esi]
  40b758:	dec    edi
  40b759:	jno    0x40b6e6
  40b75b:	cwde   
  40b75c:	jmp    0xdd488711
  40b761:	or     al,0x4c
  40b763:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b764:	and    edi,DWORD PTR [edx]
  40b766:	(bad)  
  40b767:	adc    bh,BYTE PTR [esp+ebp*8+0x57]
  40b76b:	push   edi
  40b76c:	call   0x1d82:0x4c569fc9
  40b773:	ins    BYTE PTR es:[edi],dx
  40b774:	adc    bl,dh
  40b776:	or     BYTE PTR [ecx],bl
  40b778:	add    eax,0xb42ae8cd
  40b77d:	popa   
  40b77e:	shr    DWORD PTR [edi],cl
  40b780:	adc    DWORD PTR [esp+edi*4-0x29],esi
  40b784:	mov    ecx,0xc605a82b
  40b789:	add    al,0x83
  40b78b:	pop    edx
  40b78c:	les    eax,FWORD PTR [edx-0x5c4bb196]
  40b792:	xchg   BYTE PTR [ecx],al
  40b794:	sub    eax,0xfc8b0474
  40b799:	sar    DWORD PTR [edx+edi*8+0x48662c47],0xcf
  40b7a1:	pop    DWORD PTR [eax-0x79792d0]
  40b7a7:	cmp    esi,DWORD PTR [ebx-0x30]
  40b7aa:	imul   ecx,DWORD PTR [eax-0x33],0xdd93562e
  40b7b1:	mov    ebp,0x486fcf44
  40b7b6:	push   ecx
  40b7b7:	imul   esp,DWORD PTR [esi+ebx*2-0x7b],0x8c164cba
  40b7bf:	sub    BYTE PTR [esi+0x293032c],ch
  40b7c5:	pop    ds
  40b7c6:	cmp    bh,0x96
  40b7c9:	lahf   
  40b7ca:	xchg   ebp,eax
  40b7cb:	ds mov eax,0x231b619b
  40b7d1:	imul   eax,DWORD PTR [ebx-0x46],0xb4256a0b
  40b7d8:	dec    BYTE PTR [edi]
  40b7da:	mov    ebx,DWORD PTR [edi-0x3d]
  40b7dd:	gs jge 0x40b7f9
  40b7e0:	cwde   
  40b7e1:	addr16 jmp 0x53024d87
  40b7e7:	in     eax,0x24
  40b7e9:	or     esi,DWORD PTR [esi]
  40b7eb:	mov    dl,0xf3
  40b7ed:	icebp  
  40b7ee:	inc    ebx
  40b7ef:	dec    edx
  40b7f0:	mov    al,0xb2
  40b7f2:	es and eax,0x8bbdc891
  40b7f8:	inc    ebx
  40b7f9:	cmp    eax,0x1e197677
  40b7fe:	in     eax,dx
  40b7ff:	inc    edx
  40b800:	cmp    DWORD PTR [edi-0x130ec8f0],eax
  40b806:	ds pop ebx
  40b808:	neg    DWORD PTR ds:0xdca2aa05
  40b80e:	retf   0x1818
  40b811:	ins    BYTE PTR es:[edi],dx
  40b812:	cdq    
  40b813:	and    ebx,eax
  40b815:	jmp    0x40b798
  40b817:	cmc    
  40b818:	add    ch,BYTE PTR [edi+0x7f5226af]
  40b81e:	cmp    BYTE PTR [edx-0x16],0x47
  40b822:	mov    eax,ds:0xf4f817e5
  40b827:	inc    BYTE PTR [edx-0x6b]
  40b82a:	leave  
  40b82b:	ja     0x40b840
  40b82d:	ins    BYTE PTR es:[edi],dx
  40b82e:	cdq    
  40b82f:	inc    esi
  40b830:	ins    DWORD PTR es:[edi],dx
  40b831:	in     eax,dx
  40b832:	adc    bh,BYTE PTR [edx]
  40b834:	jge    0x40b862
  40b836:	into   
  40b837:	popf   
  40b838:	iret   
  40b839:	sub    al,0xee
  40b83b:	xchg   ecx,eax
  40b83c:	add    DWORD PTR [eax+ebx*2+0x16],0xffffffb4
  40b841:	out    dx,eax
  40b842:	icebp  
  40b843:	nop
  40b844:	xchg   ecx,eax
  40b845:	jno    0x40b899
  40b847:	inc    edx
  40b848:	push   edi
  40b849:	sub    eax,0xf58eaec3
  40b84e:	xchg   eax,esp
  40b850:	push   ebp
  40b851:	fcom   DWORD PTR [edi+0x1a2ebaf5]
  40b857:	add    DWORD PTR [ecx],edi
  40b859:	popa   
  40b85a:	test   eax,0x868b0b0f
  40b85f:	push   eax
  40b860:	mov    bh,0xaf
  40b862:	push   0xe6b0a96f
  40b867:	mov    cl,0xf4
  40b869:	ds sbb esi,esi
  40b86c:	push   ss
  40b86d:	dec    edx
  40b86e:	loop   0x40b811
  40b870:	adc    DWORD PTR [eax+eiz*4],ecx
  40b873:	inc    esp
  40b874:	fdivp  st(7),st
  40b876:	inc    ebp
  40b877:	fisub  DWORD PTR [ecx-0x9]
  40b87b:	dec    ecx
  40b87c:	sub    al,0x57
  40b87e:	xchg   edx,eax
  40b87f:	jmp    0xd5024930
  40b884:	jne    0x40b870
  40b886:	fild   QWORD PTR es:[ecx]
  40b889:	mov    dh,0x29
  40b88b:	shr    esi,cl
  40b88d:	cwde   
  40b88e:	mov    al,0xce
  40b890:	imul   ecx,ebp,0x3c
  40b893:	cs inc ebp
  40b895:	and    al,bl
  40b897:	nop
  40b898:	inc    esi
  40b899:	arpl   sp,bx
  40b89b:	arpl   WORD PTR [eax-0x57],dx
  40b89e:	addr16 push ebp
  40b8a0:	into   
  40b8a1:	push   ecx
  40b8a2:	stos   DWORD PTR es:[edi],eax
  40b8a3:	ds sub eax,0x97e1e79d
  40b8a9:	icebp  
  40b8aa:	pusha  
  40b8ab:	jmp    FWORD PTR [ebp-0x1727a748]
  40b8b1:	jmp    0x1ef:0x781b81da
  40b8b8:	or     ah,bl
  40b8ba:	rcl    BYTE PTR [eiz*2+0xd608794],0x99
  40b8c2:	cs add al,0xf0
  40b8c5:	ret    0x5279
  40b8c8:	sar    DWORD PTR [edx+0x3aefd3ac],1
  40b8ce:	in     eax,dx
  40b8cf:	jmp    0x40b88d
  40b8d1:	mov    ebp,ebp
  40b8d3:	sbb    eax,0xcd8d86b8
  40b8d8:	mov    DWORD PTR [ecx+0x75],ebp
  40b8db:	push   ebx
  40b8dc:	nop
  40b8dd:	mov    esi,0x128ac16f
  40b8e2:	xchg   ebx,eax
  40b8e3:	sbb    BYTE PTR [edi+0x60],bl
  40b8e6:	data16 frstpm(287 only) 
  40b8e9:	add    al,0x97
  40b8eb:	aam    0x79
  40b8ed:	out    dx,al
  40b8ee:	mov    DWORD PTR [edi+0x5bd9dd7b],esi
  40b8f4:	push   ds
  40b8f5:	cmp    eax,0x9208838c
  40b8fa:	inc    ecx
  40b8fb:	shr    DWORD PTR [ebp-0x671441b8],0xa0
  40b902:	out    dx,eax
  40b903:	xor    esi,ebp
  40b905:	dec    ecx
  40b906:	enter  0xa462,0x74
  40b90a:	xor    ch,cl
  40b90c:	int    0x3e
  40b90e:	lods   eax,DWORD PTR ds:[esi]
  40b90f:	or     eax,0x227e9b18
  40b914:	xchg   dh,dl
  40b916:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b917:	jg     0x40b8a6
  40b919:	add    DWORD PTR [ecx],ebp
  40b91b:	imul   ebx,DWORD PTR [esi+0x4ffb397c],0xc68c2719
  40b925:	jmp    0x5595:0x678224e7
  40b92c:	sub    eax,0x46e89079
  40b931:	fucomp st(7)
  40b933:	fwait
  40b934:	in     eax,dx
  40b935:	cmp    al,0xa5
  40b937:	ja     0x40b95e
  40b939:	sub    edi,DWORD PTR [ebx]
  40b93b:	aad    0x9e
  40b93d:	fiadd  DWORD PTR [esi-0x24d0fa5e]
  40b943:	mov    bl,0xf4
  40b945:	dec    ecx
  40b946:	(bad)  
  40b948:	fwait
  40b949:	dec    esp
  40b94a:	xor    ch,BYTE PTR [esi+0x18a49da5]
  40b950:	stc    
  40b951:	nop
  40b952:	inc    ebp
  40b953:	xchg   esi,eax
  40b954:	inc    ecx
  40b955:	pop    esp
  40b956:	fmul   QWORD PTR [eax]
  40b958:	fwait
  40b959:	cmp    ecx,ebp
  40b95b:	popa   
  40b95c:	fcmovb st,st(5)
  40b95e:	out    0xce,eax
  40b960:	mov    cs,WORD PTR [eax]
  40b962:	add    eax,0xa9c3b57c
  40b967:	push   eax
  40b968:	dec    ebx
  40b969:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b96a:	xlat   BYTE PTR ds:[ebx]
  40b96b:	jecxz  0x40b925
  40b96d:	add    al,0x66
  40b96f:	mov    ah,0xb2
  40b971:	inc    edx
  40b972:	sub    al,0x4a
  40b974:	push   eax
  40b975:	ins    DWORD PTR es:[edi],dx
  40b976:	push   edi
  40b977:	das    
  40b978:	ins    BYTE PTR es:[edi],dx
  40b979:	lds    eax,FWORD PTR [ebp+0x2f679774]
  40b97f:	sbb    DWORD PTR [edx],edi
  40b981:	hlt    
  40b982:	jmp    0x5b71395f
  40b987:	and    DWORD PTR [eax+edi*1-0x1c],0xfffffffa
  40b98c:	pushf  
  40b98d:	int3   
  40b98e:	adc    edx,DWORD PTR [ecx-0x256c34c1]
  40b994:	cmp    BYTE PTR [ecx+edi*2],bl
  40b997:	in     al,0xa3
  40b999:	sub    BYTE PTR [ecx-0x482b0384],bl
  40b99f:	out    dx,al
  40b9a0:	xor    dh,BYTE PTR [edx-0x64d3634e]
  40b9a6:	mov    DWORD PTR [ecx+0xd],esi
  40b9a9:	xchg   DWORD PTR [ebx+0xc2db96],ecx
  40b9af:	outs   dx,DWORD PTR ds:[esi]
  40b9b0:	lods   eax,DWORD PTR ds:[esi]
  40b9b1:	xor    BYTE PTR [eax+0x1218b769],cl
  40b9b7:	add    DWORD PTR [edx+ecx*2-0x77aced6],ecx
  40b9be:	std    
  40b9bf:	jmp    0x7aea:0x1b06be88
  40b9c6:	or     BYTE PTR [edx+0x2e2c67eb],cl
  40b9cc:	cwde   
  40b9cd:	xchg   ebx,eax
  40b9ce:	xor    BYTE PTR [ebx-0x36],dl
  40b9d1:	xor    cl,BYTE PTR [ebp+0x6d1c27de]
  40b9d7:	mov    ds,WORD PTR [eax-0x6db15fca]
  40b9dd:	mov    eax,ds:0x93fa4ce3
  40b9e2:	ficom  WORD PTR [ebp+edx*8+0x41]
  40b9e6:	fmul   QWORD PTR [ebx]
  40b9e8:	imul   ebp,DWORD PTR [ebp+0x42de9f8a],0x7dd7f999
  40b9f2:	xchg   DWORD PTR [ebp+0x65],ebp
  40b9f5:	bound  ebx,QWORD PTR [ebp+0x6b80cd]
  40b9fb:	and    DWORD PTR [ecx+0x68b5a38f],edx
  40ba01:	sbb    al,0x9c
  40ba03:	pop    esp
  40ba04:	aaa    
  40ba05:	stc    
  40ba06:	push   ecx
  40ba07:	inc    ecx
  40ba08:	in     al,dx
  40ba09:	arpl   WORD PTR [ebx+edx*2-0x42c54f88],bp
  40ba10:	stos   BYTE PTR es:[edi],al
  40ba11:	ins    BYTE PTR es:[edi],dx
  40ba12:	jmp    0x40ba86
  40ba14:	and    eax,0xe91c4805
  40ba19:	or     bl,al
  40ba1b:	xchg   esi,eax
  40ba1c:	add    BYTE PTR [ebx],0x60
  40ba1f:	or     BYTE PTR [eax-0x6fbaf718],dl
  40ba25:	jnp    0x40ba38
  40ba27:	lods   eax,DWORD PTR ds:[esi]
  40ba28:	ins    BYTE PTR es:[edi],dx
  40ba29:	fdiv   QWORD PTR [eax+0x3b9f7b34]
  40ba2f:	cmc    
  40ba30:	pop    edx
  40ba31:	xchg   esp,eax
  40ba32:	mov    BYTE PTR [edi-0x14a5454b],cl
  40ba38:	iret   
  40ba39:	mov    al,ds:0xeb9c0697
  40ba3e:	dec    ebx
  40ba3f:	jb     0x40b9e2
  40ba41:	xchg   ebp,eax
  40ba42:	scas   al,BYTE PTR es:[edi]
  40ba43:	fldenv [ebp-0x18]
  40ba46:	je     0x40b9fb
  40ba48:	cmp    al,BYTE PTR [esi]
  40ba4a:	lea    ecx,[edx+0x64]
  40ba4d:	mov    dh,ah
  40ba4f:	addr16 push ss
  40ba51:	ss int 0x3a
  40ba54:	fcom   QWORD PTR [edi]
  40ba56:	sbb    al,0xfc
  40ba58:	mov    ecx,0x40cf8aef
  40ba5d:	push   es
  40ba5e:	sub    eax,0x9933025
  40ba63:	stos   DWORD PTR es:[edi],eax
  40ba64:	jge    0x40ba5f
  40ba66:	rcl    BYTE PTR [eax-0x4f510abc],0xc6
  40ba6d:	ins    BYTE PTR es:[edi],dx
  40ba6e:	pop    edi
  40ba6f:	aaa    
  40ba70:	arpl   sp,cx
  40ba72:	repnz cmp BYTE PTR [esi],cl
  40ba75:	test   dh,0xbe
  40ba78:	enter  0xbe77,0x4f
  40ba7c:	lea    ebx,[eax+edi*8]
  40ba7f:	fild   QWORD PTR [ebp+0x5b]
  40ba82:	cmp    esi,DWORD PTR [ecx-0x3c9ecb57]
  40ba88:	sub    al,0x6b
  40ba8a:	daa    
  40ba8b:	clc    
  40ba8c:	mov    ds,WORD PTR [edx-0x7e000a60]
  40ba92:	cwde   
  40ba93:	iret   
  40ba94:	out    0x16,al
  40ba96:	and    ch,BYTE PTR [ebx]
  40ba98:	fwait
  40ba99:	loop   0x40ba9a
  40ba9b:	jns    0x40ba9d
  40ba9d:	pop    esi
  40ba9e:	jne    0x40ba45
  40baa0:	lds    ebp,FWORD PTR [ebx-0xe]
  40baa3:	fstp   DWORD PTR [ecx+esi*4+0x51]
  40baa7:	xchg   esp,eax
  40baa8:	int    0xf5
  40baaa:	jmp    0x40ba62
  40baac:	leave  
  40baad:	(bad)  
  40baae:	jp     0x40ba39
  40bab0:	rol    edi,1
  40bab2:	rcr    BYTE PTR [ecx],0x1
  40bab5:	out    0x51,al
  40bab7:	aas    
  40bab8:	sbb    eax,0x64beeb40
  40babd:	mov    BYTE PTR [ebp+0x5f],ah
  40bac0:	test   DWORD PTR [ebp+0x6f],edi
  40bac3:	iret   
  40bac4:	test   DWORD PTR [edi-0xfb81bea],eax
  40baca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bacb:	dec    ebp
  40bacc:	jp     0x40bb29
  40bace:	cmp    dl,BYTE PTR [edi]
  40bad0:	(bad)  
  40bad2:	lods   eax,DWORD PTR ds:[esi]
  40bad3:	cs out 0xbf,eax
  40bad6:	jo     0x40ba7c
  40bad8:	test   al,0xca
  40bada:	mov    ah,0xac
  40badc:	push   cs
  40badd:	in     eax,dx
  40bade:	repnz clc 
  40bae0:	mov    al,cl
  40bae2:	aam    0x62
  40bae4:	mov    ebp,0x8fa68f0e
  40bae9:	sbb    ch,BYTE PTR [esi]
  40baeb:	jnp    0x40bb27
  40baed:	xchg   ecx,eax
  40baee:	mov    DWORD PTR [edx+0x6142ba30],eax
  40baf4:	ds cmc 
  40baf6:	mul    ecx
  40baf8:	inc    ebx
  40baf9:	call   0x35ce:0x6b5a7377
  40bb00:	fwait
  40bb01:	cmp    cl,BYTE PTR [eax+edi*2+0x2f52cab6]
  40bb08:	push   0x4ecc0aed
  40bb0d:	pusha  
  40bb0e:	shl    dl,1
  40bb10:	fdivr  QWORD PTR [eax+0x38]
  40bb13:	or     bh,cl
  40bb15:	push   edx
  40bb16:	jno    0x40bb7c
  40bb18:	mov    ?,WORD PTR [ebp-0x71a20c39]
  40bb1e:	mov    cl,0xe0
  40bb20:	js     0x40bb6c
  40bb22:	mov    ecx,0xe98eda3a
  40bb27:	adc    BYTE PTR [esp+ecx*4-0x426bd991],bh
  40bb2e:	mov    BYTE PTR [ebx],cl
  40bb30:	clc    
  40bb31:	push   edi
  40bb32:	or     DWORD PTR [eax+0x3671afc7],ebx
  40bb38:	test   al,0x1f
  40bb3a:	jae    0x40baf5
  40bb3c:	sbb    eax,eax
  40bb3e:	pop    ebp
  40bb3f:	jmp    0x40bb9c
  40bb41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb42:	iret   
  40bb43:	mov    ds:0x42a19d3a,al
  40bb48:	or     BYTE PTR [ecx],bh
  40bb4a:	js     0x40bb77
  40bb4c:	(bad)  
  40bb4d:	mov    dh,0xce
  40bb4f:	mov    DWORD PTR [ebx],ebx
  40bb51:	jmp    0x96ef:0xcc46d14a
  40bb58:	sar    ch,cl
  40bb5a:	std    
  40bb5b:	addr16 push ebp
  40bb5d:	jge    0x40bb94
  40bb5f:	or     eax,edx
  40bb61:	sub    eax,DWORD PTR [ecx]
  40bb63:	out    0xd0,eax
  40bb65:	jecxz  0x40bba5
  40bb67:	jmp    0xa85c868f
  40bb6c:	int    0x82
  40bb6e:	leave  
  40bb6f:	ds aam 0x96
  40bb72:	popa   
  40bb73:	lock out dx,al
  40bb75:	mov    edi,0xc2cb54f5
  40bb7a:	jmp    ebx
  40bb7c:	mov    ecx,0xded6e7c9
  40bb81:	sub    DWORD PTR [edi*2+0x7c5e8c8d],ebx
  40bb88:	(bad)  
  40bb89:	stos   DWORD PTR es:[edi],eax
  40bb8a:	icebp  
  40bb8b:	mov    ds:0x655392ab,eax
  40bb90:	inc    esp
  40bb91:	pop    esp
  40bb92:	aam    0x9d
  40bb94:	nop
  40bb95:	push   esi
  40bb96:	iret   
  40bb97:	(bad)  
  40bb99:	dec    ecx
  40bb9a:	scas   al,BYTE PTR es:[edi]
  40bb9b:	outs   dx,BYTE PTR ds:[esi]
  40bb9c:	dec    ebx
  40bb9d:	cli    
  40bb9e:	loopne 0x40bb2a
  40bba0:	inc    edx
  40bba2:	out    0xc6,eax
  40bba4:	repnz cmp cl,BYTE PTR [edx+0x2d]
  40bba8:	sub    eax,0x393996ed
  40bbad:	mov    ecx,0x210a641c
  40bbb2:	in     al,dx
  40bbb3:	cmp    eax,0xac2d2394
  40bbb8:	mov    ah,0xdb
  40bbba:	and    al,0x69
  40bbbc:	fild   DWORD PTR [esi]
  40bbbe:	xchg   ecx,ebx
  40bbc0:	retf   0x33f0
  40bbc3:	pop    esp
  40bbc4:	sahf   
  40bbc5:	mov    ecx,0x77a2ef4c
  40bbca:	arpl   WORD PTR ds:0x9bd0d7d6,bp
  40bbd0:	outs   dx,BYTE PTR ds:[esi]
  40bbd1:	xchg   edi,eax
  40bbd2:	pop    esi
  40bbd3:	or     BYTE PTR [ebx],ah
  40bbd5:	jae    0x40bb70
  40bbd7:	and    cl,BYTE PTR [ebx+0x40]
  40bbda:	int3   
  40bbdb:	and    DWORD PTR [ebp-0x20],edi
  40bbde:	push   ebx
  40bbdf:	ret    
  40bbe0:	mov    ah,0xd8
  40bbe2:	out    0xd1,eax
  40bbe4:	jae    0x40bc5e
  40bbe6:	pop    ecx
  40bbe7:	dec    ebp
  40bbe8:	add    BYTE PTR [ecx+ecx*4],ah
  40bbeb:	ja     0x40bb80
  40bbed:	pop    edx
  40bbee:	iret   
  40bbef:	popa   
  40bbf0:	mov    cl,0x7c
  40bbf2:	nop
  40bbf3:	cmp    eax,0x167cd3ba
  40bbf8:	and    dh,BYTE PTR [edi+0x52b9508c]
  40bbfe:	push   esi
  40bbff:	pop    esp
  40bc00:	(bad)  
  40bc01:	dec    ebp
  40bc02:	or     esi,edi
  40bc04:	out    0x38,eax
  40bc06:	add    al,0xfc
  40bc08:	shl    BYTE PTR [edx-0x27],cl
  40bc0b:	arpl   WORD PTR [edx],bx
  40bc0d:	(bad)
  40bc11:	jbe    0x40bb95
  40bc13:	jle    0x40bba9
  40bc15:	and    cl,al
  40bc17:	pop    esi
  40bc18:	js     0x40bbd2
  40bc1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc1b:	mov    ch,0x83
  40bc1d:	sub    DWORD PTR [esi-0x4e],ecx
  40bc20:	inc    esp
  40bc21:	mov    al,ds:0xaf4abcc2
  40bc26:	xor    bh,BYTE PTR [ebx]
  40bc28:	js     0x40bc5e
  40bc2a:	aam    0x5f
  40bc2c:	sbb    eax,0x838dd1ea
  40bc31:	rol    BYTE PTR [eax],cl
  40bc33:	mov    eax,ds:0x75522973
  40bc38:	dec    esp
  40bc39:	lods   eax,DWORD PTR ds:[esi]
  40bc3a:	out    0xa0,al
  40bc3c:	aaa    
  40bc3d:	shr    dh,1
  40bc3f:	mov    dh,BYTE PTR [edx]
  40bc41:	mov    bl,0x53
  40bc43:	popf   
  40bc44:	sbb    dh,BYTE PTR [edi-0xa]
  40bc47:	ins    BYTE PTR es:[edi],dx
  40bc48:	ds leave 
  40bc4a:	addr16 jmp 0x40bc8c
  40bc4d:	scas   al,BYTE PTR es:[edi]
  40bc4e:	mov    edx,0x52612b77
  40bc53:	mov    BYTE PTR [edx-0x10],0xe6
  40bc57:	mov    eax,0x6cc47c0a
  40bc5c:	add    al,0x5b
  40bc5e:	pop    es
  40bc5f:	je     0x40bc70
  40bc61:	sbb    esp,esp
  40bc63:	adc    bl,dl
  40bc65:	xchg   esi,eax
  40bc66:	rcl    BYTE PTR [edx-0x21],0x23
  40bc6a:	out    0xf7,al
  40bc6c:	fstp   DWORD PTR [ebx+0x41]
  40bc6f:	mov    dl,BYTE PTR [ebx-0x657890ea]
  40bc75:	es dec esp
  40bc77:	add    DWORD PTR [eax+eiz*4+0x77494b25],esi
  40bc7e:	mov    cl,0x9e
  40bc80:	and    DWORD PTR [ecx+0x17],0xffffffb2
  40bc84:	xchg   BYTE PTR [edx+esi*2-0x7a],cl
  40bc88:	adc    ah,cl
  40bc8a:	(bad)  
  40bc8b:	enter  0x9a3f,0x36
  40bc8f:	sbb    DWORD PTR [esi+esi*1+0x55],0xffffff8d
  40bc94:	enter  0xd96a,0xd3
  40bc98:	adc    BYTE PTR [edx],bh
  40bc9a:	add    ecx,DWORD PTR [ebx]
  40bc9c:	loop   0x40bcec
  40bc9e:	and    al,0x7f
  40bca0:	(bad)  [esi-0x1a9e9f02]
  40bca6:	cmp    dh,BYTE PTR [edi-0x35]
  40bca9:	call   0x8f99f1aa
  40bcae:	mov    eax,ds:0xf6fda57c
  40bcb3:	mov    al,0x6c
  40bcb5:	(bad)  
  40bcb6:	mov    ds:0x2a82841f,al
  40bcbb:	stos   BYTE PTR es:[edi],al
  40bcbc:	push   cs
  40bcbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bcbe:	adc    bh,BYTE PTR [ebp-0x70dd54b0]
  40bcc4:	nop
  40bcc5:	out    dx,al
  40bcc6:	mov    al,ch
  40bcc8:	mov    BYTE PTR [edx],dl
  40bcca:	add    al,0x99
  40bccc:	sti    
  40bccd:	pop    esi
  40bcce:	mov    eax,0xf4d8c9fc
  40bcd3:	or     DWORD PTR [eax+0x7dbefdb2],0xffffffa1
  40bcda:	fwait
  40bcdb:	mov    al,ds:0xdba5dad2
  40bce0:	sti    
  40bce1:	inc    ebp
  40bce2:	mov    eax,ds:0x6c3967d3
  40bce7:	add    dl,BYTE PTR [ebp-0xa]
  40bcea:	jne    0x40bd17
  40bcec:	mov    ds:0x2464960b,al
  40bcf1:	mov    dh,0x3b
  40bcf3:	pop    edi
  40bcf4:	mov    dl,0x20
  40bcf6:	mov    ds:0x73573a2,eax
  40bcfb:	xchg   edx,eax
  40bcfc:	pop    eax
  40bcfd:	add    BYTE PTR [edi+0x16],ch
  40bd00:	sbb    dl,BYTE PTR [edx-0x67]
  40bd03:	or     dh,BYTE PTR [ebp-0x138300cd]
  40bd09:	push   0xffffffce
  40bd0b:	mov    ch,0xfd
  40bd0d:	jmp    0xca20e5c8
  40bd12:	xor    bh,ch
  40bd14:	inc    esi
  40bd15:	sub    eax,0xcef7cb85
  40bd1a:	push   cs
  40bd1b:	(bad)  
  40bd1c:	dec    BYTE PTR [ecx+ecx*1-0x39]
  40bd20:	mov    edx,0xbf76f357
  40bd25:	mov    ebp,0xff8388b7
  40bd2a:	xor    edi,DWORD PTR [ecx-0x4d45ec4c]
  40bd30:	rcl    BYTE PTR [eax+0x3c9ceddc],cl
  40bd36:	dec    ebp
  40bd38:	arpl   WORD PTR [ebx],cx
  40bd3a:	shr    DWORD PTR [ecx+0x71],0x4f
  40bd3e:	sub    esp,esp
  40bd40:	dec    esp
  40bd41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd42:	test   cl,bh
  40bd44:	test   eax,0xb516b6b7
  40bd49:	loopne 0x40bd01
  40bd4b:	sub    ah,BYTE PTR [esi]
  40bd4d:	mov    esi,0x4eadce2
  40bd52:	pop    edi
  40bd53:	xchg   esp,eax
  40bd54:	xor    cl,BYTE PTR [eax+0x88a70c1]
  40bd5a:	sbb    ecx,DWORD PTR [ebx]
  40bd5c:	sub    BYTE PTR [ebx+0x58],cl
  40bd5f:	aam    0x28
  40bd61:	outs   dx,DWORD PTR ds:[esi]
  40bd62:	mov    bh,0xd0
  40bd64:	push   esi
  40bd65:	leave  
  40bd66:	dec    esi
  40bd67:	pop    ds
  40bd68:	xlat   BYTE PTR ds:[ebx]
  40bd69:	mov    ds:0x3f32854c,al
  40bd6e:	inc    eax
  40bd6f:	dec    BYTE PTR [ecx+0x45876d88]
  40bd75:	cdq    
  40bd76:	dec    esp
  40bd77:	outs   dx,DWORD PTR ds:[esi]
  40bd78:	mov    cl,0x94
  40bd7a:	inc    esp
  40bd7b:	and    bh,dl
  40bd7d:	jg     0x40bd65
  40bd7f:	(bad)  
  40bd80:	fidivr DWORD PTR [ebp+0x59aad198]
  40bd86:	jl     0x7fe5e56f
  40bd8c:	pop    ebp
  40bd8d:	dec    ebx
  40bd8e:	cdq    
  40bd8f:	icebp  
  40bd90:	jne    0x40bdf4
  40bd92:	sub    bh,bh
  40bd94:	int3   
  40bd95:	cdq    
  40bd96:	pop    ebx
  40bd97:	xor    al,0x47
  40bd99:	push   0xffffff84
  40bd9b:	mov    al,BYTE PTR [esi-0x8383b]
  40bda1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bda2:	or     eax,0x2a80c4df
  40bda7:	xchg   esi,eax
  40bda8:	add    BYTE PTR [esp+ebx*2+0x75],cl
  40bdac:	pop    ecx
  40bdad:	sub    ebx,DWORD PTR [eax+eax*8-0x79]
  40bdb1:	adc    edx,ecx
  40bdb3:	daa    
  40bdb4:	push   ds
  40bdb5:	fiadd  DWORD PTR [ebx]
  40bdb7:	loopne 0x40bdfa
  40bdb9:	jno    0x40bd79
  40bdbb:	inc    ecx
  40bdbc:	add    bh,ch
  40bdbe:	inc    esi
  40bdbf:	jno    0xd0262a7e
  40bdc5:	or     esp,esi
  40bdc7:	push   ebx
  40bdc8:	popf   
  40bdc9:	push   edx
  40bdca:	xor    ebp,DWORD PTR ss:[edi+0x16]
  40bdce:	loopne 0x40bd57
  40bdd0:	jb     0x40bd57
  40bdd2:	stos   BYTE PTR es:[edi],al
  40bdd3:	mov    eax,ds:0xa20f71ad
  40bdd8:	inc    ecx
  40bdd9:	sbb    eax,0x4fae03e3
  40bdde:	mov    edx,0xf63ba897
  40bde3:	aaa    
  40bde4:	rep stos DWORD PTR es:[edi],eax
  40bde6:	stos   DWORD PTR es:[edi],eax
  40bde7:	repz xchg ebx,eax
  40bde9:	cmp    al,0x4b
  40bdeb:	cmp    BYTE PTR [ebp-0x53],bh
  40bdee:	out    dx,al
  40bdef:	rcl    BYTE PTR [esi+0x11],1
  40bdf2:	inc    esp
  40bdf3:	or     DWORD PTR [esi+0x2d9c669d],edi
  40bdf9:	sub    dl,BYTE PTR [esi+0x1b18b68d]
  40bdff:	stos   DWORD PTR es:[edi],eax
  40be00:	inc    ebx
  40be01:	pop    ebx
  40be02:	push   0x772c313c
  40be07:	sti    
  40be08:	cli    
  40be09:	mov    al,ds:0x12121c5a
  40be0e:	dec    edi
  40be0f:	push   es
  40be10:	adc    ebx,DWORD PTR ds:0x2be69558
  40be16:	push   edx
  40be17:	rcr    BYTE PTR [ebx+0x64794722],0xcb
  40be1e:	push   ds
  40be1f:	imul   esi,DWORD PTR [edx],0xffffff9d
  40be22:	pusha  
  40be23:	adc    BYTE PTR ds:0xa2a4dca9,bh
  40be29:	cmp    eax,DWORD PTR [edi+0x37]
  40be2c:	add    eax,0xa406635d
  40be31:	and    al,0x10
  40be33:	sub    al,BYTE PTR [ebx]
  40be35:	test   ebp,edx
  40be37:	push   cs
  40be38:	sahf   
  40be39:	pop    esi
  40be3a:	mov    cl,0xd0
  40be3c:	and    edx,DWORD PTR ds:[ebx]
  40be3f:	ret    
  40be40:	cmp    esp,DWORD PTR [esi]
  40be42:	push   0xffffff8a
  40be44:	mov    ss,WORD PTR ds:0xf80a6f4d
  40be4a:	rol    DWORD PTR [edi+0x3d628e99],1
  40be50:	adc    dh,ah
  40be52:	into   
  40be53:	pop    ebx
  40be54:	sbb    eax,0x807a2019
  40be59:	jne    0x40be79
  40be5b:	icebp  
  40be5c:	out    0x26,eax
  40be5e:	pop    ss
  40be5f:	shl    ecx,1
  40be61:	and    al,0xfe
  40be63:	rol    DWORD PTR [ecx],0x6a
  40be66:	loope  0x40bebf
  40be68:	test   al,0x3a
  40be6a:	aam    0xb3
  40be6c:	push   ebx
  40be6d:	ret    
  40be6e:	dec    ebp
  40be6f:	pop    ecx
  40be70:	push   esp
  40be71:	leave  
  40be72:	xchg   ebx,eax
  40be73:	dec    esp
  40be74:	rcr    dl,1
  40be76:	loop   0x40be7e
  40be78:	popf   
  40be79:	cmp    al,0x2
  40be7b:	test   edx,ebp
  40be7d:	jl     0x40be03
  40be7f:	push   0x45
  40be81:	into   
  40be82:	ins    BYTE PTR es:[edi],dx
  40be83:	mov    dl,0xdb
  40be85:	leave  
  40be86:	jecxz  0x40be57
  40be88:	jl     0x40be3d
  40be8a:	int    0x83
  40be8c:	lahf   
  40be8d:	fwait
  40be8e:	in     al,dx
  40be8f:	or     BYTE PTR [esi+ecx*1],dh
  40be92:	xchg   ebx,eax
  40be93:	cmp    eax,0x78d075e2
  40be98:	pop    ebp
  40be99:	jb     0x40be29
  40be9b:	das    
  40be9c:	adc    ch,BYTE PTR [edi-0x3b]
  40be9f:	sub    esi,0x6970317d
  40bea5:	lock jnp 0x40bef6
  40bea8:	jns    0x40bee9
  40beaa:	push   ecx
  40beab:	rol    DWORD PTR [eax-0x2b],1
  40beae:	rcl    BYTE PTR [ecx],0xae
  40beb1:	(bad)  
  40beb2:	(bad)  
  40beb4:	jo     0x40be7a
  40beb6:	js     0x40be69
  40beb8:	push   0x8acbc88f
  40bebd:	mov    esp,DWORD PTR [ebp-0x6d]
  40bec0:	xchg   ebp,eax
  40bec1:	jo     0x40bf21
  40bec3:	fcom   st(6)
  40bec5:	xor    eax,DWORD PTR [esi+eiz*8-0xc]
  40bec9:	aad    0x25
  40becb:	inc    edx
  40becc:	pop    ds
  40becd:	rol    edx,cl
  40becf:	test   al,0xa5
  40bed1:	lock fnstsw WORD PTR [ecx-0x2ede2831]
  40bed8:	inc    edi
  40bed9:	push   ds
  40beda:	mov    ds:0xaa32a759,al
  40bedf:	jecxz  0x40bef3
  40bee1:	sub    DWORD PTR [eax+0x367e2a44],0x6d3d4a37
  40beeb:	gs jl  0x40be73
  40beee:	push   ds
  40beef:	into   
  40bef0:	xchg   edx,eax
  40bef1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bef2:	cmp    DWORD PTR [ecx],ebx
  40bef4:	cmp    al,0xa3
  40bef6:	je     0x40bf28
  40bef8:	call   0x77f3:0x721416f0
  40beff:	xor    eax,0x1836aac6
  40bf04:	dec    edx
  40bf05:	jecxz  0x40bedf
  40bf07:	inc    eax
  40bf08:	aad    0xfa
  40bf0a:	sti    
  40bf0b:	movsx  edi,BYTE PTR [ecx+0x7c725852]
  40bf12:	add    bh,BYTE PTR [ebx-0x7348b1d5]
  40bf18:	fld    DWORD PTR [eax-0x6330bc30]
  40bf1e:	bound  esi,QWORD PTR [edi-0x46]
  40bf21:	push   0x6b
  40bf23:	jne    0x40bf8a
  40bf25:	mov    esi,0xf546aa81
  40bf2a:	hlt    
  40bf2b:	inc    esp
  40bf2c:	dec    ecx
  40bf2d:	jbe    0x40bf0d
  40bf2f:	jbe    0x40beec
  40bf31:	xchg   ebp,eax
  40bf32:	pop    eax
  40bf33:	jns    0x40bf77
  40bf35:	push   esi
  40bf36:	xor    edx,DWORD PTR [edx+0x1b809c55]
  40bf3c:	dec    ebx
  40bf3d:	fistp  WORD PTR [ebx-0x274ed2f1]
  40bf43:	aas    
  40bf44:	inc    esp
  40bf45:	aad    0x2a
  40bf47:	test   DWORD PTR [eax],ebp
  40bf49:	pop    ds
  40bf4a:	push   cs
  40bf4b:	and    esp,ecx
  40bf4d:	fsubp  st(6),st
  40bf4f:	ror    DWORD PTR [ecx-0x3e2e04b3],0x51
  40bf56:	addr16 loope 0x40bfc2
  40bf59:	fucomi st,st(4)
  40bf5b:	push   cs
  40bf5c:	push   edx
  40bf5d:	cmp    edx,DWORD PTR [eax]
  40bf5f:	ds or  ebp,edx
  40bf62:	jmp    DWORD PTR [edi-0x2449c331]
  40bf68:	mov    WORD PTR [ecx],fs
  40bf6a:	adc    edi,DWORD PTR [eax]
  40bf6c:	inc    ebp
  40bf6d:	jne    0x40bfbf
  40bf6f:	jecxz  0x40bf5a
  40bf71:	inc    esi
  40bf72:	jne    0x40bff1
  40bf74:	sbb    edx,DWORD PTR [edx+0x71c1b7e]
  40bf7a:	sti    
  40bf7b:	iret   
  40bf7c:	loope  0x40bf86
  40bf7e:	xchg   ecx,eax
  40bf7f:	xchg   edi,eax
  40bf80:	outs   dx,DWORD PTR ds:[esi]
  40bf81:	test   BYTE PTR [ebx+0x10],0x8
  40bf85:	jge    0x40bf8c
  40bf87:	stc    
  40bf88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf89:	ins    BYTE PTR es:[edi],dx
  40bf8a:	js     0x40bfc3
  40bf8c:	pop    edx
  40bf8d:	cmp    BYTE PTR [edi-0x240e5077],bl
  40bf93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf94:	dec    ebp
  40bf95:	push   ds
  40bf96:	mov    ebx,0x29ff3e33
  40bf9b:	out    0xdd,eax
  40bf9d:	mov    ecx,edi
  40bf9f:	dec    edx
  40bfa0:	xlat   BYTE PTR ds:[ebx]
  40bfa1:	sbb    bh,BYTE PTR [ebp-0x60d60ed4]
  40bfa7:	das    
  40bfa8:	push   es
  40bfa9:	lahf   
  40bfaa:	jmp    0xdc0a:0x685d820f
  40bfb1:	popa   
  40bfb2:	into   
  40bfb3:	popf   
  40bfb4:	add    esp,ebp
  40bfb6:	ds xchg edx,eax
  40bfb8:	lods   al,BYTE PTR ds:[esi]
  40bfb9:	stc    
  40bfba:	lods   al,BYTE PTR ds:[esi]
  40bfbb:	dec    ecx
  40bfbc:	hlt    
  40bfbd:	mov    dh,0x69
  40bfbf:	add    al,0x5a
  40bfc1:	xlat   BYTE PTR ds:[ebx]
  40bfc2:	push   edx
  40bfc3:	adc    al,0xb5
  40bfc5:	push   DWORD PTR [ecx+0x1511abbe]
  40bfcb:	push   ebx
  40bfcc:	jbe    0x40bfa9
  40bfce:	adc    al,0x26
  40bfd0:	out    0x10,al
  40bfd2:	or     cl,ch
  40bfd4:	aaa    
  40bfd5:	push   edx
  40bfd6:	mov    bh,0xd7
  40bfd8:	scas   al,BYTE PTR es:[edi]
  40bfd9:	aad    0xdc
  40bfdb:	out    dx,eax
  40bfdc:	push   edi
  40bfdd:	pop    es
  40bfde:	sub    DWORD PTR [ecx-0x80],edx
  40bfe1:	pop    ebx
  40bfe2:	push   ds
  40bfe3:	lock or edx,DWORD PTR [edi-0x28]
  40bfe7:	dec    ecx
  40bfe8:	aaa    
  40bfe9:	test   BYTE PTR [esi-0x46],ch
  40bfec:	push   ebp
  40bfed:	mov    ecx,0x8cf23172
  40bff2:	pop    ebp
  40bff3:	mov    edx,0x39b4f3fb
  40bff8:	push   esi
  40bff9:	outs   dx,DWORD PTR ds:[esi]
  40bffa:	rcr    esi,1
  40bffc:	xor    al,0x49
  40bffe:	popa   
  40bfff:	aad    0x8a
  40c001:	push   0xffffffc7
  40c003:	and    eax,0x13cea667
  40c008:	pop    eax
  40c009:	cmp    BYTE PTR [edi+0x5de197d7],dl
  40c00f:	(bad)  
  40c010:	dec    esp
  40c011:	ja     0x40bf9c
  40c013:	mov    eax,0x991b4907
  40c018:	dec    ecx
  40c019:	or     BYTE PTR [edi-0x26],0x82
  40c01d:	pop    ecx
  40c01e:	dec    eax
  40c01f:	jae    0x40c02d
  40c021:	das    
  40c022:	addr16 xor eax,0x79bc6996
  40c028:	sbb    BYTE PTR [ebp+ebx*2+0x4c8ec68b],ch
  40c02f:	rcr    DWORD PTR [ebx],0xae
  40c032:	and    eax,0xa2f0df18
  40c037:	adc    edx,eax
  40c039:	add    BYTE PTR [esi],0x34
  40c03c:	out    dx,eax
  40c03d:	sahf   
  40c03e:	push   es
  40c03f:	popf   
  40c040:	aad    0x79
  40c042:	mov    al,0x63
  40c044:	icebp  
  40c045:	rcr    DWORD PTR [edx-0x2c],0x80
  40c049:	jmp    0xa93c:0x4dd6fb72
  40c050:	retf   
  40c051:	lahf   
  40c052:	inc    edx
  40c053:	ficomp DWORD PTR [ebp+0x15]
  40c056:	imul   ecx,ebp,0xffffffb9
  40c059:	fistp  DWORD PTR ds:[ebx+0x7b83c81b]
  40c060:	push   edi
  40c061:	into   
  40c062:	sub    ah,BYTE PTR [ecx+0x3b3926d1]
  40c068:	adc    esi,DWORD PTR [ebx+0x429b8ca]
  40c06e:	xor    bl,al
  40c070:	cmp    eax,0x6b0ac08a
  40c075:	ins    DWORD PTR es:[edi],dx
  40c076:	addr16 dec esi
  40c078:	sti    
  40c079:	fcom   DWORD PTR [ebx]
  40c07b:	xchg   ecx,eax
  40c07c:	scas   eax,DWORD PTR es:[edi]
  40c07d:	call   0xcb22:0xe83f1640
  40c084:	aad    0xeb
  40c086:	xor    al,0xbb
  40c088:	mov    cs,WORD PTR [ebp+0x1dc8cd10]
  40c08e:	push   ss
  40c08f:	push   ebx
  40c090:	imul   BYTE PTR [esi+0x4c]
  40c093:	or     BYTE PTR [esi-0x730222f3],dh
  40c099:	push   cs
  40c09a:	scas   al,BYTE PTR es:[edi]
  40c09b:	push   0xf81df6af
  40c0a0:	ror    BYTE PTR [edx-0x697a1891],cl
  40c0a6:	enter  0xb494,0xd0
  40c0aa:	inc    BYTE PTR [ecx]
  40c0ac:	mov    ebp,0x2559bb1c
  40c0b1:	enter  0x9606,0x9
  40c0b5:	shl    ecx,0x8d
  40c0b8:	ss mov ecx,0xde47b597
  40c0be:	(bad)  
  40c0c0:	mov    bh,0x66
  40c0c2:	mov    ch,0x8a
  40c0c4:	add    eax,0xcfb2da57
  40c0c9:	imul   eax,DWORD PTR [bp+di],0x42
  40c0cd:	in     eax,dx
  40c0ce:	jns    0x40c0cb
  40c0d0:	cmp    DWORD PTR [ecx+0xc276374],ebp
  40c0d6:	sbb    al,0x4d
  40c0d8:	jmp    0x6be57fc6
  40c0dd:	clc    
  40c0de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c0df:	and    al,0xba
  40c0e1:	xor    BYTE PTR [edi],0x8f
  40c0e4:	sbb    dh,BYTE PTR [esi+ebp*4+0x70f12658]
  40c0eb:	sub    esi,ecx
  40c0ed:	(bad)  
  40c0ee:	(bad)  
  40c0f0:	jmp    0x5de7:0x30a1badf
  40c0f7:	loop   0x40c150
  40c0f9:	xor    ebx,DWORD PTR [ebp+0x5803bdb4]
  40c0ff:	mov    bh,0x27
  40c101:	xchg   esp,eax
  40c102:	lahf   
  40c103:	push   esp
  40c104:	loope  0x40c185
  40c106:	jnp    0x40c13c
  40c108:	sub    cl,BYTE PTR [edx-0x35fb5d37]
  40c10e:	pop    ebp
  40c10f:	jmp    0x62c2:0x1df7457d
  40c116:	push   0x60
  40c118:	addr16 repz or al,0x8b
  40c11c:	inc    ecx
  40c11d:	mov    ds:0xe8a12c07,eax
  40c122:	aam    0x4f
  40c124:	pop    esp
  40c125:	call   0x90ce54b4
  40c12a:	test   al,0xd7
  40c12c:	sbb    bl,al
  40c12e:	ret    
  40c12f:	jl     0x40c13b
  40c131:	ret    0x8f8f
  40c134:	xor    BYTE PTR ds:[esp+ebp*4+0xe],cl
  40c139:	div    BYTE PTR [edx]
  40c13b:	call   0x6a49:0x3ac67c75
  40c142:	fstp   DWORD PTR [ecx-0x7]
  40c145:	std    
  40c146:	jb     0x40c144
  40c148:	mov    esi,0x2f5a56d0
  40c14d:	aas    
  40c14e:	cdq    
  40c14f:	push   ds
  40c150:	stc    
  40c151:	lea    ecx,ds:0x9e5cab9d
  40c157:	pop    ebx
  40c158:	xchg   cl,bl
  40c15a:	sub    BYTE PTR gs:[ecx],dh
  40c15d:	dec    ecx
  40c15e:	xor    DWORD PTR [ebx+0x62],ecx
  40c161:	or     BYTE PTR [ebp+0x39],dh
  40c164:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c165:	loopne 0x40c17b
  40c167:	loope  0x40c1d4
  40c169:	and    DWORD PTR [eax],edi
  40c16b:	inc    esp
  40c16c:	test   DWORD PTR [ebx],edi
  40c16e:	cmp    DWORD PTR [ebx+0x5],0x46
  40c172:	cmp    al,0xaf
  40c174:	xchg   ecx,eax
  40c175:	ja     0x40c1a4
  40c177:	in     eax,0x4d
  40c179:	rcl    DWORD PTR es:[ecx],cl
  40c17c:	lods   al,BYTE PTR ds:[esi]
  40c17d:	icebp  
  40c17e:	dec    ebx
  40c17f:	ret    0x425e
  40c182:	mov    esi,DWORD PTR [ebp+0x7e]
  40c185:	sti    
  40c186:	data16 mov dh,0xf3
  40c189:	fwait
  40c18a:	mul    edx
  40c18c:	cmp    dl,al
  40c18e:	pop    es
  40c18f:	bound  ecx,QWORD PTR ds:0xea545615
  40c195:	outs   dx,BYTE PTR ds:[esi]
  40c196:	imul   eax,DWORD PTR [ecx],0x3b
  40c199:	std    
  40c19a:	xchg   edx,eax
  40c19b:	popa   
  40c19c:	mov    al,0x7
  40c19e:	lods   al,BYTE PTR ds:[esi]
  40c19f:	retf   
  40c1a0:	aaa    
  40c1a1:	add    al,BYTE PTR [edi+0x2a]
  40c1a4:	jae    0x40c16a
  40c1a6:	pop    edx
  40c1a7:	mov    WORD PTR [edx-0x35],ss
  40c1aa:	pop    es
  40c1ab:	sbb    edx,0x50
  40c1ae:	jmp    0xe7e0:0xbad4ea85
  40c1b5:	add    BYTE PTR [edx],dh
  40c1b7:	arpl   WORD PTR [ecx],ax
  40c1b9:	call   0x7540f976
  40c1be:	ins    BYTE PTR es:[edi],dx
  40c1bf:	xchg   edi,eax
  40c1c0:	sub    eax,0x1bcde882
  40c1c5:	jmp    0x282bb08
  40c1ca:	xchg   DWORD PTR [ebp+0xa7229fd],ebx
  40c1d0:	setbe  BYTE PTR [esi+0x2b]
  40c1d4:	mov    esp,0x4bbc483f
  40c1d9:	ja     0x40c1c5
  40c1db:	in     eax,0x5d
  40c1dd:	mov    BYTE PTR [esi],dl
  40c1df:	inc    ebx
  40c1e0:	xor    esi,DWORD PTR [eax-0x4cb0c618]
  40c1e6:	mov    ch,0xa7
  40c1e8:	(bad)  
  40c1e9:	dec    esi
  40c1ea:	ins    DWORD PTR es:[edi],dx
  40c1eb:	sub    al,0xbe
  40c1ed:	xchg   edi,eax
  40c1ee:	pop    ecx
  40c1ef:	inc    esp
  40c1f0:	mov    esp,0x7ccb6f96
  40c1f5:	cwde   
  40c1f6:	add    ebx,0x47
  40c1f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1fa:	jp     0x40c1ea
  40c1fc:	sub    bl,dh
  40c1fe:	in     al,dx
  40c1ff:	adc    BYTE PTR [esi],ah
  40c201:	enter  0xbf34,0x75
  40c205:	imul   ebp,ebx,0xfffffffc
  40c208:	push   ss
  40c209:	jmp    0x40c1cc
  40c20b:	popf   
  40c20c:	dec    edi
  40c20d:	dec    eax
  40c20e:	stc    
  40c20f:	inc    ecx
  40c210:	dec    eax
  40c211:	popf   
  40c212:	(bad)  
  40c213:	inc    edx
  40c214:	mov    dl,0x7d
  40c216:	cmc    
  40c217:	aad    0xf3
  40c219:	pop    ecx
  40c21a:	xchg   DWORD PTR [ecx+eiz*1],esi
  40c21d:	shl    BYTE PTR [eax-0x42214d42],1
  40c223:	nop
  40c224:	hlt    
  40c225:	or     bh,BYTE PTR [eax+ecx*8+0x136df9da]
  40c22c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c22d:	mov    es,WORD PTR [ebp+edx*1-0x6badd564]
  40c234:	ja     0x40c1fe
  40c236:	cmp    al,0x9e
  40c238:	sbb    ch,BYTE PTR [edi+ebx*8+0x12]
  40c23c:	inc    edx
  40c23d:	in     al,0x74
  40c23f:	rol    DWORD PTR [ecx],0xad
  40c242:	test   al,0x5
  40c244:	cmp    ecx,DWORD PTR [eax]
  40c246:	pop    ebx
  40c247:	ja     0x40c215
  40c249:	into   
  40c24a:	mov    ecx,0xfe75a458
  40c24f:	or     ah,BYTE PTR [edi-0x186bc28a]
  40c255:	daa    
  40c256:	xor    esp,esi
  40c258:	pop    edi
  40c259:	xor    dh,BYTE PTR [edi]
  40c25b:	pushf  
  40c25c:	lods   eax,DWORD PTR ds:[esi]
  40c25d:	jo     0x40c2bd
  40c25f:	out    dx,al
  40c260:	push   edi
  40c261:	shl    DWORD PTR [esi],0xf3
  40c264:	enter  0xccdc,0x1
  40c268:	sbb    cl,BYTE PTR [edx-0x5bb33e2f]
  40c26e:	push   es
  40c26f:	retf   0x67e5
  40c272:	pop    ecx
  40c273:	retf   0x293
  40c276:	test   DWORD PTR [esp+ebp*1],esp
  40c279:	cs push ss
  40c27b:	lods   al,BYTE PTR ds:[esi]
  40c27c:	mov    al,0x9d
  40c27e:	pop    esi
  40c27f:	popf   
  40c280:	mov    esp,0xe5e55749
  40c285:	jp     0x40c2eb
  40c287:	aad    0x3
  40c289:	pop    edi
  40c28a:	mov    dh,0xd
  40c28c:	cli    
  40c28d:	retf   0x1de6
  40c290:	xchg   ebp,eax
  40c291:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c292:	in     al,dx
  40c293:	bound  edx,QWORD PTR [edi+0x1]
  40c296:	leave  
  40c297:	mov    ch,0x65
  40c299:	lods   eax,DWORD PTR ds:[esi]
  40c29a:	stc    
  40c29b:	xor    al,0x9b
  40c29d:	(bad)  
  40c29f:	cmp    cl,bh
  40c2a1:	mov    al,0x3c
  40c2a3:	out    dx,eax
  40c2a4:	push   edi
  40c2a5:	das    
  40c2a6:	in     eax,dx
  40c2a7:	shr    BYTE PTR [edx+0x41],1
  40c2aa:	push   ebx
  40c2ab:	js     0x40c235
  40c2ad:	popa   
  40c2ae:	je     0x40c236
  40c2b0:	mov    ah,0x5c
  40c2b2:	and    cl,BYTE PTR [esi-0x5039c26e]
  40c2b8:	jae    0x40c2d0
  40c2ba:	out    dx,eax
  40c2bb:	xchg   BYTE PTR [eax-0x551b2f63],bl
  40c2c1:	dec    ebx
  40c2c2:	mov    gs,WORD PTR [ebx-0x4339df83]
  40c2c8:	ror    BYTE PTR [ebp+0x77],1
  40c2cb:	icebp  
  40c2cc:	push   ecx
  40c2cd:	add    eax,0xfd753092
  40c2d2:	jecxz  0x40c30e
  40c2d4:	push   eax
  40c2d5:	add    eax,0xfeaa99f0
  40c2da:	mov    ds:0x8bb125dc,al
  40c2df:	daa    
  40c2e0:	cs out dx,al
  40c2e2:	inc    edx
  40c2e3:	add    al,BYTE PTR [ecx]
  40c2e5:	inc    edx
  40c2e6:	push   0xffffff95
  40c2e8:	ins    DWORD PTR es:[edi],dx
  40c2e9:	add    edi,DWORD PTR [ecx+0x47e37a05]
  40c2ef:	sbb    eax,0x48af503d
  40c2f4:	out    dx,al
  40c2f5:	mov    bh,bl
  40c2f7:	rcl    DWORD PTR [ebx],cl
  40c2f9:	shufps xmm1,XMMWORD PTR [edx],0x7f
  40c2fd:	clc    
  40c2fe:	dec    cx
  40c300:	and    BYTE PTR [edx-0x5e],ah
  40c303:	sbb    dl,BYTE PTR [eax+0x19]
  40c306:	cmc    
  40c307:	adc    BYTE PTR [eax],dh
  40c309:	pop    esp
  40c30a:	enter  0xc8c5,0x97
  40c30e:	lock cmp DWORD PTR [ebp-0x42],eax
  40c312:	jg     0x40c2c5
  40c314:	adc    DWORD PTR [edi],ebx
  40c316:	gs inc ebp
  40c318:	not    BYTE PTR [edx+0x14]
  40c31b:	mov    ebp,0xfe37d01c
  40c320:	das    
  40c321:	lock imul ebx,DWORD PTR [ebx],0x4cf3133c
  40c328:	sbb    eax,DWORD PTR [ecx+0x3e]
  40c32b:	xor    al,dh
  40c32d:	mov    cl,0x6
  40c32f:	xor    eax,0xe826991c
  40c334:	jmp    0x36e13519
  40c339:	(bad)  
  40c33b:	imul   edi,DWORD PTR [ecx+0x62],0xf07b93f
  40c342:	mov    bh,0x87
  40c344:	lods   eax,DWORD PTR ds:[esi]
  40c345:	dec    eax
  40c346:	mov    ebp,fs
  40c348:	or     al,0xa6
  40c34a:	(bad)  
  40c34b:	mov    dl,0xb8
  40c34d:	mov    ch,0x32
  40c34f:	sbb    eax,0xe3519c02
  40c354:	(bad)  
  40c355:	fnsave [esi-0x57fb57c0]
  40c35b:	pushf  
  40c35c:	test   BYTE PTR [edi],dl
  40c35e:	imul   ebp,DWORD PTR [esp+ebp*2+0x18666a4],0x56de9f51
  40c369:	mov    ss,WORD PTR [edi+0x4c85c892]
  40c36f:	call   0xbb02f070
  40c374:	and    DWORD PTR [esi-0x5d],0x3e
  40c378:	push   esi
  40c379:	(bad)  
  40c37a:	in     al,dx
  40c37b:	arpl   dx,ax
  40c37d:	push   cs
  40c37e:	ss push 0xc382d8c8
  40c384:	mov    ds:0x1e402309,al
  40c389:	imul   ecx,DWORD PTR [ecx+0x3dff7537],0x42
  40c390:	add    bl,dl
  40c392:	mov    al,ds:0x754830bf
  40c397:	retf   0x4936
  40c39a:	push   esp
  40c39b:	cmc    
  40c39c:	pop    ebx
  40c39d:	mov    ds:0xe4d05f49,eax
  40c3a2:	push   edx
  40c3a3:	jnp    0x40c3b1
  40c3a5:	mov    WORD PTR [esp+eiz*4],?
  40c3a8:	add    DWORD PTR [edx],eax
  40c3aa:	lahf   
  40c3ab:	mov    ecx,0x140b3bf5
  40c3b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c3b1:	stos   BYTE PTR es:[edi],al
  40c3b2:	pop    ds
  40c3b3:	fcmovnb st,st(5)
  40c3b5:	dec    esi
  40c3b6:	pop    ebp
  40c3b7:	iret   
  40c3b8:	and    cl,BYTE PTR [edx]
  40c3ba:	loope  0x40c35f
  40c3bc:	js     0x40c3b5
  40c3be:	pop    esp
  40c3bf:	pop    esi
  40c3c0:	sub    ch,al
  40c3c2:	jmp    0x4dde:0x51068788
  40c3c9:	xor    DWORD PTR ds:[eax-0x2b],0x4
  40c3ce:	xor    DWORD PTR [edi+0x2f],edi
  40c3d1:	shl    DWORD PTR [eax+0x26314819],1
  40c3d7:	int    0x69
  40c3d9:	popa   
  40c3da:	js     0x40c42c
  40c3dc:	sbb    DWORD PTR [eax+0x639942d4],0x9ba4fad9
  40c3e6:	mov    dh,0xe7
  40c3e8:	xor    DWORD PTR [edx+0x1a],0xdb7e5b3c
  40c3ef:	scas   al,BYTE PTR es:[edi]
  40c3f0:	xchg   dh,cl
  40c3f2:	mov    dl,0x70
  40c3f4:	ja     0x40c3ff
  40c3f6:	mov    bh,0x39
  40c3f8:	and    BYTE PTR [esi],cl
  40c3fa:	fs jge 0x40c44c
  40c3fd:	add    eax,0xe548d3f9
  40c402:	nop
  40c403:	gs popa 
  40c405:	stos   BYTE PTR es:[edi],al
  40c406:	fisub  WORD PTR [edi]
  40c408:	or     al,cl
  40c40a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c40b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c40c:	adc    ch,dh
  40c40e:	push   esi
  40c40f:	in     al,dx
  40c410:	add    eax,0x2b164b67
  40c415:	pop    ecx
  40c416:	retf   0x671f
  40c419:	leave  
  40c41a:	out    0x9a,al
  40c41c:	pop    ss
  40c41d:	repnz xchg edx,eax
  40c41f:	idiv   BYTE PTR [esp+edi*1-0x14727223]
  40c426:	aad    0xaa
  40c428:	add    ch,cl
  40c42a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c42b:	mov    al,ds:0xae28cad3
  40c430:	ds ss pop edx
  40c433:	retf   
  40c434:	dec    eax
  40c435:	(bad)  
  40c436:	jno    0x40c3e1
  40c438:	mov    ch,0x3d
  40c43a:	outs   dx,DWORD PTR ds:[esi]
  40c43b:	lea    edx,[edi+0x32]
  40c43e:	leave  
  40c43f:	cmp    BYTE PTR [edx+edx*4+0x5555ceda],bh
  40c446:	ret    0x83c9
  40c449:	dec    ebx
  40c44a:	mov    ah,0xad
  40c44c:	pop    edi
  40c44d:	loope  0x40c4a1
  40c44f:	not    BYTE PTR [ebx+ecx*4-0x480d6e34]
  40c456:	inc    eax
  40c457:	fidivr WORD PTR [eax-0x7a29e85c]
  40c45d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c45e:	fisub  DWORD PTR [esi]
  40c460:	xchg   BYTE PTR ds:0x25d02aba,bh
  40c466:	mov    ?,ebx
  40c468:	mov    esp,0xa3b6472f
  40c46d:	xor    eax,0xc6fe4134
  40c472:	data16 das 
  40c474:	or     dh,BYTE PTR [ecx-0x786eae64]
  40c47a:	int    0x21
  40c47c:	dec    edi
  40c47d:	pop    ecx
  40c47e:	mov    edx,0x3f6b9b00
  40c483:	sbb    ah,BYTE PTR [edi]
  40c485:	jne    0x40c4c5
  40c487:	(bad)  
  40c488:	aas    
  40c489:	(bad)  
  40c48a:	push   ecx
  40c48b:	neg    BYTE PTR [eax]
  40c48d:	inc    edi
  40c48e:	cmp    BYTE PTR [edi+edi*1-0x4e],bl
  40c492:	ja     0x40c4bc
  40c494:	and    eax,0x414df150
  40c499:	xchg   ebp,eax
  40c49a:	icebp  
  40c49b:	shl    DWORD PTR [eax+0x3f],cl
  40c49e:	and    BYTE PTR [esi],al
  40c4a0:	dec    ebp
  40c4a1:	popa   
  40c4a2:	adc    al,0x3e
  40c4a4:	or     al,0xcd
  40c4a6:	outs   dx,DWORD PTR ds:[esi]
  40c4a7:	dec    edi
  40c4a8:	loopne 0x40c456
  40c4aa:	push   ds
  40c4ab:	rcl    BYTE PTR [ebx-0x780c01f4],0xbd
  40c4b2:	inc    ebx
  40c4b3:	mov    ds:0xbc21dbe4,al
  40c4b8:	shr    ch,0x7d
  40c4bb:	aaa    
  40c4bc:	inc    eax
  40c4bd:	inc    edi
  40c4be:	xchg   esp,eax
  40c4bf:	pop    esp
  40c4c0:	not    DWORD PTR [ebx]
  40c4c2:	xlat   BYTE PTR ds:[ebx]
  40c4c3:	pushf  
  40c4c4:	adc    eax,0x9c78775f
  40c4c9:	cmp    edx,eax
  40c4cb:	lock lahf 
  40c4cd:	jnp    0x40c475
  40c4cf:	pop    ss
  40c4d0:	(bad)  
  40c4d1:	loopne 0x40c549
  40c4d3:	lock push ebx
  40c4d5:	mov    al,0xe9
  40c4d7:	stos   BYTE PTR es:[edi],al
  40c4d8:	or     BYTE PTR [edx],dl
  40c4da:	pop    ds
  40c4db:	aas    
  40c4dc:	dec    ecx
  40c4dd:	rol    DWORD PTR [eax-0x2c796439],cl
  40c4e3:	push   0xffffffa6
  40c4e5:	mov    eax,ds:0xbcb1f260
  40c4ea:	or     BYTE PTR [ebp-0x23b29350],bl
  40c4f0:	pop    es
  40c4f1:	(bad)  
  40c4f3:	out    0x28,al
  40c4f5:	jecxz  0x40c56a
  40c4f7:	dec    ebx
  40c4f8:	mov    ecx,0xae7a4e02
  40c4fd:	add    bh,dh
  40c4ff:	push   ss
  40c500:	(bad)  
  40c501:	jnp    0x40c4c3
  40c503:	cmp    eax,0x48816b07
  40c508:	imul   eax,DWORD PTR [ebp+0x37da38f0],0xbba8f7
  40c512:	pushf  
  40c513:	dec    ecx
  40c514:	imul   BYTE PTR [ebp+0x5ab14491]
  40c51a:	lds    esp,FWORD PTR [edx]
  40c51c:	out    0x1e,eax
  40c51e:	mov    ch,0x6c
  40c520:	sub    al,0xd9
  40c522:	imul   ecx,esi,0x22b83bf2
  40c528:	xor    esp,DWORD PTR [ecx+0x36]
  40c52b:	add    eax,0xb1d8ff4d
  40c530:	ror    BYTE PTR [eax],1
  40c532:	push   0x729fc28c
  40c537:	pop    ss
  40c538:	add    ebx,DWORD PTR [edx-0x538bc1d6]
  40c53e:	(bad)  [eax+ebp*8+0x3e6a72bb]
  40c545:	leave  
  40c546:	out    dx,eax
  40c547:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c548:	add    al,0xda
  40c54a:	aad    0xa5
  40c54c:	adc    eax,DWORD PTR [eax-0x26b9b3ad]
  40c552:	pop    ds
  40c553:	test   ecx,edx
  40c555:	out    dx,eax
  40c556:	xor    edi,ebp
  40c558:	push   ebx
  40c559:	js     0x40c5cf
  40c55b:	or     BYTE PTR [edi+0x37],bh
  40c55e:	sub    DWORD PTR [eax+0x42],ebx
  40c561:	je     0x40c5a7
  40c563:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c564:	inc    edi
  40c565:	lods   al,BYTE PTR ds:[esi]
  40c566:	popf   
  40c567:	cli    
  40c568:	xor    DWORD PTR [edx],0xca16a282
  40c56e:	and    edx,DWORD PTR ss:[ecx+0x62]
  40c572:	jg     0x40c5ec
  40c574:	or     bh,BYTE PTR [esi+0x25]
  40c577:	repz pop ecx
  40c579:	xchg   DWORD PTR [ecx],ecx
  40c57b:	mov    BYTE PTR [eax+0x46],ah
  40c57e:	adc    DWORD PTR [ecx+0x62df964c],edx
  40c584:	pop    edi
  40c585:	dec    eax
  40c586:	cdq    
  40c587:	sub    ch,BYTE PTR [edx+0x47a646d7]
  40c58d:	outs   dx,DWORD PTR ds:[esi]
  40c58e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c58f:	or     DWORD PTR fs:[ebx-0x6a],0x51
  40c594:	ds push ds
  40c596:	or     ebp,DWORD PTR [edi]
  40c598:	sti    
  40c599:	dec    ebp
  40c59a:	add    DWORD PTR [ebp-0x314bc0d3],ecx
  40c5a0:	and    ebp,ebp
  40c5a2:	sbb    BYTE PTR [esi+0x1e],0x37
  40c5a6:	cmp    esp,DWORD PTR [ecx+0x4e35c870]
  40c5ac:	out    dx,al
  40c5ad:	rcl    DWORD PTR [ecx],0x23
  40c5b0:	jno    0x40c5b6
  40c5b2:	xchg   esp,eax
  40c5b3:	mov    esi,0x41b56db5
  40c5b8:	push   ecx
  40c5b9:	push   eax
  40c5ba:	mov    bl,0x57
  40c5bc:	out    dx,eax
  40c5bd:	aas    
  40c5be:	cmp    al,0x1f
  40c5c0:	inc    esi
  40c5c1:	mov    esp,0x942c3bdc
  40c5c6:	call   0x35e634da
  40c5cb:	lahf   
  40c5cc:	(bad)  
  40c5cd:	leave  
  40c5ce:	pop    ebp
  40c5cf:	jns    0x40c5a6
  40c5d1:	inc    ebp
  40c5d2:	popa   
  40c5d3:	xor    BYTE PTR [ebx+0xd],bl
  40c5d6:	leave  
  40c5d7:	outs   dx,BYTE PTR ds:[esi]
  40c5d8:	xchg   ebx,eax
  40c5d9:	(bad)  
  40c5db:	sub    bh,BYTE PTR [ebx]
  40c5dd:	rcl    DWORD PTR [ecx+0x42f9b178],1
  40c5e3:	sti    
  40c5e4:	mov    ah,0x1f
  40c5e6:	dec    DWORD PTR [eax]
  40c5e8:	cmp    al,0x98
  40c5ea:	and    DWORD PTR [ebx+ecx*4-0x2],eax
  40c5ee:	mov    cl,0x22
  40c5f0:	cld    
  40c5f1:	les    esi,FWORD PTR [edx+0x3af5423b]
  40c5f7:	jge    0x40c5af
  40c5f9:	push   esp
  40c5fa:	nop
  40c5fb:	fucomp st(0)
  40c5fd:	push   DWORD PTR [eax]
  40c5ff:	in     al,dx
  40c600:	and    al,0xe8
  40c602:	call   0x31471993
  40c607:	cmp    al,cl
  40c609:	imul   DWORD PTR [ecx+0x32]
  40c60c:	pop    edi
  40c60d:	rcr    DWORD PTR [edi+esi*2],cl
  40c610:	test   ebp,ebx
  40c612:	mov    dl,bl
  40c614:	int3   
  40c615:	xor    DWORD PTR [edi-0x32bc20f8],eax
  40c61b:	je     0x40c5c2
  40c61d:	mov    DWORD PTR ds:0xde83c4b1,ebp
  40c623:	pop    edx
  40c624:	xor    DWORD PTR [edx-0x3b268d6c],eax
  40c62a:	pop    ebp
  40c62b:	jbe    0x40c5d0
  40c62d:	mov    esi,esp
  40c62f:	add    DWORD PTR ds:0xef24e093,esp
  40c635:	mov    dh,0x60
  40c637:	push   0xffffffaf
  40c639:	out    dx,eax
  40c63a:	sbb    ah,BYTE PTR [edx+0x13]
  40c63d:	lahf   
  40c63e:	add    al,0x87
  40c640:	into   
  40c641:	mov    al,BYTE PTR [ebp+eiz*1-0x299699ca]
  40c648:	xor    BYTE PTR [edi],dl
  40c64a:	dec    ebx
  40c64b:	push   edi
  40c64c:	mov    ds:0x8a5ad686,eax
  40c651:	or     DWORD PTR [edi+0x570c6dcd],ebp
  40c657:	jl     0x40c5dd
  40c659:	dec    ecx
  40c65a:	and    ah,BYTE PTR [ebx+0x31]
  40c65d:	jg     0x40c6b8
  40c65f:	(bad)  
  40c660:	jbe    0x40c6bd
  40c662:	add    edi,ebp
  40c664:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c665:	push   0xfffffff1
  40c667:	adc    al,BYTE PTR [edi]
  40c669:	pop    ebp
  40c66a:	and    DWORD PTR [ecx+0x5],edi
  40c66d:	mov    bh,0x6d
  40c66f:	fadd   QWORD PTR [ecx-0x1]
  40c672:	push   ds
  40c673:	push   0x38
  40c675:	aaa    
  40c676:	clc    
  40c677:	jbe    0x40c6d6
  40c679:	out    dx,eax
  40c67a:	inc    edi
  40c67b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c67c:	mov    bh,0x40
  40c67e:	sub    ah,BYTE PTR [edx]
  40c680:	int3   
  40c681:	jl     0x40c674
  40c683:	lods   eax,DWORD PTR ds:[esi]
  40c684:	sbb    eax,0x3791df21
  40c689:	mov    ds:0x309b044f,al
  40c68e:	inc    ebp
  40c68f:	mov    ah,0x5
  40c691:	xchg   ebx,eax
  40c692:	sub    esi,DWORD PTR [ebx+0x6c]
  40c695:	cmp    cl,BYTE PTR [ecx+0x11]
  40c698:	std    
  40c699:	mov    bl,0xf0
  40c69b:	(bad)  
  40c69c:	sbb    DWORD PTR es:[esi-0x73],0x61
  40c6a1:	(bad)  
  40c6a3:	pop    ebx
  40c6a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c6a5:	push   ecx
  40c6a6:	lods   al,BYTE PTR ds:[esi]
  40c6a7:	call   0x2088ea70
  40c6ac:	test   al,0x14
  40c6ae:	test   BYTE PTR [ebx-0x53],0xba
  40c6b2:	fsub   st(1),st
  40c6b4:	mov    WORD PTR [ebx-0x6107fc02],fs
  40c6ba:	dec    ebp
  40c6bb:	ror    ah,cl
  40c6bd:	xchg   edi,eax
  40c6be:	mov    bh,0x4f
  40c6c0:	xchg   esi,eax
  40c6c1:	pop    esi
  40c6c2:	call   0x218d6de8
  40c6c7:	sbb    eax,edx
  40c6c9:	repnz frstor [edi+0x5c]
  40c6cd:	aaa    
  40c6ce:	sbb    edx,ebp
  40c6d0:	add    bh,BYTE PTR [esi-0x5a6d6162]
  40c6d6:	push   ebx
  40c6d7:	aaa    
  40c6d8:	push   esi
  40c6d9:	or     ch,cl
  40c6db:	pop    esi
  40c6dc:	inc    esp
  40c6dd:	add    DWORD PTR [eax+0x4da1029],ecx
  40c6e3:	mov    esi,DWORD PTR [eax+0x2d797698]
  40c6e9:	adc    eax,0x3a17de28
  40c6ee:	aad    0x21
  40c6f0:	dec    ecx
  40c6f1:	jle    0x40c719
  40c6f3:	push   ecx
  40c6f4:	addr16 dec ebp
  40c6f6:	xchg   ebx,eax
  40c6f7:	shl    BYTE PTR [ebx-0x4e00df8e],1
  40c6fd:	mov    ds:0xc4fe6c83,al
  40c702:	mov    ebx,0x96e6da5c
  40c707:	and    ah,dl
  40c709:	sbb    eax,0xcbba3262
  40c70e:	xbegin 0xbd5192f0
  40c714:	xchg   ecx,eax
  40c715:	jg     0x40c6d4
  40c717:	in     al,0xac
  40c719:	dec    ebp
  40c71a:	xor    BYTE PTR [edx-0x4c],0xc2
  40c71e:	out    dx,eax
  40c71f:	cmp    DWORD PTR [ebp+0x237ce84f],edi
  40c725:	adc    ebp,DWORD PTR [esi+eax*2-0x57]
  40c729:	or     edx,DWORD PTR [esi+0x3d]
  40c72c:	push   edx
  40c72d:	call   edi
  40c72f:	mov    ebx,0xaabf3a11
  40c734:	pusha  
  40c735:	mov    ds,WORD PTR [ebx-0x4f752675]
  40c73b:	push   0x1535ba8
  40c740:	lahf   
  40c741:	jg     0x40c768
  40c743:	shr    DWORD PTR [ebx],1
  40c745:	mov    WORD PTR [eax+0x5a1cf51e],es
  40c74b:	stc    
  40c74c:	out    dx,al
  40c74d:	add    edi,edx
  40c74f:	packuswb mm1,QWORD PTR [ecx+0x6e9dc0d0]
  40c756:	out    dx,eax
  40c757:	jae    0x40c765
  40c759:	pop    eax
  40c75a:	nop
  40c75b:	jo     0x40c7ab
  40c75d:	ins    DWORD PTR es:[edi],dx
  40c75e:	mov    DWORD PTR [edx],esp
  40c760:	push   eax
  40c761:	rcl    DWORD PTR [edx+0x78],cl
  40c764:	outs   dx,BYTE PTR ds:[esi]
  40c765:	cmp    DWORD PTR [esi-0x14],ecx
  40c768:	sub    ebp,DWORD PTR [edi+eiz*8]
  40c76b:	es out dx,al
  40c76d:	dec    esi
  40c76e:	or     ah,0x2c
  40c771:	jmp    0xabd30136
  40c776:	jge    0x40c76c
  40c778:	cmp    ebp,DWORD PTR [edi]
  40c77a:	dec    esi
  40c77b:	shr    DWORD PTR [ebp-0x36fef055],1
  40c781:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c782:	bound  ebp,QWORD PTR [edx+0x2f]
  40c785:	js     0x40c7f1
  40c787:	jmp    0x3082e694
  40c78c:	or     ebx,ebp
  40c78e:	outs   dx,DWORD PTR ds:[esi]
  40c78f:	aas    
  40c790:	push   cs
  40c791:	cmp    BYTE PTR [edi-0x75ee7df],dl
  40c797:	int    0x24
  40c799:	fiadd  WORD PTR [esi+0x70]
  40c79c:	out    0x41,al
  40c79e:	inc    esp
  40c79f:	in     al,dx
  40c7a0:	sub    ebp,esi
  40c7a2:	mov    ebp,0xfce3d817
  40c7a7:	out    0x4b,al
  40c7a9:	scas   al,BYTE PTR es:[edi]
  40c7aa:	(bad)  
  40c7ab:	in     al,0xd0
  40c7ad:	adc    ah,dl
  40c7af:	xchg   edx,eax
  40c7b0:	dec    edx
  40c7b1:	cmp    al,0x41
  40c7b3:	popa   
  40c7b4:	push   esp
  40c7b5:	add    ch,dh
  40c7b7:	lds    esi,FWORD PTR [ecx-0x58]
  40c7ba:	mov    edi,0x42009f4b
  40c7bf:	mov    es,WORD PTR [esi-0x7f8f10d7]
  40c7c5:	aam    0x97
  40c7c7:	jle    0x40c766
  40c7c9:	and    eax,0x2ec6af6c
  40c7ce:	and    DWORD PTR [edi],esi
  40c7d0:	or     eax,0x111c61b6
  40c7d5:	fwait
  40c7d6:	ret    0x778a
  40c7d9:	mov    ch,BYTE PTR [ecx-0x70b4d66]
  40c7df:	xchg   edx,eax
  40c7e0:	xchg   BYTE PTR [esi+0x77],bh
  40c7e3:	mov    bh,0x27
  40c7e5:	hlt    
  40c7e6:	mov    ecx,0x7c05ca5d
  40c7eb:	jae    0x40c780
  40c7ed:	(bad)  cs:[esi]
  40c7f0:	mov    ebx,0x44cc4b92
  40c7f5:	add    esi,DWORD PTR [edi]
  40c7f7:	rcl    esp,cl
  40c7f9:	dec    esi
  40c7fa:	fiadd  DWORD PTR ds:0x6d0a33c5
  40c800:	mov    esi,0x6b28b03f
  40c805:	pushf  
  40c806:	cwde   
  40c807:	or     ebp,ecx
  40c809:	or     eax,0x4b19d6bc
  40c80e:	test   esp,edx
  40c810:	pop    es
  40c811:	icebp  
  40c812:	pop    eax
  40c813:	xor    dl,dl
  40c815:	mov    ebx,0x833c9c3e
  40c81a:	repnz repz xor eax,0x3e482423
  40c821:	jns    0x40c7fe
  40c823:	cdq    
  40c824:	cwde   
  40c825:	shr    DWORD PTR [esi+0x3440f13f],1
  40c82b:	inc    ebx
  40c82c:	ins    DWORD PTR es:[edi],dx
  40c82d:	lea    ebx,[esi]
  40c82f:	and    al,0x8a
  40c831:	popa   
  40c832:	mov    ebp,0x8c718e
  40c837:	xor    BYTE PTR [ebp+0x218e6ae2],bl
  40c83d:	cmp    al,BYTE PTR [esi+0x5b]
  40c840:	cmp    bl,0xa9
  40c843:	and    al,BYTE PTR [edx+ecx*1-0x11]
  40c847:	mov    BYTE PTR [ecx+0x55],ah
  40c84a:	inc    ebx
  40c84b:	stos   DWORD PTR es:[edi],eax
  40c84c:	sahf   
  40c84d:	mov    bl,0xaf
  40c84f:	and    DWORD PTR [eax],esp
  40c851:	sub    esi,ecx
  40c853:	xchg   ebp,eax
  40c854:	xchg   BYTE PTR [edx+0x38],bl
  40c857:	cmp    dl,dl
  40c859:	ds ins BYTE PTR es:[edi],dx
  40c85b:	adc    DWORD PTR [ecx-0x11],ecx
  40c85e:	test   al,0xb2
  40c860:	popf   
  40c861:	adc    esi,DWORD PTR [eax+esi*8-0x7dd9061b]
  40c868:	fldcw  WORD PTR [ecx-0x728c2f49]
  40c86e:	aad    0x8f
  40c870:	popf   
  40c871:	out    0xf9,al
  40c873:	jl     0x40c854
  40c875:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c876:	pop    edx
  40c877:	pop    ss
  40c878:	push   0xffffff92
  40c87a:	jbe    0x40c814
  40c87c:	inc    ecx
  40c87d:	xor    ch,BYTE PTR [edx+0x4b]
  40c880:	and    eax,0x4c49943a
  40c885:	sahf   
  40c886:	dec    esi
  40c887:	mov    BYTE PTR [ebx+0x7e],bh
  40c88a:	popa   
  40c88b:	mov    eax,ds:0x612fb491
  40c890:	or     eax,0x40674d3f
  40c895:	sub    al,bh
  40c897:	sbb    eax,0x72fed818
  40c89c:	retf   0x5dfe
  40c89f:	push   ebx
  40c8a0:	(bad)  
  40c8a1:	jecxz  0x40c8a0
  40c8a3:	pop    edx
  40c8a4:	div    DWORD PTR [edi+0x4d5b2b25]
  40c8aa:	or     al,0x0
  40c8ac:	jne    0x40c87a
  40c8ae:	add    BYTE PTR [ebx-0x14814919],dh
  40c8b4:	lea    ebx,[edi-0x1e]
  40c8b7:	stc    
  40c8b8:	add    esi,DWORD PTR [edi+0x64]
  40c8bb:	stos   DWORD PTR es:[edi],eax
  40c8bc:	jno    0x40c864
  40c8be:	aaa    
  40c8bf:	mov    esp,DWORD PTR [edi+0x32]
  40c8c2:	pop    es
  40c8c3:	inc    ebp
  40c8c4:	cmp    BYTE PTR [ecx+0x6a],bl
  40c8c7:	jne    0x40c8ba
  40c8c9:	jo     0x40c912
  40c8cb:	jnp    0x40c8e8
  40c8cd:	xor    bh,bl
  40c8cf:	pop    esi
  40c8d0:	jns    0x40c863
  40c8d2:	pop    ebx
  40c8d3:	popa   
  40c8d4:	mov    ebx,0x8320e252
  40c8d9:	mov    esp,0xd19bfcf9
  40c8de:	sub    dh,ch
  40c8e0:	push   ebx
  40c8e1:	cmp    ebp,edi
  40c8e3:	aad    0xd0
  40c8e5:	ja     0x40c8c5
  40c8e7:	or     DWORD PTR [ebx+0x6ef9720f],ebp
  40c8ed:	mov    al,0x42
  40c8ef:	mov    ebp,0x87d9f36
  40c8f4:	xor    edi,DWORD PTR [esi-0x5fc8c596]
  40c8fa:	jae    0x40c973
  40c8fc:	adc    bl,BYTE PTR [ecx]
  40c8fe:	push   0x22
  40c900:	pop    ebp
  40c901:	adc    al,0xf0
  40c903:	int3   
  40c904:	repz mov ebx,esp
  40c907:	mov    bl,BYTE PTR [esi+0x22]
  40c90a:	in     al,dx
  40c90b:	mov    edx,0xfabd7fc1
  40c910:	clc    
  40c911:	cmp    cl,BYTE PTR [ecx-0x45]
  40c914:	fld    QWORD PTR [edi-0x22]
  40c917:	mov    ah,0x22
  40c919:	and    dh,0x8e
  40c91c:	add    DWORD PTR [esp+eiz*8],edi
  40c91f:	mov    DWORD PTR [ecx],ebp
  40c921:	pop    ds
  40c922:	sar    ebx,0xa2
  40c925:	nop
  40c926:	dec    esp
  40c927:	jo     0x40c974
  40c929:	fist   WORD PTR [ecx]
  40c92b:	popf   
  40c92c:	or     DWORD PTR [esi],esi
  40c92e:	inc    esp
  40c92f:	ror    BYTE PTR [ebp-0x63a4b79b],1
  40c935:	scas   al,BYTE PTR es:[edi]
  40c936:	outs   dx,BYTE PTR ds:[esi]
  40c937:	mov    BYTE PTR [ecx+ebp*2-0xf],ah
  40c93b:	sbb    ebx,DWORD PTR [edx]
  40c93d:	dec    esp
  40c93e:	into   
  40c93f:	jle    0x40c923
  40c941:	into   
  40c942:	xchg   ebp,eax
  40c943:	(bad)  
  40c944:	xchg   edx,eax
  40c945:	mov    DWORD PTR [ecx-0x6e38f302],esp
  40c94b:	and    esi,esp
  40c94d:	into   
  40c94e:	push   eax
  40c94f:	and    al,0x4a
  40c951:	xchg   ebx,eax
  40c952:	sbb    eax,0x8ab2de82
  40c957:	lahf   
  40c958:	lahf   
  40c959:	jge    0x40c976
  40c95b:	dec    edx
  40c95c:	sar    BYTE PTR [edx-0x7ba38db],cl
  40c962:	mov    cl,0x85
  40c964:	pushf  
  40c965:	clc    
  40c966:	xor    DWORD PTR ds:0x413d34,0x2984
  40c970:	mov    ecx,DWORD PTR [ebp-0x14]
  40c973:	and    DWORD PTR ds:0x413d24,0x0
  40c97d:	jmp    0x40c990
  40c982:	xor    eax,eax
  40c984:	or     eax,DWORD PTR ds:0x413d24
  40c98a:	inc    eax
  40c98b:	mov    ds:0x413d24,eax
  40c990:	cmp    DWORD PTR ds:0x413d24,0x18
  40c997:	jae    0x40ca0e
  40c99d:	cmp    DWORD PTR ds:0x413d24,0x20
  40c9a4:	jne    0x40c9bd
  40c9aa:	push   0x738d
  40c9af:	push   0x6edb
  40c9b4:	push   DWORD PTR [ebp-0x18]
  40c9b7:	call   DWORD PTR ds:0x416768
  40c9bd:	jmp    0x40c982
  40c9c2:	mov    DWORD PTR ds:0x413c1e,0x1e
  40c9cc:	cmp    DWORD PTR ds:0x413c1e,0x0
  40c9d3:	je     0x40ca0e
  40c9d9:	cmp    DWORD PTR ds:0x413c1e,0x2c
  40c9e0:	jne    0x40c9fe
  40c9e6:	push   0x25a0
  40c9eb:	push   0x413ce4
  40c9f0:	push   0x3cd5
  40c9f5:	push   DWORD PTR [ebp-0x18]
  40c9f8:	call   DWORD PTR ds:0x416770
  40c9fe:	mov    eax,ds:0x413c1e
  40ca03:	dec    eax
  40ca04:	mov    ds:0x413c1e,eax
  40ca09:	jmp    0x40c9cc
  40ca0e:	push   esi
  40ca0f:	sbb    DWORD PTR ds:0x413ce4,0x7973
  40ca19:	mov    eax,0x7510894
  40ca1e:	and    DWORD PTR ds:0x413c1e,0x0
  40ca28:	jmp    0x40ca3a
  40ca2d:	mov    esi,DWORD PTR ds:0x413c1e
  40ca33:	inc    esi
  40ca34:	mov    DWORD PTR ds:0x413c1e,esi
  40ca3a:	cmp    DWORD PTR ds:0x413c1e,0x15
  40ca41:	jae    0x40ca74
  40ca47:	cmp    DWORD PTR ds:0x413c1e,0x1f
  40ca4e:	jne    0x40ca6e
  40ca54:	push   0x413c12
  40ca59:	push   0x88a1
  40ca5e:	push   0x416000
  40ca63:	push   0x416152
  40ca68:	call   DWORD PTR ds:0x416774
  40ca6e:	jmp    0x40ca2d
  40ca73:	inc    esi
  40ca74:	xor    ecx,eax
  40ca76:	sub    esi,DWORD PTR ds:0x413c70
  40ca7c:	mov    esi,0x3272dc
  40ca81:	mov    DWORD PTR ds:0x413c80,0x12bb
  40ca8b:	push   edi
  40ca8c:	xor    DWORD PTR ds:0x413ce4,0x413c6c
  40ca96:	add    ecx,esi
  40ca98:	jmp    0x40cab4
  40ca9d:	mov    dl,BYTE PTR [ebp-0x1]
  40caa0:	not    DWORD PTR ds:0x41400c
  40caa6:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  40caad:	not    DWORD PTR ds:0x413ce8
  40cab3:	inc    ecx
  40cab4:	cmp    ecx,0x40
  40cab7:	mov    DWORD PTR ds:0x413d24,0x3f58
  40cac1:	jb     0x40ca9d
  40cac7:	adc    edx,0x503d
  40cacd:	mov    edx,DWORD PTR [ebp-0x14]
  40cad0:	xor    edx,eax
  40cad2:	add    edx,esi
  40cad4:	jmp    0x40cc01
  40cad9:	and    DWORD PTR ds:0x413c0a,0x1a66
  40cae3:	mov    edi,DWORD PTR [ebp+0x8]
  40cae6:	and    ecx,0xcf4
  40caec:	mov    ecx,0x8a87
  40caf1:	adc    DWORD PTR ds:0x413c12,0x413d
  40cafb:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40cb00:	and    DWORD PTR ds:0x41401c,0x0
  40cb0a:	mov    edi,DWORD PTR ds:0x41401c
  40cb10:	inc    edi
  40cb11:	mov    DWORD PTR ds:0x41401c,edi
  40cb17:	cmp    DWORD PTR ds:0x41401c,0x5
  40cb1e:	jne    0x40cb39
  40cb24:	push   0x6acf
  40cb29:	push   0x413cf4
  40cb2e:	push   0x416152
  40cb33:	call   DWORD PTR ds:0x416778
  40cb39:	cmp    DWORD PTR ds:0x41401c,0x4
  40cb40:	jne    0x40cb53
  40cb46:	mov    edi,DWORD PTR ds:0x41401c
  40cb4c:	inc    edi
  40cb4d:	mov    DWORD PTR ds:0x41401c,edi
  40cb53:	cmp    DWORD PTR ds:0x41401c,0x1b
  40cb5a:	jb     0x40cb0a
  40cb60:	mov    DWORD PTR ds:0x414018,0x15
  40cb6a:	cmp    DWORD PTR ds:0x414018,0x0
  40cb71:	je     0x40cbab
  40cb77:	cmp    DWORD PTR ds:0x414018,0x1b
  40cb7e:	jne    0x40cb8f
  40cb84:	push   0x4160b3
  40cb89:	call   DWORD PTR ds:0x41677c
  40cb8f:	mov    edi,DWORD PTR ds:0x414018
  40cb95:	dec    edi
  40cb96:	mov    DWORD PTR ds:0x414018,edi
  40cb9c:	jmp    0x40cb6a
  40cba1:	xor    DWORD PTR ds:0x414008,0x3196
  40cbab:	mov    edi,0x3b4a
  40cbb0:	add    cx,di
  40cbb3:	sbb    DWORD PTR ds:0x414000,0x24d3
  40cbbd:	movzx  ecx,cx
  40cbc0:	xor    DWORD PTR ds:0x413bfe,0x413c06
  40cbca:	mov    DWORD PTR [ebp-0x10],ecx
  40cbcd:	neg    DWORD PTR ds:0x413c0e
  40cbd3:	mov    ecx,DWORD PTR [ebp+0x8]
  40cbd6:	or     DWORD PTR ds:0x413d20,0x3470
  40cbe0:	movzx  ecx,WORD PTR [ecx+edx*4]
  40cbe4:	xor    DWORD PTR ds:0x413d30,0x413bf6
  40cbee:	xor    ecx,0x8a87
  40cbf4:	add    ecx,edi
  40cbf6:	mov    edi,DWORD PTR [ebp-0x10]
  40cbf9:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  40cc00:	inc    edx
  40cc01:	mov    ecx,DWORD PTR [ebp-0x18]
  40cc04:	cmp    edx,ecx
  40cc06:	mov    DWORD PTR ds:0x414010,0x5811
  40cc10:	jne    0x40cad9
  40cc16:	mov    ecx,DWORD PTR [ebp-0x14]
  40cc19:	mov    DWORD PTR ds:0x413d1c,0x410a
  40cc23:	mov    edx,DWORD PTR [ebp+0x10]
  40cc26:	dec    DWORD PTR ds:0x413cec
  40cc2c:	xor    ecx,eax
  40cc2e:	add    ecx,esi
  40cc30:	and    DWORD PTR ds:0x413c0a,0x5ecf
  40cc3a:	mov    DWORD PTR [edx],ecx
  40cc3c:	dec    ecx
  40cc3d:	mov    ecx,DWORD PTR [ebp-0x14]
  40cc40:	xor    ecx,eax
  40cc42:	and    DWORD PTR ds:0x413bf6,0x413c84
  40cc4c:	add    ecx,esi
  40cc4e:	mov    DWORD PTR ds:0x413c0a,0x45cc
  40cc58:	mov    DWORD PTR [ebp-0x20],ecx
  40cc5b:	not    ecx
  40cc5d:	mov    DWORD PTR [ebp+0x8],0xf89c85b0
  40cc64:	mov    DWORD PTR [ebp-0xc],0xf89c85a0
  40cc6b:	mov    DWORD PTR [ebp-0x1c],0xf89c95b0
  40cc72:	mov    DWORD PTR ds:0x413c6c,edi
  40cc78:	mov    ecx,DWORD PTR [ebp-0xc]
  40cc7b:	mov    DWORD PTR ds:0x413c84,0x129c
  40cc85:	mov    DWORD PTR [ebp+0x8],ecx
  40cc88:	jmp    0x40ce75
  40cc8d:	mov    ecx,DWORD PTR [ebp+0x8]
  40cc90:	add    edx,DWORD PTR ds:0x413c80
  40cc96:	mov    edx,DWORD PTR [ebp-0x8]
  40cc99:	and    DWORD PTR ds:0x413c74,0x413d20
  40cca3:	xor    ecx,eax
  40cca5:	xor    edx,eax
  40cca7:	sub    ecx,edx
  40cca9:	sub    ecx,esi
  40ccab:	xor    ecx,eax
  40ccad:	and    DWORD PTR ds:0x413c1a,0x0
  40ccb7:	mov    edx,DWORD PTR ds:0x413c1a
  40ccbd:	inc    edx
  40ccbe:	mov    DWORD PTR ds:0x413c1a,edx
  40ccc4:	cmp    DWORD PTR ds:0x413c1a,0x9
  40cccb:	jne    0x40cce4
  40ccd1:	push   0x413bfe
  40ccd6:	push   DWORD PTR [ebp-0x20]
  40ccd9:	push   0x4160ed
  40ccde:	call   DWORD PTR ds:0x416780
  40cce4:	cmp    DWORD PTR ds:0x413c1a,0x8
  40cceb:	jne    0x40ccfe
  40ccf1:	mov    edx,DWORD PTR ds:0x413c1a
  40ccf7:	inc    edx
  40ccf8:	mov    DWORD PTR ds:0x413c1a,edx
  40ccfe:	cmp    DWORD PTR ds:0x413c1a,0x10
  40cd05:	jb     0x40ccb7
  40cd0b:	mov    DWORD PTR [ebp+0x8],ecx
  40cd0e:	adc    ecx,ecx
  40cd10:	mov    ecx,DWORD PTR [ebp+0x8]
  40cd13:	mov    DWORD PTR ds:0x413c16,0x3405
  40cd1d:	mov    edx,DWORD PTR [ebp-0x64]
  40cd20:	lea    ecx,[edx+ecx*1+0x5708f1]
  40cd27:	mov    DWORD PTR [ebp-0x64],ecx
  40cd2a:	mov    ecx,DWORD PTR [ebp+0x8]
  40cd2d:	mov    edx,DWORD PTR [ebp-0x60]
  40cd30:	lea    ecx,[edx+ecx*1+0x5708f1]
  40cd37:	movzx  edx,WORD PTR ds:0x413d20
  40cd3e:	sbb    edx,DWORD PTR ds:0x413d28
  40cd44:	mov    DWORD PTR ds:0x413d20,edx
  40cd4a:	mov    DWORD PTR [ebp-0x60],ecx
  40cd4d:	and    DWORD PTR ds:0x414000,0x413d1c
  40cd57:	mov    ecx,DWORD PTR [ebp+0x8]
  40cd5a:	add    DWORD PTR ds:0x413c78,ebx
  40cd60:	mov    edx,DWORD PTR [ebp-0x5c]
  40cd63:	neg    DWORD PTR ds:0x413c02
  40cd69:	lea    ecx,[edx+ecx*1+0x5708f2]
  40cd70:	and    DWORD PTR ds:0x413d20,0x0
  40cd7a:	mov    edx,DWORD PTR ds:0x413d20
  40cd80:	inc    edx
  40cd81:	mov    DWORD PTR ds:0x413d20,edx
  40cd87:	cmp    DWORD PTR ds:0x413d20,0xa
  40cd8e:	jne    0x40cda2
  40cd94:	push   0x413d34
  40cd99:	push   DWORD PTR [ebp-0x24]
  40cd9c:	call   DWORD PTR ds:0x416784
  40cda2:	cmp    DWORD PTR ds:0x413d20,0x9
  40cda9:	jne    0x40cdbe
  40cdaf:	xor    edx,edx
  40cdb1:	add    edx,DWORD PTR ds:0x413d20
  40cdb7:	inc    edx
  40cdb8:	mov    DWORD PTR ds:0x413d20,edx
  40cdbe:	cmp    DWORD PTR ds:0x413d20,0x15
  40cdc5:	jb     0x40cd7a
  40cdcb:	or     DWORD PTR ds:0x413ce8,0x2ce1
  40cdd5:	mov    DWORD PTR [ebp-0x5c],ecx
  40cdd8:	mov    ecx,DWORD PTR [ebp+0x8]
  40cddb:	add    DWORD PTR ds:0x413c1e,ecx
  40cde1:	mov    edx,DWORD PTR [ebp-0x58]
  40cde4:	lea    ecx,[edx+ecx*1+0x5708f3]
  40cdeb:	add    DWORD PTR ds:0x413bfe,ebx
  40cdf1:	mov    DWORD PTR [ebp-0x58],ecx
  40cdf4:	mov    ecx,DWORD PTR [ebp+0x8]
  40cdf7:	or     DWORD PTR ds:0x413c80,0x1524
  40ce01:	mov    edx,DWORD PTR [ebp-0x54]
  40ce04:	lea    ecx,[edx+ecx*1+0x5708fc]
  40ce0b:	adc    edx,DWORD PTR ds:0x41400c
  40ce11:	mov    DWORD PTR [ebp-0x54],ecx
  40ce14:	and    DWORD PTR ds:0x413d20,0x0
  40ce1e:	mov    edx,DWORD PTR ds:0x413d20
  40ce24:	inc    edx
  40ce25:	mov    DWORD PTR ds:0x413d20,edx
  40ce2b:	cmp    DWORD PTR ds:0x413d20,0x12
  40ce32:	jne    0x40ce48
  40ce38:	push   0x8060
  40ce3d:	push   0x41608d
  40ce42:	call   DWORD PTR ds:0x41678c
  40ce48:	cmp    DWORD PTR ds:0x413d20,0x10
  40ce4f:	jb     0x40ce1e
  40ce55:	mov    ecx,DWORD PTR [ebp+0x8]
  40ce58:	sbb    edx,DWORD PTR ds:0x413c0e
  40ce5e:	mov    edx,DWORD PTR [ebp-0x50]
  40ce61:	sbb    DWORD PTR ds:0x413cf4,0x413c16
  40ce6b:	lea    ecx,[edx+ecx*1+0x5708fd]
  40ce72:	mov    DWORD PTR [ebp-0x50],ecx
  40ce75:	and    DWORD PTR ds:0x413c12,0x0
  40ce7f:	mov    ecx,DWORD PTR ds:0x413c12
  40ce85:	inc    ecx
  40ce86:	mov    DWORD PTR ds:0x413c12,ecx
  40ce8c:	cmp    DWORD PTR ds:0x413c12,0x1d
  40ce93:	jne    0x40ceb7
  40ce99:	push   DWORD PTR [ebp-0x20]
  40ce9c:	push   0x413c70
  40cea1:	push   0x4dec
  40cea6:	push   0x4160bf
  40ceab:	push   DWORD PTR [ebp-0x20]
  40ceae:	push   DWORD PTR [ebp-0x10]
  40ceb1:	call   DWORD PTR ds:0x416790
  40ceb7:	cmp    DWORD PTR ds:0x413c12,0x11
  40cebe:	jb     0x40ce7f
  40cec4:	mov    ecx,DWORD PTR [ebp+0x8]
  40cec7:	xor    ecx,eax
  40cec9:	add    ecx,esi
  40cecb:	jne    0x40cc8d
  40ced1:	jmp    0x40f43d
  40ced6:	mov    ecx,DWORD PTR [ebp-0x1c]
  40ced9:	mov    edx,DWORD PTR [ebp-0x8]
  40cedc:	xor    ecx,eax
  40cede:	xor    edx,eax
  40cee0:	sub    ecx,edx
  40cee2:	sub    ecx,esi
  40cee4:	xor    ecx,eax
  40cee6:	mov    DWORD PTR [ebp-0x1c],ecx
  40cee9:	mov    ecx,DWORD PTR [ebp-0xc]
  40ceec:	mov    DWORD PTR [ebp+0x8],ecx
  40ceef:	jmp    0x40cf21
  40cef4:	mov    ecx,DWORD PTR [ebp+0x8]
  40cef7:	mov    edx,DWORD PTR [ebp-0x8]
  40cefa:	xor    ecx,eax
  40cefc:	xor    edx,eax
  40cefe:	sub    ecx,edx
  40cf00:	sub    ecx,esi
  40cf02:	xor    ecx,eax
  40cf04:	mov    DWORD PTR [ebp+0x8],ecx
  40cf07:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf0a:	mov    edx,DWORD PTR [ebp+0x8]
  40cf0d:	imul   edx,edx,0x5708f1
  40cf13:	xor    ecx,eax
  40cf15:	add    ecx,esi
  40cf17:	lea    ecx,[ebp+ecx*4-0x64]
  40cf1b:	mov    edi,DWORD PTR [ecx]
  40cf1d:	add    edx,edi
  40cf1f:	mov    DWORD PTR [ecx],edx
  40cf21:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf24:	xor    ecx,eax
  40cf26:	add    ecx,esi
  40cf28:	jne    0x40cef4
  40cf2e:	mov    ecx,DWORD PTR [ebp-0x20]
  40cf31:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  40cf38:	mov    dl,BYTE PTR [ebp-0x1]
  40cf3b:	cmp    cl,dl
  40cf3d:	je     0x40f39e
  40cf43:	mov    ecx,DWORD PTR [ebp-0x20]
  40cf46:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  40cf4d:	mov    edx,DWORD PTR [ebp+0xc]
  40cf50:	cmp    cl,BYTE PTR [edx]
  40cf52:	jne    0x40f44f
  40cf58:	mov    ecx,DWORD PTR [ebp-0x14]
  40cf5b:	mov    edx,DWORD PTR [ebp+0xc]
  40cf5e:	movsx  edx,BYTE PTR [edx]
  40cf61:	xor    ecx,eax
  40cf63:	add    ecx,esi
  40cf65:	cmp    edx,ecx
  40cf67:	mov    ecx,DWORD PTR [ebp-0xc]
  40cf6a:	mov    DWORD PTR [ebp+0x8],ecx
  40cf6d:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf70:	je     0x411851
  40cf76:	jmp    0x40cfab
  40cf7b:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf7e:	mov    edx,DWORD PTR [ebp-0x8]
  40cf81:	xor    ecx,eax
  40cf83:	xor    edx,eax
  40cf85:	sub    ecx,edx
  40cf87:	sub    ecx,esi
  40cf89:	xor    ecx,eax
  40cf8b:	mov    DWORD PTR [ebp+0x8],ecx
  40cf8e:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf91:	mov    edx,DWORD PTR [ebp+0x8]
  40cf94:	xor    ecx,eax
  40cf96:	imul   edx,edx,0x5708f1
  40cf9c:	add    ecx,esi
  40cf9e:	lea    ecx,[ebp+ecx*4-0x64]
  40cfa2:	mov    edi,DWORD PTR [ecx]
  40cfa4:	add    edx,edi
  40cfa6:	mov    DWORD PTR [ecx],edx
  40cfa8:	mov    ecx,DWORD PTR [ebp+0x8]
  40cfab:	xor    ecx,eax
  40cfad:	add    ecx,esi
  40cfaf:	jne    0x40cf7b
  40cfb5:	mov    ecx,DWORD PTR [ebp-0x14]
  40cfb8:	mov    edx,DWORD PTR [ebp+0x8]
  40cfbb:	xor    ecx,eax
  40cfbd:	xor    edx,eax
  40cfbf:	add    ecx,esi
  40cfc1:	add    edx,esi
  40cfc3:	cmp    ecx,edx
  40cfc5:	jae    0x40f3e3
  40cfcb:	lea    edx,[ecx-0x3272dc]
  40cfd1:	mov    DWORD PTR [ebp-0x18],edx
  40cfd4:	mov    edi,DWORD PTR [ebp-0x18]
  40cfd7:	mov    DWORD PTR [ebp-0x24],0x705fd0e
  40cfde:	lea    edx,[ebp-0x24]
  40cfe1:	mov    DWORD PTR [ebp-0x10],edx
  40cfe4:	mov    edx,DWORD PTR [ebp-0x10]
  40cfe7:	add    DWORD PTR [edx],0x705fa0e
  40cfed:	mov    ebx,DWORD PTR [ebp-0x10]
  40cff0:	xor    edi,eax
  40cff2:	add    edi,DWORD PTR [ebx]
  40cff4:	lea    edx,[ebp+ecx*4-0x64]
  40cff8:	jmp    0x40f380
  40cffd:	sar    BYTE PTR [ebx-0x74043cf0],1
  40d003:	jae    0x40cfc0
  40d005:	dec    ebp
  40d006:	bound  esi,QWORD PTR [eax-0x470fb7a3]
  40d00c:	pushf  
  40d00d:	mov    dl,0xe9
  40d00f:	jl     0x40d08d
  40d011:	pop    es
  40d012:	pop    edi
  40d013:	jl     0x40d091
  40d015:	ins    DWORD PTR es:[edi],dx
  40d016:	fstp   DWORD PTR [ebp+0x1a]
  40d019:	jl     0x40d099
  40d01b:	pop    ebx
  40d01c:	and    BYTE PTR [ebx],cl
  40d01e:	dec    eax
  40d01f:	fld    QWORD PTR [eax]
  40d021:	jmp    0x166dcd42
  40d026:	pop    ebx
  40d027:	cs cld 
  40d029:	out    dx,eax
  40d02a:	loop   0x40d02a
  40d02c:	in     eax,0x95
  40d02e:	rcl    BYTE PTR [eax],cl
  40d030:	pop    ebx
  40d031:	stos   DWORD PTR es:[edi],eax
  40d032:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d034:	mov    dh,0x1d
  40d036:	call   0xf9af:0xa31d29f0
  40d03d:	lds    esp,FWORD PTR [ebx]
  40d03f:	in     al,dx
  40d040:	inc    edx
  40d041:	mov    bl,0x7f
  40d043:	in     al,dx
  40d044:	push   ecx
  40d045:	pop    ecx
  40d046:	ret    
  40d047:	mov    ebp,0xc8f9c32d
  40d04c:	pop    edx
  40d04d:	(bad)  
  40d04e:	pop    ecx
  40d04f:	dec    esi
  40d050:	mov    eax,ds:0x37ad4d6
  40d055:	fdivr  DWORD PTR [edi+0x50]
  40d058:	push   es
  40d059:	imul   ebp,DWORD PTR [eax+edi*4],0xfffffff2
  40d05d:	outs   dx,DWORD PTR ds:[esi]
  40d05e:	sub    eax,0xb0eae6e7
  40d063:	pop    esi
  40d064:	and    dl,0x1f
  40d067:	fcomp  QWORD PTR ds:0xcd0e8400
  40d06d:	jno    0x40cfff
  40d06f:	popa   
  40d070:	adc    edi,DWORD PTR [esi+eiz*1+0x7b]
  40d074:	add    al,0x72
  40d076:	shr    BYTE PTR [ebx+0x3b],1
  40d079:	lods   eax,DWORD PTR ds:[esi]
  40d07a:	xor    ch,cl
  40d07c:	sbb    BYTE PTR [ecx+ecx*4],0x41
  40d080:	xchg   ebx,eax
  40d081:	dec    edx
  40d082:	mov    eax,0x8686c1cf
  40d087:	scas   al,BYTE PTR es:[edi]
  40d088:	call   0x43bb:0xd39704c7
  40d08f:	fbstp  TBYTE PTR [ecx+0x62]
  40d092:	inc    ebx
  40d093:	ins    DWORD PTR es:[edi],dx
  40d094:	jmp    0xb4017d6d
  40d099:	fcomp  DWORD PTR ds:0x92dd5a45
  40d09f:	pop    ds
  40d0a0:	mov    es,edx
  40d0a2:	in     eax,dx
  40d0a3:	or     BYTE PTR [edi],0xf1
  40d0a6:	xlat   BYTE PTR ds:[ebx]
  40d0a7:	dec    edx
  40d0a8:	aaa    
  40d0a9:	ds retf 0xffec
  40d0ad:	rcl    edx,1
  40d0af:	rcl    DWORD PTR ds:0x43a3e845,cl
  40d0b5:	add    dl,BYTE PTR ds:0xbc258733
  40d0bb:	inc    eax
  40d0bc:	test   al,0x6f
  40d0be:	shr    BYTE PTR [edx],cl
  40d0c0:	into   
  40d0c1:	fldcw  WORD PTR [ebp+0x3b]
  40d0c4:	in     eax,0xad
  40d0c6:	ja     0x40d11d
  40d0c8:	pop    ebx
  40d0c9:	inc    esi
  40d0ca:	cmp    esp,DWORD PTR [esi-0x60a2bbf2]
  40d0d0:	(bad)  
  40d0d1:	mov    edx,0xc4771da9
  40d0d6:	dec    edi
  40d0d7:	enter  0xfc8,0xdd
  40d0db:	mov    bl,0xa5
  40d0dd:	test   eax,0x89d7a825
  40d0e2:	test   eax,0x2cce1c0d
  40d0e7:	imul   esp,DWORD PTR [ebx+eax*1],0x1351f873
  40d0ee:	dec    eax
  40d0ef:	scas   al,BYTE PTR es:[edi]
  40d0f0:	mov    ebx,0x4393fb68
  40d0f5:	xchg   BYTE PTR [ecx],ah
  40d0f7:	adc    esi,DWORD PTR [edx-0x6421f9fe]
  40d0fd:	pop    ss
  40d0fe:	popa   
  40d0ff:	js     0x40d0d8
  40d101:	push   edi
  40d102:	shl    ecx,0x3a
  40d105:	and    cl,cl
  40d107:	xor    ecx,DWORD PTR [ebx]
  40d109:	pusha  
  40d10a:	sub    DWORD PTR [edx+0x76e40758],ebx
  40d110:	out    0xf0,eax
  40d112:	adc    al,0x8c
  40d114:	cld    
  40d115:	mov    edi,0x1d3801e2
  40d11a:	push   ebp
  40d11c:	dec    esi
  40d11d:	cmp    eax,0xd5bb577f
  40d122:	jno    0x40d141
  40d124:	in     eax,dx
  40d125:	into   
  40d126:	cmp    BYTE PTR [edx+0xc],0x93
  40d12a:	leave  
  40d12b:	arpl   WORD PTR [ecx+0x123fff31],di
  40d131:	cmc    
  40d132:	out    dx,eax
  40d133:	lock ins DWORD PTR es:[edi],dx
  40d135:	adc    DWORD PTR [edi+ecx*4],ebx
  40d138:	push   0xf9304b63
  40d13d:	cld    
  40d13e:	fbstp  TBYTE PTR [edx]
  40d140:	retf   0xff3
  40d143:	dec    edi
  40d144:	xor    esp,DWORD PTR [edi]
  40d146:	mov    al,ds:0x6d00f1af
  40d14b:	mov    edi,0x80a80bff
  40d150:	cmovs  eax,DWORD PTR [eax-0x7]
  40d154:	mov    esi,0xe9d4b9fb
  40d159:	xchg   BYTE PTR [eax+0x0],dl
  40d15c:	cmc    
  40d15d:	enter  0x9ae7,0x19
  40d161:	or     bl,BYTE PTR [ecx+0x558d379f]
  40d167:	mov    WORD PTR [ecx+0x1d],ds
  40d16a:	jmp    0x7ec4d64f
  40d16f:	push   ebx
  40d170:	cs mov dh,0x45
  40d173:	push   edx
  40d174:	test   DWORD PTR [edx],esp
  40d176:	popf   
  40d177:	sbb    BYTE PTR [edx],ah
  40d179:	push   esi
  40d17a:	add    eax,0x77e65ac8
  40d17f:	pop    esi
  40d180:	mov    al,0xf6
  40d182:	shl    BYTE PTR [edx+0x51495d7b],cl
  40d188:	hlt    
  40d189:	push   0xffffff92
  40d18b:	pop    es
  40d18c:	idiv   BYTE PTR [eax-0x4c]
  40d18f:	jo     0x40d1d8
  40d191:	test   eax,0xb89b3a79
  40d196:	adc    edi,edx
  40d198:	mov    ch,0x20
  40d19a:	lods   eax,DWORD PTR ds:[esi]
  40d19b:	push   cs
  40d19c:	pop    ebp
  40d19d:	pop    ss
  40d19e:	daa    
  40d19f:	xor    eax,ecx
  40d1a1:	fnstenv ds:0x7b8d0562
  40d1a7:	(bad)  
  40d1a9:	jl     0x40d192
  40d1ab:	adc    ch,BYTE PTR [ebp+0x1e]
  40d1ae:	cli    
  40d1af:	shl    al,1
  40d1b1:	lahf   
  40d1b2:	or     esp,ebp
  40d1b4:	dec    ecx
  40d1b5:	ror    DWORD PTR [esi-0x942ec35],cl
  40d1bb:	popa   
  40d1bc:	mov    al,cl
  40d1be:	mov    esp,0xae31ad19
  40d1c3:	sbb    edi,DWORD PTR [edx+0x6c9959e9]
  40d1c9:	mov    edi,0x377fe6c0
  40d1ce:	mov    esp,0x35b5d950
  40d1d3:	or     BYTE PTR [esi+0x5eb18c83],dl
  40d1d9:	loope  0x40d246
  40d1db:	ss hlt 
  40d1dd:	xchg   edx,eax
  40d1de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d1df:	sbb    DWORD PTR [edi+ecx*2-0x11dd0a0d],ebp
  40d1e6:	adc    DWORD PTR [ebx],ebp
  40d1e8:	pop    es
  40d1e9:	cmp    al,0x60
  40d1eb:	ret    
  40d1ec:	jp     0x40d1af
  40d1ee:	mov    bl,0xd6
  40d1f0:	pop    DWORD PTR ds:0x70ea4b59
  40d1f6:	mov    ds:0x22c825a4,al
  40d1fb:	push   eax
  40d1fc:	pop    ds
  40d1fd:	cmp    BYTE PTR ds:0x8e1c4849,al
  40d203:	sub    ah,BYTE PTR [ecx-0x19ce1e25]
  40d209:	jbe    0x40d1e5
  40d20b:	leave  
  40d20c:	sbb    esp,DWORD PTR [ebx-0xd]
  40d20f:	xchg   edx,eax
  40d210:	or     DWORD PTR [edi+eiz*1],0x47
  40d214:	inc    esp
  40d215:	into   
  40d216:	jae    0x40d233
  40d218:	push   0x55
  40d21a:	adc    al,0xd
  40d21c:	xchg   esi,eax
  40d21d:	pop    eax
  40d21e:	and    al,0xc1
  40d220:	xor    eax,0x843ff553
  40d225:	jge    0x40d1bb
  40d227:	(bad)  
  40d228:	out    dx,eax
  40d229:	leavew 
  40d22b:	js     0x40d26b
  40d22d:	jae    0x40d1f9
  40d22f:	sbb    BYTE PTR [ecx-0x3],0xe6
  40d233:	in     eax,0x32
  40d235:	mov    esp,0x7b53555f
  40d23a:	sub    DWORD PTR [esp+esi*1],0x5f562637
  40d241:	(bad)  
  40d242:	loop   0x40d201
  40d244:	push   cs
  40d245:	lahf   
  40d246:	jno    0x40d1f6
  40d248:	(bad)  
  40d249:	xor    al,0xaa
  40d24b:	in     al,0xd0
  40d24d:	(bad)  
  40d24e:	inc    esi
  40d24f:	adc    eax,0xc60f7f9c
  40d254:	push   edi
  40d255:	mul    DWORD PTR [edx-0x50]
  40d258:	mul    DWORD PTR [esi+0x1e]
  40d25b:	mov    cl,BYTE PTR [ebp+0x62]
  40d25e:	push   ebx
  40d25f:	pop    ebx
  40d260:	les    esp,FWORD PTR [eax-0x26b8102]
  40d266:	xlat   BYTE PTR ds:[ebx]
  40d267:	xchg   DWORD PTR [ecx],ebp
  40d269:	sub    ebx,DWORD PTR [esp+esi*8+0x1a]
  40d26d:	arpl   WORD PTR [esi-0x759e0fba],di
  40d273:	ss iret 
  40d275:	sub    eax,0xd672241
  40d27a:	sar    esp,1
  40d27c:	sub    eax,0x801e44d3
  40d281:	add    ebx,DWORD PTR [eax-0x7]
  40d284:	arpl   WORD PTR [eax+eax*4+0x66],bx
  40d288:	ins    DWORD PTR es:[edi],dx
  40d289:	in     al,0x8d
  40d28b:	or     DWORD PTR [ebx],edi
  40d28d:	add    al,0x15
  40d28f:	cld    
  40d290:	repz addr16 aas 
  40d293:	mov    dl,0x78
  40d295:	mov    ds:0x789adf,eax
  40d29a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d29b:	xchg   ebx,eax
  40d29c:	mov    al,0x8d
  40d29e:	dec    esi
  40d29f:	or     DWORD PTR [ecx+ebx*4-0x549b1332],0x32
  40d2a7:	mov    dh,0x29
  40d2a9:	mov    edi,0x49647b9f
  40d2ae:	pop    esi
  40d2af:	call   0xa24a:0x45bad3c3
  40d2b6:	inc    edi
  40d2b7:	loopne 0x40d2fe
  40d2b9:	sbb    DWORD PTR ds:0xab19e1fa,ebp
  40d2bf:	dec    ecx
  40d2c0:	mov    al,ds:0x4254e990
  40d2c5:	mov    ds:0xb2aa1f97,al
  40d2ca:	inc    ecx
  40d2cb:	push   ecx
  40d2cc:	call   0x5442c711
  40d2d1:	in     eax,dx
  40d2d2:	dec    esp
  40d2d3:	jno    0x40d30b
  40d2d5:	pop    esi
  40d2d6:	fs popa 
  40d2d8:	out    dx,eax
  40d2d9:	xor    DWORD PTR [ecx],0xcafe2074
  40d2df:	mov    bh,0x25
  40d2e1:	scas   al,BYTE PTR es:[edi]
  40d2e2:	and    dl,BYTE PTR [eax-0x7fbc662e]
  40d2e8:	out    dx,al
  40d2e9:	fs or  bl,dh
  40d2ec:	dec    ebx
  40d2ed:	push   ss
  40d2ee:	(bad)  
  40d2ef:	gs mov al,0xfb
  40d2f2:	stc    
  40d2f3:	sbb    eax,0x80a57da4
  40d2f8:	call   0x5ad3:0x65059f53
  40d2ff:	(bad)  
  40d300:	sbb    ebx,eax
  40d302:	push   esp
  40d303:	sahf   
  40d304:	adc    ch,BYTE PTR [eax+0x15e708bd]
  40d30a:	ret    
  40d30b:	fs xchg ecx,eax
  40d30d:	sbb    ebp,DWORD PTR [edx]
  40d30f:	fcomip st,st(4)
  40d311:	sbb    DWORD PTR [ebx+0x4067eb5d],0x3d
  40d318:	call   0x9416:0xb8b94ed3
  40d31f:	mov    cl,0x0
  40d321:	je     0x40d312
  40d323:	cmp    BYTE PTR [edi-0x1a],0xd9
  40d327:	hlt    
  40d328:	xchg   esi,eax
  40d329:	pop    esp
  40d32a:	inc    ebp
  40d32b:	(bad)  
  40d32c:	jmp    0xb17e:0xa206e651
  40d333:	add    DWORD PTR [edi],0x9c6a6c0d
  40d339:	cmp    dh,ch
  40d33b:	into   
  40d33c:	xor    eax,0x23b9b7f4
  40d341:	cli    
  40d342:	jp     0x40d3a4
  40d344:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d345:	dec    ebx
  40d346:	fldenv [ecx+ebp*2-0x1ecbac7e]
  40d34d:	mov    esp,ebx
  40d34f:	push   eax
  40d351:	cmp    ah,BYTE PTR [eax]
  40d353:	in     eax,0x46
  40d355:	mov    edx,ecx
  40d357:	in     al,0x71
  40d359:	(bad)  
  40d35a:	aam    0x95
  40d35c:	sar    ah,0x77
  40d35f:	dec    ebp
  40d360:	imul   esp,DWORD PTR [ecx+0x4e61366a],0xffffff80
  40d367:	cmp    eax,0xa7197123
  40d36c:	call   0xe0f3:0x52b975bd
  40d373:	push   cs
  40d374:	sub    bl,dh
  40d376:	outs   dx,DWORD PTR ds:[esi]
  40d377:	mov    eax,0xbf0edcfa
  40d37c:	imul   edi,DWORD PTR [ebp-0x62],0xffffffaf
  40d380:	xor    eax,0x62a197e7
  40d385:	imul   ecx,DWORD PTR [esi-0x78],0x3ce295da
  40d38c:	xchg   ebp,eax
  40d38d:	scas   eax,DWORD PTR es:[edi]
  40d38e:	cmp    al,0x97
  40d390:	add    al,0x5d
  40d392:	xchg   esi,eax
  40d393:	sub    bh,BYTE PTR [ebx-0xb]
  40d396:	gs retf 0xd12a
  40d39a:	arpl   WORD PTR [edx],si
  40d39c:	js     0x40d3ee
  40d39e:	jg     0x40d343
  40d3a0:	or     DWORD PTR [esi-0x14],ebp
  40d3a3:	cld    
  40d3a4:	pusha  
  40d3a5:	inc    esi
  40d3a6:	xchg   DWORD PTR [esi+0x7b],edi
  40d3a9:	jnp    0x40d3ab
  40d3ab:	jl     0x40d386
  40d3ad:	(bad)  
  40d3ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d3af:	aaa    
  40d3b0:	add    bl,BYTE PTR [edx+ecx*2+0x373091ae]
  40d3b7:	and    dh,bh
  40d3b9:	xchg   BYTE PTR [edx+edi*8+0x46],dl
  40d3bd:	imul   esi,DWORD PTR [edi],0xacbd89f8
  40d3c3:	(bad)  
  40d3c4:	push   eax
  40d3c5:	test   BYTE PTR [ebx-0x21a2f041],dh
  40d3cb:	outs   dx,BYTE PTR ds:[esi]
  40d3cc:	ret    
  40d3cd:	adc    BYTE PTR [edi],dh
  40d3cf:	and    eax,0x96579a9d
  40d3d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d3d5:	outs   dx,BYTE PTR ds:[esi]
  40d3d6:	mov    DWORD PTR [eax],edi
  40d3d8:	mov    eax,ds:0x8d56560b
  40d3dd:	xchg   edx,eax
  40d3de:	leave  
  40d3df:	pop    ds
  40d3e0:	xchg   ebx,eax
  40d3e1:	ficomp WORD PTR [ecx+0x53]
  40d3e4:	shr    BYTE PTR [esi],1
  40d3e6:	mov    dh,BYTE PTR [esp+ebp*4+0x2ecb687c]
  40d3ed:	shl    ch,1
  40d3ef:	pop    ebx
  40d3f0:	int3   
  40d3f1:	in     eax,0x48
  40d3f3:	fnstcw WORD PTR [edi-0x48c825c1]
  40d3f9:	cmp    al,0x8f
  40d3fb:	das    
  40d3fc:	sbb    edx,DWORD PTR [esi-0xb49218]
  40d402:	das    
  40d403:	sbb    ch,BYTE PTR [edi]
  40d405:	pop    ecx
  40d406:	xchg   esi,eax
  40d407:	jg     0x40d3fd
  40d409:	enter  0x6243,0x57
  40d40d:	jge    0x40d435
  40d40f:	xchg   ebx,eax
  40d410:	push   ebp
  40d411:	neg    DWORD PTR [ebx+0x5e]
  40d414:	add    DWORD PTR [ebx-0x5163b04c],edx
  40d41a:	into   
  40d41b:	in     al,dx
  40d41c:	jl     0x40d40e
  40d41e:	retf   
  40d41f:	ror    dh,1
  40d421:	or     BYTE PTR [esi+0x76],al
  40d424:	and    ah,ch
  40d426:	ja     0x40d3ee
  40d428:	adc    dl,BYTE PTR [edx-0x32a07a1a]
  40d42e:	and    eax,0xeb170a22
  40d433:	addr16 jo 0x40d41f
  40d436:	mov    BYTE PTR [ebx+esi*4-0x5e],bl
  40d43a:	clc    
  40d43b:	push   ebx
  40d43c:	test   BYTE PTR [ebx-0x3297a67c],bl
  40d442:	xchg   ch,bl
  40d444:	pop    ecx
  40d445:	(bad)  
  40d446:	mov    dl,0x9a
  40d448:	ror    DWORD PTR [ecx-0x52],cl
  40d44b:	xchg   esp,eax
  40d44c:	or     BYTE PTR [edi+0x38],cl
  40d44f:	sbb    eax,0xa599cec6
  40d454:	push   es
  40d455:	bound  ecx,QWORD PTR [ecx-0x6a741092]
  40d45b:	mov    ebp,0xb1167f9c
  40d460:	js     0x40d450
  40d462:	mov    cl,0xb2
  40d464:	(bad)  
  40d465:	mov    ds:0xffff7ee8,eax
  40d46a:	(bad)  
  40d46b:	stos   BYTE PTR es:[edi],al
  40d46c:	cmp    bh,BYTE PTR [esi-0x21]
  40d46f:	cmp    DWORD PTR [ebp-0x3f],ebp
  40d472:	test   eax,0xa19aafec
  40d477:	xchg   ebp,edx
  40d479:	push   edx
  40d47a:	jne    0x40d4ef
  40d47c:	arpl   WORD PTR [eax-0x1c],bp
  40d47f:	rcl    esp,0x3f
  40d482:	daa    
  40d483:	mov    eax,0x85ba69f8
  40d488:	xor    eax,0xf0cea3fb
  40d48d:	adc    eax,0x851c2e53
  40d492:	call   0x61ca211a
  40d497:	scas   al,BYTE PTR es:[edi]
  40d498:	cdq    
  40d499:	fs clc 
  40d49b:	(bad)  
  40d49c:	push   ecx
  40d49d:	jp     0x40d49e
  40d49f:	or     ebp,DWORD PTR [ecx]
  40d4a1:	cmp    DWORD PTR [esi],0xffffffca
  40d4a4:	dec    ebp
  40d4a5:	cwde   
  40d4a6:	fld    QWORD PTR [ebx]
  40d4a8:	in     al,0x79
  40d4aa:	jo     0x40d461
  40d4ac:	pop    ss
  40d4ad:	xchg   edi,eax
  40d4ae:	push   edi
  40d4af:	add    al,0xe4
  40d4b1:	int3   
  40d4b2:	mov    ds:0xb4dedc90,eax
  40d4b7:	and    esp,DWORD PTR gs:[edi+0x6d7334ea]
  40d4be:	cdq    
  40d4bf:	mov    ecx,0xce371960
  40d4c4:	or     DWORD PTR [eax-0x751709a3],esi
  40d4ca:	add    al,0x43
  40d4cc:	stos   DWORD PTR es:[edi],eax
  40d4cd:	mov    al,0x4d
  40d4cf:	cmc    
  40d4d0:	and    BYTE PTR [edx-0x1],dh
  40d4d3:	call   0x1456:0x1e4ec4fc
  40d4da:	loop   0x40d4e6
  40d4dc:	xor    BYTE PTR [edx+0x4f],0xc3
  40d4e0:	mov    dl,0x5b
  40d4e2:	or     DWORD PTR [ebx+0x44ffaf6c],0x16
  40d4e9:	outs   dx,BYTE PTR ds:[esi]
  40d4ea:	jbe    0x40d499
  40d4ec:	mov    ?,WORD PTR [esi+ebx*1-0x4c58e7dc]
  40d4f3:	loop   0x40d4c3
  40d4f5:	jbe    0x40d51a
  40d4f7:	pop    esp
  40d4f8:	fld    TBYTE PTR [ebx+0x5ff746cb]
  40d4fe:	aad    0x11
  40d500:	push   cs
  40d501:	je     0x40d529
  40d503:	outs   dx,DWORD PTR ds:[esi]
  40d504:	push   esi
  40d505:	(bad)  [edi+eiz*8-0x36]
  40d509:	lds    eax,FWORD PTR [eax]
  40d50b:	inc    edx
  40d50c:	adc    BYTE PTR [eax+0x79],dl
  40d50f:	daa    
  40d510:	sbb    DWORD PTR [edi+0x71],esi
  40d513:	ret    0x9528
  40d516:	aas    
  40d517:	stos   DWORD PTR es:[edi],eax
  40d518:	outs   dx,BYTE PTR ds:[esi]
  40d519:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d51a:	mov    eax,ds:0x482a047
  40d51f:	add    ch,BYTE PTR [ebp-0x4d]
  40d522:	sub    esp,DWORD PTR [edi-0x325d17b7]
  40d528:	adc    eax,0x8069793a
  40d52d:	adc    eax,0xd2f269e6
  40d533:	test   al,0x54
  40d535:	pop    ss
  40d536:	ror    ah,0xad
  40d539:	jp     0x40d59b
  40d53b:	cmpps  xmm1,XMMWORD PTR [esi],0xb4
  40d53f:	mov    al,0x18
  40d541:	retf   0xaf21
  40d544:	lods   eax,DWORD PTR ds:[esi]
  40d545:	daa    
  40d546:	adc    eax,0x589efa77
  40d54b:	scas   eax,DWORD PTR es:[edi]
  40d54c:	iret   
  40d54d:	fisubr DWORD PTR [edi-0x74]
  40d550:	dec    esi
  40d551:	jge    0x40d4e9
  40d553:	sar    DWORD PTR [esi-0x31],1
  40d556:	add    ah,al
  40d558:	jmp    0x40d548
  40d55a:	stc    
  40d55b:	mov    bh,0x22
  40d55d:	jle    0x40d5cd
  40d55f:	or     BYTE PTR [edx+0x22],ch
  40d562:	pop    es
  40d563:	ret    
  40d564:	dec    esi
  40d565:	mov    al,ch
  40d567:	shr    DWORD PTR [ecx+0x383fdd07],1
  40d56d:	dec    edi
  40d56e:	sub    eax,0x67727e20
  40d573:	or     eax,0x2ede9f69
  40d578:	jns    0x40d5d6
  40d57a:	jae    0x40d5b1
  40d57c:	cdq    
  40d57d:	dec    edx
  40d57e:	mov    cl,0xf2
  40d580:	sahf   
  40d581:	push   ebx
  40d582:	jmp    0x143d:0xa6f737be
  40d589:	sbb    DWORD PTR [edi+0x74],0x7e497aac
  40d590:	mov    eax,ds:0xae602178
  40d595:	(bad)
  40d599:	retf   0x3ba9
  40d59c:	push   ebp
  40d59d:	ins    BYTE PTR es:[edi],dx
  40d59e:	inc    edi
  40d59f:	sahf   
  40d5a0:	int    0x57
  40d5a2:	shr    BYTE PTR [edx],1
  40d5a4:	addr16 es fwait
  40d5a7:	(bad)  
  40d5a8:	iret   
  40d5a9:	repz jge 0x40d5dc
  40d5ac:	jae    0x40d5e3
  40d5ae:	int    0xf3
  40d5b0:	loop   0x40d5e0
  40d5b2:	mov    dh,0x74
  40d5b4:	mov    bl,0x66
  40d5b6:	sub    edx,DWORD PTR [ecx+0x8a376ae]
  40d5bc:	push   0x54d6587d
  40d5c1:	sub    eax,0x7f640cca
  40d5c6:	xor    eax,ecx
  40d5c8:	pop    ds
  40d5c9:	gs fs push edx
  40d5cc:	push   edx
  40d5cd:	jmp    0x40d60a
  40d5cf:	mov    eax,ds:0x4c2bb854
  40d5d4:	ins    BYTE PTR es:[edi],dx
  40d5d5:	sub    al,0x93
  40d5d7:	pop    ebp
  40d5d8:	in     al,0x75
  40d5da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d5db:	repnz cmp ebx,ebx
  40d5de:	test   BYTE PTR [esi],ch
  40d5e0:	(bad)  
  40d5e1:	jbe    0x40d582
  40d5e3:	stos   BYTE PTR es:[edi],al
  40d5e4:	sbb    al,BYTE PTR [esi-0x72]
  40d5e7:	lock inc esi
  40d5e9:	stos   BYTE PTR es:[edi],al
  40d5ea:	test   al,0x18
  40d5ec:	mul    BYTE PTR [esi]
  40d5ee:	mov    esi,0xda478267
  40d5f3:	mov    dl,0x62
  40d5f5:	leave  
  40d5f6:	in     eax,dx
  40d5f7:	lea    edx,[edi-0x55271854]
  40d5fd:	or     dh,BYTE PTR [edi]
  40d5ff:	jle    0x40d645
  40d601:	out    dx,eax
  40d602:	xchg   bl,dl
  40d604:	mov    edx,DWORD PTR [ecx+0x0]
  40d607:	inc    edx
  40d608:	dec    esp
  40d609:	pop    ebx
  40d60a:	lahf   
  40d60b:	push   ss
  40d60c:	sub    al,0x95
  40d60e:	jns    0x40d67c
  40d610:	test   al,0xa3
  40d612:	mov    al,ds:0x68c95cef
  40d617:	add    BYTE PTR [ebx+0x6],al
  40d61a:	(bad)  [edi]
  40d61c:	cs retf 0xb9e0
  40d620:	dec    ebp
  40d621:	sub    DWORD PTR [ecx+0x67],ebp
  40d624:	fwait
  40d625:	xor    dh,BYTE PTR [esi+0x21207cf7]
  40d62b:	adc    ch,BYTE PTR ds:0x1eb68330
  40d631:	icebp  
  40d632:	and    ah,ah
  40d634:	push   eax
  40d635:	mov    BYTE PTR [edi],bl
  40d637:	adc    eax,0x76f5c8e5
  40d63c:	sub    DWORD PTR [edx],ecx
  40d63e:	and    ebx,ebx
  40d640:	pop    edx
  40d641:	dec    edx
  40d642:	repz sbb eax,0x927cdef8
  40d648:	scas   al,BYTE PTR es:[edi]
  40d649:	push   ds
  40d64a:	std    
  40d64b:	pushf  
  40d64c:	lock fstp TBYTE PTR [edx-0x5]
  40d650:	sbb    BYTE PTR [ebx+0x3543aba7],cl
  40d656:	int    0xba
  40d658:	jo     0x40d5e3
  40d65a:	neg    DWORD PTR [eax+esi*8-0x3e]
  40d65e:	mov    WORD PTR ds:0xaf72e6c9,?
  40d664:	jo     0x40d5f2
  40d666:	in     al,dx
  40d667:	pushf  
  40d668:	pop    edx
  40d669:	lock pusha 
  40d66b:	bound  edi,QWORD PTR [esi]
  40d66d:	lea    eax,[ebp-0x37]
  40d670:	inc    ecx
  40d671:	add    BYTE PTR [ebx-0x7d],dl
  40d674:	cmp    bl,ch
  40d676:	ret    0xc82b
  40d679:	mul    dl
  40d67b:	(bad)  
  40d67c:	fisubr WORD PTR [ebp-0x5bef49e0]
  40d682:	mov    al,ds:0x6a6a04b3
  40d687:	fist   WORD PTR [esp+edx*8]
  40d68a:	out    dx,al
  40d68b:	mov    ds:0xb3198a9c,eax
  40d690:	fcmove st,st(4)
  40d692:	and    al,0x36
  40d694:	pushf  
  40d695:	aad    0x1a
  40d697:	ror    BYTE PTR [bx+di-0x7756],cl
  40d69c:	xchg   BYTE PTR [edx+ecx*1+0x4e22acbf],dh
  40d6a3:	mov    ebx,0xc21d7f62
  40d6a8:	js     0x40d65e
  40d6aa:	cmp    al,0xab
  40d6ac:	stc    
  40d6ad:	push   cs
  40d6ae:	out    dx,eax
  40d6af:	jge    0x40d6e6
  40d6b1:	adc    ebx,0x9dfc51be
  40d6b7:	jmp    0x40d6e2
  40d6b9:	cwde   
  40d6ba:	imul   eax,DWORD PTR [ecx+0x31],0x68e1ed37
  40d6c1:	pop    edx
  40d6c2:	outs   dx,DWORD PTR ds:[esi]
  40d6c3:	fst    DWORD PTR [edx]
  40d6c5:	sub    dl,ah
  40d6c7:	mov    ch,BYTE PTR [edi]
  40d6c9:	cmp    eax,0xffffff8a
  40d6cc:	sub    esp,DWORD PTR [eax-0x1e]
  40d6cf:	sub    al,BYTE PTR [edx]
  40d6d1:	adc    bl,cl
  40d6d3:	inc    ebx
  40d6d4:	int3   
  40d6d5:	xchg   ebx,eax
  40d6d6:	sbb    ebx,esp
  40d6d8:	iret   
  40d6d9:	mov    al,0x13
  40d6db:	mov    al,ds:0xa4525bd2
  40d6e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d6e1:	ins    DWORD PTR es:[edi],dx
  40d6e2:	mov    edi,DWORD PTR [ecx+0x4dbe80bc]
  40d6e8:	lods   al,BYTE PTR ds:[esi]
  40d6e9:	stos   BYTE PTR es:[edi],al
  40d6ea:	data16 (bad) 
  40d6ec:	imul   ebx,DWORD PTR [edi+0x40ae07bd],0x9c0b75a0
  40d6f6:	sar    DWORD PTR [edi+0x238a1cb4],1
  40d6fc:	clc    
  40d6fd:	jne    0x40d70e
  40d6ff:	jge    0x40d6e1
  40d701:	mov    dl,0x2a
  40d703:	sub    DWORD PTR [ebx+0x67],0x3c
  40d707:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d708:	int    0x3d
  40d70a:	xor    eax,DWORD PTR [ecx+0x6aa2c6c4]
  40d710:	clc    
  40d711:	jl     0x40d6c4
  40d713:	xchg   ah,bl
  40d715:	enter  0xdcf2,0x9c
  40d719:	lea    ebp,[edx+eax*1-0x202c450f]
  40d720:	adc    al,0x94
  40d722:	bound  ebx,QWORD PTR [edi+0x65d7285c]
  40d728:	stos   BYTE PTR es:[edi],al
  40d729:	xor    eax,0x778b5891
  40d72e:	(bad)  
  40d72f:	je     0x40d72a
  40d731:	outs   dx,BYTE PTR ds:[esi]
  40d732:	and    eax,0x5ce8f975
  40d737:	mov    al,0x64
  40d739:	push   es
  40d73a:	sbb    al,0x25
  40d73c:	repnz (bad) 
  40d73e:	cld    
  40d73f:	(bad)  
  40d740:	daa    
  40d741:	dec    eax
  40d742:	cmp    al,0x5a
  40d744:	cwde   
  40d745:	add    DWORD PTR [edx+0x36],0x3dac84be
  40d74c:	jp     0x40d7a0
  40d74e:	sbb    BYTE PTR [ecx],dh
  40d750:	mov    ds:0x14784c25,eax
  40d755:	fs das 
  40d757:	mov    bl,0x43
  40d759:	fcmovbe st,st(3)
  40d75b:	mov    ah,0xa5
  40d75d:	mov    eax,0xcf1f9da2
  40d762:	push   ds
  40d763:	sbb    eax,0x85ee550c
  40d768:	xchg   BYTE PTR [esi-0x58ec4b04],al
  40d76e:	shl    BYTE PTR [ebp+0xa5f994b],cl
  40d774:	(bad)  
  40d775:	adc    ecx,DWORD PTR [edx-0x7df9d550]
  40d77b:	sub    eax,DWORD PTR [ecx+0x8b7cdcc]
  40d781:	pop    ebp
  40d782:	mov    ecx,DWORD PTR [edx+0x662eb32]
  40d788:	bnd jge 0x40d7e6
  40d78b:	retf   
  40d78c:	xchg   edx,eax
  40d78d:	arpl   WORD PTR [ecx],si
  40d78f:	jns    0x40d7b5
  40d791:	push   esi
  40d792:	cli    
  40d793:	popa   
  40d794:	sub    dl,BYTE PTR [edx]
  40d796:	xor    al,dh
  40d798:	das    
  40d799:	cdq    
  40d79a:	xchg   DWORD PTR [ecx+0x3a2349e6],edx
  40d7a0:	outs   dx,DWORD PTR ds:[esi]
  40d7a1:	pop    ebp
  40d7a2:	fisttp QWORD PTR [ebx]
  40d7a4:	sub    BYTE PTR [edx-0x32],dl
  40d7a7:	sub    DWORD PTR [ebp-0x465086b9],eax
  40d7ad:	fisttp DWORD PTR [ebp+0x33]
  40d7b0:	and    BYTE PTR [ebx+0xe],dh
  40d7b3:	and    esp,0xbcbfc33b
  40d7b9:	xlat   BYTE PTR ds:[ebx]
  40d7ba:	rcl    DWORD PTR ds:0x16fb5441,0xaa
  40d7c1:	in     al,dx
  40d7c2:	adc    DWORD PTR [ebx-0x675faacc],esi
  40d7c8:	dec    eax
  40d7c9:	push   edi
  40d7ca:	jl     0x40d776
  40d7cc:	jl     0x40d756
  40d7ce:	sub    al,0x7e
  40d7d0:	(bad)  
  40d7d1:	sahf   
  40d7d2:	mov    ebx,0xc452299e
  40d7d7:	jle    0x40d808
  40d7d9:	int    0x50
  40d7db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d7dc:	push   edx
  40d7dd:	std    
  40d7de:	pop    esp
  40d7df:	xchg   BYTE PTR [esi-0x70],cl
  40d7e2:	xor    eax,0x3088701e
  40d7e7:	(bad)
  40d7ea:	mov    dh,BYTE PTR [eax-0x4e19facc]
  40d7f0:	push   es
  40d7f1:	test   eax,0xaf1d6a80
  40d7f6:	push   0x4f
  40d7f8:	add    eax,0x9850f7f2
  40d7fd:	scas   al,BYTE PTR es:[edi]
  40d7fe:	push   ebp
  40d7ff:	inc    esi
  40d800:	lahf   
  40d801:	fsubr  QWORD PTR [esi-0x35]
  40d804:	xor    DWORD PTR [ecx-0x22],ecx
  40d807:	cmp    eax,0xb4241ee5
  40d80c:	fld    st(5)
  40d80e:	mov    eax,ds:0x174e3b3c
  40d813:	add    ch,dl
  40d815:	push   esp
  40d816:	jno    0x40d7ce
  40d818:	mov    dl,0x55
  40d81a:	in     eax,0x83
  40d81c:	int    0x3a
  40d81e:	xchg   bl,ah
  40d820:	cld    
  40d821:	sub    ebx,ebp
  40d823:	(bad)  
  40d824:	jae    0x40d83b
  40d826:	outs   dx,DWORD PTR ds:[esi]
  40d827:	lods   eax,DWORD PTR ds:[esi]
  40d828:	test   BYTE PTR [ebp-0x2a9fbe14],ah
  40d82e:	cmp    eax,0x4899b873
  40d833:	sub    DWORD PTR [ecx+0x6],esi
  40d836:	xchg   ebp,eax
  40d837:	inc    ecx
  40d838:	push   es
  40d839:	xchg   ebx,eax
  40d83a:	sub    DWORD PTR [edx+eax*4+0x28baaf4f],edi
  40d841:	cmp    ah,BYTE PTR [ecx-0x1b74fee5]
  40d847:	and    eax,DWORD PTR [ebx+0x466b0d21]
  40d84d:	push   ds
  40d84e:	dec    ebp
  40d84f:	lahf   
  40d850:	cld    
  40d851:	jne    0x40d810
  40d853:	xor    ebx,DWORD PTR [edx+0x36fe9965]
  40d859:	sbb    ecx,DWORD PTR [ebp-0x254a31f6]
  40d85f:	enter  0x1231,0xe6
  40d863:	cs jmp 0x40d86e
  40d866:	push   0xac89e286
  40d86b:	mov    ebx,DWORD PTR [eax-0x658afa70]
  40d871:	push   eax
  40d872:	jmp    DWORD PTR [eax+0x7e]
  40d875:	mov    eax,0x91d0a5a8
  40d87a:	sahf   
  40d87b:	clc    
  40d87c:	rol    BYTE PTR [ecx+0xe],0xac
  40d880:	mov    bl,0x99
  40d882:	jge    0x40d8a3
  40d884:	jns    0x40d877
  40d886:	shr    BYTE PTR [esi+0x6636e13d],0xf2
  40d88d:	iret   
  40d88e:	jg     0x40d82d
  40d890:	dec    edx
  40d891:	push   eax
  40d892:	push   edx
  40d893:	inc    edx
  40d894:	mov    al,BYTE PTR [edx]
  40d896:	cdq    
  40d897:	test   al,0x9b
  40d899:	pop    ds
  40d89a:	sub    edi,DWORD PTR [ebx-0x5a26e2aa]
  40d8a0:	dec    edi
  40d8a1:	loopne 0x40d886
  40d8a3:	or     eax,0x13b7b50b
  40d8a8:	add    ah,bh
  40d8aa:	sbb    eax,0x7551d69f
  40d8af:	ret    0xf07b
  40d8b2:	inc    edx
  40d8b3:	cdq    
  40d8b4:	jne    0x40d91c
  40d8b6:	enter  0x3bf1,0x64
  40d8ba:	div    BYTE PTR [eax]
  40d8bc:	rol    BYTE PTR [ecx],1
  40d8be:	or     al,0x3c
  40d8c0:	js     0x40d8c0
  40d8c2:	or     al,0x94
  40d8c4:	pushf  
  40d8c5:	fld    QWORD PTR [eax-0x58]
  40d8c8:	shl    BYTE PTR [eax+ebp*1+0x59c64845],0xa3
  40d8d0:	or     DWORD PTR [eax+0x21],edx
  40d8d3:	xor    ebp,DWORD PTR [esi+0x1f]
  40d8d6:	fstp   DWORD PTR [eax-0x113184fd]
  40d8dc:	pop    ecx
  40d8dd:	jp     0x40d92a
  40d8df:	sub    DWORD PTR [edx+eax*4-0x743d1b10],0xffffff98
  40d8e7:	push   0xc184c6e6
  40d8ec:	test   al,0x60
  40d8ee:	mov    BYTE PTR [ecx],dh
  40d8f0:	push   ds
  40d8f1:	div    bl
  40d8f3:	mul    BYTE PTR [esi+ebx*2-0x59155392]
  40d8fa:	enter  0x6b78,0x10
  40d8fe:	xlat   BYTE PTR ds:[ebx]
  40d8ff:	cmp    BYTE PTR [eax+0x3a],0x77
  40d903:	push   ecx
  40d904:	sub    edi,DWORD PTR [ecx+0x25]
  40d907:	push   ds
  40d908:	test   al,0x6
  40d90a:	call   0x5bf8b224
  40d90f:	sbb    eax,0x342728d2
  40d914:	add    DWORD PTR [ebp-0x4],0xbc28db3e
  40d91b:	jnp    0x40d933
  40d91d:	sahf   
  40d91e:	stos   DWORD PTR es:[edi],eax
  40d91f:	push   DWORD PTR [ebx]
  40d921:	repz mov ah,0xb5
  40d924:	aas    
  40d925:	push   ebp
  40d926:	pop    edx
  40d927:	xor    DWORD PTR ds:0x8501da00,ecx
  40d92d:	(bad)  
  40d92e:	push   ebp
  40d92f:	xchg   esp,eax
  40d930:	dec    edx
  40d931:	add    DWORD PTR [eax],0x7b
  40d934:	fiadd  WORD PTR [edx+0x1a]
  40d937:	pop    ebp
  40d938:	pop    ds
  40d939:	adc    eax,edx
  40d93b:	bound  ecx,QWORD PTR [ecx]
  40d93d:	or     BYTE PTR [ebp+0x7b],al
  40d940:	adc    al,BYTE PTR [edx-0xb8bc5f6]
  40d946:	call   0x8c53ecd8
  40d94b:	mov    ds:0x2ca23749,eax
  40d950:	shl    esp,cl
  40d952:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d953:	inc    ecx
  40d954:	nop
  40d955:	xor    DWORD PTR [ebx+0x73],ecx
  40d958:	inc    eax
  40d959:	div    BYTE PTR [edx-0x31]
  40d95c:	cdq    
  40d95d:	loopne 0x40d905
  40d95f:	xor    edx,esi
  40d961:	sbb    al,0x6c
  40d963:	ds jno 0x40d8ff
  40d966:	sbb    BYTE PTR [edx+0x1],0xab
  40d96a:	bound  esp,QWORD PTR es:[edx+ecx*8-0x5cd790b3]
  40d972:	dec    esi
  40d973:	dec    edi
  40d974:	iret   
  40d975:	ret    0xb818
  40d978:	fdiv   st(4),st
  40d97a:	dec    ebp
  40d97b:	fstp   QWORD PTR [ebx]
  40d97d:	test   BYTE PTR [ecx+0x42],ch
  40d980:	xor    edi,DWORD PTR [ebx]
  40d982:	cld    
  40d983:	mov    bl,0x28
  40d985:	mov    edx,0x3e0aba27
  40d98a:	xor    al,0xa8
  40d98c:	das    
  40d98d:	lds    edx,FWORD PTR [ecx-0x3a6ce113]
  40d993:	sub    esi,esi
  40d995:	cmp    eax,0xfff8f6f1
  40d99a:	fadd   DWORD PTR [edi]
  40d99c:	add    dh,BYTE PTR [ebp+0x5b139d3b]
  40d9a2:	add    dl,BYTE PTR [ecx+0x213b2f00]
  40d9a8:	ret    
  40d9a9:	jbe    0x40da23
  40d9ab:	call   0xa567:0x5a6a3bff
  40d9b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d9b3:	test   DWORD PTR [ecx+0x2dd9ef73],edx
  40d9b9:	fisttp DWORD PTR [eax+0x11]
  40d9bc:	push   edx
  40d9bd:	and    eax,0xd593921d
  40d9c2:	outs   dx,DWORD PTR ds:[esi]
  40d9c3:	push   es
  40d9c4:	cmp    DWORD PTR [ebp+0x4f],edx
  40d9c7:	cmp    DWORD PTR [esi+esi*1-0x34],ebp
  40d9cb:	push   eax
  40d9cc:	inc    eax
  40d9cd:	rcr    BYTE PTR [edi+0x53f89065],1
  40d9d3:	int3   
  40d9d4:	mov    ecx,0xf0bafa55
  40d9d9:	xchg   ebx,eax
  40d9da:	adc    eax,0x78755625
  40d9df:	push   cs
  40d9e0:	dec    esp
  40d9e1:	int3   
  40d9e2:	scas   eax,DWORD PTR es:[edi]
  40d9e3:	ror    BYTE PTR [esi],1
  40d9e5:	and    edi,DWORD PTR [edi+0x78]
  40d9e8:	xor    DWORD PTR [edi],0x53883eb3
  40d9ee:	xor    ecx,DWORD PTR [ecx]
  40d9f0:	sbb    dh,BYTE PTR [esi-0x2a700e5a]
  40d9f6:	fdivr  DWORD PTR [esi+0x21]
  40d9f9:	push   edx
  40d9fa:	and    eax,0x11bc33ca
  40d9ff:	mov    dl,0xc2
  40da01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da02:	jecxz  0x40d98a
  40da04:	rol    BYTE PTR [edi+0x7d152829],cl
  40da0a:	(bad)  
  40da0b:	cld    
  40da0c:	add    al,0x67
  40da0e:	hlt    
  40da0f:	pop    ebx
  40da10:	mov    ah,0x90
  40da12:	and    cl,BYTE PTR [ebp-0x26]
  40da15:	xor    DWORD PTR [edi-0x8],ebx
  40da18:	sbb    edi,DWORD PTR [ecx+0x54]
  40da1b:	stc    
  40da1c:	adc    BYTE PTR [eax-0x6b],al
  40da1f:	pushf  
  40da20:	repz leave 
  40da22:	call   0xf21b5a05
  40da27:	cmp    al,0xc1
  40da29:	mov    gs,ebp
  40da2b:	das    
  40da2c:	adc    al,0x64
  40da2e:	fs iret 
  40da30:	cld    
  40da31:	jae    0x40da3b
  40da33:	cmp    eax,0xa3220d6c
  40da38:	aaa    
  40da39:	out    dx,al
  40da3a:	mov    DWORD PTR [esi-0x54],eax
  40da3d:	push   eax
  40da3e:	push   edi
  40da3f:	add    eax,DWORD PTR [edx-0x41]
  40da42:	loope  0x40da4f
  40da44:	dec    eax
  40da45:	dec    edx
  40da46:	dec    eax
  40da47:	or     esp,ebp
  40da49:	gs js  0x40da02
  40da4c:	stos   BYTE PTR es:[edi],al
  40da4d:	aam    0x94
  40da4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da50:	push   es
  40da51:	mov    edi,0xbfe8094d
  40da56:	jae    0x40dab7
  40da58:	or     DWORD PTR [esi],ebx
  40da5a:	adc    al,0x93
  40da5c:	cwde   
  40da5d:	popa   
  40da5e:	aam    0x17
  40da60:	imul   eax,DWORD PTR [edx-0x2a],0xfffffff3
  40da64:	mov    eax,ds:0xe66ab1a0
  40da69:	outs   dx,BYTE PTR ds:[esi]
  40da6a:	jmp    0xd9de17ec
  40da6f:	sahf   
  40da70:	retf   0xb7d8
  40da73:	jg     0x40d9fd
  40da75:	pop    esi
  40da76:	sub    BYTE PTR fs:[edx+0x53c4ea95],ah
  40da7d:	jl     0x40da53
  40da7f:	mov    edi,0xc94f381a
  40da84:	fnstsw WORD PTR [ebx]
  40da86:	loopne 0x40dad5
  40da88:	pusha  
  40da89:	adc    al,0x85
  40da8b:	in     eax,0xc4
  40da8d:	jnp    0x40dadf
  40da8f:	jle    0x40dae2
  40da91:	jp     0x40da59
  40da93:	dec    ebp
  40da94:	(bad)  
  40da95:	push   ebp
  40da96:	(bad)  [edi+ebp*2]
  40da99:	sbb    esp,DWORD PTR [eax+0x7f0aac0a]
  40da9f:	dec    eax
  40daa0:	out    dx,al
  40daa1:	ror    BYTE PTR es:[eax],cl
  40daa4:	test   dl,al
  40daa6:	or     eax,0xaf43e7bf
  40daab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40daac:	shl    esp,1
  40daae:	xchg   ebx,eax
  40daaf:	imul   ebp,DWORD PTR [ebp+0x7c],0xffffffa7
  40dab3:	dec    edx
  40dab4:	and    BYTE PTR [ebx],bl
  40dab6:	fwait
  40dab7:	sub    al,0x5a
  40dab9:	fstp   DWORD PTR [edx+0x7fc6883f]
  40dabf:	ret    0x8c38
  40dac2:	in     eax,dx
  40dac3:	in     al,0xa4
  40dac5:	popa   
  40dac6:	mov    ebx,0xb79e4a14
  40dacb:	outs   dx,DWORD PTR ds:[esi]
  40dacc:	sub    ch,dl
  40dace:	mov    ds:0x2a1ec43e,eax
  40dad3:	stos   DWORD PTR es:[edi],eax
  40dad4:	clc    
  40dad5:	or     al,0x21
  40dad7:	push   esp
  40dad8:	retf   0xfaba
  40dadb:	std    
  40dadc:	xlat   BYTE PTR ds:[ebx]
  40dadd:	dec    esi
  40dade:	xchg   ecx,eax
  40dadf:	retf   0xf2bd
  40dae2:	push   ebx
  40dae3:	adc    BYTE PTR [esi-0x9ed7f39],al
  40dae9:	pop    esp
  40daea:	sbb    eax,0x824ae9b5
  40daef:	ret    0xc907
  40daf2:	mov    esi,0x21c84742
  40daf7:	mov    ebp,0x1de26fbb
  40dafc:	mov    esi,0x6780e623
  40db01:	inc    ebx
  40db02:	adc    DWORD PTR [edx],ebp
  40db04:	retf   
  40db05:	mov    al,0x30
  40db07:	add    DWORD PTR [edi+0x66],esp
  40db0a:	pusha  
  40db0b:	jnp    0x40db1d
  40db0d:	pop    edi
  40db0e:	xchg   ecx,eax
  40db0f:	shl    BYTE PTR [edx-0x4c6aecbd],0x38
  40db16:	pushf  
  40db17:	aas    
  40db18:	clc    
  40db19:	add    al,0xd8
  40db1b:	stos   BYTE PTR es:[edi],al
  40db1c:	adc    eax,0x16ad6ab2
  40db21:	cwde   
  40db22:	test   al,0xc4
  40db24:	push   0x35
  40db26:	sbb    al,0x39
  40db28:	push   ss
  40db29:	cmp    ch,BYTE PTR [eax+edi*8+0x3c]
  40db2d:	hlt    
  40db2e:	sar    BYTE PTR [eax-0x63de8a6d],cl
  40db34:	imul   ebx,DWORD PTR [eax+0xf],0xffffffe5
  40db38:	out    0xc8,eax
  40db3a:	add    al,0x31
  40db3c:	jo     0x40daf2
  40db3e:	xchg   esi,ebx
  40db40:	pop    ebp
  40db41:	cmp    DWORD PTR [edx+0x207483eb],0x19
  40db48:	in     eax,dx
  40db49:	jns    0x40db80
  40db4b:	pop    esp
  40db4c:	es (bad) 
  40db4e:	fidiv  WORD PTR [edx+0x4f1cccec]
  40db54:	(bad)
  40db57:	lods   eax,DWORD PTR ds:[esi]
  40db58:	inc    ebx
  40db59:	jmp    0x800f:0xeb3ff422
  40db60:	outs   dx,BYTE PTR ds:[esi]
  40db61:	cwde   
  40db62:	and    al,0xa9
  40db64:	dec    ebp
  40db65:	push   es
  40db66:	dec    ecx
  40db67:	call   0xd9666609
  40db6c:	retf   
  40db6d:	mov    edx,0x47c0a134
  40db72:	test   DWORD PTR [ecx+edi*1],edi
  40db75:	test   DWORD PTR [eax+0x47],esp
  40db78:	retf   0xc4d1
  40db7b:	and    dl,BYTE PTR [ebp-0xe]
  40db7e:	mov    cl,0xce
  40db80:	scas   al,BYTE PTR es:[edi]
  40db81:	mov    esp,0xb8f688e8
  40db86:	mov    ch,0x55
  40db88:	icebp  
  40db89:	in     eax,0x60
  40db8b:	add    eax,0x6717caaf
  40db90:	mov    fs,WORD PTR [esi+0x22]
  40db93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db94:	out    dx,eax
  40db95:	push   ebp
  40db96:	pop    edi
  40db97:	cli    
  40db98:	lea    ecx,[edx-0x15d35dbe]
  40db9e:	sub    ebp,DWORD PTR [eax-0x2e]
  40dba1:	nop
  40dba2:	dec    esp
  40dba3:	xor    al,0x42
  40dba5:	stos   BYTE PTR es:[edi],al
  40dba6:	pcmpeqd mm1,mm3
  40dba9:	jns    0x40db4d
  40dbab:	push   cs
  40dbac:	ror    DWORD PTR [bp+di],0x3d
  40dbb0:	inc    edx
  40dbb1:	repz jb 0x40db9b
  40dbb4:	aam    0x84
  40dbb6:	cmp    bh,BYTE PTR gs:[esi]
  40dbb9:	xor    ecx,DWORD PTR [ebp-0x384bc97b]
  40dbbf:	jl     0x40dbf0
  40dbc1:	mov    esi,0x6529b45d
  40dbc6:	int3   
  40dbc7:	push   ss
  40dbc8:	js     0x40dc3c
  40dbca:	add    esp,DWORD PTR [edi]
  40dbcc:	int    0x92
  40dbce:	dec    ebp
  40dbcf:	or     eax,0x7fc10f75
  40dbd4:	push   cs
  40dbd5:	mov    al,ds:0x7ef7bc9c
  40dbda:	push   ecx
  40dbdb:	push   esi
  40dbdc:	js     0x40dc23
  40dbde:	mov    esi,0x655a5231
  40dbe3:	pop    edx
  40dbe4:	(bad)  
  40dbe5:	jl     0x40db8f
  40dbe7:	inc    edi
  40dbe8:	sub    dh,BYTE PTR [ebp-0x2b]
  40dbeb:	(bad)  
  40dbec:	add    al,0x3d
  40dbee:	lods   eax,DWORD PTR ds:[esi]
  40dbef:	cmp    eax,0xffad3f5a
  40dbf4:	xor    al,0xa
  40dbf6:	(bad)
  40dbfa:	add    DWORD PTR [edi+0x5d],edi
  40dbfd:	add    DWORD PTR [ecx],ebx
  40dbff:	inc    ebp
  40dc00:	fiadd  WORD PTR [ecx+0x24046087]
  40dc06:	add    DWORD PTR [ebp-0x7df73512],ebx
  40dc0c:	lds    edi,FWORD PTR [esi-0x49]
  40dc0f:	inc    esp
  40dc10:	mov    eax,0x45e2bb4e
  40dc15:	lods   eax,DWORD PTR ds:[esi]
  40dc16:	cli    
  40dc17:	inc    edi
  40dc18:	xchg   edx,eax
  40dc19:	mov    esp,0x81c53f5c
  40dc1e:	sbb    eax,0xcf8e900c
  40dc23:	shl    BYTE PTR [ecx+0x42],cl
  40dc26:	mov    ah,0xd8
  40dc28:	mov    edx,0xa8218435
  40dc2d:	mov    dh,0xa7
  40dc2f:	dec    edx
  40dc30:	xlat   BYTE PTR ds:[ebx]
  40dc31:	mov    cl,0xc6
  40dc33:	pop    ebp
  40dc34:	xchg   ecx,eax
  40dc35:	mov    ds:0xcbfe25fe,eax
  40dc3a:	dec    ebx
  40dc3b:	mov    ebx,0xcf683299
  40dc40:	push   esi
  40dc41:	pop    ss
  40dc42:	lock bound esi,QWORD PTR [esi]
  40dc45:	aaa    
  40dc46:	test   al,0x71
  40dc48:	(bad)  
  40dc49:	xor    DWORD PTR [edx-0x481aa5f8],edx
  40dc4f:	es call 0x15e08427
  40dc55:	xor    DWORD PTR [ecx-0x6383045c],eax
  40dc5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc5c:	jmp    0x9382798a
  40dc61:	sub    DWORD PTR [eax-0x33d63a2b],0xffffffff
  40dc68:	(bad)  
  40dc6a:	out    dx,al
  40dc6b:	or     al,0x59
  40dc6d:	push   ss
  40dc6e:	sbb    ebx,0x53c2c76f
  40dc74:	out    0x3a,al
  40dc76:	retf   
  40dc77:	stos   BYTE PTR es:[edi],al
  40dc78:	pop    esi
  40dc79:	sbb    eax,0x864c38e0
  40dc7e:	ins    DWORD PTR es:[edi],dx
  40dc7f:	adc    BYTE PTR [ebp-0x2e],dh
  40dc82:	xchg   edx,eax
  40dc83:	test   eax,0xbceadf7f
  40dc88:	sar    BYTE PTR [edi],1
  40dc8a:	std    
  40dc8b:	repnz das 
  40dc8d:	mov    bl,0xe2
  40dc8f:	cmp    BYTE PTR [ebp+0x1e],ah
  40dc92:	xor    DWORD PTR [ebp-0x5b],0xffffffb9
  40dc96:	xchg   ebx,eax
  40dc97:	scas   al,BYTE PTR es:[edi]
  40dc98:	mov    cl,0x17
  40dc9a:	cmp    DWORD PTR [esi],edi
  40dc9c:	pop    ds
  40dc9d:	cmc    
  40dc9e:	enter  0x8b53,0x13
  40dca2:	jge    0x40dc53
  40dca4:	les    esi,FWORD PTR [ecx+ecx*4-0x22]
  40dca8:	jmp    0x6f777dd6
  40dcad:	jmp    0x9f9aac37
  40dcb2:	(bad)  
  40dcb3:	in     eax,dx
  40dcb4:	fdivr  QWORD PTR [edx]
  40dcb6:	inc    ebx
  40dcb7:	js     0x40dd18
  40dcb9:	xchg   ebp,eax
  40dcba:	push   esp
  40dcbb:	add    al,0xd
  40dcbd:	lahf   
  40dcbe:	fcomp  DWORD PTR [esi]
  40dcc0:	inc    ebp
  40dcc1:	jl     0x40dd12
  40dcc3:	aam    0x94
  40dcc5:	xchg   ebx,eax
  40dcc6:	push   edx
  40dcc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dcc8:	xchg   ebp,eax
  40dcc9:	jnp    0x924fd344
  40dccf:	sbb    ah,cl
  40dcd1:	sbb    edx,ebp
  40dcd3:	jecxz  0x40dc7b
  40dcd5:	fdiv   QWORD PTR [ebx]
  40dcd7:	rcl    DWORD PTR [edx],1
  40dcd9:	push   edx
  40dcda:	ss in  al,dx
  40dcdc:	mov    cl,0xc7
  40dcde:	mov    dh,BYTE PTR [esi]
  40dce0:	sub    al,0xac
  40dce2:	adc    BYTE PTR [bp+di],0xcd
  40dce6:	mov    bh,bl
  40dce8:	and    BYTE PTR [esi+0x37],0xca
  40dcec:	ret    
  40dced:	outs   dx,DWORD PTR ds:[esi]
  40dcee:	cld    
  40dcef:	xor    BYTE PTR [edi+0x58f50007],bl
  40dcf5:	call   0xe79b380a
  40dcfa:	dec    eax
  40dcfb:	dec    eax
  40dcfc:	pop    ebp
  40dcfd:	xchg   esp,eax
  40dcfe:	sbb    bh,0x80
  40dd01:	mov    ch,0x6
  40dd03:	mov    ch,0x45
  40dd05:	inc    esp
  40dd06:	or     eax,0x965bf2c5
  40dd0b:	clc    
  40dd0c:	pop    ecx
  40dd0d:	xchg   edx,eax
  40dd0e:	ror    DWORD PTR [ecx-0x32],0xd7
  40dd12:	push   0xfffffff8
  40dd14:	push   ss
  40dd15:	xchg   ebp,eax
  40dd16:	adc    ebx,DWORD PTR [edi+ebx*8+0x42eae19b]
  40dd1d:	jg     0x40dcab
  40dd1f:	ss mov ch,0x99
  40dd22:	outs   dx,DWORD PTR ds:[esi]
  40dd23:	dec    edx
  40dd24:	mov    cl,0xb3
  40dd26:	icebp  
  40dd27:	dec    edx
  40dd28:	jge    0x40dce5
  40dd2a:	mov    eax,0x97dd10f
  40dd2f:	pop    es
  40dd30:	es and eax,0x67fa13e3
  40dd36:	sbb    esi,0xffffffa4
  40dd39:	dec    edx
  40dd3a:	mov    edx,0x312a8ec9
  40dd3f:	sub    eax,DWORD PTR ds:0xe624ab0d
  40dd45:	jg     0x40dcf0
  40dd47:	inc    esi
  40dd48:	iret   
  40dd49:	inc    ebp
  40dd4a:	cmp    bl,BYTE PTR [eax]
  40dd4c:	icebp  
  40dd4d:	mov    bh,0xfe
  40dd4f:	cs loop 0x40dd5f
  40dd52:	inc    ebx
  40dd53:	adc    edx,edx
  40dd55:	pushf  
  40dd56:	cli    
  40dd57:	and    al,0x38
  40dd59:	cwde   
  40dd5a:	(bad)  
  40dd5c:	test   eax,0xd9a15c98
  40dd61:	mov    eax,0xf3a6d9cb
  40dd66:	or     BYTE PTR [ecx],bh
  40dd68:	ror    BYTE PTR [edi-0x1024b3d4],0x29
  40dd6f:	clc    
  40dd70:	addr16 jae 0x40dd52
  40dd73:	push   edx
  40dd74:	in     eax,0x57
  40dd76:	push   es
  40dd77:	jbe    0x40dd10
  40dd79:	adc    ebp,DWORD PTR [eax]
  40dd7b:	ret    
  40dd7c:	xchg   DWORD PTR [ebp+0x5b411105],edx
  40dd82:	inc    ecx
  40dd83:	or     dh,bh
  40dd85:	stos   DWORD PTR es:[edi],eax
  40dd86:	inc    BYTE PTR [ebp-0x4a68e607]
  40dd8c:	shl    BYTE PTR [eax],1
  40dd8e:	call   0x4f5e:0x54c0621e
  40dd95:	fs addr16 loopne 0x40ddfa
  40dd99:	dec    eax
  40dd9a:	neg    DWORD PTR [esi]
  40dd9c:	push   es
  40dd9d:	and    BYTE PTR [ebp+eax*2+0x3a67debc],bh
  40dda4:	test   DWORD PTR [edx-0x36],ecx
  40dda7:	(bad)  [ecx]
  40dda9:	daa    
  40ddaa:	mov    dl,0x3d
  40ddac:	dec    ebp
  40ddad:	cwde   
  40ddae:	and    DWORD PTR [ecx],eax
  40ddb0:	or     DWORD PTR [edi-0x77ef4cbe],esp
  40ddb6:	add    al,0x41
  40ddb8:	sub    edi,DWORD PTR [ebx]
  40ddba:	or     esi,DWORD PTR [esi-0x78ffc6d]
  40ddc0:	imul   eax,esp,0x3a
  40ddc3:	xlat   BYTE PTR ds:[ebx]
  40ddc4:	adc    bh,dh
  40ddc6:	int    0x64
  40ddc8:	mov    BYTE PTR [ebx],cl
  40ddca:	mov    edi,0x1f321918
  40ddcf:	mov    bl,0xaa
  40ddd1:	mov    ah,0xb6
  40ddd3:	aaa    
  40ddd4:	gs into 
  40ddd6:	loop   0x40dd9b
  40ddd8:	dec    ebx
  40ddd9:	sbb    ebx,eax
  40dddb:	mov    esi,0xca999883
  40dde0:	into   
  40dde1:	in     al,0x75
  40dde3:	fwait
  40dde4:	shl    BYTE PTR [ecx+edx*1-0x5f],cl
  40dde8:	retf   0x7eb5
  40ddeb:	or     ebx,0xffffffb0
  40ddee:	mov    dh,0x5b
  40ddf0:	sub    eax,0xac7be8e3
  40ddf5:	adc    eax,0xd3a632fe
  40ddfa:	(bad)  
  40ddfc:	xchg   edi,eax
  40ddfd:	adc    ah,bh
  40ddff:	adc    eax,0xa792b0
  40de04:	or     DWORD PTR gs:[ecx],esi
  40de07:	jae    0x40de25
  40de09:	jle    0x40de49
  40de0b:	mov    cl,0x76
  40de0d:	stos   WORD PTR es:[edi],ax
  40de0f:	popf   
  40de10:	xlat   BYTE PTR ds:[ebx]
  40de11:	xchg   esi,eax
  40de12:	sub    esi,DWORD PTR [edi+ecx*4-0x6a688b7b]
  40de19:	and    DWORD PTR [esi+edi*8],esp
  40de1c:	push   ebp
  40de1d:	jecxz  0x40de11
  40de1f:	leave  
  40de20:	sbb    edi,ecx
  40de22:	adc    ecx,esp
  40de24:	and    dl,BYTE PTR [edi+0x5cede2fa]
  40de2a:	loop   0x40de90
  40de2c:	(bad)  [esi-0x56]
  40de2f:	inc    ebp
  40de30:	mov    ?,WORD PTR [eax]
  40de32:	adc    al,0x68
  40de34:	int3   
  40de35:	add    eax,0x1ef2c052
  40de3a:	and    DWORD PTR [esp+ecx*4-0x25],ecx
  40de3e:	ja     0x40de39
  40de40:	and    bl,BYTE PTR [esi-0x69024cfa]
  40de46:	arpl   WORD PTR [edi],di
  40de48:	xchg   ebp,ebp
  40de4a:	jecxz  0x40deac
  40de4c:	inc    ebx
  40de4d:	mov    esi,0xb2f1228b
  40de52:	ja     0x40dea4
  40de54:	jns    0x40de1d
  40de56:	popa   
  40de57:	jo     0x40dea0
  40de59:	in     eax,0xf5
  40de5b:	cmp    eax,0x39d2ea57
  40de60:	push   es
  40de61:	cmc    
  40de62:	retf   
  40de63:	addr16 sahf 
  40de65:	loopne 0x40debd
  40de67:	xchg   BYTE PTR [ebp+0x6c5ef6a],dl
  40de6d:	int3   
  40de6e:	mov    dl,0x4
  40de70:	(bad)  
  40de71:	or     eax,0x2c69f099
  40de76:	xchg   ebp,eax
  40de77:	push   0x7
  40de79:	jae    0x40def5
  40de7b:	jns    0x40dec7
  40de7d:	pop    ecx
  40de7e:	dec    esp
  40de7f:	repnz stc 
  40de81:	and    eax,0x96442528
  40de86:	pop    eax
  40de87:	add    BYTE PTR [edi+esi*4+0x14],dl
  40de8b:	push   0xf05f8abe
  40de90:	sub    eax,0xa26145fe
  40de95:	fs inc esp
  40de97:	mov    esi,0x5700d9f1
  40de9c:	push   0xffffff90
  40de9e:	cs push edi
  40dea0:	inc    eax
  40dea1:	dec    ebp
  40dea2:	ret    
  40dea3:	rol    esp,1
  40dea5:	ret    0xbcdc
  40dea8:	mov    ecx,0x14330c4
  40dead:	into   
  40deae:	imul   edi
  40deb0:	add    dh,cl
  40deb2:	mov    ch,BYTE PTR [ecx-0x3b]
  40deb5:	xchg   ebx,eax
  40deb6:	xchg   edi,eax
  40deb7:	lds    eax,FWORD PTR [ebx+0x149f181b]
  40debd:	es adc ecx,0x6b
  40dec1:	lods   al,BYTE PTR ds:[esi]
  40dec2:	push   ss
  40dec3:	loop   0x40def0
  40dec5:	fcom   DWORD PTR [ebx-0x24a6a4e0]
  40decb:	add    al,0xd9
  40decd:	xchg   BYTE PTR [esi+ebp*4],bh
  40ded0:	jnp    0x40de83
  40ded2:	mov    ebx,cs
  40ded4:	cmp    al,0xab
  40ded6:	setb   ch
  40ded9:	fwait
  40deda:	adc    BYTE PTR [ebx],bl
  40dedc:	and    BYTE PTR [ebp+ecx*8-0x13587e3d],0x30
  40dee4:	mov    esi,0xecb9dd9e
  40dee9:	xor    bl,bh
  40deeb:	or     DWORD PTR [edx],ebx
  40deed:	xor    DWORD PTR [edi+0x6b8e2a3e],esp
  40def3:	push   esi
  40def4:	add    BYTE PTR [ebx],0xa6
  40def7:	gs hlt 
  40def9:	add    esi,DWORD PTR [edi-0x78]
  40defc:	pop    ss
  40defd:	mov    ah,0x9e
  40deff:	lods   eax,DWORD PTR ds:[esi]
  40df00:	sub    eax,0x24974746
  40df05:	jg     0x40debe
  40df07:	js     0x40df07
  40df09:	pop    ss
  40df0a:	sbb    BYTE PTR [edx+0x3cae33f1],0x4e
  40df11:	sbb    al,0x14
  40df13:	xchg   ebp,eax
  40df14:	fnstenv [ecx+edx*2+0x78]
  40df18:	adc    ebx,DWORD PTR [ebx-0x51]
  40df1b:	jge    0x40df95
  40df1d:	ja     0x40df19
  40df1f:	sbb    bl,bh
  40df21:	inc    edx
  40df22:	xor    edi,ebx
  40df24:	adc    al,0x3a
  40df26:	mov    ebx,?
  40df28:	pop    ebp
  40df29:	fwait
  40df2a:	jb     0x40deb8
  40df2c:	mov    edx,0x8e1e58be
  40df31:	inc    esp
  40df32:	out    dx,al
  40df33:	out    0xfc,eax
  40df35:	push   cs
  40df36:	cmc    
  40df37:	xchg   edi,eax
  40df38:	and    eax,0x75441b55
  40df3d:	call   0xfec2:0x10ae24f9
  40df44:	dec    esi
  40df45:	mov    eax,0xe5bf9d8e
  40df4a:	(bad)  
  40df4b:	and    edi,DWORD PTR [ecx+0x3df65792]
  40df51:	imul   eax,DWORD PTR [esi-0x656dc17],0xffffff9a
  40df58:	xchg   esp,eax
  40df59:	mov    dl,0x21
  40df5b:	iret   
  40df5c:	adc    ch,BYTE PTR [ebx+ebp*2-0x4a]
  40df60:	jne    0x40df13
  40df62:	loope  0x40df05
  40df64:	inc    esp
  40df65:	call   0xf27c:0x43f208aa
  40df6c:	jnp    0x40df64
  40df6e:	push   es
  40df6f:	inc    ecx
  40df70:	outs   dx,BYTE PTR ds:[esi]
  40df71:	mov    DWORD PTR [ecx],ebp
  40df73:	ss or  eax,edx
  40df76:	mov    ah,0x38
  40df78:	shr    DWORD PTR [esi],0x55
  40df7b:	hlt    
  40df7c:	pop    esp
  40df7d:	sar    ah,1
  40df7f:	pop    edx
  40df80:	or     eax,esp
  40df82:	scas   al,BYTE PTR es:[edi]
  40df83:	jmp    FWORD PTR gs:[esi+eax*1-0x5a]
  40df88:	dec    esi
  40df89:	xchg   DWORD PTR ds:0x95a2f8ba,ecx
  40df8f:	inc    ecx
  40df90:	sbb    eax,0x56cf8234
  40df95:	dec    ecx
  40df96:	bnd jo 0x40df69
  40df99:	gs add eax,0x3aa036f1
  40df9f:	push   esp
  40dfa0:	push   ecx
  40dfa1:	sahf   
  40dfa2:	mov    al,0xa2
  40dfa4:	adc    eax,0xec22b8de
  40dfa9:	inc    edi
  40dfaa:	pop    ds
  40dfab:	and    eax,DWORD PTR [esi]
  40dfad:	shr    DWORD PTR [ecx-0x1e64d4ab],1
  40dfb3:	mov    cl,0x1e
  40dfb5:	test   al,0x65
  40dfb7:	mov    eax,ds:0xd871f985
  40dfbc:	mov    ecx,DWORD PTR [ecx+ecx*4+0x45]
  40dfc0:	jmp    0x7cc:0xc543d1db
  40dfc7:	mov    al,0x72
  40dfc9:	pop    edi
  40dfca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dfcb:	sbb    DWORD PTR [ebx*1+0x62a57a77],ebp
  40dfd2:	xchg   edx,eax
  40dfd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dfd4:	dec    eax
  40dfd5:	call   0x57b6b32c
  40dfda:	cmp    ecx,DWORD PTR [edi]
  40dfdc:	mov    bl,0x7b
  40dfde:	or     BYTE PTR [ebx],cl
  40dfe0:	xchg   esp,eax
  40dfe1:	ins    BYTE PTR es:[edi],dx
  40dfe2:	iret   
  40dfe3:	in     eax,dx
  40dfe4:	pop    ss
  40dfe5:	mov    BYTE PTR [edi],ch
  40dfe7:	fisttp QWORD PTR [eax-0x1]
  40dfea:	xchg   ebx,eax
  40dfeb:	mov    ah,0xd0
  40dfed:	inc    ebx
  40dfee:	sub    al,0x47
  40dff0:	xlat   BYTE PTR ds:[ebx]
  40dff1:	jae    0x40dfcf
  40dff3:	pop    es
  40dff4:	push   edi
  40dff5:	fnstsw WORD PTR [ecx*8+0x7a191009]
  40dffc:	xor    al,0x74
  40dffe:	jmp    0xfcee:0xad8ffb35
  40e005:	adc    eax,0x6372b726
  40e00a:	outs   dx,DWORD PTR ds:[esi]
  40e00b:	test   BYTE PTR [esi],ah
  40e00d:	mov    ds:0x8e10235b,eax
  40e012:	std    
  40e013:	scas   al,BYTE PTR es:[edi]
  40e014:	inc    edi
  40e015:	jnp    0x40e033
  40e017:	add    al,dh
  40e019:	xchg   BYTE PTR [ecx],ch
  40e01b:	pop    es
  40e01c:	inc    esi
  40e01d:	add    BYTE PTR [ebp+0x1e761d1e],0xec
  40e024:	and    DWORD PTR [eax+0x1b5d139b],edx
  40e02a:	add    bl,BYTE PTR [edi+0x547281d1]
  40e030:	es jg  0x40e000
  40e033:	aad    0xc
  40e035:	add    al,0x37
  40e037:	stos   DWORD PTR es:[edi],eax
  40e038:	mov    ebp,0x831b3789
  40e03d:	add    DWORD PTR [edx+0x3f8c6890],esi
  40e043:	sti    
  40e044:	mov    edi,0xafb172ab
  40e049:	(bad)
  40e04c:	(bad)  
  40e04d:	outs   dx,BYTE PTR ds:[esi]
  40e04e:	fdivr  QWORD PTR [esi+0x7a8136b5]
  40e054:	dec    esp
  40e055:	cli    
  40e056:	(bad)  
  40e057:	mov    dl,0xf6
  40e059:	pop    es
  40e05a:	in     al,0xe3
  40e05c:	jo     0x40e08a
  40e05e:	gs add eax,0x9fd039ae
  40e064:	cmp    BYTE PTR [esp+edx*4],dl
  40e067:	jb     0x40e0e0
  40e069:	sbb    BYTE PTR [ebx-0x3632ed08],ch
  40e06f:	xor    ch,BYTE PTR [ecx+esi*1-0x2c3802e9]
  40e076:	popf   
  40e077:	lahf   
  40e078:	addr16 in al,0x12
  40e07b:	lods   al,BYTE PTR ds:[esi]
  40e07c:	cmc    
  40e07d:	aaa    
  40e07e:	mov    ecx,0x3ffc4647
  40e083:	cli    
  40e084:	shr    DWORD PTR [edi+edi*2+0x447fe85d],0xa2
  40e08c:	add    ah,BYTE PTR [edi+0x3f]
  40e08f:	dec    ecx
  40e090:	jmp    0x92b8:0x3d7f9d98
  40e097:	cli    
  40e098:	data16 scas al,BYTE PTR es:[edi]
  40e09a:	mov    dl,0x2d
  40e09c:	dec    ecx
  40e09d:	pop    esi
  40e09e:	mov    ah,0x30
  40e0a0:	ret    0x8c4b
  40e0a3:	adc    eax,0xf70d616b
  40e0a8:	and    ch,BYTE PTR [esi+0x52dac06]
  40e0ae:	push   eax
  40e0af:	xchg   esp,eax
  40e0b0:	dec    dh
  40e0b2:	xchg   esp,eax
  40e0b3:	xchg   ecx,eax
  40e0b4:	xchg   BYTE PTR [ecx+0x36],bh
  40e0b7:	pop    esp
  40e0b8:	shl    BYTE PTR [edx+0x78],1
  40e0bb:	mov    ch,0x74
  40e0bd:	stos   BYTE PTR es:[edi],al
  40e0be:	fimul  WORD PTR [edi-0x53]
  40e0c1:	cmp    al,0xcb
  40e0c3:	jl     0x40e0bb
  40e0c5:	dec    ecx
  40e0c6:	ins    BYTE PTR es:[edi],dx
  40e0c7:	into   
  40e0c8:	dec    eax
  40e0c9:	call   0xaa8e:0x5024b1bf
  40e0d0:	test   al,0x35
  40e0d2:	adc    edi,edx
  40e0d4:	jno    0x40e14a
  40e0d6:	cwde   
  40e0d7:	mov    fs,ebx
  40e0d9:	jge    0x40e126
  40e0db:	and    BYTE PTR [edi-0x443938],ah
  40e0e1:	pop    ecx
  40e0e2:	hlt    
  40e0e3:	xchg   DWORD PTR [ebx],ebx
  40e0e5:	cmp    ch,dl
  40e0e7:	dec    edi
  40e0e8:	adc    ch,ah
  40e0ea:	xor    ch,BYTE PTR [ebx-0x427d3c3b]
  40e0f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e0f1:	fild   WORD PTR [ebp+ebx*2-0x1f0ae59d]
  40e0f8:	mov    dl,0xa2
  40e0fa:	cs and bp,WORD PTR fs:[ebx-0x1b0027b9]
  40e103:	mov    dh,0x4d
  40e105:	stc    
  40e106:	loop   0x40e0fd
  40e108:	jbe    0x40e185
  40e10a:	imul   esp,DWORD PTR [ecx+eax*4+0x1aff0080],0x3f
  40e112:	scas   al,BYTE PTR es:[edi]
  40e113:	pop    ds
  40e114:	add    al,0x27
  40e116:	or     ch,bl
  40e118:	pop    ds
  40e119:	sbb    dh,dl
  40e11b:	pop    eax
  40e11c:	xchg   ebp,eax
  40e11d:	and    BYTE PTR [ebx-0x2e],ah
  40e120:	xchg   BYTE PTR [ebx+0x2b],ch
  40e123:	push   ebp
  40e124:	scas   al,BYTE PTR es:[edi]
  40e125:	cmp    ah,BYTE PTR [ebp-0x3]
  40e128:	popa   
  40e129:	cmp    al,BYTE PTR [ebp-0x23]
  40e12c:	test   DWORD PTR ds:0xe1b35adc,ebp
  40e132:	and    eax,0xd29721e6
  40e137:	dec    eax
  40e138:	or     DWORD PTR [edx],eax
  40e13a:	xchg   esi,eax
  40e13b:	repz sbb al,0x92
  40e13e:	sti    
  40e13f:	(bad)  [edi+0x4d]
  40e142:	mov    dl,dh
  40e144:	das    
  40e145:	fst    QWORD PTR [edi+0x56]
  40e148:	mov    ds:0x772df78e,eax
  40e14d:	iret   
  40e14e:	xchg   esi,eax
  40e14f:	cwde   
  40e150:	jne    0x40e1a1
  40e152:	shl    DWORD PTR [ecx+0x63c2fa7d],1
  40e158:	pop    ebx
  40e159:	sub    ah,BYTE PTR [esi+ebx*1+0x7a]
  40e15d:	cwde   
  40e15e:	push   ebp
  40e15f:	dec    edx
  40e160:	bound  ebx,QWORD PTR [ecx+0x23e1a6c4]
  40e166:	push   cs
  40e167:	imul   edx,DWORD PTR ds:0x4feda6a9,0x5d
  40e16e:	cmc    
  40e16f:	or     ah,BYTE PTR [ecx+0x2502d4f0]
  40e175:	sar    BYTE PTR [ebp-0x4cb46d73],0x55
  40e17c:	mov    edi,DWORD PTR [ebx+0x767deea6]
  40e182:	cmp    BYTE PTR [eax+0x4295d093],0x2c
  40e189:	stos   BYTE PTR es:[edi],al
  40e18a:	push   edx
  40e18b:	clc    
  40e18c:	dec    ebx
  40e18d:	sub    al,0x3e
  40e18f:	cwde   
  40e190:	add    al,0x16
  40e192:	(bad)  
  40e194:	xor    BYTE PTR [eax-0x43e58b2b],ah
  40e19a:	ror    BYTE PTR [edi-0x5254e2c5],1
  40e1a0:	sub    esp,DWORD PTR [ebp+edx*1-0x3f78537d]
  40e1a7:	out    dx,eax
  40e1a8:	test   al,0x69
  40e1aa:	mov    cl,0x75
  40e1ac:	push   0x40
  40e1ae:	mov    eax,edi
  40e1b0:	lahf   
  40e1b1:	mov    ecx,0x3ea3511b
  40e1b6:	xchg   DWORD PTR [ebx+eiz*4+0x75],esi
  40e1ba:	pop    ecx
  40e1bb:	add    al,bh
  40e1bd:	popa   
  40e1be:	jmp    0x31a41192
  40e1c3:	(bad)  
  40e1c4:	cmp    eax,edi
  40e1c6:	cmp    BYTE PTR [ebx],dl
  40e1c8:	ds ja  0x40e209
  40e1cb:	push   esp
  40e1cc:	xchg   ebx,eax
  40e1cd:	pop    ss
  40e1ce:	rcl    DWORD PTR [edi-0x2cf02cae],cl
  40e1d4:	test   eax,0xd88da9c3
  40e1d9:	ins    BYTE PTR es:[edi],dx
  40e1da:	xchg   esp,eax
  40e1db:	std    
  40e1dc:	mov    ecx,0xe452b52f
  40e1e1:	push   edx
  40e1e2:	mov    eax,0xc0d4adf1
  40e1e7:	mov    eax,ds:0x3116af7d
  40e1ed:	mov    eax,0x73a6cd61
  40e1f2:	(bad)  
  40e1f3:	mov    ds:0xa0173962,eax
  40e1f8:	sbb    DWORD PTR [ebx+0x9],0xffffffcc
  40e1fc:	mov    esi,DWORD PTR [esi+0x438375ac]
  40e202:	jb     0x40e238
  40e204:	popa   
  40e205:	test   BYTE PTR [ecx],dh
  40e207:	cmp    DWORD PTR [esi+0x4f09ed4c],edi
  40e20d:	pop    edi
  40e20e:	test   bl,0xdf
  40e211:	sub    BYTE PTR [esi],ch
  40e213:	xchg   ecx,eax
  40e214:	pop    es
  40e215:	fincstp 
  40e217:	or     ah,BYTE PTR [ebx]
  40e219:	cs pop ebx
  40e21b:	leave  
  40e21c:	rol    DWORD PTR [eax-0x30d4d35c],0x48
  40e223:	lds    ebp,FWORD PTR [edi+ebx*4]
  40e226:	xor    eax,0xf4f29b3a
  40e22b:	jns    0x40e247
  40e22d:	daa    
  40e22e:	push   ecx
  40e22f:	and    eax,0x5d53e793
  40e234:	xchg   DWORD PTR [esi-0x27a674b3],eax
  40e23a:	xchg   ecx,eax
  40e23b:	out    dx,al
  40e23c:	cmp    ebp,DWORD PTR [esi]
  40e23e:	fcomi  st,st(1)
  40e240:	into   
  40e241:	sbb    al,0xe4
  40e243:	outs   dx,BYTE PTR ds:[esi]
  40e244:	scas   eax,DWORD PTR es:[edi]
  40e245:	daa    
  40e246:	inc    BYTE PTR ds:0xfd16a674
  40e24c:	int3   
  40e24d:	mov    ecx,0x45ee7ff8
  40e252:	ret    0xdd3b
  40e255:	aaa    
  40e256:	ss stos BYTE PTR es:[edi],al
  40e258:	add    al,0x26
  40e25a:	xor    eax,0x82dfaefc
  40e25f:	ja     0x40e2db
  40e261:	cmp    dh,al
  40e263:	pop    edx
  40e264:	je     0x40e2db
  40e266:	in     eax,dx
  40e267:	push   esp
  40e268:	out    dx,al
  40e269:	rcr    BYTE PTR [eax+0x7bbe3f3],1
  40e26f:	mov    eax,ds:0xf6724833
  40e274:	rcl    DWORD PTR [ecx-0x15],0xb2
  40e278:	mov    BYTE PTR [ebx+0x30ffd748],bh
  40e27e:	mov    BYTE PTR [eax-0x4f7a1ef3],bl
  40e284:	fsub   QWORD PTR [eax-0x6ab7624c]
  40e28a:	cwde   
  40e28b:	jmp    0x9500:0x576b89af
  40e292:	sub    dl,BYTE PTR [esi]
  40e294:	xchg   DWORD PTR [ecx+0x7e],ecx
  40e297:	push   edx
  40e298:	push   ebx
  40e299:	push   ebp
  40e29a:	ror    BYTE PTR [ebp+0x68],cl
  40e29d:	nop
  40e29e:	jne    0x40e2b4
  40e2a0:	sbb    dl,BYTE PTR [edx-0x4f]
  40e2a3:	xor    ecx,ecx
  40e2a5:	in     eax,0x6e
  40e2a7:	adc    eax,0xf63460b3
  40e2ac:	pop    ebp
  40e2ad:	(bad)  
  40e2ae:	and    al,0xac
  40e2b0:	dec    eax
  40e2b1:	test   esi,0xfaf83075
  40e2b7:	jmp    0xd88f:0xc93c7aab
  40e2be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e2bf:	jp     0x40e2bf
  40e2c1:	sub    edx,edx
  40e2c3:	ds cmp al,0x64
  40e2c6:	add    BYTE PTR [edx-0x41e12f38],0x27
  40e2cd:	pop    esi
  40e2ce:	cdq    
  40e2cf:	jecxz  0x40e2fa
  40e2d1:	and    eax,0x9fb83417
  40e2d6:	cmp    DWORD PTR [edi-0x19608a4b],ebp
  40e2dc:	js     0x40e2f5
  40e2de:	mov    ch,0xb7
  40e2e0:	das    
  40e2e1:	in     al,0xb9
  40e2e3:	fs repnz xor ebx,0x4273b88c
  40e2eb:	jo     0x40e326
  40e2ed:	bound  ecx,QWORD PTR [ebp+0x563650a4]
  40e2f3:	adc    BYTE PTR [ebp+0x3eca08ca],dh
  40e2f9:	gs je  0x40e28a
  40e2fc:	pushf  
  40e2fd:	and    eax,0xd45b2aa3
  40e302:	jg     0xfc4cdff5
  40e308:	jns    0x40e28d
  40e30a:	mov    eax,ds:0x65c4146f
  40e30f:	sub    edx,DWORD PTR [edx-0x12f49ce4]
  40e315:	aas    
  40e316:	sub    ebx,DWORD PTR [esi+0x4d]
  40e319:	add    edx,esi
  40e31b:	stos   BYTE PTR es:[edi],al
  40e31c:	and    ebx,DWORD PTR [ecx-0x19]
  40e31f:	inc    eax
  40e320:	dec    edi
  40e321:	sub    ch,BYTE PTR [edx]
  40e323:	in     al,dx
  40e324:	inc    ecx
  40e325:	inc    edi
  40e326:	inc    esp
  40e327:	test   eax,0x5d5fdcf2
  40e32c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e32d:	retf   
  40e32e:	pop    eax
  40e32f:	stos   DWORD PTR es:[edi],eax
  40e330:	std    
  40e331:	dec    eax
  40e332:	call   0x82f5ab7d
  40e337:	gs jns 0x40e2c6
  40e33a:	cmp    cl,cl
  40e33c:	sub    BYTE PTR ds:0x4a9678e6,0xed
  40e343:	iret   
  40e344:	lahf   
  40e345:	sbb    dl,BYTE PTR [edi]
  40e347:	fs stos BYTE PTR es:[edi],al
  40e349:	fdiv   DWORD PTR ds:[ecx+0xf1d3076]
  40e350:	and    dl,BYTE PTR [edi-0x644d70cb]
  40e356:	dec    ebx
  40e357:	sbb    bh,ah
  40e359:	dec    esi
  40e35a:	stc    
  40e35b:	popf   
  40e35c:	(bad)  
  40e35d:	push   edx
  40e35e:	mov    fs,WORD PTR [ebx]
  40e360:	rcr    DWORD PTR [edi-0x7f25234e],0xf4
  40e367:	xchg   BYTE PTR [eax],dh
  40e369:	push   ebp
  40e36a:	lea    edi,[ecx+0x7a]
  40e36d:	sub    al,BYTE PTR [esi]
  40e36f:	push   edx
  40e370:	sbb    DWORD PTR [ebx+0x45],ebx
  40e373:	xor    al,BYTE PTR [ecx-0x6a]
  40e376:	jmp    0xdd60:0xa78c
  40e37c:	test   DWORD PTR [esi+0x1802d3ec],0x984555dc
  40e386:	mov    eax,ds:0xa8e8ea0e
  40e38b:	xchg   ebp,eax
  40e38c:	fiadd  DWORD PTR [ecx]
  40e38e:	sub    DWORD PTR [ebp+0x3c67c24],0x3da5f5b3
  40e398:	lea    esi,ds:0x9d19b379
  40e39e:	jecxz  0x40e39f
  40e3a0:	cld    
  40e3a1:	fstp   DWORD PTR [esi-0xa642192]
  40e3a7:	jecxz  0x40e3f9
  40e3a9:	test   DWORD PTR [edx-0x48],0xd2542610
  40e3b0:	call   0x4407:0x45453918
  40e3b7:	sub    DWORD PTR ds:0x7299e5f9,ecx
  40e3bd:	jnp    0x40e3ba
  40e3bf:	and    al,0x9
  40e3c1:	loop   0x40e3af
  40e3c3:	cmp    al,0xbb
  40e3c5:	push   ss
  40e3c6:	jle    0x40e3f2
  40e3c8:	les    eax,FWORD PTR [edx-0x68bb058]
  40e3ce:	loop   0x40e382
  40e3d0:	es or  al,0xb2
  40e3d3:	xor    eax,0x626fe68e
  40e3d8:	and    al,0xee
  40e3da:	fmul   DWORD PTR [edx+0x75]
  40e3dd:	sbb    al,0xb2
  40e3df:	adc    DWORD PTR [ebx-0x8],eax
  40e3e2:	pop    ss
  40e3e3:	std    
  40e3e4:	jo     0x40e3ea
  40e3e6:	xor    cl,dh
  40e3e8:	add    BYTE PTR [esp+edi*4],dl
  40e3eb:	dec    ebx
  40e3ec:	gs jae 0x40e3c9
  40e3ef:	and    DWORD PTR [ecx],ebp
  40e3f1:	lahf   
  40e3f2:	mov    al,ds:0xf8b13d7b
  40e3f7:	dec    eax
  40e3f8:	test   BYTE PTR [edx+0x40],dl
  40e3fb:	xchg   ebp,eax
  40e3fc:	sub    al,0xee
  40e3fe:	or     BYTE PTR [edi-0x5e],al
  40e401:	aam    0x61
  40e403:	inc    esi
  40e404:	imul   bh
  40e406:	cmp    al,0x96
  40e408:	in     al,dx
  40e409:	scas   al,BYTE PTR es:[edi]
  40e40a:	mov    al,BYTE PTR [edx-0x1d]
  40e40d:	aas    
  40e40e:	jno    0x40e417
  40e410:	mov    fs,WORD PTR [edx]
  40e412:	aam    0x55
  40e414:	shl    DWORD PTR [eax-0x6e658a13],cl
  40e41a:	iret   
  40e41b:	mov    ebx,cr3
  40e41e:	xchg   ebx,eax
  40e41f:	jns    0x40e3e5
  40e421:	(bad)  [ecx]
  40e423:	mov    ?,ebx
  40e425:	das    
  40e426:	lds    esp,FWORD PTR [ebx+0x5b]
  40e429:	fcomp  DWORD PTR ds:0x31d40614
  40e42f:	mov    DWORD PTR [ebp+0x65],ecx
  40e432:	add    cl,BYTE PTR [esi+ebp*1+0x62]
  40e436:	add    bl,BYTE PTR [edi-0x34]
  40e439:	enter  0x333a,0x72
  40e43d:	lea    ebp,[eax+0x79]
  40e440:	add    BYTE PTR [edx+0x41],ch
  40e443:	ror    DWORD PTR [edi+eax*8+0x18],cl
  40e447:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e448:	pop    esi
  40e449:	aam    0x5f
  40e44b:	jg     0x40e452
  40e44d:	push   ebp
  40e44e:	cli    
  40e44f:	retf   0xa6c5
  40e452:	adc    ah,al
  40e454:	fidivr DWORD PTR [esi]
  40e456:	in     al,0x2f
  40e458:	inc    eax
  40e459:	cwde   
  40e45a:	es sti 
  40e45c:	mov    al,ds:0x5a4b9b69
  40e461:	add    al,0x1
  40e463:	js     0x40e408
  40e465:	mov    ecx,0x850433e2
  40e46a:	rdpmc  
  40e46c:	test   BYTE PTR [ecx],ah
  40e46e:	cs pop ds
  40e470:	clc    
  40e471:	scas   eax,DWORD PTR es:[edi]
  40e472:	sbb    bl,BYTE PTR [ebx-0x27e3b92]
  40e478:	mov    eax,0x79de6af2
  40e47d:	cmp    al,0x40
  40e47f:	pop    edx
  40e480:	mov    ch,0xea
  40e482:	fbstp  TBYTE PTR [esi+ebp*8]
  40e485:	add    al,0x12
  40e487:	leave  
  40e488:	pop    ecx
  40e489:	mov    al,BYTE PTR [ebx]
  40e48b:	and    esi,DWORD PTR [eax-0x2218887d]
  40e491:	xor    DWORD PTR [esi],ecx
  40e493:	sbb    al,0xdb
  40e495:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e496:	xchg   BYTE PTR [eax+0x78],bh
  40e499:	inc    ecx
  40e49a:	in     eax,dx
  40e49b:	adc    DWORD PTR [eax+0x4bab06ad],edx
  40e4a1:	adc    al,0xbb
  40e4a3:	arpl   WORD PTR [ecx+0x66],di
  40e4a6:	fnstcw WORD PTR [ebp+0x2e0af34f]
  40e4ac:	xchg   ebx,eax
  40e4ad:	aam    0xcf
  40e4af:	or     dh,al
  40e4b1:	outs   dx,DWORD PTR ds:[esi]
  40e4b2:	test   edx,ecx
  40e4b4:	and    eax,0x3a5510e3
  40e4b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e4ba:	inc    eax
  40e4bb:	cmp    al,0x30
  40e4bd:	dec    edi
  40e4be:	push   cs
  40e4bf:	jge    0x40e490
  40e4c1:	jmp    0x891c:0xdf56025e
  40e4c8:	fnstenv [edi+0x54]
  40e4cb:	icebp  
  40e4cc:	and    DWORD PTR [eax],ebp
  40e4ce:	ins    DWORD PTR es:[edi],dx
  40e4cf:	mov    ds:0x3da7c7bb,eax
  40e4d4:	xchg   edx,eax
  40e4d5:	pop    esi
  40e4d6:	mov    al,ds:0x6f8d2853
  40e4db:	stos   DWORD PTR es:[edi],eax
  40e4dc:	push   es
  40e4dd:	and    BYTE PTR [edx],bl
  40e4df:	cdq    
  40e4e0:	call   0x25e8:0xee80b7b8
  40e4e7:	shl    BYTE PTR [ebp+ebx*1-0xb53168c],1
  40e4ee:	mov    ?,WORD PTR [ecx-0x11967fcc]
  40e4f4:	iret   
  40e4f5:	cmp    BYTE PTR [edi-0xf3b5d96],ch
  40e4fb:	mov    dl,BYTE PTR [eax]
  40e4fd:	or     BYTE PTR [eax],cl
  40e4ff:	dec    eax
  40e500:	das    
  40e501:	xchg   esi,eax
  40e502:	dec    esi
  40e503:	inc    edx
  40e504:	out    0x12,al
  40e506:	jne    0x40e577
  40e508:	xor    DWORD PTR [edi],esi
  40e50a:	mov    ?,ecx
  40e50c:	push   eax
  40e50d:	dec    eax
  40e50e:	ins    BYTE PTR es:[edi],dx
  40e50f:	dec    eax
  40e510:	push   0x3
  40e512:	dec    esi
  40e513:	xchg   esi,eax
  40e514:	adc    esi,DWORD PTR [edi]
  40e516:	xchg   esp,ecx
  40e518:	pop    ss
  40e519:	in     eax,dx
  40e51a:	adc    cl,BYTE PTR [eax-0x3fe06011]
  40e520:	icebp  
  40e521:	hlt    
  40e522:	sub    ebp,DWORD PTR [edx]
  40e524:	sbb    al,0xd0
  40e526:	mov    dh,dl
  40e528:	inc    ebx
  40e529:	push   es
  40e52a:	or     eax,0xd25a0bfa
  40e52f:	daa    
  40e530:	ret    0xc0a4
  40e533:	pop    edx
  40e534:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  40e536:	xchg   DWORD PTR cs:[edx-0x14],edi
  40e53a:	add    al,BYTE PTR [ebx+0x63b59b64]
  40e540:	mov    ecx,cs
  40e542:	sbb    ecx,DWORD PTR [ebx]
  40e544:	mov    BYTE PTR [edi+0x66],dh
  40e547:	test   BYTE PTR [ebx-0x47],bl
  40e54a:	dec    ebx
  40e54b:	int    0xf3
  40e54d:	nop
  40e54e:	cmp    ebp,edx
  40e550:	lods   al,BYTE PTR ds:[esi]
  40e551:	scas   al,BYTE PTR es:[edi]
  40e552:	test   eax,0xe5e1c2e7
  40e557:	loopne 0x40e4f3
  40e559:	sub    al,0xd5
  40e55b:	push   0xffffffb4
  40e55d:	mov    ebp,0xc9781dd9
  40e562:	xlat   BYTE PTR ds:[ebx]
  40e563:	xchg   ebp,eax
  40e564:	lea    esi,[ebx+ecx*1+0x4e]
  40e568:	pop    ebx
  40e569:	leave  
  40e56a:	push   ds
  40e56b:	pop    esp
  40e56c:	lods   eax,DWORD PTR ds:[esi]
  40e56d:	fneni(8087 only) 
  40e56f:	pop    esp
  40e570:	adc    edx,edi
  40e572:	leave  
  40e573:	cdq    
  40e574:	cwde   
  40e575:	(bad)  
  40e576:	loope  0x40e511
  40e578:	and    bh,BYTE PTR [esi+ebx*4]
  40e57b:	popf   
  40e57c:	fwait
  40e57d:	(bad)  
  40e57e:	jle    0x40e516
  40e580:	and    DWORD PTR [ebx],esi
  40e582:	loope  0x40e56a
  40e584:	mov    bl,0xb1
  40e586:	jno    0x40e5b6
  40e588:	and    ebx,esp
  40e58a:	mov    dh,0x20
  40e58c:	adc    bl,BYTE PTR [ecx+0x3ec7a56e]
  40e592:	arpl   WORD PTR [ebx-0x3117fa0b],di
  40e598:	(bad)  
  40e599:	bound  edx,QWORD PTR [esp+0x22]
  40e59d:	frstor [ecx-0x53d6fff8]
  40e5a3:	fisttp WORD PTR [ebp-0x4d]
  40e5a6:	repz or BYTE PTR [ebp+ecx*4+0x1b],bl
  40e5ab:	scas   al,BYTE PTR es:[edi]
  40e5ac:	sub    al,0x5f
  40e5ae:	ret    0xd4cd
  40e5b1:	cdq    
  40e5b2:	enter  0x9888,0xd9
  40e5b6:	sub    al,0xc4
  40e5b8:	add    dl,dh
  40e5ba:	loopne 0x40e5b6
  40e5bc:	push   edx
  40e5bd:	and    DWORD PTR [ecx+0x58],ebx
  40e5c0:	mov    BYTE PTR ds:0x5731485b,dh
  40e5c6:	sub    al,0xf6
  40e5c8:	xor    eax,0x5138cb1f
  40e5cd:	std    
  40e5ce:	icebp  
  40e5cf:	ins    BYTE PTR es:[edi],dx
  40e5d0:	mov    ah,0x26
  40e5d2:	shl    BYTE PTR [eax+0x12dcf62e],cl
  40e5d8:	xchg   esi,eax
  40e5d9:	(bad)  
  40e5da:	xchg   edx,eax
  40e5db:	pusha  
  40e5dc:	pop    esp
  40e5dd:	or     BYTE PTR [esi],ch
  40e5df:	inc    esi
  40e5e0:	dec    ecx
  40e5e1:	aam    0x29
  40e5e3:	xchg   edi,eax
  40e5e4:	jecxz  0x40e5a4
  40e5e6:	jp     0x40e5d2
  40e5e8:	and    ebx,DWORD PTR [edi]
  40e5ea:	out    0x6d,eax
  40e5ec:	xchg   edi,eax
  40e5ed:	es dec ecx
  40e5ef:	xchg   edx,eax
  40e5f0:	ffreep st(6)
  40e5f2:	mov    bl,0xb1
  40e5f4:	push   es
  40e5f5:	icebp  
  40e5f6:	repnz inc ecx
  40e5f8:	and    al,0x1c
  40e5fa:	xchg   ebp,eax
  40e5fb:	shl    BYTE PTR [esi+0x5e],cl
  40e5fe:	test   DWORD PTR [esi+esi*8],eax
  40e601:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e602:	neg    BYTE PTR [esp+eax*1+0x195dbc04]
  40e609:	inc    ecx
  40e60a:	push   es
  40e60b:	scas   eax,DWORD PTR es:[edi]
  40e60c:	retf   
  40e60d:	std    
  40e60e:	out    dx,eax
  40e60f:	xchg   ebx,eax
  40e610:	or     dl,dl
  40e612:	jb     0x40e5c2
  40e614:	push   0xffffffc5
  40e616:	push   ecx
  40e617:	cmc    
  40e618:	mov    bh,0x7b
  40e61a:	mov    esp,0xa7773cb9
  40e61f:	xor    esi,DWORD PTR [edx]
  40e621:	dec    esi
  40e622:	sub    eax,0x2fb6b1db
  40e627:	shl    BYTE PTR [edx+ebx*4+0x27],0xbc
  40e62c:	mov    al,ds:0x8000411
  40e631:	repz jecxz 0x40e67f
  40e634:	jne    0x40e66d
  40e636:	push   ebx
  40e637:	(bad)  
  40e638:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e639:	popf   
  40e63a:	fst    QWORD PTR es:[ecx+0x4ad1221c]
  40e641:	and    ecx,DWORD PTR [ecx-0x4f7a5826]
  40e647:	test   al,0x3a
  40e649:	xor    bl,ch
  40e64b:	push   esi
  40e64c:	imul   BYTE PTR [ebx]
  40e64e:	jb     0x40e66d
  40e650:	pop    sp
  40e652:	pop    edx
  40e653:	in     eax,0xf
  40e655:	jb     0x40e6a7
  40e657:	cmp    al,dl
  40e659:	cmpxchg DWORD PTR [edx],ecx
  40e65c:	mov    fs,WORD PTR ds:0xca61b3a1
  40e662:	cli    
  40e663:	mov    esi,0xaaebdd67
  40e668:	cld    
  40e669:	rol    DWORD PTR [ebp+0x3e],0x82
  40e66d:	jecxz  0x40e6e0
  40e66f:	cmp    eax,0x7f66efdf
  40e674:	pop    edx
  40e675:	adc    ecx,DWORD PTR [ecx]
  40e677:	cmp    ah,cl
  40e679:	dec    esi
  40e67a:	inc    edx
  40e67b:	daa    
  40e67c:	fwait
  40e67d:	shl    DWORD PTR [ebp+0x3e],1
  40e680:	and    al,0x3a
  40e682:	mov    ah,0x7c
  40e684:	fs iret 
  40e686:	pop    edi
  40e687:	pop    esp
  40e688:	daa    
  40e689:	adc    WORD PTR [eax],bx
  40e68c:	(bad)  
  40e68d:	sub    BYTE PTR [edi-0x6fdccb68],ah
  40e693:	jmp    0x4437:0xb29b950e
  40e69a:	mov    ah,0xaf
  40e69c:	aad    0x4b
  40e69e:	gs inc ebx
  40e6a0:	jge    0x40e653
  40e6a2:	and    BYTE PTR [ecx+0x7e5562d6],ah
  40e6a8:	cmp    cl,bh
  40e6aa:	jge    0x40e6e2
  40e6ac:	icebp  
  40e6ad:	imul   eax,DWORD PTR [ebp+esi*8-0x7a],0x5586928e
  40e6b5:	inc    esp
  40e6b6:	xor    eax,0xd7fd664f
  40e6bb:	sbb    BYTE PTR [edi],bl
  40e6bd:	repnz xchg esp,eax
  40e6bf:	mov    ebp,0x95dcb83d
  40e6c4:	push   ds
  40e6c5:	lds    eax,FWORD PTR [ebp-0x59]
  40e6c8:	ja     0x40e70b
  40e6ca:	mov    esp,0x19a76de7
  40e6cf:	dec    esp
  40e6d0:	push   eax
  40e6d1:	in     eax,0xd7
  40e6d3:	pop    ecx
  40e6d4:	jne    0x40e744
  40e6d6:	jmp    0x9b4a:0xb88ed49c
  40e6dd:	sbb    BYTE PTR [esi+0x78],bl
  40e6e0:	inc    edx
  40e6e1:	cwde   
  40e6e2:	imul   ebp,DWORD PTR [esi],0x1
  40e6e5:	popf   
  40e6e6:	xchg   BYTE PTR [ecx+0x7a16366f],bh
  40e6ec:	jae    0x40e670
  40e6ee:	or     esi,DWORD PTR [ebx+0x62432b85]
  40e6f4:	inc    ecx
  40e6f5:	sbb    eax,0xc01f5b3d
  40e6fa:	in     al,0x2a
  40e6fc:	push   ss
  40e6fd:	aad    0xa4
  40e6ff:	jp     0x40e73f
  40e701:	jnp    0x40e770
  40e703:	jge    0x40e6a8
  40e705:	cli    
  40e706:	shl    BYTE PTR [ecx-0x1],1
  40e709:	adc    edi,DWORD PTR [esi+0x2da5cf74]
  40e70f:	push   edx
  40e710:	lock ss jo 0x40e790
  40e714:	jbe    0x40e6a9
  40e716:	inc    esp
  40e717:	sti    
  40e718:	and    al,0xf5
  40e71a:	in     al,0x57
  40e71c:	mov    ds:0xf9d55d10,eax
  40e721:	jl     0x40e714
  40e723:	fcomp  DWORD PTR [esi]
  40e725:	adc    dh,BYTE PTR [esi+0x60baa2e8]
  40e72b:	push   edi
  40e72c:	pop    ebx
  40e72d:	xor    bl,BYTE PTR ds:0x4df41a61
  40e733:	daa    
  40e734:	fdivr  QWORD PTR [edx]
  40e736:	sbb    al,0xe9
  40e738:	test   eax,0xe41183a7
  40e73d:	stos   BYTE PTR es:[edi],al
  40e73e:	aad    0xce
  40e740:	sub    BYTE PTR [esi+0x5f],dh
  40e743:	xchg   ebp,eax
  40e744:	mov    ds:0x6fc50802,al
  40e749:	and    al,ah
  40e74b:	nop
  40e74c:	xor    esi,esp
  40e74e:	cdq    
  40e74f:	outs   dx,BYTE PTR ds:[esi]
  40e750:	xlat   BYTE PTR ds:[ebx]
  40e751:	test   al,0x88
  40e753:	xor    edx,DWORD PTR [edi]
  40e755:	jl     0x40e7b3
  40e757:	mov    dl,0x13
  40e759:	fsubr  DWORD PTR ds:0xbc031a00
  40e75f:	out    dx,eax
  40e760:	mov    ds:0x769be9be,al
  40e765:	mov    bl,0x1f
  40e767:	cmp    DWORD PTR [ebx],eax
  40e769:	dec    ebx
  40e76a:	sub    edi,DWORD PTR [ecx-0x42]
  40e76d:	dec    eax
  40e76e:	imul   ecx,DWORD PTR [ecx+0x603e56a1],0xffffffe6
  40e775:	(bad)  
  40e776:	inc    BYTE PTR [ecx+0x4a]
  40e779:	enter  0xb7db,0x6e
  40e77d:	sbb    bh,BYTE PTR [esi+eiz*4-0x5f10d4af]
  40e784:	adc    bh,ah
  40e786:	scas   eax,DWORD PTR es:[edi]
  40e787:	shl    BYTE PTR [edi-0x324e5201],0x28
  40e78e:	push   0x6da7ecb9
  40e793:	sub    bh,BYTE PTR [eax-0x5b]
  40e796:	ss (bad) 
  40e798:	retf   0xa0d3
  40e79b:	sbb    eax,DWORD PTR [ecx+0x3c95b6ad]
  40e7a1:	inc    esp
  40e7a2:	push   es
  40e7a3:	mov    cl,BYTE PTR [edi+0x5f019677]
  40e7a9:	xchg   BYTE PTR [eax],dl
  40e7ab:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e7ad:	out    dx,al
  40e7ae:	mov    bl,BYTE PTR [ebx-0xc]
  40e7b1:	cmp    dl,cl
  40e7b3:	xchg   ebp,eax
  40e7b4:	ret    0xcdf8
  40e7b7:	sti    
  40e7b8:	dec    esi
  40e7b9:	or     ch,BYTE PTR [edx+0x5d]
  40e7bc:	add    dl,BYTE PTR [ecx+0x74]
  40e7bf:	xchg   edi,eax
  40e7c0:	icebp  
  40e7c1:	inc    ebx
  40e7c2:	imul   esp,ebp,0xffffffe0
  40e7c5:	cdq    
  40e7c6:	xor    DWORD PTR [ebp-0x68],ebx
  40e7c9:	cmc    
  40e7ca:	xchg   edx,eax
  40e7cb:	iret   
  40e7cc:	outs   dx,BYTE PTR ds:[esi]
  40e7cd:	or     eax,0xa77f1a88
  40e7d2:	pop    edx
  40e7d3:	je     0x40e84a
  40e7d5:	xchg   BYTE PTR [edx-0x36],bl
  40e7d8:	stos   BYTE PTR es:[edi],al
  40e7d9:	inc    eax
  40e7da:	mov    eax,ds:0xd5c78cc
  40e7df:	push   edx
  40e7e0:	imul   edx,eax,0x7d
  40e7e3:	mov    esi,0x9f0681fb
  40e7e8:	fist   WORD PTR [eax+0x4c]
  40e7eb:	into   
  40e7ec:	das    
  40e7ed:	scas   eax,DWORD PTR es:[edi]
  40e7ee:	and    BYTE PTR [ebx+0x44db4a3c],cl
  40e7f4:	or     ah,0x53
  40e7f7:	jp     0x40e7ba
  40e7f9:	ss cmp esp,edx
  40e7fc:	icebp  
  40e7fd:	pop    ebx
  40e7fe:	pop    edi
  40e7ff:	mov    eax,ds:0x57bfe96e
  40e804:	shl    DWORD PTR [edi-0x4bf25ebe],cl
  40e80a:	and    al,0x6b
  40e80c:	xlat   BYTE PTR ds:[ebx]
  40e80d:	imul   edi,ecx,0xc88a2b5a
  40e813:	push   ds
  40e814:	mov    ebp,0xb8b1dfbc
  40e819:	add    eax,0xc59179e0
  40e81e:	mov    ch,0x96
  40e820:	lds    esp,FWORD PTR [edx+0x2]
  40e823:	sbb    BYTE PTR [ecx],ch
  40e825:	jmp    FWORD PTR ds:0xbbdc4095
  40e82b:	mov    eax,ds:0x99739a10
  40e830:	add    edx,DWORD PTR [esi+0x1d]
  40e833:	ret    0xb5d8
  40e836:	lahf   
  40e837:	adc    eax,0xf12388f9
  40e83c:	fisttp WORD PTR ds:0x2075a7ba
  40e842:	rol    BYTE PTR [ecx],1
  40e844:	pop    ss
  40e845:	sar    ebp,cl
  40e847:	mov    al,0x37
  40e849:	ret    0x9718
  40e84c:	push   esi
  40e84d:	cmp    eax,0xb5b6232f
  40e852:	repz jmp 0x40e838
  40e855:	sub    ebp,DWORD PTR [esi]
  40e857:	jmp    0xbf6ddc6c
  40e85c:	jmp    0x100be39c
  40e861:	(bad)  
  40e862:	push   edi
  40e863:	shl    BYTE PTR [ebx],1
  40e865:	mov    ebx,DWORD PTR [edx+0x51]
  40e868:	aaa    
  40e869:	nop
  40e86a:	xor    eax,0x93a1859e
  40e86f:	clc    
  40e870:	cmc    
  40e871:	test   al,0x44
  40e873:	in     eax,dx
  40e874:	bound  ebp,QWORD PTR ds:0x36b30aa
  40e87a:	call   0xcb24:0x5a641c11
  40e881:	jnp    0x40e848
  40e883:	sub    al,0x30
  40e885:	into   
  40e886:	mov    al,0xc9
  40e888:	shr    ebp,1
  40e88a:	aas    
  40e88b:	into   
  40e88c:	mov    edi,0xc06aaaac
  40e891:	jbe    0x40e8a9
  40e893:	xor    DWORD PTR [edi+0x37b9b29b],eax
  40e899:	imul   ebx,ecx,0xffffffed
  40e89c:	je     0x40e846
  40e89e:	pop    ds
  40e89f:	xchg   ecx,eax
  40e8a0:	and    edx,DWORD PTR [ebx+0x58]
  40e8a3:	mov    bl,0xa6
  40e8a5:	mov    esi,0x81e6435e
  40e8aa:	add    bh,dl
  40e8ac:	lods   al,BYTE PTR ds:[esi]
  40e8ad:	inc    edx
  40e8ae:	mov    esi,0x526b8821
  40e8b3:	xor    bl,ah
  40e8b5:	xor    esi,0x7d4ba4e
  40e8bb:	or     dh,BYTE PTR [edi-0x3]
  40e8be:	inc    edi
  40e8bf:	test   al,0xb3
  40e8c1:	jmp    0xaaac:0x6b4d11b0
  40e8c8:	cmp    al,ch
  40e8ca:	mov    fs,WORD PTR [esi-0x15]
  40e8cd:	adc    DWORD PTR [edi],edx
  40e8cf:	pop    es
  40e8d0:	mov    cl,0xa0
  40e8d2:	cmp    BYTE PTR [ebx],0xcd
  40e8d5:	mov    ds:0xabfd24b1,al
  40e8db:	lds    ebp,FWORD PTR [edi-0x2b61aeeb]
  40e8e1:	push   esi
  40e8e2:	ss jno 0x40e960
  40e8e5:	inc    esp
  40e8e6:	sti    
  40e8e7:	sub    bl,BYTE PTR [edi-0x76ef919b]
  40e8ed:	push   ebp
  40e8ee:	adc    eax,0x19de8f6b
  40e8f3:	daa    
  40e8f4:	or     dh,BYTE PTR [esi-0x6d2ee4b4]
  40e8fa:	bnd jp 0x40e958
  40e8fd:	and    al,BYTE PTR [ebx+0x78e87f04]
  40e903:	or     edi,DWORD PTR [ebp-0xed63069]
  40e909:	test   DWORD PTR [edi],ebx
  40e90b:	jecxz  0x40e8b8
  40e90d:	repnz outs dx,BYTE PTR ds:[esi]
  40e90f:	int    0xd3
  40e911:	add    ebx,DWORD PTR [ebp+0x76]
  40e914:	ja     0x40e96d
  40e916:	pop    eax
  40e917:	in     al,dx
  40e918:	cmp    bl,BYTE PTR [edx]
  40e91a:	pop    ebp
  40e91b:	jmp    0x40e8b3
  40e91d:	cwde   
  40e91e:	mov    edx,0x7989ae38
  40e923:	inc    BYTE PTR [ebx-0x5]
  40e926:	push   cs
  40e927:	nop
  40e928:	dec    ebp
  40e929:	ror    BYTE PTR [esi],0x7c
  40e92c:	inc    eax
  40e92e:	dec    ebp
  40e92f:	test   DWORD PTR [ebx-0x22424fa1],ecx
  40e935:	leave  
  40e936:	test   BYTE PTR [esi],ah
  40e938:	lods   eax,DWORD PTR ds:[esi]
  40e939:	mov    bh,0x45
  40e93b:	loopne 0x40e916
  40e93d:	test   BYTE PTR [eax],cl
  40e93f:	ror    dl,1
  40e941:	test   BYTE PTR [edi-0x43ce736a],dh
  40e947:	pop    esp
  40e948:	cli    
  40e949:	and    BYTE PTR [esp+eax*1+0x5d],0x9d
  40e94e:	jmp    0xa794:0x30f50a40
  40e955:	(bad)
  40e958:	cmp    al,0x44
  40e95a:	and    al,0xa9
  40e95c:	sub    ebp,DWORD PTR [edx+0x1b14a0f7]
  40e962:	xlat   BYTE PTR ds:[ebx]
  40e963:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e964:	test   eax,0xdd14cb79
  40e969:	dec    esi
  40e96a:	xlat   BYTE PTR ds:[ebx]
  40e96b:	int3   
  40e96c:	sub    DWORD PTR [ebx*8-0x3089ce5],ebp
  40e973:	mov    BYTE PTR [ecx+0x65],bh
  40e976:	xor    DWORD PTR [ebx],edx
  40e978:	adc    al,ah
  40e97a:	out    dx,eax
  40e97b:	add    al,0xe
  40e97d:	retf   0x877
  40e980:	dec    esp
  40e981:	pop    esp
  40e982:	adc    dl,ah
  40e984:	xor    ch,BYTE PTR [ebp+0x7affb5c1]
  40e98a:	xlat   BYTE PTR ds:[ebx]
  40e98b:	mov    esi,0xbf2b7894
  40e990:	and    DWORD PTR [edi-0x4c],eax
  40e993:	iret   
  40e994:	mov    ch,0x1b
  40e996:	lock repnz mov ah,0xd6
  40e99a:	xchg   BYTE PTR [ecx],ah
  40e99c:	jae    0x40e9ff
  40e99e:	xchg   esi,eax
  40e99f:	jmp    0x56be:0x1ba73c27
  40e9a6:	out    dx,eax
  40e9a7:	aas    
  40e9a8:	(bad)  
  40e9aa:	lods   al,BYTE PTR ds:[esi]
  40e9ab:	push   ebx
  40e9ac:	sub    eax,0xdc53e624
  40e9b1:	add    DWORD PTR [edi+eax*1-0x74fac26d],edi
  40e9b8:	icebp  
  40e9b9:	jbe    0x40e94c
  40e9bb:	shr    DWORD PTR [eax+0x6a],cl
  40e9be:	or     eax,0x37449739
  40e9c3:	xor    esi,esi
  40e9c5:	push   es
  40e9c6:	das    
  40e9c7:	ror    BYTE PTR [esi],0xf2
  40e9ca:	ret    0x2a39
  40e9cd:	push   edx
  40e9ce:	mov    edi,0xbefcb485
  40e9d3:	lock jnp 0x40e9e5
  40e9d6:	sub    dh,BYTE PTR ds:0xdc5c7aad
  40e9dc:	or     bl,BYTE PTR [edx+0x627b3158]
  40e9e2:	std    
  40e9e3:	add    eax,0x50271c0e
  40e9e8:	push   ebx
  40e9e9:	fisubr DWORD PTR [edx]
  40e9eb:	int3   
  40e9ec:	and    BYTE PTR [eax],ah
  40e9ee:	out    dx,eax
  40e9ef:	(bad)  
  40e9f0:	mov    al,ds:0x17a12ccc
  40e9f5:	push   esi
  40e9f6:	mov    ebx,0x79c5f09e
  40e9fb:	mov    eax,0x8d728d10
  40ea00:	daa    
  40ea01:	mov    eax,DWORD PTR [ebx]
  40ea03:	js     0x40ea76
  40ea05:	gs icebp 
  40ea07:	jg     0x40e9df
  40ea09:	sbb    eax,0xcf7270cb
  40ea0e:	xor    al,0x7d
  40ea10:	mov    esi,0xf08f78fd
  40ea15:	jo     0x40ea11
  40ea17:	lds    ebp,FWORD PTR [ecx-0x291f4839]
  40ea1d:	mov    ds:0xa9baf431,eax
  40ea22:	pop    edx
  40ea23:	push   edi
  40ea24:	pusha  
  40ea25:	push   es
  40ea26:	or     bl,bl
  40ea28:	mov    edi,0x54b153c2
  40ea2d:	mov    dl,0x11
  40ea2f:	out    dx,al
  40ea30:	gs (bad) 
  40ea32:	pushf  
  40ea33:	pop    ecx
  40ea34:	adc    BYTE PTR [esi+0x79],ah
  40ea37:	data16 cmp dh,BYTE PTR [eax]
  40ea3a:	pop    eax
  40ea3b:	call   0xd546:0xb891b8a6
  40ea42:	out    dx,eax
  40ea43:	pop    es
  40ea44:	(bad)  
  40ea45:	out    dx,al
  40ea46:	xor    esp,ebx
  40ea48:	call   0xc07:0x170ca8d6
  40ea4f:	sub    al,0xf7
  40ea51:	(bad)  
  40ea52:	cld    
  40ea53:	xlat   BYTE PTR ds:[ebx]
  40ea54:	(bad)  
  40ea55:	std    
  40ea56:	cwde   
  40ea57:	inc    edi
  40ea58:	sbb    al,0xf
  40ea5a:	cmp    eax,0x2ce2734a
  40ea5f:	pop    DWORD PTR [eax-0x34]
  40ea62:	jmp    0xd5b5:0x61b7b783
  40ea69:	xchg   esp,eax
  40ea6a:	jns    0x40eaa7
  40ea6c:	jns    0x40eabc
  40ea6e:	sub    DWORD PTR [esi+0x51],eax
  40ea71:	push   eax
  40ea72:	inc    edx
  40ea73:	adc    DWORD PTR [ebp-0x24448ddf],ebp
  40ea79:	mov    ebx,0x32806a2f
  40ea7e:	call   0xd1de5930
  40ea83:	adc    al,0xfa
  40ea85:	add    eax,0x2c85fdcb
  40ea8a:	arpl   WORD PTR [eax+0x3d],bx
  40ea8d:	sahf   
  40ea8e:	bound  ebp,QWORD PTR [ebx+edi*4-0x49575c8b]
  40ea95:	sbb    BYTE PTR [ebp+ebx*2+0x5f],ah
  40ea99:	sub    al,BYTE PTR fs:[edx-0x4f]
  40ea9d:	and    al,0xbe
  40ea9f:	mov    al,0xca
  40eaa1:	bound  ecx,QWORD PTR [esp+eiz*8]
  40eaa4:	or     ecx,ecx
  40eaa6:	or     cl,bl
  40eaa8:	mul    DWORD PTR [edx]
  40eaaa:	jne    0x40ea86
  40eaac:	daa    
  40eaad:	addr16 jno 0x40eab0
  40eab0:	cmp    esi,edi
  40eab2:	(bad)  
  40eab3:	xor    eax,0x46d8c321
  40eab8:	xor    eax,0xe3462b49
  40eabd:	inc    esp
  40eabe:	fst    QWORD PTR [ebx+0x61]
  40eac1:	test   al,0x46
  40eac3:	mul    dl
  40eac5:	pusha  
  40eac6:	test   eax,0xa20626fe
  40eacb:	fimul  DWORD PTR [eax]
  40eacd:	sbb    al,0x8c
  40eacf:	test   DWORD PTR [esi+0x9b74d66],eax
  40ead5:	and    esi,ebx
  40ead7:	outs   dx,DWORD PTR ds:[esi]
  40ead8:	xor    DWORD PTR [eax+edi*1-0x71066c08],esi
  40eadf:	iret   
  40eae0:	sub    ebp,DWORD PTR [edx+0x409faa0b]
  40eae6:	lds    edx,FWORD PTR [eax]
  40eae8:	in     eax,0x35
  40eaea:	xchg   si,ax
  40eaec:	dec    esi
  40eaed:	inc    ebp
  40eaee:	out    dx,eax
  40eaef:	clc    
  40eaf0:	pop    edx
  40eaf1:	jae    0x40eada
  40eaf3:	dec    edx
  40eaf4:	sbb    al,0xb3
  40eaf6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eaf7:	adc    ebp,DWORD PTR [ebp+ecx*1+0x40]
  40eafb:	leave  
  40eafc:	fsub   st(2),st
  40eafe:	jmp    0xf8bc:0xb5b8ea1e
  40eb05:	fldenv [eax+eax*8]
  40eb08:	clc    
  40eb09:	cmp    DWORD PTR [esi],ebx
  40eb0b:	(bad)  
  40eb0c:	sub    ch,bh
  40eb0e:	jle    0x40eb2c
  40eb10:	aam    0x90
  40eb12:	imul   edx,ecx,0xffffffd9
  40eb15:	sbb    eax,0x772adfd8
  40eb1a:	push   ecx
  40eb1b:	push   ss
  40eb1c:	dec    eax
  40eb1d:	mov    cl,0xd
  40eb1f:	inc    edi
  40eb20:	dec    esp
  40eb21:	popf   
  40eb22:	adc    al,0x3
  40eb24:	mov    al,ds:0xdc77d588
  40eb29:	stos   DWORD PTR es:[edi],eax
  40eb2a:	jl     0x40eb16
  40eb2c:	adc    DWORD PTR [ebx+ecx*4-0x2e2b6a9d],eax
  40eb33:	clc    
  40eb34:	sbb    eax,0xdcc99f23
  40eb39:	xor    al,ah
  40eb3b:	add    ah,0x29
  40eb3e:	pushf  
  40eb3f:	xchg   edx,eax
  40eb40:	sti    
  40eb41:	push   ss
  40eb42:	pop    esi
  40eb43:	push   eax
  40eb44:	lock fs je 0x40eb9e
  40eb48:	lds    esi,FWORD PTR [edi+ecx*1]
  40eb4b:	mov    eax,ds:0x5bc8fae9
  40eb50:	les    edi,FWORD PTR [ecx-0xd]
  40eb53:	shl    DWORD PTR [edi-0xc730aee],cl
  40eb59:	push   0x3f
  40eb5b:	inc    edx
  40eb5c:	sbb    BYTE PTR [ebp-0x50],bh
  40eb5f:	addr16 loope 0x40ebbc
  40eb62:	popf   
  40eb63:	pop    edi
  40eb64:	scas   eax,DWORD PTR es:[edi]
  40eb65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb66:	mov    ebx,0xd4c39049
  40eb6b:	xor    eax,0xc563c90a
  40eb70:	punpckldq mm7,DWORD PTR [ebx+0x6d61b5f8]
  40eb77:	dec    esi
  40eb79:	fs push ss
  40eb7b:	rol    DWORD PTR [eax+0x58],1
  40eb7e:	sub    ecx,DWORD PTR [edi]
  40eb80:	ds jmp 0xc44a:0x4ddeb5ba
  40eb88:	int3   
  40eb89:	fimul  DWORD PTR [edi-0x68f7bba9]
  40eb8f:	frstor [esi+0x7d]
  40eb92:	or     esi,ebp
  40eb94:	xchg   BYTE PTR [eax],ah
  40eb96:	leave  
  40eb97:	push   edi
  40eb98:	jmp    0x2320:0x977e3fee
  40eb9f:	and    al,0x34
  40eba1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eba2:	mov    dl,0xe4
  40eba4:	aas    
  40eba5:	mov    ah,0x9f
  40eba7:	fnstenv [esp+esi*1]
  40ebaa:	xor    ebp,DWORD PTR [esi]
  40ebac:	dec    esp
  40ebad:	fnsave [ebx-0x7b]
  40ebb0:	dec    ebx
  40ebb1:	inc    edi
  40ebb2:	(bad)  
  40ebb3:	push   eax
  40ebb4:	js     0x40eb57
  40ebb6:	mov    bl,0xfb
  40ebb8:	dec    edx
  40ebb9:	sub    ecx,DWORD PTR [edi]
  40ebbb:	pop    esp
  40ebbc:	inc    eax
  40ebbd:	cmp    al,BYTE PTR [esi-0x14]
  40ebc0:	scas   eax,DWORD PTR es:[edi]
  40ebc1:	into   
  40ebc2:	out    0xfe,eax
  40ebc4:	pop    eax
  40ebc5:	push   esp
  40ebc6:	pop    eax
  40ebc7:	xor    DWORD PTR [ecx-0x1ee58c3b],0x5
  40ebce:	cld    
  40ebcf:	adc    eax,edi
  40ebd1:	popa   
  40ebd2:	mov    edx,DWORD PTR [edx]
  40ebd4:	cmp    esi,DWORD PTR [eax-0x15]
  40ebd7:	mov    ebp,0x7a5c9fb3
  40ebdc:	(bad)  
  40ebdd:	out    dx,eax
  40ebde:	jb     0x40eb61
  40ebe0:	mov    ch,0x25
  40ebe2:	dec    ecx
  40ebe3:	mov    bl,0xde
  40ebe5:	push   esi
  40ebe6:	jae    0x40eba6
  40ebe8:	repz pop edx
  40ebea:	pop    esp
  40ebeb:	sahf   
  40ebec:	mov    cl,0x89
  40ebee:	mov    al,0xe5
  40ebf0:	lahf   
  40ebf1:	cmp    al,0x14
  40ebf3:	in     al,0xcd
  40ebf5:	ins    DWORD PTR es:[edi],dx
  40ebf6:	repnz sbb BYTE PTR [ecx],dh
  40ebf9:	dec    esi
  40ebfa:	mov    ebx,0x8fa653fd
  40ebff:	pop    esp
  40ec00:	pop    edi
  40ec01:	call   0xcecd35fa
  40ec06:	xor    BYTE PTR [ebx],dh
  40ec08:	mov    esi,0xb64ce989
  40ec0d:	pop    DWORD PTR [edi+0x26]
  40ec10:	int    0xa8
  40ec12:	aas    
  40ec13:	push   edx
  40ec14:	or     al,0x73
  40ec16:	adc    eax,0xb7198391
  40ec1b:	pop    edi
  40ec1c:	loopne 0x40ec77
  40ec1e:	loop   0x40ec18
  40ec20:	pop    ss
  40ec21:	out    dx,al
  40ec22:	jnp    0x40ec54
  40ec24:	(bad)  
  40ec25:	scas   eax,DWORD PTR es:[edi]
  40ec26:	repnz pop ecx
  40ec28:	ret    0x3970
  40ec2b:	sbb    eax,0x9ef638b
  40ec30:	push   ds
  40ec31:	inc    esp
  40ec32:	cmp    eax,0x7b928dd1
  40ec37:	push   ebx
  40ec38:	daa    
  40ec39:	or     ecx,DWORD PTR [ebp-0x214a8b15]
  40ec3f:	mov    al,ds:0xb6d7d1b3
  40ec44:	sbb    esi,DWORD PTR [ecx+edx*8+0x4d]
  40ec48:	test   eax,0xce67d024
  40ec4d:	mov    ss,WORD PTR [edx-0x39]
  40ec50:	sbb    BYTE PTR [esi-0x76],0x98
  40ec54:	js     0x40ec15
  40ec56:	and    DWORD PTR [edx+ebp*2],edi
  40ec59:	or     edi,DWORD PTR [edx+0x36002882]
  40ec5f:	test   DWORD PTR [ecx-0x4bb264a9],ebp
  40ec65:	sbb    edx,ebp
  40ec67:	mov    ds:0xbf665835,al
  40ec6c:	popa   
  40ec6d:	adc    ah,al
  40ec6f:	(bad)  
  40ec71:	xor    BYTE PTR [edx-0x77],bl
  40ec74:	rcr    ecx,0x1d
  40ec77:	inc    eax
  40ec78:	ds jne 0x40ecf2
  40ec7b:	and    BYTE PTR ds:0x85a910c6,bh
  40ec81:	aam    0x30
  40ec83:	or     DWORD PTR [ecx+ecx*2-0x72],edi
  40ec87:	sub    al,0x51
  40ec89:	cmp    ecx,esp
  40ec8b:	xor    bh,ah
  40ec8d:	ins    DWORD PTR es:[edi],dx
  40ec8e:	nop
  40ec8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec90:	repz fst DWORD PTR [ebx+0x24]
  40ec94:	jns    0x40ece8
  40ec96:	pusha  
  40ec97:	xor    BYTE PTR ds:0x788b9286,0x84
  40ec9e:	(bad)  
  40ec9f:	add    dh,BYTE PTR ds:[edi-0x17b34bcc]
  40eca6:	das    
  40eca7:	push   esi
  40eca8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eca9:	and    BYTE PTR [edi-0x38],al
  40ecac:	sub    esi,DWORD PTR [esi-0x37]
  40ecaf:	add    BYTE PTR [edi-0x28],0x96
  40ecb3:	data16 setns dl
  40ecb7:	test   ah,dl
  40ecb9:	xor    ecx,eax
  40ecbb:	or     edi,esp
  40ecbd:	(bad)  
  40ecbe:	imul   ecx,edi,0xf4a5dea6
  40ecc4:	test   al,0x5e
  40ecc6:	sbb    eax,0xe4e8bac5
  40eccb:	aaa    
  40eccc:	ret    
  40eccd:	imul   ecx,DWORD PTR [edi+0x10],0x65b650ad
  40ecd4:	pop    eax
  40ecd5:	pop    ss
  40ecd6:	test   DWORD PTR [esi-0x5d],ebp
  40ecd9:	sbb    ecx,DWORD PTR [ecx-0x1649b926]
  40ecdf:	mov    ebp,0x6597d6a
  40ece4:	push   esi
  40ece5:	nop
  40ece6:	push   eax
  40ece7:	js     0x40ec7e
  40ece9:	enter  0x6d88,0xdc
  40eced:	xchg   ebx,eax
  40ecee:	out    0xa1,al
  40ecf0:	xchg   esi,eax
  40ecf1:	cmp    ch,BYTE PTR [eax+0x7e]
  40ecf4:	jle    0x40ecc7
  40ecf6:	rcr    ebx,cl
  40ecf8:	jmp    0x2f9e:0x3b4510b6
  40ecff:	sar    edx,1
  40ed01:	push   ss
  40ed02:	test   eax,0x79f08f3c
  40ed07:	loope  0x40ecc6
  40ed09:	fs push ecx
  40ed0b:	pop    ebp
  40ed0c:	pushf  
  40ed0d:	sub    DWORD PTR [esi+0x64f551d],esi
  40ed13:	ins    DWORD PTR es:[edi],dx
  40ed14:	enter  0xf0f3,0xe1
  40ed18:	std    
  40ed19:	mov    esi,0x2769318e
  40ed1e:	cld    
  40ed1f:	arpl   WORD PTR [ebx-0x6e],si
  40ed22:	sahf   
  40ed23:	or     eax,0x6fe66ae2
  40ed28:	jecxz  0x40ecac
  40ed2a:	adc    eax,0x5d78ab85
  40ed2f:	inc    edx
  40ed30:	add    ah,0x70
  40ed33:	fwait
  40ed34:	push   cs
  40ed35:	(bad)  
  40ed36:	popa   
  40ed37:	fisubr DWORD PTR [edx]
  40ed39:	jp     0x40ed55
  40ed3b:	xlat   BYTE PTR ds:[ebx]
  40ed3c:	ror    BYTE PTR [eax],0x72
  40ed3f:	in     eax,0x4f
  40ed41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed42:	sub    eax,0x7efcd823
  40ed47:	fsubr  DWORD PTR [ebp-0x2]
  40ed4a:	inc    ebp
  40ed4b:	xor    dh,cl
  40ed4d:	stc    
  40ed4e:	add    DWORD PTR [edi],0x16
  40ed51:	add    dh,dh
  40ed53:	xlat   BYTE PTR ds:[ebx]
  40ed54:	in     al,0x2a
  40ed56:	fmul   QWORD PTR [esi-0x77b60f8d]
  40ed5c:	(bad)  
  40ed5d:	and    edi,esp
  40ed5f:	aaa    
  40ed60:	jno    0x40ed98
  40ed62:	call   0xe2db:0xb1e1ab18
  40ed69:	mov    esp,0x7c40a5af
  40ed6e:	add    eax,0xeb245a2c
  40ed73:	test   DWORD PTR ds:[ecx+0x28],edi
  40ed77:	push   esp
  40ed78:	popf   
  40ed79:	sbb    dl,BYTE PTR [ebp+0x7b]
  40ed7c:	inc    edi
  40ed7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed7e:	ja     0x40ed8d
  40ed80:	jp     0x40edf8
  40ed82:	int    0x49
  40ed84:	mov    DWORD PTR [edi],eax
  40ed86:	push   eax
  40ed87:	(bad)  
  40ed88:	push   esp
  40ed89:	jb     0x40ed88
  40ed8b:	xor    eax,0x450ce608
  40ed90:	pop    es
  40ed91:	mov    ecx,0x74e7b22d
  40ed96:	add    dh,BYTE PTR [edx+0x20]
  40ed99:	ds sbb bl,bh
  40ed9c:	out    dx,al
  40ed9d:	push   cs
  40ed9e:	popa   
  40ed9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eda0:	adc    al,dl
  40eda2:	scas   eax,DWORD PTR es:[edi]
  40eda3:	daa    
  40eda4:	in     al,0xdf
  40eda6:	(bad)  
  40eda7:	pop    ss
  40eda8:	(bad)  
  40edaa:	sbb    eax,0x281e0e03
  40edaf:	loope  0x40ee04
  40edb1:	mov    esi,0xbca41ce1
  40edb6:	(bad)  
  40edb7:	pop    esi
  40edb8:	repz fmul st,st(2)
  40edbb:	inc    edi
  40edbc:	dec    ebx
  40edbd:	adc    BYTE PTR [ecx+edi*2-0x5f8c35f2],0x70
  40edc5:	popa   
  40edc6:	fidivr WORD PTR [esi-0x6fc947c5]
  40edcc:	mov    ch,0x94
  40edce:	jno    0x40ee3d
  40edd0:	pop    es
  40edd1:	ror    BYTE PTR ds:0xebc8c25d,0xff
  40edd8:	push   0xffffff9a
  40edda:	stc    
  40eddb:	sub    ebx,edi
  40eddd:	daa    
  40edde:	mov    ecx,edx
  40ede0:	and    cl,ch
  40ede2:	or     eax,0xb915c5e7
  40ede7:	jp     0x40ee04
  40ede9:	and    esp,DWORD PTR [ecx-0x23dd6242]
  40edef:	xor    edx,DWORD PTR [esi-0x1dac8aff]
  40edf5:	stos   DWORD PTR es:[edi],eax
  40edf6:	aaa    
  40edf7:	xchg   DWORD PTR ds:0xf0c8bc89,ebp
  40edfd:	repz and al,0x3b
  40ee00:	outs   dx,DWORD PTR ds:[esi]
  40ee01:	add    DWORD PTR [ebx-0x7e969589],ebx
  40ee07:	mov    bh,0x30
  40ee09:	lds    edx,FWORD PTR [ebx+0x6b78df30]
  40ee0f:	(bad)  
  40ee10:	cmp    eax,0xd02eecd7
  40ee15:	imul   ebx,DWORD PTR ds:0xff933f7a,0xa8d0b5af
  40ee1f:	xchg   DWORD PTR [ebp-0x669def26],ebx
  40ee25:	(bad)  
  40ee26:	bound  ebx,QWORD PTR [ebx-0x6ed49a9c]
  40ee2c:	pushf  
  40ee2d:	rcr    DWORD PTR [ebx],0x6b
  40ee30:	add    eax,0x91ba1322
  40ee35:	mov    bh,0xf5
  40ee37:	pop    edi
  40ee38:	push   ebx
  40ee39:	mov    ebp,0x86dfdb16
  40ee3e:	xchg   esi,eax
  40ee3f:	jmp    0x85fa:0xa4d0ab2a
  40ee46:	xchg   ecx,eax
  40ee47:	add    eax,0x8c5b0d66
  40ee4c:	int    0x70
  40ee4e:	pop    edi
  40ee4f:	or     eax,0x9daedaf3
  40ee54:	(bad)
  40ee58:	(bad)  
  40ee59:	push   ss
  40ee5a:	mov    edx,0x757e35c7
  40ee5f:	xor    BYTE PTR [eax-0xa],al
  40ee62:	aas    
  40ee63:	stos   BYTE PTR es:[edi],al
  40ee64:	pushf  
  40ee65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee66:	or     BYTE PTR [esi],bh
  40ee68:	test   eax,0xf89669e4
  40ee6d:	gs stos BYTE PTR es:[edi],al
  40ee6f:	lods   al,BYTE PTR ds:[esi]
  40ee70:	sub    DWORD PTR [edi+0x63ddeb84],ebx
  40ee76:	dec    ecx
  40ee77:	pop    ds
  40ee78:	fmul   st(5),st
  40ee7a:	and    eax,0xffb65f31
  40ee7f:	push   0xffffffa4
  40ee81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee82:	adc    cl,BYTE PTR [esi-0x45]
  40ee85:	jo     0x40ee2b
  40ee87:	leave  
  40ee88:	jmp    0xf309:0xd97c550e
  40ee8f:	jg     0x40eec4
  40ee91:	jp     0x40eef4
  40ee93:	loop   0x40eef4
  40ee95:	cmp    al,BYTE PTR es:[esi+0x7]
  40ee99:	add    eax,0xff5f83f4
  40ee9e:	cmc    
  40ee9f:	or     al,BYTE PTR [ebx+0x5d9bb568]
  40eea5:	ds mov ecx,0xcecb168
  40eeab:	test   al,0xb0
  40eead:	int3   
  40eeae:	dec    edx
  40eeaf:	fdivr  QWORD PTR [esi+ebp*2-0x4e]
  40eeb3:	jg     0x40eec1
  40eeb5:	adc    esi,DWORD PTR [ecx]
  40eeb7:	and    ch,BYTE PTR [edx+0x10]
  40eeba:	shr    DWORD PTR [ebx-0x61],0x5f
  40eebe:	loopne 0x40ee42
  40eec0:	leave  
  40eec1:	stos   DWORD PTR es:[edi],eax
  40eec2:	stos   DWORD PTR es:[edi],eax
  40eec3:	(bad)  
  40eec4:	shl    BYTE PTR [edi],1
  40eec6:	je     0x40ee4e
  40eec8:	(bad)  [eax-0x3647fdd8]
  40eece:	das    
  40eecf:	push   ebx
  40eed0:	aam    0x5b
  40eed2:	push   edx
  40eed3:	xlat   BYTE PTR ds:[ebx]
  40eed4:	mov    dh,0x95
  40eed6:	(bad)
  40eed9:	inc    ebx
  40eeda:	xchg   edi,eax
  40eedb:	fs and eax,0x5508096d
  40eee1:	mov    WORD PTR [edi],cs
  40eee3:	cld    
  40eee4:	mov    ebp,0x55d3e8b7
  40eee9:	jnp    0xe639b83b
  40eeef:	push   ss
  40eef0:	inc    ebp
  40eef1:	xchg   edx,eax
  40eef2:	loopne 0x40ef5e
  40eef4:	stos   DWORD PTR es:[edi],eax
  40eef5:	stos   BYTE PTR es:[edi],al
  40eef6:	add    DWORD PTR [bx+si],edi
  40eef9:	xchg   ebx,eax
  40eefa:	xor    al,0x87
  40eefc:	jo     0x40eea2
  40eefe:	xor    BYTE PTR [edi],bl
  40ef00:	mov    ds:0xe6ecd637,al
  40ef05:	add    DWORD PTR [esi+0x5ed2864],0x4c
  40ef0c:	test   BYTE PTR [edi+ecx*4-0x60a77470],0x14
  40ef14:	xor    cl,cl
  40ef16:	ins    DWORD PTR es:[edi],dx
  40ef17:	ds leave 
  40ef19:	addr16 int3 
  40ef1b:	pop    ds
  40ef1c:	or     eax,0x72ed561e
  40ef21:	dec    DWORD PTR [edx]
  40ef23:	pop    ebx
  40ef24:	ins    BYTE PTR es:[edi],dx
  40ef25:	xor    al,0x9b
  40ef27:	mov    eax,0x215b191e
  40ef2c:	les    edi,FWORD PTR [ebp-0x74]
  40ef2f:	inc    edi
  40ef30:	ret    
  40ef31:	cmp    BYTE PTR [esp-0x46],ch
  40ef35:	cmp    al,0x97
  40ef37:	mov    ?,WORD PTR [eax+0x3a]
  40ef3a:	clc    
  40ef3b:	je     0x40ef8f
  40ef3d:	bound  ecx,QWORD PTR [esi]
  40ef3f:	test   DWORD PTR [edi-0x20],0x1e593b87
  40ef46:	hlt    
  40ef47:	mov    esp,0x51ddf1eb
  40ef4c:	xor    BYTE PTR [edi+0xdb7001c],ah
  40ef52:	fcmovnbe st,st(7)
  40ef54:	stos   DWORD PTR es:[edi],eax
  40ef55:	mov    gs,WORD PTR [edx+ebp*8-0x31e77215]
  40ef5c:	ins    DWORD PTR es:[edi],dx
  40ef5d:	cmp    ecx,DWORD PTR [edi]
  40ef5f:	jae    0x40ef37
  40ef61:	ds mov ecx,0x3a9cd522
  40ef67:	push   0xb0b74bae
  40ef6c:	mov    eax,ds:0x38b83e28
  40ef71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef72:	in     eax,0x9c
  40ef74:	cmp    ecx,DWORD PTR [ebp-0x2f]
  40ef77:	sti    
  40ef78:	pop    eax
  40ef79:	cmp    cl,ah
  40ef7b:	sbb    ch,BYTE PTR [ecx]
  40ef7d:	(bad)
  40ef81:	cli    
  40ef82:	mov    ds:0x7112090d,al
  40ef87:	ss ret 
  40ef89:	jo     0x40ef34
  40ef8b:	xchg   ecx,eax
  40ef8c:	into   
  40ef8d:	(bad)  
  40ef8e:	in     eax,0x13
  40ef90:	(bad)  
  40ef91:	icebp  
  40ef92:	bound  eax,QWORD PTR [eax-0x32]
  40ef95:	(bad)  
  40ef97:	(bad)  
  40ef98:	mov    bh,0x36
  40ef9a:	cmp    esi,DWORD PTR [esi+0x2d]
  40ef9d:	mov    WORD PTR [edx+eax*8+0x40bf4e51],?
  40efa4:	inc    edi
  40efa5:	into   
  40efa6:	xlat   BYTE PTR ds:[ebx]
  40efa7:	add    eax,0xffffff92
  40efaa:	outs   dx,BYTE PTR ds:[esi]
  40efab:	sbb    dl,BYTE PTR [edx]
  40efad:	mov    ah,0x14
  40efaf:	scas   al,BYTE PTR es:[edi]
  40efb0:	jbe    0x40f009
  40efb2:	xchg   ebx,eax
  40efb3:	xchg   ebp,eax
  40efb4:	dec    BYTE PTR [edi]
  40efb6:	lds    esp,FWORD PTR [ebp+0x31fb75df]
  40efbc:	retf   
  40efbd:	adc    al,0x41
  40efbf:	mov    ch,0xf3
  40efc1:	jecxz  0x40ef7f
  40efc3:	test   DWORD PTR [ebx],edi
  40efc5:	mov    esp,0x5468ac32
  40efca:	push   es
  40efcb:	leave  
  40efcc:	loop   0x40f02a
  40efce:	mov    bl,0xa5
  40efd0:	bound  edi,QWORD PTR [eax-0x10]
  40efd3:	push   eax
  40efd4:	loope  0x40ef77
  40efd6:	das    
  40efd7:	fdiv   DWORD PTR [ecx]
  40efd9:	sub    BYTE PTR [esi+0x74],cl
  40efdc:	adc    DWORD PTR [edi+0x9],esi
  40efdf:	shl    DWORD PTR [ecx-0x79267ff0],cl
  40efe5:	repz cwde 
  40efe7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40efe8:	scas   al,BYTE PTR es:[edi]
  40efe9:	ins    DWORD PTR es:[edi],dx
  40efea:	dec    ebx
  40efeb:	pop    es
  40efec:	jnp    0x40f064
  40efee:	jl     0x40f00c
  40eff0:	add    esp,edi
  40eff2:	mov    dl,0x27
  40eff4:	jmp    0x40eff6
  40eff6:	out    dx,al
  40eff7:	stc    
  40eff8:	popf   
  40eff9:	mov    DWORD PTR [esi+eiz*1+0x25],ebp
  40effd:	mov    ecx,0x923d7142
  40f002:	mov    cl,0x4a
  40f004:	ins    BYTE PTR es:[edi],dx
  40f005:	lods   al,BYTE PTR ds:[esi]
  40f006:	mov    DWORD PTR [edi+0x3ac63cd2],eax
  40f00c:	test   DWORD PTR [ebx],ecx
  40f00e:	or     al,0xb7
  40f010:	push   ss
  40f011:	lods   eax,DWORD PTR ds:[esi]
  40f012:	push   0xb
  40f014:	sub    edx,DWORD PTR ds:[eax+ebp*2-0x5b]
  40f019:	loopne 0x40eff7
  40f01b:	xor    BYTE PTR [esi],cl
  40f01d:	and    ebx,DWORD PTR [esi+eiz*8]
  40f020:	(bad)  
  40f021:	(bad)  
  40f022:	mov    BYTE PTR [bp+si],cl
  40f025:	jmp    0x40f04d
  40f027:	dec    dx
  40f029:	cmp    al,BYTE PTR [esi-0x3d977f84]
  40f02f:	jo     0x40efb3
  40f031:	adc    al,dl
  40f033:	retf   
  40f034:	sti    
  40f035:	leave  
  40f036:	push   esp
  40f037:	cmp    eax,0xd27c909c
  40f03c:	(bad)  
  40f03e:	mov    ds:0x1824a7fa,al
  40f043:	jmp    0x40efe3
  40f045:	pop    edi
  40f046:	add    dh,bh
  40f048:	add    al,0x87
  40f04a:	retf   0x181f
  40f04d:	adc    esp,DWORD PTR [ecx+0x2c]
  40f050:	test   eax,0x314c1f7d
  40f055:	retf   0x60fe
  40f058:	shr    BYTE PTR ss:[eax-0x2e],1
  40f05c:	dec    esi
  40f05d:	bound  ecx,QWORD PTR [ecx]
  40f05f:	iret   
  40f060:	cli    
  40f061:	pop    ebx
  40f062:	mov    ebp,0xb4cc1c47
  40f067:	fisubr WORD PTR [ebx-0x5a]
  40f06a:	cwde   
  40f06b:	std    
  40f06c:	test   cl,ah
  40f06e:	inc    ebx
  40f06f:	pop    ds
  40f070:	inc    esp
  40f071:	fwait
  40f072:	add    ebx,eax
  40f074:	ret    0x887a
  40f077:	xchg   ebp,eax
  40f078:	retf   0xd7e9
  40f07b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f07c:	fstp   TBYTE PTR [ecx]
  40f07e:	lahf   
  40f07f:	jmp    0xce641200
  40f084:	jge    0x40f0e6
  40f086:	push   esi
  40f087:	out    dx,eax
  40f088:	inc    esp
  40f089:	repnz (bad) 
  40f08b:	pushf  
  40f08c:	push   es
  40f08d:	xchg   esp,eax
  40f08e:	(bad)  
  40f08f:	sub    al,0x3e
  40f091:	in     eax,dx
  40f092:	scas   al,BYTE PTR es:[edi]
  40f093:	cli    
  40f094:	mov    ebx,0x32d05d17
  40f099:	xchg   al,dl
  40f09b:	or     eax,0x9ae79981
  40f0a0:	aas    
  40f0a1:	xchg   ebx,eax
  40f0a2:	sbb    BYTE PTR [ecx-0x3e],dl
  40f0a5:	outs   dx,BYTE PTR ds:[esi]
  40f0a6:	ja     0x40f06d
  40f0a8:	or     BYTE PTR [edx+ebx*8+0x73a0c49e],0x3c
  40f0b0:	cld    
  40f0b1:	stc    
  40f0b2:	jmp    0x40f0a4
  40f0b4:	jle    0x40f062
  40f0b6:	fld1   
  40f0b8:	dec    edx
  40f0b9:	out    dx,al
  40f0ba:	(bad)  
  40f0bb:	mov    al,0xaa
  40f0bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f0be:	cmp    bh,BYTE PTR [edi-0x6a]
  40f0c1:	(bad)  
  40f0c2:	xor    cl,bl
  40f0c4:	dec    edx
  40f0c5:	and    BYTE PTR [edx+0x2711ce30],cl
  40f0cb:	imul   BYTE PTR [eax]
  40f0cd:	pop    ecx
  40f0ce:	fidiv  DWORD PTR [esi]
  40f0d0:	in     eax,0x8d
  40f0d2:	adc    DWORD PTR [ebx+0x38cf67a1],ebx
  40f0d8:	jmp    0x40f074
  40f0da:	dec    ebp
  40f0db:	sub    eax,0x3051bd94
  40f0e0:	cmp    bl,BYTE PTR [ecx+ebx*1]
  40f0e3:	div    DWORD PTR [esi-0x77]
  40f0e6:	sub    eax,0x6e0b7c22
  40f0eb:	cmc    
  40f0ec:	inc    esp
  40f0ed:	adc    al,0x2b
  40f0ef:	pushf  
  40f0f0:	test   BYTE PTR ds:0xf2acf693,al
  40f0f6:	dec    esi
  40f0f7:	in     al,dx
  40f0f8:	or     esp,DWORD PTR [ecx+0x67]
  40f0fb:	test   DWORD PTR [ebp-0x32],ebx
  40f0fe:	mov    DWORD PTR [eax],ecx
  40f100:	jns    0x40f125
  40f102:	clc    
  40f103:	jle    0x40f0a2
  40f105:	mov    ds:0x4eea73bf,al
  40f10a:	(bad)  
  40f10b:	mov    esi,0x7e9e7c6f
  40f110:	adc    DWORD PTR [ebp+0x559c7f26],esi
  40f116:	adc    ebx,0xffffff8d
  40f119:	shl    DWORD PTR [eax+edx*2+0x30],cl
  40f11d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f11e:	(bad)  
  40f11f:	cdq    
  40f120:	scas   al,BYTE PTR es:[edi]
  40f121:	dec    eax
  40f122:	inc    edx
  40f123:	popf   
  40f124:	mov    bl,0xe4
  40f126:	gs jne 0x40f0b6
  40f129:	pop    ebp
  40f12a:	jmp    esi
  40f12c:	inc    esi
  40f12d:	or     edi,esi
  40f12f:	push   ecx
  40f130:	cs ret 0x5778
  40f134:	push   eax
  40f135:	sbb    DWORD PTR [edi],edx
  40f137:	jo     0x40f133
  40f139:	push   edx
  40f13a:	xor    DWORD PTR [ebp-0x7c50c5fa],ebx
  40f140:	sahf   
  40f141:	sbb    eax,0x61a53c31
  40f146:	outs   dx,DWORD PTR ds:[esi]
  40f147:	fld    TBYTE PTR [esi]
  40f149:	loope  0x40f171
  40f14b:	mov    dl,0xc
  40f14d:	jns    0x8c298c7c
  40f153:	enter  0x6f0f,0xbf
  40f157:	xchg   ecx,eax
  40f158:	mov    ebp,0xbbac26df
  40f15d:	fisub  WORD PTR [edi+0x4513870a]
  40f163:	adc    bl,bl
  40f165:	inc    bl
  40f167:	jecxz  0x40f13e
  40f169:	xchg   edx,eax
  40f16a:	(bad)
  40f16d:	fcmovnbe st,st(6)
  40f16f:	sbb    DWORD PTR [edx+0x2],edi
  40f172:	xchg   esp,eax
  40f173:	pop    ebp
  40f174:	pushf  
  40f175:	mov    edx,db3
  40f178:	scas   al,BYTE PTR es:[edi]
  40f179:	nop
  40f17a:	xor    eax,DWORD PTR [ebx]
  40f17c:	das    
  40f17d:	scas   eax,DWORD PTR es:[edi]
  40f17e:	xor    bh,BYTE PTR [ecx]
  40f180:	xchg   BYTE PTR [ecx-0x29],ch
  40f183:	xchg   DWORD PTR [edi-0x447696be],ecx
  40f189:	sahf   
  40f18a:	sahf   
  40f18b:	(bad)  
  40f18c:	sbb    BYTE PTR [eax-0x7ab80ea4],bl
  40f192:	jl     0x40f15c
  40f194:	add    cl,BYTE PTR [esi]
  40f196:	cmp    al,0x26
  40f198:	arpl   WORD PTR [ebx-0x19],sp
  40f19b:	jne    0x40f1f0
  40f19d:	inc    ebp
  40f19e:	xchg   ah,al
  40f1a0:	xchg   esp,eax
  40f1a1:	gs xor dl,ah
  40f1a4:	sbb    al,0xe3
  40f1a6:	lahf   
  40f1a7:	mov    eax,ds:0xc15644c7
  40f1ac:	jle    0x40f177
  40f1ae:	push   ss
  40f1af:	inc    ecx
  40f1b0:	and    eax,0xdb411bd7
  40f1b5:	ret    0x5504
  40f1b8:	arpl   WORD PTR [ecx*2-0x4e4aac3d],cx
  40f1bf:	mov    al,ch
  40f1c1:	(bad)  
  40f1c2:	lock cs aad 0x95
  40f1c6:	mov    eax,0x2614880c
  40f1cb:	pop    ebp
  40f1cc:	sar    DWORD PTR [eax+esi*8+0x3a],cl
  40f1d0:	push   ss
  40f1d1:	inc    ecx
  40f1d2:	mov    WORD PTR [ecx-0x785cfd5d],cs
  40f1d8:	sti    
  40f1d9:	les    ebp,FWORD PTR [esi-0x41]
  40f1dc:	xchg   ebx,eax
  40f1dd:	loope  0x40f244
  40f1df:	dec    ebp
  40f1e0:	retf   
  40f1e1:	jg     0x40f182
  40f1e3:	mov    esp,DWORD PTR [eax]
  40f1e5:	sub    DWORD PTR [esi+0x159b3ed3],eax
  40f1eb:	ds hlt 
  40f1ed:	das    
  40f1ee:	test   BYTE PTR [eax],ch
  40f1f0:	sub    al,0xc3
  40f1f2:	push   ds
  40f1f3:	sub    esi,DWORD PTR [ebp-0x3e]
  40f1f6:	enter  0x3d4f,0x3b
  40f1fa:	jle    0x40f25e
  40f1fc:	mov    esi,0xd36b971
  40f201:	sbb    al,ch
  40f203:	add    dl,BYTE PTR [ebp+0x2e]
  40f206:	jl     0x40f1fb
  40f208:	add    BYTE PTR [ebp+0x62],al
  40f20b:	clc    
  40f20c:	fs in  eax,dx
  40f20e:	leave  
  40f20f:	push   0x82733058
  40f214:	mov    dl,0xc0
  40f216:	fsubr  DWORD PTR [eax]
  40f218:	les    esp,FWORD PTR [ebx-0x47]
  40f21b:	push   ss
  40f21c:	or     dh,BYTE PTR [eax+0x35cd924e]
  40f222:	fsincos 
  40f224:	push   edi
  40f225:	mov    DWORD PTR ds:0xa970f6,esi
  40f22b:	fisub  WORD PTR [esi-0x1a]
  40f22e:	push   ds
  40f22f:	outs   dx,DWORD PTR ds:[esi]
  40f230:	stos   BYTE PTR es:[edi],al
  40f231:	in     al,0xc7
  40f233:	add    eax,0xf61045a8
  40f238:	push   ds
  40f239:	aas    
  40f23a:	mov    DWORD PTR [eax-0x51b8c772],eax
  40f240:	or     eax,ebx
  40f242:	xchg   esi,eax
  40f243:	aas    
  40f244:	jnp    0x40f26a
  40f246:	cs jno 0x40f20a
  40f249:	pop    edx
  40f24a:	mov    eax,ds:0x908ba5ad
  40f24f:	pushf  
  40f250:	mov    BYTE PTR ds:[eax+0x23],cl
  40f254:	or     DWORD PTR [ebp+0x22],0x7bdddc4e
  40f25b:	(bad)  
  40f25d:	pop    ds
  40f25e:	popa   
  40f25f:	retf   0x7a2b
  40f262:	mov    bh,0x2
  40f264:	push   ecx
  40f265:	fsubr  DWORD PTR [edx-0x47b50fd4]
  40f26b:	clc    
  40f26c:	xor    cl,ah
  40f26e:	inc    ecx
  40f26f:	sbb    eax,0xeccc5106
  40f274:	sbb    BYTE PTR [ebx+0x6a],ch
  40f277:	xchg   ebp,eax
  40f278:	sbb    BYTE PTR [edx*1-0x2dd64055],bh
  40f27f:	xor    ebp,DWORD PTR [ebx+0x7a]
  40f282:	or     al,0x49
  40f284:	sbb    al,0xa1
  40f286:	cdq    
  40f287:	(bad)  
  40f288:	sub    bh,BYTE PTR [ecx+eiz*4]
  40f28b:	jmp    0x40f283
  40f28d:	(bad)  
  40f28e:	test   BYTE PTR [ebx+eiz*8-0x1c3f7f4b],bh
  40f295:	sub    al,0x71
  40f297:	sbb    al,BYTE PTR [ebx]
  40f299:	aad    0x0
  40f29b:	in     eax,0x28
  40f29d:	je     0x40f2af
  40f29f:	imul   ebp,DWORD PTR [edx+0x30c9140e],0xffffffd8
  40f2a6:	mov    ebp,0xb3e0d368
  40f2ab:	fild   DWORD PTR [edx+0x6a]
  40f2ae:	icebp  
  40f2af:	not    esp
  40f2b1:	ret    0x6862
  40f2b4:	sahf   
  40f2b5:	iret   
  40f2b6:	xor    edx,ecx
  40f2b8:	or     eax,edx
  40f2ba:	ret    0xd290
  40f2bd:	call   0xe8fe:0x8aaf8c30
  40f2c4:	xchg   ebx,eax
  40f2c5:	pop    ebx
  40f2c6:	dec    ebp
  40f2c7:	fnstcw WORD PTR [esi-0x49f1104a]
  40f2cd:	mov    ds:0x5f68a38d,eax
  40f2d2:	in     eax,0x71
  40f2d4:	iret   
  40f2d5:	pop    esi
  40f2d6:	sti    
  40f2d7:	pushfw 
  40f2d9:	inc    eax
  40f2da:	push   esp
  40f2db:	retf   
  40f2dc:	mov    DWORD PTR [eax-0x71ef8c3],edx
  40f2e2:	or     eax,0x4314d2f6
  40f2e7:	imul   eax,edx,0x56a29dc2
  40f2ed:	pop    ss
  40f2ee:	stos   DWORD PTR es:[edi],eax
  40f2ef:	(bad)  
  40f2f1:	mov    al,0x2
  40f2f3:	xchg   edx,eax
  40f2f5:	xor    al,0xeb
  40f2f7:	das    
  40f2f8:	out    dx,eax
  40f2f9:	pextrw esi,(bad),0xc5
  40f2fb:	mov    dh,0x24
  40f2fd:	push   ds
  40f2fe:	sub    edx,edi
  40f300:	pushf  
  40f301:	inc    ebp
  40f302:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f303:	pop    eax
  40f304:	hlt    
  40f305:	loop   0x40f2b0
  40f307:	and    al,0x8f
  40f309:	ja     0x40f2a8
  40f30b:	push   ebp
  40f30c:	and    DWORD PTR [ebx+0x41f6a3cf],eax
  40f312:	pop    ebp
  40f313:	cli    
  40f314:	pop    edi
  40f315:	sub    BYTE PTR [ebx-0x59],al
  40f318:	cmp    ah,BYTE PTR [eax-0x11fe6bb4]
  40f31e:	mov    al,0xf8
  40f320:	inc    edx
  40f321:	add    eax,0xfadb3535
  40f326:	mov    eax,ds:0x12921c18
  40f32b:	add    esi,DWORD PTR [eax]
  40f32d:	dec    ebx
  40f32e:	xchg   esi,eax
  40f32f:	out    dx,al
  40f330:	cdq    
  40f331:	or     edi,edx
  40f333:	pusha  
  40f334:	and    ch,BYTE PTR [ecx+0x262f21ca]
  40f33a:	(bad)  
  40f33b:	in     al,dx
  40f33c:	pop    eax
  40f33d:	inc    DWORD PTR [edx-0x7a40b176]
  40f343:	lock jg 0x40f34c
  40f346:	icebp  
  40f347:	fdivr  DWORD PTR [ebx]
  40f349:	aas    
  40f34a:	inc    esp
  40f34b:	out    0xaf,al
  40f34d:	push   esi
  40f34e:	(bad)  
  40f34f:	push   ebp
  40f350:	fsub   DWORD PTR [ebp+0x76]
  40f353:	aad    0xbb
  40f355:	clc    
  40f356:	pop    esp
  40f357:	test   al,0xfd
  40f359:	mov    eax,0xc8525bb5
  40f35e:	out    dx,eax
  40f35f:	nop
  40f360:	sar    ebp,0x29
  40f363:	lods   eax,DWORD PTR ds:[esi]
  40f364:	add    BYTE PTR [edi],ah
  40f366:	fcmovu st,st(3)
  40f368:	inc    eax
  40f369:	sti    
  40f36a:	and    BYTE PTR [edx-0x6f],0xdb
  40f36e:	pop    esi
  40f36f:	call   0x2c1a:0x8a0f4095
  40f376:	mov    ah,0x81
  40f378:	jnp    0x40f375
  40f37a:	idiv   DWORD PTR [edi-0x5]
  40f37d:	scas   eax,DWORD PTR es:[edi]
  40f37e:	push   ecx
  40f37f:	inc    eax
  40f380:	mov    ebx,DWORD PTR [edx]
  40f382:	xor    edi,ebx
  40f384:	mov    DWORD PTR [edx],edi
  40f386:	mov    edx,DWORD PTR [ebp+0x8]
  40f389:	xor    edx,eax
  40f38b:	inc    ecx
  40f38c:	inc    DWORD PTR [ebp-0x18]
  40f38f:	add    edx,esi
  40f391:	cmp    ecx,edx
  40f393:	jb     0x40cfd4
  40f399:	jmp    0x40f3e3
  40f39e:	mov    ecx,DWORD PTR [ebp-0xc]
  40f3a1:	mov    DWORD PTR [ebp+0x8],ecx
  40f3a4:	jmp    0x40f3d6
  40f3a9:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3ac:	mov    edx,DWORD PTR [ebp-0x8]
  40f3af:	xor    ecx,eax
  40f3b1:	xor    edx,eax
  40f3b3:	sub    ecx,edx
  40f3b5:	sub    ecx,esi
  40f3b7:	xor    ecx,eax
  40f3b9:	mov    DWORD PTR [ebp+0x8],ecx
  40f3bc:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3bf:	mov    edx,DWORD PTR [ebp+0x8]
  40f3c2:	imul   edx,edx,0x5708f1
  40f3c8:	xor    ecx,eax
  40f3ca:	add    ecx,esi
  40f3cc:	lea    ecx,[ebp+ecx*4-0x64]
  40f3d0:	mov    edi,DWORD PTR [ecx]
  40f3d2:	add    edx,edi
  40f3d4:	mov    DWORD PTR [ecx],edx
  40f3d6:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3d9:	xor    ecx,eax
  40f3db:	add    ecx,esi
  40f3dd:	jne    0x40f3a9
  40f3e3:	mov    ecx,DWORD PTR [ebp-0xc]
  40f3e6:	mov    DWORD PTR [ebp+0x8],ecx
  40f3e9:	jmp    0x40f41b
  40f3ee:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3f1:	mov    edx,DWORD PTR [ebp-0x8]
  40f3f4:	xor    ecx,eax
  40f3f6:	xor    edx,eax
  40f3f8:	sub    ecx,edx
  40f3fa:	sub    ecx,esi
  40f3fc:	xor    ecx,eax
  40f3fe:	mov    DWORD PTR [ebp+0x8],ecx
  40f401:	mov    ecx,DWORD PTR [ebp+0x8]
  40f404:	mov    edx,DWORD PTR [ebp+0x8]
  40f407:	imul   edx,edx,0x5708f1
  40f40d:	xor    ecx,eax
  40f40f:	add    ecx,esi
  40f411:	lea    ecx,[ebp+ecx*4-0x64]
  40f415:	mov    edi,DWORD PTR [ecx]
  40f417:	add    edx,edi
  40f419:	mov    DWORD PTR [ecx],edx
  40f41b:	mov    ecx,DWORD PTR [ebp+0x8]
  40f41e:	xor    ecx,eax
  40f420:	add    ecx,esi
  40f422:	jne    0x40f3ee
  40f428:	mov    ecx,DWORD PTR [ebp-0x8]
  40f42b:	mov    edx,DWORD PTR [ebp-0x20]
  40f42e:	xor    ecx,eax
  40f430:	lea    ecx,[ecx+edx*1+0x3272dc]
  40f437:	mov    DWORD PTR [ebp-0x20],ecx
  40f43a:	inc    DWORD PTR [ebp+0xc]
  40f43d:	mov    ecx,DWORD PTR [ebp-0x1c]
  40f440:	xor    ecx,eax
  40f442:	add    ecx,esi
  40f444:	jne    0x40ced6
  40f44a:	jmp    0x413be3
  40f44f:	mov    ecx,DWORD PTR [ebp-0xc]
  40f452:	mov    DWORD PTR [ebp+0x8],ecx
  40f455:	jmp    0x41180f
  40f45a:	mov    ecx,DWORD PTR [ebp+0x8]
  40f45d:	mov    edx,DWORD PTR [ebp-0x8]
  40f460:	xor    ecx,eax
  40f462:	xor    edx,eax
  40f464:	sub    ecx,edx
  40f466:	jmp    0x4117ee
  40f46b:	mov    al,ds:0x7334f23d
  40f470:	cmp    ebp,DWORD PTR [edx+0x3e2d7a79]
  40f476:	mov    ds:0x8067ef76,al
  40f47b:	pop    ebp
  40f47c:	int    0x7c
  40f47e:	jl     0x40f487
  40f480:	pop    edi
  40f481:	jl     0x40f4ff
  40f483:	imul   dh
  40f485:	jg     0x40f489
  40f487:	push   edx
  40f488:	scas   al,BYTE PTR es:[edi]
  40f489:	xchg   esp,ecx
  40f48b:	sbb    BYTE PTR [edi+0x4dc48f78],al
  40f491:	pop    eax
  40f492:	std    
  40f493:	std    
  40f494:	ins    BYTE PTR es:[edi],dx
  40f495:	(bad)  
  40f496:	mov    ?,WORD PTR [ebx]
  40f498:	cdq    
  40f499:	aad    0xcb
  40f49b:	and    DWORD PTR [ebx+0x6c61bfb4],esp
  40f4a1:	pop    ss
  40f4a2:	adc    bh,BYTE PTR [ebx-0x4f4e9768]
  40f4a8:	aam    0xbb
  40f4aa:	xchg   BYTE PTR [ebp+ebp*8+0x24a5ea00],bl
  40f4b1:	fsub   st(7),st
  40f4b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f4b4:	ins    DWORD PTR es:[edi],dx
  40f4b5:	lock mov dl,0x78
  40f4b8:	dec    edi
  40f4b9:	loopne 0x40f522
  40f4bb:	(bad)
  40f4bf:	sub    DWORD PTR [ebx+0x72277ffa],ecx
  40f4c5:	xchg   ebp,eax
  40f4c6:	pop    ds
  40f4c7:	lahf   
  40f4c8:	sub    BYTE PTR [esi+ebp*2+0x26d962fe],cl
  40f4cf:	popa   
  40f4d0:	dec    eax
  40f4d2:	xchg   edx,eax
  40f4d3:	mov    bl,BYTE PTR [ebx+0x33207d2b]
  40f4d9:	xor    al,0xd1
  40f4db:	or     bh,BYTE PTR [edx-0x28]
  40f4de:	push   esi
  40f4df:	in     eax,0x20
  40f4e1:	imul   esi,DWORD PTR [edx+0x2677e119],0xffffff89
  40f4e8:	mov    eax,0x425a3bf2
  40f4ed:	div    DWORD PTR [ebp-0x464176ce]
  40f4f3:	sub    ebp,ebx
  40f4f5:	jmp    0x7ec5:0xd3e2e913
  40f4fc:	ror    ah,cl
  40f4fe:	ret    
  40f4ff:	pop    edx
  40f500:	sub    ebx,DWORD PTR [edi+0x33336af8]
  40f506:	scas   eax,DWORD PTR es:[edi]
  40f507:	add    eax,0x79d5b6ab
  40f50c:	sub    cl,BYTE PTR [eax-0x77]
  40f50f:	fisttp WORD PTR [eax+ebx*4]
  40f512:	pusha  
  40f513:	gs es xor eax,eax
  40f517:	mov    dh,0x7a
  40f519:	scas   eax,DWORD PTR es:[edi]
  40f51a:	xchg   bh,bl
  40f51c:	les    edi,FWORD PTR [ecx+0x65]
  40f51f:	outs   dx,DWORD PTR ds:[esi]
  40f520:	(bad)  [ebp-0x12]
  40f523:	loopne 0x40f4aa
  40f525:	fwait
  40f526:	pushf  
  40f527:	push   cs
  40f528:	gs jnp 0x40f550
  40f52b:	cmp    DWORD PTR [ecx],ebp
  40f52d:	lea    esp,ds:0xa7b0bf2a
  40f533:	jl     0x40f572
  40f535:	inc    edi
  40f536:	push   es
  40f537:	mov    BYTE PTR [ecx],ah
  40f539:	cmp    esi,DWORD PTR [edi+0x58]
  40f53c:	xor    DWORD PTR [ebx+0x31263a68],0x9d05223a
  40f546:	outs   dx,BYTE PTR ds:[esi]
  40f547:	enter  0x2b3a,0xc7
  40f54b:	xor    esi,DWORD PTR [esi+0x38]
  40f54e:	and    DWORD PTR [eax+0x19],0x66
  40f552:	lods   eax,DWORD PTR ds:[esi]
  40f553:	xchg   ebx,eax
  40f554:	jae    0x40f520
  40f556:	hlt    
  40f557:	sub    eax,DWORD PTR [ebp+edi*1+0x15437c82]
  40f55e:	and    eax,0x696f62db
  40f563:	(bad)  
  40f564:	jno    0x40f4f7
  40f566:	sbb    esi,edi
  40f568:	sbb    eax,0xb200fb69
  40f56d:	or     esi,DWORD PTR [edi-0x15]
  40f570:	push   ss
  40f571:	lahf   
  40f572:	fisttp DWORD PTR [edi]
  40f574:	leave  
  40f575:	pop    ebp
  40f576:	pusha  
  40f577:	adc    eax,0x13e8c16a
  40f57c:	in     al,0xb6
  40f57e:	mov    al,ds:0x78d47a20
  40f583:	pusha  
  40f584:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f585:	ds mov al,0x92
  40f588:	cmc    
  40f589:	ret    
  40f58a:	pusha  
  40f58b:	sbb    eax,0x630ab14e
  40f590:	leave  
  40f591:	xchg   edx,eax
  40f592:	add    ah,ah
  40f594:	inc    ecx
  40f595:	(bad)  
  40f596:	cmp    ebp,DWORD PTR [esi]
  40f598:	mov    eax,0x1bacf99d
  40f59d:	es mov esp,0x8b14a0db
  40f5a3:	in     ax,0x10
  40f5a6:	iret   
  40f5a7:	bnd jl 0x40f5a0
  40f5aa:	inc    esi
  40f5ab:	icebp  
  40f5ac:	daa    
  40f5ad:	sub    eax,0x9891cf87
  40f5b2:	mov    edx,0x63e3a46b
  40f5b7:	sbb    BYTE PTR ds:0xf9f93ea7,dh
  40f5bd:	(bad)  
  40f5be:	out    0xd8,eax
  40f5c0:	mov    ds:0x1ef913a9,al
  40f5c5:	jo     0x40f625
  40f5c7:	jle    0x40f5ed
  40f5c9:	mov    esi,0x204c10c4
  40f5ce:	sbb    DWORD PTR [edx+0x5be955d5],ebp
  40f5d4:	xor    eax,0x39684217
  40f5d9:	jne    0x40f5e5
  40f5db:	adc    bl,BYTE PTR [edi+0x78]
  40f5de:	out    0xd4,eax
  40f5e0:	sbb    al,0x2f
  40f5e2:	dec    esp
  40f5e3:	xor    esi,esi
  40f5e5:	cmp    eax,0x638cfc92
  40f5ea:	into   
  40f5eb:	push   esi
  40f5ec:	gs push es
  40f5ee:	outs   dx,DWORD PTR ds:[esi]
  40f5ef:	jbe    0x40f65a
  40f5f1:	int    0x6e
  40f5f3:	cmp    eax,0xffbafdd1
  40f5f8:	sub    al,0x5a
  40f5fa:	pop    ecx
  40f5fb:	bnd call 0x24ebbf30
  40f601:	out    0xd2,al
  40f603:	stos   BYTE PTR es:[edi],al
  40f604:	adc    BYTE PTR [eax-0x35b7c3a7],dl
  40f60a:	in     eax,dx
  40f60b:	jae    0x40f645
  40f60d:	addr16 sub al,0x39
  40f610:	jg     0x40f656
  40f612:	cmp    BYTE PTR [edx],0x1
  40f615:	mov    WORD PTR [edx+ebx*8-0x5178074e],?
  40f61c:	push   0xffffffe7
  40f61e:	fs loop 0x40f658
  40f621:	mov    BYTE PTR [ebp-0x5f],ah
  40f624:	ins    DWORD PTR es:[edi],dx
  40f625:	sbb    ch,dl
  40f627:	in     al,0x6f
  40f629:	into   
  40f62a:	lea    esp,[edi-0x61]
  40f62d:	jmp    0xbcc3c885
  40f632:	jmp    0xcb1ff579
  40f637:	xor    eax,eax
  40f639:	or     eax,0xc7b6b5f
  40f63e:	mov    ah,0x3f
  40f640:	aad    0x8e
  40f642:	je     0x40f62e
  40f644:	data16 mov bl,0xb2
  40f647:	push   esp
  40f648:	mov    ebp,0xc7695b25
  40f64d:	xor    BYTE PTR [ebp-0x399848b1],0xa8
  40f654:	dec    edi
  40f655:	das    
  40f656:	lods   al,BYTE PTR ds:[esi]
  40f657:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f658:	in     eax,0x6c
  40f65a:	mov    ebp,0xa3ba4ba6
  40f65f:	adc    al,0x5b
  40f661:	std    
  40f662:	sub    DWORD PTR [esi+0x6fbf4ac4],0xfffffffe
  40f669:	fld    TBYTE PTR [eax]
  40f66b:	shr    BYTE PTR [edx-0x32b67d5f],0x85
  40f672:	jne    0x40f62f
  40f674:	scas   al,BYTE PTR es:[edi]
  40f675:	pop    ds
  40f676:	out    0x5,eax
  40f678:	cld    
  40f679:	call   DWORD PTR [esi-0x7e287911]
  40f67f:	sbb    esp,DWORD PTR [ebx+esi*4+0xe]
  40f683:	in     al,dx
  40f684:	mov    ecx,DWORD PTR [esi]
  40f686:	xor    ah,BYTE PTR [edx]
  40f688:	sub    eax,0xab7f2b14
  40f68d:	rcl    BYTE PTR [esi+0x1b],cl
  40f690:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f691:	push   cs
  40f692:	fild   QWORD PTR ds:[ecx]
  40f695:	fcomp  QWORD PTR [ebx]
  40f697:	mov    eax,ds:0x6d3cf344
  40f69c:	dec    ecx
  40f69d:	es call 0x41daebb9
  40f6a3:	or     eax,0x1a790c83
  40f6a8:	stos   DWORD PTR es:[edi],eax
  40f6a9:	or     bh,BYTE PTR [esi+0x17]
  40f6ac:	or     al,dh
  40f6ae:	cmp    esp,DWORD PTR [edx+0x38]
  40f6b1:	sub    ebp,DWORD PTR [ebx-0x7db94133]
  40f6b7:	add    al,cl
  40f6b9:	mov    dh,0x3c
  40f6bb:	ret    
  40f6bc:	xchg   esi,eax
  40f6bd:	popf   
  40f6be:	push   ds
  40f6bf:	inc    esi
  40f6c0:	pop    ss
  40f6c1:	push   ecx
  40f6c2:	dec    ecx
  40f6c3:	xor    eax,0x190fc67a
  40f6c8:	jmp    FWORD PTR [edi-0x799b204f]
  40f6ce:	dec    ebp
  40f6cf:	dec    edx
  40f6d0:	shl    dl,1
  40f6d2:	adc    al,0x8a
  40f6d4:	and    al,0x5a
  40f6d6:	pop    edi
  40f6d7:	pop    ebp
  40f6d8:	push   es
  40f6d9:	inc    edi
  40f6da:	call   0x906d6dc9
  40f6df:	push   esp
  40f6e0:	xor    ebx,DWORD PTR ds:0xea93b4ef
  40f6e6:	pusha  
  40f6e7:	in     al,dx
  40f6e8:	jns    0x40f6e7
  40f6ea:	popa   
  40f6eb:	cwde   
  40f6ec:	dec    esi
  40f6ed:	jbe    0x40f747
  40f6ef:	dec    ebx
  40f6f0:	nop
  40f6f1:	test   BYTE PTR [edx-0x38],dh
  40f6f4:	aad    0xb2
  40f6f6:	xchg   esp,eax
  40f6f7:	sub    al,0x4b
  40f6f9:	aas    
  40f6fa:	inc    edi
  40f6fb:	out    0x50,al
  40f6fd:	adc    edx,esp
  40f6ff:	cdq    
  40f700:	rcl    DWORD PTR [edi+eax*8-0x32],cl
  40f704:	lds    edi,FWORD PTR [esi-0x17]
  40f707:	cmp    eax,0x3504ea76
  40f70c:	out    dx,eax
  40f70d:	fisubr WORD PTR [edi]
  40f70f:	pop    ebx
  40f710:	sbb    BYTE PTR [esi+eiz*1-0x13],dh
  40f714:	(bad)  
  40f715:	xchg   ebx,eax
  40f716:	push   edx
  40f717:	mov    ch,0x61
  40f719:	repnz sbb DWORD PTR [esp+ebx*8+0x48],edx
  40f71e:	add    DWORD PTR [eax-0x1cf21b87],edi
  40f724:	jo     0x40f762
  40f726:	scas   eax,DWORD PTR es:[edi]
  40f727:	jmp    0x40f786
  40f729:	stos   DWORD PTR es:[edi],eax
  40f72a:	int    0x76
  40f72c:	dec    edx
  40f72d:	jmp    0xcceb:0x1881b142
  40f734:	or     BYTE PTR [edx-0x70],al
  40f737:	loope  0x40f71c
  40f739:	sbb    bh,BYTE PTR [eax-0x35f6f4e1]
  40f73f:	cmp    BYTE PTR ss:0x22457307,ah
  40f746:	mov    esp,0xebba3fe5
  40f74b:	aaa    
  40f74c:	xchg   ebp,eax
  40f74d:	mov    cl,0xc1
  40f74f:	cld    
  40f750:	ret    
  40f751:	jno    0x40f7b1
  40f753:	jns    0x40f73e
  40f755:	loopne 0x40f7c8
  40f757:	lods   eax,DWORD PTR ds:[esi]
  40f758:	add    ecx,esi
  40f75a:	cmp    esi,esi
  40f75c:	cdq    
  40f75d:	mov    cl,0x70
  40f75f:	loop   0x40f79f
  40f761:	dec    esp
  40f762:	nop
  40f763:	inc    ebx
  40f764:	icebp  
  40f765:	popa   
  40f766:	rol    BYTE PTR [ebp+ecx*1+0x4b],1
  40f76a:	ss jle 0x40f743
  40f76d:	xchg   DWORD PTR [ecx-0x45f5b159],edx
  40f773:	mov    dl,0x95
  40f775:	retf   
  40f776:	cwde   
  40f777:	or     ch,BYTE PTR [esi-0x4b]
  40f77a:	out    dx,eax
  40f77b:	clc    
  40f77c:	popa   
  40f77d:	sbb    cl,dl
  40f77f:	cmp    dl,bh
  40f781:	adc    al,0xd3
  40f783:	inc    eax
  40f784:	xchg   ecx,eax
  40f785:	fs dec eax
  40f787:	add    eax,0x546d746f
  40f78c:	sub    ebp,DWORD PTR [ecx]
  40f78e:	pop    ds
  40f78f:	or     eax,DWORD PTR [esi-0x266a609a]
  40f795:	pop    esi
  40f796:	lea    esi,[edx-0xac5908c]
  40f79c:	xchg   ebp,eax
  40f79d:	push   esi
  40f79e:	daa    
  40f79f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f7a0:	jg     0x40f7e6
  40f7a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f7a3:	je     0x40f7cc
  40f7a5:	test   DWORD PTR [edx],esp
  40f7a7:	cmp    eax,0xcf355830
  40f7ac:	loope  0x40f787
  40f7ae:	push   ecx
  40f7af:	ds in  al,0xa8
  40f7b2:	fst    DWORD PTR [ecx]
  40f7b4:	dec    ecx
  40f7b5:	shl    DWORD PTR [edi-0x7fb67297],cl
  40f7bb:	in     eax,dx
  40f7bc:	xchg   ecx,eax
  40f7bd:	out    0x33,eax
  40f7bf:	mov    dh,0xaa
  40f7c1:	jp     0x40f7eb
  40f7c3:	lahf   
  40f7c4:	mov    ch,0x1c
  40f7c6:	cmp    eax,esp
  40f7c8:	ret    0x8bf5
  40f7cb:	dec    eax
  40f7cc:	arpl   si,bx
  40f7ce:	and    edx,edx
  40f7d0:	inc    DWORD PTR [eax-0x62]
  40f7d3:	mov    ebx,0x3faffe59
  40f7d8:	xor    eax,0xeadf9843
  40f7dd:	or     eax,0xb62fa1cf
  40f7e2:	mov    esp,0x922f45be
  40f7e7:	out    dx,eax
  40f7e8:	loope  0x40f862
  40f7ea:	xor    ch,BYTE PTR ds:0xec2fbc99
  40f7f0:	addr16 pop esi
  40f7f2:	adc    WORD PTR [ecx+0xfb00612],bx
  40f7f9:	scas   al,BYTE PTR es:[edi]
  40f7fa:	dec    eax
  40f7fb:	dec    esi
  40f7fc:	mov    al,0xfa
  40f7fe:	int    0x6d
  40f800:	retf   0xb980
  40f803:	popa   
  40f804:	(bad)  
  40f805:	jge    0x40f85c
  40f807:	mov    ebp,0xc2c311de
  40f80c:	jl     0x40f830
  40f80e:	sub    bh,dl
  40f810:	dec    esi
  40f811:	out    dx,al
  40f812:	adc    BYTE PTR [esi+esi*2-0x7471fff],0x5c
  40f81a:	and    eax,0x4a6e9205
  40f81f:	mov    ebx,DWORD PTR [esi-0x21]
  40f822:	xchg   esi,eax
  40f823:	dec    esi
  40f824:	(bad)  
  40f825:	adc    cl,BYTE PTR [eax-0x1883923f]
  40f82b:	imul   ebx,DWORD PTR [eax-0x7e],0x9333cc06
  40f832:	jp     0x40f7c5
  40f834:	lea    esi,[esi+0x43220f6]
  40f83a:	or     ebx,DWORD PTR [ebx]
  40f83c:	(bad)  
  40f83d:	pop    edi
  40f83e:	cld    
  40f83f:	inc    eax
  40f840:	fdivr  QWORD PTR [edx+esi*1]
  40f843:	mov    ecx,ecx
  40f845:	inc    edx
  40f846:	icebp  
  40f847:	lds    edx,FWORD PTR [esi]
  40f849:	push   esi
  40f84a:	int3   
  40f84b:	xchg   edi,eax
  40f84c:	out    dx,al
  40f84d:	imul   ebx,DWORD PTR [ebx],0xffffffc1
  40f850:	mov    ebp,0xda87b876
  40f855:	or     DWORD PTR [ecx-0x6ed2b749],ebx
  40f85b:	div    DWORD PTR [ebx]
  40f85d:	push   ecx
  40f85e:	jae    0x40f7ff
  40f860:	push   esi
  40f861:	jge    0x40f896
  40f863:	nop
  40f864:	jge    0x40f8e4
  40f866:	inc    eax
  40f867:	adc    DWORD PTR [edi-0x345141ee],eax
  40f86d:	stos   BYTE PTR es:[edi],al
  40f86e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f86f:	je     0x40f7fa
  40f871:	pop    es
  40f872:	int    0xee
  40f874:	repnz scas eax,DWORD PTR es:[edi]
  40f876:	cmova  esi,DWORD PTR [ebx+0x1df66795]
  40f87d:	xor    BYTE PTR [esi+0x3a],0x3
  40f881:	fwait
  40f882:	and    ch,dh
  40f884:	pushf  
  40f885:	outs   dx,DWORD PTR ds:[esi]
  40f886:	push   0xdceec60a
  40f88b:	lahf   
  40f88c:	push   0x1b
  40f88e:	mov    ds:0xc4f7bdca,al
  40f893:	adc    al,0x2c
  40f895:	jne    0x40f8bd
  40f897:	pop    ebp
  40f898:	dec    edi
  40f899:	pop    ecx
  40f89a:	mov    ebx,0x12193727
  40f89f:	sub    DWORD PTR [eax+0x7],0x6ab31c0e
  40f8a6:	in     al,dx
  40f8a7:	ja     0x40f8fc
  40f8a9:	mov    bl,0xe4
  40f8ab:	aas    
  40f8ac:	pop    eax
  40f8ad:	jno    0x40f929
  40f8af:	jecxz  0x40f887
  40f8b1:	jns    0x40f8b6
  40f8b3:	in     al,0xa6
  40f8b5:	icebp  
  40f8b6:	pop    edx
  40f8b7:	mov    bl,0x47
  40f8b9:	pop    ebp
  40f8ba:	cwde   
  40f8bb:	and    edx,DWORD PTR [ebx]
  40f8bd:	xor    esi,DWORD PTR ds:0xe18ee963
  40f8c3:	ret    0xbc74
  40f8c6:	aam    0x4a
  40f8c8:	jp     0x40f8a8
  40f8ca:	lea    ecx,[ecx-0x1a]
  40f8cd:	(bad)  
  40f8cf:	int3   
  40f8d0:	es gs out dx,eax
  40f8d3:	retf   0x35c7
  40f8d6:	push   0x1bc18faa
  40f8db:	push   eax
  40f8dc:	push   eax
  40f8dd:	mov    esp,0x90fde0a6
  40f8e2:	jg     0x40f881
  40f8e4:	bound  ebp,QWORD PTR ds:0x1d6f0724
  40f8ea:	sub    bh,ch
  40f8ec:	rcr    DWORD PTR [edx-0x535ae63],1
  40f8f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f8f3:	jle    0x40f878
  40f8f5:	xor    DWORD PTR [edx+0x5a],0x6d
  40f8f9:	imul   ecx,DWORD PTR [eax],0x2d
  40f8fc:	pop    edi
  40f8fd:	in     al,0x6a
  40f8ff:	xor    eax,0x447daf6a
  40f904:	add    eax,0xb018bfc5
  40f909:	add    dh,ch
  40f90b:	imul   esp,DWORD PTR [edi-0x7366d98b],0x54c9cbaf
  40f915:	ss sub eax,0xef24cdb0
  40f91b:	aaa    
  40f91c:	mov    WORD PTR [eax],cs
  40f91e:	cmp    eax,0xd8f58396
  40f923:	sub    ebp,DWORD PTR [ebx]
  40f925:	mov    bh,dh
  40f927:	lods   al,BYTE PTR ds:[esi]
  40f928:	adc    al,0xc8
  40f92a:	int    0x5f
  40f92c:	popf   
  40f92d:	idiv   DWORD PTR [edx-0x4f]
  40f930:	inc    esp
  40f931:	pop    edx
  40f932:	sub    bh,BYTE PTR [esi-0xb]
  40f935:	inc    ebp
  40f936:	out    dx,al
  40f937:	sub    BYTE PTR ds:0x3d075a0c,dl
  40f93d:	sbb    esi,DWORD PTR [eax-0x41]
  40f940:	or     dh,dl
  40f942:	lea    ebx,[edx-0xc8dbd98]
  40f948:	ins    DWORD PTR es:[edi],dx
  40f949:	sbb    eax,0x42ab655f
  40f94e:	shr    DWORD PTR [esi],0x10
  40f951:	shr    DWORD PTR [esi],1
  40f953:	cmc    
  40f954:	mov    bl,0x51
  40f956:	loopne 0x40f8fb
  40f958:	xchg   edx,eax
  40f959:	ficomp WORD PTR [ecx-0x31]
  40f95c:	xchg   ecx,eax
  40f95d:	sbb    BYTE PTR [ebx+0x1ad88eb4],ch
  40f963:	icebp  
  40f964:	imul   edx,DWORD PTR [ebp-0x65],0x17
  40f968:	lock cmp BYTE PTR [edi],dl
  40f96b:	je     0x40f976
  40f96d:	addr16 cmc 
  40f96f:	mov    ds:0x710d84a8,al
  40f974:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f975:	mov    bh,0xf5
  40f977:	xchg   esp,eax
  40f978:	add    al,al
  40f97a:	xchg   edx,eax
  40f97b:	sbb    al,0x58
  40f97d:	nop
  40f97e:	dec    ebp
  40f97f:	adc    esp,DWORD PTR [eax+0x47]
  40f982:	adc    al,0x3c
  40f984:	(bad)  
  40f985:	push   esi
  40f986:	inc    eax
  40f987:	adc    al,BYTE PTR [eax-0x7103a]
  40f98d:	inc    BYTE PTR [edx]
  40f98f:	mov    ch,0x7a
  40f991:	xor    esp,DWORD PTR [esi]
  40f993:	aad    0x78
  40f995:	ret    0x2f6e
  40f998:	push   eax
  40f999:	retf   
  40f99a:	std    
  40f99b:	pushf  
  40f99c:	dec    ecx
  40f99d:	outs   dx,BYTE PTR ds:[esi]
  40f99e:	nop
  40f99f:	icebp  
  40f9a0:	fmul   DWORD PTR [edi]
  40f9a2:	sub    dl,BYTE PTR [edi+0x2a]
  40f9a5:	inc    edx
  40f9a6:	out    0x28,al
  40f9a8:	pop    eax
  40f9a9:	jmp    0x4a67:0xe6780a60
  40f9b0:	lock sub DWORD PTR [ebx-0x2fe4883d],ecx
  40f9b7:	mov    ecx,0xdf213a0c
  40f9bc:	sbb    esi,esp
  40f9be:	jb     0x40f98e
  40f9c0:	jne    0x40f97f
  40f9c2:	sub    BYTE PTR fs:[ebp+0xfe43ec7],dl
  40f9c9:	shl    BYTE PTR [esi+esi*2+0x626a9f36],cl
  40f9d0:	xor    eax,0xac9b1897
  40f9d5:	outs   dx,DWORD PTR ds:[esi]
  40f9d6:	sbb    eax,0xeba8c81a
  40f9db:	(bad)  
  40f9dc:	cmc    
  40f9dd:	adc    ebx,DWORD PTR [ecx+0x68d40f6e]
  40f9e3:	pushf  
  40f9e4:	jl     0x40f9c4
  40f9e6:	aas    
  40f9e7:	std    
  40f9e8:	xchg   ebp,eax
  40f9e9:	mov    ds:0xad432447,al
  40f9ee:	dec    eax
  40f9ef:	sub    edi,DWORD PTR [ecx+0x31]
  40f9f2:	inc    DWORD PTR [ebx+0x4a]
  40f9f5:	xchg   DWORD PTR [ebp-0x17],ebp
  40f9f8:	clc    
  40f9f9:	loopne 0x40fa1f
  40f9fb:	sbb    eax,ebp
  40f9fd:	mov    ecx,0xc72eae2f
  40fa02:	sub    al,0x82
  40fa04:	jb     0x40f99f
  40fa06:	push   ds
  40fa07:	push   ss
  40fa08:	pop    ebp
  40fa09:	test   BYTE PTR [edx],dh
  40fa0b:	aam    0x21
  40fa0d:	popa   
  40fa0e:	xchg   ecx,eax
  40fa0f:	cmp    eax,DWORD PTR [ebx+ebp*2]
  40fa12:	xlat   BYTE PTR ds:[ebx]
  40fa13:	adc    al,0x1e
  40fa15:	jbe    0x40fa28
  40fa17:	(bad)  
  40fa18:	and    ch,BYTE PTR [edi+0x267ab0bf]
  40fa1e:	add    bl,BYTE PTR [ebx]
  40fa20:	sti    
  40fa21:	inc    eax
  40fa22:	and    ch,bh
  40fa24:	cld    
  40fa25:	xchg   ebx,eax
  40fa26:	ror    BYTE PTR fs:[edi+esi*8-0x3881eda6],cl
  40fa2e:	fldcw  WORD PTR [ecx+0x4e43a8ac]
  40fa34:	add    esp,ebp
  40fa36:	push   cs
  40fa37:	cmp    DWORD PTR [edi-0x37cd5721],0xcdf29ea7
  40fa41:	aad    0x8f
  40fa43:	(bad)
  40fa47:	les    ebx,FWORD PTR [eax]
  40fa49:	mov    ah,0xac
  40fa4b:	xchg   esi,eax
  40fa4c:	enter  0xb961,0xa4
  40fa50:	pushf  
  40fa51:	inc    ebx
  40fa52:	or     esi,DWORD PTR [ecx-0x43]
  40fa55:	ins    BYTE PTR es:[edi],dx
  40fa56:	pop    esi
  40fa57:	das    
  40fa58:	add    bh,BYTE PTR [edi+eiz*1+0x30620d2d]
  40fa5f:	push   ecx
  40fa60:	mov    eax,ds:0xafeab2d
  40fa65:	jecxz  0x40faba
  40fa67:	pop    edi
  40fa68:	jge    0x40f9f4
  40fa6a:	xor    DWORD PTR [ebx+ebx*4-0x7494f301],edx
  40fa71:	jmp    FWORD PTR [edx]
  40fa73:	ret    
  40fa74:	sub    ah,cl
  40fa76:	jle    0x40fab5
  40fa78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa79:	ds (bad) 
  40fa7b:	dec    edx
  40fa7c:	ds pop esp
  40fa7e:	call   0xde57ab8
  40fa83:	push   edi
  40fa84:	dec    ecx
  40fa85:	and    esp,DWORD PTR [ebx+0x11]
  40fa88:	enter  0x3b0d,0x3b
  40fa8c:	in     eax,dx
  40fa8d:	dec    edi
  40fa8e:	inc    eax
  40fa8f:	es ret 
  40fa91:	xor    eax,DWORD PTR [edi-0x179be886]
  40fa97:	sbb    al,0x6a
  40fa99:	pop    ds
  40fa9a:	jmp    0x151:0x2d656f99
  40faa1:	jnp    0x40fad6
  40faa3:	test   bh,al
  40faa5:	jns    0x40faac
  40faa7:	mov    bh,0x19
  40faa9:	pop    eax
  40faaa:	xor    BYTE PTR [esi],0x7b
  40faad:	sti    
  40faae:	aaa    
  40faaf:	sar    BYTE PTR [esi+0x6e],1
  40fab2:	dec    edi
  40fab3:	shl    BYTE PTR ds:0x5b555d8a,0xdd
  40faba:	pop    ebx
  40fabb:	shl    DWORD PTR [esi-0x52837112],cl
  40fac1:	js     0x40fa74
  40fac3:	bound  ebx,QWORD PTR [esi+0x344054c2]
  40fac9:	das    
  40faca:	mov    bl,0xc3
  40facc:	push   ss
  40facd:	mov    ebp,esi
  40facf:	pushw  ds
  40fad1:	lahf   
  40fad2:	(bad)  
  40fad3:	adc    eax,0x89e1408f
  40fad8:	popf   
  40fad9:	aas    
  40fada:	cmp    DWORD PTR [ebx],ebp
  40fadc:	mov    al,BYTE PTR [ecx+0x2d965153]
  40fae2:	sbb    BYTE PTR [edi+0x67350ba6],ah
  40fae8:	jp     0x40fac9
  40faea:	mov    dl,0xcb
  40faec:	xchg   ebx,eax
  40faed:	mov    dh,0x33
  40faef:	push   0x1c
  40faf1:	pop    ds
  40faf2:	gs in  eax,dx
  40faf4:	cmp    eax,0x61ab4707
  40faf9:	push   esp
  40fafa:	int    0x7a
  40fafc:	mov    eax,0x3dcdf90e
  40fb01:	adc    al,0xc0
  40fb03:	fisubr DWORD PTR [edi]
  40fb05:	mov    ds:0x68560910,al
  40fb0a:	fisttp QWORD PTR [eax+edi*8-0x60]
  40fb0e:	xor    bh,ah
  40fb10:	into   
  40fb11:	pop    ecx
  40fb12:	pop    eax
  40fb13:	test   BYTE PTR [ebp+0x336d87bf],dh
  40fb19:	mov    dh,0x9e
  40fb1b:	stos   DWORD PTR es:[edi],eax
  40fb1c:	cmp    al,0x87
  40fb1e:	fucom  st(0)
  40fb20:	jge    0x40fab7
  40fb22:	outs   dx,BYTE PTR ds:[esi]
  40fb23:	dec    edi
  40fb24:	cld    
  40fb25:	sub    al,0xa3
  40fb27:	into   
  40fb28:	cmp    BYTE PTR [ebx-0x6b],bl
  40fb2b:	rol    DWORD PTR [eax-0x77e89f51],1
  40fb31:	jo     0x40fb4d
  40fb33:	ins    DWORD PTR es:[edi],dx
  40fb34:	pusha  
  40fb35:	add    BYTE PTR [ebx-0x6e7249ed],al
  40fb3b:	jp     0x40fbbc
  40fb3d:	push   edi
  40fb3e:	imul   esp,DWORD PTR [edi+0x46ee6a4f],0x16
  40fb45:	jbe    0x40fb8d
  40fb47:	fdivp  st(7),st
  40fb49:	pusha  
  40fb4a:	cmp    cl,ch
  40fb4c:	sub    eax,0x99bf862c
  40fb51:	xchg   edx,eax
  40fb52:	jae    0x40fb69
  40fb54:	adc    DWORD PTR [ebx-0x1f3a6ffe],ebp
  40fb5a:	imul   esi,DWORD PTR [ebp-0x5d],0xffffff85
  40fb5e:	stos   BYTE PTR es:[edi],al
  40fb5f:	and    DWORD PTR [eax+0x5cc56321],eax
  40fb65:	sbb    DWORD PTR [edx-0x619b2f78],edx
  40fb6b:	sub    esi,edx
  40fb6d:	adc    eax,0x41fd41d
  40fb72:	(bad)  
  40fb74:	pop    ecx
  40fb75:	xor    al,0xb6
  40fb77:	ret    
  40fb78:	ja     0x40fbc4
  40fb7a:	bound  esp,QWORD PTR [ebp+0x78]
  40fb7d:	adc    BYTE PTR [esi],al
  40fb7f:	xchg   esi,eax
  40fb80:	jb     0x40fb44
  40fb82:	aas    
  40fb83:	mov    ebx,0xec5a77ea
  40fb88:	inc    esi
  40fb89:	sbb    ch,0xaf
  40fb8c:	call   0x766614ed
  40fb91:	jle    0x40fbba
  40fb93:	aad    0x2
  40fb95:	push   edi
  40fb96:	add    DWORD PTR [esi-0x14],ebx
  40fb99:	paddb  mm7,QWORD PTR [esi]
  40fb9c:	mul    DWORD PTR [ecx+0x571ac54b]
  40fba2:	push   ebx
  40fba3:	arpl   WORD PTR [ebp+0x36],di
  40fba6:	xlat   BYTE PTR ds:[ebx]
  40fba7:	sahf   
  40fba8:	dec    eax
  40fba9:	add    cl,dl
  40fbab:	aas    
  40fbac:	arpl   WORD PTR [edi+0x4a28a203],di
  40fbb2:	mov    edx,0x9bc1fa85
  40fbb7:	mov    ecx,ebx
  40fbb9:	push   ebp
  40fbba:	xchg   ebx,eax
  40fbbb:	les    esi,FWORD PTR [ebx+0x18]
  40fbbe:	dec    esi
  40fbbf:	sub    DWORD PTR [ebp-0x39d48840],ebp
  40fbc5:	jb     0x40fc29
  40fbc7:	mov    dl,ch
  40fbc9:	es aaa 
  40fbcb:	jecxz  0x40fbf2
  40fbcd:	add    esp,DWORD PTR [ebp+eax*1-0x1a3619ff]
  40fbd4:	cmp    eax,0x47d53edd
  40fbd9:	call   0x83efc7aa
  40fbde:	mul    DWORD PTR [edx+0x3f]
  40fbe1:	aad    0x5c
  40fbe3:	jmp    0x9914:0x144ed2bf
  40fbea:	sahf   
  40fbeb:	sub    al,0x63
  40fbed:	retf   0x4d3e
  40fbf0:	xlat   BYTE PTR ds:[ebx]
  40fbf1:	pusha  
  40fbf2:	xchg   ecx,eax
  40fbf3:	sti    
  40fbf4:	enter  0x92e5,0x30
  40fbf8:	cdq    
  40fbf9:	call   0x45b2176a
  40fbfe:	aad    0x35
  40fc00:	add    DWORD PTR [esi],0x64
  40fc03:	in     al,dx
  40fc04:	bound  ebx,QWORD PTR [ebp-0x17]
  40fc07:	je     0x40fc48
  40fc09:	pop    edx
  40fc0a:	cmp    al,0x81
  40fc0c:	shl    BYTE PTR [ecx],1
  40fc0e:	daa    
  40fc0f:	aam    0x83
  40fc11:	mov    BYTE PTR [ebx+0x299998d1],ah
  40fc17:	pop    edx
  40fc18:	jmp    0x574b:0x80eb8259
  40fc1f:	or     al,0xd9
  40fc21:	adc    al,0x9d
  40fc23:	mov    al,ds:0xe7dd247b
  40fc28:	std    
  40fc29:	sahf   
  40fc2a:	in     eax,0x46
  40fc2c:	push   ebp
  40fc2d:	xchg   esi,eax
  40fc2e:	ret    
  40fc2f:	dec    esi
  40fc30:	out    dx,eax
  40fc31:	sub    eax,0xf59fd927
  40fc36:	mov    ebx,DWORD PTR [ebp-0xf]
  40fc39:	add    DWORD PTR [esi+0x131c69f7],edx
  40fc3f:	cld    
  40fc40:	push   edx
  40fc41:	dec    BYTE PTR [ebx-0x20]
  40fc44:	mov    edi,0x19286e62
  40fc49:	lahf   
  40fc4a:	es cli 
  40fc4c:	rcr    BYTE PTR [ebp+0x44],1
  40fc4f:	inc    edi
  40fc50:	cs push ebx
  40fc52:	(bad)  
  40fc53:	ret    0x8b26
  40fc56:	(bad)  
  40fc57:	imul   DWORD PTR [edi-0x2fb3f6f3]
  40fc5d:	add    esi,DWORD PTR [eax+0x5]
  40fc60:	sbb    dh,BYTE PTR [edx+0x4c]
  40fc63:	adc    eax,0x924a981
  40fc68:	shl    DWORD PTR [edi],cl
  40fc6a:	or     al,0x83
  40fc6c:	ror    DWORD PTR [edx],0x77
  40fc6f:	and    BYTE PTR [ecx-0x6f],0x32
  40fc73:	(bad)  
  40fc74:	fdivr  DWORD PTR [edx-0x68e9da4f]
  40fc7a:	test   dh,dh
  40fc7c:	cmp    esi,esp
  40fc7e:	adc    DWORD PTR [ecx+esi*1+0x72f7c5e2],ecx
  40fc85:	add    edx,esp
  40fc87:	ds iret 
  40fc89:	add    al,0x9e
  40fc8b:	mov    WORD PTR [esi],ss
  40fc8d:	pop    esp
  40fc8e:	xchg   ecx,eax
  40fc8f:	sti    
  40fc90:	jno    0x40fcd5
  40fc92:	(bad)  
  40fc93:	outs   dx,DWORD PTR ds:[esi]
  40fc94:	fs push ds
  40fc96:	shl    esi,1
  40fc98:	repz rcr DWORD PTR [esi+0x6d],0x46
  40fc9d:	jmp    0x40fcde
  40fc9f:	cmp    BYTE PTR [edi-0x5c9afdf2],ah
  40fca5:	mov    ecx,0xfd97968a
  40fcaa:	or     DWORD PTR [edx],0xffffff90
  40fcad:	and    esi,DWORD PTR [ebx+0x11]
  40fcb0:	aaa    
  40fcb1:	call   0x90b2:0xdcd5e101
  40fcb8:	addr16 xbegin 0xdc682da6
  40fcbf:	pop    es
  40fcc0:	push   ebp
  40fcc1:	and    al,BYTE PTR [ecx-0x5d]
  40fcc4:	mov    WORD PTR [edx-0x7d0ab9d6],?
  40fcca:	(bad)  
  40fccc:	fst    DWORD PTR [esi+0x45]
  40fccf:	rcl    esp,cl
  40fcd1:	mov    ch,0x11
  40fcd3:	xor    bl,BYTE PTR [ebp-0x56]
  40fcd6:	pushf  
  40fcd7:	fucomp st(3)
  40fcd9:	cmp    dl,BYTE PTR [ebp-0x60d6abfd]
  40fcdf:	je     0x40fd23
  40fce1:	jl     0x40fc6d
  40fce3:	mov    dl,0x78
  40fce5:	mov    bl,0xb0
  40fce7:	inc    esi
  40fce8:	mov    eax,ds:0xa2850c76
  40fced:	mov    edi,0x8663283d
  40fcf2:	ret    0xce76
  40fcf5:	stc    
  40fcf6:	(bad)  
  40fcf8:	je     0x40fd31
  40fcfa:	sub    eax,DWORD PTR [eax+0x3b53e52a]
  40fd00:	xor    ah,BYTE PTR [edx+edx*2+0xdbe6bc4]
  40fd07:	mov    ebx,0x3866102d
  40fd0c:	inc    esp
  40fd0d:	xor    eax,0x855b571c
  40fd12:	mov    edi,0x8fa07c31
  40fd17:	add    al,BYTE PTR [ebx]
  40fd19:	out    dx,eax
  40fd1a:	cld    
  40fd1b:	or     ch,BYTE PTR [ecx]
  40fd1d:	jg     0x40fcc3
  40fd1f:	data16 mov dl,0x7f
  40fd22:	(bad)  
  40fd23:	fcmovne st,st(2)
  40fd25:	ficomp WORD PTR [edx]
  40fd27:	cs xchg esp,eax
  40fd29:	(bad)  
  40fd2b:	jns    0x40fd62
  40fd2d:	fdivp  st(2),st
  40fd2f:	xlat   BYTE PTR ds:[ebx]
  40fd30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd31:	push   edi
  40fd32:	dec    esp
  40fd33:	(bad)  
  40fd34:	jnp    0x40fd2b
  40fd36:	loope  0x40fd02
  40fd38:	call   0x8f06:0x3353538a
  40fd3f:	or     bl,BYTE PTR [ecx]
  40fd41:	xor    BYTE PTR ds:0xb7636d16,0x4c
  40fd48:	ret    0x9601
  40fd4b:	sbb    DWORD PTR [ecx+0x16],esi
  40fd4e:	mov    DWORD PTR [ebx+0x64a6392c],ebp
  40fd54:	or     ecx,DWORD PTR [ecx+0x57]
  40fd57:	xor    cl,cl
  40fd59:	popf   
  40fd5a:	int3   
  40fd5b:	xor    al,BYTE PTR [ecx-0x356b3966]
  40fd61:	mov    esi,0x11f58436
  40fd66:	gs jge 0x40fd22
  40fd69:	xchg   ebx,eax
  40fd6a:	(bad)  
  40fd6b:	jl     0x40fd5c
  40fd6d:	sub    al,0x1a
  40fd6f:	sbb    esi,DWORD PTR [ebp+0x2a]
  40fd72:	je     0x40fd12
  40fd74:	jnp    0x40fdc0
  40fd76:	fdiv   DWORD PTR [edx+ecx*1-0x7f]
  40fd7a:	out    0x6d,eax
  40fd7c:	test   BYTE PTR [ecx+0x401b631b],ch
  40fd82:	jecxz  0x40fdd9
  40fd84:	push   ebx
  40fd85:	test   DWORD PTR [esi+0x329d3de5],edi
  40fd8b:	stos   BYTE PTR es:[edi],al
  40fd8c:	fdivr  DWORD PTR [edx-0xcba325a]
  40fd92:	int3   
  40fd93:	(bad)
  40fd96:	cmp    DWORD PTR [eax-0x5ad70e1a],edx
  40fd9c:	lea    edx,[esi+0x42]
  40fd9f:	aam    0x4f
  40fda1:	add    ebx,edi
  40fda3:	(bad)  
  40fda4:	nop
  40fda5:	xor    eax,0x1a0888f8
  40fdaa:	or     BYTE PTR [eax],0x77
  40fdad:	jp     0x40fdc7
  40fdaf:	test   DWORD PTR [edi],ebx
  40fdb1:	fwait
  40fdb2:	cld    
  40fdb3:	in     al,dx
  40fdb4:	ss daa 
  40fdb6:	sti    
  40fdb7:	out    dx,eax
  40fdb8:	sbb    eax,0x8dc002e9
  40fdbd:	addr16 fsubrp st(5),st
  40fdc0:	xchg   ebp,eax
  40fdc1:	jl     0x40fda8
  40fdc3:	push   ecx
  40fdc4:	xchg   DWORD PTR [ebx],esp
  40fdc6:	int    0x5e
  40fdc8:	dec    edi
  40fdc9:	mov    ss,WORD PTR [ebx-0x4a780825]
  40fdcf:	mov    dl,0xe4
  40fdd1:	nop
  40fdd2:	ret    
  40fdd3:	jg     0x40fd5f
  40fdd5:	sub    edx,DWORD PTR [eax]
  40fdd7:	mov    edx,0xc52001b1
  40fddc:	in     eax,dx
  40fddd:	adc    DWORD PTR [edi+0x27c42d15],ebx
  40fde3:	ins    BYTE PTR es:[edi],dx
  40fde4:	cwde   
  40fde5:	jo     0x40fe22
  40fde7:	mov    ah,0xba
  40fde9:	add    ch,dl
  40fdeb:	and    eax,0x1878ca54
  40fdf0:	mov    dh,0x33
  40fdf2:	cdq    
  40fdf3:	jle    0x40fdc3
  40fdf5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fdf6:	sti    
  40fdf7:	loop   0x40fe6c
  40fdf9:	aas    
  40fdfa:	xor    al,0x3c
  40fdfc:	inc    eax
  40fdfd:	jge    0x40fe77
  40fdff:	inc    esi
  40fe00:	jnp    0x40fdbc
  40fe02:	imul   ebx,DWORD PTR [edi-0x3f],0xfffffff6
  40fe06:	xchg   esi,eax
  40fe07:	loope  0x40fe4a
  40fe09:	nop
  40fe0a:	loopne 0x40fda4
  40fe0c:	movsx  esp,BYTE PTR [ebp-0x56]
  40fe10:	sub    DWORD PTR [ebx-0x50],esi
  40fe13:	mov    ds:0x33188587,al
  40fe18:	repz leave 
  40fe1a:	jnp    0x40fde7
  40fe1c:	scas   eax,DWORD PTR es:[edi]
  40fe1d:	xchg   ebp,eax
  40fe1e:	enter  0xdb9c,0xe7
  40fe22:	bsf    esi,DWORD PTR [esi-0x141d772e]
  40fe29:	(bad)  
  40fe2a:	jb     0x40fe81
  40fe2c:	sbb    eax,0xe5f836b5
  40fe31:	push   edi
  40fe32:	pop    ebx
  40fe33:	cld    
  40fe34:	push   edi
  40fe35:	jae    0x40fe34
  40fe37:	pop    ebx
  40fe38:	mov    al,0xcf
  40fe3a:	ror    DWORD PTR [edx-0x22],cl
  40fe3d:	mov    ds:0x7c749c2e,al
  40fe42:	or     eax,0xbf57fec0
  40fe47:	push   eax
  40fe48:	push   0xb39c9fe6
  40fe4d:	mov    dh,0xe6
  40fe4f:	in     eax,dx
  40fe50:	jl     0x40fe48
  40fe52:	(bad)  
  40fe53:	repz sar DWORD PTR [edx-0x7a],1
  40fe57:	push   esi
  40fe58:	sbb    eax,0x809d823
  40fe5d:	sti    
  40fe5e:	pop    es
  40fe5f:	call   0x191c:0x8eab9c1
  40fe66:	mov    dl,BYTE PTR [ebp-0x43]
  40fe69:	add    BYTE PTR [ebx+0x5c3a4e2],0x77
  40fe70:	or     al,0x56
  40fe72:	aad    0x57
  40fe74:	pop    ebx
  40fe75:	scas   eax,DWORD PTR es:[edi]
  40fe76:	into   
  40fe77:	rcr    DWORD PTR [ebp-0x40649fa5],1
  40fe7d:	xchg   DWORD PTR [edx+0x38],ecx
  40fe80:	fisttp QWORD PTR ds:0xe0840a47
  40fe86:	inc    eax
  40fe87:	cwde   
  40fe88:	push   esp
  40fe89:	int3   
  40fe8a:	hlt    
  40fe8b:	push   cs
  40fe8c:	inc    ebp
  40fe8d:	push   ebp
  40fe8e:	mov    ecx,0x1bf10714
  40fe93:	rcr    BYTE PTR [esi],1
  40fe95:	sbb    dl,BYTE PTR [esi]
  40fe97:	leave  
  40fe98:	pop    WORD PTR [esi]
  40fe9b:	mov    edx,0xc7198648
  40fea0:	dec    ebp
  40fea1:	out    dx,al
  40fea2:	add    BYTE PTR [esi+0x5af1af66],al
  40fea8:	mov    bl,0x34
  40feaa:	mov    ah,0xb0
  40fead:	lods   eax,DWORD PTR ds:[esi]
  40feae:	(bad)  
  40feaf:	jle    0x40fe3c
  40feb1:	adc    eax,0xaf69530a
  40feb6:	repz xor DWORD PTR [esi],edi
  40feb9:	jle    0x40fe75
  40febb:	and    bl,BYTE PTR [edx+0x5e74c8e6]
  40fec1:	dec    ecx
  40fec2:	ret    0x749e
  40fec5:	adc    ecx,edx
  40fec7:	sbb    ah,ch
  40fec9:	jo     0x40fee0
  40fecb:	add    edi,DWORD PTR [ebx*2-0x778687bb]
  40fed2:	inc    ebp
  40fed3:	adc    ch,BYTE PTR [esp+edx*4]
  40fed6:	pop    edi
  40fed7:	lods   al,BYTE PTR ds:[esi]
  40fed8:	inc    ebp
  40fed9:	gs (bad) 
  40fedc:	mov    al,0x79
  40fede:	sbb    al,0x3c
  40fee0:	(bad)  
  40fee1:	xlat   BYTE PTR ds:[ebx]
  40fee2:	iret   
  40fee3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fee4:	mov    ds:0x2fc4c6ed,al
  40fee9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40feea:	push   es
  40feeb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40feec:	mov    ah,0xe4
  40feee:	icebp  
  40feef:	repz aaa 
  40fef1:	xchg   ebp,eax
  40fef2:	pop    ss
  40fef3:	xor    DWORD PTR [edi],ebx
  40fef5:	cmp    eax,edi
  40fef7:	int3   
  40fef8:	je     0x40febc
  40fefa:	std    
  40fefb:	cmp    al,0xdc
  40fefd:	nop
  40fefe:	mov    dl,0x56
  40ff00:	shr    DWORD PTR [eax+0x7d27ff7b],0xb9
  40ff07:	mov    ds:0x78465586,al
  40ff0c:	add    BYTE PTR [eax],0x61
  40ff0f:	cmc    
  40ff10:	lods   al,BYTE PTR ds:[esi]
  40ff11:	sbb    BYTE PTR [esi],bh
  40ff13:	cmp    al,0x49
  40ff15:	lods   al,BYTE PTR ds:[esi]
  40ff16:	retf   
  40ff17:	add    al,0x43
  40ff19:	and    DWORD PTR [ebp-0x5e5cc838],esi
  40ff1f:	std    
  40ff20:	sar    DWORD PTR [edx+0x676c4ab8],1
  40ff26:	mov    DWORD PTR [esi-0x6b],ecx
  40ff29:	mov    ?,WORD PTR [esi+0x12e13ca7]
  40ff2f:	test   dl,bh
  40ff31:	mov    dh,0x52
  40ff33:	xor    al,0xfc
  40ff35:	adc    al,0x37
  40ff37:	hlt    
  40ff38:	not    BYTE PTR [edi+0x34]
  40ff3b:	xchg   edi,eax
  40ff3c:	mov    cl,BYTE PTR [eax]
  40ff3e:	mov    ah,0xca
  40ff40:	cdq    
  40ff41:	mov    edi,0x8028b3f
  40ff46:	and    esi,DWORD PTR [esi+0x0]
  40ff49:	inc    ebx
  40ff4a:	jge    0x40fee3
  40ff4c:	in     eax,dx
  40ff4d:	jg     0x40fef0
  40ff4f:	mov    ah,0xa3
  40ff51:	or     al,0x2
  40ff53:	push   esi
  40ff54:	sub    eax,0xf0f8b25d
  40ff59:	adc    eax,0x60526ec
  40ff5e:	cmp    WORD PTR [ecx-0x782acac0],0x25d7
  40ff67:	inc    esi
  40ff68:	inc    ebx
  40ff69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff6a:	jecxz  0x40fef7
  40ff6c:	lea    ebx,ds:0xda748c71
  40ff72:	scas   eax,DWORD PTR es:[edi]
  40ff73:	pop    esi
  40ff74:	outs   dx,DWORD PTR ds:[esi]
  40ff75:	mov    edi,0x3d6cb6e8
  40ff7a:	add    eax,0x567988b
  40ff7f:	sbb    BYTE PTR [ebx],cl
  40ff81:	add    al,ah
  40ff83:	xor    BYTE PTR [ebp-0x16],0xe2
  40ff87:	cmp    ebp,DWORD PTR [edi+0x59]
  40ff8a:	push   cs
  40ff8b:	or     ebp,eax
  40ff8d:	in     eax,dx
  40ff8e:	inc    ecx
  40ff8f:	xor    ebp,DWORD PTR [esi]
  40ff91:	cmp    BYTE PTR [ecx],dh
  40ff93:	in     al,0xa2
  40ff95:	pop    esi
  40ff96:	sahf   
  40ff97:	push   0x46
  40ff99:	ds popf 
  40ff9b:	mov    al,0x11
  40ff9d:	in     eax,dx
  40ff9e:	push   ebx
  40ff9f:	push   cs
  40ffa0:	sbb    BYTE PTR [edx+ebx*1+0x1b],ah
  40ffa4:	test   esp,0x7452bacb
  40ffaa:	ds pop ebp
  40ffac:	inc    ebp
  40ffad:	jb     0x40ffa1
  40ffaf:	mov    al,ds:0x31dcd55f
  40ffb4:	scas   al,BYTE PTR es:[edi]
  40ffb5:	popa   
  40ffb6:	xchg   ax,ax
  40ffb8:	xchg   ecx,eax
  40ffb9:	ret    
  40ffba:	fadd   st(2),st
  40ffbc:	pop    esi
  40ffbd:	jmp    0x49da:0x15f18360
  40ffc4:	sub    DWORD PTR [esp+ebx*4],edx
  40ffc7:	inc    ebx
  40ffc8:	cmp    edx,DWORD PTR [ebx+0x2d]
  40ffcb:	lds    ebp,FWORD PTR [ecx]
  40ffcd:	xchg   edx,eax
  40ffce:	push   edi
  40ffcf:	ins    DWORD PTR es:[edi],dx
  40ffd0:	mov    edx,0x28c005c2
  40ffd5:	in     al,0x85
  40ffd7:	nop
  40ffd8:	ss xor eax,0x26a33a4
  40ffde:	or     bl,BYTE PTR ds:0x504fcaf1
  40ffe4:	sti    
  40ffe5:	mul    DWORD PTR [edi+0x4bef1aea]
  40ffeb:	shl    BYTE PTR ds:0x153fda03,0x4c
  40fff2:	out    0x20,eax
  40fff4:	cmp    BYTE PTR [ebp+ecx*8+0x66],dl
  40fff8:	aam    0x6a
  40fffa:	pop    edx
  40fffb:	xchg   ecx,eax
  40fffc:	aaa    
  40fffd:	stos   DWORD PTR es:[edi],eax
  40fffe:	cld    
  40ffff:	sub    al,0xbb
  410001:	xchg   esp,eax
  410002:	jae    0x40ffb1
  410004:	adc    ebx,DWORD PTR [eax-0x50a4a0a7]
  41000a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41000b:	push   0xf3ec7f7f
  410010:	and    ebx,ebp
  410012:	push   ds
  410013:	div    DWORD PTR [eax+ebp*2]
  410016:	stos   BYTE PTR es:[edi],al
  410017:	or     al,0xf3
  410019:	fstp   TBYTE PTR [ebp+0x1a]
  41001c:	mov    DWORD PTR ds:0x2f0db97d,edx
  410022:	inc    esp
  410023:	inc    edx
  410024:	data16 icebp 
  410026:	push   ebp
  410027:	repz aaa 
  410029:	sar    BYTE PTR [eax],cl
  41002b:	jg     0x41009c
  41002d:	mov    ch,0xeb
  41002f:	sbb    dh,BYTE PTR [ecx]
  410031:	cs push ebx
  410033:	adc    ebx,DWORD PTR [ebx-0x7e]
  410036:	(bad)  
  410039:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41003a:	fistp  DWORD PTR [edi]
  41003c:	inc    esi
  41003d:	and    eax,0xe2371e58
  410042:	lahf   
  410043:	push   esi
  410044:	mov    edx,0xeaa3511
  410049:	or     edx,DWORD PTR [edx+eax*4+0x4b]
  41004d:	inc    eax
  41004e:	adc    al,0xa
  410050:	mov    ebp,0xddc8246c
  410055:	or     al,0xc6
  410057:	xchg   ebp,eax
  410058:	mov    bl,0x9c
  41005a:	mov    esp,0x61661ac4
  41005f:	popf   
  410060:	iret   
  410061:	test   eax,0x3a3265fa
  410066:	pusha  
  410067:	test   eax,0x8013f880
  41006c:	jg     0x410080
  41006e:	push   ebx
  41006f:	les    edx,FWORD PTR [ecx]
  410071:	push   ss
  410072:	jb     0x41006b
  410074:	das    
  410075:	mov    eax,0x128e8c06
  41007a:	das    
  41007b:	mov    ch,0x68
  41007d:	out    0x5d,eax
  41007f:	lea    ebp,[ebp-0x7a8ab5b8]
  410085:	in     eax,dx
  410086:	retf   0x5bed
  410089:	mov    esp,0x68ef90f5
  41008e:	outs   dx,DWORD PTR ds:[esi]
  41008f:	(bad)  
  410090:	into   
  410091:	mov    esp,0x38364c47
  410096:	pop    eax
  410097:	cmp    ah,bh
  410099:	cdq    
  41009a:	xor    eax,0x5b7f896f
  41009f:	sub    eax,esi
  4100a1:	add    DWORD PTR [esi],edi
  4100a3:	daa    
  4100a4:	int3   
  4100a5:	push   0xf3eb0653
  4100aa:	inc    ebp
  4100ab:	mov    ds:0x381bc56,eax
  4100b0:	mov    cl,0x9
  4100b2:	jb     0x410084
  4100b4:	adc    ah,0x5d
  4100b7:	iret   
  4100b8:	adc    al,BYTE PTR [edx-0xa]
  4100bb:	or     eax,0x621bad60
  4100c0:	cmc    
  4100c1:	and    ch,cl
  4100c3:	scas   al,BYTE PTR es:[edi]
  4100c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4100c5:	jmp    0x19ba:0x35e887d9
  4100cc:	cmp    eax,0x26bd9f25
  4100d1:	pcmpgtb mm7,QWORD PTR [edx]
  4100d4:	cdq    
  4100d5:	sahf   
  4100d6:	add    ebp,ecx
  4100d8:	inc    ebx
  4100d9:	gs dec eax
  4100dc:	or     al,BYTE PTR [ebx-0x4b]
  4100df:	ins    BYTE PTR es:[edi],dx
  4100e0:	cld    
  4100e1:	mov    dh,0x53
  4100e3:	hlt    
  4100e4:	das    
  4100e5:	out    0xb5,al
  4100e7:	lock retf 
  4100e9:	xor    al,0xed
  4100eb:	push   ds
  4100ec:	out    0x2e,eax
  4100ee:	jb     0x410164
  4100f0:	rcl    ebx,0xc3
  4100f3:	out    0x49,eax
  4100f5:	les    ebx,FWORD PTR [esi+0x708fb7e5]
  4100fb:	push   0xeb3cdfa8
  410100:	sbb    bh,BYTE PTR [ebp-0x5f74bce8]
  410106:	xor    BYTE PTR [edi],ch
  410108:	push   edi
  410109:	ja     0x410135
  41010b:	dec    ebp
  41010c:	xor    DWORD PTR [ebx+edi*2+0xab1db3a],edx
  410113:	mov    edx,0x6097c083
  410118:	cmp    eax,0xf997280b
  41011d:	add    dh,cl
  41011f:	xlat   BYTE PTR ds:[ebx]
  410120:	imul   DWORD PTR [eax]
  410122:	lods   al,BYTE PTR ds:[esi]
  410123:	ja     0x4100e0
  410125:	adc    ah,BYTE PTR [eax]
  410127:	or     eax,0x8ee20866
  41012c:	addr16 push ebx
  41012e:	daa    
  41012f:	xor    al,0xe8
  410131:	js     0x410112
  410133:	fmul   DWORD PTR es:[ecx]
  410136:	iret   
  410137:	jno    0x410119
  410139:	dec    ebx
  41013a:	xchg   esi,eax
  41013b:	jb     0x4101b6
  41013d:	inc    eax
  41013f:	lahf   
  410140:	bound  edx,QWORD PTR [eax+0x430e5574]
  410146:	fild   WORD PTR [edx-0x34293038]
  41014c:	dec    ebx
  41014d:	inc    ebp
  41014e:	mov    ebp,0xd1fe6e81
  410153:	dec    eax
  410154:	mov    esi,0x1e4999f0
  410159:	aaa    
  41015a:	push   ss
  41015b:	loopne 0x4100ff
  41015d:	push   ecx
  41015e:	adc    eax,0xea0e88cc
  410163:	clc    
  410164:	hlt    
  410165:	push   ebx
  410166:	cdq    
  410167:	mov    ecx,0x615a506b
  41016c:	push   ebx
  41016d:	push   ds
  41016e:	sahf   
  41016f:	ds xchg ecx,eax
  410171:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410172:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410173:	xchg   edx,eax
  410174:	push   ebp
  410175:	repnz or al,0x4b
  410178:	pushf  
  410179:	test   bl,al
  41017b:	dec    ebp
  41017c:	cmp    DWORD PTR [eax+0x5b],edi
  41017f:	sti    
  410180:	dec    ebp
  410181:	in     al,dx
  410182:	sbb    BYTE PTR [edi+0x7],ah
  410185:	cld    
  410186:	dec    eax
  410187:	pop    ds
  410188:	xlat   BYTE PTR ds:[ebx]
  410189:	(bad)  
  41018a:	out    dx,al
  41018b:	xchg   DWORD PTR [edx],ebx
  41018d:	pop    edi
  41018e:	mov    al,0x6a
  410190:	dec    esp
  410191:	adc    al,0xac
  410193:	in     eax,0xb4
  410195:	pop    ecx
  410196:	mov    cs,esp
  410198:	jae    0x4101a3
  41019a:	shl    BYTE PTR [ecx-0x3d28b3b3],1
  4101a0:	adc    BYTE PTR [eax],bl
  4101a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4101a3:	xchg   esp,eax
  4101a4:	adc    al,0x4
  4101a6:	cwde   
  4101a7:	repnz mov ebx,0x73d4e04f
  4101ad:	in     al,dx
  4101ae:	and    cl,ch
  4101b0:	jecxz  0x410217
  4101b2:	xor    BYTE PTR [esi],0xf4
  4101b5:	push   es
  4101b6:	mov    BYTE PTR [edx-0x3209daea],0x20
  4101bd:	call   0x795ed0c7
  4101c2:	std    
  4101c3:	fwait
  4101c4:	xlat   BYTE PTR ds:[ebx]
  4101c5:	aas    
  4101c6:	lods   al,BYTE PTR ds:[esi]
  4101c7:	add    DWORD PTR [ecx+0x3e],eax
  4101ca:	dec    ebx
  4101cb:	xchg   ebx,eax
  4101cc:	and    al,0x81
  4101ce:	cmc    
  4101cf:	pop    esi
  4101d0:	lahf   
  4101d1:	xchg   ebx,eax
  4101d2:	frstpm(287 only) 
  4101d4:	adc    ch,BYTE PTR [eax-0x15fee7df]
  4101da:	(bad)  
  4101db:	sub    BYTE PTR [esi],al
  4101dd:	push   ebx
  4101de:	mov    esi,0x183713af
  4101e3:	pop    ss
  4101e4:	stos   DWORD PTR es:[edi],eax
  4101e5:	mov    ds:0x3aef347d,eax
  4101ea:	data16 aad 0xcf
  4101ed:	mov    al,0xb6
  4101ef:	je     0x41022d
  4101f1:	test   DWORD PTR [ebx-0x22],edi
  4101f4:	jmp    0x671c:0xf57b4d90
  4101fb:	inc    ecx
  4101fc:	push   ds
  4101fd:	popa   
  4101fe:	fdiv   QWORD PTR [ecx-0x73b22d04]
  410204:	jg     0x41021c
  410206:	inc    eax
  410207:	adc    ebp,DWORD PTR ds:0x1ddbee47
  41020d:	jge    0x41027b
  41020f:	dec    edx
  410210:	(bad)  
  410211:	sbb    esp,DWORD PTR [edi]
  410213:	push   cs
  410214:	ins    BYTE PTR es:[edi],dx
  410215:	in     al,dx
  410216:	leave  
  410217:	repz mov bh,0xdc
  41021a:	xor    BYTE PTR [esi+0x3],cl
  41021d:	mov    ebx,0xe694a58a
  410222:	ins    DWORD PTR es:[edi],dx
  410223:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410224:	xor    ch,bl
  410226:	adc    BYTE PTR [edi+ebp*1],cl
  410229:	ja     0x41029c
  41022b:	jne    0x41028a
  41022d:	stos   DWORD PTR es:[edi],eax
  41022e:	sub    cl,bh
  410230:	stos   BYTE PTR es:[edi],al
  410231:	adc    ebp,DWORD PTR [eax-0x58]
  410234:	daa    
  410235:	nop
  410236:	cmp    al,0x1f
  410238:	int    0xe4
  41023a:	sub    al,ah
  41023c:	test   bh,al
  41023e:	push   ds
  41023f:	popa   
  410240:	xor    ah,dh
  410242:	(bad)  
  410243:	loopne 0x41028f
  410245:	or     al,0x3b
  410247:	sub    al,0x36
  410249:	pop    esi
  41024a:	ficom  DWORD PTR [eax+0x2a2f6240]
  410250:	(bad)  
  410251:	jbe    0x410201
  410253:	ds sub ebp,ebp
  410256:	cmp    eax,0xbf7125a9
  41025b:	and    BYTE PTR ds:[ebp+0x5173d722],bh
  410262:	jne    0x41024b
  410264:	pop    ebp
  410265:	shr    edi,1
  410267:	push   esi
  410268:	fs aad 0x9a
  41026b:	adc    DWORD PTR [edx],esp
  41026d:	xor    cl,BYTE PTR [edi]
  41026f:	aam    0xb5
  410271:	xor    edx,ebx
  410273:	cli    
  410274:	cmp    eax,0x53826e94
  410279:	jbe    0x4102e2
  41027b:	(bad)  [edi-0x719d8140]
  410281:	jae    0x4102b5
  410283:	sahf   
  410284:	mov    dl,0x26
  410286:	dec    esp
  410287:	test   DWORD PTR [ebx-0xb],edx
  41028a:	adc    DWORD PTR [ebx-0x5e648fd7],esi
  410290:	and    bl,BYTE PTR [eax+eiz*8+0x354d0a15]
  410297:	mov    esp,0xcf24b318
  41029c:	cmp    edx,DWORD PTR [edx+0xcc88e57]
  4102a2:	or     BYTE PTR [edx],ah
  4102a4:	vcmpsd xmm3,xmm3,QWORD PTR [edx+0xf],0xf9
  4102aa:	fcom   QWORD PTR [ebp-0x7b]
  4102ad:	ret    
  4102ae:	lea    ecx,[edx-0x49d3f50a]
  4102b4:	fcmovb st,st(6)
  4102b6:	sub    ah,BYTE PTR [ebp+0x56]
  4102b9:	cmp    eax,0xa8292d82
  4102be:	mov    bl,0xdf
  4102c0:	(bad)  
  4102c1:	xchg   edi,eax
  4102c2:	and    eax,0xb582b833
  4102c7:	dec    ebx
  4102c8:	pop    es
  4102c9:	fcomp  DWORD PTR [esi]
  4102cb:	mov    ecx,0x9fe98939
  4102d0:	fwait
  4102d1:	adc    al,0x43
  4102d3:	mov    al,ds:0x819ada96
  4102d8:	hlt    
  4102d9:	je     0x4102ac
  4102db:	add    esp,DWORD PTR [esi-0x78]
  4102de:	call   0x366b89ce
  4102e3:	cmp    al,0xb9
  4102e5:	push   eax
  4102e6:	pushf  
  4102e7:	imul   ecx,DWORD PTR [ebx+0x7e],0xe440565c
  4102ee:	lock push esp
  4102f0:	fidiv  WORD PTR [eax-0x4f33293e]
  4102f6:	pop    esp
  4102f7:	shr    BYTE PTR [edx+0xc],0x20
  4102fb:	aam    0x53
  4102fd:	cmp    eax,0xed73e3b5
  410302:	sub    esp,DWORD PTR [edx+0x5b]
  410305:	push   eax
  410306:	sub    DWORD PTR [edx+0x333e68],edx
  41030c:	imul   ecx,DWORD PTR ds:0x183e6a42,0xffffff84
  410313:	dec    ecx
  410314:	push   0x633239f8
  410319:	jmp    0x66938b42
  41031e:	adc    DWORD PTR [esi+0x57851c8d],ecx
  410324:	inc    ebx
  410325:	add    al,0xd7
  410327:	sub    BYTE PTR [eax],0xbe
  41032a:	pushf  
  41032b:	xchg   ecx,eax
  41032c:	scas   al,BYTE PTR es:[edi]
  41032d:	lahf   
  41032e:	mov    BYTE PTR [edx],dh
  410330:	ret    
  410331:	test   eax,0xbb7a954c
  410336:	adc    al,0x96
  410338:	mov    WORD PTR [ebx-0x71],gs
  41033b:	test   al,0x20
  41033d:	mov    esi,0x5df78ec1
  410342:	fwait
  410343:	add    ecx,DWORD PTR [ebp+0xe]
  410346:	aad    0x5a
  410348:	js     0x41036a
  41034a:	push   esi
  41034b:	xor    al,0x3f
  41034d:	fcmovnbe st,st(6)
  41034f:	clc    
  410350:	and    al,0xdc
  410352:	dec    esi
  410353:	mov    al,0xf7
  410355:	pop    ds
  410356:	push   eax
  410357:	pop    ebx
  410358:	les    edi,FWORD PTR [eax+0x57]
  41035b:	dec    edi
  41035c:	into   
  41035d:	dec    edi
  41035e:	mov    al,0x8e
  410360:	xchg   ecx,eax
  410361:	jp     0x4103ce
  410363:	enter  0x9378,0x5b
  410367:	push   cs
  410368:	clc    
  410369:	sbb    edx,esi
  41036b:	bsf    esp,DWORD PTR [esi]
  41036e:	arpl   WORD PTR [edx-0x6c6ead8d],bx
  410374:	cmp    ebx,DWORD PTR [ebp+0x68f97fc3]
  41037a:	jae    0x410302
  41037c:	mov    DWORD PTR [esi],0x3a30a478
  410382:	retf   
  410383:	daa    
  410384:	inc    eax
  410385:	mov    bh,0xf7
  410387:	xchg   ebp,eax
  410388:	sti    
  410389:	cmp    eax,0x4a51b6c7
  41038e:	ror    DWORD PTR [edx],1
  410390:	push   esp
  410391:	loopne 0x41032a
  410393:	or     eax,0xc2b8c4aa
  410398:	int    0x24
  41039a:	rcr    BYTE PTR [eax],1
  41039c:	div    BYTE PTR [esi+edi*2-0x65]
  4103a0:	test   BYTE PTR [eax-0x3617ba2e],bh
  4103a6:	enter  0x4621,0x5f
  4103aa:	pop    ebp
  4103ab:	add    esp,esi
  4103ad:	mov    al,0xbb
  4103af:	xor    al,0x72
  4103b1:	jnp    0x4103ab
  4103b3:	fimul  DWORD PTR [ebp+edx*8-0x7f]
  4103b7:	imul   edx,esp,0x23
  4103ba:	jmp    0x76d4:0x845597c4
  4103c1:	mov    esp,0x490f784c
  4103c6:	out    0x95,al
  4103c8:	or     DWORD PTR [esi],esp
  4103ca:	mov    esi,0x39356b7b
  4103cf:	fwait
  4103d0:	inc    ebp
  4103d1:	push   ecx
  4103d3:	call   FWORD PTR [ebp-0x56]
  4103d6:	mov    dl,0xd8
  4103d8:	add    BYTE PTR [ecx+0x3],cl
  4103db:	scas   eax,DWORD PTR es:[edi]
  4103dc:	jle    0x4103f0
  4103de:	test   eax,0xa94c48bc
  4103e3:	xchg   ebp,esp
  4103e5:	pop    ebx
  4103e6:	leave  
  4103e7:	das    
  4103e8:	hlt    
  4103e9:	cwde   
  4103ea:	fimul  DWORD PTR [ebx-0x59]
  4103ed:	out    0xd3,al
  4103ef:	xchg   ecx,eax
  4103f0:	inc    ebp
  4103f1:	adc    al,0x58
  4103f3:	cs xchg edx,eax
  4103f5:	das    
  4103f6:	test   DWORD PTR [esi+0x4853470b],esp
  4103fc:	or     DWORD PTR [esi-0x62],esp
  4103ff:	inc    edx
  410400:	and    al,0x2c
  410402:	xor    esp,edx
  410404:	or     ebp,esp
  410406:	in     eax,dx
  410407:	sub    cl,ch
  410409:	add    ch,BYTE PTR [esi+0x3586f4c2]
  41040f:	call   0x19a8877c
  410414:	cwde   
  410415:	pop    ebp
  410416:	mov    al,0xba
  410418:	xor    ah,BYTE PTR [ebp+0x31]
  41041b:	cmp    BYTE PTR [edi-0x3b],bl
  41041e:	or     eax,0x5e158f36
  410423:	outs   dx,DWORD PTR ds:[esi]
  410424:	inc    ebp
  410425:	in     al,0xbc
  410427:	cmp    edi,DWORD PTR [edi+0x2c]
  41042a:	inc    ebx
  41042b:	push   esp
  41042c:	dec    ecx
  41042d:	int    0xc4
  41042f:	adc    BYTE PTR [esi],al
  410431:	lods   eax,DWORD PTR fs:[esi]
  410433:	mov    eax,0xd82f0b42
  410438:	jbe    0x4103c3
  41043a:	pop    ecx
  41043b:	mov    ds:0xc5860357,al
  410440:	mov    ?,ebp
  410442:	sub    cl,BYTE PTR [edi]
  410444:	sub    BYTE PTR [esi],bl
  410446:	jbe    0x41046f
  410448:	fwait
  410449:	pop    ecx
  41044a:	add    al,0x83
  41044c:	aaa    
  41044d:	(bad)  
  41044e:	sti    
  41044f:	fiadd  WORD PTR [esi+eax*2+0x3a8a662c]
  410456:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410457:	fldenv [ebx]
  410459:	imul   esi,DWORD PTR [ebx+0x78],0x1fb1ec9a
  410460:	aaa    
  410461:	ins    DWORD PTR es:[edi],dx
  410462:	adc    al,0x20
  410464:	dec    esi
  410465:	mov    ds:0xd10938e2,al
  41046a:	adc    al,0x91
  41046c:	lods   al,BYTE PTR ds:[esi]
  41046d:	test   DWORD PTR [ebx+0x41],ecx
  410470:	push   edi
  410471:	xor    dl,BYTE PTR [esi]
  410473:	jo     0x4104d0
  410475:	lds    ebp,FWORD PTR [esi]
  410477:	push   ss
  410478:	and    eax,0xc38519bc
  41047d:	adc    ah,ch
  41047f:	int    0x50
  410481:	mov    ch,0x57
  410483:	mov    ds:0x470cd32b,al
  410488:	pop    ecx
  410489:	lahf   
  41048a:	dec    edx
  41048b:	dec    esi
  41048c:	xor    eax,0x47efcee3
  410491:	stos   BYTE PTR es:[edi],al
  410492:	scas   eax,DWORD PTR es:[edi]
  410493:	ins    DWORD PTR es:[edi],dx
  410494:	dec    edx
  410495:	(bad)  
  410496:	in     eax,dx
  410497:	mov    eax,ds:0x13fe4c9d
  41049c:	mov    ds:0xf2b2520d,al
  4104a1:	fs jle 0x4104fb
  4104a4:	mov    dl,0xa3
  4104a6:	push   ecx
  4104a7:	or     DWORD PTR [edi+0x4c],edx
  4104aa:	lock dec esp
  4104ac:	icebp  
  4104ad:	cld    
  4104ae:	inc    esi
  4104af:	ins    BYTE PTR es:[edi],dx
  4104b0:	mov    ecx,0x7370329a
  4104b5:	jp     0x410517
  4104b7:	retf   
  4104b8:	mov    al,ds:0x558e807f
  4104bd:	lea    esi,[eax+0x131c94d0]
  4104c3:	retf   0xa3eb
  4104c6:	or     BYTE PTR [edx-0x57],bh
  4104c9:	add    eax,0xd1e7d6a7
  4104ce:	shl    BYTE PTR [esi+0x22332534],1
  4104d4:	jmp    0x410491
  4104d6:	xchg   esp,eax
  4104d7:	test   al,0x42
  4104d9:	aaa    
  4104da:	mov    DWORD PTR [edi],0x90b1991f
  4104e0:	int3   
  4104e1:	shr    eax,1
  4104e3:	pop    esp
  4104e4:	jbe    0x410531
  4104e6:	out    0xb,al
  4104e8:	pop    ebp
  4104e9:	xor    BYTE PTR [edi],al
  4104eb:	and    al,0xf7
  4104ed:	(bad)  
  4104ee:	outs   dx,BYTE PTR ds:[esi]
  4104ef:	cmp    al,BYTE PTR [edi-0x57]
  4104f2:	push   edx
  4104f3:	push   ss
  4104f4:	test   BYTE PTR [eax-0x6c],bh
  4104f7:	ror    ch,0x4f
  4104fa:	jnp    0x410534
  4104fc:	xchg   edx,eax
  4104fd:	xchg   DWORD PTR [ecx-0x6d20e5eb],eax
  410503:	xchg   ebp,edx
  410505:	dec    esp
  410506:	div    DWORD PTR [eax]
  410508:	mov    eax,0x3025dab5
  41050d:	stos   DWORD PTR es:[edi],eax
  41050e:	inc    edi
  41050f:	jle    0x41052c
  410511:	aas    
  410512:	int3   
  410513:	mov    esp,0xfe6174ec
  410518:	dec    ebx
  410519:	aad    0x7f
  41051b:	pop    ecx
  41051c:	test   BYTE PTR [edi+0x76fa5f04],ah
  410522:	push   ebx
  410523:	imul   esi,DWORD PTR [ebx-0x294289e1],0xfffd6e45
  41052d:	dec    ecx
  41052e:	mov    ah,0x49
  410530:	mov    bl,0x55
  410532:	push   eax
  410533:	retf   
  410534:	push   es
  410535:	mov    al,0x1b
  410537:	pop    esp
  410538:	cwde   
  410539:	sbb    DWORD PTR ds:0xfb49f99c,ebp
  41053f:	call   0x8b60:0x6d431e93
  410546:	and    al,BYTE PTR [edi]
  410548:	pop    es
  410549:	test   eax,0xb0f8c3f0
  41054e:	or     BYTE PTR [ebx+0x5],bl
  410551:	and    DWORD PTR [esi-0x5f7b016e],esi
  410557:	and    dl,ch
  410559:	push   esi
  41055a:	push   ebp
  41055b:	cmp    eax,0x731845ea
  410560:	ret    
  410561:	imul   BYTE PTR [ebx+0x26]
  410564:	and    edi,ebx
  410566:	out    0x13,eax
  410568:	jp     0x41052f
  41056a:	imul   edx,DWORD PTR [ebp+0x157f310e],0x6e
  410571:	div    DWORD PTR [eax-0x6ba4df11]
  410577:	and    ah,BYTE PTR [eax+0x5c76508e]
  41057d:	ret    
  41057e:	scas   eax,DWORD PTR es:[edi]
  41057f:	xchg   edi,eax
  410580:	add    DWORD PTR [eax-0x63],eax
  410583:	jmp    0x9f28c65
  410588:	int3   
  410589:	stos   DWORD PTR es:[edi],eax
  41058a:	pop    ds
  41058b:	repnz pop ebp
  41058d:	cmp    ah,BYTE PTR [ebx+0x5f607e7f]
  410593:	inc    edi
  410594:	xchg   esi,eax
  410595:	xchg   ecx,eax
  410596:	and    eax,0x9c62f60b
  41059b:	mov    dh,0xef
  41059d:	(bad)  
  41059e:	cmc    
  41059f:	pop    edi
  4105a0:	lea    edi,[ecx]
  4105a2:	(bad)  
  4105a3:	cmp    al,0xeb
  4105a5:	mov    al,0x5c
  4105a7:	fcom   QWORD PTR [ebp-0x49]
  4105aa:	test   BYTE PTR [ecx+eax*8-0x3352779f],0xa
  4105b2:	stos   BYTE PTR es:[edi],al
  4105b3:	or     eax,0x44ceb91a
  4105b8:	push   eax
  4105b9:	gs loopne 0x410603
  4105bc:	daa    
  4105bd:	pushf  
  4105be:	jno    0x410631
  4105c0:	daa    
  4105c1:	popf   
  4105c2:	cmp    al,0x76
  4105c4:	xor    BYTE PTR [eax+0x41e9b926],ch
  4105ca:	and    esp,DWORD PTR [edi+0x7d]
  4105cd:	imul   edx,DWORD PTR [edx+esi*1+0x3bf92d26],0xffffff8b
  4105d5:	lea    eax,[eax]
  4105d7:	xchg   ebx,eax
  4105d8:	aam    0xc8
  4105da:	test   DWORD PTR [edx-0x6b987ab8],0x5d089e1a
  4105e4:	jmp    DWORD PTR [ebx]
  4105e6:	adc    al,0x55
  4105e8:	loope  0x4105f8
  4105ea:	jge    0x4105ce
  4105ec:	ss ret 0x6339
  4105f0:	outs   dx,BYTE PTR ds:[esi]
  4105f1:	cld    
  4105f2:	cmp    al,0xb0
  4105f4:	mov    ah,0xa6
  4105f6:	lds    edx,FWORD PTR [ecx+0x6a]
  4105f9:	dec    esp
  4105fa:	push   0xfffffff8
  4105fc:	fwait
  4105fd:	bound  edi,QWORD PTR [edx+0x5a910a73]
  410603:	das    
  410604:	out    0x78,al
  410606:	inc    ecx
  410607:	dec    ebp
  410608:	jmp    0x2ce9ea86
  41060d:	mov    dh,0x26
  41060f:	and    ah,cl
  410611:	sti    
  410612:	mov    ebx,0xca55abe9
  410617:	inc    edx
  410618:	in     al,dx
  410619:	push   es
  41061a:	cdq    
  41061b:	lock xor al,0x5f
  41061e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41061f:	mov    cl,0xab
  410621:	dec    ecx
  410622:	pxor   mm2,QWORD PTR [ebp+0x2584ce6]
  410629:	scas   al,BYTE PTR es:[edi]
  41062a:	arpl   WORD PTR [esi],di
  41062c:	adc    ch,BYTE PTR [edx+0x3f]
  41062f:	pop    edx
  410630:	push   ebx
  410631:	sub    dl,BYTE PTR [ecx+0x399c69bc]
  410637:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410638:	pop    ebp
  410639:	sub    BYTE PTR [ebx-0x77],bh
  41063c:	sub    eax,0xdd0d86b4
  410641:	fadd   DWORD PTR [ecx]
  410643:	push   ebx
  410644:	xchg   edx,eax
  410645:	int    0x51
  410647:	popf   
  410648:	sbb    BYTE PTR [esp+edi*4+0xc8a46b9],ch
  41064f:	mov    ah,0x90
  410651:	shl    DWORD PTR [ecx-0x65],cl
  410654:	or     cl,ch
  410656:	push   esi
  410657:	jbe    0x410676
  410659:	push   cs
  41065a:	arpl   WORD PTR [eax+esi*1+0x4],bx
  41065e:	inc    BYTE PTR [edi-0x64]
  410661:	xchg   edi,eax
  410662:	(bad)  
  410663:	cmp    BYTE PTR [eax+0x53],dh
  410666:	outs   dx,DWORD PTR ds:[esi]
  410667:	inc    edx
  410668:	xchg   esi,eax
  410669:	cmp    BYTE PTR [ebp-0x86c5e68],bh
  41066f:	mov    BYTE PTR [ebp-0x31e880b],al
  410675:	in     al,0x7f
  410677:	jge    0x410643
  410679:	in     al,dx
  41067a:	jp     0x41060d
  41067c:	shr    BYTE PTR [edi],0x87
  41067f:	les    ebp,FWORD PTR [ecx]
  410681:	mov    BYTE PTR [edi-0x1981d08f],ch
  410687:	mov    edi,DWORD PTR [esi+0x1b49a5a9]
  41068d:	icebp  
  41068e:	cli    
  41068f:	repz jp 0x410703
  410692:	jae    0x4106d3
  410694:	mov    edx,0xef2cd478
  410699:	mov    dh,0xec
  41069b:	call   0x7407:0xb783678a
  4106a2:	add    esp,edx
  4106a4:	add    BYTE PTR [edx],dh
  4106a6:	lea    eax,[edx]
  4106a8:	in     eax,0xfe
  4106aa:	mul    DWORD PTR [esi-0x764ed24f]
  4106b0:	push   esi
  4106b1:	inc    ebp
  4106b2:	shl    esp,cl
  4106b4:	adc    ecx,DWORD PTR [eax-0x16]
  4106b7:	inc    edi
  4106b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4106b9:	inc    eax
  4106ba:	cwde   
  4106bb:	iret   
  4106bc:	(bad)  
  4106be:	int3   
  4106bf:	jne    0x410666
  4106c1:	or     eax,0x682df5f3
  4106c6:	jecxz  0x41073f
  4106c8:	shl    ah,cl
  4106ca:	push   ebx
  4106cb:	ins    BYTE PTR es:[edi],dx
  4106cc:	out    dx,eax
  4106cd:	and    bl,bl
  4106cf:	mov    BYTE PTR [edx+0x35],al
  4106d2:	(bad)  
  4106d3:	push   ss
  4106d4:	jbe    0x4106e7
  4106d6:	inc    ebp
  4106d7:	mov    ch,0xf0
  4106d9:	pop    ebx
  4106da:	dec    ebx
  4106db:	dec    esp
  4106dc:	cmc    
  4106dd:	mov    ds:0x2b215557,eax
  4106e2:	push   0xffffffd4
  4106e4:	cwde   
  4106e5:	sbb    al,0x80
  4106e7:	dec    ebp
  4106e8:	xor    al,0xd
  4106ea:	push   esp
  4106eb:	mov    dh,0xb0
  4106ed:	add    eax,0x13ec32bc
  4106f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4106f3:	or     eax,0x585f3c1
  4106f8:	or     ch,BYTE PTR [ebp-0x1cc63b99]
  4106fe:	ins    BYTE PTR es:[edi],dx
  4106ff:	shl    dl,cl
  410701:	sbb    ebp,esi
  410703:	inc    esp
  410704:	and    ecx,DWORD PTR [esi+0x5aad4801]
  41070a:	daa    
  41070b:	xchg   esp,eax
  41070c:	mov    ds:0x82db3fca,al
  410711:	and    BYTE PTR [esp+edi*1+0x48],ch
  410715:	cmp    eax,eax
  410717:	ja     0x41075d
  410719:	(bad)
  41071c:	mov    ecx,0xd064d8a8
  410721:	or     BYTE PTR [edx],ah
  410723:	in     eax,dx
  410724:	xor    al,0x4f
  410726:	cli    
  410727:	daa    
  410728:	add    al,0x2e
  41072a:	loop   0x4106b1
  41072c:	jge    0x41071b
  41072e:	cld    
  41072f:	pop    es
  410730:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410731:	scas   al,BYTE PTR es:[edi]
  410732:	daa    
  410733:	out    0xbe,al
  410735:	xchg   esp,eax
  410736:	fxtract 
  410738:	clc    
  410739:	pushf  
  41073a:	jae    0x41072b
  41073c:	jnp    0x4106cd
  41073e:	fmul   st,st(5)
  410740:	xchg   BYTE PTR [ebp+0x64bdf2a3],ah
  410746:	sub    al,ah
  410748:	test   DWORD PTR cs:[edx-0x744d9e5c],ecx
  41074f:	adc    eax,DWORD PTR [edx]
  410751:	or     ecx,DWORD PTR [edx-0x572ef7f9]
  410757:	push   cs
  410758:	inc    esi
  410759:	das    
  41075a:	adc    bh,al
  41075c:	addr16 mov al,ds:0x5555
  410760:	sti    
  410761:	or     DWORD PTR [ecx-0x79],esi
  410764:	prefetchw (bad)
  410765:	or     eax,0xeb8ae1cb
  41076a:	push   edx
  41076b:	xchg   ebp,eax
  41076c:	sbb    dh,bh
  41076e:	dec    ecx
  41076f:	fs inc ebp
  410771:	arpl   sp,dx
  410773:	ficomp WORD PTR [edx-0x12]
  410776:	jns    0x4107dc
  410778:	scas   al,BYTE PTR es:[edi]
  410779:	mov    eax,0xb5ec002c
  41077e:	xor    eax,0x9a1f19dc
  410783:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410784:	rcl    ebx,0x2e
  410787:	mov    ebp,DWORD PTR [edx-0x80]
  41078a:	and    BYTE PTR [ecx+0x69],0x6c
  41078e:	mov    eax,ds:0xd925d4a2
  410793:	sub    eax,0xfb4dfa4c
  410798:	aas    
  410799:	ins    BYTE PTR es:[edi],dx
  41079a:	push   esp
  41079b:	dec    ebp
  41079c:	mov    WORD PTR [eax+eiz*4],fs
  41079f:	outs   dx,BYTE PTR ds:[esi]
  4107a0:	aas    
  4107a1:	push   ecx
  4107a2:	enter  0x531f,0x52
  4107a6:	scas   eax,DWORD PTR es:[edi]
  4107a7:	push   es
  4107a8:	pop    es
  4107a9:	push   es
  4107aa:	pop    es
  4107ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107ac:	jl     0x410732
  4107ae:	dec    edx
  4107af:	adc    al,0x7
  4107b1:	jne    0x4107ad
  4107b3:	int3   
  4107b4:	outs   dx,DWORD PTR ds:[esi]
  4107b5:	fild   WORD PTR es:[ebx-0x57]
  4107b9:	out    dx,al
  4107ba:	sub    esi,DWORD PTR [edx+0x5e]
  4107bd:	popa   
  4107be:	add    DWORD PTR [eiz*4+0x263eb304],ecx
  4107c5:	xor    dh,BYTE PTR [edi-0x24]
  4107c8:	and    bh,BYTE PTR [ebp+0x79]
  4107cb:	cmp    BYTE PTR [edx-0x4235f135],dh
  4107d1:	aas    
  4107d2:	test   eax,0x27ed4a31
  4107d7:	(bad)  
  4107d8:	ds jno 0x4107c2
  4107db:	pop    esp
  4107dc:	out    0x20,al
  4107de:	jl     0x4107a1
  4107e0:	xor    eax,0x8867b38f
  4107e5:	jo     0x41076e
  4107e7:	jp     0x410771
  4107e9:	xchg   edx,eax
  4107ea:	push   ss
  4107eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4107ec:	scas   eax,DWORD PTR es:[edi]
  4107ed:	in     eax,0x41
  4107ef:	pop    ebx
  4107f0:	push   es
  4107f1:	push   esp
  4107f2:	in     al,0x76
  4107f4:	cmc    
  4107f5:	jg     0x410876
  4107f7:	xor    edi,esi
  4107f9:	and    edi,ebp
  4107fb:	cmc    
  4107fc:	cwde   
  4107fd:	in     eax,dx
  4107fe:	ds mov esi,0x25e99fa3
  410804:	jno    0x41084e
  410806:	std    
  410807:	scas   al,BYTE PTR es:[edi]
  410808:	out    dx,eax
  410809:	push   ebp
  41080a:	mov    ah,0x76
  41080c:	cdq    
  41080d:	mov    bh,0x44
  41080f:	in     eax,0xcc
  410811:	daa    
  410812:	inc    edi
  410813:	xchg   edi,eax
  410814:	retf   0x9096
  410817:	pushf  
  410818:	pop    ds
  410819:	iret   
  41081a:	xchg   DWORD PTR [edi+0x71d49d52],esi
  410820:	std    
  410821:	cmp    eax,0xc474d347
  410826:	in     eax,0x9d
  410828:	push   0xffffff96
  41082a:	mov    ebx,0x6108fffc
  41082f:	lea    esp,[ebp+ebp*4+0x2d7ff60b]
  410836:	push   ebx
  410837:	mov    ebx,0x38edd652
  41083c:	lds    ebp,FWORD PTR [edx]
  41083e:	pusha  
  41083f:	mov    dl,0x11
  410841:	cmc    
  410842:	pop    edx
  410843:	xor    al,BYTE PTR [eax+0x44]
  410846:	dec    ebp
  410847:	shr    BYTE PTR [edx+0x1627611b],1
  41084d:	push   edx
  41084e:	(bad)  
  41084f:	idiv   DWORD PTR ds:0x2c600eb0
  410855:	xlat   BYTE PTR ds:[ebx]
  410856:	mov    dh,0xbc
  410858:	fimul  DWORD PTR [edi-0x2c3071d0]
  41085e:	cmp    eax,DWORD PTR [esi+0x35a2242f]
  410864:	fld    DWORD PTR [ebx-0x4e5f947c]
  41086a:	mov    ah,0x42
  41086c:	sbb    al,BYTE PTR [ebp+esi*1-0x52c3c788]
  410873:	js     0x410820
  410875:	push   ss
  410876:	cmp    edx,DWORD PTR [esp+ebx*8]
  410879:	call   0xcc3ba997
  41087e:	ds mov eax,0xe8a072a5
  410884:	mov    esi,DWORD PTR [edx]
  410886:	addr16 mov cl,0x73
  410889:	fs or  eax,0x8b2a5e81
  41088f:	pushf  
  410890:	jle    0x410887
  410892:	fwait
  410893:	int3   
  410894:	xor    al,0xad
  410896:	pop    edi
  410897:	pusha  
  410898:	mov    eax,0x634932c0
  41089d:	retf   
  41089e:	add    DWORD PTR [edi],edx
  4108a0:	cmp    eax,0x44f8c278
  4108a5:	mov    ah,BYTE PTR [edx+0x7741d3d]
  4108ab:	add    BYTE PTR [edi-0x66217cdd],dl
  4108b1:	outs   dx,DWORD PTR ds:[esi]
  4108b2:	push   0xffffffb7
  4108b4:	pop    ds
  4108b5:	mov    al,0xf5
  4108b7:	mov    dl,0x54
  4108b9:	mov    eax,ds:0x768d8748
  4108be:	in     eax,dx
  4108bf:	jp     0x41092e
  4108c1:	adc    al,BYTE PTR [ebp-0x4e]
  4108c4:	cs sti 
  4108c6:	cmp    dh,BYTE PTR [ebp-0x64b16dc0]
  4108cc:	sub    bl,BYTE PTR [edx+eiz*8-0x63]
  4108d0:	out    dx,al
  4108d1:	and    DWORD PTR [eax+0x370648a5],ecx
  4108d7:	adc    eax,0x7824758
  4108dc:	xor    ch,dl
  4108de:	inc    ecx
  4108df:	adc    esi,ecx
  4108e1:	(bad)  
  4108e2:	mov    eax,ds:0xe67c0649
  4108e7:	push   edx
  4108e8:	jmp    0x4108ad
  4108ea:	jb     0x41092c
  4108ec:	and    ebp,DWORD PTR [ebx+ecx*4-0x45]
  4108f0:	pop    edi
  4108f1:	push   es
  4108f2:	sbb    DWORD PTR [edi-0x10],esi
  4108f5:	test   BYTE PTR fs:[eax-0x4f],ch
  4108f9:	sub    dh,BYTE PTR [esi]
  4108fb:	mov    eax,eax
  4108fd:	loop   0x41092d
  4108ff:	retf   0x39a
  410902:	fcom   QWORD PTR [edi+0x0]
  410905:	mov    eax,0xd225467b
  41090a:	cmp    BYTE PTR [ebp-0x2a],al
  41090d:	rcr    ecx,0xb0
  410910:	or     al,BYTE PTR [esi+0x34e6db51]
  410916:	sbb    eax,0xae631d18
  41091b:	retf   
  41091c:	sbb    ecx,DWORD PTR [edi-0x3776cbae]
  410922:	mov    BYTE PTR ds:0x73d06f0b,ch
  410928:	jmp    0x4108df
  41092a:	jb     0x4108b4
  41092c:	xor    al,BYTE PTR [ebx-0x2ce45ebe]
  410932:	pop    esp
  410933:	je     0x410919
  410935:	stc    
  410936:	cmp    BYTE PTR [esi],0x11
  410939:	xor    DWORD PTR [esi+0x12],eax
  41093c:	lahf   
  41093d:	mov    dh,0x1f
  41093f:	test   BYTE PTR [esi+0x68],al
  410942:	inc    eax
  410943:	and    BYTE PTR [ebp+0x798b6293],0xab
  41094a:	push   es
  41094b:	cmp    ebp,ebp
  41094d:	lock es inc eax
  410950:	adc    al,0xbb
  410952:	jae    0x4108f1
  410954:	pop    es
  410955:	push   ebp
  410956:	dec    ecx
  410957:	mov    ebp,esp
  410959:	fwait
  41095a:	cmp    al,0xed
  41095c:	xchg   BYTE PTR [edi+0x254f78a8],dl
  410962:	push   cs
  410963:	sbb    DWORD PTR [eax+0x2eef92d8],eax
  410969:	gs xchg esi,eax
  41096b:	mov    ebp,0x4d59d22d
  410970:	jo     0x4109e4
  410972:	mov    WORD PTR [eax+0x3014e231],?
  410978:	(bad)  
  410979:	jp     0x4109e9
  41097b:	lock sahf 
  41097d:	xor    ch,ch
  41097f:	int3   
  410980:	sbb    DWORD PTR [eax+0x3c36ca3],ecx
  410986:	mov    al,0xca
  410988:	lods   eax,DWORD PTR ds:[esi]
  410989:	hlt    
  41098a:	add    eax,0x7d504de
  41098f:	out    dx,eax
  410990:	jecxz  0x410939
  410992:	jle    0x410a13
  410994:	jl     0x4109cc
  410996:	ja     0x410947
  410998:	loopne 0x41091a
  41099a:	(bad)  
  41099b:	or     BYTE PTR [esp+ebx*2-0x80],bl
  41099f:	jb     0x410956
  4109a1:	push   es
  4109a2:	and    al,0xf0
  4109a4:	cmp    DWORD PTR [ebx+0x3c],ecx
  4109a7:	js     0x410978
  4109a9:	iret   
  4109aa:	aaa    
  4109ab:	in     eax,dx
  4109ac:	mov    esp,0x1ec37d76
  4109b1:	mov    ebx,ds
  4109b3:	aas    
  4109b4:	pop    edx
  4109b5:	fnstcw WORD PTR [edi-0x7d]
  4109b8:	adc    eax,0x6aece9f2
  4109bd:	inc    edi
  4109be:	push   es
  4109bf:	cmp    al,0xc8
  4109c1:	inc    ebx
  4109c2:	sti    
  4109c3:	lea    eax,[eax]
  4109c5:	je     0x410a3a
  4109c7:	stc    
  4109c8:	inc    ecx
  4109c9:	leave  
  4109ca:	lea    eax,[ebp+0x1293503]
  4109d0:	adc    eax,0xf2f39e36
  4109d5:	adc    ecx,DWORD PTR [edx]
  4109d7:	mov    al,0x5d
  4109d9:	dec    edi
  4109da:	mov    BYTE PTR [ebx+0x4],al
  4109dd:	lods   eax,DWORD PTR ds:[esi]
  4109de:	or     DWORD PTR [edx-0x24],esi
  4109e1:	dec    eax
  4109e2:	repnz and eax,0xb3109ec1
  4109e8:	mov    BYTE PTR [ebx-0x3aba7c2c],ah
  4109ee:	jecxz  0x410a2c
  4109f0:	iret   
  4109f1:	pop    ds
  4109f2:	cdq    
  4109f3:	pop    es
  4109f4:	jg     0x4109e6
  4109f6:	test   DWORD PTR [eax+0x5f],0x806761c6
  4109fd:	scas   al,BYTE PTR es:[edi]
  4109fe:	add    DWORD PTR [edi+edx*4+0x6b4ef7f9],ecx
  410a05:	jg     0x4109d2
  410a07:	mov    ch,0x2e
  410a09:	pop    ecx
  410a0a:	inc    esi
  410a0b:	pop    ss
  410a0c:	jmp    0x410a6b
  410a0e:	push   ds
  410a0f:	fdiv   st(5),st
  410a11:	sub    al,0x81
  410a13:	mov    BYTE PTR [eax+eiz*4-0x2bd87190],bl
  410a1a:	jle    0x4109c6
  410a1c:	jns    0x410a27
  410a1e:	push   ds
  410a1f:	push   ecx
  410a20:	les    esp,FWORD PTR [edi]
  410a22:	or     BYTE PTR [ecx-0x12b79ee1],0xd5
  410a29:	scas   al,BYTE PTR es:[edi]
  410a2a:	sahf   
  410a2b:	ins    BYTE PTR es:[edi],dx
  410a2c:	bound  esi,QWORD PTR [esi+0x1e9173d3]
  410a32:	sbb    edx,DWORD PTR [eax+0x42558620]
  410a38:	es daa 
  410a3a:	mov    BYTE PTR [edi],bh
  410a3c:	inc    eax
  410a3d:	loop   0x410a72
  410a3f:	int3   
  410a40:	inc    ebp
  410a41:	and    bl,BYTE PTR [esi]
  410a43:	cld    
  410a44:	and    edi,DWORD PTR [ebx+0x34]
  410a47:	sub    al,0x6c
  410a49:	stos   BYTE PTR es:[edi],al
  410a4a:	les    ebp,FWORD PTR [eax-0x11]
  410a4d:	mov    cl,0x95
  410a4f:	imul   esi,esp,0x7a
  410a52:	pop    esi
  410a53:	loopne 0x410a35
  410a55:	jns    0x4109db
  410a57:	lods   eax,DWORD PTR ds:[esi]
  410a58:	pop    ss
  410a59:	jmp    0x4109f2
  410a5b:	out    dx,al
  410a5c:	add    BYTE PTR ss:[edx-0x5e5d269b],cl
  410a63:	xchg   cl,bl
  410a65:	int3   
  410a66:	test   DWORD PTR [eax],esi
  410a68:	push   ss
  410a69:	test   eax,0x36ff9e42
  410a6e:	cs cmp al,0x9a
  410a71:	fist   WORD PTR [ebp-0x3a9679f5]
  410a77:	pop    ebp
  410a78:	and    dl,0x6b
  410a7b:	pop    esp
  410a7c:	push   esp
  410a7d:	fs addr16 push eax
  410a80:	int3   
  410a81:	ja     0x410a12
  410a83:	into   
  410a84:	not    BYTE PTR ds:0xa52185c0
  410a8a:	cmp    edi,DWORD PTR [esi+0x53]
  410a8d:	aam    0x47
  410a8f:	test   ecx,ebp
  410a91:	add    ah,BYTE PTR [ecx+0x4d]
  410a94:	hlt    
  410a95:	out    0x9a,al
  410a97:	mov    esp,0xdccbb11a
  410a9c:	pop    edi
  410a9d:	jmp    0x8290:0x47450193
  410aa4:	(bad)  
  410aa6:	push   ebx
  410aa7:	sbb    eax,0xd68158ad
  410aac:	jge    0x410ac9
  410aae:	inc    edx
  410aaf:	int    0x12
  410ab1:	xlat   BYTE PTR ds:[ebx]
  410ab2:	xor    eax,0xbcedc840
  410ab7:	shl    DWORD PTR [ebx],cl
  410ab9:	and    al,0x2e
  410abb:	xor    BYTE PTR [ecx+0xa],0xd0
  410abf:	addr16 ffreep st(0)
  410ac2:	and    eax,0x7a6648a6
  410ac7:	lods   eax,DWORD PTR ds:[esi]
  410ac8:	xchg   ecx,eax
  410ac9:	inc    esp
  410aca:	std    
  410acb:	mov    al,0xb7
  410acd:	enter  0xf688,0xf
  410ad1:	jl     0x410a6b
  410ad3:	ja     0x410a61
  410ad5:	xor    eax,0xb868a25b
  410ada:	mov    esp,0x29ec0dc7
  410adf:	xor    BYTE PTR [esi-0x21],dh
  410ae2:	loopne 0x410b41
  410ae4:	adc    eax,0x1a202727
  410ae9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410aea:	jnp    0x410abb
  410aec:	cdq    
  410aed:	xchg   ebp,eax
  410aee:	lahf   
  410aef:	and    DWORD PTR [esi],0xffffffe1
  410af2:	add    eax,0xa092c701
  410af7:	pop    es
  410af8:	pop    ebp
  410af9:	mov    al,ch
  410afb:	jg     0x410b36
  410afd:	and    cl,BYTE PTR [ebx]
  410aff:	popf   
  410b00:	popf   
  410b01:	cmp    al,0x6f
  410b03:	add    edi,DWORD PTR [ebx]
  410b05:	sub    edx,DWORD PTR [ebp+0xc]
  410b08:	ins    BYTE PTR es:[edi],dx
  410b09:	iret   
  410b0a:	sbb    al,BYTE PTR [edi+ecx*4+0x3f965104]
  410b11:	pop    ebx
  410b12:	outs   dx,BYTE PTR ds:[esi]
  410b13:	add    BYTE PTR [edx+0x58],0x8f
  410b17:	add    al,0x61
  410b19:	cmc    
  410b1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b1b:	mov    ch,bl
  410b1d:	aad    0x1a
  410b1f:	inc    ebx
  410b20:	sbb    esp,esp
  410b22:	arpl   WORD PTR [eax-0x6e6d8707],bp
  410b28:	(bad)  
  410b29:	pushf  
  410b2a:	sub    ah,bh
  410b2c:	pusha  
  410b2d:	or     dh,BYTE PTR [ebp+0x5c30c45e]
  410b33:	mov    ch,0xed
  410b35:	nop
  410b36:	cdq    
  410b37:	ss loope 0x410af8
  410b3a:	jo     0x410bb7
  410b3c:	mov    al,0xd6
  410b3e:	adc    esi,eax
  410b40:	adc    BYTE PTR [eax-0xb9a67dd],ah
  410b46:	mov    edi,edi
  410b48:	xchg   edi,eax
  410b49:	pop    edx
  410b4a:	sub    BYTE PTR [edi+0x7a],cl
  410b4d:	aam    0xa6
  410b4f:	mov    al,ds:0xd72cdd94
  410b54:	jmp    0x215f9436
  410b59:	lods   al,BYTE PTR ds:[esi]
  410b5a:	retf   
  410b5b:	dec    esp
  410b5c:	fsubrp st(5),st
  410b5e:	or     ah,BYTE PTR [edx]
  410b60:	jl     0x410aeb
  410b62:	mov    edx,0x36450abe
  410b67:	xor    bl,cl
  410b69:	das    
  410b6a:	xchg   BYTE PTR [edx-0x17],ch
  410b6d:	adc    DWORD PTR [edi-0xc],0x867a18c6
  410b74:	cmp    eax,0x6da5b375
  410b79:	pusha  
  410b7a:	jb     0x410b96
  410b7c:	mov    edx,DWORD PTR [esi]
  410b7e:	cmp    DWORD PTR [edi-0x19],edi
  410b81:	cmp    BYTE PTR [ecx+0x5f4d4068],0xd9
  410b88:	ds cdq 
  410b8a:	lods   eax,DWORD PTR ds:[esi]
  410b8b:	int    0xf8
  410b8d:	out    0xbe,eax
  410b8f:	ja     0x410b72
  410b91:	xor    DWORD PTR [edx+0x4bce057f],ebx
  410b97:	mov    ebp,DWORD PTR [eax-0x674e61a5]
  410b9d:	popf   
  410b9e:	inc    esp
  410b9f:	inc    eax
  410ba0:	jno    0x410b78
  410ba2:	lds    ebp,FWORD PTR [ecx-0x53e2dd6d]
  410ba8:	lea    ebp,[eax+eiz*2-0x5476baf7]
  410baf:	scas   eax,DWORD PTR es:[edi]
  410bb0:	mov    dx,0x79a2
  410bb4:	xor    dh,bl
  410bb6:	mov    cl,al
  410bb8:	popa   
  410bb9:	cdq    
  410bba:	outs   dx,DWORD PTR ds:[esi]
  410bbb:	pop    esp
  410bbc:	add    BYTE PTR ds:0xfb760ee6,al
  410bc2:	and    eax,edi
  410bc4:	(bad)  
  410bc5:	mov    es,WORD PTR [eax]
  410bc7:	fnsave ds:0x418a1e1d
  410bcd:	inc    eax
  410bce:	or     ah,BYTE PTR [edx-0x4b629a2c]
  410bd4:	or     DWORD PTR [ebx],ebp
  410bd6:	sar    bh,1
  410bd8:	push   es
  410bd9:	ret    0x2606
  410bdc:	cmp    cl,ah
  410bde:	adc    edi,ebp
  410be0:	pushf  
  410be1:	sub    eax,DWORD PTR [edi+edi*8+0x235a439b]
  410be8:	mov    eax,0xcc9062fd
  410bed:	mov    DWORD PTR [ebx-0x72],ebx
  410bf0:	and    DWORD PTR [ecx-0x6d],edi
  410bf3:	xchg   esp,eax
  410bf4:	aas    
  410bf5:	stos   DWORD PTR es:[edi],eax
  410bf6:	cmp    ecx,DWORD PTR [ecx-0x15]
  410bf9:	ja     0x410c70
  410bfb:	jle    0x410c45
  410bfd:	xor    BYTE PTR [esi+0x5a],0xce
  410c01:	jo     0x410c23
  410c03:	fisttp QWORD PTR [edx]
  410c05:	adc    eax,0xf10883f4
  410c0a:	stos   DWORD PTR es:[edi],eax
  410c0b:	or     DWORD PTR [edi-0x1ae177b0],edx
  410c11:	inc    edx
  410c12:	stos   BYTE PTR es:[edi],al
  410c13:	xchg   esp,eax
  410c14:	adc    BYTE PTR [esp+edi*8],bh
  410c17:	in     eax,0xaf
  410c19:	ins    DWORD PTR es:[edi],dx
  410c1a:	pop    ebp
  410c1b:	stos   DWORD PTR es:[edi],eax
  410c1c:	test   BYTE PTR [edi+ebp*4+0x0],bl
  410c20:	stos   BYTE PTR es:[edi],al
  410c21:	inc    edi
  410c22:	inc    esi
  410c23:	xchg   DWORD PTR [edi+esi*2-0x31],ecx
  410c27:	dec    edi
  410c28:	scas   eax,DWORD PTR es:[edi]
  410c29:	repnz xchg esi,eax
  410c2b:	repz inc esi
  410c2d:	sub    ah,0x2e
  410c30:	cli    
  410c31:	sub    DWORD PTR [ecx-0x61733b6f],ecx
  410c37:	inc    edi
  410c38:	in     eax,0xb6
  410c3a:	dec    edx
  410c3b:	aaa    
  410c3c:	test   al,0x1
  410c3e:	add    ebx,DWORD PTR [ecx+0x15923462]
  410c44:	sti    
  410c45:	retf   
  410c46:	daa    
  410c47:	sub    cl,al
  410c49:	mov    bh,0xcc
  410c4b:	sbb    BYTE PTR [edx+ebp*4-0x5643f9fe],bh
  410c52:	cmp    al,0x1d
  410c54:	jl     0x410c5b
  410c56:	data16 fnstsw WORD PTR [edi]
  410c59:	aam    0xed
  410c5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c5c:	push   esp
  410c5d:	sbb    ebp,DWORD PTR [ebx-0x59]
  410c60:	mov    bl,0x89
  410c62:	jg     0x410bf4
  410c64:	pushf  
  410c65:	cmp    DWORD PTR [eax+0xb4a79f6],ebp
  410c6b:	ins    DWORD PTR es:[edi],dx
  410c6c:	xchg   ebx,eax
  410c6d:	data16 fisttp QWORD PTR [ebx+0x5f]
  410c71:	push   cs
  410c72:	leave  
  410c73:	mov    ds:0x21b59d54,eax
  410c78:	pusha  
  410c79:	in     eax,0xd1
  410c7b:	push   edi
  410c7c:	mov    ch,al
  410c7e:	sar    bl,cl
  410c80:	call   FWORD PTR [ebx]
  410c82:	push   esp
  410c83:	mov    eax,0xda6174d6
  410c88:	dec    ecx
  410c89:	rcr    DWORD PTR [ebx],0x19
  410c8c:	inc    ecx
  410c8d:	jle    0x410c47
  410c8f:	aas    
  410c90:	mov    eax,0xd874c150
  410c95:	ja     0x410c61
  410c97:	mov    ds:0x48e0a696,al
  410c9c:	test   al,0xbc
  410c9e:	push   0x4a41aa44
  410ca3:	ins    BYTE PTR es:[edi],dx
  410ca4:	xor    dl,BYTE PTR [edx+esi*8-0x19bf26f0]
  410cab:	sub    al,BYTE PTR [edi]
  410cad:	cmp    bl,BYTE PTR [ecx+0x5d0c27d6]
  410cb3:	xlat   BYTE PTR ds:[ebx]
  410cb4:	pop    eax
  410cb5:	mov    ah,0x6d
  410cb7:	leave  
  410cb8:	out    dx,eax
  410cb9:	xor    bh,bl
  410cbb:	or     eax,DWORD PTR [eax]
  410cbd:	pop    esi
  410cbe:	pop    ss
  410cbf:	mov    al,ds:0xd41f5efa
  410cc4:	gs cmp eax,0xaec6bdad
  410cca:	cmp    ebx,DWORD PTR [eax-0x67]
  410ccd:	push   ebp
  410cce:	push   esp
  410ccf:	sbb    dl,BYTE PTR [edx+eax*1]
  410cd2:	stos   BYTE PTR es:[edi],al
  410cd3:	popa   
  410cd4:	adc    dh,BYTE PTR [ebp*4+0x1404aa92]
  410cdb:	adc    esp,ebx
  410cdd:	aaa    
  410cde:	xchg   ebx,eax
  410cdf:	pop    ecx
  410ce0:	sti    
  410ce1:	pusha  
  410ce2:	or     eax,0x181d669d
  410ce7:	not    ah
  410ce9:	pop    edx
  410cea:	ret    0x1f06
  410ced:	lea    eax,[ecx]
  410cef:	xchg   DWORD PTR [esp+esi*8],esp
  410cf2:	sbb    dh,BYTE PTR ds:0x50e80819
  410cf8:	(bad)  
  410cf9:	aaa    
  410cfa:	pop    edi
  410cfb:	dec    esi
  410cfc:	aad    0x42
  410cfe:	xchg   edi,eax
  410cff:	xchg   ecx,eax
  410d00:	sahf   
  410d01:	inc    ebp
  410d02:	sbb    DWORD PTR [edx-0x466e7016],edi
  410d08:	pop    esp
  410d09:	adc    DWORD PTR [eax+ecx*2-0x1f],edx
  410d0d:	pusha  
  410d0e:	mov    bl,0xd0
  410d10:	retf   0x8ec0
  410d13:	fidiv  WORD PTR [ebp+0x63]
  410d16:	scas   al,BYTE PTR es:[edi]
  410d17:	adc    edi,edx
  410d19:	jge    0x410d67
  410d1b:	adc    eax,0xe61fe226
  410d20:	rol    bl,1
  410d22:	inc    esi
  410d23:	fst    QWORD PTR [ebx+ebp*1]
  410d26:	mov    esp,DWORD PTR [esi+0x7536aab2]
  410d2c:	push   esi
  410d2d:	jecxz  0x410d86
  410d2f:	and    bh,BYTE PTR [edx+ebp*4+0x70]
  410d33:	popa   
  410d34:	or     al,0xf9
  410d36:	mov    ch,0x8a
  410d38:	jl     0x410d35
  410d3a:	jbe    0x410ce2
  410d3c:	data16 jl 0x410ce0
  410d3f:	push   0x239f1903
  410d44:	or     al,0xf8
  410d46:	dec    ecx
  410d47:	outs   dx,DWORD PTR ds:[esi]
  410d48:	stos   BYTE PTR es:[edi],al
  410d49:	data16 mov al,0x4e
  410d4c:	jb     0x410d3b
  410d4e:	pop    ecx
  410d4f:	mov    al,0x18
  410d51:	mov    ebp,0x8de182eb
  410d56:	std    
  410d57:	xchg   edi,eax
  410d58:	imul   esp,DWORD PTR [ecx+0x75],0xbd2eb960
  410d5f:	pusha  
  410d60:	jne    0x410cf2
  410d62:	dec    edx
  410d63:	test   al,0x6d
  410d65:	iret   
  410d66:	loope  0x410d3f
  410d68:	mov    edx,0x83555a60
  410d6d:	pop    ecx
  410d6e:	sbb    al,0x7
  410d70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d71:	sahf   
  410d72:	push   edi
  410d73:	jns    0x410d13
  410d75:	je     0x410d6f
  410d77:	out    0x6f,eax
  410d79:	mov    ecx,0xbfdd8c59
  410d7e:	sbb    bh,cl
  410d80:	mov    es,esi
  410d82:	push   ebp
  410d83:	(bad)  
  410d84:	in     eax,0xa8
  410d86:	jno    0x410d71
  410d88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d89:	(bad)  
  410d8a:	adc    DWORD PTR [eax-0x7cb2e653],ecx
  410d90:	loope  0x410d96
  410d92:	call   0xad69:0x8cc6010f
  410d99:	xchg   esi,eax
  410d9a:	inc    eax
  410d9b:	inc    esp
  410d9c:	lock xchg ecx,eax
  410d9e:	(bad)  
  410d9f:	pop    ebx
  410da0:	retf   0x664f
  410da3:	xchg   esi,eax
  410da4:	mov    edi,0x6f7c00c3
  410da9:	jns    0x410dd3
  410dab:	adc    DWORD PTR [edx+0x23afb49e],ebx
  410db1:	(bad)  
  410db2:	fistp  DWORD PTR [edx+esi*4+0x6]
  410db6:	push   ebx
  410db7:	(bad)  
  410db9:	dec    eax
  410dba:	add    al,0x66
  410dbc:	aaa    
  410dbd:	aad    0x7
  410dbf:	out    0x3a,eax
  410dc1:	jb     0x410dde
  410dc3:	sbb    eax,0xf6ad73f2
  410dc8:	test   eax,0x19ea9ec7
  410dcd:	jge    0x410d8d
  410dcf:	dec    al
  410dd1:	and    cl,BYTE PTR [edx-0x62f17bcb]
  410dd7:	retf   
  410dd8:	cmp    al,0xfc
  410dda:	or     edx,DWORD PTR [ebp+0xef0383c]
  410de0:	jnp    0x410dad
  410de2:	dec    edx
  410de3:	fadd   DWORD PTR [eax+ecx*8-0x6f]
  410de7:	clc    
  410de8:	int3   
  410de9:	or     eax,0xd285147a
  410dee:	push   ss
  410def:	add    ebx,DWORD PTR [ecx+esi*4+0x43]
  410df3:	sub    esi,0xc9603ef9
  410df9:	mov    eax,0x3f7ec51f
  410dfe:	in     eax,0x5a
  410e00:	fild   QWORD PTR [edx+0x72be9cfd]
  410e06:	sub    ah,BYTE PTR [ecx+0x9827b2f]
  410e0c:	test   al,0x60
  410e0e:	mov    bl,0x13
  410e10:	adc    BYTE PTR [ebx],al
  410e12:	test   al,0xbc
  410e14:	sbb    eax,0x3283ce88
  410e19:	dec    esi
  410e1a:	loop   0x410ddd
  410e1c:	xor    edi,ebp
  410e1e:	inc    edi
  410e1f:	add    esp,DWORD PTR [edx-0x65ee3d56]
  410e25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e26:	xchg   edi,eax
  410e27:	xor    al,BYTE PTR [esp+eiz*2-0x4e]
  410e2b:	mov    WORD PTR [ebx+edi*2],ds
  410e2e:	dec    esi
  410e2f:	dec    eax
  410e30:	jae    0x410e5f
  410e32:	loope  0x410e66
  410e34:	leave  
  410e35:	or     esp,DWORD PTR cs:[edi-0xefe255a]
  410e3c:	mov    ebx,0xd77128f6
  410e41:	pop    esp
  410e42:	xchg   edx,eax
  410e43:	call   0xff8d:0xbdb0f4b7
  410e4a:	add    BYTE PTR [esi-0x39a7ec5a],bl
  410e50:	imul   DWORD PTR [ebx+0x7ca388c5]
  410e56:	xchg   BYTE PTR [edi+esi*4-0x2e],dh
  410e5a:	sbb    edi,ecx
  410e5c:	mov    WORD PTR [ecx-0x7cb5c256],?
  410e62:	xchg   BYTE PTR [ebx+0x629d8c0e],bh
  410e68:	int3   
  410e69:	adc    dh,ah
  410e6b:	push   ds
  410e6c:	or     eax,0x4f9ce027
  410e71:	xchg   edi,eax
  410e72:	push   ebp
  410e73:	mov    esi,eax
  410e75:	int3   
  410e76:	stos   DWORD PTR es:[edi],eax
  410e77:	dec    edx
  410e78:	inc    edx
  410e79:	(bad)  
  410e7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e7b:	inc    ebp
  410e7c:	jno    0x410e36
  410e7e:	in     eax,dx
  410e7f:	jno    0x410ebf
  410e81:	jmp    0x410e98
  410e83:	aaa    
  410e84:	scas   eax,DWORD PTR es:[edi]
  410e85:	sbb    ebp,ecx
  410e87:	jg     0x410ea1
  410e89:	push   ebx
  410e8a:	or     DWORD PTR [ecx-0x22],0x6c
  410e8e:	jl     0x410e66
  410e90:	mov    esp,ebp
  410e92:	mov    al,dl
  410e94:	nop
  410e95:	or     eax,0xfd48fce
  410e9a:	fsub   QWORD PTR [edx+0x15]
  410e9d:	dec    eax
  410e9e:	cmc    
  410e9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ea0:	(bad)  
  410ea1:	retf   
  410ea2:	or     DWORD PTR [ebp+0x419f659],edi
  410ea8:	jmp    DWORD PTR [ebp+eiz*1+0x7241d171]
  410eaf:	imul   ebx,DWORD PTR [eax+eiz*8-0x7a],0xffffffc0
  410eb4:	test   WORD PTR [ecx+0x1b],ax
  410eb8:	dec    esp
  410eb9:	fs pop edx
  410ebb:	pop    esp
  410ebc:	ror    DWORD PTR [ebx+0x24c5b1e1],cl
  410ec2:	retf   0x7a5d
  410ec5:	xor    ebp,DWORD PTR [edx-0x3e]
  410ec8:	cwde   
  410ec9:	mov    dh,0x5
  410ecb:	cld    
  410ecc:	jecxz  0x410e51
  410ece:	loop   0x410ef6
  410ed0:	repz hlt 
  410ed2:	jo     0x410ece
  410ed4:	enter  0x5684,0x46
  410ed8:	xchg   DWORD PTR [ebx+0x5f],ebx
  410edb:	mov    cl,0x5f
  410edd:	push   edx
  410ede:	out    dx,eax
  410edf:	sbb    BYTE PTR [ebx],0x6a
  410ee2:	add    eax,0x7817093c
  410ee7:	repz sub BYTE PTR [esi+0x49176d39],al
  410eee:	pop    ecx
  410eef:	cwde   
  410ef0:	mov    ebx,0xed05ce4a
  410ef5:	pop    esi
  410ef6:	bnd ret 
  410ef8:	push   esp
  410ef9:	dec    ebx
  410efa:	pop    esp
  410efb:	jecxz  0x410ecc
  410efd:	or     edi,0x968a6655
  410f03:	push   ebx
  410f04:	sub    al,0x46
  410f06:	add    eax,0x496bc033
  410f0b:	(bad)  
  410f0c:	mov    al,ds:0x42f3a899
  410f11:	fcom   DWORD PTR [ecx+0x4290aacd]
  410f17:	bound  ebx,QWORD PTR [edx+0x6cd7912b]
  410f1d:	test   eax,0x53c2ed1f
  410f22:	or     bl,al
  410f24:	and    al,0x12
  410f26:	fwait
  410f27:	imul   DWORD PTR [ebx+0x18d03f3]
  410f2d:	cmc    
  410f2e:	lock dec edi
  410f30:	enter  0x1f98,0xa6
  410f34:	fst    DWORD PTR [edx-0x5024984f]
  410f3a:	xchg   ecx,eax
  410f3b:	pushf  
  410f3c:	std    
  410f3d:	pop    edi
  410f3e:	pop    ds
  410f3f:	js     0x410f7d
  410f41:	xchg   edi,eax
  410f42:	adc    DWORD PTR [ebx-0x6fa0fad6],edx
  410f48:	out    dx,eax
  410f49:	xor    ebx,eax
  410f4b:	inc    esi
  410f4c:	mov    esi,DWORD PTR [ebx-0x6c]
  410f4f:	pushf  
  410f50:	push   ebp
  410f51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f52:	sbb    eax,0xd14f32c9
  410f57:	call   0xf0c50ee3
  410f5c:	leave  
  410f5d:	push   esi
  410f5e:	jo     0x410f34
  410f60:	sti    
  410f61:	aad    0x4
  410f63:	mov    edx,0x236f498d
  410f68:	mov    dh,cl
  410f6a:	sub    DWORD PTR [edx-0x37],ecx
  410f6d:	mov    ch,0x56
  410f6f:	shr    DWORD PTR [edx-0x6da35b06],1
  410f75:	dec    ebp
  410f76:	mov    bl,0x84
  410f78:	jge    0x410f51
  410f7a:	das    
  410f7b:	out    dx,al
  410f7c:	fldenv [ecx]
  410f7e:	cwde   
  410f7f:	ss pop di
  410f82:	push   ebx
  410f83:	ins    BYTE PTR es:[edi],dx
  410f84:	and    al,0x67
  410f86:	mov    ah,BYTE PTR [ecx+0x7d]
  410f89:	mov    ds:0xb669d8d1,al
  410f8e:	cmp    edx,DWORD PTR [edx+0x30dc58b6]
  410f94:	inc    edi
  410f95:	adc    ax,0x1ef6
  410f99:	add    al,0x9
  410f9b:	test   BYTE PTR [edi],ah
  410f9d:	and    BYTE PTR [edx],bl
  410f9f:	add    eax,edx
  410fa1:	adc    eax,0xa28ca02a
  410fa6:	aad    0x1e
  410fa8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410fa9:	mov    bl,0x8a
  410fab:	sub    eax,DWORD PTR [esp+edx*2]
  410fae:	and    eax,0xae6a33d7
  410fb3:	jp     0x411032
  410fb5:	mov    edx,0xfc1b9110
  410fba:	pop    edx
  410fbb:	shl    DWORD PTR [ebx-0x67],1
  410fbe:	pop    eax
  410fbf:	call   0xc37e6c35
  410fc4:	push   cs
  410fc5:	inc    eax
  410fc6:	loop   0x410fcf
  410fc8:	dec    ebp
  410fc9:	lock sbb BYTE PTR [ecx],bl
  410fcc:	jbe    0x410f74
  410fce:	lds    esp,FWORD PTR ds:0x89d45f79
  410fd4:	scas   al,BYTE PTR es:[edi]
  410fd5:	sub    bh,BYTE PTR ds:0xb3161d3e
  410fdb:	outs   dx,BYTE PTR ds:[esi]
  410fdc:	loope  0x41100d
  410fde:	and    dl,0xab
  410fe1:	jnp    0x410fc2
  410fe3:	lea    edx,[ecx+0x3adb0af2]
  410fe9:	dec    ecx
  410fea:	pop    eax
  410feb:	lahf   
  410fec:	push   ecx
  410fed:	cld    
  410fee:	or     edi,ecx
  410ff0:	test   eax,0xda7431ed
  410ff5:	mov    dl,0xef
  410ff7:	or     dl,BYTE PTR [edi-0x41]
  410ffa:	cmp    eax,0x3a53a12f
  410fff:	dec    edi
  411000:	sbb    eax,0x619d7ee1
  411005:	arpl   WORD PTR [edi+0x21],bp
  411008:	jns    0x410fb6
  41100a:	int3   
  41100b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41100c:	add    eax,0xff39f11f
  411011:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411012:	jns    0x410ff3
  411014:	sbb    al,bh
  411016:	mov    al,0x73
  411018:	fmul   st,st(2)
  41101a:	inc    esp
  41101b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41101c:	out    dx,al
  41101d:	cs loope 0x410fd1
  411020:	xchg   edx,eax
  411021:	jae    0x411043
  411023:	xor    al,0xd3
  411025:	retf   0x76a0
  411028:	pop    eax
  411029:	or     edx,DWORD PTR [edi]
  41102b:	and    eax,0x847d4af5
  411030:	in     eax,dx
  411031:	mov    eax,DWORD PTR [ebx+0x3ffc2ede]
  411037:	imul   ebp,DWORD PTR [ebx+0x16],0xe09c4ce2
  41103e:	adc    eax,0x3bf5a6c0
  411043:	out    dx,al
  411044:	cmp    edi,ebp
  411046:	std    
  411047:	dec    ebx
  411048:	rcl    BYTE PTR [eax+0x25],cl
  41104b:	gs cmp eax,0xa718f34d
  411051:	iret   
  411052:	xchg   esp,eax
  411053:	xchg   esi,eax
  411054:	or     DWORD PTR [eax-0x42a28ae9],esp
  41105a:	xchg   esp,eax
  41105b:	sbb    dl,BYTE PTR ds:0xa4c47e6a
  411061:	xchg   bh,ah
  411063:	mov    WORD PTR [edx-0x25],cs
  411066:	rcl    DWORD PTR es:[eax+0x4a793214],0x66
  41106e:	dec    ecx
  41106f:	loope  0x4110cf
  411071:	inc    ebp
  411072:	or     eax,0x2374a895
  411077:	xchg   ebp,eax
  411078:	xchg   ecx,eax
  411079:	add    DWORD PTR [edi+0x1ef84a8e],ecx
  41107f:	ret    0x3cee
  411082:	call   0xc3e6afb2
  411087:	inc    esi
  411088:	dec    ecx
  411089:	inc    esi
  41108a:	mov    BYTE PTR [ecx-0x22],al
  41108d:	repz loope 0x411071
  411090:	inc    ebx
  411091:	sub    DWORD PTR [ebx+0x747a3915],0xffffffc5
  411098:	sub    DWORD PTR [esi-0x444dd138],ecx
  41109e:	xchg   esp,eax
  41109f:	inc    eax
  4110a0:	xor    DWORD PTR [esi+0xa],edx
  4110a3:	fiadd  WORD PTR [edx]
  4110a5:	and    BYTE PTR [esi+0x60],al
  4110a8:	imul   ebx,esp,0x888cd01f
  4110ae:	bound  edx,QWORD PTR [ecx]
  4110b0:	jle    0x411081
  4110b2:	mov    BYTE PTR [esi-0x296f3b4b],al
  4110b8:	push   0x472bb88
  4110bd:	fwait
  4110be:	pop    ebx
  4110bf:	int3   
  4110c0:	out    dx,al
  4110c1:	fsin   
  4110c3:	or     eax,DWORD PTR [ebx]
  4110c5:	mov    esi,0xbca5407a
  4110ca:	pop    ss
  4110cb:	clc    
  4110cc:	ja     0x4110ae
  4110ce:	out    0x1f,eax
  4110d0:	mov    bl,BYTE PTR [ebp+0x28c6cdbe]
  4110d6:	in     al,0xa1
  4110d8:	sub    ebp,0xffffffed
  4110db:	test   BYTE PTR [ecx],0xd2
  4110de:	adc    dl,BYTE PTR [eax]
  4110e0:	xchg   ecx,eax
  4110e1:	sbb    eax,0x62af5515
  4110e6:	pop    ds
  4110e7:	out    dx,al
  4110e8:	sub    bl,bl
  4110ea:	ds scas eax,DWORD PTR es:[edi]
  4110ec:	stos   BYTE PTR es:[edi],al
  4110ed:	sub    edi,edx
  4110ef:	mov    ebx,0xfaad02df
  4110f4:	pop    edx
  4110f5:	fldcw  WORD PTR [ebx-0x5586caa4]
  4110fb:	add    DWORD PTR [edi],edi
  4110fd:	stc    
  4110fe:	rol    dh,0xeb
  411101:	leave  
  411102:	push   edi
  411103:	pusha  
  411104:	loopne 0x4110ad
  411106:	repnz imul eax,DWORD PTR [esi],0x4ad1bbd9
  41110d:	stos   DWORD PTR es:[edi],eax
  41110e:	mov    esp,0xcb22af
  411113:	mov    bh,0xe9
  411115:	push   0xb01133a7
  41111a:	mov    dh,0xbd
  41111c:	jle    0x41110c
  41111e:	push   0x67f389dc
  411123:	ror    ebx,cl
  411125:	int    0x66
  411127:	xchg   DWORD PTR [eax+0x6dabd005],eax
  41112d:	outs   dx,DWORD PTR ds:[esi]
  41112e:	(bad)
  411131:	jae    0x411157
  411133:	sub    al,0xb3
  411135:	xlat   BYTE PTR ds:[ebx]
  411136:	cs repz retf 0xfa82
  41113b:	push   eax
  41113c:	leave  
  41113d:	pop    eax
  41113e:	fsubr  st,st(6)
  411140:	cs mov ebx,0x603b0e1c
  411146:	test   DWORD PTR [ecx],eax
  411148:	imul   ebx,DWORD PTR [esi],0x91e4df59
  41114e:	jmp    0x4111c3
  411150:	mov    cl,0xf6
  411152:	adc    ebp,ebp
  411154:	and    BYTE PTR [edi-0x9],dh
  411157:	sub    bl,BYTE PTR [edi]
  411159:	cli    
  41115a:	daa    
  41115b:	ins    DWORD PTR es:[edi],dx
  41115c:	sbb    al,0x7c
  41115e:	mov    bl,ch
  411160:	cmp    dh,BYTE PTR [edi+edi*2+0x4c]
  411164:	ficom  DWORD PTR [bx+si]
  411167:	les    edi,FWORD PTR [edx+0x1f]
  41116a:	xchg   DWORD PTR [ebx-0x68],esp
  41116d:	test   BYTE PTR [ebp-0x5],dh
  411170:	and    DWORD PTR [ebx+edx*2],ebp
  411173:	cs and al,0x41
  411176:	add    DWORD PTR [eax],edx
  411178:	test   DWORD PTR [esi],ecx
  41117a:	pop    edi
  41117b:	fs pop esi
  41117d:	push   edx
  41117e:	mov    eax,0x9174379
  411183:	pop    esp
  411184:	adc    al,0x74
  411186:	xchg   edx,eax
  411187:	sbb    dl,BYTE PTR [ebp-0x8]
  41118a:	and    edx,edx
  41118c:	sahf   
  41118d:	pop    ecx
  41118e:	push   ebx
  41118f:	das    
  411190:	loope  0x411150
  411192:	popa   
  411193:	push   esp
  411194:	pop    eax
  411195:	mov    ch,0x23
  411197:	aas    
  411198:	mov    ah,0xf7
  41119a:	cmp    al,BYTE PTR [ecx-0x6f3b475f]
  4111a0:	and    bh,BYTE PTR [edi-0x4dda5764]
  4111a6:	mov    ecx,DWORD PTR [ecx]
  4111a8:	hlt    
  4111a9:	and    eax,0xb6a6a9f4
  4111ae:	jmp    0x368246f8
  4111b3:	fs jbe 0x41120c
  4111b6:	jp     0x4111c5
  4111b8:	add    dl,BYTE PTR [eax]
  4111ba:	and    ah,bh
  4111bc:	ffreep st(5)
  4111be:	test   al,0x34
  4111c0:	fistp  DWORD PTR [edx+eax*8+0x6]
  4111c4:	test   eax,0xa515ff58
  4111c9:	ret    0x35f9
  4111cc:	repnz push edi
  4111ce:	cli    
  4111cf:	out    0xa8,al
  4111d1:	mov    ah,0x52
  4111d3:	xchg   edi,eax
  4111d4:	lock adc ebx,esi
  4111d7:	mov    BYTE PTR [esi+edx*1-0x50c25560],bh
  4111de:	mov    eax,0xf9ce8005
  4111e3:	mov    cl,0x4b
  4111e5:	xor    bl,cl
  4111e7:	add    al,0x4e
  4111e9:	les    ebx,FWORD PTR ds:0x7e0f962
  4111ef:	mov    edx,0xfd4b5a35
  4111f4:	and    DWORD PTR [ebx-0x7b],esi
  4111f7:	shl    DWORD PTR [ebx-0x17],1
  4111fa:	jle    0x4111f4
  4111fc:	inc    ebp
  4111fd:	cs ds call 0xe14c:0x8a338504
  411206:	out    0xd7,eax
  411208:	es dec esi
  41120a:	push   edx
  41120b:	mov    DWORD PTR [ebx],ebx
  41120d:	pop    edi
  41120e:	mov    edi,0x51bd86cc
  411213:	(bad)  
  411214:	and    al,0xcf
  411216:	add    BYTE PTR gs:[ebx-0x765ae4f6],0x92
  41121e:	add    al,0x49
  411220:	hlt    
  411221:	enter  0x9867,0x77
  411225:	bound  ebx,QWORD PTR [ecx+ebx*8-0x14]
  411229:	mov    BYTE PTR [edi+0x7f],ch
  41122c:	mov    ch,0xa2
  41122e:	inc    esi
  41122f:	imul   esp,DWORD PTR ds:0x92358dee,0x25
  411236:	lods   al,BYTE PTR ds:[esi]
  411237:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411238:	pop    ds
  411239:	add    dh,dl
  41123b:	ret    0xe6eb
  41123e:	mov    DWORD PTR [edi],ebx
  411240:	push   0x28623075
  411245:	fisttp DWORD PTR [ecx]
  411247:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411248:	mov    ?,WORD PTR [edx-0x5dfc4aca]
  41124e:	das    
  41124f:	dec    eax
  411250:	add    ecx,esi
  411252:	dec    ebx
  411253:	dec    esp
  411254:	sbb    bl,BYTE PTR [ebx]
  411256:	fucomi st,st(6)
  411258:	ja     0x411252
  41125a:	push   ds
  41125b:	adc    DWORD PTR [edi+0x44],esp
  41125e:	int3   
  41125f:	jbe    0x4112c7
  411261:	aaa    
  411262:	out    dx,al
  411263:	pop    ecx
  411264:	rcl    BYTE PTR ds:0xeb22ea33,cl
  41126a:	sbb    BYTE PTR ds:0xe796084d,bh
  411270:	stc    
  411271:	push   edx
  411272:	gs sahf 
  411274:	push   es
  411275:	sbb    edx,ebp
  411277:	cdq    
  411278:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411279:	inc    edi
  41127a:	ins    BYTE PTR es:[edi],dx
  41127b:	mov    edi,0x3ea2c19a
  411280:	es loope 0x411299
  411283:	imul   esi,DWORD PTR [edi],0xda577852
  411289:	aam    0xcb
  41128b:	and    al,0x25
  41128d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41128e:	scas   eax,DWORD PTR es:[edi]
  41128f:	inc    edi
  411290:	out    dx,eax
  411291:	cld    
  411292:	xchg   esp,eax
  411293:	jp     0x411313
  411295:	mov    edi,0xe72bfae3
  41129a:	jmp    0x47033faa
  41129f:	or     al,0xf7
  4112a1:	ret    
  4112a2:	mov    ds:0xc4452992,eax
  4112a7:	mov    al,ds:0xc2fc016a
  4112ac:	jge    0x41132a
  4112ae:	shl    BYTE PTR [eax+edi*2],1
  4112b1:	cld    
  4112b2:	mov    bl,BYTE PTR [edi-0x71]
  4112b5:	pop    ebx
  4112b6:	pop    es
  4112b7:	cmp    DWORD PTR [ebx+edx*1+0x7e],0x56a8faa4
  4112bf:	mov    cl,0xcc
  4112c1:	ret    0x14fb
  4112c4:	scas   al,BYTE PTR es:[edi]
  4112c5:	jmp    0x76c:0xe55b13ac
  4112cc:	pop    es
  4112cd:	bound  edx,QWORD PTR [eax+ebp*1-0x6d203d1e]
  4112d4:	clc    
  4112d5:	mov    edx,0x29e7b53b
  4112da:	mov    eax,ds:0x509ac757
  4112df:	icebp  
  4112e0:	popf   
  4112e1:	mov    ds:0xcecce175,eax
  4112e6:	mov    ds:0xc315bd9,al
  4112eb:	repnz and al,0xc8
  4112ee:	shl    BYTE PTR ds:0x6c64acb1,1
  4112f4:	mov    esp,0x44e5a87f
  4112f9:	pushf  
  4112fa:	mov    cl,cl
  4112fc:	imul   ebx,DWORD PTR [edi*8-0x4eb9a299],0xe31bcd6b
  411307:	mov    ah,0xd4
  411309:	xchg   edi,eax
  41130a:	sbb    ebp,0x80617d14
  411310:	adc    DWORD PTR [ecx],edx
  411312:	scas   al,BYTE PTR es:[edi]
  411313:	and    al,0x4e
  411315:	adc    BYTE PTR [ebx+0x4acdfee8],ah
  41131b:	cmp    BYTE PTR [eax-0x7df0cc06],cl
  411321:	inc    ebx
  411322:	sub    ecx,DWORD PTR [ebx]
  411324:	mov    ebp,0x597d5dbd
  411329:	push   ss
  41132a:	jl     0x4112e1
  41132c:	int    0xff
  41132e:	pop    ebp
  41132f:	loope  0x4112d9
  411331:	ins    BYTE PTR es:[edi],dx
  411332:	int3   
  411333:	retf   0xbc04
  411336:	add    esp,ebp
  411338:	or     al,0x5f
  41133a:	or     cl,BYTE PTR [ecx+0x1e07b29]
  411340:	lahf   
  411341:	std    
  411342:	dec    esp
  411343:	push   esi
  411344:	push   cs
  411345:	lea    eax,[ebx+0xc93a09a]
  41134b:	stos   BYTE PTR es:[edi],al
  41134c:	mov    ds:0xd95e7a3b,eax
  411351:	cdq    
  411352:	cwde   
  411353:	sub    al,0x90
  411355:	cdq    
  411356:	push   edx
  411357:	inc    ecx
  411358:	mov    esp,0x4d832411
  41135d:	repnz push es
  41135f:	xor    al,0xe4
  411361:	out    0x62,eax
  411363:	add    esp,ebx
  411365:	jno    0x4113aa
  411367:	dec    esi
  411368:	mov    eax,0x30200f2b
  41136d:	add    eax,0xd87573fc
  411372:	xchg   ebx,eax
  411373:	adc    BYTE PTR [edx],ah
  411375:	push   esi
  411376:	and    DWORD PTR [edi+0x61],ebx
  411379:	das    
  41137a:	jmp    0x41138a
  41137c:	push   0xef043b8
  411381:	jmp    0x5aa5:0x4883d88
  411388:	out    0x87,eax
  41138a:	mov    eax,DWORD PTR [edi-0xa]
  41138d:	lea    edx,[esi-0x7ff09310]
  411393:	aas    
  411394:	out    0x1c,eax
  411396:	mov    al,ds:0xb420e50d
  41139b:	push   ds
  41139c:	xchg   esp,eax
  41139d:	xor    cl,BYTE PTR ds:0x2780c022
  4113a3:	jmp    0x41141a
  4113a5:	lea    eax,[ebp+0x40]
  4113a8:	jmp    0x4113ce
  4113aa:	mov    ebp,0x75850678
  4113af:	mov    esp,0xaa2a692b
  4113b4:	mov    es,WORD PTR [esi]
  4113b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113b7:	rol    esp,cl
  4113b9:	jmp    FWORD PTR [ecx]
  4113bb:	mov    al,ds:0xa5641ced
  4113c0:	sbb    eax,0x4e6af6aa
  4113c5:	mov    bl,0x58
  4113c7:	fild   QWORD PTR [ebp-0x1]
  4113ca:	mov    ds:0x7ffea9db,eax
  4113cf:	xchg   ebx,eax
  4113d0:	sbb    DWORD PTR [edx+0x36e4ffe6],ebx
  4113d6:	div    dh
  4113d8:	and    eax,0x96f5e91e
  4113dd:	frstpm(287 only) 
  4113df:	ja     0x411460
  4113e1:	xchg   esi,eax
  4113e2:	mov    cs,WORD PTR [eax-0x2a10dc81]
  4113e8:	gs cwde 
  4113ea:	ds mov bh,0x61
  4113ed:	mov    cl,0x5e
  4113ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4113f0:	xchg   edi,eax
  4113f1:	hlt    
  4113f2:	shl    DWORD PTR [eax-0x55],cl
  4113f5:	stc    
  4113f6:	stos   BYTE PTR es:[edi],al
  4113f7:	push   es
  4113f8:	add    dl,BYTE PTR [ecx-0x43]
  4113fb:	scas   eax,DWORD PTR es:[edi]
  4113fc:	ja     0x411449
  4113fe:	popf   
  4113ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411400:	pop    edi
  411401:	ja     0x41144a
  411403:	xchg   edx,eax
  411404:	pop    esi
  411405:	aad    0x5e
  411407:	call   0xe051d646
  41140c:	aad    0x5a
  41140e:	and    esp,DWORD PTR [ecx+0x24098a61]
  411414:	loope  0x411419
  411416:	cmp    al,0x79
  411418:	fild   DWORD PTR [ebx+0xc4524b5]
  41141e:	mov    fs,ecx
  411420:	std    
  411421:	sbb    al,0x6
  411423:	jne    0x411481
  411425:	xor    DWORD PTR [edi],edi
  411427:	lods   eax,DWORD PTR ds:[esi]
  411428:	mov    gs,WORD PTR [edi+0x3f]
  41142b:	adc    DWORD PTR cs:[ebp+edi*2+0x2d],ecx
  411430:	cmp    DWORD PTR [edi+esi*4],ebp
  411433:	sbb    al,0x19
  411435:	js     0x411408
  411437:	gs jae 0x4113d2
  41143a:	xor    BYTE PTR [esi],al
  41143c:	and    ecx,DWORD PTR [edx]
  41143e:	in     al,dx
  41143f:	pushf  
  411440:	out    0xdf,eax
  411442:	rcr    BYTE PTR [eax-0x528e8148],0x7b
  411449:	push   ebx
  41144a:	adc    bl,BYTE PTR [edx+0x6c]
  41144d:	leave  
  41144e:	or     DWORD PTR [edx-0x2d750d53],ebp
  411454:	push   es
  411455:	jne    0x411469
  411457:	test   BYTE PTR [edx],0xce
  41145a:	cmc    
  41145b:	jo     0x4113df
  41145d:	rcr    DWORD PTR [edi-0x61f96fc6],1
  411463:	retf   
  411464:	int    0x9f
  411466:	ror    BYTE PTR [edi+ebp*4],1
  411469:	xchg   ebx,eax
  41146a:	out    0x1e,al
  41146c:	mov    eax,DWORD PTR [edx]
  41146e:	jb     0x4113f3
  411470:	ret    0xea2a
  411473:	and    BYTE PTR [ebp+eiz*8-0x6553a54c],al
  41147a:	adc    DWORD PTR [edi-0x3dbb89b6],ecx
  411480:	lods   al,BYTE PTR ds:[esi]
  411481:	jb     0x4114c9
  411483:	adc    edx,esi
  411485:	jne    0x411430
  411487:	pushf  
  411488:	sar    DWORD PTR [esi],0x6
  41148b:	inc    edi
  41148c:	and    ecx,DWORD PTR [ecx]
  41148e:	ja     0x41147e
  411490:	mov    BYTE PTR [edi+0x54c1d765],al
  411496:	ds cmp eax,0x2cff5779
  41149c:	rol    BYTE PTR [edi-0x77cc8bde],cl
  4114a2:	test   BYTE PTR [ebp+eax*2-0x27],dl
  4114a6:	cmp    esp,esi
  4114a8:	push   esi
  4114a9:	cs adc ebx,esp
  4114ac:	cmp    eax,DWORD PTR [edi]
  4114ae:	scas   al,BYTE PTR es:[edi]
  4114af:	cmp    eax,edx
  4114b1:	dec    edx
  4114b2:	xchg   edi,eax
  4114b3:	aam    0xb4
  4114b5:	js     0x4114f9
  4114b7:	sti    
  4114b8:	(bad)  
  4114b9:	popa   
  4114ba:	adc    ebx,DWORD PTR [eax+0x193f8823]
  4114c0:	leave  
  4114c1:	push   eax
  4114c2:	(bad)  
  4114c3:	fndisi(8087 only) 
  4114c5:	aaa    
  4114c6:	lds    eax,FWORD PTR [ecx+0x77]
  4114c9:	lds    ebx,FWORD PTR [eax+0x576567bd]
  4114cf:	sbb    esi,DWORD PTR [edi]
  4114d1:	enter  0xe143,0x1
  4114d5:	sti    
  4114d6:	mov    cl,BYTE PTR [ecx]
  4114d8:	fst    DWORD PTR [eax]
  4114da:	inc    ebp
  4114db:	inc    edi
  4114dc:	dec    ebp
  4114dd:	repnz stc 
  4114df:	mov    BYTE PTR [esi-0x247cfd2b],bl
  4114e5:	out    0x7,al
  4114e7:	int3   
  4114e8:	jne    0x41154a
  4114ea:	mov    al,0x77
  4114ec:	cs int 0x34
  4114ef:	inc    esp
  4114f0:	(bad)  
  4114f1:	fs pop esi
  4114f3:	mov    ecx,0xe57df9b2
  4114f8:	cmp    ch,ch
  4114fa:	xor    ebx,DWORD PTR [eax+0x7ba8d574]
  411500:	mov    esp,0x66716688
  411505:	cmp    eax,0x98b59979
  41150a:	inc    edx
  41150b:	push   es
  41150c:	mov    ch,0x44
  41150e:	out    dx,eax
  41150f:	sub    al,0xb7
  411511:	popa   
  411512:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411513:	dec    eax
  411514:	push   esi
  411515:	imul   ecx,DWORD PTR [ebp-0x5c0e7d9d],0xffffffa2
  41151c:	mov    eax,0xbdc8dba6
  411521:	mov    es,ebp
  411523:	jmp    0xfe76:0x5f3407f3
  41152a:	jecxz  0x4114e4
  41152c:	xor    al,0x72
  41152e:	pop    esi
  41152f:	cs cmp al,0x82
  411532:	dec    esp
  411533:	mov    ecx,0x770ac9b
  411538:	add    bl,BYTE PTR [esi-0x3f]
  41153b:	popa   
  41153c:	or     eax,0x5ded7568
  411541:	mov    ds:0x3163b560,al
  411546:	add    esp,DWORD PTR [edx-0x77944468]
  41154c:	mov    dl,0xe3
  41154e:	jo     0x4114df
  411550:	jnp    0x4114e8
  411552:	sub    al,0x56
  411554:	repz test eax,0x3b722ff6
  41155a:	hlt    
  41155b:	or     BYTE PTR [edx],ah
  41155d:	test   DWORD PTR [ecx-0x5f08d5b7],ebp
  411563:	stc    
  411564:	data16 sbb BYTE PTR [eax+0x5e],0x6e
  411569:	test   bh,dh
  41156b:	or     esp,ebp
  41156d:	fcmove st,st(0)
  41156f:	ja     0x41155c
  411571:	das    
  411572:	pop    esi
  411573:	inc    eax
  411574:	xor    eax,0x124164da
  411579:	call   DWORD PTR [esi+0x723805cb]
  41157f:	dec    ecx
  411580:	jnp    0x4115a0
  411582:	sub    BYTE PTR [esi-0x7ac8a11c],dh
  411588:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411589:	sub    ebp,0xffffff9a
  41158c:	sti    
  41158d:	dec    eax
  41158e:	and    BYTE PTR [esi+0x1f],dl
  411591:	(bad)  
  411592:	lods   al,BYTE PTR ds:[esi]
  411593:	fisttp QWORD PTR [eax+0x45]
  411596:	inc    ebp
  411597:	and    ebp,DWORD PTR [eax+0x27]
  41159a:	pop    ecx
  41159b:	adc    BYTE PTR ds:0x35f434be,bl
  4115a1:	out    dx,eax
  4115a2:	jg     0x411617
  4115a4:	in     al,dx
  4115a5:	vaddpd ymm3,ymm2,YMMWORD PTR [edi+ebx*8-0x20]
  4115ab:	add    eax,0x5e5380cf
  4115b0:	call   0xe9216532
  4115b5:	sub    ebp,DWORD PTR [ecx-0x3df972fc]
  4115bb:	fist   WORD PTR ds:0x4bf7bf9e
  4115c1:	rol    DWORD PTR [edi],0x38
  4115c4:	ret    0x722b
  4115c7:	mov    eax,0xfe3b7352
  4115cc:	shr    BYTE PTR [esi],0x24
  4115cf:	mov    esp,0x3a6cf238
  4115d4:	adc    BYTE PTR [edx+0x4d],dh
  4115d7:	sbb    DWORD PTR [edx],ecx
  4115d9:	(bad)  
  4115da:	mov    ebx,0x5c689c89
  4115df:	mov    edi,DWORD PTR [esi+0x511f8b50]
  4115e5:	push   esp
  4115e6:	icebp  
  4115e7:	cmp    al,0xef
  4115e9:	add    al,0xbe
  4115eb:	or     ah,BYTE PTR [esp+eiz*2+0x40]
  4115ef:	ds inc edi
  4115f1:	mov    al,ds:0x38b31e38
  4115f6:	dec    eax
  4115f7:	ror    cl,1
  4115f9:	(bad)  
  4115fa:	dec    esp
  4115fb:	push   ss
  4115fc:	fistp  WORD PTR [edi-0x4a78bc1b]
  411602:	stc    
  411603:	pop    ds
  411604:	out    0xf1,eax
  411606:	adc    BYTE PTR [eax-0x328ddc60],bl
  41160c:	jge    0x4115aa
  41160e:	imul   esi,DWORD PTR [eax],0x78
  411611:	pusha  
  411612:	and    eax,0xd3d1c7a5
  411617:	xchg   esp,eax
  411618:	mov    al,BYTE PTR [eax-0x24]
  41161b:	leave  
  41161c:	scas   al,BYTE PTR es:[edi]
  41161d:	mov    ds:0x192fa422,al
  411622:	lahf   
  411623:	and    ebp,DWORD PTR [edi+0x730b0202]
  411629:	dec    edx
  41162a:	addr16 mov bl,0xbb
  41162d:	push   es
  41162e:	xor    eax,0x44912aa
  411633:	nop
  411634:	sahf   
  411635:	jle    0x4115c2
  411637:	or     ebx,eax
  411639:	jne    0x411646
  41163b:	ds mov bh,0xd3
  41163e:	pop    ebx
  41163f:	or     DWORD PTR [edi+0x5d],edi
  411642:	xchg   ecx,eax
  411643:	fsub   DWORD PTR [edx]
  411645:	mov    edx,0x7bfab90c
  41164a:	dec    esi
  41164b:	fisttp WORD PTR ds:0xc7809d26
  411651:	xor    dh,BYTE PTR [edi-0x65]
  411654:	or     BYTE PTR [edx+ebx*2],ch
  411657:	hlt    
  411658:	shr    DWORD PTR [eax],1
  41165a:	scas   eax,DWORD PTR es:[edi]
  41165b:	fstp   QWORD PTR [edi+0x7626f5a1]
  411661:	in     eax,dx
  411662:	in     eax,dx
  411663:	mov    WORD PTR [eax+eiz*2],?
  411666:	test   DWORD PTR [edx-0x16],esi
  411669:	test   ax,0xb3b2
  41166d:	and    BYTE PTR [esi+0x603be57b],ch
  411673:	hlt    
  411674:	sbb    cl,BYTE PTR [esi-0x27]
  411677:	dec    ecx
  411678:	sar    BYTE PTR [esi+0x50],1
  41167b:	fstp   QWORD PTR [ebx]
  41167d:	retf   
  41167e:	push   es
  41167f:	jp     0x411668
  411681:	add    ebx,edi
  411683:	fldenv [edx]
  411685:	xor    BYTE PTR [eax+edi*1-0x3b],ch
  411689:	shl    BYTE PTR ds:0xefbc328c,cl
  41168f:	std    
  411690:	sub    BYTE PTR [esi+0x35],cl
  411693:	lods   eax,DWORD PTR es:[esi]
  411695:	fild   WORD PTR [ebx+0x25]
  411698:	sbb    eax,0x598cfd09
  41169d:	sbb    eax,0xa7f6a9ef
  4116a2:	and    eax,0xdafded77
  4116a7:	add    BYTE PTR [edi-0x4d3ec168],bh
  4116ad:	out    0xba,eax
  4116af:	je     0x411633
  4116b1:	push   esi
  4116b2:	pop    ecx
  4116b3:	jnp    0x4116d9
  4116b5:	rol    BYTE PTR [edx-0x69b30ea7],cl
  4116bb:	retf   
  4116bc:	mov    bl,BYTE PTR [edi]
  4116be:	inc    edx
  4116bf:	jle    0x4116cd
  4116c1:	arpl   WORD PTR cs:[edx+0x4b],di
  4116c5:	push   edi
  4116c6:	mov    bl,0x6b
  4116c8:	xchg   ecx,eax
  4116c9:	cli    
  4116ca:	cmp    al,0xe6
  4116cc:	mov    cl,ah
  4116ce:	lock jbe 0x4116f7
  4116d1:	jle    0x411735
  4116d3:	outs   dx,DWORD PTR ds:[esi]
  4116d4:	jns    0x411696
  4116d6:	arpl   WORD PTR [ebx-0x3c],sp
  4116d9:	inc    ebx
  4116da:	or     ecx,DWORD PTR [esp]
  4116dd:	cld    
  4116de:	call   0xb56b:0xfeadac3c
  4116e5:	sbb    esi,DWORD PTR [ebp+eax*1-0x22428b20]
  4116ec:	xor    DWORD PTR [edx-0x3c],0x3373a488
  4116f3:	outs   dx,DWORD PTR ds:[esi]
  4116f4:	dec    esp
  4116f5:	mov    edi,0x34153407
  4116fa:	hlt    
  4116fb:	popf   
  4116fc:	leave  
  4116fd:	stos   BYTE PTR es:[edi],al
  4116fe:	or     DWORD PTR gs:[edi+0x68383837],ecx
  411705:	shr    BYTE PTR [edx-0x74e06e0c],1
  41170b:	out    0xe6,al
  41170d:	mov    esp,0x8f19e6cc
  411712:	out    0x6e,eax
  411714:	push   esp
  411715:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411716:	aaa    
  411717:	pop    esi
  411718:	test   DWORD PTR [ebx],edi
  41171a:	pushf  
  41171b:	pop    ds
  41171c:	cdq    
  41171d:	aam    0xb3
  41171f:	jae    0x4116d7
  411721:	xchg   ecx,eax
  411722:	mov    al,0x43
  411724:	mov    ah,0xb
  411726:	push   eax
  411727:	jp     0x41179e
  411729:	cmp    al,0x37
  41172b:	(bad)  
  41172d:	cs jecxz 0x4116e0
  411730:	pop    ebx
  411731:	push   edx
  411732:	mov    cl,0x88
  411734:	shr    WORD PTR [esi-0x2b],0xec
  411739:	sti    
  41173a:	shl    dh,0x63
  41173d:	cli    
  41173e:	mov    dh,0x6
  411740:	stos   BYTE PTR es:[edi],al
  411741:	xor    al,0xe
  411743:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411744:	stos   DWORD PTR es:[edi],eax
  411745:	fs loope 0x4116e4
  411748:	gs out dx,eax
  41174a:	mov    DWORD PTR [ebp-0x5b],edi
  41174d:	dec    ecx
  41174e:	sbb    eax,0xb68285f6
  411753:	pop    ds
  411754:	push   cs
  411755:	ret    
  411756:	loope  0x4117b5
  411758:	in     al,dx
  411759:	cld    
  41175a:	push   edi
  41175b:	stos   DWORD PTR es:[edi],eax
  41175c:	jb     0x411771
  41175e:	xchg   esp,eax
  41175f:	(bad)  
  411760:	push   0x487e91ec
  411765:	rol    dl,0x42
  411768:	imul   esi,DWORD PTR [eax+0x5d],0x71
  41176c:	scas   al,BYTE PTR es:[edi]
  41176d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41176e:	cmp    eax,0x804281a9
  411773:	ror    ebx,0x8c
  411776:	loopne 0x4117d5
  411778:	adc    eax,0x5a264c47
  41177d:	sub    dh,BYTE PTR [eax]
  41177f:	sbb    eax,0x6753447f
  411784:	les    ebx,FWORD PTR [ebx]
  411786:	push   ds
  411787:	fsubr  DWORD PTR [esi-0x12d413a0]
  41178d:	sub    bl,BYTE PTR [ebx+0x2e]
  411790:	movups xmm6,XMMWORD PTR ds:[ecx+0x2a70c6b4]
  411798:	cld    
  411799:	cld    
  41179a:	pop    edx
  41179b:	mov    ebp,0xe1bea479
  4117a0:	mov    edx,?
  4117a2:	add    BYTE PTR [edi],dh
  4117a4:	dec    esp
  4117a5:	rcr    DWORD PTR ds:0x9994a4c7,0x8c
  4117ac:	xchg   esp,eax
  4117ad:	mov    al,ds:0xa7fae5f4
  4117b2:	cmc    
  4117b3:	pushf  
  4117b4:	or     al,0xcf
  4117b6:	cmp    al,0x34
  4117b8:	pop    esi
  4117b9:	test   DWORD PTR [ecx+0x5968db86],ecx
  4117bf:	pop    ebx
  4117c0:	je     0x4117d0
  4117c2:	leave  
  4117c3:	dec    ecx
  4117c4:	add    ah,BYTE PTR [ebp+eiz*8+0x286d4318]
  4117cb:	aaa    
  4117cc:	addr16 push edi
  4117ce:	(bad)
  4117d2:	cmp    DWORD PTR [edx+0x24],ebx
  4117d5:	cmp    esp,DWORD PTR [ebp-0x2776c0e]
  4117db:	ret    0xa3bd
  4117de:	xor    eax,0x6235e56
  4117e3:	dec    edx
  4117e4:	cmp    dl,BYTE PTR [edi+0x14]
  4117e7:	xor    DWORD PTR [eax+0x55],edx
  4117ea:	imul   ebx,DWORD PTR [ecx-0x31d4398a],0x4d89c833
  4117f4:	or     BYTE PTR [ebx+0x558b084d],cl
  4117fa:	or     BYTE PTR [ecx-0x2e],ch
  4117fd:	icebp  
  4117fe:	or     BYTE PTR [edi+0x0],dl
  411801:	xor    ecx,eax
  411803:	add    ecx,esi
  411805:	lea    ecx,[ebp+ecx*4-0x64]
  411809:	mov    edi,DWORD PTR [ecx]
  41180b:	add    edx,edi
  41180d:	mov    DWORD PTR [ecx],edx
  41180f:	mov    ecx,DWORD PTR [ebp+0x8]
  411812:	xor    ecx,eax
  411814:	add    ecx,esi
  411816:	jne    0x40f45a
  41181c:	jmp    0x413bef
  411821:	mov    ecx,DWORD PTR [ebp+0x8]
  411824:	mov    edx,DWORD PTR [ebp-0x8]
  411827:	xor    ecx,eax
  411829:	xor    edx,eax
  41182b:	sub    ecx,edx
  41182d:	sub    ecx,esi
  41182f:	xor    ecx,eax
  411831:	mov    DWORD PTR [ebp+0x8],ecx
  411834:	mov    ecx,DWORD PTR [ebp+0x8]
  411837:	mov    edx,DWORD PTR [ebp+0x8]
  41183a:	xor    ecx,eax
  41183c:	imul   edx,edx,0x5708f1
  411842:	add    ecx,esi
  411844:	lea    ecx,[ebp+ecx*4-0x64]
  411848:	mov    edi,DWORD PTR [ecx]
  41184a:	add    edx,edi
  41184c:	mov    DWORD PTR [ecx],edx
  41184e:	mov    ecx,DWORD PTR [ebp+0x8]
  411851:	xor    ecx,eax
  411853:	add    ecx,esi
  411855:	jne    0x411821
  41185b:	jmp    0x413be3
  411860:	ins    BYTE PTR es:[edi],dx
  411861:	jns    0x4117f2
  411863:	sbb    edi,DWORD PTR [ebx+0x1b]
  411866:	mov    eax,0xa6df667b
  41186b:	push   edi
  41186c:	ds data16 sahf 
  41186f:	sti    
  411870:	call   0x7bd9505
  411875:	pop    edi
  411876:	jl     0x4118f4
  411878:	inc    edi
  411879:	sub    eax,0x480c3181
  41187e:	fst    DWORD PTR [ebx-0x4bc16c9a]
  411884:	jl     0x411846
  411886:	jle    0x411869
  411888:	bound  esi,QWORD PTR [esi-0x7f]
  41188b:	and    BYTE PTR [esi+0x1a],bh
  41188e:	jbe    0x411841
  411890:	dec    esi
  411891:	or     edi,DWORD PTR [edi]
  411893:	adc    eax,0xb36b493e
  411898:	pop    ecx
  411899:	sar    DWORD PTR [ecx],cl
  41189b:	cld    
  41189c:	nop
  41189d:	and    DWORD PTR [ecx+ebx*2],ebp
  4118a0:	imul   DWORD PTR [edx+0x5bf82ba5]
  4118a6:	dec    ebp
  4118a8:	xchg   esp,eax
  4118a9:	pop    es
  4118aa:	ror    bh,1
  4118ac:	in     eax,dx
  4118ad:	je     0x411929
  4118af:	xchg   DWORD PTR [esi],ecx
  4118b1:	xor    DWORD PTR [eax-0x6e],edi
  4118b4:	lds    ecx,FWORD PTR [edi+0x48]
  4118b7:	sub    edi,DWORD PTR [ebx-0x5abb5d2d]
  4118bd:	lock mov edi,0xd0f13ef0
  4118c3:	xchg   DWORD PTR [edx],ecx
  4118c5:	ja     0x411876
  4118c7:	xchg   esp,eax
  4118c8:	jbe    0x41189c
  4118ca:	loopne 0x411939
  4118cc:	stos   BYTE PTR es:[edi],al
  4118cd:	inc    ebx
  4118ce:	test   DWORD PTR [esi+0x70],edi
  4118d1:	jg     0x411872
  4118d3:	idiv   BYTE PTR [esi]
  4118d5:	addr16 mov ecx,0x7ed959b1
  4118db:	dec    ebp
  4118dc:	and    BYTE PTR [eax-0x7497d472],cl
  4118e2:	inc    esp
  4118e3:	scas   al,BYTE PTR es:[edi]
  4118e4:	cs sub bl,cl
  4118e7:	push   0xffffffee
  4118e9:	adc    eax,0x9459048b
  4118ee:	adc    al,al
  4118f0:	cmp    eax,0x902b7019
  4118f5:	push   es
  4118f6:	(bad)  
  4118f7:	imul   esp,eax,0x7
  4118fa:	jno    0x41188c
  4118fc:	push   esi
  4118fd:	sub    eax,eax
  4118ff:	loop   0x411921
  411901:	mov    bl,0x32
  411903:	add    DWORD PTR cs:[eax],esi
  411906:	ficomp DWORD PTR [edx+0x7e]
  411909:	xor    al,0xa0
  41190b:	mov    dh,0x72
  41190d:	fs mov dh,0x86
  411910:	inc    esp
  411911:	jne    0x4118de
  411913:	lods   al,BYTE PTR ds:[esi]
  411914:	neg    DWORD PTR [ebx-0x5e]
  411917:	or     BYTE PTR [edx+0x1e5bb09e],dl
  41191d:	sbb    al,0x5f
  41191f:	xor    al,0xe
  411921:	sub    DWORD PTR [edx],0x5a
  411924:	pop    esp
  411925:	(bad)  
  411926:	retf   
  411927:	mov    al,0x7e
  411929:	xchg   esi,eax
  41192a:	add    bl,BYTE PTR [ecx]
  41192c:	sub    ecx,DWORD PTR [ebx]
  41192e:	data16 mov ds:0x5c606b15,al
  411934:	icebp  
  411935:	outs   dx,DWORD PTR ds:[esi]
  411936:	in     eax,0xf7
  411938:	add    bh,cl
  41193a:	fst    DWORD PTR es:[ebx-0x34]
  41193e:	or     al,0x1f
  411940:	xchg   esi,eax
  411941:	cmp    DWORD PTR [edi+0x49c9bc89],0xffffffba
  411948:	imul   edx,DWORD PTR [ebp+0x4d601c80],0x7e
  41194f:	mov    eax,0x7d9a2783
  411954:	lods   eax,DWORD PTR ds:[esi]
  411955:	jecxz  0x411978
  411957:	jb     0x4118f7
  411959:	out    dx,al
  41195a:	cli    
  41195b:	adc    eax,0x4298ad87
  411960:	ins    BYTE PTR es:[edi],dx
  411961:	shr    BYTE PTR [ecx],cl
  411963:	xor    BYTE PTR [eax+0x1],ah
  411966:	cmp    al,BYTE PTR [edx+0x7]
  411969:	jp     0x4118f0
  41196b:	add    DWORD PTR ds:0xa73b5c94,edx
  411971:	xor    eax,0x73548f4e
  411976:	cmp    ch,BYTE PTR [edx]
  411978:	fidivr WORD PTR [edi+0x51]
  41197b:	jle    0x411985
  41197d:	mov    al,0xf5
  41197f:	and    eax,0x1927922b
  411984:	dec    ecx
  411985:	and    BYTE PTR [ecx-0x3a],dh
  411988:	pop    ss
  411989:	test   al,0xf6
  41198b:	repnz mov ebp,0x915b5a5f
  411991:	push   es
  411992:	xchg   edx,eax
  411993:	dec    ebx
  411994:	dec    esp
  411995:	into   
  411996:	mov    esi,0x22f5173f
  41199b:	xor    edi,esp
  41199d:	ds out 0x54,al
  4119a0:	js     0x4119a3
  4119a2:	repnz fs scas al,BYTE PTR es:[edi]
  4119a5:	fs cmp ebp,0xa
  4119a9:	adc    al,0x72
  4119ab:	xchg   ecx,eax
  4119ac:	aas    
  4119ad:	dec    esi
  4119ae:	sub    al,0x8
  4119b0:	cdq    
  4119b1:	mov    cl,BYTE PTR [ecx+0x14927cbe]
  4119b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119b8:	pop    esi
  4119b9:	mov    ecx,0x6f7b9da9
  4119be:	inc    ecx
  4119bf:	xor    ebp,DWORD PTR [ebx]
  4119c1:	xchg   ebp,eax
  4119c2:	inc    esi
  4119c3:	rol    BYTE PTR cs:[ebp-0x4ec6ffd0],0x24
  4119cb:	mov    esp,0x56b813d7
  4119d0:	clc    
  4119d1:	and    DWORD PTR [ebx+0x4c],eax
  4119d4:	out    0x22,eax
  4119d6:	sti    
  4119d7:	mov    dh,0x1c
  4119d9:	and    al,BYTE PTR [ebx+eax*8+0x7]
  4119dd:	xor    DWORD PTR [edx],ecx
  4119df:	stos   DWORD PTR es:[edi],eax
  4119e0:	mov    eax,ds:0x36798079
  4119e5:	test   BYTE PTR [edx],ah
  4119e7:	imul   ebp,esp,0xffffff96
  4119ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4119eb:	mov    edi,0x6bb37ce7
  4119f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4119f1:	in     eax,dx
  4119f2:	aam    0xb2
  4119f4:	fidiv  WORD PTR [ebp+0x336a4d96]
  4119fa:	ss push edi
  4119fc:	outs   dx,BYTE PTR ds:[esi]
  4119fd:	pop    es
  4119fe:	jecxz  0x411987
  411a00:	das    
  411a01:	and    edx,DWORD PTR [esi]
  411a03:	push   ds
  411a04:	loope  0x411a1e
  411a06:	mov    ebp,0x4d4067ab
  411a0b:	mov    ecx,0xd5644f48
  411a10:	(bad)  
  411a11:	mov    dl,al
  411a13:	and    edx,DWORD PTR [ebp-0x3b]
  411a16:	fld    TBYTE PTR [ebx]
  411a18:	jne    0x4119ae
  411a1a:	mov    ds:0x5d267b36,al
  411a1f:	outs   dx,DWORD PTR ds:[esi]
  411a20:	inc    esp
  411a21:	inc    esp
  411a22:	sub    al,0x11
  411a24:	cld    
  411a25:	add    eax,0xefa1c861
  411a2a:	xchg   edx,eax
  411a2b:	fistp  DWORD PTR [edx-0x1f289c1d]
  411a31:	jp     0x411a7e
  411a33:	test   al,0x17
  411a35:	jl     0x411a94
  411a37:	cld    
  411a38:	push   ebp
  411a39:	jge    0x411a7d
  411a3b:	int    0x76
  411a3d:	outs   dx,DWORD PTR ds:[esi]
  411a3e:	sub    cl,BYTE PTR ds:0xa7cfcbdf
  411a44:	or     ah,ch
  411a46:	fisubr DWORD PTR [ecx+0x57]
  411a49:	les    ebx,FWORD PTR [ecx+0x56]
  411a4c:	mov    dl,0xc9
  411a4e:	mov    ebx,esi
  411a50:	inc    esp
  411a51:	mov    dl,0x5
  411a53:	lock adc bh,BYTE PTR [ebx]
  411a56:	adc    eax,eax
  411a58:	leave  
  411a59:	sti    
  411a5a:	shr    BYTE PTR [eax+0x0],1
  411a5d:	jno    0x411a74
  411a5f:	ins    BYTE PTR es:[edi],dx
  411a60:	push   ebp
  411a61:	mov    al,ds:0x99e60cc3
  411a66:	dec    esi
  411a67:	push   esi
  411a68:	mov    BYTE PTR [eax-0x2740020f],bl
  411a6e:	shr    DWORD PTR [ebx-0x26],cl
  411a71:	mov    eax,ds:0x4aa28aa3
  411a76:	cmp    al,0x67
  411a78:	out    0x14,eax
  411a7a:	sbb    DWORD PTR [esi-0x57cdc7ab],edi
  411a80:	jmp    0x411aa3
  411a82:	push   edi
  411a83:	test   al,0xd9
  411a85:	pop    edx
  411a86:	sbb    cl,bh
  411a88:	push   cs
  411a89:	mov    eax,0x49bee0a3
  411a8e:	mov    ebx,DWORD PTR [ebp+0x40]
  411a91:	sub    eax,0xcc5d828a
  411a96:	push   0x17c0adaa
  411a9b:	jp     0x411adf
  411a9d:	or     al,0x18
  411a9f:	jae    0x411ad0
  411aa1:	fimul  DWORD PTR [eax]
  411aa3:	push   ebp
  411aa4:	push   edx
  411aa5:	jb     0x411ae9
  411aa7:	int    0x6d
  411aa9:	and    DWORD PTR [esi],edx
  411aab:	jge    0x411a41
  411aad:	push   edi
  411aae:	fst    DWORD PTR [esi+0x4]
  411ab1:	add    esp,DWORD PTR [edi-0x5654adc7]
  411ab7:	mov    ebp,0x98e4bd80
  411abc:	inc    ecx
  411abd:	push   es
  411abe:	inc    eax
  411abf:	or     ebp,DWORD PTR [edx]
  411ac1:	mov    DWORD PTR [ecx+0x1b],0x17469d4d
  411ac8:	xor    BYTE PTR [eax],bh
  411aca:	retf   
  411acb:	xor    edx,DWORD PTR [esi+ebx*2]
  411ace:	out    dx,al
  411acf:	mov    WORD PTR [eax+0x667ae701],gs
  411ad5:	aaa    
  411ad6:	push   ebx
  411ad7:	or     eax,0x632ef8be
  411adc:	push   ss
  411add:	int    0x6f
  411adf:	mov    ebp,0xcf4292e9
  411ae4:	mov    ebp,0x5cd2b923
  411ae9:	shl    BYTE PTR [edi-0xf],cl
  411aec:	sub    eax,0x1a94ada1
  411af1:	push   ss
  411af2:	mov    ecx,DWORD PTR [esi-0x60]
  411af5:	js     0x411ab1
  411af7:	cli    
  411af8:	shr    dl,cl
  411afa:	lea    ebx,[ebp-0x41]
  411afd:	loopne 0x411ae2
  411aff:	pop    esp
  411b00:	add    DWORD PTR [edi+0x1f949b1f],ecx
  411b06:	bound  ecx,QWORD PTR [ebx+ebx*1+0x5e]
  411b0a:	fwait
  411b0b:	jmp    0x2acb:0x57dc174f
  411b12:	popa   
  411b13:	lahf   
  411b14:	(bad)  
  411b15:	outs   dx,DWORD PTR ds:[esi]
  411b16:	xor    dl,BYTE PTR [ecx]
  411b18:	mov    dh,0x13
  411b1a:	mov    ebp,0xae8a7505
  411b1f:	push   edi
  411b20:	popa   
  411b21:	repz mov cl,0x3d
  411b24:	and    eax,0xb66411d3
  411b29:	xchg   BYTE PTR [eax-0x1b],cl
  411b2c:	dec    ebx
  411b2d:	sub    eax,0x3312e597
  411b32:	xchg   ecx,eax
  411b33:	jmp    0x411b4b
  411b35:	jnp    0x411b78
  411b37:	mov    ecx,0x9958f0e9
  411b3c:	and    cl,BYTE PTR [esi+0x41]
  411b3f:	lods   eax,DWORD PTR gs:[esi]
  411b41:	and    BYTE PTR [edx],dl
  411b43:	and    ecx,edi
  411b45:	jp     0x411ba8
  411b47:	cmp    ebx,eax
  411b49:	sbb    al,0x64
  411b4b:	test   BYTE PTR [edx+eax*4],0xa6
  411b4f:	mov    eax,ds:0x251cc586
  411b54:	inc    ebp
  411b55:	loope  0x411b8d
  411b57:	les    esi,FWORD PTR [esi-0x170e3595]
  411b5d:	xor    eax,0x4582720b
  411b62:	mov    cl,0x57
  411b64:	dec    esp
  411b65:	add    eax,0xd529d3ba
  411b6a:	push   ss
  411b6b:	mov    al,ds:0xdc67b457
  411b70:	jb     0x411b76
  411b72:	das    
  411b73:	gs in  eax,dx
  411b75:	adc    ecx,DWORD PTR [edi]
  411b77:	fidiv  DWORD PTR [ebp-0x598e8672]
  411b7d:	ins    BYTE PTR es:[edi],dx
  411b7e:	sub    ah,BYTE PTR [edi]
  411b80:	neg    BYTE PTR [edx+0x3c0e6701]
  411b86:	push   edi
  411b87:	push   es
  411b88:	in     al,0x79
  411b8a:	arpl   WORD PTR [edi+eiz*1+0x7a],si
  411b8e:	add    DWORD PTR [ebp-0x16],esi
  411b91:	int    0x24
  411b93:	jae    0x411b17
  411b95:	sub    edx,ebx
  411b97:	cmp    DWORD PTR [ecx+ebx*8-0xc928c4e],ebx
  411b9e:	push   ds
  411b9f:	and    ah,dh
  411ba1:	pop    edi
  411ba2:	sbb    eax,0xe68bdb7c
  411ba7:	add    bh,bh
  411ba9:	xor    dh,BYTE PTR [esi+0x369da14]
  411baf:	(bad)  
  411bb1:	rol    DWORD PTR [ecx],0x82
  411bb4:	imul   edx,DWORD PTR [ebp+ebx*4-0x44],0x9ae65633
  411bbc:	and    eax,0x989273dc
  411bc1:	data16 fcmovbe st,st(7)
  411bc4:	add    esp,DWORD PTR [ecx+esi*1]
  411bc7:	mov    dl,BYTE PTR [ecx]
  411bc9:	in     al,0xea
  411bcb:	jge    0x411c02
  411bcd:	stc    
  411bce:	shl    BYTE PTR [ebx-0x3439eb49],1
  411bd4:	xor    esp,DWORD PTR [edx+0x5b]
  411bd7:	out    0x38,eax
  411bd9:	popf   
  411bda:	pop    esi
  411bdb:	pop    esp
  411bdc:	lods   eax,DWORD PTR ds:[esi]
  411bdd:	mov    al,0x55
  411bdf:	in     al,0xfe
  411be1:	stos   DWORD PTR es:[edi],eax
  411be2:	pop    edi
  411be3:	sub    edi,DWORD PTR [edi+0x39b1561c]
  411be9:	push   esp
  411bea:	(bad)  
  411beb:	jmp    0xa8a1:0xa16c570a
  411bf2:	xlat   BYTE PTR ds:[ebx]
  411bf3:	push   ds
  411bf4:	fnstcw WORD PTR [edx-0x68]
  411bf7:	sbb    bl,ch
  411bf9:	xor    eax,0x88a874c
  411bfe:	mov    ch,0xd1
  411c00:	and    al,0x7e
  411c02:	inc    edi
  411c03:	mov    ah,BYTE PTR ss:[edi-0x5bac6cd4]
  411c0a:	jle    0x411c68
  411c0c:	mov    ebx,0x2ef4c436
  411c11:	push   es
  411c12:	mov    bh,0xea
  411c14:	dec    ecx
  411c15:	xchg   DWORD PTR [ecx],ecx
  411c17:	add    cl,ch
  411c19:	xor    dl,BYTE PTR [esp+ebp*4]
  411c1c:	jnp    0x411bf5
  411c1e:	test   DWORD PTR [eax-0x639fac8c],edi
  411c24:	stos   BYTE PTR es:[edi],al
  411c25:	aas    
  411c26:	daa    
  411c27:	imul   esi,DWORD PTR [ebx],0xffffffcf
  411c2a:	xchg   edi,eax
  411c2b:	or     dh,BYTE PTR [ebx-0x11]
  411c2e:	dec    eax
  411c2f:	pop    ss
  411c30:	jecxz  0x411bbe
  411c32:	mov    WORD PTR [ebx],?
  411c34:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  411c36:	and    ch,al
  411c38:	xchg   BYTE PTR [esi],ch
  411c3a:	lds    esi,FWORD PTR [edi]
  411c3c:	sbb    edx,DWORD PTR [edx]
  411c3e:	inc    ebx
  411c3f:	repz sbb BYTE PTR [eax-0x7e],dh
  411c43:	xchg   edx,eax
  411c44:	loope  0x411c3a
  411c46:	sub    BYTE PTR [ecx-0x3a91cad7],bh
  411c4c:	inc    ebx
  411c4d:	je     0x411cc7
  411c4f:	add    eax,0x7833924a
  411c54:	cli    
  411c55:	sub    al,0x5d
  411c57:	jb     0x411bd9
  411c59:	das    
  411c5a:	push   esi
  411c5b:	fsub   st(2),st
  411c5d:	mov    cl,0xee
  411c5f:	int    0xf5
  411c61:	and    edi,DWORD PTR [esi-0x35f83fdd]
  411c67:	scas   eax,DWORD PTR es:[edi]
  411c68:	ss fsubrp st(4),st
  411c6b:	push   es
  411c6c:	ins    BYTE PTR es:[edi],dx
  411c6d:	jo     0x411bf1
  411c6f:	push   eax
  411c70:	jbe    0x411c8c
  411c72:	icebp  
  411c73:	shl    DWORD PTR [esi+0x59027fec],1
  411c79:	test   al,0x9
  411c7b:	(bad)  
  411c7c:	stos   DWORD PTR es:[edi],eax
  411c7d:	sbb    bl,bh
  411c7f:	outs   dx,DWORD PTR ds:[esi]
  411c80:	jo     0x411c15
  411c82:	mov    dl,0xa6
  411c84:	lea    esi,ds:0x1fad81e7
  411c8a:	push   cs
  411c8b:	(bad)  
  411c8c:	(bad)  
  411c8e:	sub    eax,0x99f76aff
  411c93:	mov    ebx,0x6f0e50cb
  411c98:	mov    al,0x11
  411c9a:	lahf   
  411c9b:	mov    edx,0x33c2e5f6
  411ca0:	dec    edx
  411ca1:	mov    al,0x9c
  411ca3:	mov    ecx,0x64899a12
  411ca8:	mov    ds:0x5fd97b3f,eax
  411cad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411cae:	mov    al,ds:0xa8efbd99
  411cb3:	into   
  411cb4:	pop    eax
  411cb5:	inc    edi
  411cb6:	mov    ecx,0x75d7f79
  411cbb:	inc    eax
  411cbc:	push   esi
  411cbd:	mov    eax,ds:0x56ea0af9
  411cc2:	ret    
  411cc3:	adc    esp,DWORD PTR ds:0xabc9e250
  411cc9:	je     0x411cc4
  411ccb:	mov    DWORD PTR [ebx+esi*1],ebp
  411cce:	push   ss
  411ccf:	sahf   
  411cd0:	outs   dx,DWORD PTR ds:[esi]
  411cd1:	pop    edx
  411cd2:	sbb    eax,0xfcbf7d06
  411cd7:	aam    0x50
  411cd9:	inc    edx
  411cda:	test   BYTE PTR [ebx],dh
  411cdc:	add    al,0xaf
  411cde:	outs   dx,BYTE PTR ds:[esi]
  411cdf:	lds    ecx,FWORD PTR [ecx-0x31f413b6]
  411ce5:	inc    esi
  411ce6:	jl     0x411d5a
  411ce8:	push   esi
  411ce9:	call   0xcf649b4e
  411cee:	and    BYTE PTR [eax-0x66],0x10
  411cf2:	push   ecx
  411cf3:	push   esi
  411cf4:	cdq    
  411cf5:	or     DWORD PTR [ebx-0xc],edx
  411cf8:	cmp    BYTE PTR [esi],ch
  411cfa:	(bad)  
  411cfb:	das    
  411cfc:	dec    ebp
  411cfd:	cmc    
  411cfe:	jo     0x411d05
  411d00:	pop    esi
  411d01:	das    
  411d02:	pop    ebp
  411d03:	and    ebp,DWORD PTR [edx-0x5a7104a3]
  411d09:	inc    ecx
  411d0a:	stos   DWORD PTR es:[edi],eax
  411d0b:	and    eax,0x81f32182
  411d10:	(bad)  
  411d11:	loopne 0x411cb3
  411d13:	sub    eax,0x9a059a71
  411d18:	loop   0x411cb7
  411d1a:	out    0x63,al
  411d1c:	call   0xe04b:0x97da16c4
  411d23:	pop    ds
  411d24:	cmp    ah,bl
  411d26:	jmp    0x66e512d9
  411d2b:	cdq    
  411d2c:	inc    ecx
  411d2d:	or     BYTE PTR [edx],cl
  411d2f:	xlat   BYTE PTR ds:[ebx]
  411d30:	add    edi,edi
  411d32:	xor    BYTE PTR [edi+0x6b5745d5],dh
  411d38:	daa    
  411d39:	adc    esi,DWORD PTR cs:[edx]
  411d3c:	cmc    
  411d3d:	test   BYTE PTR [esi+0x5be553cf],cl
  411d43:	sbb    BYTE PTR [ebx],0xe0
  411d46:	or     bl,dh
  411d48:	or     dh,dh
  411d4a:	loop   0x411dae
  411d4c:	sbb    eax,0xbdd19611
  411d51:	shl    ch,cl
  411d53:	push   esp
  411d54:	sbb    dh,ah
  411d56:	adc    eax,0x163cf1fb
  411d5b:	(bad)  
  411d5c:	stos   BYTE PTR es:[edi],al
  411d5d:	cmp    BYTE PTR [ecx],cl
  411d5f:	stos   DWORD PTR es:[edi],eax
  411d60:	sbb    bl,bl
  411d62:	sahf   
  411d63:	mov    es,WORD PTR [edi-0x3d]
  411d66:	sbb    eax,0x7c7359bf
  411d6b:	cmp    BYTE PTR ss:[eax+0x55],cl
  411d6f:	addps  xmm3,XMMWORD PTR [eax]
  411d72:	pop    eax
  411d73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d74:	pop    esi
  411d75:	loope  0x411d54
  411d77:	int3   
  411d78:	pop    ss
  411d79:	adc    eax,DWORD PTR ds:0x4abc4c49
  411d7f:	or     al,0x2e
  411d81:	jb     0x411d8d
  411d83:	jae    0x411d0c
  411d85:	or     BYTE PTR [ebp+0xfb6973b],bh
  411d8b:	leave  
  411d8c:	not    BYTE PTR [esi]
  411d8e:	bound  eax,QWORD PTR [ebx+edx*2]
  411d91:	int3   
  411d92:	popa   
  411d93:	pop    ss
  411d94:	test   al,0x28
  411d96:	hlt    
  411d97:	test   al,0xda
  411d99:	inc    ebp
  411d9a:	pop    esp
  411d9b:	sub    BYTE PTR [eax-0x2c],al
  411d9e:	mov    ebp,0xea080711
  411da3:	out    dx,al
  411da4:	cmovp  edx,DWORD PTR [esi]
  411da7:	imul   eax,DWORD PTR [ebp-0x19a512ae],0x61487a1
  411db1:	fcmovnb st,st(5)
  411db3:	pop    ecx
  411db4:	sub    eax,0xf84cf2f9
  411db9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411dba:	dec    ebx
  411dbb:	fimul  DWORD PTR [edi+ecx*2]
  411dbe:	enter  0x691d,0x5e
  411dc2:	xor    DWORD PTR [ebx],esi
  411dc4:	jno    0x411dc0
  411dc6:	int    0x9
  411dc8:	hlt    
  411dc9:	inc    edx
  411dca:	daa    
  411dcb:	inc    esp
  411dcc:	xlat   BYTE PTR ds:[ebx]
  411dcd:	push   ds
  411dce:	pushf  
  411dcf:	push   0x34
  411dd1:	dec    esi
  411dd2:	push   edx
  411dd3:	nop
  411dd4:	inc    ebx
  411dd5:	(bad)  
  411dd6:	and    ch,BYTE PTR [edi+ebx*2]
  411dd9:	in     al,dx
  411dda:	xor    eax,0x1d09258
  411ddf:	cmp    ch,ah
  411de1:	dec    eax
  411de2:	xchg   BYTE PTR [eax+0x39],ah
  411de5:	sub    eax,0x5ef016e6
  411dea:	dec    esi
  411deb:	sub    al,0x87
  411ded:	arpl   WORD PTR [edx],bx
  411def:	data16 out dx,al
  411df1:	or     al,0xb6
  411df3:	mov    al,0x49
  411df5:	jecxz  0x411e13
  411df7:	retf   
  411df8:	stos   BYTE PTR es:[edi],al
  411df9:	hlt    
  411dfa:	mov    edi,0xcc4e1d6
  411dff:	mov    bh,0x7d
  411e01:	je     0x411d9b
  411e03:	jl     0x411da0
  411e05:	push   edi
  411e06:	mov    edx,0xcd112773
  411e0b:	xor    eax,0x1af21c7a
  411e10:	push   ecx
  411e11:	(bad)  
  411e12:	and    cl,BYTE PTR [edi]
  411e14:	and    BYTE PTR [esi+ebp*1-0x34],ch
  411e18:	mov    ebx,0x21f54084
  411e1d:	lods   al,BYTE PTR ds:[esi]
  411e1e:	addr16 xchg edi,eax
  411e20:	retf   
  411e21:	mov    dh,0x56
  411e23:	mov    dh,0x21
  411e25:	adc    BYTE PTR [esi-0x31ce6a72],ah
  411e2b:	sub    bl,BYTE PTR [ecx+0x71ac5e94]
  411e31:	imul   esp,DWORD PTR [ebp+0x4a],0xf05d9356
  411e38:	leave  
  411e39:	xor    cl,BYTE PTR ds:0x9d551bf6
  411e3f:	sub    eax,0xd8d578ab
  411e44:	pop    esp
  411e45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e46:	cdq    
  411e47:	jns    0x411ec5
  411e49:	add    esp,esi
  411e4b:	aas    
  411e4c:	icebp  
  411e4d:	test   dh,dh
  411e4f:	stos   BYTE PTR es:[edi],al
  411e50:	jp     0x411ed0
  411e52:	jnp    0x411e13
  411e54:	xchg   ebx,eax
  411e55:	inc    ebp
  411e56:	mov    dl,0x50
  411e58:	jbe    0x411e96
  411e5a:	sbb    al,0xfc
  411e5c:	sti    
  411e5d:	mov    edx,0x5b1640a
  411e62:	or     ch,bl
  411e64:	clc    
  411e65:	mov    ebx,0xc4d0f26
  411e6a:	repnz push ebp
  411e6c:	xor    BYTE PTR [eax-0x61],dl
  411e6f:	inc    ebp
  411e70:	(bad)  
  411e71:	jbe    0x411e09
  411e73:	adc    eax,0xe4418956
  411e78:	(bad)  
  411e79:	iret   
  411e7a:	fisttp QWORD PTR [ebp+0x51]
  411e7d:	and    dl,BYTE PTR [ebx-0x66]
  411e80:	sub    ch,dl
  411e82:	neg    BYTE PTR [edx-0x700d93c1]
  411e88:	push   ebp
  411e89:	adc    edx,DWORD PTR [eax-0x1806be50]
  411e8f:	out    dx,eax
  411e90:	jmp    0x8dcd:0x22a998d2
  411e97:	or     DWORD PTR [edi-0x78b55977],0xbb87c4e5
  411ea1:	push   0x67
  411ea3:	jne    0x411e47
  411ea5:	stc    
  411ea6:	cld    
  411ea7:	loope  0x411eba
  411ea9:	jns    0x411e9a
  411eab:	mov    ecx,0x726fb70
  411eb0:	pusha  
  411eb1:	gs daa 
  411eb3:	imul   ebx,eax,0x23
  411eb6:	stos   DWORD PTR es:[edi],eax
  411eb7:	ret    0x8068
  411eba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ebb:	std    
  411ebc:	mov    BYTE PTR [eax],dh
  411ebe:	jb     0x411e41
  411ec0:	dec    ebp
  411ec1:	dec    edx
  411ec2:	daa    
  411ec3:	dec    edi
  411ec4:	xlat   BYTE PTR ds:[ebx]
  411ec5:	dec    ebp
  411ec7:	sbb    cl,bl
  411ec9:	and    bh,BYTE PTR [esi]
  411ecb:	xchg   ecx,eax
  411ecc:	mov    ?,eax
  411ece:	cmp    bl,BYTE PTR gs:[ecx+0x7f24b8cb]
  411ed5:	pushw  es
  411ed7:	in     eax,dx
  411ed8:	in     al,0xe9
  411eda:	test   DWORD PTR [edi+eiz*1-0xac7cf7c],edi
  411ee1:	dec    eax
  411ee2:	sub    esp,DWORD PTR [esp+eiz*8]
  411ee5:	or     DWORD PTR [edi+0x2f],ecx
  411ee8:	cmc    
  411ee9:	gs inc esi
  411eeb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411eec:	mov    al,ds:0xed6b00d0
  411ef1:	push   edi
  411ef2:	sub    BYTE PTR [esi],bh
  411ef4:	xor    esi,0xffffffd8
  411ef7:	bound  eax,QWORD PTR [ebp+0x47006aa7]
  411efd:	nop
  411efe:	cli    
  411eff:	std    
  411f00:	int3   
  411f01:	sub    DWORD PTR [eax+0x6e],edx
  411f04:	push   eax
  411f05:	repz dec esi
  411f07:	jmp    0xacdd:0xc1cf2252
  411f0e:	inc    ecx
  411f0f:	and    ebp,edi
  411f11:	push   ds
  411f12:	test   BYTE PTR [ecx+0x11],bl
  411f15:	jecxz  0x411e99
  411f17:	in     eax,0x4f
  411f19:	push   cs
  411f1a:	sub    BYTE PTR [ebx+eiz*1-0x7d2a393f],dh
  411f21:	mov    fs,WORD PTR [ebx-0x3a]
  411f24:	cmp    esi,ebx
  411f26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f27:	cld    
  411f28:	cld    
  411f29:	sub    al,BYTE PTR [edi+edx*1+0x7d]
  411f2d:	push   0x4a693634
  411f32:	pop    ebx
  411f33:	xchg   cl,ch
  411f35:	mov    DWORD PTR [ecx-0xc],edx
  411f38:	cmc    
  411f39:	in     al,0xc4
  411f3b:	cld    
  411f3c:	test   DWORD PTR [ecx-0x4],ecx
  411f3f:	aad    0x6b
  411f41:	jmp    0x4bae3499
  411f46:	out    0x6d,al
  411f48:	jo     0x411f05
  411f4a:	aad    0x67
  411f4c:	adc    eax,0x380904f1
  411f51:	dec    esi
  411f52:	add    esi,DWORD PTR [ebp-0x7f]
  411f55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f56:	jle    0x411fb4
  411f58:	xor    al,ah
  411f5a:	add    ecx,DWORD PTR [ecx+0x70]
  411f5d:	or     bl,BYTE PTR [edx]
  411f5f:	sti    
  411f60:	ror    ah,1
  411f62:	icebp  
  411f63:	push   0xffffffa2
  411f65:	cdq    
  411f66:	inc    ecx
  411f67:	jmp    0xb31d4f81
  411f6c:	xor    bl,BYTE PTR [esp+esi*4-0xd]
  411f70:	sub    eax,0x38ff4542
  411f75:	sbb    BYTE PTR [edx+0x71962bcd],dl
  411f7b:	sub    al,0x22
  411f7d:	(bad)  
  411f7e:	clc    
  411f7f:	jp     0x411f27
  411f81:	in     eax,0x9b
  411f83:	je     0x411f25
  411f85:	shl    ebp,1
  411f87:	jl     0x411ffc
  411f89:	push   ebx
  411f8a:	jle    0x411fd6
  411f8c:	imul   esp,DWORD PTR [edx+0x34],0x5b241981
  411f93:	ds xchg esi,eax
  411f95:	dec    esp
  411f96:	neg    BYTE PTR [ecx-0x4a1985e9]
  411f9c:	std    
  411f9d:	ins    BYTE PTR es:[edi],dx
  411f9e:	xchg   esi,eax
  411f9f:	loope  0x411f62
  411fa1:	rcl    DWORD PTR [esi],cl
  411fa3:	cmp    dl,dh
  411fa5:	retf   0x5729
  411fa8:	fwait
  411fa9:	xor    eax,DWORD PTR [ebp+edi*4+0x68]
  411fad:	sub    dh,cl
  411faf:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  411fb1:	pop    ecx
  411fb2:	adc    eax,DWORD PTR [eax-0x3dab37e4]
  411fb8:	std    
  411fb9:	inc    edx
  411fba:	jecxz  0x411fd9
  411fbc:	sbb    edx,DWORD PTR [ebx+0x88792c2]
  411fc2:	and    eax,0xbbd0d578
  411fc7:	in     al,0xcb
  411fc9:	fnsave [edi+0x39317b41]
  411fcf:	lods   eax,DWORD PTR ds:[esi]
  411fd0:	pop    es
  411fd1:	sahf   
  411fd2:	(bad)  
  411fd3:	add    esp,esp
  411fd5:	push   ebp
  411fd6:	arpl   WORD PTR [edx],ax
  411fd8:	stos   BYTE PTR es:[edi],al
  411fd9:	push   ebp
  411fda:	and    dl,ch
  411fdc:	xor    ebp,DWORD PTR [ebp-0x7ea49e82]
  411fe2:	add    DWORD PTR [edx-0x4d],edi
  411fe5:	sahf   
  411fe6:	pushf  
  411fe7:	mov    DWORD PTR [ebx-0x297a97f6],0x6b043452
  411ff1:	iret   
  411ff2:	stc    
  411ff3:	call   0x85113162
  411ff8:	mov    esp,0x4e06104c
  411ffd:	mov    al,ch
  411fff:	adc    eax,0xc8296e55
  412004:	mov    ebx,0x8c08414a
  412009:	mov    ch,al
  41200b:	ds ins BYTE PTR es:[edi],dx
  41200d:	sbb    al,0x7d
  41200f:	pop    edx
  412010:	(bad)  
  412011:	(bad)  
  412012:	ja     0x411ffa
  412014:	mov    cl,0xa9
  412016:	fstp   QWORD PTR [eax+0x7a2f71b1]
  41201c:	ds scas al,BYTE PTR es:[edi]
  41201e:	cmp    bh,cl
  412020:	loop   0x411fbc
  412022:	inc    ebp
  412023:	test   DWORD PTR es:[esp+eax*8+0x5dd705ae],0x77a8c500
  41202f:	pop    DWORD PTR [edi]
  412031:	xchg   dl,bl
  412033:	fwait
  412034:	mov    dl,ch
  412036:	jg     0x41209c
  412038:	in     al,dx
  412039:	cmp    al,0xa3
  41203b:	call   0x26cdde39
  412040:	shl    ecx,cl
  412042:	std    
  412043:	stos   BYTE PTR es:[edi],al
  412044:	and    al,0xf8
  412046:	adc    al,0x0
  412048:	cmp    eax,0x88cf3c27
  41204d:	inc    ecx
  41204e:	xor    edx,esp
  412050:	sub    eax,0x560c8813
  412055:	sub    esp,0xe6c3051c
  41205b:	push   edi
  41205c:	int3   
  41205d:	inc    edx
  41205e:	call   FWORD PTR [edi+0x30]
  412061:	xchg   ebx,eax
  412062:	ss stos BYTE PTR es:[edi],al
  412064:	jae    0x4120b8
  412066:	(bad)  
  412067:	(bad)  
  412068:	sub    eax,0x4057eb37
  41206d:	dec    esi
  41206e:	cmp    BYTE PTR [edx],ah
  412070:	or     al,0x48
  412072:	jle    0x412032
  412074:	ins    DWORD PTR es:[edi],dx
  412075:	and    eax,0x48d4fe35
  41207a:	pop    ss
  41207b:	repz xor DWORD PTR [ebx],edi
  41207e:	pop    eax
  41207f:	pusha  
  412080:	hlt    
  412081:	mov    dl,0x28
  412083:	push   ebx
  412084:	rcl    DWORD PTR [esp+esi*2+0x30680ca6],1
  41208b:	mov    ecx,0xeeb792c0
  412090:	jmp    0x6108f226
  412095:	cs or  eax,0xcd56418d
  41209b:	imul   ecx,edi,0x38
  41209e:	xchg   BYTE PTR [esp+edx*4],al
  4120a1:	and    DWORD PTR es:[ebx],ecx
  4120a4:	pop    edx
  4120a5:	xor    al,0x3e
  4120a7:	outs   dx,BYTE PTR ds:[esi]
  4120a8:	mov    WORD PTR [edx],es
  4120aa:	push   0x13bafe81
  4120af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4120b0:	cmp    BYTE PTR [eax],0x8b
  4120b3:	sbb    edx,0xfffffff7
  4120b6:	retf   
  4120b7:	fwait
  4120b8:	cmc    
  4120b9:	imul   edi,DWORD PTR [ecx+0x4a3d6eeb],0xffffffed
  4120c0:	and    edx,eax
  4120c2:	inc    edi
  4120c3:	pop    esi
  4120c4:	add    ecx,edi
  4120c6:	(bad)  
  4120c7:	or     edi,DWORD PTR ds:0x6767f594
  4120cd:	adc    BYTE PTR [ecx-0x41c5d6fc],bh
  4120d3:	cmp    eax,DWORD PTR [esi]
  4120d5:	jecxz  0x4120aa
  4120d7:	jecxz  0x41214a
  4120d9:	aad    0x29
  4120db:	cld    
  4120dc:	cmp    bl,ah
  4120de:	jmp    0xe5dddaab
  4120e3:	aas    
  4120e4:	aad    0xbe
  4120e6:	pop    edi
  4120e7:	dec    esp
  4120e8:	and    eax,eax
  4120ea:	jns    0x4120f9
  4120ec:	hlt    
  4120ed:	xor    eax,0x83969074
  4120f2:	es popa 
  4120f4:	arpl   WORD PTR [ecx],bp
  4120f6:	or     dl,BYTE PTR [ebp-0x3]
  4120f9:	jmp    DWORD PTR [edi+0x34c98f61]
  4120ff:	cmp    DWORD PTR [eax+0x5a],esp
  412102:	push   0x403bb68
  412107:	(bad)  
  412108:	rol    BYTE PTR [ebx+esi*1],0xb0
  41210c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41210d:	xor    BYTE PTR [edi+0x2474d1b1],dh
  412113:	mov    esi,0xcb0a34aa
  412118:	stc    
  412119:	inc    esp
  41211a:	and    eax,0xaa9aaf96
  41211f:	mov    fs,WORD PTR [edi+ebx*4]
  412122:	mov    ss,WORD PTR [ebp-0x17]
  412125:	xor    al,0xeb
  412127:	inc    esp
  412128:	inc    eax
  412129:	push   ds
  41212a:	inc    ecx
  41212b:	and    esp,DWORD PTR [edi+0x63]
  41212e:	pusha  
  41212f:	aaa    
  412130:	jg     0x41218d
  412132:	imul   ebx,DWORD PTR [eax],0x1
  412135:	pop    ss
  412136:	jb     0x4121ad
  412138:	hlt    
  412139:	mov    dl,0x46
  41213b:	dec    esp
  41213c:	push   esi
  41213d:	or     bl,BYTE PTR [edx]
  41213f:	leave  
  412140:	dec    ecx
  412141:	xchg   ebx,eax
  412142:	aam    0xc2
  412144:	imul   ebp,DWORD PTR [ecx],0x10
  412147:	sub    BYTE PTR [esi+0x4a],ch
  41214a:	xlat   BYTE PTR ds:[ebx]
  41214b:	out    0x40,eax
  41214d:	sub    al,0x1c
  41214f:	xchg   ecx,eax
  412150:	sbb    bl,BYTE PTR [esi+0x443bd53a]
  412156:	test   DWORD PTR [edi-0x7574d282],eax
  41215c:	mov    eax,ds:0x630d2eef
  412161:	adc    edx,DWORD PTR [ecx]
  412163:	xchg   edx,eax
  412164:	aad    0xc5
  412166:	and    dl,BYTE PTR [bx+si-0x4e7e]
  41216b:	outs   dx,BYTE PTR ds:[esi]
  41216c:	in     eax,dx
  41216d:	push   ss
  41216e:	adc    BYTE PTR [edi],ah
  412170:	mov    DWORD PTR [ecx-0x4c],ecx
  412173:	(bad)  
  412174:	pop    esp
  412175:	jae    0x412125
  412177:	xchg   bp,ax
  412179:	adc    BYTE PTR [ecx+0x5a856aed],0x81
  412180:	ret    0x84de
  412183:	imul   esi,esi,0x6ddb848c
  412189:	mov    esi,0xbdca272
  41218e:	xchg   edi,eax
  41218f:	jno    0x4121c8
  412191:	or     DWORD PTR [edx],eax
  412193:	cmp    DWORD PTR [edi],eax
  412195:	es add al,0x8d
  412198:	shr    BYTE PTR [ecx],1
  41219a:	adc    eax,0x211b5e18
  41219f:	cmp    al,0x67
  4121a1:	enter  0x40cc,0x47
  4121a5:	or     esi,DWORD PTR [ebx-0x18]
  4121a8:	das    
  4121a9:	sti    
  4121aa:	(bad)  
  4121ab:	jns    0x412149
  4121ad:	stos   DWORD PTR es:[edi],eax
  4121ae:	cmp    al,0x3e
  4121b0:	in     eax,dx
  4121b1:	jmp    0x2a016eab
  4121b6:	jbe    0x4121be
  4121b8:	repnz add bl,BYTE PTR [edx]
  4121bb:	pop    ebx
  4121bc:	jae    0x412196
  4121be:	ret    
  4121bf:	ret    
  4121c0:	repz scas al,BYTE PTR es:[edi]
  4121c2:	psrld  mm5,QWORD PTR [eax]
  4121c5:	call   0xb8574eb8
  4121ca:	scas   eax,DWORD PTR es:[edi]
  4121cb:	js     0x412206
  4121cd:	mov    ch,0x8c
  4121cf:	lsl    esi,WORD PTR [ebp-0xc]
  4121d3:	dec    esi
  4121d4:	test   al,0x23
  4121d6:	popa   
  4121d7:	in     eax,0xd4
  4121d9:	test   BYTE PTR ds:0xcaf83ce7,ch
  4121df:	or     cl,BYTE PTR [eax]
  4121e1:	add    ebp,DWORD PTR [edi-0x70252caf]
  4121e7:	mov    ecx,0x91181d52
  4121ec:	add    BYTE PTR [ebx+edx*1+0xb89634d],bh
  4121f3:	scas   al,BYTE PTR es:[edi]
  4121f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4121f5:	outs   dx,BYTE PTR ds:[esi]
  4121f6:	into   
  4121f7:	test   al,0xe
  4121f9:	xchg   edx,eax
  4121fa:	xor    bh,BYTE PTR ds:0xd4eba315
  412200:	shr    ebx,0x96
  412203:	inc    ebx
  412204:	xchg   esp,eax
  412205:	mov    ds:0xdd1ee420,al
  41220a:	pop    esi
  41220b:	out    0xac,eax
  41220d:	clc    
  41220e:	xor    eax,0x284d4352
  412213:	fild   WORD PTR [esi]
  412215:	mov    edi,fs
  412217:	test   eax,0xf1a6d210
  41221c:	xor    esi,DWORD PTR [edx-0x64]
  41221f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412220:	inc    ebp
  412221:	sub    eax,0x76a6ff20
  412226:	js     0x412244
  412228:	xor    DWORD PTR ds:0x27eaae4d,edx
  41222e:	pop    es
  41222f:	int3   
  412230:	pop    ss
  412231:	adc    eax,0x8d32e50d
  412236:	add    cl,ah
  412238:	mov    dl,0x8e
  41223a:	and    ebx,DWORD PTR [eax-0x4]
  41223d:	dec    ecx
  41223e:	(bad)  
  41223f:	out    0x22,al
  412241:	out    dx,eax
  412242:	or     bh,BYTE PTR [edi-0x42]
  412245:	sub    DWORD PTR [eax],0x34
  412248:	mov    WORD PTR [eax-0x629a5982],fs
  41224e:	jle    0x41221d
  412250:	test   BYTE PTR [esi],al
  412252:	lods   eax,DWORD PTR ds:[esi]
  412253:	and    DWORD PTR [eax+esi*8-0x5e],ebx
  412257:	xchg   esp,eax
  412258:	sub    al,cl
  41225a:	mov    esp,0x98cc2f10
  41225f:	pop    esi
  412260:	ret    
  412261:	(bad)  
  412262:	loopne 0x412247
  412264:	xor    DWORD PTR [esi*8-0x37d5641c],ebx
  41226b:	push   esi
  41226c:	stos   BYTE PTR es:[edi],al
  41226d:	test   al,0x20
  41226f:	inc    eax
  412270:	ret    
  412271:	add    ch,BYTE PTR [edx-0x4e]
  412274:	mov    WORD PTR [edx+0x6b],ss
  412277:	in     al,dx
  412278:	lock ret 
  41227a:	shr    eax,cl
  41227c:	ins    BYTE PTR es:[edi],dx
  41227d:	sti    
  41227e:	push   ss
  41227f:	jp     0x4122e2
  412281:	or     DWORD PTR [edx+0x51],ebp
  412284:	jne    0x41221b
  412286:	inc    eax
  412287:	add    cl,cl
  412289:	pop    ds
  41228a:	mov    ebx,edx
  41228c:	std    
  41228d:	enter  0x675b,0xf4
  412291:	xchg   esp,eax
  412292:	pop    edi
  412293:	and    al,0x1f
  412295:	ds dec ecx
  412297:	add    ch,dh
  412299:	(bad)  
  41229b:	ds xchg ecx,eax
  41229d:	bound  esi,QWORD PTR [ecx+0x34]
  4122a0:	push   es
  4122a1:	or     ecx,0xa2fcc930
  4122a7:	xchg   esi,eax
  4122a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4122a9:	add    ebp,0xffffff88
  4122ac:	mov    ch,ch
  4122ae:	sub    BYTE PTR [ecx],dl
  4122b0:	pop    eax
  4122b1:	dec    ebp
  4122b2:	call   0x158d7ad1
  4122b7:	pusha  
  4122b8:	adc    BYTE PTR [ebx],ah
  4122ba:	pop    ecx
  4122bb:	cmp    al,0xf
  4122bd:	add    edx,ecx
  4122bf:	inc    esi
  4122c0:	jbe    0x4122d4
  4122c2:	mov    ah,0xef
  4122c4:	sbb    al,BYTE PTR [edi-0x6e77396c]
  4122ca:	adc    DWORD PTR [edi+0x16443bf2],0xffffffb8
  4122d1:	adc    eax,0x66fe96e6
  4122d6:	xor    DWORD PTR ds:0x48be632,esp
  4122dc:	out    dx,al
  4122dd:	int    0x25
  4122df:	add    BYTE PTR [ecx-0x15],ch
  4122e2:	daa    
  4122e3:	lea    eax,[edx+0x1bf86738]
  4122e9:	jb     0x412270
  4122eb:	add    al,0x81
  4122ed:	pop    ds
  4122ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4122ef:	mov    ds:0x17c3d3eb,al
  4122f4:	imul   ebp,DWORD PTR [edi],0x545302ec
  4122fa:	(bad)  
  4122fb:	retf   
  4122fc:	dec    edx
  4122fd:	int    0xfe
  4122ff:	sahf   
  412300:	fs cmp eax,0xe860dc1c
  412306:	dec    ecx
  412307:	stc    
  412308:	out    0xe,al
  41230a:	or     eax,0x99b6a3ec
  41230f:	cmp    esi,edx
  412311:	nop
  412312:	in     eax,0xfc
  412314:	int    0x20
  412316:	retf   0xc518
  412319:	jp     0x4122f1
  41231b:	in     eax,0x71
  41231d:	add    ecx,esp
  41231f:	fmul   QWORD PTR [ebx-0x17fe3e67]
  412325:	adc    al,0xf7
  412327:	add    al,0xb1
  412329:	inc    ecx
  41232a:	(bad)  
  41232b:	mov    ds:0x8fff7d3f,eax
  412330:	iret   
  412331:	cwde   
  412332:	lock rol DWORD PTR [edx+edi*8+0x45],0x94
  412338:	push   ecx
  412339:	xlat   BYTE PTR ds:[ebx]
  41233a:	(bad)  
  41233b:	in     eax,0x81
  41233d:	xor    eax,0xabf6cc8f
  412342:	(bad)  
  412343:	bound  edi,QWORD PTR [ecx]
  412345:	mov    dh,0xfe
  412347:	sub    eax,0x4897fa9b
  41234c:	repz xchg ebx,eax
  41234e:	sub    edi,DWORD PTR ds:0xcd385bb2
  412354:	push   es
  412355:	nop
  412356:	push   ebx
  412357:	mov    ebx,0xc4d54089
  41235c:	mov    dl,0x61
  41235e:	or     DWORD PTR [edx],eax
  412360:	out    dx,eax
  412361:	fistp  WORD PTR [esi]
  412363:	andnps xmm6,XMMWORD PTR [ebp+ecx*1-0x7c]
  412368:	outs   dx,BYTE PTR ds:[esi]
  412369:	fild   WORD PTR [edx+0x6b]
  41236c:	popa   
  41236d:	inc    esp
  41236e:	test   al,0xc9
  412370:	cld    
  412371:	scas   al,BYTE PTR es:[edi]
  412372:	push   ebp
  412373:	jecxz  0x412319
  412375:	enter  0xed2e,0xb3
  412379:	and    al,BYTE PTR [ecx]
  41237b:	fnstcw WORD PTR [edi+0x4d]
  41237e:	ror    ecx,1
  412380:	outs   dx,DWORD PTR ds:[esi]
  412381:	dec    edi
  412382:	jl     0x4123fa
  412384:	sub    edi,DWORD PTR [esi+0x6e3fb0a8]
  41238a:	jae    0x41235e
  41238c:	sti    
  41238d:	aaa    
  41238e:	test   eax,0x11448424
  412393:	mov    edx,0xb0e56a79
  412398:	jno    0x4123b3
  41239a:	out    dx,al
  41239b:	fsubr  DWORD PTR [esi-0x128575dd]
  4123a1:	icebp  
  4123a2:	dec    ecx
  4123a3:	dec    edi
  4123a4:	xlat   BYTE PTR ds:[ebx]
  4123a5:	adc    ecx,DWORD PTR [ecx+0x460d7c17]
  4123ab:	push   ecx
  4123ac:	repnz (bad) 
  4123ae:	and    edi,ecx
  4123b0:	mov    ds:0x1e96bea,al
  4123b5:	out    0x18,eax
  4123b7:	mov    edi,0x2ba89587
  4123bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4123bd:	in     al,0xe5
  4123bf:	jo     0x412438
  4123c1:	sbb    BYTE PTR [edi+0x76499f3e],ah
  4123c7:	jae    0x4123b1
  4123c9:	adc    BYTE PTR [eax-0xe],dh
  4123cc:	sub    eax,0x4c32c232
  4123d2:	into   
  4123d3:	cwde   
  4123d4:	ret    0xb6a4
  4123d7:	mov    ecx,0x6f5952d9
  4123dc:	out    0x7,al
  4123de:	and    al,0x8d
  4123e0:	clc    
  4123e1:	cmp    al,BYTE PTR [eax-0x5cf29799]
  4123e7:	mov    BYTE PTR ds:0x3c72638b,ah
  4123ed:	inc    esp
  4123ee:	inc    esp
  4123ef:	sub    edi,edx
  4123f1:	aas    
  4123f2:	shl    esi,1
  4123f4:	mov    eax,ds:0xa6f6df00
  4123f9:	sub    eax,0xc21753e8
  4123fe:	fwait
  4123ff:	je     0x4123eb
  412401:	ins    DWORD PTR es:[edi],dx
  412402:	mov    cl,0x5a
  412404:	nop
  412405:	pop    edi
  412406:	ja     0x41239c
  412408:	cld    
  412409:	lods   al,BYTE PTR ds:[esi]
  41240a:	adc    DWORD PTR [esi+0x2c],edx
  41240d:	bound  esp,QWORD PTR [ecx-0x5e05c398]
  412413:	(bad)  
  412414:	in     al,dx
  412415:	(bad)  
  412416:	cmp    ch,BYTE PTR [esi]
  412418:	mov    al,0xca
  41241a:	loop   0x4123d3
  41241c:	adc    dl,BYTE PTR [ecx]
  41241e:	xchg   DWORD PTR [ebx],ecx
  412420:	cmp    bl,bl
  412422:	stos   BYTE PTR es:[edi],al
  412423:	leave  
  412424:	mov    ah,0xd6
  412426:	ins    BYTE PTR es:[edi],dx
  412427:	xlat   BYTE PTR ds:[ebx]
  412428:	or     al,0xd3
  41242a:	in     eax,dx
  41242b:	and    eax,0xc49b45f9
  412430:	(bad)  
  412431:	outs   dx,DWORD PTR ds:[esi]
  412432:	in     eax,0x95
  412434:	jb     0x412474
  412436:	je     0x412487
  412438:	das    
  412439:	test   esi,ebp
  41243b:	push   0xffffffbc
  41243d:	jge    0x412436
  41243f:	adc    edx,DWORD PTR [esi-0x25a71808]
  412445:	jo     0x412440
  412447:	mov    esp,0x88fc7b78
  41244c:	pop    esi
  41244d:	mov    edx,0xd40071d8
  412452:	mul    DWORD PTR [edx-0x451de77f]
  412458:	push   edx
  412459:	sub    WORD PTR [ebx],cx
  41245c:	mov    edi,DWORD PTR [esi-0x1]
  41245f:	jmp    0x4054:0xe127ab1f
  412466:	ins    BYTE PTR es:[edi],dx
  412467:	sahf   
  412468:	mov    eax,0xac281044
  41246d:	xor    DWORD PTR [ecx+0x22],esi
  412470:	ss inc esp
  412472:	dec    ecx
  412473:	aad    0xb9
  412475:	outs   dx,DWORD PTR ds:[esi]
  412476:	sbb    eax,0xe1df8cfd
  41247b:	retf   0x7460
  41247e:	sbb    BYTE PTR [ebx+0x9dd2a87],ah
  412484:	sub    eax,0x511f8538
  412489:	mov    dl,0x29
  41248b:	cmp    ecx,DWORD PTR [esi-0x647e4187]
  412491:	jmp    0x100b:0xac8bc25d
  412498:	and    ebp,ebp
  41249a:	cld    
  41249b:	fimul  WORD PTR [edx]
  41249d:	test   BYTE PTR [esi],ch
  41249f:	fwait
  4124a0:	out    0x3c,al
  4124a2:	enter  0xc40c,0x17
  4124a6:	push   edi
  4124a7:	cdq    
  4124a8:	sbb    ah,al
  4124aa:	shl    DWORD PTR [ecx-0x79f8ec2b],0x8c
  4124b1:	jge    0x412470
  4124b3:	pop    edx
  4124b4:	lea    ebx,[edx]
  4124b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4124b7:	fcomp  st(3)
  4124b9:	bound  ecx,QWORD PTR [ebx]
  4124bb:	sar    BYTE PTR [ebp-0x55],0x4d
  4124bf:	fwait
  4124c0:	bound  esp,QWORD PTR [ecx+0x6727584e]
  4124c6:	das    
  4124c7:	mov    WORD PTR [ebx],ss
  4124c9:	mov    ebx,0x3141669e
  4124ce:	pop    ebx
  4124cf:	adc    al,0x73
  4124d1:	xchg   BYTE PTR [esi-0x75],dh
  4124d4:	sbb    BYTE PTR [ebx-0x5b],al
  4124d7:	test   DWORD PTR [edi+0x19],ecx
  4124da:	add    esp,DWORD PTR ds:0x4752a8bb
  4124e0:	add    esi,edi
  4124e2:	sub    al,0x39
  4124e4:	(bad)  
  4124e5:	rcl    BYTE PTR [ecx],1
  4124e7:	lds    esi,FWORD PTR [eax-0x78]
  4124ea:	aaa    
  4124eb:	mov    BYTE PTR ds:0x9f4881bf,ch
  4124f1:	mov    ebx,0xebddec94
  4124f6:	pop    ss
  4124f7:	ficomp WORD PTR [edx-0x78]
  4124fa:	cli    
  4124fb:	push   ecx
  4124fc:	les    ecx,FWORD PTR [ebp+0x142df39c]
  412502:	adc    DWORD PTR [ecx+0x8],ebp
  412505:	daa    
  412506:	sbb    eax,0x73ac1bd0
  41250b:	cmp    BYTE PTR [esi+0x6ec8844d],cl
  412511:	aaa    
  412512:	and    esi,DWORD PTR [ebp+0x8]
  412515:	imul   ebx,DWORD PTR ds:0xa19b9424,0x803ad787
  41251f:	jmp    0x4124da
  412521:	xchg   DWORD PTR [ecx-0x2ba206df],ebx
  412527:	in     eax,0x0
  412529:	mov    ebx,0xab5bd90d
  41252e:	fs popa 
  412530:	mov    edi,0x9d2f9636
  412535:	retf   0xa091
  412538:	sub    DWORD PTR [edx],ebp
  41253a:	repnz mov eax,0x193818b7
  412540:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412541:	xor    ebp,edi
  412543:	push   esi
  412544:	pop    ebx
  412545:	jl     0x4124dc
  412547:	out    0x55,eax
  412549:	out    dx,eax
  41254a:	stos   BYTE PTR es:[edi],al
  41254b:	leave  
  41254c:	jg     0x412583
  41254e:	sub    DWORD PTR [edi+0x4e],0x3e48c194
  412555:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412556:	xchg   ecx,eax
  412557:	cli    
  412558:	stos   BYTE PTR es:[edi],al
  412559:	icebp  
  41255a:	mov    dl,0x4a
  41255c:	daa    
  41255d:	icebp  
  41255e:	mov    esp,0x6527e37c
  412563:	adc    bl,BYTE PTR [esi+0x31]
  412566:	test   BYTE PTR [edi],cl
  412568:	pop    es
  412569:	cmp    DWORD PTR [edx+edi*4-0x16],0xcd4dad23
  412571:	cld    
  412572:	popf   
  412573:	ror    ch,cl
  412575:	int    0x61
  412577:	ret    
  412578:	xchg   esp,eax
  412579:	je     0x412586
  41257b:	inc    edi
  41257c:	ins    BYTE PTR es:[edi],dx
  41257d:	les    edx,FWORD PTR [esi-0x928100b]
  412583:	(bad)  [edi]
  412585:	jmp    0x412562
  412587:	(bad)  
  412588:	fisubr DWORD PTR [ecx]
  41258a:	jp     0x412523
  41258c:	push   esp
  41258d:	cmp    DWORD PTR [esi],esp
  41258f:	into   
  412590:	(bad)  
  412591:	gs in  al,dx
  412593:	mov    ebx,0x99518f31
  412598:	ror    BYTE PTR [ecx+0x11],0x3e
  41259c:	mov    dl,0x52
  41259e:	mov    dl,0x16
  4125a0:	or     ch,cl
  4125a2:	lock inc esp
  4125a4:	std    
  4125a5:	add    ebx,DWORD PTR [ecx-0x7f]
  4125a8:	(bad)  
  4125a9:	retf   0xa276
  4125ac:	adc    BYTE PTR [ebx-0x22],al
  4125af:	xchg   ebx,eax
  4125b0:	aad    0xaa
  4125b2:	inc    edx
  4125b3:	xor    DWORD PTR [eax-0x3038d1cb],esp
  4125b9:	inc    BYTE PTR [edi]
  4125bb:	push   ss
  4125bc:	cmp    eax,0x598a17d1
  4125c1:	fwait
  4125c2:	outs   dx,DWORD PTR ds:[esi]
  4125c3:	int    0xa3
  4125c5:	cmp    ah,BYTE PTR cs:[edx-0x4747fda]
  4125cc:	outs   dx,DWORD PTR ds:[esi]
  4125cd:	jbe    0x412585
  4125cf:	pop    esi
  4125d0:	(bad)  
  4125d1:	fadd   QWORD PTR [ebx+ebp*1+0x7ee1eabb]
  4125d8:	push   ds
  4125d9:	bound  edx,QWORD PTR [edi+0x633614ca]
  4125df:	push   ecx
  4125e0:	jo     0x41257f
  4125e2:	dec    ecx
  4125e3:	and    BYTE PTR [edx+0x22],ch
  4125e6:	pop    ss
  4125e7:	fwait
  4125e8:	sahf   
  4125e9:	inc    edi
  4125ea:	jg     0x41259c
  4125ec:	mov    bl,0x6a
  4125ee:	or     DWORD PTR ds:0x493bca99,ecx
  4125f4:	adc    edi,DWORD PTR [edx-0x78]
  4125f7:	idiv   DWORD PTR [ecx-0x73bfe30e]
  4125fd:	push   esp
  4125fe:	cmc    
  4125ff:	call   0x12dc:0xe88e2d7b
  412606:	pop    edx
  412607:	mov    al,0x4e
  412609:	ds cld 
  41260b:	or     cl,BYTE PTR [ecx-0x2d]
  41260e:	data16 int3 
  412610:	and    ah,BYTE PTR [ecx]
  412612:	xor    eax,0x204270b9
  412617:	push   cs
  412618:	jne    0x412630
  41261a:	mov    ebp,0x669515b7
  41261f:	not    bh
  412621:	(bad)  
  412622:	pop    ds
  412623:	addr16 push ecx
  412625:	pop    esi
  412626:	iret   
  412627:	adc    DWORD PTR [ebp+esi*1+0x76dfa092],0xffffff8c
  41262f:	xor    eax,0x77298fef
  412634:	jns    0x412673
  412636:	push   ss
  412637:	frstpm(287 only) 
  412639:	xchg   ebx,eax
  41263a:	add    eax,0xf89beaf
  41263f:	jnp    0x4125ed
  412641:	call   0xe4dd:0x4adeb73a
  412648:	and    edx,ebp
  41264a:	pop    ss
  41264b:	xor    BYTE PTR cs:[ebx-0x24],0x64
  412650:	jp     0x412681
  412652:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412653:	rcr    DWORD PTR [edx+edx*4],0x3c
  412657:	pushf  
  412658:	cmp    bh,BYTE PTR [ebx]
  41265a:	push   ebx
  41265b:	popa   
  41265c:	ret    0xee9a
  41265f:	and    dh,ch
  412661:	mov    edx,0x58c3587e
  412666:	leave  
  412667:	sbb    esi,DWORD PTR [ecx+0x34]
  41266a:	ja     0x4126cc
  41266c:	and    DWORD PTR [ebx-0x10],edi
  41266f:	and    bh,BYTE PTR [esi-0x17]
  412672:	inc    esp
  412673:	ins    BYTE PTR es:[edi],dx
  412674:	mov    edi,0xd13c05ae
  412679:	sub    edx,0x8115d994
  41267f:	aam    0x20
  412681:	scas   al,BYTE PTR es:[edi]
  412682:	or     BYTE PTR [ebx-0x47089dee],ah
  412688:	xchg   esp,eax
  412689:	rcr    DWORD PTR [edx],1
  41268b:	fst    QWORD PTR [ecx+eiz*8+0x4f]
  41268f:	push   es
  412690:	rcr    DWORD PTR ds:0xf9dfd53,cl
  412696:	into   
  412697:	addr16 aam 0xc9
  41269a:	rcr    ebx,0x83
  41269d:	push   edi
  41269e:	aam    0x99
  4126a0:	mov    dl,BYTE PTR [ebp+0x1b0f7d7c]
  4126a6:	ret    
  4126a7:	int    0xcf
  4126a9:	push   esi
  4126aa:	push   esi
  4126ab:	xor    al,0xc4
  4126ad:	jmp    0x87c2e85d
  4126b2:	mov    ecx,0xe3736a21
  4126b7:	sub    al,0x1c
  4126b9:	sbb    BYTE PTR [edi-0x372c9ddb],ah
  4126bf:	mov    eax,ds:0x9fe6567
  4126c4:	xlat   BYTE PTR ds:[ebx]
  4126c5:	pop    ebp
  4126c6:	jmp    0x4d570cb0
  4126cb:	dec    edi
  4126cc:	cmp    BYTE PTR [edx],bh
  4126ce:	xchg   ebp,eax
  4126cf:	out    0x22,al
  4126d1:	mul    ecx
  4126d3:	cdq    
  4126d4:	test   esp,0x7d9930a4
  4126da:	and    BYTE PTR [ecx+edx*4+0x6ab55c1c],cl
  4126e1:	inc    ebx
  4126e2:	or     dl,ch
  4126e4:	icebp  
  4126e5:	cmp    edx,DWORD PTR [esi-0x7511d45e]
  4126eb:	iret   
  4126ec:	xor    eax,0xb74d9bb7
  4126f1:	(bad)  
  4126f3:	sub    ebx,0xffffff9d
  4126f6:	xor    eax,0xe063a4a
  4126fb:	shl    DWORD PTR [eax-0x2d],0xcc
  4126ff:	in     al,0xd2
  412701:	in     eax,dx
  412702:	lods   al,BYTE PTR ds:[esi]
  412703:	(bad)
  412706:	inc    esp
  412707:	jbe    0x412707
  412709:	clc    
  41270a:	cmp    eax,DWORD PTR [edi+0x4182ee0d]
  412710:	mov    eax,0x918e3c78
  412715:	test   BYTE PTR [edi+eax*2-0x21ffecb5],ch
  41271c:	pop    edx
  41271d:	outs   dx,DWORD PTR ds:[esi]
  41271e:	out    0x54,al
  412720:	push   ss
  412721:	mov    edi,eax
  412723:	mov    al,0x76
  412725:	fisubr DWORD PTR ds:0xa8e0cfcb
  41272b:	call   0x1568a961
  412730:	sub    al,0x33
  412732:	and    BYTE PTR [edi+0x1308ca4f],al
  412738:	into   
  412739:	and    al,0xbb
  41273b:	pop    es
  41273c:	mov    ah,0x32
  41273e:	add    eax,0xddf6fe0
  412743:	mov    eax,ds:0x21aff556
  412748:	xor    BYTE PTR [ebp+ebp*1-0x45],ah
  41274c:	pushf  
  41274d:	add    ch,BYTE PTR [edx+0x14]
  412750:	xlat   BYTE PTR ds:[ebx]
  412751:	mov    bh,0x81
  412753:	or     eax,0x24d286b7
  412758:	inc    eax
  412759:	dec    esp
  41275a:	outs   dx,DWORD PTR ds:[esi]
  41275b:	mov    edi,0x9e251131
  412760:	in     al,0xdb
  412762:	jnp    0x412728
  412764:	push   ecx
  412765:	sub    BYTE PTR [esi+0x6bfbc39d],ah
  41276b:	daa    
  41276c:	fsub   DWORD PTR [esi-0x46]
  41276f:	xor    edx,edx
  412771:	mov    eax,ds:0xaf562ac3
  412776:	xchg   DWORD PTR [esi-0x9],edx
  412779:	and    dl,bl
  41277b:	ds scas al,BYTE PTR es:[edi]
  41277d:	add    esp,eax
  41277f:	shr    BYTE PTR [esi],cl
  412781:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412782:	pushf  
  412783:	or     al,0xa4
  412785:	dec    ebx
  412786:	or     esp,edx
  412788:	adc    DWORD PTR [eax-0xe3c9a3d],esp
  41278e:	icebp  
  41278f:	call   FWORD PTR [edx+eax*8]
  412792:	cmp    bl,BYTE PTR [edx]
  412794:	mov    ah,0xda
  412796:	xchg   ecx,eax
  412797:	jae    0x4127bb
  412799:	pusha  
  41279a:	xchg   edx,eax
  41279b:	sbb    DWORD PTR [esi],0x50175fa4
  4127a1:	mov    ebp,cs
  4127a3:	pushf  
  4127a4:	inc    eax
  4127a5:	fistp  QWORD PTR [eax]
  4127a7:	inc    ecx
  4127a8:	in     al,0x9e
  4127aa:	div    ecx
  4127ac:	iret   
  4127ad:	iret   
  4127ae:	test   eax,0x58e6f426
  4127b3:	test   eax,0xa2cee486
  4127b8:	xchg   ecx,eax
  4127b9:	push   ss
  4127ba:	ds int 0x5e
  4127bd:	(bad)  
  4127be:	aas    
  4127bf:	(bad)  
  4127c0:	js     0x4127a1
  4127c2:	lods   al,BYTE PTR ds:[esi]
  4127c3:	or     ecx,0xd99c8267
  4127c9:	mov    esp,0x893f0462
  4127ce:	adc    DWORD PTR [ebp+0x65],esi
  4127d1:	stos   DWORD PTR es:[edi],eax
  4127d2:	fdiv   QWORD PTR [ebp-0x7cd09015]
  4127d8:	in     al,dx
  4127d9:	mov    ds:0x93659c06,al
  4127de:	in     eax,dx
  4127df:	adc    BYTE PTR [edx-0x52],al
  4127e2:	(bad)  
  4127e3:	mov    edi,0x33676f6a
  4127e8:	dec    ebp
  4127e9:	sti    
  4127ea:	push   edi
  4127eb:	daa    
  4127ec:	enter  0x2336,0x44
  4127f0:	icebp  
  4127f1:	jo     0x4127ea
  4127f3:	adc    eax,0x46c6cfeb
  4127f8:	adc    bh,BYTE PTR [ebx]
  4127fa:	leave  
  4127fb:	and    cl,BYTE PTR [ecx+0x39]
  4127fe:	ret    0xd3a3
  412801:	sbb    BYTE PTR [ebp-0x6325e4a7],bl
  412807:	or     ax,0xe001
  41280b:	stos   BYTE PTR es:[edi],al
  41280c:	enter  0xcee9,0xe0
  412810:	inc    ebx
  412811:	jp     0x4127e8
  412813:	sbb    edi,DWORD PTR [edi+0x532275d5]
  412819:	daa    
  41281a:	add    al,0xa1
  41281c:	push   ebp
  41281d:	inc    edx
  41281e:	int    0x52
  412820:	jo     0x41285e
  412822:	dec    ebx
  412823:	mov    ds:0x743e17b7,eax
  412828:	push   edx
  412829:	aaa    
  41282a:	sti    
  41282b:	fsub   DWORD PTR [edx+0x70907674]
  412831:	leave  
  412832:	push   ds
  412833:	xchg   esp,eax
  412834:	fld    QWORD PTR ds:0x772d4ec2
  41283a:	mov    edi,0xb31c6a75
  41283f:	cmp    ecx,ebx
  412841:	cmp    DWORD PTR [edi+edi*1],edx
  412844:	fisubr WORD PTR [ebp-0x72d7be5d]
  41284a:	ret    
  41284b:	fst    DWORD PTR [edi+0x6d69b678]
  412851:	addr16 sahf 
  412853:	retf   
  412854:	iret   
  412855:	and    DWORD PTR [esi+ebp*1],esi
  412858:	xchg   edx,eax
  412859:	outs   dx,BYTE PTR ds:[esi]
  41285a:	and    al,0xdd
  41285c:	pop    ebx
  41285d:	cwde   
  41285e:	sub    al,0xa5
  412860:	lea    ebx,[eax]
  412862:	in     eax,dx
  412863:	dec    edx
  412864:	loopne 0x4128cf
  412866:	loopne 0x4127ec
  412868:	xor    eax,0x59f0fb9d
  41286d:	rcl    BYTE PTR [eax],0x3c
  412870:	jo     0x41288d
  412872:	dec    edx
  412873:	out    0xa,eax
  412875:	or     ebp,ebx
  412877:	xchg   ebp,eax
  412878:	in     al,dx
  412879:	sub    BYTE PTR [edx],al
  41287b:	inc    DWORD PTR [edi]
  41287d:	pop    ss
  41287e:	or     DWORD PTR [eax],ecx
  412880:	js     0x412817
  412882:	pop    ebp
  412883:	adc    ebp,DWORD PTR [ebx]
  412885:	jne    0x41289e
  412887:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412888:	dec    eax
  412889:	fisttp DWORD PTR [edx]
  41288b:	aam    0x13
  41288d:	and    al,0x2c
  41288f:	or     BYTE PTR [ecx-0xf],dl
  412892:	ret    
  412893:	call   0xdf1e:0xc5e807e9
  41289a:	lds    ebx,FWORD PTR [esi+0xc]
  41289d:	iret   
  41289e:	inc    edi
  41289f:	push   ds
  4128a0:	dec    esi
  4128a1:	push   ebx
  4128a2:	fmul   QWORD PTR [ebx-0x4d]
  4128a5:	ret    0xe89e
  4128a8:	xlat   BYTE PTR ds:[ebx]
  4128a9:	pop    ebx
  4128aa:	into   
  4128ab:	pop    ecx
  4128ac:	out    0x6f,al
  4128ae:	loope  0x412842
  4128b0:	je     0x4128f3
  4128b2:	jmp    0xabdb792f
  4128b7:	aaa    
  4128b8:	rcl    ebx,1
  4128ba:	inc    ecx
  4128bb:	xor    eax,0xd8a37e9d
  4128c0:	adc    BYTE PTR [edx+0x21d571bc],ah
  4128c6:	fwait
  4128c7:	mov    al,ds:0xa6fea1f7
  4128cc:	inc    esp
  4128cd:	gs test al,0x88
  4128d0:	repz inc esp
  4128d2:	loope  0x412896
  4128d4:	loope  0x4128f3
  4128d6:	xchg   DWORD PTR [eax],esi
  4128d8:	pop    es
  4128d9:	leave  
  4128da:	sbb    edx,ebx
  4128dc:	jmp    0x412903
  4128de:	jns    0x412944
  4128e0:	pop    edi
  4128e1:	stc    
  4128e2:	or     cl,bh
  4128e4:	int    0x9e
  4128e6:	call   0xf14bb84
  4128eb:	xchg   ebx,eax
  4128ec:	xor    esi,0x9ab37de3
  4128f2:	les    ebp,FWORD PTR [ebx]
  4128f4:	leave  
  4128f5:	pop    edi
  4128f6:	mov    ebp,0x2a2cb0f0
  4128fb:	and    al,0x3b
  4128fd:	(bad)  [esi]
  4128ff:	lea    esp,[eax+ebp*2-0xc1f7223]
  412906:	(bad)
  41290a:	das    
  41290b:	ss es fxch st(6)
  41290f:	fdiv   st,st(7)
  412911:	fimul  DWORD PTR [ebx-0x1f]
  412914:	es mov edi,0x7cb59ac2
  41291a:	pop    ebp
  41291b:	cli    
  41291c:	arpl   WORD PTR [ebx+ebx*1],bp
  41291f:	jge    0x41299b
  412921:	out    0xb3,al
  412923:	jg     0x4128f5
  412925:	out    dx,al
  412926:	xor    edi,0x1a2eefc0
  41292c:	popf   
  41292d:	and    ecx,DWORD PTR [ebx]
  41292f:	pop    ecx
  412930:	or     al,ah
  412932:	pop    edx
  412933:	aad    0x9a
  412935:	adc    BYTE PTR [ecx+0x37],ch
  412938:	(bad)  
  412939:	dec    edi
  41293a:	rcl    ebp,1
  41293c:	pop    ebx
  41293d:	cwde   
  41293e:	popa   
  41293f:	xor    bh,BYTE PTR [ebx+ecx*8+0x650e3545]
  412946:	gs (bad) 
  412948:	clc    
  412949:	out    0x2,eax
  41294b:	and    DWORD PTR [ebp-0x788e5ee6],esp
  412951:	sub    edi,DWORD PTR [ebx+0x38141efb]
  412957:	(bad)  
  412958:	clc    
  412959:	mov    DWORD PTR [edi],edi
  41295b:	test   BYTE PTR [ecx],0x7
  41295e:	retf   0xf613
  412961:	sbb    al,0xbf
  412963:	adc    esp,DWORD PTR [esi+0x3da591ab]
  412969:	mov    ah,0xe3
  41296b:	xchg   esi,eax
  41296c:	test   BYTE PTR [eax-0x909a21a],ah
  412972:	mov    al,ds:0x7e4a9946
  412977:	mov    ?,edx
  412979:	mov    DWORD PTR [eax+0x5d0f7e79],esi
  41297f:	pop    es
  412980:	(bad)  
  412981:	fst    DWORD PTR [esi]
  412983:	inc    esp
  412984:	das    
  412985:	mov    al,ds:0x6a1a3d3b
  41298a:	je     0x4129b2
  41298c:	popf   
  41298d:	or     eax,0x617d34d2
  412992:	stc    
  412993:	cld    
  412994:	lds    esp,FWORD PTR [edx]
  412996:	adc    al,0xc7
  412998:	mov    al,0x4a
  41299a:	pop    esp
  41299b:	cmp    DWORD PTR [eax-0x48],eax
  41299e:	jb     0x4129f3
  4129a0:	xor    ebx,ebp
  4129a2:	jmp    DWORD PTR [ebx+edi*1-0x5dc72e90]
  4129a9:	dec    edi
  4129aa:	mov    eax,0x35b87ad4
  4129af:	cmc    
  4129b0:	or     esi,DWORD PTR [eax-0x40]
  4129b3:	mov    cl,0xce
  4129b5:	in     al,dx
  4129b6:	sub    DWORD PTR [eax-0x18],esi
  4129b9:	jmp    0xc28d:0x3e83f8a7
  4129c0:	iret   
  4129c1:	loopne 0x4129a4
  4129c3:	in     eax,dx
  4129c4:	pop    ecx
  4129c5:	push   edi
  4129c6:	pushf  
  4129c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4129c8:	inc    edx
  4129c9:	and    al,0xf9
  4129cb:	xor    al,0x7e
  4129cd:	arpl   WORD PTR [esp+ebx*1-0x48a1517],si
  4129d4:	mov    ebp,0xd374c700
  4129d9:	shr    DWORD PTR [ebp+ecx*1+0x1c15246],cl
  4129e0:	ins    DWORD PTR es:[edi],dx
  4129e1:	pop    ss
  4129e2:	and    cl,BYTE PTR [eax+0x6ad2f3cb]
  4129e8:	retf   0x8db4
  4129eb:	out    0x78,eax
  4129ed:	stc    
  4129ee:	jp     0x412a50
  4129f0:	ret    
  4129f1:	xchg   DWORD PTR [edi+0x6441f7ec],edx
  4129f7:	icebp  
  4129f8:	pop    ecx
  4129f9:	int3   
  4129fa:	push   ecx
  4129fb:	pop    ebx
  4129fc:	pop    edx
  4129fd:	cwde   
  4129fe:	mov    esi,0x91ac20b9
  412a03:	cmp    al,al
  412a05:	pop    edi
  412a06:	mov    ebp,0x10d6967d
  412a0b:	push   0xf31f2241
  412a10:	dec    DWORD PTR [ebx-0x60a8dbc5]
  412a16:	mov    ds:0x7d2875a6,eax
  412a1b:	mov    ah,0x4f
  412a1d:	pop    edi
  412a1e:	js     0x4129e1
  412a20:	enter  0xe0ac,0x18
  412a24:	arpl   WORD PTR [eax+0xd],di
  412a27:	cmp    eax,0x70ab34f0
  412a2c:	int    0x87
  412a2e:	out    dx,eax
  412a2f:	cmp    DWORD PTR [ebx+0x63ba9a3b],edx
  412a35:	(bad)  
  412a36:	push   edi
  412a37:	push   0xffffffa2
  412a39:	push   ds
  412a3a:	shl    esp,0x0
  412a3d:	jae    0x4129d5
  412a3f:	xchg   esp,eax
  412a40:	inc    edi
  412a41:	dec    edi
  412a42:	aam    0xf0
  412a44:	push   esi
  412a45:	jecxz  0x412a5d
  412a47:	push   0x8a3f6f26
  412a4c:	sbb    al,0x53
  412a4e:	adc    DWORD PTR [edx],edx
  412a50:	fcom   DWORD PTR [eax+0x56ac6ef6]
  412a56:	arpl   WORD PTR [ebx+0x3542878a],di
  412a5c:	pop    eax
  412a5d:	jno    0x412a39
  412a5f:	loopne 0x4129f9
  412a61:	mov    ebp,0xb6dc0176
  412a66:	push   esi
  412a67:	retf   0x5ea5
  412a6a:	or     esi,eax
  412a6c:	cmc    
  412a6d:	scas   eax,DWORD PTR es:[edi]
  412a6e:	cmp    eax,0xb4dd43f8
  412a73:	push   esp
  412a74:	mov    edi,0x18027e24
  412a7a:	lea    ebx,[edx]
  412a7c:	pop    esp
  412a7d:	or     bh,BYTE PTR [ebx-0x498e4b6f]
  412a83:	popa   
  412a84:	add    dh,dh
  412a86:	mov    ch,0xb
  412a88:	ins    DWORD PTR es:[edi],dx
  412a89:	mov    edi,DWORD PTR [edi+eax*8+0x72]
  412a8d:	inc    ebx
  412a8e:	call   0x2fd9:0xac46f689
  412a95:	xchg   esp,ecx
  412a97:	mov    al,0x29
  412a99:	clc    
  412a9a:	push   edx
  412a9b:	ins    DWORD PTR es:[edi],dx
  412a9c:	jmp    0x5afdce8
  412aa1:	cmp    eax,DWORD PTR [ebx]
  412aa3:	add    dh,BYTE PTR [ebp+eiz*8+0x5d]
  412aa7:	xchg   esi,eax
  412aa8:	outs   dx,WORD PTR ds:[esi]
  412aaa:	imul   edi,ebx,0xfffffff6
  412aad:	data16 jmp 0x412a52
  412ab0:	cs mov bl,0x43
  412ab3:	xor    BYTE PTR [edi+0x79],ch
  412ab6:	mov    ebp,0x88ace3db
  412abb:	pop    esi
  412abc:	ret    0xa8de
  412abf:	stos   DWORD PTR es:[edi],eax
  412ac0:	or     esi,edx
  412ac2:	shr    DWORD PTR [edi],0xd5
  412ac5:	sti    
  412ac6:	pop    ecx
  412ac7:	enter  0x1967,0x9c
  412acb:	jne    0x412a73
  412acd:	and    edx,DWORD PTR [ecx+0x749f8f37]
  412ad3:	mov    bl,0x28
  412ad5:	sbb    BYTE PTR [edx+0x1481b794],dh
  412adb:	cli    
  412adc:	nop
  412add:	and    al,0x33
  412adf:	sub    al,0x29
  412ae1:	(bad)  
  412ae2:	aas    
  412ae3:	mov    esi,0x7d76ad7c
  412ae8:	outs   dx,BYTE PTR ds:[esi]
  412ae9:	push   eax
  412aea:	ret    0x9c10
  412aed:	add    al,0x20
  412aef:	mov    ebp,0xcf1e2cfc
  412af4:	ret    0xb598
  412af7:	popa   
  412af8:	cmp    BYTE PTR [edi+0x2487dda1],0x49
  412aff:	mov    edi,0xd7307bc
  412b04:	sub    edx,edi
  412b06:	inc    ebp
  412b07:	xor    DWORD PTR [ecx+0x51b7c24a],esi
  412b0d:	daa    
  412b0e:	cmp    dl,BYTE PTR [ebx+0x333e23eb]
  412b14:	aaa    
  412b15:	pop    es
  412b16:	sbb    ecx,ebp
  412b18:	addr16 inc edx
  412b1a:	out    dx,eax
  412b1b:	fld    st(6)
  412b1d:	retf   0x58cd
  412b20:	ja     0x412aaf
  412b22:	inc    ebx
  412b23:	and    eax,0x5af4dcd
  412b28:	sti    
  412b29:	out    dx,al
  412b2a:	dec    esp
  412b2b:	cmc    
  412b2c:	and    DWORD PTR [esi+0x61d887c3],ebx
  412b32:	add    esi,edi
  412b34:	lea    ebx,[ebx+0x6d]
  412b37:	lahf   
  412b38:	push   0x8aa39457
  412b3d:	xchg   esp,eax
  412b3e:	mov    ds:0x9877a485,al
  412b43:	sar    BYTE PTR [esi+0x2f9535bc],cl
  412b49:	sbb    ch,BYTE PTR [eax-0x6e5140bc]
  412b4f:	xchg   ebp,eax
  412b50:	pop    esi
  412b51:	cld    
  412b52:	inc    edx
  412b53:	mov    edi,0x65076220
  412b58:	imul   edx,DWORD PTR [eax-0x41],0xb47034e4
  412b5f:	or     bh,BYTE PTR [eax]
  412b61:	mov    esp,DWORD PTR [eax]
  412b63:	in     al,dx
  412b64:	mov    ebx,DWORD PTR [ecx+eax*1+0x7d]
  412b68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b69:	mov    ch,0xfd
  412b6b:	and    esi,eax
  412b6d:	mov    edx,0x40d72a9a
  412b72:	stc    
  412b73:	pop    ebp
  412b74:	enter  0x3b62,0xcb
  412b78:	dec    edx
  412b79:	sar    BYTE PTR [esi-0x27],1
  412b7c:	add    bl,dh
  412b7e:	and    dh,BYTE PTR [esi]
  412b80:	jmp    0x412bcf
  412b82:	fisubr WORD PTR [ecx+0x32]
  412b85:	imul   edx,DWORD PTR [edi+0x4d5580e2],0xffffffec
  412b8c:	push   ss
  412b8d:	std    
  412b8e:	(bad)  
  412b90:	ror    BYTE PTR [ebp+ebx*2+0x11fac16d],0xdf
  412b98:	lahf   
  412b99:	loopne 0x412ba8
  412b9b:	enter  0xcce6,0xf
  412b9f:	call   DWORD PTR [esi]
  412ba1:	mov    bh,0x53
  412ba3:	jp     0x412b30
  412ba5:	gs in  al,0x7b
  412ba8:	push   esi
  412ba9:	sar    DWORD PTR [edi+0x54],cl
  412bac:	and    BYTE PTR [ecx-0x3699a1a0],cl
  412bb2:	es lock push esi
  412bb5:	fstp   DWORD PTR ds:0xe1250ecd
  412bbb:	lds    edx,FWORD PTR [edx-0x5f]
  412bbe:	add    bl,BYTE PTR [esi+0x64]
  412bc1:	dec    edx
  412bc2:	mov    dh,0x49
  412bc4:	nop
  412bc5:	or     DWORD PTR [edx-0x29],0x97399e5a
  412bcc:	sbb    DWORD PTR [esi+0x5c91c6b3],esi
  412bd2:	mov    ?,esi
  412bd4:	adc    dh,BYTE PTR [eax-0x36]
  412bd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412bd8:	das    
  412bd9:	adc    al,0x25
  412bdb:	mov    ebx,0x1800d53d
  412be0:	bound  ecx,QWORD PTR [ebp+0x6c]
  412be3:	sti    
  412be4:	xchg   esp,eax
  412be5:	fidivr WORD PTR [esi]
  412be7:	add    bl,BYTE PTR [edi]
  412be9:	lods   eax,DWORD PTR ds:[esi]
  412bea:	sub    al,0x23
  412bec:	mov    cl,0xb6
  412bee:	push   edi
  412bef:	arpl   WORD PTR [edi+0x1f],ax
  412bf2:	or     eax,0x64cc2d14
  412bf7:	fwait
  412bf8:	enter  0x55ba,0x8
  412bfc:	aaa    
  412bfd:	mov    eax,ds:0xd218d0e
  412c02:	sub    eax,DWORD PTR [eax-0x48f6aecf]
  412c08:	int    0xfd
  412c0a:	dec    ebp
  412c0b:	outs   dx,BYTE PTR ds:[esi]
  412c0c:	mov    cl,0xa6
  412c0e:	adc    esp,DWORD PTR [ebp+0x2cb94056]
  412c14:	popa   
  412c15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c16:	in     al,0x40
  412c18:	mov    ebp,DWORD PTR [edi+0x86d5cc2]
  412c1e:	push   ds
  412c1f:	adc    eax,0x8639ad6e
  412c24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c25:	jecxz  0x412c0c
  412c27:	xchg   esp,eax
  412c28:	pop    es
  412c29:	fs popf 
  412c2b:	jmp    0x27cb:0xf14c5e48
  412c32:	inc    edi
  412c33:	jne    0x412be7
  412c35:	add    eax,0xedb683e
  412c3a:	xchg   esi,eax
  412c3b:	adc    BYTE PTR ds:0x1a350b4e,dl
  412c41:	lods   al,BYTE PTR ds:[esi]
  412c42:	mov    eax,DWORD PTR [eax]
  412c44:	adc    esp,esi
  412c46:	push   ebp
  412c47:	add    ecx,DWORD PTR [ebx]
  412c49:	pop    ebx
  412c4a:	call   0x9b861d90
  412c4f:	mov    bh,0x9b
  412c51:	mov    ds:0x16ed0e74,eax
  412c56:	js     0x412c73
  412c58:	pop    eax
  412c59:	mov    dh,BYTE PTR [edx+ecx*4]
  412c5c:	mov    al,0x41
  412c5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c5f:	push   ebx
  412c60:	push   ds
  412c61:	das    
  412c62:	xor    BYTE PTR [esi+0x3f],0xc2
  412c66:	or     ah,BYTE PTR [eax+0x7e]
  412c69:	push   0xfffffff9
  412c6b:	push   0x73a447f9
  412c70:	jmp    0x2cf0:0x2867f4e0
  412c77:	mov    cl,0xfe
  412c79:	popf   
  412c7a:	aam    0x90
  412c7c:	int3   
  412c7d:	cmc    
  412c7e:	mov    bl,0xad
  412c80:	into   
  412c81:	ss xor eax,0xcaaba3b1
  412c87:	pop    ebx
  412c88:	jo     0x412c36
  412c8a:	sar    DWORD PTR [ebx],1
  412c8c:	pusha  
  412c8d:	jp     0x412c3e
  412c8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c90:	lods   eax,DWORD PTR ds:[esi]
  412c91:	mov    al,0x18
  412c93:	sub    ebx,eax
  412c95:	jecxz  0x412ca8
  412c97:	or     edi,DWORD PTR [edi]
  412c99:	int3   
  412c9a:	std    
  412c9b:	stos   BYTE PTR es:[edi],al
  412c9c:	dec    eax
  412c9d:	ins    BYTE PTR es:[edi],dx
  412c9e:	cmp    al,0x8e
  412ca0:	pop    ss
  412ca1:	(bad)  
  412ca2:	retf   0xf83c
  412ca5:	call   0x56936725
  412caa:	xor    BYTE PTR [edi+0x353e9e48],0x84
  412cb1:	add    al,0x73
  412cb3:	push   0xfffffffc
  412cb5:	sbb    BYTE PTR [ebx-0x55546220],ah
  412cbb:	sub    DWORD PTR [eax+eax*4+0x4241c0a5],esp
  412cc2:	push   esp
  412cc3:	pop    ss
  412cc4:	(bad)  
  412cc5:	cmp    ebx,DWORD PTR [esi-0x53]
  412cc8:	arpl   bx,bp
  412cca:	rol    bh,0xc9
  412ccd:	push   edi
  412cce:	push   ecx
  412ccf:	sbb    eax,0x4d667e00
  412cd4:	ins    BYTE PTR es:[edi],dx
  412cd5:	sub    BYTE PTR [eax+0x61],bh
  412cd8:	or     al,0x68
  412cda:	int3   
  412cdb:	inc    DWORD PTR [esp+eax*4+0x29]
  412cdf:	mov    ah,0xa3
  412ce1:	ret    
  412ce2:	xchg   edx,eax
  412ce3:	jb     0x412c92
  412ce5:	and    edi,ebp
  412ce7:	push   ebx
  412ce8:	clc    
  412ce9:	in     eax,dx
  412cea:	jecxz  0x412cb1
  412cec:	lods   al,BYTE PTR ds:[esi]
  412ced:	pop    edi
  412cee:	inc    esp
  412cef:	inc    edx
  412cf0:	fwait
  412cf1:	xlat   BYTE PTR ds:[ebx]
  412cf2:	stc    
  412cf3:	cmp    dh,ch
  412cf5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412cf6:	in     eax,dx
  412cf7:	jne    0x412cfa
  412cf9:	addr16 test eax,0x8f295450
  412cff:	pop    ebp
  412d00:	xchg   ebp,eax
  412d01:	jmp    0x412d66
  412d03:	inc    edi
  412d04:	adc    al,0xf2
  412d06:	sub    BYTE PTR [edi],ch
  412d08:	jle    0x412d13
  412d0a:	adc    BYTE PTR [edx+0x32],bl
  412d0d:	push   ss
  412d0e:	mov    edi,0x1fbefdf8
  412d13:	xchg   BYTE PTR [esi+0x2d90b65a],dl
  412d19:	jo     0x412d32
  412d1b:	fidivr DWORD PTR [edx+0x510466f6]
  412d21:	(bad)  
  412d22:	jbe    0x412cd8
  412d24:	pusha  
  412d25:	cli    
  412d26:	push   ss
  412d27:	pop    esp
  412d28:	out    dx,al
  412d29:	inc    edx
  412d2a:	ret    
  412d2b:	push   0x14
  412d2d:	jne    0x412d4a
  412d2f:	and    esp,DWORD PTR [edi]
  412d31:	or     bl,BYTE PTR [eax*4+0x7ff3c934]
  412d38:	jmp    0x412d33
  412d3a:	jge    0x412ccf
  412d3c:	push   0x438fb879
  412d41:	das    
  412d42:	lea    eax,[ebp+0x6ec59ad5]
  412d48:	mov    eax,ds:0xaed7152b
  412d4d:	out    dx,eax
  412d4e:	add    al,0x63
  412d50:	into   
  412d51:	nop
  412d52:	sar    BYTE PTR [edi+0x34],0x64
  412d56:	cli    
  412d57:	mov    ah,0xd6
  412d59:	mov    eax,ds:0x717bf539
  412d5e:	stos   BYTE PTR es:[edi],al
  412d5f:	iret   
  412d60:	icebp  
  412d61:	jbe    0x412d5a
  412d63:	icebp  
  412d64:	dec    esi
  412d65:	and    al,0x7a
  412d67:	out    0x4e,al
  412d69:	in     eax,0x8d
  412d6b:	ret    
  412d6c:	scas   al,BYTE PTR es:[edi]
  412d6d:	or     ecx,DWORD PTR [ecx]
  412d6f:	rcr    BYTE PTR [ebx+0x38],1
  412d72:	add    al,0x44
  412d74:	enter  0xb067,0x58
  412d78:	add    BYTE PTR [ebp-0x53],al
  412d7b:	stos   BYTE PTR es:[edi],al
  412d7c:	(bad)  
  412d7d:	ficom  DWORD PTR cs:0x44ea396a
  412d84:	adc    dl,BYTE PTR [edx]
  412d86:	(bad)  
  412d87:	call   0x1bd1602d
  412d8c:	jb     0x412d16
  412d8e:	sub    BYTE PTR [edx-0x47],dh
  412d91:	xor    al,0x89
  412d93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d94:	push   ebp
  412d95:	push   0x93276081
  412d9a:	push   eax
  412d9b:	adc    ebp,DWORD PTR [bp+di+0x4c]
  412d9f:	imul   eax,DWORD PTR [ebx+0x20],0x331564b6
  412da6:	dec    esi
  412da7:	imul   eax,DWORD PTR [esi-0xc],0xffffffda
  412dab:	dec    edx
  412dac:	push   0xffffff80
  412dae:	aad    0x96
  412db0:	pop    esi
  412db1:	and    edi,ebx
  412db3:	jns    0x412d8d
  412db5:	adc    ebx,DWORD PTR [edx-0x4f]
  412db8:	push   0xa302b517
  412dbd:	loope  0x412d4a
  412dbf:	pop    edx
  412dc0:	pop    es
  412dc1:	sahf   
  412dc2:	mov    ?,WORD PTR [edx+eiz*4+0x5871302b]
  412dc9:	jmp    0x48944887
  412dce:	add    bh,BYTE PTR [ecx+edi*2-0x47]
  412dd2:	xor    dl,BYTE PTR [eax]
  412dd4:	pop    eax
  412dd5:	je     0x412d62
  412dd7:	js     0x412e24
  412dd9:	enter  0xa826,0xa8
  412ddd:	jecxz  0x412e16
  412ddf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412de0:	xchg   edi,eax
  412de1:	add    bl,BYTE PTR [edi+0x38]
  412de4:	cmp    al,0xb5
  412de6:	inc    edi
  412de7:	sub    edi,DWORD PTR [ecx+0x7ab19deb]
  412ded:	jge    0x412da9
  412def:	pushf  
  412df0:	xor    esi,DWORD PTR [ebx]
  412df2:	fnstcw WORD PTR [ebx+0x30]
  412df5:	iret   
  412df6:	cmp    ebp,DWORD PTR [eax+0x32eab80e]
  412dfc:	or     al,0x95
  412dfe:	mov    bl,0x1e
  412e00:	push   ds
  412e01:	adc    DWORD PTR [edi],edx
  412e03:	push   ss
  412e04:	loopne 0x412d92
  412e06:	scas   al,BYTE PTR es:[edi]
  412e07:	jge    0x412d99
  412e09:	int    0x1c
  412e0b:	jo     0x412dda
  412e0d:	cld    
  412e0e:	ins    BYTE PTR es:[edi],dx
  412e0f:	xchg   eax,eax
  412e11:	idiv   DWORD PTR [ebx+0x72]
  412e14:	push   ecx
  412e15:	and    eax,0x8eefde77
  412e1a:	mov    ?,WORD PTR [eax+0x77]
  412e1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e1e:	inc    eax
  412e1f:	fcmovne st,st(1)
  412e21:	jno    0x412e76
  412e23:	pop    eax
  412e24:	pop    ds
  412e25:	pop    DWORD PTR [ebp+0x1d]
  412e28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e29:	jmp    0x24ea:0x72accf2f
  412e30:	fnstenv [ebx+ecx*4+0x6c]
  412e34:	or     DWORD PTR [ecx+0x43a6880],esp
  412e3a:	xor    al,0x80
  412e3c:	enter  0xc4b4,0x20
  412e40:	(bad)  
  412e41:	std    
  412e42:	test   DWORD PTR [eax],ebx
  412e44:	es and al,0x69
  412e47:	xchg   DWORD PTR [eax+0x5d0263f1],eax
  412e4d:	add    al,0xfa
  412e4f:	in     eax,dx
  412e50:	repz in eax,dx
  412e52:	into   
  412e53:	cmp    ah,ah
  412e55:	sbb    eax,0x8b478bb5
  412e5a:	sahf   
  412e5b:	bound  ebx,QWORD PTR [eax+eiz*4-0x1fcac33b]
  412e62:	repnz push es
  412e64:	push   esi
  412e65:	ins    BYTE PTR es:[edi],dx
  412e66:	pop    edi
  412e67:	rol    DWORD PTR [esi],0xd6
  412e6a:	pop    ss
  412e6b:	inc    ecx
  412e6c:	dec    eax
  412e6d:	inc    ebx
  412e6e:	ds push edi
  412e70:	add    dl,0x1e
  412e73:	es in  eax,dx
  412e75:	cmp    DWORD PTR [eax-0x656108bb],ecx
  412e7b:	sub    al,BYTE PTR [eax-0x6fec7a2a]
  412e81:	cdq    
  412e82:	jle    0x412e82
  412e84:	popa   
  412e85:	and    DWORD PTR [edx+0x1b657767],0xffffff98
  412e8c:	out    dx,eax
  412e8d:	test   BYTE PTR [ebx+ecx*1-0x5d],bl
  412e91:	inc    edx
  412e92:	(bad)  
  412e93:	ins    BYTE PTR es:[edi],dx
  412e94:	es pop es
  412e96:	mov    al,0xc2
  412e98:	int3   
  412e99:	(bad)  
  412e9a:	adc    al,0xd3
  412e9c:	cmc    
  412e9d:	in     eax,0xa6
  412e9f:	hlt    
  412ea0:	mov    DWORD PTR [edx-0x45],0xa7b372bf
  412ea7:	stos   DWORD PTR es:[edi],eax
  412ea8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ea9:	mov    ds:0x2054f81e,eax
  412eae:	add    al,0x5
  412eb0:	or     BYTE PTR [edi-0x2fc31822],0x7
  412eb7:	add    BYTE PTR [edi],cl
  412eb9:	call   0xe687:0xd713cbf8
  412ec0:	(bad)
  412ec4:	lods   eax,DWORD PTR es:[esi]
  412ec6:	fsubr  QWORD PTR [edi+0x53]
  412ec9:	fimul  WORD PTR [esi-0x4e]
  412ecc:	call   0xfc29ae2f
  412ed1:	ja     0x412eb7
  412ed3:	jnp    0x412ed9
  412ed5:	push   ds
  412ed6:	inc    edx
  412ed7:	pop    edi
  412ed8:	pop    es
  412ed9:	xor    BYTE PTR [edi+0x7a1be8dc],ah
  412edf:	les    ebp,FWORD PTR [edx-0x4f]
  412ee2:	lahf   
  412ee3:	mov    eax,0x20d38acc
  412ee8:	icebp  
  412ee9:	or     bh,BYTE PTR [ecx+0xb]
  412eec:	jmp    edi
  412eee:	ror    BYTE PTR [bx-0x53],0x85
  412ef3:	push   esp
  412ef4:	mov    ds:0xe05664d7,al
  412ef9:	cmp    DWORD PTR [edi+0x5d],0x53
  412efd:	adc    cl,al
  412eff:	popf   
  412f00:	loop   0x412eed
  412f02:	aaa    
  412f03:	sti    
  412f04:	gs mov dh,0x84
  412f07:	xlat   BYTE PTR ds:[ebx]
  412f08:	pop    ecx
  412f09:	sub    esi,edi
  412f0b:	mov    edi,0x60cbd4fa
  412f10:	loope  0x412f3c
  412f12:	lods   al,BYTE PTR ds:[esi]
  412f13:	dec    ebx
  412f14:	int    0xc8
  412f16:	fbld   TBYTE PTR [eax+0x24b69a7f]
  412f1c:	loop   0x412f91
  412f1e:	jae    0x412f02
  412f20:	add    al,0x2f
  412f22:	dec    eax
  412f23:	adc    bl,BYTE PTR [ebx-0x10a18b23]
  412f29:	mov    ds:0x32d71ce6,al
  412f2e:	sub    al,0x40
  412f30:	xchg   ebp,eax
  412f31:	jecxz  0x412f70
  412f33:	adc    dh,al
  412f35:	adc    al,0x13
  412f37:	into   
  412f38:	js     0x412efd
  412f3a:	icebp  
  412f3b:	jnp    0x412f4f
  412f3d:	aas    
  412f3e:	not    DWORD PTR [esi-0x53a2815]
  412f44:	aaa    
  412f45:	sbb    esp,edi
  412f47:	or     eax,DWORD PTR [ecx+ebp*2-0x79546fed]
  412f4e:	pop    ecx
  412f4f:	xor    eax,0x7ce9e5d2
  412f54:	adc    ecx,DWORD PTR [edx+ebx*4+0x37]
  412f58:	fmulp  st(1),st
  412f5a:	frstor [ebp-0x1e]
  412f5d:	xor    esi,DWORD PTR es:[ebx+0x168d98c1]
  412f64:	test   al,0x20
  412f66:	inc    esi
  412f67:	add    al,0x35
  412f69:	sbb    dh,al
  412f6b:	cs cwde 
  412f6d:	out    0x90,al
  412f6f:	xrelease mov BYTE PTR [edx+0x70453736],ch
  412f76:	push   ebp
  412f77:	xchg   ebx,eax
  412f78:	inc    ecx
  412f79:	outs   dx,DWORD PTR ds:[esi]
  412f7a:	inc    eax
  412f7b:	dec    ecx
  412f7c:	popa   
  412f7d:	loopne 0x412fd4
  412f7f:	ins    DWORD PTR es:[edi],dx
  412f80:	pusha  
  412f81:	addr16 pop esp
  412f83:	add    al,0x9e
  412f85:	push   ss
  412f86:	inc    edi
  412f87:	jb     0x412f0f
  412f89:	pop    ds
  412f8a:	pop    edi
  412f8b:	xchg   ecx,eax
  412f8c:	out    dx,al
  412f8d:	inc    edx
  412f8e:	bswap  ebx
  412f90:	xor    esp,DWORD PTR [ebx-0x7ca8f8e9]
  412f96:	cmp    al,0xa4
  412f98:	mov    esp,0xaea76a82
  412f9d:	xchg   ebx,eax
  412f9e:	inc    ebp
  412f9f:	aad    0xc1
  412fa1:	pop    ecx
  412fa2:	fnstsw WORD PTR [ebx]
  412fa4:	jge    0x412f7e
  412fa6:	addr16 popf 
  412fa8:	push   ebp
  412fa9:	mov    bh,0xe6
  412fab:	(bad)  
  412fad:	(bad)  
  412fae:	sbb    dh,BYTE PTR fs:[ebp-0x56]
  412fb2:	mov    dh,0xc
  412fb4:	jecxz  0x413006
  412fb6:	clc    
  412fb7:	push   ebx
  412fb8:	add    esi,ebp
  412fba:	adc    al,0x90
  412fbc:	inc    ebx
  412fbd:	fnstsw WORD PTR [ebx+0x44]
  412fc0:	add    eax,DWORD PTR [eax+0x2784de06]
  412fc6:	push   ebp
  412fc7:	jnp    0x413023
  412fc9:	fsub   QWORD PTR [esi]
  412fcb:	test   ebp,ebx
  412fcd:	in     al,dx
  412fce:	stc    
  412fcf:	inc    edi
  412fd0:	add    BYTE PTR [eax],ah
  412fd2:	jecxz  0x412fa1
  412fd4:	test   eax,0x128f6388
  412fd9:	mov    eax,0x67872e5f
  412fde:	jge    0x413020
  412fe0:	inc    ebp
  412fe1:	(bad)  
  412fe2:	cwde   
  412fe3:	cmp    DWORD PTR [eax-0x39bf2761],esp
  412fe9:	adc    eax,0x2a33e53c
  412fee:	add    al,0x16
  412ff0:	ss jl  0x412fff
  412ff3:	shl    bh,cl
  412ff5:	jecxz  0x413058
  412ff7:	jle    0x413024
  412ff9:	loop   0x41302e
  412ffb:	mov    ebp,DWORD PTR [eax+0x55f7836a]
  413001:	xor    DWORD PTR [edx],edx
  413003:	dec    esp
  413004:	lods   eax,DWORD PTR ds:[esi]
  413005:	cwde   
  413006:	cmc    
  413007:	call   0x37ef:0xa31ef31c
  41300e:	mov    ebp,0x9872fbc7
  413013:	cmp    edx,edx
  413015:	xchg   esp,eax
  413016:	dec    esi
  413017:	jle    0x41301d
  413019:	push   0x68
  41301b:	out    dx,eax
  41301c:	(bad)
  41301f:	and    BYTE PTR [ecx],dl
  413021:	sar    BYTE PTR [eax-0x7d],0x32
  413025:	loop   0x41306f
  413027:	jmp    0x412ffb
  413029:	xchg   ebp,eax
  41302a:	inc    ebx
  41302b:	ficom  WORD PTR [edi]
  41302d:	jl     0x412ff7
  41302f:	and    eax,0x222c30ba
  413034:	(bad)  
  413036:	stc    
  413037:	pop    esi
  413038:	mov    bl,0x65
  41303a:	or     al,0x14
  41303c:	das    
  41303d:	out    0xe5,al
  41303f:	arpl   WORD PTR [edx-0xc17a9c0],bp
  413045:	jno    0x41302d
  413047:	imul   ecx,edi,0x4922b8b7
  41304d:	mov    ebp,0xf2925c80
  413052:	hlt    
  413053:	int    0xa0
  413055:	mov    al,0x31
  413057:	inc    ecx
  413058:	lahf   
  413059:	dec    ebx
  41305a:	popf   
  41305b:	pop    ds
  41305c:	stos   BYTE PTR es:[edi],al
  41305d:	add    bh,bh
  41305f:	inc    ecx
  413060:	aam    0x5a
  413062:	mov    cl,BYTE PTR [edx+0x74203054]
  413068:	mov    esp,0x7a3f4521
  41306d:	ins    BYTE PTR es:[edi],dx
  41306e:	cli    
  41306f:	je     0x413085
  413071:	aas    
  413072:	sahf   
  413073:	scas   eax,DWORD PTR es:[edi]
  413074:	enter  0xe982,0x27
  413078:	adc    al,0x3f
  41307a:	mov    edx,0x4b724684
  41307f:	jne    0x413039
  413081:	cmp    BYTE PTR [edx],ch
  413083:	adc    BYTE PTR [edi-0x47],ah
  413086:	iret   
  413087:	xchg   esp,eax
  413088:	jl     0x4130d0
  41308a:	in     eax,dx
  41308b:	shl    cl,cl
  41308d:	mov    gs,WORD PTR [edi-0x6ff99783]
  413093:	loope  0x413022
  413095:	sub    eax,DWORD PTR [ebx-0x6a]
  413098:	sub    ebx,0xffffffa8
  41309b:	loope  0x4130b0
  41309d:	jle    0x4130d9
  41309f:	icebp  
  4130a0:	out    dx,eax
  4130a1:	pop    ebp
  4130a2:	stos   BYTE PTR es:[edi],al
  4130a3:	mov    cl,dl
  4130a5:	bound  edi,QWORD PTR [ebx+0x71eabc2]
  4130ab:	scas   al,BYTE PTR es:[edi]
  4130ac:	or     DWORD PTR [edx+0x23],esp
  4130af:	es pop ebx
  4130b1:	inc    ecx
  4130b2:	xchg   ebx,eax
  4130b3:	das    
  4130b4:	(bad)  
  4130b5:	add    eax,0xe2df46c4
  4130ba:	call   0xabcd:0xecc31bb8
  4130c1:	pushf  
  4130c2:	fxtract 
  4130c4:	repnz frstor [eax+eax*1-0x5216c861]
  4130cc:	dec    esi
  4130cd:	jge    0x413093
  4130cf:	adc    al,ah
  4130d1:	mov    eax,ds:0x51520312
  4130d6:	fsubrp st(3),st
  4130d8:	add    dl,bl
  4130da:	add    al,0x84
  4130dc:	gs adc al,0x68
  4130df:	xlat   BYTE PTR ds:[ebx]
  4130e0:	dec    esi
  4130e1:	mov    esp,0x75b838bd
  4130e6:	out    dx,al
  4130e7:	fidivr DWORD PTR fs:[edx+0xd]
  4130eb:	loope  0x413136
  4130ed:	in     eax,0x9
  4130ef:	push   ds
  4130f0:	out    0xe4,eax
  4130f2:	clc    
  4130f3:	adc    esp,ecx
  4130f5:	cld    
  4130f6:	icebp  
  4130f7:	es adc esi,edi
  4130fa:	out    0x98,al
  4130fc:	or     BYTE PTR [esi+0x1b],ch
  4130ff:	push   cs
  413100:	mov    edi,0x50a3ee43
  413105:	mov    cl,0x38
  413107:	les    eax,FWORD PTR [ecx]
  413109:	ror    DWORD PTR [eax+0x117d197d],1
  41310f:	das    
  413110:	or     esi,DWORD PTR [ebx+0x50cb28fa]
  413116:	cmp    BYTE PTR [ebx+0x5c],ch
  413119:	adc    al,dl
  41311b:	enter  0x1095,0x40
  41311f:	or     DWORD PTR [edx+0x7e],ebx
  413122:	iret   
  413123:	xchg   ecx,eax
  413124:	out    0xb,eax
  413126:	and    dl,ah
  413128:	outs   dx,DWORD PTR ds:[esi]
  413129:	(bad)  
  41312a:	out    dx,al
  41312b:	(bad)  
  41312d:	inc    esp
  41312e:	lods   al,BYTE PTR ds:[esi]
  41312f:	sbb    al,0xde
  413131:	jp     0x4131af
  413133:	lods   al,BYTE PTR ds:[esi]
  413134:	mov    ch,dl
  413136:	mov    eax,0x1ba65e59
  41313b:	push   esi
  41313c:	xchg   ecx,eax
  41313d:	pop    ss
  41313e:	scas   al,BYTE PTR es:[edi]
  41313f:	push   edx
  413140:	div    BYTE PTR ss:[eax]
  413143:	test   al,0x29
  413145:	int3   
  413146:	jns    0x413166
  413148:	lahf   
  413149:	test   ebp,edx
  41314b:	in     eax,dx
  41314c:	cmp    ah,dh
  41314e:	daa    
  41314f:	or     BYTE PTR [eax],ch
  413151:	out    dx,al
  413152:	popa   
  413153:	sub    DWORD PTR [eax+eiz*8],edx
  413156:	stos   DWORD PTR es:[edi],eax
  413157:	mov    ecx,es
  413159:	scas   al,BYTE PTR es:[edi]
  41315a:	rcr    BYTE PTR [ebp-0x60],1
  41315d:	adc    al,0xea
  41315f:	sub    ecx,DWORD PTR [edi+0x42]
  413162:	loopne 0x41313c
  413164:	loop   0x413183
  413166:	push   edx
  413167:	fdivr  DWORD PTR [edx-0xb]
  41316a:	imul   ebp,DWORD PTR [ebx+0x111ab624],0x15
  413171:	mov    eax,0xef81df68
  413176:	enter  0x1e38,0x6a
  41317a:	pop    esi
  41317b:	fstp   st(6)
  41317d:	push   esp
  41317e:	and    BYTE PTR [eax*1+0x256907dc],0x96
  413186:	mov    ds:0xce95a05f,al
  41318b:	inc    edx
  41318c:	ret    
  41318d:	dec    edi
  41318e:	lock inc eax
  413190:	aas    
  413191:	call   0x768a908c
  413196:	mov    edi,0xa2ff1062
  41319b:	les    edx,FWORD PTR [edx+0x5a022eeb]
  4131a1:	hlt    
  4131a2:	mov    bh,0x3f
  4131a4:	mov    bh,0x96
  4131a6:	ret    0x3115
  4131a9:	loopne 0x413216
  4131ab:	daa    
  4131ac:	(bad)  
  4131ad:	pop    edx
  4131ae:	imul   edx,DWORD PTR [esp+esi*4+0x4b502632],0xffffffed
  4131b6:	push   ebx
  4131b7:	mov    DWORD PTR [edi-0x2ebf472b],edi
  4131bd:	xchg   edi,eax
  4131be:	xor    ebp,ebp
  4131c0:	stc    
  4131c1:	mov    ?,WORD PTR [ebx-0x75]
  4131c4:	push   eax
  4131c5:	inc    ecx
  4131c6:	lods   eax,DWORD PTR ds:[esi]
  4131c7:	and    dh,BYTE PTR [ecx+0x28f4fd08]
  4131cd:	pop    edi
  4131ce:	pop    ds
  4131cf:	sbb    eax,0xc188a10f
  4131d4:	in     eax,0x74
  4131d6:	sbb    eax,DWORD PTR [esi+ebp*2+0x19e9f7a0]
  4131dd:	es or  eax,0x23ae466b
  4131e3:	outs   dx,DWORD PTR ds:[esi]
  4131e4:	push   ecx
  4131e5:	test   al,0x77
  4131e7:	push   ecx
  4131e8:	pop    edi
  4131e9:	inc    ecx
  4131ea:	jnp    0x413244
  4131ec:	mov    bl,0x72
  4131ee:	(bad)  
  4131f0:	add    esi,ecx
  4131f2:	pop    ds
  4131f3:	push   0x4d47b440
  4131f8:	out    dx,eax
  4131f9:	stos   DWORD PTR es:[edi],eax
  4131fa:	(bad)  
  4131fb:	lahf   
  4131fc:	dec    ebx
  4131fd:	bnd ret 0x2b55
  413201:	repnz xchg esi,eax
  413203:	les    ebx,FWORD PTR [ebp-0x71]
  413206:	jge    0x4131f0
  413208:	or     bl,bl
  41320a:	es jb  0x41318e
  41320d:	mov    al,0xe2
  41320f:	add    BYTE PTR ds:0xd2399fd0,dh
  413215:	dec    eax
  413216:	enter  0xd424,0x38
  41321a:	punpckhwd mm2,QWORD PTR [ebx+edi*8+0x61f66684]
  413222:	and    DWORD PTR [ebx],edi
  413224:	xlat   BYTE PTR ds:[ebx]
  413225:	out    0xd0,al
  413227:	aam    0xe0
  413229:	loope  0x413221
  41322b:	arpl   WORD PTR [ebp+0x2f],dx
  41322e:	adc    ebx,DWORD PTR [ebx-0x4]
  413231:	add    ah,bh
  413233:	inc    eax
  413234:	xor    BYTE PTR [ecx],ch
  413236:	add    edi,ecx
  413238:	xor    al,0x99
  41323a:	leave  
  41323b:	jbe    0x41321a
  41323d:	mov    bl,0x3a
  41323f:	dec    eax
  413240:	sub    DWORD PTR [edx-0x740c5422],edx
  413246:	or     bh,bh
  413248:	inc    esp
  413249:	push   ecx
  41324a:	retf   0x6f10
  41324d:	dec    ecx
  41324e:	ret    0x5484
  413251:	fwait
  413252:	sbb    DWORD PTR [edx-0x262b4fe9],edx
  413258:	shr    DWORD PTR [ebp-0x641db113],cl
  41325e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41325f:	clc    
  413260:	jle    0x413236
  413262:	pop    ebx
  413263:	xor    DWORD PTR [ecx+0x5c428ada],0xffffff98
  41326a:	inc    esi
  41326b:	jmp    0xee8c2ea6
  413270:	cs mov cl,0x40
  413273:	hlt    
  413274:	std    
  413275:	call   0xe924:0x1cb8ee90
  41327c:	and    BYTE PTR [ebx+0x43],dh
  41327f:	add    ah,BYTE PTR [esi+0x1b]
  413282:	mov    eax,0x2a58886b
  413287:	icebp  
  413288:	pop    eax
  413289:	(bad)  
  41328a:	aam    0x95
  41328c:	mul    DWORD PTR [edx+0x7960923f]
  413292:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413293:	mov    ss,WORD PTR [edi]
  413295:	cld    
  413296:	fs cmc 
  413298:	rcr    BYTE PTR [ecx],0xe
  41329b:	dec    eax
  41329c:	jbe    0x41324c
  41329e:	cmp    DWORD PTR [edx-0x39],ebx
  4132a1:	sub    al,0xda
  4132a3:	mov    al,0xef
  4132a5:	pop    edx
  4132a6:	jg     0x4132af
  4132a8:	mov    dl,BYTE PTR [ecx+ebx*1-0x25f7e5ad]
  4132af:	(bad)  
  4132b2:	or     BYTE PTR [ecx],0x35
  4132b5:	popa   
  4132b6:	jo     0x41330d
  4132b8:	pushf  
  4132b9:	xchg   edx,eax
  4132ba:	xchg   esp,eax
  4132bb:	pushf  
  4132bc:	ins    DWORD PTR es:[edi],dx
  4132bd:	and    ebp,DWORD PTR [esi+ebp*1]
  4132c0:	test   al,0x20
  4132c2:	pop    ecx
  4132c3:	addr16 loope 0x41327d
  4132c6:	ins    BYTE PTR es:[edi],dx
  4132c7:	retf   0x1118
  4132ca:	shl    edx,cl
  4132cc:	in     al,0xbd
  4132ce:	inc    esp
  4132cf:	shr    BYTE PTR ds:0xe35e69b2,cl
  4132d5:	add    DWORD PTR [ecx],esp
  4132d7:	sub    esi,ebx
  4132d9:	inc    ebx
  4132da:	and    eax,0xce0b674
  4132df:	xchg   edi,eax
  4132e0:	xor    DWORD PTR [ebx+0x7a],ebp
  4132e3:	out    0x23,al
  4132e5:	repz add ch,0x85
  4132e9:	imul   edx,DWORD PTR [edi],0xffffff91
  4132ec:	lds    ebx,FWORD PTR [eax+0x68]
  4132ef:	loopne 0x41327e
  4132f1:	inc    ebx
  4132f2:	loope  0x413324
  4132f4:	sbb    al,0xcf
  4132f6:	sbb    eax,0x50ce41db
  4132fb:	xor    bl,ah
  4132fd:	push   0xf45e2c14
  413302:	sub    DWORD PTR [ecx-0x5d10816a],ecx
  413308:	and    al,0xa6
  41330a:	daa    
  41330b:	cwde   
  41330c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41330d:	stos   DWORD PTR es:[edi],eax
  41330e:	dec    eax
  41330f:	aas    
  413310:	push   ds
  413311:	sub    dl,BYTE PTR [ebp+0x6b]
  413314:	fld    QWORD PTR [edx+0x26]
  413317:	push   edi
  413318:	ins    BYTE PTR es:[edi],dx
  413319:	fistp  DWORD PTR [ebx+eax*1-0x4d]
  41331d:	call   0x3bf1:0xa4d8f5e4
  413324:	shl    DWORD PTR [ecx+ebx*8],0xb5
  413328:	mov    DWORD PTR [ebx],ebx
  41332a:	push   ecx
  41332b:	aas    
  41332c:	outs   dx,DWORD PTR ds:[esi]
  41332d:	imul   edi,DWORD PTR [edx],0x5c85306d
  413333:	ret    
  413334:	stos   DWORD PTR es:[edi],eax
  413335:	stc    
  413336:	ins    BYTE PTR es:[edi],dx
  413337:	cmp    eax,0xe9506bac
  41333c:	and    eax,0xad5e2c93
  413341:	adc    ch,BYTE PTR [ebx-0x4a2f826f]
  413347:	inc    edi
  413348:	jae    0x4132ee
  41334a:	gs (bad) 
  41334c:	cmp    ecx,esi
  41334e:	std    
  41334f:	pop    esi
  413350:	mov    eax,ds:0x5ce1e638
  413355:	inc    ebp
  413356:	jno    0x41331e
  413358:	mov    bh,0xc2
  41335a:	jns    0x41336c
  41335c:	and    eax,0x3ffedb0c
  413361:	ret    0x176d
  413364:	pop    es
  413365:	inc    eax
  413366:	and    DWORD PTR [edi+0x12f0ed83],ebx
  41336c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41336d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41336e:	inc    ebx
  41336f:	adc    esp,esp
  413371:	popa   
  413372:	mov    eax,0xda176b71
  413377:	ret    0x520f
  41337a:	jbe    0x413361
  41337c:	arpl   WORD PTR [ebp-0x168d0940],dx
  413382:	xor    dh,cl
  413384:	outs   dx,DWORD PTR ds:[esi]
  413385:	mov    eax,0x91bb0526
  41338a:	pop    eax
  41338b:	mov    ah,0x8
  41338d:	xor    DWORD PTR [edx+edi*8-0x15fae87b],eax
  413394:	pminsw mm2,QWORD PTR [ebx+eax*2-0x61]
  413399:	out    dx,al
  41339a:	push   esi
  41339b:	loop   0x413348
  41339d:	xchg   esi,eax
  41339e:	jmp    0x4133b9
  4133a0:	sahf   
  4133a1:	pop    ebp
  4133a2:	sbb    al,0x83
  4133a4:	xor    DWORD PTR [ebp+0x45],eax
  4133a7:	sub    edi,DWORD PTR [esp+edi*1-0x27d05405]
  4133ae:	fidiv  DWORD PTR [ebx]
  4133b0:	rcl    DWORD PTR [ecx],cl
  4133b2:	dec    eax
  4133b3:	sbb    eax,0x8ac23f3e
  4133b8:	and    DWORD PTR [ebp+0x69],edi
  4133bb:	idiv   edx
  4133bd:	cmp    al,0x1e
  4133bf:	xchg   edi,eax
  4133c0:	and    al,BYTE PTR [eax]
  4133c2:	mov    ds:0xb617dac1,eax
  4133c7:	xchg   esi,eax
  4133c8:	xlat   BYTE PTR ds:[ebx]
  4133c9:	les    ebp,FWORD PTR [ecx+0x7]
  4133cc:	aaa    
  4133cd:	sbb    esi,eax
  4133cf:	mov    edi,0x153123ce
  4133d4:	mov    ch,0x1a
  4133d6:	leave  
  4133d7:	ret    
  4133d8:	into   
  4133d9:	xchg   ecx,eax
  4133da:	jb     0x413416
  4133dc:	test   eax,0x509c67f3
  4133e1:	adc    eax,0x53b20271
  4133e6:	fmul   QWORD PTR [ebp-0x2b5a37f1]
  4133ec:	add    bh,dh
  4133ee:	ins    DWORD PTR es:[edi],dx
  4133ef:	jbe    0x41341c
  4133f1:	call   0x715588a0
  4133f6:	in     eax,0xbd
  4133f8:	xor    ecx,DWORD PTR [edi-0x41a01dc6]
  4133fe:	jae    0x41342e
  413400:	fbstp  TBYTE PTR cs:[eax-0x7c073c3a]
  413407:	lahf   
  413408:	fsubrp st(7),st
  41340a:	inc    esp
  41340b:	mov    esi,0xee7debc5
  413410:	add    DWORD PTR [ecx+0x44],0xffffff8f
  413414:	dec    esp
  413415:	jmp    0xae02:0x714bd45a
  41341c:	inc    edx
  41341d:	ja     0x4133a0
  41341f:	sub    DWORD PTR ds:[ecx],0x66
  413423:	jmp    0x15e2fa48
  413428:	push   0x40
  41342a:	scas   al,BYTE PTR es:[edi]
  41342b:	in     al,dx
  41342c:	lock mov dh,0x0
  41342f:	add    ebp,ecx
  413431:	pop    es
  413432:	or     eax,0xe5ae4239
  413437:	fcomi  st,st(6)
  413439:	add    DWORD PTR [ebx],ecx
  41343b:	push   ebp
  41343c:	jge    0x4134ae
  41343e:	jo     0x41344b
  413440:	sahf   
  413441:	fdivr  QWORD PTR [edi]
  413443:	faddp  st(5),st
  413445:	and    eax,0x1eec1cbf
  41344a:	pop    esp
  41344b:	push   ss
  41344c:	inc    edx
  41344d:	outs   dx,DWORD PTR ds:[esi]
  41344e:	ret    0x13a9
  413451:	dec    ebp
  413452:	cwde   
  413453:	test   edx,ecx
  413455:	pushf  
  413456:	shl    esi,0x5a
  413459:	pop    ebx
  41345a:	cmp    ecx,DWORD PTR [edi]
  41345c:	ss xor eax,0xeed03923
  413462:	and    DWORD PTR [edx+0x5b],ecx
  413465:	icebp  
  413466:	sbb    al,0x1d
  413468:	leave  
  413469:	gs and al,0xc8
  41346c:	push   ebx
  41346d:	imul   esi,DWORD PTR [ecx-0x3e400f15],0xffffffb7
  413474:	lods   al,BYTE PTR ds:[esi]
  413475:	xchg   DWORD PTR [edi-0x3a25cb2d],edi
  41347b:	sub    eax,edx
  41347d:	sbb    DWORD PTR [ecx+0x1f579b50],0x5a
  413484:	mov    esi,0xa797569a
  413489:	lock fist WORD PTR [edx+0x69]
  41348d:	and    eax,0xf7a1af87
  413493:	test   eax,0x256366e6
  413498:	inc    ebp
  413499:	xchg   dh,bl
  41349b:	xchg   ecx,eax
  41349c:	mov    cl,0x80
  41349e:	xchg   edx,eax
  41349f:	push   eax
  4134a0:	sbb    cl,BYTE PTR [edi]
  4134a2:	fcomi  st,st(3)
  4134a4:	mov    al,ds:0xbda11b68
  4134a9:	pushf  
  4134aa:	inc    ebp
  4134ab:	sbb    bl,BYTE PTR [eax-0x3bf447be]
  4134b1:	add    ebx,DWORD PTR [eax]
  4134b3:	bound  eax,QWORD PTR [ebx+0xc]
  4134b6:	sub    DWORD PTR [edx],edi
  4134b8:	adc    DWORD PTR [ecx+0x39e8022f],0x6f69b08b
  4134c2:	push   ebx
  4134c3:	pushf  
  4134c4:	and    DWORD PTR [eax+0x772769f2],esi
  4134ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4134cb:	repz xor al,BYTE PTR [esi]
  4134ce:	data16 jae 0x413530
  4134d1:	(bad)  
  4134d3:	or     eax,0x6353d0d9
  4134d8:	push   es
  4134d9:	fldcw  WORD PTR [ebx]
  4134db:	and    ah,dh
  4134dd:	inc    ebp
  4134de:	cmp    DWORD PTR [ecx-0x3],esp
  4134e1:	cdq    
  4134e2:	cld    
  4134e3:	fld    TBYTE PTR [edi+0x4350bc9b]
  4134e9:	out    dx,al
  4134ea:	mov    ebp,0x9e35a38f
  4134ef:	or     DWORD PTR [ecx],ebp
  4134f1:	sbb    eax,0x55d7bd55
  4134f6:	xor    BYTE PTR [ebx+esi*4+0x3c9c9304],0x3c
  4134fe:	jmp    0x781d18c8
  413503:	adc    esi,eax
  413505:	fcmovnu st,st(3)
  413507:	cmp    dh,BYTE PTR [ebx]
  413509:	mov    esp,0xc9de3c04
  41350e:	scas   eax,DWORD PTR es:[edi]
  41350f:	into   
  413510:	aam    0x2c
  413512:	xor    DWORD PTR [eax+0x6f4dde5f],0x1
  413519:	dec    esp
  41351a:	jle    0x41354c
  41351c:	dec    ebx
  41351d:	ror    dh,cl
  41351f:	cwde   
  413520:	and    edi,DWORD PTR [ecx-0x2b]
  413523:	call   0x634a6166
  413528:	inc    ebx
  413529:	into   
  41352a:	nop
  41352b:	call   0xb8874748
  413530:	dec    ecx
  413531:	es jmp 0xd7636ace
  413537:	dec    esp
  413538:	pop    esp
  413539:	cwde   
  41353a:	mov    al,ds:0xbaa6c9d
  41353f:	and    eax,0xd0ce87cf
  413544:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413545:	jmp    0x9cc1:0xcd22a60a
  41354c:	fnsave [edi+eax*1]
  41354f:	mov    ds:0x8a7915c9,eax
  413554:	stc    
  413555:	inc    eax
  413556:	and    BYTE PTR [ebp+edi*1+0xe],dl
  41355a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41355b:	jg     0x41352d
  41355d:	std    
  41355e:	inc    esi
  41355f:	ins    BYTE PTR es:[edi],dx
  413560:	div    BYTE PTR [edi+0x79eec39b]
  413566:	ror    DWORD PTR [edi-0x1d],1
  413569:	retf   0x41c2
  41356c:	xchg   esp,eax
  41356d:	out    dx,al
  41356e:	cmc    
  41356f:	sbb    DWORD PTR [eax+0x57510915],eax
  413575:	jb     0x413532
  413577:	mov    ch,0xd
  413579:	cmp    edi,esi
  41357b:	out    dx,al
  41357c:	pop    ds
  41357d:	push   edx
  41357e:	fiadd  WORD PTR [eax-0x5fc9f505]
  413584:	and    eax,0xa0a71f5f
  413589:	adc    edx,DWORD PTR [ebx-0x45]
  41358c:	sub    eax,0xe5c234f8
  413591:	out    0xc9,eax
  413593:	xchg   dx,ax
  413595:	mov    dh,0x2e
  413597:	addr16 daa 
  413599:	jge    0x413583
  41359b:	lods   eax,DWORD PTR ds:[esi]
  41359c:	js     0x4135d5
  41359e:	mov    ds:0xaf5c8d6e,al
  4135a3:	push   es
  4135a4:	cmp    BYTE PTR [ecx],cl
  4135a6:	or     al,0xcc
  4135a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4135a9:	mov    ebx,0x80f4b747
  4135ae:	popf   
  4135af:	cmp    DWORD PTR [ebp+0x6236afe8],ebx
  4135b5:	shl    DWORD PTR [ebx+0x7],1
  4135b8:	lods   al,BYTE PTR ds:[esi]
  4135b9:	adc    BYTE PTR [ebx-0x2e],bh
  4135bc:	xchg   DWORD PTR [eax+0x5828d886],eax
  4135c2:	pop    ds
  4135c3:	enter  0x1ed0,0x16
  4135c7:	xor    DWORD PTR [ebx],eax
  4135c9:	and    dl,dh
  4135cb:	dec    ecx
  4135cc:	dec    edx
  4135cd:	imul   ebp,DWORD PTR [esi+0x7f],0x421f849a
  4135d4:	enter  0x3519,0x84
  4135d8:	gs inc ebp
  4135da:	aad    0x11
  4135dc:	push   0xe420856f
  4135e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4135e2:	fdivr  st,st(6)
  4135e4:	rcl    edi,1
  4135e6:	mov    bh,al
  4135e8:	add    eax,0x85ca33c5
  4135ed:	in     eax,0xea
  4135ef:	int    0x3b
  4135f1:	pop    ds
  4135f2:	xchg   ebx,eax
  4135f3:	ss in  al,0xc1
  4135f6:	sbb    edx,eax
  4135f8:	push   ss
  4135f9:	adc    al,0xf9
  4135fb:	pop    ds
  4135fc:	shl    DWORD PTR [edx-0x30],1
  4135ff:	jmp    0x2f8b7171
  413604:	fstp   DWORD PTR [edi+0x64773833]
  41360a:	xchg   esp,eax
  41360b:	out    0x70,eax
  41360d:	xchg   edi,eax
  41360e:	mov    ecx,ecx
  413610:	xchg   ebp,eax
  413611:	push   esi
  413612:	je     0x413646
  413614:	adc    esp,ecx
  413616:	sbb    al,0xbe
  413618:	mov    ecx,0x14129594
  41361d:	adc    eax,0x4bd51c7
  413622:	ja     0x4136a0
  413624:	in     eax,dx
  413625:	iret   
  413626:	or     BYTE PTR [eax+esi*1],bl
  413629:	xchg   esp,eax
  41362a:	addr16 adc eax,0x180f17bf
  413630:	(bad)  [eax+0x4aa39943]
  413636:	(bad)  
  413637:	(bad)  
  413638:	cmp    ebp,ebx
  41363a:	je     0x4135c3
  41363c:	push   ebp
  41363d:	jp     0x41364e
  41363f:	mov    ds:0x999230a9,al
  413644:	retf   
  413645:	mov    bl,0x1d
  413647:	and    ebp,DWORD PTR [ebx]
  413649:	jbe    0x413666
  41364b:	and    dh,BYTE PTR [ecx-0x58]
  41364e:	mov    cl,0xcd
  413650:	add    cl,BYTE PTR [eax+0x40]
  413653:	sub    al,0x3d
  413655:	mov    al,ds:0x4550a247
  41365a:	xchg   esp,eax
  41365b:	and    dl,al
  41365d:	cs mov eax,0x3c7d5924
  413663:	push   edi
  413664:	mov    cl,0xb7
  413666:	push   ds
  413667:	adc    BYTE PTR ds:0x7bdb352b,ch
  41366d:	fiadd  WORD PTR [ebx-0x2b7cec4c]
  413673:	retf   
  413674:	dec    ebx
  413675:	sbb    ch,BYTE PTR ds:0xb9cf9f1c
  41367b:	es dec eax
  41367d:	pop    ss
  41367e:	mov    dh,0xdb
  413680:	mov    eax,ds:0x32deb72f
  413685:	imul   ecx,esp,0xffffffaf
  413688:	or     dl,bh
  41368a:	ror    DWORD PTR [edx-0x19],1
  41368d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41368e:	push   esp
  41368f:	mov    ah,0xb2
  413691:	jo     0x4136b4
  413693:	aas    
  413694:	pop    ss
  413695:	fadd   DWORD PTR [esi+0x1b63fb47]
  41369b:	mov    dh,0x6
  41369d:	adc    cl,BYTE PTR [ecx+0x38]
  4136a0:	pop    esp
  4136a1:	mov    bl,0xb8
  4136a3:	mov    eax,0xf6edd055
  4136a8:	cs lahf 
  4136aa:	popf   
  4136ab:	jnp    0x41371d
  4136ad:	fs sbb al,0xa6
  4136b0:	cdq    
  4136b1:	scas   eax,DWORD PTR es:[edi]
  4136b2:	aaa    
  4136b3:	sub    dh,al
  4136b5:	dec    edx
  4136b6:	pop    ecx
  4136b7:	test   eax,0xe84a3417
  4136bc:	mov    ebx,0xd7e7cc56
  4136c1:	push   0x6f
  4136c3:	imul   BYTE PTR [edx-0x43]
  4136c6:	das    
  4136c7:	in     eax,0x2f
  4136c9:	adc    eax,0x60d60673
  4136ce:	icebp  
  4136cf:	inc    ecx
  4136d0:	scas   al,BYTE PTR es:[edi]
  4136d1:	inc    ebx
  4136d2:	inc    ebp
  4136d3:	(bad)  
  4136d4:	fisttp QWORD PTR [eax+ecx*4-0x5a]
  4136d8:	xchg   BYTE PTR [edi+0x16e74d77],dl
  4136de:	imul   edi,DWORD PTR [ebx+0x6d],0x4f62db17
  4136e5:	sub    edi,DWORD PTR [esi]
  4136e7:	pop    es
  4136e8:	sub    bl,BYTE PTR [ecx+eiz*4-0x7b]
  4136ec:	jg     0x4136b9
  4136ee:	mov    esp,DWORD PTR [edx]
  4136f0:	or     eax,0xdf9a0581
  4136f5:	scas   eax,DWORD PTR es:[edi]
  4136f6:	xlat   BYTE PTR ds:[ebx]
  4136f7:	push   edi
  4136f8:	cdq    
  4136f9:	repnz dec esi
  4136fb:	cli    
  4136fc:	rol    BYTE PTR [esi-0x46],0x50
  413700:	scas   eax,DWORD PTR es:[edi]
  413701:	push   edx
  413702:	retf   
  413703:	cmc    
  413704:	jmp    0x4136eb
  413706:	pusha  
  413707:	xchg   esi,esp
  413709:	into   
  41370a:	sbb    BYTE PTR [edi-0x4dc5aae6],ch
  413710:	pop    edi
  413711:	shr    dh,cl
  413713:	and    DWORD PTR [edx-0x2d],eax
  413716:	mov    bh,0xeb
  413718:	inc    esp
  413719:	aam    0x33
  41371b:	jecxz  0x413711
  41371d:	and    eax,0x99832c2d
  413722:	push   0x6e
  413724:	xchg   DWORD PTR [esi-0x17],esi
  413727:	mov    al,ah
  413729:	shr    BYTE PTR [ecx+0x7caa05f5],0xc
  413730:	data16 sbb BYTE PTR [eax],dl
  413733:	adc    bh,cl
  413735:	push   es
  413736:	xor    ah,dh
  413738:	mov    ds:0xe0fa73b3,eax
  41373d:	push   eax
  41373e:	shl    BYTE PTR [ebp+0x1d8277b9],0xf8
  413745:	sbb    eax,edx
  413747:	lahf   
  413748:	jno    0x4136f8
  41374a:	adc    esp,DWORD PTR [ebx-0xa]
  41374d:	and    al,0xef
  41374f:	in     al,0x20
  413751:	aam    0xe1
  413753:	pop    ecx
  413754:	mov    edx,0xafdfc77f
  413759:	(bad)  
  41375a:	xchg   ebx,eax
  41375c:	out    0x6f,eax
  41375e:	scas   eax,DWORD PTR es:[edi]
  41375f:	jmp    0x4136e7
  413761:	mov    edx,DWORD PTR [ecx]
  413763:	test   al,0x76
  413765:	faddp  st(4),st
  413767:	cli    
  413768:	into   
  413769:	pop    es
  41376a:	arpl   WORD PTR [edi*4-0x2d164374],cx
  413771:	xor    bh,BYTE PTR [ebx]
  413773:	jmp    0x4136fe
  413775:	sbb    eax,0xfe9e9f56
  41377a:	out    0xd1,eax
  41377c:	scas   eax,DWORD PTR es:[edi]
  41377d:	inc    ecx
  41377e:	daa    
  41377f:	addr16 sub eax,0x5d3e26e5
  413785:	fs mov eax,0x8475c82a
  41378b:	and    dh,dl
  41378d:	mov    esi,0x9400587f
  413792:	fstp   DWORD PTR [ecx-0x5e]
  413795:	dec    edx
  413796:	ja     0x4137c1
  413798:	rol    BYTE PTR [esi],cl
  41379a:	mov    cl,0xc6
  41379c:	out    0x9d,al
  41379e:	in     eax,0x31
  4137a0:	fst    st(7)
  4137a2:	sbb    ebp,esp
  4137a4:	int    0xa7
  4137a6:	mov    WORD PTR [ecx-0x1b5ee17f],es
  4137ac:	clc    
  4137ad:	xor    bl,BYTE PTR [edi+0x31]
  4137b0:	jno    0x413753
  4137b2:	popa   
  4137b3:	gs cmp eax,0xfb7db27f
  4137b9:	iret   
  4137ba:	jle    0x4137fc
  4137bc:	pop    edi
  4137bd:	test   eax,0x6c9ee63c
  4137c2:	and    al,0xc0
  4137c4:	je     0x413802
  4137c6:	and    DWORD PTR [ebp-0x5829ed3a],0xffffffc8
  4137cd:	mov    esi,0xcc6d1275
  4137d2:	mov    WORD PTR [edi+0x1f],?
  4137d5:	out    dx,eax
  4137d6:	pop    ebx
  4137d7:	xchg   ebx,eax
  4137d8:	sbb    eax,0x2860bec6
  4137dd:	ret    0xadc5
  4137e0:	cmp    ah,ch
  4137e2:	ss into 
  4137e4:	dec    ecx
  4137e5:	cwde   
  4137e6:	arpl   WORD PTR [edi-0xc7bdf11],si
  4137ec:	xor    BYTE PTR [eax-0x20],al
  4137ef:	push   eax
  4137f0:	push   0xada747a7
  4137f5:	iret   
  4137f6:	push   0x30
  4137f8:	loopne 0x413861
  4137fa:	adc    DWORD PTR [ecx+eax*2+0x61],0x72
  4137ff:	xor    eax,0xfab1c51a
  413804:	push   esp
  413805:	aam    0xb6
  413807:	lds    esi,FWORD PTR [ecx-0x69]
  41380a:	or     al,0x4c
  41380c:	stos   DWORD PTR es:[edi],eax
  41380d:	xchg   ebp,eax
  41380e:	aad    0x2b
  413810:	repnz (bad) 
  413812:	rcl    ah,cl
  413814:	adc    eax,0x77cfa122
  413819:	arpl   WORD PTR [esi+ebp*4+0x399c2825],sp
  413820:	outs   dx,DWORD PTR ds:[esi]
  413821:	sub    bl,BYTE PTR [esi]
  413823:	inc    edi
  413824:	add    al,0x85
  413827:	inc    ecx
  413828:	bound  ebx,QWORD PTR [edx-0x3a44596]
  41382e:	mov    edx,0x86a417b7
  413833:	fdiv   QWORD PTR [edx]
  413835:	cs adc al,0x63
  413838:	sub    eax,0xd799cf2e
  41383d:	pop    ebx
  41383e:	scas   al,BYTE PTR es:[edi]
  41383f:	sub    al,0x4f
  413841:	xchg   esp,eax
  413842:	dec    ebx
  413843:	cmp    eax,0x209574f
  413848:	push   cs
  413849:	adc    cl,BYTE PTR ds:0x2dcd17aa
  41384f:	imul   ebp,DWORD PTR [ecx],0xffffffdb
  413852:	mov    bl,0x34
  413854:	adc    edi,DWORD PTR [eax-0xa]
  413857:	dec    ecx
  413858:	mov    ebp,0xf427e194
  41385d:	pop    edx
  41385e:	dec    ecx
  41385f:	(bad)  [ecx]
  413861:	jne    0x413824
  413863:	sbb    DWORD PTR [esi-0x17],ebp
  413866:	and    al,0x61
  413868:	and    al,0x9e
  41386a:	pop    ecx
  41386b:	pop    edx
  41386c:	jns    0x413892
  41386e:	adc    esi,DWORD PTR [eax]
  413870:	xchg   sp,ax
  413872:	fwait
  413873:	xor    dh,BYTE PTR [ecx-0x21]
  413876:	daa    
  413877:	xor    DWORD PTR [esp+ecx*8],ebx
  41387a:	stos   DWORD PTR es:[edi],eax
  41387b:	shr    DWORD PTR [ebp-0x2507983b],cl
  413881:	cmp    DWORD PTR [edx-0x374d0d5b],0x42
  413888:	mov    dh,0xc7
  41388a:	adc    dl,ch
  41388c:	push   esp
  41388d:	jbe    0x4138a5
  41388f:	(bad)
  413893:	inc    ebx
  413894:	jl     0x413832
  413896:	std    
  413897:	mov    BYTE PTR [eax],bh
  413899:	adc    bl,al
  41389b:	lock xor eax,0x5808ba8c
  4138a1:	sti    
  4138a2:	and    esi,DWORD PTR gs:[esi-0x7b7a762e]
  4138a9:	int    0xd5
  4138ab:	stos   BYTE PTR es:[edi],al
  4138ac:	or     DWORD PTR [ebp-0xb8efabd],esp
  4138b2:	into   
  4138b3:	cdq    
  4138b4:	icebp  
  4138b5:	inc    ebx
  4138b6:	push   edx
  4138b7:	pop    esi
  4138b8:	nop
  4138b9:	das    
  4138ba:	inc    ebp
  4138bb:	or     dh,BYTE PTR [eax-0x7d]
  4138be:	cmp    DWORD PTR [esi-0x74],ebx
  4138c1:	jg     0x41392f
  4138c3:	repnz cli 
  4138c5:	out    0x2b,eax
  4138c7:	or     DWORD PTR [edx+0x5381a922],edi
  4138cd:	aad    0x28
  4138cf:	(bad)  
  4138d0:	call   0x58574ccc
  4138d5:	jmp    0xe1bf9d02
  4138da:	or     DWORD PTR [ebx+ecx*1+0x7e9c0ccd],esi
  4138e1:	adc    esp,DWORD PTR [ebx]
  4138e3:	push   ebx
  4138e4:	mov    bh,0xb1
  4138e6:	sub    ch,BYTE PTR [edx]
  4138e8:	neg    DWORD PTR [edi]
  4138ea:	cmp    ebx,edi
  4138ec:	or     al,0x3e
  4138ee:	fmul   QWORD PTR [edi-0x5288f216]
  4138f4:	pop    ebx
  4138f5:	sub    al,bl
  4138f7:	inc    ebx
  4138f8:	cs std 
  4138fa:	sbb    BYTE PTR [eax+0x41562b84],ch
  413900:	into   
  413901:	shl    DWORD PTR [ecx-0x2],0x11
  413905:	inc    edx
  413906:	clc    
  413907:	xor    dl,ah
  413909:	mov    eax,ds:0x46bdbff
  41390e:	mov    bl,BYTE PTR [esi]
  413910:	ret    
  413911:	jmp    DWORD PTR [esi]
  413913:	(bad)  
  413914:	int3   
  413915:	fsub   DWORD PTR [esi-0x5c63471a]
  41391b:	loop   0x413933
  41391d:	shl    DWORD PTR [ebx-0x8],cl
  413920:	addr16 xchg ebx,eax
  413922:	mov    al,ds:0xd85d966f
  413927:	mov    ds:0x9d7f707d,al
  41392c:	xor    DWORD PTR [edi],ebp
  41392e:	fistp  QWORD PTR [esi-0x4bad2637]
  413934:	mov    DWORD PTR [edi+0x7b],edx
  413937:	nop
  413938:	dec    ebx
  413939:	popa   
  41393a:	inc    ebp
  41393b:	inc    esi
  41393c:	inc    ecx
  41393d:	out    0xca,eax
  41393f:	and    BYTE PTR [esp+eiz*2+0x26],bl
  413943:	loope  0x4138f3
  413945:	jbe    0x4138c9
  413947:	into   
  413948:	jmp    0x41397d
  41394a:	or     DWORD PTR [eax+ebp*4-0x18],ebp
  41394e:	cmp    dh,BYTE PTR [eax+0x73e51232]
  413954:	pop    edi
  413955:	lds    ebx,FWORD PTR [edx+0x6e202f3a]
  41395b:	rcr    BYTE PTR [ecx-0x4c],cl
  41395e:	xchg   ebx,ebx
  413960:	sub    ah,dl
  413962:	cmp    BYTE PTR [ebx-0x2a],dl
  413965:	imul   esp,DWORD PTR [ebp-0x4],0x5d
  413969:	mov    dh,0xed
  41396b:	es int3 
  41396d:	int    0xd8
  41396f:	repz loopne 0x4139dd
  413972:	test   eax,0x80ba5329
  413977:	cmp    DWORD PTR [ebx],ebx
  413979:	int    0x8a
  41397b:	fild   QWORD PTR ds:0x8dcd9910
  413981:	shl    DWORD PTR [ecx-0x770c2995],cl
  413987:	or     eax,0x8959ae2b
  41398c:	cmp    DWORD PTR [ecx-0x71],ebp
  41398f:	and    eax,0x4ba2395e
  413994:	push   ds
  413995:	cmp    cl,bh
  413997:	sbb    al,bl
  413999:	(bad)  
  41399a:	scas   al,BYTE PTR es:[edi]
  41399b:	mov    ds:0xb6ce7ce6,al
  4139a0:	int    0xa6
  4139a2:	jmp    0xa43:0x68574f9
  4139a9:	cmp    dl,bl
  4139ab:	fnstsw WORD PTR ds:0x7d9ba2e7
  4139b1:	sbb    al,0x2d
  4139b3:	shl    ah,0x32
  4139b6:	sbb    esp,DWORD PTR [edx+0x6abd64e6]
  4139bc:	addr16 out dx,eax
  4139be:	ror    cl,1
  4139c0:	add    eax,0xce5fabb7
  4139c5:	sub    dl,cl
  4139c7:	sahf   
  4139c8:	mov    DWORD PTR [ecx-0x594aee7],edi
  4139ce:	mov    eax,ds:0xc5934c9
  4139d3:	pop    ss
  4139d4:	in     al,dx
  4139d5:	mov    esi,0x74082210
  4139da:	mov    eax,0xb24a899d
  4139df:	jbe    0x413971
  4139e1:	xor    ecx,DWORD PTR [ebx+0x46]
  4139e4:	les    ebx,FWORD PTR [ebp+0xdee39d1]
  4139ea:	aas    
  4139eb:	(bad)  [esi]
  4139ed:	test   BYTE PTR [eax-0x14edd5a1],ah
  4139f3:	or     DWORD PTR [edx+eiz*8+0x54ef597e],esi
  4139fa:	sbb    bh,BYTE PTR [ebx]
  4139fc:	add    BYTE PTR [ebx+0x4b],0x61
  413a00:	adc    eax,DWORD PTR [ebp-0x1d5d1cb3]
  413a06:	mov    WORD PTR [ebx],ss
  413a08:	fldenv [ecx+0x39]
  413a0b:	inc    ebx
  413a0c:	adc    bl,BYTE PTR ds:0xf9eddcfb
  413a12:	jp     0x413a7f
  413a14:	inc    edx
  413a15:	mov    cl,0xf
  413a17:	mov    al,0x6d
  413a19:	xor    bl,ah
  413a1b:	jno    0x413a6b
  413a1d:	loop   0x4139de
  413a1f:	jmp    0x293a:0xd06bb2b8
  413a26:	mov    cl,dl
  413a28:	sbb    ah,BYTE PTR [edi+eax*2-0x58]
  413a2c:	dec    eax
  413a2d:	leave  
  413a2e:	xor    BYTE PTR [edi+0x2f636473],bl
  413a34:	pop    ebp
  413a35:	cwde   
  413a36:	cmp    esp,esi
  413a38:	mov    BYTE PTR [edi+0x23b59f7d],0x2e
  413a3f:	gs mov ah,0xbe
  413a42:	in     al,dx
  413a43:	imul   esi,DWORD PTR [eax+ebp*2-0x28],0xffffffb0
  413a48:	dec    esi
  413a49:	test   DWORD PTR [esp+ecx*2-0x24bf472],0x45da87d5
  413a54:	push   ss
  413a55:	clc    
  413a56:	sbb    al,0x81
  413a58:	inc    esp
  413a59:	int    0xb3
  413a5b:	xchg   ecx,eax
  413a5c:	add    bl,dl
  413a5e:	in     eax,dx
  413a5f:	or     edx,ecx
  413a61:	inc    ebx
  413a62:	push   esp
  413a63:	ret    
  413a64:	jmp    eax
  413a66:	adc    al,BYTE PTR [ebx]
  413a68:	and    al,0xe8
  413a6a:	shr    BYTE PTR [edx],cl
  413a6c:	test   BYTE PTR [edx-0x62],al
  413a6f:	cld    
  413a70:	gs in  eax,0x46
  413a73:	aas    
  413a74:	cmp    BYTE PTR [edx+0x66],dh
  413a77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a78:	pop    ds
  413a79:	shl    esi,0x50
  413a7c:	inc    edx
  413a7d:	push   0xa86f1ace
  413a82:	add    ah,bl
  413a84:	dec    ebp
  413a85:	lock idiv BYTE PTR [edx]
  413a88:	inc    esi
  413a89:	repnz (bad) 
  413a8c:	call   0x824a:0x3db9d85
  413a93:	js     0x413a20
  413a95:	or     edi,esi
  413a97:	xchg   BYTE PTR [edx-0x50],ah
  413a9a:	dec    esi
  413a9b:	or     al,0x6f
  413a9d:	inc    edi
  413a9e:	rcl    DWORD PTR [ebp-0x3e],cl
  413aa1:	inc    edx
  413aa2:	mov    al,0x21
  413aa4:	inc    ecx
  413aa5:	cwde   
  413aa6:	stc    
  413aa7:	adc    DWORD PTR [eax],edi
  413aa9:	test   DWORD PTR [edi],ebp
  413aab:	call   0x28e59282
  413ab0:	xchg   edx,eax
  413ab1:	shl    DWORD PTR [esi],cl
  413ab3:	in     al,dx
  413ab4:	push   ecx
  413ab5:	sub    eax,0x7e0e3799
  413aba:	sub    eax,0xa31cb545
  413abf:	stc    
  413ac0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ac1:	daa    
  413ac2:	or     eax,0x96040799
  413ac7:	xlat   BYTE PTR ds:[ebx]
  413ac8:	js     0x413a9c
  413aca:	cdq    
  413acb:	push   eax
  413acc:	pop    ebp
  413acd:	adc    DWORD PTR [ebx+esi*2-0x7c],ebp
  413ad1:	add    DWORD PTR [esi+0x245e61ce],0xb16b2df1
  413adb:	xor    eax,0x5a2de795
  413ae0:	push   esi
  413ae1:	jne    0x413ae1
  413ae3:	pop    edi
  413ae4:	loope  0x413b2d
  413ae6:	mov    bl,BYTE PTR [edi]
  413ae8:	pop    edi
  413ae9:	call   0xadea62b6
  413aee:	mov    cl,0x29
  413af0:	sub    dh,cl
  413af2:	test   al,0xc4
  413af4:	jmp    0x413acc
  413af6:	cmp    eax,0xf762bf99
  413afb:	sti    
  413afc:	shr    BYTE PTR [ebp-0x65],1
  413aff:	je     0x413a96
  413b01:	and    eax,0x7fe59d54
  413b06:	mov    ebp,0x8999a12f
  413b0b:	jno    0x413ac4
  413b0d:	mov    ebx,0x605e45a
  413b12:	daa    
  413b13:	pop    eax
  413b14:	dec    ebp
  413b15:	in     eax,dx
  413b16:	ds (bad) 
  413b19:	sub    eax,0xd979c0f0
  413b1e:	int    0x5d
  413b20:	mov    ds:0x11ce4f36,eax
  413b25:	inc    esi
  413b26:	test   eax,0x92ffb72c
  413b2b:	dec    ecx
  413b2c:	sub    eax,0xe03830c6
  413b31:	jo     0x413b71
  413b33:	pop    ecx
  413b34:	sub    al,0x38
  413b36:	outs   dx,DWORD PTR ds:[esi]
  413b37:	lahf   
  413b38:	in     al,0x8c
  413b3a:	loop   0x413b03
  413b3c:	cmp    BYTE PTR [ecx],bh
  413b3e:	int3   
  413b3f:	pop    eax
  413b40:	jg     0x413b0b
  413b42:	adc    eax,DWORD PTR [edx-0x4ea68dc1]
  413b48:	sub    BYTE PTR [esp+edx*2+0x57],al
  413b4c:	jno    0x413b2e
  413b4e:	xor    al,0xd4
  413b50:	inc    DWORD PTR [ecx-0x11]
  413b53:	out    dx,al
  413b54:	mov    bh,0x18
  413b56:	out    0x9c,al
  413b58:	cmp    bh,bh
  413b5a:	mov    DWORD PTR [esi-0x6c8683be],ecx
  413b60:	sub    al,0x1f
  413b62:	or     edx,DWORD PTR [edx]
  413b64:	lods   eax,DWORD PTR ds:[esi]
  413b65:	fist   WORD PTR [ecx+0x59]
  413b68:	or     cl,cl
  413b6a:	sub    dh,ah
  413b6c:	pop    ds
  413b6d:	jl     0x413bea
  413b6f:	jge    0x413af7
  413b71:	cli    
  413b72:	jns    0x413b9a
  413b74:	pop    esi
  413b75:	fldcw  WORD PTR [esi]
  413b77:	and    eax,0x4006933a
  413b7c:	mov    BYTE PTR [edi+0x64],dh
  413b7f:	ins    DWORD PTR es:[edi],dx
  413b80:	add    edx,DWORD PTR cs:[eax]
  413b83:	sub    edx,DWORD PTR [edx-0x44856f36]
  413b89:	xlat   BYTE PTR ds:[ebx]
  413b8a:	(bad)  
  413b8b:	push   edi
  413b8c:	mov    dl,0x43
  413b8e:	pop    ecx
  413b8f:	xlat   BYTE PTR ds:[ebx]
  413b90:	cmp    al,BYTE PTR [eax-0x50576cb7]
  413b96:	call   0xb46b986f
  413b9b:	mov    ds:0x8c2b03f5,al
  413ba0:	fwait
  413ba1:	mov    ah,0x56
  413ba3:	sub    al,0x99
  413ba5:	push   edx
  413ba6:	je     0x413bf6
  413ba8:	pop    edi
  413ba9:	xchg   ebx,eax
  413baa:	mov    dh,0x21
  413bac:	inc    edx
  413bad:	adc    DWORD PTR [ebx+ebp*1],edx
  413bb0:	(bad)  
  413bb2:	icebp  
  413bb3:	mov    esi,0xe93d1a5f
  413bb8:	sub    edx,eax
  413bba:	aam    0xcc
  413bbc:	adc    DWORD PTR [ebx-0xc],esp
  413bbf:	sub    esp,edx
  413bc1:	in     al,dx
  413bc2:	lods   al,BYTE PTR ds:[esi]
  413bc3:	push   ss
  413bc4:	add    DWORD PTR [eax],esp
  413bc6:	push   edx
  413bc7:	jno    0x413bc1
  413bc9:	and    al,0xd5
  413bcb:	inc    ebp
  413bcc:	push   es
  413bcd:	push   esp
  413bce:	sbb    eax,0x4bf27eee
  413bd3:	add    eax,0xe131feac
  413bd8:	inc    esi
  413bd9:	cmc    
  413bda:	rcl    ch,1
  413bdc:	sbb    DWORD PTR [esi-0x148476dd],edx
  413be2:	test   BYTE PTR [ebx-0x37cc07b3],0x8b
  413be9:	inc    ebp
  413bea:	adc    BYTE PTR [ebx],al
  413bec:	into   
  413bed:	mov    DWORD PTR [eax],ecx
  413bef:	pop    edi
  413bf0:	pop    esi
  413bf1:	pop    ebx
  413bf2:	leave  
  413bf3:	ret    0xc
  413bf6:	jne    0x413c0b
  413bf8:	adc    BYTE PTR [eax],al
  413bfa:	std    
  413bfb:	push   ds
  413bfc:	adc    BYTE PTR [eax],al
  413bfe:	aas    
  413bff:	adc    BYTE PTR fs:[eax],al
  413c02:	sbb    cl,BYTE PTR [esi]
  413c04:	adc    BYTE PTR [eax],al
  413c06:	sbb    BYTE PTR [eax+0x10],dl
  413c09:	add    BYTE PTR [eax],ah
  413c0b:	push   es
  413c0c:	adc    BYTE PTR [eax],al
  413c0e:	out    dx,al
  413c0f:	jg     0x413c21
  413c11:	add    BYTE PTR [ebx],al
  413c13:	dec    edi
  413c14:	adc    BYTE PTR [eax],al
  413c16:	mov    esp,0x5500103b
  413c1b:	jns    0x413c2d
  413c1d:	add    BYTE PTR [edx],ch
  413c1f:	inc    eax
  413c20:	adc    BYTE PTR [eax],al
  413c22:	sbb    BYTE PTR ds:0x3d1c0041,bh
  413c28:	inc    ecx
  413c29:	add    BYTE PTR [eax],ah
  413c2b:	cmp    eax,0x3d240041
  413c30:	inc    ecx
  413c31:	add    BYTE PTR [eax],ch
  413c33:	cmp    eax,0x3d2c0041
  413c38:	inc    ecx
  413c39:	add    BYTE PTR [eax],dh
  413c3b:	cmp    eax,0x3d340041
  413c40:	inc    ecx
	...
  413c51:	add    BYTE PTR [eax],al
  413c53:	add    BYTE PTR [esi+0x4df185],bh
  413c59:	add    BYTE PTR [eax],al
  413c5b:	add    BYTE PTR [edx],al
  413c5d:	add    BYTE PTR [eax],al
  413c5f:	add    BYTE PTR [eax+0x0],dl
  413c62:	add    BYTE PTR [eax],al
  413c64:	inc    eax
  413c65:	cmp    eax,0x31400001
  413c6a:	add    DWORD PTR [eax],eax
  413c6c:	scas   al,BYTE PTR es:[edi]
  413c6d:	inc    ebp
  413c6e:	adc    BYTE PTR [eax],al
  413c70:	inc    esp
  413c71:	cmp    edx,DWORD PTR [eax]
  413c73:	add    BYTE PTR [edi+0x4e],bl
  413c76:	adc    BYTE PTR [eax],al
  413c78:	push   0x4b
  413c7a:	adc    BYTE PTR [eax],al
  413c7c:	cmp    edx,DWORD PTR fs:[eax]
  413c7f:	add    BYTE PTR [eax+0x43001057],bl
  413c85:	sbb    dl,BYTE PTR [eax]
  413c87:	add    BYTE PTR [esi+0x39],bl
  413c8a:	adc    BYTE PTR [eax],al
  413c8c:	idiv   BYTE PTR [ebx]
  413c8e:	inc    ecx
  413c8f:	add    dl,bh
  413c91:	cmp    eax,DWORD PTR [ecx+0x0]
  413c94:	(bad)  
  413c95:	cmp    eax,DWORD PTR [ecx+0x0]
  413c98:	add    bh,BYTE PTR [ecx+eax*2]
  413c9b:	add    BYTE PTR [esi],al
  413c9d:	cmp    al,0x41
  413c9f:	add    BYTE PTR [edx],cl
  413ca1:	cmp    al,0x41
  413ca3:	add    BYTE PTR [esi],cl
  413ca5:	cmp    al,0x41
  413ca7:	add    BYTE PTR [edx],dl
  413ca9:	cmp    al,0x41
  413cab:	add    BYTE PTR [esi],dl
  413cad:	cmp    al,0x41
  413caf:	add    BYTE PTR [edx],bl
  413cb1:	cmp    al,0x41
  413cb3:	add    BYTE PTR [esi],bl
  413cb5:	cmp    al,0x41
  413cb7:	add    al,bl
  413cb9:	cmp    al,0x41
  413cbb:	add    ah,bl
  413cbd:	cmp    al,0x41
  413cbf:	add    al,ah
  413cc1:	cmp    al,0x41
  413cc3:	add    ah,ah
  413cc5:	cmp    al,0x41
  413cc7:	add    al,ch
  413cc9:	cmp    al,0x41
  413ccb:	add    ah,ch
  413ccd:	cmp    al,0x41
  413ccf:	add    al,dh
  413cd1:	cmp    al,0x41
  413cd3:	add    ah,dh
  413cd5:	cmp    al,0x41
  413cd7:	add    BYTE PTR [ebp+0x16],ah
  413cda:	adc    BYTE PTR [eax],al
  413cdc:	sub    BYTE PTR [ecx+0x10],0x0
  413ce0:	cli    
  413ce1:	adc    BYTE PTR [bx+si],al
  413ce4:	sbb    BYTE PTR [ecx],al
  413ce6:	adc    BYTE PTR [eax],al
  413ce8:	pop    edi
  413ce9:	inc    esp
  413cea:	adc    BYTE PTR [eax],al
  413cec:	sbb    BYTE PTR [edx],ch
  413cee:	adc    BYTE PTR [eax],al
  413cf0:	in     eax,dx
  413cf1:	pop    ss
  413cf2:	adc    BYTE PTR [eax],al
  413cf4:	pop    esp
  413cf5:	sub    BYTE PTR [eax],dl
  413cf7:	add    BYTE PTR [esp+edi*1+0x41],ch
  413cfb:	add    BYTE PTR [eax+0x3c],dh
  413cfe:	inc    ecx
  413cff:	add    BYTE PTR [esp+edi*1+0x41],dh
  413d03:	add    BYTE PTR [eax+0x3c],bh
  413d06:	inc    ecx
  413d07:	add    BYTE PTR [esp+edi*1+0x41],bh
  413d0b:	add    BYTE PTR [eax-0x7bffbec4],al
  413d11:	cmp    al,0x41
  413d13:	add    BYTE PTR [eax-0x17ffbec4],cl
  413d19:	aaa    
  413d1a:	adc    BYTE PTR [eax],al
  413d1c:	cmp    DWORD PTR [esi],0x51e90010
  413d22:	adc    BYTE PTR [eax],al
  413d24:	push   cs
  413d25:	dec    eax
  413d26:	adc    BYTE PTR [eax],al
  413d28:	mov    ah,0x22
  413d2a:	adc    BYTE PTR [eax],al
  413d2c:	lock xor BYTE PTR [eax],dl
  413d2f:	add    BYTE PTR [edi+0x6b],ah
  413d32:	adc    BYTE PTR [eax],al
  413d34:	outs   dx,BYTE PTR ds:[esi]
  413d35:	or     eax,0x10
  413d3a:	add    BYTE PTR [eax],al
  413d3c:	add    BYTE PTR [eax],al
  413d3e:	add    BYTE PTR [eax],al
  413d40:	push   edx
  413d41:	push   ebx
  413d42:	inc    esp
  413d43:	push   ebx
  413d44:	push   ebp
  413d45:	dec    ebp
  413d46:	sbb    al,0xe7
  413d48:	mov    dl,0x61
  413d4a:	push   0x4b
  413d4c:	mov    esi,0x5eb94c9c
  413d51:	adc    cl,BYTE PTR [ebp+0x1ef]
  413d57:	add    BYTE PTR [ebp+0x3a],al
  413d5a:	pop    esp
  413d5b:	dec    ecx
  413d5c:	outs   dx,BYTE PTR ds:[esi]
  413d5d:	jae    0x413dd3
  413d5f:	popa   
  413d60:	ins    BYTE PTR es:[edi],dx
  413d61:	ins    BYTE PTR es:[edi],dx
  413d62:	and    BYTE PTR [eax+0x61],dl
  413d65:	je     0x413dcf
  413d67:	pop    esp
  413d68:	push   ebx
  413d69:	outs   dx,BYTE PTR gs:[esi]
  413d6b:	fs push ebx
  413d6d:	dec    ebp
  413d6e:	push   ebx
  413d6f:	pop    esp
  413d70:	dec    ebp
  413d71:	popa   
  413d72:	imul   ebp,DWORD PTR [esi+0x5c],0x46627553
  413d79:	outs   dx,DWORD PTR ds:[esi]
  413d7a:	ins    BYTE PTR es:[edi],dx
  413d7b:	fs gs jb 0x413ddb
  413d7f:	dec    ecx
  413d80:	outs   dx,BYTE PTR ds:[esi]
  413d81:	arpl   WORD PTR [ebp+esi*2+0x64],bp
  413d85:	gs jae 0x413de4
  413d88:	dec    ecx
  413d89:	outs   dx,BYTE PTR ds:[esi]
  413d8a:	outs   dx,WORD PTR ds:[esi]
  413d8c:	inc    ecx
  413d8d:	jo     0x413dff
  413d8f:	add    BYTE PTR [eax],al
  413d91:	add    BYTE PTR [eax],al
  413d93:	add    BYTE PTR [esi+0x4df185],bh
  413d99:	add    BYTE PTR [eax],al
  413d9b:	add    dl,al
  413d9d:	cmp    eax,0x10001
  413da2:	add    BYTE PTR [eax],al
  413da4:	add    DWORD PTR [eax],eax
  413da6:	add    BYTE PTR [eax],al
  413da8:	add    DWORD PTR [eax],eax
  413daa:	add    BYTE PTR [eax],al
  413dac:	mov    eax,0xbc00013d
  413db1:	cmp    eax,0x3dc00001
  413db6:	add    DWORD PTR [eax],eax
  413db8:	mov    ds:0xce000026,al
  413dbd:	cmp    eax,0x1
  413dc2:	push   ebx
  413dc3:	jns    0x413e32
  413dc5:	bound  ebp,QWORD PTR [edi+0x6c]
  413dc8:	imul   esp,DWORD PTR [ebx+0x45],0x3f006578
  413dcf:	inc    ebx
  413dd0:	ins    BYTE PTR es:[edi],dx
  413dd1:	outs   dx,DWORD PTR ds:[esi]
  413dd2:	jae    0x413e39
  413dd4:	push   edi
  413dd5:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  413ddc:	popa   
  413ddd:	je     0x413e48
  413ddf:	outs   dx,DWORD PTR ds:[esi]
  413de0:	outs   dx,BYTE PTR ds:[esi]
  413de1:	inc    ebx
  413de2:	ins    BYTE PTR es:[edi],dx
  413de3:	outs   dx,DWORD PTR ds:[esi]
  413de4:	jae    0x413e4b
  413de6:	push   edi
  413de7:	.byte 0x69
